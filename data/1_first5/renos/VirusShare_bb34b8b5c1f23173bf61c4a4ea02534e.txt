incl
push
add
in
pop
lock
cmp
jns
sti
call
mov
xchg
lea
inc
cmp
jp
xchg
int
jge
mov
adc
dec
mov
mov
mov
mov
lea
mov
lea
inc
mov
dec
inc
cmp
mov
jnp
mov
data16
into
in
rcll
xor
idiv
jnp
in
mov
mov
int3
in
fcom
into
sbb
push
mov
dec
xchg
mov
cld
inc
mov
lea
inc
mov
out
mov
mov
mov
decb
pop
hlt
jne
mov
lea
inc
mov
jle
and
in
lcall
xchg
inc
sub
xchg
lock
cmp
jbe
dec
mov
out
out
mov
inc
inc
lea
dec
dec
cmp
push
inc
clc
jg
sti
mov
xchg
inc
dec
into
lock
mov
loopne
lock
push
pop
dec
mov
cmp
add
push
cmp
fdivrl
nop
jno
and
dec
dec
cmp
adc
daa
test
push
das
xor
pop
sbb
mov
mov
out
mov
aaa
mov
loop
clc
mov
mov
mov
mov
xchg
insl
call
test
mov
idivl
push
add
call
sub
pop
loopne
movb
xor
clc
dec
xchg
loop
fdivrl
jp
mov
or
lea
out
loop
inc
xchg
shrl
insb
nop
sbb
dec
loopne
xchg
jl
jg
clc
or
aaa
int
mov
cld
roll
push
pusha
cmp
push
or
cmpsl
mov
adc
mov
push
inc
mov
push
mov
add
adc
cmp
testb
push
sbb
xchg
cmp
mov
mov
dec
dec
mov
inc
psubq
cwtl
dec
jp
mov
cmp
push
pop
loop
ret
push
jl
fstps
hlt
mov
push
lock
pop
jecxz
cltd
mov
inc
inc
dec
cmp
sbb
pop
mov
mov
decl
std
mov
mov
inc
inc
inc
cmp
jbe
lock
in
std
add
pop
mov
sbb
ja
inc
pushl
jl
jb
cmp
sbb
push
sbb
mov
mov
jg
push
push
fstpt
sbb
dec
mov
and
mov
jmp
je
mov
cs
rorb
fcomip
pop
inc
pusha
dec
sbb
jmp
mov
push
call
pop
cmp
stc
int3
fmull
fcom
rcrb
xor
sub
pushf
pushf
pushf
sub
sbb
pushf
pushf
pushf
sbb
or
popf
pushf
pushf
or
cld
jb
jb
hlt
lock
leave
in
jbe
call
dec
leave
leave
leave
leave
push
movsb
mov
leave
cwtl
xchg
nop
mov
leave
leave
leave
mov
leave
js
jo
leave
leave
leave
leave
push
shl
int
push
mov
add
inc
in
push
lods
lds
cmp
sbb
clc
pop
pop
pop
ret
aas
int
shr
mov
mov
fdiv
jg
incb
test
add
sbb
test
jb
jg
inc
mov
xor
add
rorb
cmp
or
xchg
scas
sbb
je
repnz
mov
and
xor
mov
pop
sti
fbstp
and
xor
jle
pop
aas
lock
lock
add
dec
cwtl
add
js
mov
sub
add
pop
out
fbstp
repz
jne
mov
mov
xlat
fidivrs
fisttpll
stc
adc
cld
out
mov
mov
add
add
cld
add
push
lock
mov
add
push
lea
lea
lock
jge
negl
or
adc
loope
lcall
add
sub
cmp
loop
clc
imull
imul
push
mov
pop
pop
cmc
sub
pop
sub
pop
sub
sbb
mov
add
scas
pop
push
aad
xchg
bound
adc
add
mov
std
addr16
in
push
sub
jae
in
mov
push
mov
xchg
and
fisttpll
scas
es
fcmovu
outsl
mov
shll
and
adc
adc
loop
and
jg
stos
jno
and
jle
in
mov
mov
enter
aas
jae
xchg
aad
push
jge
cs
and
scas
pop
je
fs
mov
mov
pop
outsb
pop
in
jle
addr16
stos
shl
pop
ss
mov
xor
dec
xor
outsb
push
sub
xlat
cmpsb
or
std
in
lcall
pop
cmpsb
cmpsl
and
pop
mov
lea
loop
mov
fcomip
mov
and
dec
jecxz
orb
test
mov
ss
nop
sub
dec
mov
movsb
dec
mov
stos
dec
cmpsb
mov
sub
stos
sbb
fwait
sbb
int3
mov
sbb
in
fdivs
mov
repnz
sahf
int3
icebp
int3
loop
cli
into
bound
movsb
sub
dec
negb
scas
and
es
imul
and
adcb
and
dec
mov
mov
jae
dec
jne
xor
aad
adc
call
imul
lcall
pop
mov
repnz
jns
out
aas
lods
movsb
iret
faddl
dec
adc
sub
sarl
sub
stos
and
mov
or
loop
jl
and
popf
mov
movsl
aaa
adc
outsb
and
cmpsb
shrb
jg
ja
mov
pop
push
scas
mov
sbb
pop
xor
jbe
lcall
pop
jp
loop
aam
lret
lock
loop
testb
mov
lcall
pusha
xchg
push
jp
xor
inc
imul
xchg
xlat
jl
int
dec
cmpsb
push
adc
or
mov
inc
ss
test
push
sub
test
mov
hlt
loop
pop
mov
pop
shll
pushf
sub
sub
out
xchg
ret
bound
cmp
sub
fisttps
pusha
sub
in
pop
aad
or
int3
pop
inc
dec
add
sbb
mov
adc
xchg
addb
lds
pop
pop
mov
jecxz
int3
mov
pop
mov
repz
push
ds
mov
loope
out
stos
and
cmc
dec
sub
pop
inc
dec
cmpsb
inc
mov
fwait
dec
add
add
ret
lea
jg
add
aas
xor
divl
test
jne
push
daa
push
movsb
add
inc
imull
jmp
pop
lock
call
call
outsl
add
inc
push
push
or
movzwl
dec
test
outsl
popw
jp
add
in
movl
mov
lea
mov
inc
ret
sbb
add
call
mov
add
cmp
jbe
inc
jmp
fmuls
push
cmpl
je
pop
or
sbb
xchg
or
push
sbb
subl
cmp
jle
adc
or
jge
or
jae
iret
inc
dec
rcll
cltd
jno
sbb
or
pushl
fcomp
sub
dec
in
jne
ret
dec
outsl
popa
fs
imul
jb
jb
inc
testb
outsb
push
push
outsb
idivl
jo
imul
insb
add
je
popa
insb
inc
insb
insb
outsl
arpl
mov
pop
inc
push
bound
mov
mov
pop
mov
notb
push
mov
inc
daa
incb
mov
sahf
hlt
lods
fisttps
xor
cmp
jp
inc
lea
cmp
lea
push
andl
sbb
add
adc
arpl
gs
ja
xchg
jnp
or
pop
mov
add
adc
xor
mov
dec
or
data16
outsb
mov
lea
enter
lea
icebp
sti
fbstp
inc
mov
fdivp
dec
mov
mov
in
lea
and
mov
mov
mov
jo
mov
dec
cld
sbb
sbb
xor
cmp
js
das
inc
sti
push
push
dec
adc
push
dec
xchg
sbb
push
dec
inc
subl
out
je
inc
sbb
cli
mov
insb
adc
cmp
adc
push
into
xor
xchg
mov
inc
cmp
jnp
push
pop
loope
in
lods
jle
loope
xor
or
xchg
ret
pop
jmp
or
lea
mov
jp
pop
cmc
negl
cld
mov
dec
dec
lea
mov
dec
pushw
clc
ljmp
clc
push
loope
ret
mov
mov
mov
cld
adcl
jbe
mov
mov
mov
hlt
rorb
adc
mov
shl
pop
sub
push
hlt
push
adc
dec
cmc
add
pop
xchg
sub
mov
movsb
or
inc
xchg
pop
mov
and
pop
mov
add
aam
rcl
aam
shlb
fsub
outsl
xor
push
add
imul
push
jno
sarb
int3
mov
push
movsb
test
in
inc
mov
add
div
pop
xchg
enter
sbb
adc
and
pop
xlat
rcrb
popf
je
sahf
ljmp
cli
sbb
lea
clc
mulb
out
or
stos
sbb
and
ljmp
inc
dec
outsl
jp
cmp
dec
dec
cmp
adc
dec
inc
mov
xchg
jae
cmpsb
push
pop
jno
ret
scas
cmpb
pop
ljmp
add
jecxz
stos
rcl
outsb
jle
xor
mov
mov
mov
cmp
ljmp
cmp
mov
pop
xor
mov
sub
clc
inc
add
shl
mov
xor
dec
mov
ja
rol
call
mov
shlb
mov
sarb
mov
xchg
add
sbb
ss
mov
out
cld
cmp
jns
cld
mov
mov
ret
sub
out
or
std
mov
cwtl
in
mov
cld
cmp
jbe
mov
mov
mov
outsl
lock
leave
push
and
sbb
bound
jo
inc
inc
adc
repnz
das
mov
adc
push
jno
or
roll
icebp
cmp
xor
js,pn
mov
ret
dec
xchg
push
inc
daa
dec
dec
inc
ficoms
test
or
xor
cmp
iret
fidivrs
xor
xor
push
xor
xor
aaa
xor
xor
incl
add
sub
push
into
gs
jb
popa
stc
mov
arpl
fs
jae
add
hlt
and
adc
fdivrs
in
pusha
sti
stos
les
sub
add
ret
inc
push
add
add
lahf
pusha
sbbb
mov
xchg
pushf
add
icebp
mov
push
jns
add
arpl
gs
popa
clc
and
fistl
mov
add
or
fidivl
xor
add
fimull
arpl
cli
cmpsb
inc
xchg
cmpsl
cld
les
sahf
or
add
icebp
lods
je
movq
mov
mov
adc
sahf
and
sub
stc
cmp
and
xor
xor
jp
add
mov
mov
cmp
lods
add
and
enter
push
mov
enter
cli
call
inc
sub
inc
xor
fidivl
or
aas
cmp
cmp
dec
sub
and
or
mov
dec
je
enter
push
mov
nop
pop
inc
les
test
and
or
hlt
add
mov
loope
cmp
push
leave
or
mov
std
mov
add
add
lods
mov
sahf
lahf
jp
dec
lock
inc
cld
inc
xor
outsl
add
pop
lock
and
cmp
aad
and
pop
addl
and
mov
cld
add
das
lock
imul
shlb
out
jl
push
lods
pop
add
fcomps
adc
je
pop
sbb
pop
cmp
and
lcall
decl
jne
add
push
cld
mov
popa
fisttpll
out
rorb
call
sti
lods
stos
out
call
cwtl
testb
lea
lcall
adc
sbb
mov
sbb
push
jle
lods
in
and
xor
add
push
lock
pop
in
push
jb
jmp
ja
push
movsb
addr16
and
jne
inc
mov
and
jb
xor
andb
or
fdiv
adc
add
test
cs
pushf
sahf
add
push
cwtl
aam
cmpl
mov
pop
clc
add
or
dec
enter
pop
test
icebp
incl
pop
add
repz
xor
cs
insb
pop
add
gs
and
xchg
outsb
sbb
fs
add
cmpxchg
fbstp
pop
popa
jb
jge
fs
jb
jl
imul
decl
insl
insl
add
dec
popa
outsb
insb
dec
outsb
jl
jns
addr16
insb
fs
jae
jo
int
lcall
imul
outsl
insb
insl
inc
bound
arpl
outsl
jnp
dec
and
mov
insl
fs
pop
jl
inc
addr16
inc
gs
outsb
add
je
mov
mov
cmpsb
test
dec
js
xor
xor
popf
js
out
pop
or
loopne
pop
adc
mov
nop
mov
icebp
inc
and
ds
lods
loopne
jno
push
add
pop
inc
or
mov
or
mov
pusha
enter
push
ret
insb
and
add
add
movsl
flds
pop
sub
sbb
int3
mov
inc
add
cld
movb
xchg
int3
pop
mov
insb
push
jmp
scas
fadds
sbb
mov
push
add
or
pop
adcl
hlt
pusha
jne
mov
mov
lidtl
lods
jge
adc
xor
pop
roll
out
lods
in
add
push
lock
imul
loopne
in
adc
paddw
mwait
xchg
call
or
in
rcrl
add
pop
ss
add
addr16
ret
lret
sarb
pop
nop
jl
pop
imull
adc
mov
pop
sub
push
add
jl
mov
test
and
cld
aas
and
cmp
xor
cmp
adc
jmp
cmp
xor
cmp
xor
mov
shrb
lock
cmp
clc
incl
push
movsb
cmpb
jne
jo
dec
pop
sub
test
inc
inc
aam
inc
push
and
outsl
imul
out
inc
jge
jp
sbb
into
mov
lds
imul
push
je
or
ret
aaa
mov
or
clc
jmp
add
mov
hlt
xor
adc
add
in
xor
mov
fcoml
movb
add
mov
popa
stc
mov
push
shrb
test
popa
xchg
mov
xchg
into
iret
outsb
aaa
pop
or
cld
add
push
inc
aad
push
ret
dec
mov
add
add
cmp
iret
add
dec
cmc
movb
xchg
inc
and
clc
cmp
add
cmp
dec
or
add
dec
test
add
test
aas
mov
movsl
out
push
popa
add
mov
int3
pop
xor
cmovo
cmp
sub
pop
push
test
nop
and
inc
jecxz
out
mov
imul
ret
cmpw
ja
mov
jnp
adc
mov
fmull
mov
add
in
add
aaa
adc
adc
dec
insb
cmp
shll
add
lds
lcall
cs
inc
sahf
in
dec
add
mov
add
mov
dec
scas
loop
lret
push
stc
fsubr
xchg
fsubl
sbb
xchg
je
arpl
ror
divb
mov
sub
pushf
or
mov
les
push
push
negl
mov
xor
cmp
cmp
xor
repnz
call
aaa
xor
xor
xor
aaa
cmp
push
cmp
xor
xor
rcrb
aas
clc
xchg
push
add
xor
mov
test
push
fs
pop
add
dec
add
or
or
mov
mov
lock
sbb
daa
pop
mov
nop
pop
and
mov
and
jnp
call
lds
or
jae
inc
daa
les
jo
jg
out
pop
pop
adc
sub
mov
push
mov
mov
inc
sub
ret
test
lods
mov
dec
dec
inc
mov
dec
mov
mov
push
sbb
ret
clc
push
or
pop
dec
dec
into
emms
sti
pop
dec
inc
mov
in
daa
mov
mov
add
lahf
mov
add
push
mov
mov
lds
ja
inc
fdiv
jo
out
fwait
jle
out
cmp
sbb
mov
aas
clc
cmp
fistl
xchg
sub
lds
test
data16
andb
dec
add
outsl
pop
test
aam
mov
dec
dec
rorb
jp
xchg
xchg
in
outsl
xor
dec
mov
mov
inc
dec
mov
sar
sbb
std
cmpsl
inc
dec
dec
mov
xor
sbb
inc
mov
mov
mov
inc
inc
clc
mov
aad
mov
mov
push
push
xor
je
push
clc
imul
out
dec
clc
sub
outsb
adc
jp
sub
enter
clc
cmpsb
fists
jns
dec
or
xchg
cmp
adc
fdivr
jne
popa
inc
adc
or
xor
ljmp
xchg
call
std
stos
sbb
movsl
push
aas
das
push
leave
shll
cmp
mov
dec
mov
out
rolb
in
jnp
mov
dec
push
cmp
jo
icebp
jle
les
mov
popf
rorl
cld
jnp
mov
dec
dec
lea
and
cmp
je
or
mov
sbb
add
std
call
pusha
clc
fisttps
jo
outsb
pop
sub
mov
inc
xor
pop
test
mov
mov
push
cmp
xchg
mov
adc
xor
mov
mov
dec
mov
jno
loop
cmp
and
xchg
jne
aas
mov
mov
mov
loope
mov
mov
das
arpl
clc
in
mov
mov
inc
mov
es
decl
or
dec
fmuls
ret
push
mov
jmp
hlt
dec
and
or
and
pop
icebp
lock
inc
inc
push
jne
add
and
bound
test
andb
and
add
push
and
or
dec
xchg
or
sbb
pop
or
add
add
push
test
dec
loope
push
or
pop
mov
pop
mov
ret
pusha
jnp
pop
mov
add
sub
xchg
mov
or
cwtl
add
push
mov
test
and
sub
jno
andb
lock
or
xchg
push
mov
rcrb
or
in
or
cmp
sub
xchg
fstps
mov
mov
mov
jmp
nop
pushf
push
add
call
sarb
mov
in
mov
xchg
mov
mov
lea
jmp
sbb
cmp
adc
dec
pop
in
sbb
mov
mov
in
mov
dec
mov
incb
xchg
lods
lock
sbb
mov
in
jle
mov
mov
cmpsl
cmp
js
mov
ds
cmp
cmp
call
icebp
jg
std
adc
push
mov
cmp
jnp
mov
xchg
call
stos
sbb
mov
mov
xchg
cmp
loope
dec
mov
add
test
cmpsl
fimull
call
xor
ja
dec
jp
es
xchg
ljmp
loopne
aaa
xor
cmp
xor
cmp
xor
pusha
fistpll
add
xor
xor
xor
xor
aas
in
mov
or
pusha
out
dec
sbb
jecxz
or
and
out
mov
xchg
popa
fdivrl
pop
add
add
inc
inc
daa
push
inc
xchg
pop
stos
push
orb
or
push
ret
inc
inc
xor
std
pop
leave
inc
xor
jge
add
add
add
or
fcomp
sbb
gs
daa
addr16
and
or
adc
das
daa
fisttps
sub
jle
push
rcrb
ljmp
decl
jae
dec
dec
add
push
add
add
add
add
inc
or
dec
add
fcmovne
mov
push
pop
inc
add
add
pop
push
dec
mov
jle
arpl
je
dec
dec
inc
xor
sub
add
std
out
std
pop
jne
bndstx
adc
add
adc
mov
sti
pop
add
adc
push
add
sbb
add
or
add
sbb
or
mov
pusha
pop
inc
push
mov
das
fadd
loopne
or
fnstsw
sti
pop
xchg
loopne
pop
adc
sub
jne
cmp
add
mov
sbb
mov
ja
dec
ja
adc
and
neg
push
add
inc
inc
jae
add
and
testl
cmpsb
enter
sahf
and
pop
aaa
cmpsl
and
sbb
and
data16
dec
mov
sbb
sub
sti
or
leave
daa
dec
insl
insl
dec
lea
add
and
mov
and
sbb
sub
movsb
push
testb
jae
imul
stos
pop
jne
sub
flds
inc
or
inc
insb
adc
cmp
dec
dec
nop
popa
jae
loop
sbb
mov
mov
adc
or
jl
inc
loopne
sub
xor
xchg
insb
fcom
es
insl
insl
push
or
in
pop
imul
or
adc
pop
push
stos
pop
jae
test
xchg
sbb
push
mov
xchg
mov
std
pop
xchg
mov
or
pop
add
xor
mov
jmp
das
xor
ss
sbb
push
dec
mov
xchg
adc
push
adc
out
xlat
mov
xchg
mov
inc
adc
adc
iret
aaa
push
mov
bound
movsl
insl
mov
pop
adc
push
lods
add
sbb
unpckhps
mov
push
jne
inc
pop
sbb
lods
mov
push
aad
nop
cwtl
push
inc
lret
pop
movsl
cwtl
mov
pushl
xorl
cmp
inc
cmp
jnp
imul
aad
mov
xchg
mov
gs
andl
sub
leave
movl
add
sub
sub
push
inc
jg
insl
test
paddusb
dec
dec
test
mov
test
dec
jg
push
xlat
push
lahf
and
or
inc
push
adc
test
push
shll
pop
dec
repz
sub
fcmovnu
addb
aaa
sub
lret
daa
push
fsubrs
rcr
cmc
or
jno
imul
out
push
sbb
and
sub
arpl
mov
insb
lds
inc
movl
aam
jns
pop
stos
add
and
mov
adc
xor
pusha
xor
push
addl
pop
mov
daa
adc
roll
xor
imul
fcoms
sub
inc
popf
jge
inc
fcmovnu
jne
loope
lds
loop
in
roll
sub
sub
xchg
mov
mov
das
push
or
sub
mov
addr16
pop
pop
inc
fildll
push
ret
icebp
bound
test
test
xchg
pop
and
and
pop
xor
adc
insl
test
adc
test
shrl
setno
or
dec
addr16
xchg
lcall
test
pop
sbbb
mov
push
push
mov
mov
outsb
movsb
jecxz
addl
jno
mov
push
shll
cmp
inc
lods
or
push
test
aad
sub
jno
ret
push
push
pop
fst
sti
mov
or
add
bound
cltd
or
inc
or
test
add
orb
jg
xchg
mov
jne
sti
pop
sub
mov
cmp
cmp
jbe
lods
arpl
add
neg
mov
jae
adc
test
xchg
jae
fs
ja
outsb
xchg
add
jle
in
dec
ds
add
add
add
bnd
sahf
add
sahf
ja
incl
fiaddl
gs
xchg
mov
mov
add
add
jno
mov
adc
fidivl
scas
sub
push
sbb
iret
push
inc
testl
push
cmpsl
jno
in
fisubs
test
add
loopne
cmp
inc
sti
stos
cmp
adc
mov
mov
subl
stos
pop
out
push
fcomp
xchg
add
dec
lock
fidivrl
iret
inc
int3
xorl
das
cmp
mov
inc
mov
fisubrs
or
lret
cmpl
xchg
fcmove
mov
addl
cmp
add
sbb
or
addl
fwait
sub
fiaddl
jmp
push
jo
pop
sbb
inc
sub
dec
pop
jecxz
lea
pop
inc
and
add
xor
ret
xchg
fcmove
sub
sub
in
sub
fwait
lds
aaa
cmpb
mov
scas
js
std
inc
xor
arpl
inc
lahf
inc
incl
aas
lds
fmuls
iret
xchg
pop
lock
fistpll
xorl
aaa
cmpsl
inc
mov
mov
je
jecxz
mov
jnp
repz
pop
fisttpl
das
push
ficoms
and
add
jo
sti
test
mov
pop
wrmsr
jg,pn
or
mov
and
sbb
sub
inc
pop
add
xor
das
mov
dec
and
mov
sbb
or
push
imul
pop
lahf
imul
jne
jecxz
fsts
in
mov
mov
testl
call
pushf
or
dec
inc
gs
and
or
shll
cwtl
mov
adc
ret
inc
dec
fxch
nop
mov
and
push
and
lret
popl
pop
in
popf
out
loope
aas
outsl
cmpsl
fcmovbe
mov
outsb
fisubl
scas
or
scas
ficoml
fcmovnu
dec
stos
dec
std
call
and
mov
jo
and
das
inc
gs
inc
ja
and
imul
fisubs
xor
subl
or
cmp
and
pop
adc
outsb
aaa
iret
xchg
imul
adc
add
mov
imul
mov
js
out
adc
and
movsb
arpl
inc
scas
ficomps
ss
pop
jae
out
sbb
pushf
push
dec
or
movsl
fimuls
testb
sbb
jae
sub
loopne
outsb
das
arpl
jnp
mov
outsl
and
adc
imul
pop
and
jae
ret
imul
cmpb
xchg
lret
jg
lea
dec
roll
dec
jnp
xchg
dec
fildll
dec
dec
popa
lahf
fcoml
or
mov
inc
jno
or
push
mov
cmpsl
jnp
int3
inc
pop
mov
cmp
fildl
fsubrs
fidivl
adc
mov
scas
jbe
in
dec
aas
fsubs
stos
and
aaa
push
sub
pop
shll
push
icebp
mov
imul
pand
jnp
clc
mov
ljmp
mov
push
outsl
or
inc
ss
ss
or
fistps
mov
xchg
insb
fdivs
xchg
xchg
arpl
push
xor
xchg
insb
data16
imul
ja
outsb
pop
dec
ret
jecxz
jg
out
aad
popf
ret
dec
jmp
arpl
cmp
adc
or
dec
dec
mov
jno
gs
imul
aam
mov
stc
and
jae
fucomi
ret
gs
arpl
pop
cmpsl
cmp
imul
fcoml
mov
sub
fcmovnu
stos
mov
mov
mov
fcomip
mov
adc
test
sub
cltd
and
jl
je
inc
outsb
mov
and
sub
iret
in
jg
loop
loope
loop
lods
add
add
loop
pushl
jle
rolb
or
fiaddl
mov
mov
adc
in
fisubrs
cmp
mov
ds
sub
mov
roll
mov
inc
jg
add
aam
enter
mov
das
jle
sub
mov
fsubrl
adcl
sbb
sbb
imulb
int3
add
add
mov
es
js
scas
cmp
lahf
loope
es
xchg
add
lea
or
loopne
cwtl
lea
loop
fisubl
mov
pop
fcmovnbe
cmp
mov
jns
lds
xor
fistpl
mov
push
fsubrs
cwtl
add
lods
icebp
xchg
ja
cmpsl
je
mov
jb
je
jbe
and
or
cmpsb
and
mov
js
loop
add
in
outsb
daa
int
sbb
int
daa
sahf
mov
loopne
stos
sarl
jle
dec
cmp
mov
test
es
sbb
ret
push
xor
int3
cwtl
ffree
add
add
or
push
sahf
mov
sub
jp
fadd
gs
add
insb
sub
imul
add
mul
mov
lcall
icebp
rorl
jns
bound
add
ss
mov
jg
movsb
xor
fwait
push
xchg
push
loopne
pop
out
ja
sub
sub
jo
rolb
sbb
bound
bnd
stc
add
jle
gs
add
js
push
pop
idivb
in
pushf
sub
sub
rcrb
mov
jbe
inc
roll
cwtl
jb
jl
insl
in
push
jbe
inc
fcomps
jno
adc
mov
mov
xor
lds
xchg
call
add
test
jecxz
lock
add
mov
push
cmp
mov
cmp
mull
add
lock
out
out
add
std
push
push
mov
lods
jmp
icebp
push
add
outsb
fldt
icebp
cmpsl
sbb
inc
mov
out
test
cmp
or
or
mov
mov
sub
loopne
mov
dec
mov
movsb
stos
mov
cli
add
xchg
or
add
push
jo
dec
and
or
and
xchg
inc
or
push
adc
dec
sub
dec
daa
lcall
out
sub
jno
jbe
pop
xor
pop
pop
or
mov
push
jp
fcoms
inc
lods
mov
insl
and
pop
loope
sub
inc
test
cmp
push
dec
movsb
xchg
vpor
lods
xor
inc
inc
js
outsb
mov
or
enter
dec
xlat
es
xchg
push
ror
xchg
inc
push
cld
arpl
add
aaa
je
jo
inc
out
mov
cmp
push
jp
testl
or
xchg
iret
aad
loope
adc
mov
and
mov
mov
mov
xchg
js
mov
scas
push
add
xchg
out
mov
push
and
scas
adc
jbe
jg
cmpsb
fimull
pop
dec
jne
loopne
cmpsl
mov
jecxz
lcall
movsb
push
inc
mulb
jp
mov
inc
fdivrl
jns
clc
jno
mov
mov
sbb
mov
lahf
enter
repnz
cld
rcl
scas
bound
push
and
xchg
insl
jno
sbb
out
sbb
xchg
je
push
push
lcall
jne
je
outsb
sbb
int3
rcll
mov
add
jg
inc
jge
mov
cmp
jmp
cmpsb
in
jle
fimull
sub
add
xor
cwtl
bound
jl
jne
out
adc
testb
in
outsl
bound
dec
fnsetpm(287
push
stos
and
mov
pop
add
dec
jge
inc
test
pushf
ss
or
loope
or
inc
fmuls
andl
std
fs
fstpl
sbb
xchg
lahf
sub
push
ds
jmp
mov
mov
push
add
leave
add
push
cmp
arpl
shlb
lods
enter
xchg
push
aas
and
iret
cld
test
sarb
push
xchg
cmpsl
mov
mov
mov
adc
addb
or
js
loopne
lcall
jae
xor
aad
aad
sbb
outsb
add
bound
pop
int3
mov
mov
or
add
xor
mov
cmc
and
or
adc
cs
add
jo
xlat
sub
daa
cmp
jl
das
push
shl
cmp
push
adc
pusha
pop
icebp
lds
add
add
inc
jle
pop
inc
sbb
and
add
xchg
loopne
xchg
pop
add
iret
and
mov
jl
dec
mov
lahf
pop
sub
shll
mov
inc
pushf
adc
lock
sbb
pop
rolb
sbb
and
cli
rcrb
enter
mov
sbb
mov
icebp
in
mov
faddl
sbb
sarl
ja
ss
xlat
mov
aad
call
add
mov
sbb
add
fucomi
jmp
loopne
and
arpl
sbb
aaa
ret
in
lods
sbb
js
lock
shl
pop
pop
test
test
sbbb
cmp
jo
pop
repnz
push
pop
mov
pop
loopne
add
pop
xchg
ffree
jp
inc
ds
sub
and
popf
or
inc
mov
lds
and
jg
out
sbb
push
and
mov
notb
out
aas
dec
push
int3
and
lcall
js
xor
jp
ds
and
scas
sbb
push
ljmp
mov
adc
sti
or
mov
xchg
or
mov
jp
and
testb
stos
dec
insb
mov
mov
sbb
mov
jle
test
es
cld
and
into
rolb
fcoms
ljmp
test
dec
cmc
pusha
lock
rcrb
mov
xor
cmp
push
out
or
mov
sbb
jae
testl
aas
iret
rsm
cs
xchg
lea
xchg
in
mov
stos
xchg
test
sub
pop
cmp
mov
xor
test
int3
outsb
sub
mov
and
fstps
lds
decl
dec
mov
add
inc
lahf
push
clc
repz
xchg
jno
mov
test
mov
loop
pop
lods
pop
test
andb
and
and
and
fs
pop
mov
xor
cmc
roll
roll
les
imul
iret
dec
stos
and
pop
lahf
mov
adc
or
xchg
sub
out
ret
add
lods
xor
mov
push
pop
add
scas
bound
push
adc
mov
gs
jp
sarb
add
cmpps
loope
out
pop
mov
es
lods
ja
mov
xlat
jle
mov
loop
les
iret
xor
mov
or
cmc
inc
xchg
dec
lds
pop
inc
cld
gs
xchg
mov
adc
sti
std
xchg
ljmp
dec
mov
jno
notb
iret
xor
lcall
dec
lods
xor
cli
stos
push
jo
cmp
jmp
scas
les
into
adc
push
js
xchg
jns
inc
mov
sbb
jp
dec
inc
xchg
popf
xchg
dec
dec
sahf
lret
loopne
adc
fdivs
mov
cli
ds
aad
out
test
cmp
jmp
cmp
sbb
ret
sub
push
add
daa
jo
test
and
clc
rcll
sbb
imul
movsb
lret
adc
inc
mov
xchg
xchg
cmpb
subl
or
dec
jnp
pop
sub
mov
xor
mov
pop
jb
xor
sbb
scas
popf
data16
sbb
push
out
xor
popf
xor
sub
sub
inc
xlat
pop
and
insl
rcl
push
in
scas
loop
mov
add
test
sub
adc
or
push
mov
es
iret
jno
mov
jno
cmp
jl
and
sbb
int
hlt
sbb
lods
clc
mov
inc
es
pop
cpuid
sarl
mov
jmp
lret
push
cmp
fdiv
xor
shr
adcl
fcompl
xor
iret
test
sbb
cmp
loope
ljmp
add
mov
cmp
xchg
and
add
add
in
cltd
aas
dec
fbstp
bound
in
add
out
adc
lea
scas
pop
xchg
iret
outsb
mov
push
testl
sarl
stos
inc
jecxz
inc
mov
sbb
lcall
mov
lret
aaa
je
add
add
jmp
out
inc
adc
xchg
dec
add
add
andb
imul
adc
push
out
mov
aas
pop
fdivs
je
jp
sbb
and
mov
add
iretw
or
faddl
in
test
clc
mov
daa
cmpsb
je
sub
jmp
fdivrl
sub
into
nop
adc
dec
add
xor
sbb
stos
mov
cmp
xchg
pushf
jmp
inc
in
clc
das
fcoml
pop
push
in
jl
and
ljmp
icebp
or
xchg
shll
aam
xlat
iret
testl
mov
mov
push
adc
push
sbb
inc
fs
push
xchg
es
repz
cwtl
push
cmp
subb
xor
arpl
loopne
ret
lods
in
insl
add
and
adc
push
push
jbe
sbb
bound
es
roll
pop
mov
roll
add
mov
and
enter
dec
fidivs
add
mov
pop
jp
pop
mov
jle
cltd
or
pop
xorb
cmp
js
or
xor
pop
cwtl
daa
cmpsl
sub
fsubs
in
sahf
out
mov
hlt
cli
cmp
fs
sub
fldl
movzwl
sub
rorl
dec
cmp
xchg
push
jecxz
jl
scas
les
cmp
fsts
cmc
loop
xchg
pushf
xchg
dec
mov
in
inc
push
repz
mov
mov
and
sbb
xchg
call
inc
or
inc
lldt
xchg
inc
or
pop
adc
mov
lock
bnd
cltd
iret
inc
adc
sub
cmc
loopne
pop
jle
repnz
cmpsb
sub
add
inc
cwtl
xchg
test
int3
mov
ss
mov
daa
mov
sub
xchg
insl
xlat
fistpl
sar
mov
dec
sbb
add
iret
or
add
lods
das
add
lods
mov
fidivrl
or
je
repnz
call
sbb
push
pop
xchg
rep
out
lods
mov
pop
push
ret
jno
aaa
inc
dec
ss
and
xchg
jne
dec
mov
jmp
loope
and
cwtl
dec
test
jns
xor
ja
icebp
subl
fmulp
ja
and
sahf
loopne
test
push
mov
mov
adc
or
les
mov
cmp
je
jp
jae
mov
cs
ja
addl
and
sub
cmp
fsubrl
jne
bound
pop
xchg
and
xchg
xor
orl
mov
sub
add
in
add
adc
sbb
sbb
outsl
add
ret
jbe
add
loopne
sbb
mov
loope
lret
mov
mov
xchg
mov
lea
adc
lea
and
rcl
adc
je
cwtl
push
sub
cmp
add
xchg
xorl
push
mov
and
mov
push
sub
fistpl
sub
xchg
add
dec
dec
mov
insb
mov
or
adc
jecxz
dec
rol
outsl
mov
aaa
fidivl
adc
loope
aaa
stc
sahf
fwait
dec
pop
outsl
js
push
add
mov
in
dec
xchg
adc
fstpl
dec
das
xchg
push
iret
dec
cltd
mov
jecxz
cs
cmp
mov
fmul
lcall
ds
das
jo
sbb
ret
sarl
mov
loopne
mov
or
xchg
shrb
mov
or
outsl
scas
pop
lock
stos
das
nop
test
xchg
stos
push
lret
sub
adc
fistpl
and
out
test
lods
inc
mov
jae
adc
pop
mov
pop
in
add
mov
testl
cmp
push
push
out
nop
xorb
mov
pop
push
cmp
cmp
cmovs
inc
rcll
cmp
out
in
mov
call
add
fcmovbe
xor
aaa
iret
lock
mov
in
jo
add
push
insb
pop
data16
cs
ret
push
cmpsl
sarl
sbb
inc
xchg
roll
mov
stos
mov
mov
in
pop
jle
lahf
or
ss
mov
xor
and
xchg
jo
loopne
shl
negb
jnp
and
xor
xchg
push
jp
cmp
push
arpl
mov
loopne
push
push
push
leave
daa
fstpt
daa
add
jbe
push
fldl
lcall
adc
adc
jae
test
sbbl
inc
adc
out
pop
and
pop
out
pop
add
adc
rcll
mull
dec
mov
movsb
rorb
testb
addr16
loop
push
dec
fdivs
je
sbb
sub
push
add
mov
mov
mov
push
in
test
jo
or
jo
ljmp
std
sbb
or
pop
adc
jb
lods
das
pop
jl
xchg
or
jbe
mov
pop
cltd
div
daa
jo
fmul
inc
scas
cmp
sub
push
lahf
jne
push
mov
cmp
daa
mov
mov
jecxz
jmp
movl
stos
or
ss
js
mov
cwtl
sbb
test
sbb
cmpsb
cmp
add
push
mov
pop
push
loopne
pop
dec
test
popf
mov
out
fucomip
mov
into
loopne
pop
adc
mov
add
adc
xor
sub
ds
mov
inc
fmulp
cwtl
in
or
jecxz
insb
scas
clc
xor
lret
data16
jl
js
loopne
pop
stos
add
cs
and
cmc
test
sub
mov
inc
pop
fdivl
inc
movswl
push
scas
out
hlt
mov
push
jno
push
fbld
mov
jb
mov
sbb
mov
cmp
xlat
icebp
add
scas
out
dec
and
rclb
pop
movsl
push
jae
iret
jle
mov
cmp
jne
add
add
fs
jecxz,pn
jl
or
lods
and
jb
pop
ljmp
lret
push
sub
xor
ljmp
xchg
ja
ss
shl
adc
mov
pushf
movsl
jecxz
lret
lea
test
xchg
shlb
xchg
repnz
scas
cs
adc
xor
or
mov
and
mov
jno
aas
mov
shlb
jmp
jl
aam
pop
mov
fcoms
mov
add
pop
insb
sub
addl
cmp
and
cmp
jno
inc
mov
outsb
and
jo
cs
xchg
ja
push
sbb
fwait
mov
cmpsl
jnp
mov
mov
push
xor
push
ret
push
pushf
clc
sub
popl
sub
cltd
js
xor
mov
mov
adc
push
sub
or
and
test
mov
test
addl
subb
xchg
cli
inc
in
pushf
mov
sbb
pop
lods
mov
or
arpl
ret
out
adc
pop
jo
adc
or
test
cmp
lock
pushf
jnp
jecxz
fcoml
rolb
jbe
ret
or
inc
imul
mov
clc
hlt
cli
aaa
mov
push
call
loopne
cmp
jnp
lcall
jp
stos
cli
fcomp
out
pop
sbb
insl
mov
orb
jl
test
push
sbb
scas
add
push
stos
mov
mov
cmp
les
mov
call
arpl
in
pop
mov
mov
and
dec
cmpsl
daa
loopne
xchg
js
repz
xor
mov
push
xchg
testl
inc
loope
push
xchg
jae
daa
sbb
add
aad
add
rolb
ljmp
push
push
test
stos
sbb
add
push
cmpsl
jl
popa
push
imul
out
js
in
scas
loope
fldt
jae
or
gs
add
jle
mov
dec
movsl
out
adc
sub
sbb
mov
sub
sbb
popf
mov
jnp
push
cmpsb
dec
push
sbb
ss
aam
paddusb
aaa
inc
push
test
mov
pushf
test
addr16
test
push
out
mov
cmp
packssdw
cmc
lret
pop
data16
enter
test
cmp
or
aam
shll
add
sub
add
sbb
inc
icebp
test
xor
test
push
jge
cmp
loopne
push
add
shll
test
or
aad
mov
adc
mov
cmpsl
sub
push
in
or
or
iret
lcall
xchg
mov
adc
lods
and
dec
push
imul
jbe
xchg
or
aaa
ja
fisttpll
test
mov
inc
jb
xor
adcb
xor
je
sti
xchg
and
cmpsl
push
js
iret
lods
das
popa
das
repz
cli
cs
add
jmp
orl
push
cltd
cmp
test
es
leave
push
lods
inc
add
mov
dec
leave
scas
add
mov
leave
mov
js
sub
cmpsl
lea
ds
out
adc
cmp
xor
aas
mov
sub
add
sub
inc
pushf
push
cli
pop
iret
and
inc
jmp
arpl
pop
shrl
pop
lret
dec
pop
sbb
mov
sbb
and
inc
add
xchg
add
add
xorl
mul
fistl
xchg
xor
loopne
sbb
push
test
pop
lret
es
push
push
das
loopne
ret
call
xor
push
ret
popf
jp
mov
repnz
enter
xor
inc
pop
mov
nop
cmp
push
int
inc
arpl
and
or
dec
or
push
cmp
or
add
mov
mov
out
sbb
inc
sub
cmp
xor
in
xor
mov
out
pop
ret
push
mov
cmp
and
das
push
cwtl
xchg
lods
call
call
add
nop
stos
cmp
dec
adc
and
or
pop
pop
mulb
jnp
nop
sub
push
push
mov
loopne
pop
inc
pusha
xchg
add
arpl
mov
mov
dec
pop
xor
push
jb
pop
or
pop
cmp
inc
arpl
test
fwait
out
call
bound
add
adc
sbb
sub
add
or
mov
or
ja
iret
fisubl
or
xchg
xor
and
cltd
sub
or
mov
lea
movsl
cwtl
push
test
loopne
push
mov
je
int
js
add
es
cltd
xor
push
add
push
xlat
dec
or
dec
repnz
mov
aad
xchg
notb
cmp
jge
jae
je
pop
cmpsb
ljmp
cmc
lret
gs
ret
ds
sbb
inc
rolb
scas
add
cs
out
adc
filds
iret
pop
jecxz
push
or
mov
aam
mov
cmp
adc
mov
add
popf
in
pop
mov
dec
repz
test
loopne
inc
hlt
adc
mov
inc
aas
push
jo
sbb
xor
xor
sbb
lcall
je
push
xlat
les
ret
inc
mov
inc
addl
outsb
les
mov
mov
pop
or
mov
sbb
jns
lret
out
ds
and
pusha
mov
mov
fimull
dec
add
jne
mov
mov
cmp
pop
arpl
fmul
dec
inc
inc
jns
xor
xor
dec
mov
cmpsl
loope
or
jge
scas
ds
lret
jecxz
mov
xor
daa
fnsave
or
rolb
xchg
mov
icebp
dec
ljmp
inc
adcb
mov
jnp
jb
inc
add
addl
or
push
pusha
sub
adcl
idiv
pop
in
push
add
jae
or
in
adc
ss
movsb
add
jg
jecxz
test
pop
fwait
xor
xor
call
adc
cwtl
mov
xor
imul
idivl
sub
es
nop
add
add
and
repnz
mov
dec
fsubrs
pop
add
pop
les
jno
push
xor
out
enter
outsl
mov
dec
sub
add
adc
mov
push
mov
cli
add
xchg
inc
pop
in
addr16
shlb
loope
repnz
sub
or
scas
cltd
push
sbbl
imul
add
dec
sub
push
cmp
push
add
std
imulb
jl
fwait
mov
lahf
iret
lahf
negb
push
adc
add
lock
cmp
jle
psubusb
iret
jmp
sub
cld
cmpsb
mov
sbb
flds
xchg
cmp
adc
sub
loopnew
pop
or
push
jmp
mov
mov
test
out
add
inc
or
sti
jb
shlb
enter
aam
dec
sbb
insb
mov
jnp
pusha
push
push
pop
ret
in
fldt
and
mov
cmpsl
mov
sbb
xor
test
aaa
mov
xchg
sub
add
ret
mov
jl
daa
inc
xlat
jbe
hlt
push
or
and
sub
ret
pop
loope
popa
rcrb
add
mov
cmc
popa
cmp
dec
pop
icebp
test
pop
mov
pop
pusha
jl
xchg
iret
lldt
xchg
addr16
push
xor
sub
sar
push
test
sbb
aam
add
push
or
jae
mov
push
in
jb
mov
sarb
das
jno
je
pop
cmpsb
and
push
or
out
fdivs
sbb
or
dec
shlb
test
fucom
cvtps2pi
nop
fimull
call
jb
jnp,pt
pop
add
mov
mov
pusha
sbbl
je
xchg
mov
jecxz
inc
jo
cmp
fcomps
loopne
jmp
lahf
cmpsb
mov
and
inc
push
mov
cli
lea
and
adc
push
cmp
shrb
in
in
cmp
add
add
xor
test
sbb
push
sub
push
les
arpl
loope
sub
icebp
and
sub
xor
arpl
xchg
addl
icebp
inc
or
je
jns
push
mov
mov
lret
push
add
add
or
lea
addb
inc
pop
aam
add
sbb
test
pushf
mov
outsl
movsl
int
stc
andb
sub
out
or
test
jg
ds
ret
sbb
adc
pop
ret
mov
pushf
jle
cld
fdivr
add
xor
cwtl
cs
and
push
test
and
inc
mov
push
rcl
out
loop
out
cmp
pop
mov
mov
sbb
lcall
mov
sahf
call
jle
cmpsb
jg
je,pn
jle
adc
imul
sahf
add
sbb
xchg
pusha
addb
dec
or
lock
adc
lret
je
ret
mov
mov
sub
mov
mov
das
mov
ja
loope
cmp
mov
mov
cmp
jecxz
addr16
jl
adc
pop
adcb
mov
std
adc
push
pusha
iret
out
rol
subb
xchg
ljmp
das
mov
jb
popa
mov
xor
lahf
mov
std
xor
iret
cmp
addl
aaa
repz
and
ss
mov
pop
out
cmp
bound
das
cmpb
cs
test
pop
pop
mov
mov
fildll
in
jp
dec
inc
dec
sub
pushf
pusha
shlb
sbb
mov
mov
iret
sbb
cmpsl
push
js
cwtl
addr16
pusha
add
icebp
ffree
out
inc
xchg
inc
sahf
ret
je
push
leave
xor
aad
mov
adc
xchg
rol
and
lret
aaa
add
sub
nop
xor
es
lahf
scas
addr16
push
mov
popa
push
mov
mov
rol
ja
fst
je
leave
pop
faddl
mov
push
call
aas
jle
fdivs
jle
and
and
sub
and
dec
add
jmp
mov
in
imul
cmp
fisttpl
and
fiaddl
cmp
in
aaa
scas
and
mov
jb
pop
dec
shrb
and
scas
mov
add
inc
push
cmpsb
inc
cmp
mov
insl
xchg
stc
stos
sub
rcll
pop
ficomps
push
jp
push
adc
mov
enter
mov
mov
and
cmp
dec
xor
push
mov
das
jge
cmp
sbb
push
jle
mov
mov
fsubs
push
les
push
sub
cmp
mov
rcll
mov
cmp
add
or
sub
jp
out
std
and
imul
sub
sub
jb
lret
and
jle
daa
mov
add
add
add
inc
movsb
inc
daa
cld
pop
dec
dec
jo
pop
adc
sti
jg
call
pop
pop
sub
push
xchg
pop
mov
iret
mov
fidivl
mov
cmp
fnsave
mov
jl
addl
lea
inc
sar
into
out
or
ss
add
movsb
das
ljmp
cmpsl
pop
push
popl
test
and
fsubl
cmp
aad
pop
xchg
fimuls
shl
ja
repnz
clc
lahf
sti
sbb
movsl
out
and
cmpsl
ficompl
cwtl
insl
subb
pop
sbb
push
sbb
add
mov
pusha
adc
push
push
xlat
mov
sub
cld
pusha
decl
pop
inc
testb
and
adc
adc
push
cmp
ja
rcrl
ja
das
iret
and
inc
xchg
sub
sarb
cs
sub
add
adc
xchg
jns
or
popf
inc
add
stos
jo
and
das
mov
or
or
fstps
decb
mov
xchg
or
cmp
out
adc
sub
ret
and
icebp
loopne
or
push
push
dec
jl
jae
shrb
jo
xor
pop
mov
add
ret
push
cltd
es
mov
adc
xor
mov
fsubl
cmp
sbb
cmpb
pop
push
xor
mov
and
sub
dec
or
lods
and
cmpsl
lret
aas
test
arpl
fldt
add
test
mov
push
mov
lods
loopne
out
push
iret
mov
xchg
pop
in
sbb
cltd
js
into
mov
push
pmullw
push
js
imul
les
ja
xchg
or
mov
sbb
jo
sbb
lea
dec
lea
call
test
and
je
pop
jl
and
clc
and
push
or
aam
lock
push
call
mov
cmp
or
in
dec
sti
and
mov
push
sub
pop
lahf
icebp
les
dec
out
les
sbb
shr
push
cld
icebp
lret
incb
dec
and
and
mov
adcl
inc
clc
add
inc
scas
add
mov
jle
iret
cmp
test
cmp
cmc
stos
xchg
aam
cmp
or
insb
cmc
insb
cmpsb
cmp
ret
insb
lods
cmp
pop
lods
xor
mov
outsl
pusha
scas
jns
and
mov
faddp
sbb
mov
adc
mov
xor
dec
inc
push
popf
xchg
or
jl
inc
repnz
gs
and
clc
push
adc
in
daa
xor
shrb
jbe
jo
fcoms
ljmp
add
lahf
dec
adc
adc
push
jge
jle
mov
mov
add
ret
fsubrs
add
iret
nop
pop
fadds
xchg
cmpsl
lods
fadds
test
test
cli
add
and
popa
mov
add
mov
lcall
mov
das
scas
jmp
cwtl
push
movsb
arpl
add
xor
orb
xor
mov
mov
mov
xor
rcll
adc
xchg
add
pop
sbb
and
test
in
stc
pop
repnz
fbstp
mov
sub
dec
or
enter
push
mov
mov
sbb
jne
mov
add
jecxz
pop
aad
orb
pop
mov
clc
das
cs
addr16
iret
arpl
fimuls
or
xchg
jo
test
in
sbb
lods
test
data16
in
xchg
push
fwait
outsl
movsb
and
add
jmp
movsb
insb
aam
test
and
mov
adc
pusha
dec
pop
mov
sub
sub
sbb
inc
movsb
jp
lea
out
sbb
repz
xchg
loopne
pop
sbb
sub
jne
inc
pop
out
or
inc
cmpsb
push
add
and
mov
testb
jecxz
cltd
adc
js
inc
push
ss
cmp
fwait
adc
adc
inc
pop
icebp
sbb
rorb
je
xchg
dec
or
scas
push
inc
add
xor
or
data16
add
sbb
ds
sbb
int3
sbb
lods
inc
out
arpl
iret
mov
jo
stc
jge
js
ret
jns
daa
je
ja
jle
push
mov
cmpsb
jns
unpckhps
jne
dec
test
call
and
or
fwait
pop
xchg
lock
mov
rol
popa
xchg
push
popa
sbb
or
fs
push
imulb
repz
lea
mov
push
cmc
xlat
adc
sbb
inc
data16
dec
pushf
adc
cmp
pop
jp
and
adc
mov
not
jno
shll
movsb
or
cmp
pop
jmp
pop
clc
pop
push
pop
jle
mov
test
mov
testb
sub
stos
das
fiaddl
aad
sub
lods
push
mov
out
mov
repz
lods
pusha
arpl
popf
ret
sbb
and
aas
ret
sub
push
pop
add
adc
clc
dec
jg
sbb
add
pop
dec
add
or
dec
sbb
push
inc
sbb
cmp
fsubrs
ret
cwtl
mov
sub
orl
mov
scas
xchg
adc
fcmove
sub
iret
test
es
jo
aas
add
imul
jns
push
nop
push
fcomi
xorl
mov
shl
mov
jae
cld
xor
jne
cwtl
xchg
or
lods
add
jo
push
push
fldenv
mov
popa
jle
mov
fsubrs
rorl
mov
xlat
sub
jo
adc
mov
nop
rcrb
lcall
jne
inc
mov
jmp
push
push
cmp
rolb
xor
pop
test
mov
pop
fmuls
data16
int3
jp
mov
and
setg
loopne
mov
pop
scas
stos
jno
fdivrl
or
mov
pop
adc
mov
mov
or
mov
sub
out
shlb
sub
dec
or
stc
mov
inc
xor
cmp
test
xchg
pop
rcrl
fidivrl
jo
je
mov
jmp
mov
add
add
pushf
mov
mov
sub
iret
shl
xlat
dec
es
add
enter
loope
lret
jnp
and
adc
stc
insb
ljmp
mov
je
push
cmpsl
lea
arpl
push
aaa
es
fwait
jno
pusha
adc
lods
add
and
sub
jge
xchg
jp
pop
stc
xor
ret
imul
and
mov
cmpsl
scas
push
fninit
mov
out
cmp
push
xlat
jp
pop
enter
int3
add
mov
rcl
pushf
push
les
jne
icebp
movsl
pop
ja
loope
jmp
sbb
cli
fadds
testl
and
shll
jno
push
xchg
insb
loopne
in
mov
mov
setne
sub
mov
push
imul
cmc
sbb
sub
mov
test
mov
xlat
loopne
cmpb
aaa
mov
ret
aaa
jb
outsl
icebp
cmpsb
adc
ret
or
lcall
inc
xorl
sub
inc
je
into
in
pxor
aad
dec
jne
cmpsb
mov
fcoms
sbb
push
cmp
add
imul
jecxz
lock
jb
sbb
pushf
sub
pop
enter
rorl
pushf
cmp
sbb
push
push
dec
pop
pop
ret
scas
lock
std
insl
test
popf
adc
pop
add
add
icebp
inc
push
xchg
jne
cmp
insl
xor
jo
dec
sub
add
mov
add
je
aad
xchg
add
movsb
pop
sub
and
jp
xor
cltd
cmpl
arpl
push
and
xor
imul
in
and
add
pop
mov
mov
leave
movsl
xlat
ret
add
cmp
stos
xchg
test
rolb
xor
inc
je
adc
aad
ja
aaa
mov
xchg
pop
mov
push
bound
test
filds
cmpl
adc
mov
arpl
js
je
inc
ss
or
or
mov
mov
add
ljmp
xadd
adc
and
mov
add
adc
push
dec
aaa
cld
je
addl
xor
outsb
mov
pop
mov
outsl
arpl
xchg
icebp
aam
adc
push
and
out
push
aad
fiadds
mov
mov
xchg
lret
xchg
aaa
je
and
outsb
imul
jns
jecxz
inc
stc
pop
je
lods
enter
or
lret
mov
jge
in
mov
jg
subl
addb
std
gs
mov
mov
stos
out
xor
jl
pop
bnd
insl
fcmovnbe
les
mov
sub
mov
push
jno
int
mov
adc
jne
data16
xor
cld
icebp
add
inc
daa
mov
pop
inc
push
int3
iret
nop
sarb
add
out
push
jp
in
and
pushf
movsb
or
fisubrl
xor
bound
cmp
xchg
xlat
mov
sbb
dec
add
add
push
jne
test
xor
and
sbb
adc
lods
mov
mov
xchg
adcl
shll
sbb
inc
frstpm(287
mov
icebp
sbb
in
je
mov
jmp
jecxz
adc
into
jno
stc
add
or
gs
adc
cs
lea
jge
loopne
jmp
pushl
sbb
jge
pop
out
daa
fidivrs
jecxz
out
dec
dec
int
jnp
ret
xorl
iret
lahf
fsubrp
lea
repz
sbb
sub
push
aam
stos
mov
lods
add
pop
push
and
push
jg
pop
popf
test
shrb
mov
jo
jle
mov
mov
mov
mov
sub
mov
aam
sbb
adc
jnp
aas
loop
inc
aaa
and
pop
dec
aad
rcl
verw
lods
mov
sub
push
loopne
and
jl
mov
scas
cmp
inc
hlt
jno
or
lds
test
add
dec
adc
pushf
pop
jp
test
movsl
ljmp
aad
loopne
adc
inc
xor
fsubs
pop
cmc
pop
movsb
jle
aad
pop
sbb
push
cmp
daa
psrld
pop
mov
pusha
and
aam
sti
xchg
add
mov
add
shr
inc
add
add
int3
add
add
lcall
nop
push
les
xor
add
cmp
aaa
mov
fadds
fcmovu
inc
sub
mov
fs
adc
push
push
ret
repnz
inc
daa
dec
xor
jnp
bound
and
pop
push
add
dec
subb
je
outsl
shll
sbbb
push
and
bound
inc
out
xor
nop
sub
xor
mov
mov
mov
popa
xor
imul
dec
test
add
sub
out
push
jmp
out
xchg
cmc
xlat
stos
popa
aam
sbb
xchg
jecxz
aaa
mov
sti
pop
or
push
and
mov
jne
stc
das
sbb
dec
or
ret
sbb
xchg
scas
imul
cwtl
push
push
pusha
lahf
mov
or
add
adc
adcl
movb
pop
jns
test
mov
mov
xchg
out
sbb
fsubl
xlat
sbb
in
dec
inc
mov
add
and
xchg
loope
pop
or
mov
inc
dec
pusha
test
ficomps
cmp
and
andl
or
popa
hlt
jno
mov
or
xor
stos
test
stc
popa
insb
add
stos
mov
inc
push
and
scas
adc
jmp
roll
iret
lea
popa
push
sbb
jns
push
in
cmp
les
pop
xchg
sub
add
into
xor
ud1
addr16
leave
dec
hlt
jmp
cmp
mov
jl
adc
cmpsl
popa
and
repnz
es
or
scas
xchg
mov
adcl
dec
iret
inc
ja
or
popa
outsl
test
iret
dec
and
mov
lods
pusha
push
inc
push
and
outsl
xor
sbb
or
scas
repz
xor
mov
aaa
aad
push
lods
scas
and
daa
daa
pop
inc
loope
xorb
mov
movsl
data16
mov
cmpsl
mov
push
push
pop
push
pop
sbb
and
xchg
push
cwtl
or
sub
ficoms
arpl
cmp
rcr
es
inc
sub
push
into
inc
jno
adc
repnz
pop
mov
fs
lods
into
xchg
mov
push
sub
out
lds
testl
cmp
loopne
xchg
push
mov
ljmp
je
int3
lret
dec
cwtl
sbb
mov
dec
dec
pop
sbb
ja
adcb
nop
push
sub
iret
jno
daa
push
sbb
ja
add
jle
insb
arpl
sbb
popa
jo
loopne
mov
xchg
mov
xor
in
out
jnp
imul
mov
shrl
fnstenv
xchg
lock
add
rolb
test
jo
addb
sub
cmp
push
cs
mov
sub
icebp
mov
pop
test
sahf
js
mov
or
ja
inc
pop
psubd
lock
inc
test
jno
add
sbb
push
jge
rdmsr
leave
add
mov
je
push
loopne
fnstcw
xlat
repz
add
sbb
xor
loope
test
inc
adc
rcrl
pop
inc
dec
and
xor
pop
shll
iret
data16
ja
je
mov
and
loopne
pop
jo
and
lock
jle
fisubl
add
jecxz
rolb
xchg
add
jle
pop
dec
jb
jnp
mov
add
jle
mov
out
mov
jmp
arpl
cwtl
dec
loope
or
pop
pop
test
outsl
loopne
jno
mov
icebp
rorb
into
and
lcall
scas
xchg
cs
iret
sbb
xlat
xchg
test
xor
mov
aad
sbb
pop
xlat
cmc
push
add
mov
push
push
fsubrs
sub
inc
data16
daa
xor
lret
ret
mov
es
out
fsub
jbe
add
xchg
ret
cmp
push
cmc
xchg
cmc
inc
ljmp
add
adc
xor
out
lahf
inc
or
xchg
mov
fdivrp
cli
js
sub
cltd
cmp
push
jo
enter
and
ficompl
mov
bound
jecxz
popa
xchg
cmp
ja
sbbl
sub
mov
dec
mov
in
nop
push
fildl
dec
sti
and
jne
mov
jecxz
xor
jge
insl
iret
jbe
lret
jbe
jg
clc
jb
fwait
jbe
daa
mov
dec
js
push
fcoms
push
push
add
movsl
jo
je
int3
imul
sarl
pop
out
mov
jnp
push
xchg
push
sub
adc
mov
mov
pop
and
loopne
aam
xorl
call
sub
movsb
aad
lea
stos
cmpsl
js
add
mov
sub
sbb
xlat
jno
dec
mov
or
cmp
iret
push
loope
or
push
sbb
cmp
enter
into
pop
cmp
bound
arpl
jge
lock
iret
sub
iret
pop
cmp
add
rcll
dec
ret
jmp
inc
das
mov
and
ret
ret
clc
jmp
dec
fsubrs
js
sbb
pop
inc
jmp
xchg
sub
push
jl
lea
pop
repz
sub
and
pop
loope
ret
adc
andl
jb
test
das
sbb
imul
dec
lods
jge
fiaddl
and
pop
jb
mov
shlb
jecxz
mov
lods
pop
sbb
cmp
add
mov
loope
outsb
imul
loop
dec
add
lahf
shrb
xchg
adc
sub
or
sarb
add
sbb
mov
insb
iret
jb
gs
fsts
dec
add
mov
cli
ret
adc
nop
in
std
and
aaa
adc
sti
repnz
pop
inc
das
jg
popw
inc
lods
ljmp
scas
push
adc
je
add
jecxz
mov
lret
mov
mov
sbb
sbb
shl
inc
test
mov
push
cmpsl
push
mov
sub
les
push
pop
out
fwait
add
jne
out
shll
add
call
decl
sbb
sub
jg
xor
cmc
lods
inc
xchg
jp
xlat
jno
xor
enter
push
imul
jecxz
push
dec
scas
cmp
and
mov
mov
xchg
fisubs
aas
jo
cmp
test
enter
add
xor
ds
les
and
andb
jecxz
cli
iret
insb
xchg
xor
jbe
inc
mov
or
pop
jge
sarb
sub
sbb
aam
ss
mov
cmp
addb
inc
adc
fs
into
rolb
call
add
sub
push
sbb
push
cmp
loop
pop
mov
add
dec
mov
inc
in
mov
in
add
cmpl
sti
and
or
stc
sub
mov
in
jle
mov
lea
js
inc
pusha
test
ret
sarb
adc
adc
adcl
ret
or
cmp
loop
cmp
jmp
rep
jno
mov
cmp
movsl
jns
xlat
add
cmp
je
xchg
ss
daa
mov
out
shlb
loopne
xchg
ds
push
dec
or
and
push
in
jle
fnstenv
into
fstpl
lock
cmpsl
iret
cmpsl
jno
pop
inc
cmp
test
adc
daa
mov
loopne
out
cmpsb
inc
add
js
cmp
cmpsl
mov
sysret
shl
push
fdivrl
pop
xor
mov
inc
andl
movl
mov
and
pop
dec
or
mov
mov
dec
mov
into
ret
popf
test
and
mov
mov
dec
mov
lcall
fdivl
je
add
movsb
adc
arpl
pusha
push
das
pop
jns
cmp
sub
pop
and
and
jle
mov
adc
cmp
mov
xor
fbld
pop
pop
pop
rcrl
ficomps
and
jns
adc
or
shlb
insl
scas
iret
and
sbb
mov
push
sub
jl
adc
addr16
rolb
push
inc
mov
ret
push
push
push
or
mov
daa
addr16
cwtl
adc
cmp
add
mov
mov
lahf
imul
in
bound
cmpsb
inc
pop
ret
jbe
ret
push
pop
xchg
cmp
test
adc
push
stos
mov
int
mov
mov
cmp
in
xchg
or
ja
js,pn
sub
mov
add
jne
inc
lock
imul
pop
jge
jp
pmaddwd
push
loop
scas
jl
pop
test
mov
mov
iret
inc
add
js
pop
cmp
inc
push
sahf
cmpsb
inc
test
add
mov
lcall
push
sub
setbe
xchg
mov
xor
jb
add
aaa
xchg
jo
lock
das
or
mov
push
push
ret
cltd
and
loope
jl
mov
lcall
add
ret
cmc
push
xor
or
add
mov
das
xor
icebp
jmp
sbbb
mov
iret
lea
pusha
and
pop
xor
daa
cmp
jo
cmp
imull
xchg
fwait
lods
adc
sub
cli
call
stos
addl
push
or
xchg
aad
lock
sbb
iret
add
pop
sbb
in
xchg
inc
mov
xor
cmp
sbb
andb
das
lahf
add
sub
dec
jp
jl
adc
pop
jae
mov
out
lcall
xchg
push
sub
filds
das
jecxz
movsb
fldenv
add
rcll
push
sub
and
daa
repnz
aaa
cmp
and
mov
inc
mov
pop
add
dec
push
stos
xchg
jp
xlat
adc
je
cmp
movsl
jne
cmpsb
fnsave
or
adc
xor
mov
mov
int
scas
test
or
rolb
xor
lods
jecxz
sub
adc
push
in
push
dec
adc
insb
fisttpl
inc
xor
out
loopne
add
xor
cwtl
clc
iret
mov
pop
in
pop
das
cmp
lods
pushf
jmp
adc
fcomps
jb
int
ja
or
cmp
lods
je
add
cmp
or
bound
pop
add
jg
dec
out
pop
leave
jle
add
xchg
xor
mov
sub
fiaddl
sahf
ljmp
jecxz
test
rclb
push
push
ja
orl
pop
pop
inc
mov
jmp
lret
das
add
add
cltd
lret
jp,pt
pop
test
dec
xor
pop
add
addl
pushf
in
add
stos
dec
mov
adc
inc
lods
testl
dec
addb
dec
cli
add
pop
mov
mov
or
in
ltr
ja
inc
cmp
outsl
fcmovnbe
pusha
lock
dec
xchg
and
add
ljmp
cmp
xorl
xor
popa
mov
std
cmp
sbb
push
pop
ret
movl
push
or
jle
push
jb
jecxz
rep
loopne
xchg
jnp
stc
mov
push
xchg
pop
mov
aaa
sub
dec
sub
stos
and
imul
pop
push
pop
pusha
mov
lods
pop
push
push
rorl
loope
jno
ret
subb
pushf
dec
push
push
rcrb
and
iret
xchg
daa
jle
add
mov
and
mov
mov
loop
lods
push
out
and
push
dec
add
cli
pop
adc
jp
lcall
pop
pop
add
ss
pop
xchg
int
mov
iret
adc
inc
lea
test
mov
cmp
xorb
sub
mulb
fcom
xchg
in
xchg
adc
sbb
decb
xchg
pop
pop
add
jg
jmp
call
jo
mov
mov
sbb
hlt
xchg
mov
dec
push
dec
or
mov
loop
cmp
loopne
add
inc
jbe
jp
and
js
sbb
mov
xchg
imul
rol
in
sub
mov
mov
stos
lods
push
movsb
xchg
jno
rorb
sbb
hlt
mov
add
ss
adc
imul
add
fcoms
clc
lahf
repnz
int3
lret
dec
ret
cmp
add
cmp
sbb
aam
inc
and
lahf
ja
xchg
test
and
fidivrs
cmc
mov
dec
adc
sub
inc
sbb
adc
jo
shr
pusha
shrb
mov
or
stos
sbb
pusha
stos
into
test
data16
ljmp
dec
xchg
adc
lds
pop
push
sbb
data16
ss
and
xchg
mov
fwait
mov
add
into
pop
xchg
adc
ret
fdivs
cmp
out
push
push
and
lret
testb
roll
jecxz
adc
cmp
in
add
mov
loopne
push
jne
repz
and
xchg
nop
add
test
aam
sub
loopne
test
rol
inc
sub
inc
sbb
outsb
inc
out
pop
movsl
jb
sbb
mov
adc
rcl
adc
movsl
xor
nop
and
xchg
and
adc
pop
je
mov
loopne
loop
mov
shrb
mov
cmp
mov
loopne
cld
add
fdivrs
shlb
jo
and
xor
xor
mov
in
mov
mov
loop
mov
pop
xor
lods
sti
and
movsb
or
pop
xchg
xchg
lock
jl
lcall
jmp
dec
mov
outsb
mov
lea
in
mov
jne
fwait
fs
and
jne
sbb
inc
inc
mov
aaa
mov
lea
in
push
scas
mov
in
test
pop
or
adc
jle
lods
mov
adc
sbb
lret
jae
add
jmp
lock
dec
add
sti
fcom
adc
jmp
adc
xchg
int3
add
add
push
mov
mov
and
push
xor
and
or
ret
popa
push
imul
push
jle
jae
sti
jo
jmp
sbb
mov
fcoms
push
sbb
jo
mov
cwtl
lret
pop
je
ret
mov
xor
cltd
sti
adc
or
xor
add
xchg
test
sbb
add
jg
jo
jns
pand
push
js
or
stos
es
ja
add
arpl
push
inc
fistpll
test
pop
or
sbbb
add
adc
jg
mov
jns
sbb
sub
dec
sbb
pop
xchg
gs
lea
xorl
loopne
and
cwtl
jmp
mov
icebp
dec
outsl
pop
add
push
mov
jl
xchg
xchg
cmp
imul
xchg
and
js
push
cmpsb
push
sub
mov
std
jle
xor
mov
mov
jecxz
jmp
mov
adc
loope
cld
mov
add
icebp
mov
scas
add
addl
inc
adc
mov
xchg
movl
cltd
mov
movsb
push
loope
jno
mov
je
sub
clc
lock
adc
test
shrl
adcl
sbb
es
pop
aas
lock
jg
mov
notb
cmp
and
pop
daa
cmp
fwait
std
sbb
jecxz
fwait
sbb
emms
outsb
outsb
test
or
cmp
adc
dec
iret
ret
jno
and
adc
sar
sbb
in
add
mov
outsl
xor
leave
lret
adc
cmp
dec
aas
add
jnp
and
inc
call
dec
ret
adc
push
mov
adcl
sub
mov
jnp
sbb
callw
lahf
pop
xchg
mov
pop
lret
pop
push
subl
fs
sbb
cmpsb
scas
mov
shlb
cmpb
arpl
and
ftst
jl
cld
add
jnp
ljmp
push
xorl
in
aas
mov
inc
push
mov
ret
adc
add
in
nop
adc
xchg
cmp
pop
cmp
dec
imul
push
mov
jb
shlb
push
popa
ret
das
inc
adc
sarb
fmulp
pop
or
push
jns
stc
mov
dec
ja
jge
insl
and
jl
js
fidivs
mov
mov
or
mov
adc
sub
cwtl
ret
movsb
fildll
pop
cmp
call
push
pushf
pop
sub
mov
sbb
orb
sbb
aaa
pop
adc
mov
pop
inc
and
pusha
int3
mov
mull
add
popa
int
dec
pop
pusha
lret
add
xor
jae
addr16
lds
push
or
imul
mov
ret
es
mov
adc
pusha
push
push
mov
push
cmp
and
adc
dec
pop
mov
lods
xchg
xor
and
out
nop
mov
push
cltd
add
inc
mov
pop
cmpsl
lods
xchg
sub
aad
sbb
ret
out
pop
je
sub
pop
das
or
loop
inc
shl
cmp
lcall
and
xchg
lods
cli
rcll
orl
mov
pusha
sbb
or
mov
inc
push
test
cmp
pop
xchg
addl
mov
jl
push
test
cmp
stc
aaa
dec
adc
popa
and
fcoms
flds
cwtl
jne
adcl
aaa
add
push
pop
adc
insb
test
mov
fildll
es
loope
cltd
cmp
lods
daa
mov
inc
out
icebp
add
jo
shl
add
add
inc
into
sti
hlt
push
in
jno
cmpsb
arpl
jno
inc
inc
push
lcall
insb
fistl
pop
loopne
mov
and
and
mov
ret
loopne
add
or
mulb
push
loop
fdivrs
inc
sbb
lret
sub
enter
cmpsl
fcoml
outsl
cltd
cmp
pop
jg
gs
int3
fstl
xchg
push
lahf
cmp
or
mov
pusha
dec
and
xchg
mov
pushf
mov
adc
jmp
adc
iret
dec
aad
addr16
adc
jbe
test
and
jle
mov
push
cwtl
inc
add
adc
das
lea
mov
mov
call
pop
xor
sar
mov
fs
or
push
push
test
scas
push
or
sbb
shlb
add
fcoms
test
rorb
arpl
inc
add
pusha
cmp
test
inc
dec
pop
jecxz
inc
inc
sbb
xchg
dec
jge
push
dec
and
jns
cmp
movsl
je
push
ss
pop
in
inc
cmp
inc
or
inc
adc
push
xor
push
dec
xor
dec
sub
jo
out
je
mov
sbb
mov
cwtl
inc
test
push
loop
pusha
jnp
pushf
add
adc
sub
cmp
mov
aam
inc
mov
iret
add
sbb
ret
imul
in
int3
rclb
out
rorl
xor
cmpsb
negl
xor
lods
pop
push
ja
cld
or
add
cmpsb
and
pop
mov
stos
pop
aam
lods
and
mov
push
ret
xchg
sbb
pop
rorb
pusha
and
loopne
or
add
iret
or
cmpsl
aam
add
js
rcl
sub
bnd
xchg
adc
nop
xchg
popa
add
adc
lcall
iret
and
and
dec
mov
sub
sub
sbb
dec
rorb
test
add
aad
cmp
mov
xchg
push
cltd
ljmp
and
mov
ja
dec
jmp
or
ja
add
fbld
cmpsl
add
cmp
out
mov
loop
arpl
out
lock
pop
sub
jno
sbb
out
sbb
xchg
jl
jne
inc
ret
das
call
inc
pop
cwtl
push
mov
push
ja
dec
lock
cltd
push
and
xchg
mov
push
pop
fmul
dec
xchg
and
adc
imul
js
cmp
int3
inc
sub
addb
popf
dec
mov
das
xor
mov
xor
push
push
pusha
out
rol
pusha
mov
scas
pop
sbb
add
mov
mov
cmp
add
push
out
inc
mov
push
ljmp
or
sbb
sbb
cmp
lcall
cwtl
add
or
int
pop
iret
push
inc
fsubrl
xlat
fsubl
aas
out
jbe
add
loope
jo
ficoms
dec
jle
and
cmp
push
dec
loopne
lret
dec
or
cmc
inc
in
inc
loopne
mov
and
rorb
jge
pop
push
mov
xlat
inc
xchg
and
test
dec
xchg
imull
dec
shl
loopne
mov
mov
cmpsl
cltd
xor
mov
in
add
imul
orl
sbb
fs
cmpl
je
idiv
loop
and
ss
mov
add
push
push
pop
pop
cmp
out
imul
dec
andl
fistps
add
cmp
leave
rorb
or
add
xor
push
idivl
imul
rcrl
lahf
fstl
sub
inc
sub
pop
add
add
daa
fiaddl
scas
jno
in
jle
add
sbb
jle
xlat
lcall
adcl
loop
lods
jmp
add
es
xchg
push
add
enter
add
jne
popa
stos
or
jecxz
jae
push
aaa
iret
cwtl
pop
push
adc
sbb
inc
and
xchg
sbb
xchg
jp
push
mov
inc
mov
arpl
inc
dec
out
push
out
das
and
dec
and
sbb
stos
addb
out
cmp
mov
test
jo
cmp
add
push
bnd
sub
mov
imull
sub
or
arpl
loop
test
adc
add
movsb
jmp
jne
sub
js
mov
rcl
xor
jbe
imul
divl
push
mov
jge
sub
inc
xlat
pop
xchg
dec
lret
pop
fs
mov
lahf
aam
adc
out
es
xor
insb
pop
test
sbb
mov
pop
cmpsl
add
pop
inc
out
sub
xchg
jmp
inc
mov
lock
stos
pop
add
pop
in
add
popf
sbb
xor
mov
loopne
or
mov
aad
inc
jns
push
lods
jmp
mov
repnz
rol
fwait
push
adcl
cld
add
stc
xchg
xlat
mov
inc
push
nop
cmp
inc
cmpsl
push
jl
dec
jmp
loopne
aam
add
leave
scas
xor
and
jl
repz
cwtl
movsl
dec
inc
mov
ljmp
adc
or
ret
ja
xchg
in
jge
adc
pop
dec
add
subl
das
outsl
mov
push
dec
and
out
add
mov
or
int3
in
ja
dec
add
repz
pop
sub
add
add
inc
loopne
or
add
or
or
xlat
dec
aaa
jo
in
jl
das
or
adc
sub
and
nop
ljmp
ficomps
cli
dec
xchg
rolb
mov
push
mov
mov
fwait
loope
dec
ret
fisttps
add
inc
mov
outsl
or
and
das
push
jg
sub
inc
les
or
lahf
pop
mov
inc
rol
pop
in
or
out
sysret
inc
cltd
inc
out
inc
je
mov
add
clc
pop
ss
out
inc
push
inc
sub
pusha
xor
movsbl
ffree
cmp
mov
inc
mov
mov
jnp
add
clc
and
adc
mov
jo
add
push
mov
cmc
and
add
lret
mov
enter
ret
sbb
aam
jne
inc
scas
divl
sbb
cmpsl
sub
sub
loopne
add
sbb
rcrb
popa
pop
sbb
inc
or
fmull
inc
popf
cltd
cmp
add
enter
pop
addr16
mov
lock
push
popa
pop
dec
sbb
pusha
lock
xor
out
jo
or
sbb
add
adc
loope
call
aam
enter
jge
dec
pop
add
testl
clc
mov
push
or
loope
jecxz
fsubr
or
inc
call
add
int
dec
or
push
pop
inc
popa
jae
mov
inc
je
out
cmc
push
xor
inc
cwtl
cmpsl
jbe
push
adc
dec
add
pop
pop
and
mov
push
cwtl
xor
test
sbb
arpl
jge
cli
shll
scas
cli
xor
cmp
adc
popa
inc
js
xor
xchg
and
push
mov
gs
xor
cmpsl
adc
cmp
cmp
adc
mov
sbb
sub
data16
iret
jnp
xchg
ret
adc
cs
lods
movsl
add
xchg
and
mov
sbb
testl
cmp
adc
add
outsl
insb
fiadds
aad
inc
std
or
pop
cmp
fdivrl
pop
add
iret
cmp
push
and
add
negl
add
das
jg
bound
mov
inc
dec
pop
push
sbb
int3
sbb
fwait
xchg
mov
jb
es
nop
cmpl
cld
ds
out
add
sub
mov
pop
in
outsb
and
pusha
inc
cmp
push
sbb
sbb
cmp
cmp
dec
inc
mov
jl
or
ss
aas
and
push
mov
push
or
or
and
aam
and
pusha
cmp
inc
mov
ret
push
rorb
xlat
push
sbb
fmuls
les
pushf
inc
mov
mov
je
cmpsl
or
pushf
pop
sub
jg
enter
sbb
mov
rcll
fidivrs
push
dec
mov
shll
jmp
stc
fwait
pop
mov
aam
stos
xorb
test
lret
ds
test
daa
add
pop
xchg
and
jmp
jecxz
scas
das
loope
pop
sbb
xor
inc
ret
jbe
dec
add
sbb
push
ds
test
jle
notl
dec
aas
hlt
adc
mov
ret
jb
test
push
adc
insl
aaa
ss
fcom
sub
cmpsb
cli
and
push
add
popf
cs
lret
sub
cmp
ds
xchg
xchg
iret
push
js
pop
inc
push
jne
cmp
lea
add
out
popf
hlt
dec
pop
inc
test
sbb
mov
and
jecxz
shlb
andb
pop
xor
inc
inc
jl
dec
mov
aam
dec
pop
lret
pop
adc
js
test
mov
orl
mov
mov
xchg
test
loopne
dec
xor
shlb
pop
mov
add
out
or
cmp
cmp
lahf
sub
or
negl
xor
mov
add
pop
adc
and
popf
cmp
repz
out
sbb
fwait
je,pt
jns
pushf
push
stos
push
push
mov
push
dec
ja
sbb
scas
fistpll
xor
iret
mov
pop
cmp
xchg
jmp
mov
lahf
jne
out
fdivrs
or
xchg
inc
loope
sti
adc
lods
fs
fimull
push
popf
fisttps
jl
out
sti
or
imul
cwtl
into
mov
dec
fwait
and
push
fwait
pop
mov
pop
es
push
and
sub
xchg
ljmp
je
or
cld
and
pcmpgtd
sub
aam
popf
fwait
cld
test
daa
lock
dec
sbb
push
sbb
inc
int
loopne
scas
and
ja
inc
dec
cmpsl
fstpt
inc
stos
sbb
push
in
add
or
inc
jns
add
mov
cmp
dec
dec
hlt
in
mov
pop
push
lret
pop
xchg
dec
loopne
mov
inc
xchg
push
sub
and
addl
inc
jg
call
shrb
mov
sbb
scas
push
push
jmp
jo
popf
push
rorb
lret
pop
lods
or
sub
or
enter
lahf
inc
data16
push
femms
mov
cmp
into
push
pop
add
in
add
cld
es
in
loop
adc
inc
sarb
fcoml
push
lea
gs
jle
dec
jecxz
xor
ficoml
std
add
aaa
adc
aas
lahf
adc
sub
xor
mov
or
xchg
rcl
stos
inc
add
dec
xchg
mulb
mov
popf
cmp
or
push
test
lahf
inc
adc
les
mov
jnp
add
push
or
iret
pop
leave
xor
testl
addr16
adc
adcb
and
cmpsl
mov
xchg
add
std
rorl
cmc
jle
out
add
icebp
out
add
xchg
pop
aas
inc
in
test
cld
add
icebp
push
mov
das
push
or
cs
adcl
jecxz
add
jne
aam
sub
dec
sbb
inc
call
push
pop
adcb
mov
inc
add
or
adc
jo
aaa
stc
cltd
mov
sar
or
int3
jae
jae
cmp
push
mov
mov
lea
and
ljmp
fadds
pop
mov
pop
jno
stos
js
or
push
and
mov
xchg
adc
outsl
add
lahf
addb
pop
push
or
loope
gs
rol
fisubl
outsl
iret
dec
pop
pop
sbb
xchg
inc
mov
lret
out
cs
push
add
or
pop
fldl
or
add
inc
dec
sub
sbb
add
je
fsubrs
inc
xchg
and
pop
pop
push
lods
sub
clc
or
fmuls
or
dec
je
les
loopne
dec
push
xor
jp
mov
push
sub
dec
outsl
cmp
xchg
fadds
add
hlt
mov
mov
lahf
xorb
mov
loopne
iret
add
pop
jns
test
scas
aad
push
out
in
incl
insl
std
hlt
push
pusha
dec
and
push
fs
lock
inc
xor
push
and
mov
test
push
add
pop
cmp
rclb
inc
icebp
ret
sub
push
push
in
scas
push
mov
adc
je
fwait
pop
ret
dec
sarb
out
add
push
xor
push
sub
jo
jle
into
add
dec
es
mov
lea
or
fistl
sbb
shll
mov
mov
outsb
push
xchg
aam
jg
adc
jmp
cmp
pop
mov
fldenv
pop
out
lock
inc
xor
add
rol
cmp
lahf
pop
or
pop
xchg
mov
loopne
out
add
inc
popa
sub
mov
outsb
loope
or
jmp
sahf
jge
ds
sbb
jo
mov
jne
mov
pusha
or
push
mov
add
and
xorb
and
lock
jmp
das
push
and
js
test
sub
sub
and
pop
sbb
jo
not
push
xchg
xchg
and
xor
dec
aam
sahf
scas
adc
stos
aad
stos
lock
cmp
adc
rolb
adc
in
rclb
cmpl
push
add
outsb
and
push
in
daa
lock
adc
pop
pop
dec
rol
std
rolb
ret
sub
or
xchg
mov
mov
int3
les
xchg
pop
cmp
push
mov
aam
roll
pop
icebp
push
lock
xlat
and
xchg
icebp
lret
xchg
addr16
push
aaa
rcl
push
and
inc
pushf
and
mov
jae
stos
dec
mov
movb
dec
adc
inc
sbb
aad
jnp
jge
sbb
pop
rolb
xor
add
pop
inc
repz
ret
sbb
push
mov
adc
loope,pn
jno
les
sbb
test
pop
pop
sub
sti
ja
mov
and
fsts
or
xor
sbb
cs
mov
add
mov
lock
fldcw
ret
js
jo
ficompl
inc
add
xchg
fs
xor
popa
jo
pop
dec
daa
xchg
add
cmp
sbb
fincstp
sub
cs
sbb
adc
mov
xchg
xchg
shll
push
cmp
loopne
push
mov
iret
aaa
sbb
sub
fnstcw
mov
pop
dec
jne
call
xchg
push
mov
clc
mov
jl
sub
sbb
lea
sub
adc
pop
push
push
js
out
out
xor
popa
insl
sub
inc
cmpsl
and
test
mov
roll
cmp
jae
bound
jno
popa
xchg
cmp
sbbl
and
mov
fcomps
fcoms
fadd
and
iret
adc
cmp
sahf
push
pop
sbbl
shrl
ret
pop
adc
mov
addb
pop
xor
insl
or
aaa
je
ja
mov
xchg
xchg
add
add
jmp
lahf
insl
sbb
flds
dec
mov
xchg
xchg
adc
cmp
insl
xchg
in
push
pop
push
sbb
pusha
mov
push
shlb
rclb
out
inc
add
or
mov
mov
add
fiadds
or
mov
cmp
shrb
iret
jnp
xchg
movsb
xchg
add
and
ret
or
jne
enter
xchg
movl
sahf
jno
hlt
out
sbb
push
imul
lods
push
in
xor
xor
pop
sub
sbb
jmp
into
xorl
scas
add
lahf
mov
testl
rcrl
imul
sbb
inc
xchg
dec
xchg
sbb
mov
outsb
testl
mov
sub
popf
or
jo
aam
inc
movsl
add
imul
push
lds
add
xor
xchg
add
inc
sub
das
add
add
sbb
sbb
cmp
jmp
loop
mov
and
sbb
test
or
mov
les
jecxz
add
sahf
and
movsl
or
sub
and
fcompl
pop
push
addr16
pop
in
cmp
xchg
mov
sbb
and
or
push
out
add
push
mov
push
add
jno
or
je
push
mov
aad
and
fisubs
setl
adc
ljmp
shl
xchg
mov
mov
mov
orb
repnz
les
or
mov
lods
push
push
loope
pmullw
sbb
sbb
stos
dec
fadds
shlb
add
inc
dec
fisttps
shll
pop
lret
mov
js
adc
inc
xor
popf
ss
sub
push
lds
shll
mov
loop
in
mov
repz
adc
and
leave
lods
movb
lret
es
subb
sbb
fimull
fldenv
fmuls
pusha
rcll
add
push
stos
dec
push
stc
and
popf
push
sbb
aad
jnp
adcb
test
int
jnp
stos
inc
inc
jmp
aam
cmp
jnp
add
pop
sub
jmp
aad
inc
loopne
pop
xor
push
xchg
inc
fidivrl
mov
jo
lds
mov
inc
aam
lods
mov
mov
test
add
addr16
push
es
and
push
xchg
sbb
ret
mov
pop
adc
cmp
dec
lods
add
or
inc
add
xor
mov
add
adc
pop
ficoml
jle
rclb
les
es
inc
das
sbb
iret
sahf
pop
push
xchg
xchg
leave
enter
add
dec
or
test
jbe
xchg
shll
push
clc
add
cmc
lods
jne
subl
add
pop
sub
ss
mov
jecxz
add
push
inc
insl
js
and
jmp
push
shrb
jno
add
pop
or
clc
mov
mov
push
jbe
call
ss
sbb
mov
mov
outsl
cwtl
sub
mulb
pop
mov
jle
icebp
mov
or
push
and
xchg
lods
jo
xlat
add
frstpm(287
icebp
sub
hlt
movsl
or
inc
xchg
aam
mov
das
sbb
test
pop
aaa
mov
sub
in
add
test
or
aaa
ljmp
jnp
and
mov
lret
rep
stos
adc
outsl
or
mov
mov
mov
andl
cmp
sahf
and
mov
or
mov
sbb
cmpsl
mov
and
das
mov
hlt
xor
and
sub
add
iret
je
sbb
push
xor
add
mov
sub
scas
aam
mov
push
test
adc
shll
or
sbb
imul
mov
andl
jl
adc
push
sqrtps
jo
push
popf
add
sub
repz
movsb
push
cmp
sbb
jae
fldenv
stos
movsl
pusha
and
sub
lea
in
mov
pop
sub
shrl
add
movsl
lahf
or
push
dec
mov
outsb
ss
xchg
add
xorl
call
fisubl
lods
xchg
dec
or
loope
es
das
stos
mov
stos
adc
xor
add
dec
or
mov
mov
fildl
arpl
test
js
pop
jmp
jecxz
ret
mov
or
addr16
andb
lret
je
mov
push
call
mov
lock
cmp
push
hlt
or
push
jp
and
jo
aam
sti
mov
inc
lods
sbb
sahf
pop
mov
ret
ret
mov
and
test
mov
jb
icebp
movaps
scas
fistl
xor
pusha
mov
push
push
loopne
jp
jns
push
call
lods
push
scas
arpl
adc
adc
or
xchg
inc
jmp
test
xor
adc
insl
add
imul
mov
ss
and
call
inc
cmp
and
jp
call
je
je
stc
out
dec
mov
add
jb
bound
add
xchg
ds
rcrb
cmc
push
bound
sahf
mov
sbb
mov
push
inc
xchg
fists
loope
divb
es
lahf
push
subb
inc
or
cmpsb
outsb
and
fsqrt
xchg
and
arpl
cmp
push
and
shl
stc
movsl
in
jl
fidivrl
jecxz
out
fadd
addr16
mov
and
sbb
aad
das
jno
movsl
push
insl
jae
inc
inc
lods
xor
sub
out
adc
pop
push
jns
ja
rclb
cmp
aas
lahf
adc
mov
lods
je
scas
gs
aaa
lret
xorl
jne
mov
mov
sub
mov
jo
mov
rcrb
stos
pusha
jbe
inc
nop
push
addb
cld
fdivrs
inc
sub
arpl
inc
cmp
dec
negl
orb
andb
dec
mov
test
pusha
dec
mov
test
fidivrl
and
movsl
inc
rorb
rorb
repz
mov
inc
mov
aad
movb
aas
sub
push
enter
lods
pop
sub
pop
outsl
add
mov
clc
pushf
inc
sbbl
mov
jno
or
int3
jb
mov
test
push
push
push
push
push
lret
mov
nopl
rcll
pop
das
iret
lods
jno
lods
lods
mov
subl
shlb
and
or
jo
xchg
push
dec
lods
sub
and
ja
outsb
and
iret
xchg
add
aam
js
xor
and
xchg
push
loope
sub
xlat
push
movsb
mov
js
and
jmp
sahf
and
cld
je
dec
inc
cmp
jecxz
push
mov
ja
xchg
xlat
sub
push
pop
fcmovnbe
push
dec
cmpsl
movl
push
sarb
mov
add
pop
lret
enter
in
xchg
ret
add
ficoms
push
ret
or
js
mov
pop
sbb
lods
cmp
inc
and
call
nop
inc
and
lret
test
add
or
or
add
mov
in
xor
js
aaa
jl
or
push
push
cmpsl
sub
xchg
je
inc
mov
xchg
fidivs
or
cmp
test
push
add
sbb
add
pop
xor
pop
addb
add
push
js
sbb
dec
pop
or
cld
pop
je
fmuls
enter
js
cld
inc
pop
mov
cs
jae
xchg
push
sub
fldcw
cli
testl
outsl
xor
ja
cmp
sbb
and
loope
xchg
jnp,pt
pushf
shl
pop
sarl
or
sarl
loopne
loopne
xor
add
dec
and
in
pop
iret
xor
cmpsb
je
fcoms
or
loopne
push
out
pop
push
je
sub
rol
das
lods
inc
xor
add
lods
sub
mov
nop
mov
xchg
mov
and
mov
pop
iret
outsb
mull
sub
outsb
iret
hlt
cwtl
faddp
pop
xor
fld
in
cmp
push
mov
sbbl
iret
xor
fsubs
cmp
into
push
xor
scas
dec
int3
push
aam
and
pop
push
jo
adc
push
sub
inc
inc
loopne
xorl
dec
and
pusha
daa
dec
rclb
push
out
fucomp
icebp
dec
das
ss
sbb
daa
jno
loopne
iret
jbe
xor
add
out
sub
loopne
sbbl
addl
mov
shl
arpl
pop
in
jecxz
push
cmp
sub
lods
sbbl
push
shlb
jle
xlat
xor
stos
xchg
mov
lods
mov
lock
iret
into
aaa
jo
xor
push
rcll
fdivrp
in
out
aam
iret
repnz
ss
push
push
cmp
jmp
add
int3
jnp
mov
rol
sub
dec
or
and
pop
mov
jecxz
inc
adc
loop
inc
loope
sub
outsl
loopne
dec
arpl
pop
sti
cs
ret
shrl
notl
xchg
lret
adc
xor
inc
dec
mov
jno
push
mov
inc
sysenter
push
push
sbb
mov
and
inc
es
jno
mov
jmp
aaa
aas
jno
out
dec
or
in
push
xchg
push
add
je
arpl
pusha
dec
add
stos
add
jo
jmp
pusha
and
add
sbb
and
movsb
sbb
aad
xlat
sbb
and
sub
inc
lock
sbb
gs
cmp
jle
lock
mov
sbb
or
push
inc
aaa
push
lods
dec
movsl
push
pop
fidivs
cmp
into
push
in
bound
hlt
adc
lods
ljmp
cli
test
in
aaa
pushf
push
jb
lock
iret
ret
add
jno
add
ljmp
pop
push
mov
push
jo
push
jg
loopne
jns
bound
mov
mov
arpl
jl
repz
inc
cmp
movsl
cltd
sarb
insl
xorb
mov
jbe
shr
xlat
sbb
adc
and
movsb
and
outsl
and
dec
jecxz
fwait
adc
jns
dec
sbb
bound
popa
je
pop
adc
xchg
push
add
dec
jp
rorb
inc
mov
add
sti
sub
push
cmp
pop
fnsave
mov
movsb
pusha
pop
aas
jne
fidivrl
mov
scas
popa
or
lods
es
movsl
sbb
push
pop
cmp
mov
sbb
mov
lods
es
data16
adc
loop
xor
jno
data16
cmp
lock
call
lock
pop
std
test
pop
pusha
add
pop
shlb
iret
dec
push
cmpsl
test
aaa
call
sti
fisubrl
mov
loop
ret
xchg
pop
lret
fadds
cmpsl
shrl
inc
sbb
filds
inc
mov
js
xchg
add
jmp
clc
xor
jecxz
sbb
loope
add
add
or
sub
inc
xchg
add
sub
jl
rcll
js
xchg
adc
sarl
push
or
dec
movsb
adc
cmpsl
test
pop
mov
push
iret
loop
daa
sbb
or
sbb
test
fsubs
shrb
arpl
dec
stos
cld
ja
out
roll
cmp
sbb
and
or
lret
sbb
loopne
lcall
xor
imul
es
movsl
pop
and
dec
ljmp
cmp
pusha
test
mov
aam
pop
mov
shlb
push
jno
mov
inc
dec
adc
aaa
jae
xor
adc
jne
in
pop
daa
mov
xor
push
dec
xor
bound
ja
movsl
push
daa
sbb
sbb
jnp,pt
sbb
jno
mov
fidivrs
and
sub
ja
imul
dec
and
scas
inc
dec
or
out
out
push
arpl
add
inc
and
pop
icebp
pop
lret
and
inc
and
lods
shrl
aaa
sbb
dec
repnz
or
invd
fwait
scas
stos
jb
lea
stos
test
adc
imul
xchg
cmp
das
or
mov
ja
push
shll
rclb
mov
push
pop
jle
push
inc
call
shlb
in
cmpsb
sarl
js
inc
push
test
pop
adcl
cmp
mov
xchg
mov
sub
mov
cmp
and
jle
or
mov
test
cwtl
dec
test
and
cmp
sub
jl
jno
jmp
sub
sub
or
sbbl
icebp
ret
data16
mov
or
es
daa
or
sahf
je
subl
push
mov
iret
scas
pop
and
flds
and
sbb
dec
jmp
mov
xor
sub
in
or
push
fwait
ja
mov
pop
and
pop
or
add
pop
mov
lret
pmaddwd
pop
pop
add
xorl
dec
movsb
push
jo
pop
and
repnz
xchg
inc
iret
pushf
cmp
call
add
jp
push
aas
jb
or
sbb
jg
mov
mov
add
push
fcom
mov
dec
js
mov
test
es
das
out
xor
mov
cmp
mov
sbb
mov
jle
orb
iret
hlt
jo
and
mov
inc
cmp
cmp
jmp
push
faddl
fists
push
mov
dec
mov
add
cmp
lock
sbb
xor
das
shlb
insl
fildll
xchg
ljmp
mov
scas
sbb
into
aam
adc
cs
cmpb
adc
cltd
push
insl
xchg
call
fwait
mov
enter
lret
in
sbb
sbb
pushf
jnp
inc
test
bound
mov
outsl
pop
stos
jbe
push
loope
cwtl
movsl
subb
jge
xor
jae
inc
addb
dec
mov
xlat
or
pusha
scas
into
andb
mov
ret
jne
insb
ret
sbb
xor
icebp
pop
ret
outsl
adcb
scas
add
mov
test
jo
adc
dec
invd
mov
add
sbb
add
test
push
test
xchg
xchg
push
or
pushf
dec
dec
fcoms
push
and
dec
push
adc
pop
lcall
inc
sub
test
test
pop
adc
or
cmc
cmpsl
movsl
jge
add
sub
dec
pop
les
punpckldq
mov
ja
mov
cltd
or
sub
inc
or
dec
cmp
rolb
icebp
daa
cwtl
jecxz
out
subl
pop
outsb
mov
xchg
mov
mov
sbbl
and
popa
push
lds
in
push
aaa
push
jae
movsl
and
lea
pop
inc
idiv
cli
adc
push
pusha
inc
cld
aam
pop
test
xchg
rcll
or
or
fdivrs
test
icebp
jnp
adc
lahf
push
fucomip
push
xchg
jge
xor
mov
sub
popf
loop
add
jecxz
dec
pop
fst
inc
loopne
add
ret
sub
xorb
add
shrl
mov
andb
sbb
mov
xchg
sti
loopne
push
mov
add
icebp
lods
fcmovb
and
inc
jo
and
clc
push
jno
cltd
stos
rorb
or
std
mov
mov
jo
mov
push
sbb
les
add
and
inc
loop
movsl
cwtl
adc
mov
add
sbb
outsb
loope
fldt
es
cmp
test
pop
movq
lods
repz
xor
pop
in
jmp
or
sbb
add
mov
out
or
rolb
cmp
clc
ror
dec
or
pop
andb
movsb
inc
les
pop
jle
loop
stc
and
sub
scas
call
adc
lcall
aas
dec
jo
les
dec
jg
mov
inc
dec
dec
sub
jecxz
dec
fldl
rcll
xchg
shl
sahf
test
mov
push
jno
add
add
and
into
cmp
xchg
test
les
jle
daa
sub
rorb
lahf
xchg
enter
fucomp
outsb
xor
fnsave
cwtl
and
sub
dec
das
loop
dec
movl
and
lods
push
sub
add
lods
mov
and
jmp
ret
ret
push
sub
lret
dec
popf
inc
sbb
xchg
cwtl
mov
xlat
push
ret
xchg
add
imul
push
push
orl
scas
add
jecxz
add
xor
fiaddl
lock
fwait
mov
ja
inc
add
mov
pop
mov
scas
or
in
sti
das
lods
js
and
loopne
xlat
pop
in
dec
clc
outsb
or
and
inc
movsb
fcomi
cmp
cmp
sub
movsl
ja
out
and
dec
out
stos
mov
adc
out
xchg
popa
cmp
repz
xor
inc
or
pop
mov
dec
hlt
aam
cwtl
clc
mov
dec
jp
sbb
cmpb
popf
cmp
xchg
xchg
outsb
push
ds
nop
shll
xchg
cmp
or
cmp
push
xor
push
negl
xor
in
mov
orl
aaa
xor
sub
lods
mov
fwait
loope
loopne
jo
fsubrs
push
pop
xor
jmp
pop
imul
test
add
or
ret
test
rcll
imul
loope
out
scas
inc
cmp
ret
sar
adc
js
sbb
aad
sarb
scas
xlat
fadds
jae
ljmp
inc
fcoms
repz
inc
mov
jp
mov
in
mov
add
add
pop
call
imul
divl
pusha
mov
iret
gs
mov
js
insl
xchg
test
in
test
pop
out
movsb
and
or
int3
scas
inc
jmp
popa
iret
xchg
sbb
cmp
mov
inc
in
add
jecxz
lahf
popf
inc
out
mov
push
or
lods
imul
movsb
or
pop
cltd
push
jne
loopne
sahf
push
addr16
sbb
adc
lret
call
dec
sbb
stos
sahf
jmp
pop
xchg
dec
pop
sbb
std
outsb
xchg
daa
mov
pop
ret
jmp
add
rcr
mov
gs
in
dec
sub
add
decl
jp
jns
rorl
sbb
std
bound
inc
xchg
frstor
inc
roll
mov
inc
jns
pop
or
mov
sub
out
int
dec
pop
dec
ret
popa
stos
or
push
ficomps
lahf
les
adc
fwait
dec
js
icebp
cmp
call
insb
fstp
cmp
jle
testl
aas
mov
push
scas
push
and
scas
and
shlb
enter
test
test
stc
push
jmp
movl
add
mov
insb
mov
gs
pop
xlat
call
repnz
pop
xor
inc
fwait
mov
arpl
and
lret
inc
mov
cmp
mov
scas
or
and
test
imul
mulps
mov
scas
add
pop
or
jo
mov
fdiv
pop
loop
and
sbb
mov
das
es
mov
cld
push
add
jns
das
xor
out
adc
sub
iret
dec
or
or
add
sbbl
add
pusha
pop
sub
mov
ljmp
cmp
dec
sbb
ja
imul
js
pop
fstpt
inc
out
jo
aaa
or
or
fmuls
jmp
cmpsl
push
sub
out
or
add
lsl
fldt
add
push
dec
inc
or
leave
or
fbld
sahf
das
dec
inc
rol
mov
sysret
adc
das
jns
or
push
int3
and
cmp
sub
lods
add
ret
outsb
add
mov
mov
xchg
add
sbb
mov
or
mov
ret
enter
lahf
add
lock
xchg
aas
push
lea
add
ja
pop
push
scas
std
daa
fadds
and
lods
sub
sbb
mov
stos
inc
shl
addb
jno
pop
repz
adc
push
jl
xchg
scas
and
push
sub
mov
fnsave
xor
jo
cmpsl
sub
bound
repnz
jne
push
ret
sub
loope
sbb
cmp
outsb
in
div
repz
sti
mov
sub
js
xchg
fnstcw
fs
nop
xchg
inc
and
nop
popl
mov
fildl
and
add
imul
sub
jno
or
mov
out
je
xchg
aaa
add
mov
sbb
dec
push
ja
test
mov
decb
mov
sub
push
pop
sub
add
ja
cmp
data16
and
xchg
cmpsb
mov
and
in
jae
sbb
add
mov
fcmovnu
mov
in
out
imul
cwtl
subl
jl
xchg
ljmp
outsl
stos
jnp
lea
aaa
sbb
sbb
adc
and
mov
or
or
or
add
sbb
int3
subb
mov
pop
xor
xchg
imul
mov
scas
dec
orl
cmp
sub
add
fcoml
jns
jns
push
rcr
add
push
lods
imul
aas
dec
in
cmp
shlb
stos
adc
add
loopne
ror
push
xlat
nop
mov
js
lea
mov
jo
shrb
stos
outsl
arpl
into
mov
iret
pop
push
je
ss
pop
jne
or
cmp
vpackssdw
lock
call
lock
pop
xlat
add
stos
ja
pusha
mov
aad
push
out
sti
fstpl
adc
lods
aam
bound
ja
push
push
add
ljmp
push
fstpl
push
fldcw
shlb
dec
push
push
ja
out
in
xchg
and
or
push
xsave
lods
push
or
cmpsl
cmp
or
ja
mov
adc
or
outsl
scas
rol
insl
lock
inc
adcl
inc
pusha
fcompl
pop
loopne
mov
and
fsubrl
cmp
jns
jno
adc
pop
jecxz
xchg
mov
enter
xchg
es
pop
hlt
cmp
mov
jp
mov
fdiv
int3
cmp
add
push
fwait
notb
hlt
add
sub
lods
and
test
xchg
inc
stos
inc
pop
xor
adc
add
or
xor
aam
adc
scas
sub
loope
fs
bound
testb
mov
cmp
dec
mov
ret
jbe
je
jnp
clc
in
adc
sbb
dec
mov
pop
pop
scas
shrl
andl
or
movsb
lcall
or
fdivrs
loopne
pop
push
lods
mov
cmp
adc
scas
and
sbb
xor
sbb
mov
roll
or
aam
inc
sbb
pop
sbbl
inc
in
mov
push
add
sarb
sbb
or
cmpb
ret
fidivrs
and
add
sub
sub
mov
and
int3
mov
sbb
jnp
shr
ret
shrl
je
decb
lods
pop
and
cwtl
sub
inc
add
cltd
loope
loopne
or
in
iret
mov
sub
popa
loope
jge
cmp
inc
dec
lods
push
ret
mov
or
lahf
gs
inc
cli
ljmp
pop
daa
test
mov
popf
lods
out
movb
sub
jb
push
cli
test
sbb
test
cmp
andb
in
cmp
faddl
nop
or
jno
adc
loopne
sub
int
or
enter
ss
sub
xchg
and
ja
fdiv
fistpl
and
cld
pop
daa
cwtl
sbb
sub
pop
push
push
out
fdivs
cwtl
shll
test
rcrl
rorb
loop
cmp
daa
int3
xor
mov
fwait
sbb
sub
in
mov
shlb
das
push
in
pop
mov
fwait
inc
add
add
jbe
cmpb
add
mov
loope
stos
lods
add
pop
jecxz
paddusb
fmuls
jo
insb
paddsb
arpl
mov
add
add
cmp
hlt
es
sub
fwait
iret
pop
clc
nop
stos
adc
jne
xchg
and
ret
test
nopl
cmp
jo
aas
leave
adc
inc
pop
fiadds
cmpb
js
cmpsl
addr16
push
adc
adc
jnp
popa
sub
or
mov
cmp
movsl
repz
mov
or
fucomp
and
push
es
and
cmp
mov
jbe
adcb
xor
cmp
xor
stc
push
xor
xor
pop
lods
lock
cltd
sbb
out
lods
es
adc
test
js
add
xlat
sub
or
inc
cmp
pop
push
fucomi
outsb
sbb
fsubs
hlt
push
pop
dec
mov
sub
pop
data16
push
push
push
in
cmpsb
test
out
mov
inc
das
lret
cmpsb
out
rorl
test
and
push
scas
push
cli
ret
jb
out
pop
xor
pop
test
std
fisubrs
mov
xchg
pop
dec
push
dec
mov
dec
add
mov
roll
xor
cltd
arpl
adc
push
lahf
mov
in
out
push
jecxz
pop
mov
add
addb
cs
inc
or
aaa
add
or
outsb
loopne
nop
xchg
pop
xchg
movb
mov
sbb
adc
pusha
dec
push
sbb
std
mov
and
xor
push
sub
jae
add
imul
lds
rorb
inc
mov
xchg
insb
bound
out
pop
push
xchg
add
scas
jle
js
int
or
or
adc
mov
ret
imul
arpl
mov
es
xor
sahf
jae
int3
add
addl
pop
or
jns
or
and
xchg
add
call
jno
dec
cmp
fcomps
pop
cmp
adc
dec
rcrb
dec
pcmpgtd
imull
add
repz
loope
push
dec
jmp
push
push
movsl
mov
fwait
push
sub
aam
and
xor
jbe
push
jecxz
add
or
pusha
jp
push
ja
rol
cmp
jo
in
fs
lcall
add
jle
cmp
inc
mov
nop
mov
jnp
not
pop
lds
aam
ds
out
mov
sub
sbb
push
aad
rcrb
push
add
mov
popf
aas
pop
sarb
mov
or
mov
out
test
aaa
xor
rolb
jle
aam
or
jns
add
and
or
loope
addr16
movsb
jmp
fwait
jns
repnz
sahf
hlt
rol
inc
ja
sti
shrb
xchg
bound
sbb
fmulp
xor
inc
mov
rorb
les
add
jp
sbb
jbe
push
sub
imul
add
lock
xchg
jo
jno
cmc
xor
loop
popf
stc
out
in
out
or
test
jp
loop
cmc
xchg
out
push
and
out
and
pop
push
lret
or
addb
sbb
jb
sbb
push
aaa
xchg
btc
pop
push
sub
pop
inc
fcmovnb
int3
int3
or
xchg
add
sbb
xorl
adc
enter
popa
outsl
inc
out
and
cmp
push
push
inc
les
lods
in
add
and
xchg
imul
adcb
push
loope
les
inc
lcall
jno
push
out
inc
jno
lock
jae
dec
pushf
mov
int3
dec
xchg
mov
insl
inc
cmp
and
push
sti
orl
pop
icebp
testb
dec
mov
pushw
in
or
jp
dec
xor
push
add
pcmpgtd
xchg
in
push
insb
sub
cld
cmpsl
popa
or
xor
dec
shll
dec
or
gs
lock
or
sti
fisubs
adc
jecxz
xchg
or
sub
ljmp
rcrb
or
iret
cmpl
leave
push
and
push
cmp
mov
xchg
aam
call
jo
push
push
out
and
cmp
ds
mov
mov
cld
insb
and
sub
xor
je
into
sahf
add
insl
push
subl
sub
aam
stos
cmp
add
sub
push
dec
or
and
cs
sub
cs
sub
enter
pop
das
jge
in
mov
pop
dec
sub
sbb
add
push
and
and
ja
lds
sbb
out
and
cltd
jp
jnp
out
cmc
cld
int3
and
imul
cmp
pop
and
pop
movsl
adc
add
and
push
sbb
insb
cmp
xor
sbb
inc
dec
add
pusha
push
xchg
rorb
xor
js
sbb
push
div
mov
int3
shlb
xchg
xchg
push
xor
jl
mov
or
jle
dec
sub
jle
ret
loopne
sbb
cld
and
and
cs
xor
cmp
cmp
cld
push
lret
nop
iret
or
mov
fnstenv
cli
clc
outsl
scas
pop
sub
push
cmp
int
sbb
push
push
push
inc
lret
faddl
add
xchg
jnp
sbb
mov
fdiv
addb
jb
shll
pop
ret
ret
in
mov
jmp
mov
outsl
dec
push
sbb
jge
popa
mov
vpaddusw
in
in
imul
addr16
js
push
push
hlt
pop
test
ret
loope
lock
add
xlat
dec
f2xm1
repz
mov
mov
or
and
jp
repnz
lock
mov
loopne
or
loopne
fidivs
fsubrl
push
fstpl
adc
hlt
jo
pop
push
inc
mov
ds
push
pop
popf
movsb
mov
aaa
in
in
jno
xchg
or
add
adcb
push
ret
mov
dec
js
mov
dec
mov
aam
or
mov
sbb
push
sbb
push
jbe
add
push
adcb
cmp
inc
fisttpl
sbb
ja
or
mov
push
pop
ds
push
cltd
push
pop
push
adc
or
xor
outsl
xor
jb
das
in
cmpsl
je
inc
jp
add
pusha
rol
mov
add
add
loop
pop
jl
es
lods
js
jecxz
xchg
dec
push
arpl
adc
orb
test
es
fmuls
test
sbb
jl
aam
sub
push
jg
and
loope
int3
test
push
and
mov
push
add
popa
or
fdivrs
and
movb
mov
les
shlb
mov
add
or
add
imul
jl
sub
lock
rorb
dec
jecxz
mov
sub
pop
add
push
mov
rcll
shrb
sbb
es
mov
xor
sbb
cltd
jge
push
dec
loope
popf
js
add
pop
outsb
aad
in
lods
mov
aaa
pop
push
jmp
je
jno
enter
mov
fcompl
dec
insb
es
adc
jne
daa
aad
aaa
pop
stos
jns
xor
data16
lea
jp
pop
sub
aaa
ret
sbb
aad
pop
jb
xchg
xchg
adc
scas
jnp
fcompl
adc
and
jns
popa
push
and
ljmp
gs
add
scas
popa
pop
lods
jns
test
xlat
ss
movsl
or
loope
cmp
jge
inc
push
adc
jl
add
cmpsl
cmpsb
pop
jae
jecxz
out
push
out
xchg
int
jne
fwait
lahf
in
retw
mov
rclb
ljmp
out
or
movsl
push
push
fimull
lea
mov
fcompl
rolb
cs
jo
jp
xchg
add
dec
jmp
mov
xor
sbb
sbb
xorl
mov
in
sbb
fcomps
cmpl
lret
fs
daa
mov
push
xchg
nop
out
test
les
pusha
or
loopne
or
fistps
jmp
test
or
scas
ja
in
adc
adcl
inc
pusha
roll
push
loopne
jl
jbe
push
fisttpl
jno
sbb
dec
out
das
pusha
xlat
push
mov
aaa
je
mov
shll
or
and
mov
ljmp
mov
test
and
call
and
mov
cmp
dec
jno
pop
dec
into
andb
sub
xlat
mov
sarl
push
add
xorl
icebp
or
add
out
adc
add
loope
add
test
sub
loope
test
mov
adc
xchg
aad
sbb
repz
cmpsl
jns
adc
add
mov
aam
mov
jbe
movsb
subl
cmpsb
dec
rorl
mov
sbb
push
add
xchg
pop
push
xor
insb
inc
sub
sub
add
rol
xlat
cmpsb
scas
call
rcll
push
aam
fs
adc
jo
shrl
scas
or
negl
mov
or
in
cmp
lods
sbb
push
add
xlat
add
sbb
pop
inc
or
pop
popl
adc
sbb
popa
jne
stos
adc
into
or
cmp
push
sahf
xor
daa
jnp
adc
cmpsb
xchg
add
pusha
sub
lret
popa
cwtl
pusha
adc
inc
add
int
imul
divl
gs
imul
mov
mov
jo
fsubl
popa
mov
loope
pop
jnp
into
adc
in
push
mov
stos
pop
loopne
sbb
or
rcrb
sub
pop
push
mov
pop
and
int3
add
cmp
mov
mov
mov
dec
mov
adc
sbb
sti
xchg
pop
outsb
xchg
ret
adc
add
push
imul
push
addr16
add
inc
jbe
pusha
je
mov
and
mov
jns
ret
push
or
push
ds
rorl
pop
xchg
push
mov
dec
lods
stos
imul
bswap
or
jo
sbb
sub
mov
int3
pop
mov
mov
fnstenv
mov
stos
loopne
mull
pop
push
test
pop
pusha
pop
shll
mov
rcl
dec
test
pop
mov
inc
xchg
mov
imul
add
rorl
push
popa
pop
push
and
sbb
adcl
adc
xchg
sahf
and
sub
mov
shlb
adc
cmp
cmc
mov
cmpsl
jne
pop
in
sub
jp
jnp
dec
add
scas
sub
addr16
sub
push
cwtl
imul
popl
mov
shrl
pusha
lcall
add
fs
jno
in
out
ret
adc
mov
cltd
movsb
roll
mov
sbb
push
sarl
mov
push
sbb
xchg
testb
movsl
and
mov
mov
daa
mov
scas
xor
lea
mov
imul
sub
out
je
int3
es
xor
addl
leave
sub
mov
rclb
addl
lea
xor
loop
loope
es
and
loopne
add
sbb
inc
pop
push
imul
add
sub
add
movsl
movsb
inc
and
jmp
in
add
testb
adc
loopne
mov
mov
roll
fwait
cmp
nop
xchg
push
mov
imul
pusha
pushf
pop
jl
pop
mov
inc
inc
sbb
sub
gs
add
sbb
sub
adc
daa
loop
push
xchg
lret
mov
mov
out
sbb
jle
mov
ret
pop
call
mov
mov
xor
dec
push
add
fcomip
add
or
push
sahf
push
pop
xor
inc
mov
adc
jo
shrb
and
cmpsl
mov
xchg
imul
jo
push
mov
push
lods
xor
jno
xchg
mov
cwtl
fcmovne
add
lods
xor
xchg
pop
xor
flds
cmp
push
push
pop
and
sbb
test
mov
cmp
xchg
fists
enter
icebp
mov
push
push
sbb
in
ss
scas
pop
and
das
aad
fdivrl
add
cld
push
roll
es
loopne
in
cld
push
xchg
stos
push
daa
cmp
mov
bound
mov
jle
adc
insb
mov
addl
sub
dec
bound
sbb
push
pop
cmp
pop
pushf
sbb
pop
sub
push
pop
add
add
ljmp
popf
push
inc
pop
cmp
and
mov
imul
pusha
divl
popa
das
stos
test
push
int3
mov
push
mov
lahf
shll
andb
mov
xchg
mov
xchg
jge
sub
stc
jo
pop
inc
xlat
sbb
cmp
or
incl
daa
xor
fiadds
loopne
pop
shlb
pop
xchg
push
push
ror
shr
xor
cmp
add
add
ret
dec
push
jmp
cs
mov
shll
in
cld
fnstcw
push
lods
push
cmp
adc
mov
pop
fdivs
dec
rcpps
sbb
inc
jg
lods
pop
sbb
imul
sub
jo
mov
scas
jno
jmp
ret
mov
dec
ret
movsl
dec
dec
dec
insb
lahf
cmpsl
ja
lret
inc
xchg
mov
dec
pop
lds
je
add
adc
pop
sar
daa
mov
jo
pop
inc
test
push
cli
gs
or
or
sbb
cltd
dec
inc
scas
mov
xchg
test
xor
sub
ret
loope
arpl
fxch
add
fmull
and
icebp
rorb
cmp
dec
loope
add
push
add
pop
ss
imul
test
xor
mov
jne
dec
sub
add
push
and
pop
leave
imul
ror
cmpsl
dec
push
das
movsl
mov
add
arpl
pop
aaa
add
fldenv
daa
cmp
push
mov
ret
pusha
xchg
inc
icebp
pop
mov
or
add
push
test
dec
popf
fisubrl
xor
stc
lahf
add
or
sbb
pop
mov
jne
or
pop
fistps
cmpps
int3
dec
add
push
and
or
mov
xchg
js
and
dec
pop
pop
push
gs
adc
es
inc
inc
sub
pop
adc
inc
je
jnp
ja
jbe
lret
mov
mov
inc
sbb
and
pushf
mov
test
ret
pop
rorb
mov
popf
in
mov
dec
mov
add
shrl
jmp
jmp
mov
and
insb
ja
xchg
or
adc
push
ret
loope
test
fisttpll
xchg
mov
inc
test
mov
push
inc
scas
sub
dec
loopne
xchg
jbe
rcll
push
leave
cmp
test
add
call
adc
push
stos
fdivl
inc
cmpsb
lods
cmpsl
sbb
adc
mov
fwait
ret
stos
mov
inc
sbb
js
push
fdivs
sbb
pandn
inc
je
push
out
arpl
mov
aad
addl
sbb
sbb
in
add
arpl
and
sbb
add
pop
xchg
loope
out
mov
sti
fidivl
xor
jl
and
push
repnz
lock
adc
add
lock
fldcw
js
sub
repz
adc
adc
sbb
adc
sub
xor
adc
repnz
cmp
sub
dec
in
lahf
xchg
test
adc
dec
cmp
test
dec
sub
test
dec
leave
test
mov
out
xchg
fists
xor
push
dec
ss
and
mov
dec
cmp
and
push
icebp
pusha
push
sbb
inc
fdiv
js
nop
int3
jp
out
or
jbe
jmp
push
or
aad
jnp
mov
out
and
pop
rclb
mov
inc
jg
dec
adc
hlt
add
gs
and
jge
xrelease
bound
add
dec
inc
mov
or
pop
push
test
inc
dec
pop
and
add
mov
in
fs
lret
xchg
shl
push
es
sahf
popl
rcrb
loopne
jp
mov
cmp
pop
mov
sub
test
inc
dec
sub
cli
inc
loop
mov
nop
mov
popf
ret
push
or
stos
pop
addb
pop
or
inc
or
mov
sbb
aas
sub
fimull
inc
dec
push
and
mov
cmp
fimull
loopne
idiv
xchg
xor
mov
add
inc
mov
mov
loop
mov
test
or
sbb
mov
lods
xchg
rcrb
stos
pop
mov
xorb
js
mov
rcl
cmpb
loope
inc
or
xchg
subb
and
fcoml
test
lret
fidivl
aas
sbb
ljmp
cmp
jno
cltd
mov
daa
sbb
lahf
add
inc
iret
xchg
es
jecxz
sbb
mov
add
lea
mov
adc
push
push
lcall
pop
xchg
out
iret
push
std
lea
and
test
outsb
fwait
ljmp
pop
stos
into
repnz
mov
enter
xor
xchg
stc
stos
icebp
add
out
push
add
add
les
pusha
xchg
into
pop
cmp
lahf
xchg
mov
clc
cmp
sbb
sbb
repnz
inc
or
pop
adc
daa
out
cltd
lods
pop
je
fbld
shrb
add
ja
movsb
pop
fld
jbe
add
test
lods
ss
fsubs
je
sarl
jb
adc
aaa
lock
in
rcl
cmp
dec
inc
push
xchg
icebp
cmp
push
mov
xchg
fbstp
or
dec
pusha
xchg
hlt
std
pop
xor
xchg
mov
mov
data16
cwtl
mov
xchg
sbb
mov
shll
inc
imul
gs
aam
repnz
mov
pop
push
pop
mov
test
mov
sub
jle
subl
dec
cmp
fdivr
add
pop
cmpsl
inc
sub
jmp
imulb
cmp
sbb
std
lret
xchg
pop
dec
rcll
sub
xor
add
insl
ret
xor
inc
cmpsl
ret
push
rcll
jecxz
inc
sbb
emms
pop
mov
jno
push
add
pop
sbb
fisttpll
icebp
mov
dec
or
fsubs
imul
xchg
sub
lss
fadds
lds
and
ret
sbb
jne
inc
mov
add
test
sub
cmc
mov
aam
jno
mov
stos
dec
mov
mov
je
fwait
sub
es
int
lock
fsubrl
daa
inc
jns
mov
xchg
mov
js
imul
pusha
xchg
push
lahf
push
pushf
mov
icebp
es
test
cmp
gs
lret
roll
shrl
push
mov
push
inc
insb
push
dec
iret
xor
popf
jo
les
dec
lahf
add
mov
and
lock
vpunpcklbw
jle
subl
dec
inc
xchg
jnp
mov
fadds
xchg
mov
jge
loop
sbb
insb
mov
cmpsl
sub
test
das
outsl
nop
fwait
mov
push
add
or
mov
push
and
mov
inc
jnp
clc
add
enter
push
push
shlb
fcmovnu
das
sub
and
xchg
jl
and
jmp
shll
iret
push
pushf
loopne
addl
in
sub
and
dec
gs
lret
fwait
sub
insl
out
add
add
mov
inc
je
add
push
fistpll
dec
addl
add
mov
pop
out
aad
and
imul
sbb
in
dec
and
les
test
je
dec
insl
sbb
add
adc
out
mov
rorl
cmp
nop
movsl
aad
cmc
add
add
mov
rolb
lock
pop
jnp
adc
jne
xor
cmpsb
sbb
inc
cmp
dec
and
lods
les
fcmovbe
inc
leave
out
adc
jb
mov
nop
xlat
jle
xchg
push
xchg
xor
xor
scas
push
aad
cmp
cmp
mov
inc
scas
fstpl
mov
mov
cmp
nop
lods
xor
nop
mov
lcall
cmc
xchg
hlt
stos
fcomps
ror
gs
jne
jge
sub
les
xchg
xlat
lahf
jmp
mov
pop
imul
pop
dec
out
shrb
inc
rorl
xor
add
sbb
sub
sbb
jbe
add
movsb
add
aas
movsb
pop
adc
je
sub
rcll
arpl
popa
pop
popa
mov
pusha
pop
jle
adc
pop
pop
daa
add
arpl
add
push
das
sub
add
mov
pop
push
inc
adcb
mov
and
xor
movsl
sbb
or
gs
test
call
fistps
mov
fimull
mov
shlb
leave
xor
ss
movsl
mov
int
incb
inc
insb
add
sbb
outsl
insb
jae
lods
psubsw
sti
subb
test
imul
out
or
fiaddl
xorl
inc
dec
jmp
adc
lods
dec
jmp
es
push
sbb
cmovl
jne
inc
push
xchg
js
cli
or
fbstp
gs
jo
loope
jne
je
cmp
gs
and
sbbb
push
and
push
clc
sbb
xchg
push
dec
cmp
adc
jg
int
dec
pop
sahf
filds
test
adc
aas
xor
xchg
inc
and
push
orl
mov
pop
loopne
xchg
ficoms
add
jo
add
shrl
int3
xlat
into
leave
adc
adc
lds
mov
int
lds
and
in
fdivl
lret
sub
inc
lcall
push
or
andb
or
adc
sbb
jno
iret
inc
inc
les
outsb
lret
insb
or
int3
add
rcrl
fstps
dec
cld
sti
jmp
add
dec
testb
mov
mov
mov
idivl
jae
jl
les
mov
inc
cmp
fisubs
cmp
test
jl
mov
pop
or
insl
push
jb
icebp
mov
add
lock
pop
inc
dec
aaa
sub
jge
inc
shll
fcomps
sbb
sahf
cld
fstps
sub
and
rolb
mov
xchg
or
les
fwait
mov
add
loopne
pushf
js
mov
add
ret
dec
popa
sbb
adc
pop
add
mov
push
ret
sarb
sub
sbb
and
fisttps
iret
dec
dec
jae
or
xchg
jns
adc
push
insb
imul
pop
push
mov
mov
jae
lahf
int3
loope
or
push
test
hlt
dec
vpavgw
cltd
push
dec
in
pop
movsb
xchg
pop
lret
and
mov
push
pop
test
fisttpl
add
adc
fcmovb
jmp
sub
sub
cs
icebp
inc
add
movsb
negl
inc
jae
xor
sbb
lock
rcrl
add
jecxz
out
sti
test
pop
inc
pop
xchg
push
sub
adc
cli
call
outsb
orb
call
and
pop
pushf
add
mov
jo
insl
lock
shlb
jge
fadds
push
je
movsb
mov
or
inc
mov
aas
sub
jecxz
adcb
add
daa
fmul
rol
adcb
sub
mov
fwait
and
scas
pusha
sub
cmp
add
inc
sub
push
sub
inc
iret
lods
es
js
fadds
jp
sbb
popa
pusha
loopne
ss
mov
push
es
inc
movsl
lds
int3
jnp
cmp
ret
repz
test
stos
pop
cmovs
mov
mov
aam
or
pushf
jo
mov
mov
jno
aaa
add
adc
add
xorb
scas
sbb
pop
fistps
bnd
incl
clc
adc
add
jo
mov
cmpsl
ss
mov
mov
sub
rcr
dec
les
orl
mov
sub
cmp
mov
and
xor
pusha
sbbb
rsqrtps
inc
push
insb
popf
mov
xor
inc
add
mov
add
call
adc
xchg
adc
rol
push
daa
lret
mov
mov
rorl
fcoms
pop
jge
sub
cwtl
xchg
pop
add
xlat
pop
pop
mov
push
sti
mov
xchg
push
fiaddl
clc
sarl
jb
cld
ja
adc
repnz
cmp
sub
mov
xlat
xor
out
mov
xchg
ror
mov
or
out
xor
ret
dec
je
pop
outsl
add
push
jnp
faddl
ja
cmc
dec
sbb
add
out
ror
fimuls
mov
dec
lret
iret
and
leave
dec
xchg
dec
rolb
lods
dec
arpl
outsb
in
cmpsl
fmuls
mov
or
pop
int3
add
and
dec
pop
pop
addr16
lds
cmpl
nop
pop
sbb
and
ret
rcrl
das
inc
lret
mov
xchg
xchg
data16
sub
jbe
negl
in
call
sub
sbb
leave
iret
ret
push
or
ja
mov
aaa
or
mov
daa
push
push
dec
ljmp
cmpsb
xor
iret
stos
cmp
fucom
insb
test
xchg
xor
pushf
lret
das
cltd
insl
sahf
test
rclb
jne
pop
enter
rcr
idivb
rcll
mov
xor
push
flds
test
lea
lock
mov
push
and
arpl
and
push
testb
or
leave
inc
or
scas
dec
xchg
or
popa
fdivr
ss
jo
and
test
jne
jge
rorb
scas
repz
sarl
push
sbb
ds
insb
inc
lret
add
dec
inc
and
test
dec
in
jae
stos
pushf
fsubrs
xor
int3
andl
push
out
xchg
xchg
pop
push
inc
movsb
jno
sbb
add
xchg
test
movsb
push
xor
mov
xor
mov
andl
out
mov
xchg
add
cwtl
jno
add
rolb
fmul
inc
dec
and
adc
into
rcrb
loopne
inc
dec
sub
inc
ret
add
mov
xorl
jmp
subb
mov
adc
jo
mov
pop
push
aam
negl
pop
xor
cmpl
adc
stos
and
cmpsl
dec
and
adc
out
inc
iret
push
aam
add
pop
leave
lock
fcmove
add
sub
pusha
movsb
cmp
adc
aas
mov
add
movsb
fbld
inc
sbb
sbb
loope
sbb
movsb
xor
bound
adc
cmpsl
add
ret
data16
add
xchg
and
inc
mov
das
mov
popa
or
pop
outsb
or
pop
sbb
mov
or
sub
fcmove
or
and
aad
pop
rolb
ret
push
js
mov
lods
test
int
mov
popa
int
fbld
inc
add
jo
aam
cmp
dec
mov
inc
subl
es
push
imul
dec
push
stos
imul
jne
fsubl
in
jb
cmp
les
fstl
and
sbb
loopne
rolb
jne
mov
aas
pop
add
nop
mov
addb
or
movsb
xchg
and
or
out
pop
insb
or
sbb
aas
pushf
add
add
and
add
mov
pop
bound
sahf
and
mov
xor
arpl
lea
lahf
sahf
loopw
mov
mov
call
cmp
fdivrs
pop
outsl
insb
pop
pop
arpl
push
addr16
or
gs
dec
movzbl
jmp
dec
inc
scas
jns
jmp
ret
or
es
push
clc
pop
xchg
or
movzwl
gs
mov
lods
addl
sbb
sub
xchg
xor
into
shlb
shr
xchg
sbb
mov
or
loop
pop
or
jp
sub
shrb
ret
ja
or
enter
int
rcrl
push
push
ret
rorb
lds
lret
pop
das
cld
sbb
mov
push
adc
mov
shrb
sub
leave
rcll
call
or
add
repz
pop
fwait
xor
or
addl
mov
addl
xlat
es
push
dec
or
repz
dec
call
add
adc
mov
push
mov
push
mov
pop
inc
mov
add
lds
loopne
fcoml
jo,pt
aaa
mov
loopne
pop
sar
js
cs
das
dec
int3
xor
cmp
jno
clc
insb
dec
adc
mov
xchg
xor
push
sub
fs
enter
adcb
shlb
sbb
iret
lods
fwait
call
mov
test
add
add
dec
sub
sub
movsb
stos
lock
or
clc
sbb
sub
pushfw
lock
js
popf
push
rolb
dec
push
jp
push
and
mov
inc
rol
xchg
jne
cwtl
dec
dec
inc
hlt
mov
cmp
pusha
push
lock
xchg
loope
aaa
sahf
and
faddl
sub
sub
aas
mov
push
sbb
ljmp
sbb
jnp
pop
sbb
in
flds
sub
enter
inc
cmp
jno
inc
pop
or
dec
mov
mov
shrl
jmp
lea
pop
shrl
push
out
js
mov
sbb
sub
leave
xlat
and
insl
andl
cmp
inc
arpl
es
and
inc
xor
cwtl
stc
sbb
push
jg
iret
jb
add
pop
push
sub
in
or
and
aas
movsl
inc
call
movsb
call
cmp
imul
lods
ds
add
mov
mov
es
insb
jl
adc
and
dec
popa
or
daa
add
xorb
ret
and
inc
mov
fisubrs
mov
lea
inc
push
dec
xchg
pop
outsb
mov
mov
bound
and
push
das
out
mov
or
xchg
xchg
mov
mov
or
mov
cmpsb
xor
lock
fldl
jmp
and
ficompl
and
push
push
aas
mov
sbb
ret
push
js
or
pop
adc
adc
fld
pop
xlat
stos
imul
adc
test
movb
mov
sbb
sbb
pop
sarb
cmp
enter
or
pop
lahf
or
xlat
xchg
lret
cmp
outsb
add
in
ret
addr16
cmc
add
add
inc
or
pushf
movsb
sub
addr16
ljmp
mov
imul
add
les
xchg
loop
adc
hlt
mov
jbe
xchg
pop
lahf
out
push
inc
js
movsb
int3
push
add
test
mov
popf
inc
sub
sub
cs
daa
rorl
movb
mov
popf
sbb
adc
das
rolb
dec
mov
into
adc
ja
mov
sub
dec
pop
pop
bound
and
add
sub
jbe
and
adc
push
mov
pop
shll
mov
jbe
cwtl
sarb
lds
sbb
ss
fidivrl
je
inc
and
das
cmp
pop
or
pop
scas
test
pushf
adc
leave
popf
mov
and
jp
ja
and
jecxz
cmp
lods
adc
ret
shlb
hlt
roll
cmpsl
cmp
jbe
add
repz
or
dec
mov
and
pusha
pusha
dec
fadds
icebp
gs
test
out
sub
adc
clc
jge
stc
mov
test
pop
scas
push
sbb
jae
mov
daa
pop
aam
loop
loopne
sbb
cmp
and
cmp
jg
lods
aam
push
mov
or
mov
clc
rorb
fst
and
push
sub
jno
inc
int
inc
outsb
xchg
repz
or
adc
ljmp
xor
mov
push
xlat
je
xchg
fisubrl
enter
int
movsb
xchg
insl
or
stos
ja
pop
je
adc
inc
cmp
loopne
aaa
inc
xchg
es
fbld
xchg
push
ret
imull
pop
in
xchg
je
xchg
xchg
lret
stos
push
cwtl
mov
pop
rol
js
imul
loop
cmp
mov
test
push
xchg
mov
lods
aad
shll
popa
adc
mov
or
cmp
lods
cmc
sub
xchg
xor
icebp
sub
rorb
icebp
arpl
lods
cs
jle
stos
loopne
movl
lea
ja
stos
sub
mov
inc
dec
mov
xor
cmp
repz
pop
cmp
or
mov
mov
lcall
or
jns
mov
inc
gs
dec
add
fcmovnbe
inc
enter
add
jbe
dec
pushf
adc
mov
jnp
sub
iret
stos
inc
and
into
bound
mov
xlat
xchg
rorb
pop
inc
push
add
vmread
push
mov
pop
pushf
movsb
jno
dec
test
ret
dec
aam
fs
inc
pop
jbe
or
jno
test
dec
jp
adc
std
mov
stc
inc
adc
cmpsb
or
stc
add
test
sti
xchg
fcoml
outsb
insl
add
and
gs
les
js
fiadds
jp
in
add
xchg
lods
or
fwait
cmp
test
psraw
das
imul
mov
push
adc
pop
cltd
js
xor
xor
and
push
sub
or
cmp
adc
test
pop
and
cmpsb
lds
mov
scas
sahf
push
add
fistl
dec
in
sbb
cmc
je
in
xchg
cmp
mov
imul
pop
imul
pop
nop
and
nop
dec
sbb
push
sahf
xchg
cs
bound
daa
orb
ret
cmp
lods
adc
adc
and
dec
pusha
xor
push
sarb
mov
push
das
mov
lret
loopne
repnz
inc
xor
test
and
pop
inc
push
pop
and
int
fucomip
sub
ljmp
iret
and
and
push
pop
pop
xorl
add
push
mov
sbb
or
movsl
stc
sub
fucomi
push
jmp
mov
pusha
cmp
test
sub
insl
daa
and
sub
loop
add
dec
dec
push
jp
nop
shll
insl
cmp
adc
and
jle
out
hlt
mov
repz
in
call
ds
aad
sti
push
cmc
dec
pushf
clc
aaa
and
push
rorb
xchg
sub
sbb
movsb
xchg
test
add
shr
xlat
sahf
lret
cmp
cmp
decl
arpl
xor
sbb
push
and
in
int3
shrl
mov
pop
std
xor
add
add
ja
aas
or
and
and
jae
insb
es
mov
mov
iret
aaa
insb
pop
scas
push
lods
sub
sub
mulb
lods
insb
or
add
je
push
scas
xchg
pop
lods
push
pusha
das
leave
cmp
pop
ja
andl
mov
push
push
out
in
fwait
jnp
out
mov
scas
xchg
push
push
mov
mov
imull
push
and
cmp
ret
cmp
dec
push
xor
sbb
and
int3
adc
scas
stc
sbb
sbbl
in
std
push
xor
cmp
lds
outsb
lods
jbe
pop
mov
addr16
ret
jae
addr16
subl
js
inc
or
fsubrl
les
push
pop
ret
pop
insb
les
pop
xchg
sub
outsl
cmp
xchg
fistpl
and
cmp
movsb
xor
fwait
jae
cmp
rclb
int3
sub
inc
or
scas
xchg
je
fidivrl
movsb
inc
push
push
inc
ret
scas
xor
sub
popa
test
popaw
loope
sbb
bound
sbb
ss
cmp
cmpsb
ds
scas
es
adc
movsl
add
push
test
fistl
cmpsb
je
mov
imul
push
popaw
add
into
shll
sbb
divb
dec
xor
sbb
sub
mov
and
jecxz
test
test
outsb
bound
or
addb
in
jmp
jp
repz
or
iret
outsl
sub
data16
mov
push
sahf
daa
scas
pusha
outsb
xchg
mov
daa
mov
add
pop
outsl
sub
xor
push
add
mov
test
pop
leave
pop
sahf
push
cs
outsb
ret
es
pop
or
or
js
or
jns
js
adc
mov
or
mov
les
aam
pop
xchg
sbb
jle
loope
or
arpl
cmp
add
adc
loopne
pop
cmp
pushf
push
nop
in
sub
pop
fwait
scas
and
lds
sti
or
cmpl
loop
mov
cwtl
sbb
add
lcall
cli
lds
movsb
out
cli
test
dec
stc
adc
sbb
popw
or
xor
lods
js
jp
jnp
shlb
sbb
enter
lcall
insb
xor
popf
jo
mov
ljmp
or
pop
push
es
outsb
add
cmp
mov
sub
jo
or
xchg
xlat
enter
sbb
xor
or
in
add
adc
and
imul
gs
xchg
sbb
adc
and
push
aam
inc
pop
adc
mov
mov
lods
add
add
add
sub
add
pop
sub
rolb
adcb
pop
inc
cmpsl
push
pop
nop
ud2
jge
pusha
add
imul
bound
loopne
out
push
add
stc
es
lret
andb
push
add
xchg
fidivrs
rcr
mov
mov
or
jp
push
pop
push
and
lock
jle
int3
xor
push
stc
shl
movb
cmpb
into
cmp
mov
sub
dec
mov
lret
lock
fxch
shlb
imul
inc
or
mov
push
mov
push
outsb
inc
sbb
or
sub
cmp
popa
daa
and
movsb
or
mov
outsb
add
andb
sbb
scas
cmpsl
scas
movsl
hlt
xor
stos
addr16
iret
addb
push
popa
cmp
mov
std
or
js
cmp
push
jne
pop
adc
and
fildl
flds
fldt
arpl
into
add
cmp
add
push
push
dec
or
leave
xchg
inc
test
or
add
loopne
addb
sub
push
dec
sbb
adc
pop
and
lret
cmp
mov
jae
pop
loopne
test
leave
sbb
into
fstps
push
stc
jg
dec
pop
mov
pop
dec
fwait
xor
adc
pop
push
ret
dec
loope
adc
and
push
cmp
xor
add
rolb
arpl
addb
xor
or
dec
fdivs
in
lahf
mov
pop
movsb
pop
sub
add
aam
or
loopne
lret
add
inc
sbb
jl
test
sub
push
dec
arpl
or
inc
cwtl
loopne
add
add
mov
repz
add
das
call
mov
pusha
lock
jp
push
pop
lret
lret
add
add
add
mov
movsl
das
in
sub
cmpl
enter
adc
sbb
add
pop
pop
out
push
xor
das
movsb
lcall
aam
add
xorb
popa
les
rolb
mov
test
add
push
add
imul
popl
pop
cmp
mov
je
sbb
ret
insb
and
pop
push
test
mov
push
aad
dec
in
inc
loop
aas
mov
inc
shll
js
subb
movsb
push
or
mov
in
pusha
in
cmp
mov
out
cld
add
add
pop
push
gs
add
mov
loop
mov
or
dec
dec
or
lcall
dec
cmp
and
out
xchg
mov
cmp
ret
push
into
sbb
or
sub
fisubs
lods
xor
mov
rorb
pushf
rolb
inc
fistpll
ret
popa
or
mov
movl
xchg
pusha
pop
push
sub
pop
mov
add
xchg
dec
icebp
mov
cmpsl
fstpl
call
out
push
pop
out
cmp
pop
movsb
data16
das
ret
fisubl
and
inc
cs
cmpsl
inc
jle
adc
jno
out
movsb
or
cmp
mov
xor
sbb
call
test
das
cmp
mov
sub
stos
loopne
lods
push
stc
addr16
inc
in
leave
test
mov
roll
fsubs
sbb
xor
dec
imul
stos
xlat
fistpll
adc
loopne
outsl
cltd
and
movsl
adc
aad
inc
jge
mov
ficompl
cmp
fildl
jg
addr16
mov
mov
test
dec
push
cs
icebp
pop
push
into
jbe
push
push
and
daa
mov
add
idivl
loopne
jae
sbb
jmp
lods
gs
xor
push
outsb
adc
or
clc
mov
push
or
int
jno
mov
addb
push
and
lods
inc
ss
xor
add
popl
gs
jae
iret
and
shlb
adc
jnp
add
lret
outsb
sbb
lret
iret
mov
lret
add
lods
jbe
push
in
cltd
inc
or
and
adc
int3
ss
jo
aad
mov
mov
loop
fs
call
iret
pop
sub
mov
cmp
aam
shll
sbb
std
cmpsl
adc
inc
sbb
xor
cld
sbb
mov
ficoml
push
dec
cmpsb
jge
add
add
jo
addb
jmp
xchg
add
add
int
xor
push
pop
outsb
in
test
push
jns
js
loope
sub
mov
and
inc
inc
dec
mov
dec
add
std
adc
std
mov
repnz
das
aas
add
fmuls
ror
clc
and
cmpsb
xor
fs
mov
dec
xor
mov
and
jbe
push
hlt
int3
cs
xlat
pop
jl
push
std
add
dec
add
into
hlt
mov
je
jmp
pop
daa
cmpsl
repz
inc
add
sub
dec
push
push
add
je
lods
les
cmpl
or
aad
dec
lea
pop
dec
jle
xchg
xchg
xor
scas
addr16
in
add
add
add
in
ss
scas
push
arpl
je
add
stos
xor
and
add
lods
imul
mov
jl
adc
insl
xchg
movsb
inc
out
int
leave
adc
mov
icebp
das
pop
lea
xchg
mov
int
pop
loope
or
inc
lock
insl
sbb
in
faddl
pusha
sbb
js
or
lea
xor
sarl
mov
add
dec
mov
jge
aam
inc
and
xor
jl
std
test
imul
add
add
jecxz
rclb
or
jno
adc
push
in
leave
sub
add
es
jno
lret
xchg
jp,pt
push
add
dec
jp
enter
adc
or
int3
and
and
or
sbb
icebp
and
push
and
mov
mov
add
stos
imul
sub
movsb
ja
inc
add
int3
sbb
add
imul
ds
pop
xlat
andb
imul
add
inc
lret
xor
je
add
js
dec
push
or
adc
ja
jp
inc
out
out
xchg
fmuls
xchg
or
pop
cmp
pop
or
lcall
mov
sbb
imul
je
bound
mov
dec
mov
popa
aad
sbb
mov
and
or
jmp
shll
add
sti
ret
outsb
call
in
cmp
mov
addr16
in
pop
scas
add
dec
push
pop
mov
mov
loop
fcmovnb
sbb
daa
push
lock
sub
adc
ret
aas
std
mov
lock
iret
or
pop
loopne
adc
or
lret
fldt
jb
testb
frstor
frstor
leave
out
insl
xor
daa
pop
add
enter
std
mov
jp
outsb
lret
fstpt
pop
scas
div
sarb
mov
inc
pusha
push
out
inc
loopne
dec
jp
es
or
sbb
mov
mov
cmp
pop
mov
jle
jle
pop
int
divb
js
insb
gs
out
xor
cmp
insl
ja
das
leave
sbb
mov
add
dec
xor
inc
sbb
mov
mov
cmp
dec
push
xor
push
adc
or
nop
push
mov
sbb
test
xor
xchg
push
idivb
xchg
and
adc
dec
mov
cltd
inc
mov
ret
fs
int
mov
adc
loopne
sub
jge
cmp
ret
push
xchg
xor
fwait
cmp
dec
aaa
add
sbb
jae
jbe
mov
sbb
int
pop
push
and
mov
sbb
mov
lods
sub
movsb
mov
xchg
ja
sub
sbb
das
movsb
pop
lret
and
xchg
push
jge
ja
jbe
lret
and
fcmovnbe
sbbl
fisubs
push
push
faddl
lock
add
pop
loopne
mov
pop
pusha
loopne
dec
js
test
icebp
jge
roll
mov
sbb
push
adcl
mov
mov
push
clc
mov
sub
cmp
mov
xchg
mov
ds
movsl
lcall
mov
shll
loopne
iret
and
fcoml
out
std
sbbb
jp
aaa
mov
xor
leave
inc
ret
pop
rorl
push
sahf
adc
and
lods
outsb
cs
dec
or
jns
xor
mov
pop
iret
mov
xchg
jecxz
or
xchg
scas
and
xchg
sbb
dec
pop
and
sub
fcoms
or
mov
add
popa
pop
test
pushf
in
mov
pop
shll
push
int3
cmpsl
xchg
jle
add
jp
add
add
lret
xchg
mov
je
imul
cmp
in
lea
adc
mov
sbb
xchg
xchg
sahf
jbe
xchg
sub
jns
push
xor
bound
push
xchg
clc
jns
lret
cld
mov
gs
or
inc
test
cmp
sbb
frstor
add
cmp
stos
dec
mov
outsb
out
add
scas
add
scas
test
dec
cmp
cmp
popa
pop
pop
in
je
rcll
mov
or
jg
pop
pop
jbe
negb
je
test
push
mov
mov
stos
adc
ja
das
sbb
addr16
sbb
add
or
push
and
clc
pop
jbe
pop
out
xlat
lret
test
pop
sub
xchg
dec
and
add
aaa
sub
and
xchg
pop
cmp
mov
les
sbb
mov
loopne
pop
ss
sti
mov
loopne
je
push
pop
ret
sbb
sbb
push
test
add
in
shrl
pusha
push
sbb
das
lock
int3
aad
or
sbb
push
addr16
dec
addl
or
cmpsb
pop
shrb
mov
and
stc
push
add
push
rorb
push
ja
sbb
dec
mov
enter
dec
dec
ret
shl
dec
mov
jl
sub
ds
inc
adc
inc
gs
ja
inc
ret
fidivrs
push
push
loope
sub
and
push
mov
pop
inc
repnz
xchg
ret
lahf
xchg
mov
xor
dec
jp
out
cli
xorb
xor
xchg
pop
call
xlat
add
std
sub
repnz
test
stos
push
je
loopne
xchg
jg
cmp
lods
push
xor
test
in
cwtl
jae
leave
xchg
mov
aaa
sbb
adc
mov
in
jno
sub
push
add
add
dec
arpl
push
in
inc
out
inc
dec
and
inc
jp
push
push
dec
mov
adc
mov
lret
jb
fdivs
pop
dec
sbb
and
mov
mov
addl
or
scas
or
sub
adc
fucomi
inc
push
or
and
and
dec
cwtl
jo
jl
pop
gs
jl
pop
ret
adc
addr16
xorl
push
jo
das
add
xchg
xor
insb
into
and
popa
pop
add
and
jo
and
stos
pop
aaa
push
lret
popa
movsb
inc
lahf
jns
arpl
xchg
or
aas
ror
shl
lret
movsl
cltd
sarb
fs
dec
mov
push
sbb
push
sub
add
pop
add
dec
pusha
popf
adc
movsl
push
add
and
je
scas
jp
push
sub
inc
push
enter
addr16
aam
sbb
addl
hlt
push
fmuls
xlat
inc
aam
adc
dec
sbb
hlt
mov
push
movsb
pusha
push
ret
xor
push
jecxz
ja
enter
loope
pop
xchg
test
add
call
adcl
insl
lods
xchg
mov
movsl
fcmovbe
rcl
mov
or
or
loop
pop
dec
sub
add
push
sub
jl
adc
xchg
shll
adc
dec
iret
notb
sub
mov
push
cmp
jmp
pop
dec
rolb
sub
dec
mov
js
mov
jle
mov
jne
bound
scas
inc
sbb
mov
sub
jg
and
adc
push
or
mov
pop
mov
cwtl
cwtl
add
dec
aam
lcall
xchg
scas
dec
cmp
jmp
sub
pop
test
adc
sti
xchg
add
movsl
xchg
xchg
mov
loopne
nop
fadds
repz
adc
xorb
out
insb
dec
pop
jge
add
and
xchg
jle
add
inc
sub
cmp
inc
push
lret
mov
movl
adc
les
push
sub
mov
mov
insb
aam
loope
ds
pop
dec
dec
mov
inc
sbb
fiadds
add
push
adc
lods
xor
jp
jbe
xlat
arpl
pop
je
loop
test
inc
pop
stos
mov
mov
popa
xchg
xchg
in
loop
dec
pop
push
jl
adc
sbb
shr
mov
and
arpl
out
lret
das
mov
aam
inc
sarl
test
iret
push
test
inc
or
pop
jmp
xorl
push
mov
mov
and
es
xor
inc
aam
or
ficoms
xchg
add
sarb
js
mov
jmp
cli
push
cs
mov
aam
xchg
addr16
loopne
push
lcall
xchg
push
adc
xchg
movsl
sub
out
idivl
cmpsb
int3
cmp
adc
shll
inc
pavgb
mul
push
mov
popa
testl
psrad
xlat
or
push
jle
mov
mov
fldl
xchg
mov
sbb
dec
test
popf
jnp
and
adc
push
xor
sub
enter
and
lods
sub
mov
inc
inc
cmp
pop
lcall
xlat
subb
loop
lods
add
xchg
inc
movsl
test
cmp
es
jecxz
cmc
test
xor
xor
jns
enter
lea
and
dec
jo
and
sbb
movb
leave
inc
lock
adc
xor
jle
adc
cli
mov
adc
jle
call
dec
or
int3
lahf
mov
test
imul
pop
sub
mov
mov
push
inc
lret
xor
es
mov
xchg
subl
pop
cmp
push
and
aas
rorb
cmp
sbb
push
pop
mov
mov
jo
mov
xor
lret
sub
jp
lcall
cmpsl
push
xor
mov
loope
ljmp
aas
dec
enter
xor
jp
mov
int3
mov
sbb
xor
cmpl
xor
rcrl
insb
mov
ds
cmp
mov
out
testb
jae
lcall
pop
addb
fistpl
mov
xchg
push
inc
fiaddl
stos
mov
adc
imul
aaa
sbb
loopne
pop
in
pop
and
int3
jmp
lods
movsb
scas
push
loopne
pop
pusha
in
add
add
xchg
and
xchg
and
test
aaa
mov
lods
push
insl
in
push
nop
jbe
inc
js
adc
ja
pop
inc
cltd
ret
movsl
out
sti
or
insb
js
pop
les
nop
mov
scas
adc
mov
enter
mov
add
xor
fs
test
jge
inc
xchg
mov
sub
pop
orb
andb
jo
js
cli
and
aas
popa
add
loope
loopne
fistl
insl
testl
xlat
mov
adc
pop
pop
nop
cmp
push
nop
ret
mov
jl
cmp
loope
add
pop
sbb
adc
and
mov
mov
outsl
fsubl
pop
xor
push
adc
pop
stc
iret
js
inc
cmc
add
pop
stos
adc
inc
fnsave
dec
les
rorb
mov
dec
xchg
cmc
or
mov
bound
out
sbbl
lret
cmpsl
cmpsb
inc
push
add
cmpsb
mov
imul
pop
inc
outsl
mov
or
les
mov
mov
dec
mov
mov
ret
inc
ret
mov
adc
sub
lock
lret
cltd
addr16
mov
shrb
lahf
dec
enter
dec
imul
clc
or
test
or
in
push
cltd
rcll
dec
lea
mov
lods
xchg
fs
pop
jno
test
or
aaa
and
jno
fmul
mov
loope
fildl
repz
jo
pop
or
xchg
add
mov
xor
dec
cmpsl
mov
mov
xor
dec
cltd
dec
orb
add
ret
jg
mov
sbb
or
aaa
jg
popl
setno
xor
adc
mov
mov
xchg
mov
insl
inc
cmc
cmp
mov
sbb
rcr
mov
in
iret
test
inc
inc
dec
pop
jne
mov
je
and
or
adc
pop
mov
out
or
pop
test
inc
dec
adc
daa
lea
dec
addr16
pushf
sub
pop
test
mov
stos
mov
xchg
push
js
cmp
test
mov
enter
xorl
outsb
or
cmp
inc
sbb
jmp
dec
aam
cmc
or
jmp
pusha
add
jb
sub
aam
inc
pop
inc
cmp
push
dec
mov
mov
testb
popf
push
cltd
jne
in
ds
movsb
stos
das
xchg
adc
fs
dec
pop
inc
jg
cwtl
add
cmp
shrb
lock
mov
loopne
xorb
mov
dec
lret
push
ds
fsubrs
repz
or
insl
xor
jae
sbb
dec
or
stc
daa
and
mov
adc
and
bound
push
ss
cmpsl
jno
ret
jns
movsl
inc
sarb
rcrb
add
fs
adcb
xor
mov
jno
test
mov
je
std
xchg
adc
inc
test
add
out
sbb
popf
adc
xor
loope
fimull
lcall
test
pop
adc
inc
mov
rorl
jp
or
test
stos
enter
pop
mov
cmp
pushf
addb
adc
sbb
cwtl
or
ss
dec
cmpsl
push
dec
into
sub
int3
dec
pop
movsl
or
jg
idivb
mov
lret
pop
or
aam
bound
loope
or
cmp
pop
ret
inc
data16
imul
cmp
test
or
add
iret
cwtl
lcall
out
lcall
mov
jmp
lods
int3
add
imul
push
adc
push
push
and
xorl
cli
loopne
loope
mov
insb
ret
or
pop
fsts
push
rcll
push
jg
lock
dec
xor
sbb
fnstcw
arpl
lcall
sbb
adc
adcl
lods
sbb
mov
add
or
dec
lods
fcoml
dec
andb
das
mov
icebp
add
jnp
mov
xchg
mov
bsr
xlat
das
mov
mull
push
pop
gs
sbb
mov
pop
add
push
jo
inc
insb
cs
xchg
int
lock
ret
and
pop
mov
in
jae
mov
int3
sbb
jp
sahf
loopne
orb
ljmp
mov
cmpb
lahf
in
jo
jl
out
mov
mov
icebp
and
arpl
and
bound
mov
into
sbb
pop
loopne
pop
cmp
xchg
jne
mov
adc
and
mov
cmp
push
cmp
jl
loop
leave
jo
aas
and
out
icebp
mov
outsb
adc
and
sub
movsl
outsl
add
fwait
cld
pop
add
shl
lret
sub
xlat
test
cwtl
and
dec
popa
adc
insl
les
cwtl
sub
jo
daa
or
push
xor
add
cmc
jne
in
xor
addr16
pusha
stos
ja
out
or
pop
fs
and
loopne
sub
rorb
sub
and
mov
add
fimull
in
mov
cwtl
push
or
sub
push
inc
inc
adc
sub
adc
sbb
loop
mov
fmul
and
mov
jmp
or
mov
stos
dec
mov
es
add
andb
frstor
ret
clc
mov
xchg
or
xor
cli
sub
fisubl
sub
outsb
es
mov
jecxz
push
scas
pop
aaa
pusha
sub
pop
add
pop
das
stos
xor
sbb
sar
adc
out
or
and
dec
cwtl
sub
dec
sbb
adc
push
push
fisttpll
and
xor
xchg
into
dec
pop
ja
pop
hlt
test
jecxz
dec
fistps
xchg
sub
addr16
add
jbe
add
fmul
int3
push
fs
xchg
jle
adc
fsubs
mov
push
add
int3
lret
xlat
push
mov
xchg
inc
xchg
test
pop
std
dec
push
loope
push
outsb
out
and
pusha
orb
cmp
mov
icebp
in
xchg
add
add
or
nop
outsb
ja
push
sbb
leave
mov
cmp
daa
sbb
push
xor
and
jae
sbb
push
cmp
mov
sbb
shll
pop
fisubs
fwait
out
fs
call
push
das
int3
inc
xor
rcrl
jp
loop
push
inc
lock
lret
jle
xchg
or
bound
mov
gs
rorl
pop
dec
es
iret
jecxz
outsb
push
out
iret
and
sub
cwtl
test
pop
mov
or
aam
loopne
cmp
cmp
fmull
ret
lods
inc
sahf
movb
imul
or
and
push
sbb
cmp
icebp
insb
je
xchg
popa
and
pop
or
jnp
xchg
inc
jb
and
popa
sub
mov
popa
and
push
dec
jno
and
dec
movsl
xchg
mov
cmpsl
movsl
aaa
mov
mov
push
popf
pop
or
cmp
and
lods
inc
lods
das
or
cmp
out
pushf
je
mov
xchg
add
push
ret
xchg
add
and
sub
cmp
insl
add
pusha
or
add
mov
lds
push
push
stos
pop
popf
popa
andl
mov
and
loopne
repz
cmp
sbb
mov
add
out
adc
popa
popf
jne
mov
dec
jo
or
filds
mov
push
sub
mov
or
loope
add
in
or
jns
mov
add
jae
scas
iret
pop
das
sbb
mov
ja
xchg
rcr
mov
lds
xor
adc
lahf
adc
loope
mov
mov
mov
fwait
xchg
and
xchg
or
and
lods
es
and
inc
add
push
pop
mov
sbb
js
jno
inc
xchg
xchg
cmp
out
je
nop
subb
push
arpl
mov
mov
into
and
xchg
mov
inc
out
ja
xchg
and
adc
ret
push
mov
aas
inc
or
mov
and
mov
and
adc
xchg
nop
sbb
dec
xor
nop
cmp
subl
es
lods
and
xlat
enter
pop
lock
sub
lret
mov
das
lret
and
pop
cmp
out
sbb
mov
and
dec
adc
mov
xor
shlb
mov
popa
push
push
sbb
or
xchg
mov
inc
mov
bound
rorl
jno
dec
xor
or
test
push
and
sub
popa
and
inc
in
add
xor
sbb
sbb
cmp
pushf
sub
in
inc
cmp
push
imul
inc
and
sub
xchg
pop
imul
jecxz
daa
es
add
jne
dec
dec
imul
out
sub
push
cmp
add
mov
or
xlat
xor
push
xchg
add
cld
or
push
jae
xchg
leave
or
popf
jg
movsb
mov
stos
imul
push
mov
subb
add
add
cmp
dec
pop
and
jo
mov
sbb
xchg
leave
les
or
movb
cmp
rcll
cltd
cltd
dec
adc
or
testb
xchg
push
mov
dec
lock
cltd
loopne
fwait
and
adc
mov
push
clc
movsb
and
push
das
or
cmp
jno
lret
add
ljmp
test
jecxz
sub
fildll
jo
fstpl
shr
push
sub
mov
cltd
test
filds
add
divl
test
and
or
sar
sahf
add
jbe
pop
iret
hlt
fbstp
push
pop
dec
fldenv
dec
iret
sti
sbb
movsl
inc
sbb
sahf
and
jbe
sub
xor
inc
enter
icebp
mov
and
and
cs
js
xor
in
je
mov
roll
scas
inc
pushf
insl
ss
sub
fs
xchg
loopne
xor
fwait
xchg
adc
mov
js
inc
mov
add
rcll
imul
adc
mov
and
test
jns
xchg
jecxz
push
or
ljmp
fcmove
xchg
dec
add
aas
out
sbb
leave
cmp
rclb
inc
jge
dec
mov
and
adc
outsb
test
in
rclb
clc
es
adc
adc
lods
dec
dec
adc
xchg
add
sbb
test
mov
shrl
or
pop
and
push
mov
shl
je
push
or
in
mov
push
bound
xor
stos
ret
push
cmp
or
xchg
lcall
rol
ret
xchg
pop
out
cmpsb
or
mov
scas
or
pop
popf
sbb
fildll
gs
add
ret
nop
js
inc
xchg
fcmovnu
or
inc
outsl
xchg
out
adcl
loop
xlat
rolb
pop
cmc
mov
in
cmp
jle
pop
or
add
clc
jo
inc
mov
and
push
cli
xor
or
lcall
adc
not
cmp
roll
in
mov
gs
shlb
push
xchg
aaa
jle
and
xchg
lcall
jp
pop
jl
jne
testb
xor
push
and
mov
jmp
pop
ss
sbb
pop
movb
ror
fwait
test
add
js
repz
inc
adc
add
adc
xor
push
lahf
adc
rclb
lea
push
dec
ja
daa
pop
push
sbb
mov
inc
mov
jmp
jmp
repz
gs
add
pop
mov
psubb
xrelease
lds
pushf
jne
insb
sub
dec
insb
ss
mov
in
xor
fdivs
mov
movq
cmpsb
jmp
inc
xchg
into
or
and
jne
jbe
insl
outsb
adc
mov
push
daa
mov
sbb
xchg
jmp
scas
rcrl
xlat
sbb
adc
loopne
sub
cli
ja
and
and
dec
das
pop
xor
adcl
ljmp
movsb
pop
jle
movsl
mov
sbb
push
icebp
popl
addr16
jl
cmp
outsl
das
sbbb
js
fwait
cmp
add
rorb
or
mov
out
and
xchg
js
mov
inc
add
loop
or
push
lds
nop
dec
lret
adc
push
leave
push
or
sbb
movb
dec
cmp
jecxz
mov
pop
aas
sbb
scas
pop
js
loop
int
adc
test
shrb
je
add
or
cmp
xor
add
push
movsb
mov
repz
leave
js
inc
mov
mov
imul
push
xor
mov
gs
aaa
mov
lea
push
daa
pop
mov
mov
aad
push
int3
mov
pushf
jle
repnz
dec
js
cwtl
xchg
mov
vpsubsw
cwtl
subb
pshufw
xor
inc
mov
cli
enter
pushf
jb
push
dec
add
mov
sub
mov
mov
mov
ret
and
in
es
mov
adc
rcrl
icebp
jp
pop
push
aas
adc
mov
rclb
or
sbb
mov
mov
push
sub
pop
je
push
movlps
mov
popa
iret
cmp
bound
adc
xchg
jle
cmp
xchg
mov
pop
ljmp
jge
shrb
add
iret
shr
mov
push
adc
popa
add
in
mov
cmp
lds
sbb
mov
shll
dec
jne
stos
add
add
rolb
cmp
or
or
or
and
lods
movsb
and
sub
and
mov
mov
and
les
push
je
pop
adcl
jg
daa
sub
fmull
sbb
mov
xor
test
or
popa
daa
mov
pop
push
add
pop
inc
loop
xorl
cmpsb
lea
loop
mov
mov
xchg
testl
lods
ret
inc
gs
mov
xchg
inc
push
sbb
pushf
int
jo
lret
mov
adc
push
js
test
mov
aad
lea
loop
mov
jbe
or
loope
data16
add
int3
cmpsb
cmpb
stos
iret
push
mov
cmpb
mov
and
push
sub
sbb
or
push
dec
mov
and
add
lcall
nop
jbe
mov
aaa
mov
mov
outsl
loope
mov
and
add
push
mov
cmp
inc
cmpsb
add
mov
jno
adc
sbb
jo
xor
cmpsl
or
xor
sbbl
add
add
cltd
scas
fsubp
in
or
scas
ret
add
pop
adc
adc
pop
or
or
mov
and
pop
xchg
stos
mov
jno
push
jb
cmp
xor
sbb
test
xchg
in
subb
cmp
lods
xchg
mov
xchg
inc
sub
jp
ds
fdivrs
ja
movsb
inc
ja
jae
insl
inc
ds
pop
jo
and
xor
jmp
out
xchg
pop
jle
inc
test
push
jb
mov
daa
popa
sub
jl
outsb
push
in
stos
or
stc
loop
gs
icebp
and
add
jne
adc
loope
mov
jne
dec
fsubl
adc
mov
dec
loop
bound
add
jno
aaa
xor
dec
push
int
mov
xchg
and
fwait
sub
cmp
cmovle
jae
xchg
dec
mov
mov
js
fadd
cmpsl
int
bound
inc
popf
stos
addr16
outsb
or
mov
outsb
dec
xor
shrb
loope
test
and
pusha
stc
shll
add
pop
jns
and
mov
test
bound
rol
dec
daa
lcall
or
sbbl
shr
shrl
jo
jmp
shrb
push
movhps
push
es
mov
outsb
shll
cmp
mov
loopne
xor
mov
pop
pop
adc
or
addb
and
xchg
pop
cmp
or
fdivs
sub
int3
int3
push
and
sub
test
inc
or
dec
add
mov
ja
lahf
cmp
mov
push
xchg
rolb
jmp
ret
aad
push
lcall
movsb
push
inc
mov
das
and
push
inc
push
xchg
stos
mov
jl
call
rorb
pop
bound
pushw
add
xchg
jne
xor
sbb
popf
pop
jne
add
push
jge
data16
mov
and
not
popa
call
xchg
or
mov
xchg
add
add
mov
les
test
xchg
mov
jne
or
push
sbb
adc
add
sbb
xlat
xchg
subl
subb
xchg
push
inc
les
ljmp
sahf
mov
xchg
ja
adc
push
dec
inc
icebp
push
js
loop
test
daa
rolb
add
out
jl
xor
sub
mov
xchg
mov
pusha
inc
ficompl
adc
jne
mov
icebp
or
mov
sbb
or
and
out
jbe
jne
cltd
jge
xchg
push
adc
fwait
in
xor
mov
pop
aas
mov
fnstenv
mov
stos
mov
dec
inc
cmp
mov
andl
mov
repnz
add
mov
insb
test
fstps
mov
pop
add
xchg
adc
and
lods
xor
jecxz
call
stos
rcl
test
pop
mov
outsb
ror
mov
mov
ds
ds
stos
lret
inc
loopne
xchg
lea
pushf
xchg
stc
cmp
fwait
adc
mov
xor
xchg
sub
movsl
adc
jecxz
sbbb
test
enter
add
mov
add
testl
iret
jo
pop
arpl
and
mov
lods
add
jnp
fldl
and
mov
sub
scas
sub
clc
xchg
pop
leave
push
iret
and
and
ret
movsb
sbb
push
inc
jno
jp
pushf
add
inc
insl
and
int
mov
movsl
dec
dec
sub
or
popa
es
and
push
dec
lods
xchg
mov
das
pop
or
in
push
inc
cwtl
rcl
jge
pop
jno
xchg
int
mov
adc
and
fldlg2
loopne
mov
lahf
iret
pop
sahf
arpl
push
mov
test
mov
movsl
push
add
jnp
nop
xor
movsl
pop
xor
in
xlat
push
popa
push
push
adc
rol
mov
popl
nop
or
pop
call
pop
cmp
lock
mov
xchg
push
push
imul
and
sub
iret
mov
out
jle
mov
lea
jmp
jle
sub
xchg
mov
or
adc
push
add
stos
mov
sbb
add
or
push
nop
imul
mov
shlb
outsb
mov
nop
mov
lret
loop
push
movzbl
sub
inc
lds
test
add
dec
imul
test
xchg
out
les
popf
cmp
add
push
mov
nop
pop
add
push
mov
jge
xchg
pop
and
mov
xchg
xlat
mov
loope
add
movsl
aad
test
imul
cmp
mov
ja
cmpsl
mov
pop
bound
gs
popf
dec
pop
es
sub
sbb
or
adc
sub
out
dec
jne
nop
iret
push
dec
and
iret
pop
int
sub
sub
loop
push
pop
out
inc
out
add
inc
les
mov
xchg
lock
ds
sbb
insl
jb
test
ja
pop
pop
rcrb
mov
sub
mov
data16
add
add
xor
in
into
cmp
ja
out
xchg
push
add
dec
cwtl
mov
add
and
adc
les
pop
rol
lcall
and
xchg
call
push
inc
push
add
push
and
adc
mov
je
fildl
mov
adc
and
les
ss
lock
push
mov
mov
lock
pop
aam
push
pop
jbe
les
lods
popl
jno
lret
jne
sbb
pop
push
mov
sub
loop
das
jecxz
pusha
and
imul
and
push
cld
scas
push
xlat
fidivrs
jb
xor
inc
add
and
pop
psraw
rorl
aam
push
and
sbb
cmp
cmpsl
xchg
xor
pusha
mov
aas
pop
mov
mov
ja
and
lock
xchg
es
pop
sbb
pop
or
cmp
in
lcall
cmp
lahf
outsl
mov
push
sub
jno
mov
push
adc
rorl
jne
mov
loope
je
adc
aam
push
dec
adc
ret
dec
add
mov
mov
inc
test
add
adc
add
mov
addr16
test
and
out
push
iret
test
mov
dec
jnp
addr16
repz
sbb
xor
outsl
adc
jne
fidivrl
imul
dec
push
xor
pop
or
sbb
push
pushl
insl
mov
ds
outsb
or
cmp
lahf
sub
cmp
mov
iret
clc
mov
popl
orl
mov
push
xchg
mov
or
insb
and
shl
mov
cmp
xchg
mov
insb
jg
fcomp
cmpsl
rcll
scas
and
popf
orb
into
jb
adc
loopne
inc
out
pop
stc
jp
repnz
push
in
addl
sbb
sub
mov
and
imul
leave
aam
popa
mov
jo
cmp
xchg
sub
test
shrb
mov
inc
sub
cmp
pop
push
icebp
or
push
in
xchg
and
and
inc
mov
aas
movzbl
ret
pop
xor
push
ret
add
fwait
xchg
lret
pop
lcall
pop
pop
xchg
mov
dec
add
ljmp
lds
or
xchg
sub
mov
mov
test
jo
loop
scas
repnz
dec
inc
sub
or
test
and
decl
addl
adc
je
xlat
movsl
nop
into
nop
xor
jecxz
outsl
sbb
push
popf
mov
mov
shl
jnp
lahf
xchg
in
gs
pusha
or
xchg
ds
mov
outsb
stc
and
inc
jmp
cmp
adc
cmp
daa
movsb
xor
jl
mov
pop
xor
pop
dec
call
mov
mov
dec
ja
jae
inc
xchg
add
mov
shlb
int
cmp
int3
add
xchg
ja
mov
xlat
or
cmp
mov
mov
fstl
data16
loop
jecxz
lcall
out
xchg
out
jge
xor
add
dec
es
push
mov
sbbb
or
mov
hlt
mov
ret
jecxz
adc
pop
add
and
jnp
aaa
fbstp
fucomp
pop
xchg
rclb
push
das
jecxz
and
mov
adc
icebp
dec
push
aas
sbb
fwait
jp
dec
push
das
sbb
mov
imul
cmp
rolb
add
movl
fnsave
loop
sbbb
iret
dec
negl
daa
mov
lds
test
lahf
aaa
push
mov
push
and
fildll
and
fimull
cmc
mulb
test
adc
jge
adc
mov
out
cs
shll
lcall
adc
insb
inc
movsb
sub
mov
les
pop
ret
aas
xchg
cmpsl
push
pop
out
xor
bound
sub
rolb
scas
add
cmp
daa
popf
push
xchg
or
stos
fwait
lods
gs
dec
je
ja
btr
cmp
lock
dec
or
or
cli
push
sub
push
lret
jne
aas
xchg
mov
or
sub
jge
cmpb
mov
pop
and
out
out
fisubrl
repz
cmp
adc
daa
dec
loopne
add
xor
pop
sbb
pop
pop
cmp
mov
pop
popf
inc
add
dec
inc
out
mov
inc
fnstenv
jne
or
dec
clc
ret
imul
icebp
or
and
imul
xor
xchg
dec
test
inc
pop
inc
inc
imul
int
fs
roll
xchg
xchg
iret
sbb
fsubl
in
cmpsb
test
adc
jbe
hlt
and
and
cwtl
adc
addr16
pop
aaa
dec
fisubs
cmp
mov
lods
sbb
addr16
in
dec
jp
js
or
mov
push
je
dec
iret
popl
in
mov
push
pop
movsl
xor
inc
stos
mov
shrb
push
or
loopne
xchg
movsl
pop
filds
and
repnz
mov
insl
push
pop
lods
out
loopne
mov
or
aad
sbb
xchg
jle
push
mov
xchg
jle
cwtl
ja
cmp
ret
xor
adc
lahf
add
fadds
cmp
fnstcw
xchg
xor
les
jle
aas
pop
jg
adc
ficoms
mov
mov
xchg
rol
push
mov
or
and
ja
cmp
sub
adc
mov
pop
push
iret
aam
pop
subb
push
or
cmpsb
jmp
mov
xchg
mov
lods
mov
pop
xor
mov
xchg
cmp
mov
icebp
add
xor
lret
and
push
jl
loope
clc
cli
cmp
fldcw
movsl
xlat
xchg
daa
xlat
in
sbb
pop
stc
imul
mov
or
outsb
adc
inc
arpl
mov
iret
lret
or
dec
lea
sbb
inc
mov
add
adc
mov
sbb
mov
push
adc
repnz
adc
pusha
mov
in
xchg
hlt
push
stos
test
bound
xchg
inc
test
ljmp
xchg
mov
out
roll
scas
pop
mov
or
inc
or
jmp
mov
rcr
test
dec
imul
int
jecxz
dec
icebp
add
call
mov
mov
daa
cmp
icebp
mov
subb
and
pop
xchg
jno
pop
cmc
addl
push
push
das
fcmovne
add
xor
lcall
push
movb
fisttpl
mov
in
test
xchg
lock
xchg
and
mov
aam
xor
cmpsl
cmp
outsl
call
mov
ss
aad
xchg
add
adc
pop
ret
ret
mov
sub
push
das
sbb
imul
jne
xor
out
les
pop
jp
jne
jecxz
addr16
adc
xor
ret
cli
cmpsl
nop
ret
out
sbb
add
xor
cmp
int3
loop
sbb
pop
xor
or
xchg
fstl
mov
push
add
mov
fwait
xor
and
sbb
fsubrl
or
sbb
jg
subl
mov
pushf
xchg
cli
lahf
rorl
mov
adc
mov
xchg
pop
pop
cmp
adc
and
inc
sub
fildll
sbb
cld
daa
xlat
aad
sbb
push
or
lods
cmp
pop
dec
cmp
jo
pop
icebp
push
addr16
fldl
dec
sbb
in
sub
sbb
pusha
iret
pop
push
or
lea
bound
jo
sub
cltd
push
add
push
push
fld
inc
adc
push
xlat
cmpsl
mov
fdiv
pop
and
xchg
sub
aam
push
scas
scas
lods
test
fistps
arpl
or
sub
mov
mov
pop
shl
jo
into
test
scas
mov
mov
hlt
rorl
dec
push
pop
dec
sub
popw
add
jb
push
lcall
repnz
pop
lock
inc
inc
shr
test
int3
pushw
pop
test
jo
xor
mov
sbb
and
iret
xor
sub
adc
sbb
dec
or
xchg
mov
jmp
sub
inc
jg
cmc
add
sbbl
sub
fildll
jae
sub
cltd
lock
xchg
pop
sbb
in
jle
cmp
jo
inc
out
dec
mov
subl
test
insb
mov
pusha
aaa
mov
sahf
lods
ret
jp
sbb
or
mov
pop
dec
fsubs
popl
dec
push
and
jb
jb
daa
sub
jbe
fildl
ret
js
push
mov
push
lret
cmp
xchg
cmp
cs
sub
pop
movsl
mov
loope
push
jmp
aam
clc
sbb
and
in
push
popa
sbb
ret
sub
ret
sti
adc
sbb
add
movsb
std
fbld
push
imul
jno
push
lock
sbb
sub
mov
aad
add
rol
cmp
and
push
and
sbbb
lds
test
js
out
scas
jo
mov
push
out
lods
sbb
jge
stos
push
push
fidivrl
lods
imul
test
imul
dec
fcoms
mov
clc
mov
pop
fdivrp
nop
repnz
bound
ret
fidivrs
pop
xor
loope
lahf
xchg
sti
pop
mov
jp
movl
jo
shlb
inc
sub
inc
jmp
sub
popa
imul
sub
iret
jno
sahf
sahf
pop
xor
loop
cmp
das
ret
movsl
jno
add
push
sbb
stc
jno
pop
xor
in
sub
and
cmp
test
push
xor
mov
fistl
clc
and
inc
push
je
es
inc
stc
out
ja
fwait
ss
fnsave
out
sub
nop
inc
out
pop
push
xlat
pop
into
enter
dec
push
stos
je
ret
cmp
inc
nop
pusha
icebp
dec
or
add
mull
sub
push
cwtl
xchg
push
cmpsl
mov
jne
stos
ds
or
test
ret
mov
and
inc
or
pop
jecxz
xchg
cmp
outsl
inc
mov
dec
das
addr16
pop
dec
adc
cmp
stos
inc
push
add
iret
outsl
xchg
xor
fsubrs
jbe
sbb
pop
and
imul
or
pop
cmp
inc
pop
fs
movsb
and
mov
lea
inc
test
xchg
pop
pop
push
or
mov
leave
jecxz
adc
fwait
sub
dec
cltd
insl
lods
es
add
mov
mov
mov
repz
push
shlb
into
inc
jp
inc
int
ljmp
das
daa
add
inc
push
inc
popa
lods
xchg
inc
lcall
lea
inc
popf
adc
loopne
or
cmp
in
push
xor
ss
pop
push
lock
mov
and
and
dec
pushf
xor
icebp
lcall
repnz
addl
and
xchg
inc
sub
mov
fs
cmpps
roll
outsl
mov
mov
inc
stos
sub
jecxz
xchg
or
jbe
or
dec
jbe
les
cmpsb
push
cmpl
mov
adc
mov
or
cmc
mov
and
xor
into
mov
jno
std
mov
sub
movsl
xchg
scas
dec
sub
sub
mov
aam
inc
fistl
cs
mov
adc
xor
add
cltd
aam
lret
jnp
test
adc
pinsrw
push
out
sub
mov
call
insb
inc
dec
or
dec
jmp
shld
stos
jge
pop
or
pop
adc
mov
add
sub
push
cmp
mov
push
xor
inc
push
sub
ss
sub
xor
jae
add
sub
insb
cmp
and
bound
or
ja
lea
sbb
jle
push
insl
roll
sbb
lods
mov
xchg
xchg
sbb
bound
dec
sbb
xchg
out
shl
sub
das
sub
adc
call
pop
lods
es
mov
mov
pop
and
mov
jb
je
jns
loopne
test
pusha
sub
loopne
subl
popa
xchg
popf
xchg
inc
jae
stos
fabs
jb
mov
sbb
test
shld
cmpsl
loop
pop
outsb
or
lods
or
stc
adc
sub
add
std
dec
push
dec
jmp
or
mov
add
mov
mov
test
je
and
ret
adc
push
push
rolb
in
cmp
xor
mov
mov
repz
adc
shrb
lret
push
sub
pop
mov
pop
cmp
mov
imul
lods
rclb
dec
jo
leave
xchg
loopne
fnsave
daa
lahf
cs
mov
add
pop
sbb
jmp
ret
ljmp
cmp
push
cmp
das
jecxz
out
imul
dec
out
das
js
pop
sub
pop
sub
imul
xchg
adc
sbb
rcll
and
xor
fimuls
adc
adc
sbb
xchg
or
aad
jne
mov
push
cmpsl
aam
sbb
iret
outsb
rcrb
adcl
push
es
lret
aam
mov
clc
ja
and
scas
mov
cli
jbe
add
push
xorl
xor
jnp
cmp
jmp
ss
inc
pop
push
addl
dec
xchg
mov
rolb
jne
adc
sub
mov
mov
sub
es
nop
mov
rclb
xor
mov
call
push
or
jb
sbb
or
fcmovne
xchg
add
ror
dec
jo
pop
sbb
sbb
call
dec
aas
ja
xor
mov
adc
push
addl
in
outsl
xchg
add
scas
or
jns
int3
add
sub
es
sub
dec
jge
das
sbbl
shll
pop
enter
cs
fisttps
in
xor
xchg
mov
and
mov
xchg
sub
test
push
sub
mov
xchg
dec
jae
adc
adc
jecxz
rorb
mov
sbb
mov
mov
dec
test
sub
leave
sbb
push
mov
addb
mov
jne
lods
jmp
int3
sar
test
push
es
and
xchg
mov
lods
test
jne
dec
xor
pushf
xlat
sub
es
cmp
add
and
push
bound
aad
js
into
lahf
mov
jge
dec
push
xor
xor
rorl
add
inc
nop
aas
pop
push
arpl
pop
orl
or
cmp
es
jbe,pn
adc
mov
clc
xor
inc
sarb
xchg
lretw
dec
mov
ds
comiss
popf
jno
add
cmovp
lahf
xor
outsl
and
movsl
jb
js
test
rcr
pop
std
and
pop
mov
sub
bound
mov
fsubs
shrl
add
mov
jno
push
cmc
repz
and
mov
sbb
add
leave
loop
pop
mov
daa
cmp
push
cli
cmpsb
and
push
sub
jns
ret
adc
popf
mov
pusha
pop
mov
sbb
push
xor
mov
addr16
lods
inc
and
out
dec
push
in
lods
or
xor
test
inc
fistpl
xchg
movsb
ds
mov
fmull
movsb
and
inc
es
mov
push
ja
mov
and
rclb
pop
iret
push
inc
lods
rorl
mov
mov
call
cmpsl
pop
or
test
or
add
es
or
sti
sarb
in
aas
repz
xor
fdivs
loop
ret
mov
add
stos
mov
stos
mov
shrl
mov
outsl
xor
in
xlat
adc
mov
push
pop
push
xor
mov
sub
xchg
adc
in
jbe
mov
mov
les
dec
mov
test
sub
das
and
icebp
and
jo
aas
icebp
mov
je
movsb
adc
inc
aam
addl
sarb
add
imul
lds
xlat
and
rolb
mov
push
mov
xchg
sbb
sbb
push
movsb
negl
xchg
adc
xchg
sahf
jnp
mov
dec
fsubs
or
pop
pop
and
xchg
add
xor
and
jno
cmp
push
xor
lods
add
pop
inc
and
mov
cmpsb
sub
sbb
fists
sbb
pop
mov
jmp
test
loopne
push
jmp
mov
mov
roll
dec
add
sub
cmp
push
or
push
popa
daa
mov
push
push
jl
add
mov
movsb
rcrb
add
adc
xor
xor
loop
sub
movb
sub
push
imul
cli
outsl
movsl
jl
xchg
leave
and
orl
into
push
push
addr16
add
add
ret
ljmp
xchg
jg
pop
mov
es
dec
cs
add
rclb
xor
dec
fwait
add
cmp
jo
pop
xrelease
test
test
cmc
push
int3
pusha
add
add
sbb
cmp
ret
lods
ror
sub
inc
sub
inc
push
cmp
or
imul
idiv
aam
call
jecxz
icebp
sub
ja
call
and
xorb
lret
cmpsb
out
into
adc
push
mov
add
mov
cmp
jle
mov
or
push
mov
je
jo
pxor
shrl
xchg
scas
lock
jl
add
arpl
cmp
ucomiss
ret
cwtl
mov
xchg
mov
es
xchg
lcall
mov
idivb
inc
or
jbe
imul
mov
sub
push
push
push
pusha
subl
add
ret
lds
call
inc
popl
cmp
in
test
mov
adc
jo
xor
inc
arpl
fdivl
inc
sbb
push
fwait
lds
dec
lods
and
add
jnp
hlt
jno
ja
push
scas
lods
dec
xor
andl
push
xchg
lret
mov
int
sub
pop
xchg
loop
jo
inc
out
sbb
sub
popa
pop
leave
cltd
mov
add
rcl
adc
cmp
int
scas
push
and
xor
xchg
popa
mov
xchg
add
dec
pop
xorb
inc
mov
mov
ret
sub
ret
repz
xchg
das
fwait
int3
and
loope
mov
aas
int3
je
sbb
sub
lret
imul
cmp
and
fnstcw
mov
cmp
je
lods
inc
rcrl
js
and
cmp
aaa
movsb
push
subb
push
jmp
sub
lret
add
push
rcrb
movsl
es
sub
adc
mov
scas
inc
sbb
mov
sbb
jecxz
sahf
int3
sahf
stos
insb
ficomps
add
or
aas
sbb
sub
mov
out
xor
dec
inc
sub
add
push
xchg
fcoms
pop
shr
rolb
xor
out
sbb
xor
push
add
mov
mov
adc
mov
cmpsl
lea
fnstcw
aad
dec
or
in
js
repz
adc
stos
icebp
xor
push
clc
cmpsl
loope
js
mov
mov
push
vmovntpd
xlat
ljmp
pop
dec
pop
add
mul
push
into
jg
add
dec
lret
xor
insl
and
push
orb
add
call
jne
add
adc
stos
sub
adc
sub
ja
lret
and
xchg
lock
push
scas
icebp
andl
sub
ja
outsb
jno
mov
mov
es
mov
mov
scas
xchg
adc
ret
mov
sbbl
push
cmp
and
adc
ficoms
jo
call
test
mov
orl
std
push
sbb
jmp
add
add
pop
rorb
or
test
imul
cli
add
push
inc
stos
mov
push
jmp
or
sub
mov
in
xor
test
sbb
fwait
and
push
mov
push
pop
dec
xlat
addr16
inc
enter
into
ja
xchg
mov
loop
sti
loopne
test
mov
jns
sbb
ret
lcall
xor
movsl
or
or
cmp
rorl
faddl
je
loope
and
test
shlb
pushf
repnz
enter
or
notl
sub
adc
push
mov
cwtl
xchg
les
dec
cmp
test
cmc
dec
add
cmp
add
adc
test
cmpsb
push
and
or
dec
sbbb
test
mov
rol
test
jnp
jecxz
sub
movsb
insb
dec
dec
insb
leave
nop
aad
dec
xchg
arpl
das
popa
roll
ficomps
sub
or
jmp
mov
and
adc
push
aam
mov
sub
mov
rcrb
sarb
adc
and
xlat
and
inc
sbb
sbb
loopne
xor
mov
inc
loopne
int
shrb
or
jo
mov
cmp
pop
add
daa
movsb
add
shlb
bound
lret
xchg
lret
mov
pop
dec
jae
test
dec
test
out
movsl
add
out
jmp
xor
in
mov
add
test
test
movsb
jno
xchg
adc
add
fcomp
adc
push
nop
bound
movsb
test
les
mov
cltd
fists
xchg
adc
cmp
and
int
out
jo
pop
xchg
aam
push
and
shlb
mov
addl
add
mov
sarb
dec
pop
into
imul
jbe
ljmp
popa
cmp
hlt
loop
lret
cmp
mov
jmp
cmp
sub
lds
and
sbb
sbb
aam
cmp
cmp
popa
sbb
pop
add
xchg
xchg
xchg
adc
pop
test
mov
xchg
pop
leave
or
roll
insb
es
sub
out
or
imul
lods
test
dec
popf
inc
je
mov
xchg
pop
loopne
dec
add
sbb
push
lcall
cmp
jo
sub
jg
sbb
test
and
imul
stos
add
iret
int3
imul
js
mov
jno
jecxz
mov
inc
ljmp
jbe
push
incb
pop
jle
jg
pushf
data16
sahf
pusha
adc
fisubl
jb
cmpsl
push
or
jo
sub
pop
push
xchg
sub
dec
mov
out
inc
out
sub
pusha
dec
shll
and
mov
mov
add
aas
jno
pushf
ja
call
push
sub
lods
inc
add
and
rcrl
lods
cmc
adc
jb
aam
push
mov
pop
stos
pop
adc
hlt
cmp
adc
shr
loope
or
pusha
jae
and
lods
gs
daa
rorl
cmpsb
inc
jge
dec
push
push
lret
imul
dec
xchg
js
mov
push
or
js
je
inc
mov
fwait
dec
push
dec
xchg
mov
sub
in
inc
mov
mov
add
iret
jno
cmp
push
jge
jmp
aad
push
or
cmp
test
pop
adc
xchg
icebp
jno
dec
or
adc
xor
pusha
dec
ret
push
into
add
leave
and
fcomps
xor
jno
mov
fstl
popa
and
popf
cs
or
mov
dec
bound
mov
dec
mov
dec
in
test
roll
insl
imul
inc
movsl
pusha
nop
push
ret
or
lds
cmpsb
sbbb
into
adc
and
test
mov
or
push
imul
mov
and
into
and
dec
in
xor
cltd
pusha
cwtl
push
pop
mov
mov
adc
add
loopne
je
add
push
lods
sbb
jecxz
pop
movsl
popf
inc
lock
arpl
call
pop
lret
mov
in
dec
leave
push
fldcw
or
popf
push
jns
ja
xlat
nop
xchg
hlt
mov
xchg
jns
add
or
mov
adc
dec
sbb
push
imul
push
enter
mov
and
stos
xchg
dec
sub
jne
rol
xchg
rcr
xorb
pop
mov
addb
test
loopne
xor
jecxz
xchg
add
push
lods
xor
add
jecxz
notl
clc
cmpsl
sbb
call
dec
sbb
loope
mov
js
xchg
loope
cld
inc
pop
and
test
jne
imul
imul
push
add
sbb
xlat
xorl
xor
std
and
adc
les
icebp
bound
xchg
cmpsb
pop
fs
rolb
add
jle
test
cmp
out
push
sahf
jo
cmp
cmp
sbb
jge
hlt
inc
add
jno
or
fmulp
gs
jmp
test
lret
es
lahf
mov
pop
jecxz
adcb
test
push
pop
jae
addr16
or
movsb
popa
mov
rcrl
or
mov
or
jbe
repnz
mov
push
aas
mov
testb
sub
mov
and
adc
pop
rclb
cmp
pop
cmpl
test
repz
mov
and
pop
pusha
pushf
dec
rcrl
sbb
inc
dec
xlat
pop
mov
add
lods
das
pop
movb
jmp
cmp
popa
popf
ffree
pop
pop
std
nop
inc
mov
or
adc
push
sbb
sbb
leave
cmp
clc
test
nop
scas
cmpsb
in
jnp
mov
and
mov
mov
mov
jp
xchg
ret
pushf
sub
lock
jno
jnp
jmp
inc
lcall
xor
jnp
sbb
adc
popa
cmpl
test
mov
or
dec
lret
xor
ss
sub
mov
sub
imul
daa
lods
push
jg
rcrb
or
jle
push
sbb
dec
fists
inc
xor
mov
xchg
and
jbe
jmp
xor
adc
popf
mov
pop
aaa
fs
sub
dec
pushf
in
gs
pop
add
adc
gs
mov
mov
push
xchg
scas
test
and
mov
add
and
xchg
clc
inc
add
mov
or
add
jp
imul
popa
cmp
fimull
testl
in
push
sbb
pop
rorl
subl
pop
and
das
imul
sbb
jmp
xchg
xor
mov
xor
xlat
mov
cwtl
xorb
rcll
ljmp
arpl
aam
inc
dec
jo
adc
pop
jae
loopne
pop
jo
xor
or
push
inc
sbb
lds
lock
mov
inc
xchg
add
fsub
push
out
aaa
int
gs
push
jne
or
pop
mov
pop
adc
outsb
movsl
in
arpl
cmp
outsb
scas
fldl
loope
fidivrs
nop
loope
mov
scas
inc
popf
frstor
cmp
aas
in
add
push
inc
add
jo
ss
push
xchg
outsb
dec
gs
push
ret
fistpll
mov
mov
sbb
aas
jne
xchg
in
loope
andl
aad
sub
add
jo
inc
add
xor
cmp
aaa
stos
push
add
ret
lea
xor
push
adc
push
bswap
orl
or
push
push
test
imul
out
js
xor
sbb
xor
and
push
and
jo
sub
movsl
mov
lahf
std
mov
test
dec
jmp
push
shll
add
jecxz
pop
mov
stos
pusha
js
mov
xchg
jbe
cmp
push
xchg
daa
std
pop
cld
lods
cmpb
add
or
pusha
das
insl
xchg
add
ljmp
fs
mov
push
push
out
sbbl
jmp
adc
shl
cmc
idivl
jecxz
sbb
adc
gs
call
loope
ret
rorl
cmc
mov
mov
and
mov
andl
enter
or
add
aas
movzwl
xchg
daa
mov
jg
lret
add
shrb
shrl
cld
cli
and
arpl
imul
scas
adc
mov
loope
sti
pinsrw
add
adc
adc
ljmp
sbb
add
mov
outsl
lcall
mov
js
jnp
cltd
rolb
jmp
dec
mov
subb
push
lods
call
dec
out
into
rolb
mov
fbstp
int
add
add
outsl
or
rclb
outsb
insl
inc
outsl
shr
mov
outsl
jg
mov
notb
ret
mov
movsl
jns
cld
sti
add
aas
xor
pushf
adc
adc
ja
in
xor
add
flds
pop
push
push
movsl
shlb
orl
add
xchg
les
add
push
iret
leave
jmp
es
sub
iret
iret
jl
das
insl
imul
iret
repz
and
inc
inc
sbb
xchg
push
jns
or
es
push
lods
sub
inc
pusha
mov
cs
and
adc
xchg
lods
adc
add
add
add
leave
lea
cmpsl
and
or
dec
xchg
mov
test
inc
cmp
inc
imul
imul
inc
jle
xchg
sbbb
sub
xorl
add
fs
mov
popa
push
cmc
xor
jnp
jmp
ret
push
xchg
mov
xchg
jnp
add
sahf
ret
cmp
xor
pop
add
inc
lods
inc
fwait
xorb
push
out
mov
int
loope
fisttpll
mov
fcmove
xor
push
out
add
movsl
fisubrs
in
jl
sub
js
aaa
xchg
pop
or
push
push
lods
dec
out
mov
xchg
xor
pop
dec
push
and
cs
dec
jb
out
icebp
pop
mov
fwait
mov
push
dec
cltd
pop
jnp
xor
mov
jno
cmp
mov
dec
dec
lahf
mov
mov
jecxz
cmp
xchg
leave
xchg
imull
add
je
add
sti
add
and
add
shrd
and
sbb
or
jle
push
inc
adc
ret
cmp
fdiv
jmp
add
xorl
test
call
mov
divl
stos
adc
sub
lea
and
mov
push
imul
orl
add
pandn
xchg
inc
les
idivb
sub
sub
mov
insb
mov
mov
adc
add
insl
movsl
data16
xchg
or
mov
xchg
ret
sub
pusha
je
cs
xlat
dec
fildll
or
cltd
adcb
mov
test
dec
inc
inc
cmp
pop
iret
or
cmp
outsb
lods
sub
pop
cmp
popa
popf
cmp
jo
test
out
or
mov
dec
sahf
mov
fcomps
in
dec
mov
xchg
imul
pop
push
xor
fcompl
push
ss
jo
cmp
push
cmpb
inc
lea
and
repz
jnp
or
loopnew
xorl
jmp
jnp
lock
sahf
bound
pop
add
mov
mov
filds
pop
inc
sti
aam
test
sbb
imul
pop
xlat
stos
xchg
xchg
cmp
xor
mov
mov
mov
imul
dec
jnp
push
pop
jmp
dec
into
add
outsl
jae
jae
or
js
leave
jne
fwait
or
or
sar
or
cmp
jns
lret
xchg
in
xor
xor
dec
pusha
sub
mov
shl
mov
mov
or
sti
hlt
push
or
cmp
adc
push
rclb
push
mov
and
cmpsb
imul
scas
jb
pop
ret
adc
xor
mov
adc
xlat
or
sub
push
sar
imul
fnstenv
adc
add
aas
stos
push
push
jecxz
sbbb
sbb
sbb
sbb
stos
xor
pop
jbe
adc
pop
or
dec
popf
popa
jno
test
fcoms
lock
iret
rcrb
filds
lcall
loope
in
insb
xchg
movsl
mov
sahf
inc
cmpsl
test
adc
daa
loop
loop
notb
push
data16
loopne
das
sbb
arpl
jp
pop
inc
and
xor
fcmovnu
call
xor
inc
mov
mov
xchg
lea
pop
add
mov
xchg
jmp
rorl
sub
movsl
lea
jnp
in
inc
inc
pop
outsl
pusha
sub
and
inc
mov
popa
add
and
push
jg
mov
cmp
mov
lock
add
scas
sbb
or
mov
and
mov
sub
inc
push
jbe
add
jmp
pop
loope
jns
mov
fimull
cld
lods
jo
mov
fstl
jae
push
mov
push
push
aas
repz
syscall
enter
push
dec
out
or
rcrl
dec
add
or
push
loop
sub
imul
push
add
adc
pop
xor
daa
and
add
dec
adc
jmp
pop
out
cmp
and
fadd
inc
loopne
fisttps
int3
jmp
fimuls
subb
sub
and
out
mov
das
imul
int
sub
lods
int3
pop
and
fs
xlat
rclb
test
cld
ds
aaa
fsubs
jo
sbb
add
push
sub
sahf
imul
add
insb
lods
fmuls
xor
or
xchg
jns
and
add
loope
and
ret
repz
ret
push
test
add
ja
lret
rolb
pop
and
rorl
add
ret
scas
add
and
add
mov
js
add
mov
push
fcompp
push
adc
jo
dec
cmp
add
mov
or
push
mov
push
ficoms
sbbb
loopne
movsb
add
sahf
test
push
push
imul
cltd
sub
adc
push
mov
jno
add
add
loop
pop
inc
test
adc
adc
inc
add
addr16
xor
imulb
inc
cwtl
scas
push
sbb
sub
and
push
sbb
inc
adc
add
and
push
inc
or
fadds
pop
or
fcom
mov
repnz
sub
insb
mov
outsl
adc
fdivs
sub
orl
sub
mov
lods
lock
xor
or
xor
xchg
movsb
inc
sbb
xchg
cmove
add
scas
add
sub
ret
xor
push
inc
dec
xor
or
test
sbb
or
sub
add
sbb
cmpsl
jns
mov
sub
in
clc
push
xor
shr
fistpll
xchg
and
add
sub
and
sbb
add
add
int3
dec
adc
cmp
shlb
mov
pop
or
and
and
or
and
sub
jo
sub
sub
dec
aam
ret
xor
loop
fnstenv
adc
sub
inc
adc
nop
sub
and
lods
into
sub
pusha
pop
adc
sbb
pop
xor
inc
cmp
xor
insl
xor
mov
mov
xchg
mov
jp
arpl
xor
xor
inc
scas
jo
daa
js
movsb
push
xchg
iret
add
jno
test
add
pop
out
add
pop
xchg
addl
and
loopne
and
cld
add
mov
cmpsb
push
sub
les
lods
shl
push
xor
mov
mov
cwtl
ljmp
sub
pop
outsb
dec
jne
enter
jo
lock
and
jle
jns
inc
js
lret
ret
push
sub
in
ret
testl
sbb
arpl
inc
cmp
out
cmp
addb
movups
dec
mov
adc
jmp
rcl
mov
push
shlb
xchg
stos
fimuls
pop
incl
or
xor
test
test
push
jmp
in
popa
rcrl
cmp
sbb
scas
add
inc
mov
dec
repnz
sbb
lods
dec
imul
adc
fcmovne
fdivs
or
int3
aaa
jg
or
push
xorb
inc
adc
xchg
fwait
bound
inc
add
push
cmp
dec
mov
cs
in
daa
xor
mov
xchg
ret
adc
cmp
loope
js
xor
push
dec
mov
adc
sbb
or
add
sub
mov
xlat
cmp
mov
arpl
or
movsl
xor
addb
dec
adc
sbb
add
xor
sub
cmc
pop
lods
push
inc
loop
scas
inc
out
test
dec
dec
push
subb
add
lea
shlb
jo
in
loopne
sbb
xor
lods
sbb
aad
and
shlb
loope
push
fisttpll
adc
add
mov
xchg
push
add
sbb
js
sub
sbb
sbb
addb
mov
adc
flds
fcoms
adc
sbb
mov
incb
pop
jl
and
add
pop
flds
cvtps2pi
xchg
add
mov
inc
rorb
adc
push
les
imul
inc
push
adc
push
adc
scas
fadds
pop
push
jns
out
push
popa
bound
adc
pop
inc
aaa
or
stos
push
xorb
xchg
add
mov
lods
adc
add
aaa
and
sti
fistps
pop
xchg
add
js
cld
add
daa
add
inc
push
sbb
faddl
add
int3
cmpsl
int3
sbb
gs
mov
pusha
jae
notl
fimuls
add
mov
enter
push
ret
ret
or
mov
inc
inc
sub
and
sbbb
iret
or
inc
adc
js
bound
xorb
mov
call
insl
mov
push
pop
aam
loop
insb
adcb
rcrl
xor
int3
pop
test
sti
les
sbb
je
push
nop
dec
fstpl
push
sbb
xor
pop
inc
in
add
andb
pop
add
inc
xchg
cmp
sbb
aaa
mov
mov
adc
dec
and
add
push
js
scas
jg
and
aaa
lsl
ret
les
cmp
sbb
dec
mov
movups
repnz
into
into
add
mov
test
xchg
loope
addr16
stos
leave
pop
jo
cmp
inc
repnz
xor
cmpb
das
outsb
push
sub
icebp
dec
push
gs
ret
aaa
inc
dec
push
leave
jecxz
in
frstor
or
pop
int3
push
or
inc
les
inc
xlat
and
repz
sbb
inc
dec
pop
addl
loopne
test
and
xor
lds
add
or
rorb
ja
or
jns
jae
or
ret
icebp
mov
add
mov
das
inc
pushf
sbb
fsubl
lahf
int
xor
leave
and
cs
xor
xchg
add
add
iret
rorl
ret
andb
mov
iret
or
push
testb
and
add
xchg
leave
rcrl
sbb
xchg
iret
xchg
icebp
outsb
mov
push
xchg
mov
push
popa
out
sub
outsb
dec
arpl
inc
mov
sbb
push
add
add
push
data16
sbb
out
insb
fiaddl
xor
ss
or
pushf
inc
movsb
nop
out
sub
insb
push
pusha
lock
and
xor
xor
pop
daa
dec
insl
mov
jne
jns
sti
sahf
sahf
sbb
movsl
push
mov
outsb
mov
push
movsl
mov
xor
cs
fadd
mov
cmp
sbb
adcl
inc
stos
mov
adc
js
xlat
fcomi
adc
loopne
xlat
add
daa
xor
cmpsb
mov
fisubl
rcll
push
das
into
leave
xor
mov
inc
xor
and
dec
xor
add
loop
add
add
leave
lret
push
inc
adc
jne
xor
inc
push
xorb
daa
lods
arpl
lods
cmp
dec
arpl
call
dec
add
xchg
lods
push
add
insb
mov
daa
xchg
pop
outsl
mov
lods
dec
dec
iret
test
mov
cld
std
xor
jmp
adc
pop
or
xchg
dec
xchg
jnp
mov
or
inc
pop
daa
add
stc
jle
cmpsl
nop
jp
test
ret
icebp
out
dec
sbb
xor
push
iret
in
scas
loopne
or
adc
xchg
adc
addr16
sub
pop
mov
sbb
imul
push
addr16
lahf
loopne
mov
xor
roll
out
loopne
inc
fisttps
pop
push
xor
xor
pop
xchg
fistpll
or
sub
es
push
jl
pop
or
mov
inc
loope
add
arpl
adc
push
imul
mov
jno
shlb
fildl
and
mov
add
inc
cmpsb
sbb
or
in
sub
pop
mov
xchg
sar
jecxz
dec
sbb
fidivl
fildl
inc
pop
push
je
fsubrl
push
push
cmpsl
sbb
popf
and
sbb
inc
add
cwtl
mov
out
dec
gs
xor
sbb
popa
jecxz
push
in
cmc
ret
jge
xchg
loope
and
inc
or
mov
xchg
into
push
push
adc
ret
out
mov
adc
and
sbb
jo
xchg
jmp
jno
imul
inc
sbb
pop
push
lods
add
gs
lods
or
mov
iret
inc
and
mov
or
pop
jo
cmpsb
jo
jmp
and
in
adc
push
hlt
inc
inc
loope
xchg
into
mov
mov
test
cmp
mov
int
or
test
jecxz
xor
jno
leave
cltd
ljmp
adc
ss
push
push
pop
lahf
push
sbb
jne
fidivs
incb
adc
add
repz
cmpb
mov
mov
add
mov
jo
mull
sbb
mov
out
jecxz
lock
cmpsl
adc
add
lods
xlat
addb
dec
pop
int3
out
adc
mov
rolb
jne
dec
stos
xchg
ljmp
jne
inc
ret
icebp
sub
sub
xchg
mov
cmpsb
imul
sub
inc
out
sbb
data16
xchg
push
outsb
push
gs
xchg
push
pop
cmp
rol
insb
pop
sub
or
push
jne
cmp
mov
jo
sbb
in
inc
iret
cltd
adc
rol
dec
je
xor
jmp
sub
sbb
mov
mov
add
sub
aaa
sarl
push
jnp
cmpsb
add
add
mov
cmp
push
pslld
inc
loopne
test
lds
add
inc
fmuls
xchg
rolb
xchg
cmp
leave
adc
or
sahf
out
mov
cmp
and
icebp
pushf
loope
sbbb
mov
mov
testl
mov
ss
or
nop
pop
lret
pop
sbb
sbb
jle
cmp
inc
and
jbe
movsl
xchg
ret
in
loopne
ret
jmp
movsl
scas
test
dec
adc
arpl
cmp
fiadds
inc
adc
mov
aaa
insb
jge
fwait
push
in
aas
xchg
inc
enter
xchg
sub
loopne
test
mov
jp
push
mov
mov
and
push
jge
ret
inc
jecxz
pop
es
call
ret
pop
push
loope
cmc
inc
pop
into
shlb
mov
xchg
push
push
orb
xchg
dec
sbb
sub
mov
enter
ja
movsl
inc
das
pop
pop
pop
test
add
mov
pop
pop
rolb
pushf
loopne
loopne
sbb
insb
mov
gs
sub
insl
std
insl
adc
or
sbb
loope
inc
movsl
add
cwtl
jno
xchg
addb
fmuls
sbb
shlb
cmpsl
lods
faddl
inc
ja
jb
and
fidivl
add
lock
call
xchg
out
xlat
inc
je
or
inc
push
popf
mov
enter
jae
icebp
aas
inc
lock
cltd
fwait
lock
stos
fidivs
pop
or
and
pop
popf
addr16
jb
inc
add
in
sti
sbb
int3
ret
inc
mov
aas
lea
pop
mov
test
out
cmpsl
clc
mov
mov
out
or
imul
cmpb
pop
dec
stos
sub
repz
test
dec
pop
fcoms
pop
mov
aam
lahf
or
aaa
add
dec
cmp
iret
aad
inc
sub
mov
divb
add
or
inc
daa
dec
inc
xlat
sbb
fldl
push
js
lahf
jno
sbb
imul
cltd
sbb
ret
loope
nop
and
js
cmpsl
aam
into
mov
add
mov
xchg
jb
jmp
push
dec
andl
inc
stos
movsl
add
mov
jnp
add
and
pop
mov
data16
rolb
hlt
xchg
cs
lret
loope
jmp
pushf
mov
and
or
std
and
inc
fcomps
xchg
xor
add
xor
mov
ljmpw
jne
pop
mov
mov
mov
cmp
pop
dec
jo
mov
push
xchg
push
inc
adc
jo
push
das
aas
push
dec
or
pop
scas
cmp
push
pop
test
pop
sub
push
fcoml
push
aad
push
pop
add
pop
subb
ss
push
lahf
or
aad
push
addr16
jne
pop
adc
testb
xor
sub
jnp
les
jns
popa
push
xor
push
in
push
sub
movsl
xor
jle
out
gs
add
inc
out
mov
js
mov
add
shrl
mov
lods
pop
nop
mov
scas
loop
and
xor
fwait
push
push
nop
fists
xchg
fst
pusha
cmp
jge
nop
pop
and
mov
loopne
lods
adc
add
push
in
and
popf
lods
fldl
rorl
cmp
add
test
imull
aaa
addps
std
cmp
dec
sbb
int3
cmp
and
push
daa
inc
enter
push
dec
gs
movsl
dec
lods
push
lahf
inc
jmp
add
scas
push
into
jb
push
ljmp
ja
scas
sub
push
cmp
aas
adc
test
inc
loopne
movb
fucom
and
sbb
nop
stos
or
lea
adc
mov
cli
dec
and
or
fsubrs
jno
and
cs
ficomps
les
les
aam
std
inc
jae
in
sbb
sbb
mov
test
enter
sbb
jl
push
imul
jnp
pop
adc
loopne
bound
adc
daa
call
cwtl
aam
inc
sub
inc
xchg
sbb
divl
xor
fidivrl
aas
mov
xchg
mov
in
and
sub
pop
xchg
mov
sub
add
shll
inc
pop
dec
dec
fstps
mov
cmp
ret
iret
push
jnp
or
clc
arpl
stos
call
mov
idivb
sbb
stos
dec
jbe
mov
jg
mov
push
enter
add
xchg
lea
push
cmpsl
adc
lods
add
mov
inc
inc
add
inc
testl
add
xor
xchg
cmc
cs
pop
sbb
ss
aaa
imul
push
add
push
and
push
and
cmp
rcrb
cmp
cmc
pop
inc
add
push
sbb
or
hlt
pop
es
mov
ret
push
lods
insb
movsb
lods
pusha
aaa
ret
or
cmp
fsubs
adc
inc
adc
xchg
or
sbb
xor
imul
jmp
gs
add
hlt
mov
add
push
jmp
nop
mov
ds
add
jnp
inc
push
mov
pop
dec
sbb
add
test
jno
xor
push
cmp
and
mov
xchg
jo
out
mov
je
add
in
or
sahf
pusha
cmp
sub
mov
les
outsb
iret
cld
stos
pop
inc
sti
aaa
pop
ja
das
and
jmp
or
iret
push
cmc
sti
fiaddl
out
rorb
jb
sbb
in
xchg
jo
push
iret
mov
lods
jbe
mov
mov
insl
adc
int
jge
adc
push
pop
ficoml
mov
xor
mov
or
cmp
aad
in
pop
jnp
lahf
lods
push
xchg
in
andb
push
add
lods
push
mov
pop
jb
mov
and
xchg
aaa
jmp
fwait
adc
sub
fld1
ret
pop
add
lock
inc
xchg
inc
lret
in
out
push
ljmp
push
test
nop
mov
lock
jge
add
cmp
push
sti
push
pop
lock
pop
sub
test
pop
push
mov
add
lahf
push
add
bound
inc
or
mov
ss
fcomps
push
test
xchg
mov
js
clc
pop
push
mov
pop
lahf
add
sub
push
imul
aad
cmp
ffree
sbb
sbb
hlt
fisubrs
sbb
nop
inc
cmc
pusha
push
stos
add
mov
xchg
cmp
adc
test
mov
insl
hlt
ret
jae
and
in
test
jg
adcl
popa
in
pusha
outsb
pop
imul
mov
cmp
add
sbbb
addr16
adc
lods
ljmp
and
or
cltd
jnp
and
cwtl
sbb
or
mov
sbb
in
dec
push
mov
mov
adc
push
inc
loope
movsb
xchg
js
add
mov
movl
pop
or
jle
lret
add
je
pushf
sub
enter
jno
pushf
inc
mov
nop
jp
sub
dec
mov
nop
sahf
mov
xor
or
or
movsb
add
and
dec
into
fdivl
imul
inc
mov
cmp
jno
add
and
mov
cmp
testl
rorb
xchg
sub
jp
fldt
sub
xchg
pop
loop
fsubs
mov
and
inc
jo
roll
sbb
adc
inc
and
mov
push
icebp
outsb
lock
fdivl
cmp
ficompl
dec
pop
sub
dec
add
lods
scas
stos
add
sti
sbb
add
test
nop
fldenv
sub
jne
jbe
and
push
add
jle
jns
fs
jo
adc
sbb
popa
push
dec
mov
push
mov
add
fcomp
jo
pop
ss
jne
push
call
cwtl
add
xor
fisttpll
lret
jno
lock
push
sub
loopne
inc
sbb
cli
cmp
aad
add
in
in
pushf
push
flds
or
add
cmpsl
mov
test
lods
xlat
nop
add
in
imul
and
outsb
jg
sbb
dec
outsl
dec
dec
lea
ja
pop
js
mull
xchg
pop
add
rclb
cmp
mov
cmp
arpl
and
lods
add
mov
sbbl
and
cwtl
fcmovnu
lea
out
loopne
inc
cmpsb
or
imul
xchg
shll
and
lock
or
or
push
test
dec
in
jne
dec
into
jb
mov
xchg
test
and
pusha
out
push
add
xchg
aas
pop
xchg
sub
lret
pusha
arpl
test
fs
jle
xchg
in
rorb
or
adc
test
dec
fwait
aad
cmpsb
add
add
push
lret
mov
lahf
adc
ljmp
adcb
out
xchg
pop
push
mov
add
ret
test
lock
cmp
xlat
adc
jnp
lcall
or
js
iret
scas
sub
mov
insb
jno
das
add
lea
mov
fdiv
mov
outsl
dec
iret
sub
icebp
or
ffreep
pusha
inc
adc
adc
mov
insl
sbb
push
iret
aaa
and
add
popf
rclb
repz
mov
pop
in
daa
jmp
add
add
test
lcall
xchg
add
test
jne
jmp
push
std
add
jmp
cmpsb
sub
es
sbb
cmp
mov
sbb
test
pop
pop
add
adc
je
dec
sar
adc
insl
scas
cmp
pop
push
popf
in
fucomi
repnz
je
addb
adc
orl
and
in
push
mov
ficompl
jno
and
mov
pusha
and
sub
jno
sti
roll
jp
stc
mov
movsb
mov
shlb
cmpsl
adcb
mov
xchg
pushf
subl
lea
ret
xor
inc
xchg
mov
pop
orb
pop
sub
in
xchg
addr16
js
scas
mov
cmp
xor
xchg
dec
stos
adc
lcall
outsb
push
dec
push
push
sbb
inc
shlb
outsb
scas
jmp
and
mov
dec
lea
call
rorl
daa
adc
sub
add
movsb
add
movsb
cmp
add
dec
cmpl
mov
fwait
xchg
clc
jae
mov
test
movsb
cli
aas
mov
lcall
cmpl
and
jl
mov
adc
lods
into
cmp
pop
lods
orl
movsl
add
adc
mov
ret
aam
sti
in
es
or
sbb
jbe
rolb
ss
pop
mov
mov
cs
inc
imul
adc
jb
sbbb
xchg
test
add
dec
mov
push
mov
mov
negl
jle
rcrb
ja
mov
xor
inc
iret
cmp
inc
cmp
out
pusha
shl
stos
inc
lret
xchg
rolb
ljmp
jp
imul
add
testb
or
addr16
sbb
popf
mov
stos
dec
jne
iret
rclb
addr16
stos
sbb
sbb
pusha
adc
push
inc
stos
outsb
inc
adc
loopne
cli
jl
push
pusha
mov
fcoms
mov
and
rorl
ljmp
push
imul
mov
and
dec
int
lods
gs
insb
add
inc
mov
inc
loopne
popf
out
dec
aad
mov
loop
icebp
pop
aaa
lods
pop
jecxz
addr16
sbb
sub
xor
ficoms
mov
sub
lods
adc
sbb
add
sbb
icebp
mov
push
mov
iret
shlb
sbbb
loope
dec
test
mov
fsin
cmc
xchg
or
xor
add
fsubs
pop
into
jnp
mov
cmp
inc
sbb
movsl
jne
fmuls
xrelease
push
mov
cmp
mov
lcall
pop
in
lock
or
push
jbe
andl
adc
out
mov
inc
outsl
mov
outsl
je
push
sub
sbb
rol
jbe
xchg
add
enter
testl
sar
movb
arpl
xchg
jno
ja
add
dec
out
adc
out
pop
iret
cmp
inc
fucomip
sti
imul
nop
or
or
cltd
mov
movsl
ja
xlat
rolb
pop
idivl
xor
dec
jne
das
insb
mov
movhps
lods
xor
repnz
pop
mov
aam
adc
adc
cmp
mov
and
and
dec
shl
andl
push
pop
gs
iret
jo
pop
push
pop
cmp
inc
pop
loop
inc
push
adc
and
ret
push
inc
sub
jmp
mov
mov
xchg
push
xchg
push
xor
cmc
lret
call
and
push
lcall
xchg
xchg
dec
arpl
sub
cmp
ja
push
cmp
push
push
lds
loopne
fisttpl
ja
mov
movsl
xor
pushf
data16
mov
aam
hlt
mov
sbb
xchg
test
loopne
and
push
fidivl
mov
dec
aaa
push
inc
addb
pop
test
fbstp
xorb
aad
adc
sub
out
movsl
adc
movsl
dec
lods
inc
cmp
shrb
test
loopne
mov
out
adcb
mov
adc
mov
insb
sbb
sub
jno
loope
sbb
aaa
pusha
sub
sub
push
mov
push
dec
mov
mov
js
icebp
pf2id
shrb
nop
test
mov
orl
sub
addl
enter
push
xorl
into
daa
lods
push
jp
push
jns
or
sub
iret
add
jg
push
loopne
xor
mov
aaa
sub
xchg
fstl
movsl
adc
rclb
adc
mov
shufps
xchg
xchg
xchg
pop
mov
inc
jg
aaa
test
mov
lahf
lahf
inc
in
insb
push
pop
or
xlat
push
cltd
mov
pop
rcl
out
test
stc
adc
adc
or
inc
jae
sbb
ss
fildll
lds
add
mov
std
push
lods
or
cmp
popa
xor
add
leave
push
popa
aad
or
pop
or
inc
cmp
jo
repnz
mov
xchg
sbb
sub
stc
rorl
subl
xchg
and
idivl
pop
jnp
push
cmpxchg
in
xchg
add
push
in
rorb
or
pop
movsb
push
test
mov
add
bound
mov
or
jmp
mov
cwtl
add
add
enter
xchg
and
mov
mov
jge
dec
nop
scas
jg
incl
int3
js
hlt
and
mov
pop
aaa
lahf
sbb
xchg
mov
mov
jno
fcoml
jo,pt
dec
pop
ret
mov
push
mov
outsb
aam
mov
pop
adc
add
jmp
add
ud2
mov
inc
data16
sti
jp
ljmp
out
lods
inc
cmp
pop
sbb
push
mov
cmp
adc
insb
pop
cmpsl
push
test
jmp
sbb
add
adc
push
lds
sbb
enter
cmpsb
insb
sub
shlb
int
daa
fs
push
shlb
test
hlt
pusha
std
dec
jne
mov
movb
adc
fdiv
into
in
sbb
aas
cmp
test
notb
adc
cmp
pop
imul
pushl
jae
cmp
sbb
insl
mov
aam
cmp
pop
les
fadds
mov
lret
push
pop
popa
sbb
add
outsb
daa
adc
cmp
imul
cwtl
outsl
mov
xchg
lock
das
jbe
push
jns
sub
sub
scas
sbb
push
cmp
test
xorl
adc
loopne
dec
insl
loope
or
jo
std
sbb
mov
push
mov
add
dec
and
adc
mov
push
insb
pop
leave
add
pushf
popl
push
bound
and
js
js
in
sahf
jno
out
pop
sub
push
mov
fs
test
out
arpl
enter
stos
and
xchg
nop
std
add
stc
cltd
add
mov
xlat
scas
add
inc
loopne
push
jo
popf
daa
dec
sub
adc
jne
sub
arpl
rorb
aas
fistl
aaa
xchg
dec
jno
mov
scas
sbb
hlt
add
add
mov
imul
mov
fisubl
jg
pushf
jae
sbb
ja
mov
loope
insl
mov
roll
jb
pop
lods
and
xchg
inc
xchg
jl
xor
shll
ss
inc
add
mov
and
outsb
mov
sbb
dec
xchg
or
adc
xlat
daa
xor
loope
pop
or
jg
sub
or
jg
jmp
lods
inc
lods
mov
shll
ja
insl
push
cmc
sbb
and
sub
faddl
addr16
rorb
fadds
movsl
out
popa
arpl
cmp
gs
in
mov
jne
call
mov
sbb
mov
lock
add
sbb
adc
dec
push
xchg
mov
repnz
and
and
sbb
mov
sbb
inc
or
dec
xchg
shlb
and
mov
stc
divl
fwait
mov
insl
dec
lahf
mov
xchg
push
aas
inc
xchg
adc
sbb
and
cwtl
jg
outsl
decb
out
popf
jmp
inc
loop
cld
pop
mov
mov
test
pusha
add
roll
dec
mov
sbb
adc
movsb
rcrb
and
lods
push
imul
fistps
shll
jo
daa
adcl
sbb
jg
or
add
shll
mov
inc
fcmovb
push
popf
imul
and
movsl
pusha
adc
sbb
add
insb
lds
lret
add
or
aam
hlt
pop
sub
add
adc
adc
push
push
xchg
and
inc
test
cmp
test
insl
xchg
add
jnp
add
or
or
adc
mov
add
frstor
mov
jns
and
xorb
dec
and
popf
push
call
in
push
les
mov
test
xchg
dec
pop
pop
dec
mov
cmpsb
mov
push
out
dec
xor
jp
jp
and
inc
xchg
dec
shrl
mov
dec
jle
sub
add
pop
arpl
mov
lahf
cli
or
push
popa
jmp
daa
adc
ret
js
and
mulb
push
in
mov
das
add
test
cmp
lret
fildl
mov
fmuls
dec
inc
outsl
add
outsl
push
xor
out
fnstcw
or
mov
in
xchg
inc
push
in
cwtl
iret
lds
daa
and
add
xchg
push
icebp
test
mov
cmp
out
pop
xor
sti
xchg
sub
sub
das
add
cmp
test
xchg
or
pop
cmp
fcmovnb
andl
and
push
adc
nop
loopne
push
mov
out
pop
pop
add
nop
loopne
pop
jns
shll
sub
jno
dec
sub
in
loope
iret
jo
add
cmp
push
lcall
adc
iret
mov
jae
add
pop
ret
divl
sub
mov
xchg
fstp
in
cmp
adc
mov
pop
lods
sub
mov
mov
mov
push
ds
pop
sbbb
add
mov
mov
addr16
add
scas
sub
arpl
jmp
mul
frstor
pop
push
cmp
adc
adc
jbe
call
mov
and
adc
mov
int3
popa
out
cmp
or
jo
mov
aad
add
mov
jg
add
js
rclb
xchg
or
scas
sub
inc
call
push
cs
sbb
shll
loopne
mov
enter
push
pusha
pop
mov
stos
ja
cs
add
add
test
inc
lds
xchg
mov
mov
jp
ret
mov
orb
cltd
jne
nop
xor
inc
imul
add
add
add
je
jecxz
std
imul
ljmp
add
or
ret
js
mov
ret
imul
iret
incl
pop
and
iret
xchg
rorl
lea
call
fwait
enter
es
mov
popa
xor
popa
shrl
and
imul
xor
dec
ja
je
jp
outsb
dec
loopne
push
inc
push
adc
aas
xchg
mov
pusha
pop
sub
or
addr16
roll
add
pop
mov
nop
js
sub
sbb
jbe
jecxz
add
fs
mov
sahf
les
out
popf
sub
fstpl
mov
or
cs
jecxz
lcall
xor
sub
inc
push
cmp
popf
sbb
add
out
mov
or
movsb
call
pusha
pop
cmp
sarb
pop
stos
ja
test
rcrb
sti
lret
gs
push
inc
imul
inc
lods
dec
ss
pop
inc
flds
cmp
xchg
lods
out
mov
aam
in
or
out
dec
mov
leave
test
xchg
test
out
lock
roll
sbb
cmp
mov
add
xor
mov
data16
cmp
addr16
js
ret
cs
cmpsb
xchg
sub
adc
sub
jne
add
test
test
out
leave
out
or
loopne
and
adc
fwait
add
pop
jno
hlt
inc
xchg
and
fwait
lods
sub
test
das
iret
mov
daa
or
mov
stos
hlt
imul
popf
shl
cli
sbb
stc
jo
inc
inc
or
and
add
and
pop
loope
or
out
dec
je
ss
inc
lods
movsl
add
je
xor
sub
hlt
xorb
js
lods
push
pop
loopne
xor
xchg
outsb
in
lods
pop
pop
and
pop
andb
jne
lahf
outsl
add
mov
add
push
mov
out
rcl
fadd
fs
loopne
addr16
loop
xor
into
loopne
pop
andb
or
call
and
push
xor
push
insb
pop
shlb
add
mov
shl
dec
orl
push
notb
push
and
mov
jo
push
add
das
int3
dec
jno
cmp
mov
or
in
xor
add
pop
mov
cmp
das
enter
push
insb
adc
pusha
add
arpl
mov
and
xchg
test
inc
or
push
call
cli
test
jo
sti
and
xor
in
xor
insb
sbb
sub
loope
push
pusha
das
push
sub
and
out
iret
test
ret
push
sub
iret
add
test
adc
pop
test
popa
dec
push
das
pop
push
and
pop
mov
cmp
jge
aam
mov
jmp
mov
jbe
mul
aaa
in
sub
dec
jbe
xlat
or
jns
mov
add
es
xchg
das
cmp
mov
mov
inc
dec
insl
sub
pop
mov
int3
pop
dec
pop
aam
mov
int
nop
mov
jbe
daa
lods
scas
jmp
mov
xor
pop
popa
imul
sbb
add
xchg
ficoml
or
mov
jmp
add
dec
push
mov
or
and
aam
add
lret
xchg
mov
xchg
jp
mov
or
lods
sbb
out
sub
and
sub
pop
pop
int
add
or
add
mov
and
pop
sarl
pop
adc
arpl
jle
mov
and
leave
sarb
and
daa
inc
shlb
dec
push
dec
nop
adc
rcl
mov
xlat
imul
and
hlt
xorl
scas
push
or
clc
cmp
imul
push
rol
lock
out
sub
lret
mov
push
jne
xchg
mov
or
stos
add
cltd
cmpsb
push
push
subb
push
jbe
xchg
dec
or
push
pop
aam
add
xchg
pop
push
sbb
push
scas
data16
aam
outsb
xchg
cmpl
pop
pop
lret
jae
lret
fs
jns
rcl
and
add
int3
inc
cmpsb
push
add
jae
push
aam
jne
sub
outsl
or
or
push
insl
sbb
and
fmul
popf
test
fcmove
mov
js
or
adc
bound
loopne
sub
sti
mov
xchg
cltd
cltd
mov
mov
pop
loopne
fadds
jo
pop
aam
sbbb
movsl
repz
test
add
testb
cltd
cmp
enter
shrl
adc
adc
xlat
sub
popf
fwait
lods
inc
scas
sub
sub
aad
xchg
pop
imul
inc
test
jnp
rclb
addr16
mov
mov
sub
inc
push
test
adc
jne
and
inc
sahf
test
sub
add
imul
mov
mov
popf
fnstenv
push
dec
lahf
add
imul
jnp
shrl
inc
pop
jmp
test
add
dec
rcl
cmp
dec
popa
push
sbb
fiadds
mov
popa
fcmovnbe
add
mov
and
push
fwait
test
mov
xchg
lret
in
mov
iret
fwait
ret
sarb
test
inc
call
dec
sub
movl
aad
dec
lock
cs
cmc
daa
pop
xchg
daa
xor
test
mov
bound
xchg
jns
test
sub
call
scas
or
jnp
mov
inc
inc
ja
pop
xchg
cwtl
cmp
pop
push
xlat
mov
pop
xchg
or
test
add
insb
inc
or
popf
fisttpll
or
pusha
movsl
add
repz
xorl
pop
dec
sbb
nopl
pop
sarl
pop
mov
and
loopne
xchg
cs
jge
das
cli
nop
sub
xor
ss
lods
test
mov
xor
cmp
gs
xchg
es
popa
cmp
es
push
gs
add
jns
sub
mov
add
imul
lods
add
add
adc
int
sbb
sbb
add
movsb
inc
sub
xchg
xchg
lods
xor
and
sub
pusha
xorl
pop
in
and
in
dec
jge
sbb
sub
xchg
xchg
and
sub
push
mov
mov
lea
xchg
and
add
pop
mov
and
popf
lret
shrl
sub
subl
adc
pop
test
outsl
xor
jno
scas
xchg
lock
lret
imul
dec
inc
pop
add
inc
pop
rcl
test
sbb
mov
popf
jl
bound
and
pop
sbb
add
and
nop
sbb
ljmp
pushf
push
and
push
cmpsb
or
mov
dec
xchg
dec
mov
movsl
inc
and
enter
pusha
cmpsb
imull
les
clc
lcall
xchg
cmp
ljmp
sbb
nop
push
popf
ljmp
cld
aas
lods
cwtl
dec
mov
bound
test
push
adc
rcrl
fs
push
push
and
bound
das
add
ss
add
and
and
mov
repnz
in
sub
dec
add
das
sbb
in
xchg
stos
rorb
adc
cli
sub
xor
inc
dec
xor
xor
scas
popa
cld
imul
scas
stos
outsl
in
loopne
gs
or
and
inc
into
enter
push
mov
fidivrl
ret
dec
xchg
icebp
push
push
fdivr
pop
les
jl
ljmp
insl
not
xchg
inc
aaa
add
dec
sub
cmp
mov
orl
push
xchg
shll
lock
pop
inc
add
fisubrs
jo
das
xor
orl
aaa
push
adc
jp
mov
sub
int3
outsb
test
add
dec
add
inc
mov
mov
and
mov
shrb
sbb
pop
mov
repz
pusha
iret
xor
fistpll
iret
xchg
into
ja
adc
hlt
inc
daa
jnp
and
je
pop
sbb
mov
cmp
inc
cmp
push
and
out
daa
icebp
or
add
jb
xchg
test
nop
xor
inc
das
cld
inc
test
sbb
jle
addl
add
adc
stc
xor
xchg
lret
cli
inc
test
lea
dec
enter
dec
mov
adc
arpl
xchg
out
rcl
dec
call
loop
jecxz
lret
mov
mov
ja
sahf
rorb
mov
test
ja
sub
xor
xchg
repnz
jge
dec
das
inc
xlat
sti
sub
mov
mov
xorl
mov
and
or
pop
in
ljmp
and
rcrl
add
mov
int
dec
xchg
xchg
pop
xor
cmpsl
jne
jne
add
jle
scas
or
dec
mov
cmp
lods
or
outsb
add
and
lods
mov
xchg
cmp
outsl
lods
imul
lea
or
push
subl
js
test
dec
sarl
lods
bound
addl
ret
or
mov
and
lret
scas
pop
and
sbb
aam
xor
jo
lods
iret
add
mov
or
xor
xorl
aam
or
sub
or
sbb
inc
add
mov
dec
pop
test
adc
or
mov
jg
sub
aam
cmpsl
rclb
dec
mov
add
sub
test
add
ja
sub
dec
into
push
decb
int
imul
scas
cmp
and
fiadds
cmp
iret
ja
shlb
int3
fldenv
lret
pop
nop
mov
inc
call
int
in
adc
in
int
out
imul
cmp
dec
out
cmp
or
xlat
jge
aam
pop
xchg
inc
fists
push
mov
add
data16
sarl
je
loopne
xor
ja
xor
pop
test
loope
and
mov
sub
das
push
sahf
orb
push
sarb
aaa
cli
mov
cmp
mov
or
int3
adc
or
pushf
xorb
mov
loopne
imul
mov
inc
call
inc
push
mov
ja
pop
popa
xor
mov
js
cmp
add
lcall
sbb
rolb
add
push
jns
jb
mov
inc
mov
push
push
sub
in
push
fidivrl
fadd
push
cmpsl
jge
es
in
sub
aam
push
mov
icebp
enter
lahf
add
push
fisubrl
call
test
test
imul
cmp
pop
push
sub
add
add
adc
in
dec
imul
loop
loope
sbb
pop
and
jl
mov
xor
ds
ret
mov
mov
subl
popf
inc
fnstsw
pop
test
xor
out
sub
add
mov
fwait
jmp
mov
mov
adc
and
push
add
cmp
filds
inc
dec
or
mov
and
ret
into
add
pop
sub
hlt
data16
jno
into
das
add
xchg
xchg
cltd
sbb
es
or
mov
pop
jle
jp
jp
in
mov
ljmp
fs
int3
and
movsb
outsb
mov
loope
lahf
jae
out
add
pop
sbb
mov
shlb
or
iret
outsb
adc
mov
inc
clc
test
nop
test
xlat
push
adc
cld
jno
push
arpl
xchg
xchg
mov
hlt
inc
or
jp
adc
adc
ljmp
hlt
sbb
jb
cltd
movsl
inc
loop
jecxz
jbe
sbb
pop
imul
add
adc
cltd
add
insb
jg
loope
aaa
cmp
adc
shll
adcl
or
stos
movb
inc
inc
and
xor
rcrb
subl
nop
das
dec
add
sbb
dec
add
addb
pusha
movsl
pop
xor
icebp
out
cmp
inc
leave
xor
add
jmp
mov
add
test
push
mov
dec
iret
addb
xor
out
add
pop
xchg
aad
ret
movsb
sub
out
adcl
adc
fnstsw
rclb
dec
repnz
xor
and
mov
imul
sbb
cmp
inc
lods
cmp
adc
add
pop
and
sbb
inc
xor
stos
and
sub
inc
and
mov
adc
sbb
sub
aaa
jl
xchg
test
inc
rorl
dec
push
mov
push
mov
lret
push
sbb
sbb
dec
mov
loop
js
lahf
jg
jecxz
xor
sbb
pop
les
jp
adc
push
inc
ja
and
or
push
lret
or
sub
add
and
pusha
jo
dec
xchg
mov
insb
jle
loopne
fwait
sub
sub
mov
xchg
xor
das
xor
rorl
sbb
mov
sbb
push
push
and
pop
adc
shl
lock
ret
test
insl
lods
shrb
and
mov
xchg
stos
test
lret
mov
sub
lret
scas
add
adcl
xchg
loop
in
adc
lock
mov
inc
ss
rol
jno
pop
iret
aam
daa
sub
sub
mulb
dec
inc
insb
lahf
lods
sub
mov
fdivs
jecxz
pushf
xchg
data16
add
in
fmul
popf
add
push
jg
xlat
push
add
jnp
dec
adc
xor
adc
xchg
cs
imul
mulb
mov
fs
xorl
nop
sbb
loope
in
es
cli
add
popa
fwait
in
pop
add
jns
test
cltd
sub
pop
mov
xor
test
neg
movsl
icebp
add
pop
cmp
lods
mov
or
call
adc
add
rorb
sub
fstps
push
aaa
clc
mov
add
dec
lock
lds
out
jo
and
loop
movb
in
mov
or
sbb
fcmovnb
ret
cs
cltd
lahf
xor
icebp
or
or
jecxz
aam
xchg
jecxz
shrb
sti
hlt
pop
mov
popf
sub
adc
js
mov
mov
or
push
subb
rcrb
and
pop
xchg
xchg
jp
add
pop
add
mov
shr
inc
xor
mov
loope
rorb
mov
ljmp
repnz
das
clc
mov
ret
pop
ret
mov
fadds
ss
push
jne
mov
jae
mov
gs
pop
xchg
and
push
aam
jl
jg
mov
push
lret
fcoms
jg
dec
lahf
xchg
push
cmp
inc
insl
fldcw
das
or
cltd
test
adc
popa
push
fiaddl
pop
inc
mov
push
push
sub
sbb
dec
clc
push
inc
leave
push
dec
sbb
inc
test
shll
mov
es
mov
rorl
fmuls
jno
insl
addr16
pop
xchg
dec
mov
add
sbb
in
sbb
push
mov
xor
movsl
pop
mov
es
push
shlb
rorl
mov
in
adc
adc
out
jne
and
or
pop
sub
cld
mov
mov
adc
inc
jge
jp
test
dec
js
arpl
and
inc
push
jmp
jae
adc
ss
inc
or
xorb
insl
inc
jnp
cmp
jp
test
and
mov
xchg
leave
pop
xor
andl
iret
loopne
or
add
add
mov
movsb
sbb
adc
imul
shrd
sub
xchg
fists
pop
push
xor
or
nop
mov
mov
sti
in
aas
inc
sub
mov
xor
sub
jmp
arpl
add
and
add
shrb
xor
shr
jno
cwtl
les
test
jp
lahf
mov
addr16
cli
xor
push
xchg
jo
test
mov
fisttpll
iret
push
rol
lret
sub
mov
xchg
add
and
jno
inc
lret
fidivrl
and
data16
mov
mov
and
cld
mov
jmp
and
das
mov
roll
dec
adc
mov
ret
es
mov
push
pop
ja
mov
in
mov
sbb
ror
sahf
or
push
aaa
mov
jnp
mov
ret
movb
inc
cmp
push
inc
xor
jnp
imul
pop
imul
aas
cmp
pop
inc
sbb
xchg
mov
pop
shll
xchg
repnz
dec
das
or
push
sbb
and
push
es
fisubrl
dec
add
inc
xor
jle
pop
cmp
ja
andb
jl
das
sbbb
loope
pop
ffree
and
imul
cmp
inc
in
pop
push
pop
add
add
jo
shl
insb
and
pop
mov
fisubs
fwait
les
sub
movsl
call
or
scas
pusha
xchg
jecxz
xor
loope
test
pop
sub
or
in
push
mov
mov
int
addb
pop
fisubl
pop
js
jge
aas
ljmp
test
xchg
sub
adc
mov
aaa
mov
mov
jo
mov
xor
popf
add
or
sbb
or
out
sub
adc
mov
icebp
into
jbe
jg
in
pushf
iret
push
mov
lahf
xchg
scas
push
jl
shrl
cmp
add
push
addr16
jecxz
pop
out
ss
sub
cwtl
xor
sbb
aaa
push
ss
lret
mov
mov
imul
jno
pop
test
inc
iret
xchg
je
and
outsl
xchg
pushf
push
idivl
dec
sub
imul
pop
xchg
loopne
add
andb
adc
mov
xor
cmp
push
sub
lock
mov
inc
mov
xchg
iret
mov
or
shrl
or
icebp
sbb
pushf
adc
jl
pop
inc
cmpb
mov
jecxz
jno
pop
pop
popf
test
aas
sbb
enter
jmp
push
pop
xor
js
mov
cld
dec
stos
pop
adc
addb
or
mov
mov
addr16
xchg
jge
jbe
popf
sbb
jl
cld
cli
jbe
mov
lret
data16
push
or
jae
fnstsw
add
add
sbb
sbb
addr16
ljmp
push
in
stc
out
pusha
push
or
jo
out
sti
insl
in
shll
jae
popa
loopne
cmp
push
je
xchg
jl
fsubp
bound
jnp
pop
arpl
and
add
pop
mov
push
fstps
mov
adc
jns
xor
mov
adc
mov
inc
xchg
and
clc
jl
cmp
and
sub
xor
sub
add
inc
loope
xchg
fcoms
imul
in
ret
nop
fcmovbe
mov
orl
add
inc
add
sub
leave
adc
and
leave
cmp
loopne
mov
mov
aas
add
jo
outsl
adc
ja
mov
mov
sti
and
ret
sbb
add
movsb
pop
dec
dec
in
xchg
aam
dec
fcmovb
fildll
lea
movsb
in
add
ljmp
or
jecxz
out
and
or
imul
aas
add
jno
or
js
jb
add
notb
cli
push
shlb
sbb
loope
lea
mov
and
stc
xchg
mulb
int
inc
jnp
addb
ss
dec
test
test
in
pop
inc
mov
add
setp
pop
xor
xor
daa
gs
mov
subl
nop
ret
or
and
test
add
fsubp
repz
inc
test
mov
mov
mov
scas
sbb
jbe
lock
sbb
loop
clc
xchg
xchg
cmp
push
xor
fstp
pop
decl
das
cmpsb
aam
addb
outsb
stos
mov
adc
movsb
adcl
mov
js
fdivs
push
inc
ret
mov
in
xchg
and
pop
aam
add
mov
imul
scas
std
inc
sub
inc
orl
inc
or
xchg
pop
adc
dec
rolb
stos
xor
cmp
mov
sub
sbb
call
jle
sbb
cmp
add
jae
fimull
mov
testb
cmp
jo
xchg
daa
jns
sbb
push
insl
lret
sub
lahf
push
push
aas
inc
xor
lret
iret
inc
cwtl
lret
sbb
pop
les
xorl
xchg
fildll
inc
mov
jecxz
pushf
xchg
lcall
push
jge
imul
and
pop
pop
test
inc
and
rolb
inc
shrb
or
mov
mov
ds
icebp
adc
mov
decb
pushf
lret
or
push
xchg
mov
icebp
inc
sar
cmp
popl
xor
scas
aas
into
js
dec
jne
or
call
pause
jmp
add
lea
push
pop
loopne
xchg
je,pt
dec
scas
sbb
cmp
fmul
imul
adc
rorb
dec
outsb
and
in
push
pminsw
inc
push
inc
and
out
stc
xor
xchg
cli
add
mov
sbb
add
int
call
add
xchg
movsl
insb
adc
push
or
insb
in
add
mov
hlt
cmp
add
fldcw
add
or
daa
imul
sub
fwait
and
push
fidivl
pop
pop
mov
xchg
lock
es
test
inc
jne
es
or
add
fneni(8087
mov
movsb
rolb
mov
adc
scas
ficomps
insb
push
inc
push
push
xchg
repnz
add
call
in
cltd
das
and
dec
mov
xlat
sbb
mov
lea
movsl
cmp
add
add
adc
ss
push
lock
mov
ljmp
aam
repz
test
lods
test
inc
sub
inc
stc
xchg
xor
in
xchg
pop
xlat
push
mov
mov
inc
les
pop
inc
iret
sarl
mov
popa
mov
js
je
pop
es
add
mov
arpl
sbb
popa
call
xor
aas
mov
push
xchg
aad
xchg
sub
jl
dec
sbb
ret
shrb
xchg
add
pop
xor
fists
cmp
cwtl
jmp
sbbb
inc
cwtl
in
add
and
shll
add
push
and
lret
jecxz
adc
xor
cmp
test
movsl
dec
fwait
imul
dec
nopl
dec
jns
fistl
mov
add
push
aam
aas
sysexit
xchg
in
cwtl
adc
dec
pop
sbb
push
sub
sub
sub
push
and
int3
lret
js
mov
mov
add
or
add
jge
push
add
mov
adcl
ret
sbb
dec
xorl
and
add
ficoms
fiaddl
xchg
loope
mov
pop
dec
movsl
push
cli
into
popa
lods
test
lret
adc
add
jbe
scas
pop
mov
sub
or
fisttps
inc
test
pop
sbb
loope
insl
mov
in
loop
jecxz
pop
sub
out
adc
and
xor
pop
cmpsb
or
sub
orb
and
jae
add
and
xor
roll
mov
and
loopne
add
int3
xor
sti
add
add
lret
je
add
pusha
mov
cltd
jmp
mov
outsl
push
push
fadds
addl
rorb
sbb
test
lock
pop
sbb
dec
jp
insl
ds
adc
xchg
add
ja
imull
jp
icebp
scas
movsl
jle
inc
fmulp
inc
pop
flds
rol
xor
inc
sbbb
scas
out
fmull
dec
imul
mov
es
je
pop
or
jmp
hlt
mov
pop
mov
push
jnp
jne
frstor
shl
push
mov
loop
iret
flds
sbb
aaa
hlt
fldt
push
icebp
add
xor
jg
lahf
ret
push
inc
stc
adc
loopne
lods
stos
mov
call
add
nop
xchg
inc
pop
mov
out
xchg
inc
or
lcall
jbe
out
xchg
cld
loop
adc
dec
aas
pop
sbb
mov
sub
dec
sub
dec
lret
addl
daa
push
insl
sbb
push
jmp
xchg
nopl
lret
aad
mov
and
xchg
repnz
ret
mov
adc
imul
dec
mov
dec
inc
daa
push
sub
add
lods
mov
add
inc
in
adc
push
inc
xlat
cmp
mov
mov
xchg
loop
and
fisttpll
orb
or
push
or
add
mov
sbbl
inc
sti
xchg
jne
dec
daa
fs
jecxz
scas
aas
fisubrs
sub
xchg
lods
lea
int3
xor
mov
add
shrl
jmp
and
mov
jne
dec
push
in
jbe
jne
pop
fsubrs
data16
mov
aas
test
jl
and
inc
mov
bound
stos
push
cmp
adc
jmp
or
mov
and
std
inc
mov
mov
lods
imul
pop
sub
out
fldl
andb
andl
add
int3
in
popf
xor
gs
arpl
pop
cmp
xchg
addl
insl
nop
xchg
add
cs
addl
adc
or
or
and
pop
add
push
icebp
hlt
sub
mov
adc
inc
sub
shlb
add
popa
imul
mov
es
mov
jae
mov
mov
loope
mov
sahf
call
insl
sub
add
and
icebp
rcl
or
fdivl
andb
into
and
inc
xchg
sbb
or
ret
jge
push
dec
outsl
add
or
xor
rcrb
add
sbb
mov
push
movsl
icebp
mov
add
pop
cmp
push
dec
xchg
xchg
or
faddl
addl
and
sub
xor
push
or
pop
inc
andb
rcl
sub
add
sub
mov
sbb
bound
mov
test
xchg
out
imul
inc
lods
or
and
xchg
mov
inc
mov
add
insl
mov
pop
ret
cmp
fisubs
or
test
inc
lahf
test
sbb
mov
sahf
mov
add
mov
fs
nop
add
aam
js
mov
sti
repz
inc
xor
adc
jo
cmp
ja
inc
inc
mov
test
outsl
cltd
xor
movb
add
adc
sti
fdivrs
and
and
jecxz
ficompl
add
mov
gs
inc
mov
fildl
inc
fs
or
adc
inc
fwait
sbb
jno
lods
pusha
mov
in
daa
call
pusha
or
insl
adc
imul
xor
push
add
xor
adc
jo
xchg
iret
addr16
pop
or
pop
subl
push
out
jecxz
daa
outsb
rcll
mov
jae
mov
xor
js
jecxz
test
lds
fmuls
loop
gs
jp
stos
and
pop
fsubs
popf
sbb
popa
cmpb
add
or
fstps
test
adc
pop
lea
jno
push
jbe
push
add
mov
iret
lds
fildl
rcr
sti
inc
call
imul
mov
sarb
cmpsb
test
shll
add
ret
orb
call
jmp
add
dec
sbb
cli
add
cmp
jb
jbe
ljmp
sti
nop
mov
add
iret
fisubrs
inc
mov
jle
sub
sbb
pusha
xor
insl
dec
ds
mov
test
adc
add
loopne
xchg
sub
inc
xor
push
psubb
xchg
mov
sarb
mov
lret
sbb
jmp
adc
mov
xor
stos
add
daa
in
jecxz
movl
ds
xchg
xchg
rcll
xchg
roll
xor
daa
cmp
sub
loope
add
xchg
jnp
or
push
inc
jp
xchg
sub
daa
jg
xor
stos
ret
roll
pusha
push
cmpb
arpl
mov
lret
jg
or
stos
flds
sti
mov
or
dec
cmp
cmp
mov
cmc
imul
push
mov
push
shll
add
cmpsb
shll
lcall
jmp
je
ja
sub
enter
or
xchg
lods
pminsw
mov
or
aaa
xchg
and
lods
push
jmp
adc
pop
loope
gs
adc
mov
pusha
inc
sub
lods
cmc
sub
call
push
xor
xlat
cwtl
ficoml
sbb
pop
add
repz
add
xchg
add
jnp
lds
xchg
lea
movsl
out
add
xor
and
cmp
xchg
jge
pop
mov
cmpsl
sbb
addr16
or
and
or
mov
mov
scas
sbb
cmpsl
int
sbb
imul
subl
inc
and
fwait
jg
add
jmp
into
xlat
mov
and
rcl
or
mov
test
jns
and
add
addr16
imul
jo
push
ret
cli
add
push
stos
iret
mov
loope
test
sti
push
sbb
lods
adc
jge
sbb
xlat
dec
add
mov
dec
add
dec
xchg
sar
dec
ja
testl
mov
adc
popa
adc
out
outsl
jl
sbb
push
or
popf
ss
inc
sbb
and
jne
or
and
cmpsb
mov
mov
lods
ret
mov
aad
push
jo
addl
push
sarl
stos
add
or
mov
push
daa
addb
inc
inc
inc
shrb
xchg
inc
inc
jne
and
sbb
xchg
cmpsl
xor
inc
arpl
movsl
pop
aam
lret
and
or
aad
adc
ret
push
cmp
cmp
pop
lds
popf
leave
or
sbb
push
test
add
xchg
shll
push
popf
xchg
xor
or
or
into
and
jecxz
sbb
sub
dec
cmpsb
pop
decl
adc
lret
push
jo
insl
adc
stos
addb
dec
daa
arpl
int
fmuls
repz
sbb
iret
insb
lods
pop
inc
adc
or
sbb
mov
adc
cltd
repnz
fadds
out
aam
mov
xchg
and
or
inc
sub
insl
jne
mov
fidivl
xchg
adc
sbb
les
jbe
sub
add
orb
fwait
jmp
jae
outsb
add
cmp
jl
dec
dec
or
lahf
or
push
push
or
add
pop
and
jge
fisubs
dec
sbb
dec
jmp
push
dec
mov
and
xlat
xor
test
lret
in
jg
xchg
sahf
xorl
gs
addl
in
jns
sub
or
push
fadd
xor
call
cwtl
cmpsb
cmp
loopne
and
and
daa
ret
stc
cs
mov
inc
inc
mov
daa
add
lock
add
int
into
lock
push
inc
daa
iret
cmpl
nop
adc
inc
sbb
dec
inc
add
push
add
ss
add
dec
enter
sub
sbb
cmp
dec
xor
movsl
xor
inc
adc
push
es
fiaddl
sbb
add
inc
adc
and
adc
dec
mov
cmp
jg
add
dec
xchg
add
mov
es
push
fchs
ror
cli
movsl
out
dec
ltr
or
sahf
pop
mov
jne
xchg
ret
in
inc
addr16
or
cs
es
cmc
mov
test
xorb
sub
adcb
lea
ret
mov
cmp
or
sub
outsl
mov
or
xchg
mov
shrb
cwtl
fisubl
add
sbbl
and
sbb
fidivl
repnz
pop
push
pop
popf
ja
rorb
or
cli
cmp
sbb
pop
sub
or
dec
push
movsl
add
arpl
inc
sbb
mov
jo
test
jae
addb
inc
sub
sub
xor
cs
cmpsl
xlat
jno
orb
dec
cli
and
xorl
jbe
shl
aaa
je
pusha
and
aas
cmp
test
cmp
and
mov
or
add
fildl
pop
pop
dec
dec
dec
orl
jge
mov
add
faddl
sbb
mov
outsl
pop
sub
pop
add
mov
cmpsb
fwait
dec
mov
jecxz
stc
xor
imul
and
sbb
iret
sbb
add
push
enter
sbb
scas
insb
lods
leave
fsubr
out
pop
lods
mov
filds
roll
rorb
pop
sbb
test
add
jp
mov
lods
sub
das
decl
dec
dec
mov
jo
inc
test
jno
and
test
cmc
sub
pop
dec
faddl
ds
mov
and
and
pop
sbb
mov
add
ret
add
scas
sbb
pop
mov
jmp
lret
jno
cmp
cwtl
jecxz
ret
sti
xchg
dec
inc
inc
mov
stos
push
decb
ss
imul
or
pop
adc
push
and
cmp
loopne
lods
aaa
daa
and
addl
insb
mov
xlat
lahf
daa
aaa
aad
jecxz
lea
imul
jle
pop
jns
dec
jne
jecxz
rclb
je
cmp
xor
and
sbb
ja
and
jne
nop
mov
push
movsb
mov
insb
mov
sub
roll
mov
xor
push
push
pop
lock
adc
xor
es
imul
sub
add
sahf
xor
add
repnz
add
sbb
lcall
adc
imul
cmp
lds
stos
mov
push
das
ja
fists
cmp
xor
push
lock
in
push
bound
pop
lret
or
inc
cltd
xchg
loope
in
sub
jb
test
out
xor
xchg
testw
push
inc
cmp
test
or
mov
mov
imul
pop
out
test
arpl
cmpsb
cmc
mov
pop
imul
sub
add
or
arpl
ret
outsl
in
or
and
adc
add
clc
mov
mov
pusha
shll
add
loopne
int
inc
dec
pop
daa
inc
cvtpi2ps
mov
movsb
loope
and
push
lods
jo
pop
lea
jmp
clc
jmp
jb
jo
in
mov
cmpsl
push
inc
pminub
push
jcxz
and
mov
jp
lret
into
push
ret
dec
pop
leave
mov
data16
sbb
mov
insl
faddl
adc
mov
sub
or
imul
pop
mov
sub
fwait
push
and
sub
sbb
sub
imul
repnz
and
push
jge
fisttpl
aam
inc
jecxz
or
push
adcl
and
and
push
adc
and
ret
pop
add
into
fadds
xchg
sub
in
mov
sbb
adc
imul
and
mov
inc
fmuls
test
insl
push
jge
or
and
inc
xor
dec
ret
push
dec
sarl
scas
fwait
pop
sbb
ja
nop
cs
in
mov
into
and
push
pop
jbe
dec
sub
inc
pop
into
dec
ret
scas
cs
cmp
dec
enter
imulb
test
scas
cmp
add
jo
sarl
sub
movsb
adc
test
mov
push
cmp
adc
loop
pop
addb
mov
daa
cmp
add
jno
xchg
dec
or
push
ljmp
pop
and
int3
adc
out
flds
push
pop
xchg
xchg
mov
shlb
add
xor
popa
inc
adc
inc
pushl
add
pop
sub
or
fwait
sbb
xor
jle
adc
sub
xor
xchg
mov
mov
jge
xor
shlb
loope
fadd
xlat
ja
xor
outsl
int3
inc
sti
push
xchg
loop
pop
push
dec
data16
xorl
outsb
pop
mov
sbb
xor
sbb
adc
push
loope
je
fisubl
mov
adc
inc
sub
jnp
inc
lods
sub
xchg
mov
lcall
xchg
inc
mov
int3
inc
cmp
das
sub
mov
push
add
rcl
pusha
dec
xor
adc
inc
cmp
fdivs
xchg
lods
data16
fiaddl
sub
les
mov
mov
bound
mov
test
lds
mov
push
fcmovnb
adc
and
xchg
outsl
mov
inc
sti
shlb
mov
sub
or
js
xchg
or
fdivl
lods
push
sub
or
inc
cmp
lods
inc
fs
xor
add
inc
or
dec
mov
jno
add
pop
ljmp
add
cli
and
inc
cmp
add
xorb
movsb
sbb
add
xor
jg
cmp
fcoms
xor
popa
rcrl
dec
add
jmp
iret
rcr
mov
hlt
imul
jp
inc
pop
dec
inc
add
pop
xchg
jnp
test
rcrb
ret
fidivs
orb
pusha
cmpsl
out
and
jmp
xchg
or
daa
xchg
es
dec
inc
add
addr16
out
dec
inc
mov
add
jbe
jae
and
lods
pop
dec
mov
mov
nop
adc
pop
out
xor
mov
repz
test
icebp
xchg
mov
add
and
push
loop
scas
sub
or
dec
fcmovb
xor
mov
xchg
push
in
call
lcall
sarl
inc
test
jbe
repz
and
mov
sub
xor
jge
pop
push
pushf
mov
mov
jecxz
adc
inc
xchg
sub
fists
dec
pop
dec
mov
cmp
cmpsl
or
lods
mov
or
mov
fistpll
imul
push
scas
mov
and
lea
pop
jno
mov
xor
cwtl
sub
xchg
aad
mov
cmp
leave
mov
in
cmp
push
mov
subl
adc
inc
pop
mulb
cmp
or
push
push
push
cmp
xor
ja
cltd
xlat
imul
jne
mov
dec
clc
push
movsb
loope
xchg
mov
je
movsl
xchg
daa
das
adc
imul
xlat
nop
lret
and
sbb
lcall
push
xor
or
les
loopne
cmpsb
push
mov
add
pop
inc
add
dec
ret
push
les
loopne
aad
sub
flds
jno
ja
popf
cmp
sbb
mov
cs
xchg
call
lods
and
inc
aas
orl
cmp
or
icebp
or
cmp
fdivrs
hlt
cmp
jne
mov
dec
sbb
shrl
xor
icebp
int3
mov
jbe
int
test
mov
outsl
lods
cmpb
sbb
dec
mov
mov
inc
adc
jge
xor
bound
mov
es
daa
jmp
sub
and
and
or
arpl
ret
mov
or
push
fidivs
aad
sbb
mov
jns
jg
xchg
pop
aaa
test
push
jnp
inc
test
aaa
test
bound
and
sub
stos
imul
and
addr16
push
lock
outsl
test
cmpsb
push
or
inc
dec
mov
adc
js
int3
rclb
push
adc
fisubl
test
repnz
scas
adc
push
lock
daa
add
fnsave
jp
xchg
xchg
xchg
add
inc
add
test
or
xorb
adc
rolb
sub
movsb
int
ret
adc
lods
add
push
es
and
xor
sti
rcll
iret
lea
nop
in
lock
lahf
inc
addr16
out
adc
popa
inc
test
int3
sbb
inc
call
dec
sbb
jl
pop
jb
ss
ficompl
imul
adc
lcall
shlb
mov
mov
aad
std
xchg
nop
add
ret
ffreep
scas
out
mov
push
negl
test
sahf
mov
add
sub
stos
std
dec
xchg
pusha
out
xor
scas
mov
cld
pop
iret
shrb
push
clc
sub
dec
movsl
mov
mov
inc
jmp
mov
ror
xchg
adc
lret
add
test
addl
adc
jl
push
add
pusha
mov
pop
inc
adc
mov
andl
aas
lock
push
rcrb
mov
and
jg
push
mov
pop
negb
push
test
lea
pop
or
rorb
adc
or
negb
adc
roll
adc
and
dec
ret
nop
mov
and
inc
xchg
adc
fucomi
fs
push
dec
adc
ds
es
jmp
dec
mov
add
adcb
jle
ja
int3
repnz
jnp
add
inc
pop
jmp
aaa
mov
mov
popa
dec
imul
lcall
sub
or
loope
loopne
or
or
lea
cmp
pop
inc
stos
xchg
push
adc
ret
dec
repz
lods
popa
cmpsl
test
sub
add
addr16
mull
cld
and
pusha
add
fdivs
scas
pop
mov
ret
aaa
ret
test
andb
aam
and
cmp
xorb
loope
hlt
adc
dec
xor
push
dec
test
cmp
lea
add
dec
lods
std
das
and
cmpb
lar
xor
jbe
sahf
iret
pop
and
notb
sub
rcrl
lahf
pop
add
cmp
das
popf
std
lods
sub
and
adc
shrb
mov
ror
pop
dec
add
test
inc
xor
or
and
adc
sbb
add
fwait
mov
lock
in
jno
iret
clc
dec
mov
lods
jp
xchg
pop
add
decl
rcll
sub
rorb
ljmp
jle
inc
or
inc
outsb
std
stc
cwtl
push
ret
add
xor
or
xchg
cmc
loopne
or
jle
inc
ror
popl
push
pop
mov
jno
xchg
mov
enter
ret
pusha
sub
sub
sbb
or
or
jmp
dec
ror
jbe
push
xor
adc
or
mov
sti
pop
loopne
push
sbb
lds
repz
sub
pop
loop
inc
scas
mov
es
inc
or
fwait
cmp
xor
jmp
push
add
mov
rclb
ss
loopne
adc
rorb
popa
scas
xor
lods
sub
pop
fcoms
lea
shlb
and
xchg
mov
add
shl
mov
adc
add
and
popf
pop
push
rclb
and
cmp
push
cltd
or
test
shlb
add
shrl
xorl
mov
ss
xchg
inc
out
loop
xor
and
and
cs
data16
or
mov
mov
ret
or
rolb
fists
sub
movb
adc
jo
jae
cltd
jb,pn
adc
lods
nop
mov
xchg
ret
popa
daa
movsb
pop
in
fidivl
in
mov
daa
or
jno
fmul
mov
cmp
push
mov
mov
cltd
les
add
jb
and
add
iret
push
adc
sbb
sub
jbe
mov
nop
push
mull
or
inc
and
cmc
popa
cmp
add
dec
sbb
adcb
dec
pop
sub
faddl
and
add
sub
add
outsl
inc
addl
push
lea
xor
loopne
insl
mov
or
mov
cmp
add
mov
or
ds
mov
loopne
mov
xor
cmp
sbb
sahf
push
cli
add
inc
mov
and
push
sub
fadds
out
dec
jecxz
fs
lods
jmp
xor
cmp
ret
dec
and
loope
data16
jnp
cmp
popf
jl
mov
insl
sub
roll
not
shlb
sbb
jae
sti
rcll
pop
cmpsl
add
jle
add
mov
push
scas
icebp
push
aam
xchg
out
stos
or
jmp
mov
jo
ret
pop
and
and
pop
dec
pop
xchg
pop
xchg
in
sub
dec
shlb
pusha
sub
fsts
sbb
pop
xchg
aas
and
xchg
xchg
xor
sbb
in
mov
fcomp
push
push
cmpsb
sub
enter
and
sub
daa
xor
aam
adc
and
adc
call
or
iret
roll
xchg
push
push
jb
rolb
adc
sbb
sub
into
out
cld
and
jne
sub
jmp
sub
sbb
adc
mov
push
rolb
cmp
mov
fcoms
sub
in
movsb
adc
xchg
test
add
or
add
mov
sbb
in
and
jns
rcrl
int
mov
aas
mov
pusha
jns
sub
dec
stos
cmc
or
mov
mov
aaa
mov
pop
sbb
and
loopne
and
jno
inc
dec
mov
clc
fldl
call
lret
mov
ret
aas
mov
cld
popf
jae
xchg
xchg
mov
xchg
lahf
shl
jo
ds
jmp
add
fidivs
push
jno
sbb
sbb
adc
jle
and
xor
and
movsl
add
inc
xorb
arpl
fildll
stos
outsl
es
fldl
out
sbb
lods
out
push
sbb
mov
rcr
or
fisttps
mov
adc
mov
add
xor
adc
movsb
shlb
or
cmp
ja
jp
loopne
in
mov
mov
outsl
push
adc
jmp
out
pop
aaa
inc
cli
xchg
js
movsb
lea
pop
pop
inc
push
inc
pop
shrl
jecxz
cmp
insb
pop
adc
jmp
lcall
incl
dec
dec
shrl
mov
add
push
ror
pop
rcrb
das
mull
sysenter
movsl
mov
jae
xorl
popa
popa
push
imul
nop
and
or
cmp
in
rcll
xchg
cmc
xchg
xor
pop
fsubrs
push
out
movsb
sar
mov
mov
xchg
mov
insl
pusha
daa
cmp
sub
bound
adc
add
jl
jne
in
pop
scas
sbb
mov
andb
mov
xchg
movsb
bound
addr16
dec
add
add
inc
cmp
jge
push
mov
stos
movsb
and
xor
push
pop
inc
add
push
adc
subl
jmp
pop
jp
push
outsl
dec
pop
out
and
loopne
sbb
out
inc
mov
mov
jns
xchg
and
sbb
scas
jnp
fistl
fisubs
and
popf
jne
add
sti
lret
insl
add
xor
mov
sbb
cs
jbe
add
movsb
push
loop
pop
pop
add
mov
add
loop
or
out
xchg
add
orl
insl
popf
add
inc
jmp
or
das
dec
cmp
push
std
clc
lock
insl
lea
clc
sub
movsb
xor
xlat
lcall
mov
xchg
cmp
inc
add
and
sbb
push
enter
sbb
push
ds
xor
dec
push
add
sub
mov
mov
pop
ss
lcall
push
push
add
pop
push
sbbb
jne
push
xchg
add
loopne
sub
clc
subb
push
add
lods
sbb
and
pop
repnz
outsl
aaa
push
pop
imul
xchg
push
inc
xchg
iret
lods
xchg
add
push
sbbb
mov
je
cwtl
pushf
shlb
adc
add
pop
or
cmp
rolb
push
pop
cmp
ss
sub
imul
adc
or
push
pmuludq
push
je
xor
xor
jo
mov
push
pop
mov
dec
fmuls
out
cmp
adc
add
push
jo
test
add
test
inc
cmpsl
ret
mov
shlb
push
sahf
loope
lods
lahf
add
setbe
cmp
hlt
int3
push
add
dec
xor
push
xor
mov
loopne
repnz
cmp
pop
push
cmpsb
les
jp
pop
rorb
pop
out
add
or
push
outsb
lods
adc
adc
pop
aad
adc
hlt
jmp
mov
inc
jo
push
movsb
adc
sbbb
notl
sub
sub
add
sbb
inc
mov
out
pop
inc
or
outsl
scas
jecxz
movsl
gs
sti
push
xchg
loope
push
clts
clc
or
or
jae
or
cmp
divb
push
add
or
mov
xlat
rolb
push
scas
dec
and
add
or
mov
mov
inc
and
xchg
gs
repnz
add
add
push
inc
adc
mov
pop
testl
test
ss
js
aam
inc
insl
bound
faddl
popa
add
cmpl
js
lret
mov
icebp
sub
inc
loopne
pushf
in
gs
mov
rolb
lods
add
mov
sub
jne
out
lods
ret
les
stos
lods
jo
addb
outsl
or
or
inc
add
loop
aad
cwtl
sbb
push
aaa
scas
mov
xchg
mov
mov
lret
jb
adc
inc
fstps
inc
pop
out
je
js
mov
and
inc
loopne
lods
leave
loop
test
ds
inc
fnstenv
dec
bound
lods
jg
ja
loop
sub
insl
int
stos
mov
xor
flds
loopne
loope
je
fsubl
add
movsl
pop
jp
roll
loopne
adc
pop
pop
mov
loopne
es
xor
add
pop
cli
inc
aam
inc
pusha
subl
mov
ja
adc
cs
dec
icebp
inc
sub
mov
mov
imul
fwait
daa
mov
xchg
cmp
out
pop
xor
stos
adcb
out
imul
into
cmp
dec
insl
gs
dec
xor
sarl
scas
sbb
in
sbb
cmp
popa
mov
adc
imul
data16
push
in
sbb
sbb
cmpb
or
or
in
iret
in
std
jb
les
clc
rclb
xor
xorl
mov
or
addr16
in
jae
add
mov
daa
sub
fiaddl
add
cltd
lock
xchg
mov
gs
add
pop
jge
ret
mov
mov
mov
ja
push
decb
mov
adcb
lcall
out
mov
call
mov
jne
mov
cmpl
iret
add
and
dec
sub
sub
movaps
call
dec
sub
mov
inc
es
add
hlt
enter
jne
dec
lret
or
cltd
sbb
cltd
pop
mov
test
pop
fdivs
sbb
mov
imul
lods
imul
ficoms
punpckhbw
out
inc
push
sbb
mov
jl
pop
push
movsb
sub
inc
jo
add
xor
push
and
xor
sub
cmp
inc
dec
je
push
or
and
dec
and
cmc
add
add
push
sbb
scas
pop
and
jne
cmp
sub
xlat
push
sub
loop
jl
pusha
and
shl
das
cmp
rorl
mov
inc
das
jns
xor
aaa
mov
sub
sbbl
cmp
dec
mov
jbe
iret
push
push
mov
push
jmp
add
pop
add
fisubl
xchg
adcb
jl
lea
shll
sbb
add
xchg
pop
std
std
cmpsl
repz
inc
mov
adc
shrb
mov
lea
pop
sub
sbb
fwait
sbb
insl
adc
push
sbb
add
push
pop
shll
mov
fisttps
and
push
pcmpeqb
mov
jnp
sub
cmpsb
adcb
bound
shr
jb
ret
pop
and
sub
mov
mov
hlt
jl
bound
push
dec
into
gs
or
es
add
push
mov
fnstsw
lret
inc
cwtl
jg
es
sub
adc
movl
push
mov
in
imul
shlb
add
sub
mov
inc
adc
mov
mov
mulb
pop
xchg
jne
xchg
xor
xor
lods
pop
dec
mov
sub
pop
add
pusha
inc
add
loope
mov
testb
and
jo
lret
clc
pop
xchg
mov
testl
xor
xor
stos
jecxz
pop
xlat
mov
pop
ret
sub
or
pop
jl
mov
lods
sub
inc
shr
sub
mov
pop
mov
jo
pop
sbb
lret
or
inc
call
jbe
lods
lahf
adc
inc
test
mov
mov
mov
sbb
xchg
or
test
jae
lds
sbb
cwtl
add
mov
dec
or
xor
sbb
xor
push
adc
movsb
xchg
sahf
jnp
inc
add
inc
imulb
fcoms
mov
push
jbe
inc
movsb
pusha
out
lret
jno
mov
movsl
xor
test
faddl
test
xchg
xchg
dec
aas
rcr
push
ret
int3
sahf
xor
das
push
mov
jp
lock
dec
ret
icebp
notl
mov
loope
cmc
loopne
push
add
test
push
cmp
pusha
or
mov
xor
out
mov
jecxz
or
lods
js
fcmovb
dec
dec
sbbb
out
push
sbb
jo
rolb
lret
xchg
fwait
jo
das
arpl
test
push
inc
mov
push
mov
or
or
mov
ret
pusha
adc
xor
adc
les
adc
addr16
push
rcrl
sti
mov
push
mov
inc
shlb
push
pop
or
or
imul
scas
loopne
jp
push
es
cmpsl
jmp
data16
in
dec
movsl
xor
cmpsl
sbb
adc
test
imul
movsb
xchg
add
sbb
add
movl
repz
test
push
cmpsl
lock
sub
mov
xchg
add
or
bound
cmpsl
outsl
loop
orl
push
xor
ror
addr16
adc
or
imull
cs
loope
jno
lds
mov
sub
mov
int
inc
popa
add
push
or
stos
or
pop
push
ss
jb
add
stc
jb
dec
add
dec
sub
movsb
unpckhps
and
xor
and
lea
sub
aad
test
inc
add
hlt
loopne
xchg
cmp
cmp
lds
inc
outsb
cmp
scas
xlat
rcrb
insl
add
cmpl
add
loope
loopne
arpl
popl
shr
mov
mov
je
xchg
add
adc
addr16
mov
or
inc
bound
dec
inc
xor
je
or
push
push
ljmp
stc
rcll
mov
inc
popa
mov
mov
push
pop
mov
add
sub
adc
pop
imul
mov
lret
roll
mov
and
sbb
insl
int
inc
pop
sub
push
sub
and
sbb
push
adc
das
or
sub
imul
test
dec
jo
dec
jo
movsl
or
and
subl
jmp
sbb
xchg
js
js
inc
mov
add
mov
iret
mov
add
daa
push
push
andb
add
ljmp
pop
out
fucomi
jb
and
mov
adc
sbb
xchg
frstpm(287
mov
add
push
gs
lods
imul
mov
mov
or
lods
inc
jae
xor
rorl
or
adc
cmpsb
jae
test
xor
fs
mov
popa
scas
mov
push
inc
cmc
and
loope
xor
lahf
inc
xchg
cmc
sub
insb
xor
xor
sub
call
mov
sbb
loopne
fnsave
or
jbe
sub
pop
jo,pn
and
and
in
mov
and
xchg
dec
jo
add
xlat
sbb
pop
adc
cmp
add
cmpsl
and
xor
jecxz
adc
mov
pop
push
adcl
mov
xorb
mov
xorl
test
and
cmp
pop
mov
adcl
insb
xchg
lahf
sahf
in
and
aam
or
ds
or
xlat
add
call
sub
adc
fistpl
pop
jo
push
push
loopne
fs
pop
clc
or
inc
and
adc
dec
inc
pop
and
push
or
fsub
add
sbb
fucomp
or
jo
out
inc
insl
cmp
push
xor
or
push
nop
js
daa
cmp
or
sub
movsb
int
adc
jno
flds
movl
add
test
test
jmp
pop
sarl
jae
xor
shlb
cmp
lods
xor
sbbb
lcall
pop
adc
mov
ja
pop
out
imul
ret
push
pop
add
mov
or
rol
dec
shll
push
scas
add
add
arpl
adc
jne
xchg
enter
fdivs
rcrb
xor
push
and
lea
xor
mov
retw
adc
mov
fdivrl
or
js
mov
xchg
mov
sub
arpl
aaa
cmp
arpl
sbb
aam
push
sbb
and
xor
pop
push
dec
int3
test
stos
test
arpl
adc
out
sub
bnd
rcrb
addb
sub
gs
xchg
shlb
xchg
and
lcall
push
mov
mov
addl
add
mov
lds
cmp
sbb
incl
jnp
adc
jge
out
xchg
fdivs
sub
movsb
cmp
movsb
sbb
and
rol
add
insb
mov
xor
push
icebp
and
insb
dec
sbb
or
enter
xchg
and
adc
scas
or
shlb
int
mov
cs
fwait
mov
sbb
cmp
outsb
add
sub
jno
stos
adc
adc
xchg
or
or
test
cmpb
je
lret
jno
add
inc
bound
xchg
xchg
xchg
inc
test
mov
mov
add
and
dec
sub
test
pop
adc
ss
iret
sti
or
or
or
ret
xchg
loop
sar
add
sub
inc
mov
lcall
insl
add
sub
lea
icebp
icebp
mov
mov
loop
cld
mov
push
push
les
cmp
jns
jmp
inc
push
stos
mov
pop
pop
xchg
add
cmpsb
lea
add
in
je
pushw
je
or
mov
xor
hlt
or
push
xor
ljmp
jl
jo
ljmp
cmp
mov
push
scas
add
popa
push
and
roll
push
cmp
pop
dec
stos
inc
mov
fdiv
cmp
testb
orb
xchg
and
divl
fwait
inc
inc
imul
mov
sti
iret
repnz
sub
rorb
das
fbld
jl
pop
inc
loopne
outsl
sbb
xor
or
fwait
and
push
lret
aas
sbb
mov
cmp
jno
adc
lret
div
rol
adc
adc
push
dec
add
mov
sub
loopne
mov
and
ss
pop
hlt
call
js
repz
and
clc
mov
xchg
adc
push
mov
sub
xchg
sbb
mov
adc
xchg
and
dec
inc
mov
outsl
push
dec
rcrl
aaa
mov
nop
call
xlat
mov
fnstenv
and
sub
adc
dec
sub
inc
sub
jl
xor
ljmp
mov
test
and
and
pop
jp
jns
mov
inc
mov
pop
fsubl
shl
ja
xor
or
hlt
push
xor
dec
dec
aas
sub
lret
sbb
repz
mov
jno
testb
or
cltd
jg
les
sbb
mov
fstps
popa
xor
lods
popa
and
inc
leave
mov
mov
sbbl
movsb
and
pop
push
iret
add
dec
adc
and
iret
or
xorb
test
mov
xor
ds
mov
mov
lcall
xor
sbb
shrb
gs
repz
mov
cs
dec
call
inc
inc
or
mov
cmc
mov
cwtl
aam
push
push
jae
jle
jge
rclb
mov
rol
adc
mov
and
xor
in
daa
in
xchg
sbb
jle
fimull
jns
outsb
pop
cmp
cmp
notl
and
or
xchg
mov
ret
xor
lret
push
sub
loope
cmc
pop
je
test
and
pop
rcrb
adc
adc
inc
pop
sbb
lahf
inc
push
mov
push
xchg
mov
cmpsb
das
popf
bound
test
mov
inc
xor
cmc
xor
jecxz
inc
lock
rorl
lods
mov
sbb
mov
sub
dec
push
mov
xchg
adc
jno
mov
cmp
xor
sub
ljmp
mov
sub
popa
cmp
and
cmp
rcrl
in
add
nop
xor
cmovno
cmc
rcl
sub
jp
xchg
shll
cmp
push
jns
xchg
ret
scas
aad
test
push
mov
stos
add
jg
pushl
cmpsl
gs
or
cmc
and
ret
lahf
sub
dec
cmp
pop
cmpsb
sbb
xchg
jle
xchg
loop
mov
shrl
test
mov
sbb
out
lock
or
push
cld
jnp
shrb
fwait
roll
je
jge
sbb
orb
out
mov
cs
fldl
cmp
sub
loope
sub
lods
call
push
sbb
mov
mov
mov
sbb
imul
sahf
adc
addb
add
xchg
leave
cmc
andb
mov
shll
dec
inc
into
aad
xor
and
xchg
aaa
icebp
movsb
pop
pop
inc
decl
pop
stos
jmp
icebp
adcb
out
inc
pusha
leave
in
sbb
jo
mov
jecxz
sub
movl
adc
jb
adc
out
int
addb
push
iret
sarb
lcall
or
sbb
and
inc
sbb
mov
adc
sbbl
lret
add
repz
add
ja
daa
and
add
lcall
pop
pop
loopew
or
xchg
sbb
and
dec
lea
popf
fwait
add
outsl
and
outsb
aam
imul
add
mov
sub
lret
movsl
add
mov
sub
add
push
jg
xor
or
sub
or
jo
in
jecxz
and
push
mov
inc
cmp
fs
lods
lret
divl
add
xchg
outsl
sti
ret
cmpb
ret
jecxz
add
or
rolb
rolb
xchg
jo
adcb
insb
insb
addl
ret
add
sti
loop
mov
xor
pop
sub
sbb
xor
xor
fst
dec
add
test
add
sbb
aad
mov
push
push
sub
iret
add
loopne
adc
fstps
sub
cmc
sub
stc
popa
xchg
lea
add
bound
lret
add
addr16
adc
out
mov
xchg
jns
incl
pop
xchg
lea
mov
xlat
insb
sbb
sbb
add
fs
lock
inc
add
subl
add
xor
pop
add
iret
jno
call
jb
fstpl
add
cmp
mov
xchg
insl
arpl
or
ds
pop
dec
cmp
xchg
mov
js
xchg
sbbb
xchg
je
fwait
cltd
push
mov
fmuls
js
sbbb
subb
popa
or
sub
xchg
mov
jo
repnz
mov
xchg
pop
add
in
add
adc
mov
add
je
adcb
and
scas
mov
arpl
dec
mov
pop
dec
sti
push
mov
mov
push
push
adc
push
dec
ret
ja
cmp
ljmp
jo
pop
addr16
and
cwtl
mov
jb
and
mov
push
gs
and
push
mov
loopne
sbb
xor
fimull
test
bound
add
cwtl
adc
mov
xor
lret
aaa
mov
sub
mov
xor
cwtl
add
mov
scas
mov
cmp
pop
add
stos
in
loopne
or
lea
lods
push
pop
sub
jae
jg
dec
or
scas
jns
add
push
inc
test
xor
cs
dec
faddl
or
mov
es
daa
test
ljmp
push
les
ljmp
mov
add
inc
dec
xchg
enter
sbb
jp
sbb
adc
fdivl
mov
mov
scas
add
imul
addr16
add
sub
add
out
push
das
xor
add
push
arpl
out
test
add
cs
lock
ss
sar
sub
mull
pusha
hlt
and
in
pop
or
push
or
or
scas
hlt
rolb
dec
inc
push
push
in
jns
subb
jne
adc
sbb
incl
adc
int
add
int3
pusha
cmp
ljmp
jo
addr16
add
adc
lahf
in
push
adc
sub
cmp
push
or
pop
add
push
lods
jae
adc
xchg
lret
adc
cmp
push
popf
and
xchg
pop
xchg
ffreep
dec
repnz
in
mov
repnz
xor
insl
and
sub
je
pop
adc
add
mov
adc
push
adc
les
xchg
or
push
sbb
lods
sub
add
sahf
push
push
movb
mov
adc
pop
andl
mov
and
addb
jge
lock
pop
js
jge
sbb
sbb
pop
mov
cmp
call
jbe
xchg
stos
mov
arpl
pop
movl
push
sub
and
pop
add
loope
punpcklwd
sbb
add
enter
repz
inc
pusha
inc
or
or
dec
mov
rcrb
lahf
add
bound
cmp
aad
cmp
loopne
push
lock
imul
add
imul
stos
out
inc
sub
mov
cld
jecxz
push
fadds
add
inc
arpl
add
xchg
mov
dec
shrb
or
pop
or
pop
add
and
fidivrs
add
imul
push
push
or
fsubrs
cmp
repnz
add
mov
add
shll
subb
dec
jne
pop
jl
xchg
fstps
mov
lea
into
pop
arpl
adc
clc
push
adcb
fucomi
loopne
pushf
or
sbb
cmp
lahf
sub
sub
and
mov
loopne
rclb
insl
mov
bound
adc
popa
pop
and
lock
sub
inc
ret
and
xor
cmp
add
cmpsb
invd
cmpsl
ret
add
andb
push
int3
vmovsd
adc
or
arpl
pop
lods
daa
add
ret
sbb
pop
roll
add
mov
cmp
rclb
lods
add
mov
jecxz
test
xor
cmp
loope
loopne
cltd
and
hlt
into
push
adc
mov
add
arpl
add
jae
dec
mov
int3
push
lock
xor
ja
jmp
mov
lock
push
jo
dec
nop
std
add
shrb
dec
lea
push
and
lret
push
jb
mov
mov
pop
adc
cld
mov
fisubl
call
sahf
out
or
pop
movsb
jne
nop
xor
adc
mov
push
ret
mov
call
sbb
add
mov
js
and
mov
push
in
jb
fadds
das
sub
add
cmpsb
jecxz
lds
lock
cmp
add
adc
add
xor
add
and
cmp
into
arpl
and
xlat
inc
fiadds
frstor
jnp
inc
fstl
popf
flds
popf
sub
jo
xor
and
lcall
add
add
pop
dec
dec
sbb
pusha
xchg
add
nop
or
fsubs
outsl
sub
scas
dec
or
inc
fs
jnp
jg
cmp
xchg
mov
cli
xlat
jne
pusha
add
mov
imul
and
push
sbb
cwtl
adc
adc
dec
cmp
push
sarb
mov
lcall
xor
or
add
and
das
or
movsl
and
insb
js
adc
xor
outsl
das
lock
push
cmp
push
jb
cmpsb
mov
pop
lods
les
iret
xor
mov
es
iret
dec
push
test
mov
sahf
dec
jo
dec
mov
add
add
push
loope
mov
insl
inc
shll
into
hlt
je
push
fisubl
daa
sub
push
or
dec
mov
imul
mov
lds
dec
ja
sub
xorl
dec
sbb
or
adc
imul
push
cmp
cmp
xchg
rorb
inc
add
jmp
push
hlt
loope
imul
notl
pop
aaa
fiaddl
add
jno
pusha
aad
lods
aaa
pop
movsb
aaa
cs
mov
add
iret
cmpb
sub
and
lcall
out
gs
arpl
add
iret
jo
adc
fisttps
lahf
adcb
fcmovnu
addb
popa
rcll
popa
add
sbb
popa
out
in
aad
add
pop
bswap
inc
jbe
movsb
flds
xor
pop
pusha
mov
add
sub
insb
push
add
js
mov
mov
cmp
jno
arpl
or
xor
adc
sub
add
mov
sub
andl
adc
flds
es
xchg
lock
lods
ret
test
clc
mov
divl
movsl
andl
shll
mov
int
pop
xchg
add
leave
loop
scas
xor
test
add
pop
pop
push
mov
test
add
push
mov
pop
mov
pop
mov
orl
adc
mov
jmp
inc
mov
rcr
add
imul
std
mov
cs
push
lods
cmp
or
or
lea
sbb
test
mov
or
cmp
pop
addr16
and
cli
sub
cmovno
mov
and
in
pop
popf
cmp
rol
xchg
arpl
cmpsb
xor
xlat
imul
or
jmp
outsl
insb
jo
jmp
imul
popa
xchg
and
pop
or
sbb
push
pop
gs
outsb
repz
and
arpl
add
pop
push
xor
cmp
ds
arpl
add
mov
clc
push
jno
pop
out
xchg
bnd
dec
divb
push
addr16
ret
jnp
icebp
pop
push
xchg
jp
fcoml
ret
xlat
or
in
dec
shll
mov
shll
push
popl
sub
jb
xor
ja
inc
testl
rol
push
jae
adc
je
xorb
mov
adc
sbb
sbb
cmp
pop
jl
ds
nop
mov
pop
imul
jecxz
add
mov
pop
arpl
notb
xor
pop
mov
or
jbe
out
cs
mov
jmp
push
les
rorb
in
dec
lock
cmpsb
xchg
insl
loope
out
mov
arpl
or
addr16
inc
mov
fwait
mov
ja
mov
add
sbbl
sti
mov
xor
lods
pop
loopne
xchg
aad
imul
inc
negb
lods
daa
pusha
movsl
mov
arpl
add
xchg
loope
movsb
add
xchg
ljmp
aam
inc
adc
ret
or
or
or
lods
popa
pop
push
jae
bound
push
pop
pusha
cld
vpsubw
adc
pop
add
add
mov
enter
lahf
inc
loop
inc
stc
sbb
pop
arpl
lods
jo
inc
jg
mov
pop
jle
rorb
jle
cs
sti
xor
dec
and
and
pop
enter
add
push
xor
stc
jae
punpckhwd
cmc
add
cmc
loope
sbb
xchg
fnstcw
jmp
push
inc
aas
sbb
das
sub
mov
pop
pop
in
xlat
iret
dec
xor
inc
imul
pop
push
xchg
jo
push
loope
add
out
dec
shll
or
insl
call
adc
pop
cs
mov
aas
insl
insl
mov
mov
or
sub
test
cmc
dec
or
and
pop
xchg
adc
pusha
iret
testl
or
lret
inc
sub
hlt
mov
add
lahf
subl
adc
in
dec
ret
xchg
xor
movsl
or
jp
jns
mov
gs
sti
lods
mov
aas
je
pusha
xlat
ljmp
adc
sub
jno
xor
pop
or
enter
jno
sti
aas
icebp
rolb
jo
mov
ja
ret
and
adc
sub
sahf
in
push
sbb
and
call
adc
popa
add
sti
inc
mov
out
cs
je
sti
scas
dec
lret
lds
dec
ror
jnp
fwait
push
mov
gs
xchg
mov
lret
adc
xor
dec
pop
cmp
pusha
out
ja
call
gs
push
adc
cs
inc
inc
pop
sub
movsb
or
ja
mov
push
and
cmp
sub
iret
lods
das
pop
and
dec
and
hlt
lods
rorl
inc
cld
icebp
and
or
cmp
mov
cmp
clc
movsb
xor
pop
dec
add
insb
sbb
pop
and
pop
mov
or
or
cmc
xor
inc
sahf
dec
ret
adc
scas
add
adc
mov
lods
rclb
add
xchg
push
push
or
dec
mov
xchg
icebp
test
ret
add
pop
push
sub
frstor
pop
out
mov
lods
das
jbe
xor
xor
js
cs
negl
mov
ret
shl
and
push
stos
sub
adc
xchg
shll
or
ret
fs
insl
loopne
fwait
or
and
or
mov
jmp
lods
mov
mov
xchg
push
inc
fstpt
fsubs
xchg
sbb
loope
cmp
in
mov
or
sub
lods
and
adc
sub
ret
mov
add
pop
movsb
xchg
addr16
cs
or
fcmovnb
dec
fists
pop
cmp
fld
xor
int3
lahf
xor
sub
popa
pusha
push
cmp
mov
and
jno
xor
xor
sahf
mov
jg
xor
les
dec
inc
sub
and
mov
xchg
nop
xor
add
sbb
pop
arpl
cmp
add
bound
mov
mov
and
xchg
or
aam
add
pusha
lret
movsb
mov
mov
mov
out
xchg
xchg
dec
rolb
iret
int3
jmp
ds
pop
test
sbb
push
cmp
lcall
sbb
sub
sbb
sbb
lock
pop
movsb
and
mov
int3
jmp
push
dec
std
ds
call
xchg
add
mov
push
cmp
in
lods
std
cmp
mov
test
adc
cwtl
repz
jno
push
sub
adc
push
add
lock
jno
sub
push
and
andb
mov
push
incl
shlb
test
push
cmc
arpl
test
jmp
sub
sub
pop
adc
mov
stc
in
mov
xchg
or
and
push
or
icebp
cltd
inc
sbb
mov
dec
dec
ss
iret
jnp
adc
xchg
sbb
sarb
push
imul
add
js
xchg
pop
fnstcw
sbb
and
mov
loopne
jnp
ret
adc
pop
add
pop
in
xorb
jge
jecxz
ret
lret
clc
sbb
test
push
mov
xchg
lock
enter
aad
mov
push
inc
lock
lods
rorb
jge
test
aas
into
inc
movsb
mov
ret
pop
fldcw
jno
movsl
add
aad
or
data16
xchg
sahf
cmpsb
movsb
inc
rcll
ja
jo
imul
mov
xlat
cmpsl
sub
ret
out
and
dec
jle
stos
xchg
lods
add
add
cli
xlat
push
je
pusha
add
dec
out
sbb
mov
push
push
test
fildl
je
pop
rcrl
add
dec
add
mov
popf
xchg
filds
jo
aam
and
and
and
mov
loopew
xor
bound
bndldx
mov
pusha
xchg
push
notl
andl
rolb
out
mov
mov
shrl
pop
outsl
xchg
popf
mov
mov
cmp
push
scas
cmp
xchg
adc
cltd
or
push
sbb
or
or
ret
xchg
int3
ret
cmc
push
pusha
cmp
add
sub
inc
ljmp
add
inc
icebp
or
jl
test
mov
test
and
lcall
nop
cmp
imul
xor
in
stc
and
jb
fildll
out
or
sbb
add
dec
add
xchg
pop
sbb
sub
int3
adc
mov
nop
rcrb
dec
sub
rorl
cmp
fiaddl
rorb
add
repnz
enter
in
fs
push
mov
xor
cmpsb
in
je
sub
popa
dec
lret
push
xchg
jno
mov
dec
xlat
imul
xchg
mov
mov
xchg
ja
xchg
sarb
push
jae
jnp
push
test
pop
xchg
mov
cmp
xor
in
jecxz
jae
inc
mov
mov
mov
insb
push
icebp
add
imul
imul
sub
dec
push
sub
jns
add
adc
addl
lahf
nop
push
sahf
outsb
mov
leave
cvtps2pd
and
xor
sub
sub
sbb
sub
lret
and
inc
cmp
fstl
test
adc
or
mov
hlt
subl
stos
sbb
add
pop
jnp
mov
sbb
adc
repz
outsl
or
sti
mov
add
cmp
sub
cs
sub
mov
push
mov
cli
pop
or
push
into
add
ss
mov
mov
mov
dec
dec
sub
and
sub
mov
lods
daa
sti
and
loopne
fwait
adc
mov
mov
sbb
sub
jbe
rcll
call
xor
clc
hlt
jno
int
adc
xchg
and
nop
rcl
stos
mov
sub
nop
xor
jle
xchg
loop
push
cli
jnp
inc
movsb
testb
rcrl
xchg
data16
sub
lret
movsl
insb
inc
push
mov
out
out
push
imul
imul
sarl
iret
inc
enter
out
jg
adc
pop
aaa
sbb
out
aam
lret
xchg
xor
mov
and
xor
jle
out
adc
add
xchg
jl
stos
inc
mov
ds
xor
cmp
push
sub
adc
cltd
popa
icebp
mov
test
add
and
pusha
pop
fistpll
loop
scas
xchg
sbb
pushf
ret
ss
inc
jecxz
in
dec
mov
jecxz
xchg
ja
fdivl
dec
sahf
or
lahf
mov
and
pop
call
push
xlat
lea
loope
js
dec
cmp
jbe
ss
pop
fstps
or
es
aaa
lahf
jge
call
addl
mov
ljmp
fistpl
cmp
xchg
and
pop
cmp
scas
pmovmskb
and
inc
lds
int
or
and
pop
pusha
and
mov
jno
and
frstor
pop
into
rclb
pop
push
ss
xchg
lock
cmp
fwait
push
mov
adc
test
jb
mov
push
push
and
stos
stc
xchg
inc
lods
ret
fistpl
adc
pop
pop
sbb
adc
fisubrl
fmuls
and
and
add
add
ficoms
outsl
push
add
add
rol
mov
movsb
inc
lea
outsl
cwtl
mov
push
sub
push
cld
icebp
pop
xchg
stc
fwait
push
add
mov
mov
mov
add
aam
lods
adc
inc
mov
pop
imul
insb
mov
xchg
test
movsb
push
dec
sti
imul
inc
sbb
xor
inc
cmpsl
jnp
aaa
xchg
xchg
adc
mov
sbb
adc
addr16
push
int
repnz
mov
mov
add
mov
and
rorb
push
dec
or
lcall
pusha
pusha
pop
xor
movsb
or
xor
loope
push
add
rolb
icebp
and
and
daa
add
inc
and
addr16
pushf
and
aad
lods
pop
cmp
adc
enter
int
icebp
xor
adc
mov
sub
inc
cmp
ret
stc
dec
adc
stos
or
xchg
or
xchg
adc
sbb
rorb
pusha
push
cmp
mov
mov
nop
sbb
push
outsl
mov
test
outsl
orl
scas
insl
jl
dec
or
and
outsb
es
mov
pop
rcrb
fisubrs
sub
ror
flds
sbb
sbb
sub
jb
or
dec
bound
fsts
adc
xchg
jne
push
adc
add
add
movsb
jp
xorl
gs
add
xchg
cld
sbbl
sar
push
add
xor
cmp
jmp
xchg
notl
test
pop
dec
sub
xor
int3
int
add
fdivs
inc
mov
mov
lock
mov
inc
sbb
xor
popl
les
ljmp
xor
jmp
push
xor
inc
in
test
out
addl
inc
cltd
les
fmull
adc
inc
scas
adc
lret
or
mov
fstl
pop
xor
mov
add
cltd
in
sti
mov
movb
flds
xchg
add
adc
pop
fidivs
add
jecxz
cwtl
orb
dec
dec
adc
add
push
mov
es
sub
adc
add
mov
sarb
mov
jl
popa
push
or
adc
jle
push
sbb
rcll
jo
aaa
or
jo
les
or
pop
aam
dec
dec
sbb
and
push
sbb
xchg
push
sbb
invd
or
add
test
push
fadds
jecxz
scas
insl
mov
stos
xorb
mov
sbb
cmp
negb
jg
ret
ss
je
rcrl
xchg
aas
adc
add
hlt
push
rcrb
movsl
xor
iret
jge
xorl
aaa
lods
jmp
or
xor
push
outsl
lahf
jae
sbb
imul
mov
sbb
stos
imul
ret
push
aas
lock
inc
xor
lods
fwait
les
mov
mov
orl
icebp
mov
add
inc
je
add
lahf
push
lock
daa
cmp
aas
pop
push
mov
sahf
ror
jae
or
int3
xlat
cwtl
mov
loop
xor
jb
inc
adc
mov
dec
movsb
and
dec
lock
imul
cmpsl
popf
jmp
lahf
or
inc
js
subl
rcr
mov
lret
inc
and
add
pop
pop
in
ljmp
sub
xchg
push
add
mov
incl
add
add
ljmp
xor
ret
or
pop
cmp
push
mov
mov
and
sbb
dec
sub
push
inc
pop
jno
int3
adc
in
mov
mov
pop
dec
add
or
scas
and
and
mov
loopne
jno
jmp
mov
andl
push
push
jbe
pop
subl
dec
jp
fldl
inc
loopne
js
adc
adc
xchg
das
js
inc
rorb
stos
mov
gs
jbe
cmp
adc
lds
es
and
add
out
pcmpgtd
xor
sahf
xor
add
out
mov
or
fldl
add
das
loope
adc
fbld
or
pop
and
add
stos
push
ret
lods
jne
and
push
loopne
ds
in
inc
inc
jmp
imul
add
mov
cmp
push
and
push
sbb
andl
add
push
je
loop
rcrb
sahf
and
push
pop
add
scas
popa
mov
adc
sub
gs
sub
pop
adcb
test
push
push
int3
push
mov
jge
shrb
fwait
ja
pop
and
lret
xchg
xchg
add
fld
mov
js
and
loope
popfw
push
mov
ja
enter
test
andps
adc
dec
insl
add
dec
mov
andb
mov
mov
adc
or
jno
fadds
sahf
or
aaa
cmp
loope
add
nop
inc
jae
sti
je
pop
pop
insl
pop
lret
cmp
inc
and
jo
neg
add
xchg
adc
rclb
jns
fdiv
adc
xchg
and
mov
push
mov
jne
push
push
das
mov
and
nop
jno
dec
rolb
out
add
aaa
and
sbb
lahf
es
sub
mov
xchg
inc
adc
pop
adc
and
daa
stos
js
aaa
adc
mov
inc
cs
jo
and
mov
loope
cs
test
jno
cmp
insb
loop
inc
add
adc
test
pusha
adc
add
cli
or
cld
loopne
lods
inc
cmp
in
and
mov
dec
inc
cmpsl
xchg
jmp
rcrl
mov
inc
adc
std
loopne
cmp
testb
or
lret
stc
js
jge
jo
cmpl
cmp
pop
mov
inc
aaa
inc
sbb
cmp
push
lods
xor
rcr
or
jno
dec
mov
dec
out
sub
out
adc
fldcw
jno
add
js
jg
xor
arpl
insl
sub
fcoms
push
dec
add
xchg
sbb
push
cmc
add
leave
pop
push
mov
mov
dec
js
mov
xchg
jb
dec
test
orb
add
xchg
jno
push
stos
test
mov
and
out
mov
inc
sub
adc
outsb
imul
dec
insb
mov
lods
sub
mov
dec
dec
fnstenv
in
xor
sub
ficompl
loopne
pop
and
add
pop
scas
pop
xchg
out
mov
xor
xor
jl
rorl
adc
push
out
jge
push
scas
imulw
sbb
jb
js
jmp
sbb
sbb
xchg
clc
jno
add
or
and
das
pop
jp
sbb
or
shl
inc
or
inc
mov
add
or
jbe
xlat
rclb
pop
dec
in
popa
insb
imul
enter
es
add
popl
xor
test
rcrl
fdivrl
or
pop
mov
mov
or
push
fisttps
and
pop
out
mov
adc
xchg
push
cmpsb
add
in
dec
dec
sysexit
scas
inc
outsb
jle
imul
push
adc
jo
iret
add
push
fwait
push
push
fdivrl
mov
push
add
mov
or
fld
popa
or
movsl
and
mov
ret
andl
jmp
nop
add
dec
pop
test
mov
mov
lods
mov
in
loop
xchg
jne
icebp
jg
loop
jecxz
dec
mov
mov
mov
cmpsb
fldl
fsubl
fmuls
sub
sub
out
mov
mov
jg
sub
adc
sbbb
mov
or
jne
mov
add
xor
xchg
and
pop
ror
dec
sbb
lds
into
stos
mov
sbb
push
mov
add
cmp
inc
sub
add
lret
sub
fcomip
loope
jmp
pop
jae
push
test
adc
xor
pop
and
mov
fldt
jp
shrb
rorb
ror
add
les
inc
scas
loop
xchg
testl
jle
mov
sbb
xchg
push
pushf
jge
arpl
sbb
sti
jb
jnp
in
pop
scas
das
je
and
fwait
inc
jae
fbld
push
add
mov
out
pop
sub
push
cmp
xchg
xor
rcll
add
test
out
mov
pop
cmp
shl
inc
mov
cmp
out
loopne
test
jns
mov
or
aam
push
sbb
fs
cs
dec
aad
aam
pop
aaa
mov
sti
xchg
test
add
jecxz
loopne
inc
xor
mov
jle
insl
gs
xor
sbb
cmp
add
pop
xor
scas
add
nop
xorl
std
inc
or
dec
and
nop
rorb
loop
ret
jb
movsb
and
pop
jge
and
sahf
fistpl
cmp
fisttpll
mov
xor
push
push
ss
sbb
push
outsb
inc
and
mulb
push
xor
bound
popa
ja
stos
int3
and
sub
mov
jo
push
xchg
popa
jo
inc
sub
gs
jle
adc
out
inc
movsb
add
pop
adc
shrb
adc
add
rcrl
hlt
lahf
fsts
les
loope
test
adc
push
cmp
mull
jno
add
hlt
pop
lret
mov
faddl
test
push
jo
rcll
jl
sub
sti
add
lods
pop
mov
push
jbe
shll
jge
idivb
dec
adc
lcall
cs
add
mov
xchg
scas
mov
cmp
fcompl
mov
orb
dec
jo
loopne
cs
add
outsl
lock
stos
bnd
or
movsb
mov
or
iret
adcb
bound
sub
jp
andl
mov
and
gs
add
add
ret
cmpsl
rorl
mov
xor
cld
and
xlat
sbb
and
sbbb
aaa
fildl
lock
xor
xchg
mov
inc
push
inc
dec
jno
mov
add
imulb
and
or
add
bound
xchg
mov
push
cmp
xor
sahf
lods
adc
and
jo
jns
test
sbb
add
and
loope
mov
ret
dec
and
push
push
or
das
mov
dec
inc
and
cmovno
shll
or
nop
sbb
movsb
outsb
mov
jo
push
sub
sub
bound
sub
inc
rorl
mov
in
xor
jl
fcmovnu
mov
es
popf
adc
inc
sti
ror
dec
add
jle
dec
mov
push
lock
push
mov
push
sub
mov
push
mov
rcll
adc
jb
xchg
push
sub
add
pusha
test
std
stos
and
add
push
add
push
xchg
call
jp
and
sub
sahf
pop
fdivrs
xor
ljmp
dec
xor
pop
push
fcmovbe
rol
arpl
mov
loop
cmp
cli
xchg
jno
or
into
pop
cmpsb
add
filds
adc
ljmp
test
hlt
adc
add
inc
cmp
xchg
stos
xchg
insb
movsb
sbb
or
loopne
push
in
mov
mov
out
fsubr
mov
clc
int3
jns
addb
xor
jp
inc
dec
lret
dec
aam
std
xor
movsb
aad
jp
rorb
dec
xchg
mov
pop
mov
xor
sub
adc
pop
sbb
push
fwait
cmp
adc
adc
fcoms
es
jmp
into
pop
sbb
out
js
and
leave
lock
cmpsb
call
subl
scas
rep
add
test
lods
dec
pop
xor
jne
inc
xor
call
push
ss
aas
adc
push
test
sbb
pcmpgtb
loope
rol
iret
inc
pop
shl
orb
dec
arpl
lods
pand
iretw
incl
lds
jge
add
lods
mov
inc
cmp
and
repz
xchg
xorl
andl
ret
or
mov
lahf
jno
push
fisttpl
xchg
loope
sbb
negl
xchg
mov
jno
out
testb
test
add
scas
out
lret
shr
popa
fldenv
lret
scas
std
addl
int
add
push
cmp
sti
add
test
jmp
inc
pop
inc
sub
or
inc
jnp
cmpsb
fldt
mov
dec
cltd
ljmp
cmp
jmp
clc
push
push
dec
sti
stos
adc
insl
cmp
data16
add
ret
jp
sti
xchg
mov
lea
xchg
stos
das
test
mov
push
and
test
test
mov
dec
push
mov
mov
js
dec
loope
rorl
add
push
dec
stos
repz
adc
sbb
dec
js
mov
out
and
inc
push
push
addr16
cmp
lret
ret
ret
jno
or
iret
xor
addr16
inc
jns
sti
inc
jmp
cmp
std
jmp
shlb
imull
das
xchg
push
or
fisttpll
mov
sbb
xchg
mov
xor
rorl
das
adc
sbb
mov
mov
mov
enter
add
dec
pop
jecxz
roll
lahf
cs
sub
popa
out
and
pop
or
arpl
pop
adc
mov
adc
into
lret
xor
mov
sbb
imul
in
xlat
mov
or
cwtl
or
pop
and
xor
adc
or
lret
and
bnd
loope
add
mov
pop
pushf
fnsave
xchg
mov
dec
and
cmpsl
dec
sbb
sbb
xchg
xchg
leave
movl
push
test
or
ja
mov
mov
pop
push
add
mov
test
lock
rcll
adc
imul
cs
es
in
jle
fists
dec
jbe
pop
iret
pop
xchg
bound
pop
pop
cmp
lret
jnp
sub
adc
ret
addl
mov
and
sub
lret
rcrb
adc
dec
push
popf
imul
enter
outsl
pushf
xchg
or
clts
xchg
sbb
jns
xor
xchg
xchg
jnp
jo
and
or
pusha
or
push
nopl
mov
sub
hlt
jg
les
jae
movsb
test
inc
insl
or
jl
mov
adc
mov
adc
jno
adc
lret
inc
dec
movsl
xchg
add
popa
add
mov
icebp
jnp
pop
push
or
stc
add
hlt
sbb
pop
pop
dec
mov
sub
sub
cmp
in
cmp
mov
xchg
out
sbb
sub
jo
jle
and
xchg
mov
outsb
insb
popa
jne
mov
or
icebp
jne
jo
jne
ja
adc
and
mov
dec
daa
out
pop
addr16
add
dec
inc
dec
mov
fldl
fisubrs
pusha
inc
stc
repnz
bound
rcrl
popa
addr16
nop
pop
test
cltd
outsl
shr
ret
add
loope
test
inc
lret
mov
sub
roll
jmp
cmp
adc
mov
and
out
mov
sti
cmp
adc
push
sub
pop
imul
mov
push
jle
push
add
push
push
dec
sub
pop
fiaddl
sub
shll
dec
dec
push
and
popa
mov
xor
sub
stos
sub
faddl
sub
adc
dec
mov
push
inc
movsb
lret
iret
mov
or
ret
sub
int3
jl
out
mov
xchg
mov
push
ss
mov
popf
sub
in
dec
fiaddl
notl
iret
jl
loope
add
into
mov
xchg
mov
or
sub
pop
sbb
sub
push
and
gs
sbb
cmpsl
cmpsl
add
rorb
push
cmpsl
push
xchg
popf
xchg
frstor
addr16
sbb
rcll
add
popa
sbb
inc
mov
sbb
out
es
pop
xchg
xor
lret
je
int
lcall
push
idiv
mov
mov
lods
inc
testb
fnstenv
jge
xor
xchg
inc
jl
xchg
lret
cmp
dec
in
cmp
inc
jl
mov
and
adc
cmp
pop
dec
pusha
inc
push
jno
daa
lods
adc
push
mov
jecxz
mov
mov
minps
jo
xor
cld
mov
filds
ss
pop
lods
adc
mov
cmp
sbb
movsb
and
pop
and
cmp
jbe
pop
dec
es
std
xchg
dec
popa
inc
jecxz
push
xor
pop
notl
dec
dec
sarl
cmp
jecxz
inc
lea
or
clc
and
add
out
inc
xor
stc
popf
and
cmp
pop
mov
movsl
int3
xchg
mov
adc
mov
mov
jae
outsl
pop
or
sbb
xchg
lcall
xchg
or
shr
mov
popa
dec
in
xchg
es
cli
push
and
and
lret
sbb
mov
sub
insb
add
lock
lea
pop
add
mov
int
pop
mov
xchg
adcl
outsl
lret
or
or
sbb
jns
lods
adc
or
adc
aaa
xor
nop
pop
int
and
and
add
or
pushf
inc
je
lods
ja
adc
mov
lahf
sbb
mov
mov
adc
mov
add
mov
inc
and
test
lea
xor
fwait
adc
mov
sbbl
sbb
mov
xchg
sub
xchg
inc
sub
adc
addl
push
push
int3
das
xchg
or
jle
jb
pushf
xor
mov
ss
movsbl
int3
iret
and
and
xor
or
lock
loope
or
inc
mov
xor
xchg
loope
daa
daa
mov
or
aaa
dec
das
clc
fcmovbe
fdivs
mov
stos
mov
fcomps
or
xlat
xor
jmp
inc
ret
sbb
sub
test
pop
insl
pop
orb
adc
jge
popa
or
jp
mov
add
emms
add
add
cwtl
mov
push
mov
add
loopne
lock
inc
int3
dec
sbb
das
dec
cmp
xchg
dec
or
mov
aas
push
dec
add
ljmp
jne
or
xlat
insl
clc
leave
out
xlat
movsb
mov
js
adc
and
pop
addb
or
ja
inc
pop
imul
cmp
inc
lcall
mov
or
mov
sub
add
je
flds
cltd
les
lods
push
or
rolb
push
cmp
cmp
iret
fsubl
bound
test
lods
insl
scas
cmp
je
stc
add
dec
jp
popa
mov
cmpsl
lea
and
and
cmp
test
inc
push
ljmp
ret
aad
dec
das
push
or
push
add
pop
mov
xchg
ljmp
xchg
dec
and
jecxz
js
jno
or
stos
pop
imul
jne
mov
or
str
jnp
xlat
inc
arpl
and
inc
or
aad
mov
enter
in
xchg
dec
sti
sub
push
add
and
outsl
mov
mov
sbb
fwait
xor
je
mov
mov
cwtl
insl
cmp
and
hlt
inc
dec
xchg
mov
imul
iret
xchg
ljmp
xchg
cmovnp
xor
xor
movsl
push
inc
push
sbb
mov
mov
mov
test
pop
mov
inc
xor
and
cmpsb
xchg
out
mov
push
or
dec
stc
das
lods
loope
dec
inc
subl
testl
add
xchg
scas
add
xor
mov
les
push
xchg
add
and
sahf
sub
or
add
sar
xor
add
mov
lods
adc
inc
cmp
pop
test
in
fistps
sahf
nop
in
xchg
lea
adc
fadds
jo,pn
outsb
jge
inc
test
dec
aaa
and
mov
jl
or
scas
mov
push
outsl
imul
mov
xlat
jge
popa
cmc
dec
inc
iret
inc
scas
push
adc
mov
ret
mov
pop
and
jmp
pop
inc
cmp
sahf
or
in
stc
mov
mov
cmpsb
enter
push
in
jb
pushf
icebp
rolb
pop
leave
cmp
sbb
push
scas
xor
pop
iret
pop
add
mov
add
adc
jb
lahf
out
pop
js
and
pop
cs
jne
fidivrl
push
int
and
jbe
fsubl
inc
pop
jge
das
iret
pop
jg
xchg
inc
sbb
mov
testl
add
into
jge
add
xchg
mov
xchg
outsl
fcomp
shll
or
xchg
rcl
ljmp
and
out
sbb
nop
andb
xlat
add
dec
dec
into
hlt
push
push
or
mov
push
xchg
or
mov
push
push
ljmp
test
jmp
jecxz
xchg
pop
cmpl
mov
jmp
or
add
stc
inc
addb
push
sub
jbe
ret
mov
mov
and
imul
xor
xor
add
stc
sub
pop
add
shll
outsb
dec
and
mov
adc
in
add
pop
loope
dec
push
push
jo
xchg
cwtl
insl
mov
mov
push
rcrb
rol
addl
in
adc
imul
dec
fsub
aad
enter
or
xchg
add
pop
mov
add
adcb
cmp
push
imul
mov
inc
sbb
subb
or
pop
out
andb
mov
xor
mov
xlat
xchg
cmpsb
roll
mov
and
ret
loopne
add
push
inc
lcall
push
sbbl
shlb
sbb
bound
mov
or
lock
push
sub
test
repz
add
clc
aad
rorl
or
cmp
adc
inc
jne
mov
jl
das
dec
pop
mov
sbb
jge
addr16
inc
xchg
js
mov
or
xchg
sub
addl
fldcw
je
movsl
inc
mov
adc
push
push
test
xchg
nop
mov
pusha
sbb
adc
pop
mov
and
and
dec
pop
xchg
mov
cwtl
fsubrl
or
push
test
loopne
imul
push
pushf
loopne
ds
add
ja
pop
imul
add
jnp
ljmp
or
movl
ja
dec
jp
addr16
pusha
and
adc
mov
ret
rcrb
stos
es
scas
jnp
dec
cmp
insb
jle
xchg
fwait
or
push
mov
xchg
aas
push
jge
xchg
xchg
adc
orl
jecxz
pop
xchg
icebp
cmpsl
fdivl
sub
loopne
lcall
jle
scas
bound
jecxz,pt
movsb
and
xor
sub
adc
and
testl
add
mov
je
sbbb
cmp
aaa
sub
xor
mov
xor
in
add
cmpsb
and
add
xchg
push
or
mov
les
insb
add
xchg
sub
test
sbb
sbb
stos
inc
js
dec
cli
jg
cs
inc
lcall
cmp
test
nop
inc
xor
fmuls
fwait
sbb
xchg
and
mov
lret
sub
lock
mov
jle
push
loop
dec
xor
iret
add
pop
push
lock
movsb
or
test
scas
inc
daa
dec
roll
inc
or
in
loope
mov
mov
mov
push
jle
push
inc
sbb
xchg
xchg
ret
sbb
inc
faddl
js
xchg
mov
rclb
jl
xor
mov
scas
or
sub
sub
stos
std
xchg
movsl
loop
xchg
and
cmc
rorl
ljmp
imul
leave
es
ss
add
add
push
aaa
test
mov
imul
or
cltd
inc
bound
pusha
xchg
jae
lret
add
lahf
mov
mov
jbe
cmc
jmp
adc
push
aam
aaa
sub
inc
push
jmp
pop
inc
mov
inc
xchg
les
mov
in
mov
jge
dec
pusha
jl
xor
lock
push
ja
repnz
or
xchg
scas
push
sbbb
aam
add
sbb
stos
bound
jl
das
es
jne
add
pop
adc
xor
negl
xchg
imul
mov
add
les
lock
addr16
dec
insb
xor
push
push
dec
xor
add
push
sub
sub
stos
inc
aaa
mov
mov
push
fistpl
cmpsl
inc
insb
mov
arpl
hlt
and
sub
push
push
or
rol
je
outsl
js
lods
les
mov
test
and
add
ret
jo
or
aad
movsl
leave
xchg
and
add
mov
out
push
xchg
rclb
aaa
imul
mov
sub
mov
movsb
pop
pop
mov
push
sti
sub
add
inc
or
popa
push
mov
jmp
pop
push
movsl
push
xlat
cli
add
filds
mov
lea
cmp
cwtl
inc
mov
push
push
in
nop
loopne
jmp
add
inc
imul
shrl
add
push
or
nop
lahf
clc
aas
and
sub
mov
lds
jae
ja
push
cmp
xor
enter
sbb
adc
into
pop
mov
es
test
ja
mov
xchg
fwait
jnp
add
imul
push
mov
adc
adc
pop
sub
stc
inc
subb
jmp
xchg
nop
xor
lea
lods
adc
btc
push
imul
enter
imul
inc
lahf
ljmp
add
pop
insb
in
lret
test
pushl
pop
pop
ret
decl
ret
mov
je
sub
inc
push
fwait
push
sbb
mov
fwait
inc
sub
sub
pop
shlb
addr16
mov
test
cmp
aas
push
movsl
or
movsl
add
mov
inc
jo
xchg
shll
adc
aad
int
lcall
pop
and
adcb
push
out
ret
xlat
imul
popa
sbb
push
push
sbb
sbb
aad
cmp
and
or
orl
dec
sub
mov
js
inc
adc
iret
sbb
adc
mov
add
ret
ljmpw
xchg
add
add
dec
pop
push
mov
xlat
clc
mov
ror
or
cvttps2pi
dec
dec
fsubl
and
scas
bound
and
mov
push
mov
push
hlt
fldl
xor
and
loopne
sbb
adcb
das
inc
adcl
sub
or
mov
cld
cmp
adc
sbb
fisubl
test
jno
dec
add
jnp
add
add
inc
fwait
jne
bound
sub
cltd
sub
outsl
pop
enter
arpl
xor
je
arpl
mov
jmp
insl
popf
xchg
sub
movsl
das
xor
jnp
fisttpl
mov
pushf
inc
jle
dec
arpl
inc
rolb
mov
adc
dec
mov
xor
add
pop
xor
and
insl
loop
sub
push
and
adc
inc
mov
lea
inc
bound
test
sub
ja
fnstcw
xor
mov
sbb
cmp
lods
fsts
and
ret
sbb
adc
int3
sub
rcrb
fbstp
cmp
aad
add
mov
and
pop
xor
mov
imul
pop
add
cmp
lret
inc
add
mov
orb
push
push
or
and
xor
lahf
lret
fstl
movsb
fldcw
fsubs
je
sub
xor
insl
or
pop
into
dec
xlat
in
cmp
inc
mov
sub
mov
ds
testb
or
incb
test
aas
sbb
pop
cs
add
push
adc
mov
scas
rorl
rcr
imul
sbb
insb
or
fimull
pop
mov
jg
sbb
mov
dec
insb
and
mov
testl
push
movsb
movsb
shlw
test
sbb
xlat
shlb
sbb
sbb
int3
xor
add
icebp
sub
add
mov
arpl
addr16
xor
mov
jo
jno
ret
sub
xchg
push
inc
jl
arpl
mov
lea
cmp
hlt
pusha
fistps
push
inc
pop
jle
les
adc
pop
fisubl
insb
nop
bound
mov
lcall
mov
sbb
arpl
add
pop
daa
test
cmp
push
mov
mov
push
xchg
insl
aaa
cmpsb
cmp
outsl
sbb
mov
xchg
add
addr16
subl
mov
xor
mov
mov
das
inc
jo
mov
pop
cmpsl
clc
imul
fimull
les
adc
add
mov
mov
sub
dec
cli
imul
mov
inc
mov
push
imul
push
loope
and
test
addr16
scas
orb
cwtl
dec
lock
or
jecxz
fwait
mov
mov
ss
lods
inc
add
je
pop
add
jb
jae
pusha
xor
fnsave
mov
sub
push
jmp
or
xchg
jns
loopne
pop
data16
add
addr16
ljmp
adc
rorl
mov
lock
add
inc
adc
jmp
lods
nop
xor
lahf
sti
icebp
xlat
stos
imul
mov
stos
dec
xchg
sub
sbb
je
call
add
mov
pop
dec
imul
adc
jp
test
subl
adc
das
inc
xchg
jne
mov
cmp
push
pop
stos
mov
repnz
lds
add
add
adc
popa
icebp
push
jb
hlt
add
in
inc
orb
iret
inc
pop
push
mov
xorw
adc
dec
dec
movl
jecxz
loopne
push
lods
and
dec
or
or
add
inc
pop
dec
mov
cmp
dec
movsl
xchg
jp
dec
mov
pop
inc
lods
jo
cmpsb
popw
hlt
adc
or
xor
dec
loopne
gs
pop
lcall
adc
in
xor
fwait
notb
testb
add
mov
mov
push
push
ss
and
lret
leave
pusha
loope
sub
das
in
adcb
shrb
or
mov
or
ret
or
inc
ftst
jecxz
lods
push
sarb
adc
pop
and
mov
lret
push
in
ja
pop
mov
bound
sbb
and
lods
adc
add
push
inc
nop
cmp
adc
mov
in
addr16
push
out
xchg
arpl
or
xor
or
pusha
sub
jl
or
sbb
add
repnz
sbb
mov
es
add
cmp
aaa
mov
or
lret
adc
shrb
arpl
adc
mov
mov
aaa
icebp
pop
xor
pusha
ds
adcb
and
adc
add
arpl
pop
popa
jecxz
mov
jbe
mov
xor
add
ret
inc
mov
jne
not
push
les
mov
sub
bound
fcoms
fabs
pusha
mov
inc
or
pop
hlt
rcrb
rcr
inc
inc
rorl
adc
dec
nop
inc
les
mov
jne
icebp
ja
test
pop
pop
lcall
jne
adc
lea
ds
jg
addr16
cli
xlat
divl
out
pushf
jmp
jg
out
popa
test
adc
test
adcb
adc
push
xchg
dec
sbb
jbe
jp
mov
aas
std
mov
adc
add
xor
push
jecxz
cwtl
dec
repz
in
xchg
xor
push
daa
xchg
push
test
jb
popf
enter
ja
insl
movl
lds
sti
jne
jne
syscall
mov
push
sti
fs
sbb
pusha
lret
arpl
push
xchg
fstps
cmp
push
shlb
mov
sub
test
out
push
mov
in
lret
loope
in
xchg
push
and
cs
mov
jmp
bound
out
inc
mov
lock
push
mov
mov
add
dec
scas
enter
stos
mov
sub
test
inc
add
lret
mov
jecxz
test
xlat
push
stos
cld
cmp
mov
or
sbb
jnp
pop
scas
add
aas
addl
ljmp
aaa
jbe
inc
inc
or
inc
lcall
ret
cs
sbb
jecxz
pop
pop
cmp
jno
pusha
jbe
arpl
test
pusha
jo
or
push
jp
sbb
xor
out
loop
adc
lahf
add
pop
or
pop
cmpsb
push
push
js
push
cmpsb
outsb
push
jnp
leave
and
add
les
or
xchg
mov
scas
fimuls
jge
popa
ljmp
mov
mov
rcrl
mov
xor
add
mov
mov
mov
cmpsl
and
int
dec
sbb
popa
cmc
movsb
jmp
jmp
mov
mov
dec
sub
enter
es
xchg
test
icebp
push
popa
nop
add
dec
sti
sub
clc
mov
pop
lahf
pop
movsl
dec
cmp
jbe
ja
mov
mov
xor
js
or
xlat
or
out
and
icebp
leave
arpl
aaa
add
sbb
dec
mov
outsl
or
dec
pop
dec
cmp
mov
popa
jns
inc
popf
lcall
mov
xor
sbb
and
xchg
sub
roll
out
das
ljmp
xor
js
pop
add
sub
xlat
add
xor
adc
loopne
jg
inc
je
out
andb
dec
jmp
daa
cltd
push
daa
pop
pop
pop
cmpsl
cmpsb
cmp
loope
dec
ret
sub
add
dec
imul
cmc
jno
add
cmp
xchg
js
pushf
xor
lods
aaa
push
pop
mov
jno
sbb
shll
bound
xorl
test
roll
pop
sbb
repz
xchg
or
push
ret
int
out
sar
add
mov
hlt
jo
movsb
dec
out
push
cmpsl
jle
cmpsl
jo
dec
ja
and
xorps
jp
das
jge
push
dec
or
jb
xlat
cmp
pop
lret
int3
pop
addr16
sbb
in
mov
sub
sarb
rcr
cmp
push
sub
push
xor
in
xor
clc
xor
test
cmc
mov
clc
fs
xor
jle
mov
cmc
sub
mov
loopne
pop
aam
or
out
aam
sub
mov
jmp
lahf
jbe
mov
repz
pop
fmull
out
cltd
and
or
test
fsts
stos
mov
repnz
adc
das
xchg
es
add
movsl
cmp
sti
xchg
jg
orl
mov
scas
sub
in
pusha
or
int
add
push
out
sbbb
xchg
push
mov
add
in
movsb
fidivrl
sahf
fnstcw
inc
test
stos
fnsave
ja
mov
xor
dec
add
fs
lret
and
add
or
shlb
gs
lret
cmp
fisttps
ret
dec
mov
and
in
bound
push
mov
pop
xchg
sbb
mov
int
pop
icebp
push
xor
sahf
jne
mov
dec
pmuludq
adc
ja
mov
add
adc
test
aam
addl
mov
pop
les
xchg
sbb
mov
cwtl
shlb
xor
sub
cmpsb
cmpsl
jbe
icebp
and
dec
jb
loopne
sbb
in
dec
das
add
push
xchg
mov
push
cltd
adc
pop
fnstsw
add
jl
adc
jo
adc
cmp
push
push
xchg
into
cmp
jl
js
mov
pop
mov
shlb
push
popa
fnstsw
xchg
bound
and
call
fnstsw
sti
out
or
int3
nop
jnp
mov
mov
in
mov
orl
lock
ljmp
lds
jns,pn
inc
pop
cmp
fists
movsl
gs
xchg
add
out
lcall
xchg
mov
mov
inc
push
cmp
adc
mov
test
sub
faddl
xor
fisubrs
jo
and
xchg
fbld
ret
adc
mov
mov
jg
fmuls
js
adc
jne
cmpsl
addr16
cmp
and
and
inc
sbb
das
or
pop
cmpsb
add
bound
sbb
out
xchg
call
dec
and
sbb
jno
push
push
push
xor
dec
test
lahf
xlat
int3
mov
fwait
pop
sbb
mov
sub
inc
xchg
scas
ja
stos
mov
out
jns
sbb
pop
xor
and
push
mov
mov
les
add
lret
out
loopne
adc
dec
ret
cmp
mov
mov
add
mov
xchg
or
xchg
xchg
pop
pop
decb
xor
jns
mov
mov
sub
inc
sub
jno
jns
pop
and
pop
pop
jae
lods
inc
jl
dec
pop
inc
add
pop
mov
push
jbe
and
inc
shlb
jg
adc
icebp
push
cs
test
outsb
fs
aas
sub
push
rclb
xchg
nop
pusha
push
loopne
shll
sbb
outsb
xlat
cmp
and
ljmp
loope
xor
jbe
jge
and
adcb
jmp
pop
out
jl
scas
popa
mov
push
add
adc
sub
cmp
cwtl
dec
or
data16
in
xor
insl
loopne
dec
jecxz
inc
mov
mov
xlat
cmpsl
loope
orb
out
push
lea
adc
mov
xchg
imul
pop
xor
fwait
xchg
nop
sub
das
cmp
add
das
imul
xchg
mulb
fdivl
fwait
shlb
mov
mov
add
lret
sub
add
adc
xor
dec
mov
pop
cmpsl
xor
dec
scas
sub
xchg
out
pop
sub
inc
jp
inc
mov
dec
sbb
pop
test
les
and
out
push
iret
push
push
out
int
stos
mov
or
push
dec
dec
push
inc
mov
arpl
inc
lods
adc
test
mov
out
push
jae
dec
add
pop
ret
mov
fisubrs
xor
les
sub
inc
fs
mov
xchg
ret
add
or
es
adc
loope
aam
dec
ffreep
mov
mov
shlb
pop
add
fidivrl
pop
daa
mov
xchg
aas
shll
jno
adc
pop
cmp
add
pop
rcrl
adc
inc
rorb
out
inc
movsb
fistl
fcoms
pop
or
lds
cmp
dec
sub
jge
insb
outsb
cwtl
arpl
lock
icebp
jp
roll
shll
add
add
pop
jns
add
ret
push
push
lock
mov
add
push
jno
jg
mov
sbb
jno
pop
dec
shl
jbe
adc
addl
test
jg
rolb
mov
sub
add
fisttpl
adc
mov
mov
and
mov
lods
jns
lea
mov
repz
imul
shlb
add
inc
adc
cmp
lods
dec
add
mov
xor
add
and
sbb
cmc
mov
dec
scas
arpl
mov
jns
mov
sar
mov
or
mov
call
mov
inc
jns
dec
daa
mov
add
mov
jle
xchg
jne
loope
push
pop
cmpsb
fbld
and
sub
testb
pop
stc
imul
sbb
xor
pminub
fisubs
mov
or
stos
mov
ljmp
push
stos
sub
inc
sub
mov
icebp
inc
cmpsb
xor
adc
sub
rorb
ficoms
movsl
iret
mov
ret
sbb
adc
leave
jmp
and
rorb
mov
add
das
push
aaa
jo
push
jbe
out
jp
cmp
sub
mov
xchg
and
dec
rolb
jno
aaa
daa
test
dec
adc
data16
pop
addl
lret
xor
dec
or
sub
adc
sbb
dec
aad
adc
cmpsb
or
out
jmp
retw
lods
push
xchg
add
push
inc
add
fs
gs
out
movsb
and
dec
mov
popf
test
xchg
mov
fsts
fildl
cs
iret
push
cmp
lods
inc
shll
inc
pop
mov
pop
cmp
icebp
fidivrl
es
or
jp
shrl
push
popa
mov
adc
sbb
data16
push
dec
outsb
loope
inc
xchg
adc
movb
mov
cmp
xor
lock
cmp
in
inc
insl
fsub
push
dec
daa
aas
and
lock
add
mov
stos
pop
xlat
leave
cs
int
outsb
add
add
adc
jl
imul
jl
mov
out
cmp
cmp
mov
dec
add
out
ja
pop
scas
adcl
pop
faddl
add
neg
xor
daa
mov
std
xor
daa
out
cli
push
pop
xlat
push
and
adc
mov
addr16
sbb
int
fs
clc
mov
into
xlat
ret
outsb
insb
mov
dec
aas
fs
test
push
add
shl
inc
arpl
sbb
popa
cmp
loopne
stos
out
push
fdivrs
cmpsb
scas
push
xchg
fstp
fsubrs
aaa
or
ds
xchg
das
mov
ret
stos
mov
iret
movsl
pop
dec
js
mov
int
sti
adc
inc
mov
push
popf
sub
mov
cmp
mov
adc
cmp
aas
fwait
pop
mov
les
cmp
addb
xlat
mov
xlat
rcrb
add
shrb
jg
repz
add
push
movsb
vpunpcklbw
or
add
jno
mov
jbe
pop
pop
das
or
push
ret
push
sub
jecxz
imul
xor
dec
add
imul
loopne
movsb
jne
dec
arpl
test
jae
cmp
jle
inc
cmp
scas
sbb
ret
dec
xor
out
fcmovbe
clc
adc
pop
test
mov
cwtl
mov
mov
in
mov
xlat
ret
mov
test
add
mov
insb
imul
inc
addb
adc
aaa
fstl
jne
mov
es
in
jno
xor
add
orb
in
mov
jle
loop
mov
aas
xor
scas
iret
mov
fldcw
iret
or
sbb
sub
mov
dec
and
push
push
stos
push
pusha
mov
mov
faddl
cs
sti
stos
incb
test
mov
je
cmpsl
inc
push
mov
fiaddl
pop
mov
xor
sub
push
je
mov
in
adc
xchg
les
stc
daa
mov
mov
popa
and
movsb
das
push
mov
bound
push
mov
sbb
jle
pop
gs
outsl
dec
cmp
loop
add
add
dec
std
push
xchg
push
adc
loope
and
outsb
cli
inc
mov
ss
xchg
in
addl
ret
movsb
dec
pop
loopne
xchg
add
dec
push
lahf
push
sub
mov
daa
les
es
fwait
insb
pop
jl
test
dec
pusha
and
sbb
add
icebp
sub
or
iret
stc
faddp
pop
sbb
fsubs
or
lock
jmp
add
sbb
and
jo
xor
push
sbb
or
add
sub
jns
and
loope
out
outsl
sti
lock
scas
jo
mov
xchg
leave
test
mov
lock
sub
adcb
dec
jns
loopne
out
ja
xor
mov
sbb
mov
adc
in
andb
adc
push
sub
fcompl
cli
pop
fwait
js
test
cmpsb
xor
xor
fs
scas
and
and
mov
lods
mov
or
mov
test
push
push
adc
jp
es
and
leave
push
mov
sub
and
xchg
or
mov
imul
enter
cli
scas
das
sbb
add
popf
cmpb
pop
test
fwait
mov
fstl
sub
mov
or
fistl
aam
add
mov
shlb
ret
movsb
sbb
cmp
jnp
add
or
xor
or
wbinvd
aaa
add
dec
dec
test
sbb
inc
fsubrs
sbb
push
sbb
xchg
test
jge
gs
sub
add
adc
aaa
sub
inc
sbb
or
addl
xor
mov
add
dec
aaa
push
sbb
push
dec
shl
or
push
loopne
pop
cmp
rcrb
dec
push
add
pop
shr
lods
ret
orb
adc
sub
xlat
pop
rorb
push
arpl
mov
inc
mov
popa
popa
or
dec
or
push
fstpt
jns
push
insl
arpl
pusha
dec
push
js
loop
sub
sub
mov
call
cmp
sarl
ss
sbb
sahf
movsl
cmc
and
mov
sub
insl
lahf
je
xor
fisttpll
aas
push
mov
mov
add
and
cli
sbb
loopne
push
mov
mov
xchg
and
sub
jno
fidivl
dec
mov
cmc
inc
add
pop
inc
push
xchg
mov
pop
and
imul
jmp
and
add
scas
into
rorb
xor
mov
push
out
adcb
cmp
push
ret
or
cmpsl
dec
sub
jge
jb
push
adc
add
push
sbb
mov
inc
xlat
cmpb
sub
clc
or
hlt
mov
adc
sbb
popa
adc
stos
pop
adc
fwait
pop
mov
ret
test
dec
add
pop
ret
test
movsb
push
psllq
stos
inc
ja
stos
jno
sub
mov
inc
add
sahf
adc
gs
add
int3
dec
xchg
cmpl
adc
push
mov
insl
pop
mov
fistl
or
popf
fcoms
xlat
and
lods
daa
push
mov
sub
adc
and
fidivs
mov
fidivrs
adc
das
xor
add
or
adc
stos
dec
xor
add
push
sub
das
cmp
pusha
adc
add
lret
xor
xchg
and
jmp
fs
mov
xchg
lea
or
shl
lods
push
jge
dec
jnp
and
xchg
shrb
sbb
enter
add
add
sti
add
jbe
loopne
sahf
adc
or
dec
mov
cmpb
xor
es
xchg
sbb
add
mov
icebp
mov
xchg
aaa
fstpl
loope
jno
mov
xor
xor
cltd
lahf
jecxz
dec
lods
dec
and
jecxz
mov
cmp
fwait
sbb
push
or
andl
scas
test
out
enter
jns
popf
nop
xor
dec
add
jns
in
and
add
testl
dec
inc
in
or
lods
sub
loopne
inc
and
cld
mov
push
pop
or
ds
in
jns
inc
mov
add
and
push
mov
xor
enter
sub
inc
cmp
xorb
xchg
cmp
add
inc
sub
and
xchg
je
sub
test
pusha
pusha
lock
mov
sbb
out
inc
pop
or
fidivrl
push
push
test
sti
and
sbb
push
xchg
pushl
add
push
jp
das
insb
pop
loop
push
push
sbb
inc
test
fadds
jp
add
push
scas
arpl
cmp
cmp
and
sar
in
icebp
inc
sub
mov
loopne
jno
nop
mov
pop
xor
ret
cmp
jb
push
movsb
jb
sub
loopne
lahf
and
imul
cmpsb
xchg
test
std
sub
pop
or
into
sbb
add
push
aaa
adc
mov
dec
test
flds
test
push
add
and
jno
js
ret
sahf
add
scas
xchg
enter
ljmp
add
add
add
cmp
sub
xchg
push
in
mov
jno
fmull
scas
hlt
cmp
or
sarl
test
mov
or
pop
dec
ficomps
sub
popa
or
ds
ret
sbb
mov
cmp
dec
mov
sbb
das
adc
rorl
sbb
fs
or
nop
inc
dec
pop
xchg
pop
push
pop
add
sbb
xchg
xchg
add
adc
mov
pushf
pop
pop
add
leave
mov
pusha
mov
lcall
in
lcall
pop
imul
dec
xor
cmp
and
inc
push
cmp
push
push
xchg
scas
movsl
fcoms
dec
ds
lcall
popf
add
bound
pcmpgtb
xor
xchg
jo
mov
cli
pop
and
rcl
cmp
sahf
xchg
push
pop
add
mov
pop
cwtl
rcrl
or
sbb
jle
pop
arpl
lock
pop
das
add
sarl
movsb
in
arpl
cmc
mov
rolb
adc
stos
adc
shll
or
xchg
lock
test
dec
mov
dec
cmp
xor
xor
mov
js
fstpt
adc
insb
shrb
or
push
xchg
jp
sbb
cs
aaa
movsb
popa
or
push
mov
notl
add
cli
and
je
xor
call
push
pushf
jo
add
popf
daa
sub
mov
jne
sbb
xorb
cmpsl
xor
mov
lock
adc
rcl
pushf
pusha
test
mov
sarl
or
lcall
pop
fwait
add
test
push
push
mov
test
sbb
xchg
adc
jmp
cmp
and
mov
cmp
das
or
xor
adc
sub
nop
sbb
mov
cwtl
fs
pop
jno
add
test
sbb
adc
cs
jo
rolb
and
lret
mov
test
mov
or
add
push
adc
add
push
ds
repnz
pop
sub
js
push
dec
adc
mov
adc
push
mov
mov
movsb
xor
xchg
lock
fidivs
imul
add
out
inc
sub
sahf
sahf
sbbb
sbb
inc
push
cld
lds
or
pop
and
jo
xchg
je
lods
cmc
mov
shll
xchg
dec
push
xchg
fdivrp
scas
fs
mov
aas
mov
es
sub
fcmovnb
sbb
shl
mov
jno
adc
xor
cmp
pop
and
sbbl
sbb
mov
movsb
in
mov
ret
cmp
pushw
pusha
pusha
mov
loop
lcall
popf
in
or
sub
xlat
aaa
push
ja
push
lret
jo
add
jb
and
add
mov
int3
in
inc
fisttps
or
sub
push
jns
xor
and
loope
mov
pusha
jp
sbb
loope
cld
push
mov
lods
dec
int3
cmp
and
std
add
sbb
popf
push
cmpsb
loope
jmp
popa
sbb
mov
push
adc
mov
jbe
rol
test
cmc
popf
jnp
inc
push
xchg
jno
insb
push
shl
push
dec
movb
xor
aam
sbb
mov
aam
stos
and
push
add
mov
or
inc
or
lods
adc
icebp
lea
or
jecxz
scas
leave
add
or
jecxz
icebp
pusha
add
leave
or
dec
fcomps
out
cld
push
add
stos
adc
ds
add
dec
inc
movsb
pusha
or
mov
dec
dec
cmp
cmp
add
xor
mov
cmp
imul
mov
addb
inc
add
or
cwtl
lret
aaa
std
and
cmp
ss
into
inc
sbb
mov
adc
pop
or
les
dec
outsb
movsl
xor
mov
and
test
cmp
ret
pushf
imul
adc
dec
cltd
call
mov
sub
xchg
mov
sub
adc
in
adc
sbb
push
push
pop
iret
xor
mov
add
jno
push
idivb
adc
pop
pushf
mov
arpl
iret
sbb
pop
xor
rorl
rorb
repz
add
mov
stc
std
push
ret
lods
inc
add
mov
test
pusha
lock
cmp
jge
mov
push
call
adc
pop
iret
rolb
add
lea
mov
push
or
leave
jp
sbbl
outsl
mov
push
leave
in
addb
pop
sbb
dec
ret
lods
dec
or
mov
jae
loope
dec
test
imul
xchg
add
dec
arpl
mov
sub
xchg
push
movsb
pop
sbb
and
fs
imul
pusha
xor
test
mov
adc
sub
ffree
pop
icebp
pop
fwait
mov
sti
jl
shlb
add
lret
iret
fsubs
mov
push
inc
xchg
aam
lcall
rorl
into
xlat
sub
adc
mov
adc
cmpsl
mov
mov
ficomps
or
aam
xchg
mov
lds
adc
and
popa
jge
icebp
or
aam
sbb
mov
lods
pop
sub
dec
sti
jne
or
cmp
imul
push
adc
loope
sub
pop
in
inc
cmpsl
scas
sub
dec
dec
es
dec
loop
bound
aaa
fildl
xchg
or
dec
and
mov
lds
je
push
sbb
jbe
and
mov
cmp
sbb
adc
cmpsb
jp
inc
mov
push
dec
inc
cmp
enter
das
dec
ja
lret
mov
mov
pop
js
sbb
jne
xchg
es
js
xor
lea
imul
enter
add
jecxz
scas
xor
jl
pop
add
sub
add
rep
mov
and
adc
je
sbb
fcompl
xchg
xor
sbb
add
jmp
fldenv
adc
jmp
cmp
std
fsubrs
fsubs
push
fistpl
push
imul
xchg
push
es
mov
and
shrb
popa
xor
in
and
jge
or
fistl
aas
cmp
sbb
pusha
mov
inc
add
addr16
pop
pop
dec
iret
mov
inc
sub
mov
add
cmp
out
les
movsl
push
inc
mov
in
mov
xor
sbb
mov
mov
sbb
inc
ret
addr16
jno
fisubl
outsl
lea
arpl
aas
pop
cmp
pusha
mov
in
mov
mov
and
cmpsb
jo
push
cmp
pop
xor
jno
cmp
adcb
jecxz
lea
dec
lods
mov
test
adc
mov
jo
jnp
scas
test
lods
pusha
push
add
inc
or
adc
dec
js
or
arpl
adc
sub
sbb
ret
cld
add
sbb
add
jne
or
cmp
xlat
roll
or
movsb
faddl
repz
roll
lds
outsl
jg
sahf
setne
shll
dec
or
or
and
jno
adc
mov
out
adc
and
sub
add
add
gs
xchg
testl
mov
jb
dec
shll
sub
cmp
dec
sub
mov
pop
out
adc
push
add
lahf
push
pop
inc
push
rcl
or
mov
rorl
sub
imul
ja
in
mov
adc
and
inc
push
mov
loopne
das
or
dec
pop
hlt
add
mov
xor
lret
dec
cmc
inc
mov
clc
mov
ret
cmpb
adc
mov
cwtl
dec
pop
movsb
push
jp
loop
push
pop
dec
sub
sub
or
int3
pop
adc
ja
in
add
pushf
ss
push
aas
push
xor
add
loope
or
es
nop
in
mov
push
pop
push
and
loopne
push
movsb
test
cmpsl
fimull
scas
adc
fsts
sbb
pusha
inc
xorl
call
cli
mov
inc
imul
sahf
inc
sub
pop
adc
mov
mov
mov
inc
dec
iret
daa
mov
mov
jg
push
push
and
popa
sbb
jne
subb
stos
dec
daa
xchg
cmp
push
pop
inc
or
rol
pop
ret
or
aam
mov
pop
fisubl
loope
sbb
rolb
enter
mov
mov
xchg
and
adc
adc
shlb
insb
xchg
gs
sub
add
bound
jl
roll
inc
mov
out
in
adc
add
mov
iret
out
outsl
add
pop
or
daa
add
fmuls
nop
xchg
push
dec
rorb
or
mov
sbb
pop
scas
and
rcrb
push
out
mov
adc
dec
pop
loopne
add
aaa
leave
jp
adc
pop
mov
mov
add
insb
sbb
mov
cvttps2pi
push
or
hlt
add
in
push
and
cmp
ss
xor
mov
push
ds
and
shrb
mov
call
xor
movsb
insl
sub
adc
loopne
sbb
jmp
int3
cmp
sub
mov
and
xorl
jmp
lods
xor
lcall
xchg
in
je
ret
aam
in
mov
lock
cltd
mov
cld
add
aaa
jno
dec
cmp
adc
cld
or
mov
cmpsl
out
lods
hlt
sub
js
fsubrs
mov
xchg
xor
sbb
push
stos
in
leave
negb
mov
pop
out
xor
push
mulb
dec
xor
js
mov
mov
dec
push
out
jne
adc
xlat
out
in
mov
push
test
lods
bound
xor
inc
fcomps
out
rclb
sub
and
push
bnd
mov
and
loope
pusha
mov
rorl
mov
push
push
leave
mov
add
cs
and
pop
cmp
je
inc
cs
cld
mov
jo
das
cmpsl
push
fsubr
or
sbb
mov
hlt
lock
loopne
cmpsl
dec
cmp
mov
mov
ret
cmp
cmc
or
push
and
es
fistpl
jo
rolb
testb
shlb
pop
push
std
data16
push
pusha
xlat
sub
sbb
sbb
stos
xchg
stos
cmp
dec
xchg
and
scas
sub
fidivrl
or
and
fldz
add
pop
out
outsb
sub
push
aad
outsl
xchg
push
ret
add
add
or
test
adc
fstpl
sbb
inc
fisubrl
loopne
push
mov
cltd
sub
cmpsl
test
mov
cli
stc
inc
sbb
je,pt
jp
daa
stc
add
call
mov
cmpb
and
pop
and
lret
or
outsl
or
inc
dec
mov
in
aad
aaa
cmp
xchg
icebp
xchg
icebp
pop
pop
shl
sti
add
add
dec
push
cli
add
es
inc
sbb
inc
push
xchg
mov
and
xrelease
lea
aam
lock
lods
aad
and
int
fadds
xchg
aaa
fsubrs
mov
dec
dec
jge
mov
insb
out
ljmp
jge
enter
push
in
push
jns
test
in
xchg
xlat
addr16
mov
xchg
ret
outsl
or
mov
pop
jp
push
cmp
fwait
and
mov
mov
lock
push
add
jecxz
sub
mov
sub
push
mov
cltd
cmpsb
in
into
shrb
insl
or
sbb
fidivs
jo
clc
sbb
sbb
adc
or
jp
add
mov
pop
addl
stos
out
and
shl
lahf
mov
pushf
cli
jo
data16
add
fdivrs
aaa
push
mov
movb
mov
inc
lock
stos
data16
and
fistpl
addr16
lods
arpl
jl
inc
jl
ds
out
mulb
mov
add
sbb
add
xlat
or
mov
fisttps
shll
lahf
fwait
call
inc
add
xor
cmp
adc
rorl
inc
mov
dec
inc
inc
pop
adc
lcall
pop
dec
test
mov
scas
jp
push
pop
dec
ret
inc
enter
xchg
jp
xor
add
add
xchg
add
sahf
add
and
xor
les
push
in
add
test
lods
fwait
jb
aaa
cltd
sar
push
cmpsb
jge
add
call
xor
lods
xor
inc
mov
out
fisubrl
pop
and
icebp
scas
es
in
lds
clc
mov
xor
xchg
test
movl
sahf
lods
lcall
int
fcomi
pusha
mov
inc
lcall
das
add
add
call
push
shlb
call
icebp
and
cmpsl
lahf
or
xor
sub
jmp
nop
loopne
cmp
sbb
shrb
hlt
sub
adc
je
push
dec
loopne
arpl
es
jne
cs
scas
bound
scas
rcll
data16
and
inc
cmpsb
rorl
loope
cmc
and
fwait
dec
sub
imul
sbb
lods
sub
scas
mov
add
scas
dec
mov
dec
jno
and
scas
popa
jg
xlat
test
ss
lock
mov
hlt
rol
jmp
lods
loopne
orb
xor
pop
dec
popf
incl
shr
add
lahf
mov
jp
add
dec
lock
jecxz
jo
and
pop
fldpi
inc
loop
rolb
rorb
mov
ret
mov
ror
int3
lret
cmovg
fistpll
add
push
in
outsl
push
lock
out
mov
into
xor
lock
and
insb
xchg
dec
jnp
daa
or
into
or
mov
dec
lods
popf
dec
xchg
mov
or
push
loope
or
lret
inc
loopne
xchg
andb
mov
lret
xor
mov
clc
lods
jo
outsl
or
cmpsb
and
int
push
hlt
inc
int3
je
into
jle
in
popa
ret
mov
adc
cmpsl
lds
in
adc
popa
lds
out
inc
mov
xor
loopne
dec
fstps
repz
js
xchg
push
mov
and
test
mov
fwait
cltd
fisubrs
push
cwtl
fstl
jo
out
push
js
xchg
adc
aam
add
out
inc
and
xor
add
cli
iret
and
test
lds
push
inc
cmpsb
or
jnp
push
out
cmp
push
inc
or
jp
loope
lods
mov
imul
push
mov
xor
lds
or
clc
push
jb
lea
std
pop
mov
lods
sbb
aas
sub
xor
mov
sbb
jmp
push
iret
add
sti
add
cwtl
add
les
out
mov
fdivs
push
call
repnz
ror
repz
js
jl
roll
push
mov
sub
sarl
xchg
fsub
mov
sar
sub
loopne
add
inc
aaa
bound
mov
dec
out
out
mov
mov
mov
add
cmp
dec
movsl
mov
sub
insb
jmp
inc
jecxz
adcl
adc
dec
mov
and
lret
loopne
popa
dec
shrl
faddp
cli
pop
xchg
jmp
movsb
lahf
add
push
inc
and
dec
gs
cmp
addr16
xor
test
js
fsubrl
aas
sbb
or
ss
or
scas
outsl
data16
in
inc
fdivl
dec
xchg
push
iret
xor
iret
test
mov
mov
or
in
nop
jge
pushf
add
fisttps
scas
inc
mov
insb
add
addr16
bnd
test
sub
pusha
call
add
cmp
sahf
pushf
sarl
int
and
xchg
pop
aaa
inc
imul
add
movsb
sbb
out
push
xchg
push
jmp
xor
stos
mov
cltd
repnz
in
nopl
enter
int3
stos
cs
pusha
test
cli
pop
pushf
stos
dec
xchg
or
lret
adc
push
pop
icebp
arpl
jae
outsb
mov
xchg
sbb
dec
loopne
in
mov
call
repnz
xor
rolb
stc
mov
mov
pmulhuw
sbb
adc
inc
xchg
push
pop
xchg
pop
in
mov
loop
xor
shrb
popf
sbb
and
test
mov
pop
mov
cmp
daa
aaa
inc
jbe
rorb
mov
cmp
ret
daa
inc
addl
loopne
nop
jmp
inc
cmp
fiadds
and
and
push
push
and
cmpsb
and
push
sbb
in
repz
icebp
xorl
or
in
push
xchg
dec
inc
mov
and
arpl
add
sbb
pop
mov
mov
jb
jle
sbb
bound
xor
add
out
pushf
push
out
test
dec
xchg
sbb
sbb
loopne
jbe
ds
push
mov
cmpl
mov
jnp
jle
push
rorb
and
jb
cs
aaa
sti
outsb
imul
addl
add
mov
and
pushf
pop
mov
mov
mov
push
add
or
mov
ret
and
test
push
jecxz
shlb
adc
mov
and
test
cmovno
jmp
and
pop
lods
lcall
pushf
push
or
xor
lcall
lods
aas
repz
pop
mov
add
cmp
lods
pop
lret
pop
sub
out
add
push
shr
fdivl
jnp
lods
pop
xor
inc
popa
mov
or
xchg
jg
cmp
jo
sbb
and
les
inc
loopne
je
mov
pop
or
push
pusha
in
and
add
cmp
pushf
xchg
inc
pop
jecxz
aad
push
xor
addb
push
mov
ljmp
repz
add
out
aad
in
mov
enter
lock
fsts
into
inc
movsl
fbld
fcoml
enter
data16
sub
xlat
xchg
call
ret
inc
and
add
xor
sbb
jne
stc
dec
fadd
rcrb
add
bound
or
or
add
sbb
fsub
loopne
rolb
test
aad
jmp
add
mov
cltd
inc
jmp
jg
xor
mov
push
push
aad
fmul
movsb
cmp
ror
and
bound
pop
sub
inc
sub
stos
in
jne
or
lds
cmp
mov
pushf
mov
adc
or
sub
shll
xor
sbb
or
ret
sbb
add
adc
fisubrs
loope
pop
mov
and
ljmp
push
loopne
xlat
es
rorl
jmp
sbb
dec
inc
add
cmp
adc
mov
je
mov
loopne
push
pop
jl
jnp
mov
and
xlat
sub
movb
sub
lods
cmp
xor
mov
add
fdiv
add
fidivrs
mov
fbld
xchg
mov
or
sbb
or
adc
test
xchg
cld
clc
adc
xchg
mov
inc
pushf
cmp
jp
movsl
cmc
pop
dec
adc
xchg
add
sbb
jo
addr16
push
sarl
add
push
sub
in
sbb
add
pop
or
xchg
jge
sbb
sbb
aad
dec
xchg
scas
fwait
pushf
xchg
lock
sbb
cmp
out
loopne
sub
mov
and
push
cmp
mov
add
add
es
test
xchg
in
enter
dec
clc
sbb
cs
and
and
fs
inc
js
push
add
rolb
xchg
mov
shll
xchg
jne
test
or
add
cmpsl
mov
add
test
push
lods
aad
pop
add
inc
inc
xor
jmp
icebp
xchg
inc
js
out
leave
pop
pop
inc
xor
add
ja
sbb
pop
fildl
mov
sahf
sbb
and
jb
int
inc
adc
mov
inc
mov
and
or
icebp
aas
and
out
push
lea
shll
inc
or
fcmovnbe
mov
add
mov
enter
insl
lahf
cmc
cmpsb
and
push
test
mov
mov
ss
mov
rcl
test
pop
xor
pop
or
adc
cmp
and
xchg
pop
push
dec
pop
lods
pop
dec
fildl
ljmp
addb
add
mov
das
lea
xchg
outsb
popa
inc
and
testl
mov
andl
mov
mov
loope
jo
xchg
hlt
es
test
pop
lret
sbb
iret
add
and
les
mov
adc
xor
push
or
push
pop
arpl
pop
adc
xchg
stc
pop
fists
mov
inc
int3
pop
dec
imul
scas
adc
inc
dec
and
repnz
sbb
xchg
add
xchg
sti
mov
dec
inc
and
sar
outsb
js
pop
sbb
add
bound
or
out
mov
imul
mov
fldenv
leave
cmp
mov
pop
and
cmp
orl
push
adc
rclb
ret
mov
fldl
cwtl
roll
loope
mulb
and
test
cmp
push
add
gs
mov
mov
or
rol
xor
jns
mov
dec
mov
sbb
and
es
and
xor
mov
sub
daa
jbe
xchg
imul
cmp
add
test
push
and
xor
popa
ret
jo
test
nop
repz
ss
mov
xchg
inc
xor
sbb
xchg
mov
push
repz
cmc
jne
push
js
mov
push
lret
fdivs
adc
loop
das
sti
ljmp
lds
push
sti
arpl
dec
pop
ljmp
inc
mov
dec
pop
xchg
jl
jmp
add
imul
dec
jo
cmp
jae
shl
mov
cmpsl
adcb
add
push
aaa
leave
into
and
mov
orl
orb
mov
outsb
cmpsl
sbb
or
xchg
rcll
jo
fbstp
add
push
stos
fsubl
push
nop
push
adc
fwait
pop
sub
mov
pop
lock
ss
jns
es
rorb
sbb
cs
es
test
inc
mov
jmp
notl
test
cmp
push
push
mov
add
mov
sub
pop
fbstp
xor
test
sahf
mov
outsl
cmp
cmpsl
sub
fsubp
aam
mov
inc
ljmp
xchg
out
jns
outsb
dec
add
mov
sub
add
and
xchg
inc
pop
iret
inc
jnp
cmp
pop
fisubrl
int3
aas
xchg
out
mov
test
cs
and
inc
xor
add
ljmp
jne
mov
xchg
jb
repz
mov
in
fwait
inc
clc
imull
mov
sub
in
out
lds
push
push
inc
mov
out
mov
test
pop
dec
jb
call
pop
pop
push
mov
lret
daa
mov
sarl
pop
xor
hlt
add
fisttpll
insb
or
pop
lahf
insb
pop
adc
sahf
add
ret
fmul
push
lods
mov
add
pop
adc
inc
aaa
add
stos
or
mov
out
loope
jo
xchg
add
adc
sbb
icebp
mov
add
adc
in
pop
jecxz
lds
cmpsl
cwtl
test
leave
sub
push
mov
mov
adc
push
push
add
add
aas
cmp
ss
xchg
mov
lods
push
stos
pop
fdivs
jge
sbb
pop
push
xchg
mov
clc
jle
pop
add
cmp
inc
out
lret
ret
call
add
jge
add
push
xorb
pop
jbe
inc
add
push
mov
sub
mov
bound
and
push
xchg
inc
lahf
push
jno
xchg
pop
insl
pop
add
inc
movsl
popa
or
sub
fwait
mov
sti
stc
ds
jle
or
imul
add
push
ljmp
fldl
dec
in
stos
cmp
clc
int3
dec
add
test
lock
xor
jl
and
jp
cmp
fadds
jb
mov
xchg
or
sarb
push
pop
icebp
mov
mov
rol
add
dec
add
add
and
pop
test
push
jmp
arpl
pop
mov
sarb
xchg
add
test
mov
mov
or
sbb
daa
cltd
push
fwait
popa
jno
xor
add
lret
mov
dec
xchg
mov
sbbb
lcall
movsl
pop
xchg
fdivrs
je
scas
stos
inc
loope
lcall
adcb
out
addb
loop
add
test
xchg
dec
cwtl
popf
sbb
andb
xchg
pop
mov
dec
sbb
mov
add
hlt
cmp
lea
add
movsb
xchg
sbb
push
mov
imul
cli
jle
pop
popa
inc
sub
mov
pusha
push
mov
stos
and
jl
push
dec
dec
dec
repz
pop
or
and
popl
nop
cli
xor
ds
jl
jo
push
jle
sub
sti
fs
and
fsts
mov
rclb
mov
add
push
mov
loopne
push
add
imul
testb
mov
cmpsl
pop
xorb
jno
andb
mov
mov
adc
jmp
mov
stos
xor
pop
or
lcall
int3
xchg
test
dec
or
add
mov
mov
mov
dec
push
cmp
mov
call
jg
xor
and
rolb
movb
dec
das
mov
and
or
lret
jl
int
or
add
mov
jnp
sub
iret
adc
lods
pusha
cmpsl
rol
iret
test
pushf
xchg
add
dec
scas
lea
dec
gs
or
inc
jno
inc
fimull
add
sub
hlt
cmc
sti
push
es
dec
mov
mov
or
fstl
push
sbb
ret
inc
sub
flds
outsl
mov
lret
neg
jne
or
jbe
dec
lret
or
adc
cmp
dec
sbb
add
mov
add
pop
xchg
fnsave
lahf
or
xchg
test
lock
jo
int3
and
scas
cmp
aad
prefetch
or
int3
jae
addb
pop
sbb
adc
mov
and
mov
fs
outsb
pop
lret
adc
mov
pop
mov
inc
movsb
mov
pop
push
xor
daa
mov
adcl
pop
nop
incl
jo
jmp
out
dec
inc
loop
aam
dec
cmp
mov
sbbb
movsb
es
fidivrs
mov
inc
inc
jno
popl
xabort
adc
push
pusha
test
sbb
mov
roll
sbb
and
add
pop
xchg
inc
jnp
push
mov
xor
nop
jae
iret
mov
mov
lea
and
and
je
pop
or
sub
push
sbb
xor
ss
mov
add
adcl
test
dec
jne
sub
dec
pop
dec
mov
xor
and
ret
call
lret
imul
mov
cmp
or
add
xchg
dec
and
fbstp
jno
dec
xchg
dec
lcall
mov
hlt
push
mov
loop
push
or
and
loop
and
in
fwait
xchg
xor
lret
cmc
scas
adc
push
je
adc
pop
fsubl
or
mov
movsb
xor
jo
dec
jle
shll
icebp
or
sbb
or
jne
insl
loop
xor
js
test
add
data16
fcmovnbe
test
in
or
arpl
and
pop
setl
insl
imul
or
add
test
xchg
xor
lcall
xor
aaa
aam
dec
or
sub
or
dec
in
nop
jl
mov
mov
movsb
inc
icebp
iret
or
pop
jae
enter
addr16
ret
fwait
es
push
scas
les
or
into
lret
cmp
mov
imulb
jo
push
inc
fiaddl
add
cs
arpl
in
cmc
fiadds
pop
inc
sahf
inc
xor
in
or
sbb
shlb
cmp
pop
pop
jle
scas
sub
mov
cmp
in
je
jne
imul
loop
cmp
cmp
jmp
int
mov
add
loope
or
loopne
ret
add
and
jb
mov
mov
addr16
and
shlb
cmpsl
aad
js
ja
pop
movsl
jb
and
shll
inc
cmp
stc
ds
jno
mov
shrb
add
lea
sbb
addr16
dec
jmp
rcrb
cmc
lods
sub
jmp
fwait
dec
jecxz
dec
sub
dec
pop
fs
stos
mov
or
pop
sbb
pop
lahf
mov
or
lock
fldenv
or
out
or
popf
sub
sub
sub
xorb
pop
sahf
sbb
xor
sub
test
fwait
add
sbb
jle
je
jno
mov
sti
mov
add
pushf
jmp
push
sub
sahf
mov
or
sub
adc
mov
js
pop
cwtl
fwait
aam
popf
movsb
pusha
lea
movsb
wbinvd
cmpsl
pop
pop
lock
in
jo
add
xchg
pop
jge
test
push
aaa
rolb
add
imul
jle
gs
add
mov
js
xchg
arpl
dec
mov
inc
jnp
out
xor
leave
add
mov
xchg
movsl
insb
sub
xchg
popa
dec
add
add
mov
nop
cltd
dec
xchg
push
movsb
cmp
insl
stos
pop
adc
sbb
imul
add
movsb
and
pop
pusha
xorl
xor
ss
loope
dec
es
mov
mov
xchg
dec
dec
mov
into
xchg
push
inc
mov
mov
add
shrd
ret
ljmp
add
push
cmp
daa
sbb
mov
mov
dec
imul
jne
dec
inc
in
daa
icebp
pop
push
and
add
cmc
sub
and
ja
ss
cmpsl
test
cmp
or
xchg
out
mov
lea
push
pop
xchg
adc
push
cmpsb
or
popa
push
xor
add
xor
aas
mov
jp
fcmovnb
xchg
inc
shlb
and
lahf
rol
or
adc
jmp
popf
lea
add
push
xorb
pop
or
cmp
xor
xor
es
xlat
mov
sub
loop
sub
lods
mov
testb
insb
dec
sarl
dec
xchg
ret
testb
dec
add
popf
or
adc
mov
ss
idivl
lds
mull
fwait
sarb
loope
ss
lock
je
movsb
mov
shl
mov
mov
xchg
add
shll
pop
shrb
cmp
dec
mov
out
jne
xor
daa
test
cmp
jecxz
mov
mov
cmp
insl
mov
pop
push
push
pop
sti
dec
loopne
ljmp
js
sub
and
test
push
aaa
gs
sub
fnstcw
mov
xchg
mov
aam
or
add
addb
andl
dec
out
mov
test
push
jp
mov
mov
test
push
xor
mov
leave
push
inc
xor
add
push
mov
ja
gs
add
jno
xchg
jge
push
cmpsb
xchg
out
pop
dec
imul
scas
int
out
shlb
mov
test
iret
and
iret
dec
inc
es
and
add
add
xchg
loope
imul
fcmovnu
xchg
test
ret
mov
movsb
pop
testl
push
add
movsb
in
out
stos
test
push
inc
mov
dec
cwtl
js
insl
gs
mov
cmc
pop
add
dec
imul
and
test
rcll
cmpsb
subl
fistl
add
lret
add
leave
push
sahf
nop
push
fcmovnbe
aaa
mov
mov
shl
xchg
jmp
fildl
push
fs
add
push
ljmp
or
adc
aad
lret
shlb
push
add
push
pusha
sbb
xchg
movsl
movsb
nop
add
mov
lahf
arpl
push
jle
stos
jmp
xchg
imul
pop
and
pop
insl
mov
rorl
or
test
int3
inc
push
mov
jnp
sbb
push
mov
ret
add
sarl
testb
aad
dec
pop
lret
cs
test
cmp
cmpsb
or
jecxz
pop
clc
sub
insl
add
cwtl
in
and
hlt
xor
or
rol
push
xchg
pop
inc
shll
rcrl
int
out
fwait
shrb
cmp
stos
push
shll
flds
mov
popf
push
iret
cmp
xchg
cmovo
test
inc
addr16
incl
outsb
push
push
inc
or
sub
fidivrs
mov
dec
repz
push
and
arpl
mov
xchg
mov
je
or
inc
andl
jp
es
sub
and
jno
std
fs
cmp
lods
rcll
fldenv
aaa
dec
fsqrt
jo
xor
frstor
push
insl
mov
insl
ja
and
or
and
push
fisttpl
push
xchg
mov
sti
pop
xchg
and
call
test
sub
push
or
inc
jl
jecxz
aaa
mov
aas
shlb
or
test
adc
insl
cmc
mov
daa
xchg
sub
jnp
pop
and
int3
add
jecxz
cltd
clc
fiadds
sub
call
cli
lcall
inc
arpl
push
mov
leave
adc
sar
sbb
scas
push
pop
cmp
push
lret
arpl
cmp
lcall
leave
lret
inc
jne
xor
ret
xchg
add
loop
repz
cmp
dec
mov
xchg
ds
push
test
sbb
test
push
rclb
ds
sbb
jnp
andl
jb
test
cmp
dec
dec
cmp
push
and
js
fdivs
aam
dec
clc
out
jns
fcoms
add
or
pop
xlat
sbb
inc
orl
and
and
ds
fs
inc
iret
xchg
jg
push
cli
xor
mov
cmpsb
movsb
pop
repz
jmp
in
ret
mov
mov
and
dec
pop
push
lahf
xchg
dec
and
or
jmp
pop
gs
xor
add
sub
push
and
les
or
cwtl
lret
jae
pop
mov
sar
pop
xor
fnstsw
add
push
popa
and
push
add
pop
dec
mov
add
fisubl
dec
xor
aas
daa
cmpsb
ljmp
out
cmp
jl
pop
insb
icebp
test
scas
cmp
cmp
pop
das
outsb
sub
sbb
push
and
mov
mov
cltd
popf
dec
sbb
fadd
push
push
sbb
cmpsl
shrl
push
das
into
xchg
add
and
cmp
and
inc
pop
js
mov
push
les
sub
pushf
ror
in
adc
fisubs
mov
rol
jl
jo
adc
and
test
inc
punpcklbw
fadds
adc
arpl
pushf
inc
and
test
xor
pop
andl
inc
mov
lods
inc
mov
jnp
ja
outsb
jo
adc
mov
push
mov
mov
out
leave
shlb
and
push
clc
fildll
sub
es
and
mov
dec
and
pop
inc
movsb
enter
sub
add
and
xchg
fiadds
je
sbb
add
and
clc
jno
sbb
push
inc
cld
movsb
push
adc
cmpsl
mull
add
cmc
notl
cmp
xchg
popl
push
mov
adc
sub
mov
ja
push
cld
and
clc
push
in
in
sarb
out
test
lods
stos
sbb
jb
mov
push
pop
insb
xor
out
or
loop
xor
enter
lcall
pop
inc
mov
insb
and
insb
mov
xchg
daa
rcrl
adc
mov
sub
aam
xlat
push
out
mov
insl
adc
xchg
cmp
adc
sarb
nop
ja
fwait
and
lods
push
cmp
les
dec
loope
and
lcall
push
push
imul
adc
push
wrmsr
pop
cli
xor
mov
ja
dec
inc
addr16
xchg
addb
call
jo
sbb
sub
loop
adc
xlat
inc
rcl
jmp
je
popf
sbb
dec
scas
and
jno
cmp
dec
dec
push
hlt
dec
adc
sarb
inc
mov
xor
and
repz
and
stos
arpl
jae
mull
add
cmpsb
ds
loopne
fst
mov
into
xor
xchg
dec
les
push
subb
mov
push
mov
add
adc
out
mov
jge
mov
sub
mov
dec
add
and
jl
stos
cltd
subb
dec
dec
loopne
xchg
or
popa
xor
pop
mov
test
repnz
mov
push
cmpsl
jbe
and
mov
mov
sahf
pop
or
push
sub
push
sub
addr16
outsl
xchg
and
and
out
ret
sbb
pop
push
xchg
test
add
add
inc
lods
inc
js
dec
fistl
les
add
xorb
int3
inc
pop
or
ret
sbb
pop
sub
inc
in
and
add
dec
jle
rclb
sbb
scas
add
fucomi
sub
jmp
iret
mov
std
mov
int
out
aaa
or
mov
mov
icebp
and
xlat
rsm
push
jmp
ret
jns
push
movsl
ds
das
jg
in
and
roll
test
hlt
fucomp
into
out
icebp
add
daa
sbb
dec
pop
std
int
push
adc
daa
mov
mov
push
ss
movsb
inc
sub
dec
mov
scas
or
jp
icebp
push
ja
push
and
scas
push
push
lods
add
ret
ljmp
push
mov
fists
or
or
movsl
mov
pop
xor
or
test
scas
ret
mov
pop
pop
divps
std
xor
pop
ja
jp
bound
shl
fsts
or
fisubl
rolb
xchg
xchg
add
adc
jge
ja
loope
roll
push
popl
and
sbb
rorb
xchg
aaa
jns
pop
movsb
test
shrl
loope,pt
mov
into
cmpsl
es
hlt
push
jl
loopne
stc
push
mov
push
daa
ds
ja
cmp
stc
movsl
rorl
pop
mov
ja
dec
rcrl
push
inc
mov
xchg
mov
push
cmp
imul
repz
or
mov
aaa
lea
aad
sbb
rcrl
sub
jl
repnz
mov
adc
das
mov
xchg
in
aad
sub
icebp
mulb
aas
push
jmp
mov
fisttpl
sbb
fnstsw
jge
sahf
not
cmp
jo
js
adc
popa
sbb
pusha
imul
scas
push
scas
lods
ljmp
test
ja
hlt
cmpsb
lahf
push
lahf
mov
popa
stos
inc
dec
dec
jo
aaa
add
mov
mov
faddl
outsl
roll
imul
sub
test
push
imull
daa
inc
mov
pop
frstpm(287
cltd
jmp
movsl
lahf
push
rcr
mov
stos
aaa
inc
or
cmp
fldenv
inc
cmpsb
push
xor
push
or
jo
loopne
or
mov
sbb
adc
sub
test
movsb
clc
add
mov
ret
and
cs
mov
or
daa
or
pushf
or
and
mov
sbb
jle
faddl
shll
test
test
sbb
jne
dec
in
rcrl
clc
cmp
add
fsubs
loope
add
jnp
jb
addr16
bound
das
push
jb
and
push
and
adc
divl
icebp
enter
jle
mov
cmpsl
and
sbb
bound
adc
adc
push
shlb
xchg
mov
mov
jno
jo
or
push
pop
push
sbb
sahf
cmp
repz
in
aam
das
push
bound
push
inc
sub
or
ljmp
inc
add
pusha
or
int
add
pop
mov
rorb
test
adc
addl
data16
js
imul
push
divl
cs
mov
not
xor
fdivl
jmp
jle
mov
jo
xchg
getsec
inc
les
lock
add
or
ja
xchg
inc
mov
sub
daa
xor
sbb
inc
outsl
lea
lret
ljmp
mov
cmp
movsl
push
xchg
insb
mov
lock
pop
ret
dec
and
pop
imul
fs
sbb
push
sub
dec
inc
or
xor
add
adc
sarl
ja
mov
sub
xor
pusha
rcr
mov
adc
pop
add
or
outsl
popa
fnstenv
adc
sbb
jo
fistps
jmp
cltd
xchg
dec
pusha
aas
push
ja
shr
mov
xchg
aam
popa
and
loope
fwait
pop
movsb
lods
imul
subb
ja
pop
arpl
lds
js
push
xlat
or
je
pop
imul
xlat
add
ja
mov
jnp
dec
sbb
dec
mov
or
pop
push
das
test
jb
adc
mov
cmp
lea
pop
xchg
sbb
mov
loope
in
cmp
int3
data16
mov
das
mov
add
sahf
insl
xorl
sbb
insl
sbb
push
add
jns
adc
int
xor
cltd
mov
dec
jp
dec
test
pop
or
loopne
sbb
call
daa
lods
das
xchg
lock
xchg
cld
std
adc
lods
add
push
mov
lcall
jae
test
andb
fsubrs
inc
out
jmp
mov
sbb
ret
les
ret
pop
scas
xchg
mov
test
mov
bound
jbe
out
and
jnp
lret
mov
add
cmp
clc
dec
sbb
sub
movsb
fmulp
push
push
fs
dec
xor
mov
push
sbb
hlt
popa
cmp
mov
xor
inc
fwait
gs
xchg
add
out
mov
out
pop
cs
int3
popa
pop
sub
inc
cmc
and
jbe
fwait
jg
xchg
repz
jecxz
or
roll
xchg
imul
test
pop
insb
sbb
inc
jno
add
fucomp
jo
jecxz
mov
rcrb
mov
inc
pop
cmp
or
aam
test
out
cmp
loopne
shl
aad
push
mov
adc
insb
xchg
leave
aaa
sbb
daa
subl
xor
test
popa
rclb
xchg
sbb
scas
lea
pop
push
je
ljmp
add
mov
cld
push
clc
pop
iret
jno
arpl
sub
sub
test
jle
pop
loope
mov
jo
mov
insb
dec
add
cld
push
and
adc
adc
rolb
movsl
xor
leave
jl
cmpb
or
adc
je
lret
sbb
mov
jb
test
jb
es
push
dec
aaa
pop
push
or
jae
fldenv
xor
fsubl
ljmp
push
lret
jp
out
movsl
push
gs
jbe
mov
sarb
sbbl
in
and
or
cli
les
fbstp
pusha
addr16
adc
out
pop
into
xchg
pop
mov
loop
cmp
mov
push
ret
movsb
fldcw
outsb
jecxz
push
in
mov
add
adc
mov
xchg
add
inc
xchg
push
imul
in
je
mov
lods
popa
mov
lcall
lret
insb
sub
jecxz
adc
neg
sbb
mov
cwtl
aam
and
fisubs
adc
or
sbb
pop
fistpll
mov
and
push
sbb
mov
xchg
pop
or
aaa
sub
sub
add
loopne
jno
inc
les
in
jnp
mov
out
adc
pop
movsb
push
lret
movb
and
push
xchg
aaa
adcb
sti
test
repz
insl
and
jne
jnp
lahf
inc
sbb
sub
test
int
ret
inc
popa
sti
cmp
and
adc
and
sbb
ret
mov
add
fnsave
mov
test
push
daa
mov
inc
and
xlat
jne
lret
push
ljmp
jge
popa
add
or
xchg
pop
xor
mov
stos
mov
mov
scas
popf
sub
je
dec
test
aad
and
xlat
sbb
or
dec
lea
push
or
clc
rcr
addr16
mov
fcomps
sbb
ds
dec
inc
push
lds
icebp
mov
adc
jno
insb
addr16
loope
pop
push
les
and
ret
sbb
xor
sub
subl
or
bound
fcoms
lahf
bound
ret
clc
mov
sub
pop
scas
lcall
mov
call
adc
mov
add
push
jge
lock
rcrl
test
out
xchg
adc
jecxz
test
jno
sbb
cmp
and
push
fcmove
sub
mov
pop
lea
and
jo
or
test
mov
cmp
int3
daa
and
add
aas
adc
call
and
test
xchg
mov
add
inc
add
imul
cmpb
fwait
jmp
fsts
insb
inc
xchg
enter
test
pusha
add
test
mov
sbb
jmp
jle
or
inc
bound
sbb
fs
lods
push
lds
sbb
xor
add
aas
dec
dec
lret
inc
xor
les
inc
lea
pop
sub
or
in
adc
mov
stos
push
sbb
gs
adc
testl
push
mov
mov
jecxz
jg
inc
ret
cmp
jo
hlt
mov
jmp
xchg
mov
and
mov
test
xchg
or
mov
push
xor
scas
pop
xor
add
push
test
xchg
popa
push
jl
sbb
bound
or
nop
xor
insl
push
cwtl
es
or
sbb
lods
ror
cmp
cmp
jmp
sbb
and
jmp
xor
and
xor
sbb
shrb
jae
popa
sbb
mov
xorl
xchg
xor
push
sub
xchg
xor
mov
xchg
cli
repnz
mov
xor
push
dec
int
cmp
pop
rclb
xor
cmp
daa
loopne
outsl
bound
pop
cmp
testb
out
enter
inc
orb
cmp
push
jae
or
out
inc
int3
sbb
add
and
in
fists
mov
add
lock
xor
test
fnstenv
mov
mov
xchg
sbbl
mov
mov
xor
push
add
outsb
sbbl
sbb
mov
mov
pusha
std
inc
inc
pop
jp
sub
push
mov
pop
js
mov
mov
jge
mov
popa
test
arpl
std
jo
lcall
add
mov
pop
jo
jle
lea
sub
or
test
leave
imul
fsubrs
mov
add
je
add
jae
push
sbb
adc
test
out
popf
lret
ljmp
dec
rolb
inc
push
adc
ret
loope
mov
add
add
xchg
scas
pop
ret
jae
dec
loopne
cmp
mov
mov
push
add
mov
and
or
cmpsl
test
pop
adc
call
jno
data16
icebp
scas
jg
push
enter
outsl
and
push
cs
pop
and
mov
imul
bound
aaa
inc
pop
mov
mov
insl
test
xor
mov
or
cmp
mov
pop
incl
repz
dec
or
cmp
and
and
adc
sub
test
sub
lret
les
xchg
sti
filds
hlt
and
fs
jb
mov
mov
dec
or
mov
dec
jae
ret
nop
jecxz
push
jl
aaa
xor
jnp
push
sub
sub
xor
add
mov
add
add
add
xor
aaa
lcall
add
xchg
inc
mov
lods
int
xchg
adc
xor
pop
mov
daa
add
pop
insl
ficoms
pop
push
adc
mov
and
mov
mov
push
jo
push
pop
push
add
sbb
arpl
and
mov
fwait
addr16
mov
out
mov
push
add
dec
adc
repnz
aad
jge
xchg
lock
sub
and
icebp
inc
xor
dec
cmp
or
jecxz
aam
push
jle
push
sub
or
psubq
or
jno
dec
cmpsb
ret
pop
lods
in
rcll
add
loope
sahf
dec
fldcw
test
dec
daa
mov
lds
sbb
sub
xchg
jo
test
outsl
cmpsb
fs
fmull
or
inc
subl
add
cs
jb
js
lcall
add
inc
nop
push
xor
xlat
xchg
mov
cmp
mov
lods
and
jge
ja
add
jl
pop
incb
dec
imul
dec
push
dec
dec
int
pop
fmuls
and
add
jge
pop
aam
push
adc
sub
jbe
daa
arpl
jl
xchg
pop
ret
ror
je
push
xlat
rorb
sub
pop
add
and
flds
xor
add
ret
add
inc
arpl
mov
sbb
jl
jnp
sub
hlt
mov
push
popa
push
outsl
jno
sbbb
cwtl
inc
jbe
or
fcompp
cmp
push
xchg
js
rorl
lret
xchg
sub
pushf
push
add
sbb
sbb
mov
xor
dec
ret
pop
andb
jae
push
adc
imul
dec
adc
jle
mov
dec
gs
push
push
pop
and
loopne
and
xor
and
inc
pop
in
mov
fcoml
out
and
xor
add
fcomps
in
fnstenv
dec
add
cmp
sti
lret
fwait
cmc
and
mov
push
sbb
cmp
aas
push
inc
shr
inc
outsl
push
popf
add
mov
loope
dec
or
adc
loop
adc
jbe
iret
push
xor
rolb
add
and
pusha
ret
iret
add
and
mov
popa
jne
or
or
adc
out
or
movsb
aaa
roll
dec
test
rolb
cwtl
mov
jmp
insl
push
adc
xor
dec
push
dec
pop
xchg
fwait
sub
mov
and
subl
jnp
or
daa
mov
test
mov
adc
pop
test
push
clc
xchg
imul
in
addb
or
push
or
mov
push
subb
push
outsl
adc
sbb
pop
push
inc
push
or
add
push
lret
jno
test
adc
icebp
fidivs
sub
push
das
pop
mov
or
xor
ret
in
test
cmp
lret
pop
add
mov
mov
ss
mov
daa
ret
outsb
popa
jns
insb
scas
or
test
es
cmpsl
and
adc
imul
pop
sbb
inc
mov
outsl
adc
cmp
push
jne
lods
jb
add
mov
pusha
repz
or
mov
mov
inc
lret
sti
sbb
rcl
loop
sbb
divl
mov
sbb
fnstsw
cmp
test
arpl
add
insl
xlat
jo
icebp
adc
les
in
xor
orb
adc
mov
add
insl
aam
mov
insl
clc
jmp
xchg
xor
add
sbb
xor
push
mov
add
or
mov
inc
mov
jmp
outsl
cvttps2pi
pop
sbb
adcl
lea
sbb
sbb
mov
imul
push
inc
adc
inc
push
or
pop
aaa
adc
sbb
pop
add
outsb
mov
xor
das
lock
inc
out
push
add
xor
sub
add
fldt
ss
inc
push
fmul
add
mov
sbb
rcrb
sarl
add
fidivrs
xor
dec
lahf
push
rolb
push
mov
insb
insb
xor
icebp
loop
sbb
lea
and
adcl
leave
adc
add
dec
in
mov
aaa
pusha
pusha
xchg
push
sub
mov
xorl
loop
movsl
jle
test
orb
scas
push
mov
sbb
cmp
in
push
cltd
xchg
dec
dec
cmp
cmp
xor
push
cmp
adc
xchg
xor
adc
subl
imul
clc
imul
push
mov
movsl
xchg
clc
push
lock
xchg
insl
cmpsl
jp
loopne
es
dec
pushf
pop
movsl
or
notl
sbb
enter
ret
dec
mov
dec
in
xchg
cmp
mov
mov
test
and
add
scas
fadds
sub
push
ret
pop
xchg
insl
push
push
adc
xor
mov
outsl
add
push
fs
mov
xchg
ret
lcall
das
and
mov
sub
and
and
cmovne
xchg
sub
jo
pop
mov
jle
dec
sbbb
ret
dec
xor
push
lahf
adc
stos
ja
or
mov
out
addl
imul
ja
mov
adc
sub
outsb
push
loope
mov
and
and
fisttpl
jno
add
mov
in
inc
jnp
test
shl
lods
jmp
xor
cmc
adc
jl
or
xchg
test
sub
sbb
movsb
fistps
das
mov
nop
js
or
cwtl
iret
sti
fcompl
or
rorb
dec
or
and
push
inc
and
aam
addl
lods
lcall
or
aaa
add
sahf
dec
pusha
dec
jmp
adc
lahf
and
testb
lods
pop
movlps
push
outsl
movsl
adc
aaa
jp
je
fisttps
ret
pop
test
cmp
fisubrs
xor
iret
outsb
hlt
mov
pusha
push
and
jmp
xchg
pop
fsubl
xchg
icebp
and
mov
faddl
divw
fldenv
lret
xor
nop
dec
push
iret
sbb
stos
rorl
andl
adc
lds
add
or
ret
cmpsl
je
data16
add
cs
loope
sub
push
pop
mov
and
add
or
lods
xor
push
ja
add
mov
sub
daa
add
cmc
jmp
ss
inc
or
popa
lcall
ret
aaa
fwait
sub
xchg
push
clc
bnd
pusha
repnz
loopne
add
cmpl
lea
adc
push
popf
cmp
lret
sub
xor
push
outsb
loop
mov
inc
stos
cmp
jns
dec
and
sbb
sub
test
scas
test
int3
adc
cmp
pop
stos
push
mov
fnstenv
stos
dec
or
mov
xor
inc
xchg
mov
fimuls
mov
ret
lods
in
test
arpl
pop
mov
arpl
pop
cltd
mov
sbb
mov
jno
lahf
aas
adc
dec
stos
push
inc
push
shll
or
push
je
pop
daa
out
sub
arpl
leave
ret
scas
iret
add
psubsw
mov
add
jns
push
pusha
loopne
dec
xchg
mov
enter
xorb
jne
or
in
les
xchg
lods
test
filds
pop
inc
push
or
js
js
lds
ficompl
dec
in
pop
adc
pop
mov
push
sbb
rolb
push
cmpsb
repz
pop
in
or
mov
cmp
mov
xor
sbb
or
insl
fs
inc
call
pop
sub
jbe
sarb
xor
jb
je
xchg
je
pop
mov
sbb
jnp
aas
pusha
sbb
push
fiaddl
dec
adc
jns
adc
aam
and
stos
in
adc
jcxz
xlat
dec
je
add
outsl
pusha
shlb
shll
outsb
add
loope
ret
inc
xlat
mov
pmaddwd
rclb
roll
sub
inc
sub
or
dec
ret
sub
and
inc
dec
adc
and
bnd
adc
add
sub
xchg
and
sub
push
xchg
jp
inc
or
lret
fdivrl
sub
cmp
cmpsl
inc
mov
push
roll
jge
les
scas
pop
cmp
insl
sub
cmp
cmp
cmp
and
loop
mov
dec
and
inc
mov
sbb
dec
dec
and
mov
lods
and
imul
inc
movzwl
inc
xchg
mov
dec
add
and
test
push
inc
xchg
adc
sbb
loop
xchg
andb
cmp
sub
rclb
xor
inc
repnz
push
inc
fs
addr16
push
insl
loop
pop
xchg
popf
scas
cmp
pushf
xchg
je
sub
mov
dec
or
pusha
fs
ja
adc
mov
call
rclb
loopne
inc
rcr
add
inc
nop
xor
mov
add
xlat
roll
clc
subl
test
mov
xchg
dec
std
cmp
push
xor
out
cltd
mov
mov
cmp
test
pop
inc
js
or
or
mov
enter
jno
jne
movsb
xchg
mov
inc
dec
setno
jecxz
pop
mov
mov
sarb
fcomp
mov
loopne
sbb
invd
xchg
or
cmp
daa
push
xor
stos
add
xor
xlat
fwait
and
cmpsb
pop
push
push
pop
arpl
mov
cmp
push
xor
jbe
jo
or
pop
or
push
call
enter
add
aam
and
pop
sahf
rol
fldl
dec
jae
or
inc
cmp
mov
adcl
xor
inc
add
popa
cmc
pop
pop
push
sub
xchg
sub
js
sarl
popa
sbb
mov
add
add
fsubrl
iret
pop
add
mov
or
adc
and
jg
ja
mov
push
xor
and
adc
mov
and
jmp
add
dec
mov
stos
mov
and
xor
addb
out
fbstp
cmp
sub
popf
xor
adc
loope
out
sub
add
inc
lods
shlb
or
outsl
xor
sbb
lds
iret
inc
popa
inc
mov
mov
cmp
push
or
jne
jmp
dec
dec
or
xchg
or
and
cmp
inc
pop
mov
push
scas
xor
movsb
pushf
insb
insl
fadds
sub
sbb
xchg
aam
pop
enter
inc
push
jmp
enter
push
or
xchg
jns
das
nop
movsl
aam
dec
sbb
pop
ss
movsl
mov
or
into
mov
stos
insb
push
sbb
or
and
or
shl
fadds
inc
sub
adc
addr16
pop
mov
pop
call
push
sbb
push
inc
mov
push
and
jmp
iret
or
cmp
nop
xchg
incb
pusha
mov
stc
adc
mov
jnp
xchg
les
xlat
add
dec
nop
xchg
mov
sub
cmp
repz
add
rolb
addb
imul
inc
insl
add
daa
or
adc
inc
movl
add
jle
mov
add
or
test
inc
lahf
jns
and
inc
out
mov
in
es
add
sub
and
dec
iret
cmp
inc
iret
sub
into
mov
subl
ret
xorl
pop
lcall
stos
pop
inc
add
bound
and
enter
ja
shrl
ja
push
cmpsb
ret
rcl
jns
hlt
cltd
inc
cmp
and
xchg
test
es
and
lea
sbb
shrl
arpl
loopne
pop
pop
mov
jo
inc
or
out
lods
adc
sarb
cs
loopne
pop
mov
pop
push
jp
add
sub
pop
pop
imul
or
or
lea
ror
or
repz
dec
add
loopne
aad
fcmovnb
dec
add
mov
xchg
pop
add
movb
in
lahf
pop
and
fisubl
jns
mov
adc
imul
in
arpl
and
dec
ret
std
rcrl
and
jo
push
icebp
imul
adc
inc
xchg
inc
aam
ss
lret
inc
cwtl
add
xchg
dec
mov
test
call
or
dec
xchg
mov
cmp
dec
sbb
mov
xchg
push
add
adc
cmp
outsb
xor
mov
push
and
lock
pop
xor
add
jnp
push
icebp
mov
push
sti
into
and
mov
adc
nop
push
push
pop
adc
movsl
aam
mov
or
add
outsb
enter
fwait
and
adc
arpl
xor
dec
xor
xchg
add
imul
pop
inc
mov
mov
push
push
push
inc
roll
push
rcrb
add
out
adc
test
insl
inc
push
mov
or
lods
in
add
in
pop
add
or
inc
mov
push
or
test
sub
cmp
mov
repz
adc
mov
sbb
mov
adc
fsts
pop
sbbl
lahf
add
and
and
add
mov
aaa
or
mov
pop
cmp
mov
and
xor
jne
xor
rorl
insb
mov
sbb
inc
ret
int
inc
or
mov
and
ffree
shrb
xchg
jg
rcrb
dec
pop
fisttps
insl
inc
testl
adc
mov
and
inc
push
inc
popa
pop
and
mov
dec
int
out
fwait
mov
out
dec
or
add
loope
mov
sbb
mov
add
addb
xchg
outsl
sbb
sbb
push
jo
sbb
pop
add
inc
nop
pop
and
lods
jns
arpl
das
arpl
xor
lock
pop
shrl
insl
pop
les
dec
sbb
lcall
sub
push
rolb
xchg
adc
pop
loop
loope
in
mov
les
insb
jecxz
xor
sbb
cmp
aad
notb
adc
aad
sbb
out
cmp
fldt
test
adc
cmp
xchg
pop
pop
les
ret
pushf
adc
push
sub
inc
outsl
xchg
mov
mov
mov
pusha
insl
pushf
sub
scas
cmp
sub
ja
push
rorl
dec
add
pop
ljmp
mov
lods
push
inc
or
and
nop
push
daa
push
adcl
ret
cltd
jns
adc
sbb
les
jecxz
dec
adc
stc
push
mov
leave
dec
outsb
jle
int
sbb
loope
stc
mov
mov
lea
sbb
mov
rolb
or
inc
imul
push
test
in
aaa
test
adc
fwait
rcrb
add
cmp
and
adc
xor
add
mov
inc
call
cmp
movsl
adc
xchg
divb
jns
aaa
adc
add
pop
pop
mov
cmpb
repz
mov
pusha
aad
aas
push
icebp
mov
out
repz
adc
cmp
and
lods
sub
adc
cmc
movlps
sbb
sbb
mov
jo
and
rcrl
fcmovnu
or
movsb
out
push
push
ljmp
cmpsb
push
std
shlb
sub
or
or
mov
inc
popa
test
xchg
jae
cmp
imul
cmp
data16
jns
ljmp
rclb
sbb
add
and
jo
lock
jbe
imul
inc
push
out
imul
inc
sbb
pop
and
pop
inc
push
xor
add
fwait
in
mov
xchg
mov
mov
jge
sbb
cmp
das
or
xor
rolb
daa
js
in
or
cltd
nop
cmp
ja
push
dec
sbb
pop
outsl
adc
mov
fildl
por
dec
addb
leave
and
shll
cmpsb
icebp
pusha
jmp
pop
jecxz
lcall
call
and
add
movsl
daa
fsubrs
pusha
and
decl
mov
mov
or
jne
add
mov
sub
fimuls
jle
outsl
or
xchg
mov
test
mov
das
fsts
and
pop
aaa
or
mov
sbb
add
cwtl
rol
mov
or
and
or
adc
mov
ds
mov
push
add
testl
lea
push
cmpsl
cmp
xor
enter
bound
xchg
gs
mov
movsb
or
fists
movsb
test
add
sbb
sub
add
out
xchg
clc
movsb
fwait
or
push
add
inc
fcoms
jb
cmpsl
je
daa
xchg
and
or
cs
sub
ds
inc
popa
inc
imul
cmp
and
mov
add
roll
fstl
xor
add
mov
sbb
pop
sub
arpl
mov
push
jl
mov
push
mov
movsb
adc
pusha
clc
mov
in
or
mov
cwtl
bound
cmc
dec
push
fists
xchg
sbb
lods
and
mov
cmp
aas
orl
addr16
sbb
enter
xchg
rclb
mov
movsl
mov
dec
adc
mov
add
pop
shrl
test
ljmp
push
mov
call
adc
punpckldq
add
pop
pop
sub
pop
in
fisubs
sub
xchg
xlat
sbb
pop
xchg
adc
mov
decl
or
jo
fiadds
int
mov
push
lcall
pop
lahf
addb
inc
mov
test
cwtl
push
movb
inc
cli
and
jbe
roll
pop
and
jp
les
push
pop
mov
fsubrs
mov
inc
sar
mov
je
mov
inc
fcomp
in
loope
sub
addb
rol
ficomps
push
push
add
sub
icebp
outsl
mov
and
add
hlt
push
cmp
pop
xor
lods
pop
es
ss
fs
testl
dec
fs
or
scas
sub
pusha
push
lods
add
imul
add
mov
loope
mov
leave
cmp
sub
push
and
outsl
add
adc
adc
add
loopne
xchg
push
and
push
pop
inc
sbb
pop
repz
jp
popa
fnstcw
inc
inc
push
cmp
jbe
sbb
mov
or
imul
loope
lods
int3
sbb
lods
push
add
xor
ds
adc
sbb
cmp
mov
inc
sbb
jmp
aaa
cmp
lahf
aam
cld
pop
pop
add
fdivs
xchg
lret
inc
cmp
jb
lea
shrl
dec
add
dec
les
inc
popa
daa
orb
jae
jge
aaa
push
lock
ss
xor
iret
outsl
dec
fwait
je
xchg
lds
push
sarl
rorl
sbb
and
imul
jecxz
test
in
sbb
rcr
test
and
dec
cwtl
imul
lret
dec
add
pushf
xor
xor
loope
fcmovnb
xchg
popa
daa
sbb
stc
aam
dec
shlb
loope
pop
jge
clc
adc
sbb
mov
inc
mov
push
cmp
outsb
or
loop
bswap
mov
scas
or
sub
xor
inc
adc
mov
mov
mov
frstor
test
rorl
jge
jno
pushf
movsl
pop
ret
or
add
fcoml
and
test
mov
outsl
fchs
adc
fldl
pop
add
adc
ret
jle
movsb
dec
es
pop
rcrl
mov
rolb
insb
pop
mov
je
pop
loope
fcmovnbe
fcmovb
sbb
in
mov
enter
int3
mov
ss
adc
jb
add
jle
mov
push
sbb
or
jecxz
lea
call
inc
adc
test
push
cmpsb
adc
sbb
sbb
movsl
cltd
mov
or
adcb
call
movsl
mov
push
test
add
sbb
sub
aaa
cmp
mov
adc
sbb
push
push
adc
add
xor
cmpsl
stos
ret
inc
push
movsb
fdivl
lock
push
inc
mov
xor
mov
cmp
les
add
int3
inc
loop
cmp
inc
or
push
xor
mov
nop
add
xchg
and
mov
xor
rcrl
pop
sub
jg
dec
inc
push
leave
jge
add
sbb
or
xor
aam
mov
movsb
lds
add
xor
sub
cmp
add
xorl
iret
add
ss
sub
call
in
jo
call
dec
movsb
pop
fwait
add
xchg
xor
sbb
adc
jl
dec
push
or
adc
insl
mov
adc
or
xchg
xor
das
dec
cmp
xchg
andl
xchg
leave
add
and
add
sbb
test
aaa
mov
test
pop
out
add
mov
fs
rorb
in
xchg
test
mov
in
add
pop
sub
movsb
add
add
mov
and
insl
push
or
rcl
shll
and
add
sbb
fwait
stos
cmp
jno
pushl
scas
popa
and
ljmp
add
sub
adc
add
push
sbb
dec
cmc
loope
jmp
mov
or
fwait
cmp
add
pusha
pusha
aad
les
gs
insl
aam
xor
aad
lret
outsl
addb
push
add
push
smsw
inc
loop
test
sub
std
add
push
xchg
gs
xchg
pop
push
sbb
pop
dec
add
xorl
movsl
movsb
shl
inc
cwtl
dec
inc
add
lock
ds
and
inc
mov
xchg
adc
lods
mov
clc
addr16
pop
lods
lods
sub
fdivl
jne
adc
xchg
pop
xchg
xor
push
cmp
mov
and
push
jns
popa
lods
dec
adc
and
pop
sub
mov
cwtl
cmp
and
aaa
adc
test
movsl
popf
and
cmp
mov
fwait
sarb
sbb
movsl
test
dec
ret
xchg
add
xchg
and
out
les
addl
sub
repnz
add
mov
push
sbb
fmuls
mov
movsl
rolb
and
add
adc
ss
test
inc
es
mov
cli
out
or
int
ret
inc
push
xchg
shlb
mov
aam
add
xchg
sub
adc
lods
push
xor
push
push
mov
std
push
push
fimull
add
mov
outsb
dec
mov
xor
inc
or
mov
push
ret
pop
mov
inc
or
or
cmp
sbb
or
xchg
cmpsb
mov
push
and
mov
int3
and
das
xor
jg
cwtl
in
or
test
push
jp
pop
mov
fwait
push
jmp
sbb
mov
add
fwait
movsl
stos
push
mov
xlat
out
scas
mov
inc
add
imul
mov
jg
pop
scas
jae
bnd
rep
mov
sbb
sub
outsl
cmpsb
xchg
and
sub
popa
push
stos
sub
pusha
aam
push
and
ret
ret
pop
ret
mov
mov
adc
mov
negl
cmpsb
rcl
aaa
cmpb
iret
adcb
and
cmp
into
sub
sub
prefetch
jae
orl
bound
cmp
jns
add
loop
mov
jnp
add
add
out
adc
and
inc
adc
loope
xchg
lods
dec
insl
movsl
loope
and
add
arpl
push
rorb
pop
jbe
adc
pop
pop
cmpsb
imul
xor
pop
scas
sub
xchg
push
out
sub
movsl
mov
test
adcl
ds
jo
fildl
pop
lock
shlb
xchg
xor
add
js
jecxz
mov
push
add
incb
insb
pop
cmp
xor
inc
testl
addl
mov
add
push
pop
xchg
xor
and
mov
xor
adc
shlb
movsb
add
adc
push
dec
push
popa
and
dec
dec
add
cmp
inc
mov
dec
cmc
fs
or
add
push
shll
or
aad
movsb
mov
sub
xor
pop
sub
mov
or
cltd
jecxz
arpl
dec
pop
mul
mov
or
push
aaa
adc
or
sti
daa
xchg
fcom
or
mov
xchg
jb
add
rolb
xor
and
movsb
hlt
fisubs
mov
sub
test
inc
push
push
mov
cs
popa
movsb
pop
mov
sub
dec
jmp
and
and
loope
and
fadds
fldt
rol
rcrl
cs
jbe
into
mov
outsl
out
enter
test
faddl
add
inc
sbb
out
pop
cmp
xor
adc
dec
pop
mov
les
push
inc
and
or
stc
out
loop
sbb
mov
aam
mov
sahf
push
fbld
sbb
cmp
stc
arpl
test
push
adc
inc
dec
arpl
pushf
cwtl
push
mov
cmove
pop
stos
add
cmovle
cmp
out
xchg
shlb
fs
test
repz
xchg
imul
dec
add
cmp
inc
adc
es
mov
jge
xchg
xchg
ficoml
push
das
xor
sub
sub
bound
xchg
xor
adc
ret
cmc
aam
sarb
adc
add
shrb
loop
int
lods
loope
fwait
clc
movsb
add
mov
xchg
int3
and
inc
xchg
das
mov
repz
push
add
sbbb
lret
loop
mov
inc
in
mov
xchg
das
sub
rclb
push
add
addr16
and
movsb
jbe
loopne
mov
jge
scas
test
xor
cld
dec
adc
jne
movsl
clc
sub
or
rol
inc
or
sahf
orb
adc
out
xor
sbb
push
adc
and
fdiv
adc
test
iret
ds
pusha
and
aaa
clc
dec
test
scas
dec
inc
fsubs
inc
and
jge
dec
pop
xchg
pop
cmp
dec
dec
mov
and
dec
add
xor
xor
add
cli
sub
inc
xchg
leave
mov
ds
sub
add
dec
cmpsl
jmp
xor
sbb
jbe
adc
insl
sub
addb
dec
xor
es
daa
lahf
mov
xor
mov
lahf
and
xor
or
sub
insl
dec
jmp
addl
mov
rcl
mov
subb
mov
movsb
daa
icebp
mov
prefetchwt1
mov
les
test
dec
mov
gs
add
add
pop
push
rcl
ljmp
add
adc
pop
xor
adc
xor
ljmp
lods
jl
push
scas
iret
dec
leave
fcomp
push
push
sbb
fxch
test
test
cmp
xchg
mov
and
lock
arpl
movsl
mov
in
fadds
mov
mov
and
nop
inc
stos
repz
and
daa
mov
mov
or
sub
mov
int
dec
lods
xchg
mov
push
lea
rcll
jno
rorl
jnp
enter
pop
dec
pop
out
inc
inc
pop
stos
pop
scas
and
daa
movsb
push
fsubs
add
test
je
push
push
inc
or
pop
push
and
rcll
pushf
push
in
pop
add
js
jmp
or
sbb
dec
and
push
ret
int
inc
out
cmp
sub
inc
adc
mov
sahf
popf
mov
and
mov
leave
mov
jae
les
mov
call
add
and
xor
aam
xor
cmp
es
mov
or
jno
lea
pop
add
jno
mov
aad
and
insl
cmp
sahf
lret
xchg
lahf
jge
ja
rcr
add
stos
add
aad
arpl
or
fldenv
xchg
push
add
stos
cmpsl
sub
inc
sarb
hlt
dec
sbb
imul
and
lahf
dec
mov
add
xor
lahf
ljmp
popf
push
gs
xor
cs
insb
scas
add
push
aaa
sbb
adc
mov
inc
fadd
pop
jns
xchg
xchg
arpl
add
and
ja
sub
cmp
cmp
movsl
pop
dec
loope
mov
cltd
push
das
scas
int3
add
pushf
and
es
and
add
jo
adc
fwait
pop
js
cmpb
int3
outsl
popa
sbb
or
addr16
adc
adc
mov
arpl
test
or
fistpll
sbb
out
aaa
sbb
int3
insb
imul
push
xlat
add
lock
jge
xchg
stc
pushf
mov
mov
ja
push
dec
popa
outsl
mov
pushl
dec
int3
test
popa
mov
and
test
mov
sbb
fadds
mov
repz
xor
mov
testb
cmp
aam
sub
rcl
enter
aaa
dec
pop
add
pop
dec
sub
add
adc
aas
pop
mov
xor
and
sbb
mov
sub
jo
or
addl
adc
test
or
je
aaa
mov
movsl
rcrl
fld
or
jp
jecxz
shl
or
cmpsb
add
test
adc
push
sbb
out
imul
lahf
add
clc
clc
testl
inc
and
es
and
call
icebp
xchg
lds
test
xchg
out
xchg
dec
jmp
addl
sti
cltd
and
sub
cmp
jnp
mov
mov
mov
sub
cmpsb
dec
ret
xor
subl
push
das
and
fsubl
out
rorl
insl
mov
pushf
sub
jb
into
jnp
repz
repnz
decb
push
sub
dec
movsb
andb
mov
and
loope
mov
jmp
or
in
mov
push
cmp
fsubrs
mov
sbb
or
jb
sbb
adc
movsb
movsb
ret
xor
fstps
sahf
mov
jne
sub
add
cmp
sub
rorl
addr16
ret
add
xchg
dec
iret
pop
add
push
loopne
fcomps
mov
lcall
xor
icebp
add
cmpl
outsl
int3
or
dec
stc
inc
mov
loope
pop
addr16
dec
xchg
adc
cmp
stc
mov
xor
test
insl
add
or
das
sub
sub
or
xlat
int3
rclb
popa
xor
inc
das
popa
inc
incl
loope
sub
push
inc
push
out
lods
subb
mov
adc
in
fs
mov
popa
inc
pop
add
xor
jbe
adc
adc
movsb
mov
stos
mov
dec
sub
jae
lcall
push
je
push
imul
je
je
mov
mov
gs
aad
mov
shrb
fisttpl
add
arpl
shll
pop
scas
add
xchg
sub
or
loope
mov
xlat
sub
popa
add
adc
add
int
add
xchg
add
push
stos
dec
call
inc
or
insl
fadds
cltd
sub
sub
pop
or
sub
add
jbe
push
push
int3
mov
push
cli
movsl
test
or
jb
and
xor
mov
xchg
popf
sub
fprem
push
adc
jg
andl
jno
dec
push
outsb
loopne
mov
mov
pop
jecxz
aas
in
add
mov
cmp
dec
cmp
shlb
ret
or
xchg
cld
xor
mov
test
inc
mov
xor
inc
push
test
lcall
xor
cmp
nop
cmp
shl
inc
jmp
movb
insl
push
mov
dec
mov
add
aaa
je
aam
xchg
je
xor
mov
jo
cmp
xchg
adc
shlb
test
icebp
push
add
pop
xchg
ds
into
push
jecxz
iret
test
adc
insl
test
adc
lods
mov
sbb
loope
xor
jl
out
rcll
adc
movsb
stos
insl
add
adc
and
inc
ja
dec
xchg
rcl
mov
adc
ret
add
mov
sbb
sub
sbb
and
or
test
cmp
push
cmp
movsl
aas
push
mov
sbbb
sbb
movl
pop
imul
cli
mov
ljmp
clc
jae
inc
mov
add
mov
pop
pop
push
inc
jge
outsl
mov
dec
aad
add
fadds
mov
fstps
add
notb
mov
pop
dec
sbb
xor
add
xor
xor
and
fabs
pusha
xor
lea
or
int
ss
pusha
xchg
loopne
insl
iret
lock
push
fmull
and
and
mov
sbb
mov
testl
shlb
inc
divl
orb
or
sub
sbbl
lods
in
dec
mov
mov
inc
push
sbb
add
fwait
jge
or
or
xor
jmp
jae
xor
stos
pop
mov
loopne
ljmp
push
and
outsb
pop
mov
pop
push
adc
cmp
shlb
jnp
mov
test
mov
stos
and
mov
mov
popf
or
or
xor
or
leave
shrb
scas
pop
lea
xor
or
leave
scas
sub
or
pop
inc
mov
dec
imul
pop
test
lcall
and
adcb
dec
jns
or
xor
popa
movl
and
shlb
adcb
aad
mov
add
add
and
or
pop
pop
or
into
mov
test
nop
test
add
add
and
push
stos
sbb
add
cs
mov
lahf
fldenv
xchg
adc
lea
nop
adc
adc
das
jnp
mov
jg
adc
dec
xchg
mov
xor
adc
adc
push
xor
push
inc
mov
pop
inc
das
inc
iret
or
push
mov
pushf
mov
ss
pusha
sbb
mov
add
dec
shl
or
pop
dec
lock
or
push
lcall
aaa
inc
push
popf
add
fimull
int3
adc
dec
pop
pop
push
or
push
pop
ja
sub
dec
ja
aas
cmp
movsl
pushf
test
mov
xor
inc
and
sbb
sti
roll
in
sbb
inc
std
scas
and
add
sbb
push
stos
repnz
jmp
ja
jo
add
lods
jb
mov
add
adc
cwtl
test
test
mov
mov
and
adc
pop
cwtl
jnp
pop
ss
jno
and
dec
cmp
arpl
lock
loop
xor
aaa
sahf
stos
sub
sub
xchg
add
mov
les
lods
test
push
mov
adc
lock
fnstsw
or
into
cmp
neg
add
inc
and
add
mov
inc
insl
sub
shrb
xchg
add
dec
popa
inc
mov
nop
adc
aam
mov
jne
into
sub
hlt
ret
pop
dec
and
cmp
inc
adc
dec
push
sub
adc
xchg
xchg
popf
adc
fadds
mov
shlb
and
and
and
push
mov
loop
xor
cmp
movsl
sbb
bound
pop
add
outsl
cmp
scas
jp
ja
enter
daa
dec
cmp
mov
push
or
sahf
xor
sbb
xchg
push
jo
fsubrl
pusha
sub
push
xor
add
cld
dec
adc
mov
lret
ja
lret
int3
add
xchg
pop
add
orb
aaa
pop
ja
xchg
mov
push
je
mov
jl
and
push
jle
mov
leave
andl
pusha
sub
mov
pop
push
dec
mov
ret
add
push
test
mov
adcb
or
adc
sbb
rclb
test
fwait
lret
jle
aad
jge
mov
ja
int
hlt
cmc
adc
and
cwtl
filds
dec
rcrb
movsl
add
add
add
jp
add
dec
ret
cmp
mov
mov
mov
dec
test
icebp
pusha
sbb
xlat
aam
or
fdivs
aad
xor
jecxz
or
test
adc
dec
fdivrs
push
aaa
dec
jns
add
je
mov
and
aad
adc
pop
mov
movsb
popa
fisubrl
rorb
jo
cmp
push
das
ret
jecxz
push
shll
cmp
adc
sub
stos
nop
ficomps
xchg
mov
sbb
sbb
mov
adc
mov
dec
in
test
jmp
sub
jb
ficoml
xchg
stos
inc
ret
adc
imul
movsb
add
lret
add
insb
and
or
sbb
dec
mov
shll
lds
jl
xchg
daa
add
je
inc
sbb
jno
mov
mov
push
xchg
sbb
imul
or
and
push
jl
rorl
pop
jmp
dec
inc
ja
or
and
adc
and
roll
subl
dec
adc
dec
and
jmp
jp
adcl
ret
cltd
add
inc
fnstenv
shlb
add
inc
pop
das
rol
pop
cmp
mov
add
pop
cmpsl
mov
arpl
pop
push
ret
cwtl
or
jne
lahf
jg
push
cmp
cli
jb
xor
xorl
popf
sub
arpl
xchg
xor
rolb
push
sbb
inc
mov
xor
pop
dec
testb
ret
insb
mov
jae
loope
add
leave
pop
jo
sbb
push
xlat
cmp
mov
test
movsb
adc
scas
sar
xchg
cli
push
jns
sub
addr16
dec
add
push
add
jbe
lret
and
ljmp
adc
sbb
adc
add
fidivl
push
cmpsl
cltd
mov
xor
pop
and
push
or
xchg
adc
mov
and
inc
mov
dec
aas
and
ret
imul
shl
popa
mov
imul
rclb
aaa
adc
bound
mov
add
pop
lock
and
mov
cmp
in
pop
mov
iret
les
dec
jl
mov
jge
cld
sub
es
mov
fsubs
or
adc
test
sub
roll
add
or
dec
js
and
sbb
mov
mov
mov
jbe
mov
out
push
push
ret
fdivrs
idiv
mov
test
inc
ret
push
mov
or
dec
sbb
mov
fdivs
jbe
add
pusha
xor
das
sub
push
jnp
sbb
or
daa
adc
inc
test
mov
pusha
mov
sub
inc
lret
out
stos
add
shr
adc
jno
inc
mov
popf
push
jae
pop
cmc
clc
cmp
cmp
pop
push
add
push
add
stc
add
mov
lea
fs
cmp
dec
xchg
enter
add
mov
jle
iret
add
ret
or
rcl
js
popl
in
es
fsubr
ficoms
adc
repz
xchg
outsl
imul
scas
insl
pop
mov
or
dec
clc
mov
dec
jecxz
pop
inc
pop
inc
jge
xlat
adc
rcr
sbb
inc
sub
xor
adc
in
outsb
adc
add
dec
pop
shl
adc
hlt
outsl
in
rorb
es
xlat
cmc
mov
add
push
pop
sbb
mov
leave
lds
xor
inc
pop
mov
jbe
adc
cld
mov
stos
or
push
fsubl
add
mov
push
sti
rorl
shl
stc
jecxz
lods
cli
sbbl
cmpsl
cmpsb
stc
ja
jmp
loope
in
popa
rol
mov
adcb
cmp
push
xchg
inc
mov
adc
xor
xchg
ret
and
loopne
adc
es
jnp
aaa
cltd
fsubrs
pop
sub
cs
sbb
inc
scas
pop
xchg
sub
daa
ljmp
or
pop
mov
xchg
mov
les
pop
add
ret
sbb
std
addr16
and
imul
popf
adc
ja
jo
lea
sbb
outsb
pop
pop
cmp
pop
jl
adc
jb
add
and
call
in
jae
hlt
test
popf
nop
xlat
lret
mov
lcall
add
inc
sbb
sub
cmpsb
ret
add
loopne
and
and
add
add
mov
xor
add
sti
xchg
xchg
ss
push
ret
mov
or
sbb
fs
scas
and
jne
cmp
xchg
or
sti
jg
sub
xlat
xchg
xchg
rolb
sarl
test
aas
lods
sbb
jbe
or
popf
sub
shll
mov
jb
scas
add
ret
aas
out
aas
cli
inc
loope
sbb
xor
add
in
data16
test
hlt
fs
push
mov
jmp
push
mov
cld
test
js
aaa
out
push
rcl
aam
and
daa
insb
mov
inc
pop
rol
cmpsl
pop
add
outsl
add
inc
daa
addr16
xchg
mov
out
or
pop
pop
imul
push
sub
adc
add
nopl
sub
ss
rol
pop
mov
adc
jns
stc
mov
sub
and
mov
sbb
push
daa
mov
push
outsl
sti
out
push
push
xchg
jle
push
mov
push
fstp
add
and
negl
sbb
andl
sysret
mov
int
inc
or
int3
cmp
cmp
into
jecxz
iret
in
sbb
dec
imul
xchg
and
dec
push
ja
daa
and
mov
cmc
dec
inc
icebp
dec
inc
mov
xchg
sub
fsubl
lea
push
dec
sti
sar
ds
pop
sub
jno
pop
and
pop
outsl
pop
subb
loopne
jnp
mov
scas
add
mov
mov
pop
cld
mov
popa
daa
in
sarb
ja
int3
sarb
or
jp
inc
stos
and
dec
rorb
pop
inc
jp
iret
inc
cmpsl
sub
clc
add
ficoml
mov
arpl
mov
and
std
xor
stos
sbb
dec
adcl
out
dec
xchg
add
add
adcl
jo
push
and
sub
cmp
and
cmp
cmp
aad
div
push
popa
nop
shlb
rorb
push
fsubrl
nop
divl
xor
aam
mov
add
les
cmpsb
mov
rclb
xchg
shrb
addr16
push
in
mov
stos
mov
dec
add
cwtl
cs
shlb
jbe
pushf
mov
add
loope
cmp
pop
test
mov
adc
adc
fstl
mov
and
dec
push
xor
aaa
add
in
adc
xor
jmp
dec
pop
daa
lods
negb
rol
mov
aad
xchg
mov
push
inc
xchg
test
outsb
test
pop
adc
xchg
enter
jp
jno
call
jnp
movsb
ljmp
xchg
rclb
loope
lret
clc
cmp
add
lods
dec
mov
orb
nop
setge
loop
insl
lods
js
pop
xor
sub
test
sub
bound
sbb
in
pop
sahf
in
cmp
add
adc
aas
ss
sub
stc
sbb
shlb
jp
xor
pop
jge
xchg
icebp
xchg
xor
inc
adc
icebp
add
or
and
cmpsb
lods
pop
pushf
sub
add
inc
repz
lea
sbb
daa
in
adc
jo
loopne
push
popa
xchg
pop
adc
mov
pop
dec
outsl
mov
test
mov
lock
stos
xor
inc
call
je
jo
push
jp
cltd
fcoml
xor
pop
shll
sqrtps
in
and
and
mov
or
hlt
cmp
addl
pop
add
xor
pop
lock
js
cs
add
dec
or
xchg
dec
test
test
xchg
inc
jg
and
xor
push
cmpsb
icebp
jl
xor
sub
insb
adcl
jo
iret
bound
lods
and
jle
cs
arpl
ss
mov
inc
aaa
xor
cmp
and
popa
xor
nop
sub
cwtl
test
and
xlat
dec
sub
sub
or
sub
jp
xor
stc
shlb
mov
rep
add
dec
cmp
cs
cmp
dec
testb
mov
and
jbe
cwtl
add
data16
sarl
dec
loop
push
out
jp
inc
adc
mov
nop
test
ljmp
rorb
rcll
mov
xchg
xlat
in
xchg
or
dec
lods
or
loop
cwtl
rcl
ret
mov
enter
in
add
in
or
xchg
daa
out
call
push
pop
adc
sub
in
mov
mov
or
inc
sbbl
pop
and
insl
fldl
in
sbb
push
cli
mov
push
int
jecxz
aas
or
adc
fnsave
adc
loopne
xchg
in
xchg
outsb
sbb
int3
jmp
and
mov
cmp
lds
pop
mov
jae
adc
test
insl
fildl
bound
loope
into
cmp
out
mov
data16
ljmp
rolb
jmp
or
daa
fwait
divl
adc
xor
sbb
movsb
mov
fs
mov
adc
out
outsl
pop
and
cmp
icebp
dec
cli
mov
jp
lahf
add
into
jo
das
adc
aaa
mov
and
fs
pop
lock
jge
dec
add
and
inc
imul
add
mov
sbb
mov
sub
cmp
es
or
rclb
orb
mov
sub
ret
roll
add
gs
mov
jo
outsl
imul
loope
sub
loop
gs
jmp
lods
out
cmc
das
xor
xor
xchg
cmpsl
xor
mov
rep
mov
add
mov
cmc
and
lock
rorl
push
rcll
fcoml
jge
out
popa
arpl
sti
clc
call
jge
daa
roll
insl
jecxz
sbb
xor
mov
adc
xchg
call
test
in
loope
inc
xor
in
jmp
xor
xlat
sti
xchg
cmp
sub
rcl
xor
and
xor
pushf
and
pop
sub
xor
mov
xchg
pop
mov
lret
jns
in
roll
dec
testl
inc
je
sbb
sub
xchg
sbb
loope
xchg
adc
xchg
rorl
sub
inc
inc
js
xchg
ja
cmc
rol
or
repz
adc
nop
loopne
jg
ret
in
insl
add
mov
sbb
adc
push
fwait
popa
jg
in
cld
mov
scas
sub
cmp
sbb
and
adc
sub
imul
add
xorb
adc
mov
mov
fwait
jae
inc
jno
and
pusha
xlat
mov
cmpb
fmuls
cmpsl
push
fisubl
fdivrs
jmp
mov
loope
mov
shll
std
mov
arpl
js
xor
cmpl
mov
into
mov
in
cmp
insb
xorb
scas
xor
in
in
push
decl
push
xor
xor
sti
bound
mov
jle
sbb
mov
addl
add
or
pop
fadds
push
push
add
dec
out
cmp
inc
in
xlat
mov
add
add
pop
xchg
loop
fsubs
in
incb
leave
stos
jmp
push
xchg
cwtl
add
sub
push
push
pop
out
jmp
into
inc
adcb
popa
add
add
fwait
mov
sub
fwait
daa
sti
jle
imul
into
mov
push
or
gs
dec
add
imul
dec
xlat
sti
dec
add
pop
jno
xchg
push
incb
aas
fcmovbe
dec
les
and
arpl
lods
cmp
iret
and
jmp
jno
scas
pop
rcrb
fnstcw
flds
pop
cmp
out
add
rcrb
leave
add
jp
outsl
push
sbb
xlat
and
sub
testl
mov
idivb
inc
mov
insl
cwtl
movsb
mov
into
dec
pushl
xor
je
jmp
mov
div
mov
je
pop
mov
cmp
roll
adc
shll
mov
mov
mov
iret
lahf
pop
aas
xor
adc
cmp
cmc
inc
pop
push
loope
loop
xchg
sti
pop
push
into
lahf
jnp
aam
pop
daa
push
jmp
dec
stos
and
add
gs
sub
mov
in
mov
sti
xor
dec
fwait
imul
fcomp
retw
shll
sti
repnz
ja
mov
or
sub
cmp
arpl
ret
fldcw
loopne
dec
repz
test
ss
scas
sub
testb
inc
pop
scas
jmp
arpl
cs
cmc
sbb
sbbb
xlat
addr16
ss
or
fildll
inc
lock
pop
sub
cmp
add
fsubl
lcall
imul
out
ror
rcrl
mov
fwait
cld
pop
cwtl
cmp
ror
mov
sbb
outsb
jbe
outsl
inc
loope
add
popa
pop
filds
mov
xor
cmp
inc
mov
das
jle
xlat
sahf
jnp
mov
jge
dec
or
and
mov
aas
aaa
movsl
sbb
add
test
add
imul
ja
aaa
lods
inc
adc
add
push
sahf
enter
or
out
notl
sub
pop
or
ss
ret
inc
ret
or
rcrl
cmp
lahf
jns
or
and
cmp
pop
dec
js
mov
aam
mov
jecxz
lock
je
mov
into
add
stos
rorl
insb
add
jns
xor
and
sbb
cmp
into
mov
imul
fisttpll
sbb
add
lock
les
iret
sbb
sarl
push
mov
jnp
loopne
sbbb
xor
in
add
js
cmp
les
mov
les
cmp
xor
push
addl
xor
inc
int3
xchg
jbe
xlat
imulb
push
cmpsl
fldcw
dec
aas
xor
ror
out
and
cmp
dec
pop
jae
testl
int
cmp
push
cmp
sbb
out
jecxz
xchg
stc
lock
jecxz
movsb
aaa
ljmp
xor
jecxz
sbb
add
and
xchg
or
stos
inc
sub
cld
repnz
das
push
push
daa
cmp
and
pusha
mov
xor
add
sbb
or
aas
push
push
mov
pop
fstp
gs
sbb
aad
xor
aad
dec
add
dec
dec
dec
addr16
sub
mov
insb
add
and
mov
mov
pop
and
mov
ds
push
sbb
xor
fcoml
add
adc
stos
sbb
xor
and
fstps
cmpl
sub
pop
jmp
jp
xor
ret
addr16
pop
jle
inc
mov
jno
js
movsb
test
pop
js
jmp
ficoms
shrb
fbstp
popf
inc
aad
mov
arpl
xor
lahf
mov
int
test
popa
call
jbe
dec
or
add
push
out
ret
jbe
push
or
lods
push
fnstenv
sbb
lahf
outsb
mov
in
and
lods
add
rcr
enter
xor
lret
add
fwait
popa
test
cmpsl
pushf
lcall
push
pop
test
pop
stos
xchg
in
xchg
push
test
fsts
xor
jmp
popf
inc
mov
mov
cmp
jg
sub
pop
lret
mov
fldl
movsl
sahf
xor
pop
loop
cmp
cmp
pop
xchg
or
adc
gs
ja
js
cmp
std
pusha
inc
xor
add
test
test
sbb
mov
push
mov
prefetch
mov
fdivrl
sbb
rep
cmpxchg
sbb
mov
cmpsl
fs
xor
inc
dec
faddl
cmp
leave
int3
jbe
out
dec
imul
bound
inc
pop
mov
or
scas
xchg
mov
cwtl
pop
jecxz
add
inc
pop
into
pop
sub
jg
jb
push
mov
cmp
loope
pop
add
imul
into
xor
popf
push
push
adc
cs
pop
pop
xrelease
mov
lds
or
dec
lahf
dec
add
jmp
int3
jbe
outsb
xor
dec
shll
jno
sbb
cs
jnp
negl
pop
xchg
imul
or
cmpsl
dec
sbb
inc
ret
test
sbb
ja
clc
add
out
jmp
xchg
inc
cmp
outsb
out
xor
mov
xchg
cmp
dec
sub
outsb
ja
cmp
into
lahf
sbb
inc
sti
xchg
loope
adcl
flds
mov
mov
idivl
aas
popf
xor
pop
cmp
cmpxchg
jne
cmp
push
cmpsl
and
lds
mov
mov
mov
push
shl
add
cmp
imul
jbe
sub
in
add
jecxz
fistpl
cmpsb
jne
ret
xlat
lahf
add
jo
pop
jmp
sbb
lds
xchg
lea
aaa
or
sbb
sub
cmp
into
dec
inc
scas
mov
xor
movsb
std
out
lret
sub
pop
ds
jmp
push
push
add
cmp
shr
xchg
cmp
je
push
push
fcom
fwait
push
jb
addr16
add
adc
inc
xchg
into
ds
or
inc
mov
mov
scas
xor
add
stos
xlat
cmp
fmul
stos
lcall
lods
rolb
popl
add
aam
inc
clc
ss
lret
and
in
xchg
in
iret
shll
in
ret
sbbl
loopne
xor
jecxz
and
xchg
inc
mov
cmp
adc
push
out
repnz
cmp
xchg
in
shl
into
inc
push
mov
ja
repnz
mov
adc
jbe
or
cmpsb
movsb
subb
add
cmp
jns
test
or
ret
das
push
pop
cmp
cmp
mov
mov
iret
push
aaa
adc
rclb
push
aam
test
mov
adc
fmuls
cmc
inc
or
xor
into
xchg
add
mov
mov
pop
cmp
negl
sbb
shrb
jno
jnp
mov
mov
cmp
sub
dec
jo
ret
fucompp
sbb
xor
mov
mov
mov
xor
pop
and
adc
das
or
dec
std
shlb
jae
bound
add
cmp
cmpsb
sbb
data16
das
mov
testl
push
or
icebp
sbb
cmpsl
stos
mov
sub
add
dec
add
pop
mov
pusha
repnz
lds
xlat
movsb
pop
int3
inc
mov
lret
das
cmp
repnz
sti
or
mov
mov
mov
cmpb
pushl
inc
pop
add
loop
mov
inc
add
lea
fwait
test
das
int3
sbb
loopne
push
movsb
push
and
cmpsl
mov
mov
push
add
push
popa
jo,pn
in
adc
or
sub
rcl
sbb
xor
mov
push
insb
imul
dec
mov
or
mov
mov
fstpl
jmp
orl
pop
or
mov
call
popa
cmp
sbb
outsl
les
xchg
orl
add
xchg
mov
fwait
and
add
jmp
cmpsl
add
sarl
inc
popa
lods
shrl
push
iret
cmpsl
into
clc
stc
push
mov
jl
or
mov
fisttpll
jo
in
push
add
shr
pop
sbb
jno
pusha
lock
and
insl
sbb
add
cmp
dec
sti
pusha
decb
fldcw
movb
mov
fldenv
ficoms
into
mov
pop
into
sbb
pop
cwtl
lahf
jmp
test
xchg
sti
cli
xchg
mov
xchg
repz
pop
shlb
dec
jg
fidivl
jae
incb
in
sub
loopne
inc
cld
pop
nop
add
pop
push
and
jno
and
pop
decl
mov
adc
lahf
pop
add
sbb
imul
ficoms
add
les
mov
mov
jbe
xor
mov
into
sub
movsb
shll
xchg
fistps
jge
xlat
xchg
inc
sbb
sub
fists
add
mov
mov
lods
inc
ret
xor
add
out
xchg
lahf
les
out
in
cmp
ret
xor
and
sbb
rcll
xor
imul
mov
add
rclb
dec
rcll
pop
icebp
dec
cmp
lahf
lods
int
orl
mov
xchg
movsb
popa
and
rorb
imul
jno
mov
add
sub
adc
ffreep
jb
mov
xor
inc
pop
add
mov
lahf
stc
dec
hlt
add
jo
dec
push
xor
addr16
mov
xor
mov
jno
movsb
adc
shrb
mov
std
pop
ret
push
int3
add
addl
sbb
or
inc
sbbb
jne
lea
jo
and
mov
ror
jl
jmp
push
push
cmp
xchg
test
dec
rcr
gs
iret
out
lar
mov
sub
pop
add
in
or
rcr
inc
outsl
inc
into
cmp
sbb
dec
cmp
shrl
sbb
sbb
adc
cmp
mov
xor
stc
mov
push
add
aaa
out
sahf
sbb
push
and
iret
ret
push
pop
xchg
cmpsb
addr16
addb
xor
lods
test
adc
loopne
pop
add
lock
ficompl
sbb
pop
inc
mov
pop
mov
inc
mov
push
or
jecxz
data16
lcall
xchg
ss
or
xor
inc
or
and
bound
cmp
rcl
push
iret
loope
addr16
enter
pop
push
js
popf
repz
lea
or
fcomps
popf
xchg
test
lcall
loopne
out
jp
iret
aas
cmp
addl
rcl
imul
cmp
mov
mov
jmp
dec
aaa
movsl
jecxz
xor
pop
jbe
xor
add
rcll
jg
pop
add
and
lret
repz
sbb
pop
or
cmp
cli
sbb
inc
lcall
iret
pop
mov
sub
jmp
sub
cmc
xchg
mov
jb
push
dec
dec
xchg
into
sub
subb
je
clc
mov
aaa
int
sub
mov
loopne
arpl
jo
sub
push
in
mulb
inc
vmcall
xchg
ret
mov
sub
test
bound
js
mov
xchg
mov
loopne
adc
sub
lahf
sbb
mov
testb
clc
push
add
or
fwait
imul
inc
hlt
shlb
je
push
push
iret
or
jle
fistps
rclb
clc
mov
lea
mov
cmpsb
mov
mov
sub
lret
pop
pop
fidivrs
pop
mov
jne
das
mov
push
or
lret
rcrl
sub
pop
sbb
push
addr16
xor
mov
xlat
cs
and
adc
fdivrl
aad
outsl
sti
aaa
into
jecxz
fistl
fwait
pop
sbb
push
ret
sbb
pop
test
je
xchg
out
push
add
ficoml
das
out
adc
scas
inc
stos
cmpsl
adc
aad
insb
dec
xchg
cmpsb
push
xor
inc
rol
lea
and
sbb
cmpsl
mov
push
ss
scas
fistpl
and
push
jl
daa
addb
sub
mov
sbb
idivb
add
sub
or
jle
cs
mov
sti
enter
into
shrl
sub
cltd
in
push
divb
int
test
movntps
jne
push
push
loopne
mov
lea
cmp
stc
inc
or
push
adc
dec
stc
sahf
cli
xchg
mov
pop
jo
add
and
pop
cmp
outsb
jae
add
or
add
stos
movsb
cmpsl
cmp
jo
xlat
mov
out
dec
dec
cli
daa
cmpsb
sti
or
or
rcl
or
jne
sbb
jno
outsl
orb
addr16
jno
jnp
out
data16
cmp
adc
mov
popa
push
inc
divb
mov
push
push
sub
imul
int3
stos
jmp
lahf
xor
mov
xchg
outsb
movsl
sbb
test
xchg
mov
mov
mov
mov
shlb
push
popa
iret
gs
adc
add
enter
cmp
sub
fs
pop
mov
subl
cmp
dec
cmp
arpl
jo
enter
mov
into
mov
xchg
in
out
jge
adc
orl
mov
sbb
sbb
dec
popa
add
lret
inc
movsb
dec
lods
jg
pop
incb
icebp
jno
or
iret
cld
adcl
inc
lock
mov
xor
cmp
fstp
cmc
xor
xchg
scas
or
iret
sbbl
mov
push
sub
stos
sub
sub
pusha
shll
xchg
mov
orb
push
mov
out
shl
pop
mov
dec
jnp
das
aaa
inc
orl
pushf
loope
cld
imul
movb
pop
clc
outsl
mov
adc
or
mov
cld
iret
add
dec
daa
imul
mov
jmp
dec
mov
and
lds
rcrl
mov
sub
push
or
sbb
in
lods
inc
xchg
xor
mov
test
and
fldcw
dec
sub
sub
sti
jae
lret
push
mov
inc
dec
mov
adc
dec
lods
push
jne
add
orl
into
mov
std
inc
xor
add
sbb
xchg
or
jae
cltd
lahf
pop
sbb
add
jae
das
cld
js
xchg
xor
lret
iret
or
jmp
mov
jp
je
mov
push
jae
mov
insl
cmp
loopne
cmpsb
cmp
inc
ss
shlb
pushf
lods
xor
pusha
and
orl
faddl
mov
push
ljmp
xchg
pop
mov
insl
cwtl
gs
mov
imul
mov
cmp
push
pop
sets
mov
js
lcall
jecxz
aad
lds
push
mov
cwtl
imul
pop
movsl
loopne
or
das
js
hlt
adc
sbb
adc
pop
mov
and
jle
in
iret
jne
insl
pop
push
filds
jbe
lods
adc
fstps
jnp
test
pop
scas
inc
xchg
fwait
lods
daa
das
daa
push
andl
cmpsl
pop
adcl
xorl
insl
fstpl
frstor
xor
cltd
mov
add
push
adc
dec
lock
popf
pop
imul
cltd
jo
push
mov
mov
push
pop
push
add
loope
and
imul
mov
push
add
hlt
push
adc
xchg
pop
add
or
cmp
lahf
out
es
imul
sbb
adc
pop
jnp
pop
addl
adc
cmp
sub
mov
movsl
aad
inc
jmp
movsl
dec
xchg
push
mov
pop
pop
push
inc
pop
scas
test
cltd
stos
daa
in
stos
fcom
inc
wbinvd
push
insl
jne
shrb
inc
sbb
pop
or
or
mov
add
dec
pop
pop
and
push
cmp
push
ret
pop
xor
lds
test
test
pop
das
adc
cmp
daa
int3
or
mov
dec
adc
fnstsw
cmp
push
test
ss
je
xchg
in
popa
lret
es
jne
mov
adc
add
es
cmp
xor
push
push
movsl
dec
fstpt
mov
adcl
in
iret
xchg
jge
and
jge
addr16
pusha
xor
pusha
es
adc
repz
in
scas
dec
add
cmp
in
fldlg2
jmp
adc
or
mov
add
pop
and
daa
mov
arpl
sbb
inc
imul
int
insl
or
fs
xchg
mov
fs
sbb
enter
lock
inc
mull
sbb
in
or
lahf
sbb
adc
pop
jge
inc
xchg
push
daa
sbb
jnp
fnstcw
ja
or
fldcw
adc
mov
pushf
sbb
dec
leave
cmp
js
lea
out
insb
sub
sbb
push
ja
fidivrl
fs
aaa
imul
add
mov
in
dec
sarl
adc
insl
sar
insl
jmp
out
stc
adc
add
or
adc
mov
and
sbb
scas
jmp
jns
jno
sbb
or
mov
and
shlb
or
int
movl
aaa
ficoml
mov
addr16
addb
outsb
movsl
or
lock
fisubs
jne
adc
sti
mov
sbbl
outsl
pop
xlat
jge
leave
and
sbb
das
das
leave
xor
idivb
add
cmpsl
pop
or
xlat
mov
and
or
cmp
dec
scas
cmp
xlat
fstpl
and
pop
fistpl
push
add
sbb
cs
lret
stc
mov
mov
ret
lock
ds
add
inc
dec
aad
insl
insl
fwait
jg
mov
inc
mov
mov
jnp
pop
testl
cltd
xor
repnz
xor
cmpsl
and
push
scas
and
daa
jne
pop
movsl
xor
pop
aaa
insl
cmpsl
push
sbb
aam
xchg
pop
rcrl
inc
loopne
lea
or
and
popa
push
xor
mov
and
imul
mov
fcoml
jmp
pop
test
push
and
repz
mov
add
aaa
ss
add
notl
rolb
rolb
add
cmp
mov
dec
ror
xchg
push
icebp
sub
ror
and
mov
mov
mov
sbb
jle
push
or
adc
inc
and
mov
lock
enter
aam
xchg
popf
lea
cmovbe
add
ja
shll
sub
lcall
ret
cmpsb
nop
or
jp
iret
cs
adc
bound
ds
loop
cmp
add
inc
repnz
or
ds
mov
jae
jo
daa
mov
inc
xchg
mov
int3
cld
or
ds
in
jb
dec
fs
jo
xchg
outsb
xor
mov
jns
dec
rol
jbe
xchg
mov
loope
pop
mov
rorb
push
imul
test
repnz
testb
or
adc
shll
sub
fdivr
jbe
leave
shlb
cwtl
fsub
test
cmp
aad
pop
mov
aam
mov
xchg
jp
mov
lahf
xor
and
push
jbe
xor
fistps
orb
mov
mov
and
push
sub
cmp
les
jb
ret
adc
nop
into
imul
aaa
addb
fstps
mov
insb
jl
mov
insb
sbb
std
mov
sub
in
or
movsb
sbb
add
and
stos
mov
mov
mov
call
adc
mov
cs
fs
sub
fcoml
jl
jg
aaa
xor
add
rcrl
testb
push
outsl
push
orl
mov
push
imul
in
cmc
and
adc
out
sbb
sbb
and
adc
push
call
pushf
cmpb
sub
test
inc
mov
dec
xchg
mov
xchg
mov
aam
pop
gs
push
mov
arpl
outsb
inc
pop
inc
dec
mov
add
lock
pop
pop
imul
loop
cmp
call
shll
scas
in
inc
outsb
adc
cmpsb
fwait
and
xchg
shll
repz
push
test
pop
jge
inc
bound
jle
sarl
inc
ret
aaa
push
jbe
xor
cmpsb
jb
push
jbe
dec
testb
adc
add
and
mov
inc
rcrl
in
repz
leave
pop
das
sub
pusha
and
jle
imul
movsb
lods
xchg
jle
imul
inc
dec
inc
add
ds
shlb
add
lods
fnstsw
push
out
lods
mov
push
cs
sbb
test
xchg
stos
inc
pop
mov
ss
in
inc
out
clc
cmpsb
cmpsb
jae
cmp
data16
cli
int3
pop
add
rcll
rolb
sub
push
ret
out
mov
cmp
mov
and
mov
pop
push
push
sub
or
bound
cmp
in
xor
inc
pop
mov
pusha
cld
cmp
jle
movhps
cli
andb
js
cmp
or
and
mov
pop
inc
rolb
pushf
ljmp
sbb
mov
mov
adc
mov
and
sub
scas
cltd
lcall
cmc
cmc
insb
inc
cwtl
call
add
cmp
jl
and
xchg
das
mov
clc
mov
xor
dec
call
subl
mov
add
or
sahf
and
and
mov
dec
mov
mov
xor
loopne
jecxz
lods
jecxz
push
and
push
inc
sahf
je
mov
cld
pop
mov
rsm
ret
mov
scas
xchg
jae
out
mov
push
ss
cmp
cmp
call
repnz
cmp
push
hlt
mov
stos
aam
sub
outsb
or
sub
and
ja
lock
es
cbtw
ret
shrl
and
dec
ror
test
mov
imul
mov
mov
push
mov
out
call
jb
sbb
scas
ds
or
lods
jecxz
jecxz
mov
add
pop
pusha
add
jmp
fsubrp
stos
call
mov
sar
mov
fwait
sub
test
lods
clc
insb
jge
pop
mov
insl
pop
sub
jns
xchg
ds
clc
loope
mov
ret
imul
sbb
jecxz
adc
or
nop
sub
push
cld
mov
lods
sub
divb
cmp
int3
xor
inc
fdivs
pusha
test
push
mov
imul
addr16
add
int3
add
mov
lcall
mov
mov
add
insl
inc
lds
jb
ficompl
mov
or
pushl
xor
dec
cmp
sub
mov
idivl
xchg
dec
pop
xchg
loop
xchg
bnd
xor
inc
mov
push
add
call
testb
outsl
loop
sub
jne
insl
cmp
in
push
les
jno
sbb
in
push
or
lret
xor
dec
call
insb
push
in
or
fdivr
add
or
jg
mov
cld
test
xor
inc
data16
shll
shrb
xchg
add
fimull
push
and
sbb
stos
push
insb
xchg
jg
sbb
int
jecxz
nop
pop
lahf
fs
sbbb
fwait
push
insb
jle
cmp
data16
mov
and
add
adc
es
pop
test
push
mov
dec
jl
ret
or
scas
inc
imul
adc
insl
mov
xlat
or
aad
jmp
imul
xor
cmp
xor
iret
cmp
sti
add
cld
jmp
mov
lahf
pushf
int3
sub
mov
adc
jle
add
cmp
outsl
hlt
mov
lret
shr
mov
mov
xor
notb
dec
mov
scas
test
sbb
in
sbb
out
test
popl
ss
rorb
stc
sbb
or
hlt
cmpsl
daa
das
adc
loopne
mov
push
pop
cs
or
ret
add
add
divb
fwait
sub
xor
inc
clc
mov
mov
fbstp
sbb
mov
sub
movsl
cmc
pop
mov
xchg
add
sbb
mov
sahf
or
stos
pop
dec
sbb
jb
xor
dec
sub
pushf
mov
addr16
sub
dec
inc
xchg
sar
hlt
loop
sbb
sahf
lret
inc
pop
mov
xchg
movsb
test
mov
pop
aam
bound
pop
orb
push
xor
push
sub
into
or
dec
inc
sub
push
lds
outsb
jg
negb
shrl
add
in
cwtl
sbb
or
push
jo
push
inc
mov
loop
jo
and
fisubs
pop
xchg
sub
mov
loop
xchg
call
add
adc
push
add
and
scas
das
call
sbb
repz
pop
and
sub
ss
mov
xchg
cltd
pop
and
bound
mov
scas
movsb
sub
addb
rclb
mov
jo
rclb
in
stos
test
fs
jge
push
outsl
or
and
pusha
xchg
loop
leave
xchg
add
mov
push
das
push
cs
lock
xor
or
insb
push
add
icebp
cmpsb
mov
out
test
xor
adc
or
incl
clc
pop
xor
mov
sub
or
xor
xchg
cmp
les
lret
aaa
sarb
dec
jo
mov
lds
lahf
shl
sub
int3
dec
int3
mov
lods
mov
sbbb
lock
mov
dec
aad
test
xor
dec
mov
pushf
mov
aam
popa
sub
pop
fisubrs
sbb
test
or
out
jb
mov
push
xor
jp
ret
lock
lods
les
pusha
push
mov
mov
sub
sbb
sbb
cmp
out
mov
mov
xchg
mov
add
lahf
fstpt
or
jbe
cmpsl
sahf
or
cmp
lret
jp
sbb
sub
and
ret
adc
mov
mov
lock
cmp
add
testb
push
xor
nop
out
iret
sahf
sbb
mov
pmuludq
sahf
cwtl
cwtl
insb
adc
mov
push
mov
out
leave
inc
xor
sarb
inc
fwait
xor
pop
or
out
orl
je
cmpl
fisubs
mov
fdivl
int
xorl
pusha
mov
cwtl
push
or
fisubs
jns
add
push
cmp
fmuls
xor
mov
ficoml
inc
subb
call
and
pop
pop
cmc
inc
das
mov
lock
xchg
fdivrs
or
adc
sbb
hlt
jl
sbb
adc
adcb
scas
mov
xchg
dec
or
test
mov
gs
xchg
out
cmp
sbb
loop
arpl
xchg
jo
ss
fstps
jmp
div
sbb
icebp
sub
loopne
bound
imul
mov
dec
sub
orb
add
cmpsb
std
shlb
lea
mov
out
mov
jo
in
dec
and
mov
enter
std
shll
fdivl
bound
je,pt
add
enter
xchg
mov
mov
cmc
xor
dec
cmpsl
cmp
aas
cmp
inc
add
subl
and
pop
mov
popa
fdiv
jp
fs
ficompl
mov
xor
xor
jecxz
pop
add
std
xor
adc
dec
ljmp
or
cmpb
inc
shrb
imul
sahf
add
sbb
js
sbb
sub
jg
inc
rclb
mov
mov
pop
mov
repnz
adc
int
adc
cli
popa
xor
xchg
xchg
add
dec
xchg
enter
mull
adc
pop
jge
cmpsb
sub
cmp
sbb
xchg
cmpl
jecxz
loope
and
in
pop
or
pop
movsl
xchg
mov
sbb
pop
loop
insb
add
push
dec
insw
cli
sub
cmpsl
ret
mov
adc
aam
sarb
pop
jl
add
outsb
lahf
and
push
pop
fldt
sub
fistpll
mov
add
inc
sahf
in
push
clc
cltd
cmc
test
lock
lods
mov
into
push
sahf
add
adc
rcrb
lds
pop
bound
xchg
mov
xchg
mov
movsl
inc
mov
pop
sti
mov
popl
inc
mov
in
sbb
xchg
inc
jno
pushf
inc
add
jle
jle
clc
pushf
inc
jb
mov
insl
outsb
cmc
scas
adc
popf
push
nop
mov
mov
mov
cwtl
sbb
loop
arpl
pusha
adc
dec
mov
shll
pushf
aas
sbb
repz
push
push
sbb
mov
or
call
and
pop
sbb
add
push
test
aaa
or
cmp
je
xor
cmc
outsl
lcall
loopne
test
adc
ud2
enter
inc
mov
add
and
and
add
push
dec
pop
movb
lds
sahf
inc
dec
arpl
inc
xchg
mov
push
outsb
out
dec
mov
or
xchg
dec
pop
cld
adc
mov
adc
shlb
lea
sbb
imul
xchg
stos
shlb
dec
mov
xchg
scas
imul
nop
sbb
xor
rcrl
jo
in
bound
fsubr
sbb
call
xor
shlb
mov
pop
fldcw
pop
push
or
loope
mov
sub
repz
loop
pop
clc
addr16
loopne
in
push
mov
fmul
out
inc
sbbl
and
mov
adc
cmp
sub
outsb
div
jb
and
or
xchg
cs
cmp
mov
mov
icebp
fwait
jnp
xchg
jle
add
push
arpl
mov
inc
push
push
cmp
jl
fs
imul
nop
push
gs
mov
stos
icebp
int
pop
mov
adcb
repnz
pop
rorb
and
dec
push
sbb
jno
jne
repnz
test
push
insb
add
out
xchg
out
loopne
xchg
inc
fs
jne
inc
andb
jle
pop
jne
xor
mov
movsb
xchg
data16
mov
sti
xchg
loope
mov
into
lea
add
jle
ljmp
jo
hlt
push
xor
shlb
xlat
es
and
push
dec
sbb
push
test
adcl
push
mov
cli
filds
insl
dec
pushf
push
add
lock
push
ss
inc
sbb
inc
lds
push
xchg
push
mov
jl
mov
hlt
repnz
sbb
mov
push
cmpsl
mov
mov
xor
sahf
shrb
int
shrl
popf
mov
movsl
cmp
fwait
xchg
notb
loop
es
cmpsb
fmul
push
ss
out
cli
xchg
mov
add
int
xor
xor
sbb
pop
adc
clc
sbb
rolb
fwait
add
clc
jnp
push
jns
mov
mov
lahf
mov
jmp
gs
push
jo
push
sub
lock
imul
pop
sti
mov
xchg
fsub
sbb
dec
or
in
push
sti
sbb
sub
ljmp
aam
aam
add
sub
sub
jnp
pop
repnz
ss
addl
test
mov
jecxz
and
enter
movsb
mov
aam
jg
sbb
jg
scas
sub
and
mov
sub
test
sbb
xchg
dec
xchg
in
mov
das
cmpsb
shl
inc
adc
push
pop
sbb
cwtl
cmp
out
add
xor
pop
mov
sub
add
stc
loop
cmpsl
ds
inc
push
mov
xor
clc
imul
fdivp
loopne
cmp
mov
out
outsb
adc
outsl
lcall
lcall
or
mov
cs
mov
mov
pop
cmp
xchg
outsb
out
sti
cmpsl
mov
add
inc
fsubs
pop
lcallw
push
rol
imul
sbb
and
and
ret
xchg
jle
mov
xlat
pextrw
push
pushf
mov
push
test
jle
fdivr
mov
dec
mov
movsb
or
pop
sarl
cmpsl
jmp
loopne
or
mov
pushf
pop
add
ljmp
push
cmp
jo
or
dec
pop
clc
inc
adc
cmp
sti
imul
push
and
std
sub
cltd
and
xchg
dec
mov
subb
rcl
icebp
loopne
loop
repz
xor
and
push
ds
sub
xor
ss
push
shr
sbb
sub
dec
fidivs
pop
xor
pop
push
adc
or
xchg
add
insb
jb
insw
lahf
mov
sub
and
subl
mov
aam
loopne
or
aam
shlb
xchg
cs
leave
xorl
push
stos
pusha
xchg
sbb
jle
mov
push
pop
cmp
xchg
dec
jne,pt
adc
daa
xor
dec
aad
mov
in
mov
jnp
xchg
xchg
ljmp
inc
insb
add
loop
push
add
push
or
add
sbb
jp
jb
add
int
int
add
and
inc
add
jae
mov
mov
mov
insb
adc
sahf
jp
or
inc
sbb
mov
outsb
add
lea
dec
arpl
mov
sub
pop
dec
mov
pop
pop
mov
or
movsb
int3
test
add
mov
xchg
loop
frstpm(287
jecxz
rolb
inc
addr16
mov
insl
cmp
negb
mov
sub
add
orb
mov
ret
push
jo
add
imul
lea
xchg
add
inc
push
fucom
mov
xchg
in
lea
js
testl
fs
and
filds
addl
pop
fsubrl
or
or
or
pushf
into
pushw
mov
and
push
pusha
inc
rorl
aaa
mov
sar
rorb
push
and
iret
cs
mov
xchg
push
fiaddl
cs
xor
dec
add
pop
xchg
push
cmp
xor
inc
dec
shlb
push
enter
inc
add
xchg
mul
or
mov
xchg
pop
in
pop
test
test
pop
or
and
cltd
inc
add
dec
add
stc
pop
push
inc
shrl
test
and
sahf
add
test
push
out
jbe
xchg
mov
or
push
push
adc
jl
loop
push
pop
inc
nop
stc
push
dec
xchg
inc
push
and
push
inc
mov
jmp
jle
in
sub
fmull
rolw
sub
mov
adc
sbb
cmova
rolb
push
fcomps
add
dec
cmp
shrb
and
lock
inc
mov
pop
or
cmpsl
mov
add
lret
setle
xor
sbb
enter
bound
or
xor
js
jbe
movsb
testl
pop
shl
inc
sub
push
pop
pop
in
jecxz
js
mov
jnp
inc
popa
pop
mov
sbb
adc
jne
lods
orb
loopne
adc
push
xchg
daa
mov
pusha
rclb
test
inc
rsqrtps
push
jnp
mov
out
cld
lods
shlb
daa
adc
and
ljmp
dec
int
xorb
xchg
cmp
cltd
stos
mov
js
xor
inc
lret
push
push
xor
push
sahf
and
cmpsl
add
ret
jbe
pop
in
sub
shlb
fnstcw
jb
adc
adcb
mov
stos
mov
xchg
push
cmc
xchg
inc
in
repnz
fneni(8087
dec
adc
sti
xchg
pop
pop
push
mul
lds
pop
xor
out
cmpb
jmp
adc
mov
out
pusha
adc
sbb
addl
insl
mov
fdiv
cwtl
sub
mov
or
int
dec
das
sbb
inc
pop
or
pop
mov
aam
or
repz
out
sub
mov
lcall
fwait
insb
imul
shlb
cmp
inc
sbb
hlt
sub
imul
cli
inc
jae
jecxz
fisttpll
dec
faddl
mov
movsl
jnp
inc
mov
xchg
dec
or
sahf
add
pop
test
stos
mov
xor
dec
pop
xchg
adc
sub
fs
fsubrs
jb
mov
xor
outsl
add
or
lock
inc
add
xor
cmpsb
add
std
adc
xchg
cmp
ret
add
fsts
popf
add
mov
cmp
aas
inc
and
jmp
mov
fisubs
xchg
sbb
pop
xor
idivb
ss
test
insl
adc
mov
js
sub
push
mov
push
jae,pn
inc
inc
inc
or
stos
mov
inc
sub
enter
inc
lods
jle
jns
pop
sub
fadds
and
fs
mov
xchg
rcrb
div
in
aas
adc
sub
pop
cmpsb
lds
add
mov
scas
outsb
shlb
dec
dec
dec
add
addl
int3
add
js
lods
ljmp
push
mov
jmp
push
add
mov
js
ret
mov
scas
loopne
mov
xor
and
pop
jecxz
popa
scas
mov
jne
popa
testb
in
add
test
mov
nopl
mov
sbb
adc
push
jb
pop
aad
out
sbb
js
dec
xor
cmpb
call
xor
into
adc
xchg
insb
mov
xchg
mov
mov
cs
sbb
mov
scas
xchg
in
push
jno
push
push
pusha
mov
and
inc
enter
dec
mov
movsl
es
push
fcompl
fcoms
push
sbb
dec
flds
popf
adc
shlb
adc
test
ja
fwait
dec
dec
mov
jg
filds
jmp
sub
or
cmpsl
out
orb
xchg
fldenv
addr16
mov
inc
mov
dec
ljmp
shll
xchg
push
adc
mov
out
gs
lret
mov
cmp
fnstenv
sub
dec
mov
pop
push
xor
pop
gs
lock
ficoml
jo
fwait
testl
mov
jb
push
add
cmp
int3
or
adc
mov
mov
int3
popf
mov
insl
pop
or
das
cmc
add
fwait
dec
cmp
ficoms
ficompl
add
outsb
mov
adc
in
xchg
cli
les
pop
add
js
push
mov
aam
jmp
fidivs
xchg
frstor
mov
ljmp
mov
cwtl
sub
clc
js
cmc
scas
jmp
leave
push
mov
pusha
sbb
push
cwtl
mov
loop
jne
or
or
outsl
mov
push
mov
jo
jns
stos
cli
pop
mov
aas
cmp
ja
or
scas
adcl
fstl
int
test
es
cmp
and
pop
into
loopne
and
cwtl
cs
mov
sub
loop
shlb
mov
stos
cmp
ficoml
test
adc
lret
sbb
jg
shlb
mov
add
push
jne
inc
mull
dec
mov
ljmp
add
push
movsb
cmp
movsb
mov
sbb
fiaddl
jo
and
addl
sub
mov
loope
in
sbb
js
notb
cmp
call
mov
add
testb
sbbl
push
jl
or
jge
and
sub
mov
sahf
cli
or
add
jl
sbb
jmp
mov
pop
into
std
repz
mov
loope
dec
or
clc
push
outsb
jl
xor
add
inc
cld
sti
sahf
js
cwtl
pop
sarb
mov
bound
dec
mov
imul
sbb
das
pusha
inc
call
push
adc
test
outsl
mov
or
inc
clc
int3
sbb
rclb
jbe
shl
rcr
xor
test
in
xchg
xor
jbe
sub
fwait
cmp
jecxz
jge
push
imul
sbb
jne
jo
xor
push
faddp
movsl
push
mov
add
notl
ret
lret
sub
mov
mov
es
and
sbb
popf
inc
sbb
and
fdivrs
das
adc
mov
sub
andb
lods
mov
or
clc
clc
xor
xchg
adc
cmpsl
fwait
jo
adcb
mov
nop
fildl
cs
es
insl
jo
sti
and
add
lcall
push
mov
lock
sub
mov
ret
cltd
rol
jg
rcl
add
jle
js
dec
fst
xor
or
mov
pop
outsl
cs
inc
sub
loope
ds
xor
dec
add
ss
in
jmp
jno
out
cs
push
mov
hlt
pop
pop
popa
pop
add
mov
sub
mov
int
mov
pusha
clc
pop
ljmp
icebp
popf
lea
pop
pop
mov
lds
sbb
mov
mov
adc
xchg
loop
repnz
mov
clc
fwait
inc
or
inc
mov
jbe
mov
xlat
aaa
push
pop
add
repnz
push
add
in
mov
jnp
hlt
outsl
sub
xchg
les
xor
ds
cmp
stos
cmp
and
push
mov
cli
cmp
push
and
cli
les
loope
in
inc
mov
push
outsl
orb
mov
mov
cs
shll
lret
ss
call
cli
jae
jecxz
hlt
rolb
add
mov
lahf
or
pop
adc
push
mov
hlt
push
in
stos
into
les
popf
sub
push
cli
loop
in
xorl
nop
push
sub
data16
punpcklbw
pushf
lods
mov
sarb
subb
sub
loope
add
pop
push
fists
xlat
fiaddl
mov
pop
dec
inc
jae
je
testb
ljmp
std
xor
dec
pop
adc
in
xor
jbe
das
sub
mov
push
loope
bound
rolb
int3
mov
mov
push
jo
pop
not
xchg
int
mov
xchg
dec
mull
jg
add
cmpsl
pop
outsl
in
dec
das
rorb
in
es
ret
add
cs
popa
mov
xor
fstpl
pop
cmp
test
adc
mov
fstpt
mov
pop
fsub
cmp
pop
andb
into
lcall
mov
rorb
std
and
movsb
cmp
or
push
mov
sbb
pop
xchg
cli
hlt
fmull
movb
std
aad
push
cmp
mov
mov
jl
jns
add
mov
cld
loope
popa
dec
mov
cmp
lock
mov
push
xchg
xor
loope
in
push
dec
lea
sbb
and
mov
xor
cmp
test
orb
push
jle
cmp
pop
je
pop
dec
ret
sbb
jbe
stc
dec
call
add
and
add
mov
mov
push
push
lock
add
orl
mov
test
dec
ljmp
iret
repz
or
cmp
sub
and
or
aaa
push
push
out
jnp
aam
pop
rorb
pop
and
adc
pop
addr16
jb
inc
aas
js
jbe
mov
daa
cmp
lahf
maskmovq
idivl
out
sti
or
and
pop
out
insb
je
decb
xor
ret
in
push
ret
adc
or
shrl
fs
lock
sbb
add
mov
or
stos
jl
repz
iret
xor
xor
mov
dec
cmp
iret
and
or
into
out
fwait
sub
jae
or
inc
out
fwait
jge
inc
sub
mov
xchg
idivb
mov
sub
out
out
ret
jle
fpatan
cmp
rcrl
and
adc
jmp
sub
jae
sub
fdivrs
or
iret
xchg
jge
addl
repz
mov
xor
add
popa
sbb
ja
or
cmpsl
sub
jnp
int
adc
insl
iret
fistpl
xor
lcall
sbbb
sti
int3
int3
jns
and
jnp
sbb
xlat
movsl
popf
shlb
and
mov
sahf
pop
outsl
sub
xchg
ja
out
push
push
xor
sbb
out
in
jne
repz
lret
pop
sub
bound
lret
pop
pop
add
mov
jg
inc
mov
fs
cmpsl
lret
je
mov
jp
dec
push
fistpl
jns
cld
mov
leave
push
leave
add
sbb
movsl
std
pop
imul
leave
adc
repnz
adc
mov
ds
test
scas
xlat
add
pop
ss
or
jmp
hlt
and
jnp
xor
out
dec
repz
mov
cmpsl
inc
out
sti
aaa
ror
outsl
scas
imul
enter
push
wbinvd
pop
and
data16
inc
sub
pop
in
jbe
mov
sahf
sahf
test
and
imul
fldenv
mov
xor
cmp
push
sub
aaa
mov
xor
divl
aaa
xlat
or
aad
idivb
pop
aad
jae
dec
or
scas
dec
and
dec
xchg
out
stos
jl
jmp
dec
lret
and
aam
pop
in
fidivs
aam
pop
adc
aam
push
sti
jle
inc
pop
aam
pop
cmpsl
add
or
xchg
push
out
repz
xlat
pop
iret
and
inc
push
mov
mov
inc
mov
cmpsb
inc
jae
inc
and
push
push
fucomp
stos
jl
pop
cmpsl
push
scas
and
in
fwait
jne
andl
jne
popa
out
sbb
adc
cltd
and
test
repnz
rclb
jg
mov
mov
pop
movsl
mov
and
or
rcrl
pop
ds
outsl
jae
xchg
shll
outsb
xchg
leave
or
pop
or
sti
mov
push
repz
and
jl
iret
imul
adc
rolb
shr
addb
cmp
add
sahf
mov
addr16
shlb
jnp,pt
inc
out
mov
cmp
fucomp
psubq
repz
add
aas
sysret
loop
sbb
daa
or
rcr
sub
dec
mul
fistpll
sbb
push
mov
mov
out
push
sarl
scas
mov
lahf
fidivrs
cmc
std
or
cmp
fnstsw
mov
insb
or
out
loope
sbb
fucomp
inc
cmpsl
xor
daa
jecxz
jmp
inc
aaa
fdivl
add
add
fwait
sahf
cmp
cld
sbb
cltd
xor
pop
push
mov
and
xchg
fucom
jge
push
lahf
push
out
jne
xorl
jp
sbb
inc
fcomi
fistpl
out
jmp
fildl
sbb
cmp
push
add
sbb
sub
mov
cmp
shlb
xchg
inc
and
push
mov
cmp
mov
jns
xchg
in
pop
clc
es
or
aas
jo
jo
xchg
mov
or
test
dec
idivl
mov
shll
insl
or
inc
rorl
into
cmp
fsubl
and
cmp
movsb
outsb
loop
outsb
sub
inc
ja
and
xchg
mov
push
fisttps
imul
push
jne
rorb
hlt
push
adc
jmp
xchg
je
sub
cmpl
cmc
test
lcall
das
cmpsb
cmp
adc
fdiv
cs
xor
aad
je
in
xchg
and
cmp
or
test
xor
xchg
out
jle
sbb
mov
imul
insl
mov
pop
dec
xchg
cmp
in
mov
xor
or
popa
sub
adc
and
sub
ss
sub
xchg
ss
sti
enter
or
fidivs
xor
aam
pop
or
mov
ret
into
lea
inc
and
jb
sti
push
fcomip
or
cs
sub
mov
or
je
mov
jge
inc
adc
xor
movzwl
out
push
mov
adc
jp
push
mov
cwtl
jb
dec
int
mull
jo
mov
add
es
fwait
mov
rorb
cld
mov
cmovae
pop
pop
mov
pop
aam
inc
inc
dec
arpl
and
dec
push
shl
cmp
inc
fidivs
push
adc
mov
test
or
lock
pusha
fldt
mov
movb
loopne
push
xchg
mov
hlt
je
sub
sbb
fcomip
pop
out
pop
dec
scas
xchg
mov
xchg
popf
mov
xchg
push
xchg
mov
sub
adc
or
test
popf
mov
je
mov
xchg
fcoms
jl
inc
adc
mov
jno
sub
add
aas
cli
subl
pop
dec
adc
push
push
ret
push
adc
shrl
lea
xor
arpl
aam
in
add
and
out
sub
mov
jl
pop
add
xor
int
add
mov
das
inc
out
sti
pop
mov
lret
pop
cmpsb
push
or
test
push
loopne,pt
xor
fst
jecxz
fsubrl
insl
adc
fcomps
outsb
rcl
sti
jb
add
popa
leave
sbb
sub
pop
in
hlt
cmp
iret
jo
sarb
add
int
gs
mov
sbb
add
addr16
cmp
xor
or
insl
jae
push
in
lahf
dec
jnp
loop
sbb
cs
push
or
jecxz
mov
lcall
dec
sub
stos
or
and
mov
pop
mov
cltd
mov
mov
cmp
cmp
imul
mov
jecxz
das
adc
mov
fcoml
adc
sete
pop
lds
orl
cmp
out
cltd
adc
nop
and
addl
stos
inc
pushl
add
ja
lcall
push
and
add
fucomp
mov
js
adc
or
fldenv
or
sbb
or
sub
repz
xor
pop
and
rcr
sti
jle
fwait
inc
and
fnsave
out
cmp
and
sub
pop
xchg
ljmp
lds
pop
outsl
movsb
jnp
xor
ret
pop
cmp
pop
xor
addr16
jbe
sub
data16
inc
outsb
adc
xchg
ret
mov
add
inc
mov
dec
in
add
leave
lock
inc
xchg
popf
dec
xchg
fstp
push
sbb
pop
leave
jmp
sub
pop
mov
push
xchg
add
adc
outsb
mov
jns
push
jnp
jne
std
fsubrs
jo
imul
mov
jns
idivl
ljmp
xor
popf
loope
movl
lret
sbb
fisttpll
inc
shrb
adc
jne
mulb
lods
inc
mov
shrl
add
leave
shl
stc
pop
lahf
jnp
jle
ja
add
jno
test
cmpsl
and
lods
jo
or
add
test
push
jae
sbb
xor
inc
divl
dec
sbb
rorl
fchs
pop
int
popf
sbb
cmpsl
cwtl
gs
mov
cs
xlat
add
dec
movl
lea
lds
push
shr
sti
out
rorl
loope
jo
stc
hlt
xor
rcrl
xor
repz
or
xchg
and
push
adc
mov
shl
mov
je
out
fdivrs
popf
xlat
mov
out
inc
dec
adc
aaa
push
mov
inc
adc
inc
rcrb
sub
xorl
push
jge
inc
mov
jl
dec
jo
in
mov
scas
mov
xchg
jnp
jne
xchg
ljmp
or
push
or
gs
xchg
sbb
scas
jae
fdivl
lods
pop
into
shrl
cmp
jg
mov
and
jne
mov
aas
out
jno
xor
and
jbe
aas
sub
xchg
xchg
adc
outsl
movsl
psllw
outsl
jbe
jge
mov
push
iret
frstor
rcrl
pop
shrb
sub
sub
gs
addb
or
outsb
mov
and
xchg
and
sbb
dec
xchg
mov
sbb
outsb
mov
sub
gs
adc
insl
and
inc
sub
mov
adc
lds
lds
insl
sub
aas
lcall
ffree
ss
and
sub
sub
out
cltd
push
xchg
in
in
inc
cmp
jge
add
sbb
pop
das
add
sbb
jp
adc
jae
sbb
adc
les
addr16
mull
mov
jae
jg
outsb
adc
int3
cltd
adc
inc
push
in
stc
mov
stos
push
bound
mov
fldt
scas
adc
loope
fwait
add
scas
mov
xchg
push
inc
dec
add
sbb
int3
inc
and
pop
or
dec
mov
in
ja
pop
lock
fsubp
imul
stos
and
jae
inc
fucomip
sub
adc
jmp
pusha
sub
andl
popf
lea
stc
jmp
or
fadds
in
jnp
jnp
push
pusha
icebp
xchg
inc
xchg
adc
mov
fistps
cmp
daa
cmpsl
test
mov
popf
mov
pop
mov
jbe
inc
sub
jo
pop
mov
aad
mov
arpl
mov
inc
insl
das
sub
mov
push
lret
jb
sbb
out
mov
inc
pop
add
sbb
sbb
mov
or
cmp
repnz
negb
imul
andb
sbb
rorb
push
xor
fisubs
sbb
test
sbb
xlat
popf
int
mov
imul
cmpsl
ret
cmpsl
inc
sti
mov
jl
and
dec
add
jne
xor
bound
and
mull
js
fadd
add
xor
and
pop
and
pop
and
xchg
xlat
lods
pushf
jecxz
ret
sub
fs
dec
inc
bound
pop
sbb
sbb
ljmp
aaa
adc
cs
nop
xlat
push
adc
sub
inc
ja
xor
daa
fimuls
xor
sarb
push
lahf
lds
adc
aas
loop
cmp
cltd
sub
in
test
or
outsb
pop
jb
cmpsl
iret
sbb
push
adc
ret
imul
add
adc
ret
shrb
lods
xor
xchg
nop
pop
lcall
inc
mov
mov
icebp
loope
jmp
leave
insl
outsl
mov
mov
addb
popa
test
lea
jmp
dec
sub
cmpsb
adc
pop
andl
mov
daa
push
or
jno
add
xchg
dec
adc
jl
push
cmp
mov
ret
insb
xor
and
loope
shlb
adc
das
cs
cmp
ss
jno
movsl
jne
nop
sbb
push
std
popa
pop
adc
xorb
filds
les
jne
jmp
pop
dec
mov
add
dec
out
shr
or
ficoms
test
push
jo
xchg
pop
inc
fadds
adcl
fildl
frstor
sub
enter
xor
je
adc
fnsave
mov
fldl
mov
jg
adc
outsb
mov
add
rolb
cmpsl
jp
or
sbb
out
inc
and
les
sub
in
xchg
inc
fwait
pushl
loop
jmp
pop
sbb
sbb
xlat
mov
push
insl
xchg
aaa
xor
outsb
or
test
xor
lods
call
push
xchg
cmp
sub
mov
cwtl
mov
popa
insl
dec
test
jae
out
loopne
dec
rolb
add
bsf
mov
pop
lods
in
cmpb
mov
xchg
jmp
add
ja
jnp
adc
mov
xor
movsl
xchg
inc
insl
lods
iret
mov
mov
sbb
clc
adc
xor
sbb
pop
rorl
xor
and
adc
popf
sarl
rcrl
movsb
add
xchg
stos
jne
cli
or
mov
add
cmpsl
jecxz
mov
ljmp
pop
or
ret
sbb
sub
push
cmp
orl
xor
out
xchg
dec
insb
mov
adc
cmpb
pop
sbb
push
out
sbb
data16
add
xor
les
adc
insb
mov
xor
lods
stos
push
add
push
ja
push
mov
cmpsl
in
jmp
dec
ret
jmp
mov
in
and
add
or
mov
mov
fbstp
sub
cmp
xchg
out
pop
push
xor
lcall
sbb
out
inc
rdtsc
lea
add
in
push
test
mov
iret
or
lock
pop
xchg
mov
adc
adc
popf
xchg
dec
lods
mov
or
aad
dec
or
shrl
ficoml
ret
jb
outsb
mov
add
xchg
addb
ja
mov
inc
adc
and
dec
sub
scas
or
sbb
mov
aaa
and
sbb
cli
xor
rcrl
fwait
jmp
jo
jb
jnp
mov
xor
iret
leave
loope
sbb
or
aaa
xor
mov
jne
sbb
int3
xchg
push
add
ficomps
dec
mov
in
and
rcll
ss
and
fwait
dec
das
comiss
add
and
jo
scas
aas
fs
mov
test
push
add
pop
aas
dec
int3
rolb
mov
push
xor
add
mov
jg
pop
call
xchg
jne
imul
das
jbe
inc
push
and
or
mov
jbe
pop
sub
and
test
ja
fwait
inc
fistps
pop
jg
scas
ja
inc
andb
ja
cmp
mov
xor
das
xor
push
jbe
xchg
mov
loop
out
cltd
mov
ja
pop
jno
outsl
adc
push
or
push
sti
out
jbe
int3
lods
aas
ret
leave
lds
mov
add
dec
in
fwait
add
cmpsb
adc
sbb
mulb
jbe
push
adc
sub
sbb
daa
sub
mov
das
sub
leave
sti
jp
add
jnp
es
insl
or
adc
sbb
or
xor
sbb
lahf
ret
mov
mov
and
jge
or
adc
rcrl
in
sarl
pop
push
inc
lahf
hlt
push
mov
ret
inc
jbe
mov
ficompl
mov
leave
lea
adc
sub
mov
dec
mov
cmp
insb
out
xor
loopne
jo
aaa
cmp
and
add
cmc
or
jbe
popf
arpl
lea
jo
data16
and
testl
pop
dec
or
insb
sarb
aaa
cmp
dec
imul
xchg
mov
push
test
push
sbb
adc
imul
scas
dec
push
cmp
mov
pop
jne
lahf
test
mov
stos
sbb
daa
mov
out
fucomip
xor
xor
xchg
mov
and
xchg
addb
stos
xor
or
shll
adc
icebp
aaa
cmp
lds
lods
ret
lret
push
adc
lock
leave
hlt
cmp
je
adc
mov
aas
push
push
sbb
mov
and
adc
sbb
mov
aaa
adcb
int
outsl
out
das
jbe
lahf
adc
xchg
in
repz
ljmp
jmp
adc
adc
cli
sar
and
cmp
adc
push
fildl
jecxz
fnsave
sub
sbb
nop
ljmp
cmp
test
dec
imul
xor
mov
inc
jle
mov
mov
ret
fldl
mov
and
or
es
test
addl
cmpl
dec
mov
movsb
push
in
pop
pop
cmp
rcll
loopne
test
and
mov
mov
add
ja
shll
scas
jae
push
loop
adcb
or
inc
decl
addl
xchg
fildl
cmpsl
jle
lret
es
lds
pusha
xor
out
mov
dec
mov
inc
mov
push
or
inc
aad
in
mov
movl
mov
push
xchg
xchg
cwtl
lea
loope
ret
ret
adc
push
cmp
sar
outsb
and
in
push
daa
fildll
jmp
dec
std
xor
sbb
lea
icebp
pop
mull
mov
popf
addr16
xor
sbb
outsb
fsincos
jne
jne
cmpsb
sbb
call
push
push
inc
leave
dec
and
fwait
jge
and
pop
pop
mov
and
test
cmp
or
xlat
cmp
add
std
jmp
in
loopne
ljmp
js
pop
and
xorl
imul
divl
ret
addr16
ds
imul
into
add
xlat
mov
mov
ja
in
pop
notl
add
insb
stos
xchg
xchg
pop
cmp
mov
dec
push
inc
pop
adc
mov
mov
lcall
sbb
adc
mov
jnp
mov
lea
add
push
jge
inc
push
lods
lahf
notl
loope
or
daa
xor
fnstsw
fbstp
xlat
sub
sbb
xchg
mov
jnp
xchg
sbb
imul
push
out
push
dec
xchg
jae
popa
das
shll
std
add
movsb
aam
pop
and
or
outsl
lahf
sbb
cmpsb
xchg
mov
push
xor
aaa
add
pop
iret
lea
test
out
jge
dec
mov
addb
movsl
pop
sbb
push
aad
cmpb
gs
add
sbb
das
and
or
xorl
mov
sub
incl
add
inc
sbbb
mov
rcll
dec
dec
dec
xchg
mov
or
hlt
dec
mov
cmc
inc
test
sahf
aas
add
xor
lea
cmc
or
orb
cmp
mov
ret
outsl
mov
jmp
push
add
fcmovne
pop
out
mov
hlt
sub
stc
or
adc
push
push
cmp
gs
mov
enter
sbb
or
jnp
nop
daa
movsl
aaa
sbbl
ret
sti
add
stos
mov
pop
mov
lcall
les
ficoml
sbb
stos
sbb
mov
adc
sbb
sub
aaa
hlt
in
add
push
push
jg
jne
jno
mov
daa
jl
sarb
ret
sbb
fld
jo
mov
roll
popf
and
jb
jo
fldl
add
mov
push
test
insb
ret
pop
push
aaa
push
lock
jo
aaa
mov
mov
lahf
mov
adc
mov
outsb
jno
cmpsb
mov
xchg
fcmovnbe
lods
aaa
int
cwtl
inc
test
push
and
mov
jg
jg
mov
int3
andl
mov
mov
shl
dec
push
repz
sbb
sbb
mov
xchg
sub
add
repz
pop
cmp
mov
aam
pop
sub
lods
mov
imul
sbb
mov
imul
lds
mov
test
pusha
sbb
iret
shrl
jns
mov
adc
mov
sub
and
or
stos
aam
repz
pop
jg
sbb
roll
js
xor
adc
orl
lahf
lods
sub
inc
push
fbstp
in
stc
mov
jp
jns
and
xchg
fldt
sub
add
cmp
or
repnz
pop
test
rclb
mov
pop
mov
pop
mov
insl
mov
push
les
sbbl
out
imul
pop
std
xchg
testl
push
lock
mov
call
addr16
stos
mov
and
pcmpgtb
sbb
orl
in
mov
pop
push
fwait
repnz
call
mov
jno
shrb
popa
xor
repz
outsl
in
pop
push
mov
incl
mov
push
jns
dec
jno
icebp
fstpt
sbb
dec
testb
stc
das
mov
and
jmp
mov
push
adc
jnp
xchg
mov
fisubrl
hlt
imul
and
fnstcw
dec
clc
mov
aas
add
mov
mov
std
fimuls
pop
xchg
and
negl
out
scas
mov
es
dec
outsl
xor
mov
mov
and
mov
xorb
xchg
icebp
dec
fwait
loope
ss
and
icebp
add
outsb
jns
inc
gs
lret
sbb
vmwrite
ret
inc
xor
xorl
jnp
fwait
pop
fstpt
push
dec
sbb
popf
push
and
sti
add
jne
pop
xor
cs
das
loop
add
out
push
fnstenv
and
ret
ret
jecxz
vmovddup
and
push
pop
pop
ja
jno
aas
mov
mov
addr16
xlat
mov
adc
pop
pop
or
aaa
mov
stos
jge
test
adc
out
out
lock
das
and
lock
and
popf
into
xchg
ljmp
pusha
xlat
pop
jg
arpl
mov
int3
adc
sti
or
ss
mov
cmp
add
cwtl
scas
repz
sub
cmpsl
jg
outsl
cmpsb
xorl
test
loop
cmp
push
inc
sub
inc
roll
lock
outsb
insb
imul
xchg
lea
shll
fsubrp
sub
in
pop
std
nop
orb
cmp
loope
push
out
xor
cmpsl
inc
jo
nop
shl
loope
add
adc
cli
add
lcall
fxch
out
ja
sbb
jmp
inc
out
dec
xor
add
push
mov
push
xor
js
adcl
add
push
bound
push
aaa
xor
xlat
jne
jnp
mov
fstpt
outsb
mov
mov
iret
jnp
sub
mov
xchg
inc
or
shl
mov
pusha
test
ds
movl
pop
fldln2
xchg
unpcklps
sbb
mov
pop
outsb
and
sbb
outsl
stos
mov
imull
arpl
lock
imul
jo
out
sbb
dec
inc
in
in
loopne
inc
lret
push
adc
js
or
jns
cwtl
adc
outsb
mov
icebp
std
popa
js
mov
popf
inc
jne
ret
add
push
shlb
mov
test
jno
sahf
test
sar
lret
sar
xchg
sti
test
fmul
repz
xlat
into
or
lds
fsts
or
sub
fiadds
sbb
sbb
lret
dec
push
sub
daa
push
cwtl
mov
and
mov
add
stos
jl
loope
imul
adc
push
daa
lret
xchg
mov
inc
mov
pop
loope
sbb
mov
xchg
loopne
inc
test
push
fldl
dec
inc
fstpt
bound
idivl
mov
add
movb
aam
push
ret
mov
imul
cmp
lret
xchg
xor
ja
adc
rcr
mov
jae
or
adc
inc
push
lods
inc
jp
or
sbb
es
mov
jbe
xor
js
cmp
cmp
fimuls
push
inc
push
es
js
xor
fstps
mov
jnp
out
sbb
das
pop
or
pop
jmp
inc
lods
inc
mov
sub
push
insb
daa
inc
push
jmp
mov
jmp
fidivs
jge
daa
sti
aad
out
sub
jl
dec
pusha
mov
pop
inc
inc
mov
jg
push
es
xchg
or
psubq
lods
loopne
jge
in
sbb
sbb
cmp
repz
cmp
xchg
mov
mov
mov
pop
repz
sti
or
fbstp
mov
bound
test
push
mov
lock
nop
add
xchg
sbb
roll
iret
push
lcall
fwait
push
xchg
lea
jo
lret
test
mov
das
pusha
test
jo
in
jg
lret
sti
shll
stos
mov
xor
jle
cli
and
or
outsl
aam
pop
pop
cli
sarl
cli
mov
pop
adc
dec
iret
or
les
sub
iret
dec
out
inc
lock
xor
jno
add
mov
inc
pop
pop
cmpsl
inc
adc
outsl
mov
push
shll
jecxz
rorb
cltd
mov
adc
sbb
test
jecxz
out
les
xchg
cmpsl
mov
out
aas
ja
sub
sbb
sti
dec
scas
jae
fistl
aaa
inc
mov
pop
mov
fwait
jbe
mov
inc
mov
sub
adc
mov
les
lods
push
ret
pop
push
adc
jmp
jbe
adc
adc
out
push
or
pop
shrl
adc
jne
jno
xlat
hlt
mov
aad
and
jp
aas
add
pop
stos
pop
xchg
xchg
aas
popf
adc
adc
cmp
iret
adc
inc
cmp
xchg
fstps
xchg
mov
cmp
clc
test
fwait
xchg
push
mov
xchg
mov
stos
push
testl
ss
mov
dec
js
sbb
out
das
adc
adc
in
mov
xor
mov
in
std
or
nop
lock
or
nop
sarb
pop
jns
fsubl
out
pop
and
and
inc
inc
jns
sbb
add
nop
test
cmp
mov
sbb
lds
pusha
pop
jae
nop
or
pusha
js
or
pop
or
inc
cmpb
bound
out
popf
icebp
pop
bound
inc
and
adc
and
in
mov
jmp
sti
mov
arpl
or
addr16
dec
inc
arpl
or
cmp
add
fs
ret
int3
mov
and
mov
loope
and
inc
fnstcw
push
adc
jg
scas
nop
jo
xlat
fildl
sbb
lea
or
jle
lds
arpl
adc
or
xchg
iret
add
jge
nop
lock
xlat
sbb
sub
fsts
xchg
add
jmp
add
insl
or
outsl
in
mov
jmp
mov
adc
inc
pop
or
dec
jns
cmp
sbb
fbld
and
or
int
cltd
out
jo
dec
pop
repz
adc
cltd
adc
mov
das
xchg
mov
adc
or
jl
idivl
fwait
add
cmp
nop
fistps
xor
mov
sbb
loope
repnz
dec
fisttps
or
test
mov
and
pop
rolb
and
mov
mov
lahf
movsl
sub
out
fldl
sti
or
cmpsl
cmp
test
inc
fstl
enter
mov
and
enter
xor
and
mov
mov
dec
bound
and
xorl
xor
push
adc
mov
xor
adc
or
mov
adcl
call
and
popa
mov
sub
pusha
pop
lock
nop
push
inc
add
push
push
dec
inc
inc
push
push
mov
adc
stos
inc
pop
push
dec
arpl
outsl
pop
mov
lds
pop
xchg
dec
adc
inc
inc
mov
std
fiadds
xchg
ja
scas
dec
inc
add
add
fdivrp
cmp
inc
add
mov
mov
xor
mov
push
and
mov
scas
jmp
push
pop
ret
jb
push
push
arpl
push
push
inc
inc
and
sbb
mov
inc
jmp
add
dec
add
inc
imul
data16
and
scas
andb
xor
inc
ja
push
mov
xlat
push
mov
mov
sbb
mov
dec
dec
dec
insl
in
pop
jnp
jne
out
dec
xchg
mov
pop
data16
xchg
inc
xchg
inc
inc
sub
inc
outsb
xchg
mov
lods
jno
dec
dec
push
add
inc
outsb
pop
xor
ret
push
lret
push
dec
gs
addb
cmpsl
aad
inc
inc
fs
push
push
fldenv
in
dec
paddsw
push
dec
out
out
lcall
pop
inc
dec
cmp
sub
dec
inc
dec
or
je
bound
insb
sub
subb
imul
jo
ffree
test
jl
ss
cmp
rorl
sbb
push
outsl
jb
js
filds
data16
add
dec
inc
mov
dec
inc
loop
je
mov
cmp
sub
jl
lock
jo
cmpb
jae
push
js
cmpsl
dec
ficomps
daa
gs
push
int3
cmp
xor
in
add
add
jne
mov
or
imul
cmp
je
int3
int3
daa
push
sbb
mov
push
jle
ds
sub
add
daa
sub
jl
inc
dec
push
xor
pushf
xor
fcmovnb
dec
stos
aam
fs
push
push
cld
mov
orb
cmp
mov
ss
data16
push
scas
imul
mov
xor
push
pop
push
sub
ds
shll
mov
ss
or
mov
jb
xor
cs
daa
imul
xlat
adc
jle
ds
rorl
xor
sub
mov
cmp
inc
xchg
test
adcl
inc
int
and
popa
icebp
adc
arpl
push
decb
or
test
xchg
mov
adc
fwait
shrl
jecxz
cmp
shlb
jnp
sub
add
lods
mov
jb
cmp
adc
cmp
je,pn
clc
fcomi
fiaddl
pop
push
or
data16
sbb
outsb
adc
fmuls
pop
ss
outsb
dec
jge
dec
inc
dec
pop
dec
mov
je
cmpsl
jmp
sbb
fsub
ja
out
mov
das
xor
add
inc
mov
mov
dec
inc
ficoml
lcall
or
lcall
jge
dec
inc
adc
adc
push
bound
and
aas
into
push
push
sbb
test
push
fwait
js
dec
ret
adc
imul
in
jb
add
fdivrl
push
push
cs
inc
addr16
jno
loop
dec
pusha
stos
outsb
jb
pop
push
cmp
loope
imul
inc
push
inc
push
jbe
bound
lcall
inc
mov
ja
call
pushf
add
or
jmp
iret
loopne
pop
stos
js
dec
iret
into
mov
testb
stc
stos
imul
das
loopne
and
outsb
outsb
sub
xor
mov
mov
test
testl
mov
or
and
sub
addr16
jle
mov
std
dec
dec
out
div
aas
cmp
out
inc
in
data16
add
clc
or
adcb
sbb
mov
sub
in
jecxz
jb
int3
mov
add
jmp
popw
movsb
loope
loope
inc
in
add
jnp
loopne
jecxz
in
fiadds
dec
push
sub
pusha
push
and
lods
test
inc
sbb
or
or
add
inc
xor
ret
add
jmp
dec
mov
icebp
loope
lock
and
pop
pop
sbb
icebp
in
icebp
fistpll
movsb
ret
aad
out
outsb
mov
js
jmp
roll
jmp
out
int
and
push
sub
gs
mov
movsl
cmp
or
inc
cmp
add
adc
orb
push
out
adc
sub
inc
or
pop
das
dec
add
or
sub
arpl
jg
in
ret
xlat
jge
mov
sbb
add
loope
sbb
je
pop
cmp
or
jmp
repnz
mov
insb
rorl
out
lcall
shll
xor
push
lods
iret
fincstp
fnstenv
pop
lds
icebp
pusha
sub
in
push
loopne
jnp
jne
dec
add
roll
js
push
sbbb
in
adc
cmova
es
or
push
mov
arpl
sub
or
cmpsl
dec
or
xchg
popa
push
addr16
inc
cltd
xchg
pusha
mov
cmp
push
lods
push
jmp
aad
push
mov
add
pop
icebp
pop
test
repz
sub
pop
add
in
cmc
lret
inc
pop
or
in
ss
pop
mov
dec
mov
rclb
adc
addb
imul
call
sub
sbb
mov
add
xor
ljmp
inc
les
jbe
or
jp
add
cmp
int3
mov
or
xor
out
and
bound
outsb
adc
idivl
test
add
cmpsb
in
push
stc
cmpsb
jecxz
rorl
clc
ret
sbb
cmpsb
sti
in
stc
out
mov
incb
outsb
push
inc
ror
pop
stc
xor
push
stos
leave
mov
pop
dec
mov
adc
sbb
clc
sbb
jmp
add
adc
sbb
pop
or
enter
fsubl
jmp
mov
iret
push
fxch
sub
mov
xor
loope
pop
scas
ss
std
jg
add
sub
cmp
fcoml
jecxz
fstl
adc
loope
ss
mov
add
fisttps
mov
or
add
insl
loope
push
xor
in
xchg
in
out
repz
in
roll
sub
std
jmp
mov
mov
rorb
pop
mov
adc
shll
insb
cmp
imul
inc
adcl
movsl
inc
sbb
fists
xorl
adc
ss
add
shlb
add
les
into
and
sbb
adc
ljmp
add
in
scas
lea
mov
mov
pusha
jo
idiv
stos
call
adc
xchg
ret
stc
fcomi
cmc
add
mov
mov
roll
iret
loope
mov
mov
fucomp
jmp
lods
push
aam
ja
jg
es
push
cmp
shll
das
or
push
sub
popa
add
mov
add
shll
aaa
mov
adc
daa
cmovs
sbbb
sti
sub
fcomps
sbb
dec
jb
mov
dec
mov
mov
rcr
pop
xorl
hlt
push
jmp
push
inc
mov
arpl
dec
xchg
xchg
pop
adc
bound
out
mov
ja
add
js
or
dec
or
inc
adcl
push
int
xchg
lahf
xchg
sbb
bound
xchg
xchg
jne
inc
sbb
and
adcb
pop
push
pop
add
das
mov
fwait
cmpsl
sub
fisttps
pusha
lock
mov
mov
add
add
fwait
or
nop
mov
and
test
mov
cli
data16
cbtw
pop
daa
add
mov
push
cmpsl
jg
sti
dec
xorl
stos
mov
pop
inc
sti
inc
movsb
or
shlb
fimuls
push
js
scas
dec
ljmp
cwtl
mov
out
push
xor
dec
sahf
mov
jae
pop
mov
xlat
outsl
enter
fs
imul
out
jbe
dec
dec
arpl
ljmp
jae
daa
hlt
push
daa
shr
int3
pusha
pusha
mov
shll
inc
fcmovbe
mov
xor
fdivl
push
stc
adc
lea
mov
pop
pop
repnz
arpl
xor
push
addr16
aaa
std
ja
mov
dec
addr16
xchg
dec
test
add
mov
inc
test
ss
adc
movsl
adc
testb
push
js
and
inc
into
adc
jmp
mov
or
and
inc
add
lock
pop
loop
outsb
push
inc
rcrl
ds
addr16
mov
and
cmp
pop
pop
call
mov
shll
addr16
jbe
jno
dec
dec
out
pop
test
stc
dec
fnstenv
xor
push
imul
adc
add
cwtl
jecxz
sbb
in
inc
sub
movsl
iret
xor
or
or
in
or
into
imul
xchg
addr16
aam
mov
andl
add
loope
fs
add
xor
pop
outsb
insb
data16
cmp
add
insl
std
jl
add
sbb
into
add
loopne
or
jp
jge
js
mov
icebp
and
jae
sti
xor
andb
push
push
jle
js
cmp
sbb
mov
popf
fldl
inc
or
dec
rorl
lods
dec
mov
pop
fwait
sub
push
imul
mov
js
lcall
bound
adc
xor
pop
pop
cmc
sub
cmp
fiaddl
mov
jl
aaa
push
mov
addr16
aam
aam
popa
movsl
add
js
insb
pop
icebp
jae
xor
mov
outsb
loope
loope
outsl
xchg
insl
mov
xchg
fwait
push
xor
adc
or
lahf
xlat
mov
call
mov
add
adc
cltd
adcl
aam
test
mov
insl
mov
enter
push
bound
sti
mov
test
dec
cs
daa
sbb
jo
mov
push
add
repz
imul
aaa
pop
push
and
loop
mov
in
adcl
sbb
dec
xor
xchg
adc
xor
mov
cmp
pusha
neg
mov
and
or
sti
mov
dec
adc
push
nop
add
cmp
or
add
out
je
test
sbb
ret
mov
shl
pusha
pop
jl
ds
sub
lds
arpl
push
in
jmp
push
jnp
dec
shlb
sbb
test
adc
in
push
cltd
inc
jno
mov
test
fimull
stos
jbe
shl
pop
movsb
add
lcall
push
sbb
adc
add
roll
lcall
outsl
sbb
fs
push
in
repz
inc
outsl
or
cmp
daa
in
test
iret
mov
push
ljmp
and
dec
inc
shlb
test
out
cltd
jbe
adc
push
loop
mov
add
test
pop
std
mov
xchg
gs
or
adc
push
rol
inc
push
lock
adc
das
fbld
inc
pop
es
push
push
dec
dec
dec
sub
jnp
sbb
push
jns
jmp
scas
andl
popf
fsubrs
add
out
cmp
shrl
dec
push
add
daa
mov
leave
inc
dec
push
add
movsb
mov
shlb
dec
addl
arpl
adc
pop
sarb
mov
mov
dec
shlb
or
cmp
and
loop
add
lcall
push
cld
fcomps
idivb
push
aaa
daa
sbb
add
pop
dec
add
jb
js
adc
ret
rclb
mov
xchg
out
outsb
aaa
sbb
dec
jb
jne
inc
iret
or
pusha
dec
sbb
and
cmp
cmpsb
inc
pop
cmp
sub
push
cmp
rclb
bound
adc
cmpsl
fstpl
dec
push
outsl
pop
cmp
jg
mov
dec
mov
and
je
sbb
loope
test
dec
insb
jg
cmpsb
cmc
mov
int3
or
dec
cmpsb
inc
bound
imul
dec
js
cmp
andb
push
mov
xchg
test
dec
xchg
mov
inc
cli
dec
push
push
xchg
inc
adc
push
daa
adc
lock
cwtl
in
add
inc
inc
add
adc
mov
sub
hlt
sub
or
push
adc
jnp
or
je
mov
dec
dec
fs
mov
mov
adc
std
cs
shlb
stos
sub
shll
ja
sbb
xchg
daa
pop
inc
loopne
jl
imul
or
enter
push
insl
cmc
into
push
pop
les
test
mov
or
or
jbe
cmp
inc
mov
shll
sub
jo
loope
shrl
imul
sbb
push
mov
adc
dec
or
cs
popa
xor
hlt
loope
stos
inc
inc
dec
daa
adc
dec
inc
pusha
xor
mov
add
test
lds
mov
pop
mov
inc
pop
pop
add
xor
pop
xchg
mov
nop
or
add
mov
mov
addb
and
push
push
inc
or
jmp
daa
add
push
push
mov
pusha
mov
jo
sbb
push
cmp
fildl
iret
shrd
leave
insl
rorb
mov
xor
push
mov
arpl
mov
add
push
inc
pusha
push
outsl
lahf
mov
adc
mov
test
sub
cmp
outsl
daa
leave
inc
stos
adc
adc
imul
adc
lods
stos
push
jno
and
arpl
mov
imul
out
insl
mov
mov
mov
leave
add
ljmp
sbbb
sbb
and
shlb
nop
and
cmc
mov
cmovle
push
add
jmp
daa
mov
jle
xchg
push
test
push
pop
push
add
pop
ja
daa
inc
or
popa
add
pusha
or
cmp
mov
xlat
pop
in
test
sbb
pop
fcomip
jnp
daa
nop
push
shll
push
lea
or
iret
add
or
cmp
daa
push
or
xchg
or
es
ss
or
mov
repz
adc
iret
and
pusha
dec
add
lret
add
add
add
jmp
rcrl
out
cmpsl
cwtl
into
push
add
insb
adc
jmp
sub
lret
movsl
cwtl
adc
push
in
roll
add
push
es
pop
add
mov
sub
add
lds
pop
cmpsb
mov
popa
pusha
lock
xchg
cs
or
lea
sahf
xchg
arpl
pmaddwd
sbb
cmp
pop
lock
fbld
dec
dec
aaa
ljmp
inc
pop
xor
rcr
out
pop
bound
and
inc
jge
or
sbb
mov
dec
daa
mov
lock
push
mov
xor
add
pop
out
insb
arpl
xchg
movsb
daa
incb
es
roll
ja
push
or
loop
push
sbb
movsl
lret
lcall
stos
shll
sub
pushf
mov
sub
dec
sub
push
sbb
or
fildll
mov
pop
xchg
repnz
mov
clc
scas
cmc
das
jb
jbe
jae
jne
imul
adc
loopne
sar
add
add
add
incl
xor
bswap
mov
inc
inc
cli
mov
popa
and
loop
jecxz
sbb
add
add
add
ret
lock
es
out
add
fcomp
mov
sbb
ret
cmp
jne
xor
out
adc
fsubrp
sub
or
push
daa
dec
add
lds
js
inc
mov
push
dec
and
xlat
inc
sbb
push
or
insl
jl
aaa
lods
out
divl
jl
iret
mov
push
dec
mov
int
jne
dec
test
sub
dec
aad
pop
or
add
push
pop
or
inc
mov
fisubrs
add
sub
mov
jo
inc
inc
inc
pop
and
cmp
arpl
adc
dec
shrl
or
sbb
ficompl
add
popa
sti
push
push
sti
rol
cltd
mov
out
sub
out
lods
adc
push
sbb
adc
adc
push
mov
out
cmp
sbb
scas
cmpsl
and
mull
adc
inc
add
lds
lret
cmp
pop
pop
jl
sbb
push
leave
gs
test
scas
pop
cwtl
test
sub
push
ljmp
add
pop
xchg
dec
inc
loope
pop
imul
cld
mov
nop
lcall
aas
repz
in
stos
sub
sbb
pop
or
jbe
fistpll
imul
sub
inc
sbb
add
sub
push
dec
adcb
inc
iret
add
divb
rcrb
dec
inc
sub
es
inc
push
or
test
enter
jae
xchg
inc
or
idivb
mov
cmp
lods
dec
push
push
inc
adc
dec
mov
repz
adc
push
mov
xchg
icebp
add
sarb
add
add
aad
jns
sub
jecxz
loop
lds
add
inc
icebp
imul
inc
in
fnsave
inc
ret
sbb
rcll
fbld
lds
addr16
and
mov
outsb
lods
adc
fldcw
sub
add
sbb
stos
or
and
stos
lods
imul
stos
and
xchg
add
stos
jg
mov
push
adc
ret
jne
push
pop
or
fisubl
aad
test
ss
and
inc
pop
adc
pusha
and
push
pop
sub
mov
xchg
stos
imul
lds
outsl
add
icebp
mov
subl
in
fnstsw
push
mov
or
les
test
adc
or
or
mov
nop
mov
andl
push
sub
sti
leave
rclb
lods
lods
lods
adcb
out
xor
inc
dec
xor
and
scas
push
push
outsl
ljmp
push
mov
xlat
sub
adc
cwtl
inc
pop
inc
fcmovne
dec
push
lods
sub
fisubrl
cwtl
push
adc
mov
push
aaa
mov
adc
mov
pop
xchg
loop
adc
mov
test
cmp
push
pop
add
push
add
push
adc
push
mov
jnp
dec
sbb
cltd
push
xchg
mov
sbb
mov
das
mov
rcll
test
lods
push
mull
sub
dec
push
inc
mov
pop
les
push
jmp
lods
sbbb
std
sbb
add
stos
jmp
cmp
adc
mov
xor
inc
inc
xor
adc
mov
lods
std
jne
lods
insl
test
push
xchg
push
fistpl
xchg
lds
bound
adc
stc
mov
stc
mov
xor
movsb
adc
adcl
inc
pop
xchg
and
out
popa
mov
or
stos
ja
fwait
bound
ret
inc
movsl
push
push
test
push
imul
ljmp
les
cmp
aad
incl
fs
and
enter
push
add
add
jl
pop
pushf
add
stos
aas
fisttpl
in
loope
and
jbe
cmp
das
xchg
adc
or
pop
and
and
es
mov
mov
aad
xchg
mov
rcrl
adc
jbe
sbb
faddl
out
mov
in
aaa
or
popa
test
sub
aaa
xchg
scas
dec
leave
add
xchg
daa
mov
cmpsl
jbe
insl
aaa
jl
aad
adc
jb
xchg
scas
sub
xlat
in
inc
in
add
lock
das
and
add
or
xchg
ds
inc
pop
inc
inc
pop
rorl
mov
das
xor
pop
sbb
shl
mov
ds
push
pop
lods
jno
mov
jo
aas
stc
cmp
adc
add
dec
or
add
mov
aas
loop
push
ja
fmuls
push
xchg
insl
daa
pop
jnp
aas
fwait
ja
aas
add
mov
xor
aaa
xor
pop
jb
mov
scas
mov
bound
xchg
sbb
rcrl
add
scas
and
and
in
cmp
ds
cmpsb
nop
fldl
mov
aam
pushl
in
fcoml
pop
pmulhuw
bound
or
scas
aaa
push
insl
mov
jae
daa
testl
or
jb
lods
outsb
das
jae
rorl
je
daa
jbe
and
dec
insb
xor
pop
in
movsl
xchg
popf
mov
pop
out
cmova
mov
gs
movsl
out
mov
testl
movsb
dec
fistps
sub
lea
inc
push
and
sub
inc
push
xchg
fs
adc
and
adc
dec
fs
mov
mov
or
cwtl
xor
test
cmp
addr16
in
add
je
insb
outsb
inc
mov
inc
mov
arpl
aaa
sbb
mov
inc
insl
or
push
lods
ficoml
pusha
sbb
sbb
push
jns
gs
push
imul
addr16
jns
jno
add
gs
js
cltd
int3
pop
lock
dec
outsl
fs
dec
popa
outsb
or
inc
shl
jne
cmp
adc
in
dec
fs
sbb
test
mov
testl
jb
popa
je
push
and
jnp
and
mov
inc
xchg
jge
mov
and
outsl
insl
jo
je
outsl
outsb
push
fcmovb
xor
and
jns
jae
or
adc
ret
cmp
imul
cmp
popa
ror
xchg
jl
imul
addr16
outsb
lahf
dec
gs
xchg
sbb
jne
stos
push
dec
or
xor
ss
fisubl
jle
ss
cmp
and
arpl
inc
and
mov
cmp
shlb
inc
jae
pop
arpl
cmp
mov
jbe
stos
addr16
ja
push
sub
push
dec
out
fsubrs
in
fiaddl
jbe
arpl
data16
dec
mov
and
dec
ss
or
clc
pop
xor
outsl
ja
loop
popf
in
xchg
mov
outsb
sub
mov
mov
and
and
mov
jbe
popa
jae
aam
ficompl
cs
sbb
push
popa
in
imul
js
push
outsl
addr16
or
pop
push
arpl
dec
outsb
mov
inc
lret
outsw
push
hlt
inc
outsl
js
pusha
aam
mov
jno
ds
xchg
cmpsl
insl
fstps
add
shlb
mov
dec
and
xchg
jo
arpl
sbb
gs
mov
subb
hlt
push
outsb
cs
lret
mov
addr16
lods
mov
jb
je
cmp
dec
sub
ret
or
push
push
imul
add
dec
add
or
lock
jg
mov
lock
lock
testl
cmc
pushf
mov
int
or
add
lock
add
push
lock
sti
mov
or
add
repnz
prefetch
or
lock
imul
mov
push
add
or
aam
lock
fsub
ret
imulb
inc
pop
adc
add
lock
sub
std
cmpsb
addb
cmc
mov
add
inc
or
test
sbb
sub
add
sbb
push
add
dec
rcll
addb
add
mov
mov
sbb
iret
insl
packuswb
add
test
cmp
rolb
nop
add
inc
inc
fwait
nop
ja
mov
push
add
push
dec
mov
inc
push
inc
jo
negl
mov
outsb
dec
inc
push
rolb
or
cli
sub
mov
add
imul
add
mov
push
add
mov
and
rorb
push
jae
aam
loope
dec
jbe
mov
push
outsb
mov
stos
add
outsb
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
