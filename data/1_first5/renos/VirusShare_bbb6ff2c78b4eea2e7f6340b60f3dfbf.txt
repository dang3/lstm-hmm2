jmp
mov
jmp
mov
jmp
mov
popa
xor
fs
data16
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
movl
lea
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
lea
xchg
cmp
jge
inc
dec
cmp
jns
mov
mov
mov
xchg
lea
mov
xchg
lea
xchg
mov
mov
movl
lea
push
mov
push
call
lea
xchg
cmp
jge
inc
dec
cmp
jns
mov
mov
mov
xchg
lea
mov
xchg
lea
xchg
mov
mov
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
lea
xchg
cmp
jge
inc
dec
cmp
jns
mov
mov
mov
xchg
lea
mov
xchg
lea
xchg
mov
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
movl
lea
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
mov
pop
ret
lea
push
mov
add
cmp
je
cmp
jo
mov
jmp
xchg
mov
mov
xchg
xchg
lea
mov
inc
mov
mov
xchg
lea
inc
movl
lea
push
mov
push
call
mov
cmp
jns
inc
inc
cmp
jne
mov
mov
xchg
lea
mov
mov
xchg
lea
xchg
mov
mov
mov
dec
dec
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
lea
xchg
cmp
jge
inc
dec
cmp
jns
mov
mov
mov
xchg
lea
mov
xchg
lea
xchg
mov
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
mov
mov
mov
lea
xchg
mov
inc
dec
je
mov
mov
mov
mov
mov
mov
xchg
mov
movl
lea
push
mov
push
call
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
js
xchg
inc
dec
dec
mov
xchg
mov
mov
jmp
lea
jmp
xchg
lea
mov
mov
lea
mov
lea
dec
dec
dec
movl
lea
push
mov
push
call
mov
pop
ret
nop
push
mov
add
mov
mov
cmp
je
lea
lea
mov
mov
mov
mov
mov
lea
dec
dec
xchg
lea
xchg
lea
mov
dec
dec
dec
mov
cmp
je
call
cmp
jno
lea
mov
mov
lea
mov
mov
lea
lea
lea
lea
mov
mov
xchg
mov
mov
xor
divl
test
jne
mov
mov
mov
lea
xchg
mov
inc
dec
je
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jl
jmp
mov
lea
mov
mov
dec
dec
dec
inc
mov
mov
lea
mov
lea
inc
xchg
mov
mov
inc
dec
dec
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
js
xchg
xchg
lea
lea
mov
mov
dec
dec
inc
inc
dec
inc
mov
jmp
mov
jmp
mov
dec
lea
lea
inc
inc
inc
dec
mov
cmp
je
jmp
cmp
je
cmp
jo
mov
jmp
xchg
mov
mov
xchg
xchg
lea
mov
inc
mov
mov
xchg
lea
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
lea
xchg
cmp
jge
inc
dec
cmp
jns
mov
mov
mov
xchg
lea
mov
xchg
lea
xchg
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
js
xchg
inc
dec
dec
mov
xchg
mov
mov
jmp
lea
jmp
xchg
lea
mov
mov
lea
mov
lea
dec
dec
dec
mov
cmp
je
jmp
cmp
je
cmp
jo
mov
jmp
xchg
mov
mov
xchg
xchg
lea
mov
inc
mov
mov
xchg
lea
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
inc
gs
jb
arpl
fs
jae
add
push
mov
add
mov
cmp
je
call
cmp
jl
jmp
mov
lea
mov
mov
dec
dec
dec
inc
mov
mov
lea
mov
lea
inc
xchg
mov
mov
inc
dec
dec
mov
sub
mov
mov
cmp
jns
inc
inc
cmp
jne
mov
mov
xchg
lea
mov
mov
xchg
lea
xchg
mov
mov
mov
dec
dec
inc
push
mov
mov
xor
call
mov
mov
mov
mov
lea
xchg
mov
inc
dec
je
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
mov
call
cmp
js
xchg
xchg
lea
lea
mov
mov
dec
dec
inc
inc
dec
inc
mov
jmp
mov
jmp
mov
dec
lea
lea
inc
inc
inc
dec
push
mov
mov
xor
call
mov
cmp
jno
lea
mov
mov
lea
mov
mov
lea
lea
lea
lea
mov
mov
xchg
mov
mov
mov
cmp
je
lea
lea
mov
mov
mov
mov
mov
lea
dec
dec
xchg
lea
xchg
lea
mov
dec
dec
dec
mov
mov
push
add
jmp
mov
mov
cmp
jl
jmp
mov
lea
mov
mov
dec
dec
dec
inc
mov
mov
lea
mov
lea
inc
xchg
mov
mov
inc
dec
dec
lea
mov
push
mov
jmp
mov
cmp
jns
inc
inc
cmp
jne
mov
mov
xchg
lea
mov
mov
xchg
lea
xchg
mov
mov
mov
dec
dec
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
je
cmp
jo
mov
jmp
xchg
mov
mov
xchg
xchg
lea
mov
inc
mov
mov
xchg
lea
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
js
xchg
inc
dec
dec
mov
xchg
mov
mov
jmp
lea
jmp
xchg
lea
mov
mov
lea
mov
lea
dec
dec
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
lea
xchg
cmp
jge
inc
dec
cmp
jns
mov
mov
mov
xchg
lea
mov
xchg
lea
xchg
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jno
lea
mov
mov
lea
mov
mov
lea
lea
lea
lea
mov
mov
xchg
mov
mov
sub
add
add
mov
cmp
je
lea
lea
mov
mov
mov
mov
mov
lea
dec
dec
xchg
lea
xchg
lea
mov
dec
dec
dec
lea
pushl
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
cmp
js
xchg
xchg
lea
lea
mov
mov
dec
dec
inc
inc
dec
inc
mov
jmp
mov
jmp
mov
dec
lea
lea
inc
inc
inc
dec
mov
mov
mov
lea
xchg
mov
inc
dec
je
mov
mov
mov
mov
mov
mov
xchg
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jns
inc
inc
cmp
jne
mov
mov
xchg
lea
mov
mov
xchg
lea
xchg
mov
mov
mov
dec
dec
inc
mov
mov
movl
lea
xchg
cmp
jge
inc
dec
cmp
jns
mov
mov
mov
xchg
lea
mov
xchg
lea
xchg
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jno
lea
mov
mov
lea
mov
mov
lea
lea
lea
lea
mov
mov
xchg
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
xchg
cmp
jge
inc
dec
cmp
jns
mov
mov
mov
xchg
lea
mov
xchg
lea
xchg
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jl
jmp
mov
lea
mov
mov
dec
dec
dec
inc
mov
mov
lea
mov
lea
inc
xchg
mov
mov
inc
dec
dec
mov
pop
ret
lea
push
cmp
testb
push
pop
insb
jle
jle
jp
inc
jnp
adcl
test
arpl
imul
pop
pop
dec
jle
imul
inc
imul
imul
pop
imul
bound
test
pop
pop
pop
pop
jp
inc
imul
pop
cmpb
jp
sub
inc
jnp
adcl
pop
pop
adcb
pop
imul
adcl
pop
sub
inc
pop
jnp
adcl
pop
pop
pop
pop
pop
dec
mov
lahf
pop
hlt
sub
mov
pop
insb
jo
cmp
dec
cmp
sbb
push
pop
and
push
pop
or
cmp
inc
cmp
sub
push
pop
xor
cmp
mov
mov
out
add
das
mov
out
add
xor
out
add
push
mov
out
add
pop
mov
out
add
mov
mov
out
add
mov
mov
out
add
inc
mov
out
add
sub
sahf
pop
out
mov
push
fsubs
ficomps
mov
mov
pop
fsubs
add
pop
sahf
pop
fbld
push
mov
aas
inc
mov
pop
inc
mov
arpl
pop
sahf
pop
add
cmp
pop
fbld
pop
add
pop
fcomip
inc
dec
mov
repz
sbb
pop
pop
pop
mov
pop
mov
xor
pop
add
out
xchg
pop
pop
pop
sahf
pop
iret
mov
sbb
and
enter
mov
sbb
sahf
pop
lret
lods
pop
pop
pop
adcl
lret
mov
add
pop
fcomip
inc
sub
push
and
mov
pop
pop
mov
pop
imul
pop
lret
mov
sahf
pop
sti
mov
pop
sbb
sahf
pop
testl
mov
add
lret
mov
add
mov
sbb
sti
mov
pop
pop
inc
mov
pop
fcomip
inc
das
mov
add
mov
sti
sbb
sahf
pop
mov
sbb
pop
incl
pop
fcomip
inc
das
mov
cwtl
pop
negl
cwtl
pop
sti
sbb
pop
push
cwtl
pop
lret
or
and
and
xor
hlt
hlt
mov
aas
sbb
sahf
pop
out
mov
inc
sahf
pop
jmp
pop
jecxz
ja
pop
addl
xlat
and
pop
jecxz
mov
dec
jg
xchg
pop
pop
adcl
push
aaa
inc
mov
dec
jg
xchg
pop
pop
adcl
mov
dec
mov
jmp
fwait
cmp
repz
hlt
adcl
xchg
add
repz
hlt
xlat
hlt
stc
mov
pop
fsubs
add
push
mov
xchg
sarb
pop
pop
pop
push
jnp
pop
pop
push
push
pop
pop
pop
push
cmpsl
pop
jmp
pop
pop
xlat
push
add
jmp
pop
pop
ds
push
lcall
pop
pop
add
ret
ljmp
push
fiadds
adc
ret
incl
pop
pop
xor
jb
pop
push
push
insb
sbb
mov
sahf
cmc
ds
mov
leave
push
mov
fsubs
ficoms
add
fdivrp
cld
hlt
hlt
hlt
imul
pop
pop
mov
sahf
fsubrl
sub
jmp
hlt
hlt
fistps
mov
cmc
hlt
hlt
sahf
pop
repz
pop
cmpsl
push
pop
pop
fstpl
push
cmpsl
push
pop
pop
fstpl
pop
sub
mov
lock
xchg
cmpsl
push
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
mov
hlt
hlt
hlt
pop
lahf
pop
out
xchg
jb
pop
and
mov
pop
lock
sub
mov
repz
mov
or
cmc
hlt
hlt
cmc
pop
icebp
mov
out
push
fstpl
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
fstpl
pop
sub
mov
mov
mov
out
cmc
hlt
hlt
sbb
sub
mov
mov
cmpsl
push
pop
sbb
cmp
pop
pop
pop
lahf
pop
icebp
sub
mov
and
out
sub
mov
out
lahf
xchg
cmpsl
push
pop
cmc
pop
lock
jb
pop
push
mov
push
pop
dec
mov
hlt
sub
mov
cmpsl
push
pop
push
cmp
pop
pop
pop
mov
sub
mov
cmpsl
push
pop
sub
mov
pop
and
mov
cmpsl
push
pop
sbb
cmp
pop
pop
pop
mov
sub
mov
cmpsl
push
pop
mov
pop
lahf
pop
repnz
mov
cmpsl
push
pop
mov
pop
sub
mov
pop
lahf
cltd
and
mov
cmpsl
push
pop
mov
and
mov
cmpsl
push
pop
and
xchg
and
mov
pop
and
mov
cmpsl
push
pop
sbb
cmp
pop
pop
pop
lahf
pop
repnz
mov
and
hlt
lahf
pop
cmc
mov
fdivr
and
inc
push
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
js
xchg
inc
dec
dec
mov
xchg
mov
mov
jmp
lea
jmp
xchg
lea
mov
mov
lea
mov
lea
dec
dec
dec
push
call
mov
movl
mov
mov
mov
lea
xchg
mov
inc
dec
je
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
call
mov
mov
cmp
jns
inc
inc
cmp
jne
mov
mov
xchg
lea
mov
mov
xchg
lea
xchg
mov
mov
mov
dec
dec
inc
movl
mov
mov
call
mov
cmpl
je
cmp
jl
jmp
mov
lea
mov
mov
dec
dec
dec
inc
mov
mov
lea
mov
lea
inc
xchg
mov
mov
inc
dec
dec
mov
mov
call
mov
cmpl
je
cmp
jno
lea
mov
mov
lea
mov
mov
lea
lea
lea
lea
mov
mov
xchg
mov
lea
push
push
mov
sub
push
mov
push
call
lea
xchg
cmp
jge
inc
dec
cmp
jns
mov
mov
mov
xchg
lea
mov
xchg
lea
xchg
mov
mov
mov
cmp
je
mov
subb
cmp
jno
lea
mov
mov
lea
mov
mov
lea
lea
lea
lea
mov
mov
xchg
mov
xor
add
mov
xor
cmp
jl
jmp
mov
lea
mov
mov
dec
dec
dec
inc
mov
mov
lea
mov
lea
inc
xchg
mov
mov
inc
dec
dec
incl
mov
cmp
jne
cmp
je
cmp
jo
mov
jmp
xchg
mov
mov
xchg
xchg
lea
mov
inc
mov
mov
xchg
lea
inc
mov
call
lea
xchg
cmp
jge
inc
dec
cmp
jns
mov
mov
mov
xchg
lea
mov
xchg
lea
xchg
mov
mov
mov
push
mov
push
call
cmpl
je
lea
xchg
cmp
jge
inc
dec
cmp
jns
mov
mov
mov
xchg
lea
mov
xchg
lea
xchg
mov
mov
cmp
jno
lea
mov
mov
lea
mov
mov
lea
lea
lea
lea
mov
mov
xchg
mov
cmp
je
lea
lea
mov
mov
mov
mov
mov
lea
dec
dec
xchg
lea
xchg
lea
mov
dec
dec
dec
push
mov
pushl
xchg
push
jmp
cmp
js
xchg
inc
dec
dec
mov
xchg
mov
mov
jmp
lea
jmp
xchg
lea
mov
mov
lea
mov
lea
dec
dec
dec
mov
pop
ret
add
add
outsb
add
insb
add
add
add
add
add
add
add
jb
jne
insb
push
jb
je
arpl
push
mov
add
cmp
je
lea
lea
mov
mov
mov
mov
mov
lea
dec
dec
xchg
lea
xchg
lea
mov
dec
dec
dec
mov
mov
mov
xor
add
mov
cmp
jne
pushl
call
add
cmp
jne
mov
mov
mov
lea
xchg
mov
inc
dec
je
mov
mov
mov
mov
mov
mov
xchg
mov
movb
cmp
jno
lea
mov
mov
lea
mov
mov
lea
lea
lea
lea
mov
mov
xchg
mov
mov
mov
pop
ret
lea
push
mov
add
lea
xchg
cmp
jge
inc
dec
cmp
jns
mov
mov
mov
xchg
lea
mov
xchg
lea
xchg
mov
mov
mov
cmp
jns
inc
inc
cmp
jne
mov
mov
xchg
lea
mov
mov
xchg
lea
xchg
mov
mov
mov
dec
dec
inc
call
test
jne
mov
jmp
movw
cmp
js
xchg
xchg
lea
lea
mov
mov
dec
dec
inc
inc
dec
inc
mov
jmp
mov
jmp
mov
dec
lea
lea
inc
inc
inc
dec
call
lea
mov
pop
ret
push
mov
add
lea
xchg
cmp
jge
inc
dec
cmp
jns
mov
mov
mov
xchg
lea
mov
xchg
lea
xchg
mov
mov
cmp
je
cmp
jo
mov
jmp
xchg
mov
mov
xchg
xchg
lea
mov
inc
mov
mov
xchg
lea
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
js
xchg
inc
dec
dec
mov
xchg
mov
mov
jmp
lea
jmp
xchg
lea
mov
mov
lea
mov
lea
dec
dec
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
call
call
cmp
je
cmp
jo
mov
jmp
xchg
mov
mov
xchg
xchg
lea
mov
inc
mov
mov
xchg
lea
inc
movl
movl
mov
push
mov
push
call
lea
xchg
cmp
jge
inc
dec
cmp
jns
mov
mov
mov
xchg
lea
mov
xchg
lea
xchg
mov
mov
movl
lea
push
mov
push
call
movl
lea
push
mov
push
call
call
cmp
jl
jmp
mov
lea
mov
mov
dec
dec
dec
inc
mov
mov
lea
mov
lea
inc
xchg
mov
mov
inc
dec
dec
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
lea
push
mov
push
call
call
cmp
je
cmp
jo
mov
jmp
xchg
mov
mov
xchg
xchg
lea
mov
inc
mov
mov
xchg
lea
inc
movl
lea
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
mov
mov
mov
lea
xchg
mov
inc
dec
je
mov
mov
mov
mov
mov
mov
xchg
mov
push
call
mov
cmp
je
cmp
jo
mov
jmp
xchg
mov
mov
xchg
xchg
lea
mov
inc
mov
mov
xchg
lea
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
js
xchg
inc
dec
dec
mov
xchg
mov
mov
jmp
lea
jmp
xchg
lea
mov
mov
lea
mov
lea
dec
dec
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
call
call
cmp
je
cmp
jo
mov
jmp
xchg
mov
mov
xchg
xchg
lea
mov
inc
mov
mov
xchg
lea
inc
movl
movl
mov
push
mov
push
call
lea
xchg
cmp
jge
inc
dec
cmp
jns
mov
mov
mov
xchg
lea
mov
xchg
lea
xchg
mov
mov
movl
lea
push
mov
push
call
movl
lea
push
mov
push
call
call
cmp
jl
jmp
mov
lea
mov
mov
dec
dec
dec
inc
mov
mov
lea
mov
lea
inc
xchg
mov
mov
inc
dec
dec
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
lea
push
mov
push
call
call
cmp
je
cmp
jo
mov
jmp
xchg
mov
mov
xchg
xchg
lea
mov
inc
mov
mov
xchg
lea
inc
movl
lea
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
call
mov
cmp
jns
inc
inc
cmp
jne
mov
mov
xchg
lea
mov
mov
xchg
lea
xchg
mov
mov
mov
dec
dec
inc
mov
pop
ret
add
insl
add
imul
arpl
jo
insb
add
add
add
in
add
cmp
je
lea
lea
mov
mov
mov
mov
mov
lea
dec
dec
xchg
lea
xchg
lea
mov
dec
dec
dec
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
js
xchg
inc
dec
dec
mov
xchg
mov
mov
jmp
lea
jmp
xchg
lea
mov
mov
lea
mov
lea
dec
dec
dec
movl
lea
push
mov
push
call
mov
pop
ret
subl
jae
mov
cmp
je
cmp
jo
mov
jmp
xchg
mov
mov
xchg
xchg
lea
mov
inc
mov
mov
xchg
lea
inc
mov
mov
lea
call
cmp
jl
jmp
mov
lea
mov
mov
dec
dec
dec
inc
mov
mov
lea
mov
lea
inc
xchg
mov
mov
inc
dec
dec
ret
ret
lea
add
add
add
add
add
fwait
cmp
add
insb
leave
add
adc
and
add
cmpsb
sub
pop
xchg
add
fsts
jmp
repz
sti
sub
out
add
lds
out
add
xor
out
loopne
mov
dec
fnstsw
mov
inc
adc
add
jns
cwtl
xchg
inc
xchg
adcb
adc
xchg
stc
add
cmp
add
mov
sub
jge
add
cmp
inc
jp
push
int3
sbb
pusha
sbb
add
jle
xchg
jp
in
lahf
sub
fistpl
aam
shlb
mov
pop
imul
sarl
or
sub
add
je
dec
add
push
shlb
test
movsb
test
cmp
add
and
pop
add
subl
mov
ficompl
dec
inc
add
out
sahf
add
mov
xor
daa
add
negl
lea
movsb
push
add
aam
add
add
xchg
add
sbb
faddl
add
and
mov
inc
add
add
ljmp
ja
mov
add
je
add
cmp
imul
xchg
add
cs
add
cwtl
add
cmp
adc
daa
xchg
loop
pop
sub
add
add
test
inc
add
add
add
ss
and
fldenv
call
cmp
jbe
push
jno
cltd
add
pushf
add
jp
add
add
jmp
adc
repnz
add
xor
add
cmp
add
mov
push
sub
sbb
shll
cltd
add
cmp
imul
pop
leave
pop
sbb
pop
fs
call
jae
add
lea
movsl
add
popf
aaa
je
cmp
popl
add
add
add
movsl
aad
pop
cltd
add
fiadds
xchg
cmc
inc
adc
add
cmpsb
lcall
test
adcl
inc
add
and
add
adc
add
sbb
or
dec
subb
repz
pop
add
add
outsb
jno
stos
add
and
cmp
stos
loop
jae
add
lds
rcrb
mov
into
xchg
cmp
scas
testl
dec
shlb
lods
xchg
add
sbb
nop
push
out
add
les
test
add
add
xchg
lods
xchg
popf
or
lret
inc
fmul
xchg
mov
addr16
push
js
jge
or
and
add
push
add
into
hlt
sub
outsb
lds
sbb
aad
add
mov
cmp
add
addb
jns
sub
pop
gs
hlt
xor
pop
cmpsl
and
aad
insb
pop
inc
filds
cs
stc
pushf
faddl
add
add
sub
sub
add
pop
mov
or
and
add
insb
add
insl
cs
push
add
in
loopne
add
jl
xchg
push
add
shrb
idivl
mov
push
lds
pop
pushf
add
cmp
loop
popl
add
inc
stc
xor
xor
mov
mov
add
sbb
repnz
add
and
and
xchg
dec
adc
loop
jle
inc
add
sbb
jge
addb
out
xor
in
sub
add
int
insl
out
xchg
mov
shrb
loope
sbbl
pop
add
add
add
add
test
pop
add
sub
add
xor
jge
xor
add
les
and
mov
out
mov
inc
xchg
adc
test
mov
scas
fmuls
cltd
notl
ror
loope
and
pop
mov
ljmp
aas
aas
cmc
or
shll
xor
loop
inc
mov
lahf
fs
andb
rorl
xchg
lods
pop
xchg
mov
cmc
xor
xor
arpl
xor
sub
inc
loopne
fwait
arpl
push
push
fwait
pop
inc
imul
adc
xchg
stc
scas
call
cmp
aad
xlat
adc
shrl
enter
fstps
dec
jmp
push
cmp
scas
add
aad
movsl
repnz
xchg
orb
in
inc
bound
fsin
jo
les
pushf
jecxz
push
out
fistps
popa
lea
fcomip
call
fidivrl
fistps
sbb
adc
jmp
fimuls
insl
pop
out
fistps
inc
xchg
roll
pop
mov
jb
das
push
dec
movsb
outsb
les
jnp
jge
pop
idivb
mov
stos
cwtl
xchg
push
repz
stos
iret
and
mov
jbe
and
pop
mov
add
das
lret
jge
mov
in
outsl
inc
and
mov
sbb
or
insl
jbe
enter
mull
out
cmp
lahf
cs
cld
cmp
mov
mov
mov
jnp
out
int3
aaa
sub
dec
xor
addr16
mov
cmp
dec
outsl
clc
jo
clc
mov
xchg
inc
sbbb
add
adc
cmp
lods
test
mov
ds
iret
out
dec
push
xchg
pushf
lds
comiss
lahf
add
sbb
pop
xlat
push
mov
add
xchg
dec
pop
out
test
icebp
pop
xchg
addr16
sbb
mov
fwait
pop
jmp
xchg
inc
push
ja
lods
add
sbb
jmp
repnz
push
lret
dec
or
inc
sbb
sub
lret
mov
es
xchg
ja
pop
add
arpl
inc
stos
dec
lret
or
adc
jnp
insl
jne
sub
mov
sbb
out
mov
ss
jnp
pushf
in
bound
or
out
jmp
cmp
cmp
mov
jp
out
cmc
orb
out
dec
jnp
ret
mov
or
in
movsl
cmp
outsb
mov
adc
clc
rcll
jae
ret
and
in
dec
push
mov
pop
stos
sbbl
jns
sbb
cmpsb
push
into
imul
add
jno
es
pop
jmp
aaa
pop
sbb
xorl
pusha
or
and
inc
fisubl
repnz
xor
push
pop
cmp
xor
jl
test
mov
mov
hlt
sbb
sub
inc
and
jge
popf
mov
aaa
add
or
pusha
add
sub
dec
and
shll
gs
inc
scas
mov
in
mov
movsb
or
cwtl
inc
or
hlt
cmpsb
leave
hlt
xlat
in
imul
cmp
jne
jl
xor
fsubl
movsl
or
dec
ret
lahf
mov
fldt
dec
push
cmp
aaa
das
xor
stos
lds
pop
or
stc
js
out
pop
mov
lret
xor
sub
jno
sub
pop
pop
outsb
cwtl
je
adc
sbb
pop
xor
adcb
pop
add
add
push
add
int
jb
sub
mov
pop
pop
push
jb
scas
js
fdivrl
sbb
test
stos
les
ss
mov
enter
mov
pop
pop
movsl
ss
xor
fadds
adc
not
xor
lret
pop
shl
imul
mov
cmc
shlb
sbb
outsl
adc
loop
jne
stc
push
popl
fs
dec
jmp
or
lods
inc
add
out
out
cli
lods
stos
add
popa
int3
lcall
or
gs
popf
shl
and
pop
repnz
clc
adc
adc
sub
adc
lret
xor
mov
add
add
pop
sub
roll
test
jmp
xchg
jmp
adc
gs
dec
dec
nop
outsl
jb
dec
dec
incl
and
mov
jecxz
loop
mov
mov
call
pop
mov
xchg
adc
cwtl
fcmovnbe
shlb
inc
sbb
inc
inc
mov
dec
aas
mov
repnz
je
xchg
repnz
push
mov
std
and
cwtl
push
addb
jno
dec
cmpl
mov
xlat
adc
mov
adc
lock
adc
movsb
ret
mov
fistpl
rorl
inc
es
mov
dec
pop
aas
sub
mov
jbe
sbb
mov
insl
lods
or
xchg
mov
rcrl
lcall
sub
orl
mov
mov
push
or
cli
lret
adc
int
ja
sbb
insl
imull
daa
jnp
leave
sbb
xchg
jecxz
sbb
jle
push
ret
mov
dec
mov
add
dec
ret
test
fbld
cltd
dec
stc
sbb
fisubl
fwait
jle
ja
sbb
add
sahf
sub
xor
jp
xor
cli
jo
and
mov
push
stos
mov
loope
icebp
ja
scas
or
dec
lret
loop
inc
add
or
dec
cmp
pop
outsb
fnstenv
push
ret
mov
imulb
out
and
lea
mov
cmp
dec
and
sub
aaa
cmc
jg
push
bnd
aas
mov
mov
insb
std
xchg
jle
adc
pop
pusha
or
filds
mov
arpl
dec
enter
sub
and
pushf
push
repz
stos
hlt
push
mov
insb
push
ret
fsubrs
fdecstp
scas
ret
push
adc
repnz
iret
test
ret
cld
pop
push
jge
inc
mov
push
arpl
imul
or
sahf
pop
jg
sbb
aam
aad
notl
fistpll
pop
push
lret
das
add
pop
mov
cli
mov
fldenv
fmul
push
sahf
hlt
data16
out
push
je
hlt
jbe
into
mov
sbb
push
add
inc
maxps
andl
dec
imul
lods
xor
sarb
scas
cltd
out
and
test
add
fisubs
in
lahf
cmpsb
dec
or
in
push
stc
dec
enter
daa
icebp
fstpt
jno
sahf
adc
cmp
ret
lods
sahf
movsl
adc
xchg
and
pop
mov
push
sub
mov
push
sbb
sbb
push
into
ja
outsb
leave
dec
pop
xor
js
inc
gs
mov
dec
loopew
repz
sub
ret
xchg
sub
inc
jo
xchg
push
shl
mov
mov
mov
sbb
mov
arpl
mov
push
push
add
jae
sub
in
stos
push
add
mov
mov
cltd
test
loope
sub
jg
loopne
mov
push
jl
aam
or
into
pusha
ss
sbb
sahf
lahf
fdivrs
lret
loop
rorl
or
dec
adc
iret
and
xor
inc
outsl
icebp
or
stc
or
push
push
add
mov
lea
lods
sub
mov
lret
cli
loopne
mov
cmp
push
cmp
xchg
mov
ret
mov
push
gs
xchg
loopne
shl
adc
and
sbb
jg
pop
lock
fwait
mov
cmp
clc
xchg
xlat
xchg
out
sub
adc
in
ret
and
je,pn
cmp
dec
js
dec
xor
adc
fldcw
les
jmp
in
test
pop
fadd
stc
pop
das
sbbb
jle
pushf
xor
xchg
fildl
and
adc
insb
popa
inc
ror
out
aas
pop
icebp
jmp
dec
xchg
aad
je
lea
rcrl
stos
icebp
idivb
xchg
ds
or
xchg
mov
adcl
mov
mov
lock
jbe
das
mov
inc
mov
pop
mov
jno
bound
cltd
insl
inc
popa
stc
dec
push
outsb
or
dec
inc
add
dec
subb
xchg
inc
pop
mov
nop
insb
sub
sbb
decl
xchg
aam
sub
pop
adc
std
sub
mov
jbe
push
shlb
fldl
clc
sub
addr16
ret
ljmp
movsl
lods
jle
cmp
sub
jns
sub
paddsw
add
int
test
mov
push
dec
mov
test
pusha
push
xchg
mov
sbb
sub
xor
cmp
lods
fdivrs
add
mov
mov
xor
lahf
out
nop
push
rclb
lret
icebp
jo
pop
pushf
push
inc
dec
inc
out
inc
fcomp
dec
or
lahf
lds
inc
aam
jne
in
mov
jecxz
out
pusha
scas
mov
jns
ret
pop
mov
dec
out
int3
add
xor
inc
jp
outsb
adc
cmp
sub
sti
or
adc
in
fwait
add
movsb
testb
sub
pushf
jmp
sarb
jae
and
popa
js
popf
cs
mov
xor
pop
and
repz
clc
mov
sbb
jle
adc
out
ret
inc
pop
mov
inc
xchg
or
mov
xor
or
sbb
push
inc
cwtl
cwtl
scas
fimull
mov
sbb
push
cld
pop
cltd
cwtl
sub
test
push
fld
filds
sub
jp
int
gs
mov
push
ret
lock
jbe
xchg
and
sbb
les
andb
pop
adcb
xor
int3
outsb
out
cmp
loop
push
fcmove
mov
jo
xor
and
cmp
or
inc
sub
push
cmpsb
iret
xchg
shr
aaa
inc
out
push
daa
lock
leave
cmp
mov
jl
out
push
cmp
sub
ds
outsl
movsl
sbb
and
negb
pushl
shrl
lcall
xor
pop
pop
repz
js
lea
push
stos
xchg
loope
ficoml
sub
repnz
pop
add
adc
into
dec
cs
sbb
mov
sbb
lds
add
mov
int
pop
jle
fdivrs
lock
sub
adc
scas
sbb
and
sahf
mov
xchg
inc
push
xlat
mov
jne
mov
and
fldenv
mov
cmp
jns
stc
notl
das
lret
fld
and
mov
sub
cmp
or
mov
mov
pop
xchg
test
shlb
xor
aam
loop
je
stc
sar
and
add
sub
scas
and
scas
sub
out
push
push
cli
adc
lods
xor
push
jne
push
addr16
sti
jb
cmp
lret
gs
jno
pop
xor
lcall
cmp
sub
aas
xchg
inc
xchg
sbbb
addr16
xlat
shll
xchg
cmp
outsl
push
dec
xlat
popa
mov
nop
and
push
loop
fwait
xor
fldenv
xor
jecxz
cmp
call
dec
jecxz
or
pop
loop
push
adc
xchg
cmp
addb
push
inc
in
jl
cld
xchg
fidivl
adc
push
je
fldz
shrl
lods
testb
jb
into
and
xchg
push
stos
mov
dec
fs
dec
mov
stc
mov
mov
mov
das
push
sub
adc
and
sbb
icebp
ja
es
loope
insl
sub
cmpsl
out
adc
mov
and
xchg
mov
dec
lcall
push
mov
fsub
xor
push
fnstcw
mov
jnp
push
xchg
sub
imul
xchg
add
cmp
pop
jge
popa
les
fldcw
int
out
lahf
mov
mov
cli
push
add
stc
pop
cltd
adc
cwtl
mov
or
mov
adc
popf
mov
out
dec
push
xchg
cltd
fsubl
cltd
add
aam
pop
inc
xchg
mov
or
sti
out
xor
imul
mov
push
scas
dec
ja
loop
dec
xor
mov
or
leave
mov
ss
and
nop
jne
fmuls
mov
in
out
aas
jl
bound
xor
cmp
call
adc
out
in
mov
or
out
jp
push
fs
dec
mov
addr16
adc
mov
push
pusha
aas
xor
cmpsb
dec
xchg
std
inc
aas
jmp
fwait
or
push
and
xor
xchg
push
cmp
stos
adc
stos
pop
es
in
hlt
imul
or
mov
es
iret
inc
push
sbb
and
dec
pop
mov
xor
scas
pop
mov
or
xchg
mov
mov
in
sbb
cwtl
pop
enter
sub
popa
sar
cmpl
inc
icebp
pusha
hlt
cld
pop
xchg
push
adc
sub
sbb
mov
decl
push
mov
mov
pop
lea
insl
and
push
mov
mov
jo
cmp
push
or
rsqrtps
cmp
mov
popf
pop
cmpsb
push
mov
push
outsl
mov
daa
out
xchg
push
cmp
xlat
dec
jno
pop
es
cmp
sbb
ds
push
push
movsl
and
and
or
lahf
out
adcl
adc
cmp
arpl
mov
movsb
xlat
in
hlt
sub
pop
jg
clc
js
insb
adc
and
jb
xchg
mov
pop
sub
loop
sub
roll
adc
test
repnz
or
sbb
lods
inc
int3
add
adcl
int
and
sub
mov
xlat
in
lcall
inc
fdivrl
dec
cmp
imul
popa
push
jg
lods
int
hlt
dec
mov
mov
test
inc
sub
cmp
xor
xor
adc
jnp
mov
dec
aam
test
movsb
cmc
and
sub
loopne
push
inc
xor
jnp
insl
fs
nop
ds
fisubrs
xchg
xchg
clc
stos
sbb
out
aad
cli
inc
inc
and
out
cmp
sti
and
in
pop
insb
gs
mov
and
dec
fistl
out
mov
fldpi
xor
icebp
fdiv
negl
push
xchg
add
lret
mov
aas
xlat
adc
jecxz
xchg
cmpsb
addr16
movsb
in
cltd
sub
pop
fstp
cmp
aad
xchg
xchg
repz
scas
test
lds
jecxz
iret
insl
jmp
inc
lea
iret
add
pop
and
mov
adc
movsb
fistpl
dec
pop
jp
into
inc
lods
cmpsl
mov
inc
mov
jb
je
dec
or
je
jns
sarl
fistps
jne
into
cwtl
andl
and
add
dec
dec
int3
jo
and
insb
mov
lahf
pop
lock
or
leave
xchg
mov
icebp
aaa
cmp
adcb
adc
jnp
out
jno
mov
sti
popa
mov
mov
enter
bound
test
cmp
mov
jp
xchg
imul
mov
push
push
push
dec
dec
fstl
rorb
xchg
inc
daa
into
ljmp
add
inc
out
repnz
int
mov
dec
pop
bts
out
add
lcall
mov
mov
or
test
idivl
nop
pop
call
sbb
in
pop
xchg
cs
or
inc
push
add
xlat
add
out
xchg
mov
bound
testl
aad
add
ss
mov
adc
add
inc
push
std
pushf
or
leave
mov
test
dec
pop
jl
jne
das
data16
cli
leave
out
push
dec
xor
jns
lock
jae
mov
aam
pop
sub
sub
addr16
es
jp
jmp
cmp
inc
push
jle
call
ret
jg
push
leave
xchg
rcl
adc
xchg
data16
jae
xchg
fsts
out
popf
jl
mov
jmp
mov
mov
dec
lret
shrl
dec
rclb
imul
sub
ljmp
iret
mov
arpl
imul
mov
lods
scas
shlb
xchg
ss
insl
add
cmovns
lock
push
hlt
mov
pop
notl
fmulp
jns,pt
lock
rclb
jno
shl
in
mov
sub
push
popa
mov
jbe
xchg
jge
lock
sbb
aaa
inc
aaa
add
out
inc
mov
add
mov
dec
fsubl
cmp
mov
and
jo
push
scas
ss
mov
mov
mov
movsb
ss
cmp
pop
les
add
mov
out
mov
cmp
aam
out
sub
loop
test
jnp
push
mov
and
and
push
movsl
inc
out
xor
jae
jns
int
jae
add
mov
cwtl
pop
cmpsb
pop
mov
pop
pusha
push
dec
push
test
out
inc
sub
scas
add
repnz
outsb
and
lret
adc
test
out
sbb
into
sbb
or
add
push
jle
loop
inc
push
push
xchg
ror
shr
sub
or
pop
push
push
sbb
push
or
xchg
and
add
aam
lea
jl
imul
push
mov
dec
rorl
cli
pop
adc
mov
cmp
out
cs
test
loopne
rcll
mov
ss
or
pop
test
in
aas
dec
xor
js
loop
inc
cmp
xor
mov
pushw
aad
lods
pop
mov
xlat
or
jns
inc
xor
in
sti
rorb
inc
adc
gs
loope
loopne
push
xchg
pop
jae
mov
enter
cli
xchg
repz
xchg
cs
enter
adc
push
cmp
add
xlat
dec
rcrl
mov
add
push
jmp
sub
popf
mov
jae
fildl
rorb
add
fsts
xor
add
inc
cmpsl
lcall
mov
call
push
out
repz
dec
pop
mov
add
pushf
xor
mov
sub
inc
and
cld
jb
pop
inc
dec
idivl
xchg
rorl
dec
jno
mov
xor
sbb
sub
ds
aaa
mov
rcrb
cmp
inc
aam
cmp
stos
lret
xchg
push
xchg
mov
inc
mov
jle
pop
das
es
mov
cmpb
jl
push
ret
pmaddwd
es
ret
stc
mov
outsl
cmpsl
in
push
mov
rorb
jmp
adc
popa
mov
stc
fs
mov
push
mov
aas
sub
or
pop
push
or
call
mov
fisttpll
in
inc
or
popa
repnz
lods
mov
sbbb
push
repnz
jmp
in
push
jb
hlt
loope
add
outsl
mov
test
dec
lock
sahf
and
test
pop
test
push
inc
and
xor
imul
cmpsb
stc
mov
mov
or
or
lods
incl
outsl
inc
xor
in
or
or
xor
sub
mov
xchg
mov
int
add
imul
popa
inc
popf
inc
imul
mov
jae
mov
out
std
and
bound
cmp
push
std
sbb
jp
adc
sub
push
xchg
or
mov
sarb
jo
sub
cmp
mov
and
inc
in
cli
mov
jne
movsl
decb
xchg
mov
aam
xchg
xor
inc
jae
das
jno
stos
shrb
mov
mov
out
imul
mul
insb
mov
clc
xchg
scas
dec
leave
sub
mov
adc
adc
add
xor
dec
test
inc
mov
or
inc
jo
xchg
or
mov
inc
adc
repnz
xchg
stos
enter
pop
mov
fisubrs
mov
ja
push
shlb
ret
mov
and
aam
hlt
xchg
inc
cmp
jbe
stos
in
lock
sbb
mov
push
sub
mov
inc
push
dec
ljmp
and
js
sub
xor
xor
jmp
adc
cmpsb
pop
jecxz
in
in
je
enter
daa
in
push
add
adcb
jno
test
mov
xor
les
mov
movsl
xor
and
sub
js
push
sub
mov
xor
mov
jp
fstps
call
movsl
pop
lahf
add
imul
addr16
sub
push
es
dec
in
xchg
loop
mov
orb
out
or
lods
add
jns
and
popf
movsl
push
adc
iret
sub
faddl
aad
pop
lcall
dec
fcoml
repnz
jns
loopne
xchg
stos
pop
jg
xchg
lcall
mov
mov
in
xorb
negl
cmp
stos
out
testl
xchg
jns
or
das
or
pop
cmc
mov
loop
jecxz
test
loop
jns
stc
jmp
sbb
movsb
cwtd
xchg
lret
lods
mov
sahf
out
pop
mov
xor
inc
sti
jg
pop
xor
mov
push
insb
add
inc
sti
stos
pop
lea
push
adc
dec
pop
adc
pop
inc
repz
push
mov
sbb
sub
enter
nop
mov
outsl
sbb
cmp
jae
add
aad
popa
fcoml
mov
inc
inc
aam
jge
dec
dec
mov
jecxz
ret
lods
icebp
sub
lea
adc
aam
fstps
mov
adc
mov
loopne
or
mov
std
int
mov
adc
fstps
push
outsb
push
mov
rcll
pop
test
and
ret
cmp
cwtl
stc
mov
mov
xchg
xor
xor
mov
outsb
data16
and
mov
mov
mov
inc
adc
jne
add
xchg
popf
mov
pop
outsl
sbb
sahf
cltd
mov
sbb
insl
loopne
and
repnz
mov
sbb
test
fs
or
and
mov
les
xor
push
lea
movsl
sub
aam
std
loope
sub
lods
push
fdiv
fcmovnu
loopne
popa
clc
sbb
hlt
xchg
mov
popa
cwtl
popa
or
lods
sub
stos
stos
fadds
mov
dec
lock
imul
hlt
cltd
mov
mov
mov
cmp
xchg
dec
out
lds
addb
dec
stc
rorl
les
dec
enter
mov
xor
mov
mov
xchg
xor
test
or
push
mov
add
mov
mov
sbb
dec
or
lods
cmp
aas
popf
mov
repz
or
out
fdivr
ret
pop
cmpl
in
adc
or
fiaddl
sbb
push
mov
jno
xor
mov
xlat
cltd
sti
jle
xor
push
aaa
cmc
pusha
adc
fistps
add
ret
xchg
cld
cmpsb
lods
jae
adc
push
insl
imul
lret
mov
cs
stos
xor
push
insb
and
ljmp
js
inc
adc
adc
pusha
mov
jge
nopl
popa
arpl
lret
jae
into
or
add
loop
ficoml
xchg
add
ja
ss
inc
pop
push
sbb
adc
pushf
rorb
mov
js
js
test
mov
js
in
inc
cmc
jge
jno
sbb
xchg
aaa
jle
xchg
or
scas
push
add
and
int3
sbb
dec
mov
fists
jmp
ret
arpl
enter
xchg
ret
push
inc
movsw
scas
cmpsb
fstpt
mov
rorl
enter
daa
in
adcb
xchg
xchg
shll
idivl
scas
pop
sub
xlat
sbbl
dec
push
into
test
movhps
xor
in
cmp
push
xchg
js
jle
pop
fidivrs
push
push
das
shl
fbld
pusha
lock
sub
pushf
adc
cmp
cwtl
fdivrs
addb
mov
push
andb
repz
and
sub
dec
int
or
les
test
loope
call
fadd
fwait
pusha
sbb
mov
add
fidivrs
cli
lret
notb
mov
cmpsl
stos
mov
adc
xor
cmp
gs
testl
sarl
mov
cmpl
into
mov
jge
xor
push
outsl
dec
sub
loop
jecxz
stc
mov
bound
data16
xchg
fwait
push
out
addr16
imul
cmp
add
sti
sub
push
adc
loopne
sti
aas
pop
lods
imul
pusha
test
imul
pop
notb
pop
xchg
pop
cmp
int
pop
sub
fistpll
mov
mov
cs
dec
aad
pop
xor
adc
ja
out
fcmovnu
jg
inc
enter
arpl
xchg
hlt
lock
repnz
stos
call
push
mov
int
scas
dec
inc
pushf
mov
fucomi
inc
sub
inc
inc
out
es
pop
xchg
js
js
or
lret
in
inc
je
push
arpl
cmpsb
pusha
xchg
push
std
pop
std
push
inc
cwtl
mov
sbb
and
jge
add
pop
aaa
lret
jno
mov
mov
mov
lock
xor
in
pop
mov
out
sub
dec
ret
sub
jae
insl
outsl
add
add
sbb
dec
fld
icebp
add
cld
push
xor
mov
mov
xchg
shlb
jl
hlt
inc
cmp
lahf
ja
fldl
in
clc
push
ret
xchg
std
or
ljmp
lcall
dec
xor
sbb
sub
fbstp
enter
or
pop
cltd
in
inc
mov
stos
out
mov
xchg
pop
push
test
xchg
mov
mov
xor
fwait
cwtl
outsb
repz
in
mov
add
inc
scas
aas
push
test
or
lods
xorb
lret
push
mov
mov
inc
xchg
mov
dec
add
sahf
inc
lret
cmp
imul
dec
mov
mov
mov
mov
out
mov
or
jns
add
in
add
xor
pop
out
repnz
sub
sbb
push
addr16
push
jp
out
mov
push
sarl
lods
jle
push
gs
fdiv
pusha
stos
jecxz
fistpll
addr16
mov
mov
adcb
xor
adc
insl
and
stos
cmpsb
xchg
cmp
push
js
insb
nop
push
jecxz
mov
out
push
mov
jge
iret
mov
gs
inc
into
sbb
inc
inc
jbe
xchg
subb
aas
xor
pop
adc
xchg
pop
fldl
loope
rcrb
in
mov
pusha
lds
cld
inc
mov
lret
fwait
dec
leave
and
hlt
sub
mov
jge
or
aaa
cmp
mov
push
int3
add
ret
dec
push
dec
xchg
jo
sbb
scas
shl
jle
pop
pop
leave
cmp
int3
movsb
xlat
xchg
mov
cmpsb
pop
or
in
mov
out
jmp
and
out
xchg
xchg
jp
cmp
push
movsl
ds
int3
and
cmp
push
push
fiaddl
pop
fidivrs
loopne
aad
add
sbb
movsl
pop
sbb
adc
sub
movups
mov
push
sub
adc
xlat
fadds
mov
add
shll
pop
enter
xor
sub
pop
rol
call
push
push
imul
sbb
fiadds
int
mov
mov
sbb
mov
out
pop
adc
xlat
push
cmp
and
mov
rcll
pop
mov
in
or
add
and
xchg
xor
or
loop
addb
sub
les
cmp
shrl
xchg
lods
mov
cli
adc
inc
sbb
jno
fstpl
jns
cmpsl
gs
scas
sbb
js
negb
mov
in
mov
mov
repz
sbb
mov
pusha
sub
xor
inc
sub
cs
gs
nop
insb
aas
or
inc
cli
fisttpll
mov
xor
rcrl
inc
imull
mov
call
sarb
inc
adc
jnp
fistpl
xor
push
std
nop
inc
leave
int
inc
je
fnstcw
pop
or
jb
stc
pop
dec
pop
push
je
inc
rcl
cmc
push
out
push
inc
adc
adc
cwtl
outsl
add
mov
mov
mov
and
scas
dec
sti
aaa
jmp
mov
push
inc
mov
jg
lock
mov
ret
adc
mov
movsl
std
shll
scas
xor
and
xor
push
sbb
lods
js
ljmp
icebp
push
aad
cld
xchg
in
mov
mov
ret
mov
jae
mov
xchg
shrb
jmp
aam
ficoms
mov
insl
stos
stos
dec
clc
mov
stos
xchg
cmp
mov
pushf
sub
popa
aaa
mov
lods
add
mov
jle
sub
add
push
daa
fnstcw
cltd
and
loope
mov
mov
push
jecxz
xchg
add
dec
xchg
push
stos
test
lea
adc
mov
sarl
ljmp
or
popl
add
pop
mov
fimuls
xor
std
orb
jae
xor
cmp
xchg
test
pop
jb
fistpl
cmp
imul
inc
jmp
or
pop
rorb
cmp
jne
jb
mov
pop
cmpsl
out
lcall
jns
sti
ftst
lahf
inc
fildl
loopne
mov
or
mov
mov
outsl
or
jnp
add
add
sbb
fistps
rclb
mov
and
mov
ret
popf
sbb
mov
lods
ror
sbb
and
jns
imul
add
push
rcll
add
mov
pop
rol
flds
arpl
adc
jns
out
or
sti
dec
movsb
inc
xchg
pop
sbb
das
ds
mov
xchg
sbb
fs
mov
ret
push
xor
rolb
cmp
push
in
leave
xchg
jbe
hlt
jae
cwtl
push
popf
bound
jae
imul
ret
sbb
cmp
cld
or
add
enter
ljmp
and
xor
cmp
fbld
out
pusha
adc
add
movsb
bound
cmpsb
loope
dec
in
mov
xlat
addr16
ljmp
jno
lods
xchg
jl
adc
ds
dec
and
or
clc
rsqrtps
leave
cmc
test
movsl
dec
out
scas
xchg
jo
ret
xchg
scas
pop
inc
loop
js
outsl
add
push
stos
pop
loope
cmp
ss
sahf
outsb
mov
mov
js
pop
shl
push
push
fildl
subb
pop
sbb
mov
and
pop
and
sbb
or
insl
pop
sub
add
lcall
xchg
fcoml
insl
mov
sahf
pusha
clc
cwtl
test
sub
jg
out
mov
mov
push
mov
shll
inc
cmp
fisttpl
fwait
lret
pop
shrl
xchg
or
shlb
into
add
jle
or
xor
xchg
pop
outsl
or
loop
xor
stc
push
cmc
enter
insl
add
aam
data16
inc
mov
pop
pushf
cli
inc
add
cmp
lret
mov
pushf
jnp
gs
adc
jge
ljmp
imul
pop
xchg
aam
dec
sbb
push
xlat
dec
inc
push
mov
mov
xor
or
std
cs
mov
sub
and
cld
sub
ss
fldln2
pop
faddp
ficoms
imul
cli
aam
sarb
call
push
popa
pop
pop
adc
nop
adc
pushf
loope
sub
dec
loop
pop
test
adc
inc
aad
aas
mov
test
pop
orl
data16
xchg
roll
notb
sbb
fildl
rorl
xor
and
dec
dec
hlt
mov
mov
lock
mov
pop
jno
and
mov
ret
dec
pop
mov
mov
mov
dec
xor
sub
mov
push
icebp
cs
cld
mov
ret
test
and
pop
dec
lcall
aad
sub
int
mov
sub
push
and
push
outsl
clc
leave
inc
stos
xchg
jnp
add
setp
lods
imul
movsl
push
aam
loope
or
sbb
inc
push
fdivrp
pop
jbe
int3
gs
pop
rep
test
xor
xchg
or
test
sbb
sbb
pushf
stos
rcll
gs
imulb
xor
incb
jbe
out
jge
push
or
fisttpll
xor
xchg
lcall
xor
mov
mov
fnsave
inc
stc
rcrb
inc
sub
or
sbb
dec
xor
mov
cmp
jns
in
bound
jns
xchg
out
sub
adc
arpl
ja
pextrw
cmp
and
jp
imul
imul
jle
scas
push
in
inc
out
loope
mov
jns
mov
cmpsl
clc
lahf
xchg
pop
ss
and
aas
loope
mov
jmp
adc
xor
xor
mov
sbbl
push
dec
or
jb
jge
pop
ret
loop
or
cs
in
pop
arpl
popf
inc
inc
jl
ss
jbe
inc
inc
adc
xchg
pop
sbb
aaa
pop
pop
loop
fdivrp
mov
inc
pushf
push
jle
test
bnd
ljmp
or
jbe
enter
loope
sbb
sahf
fisttpll
add
pop
add
adc
int3
fldt
mov
cmpxchg
xor
cwtl
add
and
sub
in
pop
jecxz
adc
or
in
mov
push
enter
daa
jmp
cld
sbb
sbb
ja
push
jg
cmp
fbstp
pop
das
dec
movsl
dec
sbb
and
ja
push
in
sbb
jo
leave
xor
inc
xchg
icebp
pop
imul
pop
fwait
add
dec
testb
mov
outsb
fisubrl
std
je
mov
mov
cmpb
ficomps
testl
push
sbb
dec
sub
leave
adc
mov
xchg
xchg
sbb
addr16
add
push
addb
cmpsl
jg
insl
pop
mov
stc
dec
mov
and
and
add
xchg
xchg
xor
or
pop
inc
xchg
inc
pop
test
mov
xor
into
out
imul
cmp
outsl
jmp
push
and
fs
pusha
add
scas
movsw
and
lods
bound
mov
std
cli
js
jno
lock
jge
jg
cmp
cmp
mov
mov
or
scas
jne
pop
or
icebp
adc
push
mov
mov
adc
pop
dec
repz
loopne
xchg
shrb
sbb
push
mov
sub
mov
sbb
jmp
and
aad
scas
sbb
sub
ret
and
mov
jmp
fldt
lea
sarl
rolb
ficoml
mov
nop
pushf
mov
fstpt
test
inc
xlat
mov
pop
aas
push
xchg
jb
hlt
cmovns
out
fs
das
rcll
cs
std
pop
es
in
jne
lcall
or
gs
lret
mov
jae
mov
inc
mov
das
and
mov
and
int
ret
fcmovbe
mulb
arpl
sub
cmpsl
call
mov
pop
cld
jmp
scas
mov
sarb
scas
mov
mov
xchg
shrb
cmp
aam
adc
push
call
loopne
clc
add
stos
xchg
mov
mov
xchg
lods
inc
cld
stos
xchg
das
pmaxsw
xchg
enter
and
add
insb
cltd
xchg
aas
jae
int3
push
lock
push
xchg
popa
xchg
sub
adc
sbb
je
shr
les
pop
xchg
neg
fwait
and
mov
add
dec
mov
or
test
inc
pop
xchg
inc
cmpsb
inc
mov
jl
mov
je
jnp
ljmp
inc
nop
mov
mov
jp
fs
pop
push
outsb
jne
imul
pop
lea
bound
dec
stos
jns
fsubrs
mov
jmp
sahf
mov
lret
push
mov
or
out
addr16
jp
jp
cmp
mov
xchg
js
jle
dec
jb
jno
mov
fistps
mov
jmp
sub
pop
jae
inc
fstl
jns
xchg
xor
push
sub
cwtl
and
leave
insb
roll
imul
scas
cmp
push
movsl
iret
fmul
in
ret
daa
pop
inc
or
inc
out
sbb
sbb
inc
jg
lea
icebp
ret
repnz
nop
insb
movsb
fisubl
xchg
sbb
sbb
pop
adc
test
popf
sbb
lds
rclb
mov
les
sbb
test
ret
hlt
or
imul
in
stc
xor
jge
and
sbb
mov
jp
mov
negb
jne
xchg
push
ss
adc
cmp
repnz
xor
repz
aad
jo
xlat
and
int3
cmp
data16
js
filds
addr16
in
outsl
cltd
sbb
sub
daa
call
clc
int
icebp
popa
jo
jg
cmp
or
movsl
push
mov
or
sar
push
xchg
inc
fisubrs
cmp
in
dec
push
inc
dec
dec
lods
pop
nop
cld
xor
scas
hlt
pop
fimull
push
cmc
add
sub
in
sub
xchg
adc
cmpsb
rolb
dec
inc
mov
and
add
and
cmp
dec
push
and
jae
xchg
xchg
pop
sub
adc
lcall
pop
fsubrl
sbb
xor
movsl
sbbb
dec
jg
icebp
scas
mov
mov
mov
mov
les
ss
mov
fcoms
jle
dec
inc
jae
push
fdivr
rcr
iret
mov
and
lret
cmc
xchg
test
xor
ret
shl
pop
xchg
xor
jl
lods
fs
dec
add
filds
sub
add
xchg
stc
out
mov
cli
stos
mov
xor
sti
ljmp
gs
dec
loopne
mov
adc
fwait
adc
sbb
repz
xchg
cmp
xlat
leave
xchg
dec
sub
push
inc
in
xchg
sub
cs
movsb
mov
nop
std
xor
dec
mov
into
inc
xor
sub
hlt
cli
xchg
jecxz
dec
inc
movb
lods
lea
pop
adc
dec
xor
jp
push
adc
fdivr
pushf
aaa
push
into
fldt
mov
cs
lds
aas
hlt
dec
in
jb
mov
fwait
je
or
loop
mov
std
push
fldt
cwtl
mov
xor
jnp
popa
and
in
lret
sub
out
jge
push
and
mov
mov
mov
int3
out
es
addl
sbb
mov
fsub
out
adc
add
lret
adc
and
nop
gs
pop
rcrb
fldt
js
push
aam
cmpsl
jle
xor
loope
stos
push
inc
frstor
sbb
xchg
stc
and
cmc
cwtl
jmp
lods
inc
divb
addl
cmpsl
lret
test
bound
inc
cmc
cmpsb
add
pop
cltd
leave
das
mov
mov
and
dec
enter
in
icebp
icebp
xchg
add
aas
call
cmp
push
js
xor
lods
xchg
mov
xor
ljmp
loop
inc
xchg
xchg
repz
mov
cmp
xor
mov
ja
push
sub
int3
xchg
or
jmp
mov
jne
jle
mov
mov
xchg
and
pop
mov
push
subl
push
sub
add
push
jge
lds
outsb
mov
inc
pop
arpl
fcoml
pusha
pop
xchg
fbstp
mov
xchg
bound
jae
jbe
push
cmp
cmp
lea
mov
imul
shrl
imul
scas
mov
daa
mov
iret
cmp
ret
mov
inc
cli
dec
les
jge
inc
sbbb
push
psubusw
rol
jecxz
mov
push
sbb
xor
dec
fiadds
call
rcl
cmc
mov
pop
stc
jae
cld
hlt
push
loope
push
mov
pop
jbe
bswap
jge
dec
loop
in
aaa
cmp
jmp
mov
dec
dec
in
mov
aad
sub
dec
cmp
dec
xchg
cmpsl
cmpsb
pushf
cmp
mov
pop
inc
xor
cmp
push
out
enter
daa
out
lret
test
jno
repnz
jl
rorl
dec
inc
mov
pop
xlat
jmp
pop
enter
xlat
movsl
lahf
filds
jb
repz
xor
pusha
or
minps
sub
loop
das
test
xor
jge
sub
jo
fnstenv
rolb
std
push
andb
sbb
pop
add
inc
jmp
dec
hlt
push
push
and
sub
fs
pop
iret
loopne
lcall
fcoml
pop
or
insb
cmp
sahf
dec
inc
inc
test
dec
cltd
jg
jns
mov
stos
jl
jp
or
adc
or
fmuls
jns
or
dec
lret
sahf
shll
mov
js
lods
vpmaddwd
popa
xor
mov
loop
ljmp
movsl
loopne
jne
ds
mov
sub
push
add
fiadds
into
cmp
sub
sti
cltd
aam
incb
loop
loopne
sub
pop
inc
lods
mov
jg
fsubrl
ret
outsb
adc
outsl
ljmp
mov
sbb
mov
or
loope
sub
aam
in
inc
hlt
in
icebp
insb
imul
lods
cmp
push
imul
aad
sub
nop
fdivr
cmovg
mov
push
fsts
insl
mul
scas
jmp
add
dec
call
into
pusha
push
pop
sub
lcall
xlat
mov
pop
xchg
imul
xor
loopne
cmpb
adc
dec
cmp
je
dec
jne
xor
jno
lods
jae
cwtl
pop
jecxz
mov
adc
mov
enter
sbb
fmulp
pushf
mov
sbb
sti
aad
das
aas
rol
jo
cmpsb
mov
dec
hlt
cmp
clc
or
insl
dec
ret
and
out
cmpsl
out
push
mov
mov
mov
aas
in
dec
mov
out
pop
cmp
ficoms
mov
out
cmpsb
ds
sub
sub
pop
aam
xchg
cmp
outsb
int3
paddusw
cmpsb
sar
in
xchg
cmp
push
ljmp
aas
lods
lods
jns
stos
jb
or
or
sub
outsl
mov
bt
lar
imul
sbb
and
jb
das
push
mov
cmp
rcll
xchg
pop
fwait
subl
push
sbb
add
ret
out
pop
pop
jnp
ss
or
cmc
sbb
test
mov
jno
mov
ljmp
dec
mov
sbb
or
xchg
mov
adc
cmp
jne
cmc
xchg
push
insl
cld
bound
inc
cwtl
in
cwtl
inc
cmpl
sub
add
jp,pn
repnz
mov
inc
cmpl
mov
in
mov
inc
xor
xchg
push
lea
xchg
mov
out
and
popf
mov
idivb
test
scas
stos
in
jg
jns
mov
sbb
stos
lret
scas
add
rclb
jae
inc
in
inc
iret
lcall
pop
scas
loop
inc
add
shl
inc
test
or
out
daa
inc
mov
mov
xchg
call
pop
outsl
sarb
fsubp
stos
add
mov
shr
inc
mov
push
sub
jae
dec
hlt
lahf
dec
mov
push
inc
jbe
pusha
idivb
push
cli
sbb
je
or
xchg
int3
pushf
addr16
dec
push
cltd
push
mov
mov
jo
cmc
stos
scas
jp,pn
and
jnp
cmp
push
xor
inc
shl
cmpsb
in
rolb
push
arpl
out
inc
cmp
or
jno
cmpsl
arpl
lret
pop
in
sbbb
and
fs
decb
push
cmp
fxch
push
shll
test
iret
fimull
fisubs
push
pop
pop
push
push
adc
loope
popf
xchg
ljmp
cmp
mov
rcrb
rclb
pop
xorb
pushf
dec
dec
add
mov
and
cltd
push
fisttpl
int
dec
xchg
cmpsb
ja
pop
dec
xor
adc
repz
incl
sbb
inc
repz
mov
inc
jg
add
mov
shl
mov
std
mov
adc
jbe
cmp
and
test
and
mov
inc
or
lods
loop
and
mov
outsl
xchg
jnp
ljmp
add
xchg
cs
push
mov
ret
ja
cli
adc
ret
push
cmp
inc
xlat
sti
dec
fsub
sub
dec
subl
loopne
mov
fcoms
push
imul
adc
sbb
xchg
loopne
lcall
mov
xlat
inc
repz
lahf
dec
and
pop
iret
xor
lds
adc
mov
insb
aad
adcb
mov
ss
dec
ss
pop
sahf
fcompp
leave
mov
inc
push
or
inc
call
dec
adc
pop
loopne
pushf
adc
jmp
adc
sub
inc
insb
pop
xchg
dec
out
xor
mov
dec
scas
fstps
inc
loopne
roll
je
std
push
lock
xlat
jbe
mov
xor
orl
ret
test
pop
xchg
lock
lcall
add
mov
aam
cmp
es
data16
insl
xor
add
fwait
pop
cmpsl
in
sbb
mov
cld
push
movsl
mov
adc
out
mov
push
mov
shlb
add
mov
loop
rolb
push
xor
lret
fcomip
clc
mov
mov
ljmp
mov
pop
rcrl
popa
cli
stos
out
insl
pop
push
xchg
aaa
and
sbb
lar
add
les
in
stos
cmp
xchg
mov
dec
xchg
daa
repz
sbb
lea
sbb
ss
shr
lcall
mov
dec
push
mov
mov
popa
stc
imul
mov
mov
lods
out
adc
inc
inc
xchg
xor
adc
push
inc
adc
ja
aam
dec
mov
push
inc
push
jg
or
clc
sub
add
pop
mov
ds
out
cmc
bound
enter
jb
in
jg
orl
out
adc
sub
sti
or
addr16
lcall
loopne
mov
jnp
imul
in
shr
pusha
dec
push
fcomip
call
cmp
mov
xchg
mov
outsl
push
ret
popf
fistl
mov
out
inc
stos
pop
sbb
and
mov
imul
aaa
push
imul
adc
ret
add
ret
int
adc
mov
insl
and
xchg
into
or
bound
inc
or
push
mov
jecxz
dec
pop
sahf
hlt
dec
fiadds
ss
rorb
sub
mov
decl
push
sub
cmpsl
jge
inc
test
aaa
mov
cltd
or
int3
mov
int3
xchg
dec
ret
lods
push
push
fwait
jae
xor
add
movsb
scas
or
adcl
sbb
xchg
add
cmpsb
jo
cltd
in
and
cmpsb
enter
daa
in
pop
cmp
and
jl,pt
js
cmp
mov
adc
clc
lahf
sbb
test
test
pushf
punpckhwd
mov
dec
nop
pop
add
out
pop
xchg
aas
xchg
push
sub
loope
adc
dec
sub
sub
insb
outsb
lahf
cmp
adc
aaa
xlat
cmpsl
xor
sub
sbb
aad
add
jns
and
add
int
cld
xchg
and
aad
int
cmp
sbb
and
insl
jbe
sbb
sbb
aaa
test
lret
idivl
xchg
xlat
mov
sub
push
not
adc
xor
cmp
cmpb
xchg
js
sub
adc
mov
mov
ret
into
jae
cmc
jmp
jg
mov
lahf
repz
jbe
stc
mov
jb
add
repnz
mov
enter
fwait
cli
inc
push
push
xor
cmp
cmp
decb
mov
aam
loopne
xor
test
adc
popa
notb
push
lcall
pop
test
outsl
mov
mov
sub
push
fldenv
movl
addr16
cmp
nop
mov
sbb
into
mov
cli
xchg
flds
repnz
les
xor
or
lret
ret
and
call
int3
dec
inc
pop
xchg
in
adc
subl
adc
pop
fcomp
jo
repz
push
pop
sarl
mov
jb
pop
fmuls
cmovle
and
iret
xchg
mul
jae
std
sti
push
fcompl
xchg
pop
popf
mov
push
adc
jge
dec
lret
jp
cmp
mov
jb
das
std
lods
push
mov
out
dec
mov
ret
push
dec
push
xor
mov
mov
jbe
mov
xchg
icebp
popa
cmp
cld
xchg
gs
or
push
and
popa
push
pop
pop
sub
adc
aam
arpl
push
hlt
mov
fstpl
std
dec
clc
lock
dec
pop
push
lods
cmp
stos
push
sbb
rclb
push
and
xor
cwtl
cltd
outsb
fdivrs
mov
sub
call
test
mov
xchg
or
roll
pop
inc
cmpl
ljmp
push
mov
xor
stos
fimuls
and
insl
xor
aas
ret
jae
mov
xor
out
pop
pusha
loope
ja
fldt
movsl
push
inc
inc
in
or
mov
jae
dec
in
mov
mov
sbb
bound
in
jge
loope
pop
sbb
pop
out
adc
notb
pop
jp
jge
mov
or
mov
dec
xchg
lahf
jle
dec
loop
lea
pop
pusha
call
shlb
jmp
push
mov
jae
scas
addr16
test
out
add
jae
pop
xor
push
es
int3
stos
lret
mov
insb
jge
jle
sub
mov
push
mov
cmpsb
adc
fdivrs
pop
sbb
ret
inc
pop
sbb
stc
inc
sbb
sub
inc
inc
or
frstor
xor
in
movsl
inc
xchg
mov
jp
pop
int
fisubrs
paddusb
and
and
push
repnz
pop
leave
popa
pop
or
xor
fs
jbe
pop
or
push
pop
sbb
add
aaa
jbe
jp
ret
add
enter
or
push
jle
cli
xor
pop
cmpsb
call
and
sbb
movsb
movsb
sbb
pop
cmpsb
repz
add
or
add
in
cmc
cmp
inc
jno
jge
jl
or
ds
stc
insb
movsl
outsl
ds
lahf
cmp
nop
push
jecxz
icebp
test
addr16
inc
xor
ss
js
and
pop
cwtl
push
push
sti
data16
cmpsl
jnp
mov
aad
outsb
add
and
pop
rclb
pop
repz
nop
inc
imul
add
add
xchg
mov
push
sub
dec
int
xchg
sub
sbbb
jg
fcompl
shr
stc
mov
sahf
xor
push
test
ret
mov
xorl
cmp
mov
sbb
fidivl
jbe
fs
cmp
push
mov
push
cmp
aaa
jnp
mov
movsl
or
hlt
into
push
pop
and
mov
and
push
shlb
loop
jg
stc
pop
sub
cmpsl
push
ja
and
data16
xchg
lods
in
sub
ret
inc
cmp
ja
insl
xor
push
dec
cmp
std
xor
outsb
lcall
mov
dec
pop
movsb
pushf
adc
clc
sahf
lea
cmpsb
mov
push
nop
xchg
data16
sbb
cmp
arpl
mov
xor
mov
jnp,pn
adc
rcrl
nop
imul
in
jg
scas
fnstenv
leave
ffreep
and
dec
or
mov
call
dec
add
pop
inc
xchg
out
lods
mov
pop
jnp
leave
inc
jp
insb
inc
xor
jo
jge
cmp
pop
dec
popf
call
cmp
push
push
add
std
mov
fcompl
mov
dec
push
push
testl
or
dec
das
fsubrl
cltd
mov
ljmp
es
pop
insl
call
pop
dec
adc
cmpsl
jecxz
push
mov
cmp
cld
rcrb
xor
mov
repz
mov
dec
rorb
sub
aam
dec
enter
mov
mov
iret
fnstsw
daa
clc
sub
mov
popa
fsub
adc
add
out
xor
out
xchg
lds
push
add
rorb
push
mov
movsb
out
push
cltd
movsl
pop
inc
test
loopne
mov
sub
push
dec
test
xor
mov
adc
push
cmp
rcrl
xor
in
push
add
ss
sbb
lods
pushl
xchg
int
das
push
stos
or
xchg
and
pop
es
sbb
ljmp
dec
mov
mov
or
pop
xor
enter
xchg
mov
mov
or
inc
out
ja
jns
mov
lods
subl
out
mov
mov
icebp
test
addr16
out
mov
xchg
rorb
mov
decb
in
in
lock
or
xor
arpl
jno
mov
cmc
std
push
dec
shr
popf
sub
ss
gs
sub
and
les
scas
sub
adc
adc
in
pop
iret
mov
jmp
or
jge
push
jb
inc
es
arpl
add
pop
mov
fisubrs
out
inc
or
xchg
adc
outsb
sbb
in
pop
cld
test
cs
mov
xor
mov
arpl
xor
addb
jbe
or
jge
int
sbb
fmull
xor
jb
add
cwtl
ret
dec
mov
or
in
jo
pushf
es
lret
push
and
xor
add
movsb
das
and
cmpsb
jbe
jb
repnz
enter
daa
jecxz
or
jle
mov
jl
insb
jl
or
ds
fcom
and
pop
lahf
pop
or
or
push
xor
lret
popa
nop
sbb
das
js
out
lret
pop
adc
jle
loope
stc
sub
sub
outsb
gs
mov
in
hlt
out
out
leave
subb
xor
add
xchg
sbb
das
lock
sub
sub
pop
lret
ds
push
movl
sub
ljmp
push
inc
jg
mov
sub
xor
fnstenv
mov
scas
xchg
fdivr
ljmp
adc
ror
sbb
cmp
decl
fstp
insl
into
cmp
push
xor
aaa
outsl
and
and
push
add
adc
mov
xchg
ret
cli
stos
std
inc
xor
jnp
cmp
xchg
aas
sti
push
mov
xchg
jne
gs
push
push
loopne
test
pop
ret
hlt
in
lret
xchg
adc
push
fcomi
stos
jno
xchg
sub
rcrl
test
lret
sub
adcl
ja
popf
out
push
xchg
hlt
repnz
xchg
aad
nop
inc
rorl
or
inc
xchg
dec
push
fldcw
hlt
les
subb
rorb
sbb
cmp
adc
call
mov
push
sbb
add
in
inc
dec
mov
aas
divps
jb
jmp
je
xchg
mov
imulb
jbe
dec
mov
and
scas
lods
or
push
iret
push
lret
pop
addr16
push
lods
sub
addr16
stos
das
mov
fdivrl
and
xor
cmp
insl
out
loop
or
sbb
push
icebp
paddb
sub
js
jp
inc
and
xchg
std
pusha
pop
imul
rcrb
lret
dec
mov
aam
test
aas
out
push
jp
jnp
data16
clc
data16
xchg
xor
sbb
popa
out
sub
rep
cs
lds
fcmovne
mov
pop
je
add
jl
test
clc
xor
xor
sub
mov
cmpsl
xchg
jg
sbb
dec
pop
shl
mov
pop
cltd
mov
nop
push
cmpsl
inc
xor
xor
call
lods
add
xorb
or
mov
xor
sbb
pop
lret
adc
ja
ja
dec
mov
inc
sbb
mov
xor
jp
jne
mov
add
bound
rol
in
sub
out
rorl
movsl
and
in
push
push
addr16
pop
jnp
xlat
jb
gs
fwait
mov
lods
ds
jle
jmp
fwait
adc
lock
aam
mov
dec
jmp
ljmp
push
or
sbbb
sbb
movsb
push
pop
stos
mov
shlb
aad
xchg
insb
push
lea
scas
xchg
fstl
shrb
adc
iret
push
pop
out
sbb
mov
incb
outsb
arpl
xchg
inc
xchg
lock
or
rorl
inc
inc
mov
nop
xchg
push
and
fisubrs
pop
lds
rcrb
mov
mov
ds
dec
add
lret
cmp
push
adc
sub
lahf
sbb
pop
cmp
test
sbb
and
jmp
dec
adc
jecxz
inc
dec
fwait
xor
adc
insl
out
and
xor
mov
add
pushf
pop
in
fld
lods
enter
daa
loop
mov
mov
pop
jno
loop
jl
movsb
ret
sbb
movsl
jge
test
in
xchg
lahf
jp
sbb
cwtl
sbb
xchg
loop
std
inc
test
daa
cld
cmp
pop
jp
jae
add
rclb
xlat
inc
push
mov
loope
inc
fs
call
push
outsb
enter
mov
scas
ror
mov
aaa
add
nopl
add
ret
adc
xchg
pop
mov
int
push
push
pop
dec
mov
and
fsubrl
push
sbb
mov
test
mov
es
addr16
jb
mov
pop
fbstp
pop
inc
ss
mov
cmp
mov
jns
ret
jo
lret
sahf
shll
mov
lods
mov
dec
jl
into
sbb
and
xor
fmul
outsl
add
cli
stc
pop
cmp
lds
inc
popa
pop
data16
push
lods
mov
in
mov
lahf
out
daa
ret
cli
fstpl
xor
leave
pop
cmp
add
add
xlat
mov
cmc
gs
sub
popf
pop
loop
les
sahf
movsb
stos
imul
repz
adc
sbb
mov
rcl
inc
in
sub
jbe
pusha
daa
aaa
in
or
jg
inc
fildll
pop
xor
dec
scas
push
inc
movsl
inc
mov
les
cltd
adc
stc
jg
adc
enter
test
dec
add
mov
adc
rcrb
pop
shll
inc
addr16
cld
aas
scas
cmp
dec
mov
pop
sarl
ljmp
mov
mov
adc
dec
ds
lret
jnp
mov
dec
push
ret
das
lcall
mov
add
es
pop
mov
or
mov
out
mov
mov
popf
push
mov
xor
nop
shl
jae
sub
imul
adc
push
cmp
lods
dec
clc
mov
cmp
cmpsl
jne
popa
push
lahf
inc
lods
ret
jbe
stos
sbb
repnz
push
mov
jecxz
jle
lar
inc
cltd
adc
test
mov
xchg
mov
lods
test
push
pop
xchg
adc
pop
inc
sbb
fwait
outsb
push
push
push
dec
xchg
push
add
dec
int3
add
jne
cld
xor
inc
fmull
mov
xor
das
pop
xchg
jo
addr16
inc
jnp
mov
inc
jb
and
clc
dec
jle
rolb
adc
or
xorl
jne
and
mov
sub
out
jno
bound
mov
in
popa
aas
addl
fldt
out
addr16
push
mov
mov
mov
or
jle
inc
or
pusha
mov
pusha
jae
xchg
fldl2t
pop
add
mov
lcall
test
stc
mov
jecxz
inc
stos
and
movsl
and
push
pop
imul
cwtl
scas
repnz
lret
push
test
pop
adc
add
notb
cmp
xor
jge
inc
xchg
negb
lods
pop
daa
push
or
fiaddl
fistpll
mov
xor
adc
js
je
mov
or
inc
hlt
push
dec
or
sti
jmp
into
ret
out
sbb
divb
mov
cld
or
sbb
xor
loopne
jg
stos
push
daa
ja
xor
jo
push
scas
mov
sbb
andb
dec
cmpsb
jl
and
shlb
add
dec
data16
lea
rorb
jl
mov
cmp
sarl
das
mov
movsl
test
jb
cmpb
lahf
cltd
add
test
enter
neg
movsl
sahf
movsl
mov
mov
inc
pop
pop
xchg
mov
sbb
adc
sub
jns
sub
mov
adc
mov
lods
movsl
adc
insb
sbb
fnstenv
movsl
ficoml
push
xor
stos
subl
leave
test
lcall
je
sbb
sub
test
loope
sbb
stc
jg
cli
jg
jle
cmpsb
mov
mov
mov
cwtl
arpl
ss
push
cmp
outsb
test
testl
movsl
sbb
push
pop
ja
mov
xorb
pop
mov
sub
cmpsb
and
aam
stc
jge
dec
fs
cld
roll
in
mov
lods
lcall
out
fstl
xor
inc
ja
mov
movsl
xlat
pop
cli
cmpsb
push
outsb
pop
add
cld
imul
sub
xchg
scas
sub
or
jb
out
dec
rcl
subb
fiadds
scas
in
jae
adc
jo
adc
movsb
jmp
ljmp
pop
push
inc
mov
es
les
pop
jecxz
int3
mov
lea
inc
call
enter
pop
fcmovnb
adc
push
pushf
in
cmp
icebp
xchg
pop
sub
syscall
aaa
inc
sbbb
dec
sbb
dec
add
je
mov
rorl
push
sub
out
clc
mov
xchg
mov
call
mov
sahf
dec
sub
add
flds
lock
mov
jmp
lret
push
jmp
dec
sbb
es
mov
dec
add
jecxz
loopne
dec
mov
mov
inc
xchg
mov
rorb
and
int
pop
pop
test
push
outsb
sub
sbb
aam
negb
frstor
adc
mov
jb
fdivrl
inc
ljmp
lods
cs
or
cmpsl
out
pop
cli
outsl
xchg
lcall
paddusw
aaa
add
mov
xchg
test
and
ss
cmp
xchg
dec
ja
insb
mov
mov
dec
lods
fwait
popf
dec
sub
in
iret
jmp
add
int
adc
scas
xor
test
xor
jl
xchg
mov
cmpsl
mov
dec
xor
ja
and
inc
dec
xchg
es
sahf
xchg
mov
add
jne
icebp
or
push
insb
push
bound
out
mov
adcl
clc
out
and
sub
loop
ljmp
add
mov
inc
and
in
je
jnp
notb
jmp
mov
pusha
push
add
fists
xor
jmp
sbbb
xchg
les
popf
sahf
push
cs
and
stos
xchg
nop
and
in
sub
inc
scas
push
stos
andnps
push
inc
adc
iret
aam
pop
ret
rcrl
inc
stc
arpl
jo
or
leave
sub
inc
jp
mov
pop
ds
sbb
pop
mov
adc
mov
jle
push
scas
sub
mov
mov
pop
out
inc
leave
cmp
lods
xchg
push
mov
or
int3
dec
jge
dec
cmp
sbb
enter
call
add
dec
int3
push
cmp
iret
push
or
mov
scas
push
mov
loopne
shlb
in
mov
lret
enter
daa
loopne
mov
pop
sub
jl
nop
jg
pop
xor
ds
sub
movsl
mov
pop
and
gs
mov
push
or
xchg
pop
sub
popa
pop
cmc
pop
enter
jp
pop
pop
shlb
jecxz
sub
fbstp
add
pop
outsb
mov
xchg
jle
loop
or
add
out
test
inc
cmp
mov
pop
push
cmp
loope
int3
iret
sub
pop
dec
out
mov
push
int3
insb
lcall
mov
sahf
mov
mov
xor
xor
mov
cli
cmc
mov
add
adc
scas
or
adcb
fsubrs
in
testl
adc
xchg
push
fisttpll
movntq
out
loop
inc
cmc
into
mov
cld
outsl
shlb
stc
xor
or
cmp
pop
lods
sub
lods
sbb
mov
mov
cmp
jge
add
sti
bound
pop
cli
mov
sbb
pop
and
mov
adc
not
repz
xchg
jb
mov
xor
idivb
sub
adc
shll
or
push
in
fiadds
cltd
cs
call
jae
aad
popf
dec
test
inc
lret
rolb
dec
ret
cmp
pop
pop
cmpsl
sbb
push
cli
call
inc
push
sti
pop
adc
adc
mov
popa
loopne
pop
pop
lahf
push
inc
xchg
xor
inc
popf
rclb
aas
in
mov
dec
jns
add
mov
divb
cmp
std
ds
rcrl
fwait
or
sbb
testl
outsb
mov
add
js
lea
pop
addr16
push
mov
push
push
lods
ret
loope
fs
dec
incb
adc
mov
dec
icebp
xchg
in
sar
insb
nop
into
mov
jecxz
cwtl
and
push
push
or
cwtl
arpl
xor
push
aam
sub
stos
push
ret
in
fstp
ljmp
icebp
or
ljmp
lret
lods
cltd
inc
pop
stos
sti
cmp
mov
xor
lock
add
push
cltd
add
pop
mov
cmp
dec
add
test
insl
push
xchg
mov
shl
adc
fwait
int3
push
std
push
nop
add
add
test
jmp
xor
or
sbb
push
push
mov
cmp
pop
pop
mov
pop
dec
fs
ja
out
or
or
mov
xor
insb
aas
jne
and
mov
lcall
cmp
cmp
repz
cwtl
lret
movsl
leave
pop
out
test
sub
fst
inc
addr16
mov
pop
and
scas
mov
mov
mov
in
fmul
pusha
out
jp
fildll
shlb
xchg
dec
push
inc
push
push
push
fs
lds
ja
popa
stos
rsm
or
int3
and
dec
movsl
insb
xchg
ficomps
xlat
fbld
mov
mov
inc
add
iret
xor
push
mov
pop
das
jg
inc
push
bound
arpl
pop
inc
or
inc
add
inc
pop
int
fisubrl
xchg
insl
sub
in
jle
mov
xor
call
mov
scas
jae
leave
mov
aas
hlt
lods
arpl
push
add
jge
nop
mov
aaa
xor
in
or
add
or
dec
pop
sub
push
in
mov
xor
es
and
sti
mov
movsb
pop
push
dec
inc
test
mulb
in
mov
enter
daa
filds
mov
jl
inc
push
cmp
xchg
jne,pt
inc
movsl
xchg
sub
lahf
xlat
dec
add
add
addr16
pop
push
fs
and
pop
pop
out
or
js
out
pop
pop
adc
jae
xchg
outsb
loope
mov
sub
sbb
sub
pop
int
icebp
scas
ljmp
and
imul
cmp
iret
sbb
add
ret
pushf
jb
cmp
xor
in
add
pop
pop
fcompl
push
and
je
outsl
mov
xchg
sahf
popa
idiv
test
ljmp
add
mov
lea
mov
or
adc
ds
lds
adc
in
out
add
lret
lods
shrl
or
fmulp
lds
xor
xor
lahf
ret
cmpl
fs
mov
and
mov
add
mov
mov
call
sti
adc
je
mov
insb
loopne
pop
rcrl
jge
adc
xor
dec
fwait
adc
mov
adc
out
imul
lods
pushf
cmp
xlat
add
ljmp
les
mov
dec
mov
jmp
jl
cs
pop
aad
cltd
nop
mov
pop
dec
jecxz
jle
fisubs
add
push
push
jecxz
xor
lea
mov
mov
mov
adc
popf
ret
jg
fisttpl
rcrl
xor
ror
mov
call
out
lock
xor
shrl
repz
in
scas
cwtl
xor
mov
lcall
mov
pop
dec
cli
inc
lret
adc
sahf
mov
aaa
jp
addr16
xchg
lock
adc
aaa
xlat
stc
mov
cmp
xchg
ret
jo
fldenv
inc
mov
aam
stc
xchg
inc
cmpsl
fiadds
out
imul
mov
push
jmp
and
add
shrb
sub
cmp
jnp
call
dec
out
fldl
pusha
adc
push
testb
add
fwait
popa
dec
lret
add
insl
stos
ljmp
xchg
sub
push
setnp
xor
add
mov
mov
xchg
xchg
dec
test
push
cltd
xchg
and
icebp
rorl
clc
pop
inc
sub
push
xor
xchg
add
lahf
hlt
pop
call
clc
xor
test
fbstp
lahf
ljmp
sub
ret
ja
fisubrs
dec
push
sbb
inc
jbe
fimull
inc
adc
aaa
cli
imul
lock
push
mov
mov
jns
fwait
push
in
std
dec
xorl
out
pop
jns
fsubrl
addr16
mov
mov
mov
mov
imul
ss
mov
xor
into
adc
xchg
add
fistl
dec
add
pop
push
or
adc
iret
stos
jge
andl
push
xchg
imul
fildll
pop
jne
adc
jl
iret
xchg
push
pop
ret
cmpsb
pop
data16
inc
pop
pop
lea
adc
inc
popf
rolb
mov
fldl
push
insb
mov
nop
pusha
sti
pop
out
xchg
fdivrp
sbb
lds
and
mov
add
push
hlt
imull
push
push
imulb
jbe
cmp
sbb
or
or
add
int3
hlt
into
cmp
push
push
sarb
cwtl
jo
cwtl
adc
shrb
cmp
pop
sbb
cmp
cmpsb
add
scas
loop
idivb
dec
daa
fsubp
insb
cmp
mov
push
pop
es
int
cmp
cwtl
cli
shlb
push
clc
adc
aad
xor
mov
sbb
fwait
out
sbb
push
lock
js
mov
push
push
pushf
jmp
push
adc
es
sub
cli
xchg
outsb
push
cwtl
das
adc
xor
cmp
or
xor
add
adc
push
and
int
sbb
jle
addl
dec
mov
push
jp
jae
sbb
mov
adc
sahf
add
xchg
test
call
jg
icebp
mov
mov
in
push
or
adc
lahf
sbb
idivl
pop
and
rcll
iret
push
jecxz
or
sub
pop
in
mov
outsl
jle
mov
push
std
or
mov
xchg
push
add
inc
dec
mov
mov
xor
mov
jmp
xor
add
shrb
gs
cmp
pop
pop
jmp
cmp
mov
xchg
repz
sub
orb
lahf
adc
jg
aaa
inc
test
mov
mov
jmp
or
int
int3
aad
cmp
nop
mov
mov
cs
orl
jecxz
dec
mov
push
cmp
lret
call
inc
aaa
jmp
js
fcoms
jo
sbbl
leave
pop
dec
and
mov
inc
shl
test
sub
inc
jb
fisttpll
dec
addr16
je
push
nop
sar
mov
idivb
in
cwtl
out
push
mov
sbb
mov
fadds
ljmp
mov
cmp
mov
jle
lock
fisubrl
push
in
xchg
mov
lock
and
bound
lcall
jp
imul
cmpsl
frstor
icebp
inc
xchg
clc
cld
ret
mov
sub
inc
and
sahf
mov
pop
push
lods
out
and
push
inc
test
push
xchg
xorb
and
mov
pop
xchg
outsl
out
xchg
ljmp
lods
outsl
pop
push
stos
fnstenv
out
test
mov
push
and
mov
cli
push
loopne
push
popa
fwait
cltd
out
int
test
mov
xchg
into
dec
dec
into
xor
xchg
sub
shll
aad
fwait
sub
roll
aam
push
push
ljmp
pop
rclb
test
add
jge
test
dec
dec
xchg
sub
or
pop
cmpsl
mov
jne
dec
sbb
inc
mov
mov
pop
loope
in
mov
mov
in
xorl
push
dec
sub
rcrl
cmp
xchg
movsl
test
inc
idivb
hlt
scas
in
stos
jg
and
add
xchg
shrl
ficoms
sub
push
fcmove
sub
mov
iret
or
dec
mov
sbb
mull
push
mov
pop
and
icebp
les
jp
fwait
pop
popf
fucomp
inc
push
int
inc
mov
data16
cmp
outsl
inc
add
lods
notb
cmp
or
push
xchg
inc
ficomps
jb
shl
push
mov
push
sbb
mov
int3
jmp
mov
lahf
add
sbb
aaa
scas
iret
or
addr16
or
adc
int3
fists
dec
cmp
push
mov
adc
jo
push
sahf
scas
add
sbb
cmp
movsb
jno
dec
inc
cmpsl
js
mov
add
pop
jecxz
enter
daa
ffree
or
mov
mov
cs
bnd
sub
sbb
mov
pop
or
push
test
cmp
hlt
and
dec
stos
cmp
pop
cmp
call
lods
push
push
mov
insl
mov
or
rcrl
outsb
mov
out
adc
sbbb
lcall
mov
or
jns
and
outsb
mov
inc
push
dec
add
xor
lds
lcall
add
sbb
pushf
sahf
cmpsl
sub
test
cmpl
in
lods
jg
mov
imul
aam
xor
dec
mov
out
pop
adc
lret
sahf
rcrl
mov
sub
cmc
and
mov
xchg
push
pop
outsl
pop
out
repz
jb
stc
pop
or
fs
push
add
fwait
test
dec
lods
lods
ss
out
fstp
cli
adc
cmp
xchg
mov
arpl
loopne
fs
jge
scas
adc
jns
adc
aad
repz
mov
rorl
cmp
andb
stos
jae
stos
ljmp
pop
mov
xor
jnp
push
and
mov
sub
mov
clc
add
inc
movsb
lcall
xchg
call
les
lret
adc
lds
nop
inc
in
lods
and
lock
inc
sub
xor
out
mov
xorl
rorb
lret
call
pop
movsb
idiv
mov
xchg
cwtl
test
and
sbb
or
lret
repnz
or
cmc
ret
xchg
lock
sub
cs
add
mov
sbb
es
jmp
jno
out
orl
icebp
sbb
xchg
mov
dec
xchg
inc
and
cmp
pop
and
sarl
aam
leave
lea
or
mov
push
imulb
enter
scas
and
movsl
popa
jns
pop
lods
fisubl
sbb
out
call
pop
movmskps
cmp
dec
add
stos
or
push
insb
dec
mov
inc
mov
and
ss
xchg
fstps
cmp
sar
mov
pop
fwait
push
imul
lods
enter
enter
lcall
fcoml
mov
mov
addr16
mov
cmp
int3
ja
test
fiadds
fimull
ds
mov
icebp
dec
jne
adc
lcall
mov
add
cmp
adcl
out
pop
addr16
into
cmpb
test
mov
mov
jmp
jle
add
lds
push
pusha
shlb
or
test
cmpsb
in
jmp
lods
ret
bnd
dec
sub
popf
mov
popf
cmp
leave
mov
push
test
stos
arpl
and
lea
cltd
imul
push
call
cmpsl
jecxz
push
jg
ret
pop
aam
cld
inc
jae
or
lret
push
inc
mov
mov
cs
test
cmp
out
bound
pushf
xchg
inc
mov
mov
and
mov
test
ror
sbb
hlt
lea
push
out
inc
lds
jns
jge
mov
shll
sbb
or
and
stos
insl
ds
lret
dec
stos
cmp
pop
int3
shlb
repnz
in
dec
and
hlt
cmp
add
movsb
cld
imul
in
inc
cld
jo
in
mov
mov
jecxz
hlt
jno
je
jl
pop
sti
cmp
xchg
jecxz
ficomps
mov
lahf
xor
leave
push
jnp
and
mov
xor
insl
les
push
js
ret
into
repnz
push
jp
test
sub
mov
xor
inc
aas
adc
ljmp
xorb
pop
sbb
test
xor
and
cmp
sub
push
push
sbb
inc
mov
pop
push
sub
stos
sbb
adc
test
addl
sbb
into
lahf
mov
sub
and
cmp
adc
das
lretw
push
shr
outsl
mov
fs
into
outsb
sub
cmc
ljmp
outsl
cmp
lret
loop
sbb
stc
adc
decl
add
ljmp
dec
ljmp
punpckhdq
fistl
inc
sti
push
inc
lock
imul
lea
mov
nop
xchg
stos
imul
push
repz
mov
scas
sbb
adc
sbb
or
jmp
insb
adc
xchg
imul
inc
call
inc
pop
pop
dec
xchg
movsl
les
stc
jecxz
inc
push
and
cmp
jb
lock
adc
adc
cmp
pop
fcmovnu
call
lock
mov
mov
sarl
push
pop
insb
dec
push
les
je
mov
rcll
rcrl
cwtl
cmp
dec
scas
or
jne
orl
lret
popa
or
mov
insl
xchg
lock
out
das
aam
lods
mov
pop
or
ret
sbb
cmp
insl
aaa
xor
aam
cmpsl
mov
lock
cwtl
cld
sbb
js
stos
pop
mov
outsl
pop
add
mov
inc
adc
sub
jl
movsb
push
imul
xor
fnsave
jo
add
adc
pop
mov
lods
inc
sbb
dec
imul
std
xor
int
add
mov
test
dec
mov
inc
sbb
dec
pushf
popf
cmp
orl
jmp
mov
push
mov
mov
sbb
sbb
lods
add
lock
das
shlb
or
xchg
xor
jmp
xchg
dec
dec
adc
movsb
push
pop
repz
pop
ja
push
dec
dec
xor
iret
or
clc
in
mov
pop
imul
push
fisubl
in
jns
insl
pop
in
mov
and
pop
out
mov
sub
leave
cmp
addr16
test
mov
icebp
inc
mov
jbe
adc
add
in
or
pop
sub
adc
jmp
ja
lahf
jae
mov
push
pusha
push
mov
mov
pop
add
stos
cwtl
pop
and
xor
shrl
loop
inc
or
push
das
xchg
pop
adc
cmp
mov
int3
mov
arpl
or
les
xor
fidivl
dec
mov
xchg
add
fsubp
jnp
vpsubsw
rclb
mov
aaa
push
sbb
sti
nop
leave
nop
push
or
fadds
jbe
aad
scas
xchg
sub
ret
aaa
sub
sub
add
jmp
dec
sbb
mov
jns
sub
jo
pop
shrl
add
imul
mov
mov
in
sub
cld
enter
daa
fistpl
movsb
jno
mov
jl
pop
fnstsw
sbb
ds
xlat
movsl
scas
mov
lds
dec
aaa
sbb
mov
pop
xor
cmpsl
xor
dec
pop
mov
fidivrl
xor
push
ljmp
jnp
scas
sub
or
adc
lds
mov
sbb
ja
add
inc
clc
and
push
pop
push
inc
sbb
int
out
sub
jne
pop
ret
mov
lea
jg
fcompl
movsl
mov
sahf
in
xor
lods
jno
jge
test
jg
aas
mov
fisubrs
mov
inc
mov
rcrl
and
rol
lods
idiv
sbb
lret
outsb
roll
jns
push
fs
into
push
mov
xor
adc
sub
loop
stc
push
stc
xor
mov
sub
jecxz
add
fmuls
mov
mov
xor
das
ret
mov
insb
gs
fucom
sub
jmp
adc
push
imul
inc
insb
xchg
inc
icebp
fstps
push
adc
sub
mov
in
cmc
mov
jmp
inc
js
imulb
xchg
push
hlt
or
dec
pop
sahf
in
sub
ffreep
subl
bound
xlat
daa
dec
mov
call
ret
pop
xchg
xor
jne
daa
pushf
out
fisttpl
adc
xor
out
inc
and
and
jb
popl
dec
int3
popa
je,pn
out
shl
jne
testb
jnp
pop
add
mov
mov
lea
stos
scas
lret
sarb
mov
or
aas
xor
mov
adc
outsb
cmp
es
add
push
sub
sub
scas
push
in
and
inc
outsl
add
xchg
adc
mov
arpl
mov
stc
sub
sub
outsl
sub
mov
cmp
push
xchg
imul
ds
rcll
int3
lahf
push
popa
cmpsl
cmpsb
add
stos
cmpsb
addb
sub
xchg
inc
insb
xlat
push
mov
add
add
xchg
cltd
xchg
scas
cmp
push
sub
add
push
test
lds
or
sahf
and
jg
pop
icebp
sarl
mov
add
mov
push
addl
in
popa
dec
or
sbb
or
cli
mov
xchg
cltd
or
mov
cmp
mov
scas
or
ja
test
inc
shlb
or
xchg
mov
xor
mov
jbe
call
bound
pop
imul
push
in
pmuludq
adc
cmp
les
jp
popa
mov
mov
and
testl
fisttps
pop
xchg
dec
imulb
and
stc
jae
pop
enter
pop
popf
mov
mov
stos
dec
orl
stos
mov
xor
jbe
das
adc
add
pop
inc
mov
and
xchg
dec
inc
test
scas
push
addb
ljmp
sbb
fistps
fiadds
mov
aad
rorb
dec
sbb
pop
mov
hlt
and
ss
lea
cmpl
lcall
inc
sub
fdivrs
dec
dec
mov
xor
in
leave
mov
and
dec
cmpsb
cmp
jmp
adc
jmp
cmpsb
adc
inc
in
adc
test
xchg
cmp
repz
sbb
jl
xor
and
and
inc
movsl
mov
out
and
lret
and
test
push
cmp
lahf
bound
mov
xchg
xor
pop
dec
jno
push
ret
mov
xchg
sub
mov
jne
loopne
xchg
adc
mov
xor
pop
in
sbb
push
xchg
add
mov
jno
dec
cmpsl
push
int
subb
jns
pop
inc
cmp
lcall
xchg
fadd
aaa
and
iret
mov
sahf
nop
mov
mov
jg
enter
je
mov
mov
adc
push
test
cmp
mov
idivl
fbld
rcrl
into
or
daa
sti
into
xor
or
js
xchg
xor
and
or
fs
in
dec
push
or
mov
and
inc
dec
cli
jne
xchg
mov
cmp
cmp
add
int3
or
pop
loopne
bound
pop
fcmovb
or
fisttpl
adc
cmpsb
std
repz
sbb
push
cmp
xchg
sbb
mov
pusha
add
jmp
fbstp
pop
loop
aad
stc
rcll
mov
push
dec
fstps
aad
mov
xchg
jecxz
push
or
lea
mov
mov
pop
inc
sbb
dec
pushf
xchg
popf
ljmp
fs
inc
shrb
aas
daa
jle
cmpsb
scas
mov
xor
dec
inc
mov
insb
shll
add
les
std
sub
cwtl
ficompl
mov
dec
cmp
cmp
cmpsb
andl
scas
rorl
dec
in
lock
mov
int3
int3
imul
dec
add
insl
add
ss
fstps
mov
sahf
cltd
xor
outsb
mov
mov
mov
gs
or
sti
pop
orb
sub
sarb
xchg
adcl
or
lds
jns
imul
ljmp
pop
lods
sbb
fldz
adc
fcoml
mov
mov
jbe
xor
bound
pop
test
mov
dec
cmp
test
xchg
icebp
xchg
xchg
pushf
rorb
out
mov
bound
dec
add
es
push
xor
fmull
inc
movsl
sysenter
cld
leave
lods
xchg
call
push
iret
mov
imul
fisttps
jp
inc
imul
inc
mov
jb
dec
cmpsb
or
jne
mov
mov
fucomi
imul
leave
jns
orl
in
cmp
push
out
inc
push
sub
mov
subb
mov
push
sbb
jnp
adc
and
xchg
mov
xchg
pop
int
jmp
or
dec
sbb
popf
scas
and
mov
fisttpl
stos
mov
dec
and
int
jno
xchg
scas
or
push
mov
incl
ret
adc
jns
push
xchg
mov
mov
lods
jbe
or
test
add
add
popf
mov
inc
sbb
nop
loop
rolb
fisubrs
xlat
mov
add
lret
inc
aam
jne
cmp
mov
mov
hlt
push
fdivrl
out
jge
jmp
sbb
ds
aaa
stos
or
add
insl
int3
mov
xchg
push
aas
ds
jo
mov
mov
aas
cmp
movsb
dec
movsb
popf
jo
inc
add
cmpsb
xchg
in
in
clc
sahf
into
enter
daa
flds
adc
mov
inc
cmp
stos
loop
inc
xor
movsl
mov
adc
hlt
lret
jne
test
xor
xchg
mov
cltd
pop
fxch
push
js
leave
rcll
mov
push
dec
push
loope
insl
add
sub
jae
adc
jnp
xlat
movsl
js
subb
sbb
jnp
negl
and
stos
mov
popf
lds
pop
roll
sub
push
sub
sahf
mov
mov
faddl
mov
adc
xchg
mov
push
pushl
cs
push
dec
lahf
cmp
inc
mov
mov
popl
popf
shll
or
scas
ror
pop
xor
cmc
aas
mov
xor
ljmp
cmc
push
pop
stc
xor
sarb
inc
xchg
pusha
data16
pop
lods
rcrb
mov
hlt
out
sbb
clc
xor
cmc
cmp
push
addr16
sub
inc
out
jo
ficoms
loopne
fistps
adc
int3
jle
adc
jge
jae
and
rcrl
xchg
jle
sbb
cmc
xlat
jp
xchg
sub
xor
lret
sub
call
mov
aad
nop
shlb
sbb
and
fsts
lcall
xchg
inc
lea
cmc
ljmp
mov
adc
sbb
mov
push
inc
inc
push
addr16
pop
mov
inc
mov
jb
or
je
inc
in
andl
std
iret
push
ficompl
mov
mov
push
cmpl
adc
lret
scas
cmpsl
dec
mov
mov
xlat
lock
scas
scas
das
jno
or
andl
jecxz
jb
lret
es
jmp
insl
in
mov
dec
fildl
cmpsl
fmuls
dec
mov
jne
push
cld
cltd
mov
mov
inc
lahf
imul
lret
pop
nop
xchg
sub
cli
stos
aam
ffree
mov
cmp
push
sbb
or
in
shrb
clc
mov
and
stos
sub
ljmp
inc
lods
xchg
mov
je
es
rorb
push
imul
add
dec
cltd
add
filds
mov
dec
testl
test
hlt
fwait
xchg
push
xor
add
icebp
rcrl
int
inc
mov
cmpsb
push
add
jb
add
cmp
shl
or
mov
xchg
aaa
pop
sub
cltd
mov
pop
and
dec
ja
jo
dec
or
inc
add
fcompl
dec
mov
jne
js
mov
xchg
in
out
dec
dec
ja
aas
out
jns
add
in
adc
orl
je
inc
jo
or
sbb
mov
jo
mov
xorl
add
ss
sub
mov
xchg
repnz
popf
jmp
fsubrs
jno
sub
push
test
test
mov
xor
das
je
and
in
adc
cltd
lock
insl
sbb
dec
adc
jp
int3
nop
enter
dec
pop
mov
insl
inc
lahf
jno
arpl
insb
aas
inc
scas
nop
xor
mov
adc
ficoml
xchg
xchg
push
sub
add
fmulp
jb
lds
int
mov
hlt
enter
pop
cmp
mov
sbb
sub
jge
outsb
ds
jne
aaa
push
mov
add
mov
fmuls
or
or
mov
mov
outsl
push
cmp
dec
add
sub
inc
xchg
lock
filds
enter
daa
fdivr
jp
scas
pop
sub
jl
bound
cmp
push
shll
repz
pop
lahf
mov
push
bound
test
jmp
mov
cmp
imul
bsf
repz
pop
lret
push
mov
sub
fimull
outsb
cmpsb
adc
adc
push
scas
ret
popl
xor
sbb
fisubs
sub
ret
and
pusha
cmp
pop
inc
lret
dec
lcall
loope
sbb
lahf
sbb
pop
jg
mov
or
out
pop
dec
mov
mov
mov
cltd
cmc
ss
fadds
fwait
div
cmp
fmul
adc
rorl
mov
lret
cli
aas
into
cli
outsl
or
push
aad
xor
test
mov
lret
in
rorl
js
pop
and
lods
mov
push
out
ja
cli
fcmovnbe
xor
aaa
nop
dec
cmp
shr
sti
fisubrl
jno
in
xchg
loopne
outsl
pop
sbb
jg
fdiv
pop
imul
lods
pause
outsl
xchg
mov
sbb
add
xlat
mov
rorb
ss
jmp
aad
xor
lods
outsb
dec
dec
jl
test
arpl
or
lret
xlat
mov
movsb
mov
xor
push
sti
call
aas
cli
pop
stos
test
adc
or
out
sub
cwtl
xor
pop
pushf
fwait
inc
into
pushf
insb
inc
jne
add
jb
adc
dec
je
jo
rcl
sahf
ret
testb
std
jbe
adc
dec
add
mov
loope
adc
test
adc
fdivr
and
push
mov
push
mov
mov
and
outsl
in
ret
pop
jne
cmpsl
dec
call
pop
mov
dec
repz
cld
les
or
and
inc
pop
push
pop
rorb
shlb
inc
push
sub
fdivrs
mov
lahf
pop
push
fcmovnb
cwtl
fstl
test
clc
out
incl
ljmp
xor
jae
out
xlat
and
xchg
sbb
push
inc
lock
sysenter
jmp
add
push
das
test
or
dec
cmp
push
test
jmp
push
sbb
cmp
and
inc
cs
push
test
sbb
add
ljmp
adc
xor
clc
and
cmp
and
inc
mov
pop
ffreep
pop
ja
sub
dec
cld
and
loope
daa
es
or
jne
lret
xchg
out
daa
jns
cli
push
jns
sub
lock
sbbl
iret
sub
mov
std
addr16
imul
cmp
outsl
mov
jns
and
sbb
call
pop
movsl
fbld
push
in
add
xchg
out
jae
repnz
std
adc
mov
pop
popf
sub
mov
imul
imul
scas
shlb
jns
sbb
repnz
sub
ret
mov
inc
stos
jp
arpl
mov
ds
sbb
dec
inc
inc
sbb
add
xchg
and
jo
pop
xor
jo
lahf
lds
mov
rolb
sub
inc
out
jge
insb
mov
hlt
add
push
push
jp
add
adc
dec
aad
sbb
inc
push
or
addw
inc
insl
int3
popa
jecxz
dec
aad
loop
add
jg
incb
scas
aas
xchg
iret
and
dec
sub
xchg
fwait
jl
mov
popl
lret
out
cmpsb
lcall
enter
daa
xlat
stc
arpl
loop
js
cmp
sbb
adc
mov
lea
movsl
lret
and
adc
push
lcall
push
mov
xchg
xor
stc
cmp
pop
daa
xor
js
mov
pop
or
xchg
negl
aas
sub
mov
sub
fwait
outsb
or
lods
shlb
aaa
mov
adcb
testl
or
int
xor
sub
sti
ret
pop
mov
push
pop
push
fstpt
out
sbb
sahf
jns
testl
sti
adc
mov
outsl
xchg
mov
or
scas
dec
mov
cmp
mov
sti
lcall
lods
clc
mov
rorb
adc
ss
frstor
fwait
xor
roll
sbb
stc
mov
int
add
fldenv
fndisi(8087
lods
mov
cmp
out
push
cmp
push
hlt
imul
test
mov
hlt
xor
xor
pop
aaa
dec
int
scas
dec
pop
imul
insb
dec
repz
pop
rcll
xchg
sahf
ljmp
add
sub
mov
mov
dec
inc
cmpb
nop
mov
fcmovnb
or
jbe
or
add
test
scas
ds
pusha
dec
xor
push
call
mov
jl
adc
lahf
mov
insl
pop
ret
inc
push
dec
xor
aas
cmpl
dec
test
popa
je
lock
and
sbb
std
jo
sbb
filds
mov
and
mov
fsubs
subl
lcall
push
fnstenv
stos
jnp
das
das
out
mov
mov
mov
cmp
es
movsb
push
insl
mov
pop
test
jnp
dec
icebp
and
jo
out
outsl
inc
mov
push
jl
and
fcmovne
sbb
fistps
rolb
sub
sub
pop
aam
fiadds
mov
inc
lods
push
sahf
enter
sbb
xchg
sub
ljmp
xchg
lods
pop
push
clc
stos
bound
cmp
int3
push
pop
sub
xchg
cmp
add
daa
push
mov
push
int
dec
lahf
ds
test
jae
xchg
xor
roll
lds
fwait
jae
dec
push
dec
scas
rolb
ja
in
decl
xor
mov
cmpsb
jl
xor
les
jle
mov
pop
lcall
dec
out
mov
or
add
outsb
dec
dec
mov
xchg
mov
push
out
push
stos
or
jns
icebp
mov
jnp
scas
subl
sub
mov
movsl
addr16
jb
sub
mov
mov
loope
inc
jle
push
push
in
dec
jbe
bound
ffreep
repz
cwtl
mov
jmp
outsb
push
fidivl
lods
jno
das
mov
sarb
lea
stos
adc
das
sub
imul
fs
xor
push
xchg
lahf
cli
adc
or
ret
xchg
pop
push
loope
mov
sub
push
addr16
mov
mov
push
jle
mov
mov
and
call
aad
ficoms
xchg
cwtl
jmp
ljmp
inc
push
leave
jecxz
cmp
dec
nop
mov
jbe
adc
jge
pop
and
imul
adc
xor
mov
dec
ss
dec
inc
push
sub
call
iret
repz
cmp
scas
push
enter
fstpt
dec
lea
movsb
imul
jnp
in
lods
inc
jmp
daa
jp
cmp
adc
mov
ds
mov
and
add
insl
outsl
test
adcl
or
cmp
pop
dec
sahf
or
daa
push
loope
scas
out
xchg
popa
mov
outsb
insb
xor
rorb
sbb
ret
andb
add
je
and
aaa
push
push
imul
rolb
sub
pop
pop
ds
lcall
cld
fdivl
sahf
sbb
in
je
lcall
jg
fsubrp
mov
in
popa
movsl
jae
add
and
and
enter
je
ja
mov
mov
push
rcrl
sbb
into
ror
cmc
xchg
inc
pop
xor
lods
shrb
add
jmp
fs
dec
daa
add
adc
pop
or
xchg
or
out
mov
cli
inc
in
sbb
mov
cmp
pop
push
add
mov
dec
pop
push
fisubl
adc
imul
push
scas
repz
xchg
adc
push
xlat
aaa
aaa
mov
mov
or
dec
jmp
div
cs
stos
aad
negb
dec
cmp
fnstcw
ror
les
cwtl
mov
int3
orb
jecxz
cmp
add
adc
ret
cmp
insl
mov
mov
xor
fwait
call
jb
mov
je
in
shll
push
not
enter
fidivrl
mov
ret
add
and
inc
dec
ror
sti
sub
fnstenv
and
das
push
and
xor
addr16
test
fsubl
fildll
dec
int3
ljmp
scas
inc
fyl2x
cli
fmull
add
les
stc
and
jbe
fistps
movsl
inc
rcl
inc
lcall
pop
xor
popa
inc
sub
popa
xchg
and
movsb
adc
sbb
ljmp
fildll
jmp
lahf
xchg
cmpsl
imul
cli
sub
repnz
add
scas
pop
aas
cltd
cmpsl
lahf
stc
test
fldenv
dec
push
ds
test
nop
sub
jge
mov
sbb
jo
pop
dec
or
fwait
mov
push
insl
add
movsl
xor
mov
xor
ja
xchg
and
xorb
mov
mov
pop
xor
inc
or
mov
mov
fildl
jne
pushf
cli
mov
je
out
in
imul
pop
sub
push
mov
cmpl
jo
lahf
sub
sub
stos
lods
jo
xor
xor
mov
xor
mov
nop
and
jle
or
push
std
nop
mov
in
lods
xchg
imul
jmp
cmp
jae
stos
pop
push
repnz
popf
dec
xchg
mov
xchg
shlb
push
xlat
add
stos
mov
leave
insb
ret
imul
les
inc
adc
ss
iret
jmp
cmpsl
add
divl
inc
rorb
inc
mov
cmp
push
std
movsl
jecxz
imul
in
xchg
lahf
add
fidivs
scas
add
mov
in
aam
leave
pop
push
mov
lcall
jbe
sbb
jge
dec
rcrl
xchg
arpl
cmpsl
test
or
mov
imul
mov
and
lret
add
mov
sbb
std
mov
cmp
jne
leave
data16
aas
dec
lock
mov
lcall
aad
and
dec
dec
pop
jno
sub
int3
cmp
aad
fmuls
and
insb
addr16
or
bound
push
dec
cmp
xor
sub
jne
leave
js
ljmp
inc
cmpl
std
loop
sub
shrb
mov
adc
out
jmp
xorb
testb
repnz
mov
int
xor
sub
testb
jg
lcall
out
fcompl
outsb
pop
sahf
mov
mov
jg
scas
sbb
fdivs
mov
dec
jae
arpl
stc
fdivs
test
lcall
stc
add
je
into
mov
popl
outsl
push
cmp
xchg
stc
adc
popa
fs
sbb
add
data16
test
mov
pushf
lret
popf
cmp
dec
xchg
mov
ljmp
jnp
imul
cltd
int3
pop
jne
aas
adc
fs
xchg
xchg
std
add
rorl
addr16
mov
into
xlat
jbe
cli
sub
mov
mov
ja
dec
jmp
addr16
cs
mov
out
nop
ds
dec
cltd
je
inc
pushf
pop
xor
jo
add
lds
mov
cmp
inc
call
mov
aas
stc
adc
add
xor
pop
or
rolb
ljmp
pop
outsl
pop
dec
xchg
xchg
je
in
outsl
sarl
or
cwtl
add
push
mov
loope
adcl
xor
mov
mov
das
in
pop
test
pop
jmp
and
fs
bound
into
dec
dec
inc
cmpsl
aam
insl
mov
roll
inc
cld
inc
push
lret
mov
pop
push
xchg
mov
sbb
in
sub
dec
and
xor
add
and
fisttpll
aam
xchg
cmpsb
outsl
insl
ljmp
jle
xor
stos
inc
dec
pop
out
add
clc
push
aad
hlt
sqrtps
ljmp
mov
mov
xchg
orb
scas
test
inc
sub
sbb
or
pop
repz
push
xchg
pop
ret
add
lods
cmp
xor
inc
or
dec
xchg
jae
sub
add
sub
pop
adc
lahf
dec
aad
gs
pop
ret
mov
dec
adc
sbb
mov
xchg
and
les
mov
jns
outsb
shl
xchg
add
or
jl
and
fisttpl
cmpsb
jo
addr16
dec
jp
adc
mov
push
jg
aas
xchg
cli
jle
mov
sub
cwtl
out
filds
fstl
ljmp
jae
in
jnp
mov
sub
iret
daa
sbb
push
cli
mov
and
sub
insb
sub
dec
stc
ss
and
push
iret
dec
loop
ret
ss
mov
arpl
inc
mov
xchg
sub
lods
incb
fisubs
xchg
sub
cltd
sbb
jne
pop
mov
imul
rcl
out
mov
inc
xchg
ror
rcrl
jmp
sub
xchg
or
popa
gs
sbb
aaa
data16
and
repnz
xchg
add
dec
and
dec
and
mov
scas
xchg
cmp
subl
mov
mov
inc
into
bnd
and
in
jnp
push
enter
daa
aam
fdivrs
jnp
push
jno
push
jl
stos
cli
cmp
arpl
idivb
sub
pop
mov
sub
inc
push
adc
pop
test
pop
cmp
xor
mov
test
pop
pushf
repz
ds
dec
lods
push
xchg
sti
loope
cmp
sub
and
outsb
xor
dec
adc
ret
popl
ljmp
cs
and
push
push
pop
test
int
or
sub
pop
cmp
aam
test
mov
fmul
or
sahf
bound
test
sub
jg
xorl
mov
divl
out
mov
cmpsb
mov
cmp
in
aad
divl
aaa
dec
shll
push
or
cmpsb
into
xchg
stos
cmc
and
xor
out
outsl
xor
jl
aam
jl
enter
push
aas
cli
add
mov
lods
push
insl
test
and
mov
mov
stc
cli
cmpsl
or
xchg
iret
jmp
push
lock
xchg
push
popa
sahf
lods
jl
add
jl
gs
pop
xchg
incb
sub
adc
and
jbe
xchg
into
sbbb
dec
add
mov
cmp
mov
arpl
loop
adc
xchg
fwait
sbb
stos
sub
aad
dec
scas
nop
sbb
les
push
rolb
mov
rorb
jecxz
aam
cmp
xchg
lea
adc
cmp
cs
jbe
mov
pushf
xchg
scas
rcr
mov
push
inc
ljmp
aas
pusha
out
movsb
jb
dec
inc
dec
or
imul
adc
popf
cwtl
cmp
push
mov
xchg
mov
sub
inc
aam
fscale
aas
mov
lret
push
lock
cwtl
adc
mov
lcall
es
test
outsl
movsl
jl
ret
cmpsl
rcrl
mov
test
iret
cld
jo
push
mov
xchg
sub
mov
cmp
xchg
sarb
sub
mov
and
out
aas
cwtl
mov
in
mov
popa
dec
xchg
loope
popf
xchg
xor
arpl
jl
xor
mov
cmpxchg
add
pop
clc
cltd
adc
rcrb
mov
xchg
leave
dec
aam
and
jnp
add
andl
pop
sahf
and
fwait
add
push
xor
pop
add
enter
daa
or
jo
or
jp
mov
inc
push
mov
lret
and
ja
inc
out
dec
enter
repz
es
xchg
pushf
mov
cli
mov
mov
ret
mov
push
add
movsb
and
in
rcr
sbbl
out
push
cmp
mov
into
add
mov
push
mov
out
ret
int
mov
xor
pusha
xor
fbld
sub
xchg
adc
in
jmp
iret
lea
xor
jbe
js
jbe
cltd
movsb
sub
push
jbe
stos
outsb
pushf
xchg
and
pop
test
pop
imul
jno
pop
lahf
popa
push
addr16
adc
rolb
ret
and
jbe
push
scas
outsb
inc
mov
inc
push
sti
lcall
xorl
aas
fdivrp
enter
xchg
out
cmpsb
xchg
mov
xchg
mov
leave
dec
mov
hlt
xor
xchg
jbe
cmp
out
sbbb
cmp
or
loope
add
dec
jecxz
or
int
push
xchg
sbb
xor
push
loopne
mov
ficompl
movsb
fistps
inc
pop
fstp
cmpsb
cmpsb
and
in
lock
enter
daa
rcll
aaa
jno
lret
fwait
jl
dec
repz
jle
sbb
int3
movsl
out
jmp
lahf
dec
pop
dec
push
out
cwtl
test
loop
mov
dec
out
mov
pop
ret
cmpsb
mov
pop
add
push
cmp
push
xor
sub
popa
sub
daa
sub
outsb
xchg
xchg
adc
popf
and
fistpll
sbb
jo
mov
clc
add
andb
jns
push
pop
inc
mov
pop
ret
mov
mov
aaa
mov
jnp
sbb
xlat
sahf
add
icebp
stc
adcb
jg
pop
xor
mov
mov
in
inc
adc
lods
mov
jmp
leave
pop
fsubrs
sbb
inc
xchg
popa
sarl
sti
mov
mov
or
out
sbb
imul
jmp
outsl
adc
int3
stc
jg
fsubl
sub
mov
dec
imull
push
dec
sti
out
cmc
jecxz
fidivl
xor
adc
leave
stc
sti
inc
out
inc
push
or
dec
pop
mov
gs
mov
imul
or
fwait
push
lcall
mull
xlat
hlt
in
sub
sub
mov
dec
jne
jmp
xchg
outsb
cs
repz
push
dec
nop
hlt
jnp
dec
push
xor
inc
ret
pop
repz
fistl
jecxz
fcomps
aas
pop
xchg
lea
insb
adc
lds
mov
shrl
sub
ret
scas
fildl
push
pop
inc
jno
mov
aas
incl
inc
jb
pop
mov
test
je
cmp
pop
mov
std
mov
std
loopne
add
adc
add
incb
lret
dec
mov
mov
add
jmp
int
insl
and
stos
xchg
ret
and
pop
es
mov
dec
mov
sub
and
jg
push
cld
fwait
mov
mov
stos
and
and
inc
aaa
sti
pop
pop
movsl
sub
dec
test
aam
roll
das
xchg
mov
fst
push
sbb
push
icebp
fistl
fistpl
lods
or
mov
xchg
jl
inc
push
mov
and
out
test
mov
mov
dec
cmp
xchg
xchg
jmp
ss
jp
bound
pop
dec
jmp
movsb
push
xlat
push
cmpsl
add
jecxz
test
xor
ds
xor
sub
adc
adc
xchg
adc
dec
mov
rcl
pop
lds
dec
les
inc
mov
or
sbbb
jns
jl
in
repz
call
lcall
pushf
mov
xor
jp
ljmp
inc
lds
jnp
mov
loop
or
push
filds
pushf
xchg
in
cwtl
jmp
lcall
push
cmp
push
popf
rolb
push
xchg
jbe
stos
loope
scas
and
subl
imul
jno
mov
adc
adc
sbb
push
mov
mov
cli
xor
inc
loope
test
inc
shll
push
jp
jge
sub
xchg
fcoms
sbb
pushf
lret
testb
mov
test
mov
out
clc
leave
mov
andl
mov
xor
aaa
in
xor
add
leave
jo
add
push
je
pop
xor
scas
lcall
cmp
mov
add
in
or
cmpsb
sub
in
dec
icebp
mov
daa
shlb
cmp
push
sub
cmp
in
in
movsl
in
mov
xchg
sti
je
push
in
push
mov
icebp
cmp
imul
leave
mov
or
dec
pop
ljmp
pop
inc
or
loope
push
or
sub
testb
clc
loopne
adc
js
adc
lock
sbb
iret
push
add
test
and
outsl
vmovd
sub
lret
pop
cmp
movsl
lcall
mov
sbb
mov
test
mov
sti
mov
ja
mov
std
das
adc
mov
ss
add
arpl
sub
mov
repnz
xchg
rcl
push
or
enter
dec
cmc
mov
add
jl
jmp
loop
out
stc
ss
jb
xor
pushw
push
mov
add
mov
xor
or
movl
hlt
cmp
arpl
mov
lods
pop
shlb
xchg
adc
adc
aam
jl
add
repz
ret
xchg
sbb
inc
sbb
arpl
xor
and
fwait
pusha
mov
mov
dec
xlat
jno,pn
out
shll
xor
mov
mov
aad
scas
fsts
test
mov
lea
call
cmp
pop
fsubrl
xchg
test
sbb
mov
pushf
pop
icebp
and
inc
pop
push
les
sahf
and
jb
popf
rorl
mov
adc
lods
sbb
neg
jge
std
pusha
mov
cwtl
mov
pop
mov
jne
mov
repnz
aaa
lret
mov
sub
gs
test
jb
xchg
das
mov
xor
jg
inc
mov
mov
pop
ret
mov
call
insl
cmp
fiadds
mov
push
pusha
dec
cld
xchg
in
addb
int
std
and
loop
xchg
pop
jp
dec
shlb
mov
sub
mov
dec
push
insl
mov
pop
mov
push
fstp
xchg
arpl
xlat
popa
jbe
mov
jae
shrb
leave
add
lea
add
xor
jne
leave
les
lea
icebp
dec
mov
into
inc
xchg
xor
sarl
test
fwait
pop
cmp
push
jp
int3
add
insl
cmp
les
add
or
xor
fs
xchg
pusha
int3
jmp
mov
inc
int
ja
addr16
scas
or
and
pop
or
mov
pop
dec
mov
out
jbe
test
loopne
bound
jns
jns
in
push
xorl
out
push
sub
xchg
xor
xor
daa
out
mov
fistpl
mov
dec
jae
jle
jns
in
dec
mov
fbld
or
iret
bswap
xchg
gs
jae
dec
push
push
mov
popf
out
or
sar
rsm
push
gs
and
insb
outsb
nop
or
scas
and
cmc
imul
cmp
mov
pop
xor
inc
inc
in
xchg
arpl
ds
testb
add
call
jge
xor
sbb
sbb
out
jne
dec
push
xor
cmp
cmpsb
mov
cmp
arpl
ss
dec
hlt
iret
jne
push
andb
mov
jge
icebp
ficompl
adc
or
xlat
mov
int3
jecxz
lods
dec
outsl
jbe
push
push
add
lret
dec
dec
scas
jns
and
cmp
loope
movsb
cmc
pushf
xor
jle
cmpsb
lods
fldcw
mov
jns
sarl
mov
stc
loopne
pop
adc
ds
mov
movsl
hlt
js
and
push
push
lahf
mov
or
cmp
sub
daa
push
xor
out
into
sbbl
pop
xorl
push
stc
jg
adcl
jo
pop
jno,pn
adc
adc
popf
inc
mov
pop
sub
fcmovu
and
adc
int
loopne
sub
std
sbb
in
dec
fmul
mov
xor
cmp
std
in
jg
adc
mov
loope
mov
mov
outsl
cs
cmp
push
aam
divl
out
daa
popa
or
insb
aas
pusha
mov
jp
into
das
fbstp
xor
aad
outsl
roll
int
stc
in
je
fs
movsb
test
mov
mov
ljmp
pop
inc
addr16
cmp
testl
incb
ficoml
loopne
xchg
push
pop
icebp
sarb
imul
shrb
repz
in
dec
sbb
sahf
lahf
mov
sub
test
mov
and
inc
jmp
iret
inc
cs
sbb
sbb
fisttpll
out
inc
call
jp
icebp
push
stos
jecxz
lods
add
iret
jl
call
mov
and
fisttpl
mov
loope
rcrl
jecxz
inc
jg
jo
xor
dec
aas
cmp
adc
dec
jb
mov
sar
hlt
test
pop
lea
cwtl
insl
test
mov
lods
jecxz
les
xor
jmp
lret
es
orb
orl
addr16
push
ss
cmp
ret
inc
jno
outsb
scas
push
insl
and
mov
lea
rclb
mov
sub
dec
fwait
mov
lock
and
jge
cltd
pop
cltd
arpl
shl
into
sub
ret
inc
mov
rorb
push
xor
frstor
es
mov
xchg
mov
xor
lods
fimuls
stos
cld
jne
out
mov
pop
xchg
or
aaa
push
inc
cwtl
mov
add
xchg
push
test
les
mov
data16
xor
xchg
push
test
iret
xchg
xchg
loope
sbb
mov
fwait
lea
incl
sbb
incl
or
pop
push
or
mov
xchg
scas
xor
sarl
cld
push
ja
mov
and
push
and
popf
xor
dec
mov
jge
add
ss
inc
sub
xlat
xor
jns
sbb
mov
out
jge
sub
xchg
dec
mov
push
jp
xchg
mov
pushf
lods
jnp
lock
jle
not
in
jl
pusha
add
xchg
addb
push
pop
xchg
xor
jnp
rcll
popf
push
jmp
mov
adc
out
stos
push
shll
jae
cmc
insb
flds
imul
or
cmp
outsl
adc
ds
iret
les
ret
xchg
pop
push
jmp
sbb
or
jns
int3
inc
js
enter
mov
sbb
adc
fsubp
lahf
lahf
ffreep
aas
out
mov
mov
push
hlt
adc
push
mov
add
jge
xchg
cli
sbb
add
bound
add
int3
into
mov
dec
fidivs
push
cmp
xor
jnp
mov
and
and
cmp
cmp
inc
or
and
pop
lahf
xchg
enter
daa
rclb
inc
lea
sbb
sub
xchg
jle
pop
aas
and
movsl
sti
jle
and
mov
cwtl
push
pop
jno
test
inc
je
xor
jns
pop
cmp
push
js
adc
xchg
push
fsub
loope
std
push
sub
push
sub
xlat
adc
outsl
add
cs
push
sbb
out
pop
test
movsb
stos
jbe
push
inc
shrl
push
aad
jne
or
cmp
xor
je
scas
sbb
je
test
cld
xchg
push
clc
mov
mov
mov
mov
pop
adc
xor
mov
xor
fsts
divl
pop
add
sbb
sti
roll
push
mov
out
into
adc
sub
xor
outsl
mov
movsl
loop
out
stc
movsb
addr16
add
jbe
jo
into
lods
icebp
sbb
mov
sub
out
xlat
jo
xor
dec
stos
cmp
dec
xchg
push
cmp
sub
ss
les
pop
adc
adc
imul
mov
repz
push
sbb
fisubrl
xorl
mov
xor
dec
adc
aad
stos
mov
dec
je
xchg
inc
sti
jae
flds
push
stc
jecxz
jge
dec
pop
testl
aaa
fiadds
adc
test
fistl
orl
push
inc
push
or
inc
dec
mov
cmpsl
jb
mov
xchg
movsl
rorl
in
mulb
and
scas
cli
pop
cwtl
sub
push
mov
inc
rorb
jp
xchg
xlat
test
sub
sub
sub
fsubrl
dec
mov
mov
repnz
add
leave
shll
jno
insl
or
mov
scas
sarb
iret
mov
mov
add
cmp
mov
adc
call
mov
mov
and
sub
cmp
push
repz
out
jno
xchg
loope
cmc
ljmp
loop
dec
fadds
out
out
dec
lods
xchg
push
mov
push
sbb
dec
cvttps2pi
mov
and
xor
fistps
jo
stos
mov
sub
out
jae
jne
cmp
ja
test
shll
rcrl
addr16
mov
int3
outsb
add
xor
jmp
and
or
mov
xor
shrb
loop
mov
xor
js
or
mov
add
lcall
dec
into
popf
or
inc
push
mov
hlt
dec
test
pop
mov
push
inc
out
pop
js
bound
ret
jns
pop
movsb
in
push
fiaddl
mov
cmp
gs
or
cmpsb
jo
clc
xor
movl
jge
and
xchg
fistps
pop
ss
sti
fidivs
xor
test
or
idivb
push
push
cmp
mov
lcall
enter
inc
jg
repz
iret
and
ret
jl
lahf
xor
inc
add
faddl
ficoms
or
hlt
dec
fadds
mov
ficompl
push
leave
sbb
or
outsb
fimuls
test
rcrb
mov
fildll
leave
and
ret
push
jmp
test
push
sbb
mov
or
mov
mov
das
ja
sbb
insl
mov
scas
aaa
pushf
shll
outsl
movsb
in
dec
sbb
movsb
or
sub
das
andl
dec
sub
stos
dec
mov
iret
jno
cmp
loope
lock
jl
daa
cmpb
mov
movsl
sbb
and
rcrb
fstp
test
push
adc
push
push
in
pop
pop
pop
cmpsl
js
jae
pop
add
clc
push
imul
scas
mov
sub
dec
imull
jecxz
fisubrl
movsl
mov
rorb
dec
pop
push
daa
subb
mov
lret
gs
mov
sahf
push
imul
mov
xchg
pop
mov
enter
aam
xchg
aaa
int
pop
sub
mov
xchg
popa
sub
dec
jae
add
repz
fists
mov
and
push
aaa
ss
outsb
mov
fcoms
xor
rcrl
mov
into
cmc
xchg
mov
add
fdivs
loop
xor
stc
pop
incb
fs
loop
add
nop
pusha
repz
lods
fadd
pop
mov
pushf
addr16
aad
cli
cmpsb
sub
mov
fnsave
sti
add
mov
dec
mov
cmp
insb
or
adc
stos
imul
push
xchg
gs
sbb
adc
icebp
xlat
lock
sahf
sub
hlt
stos
mov
stc
ss
cs
nop
pusha
mov
fwait
inc
push
dec
xchg
fnstcw
cmpsl
xchg
push
xchg
cmp
dec
inc
xor
mov
mov
pop
cmc
imul
fstpt
pop
fiaddl
inc
fdivs
imul
jb
lahf
cmp
pusha
mov
aad
cltd
jno
mulb
repz
jecxz
mov
stos
fisttps
andl
sub
lret
add
xchg
mov
out
mov
cwtl
xor
or
das
daa
add
sbb
and
sub
es
xlat
insl
repnz
dec
dec
test
xchg
lea
sbb
inc
xor
lea
ss
jbe
mov
lods
pop
xlat
xor
fwait
cmpsb
sub
add
mov
push
in
push
mov
add
jb
fs
add
lahf
xchg
and
ljmp
scas
lods
mov
clc
stos
fisubl
sub
imul
inc
jnp
std
or
ljmp
xchg
dec
xlat
sub
test
mov
xchg
cmp
sbb
inc
aas
sarl
push
pop
fwait
jmp
or
arpl
dec
add
dec
push
xchg
incl
xor
decb
xor
pop
inc
es
or
mov
inc
in
mov
jb
outsl
ja
cli
rorl
stc
sbb
or
lds
mov
push
xchg
js
jne
inc
jg
mov
leave
push
std
into
push
jns
inc
lds
and
mul
xor
or
dec
dec
scas
or
data16
jp
pxor
repnz
jle
int
in
add
pusha
cmp
xchg
xor
jmp
and
jae
or
inc
and
popf
pop
jecxz
mov
nop
lahf
jb
lods
pop
lret
jo
insb
scas
sbb
pop
scas
dec
cmc
add
leave
arpl
into
cltd
ror
adcb
gs
pop
iret
in
inc
or
xchg
sbb
or
push
je
push
jbe
add
dec
out
xchg
xor
sahf
sbb
fistl
push
rcr
sub
add
rolb
out
dec
enter
bound
leave
fwait
mov
xor
inc
cmp
jbe
out
insl
jge
test
inc
outsl
push
aaa
loopne
cwtl
or
dec
int3
movsb
popf
jge
mov
or
xor
xor
jae
push
out
lret
pop
mov
movsb
xchg
ja
inc
sub
cmpsb
xor
fsubrl
cmpsb
ljmp
lods
popa
inc
jno
lret
inc
jl
out
sarb
call
sub
add
cmp
add
jmp
sub
push
fdivrl
pop
lds
pop
xchg
and
push
mov
loope
aaa
add
sub
leave
mov
adc
in
add
mov
inc
rcrl
les
aas
add
aam
and
je
push
outsb
mov
int
mov
xchg
pop
ss
lcall
fmul
scas
mov
sahf
xor
xchg
test
dec
out
sbb
addr16
lret
clc
mov
pop
scas
mov
stc
cmp
data16
cmp
jmp
imull
filds
shll
ljmp
or
fcomps
cmc
int3
cwtl
mov
call
xor
loop
mov
stc
adc
fldenv
push
add
data16
jp
mov
mov
sub
xor
jae
sti
mov
repnz
jo
jne
sub
pop
loopne
bound
pop
dec
lret
nop
adc
lea
mov
pop
adc
je
repz
push
push
sub
cmp
dec
sub
sub
jmp
fs
jmp
out
cs
movb
jge
dec
xor
jmp
and
fyl2x
pop
sbb
adc
jecxz
jmp
je
add
ret
ja
xor
xchg
adc
in
pushf
xchg
xchg
data16
iret
pop
jge
or
or
inc
addl
mov
add
xlat
lods
clc
je
aaa
loopne
call
jb
std
cld
iret
scas
cwtl
sahf
cmpsb
add
popf
sub
mov
cs
lcall
mov
sub
mov
mov
imul
pop
test
mov
fcompl
std
ret
out
inc
sub
notl
insl
fstps
dec
movsb
adc
mov
mov
sub
jb
lods
mov
pop
sub
lea
sbb
negb
shrb
mov
hlt
aam
and
mov
sub
push
jns
xchg
cltd
imul
cmp
inc
ret
ljmp
loope
pop
jae
stos
leave
pusha
add
xchg
fucomip
push
push
shlb
ss
and
cltd
pop
jno
test
mov
addl
imul
mov
sbb
fldt
fwait
sbb
cmp
push
mov
add
push
sbb
loope
pushf
xor
add
aad
xlat
xor
xchg
mov
mov
iret
push
mov
sub
fiadds
dec
jp
stos
inc
jge
insb
or
push
orl
mov
pop
mov
adc
fstpl
movsb
bound
shrl
pop
mov
xorl
cmc
sub
cmp
addr16
mov
ret
out
sbb
add
andb
in
pop
scas
pusha
aad
or
fldl
mov
jmp
xchg
fcoms
push
or
pop
popf
xorl
push
iret
xor
stos
and
and
dec
xchg
imul
inc
push
adc
inc
iret
loope
imul
pop
xor
inc
sbb
push
arpl
xchg
cmpsl
or
ljmp
fiaddl
imul
jmp
xor
fmulp
or
push
jmp
rclb
inc
repnz
movsb
hlt
repnz
out
push
nop
add
or
sbb
add
lahf
cmp
or
test
int3
sbb
clc
jno
jecxz
sysexit
add
pop
scas
cmc
inc
and
loopne
movsb
and
inc
mov
cmp
int3
push
enter
daa
int
cltd
cmp
pop
scas
jno
add
jl
mov
cmp
pop
ds
xchg
movsl
adc
mov
lahf
add
push
inc
test
movsb
push
adc
ficompl
arpl
lea
pop
jg
inc
push
scas
pop
loope
or
sub
mov
lods
outsb
out
fstl
mov
or
dec
xor
sti
cli
or
jp
and
aas
or
jno
sbb
jno
xchg
test
mov
bound
into
loop
jne
lret
sbb
cwtl
rcrl
pop
mov
imull
fnsave
nop
and
leave
adc
mov
xchg
cmp
or
pop
imull
popf
lret
jnp
enter
push
or
sarb
mov
add
cltd
outsl
dec
mov
fldcw
stc
leave
pop
scas
fs
push
sti
rep
data16
push
add
add
out
pop
mov
or
mov
cmp
inc
add
pop
jo
xchg
outsb
jne
xor
popa
pop
insl
jnp
adc
in
jns
cmpsl
test
adc
push
sbb
jne
ret
xchg
jmp
jno
pop
xor
cmp
das
mov
mov
iret
push
jmp
ja
cs
loope
aad
lret
push
push
dec
dec
xchg
ja
xor
mov
sub
je
sbb
test
push
insl
out
lea
mov
mov
mov
adc
dec
ficompl
jecxz
pop
and
inc
fwait
mov
push
aas
mov
stc
outsb
dec
dec
inc
jg
cwtl
pushl
xor
sub
std
mov
test
jle
popf
mov
mov
enter
ja
aam
xchg
mov
inc
xor
sub
das
in
pop
mov
pop
cmp
addr16
jb
jle
push
insl
rol
dec
lahf
adc
cmpsl
int3
mov
mov
cld
popf
imul
jl
and
and
adc
dec
sub
xchg
lea
cmp
lods
ffree
call
xor
push
push
popaw
jmp
jle
stos
mov
mov
xchg
mov
int
dec
inc
mov
pop
fistl
xchg
lods
fildl
push
mov
dec
movsl
dec
xor
hlt
cmpsl
adc
push
lret
dec
add
fwait
dec
jnp
push
test
icebp
pop
add
aam
xor
push
xchg
jmp
inc
mov
int3
loopne
insl
je
pop
call
inc
sub
insl
sbb
mov
mov
lock
jne
and
jo
sub
bound
cmp
jns
add
in
cmpsb
rolb
mov
sub
jle
inc
addr16
pop
jp
pop
pop
mov
push
xor
dec
mov
mov
movsl
jae
in
sbb
xor
xchg
xor
xchg
pop
loopne
jae
mov
int
jne
stos
imul
cmpsl
mov
call
and
test
insb
test
imul
push
pop
cld
imul
inc
inc
dec
ret
arpl
idivb
and
lret
and
or
xor
je
test
xchg
loop
popa
sbb
repnz
pop
xor
push
push
push
shrb
outsl
repnz
pop
leave
mov
div
cmp
or
dec
lods
idivl
push
sbb
call
add
mov
int3
jp
orb
mov
xor
out
xchg
scas
aam
mov
sub
cmp
mulb
mov
cmpsb
cmp
enter
daa
int3
loopne
cmp
push
pop
jno
popa
stc
jl
cld
scas
cmp
mov
mov
and
xor
push
stos
pop
stos
test
outsl
out
jns
icebp
jge
popf
loopne
pop
aam
sbb
push
in
mov
pop
jmp
sub
mov
sub
std
aad
lret
rcrb
test
andb
sbb
mov
add
je
and
dec
das
push
je
jnp
fadd
inc
sub
faddl
xor
dec
lcall
cmp
and
lret
sbb
pop
sahf
jp
test
adcb
lahf
jg
scas
xor
pop
divb
mov
cmp
adc
pop
mov
mov
push
ret
fadd
or
imull
mov
rcrl
mov
xchg
or
cmp
into
sahf
imul
sahf
repnz
sub
scas
loop
push
cmp
sbbb
add
mov
push
mov
imul
xor
mov
jmp
cmp
xor
push
loopne
dec
sbb
das
cmp
imul
adc
outsl
sbb
lds
add
lods
mov
sub
mov
in
cmp
jmp
lret
xchg
cs
out
inc
aad
inc
pop
nop
icebp
cmp
dec
lock
das
inc
inc
cld
hlt
fstps
lods
les
cwtl
mov
inc
gs
push
mov
sarb
xor
adc
adc
jl
fcmovne
mov
inc
and
inc
aas
pop
and
jb
jne
dec
lds
je
sbb
sub
imulb
dec
std
dec
xor
or
sbb
and
cmp
lret
push
icebp
dec
mov
sub
das
les
add
into
in
and
stc
dec
ret
or
add
or
dec
lcall
mov
pusha
fisttpll
mov
lahf
cmp
xor
xor
vunpcklps
sub
aam
pop
lock
adc
fucom
dec
stos
clc
mov
mov
mov
dec
popa
add
xor
stos
cmpsl
es
out
jnp
jge
insl
mov
push
mov
mov
add
cltd
int
repz
mov
mov
jne
mov
test
adcl
sbb
mov
ret
fnstsw
js
add
dec
pop
dec
add
mov
dec
shlb
or
xor
mov
lods
mov
cmp
mov
mov
xor
dec
pusha
cmp
inc
or
ss
mov
lcall
lret
sbb
mov
mov
in
adc
cmp
mov
imul
jns
inc
sub
pop
lea
mov
ljmp
loope
jle
mov
in
cmp
or
fistps
imul
cltd
cmp
jle
lods
xor
nop
mov
sti
mov
dec
call
cmp
out
push
insb
lock
jae
sbbl
push
lahf
stos
imul
cmp
iret
lahf
inc
push
ret
or
jg
inc
jg,pn
arpl
dec
pop
inc
push
jbe
xchg
dec
push
repz
jle
mov
xchg
cmp
outsl
pop
sub
adc
dec
lds
aad
fistpll
repnz
je
mov
pop
jbe
cmp
sbb
loopne
sbb
cltd
in
mov
cmpsb
int3
outsb
insl
dec
or
fisttpl
test
test
inc
and
andb
scas
jle
sub
scas
movsb
aaa
inc
mov
aad
lcall
daa
lret
or
jbe
dec
loop
jl
inc
mov
xor
movsl
push
jns
and
add
lahf
inc
mov
and
negl
push
cmp
push
xor
xor
pusha
sbb
pop
sti
dec
fnstsw
mov
pop
std
jecxz
push
shl
or
pop
sub
add
shlb
pop
xlat
add
sbb
pop
add
ret
out
mov
imul
lahf
or
sbbb
hlt
or
lret
das
insb
sbb
pushf
mov
subb
in
mov
push
mov
cwtl
adc
cmp
cmp
subb
sbb
shl
sbb
jnp
into
subl
xor
int
outsl
or
loop
jb
stc
aaa
rcll
cmp
sbb
jmpw
lods
je
imul
jb
xchg
xor
cwtl
cmpb
out
mov
lock
loopne
jecxz
pop
stos
out
adc
xchg
ficoms
fstpl
jno
popa
sbb
add
loopne
in
cmp
sar
mov
movsl
cmp
es
ret
nop
int3
cmp
dec
les
inc
pop
mov
xor
xor
cli
jecxz
mov
lea
call
mov
popa
pop
roll
in
rcrl
testl
inc
aam
test
negl
push
and
dec
cmp
push
je
mov
rcl
lcall
icebp
mov
clc
mov
enter
inc
push
cmpl
lret
shlb
mov
ja
lock
xlat
adc
mov
lret
test
and
out
ret
pushf
xorb
mov
adc
cmpsl
lret
mov
aaa
jo
cld
repz
sbb
ret
and
pop
aam
pop
push
jecxz
out
sub
mov
mov
jmp
cltd
fisttpll
jl
out
orb
cld
push
dec
popa
pop
cwtl
aaa
lods
pusha
adc
stos
xchg
das
jo
faddp
adcb
jge
sysret
inc
inc
add
inc
cltd
add
xor
push
test
push
xchg
add
fldcw
repnz
into
int
rcrl
adc
iret
fwait
cmpsl
icebp
ja
out
push
mov
add
ret
pop
xor
aad
cmp
std
xchg
mov
mov
and
mov
pop
push
push
ja
mov
roll
pop
rorl
add
mov
dec
repz
push
jne
mov
out
jp
or
jns
push
imul
xlat
pusha
andl
out
push
sub
je
mull
mov
mov
lea
jnp
sahf
scas
push
jnp
not
jle
jmp
sbb
cmpsb
xchg
icebp
fistpll
movsl
popa
xchg
jl
shr
nop
pop
jbe
bnd
jae
sbb
push
push
mov
popf
clc
sub
sbb
or
stos
jns
inc
and
jo
insb
pop
adc
cwtl
pop
scas
xlat
cs
push
out
add
cmp
iret
incb
ret
push
pop
mov
popa
inc
cmp
push
arpl
adc
inc
fsts
inc
push
jb
ficompl
es
xchg
nop
push
sub
xchg
mul
fidivs
repz
shl
into
mov
jle
sub
ja
mov
shll
sub
in
fs
cmp
jge
pop
mov
sub
popa
mov
add
add
push
mov
dec
js
adc
mov
pushf
jo
setg
dec
xor
loope
fsubs
adc
in
orl
xchg
daa
lret
cmp
xor
xchg
jl
pop
enter
sub
push
int
movsl
and
call
mov
push
add
test
add
das
or
and
arpl
pop
push
js
test
cmp
cwtl
push
fnstenv
sub
sbb
sub
cld
imul
inc
cli
ss
orb
ss
fsubl
cmp
push
jp
adc
cmpsb
pop
mov
sbb
pop
xor
cmpsl
or
fdivl
pop
sbb
dec
push
test
lahf
cwtl
orb
jg
mov
sub
xchg
adc
jle
cmp
cmp
imull
pop
lock
fimuls
mov
xchg
add
xor
outsl
ljmp
stc
out
mov
test
push
data16
mov
cmp
cli
movsl
imul
mov
cli
sti
insb
mov
cld
lahf
ss
xchg
jae
fwait
pop
lret
adc
jae
mov
arpl
loop
je
xor
ja
mov
mov
cmp
xlat
sub
hlt
sub
add
mov
gs
adc
pop
jmp
mov
add
or
nop
cmpsl
dec
fisttps
enter
js
fxch
xorb
xor
pop
xchg
mov
sbb
xchg
pop
je
xor
cmp
jne
inc
mov
push
pop
or
push
inc
out
js
aas
xchg
cltd
xchg
jb
pop
pop
dec
mov
mov
push
shll
fcomip
hlt
cmpsl
cli
std
cwtl
sub
cwtl
mov
sub
adc
dec
inc
ret
das
push
ja
jge
mov
lock
int3
bound
adc
mov
cmp
dec
and
sub
ret
sub
add
mov
xchg
cmpsl
leave
test
mov
push
daa
in
cld
push
je
mov
in
push
and
mov
jnp
sarb
inc
xchg
aam
out
mov
push
movsl
push
test
fnsave
paddusw
outsl
or
lods
lret
cwtl
sub
inc
mov
xchg
sti
push
fists
adc
pcmpgtd
ja
xchg
scas
cmc
cltd
cmp
or
mov
jnp
sbb
test
or
xchg
ja
xorl
pop
dec
cmp
fwait
rorb
add
mov
inc
xor
insb
mov
xchg
fadds
dec
mov
sbb
nop
dec
inc
cltd
incl
mov
or
cmpsb
adc
leave
jl
int3
push
mov
out
pop
lahf
shll
pusha
jns
outsb
dec
in
out
ret
pcmpeqb
ret
pop
pop
sub
outsl
add
addr16
sub
mov
ljmp
shrb
push
adc
pusha
inc
enter
jecxz
xchg
dec
fiaddl
jmp
mov
dec
adcb
cmp
popf
pop
pushw
stc
je
lret
lods
cmpsb
stos
in
test
and
xor
mov
scas
cmp
pop
push
sub
pop
scas
iret
pop
dec
xchg
ret
jnp
jmp
insl
mov
inc
fdivl
or
dec
push
inc
icebp
push
fcmovu
int
xchg
out
rcrb
dec
ds
ret
ficomps
push
lds
sti
sar
ds
rorl
out
clc
mov
push
adc
push
mov
jge
negb
call
jbe
or
pop
add
es
int3
cmp
orl
int3
sub
clc
or
xchg
loope
pop
cmp
leave
dec
inc
repz
jge
push
mov
cmp
lods
inc
mov
jl
inc
jge
shlb
ja,pt
pop
movsl
sub
pop
and
loopne
lahf
sbbl
lret
mov
sub
out
mov
dec
mov
stos
pop
jnp
cmp
movsb
push
loope
mov
xchg
sub
test
jmp
loopne
sub
daa
xchg
push
jle
fwait
hlt
loope
xlat
or
and
jp
int
cld
imulb
xchg
sub
pop
mov
mov
popf
stos
mov
sbb
or
sahf
arpl
jecxz
jne
popf
andb
jg
mov
pop
mov
mov
dec
mov
xchg
mov
mov
out
fdiv
jmp
mov
shll
mov
out
or
inc
pop
into
inc
mov
mov
insb
outsl
leave
adc
and
cli
mov
push
jns
add
ljmp
inc
pop
lea
test
nop
cli
fsubs
xor
pop
xchg
cmp
shlb
sbb
lahf
pop
inc
add
and
loopne
dec
pop
jmp
jns
imul
cmp
xchg
imull
loop
mov
fdivrl
jbe
adc
mov
sub
inc
jns
jnp
mov
fcomps
cs
shl
aad
pop
out
nop
xorb
or
test
flds
ffree
dec
jge
jecxz
popf
imul
xor
mov
xchg
pop
jmp
pop
daa
in
adc
adc
fistpl
in
pop
lods
inc
or
jmp
sarb
xor
push
cs
sub
jle
les
shll
add
aaa
push
cmp
jnp
cwtl
inc
ret
sbb
jp
jg
pop
sub
sub
jmp
mov
aas
mov
aas
pop
lock
aam
das
popa
ds
mov
xchg
mov
dec
xchg
insl
pop
inc
sbb
cmpsl
enter
inc
sub
icebp
in
jo
dec
lret
cmpsl
test
and
push
ret
lahf
pop
xchg
cld
sub
lea
sbb
mov
addr16
fstpl
clc
fs
xor
loop
pop
popa
inc
pop
sbb
lea
xchg
inc
push
inc
push
sbb
and
movsl
pop
arpl
sub
mov
adc
lods
xchg
cmp
inc
push
test
stos
clc
xchg
lods
dec
sbb
add
enter
testl
push
xor
fwait
sub
cld
ret
lock
or
sti
sub
sub
mov
inc
push
mov
aam
mov
lret
dec
cmp
mov
sub
testb
dec
mov
xchg
test
cmp
int3
bound
cltd
jns
das
cmpsb
in
pop
movb
sub
or
aaa
sub
repnz
pop
mov
into
ljmp
outsb
out
jle
xor
pusha
fmull
mov
js
test
jle
imul
daa
push
fnstenv
inc
popf
inc
sub
mov
or
test
and
leave
jmp
xor
scas
popf
add
adc
mov
push
cmpsl
ret
cmpsl
pop
and
pop
inc
dec
bound
arpl
insb
dec
inc
inc
or
push
shll
jo
inc
fiaddl
push
mov
adc
icebp
fdivrp
int3
or
cli
inc
jg
pop
cmp
add
push
repnz
sbb
gs
hlt
imul
pop
lcall
mov
cmovs
push
js
add
cmp
es
dec
push
aam
push
push
iret
inc
xor
push
and
scas
push
xor
and
cmp
inc
movsb
fmuls
cmc
inc
cmpb
inc
jbe
in
dec
imulb
daa
enter
fistpll
sub
lea
jg
scas
ds
and
sahf
je
idivl
test
fwait
stos
jg
sub
xchg
jo
sub
aaa
arpl
mov
and
loope
inc
mov
sub
outsb
lret
out
push
rolb
pushf
xchg
hlt
cltd
pushf
subb
add
movsb
mov
push
xorb
int
addl
lcall
mov
int3
and
sbb
mov
cld
mov
xchg
jg
movsl
xchg
mov
ret
jecxz
lfs
enter
add
lret
cmp
mov
add
sub
aam
mov
inc
push
or
push
mov
jbe
adc
or
nop
outsl
test
cwtl
loop
add
stc
pop
or
sti
add
adc
data16
and
out
cmp
cmpsl
aaa
push
xor
xlat
sti
lret
incb
mov
loopne
sbb
pop
or
jb
or
lret
imul
sahf
repz
xchg
mov
fs
sbb
sub
sub
mov
out
lret
ret
dec
mov
aad
and
nop
pop
lods
mov
insb
fldl
fnstcw
imul
push
sbb
jecxz
lea
lea
call
das
ret
fiaddl
adc
cmp
inc
pop
fisttpl
xchg
fiadds
jne
inc
and
push
mov
dec
mov
aad
rol
andl
jp
push
std
out
fcomps
cmp
jbe
dec
mov
addl
cmp
mov
je
dec
mov
lret
stos
mov
stos
sti
out
push
test
ret
dec
push
stos
es
sub
and
dec
xchg
or
mov
hlt
insl
mov
sub
lods
and
lock
imul
xorl
aam
rcrb
or
push
or
fldl
jecxz
xchg
fxch
mov
push
pop
enter
fldt
loop
out
pop
ja
xchg
mov
jne
hlt
jge
mov
xor
mov
jbe
test
mov
xchg
mov
leave
xchg
jecxz
out
jg
pop
xchg
push
mov
loope
push
fdivs
das
add
pop
lcall
xor
test
inc
lods
push
xchg
jbe
sbb
mov
int3
into
ja
or
pop
lret
and
outsw
mov
add
dec
pushf
leave
das
jne
pop
in
mov
sub
pop
ja
bound
aam
jns
xchg
in
mov
pop
stos
out
push
pop
or
and
jp
fdivs
pop
push
dec
jnp
rclb
push
inc
fwait
in
movsl
adc
imul
xchg
cmc
mov
sub
outsl
lods
push
pushf
movsl
mov
into
pop
movsb
push
dec
or
and
pop
insb
pushf
mov
cmp
add
inc
push
mov
rcrb
ret
or
or
inc
pop
stos
cli
arpl
pushl
or
int3
in
int3
inc
out
test
fidivl
aaa
jle
xchg
adcl
pop
and
xor
mov
orb
mov
jecxz
leave
fmull
call
jbe
notl
mov
popf
jns
sbb
or
jl
or
jb
dec
lds
and
scas
inc
leave
scas
das
mov
jmp
push
xchg
push
inc
adc
in
ss
icebp
enter
daa
jmp
divb
dec
imul
cmp
xlat
fistpll
mov
dec
and
or
mov
mov
roll
push
data16
xor
mov
insb
xchg
lock
xchg
test
cmp
add
push
push
std
loope
icebp
jo
xlat
ljmp
cmp
pop
shl
fs
push
sub
add
fistps
inc
in
ss
inc
mov
sub
push
int
ljmp
scas
shlb
push
dec
repnz
ja
clc
sbb
sahf
test
aaa
mov
jg
lods
es
xor
mov
pusha
mov
dec
push
adc
xchg
clc
cmp
insb
mov
imul
divl
movsl
mov
xor
and
cmc
cmp
add
xchg
add
stc
adc
push
data16
or
lods
adc
pop
mov
sti
imul
push
cmc
cli
ds
xor
insb
cmp
popl
sti
jns
and
gs
andl
daa
lock
jbe
imul
add
dec
movsb
dec
xchg
jge
jne
add
cmp
call
dec
int3
mov
push
jp
jmp
ljmp
ficoms
push
dec
lret
in
sub
cmp
fnstenv
std
les
arpl
aad
aad
inc
call
scas
jo
pop
lea
adc
inc
pushf
inc
inc
sbb
repnz
inc
lds
inc
jb
aas
jae
shll
mov
je
xchg
lret
add
idivb
enter
fidivl
mov
sub
mov
fldl
pop
inc
sub
jl
stc
mov
mov
in
pop
and
pop
sbb
mov
popa
ret
fcomp
lods
mov
dec
subl
arpl
xchg
and
lahf
repnz
sahf
mov
mov
iret
or
shlb
and
or
dec
sub
mov
hlt
mov
sub
ljmp
adc
sti
sub
rolb
ficoms
push
mov
add
push
das
cltd
loopne
mov
inc
dec
xchg
sbb
out
dec
sub
lcall
pop
dec
jmp
hlt
push
jnp
add
daa
xchg
cmp
hlt
xor
add
xor
sbb
mov
cmp
mov
dec
mov
dec
pop
imul
mov
xor
jne
push
add
xchg
pusha
add
bound
pushf
jnp
sub
jno
pushf
insb
pushf
out
sbb
sub
pusha
faddl
jp
sbb
mov
add
mov
shl
xchg
inc
dec
in
mov
cwtl
fbstp
push
push
jmp
push
repz
imul
popf
xchg
outsb
mov
mov
adc
pop
mov
insb
pop
mov
imul
shrl
hlt
in
cmpsb
sub
iret
jp
imul
es
mov
and
in
push
aad
inc
in
rorb
pushf
into
inc
outsb
sbb
movsb
rclb
cwtl
sbb
dec
fdivrs
lds
and
mov
lret
leave
push
lret
leave
hlt
call
inc
push
mov
enter
ljmp
fmul
push
or
inc
add
dec
xor
orb
mov
xor
or
sahf
and
enter
subl
repnz
cmpsb
dec
and
in
sbb
ret
stos
sub
inc
rorl
jno
andb
sub
jb
inc
aaa
mov
lahf
fidivs
or
xor
inc
das
adc
pop
mov
and
cmp
fsubrs
aas
arpl
jle
imul
jl
dec
xor
outsb
pushf
imul
mov
mov
push
sbb
add
xor
and
cmp
int3
int
cmp
pop
mov
outsb
push
mov
xchg
or
sahf
dec
xchg
ljmp
add
jg
mov
push
mov
dec
jmp
adc
nop
ss
jg
cmp
daa
cld
into
mull
push
pop
shr
add
or
and
lock
pop
xor
inc
jnp
data16
stc
lret
fs
mov
add
sub
data16
xor
out
mull
cli
jno
xchg
push
gs
cmp
sub
sti
sub
pop
decb
dec
xor
fcomip
sub
inc
mov
xchg
imul
sub
push
shl
inc
and
cmp
xlat
daa
jnp
sub
sbb
mov
mov
mov
aad
imul
add
test
push
sbb
popf
cmp
lea
xor
add
sahf
sub
pop
cltd
adc
push
data16
nop
sbb
xchg
sbb
aas
inc
pop
in
aas
adc
dec
movsl
test
inc
testb
sbb
xor
pop
cwtl
jbe
push
mov
push
or
xor
or
pop
lret
jmp
testb
fcomps
lock
jnp
nop
je
arpl
mov
xor
cmp
fildl
maskmovq
imull
adc
adc
fmulp
cwtl
icebp
push
nop
cld
lret
mov
jno
mov
mov
out
xchg
ret
rolb
jg
sub
dec
aam
ljmp
xchg
jle
fst
inc
xor
adc
insb
ljmp
sub
stos
inc
fcomps
int
loope
pop
jo
push
stos
aaa
adc
loop
dec
add
dec
out
cltd
pop
inc
sub
mov
dec
jbe
xchg
test
or
sbb
xor
int
or
mov
xchg
in
push
push
mov
add
inc
inc
loop
fstps
xor
and
xor
stos
jmp
mov
popa
mov
aaa
bound
push
aaa
ja
mov
dec
adc
dec
inc
xor
jbe
mov
cltd
mov
mov
test
pop
bound
pop
aaa
jns
dec
fsub
mov
js
sub
push
sub
pop
dec
or
pop
cmp
test
jne
adc
jle
aas
pusha
in
xor
lods
pop
rcr
aad
or
arpl
xchg
jmp
cmpsl
adc
and
movsl
popf
mov
xchg
stos
mov
insb
jb
jle
sbb
push
icebp
adc
sti
ret
xor
inc
jo
xchg
arpl
xchg
push
or
ret
inc
in
or
dec
xchg
inc
inc
jnp
inc
pop
xchg
pop
jle
fsubp
pop
pusha
lds
shlb
loope
out
sbb
scas
jge
dec
adc
or
and
push
iret
jge
pop
mov
aaa
xchg
icebp
sbb
add
or
int3
out
call
push
sti
popl
xor
fs
cmpsl
scas
in
mov
sub
sahf
mov
jns
lcall
daa
imul
jns
aas
daa
vpshuflw
imul
pusha
cmp
sarl
add
dec
mov
lahf
std
mov
test
cld
push
stos
repnz
mov
mulb
pop
ja
mov
loope
mov
sub
cltd
lret
lock
outsb
jmp
adc
rclb
push
clc
and
test
mov
dec
add
jp
and
scas
push
mov
lock
imul
lods
divl
or
stc
enter
mov
ret
nop
