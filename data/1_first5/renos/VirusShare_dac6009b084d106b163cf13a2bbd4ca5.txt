stc
std
xchg
cld
jmp
nop
mov
mov
sti
jnp
ljmp
adc
lods
mov
mov
fistps
mov
mov
jb
sub
sub
jb
pop
cs
xor
cs
dec
movsl
cmp
cmp
inc
in
test
dec
push
sub
push
call
push
in
pop
lock
hlt
pusha
clc
fs
lret
cmpsl
jb
push
push
sub
xchg
add
repz
in
mov
mov
sbb
jb
mov
sub
pop
cs
sub
xor
xchg
lret
in
xor
cmp
test
lods
aaa
out
jb
mov
mov
mov
xchg
dec
rclb
xchg
lret
in
enter
shlb
pop
cs
aam
fsubrs
xchg
lret
in
fsubrl
in
mov
js
cs
lret
in
jl
cmp
in
mov
add
xchg
lret
lret
or
adc
in
mov
pushf
pop
cs
lret
and
sub
test
lods
xor
lahf
out
shll
hlt
push
add
push
out
stos
push
adc
outsl
cmp
repnz
inc
ret
lahf
mov
mov
repz
jge
push
dec
sub
ja
aaa
les
mov
pop
shrb
mov
sub
add
jg
fcmovnu
jbe
push
call
mov
adc
push
mul
mov
das
adc
mov
sahf
adc
pop
sub
les
add
sti
jge
mov
mov
pop
pop
push
pop
test
lods
mov
cmpsl
cmp
and
loop
inc
jmp
or
ficomps
idivl
mov
add
push
push
push
sbb
cltd
or
dec
loop
cld
popa
lods
cmp
pop
and
add
test
lock
mov
mov
movsb
pop
adc
mov
rcr
fnstcw
or
mov
push
push
inc
mov
dec
jecxz
cmpw
jne
mov
roll
add
insb
cmpb
cmp
add
data16
or
xlat
or
jmp
inc
push
mov
mov
out
sbb
push
fwait
xor
adc
mov
mov
push
je
adc
testl
and
fisttpl
jne
sbb
add
femms
and
inc
loope
mov
je
xor
or
pop
dec
ljmp
or
push
push
mov
sarl
push
pushf
out
mov
or
loop
scas
not
dec
fmuls
idiv
mov
xchg
or
pop
int3
push
push
pop
adcl
mov
mov
int3
adc
rcl
or
enter
clc
jg
mov
cmp
je
push
jo
loopne
push
pusha
stos
pop
jg
pop
addr16
js
mov
ret
and
daa
fwait
addr16
out
mov
jg
sbb
fidivrl
sbb
or
xor
or
ds
jg
out
call
adc
or
nop
ret
neg
popa
aas
imulb
stc
push
mov
arpl
movsl
out
rorl
nop
add
jno
push
mov
sbb
pop
in
jle
clc
mull
sub
xchg
and
cmp
imul
and
lock
arpl
mov
hlt
xor
inc
and
add
ret
push
pop
imul
loop
ljmp
sbb
hlt
lret
dec
fstps
and
jns
jg
clc
adc
and
mov
dec
cmp
mov
lods
enter
jbe
mov
loop
lret
sbb
cmc
push
gs
sub
add
jl
mov
lar
testl
sbb
sub
dec
sbbl
sub
out
test
add
mov
cmpsl
or
idivl
add
setne
shr
mov
fstp
jno
mov
repnz
pop
pop
sbb
shl
cmpl
or
pop
or
lods
xor
lret
arpl
sbb
pusha
cld
and
mov
sbb
add
xor
icebp
mov
mull
data16
shl
call
mov
out
sbb
repz
mov
adc
mov
pushf
pop
ret
in
cs
mov
push
or
pxor
ja
add
push
aas
or
jbe
push
adc
cmp
mov
pop
dec
stc
testl
insb
sbb
adc
pop
fdivrl
xor
and
inc
push
push
bound
jae
inc
movsl
or
neg
add
mov
xchg
ret
mov
cmpsb
and
shll
rcl
mov
outsb
add
scas
pop
das
or
loop
out
ret
fadds
hlt
or
in
mov
rorl
cmc
adcl
in
xor
popa
or
imul
and
sub
je
cwtl
clc
push
pop
mov
adc
inc
pop
int3
jae
push
cwtl
jae
and
add
push
push
jns
sar
inc
inc
into
mov
add
cmp
xor
ss
add
insl
sub
dec
cmp
scas
push
mov
dec
rep
jmp
push
pop
in
or
add
ds
xor
adc
pop
loope
mov
push
add
jge
push
cmc
aas
and
dec
pop
jl
out
daa
es
xrelease
movsl
cmp
cmp
stc
sbb
dec
sbb
movzbl
call
ss
lret
mov
mov
mov
cmp
enter
lcall
mov
inc
add
push
outsl
cli
adc
lret
stc
mov
cld
jmp
leave
add
daa
add
pop
mov
mov
xor
push
or
rcll
and
imul
cmp
jno
jae
inc
xor
out
loope
pop
movsl
jo
adcb
inc
inc
stos
mov
adcl
mov
jbe
clc
or
dec
and
dec
or
xor
or
mov
and
pop
inc
add
adc
xor
and
add
jns
fs
add
pop
jle
push
and
mov
in
outsb
or
repnz
jo
adc
clc
or
jge
mov
add
js
mov
or
ja
enter
xor
shl
mov
jns
shrl
stos
pop
and
int3
adc
mov
shll
or
sbb
decl
xor
into
pop
add
xor
jmp
sbb
mov
mov
sahf
int
pop
pop
rdpmc
fcmovnbe
test
mov
xor
lock
mov
popf
push
inc
call
push
add
and
xlat
xor
daa
or
push
sub
jne
lret
and
mov
mov
add
sarb
mov
gs
fwait
sub
sub
inc
iret
inc
imul
or
and
rol
loopne
push
xchg
fnstenv
mov
js
gs
mov
mov
mov
mov
cmp
aaa
repnz
dec
ret
and
inc
mov
jle
jp
add
stc
stc
or
sub
xchg
adc
rcrb
push
jge
mov
inc
and
mov
or
fdivr
inc
idivb
pop
pop
add
push
cmp
xor
ffreep
xchg
addr16
sub
out
out
ljmp
mov
dec
adc
insb
repnz
inc
shll
push
add
stos
mov
pusha
roll
rep
in
adc
dec
not
sbb
stos
mov
add
jg
addr16
sbb
fisttpl
xchg
movb
cld
pop
jno
fisttpl
das
lock
lds
addl
lret
in
sub
pusha
mov
pop
push
lea
push
xor
pop
insb
or
add
fstpt
scas
mov
shrl
sbb
push
add
jns
mov
test
push
rcrl
ja
adc
fwait
or
push
loope
mov
cmp
clc
test
add
sbbb
and
xchg
mov
mov
pop
dec
push
icebp
or
jno
loopne
mov
sub
in
jg
lock
les
sub
add
push
push
push
lock
test
jecxz
jg
mov
inc
jns
push
sub
mov
and
lea
or
dec
mov
dec
jbe
arpl
loopne
sbb
push
inc
inc
popa
mov
addr16
sub
movsl
add
xor
xor
std
sti
xlat
fwait
push
mov
mov
dec
jbe
sub
or
pop
add
bound
mov
inc
pop
jbe
lret
xor
inc
xor
cld
movsb
xor
repnz
out
and
push
fnsave
cmp
cmovb
push
loopne
sbb
cmp
dec
dec
movl
adc
sti
test
aaa
adc
sub
js
xchg
mov
sub
mov
add
fdivrs
inc
xor
jl
cmp
mov
call
popa
jl
cmp
jle
cmp
je
cmp
je
shrl
add
cmp
cmc
mov
or
dec
lods
lret
test
fnstcw
adc
icebp
in
push
add
nop
fisttpll
push
or
add
adc
cli
daa
pop
jnp
inc
cmp
add
lcall
fisttpll
imul
mov
add
out
sti
inc
dec
movsb
push
xchg
or
inc
or
cwtl
jmp
dec
adc
je
add
incb
mov
pop
xchg
frstor
mov
and
lea
out
movsb
or
scas
dec
int3
xchg
or
dec
daa
fimuls
dec
aaa
mov
jae
lods
add
sbb
inc
arpl
sbbl
adc
fwait
ret
fbstp
or
jno
pop
test
sub
inc
sti
je
or
dec
or
inc
add
fdiv
les
into
mov
fs
xchg
sti
adc
add
mov
rcrb
cmp
aam
mov
sbb
sbb
sbb
scas
shlb
stc
lea
sub
aam
cmp
add
mov
jo
inc
adc
pop
clc
xchg
out
or
xor
sbb
adcl
or
adcb
sub
sbb
add
movsb
dec
push
cmp
inc
divl
sub
dec
mov
xchg
jne
push
loope
mov
push
push
push
enter
dec
out
shrd
scas
push
jge
or
ret
cmpsl
cmp
sbb
cs
pusha
lea
fmuls
fwait
push
push
ja
loope
jg
mov
dec
sbb
stos
sbb
push
xor
je
pop
xor
lea
mov
stos
clc
add
loope
push
fistpll
sbb
dec
cmp
out
call
and
loopne
push
cwtl
mov
sar
mov
add
or
clc
out
adc
add
push
int3
cmc
insb
scas
cmp
hlt
dec
je
mov
cmp
je
cmp
push
xchg
sbb
add
push
or
mov
mov
cltd
adc
dec
test
mov
dec
or
push
push
cli
xor
push
pop
out
jnp
jmp
lretw
adc
lds
jecxz
lret
or
sbb
pop
test
adc
data16
adc
adc
imul
shl
pop
sub
in
mov
push
jge
packuswb
push
sub
int
outsl
cli
movsl
adc
les
loop
sarl
mov
addr16
ret
aaa
cs
aad
xlat
lahf
loope
mov
xor
sub
loope
mov
sub
cmp
xor
divl
rcrb
sub
jns
fdivl
sahf
sub
adc
mov
inc
into
movb
bswap
mov
call
sti
imul
mul
insb
fs
cs
dec
sub
jle
fs
lcall
inc
pop
test
ljmp
les
push
xchg
push
push
mov
push
cmp
inc
inc
pop
clc
jne
loope
mov
sbb
rorl
push
dec
push
or
out
negb
cmp
push
insb
add
sbb
mov
adcb
pop
test
roll
sbb
inc
dec
dec
imul
add
push
push
push
pop
push
pop
inc
mov
ret
lahf
in
mov
mov
push
rcrb
sbb
sbb
in
adc
sbb
mov
sbb
cmp
push
test
mov
add
mov
sbb
jo
lcall
add
push
sub
push
mov
call
inc
cld
push
pushf
jnp
js
ret
push
pusha
shll
fistl
mov
dec
pop
popf
sub
imul
loopne
adc
jl
sub
fsubs
xor
sarb
mov
push
hlt
lea
adc
sub
pop
cmp
out
nop
hlt
adc
jbe
inc
cwtl
sub
jne
js
mov
mov
add
and
and
xor
or
mov
lcall
movsb
mov
lods
mov
push
rcrl
rcrl
nop
pop
mov
mov
insb
mov
lock
pop
add
fld
add
lds
and
mov
std
lcall
push
pop
mov
imul
lods
push
std
adc
testb
cwtl
out
adc
xor
inc
add
into
fidivrl
loopne
add
mov
call
outsl
fildl
pop
pop
add
push
push
js
testb
dec
sbb
pusha
add
ret
repz
aad
sbb
inc
rorl
push
mov
hlt
add
or
dec
and
pop
xchg
xchg
dec
popa
xchg
push
arpl
mov
testb
sbb
int3
testb
repnz
sbbb
std
lods
icebp
adc
test
and
rorl
pop
fdivrl
jge
add
dec
hlt
or
adc
stos
int3
xlat
cmp
mov
shl
pop
loope
inc
cmp
xor
mul
xchg
mov
mov
adc
aad
add
push
les
ds
in
push
push
jns
iret
loope
cmp
imul
dec
cmp
mov
dec
dec
adc
cmp
repz
cs
out
cli
cmp
add
test
add
xchg
and
and
imul
mov
push
fdivrl
cmp
stos
decl
push
mov
inc
jge
jl
rcll
push
cltd
xchg
or
inc
push
movsl
insb
imul
stos
adc
xor
arpl
adc
sbb
dec
loopne
aad
jne
sub
sub
lcall
hlt
daa
mov
add
xor
push
sub
rcl
or
adc
sub
add
push
push
push
cmc
sarb
mov
test
adc
mov
in
add
cli
and
xchg
sub
and
mov
inc
push
cmp
mov
mov
push
xorb
sbb
call
inc
sti
mov
fisttpl
add
pop
mov
pop
cmp
xchg
sub
push
into
jp
add
rclb
js
bound
xor
pop
jno
pushl
and
mov
fadds
mov
push
and
cmp
aad
decl
inc
insb
sahf
bound
xchg
xor
adc
std
add
jle
add
sub
pop
in
sbb
lds
inc
sub
jo
roll
subl
sbb
int
insb
ffree
in
pop
pop
das
mov
ret
mov
ljmp
push
sarb
push
push
mov
sub
test
cwtl
ficoml
adc
invd
cltd
js
mov
nopl
push
pop
add
push
mov
inc
push
lret
lock
push
rclb
pop
sbb
cmp
mov
push
push
xor
add
adc
push
sub
inc
pushf
push
cmp
pop
add
mov
in
mov
cmp
push
adc
sub
rcrl
dec
and
or
cmp
loope
cmp
push
test
xor
lods
inc
cmp
and
mov
or
dec
and
mov
adc
and
jns
int
testl
nop
int
test
sub
adc
mov
gs
push
dec
and
mov
mov
imul
pop
dec
xchg
lahf
jbe
mov
push
mov
mov
jns
pop
push
xchg
popf
inc
aaa
scas
cmpsb
add
mov
leave
or
js
shl
sub
push
orb
std
add
pop
in
pop
out
out
lock
jae
jnp,pt
pop
outsl
aam
popf
out
lods
das
mov
lea
xor
popf
lcall
test
mov
roll
add
cwtl
push
test
or
xor
and
push
mov
fnsave
rol
pop
andl
pop
jnp
inc
loopne
out
push
mov
cmpsb
stos
popa
dec
loop
push
cmpsl
or
mov
sub
arpl
xor
mov
mov
push
shl
daa
adc
lock
sub
jmp
aad
push
jb
sub
stos
je
mov
push
shl
inc
sar
add
and
loope
or
dec
out
push
push
push
cmp
mov
aas
fucom
or
xor
sub
push
push
or
cmp
xchg
mov
mov
clc
adc
pop
xor
vpsubsb
repnz
dec
out
cmp
and
dec
mov
jle
lret
cmp
add
mov
mov
push
lcall
or
pushf
lea
mov
mov
push
mov
stos
rcrl
push
iret
addr16
lea
sub
jmp
push
pop
in
mov
push
mov
add
or
sub
mov
sbbl
pop
cmp
sbb
mov
jno
cwtl
fcmovne
enter
shl
adc
jmp
dec
mov
rorb
dec
mov
mov
and
loope
sub
add
cmc
test
sahf
jo
rcrl
xchg
add
add
cmp
pop
arpl
jno
cltd
pusha
fcomip
pusha
filds
in
lea
fistps
add
fsubl
jb
cmp
add
push
cmp
pusha
cwtl
leave
cmovno
pusha
adc
sbb
push
xor
and
add
add
imul
lods
fcoml
out
push
xor
loopne
xchg
inc
sub
in
mov
cmpsb
insl
or
pop
loopne
in
lods
add
mov
nop
add
repnz
and
mov
dec
adc
xor
mov
cmp
add
or
pusha
mov
mov
jae
mov
adcl
std
push
cmp
jne
es
imul
sti
inc
push
push
adc
jge
fidivs
cmp
jne
rcr
andb
divb
cmpb
jae
clc
loop
imul
pop
xor
outsb
lcall
bnd
ja
or
mov
mov
dec
jp
xor
test
jno
pop
int
or
inc
inc
dec
rorb
mov
pop
pop
dec
pop
or
pop
ds
jnp
pop
sbb
fucom
push
outsb
push
sub
add
std
add
leave
mov
push
and
add
nop
cmc
fsubs
daa
xor
inc
test
and
cld
cltd
das
out
pushf
fistpll
test
xor
mov
inc
mov
clc
or
or
push
push
push
inc
inc
lock
push
jl
sub
je
jne
pusha
aas
pop
loop
lcall
mov
mov
pop
and
xchg
inc
sbb
adc
cmp
mov
pop
sbb
xor
test
or
mov
push
daa
push
mov
mov
push
or
xlat
lea
inc
sbbl
sub
dec
test
mov
add
cmc
sar
adc
int3
and
inc
adc
sarl
call
mov
xlat
mov
lcall
push
or
sar
jg
mov
jb
data16
repz
je
sbb
sbb
jo
mov
mov
xor
push
mov
or
add
lcall
pop
pop
fbld
je
xchg
sub
stos
jno
mov
mov
ret
add
push
int
mov
jg
test
pop
loopne
or
shll
pop
loope
pop
mov
mov
lcall
cmp
lahf
out
enter
cltd
push
xchg
paddusb
popa
cmp
jge
mov
sar
test
jne
mov
push
or
mov
out
inc
mov
cwtl
fidivrs
sub
push
out
js
pusha
aam
xor
jo
test
and
fstpl
fwait
push
jmp
cmpsl
sbb
out
and
jg
rcrb
aaa
jae
jecxz
and
mov
push
push
enter
nop
rolb
mov
aas
enter
adc
inc
push
mov
jge
mov
ljmp
dec
mov
add
leave
or
cmp
scas
add
cmc
add
xchg
push
pop
fldcw
sub
push
mov
stos
je
sbb
inc
cmpl
sub
das
jge
sbb
jne
mov
push
push
or
repz
or
std
push
cltd
sub
ds
loope
sbb
fisttps
and
xchg
pusha
testl
xor
dec
inc
cmp
pop
mov
ss
cmovge
scas
inc
push
xor
sbb
add
xor
push
fcoml
pusha
xchg
repnz
es
mov
push
pop
negl
mov
and
pop
push
adc
pop
pop
cmp
xor
cmp
pop
loop
add
inc
mov
adc
cmc
imul
loopne
adc
push
clc
push
mov
mov
js
fiaddl
push
test
push
mov
fcomps
push
outsl
or
and
inc
xchg
cmpsb
call
sbb
adc
adc
add
sbb
daa
ret
cmp
lea
inc
jno
cmpsl
cmp
pop
mov
add
push
addr16
jmp
lea
mov
push
imul
sub
or
adc
mov
lods
fs
inc
or
repz
jg
lock
out
jne
cmp
jae
sti
dec
test
cmp
cmp
inc
lock
jbe
mov
add
outsb
nop
movb
pusha
adc
loopne
enter
in
xchg
push
push
mov
popa
aaa
loope
rorl
push
shll
cmp
jne
clc
add
adc
jg
aam
ret
and
ja
mov
imul
dec
lcall
out
cmp
mov
pop
shll
out
jg
push
call
not
add
dec
mov
pavgw
add
repz
pop
inc
clc
and
cld
imul
inc
cmpsl
pusha
pop
add
mov
out
and
repnz
movsl
cmpsl
lahf
mov
xor
pusha
es
jmp
dec
mov
aam
inc
or
ret
je
scas
jo
or
inc
sbb
dec
fsubr
sbb
add
jne
incl
add
or
add
cs
cmpl
iret
mov
mov
cmp
loopne
je
sub
push
inc
rcl
fcoml
xchg
push
and
test
into
dec
push
insl
push
jnp
jo
push
mov
movsl
sbb
rorl
push
lea
cmpsb
fcomip
add
faddl
pop
add
add
inc
sarb
test
mov
inc
cmp
jbe
cmp
leave
dec
insb
add
sbb
jecxz
popa
leave
pop
in
add
add
jle
add
test
push
leave
push
pushl
push
movsb
mov
test
mov
xchg
xchg
inc
and
add
push
cld
push
sub
mov
push
jne
push
outsb
lock
movsl
pop
push
mov
jge
cmp
pop
mov
adc
xchg
cmp
push
cmpsb
lahf
dec
sar
adc
mov
dec
jo
cmp
inc
popa
movsl
dec
and
es
mov
addb
insb
push
shrl
insl
es
dec
call
js
pop
js
add
lea
sub
lds
pop
repnz
mov
loop
int3
mov
nop
leave
incb
mov
scas
xchg
sub
popf
push
jp
pop
fcoml
mov
cmp
xor
enter
inc
sti
loopne
or
xchg
or
sub
call
pop
xor
adc
and
daa
cmp
loop
fwait
push
push
or
cmovl
cs
mov
or
rcl
mov
dec
push
movsl
lock
loopne
js
sub
push
sbb
sbbl
and
add
out
and
sbb
inc
pusha
lods
xchg
lea
add
inc
test
push
loope
and
mov
loope
loope
inc
mov
add
fmuls
je
or
clc
xor
stos
or
push
ret
adcl
test
add
push
and
sub
push
mov
push
loopne
repnz
and
mov
and
pop
jo
sub
dec
push
addr16
and
jae
insl
icebp
pop
push
pop
mov
xchg
inc
xor
pop
cmc
test
sbbb
push
or
daa
pop
iret
inc
adcl
adc
test
adc
mov
push
pop
push
adc
inc
fdivs
adc
jle
lea
dec
inc
enter
push
int3
adc
iret
push
adc
xchg
cld
pop
push
xchg
lahf
add
or
pop
jl
or
mov
xchg
jl
movsl
loope
and
sbb
imul
adc
sbb
or
loopne
or
or
int3
cmc
aad
fwait
adc
inc
xor
inc
ret
xchg
dec
pop
cltd
inc
nop
sbb
leave
loopne
pop
xor
adc
jmp
mov
icebp
mov
dec
add
cmp
or
in
daa
lods
and
mov
rcll
sbb
ffreep
les
mov
lds
sbbb
mov
sbb
das
in
adc
and
hlt
or
dec
and
call
inc
sbb
movsl
clc
mov
sub
ret
aaa
bound
loopne
dec
mov
cltd
inc
xor
inc
sub
or
push
cmp
pop
and
jno
jbe
addl
adc
enter
or
rclb
add
lahf
psadbw
pop
sub
ret
add
mov
sub
call
xor
or
cwtl
or
inc
jb
mov
mov
loope
daa
insb
adc
mov
push
jns
shrl
lea
pop
je
inc
mov
decl
xor
lea
and
cmp
xchg
int3
add
adc
lcall
test
mov
xor
leave
dec
cmp
icebp
sahf
jne
push
pop
add
inc
pop
cs
push
ret
orb
jle
or
or
dec
and
mov
das
xor
repz
mov
sub
cmp
push
stos
jb
dec
cld
xchg
dec
xchg
dec
mov
jecxz
pop
and
mov
js
jg
inc
ljmp
fidivrl
movl
sti
mov
leave
mov
je
ret
push
pop
or
test
jae
out
dec
or
push
call
daa
xchg
dec
or
push
popf
and
xlat
or
loope
lock
xlat
dec
cli
sbb
mov
arpl
ljmp
cld
mov
test
and
clc
cmp
add
aaa
mov
inc
cld
dec
repz
mov
and
lods
sbbl
push
add
das
insl
xor
adc
jp
popf
push
inc
aas
mov
adc
dec
in
cltd
sub
push
or
mov
cmpsb
fmull
int3
mov
dec
cmp
xchg
jl
and
insl
scas
fistpll
adc
test
sub
adc
aam
cmp
and
mov
inc
fidivl
ret
dec
shrl
add
mov
lock
pop
mov
int3
rcrb
mov
sbb
pushf
aam
lods
xchg
push
xchg
rcrl
add
bound
dec
jno
xchg
or
test
das
or
pop
xchg
scas
dec
icebp
inc
xor
jne
xor
lods
ficoml
loopne
scas
insl
je
out
jge
rcrb
push
cmp
je
or
add
pop
adc
loop
or
inc
xor
push
push
xor
repnz
pusha
and
jp
cmp
aad
and
mov
or
push
lcall
jmp
hlt
pop
mov
test
dec
inc
scas
sbb
fsubs
fcmovnu
mov
jl
add
test
aam
push
mov
xor
push
lock
fstps
call
inc
push
push
hlt
fs
adc
popf
fisubrl
mov
add
ret
cwtl
push
cwtl
mov
adc
mov
outsl
jmp
leave
subb
ljmp
inc
mov
sbb
xchg
or
push
cmc
and
and
add
push
push
fadd
and
lock
xor
adcl
insl
addb
pop
jo,pt
mov
and
push
jb
stc
mov
sbb
jo
mov
and
roll
fisubl
xor
sahf
mov
ds
xchg
mov
insl
and
mov
shrl
enter
add
jb
clc
or
fmull
cmpsb
jne
sbb
add
enter
or
add
sbb
inc
or
xchg
addl
mov
pop
leave
cmp
jb
push
movsl
dec
sahf
scas
inc
fwait
xchg
mov
push
or
pop
loopne
icebp
sahf
in
sbb
inc
pop
pop
add
mov
or
loope
leave
inc
ret
or
test
lock
inc
adc
fdivl
mov
insb
sub
mov
mov
inc
jle
fdivl
sar
movhps
jo
push
movsl
sub
xchg
cwtl
pop
lahf
cli
xchg
stos
and
sbb
pushf
inc
call
ds
xor
inc
or
subl
bnd
adc
cmpsl
adc
nop
mov
mov
lds
hlt
or
mov
outsl
mov
dec
test
out
jge
pop
test
dec
sub
in
xor
sahf
and
mov
lock
leave
cld
decl
push
fcoms
and
or
mov
insl
add
fdivrl
mov
jne
jge
ret
or
cmc
mov
movsb
lds
jecxz
cmp
in
insb
movsl
add
repnz
lret
test
or
xor
push
test
fisttpll
mov
push
pop
inc
subl
in
sbb
push
dec
adc
scas
insb
inc
lcall
jno
jl
stc
or
xlat
xor
filds
loope
cld
test
sar
jecxz
push
rorb
push
jmp
into
mov
test
test
xchg
dec
pop
mov
xchg
jae
jg
andb
jmp
add
daa
jo
and
and
push
repz
mov
cmp
jnp
or
xchg
xchg
je
pop
sahf
inc
insb
imul
jmp
fidivl
stos
dec
ret
test
push
mov
push
je
xor
sub
xchg
dec
jmp
bound
sbb
subl
push
or
repz
cmp
mov
scas
mov
mov
cmp
int
loope
add
cmp
lock
mov
jp
mov
adc
push
imul
es
in
sub
pop
pop
xchg
mov
push
xor
cmp
daa
je
sub
loopne
inc
movsb
mov
icebp
and
sub
faddl
popa
and
add
and
dec
xchg
lea
cmpsl
cmp
ret
xlat
push
cli
push
inc
icebp
ljmp
push
int
mov
or
sub
pop
adc
dec
mov
inc
sbb
lods
push
pop
adc
add
push
dec
pop
push
add
mov
sarb
push
or
xchg
jl
jns
loopne
lret
xor
sub
sub
mov
mov
inc
jnp
neg
push
push
sahf
test
xchg
or
mov
or
adcl
pop
sbb
mov
mov
mov
pop
inc
mov
loopne
scas
and
mov
inc
enter
add
adc
dec
mov
dec
mov
adc
int
shrl
mov
cmp
aam
sti
push
cmp
dec
push
add
add
int3
shlb
in
xchg
stos
nop
scas
outsb
test
je
in
es
shr
popa
adc
push
mov
sub
mov
test
add
rclb
jne
in
jo
loop
das
push
pusha
and
push
push
jl
and
mov
mov
test
rcrb
je
mov
fs
adc
pop
mov
data16
movsl
aam
repnz
mov
mov
inc
test
divb
push
stc
mov
add
rcrb
int3
push
imul
dec
mov
or
mov
add
mov
stos
inc
xchg
xor
inc
test
test
clc
fs
stos
pusha
into
sub
outsl
test
xor
test
adc
ret
push
movsl
pop
dec
mov
icebp
jmp
dec
mov
cmp
pop
sub
add
fdivrl
bound
pop
arpl
add
call
or
adc
mov
sub
ss
ljmp
cmp
mov
nop
pop
cmp
cmp
insb
mov
push
xorl
aad
nop
mov
popf
in
jecxz
cmpb
ret
jg
test
gs
pusha
sub
mov
and
xchg
or
je
mov
je
add
ljmp
inc
cmp
xor
mov
adc
ja
pop
ret
iret
orb
xchg
xor
adc
push
repnz
aas
mov
xor
sub
inc
aas
sub
mov
out
inc
lcall
inc
ret
push
dec
push
xorb
call
and
outsl
stos
mov
or
je
lea
push
or
push
ret
test
mov
or
push
adc
fwait
or
rorl
fs
pop
and
sub
dec
xchg
vsqrtss
fsubr
bound
aad
fcoml
xchg
xor
push
sbb
sbb
movsl
repnz
or
sbb
push
or
out
fs
pop
leave
sbb
add
out
inc
or
push
xor
data16
nop
adc
je
add
add
les
push
push
rcrl
sub
cmp
pop
ret
jg
add
cmpb
mov
fldlg2
pop
push
jmp
xor
push
and
mov
loopne
pop
xor
cmpw
jne
in
push
lcall
or
sbb
push
movsb
lods
xchg
pop
pop
popf
mov
test
adc
push
inc
outsb
pop
ret
je
jns
push
cs
xlat
ret
outsl
les
dec
pop
ja
mov
adc
pop
test
xor
ss
sbb
and
pop
pop
dec
ret
daa
inc
popf
mov
movsl
inc
lahf
sti
aad
lds
push
or
mov
mov
aas
pop
jl
push
imul
mov
jb
cli
add
add
mov
xlat
jae
into
adc
ja
pop
lret
imul
inc
lret
sarl
cli
sti
inc
ret
iret
inc
mov
jmp
sub
dec
jl
sahf
div
out
lea
jge
mov
shl
push
mov
and
cld
mov
mov
ljmp
and
sub
aaa
ljmp
decl
loopne
and
outsb
popa
test
push
or
lods
jle
and
in
in
lea
imul
dec
jecxz
cmp
sbb
and
push
push
scas
das
test
nop
dec
shl
jne
imul
mull
jne
mov
pop
cltd
pop
sbb
or
mov
clc
mov
or
sbb
mov
es
pop
lea
aam
or
leave
or
or
enter
pop
adc
pop
repnz
cmpl
adc
sbb
mov
shl
mov
je
mov
sahf
inc
ds
push
sub
dec
pop
loope
pop
sar
insl
test
mov
push
mov
xchg
dec
jne
repz
adc
or
fwait
sbbb
adc
out
xchg
inc
fistps
mov
pop
mov
test
loopne
pop
pop
fs
clc
mov
cmp
loopne
int3
fidivrs
sbb
push
out
push
scas
js
adcb
lock
jecxz
xor
out
adc
rclb
in
jmp
xrelease
jne
insl
lea
lea
je
data16
out
ja
add
dec
dec
cmc
lods
sub
imul
insb
pop
or
inc
pop
cmp
aaa
movsb
ds
and
jg
or
jl
icebp
jno
or
pop
jb
jg
jg
lea
push
adc
add
add
mov
and
push
enter
insl
xor
adc
pop
xchg
lret
aam
dec
add
jmp
loopne
test
lods
push
fldt
mov
mov
pop
mov
mov
and
mov
jbe
and
pop
adc
rolb
and
out
leave
inc
bound
test
aas
push
or
xor
jo
dec
icebp
inc
ret
push
adc
mov
movsb
pop
cli
pop
add
add
and
repz
pop
insb
pop
mov
xchg
in
repz
pop
mov
pop
dec
xchg
and
xchg
popf
push
dec
pop
adc
pusha
sbb
cld
push
inc
cs
sbb
jl
xor
test
xchg
add
pop
push
jns
pop
mov
mov
xor
mov
xchg
xchg
pop
sbb
and
repnz
cmp
pushf
mov
movsb
pop
push
pushf
inc
push
cmp
pushf
mov
movsb
lods
int3
and
rcl
sbb
or
loopne
int3
pop
leave
and
lret
jl
pop
fcomp
xchg
and
fcoml
loopne
xchg
add
in
in
dec
movsl
xor
in
lock
add
in
sub
in
in
lock
sbb
pop
jl
cld
or
add
nop
mov
cld
sahf
adc
or
sbb
pop
in
pusha
or
mov
or
adc
pusha
and
sub
in
pop
pusha
jl
mov
mov
add
nop
mov
jb
les
jb
ficompl
sub
sbb
push
addb
or
dec
pop
dec
pop
sbb
fnstcw
sub
fstp
mov
adc
push
popa
push
add
add
test
jns
jmp
add
fldenv
xchg
sub
negb
and
and
popf
inc
imull
jo
mov
shr
xchg
or
mov
push
das
and
dec
push
ret
dec
cmp
dec
xor
scas
and
xchg
jne
dec
or
outsl
sbb
xor
sbb
sysret
das
mov
adc
jl
add
or
jmp
jo
sbb
pop
cmp
dec
loop
sbb
adc
xorl
push
mov
ss
inc
sbb
enter
int3
dec
or
or
or
lahf
cmc
sbb
rorl
inc
ret
and
outsb
test
enter
ret
cltd
adc
shrl
pop
xchg
or
jo
aaa
inc
add
add
cmp
cmp
add
rep
sub
or
leave
adc
xlat
push
push
fists
pop
sbb
test
outsb
das
enter
mov
popa
mov
jne
outsb
inc
loopne
fstl
push
and
call
test
cmp
pop
adc
pop
mov
and
jnp
and
jmp
adc
nop
or
shlb
dec
inc
sbb
icebp
or
loop
xchg
cmpsl
xchg
sahf
nop
inc
aam
push
jmp
push
push
cmp
or
stc
cmp
jne
cmp
and
add
xchg
push
push
add
add
cmc
mov
jl
dec
sub
sub
leave
lock
lock
push
stc
adc
cmovp
xchg
mov
or
push
inc
daa
jne
shlb
lock
mov
mov
xor
add
imul
add
inc
add
jmp
jge
dec
push
rcr
xor
fisttpl
mov
test
mov
popa
sub
mov
aas
add
and
add
sub
rol
jecxz
cmp
ja
call
jmp
or
inc
jmp
and
jmp
or
jmp
add
int
int
xor
jmp
pop
jmp
or
int
int
and
jmp
or
pop
or
adc
int3
int
jmp
or
add
jge
arpl
or
cmpsl
adc
adc
sbb
fidivrs
jl
adc
shlb
scas
xor
xor
js
in
add
lock
and
dec
jecxz
mov
add
add
inc
pop
cmc
shll
jmp
inc
mov
jmp
mov
mov
dec
push
push
clc
xchg
adc
jne
xchg
add
ffree
add
imul
cmp
or
lods
adc
add
cwtl
pop
aaa
and
in
sub
roll
adc
lds
pop
pop
iret
mov
inc
push
insb
gs
cmp
jnp
test
repz
sahf
mov
iret
repz
mov
add
push
pop
or
adc
dec
rolb
or
sbb
push
pop
mov
jno
cmp
fs
cmp
adc
push
test
xlat
jno
xor
movsb
sahf
insb
jbe
movsb
xchg
fcmove
jne
sarl
int
add
or
hlt
mov
push
cmp
add
icebp
push
shlb
dec
stos
xchg
sbb
cwtl
ret
push
loop
xor
lea
fdivs
mov
hlt
fwait
sti
shlb
lods
cmp
clc
lea
push
add
pop
test
pop
cmp
repz
xor
cmp
mov
dec
syscall
push
fiadds
pop
pop
aam
enter
or
jge
lret
add
shlb
add
sbb
cmp
inc
in
jo
xor
aas
push
and
das
pusha
xchg
xor
pop
rcrb
imul
int3
add
dec
adc
call
dec
fistpl
inc
push
mov
stos
subl
enter
add
push
lock
push
mov
push
and
daa
xchg
cmpl
xchg
sarl
hlt
ret
fsubs
xor
jecxz
push
or
dec
test
lods
and
iret
inc
xlat
pop
push
inc
stc
pop
lea
sbb
lea
mov
sbb
clc
jns
xchg
cld
cli
incl
push
or
xor
dec
add
jge
call
sbb
adc
lahf
imul
mov
add
add
xor
mov
fnstsw
call
clc
clc
dec
mov
dec
add
lods
xchg
fisubrl
jb
or
xor
mull
lahf
jae
in
inc
pop
mov
sbb
roll
in
sub
movb
daa
pop
or
dec
and
out
outsl
pop
bound
pop
mov
lea
xchg
mov
xor
test
mov
xchg
fcmovbe
push
test
mov
addl
mov
lret
cmp
adc
pop
inc
adc
addl
mov
cmovg
test
mov
shrl
jecxz
ror
adc
lahf
movsb
adc
jno
jle
dec
mov
inc
inc
add
push
push
jns
je
adc
xchg
cmp
cmp
jne
mov
xor
imul
ret
int3
push
aad
pop
lcall
pop
and
iretw
data16
rorb
and
test
and
shl
inc
clc
ja
bswap
or
cmp
xlat
mov
add
dec
mov
xor
test
xlat
dec
jmp
xchg
push
dec
mov
int
leave
cmp
add
test
or
aaa
cmp
movsb
sbb
inc
or
push
sub
in
mov
test
inc
loopne
rorb
sbb
fld
daa
cmp
or
inc
sbb
loopne
inc
jo
ret
jne
inc
xchg
pop
in
cmp
mov
mov
pop
lea
imul
mov
adc
push
test
shrb
sbb
dec
push
aas
or
lock
or
cmp
lods
or
dec
adc
jle
lahf
inc
lcall
adc
movl
jae
pop
add
adc
lods
sbb
jno
aaa
jg
jo
clc
and
cmp
add
repz
jbe
push
lea
es
add
jne
sbb
jo
enter
bound
or
sbb
adc
add
ret
sub
inc
sub
or
add
adc
cmp
or
std
das
push
mov
sbb
pop
pop
xchg
roll
addb
sub
js
sbb
sbb
enter
add
inc
lods
ja
addr16
test
and
sbb
neg
daa
int3
repz
and
imul
and
or
push
lret
scas
lods
and
jp
test
adc
xor
rcll
neg
loopne
pop
dec
insl
xor
scas
push
nop
imul
inc
push
add
dec
cmp
hlt
pop
pop
add
jmp
test
add
scas
repz
mov
mov
shll
je
popf
sub
push
add
adc
bound
pop
cmp
ljmp
mov
or
and
xor
xor
dec
pop
pop
adc
xor
mov
mov
int3
xchg
or
loop
das
movsl
addr16
sbb
xchg
fld
pop
sbb
cmp
cwtl
cmpsl
aas
int
decl
xchg
testl
mov
add
mov
or
out
rcll
pop
mov
cmp
lret
xchg
or
je
cmp
shlb
out
out
mov
cmp
testl
rcl
lods
ss
orl
lahf
jo
jmp
in
push
jbe
xor
or
and
sub
jmp
mov
mov
sbb
scas
ret
inc
sub
daa
loope
push
fisubrl
dec
inc
adc
sub
sub
ret
or
lea
jae
into
mov
adc
enter
mov
adc
ret
cs
mov
and
xchg
sbb
mov
add
jne
cmp
mov
inc
dec
jne
outsb
ret
fbld
pop
rolb
pop
repnz
test
sbb
lock
pop
pushf
pop
dec
or
dec
cmp
mov
outsl
xor
mov
je
xchg
or
push
rclb
push
or
insl
pushf
xor
mov
push
mov
inc
add
dec
mov
dec
add
mov
cmpsl
sub
fcoml
xor
dec
shlb
push
lret
mov
jne
and
adc
adc
cmpsb
std
in
lea
adc
shl
sub
or
fimull
inc
rolb
mov
mov
loopne
test
adc
popf
jo
or
add
push
sub
jb
out
mov
mov
mov
mov
xchg
push
mov
adc
loop
push
push
shll
iret
mov
sbb
lods
inc
fwait
popl
and
xor
xchg
das
ja
mov
rcl
mov
std
jno
sbb
sbb
xor
shrb
mov
add
or
sub
cmpsl
push
jle
push
call
add
lahf
and
push
lahf
adc
mov
imul
pushf
jo
ret
add
test
sub
cmp
rorb
aas
daa
jne
pop
sbb
push
add
dec
lret
stos
or
jecxz
lods
lahf
sub
push
push
das
xlat
mov
cltd
clc
daa
jne
ljmp
movsb
pop
pushl
dec
or
pop
pop
addr16
and
sub
in
sbb
push
mov
mov
jl
xchg
mov
sbb
out
add
inc
neg
or
inc
sti
mov
int
jl
push
inc
lods
sar
sub
movb
and
fst
subl
push
test
inc
and
pusha
cmp
and
cwtl
enter
push
imul
les
cmp
push
adcb
push
dec
pop
loop
inc
cmp
repnz
sub
adc
inc
or
mov
jge
dec
mov
push
shld
lret
ja
pop
jmp
test
into
dec
adc
add
rcrb
xor
fiaddl
pusha
and
pop
sahf
mov
and
test
push
ljmp
sbb
cmp
mov
or
jg
rcl
sub
test
subl
and
les
sbb
bound
mov
test
je
cmp
fmull
jo
push
sbb
push
push
test
jmp
loope
adc
cmp
xchg
ljmp
lea
dec
ret
xchg
push
add
cmp
xchg
xchg
cmc
sbb
stos
or
pop
jmp
mov
icebp
pop
push
sub
loope
fwait
inc
push
pop
xchg
pop
aaa
mov
test
dec
icebp
orl
sarl
mov
or
iret
lea
push
outsb
addr16
loopne
sbb
into
mov
sbb
movsl
push
jbe
enter
dec
cmp
pop
pop
pop
and
or
out
setg
lea
sub
movsb
add
mov
push
jb
adc
out
mov
js
movsw
adc
inc
int
mov
outsl
and
mov
into
mov
push
in
xchg
push
pop
add
mov
js
in
mov
mov
aaa
les
jmp
movsl
push
mov
jle
mov
loope
mov
inc
rcrb
xchg
push
push
jns
xor
mov
hlt
inc
inc
cmc
xor
xchg
add
jle
hlt
ficoml
in
pop
sbb
push
hlt
mov
test
lods
ja
add
lock
mov
pop
cmpsl
aas
sbb
xchg
fwait
push
add
jge
pop
iret
inc
xor
enter
ss
xor
xchg
mov
jle
mov
fisttpll
sbb
fisubrs
push
repnz
mov
decl
test
lock
cmp
sbb
cmp
clc
or
mov
or
xchg
inc
dec
mov
push
sub
or
pop
ret
orl
inc
sub
lcall
adc
iret
push
add
or
imul
adc
mov
gs
inc
mov
xor
dec
loop
loop
mov
sbb
in
add
data16
adc
inc
add
loopne
xor
and
jl
daa
pop
dec
mov
clc
or
repnz
nop
sar
jle
add
jne
mov
scas
add
jle
pop
cmp
inc
popa
jle
loop
mov
imul
add
cmp
mov
scas
push
mov
enter
pop
add
mov
mov
fmuls
into
push
loopne
icebp
out
xchg
aas
push
lea
xchg
pop
mov
dec
lods
outsl
mov
pop
fcmovu
jne
xchg
add
push
mov
inc
add
outsb
jg
in
mov
outsb
mov
adc
out
jmp
cmp
into
les
fcomps
test
dec
aam
add
insb
push
push
sbb
mov
xchg
es
dec
mov
mov
mov
dec
inc
push
adc
and
or
sbb
mov
cmp
and
and
sahf
stos
adc
mov
pop
call
push
jne
pop
test
jne
sbb
jecxz
xor
jbe
jb
jbe
cmp
mov
mov
sbb
rorl
add
jmp
inc
ret
mov
adc
adc
sbb
fs
sub
or
sub
xchg
xor
push
jg
sbb
sub
fsubrs
orl
adc
and
leave
enter
in
fisttpll
push
mov
mov
sahf
sbb
xor
add
and
pop
sub
xchg
push
test
shlb
rcrb
or
inc
movsl
mov
xchg
xlat
push
test
js
std
sbb
adc
scas
dec
cwtl
mov
or
mov
inc
enter
adc
jne
jmp
nop
adc
jle
aad
jnp
sbb
in
incl
adc
jmp
outsb
dec
aad
movl
xor
or
popa
cmpsl
ret
popa
je
add
mov
mov
add
mov
push
rorb
xchg
push
push
cmp
xor
ret
push
sarl
jno
gs
inc
shlb
sub
cmpsb
inc
and
pop
jge
lret
dec
dec
sarb
jne
jne
js
or
and
inc
cmpsb
stos
or
js
cmp
rol
push
jo
rcrb
push
add
dec
pop
leave
mov
xor
stc
ja
mov
add
jno
xor
test
push
adc
std
adc
inc
ljmp
js
fldt
inc
sub
sbb
mov
push
cltd
mov
mov
add
fistps
push
mov
mov
out
cmc
mov
and
test
jae
inc
cmp
nop
xchg
or
aad
add
subl
cmp
jp
adcl
ret
lret
add
call
sbb
push
add
mov
cmp
cmp
push
push
push
sub
pop
jb
sub
loope
ss
hlt
xchg
loopne
orb
mov
jo
add
push
push
sbb
icebp
sbb
add
jp
repnz
rol
lahf
inc
add
loope
push
leave
mov
push
mov
mov
xor
push
add
inc
clc
fcomps
cmc
clc
into
mov
out
mov
movl
sarl
mov
jne
mov
pop
mov
xor
mov
adc
or
or
jnp
jmp
or
imul
int
js
mov
into
inc
push
shl
adc
push
add
sbb
popa
ja
mov
push
push
arpl
add
push
shll
pop
push
pop
xor
cmp
cmpsb
test
out
imul
sbb
sub
adc
pop
or
push
sub
sub
scas
fists
aam
or
fdivrs
mov
jl
pop
or
repnz
xchg
lcall
push
mov
cmp
je
sarb
je
rorl
clc
mov
lea
pop
or
dec
mov
sbb
lahf
pop
xchg
cs
xlat
je
cmp
jns
fiaddl
add
adc
mov
xor
mov
dec
inc
insb
mov
inc
repz
jbe
in
dec
push
push
mov
fistl
cmp
jne
adc
push
dec
add
lods
xor
adc
adc
xlat
cmp
mov
mov
fsubrs
inc
xorl
xchg
mov
and
sub
pop
mov
jmp
scas
nop
rclb
into
ss
out
dec
add
lds
test
pop
sub
or
das
inc
lock
filds
mov
or
rcr
sub
cmp
cmp
int
fiaddl
test
jb
je
dec
sub
movsl
shrl
dec
pop
out
subb
jp
dec
jne
fimuls
js
mov
out
adc
xor
das
adc
jl,pn
shll
inc
dec
and
add
or
cli
dec
add
imul
pop
rorb
insl
and
out
jmp
aad
push
push
in
sbb
imul
aad
sbb
adc
and
or
or
insw
rorb
adc
leave
push
imul
and
cmp
stos
pop
nop
negb
dec
push
mov
pop
aam
clc
dec
fcomps
fcomp
icebp
xchg
push
and
adc
out
xchg
or
das
repz
or
pop
popa
xor
lods
dec
gs
rcll
inc
push
sbb
adc
sti
and
pop
inc
mov
lea
push
sbbb
push
lock
add
add
test
lock
sub
lea
jle
adc
orb
add
das
test
mov
leave
mov
xchg
xor
mov
add
sbb
add
cmovbe
or
dec
pop
mov
movsb
add
movsb
ficoms
jmp
push
adc
test
mov
mov
setle
xor
pop
ret
es
cmp
jle
adc
cmp
and
into
dec
pop
shrl
mov
mov
je
pop
jmp
aad
lret
or
lea
mov
mov
jne
movsb
inc
adc
dec
add
in
jp
lahf
add
mov
and
adc
aad
cmp
cwtl
movsl
rsqrtps
or
cs
int
adc
mov
ds
dec
in
push
jp
nop
ret
pop
movb
enter
sti
or
test
push
jecxz
cld
add
jnp
lea
mov
bound
fcomps
jo
push
outsb
mov
push
pop
xor
int3
push
inc
rclb
mov
xchg
jno
xchg
inc
ret
push
data16
sbb
sub
lods
pop
in
in
adc
xchg
testl
mov
push
pop
ds
mov
adc
lea
imul
aam
movsb
jg
in
fimull
sub
lods
in
shl
inc
cmp
stc
nop
and
pmuludq
pop
push
sub
jl
imul
mov
add
inc
push
or
push
je
cmp
popa
or
pop
or
sbb
cmp
add
lods
lods
ret
xor
add
popf
add
adc
lock
in
fwait
bound
in
xor
xor
aad
aad
es
call
cmp
into
xor
and
adc
dec
xor
mov
or
jecxz
jecxz,pn
jl
and
lea
push
push
jae
subb
push
mov
dec
and
add
clc
xor
xchg
pusha
loope
cld
or
data16
or
and
dec
xchg
mov
mov
rcll
push
add
push
push
add
out
jmp
inc
fldl
add
ljmp
outsl
mov
in
aaa
push
push
imull
xchg
rol
cmp
adc
out
push
dec
sar
shlb
fcomp
mov
imul
jo
lock
push
and
sub
inc
inc
push
push
jno
jbe
mov
jl
orl
fwait
js
sti
outsb
add
push
mov
negl
insl
mov
cmpsl
or
pop
lock
dec
jg
jge
icebp
xchg
add
xchg
jp
in
mov
ficomps
daa
jbe
cli
ds
mov
dec
sbb
mov
rclb
repz
xchg
dec
test
inc
sbb
int
hlt
adc
call
dec
cmpsb
jb
sti
sub
add
cmp
ret
jl
jl
and
dec
add
int3
push
aam
test
adc
add
ret
push
sub
xor
movsl
push
or
mov
pusha
loope
daa
inc
cmp
je
push
mov
push
dec
cmp
cwtl
test
fucomp
push
xchg
arpl
or
jl
push
rorl
arpl
cmp
xor
xchg
mov
xchg
mov
jp
add
movl
std
add
dec
inc
and
mov
lock
add
lea
bound
rorl
stc
and
gs
sub
inc
jo
push
inc
xor
xchg
rclb
push
dec
cmp
arpl
dec
ret
sub
xor
in
pop
adc
ss
sar
stos
adc
cmp
ss
mov
addb
or
add
add
insb
xor
fnstenv
mov
jbe
ja
sbb
or
or
psrlq
sbb
out
ret
jbe
scas
and
adc
lds
popa
or
add
mov
jno
sub
push
sbb
repz
fsubrl
jb
sbb
or
fistps
add
jmp
testb
pop
cmp
icebp
nop
lock
push
push
jo
push
jge
cld
gs
sub
jne
add
loopne
dec
mov
mov
xchg
mov
or
mov
adc
popa
cmp
call
cmp
popf
adc
das
aas
and
leave
rorb
in
push
jbe
test
inc
sub
push
or
rorl
loopne
cmp
sysexit
xchg
dec
rolb
add
inc
popf
add
enter
and
pop
mov
xor
clc
xchg
sbb
push
mov
push
mov
int
iret
push
and
xor
pop
mov
out
stc
inc
xchg
mov
loope
cmpb
sbb
add
notb
mov
insl
jb
mov
inc
les
mov
pop
xchg
mov
xlat
clc
int3
mov
sar
mov
inc
or
subb
lcall
mov
adc
jns
dec
xor
inc
dec
add
aaa
adc
dec
cmp
jl
cmp
jle
mov
rclb
sub
mov
data16
or
mov
les
and
stos
jne
add
daa
stos
pop
adc
mov
test
inc
inc
cmpl
jne
call
push
add
leave
sbb
or
nop
test
sbb
movb
adc
and
aaa
or
mov
inc
jo
xor
in
sti
sub
in
adc
and
or
and
aam
sahf
adc
pop
jle
test
scas
popf
and
push
cmp
sub
xchg
xor
jo
jne
add
and
mov
repz
jno
sub
xchg
fwait
or
xor
jo
and
es
push
fistps
shr
inc
lods
dec
int
push
jg
inc
setp
cli
test
mov
scas
add
shrl
adc
shlb
or
jne
cmp
adc
sub
sbb
cmp
je
dec
adc
fldl
mov
or
lea
mov
mov
sbb
imul
mov
xchg
pushf
loopne
sbb
pop
les
jl
dec
sar
jo
inc
pop
xor
or
test
or
mov
sub
mov
rorl
push
push
push
out
fdivs
push
xor
daa
icebp
call
push
pop
neg
sbb
push
and
add
clc
sysenter
add
adc
adc
mov
push
ret
mov
mov
andl
or
or
add
icebp
push
call
and
aad
into
js
inc
adc
sbb
sti
adc
pop
add
stos
push
cmpsl
loopne
mov
or
sarb
add
add
fnstcw
popf
cmp
dec
adc
shl
popa
xor
lahf
mov
sub
outsl
dec
daa
or
sbb
clc
lock
sti
es
lods
adc
pop
imul
sub
clc
push
outsb
testb
xlat
fists
or
imul
adc
fidivrl
cmpsb
adc
loopne
daa
imul
in
rclb
das
aam
mov
imul
aas
adc
les
xchg
inc
shlb
push
mov
mov
jne
loopne
aas
les
add
lcall
setno
leave
movsl
lahf
adc
pop
ja
adc
test
mov
test
call
jge
outsl
loop
xor
dec
testl
xor
shlb
and
jp
orl
adc
ja
enter
mov
gs
push
cltd
xchg
push
add
cmpsl
mov
lds
mov
inc
push
mov
cmc
int3
fstpl
jmp
jmp
xor
dec
lea
dec
lods
sbb
movsl
test
lea
inc
sub
sub
int
adc
out
outsl
sbb
orb
jle
dec
pusha
add
repz
inc
xor
popf
jb
xor
push
lea
xchg
mov
mov
leave
aam
cmp
imul
adc
out
movsb
lock
mov
adcb
pop
or
aam
sbb
mov
sbb
aas
mov
xchg
in
nop
jb
or
mov
mov
mov
xor
pop
aas
mov
in
loope
inc
jge
out
add
or
shrl
jb
adc
imul
push
push
push
test
imul
push
or
and
jl
pushf
enter
pusha
ret
cld
cmpsl
mov
and
dec
pusha
jg
mov
push
push
je
dec
mov
aas
lods
je
in
daa
inc
sarb
lret
or
je
add
ljmp
data16
das
lcall
adc
and
lret
add
pop
jnp
mov
or
shrl
je
push
mulb
or
arpl
pop
or
cmp
mov
xorl
push
push
outsb
adc
push
js
push
push
cs
out
aad
clc
xor
push
push
cmp
add
je
std
js
or
cmp
mov
aas
pop
insb
pop
sub
or
dec
vrsqrt14ps
sbb
pop
faddl
cmp
dec
sahf
xor
and
adc
stos
icebp
cmp
test
cmpsb
shl
cmp
shl
pusha
sub
cwtl
pusha
pushf
jo
mov
and
push
mov
leave
std
or
test
cltd
mov
or
arpl
push
cmp
jns
dec
pop
mov
add
pop
add
xor
cmp
mov
out
or
movsb
dec
lea
ret
pop
mov
push
jg
adc
cli
inc
stc
and
cmp
add
mov
cmp
test
add
mov
in
test
xchg
push
add
inc
dec
out
add
mov
fmuls
add
fidivrl
sub
xor
sbb
or
push
stos
addl
int
ret
sub
inc
mov
fdivrs
pop
dec
leave
loope
daa
sub
and
sbb
iret
call
cs
movsb
and
in
hlt
jb
adc
nop
mov
xor
adc
fs
lcall
iret
adc
push
icebp
dec
sbb
clc
popa
loopne
mov
and
je
sbb
sub
es
add
xchg
mov
test
and
lcall
xchg
xor
std
out
pop
inc
cltd
mov
adc
xchg
test
inc
shll
jns
adc
push
sbb
mov
or
or
mov
xchg
push
call
lahf
and
add
jecxz
stos
ror
mov
sarl
stc
xchg
cld
adc
and
test
loope
inc
push
mov
mov
mov
or
aaa
jno
movsb
les
out
in
daa
mov
mov
mov
aam
nop
shll
push
push
dec
test
push
jge
fists
test
dec
jecxz
faddl
or
test
test
mov
adc
inc
iret
mov
jo
push
cmp
popa
mov
inc
push
into
mov
push
aam
test
sub
sbb
or
and
jae
or
stos
in
cmpsl
scas
dec
outsb
and
daa
or
fldenv
and
or
adcl
xchg
lea
mov
push
xchg
movsl
xor
or
and
outsl
or
and
add
fisubs
adc
pop
aad
mov
mov
mov
lret
push
addl
fisttpll
and
aaa
jle
inc
dec
mov
inc
cmpsb
sbb
popa
sub
adc
inc
imul
sbb
sbb
test
or
pop
into
clc
lret
lea
rorb
xchg
loopne
inc
add
rorb
or
repz
sub
or
nop
inc
sbb
push
int3
movsl
jmp
subps
xlat
enter
add
int3
inc
in
int3
lcall
dec
inc
mov
addl
jge
adc
adc
roll
xchg
mov
xor
inc
aam
or
out
sahf
je
xchg
inc
aaa
das
xchg
negb
jo
out
popf
cmc
movsb
inc
ja
lea
mov
mov
fiaddl
adc
enter
movsb
mov
dec
push
pop
stos
and
mov
inc
shrl
mov
negl
rorb
sarl
xor
xchg
shl
stos
sub
ror
idiv
icebp
orl
jl
insb
incl
add
rcrb
or
rolb
or
lock
xor
fs
xchg
repz
sti
sbb
fistl
pusha
clc
inc
or
rclb
inc
mov
dec
add
daa
pushf
add
movsb
mov
js
xor
mov
movsl
inc
pop
ret
movsb
out
add
dec
fstpt
loopne
jecxz
incl
sub
cmp
test
xor
jno
jb
cmp
adc
push
dec
xchg
lahf
divl
jl
test
mov
leave
dec
dec
testl
movsl
sbb
loop
add
sbb
push
jecxz
ds
jmp
aas
out
dec
adc
or
jl
loope
int
adc
loopne
sub
sbb
inc
sub
out
jg
sahf
cmc
mov
das
stos
mov
push
mov
dec
cmp
push
cmpsl
xor
arpl
or
addb
or
or
mov
and
andl
mov
or
nop
js
sub
push
ljmp
movl
icebp
inc
and
nop
and
inc
mov
add
inc
adc
inc
loop
test
pop
ljmp
xor
jl
adc
cmp
ss
xlat
add
fnstenv
inc
cltd
cs
or
test
scas
hlt
inc
inc
pop
mov
cmp
stos
dec
sub
push
xor
out
dec
or
inc
decl
ret
inc
inc
xchg
push
add
pop
lahf
pop
dec
sbb
stos
clc
add
orb
sub
pop
enter
push
ret
inc
cs
xor
repz
vprotq
xor
cwtl
leave
and
int3
into
xchg
pop
dec
out
dec
clc
lea
sub
inc
push
pop
jo
and
subl
cmp
sarb
mov
rorb
fistl
mov
rcr
pop
bound
mov
dec
push
add
lock
idivb
sbb
or
cs
outsl
decl
dec
dec
or
inc
lea
push
push
cmp
or
push
push
mov
mov
les
push
cltd
mov
jns
sbb
loop
gs
sbb
sbb
movsb
and
test
push
inc
mov
sub
sbb
push
test
add
cmpsb
xchg
and
test
shrb
and
or
push
push
shl
dec
cli
stos
sub
mov
add
or
iret
and
add
dec
cmc
adc
cmp
loope
pusha
stos
inc
jo
jge
push
and
outsl
push
cltd
ret
xor
or
xlat
and
cmpsl
push
mov
or
daa
loope
jmp
mov
adc
and
test
ret
mov
cwtl
mov
ret
sub
lods
cmp
mov
scas
insb
jmp
mov
mov
sub
jl
adc
addb
xchg
xchg
das
mov
lea
inc
mov
stc
inc
jge
mov
call
adc
out
adcb
push
out
push
jne
lea
sub
dec
cmp
jecxz
or
and
rcr
ja
inc
and
bound
xor
imul
imul
jle
mov
fcmovnbe
scas
jnp
xchg
push
mov
sbb
inc
sbb
test
mov
sub
pop
enter
push
dec
dec
xchg
mov
sarl
and
mov
in
shlb
loopne
popa
push
add
mov
stos
mov
inc
jecxz
dec
scas
push
imull
pusha
aaa
mov
pop
addl
lret
mov
cld
pop
ljmp
add
inc
clc
jl
aad
xchg
push
or
mov
jno
adc
out
mov
movsl
add
gs
xor
pop
mov
or
addb
outsb
imul
mov
inc
adc
fs
cmp
shl
xchg
push
cmp
sub
insl
shll
inc
mov
test
mov
aam
int3
cltd
fldt
inc
lds
lahf
add
mov
xchg
lea
lds
sub
lea
shl
ret
mov
adc
repnz
js
mov
sbb
aas
mov
push
cmc
add
ror
xor
dec
aas
add
dec
pop
inc
mov
add
pushf
adc
jne
dec
fs
insb
iret
ss
or
push
fucomip
mull
jg
rolb
pop
push
daa
leave
lret
push
stos
ret
xchg
cmp
flds
adc
push
cs
and
adc
and
inc
call
ret
cmp
xor
sub
aas
cmpsl
or
sub
dec
arpl
mov
rorl
dec
shrb
mov
add
xchg
push
pop
push
shrl
outsl
decl
mov
mov
cmp
jb
lea
or
jno
fiadds
arpl
xchg
rclb
adc
push
and
xor
fistpll
pop
adc
inc
cs
pusha
or
xor
inc
pop
or
test
lock
lea
jo
sub
sbb
es
cmp
imul
sbb
add
or
add
pop
cmp
jne
ret
faddl
mov
icebp
jne
mov
dec
push
sub
cmp
mov
lods
cmc
and
int3
add
pop
xchg
xor
arpl
mov
and
push
sub
adc
jp
add
sub
jne
jne
mov
pop
xor
push
and
sub
jl
sbb
xor
dec
fistps
add
pop
add
mov
insb
push
cmpsl
add
mov
scas
xor
lds
je
adc
adcb
shlb
lock
stc
mov
fildll
inc
data16
push
in
es
popa
xor
jne
leave
out
and
xchg
addb
pop
pop
test
subl
es
sbb
jecxz
loopne
movsl
rorl
add
xchg
dec
sbb
lods
mov
xchg
ficoms
nop
sub
movsl
cmpsl
push
out
inc
jo
arpl
xor
adcb
push
and
loopne
ljmp
pop
pop
adc
insb
or
mov
cld
push
mov
ja
jg
in
pop
gs
or
pop
add
lods
inc
pusha
incl
adc
outsl
add
push
push
push
push
mov
in
cmp
scas
adc
jecxz
sub
xchg
xchg
xor
shrl
test
or
cmp
sub
aam
push
jge
shll
push
decl
ret
adc
or
or
ret
cs
mov
test
add
sub
adc
push
fcoml
dec
in
aam
in
push
or
inc
or
xor
inc
pop
cmpb
movsb
mov
or
sub
push
mov
xchg
test
add
cmp
ffree
je
fs
mov
vmovaps
add
ret
ret
mov
stos
and
rorb
push
pop
or
mov
push
clc
xchg
add
int3
jns
loope
jns
push
jle
push
push
or
add
rcrb
and
out
test
jge
cmp
fwait
gs
push
cld
jle
stos
pop
or
xor
add
lods
adc
and
sti
pop
fcoml
and
mov
add
cmp
dec
inc
push
das
sub
lea
cmp
and
fsubrl
pop
nop
and
push
test
dec
jae
out
loopne
inc
dec
inc
lcall
arpl
xor
push
inc
ret
inc
push
pop
adc
enter
or
inc
jg
and
adc
adc
scas
nop
lret
and
je
or
movsb
xor
inc
and
sub
pop
add
push
and
inc
and
push
push
inc
add
pusha
or
loopne
ret
mov
cli
les
repz
pop
dec
roll
mov
mov
mov
dec
xchg
inc
push
out
nop
stos
shl
inc
or
fucomi
mov
mov
push
inc
je
add
in
mov
rol
jl
dec
add
push
imul
test
xchg
adc
or
cld
mov
lea
cwtl
xor
add
add
jae
aas
cmp
jmp
mov
shlb
mov
mov
lods
or
pop
sbb
jb
bound
rorb
mov
iret
faddl
rclb
hlt
jbe
aas
dec
add
and
divl
scas
fs
or
int
sub
cmp
adc
mov
push
cmp
lds
sbb
inc
or
xchg
shlb
imul
mov
jmp
insl
mov
shlb
add
iret
in
and
mov
stos
pop
push
mov
push
icebp
divb
popa
mov
clc
inc
cmp
mov
sti
mov
cmp
shll
insb
je
push
cld
out
outsb
or
jo
jne
mov
es
or
and
push
add
idiv
adc
push
aaa
or
xchg
adcb
push
push
call
mov
pushf
jne
inc
lahf
or
rcl
or
adc
shll
push
adc
mov
pop
xchg
jb
enter
arpl
add
iret
push
ficompl
push
rclb
jmp
pop
pop
imul
sarl
mov
lahf
arpl
jmp
pop
mov
mov
iret
sub
in
cmp
mov
dec
xchg
in
push
cmp
pop
je
lock
inc
mov
pop
movb
pop
sub
or
cmp
jne
push
ret
sahf
mov
iret
int3
mov
adc
popa
test
aam
push
and
pop
add
movsb
jae
push
mov
and
jle
enter
insb
fwait
adc
jo
loope
int3
mov
pop
xor
pop
sbb
repz
inc
iret
ss
dec
jae
sahf
lock
dec
inc
inc
icebp
ret
cmp
push
insb
pop
out
lret
mov
movsb
ret
inc
popf
stos
fildl
jecxz
js
or
fcomps
inc
adc
xchg
out
insl
push
je
sbb
sbb
iret
pop
cmp
fildl
xor
or
fwait
scas
mov
pop
add
jns
adc
outsl
stos
jmp
adc
sbb
sbb
inc
adc
jl
adc
inc
push
je
or
int
inc
push
cmc
pop
leave
gs
mov
xor
mov
test
jne
sbb
jge
add
and
push
dec
xor
lcall
dec
sbb
mov
ss
cmpl
and
sarb
int3
in
imul
mov
dec
add
adc
int3
push
je
adcl
lea
pop
dec
pop
lahf
lcall
xor
cmp
lahf
adc
movsb
repnz
je
xchg
dec
push
adc
aad
in
nop
xchg
lahf
je
cmp
adc
pop
dec
fldenv
into
pop
lahf
inc
pop
aam
inc
or
cmp
adcb
movsb
push
ret
inc
lock
into
ret
into
ret
xor
and
into
ret
adc
and
push
cmp
pop
or
push
lds
adc
adc
cmp
mov
or
in
jmp
or
pop
dec
subl
xchg
clc
mov
cmp
je
or
add
outsl
fcmovbe
add
xor
or
push
xlat
adc
dec
push
push
iret
xorb
inc
or
xlat
or
clc
jne
cld
push
sub
pop
lahf
nop
pushf
loopne
loop
jl
mov
sub
adc
loop
push
mov
insb
loop
inc
add
inc
dec
jne
jp
cmc
lea
out
loope
push
inc
and
cmp
mov
je
pop
shll
sbb
mov
xor
jb
adc
cmpsl
jb
inc
pop
sbb
mov
push
sub
push
mov
xor
mov
hlt
scas
negl
mov
jns
sbb
ss
cmp
push
mov
adc
mov
std
adc
inc
jns
inc
xor
or
inc
mov
cmp
ret
std
add
inc
mov
adc
cmpsb
imul
xor
add
mov
repnz
push
pop
jno
or
mov
adc
in
push
xchg
jp
stos
pop
imul
adc
loopne
sbb
repz
addr16
lea
orl
push
sbb
inc
lcall
or
mov
push
and
push
adc
push
negl
je
push
and
dec
mov
lods
xchg
mov
mov
inc
mov
inc
testb
push
filds
sbb
ficomps
fidivs
stos
mov
cmp
jae
dec
cmp
or
jmp
push
pushf
popa
mov
mov
and
test
mov
dec
stos
xor
sbb
in
add
adc
icebp
ret
insl
test
adc
nop
cmp
fisttpll
add
mov
or
or
lods
insl
xchg
movsb
or
pop
mov
pop
test
jne
cmp
iret
mov
addl
inc
xlat
ja
push
shufps
or
fwait
shll
push
adc
je
pop
pushl
and
aam
insb
mov
mov
shlb
negb
stc
movsb
ret
test
cmp
mov
lods
jbe
adc
arpl
and
xchg
add
gs
dec
dec
push
mov
movsl
mov
pop
scas
mov
jns
adc
cmp
or
dec
repz
xor
lods
enter
fdivl
jecxz
aaa
js
cmc
add
test
ljmp
aad
pop
movsb
mov
jp
test
pop
or
cmp
adc
filds
test
xor
stos
sub
lock
push
test
sbb
imul
int3
pop
repz
mov
mov
or
add
gs
dec
and
jmp
in
adc
je
pop
sbb
mov
sub
aas
or
sub
or
mov
or
mov
xchg
clc
add
cmp
and
sbb
pop
test
mov
and
sub
xlat
cmp
fistl
adc
pop
xchg
xor
scas
clc
bound
and
js
cmp
cmc
mov
adc
xor
and
outsl
mov
mov
icebp
mov
pop
dec
ret
add
sub
cmp
jl
out
fmuls
adc
sub
add
fmull
jne
test
add
sub
lock
rorl
pushf
rolb
in
pushf
dec
or
dec
ret
or
xchg
mov
xchg
or
or
rep
pop
shlb
popa
mov
int3
cmp
orl
sbb
mov
or
je
loop
arpl
add
and
or
sbb
ss
jne
popf
shlb
sbb
add
jo
cwtl
push
dec
sbb
pop
clc
inc
mov
je
pop
movsl
jo
pop
adc
add
adc
imul
mov
mov
sub
xor
pusha
rcrb
pop
shrb
push
outsl
jb
inc
or
lcall
jne
cmp
and
leave
mov
popa
push
ret
popa
shrl
rcrb
xor
mov
inc
xor
jge
ffree
xchg
dec
daa
mov
mov
and
pop
dec
cmpsl
in
ljmp
mov
lret
push
ret
mov
adc
mov
mov
leave
dec
or
lods
mov
dec
xor
imul
out
insl
cmp
xor
imul
in
icebp
cwtl
push
inc
rol
ret
mov
add
pop
sbb
cmc
sub
xchg
out
and
push
jmp
adc
adc
xchg
mov
pop
or
test
ja
adc
test
adc
test
js
mov
mov
xchg
ret
aaa
mov
pop
cwtl
enter
fbstp
test
add
popa
xor
lock
clc
bound
lldt
lea
jae
cmp
or
pop
pop
mov
and
jo
sbb
fwait
sub
cmp
fucomp
push
push
lods
mov
loop
fisubrs
inc
add
lds
les
lahf
jns
out
mov
sub
inc
sub
js
loope
xchg
sbb
cmpsl
out
cmp
lea
les
out
mov
sub
or
nop
insb
sub
cmp
or
mov
imul
jnp
jle
cwtl
add
and
push
imul
dec
test
repnz
fsub
bound
insb
pop
dec
mov
sub
mov
out
jo
jecxz
rorb
dec
or
cmpsb
enter
aas
or
dec
paddq
add
cmp
push
lret
adc
sub
lods
dec
int3
pop
xor
xor
mov
push
enter
adc
orl
pop
xlat
aas
inc
fldt
sub
ret
mov
and
lcall
xchg
push
test
cmpb
and
jl
sbb
or
mov
cmp
popf
add
call
sub
fadds
rcl
mov
arpl
xor
add
clc
xor
lret
sahf
mov
lahf
mov
daa
and
movb
or
cmp
shll
or
scas
push
cwtl
shlb
std
inc
add
adc
lea
cmp
xor
pop
push
in
push
rcl
adc
or
or
jb
adc
or
addr16
or
fcoms
loopne
lahf
out
push
rol
test
movsb
aaa
push
ja
call
adc
mov
loope
sub
adc
shrl
pop
fisubl
fisubs
jl
popa
enter
push
add
pop
and
fimuls
ret
add
push
popf
adc
cmp
ret
xor
sub
in
xor
les
or
xorb
addb
cmp
and
dec
mov
into
sbb
mov
jl
or
mov
push
inc
adcb
cmp
add
lock
shrl
ja
hlt
out
fimuls
jle
cmp
je
or
mov
and
mov
and
call
cmp
cmp
pushf
adc
xchg
cltd
cli
inc
test
pop
inc
stos
and
and
pop
lahf
push
sti
jecxz
xor
inc
inc
add
add
push
dec
in
xlat
jb,pt
pop
loop
fnstenv
leave
sbbb
push
inc
mov
pop
mov
ljmp
jecxz
cmpsl
or
sahf
outsb
xor
pop
mov
daa
xchg
loope
mov
adc
xchg
repz
sbb
shlb
sbbb
xchg
mov
push
aad
mov
cmp
arpl
mov
push
imul
outsb
xor
into
aaa
xor
sarb
xor
cwtl
inc
sbb
or
cmp
adc
sub
stos
adc
jns
mov
mov
inc
inc
adc
addr16
adc
and
jmp
and
pop
enter
ret
rcl
outsl
dec
xor
sub
sub
mov
pop
sub
push
jne
enter
out
mov
cmp
xchg
push
outsl
stos
cwtl
bound
dec
pop
push
mov
dec
loopnew
inc
cmp
jne
inc
in
push
pop
mov
sub
dec
loope
inc
pop
mov
stos
ret
jne
xor
inc
xor
xor
fmull
inc
xlat
dec
add
fimull
lods
pop
mov
popa
cmp
es
and
adc
or
std
and
enter
inc
leave
push
test
adc
pop
lock
rorb
je
mov
fcomip
push
and
lcall
ret
add
sub
loop
sub
out
les
cmp
lock
in
add
adc
jne
jecxz
xor
ret
push
mov
pop
sub
mov
int
push
dec
lret
xor
push
dec
pop
pop
or
mov
dec
xor
inc
inc
pop
movsb
jmp
in
dec
and
nop
mov
lret
cmp
inc
or
sahf
rcr
push
les
jg
ljmp
add
aad
add
mov
jmp
and
xchg
or
aad
sbb
ds
rorl
test
pop
mov
inc
xchg
push
shlb
cmp
sub
adc
mov
jns
stc
adc
lods
jo
rcr
add
mov
je
mov
add
pop
adc
inc
sub
pusha
or
pop
cltd
xor
rcll
jecxz
jne
popa
je
std
mov
mov
inc
fldt
push
cmpsb
add
nop
xchg
inc
add
rcr
push
aaa
mov
xchg
fisubrs
mov
jns
sbb
jmp
repz
movsl
mov
mov
mov
fisttps
dec
sbb
mov
stos
push
rorl
jbe
or
lea
push
push
add
xor
or
push
sarl
jae
js
roll
inc
loop
mov
int
or
fwait
cmp
int
or
add
test
jo
popf
rorb
mov
js
xor
nop
call
adc
roll
dec
in
cli
cmp
pop
xor
icebp
add
ss
jge
dec
test
arpl
xchg
jo
clc
daa
jo
stos
and
push
adcb
xor
xor
push
push
and
adc
dec
pop
adcb
nop
sub
in
xor
adc
sub
in
push
push
test
dec
ror
jnp
xchg
rcrb
sbb
pop
pop
jae
cs
icebp
or
fwait
gs
popf
rol
test
add
sub
and
fwait
scas
es
sbb
jbe
mov
cmp
iret
arpl
push
add
push
xor
cld
enter
inc
out
dec
add
mov
cmp
movsb
pop
das
arpl
mov
lret
and
xchg
and
mov
or
shll
leave
adc
add
sbb
jno
or
fmul
out
jb
inc
add
lock
data16
es
movsb
xchg
adc
pop
fwait
or
or
movsl
imul
fimull
pushf
cmp
call
or
mov
call
lods
or
push
mov
ret
addr16
mov
inc
or
dec
loope
xchg
inc
cmp
add
setle
xchg
xchg
jge
sub
lret
add
cmp
xchg
adc
or
mov
mov
mov
mov
or
lret
mov
mov
mov
ret
mov
movb
movl
int
int
pop
add
add
xchg
inc
stos
add
and
ret
or
xlat
push
outsl
sbb
lods
out
stos
cmpsl
dec
fdivr
lea
mov
int3
cmpsl
je
inc
imul
dec
adc
xchg
mov
sahf
and
inc
sub
lea
out
or
xor
mov
sbb
push
cmp
add
pop
popf
jae
arpl
push
movsl
insl
jo
adc
mov
movsl
lea
add
sets
imul
xchg
rorl
lcall
stos
cs
lcall
sub
cmp
inc
cmpsl
push
cmpsl
movsl
mov
arpl
outsb
mov
push
pushf
or
int
cmpsl
or
push
clc
ret
outsb
mull
aaa
xor
cmp
and
in
pop
mov
mov
push
cmovo
scas
ret
push
push
aaa
xor
ss
mov
mov
ret
arpl
mov
sub
push
stos
add
pop
sbb
outsl
out
outsl
int3
push
ja
dec
cmpsl
ret
sbb
ljmp
xchg
repnz
movsl
dec
xor
mov
cwtl
pop
mov
mov
nop
stos
or
add
outsl
test
lock
pop
pop
es
or
or
dec
aam
aam
push
add
fcoms
mov
push
push
sub
ja
rcrb
dec
pushf
xchg
xor
mov
mov
dec
leave
or
fimull
xlat
jnp
and
jae
lods
inc
shlb
dec
dec
inc
out
xor
imul
mov
or
xor
add
inc
lret
or
adc
adc
into
or
adc
add
sub
inc
cwtl
hlt
fs
cltd
movsl
aam
and
insb
sub
mov
std
adc
loope
push
adc
push
inc
ret
stos
les
movsb
and
rcl
add
adc
movsb
nop
and
xchg
sub
mov
sbb
in
push
mov
add
and
xlat
mov
mov
sbb
lret
movsl
or
push
sbbl
insb
ret
std
adc
dec
inc
stos
dec
pop
xlat
ficomps
cld
test
mov
push
xor
inc
adc
xor
sbb
xor
pop
test
push
subl
and
sub
jl
cmp
ret
popf
ret
scas
mov
ret
cltd
imul
cwtl
push
xchg
or
jne
ja
pop
sub
push
push
inc
fmulp
ja
imul
rolb
mov
mov
mov
xor
loope
out
add
mov
mov
or
add
call
movsb
inc
xchg
add
jp
adc
jne
or
in
mov
add
and
lock
in
and
jbe
les
xor
rcrb
je
xchg
push
jge
mov
adc
mov
in
mov
enter
mov
fs
sahf
testb
pop
ja
xor
dec
sbb
adc
lock
pmulhuw
pop
pop
push
add
sbb
xchg
pushf
add
repnz
lcall
repnz
pop
push
pop
push
pop
push
enter
sahf
negl
pop
rorb
not
adc
je
sarb
lahf
pop
and
jns
jge
stos
or
in
leave
pop
fwait
dec
jns
cmp
pop
bnd
jb
clc
in
stc
or
nop
lret
in
stc
and
test
jg
lahf
cmp
enter
and
cmp
pushf
jle
pop
dec
cs
pusha
pusha
fs
cmp
pop
and
in
rclb
jo
adc
sarb
insb
pop
jb
pop
xchg
dec
insb
enter
mov
sub
xchg
lret
adc
push
pop
and
sti
pushf
cmc
cmpsl
jo
pop
jl
pop
ret
dec
pop
xor
ret
pop
sub
ret
jg
in
pop
pop
cmp
jb
ds
dec
cld
add
adc
lahf
cmp
or
fs
pop
jns
mov
stos
in
je
pop
jb
pushf
insb
fs
pushf
pop
cmpsb
jo
je
imul
add
outsb
lds
int
fdivr
adc
xchg
push
mov
negl
sub
cmp
pop
jne
ret
push
jo
cmp
and
or
cmp
add
inc
aas
add
cs
ja
jl
xchg
test
cmp
sub
gs
pop
js
inc
mov
push
outsb
in
cmp
pop
pushf
push
add
push
inc
add
ret
aaa
fimull
xchg
adc
mov
jb
insb
mov
cltd
mov
pop
popa
mov
dec
icebp
dec
movsl
in
xorb
add
push
or
out
ds
inc
cmp
and
mov
adc
sti
mov
mov
jns
mov
fs
fwait
add
orb
and
test
mov
mov
sub
mov
sub
fs
lods
movsl
inc
push
xchg
movsl
and
pop
mov
jge
mov
jb
dec
call
sub
test
inc
lahf
adc
jge
mov
dec
xor
ret
push
in
jecxz
cmp
jge
mov
add
jge
gs
and
dec
mov
lds
add
pushf
mov
addl
adc
mov
enter
and
mov
leave
jae
jae
push
test
mull
or
cmp
or
push
stos
adc
pop
push
pop
and
xor
rolb
or
adc
mov
pop
dec
add
push
add
add
or
shrl
xor
pop
js
push
dec
push
or
shlb
nop
dec
push
cmp
or
sbb
pop
shll
pop
pop
pop
inc
lcall
xor
xorb
or
adc
adc
nop
push
bound
movsb
les
inc
insb
pop
and
or
and
push
arpl
mov
loope
jno
leave
shrb
ret
sub
call
mov
sub
leave
jmp
mov
mov
mov
punpckhdq
mov
xchg
pop
fnsave
push
jge
jno
push
mov
lea
push
and
pop
add
mov
mov
pop
push
lahf
outsl
mov
das
test
ljmp
ja
add
sbb
clc
imul
cmpsb
or
push
sbb
pop
cmp
xchg
jo
push
sub
adc
add
add
push
mov
pop
xchg
loop
xor
rorb
sbb
cmpsb
repz
add
mov
lock
lret
jno
mov
mov
push
aam
push
add
sti
xor
push
repnz
movsb
jb
jae
ret
arpl
push
movsl
sub
test
mov
lret
lcall
lds
rcrl
std
sbb
add
sbb
xchg
mov
or
cs
jl
and
push
push
jae
xor
imul
rcll
add
in
ss
or
jge
or
lcall
push
dec
adc
mov
pop
mov
movsb
jnp
add
loope
test
loopne
clc
adc
imul
fidivs
mov
lds
dec
sbb
mov
mov
cmp
mov
outsb
roll
inc
xor
dec
cmp
fwait
jecxz
mov
test
xor
out
inc
sub
jo
sub
xchg
adc
imul
or
add
ss
out
jecxz
push
xchg
sbb
xchg
push
or
sahf
sub
xor
dec
hlt
stos
sbb
sbb
or
fs
loopne
sbb
push
dec
lret
ret
xor
mov
push
iret
or
fldt
sub
subb
push
addl
cmp
sub
sbb
stos
and
hlt
add
ret
jecxz
push
mov
aad
jae
adc
pop
sub
xorl
daa
jmp
rcll
test
into
lds
xchg
shll
popa
pop
mov
loopne
mov
lcall
pop
mov
add
mov
dec
inc
loopne,pn
cli
aaa
arpl
adc
lret
js
scas
fidivrs
push
inc
dec
cmp
scas
push
lea
stos
dec
sub
rorb
daa
xor
mov
and
adc
and
push
sub
sbb
lcall
shrb
or
ret
mov
jp
jo
lret
sti
pop
xchg
sbb
jno
loop
sbb
and
fwait
adc
xchg
dec
int
imul
jle
mov
push
sub
push
push
mov
add
inc
add
in
stos
or
dec
sbb
stc
testl
mov
mov
xor
jmp
xor
roll
sbb
xor
sub
fisubs
jbe
or
push
sbb
hlt
mov
mov
xor
or
loope
and
popa
lock
test
fsubrs
xchg
dec
inc
das
or
mov
js
cmp
push
leave
dec
xchg
and
inc
xor
cmpsb
cmp
dec
out
mov
lods
push
mov
je
push
push
daa
xchg
addr16
push
add
mov
add
jb
sub
jmp
xor
sub
pop
sar
sub
add
lock
jmp
xlat
cwtl
mov
inc
push
sub
cltd
inc
and
ret
in
rclb
sbb
sub
adc
push
imul
ss
inc
jb
fwait
mov
in
test
mov
xor
sti
pop
std
or
das
in
stos
push
movl
jle
fisttpll
in
add
dec
and
mov
adc
inc
and
adc
mov
pop
sahf
push
nop
dec
nop
ds
cmc
rolb
inc
ret
pop
inc
cltd
into
lcall
mov
or
lea
stos
inc
int3
aam
leave
clc
pop
les
push
push
lea
out
pop
cmp
xrelease
or
push
mov
ss
inc
es
inc
cmovge
fs
mov
aas
ljmp
mov
cld
and
add
jmp
jl
popf
pop
cmpsb
mov
inc
jg
jp
cld
mov
mov
icebp
je
pop
ret
lea
inc
mov
int3
cwtl
sub
pushf
subl
sbb
test
jbe
pop
jne
sbb
test
repz
sub
sahf
push
push
lock
pop
repz
jl
inc
or
cmpsl
adc
mov
dec
inc
mov
mov
jmp
cmp
lcall
push
je
inc
loopne
push
dec
daa
rorb
imul
mov
out
ja
mov
push
imul
or
dec
pop
in
adcl
mov
fcomps
rorb
jne
shll
sbb
lea
adc
or
inc
into
mov
jbe
mov
or
add
ficoml
subb
cli
push
aaa
push
cmp
popf
mull
ds
sbb
pushf
nop
pop
mov
add
push
leave
mov
add
std
sbb
adc
inc
aaa
xor
sub
or
sti
dec
mov
mov
inc
or
je
ljmp
push
pop
arpl
pop
or
adc
lahf
cmc
xchg
dec
pop
add
push
ljmp
or
cli
mov
cmp
add
xlat
push
pushl
pop
movsl
and
add
lods
jno
fmuls
dec
cmp
or
adc
inc
or
mov
pop
inc
shll
or
jmp
test
jg
outsl
xor
repz
jne
loopne
jp
and
dec
and
push
adc
mov
loop
nop
dec
pushf
inc
or
cmp
popa
jge
xor
jp
push
adc
add
adc
fs
ret
cld
cmp
mov
add
pop
orl
data16
movb
inc
add
mov
or
jmp
data16
in
xchg
add
in
fbstp
push
sbb
lea
cwtl
pop
test
mov
insb
jge
in
popf
and
xchg
inc
pop
mov
std
sub
sub
aam
push
xchg
adc
test
mov
insb
shll
mov
push
lock
add
mov
icebp
or
popf
adc
push
xchg
mov
call
cmp
jne
add
jg
mov
enter
iret
fdivrp
cli
pop
adc
and
lods
sub
lea
sub
mov
xor
cmp
jbe
neg
cmp
shll
mov
bound
sub
add
movl
pusha
test
sub
adc
sarl
add
or
ss
pop
or
lcall
pop
arpl
mov
mov
lock
push
sarb
add
jns
aam
mov
icebp
imul
sahf
ret
mov
int
sbb
addr16
mov
or
and
ret
addl
aad
lret
dec
or
mov
in
jbe
lods
or
mov
dec
inc
ret
test
add
test
or
jbe
mov
cmpsb
pusha
pop
or
pop
popf
xor
or
iret
xchg
cmpsb
dec
lret
push
jmp
dec
in
adc
jecxz
inc
sbb
sub
cli
daa
loope
loopne
hlt
sahf
enter
pop
inc
movsb
jns
mov
in
stos
jmp
test
dec
daa
xchg
adc
add
sbb
push
xor
pop
mov
xor
mov
or
mov
adc
insb
cmc
adc
or
out
and
pop
jnp
and
pop
sub
xor
fmull
push
mov
cs
xchg
adc
ss
shll
icebp
sub
xchg
sbb
add
pop
and
push
jo
icebp
push
out
insl
ss
push
addr16
mov
xchg
outsb
add
insl
scas
add
adcl
lea
xchg
sbb
lods
mull
sbb
in
or
mov
lcall
mov
or
adc
dec
andb
or
cs
xor
imul
loopne
mov
pop
fcmovnu
test
and
and
pop
xchg
push
dec
insb
dec
jecxz
push
dec
push
sbb
xchg
or
loop
adc
push
dec
adc
dec
adc
mov
cmovae
dec
sbb
adc
dec
push
mov
jo
test
sub
pop
sbb
cwtl
mov
adc
stos
dec
sub
sbb
xchg
test
xlat
mov
xor
imul
pop
inc
xor
mov
cmpsl
repnz
or
aam
pushf
test
mov
das
push
add
sbb
mov
stos
ret
or
xchg
shlb
sub
js
adc
fs
pop
imul
pop
test
push
sbb
jns
adc
or
jb
les
dec
adc
sub
push
scas
mov
pop
inc
stos
jns
outsl
jo
arpl
arpl
test
int
into
jno
push
test
fmuls
mov
sub
mov
mov
test
push
or
pop
iret
jbe
jmp
or
stc
test
push
or
jns
dec
test
ja
addr16
mov
pop
mov
xchg
dec
icebp
lea
sub
sbb
add
das
add
jecxz
fadd
adc
xor
sub
jb
rorb
inc
aam
call
cmp
jbe
test
adc
mov
lret
dec
outsb
sbb
cmp
rclb
fwait
out
in
push
hlt
cwtl
js
push
stc
push
mov
jge
or
push
mov
cmp
js
adc
mov
ss
add
inc
dec
xor
scas
xor
adc
mov
adc
lods
mov
daa
dec
jnp
jmp
xor
stc
adc
ljmp
cltd
movsb
xor
int
jbe
xor
push
idivl
adc
inc
lds
add
lret
mov
xchg
adc
push
and
cwtl
scas
rclb
scas
mov
sbb
adcl
enter
rol
cmpsb
fistps
movsl
or
xor
jae
adc
mov
ret
fwait
cwtl
inc
out
scas
push
push
inc
push
adc
xchg
ret
aaa
or
sbb
pop
or
dec
sub
dec
imul
sbb
or
mov
dec
mov
addr16
jl
mov
jb
xor
lcall
lea
adc
jne
dec
test
mov
adc
or
es
mov
sbb
int
add
pop
push
sub
pop
sub
stos
xor
cltd
and
cmp
push
and
add
bound
mov
add
add
push
ja
sarb
inc
or
push
mov
in
mov
adc
adc
addr16
adc
insl
int
nop
sub
or
ss
in
or
or
nop
test
rorb
out
pop
pop
fildll
cmp
or
mov
push
popw
popf
and
jnp
sub
je
sub
out
sub
loope
and
and
fsubl
inc
and
mov
sub
xor
call
sbb
ss
push
mov
sbb
fcomi
mov
pop
fcomps
add
dec
mov
push
pop
enter
push
push
fldt
push
rolb
dec
aas
sbb
jo
adc
jne
les
xchg
jmp
jle
out
push
inc
xor
xlat
cs
push
inc
sub
or
push
mov
enter
push
xor
or
jae
xor
or
pusha
mov
mov
and
sbb
adc
inc
push
fs
mov
sub
mov
and
mov
loopne
jbe
mov
or
test
mov
jnp
or
sbbl
test
rorl
fcmovnbe
push
pop
mov
inc
or
cmp
add
mov
iret
push
jae
push
into
data16
cmp
sbbb
sbb
in
or
movsb
sbb
popa
sahf
and
js
nop
shll
inc
pushf
mov
xor
sub
lds
jnp
and
add
push
or
mov
and
sbb
mov
stos
and
inc
cmp
hlt
nop
hlt
adc
ficoml
push
mov
js
jge
ss
lea
or
inc
or
sub
into
push
mov
cmp
fcoms
xchg
push
or
jmp
mov
push
cmp
lock
dec
add
xor
insl
in
add
rclb
fmul
mov
in
js
loop
mov
popf
imulb
adc
xor
daa
imul
orl
add
pop
push
xor
pop
scas
lret
dec
adc
or
scas
aaa
pushf
or
sub
xor
push
lods
stos
int3
sbb
mov
mov
add
add
inc
inc
sub
and
xchg
sub
sub
sbb
mov
lret
and
mov
mov
push
jp
xchg
jecxz
xchg
push
pop
loopne
and
ss
ljmp
dec
fs
pop
inc
inc
push
push
jnp
pop
enter
inc
push
add
jo
and
movsl
xchg
jle
lret
xchg
cld
cmp
popw
adc
mov
daa
fs
dec
jb
in
test
and
je,pn
out
in
cli
jmp
ljmp
xchg
rolb
add
imul
adc
outsb
mov
adc
cmc
inc
add
adc
push
repnz
mov
testl
sub
sub
daa
sbb
lea
jo
dec
and
lea
jl
sub
sbb
jno
scas
insb
data16
in
jg
mov
cmc
jg
mov
notl
push
push
adcl
or
xchg
inc
sbb
jno
repnz
std
sbb
bswap
and
mov
pusha
cmp
loope
mov
jo
filds
mov
aam
jb
dec
rorb
dec
dec
sbb
jl
mov
test
dec
sub
orb
xlat
mov
dec
jno
sbb
lea
add
adcl
adc
add
inc
nop
add
or
pop
inc
xchg
push
pop
jbe
pop
loopne
mov
xorl
jecxz
or
or
das
cs
dec
fimuls
decl
xchg
sbb
cs
or
mulb
adc
dec
sbb
sbb
cmpsl
sbb
xlat
sbb
leave
popf
arpl
fidivl
jbe
add
gs
into
ja
or
adc
adc
pop
dec
ficoml
push
xor
or
stos
pusha
and
mov
sbb
mov
jo
mov
shl
sbb
pop
xor
jge
and
clc
je
or
push
xchg
cmp
subl
adc
clc
cld
mov
stos
xchg
push
rclb
int
test
mov
adc
add
and
shl
shrl
rcrl
or
ds
adc
movsl
push
push
jnp
rol
int3
inc
test
push
push
pop
dec
mov
rcll
sub
or
fcom
xor
cmpsb
add
or
push
adc
push
adc
orb
and
and
sub
xor
sub
and
jg
add
or
flds
inc
xor
rcr
mov
or
add
lds
aaa
loope
push
push
filds
outsl
add
fisttpl
xor
jno
add
xchg
dec
or
sbb
sbb
mov
test
push
or
psrad
int3
mov
cmp
js
push
mov
ret
add
sbb
test
je
push
push
jne
pop
shrb
jbe
cmp
xchg
mov
lods
into
jmp
test
xchg
nop
test
sub
mov
mov
jo
mov
pop
adc
repnz
inc
call
filds
call
dec
dec
adc
adc
aam
add
adc
daa
imul
cmp
test
push
inc
rclb
pop
cli
add
enter
add
ret
push
xchg
mov
int3
cmp
jp
adc
push
mov
sbb
test
add
rolb
pop
and
inc
insl
add
fdivrs
or
add
pop
rorb
adc
imull
and
int3
xchg
push
hlt
pushf
std
add
movsb
mov
fists
sub
push
mov
in
cmp
in
push
inc
jecxz
outsl
je
cmp
sbb
jb
out
lea
orb
arpl
fsts
decb
jl
cltd
mov
rorl
loop
cmc
mov
cwtl
and
aam
out
rclb
fadd
aaa
and
xchg
je
and
add
mov
loopne
or
pop
sbb
mov
dec
ret
adc
inc
cmpsl
inc
je
mov
cmp
inc
pop
mov
in
jnp
es
int3
sbb
pushf
or
fstl
ljmp
push
pop
cmp
jne
xchg
pop
addr16
or
and
cmpsl
adc
adc
mov
push
xor
sbb
push
mov
std
outsb
int3
dec
cs
cmp
lods
xor
les
sub
imull
or
ljmp
out
test
insl
int3
or
add
jmp
scas
sbb
add
pop
dec
cld
arpl
adc
xchg
fmull
test
inc
popa
dec
ds
cmp
inc
js
push
jmp
aas
or
push
jns
cltd
add
push
sub
loopne
rclb
shrl
or
jmp
adc
adc
add
test
push
cld
clc
sub
push
or
push
cmp
stc
or
push
push
jl
mov
fbld
dec
adc
ljmp
sar
mov
mov
rcll
mov
xchg
add
adc
cld
cmp
testb
mov
aam
sbb
mov
mov
lods
mov
xor
std
popf
lds
repz
push
jecxz
neg
addr16
jle
cmc
sarb
or
lcall
pop
mov
sti
test
push
push
or
inc
push
mov
xor
js
pop
inc
mov
lahf
xchg
inc
lahf
sbb
lret
loop
dec
in
or
push
repz
and
dec
jae
xor
jb
dec
or
or
cmpl
cwtl
cwtl
roll
or
xchg
int
inc
push
inc
push
pushf
test
add
sbb
popa
sbb
cli
aaa
sbb
sbb
push
rorl
pushf
das
lock
stos
rorl
and
jae
inc
ffree
inc
jp
sbb
push
mov
pop
push
cwtl
push
mov
dec
fisttpl
stos
dec
stc
mov
jecxz
push
shll
and
test
js
pop
or
test
out
mov
int
insl
inc
push
sub
pusha
sub
mov
xlat
aam
or
cmp
push
ja
xchg
arpl
pop
mov
fdivrs
aaa
push
xor
add
pop
add
rcl
and
imul
xor
adc
rolb
les
mov
push
push
movsw
popf
idivl
mov
jp
jae
inc
cmp
mov
cmp
sub
ja
xor
pop
mov
xor
jg
mov
sbb
push
call
dec
mov
push
xchg
push
sbb
push
mov
push
mov
or
and
ljmp
inc
xor
ljmp
lock
mov
pusha
in
out
and
xchg
push
adc
inc
push
lods
aad
aad
mov
add
pop
jp
sub
mov
fs
lret
push
and
sub
dec
add
inc
push
stos
lcall
xlat
in
fbld
mov
add
loope
out
nop
fs
xor
hlt
arpl
popa
stos
jmp
sti
cmpsb
inc
add
add
sub
dec
in
sbb
outsb
loop
mov
lea
jne
mov
inc
fdivrs
mov
mov
mov
jne
jmp
mov
mov
je
out
dec
test
pushf
jmp
push
cmpsb
das
data16
pusha
lods
or
mov
push
sub
mov
cmp
push
add
aaa
push
iret
or
xor
loopne
mov
outsl
sbb
and
push
fs
xor
push
xlat
test
push
loop
sti
inc
mov
mov
cmpsl
imull
call
mov
pop
xor
add
pop
pop
or
sub
cmp
pop
aad
movb
dec
mov
lret
cli
xor
shrb
xchg
test
test
aam
lcall
adc
gs
push
jne
test
add
or
cs
jge
mov
xchg
jo
je
ret
add
jns
and
sbb
or
sbb
test
sbb
or
add
ret
inc
pop
adc
aaa
push
ret
and
fcomps
add
sbb
popl
and
sub
inc
mov
mov
sarb
and
test
xor
push
cmpsb
dec
iret
mov
dec
ljmp
adc
shrl
ds
sbb
adc
daa
mov
push
mov
dec
or
xor
fadds
push
mov
ffreep
pop
push
subl
and
inc
cld
shrb
adc
pushf
jo
xchg
ret
and
xchg
jbe
adc
sbb
sbb
dec
aad
xor
scas
adc
push
fbstp
out
nop
pop
add
mov
cmpsl
repz
dec
xchg
push
cmpsl
mov
nop
outsl
mov
inc
repnz
sub
adc
dec
cmp
clc
inc
subl
sbb
and
mov
and
mov
fwait
nop
and
push
sahf
and
test
fadds
add
sarb
xor
rcrb
inc
add
or
pop
rcl
mov
xor
cmpsb
adc
fwait
out
mov
and
aaa
dec
sbb
mov
ret
lret
pop
movsb
lods
daa
add
ja
inc
and
sub
pop
and
adc
cltd
hlt
add
data16
xchg
sub
xchg
or
bound
pop
nop
push
pop
and
and
test
mov
or
lahf
or
fwait
cmp
sbb
xchg
or
and
imul
out
add
out
sub
push
popl
jg
pusha
pop
ja
movl
orl
sub
mov
or
jnp
xor
push
and
hlt
and
lea
mov
hlt
add
imul
cli
ret
arpl
sarb
xlat
jl
add
lock
cmp
ret
outsb
js
lahf
add
lret
fidivl
pop
aam
or
dec
pop
mov
loop
sbb
xchg
in
scas
or
rorb
or
mov
adc
xchg
jne
and
mov
dec
mov
idivb
mov
loop
sub
add
inc
test
fmuls
cltd
das
mov
arpl
iret
or
mov
popa
or
xor
rclb
inc
cli
inc
std
push
in
push
cmp
pop
enter
fbld
adc
mov
inc
cs
sub
or
push
cmc
negl
inc
mov
mov
mov
push
lods
push
mov
fstps
xchg
cmp
and
fimuls
mov
loop
dec
push
sbb
adc
add
in
xchg
mov
sahf
cmp
cmpsl
mov
insb
movsl
leave
movsl
xchg
call
adc
and
andb
cwtl
movsb
cmp
mov
pop
arpl
gs
jno
push
sub
fiaddl
pop
or
mov
mov
adc
movsb
adc
adc
mov
dec
sub
hlt
mov
sub
cmp
mov
push
mov
mov
adc
mov
mov
jl
and
call
xchg
push
in
inc
or
add
sub
bound
pop
mov
lea
in
and
ja
jmp
ror
xor
adc
cmpsb
adcl
lea
adc
and
mov
dec
testb
add
mov
add
push
nop
push
adc
clc
xor
xchg
sub
nop
inc
xchg
movsb
rclb
cld
and
ss
lods
scas
dec
mov
sbb
mov
pop
adc
add
add
sarb
sbb
lahf
psraw
pop
dec
mov
lahf
push
neg
or
adc
pusha
inc
mov
mov
dec
out
leave
aam
lds
outsl
or
add
lea
xchg
out
adc
lahf
sub
adc
std
inc
add
inc
fdivl
add
push
add
cld
aam
xor
lock
xor
into
add
jno
test
push
xor
dec
push
push
jge
push
mov
fwait
dec
sbb
test
mov
lahf
mov
push
mov
mov
ds
sbb
push
mov
mov
cmp
test
fbstp
mov
pop
push
xchg
or
leave
jo
jl
sti
pop
out
mov
sub
mov
sbb
imul
nop
mov
lea
fists
adc
int
subb
xchg
add
jp
or
cmp
jne
dec
fs
xchg
aam
test
pop
jle
lds
or
cmp
ret
inc
loope
sahf
cmp
mov
inc
adc
mov
outsl
mov
sbb
xor
adc
arpl
mov
aaa
dec
or
aas
fsubs
xor
rorl
jmp
add
mov
addr16
fisttps
push
inc
adc
jb
in
inc
xor
and
cli
pop
cmp
sub
pop
xor
cmp
mov
je
dec
std
sbb
push
add
cmp
sbb
jno
push
sub
cmpsb
mov
xchg
test
cmp
adc
dec
inc
ljmp
das
pop
inc
push
sub
pop
push
mov
push
xor
xor
loopne
add
cmp
cs
test
lea
xor
sbbl
mov
or
xorl
and
arpl
add
cmp
push
or
add
pop
jb
sub
sahf
inc
adc
scas
cmp
jp
jae
mov
cmp
xor
sub
dec
and
andl
dec
xor
add
pusha
leave
sbb
sub
add
inc
test
add
lret
shl
mov
mov
cmp
adc
adc
mov
sub
push
xchg
imul
push
inc
add
inc
popf
adc
mov
dec
add
push
in
mov
sub
xor
divl
addl
loop
bound
clc
xor
andl
lock
dec
imul
dec
sub
test
imul
loope
fwait
out
cmp
movsb
mov
pop
orb
rorb
mov
xor
push
mov
push
lea
test
push
pop
push
xor
push
cmp
pop
mov
adc
pop
add
push
add
inc
xchg
test
iret
push
cmp
push
adc
call
push
mov
and
xlat
dec
mov
inc
loope
xchg
lock
pop
add
pop
into
jb
cltd
xchg
push
add
push
sarl
push
fdivrl
stos
bound
mov
test
xorb
ss
addr16
pusha
cld
cmp
or
enter
cwtl
inc
imul
inc
and
push
push
rclb
pop
rolb
sbb
mov
sbb
mov
xor
or
fstpt
enter
test
mov
jmp
cs
aad
mov
pop
icebp
jo
push
popf
pop
and
adc
inc
xchg
pushf
pushf
pop
pop
pop
pop
pop
and
and
pop
pop
push
or
push
pop
sarl
in
fs
and
pusha
fs
enter
sbb
jb
and
cmp
mov
insb
push
mov
pop
xchg
xchg
xchg
xorl
jo
je
dec
push
orl
xor
sub
fnsave
dec
fadds
loope
data16
mov
arpl
push
aaa
jge
mov
out
pop
sub
test
adc
fdivrs
lea
or
inc
movsb
fisubs
inc
xor
mov
mov
push
pop
cmpb
cmp
iret
push
and
or
adc
lea
or
dec
push
push
push
adc
test
outsb
loope
inc
cmpsb
fadds
stos
push
push
or
or
dec
sbb
mov
inc
inc
movsb
les
lock
xor
jo
fiadds
xor
mov
mov
fstpt
sub
adc
outsb
mov
sbb
fwait
lods
pop
jecxz
fadds
aam
add
push
orl
pop
jnp
imul
imul
or
cld
leave
push
jo
mov
sbb
inc
sbb
dec
sbb
lea
cmp
xchg
or
xor
push
enter
mov
lods
cmp
int
jb
and
sbb
inc
jo
shll
and
sbb
xor
xchg
pop
sbb
push
and
mov
jbe
add
pop
sbb
add
lock
xor
adc
push
jno
inc
pop
mov
sti
push
inc
xor
mov
or
test
or
pop
adc
popa
sub
and
sbb
cltd
in
sbb
mov
jo
cmp
inc
sbb
into
dec
adc
jmp
lock
faddl
cs
push
sbb
and
sbb
mov
test
aas
ljmp
pop
add
rorb
lret
pop
mov
inc
adc
adc
jmp
mov
mov
push
xchg
mov
and
push
mov
push
sub
mov
ret
push
jb
outsb
jmp
and
xchg
js
mov
dec
pop
push
imul
pop
cwtl
xchg
cmp
or
xor
mov
push
imul
rorb
mov
adc
or
or
xlat
mov
jg
add
and
mov
mov
sub
xor
mov
stos
mov
adc
rcrl
js
mov
push
push
and
push
fnstcw
jno
int3
daa
jno
mov
orl
mov
lods
pop
mov
add
cmp
pop
mov
rol
mov
in
lods
out
mov
imul
push
sbb
call
and
in
lret
mov
rorb
mov
fmuls
push
sub
cmpsl
orl
pop
sbb
inc
lods
shll
dec
inc
xlat
push
jb
dec
ffreep
test
inc
inc
or
scas
fadd
aaa
subb
jle
mov
loope
jge
cmp
addr16
push
cmp
mov
adc
popa
leave
sbb
adc
popa
lods
xchg
ret
jmp
into
xor
xor
xchg
pusha
jne
sub
test
sbb
pop
mov
mov
push
push
in
or
imul
dec
iret
dec
add
pop
mov
lock
sahf
cmpsb
enter
xor
or
inc
imul
push
movsb
pusha
lock
or
mov
dec
je
adc
pusha
je
test
out
pop
xchg
push
and
pop
push
fbld
dec
mov
xchg
xchg
xchg
pop
push
push
sub
mov
fsubrs
pop
mov
sbb
xchg
jnp
fstpt
mov
shl
or
xor
ja
add
or
pop
js
xchg
test
daa
gs
sub
stos
nop
push
jns
xchg
adc
mov
test
pop
or
nop
add
mov
pop
add
pop
in
int3
ds
or
dec
call
xchg
or
sub
into
sub
pop
clc
pop
into
push
outsb
cmpps
dec
lods
dec
test
pop
insb
sub
cmp
adc
jle
jge
sbb
cmp
ja
scas
adc
jecxz
lret
inc
insb
jle
or
int3
mov
dec
mov
pop
popa
aaa
xchg
in
inc
icebp
pusha
sahf
imulb
bound
add
add
or
stos
sub
push
sbb
sbb
or
jno
test
pop
dec
xchg
or
rolb
dec
sub
mov
inc
or
or
pop
adc
insl
adc
lahf
sub
add
mov
mov
je
mov
pop
inc
mov
and
insl
loope
mov
dec
pop
mov
or
inc
xor
cmp
insb
jl
pop
push
mov
push
mov
or
cmpsl
jge
je
push
push
push
push
data16
aas
pop
cmp
cmp
add
sbb
or
push
loopne
int
push
push
movsl
lods
inc
sub
or
xchg
enter
and
mov
xor
pop
xor
xor
pop
xchg
push
pop
sub
jno
pop
lea
jne
adc
dec
test
sub
fldt
mov
jle
push
lea
mov
shld
sub
mov
push
rorl
sub
test
add
loope
jle
sub
inc
mov
jg
mov
xchg
inc
mov
cli
cmp
mov
xchg
adc
xor
clc
mov
pop
jne
mov
add
and
push
lcall
dec
pusha
jo
push
xchg
mov
orb
mov
jnp
sbb
xor
dec
push
popf
cmp
jae
lcall
testb
flds
xchg
pop
and
mov
mov
mov
mov
dec
push
xchg
ret
loop
test
ret
cmp
test
ret
sbb
pop
cmp
push
rorl
inc
fcoms
jo
inc
notb
sub
cld
sbb
and
dec
adc
adc
sarl
or
ljmp
pusha
test
in
hlt
cmp
jne
cmp
jne
ret
pop
add
loop
shlb
or
dec
cmpsl
stos
sub
xor
roll
mov
adc
movl
pop
and
cs
or
push
enter
dec
rol
lds
push
mov
xlat
arpl
roll
ret
mov
sarl
xchg
ret
je
pushf
xchg
js
rcrb
add
mov
fiaddl
jb
enter
adc
je
pop
sbb
lret
dec
and
les
sub
adc
push
jmp
scas
or
in
je
cmpsb
push
and
and
je
leave
add
jb
push
cltd
je
repnz
pushf
push
sbb
enter
cmpl
xchg
cld
je
add
sbb
movsb
pop
dec
scas
sub
in
mov
push
add
imul
or
in
xchg
dec
pop
sub
mov
push
mov
mov
sahf
fidivs
push
push
mov
add
adc
pop
gs
test
movsb
stc
jne
mov
push
add
movsl
ds
push
pop
aaa
mov
les
aam
jbe
jae
cmc
xchg
inc
fcmovb
adc
loope
fwait
push
movsl
in
sub
loope
fsubl
inc
pop
lea
mov
dec
mov
lea
outsb
add
or
imul
fidivrl
adc
add
out
fwait
in
add
aam
mov
mov
cmp
jg
xor
dec
test
push
pushf
ja
push
cmp
cmp
push
inc
ljmp
mov
lock
and
dec
jmp
dec
out
popa
inc
sbb
inc
add
test
push
xchg
xor
sub
adc
imul
xchg
jbe
xchg
shlb
pop
jmp
fwait
pop
nop
or
ss
push
outsb
jnp
or
pop
mov
loopne
imul
pop
out
rcll
out
add
sbb
and
scas
xchg
lret
ds
test
cmpsb
loop
push
mov
sub
insl
push
movl
add
xor
lcall
out
lods
xchg
cli
adc
add
push
and
daa
adc
pop
fdivrs
mov
scas
dec
add
mov
or
jo
ljmp
mov
xorl
or
dec
loope
lods
cmp
xor
ror
mov
rcl
mov
push
mov
out
push
mov
jnp
imul
mov
into
sub
sar
inc
repnz
movsl
loopne
pushl
push
mov
insb
push
jns
inc
cmp
rolb
dec
inc
inc
or
pop
insb
ds
add
dec
fisttpl
mov
fistl
repnz
mov
xor
sbb
sbb
outsb
movsb
push
xor
repnz
ret
xchg
sbb
jmp
pop
mov
xchg
xor
jecxz
xchg
mov
popa
icebp
loope
dec
or
fs
add
decl
test
xchg
fld
and
push
ja
cmp
je
sbbl
imul
cmpsl
mov
scas
dec
bound
pusha
pop
mov
and
push
pop
outsb
pop
repnz
and
jno
fnsave
add
dec
in
adc
rorl
stc
add
add
dec
mov
jb
jmp
stos
sbb
adc
dec
rorb
dec
inc
loop
pop
dec
in
push
jb
rorl
jmp
je
sbb
enter
pop
push
push
push
jmp
orw
inc
arpl
inc
or
inc
jnp
mov
xchg
mov
jns
shl
and
aas
pop
push
add
mov
push
repnz
pop
push
adc
sub
pop
pop
push
dec
sub
pop
push
fcoms
js
push
mov
and
cmpsb
lods
subl
or
pop
add
push
adc
inc
outsb
lret
fmull
test
andb
push
aam
adc
movb
ret
inc
adc
rclb
xchg
mov
int
cmp
sbb
je
inc
sub
sbb
mov
mov
sbb
stc
sarb
sbb
mov
jp
subb
push
xlat
cli
xor
movsl
mov
push
mov
mov
lods
mov
ficompl
sub
jbe
enter
and
lds
xor
ret
fcmove
pop
xor
cmp
cmp
mov
ret
add
cmp
testl
inc
mov
mov
stc
sbb
or
dec
mov
mov
dec
ds
pop
jo
testb
pop
sbb
mov
push
pop
and
adc
stos
pop
mov
inc
adc
rolb
aam
int3
cmpsb
sbb
xlat
jge
adc
loopne
sub
sbb
adc
jbe
pushf
mov
inc
push
into
xor
movb
push
push
sub
xchg
shrb
test
fcomi
imul
loope
dec
dec
pop
adc
pop
arpl
mov
and
mov
push
mov
and
jmp
addr16
sub
jle
sbb
lods
pop
lods
mov
pop
jno
daa
push
cmp
mov
lds
call
xor
jl
adc
mov
jne
jno
jo
lds
out
add
cmp
rol
mov
mov
and
add
sub
repnz
push
lahf
scas
inc
scas
test
pop
push
sub
fdivs
shrl
test
adc
sbb
addr16
push
pusha
fildll
nop
push
push
popf
xor
sub
rcrb
imul
inc
fistpl
fistps
dec
pop
add
add
test
pop
pop
add
push
pop
pop
inc
mov
enter
mov
add
stos
sbb
jb
and
xchg
jb
fisubs
dec
cs
xchg
inc
inc
push
test
fsub
filds
nop
cmovb
xchg
pop
add
in
jno
popa
bound
pop
add
dec
pop
pop
mov
lea
inc
inc
jns
xacquire
jp
pop
pop
sbb
pushf
or
inc
xor
decl
es
jle
pop
pop
inc
enter
js
pop
inc
pop
pop
fwait
cmp
push
jns
jp
aad
add
leave
and
and
inc
add
push
leave
inc
jl
pop
shlb
dec
call
inc
jbe
inc
shrb
add
mov
repz
sbb
inc
inc
adc
push
stos
cmp
pop
add
stos
loop
adc
mov
add
or
push
sub
adc
insl
add
mov
push
jns
jge
push
insb
pop
dec
or
jb
inc
jg
push
xor
fs
pop
fs
mov
inc
adc
mov
sub
jbe
adc
or
in
sbbb
in
cmpsb
cmp
nop
insb
adc
jb
repnz
inc
adc
inc
insb
xor
xor
adc
add
inc
adc
adc
leave
xchg
pop
adc
dec
cs
inc
adc
dec
add
mov
nop
adc
add
dec
leave
adc
mov
mov
adc
incl
mov
pusha
adc
adc
add
mov
nop
mov
mov
mov
cmp
adc
cmp
mov
adc
adc
inc
sbbb
pusha
dec
js
dec
or
add
fstl
and
sub
and
add
and
jb
insb
pop
insb
add
jae
jmp
xchg
adc
mov
inc
jl
out
pusha
xor
imul
push
adc
adc
mov
adc
adc
rorb
insb
and
pop
insb
mov
and
mov
or
add
test
pushf
test
lods
imul
adc
add
fistps
inc
enter
je
and
enter
or
add
test
je
cmp
das
mov
mov
and
adc
cmp
cmp
dec
add
fcompl
sub
inc
push
jns
mov
popa
sub
xchg
sbb
fs
rol
loopne
aam
adc
leave
mov
cltd
enter
add
xchg
mov
fnstcw
mov
jecxz
rorl
mov
call
in
xchg
push
push
fdivl
xor
fwait
inc
push
and
and
push
mov
out
outsl
add
add
adc
add
addl
mov
push
leave
sub
xor
dec
adc
xor
push
adcl
leave
vandps
icebp
or
call
sub
dec
pop
and
mov
sub
jns
sub
pop
mov
out
add
lea
inc
lea
loope
sarb
call
loope
mov
and
jp
das
mov
mov
cmp
shll
repnz
ret
daa
mov
js
test
aam
ljmp
dec
sbb
jb
add
pop
pop
pop
inc
push
and
cmpsl
mov
nop
and
cmp
nop
out
inc
inc
xchg
fwait
xor
sbbl
pop
mov
cwtl
xchg
cwtl
adc
jb
sub
nop
or
inc
pop
adc
pop
movsb
nop
mov
inc
cmpsb
and
pop
add
sbb
pop
pop
add
pop
xchg
test
inc
inc
enter
adc
orb
xchg
insb
jg
inc
cmp
pop
in
sbbb
je
sub
push
leave
sub
jno
inc
push
and
inc
push
or
xchg
sub
xor
push
movsb
mov
adc
hlt
adc
aad
loope
mov
pop
mov
push
or
push
inc
out
enter
dec
push
lock
sub
les
aas
and
xchg
push
cli
das
cli
push
ljmp
adc
test
ret
push
jne
xor
dec
sub
ficoms
xchg
push
pop
sti
pop
inc
repz
jmp
mov
iret
mov
sbb
bnd
aas
inc
lahf
adc
jns
sbb
ja
xchg
pop
mov
jne
mov
xor
rcll
pop
sbb
leave
rcrb
subb
and
int
sub
push
shlb
mov
or
clc
pop
repz
push
ljmp
sub
push
fs
push
shlb
addb
mov
dec
push
or
push
call
sub
pop
pop
pop
cmp
lods
push
push
stos
mov
or
nop
inc
pop
nop
pop
or
in
or
push
cmpsl
xchg
add
test
pop
sbb
sbb
in
inc
pushl
add
insb
or
les
outsl
dec
mov
testl
pop
clc
fs
popf
fmull
shrb
pop
cs
sub
sbb
xchg
and
or
movsb
outsb
sub
mov
je
push
add
push
cmp
pop
add
incl
add
jecxz
outsb
imul
je
and
add
and
fs
or
pop
mov
sub
xchg
pop
cmp
xchg
push
push
aam
cmp
negl
or
and
sub
lret
mov
scas
lods
push
push
mov
mov
sub
push
test
call
int
outsb
push
push
push
sti
call
int
ret
data16
movsl
fadds
xchg
push
inc
xlat
test
ret
daa
add
sub
pop
pop
cli
pop
test
jmp
jnp
or
jnp
inc
cmp
and
lret
pushf
xchg
add
and
iret
mov
aaa
push
sbb
test
push
sbb
ret
add
insl
pop
call
mov
pushf
sub
sub
xor
sbb
pop
push
cmp
jl
fstps
arpl
inc
lret
je
jp
jb
insb
ss
ret
fnstsw
and
push
ljmp
pop
clc
cmp
roll
mov
sub
or
and
out
sahf
imul
mov
les
jp
sbb
ret
sbb
arpl
cmp
aas
add
std
add
and
into
sbb
pop
pop
movsl
rorl
das
test
ss
fisttps
enter
jne
jne
testl
mov
and
lret
add
add
je
add
adc
adc
and
scas
add
xchg
jg
jo
je
lea
mov
pop
lds
test
imul
mov
je
out
je
mov
dec
fiadds
mov
cmpsl
add
sbbb
call
jo
fisttps
mov
cmp
jbe
mov
push
lea
push
push
dec
mov
push
loope
jmp
pop
sub
jb
std
xchg
fidivs
cmp
jne
push
pop
mov
aaa
dec
in
shrb
push
inc
negb
shrl
sarb
and
pop
test
mov
jne
imul
jmp
mov
ss
xchg
mov
jle
xor
add
out
jl
lock
and
mov
lret
xchg
pop
pop
insb
mov
lea
das
and
adc
add
in
clc
jns
push
push
nop
pop
imul
and
add
rclb
xlat
push
sbb
xchg
pop
pop
nop
lahf
adc
or
iret
xor
xchg
or
inc
outsb
cwtl
je
and
mov
shlb
shlb
bnd
pop
mov
mov
inc
adc
lods
test
add
std
cmc
jl
pop
or
or
lock
or
ja
movsl
xor
inc
les
inc
lods
lods
adc
inc
add
outsl
push
pop
xor
mov
mov
js
call
cli
je
push
insl
jno
mov
jne
pop
add
pop
sub
mov
cs
xor
cs
in
in
mov
stos
inc
dec
repnz
xchg
sub
cmp
xchg
sub
sub
popa
nop
cmp
adc
add
jb
in
lahf
cmpsl
pop
xchg
sub
mov
pop
and
push
pop
lahf
lea
je
lahf
pop
ljmp
push
cmp
ret
adc
daa
out
adc
outsb
mov
lret
and
rolb
jecxz
rcrb
push
sbb
push
mov
in
adc
push
mov
mov
insb
insb
xor
add
nop
sysenter
inc
sub
inc
adcb
cld
enter
inc
into
sub
push
gs
add
or
cmp
push
sbb
fmull
aas
add
les
pop
dec
adc
orb
add
lock
lds
dec
dec
test
inc
xchg
inc
pop
inc
je
int3
push
lahf
pop
pushf
popa
lds
and
lahf
sub
mov
sub
aas
push
sbb
add
push
insb
daa
test
add
adc
sbb
add
or
and
jp
cmp
inc
add
add
push
mov
push
jge
sbb
sub
je
jo
mov
hlt
insb
fwait
inc
and
loopne
bound
ljmp
lret
push
cli
mov
xor
push
fsubr
insb
jne
mov
js
popf
pop
jp
jo
push
pop
push
mov
scas
data16
push
hlt
pop
stos
jg
test
push
xchg
les
test
mov
into
dec
inc
xor
and
adc
xchg
and
sti
push
sub
sub
cmp
or
inc
lea
or
inc
lcall
xor
shrb
add
or
push
mov
dec
cmp
cli
add
pop
mov
jne
mov
push
ds
pop
xor
mov
or
nop
and
cld
fnsave
push
push
push
fwait
cmp
push
mov
je
push
cli
pushf
mov
jg
rcrl
jmp
ja
jb
cmp
in
mov
inc
std
sub
lcall
lods
std
sub
mov
mov
sti
mov
pop
cmp
jbe
pop
push
imul
jbe
mov
lahf
shlb
shrb
inc
ja
mov
je
sbb
push
dec
cwtl
popf
xchg
fidivs
sub
cmc
add
push
fnstenv
mov
movsb
jb
ja
cmp
add
pop
aam
outsb
sbb
and
push
sub
fwait
cwtl
ljmp
out
push
dec
jne
sbbb
mov
out
sub
sbb
add
sub
into
ss
xor
add
je
push
push
testb
popf
enter
cmpsb
pop
mov
scas
movaps
lea
test
pushf
mov
push
mov
inc
or
test
sub
cmp
sahf
not
and
xor
or
dec
cmpl
mov
pop
add
xor
mov
push
sub
cwtl
hlt
test
mov
or
adc
pushf
cli
mov
xor
add
and
scas
insb
and
dec
or
dec
pusha
rclb
mov
pop
repz
cwtl
add
pop
aaa
aam
push
add
fistpll
xor
cmp
jne
or
xor
cmp
lret
dec
int
es
inc
or
lds
ljmp
push
imul
push
in
push
push
aaa
xchg
dec
xchg
inc
xorl
pop
lods
mov
sub
or
shr
ret
cmp
test
dec
sbb
rcrl
push
rorl
outsl
jnp
repnz
shrl
dec
or
rolb
into
jg
sbb
adc
push
sub
fcompl
jg
xor
adc
dec
rcll
pop
xor
xchg
sbbb
sub
dec
lods
roll
adc
push
push
sub
jbe
loopne
push
sarb
ret
mov
inc
dec
ja
test
mov
sub
cld
je
jns
mov
cmp
xchg
cmp
and
push
sub
push
push
xor
add
lds
push
cwtl
movl
push
lds
nop
in
mov
pop
dec
iret
pushf
push
bound
jbe
mov
push
into
mov
mov
cmp
push
enter
jbe
push
mov
dec
adc
outsb
es
hlt
mov
pop
dec
imul
push
test
mov
in
mov
pop
sarb
pop
sbb
push
jo
loop
popa
ficomps
add
addl
pop
push
lock
or
mov
mov
mov
cwtl
or
jo
call
addps
div
shlb
cmp
mov
adc
loopne
pop
xchg
sbb
jo
int
mov
xchg
adc
pop
mov
xor
push
inc
inc
cmp
sbb
mov
push
push
das
cwtl
ret
mov
cmp
xor
xchg
add
add
and
push
push
sub
adcl
sub
xor
mov
add
ss
jo
subb
adc
sub
je
or
mov
sub
xchg
aaa
test
test
jmp
mov
push
ficoms
push
add
dec
push
or
push
fisttpl
pushf
inc
shl
jmp
gs
mov
in
dec
cmp
mov
or
jmp
mov
mov
popf
mov
fisttpl
mov
adc
je
xchg
rclb
xor
add
divl
xor
and
mov
or
cs
stc
stos
or
ret
cmp
inc
shrb
add
push
push
fcom
cs
rcll
fsubs
andl
icebp
loope
sub
pop
cld
daa
jns
or
jle
add
ret
sub
cmpsl
pop
push
scas
clc
or
aaa
mov
mov
mov
inc
out
iret
add
sub
insb
cli
inc
push
mov
test
xchg
jne
jo
or
rcrb
mov
push
iret
or
test
das
pop
mov
lcall
pop
fwait
in
push
pusha
fisubrl
add
xchg
fadds
pop
jne
cltd
sahf
test
or
cmp
pop
pop
jb
add
shl
and
inc
cmp
outsl
push
or
jg
sub
jge
jl
lea
pop
lea
sub
popa
jnp
push
inc
adc
mov
dec
mov
pop
adcl
int3
dec
xchg
push
mov
xchg
or
jnp
xchg
jnp
or
add
incb
inc
ret
adc
adc
push
jne
pop
pop
lods
aas
lcall
inc
test
dec
xor
mov
outsb
ret
ss
sub
xor
shll
sbb
push
jg
xor
pop
fisttpl
cltd
jge
roll
inc
sbb
push
mov
out
aad
jne
aaa
xchg
mov
jno
cmpsl
dec
dec
lret
imul
jae
cmpb
pop
cmpsl
shll
sbb
push
sarl
int3
xor
xor
jo
pop
sbbb
mov
pop
incl
sbb
mov
scas
cmp
cmc
push
and
inc
dec
or
add
stc
add
add
fmull
adc
je
jnp
dec
add
iret
mov
mov
mov
fsubrl
mov
ds
jmp
push
push
cld
orb
and
jmp
jno
pop
mov
push
and
faddl
adc
js
mov
add
xor
and
or
push
jbe
clc
popf
sbb
clc
mov
lods
push
dec
rcrb
adc
pop
add
add
xor
cmc
inc
sub
cmp
in
xor
repz
mov
jp
sub
iret
mov
dec
and
sbb
cmp
aad
leave
mov
add
dec
jmp
pop
pop
das
adc
sub
mov
rorl
ljmp
adc
push
dec
fbstp
mov
in
mov
in
inc
inc
inc
mov
and
adc
adc
or
fimull
push
aad
inc
mov
inc
jge
mov
ljmp
mov
or
add
adc
push
push
push
and
stos
test
hlt
dec
sub
pushf
xchg
and
je
inc
fwait
mov
jno
xor
push
cld
push
roll
lea
inc
and
aad
mov
ss
sbb
inc
and
sbb
mov
fs
dec
test
mov
pop
adc
aaa
nop
adc
push
push
and
jb
dec
xchg
and
or
popa
loope
adc
push
ja
jo
cmp
jg
jo
js
inc
jno
cmp
mov
popa
pop
mov
or
lcall
jg
jl
jg
je
pop
scas
push
sub
ret
xchg
pop
sbb
mov
push
int
inc
sub
push
enter
xlat
inc
inc
dec
xor
jb
decl
jb
enter
or
push
xor
inc
adc
push
rorl
setg
sbb
movsb
adc
sbb
add
xor
add
xchg
or
xchg
mov
sub
push
or
pop
inc
add
aam
xor
std
popa
jb
adc
lahf
push
movsl
cmp
adc
add
and
jo
jae
pusha
mov
jge
push
pop
dec
outsb
cmp
movl
mov
inc
and
mov
sbb
sub
add
jbe
add
inc
loop
dec
into
push
call
mov
aam
and
adc
inc
loope
iret
add
add
and
pop
add
test
sbb
adc
add
lea
rorb
and
adc
and
stos
fldt
xlat
add
scas
cmp
call
aaa
clc
out
les
ror
mov
cmp
hlt
xor
ret
in
xor
shrl
jns
dec
xlat
mov
jns
xchg
inc
or
adc
popf
daa
jne
insl
cs
jno
add
xor
daa
outsl
lods
inc
test
dec
mov
add
adc
or
inc
not
mov
adc
inc
mov
sbb
adc
xorl
inc
xchg
jbe
inc
add
pushf
dec
push
sbb
inc
push
dec
or
pause
mov
dec
movsl
jbe
or
sub
mov
push
push
hlt
xor
dec
fistl
or
cmp
sub
add
push
repnz
add
lea
mov
mov
scas
mov
xor
addb
and
les
pusha
adc
leave
jne
mov
ja
rolb
rcrl
mov
xor
fistps
lea
rolb
pop
sbb
xchg
stc
jo
je
adc
ret
xor
dec
or
xchg
push
rcll
and
outsl
add
or
jmp
pop
and
scas
popf
fiaddl
and
mov
adc
or
sbb
ljmp
dec
ret
add
mov
aaa
sub
push
out
push
icebp
dec
dec
push
push
daa
sbb
xor
add
mov
jl
lret
mov
mov
jg
or
movb
push
dec
aam
jne
jno
mov
jp
sbb
or
jbe
lahf
dec
push
adc
sbb
xchg
sub
mov
fs
push
sub
mov
inc
push
sub
sub
sub
cmpsl
cltd
add
fcomps
into
and
or
loopne
js
test
and
and
dec
jmp
loopne
add
add
mov
pop
cli
xorb
jne
xchg
jne
pop
mov
data16
sbb
lcall
lret
mov
incb
pusha
sbb
jbe
xorw
jmp
inc
dec
sub
dec
into
ljmp
pop
push
fwait
or
mov
cmp
ja
imul
cmc
je
mov
lods
cmpsb
mov
aaa
or
jecxz
pop
call
adc
push
subb
roll
mov
sub
movsb
and
mov
sub
mov
call
shlb
lods
add
idiv
cmp
sbb
or
sbb
push
push
pop
daa
add
mov
rcrb
loopne
adc
daa
xchg
mov
mov
addb
ret
pop
ja
pop
pop
dec
push
push
push
push
xor
xchg
mov
sbb
mov
adc
mov
pop
push
mov
xor
pushw
cmp
cmc
outsl
add
pop
int3
js
add
lds
inc
adc
jp
pop
sarl
jg
aad
xor
cltd
mov
into
nop
add
inc
sub
cs
mov
sbb
xor
jb
mov
push
push
sbb
or
fcoml
pop
add
inc
adc
sbb
adc
lock
andl
sbb
mov
mov
adc
fadd
lods
dec
fnstsw
fstl
mov
add
push
mov
sbb
add
add
test
mov
cmp
out
inc
or
insl
pushf
push
icebp
mov
push
in
xor
dec
ret
pop
inc
movsl
insl
cmp
mov
dec
pop
push
sub
bound
ljmp
mov
add
imulb
add
mov
jmp
mov
sbb
lds
jns
sbb
pushw
insl
push
dec
push
push
push
jns
cmp
dec
mov
pop
xor
dec
xor
mov
in
jno
add
adc
add
or
mov
cmpsl
and
inc
or
pop
cmp
add
cli
test
scas
inc
xchg
pop
aad
pusha
jo
dec
mov
roll
mov
jae
mov
mov
jb
push
push
stc
es
pop
jnp
xchg
pop
imul
cli
cmp
sbb
lahf
push
xchg
mov
outsb
js
test
jg
shl
sub
push
movsl
insb
dec
jl
sahf
push
pop
int3
lret
or
or
pop
adc
ja
mov
mov
repnz
outsl
push
adc
enter
aas
dec
xor
lods
fildl
fbstp
fstl
add
mov
outsb
andl
sub
inc
out
fs
add
mov
enter
or
fildl
andl
or
inc
inc
inc
call
loopne
loopne
xor
pop
add
out
dec
pop
cs
xor
std
inc
pop
cmp
shrb
lods
movsb
jg
adc
mov
bound
enter
mov
lods
mov
stos
jge
sahf
fiadds
stos
or
ret
adc
jl
jp
lock
push
push
mov
xor
add
pop
mov
mov
sbb
sub
bound
sti
add
dec
mov
outsb
cs
dec
push
push
mov
adc
data16
in
pop
sub
sub
out
dec
cmpsb
imul
push
push
cwtl
fdivs
xor
mov
sbb
mov
js
pop
jo
rcrb
jmp
mov
push
mov
jmp
fisubrl
or
fmuls
adc
outsl
dec
cld
mov
neg
pop
dec
lret
sub
push
mov
mov
inc
andl
mov
mov
xchg
fucomp
push
rcrl
pop
aas
icebp
daa
ds
jno
inc
and
loop
cmp
js
dec
sbb
outsb
loopne
fistl
outsl
nop
cmp
jns
cmp
push
adc
xor
xor
rcl
mov
sbb
fsubrs
jo
divb
adc
or
outsb
jmp
jp
xchg
or
jns
push
pop
les
jmp
call
mov
stc
in
add
pushl
hlt
in
ss
rcrb
or
adc
push
mov
andb
mov
cmp
mov
jb
ja
adc
fiadds
jbe
mov
push
aam
or
or
aaa
sbb
mov
cmp
outsb
cmp
jmp
xchg
lcall
addl
mov
mov
test
je
add
mov
clc
je
mov
popf
inc
sti
inc
dec
ss
xchg
dec
sbb
jecxz
call
sbb
stos
pop
sbb
pop
push
sarb
rcrl
pop
push
movsb
sbb
push
sbb
cmp
repz
xor
int3
in
lahf
sub
and
and
push
je
or
adc
add
add
mov
mov
aaa
je
add
cmp
in
xor
lea
les
xor
xor
loop
cmp
rorl
sbb
push
push
rclb
pushf
or
push
cli
iret
outsl
sbb
or
dec
in
add
and
add
push
into
fs
je
xchg
mov
imul
pop
pop
jecxz
in
fisttpll
cmp
shll
and
and
dec
sbb
lock
sbb
xor
cmpsb
mov
movsl
sub
inc
and
inc
mov
mov
data16
lds
sub
enter
pusha
push
cmp
jl
dec
dec
adc
dec
jno
add
or
inc
or
mov
les
fs
and
push
xorb
cmp
outsb
sub
adc
mov
pop
enter
ret
pop
jne
fiaddl
adc
pop
lods
shl
lcall
push
enter
add
je
sub
outsl
dec
shrl
add
mov
push
or
and
lcall
push
frstor
push
and
cs
sbb
or
popl
shl
dec
sub
sbb
adc
add
test
fs
jg
rorl
cmp
add
je
cmp
je
cmp
je
lea
xor
inc
add
push
cmp
popa
mov
jns
jecxz
pop
sub
sbb
ret
add
jo
fsts
daa
rcrl
push
clc
add
inc
aam
hlt
adc
jnp
cmpb
inc
sub
or
mov
mov
add
movsb
outsl
ret
test
mov
cmp
inc
test
or
adc
mov
fistpll
xchg
mov
or
sbb
notl
notb
insl
aam
rorl
inc
orl
or
loope
sahf
cmp
jle
mov
add
dec
jmp
xlat
faddl
movsbl
add
mov
mov
mov
cmp
mov
xlat
cmp
mov
popa
loopne
ret
rclb
inc
pavgb
adc
inc
xor
cmp
push
cmp
lods
hlt
dec
pop
das
add
out
movb
and
jmp
dec
cmc
xor
and
mov
cmp
lock
cmp
ja
aad
mov
je
push
pop
pusha
negl
fildl
je
inc
mov
xchg
mov
fists
and
or
add
orb
sbb
je
mov
clc
xchg
add
pop
adc
xchg
mov
push
and
out
fistps
dec
adc
pushf
jmp
roll
sub
popf
jb
je
push
sub
mov
divb
adc
push
lahf
xchg
incl
dec
lea
or
inc
call
cmpsl
adc
aaa
in
mov
enter
ret
mov
or
and
jmp
shll
aaa
adc
jnp
mov
add
push
fsts
jecxz
sbb
pop
in
fisubs
push
stos
push
jmp
pop
add
add
pop
add
adc
jl
pop
push
pop
aam
test
adcb
xchg
es
lcall
push
lods
inc
rol
jp
inc
xor
mov
or
je
pop
cmp
dec
hlt
or
xorb
ss
dec
mov
scas
and
push
adc
loopne
cltd
mov
inc
test
pushf
je
ljmp
fsts
aaa
cmp
rcr
cmpsb
mov
inc
pop
inc
dec
adc
pop
add
adc
push
rcll
sub
es
jae
cmp
push
hlt
sub
dec
cmp
jno
rcl
popf
jne
addr16
mov
xchg
lods
mov
cli
inc
lea
push
push
push
xchg
xorb
loope
cmp
inc
xor
jecxz
jo
cmpsb
clc
xorl
add
movb
cmp
xor
jo
fmul
enter
add
cmp
rorb
in
sbb
imul
test
imul
jg
or
and
faddl
fucomp
add
pop
push
notl
pop
movsb
inc
or
notl
push
inc
adc
outsb
int
test
push
ret
and
push
cmpb
dec
lcall
inc
inc
cmp
push
push
pusha
push
mov
inc
add
fisttpll
clc
mov
cmp
leave
mov
ret
or
sub
pop
xlat
mov
push
cwtl
jo
jmp
xchg
int3
je
jns
pushf
rcrb
stc
adc
push
loope
cmp
mov
mov
pop
pop
or
push
flds
pop
adc
das
ljmp
jecxz
lods
jcxz
sbb
std
mov
sbb
or
and
or
pop
lds
jb
add
dec
adc
mov
dec
sub
sbb
ljmp
xor
ljmp
add
sbb
ss
cmp
add
inc
dec
add
mov
push
jno
dec
cmpsb
mov
pop
dec
dec
dec
add
inc
inc
test
inc
dec
out
jl
push
enter
inc
inc
imul
nop
push
inc
inc
dec
sbb
dec
xchg
cmpsb
push
mov
lods
sub
sbb
add
sub
cmpl
jne
xchg
out
add
nop
jns
add
sub
push
aad
push
mov
lea
sbb
iret
adc
adc
inc
add
daa
cmp
cwtl
jne
stos
inc
cld
pop
clc
mov
jmp
dec
cmp
dec
pop
rol
and
dec
pop
mov
adc
inc
or
adc
sub
dec
add
pusha
pop
add
and
pop
cltd
ficomps
insl
jne
mov
push
pop
imul
mov
nop
jnp
int
sahf
mov
mov
cld
add
pop
mov
mov
lea
adc
cli
mov
dec
movsb
sub
mov
and
sbbb
adc
inc
and
icebp
or
vmovd
movl
jle
sbb
loope
mov
or
push
ret
pop
or
into
push
or
add
nop
test
add
push
fisubrs
xchg
mov
test
jle
testl
jne
sub
lea
fcompl
adc
sub
ret
push
push
sub
test
aam
sub
cmp
xor
clc
aad
or
add
jecxz
ds
scas
decb
mov
ret
jge
jnp
fimull
cld
je
and
cs
xchg
jo
lods
push
pop
add
cmp
std
fwait
je
ss
mov
cmpb
movsl
xchg
dec
adc
insb
movsb
in
add
xadd
push
push
or
pop
push
dec
xor
fcomi
mov
mov
add
and
jo
cmp
add
pop
mov
sub
test
in
and
dec
int3
adc
or
shlb
push
sti
xorl
incl
cmpsl
pop
or
or
mov
call
push
je
mov
mov
add
add
loopne
or
clc
inc
dec
jne
cmp
add
dec
je
push
mov
sti
or
mov
pop
mov
or
test
imul
mov
shl
or
ficomps
pop
push
pop
inc
icebp
fidivs
je
scas
inc
test
rolw
shlb
add
xor
adc
mov
cmp
sub
cli
add
dec
pop
sbb
dec
cmp
or
and
nop
or
test
push
add
shlb
xor
inc
jb
outsl
adc
ja
cmp
roll
sub
xlat
dec
push
mov
and
fwait
imul
mov
push
xchg
into
test
cmp
push
push
je
adc
add
rolb
into
mov
xor
or
stos
lock
dec
jecxz
xor
jne
push
idiv
and
jmp
sbb
enter
pop
cmpb
ds
mov
push
loopne
or
orb
fucomi
add
int
adc
sbb
cmp
daa
push
cwtl
mov
inc
or
jne
xchg
stos
and
xor
cmp
stos
clc
sbb
int
inc
int3
adc
mov
shl
xchg
cmpsb
cs
sbb
sub
call
scas
mov
mov
jg
add
jl
mov
clc
push
push
cmp
loop
mov
nop
mov
inc
loop
and
push
sti
sub
jne
pushl
shll
mov
out
push
fucomi
movsb
pop
push
add
or
or
dec
adc
push
jge
rorb
sbb
push
jmp
loop
push
data16
mov
jg
fistl
fdivs
insl
jmp
dec
int3
into
add
sub
orb
pop
or
jmp
sarb
ljmp
inc
pop
mov
xchg
stos
mov
mov
cmp
push
adc
lret
and
pop
push
andl
mov
mov
sub
mov
addl
les
push
scas
aad
out
popa
mov
scas
int
je
ja
mov
or
and
jo
mov
popa
cmp
push
add
or
pop
and
mov
test
outsb
add
mov
loopne
fists
xchg
add
mov
popa
test
sub
inc
push
int3
add
and
or
adc
or
shr
mov
push
mov
push
add
ret
adc
adc
inc
mov
pop
push
in
push
fs
out
or
test
add
or
ja
xchg
pop
and
divl
mov
add
xor
inc
xchg
mov
or
or
sbb
iret
and
mov
push
test
in
mov
add
fstpt
jno
or
testb
popa
dec
add
sub
inc
cmp
jne
add
pop
xchg
sbb
cwtl
or
xor
push
testb
adc
fimull
roll
xor
push
stos
mov
pop
stc
jne
clc
dec
or
test
ret
cmp
mov
mov
mov
mov
and
lock
sahf
dec
sti
subl
sbb
lea
mov
pop
sbb
mov
push
add
and
add
add
mov
jne
lret
sbb
or
imul
add
leave
adc
sub
test
test
adcb
pop
or
jge
popa
mov
loop
pop
lea
xchg
sbbl
inc
mov
add
out
je
ljmp
dec
xor
mov
pop
jecxz
and
pushf
sbb
inc
or
cltd
imulb
jb
xor
cmp
jne
inc
inc
mov
rorl
mov
push
mov
test
sbb
fwait
lret
jl
mov
cmp
pop
ret
push
xor
mov
cmp
xchg
inc
mov
xchg
mov
mov
inc
mov
lock
jle
push
and
and
adc
and
adc
test
mov
jnp
dec
cld
sbb
in
or
daa
test
pop
mov
inc
and
adc
add
scas
orl
movups
std
or
or
shlb
shr
and
es
nop/reserved
jo
cltd
je
mov
fcmove
stos
adc
push
push
lods
add
ret
insl
or
pop
push
mov
les
dec
inc
rcrb
and
push
test
or
pop
jno
sbb
inc
mov
das
and
mov
sbb
inc
dec
mov
enter
inc
ljmp
clc
dec
ljmp
jmp
je
cmp
mov
add
clc
sub
stos
cltd
inc
and
test
mov
clc
cmp
cmp
cmp
pop
test
outsb
mov
sete
add
push
in
enter
xchg
mov
jns
lahf
test
jmp
adc
jno
mov
loopne
cmp
fwait
jmp
ftst
test
fmul
mov
xchg
add
dec
mov
loopne
adc
xor
pop
jp
add
lret
dec
orl
or
mov
rcrb
mov
adc
pop
pop
add
push
mov
fadds
imul
ficompl
lahf
ret
cmpb
aad
jne
xor
orb
pop
scas
dec
ret
adc
popl
sahf
mov
xor
sbb
test
repnz
in
cmp
xor
and
pop
es
xor
ret
add
inc
loopne
adc
and
repnz
fsts
inc
fisttpl
xchg
inc
xor
outsl
movb
inc
dec
sbb
adc
pop
jne
mov
mov
rorb
pop
xor
movsl
arpl
cmp
lcall
mov
insb
push
aad
add
and
add
rolb
inc
jge
call
add
push
push
dec
jnp
aas
pop
fs
filds
dec
data16
and
sbb
sub
or
mov
les
pusha
xlat
je
mov
imul
shrl
stc
add
inc
data16
int3
pop
xchg
movsb
or
mov
or
pop
sbb
add
and
daa
addb
inc
int
loope
shr
xchg
jmp
xchg
repnz
sbb
or
adc
dec
cmp
jg
enter
cmp
cmp
mov
adc
scas
cs
sbb
cmp
add
mov
or
scas
adc
mov
out
or
push
int
hlt
mov
clc
lcall
jbe
cmpl
cwtl
sub
cmp
mov
scas
push
cmp
add
add
jl
sbb
cmp
jb
es
call
jl
loope
mov
mov
jne
outsb
sub
pop
ljmp
test
testb
mov
mov
or
ret
jne
sbb
nop
mov
ret
cmpsl
pop
or
or
add
js
repnz
dec
sub
pop
or
or
xor
testb
jne
jo
fwait
adc
add
insb
dec
fadds
inc
cld
adc
bound
cmp
data16
dec
or
fisttpll
subb
add
imul
mov
pushf
fiadds
cmp
je
test
cmp
sbb
push
cmp
dec
push
jp
xor
xor
xchg
pop
jne
rclb
mov
insb
push
push
or
adc
sub
mov
add
in
test
pusha
adc
out
loopne
adc
inc
jbe
xor
adc
mov
mov
jmp
mov
push
add
pop
fcomp
jae
cmpb
xor
movb
test
std
dec
add
fs
pusha
loopne
add
enter
pop
pop
sbb
daa
outsb
inc
or
pop
add
int
stos
or
push
push
in
leave
nop
nop
jo
in
and
and
push
mov
adc
bound
faddl
sbb
and
mov
repz
cmp
add
mov
orb
sti
cmp
mov
mov
dec
rep
cmp
jo
mov
push
lcall
ret
xorl
inc
and
das
or
sbb
hlt
scas
mov
xor
dec
in
imul
in
rorb
in
int
std
inc
inc
sub
in
push
mov
outsl
mov
stc
hlt
adc
out
jne
or
adc
arpl
pop
subb
or
ljmp
pop
inc
mov
iret
ss
mov
jl
cmp
daa
push
cmp
mov
jl
aad
rol
scas
aaa
mov
aad
lret
sub
es
xor
sub
lods
xchg
adc
cmp
mov
dec
jns
push
mov
dec
and
cmp
add
stos
mov
push
mov
sub
scas
push
sbb
test
repnz
fwait
stos
push
inc
pop
or
mov
or
xchg
adc
pop
pop
bound
sub
in
dec
rol
mov
adc
lea
push
jl
inc
mov
cmp
add
mov
push
xor
aas
adc
ds
aas
adc
sarl
cmp
add
pop
inc
dec
sbb
leave
test
or
call
mov
int
ljmp
lret
mov
or
or
or
mov
dec
adc
add
testl
mov
pop
repnz
ret
dec
fcmove
ret
sub
cmp
cmp
adcb
mov
adc
jns
negb
loopne
xor
sbb
cmpsb
or
sub
sbb
shll
or
add
call
fiaddl
jo
dec
pusha
cltd
xor
pop
push
lock
ljmp
test
push
xchg
push
rolb
lahf
cmp
mov
push
push
sub
and
pop
in
shrb
inc
mov
mov
int
mov
test
sub
sbb
or
adc
lods
fdivl
fsubrs
je
inc
add
shlb
adc
mov
add
inc
inc
and
pop
mov
cmp
mov
xor
sub
or
clc
and
rclb
sbb
pop
pop
in
mov
push
inc
add
jecxz
out
cmp
jnp
pushf
xor
lcall
pop
fisttpl
push
pop
mov
cld
mov
icebp
and
into
push
or
sub
icebp
insb
test
gs
call
xor
adc
shrb
xchg
outsb
ret
fldt
lret
jbe
dec
pusha
add
xchg
inc
inc
call
push
imul
and
stos
lea
test
sbb
inc
add
cmp
sub
sbb
packuswb
mov
push
jmp
mov
inc
push
rorl
mov
mov
je
bswap
mov
dec
mov
dec
es
sbb
cmpsb
sub
lds
test
push
sub
cs
lds
adc
mov
sub
ds
xor
ss
fwait
pop
inc
pop
sti
mov
int
or
scas
loope
dec
pop
and
push
add
dec
sub
add
mov
in
std
dec
pop
or
inc
jmp
inc
scas
scas
sbb
adc
sub
mov
inc
pop
clc
and
or
pop
jge
es
stos
shrb
sbb
push
shlb
or
and
jnp
scas
sbb
jge
push
adc
orb
adc
mov
sbb
and
sub
dec
sbb
jns
add
jg
mov
or
and
inc
in
or
lret
test
in
pop
dec
xor
dec
pusha
gs
mov
xchg
jno
icebp
ds
cmp
cmp
mov
in
mov
leave
into
push
add
ss
pushf
call
push
insb
pushf
movsb
or
cmp
cs
lods
mov
cvtpi2ps
inc
sbb
ljmp
aad
xchg
cmp
inc
add
pop
mov
pop
add
scas
push
push
inc
arpl
lret
orl
inc
or
adc
adc
mov
rolb
aam
and
push
sub
add
in
add
lahf
mov
jmp
and
ljmp
inc
imul
xor
stos
inc
cmp
or
inc
add
push
pop
xchg
xchg
enter
insb
cmp
outsl
xchg
jno
xchg
jl
mov
jo
lock
xchg
je
test
mov
mov
sub
ret
add
xchg
cmp
mov
sbb
or
fimull
xor
test
or
pop
jo
and
movl
xor
aas
mov
cmp
cli
mov
inc
iret
sbb
push
pop
sub
pop
jno
sub
pop
dec
pop
ds
dec
js
and
adc
push
fstpt
xchg
push
lret
enter
jbe
cs
inc
adc
push
and
movl
sbb
cmpsl
popa
mov
adc
je
mov
dec
cltd
or
adc
mov
pop
sub
lret
pop
cmpsl
jo
lret
adc
inc
ret
add
push
mov
hlt
mov
les
add
cwtl
cs
push
add
inc
jecxz
xor
pop
inc
filds
cmp
adc
sahf
je
sub
or
outsl
cmp
sbb
add
rolb
ror
outsl
addl
xorl
or
hlt
push
leave
loop
lock
and
add
pop
loopne
inc
outsb
adc
mov
xor
mov
in
mov
sarl
mov
jne
mov
pusha
je
orl
add
xlat
shlb
inc
out
xor
roll
call
das
mov
xchg
push
adc
data16
mov
ficoml
out
pop
in
inc
add
mov
addr16
roll
push
int
clc
add
and
mov
in
pop
adc
out
pusha
jecxz
cmp
pop
and
loope
inc
cli
rorb
and
or
insb
stos
test
sub
xchg
pusha
icebp
sub
adc
or
ret
adc
or
pop
mov
mull
call
test
cmpl
jne
sbb
aas
shll
adc
test
sub
or
lods
and
cmp
adc
jns
cli
nop
mov
repz
aam
adc
mov
shrb
cmp
and
push
mov
or
push
xor
inc
adc
ret
clc
xor
insl
xchg
movsb
roll
mov
push
out
test
rclb
cmp
lds
addb
aam
pop
ret
mov
or
pop
test
je
shlb
mov
fsubr
mov
fistl
sub
pop
jne
mov
roll
sub
jb
xchg
fcomps
mov
fsubr
adc
fdiv
add
es
push
push
test
jl
mov
mov
jle
jmp
mov
dec
pusha
inc
jp
es
sbb
mov
out
inc
adc
sbb
pop
pop
fwait
popa
push
inc
rolb
bound
lret
sbb
add
loope
into
mov
icebp
ret
xchg
ss
push
mov
int
pop
ret
movsl
xchg
dec
add
push
inc
js
push
xchg
mov
jbe
sub
loope
mov
cmp
jo
js
jo
cmp
je
ret
lret
jno
jb
popa
ret
lahf
pop
pusha
mov
dec
imul
push
dec
sbb
dec
sbbl
and
jecxz
movsb
pop
and
clc
dec
mov
or
orl
jne
push
andl
adc
add
adc
insb
cld
cli
icebp
les
add
cmpsl
mov
push
pop
pop
or
cmpsb
xlat
cmpsb
jo
inc
sbb
sahf
xchg
sbb
dec
enter
in
pop
and
enter
sub
or
cli
imul
jmp
test
add
jle
add
test
mov
sub
jmp
inc
and
push
hlt
add
in
add
jl
cs
dec
insb
mov
inc
push
pop
and
add
sub
cltd
sbb
sbb
jecxz
sbb
xor
inc
rorb
add
inc
mov
test
jae
fcompl
sbb
or
adc
xor
push
mov
out
jge
pop
std
subl
mulb
mov
sub
jae
daa
and
add
pop
xorb
lret
mov
adc
add
adc
ret
repz
mov
lods
adc
mov
clc
cmpsb
inc
fmull
es
imul
mov
push
lock
mov
xchg
add
fwait
xchg
ja
test
sbb
cmp
adc
mov
xor
movsl
and
mov
rolb
push
xor
pop
in
inc
cmp
sbb
popf
xor
mov
test
pushf
dec
pop
das
enter
mov
inc
add
cmp
ja
movsb
cltd
cmc
ret
push
mov
sbb
popf
in
sub
mov
or
pop
leave
mov
aam
cmp
es
inc
bsr
inc
out
xchg
popa
mov
ljmp
in
fsubrs
pop
mov
push
imul
inc
inc
add
inc
clc
enter
mov
ja
std
sbb
jae
inc
js
jl
inc
cmp
sub
pop
xchg
add
ret
jp
jnp
punpcklwd
pusha
cmpsl
adc
xchg
or
test
push
add
cltd
or
sbb
add
push
mov
inc
pop
cmp
movsb
mov
push
push
in
add
dec
fmuls
xchg
jl
movsl
push
jbe
pop
incl
dec
cmpb
dec
mov
xor
cmc
cmp
jge
in
jl
cmp
cwtl
mov
rcl
call
sbb
mov
clc
out
lahf
scas
inc
jb
sbb
push
push
add
xchg
jmp
cs
and
pusha
btc
inc
sub
xor
sub
or
leave
sub
mov
adc
sub
jo
pop
mov
out
jp
xor
push
shr
fldcw
push
push
adc
lret
pop
adc
fiaddl
out
cmp
lods
add
out
sub
xor
dec
iret
rep
sahf
popa
jnp
int
jbe
cwtl
inc
sbb
das
pop
or
lods
xchg
inc
inc
xchg
xchg
into
bound
pop
loopne
das
outsb
rorb
pop
cmp
fsubl
mov
test
and
mov
addr16
daa
loopne
arpl
push
aad
xchg
and
mov
scas
aaa
outsl
inc
mov
push
mov
and
lods
dec
loop
call
inc
loop
dec
cmp
test
fidivs
leave
pop
pop
out
mov
sbb
loope
loope
cmp
sbb
imul
and
pop
lahf
push
pop
loop
mov
cwtl
pop
jne
sbb
adc
dec
xchg
push
and
add
addr16
xchg
pusha
add
jmp
or
pop
mov
and
jne
gs
push
adc
dec
sub
enter
adc
jne
jg
xor
push
cmp
ja
cltd
pop
pop
sar
push
and
je
mov
cmp
shll
mov
sbb
out
pop
add
mov
insl
push
jge,pn
bound
je
imul
das
decl
aad
xchg
or
adcb
xchg
mov
cmp
dec
mov
imul
enter
and
adc
leave
adc
sbb
jb
or
add
mov
pop
nop
or
cmp
dec
sbb
fmuls
por
in
sbb
lods
idivb
push
jmp
in
dec
cmp
xor
movb
jbe
js
add
jb
jl
jne
sub
cmpb
stos
into
bound
xor
cmpsb
xchg
cmp
or
jge
testl
dec
fstps
dec
push
push
jg
lret
gs
js
or
nop
rorb
push
mov
mov
adcb
mov
pop
outsb
pop
sub
pop
inc
pop
jne
adc
xor
inc
or
add
int3
dec
sub
pop
and
adc
inc
sub
mov
ja
inc
mov
push
add
sub
rolb
ss
adc
mov
sarb
push
jge
out
pop
mov
stos
and
push
add
cmp
mov
mov
jbe
add
inc
inc
xor
dec
add
dec
push
xor
sbb
int
jge
dec
mov
sub
loop
xchg
sbb
outsb
inc
xor
jl
in
fs
mov
and
or
call
in
add
add
mov
daa
push
inc
adc
cmp
or
test
jne
pop
push
xor
adcb
pusha
mov
adc
adc
fwait
xchg
fs
adc
ja
into
cmp
idivl
nop
push
out
data16
fwait
lcall
mov
push
push
and
cmp
ss
push
sbb
push
sbb
negl
dec
ss
add
add
add
or
add
add
jnp
repz
or
push
mov
mov
xchg
push
daa
ds
sbb
sbb
iret
leave
repz
sbb
sbb
sbb
cmpsl
mov
out
cld
adc
pop
daa
push
push
jle
mov
iret
repz
pop
cmp
test
test
xor
iret
cmp
daa
and
push
xchg
repz
aad
cmc
add
sbb
mov
fadd
mov
repnz
aas
es
inc
enter
daa
inc
ljmp
mov
stc
hlt
mov
xchg
imul
jge
enter
adc
inc
dec
loop
jecxz
mov
dec
or
pop
jmp
add
sbb
add
add
bnd
int
rolb
xchg
pop
ds
mov
add
jmp
popf
fnstcw
and
add
cmp
ja
sbb
push
jg
fdiv
inc
adc
pop
addb
cmp
jmp
repz
xor
stc
imul
sub
fdiv
add
je,pn
jmp
dec
jne
push
pop
shr
add
arpl
mov
push
pop
cmp
into
xlat
fists
sbb
sti
mov
movsb
cmc
xchg
jmp
pop
xchg
outsl
xchg
mov
aaa
cmp
cmc
inc
js
aas
lcall
ss
mov
xor
cmp
movzbl
pop
mov
je
adc
or
clc
cmpsl
and
push
and
sub
iret
repz
int
es
fnstsw
pop
and
jnp
push
aaa
push
inc
push
stos
push
in
cmp
adc
out
loope
in
ljmp
out
lea
inc
pop
add
repnz
loopne
or
mov
sub
jo
pop
lods
mov
cltd
mov
lds
sbb
push
add
jmp
rolb
enter
inc
popf
push
aas
xchg
cli
add
sub
fs
dec
adc
lahf
sbb
jp
push
sbb
and
xchg
sub
jnp
xchg
popl
add
xchg
cs
cmp
je
ljmp
rorl
in
std
mov
pop
jne
adc
jge
out
sub
int3
cld
jb
movsb
orl
pop
adc
pop
leave
add
test
dec
leave
adc
orb
sub
leave
xchg
and
add
sbb
ljmp
in
sbb
cmp
nop
sbb
xchg
sbb
aad
xor
ds
mov
imul
xchg
add
loop
sbb
sbb
iret
shlb
sbb
sbb
or
andb
mov
jne
movsl
sbb
cmp
imul
push
add
mov
lea
lds
daa
ja
fstp
insb
sub
data16
popf
push
gs
sbb
xlat
lds
es
jnp
jnp
out
clts
es
inc
aam
lock
repz
adc
daa
inc
es
mov
stos
sahf
cmpsl
sub
sub
adcl
jl
mov
icebp
xor
pop
cmpsb
rorl
jge
jge
xchg
push
fcoms
mov
into
cmp
iret
test
jp
rclb
dec
add
inc
jmp
stc
in
in
sti
dec
inc
sub
std
pextrw
cmp
imul
cmp
dec
sbb
and
sbb
or
or
js
mov
add
cs
pop
loope
in
pushf
lods
sub
insl
repnz
pop
mov
call
jno
cmp
mov
push
xor
rcll
lods
xor
xlat
js
jo
jp
add
movsb
cwtl
and
sub
nop
push
mov
jmp
and
pop
pusha
cmp
icebp
in
mov
std
pop
xchg
sub
repz
aad
xor
jmp
cmp
mov
out
ss
mov
push
add
mov
mov
sbb
mov
push
pop
adc
cs
sub
lahf
enter
add
inc
or
loopne
jmp
movsb
or
push
pushf
dec
stc
add
cs
add
cmpsl
clc
cmc
les
lods
mov
dec
pop
je
repnz
push
mov
push
push
daa
gs
mov
cld
adc
jl
jbe
cmp
jbe
sbb
out
outsb
lods
pushf
pop
xchg
inc
lea
jmp
ss
dec
or
mov
adc
fcompl
jb
pop
adc
jmp
jge
and
mov
pop
ja
mov
je
addr16
push
push
loope
or
sub
xor
adc
in
dec
icebp
pusha
add
xlat
adc
xor
cmp
cmp
xchg
cs
les
iret
push
cmpb
xor
pop
mov
das
sbb
adc
add
add
add
and
pop
testl
movsb
xchg
mov
nop
mov
or
leave
jbe
or
xor
call
xor
xorl
pusha
ja
add
mov
jecxz
inc
fldt
mov
push
into
sub
movsb
push
xchg
add
mov
push
shlb
jge
syscall
test
cmc
mov
shll
dec
in
imul
push
pop
push
mov
shrb
push
das
fbstp
cwtl
pop
adc
or
orb
movsb
data16
push
outsl
ljmp
push
rolb
inc
jg
cmp
pop
aaa
jmp
cmp
jg
cmp
add
jne
cltd
mov
mov
jge
xchg
lret
je
aam
and
pop
mov
push
add
mov
cmp
xor
stos
daa
int
stc
leave
sub
and
pop
inc
aaa
in
es
jmp
cmp
xor
cmp
jge
push
jl
imul
scas
inc
js
push
pcmpeqw
and
bound
mov
lods
xor
outsb
dec
cmpsl
xchg
rcrb
mov
mov
fs
mov
mov
jmp
addb
sub
inc
or
sub
add
or
fnstcw
mov
inc
in
shl
stos
imul
or
inc
inc
test
and
fists
out
sti
jge
dec
mov
data16
enter
testb
jne
rclb
andb
jp
mov
push
xor
cmpsl
cli
pop
sarb
ret
cmp
aad
mov
cmp
push
cmp
sub
lea
mov
adc
mov
mov
push
sbb
int
mov
push
leave
rorl
out
ss
adc
mov
add
inc
aad
add
push
xor
cmp
push
ret
lods
out
cmp
movsb
ja
or
test
sub
or
pop
test
and
push
sub
mov
rcrl
scas
jb
xchg
xor
test
sbb
rcr
test
inc
inc
dec
mov
push
js
js
test
decb
shl
pushf
mov
ss
lock
adc
data16
shrl
pop
adc
push
jmp
xor
adc
ds
loop
movsb
inc
clc
leave
or
mov
push
incl
in
push
add
inc
addr16
cmp
mov
aaa
insl
xor
mov
mov
mov
xor
cli
or
fdivrl
je
nop
inc
inc
dec
add
mov
sbb
mov
jb
jbe
xor
mov
inc
push
inc
sbb
mov
dec
std
push
mov
lahf
insb
dec
rorl
out
and
insb
pop
push
add
pop
sarb
xor
std
orb
or
out
add
lea
daa
out
cmp
jae
incl
mov
stc
push
adc
jmp
sbb
cli
push
adc
cmp
mov
push
rorb
lock
lret
aaa
mov
movsb
outsl
int3
scas
mov
stc
lods
cli
mov
pop
sbb
xchg
stos
int3
add
jl
movsl
mov
ja
cmp
cmovs
dec
mov
and
out
add
gs
popa
in
and
and
cmpsl
lock
xchg
lea
jae
cwtl
orb
loope
xor
push
lea
fisubrl
out
xor
xchg
sub
icebp
push
fnsave
lock
mov
or
sub
in
stos
push
adc
pushl
in
or
lock
jg
mov
repnz
lock
mov
mov
outsl
add
adc
int
xor
adc
xor
add
mov
xchg
jmp
cli
insl
push
mov
and
fisttpl
xchg
ds
and
prefetch
pop
lea
lret
inc
and
or
dec
cmp
jae
daa
pop
or
dec
fsubr
dec
mov
shlb
xchg
lock
jge
jg
pop
sahf
mov
arpl
or
jg
inc
pop
shr
and
scas
mov
cmp
mov
fsubrs
mov
sbb
mov
imul
push
cltd
or
daa
sub
xchg
mov
int
adc
inc
pop
filds
sti
sarb
pop
je
shlb
jmp
cmp
std
test
rcrb
xor
or
mov
fistl
pop
xchg
mov
js
aad
xor
push
mov
je
push
aas
mov
sub
dec
mov
daa
outsl
cmp
rorb
mov
dec
sub
or
pusha
sbb
sarl
push
xchg
aaa
dec
mov
mov
pop
dec
lahf
xchg
jbe
imul
xchg
mov
add
fs
cmp
dec
mov
or
mov
sub
inc
lds
add
loop
je
fstl
or
shlb
or
add
imul
sbb
test
and
and
call
jae
roll
or
mov
test
add
sbb
loopne
or
or
and
add
or
shll
adc
lret
int
faddl
imul
adc
jl
fsubl
or
adc
dec
movsb
xor
loopne
and
and
int
cld
outsl
pop
pop
lea
test
and
fadd
jmp
dec
pop
aaa
fcoml
or
fiaddl
fbld
push
cmp
insl
mov
pop
mov
mov
data16
adc
rcrb
and
xor
adc
and
jnp
leave
cmpsb
sub
into
mov
in
cli
xor
or
jmp
xchg
mov
xor
dec
cmpsl
and
fildl
cld
sbb
fildll
xor
push
pushf
add
cmc
sub
movl
shll
push
inc
mov
fs
sub
xchg
or
sbb
mov
jp
or
add
sub
and
cmp
cmp
add
mov
sbb
mov
push
push
pop
imul
imul
ja
movsb
xchg
sbb
rclb
xchg
lcall
shl
push
dec
shrb
add
cmp
push
out
dec
xor
or
inc
pop
lea
fcomps
inc
mov
ja
test
mov
or
sbb
mov
inc
mov
mov
scas
stos
or
and
mov
aas
cs
notb
pop
add
jno
pushf
adc
loopne
je
movsb
pop
jae
sub
repz
scas
outsb
aad
notl
testl
lcall
mov
sub
cld
es
or
mov
xchg
xchg
push
adc
iret
popf
xor
push
mov
in
std
push
or
inc
subb
adc
cmp
push
pop
lock
aad
fs
add
push
sahf
outsl
ds
cmp
adc
adc
push
add
in
out
pop
inc
shll
aad
out
fldenv
dec
rorl
lds
loop
pop
mov
xchg
jno
cli
adc
rcll
sahf
in
jne
cmp
xchg
add
jbe
sbb
sub
pop
fsub
cmpsb
add
std
mov
movsl
dec
or
not
call
or
lods
and
rcl
push
mov
cmpsb
mov
and
icebp
add
jo
sub
in
cmp
pop
outsl
out
jb
mov
aad
pop
aad
sbbl
pop
and
jbe
sti
loopne
or
mov
cmpsl
mov
int3
xchg
pop
roll
rcll
mov
xchg
push
cli
incb
jmp
cmp
sub
pusha
add
or
adc
jge
mov
fcmove
sbb
cmp
sbb
loopne
jecxz
es
or
imul
mov
out
pop
jmp
loop
dec
mov
inc
mov
shlb
cmpsb
test
jnp
or
mov
jge
adc
jecxz
jecxz
pop
pop
es
dec
sub
adc
mov
cmp
mov
lds
mov
jmp
int
call
xlat
aad
stc
inc
push
fxch
lock
int3
push
mov
das
test
lea
jge
push
pop
and
lret
ret
test
pop
shll
push
sub
sub
and
sbb
mov
adc
fisubrl
inc
mov
sarb
movsl
out
loope
ss
dec
add
and
popa
js
pop
dec
pop
arpl
push
add
imul
mov
es
push
sbb
fldcw
mov
repz
decl
shl
add
test
cmc
test
xor
in
jp
pusha
push
xchg
pop
adc
and
int
sahf
pusha
and
iret
cmp
add
lock
and
out
loope
xchg
into
out
mov
sbb
mov
sti
jnp
test
enter
mov
pop
adc
fsubrl
pop
aaa
ret
sub
mov
dec
or
push
fmulp
pop
jne
or
js
add
pop
enter
aad
cmp
or
cmp
fst
fs
add
or
std
adc
sub
mov
test
push
jne
lea
cmp
xor
cmp
pop
jb
das
outsb
xchg
scas
stos
sarb
ss
in
adc
inc
in
mov
fs
repz
or
xchg
xchg
add
and
add
adc
sub
add
jns
mov
cmp
cmp
jg
pop
add
imul
xchg
dec
adc
dec
ret
dec
aam
push
mov
test
xchg
fcmove
clc
mov
and
sbb
or
cs
pop
sarb
pop
lds
add
insb
inc
xchg
addr16
sub
push
xchg
insb
pop
insl
push
punpcklbw
and
cwtl
popa
dec
icebp
outsl
in
outsl
test
xorl
jne
test
pop
rolb
cwtl
dec
jo
lods
jbe
inc
adc
mov
xchg
cmp
ret
mov
mov
pop
shlb
int
or
inc
cmp
cwtl
fcomps
sete
je
inc
inc
subb
outsl
inc
mov
xor
sub
add
dec
cmp
xor
xor
sahf
mov
or
jmp
dec
out
imul
cmc
gs
outsb
stos
lock
iret
jae
and
insl
or
hlt
adc
fldt
sti
out
fs
pop
sbb
cmp
fld
daa
push
mov
dec
pop
sbb
and
cmp
orl
xchg
cmc
pop
mov
push
or
add
cmp
std
pop
or
repz
mov
cmp
xor
loope
push
pop
dec
ret
inc
ljmp
xorl
fisubl
test
adc
xchg
sbb
movsb
xchg
xchg
pop
shl
dec
mov
adc
sbb
mov
add
popa
push
gs
in
sti
xor
ret
imul
adc
sbb
mov
mov
push
jne
dec
jle
jno
sti
pusha
shll
pop
or
inc
add
insl
addb
movsl
mov
enter
sbb
cmpb
cli
daa
mov
fwait
pop
ds
fcom
and
loopne
push
imul
push
cmc
imul
xor
popf
jo
mov
lcall
adc
dec
pop
adc
data16
pusha
cmpsl
rcl
fmuls
imul
icebp
pop
cmp
fld
loope
or
xchg
aas
insb
xchg
bound
cmp
mov
std
fcmovnbe
or
xor
jno
fsubs
popf
dec
push
inc
pop
sbb
rcl
xchg
push
sti
mov
jl
sti
xor
sbb
add
les
loopne
cltd
cmp
shll
ficoms
fucom
and
mov
adc
loopne
leave
in
adc
pop
mov
lret
mov
add
clc
jl
pop
jmp
jno
pop
mov
in
gs
ret
inc
aad
pop
lahf
xor
nop
xorb
jno
sbb
gs
lods
cmc
or
cwtl
dec
loopne
and
add
jl
xchg
cmp
push
daa
arpl
sbb
or
jae
fimull
ss
pop
mov
hlt
aaa
dec
roll
and
sbb
and
push
sbb
aaa
aas
cltd
xor
not
or
jmp
cmpsb
adc
loop
mov
dec
out
xchg
push
shl
sbb
inc
add
inc
arpl
movb
ja
inc
rorl
push
lcall
lods
adc
test
jmp
inc
inc
push
mov
cmc
call
test
or
data16
add
add
cmpsb
repnz
lock
into
movl
popl
lahf
xchg
jl
add
push
gs
xorb
mov
push
sbb
xor
pop
pop
jecxz
out
jge
mov
popf
gs
xor
xchg
sbb
cmp
xlat
in
adc
add
jno
push
adc
jmp
xchg
loope
mov
sub
scas
out
loope
xchg
bound
into
xor
jge
out
lcall
pop
sub
into
inc
push
pop
aam
push
xchg
movsb
xchg
movsb
add
cs
mov
jg
fwait
sub
stos
mov
int
lret
and
clc
push
rcrl
test
mov
in
xchg
mov
test
lret
push
mov
push
sti
sub
out
test
ja
jle
outsl
pop
jmp
mov
push
fadds
call
push
enter
addr16
out
incb
gs
into
push
leave
aaa
js
add
sub
add
mov
aad
xorl
popf
push
mov
mov
mov
filds
cmp
mov
or
decb
in
int
rorb
popa
jb
and
add
addr16
sbb
popa
and
je
and
sub
sbb
pop
pop
hlt
pop
bound
inc
mov
lock
addr16
sbb
repnz
adc
xlat
lahf
test
mov
mov
or
adc
inc
add
push
xchg
roll
add
clc
aam
jo
add
aaa
or
add
mov
addb
push
mov
sub
or
push
outsb
push
add
jne
add
rcrl
push
pop
xchg
shrl
adc
xor
movsb
xor
inc
mov
push
jno
std
add
or
add
sub
push
dec
inc
lea
pusha
xchg
cmpsb
andb
and
movl
adc
push
xchg
sbb
mov
inc
push
ret
sbb
stc
push
inc
notb
mov
xor
mov
mov
pop
fwait
pop
sti
xor
lods
push
xor
aaa
jl
dec
add
les
sarb
in
mov
xor
dec
int3
pop
mov
inc
inc
jmp
cmp
adc
addr16
daa
loopne
and
or
xchg
movsb
adc
xlat
add
test
sub
sub
push
jb
loope
add
jb,pn
stos
adc
dec
jg
push
adc
and
ret
add
sbb
movsl
or
and
or
and
and
imul
mov
xchg
and
mov
mov
ds
mov
aas
loop
push
mov
xchg
add
and
mov
dec
cwtl
sbb
popa
push
cmpsb
and
push
mov
and
loopne
aam
adc
sub
scas
sbb
lock
mov
ret
lcall
and
add
adc
sbb
sbb
andb
test
popa
and
rol
mov
dec
cs
out
dec
adc
mov
arpl
loope
lret
sbb
lods
subb
and
addb
pop
cwtl
mov
hlt
jle
lods
and
outsb
and
mov
in
cmpsb
outsl
add
push
fcom
mov
inc
pop
cmp
ds
rclb
aas
mov
sub
xor
push
aaa
std
and
sbb
lret
jp
or
mov
aaa
mov
lret
out
mov
sbb
fsts
push
mov
stos
add
sub
mov
fbstp
mov
jmpw
insb
call
mov
insl
cmc
scas
cmpsb
test
sti
incl
push
adc
sub
push
or
loop
sub
mov
xor
cmp
lock
outsb
mov
push
sub
pop
fwait
call
mov
mov
mov
cwtl
jbe
push
jbe
sub
repnz
and
push
push
xor
xor
jg
call
cmp
add
push
ret
hlt
lods
push
add
add
mov
imul
sbb
in
lock
out
movsl
add
shlb
test
xor
fcmovu
testb
adc
lods
jb
pop
enter
cmp
ljmp
sub
add
sbb
jl
fdivr
inc
xchg
mov
add
inc
and
jae
jo
or
aam
lret
xchg
mov
mov
xlat
dec
adcb
push
and
and
pop
adc
adc
pusha
xor
mov
out
mov
mov
jb
lods
jg
sub
cmp
jbe
mov
cmovl
and
dec
and
sbb
lods
in
lcall
mov
sbb
lock
dec
mov
cmc
aaa
test
dec
sti
push
jp
push
xlat
push
adcb
push
adc
lret
test
ror
mov
adc
stos
sbb
test
rcll
daa
xchg
sbb
sbb
mov
and
xor
shlb
shll
popa
dec
push
dec
add
loope
stos
inc
mov
sub
cmp
xchg
and
add
or
cld
addl
rcl
add
ficoms
pop
dec
aas
js
inc
nop
mov
out
dec
mov
rcll
mov
add
sbb
ret
test
sub
jp
inc
xor
gs
adc
pushf
push
aam
add
testb
xor
sbb
add
mov
shrb
ret
adc
xlat
pop
sub
cmp
jbe
rcrb
xor
mov
push
adc
dec
push
adcb
cmp
fldpi
push
sub
push
dec
push
imul
cmc
and
and
or
adc
cli
push
push
mov
icebp
stc
jb
and
les
test
loop
sbb
movsb
fdivl
cmp
in
ja
fyl2x
int
movsl
cmp
mov
aaa
xchg
movb
ja
cmpsb
aaa
mov
cltd
add
roll
ficomps
sbb
sub
mov
insl
inc
in
push
and
sub
add
sub
aas
cmpsb
pop
pop
xor
jae
sub
cmc
xchg
push
mov
outsb
jnp
jae
call
lret
dec
mov
add
pop
xchg
cltd
or
xor
push
aad
je
or
add
jns
xchg
push
outsl
out
test
je
add
adc
sub
mov
xchg
mov
pop
push
jno
cmp
push
push
testl
sbb
jb
cltd
lock
dec
cmp
pop
inc
inc
gs
xchg
cmp
push
es
les
xor
or
repz
xchg
fists
pop
les
add
das
inc
sbb
int3
pop
add
sub
mov
mov
std
test
xor
inc
mov
add
adc
mov
mov
xchg
push
pop
add
or
cmp
and
rol
dec
adc
aaa
test
testb
lret
gs
popf
pop
adc
icebp
aas
add
jge
repz
push
fwait
push
ljmp
jecxz
xchg
cmc
addl
rorl
fs
adc
stc
push
mov
jl
inc
or
daa
andl
movsl
test
data16
pop
aam
inc
inc
orl
jne
push
push
push
lret
aaa
popf
test
inc
cltd
cwtl
mov
cmp
inc
pop
push
pop
or
das
and
cltd
aam
fadds
mov
add
mov
cmp
dec
dec
xor
clc
ss
fcomps
or
lea
lea
push
push
lcall
bound
lods
xchg
neg
lcall
jbe
sti
and
inc
push
repnz
aad
mov
jne
jae
sarb
adcl
inc
xor
movsb
negl
cmp
movsb
dec
xor
in
add
mov
and
xchg
or
cmp
insb
adc
xchg
mov
cmp
sub
mov
push
add
dec
push
add
ds
popa
sbb
push
test
or
leave
decb
in
pop
sub
push
cmc
or
adc
inc
neg
les
cmp
mov
xlat
js
mov
addl
adc
pop
addb
pop
lods
mov
in
inc
sbb
lea
and
adc
cmc
pop
fidivrl
mov
nop
adc
or
mov
aad
xor
mov
xor
mov
inc
les
les
push
inc
mov
enter
xchg
jg
aad
test
mov
lea
adc
mov
roll
xchg
dec
int3
or
fiadds
xchg
lock
mov
push
add
mul
and
mov
rolb
lds
inc
inc
mov
push
and
pop
inc
sbb
xlat
clc
cmp
or
sub
sbb
ret
subb
jno
jb
fadd
arpl
out
xchg
in
inc
popf
jmp
pop
daa
test
or
leave
ss
dec
jns
xor
js
lods
out
xor
inc
xlat
and
insb
jno
adc
das
jecxz
add
add
push
cmp
sti
xor
out
fdivrp
adc
cmp
cli
roll
push
mov
inc
jecxz
sbb
add
int
dec
dec
push
and
ret
dec
sbb
lret
jns
add
xor
into
add
cmp
fwait
clc
je
imul
ljmp
rcr
test
movsb
fidivs
push
and
mov
jnp
push
dec
test
add
jecxz
mov
xor
mov
or
sub
mov
aad
mov
push
cmp
dec
add
lcall
sbb
cmpsl
push
lds
mov
es
and
mov
sbb
or
mov
adcb
pop
adc
dec
push
and
inc
inc
add
inc
es
cmp
push
push
and
mov
in
jne
cmp
sub
int3
divl
adc
lock
xor
orb
push
or
jno
fwait
lods
jmp
add
cmp
push
or
jbe
push
adc
test
dec
cld
pop
fwait
mov
or
cmp
repnz
push
leave
sub
lea
mov
mov
xchg
push
add
fsts
cs
adc
push
mulb
pop
adc
xor
xchg
add
jg
dec
es
call
cmp
push
lcall
lods
nop
rclb
mov
mov
push
pop
in
add
pop
pop
leave
sbb
or
or
mov
mov
pop
and
and
sub
test
sub
or
ret
fisubrl
ja
lods
pop
and
push
jb
jnp
test
and
ss
add
fldl
xchg
and
jno
imul
enter
cmp
lret
sbb
cmp
je
movb
in
mov
add
push
cmpsb
ret
or
add
imul
mov
ljmp
movsl
pop
jo
mov
test
out
movl
test
pop
and
push
sbb
mov
sub
inc
or
inc
push
xchg
lea
fcoml
xor
cli
and
xor
cmpsb
jmp
bound
adc
addl
fldl
jo
insl
adcb
enter
push
push
adc
cmp
lock
sub
test
test
or
imul
sub
or
mov
cltd
fwait
int3
jns
pop
pop
xchg
or
or
dec
push
push
or
or
mov
mov
clts
addl
decl
or
mov
lret
sub
push
fistpl
add
or
sub
out
push
inc
xchg
add
pop
dec
xor
or
ret
jo
sub
pop
xchg
inc
cmp
mov
add
jae
rcrb
mov
repz
lahf
push
inc
addb
dec
sub
movl
inc
add
xchg
add
cmp
lds
xchg
add
fwait
adc
scas
enter
dec
and
and
sarl
and
icebp
xchg
outsb
or
movsb
add
and
aaa
xchg
js
pusha
idiv
lret
inc
cld
loop
and
fidivl
cmp
fiadds
add
or
sbb
test
or
clc
add
or
and
add
mov
mov
sub
rorl
mov
sbbb
sbb
or
dec
mov
add
fdivrs
ja
xchg
sbb
sarl
add
jb
dec
sub
in
inc
add
sbb
sub
vpminub
mov
filds
hlt
jmp
xchg
push
xchg
ret
fldcw
insb
xor
shrb
pop
inc
cmp
lret
xor
outsl
add
push
push
daa
push
sarl
shlb
lods
sbb
add
inc
fnstenv
add
test
notb
adc
repnz
or
xchg
rol
add
inc
push
stos
xorb
movsl
mov
adc
cmpsl
sub
cmp
imul
add
hlt
movsb
push
fs
or
mov
roll
pusha
pop
insb
lret
xor
pop
enter
mov
lret
sub
cmp
or
add
ds
xorb
mov
ss
inc
push
lods
mov
inc
jge
mov
push
add
adc
push
add
dec
push
dec
xchg
int
xor
fsubl
aad
das
cmc
sub
in
pop
or
mov
mov
imul
jg
cltd
rolb
movsl
pop
jmp
add
adc
movsb
test
and
int
out
xor
fistpl
imul
popf
sub
inc
ret
aas
imul
mov
sbb
jb
cwtl
andl
xchg
lahf
add
xlat
mov
aam
jge
dec
rol
jp
sbb
or
dec
add
andl
or
add
mov
imul
stos
adc
xchg
fwait
fwait
cmc
and
loope
xor
in
clc
enter
sub
fmuls
cmp
jae
je
mov
stc
clc
bound
inc
inc
jb
mov
sub
shlb
xchg
popf
pop
cs
shll
repnz
addr16
outsl
adc
call
push
mov
dec
push
lret
lcall
and
je
mov
cmp
adc
lock
xchg
ret
es
movsb
outsb
mov
adc
jp
jno
sub
xchg
loopne
int3
jmp
push
imul
mov
imul
lock
push
sbb
lock
iret
sub
shrl
popa
test
or
inc
std
pop
push
mov
adcl
popa
xor
add
pop
rolb
addl
cli
xchg
int
sahf
dec
loope
fwait
loope
mov
fildl
and
xor
jecxz
dec
fiaddl
scas
mov
lahf
jns
xorl
and
xchg
push
cmpl
pop
aas
dec
jle
test
aad
arpl
dec
mov
pop
inc
or
xchg
xchg
and
adc
mov
andb
push
ret
test
fnop
lock
push
lahf
mov
mov
inc
rclb
add
and
mov
rorl
xchg
leave
insl
dec
nop
rorb
movsb
fnsave
push
cld
cmp
cmp
imul
bound
fisubs
jmp
test
push
test
mov
mov
loop
cmp
ja
push
push
pop
js
aas
and
mov
cmp
mov
decl
cli
add
inc
sub
dec
ja
sbb
icebp
fiaddl
add
mov
mov
cld
push
ljmp
mov
xchg
cmp
shl
jge
xchg
mov
mov
int
jmp
in
sub
sar
bound
pushl
pusha
ljmp
lock
inc
stos
dec
adc
push
shl
jbe
data16
mov
and
push
or
dec
lret
adc
mov
adc
shl
int
mov
cmp
inc
dec
or
bswap
cmp
jmp
cmp
outsb
add
cmc
mov
lock
xor
adcb
lock
xchg
std
push
mov
lds
shll
lds
sub
mov
add
add
sbb
inc
sbb
push
sub
mov
mov
push
add
aaa
out
jmp
sbb
mov
xchg
sub
sub
mov
mov
or
enter
loopew
push
xor
addr16
adc
xchg
ret
or
mov
inc
inc
inc
fcomip
jne
add
int
dec
add
add
mov
in
test
mov
repnz
lret
imul
push
test
cld
lret
scas
and
popa
mov
aas
lret
add
pop
cltd
pop
mov
push
lds
test
jne
add
or
out
pusha
and
pop
xchg
daa
push
and
adc
mov
xor
pusha
dec
push
out
leave
cwtl
mov
add
push
jne
loope
loopne
jns
sbb
das
popf
sbb
int3
test
sbb
sub
loop
adc
out
pop
push
sbb
pop
xchg
xor
lea
scas
popf
or
adc
push
mov
push
or
sbb
sbb
push
pushf
outsb
xor
add
sarl
ja
cmpsb
mov
sub
movsl
icebp
lods
out
dec
jbe
stos
or
xchg
in
or
jbe
push
aas
movsl
push
pop
or
es
add
push
jbe
rcrb
cltd
in
insb
stc
lcall
dec
cli
adc
pop
das
daa
push
adc
xor
or
stc
add
js
push
push
call
mov
mov
add
leave
mov
cmp
sub
loopne
or
inc
enter
add
imul
and
and
cmc
sub
jbe
rclb
mov
cmp
adc
out
xchg
push
xchg
stc
and
adc
fidivs
adc
pop
lcall
adc
cmc
inc
pop
add
sbb
inc
add
cmp
enter
mov
and
or
pusha
sbb
or
push
out
js
or
or
sarb
push
push
sub
or
mov
sub
xor
movl
xlat
and
inc
dec
mov
add
jne
adc
and
adc
fistpl
inc
inc
imul
adc
mov
negb
nop
mov
sub
daa
mov
sub
dec
add
dec
fldcw
xchg
mov
xor
push
xor
dec
jl
sbb
mov
push
sbb
dec
add
inc
pop
scas
dec
sub
aaa
add
aas
dec
push
imul
pop
cmpsb
xor
xor
popf
add
sbb
xorb
and
add
bound
cmp
flds
add
cmp
xchg
xchg
nop
add
jo
rolb
inc
ds
pop
filds
test
mov
jl
imul
cmp
fs
enter
sbb
add
int
push
loop
sub
mov
mov
xlat
test
insb
test
push
frstor
lahf
iret
test
ret
adc
jno
cmpsl
and
sub
popa
test
mov
push
mov
sbb
dec
in
pushf
cmp
xchg
push
push
or
roll
sbb
cmpsl
std
push
add
dec
inc
stc
test
dec
add
addb
pop
fwait
and
ret
add
lret
inc
push
adc
in
pushf
pop
daa
pop
and
push
sti
jo
adc
sub
int
xchg
and
xor
jmp
cmp
arpl
sbb
nop
pop
imul
lds
sub
pop
mov
lds
xor
xchg
cmpsl
sub
lcall
imul
fisttps
pop
pop
pop
fwait
mov
mov
push
pop
out
mov
inc
push
insb
add
pop
mov
test
mov
repnz
adc
popa
adc
nop
lahf
sbb
adc
divb
in
loop
lea
push
je
adc
mov
add
or
and
es
decl
and
in
jno
int
inc
pop
jae
movsb
and
lahf
test
pusha
or
sbb
jmp
push
movsb
add
data16
dec
add
mov
orb
mov
jo
lahf
push
es
pop
adc
dec
xor
lret
add
sbb
fcoml
rolb
add
jno
pop
cld
xchg
cmpl
jecxz
adc
dec
dec
mov
sub
push
in
enter
lahf
push
cmp
inc
insb
lahf
add
mov
and
imul
popa
and
push
jo
mov
fadds
mov
lds
into
lcall
mov
pop
mov
adc
lds
xor
jne
add
sub
lcall
rcll
and
iret
ja
popf
pop
push
popa
or
cs
int
pushf
sbb
dec
and
push
push
xor
jl
das
sub
or
in
dec
dec
xor
or
cwtl
icebp
pusha
or
xchg
cmpsb
test
jnp
push
push
push
popa
add
adc
inc
nop
push
orb
or
je
cmp
jbe
push
or
sahf
push
and
mov
insl
pop
arpl
daa
pop
sbb
mov
and
and
adc
loope
jge
es
mov
xor
ret
sbb
lahf
push
push
or
dec
sbbl
fistpll
cmpb
or
push
adc
jg
or
inc
or
and
and
loope
add
cli
or
lret
pop
jbe
mov
je
xchg
xor
or
push
sub
xlat
mov
out
add
dec
test
mov
push
sbb
mov
push
xor
ja
in
or
cmp
stos
xchg
mov
js
sbb
sbb
or
in
testl
mov
pop
push
or
lock
les
cltd
xchg
fbstp
mov
imul
scas
xor
mov
lock
jae
mov
in
dec
mov
xchg
iret
adc
or
andb
jl
or
cld
add
mov
addl
cmp
mov
jb
sbbl
jae
ss
hlt
dec
or
pop
pop
test
and
call
popf
adc
add
push
and
ret
push
mov
adc
and
leave
dec
mov
inc
test
or
and
or
push
xor
jae
aad
sbb
cmp
mov
fs
popa
cmpsl
sub
lret
dec
enter
mov
mov
je
mov
fimuls
dec
xor
add
add
call
push
in
and
sub
pop
pusha
push
push
arpl
test
in
mov
xor
lret
cmp
sub
movl
push
test
add
or
lret
jae
lds
loope
adcl
jmp
lds
adc
push
xchg
adc
mov
lea
dec
xchg
stc
pop
xor
push
mov
push
mov
sbb
in
or
push
sub
adc
inc
adc
addb
xchg
push
mov
icebp
or
in
incl
pop
loopne
xor
cmp
movsb
xor
movb
or
sbb
ss
aas
adc
outsb
es
pop
xor
sbb
jbe
insl
ficompl
add
jae
das
push
adc
insb
and
cmp
inc
or
dec
inc
push
pop
xchg
pop
jl
or
inc
add
mov
jno
adc
shlb
idivl
les
cltd
jl
sbb
add
fwait
lsl
add
mov
sub
push
rep
xchg
repz
jl
sbb
les
jo
and
or
sub
and
loopne
les
in
push
adcl
scas
rolb
cltd
not
mov
sub
std
les
push
or
push
add
imul
add
cltd
add
roll
mov
dec
jo
insl
aas
mov
loop
pop
data16
or
popa
add
sub
fcmovu
push
aas
xchg
scas
sub
ret
call
xor
xlat
inc
mov
inc
dec
add
mov
inc
mov
fistpll
mov
insl
and
scas
shl
push
mov
jns
cmpsl
and
out
pop
adcb
jne
and
mov
push
into
std
fldt
loop
imul
popa
mov
jl
inc
sbb
xchg
movb
push
push
inc
out
inc
scas
cmpb
pop
stos
or
or
test
pop
jmp
xor
adc
mov
mov
mov
and
ret
add
pop
addb
scas
or
es
sahf
adc
stc
push
adc
lret
sub
sub
ja
sbb
add
sbb
int3
xchg
or
dec
cmp
inc
adc
adc
in
jmp
xor
push
sub
mov
ret
mov
lods
sub
jmp
inc
insb
cmp
je
cmp
xchg
mov
mov
loop
mov
jne
mov
dec
shlb
add
inc
push
dec
pop
pop
ja
sbb
add
mov
imul
jnp
adc
sbb
inc
pusha
and
dec
inc
mov
test
inc
push
test
push
dec
sbb
fwait
add
add
xor
das
clc
or
loop
push
pusha
jle
out
cmp
idivl
bound
jb
jl
xor
popf
mov
push
inc
test
orl
fldcw
pop
rorb
sub
or
xchg
push
pop
lcall
out
add
inc
aam
hlt
add
and
js
imul
xor
jg
cs
lock
mov
in
and
lods
mov
push
int
adc
adc
sub
xchg
mov
test
jge
mov
xchg
cmp
mov
xor
test
and
test
adc
fstl
inc
popa
jl
sub
inc
mov
sarb
jae
cmp
mov
pushf
ljmp
ficoml
mov
sahf
loopne
divb
inc
mov
and
sbb
jecxz
lods
add
sub
add
nop
lea
jecxz
pop
adc
pop
jae
push
enter
ret
inc
xor
inc
dec
popa
and
xchg
adc
xchg
scas
enter
js,pn
movsl
mov
pop
dec
sbb
ficoml
popa
enter
sub
out
js
push
pop
dec
mov
inc
or
push
int
fs
add
adc
inc
pop
out
jns
add
push
mov
dec
xchg
aaa
xor
shlb
movsl
lock
dec
pop
sub
mov
lahf
lds
sahf
jmp
jno
sub
movsb
loope
pop
xor
dec
or
sbb
ficomps
mov
aaa
sub
scas
add
roll
js
cmp
xor
cmp
cmp
shrb
xchg
push
pop
or
mov
sbb
mov
pusha
es
and
aam
adc
xor
lods
out
or
jno
dec
mov
push
jecxz
xchg
out
inc
jae
or
mov
lret
std
nop
xlat
out
lret
shr
mov
push
ja
sub
insb
idivl
fstps
pop
daa
inc
push
stos
mov
jne
mov
popa
sub
jno
fimull
sub
xor
sti
and
mov
sbb
sbb
decb
dec
push
dec
mov
fwait
inc
or
push
inc
lods
push
or
pop
addl
cmp
shll
sbb
scas
ret
jns
sbb
cwtl
cmpsb
lret
inc
loopne
iret
push
idivl
mov
insb
add
xchg
and
inc
data16
ficoml
jne
cmp
sub
nop
mov
sbb
rol
dec
and
shl
inc
mov
loopne
inc
rolb
jg
xor
movsl
cmp
les
repz
xchg
pop
mov
fmuls
pop
and
test
adc
mov
mov
mov
scas
add
dec
stos
cltd
andb
cmpsl
sbbb
mov
cmpsl
jae
ret
stc
notb
arpl
mov
mov
mov
adc
push
inc
lea
push
and
fldenv
lds
mov
add
and
lds
add
cmp
clc
pop
and
add
pop
cmpsb
loopne
jns
imul
sbb
pop
pop
in
adc
xchg
cmpsl
add
jle
xchg
arpl
lea
push
pop
rorb
or
or
jne
mov
sub
popa
enter
dec
push
popf
fwait
je
xor
xor
lods
adc
and
cwtl
or
jg
push
std
push
lea
pushf
add
int3
cmc
test
das
lods
inc
adc
jnp
xchg
or
cwtl
aaa
sub
lret
jbe
jl
fistpl
adc
nop
add
sub
das
xchg
ja
sub
addb
cmpsl
pop
into
and
jmp
adc
cmp
mov
push
ret
jge
push
cmp
ja
faddl
xor
add
cmc
or
push
adc
andl
sbb
movsl
cmp
xchg
mov
dec
cmp
test
mov
scas
rorl
dec
inc
or
or
jo
jnp
pop
lret
mov
in
call
adc
jno
ret
xchg
pop
sub
inc
add
jae
xor
pop
and
xchg
into
popf
outsb
lcall
push
mov
or
pop
xor
and
test
pop
sbb
ja
pushf
pop
test
add
cmpb
mov
and
loope
cltd
add
xchg
and
scas
shl
and
inc
add
addb
adc
cmp
test
adcb
adc
aas
repz
or
mov
mov
sub
sub
shrb
sub
push
fcmovnu
testl
adc
in
addl
sbb
sub
outsl
lods
popf
in
cli
stos
add
jecxz
mov
fnstsw
adc
nop
rcrb
js
mov
jne
jo
mov
push
cmpsb
push
inc
sbb
cmovo
je
adc
inc
rcrb
shlb
push
lods
scas
js
ret
shlb
and
je
add
iret
test
mov
outsb
cmp
add
inc
push
mov
dec
add
mov
std
ss
mov
mov
jp
add
add
sbb
inc
dec
sub
xor
add
add
mov
scas
das
add
test
or
xchg
or
and
adc
xor
inc
sbbl
and
int
popf
or
or
cld
fs
adc
add
xchg
popa
jns
add
xor
and
scas
push
imul
sub
push
gs
xor
xor
jmp
aam
pop
xor
pushl
and
sub
adc
cmp
cwtl
push
stc
dec
stc
xlat
add
sbb
push
dec
or
adc
call
push
inc
lock
add
or
or
movsl
int
sbb
add
sub
mov
cs
scas
mov
nop
mov
enter
cs
lret
loopne
call
mov
int3
add
jnp
add
pop
aam
icebp
gs
push
cmp
pop
push
sbb
negb
mov
neg
sbb
pop
or
and
mov
idivb
sbb
lods
cmpsb
mov
jo
mov
mov
fcomps
imul
add
push
mov
sysenter
jle
adc
sub
fsubr
in
pop
mov
lock
enter
lock
adc
jnp
ret
jge
jne
data16
jne
add
push
je
push
testl
cld
mov
jecxz
insl
divb
sbb
sub
mov
in
mov
enter
push
cli
inc
hlt
jmp
cli
out
mov
cmpl
je
push
jmp
adc
out
in
or
into
adc
loopne
cld
inc
sub
ss
cmp
jge
sub
out
add
ljmp
dec
and
in
adc
sbb
cmp
mov
cmp
and
mov
sub
ljmp
les
mov
mov
push
je
aam
fldcw
pop
mov
ror
inc
cli
sbb
adc
shl
icebp
insl
jns
add
sbbb
lock
fcmovnbe
ljmp
idiv
stos
mov
pusha
mull
push
mul
add
jb
cmp
pop
lock
ja
pop
cmp
add
jmp
xchg
out
fmull
loopne
cltd
test
pop
pop
pop
rorl
pop
adc
or
out
insl
dec
test
sti
mul
adcb
int3
jo
sub
loop
adc
add
mov
add
call
pop
mov
decl
mov
lcall
xor
outsb
and
mov
add
xor
sbb
scas
imul
add
rclb
ljmp
pop
pop
jmp
cmp
notl
fistpll
cmp
jb
mov
sbb
sarl
sub
jmp
jge
andl
and
rolb
add
push
cs
pusha
xchg
add
xchg
pop
clc
jl
add
jne
add
mov
jns
cmp
or
jbe
cmp
mov
jb
aaa
out
pop
xchg
imul
fistpl
je
mov
js
fcoms
fdiv
lret
in
sti
fwait
cld
or
add
or
mov
out
clc
push
jl
mov
push
add
ret
xchg
sbb
movsb
or
lahf
adc
movb
sub
or
inc
jg
add
inc
mov
sar
cmp
add
nop
andl
es
je
jg
pop
cmp
lret
push
in
cmp
gs
daa
mov
scas
ficoml
loop
sub
pop
mov
or
mov
lea
shl
icebp
pop
cmp
pop
or
xor
push
or
push
cmc
add
xlat
mull
out
sbb
push
or
or
or
fsubl
push
or
sub
sbb
fsubr
mov
adc
fildl
rorb
jmp
cmp
pop
jno
rcrb
pop
subb
into
shlb
js
js,pn
pop
adc
or
inc
and
adc
jl
cmp
sub
stos
xor
lock
push
into
test
ljmp
xor
jl
lea
add
aaa
xor
leave
pop
stos
adc
or
jo
aas
rorb
or
popa
pop
pop
test
pop
rcrl
or
inc
fdivrs
insl
pop
sbb
fldt
lods
mov
test
fstpl
mov
test
xor
mov
mov
cmc
mov
gs
cmpsb
mov
dec
inc
inc
pusha
arpl
sub
adc
fmuls
test
sub
adc
mov
movb
test
je
test
test
subb
jp
mov
ret
adc
and
pop
add
xor
add
jb
xchg
jo
mov
lret
add
pop
adc
int3
sub
loopne
push
data16
inc
sahf
dec
push
sub
push
push
mov
or
jmp
adc
imul
dec
and
ja
popf
xchg
or
jbe
mov
add
mov
xchg
and
dec
test
out
xor
fcoms
xor
rolb
lods
gs
dec
add
stos
mov
jmp
int3
sti
xor
icebp
imul
mov
jbe
sub
add
aaa
mov
jo
add
stos
cwtl
aad
sub
xchg
ret
sub
or
mov
and
insb
mov
fisttps
inc
sbb
test
push
push
loopne
xchg
or
xor
pop
xchg
and
nop
cs
or
push
mov
jae
or
adc
inc
dec
jle
int3
jnp
adc
sbb
sbb
mov
scas
pop
push
push
test
sbbb
and
movsl
leave
mov
xchg
out
stos
push
leave
sahf
push
cs
lret
in
sahf
xchg
pop
sahf
in
push
out
ret
aas
test
ljmp
insb
insl
nop
adcl
push
out
lret
jmp
inc
cs
xorb
mov
add
adc
cmp
push
test
jne
test
shll
das
add
and
bnd
push
je
dec
call
xchg
jg
pop
mov
scas
xor
pop
mov
push
inc
call
dec
sbbl
jle
cmp
sub
and
mov
mov
pop
jbe
jmp
adc
ss
cs
bound
push
push
pusha
sarb
das
dec
mov
inc
sub
push
sahf
mov
lods
adc
addr16
or
aam
push
int
add
test
sbbl
shll
mov
addb
adcl
int
pop
insb
jnp
or
jns
push
scas
or
push
mov
or
shll
orl
inc
push
cmp
add
cs
ds
or
or
sbb
roll
push
or
push
mov
mov
push
push
fucomi
test
inc
into
add
test
mov
ret
jae
dec
lcall
and
adc
sub
xor
and
push
ds
add
add
push
mov
icebp
cs
lock
xor
adc
pop
pop
and
out
popl
or
into
mov
loope
push
mov
insb
push
push
sbb
sbb
push
jo
pusha
in
push
push
loopne
mov
stos
inc
add
movsb
je
aaa
lea
in
addl
sbb
ja
pop
test
in
sbb
ret
adc
inc
loop
insb
gs
movsb
xchg
mov
inc
scas
dec
mov
cld
aas
mov
and
in
leave
int3
nop
imull
mov
std
je
mov
push
push
inc
xchg
xchg
push
cmp
xchg
fcomps
out
rcl
pop
mov
nop
sub
dec
mov
es
or
and
lahf
lret
in
popf
sub
lods
and
in
xchg
or
or
loop
mov
or
inc
push
imul
sub
adc
and
mov
sbb
mov
je
push
pop
cli
or
sbb
mov
mov
pop
adc
pop
int
mov
dec
inc
pop
mov
cli
mov
push
xor
insl
mov
or
push
mov
pop
stc
lret
lcall
rol
or
cli
hlt
sbb
mov
sbb
push
js
enter
pop
jnp
push
cli
dec
inc
inc
ret
inc
or
mov
xor
mov
bound
sbb
push
or
pop
push
jb
in
mov
push
lret
dec
pop
stos
movsl
push
mov
mov
in
mov
jl
fidivrl
clc
add
jecxz
inc
push
sarb
leave
add
loope
and
cmpl
je
cmp
mov
pushf
fst
cld
or
or
and
jne
in
push
icebp
cmp
shrb
stos
int3
sahf
int3
mov
pop
repnz
insb
adc
loop
adc
in
mov
cli
mov
and
mov
dec
fwait
test
cmp
sub
pop
or
inc
shll
pusha
inc
and
je
insl
aaa
sub
pop
xchg
jb
test
add
test
aam
orb
test
inc
cmpsl
shll
and
popa
push
movsb
inc
out
adc
pop
and
mov
or
dec
icebp
mov
lods
mov
inc
push
jno
aaa
out
loopne
push
xor
hlt
loop
sub
fimull
daa
mov
sub
inc
pop
sbb
mov
mov
mov
push
dec
pusha
ja
inc
cmpsb
je
mov
cltd
inc
aaa
mov
push
xor
repz
push
iret
out
scas
shll
push
jmp
ret
es
lret
pusha
or
or
jb
nop
fsqrt
cmpsl
sub
shr
dec
dec
inc
call
xlat
dec
lea
shll
push
ret
call
add
dec
rcl
mov
mov
cmp
stc
popw
push
cwtl
mov
xchg
and
sbb
add
mov
test
and
in
arpl
dec
jne
add
or
cmp
cmp
mov
ret
pushl
adc
jne
pop
mov
fistpll
xor
push
dec
push
mov
mov
mov
inc
mov
and
push
dec
add
inc
inc
push
call
popf
inc
rcl
mov
je
dec
sub
xchg
pop
ret
push
cs
mov
cs
cld
mov
jbe
xchg
aaa
cs
dec
pop
sbb
jl
xor
push
mov
lret
test
dec
mov
test
movb
xlat
pop
loopne
call
test
mov
test
fucomp
loopne
loope
or
jecxz
ds
push
push
js
pushf
out
rclb
mov
sahf
sub
pop
mov
push
mov
sbb
loope
push
out
je
push
outsb
inc
or
rol
sbb
jne
sbb
add
or
jle
jl
outsb
dec
or
popf
outsb
mov
clc
sub
inc
pop
jbe
cmp
jae
mov
lea
ret
shl
or
xor
pusha
roll
fldpi
pop
lret
pop
popa
imul
rolb
and
addl
jno
outsl
pop
insb
cld
and
fcmovb
out
pop
decb
sahf
adc
lea
sub
jmp
imul
mov
cs
add
dec
push
adc
sbb
js
cmp
cmp
dec
inc
or
adc
popa
adcl
mov
int3
xchg
nop
xchg
stos
sbb
mov
dec
dec
jne
cmp
sbb
push
inc
es
or
push
xchg
sbb
je
cmp
es
stc
sub
jnp
inc
xchg
inc
cmp
and
or
jecxz
rorb
sahf
in
mov
mov
pushf
mov
mov
iret
repz
mov
or
push
fidivrs
iret
jmp
mov
dec
cs
push
nop
sub
sbb
push
mov
or
or
sidtl
push
or
movl
push
add
adc
add
rcrb
or
and
and
xor
mov
bound
in
pop
adc
cmp
addb
fldt
je
fsubrs
adc
or
movsb
adc
enter
faddl
cmc
cmpsb
jo
cwtl
das
push
mov
add
fcoml
sub
xor
or
adc
jmp
loopne
inc
xor
mov
mov
push
xor
lock
aaa
adc
or
mov
adc
or
or
lds
imul
add
xor
adc
outsl
int
addr16
or
scas
adc
clc
and
inc
mov
dec
or
addb
adc
and
sahf
dec
dec
adcl
xlat
cmp
xor
fs
cli
lods
xchg
mov
test
cmp
jle
testb
sbb
cmpsl
push
loope
sub
icebp
int3
leave
jo
cmp
fs
jb
cmp
gs
repz
mov
lea
loopne
call
sub
mov
in
cmp
inc
adc
inc
inc
cmp
aaa
pop
add
push
dec
ret
dec
js
add
out
cld
jg
loope
add
mov
sub
mov
jmp
pop
inc
cmp
adc
outsb
adcl
or
js
icebp
cltd
sbb
push
adc
sbb
das
xchg
cmpl
jne
or
or
or
add
sbb
adc
pop
shrb
addr16
xor
or
shll
xchg
lret
add
sub
rclb
loopne
xor
jg
mov
push
cli
add
adcl
cmp
pop
mov
mov
testb
add
shll
insb
inc
jge
daa
push
insb
push
push
push
icebp
xlat
push
call
cmp
jnp
pop
push
mov
pop
push
pop
movsl
sarl
push
inc
ret
inc
jo
mov
inc
adc
das
pop
imul
cmp
fidivs
sarl
or
mov
jl
or
ss
insb
loop
movsb
cmp
xchg
out
icebp
test
loopne
mov
mov
push
jo
or
enter
dec
test
mov
leave
test
cmp
or
or
das
aam
and
jae
pop
fwait
add
mov
insl
or
dec
movsb
fbld
jns
mov
ljmp
dec
loop
in
add
and
leave
xchg
sbb
cmp
in
sub
jg
xlat
sub
incl
cli
pop
sbb
add
aas
add
gs
data16
adc
jb
xor
out
scas
push
cwtl
clc
mov
mov
add
test
sbb
pop
sbb
fidivrl
inc
sub
xor
dec
cmpsl
clc
test
push
add
pop
pop
cmc
inc
fs
mov
loope
sahf
pop
mov
mov
add
cmpl
or
jo
dec
add
and
or
xchg
push
add
inc
push
add
lcall
sbb
inc
shlb
popf
mov
cmp
mov
adc
push
xor
push
adc
add
repz
cmpsb
push
pushf
jge
xor
pop
mov
divl
movsl
xor
push
adc
push
imul
or
adc
fs
bound
orl
fdivs
add
inc
jecxz
xor
xchg
pop
inc
jecxz
js
push
sub
fs
pop
mov
push
sub
add
loope
movsl
push
or
xchg
and
push
add
fmuls
cvtdq2ps
lea
pop
push
push
inc
and
xor
adcb
mov
sub
test
inc
mov
mov
mov
mov
ror
mov
mov
or
das
dec
dec
sub
pop
lea
sahf
and
and
push
xchg
lcall
sbbb
xor
cmp
daa
cmp
shrb
sbb
xchg
push
sub
xor
pop
push
std
push
adc
mov
mov
call
dec
xor
push
mov
mov
lret
jge
mov
xor
or
ret
mov
pop
mov
dec
push
pop
adc
or
and
jb
jmp
jmp
jne
jbe
ret
lcall
dec
xchg
adc
js
into
loope
cld
test
fists
cmp
sbb
sbb
insb
push
incb
out
out
cmp
mov
adc
jbe
push
mov
mov
or
mov
adc
add
jp
inc
outsl
sbb
iret
sbb
xlat
sub
push
cmp
aaa
add
cmp
add
cmp
sbb
or
iret
xor
ret
fmul
stc
dec
jne
inc
mov
inc
pop
jns
mov
and
pusha
pop
adc
in
je
mov
scas
add
pop
jecxz
add
sub
inc
inc
mov
scas
sbb
or
add
xlat
and
or
mov
sub
xchg
rolb
jl
mov
xor
dec
jecxz
xor
pop
inc
sbb
movsl
adc
insb
pop
imul
pop
loopne
pop
lock
icebp
cmp
mov
push
mov
mov
repnz
icebp
xor
adc
enter
or
add
or
jns
dec
outsl
ja
inc
arpl
cmp
mov
dec
mov
or
cmp
in
lods
in
testl
outsl
sub
sarl
jbe
ss
and
mov
lret
dec
jns
lods
test
or
and
into
cltd
push
cmp
inc
shlb
push
push
aas
mov
stos
orb
xchg
movsb
push
fnstsw
xchg
jl
pop
test
fwait
cmp
jns
mov
add
popa
popf
and
loopw
jp
jge
jp
clc
rclb
wrmsr
sub
movsl
nop
mov
pop
out
dec
aaa
mov
je,pn
cmp
add
push
les
jnp
fwait
int
rol
mov
jne
and
rolb
enter
daa
ljmp
push
add
cmp
aam
add
add
pop
push
test
or
int3
inc
sub
aaa
in
mov
add
iret
repz
out
enter
jmp
movsb
jmp
fadds
add
push
xor
sub
and
outsb
aas
int
movsb
and
test
xchg
outsb
xchg
mov
dec
inc
mov
test
jle
lret
xor
test
push
cmp
mov
sbb
xchg
rol
sarb
inc
ret
lea
push
push
cmc
dec
adc
cmp
les
mov
cmp
fildl
inc
cltd
data16
and
or
sub
sub
and
fs
out
call
cmp
cwtl
push
push
push
sub
mov
sub
ja
xor
sbb
xchg
pusha
dec
fidivl
stos
mov
scas
shrb
xor
add
roll
movsl
sub
aad
cmpsb
sbbb
lret
jnp
data16
stc
push
mov
dec
daa
call
sbb
pop
pop
push
std
je
dec
jb
adc
je
mov
jg
fs
pop
mov
inc
roll
and
imul
push
lods
pop
incl
orl
and
dec
pop
jg
fadds
push
or
push
xchg
or
and
cmpsb
fmuls
dec
push
or
xchg
add
mov
call
call
mov
sbb
and
and
or
xor
cs
std
out
outsl
adc
mov
enter
add
or
inc
dec
mov
pop
sbb
and
push
loopne
xor
dec
outsl
lods
or
lock
insb
or
fwait
mov
jg
adc
inc
xor
inc
mov
jp
add
loope
cmp
sub
cmp
dec
adc
dec
xchg
pusha
cwtl
dec
inc
cli
into
add
dec
adc
xchg
adc
mov
push
loope
rol
ret
movsl
jl
test
mov
icebp
xchg
pusha
and
mov
iret
and
jnp
mov
mov
scas
jg
or
pop
rol
movsl
iret
mov
lock
xor
xor
pop
push
movsl
add
dec
cmp
lds
sahf
lods
pop
jbe
imul
adc
jmp
and
sub
xchg
hlt
push
mov
pushf
dec
cld
jp
icebp
ret
pop
or
add
iret
nop
add
adc
jmp
mov
sub
loopne
adc
out
add
cmp
push
ret
insb
mov
add
bound
data16
mov
dec
or
and
lea
clc
mov
repnz
add
ljmp
sbb
orb
cmp
addr16
xor
je
mov
pop
cmc
jnp
sub
pop
ja
and
or
or
fs
cmpsb
pop
or
out
inc
inc
and
pop
pop
cmp
rorl
adc
movsl
pop
dec
insb
ret
push
jp
adc
roll
fisttps
dec
dec
in
and
mov
push
xchg
mov
out
inc
jo
sub
in
pop
jne
sub
test
push
inc
dec
pop
push
pop
xor
addl
add
adc
jne
in
sbb
nop
je
je
xor
or
mov
ficoms
fstl
sub
lock
inc
and
ss
test
cmp
jmp
sub
std
xor
push
out
dec
or
add
dec
sbb
sbb
or
mov
adc
jns
pop
dec
push
mov
cmp
inc
push
jge
nop
fdivrl
iret
repz
call
inc
or
loopne
xor
out
cltd
and
or
jns
out
adc
jle
pop
daa
xor
cmp
dec
push
xchg
xor
mov
iret
mov
insl
mov
or
or
pop
jle
cld
inc
mov
or
test
lds
push
int
test
cli
ds
dec
fnstsw
add
jo
bound
pop
add
lea
or
xrelease
cld
push
or
add
rorb
push
sub
int
jo
or
push
shll
sbb
add
mov
ret
push
imul
push
pop
sar
or
mov
push
repnz
adc
insb
pop
pop
cli
mov
cmp
or
clc
xchg
mov
sub
inc
pop
dec
les
notb
mov
add
jge
mov
pop
add
push
sub
clc
gs
shrl
mov
fidivs
mov
in
pop
stos
sbb
dec
movl
and
pop
adc
add
int3
push
mov
cmp
mov
lea
int
add
mov
inc
dec
push
or
lods
pop
inc
ret
inc
inc
xchg
or
bound
mov
shrb
xchg
mov
and
lret
xchg
lcall
mov
push
inc
xchg
leave
outsl
sbb
dec
xchg
sbb
xor
sbb
cmp
lods
cli
or
test
adc
sub
dec
inc
ret
sub
and
out
mov
test
xchg
xchg
or
sub
mov
dec
js
and
inc
adc
push
adcb
enter
sub
inc
testl
lcall
pop
dec
mov
lret
dec
call
inc
sub
into
inc
sub
movsl
pinsrw
lds
leave
push
add
push
or
push
cs
pop
pop
movsb
in
jp
jge
in
xchg
add
pop
dec
sbb
mov
dec
push
scas
or
loopne
cmpsl
je
push
sbb
inc
inc
mov
add
push
sbb
sub
mov
mov
mov
adc
sbb
cmp
cmp
sbb
sub
lea
inc
and
roll
dec
adc
ror
cmp
in
fsts
jmp
lret
sub
and
jl
push
dec
add
ss
test
dec
inc
fdivrs
filds
add
or
fdivl
pop
mov
or
add
add
inc
inc
cmpsl
sarl
xchg
stc
sbb
rcrb
xchg
cmc
es
jno
jmp
setne
push
shll
pavgb
pop
outsl
inc
fldt
nop
push
cld
cmpl
or
je
je
push
iret
push
pop
test
push
into
xor
sub
addr16
cmc
enter
mov
jns
daa
inc
str
rorb
je
adcl
cltd
dec
fwait
sub
inc
inc
push
shrl
xlat
push
or
pop
and
and
xor
fisttpl
iret
mov
out
inc
xchg
loop
xlat
add
push
dec
cmp
xchg
push
fisubrs
xlat
shr
lods
inc
rolb
ret
shrb
inc
test
fisubrl
shrl
bound
push
in
push
orl
sub
fs
adc
adc
cmp
test
or
add
or
sub
add
xor
pop
fsubrs
inc
lock
pushf
addl
xor
es
xchg
or
outsl
mov
mov
stos
mov
inc
roll
lret
fisubl
sub
movsl
push
push
fs
dec
push
ret
fstps
inc
mov
aas
sbb
inc
divl
and
es
sub
lods
xor
mov
push
cmp
cmp
pop
push
jecxz
add
test
dec
cs
ds
outsb
test
and
js
jae
add
and
movsl
push
fadds
loop
into
sbb
sbb
in
jnp
fistl
cmp
inc
mov
mov
lret
addr16
push
inc
mov
dec
jnp
fldl
sbb
push
pop
aaa
loope
or
cmpsb
cmp
inc
sbb
or
fisttpll
and
out
or
xchg
jg
jecxz
cmp
adc
jo
jne
lcall
test
divl
cmp
jne
in
pop
pop
xchg
lea
mov
dec
push
xor
cwtl
imul
mov
sbb
or
dec
pop
sub
fmuls
push
call
mov
xor
shlb
or
xor
jns
mov
dec
insb
sub
hlt
push
in
xor
add
inc
or
mov
and
jl
or
adcl
ret
jne
add
sub
sbb
add
inc
scas
xor
bound
push
jne
in
mov
icebp
cmp
inc
adc
jns
pop
js
or
bndldx
dec
mov
pop
dec
pop
pop
and
pop
repnz
dec
sbb
lea
mov
push
push
jmp
dec
mov
adc
dec
xor
and
add
xchg
pop
shl
movsb
mov
pushf
pushf
jnp
out
pop
cwtl
jb
inc
inc
cmp
les
jb
push
je
loopne
outsb
add
shlb
aaa
jo
ja
shl
jns
push
fstl
jo
jae
movsb
and
inc
sbb
pop
mov
fsts
add
loop
mov
daa
fndisi(8087
call
pop
push
jecxz
mov
cmp
mov
in
sbb
lds
sbb
insl
inc
gs
xchg
dec
popa
cmpxchg
sbb
jmp
nop
inc
push
movsl
ret
rcrl
imul
inc
pop
inc
adc
mov
mov
int3
xchg
je
fstpl
fdivrs
insl
bound
jo
xor
cld
pop
pop
mov
pop
pop
mov
and
pushf
mov
dec
lods
sub
cs
add
int3
insl
pop
pusha
mov
xor
sbb
mov
mov
push
pop
pop
dec
mov
in
push
cmp
stos
test
fidivrs
add
ja
call
insl
in
in
in
into
adc
daa
test
pop
push
xchg
lea
rep
mov
inc
push
clc
adc
mov
pop
inc
xchg
and
jne
fidivs
stos
outsb
fisttpl
es
cmp
mov
pusha
dec
and
push
pop
adc
popa
std
dec
jp
inc
or
insl
adc
push
xor
test
cwtl
out
js
and
add
hlt
push
inc
ret
call
incb
push
out
mov
into
es
rcrl
inc
and
iret
ret
cmp
xchg
cmc
pop
xchg
subps
imul
lret
sbb
and
sbb
adc
je
std
divb
jno
fwait
push
add
jno
dec
stos
popf
sub
xchg
push
adc
lret
pop
or
inc
xor
inc
dec
jae
jae
cs
mov
ss
pop
je
sbb
nop
cmc
jae
jne
mov
and
orl
jbe
or
sbb
push
lods
ss
test
xchg
inc
or
push
neg
mov
push
cmpb
jge
mov
adc
adc
dec
mov
push
sub
lcall
push
push
fwait
je
mov
jne
jnp
or
cmp
insb
mov
insl
add
imul
lods
aad
out
mov
clc
test
adcl
clc
mov
push
and
lahf
addr16
cmpsb
and
add
jbe
out
and
lret
sbb
adc
add
fcoms
jbe
inc
and
sub
jmp
adc
sbb
sbb
jp
push
adc
jne
adc
and
ja
pop
jmp
push
push
push
sub
out
jbe
ja
xchg
ret
or
mov
movsb
pop
mov
xchg
add
adc
inc
cltd
sub
sbb
aam
int3
aad
fs
testl
into
out
push
mov
imul
cmp
fs
sbb
mov
jnp
inc
push
ds
cmp
pop
test
dec
sarb
push
or
xchg
mov
mov
ja
mov
mov
testb
stos
fs
fidivrl
push
inc
roll
mov
imul
cs
xor
fisubs
clc
add
push
mov
lock
mov
or
jg
inc
popa
jmp
jnp
mov
adc
sbb
jg
mov
mov
inc
scas
cmp
jne
dec
sub
jmp
mov
pop
or
or
push
and
jae
or
sub
sub
hlt
out
or
and
mov
pop
xor
jp
aaa
add
inc
jle
add
cmp
int
add
sbb
or
jg
movsl
cmp
push
sbb
in
es
pop
in
and
rorl
push
mov
ret
ja
daa
mov
ja
outsl
or
mov
clc
dec
ljmp
outsl
inc
jg
clc
int
aas
adc
cld
sbb
test
jo
test
or
loope
lahf
sbb
clc
xorps
sub
gs
dec
xchg
cmp
enter
icebp
adc
call
je
adc
add
shl
scas
mov
stc
mov
shll
and
add
or
scas
add
mov
mov
and
add
or
stos
sbb
mov
or
sbb
or
mov
lock
jnp
jnp
and
mov
rorb
in
out
mov
ret
dec
in
jg
dec
mov
mov
fistps
enter
push
insb
sub
cmp
ja
mov
xchg
push
clc
sbb
mov
push
ja
sbb
shr
sub
sbb
lcall
adc
pop
xor
stos
xchg
sub
out
ret
roll
leave
push
sub
add
je
push
es
inc
ret
dec
imul
xor
sub
jl
add
js
xor
in
dec
ss
outsb
mov
or
mov
inc
cmp
jno
dec
outsb
ljmp
pop
shll
mov
leave
nop
aam
sbb
roll
or
out
int
sub
inc
cmp
fadd
pop
mov
add
test
pop
xor
or
dec
pop
mov
cmp
xor
stc
mov
xor
sbb
rcll
and
dec
inc
scas
xchg
inc
insl
and
lds
mov
fwait
or
sbb
jl
mov
push
repz
or
ret
ficompl
mov
add
or
pop
popa
addl
push
in
insb
iret
negb
dec
jmp
ljmp
sahf
repz
in
or
cmp
sahf
in
jns
in
adc
out
fsubl
push
test
adc
adc
pop
adc
or
cld
adc
add
or
maxps
movsb
adc
flds
fwait
jne
mov
rolb
add
pop
dec
dec
add
lock
hlt
cmp
repz
sbb
sub
adc
pop
add
bound
pop
and
ja
pushf
mov
dec
jmp
in
jge
add
mov
cli
std
jne
pop
lock
jmp
cmp
adc
xchg
mov
pop
add
ss
lcall
jle
add
lods
mov
enter
loope
fiadds
add
add
jecxz
cwtl
jno
pop
sbb
mov
into
je
adc
fildl
adc
pop
ret
lahf
iret
push
pop
add
sarb
jg
inc
test
mov
jne
and
leave
frstor
pop
add
xor
xchg
insb
adc
rolb
push
add
add
clc
jo
in
test
fsubrp
fimuls
jg
sub
insl
push
mov
fiadds
pop
enter
push
nop
sbb
es
lods
jae
mov
out
add
mov
jne
loopne
dec
aaa
inc
cmpsb
inc
clc
das
adc
push
push
jmp
jns
ret
add
cmp
into
push
loope
inc
dec
mov
ljmp
xor
adc
movsl
pop
ljmp
ja
add
outsb
arpl
mov
addr16
adcb
xor
dec
pop
test
movsl
lods
add
loopne
add
jecxz
and
inc
ljmp
dec
sub
mov
jg
jmp
push
push
push
test
mov
out
daa
loope
push
mov
ret
test
pop
xor
imull
add
sub
and
sub
cmpl
dec
sub
cmp
and
loop
xor
add
lss
das
jne
sub
pop
cmpb
pusha
mov
imul
js
sub
adc
mov
push
lret
or
add
cmp
mov
stos
sub
push
clc
inc
lods
inc
sbb
fnstsw
les
in
ret
push
test
xor
out
les
enter
add
stos
je
js
and
sub
mov
sub
and
in
loopne
test
and
gs
test
arpl
cmp
aam
adc
pop
xchg
push
clc
into
ja
mov
xchg
mov
ret
sub
imul
imul
pop
cmp
iret
xchg
pusha
fsubrl
pop
sbb
push
add
mov
stc
dec
lds
jbe
push
inc
inc
sub
jl
dec
xlat
add
push
mov
mov
sbb
mov
mov
leave
ja
test
daa
pop
sbb
leave
push
cmp
lock
mov
ret
lret
pop
sbb
sub
mulb
das
ret
cmp
add
call
rclb
loope
movsb
mov
sbb
xchg
fsubs
sub
sbb
push
xchg
call
shl
jae
add
or
mov
inc
cmp
push
jbe
adc
xchg
cmp
cmpsl
hlt
rcrb
or
dec
sahf
jbe
popf
es
xchg
push
pop
sbb
push
push
lds
push
pop
aas
xadd
push
push
inc
push
sub
inc
mov
sub
pushf
pop
mov
cli
fisubl
out
push
jb
pop
jmp
mov
sbb
jmp
inc
popa
outsl
cmc
arpl
push
call
jmp
loope
mov
adc
pop
adc
mov
xor
adc
push
clc
fbld
test
add
sbb
scas
add
loopne
jns
sub
jne
fmuls
inc
gs
and
add
push
push
mov
subb
pop
pop
add
out
push
ret
cmpl
mov
xchg
jne
lock
packssdw
dec
pusha
mov
ret
add
push
in
add
add
xchg
mov
mov
xor
int3
fldl
cld
lahf
push
pop
sub
jle
mov
add
mov
insl
pushf
mov
sbb
sub
inc
imul
adc
mov
movsb
dec
sub
push
sbb
cli
add
lea
jp
add
lret
sbb
lret
into
ret
test
enter
mov
mov
pop
shlb
dec
or
jl
test
pop
test
pop
sub
add
pushf
sub
sub
xchg
xchg
inc
mov
sub
fwait
ret
or
jne
and
aaa
jo
pop
add
xchg
lret
movsb
movsb
mov
out
aas
cli
dec
sbbb
sub
cmpsb
sub
add
lods
add
mov
lret
andb
loopne
adc
add
xchg
mov
insb
push
mov
pusha
push
xor
adc
xchg
lods
aaa
mov
lods
out
dec
jb
jne
mov
in
jbe
mov
negl
inc
or
mov
add
sbb
faddl
adc
pop
loope
push
sub
push
jbe
stos
sub
adc
dec
add
or
inc
or
and
test
js
add
dec
adc
stc
jle
push
mov
cmp
inc
sti
cmp
insl
ljmp
and
pop
pop
iret
mov
sbb
dec
cmp
sub
push
xchg
mov
fildl
pop
test
adc
push
mov
test
push
push
add
or
jno
add
scas
pop
and
jp
add
aam
mov
adc
shlb
or
test
mov
sbb
imul
shlb
lock
pop
mov
pop
addl
jb
adc
mov
inc
scas
fildll
mov
and
cld
jo
test
loopne
or
shrb
inc
mov
je
jno
rolb
xchg
mov
loopne
cwtl
push
cmp
std
cmpsb
jne
subl
push
out
inc
jne
andl
std
cmpsb
xor
test
xchg
inc
dec
or
shlb
sub
shll
push
jne
fildll
and
inc
scas
test
test
aas
test
dec
test
add
bound
add
pushf
or
dec
sbb
les
mov
xor
xor
cmp
dec
and
popl
shlb
dec
movb
inc
das
xor
jo
lret
imul
pop
test
ljmp
lret
dec
xchg
pop
hlt
or
adc
es
add
jecxz
ja
sub
add
fs
add
outsb
into
or
fimull
insl
pop
jmp
fbstp
icebp
adc
adc
in
mov
into
cli
lds
cmp
push
clc
in
and
mov
push
push
dec
dec
ret
adc
ds
dec
adc
je
adc
xor
dec
add
xlat
xchg
add
push
push
nop
flds
pop
lea
ret
shrb
xlat
outsb
xor
dec
test
push
lret
scas
sbb
shlb
addr16
or
push
jmp
in
sahf
cmp
shrl
sahf
push
mov
mov
adc
out
jmp
or
loopne
push
push
sahf
orl
cmp
notb
call
xchg
jmp
lods
jmp
jmp
cli
cmp
cmp
jns
js
sbb
out
gs
adc
jecxz
jo
adc
insl
jbe
pop
xorl
add
cltd
inc
cs
add
add
xchg
or
adc
pushf
add
mov
xchg
add
dec
mov
cmp
inc
add
sbb
or
nop
add
dec
dec
jb
repnz
xchg
add
jmp
cld
adc
paddb
jg
daa
push
icebp
shrb
adcl
pop
cmpl
or
add
loopne
jno
cmpl
dec
scas
sbb
lods
inc
movsb
add
sub
sbb
enter
xor
insb
or
mov
lds
jno,pt
pop
ja
lea
mov
les
cmc
inc
xor
orb
fstps
mov
imul
cmp
jne
nop
movsl
xchg
shrb
popa
pop
lcall
push
mov
pusha
rorb
or
popa
rcrb
xor
ljmp
fisubl
push
adc
out
je
xor
add
sub
push
lcall
sub
scas
cmp
orl
push
popf
lods
dec
push
sarb
ficoms
cmpb
enter
add
outsl
pop
dec
lahf
lods
sbb
mov
outsb
es
push
mov
fiaddl
and
mov
sub
ficoms
sarb
or
and
inc
loopne
mov
add
xor
add
sub
ret
and
adcb
test
aad
push
mov
sarb
jb
sbb
inc
mov
mov
push
add
xchg
and
dec
push
pop
in
pop
add
xor
add
push
mov
into
cmp
xor
mov
push
push
jae
rolb
jb
mov
adc
mov
and
cli
loopne
and
dec
jae
add
ret
stos
xor
or
fdivl
or
out
dec
aad
ds
adc
dec
cmp
fcmovnu
add
xor
cmpsl
cmp
mov
inc
and
rclb
into
or
adc
int3
mov
jp
push
sti
sbb
or
add
cmp
dec
xchg
repnz
add
jl
sbb
mov
cmpsl
lds
dec
add
cwtl
loopne
lea
sarb
adc
pop
or
push
sub
int3
je
mov
rol
add
lock
ljmp
jae
jmp
movl
or
inc
addl
insl
sbb
xchg
push
pusha
aas
cwtl
popa
rorb
fnsave
negb
enter
rcll
pop
scas
ror
jo
loope
jl
mov
or
lds
sbb
or
add
add
push
or
or
lock
mov
in
test
test
leave
inc
jb
adc
and
movsb
repnz
pop
test
leave
and
adc
aad
les
or
cmp
pop
test
adc
in
cmp
or
pop
bnd
mov
cltd
pop
and
sbb
pusha
add
add
pop
into
xor
dec
lods
dec
gs
adc
scas
add
or
sahf
adc
jo
and
add
push
enter
pop
test
mov
jo
or
test
and
adc
pusha
mov
mov
sub
inc
add
add
adc
adc
enter
add
enter
and
mov
adc
xchg
adc
test
mov
mov
adc
pop
test
leave
test
add
add
leave
sbbl
loop
or
xor
adc
push
push
repnz
cmp
dec
jne
jo
cmp
pop
lods
test
sbb
ret
es
ret
je
or
cmp
add
add
sbb
lock
cmpsl
dec
add
jl
cmp
pusha
cmpb
cmp
jne
loopne
daa
nop
jb
ljmp
or
sbbl
dec
dec
dec
dec
andb
push
dec
adc
mov
shl
rcrb
sub
lock
push
test
jno
fwait
lock
mov
out
and
cs
cwtl
inc
fidivs
lock
mov
push
sub
negb
and
push
imul
lret
jae
add
inc
adc
jbe
inc
rolb
add
in
jnp
dec
push
push
sbb
add
add
iret
mov
cmp
mov
mov
imul
mov
push
xchg
test
and
dec
push
adc
sub
mov
jg
out
push
rorb
jbe
clc
xchg
arpl
add
cmp
shl
xchg
ficompl
jge
jp
pop
mov
jb
dec
adc
fistpl
inc
jbe
sub
jne
aad
mov
dec
or
test
adc
xor
fbld
adc
dec
roll
pusha
pop
lods
mov
add
ror
sbb
push
or
or
or
adc
test
test
push
jle
sbb
cmp
add
push
add
je
xor
lret
or
aad
push
pop
add
xlat
sbb
cmpsb
repz
mov
add
scas
mov
aaa
or
je
add
leave
and
xor
push
adcb
mov
or
out
js
sbb
push
dec
mov
mov
mov
dec
push
xchg
flds
inc
ret
mov
xorb
add
push
push
addr16
inc
sbb
or
pop
adc
inc
jbe
or
adc
movsb
and
xchg
loope
adc
mov
dec
xor
adc
jae
push
es
xor
cs
mov
ss
add
push
into
nop
cmp
add
adc
xor
sbb
dec
insb
aaa
rolb
lock
mov
mov
rcrb
adc
out
add
inc
stos
rolb
mov
nop
popa
arpl
cld
dec
push
das
pop
or
inc
aaa
inc
adc
enter
xlat
sar
mov
ret
int
jb
jbe
pop
cmp
add
mov
fimuls
mov
add
push
inc
insb
add
adc
into
xchg
sbb
and
add
fs
xchg
jb
or
test
mov
fadds
ja
mov
mov
iret
sar
in
xor
out
rclb
lahf
ds
add
inc
mov
push
test
mov
in
add
pushf
push
mov
add
icebp
jmp
jmp
inc
push
dec
insb
outsl
insl
aaa
test
mov
jbe
fildll
adc
lea
orl
out
mov
leave
rcrl
mov
add
jg
add
jbe
mov
cli
cmpsb
or
popa
orl
test
pop
sub
jae
nop
and
lea
jmp
push
ja
daa
fs
in
cmpsl
sarb
add
outsb
dec
dec
dec
fisttps
cmp
imul
jno
sub
lods
pop
adc
outsb
add
shlb
push
pop
add
mov
js
cmp
cmp
je
add
add
inc
cli
mov
or
inc
shll
test
lret
xor
jl
orb
pop
cwtl
or
and
sbb
cmp
pextrw
jg
sbb
sub
movsl
or
push
cmp
shrl
cmc
mov
nop
sahf
or
test
stc
lods
sti
test
adc
into
and
and
cmp
pop
popa
adc
daa
test
mov
sbb
movl
pop
jmp
and
xchg
xor
jbe
xor
ljmp
rcl
bound
adc
es
in
push
inc
in
xor
aam
pop
sub
outsl
mov
push
push
stos
inc
xchg
ds
fisubs
rorl
hlt
add
cld
std
pop
xor
adc
je
push
adc
addl
pop
push
in
in
add
popa
xchg
jne
pop
je
adc
aam
rcrb
xor
adc
rorb
sahf
mov
xchg
jae
sahf
imull
push
or
filds
gs
sbb
dec
mov
rorl
subl
cmpsb
inc
cs
sbb
adc
cwtl
push
and
mov
cmp
jle
je
mov
je
add
push
or
je
pop
xor
push
add
lods
ss
mov
mov
adc
adc
cwtl
test
dec
jb
sbb
lods
mov
push
push
mov
push
pushf
add
inc
sub
jecxz
cmp
or
std
cmp
ja
inc
jb
jns
mov
xchg
into
out
add
add
dec
out
push
mov
push
sbb
jns
fmulp
adc
fs
push
mov
adc
sub
adc
or
ljmp
dec
mov
sub
or
fnstcw
ja
sub
ds
ud2
loope
mov
movsb
sub
and
mov
fidivs
int
sub
pop
jo
add
push
orl
inc
scas
mov
and
mov
arpl
mov
add
in
jmp
scas
push
lods
cli
mov
adc
mov
rolb
pop
mov
leave
mov
jg
fisubs
xor
shrb
aam
jnp
jmp
cmp
sbb
jb
fcompl
add
ret
add
dec
adc
inc
ja
xchg
push
pop
ret
add
mov
roll
xor
in
jne
xchg
aam
push
flds
sub
ja
mov
and
lcall
adc
add
sbb
lahf
add
jmp
pop
add
pop
adc
decb
dec
loopne
xchg
sbb
out
outsb
dec
push
or
or
hlt
push
sbb
jle
jne
adc
stos
add
ret
or
jne
adc
mov
loope
and
mov
enter
out
dec
pusha
pop
jl
fstpt
add
test
lret
or
xor
test
add
rolb
jo
ss
leave
dec
pop
sub
inc
popa
or
mov
pop
push
mov
xchg
add
movsb
inc
sahf
xchg
inc
cli
mov
js
or
pop
nop
pushf
xor
add
push
or
lret
ja
jl
das
movsb
or
xor
jle
es
pop
inc
sub
ss
push
inc
sbb
dec
adc
sbb
sahf
scas
cmpb
jo
fwait
mov
cmpsl
movsl
aad
add
mov
addb
adc
cmp
rcll
in
mov
cmp
jne
xchg
and
sbb
mov
dec
or
sbb
aam
aaa
adc
xchg
fstl
mov
sbb
fstpl
daa
add
stc
inc
lods
sub
mov
or
jno
push
push
pusha
sub
das
adc
lock
adcb
push
inc
dec
mov
and
xsha256
cmpsb
adc
jno
and
loope
sbb
mov
and
add
pop
pop
js
mov
insl
int3
and
mov
dec
mov
and
sbb
xor
mov
sbb
adc
pop
lcall
adc
pushf
jle
je
ret
sar
rcrb
mov
mov
test
dec
add
outsb
movsbl
add
cld
emms
xor
stc
cmp
inc
hlt
lock
mov
and
or
push
sti
jmp
push
add
inc
add
or
xor
repz
and
shr
cmp
sub
insl
mull
inc
and
add
inc
lcall
xor
out
and
sarl
out
lcall
in
jne
adc
inc
inc
xor
and
fistpl
repnz
sbbb
sarb
inc
les
jbe
push
cmp
cltd
push
shlb
clc
mov
in
or
orl
or
aam
inc
pop
lea
fmull
adc
enter
scas
mov
pop
and
sub
popa
sub
and
pop
shll
add
add
lods
mov
add
or
add
out
out
mov
subl
ret
ds
fisubl
aas
sbb
push
aaa
es
test
inc
jle
mov
dec
movsl
addl
sub
mov
lret
mov
insb
cmp
jle
pop
adc
and
arpl
push
movsb
xchg
jecxz
mov
sub
sahf
add
xor
data16
or
loopne
jae
or
subl
cmp
add
jmp
inc
ret
xchg
add
push
lcall
enter
sbb
xchg
pop
sbb
push
pop
cwtl
pop
gs
cmpl
aaa
lock
inc
lock
sbb
cld
or
mov
lock
cmpl
push
rclb
inc
add
or
fsubr
imul
call
sarb
add
push
repz
cmpsl
fldcw
lret
int
cltd
adcl
andb
add
aas
xor
mov
cmp
adc
sub
inc
mov
dec
inc
or
ret
and
inc
add
lret
inc
or
fwait
rcrb
and
insl
ret
push
mov
push
sub
sbb
daa
insl
and
sub
mov
mov
dec
dec
das
add
mov
cmp
jbe
push
push
dec
pop
mov
sahf
xlat
pop
inc
inc
add
add
mov
cwtl
lods
lret
repnz
sarb
scas
dec
jmp
cltd
dec
daa
xor
add
mov
imul
inc
sarb
outsl
jb
pushf
push
nop
insl
push
movsb
scas
mov
adc
outsl
stos
dec
push
imul
and
addr16
push
out
dec
nop
pop
push
inc
push
inc
mov
inc
cli
imul
xchg
push
inc
das
jbe
cmp
sbb
ja
lea
cmp
and
mov
in
pop
xor
push
sub
dec
sbb
push
fwait
jbe
pop
dec
notl
jbe,pn
or
ds
xor
adc
mov
mov
jo
sbb
inc
add
cmp
pop
jp
es
inc
pop
fistps
dec
divb
popa
jnp
dec
push
mov
dec
push
loop
or
sub
in
jae
and
sbb
sub
adc
pop
inc
es
push
pop
fs
push
sbb
cmp
push
sbb
sbb
mov
pop
out
xchg
inc
das
shlb
outsb
pushf
clc
jge
inc
imul
or
icebp
push
or
and
xor
inc
shrb
xor
add
adc
add
and
xor
mov
sbb
cmpsb
movlps
orl
mov
sbb
dec
sbb
dec
push
dec
push
movsb
jb
pop
push
push
js
push
push
xchg
cmpsb
jge
dec
push
lods
push
inc
daa
stc
jle
jbe
sub
jmp
cmp
xchg
mov
and
repz
push
call
push
jb
sbb
jbe
rcrl
sbb
jp
jp
mov
in
ss
inc
aas
lods
mov
cmp
push
jmp
or
sbb
adc
pop
and
mov
fnstcw
xor
xor
mov
neg
jnp
insb
push
test
xor
push
mov
cmp
or
or
xchg
or
jl
add
or
or
daa
addb
add
pop
pop
xchg
mov
in
call
push
or
add
ljmp
nop
je
in
sub
ss
dec
push
imul
inc
outsb
in
dec
sub
dec
orl
push
adc
out
or
dec
out
pop
enter
add
addb
dec
or
mov
enter
or
or
enter
or
push
and
dec
pop
dec
sub
dec
xor
and
in
adc
add
sbb
pop
shll
popa
push
and
adc
push
adcl
loope
sub
mov
push
pop
nop
test
mov
xor
sub
mov
push
ljmp
or
jae
or
or
add
orl
xchg
push
orl
outsl
add
adcl
push
add
enter
cmpl
inc
add
add
xchg
lret
add
adc
inc
lds
lock
sbb
pop
or
adcb
push
push
mov
adc
push
mov
or
xor
or
cmp
fisubrl
push
inc
add
xchg
add
push
push
push
bswap
inc
push
or
add
fldl
test
add
inc
adc
adc
inc
push
push
and
adc
jge
daa
sbb
mov
push
in
shrb
ret
mov
jnp
inc
js
add
mov
js
push
or
cmp
leave
push
sarb
push
jae
leave
addl
js
xchg
sbb
dec
push
push
xchg
or
mov
and
cltd
rolb
mov
pop
push
sub
je
mov
jae
pop
fwait
pop
ds
push
and
jmp
mov
movsb
fistpll
or
aaa
jg
push
pop
insb
sahf
out
arpl
js
cmp
push
push
cmp
bound
leave
nop
cmp
or
les
jg
test
sbb
sti
jp
pcmpeqw
mov
mov
pop
pop
mov
ret
mov
add
or
or
jl
add
pushl
cmp
enter
jne
mov
dec
dec
add
sub
dec
jecxz
add
incb
mov
movsl
das
filds
cmp
mov
xor
push
pop
dec
xchg
sbb
pop
add
enter
iret
jnp
nop
push
xchg
bound
out
inc
adc
cmpl
enter
pop
add
rcl
jmp
rorl
xorb
sarl
aas
jo
mov
lcall
and
mov
in
int
push
movsb
or
sub
or
sub
push
sar
test
push
jle
mov
es
adc
lock
sahf
cmc
and
sbb
je
cmp
sti
mov
sarb
jl
aaa
inc
inc
jl
and
inc
add
adc
sbb
insb
cmc
mov
fdivrs
fisubrs
sbb
push
pop
aam
mov
jne
fwait
or
sub
int
push
adc
pushf
push
lock
and
or
sbb
mov
push
mov
lds
fiadds
loopne
fsubl
mov
les
add
aas
es
movsl
adc
mov
shlb
js
adc
cs
and
push
add
push
dec
or
aas
or
ret
dec
jle
and
cmpl
sbb
sub
mov
dec
jg
daa
pop
enter
pop
in
add
fs
lcall
nop
lsl
mov
mov
and
jns
inc
adc
lods
fs
fwait
or
cltd
add
fsubl
mov
in
jb
lods
lods
xor
or
dec
push
xchg
dec
mov
adc
gs
mov
mov
push
pushl
dec
pop
and
and
xor
js
js
nop
lret
and
add
nop
and
shll
ds
test
das
cmpsb
mov
jmp
sub
inc
insb
pop
ret
sub
shll
test
bound
lret
xor
or
lock
or
and
push
out
mov
je
popa
and
hlt
out
sbbb
imul
fldenv
mov
es
mov
cwtl
rolb
inc
js
mov
xor
pop
inc
aas
add
stos
ljmp
dec
mov
lods
inc
dec
scas
inc
mov
mov
addr16
pop
adc
jno
rorb
addl
xchg
mov
or
lds
or
lock
cmp
addr16
sub
inc
pop
pop
pusha
sbb
sbb
in
sbb
fimull
lods
sbb
inc
inc
cmpsb
loope
rol
and
mov
pop
add
pop
in
scas
nop
xor
sbb
mov
and
jg
mov
xor
fisttpll
std
jae
pop
mov
insl
add
and
inc
sbb
test
inc
lcall
adc
push
cwtl
xchg
sub
out
inc
xor
push
pop
cld
adc
sbbl
je
popa
aas
mov
add
mov
jge,pn
mov
push
lods
dec
add
or
mov
adcb
movsb
je
sbb
jae
cs
mov
call
popa
jo
inc
ret
pop
mov
mov
fnstsw
repz
sub
iret
and
fdivrs
sbbb
stc
mov
xchg
adcb
repz
add
add
bound
push
in
loop
jmp
adc
mov
je
sbb
lret
inc
xchg
and
push
out
adc
movsl
xor
push
xor
pop
mov
arpl
out
xor
mov
imulb
jg
adc
rol
stos
add
popa
pop
add
mov
adc
stc
ret
pop
add
jmp
xor
push
popf
lods
loope
pusha
inc
push
push
push
stc
mov
inc
sbb
loopne
inc
and
mov
mov
insb
push
rorb
adcl
push
inc
sub
xor
gs
data16
test
mov
mov
inc
pop
out
mov
or
pushf
push
cmp
cs
push
inc
inc
lds
push
mov
mov
lret
cmpsl
leave
push
push
and
rorl
outsb
lahf
ret
sub
dec
add
push
insl
xor
enter
cmp
xor
enter
mov
cmp
inc
add
xor
orb
mov
mov
jg
test
mov
aas
mov
mov
movsb
pushw
sbb
out
movl
add
and
sahf
inc
in
or
cmpb
push
rolb
adc
mov
xor
movsl
or
push
hlt
or
xlat
pop
xadd
cwtl
or
add
jecxz
filds
push
or
sar
fisttpl
add
les
mov
pushf
mov
int3
add
inc
sahf
jb
push
jb
rclb
or
lahf
inc
and
inc
adc
adc
sbb
add
or
and
add
push
mov
test
cld
js
nop
add
inc
add
insb
pusha
jl
repnz
scas
in
and
mov
lret
jb
add
add
jnp
fistl
pushf
jmp
stos
or
pop
mov
dec
leave
and
and
je
and
in
add
mov
and
push
enter
add
sub
stos
ss
movsb
rcrl
pop
fidivs
add
in
fadds
test
popa
clc
test
and
dec
ds
add
js
push
inc
scas
js
push
sahf
sub
and
and
leave
add
xchg
js
xchg
outsb
xor
aad
push
nop
pop
mov
js
and
and
pop
xchg
push
clc
dec
int
sub
sbb
rcrb
xorb
xchg
in
sbbl
test
mov
dec
gs
adc
scas
add
test
and
cmp
inc
sub
addl
sub
push
push
enter
nop
mov
lods
lods
xor
stc
nop
sub
lods
add
in
mov
pop
in
mov
adc
jno
jno
and
xchg
daa
stos
insl
incl
jae
or
xchg
popl
outsl
sbb
fs
scas
popa
loope
leave
add
push
lods
lods
push
adc
add
fs
mov
cltd
dec
lods
lods
in
pushf
inc
fs
fs
inc
enter
push
lods
push
jb
jb
adc
cmp
adc
enter
push
enter
lods
and
sbbl
jae
sub
sub
inc
sub
in
in
popa
mov
mov
nop
sub
sub
xchg
add
dec
cltd
in
sub
decl
dec
cmpsb
mov
nop
sub
push
xor
sub
lcall
stos
mov
sub
cmp
add
mov
push
test
adc
sub
push
pop
dec
sub
cmp
push
jno
add
and
sbb
sub
or
or
inc
add
pop
mov
imul
mov
add
stc
mov
or
gs
jmp
daa
mov
andb
pusha
data16
dec
daa
orb
add
nop
sbb
ds
cmp
jl
add
in
je
fwait
pop
imul
ret
nop
je
xchg
in
inc
xor
and
mov
hlt
inc
daa
and
or
jae
lea
sbb
add
insb
cmp
and
sub
movb
call
add
xchg
iret
add
imul
repnz
lock
rol
cmpsl
mov
pop
add
mov
mov
arpl
pusha
mov
testb
mov
in
stc
divb
mov
daa
ret
out
orb
adc
xor
dec
add
dec
jg
daa
add
and
js
and
enter
js
in
fs
sbbl
and
outsb
cs
push
nop
or
inc
push
nop
dec
and
mov
mov
push
adc
jg
test
pop
outsb
or
ret
xchg
xor
fistpll
mov
pushf
xorb
js
into
add
and
in
sub
add
dec
fisttps
inc
mov
jno
lods
leave
and
push
leave
inc
push
jno
jno
jno
inc
push
nop
lods
add
sub
push
enter
push
sbb
rorl
add
add
xor
dec
repz
mov
in
ret
and
and
jne
mov
jg
add
add
js
add
sub
lods
or
inc
lods
pop
add
jle
roll
sbb
add
push
xor
hlt
lods
sbb
sbb
cmp
sub
pop
out
inc
xchg
push
xor
ljmp
add
add
and
je
inc
dec
popa
popa
or
ret
sub
sub
jmp
das
adc
js
pop
sub
xchg
ret
ret
test
jecxz
dec
and
pop
add
push
inc
inc
or
imul
mov
inc
dec
mov
inc
shrb
or
insb
fs
mov
and
leave
xchg
jo
inc
insb
add
xor
jne
add
outsl
cld
mov
negl
cmpsb
mov
loopne
shll
mov
js
mov
lds
lock
imul
test
js
xchg
push
xor
push
push
insl
jb
int3
pop
jp
js
mov
or
mov
or
mov
or
jp
or
inc
push
int
adc
push
adc
jo
das
aas
test
cmovns
adc
push
mov
iret
orl
jle
add
push
push
push
sub
std
add
repnz
or
shrb
push
dec
les
or
push
push
xor
cwtl
lret
daa
or
ljmp
loop
push
adc
pop
xor
sbb
sbb
push
mov
sub
add
out
push
mov
scas
sbb
push
gs
add
cmp
addl
sbb
mov
sbb
sub
sub
mov
fildll
movlhps
push
inc
sbb
or
adc
jo
push
mov
sub
dec
insb
imul
pop
push
and
jp
pop
mov
jmp
into
es
mov
insl
push
mov
jmp
das
icebp
nop
mov
add
das
and
push
inc
mov
adc
pop
sub
icebp
push
push
orl
aas
lods
push
lea
add
je,pn
sub
mov
cmp
je
orb
push
jl
mov
jne
inc
imul
add
xor
push
add
push
jne
mov
ret
sbb
push
add
xchg
cmc
ret
jne
pop
imul
xor
inc
js
loope
adc
xor
loop
lds
lods
sbb
push
push
pop
sub
xchg
push
add
outsl
pop
jno
ds
sbb
mov
and
xchg
xor
or
pushf
dec
and
mov
ret
inc
xchg
enter
sbb
out
out
ret
gs
push
insb
push
mov
sbb
xor
sub
pop
les
test
push
jbe
cmp
repz
das
ss
repz
jl
sub
mov
mov
js
pop
dec
leave
pop
push
jg
sub
pop
dec
sbb
ja
mov
imul
push
or
scas
sti
jae
sbb
mov
pushf
jo
adc
push
mov
or
call
aaa
leave
mov
inc
popa
sbb
fisttpll
cmovbe
mov
or
cltd
jmp
push
mov
imul
push
leave
cmp
or
inc
or
push
sub
enter
jg
jbe
jb
aaa
roll
fs
add
or
cmpsb
and
pusha
jge
ss
test
les
add
cwtl
jp
push
or
cli
add
sbb
inc
je
add
pop
imul
popa
sbb
repnz
mov
cmp
cltd
cmovb
sarl
add
add
mov
cli
cmp
push
push
insl
scas
mov
das
js
ret
mov
int3
push
orl
call
push
hlt
movb
jno
inc
pop
lock
mov
lcall
or
mov
xor
sbb
pop
adc
inc
add
pushf
add
mov
inc
sub
arpl
jmp
sbb
adc
daa
test
push
push
test
pop
or
and
push
push
pusha
cwtl
lret
insb
push
jb
fisttpll
lahf
lods
or
pop
cmp
loope
push
enter
gs
enter
out
cmp
xor
das
test
jle
push
add
xlat
out
push
xchg
lock
dec
test
xor
inc
inc
popa
mov
xor
dec
push
mov
add
jmp
cmp
jb
pushf
pop
adc
add
jl
aad
and
out
mov
lea
inc
dec
stos
call
inc
cmp
push
and
scas
cmp
xchg
push
xchg
and
add
push
dec
dec
mov
loop
pop
dec
xor
or
test
add
inc
sarb
movsl
push
xor
insl
test
pop
mov
test
adc
jp
shl
ret
mov
adc
sub
or
mov
xorl
lock
lcall
adc
clc
dec
cmp
sbb
sub
loop
stc
insb
popa
and
clc
push
dec
fsub
adc
add
enter
or
push
adc
aaa
mov
pop
js
sbb
fidivl
push
cmp
arpl
rorl
or
push
inc
popa
add
xchg
push
in
add
imul
xchg
sbb
das
es
sub
pop
sbb
xor
xor
add
dec
mov
pusha
fldl
fs
push
shrl
arpl
add
outsl
or
jge
iret
push
lea
imul
jb
test
add
cmp
addr16
inc
mov
push
dec
inc
sbb
cmc
pop
mov
push
dec
cltd
js
js
xchg
fs
pop
pop
lods
lea
lods
add
inc
ret
js
cmc
and
mov
clc
mov
sub
cmpb
pop
pop
fdivs
xchg
ret
adc
rolb
mov
push
into
jo
xor
add
js
pusha
jns
stc
or
mov
sarl
fstpl
rorb
inc
jmp
mov
pushl
push
mov
add
mov
push
jmp
mov
enter
mov
jo
add
sbb
add
lahf
lods
mov
adc
xor
sbb
xor
adc
adc
sub
aaa
testl
cmp
ja
and
cmp
adc
mov
or
or
mov
dec
cmp
and
cmp
lods
jns
data16
cmp
cwtl
sbb
lods
pop
ret
dec
sbb
and
mov
sbb
arpl
es
cmpsb
insl
loope
addr16
and
inc
loopne
sti
out
push
stc
add
and
dec
mov
fcoml
sbb
mov
enter
aad
xchg
dec
and
shrb
add
clc
adc
into
incl
xor
xor
out
jno
push
mov
add
or
push
or
test
ficoml
orl
add
inc
dec
leave
fdivrs
jmp
dec
adc
rorb
mov
dec
add
sbb
adc
gs
sub
add
sub
push
daa
or
loopne
sbb
jae
mov
sbb
sbb
or
inc
cmp
outsl
add
lock
push
stos
or
add
loopne
enter
sub
inc
push
adc
popf
mov
icebp
fsubrl
xchg
rolb
adc
pop
mov
jb
mov
jge
es
mov
xor
dec
ret
add
jnp
es
inc
iret
mov
adc
xor
pop
xchg
rol
inc
push
test
rorb
sbb
shrb
rcrb
mov
sbb
push
add
jnp
push
push
add
lds
add
loopne
mov
mov
sbb
mov
and
sbb
mov
mov
pop
pop
insl
xor
shlb
int3
cmp
mov
push
scas
push
and
pop
mov
loopne
push
ret
add
mov
dec
jl
xor
push
roll
insb
sbb
jo
add
push
dec
mov
cmp
mov
push
and
inc
imul
jmp
pop
lea
cmp
and
shrb
inc
imul
sbb
cmpsb
bound
or
jl
sbb
mov
movsb
outsb
mov
push
je
or
pop
int
inc
popf
and
sbb
cmp
and
insb
adc
push
pusha
mov
dec
in
insl
inc
adc
filds
jne
mov
adc
lock
pusha
cs
jno
push
int3
push
jo
insl
pop
pop
inc
push
bound
test
push
scas
add
or
sbbb
add
push
movsb
rcrl
cmp
mov
and
push
sub
jmp
mov
add
insl
aam
jb
testb
dec
jne
add
jae
sbb
iret
out
bts
adc
sbb
sub
sub
inc
cmp
stc
adc
push
les
pop
loopne
adc
inc
xor
pop
cmp
ret
pop
pop
shrb
fildl
sahf
mov
stos
mov
and
into
inc
add
sarb
add
icebp
pusha
sbb
js
jp
mov
mov
pop
xchg
push
das
pop
fucomip
jae
mov
insl
addb
mov
fbstp
push
xchg
test
sbb
sub
pop
scas
xor
cmp
inc
dec
sahf
push
mov
cmp
push
xor
inc
push
inc
jp
lcall
pop
push
fistps
dec
inc
or
mov
std
das
push
sbb
add
adc
cmp
in
mov
xor
mov
adc
in
mov
xchg
adc
repnz
subl
pop
push
iret
mov
push
pop
pop
jmpw
mov
rol
and
push
bnd
inc
push
jmp
adc
or
addb
arpl
mov
idivl
xbegin
or
int3
pop
call
add
lea
js
iret
ret
daa
push
inc
lods
leave
mov
add
ret
sub
cmp
adc
idivl
push
cs
ret
call
int3
aad
cwtl
movsl
add
out
jb
pusha
ja
aad
add
push
add
add
fsubrl
in
aad
push
scas
or
cmp
push
push
sub
adc
int
insb
gs
mov
sbb
xchg
xor
xor
dec
add
push
in
leave
xlat
pop
js
nop
mov
pop
mov
add
lods
fs
insb
lods
inc
and
mov
test
andl
enter
mov
adc
imul
push
pop
js
ret
xchg
lods
mov
mov
jo
lret
sub
jl
xchg
lcall
push
push
jo
jecxz
and
or
stc
imul
shlb
pop
mov
push
inc
sbb
ljmp
sbb
iret
mov
test
fs
gs
jb
js
push
test
mov
outsb
xchg
in
scas
adc
push
sbb
std
or
inc
sbb
faddl
arpl
mov
les
out
cmp
lea
test
add
mov
test
mov
fcoml
pop
jge
add
ja
xchg
push
sub
sub
push
enter
iret
mov
sub
dec
mov
mov
int
pop
pop
sub
sub
dec
movsb
xchg
movsl
sub
push
and
rcll
and
or
jmp
mov
fisttps
mov
rcrl
test
mov
pop
fistpll
fsubs
xor
negb
jnp
ja
outsl
mov
add
push
arpl
shrl
sub
mov
cmp
or
adc
rcrb
inc
or
or
mov
add
das
dec
dec
test
or
test
pop
test
add
cmp
ret
fucomip
nop
out
xor
and
pop
ds
bnd
sub
add
cmp
jne
or
and
add
jl
cmp
jg
sti
jb
mov
sarl
xchg
jnp
xor
jl
xor
pusha
xor
clc
test
push
add
xchg
les
mov
sar
cli
add
sahf
dec
jns
xchg
roll
inc
or
and
xor
and
and
fwait
pop
mov
inc
push
out
adc
cmp
jg
lods
xorb
loopne
xchg
pop
mov
test
dec
and
out
hlt
cmp
push
jge
and
fcoms
fiadds
fwait
je
xor
aas
lcall
loope
cmp
out
leave
xor
inc
xor
pusha
fwait
xor
cld
jp
int
jns
mov
mov
xchg
fildl
test
cwtl
jl
pop
or
push
adc
mov
rol
sub
adc
jmp
cld
xor
xor
sub
or
lsl
add
or
jg
mov
pop
ret
repnz
push
scas
sbb
sbb
cmp
push
pop
add
xor
sbb
pop
les
add
lds
insl
mov
cld
adc
push
popa
add
pop
sbb
push
fstps
xor
test
adc
insb
or
or
mov
pop
adc
lcall
pop
cmpsl
pop
push
or
lods
or
incl
push
sub
inc
rolb
ds
fwait
dec
dec
cmp
and
xlat
and
xor
pop
and
mov
pop
pop
xor
xor
shll
push
add
cmpb
movsl
xchg
mov
insl
add
aas
sub
ret
cltd
push
mov
addb
ljmp
pop
xchg
rep
xchg
adc
stos
dec
dec
or
push
pop
pop
push
and
push
mov
lret
jmp
jno
outsl
cmp
push
rcrb
enter
sbb
lods
pop
mov
adc
arpl
loopne
sbb
cmpsb
fs
inc
cmpsb
mov
js
or
sbb
stc
or
sbb
iret
add
mov
loope
dec
fmuls
push
xchg
adc
lret
adc
test
xchg
cmpsl
adc
out
inc
lret
adc
dec
dec
jmp
test
pusha
cmp
in
jb
loope
cmp
mov
nop
mov
sub
testl
push
jno
ss
pop
push
loop
add
daa
cwtl
dec
in
pop
xor
mov
sub
cwtl
push
mov
add
push
lock
sbb
and
sub
push
dec
pop
aam
cltd
outsb
loopne
out
or
sub
stos
or
pop
add
dec
adc
add
inc
and
test
je
loopne
dec
jl
imul
cli
or
nop
out
pusha
and
adc
inc
popa
int
mov
add
lcall
adc
xor
push
inc
and
sbb
jl
mov
and
dec
add
sub
mov
inc
loope
cmpl
xlat
js
enter
push
je
mov
and
and
push
adc
test
mov
dec
sub
popf
xchg
pop
imul
xchg
add
or
es
rcll
add
cmpsb
sbb
xor
imul
test
sbb
sti
add
push
pop
push
and
sub
pop
xor
adc
push
mov
inc
mov
lret
pop
fdivrl
sbb
push
repnz
or
mov
jns
fisubs
pop
push
dec
inc
xor
je
xor
adc
je
or
add
aam
bnd
inc
push
lods
inc
or
test
es
xchg
push
mov
dec
ficoms
push
je
add
push
xchg
daa
and
loopne
cmp
xchg
xor
mov
nop
lret
xor
add
andb
ja
jae
pop
or
or
lock
lahf
ja
movsl
in
nop
jb
pop
js
and
test
push
mov
das
mov
int3
cmpsb
or
xor
cmp
push
mov
mov
and
inc
or
mov
pop
popf
mov
shrl
cs
pop
je
mov
add
or
mov
push
or
lock
xor
enter
jns
idivl
js
je
out
sahf
and
sub
jns
out
xor
cmp
jns
out
cmp
inc
push
int3
mov
sahf
inc
dec
dec
dec
cmp
cmp
inc
push
push
out
fstpl
pop
push
jg
cmp
fs
enter
mov
ja
xor
aas
je
sub
sbb
clc
mov
iret
enter
test
mov
out
jns
inc
mov
nop
inc
push
or
xchg
xchg
push
xor
in
cltd
or
movsb
test
fs
mov
mov
addl
in
jns
les
sahf
xchg
int3
mov
pop
in
push
sub
scas
fcoml
jns
shlb
lods
inc
mov
movsl
rclb
adc
pop
imul
mov
cltd
mov
mov
pop
sahf
mov
mov
leave
mov
ret
jge
je
mov
nop
je
pop
xchg
mov
ds
rol
mov
cmp
lahf
lods
inc
jne
orb
xor
sbb
pop
or
enter
addb
shr
adc
into
sub
inc
lods
in
and
add
push
and
mov
andb
sub
fmuls
popf
pop
mov
push
leave
jne
sub
aaa
leave
push
call
fcmovnb
xor
add
aad
dec
sub
xor
xor
insl
add
pop
lock
aad
fs
insl
mov
inc
gs
xor
rep
outsl
xorb
mov
rcrl
add
movsb
test
dec
cmp
inc
and
adc
addb
xor
mov
movsl
and
dec
add
fwait
adc
arpl
arpl
cmp
into
test
dec
sub
cmp
jne
push
pop
daa
push
iret
int3
test
xor
xchg
orb
cs
add
mov
fisttps
or
ret
add
testb
xor
xlat
mov
lret
add
pop
xlat
adc
xor
and
rcll
mov
test
cmp
mov
mov
adc
sbb
sub
cs
or
dec
lods
sbb
stos
ret
inc
add
inc
jae
jle
add
or
or
adc
scas
pop
in
or
or
pop
push
and
call
sbb
fldt
sub
arpl
pop
mov
loopne
mov
pusha
fcomp
sub
data16
add
mov
mov
inc
cmp
mov
mov
and
jb
mov
or
imul
icebp
sub
aaa
adc
in
inc
cmp
jb
push
jne
or
movb
dec
aaa
sbb
mov
push
notb
push
sbb
cmp
inc
or
mov
dec
testb
jmp
dec
adc
daa
xchg
out
adc
je
pop
mov
int3
inc
je
nop
or
push
je
and
xchg
lock
lea
or
and
ret
jge
mov
insl
cmc
test
push
bound
in
inc
lea
xor
add
and
icebp
icebp
adcb
shlb
scas
in
adc
push
jmp
push
loopne
jo
mov
add
out
adc
decl
testb
inc
out
stc
shlb
push
cltd
fcoms
adc
jl
jo
and
mov
adc
xor
out
jnp
xchg
icebp
fildl
outsb
dec
add
rorl
mov
adc
movsl
add
sbb
mov
mov
repz
ja
and
xchg
bound
push
or
dec
jl
jl
loop
mov
cmp
gs
mov
cmp
sub
fldenv
inc
inc
outsb
fisttpl
push
push
adc
int
and
dec
sub
xor
stos
adc
add
inc
or
xor
jmp
push
imul
dec
push
mov
dec
mov
popa
loop
adc
lea
les
ret
mov
add
push
nop
pop
cmc
add
cmp
cmp
out
mov
dec
fwait
pop
bound
movsb
jb,pn
pop
scas
xchg
lret
xorb
inc
add
adc
adc
imul
stos
test
rclb
jmp
mov
mov
add
ret
cmp
jb
dec
lods
sbb
jg
mov
pop
xor
test
aas
into
sarl
push
adc
push
leave
sbb
xchg
stc
aas
lock
out
jno
cmpsl
dec
adc
cmp
mov
js
popa
sbbb
orw
das
mov
dec
pop
pop
lea
adcb
inc
inc
pop
mov
and
rcll
ja
stos
mov
jae
xorl
push
add
inc
pop
inc
and
std
push
sub
rcll
aas
aam
or
lock
sub
dec
or
dec
xchg
ss
xor
nop
outsl
dec
and
pushf
or
cld
test
enter
sbb
insl
or
sbb
dec
push
or
aad
dec
sub
adc
xchg
mov
add
fsubrs
or
add
jle
cmpb
je
inc
nop
jle
add
aas
aad
add
in
adc
jno
mov
scas
movsl
and
push
adc
stc
sbb
push
adc
pop
and
sbb
sahf
jbe
lods
lea
adc
sub
aaa
lahf
out
add
imul
sbb
pop
mov
adc
adc
das
sbb
dec
add
jb
test
dec
add
mov
and
push
push
add
or
push
cvtps2pi
dec
jae
js
xchg
jae
cmp
orb
xchg
dec
ret
dec
pop
and
dec
jb
add
repnz
dec
pop
pop
decl
add
fdivrs
or
jae
mov
sub
cld
ljmp
call
rcr
in
cmp
add
and
push
daa
into
or
push
lods
inc
lock
daa
mov
ja
adc
das
or
lds
mov
ret
cwtl
push
into
mov
xchg
mov
sub
and
push
mov
add
bound
push
movsb
adc
sbb
mov
dec
or
and
cmp
cmp
sub
pop
sbb
rcll
sub
sub
pop
stos
xchg
jle
das
jne
pop
pusha
add
sub
outsl
jo
out
add
lret
push
push
adc
iret
jb
sbb
test
jl
fists
xchg
loop
int3
add
stc
inc
jae
and
ret
aaa
sbb
xchg
shl
pop
shll
ret
sub
int3
insl
mov
jo
or
xchg
mov
int3
add
call
mov
in
iret
adc
shrl
ljmp
and
adc
fsubs
push
aas
adc
aam
adc
arpl
fildl
jnp
lock
push
cmp
std
and
adc
lds
fcomps
incb
aas
pop
stos
and
jmp
sub
pop
in
pop
fsubl
movsb
lods
fcomps
sbb
lock
loopne
daa
pop
lret
fmuls
dec
insl
dec
cmpsb
inc
aam
mov
or
sub
mov
leave
lds
stos
call
jb
jg
lock
and
outsl
dec
or
mov
movsb
and
mov
pop
movsb
xor
icebp
or
call
push
cmp
dec
inc
sub
les
push
pop
cmp
aas
mov
add
mov
sub
push
xchg
mov
or
or
popa
sbb
add
xor
push
test
rclb
arpl
leave
aad
dec
loopne
cwtl
lret
mov
push
rcrb
pop
aaa
mov
lcall
adc
and
or
fmulp
out
push
in
push
scas
imul
sbbb
imul
cmpsl
mov
mov
fimuls
ret
ja
push
xchg
imulb
sahf
daa
push
aam
add
lea
push
add
pusha
and
pop
jg
pop
rolb
enter
sbb
aam
mov
pop
in
mov
fisttps
mov
jge
xor
sub
fs
mov
pop
mov
mov
imul
jns
push
nop
push
incl
sub
inc
pop
divps
inc
xchg
push
cld
cmpsl
sbb
xchg
or
test
sub
jno
jb
cmp
fisubl
pop
das
mov
imul
shlb
adc
push
insb
adcl
xor
push
imul
insb
daa
outsl
adc
mov
adc
popf
or
add
pop
pop
or
push
push
imull
or
daa
sub
subb
inc
push
imul
push
lahf
push
sub
es
and
inc
or
cld
push
sbb
pop
sbb
rclb
and
and
out
in
or
or
nop
add
mov
and
jl
iret
test
and
lock
or
sbb
int
mov
push
mov
add
mov
xchg
rolb
arpl
mov
inc
xchg
movsb
sub
stc
push
or
outsb
pop
orps
adc
pop
fistps
fisubs
mov
push
or
cwtl
jl
or
pop
nop
movsb
movsl
movsb
decb
loopne,pt
inc
adc
inc
imul
mov
js
dec
mov
ud0
shlb
daa
xchg
imul
adcl
or
or
test
shlb
in
add
aam
ret
nop
xor
mov
add
clc
pop
jb
adc
or
fisttps
pusha
push
jno
cwtl
aas
popa
or
pop
rcl
inc
subb
sar
xchg
pushf
dec
fidivrl
not
mov
mov
imul
and
stos
scas
insb
lods
jecxz
sbb
fucomip
mov
cmpsb
int3
xchg
movsb
and
fisubl
enter
or
paddq
imull
mov
dec
in
cmp
dec
repnz
and
sub
movsb
inc
std
decb
pop
jno
add
aas
mov
call
pop
movups
and
loopne
nop
cmpsb
nop
je
cmp
or
daa
xchg
inc
add
dec
or
add
mov
in
push
add
fcoms
cmp
adc
stc
adc
fisttps
in
scas
aam
dec
mov
jns
test
insl
fidivs
push
pusha
mov
mov
cmpsl
adc
pop
xor
ret
fwait
ret
add
sarl
fsub
adc
mov
out
scas
les
xchg
add
sub
test
sbb
es
pop
pusha
jo
or
dec
imul
ret
rcr
andb
adc
fwait
or
pop
and
inc
shll
dec
pop
lods
bound
pop
adc
dec
movsl
cs
xchg
and
arpl
stc
sub
pop
aaa
rclb
pop
int3
push
pusha
fbld
adc
sbbb
aas
dec
decl
shll
and
ficoml
push
xchg
cs
jo
orl
inc
sub
mov
xor
movsb
test
cs
aas
sub
sub
lods
mov
ljmp
movsb
mov
adc
mov
nop
push
test
mov
je
sub
fists
mov
and
rcrl
call
aas
je
mov
xchg
pop
in
jmp
arpl
jae
cwtl
sub
or
lds
dec
js
and
repnz
push
add
sbb
cmp
cld
insb
cltd
add
jecxz
mov
xchg
add
in
sbb
mov
enter
mov
xor
and
or
dec
inc
mov
cmp
push
pop
sub
stc
sub
in
fs
push
mov
push
mov
arpl
add
sbb
adc
jg
inc
fildl
scas
inc
insl
and
push
xor
sbb
mov
dec
mov
and
pop
adc
xor
cwtl
pop
sbb
adc
shl
mov
popf
or
test
insb
mov
or
cmp
xorl
inc
imul
mov
push
dec
mov
les
cltd
js
mov
imul
lods
dec
or
aad
xlat
sbb
sbb
ja
sbb
cwtl
lea
in
adc
aas
push
jns
and
lahf
push
push
push
mov
add
xor
sbb
insl
inc
pop
insl
jno
xor
pop
sarb
mov
xchg
enter
ss
mov
shll
fsubr
xor
movsb
dec
dec
mov
and
call
test
aas
xchg
outsb
and
and
orb
add
imul
inc
push
cmpsb
iret
repz
mov
aam
clc
dec
lahf
out
lcall
inc
out
sahf
ja
push
into
mov
xchg
sahf
out
sahf
jle
pop
inc
cmp
out
outsb
ja
push
cmp
push
mov
jns
insb
shl
ds
jl
out
repz
repnz
es
mov
out
repz
adc
push
mov
inc
push
push
mov
imul
inc
sub
int
jns
jl
into
cli
sbb
cmp
repz
je
ret
dec
mov
add
bound
clc
cmp
push
nop
cmp
cmp
mov
jns
jns
sarb
mov
cs
repz
and
mov
xor
testb
and
xor
xor
iret
repz
push
mov
dec
mov
and
int
push
add
dec
mov
lcall
ficoms
jns
in
add
inc
mov
ljmp
dec
adc
cmp
fs
repz
xchg
scas
mov
repz
testb
imul
lret
dec
inc
jns
dec
push
dec
out
push
addb
cmp
jne
add
push
push
xor
and
stc
mov
lock
aam
dec
iret
repz
cmpsb
nop
test
out
popf
in
mov
cmpsl
test
jle
xor
adc
jae
iret
repz
pop
adc
sahf
testl
jp
mov
mov
ds
addr16
int3
aad
lock
std
call
in
xchg
mov
call
push
loop
ljmp
xor
mov
cld
mov
pop
pushf
rcll
push
cmp
loop
out
sbb
sub
cmp
ja
out
fdivrs
lret
repz
cli
jmp
mov
rolb
dec
jnp
pop
into
pop
jne
jmp
adc
decl
mov
xor
and
fcmovnu
hlt
arpl
pushf
sub
and
mov
sub
call
lcall
lock
sbb
mull
and
pop
ds
lahf
repnz
jmp
inc
gs
or
decl
pusha
or
movsl
push
mov
lea
outsb
ljmp
inc
sbb
inc
xchg
cmp
sbb
cltd
sahf
jns
xor
int
loop
mov
ret
fwait
in
mov
fisttps
sahf
xchg
dec
push
jp
test
sub
cmp
jmp
imul
rclb
gs
pop
and
fsubs
dec
mov
testl
jp
inc
sub
push
mov
dec
scas
jo
jmp
and
jno
aad
pop
or
cmp
and
inc
pop
test
sbb
out
jbe
fistps
mov
incl
daa
movsb
and
add
xchg
fidivrs
dec
or
es
loopne
das
push
xlat
jno
ffreep
sbb
or
xchg
notb
or
jb
test
cmp
mov
sub
mov
shl
dec
call
push
jns
mov
in
xchg
stc
shrb
jb
loop
sbb
cmp
dec
js
test
shl
dec
mov
lock
hlt
push
sbbb
fsubp
push
out
sub
push
movsl
aas
in
mov
shr
push
negb
ret
cwtl
adc
and
std
adc
iret
mov
ss
pop
iret
jmp
stc
lret
sahf
lcall
push
mov
cmc
sbb
mov
loopne
iret
mov
icebp
sbb
loope
stc
int
mov
cmp
dec
jp
cmc
xchg
cli
scas
push
mov
out
mov
stc
arpl
inc
in
mov
pop
or
cmc
pusha
jb
mov
dec
mov
lcall
clc
mov
inc
sbb
mov
xchg
or
fidivrs
fisttps
xor
imul
outsb
movsb
cld
jnp
clc
xchg
sbb
mov
dec
jmp
jo
imul
pop
shrl
or
idivb
push
repz
lahf
mov
xchg
adcl
xlat
sub
test
ljmp
out
cmc
cmc
xchg
cli
mov
addr16
jl
sub
cmc
adc
inc
dec
jbe
push
aas
push
ja
and
mov
loopne
fstp
mov
lods
sub
adc
fsubs
clc
cmp
mov
jmp
mov
cmpb
or
sbb
mov
fucom
push
cld
push
outsl
mov
pushf
mov
not
inc
mov
fidivrl
fbstp
push
mov
and
stos
mov
fisttps
lcall
sub
lahf
jecxz
lret
cwtl
pushl
iret
mov
mov
xor
stc
incl
dec
cmpb
jmp
sti
pop
call
xor
lcall
adcl
aam
inc
in
loop
mov
enter
sahf
xchg
adc
jns
mov
call
dec
movb
mov
pop
les
push
in
adc
pushl
dec
lcall
fistps
and
mov
fimuls
test
dec
and
aas
cli
decl
rolb
adc
popf
in
push
ret
xchg
stc
adc
rolb
mov
mov
and
bsr
dec
popa
cmc
int3
pop
call
mov
cld
int3
loopne
inc
fiaddl
pushl
stc
cwtl
repnz
sbb
incl
jle
mov
outsl
inc
jecxz
out
ss
and
jmp
rcl
pop
lahf
imulb
and
inc
call
imul
mov
mov
or
inc
aad
dec
jmp
hlt
clc
fs
sbb
outsl
push
scas
setle
dec
inc
aas
outsb
dec
ror
pushl
icebp
xchg
push
dec
int3
stos
jmp
dec
adc
cli
clc
mov
cld
int3
pop
xchg
xor
outsl
cmp
pop
cld
or
out
cmp
jmp
cmp
mov
push
cmp
push
mov
movsl
and
movsl
lret
sbb
mov
push
std
jg
cmp
int3
negl
mov
sbb
lcall
imul
mov
cld
cmpsl
lea
jb
outsb
xchg
mov
fisubrl
push
jno
cmpb
aaa
in
ret
mov
scas
incl
call
push
fwait
jae
sub
popf
insl
loopne
shll
inc
sub
cmp
decl
mov
scas
adc
scas
out
out
mov
sarl
fstpl
imul
xchg
gs
sbb
jg
cmc
in
jmp
jnp
imul
mov
sbb
xor
pop
popf
lcall
and
out
xchg
fidivs
clc
out
push
in
xor
mov
and
xorb
inc
daa
xchg
xor
xchg
test
rcll
call
das
insb
fidivrl
mov
and
les
and
in
push
call
cs
jmp
ds
cwtl
mov
xchg
pop
es
or
mov
jae
pop
test
mov
popf
add
jg,pn
out
pushf
pushf
repnz
roll
sbb
test
jns
clc
outsl
push
push
adc
inc
shll
inc
and
fbstp
pop
sbb
sub
and
mov
stc
sub
ds
pop
xor
lds
rcll
cmp
in
insl
inc
insb
ja
aaa
xchg
xor
popa
mov
or
test
jp
or
jne
mov
aas
dec
jle
ret
inc
test
lret
add
mov
mov
jge
push
pushf
mov
inc
mov
dec
pop
mov
in
sbb
dec
in
adc
ret
decl
outsb
call
into
mov
out
xor
jg
jns
stos
cmc
fdivs
mov
scas
loopne
jmp
pop
dec
jmp
out
dec
je
and
ss
lds
lahf
loope
push
cmpsb
imulb
inc
fisubrs
cmp
test
xchg
idivl
sub
dec
pop
cs
dec
shrl
leave
subb
inc
ss
repz
push
inc
xlat
out
or
pop
dec
int3
loop
dec
pop
ret
fwait
add
or
pop
dec
shr
pop
jecxz
inc
aas
vfnmadd231sd
ret
imul
or
lock
ljmp
insb
sub
xchg
mov
ja
lret
gs
mov
shrb
xchg
pop
mov
mov
dec
inc
in
add
fcmove
jg
dec
jmp
das
lahf
mov
das
es
lock
mov
leave
sub
outsb
sub
in
lret
loopne
mul
or
dec
mov
mov
in
ds
mov
push
xchg
mov
stos
sbb
jns
movl
call
pop
aaa
pop
scas
cli
add
bound
data16
ret
or
loopne
loopne
xchg
push
cmp
or
xor
mov
xchg
mov
out
jo
addr16
mov
loop
int
shl
data16
mov
dec
in
xchg
lods
jno
sbb
call
xor
cltd
leave
shrb
test
out
adc
rcrl
ss
mov
loope
push
mul
push
inc
pusha
and
add
std
lcall
icebp
push
je
jmp
push
call
test
test
test
mov
sub
push
push
mov
push
ficoml
jp
sbb
sbb
jmp
jl
jo
mov
push
sbb
dec
and
xor
out
stos
scas
lahf
jg
incl
mov
push
push
fcmovne
mov
mov
in
ud0
lcall
out
sub
push
push
dec
clc
push
test
push
mov
fmulp
xchg
insl
decl
xchg
xlat
sub
sub
popa
mulb
xor
loope
inc
out
jb
call
frstor
roll
or
mov
sbb
inc
mov
cs
pop
jl
ret
xchg
movsl
shlb
and
ljmp
clc
xorl
mov
mov
or
je
or
add
mov
iret
faddl
scas
push
out
adc
lods
ljmp
mov
pop
ljmp
ret
xchg
decl
push
jno
push
out
sbbb
mov
mov
pop
notl
lahf
pop
js
stc
xchg
mov
dec
aas
jp
inc
sbb
sahf
xlat
mov
idiv
xchg
fs
in
stc
jbe
and
leave
fwait
dec
scas
hlt
bound
xchg
add
xor
es
xchg
add
sub
outsl
pusha
imul
decl
dec
enter
fistps
daa
cmp
mov
incb
fbstp
inc
or
mov
pushl
pop
inc
inc
and
scas
add
jg
and
jne
add
mov
push
mov
jbe
loopne
add
add
xchg
testl
sub
add
ss
push
stos
sbb
ret
push
sub
rol
jmp
shrb
lock
loopne
jnp
sub
mov
mov
ja
pop
sbb
leave
jne
add
imul
sbb
iret
cvtps2pd
dec
jbe
sub
xchg
or
fstpt
push
js
mov
pop
jmp
push
xor
cmc
das
out
xor
movsl
loopne
popf
sbb
in
inc
call
mov
or
addr16
out
pop
sbb
movsl
in
cld
out
inc
push
shl
stc
loope
into
ret
mov
icebp
vmread
push
push
jge
test
lahf
js,pt
push
mov
cld
jmp
xlat
mov
shll
add
icebp
pop
lock
std
sub
mov
iret
mov
mov
push
xchg
jg
decl
inc
pop
ljmp
add
sbb
inc
lods
notb
xor
lds
ljmp
and
adc
and
sahf
notb
test
fdivs
icebp
mov
sbb
cmp
jmp
mov
fwait
lea
lret
dec
incl
jg
dec
pop
push
add
lahf
adc
lcall
into
pop
mov
pop
mov
mov
jg
dec
xlat
and
xor
jb
dec
lcall
mov
andl
bound
inc
leave
inc
lds
cmc
in
xchg
andb
pusha
mov
in
adc
js
jge
and
sbb
jo
test
and
add
pusha
sbb
popf
xor
pop
jmp
sub
fadd
outsl
mov
sbb
jnp
std
dec
mov
push
imul
int
and
push
mov
arpl
orb
incl
cld
xor
mov
cltd
mov
test
jmp
or
movsl
jne
push
dec
jne
dec
push
jbe
cmp
bound
fst
sub
add
idiv
nop
dec
xchg
mov
lock
pop
and
mov
in
jg
test
fildll
out
mov
sub
in
lds
lods
add
ret
push
sarb
add
pusha
ljmp
aam
sbb
add
adc
dec
jmp
ja
andl
and
xlat
lret
mov
dec
xchg
pop
dec
jne
mov
sti
xlat
scas
jns
adc
loopne
mov
loope
mov
mov
sbb
push
test
rcr
shll
into
cs
push
call
test
push
arpl
mov
out
pop
in
ljmp
inc
cli
lret
mov
fwait
jbe
je
decl
push
repz
and
push
test
sti
xorl
das
imul
rorb
jns
mov
das
mov
push
popf
adc
pop
rol
mov
jmp
jb
rcll
cmpsb
sub
lret
out
out
pop
lock
mov
pop
imul
mov
mov
or
incl
and
lcall
pop
fsubrl
fildl
call
xchg
pop
mov
loop
xchg
cmp
into
pop
imul
sub
jmp
rcrb
inc
xlat
daa
pop
jmp
lock
ret
add
dec
push
mov
push
dec
mov
out
push
cld
cmc
inc
in
ds
js
fadds
hlt
cmp
data16
jecxz
in
test
fnstcw
repz
aam
lock
out
sahf
out
adc
xor
sahf
out
sahf
inc
dec
push
pop
pusha
js
sahf
out
nop
mov
cmp
out
out
sbb
cmp
repz
pop
jo
movsb
mov
sahf
int
cmp
in
cld
out
sbb
out
xor
fs
jns
out
cwtl
mov
ror
mov
sahf
loopne
cld
call
iret
repz
dec
pop
jo
repz
repz
mov
fsubr
out
sahf
int
jmp
sahf
out
sahf
pusha
je
cwtl
test
cmp
out
shr
ljmp
repz
pop
push
iret
mov
sahf
addr16
clc
jmp
adc
jns
out
cmp
fs
out
sahf
out
test
sahf
test
aam
lock
rep
in
or
sbb
sub
cmp
repz
mov
int
in
or
sub
out
sahf
fs
je
lods
mov
sahf
out
mov
xor
cmp
repz
mov
cmp
loopne
clc
out
add
sahf
out
sahf
adc
dec
push
pusha
cmp
out
jo
lock
jns
int
int3
in
icebp
or
out
sahf
out
cmp
dec
push
sbbb
iret
out
fsub
repnz
sub
lcall
icebp
cmp
cmc
hlt
repz
lock
std
cld
sti
cli
stc
clc
out
decl
loopne
out
in
aad
rcl
rcl
fstp
fcmovnu
mov
inc
ret
iret
into
int
xchg
orb
push
fisubs
mov
mov
mov
mov
cld
pushl
mov
mov
movsb
mov
scas
lods
lods
stos
iret
loopne
ljmp
xchg
xchg
xchg
xchg
xchg
nop
lahf
sahf
popf
pushf
fwait
lcall
jbe
rorl
cmpsb
jne
outsb
add
add
push
lret
fcoms
scas
lock
push
outsb
lcall
pusha
roll
fwait
in
out
flds
mov
pop
add
nop
jns
mov
cltd
mov
mov
cmpb
out
jbe
out
mov
iret
mov
dec
stc
pop
push
cmp
xor
mov
addb
out
rorb
add
fs
push
fists
or
outsl
gs
add
pop
cmpb
jo
popa
push
jne
jo
jb
outsl
ja
push
enter
ja
cli
or
and
pusha
mov
rcrl
lock
dec
orl
inc
xlat
add
outsb
jo
mov
jne
xor
mov
ljmp
imul
jb
imul
sub
jb
movsbl
outsl
sub
outsb
arpl
popa
arpl
imul
pop
mov
fs
dec
cwtl
push
popf
dec
dec
dec
dec
mov
cmp
mov
btc
iret
in
in
rol
pop
lret
jmp
xlat
sets
loopne
fiaddl
loopne
mov
shrl
add
pop
mov
mov
push
jl
add
add
and
out
cmp
dec
cld
loopne
mov
mov
sub
cmp
out
add
fdivrl
iret
mov
dec
push
fs
dec
rol
pop
test
mov
push
or
inc
xor
adc
inc
sbb
or
dec
pop
xor
jo
xor
xchg
nop
push
mov
mov
int
iret
cmp
fs
jo
adc
add
and
cmp
cmpb
imulb
ss
call
js
inc
sub
push
enter
add
ret
mov
inc
adc
sbb
nop
add
rcr
sti
and
or
adc
add
xchg
dec
lahf
push
sbb
daa
nop
nop
sti
jo
mov
push
cwtl
inc
and
cmpsb
rolb
ja
mov
test
cld
or
add
inc
or
xor
ficoml
scas
pusha
pop
xor
jmp
incl
mov
out
in
orb
inc
cs
scas
fdivr
adc
enter
inc
lock
in
in
add
adc
sbb
cmpsl
loopne
pop
std
cwtl
dec
lods
nop
xchg
dec
inc
add
jb
in
testl
adc
dec
and
dec
jb
repnz
loopne
mov
jb
mov
daa
and
inc
push
push
or
sub
or
inc
xchg
xchg
xchg
xchg
dec
push
pop
push
jo
js
mov
leave
leave
leave
xchg
fwait
cmpsb
scas
pushl
test
aaa
push
in
in
leave
add
add
in
jb
in
imulb
in
adc
sbb
and
jmp
ds
scas
or
in
or
lock
packssdw
das
push
jnp
addl
in
mov
or
incl
jb
mov
mov
pop
mov
fadds
jb
inc
add
mov
sub
push
mov
xor
mov
ss
add
jg
fcompl
mov
jb
popl
clc
mov
push
fs
negl
dec
add
data16
sbb
inc
outsl
lahf
add
daa
mov
add
rorb
lcall
mov
pop
and
out
in
pop
push
mov
scas
nop
xchg
add
popf
pop
and
cmp
or
fstps
outsl
daa
push
insb
cmp
add
outsl
mov
mov
pop
or
xchg
push
sbb
in
lcall
in
in
cmp
dec
add
push
pop
pop
das
data16
sbb
jnp
or
pushf
or
pusha
sbb
pop
add
idivb
xor
enter
pop
push
or
adc
sbb
jb
sbb
xor
and
inc
mov
pop
inc
push
or
or
push
jno
fsts
sete
adc
test
adc
fxch
adc
das
out
repnz
clc
sbb
rolb
or
xor
adc
xor
das
jns
sbb
cmp
inc
push
mulps
mov
pop
jbe
andb
inc
sahf
mov
cltd
sub
mov
dec
mov
mov
adc
pop
mov
and
dec
inc
mov
rorl
add
sub
sbb
dec
popw
xor
add
or
popa
add
dec
in
imul
push
nop
cwtl
outsl
mov
mov
nopl
repnz
fiadds
jmp
sbb
cld
ret
pop
or
dec
dec
inc
pop
sub
or
jb
enter
push
dec
orps
cmp
sbb
pop
adc
jge
cmp
cmp
enter
pop
scas
sbb
movsl
int
add
adc
cmp
xchg
ret
ret
add
jg
and
push
dec
and
inc
js,pn
add
mov
dec
mov
pop
fiadds
call
adc
cmp
adc
leave
loopne
les
mov
mov
pop
sub
jb
call
jno
ud2
sbb
adc
mov
add
in
pop
rorb
loop
push
push
lock
or
cltd
lds
outsl
add
test
jb
pushf
or
jo
scas
nop
outsb
jb
outsl
dec
mov
mov
iret
mov
add
xchg
xchg
add
pop
dec
repz
add
js
mov
scas
outsl
push
mov
inc
inc
clc
rcr
add
mov
neg
dec
and
adc
dec
in
push
sub
jbe
insl
pop
inc
lahf
dec
cmpsb
rorb
mov
push
inc
inc
mov
xorl
lds
mov
je
dec
push
lcall
dec
rcr
and
push
mov
push
test
rorb
pop
mov
das
adc
in
jl
pop
add
sbb
invd
sub
fisubrl
xor
pop
and
xchg
push
add
xchg
fcmovne
sti
pop
push
jns
iret
addb
in
mov
ja
inc
push
fptan
or
enter
and
push
add
or
sbb
inc
daa
and
adc
push
or
out
in
leave
leave
jo
addb
mov
jb
in
xchg
popf
cmpsb
push
das
scas
pop
out
ss
mov
or
sar
cmpsl
nop
xchg
add
sub
daa
call
fsts
xor
cmp
movsb
cmp
inc
dec
jg
js
enter
iret
mov
daa
mov
jbe
mov
mov
lret
xchg
and
push
and
sub
xchg
mov
inc
iret
mov
int
xchg
outsl
fcmovnbe
lahf
fistpll
push
jmp
jl
testl
mov
rclb
push
push
add
mov
lret
or
adc
add
xchg
and
add
in
in
push
into
xlat
loopne
loope
in
repnz
filds
sbb
and
mov
adc
xchg
adc
lahf
xor
sbb
test
loopne
test
pusha
enter
imul
imul
push
xchg
mov
pushf
int3
sahf
enter
fninit
add
and
inc
jmp
loopne
loop
or
aas
adc
lds
pop
cmpsb
inc
xchg
das
cmpsb
jno
mov
adc
mov
dec
mov
jo
jg
pusha
decl
fidivl
push
sub
inc
jb
dec
dec
push
pop
lahf
adc
adc
call
pop
sahf
fisubrl
mov
push
add
pop
mov
jmp
stos
ss
inc
jbe
mov
inc
pop
push
pusha
leave
adc
mov
in
rolb
filds
call
sbbl
dec
cmpsl
in
pop
sbb
or
pop
dec
int
movaps
push
xor
mov
out
int
pop
popa
outsl
or
orb
xor
sahf
add
stos
mov
pop
mov
lds
rcr
pmulhuw
adc
sbb
pop
jbe
repnz
into
or
add
das
enter
das
add
sub
add
adc
mov
orb
sbb
jb
scas
add
xchg
and
push
lock
sti
or
leave
iret
pop
adc
pop
sbb
and
in
in
and
sub
inc
test
add
lahf
movsb
rolb
sbb
sub
fs
push
enter
test
das
outsl
daa
leave
pop
cld
add
add
enter
push
push
daa
sbb
repnz
or
or
mov
rorl
pop
loop
jmp
jns
cmp
out
sbb
rcl
imul
dec
scas
nop
mov
add
and
stos
mov
mov
xchg
push
int3
aam
fnsave
repnz
or
testb
sahf
mov
rcll
sbb
and
adc
cmp
adc
nop
jmp
push
imul
sbb
nop
pop
cltd
jmp
clc
mov
add
in
jns
and
fstps
outsb
pushf
sbb
pminsw
xchg
lret
and
adc
rorb
outsl
push
pushf
pop
and
cwtl
inc
dec
inc
mov
add
test
in
jb
xchg
setle
mov
outsl
ret
pslld
sbb
dec
popa
notb
lock
pop
flds
mov
pop
into
mov
shr
test
push
xor
aas
pop
mov
push
in
jg
sbb
bound
cmp
dec
pusha
sub
mov
enter
into
scas
mov
or
pop
jbe
xchg
xchg
pop
pop
sbb
push
loopne
add
test
adc
sbb
stc
adc
outsl
das
and
sub
inc
add
lret
gs
in
dec
mov
pop
push
test
dec
and
leave
leave
pop
pop
popl
lock
orb
sbb
iret
stos
cmpsl
push
mov
sbb
jnp
ret
psubusw
cmp
add
add
or
dec
sbb
and
aad
pop
xor
scas
nop
xchg
add
pusha
scas
clc
cmp
stc
adc
and
and
add
pop
add
inc
dec
leave
test
rolb
inc
shrb
dec
mov
xor
lahf
dec
mov
push
add
fs
mov
push
dec
xor
cs
insb
xchg
rorb
add
dec
dec
push
in
or
push
mov
add
sub
adc
mov
jns
in
rcrl
lock
sbbb
cmp
rcrb
pusha
jo
jle
mov
cmp
testb
nop
clc
dec
push
out
cli
push
sti
es
pop
add
mov
imul
xor
ss
adc
cwtl
ds
addb
shrb
dec
inc
xor
cmp
dec
outsl
jbe
xor
add
cli
in
sti
xor
cmp
xor
cmp
push
dec
dec
inc
push
dec
clc
lcall
push
das
das
outsl
outsl
insb
gs
das
pusha
push
imulb
gs
gs
imul
out
in
insb
pop
imul
jb
jae
cmp
mov
ljmp
jbe
insb
imul
outsb
je
dec
das
mov
jb
insb
cmp
mov
shlb
bound
gs
add
addb
adc
in
orb
out
jmp
cmp
imull
in
adc
shr
nop
mov
sahf
dec
repz
lock
and
repz
push
inc
mov
cmp
xor
js
loope
push
mov
or
pop
daa
ret
lock
je
outsl
pop
jb
outsb
addr16
imul
mov
and
bound
jb
loopne
mov
mov
and
cmpsb
pop
in
jmp
xor
popa
bound
data16
sbb
arpl
mov
imul
mov
data16
in
sarl
es
outsl
out
std
mov
je
jo
pop
dec
outsl
mov
pusha
cmp
or
push
sbb
mov
add
sub
sbb
fs
mov
sbb
jo
jne
xor
hlt
push
mov
je
imul
jecxz
mov
imul
sub
jl
fsubrl
sub
popa
insb
cmp
cmp
je
mov
jae
mov
pop
ja
xor
in
test
pop
sbb
inc
insl
jo
das
jb
lock
fst
sbb
and
sbb
popa
data16
cmp
xchg
rorl
mov
and
jno
imul
sbb
jo
mov
push
sarl
icebp
jo
ss
mov
mov
popa
xchg
jb
dec
mov
and
test
clc
js
pop
inc
xor
sbb
pop
in
mov
jmp
push
lcall
inc
mov
sbb
fdivrl
std
add
jne
and
push
dec
pop
fs
imul
mov
rorb
pop
and
xchg
and
add
sbbl
movsb
xchg
mov
cmpl
xor
mov
dec
sub
and
int
cmp
sbb
adc
or
out
sahf
cld
clc
lock
les
out
sarb
out
test
mov
sahf
cwtl
xchg
nop
mov
jns
jl
pusha
push
out
sahf
out
cmp
sbb
iret
repz
dec
cld
call
cmp
repz
mov
movsb
mov
cwtl
nop
mov
je
fs
dec
cmp
iret
repz
sbb
add
out
mov
jns
out
in
call
jns
out
aam
int3
enter
sahf
sarb
jns
test
mov
out
push
out
sahf
cmp
xor
sub
jns
out
and
sbb
adc
jns
out
or
add
iret
repz
dec
cld
clc
hlt
lock
call
in
les
repz
cwtl
xchg
jns
out
iret
dec
nop
push
mov
cmp
jl
js
jo
push
fs
pop
pop
push
repnz
repz
dec
dec
inc
inc
and
or
add
add
sub
adc
rclb
mov
das
pop
xor
add
pop
aaa
xor
xor
xor
decl
adc
push
es
push
pop
push
and
and
and
sbb
or
add
sub
xor
push
pop
sbb
add
and
loope
or
add
mov
dec
push
dec
repz
push
inc
pop
jp
dec
scas
repz
repz
cld
pop
dec
insb
push
inc
dec
sarl
out
arpl
gs
lock
in
inc
inc
dec
mov
add
addr16
ret
nop
insb
jns
bound
xchg
jbe
jb
mov
sub
adc
add
jns
pop
into
repz
jbe
adc
repz
push
jno
outsl
outsb
iret
repz
insl
xchg
imul
cmp
repz
data16
lret
popa
loopne
sub
andl
jb
arpl
sub
add
dec
imul
xchg
add
adc
xor
sbb
cmpb
insb
popa
jae
popl
cs
out
ficomps
pop
push
push
push
push
jns
out
push
push
push
push
dec
out
sahf
out
dec
dec
dec
dec
sahf
out
sahf
dec
dec
inc
inc
inc
inc
inc
pushf
out
inc
inc
inc
xchg
or
add
insl
jo
stos
popa
xor
add
or
in
insl
sbb
mov
jnp
gs
sub
jae
sbb
gs
insb
jae
pushf
jae
mov
gs
imul
pop
outsb
pop
add
push
jae
je
bound
imul
push
outsl
jne
lods
and
jo
push
cmp
jp
outsl
das
push
into
pop
orl
push
add
movq
insb
jne
aas
jo
shll
jae
pushl
mov
pusha
inc
jae
and
data16
aam
push
mov
or
insl
lret
fs
mov
or
sbb
push
bound
and
cltd
mov
or
jno
test
outsb
lods
dec
insl
and
insl
das
test
sahf
mov
xor
xor
xor
push
data16
ret
push
push
inc
push
addb
push
push
inc
repz
dec
inc
xchg
inc
inc
xor
xor
notb
xor
dec
call
inc
pop
add
sub
xchg
sbb
push
loop
xchg
sub
jo
imul
insb
roll
inc
jns
fninit
push
pop
inc
dec
decb
add
push
pop
outsl
les
dec
push
dec
imul
add
outsb
and
pop
jo
and
outsb
outsl
call
and
sbb
add
in
pusha
lock
and
mov
mov
ret
outsb
inc
and
and
or
adc
je
outsl
and
fiadds
or
loop
popa
mov
adcl
fbld
shrl
mov
xor
push
xchg
sbbl
xorl
movsb
or
daa
mov
fldcw
cs
xchg
mov
sub
sub
bound
pop
pop
pop
mov
stos
outsb
jae
sub
lahf
das
dec
lods
lret
loopne
stos
insb
mov
pop
adcb
fidivs
xor
outsb
call
inc
mov
mov
pop
mov
mov
jne
js
out
cmp
jp
push
or
or
cmp
inc
push
cmp
repz
jge
push
sub
cmp
repz
pop
aas
sub
inc
mov
dec
hlt
aas
push
fs
push
inc
push
dec
dec
dec
sub
mov
inc
pop
pop
inc
push
ss
pop
es
inc
pop
mov
lahf
dec
adc
stos
adcb
sub
add
bound
inc
paddb
add
call
dec
iret
adc
sub
inc
call
clc
push
imul
jne
je
inc
jns
insl
fldt
sub
jb
jne
push
jb
sbb
push
dec
outsb
push
jb
ret
test
fs
sub
pop
gs
js
push
dec
sbb
mov
imul
mov
push
jne
xor
jns
subb
outsl
cs
dec
popa
jo
je
imul
jns
loopne
push
insb
test
push
jae
mov
gs
push
dec
dec
call
pusha
lock
popa
inc
movsb
push
jo
clc
inc
mov
sbb
popf
mov
adc
sbb
pop
push
mov
lock
pop
mov
mov
gs
adc
pop
push
sub
insl
add
dec
fs
push
dec
inc
or
sti
arpl
cmp
imul
push
cmp
dec
hlt
sub
jo
and
mov
movsb
mov
and
test
cmp
sbb
inc
imul
cmpsl
ret
cmc
js
aas
dec
xchg
inc
pop
dec
inc
inc
mov
jae
mov
jo
mov
or
es
neg
xor
xor
pop
lcall
das
inc
sub
inc
push
xor
push
inc
inc
dec
sub
jo
dec
dec
aas
inc
inc
fistl
sbb
mov
fs
pusha
push
push
adc
test
inc
inc
push
push
pop
jb
ret
mov
arpl
inc
pop
xor
scas
inc
test
ja
sahf
mulb
inc
inc
pop
cmp
cmp
inc
popa
and
adc
gs
ficompl
mov
inc
inc
xor
adc
cwtl
stc
push
or
jo
pop
pop
cmp
push
jo
add
jp
aad
mov
mov
mov
or
add
inc
xor
xor
pop
mov
jp
stos
xchg
mov
inc
inc
cmc
outsb
outsl
pop
mov
or
stos
xor
dec
insl
test
jns
inc
dec
xchg
pop
and
cmp
push
lods
lods
mov
mov
adc
pop
lods
inc
inc
push
jns
push
outsl
rcr
or
add
mov
mov
inc
push
imul
or
ja
adc
mov
shrl
rolb
and
cmpsl
cmpsl
shlb
dec
mov
or
inc
cmp
orl
mov
test
jno
das
fstps
mov
imul
and
xor
jle
add
sub
mov
mov
add
xor
xor
and
fmuls
outsl
inc
push
mov
imul
adc
pop
inc
outsl
jo
xchg
jne
sbb
arpl
lds
push
aad
dec
dec
icebp
lahf
repnz
pop
aam
cltd
mov
jp
pop
cli
inc
cmp
pop
add
in
push
jo
xchg
popa
orb
and
js
or
or
daa
push
inc
mov
cmpsb
adc
dec
jecxz
and
xor
aad
int
mov
fs
pop
pop
xchg
xchg
jnp
xchg
xor
dec
jne
lea
inc
cltd
inc
xor
inc
loop
jo
stc
ljmp
gs
sbb
lock
jb
ja
and
movsb
add
in
popa
push
cmp
test
in
call
mov
adc
cmp
or
jmp
mov
mov
sub
aas
fmuls
std
xor
dec
std
xor
or
xor
pushf
and
int
adc
dec
dec
pop
xchg
sub
call
out
inc
popa
or
addr16
dec
add
dec
fwait
out
adc
loope
insl
aas
mov
xor
inc
js
inc
xchg
cltd
inc
test
nop
dec
rorb
mov
gs
insl
outsl
jbe
loop
arpl
adc
pop
jge
push
push
xor
jae
cmp
mov
mov
fistpll
ja
dec
mov
xor
jl
insl
mov
xor
adc
imul
jb
push
movsl
fs
outsb
add
sbb
aas
inc
adc
sub
pusha
gs
sub
in
xor
in
out
ret
pop
pop
adc
push
ficomps
jne
data16
xchg
cmp
fcoml
cvtpi2ps
subl
ja
jae
ds
inc
xor
sahf
and
rolb
daa
mov
dec
push
cmp
insl
nop
add
mov
sahf
out
add
gs
jne
xor
lcall
enter
push
dec
jl
inc
scas
push
scas
add
sbb
inc
arpl
sbb
inc
mov
lods
pop
sti
test
in
fs
dec
popa
jbe
push
jo
sub
imul
jo
dec
push
inc
mov
test
daa
mov
mov
push
imul
jo
repz
xchg
arpl
arpl
sbb
sbb
adc
imul
fidivs
test
pop
jae
imul
inc
sub
add
imul
imul
inc
sub
push
or
pop
add
jl
sbb
cld
scas
push
or
or
or
cmpsb
sti
insl
add
adc
or
add
push
or
dec
mov
pop
movlps
or
push
push
push
adc
add
fnstenv
or
sbb
push
or
pop
adc
push
dec
or
adc
sbb
adc
adc
std
int
in
ud2
push
lods
dec
adcb
or
adc
or
sti
outsl
int
cli
or
loop
pop
wbinvd
sbb
or
or
push
xchg
lods
cltd
cltd
mov
or
enter
or
mov
js
push
push
nop
adc
adc
and
loopne
pop
adc
adc
invd
sbb
or
or
pop
fwait
fs
sbb
xor
or
inc
mov
adc
adc
in
imul
or
aam
cmp
cmp
adc
jle
adcl
sbb
or
or
jl
sub
adc
int3
push
sbb
mov
pop
push
test
adc
or
or
shll
sub
add
xchg
pop
adc
or
cld
mov
mov
or
push
push
add
adc
sbb
or
popa
xor
mov
or
cmp
cmp
push
or
pop
jnp
xchg
mov
dec
and
and
xor
int3
adc
ljmp
add
pop
jl
or
sbb
adc
sub
or
adc
fbld
pusha
adc
sbb
or
xor
ficoml
insl
adc
shl
xor
or
and
adc
push
sbb
dec
pop
or
in
or
or
dec
add
pushl
sub
adc
push
pop
adc
cwtl
inc
sub
jp
push
sbb
cmp
adc
lcall
scas
cmp
jle
xor
xor
cmpb
or
pop
pop
dec
pop
push
pop
sub
or
daa
push
sbb
push
adc
push
mov
add
rclb
xor
adc
push
push
orl
sub
sbb
gs
mov
or
sub
fimuls
cmp
push
pop
push
xor
inc
mov
int3
shrd
adc
in
sbb
jo
xor
clc
mov
sbb
movsb
or
sbb
and
fsubrs
or
aas
and
sub
adc
rcrl
sub
or
out
data16
push
outsl
push
push
xchg
or
scas
pop
adc
ret
push
xchg
mov
mov
mov
adc
inc
sub
fidivrl
add
scas
adc
test
rclb
jle
jecxz
cltd
pop
xchg
punpckhbw
nop
or
sub
sbb
orl
mov
inc
pusha
xor
dec
rorb
orb
push
dec
inc
jb
loopne
push
dec
mov
adc
sbb
push
dec
jb
adc
xchg
sbb
push
stos
add
mov
imul
fidivl
in
xor
or
xlat
enter
nop
mov
or
jnp
clc
dec
sbb
and
xor
pop
cltd
ljmp
adc
cmp
je
and
sbb
adc
inc
mov
and
ret
ljmp
or
add
sbb
cmpsb
adc
pop
insl
ja
inc
ds
jne
jecxz
xor
aaa
jg
test
add
adc
jb
mov
dec
pop
adc
push
push
xor
adc
push
sub
adc
icebp
das
cli
lock
add
jo
push
cmp
sbb
sbb
or
lods
or
adc
push
inc
push
cmp
hlt
pop
fsubl
loopne
or
adc
sbb
adc
lret
popa
inc
sub
sub
ret
sbb
push
mov
push
pop
jo
or
cmp
push
jo
mov
mov
sbb
in
in
fcoms
pop
lahf
sbb
ja
lock
orl
mov
mov
dec
mov
cs
adc
mov
adc
pop
push
in
test
push
sbb
adc
or
or
pusha
or
in
or
daa
sbb
adc
sub
test
lock
mov
adc
adc
mov
sub
or
adc
sbb
scas
or
sbb
xor
inc
pusha
pusha
jbe
or
adc
pop
pusha
test
jns
lcall
jbe
mov
stos
sbb
pop
adc
and
mulb
mov
in
or
and
push
aas
or
push
xchg
pop
jbe
sub
dec
push
jnp
insb
adcb
lock
fs
dec
jb
xlat
dec
jo
push
insb
sahf
faddp
xchg
ret
mov
mov
adc
jb
fistps
lods
jle,pt
adc
daa
push
sbb
stos
dec
add
sub
test
sbb
adc
sbb
cmp
add
xor
cwtl
mov
mov
push
adc
push
inc
xor
lret
sub
or
lock
adc
sub
sub
dec
adc
xor
clc
pusha
test
enter
jb
or
rclb
dec
or
or
int
fiaddl
or
or
mov
invd
dec
or
jo
fisubl
bnd
inc
inc
sub
xor
or
lock
nop
or
jb
and
seto
in
or
add
adc
add
inc
pop
sbb
mov
push
adc
adc
or
pop
sbb
adc
outsb
adc
or
mov
pop
push
push
cmp
gs
das
push
xor
test
xor
push
pop
adc
add
pusha
push
psubb
psraw
adc
or
sbbl
or
sbb
or
pop
rcll
aam
pop
sbb
sub
adc
mov
or
push
push
movsb
fcmovbe
push
in
mov
shrb
sbb
adc
mov
in
inc
pop
mov
sbb
adc
push
cmpb
adc
adc
mov
lock
sbb
push
dec
inc
mov
xlat
call
and
sub
sub
or
adc
adc
push
sub
adc
cmp
sahf
rorb
sbb
cmp
sbb
adcb
dec
nop
adc
pop
push
push
push
adc
sar
mov
or
cmp
mov
sbb
mov
fcmovbe
in
mov
enter
push
xor
inc
out
xor
mov
bound
je
cmp
mov
jge
or
sub
sbb
pop
xor
adc
pushf
sub
pop
inc
es
pushf
inc
ljmp
mulw
das
push
cmp
cmc
xchg
je
mov
xor
stos
test
adc
sbb
mov
imulb
test
lcall
or
sbb
subb
push
cmpb
push
shlb
xor
cmpsb
mov
lcall
jbe
lock
or
sbb
or
mov
pop
xchg
push
dec
push
mov
les
sub
bound
idivl
rcl
adc
push
cmp
inc
scas
popf
jne
fs
push
and
pop
sub
push
adc
jbe
shrb
xchg
cmp
adc
sbb
pop
add
jp
push
sbb
pushf
out
aam
adc
sub
negl
inc
xor
in
ficoml
push
jbe
push
pop
sub
or
lock
aam
push
adc
sub
sbb
aaa
mov
mov
daa
in
lret
dec
or
mul
or
sub
inc
pop
and
sub
pop
add
push
jb
and
loopne
jb
lret
xor
sbb
lock
add
sbb
mov
imul
jo
hlt
sub
sbb
add
cmpsb
data16
pop
lahf
push
push
popa
leave
dec
push
push
dec
sub
std
xor
incl
or
lock
push
inc
pop
pop
sub
push
sarl
push
sub
cld
mov
push
data16
dec
bound
insb
pop
mov
dec
sbb
pusha
and
sahf
adc
sbb
inc
popa
mov
and
and
push
adc
cmp
jo
sti
inc
mov
inc
xor
pop
je
sbb
ljmp
femms
ja
sbb
fldcw
adc
and
in
lock
adc
sbbl
test
sub
jo
dec
jg
mov
push
daa
xor
dec
ds
mov
push
fmuls
popf
loopne
push
bound
push
or
orb
packssdw
cmp
and
or
lahf
mov
inc
or
prefetchnta
xor
adc
add
sbb
or
adc
push
xor
insl
or
daa
or
push
or
mov
add
cs
adc
push
dec
push
or
pop
cmp
adc
sbb
cs
push
adc
or
jbe
xchg
pop
fmull
dec
dec
push
and
addl
bound
add
add
sarb
cmp
xor
daa
addl
pop
js
xor
pop
xor
xor
push
sbbb
in
dec
insb
pop
jnp
sbb
push
dec
or
pop
mov
or
sbb
inc
cmp
push
das
xchg
and
adc
js
les
or
adc
hlt
rorb
shlb
imul
in
or
sub
cs
and
je
pop
pusha
mov
mov
push
or
ds
scas
das
inc
and
push
and
rcr
adc
push
sub
aad
mov
mov
popf
fcoms
push
je
sub
test
adc
push
push
addl
mov
insb
xor
and
rolb
xchg
or
push
cmp
mov
and
adc
shl
xor
xor
or
sbb
jle
shll
push
inc
push
add
lock
jno
aam
outsb
or
xchg
pop
xor
in
clc
ljmp
ljmp
pop
into
in
and
out
enter
push
fildll
and
mov
add
sub
in
mov
adc
jp
ds
and
sbb
or
lret
test
jbe
pusha
sbb
push
xchg
or
int3
lcall
loop
sbb
cmpsb
pop
data16
cmp
xlat
or
sub
push
jl
sbb
sub
push
dec
icebp
or
jbe
sbb
cltd
xor
xor
sbb
ret
push
js
std
add
inc
shlb
push
inc
adc
pop
sub
fwait
leave
xor
pop
adc
sub
sbb
sub
xorb
sbb
push
cmp
je
loopne
mov
add
cmp
adc
or
jge
xor
xor
sbb
inc
sub
inc
pop
jb
shrl
cld
cmpsb
cmp
bound
ja
and
xor
mov
clc
add
mov
push
add
adc
jp
cmp
xor
adc
stos
xor
movsl
punpckhdq
pop
push
cmp
das
mov
daa
loope
or
pop
and
les
mov
sub
ss
loopne
lods
xchg
sub
movlhps
ljmp
xor
push
add
xor
adcb
add
adc
dec
or
adc
dec
mov
push
add
jl
scas
bound
aas
push
adc
add
sub
cmp
pop
sub
adc
loop
dec
loop
ds
push
lock
js
hlt
lcall
lock
add
or
or
xor
and
sbb
mov
cmpsb
jl
stos
mov
or
adc
pusha
cmp
or
arpl
dec
adc
sbb
sbb
in
or
inc
add
push
or
jb
out
testb
notb
inc
pop
enter
mov
lret
shlb
pushf
inc
shlb
pop
or
orl
outsb
insl
and
sbb
mov
pop
xor
adc
testb
mov
and
or
outsb
inc
xor
enter
cmpsb
leave
add
mov
lea
nop
or
stc
mov
call
jbe
push
push
faddl
sbb
push
or
adc
scas
sub
push
push
imul
add
lock
cmpsb
std
outsb
aam
push
adc
pop
lock
and
adc
sub
sub
and
xor
sbb
neg
xor
push
xor
xor
or
mov
cmp
sbb
or
stos
mov
cmovno
add
sbb
and
loopne
adc
pop
dec
sbb
cmp
or
mov
xor
jle
push
cmp
add
sbb
imul
rclb
adc
add
int
adc
add
cmp
dec
xchg
jecxz
es
inc
adc
jl
insl
lock
add
idivb
add
iret
aas
push
xor
daa
or
cmp
jmp
lock
add
adc
add
xor
xchg
add
adc
or
jmp
mov
in
or
inc
push
mov
sub
ds
ret
sub
jp
xchg
out
mov
mov
bound
popa
lock
or
fistl
add
dec
dec
jbe
popf
pop
or
mov
xor
sub
adc
shrl
or
inc
loop
outsb
pop
rorl
push
or
arpl
popa
add
push
or
sbb
add
sub
les
adc
add
and
xchg
sub
sbb
mov
cmp
jg
adc
add
outsl
sbb
lock
lock
loope
lock
sarl
fdivrp
lock
add
pop
lock
ss
add
add
inc
or
or
and
lock
js
jne
aaa
rolb
sbb
jno
das
in
cmp
pop
cmp
and
shr
mov
cmp
lock
or
js
add
addl
cmp
std
aas
lock
imul
lsl
push
in
push
jg
mov
lock
movsb
and
dec
inc
lret
mov
sti
sub
sub
jg
cmp
decl
mov
cs
push
aaa
sub
pop
add
decl
das
mov
pop
adc
aas
ds
pop
fnstenv
jne
mov
pop
adc
adc
pop
jnp
jmp
addb
pop
sub
pop
adc
pop
dec
add
sti
or
pop
push
pop
jp
daa
lcall
insl
cmp
jg
pop
js
nop
jno
jno
jb
inc
pusha
or
ss
loope
push
sbb
inc
fisttps
jg
xor
or
or
adc
ljmp
push
je
cmp
mov
push
rcrb
or
adc
sbb
add
push
adc
or
test
dec
xchg
jo
or
scas
inc
add
sbb
add
add
std
sahf
sub
ss
in
or
xor
and
orb
mov
fwait
cmc
add
jbe
pcmpeqb
or
in
adc
add
jo
or
push
loope
dec
or
adc
lcall
xchg
outsb
and
mov
pop
sub
adc
mov
and
out
jp
ret
shlb
adc
aaa
or
subb
rclb
nop
adc
sbb
cs
push
sub
sub
mov
adc
sbb
sbb
sbb
fcomps
and
sbb
push
jo
adc
dec
sbb
daa
or
enter
and
ret
and
movaps
cwtl
data16
mov
and
and
and
mov
and
enter
pop
and
push
push
fildl
adc
push
sahf
sbb
mov
or
sbb
sbb
les
rolb
mov
inc
xchg
add
xor
adc
test
ret
sbb
mov
cmp
push
xor
xchg
adc
inc
pop
sbb
cmp
rclb
push
cmp
icebp
push
syscall
invd
je
adc
push
fmuls
cli
sub
mov
test
or
xor
or
or
decb
sbb
cmp
and
xchg
rcrb
dec
or
adc
and
adc
shll
fdivrs
popa
push
pop
sub
dec
or
clc
lcall
sbb
ljmp
int3
int3
adc
cs
xchg
jl
loop
daa
sub
push
in
and
jbe
sub
push
insb
cli
dec
add
push
push
pop
sbb
or
out
adc
decb
jb
cmp
dec
pop
hlt
jl
cmp
sbb
test
and
aaa
mov
decb
pop
add
cmp
adc
test
pusha
out
rclb
ja
adc
or
in
push
inc
mov
cmpb
adc
sbb
jecxz
data16
cs
xor
sub
add
lret
aam
sbb
push
sub
mov
mov
inc
adc
mov
or
push
dec
push
adc
enter
sbb
fiadds
and
mov
cmp
stos
jae
stos
mov
ss
sbb
sbb
adc
ficompl
addb
push
clc
or
mov
mov
inc
push
push
or
sub
sbb
mov
out
push
or
sbb
sub
lock
adc
sbb
jae
adc
stos
adc
mov
out
stos
push
adc
cltd
lret
or
cltd
bound
les
stos
and
or
push
stos
pop
dec
add
inc
push
add
adc
or
or
adc
mov
adc
inc
sub
add
sbb
adc
mov
mov
aam
push
daa
pusha
and
xor
inc
inc
shrl
adc
push
adc
or
push
and
rorl
inc
push
pcmpgtd
loop
sbb
pusha
adc
fstl
sbb
out
push
imul
xchg
fwait
lock
lret
fcoms
inc
push
lsl
fdivp
lock
ss
sbb
adc
jo
add
mov
insb
mov
push
rolb
and
add
popf
or
lcall
add
and
mov
mov
sbb
cld
lret
add
inc
imul
add
das
dec
stos
test
cmp
jmp
in
aam
adc
shll
or
mov
sbb
or
adc
cmp
add
enter
jne
loopne
mov
je
pushf
jle
and
inc
push
mov
add
xor
sbb
ljmp
mov
je
cmp
decb
xor
insb
add
mov
int3
test
mov
cmpl
daa
subl
fdivp
cmp
or
adc
sbb
js
dec
or
sbb
pop
sbb
sbb
ja
and
nop
scas
push
mov
pop
data16
dec
adc
pop
xor
mov
mov
call
adc
pop
or
aaa
cwtl
imul
call
sbb
mov
sbb
add
ss
xchg
shl
out
or
cmpl
adc
test
inc
jg
or
sub
mov
and
call
cmp
cmp
jae
or
push
adc
pop
jmp
mov
dec
or
xor
xor
dec
add
or
push
add
or
and
lock
add
movsl
adc
xor
sub
add
and
jbe
xor
sbb
or
sub
out
imulb
aas
outsb
daa
xor
sub
inc
push
mov
add
mov
or
fldl
dec
and
add
ss
push
ret
add
sbb
sub
xchg
test
mov
or
lods
stos
lock
add
or
sbb
dec
in
fcmovnu
aaa
adc
mov
cmp
dec
cs
std
cld
cmp
pop
xor
xor
push
dec
sbb
movntps
loopne
jl
pop
jb
outsl
icebp
push
xor
and
and
pop
adc
pop
movlps
sbb
hlt
pop
mov
mov
sub
lcall
jl
and
sub
cmp
fwait
xor
xor
stos
add
xchg
add
pusha
mov
int
lods
jmp
cs
arpl
addl
dec
xor
xchg
add
test
sbb
sub
mov
dec
inc
add
xchg
or
jno
or
sbb
adc
add
popf
dec
pop
mov
ljmp
les
sub
add
stos
inc
push
xor
adc
fldt
insb
dec
push
jmp
adc
jne
xchg
dec
rol
jp
lock
sbb
aad
inc
or
pop
das
sub
adc
lock
add
lahf
inc
daa
lea
mov
in
dec
push
sub
addr16
or
add
nop
repnz
sub
cli
and
inc
pusha
lcall
push
adc
and
shlb
inc
lock
add
adc
lock
lock
pop
sbb
sub
fs
sbb
cld
and
pop
sbb
or
push
push
adc
push
sbb
adc
fneni(8087
mov
sbb
sbb
pop
pop
pop
pop
aaa
rcll
or
mov
jp
pop
and
sbb
mov
out
les
or
push
sbb
outsl
stos
fisubs
push
scas
push
dec
and
adc
adc
sub
add
push
loopne
adc
add
mov
addr16
pop
jp
mov
add
pop
or
dec
or
mov
sub
jno
sbb
inc
cld
push
push
xor
adc
aam
ljmp
sub
push
sbb
or
and
sub
or
or
and
or
and
sbb
xlat
fwait
mov
dec
xor
cmp
sbb
cld
cmpsb
add
and
or
jg
std
sub
sbb
enter
cmp
adc
or
sbb
push
adc
and
sbb
push
mov
sbb
push
inc
pop
sub
inc
mov
add
add
sbb
and
inc
sbb
or
add
add
push
mov
or
adc
sbb
sbb
lods
shrb
cmp
adc
adc
add
lods
mov
cs
call
outsb
mov
add
adc
or
fnstenv
or
add
ja
fnstsw
adc
push
and
mov
inc
push
or
xchg
and
fidivs
xor
and
pop
sti
fucomip
pop
add
dec
and
or
add
daa
and
mov
or
fstl
xchg
or
or
adc
dec
rcll
or
add
mov
pop
mov
dec
adc
pop
js
xor
mov
cmp
or
sbb
call
sbb
lcall
or
push
sbb
lcall
adc
sbb
sbb
sbb
adc
sbb
add
and
sbb
adc
sub
stc
decl
add
lock
sbb
mov
enter
mov
and
iret
mov
mov
test
dec
push
or
sbb
or
adc
xorl
sbb
add
or
movsl
fisubl
or
insl
and
push
add
unpckhps
push
xchg
fadds
cmp
xchg
add
fdivs
fwait
shll
or
aas
insl
pop
pushf
push
mov
sbb
pushl
imul
add
ret
xchg
sub
or
test
in
sub
mov
adc
adcl
or
xor
imul
insl
pop
inc
xchg
add
or
push
popa
or
cmp
adc
iret
stos
popa
shll
xchg
push
dec
pop
insb
shrl
mov
pop
in
sbb
dec
xor
dec
xor
xor
jo
cli
or
pop
push
add
rolb
dec
add
push
dec
ja
mov
dec
pop
loopne
push
and
add
pop
xchg
sahf
lods
add
daa
and
in
mov
pop
push
add
add
pusha
mov
ficoms
adc
stos
stc
ficompl
orb
push
xor
mov
dec
jo
add
push
cld
adc
nop
dec
fadds
cmp
je
insl
adc
mov
add
loopne
cmpsl
and
out
pusha
jb,pn
popa
je
sub
in
cmp
inc
cs
js
sbb
sub
push
dec
rcrb
cli
mov
imul
fiadds
cmovg
shlb
jecxz
push
xchg
and
lods
js
mov
add
add
cmpb
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
