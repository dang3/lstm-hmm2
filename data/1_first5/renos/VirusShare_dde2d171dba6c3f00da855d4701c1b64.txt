test
je
ret
add
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
mov
call
push
call
cmp
sbb
inc
pop
ret
jmp
mov
xor
aaa
xor
xor
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
xchg
lea
cmp
jno
lea
mov
mov
mov
lea
mov
mov
mov
lea
xchg
inc
lea
mov
mov
lea
dec
mov
cmp
je
jmp
xchg
mov
cmp
ja
mov
mov
lea
mov
inc
inc
inc
dec
jne
inc
inc
mov
mov
mov
lea
lea
dec
dec
lea
mov
xor
divl
test
jne
cmp
jp
lea
mov
mov
xchg
mov
mov
mov
xchg
lea
mov
xchg
dec
mov
lea
xchg
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jb
dec
dec
inc
inc
cmp
jle
inc
inc
inc
inc
dec
inc
cmp
jae
mov
lea
mov
mov
lea
lea
dec
mov
xchg
lea
lea
lea
inc
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jp
mov
mov
xchg
xchg
lea
lea
mov
mov
lea
mov
mov
mov
xchg
lea
mov
mov
mov
cmp
je
jmp
cmp
jg
lea
inc
dec
inc
xchg
dec
inc
inc
cmp
jb
lea
lea
xchg
lea
mov
lea
lea
mov
xchg
lea
dec
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
je
lea
mov
xchg
inc
mov
xchg
mov
dec
inc
inc
lea
mov
xchg
lea
mov
mov
lea
mov
dec
inc
dec
mov
cmp
je
jmp
cmp
jg
lea
inc
dec
inc
xchg
dec
inc
inc
cmp
jb
lea
lea
xchg
lea
mov
lea
lea
mov
xchg
lea
dec
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
jmp
cmp
jb
dec
dec
inc
inc
cmp
jle
inc
inc
inc
inc
dec
inc
cmp
jae
mov
lea
mov
mov
lea
lea
dec
mov
xchg
lea
lea
lea
inc
mov
sub
mov
cmp
jg
mov
mov
lea
xchg
lea
mov
lea
mov
dec
je
dec
inc
mov
mov
lea
mov
mov
xchg
dec
push
mov
mov
xor
call
mov
cmp
jp
lea
mov
mov
xchg
mov
mov
mov
xchg
lea
mov
xchg
dec
mov
lea
xchg
mov
mov
mov
call
cmp
jp
mov
mov
xchg
xchg
lea
lea
mov
mov
lea
mov
mov
mov
xchg
lea
mov
mov
push
mov
mov
xor
call
mov
xchg
mov
cmp
ja
mov
mov
lea
mov
inc
inc
inc
dec
jne
inc
inc
mov
mov
mov
lea
lea
dec
dec
lea
xchg
lea
cmp
jno
lea
mov
mov
mov
lea
mov
mov
mov
lea
xchg
inc
lea
mov
mov
lea
dec
lea
mov
push
jmp
cmp
jg
mov
mov
lea
xchg
lea
mov
lea
mov
dec
je
dec
inc
mov
mov
lea
mov
mov
xchg
dec
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jg
lea
inc
dec
inc
xchg
dec
inc
inc
cmp
jb
lea
lea
xchg
lea
mov
lea
lea
mov
xchg
lea
dec
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
je
lea
mov
xchg
inc
mov
xchg
mov
dec
inc
inc
lea
mov
xchg
lea
mov
mov
lea
mov
dec
inc
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jo
lea
mov
lea
dec
inc
mov
xchg
mov
xchg
mov
mov
lea
xchg
mov
lea
mov
mov
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
xchg
mov
cmp
ja
mov
mov
lea
mov
inc
inc
inc
dec
jne
inc
inc
mov
mov
mov
lea
lea
dec
dec
lea
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
mov
push
mov
add
movb
cmp
jo
lea
mov
lea
dec
inc
mov
xchg
mov
xchg
mov
mov
lea
xchg
mov
lea
mov
mov
dec
mov
call
mov
push
push
push
call
cmp
jo
lea
mov
lea
dec
inc
mov
xchg
mov
xchg
mov
mov
lea
xchg
mov
lea
mov
mov
dec
mov
call
push
call
cmp
jp
lea
mov
mov
xchg
mov
mov
mov
xchg
lea
mov
xchg
dec
mov
lea
xchg
mov
call
mov
push
push
push
call
mov
call
cmp
jo
lea
mov
lea
dec
inc
mov
xchg
mov
xchg
mov
mov
lea
xchg
mov
lea
mov
mov
dec
push
call
incb
cmpb
jne
mov
pop
ret
decl
add
add
pop
jae
push
jae
push
jne
fs
push
mov
add
mov
mov
cmp
jp
mov
mov
xchg
xchg
lea
lea
mov
mov
lea
mov
mov
mov
xchg
lea
mov
mov
push
call
mov
push
mov
push
call
mov
mov
mov
cmp
jp
lea
mov
mov
xchg
mov
mov
mov
xchg
lea
mov
xchg
dec
mov
lea
xchg
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jg
mov
mov
lea
xchg
lea
mov
lea
mov
dec
je
dec
inc
mov
mov
lea
mov
mov
xchg
dec
mov
mov
movl
cmp
jo
lea
mov
lea
dec
inc
mov
xchg
mov
xchg
mov
mov
lea
xchg
mov
lea
mov
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
mov
cmp
ja
mov
mov
lea
mov
inc
inc
inc
dec
jne
inc
inc
mov
mov
mov
lea
lea
dec
dec
lea
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jo
lea
mov
lea
dec
inc
mov
xchg
mov
xchg
mov
mov
lea
xchg
mov
lea
mov
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jb
dec
dec
inc
inc
cmp
jle
inc
inc
inc
inc
dec
inc
cmp
jae
mov
lea
mov
mov
lea
lea
dec
mov
xchg
lea
lea
lea
inc
mov
pop
ret
add
add
add
outsb
add
insb
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
xchg
lcall
cld
mov
xchg
sahf
mov
mov
mov
mov
cld
cld
mov
mov
mov
cwtl
mov
xchg
lahf
mov
xchg
cltd
mov
lahf
nop
lods
mov
mov
xchg
lahf
mov
fisubl
cld
cld
xchg
cld
lahf
cld
mov
lcall
cld
into
cld
mov
cld
cld
cld
cld
cld
scas
jne
jge
add
mov
mov
xchg
test
loopne
fdivrl
adc
mov
cld
neg
mov
cld
ljmp
cld
into
fstpt
pop
call
mov
faddl
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
mov
cmp
mov
xor
jae
or
cmp
mov
cld
scas
jne
jge
xor
mov
ja
sub
jne
aam
jne
xor
mov
xor
lods
mov
mov
jne
xor
mov
xor
mov
sbb
movsb
jne
sbb
or
cld
cld
jne
or
hlt
jne
sbb
enter
jae
or
mov
cld
cld
jae
and
mov
cld
stc
subb
and
cld
std
mov
adc
cld
cld
xchg
cld
xchg
cld
jne
xor
clc
std
mov
xor
lods
shlb
adc
xchg
stc
subb
cld
jne
xor
cld
nop
jecxz
mov
mov
jne
xor
in
std
mov
adc
jne
in
std
mov
jne
xor
in
std
mov
adc
adc
mov
or
cld
cld
lods
jne
adc
jne
xor
lods
les
sbb
adc
jne
and
jae
sub
mov
lods
jne
adc
jne
xor
lods
les
sbb
jge
sbb
jge
and
jne
and
cld
push
jge
xor
jne
xor
clc
cld
stc
jg
or
or
or
mov
jae
add
mov
jae
adc
cmp
insl
mov
mov
lods
jne
cmp
movsb
xchg
cld
jl
cld
xchg
cld
jne
xor
mov
xor
lods
mov
cld
jl
cld
xchg
cld
jne
hlt
lods
jne
xor
lods
mov
scas
add
lahf
adc
loopne
or
or
push
jnp
cld
or
or
cmp
push
jne
cmpsl
ds
cmp
jne
pushf
jne
hlt
jne
clc
or
lret
and
xchg
cld
cld
cld
lea
lret
xor
cld
cld
cld
call
cld
cld
cld
fisttpll
mov
cld
cld
cld
in
cmp
adc
adc
cld
cld
cld
shll
in
adc
cld
cld
cld
adc
nop
mov
xor
sbb
pop
adc
cld
cld
cld
cld
xchg
cld
idivb
lea
jge
mov
jae
dec
sti
mov
or
inc
or
cld
cs
pushl
ret
cmp
sbb
or
jmp
adc
or
or
ds
cld
ja
cld
jae
jae
inc
or
or
into
cmp
pop
inc
or
or
shll
xor
jnp
add
or
jae
or
hlt
jl
cld
cld
inc
push
jl
cld
cld
inc
mov
jbe
add
insb
clc
jl
cld
or
cld
adc
push
cld
jne
or
or
or
add
stc
xorb
cld
inc
mov
jbe
push
jne
or
dec
jbe,pn
add
or
or
mov
mov
mov
add
sub
push
cld
inc
mov
jbe
push
int
jbe
add
add
or
std
ds
jbe
add
jl
cld
std
fisttps
cld
cld
cld
je
push
int
jbe
add
mov
int
jbe
push
jbe
add
jl
cld
or
cld
dec
jne
cmpsl
cmp
jne
stos
je
or
cmp
hlt
jl
cld
mov
cld
pop
hlt
jl
cld
int
pop
repz
cld
int
jbe
hlt
jl
cld
stc
push
outsb
clc
jl
cld
std
fisttps
cld
cld
cld
pop
repz
cld
int
pop
hlt
jl
cld
jbe
clc
jl
cld
je
pop
int
pop
repz
cld
jbe
clc
jl
cld
int
jbe
hlt
jl
cld
je
clc
jl
cld
int
pop
repz
cld
jbe
pop
je
clc
jl
cld
int
pop
hlt
jl
cld
stc
push
jl
jl
cld
int
jbe
repz
cld
stc
push
outsb
clc
jl
cld
std
fisttps
cld
cld
cld
je
pop
int
jbe
pop
jbe
clc
jl
cld
into
mov
jbe
or
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
je
lea
mov
xchg
inc
mov
xchg
mov
dec
inc
inc
lea
mov
xchg
lea
mov
mov
lea
mov
dec
inc
dec
movl
cmp
jg
mov
mov
lea
xchg
lea
mov
lea
mov
dec
je
dec
inc
mov
mov
lea
mov
mov
xchg
dec
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jb
dec
dec
inc
inc
cmp
jle
inc
inc
inc
inc
dec
inc
cmp
jae
mov
lea
mov
mov
lea
lea
dec
mov
xchg
lea
lea
lea
inc
mov
mov
call
mov
cmpl
je
cmp
jo
lea
mov
lea
dec
inc
mov
xchg
mov
xchg
mov
mov
lea
xchg
mov
lea
mov
mov
dec
mov
cmp
je
mov
subb
xchg
mov
cmp
ja
mov
mov
lea
mov
inc
inc
inc
dec
jne
inc
inc
mov
mov
mov
lea
lea
dec
dec
lea
mov
mov
xorb
cmp
jb
dec
dec
inc
inc
cmp
jle
inc
inc
inc
inc
dec
inc
cmp
jae
mov
lea
mov
mov
lea
lea
dec
mov
xchg
lea
lea
lea
inc
incl
mov
cmp
jne
cmp
jg
lea
inc
dec
inc
xchg
dec
inc
inc
cmp
jb
lea
lea
xchg
lea
mov
lea
lea
mov
xchg
lea
dec
inc
mov
call
cmp
jo
lea
mov
lea
dec
inc
mov
xchg
mov
xchg
mov
mov
lea
xchg
mov
lea
mov
mov
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jo
lea
mov
lea
dec
inc
mov
xchg
mov
xchg
mov
mov
lea
xchg
mov
lea
mov
mov
dec
xchg
mov
cmp
ja
mov
mov
lea
mov
inc
inc
inc
dec
jne
inc
inc
mov
mov
mov
lea
lea
dec
dec
lea
xchg
lea
cmp
jno
lea
mov
mov
mov
lea
mov
mov
mov
lea
xchg
inc
lea
mov
mov
lea
dec
push
mov
push
call
mov
pop
ret
lea
push
mov
add
xchg
lea
cmp
jno
lea
mov
mov
mov
lea
mov
mov
mov
lea
xchg
inc
lea
mov
mov
lea
dec
mov
mov
mov
add
xor
add
mov
cmp
jne
ret
add
xor
cmp
jne
cmp
jp
lea
mov
mov
xchg
mov
mov
mov
xchg
lea
mov
xchg
dec
mov
lea
xchg
movb
xchg
mov
cmp
ja
mov
mov
lea
mov
inc
inc
inc
dec
jne
inc
inc
mov
mov
mov
lea
lea
dec
dec
lea
mov
mov
pop
ret
push
mov
add
cmp
jo
lea
mov
lea
dec
inc
mov
xchg
mov
xchg
mov
mov
lea
xchg
mov
lea
mov
mov
dec
call
call
call
call
call
test
jne
mov
jmp
movw
cmp
jp
mov
mov
xchg
xchg
lea
lea
mov
mov
lea
mov
mov
mov
xchg
lea
mov
mov
call
lea
mov
pop
ret
lea
push
mov
add
cmp
jo
lea
mov
lea
dec
inc
mov
xchg
mov
xchg
mov
mov
lea
xchg
mov
lea
mov
mov
dec
cmp
jp
lea
mov
mov
xchg
mov
mov
mov
xchg
lea
mov
xchg
dec
mov
lea
xchg
push
push
push
call
mov
call
cmp
jg
mov
mov
lea
xchg
lea
mov
lea
mov
dec
je
dec
inc
mov
mov
lea
mov
mov
xchg
dec
mov
pop
ret
add
je
jae
inc
dec
insb
and
and
add
add
add
jae
movl
cmp
jg
lea
inc
dec
inc
xchg
dec
inc
inc
cmp
jb
lea
lea
xchg
lea
mov
lea
lea
mov
xchg
lea
dec
inc
mov
mov
mov
lea
call
cmp
jb
dec
dec
inc
inc
cmp
jle
inc
inc
inc
inc
dec
inc
cmp
jae
mov
lea
mov
mov
lea
lea
dec
mov
xchg
lea
lea
lea
inc
ret
mov
ret
lea
add
add
mov
fiaddl
add
sub
pop
xchg
nop
push
cmp
add
testl
xor
jb
xor
dec
add
cmp
addr16
add
cwtl
aas
add
add
xchg
lcall
das
xchg
inc
mov
ficoms
add
out
add
stc
mov
mov
pushf
adc
mov
push
add
add
dec
pop
cmpsl
jecxz
insl
inc
add
leave
adc
push
jge
or
dec
hlt
flds
sarb
andb
jp
daa
leave
add
xor
out
mov
dec
fisubl
rorb
add
and
add
mov
sbb
add
xchg
push
popf
fs
mov
ja
xchg
add
add
xorl
jp
add
xor
dec
ljmp
ja
scas
cli
add
pushf
scas
add
xor
nop
popa
outsb
mov
add
pop
pop
add
outsb
push
test
push
fnsave
cwtl
add
lods
pop
add
cmp
cld
stos
ds
cld
hlt
aam
pop
xlat
bound
sbb
add
inc
repnz
out
fs
jle
bound
inc
dec
cs
add
adc
jo
fs
add
or
jmp
and
add
mov
repz
mov
mov
add
int3
mov
je
popf
imul
js
cmp
test
test
mov
das
add
add
mov
xor
ljmp
add
add
add
jbe
jp
ret
add
push
adc
or
lds
or
add
add
add
add
pop
in
xchg
enter
loope
ljmp
pop
add
cs
mov
int
mov
and
fwait
loopne
pop
pop
ja
inc
js
mov
add
add
add
stc
push
adcb
push
xor
fsubp
xor
mov
mov
xchg
adc
mov
scas
ret
idiv
add
pop
iret
jae
cmp
cmp
add
sub
mov
pop
int
rcrb
movsl
hlt
sti
and
aad
repnz
push
mov
sub
testb
add
add
mov
stos
addr16
mov
add
xlat
arpl
add
add
jbe
sbb
xor
add
js
dec
insl
add
sbb
sbb
scas
add
subb
scas
jecxz
add
add
add
add
dec
loop
mov
mov
cmp
int
sbb
push
stos
or
mov
gs
xor
jecxz
test
add
faddl
jo
sti
clc
stos
pop
mov
mov
push
add
mov
add
mov
sub
and
add
lods
cwtl
add
jbe
mov
and
in
add
pushf
cli
je
loop
sahf
add
add
inc
xchg
adc
add
outsb
add
xor
ja
add
data16
add
scas
add
lcall
mov
push
rorb
or
xor
iret
add
jb
repz
push
dec
xchg
xor
xchg
add
clc
adc
inc
add
fnstcw
loope
inc
sub
insb
add
or
add
addr16
mov
mov
popa
add
pushf
dec
add
pop
jnp
add
add
insb
add
imul
loopne
lea
add
mov
add
adc
sahf
lock
shl
jmp
or
push
add
mov
push
shll
xor
pop
pushf
sub
ja
loopne
dec
inc
stc
and
inc
cmpsl
or
sub
push
mov
inc
lahf
mov
movsb
out
pusha
enter
sarl
jmp
inc
mov
mov
mov
jbe
xor
ljmp
add
mov
add
push
dec
inc
xchg
pusha
movsb
clc
cmp
mov
ss
out
popa
xchg
shlb
xchg
out
ds
sahf
or
mov
xor
sbb
insb
jns
mov
cmc
dec
jle
inc
add
cmp
aad
in
jno
adc
mov
xchg
stos
lds
fisttpl
popf
cs
push
cwtl
jb
fimull
mov
cmp
clc
xor
scas
and
or
rcr
jno
sub
out
sub
insl
leave
int
push
hlt
mov
ja
mov
mov
into
sbb
and
cmpb
add
fwait
sbb
outsb
rol
pop
cltd
xchg
dec
fiadds
inc
jo
mov
scas
js
ljmp
pop
rep
and
insb
jbe
mov
enter
daa
lock
test
out
push
jno
aad
jl
push
inc
dec
pop
cltd
push
fidivrl
xor
imul
push
decl
rclb
and
pop
push
cmpsb
iret
add
js
dec
adc
loop
push
push
mov
jb
mov
pusha
cmp
and
and
bound
into
lret
decl
mov
xchg
sbb
outsb
add
movsb
jp
aad
add
pop
pop
mov
pop
pop
pop
adc
push
pop
and
adc
int
adc
xchg
outsb
pop
mov
adc
inc
push
jg
fiadds
mov
pop
mov
adc
and
ret
or
int
mov
notl
inc
lret
pushf
shll
nop
mov
push
sbb
push
cmp
in
shll
shlb
lret
loop
inc
jo
cli
outsb
fs
dec
adc
xchg
xchg
push
jle
cmp
scas
insb
xor
iret
xor
cli
adc
cmp
leave
and
cmp
test
pop
sbb
loopne
jae
pop
xor
adc
mov
loop
adc
add
jge
adc
movsl
lods
adc
lret
sub
rorl
jnp
and
sub
cs
add
lret
gs
adc
dec
xchg
cmp
fldenv
aam
repz
enter
addr16
push
sub
adc
cld
pushf
fbld
insb
jmp
iret
mov
xlat
adc
aad
dec
jge
in
add
push
test
test
lret
jne
call
cwtl
jecxz
enter
popa
sub
test
and
loope
xlat
inc
inc
bound
das
push
std
sarl
mov
push
testb
lahf
std
into
out
sbb
dec
jae
cmpsl
out
in
lods
mov
and
push
lret
mov
xchg
xor
adc
fdivrs
shrb
push
sub
sbbl
icebp
mov
es
push
insl
sub
popf
clc
insb
mov
ljmp
pop
lods
jmp
inc
test
and
mov
adc
add
lret
fstps
jg
fidivl
xchg
sbb
push
adc
ja
sbb
fisttpll
pop
ljmp
out
push
jo
jno
mov
inc
xor
or
movsl
pop
xor
mov
xchg
adc
dec
nop
or
ja
cmp
dec
xor
roll
adc
fcompl
outsb
add
jmp
out
aas
xchg
arpl
pop
stos
jns
mov
in
jecxz
xchg
push
mov
mov
faddl
or
addr16
rolb
jp
in
mov
jno
mov
loopne
jne
bound
fistpll
xchg
xor
ffree
push
xchg
fwait
sub
sahf
out
pop
xlat
sub
xchg
fcoms
fiaddl
mov
stos
jno
insb
in
test
mov
jle
xor
adc
xchg
test
iret
inc
jo
ret
mov
cmc
xor
mov
icebp
mov
and
adc
xchg
cld
mov
fidivrl
xor
nopl
fiaddl
scas
mov
je
mov
inc
or
lret
mov
insl
leave
inc
fwait
popa
hlt
cld
subb
push
cmpsl
or
es
aaa
inc
cmp
or
lret
add
bswap
pop
outsl
dec
pop
enter
sub
dec
lds
and
mov
sub
add
outsb
dec
inc
movsb
stos
and
push
adc
jbe
idivb
iret
xchg
enter
daa
out
imul
imul
insl
fwait
in
mov
mov
push
or
aaa
push
shlb
cmp
outsb
push
scas
fstpl
cmpsb
push
add
push
mov
out
and
push
iret
sub
iret
dec
dec
sub
adc
jp
and
shrb
or
or
leave
sbb
and
xor
adc
subb
xlat
mov
clc
push
mov
mov
sub
dec
inc
outsb
shrl
adc
insb
and
inc
adc
hlt
sbb
mov
dec
push
mov
fwait
mov
push
or
fcmovu
xor
add
adc
inc
lret
test
jno
mov
xor
hlt
dec
mov
xor
cmpsl
xor
mov
stc
jnp
cmp
dec
adc
xchg
fdiv
cmp
stos
pop
dec
out
scas
das
cli
inc
fnstenv
xor
mov
cmp
jb
or
mov
loopne
cmp
jne
adc
push
subl
adc
add
sbb
lods
clc
pminsw
mov
xchg
xlat
adc
sub
lods
in
cltd
or
in
dec
movsb
gs
rclb
repz
inc
scas
push
dec
out
xchg
les
aad
xchg
add
xchg
push
call
ss
pop
xchg
inc
adc
pushf
mov
dec
jmp
push
popa
cs
aad
sbb
inc
or
aas
fcom
jb
dec
dec
xorb
mov
or
lea
daa
mov
mov
scas
addl
sub
pop
adc
pop
jp
into
inc
lods
mov
lock
mov
fcoms
cwtl
and
sarl
rol
std
jne
je
dec
lret
out
dec
and
sti
dec
out
or
scas
cmp
imull
movsb
mov
mull
sarb
clc
sub
lea
es
dec
insl
adc
ficoml
sarb
fildl
lods
push
jo
mov
cli
mov
push
xchg
rorb
add
add
test
jle
push
push
inc
sbb
xchg
mov
test
popa
test
sbb
into
out
xchg
pusha
subl
mov
xchg
sar
bound
push
xor
xor
inc
jae
mov
or
xlat
dec
test
jae
jo
orl
cmpsb
or
test
dec
push
add
add
pop
jl
out
push
push
xchg
jns
sbb
jae
rcll
ss
mov
sub
mov
mov
ret
xchg
xchg
pop
cs
jne
mov
cmp
fsubrp
outsb
xchg
shlb
ret
iret
mov
addl
aam
mov
insb
pop
push
mov
mov
fisubrs
rcl
insb
dec
mov
jnp
cmp
jle
sbb
adc
and
ret
sub
notb
cli
inc
lods
push
sub
dec
and
out
test
push
xchg
jg
out
sub
push
fidivs
sbb
inc
cmpsb
imul
aaa
scas
jmp
dec
push
ljmp
mov
rorb
leave
mov
dec
pop
arpl
jb
or
loope
xchg
aaa
add
dec
or
add
inc
pop
testl
sti
jo
aam
scas
ss
jp
mov
fiadds
ss
cmp
js
jge
mov
popa
daa
out
mov
dec
sub
push
jl
or
dec
fcompl
push
xor
mov
mov
subl
dec
xchg
inc
cmpsb
aad
or
add
mov
pop
push
xchg
ret
loope
jle
sub
xchg
push
ds
sarb
test
inc
xor
in
dec
add
cmc
je
jae
iret
mov
add
daa
scas
sub
dec
ret
pop
push
lock
lcall
dec
fsubrl
xchg
sub
movsl
add
adc
adc
jl
sub
mov
xor
cmp
cli
jp
and
mov
push
add
test
out
lock
iret
std
inc
lret
daa
rcll
mov
sbb
and
lcall
adc
mov
push
outsl
mov
xchg
stc
xor
xchg
fs
daa
adc
cmpsb
les
movsl
in
out
mov
cli
jns
rdtsc
mov
out
stos
or
aad
into
js
cmc
in
leave
mov
pop
outsb
mov
sbb
shlb
adc
sbb
add
lods
fistps
push
cmp
ret
adc
sub
mov
add
adc
adc
and
push
sbb
rcr
adc
les
push
test
adc
call
push
leave
aaa
pop
dec
in
repz
inc
stos
pushf
xor
mov
dec
aad
push
stc
inc
and
xorl
out
je
pusha
jecxz
loope
out
dec
xor
ds
xorl
xlat
scas
pop
dec
cmp
mov
gs
xor
jp
jle
cld
das
es
les
andb
or
dec
testb
stos
dec
inc
mov
cmpsl
in
cs
out
enter
jnp
adc
lret
xchg
mov
xchg
add
mov
lret
shll
push
push
test
push
cmp
aam
sub
ret
comiss
xchg
xor
insl
stc
pop
repnz
fstl
xchg
jg
ljmp
lods
mov
mov
mov
lods
insb
xchg
push
jb
xor
or
das
add
inc
cld
cltd
jg
in
test
or
push
sbb
enter
scas
test
lahf
xchg
shll
pop
inc
int
stos
jmp
movsb
mov
ljmp
add
xor
jno
icebp
xor
cmc
mov
xor
dec
cmp
xchg
adc
pop
int
int3
ja
cmpb
test
inc
popf
lods
lret
jnp
fwait
cmp
push
cmpsb
sub
add
mov
and
std
cmp
jne
push
daa
imul
mov
jns
mov
and
aaa
addr16
fnstsw
lcall
mov
pop
dec
ljmp
pusha
jne
inc
cwtl
dec
xchg
mov
jle
xchg
xor
adc
mov
sub
or
pusha
push
out
lds
shrb
fsubs
insb
mov
xchg
jle
hlt
int3
in
add
adc
or
add
ret
in
sub
and
cs
mov
push
adc
test
xchg
stos
mov
sbb
imul
dec
jnp
push
xor
jecxz
xor
ds
and
jle
hlt
xchg
imul
jo
lret
or
pushf
or
ret
or
addr16
mov
sub
es
out
outsb
or
lds
ret
add
adc
rcll
roll
push
mov
lock
popf
push
jge
mov
in
xor
jno
xchg
push
jl
sub
dec
dec
fs
push
sbb
xor
cmp
add
js
mov
push
inc
sbb
cmpsb
pop
push
ljmp
cmpsb
imul
pop
inc
push
adc
std
shll
cmc
xor
mov
xor
pop
add
cmp
sbb
sbb
inc
xor
je
jp
jns
int
xchg
sub
xchg
pop
aad
aam
cs
popa
int
fcoml
shrb
mov
adc
xchg
lods
sarb
into
mov
pop
mov
mov
scas
jnp
icebp
xlat
jle
adc
pop
int
stos
popa
fsubrs
mov
popa
shr
xchg
in
sahf
ja
push
jns
test
jecxz
subb
and
jns
jmp
mov
in
ss
mov
mov
aaa
mov
xor
js
xchg
into
pop
or
cmc
mov
and
inc
std
ret
rcr
adc
repz
xchg
jp
add
jl
cwtd
or
lods
movb
cmp
out
enter
pop
sub
shlb
outsl
fs
jg
outsb
xor
pop
gs
jbe
nop
mov
mov
xchg
inc
inc
aam
or
dec
jb
les
adc
sbb
inc
push
fadd
aam
mov
sti
dec
adc
push
sub
pushf
loopne
outsl
jmp
mov
add
rcl
push
jmp
inc
adc
fnstenv
bound
std
xchg
je
fsubs
jecxz
std
mov
icebp
sahf
testb
dec
sub
mov
sbb
ret
dec
and
pop
int3
pop
shrb
inc
mov
popa
or
add
push
shll
mov
test
stc
std
ret
add
mov
mov
test
mov
mov
mov
rorl
mov
xor
movsl
mov
aam
pop
cmc
ret
sahf
rcrl
sbb
pop
insl
loopne
in
sbb
jecxz
mov
or
jmp
inc
mov
sbb
shll
dec
jb
punpckhwd
das
add
dec
out
cltd
mov
popl
fcompl
fucom
int
test
jo
xchg
sbb
fadd
rorl
pop
stos
fdivr
gs
mov
mov
jmp
or
or
xor
cmpsl
mov
xchg
mov
jns
mov
push
or
push
repnz
and
push
dec
cli
add
adc
jo
fcoml
mov
jns
xlat
or
mov
lret
mov
cmc
in
leave
push
or
jecxz
addr16
or
jp
lds
inc
mov
xchg
fisttpll
movsl
mov
xchg
xchg
push
pusha
adc
fistps
fsts
ret
xchg
cld
enter
pop
mov
fidivl
cmp
mov
cs
arpl
out
bsf
sarl
xchg
cwtl
jle
shl
push
inc
loope
and
push
iret
pusha
shl
ret
in
cmp
inc
ret
inc
stos
jae
lret
insl
pop
jp
lret
push
xchg
mov
cli
xchg
add
arpl
fs
mov
loopne
js
or
dec
icebp
ss
js
dec
leave
test
fisttpl
arpl
add
inc
jae
cmp
aas
push
pop
sbb
aaa
jle
sub
sub
jnp
cmp
inc
pop
push
adc
ficoms
xchg
rol
dec
jecxz
xchg
scas
hlt
push
adc
enter
xchg
in
movsb
dec
jae
push
cmp
in
ss
cmp
enter
daa
in
pop
mov
mov
shlb
jo
jl
sbb
dec
mov
xchg
jne
jmp
subl
inc
mov
fsubrs
inc
data16
fldt
sarl
jle
ficomps
mov
adc
mov
cmp
test
ds
mov
movsl
aaa
mov
cwtl
repnz
addb
sbb
outsb
add
xchg
cmp
adc
stos
pop
hlt
and
lock
pop
push
fbstp
push
mov
std
pop
sub
cmpsl
xchg
outsb
ljmp
xorb
fnstenv
daa
push
dec
mov
xor
xchg
push
adc
mov
clc
and
divb
dec
int
lret
rol
jg
mov
sbb
mov
outsl
xor
dec
and
inc
xor
or
fdivrp
mov
add
adc
imul
mov
inc
ljmp
std
cs
mov
testb
into
ds
cmc
jp
out
loopne
std
dec
pop
lods
add
jne
mov
sub
add
ds
cmp
adc
sub
icebp
xor
fcmove
jb
cs
push
inc
pusha
gs
gs
nop
xchg
inc
mov
adc
adc
mov
fnstcw
enter
fs
mov
ret
push
jp
pop
scas
pop
mov
pushf
mov
and
arpl
inc
pop
xchg
addr16
js
mov
dec
in
je
xorl
pop
mov
hlt
bound
repnz
or
pop
cmp
mov
push
dec
addl
aas
cmp
xor
f2xm1
xor
mov
mov
out
push
lea
sub
cmpsb
sbb
std
push
je
cmp
cmpsl
jmp
add
subb
jno
test
mov
cmp
push
cmp
mov
cmp
pushf
jecxz
aam
vcvtsd2si
insl
mov
mov
ljmp
subb
cmpl
cwtl
imul
icebp
xlat
add
or
stos
xchg
lahf
imul
test
xor
mov
sbb
pop
xchg
and
stos
mov
es
lea
adc
inc
mov
aas
lock
xchg
adc
xor
pop
movsb
mov
adc
push
cmpsl
pop
inc
push
pop
ja
shll
add
sahf
inc
lret
mov
out
fwait
cwtl
push
mov
les
mov
xor
out
mov
ffree
jns
sub
in
cmpsb
inc
xchg
pop
adc
jmp
xor
sbb
addr16
fsubrs
stc
js
mov
cmp
mov
mov
test
adc
fistpll
add
xchg
dec
sbb
xchg
movsb
mov
out
fs
sub
addb
stos
cmpsb
mov
es
nop
xor
gs
jle
andb
loop
adc
inc
iret
mov
aaa
pop
pop
fwait
inc
inc
inc
into
mov
lods
push
xor
icebp
lret
subb
fiaddl
movsb
hlt
xchg
pop
mov
imul
cli
push
mov
lods
mov
lret
in
aam
and
mov
arpl
push
inc
inc
jbe
sub
cmpsb
out
sbb
icebp
sahf
aaa
cmp
int
add
fs
add
popf
jl
mov
and
test
shlb
fwait
sbb
pop
loopne,pn
dec
imul
xlat
ss
push
dec
or
jge
rol
enter
daa
jmp
sarl
out
iret
jno
jno
jl
fcoml
dec
sub
add
jb
pop
lahf
arpl
pop
push
push
sub
test
fisubrl
xchg
cmpsb
pop
jp
in
mov
outsb
pop
pop
sbb
and
int
lret
icebp
fistpll
xchg
mov
rorl
rclb
icebp
in
adc
pop
lock
arpl
add
pop
sbb
sub
and
rcrl
push
pmuludq
imul
dec
dec
outsb
dec
enter
sub
or
dec
jg
or
mov
imul
fistl
jne
push
pop
cmp
pop
jp
fsubs
xlat
test
or
enter
stos
rcll
sbb
sahf
sbb
xchg
inc
xor
mov
stc
push
aam
ficompl
mov
jmp
mov
iret
sub
adc
ja
inc
pop
cmp
pop
xchg
or
aas
into
and
cmc
inc
mov
pop
lret
cmp
xchg
imul
out
data16
out
lods
xchg
add
xlat
or
add
pusha
ret
xchg
mov
int3
sti
fstl
jns
mov
nop
insb
shll
incb
scas
inc
fnstenv
cmp
xchg
adc
sbb
rcrb
aam
add
fldl
jmp
pop
shrl
pop
xchg
aad
dec
lock
je
sarb
mov
rorb
ss
fs
jecxz
add
negl
inc
cwtl
outsl
test
mov
aaa
add
sti
sbb
pop
push
das
jo
leave
xlat
push
lock
push
ret
das
ret
cs
mov
movsl
daa
adc
sbb
or
notb
pop
std
adc
out
xor
out
pushf
mov
push
mov
ror
int
mov
pop
mov
mov
jae
in
rolb
xchg
ja
mov
call
fwait
insl
scas
push
pop
xchg
cmp
xor
pushf
cmp
popa
aaa
pop
lods
add
mov
bound
and
add
daa
repz
add
stc
sbbl
or
dec
scas
push
bound
je
test
iret
out
xchg
int
sbb
leave
sarl
aam
pop
inc
or
out
jle
and
add
inc
fsubrp
push
xor
dec
fmuls
pop
sbb
mov
xchg
jae
dec
xchg
pushf
fcomps
jle
ja
ret
int
repz
inc
bound
or
jmp
mov
add
cltd
jmp
lcall
jns
and
add
test
dec
add
or
jne
dec
sub
mov
pop
cld
mov
pushf
adc
jne
cld
mov
fistps
xlat
xchg
sbb
jmp
xchg
aam
addl
cmc
sub
mov
sbb
sbb
and
pop
xor
sti
cmp
aaa
inc
in
out
adc
xchg
iret
push
aam
ret
jnp
shr
jl
push
repz
mov
push
xchg
stc
pop
fidivrl
pop
insb
sbb
repz
mov
mov
push
mov
push
aaa
clc
leave
xchg
and
arpl
dec
inc
inc
jns
int3
or
int
imul
arpl
adc
or
lock
inc
pop
mov
jb
push
xchg
lds
jmp
mov
xor
out
xor
cmp
lea
movsb
bound
push
popf
sbb
jbe
lds
dec
mov
xor
inc
daa
ljmp
jno
xchg
fidivrl
aas
dec
cwtl
dec
popf
push
sub
xor
or
xchg
mov
test
movsl
insl
and
cmpsb
loope
dec
in
mov
xor
push
mov
addr16
movd
inc
dec
icebp
ds
jp
movsl
inc
loopne
shl
in
adc
sub
sbb
mov
add
test
scas
dec
mov
pop
inc
lods
push
sub
fimuls
inc
add
fcoml
iret
lods
sub
inc
lret
adc
call
mov
mov
shll
sub
and
push
inc
push
sbb
jne
fisttpl
test
jb
shrl
inc
sbb
popf
add
push
sbb
hlt
adc
outsl
or
pop
loop
and
stc
push
pop
dec
fs
adc
imul
das
lahf
arpl
leave
loope
cli
inc
xchg
fidivl
sbb
dec
or
dec
mov
add
fwait
cmc
or
pop
loopne
cmp
ljmp
imul
jne
and
lcall
pushf
ret
inc
pop
test
jp
mov
xlat
sti
mov
pushf
lods
test
nop
inc
push
orl
testb
test
fidivs
int3
xchg
aam
in
lods
pop
inc
call
push
cmp
pop
adc
aad
pop
mov
pushf
loope
cmc
jmp
jnp
sub
inc
inc
xlat
pop
aas
mov
push
dec
scas
mov
je
test
leave
cli
inc
insl
rolb
mov
pop
pop
mov
rclb
dec
out
fisttpl
loope
test
sbb
ljmp
mov
pop
fwait
lds
pop
mov
notb
stc
dec
xor
add
mov
testb
dec
ret
sbb
cmp
pop
push
fcomps
xchg
xor
sub
out
xchg
ret
dec
pop
pushf
mov
sti
and
leave
or
jmp
mov
lods
imul
sbb
and
fidivrs
jbe
sahf
xchg
rcl
mov
out
push
and
sbb
sbb
and
sahf
rcll
sub
loope
cmp
add
or
jge
repnz
xchg
and
jl
dec
cli
lret
jge
mov
aaa
and
inc
stc
sub
or
or
push
xor
and
rclb
mov
adc
jns
mov
jl
pop
jns
rcll
clc
push
jle
test
mov
sysret
adc
cld
scas
jp
sti
jb
test
xchg
mov
jbe
dec
jbe
imul
shll
xor
jns
es
out
adc
jmp
pop
pop
xor
arpl
mov
push
jmp
cmp
xor
lahf
insb
pop
push
jnp
push
movd
push
pop
adc
pop
jno
xchg
out
pop
or
inc
in
or
or
push
mov
mov
push
adc
fisubrl
ret
xchg
pop
insb
or
imul
rcll
and
pushf
push
fnstcw
jno
in
push
hlt
cmpsl
hlt
mov
xlat
jne
jl
dec
or
mov
or
add
int3
fisttpl
fdivrp
out
and
jo
test
subl
movsb
in
mov
sub
mov
dec
jge
stos
or
push
push
daa
jmp
mov
jno
fists
push
loope
dec
pop
es
push
punpckldq
xor
test
mov
push
les
dec
test
jo
addb
add
mov
js
xchg
push
or
pop
xchg
sub
add
cmp
fstps
dec
and
mov
icebp
cmpb
fcompl
imull
shlb
jle
mov
xchg
jno
imul
roll
mov
mov
fadd
cmc
cld
sub
scas
ret
in
addb
inc
jg
pop
divb
mov
ret
mov
ret
daa
and
dec
adc
sub
push
sub
mov
lret
push
roll
mov
arpl
push
popa
add
xchg
addr16
xor
sub
icebp
push
loop
sub
stc
lds
cmp
ss
jp
cmp
mov
stos
out
ja
cli
js
fdivs
lock
jg
push
or
jl
out
shl
push
loopne
scas
ja
pop
or
test
mov
cmp
add
stos
movsw
xchg
jmp
bound
add
mov
mov
mov
sbb
inc
sti
cmp
and
outsb
mov
dec
sub
xchg
jl
and
faddp
jmp
mov
clc
sbb
xor
adc
shlb
pop
mov
outsb
pushf
mov
xchg
jmp
lcall
jo
fadds
xchg
ss
push
and
fwait
inc
out
dec
mov
push
jecxz
adc
out
lea
sbb
cwtl
mov
xor
mov
and
dec
roll
fstpt
std
pop
dec
out
xlat
ret
inc
or
mov
adc
cwtl
rcll
and
pop
lock
clc
cmpsl
call
xor
mov
lret
mov
and
adc
mov
and
sub
in
aam
xor
ret
fimull
push
insl
jl
lret
clc
add
dec
xchg
mov
roll
popa
gs
lods
sub
test
mov
rorb
push
mov
add
add
inc
cltd
xchg
imul
push
call
stos
push
test
jle
xchg
pop
ds
push
inc
shr
scas
ds
xchg
pop
cld
stos
xchg
test
mov
add
jmp
ret
or
push
xor
fs
mov
push
stc
lret
filds
pop
je
sbb
ljmp
inc
nop
and
or
add
aad
pop
add
jl
push
out
pop
cmpsl
andb
jnp
mov
imul
mov
or
shlb
mov
lret
pop
std
xchg
mov
jp
pop
dec
pop
add
pusha
jl
adc
cwtl
cmp
xchg
ret
jmp
sub
sub
out
jo
fwait
lret
sbb
stos
mov
mov
mov
xchg
jb
jle
jge
in
sbb
js
fsub
pushf
ret
outsl
pop
inc
ss
jae
cli
mov
jns
icebp
popf
data16
inc
push
nop
inc
lods
fisubl
sbb
xchg
pop
hlt
push
sbb
jge
imul
scas
cmp
bnd
mov
in
mov
les
leave
test
hlt
or
lret
arpl
movsl
roll
fimull
inc
sbb
aaa
jp
cmpsb
or
sub
add
test
ficomps
fdivrl
jo
pop
and
or
outsl
mov
xchg
push
cmp
cmp
enter
daa
call
mov
jno
dec
gs
and
dec
jbe
cld
push
repnz
xor
inc
cmp
push
xchg
xchg
enter
push
push
cmp
adc
mov
adc
outsl
jecxz
js
jno
pop
fisubl
mov
jo
mov
cmp
cmp
shlb
or
sbb
dec
jns
push
lds
xor
cmpsb
dec
inc
fs
nop
dec
sub
in
inc
lcall
cmp
insb
lock
sub
sbb
push
fsts
sbbb
fstpt
mov
mov
sti
scas
mov
lcall
and
and
push
icebp
sbb
dec
pushf
dec
lret
add
mov
call
adc
xor
fnstsw
pop
arpl
stc
jl
loope
jnp
mov
ss
pop
cmp
xchg
out
xchg
add
xor
cld
jg
stos
inc
popa
or
orl
dec
enter
adc
lods
push
cld
imul
sbb
sub
cmp
dec
xlat
leave
in
shrl
mov
mov
ret
mov
loop
fisubs
or
nop
std
mov
dec
mov
leave
inc
xor
pop
outsb
stos
hlt
pushf
cld
repz
jns
sbb
scas
mov
sbb
lahf
or
or
xor
jmp
jle
cs
push
rcl
mov
push
inc
lds
aas
hlt
in
jb
adc
je
sub
popf
movb
xchg
lea
iret
xchg
mov
cmp
popa
rorl
icebp
fldt
rcl
inc
pop
into
inc
lock
jmp
push
mov
mov
jae
negb
push
movsl
mov
cmpsl
out
jb
sbb
cld
adc
outsb
lret
sub
mov
or
pop
shlb
movsb
rolb
xlat
mov
aam
leave
jmp
es
int
clc
aas
fdivrp
xchg
stc
jnp
ljmp
hlt
lods
inc
fsubs
jbe
mov
xlat
mov
cmove
enter
lock
leave
pop
dec
test
imul
frstor
xor
arpl
xchg
pop
inc
mov
insb
out
cmpsl
jl
xchg
test
cltd
scas
mov
cmp
or
gs
mov
and
in
enter
das
ja
ja
stos
iret
dec
int3
cwtl
jne
daa
inc
ss
lret
adc
js
enter
or
out
aaa
xchg
jp
mov
out
in
test
xchg
xchg
lods
divb
rolb
xor
xor
jp
dec
iret
mov
test
mov
mov
dec
cmp
xchg
jne
or
pusha
pop
fadds
fbstp
fistpl
xchg
repz
flds
imul
pop
push
imul
out
and
mov
jle
push
outsb
in
dec
xor
imul
ret
mov
inc
cli
jmp
jae
xor
lea
fsubrl
mov
neg
rcll
xchg
mov
clc
sbb
xchg
subb
mov
mov
mov
rcl
inc
mov
pop
dec
cld
xchg
daa
mov
inc
adcb
or
cmpsl
int
cmp
dec
add
or
outsb
inc
fiadds
mov
mov
mov
push
cmp
lret
add
shll
add
ficoml
enter
daa
out
fdivrl
mov
jno
fdivrl
jl
xor
pushw
aad
bound
fcompp
dec
lahf
fistps
xchg
push
push
adc
push
push
mov
inc
xor
cmpsb
push
ret
xor
pop
sbb
push
mov
and
pop
pop
cmp
in
pop
or
movsl
pop
rcr
rolb
pop
mov
sbb
sbb
xor
fcom
or
lcall
test
fiaddl
iret
mov
stos
push
imul
fcoml
mov
in
outsb
fldenv
adc
cmp
jg
adc
cld
aad
jp
fs
adc
dec
cs
int
xchg
fmuls
push
testl
xor
shll
mov
or
mov
fiaddl
jmp
dec
stc
xor
popa
fs
inc
scas
adc
cli
cmpb
mov
jp
ficoms
arpl
sahf
xchg
jno
aad
daa
or
insl
sbb
lods
ja
cmc
pop
ja
loopne
sub
pop
inc
inc
test
jg
insb
imul
add
out
lods
xor
cmp
add
sub
addr16
mov
sti
cltd
into
sub
add
in
sbb
jmp
test
dec
xor
xchg
pop
test
decl
shl
outsl
and
xchg
sbb
xchg
call
into
cmp
adc
lea
es
push
test
jno
loopne
dec
aas
xchg
lods
cmp
inc
adc
cmp
fbstp
mov
scas
cmp
movb
xchg
cmc
std
out
pop
movsl
jns
sbb
mov
fimull
cmpsl
lds
xlat
test
xchg
popf
and
cmp
leave
das
aas
fisubl
mov
or
test
xor
pop
fistl
dec
and
cmpsl
out
xor
mov
lods
cld
aas
dec
cs
pushf
aaa
jb
adc
das
sub
out
inc
rcl
jl
sub
push
aam
mov
ret
clc
inc
mov
insl
dec
or
clc
jp
or
push
cmp
lods
lods
pop
ret
into
loope
out
mov
ficomps
outsl
aaa
push
bt
enter
mov
add
aam
loop
xchg
mov
push
push
outsb
mov
mov
xchg
repz
aam
rcll
cmc
imul
int3
add
mov
int
ss
daa
or
lahf
pushf
xor
mov
push
xchg
bound
mov
pop
ljmp
dec
mov
andl
andl
push
sbb
gs
xor
mov
push
xchg
jns
jo
in
cmp
in
add
ja
orb
pop
sbb
nop
jae
clc
test
or
sarb
ds
dec
pop
in
mov
inc
jg
pusha
mov
movsl
lret
nop
xchg
push
aaa
mov
cmpl
sub
test
ret
popf
stos
in
insl
and
insb
cmpsl
inc
jecxz
icebp
stc
ljmp
jecxz
adc
or
lcall
pop
scas
or
inc
add
test
xchg
popf
mov
dec
push
mov
jmp
or
and
test
scas
add
dec
shr
cmpl
fs
leave
jae
push
arpl
or
out
test
mov
clc
into
inc
or
cltd
push
add
mov
int3
pushf
dec
aas
pop
outsl
int3
dec
fsubp
fstpl
sub
lea
cmp
cmp
jnp
movsb
mov
test
mov
sbbl
and
out
out
cmp
sahf
int3
jno
xchg
or
push
push
inc
mov
mov
cmp
and
push
lahf
cmpsb
xchg
push
cmp
xor
ror
mov
cmpsb
in
inc
jmp
js
add
mov
pop
shrb
int3
lock
adc
or
movsl
popa
inc
in
pop
call
and
je
inc
sbb
arpl
jmp
adc
iret
int3
jae
fidivs
sub
or
lcall
sbb
popa
shrb
push
outsb
cmp
mov
xchg
in
xchg
adcb
stos
sahf
mov
mov
cmpsl
push
mov
inc
ja
pop
push
sbb
es
xchg
int
xchg
add
out
test
xor
mov
fistpl
fwait
inc
cmc
sahf
in
je
test
stos
aaa
xor
fisubrl
rcll
jle
cwtl
stc
ljmp
adc
push
jg
jge
jle
lds
cli
adc
cmp
test
mov
cmc
and
in
jg
fs
xchg
mov
push
mov
and
cmp
add
sbb
dec
in
xlat
inc
dec
aaa
sub
leave
dec
in
pop
mov
sti
dec
pushf
sub
jg
xorl
nop
mov
jbe
dec
push
or
pop
jo
fxch
call
sbb
sarb
adc
movsb
std
sbb
dec
in
add
jp
adc
dec
push
jmp
xchg
push
mov
out
aad
or
inc
sti
dec
movsl
aas
xor
jb
inc
loop
scas
andl
mov
jg
lea
cwtl
push
paddw
aad
adc
xchg
ret
push
inc
lods
pop
xor
adc
push
sbb
das
push
iret
dec
mov
cmp
cmc
and
cmpsl
and
cmpb
std
push
mov
sbb
jle
or
mov
jle
push
add
or
mov
jmp
push
pop
push
dec
and
cmpsb
push
xchg
stos
mov
ret
xchg
add
scas
fdivs
clc
mov
sub
fstpt
popa
stos
sbb
lods
pop
mov
mov
adc
andb
sahf
mov
add
cltd
aaa
es
in
dec
xor
xor
test
roll
in
enter
test
pop
cwtl
add
popa
je
out
insl
packsswb
loop
pop
stc
add
sahf
or
fs
mov
daa
sub
xchg
jno
pop
movsl
add
daa
cs
mov
lahf
inc
push
jmp
jnp
mov
sub
mov
lods
divb
cmc
jl
enter
pushf
xor
push
and
mov
or
or
dec
and
je
jp
jo
mov
add
adc
mov
dec
add
ja
or
pusha
dec
leave
mov
cmc
cltd
push
xchg
cmp
jmp
mov
pop
out
test
mov
mov
out
int
pop
cs
ret
adc
sbb
cmp
rcll
pop
ror
stc
fwait
aaa
ret
jno
in
sub
sbb
cmpsb
addr16
push
ret
popf
fistpl
pop
push
or
loop
xchg
arpl
sbb
inc
mov
cmp
into
push
imul
add
jbe
mov
test
adc
cmpsl
mov
mov
les
je
shlb
jae
or
ficomps
add
sbb
xchg
push
pop
sahf
out
jno
xchg
jo
inc
jg
or
push
jl
xchg
sar
movsb
sbb
sub
ret
jge
push
ror
sbb
or
in
lcall
push
jl
fcmovb
dec
ret
daa
pop
push
fwait
and
inc
and
pop
push
adc
fisubrs
pushf
xor
inc
dec
cmp
mov
and
cmp
pop
xchg
cltd
ljmp
ds
loope
jp
sub
push
cld
cmp
loop
push
pop
and
xchg
mov
jae
nop
xor
inc
lock
add
popa
dec
pop
int
jo
movb
fsubrl
add
outsb
lahf
in
push
adc
outsl
int
jg
cs
mov
jge
mov
in
popf
sbb
push
sub
or
cmpb
testl
leave
push
mov
add
sahf
mov
movsl
xor
mov
ljmp
adc
adc
xor
cmp
js
jl
testl
dec
ss
or
push
xchg
into
jae
cmc
jmp
and
xor
test
test
imul
dec
add
fs
lods
incb
cmpsl
xlat
xchg
pop
sub
imul
in
out
sti
mull
lock
and
test
int3
loop
add
les
mov
push
sbb
pop
mov
int3
and
pop
xchg
jbe
adc
insl
lods
pushf
cmp
jmp
ret
sbb
and
mov
cmp
push
pop
js
rorl
jb
stos
ljmp
insl
lcall
outsb
mov
xchg
mov
mov
fs
dec
jge
mov
xor
or
inc
repz
or
mov
sbb
std
jmp
mov
pop
or
cmpsl
mul
gs
sti
sbb
dec
pop
cld
imul
popa
and
cld
xchg
xchg
lret
jp
rorb
mov
and
sub
mov
pop
xor
add
push
mov
xor
imul
repnz
ljmp
shrl
add
and
and
dec
nop
add
add
mov
orps
movsl
mov
test
int3
jo
or
bndldx
adc
pop
inc
jecxz
stos
push
xchg
test
rolb
xchg
jle
adc
std
pop
mov
cwtl
pop
repz
std
orl
cmp
mov
sub
dec
std
adc
pop
pusha
mov
aam
movsl
and
jb
or
and
fwait
loope
jne
popa
mov
shlb
aam
cmpsb
bound
xchg
jns
insl
inc
in
pop
push
xchg
subl
mov
not
add
fmul
jp
setle
inc
and
dec
in
or
cwtl
popf
pusha
call
insb
dec
xchg
push
adc
jmp
push
xlat
ss
out
mov
ret
mov
es
stos
lret
adc
cmpsl
nop
jb
jge
aaa
jnp
xchg
cld
jle
jp
in
cmp
iret
pop
ss
ret
imul
lods
inc
sbb
shll
imul
push
mov
aaa
adcl
sub
mov
push
mov
xor
and
das
repnz
repnz
popa
mov
hlt
xor
test
inc
mov
mov
aaa
jbe
lret
or
xlat
roll
repnz
pop
int
movsb
fisubrs
inc
daa
lds
sub
sub
and
cmp
dec
lret
or
movsb
mov
shll
push
cmp
loopne
enter
daa
in
sarb
dec
adcl
sub
dec
xor
enter
fnstenv
scas
xor
push
jecxz
mov
push
addr16
push
inc
fisubs
push
in
or
js
loop
pop
repnz
push
or
jbe
mov
or
movsl
outsl
dec
lret
rclb
fisubs
pop
mov
sbb
mov
xor
insb
push
sub
sub
dec
lcall
sbb
sbb
stos
sub
outsb
outsb
add
adc
orb
push
mov
or
mov
in
mov
aas
mov
js
cmp
sub
dec
int
fmull
testl
lods
shll
and
lods
inc
sahf
xor
test
int3
or
push
push
dec
outsl
inc
mov
loop
push
jne
pop
push
cli
cmpsl
clc
lods
adc
mov
jle
jae
and
cli
ja
imul
cmp
cmp
pop
mov
into
push
or
loopne
rcrb
pop
movsb
notb
clc
lock
imul
std
add
pusha
jb
xor
mov
in
lea
cmp
mov
ljmp
repnz
sti
cmpsb
xor
outsb
int3
or
xchg
in
notb
or
mov
aaa
repz
repz
aad
data16
sbb
lcall
pop
inc
es
xchg
push
pushf
jecxz
int
mov
pop
add
shl
mov
jle
aas
jo
bnd
inc
vprotd
jecxz
in
add
or
orl
sahf
cltd
mov
and
mov
dec
fimull
add
pop
jnp
xor
in
lock
fwait
das
fadd
icebp
mov
cmpsb
ljmp
mulb
fsqrt
std
mov
scas
push
cmpsl
jecxz
stc
mov
cmp
in
cld
rol
lret
jmp
sbb
add
pop
dec
je
rorb
sub
aam
insb
adc
movsl
nop
or
mov
pop
insl
jmp
mov
xchg
cmc
shlb
rcrl
popa
fmuls
lods
in
fisttpll
xor
mov
and
add
cmp
movsb
rorb
add
adcb
add
aas
enter
rcrl
sbb
not
fwait
movl
out
xor
xchg
add
ret
aaa
sub
pop
or
mov
mov
sub
pushf
pop
pop
sbb
bound
rcll
pusha
dec
inc
andl
or
cmp
ret
add
lods
add
inc
cmp
mov
xchg
out
dec
das
jns
loop
in
ljmp
pop
mov
pop
or
ljmp
xchg
call
mov
movsl
ljmp
xchg
cmp
fbstp
inc
push
jmp
pop
push
mov
out
xor
sub
pop
lahf
inc
push
gs
jecxz
cmpsl
stos
and
cmpsb
enter
jnp
sbb
in
cli
test
xlat
outsb
lret
iret
mov
xchg
ret
pop
pop
push
pushf
inc
inc
es
mov
inc
scas
dec
push
dec
ret
sub
inc
or
adcl
sbb
scas
sub
and
sarb
lds
arpl
mov
fcomps
andb
mov
sbb
fdivrp
sub
aaa
xor
test
int3
pop
jp
pop
cld
jle
fmulp
pusha
add
ja
jo
push
icebp
scas
lret
test
cmp
imul
jbe
mov
enter
daa
jecxz
jle
jle
enter
xchg
jl
into
orl
rorl
mov
jmp
lahf
pop
pusha
fists
pop
sub
xor
push
inc
insl
dec
fisubs
repnz
sub
mov
pop
adc
nop
dec
loope
int3
dec
sub
or
je
jmp
loop
shr
jbe
out
jl
subb
push
add
mov
push
pop
push
push
test
pop
insb
nop
pop
lret
sbb
push
cs
ret
inc
outsl
sub
push
sub
adc
movsl
popf
stos
jg
pop
je
fmul
arpl
xor
jecxz
das
bound
fdivr
lods
mov
lret
add
and
mov
mov
sbb
or
test
dec
shrb
mov
stc
bndldx
xor
aas
adc
push
xor
mov
js
mov
sub
ret
cli
stos
stc
xor
gs
cmp
insl
into
cmp
jne
jns
leave
loopne
xchg
adc
flds
imul
addb
pop
andl
xchg
js
pusha
xlat
add
dec
sub
xchg
mov
popf
rclb
push
test
xchg
cmpsl
add
pusha
inc
nop
inc
cmp
addr16
adc
outsb
outsb
sub
sub
rep
sub
sbb
adc
sbb
pop
stc
mov
mov
dec
out
xchg
outsb
xchg
fidivrs
aad
fs
aas
psubb
jb
push
adc
adc
je
mov
jecxz
mov
bts
lea
les
mov
adc
mov
rcl
dec
push
mov
fistl
dec
loop
add
aaa
lock
das
mov
scas
jb
pop
mov
and
aam
shrl
test
std
dec
mov
cmpsl
loop
fidivrs
pcmpgtd
jmp
enter
jl
push
pop
pop
mov
xchg
pop
imul
sub
push
aam
cmpsl
es
xor
test
insl
out
adc
xchg
xor
test
xor
sbb
lods
pop
mov
mov
jp
sub
push
fisttpl
nopl
lcall
lcall
jp
out
lods
inc
test
imul
or
sbb
fists
repnz
or
mov
and
xchg
or
add
xor
call
inc
mov
addb
xor
pop
sub
xchg
imul
lret
pop
outsl
pop
movsb
jp
rcrl
dec
mov
sbb
push
fwait
aas
jg
push
cmpsl
js
add
sahf
xchg
or
xchg
jbe
bound
cli
fsub
test
fdivs
adc
mulb
cmp
jp
imul
mov
mov
jne
inc
dec
pusha
push
dec
xor
push
sbb
xchg
mov
cwtl
jmp
ljmp
out
xor
inc
out
dec
mov
movsb
lods
test
and
cwtl
imul
jnp
cmp
in
pop
mov
mov
pop
iret
push
ja
ret
jne
mov
inc
xor
data16
cmp
push
dec
dec
push
mov
cmp
in
jbe
or
xchg
scas
popl
push
ds
movsl
rcrb
mov
mov
inc
leave
dec
lods
jmp
lret
pop
int
jb
outsl
inc
xchg
clc
or
movsl
push
divl
hlt
jns
or
inc
jmp
pop
sub
lock
push
lds
jo
sub
scas
stos
xchg
and
stos
and
aas
lds
pop
dec
jge
xor
or
daa
loop
xchg
cmp
int3
cwtl
jl
push
inc
dec
adc
push
inc
cli
jmp
and
and
jp
adcl
push
test
std
arpl
cmpsb
stc
push
fsubr
js
adc
pop
push
xor
outsb
enter
stos
push
sub
lret
mov
pop
push
movsl
jge
pop
ror
and
rorb
add
gs
xor
mov
fistl
pop
jp
mov
pop
dec
jp
lcall
sbb
xor
sub
mov
mov
add
cltd
jg
cmc
gs
les
mov
mov
mov
mov
xor
int
mov
fdivs
lret
add
jno
mov
and
jne
js
test
jnp
int3
pop
dec
outsl
add
idiv
movb
dec
push
mov
cld
test
leave
mov
cmp
roll
cli
jno
shll
int
dec
divb
cmc
inc
stos
push
loopne
dec
pop
pop
loop
aad
sahf
not
imul
add
stos
data16
lods
mov
add
mov
mov
sub
mov
in
or
lock
mov
add
nop
pop
mov
dec
leave
loop
movsl
sbb
fldenv
cmp
jp
mov
in
inc
call
dec
fistpll
lods
mov
push
pushf
cmp
jnp
sub
nop
aad
dec
xor
add
loopne
inc
dec
mov
ss
fwait
mov
inc
clc
inc
cltd
cwtl
add
mov
addl
jmp
dec
dec
ds
pop
fcmovnb
in
ret
ftst
inc
mov
lock
das
lcall
mov
add
not
mov
sbb
std
lock
pusha
dec
or
cmpsl
cmpsl
loope
es
out
push
cld
push
xor
lret
cmc
dec
mov
fnstcw
mov
mov
xor
inc
stos
sbb
loop
ljmp
mov
insl
int
cltd
clc
mov
xchg
pop
ljmp
pushf
lods
ret
pop
adc
popf
inc
test
push
mov
rorl
mov
add
push
mov
test
push
jbe
push
pop
inc
push
cmp
jbe
test
cwtl
pusha
xchg
mov
lods
pop
inc
jge
stos
sbb
movsb
daa
xchg
push
xchg
loope
dec
into
loope
jne
inc
xor
xchg
test
xor
push
jecxz
popf
cs
xchg
adc
dec
xor
pop
xchg
add
ja
sub
cld
out
inc
mov
xchg
or
ljmp
dec
ret
jmp
or
mov
lods
out
jno
call
jns
mov
in
add
mov
xor
mov
out
outsb
addr16
sub
jp
and
mov
test
mov
xorl
dec
mov
xorb
loope
mov
cli
rclb
pop
stos
mov
je
out
stos
or
shrb
sub
in
shlb
insb
mov
mov
jle
jns
in
test
adc
sbb
in
rcr
inc
cmp
mov
push
into
fwait
rcrl
arpl
inc
or
xchg
fiaddl
sahf
jge
xchg
int3
imul
fildll
test
shlb
jge
insl
repnz
inc
leave
lahf
adc
push
insl
mov
xorl
jecxz
pusha
adc
aaa
mov
push
or
andb
pop
pop
ljmp
ds
jo
inc
or
sbb
push
movsb
inc
out
push
fs
jbe
mov
jge
mov
enter
daa
loope
or
in
mov
jl
adc
dec
jg
adc
xor
cmpb
lahf
cltd
lcall
mov
sbb
inc
mov
cmpsb
jl
push
in
shlb
pop
xchg
push
sub
mov
loope
scas
cs
pop
cmpl
mov
out
movsl
test
shlb
mov
sbb
jnp
xor
xchg
lods
sahf
xchg
negb
mov
sub
pop
jae
xchg
leave
aaa
push
jne
mov
sub
push
adc
fstpt
push
mov
out
dec
mov
mov
lods
das
and
mov
int
hlt
xor
outsb
push
testl
cmovp
or
sahf
sbb
xor
int
data16
andb
pop
cmpsb
dec
stc
jge
out
dec
sahf
pop
adc
pop
test
push
add
mov
out
mov
cli
adc
add
cmp
cmpsb
dec
or
xor
pop
dec
or
xchg
pop
add
adc
idivl
adc
js
add
push
jb
lods
lcall
xlat
add
sub
xchg
test
ja
mov
jae
in
sti
mov
xlat
cmp
cmpsb
jb
nop
cli
not
dec
and
inc
cmp
fcoml
les
or
dec
ficoms
or
in
call
enter
pop
insl
adcb
out
out
pushf
in
ds
sub
movsb
fwait
fwait
aad
xchg
addr16
sbbb
dec
mov
jb
push
pop
dec
add
jmp
mov
push
mov
lea
out
cwtl
mov
jp
mov
mov
fcomi
addl
rdmsr
lock
shl
mov
lret
xorb
or
cmp
out
ljmp
add
cmpsl
loopne
mov
icebp
mov
test
lret
ss
clc
mov
mov
adc
int
push
pop
test
mov
push
aam
sbb
ret
push
inc
aam
ds
push
insl
mov
mov
fdivrl
xchg
mov
fucomip
sbb
popa
sbb
aam
mov
rolb
or
ss
xchg
int3
into
paddusw
addb
adc
and
imul
in
fnsave
push
xchg
and
sbb
shll
lods
mov
pop
lods
cltd
xchg
lcall
call
xchg
xor
xlat
daa
or
sbb
xor
sahf
mov
ss
dec
cltd
mov
pop
dec
divb
ja
jl
dec
jno
sti
inc
dec
add
or
cmpb
in
add
add
push
fistpl
bound
sbb
xchg
mov
and
popa
cmc
sub
addr16
movsb
out
sub
mov
bnd
dec
jno
xor
pusha
push
add
fists
xor
push
lods
sbb
cmpb
out
xchg
push
sub
or
push
push
and
jl
add
imul
adc
mov
in
xchg
fcoms
push
leave
ret
fistpl
out
call
jae
sbb
xchg
mov
popf
sahf
xor
push
mov
inc
fidivrl
inc
mov
jnp
imul
cmpsb
scas
push
pop
push
int3
fsubrl
rorb
push
repnz
inc
mov
hlt
popa
iret
mov
nop
movsl
mov
or
sbb
cltd
or
in
int3
push
pop
mov
mov
test
jo
jns
scas
push
mov
daa
sbb
push
mov
sub
mov
popf
enter
daa
loopne
les
pop
mov
test
out
dec
out
and
or
cmp
fstps
inc
push
das
cmpsb
mov
mov
cmp
sbb
out
cmpsb
ljmp
imul
cmpsl
cmp
pop
sarb
push
push
dec
loope
sbb
shrl
pop
sub
push
pop
movsl
mov
dec
sarb
xor
out
adc
out
lods
add
in
xor
mov
popa
dec
insl
pop
enter
mov
pop
dec
leave
into
lcall
cmp
les
inc
outsb
mov
adc
imul
xchg
cmp
rorl
mov
and
outsl
push
cmp
mov
testl
push
rcll
pop
sbb
jl
test
xor
int3
stos
loop
jg
stc
xor
std
fs
dec
adc
push
push
cmp
pop
in
ds
icebp
inc
cli
inc
iret
loop
jg
mov
mov
cs
loop
xchg
cmc
into
dec
pusha
loopne
sbb
test
imul
loop
pop
out
inc
sbb
subl
out
xlat
ror
sub
push
mov
fisubs
sti
bound
mov
lods
adc
dec
test
jbe
lret
movsb
push
les
repz
sbb
xor
sub
pop
adc
cli
adc
test
pushf
mov
test
pop
lcall
popf
shlb
jb
mov
push
je
pusha
cld
jecxz
xchg
mov
sahf
jp
js
imul
sbb
adc
xchg
fimull
pop
pop
rcrl
js
mov
mov
sbbb
cmc
pusha
rcrl
shl
xor
mov
dec
incb
cmpsl
fistpll
icebp
xchg
xor
insb
repnz
lret
movsl
push
mov
fcomp
mov
test
mov
enter
cwtl
mov
sub
xorl
pop
ds
insl
fwait
mov
clc
pop
push
clc
xchg
icebp
gs
popa
xor
shrb
outsb
sbb
mov
or
add
cmp
cltd
sub
sbb
lods
mov
je
xchg
dec
idiv
add
stos
sti
mov
out
mov
mov
mov
mov
xorb
dec
add
ja
add
inc
loop
mov
ret
add
xor
dec
fs
and
ljmp
nop
xor
add
scas
sbb
out
das
xchg
adc
loopne
jns
sbb
test
mov
andl
adc
addr16
mov
sub
ljmp
mov
push
dec
push
push
test
mov
test
fildll
and
xchg
dec
mov
movsl
add
sub
inc
or
push
popa
add
ret
and
mov
insb
xchg
shrb
icebp
push
or
adc
mov
scas
adc
mov
xor
ret
mov
test
jae
subb
push
inc
popf
lds
inc
inc
gs
pop
cmpsl
sub
imul
insl
adc
sbb
xor
imul
fldt
adc
mov
scas
mov
shl
test
inc
lcall
sbb
aad
aaa
xor
or
imul
mov
ficomps
or
fsts
dec
scas
inc
test
and
int
cmp
inc
mov
push
add
jbe
cmp
adc
enter
daa
fistps
cmp
movsl
jno
jae
jl
cmpsl
cmp
push
in
bound
sbb
cmpsb
rcrl
add
inc
test
pop
mov
cmpsb
subb
mov
mov
adc
push
cmpsb
xchg
loope
and
iret
cli
imul
jne
out
movsl
xchg
xor
rcrb
imul
cmp
std
sbb
mov
pushf
and
or
out
rclb
pop
mov
lcall
insb
fsubrl
mov
repz
outsb
icebp
pusha
push
adcb
out
add
je
and
push
mov
mov
mov
lock
ret
fwait
push
cmp
popf
int
and
in
cmp
add
ror
fst
test
sub
mov
sahf
popa
sub
fcomi
shll
fldl
loop
lea
stc
jmp
xor
adc
clc
add
lds
cmp
pop
push
xchg
out
scas
and
xor
dec
cmp
movsl
or
mov
lods
loopne
and
aas
pop
out
pop
test
inc
ss
setbe
in
icebp
pcmpgtd
xor
lods
push
add
xlat
add
sub
pop
add
dec
xchg
leave
sti
adc
sbb
adc
nop
mov
pusha
dec
jecxz
roll
cmp
fwait
les
out
repz
sub
pop
ja
call
lea
and
xchg
pushf
cmp
or
dec
testb
push
sub
ss
movl
andb
pop
out
dec
lock
loop
push
inc
jg
es
sbb
scas
cwtl
xor
jne
adc
stos
mov
push
xorl
testb
sbb
stos
cmp
aaa
icebp
pop
mov
cmp
andl
mov
divb
pop
std
in
aad
stc
fxch
cmpsl
ficomps
mov
imul
lret
adc
ret
mov
jmp
pop
mov
out
rcl
imul
sub
in
aam
fidivl
ret
jo
lret
es
adc
clc
push
mov
mov
popa
dec
xor
lods
add
cwtl
mov
push
sbb
popa
push
inc
sahf
bound
fwait
cmp
cltd
mov
inc
cmp
xchg
fldl
sub
xchg
cli
sbb
sub
rorl
pushf
pop
inc
mov
out
and
dec
add
aad
xor
sti
outsb
or
bound
xor
xor
enter
leave
dec
addr16
xchg
pop
ret
ja
cmp
inc
jbe
arpl
sub
xor
add
or
out
push
cmpsb
nop
int
add
and
mov
push
and
or
push
or
jp
mov
mov
lahf
fs
rcrb
dec
aaa
lods
or
inc
mov
lods
repz
add
jmpw
sub
mov
out
lret
fdiv
lock
mov
and
and
pop
jmp
fsubs
jnp
mov
jle
or
repnz
repz
xchg
sub
ret
push
pop
pushw
ret
inc
pop
shll
or
push
pop
dec
mov
push
xchg
adc
nop
ret
movb
scas
sbb
push
pop
incl
mov
add
leave
sub
hlt
testl
add
xchg
xchg
stos
aaa
lock
je
loope
jl
inc
int3
hlt
mov
pop
out
fdivrp
dec
pusha
lds
cmp
sbb
and
inc
mov
xchg
sbb
out
test
mov
jbe
sub
jge
test
enter
daa
fidivrs
jno
dec
mov
dec
int3
in
push
shrb
xor
push
cli
jb
testb
test
sub
xor
lahf
or
jne
popa
js
arpl
push
fsubp
push
scas
loope
nop
sbb
cmp
inc
ds
sub
movsl
cltd
shl
xor
jnp
lret
orb
sbb
add
mov
xor
ljmp
mov
roll
sub
stos
pop
test
and
inc
sub
je
outsb
push
dec
in
int3
fildll
jg
mov
mov
movsl
js
test
seta
rcrb
jp
lcall
idivl
jno
rol
inc
mov
cmp
adc
add
test
xor
outsl
jle
and
push
iret
call
fs
lret
test
or
fistpll
push
in
out
icebp
sub
test
push
loopne
pop
bound
into
test
in
pop
jbe
loopne
cmp
pop
xor
ljmp
adc
pop
mov
jl
cmc
inc
mov
and
lahf
xlat
cli
xlat
aas
outsl
stc
sub
push
mov
mov
xchg
lret
mov
cmp
jnp
nop
mov
dec
inc
cmpl
add
flds
fildll
mov
add
adcb
call
inc
adc
adc
sub
andb
jb
aad
roll
hlt
add
sub
jb
das
lret
dec
addr16
add
fsub
xor
scas
out
xchg
xchg
cwtl
out
sub
mov
jbe
mov
mov
dec
ljmp
pop
dec
cwtl
fadds
mov
stc
das
push
push
push
mov
lock
add
sar
push
idivb
scas
jns
hlt
add
cmpsl
fnstsw
mov
inc
orb
ret
lret
sub
mov
out
shlb
sahf
mov
pop
push
inc
sarb
jne
sub
jmp
aam
mov
insb
es
jl
insl
imul
xchg
outsl
dec
repnz
pop
cli
mov
sbb
movsl
dec
psubd
add
xor
out
mull
dec
clc
mov
dec
push
jo
sub
leave
xchg
mov
push
pop
lock
stos
fldpi
out
test
xchg
outsl
jae
add
add
xor
fcoml
xor
jle
mov
aas
inc
ss
into
jl
pop
jge
bnd
fmull
inc
or
cmp
push
jne
add
fstpt
bound
jb
jle
mov
xchg
lods
dec
mov
mov
rcrl
cmp
sbb
mov
in
mov
aas
out
rorl
lea
inc
mov
scas
push
in
lcall
cmp
jnp
ret
mov
pop
sub
mov
sub
lock
lock
push
insb
push
sbb
sbb
jle
es
adc
mov
ret
lret
pop
popf
pop
pop
inc
push
out
push
fidivrl
xchg
push
add
aas
cmp
cmp
scas
jle
pop
push
mov
jmp
xchg
repnz
insb
jecxz
mov
out
jae
mov
or
sbb
aaa
scas
sub
add
in
int3
fbstp
pop
push
nop
ficomps
jl
jo
mov
scas
add
ljmp
jno
sub
ss
ficoml
ret
jno
daa
frstor
or
inc
scas
jl
mov
dec
cmp
mov
mov
jl
xchg
ficoms
and
popa
addr16
adc
lds
push
hlt
inc
popl
loope
cmpsb
mov
cmp
stos
mov
rcr
push
imul
sub
jmp
iret
ds
mov
rorb
mov
sbbb
popf
sbb
sbb
stos
test
test
pop
lds
repz
rol
lods
fadd
pop
aas
sub
rcl
outsb
mov
aam
adc
int
inc
out
in
inc
cmp
mov
lahf
repnz
call
mov
loope
clts
inc
enter
loop
fcomps
in
idivl
cwtl
lret
or
pop
xchg
out
mov
aas
lret
pop
roll
xlat
outsl
outsl
pop
or
test
ss
adc
loop
ss
lods
and
push
ds
out
mov
cli
fsubl
xor
insl
or
xor
cmc
and
adc
jge
mov
imul
idivl
or
mov
lods
ss
data16
inc
sub
jle
xchg
stos
cld
push
mov
pop
imul
sar
arpl
inc
gs
nop
data16
sbb
cmp
add
mov
mov
lcall
mov
fwait
in
idivl
in
sub
pushf
nop
movsb
enter
xchg
xor
aad
lahf
pop
inc
out
mov
and
ss
dec
fidivs
call
fdivrp
and
mov
cwtl
test
jge
mov
out
sbb
ljmp
lock
lock
andb
movl
roll
adc
std
xor
insl
dec
out
ret
sti
cmpsl
fsubl
insl
icebp
sbb
and
repnz
pop
mov
push
cmp
pop
and
and
adc
jmp
ret
mov
es
pop
pop
insl
push
jge
clc
enter
scas
jg
ljmp
push
fimull
cmp
dec
leave
jge
and
xchg
push
std
mov
icebp
add
jl
cltd
es
push
test
je
sbb
adc
fs
fstl
mov
xchg
lcall
sahf
int
fwait
mov
push
out
call
in
add
lret
nop
xor
xor
or
cmp
xor
sbb
mov
inc
sub
and
mov
dec
cmp
iret
adc
and
fwait
pop
add
add
rcrb
int3
aad
jb
jns
add
xchg
sti
xchg
mov
pop
mov
or
ret
cmp
fdivrs
pop
jl
outsl
mov
pop
mov
mov
jge
shlb
xchg
cmpsb
ss
lods
in
adcl
out
int
sub
imull
push
push
add
and
jb
aad
adc
mov
jle
xor
aam
push
iret
push
cltd
inc
ret
mov
inc
jae
shll
pop
and
popf
test
nop
push
test
test
test
pop
add
mov
rclb
mov
sar
mov
repnz
and
hlt
lea
jp
mov
in
dec
sbb
sarl
outsb
jb
or
sbb
stos
xlat
dec
int3
lret
pop
inc
xchg
xchg
inc
out
mov
jo
or
and
sbb
add
loopne
out
add
sbb
xchg
in
cli
dec
daa
fmull
push
cmp
xor
jno
pop
sub
dec
dec
stos
mov
push
xchg
pop
cmp
xchg
pusha
lahf
xor
les
lea
mov
push
jmp
inc
inc
mov
pop
into
dec
xor
fld
loope
ficoml
cmp
nop
inc
ds
mov
shr
aam
xorb
mov
ret
add
aad
xor
jmp
insl
mov
pop
fs
sub
pop
inc
xchg
lcall
pushf
fdivl
sub
shl
outsb
sbb
fs
bound
loopne
mov
xchg
js
mov
dec
mov
lock
push
inc
outsl
out
push
bound
cmp
leave
jne
out
rcll
add
jno
pop
sahf
dec
out
test
jle
out
pop
repnz
cmp
xchg
loop
out
pop
stc
adc
fs
in
adcl
shlb
mov
outsb
mov
adc
mov
cld
add
fstpt
cmp
pop
outsl
or
fdivrp
into
outsb
ficoml
loopne
cmpsl
xor
addr16
imul
jmp
add
lods
sbb
inc
pusha
xlat
mov
pop
or
in
mov
cltd
incb
jne
nop
inc
addl
mov
std
repz
jb
xchg
jle
push
sbb
jb
sbb
inc
inc
sbb
adc
cli
fwait
pushf
cmp
sbb
pop
cs
sbb
or
aas
push
jno
dec
push
outsb
mov
jecxz
jle
and
ret
lea
pushf
cwtl
fs
add
push
pop
sub
shrb
fcmovnu
loop
pop
xchg
das
sbb
sarb
das
aam
lcall
xor
and
arpl
idivb
ret
es
ficoml
cmpsl
fistl
mov
lock
or
test
mov
mul
mov
inc
lods
out
shl
add
sub
cmp
movsb
jb
ret
sbb
lods
loope
aaa
mov
add
xchg
in
cmp
popa
nop
mov
lods
mov
outsl
lea
sub
jecxz
fsubr
mov
add
rcrb
pop
jb
mov
pop
push
push
iret
and
cwtl
test
int
xchg
add
inc
or
adc
dec
sbb
and
lock
ljmp
push
xor
cmp
or
fidivs
or
out
xchg
or
out
pop
repz
xchg
ja
scas
adc
mov
inc
cmp
out
fwait
mov
jmp
sbb
loope
xor
pop
mov
ljmp
xchg
les
dec
xchg
dec
add
out
mov
leave
jp
cmp
sub
inc
fistpl
ret
lcall
loopne
mov
into
popa
push
pusha
pop
das
adc
sub
jne
sub
xchg
ja
leave
and
inc
out
cld
jp
xchg
push
stc
mov
pop
pop
xor
jbe
outsl
insb
inc
sbb
jle
xor
in
adc
iret
scas
push
and
mov
imulb
lock
push
pusha
or
popf
popa
lea
push
add
fidivl
fistpll
xchg
leave
lods
cmpsl
sbb
arpl
imul
int3
push
das
and
mov
sti
loop
leave
nop
enter
cmpsb
jecxz
fildl
inc
cmpsb
adc
or
ret
aaa
sub
cmp
add
push
int3
mov
adc
pusha
pop
fsubp
lods
sbb
jo
mov
mov
cmp
rsqrtps
vmptrld
mov
ret
enter
daa
fcomi
mov
push
push
insl
jno
sahf
imul
lods
push
jns
add
and
in
and
lahf
push
test
pop
test
mov
inc
in
stc
cmpsb
mov
jle
sub
js
repnz
pop
or
cld
lock
mov
sub
sub
cmp
or
scas
ret
lds
dec
addb
sbb
mov
xor
popa
je
xor
out
sub
mov
pop
ret
xchg
cwtl
lcall
fcompl
pop
mov
scas
fldl
adc
jge
sarl
cmpsb
gs
xor
mov
gs
and
mov
push
inc
mov
int
xor
idiv
jbe
lret
dec
roll
aaa
sbb
arpl
xor
pop
outsl
sbb
iret
lret
push
stc
pop
cli
fs
and
jb
pop
rorl
sub
mov
dec
sub
mov
jmp
fsts
mov
push
jp,pt
mov
cmpsb
loopne
cld
jno
mov
jo
imul
enter
pop
lods
add
cmp
dec
xlat
cld
mov
pop
mov
cmc
xchg
pop
sti
int
idiv
test
or
dec
pop
mov
stos
fldenv
pop
les
cli
mov
cmc
dec
call
ret
pop
xchg
idivl
adc
aad
out
cli
jmp
mov
jb
push
jle
inc
and
mov
pop
dec
test
loope
dec
int3
or
je
or
jecxz
bound
daa
mov
rcrb
or
mov
orl
lret
fisttpl
cmpps
xchg
inc
cmp
icebp
lock
mov
das
mov
mov
adc
adc
in
pop
testb
add
std
mov
scas
call
xchg
inc
roll
push
cld
mov
add
rcrl
arpl
xchg
shlb
aad
aam
dec
dec
ret
lods
shll
es
je
insl
push
ja
clc
and
xchg
sub
stc
ljmp
les
mov
xor
stos
movhps
fiaddl
dec
stos
jle
xchg
fadds
data16
xchg
pop
xchg
fstpl
pop
xchg
sahf
mov
shrl
xor
imul
fcoml
inc
negb
add
out
push
dec
mov
addr16
movsb
pop
xor
push
dec
mov
dec
arpl
dec
add
pop
scas
lret
pop
fists
dec
and
rorb
ja
mov
jmp
mov
pop
les
mov
dec
jns
shrb
in
mov
xchg
cltd
mov
dec
mov
pop
cmp
jp
repz
out
cmp
test
jne
mov
fisttps
popf
xchg
dec
dec
js
and
daa
xchg
inc
jno
xorl
out
mov
mov
insl
xchg
outsb
push
pushf
sbb
lea
insb
stos
subb
mov
push
pop
adc
sbb
mov
cmp
jecxz
inc
mov
fnstenv
pop
repnz
and
rcrl
stos
adc
inc
andb
cmp
xchg
and
imul
cmp
jbe
sub
xor
mov
repnz
insb
sbb
pop
cmp
hlt
and
daa
arpl
int
inc
test
adc
pop
cmpsl
aaa
in
cmp
xchg
int3
mov
out
lahf
fiadds
lds
jo
dec
cmp
mov
sbb
cmp
fldenv
popa
clc
jbe
jns
jge
pop
cmpsb
enter
daa
fisubrl
cmp
je
mov
loopne
fsts
mov
xor
mov
lea
mov
push
push
push
pop
ds
je
mov
in
adc
js
hlt
dec
pop
dec
lret
fisubrs
aam
loope
mov
sub
test
xor
mov
and
add
mov
inc
shlb
dec
mov
xor
iret
add
inc
fdivs
lahf
sbb
repz
pop
mov
jae
push
pop
pop
inc
push
push
lcall
inc
fadd
cltd
xchg
sub
ja
adc
cwtl
movsb
pop
jg
bound
mov
aam
and
loop
push
dec
sbb
fmuls
call
mov
sbb
push
add
iret
mov
sahf
nop
aam
test
xor
jnp
jle
pop
fs
rcr
adc
daa
cmp
inc
mov
dec
mov
mov
sub
lahf
push
or
mov
cmpsb
cmc
js
loop
ret
sbbb
fstl
ss
movsl
adc
enter
daa
mov
push
jge
lods
jmp
in
mov
lahf
xlat
cmp
inc
sub
cs
mov
pusha
out
sti
jl
fdivr
int3
aas
push
xlat
jmp
dec
mov
sub
les
add
ds
push
sbbl
scas
int3
adc
cli
dec
pushf
xchg
pushl
jmp
pop
in
cs
xchg
outsl
aad
xorl
aas
sub
aas
cmpsb
dec
lock
test
dec
or
cwtl
jecxz
mov
xor
fcompl
lret
test
andl
fstpt
call
pop
fsts
cwtl
lock
mov
int3
testb
xor
mov
std
sub
orl
xor
icebp
sahf
andl
aas
sub
dec
mov
dec
ja
mov
andb
rorb
push
aam
jl
ret
cmp
jle
add
insl
mov
ljmp
jo
sbb
or
mov
cmp
push
mov
mov
cltd
lret
shrb
and
push
add
cmp
subl
xor
add
jbe
xchg
xchg
out
adc
sti
add
pop
jge
insl
loope
xor
imul
cld
jmp
mov
dec
lods
push
push
popa
pop
imul
rorb
mov
or
leave
xor
bound
add
rorl
out
imul
popa
jns
lods
js
fiaddl
pop
mov
inc
sbb
mov
pop
imul
test
sbb
gs
cmpsb
mov
fwait
pusha
xchg
add
xchg
pop
pop
lahf
jmp
or
adc
out
mov
sub
test
xlat
push
adc
movsb
mov
insb
push
mov
int
ficoms
outsb
in
add
adc
loop
insl
loopne
ret
and
jns
in
xchg
pop
adc
add
lcall
es
sbb
icebp
ficompl
shl
sbb
repnz
sub
mov
inc
scas
mov
mov
dec
fs
outsb
scas
pop
arpl
xchg
push
lods
call
mov
cmp
repnz
stos
fs
or
repnz
test
mov
aas
fisubrs
or
lds
sti
sbb
or
scas
adcl
cmp
into
xchg
movsb
popf
adc
push
fdiv
lds
scas
mov
mov
enter
daa
fstps
cmp
jno
mov
jl
inc
stc
dec
imull
xor
pop
enter
and
hlt
sbb
test
and
shlb
clc
call
stc
pop
mov
adc
pop
mov
leave
xlat
sub
mov
cmp
movsb
lea
inc
arpl
movsl
mov
mov
push
subb
sbb
or
idiv
or
outsb
sbb
mov
cltd
pop
fstps
std
pop
rcrl
lcall
loope
jno
jo
negl
adc
mov
sub
and
mov
xchg
clc
mov
add
mov
cwtl
int3
and
sbb
int
mov
inc
adcb
adc
shll
sbb
mov
sahf
xor
popf
test
insb
sahf
outsl
into
stc
xor
jb
adc
call
xchg
cmp
dec
out
testl
pusha
les
das
cmp
xor
ror
loop
cmc
aas
ds
pop
loope
pop
stc
adc
push
pop
imul
mov
add
fsubl
dec
stos
lods
shlb
or
jp
add
mov
lret
or
sti
sub
cmp
out
mov
xchg
nop
shl
and
inc
add
push
cmc
enter
lahf
les
aad
xchg
jo
sbb
jecxz
inc
shr
pop
negl
pop
adc
mov
pushf
cmp
and
call
ds
loopne
cmovo
in
inc
dec
push
jb
pop
pop
dec
mov
mov
xor
sub
jecxz
cwtl
xchg
or
mov
rorb
cmp
jno
xor
mov
inc
inc
pop
and
cmc
xor
mov
orl
jecxz
outsb
roll
mov
std
iret
sbb
dec
fildl
jns
adc
push
sbb
cltd
sub
lret
scas
and
mov
push
insb
mov
dec
mov
movsl
or
rcrb
and
icebp
movsb
jb
add
jbe
es
pop
mov
in
add
mov
inc
xchg
stos
test
mov
cld
popa
aad
mov
xchg
mov
fcoms
add
repz
pmullw
cmpsl
cltd
add
test
mov
hlt
push
sbb
movsb
fucomp
pushf
loopne
and
lods
xchg
lock
sbb
sbb
pop
inc
add
test
or
je
adc
inc
arpl
decl
pop
xor
dec
sbb
mov
fsts
xchg
or
xor
jo
fcmove
inc
dec
or
pop
or
call
fwait
adc
inc
xor
sub
mov
bound
mov
aas
in
mov
xchg
aaa
adc
jno
cltd
push
lahf
or
hlt
mov
mov
pop
cld
mov
push
inc
dec
mov
mov
add
fisttps
sub
jmp
fmuls
mov
out
inc
fwait
sub
jecxz
cs
sbb
dec
and
iret
imul
jle
lock
loope
add
inc
jno
iret
int3
stos
test
mov
inc
inc
lahf
adc
jae
aaa
mov
popf
jae
push
sub
ficoml
pusha
xchg
into
cltd
add
js
imul
scas
insl
iret
cmp
shlb
mov
hlt
sbb
cmc
add
hlt
mov
cmpsb
or
add
or
repz
mov
or
pop
push
add
or
pop
add
fmulp
movsb
pop
lds
fcompl
pusha
cmpb
fbstp
movsb
sub
clc
push
sub
pop
jbe
pop
and
cmp
fsub
adc
cmp
cmp
jl
les
xchg
xor
repz
cmp
mov
test
jmp
aaa
inc
xchg
sub
in
fists
jg
lret
push
sahf
pop
loope
push
fisubrs
mov
adc
push
add
rclb
aad
add
mov
sahf
push
or
push
and
jns
xchg
pop
add
pop
sub
nop
pop
inc
movsl
cmp
test
inc
fcompl
sub
outsb
cmpsb
mov
or
idivl
in
mov
icebp
mov
or
and
xchg
push
push
xchg
int
push
inc
fadds
pop
adc
cmp
lret
adc
dec
sub
mov
lock
xchg
js
mov
xor
fldcw
mov
cmpsl
stc
in
jmp
sub
adc
pop
ss
mov
lods
pushf
out
push
in
fldt
xor
jp
cmp
xor
inc
into
cli
and
cmc
push
pop
loopne
jno
pop
sbb
adc
inc
mov
or
add
mov
pop
xchg
lcall
pop
cmp
mov
shl
mov
ss
daa
sti
fisubl
mov
in
int3
nop
lods
lock
adc
arpl
scas
fxch
add
pause
sub
xchg
mov
sbb
pop
dec
and
aas
aam
pop
stos
cmp
adc
ret
or
xlat
fstl
aad
mov
push
aas
in
out
push
addr16
dec
xor
jecxz
cmpsb
xor
xor
adc
cwtl
push
mov
dec
pop
je
pop
repz
mov
fistpl
into
mov
lock
or
fisubs
cmp
and
adc
rcrb
testb
std
jbe
push
dec
sub
mov
dec
frstor
les
cmp
sbb
adc
mov
xchg
mov
shrb
sub
sbb
rcl
scas
ret
pop
scas
inc
fnstcw
insl
rcrl
fwait
xchg
jmp
loop
popa
in
das
stc
lods
icebp
outsb
sub
sti
and
cmp
jb
sysenter
add
test
xchg
mov
pop
repz
test
sub
sbb
daa
dec
pop
repnz
ds
jae
sub
xlat
rorb
xchg
sbb
xor
ljmp
bound
xor
sbb
xor
xchg
insl
inc
pop
filds
dec
dec
cld
aaa
movsb
inc
xchg
cmp
or
or
fwait
inc
sub
test
xor
xchg
jns
daa
xchg
sub
int3
pusha
jns
push
in
in
xor
xchg
xchg
fistpll
mov
inc
addr16
adc
mov
and
mov
flds
mov
pusha
and
xchg
lds
jmp
mov
loopne
out
inc
cs
push
cmpsb
and
testl
and
shrl
in
mov
jnp
push
jle
sarl
jle
adc
jne
iret
sub
ret
cmp
out
lock
stos
sbb
jae
lods
repz
insb
or
popf
std
fstl
push
lcall
push
sbb
shlb
imul
scas
shlb
push
dec
cli
rolb
or
inc
inc
imul
add
pop
arpl
clc
mov
mov
inc
or
scas
add
sub
adc
popf
mov
int3
popa
lds
xor
xor
lds
xchg
lock
ret
aas
scas
imul
xchg
lds
mov
aas
push
jp
cmc
jbe
jne
jge
lahf
pop
enter
daa
xlat
shl
cmp
frstor
jno
or
jl
sbb
push
add
mov
iret
lods
sbb
cmpb
rclb
mov
cmpsb
lcall
js
jae
pop
or
push
xchg
push
testl
sub
movsl
lret
shlb
mov
and
aad
cmp
in
cmp
ss
daa
cld
lcall
mov
lcall
aam
dec
in
sub
cwtl
outsb
or
mov
push
outsl
jg
lods
inc
mov
shll
out
mov
sbb
push
push
jle
int
jle
fdivrs
mov
jne
gs
xchg
mov
jo
pop
push
dec
sahf
jns
sub
mov
mov
loop
dec
sub
mov
outsl
jno
scas
add
fnstsw
outsb
cmp
xor
out
das
xor
push
xchg
xor
push
scas
cmp
mov
push
into
fstl
cmc
int
insl
loopne
push
jp
aaa
call
imul
mov
data16
lods
mov
ljmp
pop
mov
mov
mov
sub
gs
cmp
nop
mov
outsb
dec
fndisi(8087
pop
inc
jbe
flds
sub
fdivp
pop
rorl
into
mov
fldlg2
xlat
mov
push
aaa
adc
mov
mov
subb
outsb
jmp
inc
nop
fidivrl
adcl
jno
adc
jmp
or
sahf
lcall
gs
outsl
cwtl
or
in
mov
ljmp
push
hlt
xchg
fcmovnb
addr16
xlat
jg
push
push
mov
das
das
or
mov
stc
push
sub
and
adc
dec
shll
cmpsl
jecxz
mov
and
jmp
lret
mov
mov
shrb
fcmovne
rcrb
bnd
sub
add
aam
add
call
push
iret
insl
mov
lret
sub
ljmp
xor
mov
push
scas
mov
pop
add
mov
fwait
jbe
cltd
jo
aad
xchg
push
mov
repz
fnstsw
jecxz
test
mov
xchg
or
push
sbb
pop
popf
and
stos
insb
out
cmp
xchg
pusha
outsl
add
jb
dec
mov
xor
inc
or
scas
jbe
inc
or
xchg
dec
lahf
mov
ja
call
inc
cs
jg
jae
xchg
push
dec
loopne
add
loop
iret
out
push
lds
bound
stos
jns
sbb
in
add
xchg
aad
jo
jle
xchg
mov
mov
in
ss
jp
cwtl
push
mov
push
cmpb
sbb
imul
or
pusha
bound
ffreep
lea
jmp
outsb
js
subl
sub
pop
shll
cwtl
out
stos
adc
cltd
and
sarl
je
jle
xchg
adc
mov
iret
mov
ret
lret
pop
push
add
mov
ret
jae
data16
push
das
scas
lret
popf
and
xchg
push
jle
imul
jl
adc
std
imul
mov
xor
push
push
xchg
sub
sbb
jle
lcall
hlt
dec
mov
arpl
mov
mov
clc
or
imul
or
pop
add
ror
dec
sbb
pop
pop
iret
test
lds
mov
stos
and
or
dec
mov
movsb
ds
cmp
push
ljmp
push
push
daa
push
and
adc
call
dec
inc
mov
xor
sub
lahf
out
js
push
insl
orb
jecxz
push
xorl
mov
js
vmovhps
pop
push
cmp
loope
sbb
cmp
pushf
aad
mov
inc
movsl
roll
rorb
push
pop
addb
movsb
ljmp
sbb
mov
ljmp
pop
dec
add
push
xchg
push
pop
ds
lcall
or
jb
in
sub
add
adc
add
inc
jg
js
mov
sub
popa
dec
mov
and
cmp
push
fnstsw
ja
mov
lret
xadd
mov
push
ds
sbb
fiadds
adc
icebp
outsl
jbe
mov
scas
sub
fs
in
in
adc
cmc
mov
and
push
cmp
sub
xchg
and
inc
push
fnstenv
in
xchg
cmp
sbb
or
jge
cmc
xchg
int3
add
das
iret
scas
pop
push
je
adc
pop
xor
ja
add
dec
in
pop
jnp
lods
xchg
inc
cmp
scas
xlat
aaa
xchg
fsubrl
iret
inc
addr16
pop
in
or
push
sti
cmp
pop
test
nop
arpl
iret
dec
cmp
sbb
cmp
jnp
mov
popf
pop
xchg
adc
sub
push
and
cmp
adc
jbe
cmp
jno
cs
lods
aad
andb
popf
daa
aas
and
les
inc
dec
pop
mov
stc
jecxz
rol
fisttps
cwtl
dec
bound
add
lea
fcomi
rcrb
aad
inc
fsubrl
lock
add
mov
test
pop
and
pusha
jbe
jo
insl
not
mov
jbe
int3
sub
cmpsl
aad
jno
scas
xlat
xchg
icebp
cli
sbb
lret
sti
mov
push
mov
xchg
aas
sbb
xchg
push
sub
sub
aam
jg
ret
ja
cmpsb
fbld
sbb
jge
clc
gs
xchg
addr16
ljmp
push
lods
leave
mov
mov
push
popf
mov
stos
fisttpl
repnz
roll
scas
sub
cltd
cmpsl
leave
mov
mov
out
lock
popa
xor
frstor
pop
test
shlb
sbb
pop
sbb
ljmp
in
xchg
cmpsl
cmc
push
add
decl
xor
popa
pop
xor
cltd
sbb
push
pop
dec
push
mov
pop
push
mov
loop
les
bound
or
cltd
jmp
mov
lcall
cmp
cli
or
jns
mov
xchg
and
and
mov
test
xor
ret
xor
push
push
sbb
sub
dec
xor
adc
xchg
data16
fwait
sub
repz
fiaddl
lahf
popf
shrb
xchg
stos
push
xlat
pop
imull
add
jnp
push
mov
aas
dec
in
mov
iret
jmp
jns
pop
push
and
inc
shrb
jae
rcll
enter
pop
push
std
jg
fisubrl
xchg
xchg
ror
negb
add
imul
in
f2xm1
jno
mov
or
in
es
pop
add
arpl
or
addb
aaa
cmpsl
fists
dec
pop
add
imul
pop
mov
sbb
mov
sub
pop
mov
jbe
std
sbb
std
jle
cmp
push
push
sbb
jbe
or
cwtl
sbb
leave
jmp
in
dec
fidivl
out
lods
jl
cmp
dec
mov
stos
push
lret
mov
xor
les
lahf
or
mov
test
dec
pop
xor
xchg
cmpsb
mov
in
js
lods
adc
xchg
adc
and
les
pushf
ja
roll
int
out
jecxz
and
sub
sbb
out
and
xor
sbb
pop
jne
in
sub
js
pop
mov
adc
mov
lods
sub
std
outsb
iret
lds
cmp
mov
ret
fcomps
mov
in
repnz
roll
pop
mov
int
jge
fdivs
imul
fnstsw
rcll
push
mov
loop
sbb
push
enter
jo
imul
push
push
gs
inc
jmp
adc
adc
arpl
sarb
sub
out
ja
cli
je
dec
xor
clc
or
out
enter
lret
cmc
pop
sbb
loopne
fwait
and
jne
or
push
jmp
icebp
adc
mov
add
sbb
lods
outsb
test
cmp
inc
int
inc
nop
xor
ja
jl
jnp
push
gs
scas
push
ds
jmp
cltd
mov
pushf
sub
or
lds
repz
mov
xchg
sbb
iret
icebp
mov
mov
rcll
jg
rcrb
loopne
dec
jo
aad
jns
inc
in
jmp
shll
rcll
inc
pmuludq
mov
cmpps
mov
xchg
mov
repz
xchg
push
test
ljmp
sbb
arpl
jmp
popa
sbb
das
in
jne
mov
pop
adc
stc
sarl
cli
inc
std
imul
mov
aam
sti
mov
shl
outsl
cld
inc
lret
push
fmull
sub
pop
sbb
loope
sub
hlt
inc
aam
push
push
ret
push
icebp
and
bound
sar
mov
leave
and
popa
xor
pusha
mov
fs
aad
push
push
add
sbbb
pop
movsb
mov
pop
mov
fisttpll
test
xchg
xor
nop
shll
or
out
add
xchg
out
xchg
cmp
xor
or
lock
pop
in
dec
insl
imul
outsl
pop
ja
rorl
inc
pop
sub
or
pop
sti
fwait
sarl
icebp
push
xchg
dec
addb
adc
bound
cwtl
mov
xchg
jae
loop
add
nop
mov
cmpsb
mov
addr16
inc
jp
mov
sub
lock
mov
movsb
mov
adc
movsl
mulb
jmp
repnz
ds
adc
ljmp
or
gs
stc
pop
sub
iret
jmp
pop
stos
sti
xlat
shll
xchg
mov
jnp
mov
jle
in
jle
std
sub
lods
clc
xchg
dec
cld
out
ret
ficomps
out
inc
lret
das
movsb
jae
cmpsb
xor
popf
jb
loopne
out
in
inc
jl
mov
sbb
push
xchg
sub
add
xlat
mov
scas
stc
call
rcl
mov
repnz
call
mov
in
lods
arpl
inc
mov
sbb
fimuls
aaa
dec
hlt
or
push
dec
add
into
int3
and
adc
push
ficomps
mov
cmpsb
loop
jo
out
shrl
nop
sti
inc
cmp
pop
in
jcxz
jbe
test
les
aad
aam
xor
jnp
and
push
xchg
jl
or
dec
and
cwtl
xor
pop
mov
sub
call
sbb
test
pop
pop
lea
sub
cmpsb
and
fsubr
jnp
inc
js
es
cmpsb
xor
movsb
pop
loope
mov
push
cmp
xchg
imulb
movsl
dec
rol
lret
cmpsl
popl
mov
dec
add
jbe
xor
repnz
test
pushf
mov
xor
cmp
and
loopne
daa
fmul
insl
fildll
cmp
xor
cmp
test
dec
or
mov
push
sub
push
negl
mov
xchg
call
lret
sub
cmpsl
mov
push
sbb
aas
movsl
sahf
bound
test
int3
xor
imul
loop
mov
fs
loope
adc
movsl
push
cmp
and
mov
mov
xor
push
lock
push
into
xchg
ljmp
cwtl
movsl
adc
fimuls
out
mov
push
das
add
stc
imul
mov
cmp
or
mov
mov
mov
loop
or
xchg
dec
lret
ficomps
sbb
fwait
inc
scas
std
fldenv
icebp
sbb
xchg
xchg
shl
push
push
leave
call
cmp
mov
pop
jmp
xchg
adc
jmp
adc
adc
xlat
and
dec
xlat
aas
pusha
mov
dec
or
mov
cmp
fisttps
cmp
xchg
mov
out
daa
mov
push
cli
subl
mov
pop
stos
lods
cmp
ljmp
das
int3
mov
mov
push
mov
pusha
rorl
bnd
push
lods
out
std
adc
or
jle
cmpsl
sarl
or
test
push
cld
jo
push
lret
fnstenv
mov
push
arpl
cmp
popf
sarb
sub
bound
ret
xchg
cmp
es
sbb
out
push
clc
fistpl
xchg
in
icebp
ljmp
pop
lods
popf
je
mov
xchg
pop
and
mov
rorl
mov
cld
add
xor
cltd
adc
bound
push
out
repz
leave
movsb
xchg
sbb
cmpl
rorl
sbb
stc
stos
das
jmp
jge
xor
jecxz
jmp
cmpsl
repz
dec
or
ret
mov
icebp
push
xchg
loopne
aam
mov
ja
popf
jno
enter
repz
jae
pop
fwait
add
push
xor
push
add
repz
cmpsb
out
mov
and
jns
dec
arpl
sbb
lret
xchg
ret
mov
pop
cmp
mov
test
jp
xor
sub
loope
dec
clc
lods
ret
jne
mov
pusha
xor
and
fists
loope
jo
iret
scas
in
sbbl
out
enter
test
push
push
rcrb
and
les
jnp
mov
jno
add
das
adc
fisubrl
pop
ret
dec
mov
jae
sub
push
js
js
cltd
outsb
mov
sbb
inc
sti
je
fcmove
jl
xchg
sbbl
pop
scas
pop
push
icebp
push
stos
mov
mov
xchg
frstor
hlt
xor
mov
mov
and
sbb
xor
push
add
mov
int3
or
inc
pop
fdivrp
cli
cmc
lds
and
scas
mov
lods
je
jb
push
movsb
add
adc
jbe
jb
jge
and
enter
daa
shr
stc
cmp
mov
jl
mov
dec
xchg
inc
mov
xchg
int
xor
cli
mov
mov
test
loop
popl
pop
in
cmpsb
xchg
pop
in
bound
pop
js
xor
pop
add
push
and
inc
cmp
cli
js
sbb
out
and
popf
movsb
sbb
fists
sbb
and
xor
adc
dec
loopne
pop
ret
jo
sub
add
pop
mov
dec
xchg
push
aaa
movsb
jmp
jae
xor
daa
movsl
dec
outsb
xchg
cmp
adc
push
pop
mov
mov
xchg
jnp
pusha
add
mov
push
pop
mov
int
or
fsubrs
je
lret
cld
sarl
stc
mov
xchg
sbb
fcomi
sahf
add
sti
mov
and
and
jg
dec
fs
push
adc
addr16
ss
xchg
sub
mov
cmp
fiaddl
add
push
xchg
cmp
sub
int
fwait
into
imul
xchg
pop
mov
pop
adc
push
adc
call
ja
mov
mov
and
sub
hlt
aas
dec
sub
cmp
jecxz
dec
push
into
sti
inc
loopne
inc
stc
ret
mov
nop
hlt
std
pop
dec
push
dec
addr16
ret
inc
stos
fcomi
inc
repz
enter
stc
lods
sbb
lds
mov
cmp
sub
and
xchg
cs
inc
lahf
aad
cwtl
xchg
inc
cld
cltd
aas
jmp
pop
dec
test
fwait
je
pop
jecxz
adc
aas
lret
adc
add
push
mov
sbb
les
add
fstp
addl
pop
dec
xchg
jno
test
pop
xchg
das
stos
repz
mov
int
out
and
dec
pop
rcrl
push
negb
xor
dec
mov
pop
xchg
jg
cs
fwait
adc
lret
dec
or
mov
cmpl
inc
cmp
rorb
mov
mov
repz
and
push
push
xchg
clc
push
mov
xchg
and
mov
fs
mov
lods
or
out
mov
push
push
push
mov
rorb
les
dec
or
test
dec
push
push
stos
pop
pop
fst
pop
fsubrl
cli
jo
sbb
mov
shll
fcompl
pop
stos
push
rorb
xchg
jl
dec
add
lahf
push
inc
add
or
dec
add
jle
ljmp
fiadds
ja
in
cmpsb
dec
mov
sub
fwait
das
jb
push
xlat
adc
repz
mov
mov
out
xorb
pop
cmpsb
and
cmpsl
xchg
jmp
mov
mov
sbb
xor
jp
jl
mov
and
cmp
fldt
je
into
rcrb
filds
loope
in
fs
lcall
out
or
sub
inc
push
dec
push
xchg
shrb
and
fsubrs
cwtl
jnp
mov
jle
and
or
cmp
push
mov
into
pop
cli
pop
movsl
inc
loope
and
imul
push
cmp
mov
sbb
inc
jp
xchg
fiaddl
aas
push
sbb
sbb
mov
scas
mov
sahf
stos
xchg
mov
out
jl
mov
mov
mov
shll
or
push
stos
jl
in
ss
xchg
lods
add
stos
or
lock
lahf
dec
cltd
lds
sub
lcall
cmp
out
movsb
push
or
test
mov
cld
mov
mov
subb
loope
jl
imul
jl
sub
add
daa
xor
xchg
std
jbe
push
xlat
push
mov
fwait
aas
push
lods
push
ljmp
mov
in
dec
cmp
mov
adc
inc
gs
fildll
loope
mov
movsl
cmp
push
jo
in
loopne
sarb
icebp
testb
call
pop
cmp
or
rcrb
pop
jg
inc
cmpsl
test
cmp
bound
int
fcompl
call
jo
outsb
clc
xchg
sbb
jo
fdivrl
iret
jns
pop
leave
or
cs
and
loope
int
test
push
divl
mov
rcl
mov
sbb
out
sahf
test
movsb
test
hlt
jmp
loop
mov
fsubl
sbb
cmp
ss
outsl
cmp
sbb
mov
and
xor
and
fdiv
or
cmpsl
cmc
mov
or
fwait
jns
pop
ror
and
imul
addr16
add
mov
pushw
jp
and
aas
cmp
xlat
xor
or
mov
aaa
jp
in
hlt
gs
cmp
mov
mov
fsts
dec
lahf
repz
mov
sbb
inc
iret
sti
cmp
push
pop
fdivrl
pushf
jmp
leave
adc
jno
lret
aad
mov
jecxz
sahf
mov
xor
push
add
jmp
push
xchg
lea
pop
cwtl
mov
jb
ret
iret
mov
rorl
sbbl
mov
mov
sbb
push
cmovne
lahf
xchg
jb
push
das
mov
adc
test
shrl
push
pusha
jg
dec
mov
pop
gs
push
dec
jnp
hlt
mov
mov
outsl
mov
adc
adc
jp
adc
add
sub
ret
mov
adc
jmp
mov
icebp
cmc
clc
push
lahf
ret
out
ljmp
mov
cmp
mov
jno
add
movntdq
outsb
sub
cltd
adcl
test
mov
push
insl
mov
dec
test
adc
xchg
jg
jmp
outsl
rcrb
stos
or
jnp
xchg
ret
xchg
cs
outsl
gs
xor
add
mov
xor
xchg
xchg
jns
mov
outsl
ja
rcrl
scas
sbb
inc
and
or
test
mov
jp
xor
test
cli
fisubl
xchg
adc
jns
pusha
xchg
mov
pop
lret
mov
xchg
jbe
xor
daa
js
mov
lds
mov
orb
cmpsl
jne
jns
pusha
imul
xchg
mov
insl
jmp
and
out
ret
sub
andb
rcll
push
ja
and
insb
outsb
jb
jnp
insl
xor
in
pop
push
adc
mov
xor
push
addl
or
cmpsl
pop
popf
out
sbb
sub
inc
stc
jns
fidivl
add
sbb
push
ds
lds
cmc
cmc
push
shlb
mov
cmp
negl
arpl
pop
inc
les
or
adc
sub
mov
jmp
xor
jecxz
mov
fiadds
movsl
lds
mov
jo
int
scas
jns
dec
and
in
cmp
or
movsb
cmc
ds
push
cmp
xor
in
mov
nop
daa
rcll
xchg
jecxz
jl
jne
dec
outsl
lock
push
push
mov
xor
xor
lahf
mov
test
js
dec
inc
jnp
jo
lods
dec
sub
xor
mov
pop
orl
loope
add
cmp
pop
in
movsl
hlt
sbbb
popf
pop
pop
addb
sub
pop
push
int
dec
jl
xor
mov
pop
pop
adc
xor
mov
push
jmp
fmul
add
cld
outsb
pop
loopne
adc
mov
jg
scas
lcall
cmc
mov
jns
and
test
aad
or
push
xchg
push
divl
addr16
push
shrl
mov
pop
sbbl
xlat
push
pop
outsl
rcrl
loop
lahf
fwait
stc
in
sahf
scas
fs
inc
mov
outsl
and
cmp
adc
outsb
out
aaa
arpl
inc
stc
xor
arpl
cmp
pop
popa
or
xchg
dec
cmc
ja
sub
ss
inc
pop
icebp
insb
jmp
imul
hlt
inc
add
sub
cmp
dec
push
mov
lock
and
sahf
sti
mov
or
gs
inc
xchg
nop
stos
cmc
je
adc
movsl
and
dec
movsb
cmp
repz
icebp
xchg
ffreep
push
sbb
mov
lods
xchg
pop
pushf
xchg
enter
dec
cwtl
cs
xor
inc
xor
arpl
cmp
ljmpw
je
clc
add
clc
out
movb
iret
push
insl
inc
sahf
mov
push
dec
mov
ja
xor
int
fndisi(8087
in
pop
xchg
adc
jmp
int
das
imul
in
and
in
sar
scas
cmp
pop
jg
std
pop
mov
dec
mov
arpl
lods
pop
jmp
cld
icebp
stos
into
lret
es
mov
dec
mov
or
mov
cltd
std
mov
cmc
and
sub
in
ret
inc
stos
std
outsb
and
and
in
clc
mov
cmp
dec
inc
popf
popa
lea
cmp
mov
and
inc
sbb
bswap
xchg
inc
add
mov
int3
mov
mov
frstor
xchg
test
adc
clc
mov
iret
rcll
iret
xor
push
stos
cld
out
inc
out
mov
add
sbb
add
insl
xor
xchg
or
mov
lahf
adc
mov
mov
outsl
pop
cld
rcl
rcrb
mov
inc
mov
jg
fwait
lea
pushf
add
add
stos
out
inc
inc
std
xlat
add
mov
xchg
scas
out
dec
mov
test
mov
xchg
mov
jp
daa
mov
pushf
sub
dec
mov
mov
pusha
add
cmp
sbbb
xchg
mov
dec
jmp
xor
push
addl
das
out
out
cmp
mov
pop
in
stos
imul
jnp
ljmp
sbb
or
lea
ret
sbb
arpl
inc
testl
adc
push
js
adc
call
in
test
jne
imul
call
push
cmp
fadd
aas
call
ret
repnz
cmp
lods
into
sti
hlt
adc
inc
and
or
lret
lds
or
cs
int3
into
insl
jg
jns
xlat
fsubp
rorl
ret
jo
aas
in
scas
pop
lods
and
cmc
xchg
cmp
fisubs
jbe
bnd
fistpl
enter
daa
shrb
mov
inc
pop
adc
mov
jl
xchg
insl
dec
fsubrp
int3
push
cmp
xor
shll
rcr
test
mov
pop
ret
lods
test
inc
xchg
push
cmpsb
das
push
fsubr
pop
jmp
in
pop
ret
push
ljmp
adc
lret
cmp
movsl
sti
mov
shrb
cmpsl
jnp
cld
enter
rol
sbb
nop
add
es
xor
imul
cmp
mov
cmp
sbbl
mov
je
int
hlt
push
mov
mov
out
pushf
andb
push
add
sbb
les
dec
and
scas
int
nop
lret
fcomp
adc
divl
mov
lret
mov
mov
inc
pushf
sahf
out
cmpsb
add
xor
iret
lret
stos
loop
mov
das
cmpl
ss
adc
scas
mov
cli
jae
outsl
xor
cmp
or
pusha
push
into
adc
cmc
jne,pt
loopne
push
pop
adc
lcall
cmp
adc
sub
dec
jg
data16
push
lods
icebp
data16
fsts
xlat
mov
movsb
sub
outsb
cld
in
mov
add
gs
lea
add
inc
sti
inc
ret
dec
cli
cld
cmc
popf
repz
xchg
mov
pop
adc
ss
jnp
aaa
mov
bound
xor
pushf
aas
pop
and
dec
lea
aaa
and
aad
xor
inc
dec
movsb
lret
aas
faddl
cld
jb
adc
je
les
dec
lret
and
sub
mov
roll
mov
cmp
les
mov
pop
aaa
lret
in
push
adc
sub
mov
dec
into
dec
mov
repnz
andb
mov
dec
lret
xchg
mulb
dec
std
scas
in
scas
adc
mov
add
push
cld
sbb
das
lret
xchg
push
mov
inc
push
mov
gs
bound
enter
mov
pop
xor
roll
sbb
icebp
jecxz
insl
or
in
loope
cmpsb
ljmp
imul
pop
mull
sbb
popf
cvttps2pi
out
add
scas
add
fistpll
mov
fisttpll
das
test
cmpsl
add
sbb
pop
shll
popf
pop
dec
popf
inc
stos
jmp
mov
out
std
mov
xor
adc
mov
je
or
xor
ljmp
xchg
pop
dec
jo
push
mov
fdivl
hlt
jge
xchg
pop
pop
inc
dec
cmp
pop
sub
fwait
mov
incb
mov
mov
shlb
bound
mov
mov
cmc
stos
xchg
pushf
insl
mov
and
dec
or
sbbb
mov
mov
jno
mov
push
jg
dec
test
and
andl
inc
xchg
pop
scas
sub
mov
out
adcl
pop
sub
idivb
popf
push
push
jmp
mov
mov
movsb
insb
inc
cmpsl
sub
sub
jle
lcall
repz
iret
and
test
mov
inc
add
adcb
shr
popf
xor
mov
ficompl
clc
ljmp
fdivrs
call
rol
rcrb
mov
fistpll
ret
hlt
pop
mov
arpl
push
fmull
xchg
call
or
cmc
ror
mov
xchg
cmpsb
fimuls
mov
scas
aaa
mov
and
sbb
dec
inc
aam
or
cltd
push
bnd
jbe
scas
or
enter
daa
iret
dec
xchg
cmp
dec
jno
mov
jmp
push
sbb
idivl
inc
stos
lahf
jbe
push
xor
mov
push
push
aaa
in
inc
cltd
imul
in
xchg
dec
js
xor
je
idivl
loope
repnz
xor
cmp
dec
push
movsl
add
rcl
rclb
subb
sbb
and
xor
jl
pop
and
pop
pop
mov
push
lcall
inc
fcompl
popl
outsb
and
adc
shr
jg
jns
mov
movsb
stc
mov
inc
lcall
es
cltd
fcoms
in
or
movsb
push
mov
das
sahf
xchg
xchg
sbb
xor
cli
loop
mov
mov
pop
sub
fs
test
adc
or
sarb
or
imul
scas
lahf
cli
cmpsb
mov
lcall
pop
into
cmc
inc
mov
loopne
or
adc
jnp
mov
or
add
lret
repz
cmp
inc
xlat
lock
add
hlt
push
jge
adc
sbb
decb
test
and
or
shl
outsb
inc
push
sbb
les
dec
movsb
repz
syscall
xchg
gs
mov
jge
mov
rcrb
sti
inc
adc
mov
jbe
lcall
inc
push
sub
jb
icebp
ret
dec
pusha
mov
jecxz
lret
jmp
dec
mov
lea
push
stos
icebp
mov
and
sbb
mov
pop
fidivl
loop
lock
daa
pop
xchg
mov
test
lret
call
mulb
mov
test
mov
push
cld
inc
xchg
jb
add
cmp
xlat
and
mov
adc
xlat
lret
aas
rcrb
and
aam
lods
ret
pusha
mov
pusha
insl
repnz
add
jo
and
es
mov
sbb
stos
mov
xchg
mov
mov
add
iret
xchg
cltd
sub
xchg
test
bound
imul
push
mov
into
fnsave
test
notb
les
add
lcall
mov
stos
ficompl
inc
xchg
cwtl
sub
inc
pop
xor
pusha
movsl
or
call
mov
insb
mov
dec
xlat
jae
pop
jb
aas
ja
push
dec
dec
xchg
cmc
inc
out
inc
or
cmpsl
dec
fwait
jmp
adc
arpl
add
mov
jecxz
std
mov
mov
xchg
dec
mov
xchg
cmp
or
inc
sub
mov
and
bnd
mov
nop
icebp
dec
sub
sarl
cmp
jl
xor
aas
jmp
movb
and
outsl
out
mov
mov
xor
mov
and
cli
jnp
xor
pop
ljmp
in
or
adc
sbb
iret
subb
xchg
aaa
inc
pop
stc
das
inc
or
lds
popf
pop
lods
xchg
push
jbe
jns
dec
jns
xchg
xor
sbb
cmp
push
push
lret
shlb
mov
xor
hlt
cmpsl
aam
arpl
repnz
or
inc
xor
loopne
stc
or
sub
movsb
jg
pop
xlat
push
and
sub
fidivl
pusha
xchg
scas
push
or
cmp
sbb
push
inc
cmc
add
loopne
jge
dec
loopne
cmpsb
sub
daa
into
in
lret
cmp
mov
jl
push
mov
push
add
and
aam
lahf
out
adc
test
fldcw
mov
test
cmpsb
xor
es
pop
inc
adc
push
lds
mov
inc
cmp
sbb
enter
or
out
in
mov
adc
sbb
cmp
xor
dec
pop
mov
pop
xchg
cs
push
pop
ss
rcrl
ficompl
lret
sub
inc
xchg
outsb
test
xor
xchg
xlat
mov
stos
add
pop
movsb
xchg
and
scas
inc
push
outsb
and
in
dec
enter
jne
lret
shll
lahf
mov
aam
add
sahf
xor
mov
xor
stc
inc
outsl
outsb
dec
loop
mov
adc
fs
mov
divl
cmp
lock
xor
fnstenv
and
popf
push
sarl
aad
or
andb
or
cmc
int3
and
loopne
cmp
adcb
fistps
sub
pop
add
data16
insl
lods
mov
jmp
xlat
das
mov
sub
mov
fs
push
sti
mov
jmp
jo
in
sub
nop
cmp
add
jmp
pop
fyl2x
test
repz
or
xchg
sub
out
sbb
sub
inc
xor
and
loopne
int3
pushf
xchg
repz
jmp
popa
scas
cs
js
aad
cmp
inc
addl
sbb
jb
add
dec
xlat
push
jge
dec
pop
lods
jecxz
and
dec
femms
lea
jae
sahf
push
mov
xorl
stc
stos
pop
jge
inc
inc
adc
iret
lock
or
push
je
mov
pusha
pop
push
and
mov
lcall
cltd
sub
movsb
push
mov
inc
sbb
icebp
mov
mov
lret
jae
icebp
mov
fmul
mov
inc
hlt
mov
idivb
jnp
outsb
mov
sub
inc
xchg
ret
out
xorb
fldenv
xchg
pop
pushf
mov
popa
shlb
lods
pop
push
sub
pop
pop
out
and
shlb
mov
inc
and
cltd
pop
fwait
add
in
push
jns
mov
cltd
xor
out
jne
test
mov
mov
adc
mov
gs
mov
push
xchg
fbstp
add
push
jmp
cld
xor
xor
aad
repnz
mov
mov
outsl
jo
dec
ds
lcall
cmp
dec
jp
cmp
lahf
int
cmc
clc
adc
push
rorb
xchg
or
adc
cmp
bound
std
jl
pop
cs
pushf
ret
mov
fld
ds
cmpl
addr16
insb
pop
mov
lods
into
mov
das
or
in
scas
jne
or
pusha
aad
cmpsl
pushf
notl
stos
popf
repnz
xchg
cli
dec
xorl
test
insb
outsb
or
stos
and
and
sub
jnp
cld
lret
jle
pop
lahf
in
gs
out
iret
loope
and
stos
ftst
pop
or
andl
or
mov
cmp
push
cmc
mov
fiaddl
sti
sbb
jmp
fldt
jo
scas
scas
es
adc
jle
nop
adc
repnz
int
adc
mulb
enter
or
or
cld
les
or
out
jno
popl
pop
push
sarl
fmulp
cmp
lds
or
mov
cmp
xchg
adc
mov
mov
push
nop
mov
sarb
popf
int3
enter
daa
int
sbb
loopne
xchg
out
xor
inc
dec
sub
push
jecxz
cmc
xor
pushf
jnp
lahf
add
mov
lea
in
inc
mov
iret
cmpsb
mov
fwait
sahf
js
lods
cmp
push
shlb
je
sub
mov
sarb
jmp
xor
mov
and
orb
sbb
and
add
sbb
xor
lds
fimull
add
push
jge
test
xchg
mov
inc
mov
push
sub
loop
outsb
out
dec
adc
imull
pop
jg
push
push
mov
in
mov
push
out
and
jns
push
jno
sbb
jno
sbb
or
int3
imull
jl
repz
das
jl
push
pop
sbb
xchg
sbbl
inc
lods
jno
dec
cmpsb
daa
loop
cmp
sub
push
ss
sbb
add
out
aaa
jb
or
sub
je
dec
cmp
cmpsb
aaa
or
dec
into
mov
xor
mov
adc
mov
adc
jae
add
sub
sub
cmp
mov
mov
iret
jno
sti
pop
push
xchg
mov
adc
push
aad
dec
xchg
loope
inc
xor
cmp
sub
cmp
sbb
dec
xor
pop
push
call
mov
xchg
pop
pop
pushl
aaa
xor
cmc
jmp
icebp
stos
cs
xchg
or
xor
fildl
xor
sbb
dec
dec
dec
in
pop
je
and
push
fistpll
cwtl
pop
inc
mov
nop
cmp
orl
je
popf
fwait
lods
and
cmp
xor
mov
add
mov
xchg
std
mov
push
into
cmpsl
int3
mov
mov
mov
cld
popf
lret
popa
lret
loop
dec
mov
adc
js
jmp
stos
out
rolb
push
sub
mov
or
jp
mov
or
js
icebp
xchg
sahf
adc
ljmp
ja
mov
mov
jl
sbb
xchg
xchg
fcoms
or
mov
pop
lods
dec
cltd
xchg
xlat
mov
mov
ss
push
cmp
call
test
fisttps
push
mov
pop
dec
arpl
mov
push
sldt
outsb
cmp
or
xor
nop
mov
jb
mov
pop
call
lahf
xlat
dec
insl
das
and
mov
loopne
add
test
sti
xor
mov
or
jns
cs
dec
cli
xchg
jmp
mov
sbb
add
jle
ss
es
aas
mov
add
dec
push
mov
dec
sub
stos
or
outsb
push
xchg
add
mov
add
out
and
adc
push
cmpsb
inc
stos
xchg
cmp
insb
test
jnp
mov
movsl
movsl
es
and
iret
inc
pop
sahf
ret
lret
pop
inc
and
and
dec
jae
inc
fsts
int
popf
stos
xor
jecxz
je
push
fidivl
mov
push
ja
xchg
loop
scas
adc
mov
shrb
xlat
repnz
leave
mov
arpl
cmp
pop
shll
in
mov
or
and
int3
jp
ljmp
dec
cltd
fwait
jo
shlb
and
xor
movsb
lods
movsb
aas
push
ffreep
push
jbe
lahf
push
enter
daa
int3
mov
jmp
jne
mov
jle
lcall
xor
aaa
aaa
stos
lahf
and
jp
stos
stos
mov
add
push
outsl
adc
inc
inc
icebp
add
mov
bound
enter
add
push
jo
loope
imul
ret
fwait
jbe
push
pcmpeqw
lcall
andb
sbb
mov
add
push
leave
xor
aaa
mov
popf
rolb
aam
aad
and
mov
xor
pop
lcall
mov
sub
scas
jnp
lret
adcb
push
jg
dec
inc
mov
push
inc
mov
mov
push
and
mov
push
je
mov
fmuls
scas
imull
enter
stos
adc
mov
sahf
jp
inc
test
cmp
xor
add
loop
daa
pop
stc
add
fs
aad
adc
adc
ss
sarb
sti
stos
xchg
out
shrl
das
xor
jne
pop
dec
es
mov
into
sahf
js
cmc
pop
pusha
loopne
push
sub
leave
pop
adc
aam
imul
inc
lahf
data16
dec
lods
lea
cmp
aad
xlat
lods
jecxz
sub
lcall
pop
and
mov
andb
test
dec
lock
inc
inc
into
cmp
pop
push
lret
les
cmp
repz
iret
dec
xchg
scas
ss
sbb
and
into
xor
mov
sbb
mov
xor
cs
mov
xchg
inc
mov
mov
pop
dec
lds
add
inc
lahf
push
push
and
rolb
adc
cmp
out
mov
in
popa
dec
jo
rcr
test
inc
and
push
das
les
outsb
mov
into
push
add
roll
xchg
push
std
dec
ljmp
cmpsl
lret
and
mov
pusha
iret
cld
enter
push
imul
mov
push
mov
mov
mov
xor
rclb
fsubrs
jl
pop
aam
jg
ret
or
jne
insl
cmpsl
push
mov
inc
xchg
fisttpll
arpl
mov
je
add
lods
cmc
aas
iret
mov
lahf
outsl
add
mov
test
pop
add
cltd
int
sub
lret
jmp
push
fucom
adc
lds
xchg
and
sbb
rol
call
stos
cmpsl
mov
aas
xchg
insl
inc
xchg
add
in
xor
pop
inc
or
in
xor
ret
out
add
or
pop
pop
mov
mov
pusha
dec
aad
stos
xchg
pop
or
sbb
fwait
js
push
push
dec
push
add
lret
lahf
mov
bound
add
xchg
cmp
cmp
adc
or
sub
jp
pop
or
jae
dec
mov
dec
shlb
scas
ja
or
fistps
add
cwtl
jmp
daa
pop
daa
adc
sti
out
xchg
shrl
loop
aaa
push
dec
inc
sub
push
mov
and
fldt
in
data16
jle
out
in
inc
or
pop
mov
ds
sub
test
sbb
ljmp
rorl
push
repz
xor
sbb
sahf
pop
imul
xchg
push
lahf
xor
test
daa
jp
repnz
add
add
mov
lret
mov
inc
nop
sbb
jb
pop
aaa
sbb
stos
adc
mov
int3
gs
dec
pop
and
ficoms
or
gs
hlt
jo
cmpsl
scas
mov
cmp
cmp
les
adc
jbe
sub
jge
out
enter
daa
lret
out
cmp
mov
jl
mov
push
push
test
push
test
rolb
sub
jle
out
test
into
inc
aad
mov
in
lcall
pop
std
cmp
jp
or
out
cmp
cmc
xor
hlt
shlb
push
xlat
sbb
mov
add
fs
xor
out
aas
pusha
push
imul
jb
lahf
dec
and
lcall
loopne
lret
xchg
loop
lahf
insb
subl
jno
subb
mov
jle
add
frstpm(287
push
ja
fmul
aas
out
fadds
jb
lret
pushf
shl
mov
mov
nop
inc
negb
addr16
mov
stc
dec
pop
outsl
or
loop
inc
sbb
aaa
jmp
fs
loop
push
pop
cmp
imulb
out
iret
pop
cli
jb
mov
and
or
inc
cmc
fwait
into
sbbl
loopne
in
pop
stos
add
imul
mov
add
add
cld
sub
adc
mov
movsl
sbb
fldenv
ds
pop
xor
int3
mov
ss
pop
jb
fsts
repz
mov
call
mov
insl
pop
rcl
adc
insl
lcall
pop
mov
aad
mov
inc
aam
insb
aas
div
fidivs
jbe
dec
cmp
in
cs
xor
push
ret
rol
fisttpl
cwtl
iret
mov
jg
jbe
loopne
jl
dec
dec
pop
ja
icebp
lods
pop
mov
icebp
lock
pop
cwtl
das
mov
pushf
sbb
test
and
mov
rcl
push
repnz
xchg
dec
xchg
or
jmp
fildll
mov
aaa
pop
pop
cld
repz
sbb
rcrb
mov
add
pop
jne
push
cwtl
inc
shl
pop
add
aam
lcall
cmpb
test
xchg
sbb
inc
ljmp
jbe
pusha
repz
mov
ret
and
arpl
pop
pop
mov
cltd
add
roll
gs
ret
fisttpll
pop
std
test
ds
repnz
loop
into
pop
or
sbb
rcrl
add
fidivs
xchg
mov
xchg
add
pop
dec
xor
sub
cmp
xor
inc
dec
mov
js
adc
dec
or
push
add
sti
fisttpl
and
or
out
fwait
cmpsl
jmp
push
out
xchg
mov
test
bound
aaa
jns
jl
in
jns
xchg
mov
cs
adc
mov
je
fsubs
push
test
mov
jl
push
dec
repz
in
pusha
cmpsb
xchg
jne
cmp
addr16
jl
pop
jmp
repnz
sub
inc
js
sub
sbb
bound
jns
dec
and
fidivrl
pop
test
lahf
jle
sbb
in
enter
ret
mov
pop
bnd
cs
mov
add
cmp
jae
aam
push
push
cmpsl
pop
popf
clc
dec
in
pop
pushf
and
dec
push
ficompl
mov
pop
sbb
mov
mov
out
jnp
loope
xor
jle
insb
leave
ja
inc
hlt
roll
arpl
dec
int3
inc
flds
stos
or
sub
mov
xchg
dec
repnz
int3
push
xchg
fistps
icebp
nop
fidivs
std
mov
xchg
mov
and
cmp
movsb
ret
push
jge
xchg
jbe
sub
jp
xchg
js
daa
lret
cmp
xor
jno
jl
mov
mov
xor
insl
ljmp
push
push
pop
test
add
dec
pushf
cmpsb
inc
or
js
mov
or
ss
loope
mov
cmp
gs
lcall
rclb
fwait
mov
sbb
push
mov
vphadduwd
mov
ret
sub
xchg
push
pop
xor
lcall
ljmp
push
inc
outsb
adc
arpl
push
cmp
mov
lret
pop
mov
sub
mov
imul
push
jp
mov
fdivrs
and
imull
jo
rorl
xchg
sbb
jle
test
test
ljmp
lds
stc
out
mov
lds
adc
jo
cmp
icebp
ret
xlat
out
popa
das
cli
movsl
std
inc
xor
das
mov
or
movsl
cmc
call
mov
adc
fldt
sub
roll
inc
xor
lods
pop
cmpsb
adc
cmp
push
xlat
sub
sub
adc
and
sti
insb
test
cld
roll
nop
cmpsl
into
ds
scas
loop
inc
insl
dec
fxch
stos
aas
les
aam
repz
sub
mov
mov
pop
je
ja
cmp
sti
pushf
inc
sbb
cmp
aad
clc
mov
jp
aas
xchg
xor
test
jp
mov
insl
je
jb
jecxz
sub
pop
pop
add
mov
mov
cmc
mov
adcl
movsb
xchg
fldt
and
xor
dec
lock
dec
loope
sub
mov
cmp
out
or
cmc
shll
sbb
hlt
cltd
ja
cwtl
hlt
in
dec
nop
enter
adcb
push
adc
cld
push
sbb
mov
imul
jb
add
mov
ljmp
sub
imull
cwtl
fprem
sub
xchg
outsl
sbb
popa
cs
lods
lret
jp
mov
in
mov
test
xchg
orl
xchg
adcb
cmp
and
loopne
test
fnsave
dec
mov
addl
pop
dec
popf
xchg
stos
test
out
inc
rclw
rolb
pop
fcmovne
xor
push
xor
lods
and
mov
jnp
fs
sub
push
jno
or
add
stos
outsb
inc
fstps
sbbb
mov
add
cmpl
fdivl
loopne
lret
in
nop
fs
fadds
mov
push
mov
outsl
inc
out
sub
mov
aam
mov
jmp
nop
dec
jnp
jne
pusha
inc
lret
pop
jge
xchg
dec
sub
jmp
mov
dec
fs
iret
enter
nop
mov
lret
push
int
in
mov
popf
insb
and
dec
jle
inc
push
in
mov
adc
data16
ret
or
cmpsl
inc
inc
inc
jae
add
push
rcrl
mov
inc
icebp
sub
xor
xchg
lods
imul
scas
cmp
push
sub
aaa
cltd
mov
rcrl
hlt
push
xor
arpl
pop
mov
or
call
sarb
arpl
testb
nop
movsl
int3
cmp
jl
pop
and
jae
lret
lea
loope
loope
cwtl
dec
lods
movsb
dec
imul
push
mov
and
std
das
daa
leave
int
cmp
or
mov
out
fimuls
outsl
jle
xor
or
or
and
cmp
rcr
adc
fsub
cmpsb
les
mov
js
mov
jnp
dec
push
mov
loope
sub
sub
outsb
push
cmp
outsl
inc
ja,pt
fldenv
sub
xchg
sub
sbb
xor
pushf
xor
jb
out
xor
dec
insb
cmp
xchg
push
pop
mov
pop
lcall
inc
fsubl
or
outsb
jae
mov
lahf
sub
sub
cmp
mov
lock
mov
insb
lds
or
in
mov
or
stos
lcall
shlb
shll
mov
leave
sub
out
push
push
sahf
arpl
and
xor
sub
mov
movsl
and
fs
sbb
adc
jge
xchg
sbb
in
lods
jns
test
fsqrt
fdiv
cltd
xor
add
or
ror
inc
inc
leave
cmc
scas
sub
loopne
dec
mov
adc
lret
leave
imul
and
add
lods
inc
movsb
mov
xlat
push
sub
scas
xchg
in
jnp
cmpsb
sti
sbb
adc
pop
jne
gs
sub
nop
xor
dec
or
push
dec
flds
add
dec
pop
jl
mov
aam
negl
sbb
xchg
lahf
jl
mov
rcrl
jbe
adc
jne
jmp
fcomps
cs
test
inc
or
shlb
jo
dec
sub
adc
jo
stos
pop
cmpsl
jno
pop
stos
sahf
cwtl
inc
test
mov
dec
movsl
mov
subl
push
inc
pop
lods
jb
inc
mov
lock
push
fsubrl
popa
pop
repz
repz
cwtl
shll
push
divb
dec
cmp
aas
inc
ljmp
jns
mov
in
mov
lret
sahf
enter
andl
mov
xchg
xchg
mov
sub
gs
lret
int
mov
in
insl
pop
popl
fs
rclb
loop
stos
popa
inc
enter
pop
mov
or
and
sbb
pextrw
insl
test
cltd
jb
sub
sub
cmp
inc
and
push
dec
lahf
arpl
pop
popl
xchg
xchg
sbb
call
stos
je
out
out
movsb
dec
je
inc
fstpt
cld
pop
jge
lock
xor
dec
loope
adc
xacquire
mov
pop
aam
pop
ja
data16
out
inc
jo
push
fwait
add
roll
cmp
cmp
cmp
sub
push
push
sbbl
xchg
daa
lret
sub
pop
mov
push
pop
sub
repnz
cmp
movsb
mov
jmp
jne
push
stos
pusha
fcoml
daa
fistpll
mov
jmp
mov
cmpl
out
fwait
cmp
xchg
add
or
push
and
xor
jnp
push
shl
pop
adc
push
cmp
mov
adc
pop
and
push
jae
je
push
fldcw
mov
inc
testb
jo
dec
fiaddl
aas
adc
jae
imul
scas
popf
mov
push
je
aam
pop
add
repnz
into
leave
gs
clc
cmpsb
xchg
inc
filds
or
mov
imul
add
sub
es
push
pop
icebp
fnstenv
cli
dec
es
mov
pop
and
cmp
movsb
fsubrs
inc
jbe
mov
adc
ljmp
push
mov
shll
sbb
dec
push
dec
hlt
push
push
cmpl
and
cmp
not
mov
push
fwait
int3
scas
inc
xorb
in
dec
inc
mov
pop
mov
ss
push
mov
sub
mov
cmp
icebp
ds
rolb
push
daa
hlt
mov
subb
aas
add
inc
push
sub
jns
pop
jo
inc
sub
cmp
xor
lcall
imul
insb
jns
outsb
jl
adc
jle
es
aas
push
mov
adc
mov
dec
push
mov
les
sbb
int
andb
fdivs
adc
lret
push
sarl
sti
sbb
mov
mov
or
outsl
test
inc
loop
aad
stc
pop
aaa
inc
fldt
push
adc
jecxz
lret
cmp
out
pop
out
adc
or
cmp
sub
xchg
dec
dec
into
sub
adc
jbe
loopne
sbb
pop
or
repz
movsb
imul
jmp
dec
call
lods
sub
mov
sub
cmp
mov
out
pop
sti
lret
incb
jns
push
sub
nop
pop
cs
inc
xchg
xchg
mov
les
repz
sbb
push
lock
das
pushf
xor
aad
adc
push
jae
xchg
movsl
adc
cs
arpl
aad
scas
jbe
and
mov
and
jae
je
mull
jecxz
movl
lea
test
add
mov
daa
xor
dec
ret
inc
bound
fisttpl
enter
jg
lock
das
inc
lds
mov
stos
and
pusha
rol
cmp
add
out
dec
xchg
dec
cmpsl
hlt
push
mov
mov
push
fxch
or
jle
mov
inc
sti
mov
mov
pop
shlb
pop
sub
push
and
ret
dec
pop
les
or
insl
inc
push
clc
lahf
movsl
rcll
push
sbb
popa
pop
loope
lods
mov
scas
repz
mov
outsl
push
hlt
mov
add
mov
mov
push
or
fldl
and
outsl
adc
rcrl
jge
pop
mov
pop
stos
out
pop
sub
add
push
xor
xchg
or
iret
or
orl
pop
mov
mov
dec
sub
xchg
xor
rcrl
fsub
xchg
add
aaa
lods
jb
pop
xchg
loopne
add
inc
in
mov
or
imul
mov
lret
inc
in
addr16
lock
hlt
push
mov
shlb
leave
jp
dec
pushf
jnp
jne
mov
xor
xchg
cmc
cmc
dec
jmp
push
adc
lret
sub
into
fnstcw
stos
rclb
and
pushf
lcall
push
jae
in
scas
aaa
adc
push
imul
sbb
or
ss
pop
dec
fwait
jae
sub
popf
insl
mov
push
inc
out
addb
leave
xchg
xchg
imul
in
or
imul
repnz
add
lahf
shlb
lds
ja
daa
leave
fdivl
shll
cltd
inc
loop
push
or
pop
pop
nop
aaa
sbb
mov
or
push
xchg
pop
and
sub
mov
mov
scas
das
mov
loop
push
rcr
arpl
dec
push
push
pop
jbe
jmp
mov
add
daa
mov
pop
jno
aaa
mov
dec
lds
push
xor
gs
and
or
mov
test
or
adc
push
cmpsb
lret
in
ss
cmp
stc
pop
sub
imul
xlat
int3
push
cmp
sarl
ds
push
mov
push
inc
mov
inc
push
clc
add
in
xor
jno
insb
test
pop
xchg
dec
push
sub
stos
mov
shlb
fdivl
dec
sub
pop
outsb
cmp
adc
cltd
ror
jg
inc
sub
mov
mov
outsl
inc
and
rclb
push
or
int
xor
fsubrs
imul
push
loopne
movsl
mov
rcll
mov
pop
mov
sahf
test
inc
jb
test
outsl
xchg
inc
loop
ret
cmp
adc
lcall
pop
ret
or
add
push
mov
cmp
outsb
cli
ds
shll
jle
xor
fwait
push
into
or
push
mov
inc
add
daa
mov
adc
enter
int3
fstl
mov
add
in
or
ss
mov
inc
sub
aad
push
pop
jns
xchg
andb
mov
cmp
lret
pop
mov
fnstenv
aad
pop
mov
repz
pop
dec
xchg
jge
mov
add
call
scas
dec
inc
pop
jmp
iret
pushf
inc
test
push
cs
in
aad
pop
pop
inc
inc
je
aas
jae
outsb
jb
cmp
dec
sbb
pop
je
mov
jecxz
sti
jmp
aad
ficompl
clc
test
inc
stc
inc
sbb
and
pop
repnz
inc
lds
lock
mov
push
mov
popa
add
std
rcll
mov
or
lea
jno
repz
mov
xchg
or
repz
jl
pop
mov
outsl
loopne
mov
mov
iret
movsb
xlat
shlb
ja
sub
add
dec
dec
push
ret
fcoms
mov
dec
insl
sub
adc
xor
enter
jae
mov
or
fdivrs
dec
rol
and
iret
shrb
add
daa
jns
loopne
jns
inc
jae
mov
scas
aas
push
into
mov
in
cltd
xchg
and
sbb
inc
lock
dec
dec
sub
push
push
xchg
rorb
or
cmp
xchg
adc
lea
xchg
cmpsb
pop
dec
mov
dec
loop
dec
pop
jnp
inc
sahf
mulb
bound
fwait
arpl
mov
add
xchg
loop
out
testb
bound
xor
sub
jp
lds
dec
mov
pusha
push
inc
sarb
pop
stos
sbb
dec
in
mov
lods
mov
jne
cwtl
ret
fbstp
test
jmp
push
adc
aam
dec
mov
sub
or
push
mov
in
inc
mov
and
imul
mov
ja
pusha
in
cld
adc
xchg
dec
ret
mov
repz
std
jae
and
push
pop
jp
popf
xchg
lds
fimuls
outsb
repz
out
pushf
xchg
in
mov
inc
imul
scas
arpl
push
add
rorb
mov
lret
leave
push
jne
hlt
push
xchg
arpl
sets
push
jle
mov
sbb
jmp
aaa
fsubs
js
cmp
or
movsb
inc
dec
int3
cld
out
pop
dec
ror
fiadds
fcmovnb
or
jo
add
push
xor
lcall
movsb
out
and
loop
fistpll
or
add
daa
movb
jg
dec
jl
arpl
xor
jae
sbb
xor
flds
lahf
fimuls
push
popf
sbb
jbe
xor
cmpsb
dec
xchg
or
sbb
mov
push
push
jg
jle
mov
inc
mov
loopne
xchg
movsl
inc
inc
lock
out
adc
js
jl
push
add
outsb
xor
jl
das
add
fldt
push
imul
push
mov
neg
sub
xchg
outsb
pushf
sbb
je
cltd
xorb
mov
sub
xchg
mov
outsb
je
cmp
push
xchg
int
andb
daa
mov
movsl
lret
dec
shr
jp
xlat
adc
jnp
dec
sahf
dec
leave
roll
rol
outsl
data16
loop
in
stc
lret
fs
push
sbb
in
dec
dec
ss
jno
cmp
fucom
movsb
out
sarl
cli
jno
push
xor
xchg
cmp
mov
into
lock
jecxz
add
xchg
or
inc
push
lods
adc
dec
jecxz
test
mov
xchg
lods
div
ljmp
aad
sub
sbb
mov
or
decb
push
fwait
nop
adc
cmp
sbb
inc
mov
xadd
push
outsb
repz
jp
xchg
inc
pop
jae
sub
call
sub
mov
adc
adcb
movsl
push
cld
cs
cmc
roll
out
mov
jb
out
rorl
repnz
je
lret
repz
jae
data16
insl
lea
movsb
cwtl
jbe
pop
mov
push
inc
subl
push
mov
inc
dec
ret
mov
fldcw
stos
jb
arpl
push
shll
fdecstp
add
jns
xor
fwait
dec
jl
int3
cmpsl
lds
mov
push
loope
lret
lret
jmp
je
or
sti
mov
out
xor
rolb
rorl
inc
stos
cltd
aam
or
ret
addr16
lock
adc
pop
clc
adc
sub
popa
mov
lods
ja
or
mov
pop
mov
lds
adc
loop
fwait
add
sbb
cltd
pop
insl
insl
test
xor
xchg
jo
fst
push
in
test
dec
push
xchg
jbe
dec
lahf
add
int
inc
pop
clc
xlat
aas
stos
inc
push
jnp
int
repnz
pop
cli
jmp
fyl2xp1
ds
rcl
or
int
mov
xchg
negl
sbb
ja
out
dec
adc
popf
inc
xor
pop
das
fwait
xchg
stc
into
push
push
in
add
in
sub
out
aad
andl
das
jns
jae
in
xor
xchg
adc
push
mov
push
pop
mov
pop
mov
addr16
push
cmpsl
mov
cmp
mov
dec
mov
pusha
lods
pop
sub
xchg
fwait
sbb
arpl
fadds
iret
mov
sub
inc
dec
adc
stos
mov
inc
out
insb
jb
mov
jle
jno
in
cmp
sbb
fldenv
movsl
pop
lds
jo
daa
jae
popa
xor
popf
mov
and
in
out
ficompl
xor
imul
out
dec
test
mov
sbb
pop
out
hlt
dec
xor
test
or
lock
aaa
xchg
dec
xlat
or
mov
lret
int3
out
cwtl
pop
jle
mov
out
jae
xor
jo
push
subb
test
cmp
movsb
jns
mov
jbe
add
jge
and
enter
daa
cmp
inc
jno
lds
pusha
lahf
aam
mov
inc
scas
xor
je
test
jo
call
push
cld
mov
cmpsb
rcrb
push
js
scas
push
pop
ja
sub
in
loope,pt
sbb
imul
add
fwait
rclb
outsb
xchg
and
xchg
mov
mov
xor
clc
in
pop
in
inc
sub
shrl
push
stc
mov
fmul
in
sub
cmp
outsb
fadds
mov
push
jecxz
sub
mov
pop
out
dec
inc
and
bound
mov
jbe
loop
jb
pop
loopne
mov
roll
mov
stos
mov
lea
sbb
cmp
cmc
push
jno
and
addl
adc
push
cmp
fcomps
cwtl
cli
movsb
iret
mov
sub
loope
mov
sub
filds
cmc
lret
add
adc
gs
adc
push
adc
xor
pop
shll
aad
lods
fiadds
xchg
xlat
lretw
mov
mov
daa
cmc
aad
xlat
push
xchg
stos
mov
nop
out
push
cltd
dec
mov
inc
int3
mov
loopne
xchg
les
mov
xchg
add
in
jg
fwait
lods
xor
repz
adc
ja
pushf
cwtl
sub
jmp
add
js,pn
push
aad
cs
inc
jbe
jae
mov
aaa
jb
dec
push
test
je
xor
jecxz
das
inc
imul
mov
mov
adcl
repz
orl
das
frstor
push
mov
iret
mov
and
ja
scas
mov
testb
std
fldt
dec
ja
xstore-rng
cmpsl
les
mov
inc
mov
bswap
pop
push
lods
mov
sub
mov
or
pop
or
pop
pop
sub
push
add
negb
es
daa
push
insl
clc
push
ja
push
cmp
xchg
xchg
pop
mov
popa
mov
mov
mov
xchg
cmp
and
test
add
inc
loop
dec
leave
sub
dec
jp
push
sahf
in
clc
stos
mov
mov
int
sbb
enter
aas
push
stos
xor
insl
out
xor
xchg
pop
int3
ljmp
mov
or
push
xor
dec
push
mov
mov
dec
ffree
in
pop
sarb
ja
insl
lds
filds
int3
in
or
push
cld
fwait
shrl
add
dec
mov
out
mov
dec
bound
shl
inc
in
ficoml
xor
adc
push
xchg
adc
sbb
jp
xor
inc
mov
push
pop
dec
dec
inc
mov
mov
dec
repz
hlt
out
popf
xchg
outsb
stos
mov
pop
sbb
xchg
mov
imul
push
or
jg
outsl
push
push
clc
push
stos
sub
es
pusha
jnp
xchg
mov
sbb
adc
iret
cmp
dec
ret
test
pop
scas
inc
jnp
leave
jae
jecxz
push
in
sub
cmp
pusha
cli
fimull
xchg
lcall
imul
scas
sub
call
rolb
xchg
bnd
or
hlt
xchg
std
arpl
dec
inc
jmp
in
push
in
cli
xchg
aaa
push
hlt
mov
add
lds
int3
rorb
push
fimuls
fwait
addr16
mov
scas
int3
and
cmp
inc
movsb
add
out
push
push
test
jbe
mov
push
enter
daa
les
bound
inc
push
jl
scas
cmpsl
dec
adc
push
ficoms
xor
pmulhuw
lahf
sbb
ss
inc
cmp
test
mov
jbe
push
adc
in
jmp
stc
js
imul
push
cmp
loope
xor
sub
adc
cmp
sbb
es
movsl
dec
dec
xor
jb
decb
cli
lea
add
mov
xor
mov
pop
or
add
cld
dec
inc
pop
sub
jns
fstps
dec
push
push
aam
fdivrl
call
outsb
bound
mov
ljmp
mov
adc
shlb
push
push
mov
ljmp
add
lret
pop
rcll
mov
sbb
ror
sahf
xchg
cmpsb
stos
test
pop
icebp
xor
push
outsl
and
push
add
sar
cmp
mov
pop
lret
mov
ss
test
xchg
mov
jmp
out
mov
fidivs
add
pop
cmp
inc
adc
dec
and
mov
xchg
cmc
xchg
idivb
loopne
es
test
pop
adc
pop
imul
mov
add
xchg
lods
cmp
inc
pop
sub
repz
adc
mov
xchg
dec
lock
push
xchg
nop
leave
frstor
call
sahf
fsts
sbb
les
jge
xchg
lods
pusha
sbb
cli
stc
mov
pop
cmpsb
pop
cmpsb
adc
movsl
pushf
inc
lods
ret
je
mov
push
inc
xchg
and
push
repz
jb
icebp
or
je
lock
jecxz
das
adc
insb
xchg
scas
lea
mov
mov
mov
bound
enter
inc
push
or
cmpsb
cmp
pop
xchg
jno
insb
lods
inc
das
mov
mov
mov
dec
cmp
testb
or
jb
jmp
mov
sbb
cld
and
lret
leave
pop
cli
mov
stc
or
pop
jns
pop
sub
mov
sub
aam
test
es
mov
xchg
and
jns
dec
or
mov
shrl
xor
push
pop
les
add
jg
test
push
test
shlb
pop
inc
push
fstpl
sub
aas
xchg
push
sbb
jb
pop
dec
insl
imul
movsl
add
add
add
lock
or
mov
sbb
mov
lea
cmc
pop
jnp
cli
ja
jns
dec
clc
sahf
xor
adc
or
mov
rcrl
fs
add
mov
jo
bound
fidivrs
mov
int3
xchg
mov
loop
ja
mov
or
out
and
mov
inc
bound
fcoms
sub
fnsave
aam
pusha
jecxz
mov
adc
xchg
inc
stc
cmp
push
scas
fs
jg
jbe
dec
addr16
aad
mov
mov
mov
stos
sahf
mov
and
je
jnp
clc
int
loopne
sub
adc
sub
iret
xchg
loopne
ret
pop
pop
xor
faddl
xchg
jae
test
cmc
popf
or
jecxz
mov
pop
add
pushl
ret
mov
stc
scas
mov
push
xlat
mov
aam
pop
mov
out
leave
mov
lods
mulb
sub
inc
out
sarb
mov
push
push
aaa
adc
arpl
mov
add
fisubrs
fdivl
sub
stos
mov
add
loop
and
push
pusha
jbe
out
jge
lods
xor
outsl
aas
xchg
daa
ret
cmp
dec
imul
and
inc
dec
orl
xor
stos
push
and
push
adc
mov
and
loopne
cmpsb
sub
shrb
imul
dec
pop
cmc
mov
push
aas
arpl
ret
outsl
sbb
cmp
ret
sub
dec
into
mov
push
arpl
rorb
hlt
iret
test
orb
addl
xor
fstpl
ret
mov
ja
lret
pop
stos
or
push
cmpsl
sbb
fsubl
push
enter
sub
das
xchg
adc
add
lea
mov
enter
fs
and
fiadds
popl
sub
ja
and
pop
add
mul
jo
lret
sub
scas
push
jl
cwtl
je
sbb
scas
daa
sahf
xor
subl
add
inc
loop
sub
fs
add
fidivrl
sbb
sub
into
dec
test
mov
jbe
xor
loopne
cmp
pop
insl
or
mov
pop
dec
shl
mov
movsl
pop
mov
xor
imul
ret
or
lods
lods
dec
and
fcoms
lock
in
into
sub
xchg
mov
std
fstpl
sti
xor
dec
jbe
js
lea
inc
jno
inc
repnz
int
mov
jnp
mov
xchg
mov
icebp
call
stos
sub
pop
pop
inc
mov
popf
lock
jmp
lods
push
cs
outsl
aad
int3
xlat
inc
lods
fadds
aas
out
dec
lods
jb
inc
dec
hlt
adc
jecxz
jae
outsl
jmp
lea
lock
cmpsl
mov
push
mov
fucomp
xorl
imul
or
loope
ss
sub
das
fwait
and
sbb
out
mov
aad
xchg
dec
xlat
test
daa
std
sub
xchg
dec
insl
adc
mov
ja
or
out
add
cld
dec
xchg
test
mov
lret
mov
andb
divl
pop
dec
icebp
sti
sarb
int3
aam
inc
cmp
adc
outsl
es
add
insl
or
clc
push
xchg
adc
sbb
xchg
fs
iret
jp
lods
mov
push
in
fidivrl
and
cmp
clc
ud0
test
pop
xor
cltd
mov
fcmovne
mov
cli
cmp
fldl
push
test
ficompl
mov
sbb
dec
rcl
leave
rcrb
fldt
idivb
cmc
add
mov
loopne
repnz
inc
xor
inc
das
mov
nop
dec
orb
sbbb
and
dec
jmp
cmpsb
inc
cli
fs
fwait
pop
cmpsb
push
pop
lea
mov
jg
out
jb
test
push
mov
in
pop
adcb
test
mov
dec
push
in
and
jp
nop
mov
mov
hlt
sbb
dec
or
lahf
jne
pop
pusha
jle
adc
xchg
adc
fs
dec
pop
scas
sbb
jne
pop
in
sub
cmc
ret
lock
test
xor
mov
push
jnp
cs
add
pop
adc
shrb
testb
ret
pop
pop
push
lea
xor
mov
push
imul
push
push
ja
mov
inc
xchg
dec
gs
inc
jns
imul
insl
scas
out
adc
push
repz
sarb
fdivp
push
cmp
leave
das
hlt
sub
mov
push
icebp
loop
or
add
shll
or
inc
dec
add
xlat
inc
int3
test
stos
pop
or
rcr
iret
sub
lds
or
jne
fwait
scas
mov
dec
and
jns
cmp
or
push
cmc
enter
xchg
cli
enter
daa
ret
cmp
xchg
jno
cmpsl
jmp
loope
pop
dec
lock
push
movsb
xchg
pop
xor
inc
xlat
in
lahf
pop
lahf
das
push
jmp
cli
mov
inc
fmull
cmpsb
pop
pop
mov
mov
lcall
into
mulb
loope
into
test
mov
cmp
loopne
movsl
pop
loope
shrb
decl
cs
imul
hlt
out
xor
push
or
pop
pop
lcall
sub
imul
or
into
leave
js
push
aas
jnp
sub
addr16
and
xchg
mov
into
cmp
fidivs
cmpsb
push
xchg
jno
int
lahf
pop
fcoms
cltd
mov
xor
roll
mov
dec
sub
test
push
cmp
sub
cltd
outsl
loop
repz
jae
stc
cmpsb
sbb
fs
sarb
inc
add
out
sbbl
cmp
dec
lock
dec
into
jl
mov
loopne
mov
jns
shlb
adc
mov
scas
lcallw
test
adc
and
and
add
lret
mov
mov
push
rol
adc
gs
push
dec
cmpsb
xchg
lahf
inc
add
mov
les
xchg
sub
dec
adc
sbb
lock
pop
or
adc
hlt
loop
pushf
cltd
daa
cmpsb
jmp
test
mov
xor
inc
mov
pusha
jb
les
imul
jecxz
sti
repz
jb
dec
fcoms
cwtl
cmc
nop
mov
sbb
add
pop
dec
sahf
fisttpl
and
sub
lock
repz
jp
sub
hlt
call
pushf
cmp
testb
std
shrb
dec
push
stos
sub
xlat
cld
jbe
dec
lret
cmpsl
ret
mov
push
clc
mov
push
ret
rclb
adc
aam
dec
or
mov
sbb
insl
lods
aas
ss
add
lock
push
cmp
ljmp
movsb
lods
and
add
loope
rclb
and
pop
lahf
dec
add
stc
jnp
repz
test
and
popf
fucomip
adc
das
mov
imul
shrl
inc
negl
jbe
std
insl
mov
pop
push
mov
xor
in
call
and
xor
jp
xor
mov
roll
adc
ja
sbb
enter
dec
or
sbb
lcall
sbb
mov
sbb
out
push
js
bound
jns
mov
xchg
push
sti
cs
jl
mov
inc
push
fsubs
in
pop
jp
lret
das
mov
jecxz
mov
arpl
dec
out
pop
shlb
pop
pusha
sbb
lret
incb
out
xor
aas
leave
cmp
out
out
fistl
sub
xor
inc
stos
test
dec
and
push
push
insb
push
flds
jnp
sub
jle
fidivrs
orb
adc
out
push
sub
mov
pop
mov
out
jae
add
popf
push
push
mov
repnz
inc
jmp
out
xchg
lahf
imul
scas
push
movsb
push
push
mov
mov
imul
shl
jbe
fbld
cmp
inc
hlt
push
add
ror
aaa
xchg
push
fisttpll
sti
fcomps
xchg
xchg
jecxz
xchg
xor
pop
cmp
sub
stos
das
push
scas
imul
xor
push
inc
mov
jge
movsb
lds
enter
daa
roll
jno
nop
fstpt
mov
push
xchg
xor
loopne
push
lahf
jns
jne
mov
ret
sub
inc
imul
cmpsb
fdivl
test
mov
adc
jae
xchg
push
bound
icebp
push
dec
sub
leave
fidivrl
dec
push
es
out
movsl
fs
rolb
inc
mov
rep
xorb
popa
sbb
jl
xor
scas
aad
decb
pop
adcl
pop
test
fisttps
push
adc
sub
or
in
adc
cmp
jg
enter
js
mov
and
test
xchg
int
popa
ret
rcll
cwtl
cs
cmp
faddl
mov
lcall
data16
sahf
jnp
inc
test
sub
pop
loop
cwtl
sbb
fs
cmp
js
cltd
ss
in
cmp
int
out
mov
cli
jo
jp
mov
dec
or
out
inc
cmc
out
lods
loopne
jp
loope
lea
shll
adcl
sbb
scas
rol
sbb
lods
jp
xchg
cmp
call
sub
loope
mov
rcll
and
xchg
cs
aaa
fidivs
xchg
cltd
nop
pop
repz
dec
add
pop
cmp
les
add
es
imul
test
in
pop
mov
stc
dec
pushf
inc
and
jmp
push
aad
sti
sahf
inc
loop
mov
sub
jnp
dec
loop
es
sbb
movsl
jne
cmp
sbb
xchg
mov
andl
out
fcmovnbe
inc
dec
pop
iret
iret
inc
out
aas
or
jge
aas
das
pop
das
dec
mov
stos
mov
and
fsubrl
dec
adc
ja
insb
dec
arpl
cmpsl
rol
mov
popf
rclb
lods
sub
push
sbb
mov
stc
mov
xchg
mov
mov
add
and
inc
cld
aam
mov
ret
xor
es
test
or
cmp
adc
jp
and
lods
mov
aam
and
ja
icebp
xor
mov
repnz
test
xorl
xchg
or
xchg
push
push
sbb
jb
roll
add
stos
in
push
or
mov
std
mov
push
stc
dec
xor
sub
xor
mov
mov
xchg
adc
jns
call
ja
mov
dec
rcll
lret
je
or
jge
fwait
jge
lahf
push
dec
push
es
mov
dec
out
xor
aam
pop
lahf
out
cmp
in
pop
jmp
lahf
movsb
adc
mov
inc
push
addr16
push
jp
mov
popf
mov
shr
movsl
dec
roll
and
adc
rcll
ss
jg
loopne
xor
loope
pop
inc
xchg
sub
imul
push
add
add
divl
push
and
xor
jnp
in
jle
fwait
test
mov
adc
pop
hlt
iret
mov
xchg
mov
cmp
jae
xchg
push
icebp
dec
push
push
push
int
notb
stc
imul
out
scas
mov
push
lods
test
shr
in
cld
pop
aaa
repnz
pushw
pop
das
arpl
xlat
inc
mull
or
jnp
imul
mov
adc
int3
jle
sbb
imul
loopne
xor
pop
jo
add
adc
or
push
cmp
xchg
inc
movsb
xor
push
xchg
stc
imul
adc
test
enter
daa
rcr
cmp
jno
popf
popa
jl
cmp
dec
into
mov
push
push
adc
and
clc
lahf
cwtl
loope
push
loopne
test
repz
inc
cli
idivl
cmpsb
pop
jl
in
xchg
mov
push
addl
sub
scas
cmp
ds
dec
movsl
imul
rcr
xchg
xlat
in
sahf
data16
sbb
push
pop
add
addr16
xor
xchg
sub
add
lcall
mov
and
or
in
ljmp
push
ja
push
out
in
inc
in
bound
fwait
pop
in
mov
dec
aad
xchg
cmc
jecxz
cwtl
stos
push
int
push
ret
fmuls
jb
lret
ffree
jae
jb
pop
clc
outsl
sbb
rcl
test
mov
outsl
mov
repnz
stc
adc
add
adc
adc
ss
inc
cmp
mov
jno
cli
mov
mov
cmp
mov
cmp
inc
jg
loopne
jo
pop
add
adc
lcall
sbb
data16
movsl
cmp
push
jg
mov
add
ds
sub
inc
dec
sub
pop
adc
nop
xor
ljmp
repz
les
dec
xchg
rolb
sbb
out
pop
daa
subb
jb
jle
mov
repnz
aas
in
push
aad
sub
aas
int3
insl
push
dec
pop
iret
add
sub
not
insb
js
int
cmpsb
stos
push
cwtl
fsubs
mov
lea
cmp
icebp
mov
pop
lds
inc
jbe
div
fsubs
lahf
mov
bound
mov
pop
sarl
mov
notb
das
mov
cmpsl
mov
xchg
cmpsl
icebp
je
das
cld
int3
ja
lret
test
mov
pop
mov
mov
and
mov
test
lods
sar
das
ljmp
push
cmp
insl
jnp
call
xchg
rorl
pop
popa
adc
and
les
inc
stc
mov
push
int3
sbb
mov
push
pop
gs
popa
xor
test
jl
push
and
fnstsw
lahf
add
sbb
xchg
rcl
cmpsl
pop
pop
cli
xchg
stos
fistl
or
rol
add
insl
xchg
xchg
lahf
pop
xor
cltd
fimuls
push
jnp
xor
test
xchg
into
mov
ja
rol
dec
les
mov
fwait
lods
mov
push
lock
mov
mov
seto
xchg
lret
jns
repz
in
jge
xchg
out
xchg
mov
mov
cmp
pusha
mov
push
mov
inc
jbe
dec
mov
loop
xchg
inc
mov
fisttps
cmp
jmp
stos
inc
inc
addl
lret
pop
adc
inc
int
stos
push
push
and
xor
mov
jle
dec
adc
nop
inc
pop
adc
xor
mov
and
movups
jae
push
xchg
movsb
shrl
out
mov
xchg
dec
fimuls
sbb
stos
mov
scas
sbb
xchg
rorb
sarl
cmpxchg
xchg
and
or
push
arpl
add
shlb
lea
adc
sahf
or
push
stos
add
jle
int3
imul
mov
xchg
xchg
fildll
lahf
pop
idivl
mov
stos
dec
push
loop
sub
and
repnz
sbb
pop
sti
shll
mov
push
mov
jl
insb
imul
jg
xor
push
ficoml
bound
push
mov
xor
in
outsb
test
js
mov
std
push
push
and
les
cmp
into
mov
jb
adc
mov
dec
cmp
sbb
aaa
adc
xor
test
popa
pop
iret
ja
sub
movsb
pop
cmpsl
cmpsb
aas
lcall
inc
fmul
sbb
shl
call
adc
jno
cmpsl
jg
adc
test
mov
adcb
mov
jbe
int
nop
iret
fadds
mul
iret
jl
cmp
mov
dec
sbb
ret
sar
test
mov
outsl
jg
sub
jecxz
xor
lret
mov
fs
and
ss
push
aad
mov
scas
popf
cli
xor
ss
lea
inc
or
inc
into
and
xchg
loopne
cmc
adc
pop
pop
insb
adc
imul
or
add
mov
stc
lods
dec
mov
xlat
loopne
mov
mov
test
xor
gs
mov
nop
adc
adc
sti
mov
sub
les
lods
and
xchg
nop
jo
cmp
cmpsb
dec
xchg
pop
and
xchg
jbe
lcall
cs
aad
mov
stc
aas
imul
jb
xchg
dec
rcrb
mov
sub
push
sub
jnp
aaa
lea
sbb
mov
or
fiaddl
movb
cmp
or
sub
xor
sub
pop
dec
or
sbb
inc
and
inc
rorl
not
or
inc
dec
pop
stc
sbb
mov
dec
xor
cld
notl
je
ds
divb
arpl
xchg
jge
ror
cmc
cwtl
sub
fs
mov
mov
movsb
and
clc
mov
cltd
xchg
adc
in
sub
sbb
popaw
sti
and
cmpsl
cmp
cmpsl
aaa
add
sub
lcall
push
out
fucom
push
cmp
out
adc
xor
jae
movsl
loopne
stos
lret
out
add
xchg
or
outsl
add
mov
mov
cs
wbinvd
into
jno
xor
push
mov
stos
xor
dec
inc
dec
popf
pop
and
test
jo
dec
mov
sub
push
adc
mov
add
add
push
push
out
out
and
jns
sbb
in
xor
mov
sbb
mov
addr16
pusha
xor
mov
pop
or
jb
xchg
test
jne
pop
mov
fildll
dec
jmp
jbe
jae
fs
sub
loope
popa
push
sbbb
and
pop
jp
pop
es
jle
icebp
push
in
jl
adc
int3
iret
jb
mov
pop
inc
in
inc
inc
mov
sub
ja
repnz
int3
scas
xor
and
pop
cmp
xchg
movsb
dec
ds
mov
imul
push
cmp
xor
jmp
inc
hlt
push
sbb
arpl
mov
or
icebp
int3
xchg
aaa
sarb
add
int3
push
dec
lea
push
cmpsb
ficomps
rol
inc
dec
fbstp
movsl
mov
xor
movsb
inc
xor
xor
shll
xchg
dec
jge
sbb
enter
daa
mov
and
aaa
and
jl
je
dec
lods
jb
push
xor
add
mov
lahf
xor
test
mov
xor
sbb
mov
js
jmp
pop
xor
push
fsubr
loope
mov
sub
cmc
je
push
insl
mov
clc
mov
movsl
jns
push
rclb
in
insb
xchg
xor
xor
aaa
xchg
inc
arpl
inc
push
addr16
neg
cmc
sub
aam
pop
es
ljmp
nop
sbb
jp
and
ret
outsb
mov
mov
mov
mov
xlat
scas
mov
mov
cmp
and
mov
int
std
push
fdivr
mov
negl
jo
shll
inc
sbb
jno
sahf
fs
sub
cwtl
js
pop
lods
insl
loop
inc
sub
subb
fs
or
ss
aaa
test
popf
jno
cli
or
mov
or
inc
inc
or
flds
or
cmp
scas
loopne
lea
pop
ds
pop
adc
sub
inc
ficoml
rolb
cmpsb
scas
pop
lods
das
push
je
cmpsb
xlat
pop
testl
pushf
fcoml
in
adc
mov
mov
pop
test
pushf
mov
and
inc
push
inc
xchg
fldenv
pop
repz
call
adc
pusha
pop
sub
loopne
and
outsb
adc
xchg
pushf
inc
push
pop
jmp
inc
mov
aad
scas
scas
inc
xor
fdivl
f2xm1
dec
inc
mov
jecxz
cli
jle
test
cwtl
dec
movsb
mov
push
repz
mov
dec
dec
push
inc
fistpl
negb
mov
lock
cs
mul
jle
sti
add
mov
rcr
xor
negb
mov
ret
dec
push
movsb
cmc
cmpsl
mov
pushf
js
and
lods
lret
arpl
mov
mov
out
cld
rcrb
jmp
in
fildll
insl
dec
repz
in
jnp
xchg
dec
lock
roll
popa
inc
cwtl
ja
iret
imul
mov
mov
std
int
push
add
pminub
jbe
mov
test
rclb
push
test
call
lcall
xchg
adc
lcall
mov
setne
pop
add
sbb
shl
ja
andl
xlat
xor
call
jge
lahf
mov
dec
pop
fstpl
ja
xchg
das
dec
stos
loop
inc
in
sbb
fwait
or
jb
or
mov
inc
xor
int
jg
rclb
in
aaa
gs
mov
or
ss
es
shl
js
aam
int
mov
jp
les
fnstcw
pusha
test
sahf
push
xchg
xor
mov
sbb
jbe
mov
inc
and
sbb
ret
icebp
lods
stos
push
add
and
cmpsb
leave
insb
lret
jnp
mov
jle
mov
sahf
adc
test
ljmp
jge
sbb
pushl
push
cmp
ficompl
lcall
fidivl
mov
xchg
sti
loop
sbb
cltd
push
imul
and
iret
loope
inc
int
mov
mov
in
leave
addb
popf
mov
inc
add
xchg
or
lods
mov
mov
xor
add
imul
int3
aas
push
sbb
fdivrp
push
jae
insl
dec
jo
xchg
dec
scas
in
xchg
and
cmp
cmp
mov
push
addb
cmp
jge
test
enter
daa
mov
movzbl
pushf
fdivrs
sbb
sbb
scas
push
adc
push
lahf
cmc
bound
or
mov
popf
inc
cmpsl
jae
cmpsb
call
or
js
mov
pop
outsl
mov
jns
dec
mov
cmp
lcall
xor
cmpb
sbb
loop
sub
std
or
cmc
pop
sbb
pushf
rolb
movsl
or
fs
mov
mov
and
icebp
and
adc
adc
cmpsl
jno
jg
outsl
popf
mov
sub
mov
mov
mov
sub
and
dec
std
push
mov
dec
int3
fdivrs
pop
in
and
sarl
sub
sbb
push
sbb
in
sahf
pop
xor
leave
sahf
cld
xor
addb
or
scas
stc
cmp
fs
push
adc
cmpl
mov
and
cmp
in
xor
iret
add
pop
aad
push
shrl
into
jmp
inc
cmc
add
push
cmp
pop
pop
aaa
jg
sbb
and
cmpsl
lock
add
xchg
sub
ja
push
add
cmp
ljmp
or
mov
jg
sti
dec
inc
jecxz
ret
jb
mov
shlb
addl
sbb
int
and
gs
dec
sbb
push
lea
movsb
ja
pop
mov
adc
pop
imul
or
xchg
cs
fsts
inc
dec
pop
aas
test
pusha
mov
mov
inc
add
and
mov
fistpl
cwtl
or
push
mov
xchg
pop
mov
lret
mov
dec
push
pop
push
pop
and
inc
sbb
jmp
jp
mov
xchg
imul
shll
pop
jbe
pop
fmuls
std
adc
xor
mov
cs
icebp
stc
and
jb
shlb
inc
mov
inc
inc
mov
add
sbb
outsl
aam
test
push
dec
es
imul
lcall
mov
lret
popa
pop
cmp
xchg
mov
lods
or
adcl
inc
push
addl
push
mov
xor
insb
pop
fnsave
movsl
js
xchg
xchg
cwtl
xchg
sbb
rcr
leave
lods
pop
sti
or
ret
jle
xchg
xchg
outsb
filds
xor
test
xor
mov
cmp
add
arpl
adc
and
ja
cmp
mov
test
or
sbb
sbb
fstps
lods
mov
inc
test
lods
push
mov
jns
pop
pop
in
xchg
adc
dec
and
mov
cs
sbb
leave
jp
jg
mov
pop
fwait
mov
mov
xchg
jne
mov
pusha
and
fucomip
adc
push
rcrl
adc
loope
or
sub
push
movsb
sub
push
push
push
push
decb
stos
ret
add
and
adc
insb
xor
test
aad
lods
in
adc
adc
add
in
mov
pop
mov
push
inc
rcrl
sbb
adc
popf
sbb
std
inc
fs
sub
xchg
push
fwait
mov
inc
dec
mov
scas
inc
ret
enter
pop
xchg
mov
or
je
stc
sub
in
sub
inc
add
push
mov
mov
dec
lret
mov
push
int3
sub
jge
and
mov
or
xchg
xchg
fisubrs
pop
cltd
nop
cmp
pop
jno
pop
cmp
cmpsl
jbe
rcll
enter
daa
mov
sti
test
cmp
jl
add
push
idiv
lahf
xor
out
or
fcmovnb
lock
pop
jle
inc
ss
cmpsb
imul
in
and
adc
scas
mov
push
pop
pop
loope
std
in
jo
cmpl
cmpsb
push
ds
pop
movsl
xchg
sub
dec
mov
adcb
xchg
add
push
lea
loope
jns
int
cmp
inc
pop
insl
sub
mull
and
ja
jno
or
fnstsw
mov
xchg
ret
jg
mov
ret
mov
xchg
mov
jae
and
cltd
dec
push
movsb
cli
int
test
sbb
enter
test
mov
sbb
sahf
stos
cmp
push
or
outsl
sbb
pop
loop
pusha
jmp
fs
mov
divl
out
stos
aam
xor
mov
fwait
xor
xor
ds
mov
into
into
push
or
lret
loopne
cli
xor
sub
push
addr16
jb
pop
add
jl
lods
xor
jne
mov
popf
cmpsl
ljmp
mov
mov
out
jle
test
cld
popa
dec
loopne
sub
ja
xchg
fxch
jecxz
fmul
jl
xor
adc
sbb
ror
adc
and
js
sub
incb
jmp
mov
in
jmp
roll
xor
dec
sub
xor
dec
xor
mov
sbb
lea
push
mov
mov
cli
adcl
mov
mov
and
inc
xchg
xorl
and
mov
mov
leave
pop
negb
imul
cmpsl
mov
je
icebp
rcl
imul
inc
push
stos
mov
mov
mov
jo
mov
and
rolb
sub
loope
aam
mov
ret
std
mov
es
and
imul
and
lods
movsl
lds
iret
push
andl
or
cwtl
shrl
add
cmp
mov
aaa
dec
push
das
sahf
mov
push
inc
repz
mov
fstps
dec
ficompl
pop
cmpsb
loop
stos
xchg
pmaddwd
stos
leave
cmp
push
push
pop
decl
pop
lods
xor
sbb
xor
mull
movsl
out
xchg
dec
jl
mov
ja
ja
addr16
dec
nop
out
jle
sbb
imul
sbb
add
jnp
sub
mov
pop
out
lret
jns
outsb
in
and
dec
xchg
sub
lcall
push
popf
or
mov
sbb
repnz
mov
std
push
inc
dec
inc
mov
jne
cli
dec
pusha
mov
xchg
xchg
fnstcw
cld
xchg
xlat
mov
repnz
sub
sub
xchg
and
stos
ss
imul
jnp
push
pop
jle
cwtl
es
jae
adc
cltd
ss
arpl
add
pop
pop
jmp
test
ficoms
jae
addr16
push
shlb
popf
inc
adc
push
jecxz
sub
xchg
push
jecxz
test
fcomps
jae
fwait
scas
movsb
or
cmovp
shlb
mov
pop
int
leave
jo
gs
cmp
testb
rorl
add
aaa
or
sbb
and
out
int3
adc
out
fiadds
vpmulhuw
mov
sub
movsb
out
rcpps
sbb
jge
jno
enter
daa
mov
fwait
les
stc
sbb
cmp
push
ret
call
and
int
push
scas
inc
cmpsb
test
ljmp
cmpsb
out
mov
in
or
sub
cli
imul
xor
jnp
or
xchg
mov
bound
ds
pop
movsl
mov
shlb
xor
andb
mov
inc
in
xor
push
pop
imul
out
pop
mov
pop
mov
push
out
jnp
jecxz
sti
inc
outsb
js
fldl
mov
sarb
mov
jmp
add
fildll
push
cmpsl
sub
scas
popf
cmp
xor
push
neg
outsb
out
or
movsb
shll
mov
arpl
sahf
dec
cmp
jge
test
jg
loop
mov
sub
stc
adc
lcall
cmp
out
iret
mov
xor
testl
cmc
xchg
add
loopne
iret
xchg
pop
fwait
and
ret
lret
add
sub
data16
nop
jp
in
fstpt
mov
jo
fadd
shrb
mov
mov
push
mov
mov
gs
ds
jl
call
inc
mov
flds
lcall
repz
xchg
mov
adc
call
mov
lods
xor
push
jae
pushf
inc
insl
pop
jmp
sti
pop
cs
push
aad
out
inc
test
aas
out
cmp
test
call
je
push
and
movb
cwtl
cwtl
jg
dec
mov
cs
fiadds
or
pop
pop
xchg
lock
jmp
mov
cmc
jns
and
add
loope
pop
std
popa
xor
dec
inc
sbb
fdivrs
cmpsl
cmpsl
pop
cld
mov
inc
arpl
jp
iret
ucomiss
inc
dec
cmc
rclb
adc
mov
iret
out
ret
mov
add
xchg
fdivr
sahf
push
adc
sub
pop
popa
xchg
dec
lods
adc
mov
mov
adc
push
adc
sbb
notl
cltd
je
loopne
imul
xchg
push
cmpsl
push
repnz
push
jle
ljmp
adc
sbb
or
pop
push
mov
stos
xchg
out
push
or
add
ret
ljmp
jg
or
cmp
mov
test
lret
pop
negb
bound
pop
sub
add
or
outsb
fwait
xchg
ficomps
add
jp
out
push
push
bound
push
jns
daa
add
scas
inc
lret
xchg
jns
adc
sub
call
sbb
mov
icebp
mov
insb
mov
dec
and
jne
mov
cli
fildll
add
jmp
mov
add
pop
jnp
mov
jl
es
test
pop
sahf
insb
or
sbb
jle
push
adc
mov
into
adc
loopne
iret
out
movsl
aam
adc
pop
and
ds
jmp
xchg
xor
xorl
push
and
inc
bound
fimull
cmp
pushf
ss
imul
scas
pop
inc
jnp
push
popf
xor
xchg
xor
mov
scas
hlt
leave
out
adc
orl
inc
or
or
fstl
mov
add
bound
hlt
inc
fsubp
adc
push
scas
or
and
mov
movsb
jb
cltd
push
insl
jmp
jbe
loop
jge
lods
xor
inc
sub
daa
mov
out
mov
jl
fucomp
dec
push
mov
jge
sbb
or
test
mov
insb
inc
push
push
mov
in
icebp
cmpb
sub
mov
loope
xlat
cwtl
sub
jae
cmp
lock
test
and
add
decl
mov
aas
mov
dec
loope
jg
outsl
push
pop
mov
xchg
arpl
sub
push
pop
and
or
fsubl
das
fisubrl
jle
and
in
adc
clc
cmpsl
push
jg
adc
mov
mov
stc
and
add
stos
cmp
push
fwait
adc
jmp
hlt
negl
out
add
mov
pop
clc
sbb
sub
test
mov
add
mov
loop
dec
dec
stc
pop
sbbl
push
ss
repnz
mov
mov
mov
imul
scas
into
xchg
rcrb
loopne
mov
test
xchg
pop
ja
cld
sbb
adc
inc
sti
add
insl
xchg
jmp
xchg
xlat
sbb
sub
fisubl
shlb
pop
and
sub
jecxz
mov
add
dec
sahf
dec
xchg
inc
popf
imul
cmp
in
repz
xchg
fs
les
and
xchg
pop
movsb
in
adc
xor
cs
insb
inc
inc
lahf
int3
xchg
aas
xchg
mov
and
jecxz
int3
push
mov
lea
push
mov
mov
inc
lods
mov
push
dec
notb
jge
sbb
pop
cmp
addr16
xor
mov
lods
lods
in
and
sbbl
and
push
dec
inc
sbb
mov
sbb
cmp
into
cwtl
ss
pop
idivl
lods
push
mov
lock
push
mov
shr
fisubrs
aam
xchg
aam
xor
in
in
or
fnstenv
xchg
dec
in
ljmp
popf
lods
jnp
fnstsw
adc
mov
push
out
mov
xor
ret
cltd
stos
pop
sbb
shl
pop
mov
lods
push
mov
push
frstor
les
sbb
das
mov
stos
jne
outsl
out
jno
or
imul
decl
cmp
int
ljmp
push
pop
mov
stos
or
dec
dec
pop
leave
loopne
ja
dec
mov
inc
dec
xchg
lock
inc
movsl
fwait
call
ret
add
xor
bound
xchg
jns
test
in
cltd
cmp
adc
std
insl
or
out
sbb
outsb
jp
hlt
ret
icebp
sub
fidivrl
push
cmp
jne
lods
jp
icebp
xchg
mov
dec
jg
xchg
jg
and
xchg
insl
out
in
sbb
inc
out
out
sub
or
push
mov
inc
call
insb
jbe
pop
jnp
test
mov
cmp
iret
dec
in
dec
ret
es
pop
fisttpl
hlt
mov
push
popf
jb
push
loope
es
cmc
xchg
push
pushf
xor
imul
scas
push
dec
push
popf
push
push
lods
sub
repnz
leave
pop
cli
enter
fbld
sbb
inc
or
stos
or
cwtl
mov
aaa
mov
or
lcall
mov
jge
mov
fidivs
adc
cmp
adc
mov
or
movsb
std
ret
inc
push
mov
xchg
pop
jge
lret
cmp
cmp
dec
jno
out
jl
or
mov
pop
xor
mov
inc
dec
push
push
xlat
add
orb
jecxz
aaa
cmpsb
hlt
daa
repz
fadd
and
ja
cmp
push
or
push
sub
and
cmp
cmp
movsl
pushf
jecxz
rcr
push
cmpsb
popl
push
scas
sbb
add
xor
lret
mov
cmp
pop
mov
and
rcr
rcll
int3
outsb
mov
push
outsb
adcb
cmp
push
or
xlat
mov
inc
adc
std
push
ss
lods
mov
xchg
fsubs
add
out
xchg
das
rcll
sbb
pop
mov
test
sbbb
shrb
loope
push
adc
dec
fs
add
lock
cmp
pushf
in
ds
imul
cli
or
or
inc
aas
lds
in
or
push
xchg
into
ja
mov
loopne
mov
pop
fstps
inc
adc
test
repz
fwait
adc
scas
and
daa
jge
xor
lods
mov
jmp
es
rcl
pop
mov
sub
hlt
mov
sub
adc
decb
push
gs
repnz
nop
inc
inc
mov
std
fnstenv
stc
outsl
inc
repz
leave
mov
call
mov
sarl
add
jmp
divl
sbb
inc
aad
push
stos
inc
mov
sahf
mov
xchg
dec
lcall
jecxz
mov
loope
ja
icebp
cwtl
cmc
add
mov
fadds
mov
add
loope
pop
fisttpl
xchg
sub
inc
daa
mov
push
jl
das
push
push
sub
fcmovbe
dec
mov
inc
pop
push
shll
mov
fstl
scas
outsl
test
cmp
xor
push
mov
call
mov
inc
sbb
or
cmp
aam
cwtl
mov
stos
dec
pop
es
insl
int3
sbb
repz
mov
popa
mov
subl
add
cmp
sub
leave
mov
lgs
je
aad
push
cltd
loop
pusha
test
xlat
lcall
sbb
test
movsl
cli
xchg
pop
push
sbb
sarl
out
jae
cmpsl
pop
test
aam
int3
xchg
mov
mov
in
xchg
fbstp
and
or
ret
add
push
xchg
loop
pop
test
shll
add
dec
imul
or
std
mov
push
gs
inc
add
mov
in
sub
add
jmp
jns
test
in
inc
dec
xchg
pop
jg
mov
fwait
mov
jns
sahf
or
fimull
jp
test
stos
adc
lea
jmp
sbb
pusha
mov
into
fildll
sub
out
jae
xchg
cmp
hlt
out
repz
sub
inc
hlt
pop
push
cli
rol
stos
adc
and
sbb
jnp
arpl
in
out
and
mov
ss
pop
nop
nop
cmp
repz
mov
push
or
popf
mov
js
add
pop
fidivl
in
sbb
insl
shrb
xchg
sbb
in
pop
rol
mov
push
test
hlt
sbb
add
cmpsl
push
or
push
outsl
stc
aaa
dec
adc
test
out
jecxz
pop
loope
add
sub
add
mov
and
leave
movsb
mov
push
or
mov
inc
jge
int
enter
daa
mov
mov
jno
adc
jl
or
dec
inc
adc
jmp
and
insb
lahf
nop
mov
daa
out
pop
test
dec
cmp
jb
in
cmpsb
ja
in
mov
cmp
pop
stos
shrl
int
loope
inc
shrl
cmp
xchg
ds
movsl
mov
or
sbb
push
sbb
sbb
xchg
xor
xchg
dec
pop
loopne
push
sub
sub
stos
lcall
mov
jl
jp
pop
enter
xor
adc
xor
cmp
xorb
jno
mov
fdivr
and
dec
push
mov
xchg
int
inc
xor
popa
xor
negl
rclb
shrl
sub
mov
fstps
or
out
test
xor
ja
loop
push
sar
int3
subb
sbb
ss
or
cmp
xchg
stos
add
cli
cmp
push
xor
jne
cmp
sbb
into
pop
pop
push
cmc
out
test
pop
lds
clc
and
cmp
imul
jno
add
test
cmp
aad
cltd
cmp
mov
xchg
xchg
imul
fildl
jb
xor
lds
adcb
fucom
inc
ret
aaa
lret
sub
repz
inc
xchg
ljmp
call
pop
add
jno
adc
dec
pushf
inc
inc
cltd
jmp
fwait
cmp
jg
lods
aad
mov
iret
aas
les
shlb
mov
je
pop
daa
jecxz
call
outsl
fisubrs
mov
repz
jg
lahf
xorl
jno
pop
jg
sbb
scas
push
cmpsl
lock
and
mov
sbb
lea
xorb
stos
inc
inc
std
push
in
dec
ss
mov
pop
mov
sub
test
and
dec
lret
std
stos
fmull
mov
push
inc
pop
mov
push
xchg
enter
xor
aaa
ret
cmp
mov
cmp
aad
mov
sbb
dec
mov
ljmp
outsb
lods
push
pushf
sub
inc
fimull
pop
ljmp
movsb
decl
adc
sbb
call
les
out
push
mov
xor
cmp
push
test
sbb
sbb
aad
rorl
jge
stos
push
lret
lock
aaa
jg
xchg
stc
add
decw
lods
mov
nopl
mov
mov
push
dec
sbb
in
ja
ds
pop
jbe
inc
ja
jns
daa
xchg
and
insb
push
or
inc
mov
bound
pop
cltd
bound
jg
jns
sub
push
inc
lods
xchg
data16
fwait
sbb
mov
adc
sar
jp
and
iret
inc
ljmp
mov
inc
pusha
daa
mov
filds
subl
jb
cmp
xchg
out
jb
sub
jle
call
stos
add
std
insb
dec
xorl
enter
jnp
test
or
or
jmp
xor
fsubs
add
jl
in
inc
fildll
fisubl
imul
inc
jecxz
das
pop
aaa
scas
xor
shl
cmpsb
mov
cmpsl
sub
leave
dec
or
ja
idivl
inc
adc
sbb
mov
dec
or
mov
jge
arpl
shl
pop
adc
or
icebp
orb
pop
lret
ja
aaa
je
cmp
out
movsb
adc
cmpsl
push
pop
cli
add
jge
mov
enter
daa
mov
mov
inc
and
jno
lods
jl
fnstsw
push
xchg
sbb
mov
lahf
scas
shrl
push
cli
cmp
test
push
mov
int3
cmpsb
cli
insb
sbb
cmpsb
sti
push
js
jp
pop
jmp
inc
or
xlat
sub
sub
add
ds
jge
stos
adc
rclb
pop
repz
sbbb
pop
pop
add
sbb
in
in
pushf
loope
pop
pop
mov
bound
lahf
mov
xchg
push
mov
pop
test
dec
aas
cmp
dec
mov
orb
jg
loopne
mov
dec
adc
pop
les
sbb
stos
push
mov
add
dec
jmp
fcomps
mov
rol
mov
or
test
leave
sbb
adc
daa
loop
cmp
stc
cmpl
push
shl
mov
cmp
xchg
std
addr16
das
cs
outsb
insb
xchg
xor
into
xchg
cmp
and
or
mov
into
cmp
mov
daa
pop
pop
sub
adc
idiv
imul
xchg
inc
nop
xchg
mov
mov
xlat
fsubs
sub
pop
in
add
cmp
fistpll
xchg
jmp
sbb
mov
jmp
shll
jb
lea
jno
inc
call
sahf
push
int3
pop
mov
xchg
es
repnz
loop
xor
dec
push
ljmp
stos
mov
shlb
je
pop
pop
jecxz
pop
fld
xchg
arpl
inc
shrl
cwtl
imul
mov
xor
mov
mov
cmpsl
sub
sbb
xchg
pcmpgtb
mov
pop
add
roll
jecxz
imul
pop
jo
std
cmp
dec
xor
nop
mov
add
cld
dec
xlat
adc
insb
lods
jp
push
sbb
mov
pop
mov
je
sub
cltd
stc
ret
enter
mov
aaa
mov
cmpsb
xchg
or
cltd
ljmp
iret
lods
mov
push
lods
mov
cs
aas
push
jg
lock
ret
sti
fsubrs
test
xchg
repnz
pop
adc
mov
fstpl
enter
and
xchg
cmp
sbb
aad
shl
fcos
pop
std
jne
stos
inc
and
out
lcall
add
ljmp
js
or
cltd
mulb
mov
ret
xor
fnsave
incb
dec
pop
sub
push
xor
or
in
fwait
push
sti
test
stos
hlt
outsl
add
inc
fcoms
lds
jns
jb
in
xchg
adc
fimuls
jb
movl
cmp
lock
jp
mov
inc
mov
sub
sbb
scas
mov
and
pusha
ret
fbld
jne
jmp
into
mov
orl
sub
mov
das
int
jne
push
and
pushf
aam
mov
das
jnp
push
jle
push
in
xor
adc
into
iret
push
sub
pop
out
inc
adc
loopne
push
popl
popf
add
xlat
push
pop
sbb
ficoml
mov
xchg
pop
loope
sbb
cmc
pop
imul
xor
jb
mov
std
cmpb
adc
repnz
add
leave
ret
mov
arpl
nop
adc
adc
stc
xlat
xchg
sbb
lcall
insb
cmpsl
jne
adc
out
lods
mov
pop
aas
aad
fidivs
or
js
cmpsl
jo
dec
dec
scas
jge
and
or
sub
ds
push
test
outsl
stos
jge
jle
enter
daa
mov
adc
jne
or
fstps
jl
test
dec
and
push
push
dec
mov
xor
mov
pushf
lahf
into
sbb
push
int
mov
cmp
sub
xor
leave
in
in
cld
js
dec
pop
pop
sub
push
push
fisubrs
xor
adc
fisubl
insb
xor
mov
lea
in
ds
xchg
jb
mov
mov
dec
sub
mov
lcall
mov
rol
sahf
sub
jp
outsb
int3
push
sub
or
jp
mov
mov
xor
or
mov
out
mov
xchg
xlat
test
addr16
cmp
pop
fimuls
sbb
sbb
jl
mov
xor
pop
outsl
push
fildl
loop
sahf
std
stc
cmp
mov
lahf
and
xor
cmp
jecxz
out
adc
cli
mov
dec
mov
or
lcall
and
jg
ss
adc
add
adc
icebp
mov
aam
iret
mov
lods
addr16
cmp
mov
xlat
pop
sbb
mov
insb
add
jb
mov
in
nop
ret
fwait
mov
inc
jmp
and
repz
push
pop
xchg
jo
rcrb
mov
test
jo
dec
adc
aaa
add
jmp
das
jmp
inc
add
aad
imul
and
lcall
mov
jecxz
adc
xchg
lahf
ret
xlat
icebp
cwtl
es
cmpsl
mov
mov
call
dec
mov
lods
fs
inc
mov
int
das
out
sbb
xchg
arpl
in
sbb
divb
arpl
std
movsb
jns
dec
sub
add
push
fmulp
icebp
enter
in
lret
mov
inc
sub
mov
fisubs
push
shlb
push
jg
mov
call
cwtl
stos
ret
push
ds
insl
sbbl
ret
xchg
inc
sbb
popa
cli
mov
lods
daa
divl
mov
mov
fidivs
psrld
push
cltd
xchg
rolb
lcall
shll
rorl
jge
sub
cmp
inc
imul
xchg
in
repnz
sbb
or
out
es
add
xor
xchg
mov
pop
mov
push
ja
inc
sub
repnz
push
mov
sub
push
dec
das
sbb
popf
popa
fsubrp
bound
das
jns
pop
mov
xchg
add
shlb
outsb
jl
or
jo,pn
adc
imul
mov
xchg
sbb
dec
xchg
or
jne
mov
or
lds
add
shll
xchg
cltd
inc
sub
dec
cld
sub
hlt
sti
adc
and
stos
call
push
in
insb
and
je
jo
mov
lret
in
in
jecxz
xor
leave
sub
mov
mov
inc
and
push
push
fstpl
popf
sub
mov
inc
fisttpll
fcmove
adc
xchg
mov
inc
sbb
jbe
imul
fistl
sbb
rcrb
jno
rcrl
jg
dec
adc
cmp
pop
arpl
or
sbb
fisttps
pop
lods
out
add
pop
xchg
pop
outsb
mov
ficoms
fs
ljmp
mov
and
xor
in
inc
movsb
sub
clc
jbe
hlt
mov
sub
leave
daa
mov
push
cmp
jb
jl
add
dec
xchg
mov
adc
and
fwait
lahf
in
imul
outsb
mov
push
lods
mov
inc
pop
sbb
cmpsb
add
inc
js
mov
pop
addr16
add
loope
outsl
and
or
and
rolb
mov
adcb
and
and
add
sbb
cmp
and
sbb
xchg
subl
popf
dec
lcall
pop
fdivrl
jns
sub
outsb
das
dec
test
sub
cmpb
jg
jl
mov
dec
mov
mov
xchg
bound
cmp
add
mov
ljmp
push
aad
lret
arpl
lock
mov
jb
dec
sbb
sub
add
pop
outsl
xor
xor
fs
dec
adc
inc
ss
xchg
mov
mov
ja
cli
aam
shlb
pushf
out
stos
cmp
mov
or
sbb
into
add
cmc
cmp
aas
loopne
outsl
pop
pop
push
dec
rcll
mov
mov
cltd
scas
adc
scas
nop
add
pop
inc
lea
cmp
adc
xlat
push
dec
xor
mov
test
mov
fistpl
fimull
nop
sahf
push
pop
dec
jns
scas
inc
cld
out
lret
push
lret
in
repz
out
xor
mov
rcll
pushf
mov
rcll
pop
std
push
pushf
dec
xchg
test
mov
test
push
aad
loop
inc
adc
aas
mov
jmp
dec
jbe
je
pop
xchg
pushf
adc
lea
ret
loope
xchg
mov
pop
dec
mov
repnz
rcr
add
cmp
inc
inc
adc
lock
int
or
aas
dec
lods
and
testl
jae
cmp
dec
lcall
mov
jne
inc
adc
icebp
mov
movsl
iret
mov
dec
stc
inc
mov
xchg
mov
test
pop
std
hlt
sub
or
mov
ret
out
mov
insl
push
fisubs
ljmp
scas
lods
xchg
loop
mov
ficoms
and
xor
jno
add
ja
cltd
mov
mov
xchg
push
test
jbe
outsb
repz
sbb
repz
push
cld
pop
push
jecxz
stos
and
mov
pusha
mov
into
adc
add
lds
insb
lods
enter
inc
xor
mov
mov
dec
dec
sbb
jo
or
or
cmp
movsl
or
sbb
fwait
mov
xor
icebp
pop
or
mov
incb
out
movsb
mov
jmp
mov
int
in
xor
lcall
into
or
jb
addr16
mov
mov
or
sbb
jne
mov
xor
sahf
divl
jmp
fs
insb
out
test
mov
push
negb
sub
notl
jnp
sbb
in
rorb
adc
js
sub
pusha
pop
insb
int
inc
sub
inc
jae
and
push
adc
jns
push
pop
or
fidivrl
xchg
or
sbb
int3
xor
inc
jl
pop
mov
push
add
pop
shlb
idivb
mov
ja
hlt
inc
mov
inc
sbb
or
aas
push
scas
aaa
inc
mov
push
add
stos
int3
adc
pop
popf
pop
aam
mov
push
mov
jns
scas
mov
int
cmp
mov
insl
imul
sbb
rcrb
mov
test
fldt
jl
push
sbb
daa
mov
push
jecxz
xor
mov
mov
and
ja
cli
inc
scas
shll
pop
jp
js
lods
ret
push
je
sbb
dec
loope
outsl
sub
pop
daa
cmp
sub
ds
repnz
movsl
mov
cmpsl
imul
pop
cmp
xor
enter
in
jl
push
sub
push
lcall
scas
fsubrl
add
sub
cmp
outsb
xchg
inc
inc
adc
lcall
mov
fwait
pop
mov
pop
dec
mov
jge
and
fldl
mov
aas
mov
dec
outsl
fcomip
adc
inc
inc
roll
sub
leave
gs
ret
test
xchg
movq
aam
xor
dec
stc
test
andb
adc
lock
scas
test
imul
adc
xchg
popa
cli
pop
jl
xor
leave
cmp
aaa
push
or
clc
mov
cmc
add
out
loopne
iret
mov
adc
sahf
sub
rorb
les
sub
xor
xor
xchg
or
mov
inc
aaa
sti
jbe
js
incb
cltd
gs
jge
jns
dec
fdivs
pop
inc
cmovo
flds
adc
rep
fcmovbe
xchg
negb
nop
call
sbb
ret
testl
repz
jnp
jae
mov
or
push
aad
sarb
repz
inc
pop
hlt
jb
inc
sbb
mov
test
stos
push
jl
pushf
jae
lea
or
and
movsl
jg
or
add
dec
pop
or
shl
sbb
mov
lods
mov
mov
push
or
shr
mov
xor
dec
and
adc
je
lahf
icebp
mov
cld
rorb
dec
mov
addr16
aam
dec
mov
sbb
loopne
cwtl
sub
mov
es
and
clc
cmp
cmc
xchg
lds
push
mov
shrd
jo
add
mov
inc
lret
adc
seto
add
dec
cltd
cmc
in
test
outsb
repnz
inc
cld
fisttpll
mov
xchg
jecxz
adc
jmp
pushf
pop
push
lods
stos
cmpxchg8b
out
ret
je
xchg
adc
daa
mov
xor
push
aaa
xor
rorl
xchg
pop
pop
pop
sub
movsb
ja
push
cmp
ds
rorl
or
imulb
push
xchg
cmpb
insb
sahf
mov
mov
out
subl
jle
add
test
in
test
xchg
mov
movsb
cmpl
adc
jp
faddl
fsubp
mov
mov
sub
sub
jne
and
filds
enter
xchg
xchg
das
imul
add
inc
cwtl
mov
xor
mov
mov
jnp
xor
in
mov
iret
xchg
bnd
sub
mov
inc
ss
fsubs
popf
jns
pop
push
fildl
das
repz
popa
push
sbb
div
imul
scas
scas
mov
aam
rorb
mov
repz
insl
leave
sub
mov
nop
mov
arpl
push
inc
push
push
fisttps
cli
mov
aaa
add
rcl
add
insl
es
int3
call
lds
das
fldt
cmp
cmp
fsubl
sbb
jbe
pop
mov
outsl
enter
daa
mov
jnp
push
in
lret
adc
dec
jno
bound
icebp
jmp
and
fstps
inc
jb
test
inc
add
mov
in
inc
pop
bound
cmp
pop
in
mov
loope
inc
cmp
xor
scas
jns,pt
dec
movsl
and
std
jmp
mov
xchg
adc
xchg
lret
cltd
and
xor
test
sbb
adc
inc
pop
fwait
add
push
pop
neg
shl
xor
pop
ret
into
outsb
cmc
and
fiaddl
push
daa
imul
das
jo
inc
mov
roll
push
popa
int
js
fmuls
mov
not
insb
cmc
lret
or
push
jno
mov
mov
clc
sbbb
sub
adcl
loop
cli
jnp
pop
mov
adcl
xchg
adc
dec
cmp
jle
iret
cli
cli
cmp
xor
dec
sahf
mov
nop
dec
or
imul
pusha
inc
lret
pop
xchg
je
adc
shrl
sbb
out
inc
sub
lods
sbb
or
mov
xchg
xlat
aam
aam
mov
in
lods
fs
sti
and
sahf
sbb
nop
push
stc
mov
xchg
stos
inc
and
lods
fnstcw
xchg
add
jnp
fsts
or
push
faddp
lcall
adc
fidivrl
bound
outsb
int
aad
add
pop
ljmp
sbb
divb
movsl
out
jecxz
aam
lahf
or
loope
cmp
in
loope
ds
rolb
cmp
jl
scas
cli
popl
sub
in
das
mov
mov
lods
pop
test
test
add
idiv
cld
sub
cltd
xchg
dec
sbb
daa
pusha
mov
pop
dec
daa
cld
sti
pop
int
sub
mov
push
insl
mov
cmp
lret
repz
daa
lea
add
mov
insl
sbb
jbe
imul
aas
insb
movsb
lods
push
mov
dec
add
mov
pxor
push
add
hlt
cltd
sub
sub
mov
cmpsl
mov
fnsave
adc
xchg
mov
push
roll
jmp
stos
das
imul
push
ficoms
inc
arpl
jmp
mov
or
data16
ss
mov
sarb
dec
sbb
fdivs
and
movsb
inc
push
sbb
fwait
addps
push
aaa
xchg
sahf
add
scas
jne
out
bound
lahf
bound
insl
pop
jns
std
sahf
in
daa
imul
push
dec
or
mov
adc
push
mov
pop
mov
in
insb
dec
cmp
jmp
cs
fbld
bound
inc
dec
cwtl
jmp
cli
clc
rolb
mov
mov
je
cmp
inc
shll
and
jecxz
jnp
test
and
jmp
ficoms
ret
iret
out
mov
fiaddl
inc
inc
pop
xchg
jae
outsl
outsb
push
fwait
pop
mov
jecxz
sub
add
pop
xchg
mov
repz
xor
pop
jp
push
mov
shrb
mov
inc
jno
leave
lahf
repnz
fldt
arpl
add
mov
lret
sbb
std
mov
cmp
mov
int3
pop
dec
and
cmc
jmp
lds
push
scas
jp
je
push
arpl
cmp
pop
pop
movsb
lret
push
in
divl
cmp
jge
xchg
and
daa
mov
fdivrl
inc
loope
jno
adc
sub
inc
mov
aam
jge
mov
js
dec
jno
push
sbb
shrb
or
push
xchg
sub
cwtl
pop
and
leave
push
or
cmc
sub
cs
mov
dec
rcr
insb
mov
adcb
sbb
add
add
cmpsl
cmp
negl
imul
pop
lret
sub
and
lcall
mov
sub
or
stos
adc
shrb
lods
mov
rcrl
mov
dec
int
dec
sahf
push
ret
int
xchg
mov
notl
scas
ljmp
jmp
sbb
pusha
das
sahf
or
std
test
pop
pop
outsl
rcl
sbb
stc
push
out
fs
outsb
adc
adc
scas
cmp
jns
and
insl
or
xor
lods
pop
cmp
mov
add
lods
loope
cmc
nop
mov
loopne
int3
inc
pop
mov
rcll
cs
imul
pop
lretw
lods
add
ret
sub
shrl
sti
outsl
cli
mov
sbb
push
incb
gs
call
jg
xchg
sti
addl
and
cmc
sbb
inc
insl
inc
repz
outsb
jecxz
jl
pushf
sbb
mov
mov
pop
cmp
leave
adc
pushf
dec
inc
stc
jmp
xchg
aad
cmpsb
enter
lods
aas
jle
jo
jo
movsb
dec
fcmovnbe
aad
orl
mov
fld
cwtl
adc
inc
mov
addr16
mov
out
cmpl
dec
fistl
dec
inc
inc
fcoms
lock
inc
mov
fs
in
and
pusha
repnz
dec
std
inc
push
cli
dec
sbb
inc
cmpsl
mov
outsl
mov
ss
es
lret
xchg
sub
lds
mov
mov
inc
cli
and
pop
addb
cmpb
xchg
sub
ret
xchg
call
insl
sbb
data16
inc
xchg
ljmp
fisubrs
xchg
addr16
push
inc
loopne
sub
dec
adc
stos
cltd
arpl
test
sub
mov
and
fstp
ret
decl
pop
test
sbb
mov
cltd
sbb
push
mov
lahf
out
mov
in
mov
mov
incl
pop
xor
imul
inc
inc
xor
out
adc
ret
movsb
push
dec
sbbb
ja
js
dec
push
pop
inc
inc
add
test
cltd
inc
push
fisubl
enter
test
inc
test
movsb
cmp
jns
jns
in
sbb
mov
mov
divl
loope
xchg
add
shll
mov
pop
dec
push
sbb
jne
adc
pusha
leave
clc
jmp
xchg
pop
inc
daa
jmp
vmovntps
or
int3
sub
loopne
sbb
sbb
stos
mov
out
and
lcall
jecxz
jle
adc
adc
scas
pop
ret
addr16
adc
inc
dec
cwtl
mov
mov
push
push
pop
shl
xchg
out
pop
mov
out
xchg
mov
fistpl
lds
scas
orb
aad
dec
rolb
repnz
dec
cmc
leave
push
cmpsb
test
es
je
push
cli
push
inc
and
rorl
movsl
test
xorl
sub
in
add
lahf
mov
pop
sub
fisubs
test
jo
fdivrs
test
add
push
lock
inc
out
jbe
xchg
fdivrl
shlb
enter
daa
mov
xchg
cmp
jno
ds
dec
dec
pop
push
mov
lea
nop
mov
in
inc
js
or
mov
sbb
adc
cmp
adc
pop
arpl
push
mov
or
or
add
mov
add
mov
lahf
jge
faddl
fisubrl
scas
jge
xor
mov
js
icebp
daa
adc
sbb
xor
and
push
lds
das
sub
sbb
outsb
mov
in
sub
jmp
xchg
loop
mov
mov
or
xchg
and
int
xchg
pop
fdivrs
xor
push
adc
lret
adc
dec
faddl
mov
push
mov
push
add
sahf
stos
cmpb
sbb
add
mov
out
in
xchg
sar
int
sub
and
push
test
cmp
je
stc
out
aaa
cmp
filds
clc
fnsave
or
dec
xor
push
or
ret
pop
shll
sub
test
add
fwait
loop
ljmp
xlat
push
push
xchg
outsb
or
movl
jl
orl
addr16
gs
add
cmc
arpl
inc
dec
push
push
les
imul
aas
pop
push
pop
or
sbb
pop
out
jle
adc
jge
jmp
xchg
outsb
inc
aad
scas
rolb
adc
aas
sbb
nop
movsb
dec
push
pop
mov
jecxz
test
movsl
xchg
lea
add
and
push
adc
sub
fcmovnb
stos
hlt
pop
hlt
mov
pop
fmuls
das
dec
fisttpll
mov
fwait
aad
rcr
clc
add
jg
enter
popf
dec
adc
cli
cmpsl
mov
sarl
or
mov
lret
push
ret
cmp
mov
add
mov
jns
pop
rclb
sub
jle
ret
and
es
xor
insl
add
push
clc
in
data16
xorb
stos
xor
insl
repnz
mov
push
daa
insl
and
mov
fiaddl
insl
and
test
mov
nop
pop
add
stos
test
orl
cld
popf
pop
shl
stc
inc
pop
ljmp
xchg
out
in
out
mov
ljmp
jmp
xor
xor
xor
cld
outsl
mov
movb
pop
pop
pop
leave
ja
push
clc
dec
add
inc
cwtl
sub
pop
fwait
insl
sahf
rcrl
jge
mov
mov
cmp
out
and
scas
bound
cmp
jns
lcall
pop
and
jo
lret
mov
repnz
mov
jp
dec
xlat
mov
inc
popa
mov
ret
dec
add
jne
mov
mov
pusha
mov
mov
cmpsb
fwait
es
nop
adc
and
fsub
mov
and
sbb
js
repnz
sahf
stos
daa
clc
shlb
push
xor
mov
fneni(8087
add
or
or
js
jnp
movsb
sbb
ret
aaa
pop
dec
dec
pop
inc
push
insl
add
push
and
enter
lcall
mov
xchg
data16
in
sbb
imul
mov
push
loope
sbb
pop
rcrb
scas
repnz
pop
fmul
std
js
jno
push
pusha
test
inc
daa
mov
push
sbb
std
stos
aaa
inc
imul
sahf
shrl
or
fiadds
imul
fcmovne
fs
cmp
jle
cmp
fidivrl
ja
cli
movsb
loopne
mov
jbe
pop
pop
jge
repnz
enter
daa
mov
fwait
cmp
mov
dec
mov
mov
xor
sub
mov
test
test
mov
subb
movsb
clc
in
testl
pop
mov
sbb
loope
mov
sub
movsl
test
out
repnz
das
movsl
fisttpl
inc
fdivl
jbe
int3
sbb
pop
inc
add
cmpsl
xor
mov
push
sub
icebp
js
aad
imul
jne
sub
out
jecxz
push
mov
adc
push
jno
jg
inc
pop
mov
fdivl
mov
test
and
mov
test
add
enter
sbb
sahf
fdivrs
ljmp
jp
mov
jecxz
mov
or
or
test
ret
pop
loop
sub
test
andb
adc
in
cmp
outsl
imul
xor
xor
xor
cmp
xchg
aam
cli
or
jp
push
into
sbb
xor
icebp
pop
lock
adc
xchg
push
mov
dec
mov
cs
data16
int
shl
ja
cmp
xlat
xchg
sbb
sub
push
mov
out
aaa
and
xor
decb
inc
into
nop
in
mov
rcrb
fldenv
mov
repz
xor
sbb
xchg
jmp
pop
dec
mov
adc
stc
mov
jmp
dec
subl
aas
sbb
pop
aas
mov
mov
push
je
mov
test
out
lea
mov
cwtl
mov
jnp
and
mov
stc
lcall
loopne
fcomi
ret
xchg
mov
das
lock
cli
mov
shr
aaa
and
lahf
pop
shrl
xchg
in
ret
std
mov
or
scas
sub
mov
in
fs
jl
adc
mov
fnsave
pop
cwtl
inc
adc
sub
sub
jne
ret
mov
mov
insl
jmp
leave
clc
daa
sti
ja
shl
ljmp
add
out
add
and
jl
sub
or
addl
nop
sti
cltd
rcll
test
jl
mov
jmp
neg
sub
aad
cltd
xchg
push
sbb
std
aaa
pop
stos
jb
stos
lret
add
xchg
xor
add
hlt
xor
mov
shll
pop
jb
mov
jo
leave
rcr
dec
push
gs
ja
lods
mov
inc
dec
inc
das
sub
or
cmpsb
sub
pushf
addr16
and
out
mov
cmp
aaa
lret
jns
pop
aas
in
push
lods
xchg
fiadds
jnp
pop
repnz
sbb
jp
xor
mov
xor
dec
in
in
jne
xchg
pop
pusha
lcall
fistpll
inc
xchg
mov
add
pop
mov
mov
adc
add
xor
test
insb
movsb
je
jnp
mov
jle
add
adc
dec
iret
add
mov
inc
bound
pop
push
in
xchg
popf
adc
sbb
inc
xlat
pop
leave
and
mov
in
imul
adcb
rol
mov
lret
enter
gs
add
mov
mov
lcall
lret
sbb
call
cwtl
or
mov
int3
sbb
fcmovu
call
jg
jo
rol
scas
pop
sarb
cmp
cmp
movsb
imul
jbe
xchg
hlt
jge
stc
adc
or
daa
scas
sub
cmp
cmc
scas
jno
sti
repz
dec
mov
push
jge
xor
jae
lahf
cmpsl
lcall
sti
pop
push
push
outsb
nop
lea
sti
cmpsb
adc
dec
js
cmp
pop
loope
or
sub
loope
xchg
adc
sahf
pop
cmp
push
add
loop
int3
shrb
pop
cmp
mov
sbb
lret
and
pop
mov
mov
sub
cmp
lcall
fdivrl
out
sub
xchg
outsb
addl
andb
cmpsb
jg
lods
scas
mov
fisttps
outsl
out
enter
insb
push
lret
js
addl
hlt
jp
not
lret
cwtl
lret
test
hlt
stos
push
sbb
push
test
mov
outsl
outsl
ss
adc
psubw
aas
hlt
outsb
aad
adc
aaa
sbb
push
jmp
sahf
mov
mov
jge
cmpsb
lods
mov
or
out
push
add
loopne
fidivrs
paddw
cltd
push
ss
add
adc
fimull
cmp
xlat
shrb
sub
mov
pop
es
loope
jge
lods
xchg
jge
add
rclb
mov
mov
outsb
fsub
fstps
ljmp
lds
call
xchg
push
loop
push
mov
adc
fistps
rcrl
aad
out
aad
enter
pop
cmpb
inc
push
push
je
jnp,pn
testb
jge
cwtl
inc
push
arpl
or
mov
punpckhwd
pop
lahf
jg
cmp
push
inc
insl
adc
lock
les
pop
jnp
mov
mov
sbb
sarl
testb
dec
dec
or
cmpsl
scas
mov
jae
aaa
icebp
mov
cwtl
mov
in
jb
outsb
hlt
sbb
adc
pop
mov
and
sub
dec
aam
rclb
aam
inc
insl
sarb
stc
clc
bound
push
xchg
add
ret
pop
push
popa
fwait
or
lods
adc
xor
insl
inc
mov
and
push
pop
sbb
imul
add
lret
dec
movsb
xchg
mov
xor
push
xor
push
adc
xchg
inc
loop
bound
push
rcrl
or
out
mov
jno
js
xchg
add
add
pop
sub
xor
adc
mov
int3
xchg
push
dec
mov
jbe
sarb
ja
mov
dec
out
sbb
dec
jae
push
std
fwait
lret
hlt
out
ret
jns
add
sbb
out
ficomps
bound
ja
pop
enter
stc
ficoml
testb
mov
call
add
and
push
mov
cmp
mov
mov
es
jne
ljmp
sahf
repnz
xchg
nop
pop
jmp
addb
pushf
jmp
sub
xchg
hlt
inc
push
jo
jae
or
fnsave
cmovge
jnp
sub
in
in
daa
adc
push
iret
cli
mov
pop
mov
cmc
inc
insl
adc
jae
aas
bound
cmpsl
lods
dec
popf
cmp
mov
iret
test
test
scas
outsl
mov
sbb
xor
stos
jae
push
stos
cld
sbb
aad
or
sub
hlt
repnz
push
int
jnp
int3
hlt
pop
pop
jnp
jle
movl
mov
sbb
call
lea
int3
jb
int3
add
stc
pop
mov
out
fimuls
orb
jmp
scas
mulb
cmp
lret
mov
push
and
jbe
dec
movsb
jge
in
enter
daa
scas
dec
inc
cmp
nop
fdivrs
into
dec
pushf
mov
and
and
cmpsb
lahf
movb
test
cmp
cli
cmpsb
xchg
adc
add
fwait
push
repz
cmpsb
fildll
insb
jbe
inc
clc
adc
sub
movsl
jmp
call
roll
movsb
inc
jae
shl
xor
xor
rcl
ja
pop
data16
sub
rclb
push
lret
fsubrl
cmpsl
dec
sub
in
dec
adc
cmp
je
jb
lea
stc
icebp
pop
mov
int
and
inc
sti
int
repz
fsubrs
in
cmp
pusha
out
adc
mov
xchg
xchg
jecxz
into
sahf
xchg
enter
call
shrl
sbb
cmpsb
cli
sbb
repnz
mulb
fsts
push
lret
cwtl
mov
cmp
gs
out
mov
cli
cmp
pop
cmp
mov
in
cmp
cmc
lods
jnp
loopne
mov
pop
sub
imul
mov
data16
daa
inc
lods
lahf
adc
cmp
cmp
sub
or
or
stc
in
call
lods
shl
sbb
sub
add
adc
cmp
shrl
repz
or
sarb
call
adc
pop
push
adc
pop
jg
cmc
sub
cs
test
jecxz
fs
cli
sub
jb
scas
rorl
lds
lods
and
add
iret
mov
cwtl
fbld
lahf
pop
leave
mov
ficompl
adcl
aas
add
fldl
jmp
hlt
mov
shlb
dec
sbb
inc
adc
cmp
sbb
enter
dec
or
ds
add
mulb
cmpsb
pop
icebp
xchg
sub
lret
push
and
mov
pushf
mov
mov
adc
sbb
ror
sub
sub
dec
aam
pop
xchg
iret
rorb
es
push
imul
psubb
inc
xchg
ljmp
cli
lods
jg
jne
sbb
out
mov
insl
out
pop
push
xor
add
add
loop
test
outsb
mov
mov
sbb
test
jge
xchg
xchg
sbb
outsl
into
pop
add
stos
test
std
mov
add
mov
sub
mov
add
mov
pop
xor
sbb
mov
iret
shr
dec
push
shl
jmp
dec
fiaddl
push
inc
pop
xchg
pusha
or
jbe
fwait
cli
inc
dec
push
push
in
add
jne
or
lock
mov
in
aas
cmp
cmp
pop
mov
jecxz
sahf
addr16
adc
out
mov
andps
dec
stos
push
movsl
pusha
xor
mov
jmp
icebp
mov
adcl
xor
adc
popa
mov
scas
push
and
cwtl
addr16
insb
jp
jle
call
mov
dec
adc
mov
imul
in
mov
sub
out
fsubl
popf
arpl
inc
aad
pop
fisubl
call
dec
push
movsl
imul
adc
arpl
mov
in
ds
repnz
hlt
push
jl
arpl
or
sbb
aaa
jg
aad
mull
movsl
add
mov
out
arpl
pop
out
lahf
fisubrs
jno
lds
out
jo
sbb
aad
jecxz
cmc
gs
pushf
add
andl
jbe
outsb
push
jge
mov
enter
daa
lods
icebp
sarb
xor
jl
mov
dec
or
lds
cld
scas
push
lahf
in
test
pop
cmp
add
mov
cmpsb
sbb
jno
lods
js
js
mov
pop
pop
das
movsl
push
outsl
xor
mov
or
es
mov
rcrb
mov
mov
sbb
stos
lods
add
sbb
or
cmp
pop
pop
cld
hlt
sub
mov
pop
xchg
test
out
in
stos
push
and
icebp
sub
mov
adc
push
mov
jg
mov
mov
outsl
rorb
add
sbb
sarl
test
fsubrs
inc
testl
cmp
test
add
cmp
aaa
sbb
inc
xor
loop
loop
xor
test
adc
pusha
cmp
pusha
std
jmp
mov
push
cli
insb
cmp
xor
cmp
or
inc
push
sub
jae
int3
loopne
movsb
sbbb
push
imul
fistps
pop
jmp
mov
ljmp
sub
jb
mov
das
jg
sti
aas
and
adc
inc
dec
jno
ret
and
shlb
push
test
dec
sub
call
xchg
decl
adc
inc
setl
cs
rcrb
aad
mov
test
cltd
fstl
jb
jbe
dec
jecxz
sbb
lea
fstpl
pop
and
mov
pop
xchg
in
das
fstpt
popf
pop
sbbb
inc
jnp
jb
cltd
clc
cld
das
lds
test
mov
repz
pop
add
std
subl
cmpsl
lods
aad
mov
imul
push
lret
ret
mov
in
inc
ret
ja
dec
stos
dec
pop
cmc
or
mov
aam
push
pushf
ret
pop
ja
es
int
mov
das
jge
jle
shr
jbe
je
leave
scas
lods
ljmp
mov
je
xchg
push
or
int3
dec
add
sahf
jb
pusha
lock
pushf
fmuls
test
dec
cmp
enter
dec
fists
stos
mov
mov
xchg
push
mov
add
outsl
push
jmp
xorl
mov
cmp
mov
sarb
dec
test
pop
dec
in
adc
xlat
push
dec
int
xor
sti
push
or
sbb
fwait
sub
push
or
or
sarb
push
bound
test
dec
fidivrl
lret
cmpsb
mov
jl
repnz
fisubs
addr16
or
adc
mov
mov
testl
push
les
rolb
xchg
orb
xchg
mov
inc
cmp
lcall
mov
out
in
cmp
scas
adc
int3
jnp
jg
jle
mov
in
add
iret
and
gs
sbbl
or
jae
mov
push
popf
mov
push
push
pop
cmp
adc
push
xchg
ret
sbb
dec
fldt
pusha
shrb
cmp
jmp
or
inc
repnz
dec
hlt
popf
out
push
arpl
or
sbb
and
aaa
jbe,pt
or
jl
add
mov
int3
fidivrl
pop
adc
cld
xor
mov
pop
sub
mov
lcall
cli
push
mov
pop
cmp
gs
cld
mov
daa
lods
sbb
jae
aam
push
les
popa
dec
jp
sub
es
test
ljmp
or
pusha
test
iret
ljmp
fwait
dec
add
js
dec
pop
pop
sahf
push
scas
loope
mov
and
and
outsb
xchg
mov
sar
popf
es
pop
dec
dec
add
rcrl
adc
movsl
xor
shrl
pop
mov
jmp
pop
adc
adc
mov
and
faddl
jecxz
outsb
stos
sbb
xorb
jg
cld
mov
lods
pop
jp
out
repnz
mov
and
stos
mov
int
cli
jo
and
mov
cltd
sarl
std
mov
scas
repnz
fisubl
test
leave
add
lahf
xlat
outsl
or
lret
cltd
stc
pusha
pop
push
adc
mov
sbb
pop
stos
pop
out
inc
std
cli
lahf
xchg
int3
xor
repz
cmp
xor
or
mov
cmc
cmp
push
pop
insb
int
and
dec
adc
pop
sbb
push
sahf
data16
test
and
imul
mov
mov
lcall
push
mov
sbb
outsl
dec
shrb
and
aas
ja
les
mov
sbb
xorb
adc
pop
adc
lcall
add
aad
mov
dec
aas
cmp
jne
movsl
xchg
ja
inc
pop
xor
and
sub
mov
pusha
lea
das
test
jecxz
icebp
add
sti
jbe
lods
lret
cmp
push
xchg
pop
inc
xor
movsb
add
jae
scas
lds
push
or
test
paddw
aam
dec
cli
test
stos
rorb
js
icebp
inc
loop
cld
sub
mov
mov
pop
and
in
pop
pop
adc
aam
je
dec
sub
aam
cwtl
add
pop
push
sahf
insl
xchg
lods
clc
adc
xchg
mov
pop
dec
popa
loopne
inc
lods
push
insl
nop
mov
pushl
stc
and
call
leave
testl
lods
testb
sub
pop
ffree
js
test
mov
xchg
adc
jnp
mov
mov
int
stos
xchg
out
fistpl
sub
add
test
xor
mov
xor
sub
xchg
sahf
or
stos
popf
pop
add
rorb
faddl
mov
pop
xor
push
lods
in
add
sub
out
jnp
xchg
bound
inc
mov
fcmovu
in
enter
in
mov
jbe
mov
insl
or
jp
lds
xchg
mov
mov
in
dec
decb
enter
inc
xchg
or
or
xchg
or
jmp
xchg
loopne
mov
cs
loope
mov
sub
shlb
out
insb
push
into
ret
jnp
push
mov
dec
push
in
movsb
jmp
mov
imul
inc
mov
sahf
push
lock
or
inc
int
inc
sarl
inc
xchg
sbb
sbb
adc
imul
scas
aam
sti
push
jg
push
shlb
repz
mov
add
loopne
cltd
hlt
call
or
inc
ss
fimull
rcrb
aaa
std
add
xchg
mov
lds
pop
inc
test
ret
scas
xchg
xor
sbb
or
movsb
xchg
cltd
insb
push
push
push
xchg
jbe
adc
jge
sti
and
mull
daa
stos
into
cmp
daa
stos
jl
addr16
dec
jmp
jno
xor
xor
sahf
lahf
and
push
fisubs
mov
lcall
cmpsb
push
sbb
in
jp
adc
jge
pop
frstor
stos
loope
sub
cmp
stc
ds
xchg
scas
movsl
incb
mov
aad
fimuls
aad
lds
dec
insb
xchg
add
gs
xor
loope
fstpt
sbb
xchg
jl
lcall
paddusb
cmpsl
mov
jg
lret
mov
push
orb
loop
add
adc
jge
push
xlat
jp
int
push
dec
fsub
test
int3
push
lret
pop
rcl
and
mov
ljmp
inc
push
scas
xor
jecxz
jmp
mov
stc
pop
add
adc
mov
cmp
push
in
stos
out
iret
pushf
cli
shlb
fidivrs
sub
or
fcoms
add
loopne
mov
iret
adc
testl
add
push
xchg
enter
mov
xlat
int3
leave
or
and
mov
add
ret
inc
cmp
mov
cli
lods
nop
sub
ss
das
sub
mov
shlb
xchg
jle
repz
sbb
std
mov
xchg
mov
mov
pushf
testb
ficompl
rcl
mov
jae
aas
xlat
dec
sahf
jb
mov
and
lods
jecxz
test
mov
add
das
mov
mov
cmp
sbbl
fcmovnu
mov
pop
pop
lods
inc
mov
sbb
dec
movsl
mov
mov
gs
cmp
fnstsw
shll
xchg
dec
cmc
sub
cmpsl
stos
das
dec
mov
pop
cmc
jnp
push
pop
lret
mov
mov
clc
mov
xor
stos
rolb
jnp
push
xchg
mov
ret
jl
push
es
or
mov
insl
xchg
cld
mov
ljmp
inc
lods
shlb
mov
addb
ret
lcall
fistpll
movsb
test
js
xchg
sub
and
fucomp
cmp
rolb
mov
sar
sub
pop
add
mov
xchg
xchg
inc
mov
sbb
lcall
in
or
cmp
shll
mov
fdivs
cmc
dec
push
test
mov
xor
dec
mov
xchg
cmp
or
in
fwait
xchg
sbb
dec
pushf
imul
pop
iret
insl
bound
shl
in
or
imul
mov
aam
mov
test
jp
sub
mov
iret
addr16
pop
in
decl
out
jne
sub
xchg
fistps
ret
push
xchg
fsubrl
mov
cli
inc
out
sub
mov
insb
stos
jb
fldcw
and
fucom
insb
mov
out
jle
add
in
test
mov
ret
mov
xchg
mov
push
jae
dec
cmp
mov
rcrb
mov
cltd
loop
jp
movsl
xchg
jo
loopne
dec
mov
imul
scas
aaa
lods
or
icebp
dec
rolb
mov
fimuls
mov
push
jle
hlt
xor
jns
mov
adcl
inc
xor
lea
shlb
mov
dec
xor
sub
int
jae
mov
stos
jo
sbb
scas
jb
lret
and
jp
movsb
and
nop
jbe
xchg
pop
jge
jbe
enter
daa
stos
clc
cmp
jno
dec
enter
pop
dec
pop
imul
aaa
scas
and
popf
and
push
mov
adc
and
cmpsb
mov
scas
js
aas
xchg
pop
sbb
cmc
push
sbb
add
fwait
sub
jmp
fwait
ds
sahf
movsl
add
mov
dec
sub
stos
sbb
xchg
and
xor
pop
add
adc
jp
add
adc
mov
es
popf
stc
cmp
outsb
cmc
lds
sbb
adc
test
sti
jg
out
pop
mov
and
out
xor
push
fcmove
xchg
int
xchg
popa
fcomps
pushf
mov
shrl
mov
jmp
insb
test
cmp
outsl
lret
loop
or
fs
mov
push
cmp
push
ret
and
loope
cli
add
sub
cmp
divl
or
jg
enter
shl
or
add
je
imul
add
in
lods
cmp
sbb
xlat
or
mov
jo
jbe
dec
mov
xor
mov
nop
pop
dec
dec
dec
mov
inc
fldcw
cmc
test
ret
xchg
xchg
xor
sbb
js
daa
adc
pop
aam
ljmp
dec
bnd
mulb
jmp
loopne
inc
dec
push
lea
jbe
lcall
repz
je
cmp
jecxz
insl
or
mov
pushf
fstps
fwait
lea
mov
push
xchg
xor
cmpl
imul
dec
das
lret
xchg
mov
sbb
xchg
and
cmp
roll
lcall
leave
jo
lock
test
mov
mov
lret
divps
mov
push
xor
sbb
pop
push
stc
mov
sbb
sub
push
aam
and
or
andb
xchg
push
xor
or
iret
mov
push
imul
sbb
mov
jne
sahf
mov
cmovbe
add
repnz
sbb
popf
mov
lcall
adc
cmp
push
xor
loope
sbb
pop
lods
jb
stos
gs
inc
out
mov
mov
dec
cmp
push
jns
xchg
movsl
jae
or
movsl
mov
fstpt
pop
jns
ljmp
jmp
xchg
or
push
pushf
fwait
mov
pusha
push
repnz
or
mov
jmp
mov
in
jns
outsl
repz
mov
cwtl
mov
mov
mov
iret
test
or
jp
dec
lock
pandn
push
xor
clc
into
jne
js
pusha
mov
adcl
xchg
sbb
mov
xor
mov
into
jno
dec
leave
popa
and
imull
insb
rep
jnp
inc
sahf
jle
test
inc
adc
pop
iret
cmp
in
je
leave
push
repnz
movsb
jo
jae
cld
rcll
jbe
rcrl
ss
dec
inc
sar
xchg
sub
add
imul
scas
lcall
rcrb
inc
pop
mov
leave
into
push
jno
jle
lahf
arpl
inc
cmp
mov
xor
adc
dec
xchg
js
jnp
int3
or
mov
push
int3
fwait
cmp
or
mov
fs
jo
fwait
scas
push
incl
and
mov
js
movsb
lods
sbb
push
lods
xchg
jbe
mov
jge
aad
enter
daa
test
sbb
jno
xchg
mov
cmpsl
dec
movl
xor
push
pop
mov
test
xor
icebp
inc
shrl
cmpsb
and
mov
js
xchg
mov
push
gs
sbb
pop
sub
fldt
cmp
imul
jne
xchg
cmp
mov
mov
clc
add
mov
inc
lcall
cmc
cltd
sub
xchg
sub
mov
cmpb
and
sub
mov
xchg
jbe
add
popa
jg
outsl
push
mov
pusha
jge
dec
mov
mov
in
out
jecxz
fisttpll
fcoms
pop
testl
loope
add
mov
jbe
inc
sbb
lods
sub
push
mov
pmaxsw
test
push
and
test
mov
mov
cwtl
adc
cmpsb
xchg
ss
lcall
sub
jl
cmp
sub
mov
sub
cwtl
hlt
or
out
es
cmpsl
cld
mov
loopne
push
dec
pop
leave
inc
imul
and
or
sub
add
or
ja
lods
and
xchg
xlat
dec
adc
sub
sbb
mov
pop
sti
sti
jbe
jg
xchg
gs
mov
dec
in
ss
inc
loopne
out
in
mov
repz
sub
xchg
push
jne
sbb
rep
xor
pop
xchg
adc
jo
dec
sub
jmp
push
xchg
cs
adc
aad
or
inc
push
push
jb
fwait
repz
or
and
push
cltd
jl
mov
sub
pop
fs
mov
int3
dec
xchg
add
fstpt
fcoml
inc
xchg
and
lock
mov
mov
shll
mov
push
call
notb
lcall
test
sarb
lds
or
push
ljmp
ret
mov
lahf
pop
jno
arpl
in
pop
cltd
sub
ss
gs
lcall
insl
cmp
inc
clc
les
test
jp
imul
inc
scas
and
stos
and
push
ja
push
lret
jns
das
shld
inc
add
divl
test
push
test
fnstsw
jle
xor
xchg
mov
sbb
and
pop
stos
push
gs
add
sbb
push
or
inc
xor
push
or
mov
xor
aaa
je
hlt
xchg
pop
xchg
mov
call
ja
sahf
cltd
dec
cltd
movsl
popf
inc
push
or
or
sti
jae
in
aaa
push
xchg
in
add
cmp
movsb
out
sbb
sub
mov
in
mov
xchg
pop
xor
mov
incl
or
mov
hlt
jp
pop
sbb
push
clc
dec
mov
jnp
dec
sbb
jne,pt
daa
pop
pusha
cmp
mov
pop
inc
fwait
xchg
adcb
jmp
call
rorl
adc
jbe
ljmp
and
bound
test
pop
adc
xchg
inc
cmp
xor
inc
adc
inc
iret
pushf
cld
pop
ret
aas
pop
add
inc
scas
in
jae
in
pop
push
cmp
ds
es
push
push
push
out
add
popf
sbb
push
scas
std
addl
ja
cmpb
cmp
hlt
leave
jmp
fsubrs
pop
or
add
fmull
mov
sub
push
out
int3
xchg
ss
rcr
adc
pop
mov
pop
jo
sub
hlt
and
jl
cmp
stos
shll
and
mov
pop
and
call
out
cmp
pop
hlt
jno
add
aas
lods
mov
fdivr
push
mov
xchg
add
dec
push
push
or
test
sti
movsl
cltd
inc
lds
in
das
popf
loop
bound
mov
jl
mov
xor
push
cmp
ds
inc
cmp
data16
push
aam
dec
orb
push
sbb
pop
xchg
add
enter
inc
or
int3
sub
dec
pop
adc
sub
aam
and
sub
outsb
ss
jp
fidivs
mov
push
and
jl
and
mov
int
mov
je
or
rcrl
mov
std
xor
adc
fdivrl
jnp
push
dec
outsl
mov
loop
dec
xor
cmp
push
adc
rol
sub
sub
mov
cwtl
out
xchg
pushf
cli
imul
xor
or
mov
cmc
push
in
loopne
outsl
lds
test
adc
imul
leave
add
jl
lods
or
into
cmp
ret
mov
sub
repz
inc
fisttpl
stos
notb
gs
test
dec
inc
repz
les
in
sbb
in
sbb
outsb
aas
and
pop
cmp
adc
fildl
neg
lock
cli
ss
outsl
mov
ja
inc
test
mov
scas
push
dec
and
jle
pop
or
lea
cs
pusha
mov
aas
mov
xor
loope
push
mov
xchg
lock
ds
and
cwtl
mov
jle
pop
shll
adc
std
dec
mov
cmpsl
cmpsl
xchg
inc
mov
pushf
add
xchg
lret
in
xchg
add
sub
pop
nop
jmp
sub
xorl
sub
in
and
out
clc
ljmp
mov
xchg
cmp
fildll
add
in
and
push
sbb
add
jmp
sbb
cltd
mov
incb
lahf
jle
imul
frstor
fisubrl
dec
ret
into
sbb
mov
pop
add
stos
inc
cmp
out
addr16
xchg
imul
pushl
mov
data16
xor
cmp
add
mov
mov
mov
ja
sbb
dec
mov
orb
fistps
cmp
add
xchg
sbb
bound
jmp
sbb
add
lret
mov
out
or
xor
jp
lcall
jg
adc
test
imul
jne
cmp
xlat
mov
xchg
push
adc
dec
arpl
or
sub
cs
test
sub
ja
and
add
inc
imul
adc
adc
push
sti
iret
sti
mov
ret
inc
pop
aaa
popf
mov
jae
and
push
cld
scas
dec
popf
dec
and
sbb
push
and
xchg
aas
cli
xchg
jne
mov
xchg
aas
scas
pusha
fcmovbe
push
fwait
add
rclb
repnz
pop
aas
leave
mov
push
andl
adc
or
mov
pop
xchg
test
dec
mov
jno
jb
add
fiadds
add
lds
jae
push
aam
scas
psubusw
out
mov
push
dec
push
jbe
shll
jge
mov
daa
cmpsl
mov
cmp
xchg
les
jbe
movsl
cmp
xchg
xchg
push
xor
sahf
inc
cli
lahf
lahf
arpl
test
data16
pop
into
cmpsb
sub
ja
push
ljmp
flds
push
pop
imul
xor
cmp
sbb
aam
rolb
pop
xor
andb
in
sbb
out
xor
mov
int3
cmp
js
jmp
or
lcall
jmp
xor
ds
cmp
int
lret
jp
mov
adc
mov
sbb
leave
and
jb
push
jecxz
int
mov
rorb
add
xor
jg
sahf
or
and
lds
shrb
inc
fsub
stos
mov
stc
repz
fs
jmp
lods
ss
or
cmp
inc
mov
jb
sahf
fists
xor
cmp
xchg
push
xor
loope
movsb
into
insl
lock
cmc
sbb
rcrl
pop
into
mov
imul
das
add
negb
lock
cmc
cmp
xlat
enter
in
test
mov
mov
add
pop
cmp
lds
dec
gs
loopne
cwtl
ja
dec
stos
push
or
int
fsts
mov
mov
cwtl
adc
loope
call
mov
pop
in
lahf
cmp
and
sub
xchg
mov
insl
aad
mov
inc
mov
push
scas
jb
data16
clc
iret
outsl
je
add
ret
andl
mov
pop
cwtl
sbb
mov
sub
aas
fistl
xchg
movsl
lahf
push
lock
xchg
add
xor
push
mov
or
shl
pop
fcomip
sbb
out
dec
loope
andl
jae
jns
lcall
lret
pop
rcrl
xchg
and
mov
scas
or
rclb
ret
cmp
stos
out
ret
mov
cs
or
clc
cmp
or
sub
adc
jns
mov
sahf
push
das
outsb
dec
packsswb
in
add
mov
sarb
mov
or
push
cs
mov
test
pop
je
into
push
pushf
sbb
xorb
lods
mov
adc
lret
xchg
mov
push
add
loopne
xor
fst
or
mov
xor
adc
xchg
bswap
dec
out
or
stos
and
ja
sbb
inc
jle
mov
ret
fwait
inc
out
push
push
add
mov
int
out
jle
cmc
pop
out
jns
sbb
cli
xchg
movsl
adc
push
hlt
push
mov
rcr
addr16
adc
leave
cmpsb
popa
mov
sbb
inc
dec
push
jne
mov
pusha
jb
mov
xchg
sub
jmp
jle
addl
mov
sub
push
cmp
cmp
fs
loopnew
jnp
in
jle
pop
cwtl
in
movsl
cmp
iret
pop
sbb
test
outsb
fimull
jae
popf
notb
mov
xor
push
dec
inc
stc
fiaddl
sbb
sbb
outsl
inc
imul
xchg
scas
ret
es
xor
repnz
cmp
xor
arpl
adc
inc
inc
shl
or
jns
xchg
mov
push
xchg
add
sahf
pop
das
fcomps
mov
pushf
ret
mov
out
lret
cmpsb
and
icebp
cmp
push
int
cltd
and
jbe
and
jge
dec
dec
enter
daa
cmpsb
in
cmp
inc
sbb
push
dec
adc
insb
push
js
mov
push
scas
sbb
cmp
cmc
lahf
mov
push
cmp
xchg
jnp
inc
cmpb
cmpsb
lods
in
in
std
sbb
pop
sbb
loope
dec
sub
cmpsl
cmpsb
cmp
aam
movsl
and
rcrb
push
xchg
or
xor
jle
pop
adc
sub
xor
cmp
lcall
in
mov
push
andb
faddl
dec
cmc
outsb
cld
xchg
adc
adc
xor
push
sbb
mov
cwtl
shll
cltd
sub
out
jmp
and
fadds
mov
ror
mov
sbb
mov
lods
sbb
loop
and
lods
outsl
inc
cmp
stc
stos
fistps
adc
hlt
cmp
mov
or
mov
push
in
cli
shll
xor
jae
or
pop
into
push
fdivs
loopne
dec
add
adc
jo
imul
pop
add
cwtl
stos
data16
jecxz
lods
xlat
jb
cmp
pop
in
pop
std
xchg
mov
sbb
sub
or
call
jne
nop
jae
push
dec
or
xchg
inc
sbb
inc
sbb
xchg
mov
nop
call
or
out
adc
add
push
sahf
jne,pn
mov
inc
mov
and
jb
cltd
xchg
dec
outsl
popa
sbb
add
mov
mov
mov
std
or
xchg
addb
dec
adc
push
jge
fcmovnb
rcl
pop
cmc
inc
outsb
inc
sub
dec
lock
mov
das
fiadds
stos
mov
xchg
mov
inc
dec
jle
pusha
mov
std
adc
xchg
dec
fcompl
iret
cmpsl
movsl
push
and
ds
jo
dec
outsl
aam
sub
mov
or
xchg
and
sub
test
js
inc
sub
clc
insl
icebp
push
jae
aaa
outsb
mov
popa
push
sub
mov
mov
movsl
loope
or
mov
ret
add
jmp
test
mov
push
icebp
call
mov
xchg
or
lods
jne
shrl
lods
stos
and
cmp
sub
add
mov
in
test
dec
push
aad
insl
mov
xor
aaa
xchg
out
mov
push
lret
and
ja
popf
add
inc
adc
aad
fwait
jb
sbbl
scas
dec
push
mov
xchg
shr
je
bound
dec
xor
push
inc
movsb
xchg
hlt
out
mov
pushf
out
mov
mov
hlt
jecxz
jmp
cmpsl
mov
jbe
mov
xchg
into
jne
mov
pusha
or
mov
and
inc
inc
mov
dec
and
orl
push
out
out
sub
movsb
scas
cmpsb
push
cmpsl
xchg
and
push
insb
shrb
jnp
dec
outsl
jle
aad
in
sahf
or
loope
scas
iret
mov
mov
xchg
inc
sarb
jae
pop
jmp
popf
fwait
and
mov
mov
into
push
sbb
xor
lds
scas
xor
enter
shrl
bnd
mov
hlt
stos
ds
arpl
or
sbb
fbstp
ja
insb
or
xchg
int3
inc
imul
cli
mov
inc
jle
lds
jge
les
int
dec
and
mov
pop
push
call
call
mov
fnstcw
fdivrl
fadds
jno
and
jl
xor
inc
cs
pop
pop
jno
sbb
lahf
fnstsw
push
rorb
test
pop
in
inc
punpcklwd
cmpsb
xor
in
in
pop
js
mov
pop
push
imul
jne
mov
cmp
arpl
fs
push
icebp
cltd
jo
inc
in
repz
push
int3
xor
addr16
push
mov
pop
lds
sub
mov
negb
fstps
sahf
sub
mov
pop
lds
adc
das
aam
jg
xchg
xor
sub
in
mov
imul
jmp
and
testl
add
pusha
das
sbb
popa
movsl
sahf
dec
adc
test
sub
jnp
lea
xor
stc
popa
pop
push
fdivl
arpl
repz
mov
mov
popf
std
out
idiv
cli
add
mov
cmp
fs
mov
mov
cmc
stos
fdivp
loopne
fsubrs
pop
inc
push
adc
lock
imul
sub
add
data16
pop
lods
mov
addr16
xlat
inc
shrl
mov
xchg
jb
mov
repz
cs
dec
and
dec
imul
mov
repz
xor
sbb
fildll
push
mov
pop
push
jecxz
adc
adc
clc
loope
jmp
ds
fadds
aad
xchg
xlat
inc
mov
cmp
add
dec
out
dec
je
jge
jecxz
icebp
jno
leave
out
cmpsl
lea
sti
mov
out
mov
mov
dec
cmp
push
aam
cwtl
cmc
dec
inc
mov
in
jno
xor
mov
repnz
lock
aam
mulb
les
dec
xlat
cmp
movsb
popf
ja
jno
fwait
icebp
and
cld
push
rcr
lret
cmp
xor
and
pop
in
es
sarb
pop
clc
sub
mov
es
pop
insl
fsubrs
clc
mov
cld
xchg
jbe
and
push
dec
insb
popa
and
ljmp
adcb
dec
dec
mov
mov
push
test
cltd
cs
xchg
cmpsb
hlt
push
mov
cli
fstp
nop
sbb
xchg
std
add
roll
mov
add
data16
nop
lahf
cmp
mov
pushl
pushf
xchg
inc
or
push
sbb
xorl
xor
addr16
xor
xchg
pop
and
ja,pt
movsl
dec
gs
add
or
sbb
mov
call
ret
je
out
xchg
outsb
add
jns
sbb
in
jle
xchg
inc
add
mov
mov
pop
or
pop
mov
mov
push
mov
test
dec
movsl
popf
pop
jne
lret
test
arpl
aam
add
cmp
jmp
lcall
sub
ffreep
rcll
aas
leave
stos
mov
push
cmp
jge
jle
inc
and
sti
test
mov
dec
sbb
mov
outsl
pop
faddl
inc
fildl
xor
xor
popf
ret
push
dec
mov
fisubrl
mov
imul
cltd
scas
mov
xlat
shl
ds
rolb
stc
leave
and
sub
cmc
push
popf
arpl
aad
dec
mov
or
out
xor
ss
xchg
adcb
xor
xchg
loopne
fsubrp
test
adc
aas
xchg
scas
lods
mov
xchg
cmp
mov
push
aaa
xor
jbe
and
jge
or
enter
daa
movsb
bnd
or
pushl
sbb
pop
dec
repnz
mov
ds
xor
outsl
xchg
sbb
cld
adc
test
daa
mov
outsl
cmpsb
mov
and
lret
sub
js
icebp
adc
xchg
ret
dec
push
loope
push
pusha
sub
dec
cmp
aaa
mov
xchg
movsl
das
dec
and
push
mov
sbbb
sbb
cmp
cmp
dec
clc
sbb
adc
hlt
cld
sub
pop
or
mov
cmp
daa
dec
ja
or
aas
adc
dec
mov
jg
sub
mov
and
mov
xchg
std
and
mov
push
in
daa
pop
int
mov
fdivr
fidivrl
lret
ffree
testl
sbb
cli
scas
test
in
addr16
stos
and
add
inc
loop
ss
stc
sbb
mov
imul
ss
cmp
xor
mov
andl
cli
aaa
scas
and
jecxz
pop
cmp
sub
or
iret
cmp
push
test
jb
pop
loopne
jns
pop
fs
cltd
imul
jge
add
ret
call
lods
movsl
jb
cmp
mov
test
pop
sub
out
mov
repnz
sti
popfw
jne
cs
nop
sub
dec
enter
aas
loope
fincstp
inc
imul
pushf
aaa
pop
xchg
test
call
or
negl
xchg
lahf
adc
lods
test
xor
cmp
aad
mov
inc
icebp
les
xor
cmpsl
jb
fwait
pop
dec
pop
jo
je
mov
sub
int3
push
stos
ljmp
mov
push
mov
push
cmpl
enter
pop
pop
cmp
xchg
lock
ja
das
pushf
jl
mov
xor
rcr
mov
xchg
bound
mov
cmpsl
mov
stc
sbb
cld
or
lret
test
lret
mov
mov
mov
or
or
or
add
adc
addr16
lahf
ja
gs
es
add
pop
clc
jmp
clc
xchg
mov
mov
xor
leave
lods
lods
cmp
mov
mov
adcb
mov
addb
test
adc
mov
fcomi
push
ja
jp
call
xor
adc
rcrl
xchg
pop
scas
inc
lds
repz
test
jmp
push
adc
xor
cmp
pop
cwtl
xchg
test
test
in
testb
fisttpl
jecxz
gs
dec
pop
fucomp
inc
inc
push
orb
adc
push
les
add
add
out
jae
jbe
scas
scas
pop
jns
push
in
or
sub
sub
mov
add
jp
scas
jae
dec
cmpb
sub
dec
mov
jne
insl
or
xor
xchg
mov
into
cmp
flds
sub
sbb
push
and
ret
out
jle
out
test
loopne
mov
movsb
and
mov
mov
ja
sbb
enter
adc
inc
out
ret
mov
dec
popf
jmp
icebp
and
sub
ficompl
cmp
stc
xor
fistl
scas
in
ret
or
sar
xor
and
nop
hlt
inc
mov
arpl
stos
adc
dec
shll
sbb
clc
cli
or
movsl
add
loop
sbb
mov
mov
or
jge
hlt
jo
xor
fsubs
mov
mov
movsb
out
test
push
xchg
sbb
iret
adc
rorl
mov
nop
fidivs
cmp
push
dec
popa
pop
jne
and
xor
or
add
test
repnz
inc
sub
iret
sub
mov
cmp
pop
aad
sub
in
inc
loope
adc
jecxz
dec
cmp
pop
cmc
ds
in
shrb
aam
subb
sbb
push
ds
cmpsb
imul
fdiv
pop
adc
sub
lret
mov
ljmp
add
faddl
push
aaa
outsb
and
or
andb
jg
rcrl
cwtl
loop
mov
xchg
pushf
mov
or
call
int
das
dec
fdivrs
push
mov
mov
xor
sahf
xchg
xlat
add
xor
loopne
divl
stc
iret
inc
sti
repnz
ss
cmpb
int
out
iret
lahf
cli
push
pop
xor
ret
add
into
stc
inc
inc
cmc
cmp
loopne
cs
adc
mull
jno
lret
fs
cmp
mov
pop
sub
outsl
test
pop
jmp
sti
adc
lock
nop
add
in
daa
mov
dec
fldcw
mov
loope
imul
sbb
aad
sbb
mov
pop
mov
sti
test
ljmp
fidivl
adc
iret
lahf
jo
dec
imul
in
divl
add
stos
xor
lea
gs
pop
mov
mov
inc
repnz
dec
adcl
data16
push
pop
fidivs
inc
roll
daa
js
das
jnp
xor
jl
cmp
xor
mov
imulb
adc
int
in
mov
shll
icebp
iret
fwait
pop
cld
stos
lcall
adc
or
push
out
pop
sub
rcr
adc
sub
xor
aam
fstps
es
adc
es
push
xchg
hlt
aas
mov
popa
scas
pop
xor
hlt
sbb
mov
andl
cltd
pushf
xor
test
sbb
mov
push
dec
push
cmp
frstor
ja
test
dec
add
mov
shll
lret
push
stos
out
fiadds
xchg
int3
and
call
pop
aaa
or
jle
xor
sub
xchg
sub
dec
mov
pop
xchg
rcrl
ja
inc
push
dec
dec
rcll
fcmovbe
mov
fwait
decl
push
addr16
inc
sub
lods
out
push
outsb
mov
jns
test
in
out
test
mov
dec
cmp
lods
adc
int3
jp
mov
mov
mov
movsb
mov
xchg
sbb
outsl
inc
fists
and
xchg
je
add
sub
inc
cmpl
aam
add
mov
fs
stos
jno
dec
and
or
jnp
and
jle
stc
jae
pop
loope
adc
dec
iret
mov
pop
dec
aaa
dec
inc
icebp
xchg
sub
push
lret
and
scas
push
dec
sub
pop
xchg
sub
add
out
push
scas
dec
loopne
push
fwait
jle
sbb
adc
jbe
leave
adc
mov
arpl
adc
inc
push
arpl
add
jge
aaa
mov
mov
add
imul
jmp
fisubrs
fstp
lds
xchg
jo
aas
mov
push
mov
cmp
movsb
jp
and
aad
cmp
lock
jge
pop
xor
lret
daa
mov
fdivl
or
inc
xchg
lret
mov
push
add
xchg
xor
movsl
mov
lahf
cmp
push
dec
pop
popa
test
mov
pusha
mov
cltd
pop
js
and
pop
adc
inc
push
and
mov
movsl
dec
cmp
lods
ds
fs
cmp
fidivrl
push
clc
inc
addb
mov
push
cld
fwait
les
sub
cmpsl
pop
or
lcall
mov
sub
fadd
outsb
mov
sahf
addb
int
jmp
xor
fnsave
and
flds
repnz
test
mov
fdivs
push
testl
out
dec
mov
or
cmp
mov
mov
dec
loop
in
stc
xchg
cwtl
adc
push
ss
mov
mov
inc
imul
add
cli
popf
mov
xor
xor
or
ja
fdivr
outsb
cmc
add
loopne
notb
pop
mov
stos
inc
imul
jo
add
ret
data16
and
lods
jae
dec
cmp
rcl
add
sub
push
andb
popf
clc
sti
les
scas
je
ja
pop
jns
nop
fildll
insb
inc
gs
xor
gs
idivb
repz
xchg
lods
ljmp
push
inc
mov
adc
insl
inc
pushf
stc
pop
and
inc
xor
add
sbb
inc
xor
outsb
jl
jb
outsb
sub
dec
rcpps
test
shlb
lea
insb
mov
popa
ss
dec
mov
scas
pop
add
call
das
pop
andb
adc
mov
and
sbb
imulb
std
mov
mov
cmpsl
mov
out
cmpsb
repnz
cld
cmp
lret
xchg
push
mov
lret
bnd
pop
dec
jb
shlb
test
js
adcl
es
subb
clc
popa
lret
xor
mov
adc
into
cmp
xorl
mov
shll
jbe
rorl
ds
add
cld
or
mov
adc
push
std
push
sub
dec
inc
push
test
ja
xchg
mov
rorl
lock
pop
stos
fisttpll
out
mov
movsb
insl
add
push
dec
pushl
daa
adc
dec
or
mov
repz
dec
repnz
pop
push
xor
dec
jns,pt
inc
jno
xchg
or
in
fwait
cs
scas
push
or
mov
mov
test
out
xor
aam
pop
jns
xlat
in
es
xchg
xor
xchg
jp
jle
cmpsl
push
xchg
add
mov
mov
xorl
dec
dec
xlat
int
in
push
fbstp
add
inc
dec
push
jmp
jne
out
inc
pop
xor
cmp
sub
nop
jl
push
mov
or
and
sub
sahf
sub
xchg
in
push
adc
xchg
xor
int3
dec
pop
subl
loop
mov
fstps
push
andb
mov
fcmovb
pop
out
xchg
jg
inc
sbb
orb
mov
sub
shlb
mov
leave
ret
out
leave
xchg
and
jg
arpl
mov
or
and
mov
pop
mov
add
mov
repz
cwtl
pop
sbb
out
in
lds
pop
jne
dec
scas
and
and
cmp
jle
movsb
add
leave
jbe
mov
das
enter
daa
mov
lods
sub
jmp
jl
popf
push
push
out
out
ss
out
inc
mov
push
push
sbb
mov
mov
sbb
cmpsb
cmp
add
subb
call
jne
push
out
push
adc
sub
cmpb
jmp
ds
ljmp
arpl
dec
adcb
scas
add
jle
xor
or
pop
popa
cli
insb
sub
and
jge
push
divb
and
xchg
outsb
jmp
cmpsb
adc
fwait
les
mov
add
mov
sub
pop
mov
cmc
hlt
dec
int
into
loopne
sbb
lret
popf
sarl
sbb
lods
sahf
fldt
lea
or
loop
mov
or
adc
mov
ljmp
into
insl
lea
xorb
xor
sub
jno
or
pop
into
mov
stc
fucom
inc
rcrl
pop
rcl
adc
cld
push
imul
push
add
push
mov
pop
mov
insl
xlat
inc
aam
sub
jecxz
in
xor
sti
jae
inc
xchg
xorb
mov
nop
mov
or
inc
js
or
les
jmp
ret
xchg
outsl
lret
and
lret
and
mov
pop
pop
fisubrl
adc
add
pushf
movsb
fcoms
jmp
cmpsb
dec
cs
aad
fs
inc
cmpsb
test
or
movsl
iret
dec
ret
je
data16
enter
aad
add
jge
nop
mov
stos
loope
push
and
sbb
push
pop
and
pop
inc
iret
jo
lock
mov
mov
jae
dec
into
push
ror
popf
lret
cmp
dec
ret
jle
cmpsl
mov
movsb
mov
jge
push
cld
add
xchg
cltd
subb
imul
jno
insl
dec
mov
adc
adc
mov
cmc
clc
pushf
or
jb
pop
ljmp
pop
lods
out
cs
mov
enter
push
add
setge
cltd
or
test
dec
out
popf
adc
fnsave
test
cmp
xchg
adcl
leave
lods
shll
or
xchg
stos
int3
jl
out
sbb
cli
xchg
pop
xchg
sub
int
aam
sbb
call
aaa
add
jno
mov
div
nop
dec
pop
in
pop
or
and
in
fisttpl
aad
inc
or
lret
jnp
fwait
pop
adc
push
lods
sub
mov
mov
out
adc
bound
fnstcw
shl
int
imul
and
hlt
or
and
jp
loopne
mov
mov
mov
dec
xor
jne
lods
cli
pusha
adc
into
fists
mov
sbb
jno
inc
xor
adc
adc
mov
movsb
pop
mov
loop
mov
and
test
int
lret
fcmovnu
jle
jg
in
push
loopne
sub
push
ret
adc
mov
cmpsl
jae
or
push
push
out
popf
pop
cmp
push
dec
mov
aad
fcoml
cli
gs
imul
es
mov
aaa
rorb
mov
sbb
cmc
leave
std
xchg
sub
arpl
add
jecxz
or
fistpl
xorb
pop
fmuls
dec
andb
or
int3
ficomps
pop
dec
and
fidivs
out
adc
ds
sub
in
and
cmp
pop
push
movsb
nop
test
push
jae
mov
jge
cmp
and
mov
dec
cmc
jno
js
jl
jge
dec
scas
aas
fmuls
lret
xor
fcmovne
data16
js
sub
sbb
test
push
fmull
fimull
fisubl
addr16
sbb
mov
mov
mov
loope
sbb
sub
pushf
lahf
cmp
pop
mov
movsl
dec
or
sarb
jo
int3
dec
inc
andb
adc
call
enter
leave
pop
mov
jl
dec
mov
pop
or
add
sub
faddl
mov
adc
mov
xchg
jg
mov
xchg
mov
jle
aam
loope
je
push
int
repz
fsubr
push
push
testl
out
rcll
mov
std
jmp
jle
push
test
lret
adc
addb
fs
stc
hlt
jae
fs
jne
adc
xchg
or
pop
jmp
out
icebp
jecxz
add
cmp
xchg
ljmp
cmc
mov
int3
loopne
ret
ficomps
adcl
sbb
adc
or
add
dec
mov
lods
inc
and
xlat
sbb
mov
sahf
jle
sti
and
gs
push
jno
xchg
dec
cmpsb
dec
inc
mov
inc
mov
pop
add
push
repz
xchg
xor
mov
call
pop
adc
pop
rcrb
adc
sub
jmp
stos
pop
cs
mov
aad
adc
inc
pop
sbb
aas
lods
inc
dec
jb
adc
je
repnz
xlat
sbb
fsubrs
lea
pushf
push
mov
and
pop
sbb
into
sub
pop
mov
lret
lock
insl
das
sbb
fdivrl
xlat
lods
rcrl
jp
div
jle
std
incb
rorl
scas
cmpsl
lahf
cld
outsl
mov
push
or
cld
sub
lret
gs
cld
mov
lcall
mov
cmpsl
sub
cmpb
cmp
mov
cmp
insl
pop
out
clc
xlat
ficomps
xchg
mov
mov
popa
hlt
sbb
lods
pop
jle
mov
mov
repnz
paddb
push
add
jns
test
pop
insb
mov
push
xchg
push
add
fstpl
mov
xchg
sub
shll
pop
lods
stos
mov
add
xchg
mov
mov
pushl
int3
xor
in
or
or
cli
adc
mov
stc
and
sar
pop
stos
dec
ja
mov
dec
and
jo
lahf
and
or
in
fwait
mov
ljmp
mov
mov
repz
out
mov
cli
inc
in
ror
xor
pop
stos
xchg
into
jnp
mov
adc
enter
popf
xchg
mov
lcall
jp
add
mov
dec
mov
xlat
mov
mov
jne
loopne
pusha
scas
mov
pop
xchg
in
push
mov
xchg
or
jnp
gs
out
push
add
mov
and
mov
fidivrl
pop
jnp
fucom
jle
mov
in
test
adc
std
stos
iret
repz
adc
mov
jbe
inc
adc
xlat
jae
bound
popf
test
movb
pop
fisubrl
pop
add
sbb
pop
loopne
xchg
push
in
scas
js
movsl
push
rorl
mov
repnz
lcall
insb
cwtl
arpl
aad
pop
rcll
sbb
rcll
or
insb
add
cmp
pop
js
cltd
ficomps
rolb
jo
shrl
jno
cmp
pop
mov
ret
jbe
or
jge
sub
mov
sbb
or
push
jl
xor
dec
sbb
fwait
or
jbe
cmpsb
lahf
xchg
sub
push
ret
test
push
cmp
or
dec
popa
lahf
js
shrb
add
loope
popfw
sub
aad
cmp
rorl
push
xor
rcrb
pop
fs
sub
cmpb
and
push
push
in
test
sbb
sub
sar
pop
xchg
in
jecxz
cmpsb
fsubrl
das
bound
mov
fsubrs
cmp
shll
jg
inc
pop
mov
repz
mov
push
sbb
sbb
push
sti
push
dec
repz
out
movsb
es
rol
lret
jns
ljmp
sbb
fiaddl
popf
pop
shrb
push
and
stos
lret
push
adc
testb
test
dec
mov
sbb
and
xor
imul
outsl
inc
or
push
into
test
jnp
push
pop
lret
enter
sahf
add
xlat
cmp
imul
add
adcw
lods
sub
and
sub
push
in
or
pop
fucom
aad
je
dec
nop
jo
pop
dec
mov
mov
adc
pop
mov
das
xchg
cmc
call
jae
rcll
pop
test
insb
pushf
cli
dec
dec
jmp
jb
sub
clc
inc
js
xchg
aas
dec
sub
jb
mov
dec
mov
mov
jecxz
in
lahf
fistl
fmull
repz
mov
pop
add
jo
dec
mov
addb
push
xchg
inc
jo
imull
mov
and
xor
nop
divb
mov
ret
fdivrl
sub
sbb
push
sbb
lret
aam
xor
sahf
mov
sub
cmpsl
loope
shrb
lock
sub
loop
aam
or
stos
es
insl
inc
dec
pushf
clc
adc
xchg
lock
ljmp
mov
mov
movsl
aas
and
pop
aad
cvtdq2ps
add
loop
cltd
js
bound
fisttps
ffree
repz
test
js
xchg
pop
aaa
sbb
mov
cld
stos
stos
sub
out
loop
cmc
xchg
call
jge
call
mov
orb
adcb
or
mov
cld
xchg
dec
daa
divl
pop
add
ja
test
dec
pop
test
rorb
push
fwait
mov
subl
dec
and
into
popf
cmc
bound
jae
in
shrl
sub
enter
and
cwtl
fisubs
lahf
aad
push
fneni(8087
mov
adc
dec
mov
movsb
dec
jne
ja
pusha
dec
xor
mov
jmp
sbb
xor
or
les
push
sub
inc
push
and
icebp
pop
cltd
insb
mov
mov
jle
ja
lods
adc
je
iret
push
inc
mov
daa
mov
dec
inc
sbb
cld
sbb
xlat
js
popf
lods
mov
push
inc
push
dec
fcmovu
ljmp
push
lods
or
push
scas
fcmovnu
ficoml
push
add
sbb
shl
ret
leave
jmp
cmc
hlt
mov
push
arpl
daa
inc
pop
xor
or
push
add
aaa
mov
pusha
or
test
cmp
mov
mov
cmp
pop
cli
fidivrs
mov
scas
scas
out
mov
cmp
push
movsb
cmpsb
arpl
adc
xor
jge
scas
mov
mov
xor
cmp
in
in
mov
add
xor
adc
lahf
mov
jmp
xchg
cmpsb
lea
jmp
ret
lds
sarb
jb
pop
adc
loopne
push
mov
cmp
xor
push
shl
push
sbb
or
rcrl
lds
cmpb
cmpsl
mov
sub
test
lcall
add
sub
and
adc
in
mov
mov
mov
imul
sbb
aad
int
ljmp
jg
ret
outsb
xchg
roll
popf
sbb
xchg
lds
and
sbb
loop
mov
stc
vpcmpgtb
pop
jecxz
enter
ret
in
push
mov
icebp
mov
imul
cmp
sub
dec
into
push
sub
pop
loope
pop
push
or
stos
es
add
rclb
dec
lret
add
loopne
psrld
pop
mov
sub
lock
mov
je
in
orb
incb
test
nop
dec
cmp
inc
mov
pop
flds
aaa
les
and
repz
xchg
xchg
mov
mov
cmp
add
jne
adc
lahf
mov
std
and
lea
sbb
cmp
jb
and
daa
std
ret
je
pop
adc
cmc
add
cmp
push
mov
shlb
sub
aas
dec
dec
stos
xor
fstpt
pop
or
pop
mov
das
mov
inc
mov
in
out
sarl
popa
jbe
dec
pop
popf
dec
mov
mov
mov
cmpsl
cld
orb
mov
stc
adc
pop
push
or
imul
aam
jmp
ret
mov
popf
jecxz
sub
ret
xchg
das
cwtl
iret
ljmp
mov
mov
jmp
push
std
push
loop
insb
dec
pop
add
imul
cltd
scas
test
test
lods
mov
pop
xchg
fucomp
dec
mov
xchg
pusha
sbb
shll
push
pop
mov
xor
cltd
cmpsl
test
inc
shll
das
test
add
adc
mov
in
loope
or
push
ja
cltd
cmpsb
xchg
add
mov
pop
pop
cmp
dec
in
or
jo
int
pusha
or
xor
call
add
and
mov
bound
enter
shr
outsb
dec
arpl
imul
mov
addr16
mov
cwtl
mov
add
xchg
mov
lret
fisubl
int3
jne
jb
pusha
in
aad
lods
mov
vpsubq
adc
mov
xchg
out
jb
sub
jl
out
lahf
mov
mov
insb
sub
jnp
sub
jle
out
add
jle
adc
notb
ret
push
pop
aad
inc
sub
rclb
out
mov
cli
xchg
roll
jmp
ficoml
lods
bound
push
enter
inc
scas
ds
aam
mov
cs
adc
xor
arpl
out
pusha
or
or
sbb
mov
outsl
fldenv
add
or
lahf
jb
pop
fwait
neg
pop
mov
lds
lahf
mov
lds
xor
and
jge
movsb
xor
inc
jbe
jge
mov
cmp
cmp
xor
notb
dec
sti
push
in
jae
sbb
lods
enter
xchg
test
mov
sti
inc
xchg
xor
js
mov
inc
push
mov
sub
les
cmp
cmp
mov
ror
data16
sbb
nopl
sbb
push
xchg
xor
jmp
push
aaa
pop
std
into
xchg
mov
std
jnp
push
jns
push
xchg
cwtl
stc
faddl
jae
adc
pop
cmc
inc
jg
mov
xlat
mov
test
mov
aad
and
or
fcomps
test
idivl
cmovb
add
rcrl
stc
mov
fistpl
add
movsl
test
cs
outsl
sbb
sub
stc
sbb
xor
daa
adc
mov
push
adc
out
mov
cli
pushf
das
mov
les
cmp
mov
sub
dec
jecxz
cmc
jecxz
mov
mov
and
jnp
adc
lret
imul
ljmp
mov
or
xlat
ds
push
mov
filds
add
and
data16
dec
popa
shr
inc
les
leave
les
mov
sbbl
test
adc
pcmpeqd
in
dec
mov
lock
test
inc
scas
ljmp
aas
mov
dec
sahf
push
shll
nop
jecxz
bound
loope
rorl
imul
jne
sahf
lahf
insl
dec
xchg
movsl
lret
fldt
cmp
mov
rolb
jbe
lock
push
jmp
mov
push
mov
ja
test
pop
cmpsl
out
mov
scas
add
mov
fld
sar
lods
rcll
lret
mov
mov
mov
or
pop
in
scas
rcl
pop
inc
sub
xchg
mov
cltd
push
sbb
dec
loopne
or
adc
and
cmpsb
inc
shll
and
lcall
mov
in
push
push
mov
andb
jmp
add
mov
mov
mov
adc
insb
xchg
dec
cltd
sbb
mov
sarl
push
stos
mov
jle
test
pop
xchg
jbe
stos
add
sbb
xor
in
fucomi
jno
test
mov
add
out
dec
cmc
cltd
mov
clc
mov
ja
jae
dec
std
dec
movl
sbb
fwait
sbb
test
cmp
shll
mov
jne
mov
dec
jns
mov
in
and
xchg
mov
ljmp
mov
addr16
sub
jp
movsl
ret
sbb
pop
push
aam
outsb
and
dec
mov
rolb
pusha
orb
xchg
imul
pop
cmpsb
xchg
insb
pop
add
lret
sub
mov
dec
push
ficoms
outsl
and
pop
mov
xchg
and
xchg
jle
cld
xchg
in
repz
adc
iret
ret
sub
jp
inc
xor
mov
lods
sti
xchg
push
pop
fisubrl
push
inc
add
fiaddl
xchg
xor
jbe
cmpsb
inc
lret
imul
mov
add
sarb
xor
bound
dec
mov
arpl
and
aas
in
aaa
cs
or
lods
xchg
add
dec
int3
mov
sbb
fiadds
push
in
lds
push
mov
mov
xchg
movsb
mov
adc
jbe
cmp
scas
or
mov
sti
cmp
adc
dec
push
loopne
push
cwtl
aad
sbb
outsl
and
add
cmp
add
push
jg
call
cmpsb
lret
jbe
in
add
add
xchg
scas
pop
mov
push
xor
sub
jns
cmp
aad
movsl
or
mov
xor
icebp
sbb
fcoms
xor
push
sbb
sub
jle
sub
into
pop
add
ss
icebp
fdivl
jae
sub
shll
sbb
andb
or
push
js
fucom
mov
divl
mov
fmulp
sub
fcom
adc
std
js
lret
or
mov
xchg
sbb
inc
add
xor
movsb
xor
fwait
cmp
cld
rorb
shlb
das
adc
xchg
aas
ss
mov
cmp
or
lahf
out
add
fwait
jo
cmp
and
cmpsb
cmp
into
cs
shl
stos
in
loopne
dec
test
out
or
push
pushf
fisubrs
inc
iret
adc
pop
adc
or
dec
lods
fstl
repnz
nop
push
xlat
jge
outsb
sub
cmc
jp
stos
sti
test
sti
fisubrs
push
mov
nop
dec
rorb
fldcw
in
dec
repz
jns
ds
or
mov
pop
movl
pusha
push
adc
movlps
popa
sti
cs
xor
aad
scas
inc
inc
leave
lods
jne
sub
mov
dec
adc
imul
add
in
rorb
and
xorl
xor
ljmp
push
sbb
inc
jb
cmp
movsb
stos
ret
das
xchg
repz
push
mov
push
rcll
add
adc
dec
stos
push
pop
cmpsl
fwait
nop
stos
mov
mov
or
fsubrs
lret
and
aam
inc
lea
jmp
ljmp
stc
int
int3
loopne
aam
movsl
add
or
es
into
les
shr
ret
divl
lods
mov
ljmp
xchg
lods
add
add
arpl
cwtl
and
leave
add
mov
push
test
cmc
xchg
mov
adc
push
dec
fnsave
stos
inc
test
sbb
enter
mov
jmp
xchg
mov
pop
or
out
push
xchg
pushf
or
mov
shlb
add
inc
xchg
pop
mov
cmp
pop
lods
dec
lock
inc
sti
sbbb
fcmovnbe
aaa
fwait
dec
out
push
fsubrl
lock
shlb
jmp
bound
jg
lods
inc
jns
test
xchg
or
es
sbb
or
or
aaa
lret
cwtl
mov
push
int
and
mov
inc
jl
mov
xchg
and
push
or
jmp
add
jmp
je
andl
xchg
sub
xacquire
stos
xchg
fldenv
ss
insb
add
cmpl
insl
in
aam
adc
out
outsl
outsl
mov
pusha
jge
pop
lret
ret
jae
ds
jae
popa
test
and
stos
popf
and
add
mov
pop
xchg
mov
sbb
dec
ret
imul
scas
add
popf
push
out
jb
rcl
aaa
mov
mov
es
cwtl
mov
imul
push
sbb
out
fimull
or
adc
int3
jne
negl
insb
mov
movsb
push
mov
mov
sbb
mov
loope
dec
jl
cmp
in
inc
jb
push
and
jge
xchg
daa
fwait
mov
cmp
loope
jno
push
pop
jl
dec
and
pop
call
xor
loop
cmc
lahf
adc
into
push
push
inc
test
dec
or
inc
movsl
push
xor
dec
adcl
popa
add
int
xchg
push
pop
push
loope
sti
lea
add
rcll
movsl
outsb
les
rolb
pop
clc
addb
adc
out
xor
and
pop
dec
adc
scas
push
testb
je
lcall
pop
xor
outsl
sbb
adc
cmp
push
adc
xor
mov
dec
adc
into
jne
pop
lret
stos
int
or
nop
xor
mov
or
inc
xchg
orl
or
test
push
in
fstpt
xchg
stc
xchg
and
xor
ljmp
outsl
push
push
lods
and
cli
add
repnz
and
pop
lock
mov
cmc
jno
pavgb
mov
pop
adc
and
pop
adc
and
jmp
add
lods
les
jo
adc
xlat
mov
push
repnz
mov
sar
lea
imul
jg
fdivl
sub
adc
icebp
les
repz
aam
add
call
add
pop
push
notl
xor
and
jmp
cmp
cs
adc
in
test
hlt
add
xor
mov
ds
call
out
imul
int3
inc
in
mov
xor
int3
int3
popa
dec
imul
fcmovne
lcall
stc
push
inc
lock
das
jae
jne
adc
mov
repz
fwait
dec
std
inc
xchg
movsl
cmp
cmpsl
lcall
icebp
xchg
cld
add
fcmove
nop
nop
jnp
sub
mov
neg
mov
and
add
ret
shlb
das
subb
jne
adc
xor
scas
arpl
mov
arpl
stos
loopne
push
into
cld
and
jae
fimuls
xlat
add
add
outsl
jno
push
or
stos
notb
dec
adc
pop
mov
test
in
xchg
inc
stc
sbb
xor
push
push
pop
mov
xor
outsb
xor
push
add
jne
decl
dec
lods
or
and
cmc
xchg
and
dec
ret
int3
jge
outsb
stc
cli
ja
dec
dec
dec
jecxz
adc
xchg
je
or
bound
push
jg
mov
jnp
das
mov
data16
dec
or
xor
jle
in
aam
xchg
pop
lcall
or
ret
mov
sbb
das
mov
lods
sbb
scas
mov
mov
dec
andl
mov
aas
fisttps
test
xchg
or
inc
jmp
add
and
rolb
imul
pop
into
inc
stos
or
dec
insb
imul
jle
repnz
adc
into
xor
pop
add
addr16
or
popf
dec
push
sbb
xor
inc
inc
rorl
loopne
push
sbb
sub
inc
dec
imul
icebp
xchg
adc
push
inc
mov
hlt
jecxz
call
inc
imul
sbb
aas
scas
or
cli
adc
int3
pusha
incl
pop
arpl
sti
fiadds
in
cmp
push
jo
bound
bound
and
rorb
data16
ror
push
push
dec
jne
jbe
dec
sarl
push
enter
daa
lcall
jno
mov
sub
mov
push
sbb
lahf
xor
jge
dec
lahf
xor
test
adc
gs
cmpsb
roll
ss
rcr
sub
add
push
xor
sub
pusha
stos
cmp
add
shld
adc
popl
mov
cs
inc
sub
dec
cmp
pop
push
mov
pop
jb
or
pop
add
sbbl
xchg
jno
pop
les
mov
lret
pop
stos
add
fmulp
mov
fcmovnbe
mov
mov
and
and
xor
testb
idivl
call
rcr
jbe
cmp
and
add
outsl
mov
ret
ds
fs
lods
adc
cld
lea
add
aaa
out
and
xor
sub
cmp
imul
push
pop
cmc
cmp
in
orl
pop
lcall
imul
mov
push
data16
lods
stos
loope
cmp
sti
out
jg
ret
lret
fsubs
in
and
lock
cmp
and
mov
repnz
mov
out
dec
jle
bound
lods
out
fstps
push
xor
cmp
sbb
sub
movl
sbb
adc
sub
aad
sbb
in
ljmp
aas
data16
das
jb
fld
dec
add
outsl
je
and
xor
pop
ljmp
cwtl
lcall
mov
pop
mov
arpl
iret
mov
cltd
jg
inc
adc
lock
lcall
das
push
cmp
mov
sbb
jmp
hlt
aaa
ret
xchg
cmpsl
std
call
mov
cmpsl
cltd
jb
mov
pop
mov
in
inc
xchg
mov
imul
rorb
adc
mov
scas
mov
sti
and
sbb
sbbl
cld
test
sub
pop
popa
jle
pop
lods
fstpt
cs
stc
imulb
inc
aam
and
mov
test
mov
pop
push
adc
cltd
repnz
mov
xchg
add
adc
jg
rcr
pop
pop
fucomp
stos
push
inc
aad
shr
pop
xchg
dec
cmpsb
dec
add
movsl
or
sub
cli
cmp
add
xor
mov
pop
xchg
insl
or
cmp
pop
sub
test
add
inc
sub
data16
cmpsb
gs
and
cld
mov
pop
jmp
bound
jns
pop
fs
stos
loop
test
mov
mov
mov
addr16
fildl
mov
sub
mov
mov
mov
jne
inc
ljmp
cmpl
push
jnp
xlat
out
mov
hlt
shl
push
sbb
sub
push
xor
and
insb
pop
pop
jnp
sti
imul
cmpsb
in
ret
and
clc
popf
ret
negl
inc
ds
push
and
stc
adcb
push
lcall
out
fiaddl
gs
cmp
sbb
fstl
xor
push
scas
lret
push
jge
pop
or
iret
mov
popa
ds
ds
mov
mov
jmp
dec
sbb
outsb
int
imul
repz
aaa
add
lods
loopne
dec
jmp
xchg
dec
int3
fsubrp
jno
xor
and
and
jmp
call
jne
push
pushf
or
jbe
jg
jge
ffreep
enter
daa
cltd
sbb
and
inc
add
fimuls
enter
sub
xor
sbb
mov
push
mov
sub
loopne
pop
inc
ret
mov
cmpsb
push
clc
shr
mov
rcll
dec
mov
ret
loope
sbb
push
cmp
insb
popf
movsl
jl
mov
gs
daa
orb
cs
inc
jbe
rcrb
out
sub
sti
repnz
push
fdivl
sub
add
dec
adc
jae
fwait
jg
mov
mov
movsl
adc
loope
cmpsl
and
rcl
or
jmp
sbb
cmp
mov
shll
es
sbb
loope
test
xchg
cld
xor
pop
jmp
mov
cmpsb
stc
cmc
inc
mov
pusha
adc
call
cmp
cld
insb
test
js
xchg
cli
push
mov
out
or
test
xlat
pop
jl
out
push
pop
mov
rolb
imul
test
dec
xchg
das
sub
cmp
xchg
pop
sub
inc
mov
mov
outsl
sti
jmp
xor
scas
jmp
gs
pushf
cmp
fstp
xchg
inc
adc
fsts
les
aam
orl
sbb
mov
or
adc
or
xor
xor
mov
outsl
addr16
add
mov
dec
jp
jmp
aam
test
in
xchg
push
clc
movzwl
add
cli
mov
dec
inc
mov
fldt
aas
bound
mov
sub
mov
stc
das
xor
mov
inc
mov
push
roll
dec
test
fdivrp
pop
rorb
push
cmpsl
cwtl
sub
mov
xor
xor
lret
outsb
mov
std
mov
adc
popa
sub
rcrb
mov
test
mov
inc
es
jle
insl
lods
cmp
clc
je
lock
push
fucomp
jb
in
popa
xchg
sbb
lods
inc
fidivrl
mov
add
fistl
sub
add
fidivl
mov
test
push
fcoms
pop
cwtl
xchg
dec
xlat
sbb
ficomps
pop
pop
scas
add
inc
xchg
xor
xchg
xchg
test
add
ljmp
sbb
or
mov
mov
push
sub
pop
in
xchg
cmp
inc
rol
or
cli
sti
fwait
aad
xchg
push
lds
add
in
in
ja
or
lcall
shl
and
call
ret
mov
jp
dec
addr16
jae
jp
stos
cmpsb
mov
rorb
mov
sub
jne
dec
cld
mov
pusha
in
sub
adc
into
adc
orl
out
mov
stos
mov
ficompl
stos
out
mov
icebp
insb
inc
push
jnp
pop
dec
jle
mov
rcll
add
in
iret
mov
mov
cltd
adc
inc
pop
aaa
jae
sub
imul
std
inc
inc
mov
ficoml
add
xchg
mov
sbb
arpl
and
cmp
les
leave
shlb
sbb
mov
leave
mov
gs
jns
pop
arpl
test
adc
mov
mov
or
pop
test
das
mov
pop
shll
lea
xor
repz
and
mov
lahf
andl
sub
jge
bound
cwtl
movsl
fisubs
cwtl
xchg
movsb
cmp
mov
jl
dec
out
dec
mov
sbb
mov
out
lahf
jo
dec
push
xchg
ss
stos
adc
cmpsb
xlat
pusha
popa
in
lahf
dec
lret
cld
pop
mov
subb
jmp
mov
xchg
pop
cmp
sub
sub
nop
rclb
out
pop
xor
stc
sbb
mov
ret
xor
xchg
adc
cmp
xlat
pop
shlb
sub
lcall
mov
sub
test
adc
mov
sub
mov
movsb
xchg
mov
shr
sub
pop
and
lahf
adc
adc
xor
les
mov
rorl
idiv
inc
add
inc
out
rorl
lock
add
movsb
sahf
xchg
cmp
xor
fwait
icebp
outsl
js
pop
loop
or
fs
dec
adc
cmpsl
sbb
pop
adc
xchg
mov
stos
mov
cli
fwait
xor
in
cmp
add
into
mov
adc
loopne
sbb
adc
rcll
ljmp
sbb
lods
jns
in
rcll
jns
arpl
test
mov
sti
lcall
movsl
pop
enter
cmp
test
mov
mov
les
repz
popf
leave
xchg
dec
push
cmpsb
sbb
push
out
push
cs
push
push
adc
mov
sbb
xchg
pop
cmc
cs
pop
aad
mov
sbbb
fidivrs
lcall
sub
lea
jp
mov
mov
adcl
mov
pop
fbstp
fcomip
adc
mov
cli
mov
and
hlt
push
rcll
jmp
xchg
dec
xchg
imul
mov
or
cmp
test
scas
lret
fnstsw
mov
enter
js
mov
xorb
lock
test
jmp
ret
sbb
es
mov
movsl
clc
scas
push
jmp
test
mov
jae
mov
jg
xor
mov
ret
imul
enter
mov
cltd
stc
or
mov
or
push
fwait
movsl
aas
fst
pop
jnp
pop
or
aas
fwait
insl
sbb
mov
outsl
jge
pop
mov
and
xchg
sub
xchg
mov
ljmp
pop
xor
notb
xor
in
adc
xchg
pop
xor
clc
scas
pop
lahf
mov
ja
imulb
mov
inc
push
and
fwait
add
jne
push
ret
push
mov
into
aam
out
pop
bound
add
in
push
stos
xchg
inc
jbe
mov
arpl
mov
jne
pop
testl
bound
adc
sub
call
pusha
xchg
fbld
dec
xchg
test
ficoml
ret
lock
mov
cmc
mov
sbb
pop
and
dec
es
jp
jle
mov
in
inc
lods
adc
jmp
iret
jmp
pop
ret
test
inc
push
bound
mov
add
push
mov
jp
xchg
in
push
sbb
mov
or
nop
add
push
or
out
inc
xor
repnz
adc
clc
hlt
les
fbld
sti
aam
jb
xor
sbb
mov
jmp
xor
add
and
and
pop
pop
lock
fidivs
popf
and
shll
jo
flds
and
mov
movsb
jae
pop
push
cmp
jbe
inc
xchg
jge
leave
in
enter
daa
xchg
xchg
xchg
mov
mov
or
inc
cmp
lds
arpl
dec
ficoml
push
pop
cmc
adc
jbe
mov
cmpsb
pop
cmp
js
xorb
pop
out
jge
mov
push
sub
jo
cmp
mov
ds
xchg
push
movsl
mov
and
mov
xchg
loopne
add
data16
int3
sbb
cld
cltd
xchg
pop
out
loopne
fwait
pushf
dec
pop
jg
sbb
fwait
cmp
faddl
pop
out
outsb
leave
xor
adc
test
adc
mov
xchg
mov
insl
mov
sti
ret
adc
pop
fdivrs
idivl
jo
shll
xchg
sbb
jecxz
cmp
xchg
xor
push
outsl
push
arpl
stc
arpl
adc
pop
ss
dec
stos
cmp
bnd
out
das
cmp
into
push
ds
dec
or
fcomip
into
popf
into
data16
lea
and
adc
imul
adc
andb
inc
cltd
data16
sbb
cld
cmp
mov
push
xchg
mov
popa
lock
sti
dec
xchg
outsb
cmc
lea
nop
dec
cmc
xchg
dec
fwait
jns
inc
ss
aaa
fld
jp
les
push
repz
xor
xlat
sbb
cltd
mov
jle
push
sbb
lahf
inc
pushf
push
cmp
inc
mov
push
test
aad
xor
or
in
je
movsl
push
jecxz
push
test
repz
je
lret
int
enter
shlb
and
sub
pop
dec
pop
scas
lret
repz
rolb
imul
pusha
sub
and
icebp
jb
loope
push
testb
std
fstl
out
xchg
and
icebp
jecxz
inc
cld
scas
lret
dec
cli
decb
pop
push
xor
lahf
mov
sub
xor
ret
test
adc
sbb
subl
and
ljmp
ljmp
js
sbb
scas
mov
fidivs
sub
fistpll
mov
add
movsb
cltd
xor
test
xorb
stos
in
cli
lods
bound
mov
sub
rol
add
pop
pop
lret
clc
stos
and
repz
and
push
add
scas
dec
decl
lcall
inc
lret
xor
add
add
inc
xchg
inc
dec
pop
loop
pop
pop
insb
mov
sbb
test
inc
out
mov
xchg
fwait
xor
lret
or
mov
ret
scas
out
mov
ret
leave
in
cmp
fcomps
mov
jo
fbld
das
jo
call
test
mov
push
das
dec
pcmpgtb
pusha
and
filds
adc
jmp
cs
subl
fcoml
push
sub
sbb
sub
test
pop
fdivrl
pusha
lahf
jle
dec
and
scas
adc
or
dec
arpl
ret
add
inc
jne
movsl
jae
pop
rclb
out
fisubs
popf
in
cmpsl
push
imul
cmp
cmp
ljmp
repz
rcrb
mov
pop
outsb
mov
mov
lds
inc
jne
or
sub
aaa
aaa
test
movsb
or
add
mov
or
enter
leave
and
pop
aad
jo
aam
scas
ficomps
pop
and
fistl
movsb
outsl
sub
data16
outsl
xlat
cmp
mov
test
mov
jmp
cmp
push
bound
mov
jl
lret
fisttpll
movsb
mov
test
ret
lret
jmp
rcrb
sbb
push
inc
push
js
fisttpll
popa
js
aam
pop
or
mov
xchg
xchg
insl
loope
pop
lcall
enter
xchg
inc
movsl
xchg
inc
jo
int3
or
popl
das
rcrb
int3
push
push
add
sbb
fwait
jecxz
mov
dec
shrb
push
lock
and
push
repnz
fdivl
push
mov
outsb
sub
xchg
adc
les
add
loopne
mov
cmp
mov
in
push
mov
sub
and
sub
push
push
arpl
xchg
gs
fdivs
xorl
sarl
pop
mov
rcrb
fadd
insb
test
inc
xor
test
outsl
ss
popa
loop
adc
sbb
xchg
adc
std
xor
in
loop
out
xchg
cli
add
xor
out
or
push
cmc
push
jle
loopne
jne
pop
push
cld
cld
adc
jb
mov
push
add
cmp
aaa
mov
xlat
mull
bound
int3
xchg
pop
sti
clc
fdivrl
sbb
jmp
add
cli
dec
cli
dec
jge
dec
push
mov
les
out
out
adc
xchg
rcrb
sbb
adc
outsl
std
push
dec
pop
rolb
jg
call
shr
jmp
in
adc
movsl
push
cs
push
jne
imul
aas
loop
mov
outsb
les
cwtl
push
je
jns
jecxz
push
pop
negb
lea
mov
mov
rcll
mov
in
insl
mov
add
das
into
hlt
dec
mov
push
inc
adc
notb
dec
bound
imul
xchg
data16
mov
outsb
add
mov
sbb
pop
mov
mov
xchg
sub
ret
aaa
nop
fbld
lahf
inc
sub
mov
clc
and
ret
lret
or
arpl
pop
mov
and
mov
orl
outsb
lock
addr16
push
test
sub
and
imull
cmp
pusha
xchg
rcrl
sbb
stos
adc
inc
out
pop
ds
addr16
or
push
cs
ljmp
ret
and
fnstsw
xor
imul
adc
jnp
pop
sbb
dec
loope
pop
adc
stc
arpl
xor
test
or
xchg
repnz
bound
add
std
int3
mov
bound
xor
ja
in
mov
shl
dec
jno
or
xchg
push
adc
adc
mov
xchg
sarl
cld
dec
repnz
jne
pop
les
mov
scas
xchg
sub
fists
mov
or
push
arpl
push
xchg
jmp
stos
dec
sarb
insb
adcb
jle
or
dec
cltd
adc
cmp
sarb
pop
adc
in
scas
jae
pop
sub
mov
cmp
or
push
mov
mov
xchg
xchg
pusha
sub
in
sub
insb
cmp
push
cltd
inc
nop
sarb
mov
lods
sti
pop
leave
sbb
hlt
pop
ret
adc
cmc
imul
inc
sbb
pop
aaa
addr16
jl
mov
popa
int3
idivl
pop
dec
cmp
push
xor
loop
scas
mov
and
cmp
cmp
movsb
mov
push
fmuls
jbe
fsubrl
pop
inc
mov
mov
aaa
cmp
pushl
int
jl
sbb
push
mov
shlb
aad
lahf
int
mov
add
std
test
or
dec
inc
ljmp
mov
js
mov
dec
push
repnz
loope
adc
cmp
ds
mov
cwtl
push
pop
shlb
das
in
ja
clc
sbb
rorl
add
push
sub
orb
sub
cmp
lcall
jmp
fisttpll
xor
adc
fists
add
mov
inc
and
sbb
inc
push
sbb
arpl
stc
push
psubusb
sbb
ss
lret
push
rcl
mov
sbb
or
loope
test
sub
xchg
loop
es
shrl
mov
adc
and
inc
cmp
call
ja
cli
xor
and
jl
test
or
adc
sbb
pop
loopne
inc
pop
pop
xor
sahf
sti
imul
gs
mov
jg
cmp
xlat
ss
stos
sub
sub
fsubrp
aaa
or
sti
cmpsl
call
pop
gs
dec
sbb
add
mov
fnstenv
mov
xchg
repz
lods
pop
sbb
nop
mov
pop
cmpl
adc
or
test
lcall
mov
inc
xchg
cmpb
sbb
jb
adc
aas
je
mov
xchg
stc
fmull
inc
ja
mov
jae
mov
mov
dec
in
cld
or
in
aam
enter
and
lock
mov
pop
orl
in
sarl
out
not
dec
add
sub
inc
dec
xchg
pop
cmpsl
xchg
sub
loop
xchg
daa
add
inc
mov
jl
mov
mov
fstpl
shrb
xchg
sub
test
ret
xchg
cs
nop
insl
dec
mov
xchg
sbb
ds
mov
lods
repnz
adc
mov
sbb
lds
popf
mov
add
jae
test
sbb
in
xor
dec
subl
mov
dec
rcl
jg
pop
mov
nop
stos
add
notb
insl
ret
dec
cmp
or
xor
test
push
xchg
cmpsb
push
dec
sub
popf
pop
ja
inc
lea
cld
jne
sbb
or
sbb
fwait
xchg
pop
xchg
push
jb
add
pop
ljmp
dec
movsb
jb
lods
inc
hlt
in
pop
xchg
xor
push
mov
xor
addr16
sti
cmp
mov
pop
mov
out
test
aad
aad
call
inc
pusha
pop
adc
les
sub
xchg
les
orl
lds
mov
dec
stos
mov
xchg
inc
insb
in
repz
jnp
ja
jle
mov
in
jmp
adc
iret
or
ret
mov
dec
mov
inc
mov
das
jae
lcall
xor
push
cmp
addr16
pop
jb
ljmp
imul
jp
mov
insl
sti
rclb
ret
repnz
cwtl
hlt
movsl
adc
jg
jnp
stc
or
lahf
dec
mov
or
mov
stos
pop
jge
sbb
lds
jo
add
scas
pushf
mov
push
mov
push
movsb
adc
add
mull
cmc
push
dec
jge
push
call
daa
xchg
mov
pop
jno
or
fwait
xchg
js
loop
es
outsb
jg
xor
pop
icebp
sub
in
hlt
push
rcll
sbb
mov
mov
cmpsb
jecxz
jns
cmp
outsl
js
xor
pop
xchg
push
add
cld
call
inc
cmp
inc
data16
mov
lahf
lret
addb
orb
cwtl
add
js
xor
inc
scas
inc
mov
pop
pop
pop
iret
sub
out
cld
rcrb
push
mov
cwtl
cld
sub
fsts
outsb
repnz
sub
push
mov
cli
xor
jg
cmpl
movsl
sub
mov
cmpsl
in
and
les
sbb
inc
int
sub
fsubrs
push
lret
sub
addr16
mov
mov
sahf
and
mov
outsl
hlt
or
mov
adc
add
pop
cld
jnp
data16
cmp
jecxz
xchg
out
loope
cli
loopw
xor
or
sbb
or
cmpsb
jge
inc
and
cmc
loop
and
and
pop
push
and
imul
pop
lock
mov
cmp
xchg
mov
mov
mov
mov
gs
nop
fsts
xor
cmpb
aam
les
xchg
jge
push
jno
sbb
or
lods
sti
lds
adc
jl
jmp
xchg
dec
cs
aad
test
xor
and
pop
jb
icebp
rorl
daa
sbb
jecxz
xchg
and
cld
xor
lea
dec
cwtl
cld
dec
cmp
stos
inc
aad
in
pop
sbb
dec
fistl
and
inc
stos
push
mov
das
mov
mov
push
add
loop
ror
test
notb
decb
shlb
dec
cmpb
mov
push
packuswb
cltd
adc
mov
sbb
insb
cwtd
pop
cld
lods
xor
cmp
movsb
sub
mov
movsl
mov
insl
das
sub
xchg
movsl
hlt
sbb
mov
mov
lods
pop
iret
lods
mov
inc
xchg
and
jo
daa
pshufw
add
inc
test
or
cmpsl
je
out
dec
test
xchg
icebp
add
inc
out
ror
jb
pop
pop
sub
shr
and
xchg
cmc
mov
jmp
mov
pop
pusha
outsb
or
fistpll
jle
mov
xchg
mov
pop
mov
dec
mov
mov
ja
xor
rolb
hlt
adc
add
mov
adc
fiadds
inc
in
xchg
leave
xchg
adcb
pop
in
lcall
mov
addr16
jmp
mov
pop
in
fldt
mov
and
mov
mov
mov
xchg
shll
sbb
xchg
daa
out
sub
mov
xor
adc
lret
cmp
out
leave
push
insb
pop
sub
scas
test
sbb
in
mov
iret
addr16
ret
fs
sbbl
jae
pop
rclb
cmp
popf
pop
js
push
mov
imul
imul
gs
sbb
test
shrb
push
repnz
mov
leave
or
shll
in
adc
push
cli
or
pop
imul
add
inc
inc
pop
lods
dec
lret
arpl
push
push
jo
cmp
scas
jnp
push
jecxz
out
xor
movsb
lahf
pop
jne
jbe
pop
jbe
inc
or
dec
xchg
enter
daa
xchg
scas
or
jno
imul
push
arpl
push
add
mov
cmp
push
cmpsb
sub
test
mov
cmp
in
and
sti
js
inc
mov
lds
loope
in
sub
push
mov
fsts
cmpsb
movsb
data16
cmc
lahf
ljmp
jno
adc
es
or
pop
cmpl
pop
jnp
lcall
xchg
fdivl
testl
adc
adc
pop
into
mov
cmpsl
loop
xchg
insb
mov
cmc
and
notl
pop
repz
int
in
fsubrs
stos
divl
jmp
mov
es
sahf
lds
test
sbb
xor
sti
sub
dec
mov
daa
in
ss
aas
sarl
mov
mov
fdivrl
fimuls
cli
lcall
cmp
cmc
or
es
test
pop
push
pop
jae
test
mov
cmpsb
rclb
cwtl
cmpsw
pushf
subb
lea
sub
fsts
mov
or
dec
mov
gs
mov
push
dec
pop
jecxz
inc
addb
les
cmp
xchg
sbb
dec
call
jp
sbb
rcrl
in
add
pushf
decb
daa
cs
pop
xchg
aad
push
inc
mov
dec
pop
jb
add
xchg
out
gs
xchg
hlt
decl
ror
cwtl
mov
pop
mov
dec
xchg
test
rorb
out
inc
mov
pop
push
outsl
jb
xor
lock
sbb
mov
lea
lock
das
cld
rcrl
and
cmp
inc
xor
pop
pop
inc
icebp
aas
jmp
hlt
lret
or
mov
jne
mov
sbb
mov
sub
push
aam
es
ret
in
push
sub
push
insl
push
cmp
inc
push
xchg
in
ljmp
loopne
enter
xchg
pop
pop
mov
sub
sbb
iret
fwait
cmc
add
cwtl
cld
test
mov
push
push
ret
jmp
mov
mov
ss
or
dec
stos
fimuls
loope
cmp
dec
add
call
mov
inc
push
sahf
xor
pop
test
mov
dec
sti
aaa
into
pop
inc
pop
sti
ja
pop
jmp
jnp
mov
or
mov
inc
push
xchg
stos
cmp
push
popa
enter
fbld
lahf
addr16
push
lods
in
mov
divl
inc
stos
add
pop
jne
repnz
add
leave
dec
mov
fwait
les
mov
and
add
pusha
mov
jl
add
sub
cwtl
pop
les
outsl
imul
insb
pop
sub
add
pusha
fsubrl
add
xor
pop
lahf
mov
xchg
jmp
in
push
cltd
adc
sub
aam
ret
cmp
mov
clc
push
jae
jmp
push
popf
adcb
inc
notl
inc
cmp
fiaddl
fwait
xchg
cwtl
aad
sbb
jmp
out
scas
jg
push
push
outsb
lock
adc
repnz
fldt
and
hlt
cmp
arpl
and
or
adc
push
inc
or
xor
int3
mov
sti
arpl
pop
mov
lds
jo
test
pop
or
mov
jmp
push
aam
lds
fistpll
es
enter
daa
xchg
inc
lahf
cmp
lock
icebp
mov
dec
rcl
push
xor
movsb
xor
push
fs
adc
and
push
insl
add
inc
lods
imul
in
or
jne
je
insl
pop
add
ds
cmp
loope
add
sbb
imul
arpl
cmp
decb
xorb
in
add
sub
xor
mov
lret
pusha
lds
push
loope
add
and
cli
xchg
pop
lcall
ret
sub
sub
stos
or
imul
xor
mov
fdivrp
mov
idivb
out
jno
and
pop
push
and
dec
int
andl
and
jae
outsb
lret
mov
mov
xchg
push
addr16
and
mov
mov
jge
fs
mov
mov
mov
inc
jmp
cli
int
xchg
add
fimull
cld
test
into
or
inc
cmc
jo
loopne
and
pop
xchg
push
lea
mov
pop
imul
mov
sub
sbb
and
xlat
repz
sti
sub
mov
in
js
pop
sti
mov
dec
movsb
push
ss
or
data16
dec
jbe
pop
inc
xchg
mov
sub
cmpsb
mov
repz
sbb
sbb
add
stc
inc
call
adc
pushf
test
inc
sbb
xor
lret
inc
xlat
cwtl
enter
pushf
jb
inc
call
je
adc
test
fadds
sub
stc
cwtl
jb
arpl
xchg
test
sbbl
daa
mov
jb
adc
mov
inc
inc
mov
jb
das
dec
lock
adc
shrl
negb
sub
pop
xor
mov
push
addb
ja
aaa
mov
pop
jnp
mov
fs
shl
imull
jb
and
push
cmc
lods
ret
jae
es
repz
sub
adc
lock
and
push
ljmp
mov
mov
lea
in
and
es
inc
ucomiss
mov
cltd
inc
mov
xchg
mov
std
outsb
push
sub
repnz
test
out
movl
jns
jae
mov
or
out
jmp
test
add
inc
or
or
pop
fsubs
and
mov
mov
add
cwtl
push
inc
loope
out
or
movsb
mov
push
cmp
roll
imul
adc
push
lcall
pop
lcall
das
jl
push
cmc
dec
addr16
or
out
lds
xor
dec
dec
jle
ret
stos
add
sub
xchg
ja
mov
testl
xorl
ds
and
sub
inc
xor
push
xchg
in
stos
adc
dec
and
xchg
insb
cs
pop
jle
je
in
sbb
and
mov
inc
lods
stc
pop
jae
divl
popf
cmpsl
sbb
mov
sbb
xchg
out
cltd
into
sbb
cmp
test
xchg
mov
inc
xlat
shl
mov
stc
cmp
notb
xchg
arpl
jl
inc
test
or
rcrb
arpl
or
mov
int3
mov
outsb
fcmovu
add
jne
sti
cwtl
out
loopne
inc
scas
cmp
or
cmp
mov
inc
jbe
jns
jge
in
enter
daa
xchg
push
mov
aam
jno
cltd
or
sbb
or
or
push
pop
lock
lock
inc
push
dec
add
test
cmp
mov
cmp
aad
insb
in
fsubr
lock
scas
sbb
pop
inc
pop
push
push
addr16
loope
inc
ljmp
in
xchg
cmp
mov
ds
in
sub
adc
pop
mov
add
cmp
fbld
add
jg
xor
in
pop
ror
test
pop
jns
dec
lcall
fmull
cmp
outsb
sbb
jae
dec
push
pusha
jg
push
shll
je
lock
aad
and
dec
push
and
add
fcomp
inc
mov
xor
shrl
mov
push
sbb
test
add
xchg
scas
fisubrl
or
dec
test
stc
lods
int3
ss
push
sub
das
xor
cmp
aam
shl
jo
mov
add
icebp
xor
pop
ret
cmp
and
or
into
out
or
cmc
aaa
out
loopne
cmp
pop
mov
xchg
adc
mov
adc
out
add
test
lods
or
lods
lret
cmp
or
sub
push
mov
jecxz
stos
sti
arpl
pop
gs
test
nop
push
mov
inc
test
repnz
push
out
lahf
ja
sbb
jnp
and
js
or
xor
in
push
xor
and
adc
xchg
cli
es
sbb
repnz
push
aas
std
xchg
jb
mov
int
sub
int3
jecxz
push
movb
inc
cwtl
sub
ss
mov
adc
jecxz
mov
nop
inc
aas
or
das
sub
or
sti
mov
and
and
mov
iret
leave
std
pop
test
cmpsl
nop
jno
mov
in
cmp
cld
mov
ss
out
xchg
mov
mov
push
mov
pop
lds
mov
test
imul
dec
es
dec
insl
in
sar
scas
or
bound
cmc
popa
dec
aad
lods
sahf
test
out
xor
mov
cmp
push
add
jge
test
cltd
jp
das
test
fistl
push
adc
in
dec
test
lock
mov
hlt
mov
shlb
stos
mov
sbb
lret
cmpsl
push
xor
push
pop
or
aas
gs
out
mov
bound
leave
cmp
ja
mov
popa
xor
inc
js
xlat
or
jns
fwait
dec
test
add
les
test
bound
icebp
jle
jge
es
outsl
ret
or
mov
push
or
addr16
cmp
je
mov
call
pop
je
mov
jnp
jne
mov
daa
filds
scas
xchg
dec
add
popa
xchg
lock
addr16
nop
out
dec
push
sub
jnp
dec
push
shr
pop
stos
xchg
cmpsb
insb
cltd
mov
je
fyl2x
cwtl
in
inc
sbb
fdivs
iret
test
and
xor
jae
dec
rclb
xorl
inc
push
cmp
fisubrl
and
stos
pusha
sub
scas
cltd
scas
inc
cld
add
scas
or
int3
cmp
insl
sub
hlt
shll
cld
inc
xchg
fmuls
mov
aaa
and
mov
jle
xchg
add
addr16
mov
sbb
lds
push
sub
sbb
out
cmp
push
movsb
inc
inc
sbb
dec
iret
jbe
ret
jg
fwait
xchg
enter
daa
nop
out
mov
jno
cmp
mov
sahf
push
fs
cli
push
fnsave
mov
mov
push
pop
cmp
push
add
inc
lret
cmpsb
out
hlt
call
js
in
pop
addb
push
inc
pop
lods
xchg
xchg
mov
fs
ds
cmpsl
int
mov
pop
arpl
adc
test
sub
xor
out
push
faddl
pop
clc
sub
pop
clc
pusha
jle
xor
popa
adc
xor
mov
outsb
jle
mov
outsb
sbbl
adc
arpl
jmp
cmp
and
push
sub
add
cld
imul
div
movsl
icebp
lret
jb
ret
cli
xchg
mov
inc
sbb
mov
test
cmc
xor
and
inc
loop
popf
mov
fs
dec
adc
xchg
cltd
cmp
iret
push
out
mov
cli
xor
cmpsl
xor
jns
or
mov
sub
loopne
insl
loopne
rcrb
jle
cmp
adc
leave
mov
push
jecxz
data16
sbb
cltd
lahf
xlat
xlat
jno
daa
sub
mov
in
dec
lds
ljmp
nop
inc
xchg
dec
xor
outsb
inc
mov
cltd
fadd
mov
lret
xchg
xchg
bound
sbb
idivb
jp
not
insb
pop
add
or
repnz
inc
sub
idivl
jl
pop
push
and
jmp
aas
pushf
stos
lds
xchg
cmc
fnstenv
cmp
or
idivb
shll
xchg
lret
push
jg
test
push
pop
divl
lret
lock
xchg
mov
jge
xchg
push
rorl
pop
inc
mulb
push
push
std
outsb
outsb
daa
dec
outsb
push
out
int3
out
mov
les
cmp
fdivrl
dec
lret
push
in
lds
rclb
mov
js
out
mov
sub
ret
aam
mov
ret
xchg
cmpsl
cmp
mov
ss
lret
mov
pop
xchg
mov
fidivrl
fs
sub
inc
int3
mov
aas
xchg
and
outsl
pop
paddsb
sub
loopne
les
lahf
cmp
imul
mov
test
xchg
aaa
xchg
shll
test
pop
or
stos
stos
loopne
out
scas
push
cmp
adc
add
rclb
or
sub
cmpsl
push
call
mov
sub
bound
xchg
pushf
pop
ja
inc
ja
movsl
dec
push
test
nopl
fbld
mov
jl
xor
andb
add
pop
test
mov
jns
ss
sbb
xchg
mov
mov
mov
dec
mov
addr16
cmp
dec
xlat
std
mov
out
mov
adc
dec
inc
push
loopne
loop
lret
pusha
pop
in
jno
pop
dec
rclb
jge
xor
mov
mov
shrb
mov
sahf
push
adc
stos
cli
sub
and
cltd
insb
add
addr16
sbb
jle
bound
mov
sbb
jecxz
jb
inc
into
xchg
pop
pop
sub
inc
ret
jae
fisttps
inc
add
popf
cmc
dec
sub
stos
push
inc
mov
jae
pop
cwtl
mov
sbb
pop
cmp
xchg
fwait
scas
test
mov
rcrb
dec
mov
lahf
sbb
in
ss
sbb
in
arpl
and
or
inc
mov
sbb
jno
faddl
adc
fs
push
push
lds
jo
jo
scas
imul
pop
and
sbb
cmp
xor
mov
pop
jbe
subb
imul
or
jno
push
insb
jl
adc
dec
or
test
or
lahf
xchg
shrb
jmp
lock
jb
mov
js
inc
pop
pop
shll
push
fisubrl
loope
cmp
aas
or
cmp
mov
gs
andl
sbb
or
add
daa
in
xor
adc
pop
pop
outsl
jmp
pop
ja
ljmp
testl
sub
das
or
addb
xchg
mov
mov
shlb
imul
arpl
divl
cmpxchg
pop
or
mov
sbb
push
test
lahf
mov
dec
mov
outsl
dec
jb
loop
jmp
stc
sbb
fs
es
adc
pusha
into
ss
cmc
cmp
lret
out
scas
scas
cli
mov
xor
mov
or
loopne
mov
pop
out
inc
push
adc
loopnew
jns
mov
add
dec
add
aam
cwtl
xlat
mov
movsb
sub
cmp
mov
inc
jbe
or
cmpsb
es
and
dec
xchg
mov
inc
into
sahf
in
fnstcw
dec
mov
repz
sbbl
and
jecxz
call
jbe
add
mov
sbb
dec
mov
xor
adc
cs
imul
push
jle
sub
mov
inc
and
inc
or
sbb
dec
mov
lea
cmc
cwtl
mov
das
xchg
mov
xor
outsl
jg
jmp
lcall
lock
out
das
out
xchg
imul
rcrl
mulb
sub
dec
imul
hlt
mov
fwait
sbb
cld
pop
sahf
inc
lret
les
cmp
jae
push
pop
xchg
xchg
sbb
pop
in
or
push
and
mov
leave
ret
and
xor
cld
insl
mov
and
ret
xchg
loopne
mov
lock
pop
popa
jnp
cltd
lods
je
push
mov
test
and
mov
sti
cmovnp
add
xchg
and
stos
in
mov
mov
push
jbe
cmpsb
fnsave
scas
test
scas
jl
mov
adc
ret
sarl
inc
pop
mov
sub
adc
adc
pandn
incl
ja
xor
or
cmc
cld
out
mov
sub
dec
dec
xchg
int
pop
xor
leave
ja
les
inc
cmpsb
mov
add
and
in
mov
ds
fistpl
jns
push
in
in
mov
or
lret
fistps
stos
or
les
mov
sbb
mov
subb
and
pusha
cli
mov
xchg
lock
xchg
xchg
jae
hlt
add
sub
icebp
fstpt
stos
insl
xchg
insb
outsl
lcall
pop
enter
int
adc
xchg
push
cmp
pop
xchg
dec
inc
int
jg
mov
push
popf
sbb
imul
jg
fimull
push
xchg
hlt
mov
xor
mov
rcll
movsl
dec
shlb
mov
repnz
leave
pop
mov
arpl
lret
repz
mov
mov
add
dec
pop
xchg
pop
lret
lea
jo
jbe
scas
inc
jb
ret
cmp
inc
movsl
movsb
push
jl
push
add
into
jbe
mov
jge
js
enter
daa
mov
jno
imul
jl
or
shl
xor
sarl
lahf
cmpsb
test
pop
test
cltd
fisubrs
inc
call
popa
sub
pusha
ss
add
push
push
and
xchg
mov
cmp
divl
leave
ret
movsb
ret
mov
jp
mov
sbb
mov
adc
insb
xlat
daa
loop
inc
xchg
inc
sub
pop
bound
idivb
jle
fwait
aad
push
stos
mov
fmull
jg
outsb
inc
pop
cmpsb
adc
pushf
mov
jg
int
mov
mov
pop
mov
not
and
ljmpw
fmuls
ja
imull
into
lret
jno
aas
rorb
sahf
hlt
sbb
test
push
mov
jnp
push
insl
xchg
stc
rclb
sub
xor
mov
xchg
mov
loop
out
xor
cli
cltd
std
mov
pop
inc
std
cmp
lahf
dec
or
test
mov
daa
loopne
or
in
in
adc
xchg
push
imul
in
add
adc
sbb
lods
jg
cltd
cmp
cmp
xlat
out
ret
daa
fsubr
mov
and
mov
xor
sbb
jmp
jp
sti
cmc
push
dec
repnz
loope
daa
fnstenv
xor
xchg
call
ret
sub
cmc
js
pop
push
in
pushf
push
pop
sbb
in
fdivrl
mov
or
inc
inc
lea
aas
fiaddl
pop
jb
pop
das
dec
xchg
xor
je
in
xor
in
test
les
cmp
jg
add
ja
sbb
fldt
test
sti
gs
aam
sub
sahf
mov
mov
and
pop
and
lahf
shrl
imulb
inc
loopne
fs
mov
lea
sbb
jb
jmp
lret
xor
bound
pop
ss
pop
mov
xchg
shrb
cmpsl
dec
push
enter
jae
mov
iret
insl
cltd
fdivp
clc
std
cmpsb
push
xchg
pop
in
nop
ljmp
insl
lods
fildll
mov
xor
xchg
jmp
hlt
add
jmp
faddl
cwtl
lods
push
cmp
fstpl
push
sub
xchg
push
pop
rcl
sbb
pop
pusha
dec
jo
mov
cli
xchg
lahf
mov
add
jmp
jmp
push
mov
xor
xchg
mov
das
xor
in
mov
ja
cmpsl
test
inc
aas
inc
cmp
repz
call
xchg
mov
out
out
popf
xor
bound
jno
scas
stos
push
in
push
loopne
pop
xchg
test
mov
inc
mov
mov
mov
and
mov
inc
cltd
dec
or
mov
pusha
xchg
sahf
fistps
cmp
adc
mov
mov
repz
sub
pop
push
sbb
das
and
in
fcmovb
cmp
out
jle
and
imul
ret
push
pop
int
addl
jae
and
lret
popf
inc
or
stos
pop
mov
push
in
shl
xchg
dec
adc
sbb
leave
mov
scas
outsb
pusha
int
rorl
mov
inc
mov
leave
rorb
dec
arpl
fldl
or
js
cmpsb
sbb
testb
add
int3
dec
adcl
movsl
je
pop
xlat
push
jo
and
xchg
push
mov
enter
cmpsl
push
push
iret
pop
jbe
push
stos
jge
fmul
popa
and
daa
shll
mov
movsb
movsb
jl
js
dec
jmp
and
xor
pop
loop
lahf
lds
scas
test
fs
test
cmpsb
js
insl
in
mov
js
mov
insb
push
sbb
dec
sub
jnp
cmp
or
movsl
shl
pusha
sarb
ret
jp
orb
scas
sbb
pop
popf
xor
clc
ljmp
mov
inc
pop
jne
sub
add
loope
sbbl
mov
inc
loop
mov
int3
jg
mov
adc
gs
and
flds
int
repnz
lret
imull
mov
lret
loope
mov
add
repnz
sahf
xchg
icebp
mov
xor
add
outsl
or
and
mov
fs
push
adc
js
fcmove
add
insb
aaa
inc
cli
int3
and
xor
cmp
jo
or
xchg
push
into
jnp
fdiv
push
inc
clc
loopne
ja
pop
sub
hlt
cmp
adc
adc
data16
mov
pop
or
data16
jno
dec
in
xlat
cs
sbb
lcall
in
mov
pop
cmp
push
jmp
jecxz
lret
pop
dec
push
jns
inc
hlt
loop
fld1
xchg
imul
les
jle
adc
dec
push
pushf
add
jmp
insb
call
aad
and
or
jns
es
mov
xchg
je
mov
jecxz
inc
sbb
adc
lea
mov
cwtl
sbb
mov
sbb
inc
push
cmp
pop
imul
lock
inc
in
das
movsl
test
push
and
and
in
shl
dec
push
imul
xchg
cmp
arpl
dec
pop
xchg
loopne
mov
push
mov
dec
mov
pop
popf
lret
mov
into
add
test
jno
rolb
xchg
imulb
inc
push
rcl
dec
jmp
ret
ds
pushf
cmp
insl
addb
cmp
xchg
pop
arpl
ljmp
adc
mov
cmp
push
and
insl
inc
jl
or
testb
jb
cltd
push
gs
mov
jmp
cli
fldl
mov
bound
sub
jno
sub
or
or
dec
stos
js
add
fadd
adc
inc
xor
incl
fidivl
fs
or
das
xor
arpl
mov
xor
dec
gs
test
mov
dec
sub
outsb
fmuls
sbb
push
imul
jns
xor
fldenv
jo
jns
fdivl
test
adc
mov
and
addr16
lret
adc
cmp
lahf
jbe
mov
pop
fildl
dec
in
lcall
xor
hlt
xchg
xchg
mov
xchg
sbb
imul
push
mov
into
xor
mov
insb
inc
mov
jle
outsb
clc
in
jecxz
adc
iret
add
ret
pop
pop
add
fiadds
jg
popf
cmp
lea
js
push
mov
and
lods
aaa
fidivl
xchg
mov
aas
imul
shll
sbb
xor
imul
mov
cwtl
pop
jb
dec
repnz
arpl
inc
xchg
xchg
lods
or
ja
jns
push
into
dec
or
mov
fiaddl
int3
cmp
pop
cmc
and
fidivs
mov
lds
out
scas
xchg
repnz
call
push
jg
insb
pop
push
push
lahf
fnstcw
jge
cli
or
pop
jmp
xor
shll
jl
call
pop
push
xchg
xor
negl
ja
imul
test
das
les
cmpsb
sti
sahf
scas
in
jae
push
js
fistl
jle
out
push
int
loope
mov
sub
jo
cmp
pop
movsl
xlat
mov
pop
jns
cmp
andb
inc
sbb
sarb
sbb
xor
inc
jecxz
xchg
nop
lea
in
bound
hlt
fcompl
pop
mov
sub
leave
outsb
or
outsl
adc
ret
mov
mov
push
lahf
mov
mov
and
sarb
out
fadds
xor
lret
xor
mov
aad
sahf
cmp
cmpsl
xor
sub
jns
loop
or
stc
inc
repnz
leavew
ss
cmp
mov
rcrl
or
mov
push
push
dec
or
icebp
mov
loopne
test
adc
mov
adc
cwtl
push
add
lods
data16
mov
test
xlat
insl
repz
sub
sbb
jp
into
lds
gs
rcll
mov
push
pop
push
fcmovnu
pop
sahf
dec
call
inc
adc
das
dec
call
repz
into
sti
jb
dec
aad
pushf
stos
dec
push
cmpl
inc
jns
mov
sbb
jb
sbb
test
shll
mov
add
adc
adc
mov
cwtl
aam
adc
inc
sub
andl
adc
pop
adcl
inc
loop
adc
push
adc
test
in
mov
mov
mov
mov
push
roll
in
cs
aam
pop
and
mov
and
paddb
pop
mov
mov
mov
hlt
out
rcl
mov
sub
push
aam
mov
ret
int
mov
insl
addr16
or
jae
push
xchg
popf
pop
xchg
ljmp
add
xor
mov
pop
pop
pop
push
dec
mov
punpckhbw
les
lret
aad
mov
jle
push
mov
test
movsb
dec
xchg
pop
adc
fistpl
add
sbbl
stos
addr16
or
cmp
loopne
sub
jnp
js
mov
int3
or
xchg
mov
xor
xlat
jo
arpl
sbb
inc
imul
adc
lcall
fs
push
mov
jbe
out
pop
jmp
cmpsb
jns
mov
in
fiaddl
cli
int
mov
mov
sub
cmp
addr16
imul
out
cmpl
mov
jne
fbld
lret
lahf
mov
fisttpl
xchg
imul
xchg
out
call
out
cmc
mov
mov
or
into
add
cmpsb
push
insb
mov
repz
cmp
mov
pop
adc
xor
jne
ret
xor
ja
inc
out
jecxz
jae
fisubrs
popf
xchg
pop
popf
push
mov
test
daa
pop
es
stc
daa
cmp
add
scas
scas
xor
xor
xchg
mov
jmp
into
leave
sar
hlt
dec
mov
or
xchg
imul
fstp
jge
cmp
popf
out
and
das
cmp
lds
mov
jne
jnp
jo
ljmp
push
out
daa
sbb
std
jb
ficoms
sub
push
inc
je
mov
or
jl
sub
mov
xor
xchg
insl
popa
lahf
add
sbb
mov
push
push
cli
mov
inc
xchg
pop
in
cmpsb
jle
jbe
pop
jmp
js
test
push
xor
sub
cmp
cmp
dec
push
ds
xchg
movsl
movsl
fiadds
xchg
jne
xorb
cmp
fidivl
andb
and
pop
mov
scas
arpl
jae
xchg
scas
mov
fmull
test
outsb
insl
fstl
in
movsb
jg
test
mov
or
mov
or
and
sbb
fadds
pop
imull
icebp
shll
push
sbb
fstpl
daa
popa
xor
fstps
sub
stc
negl
mov
adc
inc
js
shll
sub
xor
push
out
cli
xor
mov
in
add
xchg
add
loope
and
cwtl
mov
pop
imul
adc
inc
imul
fiadds
flds
mov
lods
xor
adc
shl
xlat
lods
shll
subb
in
gs
pushf
cltd
imul
mov
xlat
inc
sbb
mov
push
jns
repz
push
rorl
push
xchg
xor
arpl
pop
pop
out
jb
and
adc
std
sub
mov
mov
iret
inc
xchg
xchg
mov
mov
insl
jb
lret
jecxz
cld
loopne
je
inc
js
adc
pop
pop
inc
stc
jb
cwtl
lods
pop
mov
push
ret
mov
xchg
adc
sbb
xchg
fstpt
mov
lock
lock
arpl
mov
inc
int3
sub
call
jno
mov
fisttpll
dec
sub
mov
testl
repnz
fwait
mov
repz
adc
shlb
adc
ret
pop
pop
mov
insl
dec
mov
in
xchg
xchg
ljmp
movsl
lods
and
mov
xor
and
and
pop
vmptrld
loope
aas
and
leave
push
test
int
mov
push
add
orb
into
and
test
sbb
mov
mov
pop
popa
or
out
sahf
lret
lcall
xlat
hlt
jle
outsb
xor
scas
inc
or
dec
xor
sbb
xchg
adc
dec
xor
and
imul
adc
dec
or
loope
fwait
addr16
push
scas
mov
add
out
popf
out
cmp
bound
lods
jmp
shrl
xchg
in
pushf
test
bound
decl
xor
lea
out
jp
push
sbb
pop
pop
mov
mov
jne
inc
xor
mov
mov
cmp
std
jmp
mov
adc
and
outsl
out
fldcw
mov
dec
repnz
stos
cmp
das
and
inc
jg
aad
popf
jle
in
in
mov
cli
cmp
iret
mov
cld
add
jb
les
sbb
push
adc
adc
sbb
mov
xchg
push
call
mov
scas
xchg
jns
push
cmpsb
lcall
xchg
jbe,pt
leave
aaa
lods
inc
hlt
xchg
pop
stos
arpl
add
or
in
data16
pushf
imul
test
gs
adc
or
std
cld
fidivs
mov
lods
fistps
pop
test
scas
push
mov
and
stos
cmp
loop
push
cmp
lcall
aaa
les
mov
cmp
cltd
sub
jecxz
pop
jl
inc
or
stc
loopne
dec
test
xor
sub
jle
push
adc
fwait
test
inc
and
mov
in
inc
or
js
call
cld
into
in
push
inc
mov
loop
push
sub
xlat
enter
or
adc
je
in
add
adc
idiv
xor
sbb
flds
or
dec
sbb
xchg
sbb
sub
icebp
stc
pop
repnz
and
loopne
ss
jnp
dec
xchg
push
outsb
rolb
mov
jg
mov
mov
mov
cmp
and
ljmp
sti
rcll
lret
inc
rorl
mov
mov
sbb
push
sahf
andb
test
xchg
pop
outsl
stos
cmp
popf
stc
scas
jecxz
fs
rcll
jno
add
mov
mov
jg
imul
xor
fsubl
into
and
sub
test
pop
loopne
xor
push
adc
dec
subl
clc
mov
inc
insb
lods
sbb
fst
jmp
cwtl
sub
mov
mov
rol
cmp
mov
sar
nop
lds
jp
inc
sub
clc
adc
push
shl
mov
or
sbb
fadds
into
pop
xor
sub
cld
push
adc
add
ss
mov
aad
leave
lret
sarl
push
bound
cmp
inc
sbb
negb
jnp
sahf
mov
lods
mov
push
pop
aaa
fucomi
lods
adc
stc
cltd
inc
lock
add
inc
cmpsl
mov
cld
mov
nop
shl
pushf
sub
std
pop
sahf
test
pop
scas
cmpsl
mov
ret
mov
into
inc
das
cld
fsubp
js
out
sub
mov
movsl
std
mov
xor
and
jp
shrb
sub
dec
aam
cmp
ret
jmp
mov
ret
pop
gs
xor
pop
fcoml
das
testl
mov
movsl
fsubr
and
dec
or
es
cmpsl
cltd
sti
icebp
jo
loope
xchg
mov
je
push
inc
xor
test
sub
loopne
sbb
xchg
shll
mov
pop
or
pusha
stos
inc
xor
out
add
pop
add
ret
stos
xor
xor
jno
inc
xor
repz
xchg
popf
aad
lcall
ja
pop
icebp
dec
push
sub
inc
cltd
add
popa
addl
push
fstpt
add
inc
push
outsl
out
sbb
loope
mov
in
mov
xchg
cwtl
adc
mov
sti
popf
mov
das
lds
jp
out
data16
dec
mov
mov
cld
mov
je
jne
adc
fistps
test
xchg
punpcklwd
jmp
jge
pushf
subl
insl
sub
sbb
es
lods
xlat
jo
aam
dec
insb
xchg
adc
test
pop
in
jae
adc
push
hlt
iret
sbb
outsb
scas
pop
test
rcrb
jae
divb
pop
mov
push
mov
rcr
idivb
cmpsl
int3
mov
imul
sub
in
adc
sarb
repnz
jae
leave
scas
add
arpl
jmp
insb
sbb
subb
and
xchg
int3
sti
in
pop
orb
lds
push
je
mov
sbb
pop
aaa
jb
or
nop
shll
test
ljmp
mov
sbb
out
sahf
jl
xor
dec
cmpsl
dec
or
das
mov
xor
enter
inc
jge
push
in
mov
nop
xchg
and
add
cmpsb
test
push
in
sub
sarl
jns
cmp
push
adc
outsb
jb
rorl
nop
fwait
mov
movsl
in
movsb
ret
shr
pop
int3
push
cmpb
or
xchg
inc
lret
jmp
push
pop
push
cmpsb
push
sub
or
aad
jno
sbbl
loope
sbb
cmp
je
adc
and
ds
jmp
mov
mov
xchg
mov
or
cmp
pop
out
fdivs
dec
cmp
jg
pusha
shl
pop
mov
inc
cmpsl
sbb
int3
int3
test
cltd
or
movsl
xchg
loop
add
gs
pusha
adc
jle
inc
adc
cmp
lods
lods
push
out
ja
cli
cwtl
mov
pop
cmp
std
mov
into
pop
mov
dec
loopne
icebp
das
pop
test
jg
imul
sbb
testl
cmp
pop
aad
sub
inc
sub
clc
mov
cmp
pop
sti
fldt
fistpll
sbb
dec
int
lds
fistl
les
add
or
repz
push
xchg
mov
mov
push
ds
jo
dec
pop
out
jno
push
dec
leave
pushf
lods
loopne
jmp
push
sbb
lods
popf
xchg
aad
jae
inc
lret
aas
cmc
sbb
jb
lds
je
sbb
pop
sbb
ret
inc
cwtl
add
jl
mov
xchg
subl
adc
sbb
mov
ja
and
gs
subb
adc
mov
mov
and
inc
mov
xor
push
std
out
cmp
push
pop
cmpsl
mov
std
icebp
movsl
and
pop
fs
mov
mov
mov
rorb
in
sub
bound
ret
jp
and
inc
push
dec
insl
sbb
and
int
pop
push
push
add
xor
sub
mov
or
ja
jne
sahf
cltd
cltd
xor
scas
mov
aad
push
or
push
test
int3
les
hlt
or
rorl
pop
subb
cmpsb
mov
mov
lock
mov
ret
rorb
call
and
aam
fiaddl
add
xor
push
mov
dec
stc
arpl
xor
or
stc
push
fwait
lds
or
pushf
bound
clc
sbb
jns
pop
shl
aad
test
call
test
sub
addr16
cmp
daa
mov
sbb
sub
cli
es
inc
and
aaa
cmp
cmp
mov
bound
dec
fdivl
cmpl
mov
push
cld
cmp
push
iret
loopne
lret
stos
pop
push
and
cmp
xor
icebp
sub
adc
mov
ret
pop
pop
loopne
jl
xlat
jae
addr16
push
cltd
pop
popf
popf
push
add
inc
xor
mov
inc
cld
repz
aam
sbb
pop
inc
imul
insb
scas
pop
dec
mov
rcl
les
in
inc
leave
and
mov
mov
inc
jp
jnp
lds
arpl
push
aaa
sbb
nop
or
inc
xchg
add
jns
int3
out
push
fidivrs
cs
scas
adc
jne
mov
movsb
cwtl
or
jo
sbb
jge
lods
mov
daa
mov
cmp
fdivrl
lahf
icebp
es
push
push
push
adc
cmpsl
and
into
lahf
pusha
adcb
inc
sbb
pop
jg
inc
inc
xlat
and
psubd
pop
jp
into
push
xchg
sub
adc
and
mov
ds
enter
lret
aam
mov
xor
sbb
popa
jnp
jb
xor
ficomps
imul
loop
shlb
pop
lock
lcall
jno
mov
or
xchg
push
es
ds
jg
cmpsl
pop
mov
sub
mov
push
pop
and
mov
push
inc
in
int
movsl
dec
fdivs
cltd
imul
add
sarl
mov
mov
test
test
test
loop
mov
mov
adc
jl
mov
dec
cmp
cmpsl
sub
adc
cli
lret
push
cmp
repnz
or
pop
into
ljmp
loopne
ret
enter
int3
in
imul
cmpsl
testb
scas
cmp
insl
adc
jmp
jmp
or
shll
cmpsb
push
js
add
gs
and
es
push
sbb
sti
loop
les
jo
inc
cli
repnz
jp
rcrl
into
mov
out
mov
call
pushf
push
adc
xchg
sbb
push
and
in
lahf
aas
xchg
pusha
mov
dec
popa
push
add
sub
aas
dec
or
and
lea
ret
shlb
mov
jmp
add
mov
fisttpl
lahf
pop
cmpxchg
inc
loopne
lock
das
add
mov
push
jne
fisubrs
idivb
mov
jo
inc
cmp
cmpsl
xchg
mov
jl
cld
xor
sahf
lret
int
xchg
mov
aaa
in
mov
xor
rcrl
jecxz
shlb
inc
sub
addb
inc
adc
push
leave
push
inc
clc
pop
xor
xchg
cltd
jae
ljmp
sub
popa
pusha
addr16
jmp
cs
mov
dec
pmulhuw
xchg
add
ja
imul
add
aam
das
push
lret
popa
push
fldl
ljmp
das
jae
sbb
rolb
pop
bound
pop
out
movl
sar
pop
lret
add
or
mov
add
xor
push
mov
jle
in
push
sbb
sbb
or
inc
ds
hlt
cmpsb
and
cwtl
or
add
testl
mov
in
fsubl
mov
or
mov
addr16
insl
jp
inc
lret
xor
in
mov
dec
pop
je
jne
shl
pusha
aaa
xchg
mov
push
or
psubsw
mov
out
cmp
pop
mov
push
or
stos
xchg
mov
and
sbb
pop
xor
jns
adc
cli
in
jno
adc
xchg
mov
fsubr
inc
pop
pop
add
inc
sbb
clc
jae
sbb
xor
push
scas
and
repz
xchg
push
add
imul
pushf
scas
shlb
push
jnp
sbb
repnz
mov
repnz
or
leave
pushf
xchg
pop
hlt
je
xchg
arpl
cmp
inc
mov
ss
sbb
into
add
or
movsb
ja
int
mov
pop
loopne
sub
pusha
aaa
pop
lds
imul
hlt
stos
and
outsl
icebp
cmp
scas
mulb
or
jp
sbb
daa
xchg
and
in
pusha
jl
test
test
push
cmc
mov
xor
jae
lahf
jg
loop
mov
test
shrb
icebp
popf
cmpsb
mov
sub
add
insb
push
movb
xchg
sub
cmpsl
xor
out
cld
pop
jge,pt
mov
shlb
fwait
dec
addb
pop
add
out
xor
adc
cwtl
sub
dec
xor
pop
outsl
mov
push
or
sbb
sbb
insl
outsb
stc
sub
adc
pop
xlat
sbb
scas
out
mov
fwait
and
daa
ret
jmp
stc
push
inc
cmpps
push
das
fsubrs
imull
scas
scas
rcll
mov
sbb
jo
inc
arpl
fdiv
outsl
inc
addl
fs
ss
fdivrl
mov
das
xchg
inc
pop
xor
pop
cli
cmp
mov
add
int
xor
std
add
loopne
cmpsl
inc
pop
out
pop
adc
mov
add
dec
lods
rolb
cmp
in
sub
mov
adc
sti
cmp
cs
and
iret
.byte
ret
lea
