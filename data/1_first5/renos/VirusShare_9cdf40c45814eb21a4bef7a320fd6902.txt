mov
adc
or
push
je
imul
add
push
mov
cmp
outsb
jg
je
mov
fs
inc
lea
dec
lea
cmpl
outsl
mov
inc
cmp
jl
lea
add
xlat
std
in
jo
mov
dec
add
mov
xchg
xchg
inc
inc
inc
inc
inc
dec
mov
mov
jbe
mov
jno,pt
xchg
and
push
xor
fildl
call
imul
add
fcmovne
and
loopne
inc
lock
inc
mov
push
adc
lea
in
outsl
push
or
adc
cmpb
das
fisttps
push
call
cs
mov
incl
cmp
mov
jbe
add
and
xchg
adc
or
and
xchg
cld
lea
dec
dec
ret
lea
lcall
notb
in
push
test
ret
jmp
insb
nop
in
add
psubusb
push
aam
int3
nop
inc
push
sbb
rolb
fs
fs
mov
test
sbb
clc
hlt
lock
or
call
pushl
cmp
out
cld
push
mov
in
jle
arpl
je
adc
jmp
loop
pop
cmp
ds
fsubr
fisttpl
add
or
mov
in
in
pushl
add
aas
add
out
ljmp
std
out
fistpll
loop
jae
dec
mov
inc
loop
mov
ja
iret
std
lret
mov
xor
pop
pusha
pop
out
mov
adc
jne
or
inc
cmc
mov
mov
sti
pop
xor
clc
adc
repnz
mov
push
roll
rcll
ljmp
ret
ds
pop
cmpsl
shll
push
dec
mov
mov
addr16
cmp
dec
aaa
dec
cli
imul
je
bound
sbb
divl
out
ret
mov
mov
fistps
add
inc
repnz
mov
mov
cli
dec
mov
jbe
mov
rcrl
xor
pusha
clc
outsb
xlat
fldl
mov
fwait
adc
fwait
xchg
movsl
pusha
popf
sub
pusha
mov
push
test
mov
dec
aaa
subl
mov
or
in
mov
ss
mov
push
movsl
clc
or
inc
inc
xchg
fstpl
mov
in
lea
mov
cmc
mov
into
mov
mov
fstl
xchg
inc
inc
mov
scas
insb
adc
pop
fcomip
pop
test
and
cmp
sbb
mov
dec
dec
dec
xor
lea
xchg
std
jle
sub
scas
inc
cli
pop
sbb
xchg
xor
dec
mov
pop
mov
pop
fisubs
loope
sarl
sti
out
mov
cli
dec
ds
mov
scas
mov
cmc
mov
lods
ficompl
mull
sbb
mov
or
cmp
mov
push
jmp
jl
lgs
mov
mov
push
lea
popf
mov
cmp
mov
lea
movsl
or
fisttpll
sbb
imul
cmp
jmp
popa
push
test
jnp
call
xlat
jno
rorl
dec
add
mov
mov
pop
cmp
js
pop
xor
push
dec
out
cmc
mov
dec
out
mov
aaa
xchg
popa
adc
gs
aas
or
icebp
cmp
ja
pop
icebp
insb
adc
adc
mov
push
dec
arpl
dec
cli
adc
add
xorb
dec
daa
clc
mov
movsl
lcall
pop
push
repnz
fbstp
and
adc
pop
ljmp
mov
adc
cmp
xchg
push
push
ja
es
das
cmp
xlat
aad
ret
mov
adc
mov
pop
fiaddl
pop
rorl
test
out
out
mov
sbb
add
movsl
jne
inc
ret
pusha
popa
pop
cli
or
sahf
outsb
ret
popa
popf
sbb
sar
jle
test
std
jbe
mov
push
lret
xor
ljmp
pop
dec
int3
les
and
pop
or
jae
jmp
lock
pusha
cmp
mov
je
pop
pop
pusha
inc
fucomp
fstpl
push
movl
cmpsl
pop
and
inc
push
loop
pop
mov
add
mov
mov
mov
xor
divl
sti
mov
testl
adc
insl
and
inc
mov
mov
in
push
aaa
out
pop
mov
call
call
cmp
inc
push
sub
movzwl
dec
test
jb
push
stos
inc
adc
movl
lods
std
lock
mov
sti
adc
or
xchg
mov
in
jge
add
cmp
or
sarb
sub
jecxz
push
in
lahf
cmpl
je
invd
sub
ss
add
push
mov
adc
nop
cmp
jle
adc
leave
orl
ss
jae
out
dec
rcll
push
mov
sbb
inc
or
fists
dec
in
jne
ret
mov
fs
imul
adc
push
push
ljmp
jb
jne
insb
inc
insb
insb
outsl
arpl
paddsw
jg
jb
je
arpl
add
arpl
mov
sub
mov
das
mov
ja
idiv
mov
mov
repnz
mov
mov
ret
nop
repz
cmp
pop
push
std
add
jo
ja
cmpl
je
repnz
cld
sbb
ss
dec
test
test
mov
sbb
imulb
mov
add
cmpb
je
or
or
push
mov
and
shl
jnp
mov
dec
cld
mov
and
xor
aas
icebp
div
aaa
lods
mov
and
and
icebp
add
sub
pmuludq
js
adc
repnz
jae
lea
repz
jne
add
pop
insb
mov
add
add
inc
or
or
out
inc
pop
xor
sbb
sub
and
test
fmull
ret
mov
roll
push
or
out
movsb
mov
inc
inc
mov
call
mov
pop
or
dec
push
cli
mov
add
dec
inc
xchg
push
push
xor
cwtl
push
inc
inc
in
dec
dec
mov
out
pop
in
jge
mov
imul
call
mov
sbb
fsubr
inc
xor
sbbb
mov
and
cmp
and
pushf
mov
cmp
mov
and
mov
enter
xchg
sbb
dec
and
inc
enter
mov
push
push
xor
xor
popa
imul
fucomip
insl
jb
xchg
addr16
bound
jo
hlt
mov
inc
insb
insl
jae
dec
adc
push
outsb
mov
ja
aaa
mov
imul
outsb
dec
xchg
dec
gs
xor
xchg
dec
loopne
aas
hlt
xor
adc
mov
xchg
mov
cmp
stc
xchg
pop
clc
push
dec
inc
mov
adc
add
ret
orb
clc
je
inc
dec
dec
inc
cmp
call
notl
lea
mov
mov
pop
cmp
push
lea
mov
rcr
add
pop
mov
in
mov
out
loope
movsl
in
add
dec
ja
sti
xchg
hlt
dec
mov
call
fdivrs
stos
in
sti
fdivrl
sub
pop
test
jg
adc
in
iret
jge
movsl
dec
cmp
jnp
mov
fsub
inc
dec
push
jg
loopne
lds
mov
inc
lret
inc
imul
mov
cvttps2pi
frstor
inc
jl
mov
jb
repz
cs
mov
lock
inc
push
push
int3
mov
add
add
int3
movb
cmp
mov
out
xchg
xchg
mov
out
add
lock
add
jp
and
pop
and
das
dec
cmp
ja
dec
fisttpll
test
or
xor
sbb
mov
or
add
cmp
mov
int3
nop
pusha
aaa
xor
sbb
lock
adc
loopne
loopne
mov
sub
fdivrs
sub
call
cmp
mov
push
jb
mov
and
outsl
jmp
jne
mov
mov
inc
jne
idivl
push
inc
mov
cmp
ja
mov
push
and
mov
orb
test
out
std
push
lea
push
mov
es
or
sarb
push
divb
enter
sbb
in
hlt
mov
mov
xor
mov
fdivrl
movsl
xor
ret
sub
sbb
pop
mov
idivl
fmuls
sbb
movsb
fisttpl
adc
dec
dec
mov
cmpsb
inc
fxtract
int
push
inc
rcr
mov
loopne
iret
push
insl
or
aaa
call
ljmp
mov
adcl
or
fcoml
add
or
inc
lock
shlb
fcmovnb
mov
fcompl
lahf
js
dec
pop
push
mov
xor
or
lret
and
gs
cmp
pop
lock
pop
mov
enter
sbb
ret
in
dec
and
inc
jecxz
rolb
pop
pop
mov
inc
js
cltd
jle
sbb
iret
cmp
and
arpl
movsl
and
dec
lea
lock
xchg
insl
jbe
or
fs
in
xchg
insb
imul
or
jae
adc
adc
push
in
jne
or
cmp
or
adc
jae
xor
push
shlb
jl
test
gs
push
mov
cmp
in
or
mov
adc
cmpl
mov
or
pushf
add
mov
push
adc
fcoms
and
insb
dec
inc
ljmp
nop
sub
jmp
pop
or
pop
and
jo
jge
sbb
sti
or
daa
stos
movsb
sbb
mov
mov
lods
push
push
mov
ffree
shlb
push
pop
push
xor
mov
aam
or
pop
lods
lea
stos
and
adc
loopne
push
mov
sbb
je
incl
push
mov
fs
jae
pop
imul
out
lea
jb
outsb
add
xor
sbb
iret
jl
xor
je
insb
insb
ud0
sub
inc
dec
arpl
jl
jns
outsl
jb
insl
pop
mov
inc
jp
ja
jp
xor
pop
je
lahf
cmp
ss
std
jne
movb
test
jnp
ja
mov
mov
nop
cld
gs
mov
mov
sub
imul
adc
mov
jbe
in
jmp
decl
dec
jne
mov
loope
pusha
xor
and
mov
mov
fidivl
cwtl
add
adc
mov
mov
clc
pop
push
add
mov
jl
decl
enter
cmp
cmp
shlb
inc
or
push
push
mov
cmp
decb
push
jmp
dec
cmp
cltd
sti
es
push
push
sti
add
add
or
mov
xchg
aaa
lock
incb
fildll
divl
jge
hlt
stc
pop
xchg
in
fwait
xchg
jmp
or
cs
movsb
adc
hlt
push
addb
ret
sub
jbe
shll
jmp
flds
and
cmp
cwtl
pop
mov
decb
mov
test
xor
add
mov
and
pop
test
jp
imul
flds
aam
adc
stc
imul
mov
xor
lea
cmp
hlt
inc
mov
mov
xchg
adc
mov
out
shlb
cmp
hlt
sub
push
pusha
mov
repz
cwtl
add
stc
mov
fidivs
push
outsb
mov
and
cmp
inc
jle
loope
fnstcw
cld
pop
push
sbbb
into
push
xor
clc
clc
addr16
test
inc
aaa
inc
mov
jmp
mov
pop
mov
jo
pop
das
mov
cwtl
sbb
xor
shll
cmp
cli
xchg
push
mov
sub
sahf
adc
hlt
xor
aaa
pop
psrad
and
pusha
push
sbb
incl
mov
sub
enter
push
cmpsb
fisttpl
dec
pop
or
pop
xchg
rcl
mov
test
cmp
in
jnp
pop
push
mov
sub
shr
sub
nop
call
pop
ja
push
add
ret
push
iret
add
sub
sub
inc
xchg
jbe
fiadds
adc
lea
pop
cmp
aaa
cmp
push
movsl
pop
xchg
aad
mov
add
sub
mov
shrl
jb
mov
test
inc
and
or
stos
lcall
sbbl
jno
xchg
aam
jge
or
and
xor
adc
adc
andb
movl
lret
data16
mov
adc
adc
outsl
mov
or
adc
push
pop
mov
mov
ss
movsb
sbb
mov
mov
aad
pushl
mov
sub
and
add
xor
fldt
sub
jl
aas
sbb
mov
xor
adc
mov
pop
pop
adc
stos
sub
push
sti
sbb
adc
xor
dec
scas
add
in
out
fisubrl
add
inc
jno
add
adc
add
stc
in
pop
fiadds
add
add
or
mov
icebp
mov
int
add
les
xor
xchg
push
shrl
push
outsl
add
add
add
add
add
inc
pop
add
pop
add
adc
inc
add
ss
out
or
cmp
push
adc
pop
adc
mov
push
and
pop
xchg
push
jl
mov
repz
push
scas
inc
iret
sbb
dec
add
sbb
jnp
test
push
add
add
fldt
and
cmp
jae
fsubrl
or
mov
inc
hlt
fistpl
adc
pop
mov
imul
pop
and
sti
lret
ja
add
cmp
iret
jecxz
mov
mov
or
clc
cmp
in
jnp
inc
out
jnp
add
cmp
push
pop
stos
jae
cmpl
dec
pop
sub
shlb
pop
add
jbe
mov
aaa
dec
sub
sub
mov
jbe
sub
add
fldt
out
fstpl
cmp
push
bound
sbb
fstpt
or
pop
inc
dec
test
insb
or
xchg
pop
sub
js
xlat
pusha
pusha
xlat
mov
sahf
in
scas
imul
xchg
cli
add
out
xor
add
leave
out
xlat
loop
lds
mov
clc
mov
icebp
mov
sub
dec
mov
cmpsb
sbb
and
add
int
stc
mov
insb
and
add
sub
mov
cltd
adc
stos
mul
mov
outsl
insl
inc
add
push
add
jo
in
ret
out
jp
sub
mov
cmp
push
xor
mov
insl
mov
add
sub
and
jle
sti
out
adc
add
std
imul
outsb
jecxz
sti
push
and
pop
mov
inc
xchg
or
pusha
cmc
xchg
push
jbe
je
jnp
mov
cmp
and
sub
or
fstps
into
or
hlt
xlat
adc
daa
jne
das
add
dec
sbb
es
cmpl
pop
mov
and
mov
jcxz
daa
addl
xchg
fwait
js
insb
or
jmp
incl
lods
ficomps
push
and
jecxz
outsl
out
insl
jmp
repz
ret
sbb
or
mov
loopne
jecxz
fildl
test
fcmovnbe
xchg
test
add
lock
aaa
push
or
mov
jne
ret
insb
jb
clc
aaa
pop
jno
arpl
cmp
pop
icebp
cmpb
sbb
jge
cmp
hlt
or
aas
mov
and
pop
faddl
shll
add
lods
outsl
xchg
sbb
cltd
in
aaa
repz
and
scas
mov
cmpsb
mov
cmp
mov
mov
inc
das
lods
dec
daa
cmp
and
jecxz
sub
movaps
dec
pop
jmp
xchg
pop
cmp
daa
arpl
adc
movsl
jg
adc
dec
adc
or
shll
mov
out
inc
js
add
add
pop
ss
and
imull
xor
mov
loope
mov
pop
and
dec
xor
xchg
sbb
daa
dec
or
sahf
test
jecxz
xor
lods
fstpt
daa
cmpsl
es
and
lods
jnp
mov
xchg
sbb
stos
dec
jmp
dec
mov
div
dec
and
cmp
xor
shll
or
and
outsl
or
daa
mov
xchg
test
cs
mov
sub
cmp
xchg
lahf
or
insl
lea
aam
aad
push
or
cmp
test
out
dec
xchg
xchg
adc
outsl
mov
cmp
pop
pop
pop
lds
popf
insl
pop
jg
movsb
inc
lret
out
adc
mov
pop
cmpsb
mov
js
jg
fwait
jmp
cmp
xorb
aas
jne
or
pop
or
cli
lock
mov
or
push
data16
ljmp
stos
cld
add
jmp
mov
andb
jmp
dec
push
sbb
and
cmp
pop
imul
outsl
cmpsl
pop
inc
sbb
insl
arpl
imul
dec
jnp
repz
lret
inc
jae
mov
icebp
ja
fildl
sbb
imul
ljmp
fisttpll
or
aam
pop
and
sbb
outsb
mov
or
push
or
leave
and
mov
cmp
and
cmpsl
or
sbb
xchg
sub
in
jb
mov
sub
lods
add
test
dec
flds
add
lret
jne
pushf
push
dec
scas
cs
mov
lock
insb
adc
xchg
sub
int3
aam
push
mov
dec
sbb
jne
xor
cmp
add
in
js
lcall
cmp
movsl
mov
xchg
cmp
lods
sub
xor
dec
dec
inc
movzwl
pop
xor
xor
mov
cmp
sub
pop
mov
neg
test
jmp
sahf
mov
push
std
cmpsb
jmp
sbb
xor
daa
or
movb
fs
pop
cli
repz
das
pop
xlat
jne
lret
repz
fildl
lret
pop
fistl
lods
dec
or
sbb
movsl
or
daa
in
cmp
or
fisubrs
imul
jge
shrb
add
or
jle
fstpt
daa
out
mov
test
out
xor
mov
or
es
add
xchg
jns
cmp
adcl
movsl
push
pop
into
aas
mov
mov
xchg
xchg
add
and
fldt
xor
outsl
jns
addr16
icebp
insl
aam
dec
xlat
push
imul
mov
adc
xor
mov
test
jnp
mov
daa
into
push
sub
jge
dec
in
push
mov
jge
mov
sbb
fnstsw
mov
fistl
outsb
adc
out
and
scas
cmpl
aad
daa
cmp
sub
jmp
adc
pop
sbb
xor
sbb
add
and
xchg
les
shrl
adc
inc
dec
pop
add
sbb
push
in
xor
mov
add
cli
mov
cld
mov
shll
cmp
xor
imulb
mov
sub
mov
stos
fcom
inc
add
jbe
pushf
call
imul
mov
mov
jns
and
divb
cs
shl
and
mov
ja
scas
lock
ja
lea
cmp
sub
mov
andl
and
mov
jo
inc
test
dec
dec
push
loop
mov
inc
add
mov
or
call
sub
cmp
push
les
ret
loope
mov
ja
inc
pop
mov
fidivrl
sbb
jne
inc
popa
jecxz
jp
in
bound
jns
or
aam
mov
and
sub
fdivl
or
mov
add
jle
jl
jne
adc
adc
jo
fisubrs
inc
jmp
iret
xchg
jl
clc
scas
std
mov
into
push
sub
test
je
jge
jl
dec
mov
hlt
sub
outsb
or
js
mov
mov
pop
leave
dec
cmp
push
xchg
mov
arpl
leave
imul
xchg
cmp
mov
je
mov
push
adc
dec
sti
mov
cli
sahf
jno
xchg
stos
jb
lods
add
out
repnz
pop
scas
loope
and
in
ret
and
pop
sbb
cmc
jnp
stos
push
arpl
mov
jne
pminsw
jns
mov
add
shrl
or
arpl
movsl
fcmovnu
lcall
jo
mov
mov
adc
push
push
or
daa
imul
and
iret
movb
sub
bound
loope
jmp
popa
dec
sbb
or
cld
sti
adc
es
push
outsb
mov
in
ret
mov
or
roll
fnstsw
and
addr16
aad
jbe
pop
mov
sub
ds
push
popf
out
imul
cmp
mov
or
test
mov
rclb
xor
xor
dec
mov
stos
test
dec
mov
lods
jmp
xchg
and
xchg
mov
ss
repz
xor
out
pop
mov
or
insb
add
jbe
ds
shll
ss
mov
fisubl
mov
xorl
jmp
sbb
lahf
xchg
arpl
lods
aas
dec
xchg
xchg
cmp
cmp
sti
aas
ret
xchg
test
or
xor
pop
stos
aam
and
mov
sub
mov
adc
and
pushf
fstps
jmp
sarl
xor
jne
jmp
arpl
pop
rorb
or
cmp
outsb
loop
sub
push
and
add
and
mov
xchg
dec
movsb
jae
test
ss
orb
pop
mov
pop
push
ret
sbb
dec
bound
jle
xor
inc
jmp
pop
rcrb
cmpsb
xchg
stos
popa
adc
jnp
div
stos
or
cli
and
jne
mov
add
adc
xor
ret
popa
and
fldl
xor
cmp
shlb
jmp
sbb
roll
adc
cmp
cmp
outsl
cmc
jg
fsubrs
add
fnstsw
ljmp
pop
out
jae
jg
aam
loopnew
xor
sub
and
jnp
enter
aad
inc
jp
out
adc
or
sub
ds
lcall
pop
mov
adc
es
subl
stos
pop
ret
xchg
imul
jecxz
in
mov
mov
shll
push
insl
loopne
aad
subb
inc
aaa
push
lcall
mov
xchg
psubq
sarl
push
add
lcall
mov
ja
push
in
and
mov
jns
insl
push
dec
jg
jecxz
cmp
mov
aam
lock
sbb
cmp
scas
rcll
pop
sbb
test
outsb
pop
sbb
xchg
sub
mov
xor
adc
adc
sub
adc
pusha
xchg
sub
cmp
je
jecxz
leave
adc
popa
or
loopne
cmp
sub
lret
jl
cld
fcompl
inc
push
mov
dec
sub
daa
mov
les
adc
rorb
shll
mov
lods
addl
popw
jp
mov
int
adc
xchg
mov
jae
pusha
lods
imul
shlb
pop
fidivs
in
ret
mov
out
int
ficoms
dec
mov
push
mov
mov
sub
mov
insb
inc
or
push
pop
jo
cmp
push
and
pop
pop
push
push
mov
xor
mov
mov
jo
mov
mov
lcall
das
arpl
pmaxsw
sbb
mov
das
arpl
aas
cmc
cmp
add
insl
aas
js
pop
xchg
test
fwait
mov
mov
aad
xorl
jb
mov
adc
mov
cs
adc
je
mov
dec
push
dec
inc
lea
or
nopl
fisttpll
jge
fcmovnbe
nop
jne
dec
cwtl
ret
pop
pusha
cmpsl
pop
mov
aam
fwait
movsb
add
and
imul
pop
sbb
inc
and
dec
lds
cmp
pop
cmp
lds
and
dec
sub
add
push
sub
jecxz
addl
push
frstor
fsubrs
rorl
cmp
aad
pop
iret
cmp
insb
not
ja
call
scas
push
push
xchg
mov
cmp
mov
sahf
sub
ds
dec
and
pop
mov
sbb
scas
lret
xlat
sbbb
push
inc
inc
xchg
ljmp
lds
jnp
jne
rcll
xchg
lea
ds
or
shr
mov
ss
pop
popf
lods
mov
pop
add
out
sbb
insb
mov
mov
mov
push
adc
jae
and
popa
int3
mov
mov
jmp
or
ds
push
push
pop
mov
inc
loope
cmp
cltd
jge
and
loope
fidivrs
popf
lea
repnz
xor
inc
jge
inc
sbb
xor
je
cmp
cmp
pop
sbb
into
in
push
std
test
pop
jne
mov
pop
dec
sbb
push
pop
pusha
cltd
cmpsl
lods
in
fstps
cmp
xor
lret
shr
test
in
or
jo
push
icebp
push
nop
sub
shrl
pushf
xor
jne
sbb
push
leave
mov
cmpsb
scas
sub
xor
sub
jmp
adc
fists
pop
dec
sbb
pop
fidivrs
mov
and
scas
loop
mov
xchg
push
mov
enter
push
daa
mov
push
js
cwtl
mov
jne
push
xor
xchg
sbb
or
mov
dec
add
cmpsl
idivl
mov
dec
xlat
xchg
push
fildll
or
das
in
negb
rorb
or
sbb
ucomiss
addr16
inc
adc
sbb
jecxz
fnstcw
push
aam
xor
jbe
ffreep
int3
loopne
in
add
flds
jbe
xchg
lcall
comiss
loopnew
clc
ljmp
ljmp
test
pop
push
mov
sub
call
das
cwtl
bound
xlat
ret
or
cmp
loopne
xchg
clc
in
sub
cmp
stos
push
mov
aas
mov
sbb
and
into
jl
aad
mov
aam
inc
cli
push
outsb
call
adc
fcoml
xchg
negl
rcrl
out
mov
imul
fbstp
dec
or
daa
repz
outsl
out
inc
add
test
xor
dec
cmpsb
mov
sub
cmpl
loope
imul
or
jne,pt
mov
pop
dec
mov
movsl
cmovns
loope
fwait
ret
xlat
sub
xchg
mov
xchg
xchg
movsl
mov
test
jge
sub
cmp
data16
add
clc
in
xchg
adc
int
cli
mov
xor
das
inc
je
mov
mov
mov
adc
push
mov
daa
or
fidivl
das
inc
xchg
jecxz
xlat
ss
ja
pop
jne
push
add
loopne
xor
mov
movsl
jbe
lea
jmp
xor
mov
and
lods
sbb
or
pop
fisttpll
mov
push
inc
pop
clc
test
repz
pop
sub
es
das
jle
mov
dec
ret
lds
bnd
sbb
mov
push
inc
mov
in
ret
call
loope
in
xchg
in
sbb
jge
mov
adc
mov
arpl
sub
pop
es
push
xchg
fsubl
fistpll
les
jns
dec
adc
xor
daa
jle
sub
movsl
sub
pop
ret
xorl
gs
sbb
ds
sbb
inc
add
mov
jmp
jge
cli
or
imul
cmpsl
dec
pop
push
xor
aaa
inc
ds
lret
mov
dec
mov
mov
int3
add
pop
mov
cmpl
in
xchg
xchg
pop
in
jp
int3
pop
add
inc
lock
pop
mov
sub
xor
test
xchg
loopne
outsb
xlat
mov
cmp
mov
les
and
js
jbe
jp
mov
sbb
ret
adc
lods
xlat
movl
loope
xlat
jmp
loopne
iret
xchg
adc
iret
jne
sbb
call
mov
int
dec
addl
test
jle
fsubl
mov
test
outsl
popa
xlat
inc
insb
scas
shrb
sbb
pop
insl
dec
xor
cmp
sbb
add
mov
paddsb
mov
jb
fiadds
sbb
call
stc
pop
dec
iret
jp
sub
dec
xor
mov
imul
scas
xor
mov
pop
bound
push
mov
jmp
pop
pusha
jg
fidivs
push
fsubs
int3
xchg
outsb
adc
popf
xor
sub
aad
push
es
jle
hlt
inc
mov
out
xchg
shlb
aaa
push
loope
mov
ss
fimuls
xor
xor
in
cmp
cmpsb
sub
push
jg
sbb
hlt
imul
mov
into
ss
les
shl
roll
imul
sti
pop
movl
adc
arpl
rcrl
jo
rcl
mov
or
jle
loope
and
out
cmp
lahf
add
jnp
or
and
mov
cmpsb
cmpsl
sti
out
int
add
mov
mov
pop
push
pop
int
push
fdivrs
dec
add
test
fsubs
and
icebp
xorl
stc
testw
cmpsl
mov
in
push
jnp
mov
dec
js
jae
mov
sbb
cmpsl
and
je
psubsb
mov
js
mov
push
cmpsl
lcall
push
add
or
fs
jge
mov
mov
sub
cmpsl
xchg
arpl
jle
scas
cli
xor
dec
call
aaa
jae
insl
hlt
mov
pushf
addb
fidivl
lcall
imul
dec
movl
sub
arpl
leave
jno
and
xor
mov
mov
adc
sbb
xchg
sbb
cmpsb
loope
imul
adc
pop
in
jp
xchg
enter
popf
in
insb
jns
test
pop
xchg
rorl
jle
in
push
inc
movsl
test
insb
sbb
push
mov
xchg
add
or
push
inc
cltd
mov
sbb
xchg
or
xor
sysexit
mov
xor
les
push
pop
jl
lahf
jo
outsb
or
sbb
push
bound
ss
jo
add
adc
fisubrs
push
push
out
fildll
push
mov
inc
aad
in
mov
add
cmc
xor
lock
imul
imul
xor
jmp
cmp
pop
scas
xor
push
or
pop
cmpsb
jbe
jae
cmp
sbb
jo
lock
pop
and
cmp
imul
mov
je
clc
in
mov
popf
cmc
mov
mov
jl
ss
icebp
insb
add
fwait
addl
or
dec
iret
mov
loope
push
push
sahf
or
jbe
cltd
out
push
jp
clc
sub
jl
sbb
lock
jl
pop
sub
push
jle
insb
push
mov
lods
pop
das
cmp
insl
sub
sbb
adc
inc
pcmpgtd
xchg
js
stos
jnp
stos
lods
inc
aad
js
xor
js
dec
scas
scas
stos
cmp
pop
sbb
stos
popa
je
and
loope
or
jg
inc
and
cltd
clc
mov
xchg
dec
sbb
in
and
xor
les
push
mov
jb
js
adc
fcomi
loopne,pt
jae
sbb
test
lahf
popa
xlat
stos
cmp
and
or
gs
fwait
cmp
cmp
rolb
in
lods
daa
pop
pop
sahf
pusha
cmc
or
lds
cmpsl
add
push
mov
loopne
pop
sbb
rolb
das
jnp
out
inc
scas
mov
aas
in
mov
inc
inc
ret
mov
cmp
mov
xchg
imul
imulb
scas
mov
dec
call
xor
push
mov
inc
jp
scas
jbe
push
shlb
repz
xor
adc
fmuls
insl
inc
ret
pop
int3
xor
nop
jb
ss
dec
lret
outsl
movl
fcompl
and
imul
divb
xor
pop
out
sbb
test
pop
mov
adc
adcl
js
xchg
mov
sub
add
sarl
xor
mov
mov
mov
idivl
aam
or
pop
pop
lahf
add
or
inc
ret
daa
push
fwait
sub
scas
in
enter
hlt
shll
stc
mov
xchg
jg
jne
jnp
jmp
mov
fsub
mov
xor
in
add
mov
lcall
insb
mov
dec
push
sbb
cltd
ja
jg
addr16
xor
jne
add
adc
imul
sbb
stos
shl
mov
aaa
dec
insl
sub
jmp
cmp
xrelease
and
loope
insb
xchg
scas
and
iret
mov
jns
jecxz
cmp
call
loopne
into
fiaddl
das
mov
dec
rorl
out
add
adc
notl
pop
dec
sbb
sbb
push
ss
pop
mov
add
aad
cmc
ss
pop
outsb
js
pcmpgtd
jnp
lds
jnp
jns
decb
mov
call
jge
mov
loope
xor
cmpsl
cmp
je
mov
test
xor
ljmp
call
inc
lods
jbe
dec
addr16
lods
aaa
mov
lock
xchg
jge
movsl
ret
jnp
shll
sbb
xchg
mov
aam
call
and
ds
and
sbb
lahf
lods
jns
aad
xor
mov
or
push
fbld
lret
hlt
daa
jb
shrb
lds
push
ror
and
cmp
mov
add
mov
jne
mov
movl
popa
roll
mov
pop
aas
ds
jae
mov
push
rorl
clc
clc
xchg
jp
outsb
not
and
mov
xor
fbstp
scas
or
movsb
push
push
mov
sub
xchg
mov
xor
test
or
mov
jbe
mov
mov
cmp
sub
cltd
mov
jmp
jno
rclb
imul
mov
mov
push
test
fdivrl
sarl
je
test
mov
push
pop
jo
popa
mov
sub
pop
push
pop
adcb
insl
sbb
jb
or
push
or
push
cmp
dec
in
stos
and
xchg
mov
and
xchg
cmp
sbb
ret
mov
adc
addl
jns
sbb
ss
rcl
je
jae
pop
call
mov
loopne
xchg
mov
sti
ret
jnp
je
test
or
shlb
mov
frstor
cwtl
in
xchg
add
mov
fmulp
mov
rorb
push
sub
lods
jnp
lock
pop
aas
mov
pop
pop
std
cli
push
hlt
pop
sar
pop
fidivl
aad
fwait
push
stos
cmpsl
inc
and
flds
stos
pop
push
sub
inc
out
test
cmp
adc
mov
cmovp
xchg
dec
pop
ror
jbe
mov
movsb
lret
test
and
dec
xchg
or
jle
inc
adc
into
sbb
fldt
or
scas
jno
mov
cmpsl
mov
ss
notl
push
mov
sub
lea
xchg
mov
fwait
popa
popa
or
dec
cmc
pop
lock
rorl
and
pop
sbb
fcomp
cmp
or
adc
xchg
push
jbe
sbb
sti
push
xor
fldenv
cmp
ret
xor
je
mov
data16
ss
push
add
ljmpw
das
cmpsb
outsb
sub
fildll
jmp
fdivr
push
out
in
sub
jecxz
call
rcl
and
jae
rcll
aad
ljmp
cmp
je
xor
pop
ja
mov
je
inc
aam
pop
xchg
mov
sbb
push
cmp
mov
mov
insb
adc
push
mov
sbb
das
stos
aam
pop
sub
mov
shl
pop
jg
push
mov
dec
push
inc
xor
ss
mov
adc
mov
jle
sub
lahf
mov
mov
mov
xchg
movsb
sahf
mov
imul
sub
mov
jmp
sbb
push
mov
call
shrl
xchg
stos
xchg
cmp
jo
aas
dec
jb
imul
sbb
insl
cmpb
push
scas
push
xchg
out
int3
cltd
aaa
fdiv
and
aam
dec
mov
in
mov
jge
xor
mov
pop
push
xchg
or
jg
add
push
int3
add
sub
sarb
je
or
cmp
cld
mov
jne
mov
pop
jae
dec
lea
lods
sti
aad
mov
dec
sub
iret
ret
pop
or
loopne
or
or
mov
lds
adc
pop
or
aad
xchg
inc
cmpsl
inc
cmp
das
or
outsb
or
adcl
mov
jnp
out
loope
mov
sahf
dec
sbb
movsl
pop
or
imul
pop
mov
icebp
in
imul
fldl
or
outsb
mov
rol
pop
pop
test
push
xor
push
fldt
sbb
jb
mov
arpl
jl
test
in
jno
inc
ficoms
enter
ret
pop
or
je
ret
sbb
mov
insb
bound
cmpl
adc
mov
sub
int3
iret
aaa
push
cmp
inc
nop
pop
pop
out
jl
pop
ret
add
mov
data16
les
scas
or
scas
sti
pop
xor
ret
mov
push
jmp
and
mov
push
and
cmp
popa
and
ret
mov
clc
sahf
lods
imul
pop
cld
sub
rcl
push
dec
pop
fs
cwtl
outsl
pop
push
outsl
xchg
cwtl
cmp
repz
jp
xor
in
cmp
test
dec
lret
outsb
mov
mov
pop
gs
adc
jno
xchg
insl
ret
cmpsb
mov
data16
sbb
jmp
xchg
or
or
jnp
sbb
shlb
les
stos
popl
out
popa
popf
sti
fcom
inc
cmpsl
adc
inc
push
mov
or
fldenv
and
sub
rcl
test
jns
jp
pop
insb
lahf
fstp
xchg
mov
test
mov
mov
cmp
ss
mov
mov
push
into
sbb
push
push
xchg
hlt
mov
negl
enter
pop
ret
xor
mov
mov
mov
inc
aas
aam
and
mov
jno
icebp
imul
aaa
cmp
or
mov
mov
xchg
dec
and
ret
icebp
loopne
div
add
push
mov
out
lds
mov
insb
or
outsb
cmp
imul
pop
push
sbb
cmp
pop
ds
mov
mov
cmp
repz
in
ss
shlb
mov
cmp
xor
jne
lcall
lods
lret
inc
dec
loope
aaa
ret
inc
mov
jae
sbbb
xlat
xchg
lahf
adc
fsubrp
and
aam
enter
stc
cld
rcr
loop
insb
mov
pop
mov
dec
out
push
dec
cmc
js
cmpsb
pop
movsb
pop
pop
cwtl
bound
xlat
cmc
inc
jge
in
mov
jl
in
mov
rolb
dec
jge
cmp
xchg
sub
mov
sub
repz
cmp
cli
dec
xor
ja
sub
xor
shll
jl
scas
xchg
dec
dec
pop
stc
mov
out
sub
mov
jecxz
mov
pop
aas
jg
mov
sbb
mov
inc
xlat
loope
popa
push
cmp
pop
je
imul
xchg
fnstcw
inc
push
fistpl
sub
test
sub
imul
mov
in
sbb
ss
jg
and
fcmovnb
add
imul
mov
imul
mov
insl
jae
js
jle
or
out
divb
and
inc
push
std
test
sub
ret
and
push
adc
mov
lea
test
negb
es
add
int3
cmp
testl
lods
loope
out
fwait
lcall
fdivrl
add
jecxz
repnz
sbb
rolb
or
call
sub
shll
std
mov
jmp
jp
xchg
fsubrs
xchg
call
dec
or
insl
push
or
sbb
fcmovb
and
jne
xchg
and
data16
sub
xchg
sbb
movb
pop
xchg
lods
cli
sbb
mov
arpl
out
jmp
sbb
shl
push
arpl
or
xor
data16
pop
mov
mov
mov
cmp
jne
mov
sti
movsb
mov
daa
loop
ja
out
sub
sbb
and
cmp
aaa
cmp
daa
cmp
xchg
pusha
add
jle
stos
and
push
ret
fsubrs
push
das
lret
mov
mov
sub
sub
sbb
cmp
ja
adc
dec
sub
test
aaa
mov
sub
ret
push
out
fsubr
and
shrl
das
xor
mov
mull
in
mov
inc
mov
jecxz
fs
pop
mov
shlb
sbb
mov
sbb
jp
jb
addr16
movsl
mov
pop
dec
ret
push
movsb
lret
fisttpl
hlt
xor
dec
cmp
mov
push
movsb
or
xor
mov
add
cwtl
ret
add
das
mov
xchg
push
sahf
insl
push
xlat
push
retw
xchg
adc
mov
fstpl
mov
insb
ja
xchg
outsb
in
cmp
pop
add
movsbl
int
pop
fcomi
ljmp
ret
mov
gs
scas
inc
mov
mov
xor
je
into
ja
out
mov
repz
sub
jb
addr16
and
xchg
push
cli
or
pop
pop
cmp
jl
jg
ljmp
mov
or
lea
sbb
pop
and
mov
sub
inc
mov
pusha
dec
add
mov
ret
sbb
insb
outsb
fisubs
aad
jbe
mov
add
or
cvtps2pi
sbb
dec
adc
repnz
imul
or
or
loop
or
add
xchg
rcl
into
mov
aam
jg
mov
test
cmp
int
aaa
fsts
and
out
jne
fdivs
add
mov
gs
pop
mov
lcall
jmp
xchg
mov
sbb
ret
scas
stos
test
popa
xor
inc
lcall
sahf
mull
sti
out
mov
ret
mov
mov
push
pop
mov
xorl
dec
pop
mov
push
mov
xchg
mov
mov
mov
mov
addr16
mov
or
push
roll
test
and
push
icebp
hlt
lods
es
jg
rclb
je
sub
ja
andb
dec
int
cwtl
sub
test
mov
sub
pop
push
xor
out
mov
dec
gs
push
js
xchg
fwait
jle
pop
sub
jmp
in
iret
aas
ljmp
arpl
sub
mov
or
mov
adc
mov
jmp
mov
clc
aas
sub
jo
cmpsl
es
lods
adc
fiaddl
loopne
cwtl
cltd
shlb
mov
repnz
jne
pop
inc
fists
and
dec
mov
into
fimuls
mov
addr16
pop
vpsraw
daa
outsb
push
jp
test
fstpl
ds
and
insl
mov
pop
pop
into
ret
jb
pop
sarb
fwait
pop
push
sti
jnp
mov
loop
mov
ret
and
jbe
mov
or
outsb
bound
inc
cmp
andb
nop
into
stos
mov
imul
cmp
pop
and
adc
popl
je
jp
dec
and
jl
xchg
mov
mov
adc
stos
lds
test
lcall
inc
test
sub
cmp
repnz
pop
jb
jbe
cmpsl
sbb
xor
lret
lods
out
sti
sub
daa
mov
pop
imul
imul
mov
xchg
xor
mov
xchg
jne
or
add
out
retw
xchg
mov
push
xor
and
adc
pop
call
cmpsb
and
enter
dec
sbb
xchg
jnp
movsb
pusha
jmp
sahf
leave
jno
mov
out
mov
ret
fisttps
push
pop
cmp
pushf
fimuls
out
stos
push
ret
call
or
push
aaa
xor
mov
movsl
or
inc
adc
cwtl
dec
js
addl
test
mov
call
add
scas
or
xor
jae
jbe
pusha
jp
sahf
inc
inc
jg
movsl
call
push
xor
or
xor
roll
inc
popa
les
js
mov
icebp
cmc
mov
sbb
sbb
pop
addr16
sbb
stc
xlat
mov
mov
inc
cwtl
fidivl
adc
xor
popw
cmpsb
scas
inc
icebp
fildl
mov
rorl
add
enter
jg
out
ds
fwait
out
dec
push
ss
mov
scas
mov
fisttpl
xor
mov
and
dec
cmc
add
inc
push
mov
fldt
adc
xor
cmpsl
scas
in
jno
lock
pop
fstpt
mov
sub
mov
and
gs
stos
icebp
aam
and
pop
outsl
mov
push
sbb
inc
loope
jge
insb
sbb
sbb
mov
pusha
dec
or
loopne
sbb
pop
and
aaa
cs
leave
sub
adc
inc
inc
call
stos
repz
js
mov
ret
dec
ficoml
dec
addl
sahf
cmp
jb
das
jnp
std
jbe
jmp
jmp
and
jg
insl
jae
fimull
mov
cmc
dec
jne
scas
sbb
or
push
in
aam
mov
cli
xor
cmpsl
push
iret
stos
mov
push
fildl
fwait
popa
test
add
or
jno
push
fildl
pop
ret
jae
pop
aaa
imul
or
and
std
rcr
in
or
pop
stos
dec
rolb
fnstsw
and
sti
les
fstpl
test
lods
cmpsb
jp
cs
adc
jge
jnp
mov
pop
notb
scas
mov
xor
das
das
lcall
jns
push
mov
xor
cmp
sbb
inc
sbb
jo
test
jne
insl
push
arpl
dec
inc
addr16
and
cmp
sub
dec
test
ret
cmpsl
add
push
sbb
xor
xor
outsl
ja
push
in
pop
pop
mov
dec
decl
cmp
sub
outsl
je
insb
and
pop
mov
mov
inc
sub
sbb
imul
xlat
sarl
inc
jp
pop
sti
out
int
inc
cmpsl
xorl
sub
mov
jp
loope
insl
popf
mov
push
sbb
popa
push
sarb
adc
sub
fistl
jecxz
adc
jle
aam
pop
mov
sti
add
rcrb
sbbl
std
pop
les
test
add
daa
stos
sahf
xor
into
ret
mov
push
je
jecxz
xor
push
outsb
jecxz
xor
outsl
jnp
imul
lock
mov
mov
mov
aaa
or
sbbl
jb
xor
inc
push
ret
pop
js
iret
dec
pop
mov
jl
push
test
adc
es
mov
and
and
jmp
outsb
mov
adc
lock
pop
shl
fmuls
mov
js
rorl
divl
cmp
xchg
sub
cmp
aas
rcrl
fstpt
gs
mov
sti
jns
jg
cmp
rcr
sbb
inc
dec
mov
call
test
xor
icebp
cltd
rorb
in
jbe
adc
loope
sahf
popf
or
mov
inc
into
mov
cwtl
fstl
cmp
jmp
adc
mov
test
jb
inc
out
or
add
pop
loope
mov
stos
pop
testl
dec
rcrb
pop
xor
pop
icebp
mov
push
fs
aas
and
in
pushf
mov
cmp
loope
cmp
scas
loop
mov
sbb
pusha
inc
adc
pop
cmpsb
ret
nop
adc
push
mov
inc
addr16
mov
push
mov
mov
xchg
shrb
movsl
mov
ds
and
fwait
sbb
jecxz
stc
movsl
push
insb
filds
call
cmp
test
pop
push
cmpsb
shl
mov
fdivs
movb
cltd
jl
mov
mov
push
fldenv
jno
mov
hlt
jo
xchg
scas
icebp
fbld
cmp
cli
mov
pushf
mov
popf
cltd
clc
imull
inc
aaa
insl
jge
mov
cmpl
mov
jge
pop
nop
cmp
sbbl
js
rorb
sbb
pmullw
and
stos
mov
add
fucomi
sub
push
outsb
push
xlat
setge
push
test
sbb
loopne
jbe
jmp
adc
jns
push
mov
outsb
or
cmpsb
stos
addr16
int3
push
push
iret
sub
push
leave
nop
dec
add
cmpsl
outsb
out
imul
es
adc
and
cs
add
aam
call
xor
repnz
js
jle
and
mov
das
ljmp
pop
clc
push
notl
std
jne
push
inc
mov
lods
popf
dec
insl
xor
mov
mov
mov
dec
es
or
jg
out
and
jge
lds
bound
or
out
inc
mov
mov
imul
mov
out
adc
leave
mov
aaa
jmp
mov
dec
mov
fsub
cmpsb
lods
fstpl
inc
ja
data16
mov
push
jmp
popf
cmpxchg8b
iret
inc
add
xorl
insb
mov
mov
rcrl
xor
ficoms
cmp
outsb
dec
mov
mov
cmpsb
and
pop
test
bound
in
add
inc
mov
and
and
sbb
sub
add
in
insb
dec
ds
xchg
inc
cmp
mov
push
clc
xor
icebp
add
fwait
scas
test
movsl
sub
js
jp
sbb
je
push
loop
loopne
mov
sbb
mov
pop
pop
xchg
test
sub
clc
push
cmp
sbb
out
in
es
push
cmp
fadds
pop
xor
lock
mov
shll
adc
jmp
mov
mov
or
mov
sbb
incl
add
js
mov
sub
inc
xor
enter
mov
pop
xlat
sbb
mov
call
negb
imulb
adc
call
mov
out
xor
pop
push
iret
clc
mov
ljmp
cmp
inc
pop
imul
ret
push
cmp
adcb
enter
loopne
imul
pop
xor
test
repnz
mov
pop
test
jns
bswap
add
lahf
stc
mov
mov
mov
adc
pop
mov
mov
xor
mov
lret
mov
ss
arpl
or
or
pop
inc
adc
outsb
loope
mov
movsb
test
pop
dec
push
fs
mov
mov
loop
out
and
pop
rcrl
jl
jg
mov
pop
xchg
dec
stos
dec
pop
stc
sub
pop
sahf
and
mov
or
lock
outsb
sarl
das
sahf
pusha
pop
push
sbb
dec
sub
in
cmp
inc
aad
push
popa
pop
outsb
or
xchg
jmp
fstpl
sahf
fcompl
ja
or
cmpsl
out
je
outsl
or
mov
repnz
push
sub
mov
lcall
ljmp
dec
cmpsb
cmp
push
dec
test
mov
ja
into
test
jbe
iret
clc
jecxz
inc
cmp
push
and
jle
adc
pop
fwait
rdtsc
fldcw
ja
rolb
sbb
xor
sub
ficompl
sbb
sub
not
pop
fs
stos
mov
out
cmp
aas
mov
and
leave
addl
nop
daa
mov
ret
push
pop
fisttpll
out
das
das
xchg
push
rcll
mov
jno
mov
push
push
iret
dec
sbb
out
inc
scas
aas
push
inc
lret
xchg
jb
popa
popa
jge
push
inc
pusha
das
test
cmp
nop
add
mov
push
pop
xor
andb
pusha
cmp
jp
jmp
add
mov
pop
popf
pop
jbe
jmp
lcall
lea
insl
je
adc
xor
std
arpl
call
cltd
cmp
xchg
test
test
repnz
jp
or
adc
inc
push
inc
pop
fbstp
cltd
loopne
mov
rclb
bound
xor
fnstsw
adc
outsl
insl
mov
mov
fisubs
pusha
outsl
addr16
push
pop
imul
jb
mov
adc
ds
and
adc
daa
data16
cmpsb
test
or
sbb
and
jne
hlt
negb
fwait
xchg
xor
mov
xor
add
call
xchg
mov
das
sahf
fidivl
out
cmp
repz
mov
sbb
adc
std
in
jmp
cmp
int3
shrb
mov
and
lds
mov
inc
stos
lods
xchg
mov
adc
movsb
jo
lea
mov
shr
fisttpll
repnz
push
aam
pop
pop
mov
scas
out
ret
pop
fildl
jo
scas
fildl
dec
or
scas
repnz
cld
cmp
outsb
ffreep
adc
pop
sub
pop
jo
jge
pop
pop
xchg
stos
mov
dec
ret
jle
mov
cmp
es
mov
inc
out
outsb
pop
jnp
fistpl
test
inc
ja
or
rcrl
sarb
xchg
pop
and
cmpsb
scas
sub
mov
dec
lret
iret
out
mov
lock
dec
lret
lcall
xor
dec
xchg
test
dec
pop
out
movsl
loopne
fnstsw
jecxz
mov
popa
adc
xchg
mov
rolb
add
xchg
cmp
lret
mov
jmp
imul
icebp
xor
fcoml
shlb
xor
mov
jne
mov
mov
clc
adc
iret
fdivrl
push
les
in
xchg
pop
outsl
sub
cmpsl
xlat
mov
fcoml
lods
leave
sti
pop
repnz
xor
xorb
mov
mov
adc
insb
insl
fdivs
shl
xchg
test
mov
bound
cmc
imul
pusha
fistps
iret
jp
cltd
in
hlt
aam
call
negb
mov
not
cmp
jnp
or
int
and
icebp
cli
sahf
jb
dec
jge
aas
fsubr
sub
div
test
lret
out
and
sbb
push
stos
mov
lods
sub
dec
mov
shlb
stos
mov
icebp
and
xor
std
mov
xor
inc
ja,pn
sub
je
daa
daa
mov
sarl
pop
test
jecxz
adc
adc
test
cmp
jp
mov
gs
fs
divl
subb
ror
ljmp
adc
ds
mov
mul
clc
and
int3
push
mov
dec
pushf
or
adc
mov
popa
shll
sub
push
push
jo
push
push
les
lcall
dec
pop
dec
and
fdivrl
sub
scas
sub
xchg
mov
subl
fwait
std
pop
jbe
divl
imull
cltd
ds
rorl
jns
rcll
push
loopne
mov
mov
mov
pop
rol
and
cmpb
outsl
cmp
mov
loope
xor
sub
pop
pop
imul
push
or
rol
out
imul
popa
cmp
clc
push
pop
fdiv
fstpt
or
adc
psrlw
hlt
push
aad
or
bound
or
push
mov
addr16
out
ljmp
sti
js
mov
and
sbb
push
mov
mov
rclb
in
cmp
fs
push
mov
sbb
xchg
fs
sbb
mov
dec
sbb
daa
xlat
mov
inc
xor
ljmp
sub
or
cmp
sti
mov
add
pop
scas
or
cs
and
call
adc
xchg
ja
mov
inc
jle
in
mov
or
cs
idivl
jb
test
inc
loope
stos
mov
loope
je
jns
es
std
loopne
mov
mov
adcl
and
jb
ljmp
cs
jne
out
jle
pusha
imul
xchg
add
push
cmp
and
mov
shlb
adc
add
pop
xlat
push
loope
adc
cltd
mov
fs
cmp
popa
cmp
mov
jne
dec
scas
jg
xchg
push
push
test
je
adcb
mov
push
out
pop
out
inc
sbb
and
out
rcr
aas
cltd
cs
ss
push
fmulp
sub
out
xor
aaa
fdivr
js
mov
ret
aam
xchg
or
sbb
call
jb
xchg
std
adc
scas
jae
cmp
sarl
mov
shr
js
lahf
mov
xlat
jbe
jns
insb
inc
mov
sub
fstl
mov
add
xchg
in
inc
cmp
adc
aas
test
dec
push
xor
mov
pop
pushf
cmp
pop
add
fimuls
inc
popa
jb
js
js
mov
cwtl
sti
insl
loopne
cmp
cmp
sub
sbb
xor
or
push
cmp
jmp
inc
jae
test
jecxz
mov
adc
mov
push
jnp
jno
imul
sbb
xchg
pop
das
dec
sbb
mov
mov
fs
dec
pop
aad
push
mov
cmc
sub
cmp
test
mov
aad
data16
mov
roll
cmp
inc
mov
aaa
inc
mov
dec
outsb
div
insl
pop
test
or
and
out
push
push
cmp
sarb
jnp
mov
out
add
std
pusha
or
pop
and
mov
leave
ret
sbb
js
leave
cli
mov
sbb
push
inc
ret
test
sub
rclb
dec
movsb
int
lock
pop
sbb
mov
mov
ret
push
inc
mov
or
pop
sarl
out
clc
ds
movsb
mov
outsb
popa
outsl
jns
aaa
in
sub
jbe
clc
mov
or
sub
rcrb
jge
ficomps
add
outsb
dec
jg
xchg
jbe
inc
movsl
lahf
ss
mov
jns
insb
outsl
or
sti
popf
rclb
iret
xor
dec
dec
cwtl
mov
add
sub
adc
mov
push
cmp
in
cmp
adc
scas
imul
and
jbe
or
dec
filds
jle
lcall
inc
xor
jnp
shll
in
les
out
into
stos
test
xor
iret
aaa
out
jnp
pop
pusha
xchg
xchg
or
pusha
clc
inc
mov
mov
ljmp
mov
push
mov
pop
popw
ffreep
dec
or
dec
and
je
pop
mov
jle
int
scas
jmp
jbe
or
mov
push
jne
jbe
lahf
mov
inc
fistpl
loopne
sbb
in
pop
idivl
fwait
cmp
sbb
jecxz
icebp
push
int
sahf
je
push
aas
inc
cmpsb
pop
push
sti
and
out
repz
push
rcll
xlat
pop
and
add
push
dec
jne
movzwl
or
nop
xlat
push
inc
jno
inc
pop
xor
push
add
sbb
insb
jge
dec
pop
mov
ljmp
xchg
cmc
mov
mov
cmpsl
mov
lahf
fdivrp
inc
shll
and
out
and
cmp
jecxz
lea
pop
std
aad
pushf
roll
and
inc
les
cmp
sbb
daa
inc
or
push
jle
outsb
movsb
daa
sbb
xlat
pop
mov
mov
js
fsubr
int3
xor
mov
push
icebp
dec
fstp
jge
lock
xchg
lea
outsl
pop
push
in
xchg
add
jb
cltd
inc
std
dec
xlat
lods
mov
inc
sub
pop
sbb
scas
jmp
add
mov
imul
mov
cmpsb
negb
adc
stos
test
inc
fcomp
and
std
sbb
xor
adc
jmp
je
cmp
loopne
xchg
out
aam
push
ss
jne
lahf
mov
or
test
mov
sbb
xchg
je
mov
adc
aad
mov
jmp
ja
push
movsb
or
movsb
mov
inc
out
jbe
stos
sbb
or
sbb
and
pop
rcrb
sub
out
xchg
or
sub
js
inc
test
inc
imull
ljmp
je
jp
pushf
dec
faddl
jnp
xlat
cmpsl
arpl
add
inc
push
imul
std
loop
leave
mov
ljmp
inc
or
xor
rorl
and
cmp
mov
fsubrs
mov
jno
pop
push
adc
mov
packssdw
cwtl
or
popa
push
ffreep
cmp
movsl
lods
jnp
xlat
add
lahf
or
test
in
popa
pusha
push
sub
push
dec
rorb
fsubs
cli
rolb
ja
xchg
lock
icebp
pop
sub
add
or
rep
je
pop
je
jb
int3
inc
sti
xchg
sbbb
dec
pushf
dec
sbb
aaa
mov
jg
data16
push
stos
cs
push
pop
in
pop
lods
and
ljmp
dec
pushf
xchg
insl
ficoms
inc
jb
call
outsl
adc
xor
push
sbb
test
jl
mov
xchg
cmp
mov
mov
push
inc
cld
mov
pop
lret
shll
pop
mov
or
mov
lods
jb
inc
push
arpl
and
cld
or
ja
shll
dec
ljmp
popa
mov
mov
shrb
xchg
out
loope
dec
jle
adc
mov
pop
jo
fldt
mov
mov
ret
mov
cld
sbb
inc
add
enter
pop
push
fistl
mov
inc
add
cmp
cmp
pop
cmp
test
jnp
sbb
and
mov
sub
or
cmpsl
loopne
add
loopne
cli
pusha
stos
mov
lods
sbb
fimuls
fs
adc
jmp
arpl
pop
pusha
lods
stc
cld
ffree
xor
push
push
icebp
jnp
mull
and
cmp
mov
shll
pop
xor
mov
push
mov
push
stos
fistl
mov
aas
jo
xor
pushf
aad
test
push
aam
jno
cs
jmp
mov
out
les
mov
inc
xlat
call
movl
inc
mov
push
push
pop
push
icebp
dec
je
mov
movsl
aad
pop
imul
dec
je
iret
and
push
rcrb
add
cmp
dec
sbbl
sub
jno
nop
repz
mov
stos
jp
mov
mov
xchg
repnz
push
movsl
testl
in
mov
ret
int3
xchg
mov
cs
push
je
dec
les
sahf
clc
movsbl
xchg
jl
imul
xchg
xor
mov
mov
mov
mov
jecxz
push
hlt
test
scas
sub
lcall
or
stos
mov
push
mov
loopne
xchg
shl
popa
inc
xchg
rorb
xchg
add
ret
inc
push
push
dec
aam
daa
mov
mov
fcomps
ss
pushf
mov
sbb
aam
pop
push
or
pop
add
imul
in
sub
jecxz
add
add
xchg
sub
push
pop
lds
mov
mov
pushf
xchg
loopne
out
add
out
icebp
pop
inc
mov
xchg
jmp
mov
fwait
and
lock
insl
movl
out
inc
jae
push
mov
jbe
dec
arpl
cmp
daa
fst
mov
adc
mov
mov
adc
push
jmp
rcll
lods
repz
jp
mov
mov
mov
and
adc
or
jg
cvtps2pi
cmc
xchg
imul
push
inc
adc
or
les
lcall
dec
push
pop
les
shl
cmpsl
mov
es
jno
xchg
or
and
or
inc
adc
cli
aad
je
je
lahf
add
sbb
cmp
push
out
inc
imul
push
push
fdivrl
push
sub
shrl
bnd
mov
inc
adc
jmp
sbb
jbe
adc
xchg
sti
rorl
scas
mov
cmp
jle
adc
lods
pop
shrl
insl
mov
xchg
std
jbe
test
in
xor
jle
shlb
int
inc
jb
lcall
loop
into
std
ret
xlat
stc
mov
ja
in
cmp
mov
es
iret
jge
jge
jp
mov
jnp
sub
lret
pop
dec
mov
jecxz
lock
in
stos
loope
and
fnstsw
out
lahf
aam
leave
xchg
cmpsb
scas
or
ja
xchg
out
je
and
xchg
xchg
test
xlat
sti
sti
xlat
aas
iret
aad
jge
rcrl
mov
and
add
jne
cmpsl
insl
mov
or
out
push
jbe
pop
mov
xchg
xchg
mov
into
pop
dec
stc
xlat
insb
jo
lahf
insb
out
jns
mov
loopne
mov
xchg
inc
nop
fs
pmuludq
out
aam
jno
lret
xor
pop
cmpsl
jne
nop
sbb
xchg
mov
hlt
aam
mov
pop
ds
xchg
pop
dec
loop
mov
nopl
xchg
xchg
cmp
fadd
pusha
ret
mov
push
adc
std
frstor
inc
xor
mov
sub
fsubl
aad
sbb
clc
add
sbb
lea
lahf
push
lods
or
dec
push
mov
cmp
loop
icebp
shl
test
xchg
xor
enter
int3
stos
aas
fdivl
cmp
xor
test
lock
pushf
inc
push
sub
das
popf
js
into
loope
lods
scas
movsl
jge
pop
lock
mov
repz
lret
ret
testl
or
mov
sahf
inc
sti
inc
push
negl
aas
out
shll
icebp
inc
dec
dec
popf
and
loop
or
insb
loopne
sti
mov
mov
push
xorb
test
xor
sbb
pop
enter
inc
out
mov
pop
sbb
mov
mov
jecxz
jo
sti
sarb
insb
bound
sti
loope
repnz
enter
scas
popf
jnp
jo
push
repz
sti
mov
out
xchg
and
cmp
cmp
jle
lds
jns
cmp
hlt
shll
orb
mov
repz
mov
dec
lods
jb
mov
sbb
out
mov
lds
jp
jnp
test
popf
pusha
xchg
mov
adcl
xor
jmp
cmp
ljmp
pop
test
add
scas
mov
mov
push
cld
enter
nop
lret
pop
mov
add
mov
popa
movl
xchg
int
int
jecxz
cmp
fiadds
lea
fiadds
push
cltd
jb
adc
aam
shll
xor
fs
jge
or
pop
mov
or
xor
jbe
adc
stos
call
imul
pop
sub
mov
mov
popa
jbe
clc
ljmp
stc
mov
push
adc
jecxz
push
leave
fsubl
or
rorb
movsb
add
rcrb
jge
sub
repz
pop
jp,pt
jae
popa
adc
xchg
sub
jbe
in
push
mov
sbb
push
xlat
add
mov
pop
or
call
stos
jb
inc
ficompl
jb
mov
and
dec
and
xchg
cmp
andb
mov
pop
test
pusha
adc
mov
pop
sahf
sbb
faddl
jle
dec
adc
out
pop
iret
jecxz
sub
fdivp
add
dec
mov
xchg
or
cmp
or
stos
sarl
mov
js
push
aaa
ret
mov
mov
loop
pop
loopne
adc
lahf
scas
and
lea
push
scas
je
loop
add
lds
mov
shlb
mov
push
lods
or
sub
mov
pop
ror
mov
mov
push
mov
insl
mov
add
gs
rcll
mov
iret
hlt
pop
shr
mov
and
and
pop
mov
mov
push
int3
and
push
sub
sub
pop
loop
adc
mov
mov
insb
arpl
mov
shrb
mov
and
push
sbb
lahf
xor
mov
gs
mov
ja
jae
jle
ds
mov
sbb
arpl
xor
popa
sbb
mov
pop
fidivrl
push
mov
mov
mov
xchg
push
adcb
imull
pusha
testl
jbe
sbb
pop
add
jmp
outsb
int
je
add
je
mov
inc
jmp
push
xlat
mov
pop
mov
es
mov
jg
jo
loop
repz
adc
mov
cmp
inc
in
out
cmp
ret
add
std
pop
jnp
add
loopne
adc
cmpsb
or
imul
push
ds
sbb
sub
mov
pop
je
cmpsb
push
scas
add
mov
lea
mov
add
mov
movsb
inc
add
push
ret
jmp
sbb
jp
mov
insl
sbb
movzbl
data16
sbb
xor
sarl
mov
out
or
mov
out
push
ffree
enter
popa
xchg
jo
and
sahf
mov
orl
mov
fs
dec
iret
sbb
mov
adc
adc
mov
xor
in
out
mov
out
aaa
cmp
mov
jnp
ret
lock
pop
mov
add
js
dec
popa
pop
jnp
and
cmc
insl
sbb
lock
stos
or
pop
aad
mov
mov
mov
lods
outsb
dec
xor
cs
cmp
push
hlt
mov
cs
faddp
or
fcoms
aaa
push
hlt
xchg
xlat
dec
shr
ljmp
jp
loopne
mov
inc
pop
gs
lcall
add
mov
inc
pusha
scas
xchg
jns
lahf
data16
aaa
and
jno
aas
shlb
dec
popf
movb
shr
cmp
dec
mov
push
mov
ret
das
sub
lcall
or
inc
xchg
mov
jmp
fcoms
add
mov
mov
mov
popa
mov
or
cmp
test
les
or
repz
and
mov
cmp
stos
dec
cmp
or
xor
sbb
mov
pop
jge
cmpsb
inc
mov
loop
inc
shrl
push
mov
ret
enter
movsl
jns
std
testl
inc
push
pusha
jle
insl
sbb
add
inc
mov
sbb
jl
sbb
or
fiadds
sti
xor
fs
mov
xcrypt-cfb
cmpsl
movsl
lock
pop
cmpsl
push
push
mov
push
inc
aaa
arpl
arpl
shl
sbb
push
shl
ja
lcall
xor
dec
pop
xlat
imul
push
insb
iret
adc
lcall
bound
dec
jmp
mov
test
dec
mov
mov
xor
scas
push
xchg
xchg
pop
aam
mov
pop
scas
cmpsb
aas
lods
xorl
xchg
cmp
mov
xlat
mov
lods
push
icebp
ss
cli
xor
jne
fists
je
pop
scas
pop
mov
jbe
movsl
dec
jge
test
cmp
jecxz
mov
pop
bound
lock
mov
stc
mov
std
xchg
mov
dec
in
scas
push
mov
adc
xor
ja
out
out
inc
mov
mov
push
imul
push
fisubrs
nop
int
mov
pop
jp
sbb
hlt
mov
mov
psrlq
adc
or
and
or
xchg
mov
cmpsb
cs
mov
ss
outsl
xor
enter
mov
mov
mov
sahf
ljmp
inc
xlat
sarb
daa
pop
lcall
pop
fisttpll
iret
insb
clc
cmp
aad
sti
sarl
ja
inc
sti
out
data16
mov
in
sbb
dec
or
jl
prefetchnta
pop
xchg
add
push
out
into
and
je
sbb
sbb
or
fdivrl
es
add
fadds
in
jmp
xor
shl
jp
aas
jns
fcoml
arpl
xlat
add
jmp
lds
mov
fcomip
fidivs
jnp
mov
push
cmp
xor
sub
inc
jecxz
out
je
cmp
popa
mov
sub
sahf
push
mov
lds
ljmp
pop
mov
mov
or
hlt
adc
outsl
ror
push
loopne
fadds
dec
in
notl
orl
push
insb
fistl
scas
and
out
mov
sahf
pop
test
insl
fwait
jg
stos
pop
fwait
nop
cmp
pusha
jo
lea
popf
les
jb
outsl
add
in
add
rcl
and
inc
call
lret
nop
mov
add
outsl
or
ret
mov
inc
je
mov
clc
dec
in
fsubs
push
loop
ss
mov
loopne
jl
push
aas
dec
mov
mov
mov
jmp
push
frstor
xor
mov
mov
and
in
xchg
test
das
cmp
xor
add
xchg
sti
fnsave
mov
lcall
mov
popa
sub
mov
ror
outsb
fistpl
bound
add
cmp
or
in
xor
mov
cmpsb
xlat
xor
lret
xchg
pushf
push
pop
dec
mov
dec
push
lock
stos
fisubs
test
or
repz
loopne
cli
mov
enter
sarl
bound
ret
inc
jo
aam
xor
punpckhbw
fstl
and
cld
push
mov
jbe
ljmp
call
xlat
jne
cwtl
test
xchg
loopne
cs
fsubrs
ret
or
add
gs
adc
bound
and
or
inc
push
clc
inc
lcall
outsb
adc
fucomp
scas
xor
mov
add
jno
sbb
ret
push
test
aad
lret
mov
jge
jg
jno
insb
jb
je
xchg
push
mov
enter
pop
cmp
rcrl
jnp
out
xchg
xchg
cmp
cmp
sbb
dec
shll
into
and
adc
xchg
sub
jmp
inc
arpl
fs
sbb
mov
jo
and
mov
ds
xchg
das
cmpsl
outsl
loop
mov
pop
scas
jmp
inc
jo
pop
mov
mov
adc
lea
adc
sbb
and
xor
pop
out
xor
mov
mov
paddusw
jne
outsb
pop
scas
das
ljmp
jl
sbb
cmpsl
neg
es
xchg
mov
gs
mov
sbb
js
imul
push
cltd
pop
hlt
out
shll
enter
stc
or
jl
into
or
insb
aaa
iret
add
xor
or
dec
fucomp
mov
pop
cmpsl
inc
loope
jge
out
imul
sub
lea
xchg
xor
add
push
xlat
mov
rcrb
lods
and
jp
js
shll
dec
shll
in
and
cld
addb
test
insl
xlat
lea
sti
inc
add
add
xchg
lcall
nop
jmp
mov
mov
cmpsb
aad
mov
sahf
sub
fstl
push
addr16
clc
mov
push
fcomps
fimuls
or
insl
adc
xor
lret
inc
push
aaa
push
lea
inc
push
stos
sub
push
es
jge
jo
rol
jl
repnz
xchg
mov
sub
and
jp
es
iret
mov
sbb
xacquire
inc
jnp
dec
mov
into
adc
loop
inc
mov
popf
cmp
sub
pushf
push
dec
ja
ror
add
in
xor
inc
sbb
outsb
dec
pop
pusha
dec
fdivrl
push
push
inc
jg
mov
mov
sbb
sbb
pop
push
mov
cmpsb
mov
mov
mov
std
mov
stos
imul
pop
dec
xchg
jle
push
mov
cs
inc
adc
jle
out
and
push
cli
loopne
loop
push
pop
cmc
negb
popf
jecxz
cmp
xchg
adc
or
jle
gs
addr16
shrb
xchg
mov
jno
xchg
je
insb
loopne
push
pop
js
jg
mov
loope
jae
mov
aam
in
outsl
loop
mov
mov
lock
cmpsl
or
and
scas
fisubrl
jno
dec
in
aas
insb
pop
push
insb
dec
call
jge
jae
aam
lods
mov
cmp
mov
outsl
push
add
sub
scas
cmp
cli
pop
inc
sub
mov
ja
adc
clc
cmp
fmull
mov
jge
cmp
mov
pop
inc
xchg
js
fildll
cmp
mov
int3
ficompl
or
sahf
idivb
push
jecxz
mov
imul
stos
ret
cmp
stos
xlat
xchg
jns
popa
inc
dec
push
mov
cmp
adc
ds
xor
mov
sbb
enter
jne
push
lahf
or
jp
mov
aas
xor
and
imul
sub
mov
data16
out
mov
fdivrl
xorl
inc
pop
fsubl
out
sub
and
pop
pop
aaa
dec
loop
mov
testb
pop
aaa
pop
mov
loopne
test
shlb
icebp
mov
jge
add
mov
push
scas
adcb
jle
dec
jo
insb
or
jae
dec
mov
jae
pop
mov
adc
add
aad
addr16
stos
sbb
js
lret
call
pusha
pusha
jmp
pop
xchg
mul
xchg
into
pop
mov
repnz
mov
movsb
aas
inc
mov
or
adc
xchg
ljmp
mov
aaa
mov
popa
jae
fwait
xchg
xchg
sbb
mov
ja,pt
push
jp
dec
jb
ja
cli
fimull
sbb
jbe
cmc
out
aaa
ja
sub
iret
les
aad
xlat
or
rcll
add
cmpsb
pop
xor
mov
incl
pop
dec
xchg
aaa
mov
aaa
pop
idivl
mov
es
cmp
aad
cmp
xchg
xor
ret
xlat
mov
or
pop
inc
xchg
push
insl
aam
popa
sbb
sbb
test
lea
xchg
dec
test
lods
mov
adc
pushf
or
pop
xchg
dec
jae
call
jg
ret
jo
fcmovnu
fistpl
rorb
sub
mov
push
hlt
jmp
ljmp
stos
loopne
dec
jo
addr16
repz
dec
pop
add
test
inc
outsl
sti
pop
jnp
das
outsl
and
mov
jo
mov
mov
mov
jp
xlat
addr16
ret
leave
lods
in
mov
je
addr16
or
xchg
inc
setle
xchg
int
movsl
xor
ss
or
or
fildll
movb
dec
ljmp
das
mov
mov
xor
push
and
cld
icebp
mov
mov
ffree
rcrb
add
xor
add
mov
mov
icebp
pusha
stos
dec
gs
push
rolb
daa
cmp
pop
sub
mov
incb
es
addr16
rcrl
mov
mov
mov
testb
jecxz
aam
imulb
dec
inc
and
icebp
mov
push
lods
outsl
mov
push
add
scas
adcb
mov
pop
ficoml
loop
mov
ss
ret
sub
scas
pop
divl
adc
inc
pop
in
jae
push
push
jp
xchg
mov
xor
inc
xlat
mov
cmpl
aaa
push
fimull
ret
pop
fdivrs
xlat
mov
mov
mov
popa
lods
imul
rcll
dec
push
inc
int
stc
jbe
xor
insb
jns
add
popf
sti
stos
sti
sub
dec
out
mov
fwait
inc
jnp
or
divb
cli
or
inc
mov
cwtl
sbb
aas
insb
add
push
fistpl
testl
movntps
xchg
fmull
fisttpll
fisubl
jle,pt
and
das
pop
cmp
cmpsb
clc
mov
xchg
mov
mov
mov
or
aad
jge
push
sub
div
mov
nop
xor
cmp
sbb
mov
cld
stc
mov
xor
lds
push
mov
pop
xor
inc
xchg
adc
jge
mov
xor
dec
mov
xlat
ror
and
inc
mov
stc
pop
mov
clc
cltd
icebp
or
js
jne
cmp
mov
push
ja
cmc
and
dec
icebp
jg
add
imul
bound
outsb
sbb
add
fwait
ror
xor
scas
adc
popa
fidivl
pop
in
ficoms
xchg
cmpsb
std
test
push
cltd
and
int3
mov
fldt
ja
jge,pt
adc
sbb
or
js
cmp
ss
fcmovu
xlat
sahf
js
mov
and
clc
jl
push
cmc
inc
clc
repz
imul
adc
push
sbb
arpl
xor
jmp
enter
push
jl
mov
in
pop
inc
and
mov
fwait
sub
out
sti
fiaddl
mov
adcl
popf
lret
mov
fdiv
aam
jo
cmp
xchg
ret
or
mov
xor
inc
add
or
outsl
fnstsw
loopne
repz
mov
add
or
sarb
in
jbe
aas
dec
shrb
push
inc
clc
fwait
std
loopne
xor
outsb
xor
js
ss
mov
push
test
add
sbb
jmp
mov
inc
and
cmp
add
aaa
test
sub
loope
jle
cmp
fdivl
or
adc
inc
fisttpll
cmp
sbb
shlb
mov
loop
ret
mov
inc
mov
push
lahf
xchg
daa
push
les
inc
sub
xchg
pop
dec
loope
jne
lds
test
mov
mov
aam
icebp
mov
inc
push
lds
cmpsb
xchg
cli
gs
jg
sbb
jnp
xchg
xchg
cmp
gs
fcmovb
cmova
repnz
cltd
add
mov
cmp
out
xor
sets
lret
es
jne
dec
pop
sub
js
push
mov
pop
test
cs
flds
push
mov
in
mov
cmc
pop
ss
or
lahf
pop
fmull
inc
jb
push
jmp
or
fwait
or
movsl
adc
in
fdivp
js
pop
jl
xchg
cmp
popa
or
pop
sbb
imul
pusha
pop
sahf
outsb
rcr
js
jp
clc
inc
lea
mov
or
das
pop
sbb
jle
ret
ljmp
or
xchg
adc
pop
adc
mov
pop
shrl
jbe
lock
sbb
jecxz
inc
cmp
push
sub
push
mov
sbb
xor
fwait
dec
cmp
sbb
pop
dec
inc
inc
into
jmp
insl
call
rcl
xchg
clc
sbb
sti
pushf
inc
add
repz
sti
sbb
aad
sbb
or
sub
pop
mov
push
test
les
sti
mov
inc
sub
inc
mov
xchg
jbe
in
icebp
and
loopne
cmp
or
push
negl
jge
jg
pop
test
imul
ror
test
push
dec
shll
loop
push
loopne
mov
lds
push
in
jnp
xchg
pop
mov
pop
mov
test
ret
cltd
shl
mov
std
fisubs
aad
pop
mov
insl
sub
insl
insl
cmp
pop
xor
out
push
call
loopne
repnz
mov
add
or
icebp
aam
dec
add
push
shll
aaa
mov
insl
inc
mov
jl
inc
js
mov
scas
pop
sbb
in
mov
inc
mov
pushf
push
cmp
sarl
lahf
data16
xchg
and
lock
push
aaa
cmp
outsb
imul
sub
cwtl
or
jmp
jg
pop
js
mov
push
push
movsb
bound
into
or
icebp
jp
test
xorb
aam
lods
jae
sahf
inc
push
sbb
das
call
aam
jne
push
iret
in
cmp
pop
and
test
test
inc
lods
sub
lret
lock
das
inc
pop
ret
fstl
clc
loope
add
push
sbb
andb
mov
pop
jmp
or
push
imull
cmp
inc
faddl
or
cwtl
ds
push
mov
mov
test
push
xchg
pop
pusha
stc
mov
xchg
sub
jmp
sbb
lret
jne
xor
into
xchg
pop
adc
mov
push
lcall
pushf
and
scas
std
iret
fmul
cmc
cmp
push
stc
popf
pusha
and
mov
mov
mov
adc
xchg
cmp
outsb
or
xchg
xorb
jl
xor
cltd
in
fildl
les
push
enter
inc
imul
decl
push
lcall
lcall
sti
mov
es
push
clc
fidivrs
sbb
inc
scas
sub
into
in
popf
dec
call
shll
lcall
push
jl
repnz
dec
je
jecxz
inc
movsl
das
or
mov
sbbl
lea
or
outsl
test
adc
and
and
inc
lea
in
div
mov
lock
out
adc
cmp
sti
jmp
xchg
push
dec
sub
jg
stc
mov
push
pop
lds
test
imul
and
push
aaa
xor
and
and
jmp
repnz
xchg
arpl
xchg
scas
mov
out
add
adc
xlat
cmp
mov
and
inc
sub
inc
xor
xchg
lock
popl
aam
sub
inc
sbb
insl
ds
in
lahf
sti
clc
out
and
jbe
cmp
push
cmpsb
or
cmpsl
mov
loopne
jne
pop
movsb
sahf
rorb
mov
out
adc
add
push
push
insl
dec
add
sub
mov
out
fisttpll
insb
cli
cmp
lods
pop
mov
cmp
cmp
shlb
and
dec
cld
cmp
inc
xlat
popf
out
ja
popl
fnsave
fwait
cmpsl
push
jae
cmc
dec
or
inc
int
mov
imul
daa
mov
push
push
js
inc
xlat
add
sbb
or
clc
xorb
loope
or
fdivrs
pop
fwait
cmp
jmp
push
add
jnp
push
in
aaa
cmp
outsl
adc
jnp
fmull
push
scas
repnz
xor
jl
add
orl
arpl
sub
push
xor
in
in
scas
jbe
inc
out
outsb
cs
pop
add
jbe
sub
insl
xor
aas
cmp
dec
pop
imul
or
cmc
adc
mov
or
mov
arpl
testl
pop
ja
pop
or
inc
xor
movsl
fwait
sbb
push
or
cltd
cs
arpl
cmpsb
and
lods
sahf
pop
sub
jecxz
jns
daa
dec
popa
sub
jno
dec
enter
repz
mov
maxps
loope
add
mov
or
or
negb
inc
inc
pop
in
sbbb
jne
scas
mov
data16
aad
std
push
pop
adcb
fadds
pop
push
mov
add
jmp
ljmp
aam
mov
sub
popa
fistpll
stos
mov
outsb
cmp
pop
sub
push
inc
aam
mov
comiss
dec
popf
fwait
pop
setns
lock
cmp
lea
cmp
xor
mov
xlat
les
ficoml
es
add
loope
subb
sbb
pop
pop
jl
push
cmpsb
mov
sbbl
cmpsl
fidivrs
ror
daa
xor
in
add
in
outsb
jp
xchg
gs
shrb
jp
lea
adc
ret
adc
push
insl
sbb
pop
sbb
mov
shll
cmpsb
pop
sarb
lahf
test
pop
inc
xor
jb
insb
push
or
xchg
xchg
idiv
or
dec
gs
sub
outsb
call
jecxz
shl
xchg
jge
in
loopne
popf
stos
pop
icebp
mov
jl
inc
or
mov
cmpsb
dec
push
imul
mov
push
push
inc
and
mov
call
and
cmp
push
pop
mov
test
push
mov
and
and
xchg
and
orl
sbb
lods
lret
inc
adc
das
and
and
not
xchg
and
sub
shlb
pusha
out
loope
stos
cmc
mov
imul
mov
pop
dec
pop
js
rcrl
aaa
dec
in
mov
or
sub
push
cmp
mov
ljmp
adc
dec
movsb
addr16
mov
jo
xchg
in
out
jo
inc
add
sbb
add
cmp
aaa
and
mov
add
repnz
mov
clc
aam
in
sbb
int
mov
fldl
dec
dec
xchg
jnp
push
test
pop
jbe
insb
stc
inc
mov
and
or
dec
mov
js
cmp
jg
cmp
dec
cmp
mov
cmp
pop
gs
popf
call
clc
inc
mov
xorl
aam
xor
aas
add
push
sub
test
bound
roll
adc
arpl
jp
imul
push
fxch
mov
mov
jnp
stos
and
dec
stc
inc
xchg
adc
es
jmp
sbb
lods
inc
push
enter
sbb
add
cld
fsub
imul
out
sub
ds
lahf
fisubrl
cwtl
and
xchg
sbb
aam
lds
out
jo
push
xlat
enter
xchg
std
cmp
ja
repnz
rorb
pop
jl
insl
jb
mov
push
dec
jge
xor
icebp
jno
push
push
jmp
shlb
mov
xchg
stos
stos
loope
popf
inc
add
dec
ret
push
movl
lds
pop
mov
addr16
sub
filds
pop
ret
jbe
out
rcrb
outsl
out
cli
outsb
stos
mov
stc
xor
mov
or
mov
adc
push
mov
cmp
out
int3
jp
jbe
dec
or
mov
dec
lahf
fs
aad
add
inc
mov
repnz
mov
mull
push
je
push
loop
rcrl
add
pop
rorb
addr16
push
sbb
mov
movsl
arpl
leave
ljmp
enter
stos
test
mull
jge
mov
push
adc
pop
subl
push
sarb
imul
cmp
imul
adc
inc
lods
outsb
cmp
out
push
inc
or
fldcw
shrb
dec
lods
mov
fisttps
rcr
inc
adc
cs
mov
inc
mov
jle
jle
test
sbb
sbb
mov
ficompl
ljmp
push
push
es
cmc
js
or
sub
call
leave
or
iret
inc
bound
jbe
push
sbb
fdivrl
adc
mov
je
mov
push
xlat
or
dec
pusha
sbb
shr
xchg
lea
cli
adc
fs
mov
test
jl
dec
xchg
pushf
cmp
out
mov
jbe
or
xchg
inc
mov
xchg
cmc
rcrl
push
xor
jge
or
lock
aad
iret
mov
inc
push
minps
push
inc
orl
lock
add
cli
stos
ss
ret
iret
fnsave
outsb
call
lods
rcll
adc
xchg
mov
mov
mov
dec
pop
push
mov
aad
jg
subb
cwtl
test
mov
dec
adc
fdivs
mov
movsl
push
std
shr
adc
or
lcall
fistpl
fdivrs
ret
repz
jmp
mov
popa
test
pop
push
inc
sahf
sbb
cltd
imul
shrb
mov
scas
fiaddl
jecxz
cmp
jg
shlb
rol
sbb
scas
pusha
orl
mov
or
popf
stos
outsl
jl
and
ds
daa
vmovhps
int
push
data16
sbb
mull
shl
aas
aaa
jne
enter
cltd
jne
insl
mov
stc
pop
int3
rcr
shlb
daa
inc
pop
cmp
ds
pop
cld
sbb
jne
dec
xchg
insl
outsl
pop
mov
mov
push
mov
pop
xchg
icebp
xchg
xlat
inc
add
xchg
ja
push
pop
mov
ljmp
push
jnp
jmp
cwtl
insb
les
mov
adc
lods
fst
shrb
mov
call
add
jge
sub
jne
div
jmp
cwtl
sbb
fnsetpm(287
jp
stos
pop
cwtl
push
push
mov
hlt
jns
inc
fld
cmp
adc
or
sarl
sbb
xchg
xchg
call
pop
pop
stos
cmp
push
fnsave
inc
sub
lds
pop
adc
fidivrl
jbe
rolb
inc
pop
gs
ljmp
stos
cmp
mov
mov
iret
mov
xlat
in
imull
xlat
sub
mov
aaa
ret
pop
adc
imul
insl
mull
ret
sbb
pop
test
jle
push
aas
clc
mov
jmp
iret
push
jns
add
jmp
or
cmp
std
and
dec
push
int
aad
stc
cmp
inc
ret
or
fldcw
into
or
jge
xor
sub
sbb
pop
outsb
push
and
mov
mov
xchg
sbb
fdivrp
push
xchg
imul
adc
mov
push
insl
and
icebp
rolb
scas
dec
daa
sbb
cs
test
mov
lea
push
cmp
adc
inc
outsl
loope
shr
adc
rorb
cmp
lds
mov
mov
addb
and
cmp
or
fisubrl
mov
push
call
add
aaa
inc
aam
lds
adc
inc
adc
out
xchg
fbstp
gs
addr16
lret
pop
loopne
es
mov
xor
call
sub
frstor
pop
insl
xor
inc
ds
faddl
mov
je
jmp
pop
jbe
dec
fistps
and
rolb
push
mov
adc
pusha
sbb
jge
mov
cmp
test
xchg
in
jb
aam
fldl2e
imul
push
into
das
add
daa
aas
shlb
add
mov
add
mov
repnz
xor
lret
aam
adc
stos
out
popa
xor
or
mov
pop
jp
mov
repnz
add
sbbb
xor
inc
dec
lds
jg
in
cmpsb
jecxz
xor
pop
and
mov
pop
outsb
rolb
xlat
pop
push
sub
inc
push
out
add
outsl
pop
jne
pop
mov
push
or
arpl
jne
rolb
xorb
shll
scas
mov
jno
sub
outsb
daa
jbe
scas
aam
int
and
and
sbb
mov
jge
imul
xor
jae
outsl
or
xchg
loopne
push
imul
jno
or
test
pop
aad
adc
cmp
mov
sti
lods
mov
mov
jae
mov
sub
inc
jle
jae
sbb
pop
jo
mov
dec
repz
hlt
push
cmp
movsl
pop
fsub
lods
and
jns
ljmp
pop
aam
xlat
gs
xlat
mov
xor
or
jno
clc
xchg
push
sbb
pop
and
ret
xchg
sbb
xchg
aaa
jl
jmp
ds
fistps
leave
rorb
pop
cli
push
fsubrp
sbb
imul
stos
imul
fnstcw
xchg
and
jne
or
add
sahf
loope
lock
loop
sbb
mov
xchg
add
pop
mov
mov
lods
jecxz
mov
js
loop
fistl
xor
xlat
std
fdivrs
mov
es
cmp
mov
scas
adc
xor
xor
out
ljmp
xlat
mov
push
xchg
mov
xchg
or
cmp
cmc
add
cmp
cmc
adc
mov
sarl
clc
roll
cld
aas
pushf
pop
sbb
in
push
cmp
fsubrl
sbb
push
adc
inc
dec
imul
xchg
inc
cli
loop
pop
adc
xchg
lods
lea
jae
adc
imul
js
xor
das
les
js
movsb
mov
sub
out
and
jp
mov
push
mov
mov
sub
mov
push
outsl
out
imul
add
and
es
pop
jp
xchg
push
mov
insl
sbb
or
mov
test
stos
jge
test
inc
and
mov
xor
xchg
and
add
imul
lret
push
dec
sub
iret
mov
sbb
pusha
sub
outsl
mov
sarb
lcall
push
dec
aam
insl
cmp
or
nop
orl
push
cmp
push
and
pop
lret
xchg
in
pop
fiaddl
lahf
int3
jmp
cmpl
mov
xchg
mov
sbbb
mov
test
mov
lret
cmpsb
negl
jecxz
mov
filds
jne
cmp
fs
fiaddl
mov
loope
aaa
jb
icebp
xor
mov
jnp
rclb
dec
je
fnsave
and
push
movsb
fiaddl
mov
loop
xor
rorl
ljmp
add
rcl
pop
dec
and
jmp
lcall
cmpsl
in
ret
jbe
push
inc
clc
call
or
gs
xchg
xchg
outsl
sti
xchg
rcrb
jmp
test
fisubrs
lods
pmuludq
mov
subl
or
jo
mov
jne
enter
repnz
jmp
addr16
lock
stos
aam
push
jne
adc
scas
mov
fcompl
push
lods
icebp
shlb
or
inc
ror
insl
sbb
mov
imul
ds
sbb
mov
push
xor
dec
mov
mov
ror
inc
push
ret
xlat
or
aas
jge
aas
cmc
sub
shll
dec
cmp
ja
fcompl
in
add
stos
pop
push
sub
jae
jbe
hlt
pop
pop
clc
jl
fcmovb
and
adc
and
adc
jbe
cmc
xor
ss
in
pop
mov
lcall
ljmp
pop
mov
or
jecxz
jns
lock
or
repnz
ret
scas
inc
and
ja
insb
jmp
cmp
cli
clc
mov
repz
int
adc
mov
aaa
inc
rcrb
xchg
jl
xchg
mov
sub
and
cltd
add
icebp
call
adc
loope
cmp
add
call
shl
cmp
cld
sti
aad
add
jb
das
mov
mov
outsb
loope
frstor
or
mov
ret
xlat
inc
int
sub
icebp
out
cmp
and
arpl
loop
gs
cmc
mov
ljmp
ds
in
sub
sub
adc
das
mov
sub
pop
ret
icebp
cmp
mov
into
mov
mov
sub
mull
out
lods
jae
jb
lret
cli
mov
icebp
inc
out
jbe
xlat
adc
insb
cmp
jmp
insb
cli
stos
pop
inc
jecxz
clc
sbbb
push
xchg
inc
lods
jae
das
cmp
xchg
mov
mov
ja
in
and
js
decl
inc
mov
js
inc
push
sti
cmp
pop
xsha1
cmpsb
int
jge
mov
pop
jbe
sub
loope
daa
xchg
adc
outsl
add
fcoml
inc
jnp
stos
jae
jecxz
push
lcall
add
or
loopne
ss
sub
lods
mov
outsl
sub
and
mov
jnp
mov
lahf
push
inc
sbb
or
mov
push
aad
sub
jbe
cs
xchg
scas
in
jne
xor
daa
mov
xor
fisttpl
fcomps
jmp
sbb
fdivs
mov
cmp
rcrl
ret
dec
jg
pop
adc
jno
inc
sub
jne
ret
mov
xchg
rorl
jbe
mov
lea
inc
pop
pop
int
sub
mov
sbb
nop
or
push
xor
jle
mov
cli
jge
aam
pusha
adc
push
push
repnz
scas
int3
mov
dec
movsl
xor
push
mov
cs
mov
sbb
and
aas
xchg
or
dec
cmp
cmp
mov
shlb
or
dec
ljmp
and
mov
loop
in
jbe
jge
outsb
cli
push
push
mov
repnz
adc
pop
test
stos
or
test
push
cs
insb
js
daa
lret
push
inc
or
add
movsl
pop
mov
pop
xbegin
or
stos
fcomps
push
pop
cmp
or
and
and
cmc
jb
inc
mov
sbb
push
cmpsb
push
pushf
mov
fld1
scas
jle
inc
mov
mov
xor
push
rorb
out
scas
dec
mov
xlat
test
adc
pop
aaa
ljmp
out
pop
mov
sub
dec
mov
roll
shl
jbe
ds
in
insl
pop
test
dec
mov
or
jmp
push
imul
int
pop
cld
addr16
frstor
push
xor
mov
scas
mov
outsb
scas
add
jge
push
pop
jno
in
fstpl
xchg
jne
jp
add
aad
push
insb
dec
sbb
push
cmc
sbb
xor
or
sbb
inc
test
arpl
mov
or
or
pusha
out
sbb
dec
mov
scas
fcompl
xchg
xlat
inc
loop
mov
call
aas
jmp
scas
and
mov
and
sarl
push
jbe
push
and
add
dec
dec
pop
dec
jnp
ds
popa
aad
arpl
movsl
aad
stc
xchg
aad
pop
rorb
dec
outsb
pop
or
cmp
inc
jecxz
jns
jbe
mov
mov
icebp
into
push
mov
xchg
jmp
stos
ljmp
cmp
cmp
lcall
xchg
inc
xor
or
jnp
jo
or
inc
mov
in
cmp
inc
jns
or
ljmp
mov
mov
int3
clc
addb
dec
jle
test
lahf
sbb
in
call
push
es
in
add
outsb
je
lahf
mov
ljmp
pusha
pop
fisubl
lahf
bound
cmp
dec
mov
add
insb
cmp
inc
shll
add
xchg
pop
cmp
nop
hlt
aam
pop
push
cmpsl
push
into
ds
mov
test
movsb
js
stos
push
or
mov
add
iret
xlat
jl
inc
pop
sbb
jns
sub
faddl
mov
mov
or
fdivr
ljmp
xchg
pushf
sub
jmp
sub
fwait
dec
cmpsb
adc
testl
sub
inc
rol
mov
addb
icebp
xor
and
subl
in
dec
mov
dec
popa
dec
fwait
sahf
push
cs
adc
fadd
dec
pop
cli
mov
call
pop
repz
sub
decl
sbb
rcrl
push
pop
push
xor
and
out
test
jno
xchg
jmp
clc
imul
jg
and
insl
dec
pop
pusha
mov
lods
bound
std
push
ret
mov
mov
fistpl
aad
sahf
add
sbb
leave
mov
and
ja
daa
mov
push
ret
inc
lock
repz
out
pop
add
adc
push
cmpl
mov
lcall
add
mov
in
jnp
out
pop
mov
mov
ficoml
test
dec
pop
lret
inc
shll
in
pop
cmp
push
mov
pop
stos
ret
xor
sti
xchg
mov
roll
loop
in
icebp
lock
dec
das
test
pop
loopne
sahf
arpl
cmp
jle
ja
movsb
sbb
in
hlt
test
or
mov
and
push
rclb
lahf
scas
nop
insl
push
xchg
and
adc
test
xor
adc
ljmp
push
cli
or
loopne,pt
or
adc
sti
dec
out
xor
jg
inc
push
pop
cli
jle
mov
cmp
loope
aam
sub
jo
sbb
jge
inc
sub
or
push
pop
cli
jp
aas
test
jns
in
push
mov
xor
leave
mov
push
loop
hlt
jle
test
adc
arpl
bound
aam
inc
fdivrs
push
lret
fsubrl
in
imul
sub
adc
inc
in
ds
mov
xchg
in
and
aam
adc
arpl
frstor
xor
aam
push
out
mov
lea
sbb
icebp
mov
js
pcmpeqb
pop
sub
sti
sub
sarl
sub
add
xor
mov
mov
insl
pop
leave
push
sub
ja
sub
sbb
lahf
imul
frstor
cmp
or
push
inc
cmc
aad
and
sti
push
push
cmc
out
push
addr16
mov
rorl
into
ss
or
adc
es
ds
mov
int
or
ja
sbb
lds
pop
mov
pop
adc
fcompl
fstps
or
adcb
xchg
sti
xchg
jp
out
cmpsl
gs
lock
cmp
testb
call
push
arpl
mov
fmull
mov
mov
cli
pop
fstpl
outsl
aam
clc
fcoms
cmp
add
pop
pop
xlat
rolb
xor
mov
bound
mov
pusha
in
mov
shl
pop
cli
dec
xor
jmp
adc
pop
push
cltd
nop
incb
pop
fdivrl
scas
sub
push
fnsave
jb
inc
and
mov
repz
fstpt
clc
sbb
jecxz
in
hlt
gs
mov
aad
pushf
push
pusha
dec
xchg
ljmp
add
aaa
fs
and
scas
mov
stos
pop
mov
xlat
add
pop
mov
loope
push
pushf
sbb
adc
sub
les
insl
xchg
imul
clc
in
inc
cmp
push
and
pop
lahf
or
mov
pop
cmp
xchg
add
stos
movb
fdivrl
scas
dec
loopne
mov
push
frstor
adc
dec
dec
scas
push
js
xlat
mov
xchg
test
adc
fsubrs
in
scas
lea
dec
insl
dec
arpl
jmp
jge
fwait
mov
in
out
jbe
xor
sbb
cmpsl
int
ljmp
jbe
inc
jge
mov
jge
jne
das
xor
fcompl
pop
and
cld
mov
sbb
or
mov
fnstsw
mov
xor
fbstp
xchg
fldt
jmp
fadd
pop
xchg
insl
add
fucomip
mov
push
scas
mov
mov
es
push
push
sbbl
pop
andb
cmp
frstor
popa
mov
dec
fadd
jne
fdivp
jmp
cltd
mov
aam
es
push
sub
sub
jb
push
insb
push
sbb
pop
mov
fiaddl
mov
sbb
adc
push
pop
outsl
push
scas
ja
sarb
and
dec
xorl
divb
cmp
cwtl
pop
mov
test
push
ja
xchg
fucomi
cltd
lods
test
push
ds
jns
xor
fdivs
push
lret
cli
pop
inc
ud0
bound
in
mov
mov
xor
out
psubb
fiadds
jmp
xor
mov
stc
mov
js
xorl
sbb
adc
sub
push
lock
pop
mov
mov
xchg
mov
icebp
jle
inc
divl
xchg
cmp
repnz
xchg
hlt
repnz
xor
cmp
loopne
pop
and
loope
aas
mov
ret
inc
mov
push
cmp
lahf
bound
sub
jecxz
cmp
stos
push
aas
int
inc
xchg
add
rcll
cmp
adc
pop
pop
in
mov
repz
sbb
pushf
pusha
jecxz
jg
push
lret
mov
jl
jbe
lock
lcall
xchg
je
or
imul
jl
mov
mov
and
mov
sub
jae
fisttpll
sub
shl
in
jge
ret
mov
repz
arpl
addr16
test
add
js
mov
mov
and
scas
leave
fists
ret
out
ja
sub
xchg
fstpl
and
jle
les
ret
inc
leave
fs
jp
mov
lret
jg
or
sahf
adc
adc
sti
or
popa
pop
stc
jns
mov
cmp
imul
mov
pop
jo
packuswb
and
jecxz
mov
sbb
bound
add
mov
cmp
mov
ds
ljmp
les
mov
ja
aas
sub
cmp
pop
inc
test
add
call
dec
mov
mov
mov
push
mov
pop
clc
in
int
adc
dec
out
sbb
and
sbb
pop
pop
mov
ret
mov
iret
sbb
imull
inc
adc
cli
test
jle
imul
pusha
pop
jecxz
cli
push
adc
and
jb
sbb
and
push
jmp
pop
ja
rclb
mov
cmpl
sub
cwtl
outsb
out
cmp
rorb
gs
dec
hlt
sarl
std
push
shrl
add
xchg
imul
cli
sbb
jmp
sub
outsb
xorb
jge
jno
add
cmc
jb
test
call
rep
cmpsl
adc
testl
mov
jge
mov
mov
mov
fdivrl
xor
lret
cmp
rolb
sub
cmpb
adc
mov
lcall
sarb
loopne
or
in
ret
mov
mov
popf
fidivrs
das
push
out
and
xor
loop
and
add
imull
xor
mov
pushf
push
in
popl
stos
dec
and
insb
cli
sbb
xor
sarl
into
sbb
in
mov
jecxz
popa
aas
je
pop
mov
mov
xchg
lret
cmp
jo
inc
xor
loop
scas
les
push
mov
ss
xlat
inc
fstl
inc
mov
scas
jecxz,pt
adc
imul
mov
cmp
xor
jl
mov
pop
or
add
into
das
bound
notb
xor
xor
leave
hlt
xor
sub
js
or
inc
mov
inc
cmp
aaa
das
test
cli
dec
mov
sarl
aam
inc
pop
mov
test
ficomps
or
sbb
adc
push
mov
xlat
inc
pop
fstpl
aam
iret
inc
bound
scas
pop
mov
or
pop
sbb
push
xlat
jbe
dec
xor
dec
pop
push
cli
xchg
mov
jg
and
ret
fldt
xor
push
pop
js
pop
leave
cmpsb
dec
jnp
fldcw
dec
push
sub
mov
insl
iret
rcr
test
xlat
adc
loopne
aas
push
sbb
pop
pcmpeqw
sbb
xchg
addr16
mov
lea
call
sbb
add
arpl
imul
gs
mov
fisubrl
xor
sbb
lods
call
ret
fsubrs
adc
adc
push
add
lahf
mov
fstpt
clc
mov
pop
sub
imul
mov
lods
outsl
push
mov
cmp
loopne
lods
or
ret
and
or
and
dec
cs
mov
jge
imul
out
pop
imul
push
cmp
pop
shlb
shrb
add
dec
mov
fucomi
jbe
pusha
push
adc
mov
or
outsb
fidivl
ljmp
aad
out
xor
fiadds
mov
jecxz
push
mov
xor
jo
nop
in
incb
sbb
add
push
cmp
xchg
pop
bnd
clc
lock
cmp
es
adc
inc
mov
sti
loop
ret
pusha
andb
lods
add
scas
data16
out
inc
add
jne
je
sbb
sbb
mov
adcb
test
cmc
mov
sbb
xor
lods
mov
inc
rcll
lahf
je
icebp
xchg
and
mov
cli
enter
sar
inc
lods
pop
mov
sbbb
jge
arpl
loop
hlt
inc
xchg
pop
sti
nop
push
aam
and
pop
pusha
add
cmp
rcr
imul
fucomi
jnp
stos
push
inc
pop
cmp
imul
outsl
fistps
icebp
dec
cmp
xchg
sarl
ss
mov
mov
and
xor
fs
outsl
idivb
loop
push
shrb
sub
push
das
call
push
pop
or
inc
cmp
adc
ss
mov
sbbb
cmp
inc
xchg
pop
cmp
scas
addr16
inc
pop
rcl
mov
inc
out
shlb
fwait
subl
lock
mov
pop
pop
and
pop
pop
cmp
shlb
std
sbb
scas
mov
dec
ret
mov
loopne
arpl
mul
xor
aad
push
push
xor
push
sbb
out
bound
inc
or
addl
mov
or
add
por
push
rcl
lods
pop
aad
loope
jne
cmp
xchg
or
clc
pusha
jbe
daa
sbb
jmp
clc
lret
pop
and
loop
ss
mov
mov
ds
sbb
adc
and
js
cltd
mov
xor
shrb
out
out
aam
xchg
or
and
leave
sbb
dec
aas
jle
ljmp
fwait
loope
inc
adc
aaa
and
out
sbb
or
call
call
aam
and
mov
repnz
pop
xor
jecxz
mov
int3
inc
xchg
mov
mov
inc
out
loop
fnstsw
dec
xor
sti
mov
aas
push
in
cli
test
fldenv
xor
pop
sub
cmp
cmp
in
test
xor
and
fdiv
jl
je
je
mov
pop
shlb
pop
dec
add
or
nop
ljmp
adc
jo
dec
lock
loop
insl
add
stos
iret
shrb
or
das
sub
inc
sbb
orb
push
and
fisttpl
lds
push
add
cmp
aaa
scas
push
xlat
adc
push
pop
jmp
mov
cld
cmp
cmp
mov
sub
shrl
push
arpl
leave
push
aas
and
into
cmp
sub
jg
or
ds
and
sub
ret
pop
cltd
push
mov
sbb
ja
dec
loopne
test
xlat
incl
and
cs
sbb
cld
fs
pushf
jb
xor
xor
push
push
cs
stos
stos
stos
mov
add
fwait
pop
sbb
sbb
push
pusha
add
mov
inc
outsl
add
mov
mov
xchg
xchg
jle
in
xchg
js
mov
fstpt
gs
imul
or
push
jno
imul
daa
decb
inc
cwtl
mov
outsl
or
in
ds
jge
add
adc
pop
jp
jp
push
enter
lea
repz
pop
xorl
cmpb
daa
bnd
icebp
jmp
xlat
sbb
mov
mov
call
push
aaa
mov
movsl
mov
jns
push
adc
lock
out
rcrb
xchg
cmpsb
inc
inc
mov
inc
inc
shl
or
and
in
shll
std
jg
fidivs
sahf
ljmp
jg
in
or
cmp
mov
xor
pop
test
cmp
lahf
and
lret
loop
adc
lcall
mov
add
pop
test
roll
outsb
and
in
mov
adc
and
aad
or
mov
test
insb
push
aaa
and
push
pushl
lret
fcmovb
push
xor
add
rolb
clc
inc
fimull
js
or
stos
or
fisubs
mov
imul
pop
lcall
mov
mov
out
cmp
repz
cmp
icebp
jge
pop
xchg
call
inc
fdivl
iret
mov
jg
dec
sbb
addb
push
inc
mov
jne
imul
movsb
cmp
jo
jle
into
or
push
ret
stos
mov
cmp
mov
mov
lods
jmp
push
fs
jne
fldt
aaa
jl
cmp
lahf
pop
and
loop
faddl
pushf
add
ljmp
xor
outsl
outsb
pop
js
je
push
cli
push
into
lds
adc
call
clc
add
subl
fwait
lods
mov
or
mov
or
addl
clc
mov
and
jl
push
sbb
jno
or
movsb
fstpl
mov
sahf
das
into
insl
fistpl
push
out
pop
sub
or
ds
xorb
movsl
or
jecxz
push
out
or
sbb
ja
and
ds
pusha
cmp
aad
push
sbb
sbb
iret
imul
adc
xchg
filds
cltd
dec
mov
mov
out
push
rorb
subl
je
push
push
xor
cmpsl
mov
xchg
rcl
push
fcomp
push
sbbl
fsub
insb
aam
pop
clc
mov
jno
pop
jecxz
aas
dec
jne
xchg
sti
jnp
sbb
data16
mov
add
pushf
lahf
xor
cli
xor
hlt
jnp
push
add
xchg
movsl
sub
pop
test
test
stc
mov
pop
movsl
pop
imul
xchg
push
hlt
aam
sbbb
lds
sbb
or
es
lods
mov
sti
aad
sarl
adc
jbe
mov
dec
mov
loope
mov
divl
mov
add
cmp
mov
lret
in
sbb
pop
out
add
lret
pop
push
adc
dec
popf
mov
scas
mov
and
cmp
in
adc
jmp
scas
add
insl
aas
ljmp
inc
or
jl
cmpsb
inc
adc
sub
test
mov
es
movsl
sub
mov
aam
fbstp
mov
data16
sbb
push
fstpl
sbbb
inc
push
mov
sbb
mull
fidivs
lahf
icebp
sub
pushf
sahf
fcom
inc
stos
cmp
adc
call
and
ds
jl
sti
insl
scas
mov
jmp
mulb
push
scas
sbb
mov
mov
cmp
jl
jecxz
or
ret
push
adc
sub
fcomi
pop
test
mov
call
inc
outsl
lods
jne
shlb
or
sub
fistpl
jb
jp
lea
sbb
push
lds
add
fdivp
pop
xchg
sub
xchg
addr16
roll
in
adc
sbb
cmpsb
inc
jp
andl
jp
add
cmp
jae
cmpsb
mov
sub
push
mov
jbe
and
aad
jns
sbb
and
pop
ja
rcl
dec
sub
xor
sub
push
add
or
pop
sbb
pop
dec
sbb
subl
shrl
ret
pop
sbb
sahf
int3
fistpll
push
xchg
dec
push
push
sbb
cmp
jge
hlt
lock
pop
push
push
pop
in
jmp
mov
lahf
jo
jb
mov
jo
sbb
out
leave
ffree
stos
cli
loopne
ret
adc
rep
adcl
shl
mov
mov
sub
repnz
dec
sbb
jo
mov
sbb
inc
cmc
push
loopne
push
inc
popa
xlat
mov
scas
dec
shrb
out
mov
cmovno
arpl
xchg
jecxz
popa
jbe
adc
xchg
aas
mov
add
jge
ret
fdivrs
push
jmp
aas
les
pusha
and
les
pop
pop
and
adc
push
xchg
cmpsl
test
insb
iret
cmp
fists
and
nop
mov
xor
pop
pop
sbb
jge
icebp
mov
dec
cmp
rolb
inc
dec
outsl
insl
sub
sbb
sahf
outsl
cmp
ljmp
bound
jo
adc
adc
xor
and
push
or
fisubrl
jo
pop
sbb
jnp
mov
loope
cld
inc
sbb
jp
mov
mov
and
cmpb
loopne
push
loope
pop
testb
cli
pop
dec
or
into
dec
mov
arpl
and
test
mov
push
movsb
jbe
xchg
or
mov
shl
repz
adc
aaa
nop
pop
lret
fidivrs
pop
nop
jne
sbb
fldenv
jnp
lock
jo
pop
popa
or
xchg
lds
cmp
mov
dec
sbb
aas
scas
cmpsb
mov
fdivrl
mov
xrelease
mov
dec
mov
xorb
das
jge
or
push
insl
sub
test
outsb
xor
push
bound
xor
jp
jmp
mov
sbb
jae
das
sbb
lahf
xbegin
out
scas
jmp
int
sbb
sarb
sub
jl,pt
repz
sbb
push
inc
test
mov
mov
dec
cld
mov
and
nop
jbe
rcr
pop
push
fcompl
and
sub
push
outsl
cmp
jge
ljmp
add
movsl
mov
mov
addl
add
jb
push
in
jle
call
stos
int3
jp
xchg
into
cs
add
dec
inc
jns
xlat
or
popf
pop
pop
jge
loopne
or
ror
loope
mov
lret
or
icebp
mov
stc
cld
cmp
mov
jg
pop
jp
inc
sbb
xchg
repnz
xor
std
shrl
inc
pop
in
in
push
xor
xchg
mov
inc
pop
mov
xchg
loope
or
cmp
dec
je
aas
insl
pop
jmp
mov
imul
out
inc
sbb
aas
stos
aas
lods
sbbl
pop
pop
jecxz
pop
aas
mov
pusha
outsb
lea
stc
and
xlat
ja
fstpl
mov
pxor
mov
inc
ja
lock
js
jbe
and
repz
sub
sbb
push
xor
aam
inc
or
xchg
pop
xor
aam
mov
pop
pop
and
adcb
mov
and
jp
adc
arpl
in
popa
mov
gs
out
xor
xchg
repz
dec
icebp
and
jmp
mov
fiaddl
and
and
mov
into
cmp
out
cmpb
sbb
adc
std
sbb
mov
lcall
dec
push
xor
mov
out
push
aam
lcall
mov
fcmovbe
imul
daa
ret
sti
rorl
test
out
push
sbb
pop
push
xchg
fisttpl
sbb
daa
inc
xlat
push
add
jge
in
les
mov
imul
inc
mov
in
jle
fwait
sub
fisubrl
push
faddl
inc
pop
jle
sub
mov
arpl
jl
daa
das
mov
and
xchg
push
dec
or
adc
aas
rol
rcrb
jl
push
push
sub
mov
test
mov
xor
jb
js
loopne
cmp
fsubp
and
call
scas
cmpsb
dec
fwait
xlat
xor
rorl
lock
cmp
xlat
scas
fsubs
cmp
dec
call
fstl
mov
and
push
mov
call
cmc
mov
mov
sbb
loopne
cwtl
jle
into
shrl
stos
fisttpl
mov
pop
fldcw
xchg
jns
jno
mov
adc
adc
cmp
aad
add
xor
outsb
jp
sub
mov
pop
xor
aad
and
out
stc
icebp
lret
int
imul
aas
push
add
iret
outsl
inc
pop
inc
push
pmaddwd
outsl
mov
in
pushf
inc
sbb
mov
mov
cmp
sbb
mov
xchg
and
mov
das
cmp
xchg
jp
and
test
loope
jp
xor
addb
incb
sbb
mov
pop
dec
dec
jl
lock
lahf
imul
xor
shl
arpl
xlat
js
scas
cmp
addr16
xor
popa
mov
mov
cmc
jmp
ret
jbe
inc
adc
mov
inc
cmpb
dec
jne
maskmovq
imull
mov
xlat
mov
jb
dec
dec
aam
cmpl
push
sub
inc
or
mov
ret
jmp
js
xchg
mov
or
xchg
call
xor
aas
and
jl
mov
pop
loop
repz
sti
adc
int3
daa
mov
in
cmp
or
bound
call
inc
mov
sarl
aam
jno
sbb
cs
paddusw
testl
mov
inc
sbb
icebp
sub
lret
inc
jnp
mov
mov
movb
xchg
jp
jnp
push
or
sbb
mov
gs
pop
test
pop
or
andb
xchg
pop
std
add
xor
adc
fildl
push
ljmp
aas
test
mov
inc
js
jl
push
test
aaa
in
jp
mov
lods
mov
cmp
cmp
les
xlat
sub
loopne
mov
cmp
xchg
inc
push
popf
fcomi
pcmpgtw
outsb
xor
mov
popa
jmp
arpl
faddl
xchg
cmp
adc
push
punpckhwd
fidivrl
js
or
add
push
sbb
mov
into
add
pop
cmp
cli
mov
das
fdivrl
xor
mov
sub
mov
fistpl
loope
cmp
jmp
dec
imul
xchg
and
mov
and
mov
jmp
mov
xchg
jnp
jbe
shll
aaa
push
sarl
ss
stos
inc
dec
and
xchg
int
stc
add
shrb
pop
mov
insl
cmp
lret
ficompl
mov
cmp
mov
dec
in
xchg
sar
mov
insl
pop
jo
scas
loope
xor
adc
shlb
ret
jbe
jl
js
jbe
aaa
or
popf
js
ss
fsubr
xor
data16
sbb
lret
mov
imul
sub
dec
and
xchg
cmp
jmp
push
mov
sbb
and
inc
sbb
lock
pop
mov
mov
sbbb
adc
adc
shrl
aaa
idivb
xor
mov
in
pop
sub
fnsave
andb
sub
xor
stos
inc
popf
pop
cmp
neg
lods
shlb
movsb
xlat
mov
push
pop
dec
xchg
mov
jae
mov
xchg
xchg
mov
mov
pop
cmp
push
mov
divl
pop
orl
xor
cmp
sbb
leave
sbb
movb
fisubrs
ret
xchg
mov
inc
ja
lock
adc
dec
loopne
pop
call
mov
scas
loope
xor
or
adc
cmc
mov
cmpsl
cmp
imul
scas
jnp
push
sub
mov
or
rcll
outsl
mov
fldl
cmp
das
or
shlb
out
lods
push
loopne
mov
xor
dec
mov
ret
add
jno
fs
jne
cli
call
pop
mov
data16
sub
mov
mov
cmpsb
out
aam
adc
jge
stos
xorl
xor
jne
cs
push
xchg
pop
pop
xchg
lods
lock
lock
out
inc
push
cli
mov
shl
and
lahf
shrb
push
je
adc
adc
lods
mov
rcrl
adc
lods
sti
push
cmp
scas
mov
maxps
push
aas
xlat
cmpsl
sarl
movsl
test
andl
outsb
cmpsb
leave
rcl
cmp
adc
pop
adc
jp
inc
fisttpl
cmp
jbe
inc
dec
pusha
push
mov
loope
mov
aad
rcrl
out
setp
mov
dec
lret
rolb
adc
repnz
inc
out
dec
mov
jne
sub
adc
loopne
mov
jl
sti
mov
mov
lahf
mov
aaa
aas
insl
push
jmp
xchg
incb
adc
or
arpl
cltd
mov
inc
sbb
pop
jae
sbb
xlat
jge
jne
inc
jo
outsl
add
repz
loope
push
int3
cmpl
lods
jle
in
jge
fmull
xchg
shrb
xor
cmpsb
xlat
and
adc
outsl
int
stc
into
cmp
sbbl
mov
jae
push
mov
sti
rolb
add
movsb
mov
mov
xor
fmull
xchg
out
xchg
pop
lea
sbb
mov
and
out
and
outsb
sbb
adc
int
mov
cmp
cld
jo
jle
arpl
stos
add
test
cmp
js
ljmp
mov
loopne
dec
lret
scas
add
xor
lret
sub
mov
xor
fwait
cmpsl
addr16
dec
pop
ss
fmull
test
faddl
push
cli
or
mov
hlt
add
jb
js
aad
adc
pop
add
mov
cmp
pop
and
jns
mov
negl
das
in
stos
sbb
fcoms
mov
dec
add
cmc
push
mov
sub
filds
and
cmp
movl
sbb
dec
cmpsl
mov
lret
arpl
mov
insl
fsubs
outsl
pop
lock
pop
cmp
mov
push
xor
sahf
inc
lret
jg
bound
xchg
mov
movl
aam
jp
mov
ljmp
mov
and
sub
cmp
les
sbb
into
imul
or
cmp
arpl
fnstsw
das
and
dec
aaa
push
ljmp
mov
test
das
ss
cwtl
xchg
mov
cmp
or
mov
inc
popa
push
sub
ds
faddl
test
xor
ljmp
xor
sarb
pop
pop
inc
xlat
sub
jnp
push
jo
push
or
imul
adc
xor
mov
lods
insl
sahf
fldt
xchg
sbb
pop
xchg
test
ss
cmp
in
loopne
mov
xchg
pusha
dec
mov
and
das
or
test
hlt
mov
mov
or
lock
rcl
scas
jae
add
add
mov
and
cmp
ret
adc
jae,pn
jg
jo
inc
cmpsb
or
inc
cmp
lock
mov
jno
push
mov
xor
dec
mov
xor
mov
dec
dec
push
mov
xor
mov
jb
dec
outsl
in
fs
lret
cltd
std
cmp
scas
or
or
jo
and
pop
fcomps
jge
pop
lea
test
cs
popf
add
jecxz
loopne
popf
sti
imul
mov
inc
mov
mov
sbb
pop
pusha
and
jp
rorl
or
shlb
aad
inc
testb
stos
sub
or
testb
push
jo
cmp
lds
push
sbb
test
scas
lahf
mov
xor
and
xor
or
negb
sub
cmp
mov
cmp
idivl
sub
push
loopne
in
cli
mov
mov
sti
pusha
xchg
mov
aas
dec
loopne
ss
cmp
mov
iret
sbb
add
in
add
mulb
add
add
jle
outsl
add
xor
sub
fsubr
jnp
dec
js
sbb
xor
and
lcall
shlb
out
into
mov
cmc
sbb
mov
aaa
xchg
outsb
mov
push
aad
inc
cltd
orl
and
daa
stos
dec
cld
add
insl
rol
xlat
push
nop
cmp
rclb
jbe
aaa
add
call
mov
or
and
flds
mov
mov
pusha
stos
fsubrs
dec
push
icebp
fstpt
push
ret
int
mov
push
cmp
add
sbb
pusha
and
aad
js
mov
jbe
mov
pop
mov
addr16
and
adcl
repnz
shl
aad
cli
jecxz
repz
xlat
in
movsl
push
xor
lahf
addb
cmp
in
movsb
push
mov
mov
cmpsl
jns
nop
lahf
pushf
dec
adc
mov
push
adc
arpl
xchg
mov
push
jae
and
shl
add
jne
sub
ja
inc
sub
scas
jb
cmp
and
inc
adc
ret
outsb
sti
xor
and
xchg
cmp
mov
sub
mov
insl
inc
test
pop
dec
push
sbb
mov
sbb
push
mov
lods
mov
adc
stos
dec
je
or
xor
clc
push
sub
mov
fs
push
mov
xchg
scas
inc
mov
cmpl
sub
ljmp
ret
xlat
pop
aad
mov
adc
pop
push
clc
test
clc
aad
xchg
pop
jbe
std
icebp
pop
jp
sbb
mov
cmp
inc
test
mov
push
lock
fsubrs
mov
ficoms
jmp
jne
cli
cmc
dec
dec
pop
ja
adc
mov
cld
mov
ret
stos
call
and
frstor
repz
mov
cmpsb
ret
cmpsl
mov
lock
xchg
pop
and
push
jae
xor
push
out
rcll
sti
xchg
mov
rcrb
pop
xchg
fimull
cmpxchg
lret
out
add
scas
sbb
loop
aad
sbb
rcr
xchg
nop
ljmp
sbb
pop
dec
mov
call
cmp
shll
cmp
js
jne
fmull
mov
and
add
cmp
movsl
xchg
mov
dec
lret
and
mov
cmp
jmp
add
and
adc
mov
fmull
cmp
pop
ret
and
jbe
cmp
mov
lods
fcoml
push
hlt
sbb
and
xor
mov
inc
push
frstor
in
fbstp
je
gs
xchg
sub
popf
out
push
lcall
das
jp
pop
dec
mov
dec
pop
and
sbb
xchg
imul
aaa
sub
mov
fildll
jg
pop
cmp
mov
dec
mov
push
insb
mov
sub
loopne
push
sbb
jp
push
clc
fsubrs
rorb
lea
and
mov
data16
es
inc
sbb
mov
sub
loope
inc
test
jge
add
jecxz
push
lea
scas
test
adc
inc
cmp
imul
insl
jbe
mov
clc
xchg
sbb
pop
and
movl
jb
daa
fptan
das
lock
test
dec
push
add
lret
verw
in
insb
push
pop
shlb
mov
out
sbb
pop
jl
sbb
jg
out
push
ds
adc
addr16
jge,pt
movsb
inc
pop
mov
stos
sbb
pop
arpl
adc
mov
fistpl
ja
add
pop
xor
xchg
loopne
sub
or
adc
mov
xor
pop
lds
aaa
mov
popl
outsb
lds
ds
into
adc
push
mov
fnsave
mov
inc
pop
pusha
out
push
push
fdivl
fdivl
lods
jne
lea
outsb
inc
sarl
mov
sbb
cmc
arpl
adc
cwtl
ret
sub
adc
addl
mov
je
xor
ds
daa
sbb
lods
mov
xlat
movl
sbb
push
dec
jge
and
pop
mov
push
mov
jg
mov
gs
xlat
enter
push
push
add
dec
adc
arpl
mov
jecxz
popa
daa
ja
pop
insb
dec
mov
nop
and
ret
ret
cmpl
ret
loop
pop
xchg
pop
pop
cs
je
rol
sub
jmp
mov
push
jge
dec
xchg
mov
fisttpll
fstpl
mov
inc
push
xchg
mov
imul
xlat
or
jne
sbb
add
push
je
das
clc
aam
inc
or
orl
sbb
mov
out
stos
inc
pop
push
mov
and
addl
push
movsl
fiaddl
push
outsl
cmp
pusha
mov
shll
lods
add
jmp
and
out
or
push
adc
adc
and
sahf
mov
aaa
bound
test
push
mov
ja
jle
inc
mov
xchg
pop
cmp
sahf
leave
mov
sbb
lds
or
out
inc
imulb
dec
mov
loop
jmp
jo
xchg
xchg
jle
or
loopne
rorl
mov
mov
std
push
js
jns
outsl
out
mov
mov
in
pop
mov
push
rcll
dec
sub
or
stos
shll
xor
lock
push
push
or
outsl
clc
add
cmp
xchg
aam
adc
and
mov
shll
ret
jne
hlt
pop
cmp
insl
jbe
cmp
push
addb
mov
sbbl
int
add
jbe
mov
repnz
out
dec
sub
fcompl
fimuls
imul
mov
jne
jl
xadd
sub
neg
rcl
inc
sarb
dec
mov
sbb
xchg
jge
bound
mov
inc
mov
insl
push
cltd
cmp
mov
ja
shrl
add
add
jg
cmp
sub
mov
aad
lds
ficompl
xor
and
pop
pop
fdiv
and
and
ffree
xchg
test
shll
xor
enter
int3
rcl
mov
xor
in
push
rolb
cmpsl
add
mov
jmp
adc
repnz
pop
orb
aad
leave
dec
call
cwtl
cmp
pop
pop
pop
cmp
mov
sbb
add
in
nop
out
in
cmp
adc
mov
dec
dec
aad
or
andl
aad
sbb
cmp
adc
jge
mov
ja
push
hlt
dec
fdivl
aad
mov
or
cmpsb
jno
rolb
pop
jl
js
jb
pop
xchg
adc
fistpll
pop
lock
lds
sti
mov
mov
call
stos
pop
mov
mov
sub
insb
jmp
sbb
add
pusha
pop
addr16
dec
les
fstpl
cmp
jecxz
mov
mov
push
or
xor
sbb
add
aad
incl
sbb
add
jp
sub
roll
mov
hlt
jb
xor
test
pop
fcmovnu
repnz
mov
mov
test
dec
sub
xchg
lock
das
nop
negb
mov
push
xor
out
icebp
jne
jge
js
sbb
inc
cmp
jne
jp
cmpsl
jb
in
das
je
hlt
jnp
pushf
pop
lret
loope
mov
and
repnz
sbb
push
adc
aad
ficoms
xchg
adc
orl
inc
test
mov
fwait
and
xchg
xor
mov
lea
pop
icebp
les
mov
dec
and
rcll
push
mov
mov
adc
or
mov
xor
aam
iret
repz
pop
xlat
sbb
mov
push
xor
dec
mov
mov
cmp
ret
ficoml
pop
push
xlat
jle
fldt
inc
idivl
ss
inc
outsl
pop
pop
adcb
xchg
inc
pop
pop
cld
mov
xchg
data16
out
add
mov
insl
jl
sub
sbb
jae
pop
xchg
cmp
jle
outsb
popa
cs
fsubrs
call
pop
cmovg
xchg
or
dec
adc
cwtl
pop
les
cs
sub
out
mov
cmpsb
lahf
mov
and
cmp
jge,pn
fldt
mov
inc
cli
lods
loop
xor
out
xlat
notb
mov
movsb
addr16
mov
outsl
stos
pop
cld
pusha
into
mov
mov
jne
aad
mov
loope
mov
pop
bound
call
sub
call
mov
ss
and
jbe
fidivl
sub
arpl
sub
stos
and
popf
std
icebp
movsl
and
mov
cmpsl
hlt
push
shlb
pop
pushf
outsb
iret
push
mov
jo
cld
pop
lods
scas
adc
das
or
outsb
cmp
push
outsb
inc
jl
xchg
loop
in
fisubl
add
cmp
std
test
cmp
pushf
xor
xlat
enter
mov
adc
mov
scas
scas
imul
cmpsl
dec
adc
pop
pop
es
sbb
jg
bound
cmpsb
cmp
push
pop
inc
push
jge
adc
stos
cld
insl
adc
in
sbb
daa
gs
lods
xchg
jge
adc
scas
sub
cmp
inc
push
scas
fldenv
mov
and
fidivrl
daa
pop
push
sub
shr
lods
adc
jl
fdivl
lahf
sbb
sbb
sub
scas
or
ss
sbb
mov
popa
dec
rcll
fdivl
cmp
jmp
jno
jge
mov
and
in
rcll
cmp
hlt
mov
inc
neg
mov
jnp
int3
cs
jnp,pt
cmp
mov
pop
xchg
in
xor
test
fldcw
mov
loope
and
cmpsl
jecxz
jbe
fwait
xor
adcl
jmp
sbb
xor
add
loope
pop
pop
xlat
jno
clc
xor
xor
ja
fst
ljmp
sub
in
push
popf
adc
pop
fistpll
nopl
and
mov
mov
mov
mov
icebp
aam
dec
bound
lea
mov
jmp
push
sub
cmp
test
outsl
insl
jle
inc
sub
scas
out
pop
jmp
fs
push
ret
ss
out
dec
mov
jge
out
pushf
inc
mov
or
out
push
enter
fldt
fdivrp
aad
loop
sarl
mov
jnp
adc
jg
inc
inc
daa
inc
push
mov
aas
hlt
mov
mov
inc
ljmp
iret
jne
lret
fstpl
ret
pop
je
in
sbb
xor
jb
ret
push
jne
clc
push
out
pop
adc
jl
mov
and
cmp
fdivr
popa
adc
push
cmp
imull
fdivrs
hlt
pop
mov
pop
dec
ja
inc
fs
jle
xor
mov
dec
lock
mov
inc
jnp
push
icebp
cmp
aaa
xchg
mov
jno
pop
cwtl
out
pop
mov
insb
call
and
sbb
stos
sbb
std
ljmp
xchg
add
mov
imul
cmpsl
clc
cmp
fcomps
adc
test
sub
fdivrl
sbb
jle
sbb
adcl
fmul
mov
outsb
push
cltd
roll
loop
add
fdivrs
fisubl
outsb
imul
push
jg
insl
adcb
ljmp
addl
in
loope
ret
xchg
mov
push
xchg
inc
pop
sub
ljmp
xor
cld
out
iret
stc
addl
adcb
jl
sar
ljmp
or
shrb
cwtl
inc
fcoms
lds
mov
xchg
mov
call
shlb
add
mov
mov
leave
mov
push
adc
pop
dec
fs
push
sbb
arpl
dec
push
add
ret
fs
dec
cmp
int3
push
sbb
std
cmpsl
cmp
ss
xchg
xlat
pop
xchg
and
fisttps
inc
mov
dec
gs
xor
mov
jno
mov
xorb
mov
std
cmc
stc
or
and
sahf
add
popa
jecxz
cmpsb
xchg
int
popf
pusha
cmp
ja
rcrb
or
push
dec
leave
les
inc
notl
aam
inc
hlt
or
cmpsl
jecxz
es
sbb
test
push
jns
push
sbb
or
insl
icebp
shrl
into
divl
repnz
or
push
mov
cmpsl
incl
xchg
xor
outsb
inc
mov
adc
std
icebp
mov
shll
jnp
push
stos
insl
pop
aas
ret
pop
or
sub
js
outsb
jp
sub
jle
lcall
aad
data16
mov
movl
aas
ss
adc
mov
push
in
stos
in
mov
movb
push
insl
ret
xor
rorl
sbb
lret
mov
xchg
test
sbbb
movsb
lret
xor
add
sbb
cmp
pop
dec
push
test
mov
cmp
aas
dec
std
cli
jo
xchg
push
mov
jae
out
and
repnz
test
xor
fnstsw
scas
xor
mov
in
mov
je
inc
scas
addl
pop
les
in
std
cmp
mov
adc
pop
xchg
adc
mov
pop
out
cmp
jecxz
jns
xor
adc
faddl
xor
test
aas
add
mov
pop
movhps
jmp
js
into
jge
mov
cwtl
jle
jmp
push
jb
jecxz
imull
adc
xchg
shrd
js
add
dec
out
mov
dec
iret
push
mov
adc
xchg
repnz
sbb
inc
jg
mov
mov
mov
fidivrl
push
cmp
hlt
add
mov
mov
std
das
ss
arpl
xchg
sahf
or
pop
int
push
mov
filds
cmp
mov
xlat
mov
and
lds
mov
sub
jno
inc
lea
or
mov
jno
mov
add
pop
mov
cmp
aam
out
cld
loop
cli
ja
jp
pop
push
and
das
lods
sub
fdivrs
pop
leave
pop
test
and
jle
sbb
mov
push
jge
iret
or
inc
xchg
mov
orb
xchg
hlt
sub
fmull
test
sub
dec
push
arpl
or
xchg
lds
or
and
fnstsw
mov
sub
pop
push
popa
and
pushf
fadds
mov
add
iret
cmpsl
mov
rcll
scas
imul
mov
and
add
xchg
in
jbe
int3
pushf
cwtl
dec
add
insb
dec
movups
xchg
and
or
ret
cmp
jecxz
add
sarb
js
repnz
icebp
sbb
mov
ljmp
sbbl
data16
mov
dec
mov
sub
push
push
ffree
inc
aad
lcall
jb
push
jecxz
jg
cmp
push
xor
mulb
aaa
ret
aam
dec
negl
outsl
daa
pop
jg
inc
ss
push
mov
add
call
sbb
jb
sti
ficompl
mov
fisubs
or
sbb
pusha
movsb
in
nop
jnp
or
rolb
loope
inc
ret
sbb
dec
outsb
jge
pop
sbb
sub
rolb
adc
daa
pop
cwtl
fcom
int
inc
sti
add
cmpsl
xchg
jmp
sysenter
in
lea
orl
and
pop
fs
in
or
jmp
ss
adc
cmpsl
neg
adc
inc
orl
jo
inc
push
push
and
pop
add
lds
or
scas
sub
je
loopne
jae
mov
sub
xchg
mov
imul
push
cmp
pop
fldt
adc
cmpsb
nop
or
adc
jle
pcmpeqb
xlat
loope
iret
daa
cmpsl
mov
scas
rol
out
cmp
push
inc
rcrb
sbb
mov
or
sti
lock
push
adc
sub
popl
xchg
loop
mov
ljmp
jg
ret
les
mov
cmp
cwtl
imul
xor
xlat
sub
cwtl
lahf
shrb
xor
cmp
mov
sbb
std
popa
mov
mov
outsl
fwait
push
fcomps
outsb
xchg
jp
push
or
add
out
jp
and
call
js
mov
roll
clc
imul
inc
icebp
es
jo
add
dec
mov
mov
add
sub
je
jle
jbe
cmp
dec
shl
das
sbb
add
pop
faddl
int3
sbb
pushf
sar
ja
mov
call
adc
pusha
jg
or
fwait
jecxz
xlat
dec
stos
add
sti
mov
popa
jle,pt
sbb
xor
cmp
mov
cmpsb
add
mov
jne
dec
push
mulb
pop
sub
or
xor
fisubrl
inc
test
loopne
jecxz
shrb
stos
aas
jno
add
jp
push
pop
dec
pop
adc
add
xchg
lcall
fcompl
sar
lret
pop
clc
jg
or
pop
rclb
nop
xor
push
clc
fidivs
sub
out
jbe
mov
and
cltd
testb
add
nop
jl
sbb
xorb
pop
lret
in
mov
lock
adc
ret
xchg
push
ret
aam
pushf
jbe
lods
add
fistpll
shll
nop
adc
jo
mov
scas
add
pop
sarb
ljmp
push
jno
aam
stos
mov
xchg
push
mov
push
rolb
sub
or
das
cmp
js
mov
fsubl
inc
cmpb
jae
stos
lcall
pop
push
xchg
test
add
lsl
cld
dec
fildl
pmaxsw
and
push
xor
pop
mov
jge
cmpsl
mov
and
pop
adc
stos
cmp
sub
je
mov
inc
sahf
xchg
push
outsb
sahf
xchg
jb
loop
xorl
je
jg
cmp
xlat
rcll
mov
mov
xor
cmp
adc
inc
push
shrl
or
xchg
outsb
xor
xchg
out
xchg
pop
jl
mov
push
shrb
stos
lcall
out
add
jp
into
and
stos
fidivrl
fcmovbe
pop
push
push
mov
outsl
fistpll
jae
lret
clc
push
clc
out
aaa
cld
add
sti
or
ljmp
mov
sub
cmpsb
push
mov
test
mov
loop
sbb
sahf
or
test
call
scas
add
lods
fsub
sbb
jle
and
jmp
and
push
lock
adcl
imul
aam
jns
jecxz
ja
sub
rolb
xchg
pop
pop
hlt
stos
or
jmp
adc
cmc
dec
out
mov
xchg
jl
ds
xchg
adc
je
sbb
mov
pusha
or
mov
push
std
and
sbb
ss
xor
jmp
adc
or
or
push
loopne
sub
cmp
mov
neg
rorb
movl
dec
pop
push
into
movsl
scas
jecxz
ffreep
pop
add
ja
xchg
arpl
data16
lods
or
sahf
mov
movsb
lcall
xchg
loop
push
add
popf
popa
fidivs
je
rorb
inc
test
loop
decb
mov
imul
push
cmc
into
add
sbb
add
add
mov
push
les
jnp
xor
outsl
push
subl
lds
cmp
inc
cmpsl
jl
popf
and
out
xor
xor
bound
xor
inc
ss
xlat
adc
add
loope
push
cmp
sbb
sbb
test
je
inc
mov
xchg
and
fidivl
movl
push
mov
add
inc
push
pop
push
mov
out
lods
stos
ljmp
add
mov
mov
xor
mov
jp
sbb
lret
test
mov
push
push
push
shlb
lods
pop
ljmp
fdivl
jge
push
push
ret
or
xchg
pop
add
sbb
out
scas
scas
in
rorb
enter
and
sbbl
and
imul
arpl
sahf
mov
sahf
lods
daa
jle
adc
ja
insl
stc
fldl
roll
fists
add
enter
lea
sub
and
out
lret
pop
add
jge
push
iret
adc
in
lahf
insl
mov
push
adc
rcr
rorb
test
cmp
int
sub
aam
out
fists
pop
pop
das
mov
jl
stc
jle
aam
sahf
leave
ret
shll
cs
mov
ljmp
movsl
or
mov
loope
sbb
arpl
cli
mov
jne
dec
jb
xor
cmpl
fstpt
mov
int3
jl
and
rcrb
fucomp
pop
pop
insb
mov
ss
push
repnz
mov
pop
or
data16
imul
ljmp
adcl
mov
cmp
pop
adc
jo
mov
fidivs
loope
add
jmp
fucom
pusha
adc
mov
push
dec
cli
cmp
pop
push
adc
mov
imul
adc
jnp
sub
ret
out
scas
mov
sub
jno
jnp
mov
mov
popf
loop
pop
cld
popa
inc
mov
cmc
add
out
push
cmpsl
das
mov
in
shrb
icebp
mov
sahf
inc
pushl
cmp
cmp
js
es
les
pop
push
roll
clc
adc
cmc
jbe
cmpsl
stos
leave
rorl
sti
rclb
lods
push
add
mov
lods
popf
fcmovnu
or
jl
mov
imul
ss
outsl
shrb
arpl
out
xlat
or
pop
test
xor
shl
aam
sbb
fisubrl
outsb
push
pop
mov
jo
lret
rclb
jne
mov
or
push
arpl
outsb
or
addb
sub
cli
subl
nop
mov
fidivrl
fldt
mov
adc
cmp
cli
lds
scas
scas
pop
push
rcrb
stc
adc
add
mov
inc
scas
push
shl
stos
sbb
fwait
andl
adc
mov
pop
roll
mov
loopne
call
add
in
stos
adc
push
jmp
ret
scas
xchg
or
xor
and
jmp
sub
dec
mov
mov
lea
push
loop
and
jo
mov
lods
jb
xchg
lret
in
or
mov
ret
mov
pop
mov
test
dec
mov
pop
cmp
pop
ja
xor
add
xor
lods
jne
jp
add
dec
push
icebp
fucom
xor
jle
test
lea
mov
mov
inc
pop
xchg
adc
xchg
ret
cli
addl
insl
subb
loopne
cmpsl
in
mov
mov
imul
mov
mov
sub
fmuls
aam
mov
add
inc
and
or
call
mov
cltd
mov
mov
pop
add
mov
xlat
jle
jb
into
insl
pop
in
cli
fistpll
roll
mov
dec
xchg
xorl
ret
ss
add
ret
popa
inc
arpl
inc
fildll
int
jb
push
pusha
addr16
daa
ja
imul
inc
imul
xchg
and
mull
cld
xchg
xor
test
jge
inc
or
or
inc
test
jmp
aad
pop
mov
push
lock
stos
sbb
repnz
dec
outsb
add
popa
add
and
lock
les
push
stos
subb
popa
mov
out
dec
aas
pop
in
stc
outsb
iret
mov
subl
hlt
rorl
push
pop
pop
cmc
adc
or
add
mov
mov
int3
mov
sti
pop
xchg
clc
push
xchg
mov
icebp
aam
shrl
pusha
jg
xor
frstor
xor
in
repnz
sbb
push
xor
loopne
cmp
fistl
pop
lds
and
mov
mov
cmp
pop
mov
mov
jmp
jge
and
dec
dec
mov
mov
jb
pusha
je
mov
add
jecxz
jge
mov
mov
mov
sbb
ja
rolb
add
mov
and
lret
test
sbb
arpl
pusha
and
stos
inc
mov
dec
loope
sbb
xlat
imulb
dec
sbb
xor
add
lds
jmp
dec
les
ja
mov
fadd
aas
fldcw
push
fisubrs
sub
fbld
jne
ffreep
inc
add
pop
and
ljmp
mov
ret
cmpsl
push
push
clc
sbb
and
mov
sarl
sti
lods
test
negl
sbb
nop
pop
inc
sarl
xchg
add
pop
inc
push
cmp
pushf
into
scas
mov
aam
aaa
jno
sarb
mov
push
inc
aam
notb
rclb
add
inc
push
scas
inc
mov
pop
xor
nop
cld
lods
es
cmp
pusha
jae
xchg
sarb
dec
shrb
and
inc
scas
mov
add
sahf
movsl
xchg
push
mov
arpl
sub
scas
fldenv
mov
jge
dec
ret
cmp
xor
cmc
or
push
mov
outsb
push
push
jecxz
dec
icebp
cmpsl
sbb
push
test
cmp
cmp
sbb
adc
pop
sbb
mov
pop
shll
dec
push
jne
cmpsb
mov
popf
subl
arpl
fstps
jp
inc
call
fidivs
or
adc
aas
clc
adc
pop
movsl
loop
jnp
jns
jno
xor
add
ret
pop
inc
mov
out
mov
cld
mov
mov
fidivrl
ret
push
js
js
mov
xor
xchg
pop
mov
push
daa
cmp
lea
xchg
pop
push
iret
mov
jne
ffree
jae
hlt
jg
test
xor
push
sbb
imul
mov
outsb
inc
pop
in
push
or
idivl
inc
pusha
cli
push
leave
rcrb
dec
test
ds
push
or
push
and
mov
pushf
or
fcompl
rorb
inc
mov
jnp
jbe
dec
insb
js
jno
xor
outsb
inc
mov
push
dec
add
repz
xchg
jo
lret
cli
push
mov
icebp
pushl
out
cmpsb
push
add
loopne
or
jnp
xor
inc
cmp
loop
enter
sub
rorb
add
std
dec
add
iret
and
adc
cmp
sbb
loop
add
inc
into
test
adc
push
rolb
loop
push
push
mov
adc
jp
call
or
sub
mov
or
test
pop
and
xchg
inc
mov
or
shlb
xor
sbb
or
push
pop
les
inc
loop
loope
sub
js
scas
cmp
ret
adc
ret
dec
pop
adc
shll
inc
adc
stos
jns
sbb
inc
pop
movsl
mov
push
jg
push
lret
xor
insb
out
loopne
mov
cwtl
aas
jp
adc
lods
or
in
push
lock
cmp
xlat
test
bound
ds
mov
xor
out
sbbl
jle
xor
jge
daa
inc
dec
and
insb
movsb
pop
fucomi
pop
dec
mov
lock
cmp
cwtl
loope
pop
in
inc
subl
mov
fdivs
insb
cmp
xchg
or
cmp
push
data16
mov
inc
cmp
ficoml
in
cmp
jnp
lds
cmp
pop
dec
mov
push
sti
adc
insb
cltd
or
jne
cli
or
jl
mov
sub
dec
inc
addr16
sti
icebp
add
mov
mov
dec
mov
mov
mov
ret
and
out
sbb
sub
cmpsb
and
cmp
movsb
lar
rolb
mov
out
adc
mov
out
ficoms
xchg
mov
mov
xlat
or
sbb
pextrw
es
fildll
xlat
add
xlat
imul
fnstsw
std
lock
arpl
subb
push
adc
jae
test
lock
fwait
loopne
ret
leave
bound
jno
jle
adc
dec
mov
shll
mov
shrb
and
mov
cs
mov
popa
mov
cmp
jnp
mov
mov
sti
aam
out
cltd
pop
xor
pop
in
mov
pop
pop
xor
call
add
aam
mov
pop
test
adc
les
test
push
mov
enter
add
xlat
mov
cmp
lods
push
jnp
bsf
push
xor
incl
xchg
mov
xchg
mov
push
fidivrl
loopne,pt
xchg
cmp
cmp
icebp
push
jg
cmp
cmpsb
imul
sbb
cmpsl
jg
outsb
pop
mov
stos
cs
ljmp
shl
iret
or
mov
shrl
out
dec
push
lds
inc
notb
call
test
jg
jb
pop
jp
sub
pop
inc
in
sti
movaps
roll
addb
sbb
push
jae
mov
inc
lods
cli
mov
rorb
and
pop
fiaddl
dec
icebp
pop
or
push
loopne
fstpt
je
insb
ret
mov
jae
cmp
dec
jle
int3
jecxz
inc
out
xchg
sti
jo
mov
aam
fstpl
bound
sub
push
not
icebp
adc
pushf
cs
mov
add
out
mov
add
jg
leave
inc
pop
inc
cmp
ret
mov
mov
xor
push
aam
fimuls
ds
add
mov
adc
inc
jp
popa
pop
cmp
cmc
and
pop
push
out
out
push
sahf
adc
cmp
and
rorl
inc
lods
xchg
sub
outsb
scas
jl
cmp
cmp
push
or
loope
js
inc
leave
push
repnz
outsb
notl
and
cmp
sbb
aad
in
jb
cmc
sub
int3
lock
insb
push
nop
testb
sbb
push
ljmp
mov
cmpsl
xchg
in
gs
mov
outsl
shrb
cmpsb
xor
mov
push
scas
into
xor
push
xchg
mov
xor
popa
pop
ret
pop
sub
ret
xor
out
mov
hlt
mov
in
lock
add
shlb
adcl
push
xlat
cmp
cmpsl
xchg
int3
ja
cltd
mov
cmp
jns
shll
cli
adc
scas
lahf
es
dec
adc
fdivrs
imul
test
and
fstp
call
sub
jmp
jno
push
ret
sub
nop
sub
ljmp
and
cs
or
pop
dec
pop
psubq
xchg
push
pop
shll
push
lods
ret
outsb
loop
ds
fadds
push
pop
mov
lods
jg
adc
add
scas
fldt
lods
je
inc
jle
cmc
out
or
jg
push
sub
pop
movsl
sbb
test
and
mov
stos
arpl
loop
xor
iret
inc
xchg
stos
imul
sbb
out
ret
xor
push
and
add
clc
rcl
cwtl
pop
jno
pop
fimull
push
cmp
fnstenv
pop
sbb
std
push
lds
es
jne
popf
mov
push
pop
icebp
cmpsb
fcmovb
daa
scas
sbb
inc
jb
out
imul
inc
fidivrs
into
in
bound
imul
xor
pop
mov
test
cwtl
stos
mov
lea
jbe
inc
aad
lea
ret
add
fisubl
lea
cmc
insb
aad
push
ds
inc
fcoml
push
or
lock
clc
cmpsl
push
dec
pop
ret
push
xchg
mov
out
testl
loop
cmc
mov
push
popf
outsl
and
rcrb
and
pop
xchg
inc
mov
jo
cmpsl
add
jmp
inc
sbb
xor
or
xchg
and
dec
test
mov
cmp
xor
mov
icebp
add
or
push
push
mov
pop
pop
popa
insl
clc
shll
xchg
xor
cmp
xchg
fs
inc
stos
mov
ret
push
fmuls
mov
mov
das
outsb
mov
or
or
test
xchg
inc
mov
jp
mov
pusha
fstpt
outsb
mov
ja
push
lret
cmpsl
paddw
mov
or
push
aad
inc
shlb
fcoml
mov
mov
in
and
xor
mov
push
push
std
or
jecxz
or
xor
pop
xchg
pop
popa
dec
pop
mov
xorl
outsb
push
xchg
xchg
in
fistpll
aaa
int
xchg
xor
cwtl
adc
sub
sub
cmp
jmp
pop
pop
fisttpl
into
mov
pop
add
add
leave
cmp
outsb
bound
or
sub
adc
sub
jmp
lods
shr
fchs
inc
xchg
test
cmpsl
pop
cmp
popf
cmp
pop
mov
leave
mov
pop
xchg
loop
iret
mov
gs
arpl
iret
sub
testl
sbbb
out
inc
jle
or
mov
push
shl
jmp
icebp
btr
mov
adc
adc
stos
jo
pop
es
adc
roll
test
cmpsb
insl
jp
pop
cmp
jp
or
clc
inc
xor
mov
cltd
daa
out
cli
push
adc
sbb
mov
lock
and
ret
movsl
jl
or
in
inc
push
insb
cld
ret
in
mov
mov
jge
xchg
pop
enter
idiv
stc
cmp
arpl
mov
dec
out
lods
mov
sub
loope
ret
popf
sbbl
mov
stos
arpl
addr16
or
or
inc
xchg
pop
mov
add
push
push
xor
addr16
inc
and
stos
aaa
ret
xor
and
xor
pop
pop
jmp
sbb
loopne
xor
jmp
mov
mov
add
ret
add
xchg
cltd
cmc
jmp
sbb
pop
sahf
push
int
mov
aas
cld
clts
mov
outsl
pop
arpl
mov
out
xor
jmp
inc
mov
and
add
add
call
fdivrl
jo
dec
push
push
jbe
pop
and
negl
jo
mov
xchg
jnp
pop
mov
push
shl
cmp
jp
mov
dec
xchg
test
sti
inc
inc
lods
cmp
xor
jb
cmp
arpl
and
mov
and
mov
xor
loopne
xlat
jo
leave
sbb
popw
jns
pop
push
mov
push
push
arpl
imul
jp
inc
sbb
or
xor
or
mov
mov
mov
dec
dec
test
sbb
lods
pop
pop
lret
divb
mov
rclb
dec
ljmp
mov
pop
sub
push
mov
mov
and
jp
xchg
fsubr
xor
insl
movsb
jg
rorl
mov
rcl
and
sti
pop
ja
clc
mov
xor
imul
push
add
stos
scas
mov
leave
ds
stos
mov
cld
out
adc
xchg
adcl
and
inc
inc
inc
cld
dec
sub
sub
outsl
sbb
push
movb
out
mov
fnsave
cmp
sarb
fistpll
js
add
and
mov
pop
lahf
or
or
mov
mov
repz
hlt
mov
sbb
add
jecxz
and
test
iret
daa
jns
and
ss
test
jg
inc
add
ds
sbb
push
stos
jae
pop
js
adc
or
or
test
push
mov
lods
in
call
jmp
loopne
or
xor
jle
in
in
cmp
push
fiaddl
add
int
mov
inc
pop
fistpl
dec
iret
paddb
aad
sub
fdivs
sub
rorb
sahf
mov
inc
outsl
add
jb
xchg
loopne
adc
lods
or
hlt
pop
loop
addr16
xlat
into
rep
inc
jmp
nop
add
pop
mov
pop
test
jnp
xor
insb
aam
xchg
rcrb
mov
clc
aam
jge
mov
jmp
outsb
add
mov
pand
notl
push
and
xchg
fs
fmuls
leave
popa
inc
sbb
mov
push
and
leave
sbb
jbe
push
in
ljmp
and
mov
pop
pop
xchg
mov
mov
ret
and
mov
aas
jp
lods
nop
mov
int
adc
pop
sarb
add
and
cli
pop
or
in
ds
in
ret
jne
jae
and
inc
das
ja
fisttpll
jge
dec
inc
jb
loope
push
mov
jo
idiv
div
push
das
mov
andb
push
ja
dec
jl
add
scas
js
cmp
ljmp
addb
aas
movsl
jge
ret
xor
mov
clc
jne
test
stos
fstps
adc
notl
add
xchg
dec
jg
jecxz
dec
in
in
and
jl
out
loop
mov
mov
ds
mov
rolb
fwait
cmp
mov
and
shl
xchg
test
pop
and
shl
mov
push
sahf
mov
jl
pop
std
jmp
push
xor
inc
xor
pop
and
xor
cmp
lock
jle
add
dec
fnstenv
stos
jnp
mov
aaa
sub
lret
add
xor
push
out
enter
iret
inc
ret
and
cli
pop
lods
jnp
lds
sbb
fstps
cmp
push
outsb
repz
das
aad
jmp
push
jp
and
fndisi(8087
mov
filds
repz
fstpl
mov
or
lds
jb
mov
jle
repz
aas
rolb
arpl
add
cmpsl
mov
xor
std
insl
or
cmp
mov
push
out
mov
dec
jg
aad
andl
xor
shrl
imul
jle
push
push
xchg
mov
sbb
add
inc
aas
inc
popf
jecxz
cmp
push
push
mov
or
and
loope
mov
sbb
loope
rol
int3
xchg
jle
fisubs
pop
xor
mov
mov
int
call
pop
test
iret
lock
adc
push
add
insb
or
xlat
cmp
sbb
dec
xchg
outsl
xlat
insl
in
push
cmc
sbb
lock
jo
pop
dec
into
mov
add
int
pop
adc
cmc
sahf
push
inc
push
ret
or
jg
cmp
mov
pop
dec
jb
insl
push
xor
scas
push
stos
shlb
daa
pop
or
fcoms
pop
add
test
mov
lret
sub
andb
mov
push
sub
scas
sbb
xor
inc
mov
pmuludq
and
fidivl
leave
cld
mov
jbe
and
mov
jmp
sub
and
mov
loopne
stos
leave
jl
push
ja
out
push
fdiv
ret
shl
mov
inc
sbb
push
and
cmc
pop
mov
mov
iret
or
jmp
xchg
nop
nop
xor
jmp
pop
scas
pop
test
add
sti
add
faddp
xor
insl
imul
and
je
and
xchg
sti
inc
stc
jb
cmp
add
pop
dec
roll
push
push
hlt
fldenv
mov
mov
scas
xchg
pop
cmp
pop
outsb
movups
push
test
sti
movsb
sub
pop
add
and
mov
add
xor
push
jnp
or
mov
fstl
mov
and
stos
not
adc
scas
cmp
out
and
mov
test
fdiv
arpl
call
add
dec
pop
push
or
or
ljmp
ds
loope
dec
test
mov
ret
clc
pop
lds
repz
inc
dec
and
out
fisttpl
cs
or
fiadds
imul
jmp
cs
ret
mov
mov
cmp
sbb
adc
sbb
sbb
shlb
pop
test
nop
jno
insb
ffree
cmp
dec
jno
int3
fsubr
jge
sti
add
call
push
pop
fcmovu
mov
mov
add
cmc
mov
je
pusha
lds
mov
arpl
cmp
imul
call
mov
xor
lret
stos
leave
push
inc
mov
pop
imul
das
rorb
inc
cmp
sub
lds
jo
test
sub
leave
sbb
mov
mov
add
insb
pop
pop
xchg
xlat
pop
call
adc
mov
pop
aaa
insb
add
ss
or
insl
push
addr16
shlb
push
mov
shrb
xor
xor
nop
mov
rorb
aas
adc
movsb
sbb
adc
in
mov
out
jle
outsl
es
popf
shll
jbe
addr16
cs
mov
add
mov
fs
inc
adc
roll
jge
fnstsw
aam
mov
lret
jae
jbe
pop
mov
xor
jno
xor
sahf
mov
push
add
imul
ds
cmpb
enter
cs
jo
test
xor
pop
sub
fildll
scas
inc
pop
push
out
mov
jp
jl
loop
adc
call
imul
mov
dec
push
sbb
fdivl
or
repnz
and
stos
sti
sahf
test
popa
mov
test
lcall
dec
ja
mov
addr16
cmp
ror
cwtl
stc
clc
out
lea
mov
pop
add
cmp
mov
outsb
je
arpl
mov
into
adc
sub
pop
and
fsubrl
inc
cld
and
sbb
sbb
mov
shll
xchg
push
xchg
fwait
sbb
fists
jg
test
test
pop
jle
or
ret
fldt
outsl
mov
fwait
or
add
rcll
les
mov
imul
dec
or
fimuls
pop
out
mov
call
fwait
sahf
sub
add
inc
mov
lds
rolb
add
jmp
xor
mov
mov
mov
dec
cmp
pop
ja
out
loop
xchg
cmpsl
ds
adc
shr
jo
pop
xchg
or
test
cld
hlt
cmc
cmp
or
mov
hlt
loop
push
int
enter
outsl
addr16
push
cs
jnp
mov
lods
mov
jg
std
jp
sbb
aad
xchg
bnd
or
cmp
sbbl
popa
dec
dec
ds
sbb
cmp
mov
mov
mov
arpl
scas
out
xor
rorb
outsb
ret
xchg
xor
and
ja
pop
repz
daa
or
mov
push
sub
clc
je
mov
add
cmc
mov
jl
sbb
inc
mov
or
hlt
add
lods
fwait
pop
arpl
mov
jbe
xchg
js
mov
push
push
rolb
push
andl
sbb
dec
cmp
jg
addr16
inc
in
sahf
gs
jecxz
das
xlat
jno
inc
add
push
ret
push
testl
and
push
inc
pusha
mov
push
aam
cmpsl
sub
sarb
jle
cmpsl
xchg
aam
push
addl
dec
mov
push
sub
push
mov
mov
pop
fldl
out
repz
rcrl
cltd
mov
ret
xchg
dec
out
and
call
mov
loope
sbb
insl
mov
testl
les
outsl
inc
pop
and
ror
pop
mov
adc
push
sti
jnp
jle
cmpsb
sbb
cmpl
xor
xor
outsl
mov
cwtl
mov
jp
movsl
pop
push
adc
rorl
lods
sbb
jae
xchg
fstpl
loope
jbe
mov
adc
lcall
cmp
shrb
loopne
xchg
sbb
outsb
lods
mov
mov
out
fcomi
rol
jne
fs
ffreep
pop
xor
clc
mov
mov
cmc
pop
or
pusha
lods
ret
mov
or
aad
cmp
jl
jl
popf
pop
mov
xchg
lock
icebp
mov
idivb
loope
mov
mov
and
lods
mov
add
jp
shl
scas
pop
pop
dec
pop
out
test
lcall
or
mov
shrl
lock
or
and
ljmp
and
pop
clc
test
jb
insl
and
dec
sbb
ja
xor
xchg
jne
cmp
iret
cmpsb
sbb
cmc
cmp
xchg
fnstsw
bound
push
mov
and
mov
mull
inc
hlt
insl
test
jle
sbb
push
in
jbe
fwait
cmc
rorb
jp
inc
or
sbb
in
mov
pop
cmp
push
cmpsl
dec
adc
cmpl
ss
xor
fmulp
xor
and
add
mov
lea
jl
scas
and
das
sub
cmp
jnp
ret
scas
pop
aaa
pop
push
jle
lock
mov
push
pusha
pusha
xor
gs
cmp
push
je
fwait
mov
jnp
or
xor
lea
mov
xlat
mov
pop
pop
fisttps
mov
and
clc
mov
pushf
arpl
inc
fistl
addr16
outsl
add
sub
mov
xchg
inc
mov
outsb
out
pop
in
mov
dec
iret
or
cmpsb
fcmovu
xchg
dec
dec
aaa
inc
cmc
mov
ss
jnp
mov
mov
pop
cld
loope
lahf
or
pop
xchg
push
mov
adc
inc
adc
cmp
ja
dec
stos
pop
jbe
jmp
sti
outsl
sbb
pop
jae
xor
subl
adc
cwtl
inc
push
sbb
add
pop
mov
cmp
or
add
inc
inc
dec
mov
lea
jle
in
mov
lret
xchg
mov
mov
jle
sbb
push
and
mov
mov
adc
add
stc
push
mov
into
push
pop
mov
test
ss
add
out
xlat
in
jb
cvtps2pd
mov
mov
inc
nop
fs
sti
mov
cmp
outsl
call
iret
movsb
push
dec
lea
push
pop
xor
lock
xchg
mov
mov
mov
jbe
aad
jp,pt
imul
stos
add
inc
and
xor
inc
test
rcrl
mov
in
push
ja
jg
or
xchg
xchg
jmp
adc
push
into
clc
mov
xchg
mov
std
inc
mov
ljmp
xchg
jg
xchg
addb
aas
fcomps
mov
loop
mov
test
js
jo
outsl
andb
inc
adc
sbb
mov
ficoml
stc
movb
mov
iret
mov
inc
dec
aad
inc
add
call
jp
adc
mov
les
mov
loope
test
xor
lea
rcll
inc
mov
adc
xchg
jecxz
ret
outsb
std
lcall
and
jne
mov
cltd
stos
sahf
in
jb
cld
repz
pop
scas
pop
pop
push
jbe
adc
lahf
mov
sbb
mov
rclb
sub
mov
jmp
rorl
and
mov
int3
in
or
adc
popa
jl
jo
mov
imul
sub
ficoms
mov
loop
sti
sbb
pop
fsubs
imul
mov
pop
lret
add
ret
sarl
gs
mov
ret
scas
mov
in
mov
loop
mov
lcall
ret
fcomp
mov
ret
mov
mov
cltd
fcompl
in
jno
lds
mov
stos
ds
icebp
call
xchg
rcrb
imul
mov
jne
dec
sub
jmp
jl
pop
or
mov
mov
loop
inc
or
outsb
loopne
icebp
sbb
jns
inc
popa
fidivl
fistpl
and
fmull
xor
in
iret
sbb
mov
lahf
loopne
andl
scas
cmp
sti
loopne
mov
and
sbb
pushw
std
and
jg
mov
hlt
add
fsubrl
cmp
xor
movsl
stos
lret
cmpl
xlat
jns
mov
jne
cmp
in
into
mov
inc
aas
test
inc
inc
pushf
mov
dec
or
jmp
stos
jmp
shrl
mov
mov
jmp
xchg
xchg
mov
arpl
push
cmpsb
mov
mov
inc
pop
insb
cmp
rcll
je
call
test
imul
jge
push
sbb
je
cli
orb
mov
negb
and
or
icebp
mov
push
mov
daa
pop
mov
hlt
inc
mov
mov
mov
inc
push
sbb
inc
dec
inc
xchg
pop
inc
cmp
lea
add
inc
lods
sub
adc
fwait
sbbb
filds
icebp
in
addr16
mov
bound
adc
icebp
cmp
shrb
push
test
lods
adc
lcall
cmp
sbb
pop
mov
cli
pop
adc
test
js
mov
dec
lret
cwtl
sarb
add
pop
add
xchg
popf
fidivs
pop
ja
pop
cltd
filds
cmpb
jg
pusha
jne
push
mov
pop
fwait
outsl
or
adc
fimuls
mov
add
jecxz
das
loop
pushf
das
push
mov
sti
inc
jne
push
and
adc
fdiv
mov
insl
sbb
and
pop
mov
and
jnp
icebp
nop
xlat
push
jne
add
pop
jge
xor
fwait
insb
cmp
jae
pop
pop
cmp
cmp
ss
sbb
pusha
adc
cltd
push
push
shrb
mov
loop
cmp
popf
outsb
pop
aam
in
sbb
push
push
xchg
sti
or
int
pop
or
clc
mov
cltd
out
mov
or
aaa
ljmp
mov
es
mov
idivb
mov
fldt
pop
xlat
pop
shll
insb
dec
ficoms
mov
cmp
pop
in
xchg
or
andl
das
add
dec
or
outsb
sahf
test
or
ja
push
ja
push
xor
sub
or
mov
fiaddl
xlat
jge
cmp
mov
pop
shr
into
mov
xchg
loop
jp
add
aad
aaa
clc
xor
or
pop
xchg
dec
mov
popf
imul
dec
hlt
mov
stos
push
push
insl
jae
mov
out
call
mov
insb
or
push
jl
test
mov
lcall
call
cli
sub
mov
je
adc
push
inc
sub
adc
mov
insl
jb
mov
jg
pavgw
pushf
ja
xchg
xlat
mov
mov
popa
imul
dec
out
movsl
pop
stos
xchg
ror
fs
out
int
insb
mov
dec
insb
cmp
jecxz
cmp
mov
jb
dec
xchg
add
push
adc
fadds
shl
sbb
imul
out
ja
mov
add
and
imul
jo
shl
cmpl
jmp
stos
mov
cmp
pop
insb
pop
cmp
sub
stos
or
loope
cltd
and
lahf
xchg
mov
adc
aam
test
push
push
sbb
dec
rclb
cmc
std
push
cli
inc
jle
stc
jmp
sti
jmp
inc
mov
sub
push
push
jno
faddl
push
lret
sbb
xor
sti
push
xor
pop
rcl
sbb
add
adc
add
jmp
test
jmp
sbbl
ljmp
jl
add
incb
jo
into
sub
aad
icebp
lock
mov
mov
dec
shrl
shl
loop
inc
push
sbb
pop
jne
out
mov
and
sbb
cmp
push
out
mov
das
pop
inc
xchg
mov
push
sbb
movsl
inc
in
ljmp
or
mov
inc
or
pop
mov
jge
push
xlat
mov
add
lret
xor
dec
icebp
mov
lret
sbb
loop
mov
movsl
popf
or
push
push
cmpl
cmpsl
push
dec
cmpb
lret
outsb
mov
sbb
lea
lds
out
pushf
pop
dec
mov
out
jns
jne
std
mov
jmp
and
in
mov
dec
fiaddl
adc
mov
adc
jecxz
inc
fnsave
js
sti
lods
push
pop
xor
xchg
movsb
loopne
mov
fmuls
or
cmpsl
js
sbbb
out
or
inc
jnp
loop
dec
sbb
ljmp
sub
push
push
cmp
test
ss
aad
push
jb
sbb
test
pop
dec
jge
loop
jbe
push
mov
add
ret
jle
xlat
shlb
das
jo
dec
sbb
pop
int
paddsb
push
cmpsl
sub
cmp
in
sbb
mov
dec
lahf
or
xchg
xor
fmuls
mov
pop
adc
mov
pop
jne
xchg
sbbb
fcomps
ds
test
call
mov
mov
push
aad
loope
stc
scas
movsl
adc
dec
outsl
mov
outsb
out
xorb
dec
lock
rorb
mov
in
mov
and
hlt
rcrl
pop
ret
sub
sbb
lds
add
mov
js
adc
inc
dec
in
add
push
adc
imul
lods
jne
jno
mov
adc
add
es
loop
xor
clc
fcomi
add
mov
stos
cmp
ds
push
leave
ds
mov
pop
popf
loope
push
loope
cwtl
lea
mov
lods
push
lock
rcrl
out
mov
call
cmp
jp
mov
aad
add
push
loop
dec
dec
cmpsl
iret
sbb
add
outsb
xchg
adc
add
cmp
jl
out
dec
mov
pop
rcl
inc
jb
or
adc
add
les
cli
mov
dec
ret
jmp
add
adc
inc
cs
cwtl
or
mov
mov
sub
lahf
ror
hlt
xor
cmp
add
adc
mov
rclb
adc
cmc
mov
dec
mov
out
xor
pop
xchg
in
ds
out
xor
mov
push
insl
cmp
mov
imul
rcrb
stos
aam
ret
ret
adc
jl,pt
fsubrl
xchg
stc
sbb
inc
inc
out
xchg
mov
mov
jle
dec
popf
inc
cmpsl
in
or
adcb
leave
mov
jb
cmpsb
inc
pop
repnz
orl
je
pop
subb
ja
inc
cmp
scas
mov
adc
mov
jo
push
sbb
fwait
shrb
popf
sub
leave
or
test
mov
jl
dec
in
scas
out
rcrl
shlb
test
call
loop
adc
jb
push
jae
mov
mov
out
and
or
dec
iret
aas
sarl
fimuls
cmpb
mov
push
push
adc
and
jo
pop
jne
dec
xor
aas
mov
and
cmp
shr
cmpxchg
sub
std
push
rorl
in
out
fstpl
mull
push
or
cmpsl
lods
mov
sbb
adc
mov
mov
aad
mov
jb
int
das
xchg
in
inc
rcrb
mov
fnstcw
fdivrl
pop
jmp
movd
gs
out
movsl
test
stc
jg
pop
mov
fcmovnu
scas
leave
scas
add
and
inc
adc
or
cmpsl
push
push
xchg
fsts
pop
shrl
inc
inc
jne
jmp
stos
sbb
jmp
mov
call
notl
jle
clc
test
push
pop
cmp
test
clc
adc
sarl
jg
loope
cmpsl
xchg
cs
dec
cmpsb
outsl
cs
xlat
add
dec
push
mov
mov
fxch
inc
int
cltd
js
addl
mov
xor
subl
sbb
enter
loopne
mov
lods
pop
pop
and
imul
jp
in
xchg
aaa
xlat
das
mov
xchg
cmp
push
cltd
movsb
jo
cmp
lret
mov
mov
mov
movsl
cmpsb
mov
inc
iret
xchg
insl
out
jmp
or
cmp
testb
hlt
mov
mov
sbb
insl
loopne
xchg
xchg
sub
jmp
loop
pop
sub
mov
insl
add
push
mov
lahf
add
sbb
mov
dec
sahf
mov
mov
aad
add
in
pop
jp
int3
mov
movsb
ret
ret
push
dec
daa
mov
fcoms
lock
mov
dec
out
loopne
mov
mov
lods
enter
inc
mov
imul
shl
inc
pop
addr16
negl
daa
mov
cmp
add
out
inc
mov
jge
out
sub
and
sbb
insl
pop
je
xorl
clc
jnp
and
incl
in
test
fs
jb
pop
loope
mov
scas
fildl
jns
fnstcw
push
cmp
shl
mov
loop
sbbb
cmpb
xchg
lods
add
add
out
fsubrs
addl
out
stos
das
mov
lret
repz
mov
jl
or
sub
add
mov
pop
addr16
imulb
push
fisubs
dec
pop
sub
pop
jl
mov
cltd
mov
mov
jbe
insb
push
lahf
mov
neg
hlt
outsb
cli
call
sbb
in
or
jnp
call
mov
imul
mov
mov
or
or
fcoml
cmpsl
scas
mov
mov
jbe
or
jae
gs
ss
fwait
lret
clc
add
addb
lods
daa
push
fdivrs
rclb
pop
test
mov
scas
and
fisttpll
leave
popa
mov
dec
addr16
mov
hlt
pop
sub
ret
inc
add
pushf
outsb
push
pushf
mov
mov
fsubs
mov
fsub
adc
mov
and
mov
or
jbe
fistl
jb
das
mov
mov
mov
pop
jge
jb
add
lods
sub
mov
fsubrp
sbb
xor
xorb
ret
fiaddl
cltd
adc
lcall
rorb
mov
loope
mov
mov
lock
ficompl
cmp
scas
clc
xorb
test
pusha
lret
gs
fbstp
rcrb
dec
inc
mov
adc
insl
or
add
add
aas
push
dec
mov
arpl
lcall
sbbb
add
icebp
sbb
mov
mov
testl
xchg
dec
dec
inc
leave
pop
cmc
icebp
jge
aaa
fs
push
cmp
ret
sbb
outsl
xchg
loope
es
cli
mov
sahf
ja
dec
mov
jnp
adc
pushf
add
aas
or
add
sbb
sbb
sub
cli
mov
cmpsb
xchg
xor
mov
mov
sbb
push
mov
mov
subl
dec
into
add
iretw
inc
jb
mov
lods
jl
mov
jne
inc
pop
shufps
jl
cli
dec
popl
in
mov
out
pop
or
movsl
jnp
gs
inc
or
cmp
rcrl
inc
adc
lods
push
pop
mov
sub
inc
imul
xor
or
rorl
std
sti
test
iret
outsb
cld
mov
ss
inc
mov
sub
fisubrs
inc
xchg
or
mov
decb
pop
fisubl
mov
fst
pop
test
and
int
cmp
push
ja
or
in
pop
pop
jle
cmp
shll
rcll
pop
add
push
xchg
jle
inc
pop
fsubrl
push
fwait
mov
pop
cmp
enter
cmp
mov
andl
fs
xchg
cld
ror
jne
mov
negw
test
or
xchg
fld
xchg
fcoml
std
mov
icebp
mov
add
loop
cwtl
aaa
lahf
xor
outsb
cmp
cmpsb
jp
lret
cmc
pop
push
mov
repnz
mov
xchg
push
jbe
rclb
paddsb
stos
data16
ja
mov
push
dec
sub
repz
icebp
outsb
xchg
scas
mov
subl
movsb
ljmp
mov
jno
out
or
leave
sub
lods
repnz
sbb
sub
jns
hlt
push
add
arpl
fnstcw
pop
pop
dec
cmc
xchg
sbb
hlt
and
dec
int
int3
leave
jmp
mov
aad
mov
insl
ret
fstl
jmp
and
or
stos
imul
popa
lcall
test
popa
subl
lret
inc
dec
push
pop
aad
cmp
adc
xchg
jmp
and
repz
cltd
push
jle
lds
cmp
adc
mov
repnz
xor
popa
mov
orl
mov
mov
jp
int3
sub
jnp
out
cmpsl
in
add
pop
push
dec
repz
xchg
fdivr
mov
mov
test
ljmp
shlb
and
test
stc
mov
mov
sbb
lahf
inc
or
pop
int3
mul
das
and
pop
icebp
aam
inc
xchg
addr16
jecxz
loop
xor
addr16
hlt
out
pop
or
scas
xchg
lcall
and
cmp
dec
and
inc
shlb
cmp
pusha
inc
xchg
push
mov
jne
insb
inc
add
inc
push
call
cmp
pop
je
jge
icebp
icebp
pop
out
xor
popa
lock
aas
mov
jecxz
test
scas
xchg
mov
test
loop
movsb
pop
xor
sub
xor
dec
mov
inc
in
inc
mov
push
hlt
sub
xchg
sbb
inc
test
in
and
inc
call
ret
pusha
in
mov
imul
jl
or
or
int3
cmc
lret
mov
lea
pop
jl
inc
xchg
aas
jne
push
rcl
not
ja
je
or
test
dec
pop
jne
add
je
xlat
jle
cmp
insl
mov
ljmp
push
pop
out
out
ret
divb
inc
sub
mov
cmpsl
cmp
jnp
cmp
rcrb
xchg
mov
int3
cwtl
sub
pop
cld
sahf
cmp
cmp
dec
je
outsb
scas
adc
addr16
mov
mov
das
push
mov
and
inc
fistl
adc
pop
add
jne
jo
sub
add
fistpl
orb
add
push
sbb
das
loopne
sub
xor
mov
in
clc
add
jne
inc
sub
pushf
test
xor
outsb
or
mov
ss
es
dec
or
sbb
xchg
or
add
or
mov
ret
cld
rclb
push
insb
fdivs
lahf
gs
pop
sbb
enter
imul
gs
or
js
pop
or
jo
daa
inc
and
and
mov
fcoms
push
lahf
push
jb
lret
add
out
imul
mov
loopne
adc
sbb
mov
ja
jecxz
cli
cli
adc
test
mov
les
rcrb
xchg
fmuls
fcompl
roll
popa
ret
aaa
lcall
xchg
in
inc
push
dec
adc
mov
mov
sub
add
sti
inc
ret
test
test
ficoml
cltd
in
pop
or
mov
sub
cmp
fidivl
test
adc
jecxz
mov
cmp
push
push
xlat
cmpsb
add
incl
push
fcoml
scas
popf
cmp
pop
sbb
stc
mov
jmp
xor
xor
fs
daa
aam
cli
mov
pop
adc
jge
mov
mov
in
sbb
cmp
mov
std
fisttpl
push
dec
je
xchg
mov
push
mov
arpl
push
cmp
or
test
pop
out
ljmp
aas
add
cltd
and
ror
roll
add
mov
push
mov
mov
and
mov
pusha
and
mov
dec
lea
dec
sub
push
popf
orb
imul
push
insl
pop
mov
repz
ficompl
and
imul
lahf
in
add
fadds
jne
cmp
leave
cli
sbb
mov
aas
adc
lds
mov
shrb
inc
mov
es
out
aad
add
aas
ret
and
add
jmp
outsb
stos
inc
and
lea
bound
sbb
inc
loope
sbb
or
mov
jo
addr16
ds
fwait
icebp
mov
cmovb
negl
fwait
pusha
test
notb
pop
push
inc
push
mov
cmpsb
cli
inc
aad
mov
out
lds
sbb
fwait
xchg
inc
xor
clc
xchg
icebp
stos
mov
scas
mov
ret
jecxz
dec
aaa
mov
sub
movsl
push
mov
ret
mov
sbb
mov
rcr
xor
sbb
xlat
push
je
xor
mov
mov
std
test
xor
dec
scas
ss
jecxz
jg
leave
inc
dec
xor
aaa
inc
je
pop
jp
cmpsb
xchg
and
mov
inc
sbb
ds
xchg
mov
add
adcl
out
outsb
sbb
add
dec
cmpsl
push
or
jnp
push
lock
pushf
repz
cmpl
test
push
mov
xchg
or
lret
xor
sbb
inc
js
hlt
rorl
sbb
jo
mov
and
clc
rorl
mov
rcl
cmp
fimuls
pushf
jg
loopne
jge
push
dec
shl
push
jge
lds
nop
mov
inc
jbe
or
mov
fdivrl
cmp
lds
xchg
repnz
sub
ficoms
mov
std
out
push
scas
imul
xchg
out
or
daa
sub
xorl
push
xchg
jnp
repz
sbb
shr
xchg
push
mov
dec
mov
call
cmc
fwait
mov
cmp
fcmovu
inc
xchg
sahf
cli
jge
repnz
scas
pusha
inc
lds
iret
sbb
sub
pop
xlat
adc
xlat
or
mov
sbb
mov
lock
push
sub
lcall
jge
pop
cli
and
adc
stos
push
xchg
xlat
add
lods
pop
pusha
or
inc
rcll
dec
cs
out
mov
pop
fidivrl
int3
lods
sbb
mov
std
pop
ljmp
jo
sbb
sahf
int
je
push
rorl
sbb
fsubp
cmp
jb
out
inc
mov
data16
shrl
cmp
aad
punpckhwd
mov
mov
daa
sub
jge
xchg
sbb
sbb
out
mov
mov
jae
popf
addb
mov
sbb
fisubs
les
mov
dec
xchg
icebp
or
ret
sub
jle
mov
nop
jmp
adc
test
dec
cli
lcall
in
nop
nop
mov
arpl
je
sub
push
sbb
mov
jp
add
js
push
loopne
pop
and
cmp
mov
or
cmc
rorb
arpl
addr16
aaa
xor
ss
es
loope
inc
insl
mov
fucom
cmp
pop
mov
into
aaa
jmp
in
bound
sbbb
push
add
pop
sbb
xchg
and
cmp
pushf
mov
clc
mov
leave
loop
inc
fs
nop
sub
add
sbb
aas
or
jo
and
cmp
mov
adc
clc
pop
xchg
adc
les
into
aas
pop
or
or
or
addb
lcall
mov
hlt
jo
cmc
fs
sub
pop
in
pusha
inc
sbbb
jb
push
cmp
pop
dec
add
jb
cmp
push
xor
fnstcw
cmp
jl
mov
push
in
push
sbb
ret
fcmovnb
dec
in
rorl
mov
test
loopne
xlat
dec
fwait
ret
std
push
nop
push
loop
dec
not
mov
ficoml
cmp
fcoml
jae
je
bound
lahf
jo
cli
shl
mov
sub
ljmp
andl
icebp
cmc
cmp
test
stos
add
jl
icebp
andb
xor
cmc
fstpt
xchg
push
adc
push
mov
mov
dec
cmc
stc
nop
aad
stos
je
adcl
add
and
lds
inc
dec
sbb
mov
mov
in
test
xchg
rorl
push
mov
lds
pop
and
sub
pusha
fnsave
cmp
jae
lret
mov
out
lahf
roll
pop
js
dec
push
xor
mov
pusha
in
push
jge
add
pusha
stos
test
mov
aad
push
cmp
inc
fldcw
or
jmp
aam
inc
add
mov
add
sahf
push
push
call
in
test
cmp
inc
inc
shl
jne
mov
mov
adc
cmpsb
push
mov
cmpsl
mov
fstl
int
ficoms
push
jg
mov
add
xor
out
adc
inc
lds
xchg
push
jo
mov
pop
imul
xchg
push
loope
outsb
jp
int3
lods
or
push
and
or
and
fmull
cmp
lock
ljmp
sahf
jge
xchg
adc
movsb
test
dec
insl
ljmp
mov
aaa
xor
jp
outsl
mov
stos
mov
gs
lods
dec
mov
inc
cli
xor
xlat
ljmp
mov
sahf
movsl
jbe
outsb
popl
scas
repz
jae
jl
cmp
jl
in
sub
sbb
pop
mov
sahf
mov
or
ljmp
sbb
shrl
or
mov
sub
push
inc
in
lret
and
test
or
or
fwait
test
in
loopne
scas
cld
or
jge
dec
add
jo
mov
mov
fldt
std
popa
and
mov
jbe
cmc
lock
mov
leave
adc
sub
cmpsb
mov
mov
jle
sbb
nop
xor
shl
cmp
aas
xlat
js
movb
lahf
cmp
cmp
fwait
mov
aam
out
jp
outsl
push
or
cli
scas
inc
mov
cmp
sbb
ss
testl
shll
ret
out
and
ss
inc
je
mov
push
clc
dec
in
lahf
adc
ja
popf
jae
xor
mov
cmpsl
push
push
add
rcll
push
inc
mov
inc
divl
addr16
or
cmp
lahf
dec
adc
jp
pop
sbb
cmp
shrb
sbb
scas
inc
daa
cs
pushf
sbb
nop
bound
mov
xlat
adc
ds
lcall
cmp
faddp
out
loope
test
or
ja
cmp
lahf
loopne
push
jne
ret
mov
push
imull
add
push
iret
enter
cmpsl
js
das
jnp
add
or
in
in
mov
jmp
ror
mov
jg
add
inc
mov
cli
push
loopne
xchg
sub
imul
loopne
mov
dec
mov
ljmp
xor
aad
fstpl
jecxz
jle
xor
mov
cwtl
arpl
pop
rcl
nop
inc
scas
xchg
push
cmp
mov
addr16
paddb
mov
xchg
inc
mov
and
int
jo
lahf
ljmp
or
mov
push
inc
pop
xlat
fwait
jnp
mov
outsl
loope
push
mov
mov
xchg
jge
fisttpll
mov
bound
jns
movsb
call
ja
jmp
lock
adc
jne
scas
jmp
outsl
mov
andl
aam
jns
les
push
inc
fistpl
and
mov
xchg
pop
ret
xchg
je
lock
lret
xchg
sbb
mov
adc
idivb
pusha
into
imul
scas
sbb
xchg
jbe
mov
arpl
mov
sub
push
jp
push
dec
jae
jo
cmp
adc
cmp
test
sbb
mov
insl
lret
lea
cmp
jo
int3
test
mov
xor
and
les
popa
rclb
into
mov
dec
jnp
or
xchg
pop
stos
mov
leave
scas
inc
cli
lea
sahf
test
xor
jno
call
fcomps
sub
mov
adc
insb
xchg
xchg
sub
aas
xor
icebp
jnp
mov
sub
pop
mov
and
test
mov
add
out
clc
mov
mov
pushf
pusha
rcll
mov
push
xlat
lock
sub
adc
rcrb
ret
lock
pop
lret
jg
cmp
bnd
cmc
cmp
cmp
xlat
int
dec
mov
clc
inc
cwtl
lea
enter
int
lods
call
jg
mov
rcll
in
out
mov
lock
lods
sbb
push
mov
or
dec
js
ds
add
push
inc
rclb
mov
adc
mov
ja
xor
clc
sub
in
dec
cmp
mov
and
cpuid
icebp
jns
pop
and
test
fidivl
mov
add
jae
mov
rclb
cli
sub
xchg
cmp
imulb
scas
pop
jne
inc
mov
push
adc
test
movsl
pop
or
iret
out
ds
push
mov
xchg
in
mov
fldl
jl
jno
sub
lock
orl
jle
rol
imul
xchg
aas
jle
pop
fidivs
imul
in
popa
testl
rcrb
jecxz
loop
jbe
mov
aad
jnp
ds
int
int3
addb
outsb
inc
stc
loop
out
push
mov
dec
ljmp
jmp
das
mov
pop
sahf
mov
push
loopne
mov
lods
mov
mov
inc
inc
lods
and
inc
inc
sbb
jge
mov
les
shll
idivb
lcall
jno
out
sbb
popa
fcomi
in
xor
ja
les
or
mov
icebp
mov
fsubr
cwtl
sub
cmp
adc
mov
cmp
lock
out
mov
lea
das
imul
mov
adc
sbb
push
ret
in
mov
mov
push
and
enter
jno
daa
cmp
mov
adc
filds
enter
dec
sbb
push
enter
stc
popf
mov
lds
xchg
sub
fcom
ss
ds
clc
lods
mov
stc
pop
outsb
fstpt
mov
sbb
push
push
out
adc
sub
or
mov
addr16
stos
xlat
mov
out
sub
pop
leave
in
add
pop
nopl
and
jecxz
dec
negb
pop
push
adcl
and
inc
mov
lock
xchg
sti
aas
imulb
cmp
jb
adc
inc
dec
shll
push
fs
test
inc
inc
push
sbb
sub
jbe
loop
pop
fs
sub
push
stc
jg
loope
dec
sbb
mov
lea
rorl
pop
cld
push
adc
data16
pop
mov
pop
aam
xchg
mov
sbbl
cmp
loope
fwait
hlt
and
or
xchg
outsb
lret
adc
mov
xorb
or
lret
pop
pop
cmp
pop
pushf
pushf
stos
cltd
test
cmp
mov
xchg
sbb
cmpsb
xchg
jno
shl
sub
jmp
sbb
add
lods
xchg
mov
pusha
lds
in
mov
mov
sbb
dec
inc
inc
insl
mov
xor
mov
icebp
sbb
xor
jl
lods
jnp
stos
jnp
jp
push
enter
cs
daa
into
fmuls
mov
pop
int3
mov
jne
hlt
sti
add
push
cmpb
sar
jbe
sub
loop
sbb
adc
adc
insb
pop
xor
je
dec
sahf
inc
shlb
iret
fwait
mov
in
bnd
jg
ljmp
jnp
ja
sbb
aas
mov
sar
inc
das
test
fldt
push
aaa
push
scas
or
pop
push
in
push
hlt
xchg
test
outsl
mov
pop
cmp
mov
mov
aam
frstor
imul
rcrb
cld
les
lods
aad
mov
sbb
daa
sub
cwtl
cmp
dec
cmp
push
test
xlat
ja
jne
std
addl
adc
cmp
sbb
jecxz
jo
inc
cmp
ss
or
ret
gs
popl
fsubrs
mov
sysret
push
xchg
mov
jge
fucom
xchg
aad
pusha
stc
mov
jne
xchg
fstps
pop
xor
dec
push
mov
iret
xchg
lcall
lahf
add
sub
mov
cmpsl
imul
add
jne
or
les
sub
jp
lret
loope
jns
sbb
roll
repz
out
dec
pop
or
push
aam
cmpsb
sbb
dec
daa
xlat
inc
add
and
dec
sbb
jne
adc
insl
mov
test
lock
xor
pop
sbb
test
dec
cltd
lcall
test
sbb
lret
adc
adc
mov
pusha
xchg
xor
mov
xchg
pop
xchg
fcmovnu
adc
jbe
or
lods
test
jle
mov
out
test
iret
sbb
jnp
movsl
push
mov
jge
call
std
mov
dec
adc
lret
lahf
sub
es
lea
sbb
xor
test
ds
aaa
push
sbb
adc
lods
pop
cmp
movsb
inc
or
mov
test
jno
inc
or
mov
scas
and
and
or
cmp
loopne,pn
dec
mov
mov
jbe
mov
sub
das
cli
fcmove
adc
cmp
inc
xchg
inc
xchg
imul
dec
movsl
sahf
lods
adc
mov
scas
mov
hlt
cltd
js
stos
sub
mov
pusha
cltd
inc
aaa
pop
pop
pop
xchg
cs
dec
xchg
push
mov
std
into
fucomp
push
fcmovnb
xchg
das
in
pop
pusha
das
sub
and
jbe
data16
sbb
dec
inc
addb
arpl
push
add
out
outsb
mov
outsl
pop
mov
sbb
dec
mov
sbb
dec
jne
inc
negl
dec
mov
subl
add
jmp
jmp
xor
int
sub
test
incl
test
pop
adc
fidivrs
shll
add
cmpsl
jb
ss
insb
dec
pushf
xor
jnp
jl
xor
inc
push
mov
push
into
pop
cmp
cwtl
aad
mov
dec
int
repnz
or
jo
jno
repz
sti
clc
lock
dec
inc
xor
in
mov
pop
daa
or
out
mov
rorb
out
ja
sbb
cmp
and
fcom
loope
testb
call
pop
pusha
rcrl
jle
adc
inc
push
and
and
outsb
jl
sbb
lret
ret
jle
call
popa
arpl
movsl
popf
xor
and
test
pop
ds
cmpsl
mov
imul
popf
fstpt
xchg
dec
dec
ja
ss
lret
sti
mov
jmp
scas
stos
mov
cmp
xor
cs
int3
orl
fadd
loopne
jae
cmp
repz
push
stc
test
test
out
call
fcmovbe
lock
mov
mov
jne
xorb
out
cmp
testl
xlat
ds
daa
stos
jmp
and
push
aas
sbb
mov
fsubrs
roll
push
mov
mov
fnsave
arpl
iret
or
push
in
mov
xor
cmp
cmpsb
pop
sbb
popf
das
mov
fnsave
sub
ljmp
fiadds
mov
sahf
in
or
mull
das
lock
lahf
loopne
test
mov
jle
push
nop
dec
jb
test
aaa
jne
clc
pop
int
in
loope
insl
xchg
std
jbe
push
xor
add
and
cmc
lret
mov
ss
adc
in
js
loopne
shl
cmp
lea
sbb
jno
psubq
push
jp
mov
jecxz
outsb
inc
mov
or
jb
jg
xchg
fcompl
add
inc
fstpt
dec
add
xchg
lock
mov
inc
pop
push
test
push
push
stos
ja
dec
xchg
and
pop
mov
inc
jge
jecxz
push
push
fnsave
dec
sub
out
xchg
jl
sub
or
mov
imul
sti
clc
mov
ud1
rcrl
scas
pop
mov
push
or
xor
push
pop
add
mov
fisubl
add
mov
clc
mov
inc
cmp
pop
adc
mov
sbb
ja
mov
xor
pop
aam
sti
jno
jmp
fs
js
push
pop
fcmovb
icebp
ss
sbb
gs
pop
fisttpll
mov
mov
push
push
push
iret
in
mov
lret
in
cmpb
push
pop
adc
mov
jo
cmp
sbb
sub
adc
pop
aam
fcompl
cmc
fwait
push
sbb
push
inc
or
pop
jle
ficomps
rorb
pop
xor
inc
fisubs
jl
mov
fldenv
xor
and
call
pop
or
ret
xor
xchg
pop
xchg
or
add
jp
aaa
pushf
mov
mov
out
pop
das
cmpsb
push
cmp
or
ja
dec
test
popf
mov
aaa
push
xchg
xchg
sti
mov
add
pop
jbe
push
mov
pop
and
sbb
jge
scas
mov
pop
sub
jecxz
cs
pusha
push
iret
cli
sahf
sbb
je
sub
jmp
jne
pop
arpl
mov
jns
xchg
xchg
mov
jg
insl
xchg
jmp
xorl
loope
dec
sub
shll
ret
xchg
les
mov
mov
mov
cmpsb
aam
inc
aas
mov
adc
mov
ljmp
adc
lods
fwait
imul
das
into
or
clc
inc
test
movq
fstpl
jb
fsubl
mov
sub
mov
outsb
rclb
mov
or
fdivp
arpl
hlt
andb
stos
inc
xlat
jbe
push
fists
or
sub
mov
in
push
in
and
fucomi
push
mov
loopne
popa
mov
add
jmp
sti
fmull
shlb
ds
pop
mov
int3
mov
mov
out
and
lods
inc
shlb
je
adc
push
mov
mov
push
cmp
fistpll
je
mov
dec
fs
test
outsb
xor
adc
jb
fdivr
inc
mov
call
or
pop
ret
rcrb
divl
dec
scas
cmp
outsb
and
outsl
ja
mov
std
clc
rcll
lock
inc
mov
sub
or
mov
jno
inc
leave
adc
outsl
insl
loopne
dec
lds
ret
jmp
pop
mov
loop
inc
mov
ja
aad
in
inc
sub
cmp
mov
rol
bound
or
push
mov
fnsave
cmc
mov
lahf
pushf
lret
mov
lea
mov
mov
mov
cld
testb
insb
sbb
fs
mov
enter
rorl
fnstsw
stos
push
je
add
xchg
inc
fidivs
add
dec
pop
and
sbb
mov
clc
mov
pusha
jnp
mov
shrl
add
mov
fmull
xchg
or
daa
aas
mov
jae
aaa
push
jge
into
sbb
sti
mov
cmc
jge
rcrl
pop
pop
int
ret
fs
xor
mov
xor
jbe
pop
jo
mov
push
test
inc
xchg
sti
les
mov
out
sbb
loopne
xor
sti
fcomp
jae
and
sub
shrl
aad
mov
push
jno
outsb
push
mov
in
or
je
push
mov
jmp
test
das
sbb
imull
mov
cmp
push
push
cmpsb
cmp
es
lds
pop
ret
loope
fldt
sahf
dec
call
loopne
sbb
test
sbb
add
jmp
cmp
icebp
add
cmpsl
adc
jl
mov
es
fcomp
sbb
out
mov
push
xor
subl
adc
popa
jp
neg
arpl
pop
imul
mov
push
add
push
mov
rorb
aaa
aad
mov
in
xchg
or
lods
loope
inc
pop
jo
push
jmp
std
fdivrs
insl
xchg
stos
addb
cmp
fsubl
call
cmp
fucomi
imull
sbb
push
jae
add
add
adc
cltd
sbb
pop
idivb
push
emms
xchg
inc
out
aas
daa
pop
mov
int3
jno
rclb
jbe
loop
in
sub
pop
test
cmp
les
mov
push
loop
arpl
mov
cwtl
leave
fs
sti
clc
adc
xchg
mov
sub
fwait
arpl
les
ja
sbb
ds
aas
outsb
push
push
pop
dec
adc
push
jne
data16
and
jb
aas
dec
pop
roll
push
loope
mov
add
cmp
adc
xor
add
add
inc
push
push
cmpsl
adc
cmp
mov
loopne
loopne
popf
push
jmp
fstp
jb
pop
out
lahf
ja
adc
sbb
push
popf
sti
sub
sub
cmc
shl
imul
roll
pusha
jl
js
push
inc
ret
jg
adc
incb
add
clc
loopne
arpl
xlat
aaa
popa
inc
xlat
jo
xor
cli
adc
or
pop
inc
inc
cmpsb
lods
out
cld
xor
daa
cmp
outsl
ds
in
roll
jbe
ss
mov
or
popa
adc
sbb
jmp
out
sbb
loopne
les
das
and
xor
push
adc
cmp
in
loop
xor
outsb
inc
cmp
lcall
sub
or
mov
sub
lahf
andb
jle
sub
data16
add
sbb
ss
sub
shrl
shll
je,pn
jmp
jae
sti
mov
or
test
shlb
push
shlb
or
push
mov
jne
movsb
test
jg
fwait
test
fisubs
fmull
xchg
push
mov
push
pop
push
mov
cmp
adc
outsl
in
jg
or
jmp
popa
clc
inc
push
js
das
imul
fdivrl
sahf
lods
decb
inc
xchg
jle
add
gs
popa
mov
inc
pop
lds
lds
out
hlt
test
inc
jecxz
call
xchg
js
ret
mov
je
push
pop
daa
push
jle
sahf
std
daa
lds
cmp
xorl
stos
mov
out
push
xor
lds
cmc
roll
ret
test
add
call
push
loope
or
scas
sti
rorl
je
loopne
sub
jne
sub
pop
fwait
test
push
mov
mov
js
stos
arpl
inc
testl
test
jo
loope
notl
aas
inc
cmc
mov
cmp
clc
rcl
jns
push
cmp
jb
jae
pop
push
mov
inc
iret
add
sbb
mov
and
adc
push
sbb
sbb
jo
and
in
push
fisubs
mov
subb
jp
mov
test
das
ret
imul
push
cmpb
repnz
xor
stos
test
sbb
enter
pop
sub
xchg
mov
push
push
jg
loopne
movsb
mov
push
outsb
ja
pop
stos
call
popf
and
es
pop
fdiv
add
jge
stos
inc
lds
inc
inc
aas
sti
shll
lcall
jge
xor
mov
push
or
push
and
sbb
js
jnp
jns
cmp
xlat
xor
jmp
dec
add
call
les
test
mov
and
popa
xor
cmc
fcomps
mov
adc
jbe
add
mov
mov
je
je
mov
outsb
xor
js
dec
lock
outsb
rcll
das
insb
xchg
lret
cmp
jnp
add
dec
das
fs
ds
xchg
dec
sbb
int3
ds
sub
negb
cltd
jb
mov
ficomps
fiaddl
mov
sbb
sti
jl
aam
mov
xchg
cli
roll
fildl
ja
notb
cmpsl
hlt
sub
dec
lods
jge
movsl
add
dec
jg
push
jmp
into
outsb
mov
aaa
ss
mov
fsubrs
and
push
popf
scas
aam
jno
lcall
loope
sbb
pop
and
fcmovnu
into
scas
addr16
lcall
push
es
or
hlt
mov
pop
jns
lret
jl
daa
push
out
lcall
push
push
jecxz
jmp
pop
rclb
add
cmpsb
jge
aaa
fdivs
xor
inc
and
insl
mov
push
or
lret
pop
mov
jmp
notl
push
or
inc
mov
stos
dec
push
xchg
jnp
sub
push
fstl
sub
push
inc
xchg
inc
cmc
divb
jp
lea
and
scas
inc
and
shlb
into
fwait
jmp
mov
ret
or
dec
mov
jmp
sbb
jecxz
cs
rorl
push
icebp
pop
inc
jbe
lods
or
xorb
mov
lock
clc
dec
mov
imul
mov
mov
ret
jge
mov
out
shll
and
xchg
lock
xlat
call
cwtl
mov
cltd
push
push
cmp
cmpb
ror
outsl
shl
loop
shll
in
mov
rcrl
jbe
cli
mov
ffreep
mov
andl
mov
sbb
sub
sbb
inc
cmpsb
push
xor
testl
sub
xor
out
xor
push
dec
cmp
mov
scas
pop
cld
test
mov
stc
xor
mov
pop
dec
pop
fidivrs
mov
lret
mov
cwtl
rol
or
into
push
cmpsb
mov
call
xchg
push
mov
fidivrl
icebp
adc
or
inc
addl
sbb
repnz
mov
mov
push
adc
xchg
jno,pn
clc
pop
add
imul
mov
jg
mov
loope
fmulp
fists
in
mov
mov
stos
call
inc
inc
dec
lods
push
scas
out
cmpb
test
fwait
js
sub
sahf
ss
pop
cmpsb
aaa
jno
mov
insb
sbb
orb
test
push
cld
cli
rcr
sbb
and
shlb
inc
mov
ljmp
jne
fcmovbe
add
push
mov
xor
xlat
jge
jns
push
pop
sbb
pop
push
je
xchg
jge
ror
iret
inc
cmp
xchg
bound
cmp
ja
pop
and
cmpsb
adc
sbb
jo
xchg
pop
push
pop
or
stc
jo
leave
xchg
jne
inc
shlb
in
pop
sub
sub
test
lret
ss
jb
cmp
xchg
cltd
je
cld
ret
fldl
inc
push
sbb
and
je
xor
or
shl
mov
in
and
sahf
repz
push
notl
add
test
rcrb
dec
jae
pop
ss
pop
add
xchg
push
xor
mov
in
cmp
mov
push
jno
xchg
pop
loop
push
inc
jg
mov
push
jg
push
jno
cmp
jb
pop
pop
pushf
std
fs
insl
dec
jbe
mov
in
jecxz
daa
mov
push
pop
adc
outsb
pushf
pushf
sub
clc
mov
jb
jmp
sbb
mov
mov
mov
loopne
jnp
xchg
push
mov
add
add
in
mov
sub
outsb
dec
inc
cltd
sbb
and
xor
call
ss
cmpsb
pop
or
insl
in
andl
in
push
insb
aas
les
adc
adcl
arpl
cmpsl
mov
sbb
or
jns
and
cli
fstpl
repnz
mov
stos
psrlw
xchg
xor
mov
out
push
ret
pop
sbb
pop
movsb
sti
fiaddl
sahf
mov
mov
pop
inc
mov
mov
sub
lea
sbb
loopne
inc
loop
outsl
pop
pop
xchg
scas
sarb
sahf
cmp
cmc
imul
inc
insl
shl
scas
or
lock
and
inc
ret
rolb
scas
cmp
xchg
mov
inc
mov
cmp
test
push
dec
mov
inc
fisttpl
pop
or
cmp
dec
movl
jecxz
jmp
sti
add
or
xchg
fnclex
mov
insb
sub
sbb
cmp
imul
push
cli
lds
xor
fistl
pop
andl
push
push
daa
fcom
nop
ds
or
push
sub
fstpl
xchg
scas
push
and
sbb
xchg
mov
imul
mov
cmp
inc
xchg
add
les
in
shl
push
push
cmp
add
loop
adc
lret
add
leave
movsl
pop
xchg
xchg
stos
cmpsl
mov
adc
icebp
inc
std
rorb
xor
enter
jb
jl
fimull
ficoms
jle
lock
sub
inc
push
cmp
pushf
in
and
std
sti
jae
push
sti
call
icebp
push
popa
jle
sbb
sti
push
fsubr
out
adc
loop
or
pop
bound
or
dec
push
jge
in
mov
mov
test
add
adc
push
test
mov
lods
or
aaa
adc
add
ljmp
add
in
sahf
test
aas
inc
les
pop
mov
shr
gs
addr16
cmpsl
out
fldt
push
dec
sub
and
test
xchg
data16
mov
cmp
scas
lods
scas
es
testb
lret
mov
ljmp
cmc
xchg
mov
add
in
iret
filds
sub
arpl
and
cs
in
xchg
jmp
out
insl
loop
ficompl
jb
mov
mov
mov
inc
popa
mov
das
xchg
les
xlat
fldt
xchg
ret
js
ret
sub
test
or
in
inc
push
inc
lret
loopne
pop
mov
push
mov
or
sti
inc
mov
fstpt
cs
mov
mov
mov
sub
jo
test
into
ret
punpckldq
outsb
out
addl
test
rsm
cmp
pop
repz
adc
fidivrs
mov
mov
sbb
fs
fstpt
cmp
xor
ja
scas
mov
mov
ret
into
repnz
out
ret
insb
inc
popa
mov
call
pop
push
jg
aad
fidivs
push
sub
je
xorb
shlb
lahf
jbe
mov
ljmp
sub
lahf
data16
inc
shrb
cmc
icebp
mov
test
jp
mov
nop
pop
xor
add
inc
jno
and
data16
xchg
shll
push
xlat
xor
xlat
cmp
ret
in
mov
mov
aaa
and
dec
loope
dec
add
fildll
jl
cld
ret
pop
pop
gs
incb
mov
int
cmpl
enter
inc
cmp
ficoml
jbe
pop
and
mov
imul
sub
jae
fst
adc
shrl
dec
cmc
mov
push
push
fnsave
movzwl
push
ret
cmpsl
out
insl
pushf
pop
dec
xlat
add
sbb
movb
lahf
mov
out
jmp
xor
mov
into
cmp
sahf
push
xchg
push
fwait
int3
test
lret
jo
jo
dec
shll
loop
shrb
insl
pop
aas
repnz
aaa
imul
iret
fstpt
data16
jp
icebp
lock
shll
inc
sahf
inc
dec
sub
je
call
jle
lods
inc
add
add
xchg
xchg
mov
movsl
imul
mov
lods
ret
shl
inc
lds
add
ret
sbb
mov
repnz
mov
jp
ljmp
aaa
xor
pmulhw
mov
in
sbb
daa
arpl
mov
jno
mov
dec
mov
dec
subb
inc
in
push
push
insl
outsl
sbb
arpl
outsb
xchg
cmp
jecxz
out
add
stc
cli
mov
xlat
inc
in
pusha
int3
fdivrs
sbb
orl
js
cmp
pop
ret
lea
dec
popf
lock
jbe
cmpsb
outsb
shll
inc
or
ficompl
ret
sbb
jl
sub
pop
ljmp
pop
cwtl
aaa
mov
xor
cmpsb
cmp
mov
js
into
adc
ret
inc
addb
daa
push
xchg
and
loop
mov
mov
push
xchg
cmpsl
adc
xor
repz
sbb
mov
add
jge
mov
loop
cmp
fldenv
jae
mov
jle
mov
lods
inc
scas
das
ds
rcr
add
adc
push
or
sbb
adc
test
mov
aaa
ret
pop
or
in
jmp
sub
sub
jmp
shl
ss
mov
pop
mov
lea
in
pop
push
insl
and
into
sbb
stos
add
insl
aaa
aad
pop
faddl
add
fistl
mov
jge
cmp
aaa
sub
cmp
push
jg
cltd
mov
jne
out
inc
push
mov
scas
into
sbb
cmc
notb
insb
aam
popa
test
cmpb
ja
fwait
sub
popf
xlat
insl
testl
jge
shlb
into
jmp
mov
fsub
les
addb
jge
adc
sahf
or
inc
rcll
or
fwait
loopne,pn
cmp
push
fisttpll
ret
insl
jo
sub
enter
outsb
cld
sbb
loopne
fwait
scas
fcmovbe
push
cmp
cs
cmpsb
push
jne
lock
cmp
in
nop
sub
clc
fcoml
inc
std
mov
pop
ljmp
pushf
jnp
xchg
cmp
mov
insl
aaa
xchg
mov
push
stc
cld
jge
jne
jl
fadds
sub
mov
mov
fistpl
mov
test
jmp
int3
xchg
clc
sahf
pop
mov
or
mov
je
or
lock
scas
pop
aad
bound
out
test
ficoml
out
ds
stos
sub
cmc
les
fsubl
lret
imul
pop
mov
clc
loope
xchg
shll
ss
inc
and
fwait
in
daa
fwait
mov
andl
push
cmpsl
xchg
cmp
dec
test
mov
das
xchg
mov
insb
xchg
add
xorb
hlt
pusha
ja
push
rcll
in
dec
aaa
test
adc
call
sub
xchg
pop
jge
pop
clc
xor
pop
cmp
inc
test
add
pop
out
inc
push
clc
inc
lahf
or
cs
fildl
pop
aad
inc
scas
mov
jo
adc
testl
sub
add
push
jnp
jp
outsl
mov
data16
jecxz
sbb
pop
jae
mov
pop
dec
add
js
repnz
push
pop
incl
js
dec
mov
inc
test
adc
xor
pusha
dec
mov
or
adc
cmpl
inc
cli
fs
pop
scas
daa
lock
mov
mov
mov
mov
mov
xchg
int3
loop
mov
lahf
or
pop
cmpsb
add
mov
mov
mov
xchg
mov
xchg
push
popf
inc
inc
mov
and
cmp
popa
dec
cld
lea
dec
push
sub
js
hlt
clc
push
push
imul
and
aaa
push
fstp
mov
into
lcall
int
mov
imul
mov
ja
rcrl
xchg
lods
das
adc
fnstsw
fisttpll
roll
xor
mov
fidivrl
dec
push
pop
rcr
jle
mov
mov
sbb
arpl
cmp
push
inc
push
ds
sbb
xor
cmp
mov
sbb
pop
push
mov
mov
addl
lods
fs
jge
jl
push
mov
pop
rclb
cmpsb
mov
cmp
fs
je
push
ret
faddp
cmpsl
out
lahf
test
sbb
inc
repz
in
pop
testl
mov
add
mov
pop
push
push
aaa
adc
sti
jmp
insb
je
inc
sti
pop
jb
outsl
lods
sub
xchg
imul
push
sbb
lods
aam
loop
movsl
mov
ficoms
or
inc
dec
cwtl
loopne
ljmp
sbb
stos
jne
mov
inc
push
lds
pop
push
shll
ja
mov
or
mov
xchg
mov
stos
aaa
jmp
outsl
jg
jmp
clc
fwait
add
aaa
cmpb
rorl
insl
push
adc
dec
jp
movsb
test
lock
cmp
adc
shr
cmc
rcrb
xchg
xor
mov
sbb
decl
or
je
sahf
mov
imul
mov
and
mov
sbb
and
dec
mov
insl
fsubr
sub
and
adc
sub
jl
int3
lcall
in
inc
sbb
mov
ret
sbb
loop
shrb
outsl
cmp
in
loopne
jns
daa
sbb
cmpsl
jp
push
mov
mov
ss
sub
jne
stos
in
loope
cmp
jecxz
push
shlb
inc
push
je
pop
dec
adc
shlb
xchg
mov
fwait
orb
mov
sub
aas
imul
mov
dec
dec
add
mov
push
mov
pop
pop
insb
or
pop
ljmp
pop
xor
in
lock
push
testb
mov
stc
jecxz
pop
cmp
xor
sub
cwtl
arpl
adc
mov
cmp
loopne
pop
add
jp
jl,pt
enter
dec
ret
rolb
andb
shll
out
subl
fwait
sub
push
sub
sarb
pusha
arpl
mov
sbb
fistl
sub
sarb
sbb
adc
jno
mov
fsubr
xor
es
mov
fdivrl
or
xor
add
dec
sahf
adc
mov
mov
sahf
xchg
mov
add
inc
adc
fwait
push
cs
lods
cmp
popa
insl
xchg
xor
popf
fisubs
fistpl
ljmp
inc
aad
subb
lret
shl
rorb
ret
icebp
enter
lret
mov
sbb
fisubrl
sbb
sbb
lcall
mov
lock
lret
mov
jp
jo
adc
fadd
in
inc
insb
mov
pop
ljmp
sub
cli
outsb
mov
push
adc
xor
lock
or
pop
orl
rcr
push
lea
mov
lods
arpl
shlb
sbb
mov
cmovl
lea
xlat
mov
roll
dec
cmp
inc
cltd
pop
outsb
inc
dec
rcrl
je
test
inc
mov
mov
push
jbe
jne
mulb
ljmp
jl
and
int3
cmpsl
das
mov
mov
shl
ja
lock
pop
lret
imul
aas
jmp
mov
sub
jecxz
pushf
mov
or
xor
push
fildl
pop
out
sti
test
fcomip
cwtd
cmpb
cmp
xchg
arpl
mov
in
cmp
daa
test
fmull
pop
enter
cmpl
mov
dec
repz
adc
pop
lock
lock
sbb
inc
pop
pop
add
ret
in
hlt
push
xchg
lods
push
mov
incb
insl
pop
xor
xchg
mov
orl
jg
sbb
cmpsb
xchg
popa
jns
mov
jmp
mov
adc
js
lret
jb
mov
ret
fisttps
outsl
fists
push
cmp
mov
adc
fcmovnb
call
roll
test
pop
xor
jne
jmp
mov
sbb
pop
outsl
not
inc
in
pop
adc
fstps
mov
es
sbb
xor
jmp
out
push
ljmp
negb
jbe
loope
hlt
inc
mov
mov
sbb
dec
lret
ret
insb
mov
cmpsb
mov
int3
movl
mov
jecxz
testb
cwtl
movsbl
aam
mov
hlt
add
add
pop
enter
bnd
fwait
call
push
fsubrs
cmp
clc
cmp
mov
and
movsb
enter
pushf
sahf
push
clc
sbb
mov
je
pop
push
adc
test
hlt
lret
pop
jbe
push
cs
lods
std
jg
call
pop
sbb
xchg
scas
shrb
or
mov
shlb
test
adc
jbe
test
cmp
sub
jl
xchg
bound
lods
sub
jb
dec
inc
push
ljmp
xlat
shlb
mov
sub
jbe
xor
jmp
out
and
mov
test
jns
jae
ss
mov
pusha
xchg
mov
ds
dec
sbb
daa
push
js
sbb
jns
lret
jns
mov
xchg
das
rcll
xchg
icebp
inc
mov
mov
jb
dec
cmpsb
mov
out
imul
je
inc
sub
push
fidivrl
aaa
cmp
shrl
adc
les
loope
xchg
mov
and
pop
fistpll
mov
and
ret
push
jnp
push
adc
mov
sti
xchg
pop
ja
adc
mov
js
xor
aad
mov
hlt
sahf
mov
dec
xchg
aam
adc
in
mov
lds
loop
xor
pop
scas
popf
push
in
ficomps
sub
and
sbb
daa
add
out
add
push
jno
lret
aas
in
aad
adc
sbb
mov
cwtl
shll
push
push
filds
add
push
add
jne
push
add
jle
mov
out
or
jnp
inc
roll
sbb
fnstsw
in
aas
jmp
or
pop
mov
imul
je
es
arpl
push
shll
jo
push
loopne
test
daa
xchg
inc
inc
sbb
cmp
or
add
flds
fmuls
aaa
push
adc
dec
jne,pn
xor
add
clc
mov
jl
rcrl
cmc
gs
cmpsl
popa
inc
xlat
fdivs
fucomi
sti
sub
mov
pop
sub
pop
mov
mov
push
lahf
iret
sub
insl
aas
lock
in
inc
outsl
adc
mov
sbb
aam
bound
scas
mov
sbb
fstpl
or
or
xchg
scas
cmpl
mov
dec
daa
aam
pop
or
fcmovnb
int3
shl
aad
and
or
iret
sub
rol
imul
xor
ja
stc
cmp
loopne
push
gs
es
push
mov
mov
pop
add
icebp
push
adc
cltd
ret
gs
jl
xor
and
xchg
inc
paddusb
lea
or
xbegin
jecxz
sahf
mov
movsb
xor
cmp
mov
fcmovnbe
sub
fldcw
xchg
mov
in
aaa
fcmovnb
movsb
inc
nop
cmp
xchg
add
imul
cmpsl
cld
mov
insl
and
test
test
mov
mov
mov
xlat
ss
aad
test
jle
adcb
inc
xor
pop
stos
arpl
call
jnp
into
and
jbe
jle
fiadds
xlat
call
push
je
sbb
sub
call
daa
cmp
mov
mov
mov
push
shrl
in
xor
push
call
inc
pop
pop
leave
mov
lcall
repz
xchg
pop
cmp
mov
adc
pop
faddl
out
das
cmp
movsb
repnz
dec
lret
mov
mov
movsl
insl
cmp
pop
sbb
js
pop
or
jns
addr16
push
mov
mov
mov
xor
mov
loope
or
pop
in
movsl
out
xchg
jae
leave
outsb
test
push
jb
jo
lahf
adc
lea
or
xchg
bound
test
int
pop
stos
cmp
jl
test
inc
jmp
push
lds
mov
das
lds
jg
cmpl
js
fnstcw
shrl
das
mov
sbb
dec
xchg
lds
push
mov
mov
xchg
xor
pop
or
int
mov
pop
addr16
sarb
mov
popa
std
mov
jae
stos
adc
lock
inc
push
xor
scas
mov
and
sbb
sbb
adc
hlt
lds
repnz
jl
sti
add
pop
pop
int3
xlat
je
cmp
mov
pushf
dec
xor
mov
push
xchg
cmp
icebp
popa
sti
inc
xchg
push
cli
mov
mov
sarl
mov
ljmp
test
jno
inc
adc
lds
pop
fwait
pop
sbbb
sahf
or
sbb
into
push
or
dec
inc
jne
cs
sub
setp
in
movl
das
mov
imul
andb
inc
or
enter
orb
hlt
cmc
cmc
sbb
ja
dec
jb
mov
sbbb
xchg
inc
in
sbb
xor
out
fbstp
stos
pop
pop
push
mov
in
pop
in
rolb
pop
sbb
mov
pop
loop
ljmp
adc
cmp
push
loopne
rolb
out
mov
jnp
add
xlat
sti
pop
fucomi
pop
adc
or
mov
mov
jo
scas
cmpsb
inc
xchg
imul
fsubr
lea
mov
clc
jecxz
loopne
xchg
in
es
cli
sti
push
adc
xchg
insl
enter
lods
inc
pop
or
mov
out
mov
and
adc
adc
push
mov
addl
in
loope
fcomi
push
cmp
scas
cmp
pop
adc
enter
ds
xor
imul
mov
mov
sbb
push
and
jbe
cli
call
lret
xchg
ss
test
jle
es
dec
dec
mov
cmc
pop
ret
xchg
sbb
in
stc
xchg
cs
sbb
ret
fnstcw
sahf
sti
shrl
mov
lds
loopne
rcll
jecxz
dec
sub
enter
push
and
mov
dec
jnp
cmpsl
inc
hlt
shl
xor
mov
jp
scas
jecxz
out
insl
pop
dec
scas
icebp
xor
scas
mov
test
scas
push
daa
cld
ss
mov
or
inc
roll
pop
lea
sub
ret
into
imul
jge
fsubr
ret
adc
push
scas
daa
pop
arpl
test
rorl
mov
insl
dec
sarb
mov
loop
jmp
cmp
hlt
out
push
ds
sti
pop
addr16
mov
or
mov
orb
cmc
roll
push
rcll
push
pop
fildl
notl
pop
push
push
xchg
outsb
cmp
imul
rcll
push
push
xor
mov
xchg
call
outsb
or
fmuls
lcall
pop
js
test
aam
in
mov
loop
cmp
clc
in
jmp
adc
lds
and
xor
mull
in
into
aas
lds
mov
xchg
ficoml
lock
fcom
lock
inc
jno
mov
jns
testl
sub
xlat
idivb
dec
loopne
inc
and
mov
inc
inc
inc
push
cmpsb
cltd
insl
js
das
add
fidivs
pop
pop
stos
clc
lcall
inc
mov
mov
je
cmpsl
pop
repz
mov
push
call
add
aam
enter
jp
jge
push
cmp
leave
sbb
lret
and
pop
icebp
xor
push
iret
aas
movsl
xor
xor
bound
fstp
pop
ja
ret
fists
test
xor
gs
cpuid
dec
push
inc
je
cs
ss
daa
mov
pop
mov
jns
cmp
js
dec
cmp
adc
in
dec
fwait
xor
repz
shll
jo
jecxz
test
ds
je
sub
daa
inc
loop
or
xchg
pop
pop
icebp
mov
mov
jae
ud0
es
fsts
mov
xor
mov
sub
xor
mov
fistl
or
in
subb
pop
cwtl
ror
push
cmp
faddp
inc
adc
ss
out
xchg
jbe
cs
jne
xor
cmp
cmp
and
adc
rcrb
std
test
addl
bound
xor
or
fbld
add
sbb
jno
pop
clc
cmp
and
mov
adc
mov
add
jne
cmp
xchg
or
push
cmp
pop
inc
sahf
xchg
std
xchg
add
mov
fdivrl
mov
or
mov
sti
lahf
mov
ret
sub
mov
lock
inc
scas
add
inc
push
mov
aad
fstl
pop
dec
push
in
leave
lock
bound
push
loop
daa
outsb
and
icebp
lea
and
scas
loope
mov
xor
cmp
ret
cmc
add
sub
xlat
inc
xchg
push
test
iret
mov
pop
or
jnp
fadds
push
shl
in
hlt
ret
push
jp
fmul
add
aaa
cmp
xchg
or
mov
cmpsl
add
pop
add
sub
or
pop
mov
fstps
testb
cmc
scas
rcll
movsb
pop
push
repz
mov
repnz
outsl
cmp
push
out
cmp
push
movsb
sbb
roll
scas
push
pop
jne
test
or
loop
outsb
pop
pop
ds
stos
mov
cmp
and
cmp
pop
aas
out
cmp
in
ss
sbb
xor
xchg
int
cmp
inc
int3
push
mov
mov
mov
inc
mul
ret
dec
jge
idivb
ljmp
stos
or
lret
inc
stc
loop
add
movsl
mov
mov
jp
jecxz
filds
jecxz
js,pt
fstl
ljmp
inc
out
mov
xor
stos
add
push
fimull
cmpsb
push
mov
inc
aam
inc
push
push
pop
jbe
jp
jnp
in
pop
push
jnp
sbb
sbb
sbb
decb
in
ljmp
js
aaa
dec
pop
pop
mov
sbb
adc
outsb
push
scas
lock
adc
sahf
cli
icebp
jle
dec
cltd
push
cmp
push
pop
jae
imul
cmovne
jno
sbb
xlat
lea
sarl
xor
clc
adc
clc
rol
faddl
and
cli
dec
jb,pn
cmp
pop
or
push
fdivl
inc
inc
pop
rcrl
xor
sar
pop
xchg
push
xor
xor
repz
sbb
push
test
and
push
adc
jmp
adc
adc
jmp
jge
pusha
mov
add
adc
leave
jne
mov
pushf
scas
jmp
sti
fsubrs
and
mov
subps
fstl
dec
or
mov
test
loope
dec
dec
sbb
pop
ljmp
scas
imul
sti
mov
xchg
divb
sbb
or
or
out
les
jl
mov
call
and
cld
fdivrs
out
inc
cmp
xchg
loopne
inc
xchg
pop
push
pop
xchg
js
loop
movsb
out
gs
lods
arpl
mov
mov
out
adc
divl
xor
xchg
test
iret
cli
andl
mov
push
fmull
je
adc
loope
mov
xchg
sbb
jmp
mov
filds
xchg
cmc
or
sbb
mov
mov
popf
pop
inc
pop
dec
cmp
adc
inc
fwait
es
fcoms
test
or
into
adc
or
shrb
dec
je
pop
pusha
rclb
dec
pop
add
sub
lea
mov
in
mov
ret
popf
scas
mov
pushf
sbb
lcall
out
outsl
push
mov
inc
sbb
inc
pop
pop
dec
loope
ret
fucompp
and
pop
aam
mov
push
mov
add
inc
mov
jne
ret
push
in
add
cmp
adc
push
scas
push
call
outsl
lods
xchg
sub
ds
arpl
dec
sub
std
sbb
xor
daa
mov
mov
xor
sub
daa
lahf
andps
mov
mov
cmc
push
std
xor
sbb
push
cmc
lock
mov
or
cmp
add
out
pop
nopl
inc
mov
mov
xor
or
and
lods
je
cmp
rcl
mov
pop
add
bound
mov
stos
xor
mov
sbb
sbb
cmpsl
add
xchg
and
jecxz
xor
outsl
push
and
loope
cli
sarb
outsb
sahf
idivl
inc
push
shrl
aas
push
push
mov
sub
inc
xlat
sbb
xor
nop
adc
stos
cltd
xor
jno
addr16
pop
aad
ss
push
cmp
std
inc
push
shlb
cmp
cmc
popf
clc
mov
daa
mov
insl
mov
mov
and
iret
inc
mov
loopne
dec
das
sbb
sub
sbb
aas
sarb
mov
dec
mov
adc
inc
xlat
and
out
pop
sub
jge
cmpsl
inc
pushf
cmp
int3
mov
sti
pop
xchg
mov
add
jecxz
mov
mov
cs
decb
adc
outsb
jecxz
std
or
sbb
outsl
aas
mov
popa
mov
movsb
mov
fistpl
insl
push
int3
push
sub
or
fprem1
sbb
cmpsl
lahf
sbb
cmp
push
pop
and
and
ret
adc
popf
add
inc
stc
inc
push
inc
xchg
sti
ljmp
inc
and
adc
dec
icebp
mov
dec
jl
lds
mov
xchg
push
rorl
push
xchg
inc
push
mov
insl
imul
in
mov
push
jg
mov
iret
addr16
dec
add
js
add
push
and
adc
sbb
shl
push
pop
out
testb
daa
jl
and
jle
pop
push
pop
inc
cmp
lods
xchg
jp
clc
jecxz
adc
and
sbb
sbb
pop
mov
fcoml
in
ret
xlat
mov
iret
inc
mov
add
push
aad
std
xchg
adc
jecxz
andl
dec
int
call
test
xor
fadd
ret
jmp
js
cmpsb
xchg
jge
pop
mov
jne
in
jns
repz
insl
jbe
jle
fists
inc
insl
call
sbb
sti
hlt
je
mov
ds
cmpsb
adc
jge
gs
clc
push
popf
fistl
inc
or
xchg
cmc
fsubs
add
cmp
pop
jns
rcr
mov
jp
adc
jge
jb
push
subl
mov
scas
cli
push
cltd
lcall
jo
mov
xor
scas
imul
add
ret
push
insl
roll
test
adc
ljmp
cld
jno
inc
mov
adc
xorb
movq
mov
sahf
iret
sbb
ja
or
jns
sub
fsub
ljmp
xor
lds
mov
mov
cwtl
daa
pushf
lcall
xor
push
cli
and
push
inc
fdivrl
mov
mov
mov
sbb
pop
pop
mov
rclb
xchg
out
cli
push
in
or
les
cmpsb
cmp
add
ficoml
ljmp
out
out
pop
test
mov
sti
stos
fiaddl
scas
cmpsb
stc
cli
or
mov
jo
mov
movsl
xchg
xchg
push
cmp
mov
push
push
sbb
fdivrs
insl
xchg
clc
fcmovnbe
cmp
add
dec
push
mov
sbb
lcall
sub
out
jle
test
rcll
je
add
fsubr
in
int3
int
xor
sub
stos
ret
add
xorl
ss
in
mov
les
push
adc
mov
push
adc
sbb
xor
mov
into
and
ljmp
dec
and
mov
nop
or
jg
add
mov
sbb
push
stos
add
fildl
xorl
ret
mov
add
push
push
cmp
pusha
shr
out
sbb
inc
je
mov
popa
jnp
adc
outsb
or
dec
inc
sub
or
inc
mov
adc
lock
fucomi
lret
icebp
je
imul
jne
xchg
jo
push
push
dec
push
and
sahf
lcall
dec
hlt
outsb
mov
fidivrs
das
ds
aaa
aaa
out
fwait
mov
pop
cmpsb
mov
adc
jns
nop
sti
cmp
movsl
xchg
dec
dec
adc
std
inc
int3
pop
jecxz
sub
sbb
cmpb
and
das
fcoms
adc
sub
sub
insb
insl
pop
icebp
inc
xchg
sub
pop
xlat
into
sbbl
jno
ja
or
out
jp
mov
jle
imul
fwait
insl
add
out
mov
jmp
loopne
pop
inc
cld
jle
cld
out
bound
and
jnp
mov
push
mov
push
adc
andl
fcompl
pop
xor
shll
ljmp
mov
xchg
dec
scas
arpl
into
sahf
push
pushf
aad
jae
xor
stc
inc
add
movups
lods
push
cmpsb
cmpsb
repz
test
dec
inc
jge
add
or
inc
push
loop
jno
insb
out
mov
mov
mov
fildl
inc
imul
adc
fdivs
out
and
stos
outsl
cli
mov
fsts
sbb
clc
jle
sbb
hlt
mov
pop
test
ljmp
jecxz
xchg
js
jno
loopne
jl
cli
push
mov
dec
xchg
ret
add
inc
pop
add
js
or
jl
dec
outsl
mov
outsl
js
in
push
testl
rorb
test
dec
xchg
stos
mov
or
aad
jmp
jge
mov
dec
mov
cld
push
enter
sbb
inc
adc
pop
xlat
movzbl
pusha
test
pusha
pop
cltd
push
push
cmpsl
mov
out
test
imul
push
data16
jb
jmp
pop
mov
dec
sub
mov
ja
push
xor
sti
loop
shl
mov
in
rcl
or
xacquire
mov
fwait
sub
cmpsb
popa
movb
dec
sub
into
jbe
mov
pop
jl
shl
sub
shll
mov
ds
jbe
and
rclb
div
imul
or
pop
pop
lahf
jecxz
das
inc
aad
inc
jecxz
cltd
insl
ret
pop
jb
fstpl
pop
mov
sub
pop
mov
pop
pushw
or
xchg
sarb
out
dec
cmpsb
mov
mov
dec
mov
mov
iret
push
mov
mov
sti
lcall
sbb
call
cmp
lods
sti
pop
pop
push
adc
sbb
push
pop
ss
pop
das
inc
sub
or
xor
mov
or
and
jbe
inc
subl
fimull
stos
fnstsw
sbb
ret
hlt
adc
fcmovb
lock
or
aaa
or
mov
and
sti
leave
mov
and
repz
es
dec
dec
stc
cmpsb
mov
stos
xchg
push
sahf
cmpsl
push
fdivs
lods
test
stos
iret
and
push
movlps
cwtl
aad
xor
fcmovnu
stos
or
in
sbb
insb
mov
test
jg
lods
mov
xchg
and
andb
outsb
pop
es
out
push
xor
jne
pop
jg
mov
sbb
cmp
sub
pop
in
mov
xchg
pop
dec
ret
push
add
repnz
push
xlat
and
cmp
in
jnp
add
gs
sbb
call
lret
add
shrl
jb
das
mov
imul
dec
es
adc
lret
jb
in
xor
daa
adc
pop
and
ja
adc
jae
pop
add
xor
xchg
pop
ret
mov
seta
jno
loopne
or
ret
das
jbe
pop
or
jmp
loop
xorb
std
int3
cmp
movsl
dec
pop
dec
xor
mov
cs
or
pop
add
push
dec
insb
jle
ja
out
mov
movsl
mov
fistps
push
push
jo
mov
lods
and
dec
les
mov
dec
or
and
jno
dec
pusha
mov
xor
fcmovne
dec
xor
fldt
sub
mov
pop
or
mov
mov
xchg
jp
dec
cmpsb
jl
lds
push
adc
push
push
dec
shrb
sbb
ds
push
bound
out
sbb
sysexit
mov
xorl
dec
dec
das
sbb
push
jl
mov
out
in
adc
mov
sbb
leave
rclb
cmp
xor
aaa
cmc
lock
push
repz
mov
push
fsub
or
pop
xchg
dec
xor
sbb
scas
xchg
pop
push
add
scas
push
mov
sti
imul
insl
fadds
push
cld
pop
jle
mov
ret
popf
cmp
je
push
push
add
push
inc
inc
call
sub
out
lret
pop
mov
les
out
or
cmc
dec
push
mov
pushf
sbb
add
or
std
inc
and
xor
xchg
adc
jge
mov
div
test
inc
in
sbb
ficoms
xchg
mov
scas
inc
mov
pushl
into
stos
das
jne
clc
push
mov
call
jb
leave
ljmp
xor
aas
out
xor
sub
mov
xlat
xchg
or
add
cmp
aas
sub
mov
jne
xchg
test
sub
ror
and
fisubrs
jne
and
mov
out
sti
mov
push
lcall
mov
jb
push
mov
or
mov
inc
les
pop
cmp
add
push
rcrl
pop
rol
sub
mov
mov
sub
and
pop
rolb
add
cmp
add
adc
jle
inc
jp
hlt
fsubr
and
sbb
xor
pop
sbb
dec
std
cmp
xchg
daa
je
mov
xchg
imul
adcl
test
push
sbb
lods
pop
sub
mov
mov
daa
ja
ret
imul
inc
outsl
jbe
sysexit
or
leave
pop
xchg
int
sub
pop
pop
push
mov
mov
in
rcrl
loope
fsubl
mov
cwtl
movsl
mov
push
arpl
push
push
stos
push
adc
pop
adc
pop
sub
mov
cmp
ret
mov
lods
xor
jmp
dec
mov
fcomi
push
clc
adc
xlat
inc
lds
xor
in
int3
pop
or
add
and
cltd
sahf
sbb
push
fcomp
testb
or
popf
pop
mov
ret
add
pop
jo
and
and
mov
and
dec
js
leave
sahf
fcmovu
mov
xchg
cmp
pop
mov
mov
or
imul
test
ret
insl
mov
mov
dec
inc
add
pop
jo
dec
ja
inc
cli
inc
jne
sub
out
mov
rclb
das
and
pop
and
sbb
subb
pop
xchg
add
cwtl
xchg
fdivrs
xor
aas
inc
jle
daa
mov
jp
mov
mov
fwait
add
dec
jb
sub
pop
pop
scas
imul
fistps
out
cmpsb
test
mov
addr16
icebp
insb
insl
xor
ljmp
cmpsl
cli
dec
cmp
dec
mov
mov
test
sti
lret
push
or
jmp
sahf
fidivl
mov
mov
cmp
out
sbb
outsl
sbb
shlb
lock
sbb
mov
stos
fcmovbe
mov
mov
xchg
popa
mov
pop
add
leave
adc
push
aad
sti
stos
jae
jmp
clc
sbb
pop
or
xchg
and
and
push
jnp
movsb
lcall
loop
cs
xor
mov
cli
cld
jle
outsb
xchg
push
mov
sahf
ret
insl
lret
push
or
hlt
cmc
pop
xor
andb
cmc
js
sub
stos
mov
outsl
push
sti
mov
push
adc
push
in
mov
mov
sub
push
dec
test
popa
adc
sbb
fmulp
das
add
aam
xor
sbb
ja
jb
mov
cmp
jge
mov
mov
or
cmpl
xchg
lea
insl
mov
repnz
or
insb
stos
loopne
push
stc
pop
inc
out
and
je
std
jae
push
xchg
lds
je
sbb
loopne
cmp
cmpsb
out
clc
sahf
fsubr
cmpsb
les
ret
ds
xlat
inc
or
gs
rcrb
mov
rcl
push
shlb
mov
jno
sub
jmp
push
cs
mov
push
and
inc
push
enter
adc
pusha
jg
lock
sub
jbe
fmull
dec
pop
xor
insl
push
outsl
xlat
std
fmull
mov
and
mov
cmp
mov
sbb
jge
xor
insl
arpl
pop
daa
incb
push
jae
push
cmpsb
mov
std
test
sahf
cli
dec
push
push
jo
scas
push
scas
jecxz
es
cmp
mov
inc
daa
add
inc
and
cmp
push
pushf
jecxz
jo
sub
inc
mov
sti
mov
lcall
es
add
and
push
call
repz
jle
cltd
fmull
push
ljmp
js
mov
outsb
mov
loope
addr16
and
inc
add
cmpsl
pop
ds
test
ljmp
sbb
gs
loopew
notl
jmp
jbe
mov
mov
and
cmp
test
ret
or
mov
add
ret
mov
arpl
movsb
adcb
sub
sahf
mov
dec
cmpsb
insl
jnp
xlat
adc
or
xchg
and
jnp
pop
testb
xchg
pcmpgtb
lret
jl
bound
clc
ljmp
push
dec
adc
inc
mov
xor
popa
lret
sarl
mov
popa
jnp
pop
mov
mov
mov
pop
imul
inc
push
lock
jle
push
test
inc
lds
dec
push
xlat
loope
test
lds
enter
loope
das
gs
add
mov
neg
std
leave
ja
test
sbb
ret
xchg
or
mov
pop
fnstsw
dec
test
lahf
adcb
stos
clc
loopne
jg
adc
jb
and
cmp
iret
and
std
dec
adc
lods
lcall
es
jnp
sub
clc
jne
repnz
or
xor
push
loopne
cli
mov
sub
push
sbb
or
sbb
pop
xor
adc
test
jo
inc
loop
int
push
push
jecxz
imul
lcall
mov
in
sbb
or
jmp
cwtl
jb
mov
mov
icebp
push
push
hlt
mov
xor
adc
fidivs
dec
loope
pushf
lods
pop
mov
lahf
movsb
and
pop
inc
scas
into
dec
fistpll
add
jge
adc
pushl
xchg
ss
fadd
cmpsb
jae
out
lret
sub
adcl
divl
inc
rcl
xor
cmp
insb
fdivs
cmp
xor
sbb
push
mov
scas
dec
jae
call
mov
fucomp
popf
push
adc
xor
cmp
int3
shr
shll
adc
popa
add
aad
mov
pop
jle
cmp
notb
fdivl
jmp
push
aaa
insl
add
xchg
adc
outsl
leave
cmp
test
add
jbe
nop
in
pop
mov
sbb
jmp
call
loopne
pop
jg
dec
pop
or
cmp
sbb
loope
sub
loope
sub
out
pop
sahf
push
inc
cs
push
repz
lahf
rolb
cwtl
push
jae
sbb
fmull
mov
jnp
xchg
cmp
lret
lds
xor
pop
lods
in
leave
repnz
aas
clc
sub
les
sarb
imull
pop
fcmovnb
loope
mov
mov
sbb
div
shl
pop
out
inc
jbe
mov
xchg
cmp
dec
sbb
pop
push
adc
push
test
sarl
cmc
arpl
dec
mov
ss
or
lods
pusha
jnp
mov
jnp
or
popa
and
loopne
loope
xchg
lock
gs
stos
mull
aad
dec
pop
das
call
xor
xor
jo
jmp
lcall
push
or
cmp
out
adc
jge
inc
icebp
add
sbb
repz
repz
mov
test
jecxz
adc
ds
lods
sub
jl
mov
popa
xchg
nop
cmpl
je
lea
mov
dec
mov
inc
enter
inc
pop
insl
add
enter
or
cmc
add
adc
cli
add
jle
fsin
insl
sbb
in
and
test
or
arpl
mov
and
xor
loopne
sub
fsubs
adc
pop
xchg
in
loope
lret
ljmp
insl
xorl
xor
pop
add
cmp
addl
mov
inc
jle
test
fimull
add
out
cmpsl
daa
ret
nop
add
sub
out
js
xchg
mov
jle
pusha
dec
loop
xchg
jle
faddl
or
sub
inc
cmp
pop
adc
stos
mov
cld
orl
add
sub
sbb
cli
pop
mov
imul
insb
pop
cltd
jp
mov
mov
popa
cs
push
hlt
ds
push
fsub
imul
cmpl
xchg
fcoms
divl
sti
pushf
sahf
pop
add
ja
in
or
lds
outsb
or
cwtl
das
orl
add
mov
xor
jge
fwait
jns
negb
inc
ljmp
jmp
jb
aam
xchg
sbbl
ja
jmp
push
sbb
cwtl
insb
sub
ret
xor
adc
pop
inc
repz
aaa
mov
push
push
xchg
cs
or
or
xchg
insb
repnz
loopne
push
call
and
mov
jne
or
dec
add
cmp
arpl
sub
dec
push
mov
test
push
jne
scas
bnd
add
adc
lock
jae
jge
inc
sahf
mov
mov
adc
adc
icebp
dec
adc
or
push
xor
outsl
sub
xor
imul
sbb
notl
fistpl
sbb
push
mov
jb
popa
push
and
pop
ja
out
daa
xchg
outsl
ficompl
push
inc
inc
iret
idivb
push
mov
sbb
call
lea
cmpb
dec
sbb
push
jmp
lock
fadds
add
mov
dec
cmp
incl
ret
pop
sbbb
adc
int3
int
mov
xor
push
add
out
ja
sub
lock
outsl
xchg
cmp
inc
cld
pop
push
enter
pop
mov
xchg
bound
push
jo
jne
mov
lret
adc
les
jne
lahf
cmp
push
cmp
daa
into
and
loopne
add
mov
mov
fistpl
mov
inc
mov
sbb
xchg
lock
sub
hlt
das
cwtl
mov
sti
add
mov
cltd
mov
add
das
divl
test
push
out
cmp
enter
cmpsb
mov
rcl
aaa
js
xchg
xor
fdivrl
mov
mov
push
fldt
pop
xlat
lods
mov
xor
cmp
out
sti
fidivs
dec
popf
cmp
xlat
mov
insb
push
and
jne
mov
xchg
sarb
mov
xor
cltd
pop
xchg
jmp
in
sbb
mov
and
jmp
add
inc
out
adcl
cmp
std
loopne
pop
sar
sahf
cli
jl
sbb
int
sbb
dec
mov
and
cltd
adcl
jl
mov
pop
jmp
scas
hlt
idivb
sbb
or
test
add
xchg
out
test
adc
mul
jge
mov
test
jns
jnp
test
jae
push
cli
call
cmp
das
mov
dec
mul
jb
inc
xlat
push
mov
lock
mov
shlb
and
pusha
fidivrl
mov
hlt
mov
mov
je
jne
jmp
sbb
in
jmp
cmpsb
mov
and
imul
adc
ljmp
bound
test
mov
pop
xchg
push
rcl
jmp
lds
jl
rorb
and
pop
gs
xchg
jmp
lcall
rorl
rcl
add
jmp
xchg
xchg
add
xchg
adc
idiv
pop
ret
cmp
push
stc
loopne
jge
out
mov
mov
int3
test
ds
cmpb
jns
scas
jbe
sbb
fsubrs
arpl
cwtl
adc
repz
mov
leave
lods
mov
js
xor
negb
push
jl
fwait
popf
shr
fs
ficomps
mov
test
daa
mov
jae
push
rolb
add
cmp
jg
dec
lock
add
pop
orl
push
jl
dec
xchg
push
dec
hlt
xor
pop
fisubrl
psadbw
dec
pop
mov
leave
xchg
add
push
cmp
rol
pushf
or
or
add
cmp
movsl
arpl
xchg
inc
sbb
inc
nop
push
cli
push
pop
inc
sbb
cwtl
lods
test
stos
clc
cli
jno
mov
pop
add
and
pop
fidivrl
into
inc
insl
xorb
xchg
cmp
rclb
decb
scas
cs
mov
jne
push
push
pop
popf
push
lret
sti
or
push
js
ss
dec
imul
pop
adc
mov
daa
fcomps
push
orb
stos
scas
xor
out
jbe
ljmp
movsl
out
clc
cli
jne
ja
pop
cwtl
cltd
cmp
mov
add
xor
push
repz
ficomps
or
js
push
call
sbb
cmp
sar
jnp
aad
fwait
lds
adc
jb
loope
cli
and
and
jb
push
lahf
sub
mov
cmpsl
out
adc
and
sub
xchg
popl
pop
imul
add
cwtl
adc
pop
into
popa
ljmp
adc
shll
pop
sbb
andl
movsl
mov
add
insl
mov
fistpll
aaa
add
in
aad
xchg
mov
aad
je
outsl
ret
iret
aad
adc
vcvtsi2ssl
mov
sarl
fimull
inc
push
leave
lock
jmp
adc
lret
pop
mov
xlat
push
sti
and
outsl
test
jne
imul
pop
cmp
movsb
sub
and
push
shlb
push
js
sbb
fcmovnu
or
mov
cli
sti
test
add
dec
sbb
xlat
popa
dec
or
shlb
daa
and
out
xchg
dec
fisttpl
or
xorl
cs
shld
in
fmuls
xor
mov
xor
fldt
ret
sub
pop
cmp
mov
subb
out
daa
jg
sbb
xchg
push
cwtl
push
pusha
in
jle
cmp
aas
mov
test
movsb
fldt
xchg
push
fdivrp
insb
lret
xchg
xchg
fisubrs
fidivl
sub
addr16
cmp
jecxz
int3
int
inc
sbb
jecxz
jno
push
fmuls
stos
or
add
scas
mov
scas
rcll
inc
mov
mov
cmc
mov
sbb
sbb
cmpl
sbb
push
fmull
cmp
mov
shrl
cmp
xor
mov
jb
call
sar
mov
iret
xchg
sbb
comiss
mov
sahf
adc
icebp
push
sbb
cld
or
mov
scas
add
aaa
daa
imul
jbe
mov
sbb
pop
shll
mov
addr16
xor
xlat
std
pop
jne
loope
ljmp
addl
adc
xor
call
iret
pcmpgtd
adc
and
add
dec
insb
or
lret
ja
xchg
faddl
outsb
addb
cli
cwtl
in
shll
outsb
dec
fcompl
pop
pop
aas
dec
rorl
mov
and
xlat
mov
repz
push
jg
push
test
xor
sbb
mov
insb
mov
dec
loop
mov
in
mov
mov
das
jecxz
decl
stos
and
insb
daa
jne
mov
sbb
xchg
daa
cmp
mov
pusha
aas
inc
sbb
inc
inc
lret
orl
or
dec
andb
sbb
faddp
xor
jp
push
jns
mov
jnp
mov
push
cmp
sbb
loopne
mov
jmp
pop
idiv
xchg
divl
ret
pop
ss
fldt
fisttps
cmpsb
sahf
cmp
aam
adc
xlat
or
dec
xor
daa
adc
minps
mov
sbb
ret
dec
sbb
lds
paddq
sti
pop
push
mov
in
or
frstor
lret
ficomps
dec
push
icebp
pop
sub
outsl
ret
arpl
imul
sbb
stos
adc
push
push
arpl
dec
xor
pop
bound
sbb
in
add
imul
mov
pop
int3
shrl
rcl
mov
mov
fdivrl
mov
test
std
mov
sub
pop
or
aas
xchg
iret
mov
dec
cmp
fucomp
adc
xchg
incl
mov
ret
das
mov
cltd
mov
xor
mov
sub
mov
ds
xchg
ficoms
rcl
loopne,pn
out
xchg
leave
sti
fisubs
pop
mov
lcall
rcr
add
scas
mov
stos
jp
call
mov
loope
lret
push
aad
adc
or
push
push
jns
inc
stos
mov
xor
cmpsb
xor
loopne
cmp
icebp
loope
inc
shll
xlat
outsb
sti
fisubrs
mov
leave
inc
call
push
outsl
inc
lock
bound
loope
jl
movsb
mov
xor
jbe
fisubs
adc
aad
pop
sbb
cmp
fisubl
xor
into
xchg
rcrb
mov
inc
add
daa
ljmp
mov
sbb
pusha
jno
xchg
adc
testb
nop
mov
and
mov
jmp
and
cmp
push
jl
in
notl
jge
ds
xor
cmpsb
cmp
cmc
push
pop
push
scas
mov
sbb
sbb
jo
scas
mov
aad
mov
lret
test
lahf
push
aam
leave
movsb
sahf
xchg
cli
call
les
in
sbb
call
xchg
int3
cltd
push
mov
jae
dec
mov
hlt
mov
xchg
mov
call
xchg
cli
ret
push
faddl
lahf
xor
fucomip
imul
jne
push
mov
std
xchg
add
lahf
enter
into
enter
pop
fidivrs
movsb
cmp
fiaddl
icebp
xor
les
movsb
or
jnp
shrl
sub
fisubl
ljmp
aas
pop
pop
add
dec
loop
cli
mov
sbb
cmc
mov
nop
xlat
pop
adc
xchg
sbb
xchg
insl
sub
fisubrs
xorb
rolb
shrb
and
xchg
mov
xchg
aas
jge
imul
cmp
insl
xchg
out
jne
xlat
insb
push
dec
push
clc
jae
and
mov
mov
push
les
inc
mov
mov
push
or
inc
jl
les
adc
cmp
in
and
test
mov
xor
adc
out
stos
test
adcb
mov
dec
das
xor
cmpsb
and
imul
insl
cmp
outsl
scas
andnps
mov
enter
xor
scas
pop
jae
mov
test
imul
mov
cmp
mov
fdivrl
mov
fnstsw
and
mov
fs
jp
xor
ljmp
add
loopne
or
imul
lods
ja
add
enter
dec
fists
cmpb
mov
mov
cmpsb
push
jne
ss
jl
rclb
mov
cmpl
jo
jp
sub
mov
dec
dec
cmpsb
mov
or
aad
fsubl
nopl
xor
pop
cmpsb
stc
dec
dec
push
out
daa
sahf
or
fwait
and
ja
and
stos
scas
in
mov
stos
sub
in
dec
out
mov
push
mov
je
das
outsb
data16
insl
repz
jne
or
jmp
mov
pop
ret
adc
pop
pop
ret
pavgw
mov
push
sub
inc
bound
aam
scas
test
jae
mov
mov
mov
inc
stos
cmp
faddl
scas
mov
aas
repz
call
mov
scas
test
push
popf
jbe
mov
pop
inc
imul
lret
hlt
in
inc
mov
pusha
leave
jmp
mov
jmp
faddl
repz
mov
sub
mov
jb
xchg
fidivrl
rcr
mov
adc
xchg
and
sarl
jne
add
mov
stc
cmp
push
jae
icebp
loopne
stos
add
inc
mov
sbb
jecxz
cmp
xchg
pop
stos
jne
mov
cld
inc
mov
jl
loop
es
or
insl
push
cmp
in
jnp
fldenv
push
mov
lock
into
les
into
push
aas
iret
inc
int
fimull
mov
jge,pt
and
test
stos
and
mov
xor
add
cs
outsb
out
cli
call
jmp
ret
cmp
cmp
cld
loope
inc
out
cs
jns
stos
sti
hlt
adc
sbb
sbb
sub
mov
notl
rcr
sbb
addr16
or
dec
divl
arpl
add
xlat
enter
pand
adc
add
pop
repnz
imul
test
imul
xchg
cmove
repz
das
shl
pop
fnstenv
das
call
add
in
pop
arpl
inc
stos
or
add
adc
cld
ljmp
push
inc
test
arpl
lock
inc
jecxz
mov
jnp
inc
sub
xlat
push
aad
aaa
xchg
xchg
in
pop
test
jecxz
imul
push
mov
sbb
mov
sub
lret
rclb
add
out
stos
cmpsb
mov
add
loopne
ljmp
cli
dec
das
pop
shl
std
out
mov
dec
loopnew
cmp
pop
fs
jb
add
sahf
jle
sub
pop
cmpsl
xchg
cmp
mov
mov
int3
gs
outsb
jp
frstor
gs
test
xchg
mov
sbb
sub
push
adc
adc
cmpsl
or
andl
jecxz
test
mov
mov
xchg
jne
xchg
insl
push
adcb
mov
scas
sbb
testb
or
xlat
lcall
pop
jecxz
push
cli
jecxz
fstpt
aad
sbb
dec
sbb
mov
mov
mov
pop
mov
inc
push
js
inc
mov
enter
in
arpl
sub
adc
cmp
lds
pop
mov
mov
shrb
scas
or
shrl
cmc
pop
cmpl
jg
mov
add
dec
mov
inc
xchg
mov
daa
test
or
jecxz
fcomps
fistl
dec
scas
xchg
out
pop
mov
mov
sbb
cmc
shll
and
jmp
dec
push
jae
cmp
inc
inc
jg
jns
paddd
mov
push
jmp
sahf
das
stos
pusha
mov
subl
cmp
sbb
sbb
push
insl
dec
gs
rorb
mov
or
enter
fdivrl
nop
lret
push
cmp
cmp
lcall
xchg
mov
fistl
and
rcrb
cmp
adc
add
outsl
rorl
cld
movsl
loop
repnz
out
sahf
sahf
push
push
pop
stc
scas
sbb
fcoms
test
outsb
jle
cmpsl
push
shll
repz
aad
dec
mov
leave
mov
ds
inc
addb
aam
pavgw
iret
imulb
jo
fldl
out
out
cmp
cmp
dec
mov
sbb
mov
aad
lahf
or
leave
cltd
sbbb
sub
sti
leave
push
in
test
jno
and
outsl
sub
fisttpll
out
jmp
out
push
lret
or
out
jmp
cld
cs
push
and
jl
ret
lret
mov
cli
xchg
filds
xorl
jae
mov
andl
mov
mov
dec
inc
or
pusha
iret
imul
mov
xchg
shl
add
sti
jp
out
push
fcomp
or
dec
fs
notl
test
outsb
loope
es
mov
pop
dec
mov
bound
dec
jle
shl
fnsave
ljmp
arpl
jle
call
jo
scas
sbb
ret
rcrl
rol
push
push
push
in
xchg
dec
fucomp
push
mov
mov
out
pusha
shl
div
mov
flds
jnp
xchg
dec
int
aaa
fildl
mov
cmp
mov
insl
sarb
cmpsb
in
inc
into
rcl
cmp
out
xor
push
mov
cli
and
adc
into
sti
jae
inc
ret
or
and
dec
adc
pop
pusha
sbb
loope
scas
jo
push
pop
adc
jnp
test
pop
ror
insb
lock
repz
es
pop
divb
sub
in
dec
jp
or
movsl
and
jl
ljmp
xor
and
xor
ret
fdivl
sti
and
add
and
test
xchg
mov
mov
loopne
mov
adc
add
pop
rolb
ljmp
xlat
inc
mov
jmp
in
push
cmpl
dec
mov
stc
jge
or
mov
xchg
mov
ds
mov
arpl
repz
adc
js
aas
inc
push
mov
jbe
js
push
lds
xor
mov
sbb
and
pop
jmp
ret
jbe
and
movsb
mov
and
test
ds
jne
inc
mov
adc
and
ljmp
xchg
icebp
loopne
xchg
mov
add
test
mov
mov
jae
scas
test
mov
icebp
push
mov
das
fiadds
jge
mov
mov
jmp
xchg
sub
jmp
xchg
or
loopne
icebp
cs
push
inc
or
std
sub
insb
cmpsl
xchg
mov
jo
icebp
add
mov
push
adc
add
cmp
sti
fcomi
adc
mov
imul
repz
test
ret
jge
add
sbb
lcall
adc
xor
lods
popw
mov
ja
aad
insl
mov
test
scas
loop
xor
adc
sub
push
cmp
jle
insb
mov
aaa
pop
mov
cmp
shlb
outsl
cmpsb
push
adc
mov
inc
scas
sbb
lret
iret
mov
mov
xor
and
fldl
popl
cwtl
sub
pop
and
adc
jmp
add
testl
cmc
insl
data16
pop
mov
push
movsl
xor
aad
adc
pop
pop
loopne
cmp
and
shl
out
mov
push
jge
lods
hlt
lock
or
add
ljmp
nop
leave
pop
push
mov
pop
rolb
cmp
inc
loopne
xor
cmp
bnd
jle
fs
jmp
ret
mov
mov
mov
in
and
adc
mov
mov
fs
in
push
dec
inc
pop
ja
sbb
jne
test
mov
jecxz
test
aam
xor
inc
dec
dec
filds
scas
jb
aas
push
xlat
cmpsl
in
add
inc
shrb
rcll
jb
fdivrs
mov
fistpll
pop
xchg
push
shrb
dec
sti
push
inc
xlat
sti
bnd
jp
xchg
cli
add
pop
in
pop
cld
js
es
rcll
das
sbb
aas
arpl
out
lods
test
jb
ja
mov
sbb
scas
icebp
adc
pop
cmpsl
dec
ljmp
aad
inc
mov
js
test
push
cmp
cli
sub
dec
frstor
jb
sub
cmp
push
shl
stos
jo
and
arpl
and
cmpsb
ficomps
fwait
pop
sub
popf
mov
or
in
and
push
fwait
pop
adc
sub
sahf
adc
xor
mov
icebp
xor
je
call
dec
sub
pop
mov
mov
sub
in
or
push
inc
xchg
jae
mov
jp
in
fs
ljmp
and
cmp
xor
mov
mov
das
sbb
pop
aaa
insb
call
cltd
aad
mov
ret
mov
gs
push
pop
push
fists
push
aad
or
push
pop
mov
dec
jmp
xchg
jecxz
sub
rorb
loop
add
ret
cmova
lea
add
xchg
in
jge
popa
call
out
hlt
mov
dec
cmpsb
jae
adc
rorl
icebp
fldt
es
and
jb
pop
mov
inc
in
mov
aam
mov
fcomps
mov
fildll
imul
in
rcrl
cmc
adc
jae
shll
std
rol
push
cld
in
mov
sbb
add
or
inc
pop
jge
loope
imul
add
add
jmp
loope
jns
loopne
add
loop
and
jmp
cmp
pop
push
pop
pop
or
adc
cwtl
xor
outsb
push
inc
add
push
fmull
cmpsl
pop
std
cmp
icebp
or
movsb
aaa
or
test
fdivs
xchg
ds
jle
push
mov
mov
lock
jb
movb
sub
mov
outsl
pop
and
mov
inc
pop
dec
pop
mov
pop
lock
or
or
imul
stos
inc
pop
lcall
mov
js
sbb
jb
jecxz
mov
out
push
fisttps
and
fidivrl
loope
jae
xchg
and
fidivrl
add
inc
fucomi
nop
add
fisttpl
leave
lret
add
or
cltd
into
cmc
add
jnp
stos
aad
add
cs
cmc
lahf
push
rol
movsl
or
data16
pop
scas
lea
aas
test
loopne
mov
mov
rcl
bound
cmp
push
push
mov
addl
hlt
shl
inc
fldl
mov
sahf
xorb
cmpsb
test
test
push
scas
jnp
sub
pop
lret
pop
jbe
and
and
out
and
push
sahf
imul
jns
icebp
push
adc
cmp
mov
rcrl
or
aaa
adc
sub
or
cld
enter
xchg
xchg
add
sbb
push
imul
and
mov
mov
sub
mov
arpl
sub
test
sbb
sbb
mov
aad
hlt
adc
cmp
test
ljmp
test
loope
jns
xchg
scas
mov
and
xor
sub
ret
cli
mov
int3
faddl
pop
addl
mov
and
fcmovnbe
jb
mov
dec
add
sub
ficoms
in
test
mov
inc
sbb
imul
and
shl
or
xor
outsb
ja
lret
shlb
and
cmpsb
test
mov
aas
or
and
xlat
mov
repz
aas
int
sbb
push
adc
fbstp
pop
ret
or
cmpsl
es
xchg
fildl
andl
add
cmpb
adc
sbbb
lods
mov
or
cmp
scas
or
jns
ss
mov
pop
nop
ljmp
adc
push
add
and
mov
mov
or
fsubs
lods
fdivrp
pop
push
aaa
pop
jp
out
mov
iret
xchg
pop
or
insb
movsb
icebp
mov
out
push
cmp
repz
jb
repz
popf
and
subl
or
icebp
adc
dec
mov
push
lods
pop
scas
ficoml
jns
popl
pop
testl
inc
add
pop
pop
shlb
popa
add
hlt
aaa
jns
sbb
js
mov
cmp
aad
cmp
inc
jne
xchg
pop
ret
pop
fcmovnb
in
mov
mov
push
outsl
mov
je
into
adc
jge
push
cmp
call
into
jo
add
fsubl
push
adc
pushf
dec
dec
cmp
icebp
pop
int
cld
mov
mull
int
popf
add
lret
mov
out
ss
imul
ret
ds
popf
inc
test
adc
dec
mov
repz
popf
jbe
sbb
mov
pop
inc
mov
sub
inc
fnstsw
mov
adc
pop
shr
shlb
xchg
push
das
mov
fistps
sub
push
add
js
cmc
add
loope
push
das
lcall
jg
dec
aad
adc
ljmp
test
xchg
or
ret
insl
pop
in
lock
push
cmc
pop
loope
imulb
push
mov
mov
clc
xor
pop
in
pop
cmp
or
push
imul
insl
xor
shl
outsb
iret
and
iret
or
xchg
push
and
sbb
out
fwait
aas
cmp
or
mov
aas
testl
and
mov
mov
sub
outsb
int3
mov
test
mov
mov
movsl
or
xor
adc
push
xchg
push
out
sub
dec
xchg
pop
scas
jg
mov
inc
bound
cld
ret
mov
mov
add
arpl
loopne
jl
aaa
mov
mov
jns
fisttpl
fldl
aas
pushf
jne
inc
fisttpll
sbb
fldl
pushf
mov
rolb
rorl
jle
mov
dec
and
dec
ljmp
aas
cli
jnp
test
push
dec
fcmovnb
push
add
jo
mov
aas
outsb
shr
xchg
sbb
or
inc
dec
sbb
xchg
in
mov
movsb
out
mov
sub
dec
sti
ja
ljmp
in
cltd
dec
mov
mov
mov
imul
mov
push
dec
mov
xor
pop
adcb
aas
loopne
pushl
out
cmp
mov
pop
incl
pop
mov
dec
cmpsb
push
outsl
int
hlt
rcll
add
adc
jmp
stc
cmpsl
out
aaa
movsl
mov
lret
and
out
icebp
loop
cmp
mov
mov
inc
movl
xor
test
outsl
lcall
add
sub
adc
mov
frstor
mov
mov
lret
sub
pop
testl
loop
push
cmp
pop
push
dec
arpl
das
sbb
sbb
pop
lods
mov
jle
push
inc
dec
mov
mov
nop
fadds
inc
les
repnz
jmp
xchg
insb
aam
aam
imull
jo
pusha
fidivrs
out
test
rcrl
sub
jbe
mov
in
jnp
jnp
jecxz
pop
mov
push
cld
mov
cmp
jno
mov
mov
sub
movsb
adc
add
outsb
mov
scas
jno
adc
push
das
test
xchg
int
jl
popa
push
jp
mov
shl
cli
ds
adc
not
les
rcrl
jae
and
loop
pop
orl
std
cld
inc
cli
aas
adc
push
adc
iret
add
mov
mov
lock
cmpsl
mov
jl
dec
rorb
jle
data16
mov
jae
dec
push
mov
cmp
inc
je
and
xor
jge
into
xor
mov
push
pusha
loopne
dec
sub
sbb
inc
xlat
fmuls
je,pt
stos
test
xor
ret
loop
mov
sbb
cmp
push
and
outsb
fstpt
mov
loope
adc
jl
xlat
mov
pop
jl,pn
lods
and
add
test
add
sbb
cmp
mov
mov
jp
mov
out
mov
mov
cmpsl
sbb
fldl
aad
dec
leave
testl
push
lds
sar
lds
jmp
inc
dec
lret
mov
leave
out
test
adc
rcl
je
ret
arpl
xorb
loope
fists
mov
fsubl
push
bound
mov
rorb
push
jecxz
xchg
pop
loop
mov
cmp
xor
test
or
cli
xlat
xchg
scas
sbb
fmuls
xor
inc
ljmp
xchg
inc
imul
shl
ja
loop
mov
lcall
cmc
lock
faddl
fcmovnbe
fidivrl
ja
faddl
cmpxchg
jns
out
test
sbb
cmp
into
cli
bound
out
jg
flds
icebp
movsb
orb
jne
and
add
inc
test
out
inc
mov
jns
bound
andb
icebp
mov
scas
mov
pop
into
imul
pushf
or
lods
pop
js
cmp
mov
pop
loopne
sub
push
push
push
mov
int
sti
js
mov
mov
fld
sbb
aaa
cltd
lods
mov
cwtl
cmp
leave
std
call
cmpsl
enter
fcompl
add
pushf
add
cmp
xchg
out
pop
pop
jo
frstor
icebp
rorl
mov
test
push
and
jbe
sbb
adc
mov
mov
je
out
mov
je
int
jecxz
inc
lock
decb
fwait
mov
sbb
enter
mov
push
jb
leave
pop
rcl
cmp
sahf
ret
outsl
xor
out
or
dec
roll
inc
mov
sbb
and
imull
addb
jp
jb
lods
mov
out
cli
jge
jmp
inc
xchg
cmpsb
mov
and
sub
push
mov
mov
mov
xchg
adc
out
push
pop
testb
rcl
adc
xor
jb
shll
test
mov
outsb
inc
ja
out
popf
int
inc
outsl
mov
pop
inc
setbe
es
cld
aad
inc
or
xchg
xchg
push
imulb
jno
pop
loop
mov
mov
fdivrl
or
xor
lock
sarb
in
arpl
adcl
out
addr16
add
fistpll
sti
js
fldz
es
popa
add
adc
adc
in
xor
out
xchg
cli
int
imul
outsl
aam
cmc
das
mul
xchg
jg
mov
in
ret
ret
xchg
jbe
mov
jp
mov
push
cli
mov
push
sahf
aam
outsl
jl
cwtl
jge
fsub
divl
xchg
test
mov
rcl
cmp
or
loopne
mov
call
mov
popa
and
fsubrl
mov
inc
mov
leave
sub
mov
sbb
jg
xlat
dec
or
mov
aam
orb
pop
testl
fs
inc
inc
movsb
inc
cmp
ja
mov
mov
or
inc
mov
mov
aad
cmp
xor
pop
pop
push
aaa
insl
mov
lahf
arpl
fwait
dec
or
jo
pop
jnp
xchg
mov
jmp
insl
imul
mov
insl
arpl
out
imul
dec
sub
in
dec
dec
arpl
pop
sbb
fnsave
lds
and
dec
inc
jne
pop
inc
cli
dec
pop
dec
lock
jmp
in
xchg
repnz
js
in
push
dec
push
jns
jle
mov
lcall
hlt
and
mov
arpl
jge
ss
mov
dec
ret
add
cli
movsb
out
add
xchg
xchg
xchg
jle
es
push
mov
jbe
mov
fnsave
jge
stc
andl
call
jmp
mov
insl
xlat
fwait
scas
das
push
jl
emms
and
insb
mov
ja
scas
insb
cmp
test
push
ret
xchg
in
dec
xor
arpl
jg
outsb
pop
cmp
ret
fiadds
mov
xor
push
les
mov
xor
cmp
mov
imul
aad
fcmovu
test
pusha
call
je
add
pop
mov
aaa
leave
mov
mov
nop
movsl
jecxz
jmp
shl
andl
mov
mov
frstor
rcl
movsl
xchg
xor
leave
pop
iret
cmpsl
iret
add
loope
jecxz
out
adc
mov
insb
enter
sti
pusha
or
push
fistpll
mov
and
mov
push
xor
les
lock
push
add
ds
xchg
pop
call
push
push
lock
cmpsl
xor
aas
sbb
ds
inc
loopne
ds
repz
dec
pop
shr
iret
jge
sbb
cmp
jl
cmp
pop
mov
test
pop
mov
push
fucomi
sbb
insl
cmpsl
sub
mov
jge
mov
lahf
lods
sbb
cmpsb
and
arpl
mov
add
mov
lods
add
cmp
adc
mov
pop
dec
inc
xlat
outsb
lds
lret
push
lock
or
sub
in
mov
scas
in
testl
jge
jl
inc
inc
add
imul
imul
or
xorb
loopne
and
or
test
sbb
out
sbb
pop
fcomps
loopne
push
shl
or
add
sar
pop
fucomi
pop
or
xor
jae
call
fmuls
push
lret
loop
pop
rcrb
dec
je
push
or
scas
and
xchg
leave
stos
mov
in
adc
fbstp
add
xchg
mov
test
adc
je
hlt
jne
pop
xchg
scas
cmp
loop
test
adc
add
scas
or
or
adc
jmp
and
and
frstpm(287
lock
aaa
mov
pop
cld
push
jmp
sub
push
mov
add
inc
lods
sub
jle
aaa
mov
add
cli
inc
mov
sub
add
xor
pop
icebp
adc
dec
pop
loopne
jle
mov
mov
xor
sarb
gs
popa
xchg
sbb
adc
fsubs
sbb
sub
jne
dec
mov
mov
pop
testl
add
jnp
stos
outsl
xor
scas
mov
andl
cli
and
mov
scas
sbb
jp
mov
cmp
jno
ret
cmp
fwait
mov
lret
in
lods
mov
icebp
mov
inc
cli
inc
insl
jl
jg
fs
daa
mov
pop
pop
xchg
cs
pushf
stos
jecxz
shl
xor
cmpsl
sub
lret
sbb
loope
adc
mov
adc
jae
push
push
sbb
add
or
enter
jne
sub
sub
push
mov
in
and
aad
iret
test
stos
test
push
and
loop
add
gs
sub
mov
pop
enter
sub
mov
sbb
popf
jno
rcrl
sbb
das
jge
xchg
test
mov
jmp
out
roll
dec
push
inc
daa
out
andl
xlat
dec
mov
pop
jl
push
xchg
and
daa
js
aad
cltd
cs
mov
and
sub
mov
push
fcoms
mov
push
pop
das
stos
sub
add
jle
mov
adc
int
je
out
cwtl
inc
push
cmp
push
jnp
push
es
in
mov
jecxz
pop
cmp
repnz
in
cmp
jmp
shll
jo
cltd
mov
dec
arpl
dec
mov
xchg
dec
out
pop
roll
out
push
pop
jl
mov
inc
mov
mov
jo
and
add
pusha
cmp
add
jne
mov
lods
stos
imull
add
mov
imul
jo
sub
xchg
cmc
addr16
gs
xchg
xchg
xchg
fucomp
adc
fsubs
loope
and
aaa
mov
sub
pop
mov
sub
add
gs
mov
dec
cmpsl
xchg
mov
push
in
mov
xchg
xor
dec
gs
cmpsl
sbb
adc
add
inc
inc
addr16
addr16
xor
scas
adc
enter
out
sbb
sub
outsb
test
push
icebp
push
adc
sub
push
je
loopne
in
xor
testl
mov
add
cli
or
fucomi
leave
mov
xchg
out
dec
data16
aad
or
mov
cli
mov
mov
sub
jl
sbb
hlt
inc
adc
js
inc
icebp
dec
rep
cwtl
sub
adc
je
pop
loop
sbb
addr16
mov
scas
mov
sti
or
movsl
fisubl
sbb
inc
sbb
dec
sub
in
scas
xor
loopne
in
mov
addr16
push
imul
rcr
rolb
fcoml
imul
push
addr16
ret
pop
or
add
sti
pop
jg
mov
cmp
imul
ja
mov
cld
shrl
adc
std
call
jae
and
sbb
sbbb
and
jb
jmp
stc
xchg
enter
xor
add
mov
and
mov
add
push
jmp
push
sbb
mov
push
mov
in
ret
into
lea
dec
jg
mov
sub
push
std
loop
lods
push
ds
testl
dec
and
lcall
dec
mov
pop
xchg
out
in
sbb
ret
fcmovnbe
out
mov
outsb
lea
mov
cmp
adc
popa
pop
jo
mov
daa
sarl
or
or
and
mov
lods
icebp
xchg
push
outsb
dec
jne
stos
fidivrs
sbb
push
xchg
mov
sbb
out
push
inc
les
pop
pop
and
cmp
cmp
push
pop
es
out
dec
pop
repz
push
cli
pop
out
test
pop
mov
cs
fcmovu
shrb
cmpsl
insl
in
gs
adc
xchg
mov
pop
cld
loope
adc
out
rol
cld
cmpsl
in
cmp
push
bound
jl
daa
push
fsubrl
jecxz
lock
ja
or
outsl
jbe
xor
imul
adc
inc
xor
push
lock
pop
cmpsb
push
clc
leave
xchg
sbb
cmp
mov
jp
inc
daa
fwait
les
push
lea
sbb
test
fstpt
pop
mov
shlb
ds
arpl
lds
sub
xchg
insb
rol
xor
xlat
shlb
je
or
loopne
cmp
movsb
mov
jne
in
daa
mov
mov
cmp
xchg
rorl
push
icebp
lock
aas
jmp
adc
mov
sbb
xchg
push
add
pop
pop
sbb
shrb
ficoms
fcmovnbe
dec
mov
xor
fsubl
bound
push
nop
mov
lds
adc
nop
jae
add
outsl
mov
ds
push
mov
dec
inc
fisubrs
pop
mov
and
mov
jnp
mov
daa
cmpsb
mov
sub
jb
fsubl
xchg
stos
sbb
fidivrs
inc
cltd
vpmaxub
inc
jae
or
xor
push
sub
gs
xlat
hlt
mov
sar
les
shl
data16
imul
scas
xor
in
add
test
jg
fcoms
call
call
jmp
jecxz
add
test
bound
leave
xchg
cs
sub
mov
iret
sarl
cmp
push
jl
sahf
inc
push
add
adc
and
dec
mov
push
stos
adc
push
mov
dec
xor
iret
rol
and
inc
sbb
mov
xchg
insb
cmp
cmp
mov
lret
loopne
or
dec
push
leave
push
cmp
xchg
insb
and
mov
xchg
add
push
shl
push
jb
mov
add
cmp
adc
sbb
pushf
sahf
jp
pop
pop
inc
std
mov
push
in
inc
push
sbb
add
lahf
push
mov
not
xor
pop
push
mov
add
push
js
add
push
enter
dec
add
ljmp
xchg
loop
and
fcmovnb
mov
popf
push
adc
mov
jp
sub
icebp
incb
lds
iret
xor
push
pop
insb
insl
pop
cltd
mov
js
pop
xchg
fisubrs
mov
push
scas
shll
aam
in
dec
scas
or
xor
mov
mov
adc
and
push
lahf
mov
jae
out
mov
subl
add
cmp
or
popa
jmp
push
xchg
push
std
mov
jp
add
scas
andb
xchg
lock
pop
rcrb
fstl
push
mov
sub
push
fdivs
or
mov
xchg
mov
outsl
mov
incl
lahf
ja
and
push
ret
mov
push
push
int
lahf
xor
mov
lahf
mov
pushf
std
mov
cmp
sbb
sub
icebp
ret
push
test
test
push
mov
push
dec
fwait
in
mul
pop
xor
mov
ret
pushf
inc
xor
loop
fbstp
mov
icebp
dec
push
out
mov
xor
movb
mov
shll
les
sub
ja
pop
inc
sbb
cli
inc
lods
mov
cmc
mov
call
int3
mov
aam
jg
inc
insl
pop
dec
rcrl
shll
push
push
ret
mov
into
or
leave
push
adc
pop
and
aas
mov
ds
stos
lret
pusha
fiaddl
pop
xchg
inc
inc
loope
aas
stos
mov
jle
inc
test
mov
fmuls
adc
push
cmp
lods
lea
cmp
sbb
mov
sbb
jle
lret
and
xor
jmp
imul
daa
mov
mov
addl
jecxz
test
xchg
repnz
adc
or
jge
pop
or
cmp
cmp
pop
test
cwtl
sahf
clc
push
insl
fdivrl
xchg
sub
frstor
fcmovnb
imul
lock
adc
imul
ret
inc
fcoml
jno
jle
jle
jbe
testl
cmpsl
incl
movsl
dec
stos
ret
sub
xor
in
jnp
scas
fcompl
shrl
jbe
leave
imul
arpl
pop
jle
bound
add
push
incl
stos
arpl
test
andl
loope
ret
fsub
pop
push
push
les
int
mov
cmpsl
xor
js
dec
int
pop
popf
pop
sbb
mov
mov
and
cwtl
sub
inc
add
inc
faddp
pop
pop
mov
in
pop
inc
imul
cmp
sub
sti
fisttpl
push
sti
pusha
xchg
mov
add
movd
adc
mov
shrb
push
push
mov
test
cld
xchg
lock
cmp
inc
xor
jns
push
pop
int
push
xchg
daa
fimuls
test
aad
mov
sbb
aam
cs
popa
mov
or
xchg
loope
jne
popa
xorl
jle
mov
pusha
sahf
outsl
insl
stos
mov
in
mov
add
rclb
cmpsl
push
adc
aad
jo
pop
xor
mov
push
ja
adc
ja
pop
mov
fcomp
adc
js
adcb
sub
xchg
mov
ret
jne
mov
fldt
lock
mov
sar
js
or
pusha
flds
xchg
lds
notb
aad
mov
push
rorl
aas
jle
pop
add
mov
ljmp
xchg
loope
in
outsl
fcomp
loopne
shlb
ja
aam
adc
xchg
in
add
jns
adc
mov
inc
jge
adcb
dec
sbb
outsl
std
into
mov
ds
adc
xchg
cmp
js
push
aas
push
inc
das
xchg
rcrl
pop
inc
rolb
or
sahf
adc
inc
loope
and
sub
scas
xor
sub
andl
mov
lds
jb
fs
scas
movsb
sbbb
pop
pusha
adc
aaa
xchg
xor
icebp
and
sahf
subw
fmul
arpl
push
movsl
les
xor
inc
pop
out
faddp
push
jae
popa
or
test
ret
filds
dec
and
iret
push
jnp
daa
jno
dec
mov
push
lods
sub
stos
sti
subb
aam
int3
and
and
imul
fildll
lahf
das
sub
inc
mov
sub
out
pop
fiaddl
xlat
movsb
bound
test
mov
mov
dec
pop
add
mov
mov
jbe
pop
mov
xchg
dec
insl
dec
mov
dec
loop
shll
dec
aas
fmuls
jae
cwtl
lock
xlat
jo
aas
loop
cmc
adc
enter
sti
or
push
outsl
ds
mov
or
push
jnp
add
pusha
mov
aas
arpl
mov
jge
out
add
test
andb
inc
push
je
imul
outsl
out
sbb
or
adc
jne
inc
push
and
lods
jecxz
outsb
inc
mov
daa
stos
dec
jns
sub
lea
jns
call
leave
inc
fldenv
cmp
mov
sti
xchg
sti
insl
test
jmp
pop
push
dec
popl
mov
mov
push
push
push
mov
ja
fwait
mov
das
scas
xor
adc
push
call
lcall
jl
out
mov
scas
mulb
shrl
xlat
lahf
cmpsl
iret
lret
cmp
or
lahf
xor
outsl
testl
cli
xchg
mov
adc
add
lds
or
or
push
xor
faddl
cmp
jae
and
add
daa
aas
mov
popa
fisubs
mov
mov
pop
stos
in
jle
xchg
xchg
sbb
fwait
cmp
and
outsb
fcomps
inc
jg
cmpsb
scas
add
arpl
xchg
add
daa
clc
xor
cmp
add
sahf
out
stc
testb
pop
mov
pop
dec
test
movsb
ss
dec
push
and
data16
setns
mov
sar
jbe
cli
pop
inc
in
dec
addb
es
xchg
adc
sub
xor
cmp
out
arpl
aam
fldt
cmc
imul
pop
sbb
inc
shll
jne
outsl
aad
fdivrs
xchg
addl
mov
jb
aaa
pusha
jnp
mov
cmp
ret
ret
jbe
pop
pop
es
movsl
mov
stos
dec
cli
push
aas
sbb
jl
cmp
add
fsubs
in
push
mov
xor
ficoms
vcvtpd2psy
pop
jle
ffree
add
cmp
pop
pop
popa
movsb
cmpsl
lods
pop
in
pop
pop
xchg
adc
sti
aad
fdivs
pop
push
mov
jbe
test
hlt
add
sbb
push
ret
lods
push
inc
lea
push
pop
pop
nop
stos
jecxz
push
xor
fdivs
ret
insb
sbb
push
clc
cmpb
sbb
mov
fidivrl
loopne
cmp
es
insb
lahf
mov
xbegin
outsb
mov
imul
push
mov
lods
ret
loop
mov
std
cmpsb
cs
push
or
out
or
dec
push
outsb
pop
cmp
stc
push
sub
adc
test
jge
pop
cmp
xchg
add
out
inc
pop
mov
sub
hlt
iret
cmp
sbb
push
ret
rcr
dec
je
test
dec
jno
sbb
mov
sti
mov
push
sarl
lcall
jnp
jne
int
xchg
sub
mov
insl
and
sub
and
add
or
push
push
in
mov
scas
mov
adc
testl
and
orl
mov
adc
xchg
stos
push
sub
or
jl
and
add
sbb
or
mov
mov
jns
xchg
cltd
mov
cmp
xor
gs
int3
and
aam
fwait
cmp
sbb
dec
repnz
jnp
clc
xor
stos
pop
js
adc
jo
push
adc
loop
xchg
mov
idivb
dec
inc
rcr
sahf
push
sbb
mov
push
xor
repnz
xorb
and
nop
out
sahf
jecxz
push
ret
pop
and
mov
sti
pop
stos
mov
shlb
jge
into
test
push
jne
test
mov
and
adc
stos
lret
pusha
cwtl
out
xchg
mov
mov
xor
inc
mov
lods
and
fsubrp
dec
inc
repz
xor
fisttpll
sahf
sub
sub
ja
mov
sbb
jb
adc
sbb
jbe
push
addr16
mov
cmpsb
test
mov
xchg
idivb
movsl
or
pushf
movsl
xchg
fs
mov
dec
icebp
test
cmp
mov
or
or
sahf
or
ds
push
xor
call
loopne
xor
mov
jle
addr16
mov
lcall
imul
jnp
jo
xor
or
xor
sub
addr16
dec
dec
stos
cmp
shll
outsb
pusha
pop
movsl
scas
cmpsb
das
pop
mov
xchg
sub
gs
pop
lcall
in
push
sub
andl
stos
dec
push
ljmp
adc
add
pop
or
and
cmp
clc
shlb
int
in
add
mov
inc
test
loopne
jge
sub
adc
test
jg
pop
rcrb
imul
cli
rcl
icebp
stos
pop
push
loopne
clc
cmc
mov
fisubrl
xor
push
fwait
aas
cmp
lods
sub
or
mov
inc
jbe
incb
jbe
imul
sbbb
mov
adc
cmp
lret
mov
adcl
cmp
jecxz
mov
or
iret
and
xor
adc
push
mov
mov
dec
cmpsl
sbb
test
jno
lods
or
add
sub
into
ss
in
dec
ds
push
adc
mov
jmp
loope
jne
push
push
and
js
jbe
lret
out
addl
rorb
jg
mov
in
cmp
cmovne
mov
lea
pop
fnstcw
xchg
rorb
jo
adc
jb
pop
xor
inc
push
jl
insb
inc
clc
mov
repnz
mov
sub
hlt
hlt
andb
jb
cmpsl
cli
lock
mov
add
jb
pop
aam
or
xor
mov
test
shll
push
add
pop
lret
push
loope
mov
jae
test
cltd
inc
mov
out
adc
mov
imul
push
rolb
cmp
inc
pop
adc
inc
push
popf
cmp
mov
mov
in
dec
fsubrl
sub
mov
lret
xchg
or
insb
fdivl
ds
in
jo
cli
adc
lret
xor
out
loope
cmc
test
lea
adc
stos
fisubrs
cmp
jb
cmpsb
add
pushf
aam
cmp
lods
repnz
mov
jae
inc
test
sbb
pop
inc
lcall
xchg
fiaddl
ror
adc
jae
rclb
pop
inc
add
mov
jns
inc
and
lock
jo
js
adc
enter
sahf
mov
adc
jg
and
dec
push
pushf
sub
sbbl
cmpsl
pop
js
sub
adc
js
mulb
inc
std
xchg
push
inc
shll
jb
cmp
stos
push
aad
sbb
sahf
sbb
jge
jg
into
ja
fstl
dec
adc
push
push
and
mov
fucomi
fnstsw
dec
jnp
mov
or
mov
das
push
mov
mov
adc
push
ja
das
xlat
js
das
jno
jg
imul
sub
jne
push
pop
or
jecxz
jg
out
xchg
push
out
dec
sti
sahf
jnp
add
mov
mov
jnp
imull
or
push
mov
iret
add
and
sbb
or
in
mov
leave
lret
lods
inc
flds
pop
daa
imul
inc
into
jo
pop
or
lahf
mov
out
shrb
pop
mov
aaa
jge
push
pop
les
int3
lret
mov
mov
pop
mov
fadds
sub
out
rol
mov
jp
sbb
es
mov
adc
mov
xorb
jbe
push
gs
sub
push
jge,pt
call
popf
add
push
jle,pn
ret
add
data16
pop
std
lds
push
dec
cld
fisubrl
dec
or
inc
mov
ret
xchg
imul
sti
add
rcrb
shll
pop
cwtl
addb
dec
movsb
sub
pop
fidivl
ret
in
aas
ss
jns
push
out
test
test
mov
inc
mov
dec
adc
lcall
pop
push
mov
and
nop
push
pusha
vpackssdw
sub
adc
scas
jo
pop
fwait
sti
sbb
incb
fadds
push
scas
addl
jo
negl
repnz
rcl
popf
dec
mov
shll
mov
mov
loopne
xlat
notl
jb
dec
inc
setg
xlat
add
mov
lahf
jl
inc
cmp
mov
daa
inc
fidivl
loopne
adc
pop
aam
jb
jl
insb
xchg
mov
xorl
andb
xchg
mov
dec
test
add
imul
outsl
mov
aas
das
addr16
or
cmpsb
or
or
lcall
cltd
cmp
stos
add
call
je
jne
dec
rorb
ja
xor
and
cld
sbb
jmp
dec
and
xchg
xor
insb
jle
loopne
mov
sub
jnp
push
jo
int
fiaddl
mov
sub
imul
push
sbb
adc
lds
pop
jne
inc
jo
rorb
ffreep
mov
lods
push
out
add
mov
pop
fistpl
idivb
or
inc
mov
negb
push
push
cmp
sbb
pusha
popa
mov
cli
mov
das
addr16
jbe
ds
sub
jne
adc
pop
or
mov
push
je
inc
xor
pop
push
sbb
jg
sti
and
dec
lock
push
mov
scas
notl
pop
fwait
arpl
jl
outsb
movsb
ja
test
lret
jb
push
cmp
pop
scas
stos
push
inc
cmc
test
pop
xor
inc
scas
adc
add
jg
out
push
adc
xor
shrb
insb
fcompl
push
pop
push
int
add
inc
dec
sbb
jo
mov
lret
aam
pop
xlat
sbb
add
mov
stc
ds
aad
xor
outsb
das
xchg
mov
push
adc
add
xchg
jns
lock
pop
xor
lea
ljmp
xchg
jp
xchg
mov
test
mov
mov
mov
xor
dec
push
xlat
popf
jno
stos
cmc
loopne
test
dec
mov
mov
ja
push
xchg
push
push
sti
jbe
jge
mov
inc
int
dec
or
pop
xor
push
mov
jle
ds
cltd
pop
push
and
adc
jo
loopne
push
jnp
or
fisubs
jg
in
and
jge
cmp
jl
jle
push
je
les
in
sbb
cmp
push
js
enter
cmp
rclb
inc
aas
ds
mov
aas
add
mov
stc
popf
in
jae
je
sbbb
dec
inc
jl
lods
push
and
pop
fiadds
xchg
push
xchg
xchg
in
das
mov
lcall
xchg
cmp
mul
and
mov
xorl
call
inc
xor
dec
mov
jne
dec
and
mov
push
push
dec
or
fwait
push
nopl
jbe
inc
adcl
mov
mov
sbb
or
mov
xchg
lea
jge
sbb
aaa
cmp
fsubr
lock
mov
rcrb
or
sti
cmp
mov
aad
push
dec
int
mov
or
imul
sahf
ljmp
sub
fwait
dec
insb
sub
xchg
push
rcr
or
inc
notl
xchg
or
outsl
fisttpll
add
scas
pop
add
cltd
push
mov
fbld
xor
mov
xor
outsb
mull
mov
mov
add
push
jp
lret
jle
cmp
mov
sub
or
or
inc
add
xor
mov
aaa
icebp
jmp
inc
or
icebp
adc
push
pop
xor
fisubl
cmpsb
sub
push
cmp
and
jne
ret
mov
outsl
sbb
aam
or
movsb
mov
pop
jne
mov
push
hlt
shll
and
inc
arpl
sub
aas
fucomp
add
or
pop
icebp
inc
cmp
clc
adc
sub
and
mov
loop
mov
mov
inc
mov
pop
add
cwtl
xchg
scas
adc
lock
or
mov
xchg
fcoml
cmp
mov
mov
or
popa
xchg
inc
inc
cmpsb
push
jg
out
test
mov
sub
fwait
xchg
cvtdq2ps
pusha
rorl
les
and
je
daa
add
test
loope
ret
push
mov
inc
pop
aas
xor
faddp
inc
fbstp
xchg
shrl
cltd
adcb
mov
repnz
aaa
mov
aam
ss
add
hlt
mov
out
loope
neg
mov
pop
cld
loop
dec
xchg
stos
mov
faddp
jle
loope
pusha
ret
sbb
mov
pop
nopl
sub
push
fcoms
push
fimuls
cmp
or
insb
pop
movsl
call
mov
push
sbb
mov
push
xlat
mov
cmpsl
and
testl
ja
cltd
imul
jp
and
jne
jae
or
outsl
out
push
data16
xor
dec
dec
mov
mov
ss
xchg
das
div
sti
and
loop
outsb
aad
loopne
shll
fcoms
sbb
icebp
jne
push
jp
jmp
rcrb
xor
pop
idiv
jecxz
leave
mov
mov
lea
mov
sbb
add
ret
stc
sbb
in
jmp
call
daa
push
mov
imul
lcall
sub
xchg
xchg
les
cld
add
inc
ja
pop
push
outsl
stos
pusha
cmp
xor
mov
jae
adc
jnp
xchg
mov
aaa
add
pop
out
lods
bound
loope
aam
push
out
cli
outsb
sbb
lds
insl
push
and
rcl
add
jo
cmpsb
dec
pop
movsb
outsl
mov
.byte
mov
adc
or
push
je
imul
add
push
mov
cmp
outsb
jg
je
mov
fs
inc
lea
dec
lea
cmpl
outsl
mov
inc
cmp
jl
lea
add
xlat
std
in
jo
mov
dec
add
mov
xchg
xchg
inc
inc
inc
inc
inc
dec
mov
mov
jbe
mov
jno,pt
xchg
and
push
xor
fildl
call
imul
add
fcmovne
and
loopne
inc
lock
inc
mov
push
adc
lea
in
outsl
push
or
adc
cmpb
das
fisttps
push
call
cs
mov
incl
cmp
mov
jbe
add
and
xchg
adc
or
and
xchg
cld
lea
dec
dec
ret
lea
lcall
notb
in
push
test
ret
jmp
insb
nop
in
add
psubusb
push
aam
int3
nop
inc
push
sbb
rolb
fs
fs
mov
test
sbb
clc
hlt
lock
or
call
pushl
cmp
out
cld
push
mov
in
jle
arpl
je
adc
jmp
loop
pop
cmp
ds
fsubr
fisttpl
add
or
mov
in
in
pushl
add
aas
add
out
ljmp
std
out
fistpll
loop
jae
dec
mov
inc
loop
mov
ja
iret
std
lret
mov
xor
pop
pusha
pop
out
mov
adc
jne
or
inc
cmc
mov
mov
sti
pop
xor
clc
adc
repnz
mov
push
roll
rcll
ljmp
ret
ds
pop
cmpsl
shll
push
dec
mov
mov
addr16
cmp
dec
aaa
dec
cli
imul
je
bound
sbb
divl
out
ret
mov
mov
fistps
add
inc
repnz
mov
mov
cli
dec
mov
jbe
mov
rcrl
xor
pusha
clc
outsb
xlat
fldl
mov
fwait
adc
fwait
xchg
movsl
pusha
popf
sub
pusha
mov
push
test
mov
dec
aaa
subl
mov
or
in
mov
ss
mov
push
movsl
clc
or
inc
inc
xchg
fstpl
mov
in
lea
mov
cmc
mov
into
mov
mov
fstl
xchg
inc
inc
mov
scas
insb
adc
pop
fcomip
pop
test
and
cmp
sbb
mov
dec
dec
dec
xor
lea
xchg
std
jle
sub
scas
inc
cli
pop
sbb
xchg
xor
dec
mov
pop
mov
pop
fisubs
loope
sarl
sti
out
mov
cli
dec
ds
mov
scas
mov
cmc
mov
lods
ficompl
mull
sbb
mov
or
cmp
mov
push
jmp
jl
lgs
mov
mov
push
lea
popf
mov
cmp
mov
lea
movsl
or
fisttpll
sbb
imul
cmp
jmp
popa
push
test
jnp
call
xlat
jno
rorl
dec
add
mov
mov
pop
cmp
js
pop
xor
push
dec
out
cmc
mov
dec
out
mov
aaa
xchg
popa
adc
gs
aas
or
icebp
cmp
ja
pop
icebp
insb
adc
adc
mov
push
dec
arpl
dec
cli
adc
add
xorb
dec
daa
clc
mov
movsl
lcall
pop
push
repnz
fbstp
and
adc
pop
ljmp
mov
adc
cmp
xchg
push
push
ja
es
das
cmp
xlat
aad
ret
mov
adc
mov
pop
fiaddl
pop
rorl
test
out
out
mov
sbb
add
movsl
jne
inc
ret
pusha
popa
pop
cli
or
sahf
outsb
ret
popa
popf
sbb
sar
jle
test
std
jbe
mov
push
lret
xor
ljmp
pop
dec
int3
les
and
pop
or
jae
jmp
lock
pusha
cmp
mov
je
pop
pop
pusha
inc
fucomp
fstpl
push
movl
cmpsl
pop
and
inc
push
loop
pop
mov
add
mov
mov
mov
xor
divl
sti
mov
testl
adc
insl
and
inc
mov
mov
in
push
aaa
out
pop
mov
call
call
cmp
inc
push
sub
movzwl
dec
test
jb
push
stos
inc
adc
movl
lods
std
lock
mov
sti
adc
or
xchg
mov
in
jge
add
cmp
or
sarb
sub
jecxz
push
in
lahf
cmpl
je
invd
sub
ss
add
push
mov
adc
nop
cmp
jle
adc
leave
orl
ss
jae
out
dec
rcll
push
mov
sbb
inc
or
fists
dec
in
jne
ret
mov
fs
imul
adc
push
push
ljmp
jb
jne
insb
inc
insb
insb
outsl
arpl
paddsw
jg
jb
je
arpl
add
arpl
mov
sub
mov
das
mov
ja
idiv
mov
mov
repnz
mov
mov
ret
nop
repz
cmp
pop
push
std
add
jo
ja
cmpl
je
repnz
cld
sbb
ss
dec
test
test
mov
sbb
imulb
mov
add
cmpb
je
or
or
push
mov
and
shl
jnp
mov
dec
cld
mov
and
xor
aas
icebp
div
aaa
lods
mov
and
and
icebp
add
sub
pmuludq
js
adc
repnz
jae
lea
repz
jne
add
pop
insb
mov
add
add
inc
or
or
out
inc
pop
xor
sbb
sub
and
test
fmull
ret
mov
roll
push
or
out
movsb
mov
inc
inc
mov
call
mov
pop
or
dec
push
cli
mov
add
dec
inc
xchg
push
push
xor
cwtl
push
inc
inc
in
dec
dec
mov
out
pop
in
jge
mov
imul
call
mov
sbb
fsubr
inc
xor
sbbb
mov
and
cmp
and
pushf
mov
cmp
mov
and
mov
enter
xchg
sbb
dec
and
inc
enter
mov
push
push
xor
xor
popa
imul
fucomip
insl
jb
xchg
addr16
bound
jo
hlt
mov
inc
insb
insl
jae
dec
adc
push
outsb
mov
ja
aaa
mov
imul
outsb
dec
xchg
dec
gs
xor
xchg
dec
loopne
aas
hlt
xor
adc
mov
xchg
mov
cmp
stc
xchg
pop
clc
push
dec
inc
mov
adc
add
ret
orb
clc
je
inc
dec
dec
inc
cmp
call
notl
lea
mov
mov
pop
cmp
push
lea
mov
rcr
add
pop
mov
in
mov
out
loope
movsl
in
add
dec
ja
sti
xchg
hlt
dec
mov
call
fdivrs
stos
in
sti
fdivrl
sub
pop
test
jg
adc
in
iret
jge
movsl
dec
cmp
jnp
mov
fsub
inc
dec
push
jg
loopne
lds
mov
inc
lret
inc
imul
mov
cvttps2pi
frstor
inc
jl
mov
jb
repz
cs
mov
lock
inc
push
push
int3
mov
add
add
int3
movb
cmp
mov
out
xchg
xchg
mov
out
add
lock
add
jp
and
pop
and
das
dec
cmp
ja
dec
fisttpll
test
or
xor
sbb
mov
or
add
cmp
mov
int3
nop
pusha
aaa
xor
sbb
lock
adc
loopne
loopne
mov
sub
fdivrs
sub
call
cmp
mov
push
jb
mov
and
outsl
jmp
jne
mov
mov
inc
jne
idivl
push
inc
mov
cmp
ja
mov
push
and
mov
orb
test
out
std
push
lea
push
mov
es
or
sarb
push
divb
enter
sbb
in
hlt
mov
mov
xor
mov
fdivrl
movsl
xor
ret
sub
sbb
pop
mov
idivl
fmuls
sbb
movsb
fisttpl
adc
dec
dec
mov
cmpsb
inc
fxtract
int
push
inc
rcr
mov
loopne
iret
push
insl
or
aaa
call
ljmp
mov
adcl
or
fcoml
add
or
inc
lock
shlb
fcmovnb
mov
fcompl
lahf
js
dec
pop
push
mov
xor
or
lret
and
gs
cmp
pop
lock
pop
mov
enter
sbb
ret
in
dec
and
inc
jecxz
rolb
pop
pop
mov
inc
js
cltd
jle
sbb
iret
cmp
and
arpl
movsl
and
dec
lea
lock
xchg
insl
jbe
or
fs
in
xchg
insb
imul
or
jae
adc
adc
push
in
jne
or
cmp
or
adc
jae
xor
push
shlb
jl
test
gs
push
mov
cmp
in
or
mov
adc
cmpl
mov
or
pushf
add
mov
push
adc
fcoms
and
insb
dec
inc
ljmp
nop
sub
jmp
pop
or
pop
and
jo
jge
sbb
sti
or
daa
stos
movsb
sbb
mov
mov
lods
push
push
mov
ffree
shlb
push
pop
push
xor
mov
aam
or
pop
lods
lea
stos
and
adc
loopne
push
mov
sbb
je
incl
push
mov
fs
jae
pop
imul
out
lea
jb
outsb
add
xor
sbb
iret
jl
xor
je
insb
insb
ud0
sub
inc
dec
arpl
jl
jns
outsl
jb
insl
pop
mov
inc
jp
ja
jp
xor
pop
je
lahf
cmp
ss
std
jne
movb
test
jnp
ja
mov
mov
nop
cld
gs
mov
mov
sub
imul
adc
mov
jbe
in
jmp
decl
dec
jne
mov
loope
pusha
xor
and
mov
mov
fidivl
cwtl
add
adc
mov
mov
clc
pop
push
add
mov
jl
decl
enter
cmp
cmp
shlb
inc
or
push
push
mov
cmp
decb
push
jmp
dec
cmp
cltd
sti
es
push
push
sti
add
add
or
mov
xchg
aaa
lock
incb
fildll
divl
jge
hlt
stc
pop
xchg
in
fwait
xchg
jmp
or
cs
movsb
adc
hlt
push
addb
ret
sub
jbe
shll
jmp
flds
and
cmp
cwtl
pop
mov
decb
mov
test
xor
add
mov
and
pop
test
jp
imul
flds
aam
adc
stc
imul
mov
xor
lea
cmp
hlt
inc
mov
mov
xchg
adc
mov
out
shlb
cmp
hlt
sub
push
pusha
mov
repz
cwtl
add
stc
mov
fidivs
push
outsb
mov
and
cmp
inc
jle
loope
fnstcw
cld
pop
push
sbbb
into
push
xor
clc
clc
addr16
test
inc
aaa
inc
mov
jmp
mov
pop
mov
jo
pop
das
mov
cwtl
sbb
xor
shll
cmp
cli
xchg
push
mov
sub
sahf
adc
hlt
xor
aaa
pop
psrad
and
pusha
push
sbb
incl
mov
sub
enter
push
cmpsb
fisttpl
dec
pop
or
pop
xchg
rcl
mov
test
cmp
in
jnp
pop
push
mov
sub
shr
sub
nop
call
pop
ja
push
add
ret
push
iret
add
sub
sub
inc
xchg
jbe
fiadds
adc
lea
pop
cmp
aaa
cmp
push
movsl
pop
xchg
aad
mov
add
sub
mov
shrl
jb
mov
test
inc
and
or
stos
lcall
sbbl
jno
xchg
aam
jge
or
and
xor
adc
adc
andb
movl
lret
data16
mov
adc
adc
outsl
mov
or
adc
push
pop
mov
mov
ss
movsb
sbb
mov
mov
aad
pushl
mov
sub
and
add
xor
fldt
sub
jl
aas
sbb
mov
xor
adc
mov
pop
pop
adc
stos
sub
push
sti
sbb
adc
xor
dec
scas
add
in
out
fisubrl
add
inc
jno
add
adc
add
stc
in
pop
fiadds
add
add
or
mov
icebp
mov
int
add
les
xor
xchg
push
shrl
push
outsl
add
add
add
add
add
inc
pop
add
pop
add
adc
inc
add
ss
out
or
cmp
push
adc
pop
adc
mov
push
and
pop
xchg
push
jl
mov
repz
push
scas
inc
iret
sbb
dec
add
sbb
jnp
test
push
add
add
fldt
and
cmp
jae
fsubrl
or
mov
inc
hlt
fistpl
adc
pop
mov
imul
pop
and
sti
lret
ja
add
cmp
iret
jecxz
mov
mov
or
clc
cmp
in
jnp
inc
out
jnp
add
cmp
push
pop
stos
jae
cmpl
dec
pop
sub
shlb
pop
add
jbe
mov
aaa
dec
sub
sub
mov
jbe
sub
add
fldt
out
fstpl
cmp
push
bound
sbb
fstpt
or
pop
inc
dec
test
insb
or
xchg
pop
sub
js
xlat
pusha
pusha
xlat
mov
sahf
in
scas
imul
xchg
cli
add
out
xor
add
leave
out
xlat
loop
lds
mov
clc
mov
icebp
mov
sub
dec
mov
cmpsb
sbb
and
add
int
stc
mov
insb
and
add
sub
mov
cltd
adc
stos
mul
mov
outsl
insl
inc
add
push
add
jo
in
ret
out
jp
sub
mov
cmp
push
xor
mov
insl
mov
add
sub
and
jle
sti
out
adc
add
std
imul
outsb
jecxz
sti
push
and
pop
mov
inc
xchg
or
pusha
cmc
xchg
push
jbe
je
jnp
mov
cmp
and
sub
or
fstps
into
or
hlt
xlat
adc
daa
jne
das
add
dec
sbb
es
cmpl
pop
mov
and
mov
jcxz
daa
addl
xchg
fwait
js
insb
or
jmp
incl
lods
ficomps
push
and
jecxz
outsl
out
insl
jmp
repz
ret
sbb
or
mov
loopne
jecxz
fildl
test
fcmovnbe
xchg
test
add
lock
aaa
push
or
mov
jne
ret
insb
jb
clc
aaa
pop
jno
arpl
cmp
pop
icebp
cmpb
sbb
jge
cmp
hlt
or
aas
mov
and
pop
faddl
shll
add
lods
outsl
xchg
sbb
cltd
in
aaa
repz
and
scas
mov
cmpsb
mov
cmp
mov
mov
inc
das
lods
dec
daa
cmp
and
jecxz
sub
movaps
dec
pop
jmp
xchg
pop
cmp
daa
arpl
adc
movsl
jg
adc
dec
adc
or
shll
mov
out
inc
js
add
add
pop
ss
and
imull
xor
mov
loope
mov
pop
and
dec
xor
xchg
sbb
daa
dec
or
sahf
test
jecxz
xor
lods
fstpt
daa
cmpsl
es
and
lods
jnp
mov
xchg
sbb
stos
dec
jmp
dec
mov
div
dec
and
cmp
xor
shll
or
and
outsl
or
daa
mov
xchg
test
cs
mov
sub
cmp
xchg
lahf
or
insl
lea
aam
aad
push
or
cmp
test
out
dec
xchg
xchg
adc
outsl
mov
cmp
pop
pop
pop
lds
popf
insl
pop
jg
movsb
inc
lret
out
adc
mov
pop
cmpsb
mov
js
jg
fwait
jmp
cmp
xorb
aas
jne
or
pop
or
cli
lock
mov
or
push
data16
ljmp
stos
cld
add
jmp
mov
andb
jmp
dec
push
sbb
and
cmp
pop
imul
outsl
cmpsl
pop
inc
sbb
insl
arpl
imul
dec
jnp
repz
lret
inc
jae
mov
icebp
ja
fildl
sbb
imul
ljmp
fisttpll
or
aam
pop
and
sbb
outsb
mov
or
push
or
leave
and
mov
cmp
and
cmpsl
or
sbb
xchg
sub
in
jb
mov
sub
lods
add
test
dec
flds
add
lret
jne
pushf
push
dec
scas
cs
mov
lock
insb
adc
xchg
sub
int3
aam
push
mov
dec
sbb
jne
xor
cmp
add
in
js
lcall
cmp
movsl
mov
xchg
cmp
lods
sub
xor
dec
dec
inc
movzwl
pop
xor
xor
mov
cmp
sub
pop
mov
neg
test
jmp
sahf
mov
push
std
cmpsb
jmp
sbb
xor
daa
or
movb
fs
pop
cli
repz
das
pop
xlat
jne
lret
repz
fildl
lret
pop
fistl
lods
dec
or
sbb
movsl
or
daa
in
cmp
or
fisubrs
imul
jge
shrb
add
or
jle
fstpt
daa
out
mov
test
out
xor
mov
or
es
add
xchg
jns
cmp
adcl
movsl
push
pop
into
aas
mov
mov
xchg
xchg
add
and
fldt
xor
outsl
jns
addr16
icebp
insl
aam
dec
xlat
push
imul
mov
adc
xor
mov
test
jnp
mov
daa
into
push
sub
jge
dec
in
push
mov
jge
mov
sbb
fnstsw
mov
fistl
outsb
adc
out
and
scas
cmpl
aad
daa
cmp
sub
jmp
adc
pop
sbb
xor
sbb
add
and
xchg
les
shrl
adc
inc
dec
pop
add
sbb
push
in
xor
mov
add
cli
mov
cld
mov
shll
cmp
xor
imulb
mov
sub
mov
stos
fcom
inc
add
jbe
pushf
call
imul
mov
mov
jns
and
divb
cs
shl
and
mov
ja
scas
lock
ja
lea
cmp
sub
mov
andl
and
mov
jo
inc
test
dec
dec
push
loop
mov
inc
add
mov
or
call
sub
cmp
push
les
ret
loope
mov
ja
inc
pop
mov
fidivrl
sbb
jne
inc
popa
jecxz
jp
in
bound
jns
or
aam
mov
and
sub
fdivl
or
mov
add
jle
jl
jne
adc
adc
jo
fisubrs
inc
jmp
iret
xchg
jl
clc
scas
std
mov
into
push
sub
test
je
jge
jl
dec
mov
hlt
sub
outsb
or
js
mov
mov
pop
leave
dec
cmp
push
xchg
mov
arpl
leave
imul
xchg
cmp
mov
je
mov
push
adc
dec
sti
mov
cli
sahf
jno
xchg
stos
jb
lods
add
out
repnz
pop
scas
loope
and
in
ret
and
pop
sbb
cmc
jnp
stos
push
arpl
mov
jne
pminsw
jns
mov
add
shrl
or
arpl
movsl
fcmovnu
lcall
jo
mov
mov
adc
push
push
or
daa
imul
and
iret
movb
sub
bound
loope
jmp
popa
dec
sbb
or
cld
sti
adc
es
push
outsb
mov
in
ret
mov
or
roll
fnstsw
and
addr16
aad
jbe
pop
mov
sub
ds
push
popf
out
imul
cmp
mov
or
test
mov
rclb
xor
xor
dec
mov
stos
test
dec
mov
lods
jmp
xchg
and
xchg
mov
ss
repz
xor
out
pop
mov
or
insb
add
jbe
ds
shll
ss
mov
fisubl
mov
xorl
jmp
sbb
lahf
xchg
arpl
lods
aas
dec
xchg
xchg
cmp
cmp
sti
aas
ret
xchg
test
or
xor
pop
stos
aam
and
mov
sub
mov
adc
and
pushf
fstps
jmp
sarl
xor
jne
jmp
arpl
pop
rorb
or
cmp
outsb
loop
sub
push
and
add
and
mov
xchg
dec
movsb
jae
test
ss
orb
pop
mov
pop
push
ret
sbb
dec
bound
jle
xor
inc
jmp
pop
rcrb
cmpsb
xchg
stos
popa
adc
jnp
div
stos
or
cli
and
jne
mov
add
adc
xor
ret
popa
and
fldl
xor
cmp
shlb
jmp
sbb
roll
adc
cmp
cmp
outsl
cmc
jg
fsubrs
add
fnstsw
ljmp
pop
out
jae
jg
aam
loopnew
xor
sub
and
jnp
enter
aad
inc
jp
out
adc
or
sub
ds
lcall
pop
mov
adc
es
subl
stos
pop
ret
xchg
imul
jecxz
in
mov
mov
shll
push
insl
loopne
aad
subb
inc
aaa
push
lcall
mov
xchg
psubq
sarl
push
add
lcall
mov
ja
push
in
and
mov
jns
insl
push
dec
jg
jecxz
cmp
mov
aam
lock
sbb
cmp
scas
rcll
pop
sbb
test
outsb
pop
sbb
xchg
sub
mov
xor
adc
adc
sub
adc
pusha
xchg
sub
cmp
je
jecxz
leave
adc
popa
or
loopne
cmp
sub
lret
jl
cld
fcompl
inc
push
mov
dec
sub
daa
mov
les
adc
rorb
shll
mov
lods
addl
popw
jp
mov
int
adc
xchg
mov
jae
pusha
lods
imul
shlb
pop
fidivs
in
ret
mov
out
int
ficoms
dec
mov
push
mov
mov
sub
mov
insb
inc
or
push
pop
jo
cmp
push
and
pop
pop
push
push
mov
xor
mov
mov
jo
mov
mov
lcall
das
arpl
pmaxsw
sbb
mov
das
arpl
aas
cmc
cmp
add
insl
aas
js
pop
xchg
test
fwait
mov
mov
aad
xorl
jb
mov
adc
mov
cs
adc
je
mov
dec
push
dec
inc
lea
or
nopl
fisttpll
jge
fcmovnbe
nop
jne
dec
cwtl
ret
pop
pusha
cmpsl
pop
mov
aam
fwait
movsb
add
and
imul
pop
sbb
inc
and
dec
lds
cmp
pop
cmp
lds
and
dec
sub
add
push
sub
jecxz
addl
push
frstor
fsubrs
rorl
cmp
aad
pop
iret
cmp
insb
not
ja
call
scas
push
push
xchg
mov
cmp
mov
sahf
sub
ds
dec
and
pop
mov
sbb
scas
lret
xlat
sbbb
push
inc
inc
xchg
ljmp
lds
jnp
jne
rcll
xchg
lea
ds
or
shr
mov
ss
pop
popf
lods
mov
pop
add
out
sbb
insb
mov
mov
mov
push
adc
jae
and
popa
int3
mov
mov
jmp
or
ds
push
push
pop
mov
inc
loope
cmp
cltd
jge
and
loope
fidivrs
popf
lea
repnz
xor
inc
jge
inc
sbb
xor
je
cmp
cmp
pop
sbb
into
in
push
std
test
pop
jne
mov
pop
dec
sbb
push
pop
pusha
cltd
cmpsl
lods
in
fstps
cmp
xor
lret
shr
test
in
or
jo
push
icebp
push
nop
sub
shrl
pushf
xor
jne
sbb
push
leave
mov
cmpsb
scas
sub
xor
sub
jmp
adc
fists
pop
dec
sbb
pop
fidivrs
mov
and
scas
loop
mov
xchg
push
mov
enter
push
daa
mov
push
js
cwtl
mov
jne
push
xor
xchg
sbb
or
mov
dec
add
cmpsl
idivl
mov
dec
xlat
xchg
push
fildll
or
das
in
negb
rorb
or
sbb
ucomiss
addr16
inc
adc
sbb
jecxz
fnstcw
push
aam
xor
jbe
ffreep
int3
loopne
in
add
flds
jbe
xchg
lcall
comiss
loopnew
clc
ljmp
ljmp
test
pop
push
mov
sub
call
das
cwtl
bound
xlat
ret
or
cmp
loopne
xchg
clc
in
sub
cmp
stos
push
mov
aas
mov
sbb
and
into
jl
aad
mov
aam
inc
cli
push
outsb
call
adc
fcoml
xchg
negl
rcrl
out
mov
imul
fbstp
dec
or
daa
repz
outsl
out
inc
add
test
xor
dec
cmpsb
mov
sub
cmpl
loope
imul
or
jne,pt
mov
pop
dec
mov
movsl
cmovns
loope
fwait
ret
xlat
sub
xchg
mov
xchg
xchg
movsl
mov
test
jge
sub
cmp
data16
add
clc
in
xchg
adc
int
cli
mov
xor
das
inc
je
mov
mov
mov
adc
push
mov
daa
or
fidivl
das
inc
xchg
jecxz
xlat
ss
ja
pop
jne
push
add
loopne
xor
mov
movsl
jbe
lea
jmp
xor
mov
and
lods
sbb
or
pop
fisttpll
mov
push
inc
pop
clc
test
repz
pop
sub
es
das
jle
mov
dec
ret
lds
bnd
sbb
mov
push
inc
mov
in
ret
call
loope
in
xchg
in
sbb
jge
mov
adc
mov
arpl
sub
pop
es
push
xchg
fsubl
fistpll
les
jns
dec
adc
xor
daa
jle
sub
movsl
sub
pop
ret
xorl
gs
sbb
ds
sbb
inc
add
mov
jmp
jge
cli
or
imul
cmpsl
dec
pop
push
xor
aaa
inc
ds
lret
mov
dec
mov
mov
int3
add
pop
mov
cmpl
in
xchg
xchg
pop
in
jp
int3
pop
add
inc
lock
pop
mov
sub
xor
test
xchg
loopne
outsb
xlat
mov
cmp
mov
les
and
js
jbe
jp
mov
sbb
ret
adc
lods
xlat
movl
loope
xlat
jmp
loopne
iret
xchg
adc
iret
jne
sbb
call
mov
int
dec
addl
test
jle
fsubl
mov
test
outsl
popa
xlat
inc
insb
scas
shrb
sbb
pop
insl
dec
xor
cmp
sbb
add
mov
paddsb
mov
jb
fiadds
sbb
call
stc
pop
dec
iret
jp
sub
dec
xor
mov
imul
scas
xor
mov
pop
bound
push
mov
jmp
pop
pusha
jg
fidivs
push
fsubs
int3
xchg
outsb
adc
popf
xor
sub
aad
push
es
jle
hlt
inc
mov
out
xchg
shlb
aaa
push
loope
mov
ss
fimuls
xor
xor
in
cmp
cmpsb
sub
push
jg
sbb
hlt
imul
mov
into
ss
les
shl
roll
imul
sti
pop
movl
adc
arpl
rcrl
jo
rcl
mov
or
jle
loope
and
out
cmp
lahf
add
jnp
or
and
mov
cmpsb
cmpsl
sti
out
int
add
mov
mov
pop
push
pop
int
push
fdivrs
dec
add
test
fsubs
and
icebp
xorl
stc
testw
cmpsl
mov
in
push
jnp
mov
dec
js
jae
mov
sbb
cmpsl
and
je
psubsb
mov
js
mov
push
cmpsl
lcall
push
add
or
fs
jge
mov
mov
sub
cmpsl
xchg
arpl
jle
scas
cli
xor
dec
call
aaa
jae
insl
hlt
mov
pushf
addb
fidivl
lcall
imul
dec
movl
sub
arpl
leave
jno
and
xor
mov
mov
adc
sbb
xchg
sbb
cmpsb
loope
imul
adc
pop
in
jp
xchg
enter
popf
in
insb
jns
test
pop
xchg
rorl
jle
in
push
inc
movsl
test
insb
sbb
push
mov
xchg
add
or
push
inc
cltd
mov
sbb
xchg
or
xor
sysexit
mov
xor
les
push
pop
jl
lahf
jo
outsb
or
sbb
push
bound
ss
jo
add
adc
fisubrs
push
push
out
fildll
push
mov
inc
aad
in
mov
add
cmc
xor
lock
imul
imul
xor
jmp
cmp
pop
scas
xor
push
or
pop
cmpsb
jbe
jae
cmp
sbb
jo
lock
pop
and
cmp
imul
mov
je
clc
in
mov
popf
cmc
mov
mov
jl
ss
icebp
insb
add
fwait
addl
or
dec
iret
mov
loope
push
push
sahf
or
jbe
cltd
out
push
jp
clc
sub
jl
sbb
lock
jl
pop
sub
push
jle
insb
push
mov
lods
pop
das
cmp
insl
sub
sbb
adc
inc
pcmpgtd
xchg
js
stos
jnp
stos
lods
inc
aad
js
xor
js
dec
scas
scas
stos
cmp
pop
sbb
stos
popa
je
and
loope
or
jg
inc
and
cltd
clc
mov
xchg
dec
sbb
in
and
xor
les
push
mov
jb
js
adc
fcomi
loopne,pt
jae
sbb
test
lahf
popa
xlat
stos
cmp
and
or
gs
fwait
cmp
cmp
rolb
in
lods
daa
pop
pop
sahf
pusha
cmc
or
lds
cmpsl
add
push
mov
loopne
pop
sbb
rolb
das
jnp
out
inc
scas
mov
aas
in
mov
inc
inc
ret
mov
cmp
mov
xchg
imul
imulb
scas
mov
dec
call
xor
push
mov
inc
jp
scas
jbe
push
shlb
repz
xor
adc
fmuls
insl
inc
ret
pop
int3
xor
nop
jb
ss
dec
lret
outsl
movl
fcompl
and
imul
divb
xor
pop
out
sbb
test
pop
mov
adc
adcl
js
xchg
mov
sub
add
sarl
xor
mov
mov
mov
idivl
aam
or
pop
pop
lahf
add
or
inc
ret
daa
push
fwait
sub
scas
in
enter
hlt
shll
stc
mov
xchg
jg
jne
jnp
jmp
mov
fsub
mov
xor
in
add
mov
lcall
insb
mov
dec
push
sbb
cltd
ja
jg
addr16
xor
jne
add
adc
imul
sbb
stos
shl
mov
aaa
dec
insl
sub
jmp
cmp
xrelease
and
loope
insb
xchg
scas
and
iret
mov
jns
jecxz
cmp
call
loopne
into
fiaddl
das
mov
dec
rorl
out
add
adc
notl
pop
dec
sbb
sbb
push
ss
pop
mov
add
aad
cmc
ss
pop
outsb
js
pcmpgtd
jnp
lds
jnp
jns
decb
mov
call
jge
mov
loope
xor
cmpsl
cmp
je
mov
test
xor
ljmp
call
inc
lods
jbe
dec
addr16
lods
aaa
mov
lock
xchg
jge
movsl
ret
jnp
shll
sbb
xchg
mov
aam
call
and
ds
and
sbb
lahf
lods
jns
aad
xor
mov
or
push
fbld
lret
hlt
daa
jb
shrb
lds
push
ror
and
cmp
mov
add
mov
jne
mov
movl
popa
roll
mov
pop
aas
ds
jae
mov
push
rorl
clc
clc
xchg
jp
outsb
not
and
mov
xor
fbstp
scas
or
movsb
push
push
mov
sub
xchg
mov
xor
test
or
mov
jbe
mov
mov
cmp
sub
cltd
mov
jmp
jno
rclb
imul
mov
mov
push
test
fdivrl
sarl
je
test
mov
push
pop
jo
popa
mov
sub
pop
push
pop
adcb
insl
sbb
jb
or
push
or
push
cmp
dec
in
stos
and
xchg
mov
and
xchg
cmp
sbb
ret
mov
adc
addl
jns
sbb
ss
rcl
je
jae
pop
call
mov
loopne
xchg
mov
sti
ret
jnp
je
test
or
shlb
mov
frstor
cwtl
in
xchg
add
mov
fmulp
mov
rorb
push
sub
lods
jnp
lock
pop
aas
mov
pop
pop
std
cli
push
hlt
pop
sar
pop
fidivl
aad
fwait
push
stos
cmpsl
inc
and
flds
stos
pop
push
sub
inc
out
test
cmp
adc
mov
cmovp
xchg
dec
pop
ror
jbe
mov
movsb
lret
test
and
dec
xchg
or
jle
inc
adc
into
sbb
fldt
or
scas
jno
mov
cmpsl
mov
ss
notl
push
mov
sub
lea
xchg
mov
fwait
popa
popa
or
dec
cmc
pop
lock
rorl
and
pop
sbb
fcomp
cmp
or
adc
xchg
push
jbe
sbb
sti
push
xor
fldenv
cmp
ret
xor
je
mov
data16
ss
push
add
ljmpw
das
cmpsb
outsb
sub
fildll
jmp
fdivr
push
out
in
sub
jecxz
call
rcl
and
jae
rcll
aad
ljmp
cmp
je
xor
pop
ja
mov
je
inc
aam
pop
xchg
mov
sbb
push
cmp
mov
mov
insb
adc
push
mov
sbb
das
stos
aam
pop
sub
mov
shl
pop
jg
push
mov
dec
push
inc
xor
ss
mov
adc
mov
jle
sub
lahf
mov
mov
mov
xchg
movsb
sahf
mov
imul
sub
mov
jmp
sbb
push
mov
call
shrl
xchg
stos
xchg
cmp
jo
aas
dec
jb
imul
sbb
insl
cmpb
push
scas
push
xchg
out
int3
cltd
aaa
fdiv
and
aam
dec
mov
in
mov
jge
xor
mov
pop
push
xchg
or
jg
add
push
int3
add
sub
sarb
je
or
cmp
cld
mov
jne
mov
pop
jae
dec
lea
lods
sti
aad
mov
dec
sub
iret
ret
pop
or
loopne
or
or
mov
lds
adc
pop
or
aad
xchg
inc
cmpsl
inc
cmp
das
or
outsb
or
adcl
mov
jnp
out
loope
mov
sahf
dec
sbb
movsl
pop
or
imul
pop
mov
icebp
in
imul
fldl
or
outsb
mov
rol
pop
pop
test
push
xor
push
fldt
sbb
jb
mov
arpl
jl
test
in
jno
inc
ficoms
enter
ret
pop
or
je
ret
sbb
mov
insb
bound
cmpl
adc
mov
sub
int3
iret
aaa
push
cmp
inc
nop
pop
pop
out
jl
pop
ret
add
mov
data16
les
scas
or
scas
sti
pop
xor
ret
mov
push
jmp
and
mov
push
and
cmp
popa
and
ret
mov
clc
sahf
lods
imul
pop
cld
sub
rcl
push
dec
pop
fs
cwtl
outsl
pop
push
outsl
xchg
cwtl
cmp
repz
jp
xor
in
cmp
test
dec
lret
outsb
mov
mov
pop
gs
adc
jno
xchg
insl
ret
cmpsb
mov
data16
sbb
jmp
xchg
or
or
jnp
sbb
shlb
les
stos
popl
out
popa
popf
sti
fcom
inc
cmpsl
adc
inc
push
mov
or
fldenv
and
sub
rcl
test
jns
jp
pop
insb
lahf
fstp
xchg
mov
test
mov
mov
cmp
ss
mov
mov
push
into
sbb
push
push
xchg
hlt
mov
negl
enter
pop
ret
xor
mov
mov
mov
inc
aas
aam
and
mov
jno
icebp
imul
aaa
cmp
or
mov
mov
xchg
dec
and
ret
icebp
loopne
div
add
push
mov
out
lds
mov
insb
or
outsb
cmp
imul
pop
push
sbb
cmp
pop
ds
mov
mov
cmp
repz
in
ss
shlb
mov
cmp
xor
jne
lcall
lods
lret
inc
dec
loope
aaa
ret
inc
mov
jae
sbbb
xlat
xchg
lahf
adc
fsubrp
and
aam
enter
stc
cld
rcr
loop
insb
mov
pop
mov
dec
out
push
dec
cmc
js
cmpsb
pop
movsb
pop
pop
cwtl
bound
xlat
cmc
inc
jge
in
mov
jl
in
mov
rolb
dec
jge
cmp
xchg
sub
mov
sub
repz
cmp
cli
dec
xor
ja
sub
xor
shll
jl
scas
xchg
dec
dec
pop
stc
mov
out
sub
mov
jecxz
mov
pop
aas
jg
mov
sbb
mov
inc
xlat
loope
popa
push
cmp
pop
je
imul
xchg
fnstcw
inc
push
fistpl
sub
test
sub
imul
mov
in
sbb
ss
jg
and
fcmovnb
add
imul
mov
imul
mov
insl
jae
js
jle
or
out
divb
and
inc
push
std
test
sub
ret
and
push
adc
mov
lea
test
negb
es
add
int3
cmp
testl
lods
loope
out
fwait
lcall
fdivrl
add
jecxz
repnz
sbb
rolb
or
call
sub
shll
std
mov
jmp
jp
xchg
fsubrs
xchg
call
dec
or
insl
push
or
sbb
fcmovb
and
jne
xchg
and
data16
sub
xchg
sbb
movb
pop
xchg
lods
cli
sbb
mov
arpl
out
jmp
sbb
shl
push
arpl
or
xor
data16
pop
mov
mov
mov
cmp
jne
mov
sti
movsb
mov
daa
loop
ja
out
sub
sbb
and
cmp
aaa
cmp
daa
cmp
xchg
pusha
add
jle
stos
and
push
ret
fsubrs
push
das
lret
mov
mov
sub
sub
sbb
cmp
ja
adc
dec
sub
test
aaa
mov
sub
ret
push
out
fsubr
and
shrl
das
xor
mov
mull
in
mov
inc
mov
jecxz
fs
pop
mov
shlb
sbb
mov
sbb
jp
jb
addr16
movsl
mov
pop
dec
ret
push
movsb
lret
fisttpl
hlt
xor
dec
cmp
mov
push
movsb
or
xor
mov
add
cwtl
ret
add
das
mov
xchg
push
sahf
insl
push
xlat
push
retw
xchg
adc
mov
fstpl
mov
insb
ja
xchg
outsb
in
cmp
pop
add
movsbl
int
pop
fcomi
ljmp
ret
mov
gs
scas
inc
mov
mov
xor
je
into
ja
out
mov
repz
sub
jb
addr16
and
xchg
push
cli
or
pop
pop
cmp
jl
jg
ljmp
mov
or
lea
sbb
pop
and
mov
sub
inc
mov
pusha
dec
add
mov
ret
sbb
insb
outsb
fisubs
aad
jbe
mov
add
or
cvtps2pi
sbb
dec
adc
repnz
imul
or
or
loop
or
add
xchg
rcl
into
mov
aam
jg
mov
test
cmp
int
aaa
fsts
and
out
jne
fdivs
add
mov
gs
pop
mov
lcall
jmp
xchg
mov
sbb
ret
scas
stos
test
popa
xor
inc
lcall
sahf
mull
sti
out
mov
ret
mov
mov
push
pop
mov
xorl
dec
pop
mov
push
mov
xchg
mov
mov
mov
mov
addr16
mov
or
push
roll
test
and
push
icebp
hlt
lods
es
jg
rclb
je
sub
ja
andb
dec
int
cwtl
sub
test
mov
sub
pop
push
xor
out
mov
dec
gs
push
js
xchg
fwait
jle
pop
sub
jmp
in
iret
aas
ljmp
arpl
sub
mov
or
mov
adc
mov
jmp
mov
clc
aas
sub
jo
cmpsl
es
lods
adc
fiaddl
loopne
cwtl
cltd
shlb
mov
repnz
jne
pop
inc
fists
and
dec
mov
into
fimuls
mov
addr16
pop
vpsraw
daa
outsb
push
jp
test
fstpl
ds
and
insl
mov
pop
pop
into
ret
jb
pop
sarb
fwait
pop
push
sti
jnp
mov
loop
mov
ret
and
jbe
mov
or
outsb
bound
inc
cmp
andb
nop
into
stos
mov
imul
cmp
pop
and
adc
popl
je
jp
dec
and
jl
xchg
mov
mov
adc
stos
lds
test
lcall
inc
test
sub
cmp
repnz
pop
jb
jbe
cmpsl
sbb
xor
lret
lods
out
sti
sub
daa
mov
pop
imul
imul
mov
xchg
xor
mov
xchg
jne
or
add
out
retw
xchg
mov
push
xor
and
adc
pop
call
cmpsb
and
enter
dec
sbb
xchg
jnp
movsb
pusha
jmp
sahf
leave
jno
mov
out
mov
ret
fisttps
push
pop
cmp
pushf
fimuls
out
stos
push
ret
call
or
push
aaa
xor
mov
movsl
or
inc
adc
cwtl
dec
js
addl
test
mov
call
add
scas
or
xor
jae
jbe
pusha
jp
sahf
inc
inc
jg
movsl
call
push
xor
or
xor
roll
inc
popa
les
js
mov
icebp
cmc
mov
sbb
sbb
pop
addr16
sbb
stc
xlat
mov
mov
inc
cwtl
fidivl
adc
xor
popw
cmpsb
scas
inc
icebp
fildl
mov
rorl
add
enter
jg
out
ds
fwait
out
dec
push
ss
mov
scas
mov
fisttpl
xor
mov
and
dec
cmc
add
inc
push
mov
fldt
adc
xor
cmpsl
scas
in
jno
lock
pop
fstpt
mov
sub
mov
and
gs
stos
icebp
aam
and
pop
outsl
mov
push
sbb
inc
loope
jge
insb
sbb
sbb
mov
pusha
dec
or
loopne
sbb
pop
and
aaa
cs
leave
sub
adc
inc
inc
call
stos
repz
js
mov
ret
dec
ficoml
dec
addl
sahf
cmp
jb
das
jnp
std
jbe
jmp
jmp
and
jg
insl
jae
fimull
mov
cmc
dec
jne
scas
sbb
or
push
in
aam
mov
cli
xor
cmpsl
push
iret
stos
mov
push
fildl
fwait
popa
test
add
or
jno
push
fildl
pop
ret
jae
pop
aaa
imul
or
and
std
rcr
in
or
pop
stos
dec
rolb
fnstsw
and
sti
les
fstpl
test
lods
cmpsb
jp
cs
adc
jge
jnp
mov
pop
notb
scas
mov
xor
das
das
lcall
jns
push
mov
xor
cmp
sbb
inc
sbb
jo
test
jne
insl
push
arpl
dec
inc
addr16
and
cmp
sub
dec
test
ret
cmpsl
add
push
sbb
xor
xor
outsl
ja
push
in
pop
pop
mov
dec
decl
cmp
sub
outsl
je
insb
and
pop
mov
mov
inc
sub
sbb
imul
xlat
sarl
inc
jp
pop
sti
out
int
inc
cmpsl
xorl
sub
mov
jp
loope
insl
popf
mov
push
sbb
popa
push
sarb
adc
sub
fistl
jecxz
adc
jle
aam
pop
mov
sti
add
rcrb
sbbl
std
pop
les
test
add
daa
stos
sahf
xor
into
ret
mov
push
je
jecxz
xor
push
outsb
jecxz
xor
outsl
jnp
imul
lock
mov
mov
mov
aaa
or
sbbl
jb
xor
inc
push
ret
pop
js
iret
dec
pop
mov
jl
push
test
adc
es
mov
and
and
jmp
outsb
mov
adc
lock
pop
shl
fmuls
mov
js
rorl
divl
cmp
xchg
sub
cmp
aas
rcrl
fstpt
gs
mov
sti
jns
jg
cmp
rcr
sbb
inc
dec
mov
call
test
xor
icebp
cltd
rorb
in
jbe
adc
loope
sahf
popf
or
mov
inc
into
mov
cwtl
fstl
cmp
jmp
adc
mov
test
jb
inc
out
or
add
pop
loope
mov
stos
pop
testl
dec
rcrb
pop
xor
pop
icebp
mov
push
fs
aas
and
in
pushf
mov
cmp
loope
cmp
scas
loop
mov
sbb
pusha
inc
adc
pop
cmpsb
ret
nop
adc
push
mov
inc
addr16
mov
push
mov
mov
xchg
shrb
movsl
mov
ds
and
fwait
sbb
jecxz
stc
movsl
push
insb
filds
call
cmp
test
pop
push
cmpsb
shl
mov
fdivs
movb
cltd
jl
mov
mov
push
fldenv
jno
mov
hlt
jo
xchg
scas
icebp
fbld
cmp
cli
mov
pushf
mov
popf
cltd
clc
imull
inc
aaa
insl
jge
mov
cmpl
mov
jge
pop
nop
cmp
sbbl
js
rorb
sbb
pmullw
and
stos
mov
add
fucomi
sub
push
outsb
push
xlat
setge
push
test
sbb
loopne
jbe
jmp
adc
jns
push
mov
outsb
or
cmpsb
stos
addr16
int3
push
push
iret
sub
push
leave
nop
dec
add
cmpsl
outsb
out
imul
es
adc
and
cs
add
aam
call
xor
repnz
js
jle
and
mov
das
ljmp
pop
clc
push
notl
std
jne
push
inc
mov
lods
popf
dec
insl
xor
mov
mov
mov
dec
es
or
jg
out
and
jge
lds
bound
or
out
inc
mov
mov
imul
mov
out
adc
leave
mov
aaa
jmp
mov
dec
mov
fsub
cmpsb
lods
fstpl
inc
ja
data16
mov
push
jmp
popf
cmpxchg8b
iret
inc
add
xorl
insb
mov
mov
rcrl
xor
ficoms
cmp
outsb
dec
mov
mov
cmpsb
and
pop
test
bound
in
add
inc
mov
and
and
sbb
sub
add
in
insb
dec
ds
xchg
inc
cmp
mov
push
clc
xor
icebp
add
fwait
scas
test
movsl
sub
js
jp
sbb
je
push
loop
loopne
mov
sbb
mov
pop
pop
xchg
test
sub
clc
push
cmp
sbb
out
in
es
push
cmp
fadds
pop
xor
lock
mov
shll
adc
jmp
mov
mov
or
mov
sbb
incl
add
js
mov
sub
inc
xor
enter
mov
pop
xlat
sbb
mov
call
negb
imulb
adc
call
mov
out
xor
pop
push
iret
clc
mov
ljmp
cmp
inc
pop
imul
ret
push
cmp
adcb
enter
loopne
imul
pop
xor
test
repnz
mov
pop
test
jns
bswap
add
lahf
stc
mov
mov
mov
adc
pop
mov
mov
xor
mov
lret
mov
ss
arpl
or
or
pop
inc
adc
outsb
loope
mov
movsb
test
pop
dec
push
fs
mov
mov
loop
out
and
pop
rcrl
jl
jg
mov
pop
xchg
dec
stos
dec
pop
stc
sub
pop
sahf
and
mov
or
lock
outsb
sarl
das
sahf
pusha
pop
push
sbb
dec
sub
in
cmp
inc
aad
push
popa
pop
outsb
or
xchg
jmp
fstpl
sahf
fcompl
ja
or
cmpsl
out
je
outsl
or
mov
repnz
push
sub
mov
lcall
ljmp
dec
cmpsb
cmp
push
dec
test
mov
ja
into
test
jbe
iret
clc
jecxz
inc
cmp
push
and
jle
adc
pop
fwait
rdtsc
fldcw
ja
rolb
sbb
xor
sub
ficompl
sbb
sub
not
pop
fs
stos
mov
out
cmp
aas
mov
and
leave
addl
nop
daa
mov
ret
push
pop
fisttpll
out
das
das
xchg
push
rcll
mov
jno
mov
push
push
iret
dec
sbb
out
inc
scas
aas
push
inc
lret
xchg
jb
popa
popa
jge
push
inc
pusha
das
test
cmp
nop
add
mov
push
pop
xor
andb
pusha
cmp
jp
jmp
add
mov
pop
popf
pop
jbe
jmp
lcall
lea
insl
je
adc
xor
std
arpl
call
cltd
cmp
xchg
test
test
repnz
jp
or
adc
inc
push
inc
pop
fbstp
cltd
loopne
mov
rclb
bound
xor
fnstsw
adc
outsl
insl
mov
mov
fisubs
pusha
outsl
addr16
push
pop
imul
jb
mov
adc
ds
and
adc
daa
data16
cmpsb
test
or
sbb
and
jne
hlt
negb
fwait
xchg
xor
mov
xor
add
call
xchg
mov
das
sahf
fidivl
out
cmp
repz
mov
sbb
adc
std
in
jmp
cmp
int3
shrb
mov
and
lds
mov
inc
stos
lods
xchg
mov
adc
movsb
jo
lea
mov
shr
fisttpll
repnz
push
aam
pop
pop
mov
scas
out
ret
pop
fildl
jo
scas
fildl
dec
or
scas
repnz
cld
cmp
outsb
ffreep
adc
pop
sub
pop
jo
jge
pop
pop
xchg
stos
mov
dec
ret
jle
mov
cmp
es
mov
inc
out
outsb
pop
jnp
fistpl
test
inc
ja
or
rcrl
sarb
xchg
pop
and
cmpsb
scas
sub
mov
dec
lret
iret
out
mov
lock
dec
lret
lcall
xor
dec
xchg
test
dec
pop
out
movsl
loopne
fnstsw
jecxz
mov
popa
adc
xchg
mov
rolb
add
xchg
cmp
lret
mov
jmp
imul
icebp
xor
fcoml
shlb
xor
mov
jne
mov
mov
clc
adc
iret
fdivrl
push
les
in
xchg
pop
outsl
sub
cmpsl
xlat
mov
fcoml
lods
leave
sti
pop
repnz
xor
xorb
mov
mov
adc
insb
insl
fdivs
shl
xchg
test
mov
bound
cmc
imul
pusha
fistps
iret
jp
cltd
in
hlt
aam
call
negb
mov
not
cmp
jnp
or
int
and
icebp
cli
sahf
jb
dec
jge
aas
fsubr
sub
div
test
lret
out
and
sbb
push
stos
mov
lods
sub
dec
mov
shlb
stos
mov
icebp
and
xor
std
mov
xor
inc
ja,pn
sub
je
daa
daa
mov
sarl
pop
test
jecxz
adc
adc
test
cmp
jp
mov
gs
fs
divl
subb
ror
ljmp
adc
ds
mov
mul
clc
and
int3
push
mov
dec
pushf
or
adc
mov
popa
shll
sub
push
push
jo
push
push
les
lcall
dec
pop
dec
and
fdivrl
sub
scas
sub
xchg
mov
subl
fwait
std
pop
jbe
divl
imull
cltd
ds
rorl
jns
rcll
push
loopne
mov
mov
mov
pop
rol
and
cmpb
outsl
cmp
mov
loope
xor
sub
pop
pop
imul
push
or
rol
out
imul
popa
cmp
clc
push
pop
fdiv
fstpt
or
adc
psrlw
hlt
push
aad
or
bound
or
push
mov
addr16
out
ljmp
sti
js
mov
and
sbb
push
mov
mov
rclb
in
cmp
fs
push
mov
sbb
xchg
fs
sbb
mov
dec
sbb
daa
xlat
mov
inc
xor
ljmp
sub
or
cmp
sti
mov
add
pop
scas
or
cs
and
call
adc
xchg
ja
mov
inc
jle
in
mov
or
cs
idivl
jb
test
inc
loope
stos
mov
loope
je
jns
es
std
loopne
mov
mov
adcl
and
jb
ljmp
cs
jne
out
jle
pusha
imul
xchg
add
push
cmp
and
mov
shlb
adc
add
pop
xlat
push
loope
adc
cltd
mov
fs
cmp
popa
cmp
mov
jne
dec
scas
jg
xchg
push
push
test
je
adcb
mov
push
out
pop
out
inc
sbb
and
out
rcr
aas
cltd
cs
ss
push
fmulp
sub
out
xor
aaa
fdivr
js
mov
ret
aam
xchg
or
sbb
call
jb
xchg
std
adc
scas
jae
cmp
sarl
mov
shr
js
lahf
mov
xlat
jbe
jns
insb
inc
mov
sub
fstl
mov
add
xchg
in
inc
cmp
adc
aas
test
dec
push
xor
mov
pop
pushf
cmp
pop
add
fimuls
inc
popa
jb
js
js
mov
cwtl
sti
insl
loopne
cmp
cmp
sub
sbb
xor
or
push
cmp
jmp
inc
jae
test
jecxz
mov
adc
mov
push
jnp
jno
imul
sbb
xchg
pop
das
dec
sbb
mov
mov
fs
dec
pop
aad
push
mov
cmc
sub
cmp
test
mov
aad
data16
mov
roll
cmp
inc
mov
aaa
inc
mov
dec
outsb
div
insl
pop
test
or
and
out
push
push
cmp
sarb
jnp
mov
out
add
std
pusha
or
pop
and
mov
leave
ret
sbb
js
leave
cli
mov
sbb
push
inc
ret
test
sub
rclb
dec
movsb
int
lock
pop
sbb
mov
mov
ret
push
inc
mov
or
pop
sarl
out
clc
ds
movsb
mov
outsb
popa
outsl
jns
aaa
in
sub
jbe
clc
mov
or
sub
rcrb
jge
ficomps
add
outsb
dec
jg
xchg
jbe
inc
movsl
lahf
ss
mov
jns
insb
outsl
or
sti
popf
rclb
iret
xor
dec
dec
cwtl
mov
add
sub
adc
mov
push
cmp
in
cmp
adc
scas
imul
and
jbe
or
dec
filds
jle
lcall
inc
xor
jnp
shll
in
les
out
into
stos
test
xor
iret
aaa
out
jnp
pop
pusha
xchg
xchg
or
pusha
clc
inc
mov
mov
ljmp
mov
push
mov
pop
popw
ffreep
dec
or
dec
and
je
pop
mov
jle
int
scas
jmp
jbe
or
mov
push
jne
jbe
lahf
mov
inc
fistpl
loopne
sbb
in
pop
idivl
fwait
cmp
sbb
jecxz
icebp
push
int
sahf
je
push
aas
inc
cmpsb
pop
push
sti
and
out
repz
push
rcll
xlat
pop
and
add
push
dec
jne
movzwl
or
nop
xlat
push
inc
jno
inc
pop
xor
push
add
sbb
insb
jge
dec
pop
mov
ljmp
xchg
cmc
mov
mov
cmpsl
mov
lahf
fdivrp
inc
shll
and
out
and
cmp
jecxz
lea
pop
std
aad
pushf
roll
and
inc
les
cmp
sbb
daa
inc
or
push
jle
outsb
movsb
daa
sbb
xlat
pop
mov
mov
js
fsubr
int3
xor
mov
push
icebp
dec
fstp
jge
lock
xchg
lea
outsl
pop
push
in
xchg
add
jb
cltd
inc
std
dec
xlat
lods
mov
inc
sub
pop
sbb
scas
jmp
add
mov
imul
mov
cmpsb
negb
adc
stos
test
inc
fcomp
and
std
sbb
xor
adc
jmp
je
cmp
loopne
xchg
out
aam
push
ss
jne
lahf
mov
or
test
mov
sbb
xchg
je
mov
adc
aad
mov
jmp
ja
push
movsb
or
movsb
mov
inc
out
jbe
stos
sbb
or
sbb
and
pop
rcrb
sub
out
xchg
or
sub
js
inc
test
inc
imull
ljmp
je
jp
pushf
dec
faddl
jnp
xlat
cmpsl
arpl
add
inc
push
imul
std
loop
leave
mov
ljmp
inc
or
xor
rorl
and
cmp
mov
fsubrs
mov
jno
pop
push
adc
mov
packssdw
cwtl
or
popa
push
ffreep
cmp
movsl
lods
jnp
xlat
add
lahf
or
test
in
popa
pusha
push
sub
push
dec
rorb
fsubs
cli
rolb
ja
xchg
lock
icebp
pop
sub
add
or
rep
je
pop
je
jb
int3
inc
sti
xchg
sbbb
dec
pushf
dec
sbb
aaa
mov
jg
data16
push
stos
cs
push
pop
in
pop
lods
and
ljmp
dec
pushf
xchg
insl
ficoms
inc
jb
call
outsl
adc
xor
push
sbb
test
jl
mov
xchg
cmp
mov
mov
push
inc
cld
mov
pop
lret
shll
pop
mov
or
mov
lods
jb
inc
push
arpl
and
cld
or
ja
shll
dec
ljmp
popa
mov
mov
shrb
xchg
out
loope
dec
jle
adc
mov
pop
jo
fldt
mov
mov
ret
mov
cld
sbb
inc
add
enter
pop
push
fistl
mov
inc
add
cmp
cmp
pop
cmp
test
jnp
sbb
and
mov
sub
or
cmpsl
loopne
add
loopne
cli
pusha
stos
mov
lods
sbb
fimuls
fs
adc
jmp
arpl
pop
pusha
lods
stc
cld
ffree
xor
push
push
icebp
jnp
mull
and
cmp
mov
shll
pop
xor
mov
push
mov
push
stos
fistl
mov
aas
jo
xor
pushf
aad
test
push
aam
jno
cs
jmp
mov
out
les
mov
inc
xlat
call
movl
inc
mov
push
push
pop
push
icebp
dec
je
mov
movsl
aad
pop
imul
dec
je
iret
and
push
rcrb
add
cmp
dec
sbbl
sub
jno
nop
repz
mov
stos
jp
mov
mov
xchg
repnz
push
movsl
testl
in
mov
ret
int3
xchg
mov
cs
push
je
dec
les
sahf
clc
movsbl
xchg
jl
imul
xchg
xor
mov
mov
mov
mov
jecxz
push
hlt
test
scas
sub
lcall
or
stos
mov
push
mov
loopne
xchg
shl
popa
inc
xchg
rorb
xchg
add
ret
inc
push
push
dec
aam
daa
mov
mov
fcomps
ss
pushf
mov
sbb
aam
pop
push
or
pop
add
imul
in
sub
jecxz
add
add
xchg
sub
push
pop
lds
mov
mov
pushf
xchg
loopne
out
add
out
icebp
pop
inc
mov
xchg
jmp
mov
fwait
and
lock
insl
movl
out
inc
jae
push
mov
jbe
dec
arpl
cmp
daa
fst
mov
adc
mov
mov
adc
push
jmp
rcll
lods
repz
jp
mov
mov
mov
and
adc
or
jg
cvtps2pi
cmc
xchg
imul
push
inc
adc
or
les
lcall
dec
push
pop
les
shl
cmpsl
mov
es
jno
xchg
or
and
or
inc
adc
cli
aad
je
je
lahf
add
sbb
cmp
push
out
inc
imul
push
push
fdivrl
push
sub
shrl
bnd
mov
inc
adc
jmp
sbb
jbe
adc
xchg
sti
rorl
scas
mov
cmp
jle
adc
lods
pop
shrl
insl
mov
xchg
std
jbe
test
in
xor
jle
shlb
int
inc
jb
lcall
loop
into
std
ret
xlat
stc
mov
ja
in
cmp
mov
es
iret
jge
jge
jp
mov
jnp
sub
lret
pop
dec
mov
jecxz
lock
in
stos
loope
and
fnstsw
out
lahf
aam
leave
xchg
cmpsb
scas
or
ja
xchg
out
je
and
xchg
xchg
test
xlat
sti
sti
xlat
aas
iret
aad
jge
rcrl
mov
and
add
jne
cmpsl
insl
mov
or
out
push
jbe
pop
mov
xchg
xchg
mov
into
pop
dec
stc
xlat
insb
jo
lahf
insb
out
jns
mov
loopne
mov
xchg
inc
nop
fs
pmuludq
out
aam
jno
lret
xor
pop
cmpsl
jne
nop
sbb
xchg
mov
hlt
aam
mov
pop
ds
xchg
pop
dec
loop
mov
nopl
xchg
xchg
cmp
fadd
pusha
ret
mov
push
adc
std
frstor
inc
xor
mov
sub
fsubl
aad
sbb
clc
add
sbb
lea
lahf
push
lods
or
dec
push
mov
cmp
loop
icebp
shl
test
xchg
xor
enter
int3
stos
aas
fdivl
cmp
xor
test
lock
pushf
inc
push
sub
das
popf
js
into
loope
lods
scas
movsl
jge
pop
lock
mov
repz
lret
ret
testl
or
mov
sahf
inc
sti
inc
push
negl
aas
out
shll
icebp
inc
dec
dec
popf
and
loop
or
insb
loopne
sti
mov
mov
push
xorb
test
xor
sbb
pop
enter
inc
out
mov
pop
sbb
mov
mov
jecxz
jo
sti
sarb
insb
bound
sti
loope
repnz
enter
scas
popf
jnp
jo
push
repz
sti
mov
out
xchg
and
cmp
cmp
jle
lds
jns
cmp
hlt
shll
orb
mov
repz
mov
dec
lods
jb
mov
sbb
out
mov
lds
jp
jnp
test
popf
pusha
xchg
mov
adcl
xor
jmp
cmp
ljmp
pop
test
add
scas
mov
mov
push
cld
enter
nop
lret
pop
mov
add
mov
popa
movl
xchg
int
int
jecxz
cmp
fiadds
lea
fiadds
push
cltd
jb
adc
aam
shll
xor
fs
jge
or
pop
mov
or
xor
jbe
adc
stos
call
imul
pop
sub
mov
mov
popa
jbe
clc
ljmp
stc
mov
push
adc
jecxz
push
leave
fsubl
or
rorb
movsb
add
rcrb
jge
sub
repz
pop
jp,pt
jae
popa
adc
xchg
sub
jbe
in
push
mov
sbb
push
xlat
add
mov
pop
or
call
stos
jb
inc
ficompl
jb
mov
and
dec
and
xchg
cmp
andb
mov
pop
test
pusha
adc
mov
pop
sahf
sbb
faddl
jle
dec
adc
out
pop
iret
jecxz
sub
fdivp
add
dec
mov
xchg
or
cmp
or
stos
sarl
mov
js
push
aaa
ret
mov
mov
loop
pop
loopne
adc
lahf
scas
and
lea
push
scas
je
loop
add
lds
mov
shlb
mov
push
lods
or
sub
mov
pop
ror
mov
mov
push
mov
insl
mov
add
gs
rcll
mov
iret
hlt
pop
shr
mov
and
and
pop
mov
mov
push
int3
and
push
sub
sub
pop
loop
adc
mov
mov
insb
arpl
mov
shrb
mov
and
push
sbb
lahf
xor
mov
gs
mov
ja
jae
jle
ds
mov
sbb
arpl
xor
popa
sbb
mov
pop
fidivrl
push
mov
mov
mov
xchg
push
adcb
imull
pusha
testl
jbe
sbb
pop
add
jmp
outsb
int
je
add
je
mov
inc
jmp
push
xlat
mov
pop
mov
es
mov
jg
jo
loop
repz
adc
mov
cmp
inc
in
out
cmp
ret
add
std
pop
jnp
add
loopne
adc
cmpsb
or
imul
push
ds
sbb
sub
mov
pop
je
cmpsb
push
scas
add
mov
lea
mov
add
mov
movsb
inc
add
push
ret
jmp
sbb
jp
mov
insl
sbb
movzbl
data16
sbb
xor
sarl
mov
out
or
mov
out
push
ffree
enter
popa
xchg
jo
and
sahf
mov
orl
mov
fs
dec
iret
sbb
mov
adc
adc
mov
xor
in
out
mov
out
aaa
cmp
mov
jnp
ret
lock
pop
mov
add
js
dec
popa
pop
jnp
and
cmc
insl
sbb
lock
stos
or
pop
aad
mov
mov
mov
lods
outsb
dec
xor
cs
cmp
push
hlt
mov
cs
faddp
or
fcoms
aaa
push
hlt
xchg
xlat
dec
shr
ljmp
jp
loopne
mov
inc
pop
gs
lcall
add
mov
inc
pusha
scas
xchg
jns
lahf
data16
aaa
and
jno
aas
shlb
dec
popf
movb
shr
cmp
dec
mov
push
mov
ret
das
sub
lcall
or
inc
xchg
mov
jmp
fcoms
add
mov
mov
mov
popa
mov
or
cmp
test
les
or
repz
and
mov
cmp
stos
dec
cmp
or
xor
sbb
mov
pop
jge
cmpsb
inc
mov
loop
inc
shrl
push
mov
ret
enter
movsl
jns
std
testl
inc
push
pusha
jle
insl
sbb
add
inc
mov
sbb
jl
sbb
or
fiadds
sti
xor
fs
mov
xcrypt-cfb
cmpsl
movsl
lock
pop
cmpsl
push
push
mov
push
inc
aaa
arpl
arpl
shl
sbb
push
shl
ja
lcall
xor
dec
pop
xlat
imul
push
insb
iret
adc
lcall
bound
dec
jmp
mov
test
dec
mov
mov
xor
scas
push
xchg
xchg
pop
aam
mov
pop
scas
cmpsb
aas
lods
xorl
xchg
cmp
mov
xlat
mov
lods
push
icebp
ss
cli
xor
jne
fists
je
pop
scas
pop
mov
jbe
movsl
dec
jge
test
cmp
jecxz
mov
pop
bound
lock
mov
stc
mov
std
xchg
mov
dec
in
scas
push
mov
adc
xor
ja
out
out
inc
mov
mov
push
imul
push
fisubrs
nop
int
mov
pop
jp
sbb
hlt
mov
mov
psrlq
adc
or
and
or
xchg
mov
cmpsb
cs
mov
ss
outsl
xor
enter
mov
mov
mov
sahf
ljmp
inc
xlat
sarb
daa
pop
lcall
pop
fisttpll
iret
insb
clc
cmp
aad
sti
sarl
ja
inc
sti
out
data16
mov
in
sbb
dec
or
jl
prefetchnta
pop
xchg
add
push
out
into
and
je
sbb
sbb
or
fdivrl
es
add
fadds
in
jmp
xor
shl
jp
aas
jns
fcoml
arpl
xlat
add
jmp
lds
mov
fcomip
fidivs
jnp
mov
push
cmp
xor
sub
inc
jecxz
out
je
cmp
popa
mov
sub
sahf
push
mov
lds
ljmp
pop
mov
mov
or
hlt
adc
outsl
ror
push
loopne
fadds
dec
in
notl
orl
push
insb
fistl
scas
and
out
mov
sahf
pop
test
insl
fwait
jg
stos
pop
fwait
nop
cmp
pusha
jo
lea
popf
les
jb
outsl
add
in
add
rcl
and
inc
call
lret
nop
mov
add
outsl
or
ret
mov
inc
je
mov
clc
dec
in
fsubs
push
loop
ss
mov
loopne
jl
push
aas
dec
mov
mov
mov
jmp
push
frstor
xor
mov
mov
and
in
xchg
test
das
cmp
xor
add
xchg
sti
fnsave
mov
lcall
mov
popa
sub
mov
ror
outsb
fistpl
bound
add
cmp
or
in
xor
mov
cmpsb
xlat
xor
lret
xchg
pushf
push
pop
dec
mov
dec
push
lock
stos
fisubs
test
or
repz
loopne
cli
mov
enter
sarl
bound
ret
inc
jo
aam
xor
punpckhbw
fstl
and
cld
push
mov
jbe
ljmp
call
xlat
jne
cwtl
test
xchg
loopne
cs
fsubrs
ret
or
add
gs
adc
bound
and
or
inc
push
clc
inc
lcall
outsb
adc
fucomp
scas
xor
mov
add
jno
sbb
ret
push
test
aad
lret
mov
jge
jg
jno
insb
jb
je
xchg
push
mov
enter
pop
cmp
rcrl
jnp
out
xchg
xchg
cmp
cmp
sbb
dec
shll
into
and
adc
xchg
sub
jmp
inc
arpl
fs
sbb
mov
jo
and
mov
ds
xchg
das
cmpsl
outsl
loop
mov
pop
scas
jmp
inc
jo
pop
mov
mov
adc
lea
adc
sbb
and
xor
pop
out
xor
mov
mov
paddusw
jne
outsb
pop
scas
das
ljmp
jl
sbb
cmpsl
neg
es
xchg
mov
gs
mov
sbb
js
imul
push
cltd
pop
hlt
out
shll
enter
stc
or
jl
into
or
insb
aaa
iret
add
xor
or
dec
fucomp
mov
pop
cmpsl
inc
loope
jge
out
imul
sub
lea
xchg
xor
add
push
xlat
mov
rcrb
lods
and
jp
js
shll
dec
shll
in
and
cld
addb
test
insl
xlat
lea
sti
inc
add
add
xchg
lcall
nop
jmp
mov
mov
cmpsb
aad
mov
sahf
sub
fstl
push
addr16
clc
mov
push
fcomps
fimuls
or
insl
adc
xor
lret
inc
push
aaa
push
lea
inc
push
stos
sub
push
es
jge
jo
rol
jl
repnz
xchg
mov
sub
and
jp
es
iret
mov
sbb
xacquire
inc
jnp
dec
mov
into
adc
loop
inc
mov
popf
cmp
sub
pushf
push
dec
ja
ror
add
in
xor
inc
sbb
outsb
dec
pop
pusha
dec
fdivrl
push
push
inc
jg
mov
mov
sbb
sbb
pop
push
mov
cmpsb
mov
mov
mov
std
mov
stos
imul
pop
dec
xchg
jle
push
mov
cs
inc
adc
jle
out
and
push
cli
loopne
loop
push
pop
cmc
negb
popf
jecxz
cmp
xchg
adc
or
jle
gs
addr16
shrb
xchg
mov
jno
xchg
je
insb
loopne
push
pop
js
jg
mov
loope
jae
mov
aam
in
outsl
loop
mov
mov
lock
cmpsl
or
and
scas
fisubrl
jno
dec
in
aas
insb
pop
push
insb
dec
call
jge
jae
aam
lods
mov
cmp
mov
outsl
push
add
sub
scas
cmp
cli
pop
inc
sub
mov
ja
adc
clc
cmp
fmull
mov
jge
cmp
mov
pop
inc
xchg
js
fildll
cmp
mov
int3
ficompl
or
sahf
idivb
push
jecxz
mov
imul
stos
ret
cmp
stos
xlat
xchg
jns
popa
inc
dec
push
mov
cmp
adc
ds
xor
mov
sbb
enter
jne
push
lahf
or
jp
mov
aas
xor
and
imul
sub
mov
data16
out
mov
fdivrl
xorl
inc
pop
fsubl
out
sub
and
pop
pop
aaa
dec
loop
mov
testb
pop
aaa
pop
mov
loopne
test
shlb
icebp
mov
jge
add
mov
push
scas
adcb
jle
dec
jo
insb
or
jae
dec
mov
jae
pop
mov
adc
add
aad
addr16
stos
sbb
js
lret
call
pusha
pusha
jmp
pop
xchg
mul
xchg
into
pop
mov
repnz
mov
movsb
aas
inc
mov
or
adc
xchg
ljmp
mov
aaa
mov
popa
jae
fwait
xchg
xchg
sbb
mov
ja,pt
push
jp
dec
jb
ja
cli
fimull
sbb
jbe
cmc
out
aaa
ja
sub
iret
les
aad
xlat
or
rcll
add
cmpsb
pop
xor
mov
incl
pop
dec
xchg
aaa
mov
aaa
pop
idivl
mov
es
cmp
aad
cmp
xchg
xor
ret
xlat
mov
or
pop
inc
xchg
push
insl
aam
popa
sbb
sbb
test
lea
xchg
dec
test
lods
mov
adc
pushf
or
pop
xchg
dec
jae
call
jg
ret
jo
fcmovnu
fistpl
rorb
sub
mov
push
hlt
jmp
ljmp
stos
loopne
dec
jo
addr16
repz
dec
pop
add
test
inc
outsl
sti
pop
jnp
das
outsl
and
mov
jo
mov
mov
mov
jp
xlat
addr16
ret
leave
lods
in
mov
je
addr16
or
xchg
inc
setle
xchg
int
movsl
xor
ss
or
or
fildll
movb
dec
ljmp
das
mov
mov
xor
push
and
cld
icebp
mov
mov
ffree
rcrb
add
xor
add
mov
mov
icebp
pusha
stos
dec
gs
push
rolb
daa
cmp
pop
sub
mov
incb
es
addr16
rcrl
mov
mov
mov
testb
jecxz
aam
imulb
dec
inc
and
icebp
mov
push
lods
outsl
mov
push
add
scas
adcb
mov
pop
ficoml
loop
mov
ss
ret
sub
scas
pop
divl
adc
inc
pop
in
jae
push
push
jp
xchg
mov
xor
inc
xlat
mov
cmpl
aaa
push
fimull
ret
pop
fdivrs
xlat
mov
mov
mov
popa
lods
imul
rcll
dec
push
inc
int
stc
jbe
xor
insb
jns
add
popf
sti
stos
sti
sub
dec
out
mov
fwait
inc
jnp
or
divb
cli
or
inc
mov
cwtl
sbb
aas
insb
add
push
fistpl
testl
movntps
xchg
fmull
fisttpll
fisubl
jle,pt
and
das
pop
cmp
cmpsb
clc
mov
xchg
mov
mov
mov
or
aad
jge
push
sub
div
mov
nop
xor
cmp
sbb
mov
cld
stc
mov
xor
lds
push
mov
pop
xor
inc
xchg
adc
jge
mov
xor
dec
mov
xlat
ror
and
inc
mov
stc
pop
mov
clc
cltd
icebp
or
js
jne
cmp
mov
push
ja
cmc
and
dec
icebp
jg
add
imul
bound
outsb
sbb
add
fwait
ror
xor
scas
adc
popa
fidivl
pop
in
ficoms
xchg
cmpsb
std
test
push
cltd
and
int3
mov
fldt
ja
jge,pt
adc
sbb
or
js
cmp
ss
fcmovu
xlat
sahf
js
mov
and
clc
jl
push
cmc
inc
clc
repz
imul
adc
push
sbb
arpl
xor
jmp
enter
push
jl
mov
in
pop
inc
and
mov
fwait
sub
out
sti
fiaddl
mov
adcl
popf
lret
mov
fdiv
aam
jo
cmp
xchg
ret
or
mov
xor
inc
add
or
outsl
fnstsw
loopne
repz
mov
add
or
sarb
in
jbe
aas
dec
shrb
push
inc
clc
fwait
std
loopne
xor
outsb
xor
js
ss
mov
push
test
add
sbb
jmp
mov
inc
and
cmp
add
aaa
test
sub
loope
jle
cmp
fdivl
or
adc
inc
fisttpll
cmp
sbb
shlb
mov
loop
ret
mov
inc
mov
push
lahf
xchg
daa
push
les
inc
sub
xchg
pop
dec
loope
jne
lds
test
mov
mov
aam
icebp
mov
inc
push
lds
cmpsb
xchg
cli
gs
jg
sbb
jnp
xchg
xchg
cmp
gs
fcmovb
cmova
repnz
cltd
add
mov
cmp
out
xor
sets
lret
es
jne
dec
pop
sub
js
push
mov
pop
test
cs
flds
push
mov
in
mov
cmc
pop
ss
or
lahf
pop
fmull
inc
jb
push
jmp
or
fwait
or
movsl
adc
in
fdivp
js
pop
jl
xchg
cmp
popa
or
pop
sbb
imul
pusha
pop
sahf
outsb
rcr
js
jp
clc
inc
lea
mov
or
das
pop
sbb
jle
ret
ljmp
or
xchg
adc
pop
adc
mov
pop
shrl
jbe
lock
sbb
jecxz
inc
cmp
push
sub
push
mov
sbb
xor
fwait
dec
cmp
sbb
pop
dec
inc
inc
into
jmp
insl
call
rcl
xchg
clc
sbb
sti
pushf
inc
add
repz
sti
sbb
aad
sbb
or
sub
pop
mov
push
test
les
sti
mov
inc
sub
inc
mov
xchg
jbe
in
icebp
and
loopne
cmp
or
push
negl
jge
jg
pop
test
imul
ror
test
push
dec
shll
loop
push
loopne
mov
lds
push
in
jnp
xchg
pop
mov
pop
mov
test
ret
cltd
shl
mov
std
fisubs
aad
pop
mov
insl
sub
insl
insl
cmp
pop
xor
out
push
call
loopne
repnz
mov
add
or
icebp
aam
dec
add
push
shll
aaa
mov
insl
inc
mov
jl
inc
js
mov
scas
pop
sbb
in
mov
inc
mov
pushf
push
cmp
sarl
lahf
data16
xchg
and
lock
push
aaa
cmp
outsb
imul
sub
cwtl
or
jmp
jg
pop
js
mov
push
push
movsb
bound
into
or
icebp
jp
test
xorb
aam
lods
jae
sahf
inc
push
sbb
das
call
aam
jne
push
iret
in
cmp
pop
and
test
test
inc
lods
sub
lret
lock
das
inc
pop
ret
fstl
clc
loope
add
push
sbb
andb
mov
pop
jmp
or
push
imull
cmp
inc
faddl
or
cwtl
ds
push
mov
mov
test
push
xchg
pop
pusha
stc
mov
xchg
sub
jmp
sbb
lret
jne
xor
into
xchg
pop
adc
mov
push
lcall
pushf
and
scas
std
iret
fmul
cmc
cmp
push
stc
popf
pusha
and
mov
mov
mov
adc
xchg
cmp
outsb
or
xchg
xorb
jl
xor
cltd
in
fildl
les
push
enter
inc
imul
decl
push
lcall
lcall
sti
mov
es
push
clc
fidivrs
sbb
inc
scas
sub
into
in
popf
dec
call
shll
lcall
push
jl
repnz
dec
je
jecxz
inc
movsl
das
or
mov
sbbl
lea
or
outsl
test
adc
and
and
inc
lea
in
div
mov
lock
out
adc
cmp
sti
jmp
xchg
push
dec
sub
jg
stc
mov
push
pop
lds
test
imul
and
push
aaa
xor
and
and
jmp
repnz
xchg
arpl
xchg
scas
mov
out
add
adc
xlat
cmp
mov
and
inc
sub
inc
xor
xchg
lock
popl
aam
sub
inc
sbb
insl
ds
in
lahf
sti
clc
out
and
jbe
cmp
push
cmpsb
or
cmpsl
mov
loopne
jne
pop
movsb
sahf
rorb
mov
out
adc
add
push
push
insl
dec
add
sub
mov
out
fisttpll
insb
cli
cmp
lods
pop
mov
cmp
cmp
shlb
and
dec
cld
cmp
inc
xlat
popf
out
ja
popl
fnsave
fwait
cmpsl
push
jae
cmc
dec
or
inc
int
mov
imul
daa
mov
push
push
js
inc
xlat
add
sbb
or
clc
xorb
loope
or
fdivrs
pop
fwait
cmp
jmp
push
add
jnp
push
in
aaa
cmp
outsl
adc
jnp
fmull
push
scas
repnz
xor
jl
add
orl
arpl
sub
push
xor
in
in
scas
jbe
inc
out
outsb
cs
pop
add
jbe
sub
insl
xor
aas
cmp
dec
pop
imul
or
cmc
adc
mov
or
mov
arpl
testl
pop
ja
pop
or
inc
xor
movsl
fwait
sbb
push
or
cltd
cs
arpl
cmpsb
and
lods
sahf
pop
sub
jecxz
jns
daa
dec
popa
sub
jno
dec
enter
repz
mov
maxps
loope
add
mov
or
or
negb
inc
inc
pop
in
sbbb
jne
scas
mov
data16
aad
std
push
pop
adcb
fadds
pop
push
mov
add
jmp
ljmp
aam
mov
sub
popa
fistpll
stos
mov
outsb
cmp
pop
sub
push
inc
aam
mov
comiss
dec
popf
fwait
pop
setns
lock
cmp
lea
cmp
xor
mov
xlat
les
ficoml
es
add
loope
subb
sbb
pop
pop
jl
push
cmpsb
mov
sbbl
cmpsl
fidivrs
ror
daa
xor
in
add
in
outsb
jp
xchg
gs
shrb
jp
lea
adc
ret
adc
push
insl
sbb
pop
sbb
mov
shll
cmpsb
pop
sarb
lahf
test
pop
inc
xor
jb
insb
push
or
xchg
xchg
idiv
or
dec
gs
sub
outsb
call
jecxz
shl
xchg
jge
in
loopne
popf
stos
pop
icebp
mov
jl
inc
or
mov
cmpsb
dec
push
imul
mov
push
push
inc
and
mov
call
and
cmp
push
pop
mov
test
push
mov
and
and
xchg
and
orl
sbb
lods
lret
inc
adc
das
and
and
not
xchg
and
sub
shlb
pusha
out
loope
stos
cmc
mov
imul
mov
pop
dec
pop
js
rcrl
aaa
dec
in
mov
or
sub
push
cmp
mov
ljmp
adc
dec
movsb
addr16
mov
jo
xchg
in
out
jo
inc
add
sbb
add
cmp
aaa
and
mov
add
repnz
mov
clc
aam
in
sbb
int
mov
fldl
dec
dec
xchg
jnp
push
test
pop
jbe
insb
stc
inc
mov
and
or
dec
mov
js
cmp
jg
cmp
dec
cmp
mov
cmp
pop
gs
popf
call
clc
inc
mov
xorl
aam
xor
aas
add
push
sub
test
bound
roll
adc
arpl
jp
imul
push
fxch
mov
mov
jnp
stos
and
dec
stc
inc
xchg
adc
es
jmp
sbb
lods
inc
push
enter
sbb
add
cld
fsub
imul
out
sub
ds
lahf
fisubrl
cwtl
and
xchg
sbb
aam
lds
out
jo
push
xlat
enter
xchg
std
cmp
ja
repnz
rorb
pop
jl
insl
jb
mov
push
dec
jge
xor
icebp
jno
push
push
jmp
shlb
mov
xchg
stos
stos
loope
popf
inc
add
dec
ret
push
movl
lds
pop
mov
addr16
sub
filds
pop
ret
jbe
out
rcrb
outsl
out
cli
outsb
stos
mov
stc
xor
mov
or
mov
adc
push
mov
cmp
out
int3
jp
jbe
dec
or
mov
dec
lahf
fs
aad
add
inc
mov
repnz
mov
mull
push
je
push
loop
rcrl
add
pop
rorb
addr16
push
sbb
mov
movsl
arpl
leave
ljmp
enter
stos
test
mull
jge
mov
push
adc
pop
subl
push
sarb
imul
cmp
imul
adc
inc
lods
outsb
cmp
out
push
inc
or
fldcw
shrb
dec
lods
mov
fisttps
rcr
inc
adc
cs
mov
inc
mov
jle
jle
test
sbb
sbb
mov
ficompl
ljmp
push
push
es
cmc
js
or
sub
call
leave
or
iret
inc
bound
jbe
push
sbb
fdivrl
adc
mov
je
mov
push
xlat
or
dec
pusha
sbb
shr
xchg
lea
cli
adc
fs
mov
test
jl
dec
xchg
pushf
cmp
out
mov
jbe
or
xchg
inc
mov
xchg
cmc
rcrl
push
xor
jge
or
lock
aad
iret
mov
inc
push
minps
push
inc
orl
lock
add
cli
stos
ss
ret
iret
fnsave
outsb
call
lods
rcll
adc
xchg
mov
mov
mov
dec
pop
push
mov
aad
jg
subb
cwtl
test
mov
dec
adc
fdivs
mov
movsl
push
std
shr
adc
or
lcall
fistpl
fdivrs
ret
repz
jmp
mov
popa
test
pop
push
inc
sahf
sbb
cltd
imul
shrb
mov
scas
fiaddl
jecxz
cmp
jg
shlb
rol
sbb
scas
pusha
orl
mov
or
popf
stos
outsl
jl
and
ds
daa
vmovhps
int
push
data16
sbb
mull
shl
aas
aaa
jne
enter
cltd
jne
insl
mov
stc
pop
int3
rcr
shlb
daa
inc
pop
cmp
ds
pop
cld
sbb
jne
dec
xchg
insl
outsl
pop
mov
mov
push
mov
pop
xchg
icebp
xchg
xlat
inc
add
xchg
ja
push
pop
mov
ljmp
push
jnp
jmp
cwtl
insb
les
mov
adc
lods
fst
shrb
mov
call
add
jge
sub
jne
div
jmp
cwtl
sbb
fnsetpm(287
jp
stos
pop
cwtl
push
push
mov
hlt
jns
inc
fld
cmp
adc
or
sarl
sbb
xchg
xchg
call
pop
pop
stos
cmp
push
fnsave
inc
sub
lds
pop
adc
fidivrl
jbe
rolb
inc
pop
gs
ljmp
stos
cmp
mov
mov
iret
mov
xlat
in
imull
xlat
sub
mov
aaa
ret
pop
adc
imul
insl
mull
ret
sbb
pop
test
jle
push
aas
clc
mov
jmp
iret
push
jns
add
jmp
or
cmp
std
and
dec
push
int
aad
stc
cmp
inc
ret
or
fldcw
into
or
jge
xor
sub
sbb
pop
outsb
push
and
mov
mov
xchg
sbb
fdivrp
push
xchg
imul
adc
mov
push
insl
and
icebp
rolb
scas
dec
daa
sbb
cs
test
mov
lea
push
cmp
adc
inc
outsl
loope
shr
adc
rorb
cmp
lds
mov
mov
addb
and
cmp
or
fisubrl
mov
push
call
add
aaa
inc
aam
lds
adc
inc
adc
out
xchg
fbstp
gs
addr16
lret
pop
loopne
es
mov
xor
call
sub
frstor
pop
insl
xor
inc
ds
faddl
mov
je
jmp
pop
jbe
dec
fistps
and
rolb
push
mov
adc
pusha
sbb
jge
mov
cmp
test
xchg
in
jb
aam
fldl2e
imul
push
into
das
add
daa
aas
shlb
add
mov
add
mov
repnz
xor
lret
aam
adc
stos
out
popa
xor
or
mov
pop
jp
mov
repnz
add
sbbb
xor
inc
dec
lds
jg
in
cmpsb
jecxz
xor
pop
and
mov
pop
outsb
rolb
xlat
pop
push
sub
inc
push
out
add
outsl
pop
jne
pop
mov
push
or
arpl
jne
rolb
xorb
shll
scas
mov
jno
sub
outsb
daa
jbe
scas
aam
int
and
and
sbb
mov
jge
imul
xor
jae
outsl
or
xchg
loopne
push
imul
jno
or
test
pop
aad
adc
cmp
mov
sti
lods
mov
mov
jae
mov
sub
inc
jle
jae
sbb
pop
jo
mov
dec
repz
hlt
push
cmp
movsl
pop
fsub
lods
and
jns
ljmp
pop
aam
xlat
gs
xlat
mov
xor
or
jno
clc
xchg
push
sbb
pop
and
ret
xchg
sbb
xchg
aaa
jl
jmp
ds
fistps
leave
rorb
pop
cli
push
fsubrp
sbb
imul
stos
imul
fnstcw
xchg
and
jne
or
add
sahf
loope
lock
loop
sbb
mov
xchg
add
pop
mov
mov
lods
jecxz
mov
js
loop
fistl
xor
xlat
std
fdivrs
mov
es
cmp
mov
scas
adc
xor
xor
out
ljmp
xlat
mov
push
xchg
mov
xchg
or
cmp
cmc
add
cmp
cmc
adc
mov
sarl
clc
roll
cld
aas
pushf
pop
sbb
in
push
cmp
fsubrl
sbb
push
adc
inc
dec
imul
xchg
inc
cli
loop
pop
adc
xchg
lods
lea
jae
adc
imul
js
xor
das
les
js
movsb
mov
sub
out
and
jp
mov
push
mov
mov
sub
mov
push
outsl
out
imul
add
and
es
pop
jp
xchg
push
mov
insl
sbb
or
mov
test
stos
jge
test
inc
and
mov
xor
xchg
and
add
imul
lret
push
dec
sub
iret
mov
sbb
pusha
sub
outsl
mov
sarb
lcall
push
dec
aam
insl
cmp
or
nop
orl
push
cmp
push
and
pop
lret
xchg
in
pop
fiaddl
lahf
int3
jmp
cmpl
mov
xchg
mov
sbbb
mov
test
mov
lret
cmpsb
negl
jecxz
mov
filds
jne
cmp
fs
fiaddl
mov
loope
aaa
jb
icebp
xor
mov
jnp
rclb
dec
je
fnsave
and
push
movsb
fiaddl
mov
loop
xor
rorl
ljmp
add
rcl
pop
dec
and
jmp
lcall
cmpsl
in
ret
jbe
push
inc
clc
call
or
gs
xchg
xchg
outsl
sti
xchg
rcrb
jmp
test
fisubrs
lods
pmuludq
mov
subl
or
jo
mov
jne
enter
repnz
jmp
addr16
lock
stos
aam
push
jne
adc
scas
mov
fcompl
push
lods
icebp
shlb
or
inc
ror
insl
sbb
mov
imul
ds
sbb
mov
push
xor
dec
mov
mov
ror
inc
push
ret
xlat
or
aas
jge
aas
cmc
sub
shll
dec
cmp
ja
fcompl
in
add
stos
pop
push
sub
jae
jbe
hlt
pop
pop
clc
jl
fcmovb
and
adc
and
adc
jbe
cmc
xor
ss
in
pop
mov
lcall
ljmp
pop
mov
or
jecxz
jns
lock
or
repnz
ret
scas
inc
and
ja
insb
jmp
cmp
cli
clc
mov
repz
int
adc
mov
aaa
inc
rcrb
xchg
jl
xchg
mov
sub
and
cltd
add
icebp
call
adc
loope
cmp
add
call
shl
cmp
cld
sti
aad
add
jb
das
mov
mov
outsb
loope
frstor
or
mov
ret
xlat
inc
int
sub
icebp
out
cmp
and
arpl
loop
gs
cmc
mov
ljmp
ds
in
sub
sub
adc
das
mov
sub
pop
ret
icebp
cmp
mov
into
mov
mov
sub
mull
out
lods
jae
jb
lret
cli
mov
icebp
inc
out
jbe
xlat
adc
insb
cmp
jmp
insb
cli
stos
pop
inc
jecxz
clc
sbbb
push
xchg
inc
lods
jae
das
cmp
xchg
mov
mov
ja
in
and
js
decl
inc
mov
js
inc
push
sti
cmp
pop
xsha1
cmpsb
int
jge
mov
pop
jbe
sub
loope
daa
xchg
adc
outsl
add
fcoml
inc
jnp
stos
jae
jecxz
push
lcall
add
or
loopne
ss
sub
lods
mov
outsl
sub
and
mov
jnp
mov
lahf
push
inc
sbb
or
mov
push
aad
sub
jbe
cs
xchg
scas
in
jne
xor
daa
mov
xor
fisttpl
fcomps
jmp
sbb
fdivs
mov
cmp
rcrl
ret
dec
jg
pop
adc
jno
inc
sub
jne
ret
mov
xchg
rorl
jbe
mov
lea
inc
pop
pop
int
sub
mov
sbb
nop
or
push
xor
jle
mov
cli
jge
aam
pusha
adc
push
push
repnz
scas
int3
mov
dec
movsl
xor
push
mov
cs
mov
sbb
and
aas
xchg
or
dec
cmp
cmp
mov
shlb
or
dec
ljmp
and
mov
loop
in
jbe
jge
outsb
cli
push
push
mov
repnz
adc
pop
test
stos
or
test
push
cs
insb
js
daa
lret
push
inc
or
add
movsl
pop
mov
pop
xbegin
or
stos
fcomps
push
pop
cmp
or
and
and
cmc
jb
inc
mov
sbb
push
cmpsb
push
pushf
mov
fld1
scas
jle
inc
mov
mov
xor
push
rorb
out
scas
dec
mov
xlat
test
adc
pop
aaa
ljmp
out
pop
mov
sub
dec
mov
roll
shl
jbe
ds
in
insl
pop
test
dec
mov
or
jmp
push
imul
int
pop
cld
addr16
frstor
push
xor
mov
scas
mov
outsb
scas
add
jge
push
pop
jno
in
fstpl
xchg
jne
jp
add
aad
push
insb
dec
sbb
push
cmc
sbb
xor
or
sbb
inc
test
arpl
mov
or
or
pusha
out
sbb
dec
mov
scas
fcompl
xchg
xlat
inc
loop
mov
call
aas
jmp
scas
and
mov
and
sarl
push
jbe
push
and
add
dec
dec
pop
dec
jnp
ds
popa
aad
arpl
movsl
aad
stc
xchg
aad
pop
rorb
dec
outsb
pop
or
cmp
inc
jecxz
jns
jbe
mov
mov
icebp
into
push
mov
xchg
jmp
stos
ljmp
cmp
cmp
lcall
xchg
inc
xor
or
jnp
jo
or
inc
mov
in
cmp
inc
jns
or
ljmp
mov
mov
int3
clc
addb
dec
jle
test
lahf
sbb
in
call
push
es
in
add
outsb
je
lahf
mov
ljmp
pusha
pop
fisubl
lahf
bound
cmp
dec
mov
add
insb
cmp
inc
shll
add
xchg
pop
cmp
nop
hlt
aam
pop
push
cmpsl
push
into
ds
mov
test
movsb
js
stos
push
or
mov
add
iret
xlat
jl
inc
pop
sbb
jns
sub
faddl
mov
mov
or
fdivr
ljmp
xchg
pushf
sub
jmp
sub
fwait
dec
cmpsb
adc
testl
sub
inc
rol
mov
addb
icebp
xor
and
subl
in
dec
mov
dec
popa
dec
fwait
sahf
push
cs
adc
fadd
dec
pop
cli
mov
call
pop
repz
sub
decl
sbb
rcrl
push
pop
push
xor
and
out
test
jno
xchg
jmp
clc
imul
jg
and
insl
dec
pop
pusha
mov
lods
bound
std
push
ret
mov
mov
fistpl
aad
sahf
add
sbb
leave
mov
and
ja
daa
mov
push
ret
inc
lock
repz
out
pop
add
adc
push
cmpl
mov
lcall
add
mov
in
jnp
out
pop
mov
mov
ficoml
test
dec
pop
lret
inc
shll
in
pop
cmp
push
mov
pop
stos
ret
xor
sti
xchg
mov
roll
loop
in
icebp
lock
dec
das
test
pop
loopne
sahf
arpl
cmp
jle
ja
movsb
sbb
in
hlt
test
or
mov
and
push
rclb
lahf
scas
nop
insl
push
xchg
and
adc
test
xor
adc
ljmp
push
cli
or
loopne,pt
or
adc
sti
dec
out
xor
jg
inc
push
pop
cli
jle
mov
cmp
loope
aam
sub
jo
sbb
jge
inc
sub
or
push
pop
cli
jp
aas
test
jns
in
push
mov
xor
leave
mov
push
loop
hlt
jle
test
adc
arpl
bound
aam
inc
fdivrs
push
lret
fsubrl
in
imul
sub
adc
inc
in
ds
mov
xchg
in
and
aam
adc
arpl
frstor
xor
aam
push
out
mov
lea
sbb
icebp
mov
js
pcmpeqb
pop
sub
sti
sub
sarl
sub
add
xor
mov
mov
insl
pop
leave
push
sub
ja
sub
sbb
lahf
imul
frstor
cmp
or
push
inc
cmc
aad
and
sti
push
push
cmc
out
push
addr16
mov
rorl
into
ss
or
adc
es
ds
mov
int
or
ja
sbb
lds
pop
mov
pop
adc
fcompl
fstps
or
adcb
xchg
sti
xchg
jp
out
cmpsl
gs
lock
cmp
testb
call
push
arpl
mov
fmull
mov
mov
cli
pop
fstpl
outsl
aam
clc
fcoms
cmp
add
pop
pop
xlat
rolb
xor
mov
bound
mov
pusha
in
mov
shl
pop
cli
dec
xor
jmp
adc
pop
push
cltd
nop
incb
pop
fdivrl
scas
sub
push
fnsave
jb
inc
and
mov
repz
fstpt
clc
sbb
jecxz
in
hlt
gs
mov
aad
pushf
push
pusha
dec
xchg
ljmp
add
aaa
fs
and
scas
mov
stos
pop
mov
xlat
add
pop
mov
loope
push
pushf
sbb
adc
sub
les
insl
xchg
imul
clc
in
inc
cmp
push
and
pop
lahf
or
mov
pop
cmp
xchg
add
stos
movb
fdivrl
scas
dec
loopne
mov
push
frstor
adc
dec
dec
scas
push
js
xlat
mov
xchg
test
adc
fsubrs
in
scas
lea
dec
insl
dec
arpl
jmp
jge
fwait
mov
in
out
jbe
xor
sbb
cmpsl
int
ljmp
jbe
inc
jge
mov
jge
jne
das
xor
fcompl
pop
and
cld
mov
sbb
or
mov
fnstsw
mov
xor
fbstp
xchg
fldt
jmp
fadd
pop
xchg
insl
add
fucomip
mov
push
scas
mov
mov
es
push
push
sbbl
pop
andb
cmp
frstor
popa
mov
dec
fadd
jne
fdivp
jmp
cltd
mov
aam
es
push
sub
sub
jb
push
insb
push
sbb
pop
mov
fiaddl
mov
sbb
adc
push
pop
outsl
push
scas
ja
sarb
and
dec
xorl
divb
cmp
cwtl
pop
mov
test
push
ja
xchg
fucomi
cltd
lods
test
push
ds
jns
xor
fdivs
push
lret
cli
pop
inc
ud0
bound
in
mov
mov
xor
out
psubb
fiadds
jmp
xor
mov
stc
mov
js
xorl
sbb
adc
sub
push
lock
pop
mov
mov
xchg
mov
icebp
jle
inc
divl
xchg
cmp
repnz
xchg
hlt
repnz
xor
cmp
loopne
pop
and
loope
aas
mov
ret
inc
mov
push
cmp
lahf
bound
sub
jecxz
cmp
stos
push
aas
int
inc
xchg
add
rcll
cmp
adc
pop
pop
in
mov
repz
sbb
pushf
pusha
jecxz
jg
push
lret
mov
jl
jbe
lock
lcall
xchg
je
or
imul
jl
mov
mov
and
mov
sub
jae
fisttpll
sub
shl
in
jge
ret
mov
repz
arpl
addr16
test
add
js
mov
mov
and
scas
leave
fists
ret
out
ja
sub
xchg
fstpl
and
jle
les
ret
inc
leave
fs
jp
mov
lret
jg
or
sahf
adc
adc
sti
or
popa
pop
stc
jns
mov
cmp
imul
mov
pop
jo
packuswb
and
jecxz
mov
sbb
bound
add
mov
cmp
mov
ds
ljmp
les
mov
ja
aas
sub
cmp
pop
inc
test
add
call
dec
mov
mov
mov
push
mov
pop
clc
in
int
adc
dec
out
sbb
and
sbb
pop
pop
mov
ret
mov
iret
sbb
imull
inc
adc
cli
test
jle
imul
pusha
pop
jecxz
cli
push
adc
and
jb
sbb
and
push
jmp
pop
ja
rclb
mov
cmpl
sub
cwtl
outsb
out
cmp
rorb
gs
dec
hlt
sarl
std
push
shrl
add
xchg
imul
cli
sbb
jmp
sub
outsb
xorb
jge
jno
add
cmc
jb
test
call
rep
cmpsl
adc
testl
mov
jge
mov
mov
mov
fdivrl
xor
lret
cmp
rolb
sub
cmpb
adc
mov
lcall
sarb
loopne
or
in
ret
mov
mov
popf
fidivrs
das
push
out
and
xor
loop
and
add
imull
xor
mov
pushf
push
in
popl
stos
dec
and
insb
cli
sbb
xor
sarl
into
sbb
in
mov
jecxz
popa
aas
je
pop
mov
mov
xchg
lret
cmp
jo
inc
xor
loop
scas
les
push
mov
ss
xlat
inc
fstl
inc
mov
scas
jecxz,pt
adc
imul
mov
cmp
xor
jl
mov
pop
or
add
into
das
bound
notb
xor
xor
leave
hlt
xor
sub
js
or
inc
mov
inc
cmp
aaa
das
test
cli
dec
mov
sarl
aam
inc
pop
mov
test
ficomps
or
sbb
adc
push
mov
xlat
inc
pop
fstpl
aam
iret
inc
bound
scas
pop
mov
or
pop
sbb
push
xlat
jbe
dec
xor
dec
pop
push
cli
xchg
mov
jg
and
ret
fldt
xor
push
pop
js
pop
leave
cmpsb
dec
jnp
fldcw
dec
push
sub
mov
insl
iret
rcr
test
xlat
adc
loopne
aas
push
sbb
pop
pcmpeqw
sbb
xchg
addr16
mov
lea
call
sbb
add
arpl
imul
gs
mov
fisubrl
xor
sbb
lods
call
ret
fsubrs
adc
adc
push
add
lahf
mov
fstpt
clc
mov
pop
sub
imul
mov
lods
outsl
push
mov
cmp
loopne
lods
or
ret
and
or
and
dec
cs
mov
jge
imul
out
pop
imul
push
cmp
pop
shlb
shrb
add
dec
mov
fucomi
jbe
pusha
push
adc
mov
or
outsb
fidivl
ljmp
aad
out
xor
fiadds
mov
jecxz
push
mov
xor
jo
nop
in
incb
sbb
add
push
cmp
xchg
pop
bnd
clc
lock
cmp
es
adc
inc
mov
sti
loop
ret
pusha
andb
lods
add
scas
data16
out
inc
add
jne
je
sbb
sbb
mov
adcb
test
cmc
mov
sbb
xor
lods
mov
inc
rcll
lahf
je
icebp
xchg
and
mov
cli
enter
sar
inc
lods
pop
mov
sbbb
jge
arpl
loop
hlt
inc
xchg
pop
sti
nop
push
aam
and
pop
pusha
add
cmp
rcr
imul
fucomi
jnp
stos
push
inc
pop
cmp
imul
outsl
fistps
icebp
dec
cmp
xchg
sarl
ss
mov
mov
and
xor
fs
outsl
idivb
loop
push
shrb
sub
push
das
call
push
pop
or
inc
cmp
adc
ss
mov
sbbb
cmp
inc
xchg
pop
cmp
scas
addr16
inc
pop
rcl
mov
inc
out
shlb
fwait
subl
lock
mov
pop
pop
and
pop
pop
cmp
shlb
std
sbb
scas
mov
dec
ret
mov
loopne
arpl
mul
xor
aad
push
push
xor
push
sbb
out
bound
inc
or
addl
mov
or
add
por
push
rcl
lods
pop
aad
loope
jne
cmp
xchg
or
clc
pusha
jbe
daa
sbb
jmp
clc
lret
pop
and
loop
ss
mov
mov
ds
sbb
adc
and
js
cltd
mov
xor
shrb
out
out
aam
xchg
or
and
leave
sbb
dec
aas
jle
ljmp
fwait
loope
inc
adc
aaa
and
out
sbb
or
call
call
aam
and
mov
repnz
pop
xor
jecxz
mov
int3
inc
xchg
mov
mov
inc
out
loop
fnstsw
dec
xor
sti
mov
aas
push
in
cli
test
fldenv
xor
pop
sub
cmp
cmp
in
test
xor
and
fdiv
jl
je
je
mov
pop
shlb
pop
dec
add
or
nop
ljmp
adc
jo
dec
lock
loop
insl
add
stos
iret
shrb
or
das
sub
inc
sbb
orb
push
and
fisttpl
lds
push
add
cmp
aaa
scas
push
xlat
adc
push
pop
jmp
mov
cld
cmp
cmp
mov
sub
shrl
push
arpl
leave
push
aas
and
into
cmp
sub
jg
or
ds
and
sub
ret
pop
cltd
push
mov
sbb
ja
dec
loopne
test
xlat
incl
and
cs
sbb
cld
fs
pushf
jb
xor
xor
push
push
cs
stos
stos
stos
mov
add
fwait
pop
sbb
sbb
push
pusha
add
mov
inc
outsl
add
mov
mov
xchg
xchg
jle
in
xchg
js
mov
fstpt
gs
imul
or
push
jno
imul
daa
decb
inc
cwtl
mov
outsl
or
in
ds
jge
add
adc
pop
jp
jp
push
enter
lea
repz
pop
xorl
cmpb
daa
bnd
icebp
jmp
xlat
sbb
mov
mov
call
push
aaa
mov
movsl
mov
jns
push
adc
lock
out
rcrb
xchg
cmpsb
inc
inc
mov
inc
inc
shl
or
and
in
shll
std
jg
fidivs
sahf
ljmp
jg
in
or
cmp
mov
xor
pop
test
cmp
lahf
and
lret
loop
adc
lcall
mov
add
pop
test
roll
outsb
and
in
mov
adc
and
aad
or
mov
test
insb
push
aaa
and
push
pushl
lret
fcmovb
push
xor
add
rolb
clc
inc
fimull
js
or
stos
or
fisubs
mov
imul
pop
lcall
mov
mov
out
cmp
repz
cmp
icebp
jge
pop
xchg
call
inc
fdivl
iret
mov
jg
dec
sbb
addb
push
inc
mov
jne
imul
movsb
cmp
jo
jle
into
or
push
ret
stos
mov
cmp
mov
mov
lods
jmp
push
fs
jne
fldt
aaa
jl
cmp
lahf
pop
and
loop
faddl
pushf
add
ljmp
xor
outsl
outsb
pop
js
je
push
cli
push
into
lds
adc
call
clc
add
subl
fwait
lods
mov
or
mov
or
addl
clc
mov
and
jl
push
sbb
jno
or
movsb
fstpl
mov
sahf
das
into
insl
fistpl
push
out
pop
sub
or
ds
xorb
movsl
or
jecxz
push
out
or
sbb
ja
and
ds
pusha
cmp
aad
push
sbb
sbb
iret
imul
adc
xchg
filds
cltd
dec
mov
mov
out
push
rorb
subl
je
push
push
xor
cmpsl
mov
xchg
rcl
push
fcomp
push
sbbl
fsub
insb
aam
pop
clc
mov
jno
pop
jecxz
aas
dec
jne
xchg
sti
jnp
sbb
data16
mov
add
pushf
lahf
xor
cli
xor
hlt
jnp
push
add
xchg
movsl
sub
pop
test
test
stc
mov
pop
movsl
pop
imul
xchg
push
hlt
aam
sbbb
lds
sbb
or
es
lods
mov
sti
aad
sarl
adc
jbe
mov
dec
mov
loope
mov
divl
mov
add
cmp
mov
lret
in
sbb
pop
out
add
lret
pop
push
adc
dec
popf
mov
scas
mov
and
cmp
in
adc
jmp
scas
add
insl
aas
ljmp
inc
or
jl
cmpsb
inc
adc
sub
test
mov
es
movsl
sub
mov
aam
fbstp
mov
data16
sbb
push
fstpl
sbbb
inc
push
mov
sbb
mull
fidivs
lahf
icebp
sub
pushf
sahf
fcom
inc
stos
cmp
adc
call
and
ds
jl
sti
insl
scas
mov
jmp
mulb
push
scas
sbb
mov
mov
cmp
jl
jecxz
or
ret
push
adc
sub
fcomi
pop
test
mov
call
inc
outsl
lods
jne
shlb
or
sub
fistpl
jb
jp
lea
sbb
push
lds
add
fdivp
pop
xchg
sub
xchg
addr16
roll
in
adc
sbb
cmpsb
inc
jp
andl
jp
add
cmp
jae
cmpsb
mov
sub
push
mov
jbe
and
aad
jns
sbb
and
pop
ja
rcl
dec
sub
xor
sub
push
add
or
pop
sbb
pop
dec
sbb
subl
shrl
ret
pop
sbb
sahf
int3
fistpll
push
xchg
dec
push
push
sbb
cmp
jge
hlt
lock
pop
push
push
pop
in
jmp
mov
lahf
jo
jb
mov
jo
sbb
out
leave
ffree
stos
cli
loopne
ret
adc
rep
adcl
shl
mov
mov
sub
repnz
dec
sbb
jo
mov
sbb
inc
cmc
push
loopne
push
inc
popa
xlat
mov
scas
dec
shrb
out
mov
cmovno
arpl
xchg
jecxz
popa
jbe
adc
xchg
aas
mov
add
jge
ret
fdivrs
push
jmp
aas
les
pusha
and
les
pop
pop
and
adc
push
xchg
cmpsl
test
insb
iret
cmp
fists
and
nop
mov
xor
pop
pop
sbb
jge
icebp
mov
dec
cmp
rolb
inc
dec
outsl
insl
sub
sbb
sahf
outsl
cmp
ljmp
bound
jo
adc
adc
xor
and
push
or
fisubrl
jo
pop
sbb
jnp
mov
loope
cld
inc
sbb
jp
mov
mov
and
cmpb
loopne
push
loope
pop
testb
cli
pop
dec
or
into
dec
mov
arpl
and
test
mov
push
movsb
jbe
xchg
or
mov
shl
repz
adc
aaa
nop
pop
lret
fidivrs
pop
nop
jne
sbb
fldenv
jnp
lock
jo
pop
popa
or
xchg
lds
cmp
mov
dec
sbb
aas
scas
cmpsb
mov
fdivrl
mov
xrelease
mov
dec
mov
xorb
das
jge
or
push
insl
sub
test
outsb
xor
push
bound
xor
jp
jmp
mov
sbb
jae
das
sbb
lahf
xbegin
out
scas
jmp
int
sbb
sarb
sub
jl,pt
repz
sbb
push
inc
test
mov
mov
dec
cld
mov
and
nop
jbe
rcr
pop
push
fcompl
and
sub
push
outsl
cmp
jge
ljmp
add
movsl
mov
mov
addl
add
jb
push
in
jle
call
stos
int3
jp
xchg
into
cs
add
dec
inc
jns
xlat
or
popf
pop
pop
jge
loopne
or
ror
loope
mov
lret
or
icebp
mov
stc
cld
cmp
mov
jg
pop
jp
inc
sbb
xchg
repnz
xor
std
shrl
inc
pop
in
in
push
xor
xchg
mov
inc
pop
mov
xchg
loope
or
cmp
dec
je
aas
insl
pop
jmp
mov
imul
out
inc
sbb
aas
stos
aas
lods
sbbl
pop
pop
jecxz
pop
aas
mov
pusha
outsb
lea
stc
and
xlat
ja
fstpl
mov
pxor
mov
inc
ja
lock
js
jbe
and
repz
sub
sbb
push
xor
aam
inc
or
xchg
pop
xor
aam
mov
pop
pop
and
adcb
mov
and
jp
adc
arpl
in
popa
mov
gs
out
xor
xchg
repz
dec
icebp
and
jmp
mov
fiaddl
and
and
mov
into
cmp
out
cmpb
sbb
adc
std
sbb
mov
lcall
dec
push
xor
mov
out
push
aam
lcall
mov
fcmovbe
imul
daa
ret
sti
rorl
test
out
push
sbb
pop
push
xchg
fisttpl
sbb
daa
inc
xlat
push
add
jge
in
les
mov
imul
inc
mov
in
jle
fwait
sub
fisubrl
push
faddl
inc
pop
jle
sub
mov
arpl
jl
daa
das
mov
and
xchg
push
dec
or
adc
aas
rol
rcrb
jl
push
push
sub
mov
test
mov
xor
jb
js
loopne
cmp
fsubp
and
call
scas
cmpsb
dec
fwait
xlat
xor
rorl
lock
cmp
xlat
scas
fsubs
cmp
dec
call
fstl
mov
and
push
mov
call
cmc
mov
mov
sbb
loopne
cwtl
jle
into
shrl
stos
fisttpl
mov
pop
fldcw
xchg
jns
jno
mov
adc
adc
cmp
aad
add
xor
outsb
jp
sub
mov
pop
xor
aad
and
out
stc
icebp
lret
int
imul
aas
push
add
iret
outsl
inc
pop
inc
push
pmaddwd
outsl
mov
in
pushf
inc
sbb
mov
mov
cmp
sbb
mov
xchg
and
mov
das
cmp
xchg
jp
and
test
loope
jp
xor
addb
incb
sbb
mov
pop
dec
dec
jl
lock
lahf
imul
xor
shl
arpl
xlat
js
scas
cmp
addr16
xor
popa
mov
mov
cmc
jmp
ret
jbe
inc
adc
mov
inc
cmpb
dec
jne
maskmovq
imull
mov
xlat
mov
jb
dec
dec
aam
cmpl
push
sub
inc
or
mov
ret
jmp
js
xchg
mov
or
xchg
call
xor
aas
and
jl
mov
pop
loop
repz
sti
adc
int3
daa
mov
in
cmp
or
bound
call
inc
mov
sarl
aam
jno
sbb
cs
paddusw
testl
mov
inc
sbb
icebp
sub
lret
inc
jnp
mov
mov
movb
xchg
jp
jnp
push
or
sbb
mov
gs
pop
test
pop
or
andb
xchg
pop
std
add
xor
adc
fildl
push
ljmp
aas
test
mov
inc
js
jl
push
test
aaa
in
jp
mov
lods
mov
cmp
cmp
les
xlat
sub
loopne
mov
cmp
xchg
inc
push
popf
fcomi
pcmpgtw
outsb
xor
mov
popa
jmp
arpl
faddl
xchg
cmp
adc
push
punpckhwd
fidivrl
js
or
add
push
sbb
mov
into
add
pop
cmp
cli
mov
das
fdivrl
xor
mov
sub
mov
fistpl
loope
cmp
jmp
dec
imul
xchg
and
mov
and
mov
jmp
mov
xchg
jnp
jbe
shll
aaa
push
sarl
ss
stos
inc
dec
and
xchg
int
stc
add
shrb
pop
mov
insl
cmp
lret
ficompl
mov
cmp
mov
dec
in
xchg
sar
mov
insl
pop
jo
scas
loope
xor
adc
shlb
ret
jbe
jl
js
jbe
aaa
or
popf
js
ss
fsubr
xor
data16
sbb
lret
mov
imul
sub
dec
and
xchg
cmp
jmp
push
mov
sbb
and
inc
sbb
lock
pop
mov
mov
sbbb
adc
adc
shrl
aaa
idivb
xor
mov
in
pop
sub
fnsave
andb
sub
xor
stos
inc
popf
pop
cmp
neg
lods
shlb
movsb
xlat
mov
push
pop
dec
xchg
mov
jae
mov
xchg
xchg
mov
mov
pop
cmp
push
mov
divl
pop
orl
xor
cmp
sbb
leave
sbb
movb
fisubrs
ret
xchg
mov
inc
ja
lock
adc
dec
loopne
pop
call
mov
scas
loope
xor
or
adc
cmc
mov
cmpsl
cmp
imul
scas
jnp
push
sub
mov
or
rcll
outsl
mov
fldl
cmp
das
or
shlb
out
lods
push
loopne
mov
xor
dec
mov
ret
add
jno
fs
jne
cli
call
pop
mov
data16
sub
mov
mov
cmpsb
out
aam
adc
jge
stos
xorl
xor
jne
cs
push
xchg
pop
pop
xchg
lods
lock
lock
out
inc
push
cli
mov
shl
and
lahf
shrb
push
je
adc
adc
lods
mov
rcrl
adc
lods
sti
push
cmp
scas
mov
maxps
push
aas
xlat
cmpsl
sarl
movsl
test
andl
outsb
cmpsb
leave
rcl
cmp
adc
pop
adc
jp
inc
fisttpl
cmp
jbe
inc
dec
pusha
push
mov
loope
mov
aad
rcrl
out
setp
mov
dec
lret
rolb
adc
repnz
inc
out
dec
mov
jne
sub
adc
loopne
mov
jl
sti
mov
mov
lahf
mov
aaa
aas
insl
push
jmp
xchg
incb
adc
or
arpl
cltd
mov
inc
sbb
pop
jae
sbb
xlat
jge
jne
inc
jo
outsl
add
repz
loope
push
int3
cmpl
lods
jle
in
jge
fmull
xchg
shrb
xor
cmpsb
xlat
and
adc
outsl
int
stc
into
cmp
sbbl
mov
jae
push
mov
sti
rolb
add
movsb
mov
mov
xor
fmull
xchg
out
xchg
pop
lea
sbb
mov
and
out
and
outsb
sbb
adc
int
mov
cmp
cld
jo
jle
arpl
stos
add
test
cmp
js
ljmp
mov
loopne
dec
lret
scas
add
xor
lret
sub
mov
xor
fwait
cmpsl
addr16
dec
pop
ss
fmull
test
faddl
push
cli
or
mov
hlt
add
jb
js
aad
adc
pop
add
mov
cmp
pop
and
jns
mov
negl
das
in
stos
sbb
fcoms
mov
dec
add
cmc
push
mov
sub
filds
and
cmp
movl
sbb
dec
cmpsl
mov
lret
arpl
mov
insl
fsubs
outsl
pop
lock
pop
cmp
mov
push
xor
sahf
inc
lret
jg
bound
xchg
mov
movl
aam
jp
mov
ljmp
mov
and
sub
cmp
les
sbb
into
imul
or
cmp
arpl
fnstsw
das
and
dec
aaa
push
ljmp
mov
test
das
ss
cwtl
xchg
mov
cmp
or
mov
inc
popa
push
sub
ds
faddl
test
xor
ljmp
xor
sarb
pop
pop
inc
xlat
sub
jnp
push
jo
push
or
imul
adc
xor
mov
lods
insl
sahf
fldt
xchg
sbb
pop
xchg
test
ss
cmp
in
loopne
mov
xchg
pusha
dec
mov
and
das
or
test
hlt
mov
mov
or
lock
rcl
scas
jae
add
add
mov
and
cmp
ret
adc
jae,pn
jg
jo
inc
cmpsb
or
inc
cmp
lock
mov
jno
push
mov
xor
dec
mov
xor
mov
dec
dec
push
mov
xor
mov
jb
dec
outsl
in
fs
lret
cltd
std
cmp
scas
or
or
jo
and
pop
fcomps
jge
pop
lea
test
cs
popf
add
jecxz
loopne
popf
sti
imul
mov
inc
mov
mov
sbb
pop
pusha
and
jp
rorl
or
shlb
aad
inc
testb
stos
sub
or
testb
push
jo
cmp
lds
push
sbb
test
scas
lahf
mov
xor
and
xor
or
negb
sub
cmp
mov
cmp
idivl
sub
push
loopne
in
cli
mov
mov
sti
pusha
xchg
mov
aas
dec
loopne
ss
cmp
mov
iret
sbb
add
in
add
mulb
add
add
jle
outsl
add
xor
sub
fsubr
jnp
dec
js
sbb
xor
and
lcall
shlb
out
into
mov
cmc
sbb
mov
aaa
xchg
outsb
mov
push
aad
inc
cltd
orl
and
daa
stos
dec
cld
add
insl
rol
xlat
push
nop
cmp
rclb
jbe
aaa
add
call
mov
or
and
flds
mov
mov
pusha
stos
fsubrs
dec
push
icebp
fstpt
push
ret
int
mov
push
cmp
add
sbb
pusha
and
aad
js
mov
jbe
mov
pop
mov
addr16
and
adcl
repnz
shl
aad
cli
jecxz
repz
xlat
in
movsl
push
xor
lahf
addb
cmp
in
movsb
push
mov
mov
cmpsl
jns
nop
lahf
pushf
dec
adc
mov
push
adc
arpl
xchg
mov
push
jae
and
shl
add
jne
sub
ja
inc
sub
scas
jb
cmp
and
inc
adc
ret
outsb
sti
xor
and
xchg
cmp
mov
sub
mov
insl
inc
test
pop
dec
push
sbb
mov
sbb
push
mov
lods
mov
adc
stos
dec
je
or
xor
clc
push
sub
mov
fs
push
mov
xchg
scas
inc
mov
cmpl
sub
ljmp
ret
xlat
pop
aad
mov
adc
pop
push
clc
test
clc
aad
xchg
pop
jbe
std
icebp
pop
jp
sbb
mov
cmp
inc
test
mov
push
lock
fsubrs
mov
ficoms
jmp
jne
cli
cmc
dec
dec
pop
ja
adc
mov
cld
mov
ret
stos
call
and
frstor
repz
mov
cmpsb
ret
cmpsl
mov
lock
xchg
pop
and
push
jae
xor
push
out
rcll
sti
xchg
mov
rcrb
pop
xchg
fimull
cmpxchg
lret
out
add
scas
sbb
loop
aad
sbb
rcr
xchg
nop
ljmp
sbb
pop
dec
mov
call
cmp
shll
cmp
js
jne
fmull
mov
and
add
cmp
movsl
xchg
mov
dec
lret
and
mov
cmp
jmp
add
and
adc
mov
fmull
cmp
pop
ret
and
jbe
cmp
mov
lods
fcoml
push
hlt
sbb
and
xor
mov
inc
push
frstor
in
fbstp
je
gs
xchg
sub
popf
out
push
lcall
das
jp
pop
dec
mov
dec
pop
and
sbb
xchg
imul
aaa
sub
mov
fildll
jg
pop
cmp
mov
dec
mov
push
insb
mov
sub
loopne
push
sbb
jp
push
clc
fsubrs
rorb
lea
and
mov
data16
es
inc
sbb
mov
sub
loope
inc
test
jge
add
jecxz
push
lea
scas
test
adc
inc
cmp
imul
insl
jbe
mov
clc
xchg
sbb
pop
and
movl
jb
daa
fptan
das
lock
test
dec
push
add
lret
verw
in
insb
push
pop
shlb
mov
out
sbb
pop
jl
sbb
jg
out
push
ds
adc
addr16
jge,pt
movsb
inc
pop
mov
stos
sbb
pop
arpl
adc
mov
fistpl
ja
add
pop
xor
xchg
loopne
sub
or
adc
mov
xor
pop
lds
aaa
mov
popl
outsb
lds
ds
into
adc
push
mov
fnsave
mov
inc
pop
pusha
out
push
push
fdivl
fdivl
lods
jne
lea
outsb
inc
sarl
mov
sbb
cmc
arpl
adc
cwtl
ret
sub
adc
addl
mov
je
xor
ds
daa
sbb
lods
mov
xlat
movl
sbb
push
dec
jge
and
pop
mov
push
mov
jg
mov
gs
xlat
enter
push
push
add
dec
adc
arpl
mov
jecxz
popa
daa
ja
pop
insb
dec
mov
nop
and
ret
ret
cmpl
ret
loop
pop
xchg
pop
pop
cs
je
rol
sub
jmp
mov
push
jge
dec
xchg
mov
fisttpll
fstpl
mov
inc
push
xchg
mov
imul
xlat
or
jne
sbb
add
push
je
das
clc
aam
inc
or
orl
sbb
mov
out
stos
inc
pop
push
mov
and
addl
push
movsl
fiaddl
push
outsl
cmp
pusha
mov
shll
lods
add
jmp
and
out
or
push
adc
adc
and
sahf
mov
aaa
bound
test
push
mov
ja
jle
inc
mov
xchg
pop
cmp
sahf
leave
mov
sbb
lds
or
out
inc
imulb
dec
mov
loop
jmp
jo
xchg
xchg
jle
or
loopne
rorl
mov
mov
std
push
js
jns
outsl
out
mov
mov
in
pop
mov
push
rcll
dec
sub
or
stos
shll
xor
lock
push
push
or
outsl
clc
add
cmp
xchg
aam
adc
and
mov
shll
ret
jne
hlt
pop
cmp
insl
jbe
cmp
push
addb
mov
sbbl
int
add
jbe
mov
repnz
out
dec
sub
fcompl
fimuls
imul
mov
jne
jl
xadd
sub
neg
rcl
inc
sarb
dec
mov
sbb
xchg
jge
bound
mov
inc
mov
insl
push
cltd
cmp
mov
ja
shrl
add
add
jg
cmp
sub
mov
aad
lds
ficompl
xor
and
pop
pop
fdiv
and
and
ffree
xchg
test
shll
xor
enter
int3
rcl
mov
xor
in
push
rolb
cmpsl
add
mov
jmp
adc
repnz
pop
orb
aad
leave
dec
call
cwtl
cmp
pop
pop
pop
cmp
mov
sbb
add
in
nop
out
in
cmp
adc
mov
dec
dec
aad
or
andl
aad
sbb
cmp
adc
jge
mov
ja
push
hlt
dec
fdivl
aad
mov
or
cmpsb
jno
rolb
pop
jl
js
jb
pop
xchg
adc
fistpll
pop
lock
lds
sti
mov
mov
call
stos
pop
mov
mov
sub
insb
jmp
sbb
add
pusha
pop
addr16
dec
les
fstpl
cmp
jecxz
mov
mov
push
or
xor
sbb
add
aad
incl
sbb
add
jp
sub
roll
mov
hlt
jb
xor
test
pop
fcmovnu
repnz
mov
mov
test
dec
sub
xchg
lock
das
nop
negb
mov
push
xor
out
icebp
jne
jge
js
sbb
inc
cmp
jne
jp
cmpsl
jb
in
das
je
hlt
jnp
pushf
pop
lret
loope
mov
and
repnz
sbb
push
adc
aad
ficoms
xchg
adc
orl
inc
test
mov
fwait
and
xchg
xor
mov
lea
pop
icebp
les
mov
dec
and
rcll
push
mov
mov
adc
or
mov
xor
aam
iret
repz
pop
xlat
sbb
mov
push
xor
dec
mov
mov
cmp
ret
ficoml
pop
push
xlat
jle
fldt
inc
idivl
ss
inc
outsl
pop
pop
adcb
xchg
inc
pop
pop
cld
mov
xchg
data16
out
add
mov
insl
jl
sub
sbb
jae
pop
xchg
cmp
jle
outsb
popa
cs
fsubrs
call
pop
cmovg
xchg
or
dec
adc
cwtl
pop
les
cs
sub
out
mov
cmpsb
lahf
mov
and
cmp
jge,pn
fldt
mov
inc
cli
lods
loop
xor
out
xlat
notb
mov
movsb
addr16
mov
outsl
stos
pop
cld
pusha
into
mov
mov
jne
aad
mov
loope
mov
pop
bound
call
sub
call
mov
ss
and
jbe
fidivl
sub
arpl
sub
stos
and
popf
std
icebp
movsl
and
mov
cmpsl
hlt
push
shlb
pop
pushf
outsb
iret
push
mov
jo
cld
pop
lods
scas
adc
das
or
outsb
cmp
push
outsb
inc
jl
xchg
loop
in
fisubl
add
cmp
std
test
cmp
pushf
xor
xlat
enter
mov
adc
mov
scas
scas
imul
cmpsl
dec
adc
pop
pop
es
sbb
jg
bound
cmpsb
cmp
push
pop
inc
push
jge
adc
stos
cld
insl
adc
in
sbb
daa
gs
lods
xchg
jge
adc
scas
sub
cmp
inc
push
scas
fldenv
mov
and
fidivrl
daa
pop
push
sub
shr
lods
adc
jl
fdivl
lahf
sbb
sbb
sub
scas
or
ss
sbb
mov
popa
dec
rcll
fdivl
cmp
jmp
jno
jge
mov
and
in
rcll
cmp
hlt
mov
inc
neg
mov
jnp
int3
cs
jnp,pt
cmp
mov
pop
xchg
in
xor
test
fldcw
mov
loope
and
cmpsl
jecxz
jbe
fwait
xor
adcl
jmp
sbb
xor
add
loope
pop
pop
xlat
jno
clc
xor
xor
ja
fst
ljmp
sub
in
push
popf
adc
pop
fistpll
nopl
and
mov
mov
mov
mov
icebp
aam
dec
bound
lea
mov
jmp
push
sub
cmp
test
outsl
insl
jle
inc
sub
scas
out
pop
jmp
fs
push
ret
ss
out
dec
mov
jge
out
pushf
inc
mov
or
out
push
enter
fldt
fdivrp
aad
loop
sarl
mov
jnp
adc
jg
inc
inc
daa
inc
push
mov
aas
hlt
mov
mov
inc
ljmp
iret
jne
lret
fstpl
ret
pop
je
in
sbb
xor
jb
ret
push
jne
clc
push
out
pop
adc
jl
mov
and
cmp
fdivr
popa
adc
push
cmp
imull
fdivrs
hlt
pop
mov
pop
dec
ja
inc
fs
jle
xor
mov
dec
lock
mov
inc
jnp
push
icebp
cmp
aaa
xchg
mov
jno
pop
cwtl
out
pop
mov
insb
call
and
sbb
stos
sbb
std
ljmp
xchg
add
mov
imul
cmpsl
clc
cmp
fcomps
adc
test
sub
fdivrl
sbb
jle
sbb
adcl
fmul
mov
outsb
push
cltd
roll
loop
add
fdivrs
fisubl
outsb
imul
push
jg
insl
adcb
ljmp
addl
in
loope
ret
xchg
mov
push
xchg
inc
pop
sub
ljmp
xor
cld
out
iret
stc
addl
adcb
jl
sar
ljmp
or
shrb
cwtl
inc
fcoms
lds
mov
xchg
mov
call
shlb
add
mov
mov
leave
mov
push
adc
pop
dec
fs
push
sbb
arpl
dec
push
add
ret
fs
dec
cmp
int3
push
sbb
std
cmpsl
cmp
ss
xchg
xlat
pop
xchg
and
fisttps
inc
mov
dec
gs
xor
mov
jno
mov
xorb
mov
std
cmc
stc
or
and
sahf
add
popa
jecxz
cmpsb
xchg
int
popf
pusha
cmp
ja
rcrb
or
push
dec
leave
les
inc
notl
aam
inc
hlt
or
cmpsl
jecxz
es
sbb
test
push
jns
push
sbb
or
insl
icebp
shrl
into
divl
repnz
or
push
mov
cmpsl
incl
xchg
xor
outsb
inc
mov
adc
std
icebp
mov
shll
jnp
push
stos
insl
pop
aas
ret
pop
or
sub
js
outsb
jp
sub
jle
lcall
aad
data16
mov
movl
aas
ss
adc
mov
push
in
stos
in
mov
movb
push
insl
ret
xor
rorl
sbb
lret
mov
xchg
test
sbbb
movsb
lret
xor
add
sbb
cmp
pop
dec
push
test
mov
cmp
aas
dec
std
cli
jo
xchg
push
mov
jae
out
and
repnz
test
xor
fnstsw
scas
xor
mov
in
mov
je
inc
scas
addl
pop
les
in
std
cmp
mov
adc
pop
xchg
adc
mov
pop
out
cmp
jecxz
jns
xor
adc
faddl
xor
test
aas
add
mov
pop
movhps
jmp
js
into
jge
mov
cwtl
jle
jmp
push
jb
jecxz
imull
adc
xchg
shrd
js
add
dec
out
mov
dec
iret
push
mov
adc
xchg
repnz
sbb
inc
jg
mov
mov
mov
fidivrl
push
cmp
hlt
add
mov
mov
std
das
ss
arpl
xchg
sahf
or
pop
int
push
mov
filds
cmp
mov
xlat
mov
and
lds
mov
sub
jno
inc
lea
or
mov
jno
mov
add
pop
mov
cmp
aam
out
cld
loop
cli
ja
jp
pop
push
and
das
lods
sub
fdivrs
pop
leave
pop
test
and
jle
sbb
mov
push
jge
iret
or
inc
xchg
mov
orb
xchg
hlt
sub
fmull
test
sub
dec
push
arpl
or
xchg
lds
or
and
fnstsw
mov
sub
pop
push
popa
and
pushf
fadds
mov
add
iret
cmpsl
mov
rcll
scas
imul
mov
and
add
xchg
in
jbe
int3
pushf
cwtl
dec
add
insb
dec
movups
xchg
and
or
ret
cmp
jecxz
add
sarb
js
repnz
icebp
sbb
mov
ljmp
sbbl
data16
mov
dec
mov
sub
push
push
ffree
inc
aad
lcall
jb
push
jecxz
jg
cmp
push
xor
mulb
aaa
ret
aam
dec
negl
outsl
daa
pop
jg
inc
ss
push
mov
add
call
sbb
jb
sti
ficompl
mov
fisubs
or
sbb
pusha
movsb
in
nop
jnp
or
rolb
loope
inc
ret
sbb
dec
outsb
jge
pop
sbb
sub
rolb
adc
daa
pop
cwtl
fcom
int
inc
sti
add
cmpsl
xchg
jmp
sysenter
in
lea
orl
and
pop
fs
in
or
jmp
ss
adc
cmpsl
neg
adc
inc
orl
jo
inc
push
push
and
pop
add
lds
or
scas
sub
je
loopne
jae
mov
sub
xchg
mov
imul
push
cmp
pop
fldt
adc
cmpsb
nop
or
adc
jle
pcmpeqb
xlat
loope
iret
daa
cmpsl
mov
scas
rol
out
cmp
push
inc
rcrb
sbb
mov
or
sti
lock
push
adc
sub
popl
xchg
loop
mov
ljmp
jg
ret
les
mov
cmp
cwtl
imul
xor
xlat
sub
cwtl
lahf
shrb
xor
cmp
mov
sbb
std
popa
mov
mov
outsl
fwait
push
fcomps
outsb
xchg
jp
push
or
add
out
jp
and
call
js
mov
roll
clc
imul
inc
icebp
es
jo
add
dec
mov
mov
add
sub
je
jle
jbe
cmp
dec
shl
das
sbb
add
pop
faddl
int3
sbb
pushf
sar
ja
mov
call
adc
pusha
jg
or
fwait
jecxz
xlat
dec
stos
add
sti
mov
popa
jle,pt
sbb
xor
cmp
mov
cmpsb
add
mov
jne
dec
push
mulb
pop
sub
or
xor
fisubrl
inc
test
loopne
jecxz
shrb
stos
aas
jno
add
jp
push
pop
dec
pop
adc
add
xchg
lcall
fcompl
sar
lret
pop
clc
jg
or
pop
rclb
nop
xor
push
clc
fidivs
sub
out
jbe
mov
and
cltd
testb
add
nop
jl
sbb
xorb
pop
lret
in
mov
lock
adc
ret
xchg
push
ret
aam
pushf
jbe
lods
add
fistpll
shll
nop
adc
jo
mov
scas
add
pop
sarb
ljmp
push
jno
aam
stos
mov
xchg
push
mov
push
rolb
sub
or
das
cmp
js
mov
fsubl
inc
cmpb
jae
stos
lcall
pop
push
xchg
test
add
lsl
cld
dec
fildl
pmaxsw
and
push
xor
pop
mov
jge
cmpsl
mov
and
pop
adc
stos
cmp
sub
je
mov
inc
sahf
xchg
push
outsb
sahf
xchg
jb
loop
xorl
je
jg
cmp
xlat
rcll
mov
mov
xor
cmp
adc
inc
push
shrl
or
xchg
outsb
xor
xchg
out
xchg
pop
jl
mov
push
shrb
stos
lcall
out
add
jp
into
and
stos
fidivrl
fcmovbe
pop
push
push
mov
outsl
fistpll
jae
lret
clc
push
clc
out
aaa
cld
add
sti
or
ljmp
mov
sub
cmpsb
push
mov
test
mov
loop
sbb
sahf
or
test
call
scas
add
lods
fsub
sbb
jle
and
jmp
and
push
lock
adcl
imul
aam
jns
jecxz
ja
sub
rolb
xchg
pop
pop
hlt
stos
or
jmp
adc
cmc
dec
out
mov
xchg
jl
ds
xchg
adc
je
sbb
mov
pusha
or
mov
push
std
and
sbb
ss
xor
jmp
adc
or
or
push
loopne
sub
cmp
mov
neg
rorb
movl
dec
pop
push
into
movsl
scas
jecxz
ffreep
pop
add
ja
xchg
arpl
data16
lods
or
sahf
mov
movsb
lcall
xchg
loop
push
add
popf
popa
fidivs
je
rorb
inc
test
loop
decb
mov
imul
push
cmc
into
add
sbb
add
add
mov
push
les
jnp
xor
outsl
push
subl
lds
cmp
inc
cmpsl
jl
popf
and
out
xor
xor
bound
xor
inc
ss
xlat
adc
add
loope
push
cmp
sbb
sbb
test
je
inc
mov
xchg
and
fidivl
movl
push
mov
add
inc
push
pop
push
mov
out
lods
stos
ljmp
add
mov
mov
xor
mov
jp
sbb
lret
test
mov
push
push
push
shlb
lods
pop
ljmp
fdivl
jge
push
push
ret
or
xchg
pop
add
sbb
out
scas
scas
in
rorb
enter
and
sbbl
and
imul
arpl
sahf
mov
sahf
lods
daa
jle
adc
ja
insl
stc
fldl
roll
fists
add
enter
lea
sub
and
out
lret
pop
add
jge
push
iret
adc
in
lahf
insl
mov
push
adc
rcr
rorb
test
cmp
int
sub
aam
out
fists
pop
pop
das
mov
jl
stc
jle
aam
sahf
leave
ret
shll
cs
mov
ljmp
movsl
or
mov
loope
sbb
arpl
cli
mov
jne
dec
jb
xor
cmpl
fstpt
mov
int3
jl
and
rcrb
fucomp
pop
pop
insb
mov
ss
push
repnz
mov
pop
or
data16
imul
ljmp
adcl
mov
cmp
pop
adc
jo
mov
fidivs
loope
add
jmp
fucom
pusha
adc
mov
push
dec
cli
cmp
pop
push
adc
mov
imul
adc
jnp
sub
ret
out
scas
mov
sub
jno
jnp
mov
mov
popf
loop
pop
cld
popa
inc
mov
cmc
add
out
push
cmpsl
das
mov
in
shrb
icebp
mov
sahf
inc
pushl
cmp
cmp
js
es
les
pop
push
roll
clc
adc
cmc
jbe
cmpsl
stos
leave
rorl
sti
rclb
lods
push
add
mov
lods
popf
fcmovnu
or
jl
mov
imul
ss
outsl
shrb
arpl
out
xlat
or
pop
test
xor
shl
aam
sbb
fisubrl
outsb
push
pop
mov
jo
lret
rclb
jne
mov
or
push
arpl
outsb
or
addb
sub
cli
subl
nop
mov
fidivrl
fldt
mov
adc
cmp
cli
lds
scas
scas
pop
push
rcrb
stc
adc
add
mov
inc
scas
push
shl
stos
sbb
fwait
andl
adc
mov
pop
roll
mov
loopne
call
add
in
stos
adc
push
jmp
ret
scas
xchg
or
xor
and
jmp
sub
dec
mov
mov
lea
push
loop
and
jo
mov
lods
jb
xchg
lret
in
or
mov
ret
mov
pop
mov
test
dec
mov
pop
cmp
pop
ja
xor
add
xor
lods
jne
jp
add
dec
push
icebp
fucom
xor
jle
test
lea
mov
mov
inc
pop
xchg
adc
xchg
ret
cli
addl
insl
subb
loopne
cmpsl
in
mov
mov
imul
mov
mov
sub
fmuls
aam
mov
add
inc
and
or
call
mov
cltd
mov
mov
pop
add
mov
xlat
jle
jb
into
insl
pop
in
cli
fistpll
roll
mov
dec
xchg
xorl
ret
ss
add
ret
popa
inc
arpl
inc
fildll
int
jb
push
pusha
addr16
daa
ja
imul
inc
imul
xchg
and
mull
cld
xchg
xor
test
jge
inc
or
or
inc
test
jmp
aad
pop
mov
push
lock
stos
sbb
repnz
dec
outsb
add
popa
add
and
lock
les
push
stos
subb
popa
mov
out
dec
aas
pop
in
stc
outsb
iret
mov
subl
hlt
rorl
push
pop
pop
cmc
adc
or
add
mov
mov
int3
mov
sti
pop
xchg
clc
push
xchg
mov
icebp
aam
shrl
pusha
jg
xor
frstor
xor
in
repnz
sbb
push
xor
loopne
cmp
fistl
pop
lds
and
mov
mov
cmp
pop
mov
mov
jmp
jge
and
dec
dec
mov
mov
jb
pusha
je
mov
add
jecxz
jge
mov
mov
mov
sbb
ja
rolb
add
mov
and
lret
test
sbb
arpl
pusha
and
stos
inc
mov
dec
loope
sbb
xlat
imulb
dec
sbb
xor
add
lds
jmp
dec
les
ja
mov
fadd
aas
fldcw
push
fisubrs
sub
fbld
jne
ffreep
inc
add
pop
and
ljmp
mov
ret
cmpsl
push
push
clc
sbb
and
mov
sarl
sti
lods
test
negl
sbb
nop
pop
inc
sarl
xchg
add
pop
inc
push
cmp
pushf
into
scas
mov
aam
aaa
jno
sarb
mov
push
inc
aam
notb
rclb
add
inc
push
scas
inc
mov
pop
xor
nop
cld
lods
es
cmp
pusha
jae
xchg
sarb
dec
shrb
and
inc
scas
mov
add
sahf
movsl
xchg
push
mov
arpl
sub
scas
fldenv
mov
jge
dec
ret
cmp
xor
cmc
or
push
mov
outsb
push
push
jecxz
dec
icebp
cmpsl
sbb
push
test
cmp
cmp
sbb
adc
pop
sbb
mov
pop
shll
dec
push
jne
cmpsb
mov
popf
subl
arpl
fstps
jp
inc
call
fidivs
or
adc
aas
clc
adc
pop
movsl
loop
jnp
jns
jno
xor
add
ret
pop
inc
mov
out
mov
cld
mov
mov
fidivrl
ret
push
js
js
mov
xor
xchg
pop
mov
push
daa
cmp
lea
xchg
pop
push
iret
mov
jne
ffree
jae
hlt
jg
test
xor
push
sbb
imul
mov
outsb
inc
pop
in
push
or
idivl
inc
pusha
cli
push
leave
rcrb
dec
test
ds
push
or
push
and
mov
pushf
or
fcompl
rorb
inc
mov
jnp
jbe
dec
insb
js
jno
xor
outsb
inc
mov
push
dec
add
repz
xchg
jo
lret
cli
push
mov
icebp
pushl
out
cmpsb
push
add
loopne
or
jnp
xor
inc
cmp
loop
enter
sub
rorb
add
std
dec
add
iret
and
adc
cmp
sbb
loop
add
inc
into
test
adc
push
rolb
loop
push
push
mov
adc
jp
call
or
sub
mov
or
test
pop
and
xchg
inc
mov
or
shlb
xor
sbb
or
push
pop
les
inc
loop
loope
sub
js
scas
cmp
ret
adc
ret
dec
pop
adc
shll
inc
adc
stos
jns
sbb
inc
pop
movsl
mov
push
jg
push
lret
xor
insb
out
loopne
mov
cwtl
aas
jp
adc
lods
or
in
push
lock
cmp
xlat
test
bound
ds
mov
xor
out
sbbl
jle
xor
jge
daa
inc
dec
and
insb
movsb
pop
fucomi
pop
dec
mov
lock
cmp
cwtl
loope
pop
in
inc
subl
mov
fdivs
insb
cmp
xchg
or
cmp
push
data16
mov
inc
cmp
ficoml
in
cmp
jnp
lds
cmp
pop
dec
mov
push
sti
adc
insb
cltd
or
jne
cli
or
jl
mov
sub
dec
inc
addr16
sti
icebp
add
mov
mov
dec
mov
mov
mov
ret
and
out
sbb
sub
cmpsb
and
cmp
movsb
lar
rolb
mov
out
adc
mov
out
ficoms
xchg
mov
mov
xlat
or
sbb
pextrw
es
fildll
xlat
add
xlat
imul
fnstsw
std
lock
arpl
subb
push
adc
jae
test
lock
fwait
loopne
ret
leave
bound
jno
jle
adc
dec
mov
shll
mov
shrb
and
mov
cs
mov
popa
mov
cmp
jnp
mov
mov
sti
aam
out
cltd
pop
xor
pop
in
mov
pop
pop
xor
call
add
aam
mov
pop
test
adc
les
test
push
mov
enter
add
xlat
mov
cmp
lods
push
jnp
bsf
push
xor
incl
xchg
mov
xchg
mov
push
fidivrl
loopne,pt
xchg
cmp
cmp
icebp
push
jg
cmp
cmpsb
imul
sbb
cmpsl
jg
outsb
pop
mov
stos
cs
ljmp
shl
iret
or
mov
shrl
out
dec
push
lds
inc
notb
call
test
jg
jb
pop
jp
sub
pop
inc
in
sti
movaps
roll
addb
sbb
push
jae
mov
inc
lods
cli
mov
rorb
and
pop
fiaddl
dec
icebp
pop
or
push
loopne
fstpt
je
insb
ret
mov
jae
cmp
dec
jle
int3
jecxz
inc
out
xchg
sti
jo
mov
aam
fstpl
bound
sub
push
not
icebp
adc
pushf
cs
mov
add
out
mov
add
jg
leave
inc
pop
inc
cmp
ret
mov
mov
xor
push
aam
fimuls
ds
add
mov
adc
inc
jp
popa
pop
cmp
cmc
and
pop
push
out
out
push
sahf
adc
cmp
and
rorl
inc
lods
xchg
sub
outsb
scas
jl
cmp
cmp
push
or
loope
js
inc
leave
push
repnz
outsb
notl
and
cmp
sbb
aad
in
jb
cmc
sub
int3
lock
insb
push
nop
testb
sbb
push
ljmp
mov
cmpsl
xchg
in
gs
mov
outsl
shrb
cmpsb
xor
mov
push
scas
into
xor
push
xchg
mov
xor
popa
pop
ret
pop
sub
ret
xor
out
mov
hlt
mov
in
lock
add
shlb
adcl
push
xlat
cmp
cmpsl
xchg
int3
ja
cltd
mov
cmp
jns
shll
cli
adc
scas
lahf
es
dec
adc
fdivrs
imul
test
and
fstp
call
sub
jmp
jno
push
ret
sub
nop
sub
ljmp
and
cs
or
pop
dec
pop
psubq
xchg
push
pop
shll
push
lods
ret
outsb
loop
ds
fadds
push
pop
mov
lods
jg
adc
add
scas
fldt
lods
je
inc
jle
cmc
out
or
jg
push
sub
pop
movsl
sbb
test
and
mov
stos
arpl
loop
xor
iret
inc
xchg
stos
imul
sbb
out
ret
xor
push
and
add
clc
rcl
cwtl
pop
jno
pop
fimull
push
cmp
fnstenv
pop
sbb
std
push
lds
es
jne
popf
mov
push
pop
icebp
cmpsb
fcmovb
daa
scas
sbb
inc
jb
out
imul
inc
fidivrs
into
in
bound
imul
xor
pop
mov
test
cwtl
stos
mov
lea
jbe
inc
aad
lea
ret
add
fisubl
lea
cmc
insb
aad
push
ds
inc
fcoml
push
or
lock
clc
cmpsl
push
dec
pop
ret
push
xchg
mov
out
testl
loop
cmc
mov
push
popf
outsl
and
rcrb
and
pop
xchg
inc
mov
jo
cmpsl
add
jmp
inc
sbb
xor
or
xchg
and
dec
test
mov
cmp
xor
mov
icebp
add
or
push
push
mov
pop
pop
popa
insl
clc
shll
xchg
xor
cmp
xchg
fs
inc
stos
mov
ret
push
fmuls
mov
mov
das
outsb
mov
or
or
test
xchg
inc
mov
jp
mov
pusha
fstpt
outsb
mov
ja
push
lret
cmpsl
paddw
mov
or
push
aad
inc
shlb
fcoml
mov
mov
in
and
xor
mov
push
push
std
or
jecxz
or
xor
pop
xchg
pop
popa
dec
pop
mov
xorl
outsb
push
xchg
xchg
in
fistpll
aaa
int
xchg
xor
cwtl
adc
sub
sub
cmp
jmp
pop
pop
fisttpl
into
mov
pop
add
add
leave
cmp
outsb
bound
or
sub
adc
sub
jmp
lods
shr
fchs
inc
xchg
test
cmpsl
pop
cmp
popf
cmp
pop
mov
leave
mov
pop
xchg
loop
iret
mov
gs
arpl
iret
sub
testl
sbbb
out
inc
jle
or
mov
push
shl
jmp
icebp
btr
mov
adc
adc
stos
jo
pop
es
adc
roll
test
cmpsb
insl
jp
pop
cmp
jp
or
clc
inc
xor
mov
cltd
daa
out
cli
push
adc
sbb
mov
lock
and
ret
movsl
jl
or
in
inc
push
insb
cld
ret
in
mov
mov
jge
xchg
pop
enter
idiv
stc
cmp
arpl
mov
dec
out
lods
mov
sub
loope
ret
popf
sbbl
mov
stos
arpl
addr16
or
or
inc
xchg
pop
mov
add
push
push
xor
addr16
inc
and
stos
aaa
ret
xor
and
xor
pop
pop
jmp
sbb
loopne
xor
jmp
mov
mov
add
ret
add
xchg
cltd
cmc
jmp
sbb
pop
sahf
push
int
mov
aas
cld
clts
mov
outsl
pop
arpl
mov
out
xor
jmp
inc
mov
and
add
add
call
fdivrl
jo
dec
push
push
jbe
pop
and
negl
jo
mov
xchg
jnp
pop
mov
push
shl
cmp
jp
mov
dec
xchg
test
sti
inc
inc
lods
cmp
xor
jb
cmp
arpl
and
mov
and
mov
xor
loopne
xlat
jo
leave
sbb
popw
jns
pop
push
mov
push
push
arpl
imul
jp
inc
sbb
or
xor
or
mov
mov
mov
dec
dec
test
sbb
lods
pop
pop
lret
divb
mov
rclb
dec
ljmp
mov
pop
sub
push
mov
mov
and
jp
xchg
fsubr
xor
insl
movsb
jg
rorl
mov
rcl
and
sti
pop
ja
clc
mov
xor
imul
push
add
stos
scas
mov
leave
ds
stos
mov
cld
out
adc
xchg
adcl
and
inc
inc
inc
cld
dec
sub
sub
outsl
sbb
push
movb
out
mov
fnsave
cmp
sarb
fistpll
js
add
and
mov
pop
lahf
or
or
mov
mov
repz
hlt
mov
sbb
add
jecxz
and
test
iret
daa
jns
and
ss
test
jg
inc
add
ds
sbb
push
stos
jae
pop
js
adc
or
or
test
push
mov
lods
in
call
jmp
loopne
or
xor
jle
in
in
cmp
push
fiaddl
add
int
mov
inc
pop
fistpl
dec
iret
paddb
aad
sub
fdivs
sub
rorb
sahf
mov
inc
outsl
add
jb
xchg
loopne
adc
lods
or
hlt
pop
loop
addr16
xlat
into
rep
inc
jmp
nop
add
pop
mov
pop
test
jnp
xor
insb
aam
xchg
rcrb
mov
clc
aam
jge
mov
jmp
outsb
add
mov
pand
notl
push
and
xchg
fs
fmuls
leave
popa
inc
sbb
mov
push
and
leave
sbb
jbe
push
in
ljmp
and
mov
pop
pop
xchg
mov
mov
ret
and
mov
aas
jp
lods
nop
mov
int
adc
pop
sarb
add
and
cli
pop
or
in
ds
in
ret
jne
jae
and
inc
das
ja
fisttpll
jge
dec
inc
jb
loope
push
mov
jo
idiv
div
push
das
mov
andb
push
ja
dec
jl
add
scas
js
cmp
ljmp
addb
aas
movsl
jge
ret
xor
mov
clc
jne
test
stos
fstps
adc
notl
add
xchg
dec
jg
jecxz
dec
in
in
and
jl
out
loop
mov
mov
ds
mov
rolb
fwait
cmp
mov
and
shl
xchg
test
pop
and
shl
mov
push
sahf
mov
jl
pop
std
jmp
push
xor
inc
xor
pop
and
xor
cmp
lock
jle
add
dec
fnstenv
stos
jnp
mov
aaa
sub
lret
add
xor
push
out
enter
iret
inc
ret
and
cli
pop
lods
jnp
lds
sbb
fstps
cmp
push
outsb
repz
das
aad
jmp
push
jp
and
fndisi(8087
mov
filds
repz
fstpl
mov
or
lds
jb
mov
jle
repz
aas
rolb
arpl
add
cmpsl
mov
xor
std
insl
or
cmp
mov
push
out
mov
dec
jg
aad
andl
xor
shrl
imul
jle
push
push
xchg
mov
sbb
add
inc
aas
inc
popf
jecxz
cmp
push
push
mov
or
and
loope
mov
sbb
loope
rol
int3
xchg
jle
fisubs
pop
xor
mov
mov
int
call
pop
test
iret
lock
adc
push
add
insb
or
xlat
cmp
sbb
dec
xchg
outsl
xlat
insl
in
push
cmc
sbb
lock
jo
pop
dec
into
mov
add
int
pop
adc
cmc
sahf
push
inc
push
ret
or
jg
cmp
mov
pop
dec
jb
insl
push
xor
scas
push
stos
shlb
daa
pop
or
fcoms
pop
add
test
mov
lret
sub
andb
mov
push
sub
scas
sbb
xor
inc
mov
pmuludq
and
fidivl
leave
cld
mov
jbe
and
mov
jmp
sub
and
mov
loopne
stos
leave
jl
push
ja
out
push
fdiv
ret
shl
mov
inc
sbb
push
and
cmc
pop
mov
mov
iret
or
jmp
xchg
nop
nop
xor
jmp
pop
scas
pop
test
add
sti
add
faddp
xor
insl
imul
and
je
and
xchg
sti
inc
stc
jb
cmp
add
pop
dec
roll
push
push
hlt
fldenv
mov
mov
scas
xchg
pop
cmp
pop
outsb
movups
push
test
sti
movsb
sub
pop
add
and
mov
add
xor
push
jnp
or
mov
fstl
mov
and
stos
not
adc
scas
cmp
out
and
mov
test
fdiv
arpl
call
add
dec
pop
push
or
or
ljmp
ds
loope
dec
test
mov
ret
clc
pop
lds
repz
inc
dec
and
out
fisttpl
cs
or
fiadds
imul
jmp
cs
ret
mov
mov
cmp
sbb
adc
sbb
sbb
shlb
pop
test
nop
jno
insb
ffree
cmp
dec
jno
int3
fsubr
jge
sti
add
call
push
pop
fcmovu
mov
mov
add
cmc
mov
je
pusha
lds
mov
arpl
cmp
imul
call
mov
xor
lret
stos
leave
push
inc
mov
pop
imul
das
rorb
inc
cmp
sub
lds
jo
test
sub
leave
sbb
mov
mov
add
insb
pop
pop
xchg
xlat
pop
call
adc
mov
pop
aaa
insb
add
ss
or
insl
push
addr16
shlb
push
mov
shrb
xor
xor
nop
mov
rorb
aas
adc
movsb
sbb
adc
in
mov
out
jle
outsl
es
popf
shll
jbe
addr16
cs
mov
add
mov
fs
inc
adc
roll
jge
fnstsw
aam
mov
lret
jae
jbe
pop
mov
xor
jno
xor
sahf
mov
push
add
imul
ds
cmpb
enter
cs
jo
test
xor
pop
sub
fildll
scas
inc
pop
push
out
mov
jp
jl
loop
adc
call
imul
mov
dec
push
sbb
fdivl
or
repnz
and
stos
sti
sahf
test
popa
mov
test
lcall
dec
ja
mov
addr16
cmp
ror
cwtl
stc
clc
out
lea
mov
pop
add
cmp
mov
outsb
je
arpl
mov
into
adc
sub
pop
and
fsubrl
inc
cld
and
sbb
sbb
mov
shll
xchg
push
xchg
fwait
sbb
fists
jg
test
test
pop
jle
or
ret
fldt
outsl
mov
fwait
or
add
rcll
les
mov
imul
dec
or
fimuls
pop
out
mov
call
fwait
sahf
sub
add
inc
mov
lds
rolb
add
jmp
xor
mov
mov
mov
dec
cmp
pop
ja
out
loop
xchg
cmpsl
ds
adc
shr
jo
pop
xchg
or
test
cld
hlt
cmc
cmp
or
mov
hlt
loop
push
int
enter
outsl
addr16
push
cs
jnp
mov
lods
mov
jg
std
jp
sbb
aad
xchg
bnd
or
cmp
sbbl
popa
dec
dec
ds
sbb
cmp
mov
mov
mov
arpl
scas
out
xor
rorb
outsb
ret
xchg
xor
and
ja
pop
repz
daa
or
mov
push
sub
clc
je
mov
add
cmc
mov
jl
sbb
inc
mov
or
hlt
add
lods
fwait
pop
arpl
mov
jbe
xchg
js
mov
push
push
rolb
push
andl
sbb
dec
cmp
jg
addr16
inc
in
sahf
gs
jecxz
das
xlat
jno
inc
add
push
ret
push
testl
and
push
inc
pusha
mov
push
aam
cmpsl
sub
sarb
jle
cmpsl
xchg
aam
push
addl
dec
mov
push
sub
push
mov
mov
pop
fldl
out
repz
rcrl
cltd
mov
ret
xchg
dec
out
and
call
mov
loope
sbb
insl
mov
testl
les
outsl
inc
pop
and
ror
pop
mov
adc
push
sti
jnp
jle
cmpsb
sbb
cmpl
xor
xor
outsl
mov
cwtl
mov
jp
movsl
pop
push
adc
rorl
lods
sbb
jae
xchg
fstpl
loope
jbe
mov
adc
lcall
cmp
shrb
loopne
xchg
sbb
outsb
lods
mov
mov
out
fcomi
rol
jne
fs
ffreep
pop
xor
clc
mov
mov
cmc
pop
or
pusha
lods
ret
mov
or
aad
cmp
jl
jl
popf
pop
mov
xchg
lock
icebp
mov
idivb
loope
mov
mov
and
lods
mov
add
jp
shl
scas
pop
pop
dec
pop
out
test
lcall
or
mov
shrl
lock
or
and
ljmp
and
pop
clc
test
jb
insl
and
dec
sbb
ja
xor
xchg
jne
cmp
iret
cmpsb
sbb
cmc
cmp
xchg
fnstsw
bound
push
mov
and
mov
mull
inc
hlt
insl
test
jle
sbb
push
in
jbe
fwait
cmc
rorb
jp
inc
or
sbb
in
mov
pop
cmp
push
cmpsl
dec
adc
cmpl
ss
xor
fmulp
xor
and
add
mov
lea
jl
scas
and
das
sub
cmp
jnp
ret
scas
pop
aaa
pop
push
jle
lock
mov
push
pusha
pusha
xor
gs
cmp
push
je
fwait
mov
jnp
or
xor
lea
mov
xlat
mov
pop
pop
fisttps
mov
and
clc
mov
pushf
arpl
inc
fistl
addr16
outsl
add
sub
mov
xchg
inc
mov
outsb
out
pop
in
mov
dec
iret
or
cmpsb
fcmovu
xchg
dec
dec
aaa
inc
cmc
mov
ss
jnp
mov
mov
pop
cld
loope
lahf
or
pop
xchg
push
mov
adc
inc
adc
cmp
ja
dec
stos
pop
jbe
jmp
sti
outsl
sbb
pop
jae
xor
subl
adc
cwtl
inc
push
sbb
add
pop
mov
cmp
or
add
inc
inc
dec
mov
lea
jle
in
mov
lret
xchg
mov
mov
jle
sbb
push
and
mov
mov
adc
add
stc
push
mov
into
push
pop
mov
test
ss
add
out
xlat
in
jb
cvtps2pd
mov
mov
inc
nop
fs
sti
mov
cmp
outsl
call
iret
movsb
push
dec
lea
push
pop
xor
lock
xchg
mov
mov
mov
jbe
aad
jp,pt
imul
stos
add
inc
and
xor
inc
test
rcrl
mov
in
push
ja
jg
or
xchg
xchg
jmp
adc
push
into
clc
mov
xchg
mov
std
inc
mov
ljmp
xchg
jg
xchg
addb
aas
fcomps
mov
loop
mov
test
js
jo
outsl
andb
inc
adc
sbb
mov
ficoml
stc
movb
mov
iret
mov
inc
dec
aad
inc
add
call
jp
adc
mov
les
mov
loope
test
xor
lea
rcll
inc
mov
adc
xchg
jecxz
ret
outsb
std
lcall
and
jne
mov
cltd
stos
sahf
in
jb
cld
repz
pop
scas
pop
pop
push
jbe
adc
lahf
mov
sbb
mov
rclb
sub
mov
jmp
rorl
and
mov
int3
in
or
adc
popa
jl
jo
mov
imul
sub
ficoms
mov
loop
sti
sbb
pop
fsubs
imul
mov
pop
lret
add
ret
sarl
gs
mov
ret
scas
mov
in
mov
loop
mov
lcall
ret
fcomp
mov
ret
mov
mov
cltd
fcompl
in
jno
lds
mov
stos
ds
icebp
call
xchg
rcrb
imul
mov
jne
dec
sub
jmp
jl
pop
or
mov
mov
loop
inc
or
outsb
loopne
icebp
sbb
jns
inc
popa
fidivl
fistpl
and
fmull
xor
in
iret
sbb
mov
lahf
loopne
andl
scas
cmp
sti
loopne
mov
and
sbb
pushw
std
and
jg
mov
hlt
add
fsubrl
cmp
xor
movsl
stos
lret
cmpl
xlat
jns
mov
jne
cmp
in
into
mov
inc
aas
test
inc
inc
pushf
mov
dec
or
jmp
stos
jmp
shrl
mov
mov
jmp
xchg
xchg
mov
arpl
push
cmpsb
mov
mov
inc
pop
insb
cmp
rcll
je
call
test
imul
jge
push
sbb
je
cli
orb
mov
negb
and
or
icebp
mov
push
mov
daa
pop
mov
hlt
inc
mov
mov
mov
inc
push
sbb
inc
dec
inc
xchg
pop
inc
cmp
lea
add
inc
lods
sub
adc
fwait
sbbb
filds
icebp
in
addr16
mov
bound
adc
icebp
cmp
shrb
push
test
lods
adc
lcall
cmp
sbb
pop
mov
cli
pop
adc
test
js
mov
dec
lret
cwtl
sarb
add
pop
add
xchg
popf
fidivs
pop
ja
pop
cltd
filds
cmpb
jg
pusha
jne
push
mov
pop
fwait
outsl
or
adc
fimuls
mov
add
jecxz
das
loop
pushf
das
push
mov
sti
inc
jne
push
and
adc
fdiv
mov
insl
sbb
and
pop
mov
and
jnp
icebp
nop
xlat
push
jne
add
pop
jge
xor
fwait
insb
cmp
jae
pop
pop
cmp
cmp
ss
sbb
pusha
adc
cltd
push
push
shrb
mov
loop
cmp
popf
outsb
pop
aam
in
sbb
push
push
xchg
sti
or
int
pop
or
clc
mov
cltd
out
mov
or
aaa
ljmp
mov
es
mov
idivb
mov
fldt
pop
xlat
pop
shll
insb
dec
ficoms
mov
cmp
pop
in
xchg
or
andl
das
add
dec
or
outsb
sahf
test
or
ja
push
ja
push
xor
sub
or
mov
fiaddl
xlat
jge
cmp
mov
pop
shr
into
mov
xchg
loop
jp
add
aad
aaa
clc
xor
or
pop
xchg
dec
mov
popf
imul
dec
hlt
mov
stos
push
push
insl
jae
mov
out
call
mov
insb
or
push
jl
test
mov
lcall
call
cli
sub
mov
je
adc
push
inc
sub
adc
mov
insl
jb
mov
jg
pavgw
pushf
ja
xchg
xlat
mov
mov
popa
imul
dec
out
movsl
pop
stos
xchg
ror
fs
out
int
insb
mov
dec
insb
cmp
jecxz
cmp
mov
jb
dec
xchg
add
push
adc
fadds
shl
sbb
imul
out
ja
mov
add
and
imul
jo
shl
cmpl
jmp
stos
mov
cmp
pop
insb
pop
cmp
sub
stos
or
loope
cltd
and
lahf
xchg
mov
adc
aam
test
push
push
sbb
dec
rclb
cmc
std
push
cli
inc
jle
stc
jmp
sti
jmp
inc
mov
sub
push
push
jno
faddl
push
lret
sbb
xor
sti
push
xor
pop
rcl
sbb
add
adc
add
jmp
test
jmp
sbbl
ljmp
jl
add
incb
jo
into
sub
aad
icebp
lock
mov
mov
dec
shrl
shl
loop
inc
push
sbb
pop
jne
out
mov
and
sbb
cmp
push
out
mov
das
pop
inc
xchg
mov
push
sbb
movsl
inc
in
ljmp
or
mov
inc
or
pop
mov
jge
push
xlat
mov
add
lret
xor
dec
icebp
mov
lret
sbb
loop
mov
movsl
popf
or
push
push
cmpl
cmpsl
push
dec
cmpb
lret
outsb
mov
sbb
lea
lds
out
pushf
pop
dec
mov
out
jns
jne
std
mov
jmp
and
in
mov
dec
fiaddl
adc
mov
adc
jecxz
inc
fnsave
js
sti
lods
push
pop
xor
xchg
movsb
loopne
mov
fmuls
or
cmpsl
js
sbbb
out
or
inc
jnp
loop
dec
sbb
ljmp
sub
push
push
cmp
test
ss
aad
push
jb
sbb
test
pop
dec
jge
loop
jbe
push
mov
add
ret
jle
xlat
shlb
das
jo
dec
sbb
pop
int
paddsb
push
cmpsl
sub
cmp
in
sbb
mov
dec
lahf
or
xchg
xor
fmuls
mov
pop
adc
mov
pop
jne
xchg
sbbb
fcomps
ds
test
call
mov
mov
push
aad
loope
stc
scas
movsl
adc
dec
outsl
mov
outsb
out
xorb
dec
lock
rorb
mov
in
mov
and
hlt
rcrl
pop
ret
sub
sbb
lds
add
mov
js
adc
inc
dec
in
add
push
adc
imul
lods
jne
jno
mov
adc
add
es
loop
xor
clc
fcomi
add
mov
stos
cmp
ds
push
leave
ds
mov
pop
popf
loope
push
loope
cwtl
lea
mov
lods
push
lock
rcrl
out
mov
call
cmp
jp
mov
aad
add
push
loop
dec
dec
cmpsl
iret
sbb
add
outsb
xchg
adc
add
cmp
jl
out
dec
mov
pop
rcl
inc
jb
or
adc
add
les
cli
mov
dec
ret
jmp
add
adc
inc
cs
cwtl
or
mov
mov
sub
lahf
ror
hlt
xor
cmp
add
adc
mov
rclb
adc
cmc
mov
dec
mov
out
xor
pop
xchg
in
ds
out
xor
mov
push
insl
cmp
mov
imul
rcrb
stos
aam
ret
ret
adc
jl,pt
fsubrl
xchg
stc
sbb
inc
inc
out
xchg
mov
mov
jle
dec
popf
inc
cmpsl
in
or
adcb
leave
mov
jb
cmpsb
inc
pop
repnz
orl
je
pop
subb
ja
inc
cmp
scas
mov
adc
mov
jo
push
sbb
fwait
shrb
popf
sub
leave
or
test
mov
jl
dec
in
scas
out
rcrl
shlb
test
call
loop
adc
jb
push
jae
mov
mov
out
and
or
dec
iret
aas
sarl
fimuls
cmpb
mov
push
push
adc
and
jo
pop
jne
dec
xor
aas
mov
and
cmp
shr
cmpxchg
sub
std
push
rorl
in
out
fstpl
mull
push
or
cmpsl
lods
mov
sbb
adc
mov
mov
aad
mov
jb
int
das
xchg
in
inc
rcrb
mov
fnstcw
fdivrl
pop
jmp
movd
gs
out
movsl
test
stc
jg
pop
mov
fcmovnu
scas
leave
scas
add
and
inc
adc
or
cmpsl
push
push
xchg
fsts
pop
shrl
inc
inc
jne
jmp
stos
sbb
jmp
mov
call
notl
jle
clc
test
push
pop
cmp
test
clc
adc
sarl
jg
loope
cmpsl
xchg
cs
dec
cmpsb
outsl
cs
xlat
add
dec
push
mov
mov
fxch
inc
int
cltd
js
addl
mov
xor
subl
sbb
enter
loopne
mov
lods
pop
pop
and
imul
jp
in
xchg
aaa
xlat
das
mov
xchg
cmp
push
cltd
movsb
jo
cmp
lret
mov
mov
mov
movsl
cmpsb
mov
inc
iret
xchg
insl
out
jmp
or
cmp
testb
hlt
mov
mov
sbb
insl
loopne
xchg
xchg
sub
jmp
loop
pop
sub
mov
insl
add
push
mov
lahf
add
sbb
mov
dec
sahf
mov
mov
aad
add
in
pop
jp
int3
mov
movsb
ret
ret
push
dec
daa
mov
fcoms
lock
mov
dec
out
loopne
mov
mov
lods
enter
inc
mov
imul
shl
inc
pop
addr16
negl
daa
mov
cmp
add
out
inc
mov
jge
out
sub
and
sbb
insl
pop
je
xorl
clc
jnp
and
incl
in
test
fs
jb
pop
loope
mov
scas
fildl
jns
fnstcw
push
cmp
shl
mov
loop
sbbb
cmpb
xchg
lods
add
add
out
fsubrs
addl
out
stos
das
mov
lret
repz
mov
jl
or
sub
add
mov
pop
addr16
imulb
push
fisubs
dec
pop
sub
pop
jl
mov
cltd
mov
mov
jbe
insb
push
lahf
mov
neg
hlt
outsb
cli
call
sbb
in
or
jnp
call
mov
imul
mov
mov
or
or
fcoml
cmpsl
scas
mov
mov
jbe
or
jae
gs
ss
fwait
lret
clc
add
addb
lods
daa
push
fdivrs
rclb
pop
test
mov
scas
and
fisttpll
leave
popa
mov
dec
addr16
mov
hlt
pop
sub
ret
inc
add
pushf
outsb
push
pushf
mov
mov
fsubs
mov
fsub
adc
mov
and
mov
or
jbe
fistl
jb
das
mov
mov
mov
pop
jge
jb
add
lods
sub
mov
fsubrp
sbb
xor
xorb
ret
fiaddl
cltd
adc
lcall
rorb
mov
loope
mov
mov
lock
ficompl
cmp
scas
clc
xorb
test
pusha
lret
gs
fbstp
rcrb
dec
inc
mov
adc
insl
or
add
add
aas
push
dec
mov
arpl
lcall
sbbb
add
icebp
sbb
mov
mov
testl
xchg
dec
dec
inc
leave
pop
cmc
icebp
jge
aaa
fs
push
cmp
ret
sbb
outsl
xchg
loope
es
cli
mov
sahf
ja
dec
mov
jnp
adc
pushf
add
aas
or
add
sbb
sbb
sub
cli
mov
cmpsb
xchg
xor
mov
mov
sbb
push
mov
mov
subl
dec
into
add
iretw
inc
jb
mov
lods
jl
mov
jne
inc
pop
shufps
jl
cli
dec
popl
in
mov
out
pop
or
movsl
jnp
gs
inc
or
cmp
rcrl
inc
adc
lods
push
pop
mov
sub
inc
imul
xor
or
rorl
std
sti
test
iret
outsb
cld
mov
ss
inc
mov
sub
fisubrs
inc
xchg
or
mov
decb
pop
fisubl
mov
fst
pop
test
and
int
cmp
push
ja
or
in
pop
pop
jle
cmp
shll
rcll
pop
add
push
xchg
jle
inc
pop
fsubrl
push
fwait
mov
pop
cmp
enter
cmp
mov
andl
fs
xchg
cld
ror
jne
mov
negw
test
or
xchg
fld
xchg
fcoml
std
mov
icebp
mov
add
loop
cwtl
aaa
lahf
xor
outsb
cmp
cmpsb
jp
lret
cmc
pop
push
mov
repnz
mov
xchg
push
jbe
rclb
paddsb
stos
data16
ja
mov
push
dec
sub
repz
icebp
outsb
xchg
scas
mov
subl
movsb
ljmp
mov
jno
out
or
leave
sub
lods
repnz
sbb
sub
jns
hlt
push
add
arpl
fnstcw
pop
pop
dec
cmc
xchg
sbb
hlt
and
dec
int
int3
leave
jmp
mov
aad
mov
insl
ret
fstl
jmp
and
or
stos
imul
popa
lcall
test
popa
subl
lret
inc
dec
push
pop
aad
cmp
adc
xchg
jmp
and
repz
cltd
push
jle
lds
cmp
adc
mov
repnz
xor
popa
mov
orl
mov
mov
jp
int3
sub
jnp
out
cmpsl
in
add
pop
push
dec
repz
xchg
fdivr
mov
mov
test
ljmp
shlb
and
test
stc
mov
mov
sbb
lahf
inc
or
pop
int3
mul
das
and
pop
icebp
aam
inc
xchg
addr16
jecxz
loop
xor
addr16
hlt
out
pop
or
scas
xchg
lcall
and
cmp
dec
and
inc
shlb
cmp
pusha
inc
xchg
push
mov
jne
insb
inc
add
inc
push
call
cmp
pop
je
jge
icebp
icebp
pop
out
xor
popa
lock
aas
mov
jecxz
test
scas
xchg
mov
test
loop
movsb
pop
xor
sub
xor
dec
mov
inc
in
inc
mov
push
hlt
sub
xchg
sbb
inc
test
in
and
inc
call
ret
pusha
in
mov
imul
jl
or
or
int3
cmc
lret
mov
lea
pop
jl
inc
xchg
aas
jne
push
rcl
not
ja
je
or
test
dec
pop
jne
add
je
xlat
jle
cmp
insl
mov
ljmp
push
pop
out
out
ret
divb
inc
sub
mov
cmpsl
cmp
jnp
cmp
rcrb
xchg
mov
int3
cwtl
sub
pop
cld
sahf
cmp
cmp
dec
je
outsb
scas
adc
addr16
mov
mov
das
push
mov
and
inc
fistl
adc
pop
add
jne
jo
sub
add
fistpl
orb
add
push
sbb
das
loopne
sub
xor
mov
in
clc
add
jne
inc
sub
pushf
test
xor
outsb
or
mov
ss
es
dec
or
sbb
xchg
or
add
or
mov
ret
cld
rclb
push
insb
fdivs
lahf
gs
pop
sbb
enter
imul
gs
or
js
pop
or
jo
daa
inc
and
and
mov
fcoms
push
lahf
push
jb
lret
add
out
imul
mov
loopne
adc
sbb
mov
ja
jecxz
cli
cli
adc
test
mov
les
rcrb
xchg
fmuls
fcompl
roll
popa
ret
aaa
lcall
xchg
in
inc
push
dec
adc
mov
mov
sub
add
sti
inc
ret
test
test
ficoml
cltd
in
pop
or
mov
sub
cmp
fidivl
test
adc
jecxz
mov
cmp
push
push
xlat
cmpsb
add
incl
push
fcoml
scas
popf
cmp
pop
sbb
stc
mov
jmp
xor
xor
fs
daa
aam
cli
mov
pop
adc
jge
mov
mov
in
sbb
cmp
mov
std
fisttpl
push
dec
je
xchg
mov
push
mov
arpl
push
cmp
or
test
pop
out
ljmp
aas
add
cltd
and
ror
roll
add
mov
push
mov
mov
and
mov
pusha
and
mov
dec
lea
dec
sub
push
popf
orb
imul
push
insl
pop
mov
repz
ficompl
and
imul
lahf
in
add
fadds
jne
cmp
leave
cli
sbb
mov
aas
adc
lds
mov
shrb
inc
mov
es
out
aad
add
aas
ret
and
add
jmp
outsb
stos
inc
and
lea
bound
sbb
inc
loope
sbb
or
mov
jo
addr16
ds
fwait
icebp
mov
cmovb
negl
fwait
pusha
test
notb
pop
push
inc
push
mov
cmpsb
cli
inc
aad
mov
out
lds
sbb
fwait
xchg
inc
xor
clc
xchg
icebp
stos
mov
scas
mov
ret
jecxz
dec
aaa
mov
sub
movsl
push
mov
ret
mov
sbb
mov
rcr
xor
sbb
xlat
push
je
xor
mov
mov
std
test
xor
dec
scas
ss
jecxz
jg
leave
inc
dec
xor
aaa
inc
je
pop
jp
cmpsb
xchg
and
mov
inc
sbb
ds
xchg
mov
add
adcl
out
outsb
sbb
add
dec
cmpsl
push
or
jnp
push
lock
pushf
repz
cmpl
test
push
mov
xchg
or
lret
xor
sbb
inc
js
hlt
rorl
sbb
jo
mov
and
clc
rorl
mov
rcl
cmp
fimuls
pushf
jg
loopne
jge
push
dec
shl
push
jge
lds
nop
mov
inc
jbe
or
mov
fdivrl
cmp
lds
xchg
repnz
sub
ficoms
mov
std
out
push
scas
imul
xchg
out
or
daa
sub
xorl
push
xchg
jnp
repz
sbb
shr
xchg
push
mov
dec
mov
call
cmc
fwait
mov
cmp
fcmovu
inc
xchg
sahf
cli
jge
repnz
scas
pusha
inc
lds
iret
sbb
sub
pop
xlat
adc
xlat
or
mov
sbb
mov
lock
push
sub
lcall
jge
pop
cli
and
adc
stos
push
xchg
xlat
add
lods
pop
pusha
or
inc
rcll
dec
cs
out
mov
pop
fidivrl
int3
lods
sbb
mov
std
pop
ljmp
jo
sbb
sahf
int
je
push
rorl
sbb
fsubp
cmp
jb
out
inc
mov
data16
shrl
cmp
aad
punpckhwd
mov
mov
daa
sub
jge
xchg
sbb
sbb
out
mov
mov
jae
popf
addb
mov
sbb
fisubs
les
mov
dec
xchg
icebp
or
ret
sub
jle
mov
nop
jmp
adc
test
dec
cli
lcall
in
nop
nop
mov
arpl
je
sub
push
sbb
mov
jp
add
js
push
loopne
pop
and
cmp
mov
or
cmc
rorb
arpl
addr16
aaa
xor
ss
es
loope
inc
insl
mov
fucom
cmp
pop
mov
into
aaa
jmp
in
bound
sbbb
push
add
pop
sbb
xchg
and
cmp
pushf
mov
clc
mov
leave
loop
inc
fs
nop
sub
add
sbb
aas
or
jo
and
cmp
mov
adc
clc
pop
xchg
adc
les
into
aas
pop
or
or
or
addb
lcall
mov
hlt
jo
cmc
fs
sub
pop
in
pusha
inc
sbbb
jb
push
cmp
pop
dec
add
jb
cmp
push
xor
fnstcw
cmp
jl
mov
push
in
push
sbb
ret
fcmovnb
dec
in
rorl
mov
test
loopne
xlat
dec
fwait
ret
std
push
nop
push
loop
dec
not
mov
ficoml
cmp
fcoml
jae
je
bound
lahf
jo
cli
shl
mov
sub
ljmp
andl
icebp
cmc
cmp
test
stos
add
jl
icebp
andb
xor
cmc
fstpt
xchg
push
adc
push
mov
mov
dec
cmc
stc
nop
aad
stos
je
adcl
add
and
lds
inc
dec
sbb
mov
mov
in
test
xchg
rorl
push
mov
lds
pop
and
sub
pusha
fnsave
cmp
jae
lret
mov
out
lahf
roll
pop
js
dec
push
xor
mov
pusha
in
push
jge
add
pusha
stos
test
mov
aad
push
cmp
inc
fldcw
or
jmp
aam
inc
add
mov
add
sahf
push
push
call
in
test
cmp
inc
inc
shl
jne
mov
mov
adc
cmpsb
push
mov
cmpsl
mov
fstl
int
ficoms
push
jg
mov
add
xor
out
adc
inc
lds
xchg
push
jo
mov
pop
imul
xchg
push
loope
outsb
jp
int3
lods
or
push
and
or
and
fmull
cmp
lock
ljmp
sahf
jge
xchg
adc
movsb
test
dec
insl
ljmp
mov
aaa
xor
jp
outsl
mov
stos
mov
gs
lods
dec
mov
inc
cli
xor
xlat
ljmp
mov
sahf
movsl
jbe
outsb
popl
scas
repz
jae
jl
cmp
jl
in
sub
sbb
pop
mov
sahf
mov
or
ljmp
sbb
shrl
or
mov
sub
push
inc
in
lret
and
test
or
or
fwait
test
in
loopne
scas
cld
or
jge
dec
add
jo
mov
mov
fldt
std
popa
and
mov
jbe
cmc
lock
mov
leave
adc
sub
cmpsb
mov
mov
jle
sbb
nop
xor
shl
cmp
aas
xlat
js
movb
lahf
cmp
cmp
fwait
mov
aam
out
jp
outsl
push
or
cli
scas
inc
mov
cmp
sbb
ss
testl
shll
ret
out
and
ss
inc
je
mov
push
clc
dec
in
lahf
adc
ja
popf
jae
xor
mov
cmpsl
push
push
add
rcll
push
inc
mov
inc
divl
addr16
or
cmp
lahf
dec
adc
jp
pop
sbb
cmp
shrb
sbb
scas
inc
daa
cs
pushf
sbb
nop
bound
mov
xlat
adc
ds
lcall
cmp
faddp
out
loope
test
or
ja
cmp
lahf
loopne
push
jne
ret
mov
push
imull
add
push
iret
enter
cmpsl
js
das
jnp
add
or
in
in
mov
jmp
ror
mov
jg
add
inc
mov
cli
push
loopne
xchg
sub
imul
loopne
mov
dec
mov
ljmp
xor
aad
fstpl
jecxz
jle
xor
mov
cwtl
arpl
pop
rcl
nop
inc
scas
xchg
push
cmp
mov
addr16
paddb
mov
xchg
inc
mov
and
int
jo
lahf
ljmp
or
mov
push
inc
pop
xlat
fwait
jnp
mov
outsl
loope
push
mov
mov
xchg
jge
fisttpll
mov
bound
jns
movsb
call
ja
jmp
lock
adc
jne
scas
jmp
outsl
mov
andl
aam
jns
les
push
inc
fistpl
and
mov
xchg
pop
ret
xchg
je
lock
lret
xchg
sbb
mov
adc
idivb
pusha
into
imul
scas
sbb
xchg
jbe
mov
arpl
mov
sub
push
jp
push
dec
jae
jo
cmp
adc
cmp
test
sbb
mov
insl
lret
lea
cmp
jo
int3
test
mov
xor
and
les
popa
rclb
into
mov
dec
jnp
or
xchg
pop
stos
mov
leave
scas
inc
cli
lea
sahf
test
xor
jno
call
fcomps
sub
mov
adc
insb
xchg
xchg
sub
aas
xor
icebp
jnp
mov
sub
pop
mov
and
test
mov
add
out
clc
mov
mov
pushf
pusha
rcll
mov
push
xlat
lock
sub
adc
rcrb
ret
lock
pop
lret
jg
cmp
bnd
cmc
cmp
cmp
xlat
int
dec
mov
clc
inc
cwtl
lea
enter
int
lods
call
jg
mov
rcll
in
out
mov
lock
lods
sbb
push
mov
or
dec
js
ds
add
push
inc
rclb
mov
adc
mov
ja
xor
clc
sub
in
dec
cmp
mov
and
cpuid
icebp
jns
pop
and
test
fidivl
mov
add
jae
mov
rclb
cli
sub
xchg
cmp
imulb
scas
pop
jne
inc
mov
push
adc
test
movsl
pop
or
iret
out
ds
push
mov
xchg
in
mov
fldl
jl
jno
sub
lock
orl
jle
rol
imul
xchg
aas
jle
pop
fidivs
imul
in
popa
testl
rcrb
jecxz
loop
jbe
mov
aad
jnp
ds
int
int3
addb
outsb
inc
stc
loop
out
push
mov
dec
ljmp
jmp
das
mov
pop
sahf
mov
push
loopne
mov
lods
mov
mov
inc
inc
lods
and
inc
inc
sbb
jge
mov
les
shll
idivb
lcall
jno
out
sbb
popa
fcomi
in
xor
ja
les
or
mov
icebp
mov
fsubr
cwtl
sub
cmp
adc
mov
cmp
lock
out
mov
lea
das
imul
mov
adc
sbb
push
ret
in
mov
mov
push
and
enter
jno
daa
cmp
mov
adc
filds
enter
dec
sbb
push
enter
stc
popf
mov
lds
xchg
sub
fcom
ss
ds
clc
lods
mov
stc
pop
outsb
fstpt
mov
sbb
push
push
out
adc
sub
or
mov
addr16
stos
xlat
mov
out
sub
pop
leave
in
add
pop
nopl
and
jecxz
dec
negb
pop
push
adcl
and
inc
mov
lock
xchg
sti
aas
imulb
cmp
jb
adc
inc
dec
shll
push
fs
test
inc
inc
push
sbb
sub
jbe
loop
pop
fs
sub
push
stc
jg
loope
dec
sbb
mov
lea
rorl
pop
cld
push
adc
data16
pop
mov
pop
aam
xchg
mov
sbbl
cmp
loope
fwait
hlt
and
or
xchg
outsb
lret
adc
mov
xorb
or
lret
pop
pop
cmp
pop
pushf
pushf
stos
cltd
test
cmp
mov
xchg
sbb
cmpsb
xchg
jno
shl
sub
jmp
sbb
add
lods
xchg
mov
pusha
lds
in
mov
mov
sbb
dec
inc
inc
insl
mov
xor
mov
icebp
sbb
xor
jl
lods
jnp
stos
jnp
jp
push
enter
cs
daa
into
fmuls
mov
pop
int3
mov
jne
hlt
sti
add
push
cmpb
sar
jbe
sub
loop
sbb
adc
adc
insb
pop
xor
je
dec
sahf
inc
shlb
iret
fwait
mov
in
bnd
jg
ljmp
jnp
ja
sbb
aas
mov
sar
inc
das
test
fldt
push
aaa
push
scas
or
pop
push
in
push
hlt
xchg
test
outsl
mov
pop
cmp
mov
mov
aam
frstor
imul
rcrb
cld
les
lods
aad
mov
sbb
daa
sub
cwtl
cmp
dec
cmp
push
test
xlat
ja
jne
std
addl
adc
cmp
sbb
jecxz
jo
inc
cmp
ss
or
ret
gs
popl
fsubrs
mov
sysret
push
xchg
mov
jge
fucom
xchg
aad
pusha
stc
mov
jne
xchg
fstps
pop
xor
dec
push
mov
iret
xchg
lcall
lahf
add
sub
mov
cmpsl
imul
add
jne
or
les
sub
jp
lret
loope
jns
sbb
roll
repz
out
dec
pop
or
push
aam
cmpsb
sbb
dec
daa
xlat
inc
add
and
dec
sbb
jne
adc
insl
mov
test
lock
xor
pop
sbb
test
dec
cltd
lcall
test
sbb
lret
adc
adc
mov
pusha
xchg
xor
mov
xchg
pop
xchg
fcmovnu
adc
jbe
or
lods
test
jle
mov
out
test
iret
sbb
jnp
movsl
push
mov
jge
call
std
mov
dec
adc
lret
lahf
sub
es
lea
sbb
xor
test
ds
aaa
push
sbb
adc
lods
pop
cmp
movsb
inc
or
mov
test
jno
inc
or
mov
scas
and
and
or
cmp
loopne,pn
dec
mov
mov
jbe
mov
sub
das
cli
fcmove
adc
cmp
inc
xchg
inc
xchg
imul
dec
movsl
sahf
lods
adc
mov
scas
mov
hlt
cltd
js
stos
sub
mov
pusha
cltd
inc
aaa
pop
pop
pop
xchg
cs
dec
xchg
push
mov
std
into
fucomp
push
fcmovnb
xchg
das
in
pop
pusha
das
sub
and
jbe
data16
sbb
dec
inc
addb
arpl
push
add
out
outsb
mov
outsl
pop
mov
sbb
dec
mov
sbb
dec
jne
inc
negl
dec
mov
subl
add
jmp
jmp
xor
int
sub
test
incl
test
pop
adc
fidivrs
shll
add
cmpsl
jb
ss
insb
dec
pushf
xor
jnp
jl
xor
inc
push
mov
push
into
pop
cmp
cwtl
aad
mov
dec
int
repnz
or
jo
jno
repz
sti
clc
lock
dec
inc
xor
in
mov
pop
daa
or
out
mov
rorb
out
ja
sbb
cmp
and
fcom
loope
testb
call
pop
pusha
rcrl
jle
adc
inc
push
and
and
outsb
jl
sbb
lret
ret
jle
call
popa
arpl
movsl
popf
xor
and
test
pop
ds
cmpsl
mov
imul
popf
fstpt
xchg
dec
dec
ja
ss
lret
sti
mov
jmp
scas
stos
mov
cmp
xor
cs
int3
orl
fadd
loopne
jae
cmp
repz
push
stc
test
test
out
call
fcmovbe
lock
mov
mov
jne
xorb
out
cmp
testl
xlat
ds
daa
stos
jmp
and
push
aas
sbb
mov
fsubrs
roll
push
mov
mov
fnsave
arpl
iret
or
push
in
mov
xor
cmp
cmpsb
pop
sbb
popf
das
mov
fnsave
sub
ljmp
fiadds
mov
sahf
in
or
mull
das
lock
lahf
loopne
test
mov
jle
push
nop
dec
jb
test
aaa
jne
clc
pop
int
in
loope
insl
xchg
std
jbe
push
xor
add
and
cmc
lret
mov
ss
adc
in
js
loopne
shl
cmp
lea
sbb
jno
psubq
push
jp
mov
jecxz
outsb
inc
mov
or
jb
jg
xchg
fcompl
add
inc
fstpt
dec
add
xchg
lock
mov
inc
pop
push
test
push
push
stos
ja
dec
xchg
and
pop
mov
inc
jge
jecxz
push
push
fnsave
dec
sub
out
xchg
jl
sub
or
mov
imul
sti
clc
mov
ud1
rcrl
scas
pop
mov
push
or
xor
push
pop
add
mov
fisubl
add
mov
clc
mov
inc
cmp
pop
adc
mov
sbb
ja
mov
xor
pop
aam
sti
jno
jmp
fs
js
push
pop
fcmovb
icebp
ss
sbb
gs
pop
fisttpll
mov
mov
push
push
push
iret
in
mov
lret
in
cmpb
push
pop
adc
mov
jo
cmp
sbb
sub
adc
pop
aam
fcompl
cmc
fwait
push
sbb
push
inc
or
pop
jle
ficomps
rorb
pop
xor
inc
fisubs
jl
mov
fldenv
xor
and
call
pop
or
ret
xor
xchg
pop
xchg
or
add
jp
aaa
pushf
mov
mov
out
pop
das
cmpsb
push
cmp
or
ja
dec
test
popf
mov
aaa
push
xchg
xchg
sti
mov
add
pop
jbe
push
mov
pop
and
sbb
jge
scas
mov
pop
sub
jecxz
cs
pusha
push
iret
cli
sahf
sbb
je
sub
jmp
jne
pop
arpl
mov
jns
xchg
xchg
mov
jg
insl
xchg
jmp
xorl
loope
dec
sub
shll
ret
xchg
les
mov
mov
mov
cmpsb
aam
inc
aas
mov
adc
mov
ljmp
adc
lods
fwait
imul
das
into
or
clc
inc
test
movq
fstpl
jb
fsubl
mov
sub
mov
outsb
rclb
mov
or
fdivp
arpl
hlt
andb
stos
inc
xlat
jbe
push
fists
or
sub
mov
in
push
in
and
fucomi
push
mov
loopne
popa
mov
add
jmp
sti
fmull
shlb
ds
pop
mov
int3
mov
mov
out
and
lods
inc
shlb
je
adc
push
mov
mov
push
cmp
fistpll
je
mov
dec
fs
test
outsb
xor
adc
jb
fdivr
inc
mov
call
or
pop
ret
rcrb
divl
dec
scas
cmp
outsb
and
outsl
ja
mov
std
clc
rcll
lock
inc
mov
sub
or
mov
jno
inc
leave
adc
outsl
insl
loopne
dec
lds
ret
jmp
pop
mov
loop
inc
mov
ja
aad
in
inc
sub
cmp
mov
rol
bound
or
push
mov
fnsave
cmc
mov
lahf
pushf
lret
mov
lea
mov
mov
mov
cld
testb
insb
sbb
fs
mov
enter
rorl
fnstsw
stos
push
je
add
xchg
inc
fidivs
add
dec
pop
and
sbb
mov
clc
mov
pusha
jnp
mov
shrl
add
mov
fmull
xchg
or
daa
aas
mov
jae
aaa
push
jge
into
sbb
sti
mov
cmc
jge
rcrl
pop
pop
int
ret
fs
xor
mov
xor
jbe
pop
jo
mov
push
test
inc
xchg
sti
les
mov
out
sbb
loopne
xor
sti
fcomp
jae
and
sub
shrl
aad
mov
push
jno
outsb
push
mov
in
or
je
push
mov
jmp
test
das
sbb
imull
mov
cmp
push
push
cmpsb
cmp
es
lds
pop
ret
loope
fldt
sahf
dec
call
loopne
sbb
test
sbb
add
jmp
cmp
icebp
add
cmpsl
adc
jl
mov
es
fcomp
sbb
out
mov
push
xor
subl
adc
popa
jp
neg
arpl
pop
imul
mov
push
add
push
mov
rorb
aaa
aad
mov
in
xchg
or
lods
loope
inc
pop
jo
push
jmp
std
fdivrs
insl
xchg
stos
addb
cmp
fsubl
call
cmp
fucomi
imull
sbb
push
jae
add
add
adc
cltd
sbb
pop
idivb
push
emms
xchg
inc
out
aas
daa
pop
mov
int3
jno
rclb
jbe
loop
in
sub
pop
test
cmp
les
mov
push
loop
arpl
mov
cwtl
leave
fs
sti
clc
adc
xchg
mov
sub
fwait
arpl
les
ja
sbb
ds
aas
outsb
push
push
pop
dec
adc
push
jne
data16
and
jb
aas
dec
pop
roll
push
loope
mov
add
cmp
adc
xor
add
add
inc
push
push
cmpsl
adc
cmp
mov
loopne
loopne
popf
push
jmp
fstp
jb
pop
out
lahf
ja
adc
sbb
push
popf
sti
sub
sub
cmc
shl
imul
roll
pusha
jl
js
push
inc
ret
jg
adc
incb
add
clc
loopne
arpl
xlat
aaa
popa
inc
xlat
jo
xor
cli
adc
or
pop
inc
inc
cmpsb
lods
out
cld
xor
daa
cmp
outsl
ds
in
roll
jbe
ss
mov
or
popa
adc
sbb
jmp
out
sbb
loopne
les
das
and
xor
push
adc
cmp
in
loop
xor
outsb
inc
cmp
lcall
sub
or
mov
sub
lahf
andb
jle
sub
data16
add
sbb
ss
sub
shrl
shll
je,pn
jmp
jae
sti
mov
or
test
shlb
push
shlb
or
push
mov
jne
movsb
test
jg
fwait
test
fisubs
fmull
xchg
push
mov
push
pop
push
mov
cmp
adc
outsl
in
jg
or
jmp
popa
clc
inc
push
js
das
imul
fdivrl
sahf
lods
decb
inc
xchg
jle
add
gs
popa
mov
inc
pop
lds
lds
out
hlt
test
inc
jecxz
call
xchg
js
ret
mov
je
push
pop
daa
push
jle
sahf
std
daa
lds
cmp
xorl
stos
mov
out
push
xor
lds
cmc
roll
ret
test
add
call
push
loope
or
scas
sti
rorl
je
loopne
sub
jne
sub
pop
fwait
test
push
mov
mov
js
stos
arpl
inc
testl
test
jo
loope
notl
aas
inc
cmc
mov
cmp
clc
rcl
jns
push
cmp
jb
jae
pop
push
mov
inc
iret
add
sbb
mov
and
adc
push
sbb
sbb
jo
and
in
push
fisubs
mov
subb
jp
mov
test
das
ret
imul
push
cmpb
repnz
xor
stos
test
sbb
enter
pop
sub
xchg
mov
push
push
jg
loopne
movsb
mov
push
outsb
ja
pop
stos
call
popf
and
es
pop
fdiv
add
jge
stos
inc
lds
inc
inc
aas
sti
shll
lcall
jge
xor
mov
push
or
push
and
sbb
js
jnp
jns
cmp
xlat
xor
jmp
dec
add
call
les
test
mov
and
popa
xor
cmc
fcomps
mov
adc
jbe
add
mov
mov
je
je
mov
outsb
xor
js
dec
lock
outsb
rcll
das
insb
xchg
lret
cmp
jnp
add
dec
das
fs
ds
xchg
dec
sbb
int3
ds
sub
negb
cltd
jb
mov
ficomps
fiaddl
mov
sbb
sti
jl
aam
mov
xchg
cli
roll
fildl
ja
notb
cmpsl
hlt
sub
dec
lods
jge
movsl
add
dec
jg
push
jmp
into
outsb
mov
aaa
ss
mov
fsubrs
and
push
popf
scas
aam
jno
lcall
loope
sbb
pop
and
fcmovnu
into
scas
addr16
lcall
push
es
or
hlt
mov
pop
jns
lret
jl
daa
push
out
lcall
push
push
jecxz
jmp
pop
rclb
add
cmpsb
jge
aaa
fdivs
xor
inc
and
insl
mov
push
or
lret
pop
mov
jmp
notl
push
or
inc
mov
stos
dec
push
xchg
jnp
sub
push
fstl
sub
push
inc
xchg
inc
cmc
divb
jp
lea
and
scas
inc
and
shlb
into
fwait
jmp
mov
ret
or
dec
mov
jmp
sbb
jecxz
cs
rorl
push
icebp
pop
inc
jbe
lods
or
xorb
mov
lock
clc
dec
mov
imul
mov
mov
ret
jge
mov
out
shll
and
xchg
lock
xlat
call
cwtl
mov
cltd
push
push
cmp
cmpb
ror
outsl
shl
loop
shll
in
mov
rcrl
jbe
cli
mov
ffreep
mov
andl
mov
sbb
sub
sbb
inc
cmpsb
push
xor
testl
sub
xor
out
xor
push
dec
cmp
mov
scas
pop
cld
test
mov
stc
xor
mov
pop
dec
pop
fidivrs
mov
lret
mov
cwtl
rol
or
into
push
cmpsb
mov
call
xchg
push
mov
fidivrl
icebp
adc
or
inc
addl
sbb
repnz
mov
mov
push
adc
xchg
jno,pn
clc
pop
add
imul
mov
jg
mov
loope
fmulp
fists
in
mov
mov
stos
call
inc
inc
dec
lods
push
scas
out
cmpb
test
fwait
js
sub
sahf
ss
pop
cmpsb
aaa
jno
mov
insb
sbb
orb
test
push
cld
cli
rcr
sbb
and
shlb
inc
mov
ljmp
jne
fcmovbe
add
push
mov
xor
xlat
jge
jns
push
pop
sbb
pop
push
je
xchg
jge
ror
iret
inc
cmp
xchg
bound
cmp
ja
pop
and
cmpsb
adc
sbb
jo
xchg
pop
push
pop
or
stc
jo
leave
xchg
jne
inc
shlb
in
pop
sub
sub
test
lret
ss
jb
cmp
xchg
cltd
je
cld
ret
fldl
inc
push
sbb
and
je
xor
or
shl
mov
in
and
sahf
repz
push
notl
add
test
rcrb
dec
jae
pop
ss
pop
add
xchg
push
xor
mov
in
cmp
mov
push
jno
xchg
pop
loop
push
inc
jg
mov
push
jg
push
jno
cmp
jb
pop
pop
pushf
std
fs
insl
dec
jbe
mov
in
jecxz
daa
mov
push
pop
adc
outsb
pushf
pushf
sub
clc
mov
jb
jmp
sbb
mov
mov
mov
loopne
jnp
xchg
push
mov
add
add
in
mov
sub
outsb
dec
inc
cltd
sbb
and
xor
call
ss
cmpsb
pop
or
insl
in
andl
in
push
insb
aas
les
adc
adcl
arpl
cmpsl
mov
sbb
or
jns
and
cli
fstpl
repnz
mov
stos
psrlw
xchg
xor
mov
out
push
ret
pop
sbb
pop
movsb
sti
fiaddl
sahf
mov
mov
pop
inc
mov
mov
sub
lea
sbb
loopne
inc
loop
outsl
pop
pop
xchg
scas
sarb
sahf
cmp
cmc
imul
inc
insl
shl
scas
or
lock
and
inc
ret
rolb
scas
cmp
xchg
mov
inc
mov
cmp
test
push
dec
mov
inc
fisttpl
pop
or
cmp
dec
movl
jecxz
jmp
sti
add
or
xchg
fnclex
mov
insb
sub
sbb
cmp
imul
push
cli
lds
xor
fistl
pop
andl
push
push
daa
fcom
nop
ds
or
push
sub
fstpl
xchg
scas
push
and
sbb
xchg
mov
imul
mov
cmp
inc
xchg
add
les
in
shl
push
push
cmp
add
loop
adc
lret
add
leave
movsl
pop
xchg
xchg
stos
cmpsl
mov
adc
icebp
inc
std
rorb
xor
enter
jb
jl
fimull
ficoms
jle
lock
sub
inc
push
cmp
pushf
in
and
std
sti
jae
push
sti
call
icebp
push
popa
jle
sbb
sti
push
fsubr
out
adc
loop
or
pop
bound
or
dec
push
jge
in
mov
mov
test
add
adc
push
test
mov
lods
or
aaa
adc
add
ljmp
add
in
sahf
test
aas
inc
les
pop
mov
shr
gs
addr16
cmpsl
out
fldt
push
dec
sub
and
test
xchg
data16
mov
cmp
scas
lods
scas
es
testb
lret
mov
ljmp
cmc
xchg
mov
add
in
iret
filds
sub
arpl
and
cs
in
xchg
jmp
out
insl
loop
ficompl
jb
mov
mov
mov
inc
popa
mov
das
xchg
les
xlat
fldt
xchg
ret
js
ret
sub
test
or
in
inc
push
inc
lret
loopne
pop
mov
push
mov
or
sti
inc
mov
fstpt
cs
mov
mov
mov
sub
jo
test
into
ret
punpckldq
outsb
out
addl
test
rsm
cmp
pop
repz
adc
fidivrs
mov
mov
sbb
fs
fstpt
cmp
xor
ja
scas
mov
mov
ret
into
repnz
out
ret
insb
inc
popa
mov
call
pop
push
jg
aad
fidivs
push
sub
je
xorb
shlb
lahf
jbe
mov
ljmp
sub
lahf
data16
inc
shrb
cmc
icebp
mov
test
jp
mov
nop
pop
xor
add
inc
jno
and
data16
xchg
shll
push
xlat
xor
xlat
cmp
ret
in
mov
mov
aaa
and
dec
loope
dec
add
fildll
jl
cld
ret
pop
pop
gs
incb
mov
int
cmpl
enter
inc
cmp
ficoml
jbe
pop
and
mov
imul
sub
jae
fst
adc
shrl
dec
cmc
mov
push
push
fnsave
movzwl
push
ret
cmpsl
out
insl
pushf
pop
dec
xlat
add
sbb
movb
lahf
mov
out
jmp
xor
mov
into
cmp
sahf
push
xchg
push
fwait
int3
test
lret
jo
jo
dec
shll
loop
shrb
insl
pop
aas
repnz
aaa
imul
iret
fstpt
data16
jp
icebp
lock
shll
inc
sahf
inc
dec
sub
je
call
jle
lods
inc
add
add
xchg
xchg
mov
movsl
imul
mov
lods
ret
shl
inc
lds
add
ret
sbb
mov
repnz
mov
jp
ljmp
aaa
xor
pmulhw
mov
in
sbb
daa
arpl
mov
jno
mov
dec
mov
dec
subb
inc
in
push
push
insl
outsl
sbb
arpl
outsb
xchg
cmp
jecxz
out
add
stc
cli
mov
xlat
inc
in
pusha
int3
fdivrs
sbb
orl
js
cmp
pop
ret
lea
dec
popf
lock
jbe
cmpsb
outsb
shll
inc
or
ficompl
ret
sbb
jl
sub
pop
ljmp
pop
cwtl
aaa
mov
xor
cmpsb
cmp
mov
js
into
adc
ret
inc
addb
daa
push
xchg
and
loop
mov
mov
push
xchg
cmpsl
adc
xor
repz
sbb
mov
add
jge
mov
loop
cmp
fldenv
jae
mov
jle
mov
lods
inc
scas
das
ds
rcr
add
adc
push
or
sbb
adc
test
mov
aaa
ret
pop
or
in
jmp
sub
sub
jmp
shl
ss
mov
pop
mov
lea
in
pop
push
insl
and
into
sbb
stos
add
insl
aaa
aad
pop
faddl
add
fistl
mov
jge
cmp
aaa
sub
cmp
push
jg
cltd
mov
jne
out
inc
push
mov
scas
into
sbb
cmc
notb
insb
aam
popa
test
cmpb
ja
fwait
sub
popf
xlat
insl
testl
jge
shlb
into
jmp
mov
fsub
les
addb
jge
adc
sahf
or
inc
rcll
or
fwait
loopne,pn
cmp
push
fisttpll
ret
insl
jo
sub
enter
outsb
cld
sbb
loopne
fwait
scas
fcmovbe
push
cmp
cs
cmpsb
push
jne
lock
cmp
in
nop
sub
clc
fcoml
inc
std
mov
pop
ljmp
pushf
jnp
xchg
cmp
mov
insl
aaa
xchg
mov
push
stc
cld
jge
jne
jl
fadds
sub
mov
mov
fistpl
mov
test
jmp
int3
xchg
clc
sahf
pop
mov
or
mov
je
or
lock
scas
pop
aad
bound
out
test
ficoml
out
ds
stos
sub
cmc
les
fsubl
lret
imul
pop
mov
clc
loope
xchg
shll
ss
inc
and
fwait
in
daa
fwait
mov
andl
push
cmpsl
xchg
cmp
dec
test
mov
das
xchg
mov
insb
xchg
add
xorb
hlt
pusha
ja
push
rcll
in
dec
aaa
test
adc
call
sub
xchg
pop
jge
pop
clc
xor
pop
cmp
inc
test
add
pop
out
inc
push
clc
inc
lahf
or
cs
fildl
pop
aad
inc
scas
mov
jo
adc
testl
sub
add
push
jnp
jp
outsl
mov
data16
jecxz
sbb
pop
jae
mov
pop
dec
add
js
repnz
push
pop
incl
js
dec
mov
inc
test
adc
xor
pusha
dec
mov
or
adc
cmpl
inc
cli
fs
pop
scas
daa
lock
mov
mov
mov
mov
mov
xchg
int3
loop
mov
lahf
or
pop
cmpsb
add
mov
mov
mov
xchg
mov
xchg
push
popf
inc
inc
mov
and
cmp
popa
dec
cld
lea
dec
push
sub
js
hlt
clc
push
push
imul
and
aaa
push
fstp
mov
into
lcall
int
mov
imul
mov
ja
rcrl
xchg
lods
das
adc
fnstsw
fisttpll
roll
xor
mov
fidivrl
dec
push
pop
rcr
jle
mov
mov
sbb
arpl
cmp
push
inc
push
ds
sbb
xor
cmp
mov
sbb
pop
push
mov
mov
addl
lods
fs
jge
jl
push
mov
pop
rclb
cmpsb
mov
cmp
fs
je
push
ret
faddp
cmpsl
out
lahf
test
sbb
inc
repz
in
pop
testl
mov
add
mov
pop
push
push
aaa
adc
sti
jmp
insb
je
inc
sti
pop
jb
outsl
lods
sub
xchg
imul
push
sbb
lods
aam
loop
movsl
mov
ficoms
or
inc
dec
cwtl
loopne
ljmp
sbb
stos
jne
mov
inc
push
lds
pop
push
shll
ja
mov
or
mov
xchg
mov
stos
aaa
jmp
outsl
jg
jmp
clc
fwait
add
aaa
cmpb
rorl
insl
push
adc
dec
jp
movsb
test
lock
cmp
adc
shr
cmc
rcrb
xchg
xor
mov
sbb
decl
or
je
sahf
mov
imul
mov
and
mov
sbb
and
dec
mov
insl
fsubr
sub
and
adc
sub
jl
int3
lcall
in
inc
sbb
mov
ret
sbb
loop
shrb
outsl
cmp
in
loopne
jns
daa
sbb
cmpsl
jp
push
mov
mov
ss
sub
jne
stos
in
loope
cmp
jecxz
push
shlb
inc
push
je
pop
dec
adc
shlb
xchg
mov
fwait
orb
mov
sub
aas
imul
mov
dec
dec
add
mov
push
mov
pop
pop
insb
or
pop
ljmp
pop
xor
in
lock
push
testb
mov
stc
jecxz
pop
cmp
xor
sub
cwtl
arpl
adc
mov
cmp
loopne
pop
add
jp
jl,pt
enter
dec
ret
rolb
andb
shll
out
subl
fwait
sub
push
sub
sarb
pusha
arpl
mov
sbb
fistl
sub
sarb
sbb
adc
jno
mov
fsubr
xor
es
mov
fdivrl
or
xor
add
dec
sahf
adc
mov
mov
sahf
xchg
mov
add
inc
adc
fwait
push
cs
lods
cmp
popa
insl
xchg
xor
popf
fisubs
fistpl
ljmp
inc
aad
subb
lret
shl
rorb
ret
icebp
enter
lret
mov
sbb
fisubrl
sbb
sbb
lcall
mov
lock
lret
mov
jp
jo
adc
fadd
in
inc
insb
mov
pop
ljmp
sub
cli
outsb
mov
push
adc
xor
lock
or
pop
orl
rcr
push
lea
mov
lods
arpl
shlb
sbb
mov
cmovl
lea
xlat
mov
roll
dec
cmp
inc
cltd
pop
outsb
inc
dec
rcrl
je
test
inc
mov
mov
push
jbe
jne
mulb
ljmp
jl
and
int3
cmpsl
das
mov
mov
shl
ja
lock
pop
lret
imul
aas
jmp
mov
sub
jecxz
pushf
mov
or
xor
push
fildl
pop
out
sti
test
fcomip
cwtd
cmpb
cmp
xchg
arpl
mov
in
cmp
daa
test
fmull
pop
enter
cmpl
mov
dec
repz
adc
pop
lock
lock
sbb
inc
pop
pop
add
ret
in
hlt
push
xchg
lods
push
mov
incb
insl
pop
xor
xchg
mov
orl
jg
sbb
cmpsb
xchg
popa
jns
mov
jmp
mov
adc
js
lret
jb
mov
ret
fisttps
outsl
fists
push
cmp
mov
adc
fcmovnb
call
roll
test
pop
xor
jne
jmp
mov
sbb
pop
outsl
not
inc
in
pop
adc
fstps
mov
es
sbb
xor
jmp
out
push
ljmp
negb
jbe
loope
hlt
inc
mov
mov
sbb
dec
lret
ret
insb
mov
cmpsb
mov
int3
movl
mov
jecxz
testb
cwtl
movsbl
aam
mov
hlt
add
add
pop
enter
bnd
fwait
call
push
fsubrs
cmp
clc
cmp
mov
and
movsb
enter
pushf
sahf
push
clc
sbb
mov
je
pop
push
adc
test
hlt
lret
pop
jbe
push
cs
lods
std
jg
call
pop
sbb
xchg
scas
shrb
or
mov
shlb
test
adc
jbe
test
cmp
sub
jl
xchg
bound
lods
sub
jb
dec
inc
push
ljmp
xlat
shlb
mov
sub
jbe
xor
jmp
out
and
mov
test
jns
jae
ss
mov
pusha
xchg
mov
ds
dec
sbb
daa
push
js
sbb
jns
lret
jns
mov
xchg
das
rcll
xchg
icebp
inc
mov
mov
jb
dec
cmpsb
mov
out
imul
je
inc
sub
push
fidivrl
aaa
cmp
shrl
adc
les
loope
xchg
mov
and
pop
fistpll
mov
and
ret
push
jnp
push
adc
mov
sti
xchg
pop
ja
adc
mov
js
xor
aad
mov
hlt
sahf
mov
dec
xchg
aam
adc
in
mov
lds
loop
xor
pop
scas
popf
push
in
ficomps
sub
and
sbb
daa
add
out
add
push
jno
lret
aas
in
aad
adc
sbb
mov
cwtl
shll
push
push
filds
add
push
add
jne
push
add
jle
mov
out
or
jnp
inc
roll
sbb
fnstsw
in
aas
jmp
or
pop
mov
imul
je
es
arpl
push
shll
jo
push
loopne
test
daa
xchg
inc
inc
sbb
cmp
or
add
flds
fmuls
aaa
push
adc
dec
jne,pn
xor
add
clc
mov
jl
rcrl
cmc
gs
cmpsl
popa
inc
xlat
fdivs
fucomi
sti
sub
mov
pop
sub
pop
mov
mov
push
lahf
iret
sub
insl
aas
lock
in
inc
outsl
adc
mov
sbb
aam
bound
scas
mov
sbb
fstpl
or
or
xchg
scas
cmpl
mov
dec
daa
aam
pop
or
fcmovnb
int3
shl
aad
and
or
iret
sub
rol
imul
xor
ja
stc
cmp
loopne
push
gs
es
push
mov
mov
pop
add
icebp
push
adc
cltd
ret
gs
jl
xor
and
xchg
inc
paddusb
lea
or
xbegin
jecxz
sahf
mov
movsb
xor
cmp
mov
fcmovnbe
sub
fldcw
xchg
mov
in
aaa
fcmovnb
movsb
inc
nop
cmp
xchg
add
imul
cmpsl
cld
mov
insl
and
test
test
mov
mov
mov
xlat
ss
aad
test
jle
adcb
inc
xor
pop
stos
arpl
call
jnp
into
and
jbe
jle
fiadds
xlat
call
push
je
sbb
sub
call
daa
cmp
mov
mov
mov
push
shrl
in
xor
push
call
inc
pop
pop
leave
mov
lcall
repz
xchg
pop
cmp
mov
adc
pop
faddl
out
das
cmp
movsb
repnz
dec
lret
mov
mov
movsl
insl
cmp
pop
sbb
js
pop
or
jns
addr16
push
mov
mov
mov
xor
mov
loope
or
pop
in
movsl
out
xchg
jae
leave
outsb
test
push
jb
jo
lahf
adc
lea
or
xchg
bound
test
int
pop
stos
cmp
jl
test
inc
jmp
push
lds
mov
das
lds
jg
cmpl
js
fnstcw
shrl
das
mov
sbb
dec
xchg
lds
push
mov
mov
xchg
xor
pop
or
int
mov
pop
addr16
sarb
mov
popa
std
mov
jae
stos
adc
lock
inc
push
xor
scas
mov
and
sbb
sbb
adc
hlt
lds
repnz
jl
sti
add
pop
pop
int3
xlat
je
cmp
mov
pushf
dec
xor
mov
push
xchg
cmp
icebp
popa
sti
inc
xchg
push
cli
mov
mov
sarl
mov
ljmp
test
jno
inc
adc
lds
pop
fwait
pop
sbbb
sahf
or
sbb
into
push
or
dec
inc
jne
cs
sub
setp
in
movl
das
mov
imul
andb
inc
or
enter
orb
hlt
cmc
cmc
sbb
ja
dec
jb
mov
sbbb
xchg
inc
in
sbb
xor
out
fbstp
stos
pop
pop
push
mov
in
pop
in
rolb
pop
sbb
mov
pop
loop
ljmp
adc
cmp
push
loopne
rolb
out
mov
jnp
add
xlat
sti
pop
fucomi
pop
adc
or
mov
mov
jo
scas
cmpsb
inc
xchg
imul
fsubr
lea
mov
clc
jecxz
loopne
xchg
in
es
cli
sti
push
adc
xchg
insl
enter
lods
inc
pop
or
mov
out
mov
and
adc
adc
push
mov
addl
in
loope
fcomi
push
cmp
scas
cmp
pop
adc
enter
ds
xor
imul
mov
mov
sbb
push
and
jbe
cli
call
lret
xchg
ss
test
jle
es
dec
dec
mov
cmc
pop
ret
xchg
sbb
in
stc
xchg
cs
sbb
ret
fnstcw
sahf
sti
shrl
mov
lds
loopne
rcll
jecxz
dec
sub
enter
push
and
mov
dec
jnp
cmpsl
inc
hlt
shl
xor
mov
jp
scas
jecxz
out
insl
pop
dec
scas
icebp
xor
scas
mov
test
scas
push
daa
cld
ss
mov
or
inc
roll
pop
lea
sub
ret
into
imul
jge
fsubr
ret
adc
push
scas
daa
pop
arpl
test
rorl
mov
insl
dec
sarb
mov
loop
jmp
cmp
hlt
out
push
ds
sti
pop
addr16
mov
or
mov
orb
cmc
roll
push
rcll
push
pop
fildl
notl
pop
push
push
xchg
outsb
cmp
imul
rcll
push
push
xor
mov
xchg
call
outsb
or
fmuls
lcall
pop
js
test
aam
in
mov
loop
cmp
clc
in
jmp
adc
lds
and
xor
mull
in
into
aas
lds
mov
xchg
ficoml
lock
fcom
lock
inc
jno
mov
jns
testl
sub
xlat
idivb
dec
loopne
inc
and
mov
inc
inc
inc
push
cmpsb
cltd
insl
js
das
add
fidivs
pop
pop
stos
clc
lcall
inc
mov
mov
je
cmpsl
pop
repz
mov
push
call
add
aam
enter
jp
jge
push
cmp
leave
sbb
lret
and
pop
icebp
xor
push
iret
aas
movsl
xor
xor
bound
fstp
pop
ja
ret
fists
test
xor
gs
cpuid
dec
push
inc
je
cs
ss
daa
mov
pop
mov
jns
cmp
js
dec
cmp
adc
in
dec
fwait
xor
repz
shll
jo
jecxz
test
ds
je
sub
daa
inc
loop
or
xchg
pop
pop
icebp
mov
mov
jae
ud0
es
fsts
mov
xor
mov
sub
xor
mov
fistl
or
in
subb
pop
cwtl
ror
push
cmp
faddp
inc
adc
ss
out
xchg
jbe
cs
jne
xor
cmp
cmp
and
adc
rcrb
std
test
addl
bound
xor
or
fbld
add
sbb
jno
pop
clc
cmp
and
mov
adc
mov
add
jne
cmp
xchg
or
push
cmp
pop
inc
sahf
xchg
std
xchg
add
mov
fdivrl
mov
or
mov
sti
lahf
mov
ret
sub
mov
lock
inc
scas
add
inc
push
mov
aad
fstl
pop
dec
push
in
leave
lock
bound
push
loop
daa
outsb
and
icebp
lea
and
scas
loope
mov
xor
cmp
ret
cmc
add
sub
xlat
inc
xchg
push
test
iret
mov
pop
or
jnp
fadds
push
shl
in
hlt
ret
push
jp
fmul
add
aaa
cmp
xchg
or
mov
cmpsl
add
pop
add
sub
or
pop
mov
fstps
testb
cmc
scas
rcll
movsb
pop
push
repz
mov
repnz
outsl
cmp
push
out
cmp
push
movsb
sbb
roll
scas
push
pop
jne
test
or
loop
outsb
pop
pop
ds
stos
mov
cmp
and
cmp
pop
aas
out
cmp
in
ss
sbb
xor
xchg
int
cmp
inc
int3
push
mov
mov
mov
inc
mul
ret
dec
jge
idivb
ljmp
stos
or
lret
inc
stc
loop
add
movsl
mov
mov
jp
jecxz
filds
jecxz
js,pt
fstl
ljmp
inc
out
mov
xor
stos
add
push
fimull
cmpsb
push
mov
inc
aam
inc
push
push
pop
jbe
jp
jnp
in
pop
push
jnp
sbb
sbb
sbb
decb
in
ljmp
js
aaa
dec
pop
pop
mov
sbb
adc
outsb
push
scas
lock
adc
sahf
cli
icebp
jle
dec
cltd
push
cmp
push
pop
jae
imul
cmovne
jno
sbb
xlat
lea
sarl
xor
clc
adc
clc
rol
faddl
and
cli
dec
jb,pn
cmp
pop
or
push
fdivl
inc
inc
pop
rcrl
xor
sar
pop
xchg
push
xor
xor
repz
sbb
push
test
and
push
adc
jmp
adc
adc
jmp
jge
pusha
mov
add
adc
leave
jne
mov
pushf
scas
jmp
sti
fsubrs
and
mov
subps
fstl
dec
or
mov
test
loope
dec
dec
sbb
pop
ljmp
scas
imul
sti
mov
xchg
divb
sbb
or
or
out
les
jl
mov
call
and
cld
fdivrs
out
inc
cmp
xchg
loopne
inc
xchg
pop
push
pop
xchg
js
loop
movsb
out
gs
lods
arpl
mov
mov
out
adc
divl
xor
xchg
test
iret
cli
andl
mov
push
fmull
je
adc
loope
mov
xchg
sbb
jmp
mov
filds
xchg
cmc
or
sbb
mov
mov
popf
pop
inc
pop
dec
cmp
adc
inc
fwait
es
fcoms
test
or
into
adc
or
shrb
dec
je
pop
pusha
rclb
dec
pop
add
sub
lea
mov
in
mov
ret
popf
scas
mov
pushf
sbb
lcall
out
outsl
push
mov
inc
sbb
inc
pop
pop
dec
loope
ret
fucompp
and
pop
aam
mov
push
mov
add
inc
mov
jne
ret
push
in
add
cmp
adc
push
scas
push
call
outsl
lods
xchg
sub
ds
arpl
dec
sub
std
sbb
xor
daa
mov
mov
xor
sub
daa
lahf
andps
mov
mov
cmc
push
std
xor
sbb
push
cmc
lock
mov
or
cmp
add
out
pop
nopl
inc
mov
mov
xor
or
and
lods
je
cmp
rcl
mov
pop
add
bound
mov
stos
xor
mov
sbb
sbb
cmpsl
add
xchg
and
jecxz
xor
outsl
push
and
loope
cli
sarb
outsb
sahf
idivl
inc
push
shrl
aas
push
push
mov
sub
inc
xlat
sbb
xor
nop
adc
stos
cltd
xor
jno
addr16
pop
aad
ss
push
cmp
std
inc
push
shlb
cmp
cmc
popf
clc
mov
daa
mov
insl
mov
mov
and
iret
inc
mov
loopne
dec
das
sbb
sub
sbb
aas
sarb
mov
dec
mov
adc
inc
xlat
and
out
pop
sub
jge
cmpsl
inc
pushf
cmp
int3
mov
sti
pop
xchg
mov
add
jecxz
mov
mov
cs
decb
adc
outsb
jecxz
std
or
sbb
outsl
aas
mov
popa
mov
movsb
mov
fistpl
insl
push
int3
push
sub
or
fprem1
sbb
cmpsl
lahf
sbb
cmp
push
pop
and
and
ret
adc
popf
add
inc
stc
inc
push
inc
xchg
sti
ljmp
inc
and
adc
dec
icebp
mov
dec
jl
lds
mov
xchg
push
rorl
push
xchg
inc
push
mov
insl
imul
in
mov
push
jg
mov
iret
addr16
dec
add
js
add
push
and
adc
sbb
shl
push
pop
out
testb
daa
jl
and
jle
pop
push
pop
inc
cmp
lods
xchg
jp
clc
jecxz
adc
and
sbb
sbb
pop
mov
fcoml
in
ret
xlat
mov
iret
inc
mov
add
push
aad
std
xchg
adc
jecxz
andl
dec
int
call
test
xor
fadd
ret
jmp
js
cmpsb
xchg
jge
pop
mov
jne
in
jns
repz
insl
jbe
jle
fists
inc
insl
call
sbb
sti
hlt
je
mov
ds
cmpsb
adc
jge
gs
clc
push
popf
fistl
inc
or
xchg
cmc
fsubs
add
cmp
pop
jns
rcr
mov
jp
adc
jge
jb
push
subl
mov
scas
cli
push
cltd
lcall
jo
mov
xor
scas
imul
add
ret
push
insl
roll
test
adc
ljmp
cld
jno
inc
mov
adc
xorb
movq
mov
sahf
iret
sbb
ja
or
jns
sub
fsub
ljmp
xor
lds
mov
mov
cwtl
daa
pushf
lcall
xor
push
cli
and
push
inc
fdivrl
mov
mov
mov
sbb
pop
pop
mov
rclb
xchg
out
cli
push
in
or
les
cmpsb
cmp
add
ficoml
ljmp
out
out
pop
test
mov
sti
stos
fiaddl
scas
cmpsb
stc
cli
or
mov
jo
mov
movsl
xchg
xchg
push
cmp
mov
push
push
sbb
fdivrs
insl
xchg
clc
fcmovnbe
cmp
add
dec
push
mov
sbb
lcall
sub
out
jle
test
rcll
je
add
fsubr
in
int3
int
xor
sub
stos
ret
add
xorl
ss
in
mov
les
push
adc
mov
push
adc
sbb
xor
mov
into
and
ljmp
dec
and
mov
nop
or
jg
add
mov
sbb
push
stos
add
fildl
xorl
ret
mov
add
push
push
cmp
pusha
shr
out
sbb
inc
je
mov
popa
jnp
adc
outsb
or
dec
inc
sub
or
inc
mov
adc
lock
fucomi
lret
icebp
je
imul
jne
xchg
jo
push
push
dec
push
and
sahf
lcall
dec
hlt
outsb
mov
fidivrs
das
ds
aaa
aaa
out
fwait
mov
pop
cmpsb
mov
adc
jns
nop
sti
cmp
movsl
xchg
dec
dec
adc
std
inc
int3
pop
jecxz
sub
sbb
cmpb
and
das
fcoms
adc
sub
sub
insb
insl
pop
icebp
inc
xchg
sub
pop
xlat
into
sbbl
jno
ja
or
out
jp
mov
jle
imul
fwait
insl
add
out
mov
jmp
loopne
pop
inc
cld
jle
cld
out
bound
and
jnp
mov
push
mov
push
adc
andl
fcompl
pop
xor
shll
ljmp
mov
xchg
dec
scas
arpl
into
sahf
push
pushf
aad
jae
xor
stc
inc
add
movups
lods
push
cmpsb
cmpsb
repz
test
dec
inc
jge
add
or
inc
push
loop
jno
insb
out
mov
mov
mov
fildl
inc
imul
adc
fdivs
out
and
stos
outsl
cli
mov
fsts
sbb
clc
jle
sbb
hlt
mov
pop
test
ljmp
jecxz
xchg
js
jno
loopne
jl
cli
push
mov
dec
xchg
ret
add
inc
pop
add
js
or
jl
dec
outsl
mov
outsl
js
in
push
testl
rorb
test
dec
xchg
stos
mov
or
aad
jmp
jge
mov
dec
mov
cld
push
enter
sbb
inc
adc
pop
xlat
movzbl
pusha
test
pusha
pop
cltd
push
push
cmpsl
mov
out
test
imul
push
data16
jb
jmp
pop
mov
dec
sub
mov
ja
push
xor
sti
loop
shl
mov
in
rcl
or
xacquire
mov
fwait
sub
cmpsb
popa
movb
dec
sub
into
jbe
mov
pop
jl
shl
sub
shll
mov
ds
jbe
and
rclb
div
imul
or
pop
pop
lahf
jecxz
das
inc
aad
inc
jecxz
cltd
insl
ret
pop
jb
fstpl
pop
mov
sub
pop
mov
pop
pushw
or
xchg
sarb
out
dec
cmpsb
mov
mov
dec
mov
mov
iret
push
mov
mov
sti
lcall
sbb
call
cmp
lods
sti
pop
pop
push
adc
sbb
push
pop
ss
pop
das
inc
sub
or
xor
mov
or
and
jbe
inc
subl
fimull
stos
fnstsw
sbb
ret
hlt
adc
fcmovb
lock
or
aaa
or
mov
and
sti
leave
mov
and
repz
es
dec
dec
stc
cmpsb
mov
stos
xchg
push
sahf
cmpsl
push
fdivs
lods
test
stos
iret
and
push
movlps
cwtl
aad
xor
fcmovnu
stos
or
in
sbb
insb
mov
test
jg
lods
mov
xchg
and
andb
outsb
pop
es
out
push
xor
jne
pop
jg
mov
sbb
cmp
sub
pop
in
mov
xchg
pop
dec
ret
push
add
repnz
push
xlat
and
cmp
in
jnp
add
gs
sbb
call
lret
add
shrl
jb
das
mov
imul
dec
es
adc
lret
jb
in
xor
daa
adc
pop
and
ja
adc
jae
pop
add
xor
xchg
pop
ret
mov
seta
jno
loopne
or
ret
das
jbe
pop
or
jmp
loop
xorb
std
int3
cmp
movsl
dec
pop
dec
xor
mov
cs
or
pop
add
push
dec
insb
jle
ja
out
mov
movsl
mov
fistps
push
push
jo
mov
lods
and
dec
les
mov
dec
or
and
jno
dec
pusha
mov
xor
fcmovne
dec
xor
fldt
sub
mov
pop
or
mov
mov
xchg
jp
dec
cmpsb
jl
lds
push
adc
push
push
dec
shrb
sbb
ds
push
bound
out
sbb
sysexit
mov
xorl
dec
dec
das
sbb
push
jl
mov
out
in
adc
mov
sbb
leave
rclb
cmp
xor
aaa
cmc
lock
push
repz
mov
push
fsub
or
pop
xchg
dec
xor
sbb
scas
xchg
pop
push
add
scas
push
mov
sti
imul
insl
fadds
push
cld
pop
jle
mov
ret
popf
cmp
je
push
push
add
push
inc
inc
call
sub
out
lret
pop
mov
les
out
or
cmc
dec
push
mov
pushf
sbb
add
or
std
inc
and
xor
xchg
adc
jge
mov
div
test
inc
in
sbb
ficoms
xchg
mov
scas
inc
mov
pushl
into
stos
das
jne
clc
push
mov
call
jb
leave
ljmp
xor
aas
out
xor
sub
mov
xlat
xchg
or
add
cmp
aas
sub
mov
jne
xchg
test
sub
ror
and
fisubrs
jne
and
mov
out
sti
mov
push
lcall
mov
jb
push
mov
or
mov
inc
les
pop
cmp
add
push
rcrl
pop
rol
sub
mov
mov
sub
and
pop
rolb
add
cmp
add
adc
jle
inc
jp
hlt
fsubr
and
sbb
xor
pop
sbb
dec
std
cmp
xchg
daa
je
mov
xchg
imul
adcl
test
push
sbb
lods
pop
sub
mov
mov
daa
ja
ret
imul
inc
outsl
jbe
sysexit
or
leave
pop
xchg
int
sub
pop
pop
push
mov
mov
in
rcrl
loope
fsubl
mov
cwtl
movsl
mov
push
arpl
push
push
stos
push
adc
pop
adc
pop
sub
mov
cmp
ret
mov
lods
xor
jmp
dec
mov
fcomi
push
clc
adc
xlat
inc
lds
xor
in
int3
pop
or
add
and
cltd
sahf
sbb
push
fcomp
testb
or
popf
pop
mov
ret
add
pop
jo
and
and
mov
and
dec
js
leave
sahf
fcmovu
mov
xchg
cmp
pop
mov
mov
or
imul
test
ret
insl
mov
mov
dec
inc
add
pop
jo
dec
ja
inc
cli
inc
jne
sub
out
mov
rclb
das
and
pop
and
sbb
subb
pop
xchg
add
cwtl
xchg
fdivrs
xor
aas
inc
jle
daa
mov
jp
mov
mov
fwait
add
dec
jb
sub
pop
pop
scas
imul
fistps
out
cmpsb
test
mov
addr16
icebp
insb
insl
xor
ljmp
cmpsl
cli
dec
cmp
dec
mov
mov
test
sti
lret
push
or
jmp
sahf
fidivl
mov
mov
cmp
out
sbb
outsl
sbb
shlb
lock
sbb
mov
stos
fcmovbe
mov
mov
xchg
popa
mov
pop
add
leave
adc
push
aad
sti
stos
jae
jmp
clc
sbb
pop
or
xchg
and
and
push
jnp
movsb
lcall
loop
cs
xor
mov
cli
cld
jle
outsb
xchg
push
mov
sahf
ret
insl
lret
push
or
hlt
cmc
pop
xor
andb
cmc
js
sub
stos
mov
outsl
push
sti
mov
push
adc
push
in
mov
mov
sub
push
dec
test
popa
adc
sbb
fmulp
das
add
aam
xor
sbb
ja
jb
mov
cmp
jge
mov
mov
or
cmpl
xchg
lea
insl
mov
repnz
or
insb
stos
loopne
push
stc
pop
inc
out
and
je
std
jae
push
xchg
lds
je
sbb
loopne
cmp
cmpsb
out
clc
sahf
fsubr
cmpsb
les
ret
ds
xlat
inc
or
gs
rcrb
mov
rcl
push
shlb
mov
jno
sub
jmp
push
cs
mov
push
and
inc
push
enter
adc
pusha
jg
lock
sub
jbe
fmull
dec
pop
xor
insl
push
outsl
xlat
std
fmull
mov
and
mov
cmp
mov
sbb
jge
xor
insl
arpl
pop
daa
incb
push
jae
push
cmpsb
mov
std
test
sahf
cli
dec
push
push
jo
scas
push
scas
jecxz
es
cmp
mov
inc
daa
add
inc
and
cmp
push
pushf
jecxz
jo
sub
inc
mov
sti
mov
lcall
es
add
and
push
call
repz
jle
cltd
fmull
push
ljmp
js
mov
outsb
mov
loope
addr16
and
inc
add
cmpsl
pop
ds
test
ljmp
sbb
gs
loopew
notl
jmp
jbe
mov
mov
and
cmp
test
ret
or
mov
add
ret
mov
arpl
movsb
adcb
sub
sahf
mov
dec
cmpsb
insl
jnp
xlat
adc
or
xchg
and
jnp
pop
testb
xchg
pcmpgtb
lret
jl
bound
clc
ljmp
push
dec
adc
inc
mov
xor
popa
lret
sarl
mov
popa
jnp
pop
mov
mov
mov
pop
imul
inc
push
lock
jle
push
test
inc
lds
dec
push
xlat
loope
test
lds
enter
loope
das
gs
add
mov
neg
std
leave
ja
test
sbb
ret
xchg
or
mov
pop
fnstsw
dec
test
lahf
adcb
stos
clc
loopne
jg
adc
jb
and
cmp
iret
and
std
dec
adc
lods
lcall
es
jnp
sub
clc
jne
repnz
or
xor
push
loopne
cli
mov
sub
push
sbb
or
sbb
pop
xor
adc
test
jo
inc
loop
int
push
push
jecxz
imul
lcall
mov
in
sbb
or
jmp
cwtl
jb
mov
mov
icebp
push
push
hlt
mov
xor
adc
fidivs
dec
loope
pushf
lods
pop
mov
lahf
movsb
and
pop
inc
scas
into
dec
fistpll
add
jge
adc
pushl
xchg
ss
fadd
cmpsb
jae
out
lret
sub
adcl
divl
inc
rcl
xor
cmp
insb
fdivs
cmp
xor
sbb
push
mov
scas
dec
jae
call
mov
fucomp
popf
push
adc
xor
cmp
int3
shr
shll
adc
popa
add
aad
mov
pop
jle
cmp
notb
fdivl
jmp
push
aaa
insl
add
xchg
adc
outsl
leave
cmp
test
add
jbe
nop
in
pop
mov
sbb
jmp
call
loopne
pop
jg
dec
pop
or
cmp
sbb
loope
sub
loope
sub
out
pop
sahf
push
inc
cs
push
repz
lahf
rolb
cwtl
push
jae
sbb
fmull
mov
jnp
xchg
cmp
lret
lds
xor
pop
lods
in
leave
repnz
aas
clc
sub
les
sarb
imull
pop
fcmovnb
loope
mov
mov
sbb
div
shl
pop
out
inc
jbe
mov
xchg
cmp
dec
sbb
pop
push
adc
push
test
sarl
cmc
arpl
dec
mov
ss
or
lods
pusha
jnp
mov
jnp
or
popa
and
loopne
loope
xchg
lock
gs
stos
mull
aad
dec
pop
das
call
xor
xor
jo
jmp
lcall
push
or
cmp
out
adc
jge
inc
icebp
add
sbb
repz
repz
mov
test
jecxz
adc
ds
lods
sub
jl
mov
popa
xchg
nop
cmpl
je
lea
mov
dec
mov
inc
enter
inc
pop
insl
add
enter
or
cmc
add
adc
cli
add
jle
fsin
insl
sbb
in
and
test
or
arpl
mov
and
xor
loopne
sub
fsubs
adc
pop
xchg
in
loope
lret
ljmp
insl
xorl
xor
pop
add
cmp
addl
mov
inc
jle
test
fimull
add
out
cmpsl
daa
ret
nop
add
sub
out
js
xchg
mov
jle
pusha
dec
loop
xchg
jle
faddl
or
sub
inc
cmp
pop
adc
stos
mov
cld
orl
add
sub
sbb
cli
pop
mov
imul
insb
pop
cltd
jp
mov
mov
popa
cs
push
hlt
ds
push
fsub
imul
cmpl
xchg
fcoms
divl
sti
pushf
sahf
pop
add
ja
in
or
lds
outsb
or
cwtl
das
orl
add
mov
xor
jge
fwait
jns
negb
inc
ljmp
jmp
jb
aam
xchg
sbbl
ja
jmp
push
sbb
cwtl
insb
sub
ret
xor
adc
pop
inc
repz
aaa
mov
push
push
xchg
cs
or
or
xchg
insb
repnz
loopne
push
call
and
mov
jne
or
dec
add
cmp
arpl
sub
dec
push
mov
test
push
jne
scas
bnd
add
adc
lock
jae
jge
inc
sahf
mov
mov
adc
adc
icebp
dec
adc
or
push
xor
outsl
sub
xor
imul
sbb
notl
fistpl
sbb
push
mov
jb
popa
push
and
pop
ja
out
daa
xchg
outsl
ficompl
push
inc
inc
iret
idivb
push
mov
sbb
call
lea
cmpb
dec
sbb
push
jmp
lock
fadds
add
mov
dec
cmp
incl
ret
pop
sbbb
adc
int3
int
mov
xor
push
add
out
ja
sub
lock
outsl
xchg
cmp
inc
cld
pop
push
enter
pop
mov
xchg
bound
push
jo
jne
mov
lret
adc
les
jne
lahf
cmp
push
cmp
daa
into
and
loopne
add
mov
mov
fistpl
mov
inc
mov
sbb
xchg
lock
sub
hlt
das
cwtl
mov
sti
add
mov
cltd
mov
add
das
divl
test
push
out
cmp
enter
cmpsb
mov
rcl
aaa
js
xchg
xor
fdivrl
mov
mov
push
fldt
pop
xlat
lods
mov
xor
cmp
out
sti
fidivs
dec
popf
cmp
xlat
mov
insb
push
and
jne
mov
xchg
sarb
mov
xor
cltd
pop
xchg
jmp
in
sbb
mov
and
jmp
add
inc
out
adcl
cmp
std
loopne
pop
sar
sahf
cli
jl
sbb
int
sbb
dec
mov
and
cltd
adcl
jl
mov
pop
jmp
scas
hlt
idivb
sbb
or
test
add
xchg
out
test
adc
mul
jge
mov
test
jns
jnp
test
jae
push
cli
call
cmp
das
mov
dec
mul
jb
inc
xlat
push
mov
lock
mov
shlb
and
pusha
fidivrl
mov
hlt
mov
mov
je
jne
jmp
sbb
in
jmp
cmpsb
mov
and
imul
adc
ljmp
bound
test
mov
pop
xchg
push
rcl
jmp
lds
jl
rorb
and
pop
gs
xchg
jmp
lcall
rorl
rcl
add
jmp
xchg
xchg
add
xchg
adc
idiv
pop
ret
cmp
push
stc
loopne
jge
out
mov
mov
int3
test
ds
cmpb
jns
scas
jbe
sbb
fsubrs
arpl
cwtl
adc
repz
mov
leave
lods
mov
js
xor
negb
push
jl
fwait
popf
shr
fs
ficomps
mov
test
daa
mov
jae
push
rolb
add
cmp
jg
dec
lock
add
pop
orl
push
jl
dec
xchg
push
dec
hlt
xor
pop
fisubrl
psadbw
dec
pop
mov
leave
xchg
add
push
cmp
rol
pushf
or
or
add
cmp
movsl
arpl
xchg
inc
sbb
inc
nop
push
cli
push
pop
inc
sbb
cwtl
lods
test
stos
clc
cli
jno
mov
pop
add
and
pop
fidivrl
into
inc
insl
xorb
xchg
cmp
rclb
decb
scas
cs
mov
jne
push
push
pop
popf
push
lret
sti
or
push
js
ss
dec
imul
pop
adc
mov
daa
fcomps
push
orb
stos
scas
xor
out
jbe
ljmp
movsl
out
clc
cli
jne
ja
pop
cwtl
cltd
cmp
mov
add
xor
push
repz
ficomps
or
js
push
call
sbb
cmp
sar
jnp
aad
fwait
lds
adc
jb
loope
cli
and
and
jb
push
lahf
sub
mov
cmpsl
out
adc
and
sub
xchg
popl
pop
imul
add
cwtl
adc
pop
into
popa
ljmp
adc
shll
pop
sbb
andl
movsl
mov
add
insl
mov
fistpll
aaa
add
in
aad
xchg
mov
aad
je
outsl
ret
iret
aad
adc
vcvtsi2ssl
mov
sarl
fimull
inc
push
leave
lock
jmp
adc
lret
pop
mov
xlat
push
sti
and
outsl
test
jne
imul
pop
cmp
movsb
sub
and
push
shlb
push
js
sbb
fcmovnu
or
mov
cli
sti
test
add
dec
sbb
xlat
popa
dec
or
shlb
daa
and
out
xchg
dec
fisttpl
or
xorl
cs
shld
in
fmuls
xor
mov
xor
fldt
ret
sub
pop
cmp
mov
subb
out
daa
jg
sbb
xchg
push
cwtl
push
pusha
in
jle
cmp
aas
mov
test
movsb
fldt
xchg
push
fdivrp
insb
lret
xchg
xchg
fisubrs
fidivl
sub
addr16
cmp
jecxz
int3
int
inc
sbb
jecxz
jno
push
fmuls
stos
or
add
scas
mov
scas
rcll
inc
mov
mov
cmc
mov
sbb
sbb
cmpl
sbb
push
fmull
cmp
mov
shrl
cmp
xor
mov
jb
call
sar
mov
iret
xchg
sbb
comiss
mov
sahf
adc
icebp
push
sbb
cld
or
mov
scas
add
aaa
daa
imul
jbe
mov
sbb
pop
shll
mov
addr16
xor
xlat
std
pop
jne
loope
ljmp
addl
adc
xor
call
iret
pcmpgtd
adc
and
add
dec
insb
or
lret
ja
xchg
faddl
outsb
addb
cli
cwtl
in
shll
outsb
dec
fcompl
pop
pop
aas
dec
rorl
mov
and
xlat
mov
repz
push
jg
push
test
xor
sbb
mov
insb
mov
dec
loop
mov
in
mov
mov
das
jecxz
decl
stos
and
insb
daa
jne
mov
sbb
xchg
daa
cmp
mov
pusha
aas
inc
sbb
inc
inc
lret
orl
or
dec
andb
sbb
faddp
xor
jp
push
jns
mov
jnp
mov
push
cmp
sbb
loopne
mov
jmp
pop
idiv
xchg
divl
ret
pop
ss
fldt
fisttps
cmpsb
sahf
cmp
aam
adc
xlat
or
dec
xor
daa
adc
minps
mov
sbb
ret
dec
sbb
lds
paddq
sti
pop
push
mov
in
or
frstor
lret
ficomps
dec
push
icebp
pop
sub
outsl
ret
arpl
imul
sbb
stos
adc
push
push
arpl
dec
xor
pop
bound
sbb
in
add
imul
mov
pop
int3
shrl
rcl
mov
mov
fdivrl
mov
test
std
mov
sub
pop
or
aas
xchg
iret
mov
dec
cmp
fucomp
adc
xchg
incl
mov
ret
das
mov
cltd
mov
xor
mov
sub
mov
ds
xchg
ficoms
rcl
loopne,pn
out
xchg
leave
sti
fisubs
pop
mov
lcall
rcr
add
scas
mov
stos
jp
call
mov
loope
lret
push
aad
adc
or
push
push
jns
inc
stos
mov
xor
cmpsb
xor
loopne
cmp
icebp
loope
inc
shll
xlat
outsb
sti
fisubrs
mov
leave
inc
call
push
outsl
inc
lock
bound
loope
jl
movsb
mov
xor
jbe
fisubs
adc
aad
pop
sbb
cmp
fisubl
xor
into
xchg
rcrb
mov
inc
add
daa
ljmp
mov
sbb
pusha
jno
xchg
adc
testb
nop
mov
and
mov
jmp
and
cmp
push
jl
in
notl
jge
ds
xor
cmpsb
cmp
cmc
push
pop
push
scas
mov
sbb
sbb
jo
scas
mov
aad
mov
lret
test
lahf
push
aam
leave
movsb
sahf
xchg
cli
call
les
in
sbb
call
xchg
int3
cltd
push
mov
jae
dec
mov
hlt
mov
xchg
mov
call
xchg
cli
ret
push
faddl
lahf
xor
fucomip
imul
jne
push
mov
std
xchg
add
lahf
enter
into
enter
pop
fidivrs
movsb
cmp
fiaddl
icebp
xor
les
movsb
or
jnp
shrl
sub
fisubl
ljmp
aas
pop
pop
add
dec
loop
cli
mov
sbb
cmc
mov
nop
xlat
pop
adc
xchg
sbb
xchg
insl
sub
fisubrs
xorb
rolb
shrb
and
xchg
mov
xchg
aas
jge
imul
cmp
insl
xchg
out
jne
xlat
insb
push
dec
push
clc
jae
and
mov
mov
push
les
inc
mov
mov
push
or
inc
jl
les
adc
cmp
in
and
test
mov
xor
adc
out
stos
test
adcb
mov
dec
das
xor
cmpsb
and
imul
insl
cmp
outsl
scas
andnps
mov
enter
xor
scas
pop
jae
mov
test
imul
mov
cmp
mov
fdivrl
mov
fnstsw
and
mov
fs
jp
xor
ljmp
add
loopne
or
imul
lods
ja
add
enter
dec
fists
cmpb
mov
mov
cmpsb
push
jne
ss
jl
rclb
mov
cmpl
jo
jp
sub
mov
dec
dec
cmpsb
mov
or
aad
fsubl
nopl
xor
pop
cmpsb
stc
dec
dec
push
out
daa
sahf
or
fwait
and
ja
and
stos
scas
in
mov
stos
sub
in
dec
out
mov
push
mov
je
das
outsb
data16
insl
repz
jne
or
jmp
mov
pop
ret
adc
pop
pop
ret
pavgw
mov
push
sub
inc
bound
aam
scas
test
jae
mov
mov
mov
inc
stos
cmp
faddl
scas
mov
aas
repz
call
mov
scas
test
push
popf
jbe
mov
pop
inc
imul
lret
hlt
in
inc
mov
pusha
leave
jmp
mov
jmp
faddl
repz
mov
sub
mov
jb
xchg
fidivrl
rcr
mov
adc
xchg
and
sarl
jne
add
mov
stc
cmp
push
jae
icebp
loopne
stos
add
inc
mov
sbb
jecxz
cmp
xchg
pop
stos
jne
mov
cld
inc
mov
jl
loop
es
or
insl
push
cmp
in
jnp
fldenv
push
mov
lock
into
les
into
push
aas
iret
inc
int
fimull
mov
jge,pt
and
test
stos
and
mov
xor
add
cs
outsb
out
cli
call
jmp
ret
cmp
cmp
cld
loope
inc
out
cs
jns
stos
sti
hlt
adc
sbb
sbb
sub
mov
notl
rcr
sbb
addr16
or
dec
divl
arpl
add
xlat
enter
pand
adc
add
pop
repnz
imul
test
imul
xchg
cmove
repz
das
shl
pop
fnstenv
das
call
add
in
pop
arpl
inc
stos
or
add
adc
cld
ljmp
push
inc
test
arpl
lock
inc
jecxz
mov
jnp
inc
sub
xlat
push
aad
aaa
xchg
xchg
in
pop
test
jecxz
imul
push
mov
sbb
mov
sub
lret
rclb
add
out
stos
cmpsb
mov
add
loopne
ljmp
cli
dec
das
pop
shl
std
out
mov
dec
loopnew
cmp
pop
fs
jb
add
sahf
jle
sub
pop
cmpsl
xchg
cmp
mov
mov
int3
gs
outsb
jp
frstor
gs
test
xchg
mov
sbb
sub
push
adc
adc
cmpsl
or
andl
jecxz
test
mov
mov
xchg
jne
xchg
insl
push
adcb
mov
scas
sbb
testb
or
xlat
lcall
pop
jecxz
push
cli
jecxz
fstpt
aad
sbb
dec
sbb
mov
mov
mov
pop
mov
inc
push
js
inc
mov
enter
in
arpl
sub
adc
cmp
lds
pop
mov
mov
shrb
scas
or
shrl
cmc
pop
cmpl
jg
mov
add
dec
mov
inc
xchg
mov
daa
test
or
jecxz
fcomps
fistl
dec
scas
xchg
out
pop
mov
mov
sbb
cmc
shll
and
jmp
dec
push
jae
cmp
inc
inc
jg
jns
paddd
mov
push
jmp
sahf
das
stos
pusha
mov
subl
cmp
sbb
sbb
push
insl
dec
gs
rorb
mov
or
enter
fdivrl
nop
lret
push
cmp
cmp
lcall
xchg
mov
fistl
and
rcrb
cmp
adc
add
outsl
rorl
cld
movsl
loop
repnz
out
sahf
sahf
push
push
pop
stc
scas
sbb
fcoms
test
outsb
jle
cmpsl
push
shll
repz
aad
dec
mov
leave
mov
ds
inc
addb
aam
pavgw
iret
imulb
jo
fldl
out
out
cmp
cmp
dec
mov
sbb
mov
aad
lahf
or
leave
cltd
sbbb
sub
sti
leave
push
in
test
jno
and
outsl
sub
fisttpll
out
jmp
out
push
lret
or
out
jmp
cld
cs
push
and
jl
ret
lret
mov
cli
xchg
filds
xorl
jae
mov
andl
mov
mov
dec
inc
or
pusha
iret
imul
mov
xchg
shl
add
sti
jp
out
push
fcomp
or
dec
fs
notl
test
outsb
loope
es
mov
pop
dec
mov
bound
dec
jle
shl
fnsave
ljmp
arpl
jle
call
jo
scas
sbb
ret
rcrl
rol
push
push
push
in
xchg
dec
fucomp
push
mov
mov
out
pusha
shl
div
mov
flds
jnp
xchg
dec
int
aaa
fildl
mov
cmp
mov
insl
sarb
cmpsb
in
inc
into
rcl
cmp
out
xor
push
mov
cli
and
adc
into
sti
jae
inc
ret
or
and
dec
adc
pop
pusha
sbb
loope
scas
jo
push
pop
adc
jnp
test
pop
ror
insb
lock
repz
es
pop
divb
sub
in
dec
jp
or
movsl
and
jl
ljmp
xor
and
xor
ret
fdivl
sti
and
add
and
test
xchg
mov
mov
loopne
mov
adc
add
pop
rolb
ljmp
xlat
inc
mov
jmp
in
push
cmpl
dec
mov
stc
jge
or
mov
xchg
mov
ds
mov
arpl
repz
adc
js
aas
inc
push
mov
jbe
js
push
lds
xor
mov
sbb
and
pop
jmp
ret
jbe
and
movsb
mov
and
test
ds
jne
inc
mov
adc
and
ljmp
xchg
icebp
loopne
xchg
mov
add
test
mov
mov
jae
scas
test
mov
icebp
push
mov
das
fiadds
jge
mov
mov
jmp
xchg
sub
jmp
xchg
or
loopne
icebp
cs
push
inc
or
std
sub
insb
cmpsl
xchg
mov
jo
icebp
add
mov
push
adc
add
cmp
sti
fcomi
adc
mov
imul
repz
test
ret
jge
add
sbb
lcall
adc
xor
lods
popw
mov
ja
aad
insl
mov
test
scas
loop
xor
adc
sub
push
cmp
jle
insb
mov
aaa
pop
mov
cmp
shlb
outsl
cmpsb
push
adc
mov
inc
scas
sbb
lret
iret
mov
mov
xor
and
fldl
popl
cwtl
sub
pop
and
adc
jmp
add
testl
cmc
insl
data16
pop
mov
push
movsl
xor
aad
adc
pop
pop
loopne
cmp
and
shl
out
mov
push
jge
lods
hlt
lock
or
add
ljmp
nop
leave
pop
push
mov
pop
rolb
cmp
inc
loopne
xor
cmp
bnd
jle
fs
jmp
ret
mov
mov
mov
in
and
adc
mov
mov
fs
in
push
dec
inc
pop
ja
sbb
jne
test
mov
jecxz
test
aam
xor
inc
dec
dec
filds
scas
jb
aas
push
xlat
cmpsl
in
add
inc
shrb
rcll
jb
fdivrs
mov
fistpll
pop
xchg
push
shrb
dec
sti
push
inc
xlat
sti
bnd
jp
xchg
cli
add
pop
in
pop
cld
js
es
rcll
das
sbb
aas
arpl
out
lods
test
jb
ja
mov
sbb
scas
icebp
adc
pop
cmpsl
dec
ljmp
aad
inc
mov
js
test
push
cmp
cli
sub
dec
frstor
jb
sub
cmp
push
shl
stos
jo
and
arpl
and
cmpsb
ficomps
fwait
pop
sub
popf
mov
or
in
and
push
fwait
pop
adc
sub
sahf
adc
xor
mov
icebp
xor
je
call
dec
sub
pop
mov
mov
sub
in
or
push
inc
xchg
jae
mov
jp
in
fs
ljmp
and
cmp
xor
mov
mov
das
sbb
pop
aaa
insb
call
cltd
aad
mov
ret
mov
gs
push
pop
push
fists
push
aad
or
push
pop
mov
dec
jmp
xchg
jecxz
sub
rorb
loop
add
ret
cmova
lea
add
xchg
in
jge
popa
call
out
hlt
mov
dec
cmpsb
jae
adc
rorl
icebp
fldt
es
and
jb
pop
mov
inc
in
mov
aam
mov
fcomps
mov
fildll
imul
in
rcrl
cmc
adc
jae
shll
std
rol
push
cld
in
mov
sbb
add
or
inc
pop
jge
loope
imul
add
add
jmp
loope
jns
loopne
add
loop
and
jmp
cmp
pop
push
pop
pop
or
adc
cwtl
xor
outsb
push
inc
add
push
fmull
cmpsl
pop
std
cmp
icebp
or
movsb
aaa
or
test
fdivs
xchg
ds
jle
push
mov
mov
lock
jb
movb
sub
mov
outsl
pop
and
mov
inc
pop
dec
pop
mov
pop
lock
or
or
imul
stos
inc
pop
lcall
mov
js
sbb
jb
jecxz
mov
out
push
fisttps
and
fidivrl
loope
jae
xchg
and
fidivrl
add
inc
fucomi
nop
add
fisttpl
leave
lret
add
or
cltd
into
cmc
add
jnp
stos
aad
add
cs
cmc
lahf
push
rol
movsl
or
data16
pop
scas
lea
aas
test
loopne
mov
mov
rcl
bound
cmp
push
push
mov
addl
hlt
shl
inc
fldl
mov
sahf
xorb
cmpsb
test
test
push
scas
jnp
sub
pop
lret
pop
jbe
and
and
out
and
push
sahf
imul
jns
icebp
push
adc
cmp
mov
rcrl
or
aaa
adc
sub
or
cld
enter
xchg
xchg
add
sbb
push
imul
and
mov
mov
sub
mov
arpl
sub
test
sbb
sbb
mov
aad
hlt
adc
cmp
test
ljmp
test
loope
jns
xchg
scas
mov
and
xor
sub
ret
cli
mov
int3
faddl
pop
addl
mov
and
fcmovnbe
jb
mov
dec
add
sub
ficoms
in
test
mov
inc
sbb
imul
and
shl
or
xor
outsb
ja
lret
shlb
and
cmpsb
test
mov
aas
or
and
xlat
mov
repz
aas
int
sbb
push
adc
fbstp
pop
ret
or
cmpsl
es
xchg
fildl
andl
add
cmpb
adc
sbbb
lods
mov
or
cmp
scas
or
jns
ss
mov
pop
nop
ljmp
adc
push
add
and
mov
mov
or
fsubs
lods
fdivrp
pop
push
aaa
pop
jp
out
mov
iret
xchg
pop
or
insb
movsb
icebp
mov
out
push
cmp
repz
jb
repz
popf
and
subl
or
icebp
adc
dec
mov
push
lods
pop
scas
ficoml
jns
popl
pop
testl
inc
add
pop
pop
shlb
popa
add
hlt
aaa
jns
sbb
js
mov
cmp
aad
cmp
inc
jne
xchg
pop
ret
pop
fcmovnb
in
mov
mov
push
outsl
mov
je
into
adc
jge
push
cmp
call
into
jo
add
fsubl
push
adc
pushf
dec
dec
cmp
icebp
pop
int
cld
mov
mull
int
popf
add
lret
mov
out
ss
imul
ret
ds
popf
inc
test
adc
dec
mov
repz
popf
jbe
sbb
mov
pop
inc
mov
sub
inc
fnstsw
mov
adc
pop
shr
shlb
xchg
push
das
mov
fistps
sub
push
add
js
cmc
add
loope
push
das
lcall
jg
dec
aad
adc
ljmp
test
xchg
or
ret
insl
pop
in
lock
push
cmc
pop
loope
imulb
push
mov
mov
clc
xor
pop
in
pop
cmp
or
push
imul
insl
xor
shl
outsb
iret
and
iret
or
xchg
push
and
sbb
out
fwait
aas
cmp
or
mov
aas
testl
and
mov
mov
sub
outsb
int3
mov
test
mov
mov
movsl
or
xor
adc
push
xchg
push
out
sub
dec
xchg
pop
scas
jg
mov
inc
bound
cld
ret
mov
mov
add
arpl
loopne
jl
aaa
mov
mov
jns
fisttpl
fldl
aas
pushf
jne
inc
fisttpll
sbb
fldl
pushf
mov
rolb
rorl
jle
mov
dec
and
dec
ljmp
aas
cli
jnp
test
push
dec
fcmovnb
push
add
jo
mov
aas
outsb
shr
xchg
sbb
or
inc
dec
sbb
xchg
in
mov
movsb
out
mov
sub
dec
sti
ja
ljmp
in
cltd
dec
mov
mov
mov
imul
mov
push
dec
mov
xor
pop
adcb
aas
loopne
pushl
out
cmp
mov
pop
incl
pop
mov
dec
cmpsb
push
outsl
int
hlt
rcll
add
adc
jmp
stc
cmpsl
out
aaa
movsl
mov
lret
and
out
icebp
loop
cmp
mov
mov
inc
movl
xor
test
outsl
lcall
add
sub
adc
mov
frstor
mov
mov
lret
sub
pop
testl
loop
push
cmp
pop
push
dec
arpl
das
sbb
sbb
pop
lods
mov
jle
push
inc
dec
mov
mov
nop
fadds
inc
les
repnz
jmp
xchg
insb
aam
aam
imull
jo
pusha
fidivrs
out
test
rcrl
sub
jbe
mov
in
jnp
jnp
jecxz
pop
mov
push
cld
mov
cmp
jno
mov
mov
sub
movsb
adc
add
outsb
mov
scas
jno
adc
push
das
test
xchg
int
jl
popa
push
jp
mov
shl
cli
ds
adc
not
les
rcrl
jae
and
loop
pop
orl
std
cld
inc
cli
aas
adc
push
adc
iret
add
mov
mov
lock
cmpsl
mov
jl
dec
rorb
jle
data16
mov
jae
dec
push
mov
cmp
inc
je
and
xor
jge
into
xor
mov
push
pusha
loopne
dec
sub
sbb
inc
xlat
fmuls
je,pt
stos
test
xor
ret
loop
mov
sbb
cmp
push
and
outsb
fstpt
mov
loope
adc
jl
xlat
mov
pop
jl,pn
lods
and
add
test
add
sbb
cmp
mov
mov
jp
mov
out
mov
mov
cmpsl
sbb
fldl
aad
dec
leave
testl
push
lds
sar
lds
jmp
inc
dec
lret
mov
leave
out
test
adc
rcl
je
ret
arpl
xorb
loope
fists
mov
fsubl
push
bound
mov
rorb
push
jecxz
xchg
pop
loop
mov
cmp
xor
test
or
cli
xlat
xchg
scas
sbb
fmuls
xor
inc
ljmp
xchg
inc
imul
shl
ja
loop
mov
lcall
cmc
lock
faddl
fcmovnbe
fidivrl
ja
faddl
cmpxchg
jns
out
test
sbb
cmp
into
cli
bound
out
jg
flds
icebp
movsb
orb
jne
and
add
inc
test
out
inc
mov
jns
bound
andb
icebp
mov
scas
mov
pop
into
imul
pushf
or
lods
pop
js
cmp
mov
pop
loopne
sub
push
push
push
mov
int
sti
js
mov
mov
fld
sbb
aaa
cltd
lods
mov
cwtl
cmp
leave
std
call
cmpsl
enter
fcompl
add
pushf
add
cmp
xchg
out
pop
pop
jo
frstor
icebp
rorl
mov
test
push
and
jbe
sbb
adc
mov
mov
je
out
mov
je
int
jecxz
inc
lock
decb
fwait
mov
sbb
enter
mov
push
jb
leave
pop
rcl
cmp
sahf
ret
outsl
xor
out
or
dec
roll
inc
mov
sbb
and
imull
addb
jp
jb
lods
mov
out
cli
jge
jmp
inc
xchg
cmpsb
mov
and
sub
push
mov
mov
mov
xchg
adc
out
push
pop
testb
rcl
adc
xor
jb
shll
test
mov
outsb
inc
ja
out
popf
int
inc
outsl
mov
pop
inc
setbe
es
cld
aad
inc
or
xchg
xchg
push
imulb
jno
pop
loop
mov
mov
fdivrl
or
xor
lock
sarb
in
arpl
adcl
out
addr16
add
fistpll
sti
js
fldz
es
popa
add
adc
adc
in
xor
out
xchg
cli
int
imul
outsl
aam
cmc
das
mul
xchg
jg
mov
in
ret
ret
xchg
jbe
mov
jp
mov
push
cli
mov
push
sahf
aam
outsl
jl
cwtl
jge
fsub
divl
xchg
test
mov
rcl
cmp
or
loopne
mov
call
mov
popa
and
fsubrl
mov
inc
mov
leave
sub
mov
sbb
jg
xlat
dec
or
mov
aam
orb
pop
testl
fs
inc
inc
movsb
inc
cmp
ja
mov
mov
or
inc
mov
mov
aad
cmp
xor
pop
pop
push
aaa
insl
mov
lahf
arpl
fwait
dec
or
jo
pop
jnp
xchg
mov
jmp
insl
imul
mov
insl
arpl
out
imul
dec
sub
in
dec
dec
arpl
pop
sbb
fnsave
lds
and
dec
inc
jne
pop
inc
cli
dec
pop
dec
lock
jmp
in
xchg
repnz
js
in
push
dec
push
jns
jle
mov
lcall
hlt
and
mov
arpl
jge
ss
mov
dec
ret
add
cli
movsb
out
add
xchg
xchg
xchg
jle
es
push
mov
jbe
mov
fnsave
jge
stc
andl
call
jmp
mov
insl
xlat
fwait
scas
das
push
jl
emms
and
insb
mov
ja
scas
insb
cmp
test
push
ret
xchg
in
dec
xor
arpl
jg
outsb
pop
cmp
ret
fiadds
mov
xor
push
les
mov
xor
cmp
mov
imul
aad
fcmovu
test
pusha
call
je
add
pop
mov
aaa
leave
mov
mov
nop
movsl
jecxz
jmp
shl
andl
mov
mov
frstor
rcl
movsl
xchg
xor
leave
pop
iret
cmpsl
iret
add
loope
jecxz
out
adc
mov
insb
enter
sti
pusha
or
push
fistpll
mov
and
mov
push
xor
les
lock
push
add
ds
xchg
pop
call
push
push
lock
cmpsl
xor
aas
sbb
ds
inc
loopne
ds
repz
dec
pop
shr
iret
jge
sbb
cmp
jl
cmp
pop
mov
test
pop
mov
push
fucomi
sbb
insl
cmpsl
sub
mov
jge
mov
lahf
lods
sbb
cmpsb
and
arpl
mov
add
mov
lods
add
cmp
adc
mov
pop
dec
inc
xlat
outsb
lds
lret
push
lock
or
sub
in
mov
scas
in
testl
jge
jl
inc
inc
add
imul
imul
or
xorb
loopne
and
or
test
sbb
out
sbb
pop
fcomps
loopne
push
shl
or
add
sar
pop
fucomi
pop
or
xor
jae
call
fmuls
push
lret
loop
pop
rcrb
dec
je
push
or
scas
and
xchg
leave
stos
mov
in
adc
fbstp
add
xchg
mov
test
adc
je
hlt
jne
pop
xchg
scas
cmp
loop
test
adc
add
scas
or
or
adc
jmp
and
and
frstpm(287
lock
aaa
mov
pop
cld
push
jmp
sub
push
mov
add
inc
lods
sub
jle
aaa
mov
add
cli
inc
mov
sub
add
xor
pop
icebp
adc
dec
pop
loopne
jle
mov
mov
xor
sarb
gs
popa
xchg
sbb
adc
fsubs
sbb
sub
jne
dec
mov
mov
pop
testl
add
jnp
stos
outsl
xor
scas
mov
andl
cli
and
mov
scas
sbb
jp
mov
cmp
jno
ret
cmp
fwait
mov
lret
in
lods
mov
icebp
mov
inc
cli
inc
insl
jl
jg
fs
daa
mov
pop
pop
xchg
cs
pushf
stos
jecxz
shl
xor
cmpsl
sub
lret
sbb
loope
adc
mov
adc
jae
push
push
sbb
add
or
enter
jne
sub
sub
push
mov
in
and
aad
iret
test
stos
test
push
and
loop
add
gs
sub
mov
pop
enter
sub
mov
sbb
popf
jno
rcrl
sbb
das
jge
xchg
test
mov
jmp
out
roll
dec
push
inc
daa
out
andl
xlat
dec
mov
pop
jl
push
xchg
and
daa
js
aad
cltd
cs
mov
and
sub
mov
push
fcoms
mov
push
pop
das
stos
sub
add
jle
mov
adc
int
je
out
cwtl
inc
push
cmp
push
jnp
push
es
in
mov
jecxz
pop
cmp
repnz
in
cmp
jmp
shll
jo
cltd
mov
dec
arpl
dec
mov
xchg
dec
out
pop
roll
out
push
pop
jl
mov
inc
mov
mov
jo
and
add
pusha
cmp
add
jne
mov
lods
stos
imull
add
mov
imul
jo
sub
xchg
cmc
addr16
gs
xchg
xchg
xchg
fucomp
adc
fsubs
loope
and
aaa
mov
sub
pop
mov
sub
add
gs
mov
dec
cmpsl
xchg
mov
push
in
mov
xchg
xor
dec
gs
cmpsl
sbb
adc
add
inc
inc
addr16
addr16
xor
scas
adc
enter
out
sbb
sub
outsb
test
push
icebp
push
adc
sub
push
je
loopne
in
xor
testl
mov
add
cli
or
fucomi
leave
mov
xchg
out
dec
data16
aad
or
mov
cli
mov
mov
sub
jl
sbb
hlt
inc
adc
js
inc
icebp
dec
rep
cwtl
sub
adc
je
pop
loop
sbb
addr16
mov
scas
mov
sti
or
movsl
fisubl
sbb
inc
sbb
dec
sub
in
scas
xor
loopne
in
mov
addr16
push
imul
rcr
rolb
fcoml
imul
push
addr16
ret
pop
or
add
sti
pop
jg
mov
cmp
imul
ja
mov
cld
shrl
adc
std
call
jae
and
sbb
sbbb
and
jb
jmp
stc
xchg
enter
xor
add
mov
and
mov
add
push
jmp
push
sbb
mov
push
mov
in
ret
into
lea
dec
jg
mov
sub
push
std
loop
lods
push
ds
testl
dec
and
lcall
dec
mov
pop
xchg
out
in
sbb
ret
fcmovnbe
out
mov
outsb
lea
mov
cmp
adc
popa
pop
jo
mov
daa
sarl
or
or
and
mov
lods
icebp
xchg
push
outsb
dec
jne
stos
fidivrs
sbb
push
xchg
mov
sbb
out
push
inc
les
pop
pop
and
cmp
cmp
push
pop
es
out
dec
pop
repz
push
cli
pop
out
test
pop
mov
cs
fcmovu
shrb
cmpsl
insl
in
gs
adc
xchg
mov
pop
cld
loope
adc
out
rol
cld
cmpsl
in
cmp
push
bound
jl
daa
push
fsubrl
jecxz
lock
ja
or
outsl
jbe
xor
imul
adc
inc
xor
push
lock
pop
cmpsb
push
clc
leave
xchg
sbb
cmp
mov
jp
inc
daa
fwait
les
push
lea
sbb
test
fstpt
pop
mov
shlb
ds
arpl
lds
sub
xchg
insb
rol
xor
xlat
shlb
je
or
loopne
cmp
movsb
mov
jne
in
daa
mov
mov
cmp
xchg
rorl
push
icebp
lock
aas
jmp
adc
mov
sbb
xchg
push
add
pop
pop
sbb
shrb
ficoms
fcmovnbe
dec
mov
xor
fsubl
bound
push
nop
mov
lds
adc
nop
jae
add
outsl
mov
ds
push
mov
dec
inc
fisubrs
pop
mov
and
mov
jnp
mov
daa
cmpsb
mov
sub
jb
fsubl
xchg
stos
sbb
fidivrs
inc
cltd
vpmaxub
inc
jae
or
xor
push
sub
gs
xlat
hlt
mov
sar
les
shl
data16
imul
scas
xor
in
add
test
jg
fcoms
call
call
jmp
jecxz
add
test
bound
leave
xchg
cs
sub
mov
iret
sarl
cmp
push
jl
sahf
inc
push
add
adc
and
dec
mov
push
stos
adc
push
mov
dec
xor
iret
rol
and
inc
sbb
mov
xchg
insb
cmp
cmp
mov
lret
loopne
or
dec
push
leave
push
cmp
xchg
insb
and
mov
xchg
add
push
shl
push
jb
mov
add
cmp
adc
sbb
pushf
sahf
jp
pop
pop
inc
std
mov
push
in
inc
push
sbb
add
lahf
push
mov
not
xor
pop
push
mov
add
push
js
add
push
enter
dec
add
ljmp
xchg
loop
and
fcmovnb
mov
popf
push
adc
mov
jp
sub
icebp
incb
lds
iret
xor
push
pop
insb
insl
pop
cltd
mov
js
pop
xchg
fisubrs
mov
push
scas
shll
aam
in
dec
scas
or
xor
mov
mov
adc
and
push
lahf
mov
jae
out
mov
subl
add
cmp
or
popa
jmp
push
xchg
push
std
mov
jp
add
scas
andb
xchg
lock
pop
rcrb
fstl
push
mov
sub
push
fdivs
or
mov
xchg
mov
outsl
mov
incl
lahf
ja
and
push
ret
mov
push
push
int
lahf
xor
mov
lahf
mov
pushf
std
mov
cmp
sbb
sub
icebp
ret
push
test
test
push
mov
push
dec
fwait
in
mul
pop
xor
mov
ret
pushf
inc
xor
loop
fbstp
mov
icebp
dec
push
out
mov
xor
movb
mov
shll
les
sub
ja
pop
inc
sbb
cli
inc
lods
mov
cmc
mov
call
int3
mov
aam
jg
inc
insl
pop
dec
rcrl
shll
push
push
ret
mov
into
or
leave
push
adc
pop
and
aas
mov
ds
stos
lret
pusha
fiaddl
pop
xchg
inc
inc
loope
aas
stos
mov
jle
inc
test
mov
fmuls
adc
push
cmp
lods
lea
cmp
sbb
mov
sbb
jle
lret
and
xor
jmp
imul
daa
mov
mov
addl
jecxz
test
xchg
repnz
adc
or
jge
pop
or
cmp
cmp
pop
test
cwtl
sahf
clc
push
insl
fdivrl
xchg
sub
frstor
fcmovnb
imul
lock
adc
imul
ret
inc
fcoml
jno
jle
jle
jbe
testl
cmpsl
incl
movsl
dec
stos
ret
sub
xor
in
jnp
scas
fcompl
shrl
jbe
leave
imul
arpl
pop
jle
bound
add
push
incl
stos
arpl
test
andl
loope
ret
fsub
pop
push
push
les
int
mov
cmpsl
xor
js
dec
int
pop
popf
pop
sbb
mov
mov
and
cwtl
sub
inc
add
inc
faddp
pop
pop
mov
in
pop
inc
imul
cmp
sub
sti
fisttpl
push
sti
pusha
xchg
mov
add
movd
adc
mov
shrb
push
push
mov
test
cld
xchg
lock
cmp
inc
xor
jns
push
pop
int
push
xchg
daa
fimuls
test
aad
mov
sbb
aam
cs
popa
mov
or
xchg
loope
jne
popa
xorl
jle
mov
pusha
sahf
outsl
insl
stos
mov
in
mov
add
rclb
cmpsl
push
adc
aad
jo
pop
xor
mov
push
ja
adc
ja
pop
mov
fcomp
adc
js
adcb
sub
xchg
mov
ret
jne
mov
fldt
lock
mov
sar
js
or
pusha
flds
xchg
lds
notb
aad
mov
push
rorl
aas
jle
pop
add
mov
ljmp
xchg
loope
in
outsl
fcomp
loopne
shlb
ja
aam
adc
xchg
in
add
jns
adc
mov
inc
jge
adcb
dec
sbb
outsl
std
into
mov
ds
adc
xchg
cmp
js
push
aas
push
inc
das
xchg
rcrl
pop
inc
rolb
or
sahf
adc
inc
loope
and
sub
scas
xor
sub
andl
mov
lds
jb
fs
scas
movsb
sbbb
pop
pusha
adc
aaa
xchg
xor
icebp
and
sahf
subw
fmul
arpl
push
movsl
les
xor
inc
pop
out
faddp
push
jae
popa
or
test
ret
filds
dec
and
iret
push
jnp
daa
jno
dec
mov
push
lods
sub
stos
sti
subb
aam
int3
and
and
imul
fildll
lahf
das
sub
inc
mov
sub
out
pop
fiaddl
xlat
movsb
bound
test
mov
mov
dec
pop
add
mov
mov
jbe
pop
mov
xchg
dec
insl
dec
mov
dec
loop
shll
dec
aas
fmuls
jae
cwtl
lock
xlat
jo
aas
loop
cmc
adc
enter
sti
or
push
outsl
ds
mov
or
push
jnp
add
pusha
mov
aas
arpl
mov
jge
out
add
test
andb
inc
push
je
imul
outsl
out
sbb
or
adc
jne
inc
push
and
lods
jecxz
outsb
inc
mov
daa
stos
dec
jns
sub
lea
jns
call
leave
inc
fldenv
cmp
mov
sti
xchg
sti
insl
test
jmp
pop
push
dec
popl
mov
mov
push
push
push
mov
ja
fwait
mov
das
scas
xor
adc
push
call
lcall
jl
out
mov
scas
mulb
shrl
xlat
lahf
cmpsl
iret
lret
cmp
or
lahf
xor
outsl
testl
cli
xchg
mov
adc
add
lds
or
or
push
xor
faddl
cmp
jae
and
add
daa
aas
mov
popa
fisubs
mov
mov
pop
stos
in
jle
xchg
xchg
sbb
fwait
cmp
and
outsb
fcomps
inc
jg
cmpsb
scas
add
arpl
xchg
add
daa
clc
xor
cmp
add
sahf
out
stc
testb
pop
mov
pop
dec
test
movsb
ss
dec
push
and
data16
setns
mov
sar
jbe
cli
pop
inc
in
dec
addb
es
xchg
adc
sub
xor
cmp
out
arpl
aam
fldt
cmc
imul
pop
sbb
inc
shll
jne
outsl
aad
fdivrs
xchg
addl
mov
jb
aaa
pusha
jnp
mov
cmp
ret
ret
jbe
pop
pop
es
movsl
mov
stos
dec
cli
push
aas
sbb
jl
cmp
add
fsubs
in
push
mov
xor
ficoms
vcvtpd2psy
pop
jle
ffree
add
cmp
pop
pop
popa
movsb
cmpsl
lods
pop
in
pop
pop
xchg
adc
sti
aad
fdivs
pop
push
mov
jbe
test
hlt
add
sbb
push
ret
lods
push
inc
lea
push
pop
pop
nop
stos
jecxz
push
xor
fdivs
ret
insb
sbb
push
clc
cmpb
sbb
mov
fidivrl
loopne
cmp
es
insb
lahf
mov
xbegin
outsb
mov
imul
push
mov
lods
ret
loop
mov
std
cmpsb
cs
push
or
out
or
dec
push
outsb
pop
cmp
stc
push
sub
adc
test
jge
pop
cmp
xchg
add
out
inc
pop
mov
sub
hlt
iret
cmp
sbb
push
ret
rcr
dec
je
test
dec
jno
sbb
mov
sti
mov
push
sarl
lcall
jnp
jne
int
xchg
sub
mov
insl
and
sub
and
add
or
push
push
in
mov
scas
mov
adc
testl
and
orl
mov
adc
xchg
stos
push
sub
or
jl
and
add
sbb
or
mov
mov
jns
xchg
cltd
mov
cmp
xor
gs
int3
and
aam
fwait
cmp
sbb
dec
repnz
jnp
clc
xor
stos
pop
js
adc
jo
push
adc
loop
xchg
mov
idivb
dec
inc
rcr
sahf
push
sbb
mov
push
xor
repnz
xorb
and
nop
out
sahf
jecxz
push
ret
pop
and
mov
sti
pop
stos
mov
shlb
jge
into
test
push
jne
test
mov
and
adc
stos
lret
pusha
cwtl
out
xchg
mov
mov
xor
inc
mov
lods
and
fsubrp
dec
inc
repz
xor
fisttpll
sahf
sub
sub
ja
mov
sbb
jb
adc
sbb
jbe
push
addr16
mov
cmpsb
test
mov
xchg
idivb
movsl
or
pushf
movsl
xchg
fs
mov
dec
icebp
test
cmp
mov
or
or
sahf
or
ds
push
xor
call
loopne
xor
mov
jle
addr16
mov
lcall
imul
jnp
jo
xor
or
xor
sub
addr16
dec
dec
stos
cmp
shll
outsb
pusha
pop
movsl
scas
cmpsb
das
pop
mov
xchg
sub
gs
pop
lcall
in
push
sub
andl
stos
dec
push
ljmp
adc
add
pop
or
and
cmp
clc
shlb
int
in
add
mov
inc
test
loopne
jge
sub
adc
test
jg
pop
rcrb
imul
cli
rcl
icebp
stos
pop
push
loopne
clc
cmc
mov
fisubrl
xor
push
fwait
aas
cmp
lods
sub
or
mov
inc
jbe
incb
jbe
imul
sbbb
mov
adc
cmp
lret
mov
adcl
cmp
jecxz
mov
or
iret
and
xor
adc
push
mov
mov
dec
cmpsl
sbb
test
jno
lods
or
add
sub
into
ss
in
dec
ds
push
adc
mov
jmp
loope
jne
push
push
and
js
jbe
lret
out
addl
rorb
jg
mov
in
cmp
cmovne
mov
lea
pop
fnstcw
xchg
rorb
jo
adc
jb
pop
xor
inc
push
jl
insb
inc
clc
mov
repnz
mov
sub
hlt
hlt
andb
jb
cmpsl
cli
lock
mov
add
jb
pop
aam
or
xor
mov
test
shll
push
add
pop
lret
push
loope
mov
jae
test
cltd
inc
mov
out
adc
mov
imul
push
rolb
cmp
inc
pop
adc
inc
push
popf
cmp
mov
mov
in
dec
fsubrl
sub
mov
lret
xchg
or
insb
fdivl
ds
in
jo
cli
adc
lret
xor
out
loope
cmc
test
lea
adc
stos
fisubrs
cmp
jb
cmpsb
add
pushf
aam
cmp
lods
repnz
mov
jae
inc
test
sbb
pop
inc
lcall
xchg
fiaddl
ror
adc
jae
rclb
pop
inc
add
mov
jns
inc
and
lock
jo
js
adc
enter
sahf
mov
adc
jg
and
dec
push
pushf
sub
sbbl
cmpsl
pop
js
sub
adc
js
mulb
inc
std
xchg
push
inc
shll
jb
cmp
stos
push
aad
sbb
sahf
sbb
jge
jg
into
ja
fstl
dec
adc
push
push
and
mov
fucomi
fnstsw
dec
jnp
mov
or
mov
das
push
mov
mov
adc
push
ja
das
xlat
js
das
jno
jg
imul
sub
jne
push
pop
or
jecxz
jg
out
xchg
push
out
dec
sti
sahf
jnp
add
mov
mov
jnp
imull
or
push
mov
iret
add
and
sbb
or
in
mov
leave
lret
lods
inc
flds
pop
daa
imul
inc
into
jo
pop
or
lahf
mov
out
shrb
pop
mov
aaa
jge
push
pop
les
int3
lret
mov
mov
pop
mov
fadds
sub
out
rol
mov
jp
sbb
es
mov
adc
mov
xorb
jbe
push
gs
sub
push
jge,pt
call
popf
add
push
jle,pn
ret
add
data16
pop
std
lds
push
dec
cld
fisubrl
dec
or
inc
mov
ret
xchg
imul
sti
add
rcrb
shll
pop
cwtl
addb
dec
movsb
sub
pop
fidivl
ret
in
aas
ss
jns
push
out
test
test
mov
inc
mov
dec
adc
lcall
pop
push
mov
and
nop
push
pusha
vpackssdw
sub
adc
scas
jo
pop
fwait
sti
sbb
incb
fadds
push
scas
addl
jo
negl
repnz
rcl
popf
dec
mov
shll
mov
mov
loopne
xlat
notl
jb
dec
inc
setg
xlat
add
mov
lahf
jl
inc
cmp
mov
daa
inc
fidivl
loopne
adc
pop
aam
jb
jl
insb
xchg
mov
xorl
andb
xchg
mov
dec
test
add
imul
outsl
mov
aas
das
addr16
or
cmpsb
or
or
lcall
cltd
cmp
stos
add
call
je
jne
dec
rorb
ja
xor
and
cld
sbb
jmp
dec
and
xchg
xor
insb
jle
loopne
mov
sub
jnp
push
jo
int
fiaddl
mov
sub
imul
push
sbb
adc
lds
pop
jne
inc
jo
rorb
ffreep
mov
lods
push
out
add
mov
pop
fistpl
idivb
or
inc
mov
negb
push
push
cmp
sbb
pusha
popa
mov
cli
mov
das
addr16
jbe
ds
sub
jne
adc
pop
or
mov
push
je
inc
xor
pop
push
sbb
jg
sti
and
dec
lock
push
mov
scas
notl
pop
fwait
arpl
jl
outsb
movsb
ja
test
lret
jb
push
cmp
pop
scas
stos
push
inc
cmc
test
pop
xor
inc
scas
adc
add
jg
out
push
adc
xor
shrb
insb
fcompl
push
pop
push
int
add
inc
dec
sbb
jo
mov
lret
aam
pop
xlat
sbb
add
mov
stc
ds
aad
xor
outsb
das
xchg
mov
push
adc
add
xchg
jns
lock
pop
xor
lea
ljmp
xchg
jp
xchg
mov
test
mov
mov
mov
xor
dec
push
xlat
popf
jno
stos
cmc
loopne
test
dec
mov
mov
ja
push
xchg
push
push
sti
jbe
jge
mov
inc
int
dec
or
pop
xor
push
mov
jle
ds
cltd
pop
push
and
adc
jo
loopne
push
jnp
or
fisubs
jg
in
and
jge
cmp
jl
jle
push
je
les
in
sbb
cmp
push
js
enter
cmp
rclb
inc
aas
ds
mov
aas
add
mov
stc
popf
in
jae
je
sbbb
dec
inc
jl
lods
push
and
pop
fiadds
xchg
push
xchg
xchg
in
das
mov
lcall
xchg
cmp
mul
and
mov
xorl
call
inc
xor
dec
mov
jne
dec
and
mov
push
push
dec
or
fwait
push
nopl
jbe
inc
adcl
mov
mov
sbb
or
mov
xchg
lea
jge
sbb
aaa
cmp
fsubr
lock
mov
rcrb
or
sti
cmp
mov
aad
push
dec
int
mov
or
imul
sahf
ljmp
sub
fwait
dec
insb
sub
xchg
push
rcr
or
inc
notl
xchg
or
outsl
fisttpll
add
scas
pop
add
cltd
push
mov
fbld
xor
mov
xor
outsb
mull
mov
mov
add
push
jp
lret
jle
cmp
mov
sub
or
or
inc
add
xor
mov
aaa
icebp
jmp
inc
or
icebp
adc
push
pop
xor
fisubl
cmpsb
sub
push
cmp
and
jne
ret
mov
outsl
sbb
aam
or
movsb
mov
pop
jne
mov
push
hlt
shll
and
inc
arpl
sub
aas
fucomp
add
or
pop
icebp
inc
cmp
clc
adc
sub
and
mov
loop
mov
mov
inc
mov
pop
add
cwtl
xchg
scas
adc
lock
or
mov
xchg
fcoml
cmp
mov
mov
or
popa
xchg
inc
inc
cmpsb
push
jg
out
test
mov
sub
fwait
xchg
cvtdq2ps
pusha
rorl
les
and
je
daa
add
test
loope
ret
push
mov
inc
pop
aas
xor
faddp
inc
fbstp
xchg
shrl
cltd
adcb
mov
repnz
aaa
mov
aam
ss
add
hlt
mov
out
loope
neg
mov
pop
cld
loop
dec
xchg
stos
mov
faddp
jle
loope
pusha
ret
sbb
mov
pop
nopl
sub
push
fcoms
push
fimuls
cmp
or
insb
pop
movsl
call
mov
push
sbb
mov
push
xlat
mov
cmpsl
and
testl
ja
cltd
imul
jp
and
jne
jae
or
outsl
out
push
data16
xor
dec
dec
mov
mov
ss
xchg
das
div
sti
and
loop
outsb
aad
loopne
shll
fcoms
sbb
icebp
jne
push
jp
jmp
rcrb
xor
pop
idiv
jecxz
leave
mov
mov
lea
mov
sbb
add
ret
stc
sbb
in
jmp
call
daa
push
mov
imul
lcall
sub
xchg
xchg
les
cld
add
inc
ja
pop
push
outsl
stos
pusha
cmp
xor
mov
jae
adc
jnp
xchg
mov
aaa
add
pop
out
lods
bound
loope
aam
push
out
cli
outsb
sbb
lds
insl
push
and
rcl
add
jo
cmpsb
dec
pop
movsb
outsl
mov
or
sbb
lods
imul
push
pusha
rorl
popf
addb
mov
data16
jl
mov
xor
inc
insb
cmp
loope
or
sub
adc
add
inc
mov
imulb
mov
inc
pop
arpl
lea
aas
icebp
push
ljmp
cmovge
jo
adc
aam
lcall
inc
fwait
add
fnsave
add
mov
jno
cmpsl
mov
cs
pop
fsubs
test
popa
and
jae
pop
loop
mov
loope
push
jns
sub
adc
cltd
jo
out
cmp
jle
jl
imul
mov
sbb
sub
test
subl
lock
outsb
mov
sbb
push
and
pop
mov
xor
ret
sbb
bound
push
pop
mov
test
push
push
xor
pushf
cmpsl
adc
or
add
and
enter
jmp
dec
xchg
xchg
push
add
ja
dec
inc
popf
inc
andl
inc
rorb
mov
or
out
push
in
js
mov
pop
pop
mov
rorb
repz
arpl
cli
xor
nop
dec
out
cmpsl
ficoms
push
xor
les
mov
les
imul
jg
mov
xchg
clc
xor
mov
mov
addr16
inc
outsb
pop
pop
push
cmpsb
and
addr16
aas
sbb
in
mov
mov
dec
dec
in
or
mov
ds
jg
cmp
fadd
addr16
adc
pop
fcoml
sub
push
hlt
mov
loopne
scas
pop
js
jbe
xchg
dec
dec
sub
dec
and
jp
add
add
clc
in
adc
out
test
repnz
mov
mov
fildl
scas
mov
or
mov
ret
popf
in
mov
icebp
loopne
subl
pusha
lods
pop
stc
mov
enter
sub
mov
wbinvd
jns
xor
ficomps
push
hlt
testb
pop
push
mov
cmp
sbb
dec
icebp
stc
pop
pop
mov
xchg
add
ret
mov
pop
movsb
pop
and
test
jmp
sbb
sbb
mov
shr
popa
and
stos
mov
adc
push
test
adc
adc
imul
call
sti
xlat
mov
cmc
lret
or
dec
outsl
sti
jl
ret
cmp
xchg
out
pop
incl
lahf
xor
xchg
testb
stos
cmp
add
idivb
adc
movsb
testb
inc
add
subl
dec
mov
pop
xlat
hlt
lret
xorl
jbe
pop
push
ds
mov
push
sahf
jo
ret
aas
jg
cmc
add
add
dec
sahf
outsb
daa
add
pop
rclb
jg
inc
aas
cwtl
out
sti
scas
hlt
popa
adcl
cmp
imul
loop
les
negb
sub
fstps
mov
daa
adc
add
cmp
add
inc
cvtdq2ps
cld
hlt
mov
rcrb
dec
cmp
inc
push
scas
mov
loop
testl
sub
mov
out
cmc
popf
xlat
adc
cmp
rorb
repnz
sbb
jbe
jl
test
adc
jmp
rcl
add
out
out
pop
iret
ret
or
lcall
mov
push
xlat
jno
inc
hlt
mov
addr16
dec
or
and
es
test
lahf
std
mov
mov
dec
loopne
or
add
sbb
adc
jae
lahf
xchg
mov
je
cmp
pop
xchg
scas
inc
push
paddb
outsl
mov
lret
ret
aam
ret
shlb
sti
sbb
push
push
sub
jge
mov
lock
cmp
out
jae
adc
loop
out
fistpl
push
nop
inc
aaa
dec
out
int
mov
popf
xchg
dec
ljmp
stos
mov
mov
test
fisttpl
mov
imul
mov
verw
div
sub
scas
push
and
and
mov
sarl
mov
mov
xor
aam
cmpsb
or
sbb
mov
xor
ret
and
ss
popa
pop
xchg
dec
pop
dec
addb
loopne
mov
xchg
pop
testb
insb
mov
sub
mov
lods
pop
int3
xchg
and
pusha
jmp
in
adc
push
popf
js
fildl
aad
jno
test
idivb
insb
sahf
mov
lcall
sub
sahf
jp
jmp
inc
xor
mov
lods
dec
lds
cmp
xchg
mov
mov
ret
mov
sahf
mov
adc
pop
sti
pop
lock
cmp
rorl
stc
adc
inc
test
pop
mov
dec
jns
in
clc
test
imul
aam
sbb
xor
lock
popa
pop
cs
lds
push
shll
call
dec
pop
andb
push
cmp
xor
shlb
mov
sbb
or
mov
mov
pushf
jp
fnstsw
inc
xor
jmp
imul
mov
jns
jl
push
xlat
adc
std
lret
xor
and
aas
jl
gs
mov
mov
mov
jle
push
xor
and
ret
fwait
push
xchg
imul
fmul
xchg
jb
adc
push
lock
popf
arpl
jmp
sub
jne
sbb
dec
and
lods
and
not
mov
adc
sub
repnz
rcr
add
sbb
inc
push
sti
enter
shl
inc
mov
notl
ret
adc
sarl
inc
clc
sub
or
pushf
adc
mov
jb
xor
mov
cmp
pushf
jmp
fwait
jp
sub
xchg
lahf
adc
sbb
out
adc
repnz
or
dec
fwait
mov
jg
loope
test
xchg
or
sbbl
xor
outsb
push
in
es
mov
imul
inc
insb
cmp
mov
pop
pop
fldt
ficompl
cmp
sub
lods
sub
pop
jnp
sub
xchg
lods
push
mov
jno
insl
fs
push
jl
xor
fbstp
notl
jbe
jne
std
push
pop
xor
fdivr
adc
test
mov
push
mov
inc
mov
loopne
test
lahf
add
xchg
cmp
stos
dec
fisttpll
jecxz
or
or
add
pop
adc
loopne
pop
sub
insb
cmpsl
lods
scas
loope
bound
imul
pcmpeqw
push
jbe
test
rcr
push
push
stos
cs
mov
sbb
xchg
imul
mov
mov
push
cmp
pusha
xor
stc
lock
sub
loope
mov
testb
mov
inc
out
inc
and
leave
cld
xchg
adc
mov
mov
dec
add
mov
rcl
lods
mov
push
lret
je
sbb
sti
cmpsl
xchg
xchg
ljmp
cli
mov
pop
sbb
mov
inc
cmpsl
mov
add
dec
xor
outsl
xchg
sahf
or
cmp
jbe
inc
xor
iret
xor
daa
xor
mov
and
ja
into
inc
cli
mov
jnp
lea
les
out
rol
int3
dec
mov
jg
cld
or
in
or
xchg
fidivs
pop
aad
aad
sarb
adc
mov
xor
lret
andl
mov
or
outsb
out
push
mov
push
jp
je
out
leave
cmp
lods
scas
movb
cmp
adc
xor
push
inc
push
jb
cmp
bound
int
jne
repnz
mov
fisttps
push
adc
push
sahf
jge
popf
jecxz
ja
repnz
pop
fldl
mov
cmp
mov
sbb
adc
je
rcl
pcmpeqd
je
pop
pop
lret
mov
jge
imul
dec
aam
loope
aam
mov
js
add
cmc
lds
lods
stos
or
jne
jae
and
imul
or
xchg
cmp
add
mov
pushf
pop
and
idivb
daa
ds
xor
shll
mov
shl
mov
jmp
mov
and
dec
ret
in
outsb
and
int3
mov
sub
sarb
push
or
scas
js
add
std
adc
cli
push
dec
mov
xor
call
mov
cmp
mov
mov
inc
pop
aam
bound
fisubs
fstl
pop
ret
lock
test
push
and
cmp
xchg
adc
stos
loope
xchg
and
pop
negl
sub
mov
cmp
imul
xor
mov
fcmovnu
cmp
adc
sbb
outsl
insb
outsb
ret
cmpsl
push
xchg
mov
pop
sete
xchg
add
add
mov
repnz
fs
fnsave
loopne
xor
mov
mov
pop
pop
jbe
push
aad
sub
outsb
lds
aas
inc
sub
loope
hlt
push
pop
aas
push
bndstx
das
scas
pop
hlt
ljmp
fcoms
sti
cmp
fiadds
sbb
aaa
imul
xlat
dec
repz
lret
or
mov
xor
add
xor
ja
add
rcr
push
mov
cmp
test
fs
in
and
mov
sti
addr16
add
add
out
pop
loopne
aad
imul
out
mov
mulb
jp
xor
das
cmp
add
jnp
rorb
xchg
sub
rol
and
xor
mov
imul
pop
das
pop
sbb
into
sub
xlat
das
cltd
call
or
dec
mov
jmp
outsl
mov
loope
adc
xchg
jo
inc
insl
push
ja
mov
ret
xchg
and
push
repz
fstpt
mov
outsl
mov
cmp
into
push
pop
sbb
pop
shlb
adc
js
dec
xlat
mov
cmc
aam
das
repz
roll
insb
lock
cltd
ss
xchg
jnp
adc
jns
push
jne
fwait
sub
inc
ds
push
mov
arpl
mov
pop
cs
and
inc
cs
push
stc
pushf
jb
mov
fcoms
pop
fwait
test
repz
add
dec
pop
or
xlat
sbb
mov
push
pop
or
clc
inc
mov
push
adcb
leave
or
mov
jp
add
outsb
mov
scas
outsb
lcall
cwtl
and
sti
outsl
pop
shll
adc
add
icebp
scas
xchg
in
daa
mov
rcrb
jbe
leave
shll
cmc
inc
mov
sbb
pop
mov
divb
testl
cmp
mov
xchg
mov
loopne
in
mov
jae
adc
addr16
hlt
in
dec
dec
mov
iret
mov
insl
pop
and
outsb
sti
movsl
stc
jl
pop
and
push
adc
lock
in
into
es
andl
sub
pop
jno
dec
xor
jne
push
lahf
ss
daa
pop
and
pop
mov
loopne
pop
std
test
pop
xchg
xchg
neg
dec
add
lahf
fwait
push
mov
mov
pop
or
leave
int3
ss
sub
lahf
ds
shlb
inc
out
std
scas
adc
sub
pop
mov
dec
cmp
mov
jp
dec
jl
icebp
inc
in
mov
notl
sbb
sub
imul
les
testb
sarl
stos
sarb
or
lret
or
inc
sub
insl
stc
std
jb
sbb
ret
push
fisubs
pushf
imul
stos
cmp
push
movsl
scas
sti
fwait
cmc
mov
inc
mov
adc
or
lcall
icebp
mov
jbe
repnz
push
inc
out
outsl
mov
or
aas
mov
popa
test
jg
and
fisubl
out
mov
xor
stc
les
mov
pop
iret
cmp
aas
mov
stos
out
sti
jns
int
rolb
push
sbb
pop
and
mov
out
insl
ds
stos
cmpsb
mov
xlat
jno
inc
out
inc
mov
inc
mov
insl
popa
or
faddl
mov
out
imull
or
cltd
sub
movsb
push
xchg
insb
mov
pop
shll
std
hlt
les
xor
aas
lahf
jmp
or
inc
jnp
or
fidivrs
push
add
test
in
arpl
cli
cmp
mov
mov
push
popa
lods
fisttpl
outsl
lret
and
lcall
popf
add
and
or
aas
mov
jno
pop
insb
mov
add
pop
cltd
push
dec
add
imul
pop
popf
sub
adc
jno
ds
cmp
sar
jecxz
lea
arpl
dec
and
orl
aam
adc
lods
xor
mov
icebp
negl
push
ljmp
inc
jecxz
rorb
cmc
pop
adc
cmc
insl
pop
lds
rorl
or
adc
sbb
arpl
rep
cli
cmp
and
stos
jge
scas
and
sub
xor
and
in
leave
xorb
adc
cs
ljmp
pop
push
adc
popa
in
mov
dec
push
loope,pt
inc
and
ret
pop
xchg
imul
sbb
and
rorb
stc
shll
sbb
pop
test
loope
mov
xchg
cmp
in
loopne
subl
sub
adcb
mov
aad
adc
add
ljmp
mov
inc
fucomp
or
adc
or
push
xlat
mov
inc
xchg
daa
xor
dec
push
sbb
fimuls
leave
insl
fistl
cmp
cltd
cmc
add
fstps
data16
sub
and
mov
jae
lret
or
dec
in
cmp
iret
rcrb
push
ss
pusha
fs
push
cmp
xchg
add
daa
mov
pop
enter
test
xchg
sbb
inc
xor
dec
outsb
jge
mov
add
add
jns
sbb
push
movnti
pop
push
xor
xlat
sahf
mov
vandps
out
imulb
ss
mov
pop
sbb
mov
jo
push
cmp
cld
mov
es
enter
imul
jmp
mov
or
hlt
out
xchg
testb
cmc
fdivrs
sub
addb
imul
icebp
lock
xchg
mov
mov
inc
xchg
outsl
add
mov
in
mov
or
sub
xchg
femms
js
pop
jle
es
bound
add
pop
sti
inc
inc
popf
in
hlt
fcoms
adc
xchg
test
dec
cs
lea
xchg
fsts
add
test
idiv
aad
lock
mov
dec
stos
add
pop
std
and
popl
popa
ret
scas
cmpsb
rclb
ret
mov
sbb
xchg
mov
insl
mov
test
jp
push
scas
xor
xchg
scas
aad
scas
or
es
imul
push
aam
sbb
cmp
xchg
insl
inc
push
fisubl
aam
mov
and
es
rcll
mov
fdivrs
sbb
repz
nop
ret
fwait
sub
shrd
call
nop
lods
mov
outsl
push
sub
dec
insl
sbbl
cmp
ret
jmp
sbb
add
push
pop
or
adc
mov
imul
or
mov
dec
lods
das
xchg
push
or
ret
and
mov
in
dec
ds
add
cltd
scas
jecxz
loopne
inc
notl
in
pop
icebp
sub
mov
aad
inc
or
cmp
outsb
ficoml
es
cmp
sbb
loope
movsl
xlat
jmp
xchg
int
xchg
jo
mov
mov
movsb
lret
insb
call
push
cmp
ja
cld
mov
in
lock
sbb
xor
xchg
pop
mov
sahf
lds
mov
mov
pop
xchg
fimull
cmp
jae
dec
add
inc
out
pop
mov
or
into
cmp
shll
xor
add
xchg
orl
hlt
fsubs
push
dec
gs
inc
ss
pop
mov
jl
xor
mov
rcr
xor
in
int
xor
xor
mov
cli
sarl
cmp
and
inc
adc
mov
cmp
insl
mov
add
imul
and
mov
mov
mov
xor
or
sub
push
aad
mov
loop
mov
jecxz
cmc
out
arpl
enter
xlat
cld
out
inc
roll
out
and
jb
cltd
aas
push
and
inc
cmpsb
scas
and
add
pop
fdivs
jns
rolb
cmp
sub
mov
loop
sbb
test
popa
jnp
pop
pop
push
arpl
sub
pop
mov
popf
stos
mov
aad
fstpl
sbb
lea
add
scas
sarb
popf
cmp
lret
pop
imul
mov
xor
cmp
inc
and
inc
fsubs
mov
and
xchg
push
in
call
push
add
inc
inc
lods
fsubrs
adc
and
cli
xor
ljmp
or
or
push
shll
rcl
pop
enter
jno
mov
imul
dec
mov
push
loopne
les
jp
and
loopne
jbe
xchg
inc
and
je
mov
lcall
jp
mov
mov
inc
pop
imul
mov
push
push
mov
jle
push
insb
out
cltd
imul
dec
xchg
push
dec
dec
xchg
outsb
lods
popa
cli
jecxz
mov
cld
insb
lahf
out
jecxz
mov
arpl
mov
lea
add
shl
jnp
mov
shr
pop
call
jne
out
add
push
push
pop
inc
ret
or
mov
sub
popa
outsl
mov
jmp
dec
dec
xor
arpl
imul
add
shl
cmpsl
roll
clc
sbb
lahf
pop
mov
pop
rolb
in
cs
das
cli
sbb
xor
mov
insb
ljmp
lahf
cli
dec
pop
sti
mov
cltd
lret
scas
push
inc
sub
or
push
cmp
insb
add
push
push
mov
rsm
loop
sbb
push
aam
add
add
jne
dec
dec
lcall
xchg
pop
mov
outsl
mov
mov
xor
mov
push
xchg
imulb
adc
stos
pop
insl
push
mov
aam
xlat
push
inc
lret
ljmp
sbb
sub
out
and
pop
cmc
cmc
add
fsubr
mov
out
sub
add
pop
cmp
fldenv
add
and
jle
xor
cmp
jbe
orb
mov
iret
aas
test
and
adc
or
out
xor
icebp
test
dec
icebp
jmp
int3
mov
outsb
loopw
add
push
sbb
scas
scas
or
fwait
lea
mov
ljmp
ffree
movl
daa
in
pop
jae
mov
jo
jbe
xor
push
fs
bound
dec
testl
sbb
xchg
cld
mov
xchg
pop
mov
inc
adc
add
push
mov
fildl
pop
sbb
outsb
out
pop
push
out
mov
xor
pop
mov
cmp
jl
pop
mov
xchg
sbb
mov
jmp
sbb
stos
sub
sahf
aam
adc
jge
xor
inc
cltd
ss
mov
mov
pop
mov
add
idiv
mov
push
adc
sti
stc
add
xchg
jecxz
lods
int
mov
imul
and
inc
inc
sub
mov
jecxz
popf
jmp
fisttpl
mov
fisttpll
ret
inc
dec
inc
test
and
aad
into
roll
les
add
stos
xchg
fcmovu
lods
fbstp
mov
data16
out
jae
cmp
xor
push
xchg
xchg
enter
shlb
jl
fstps
fsubrl
loopne
sub
pop
ud1
mov
jle
dec
dec
inc
je
in
pop
lock
ret
leave
cmp
sbb
sbb
sub
orb
sbb
hlt
aad
mov
insb
dec
in
mov
dec
jne
stos
lahf
inc
sub
fstl
mov
mov
fwait
ret
pop
fisttps
or
adc
jge
cmp
mov
inc
xor
lret
jp
mov
cs
outsb
std
push
ja
jecxz
scas
ret
fildll
in
cmpsl
xor
cmp
mov
mov
js
std
ss
daa
ljmp
sti
xchg
popa
add
lret
rorl
subl
jo
mov
leave
rcrb
sti
pop
rcrl
mov
lock
sub
ret
mov
pop
outsb
arpl
stc
and
clc
cmpsl
mov
xchg
pop
jmp
sub
iret
xchg
bound
leave
cmp
pop
loope
cli
add
aad
or
inc
addb
and
mov
imul
dec
push
or
ja
xchg
outsl
test
mov
jne
shll
cmpsl
pop
scas
rol
popa
insl
dec
test
insb
mov
daa
push
cmpsb
xchg
push
test
orb
jns
lcall
jno
sbb
fwait
das
mov
aas
sbb
pop
or
or
pop
cs
cmp
mov
xor
xchg
in
mov
add
pop
insl
insl
js
xor
imul
inc
push
out
inc
add
inc
add
fldcw
xor
jno
je
es
mov
adcb
daa
jbe
cmpl
loope
adc
pushf
sub
or
push
cmp
mov
mov
jnp
xor
movl
scas
clc
sub
jg
mov
out
push
push
inc
mov
dec
mov
mov
add
push
mov
loope
roll
fst
jae
movsl
scas
shl
cmp
enter
call
pop
lcall
and
ret
mov
xchg
mov
push
pop
xlat
push
popf
inc
jo
xchg
mov
mov
xchg
test
mov
and
inc
sbb
jmp
jl
test
cld
pop
ret
mov
or
scas
cmp
mov
xchg
sub
pop
stos
scas
xchg
sub
push
fst
add
inc
add
stc
ret
mov
xor
jno
pop
sbb
push
and
mov
cmpsb
mov
inc
cmpb
loopne
push
xchg
fcoml
popa
leave
js
pop
xchg
aad
mov
jae
mov
add
fnsave
inc
pusha
test
dec
sar
add
mov
push
or
leave
adc
cmp
aad
and
push
xlat
outsb
stc
test
cmpsl
cmc
aam
outsb
sbb
mov
cli
pushf
loope
mov
push
inc
in
mov
out
fldt
dec
sub
pop
pop
dec
out
jbe
ret
and
add
jne
cmc
loopne
in
out
xor
out
lahf
js
in
add
loopne
xlat
call
cld
loopne
push
cmpsb
rcr
adc
je
clc
andl
aam
icebp
filds
ftst
jge
pop
pop
stos
cmpsl
mov
push
rcl
mov
mov
daa
or
not
jns
mov
fdivrs
je
mov
add
add
loope
out
inc
inc
push
mov
jmp
and
or
ret
inc
rcl
jns
ja
popa
fnstenv
push
and
pop
pop
jl
xchg
dec
jmp
int3
mov
das
lds
push
sbb
and
xor
cmpl
sbb
or
rcrl
shlb
cmp
pop
push
mov
add
mov
shrl
or
push
push
lds
jle
ljmp
push
test
and
gs
fnstsw
mov
adc
cmp
xchg
mov
add
ficomps
push
mov
pop
shlb
test
je
neg
or
popf
push
push
mov
cmc
rol
xor
mov
repnz
or
out
jp
icebp
std
push
sbb
xor
or
call
xor
push
std
in
add
sbb
and
push
adc
add
push
inc
in
jle
pop
out
push
in
push
andb
hlt
stos
mov
sbb
add
jne
or
cli
fcomps
inc
mov
fwait
jp
popl
ds
pop
fildll
movsb
xor
jns
jnp
iret
arpl
stos
daa
adcb
sub
xchg
jp
ljmp
pop
icebp
rolb
jb
aam
push
xchg
jl
mov
dec
lock
mov
sub
xchg
jecxz
jecxz
cmc
mov
cld
push
add
outsl
mov
push
repz
xchg
xchg
jp
jmp
fldcw
test
cmp
mov
mov
pop
dec
jno
add
xchg
pusha
in
ret
mov
sbb
pop
cld
shl
int
ljmp
ret
mov
cmpsl
lea
mov
xor
dec
rolb
shrl
xor
lods
mov
adc
rorb
hlt
xchg
insl
es
pop
stos
xor
mov
push
mov
outsl
dec
xor
dec
jg
push
call
xchg
in
insl
sub
ss
cltd
shll
push
cmp
sahf
pop
mov
mov
insl
neg
xor
js
aad
or
sahf
outsb
xchg
mov
scas
mov
add
mov
mov
mov
jno
adc
cmc
fsubs
or
in
adc
movsl
dec
push
xchg
push
inc
ja
aad
insb
cmp
aas
ficomps
pop
sub
xor
xor
nopl
and
mov
mov
into
das
mov
stos
mov
pop
imul
cmp
sbbl
jge
in
in
or
arpl
and
negl
inc
pop
in
rcl
mov
mov
mov
movsb
je
or
add
jne
push
sub
call
or
cs
pop
pusha
scas
and
sbb
or
fimull
inc
int3
xlat
adc
sbb
lock
arpl
daa
sub
and
outsb
jmp
add
fldcw
mov
cmp
cmc
jmp
iret
mov
mov
mov
xchg
sbb
outsb
add
rcpps
push
mov
lods
mov
aas
fwait
adc
fnsave
fstpl
subb
mov
insb
cmc
push
mov
in
push
and
xor
push
sub
orb
inc
push
clc
cmpl
or
lods
test
aas
adc
jp
pop
stos
inc
shlb
movsb
stos
xchg
xchg
sbb
push
arpl
aaa
ds
jns
es
xor
scas
lock
push
push
jmp
or
fsubrl
bound
xlat
mov
add
shrl
or
sbb
out
jns
repnz
cmp
xor
bound
fcmovb
jnp
addb
xchg
sub
fldcw
clc
mov
sbb
xlat
enter
jne
leave
add
imul
sub
jg
fcomp
pop
cmp
cmp
pop
outsl
cmc
and
cmp
jmp
and
cli
sahf
cmp
leave
pop
jae
fcmovne
aam
jnp
cmp
dec
mov
or
and
imul
mov
adc
lock
adc
xorb
mov
pop
jns
mov
inc
ficompl
pop
and
mov
call
out
lret
jp
fiaddl
adc
jmp
cmp
aaa
shll
cmp
sub
inc
cmp
push
pop
les
mov
testb
movsb
xor
loope
or
nop
fimull
xchg
lods
fldt
rcrl
sbb
jo
mov
mov
cmp
push
in
push
jecxz
jnp
cmc
jo
mov
mov
mov
jl
or
lret
sbb
sbb
mov
pop
sub
loope
or
nop
int3
fstps
xchg
pop
adc
mov
or
sbbl
cmc
or
ret
xor
inc
xchg
adc
and
sbb
pop
xchg
int
mov
cmp
addb
jnp
or
aas
loope
cmp
aad
inc
notl
imul
clc
loopne
lea
mov
fs
mov
aad
mov
call
mov
add
fimull
cmp
jnp
xchg
jle
xchg
outsl
shlb
icebp
cs
in
mov
cltd
addr16
xchg
jbe
shll
pop
inc
pop
pop
inc
insb
pop
out
icebp
mov
push
bound
mov
pop
pop
push
xchg
dec
pop
aad
out
lret
lea
xor
icebp
test
pop
subl
fidivrs
testb
dec
aas
and
xlat
sbb
inc
lret
mov
addr16
xor
add
inc
aad
cli
jne
add
sub
mov
sub
adc
mov
mov
xchg
add
fstps
fdivs
aas
cwtl
inc
loopne
xchg
inc
test
fs
jp
movq
pop
daa
pusha
mov
sbb
jge
dec
add
sbb
sbb
ja
mov
or
adc
or
push
inc
xor
or
inc
iret
adc
pop
bound
aaa
push
mov
test
xchg
daa
cmp
outsl
adc
fmull
pop
popf
inc
cmp
sti
jnp
jnp
fstpt
pop
mov
jle
ret
sbb
mov
ret
mov
dec
pop
sub
xor
mov
push
add
push
fst
mov
push
jecxz
pop
adcb
clc
cmp
test
jo
jne
sbb
and
mov
mov
xor
push
rol
or
mov
or
and
mov
bound
mov
sbb
insl
je
or
inc
dec
adc
jne
pop
std
adc
in
jno
enter
pop
scas
dec
xchg
sbb
inc
mov
xor
xchg
xchg
or
cmp
repz
sbb
and
mov
mov
pop
cli
sbb
rorl
sbb
push
jl
xor
out
insb
sbb
cmp
jg
mov
scas
xor
dec
out
inc
pop
fnsave
adc
popa
push
inc
mov
cltd
out
push
imull
add
call
into
outsb
lds
mov
sbb
pop
jge
ds
sbb
neg
js
pop
sub
out
jbe
shll
jp
and
mov
cmpsl
out
ds
lods
fs
js
inc
aad
cmp
xchg
lds
sahf
jp
lret
cmp
cmc
dec
jl
mov
mov
mov
in
les
mov
aam
pushf
sbb
lods
jge
fdivs
xchg
xor
cmp
mov
lea
mov
jae
mov
mov
sbb
cmp
stos
jnp
cmpsb
push
jmp
cmpsb
cli
push
jne
ret
xchg
xor
mov
dec
sbb
out
call
dec
test
and
pop
pop
fnstcw
adc
cmp
cld
movb
mov
or
jge
and
lcall
hlt
add
sbb
mov
push
inc
int
pop
push
cmp
cmp
ret
mov
mov
clc
inc
sbb
pushf
fldt
lret
inc
sti
sbb
loopne
js
lahf
outsb
pop
xor
loop
or
jle
insb
pop
and
add
xlat
fisttpl
dec
adc
iret
cmp
jbe
cmc
inc
imul
pop
adc
xchg
rorb
dec
jl
push
and
rcll
pop
test
call
loope
jne
aaa
hlt
xchg
mov
leave
push
cwtl
add
cltd
or
sub
pop
fcmovbe
into
sbb
mov
pushf
adc
clc
fldl
rcl
subb
lret
cmp
arpl
cmp
popf
js
ja
add
lret
cli
jns
stos
loopne
mov
push
pop
and
ja
test
add
xchg
aas
pop
jb
fcomps
fimuls
inc
and
insb
add
jp
xor
mov
add
inc
inc
icebp
mov
outsb
adc
mov
mov
pop
mov
fwait
lret
sbb
xlat
mov
adc
and
test
pop
setbe
sbb
or
cmp
int
leave
call
mov
jno
mov
pop
dec
popf
mov
mov
xorb
xchg
inc
jge
rcr
fcoml
mov
shll
add
xlat
push
sbb
out
outsb
outsb
inc
dec
push
sti
andb
sub
subb
mov
push
mov
ljmp
loope
jle
outsl
nop
add
push
adc
xor
cmpsl
out
push
fisttps
fsubl
xor
add
pop
subb
les
gs
mov
mov
sub
dec
mov
hlt
mov
xchg
fidivrs
jbe
insb
sbb
add
push
outsl
dec
out
mov
push
cmp
test
insl
cmp
arpl
mov
les
jb
icebp
fnsave
jmp
mov
cmp
fsubrl
jecxz
cmp
repz
call
inc
sbb
dec
cmpsb
scas
jmp
xchg
jbe
xchg
fidivrs
je
lds
mov
jmp
mov
inc
xor
push
mov
loope
mov
bound
mov
mov
sub
ds
push
mov
gs
add
fnstsw
mov
mov
jecxz
push
xchg
add
mov
in
xchg
nop
sbb
out
xchg
sub
add
nop
xchg
cmp
inc
mov
push
jp
fcom
pop
js
sbb
test
adcl
xor
jbe
rcrl
cmp
mov
and
jbe
jl
fdivs
es
lds
bound
pop
pop
and
xchg
and
imul
xchg
push
inc
pop
sbb
push
pop
dec
rolb
xlat
ret
push
into
fildll
xor
cld
repnz
call
inc
push
ja
fimull
test
cmp
fisttpl
dec
movsb
jnp
gs
push
rcll
push
mov
lods
or
inc
xor
jnp
mov
jnp
cmp
pop
jp
sbbl
pop
sub
arpl
rclb
pusha
jo
sub
es
mov
mov
rsm
lcall
mov
xchg
sahf
or
or
pop
enter
scas
loope
xchg
addr16
dec
or
and
fdiv
stos
mov
dec
or
fidivrs
pop
jg
es
rclb
aam
adc
or
je
fdivrl
sub
les
adc
subl
push
cmp
pushl
push
loopne
add
sub
jae
and
out
scas
mov
sbb
inc
and
int
fists
fdivs
in
popf
das
scas
fcmovb
pop
ret
sub
jns
les
std
push
pop
mov
aas
in
out
or
push
aas
mov
fs
call
mov
ja
jae
xor
mov
push
adc
gs
jle
push
sbb
xchg
cli
lock
dec
push
add
data16
push
cmp
cli
mov
xor
dec
dec
cmp
aad
je
clc
andb
stc
xor
mov
rorl
pop
scas
popa
inc
in
inc
xor
cmp
ss
jmp
fiaddl
insb
fildl
cmp
loope
adc
cmp
push
mov
push
test
fnstenv
cmp
jns
mov
jecxz
fidivl
lret
jmp
sarb
loope
xchg
mov
fldt
cmp
xchg
ja
mov
adcb
sbb
sbb
cli
xorb
fcompl
mov
add
lcall
pop
jne
sahf
and
inc
mov
imul
nop
ds
scas
mov
insl
and
out
dec
lret
xchg
cli
hlt
jge
int
jp
leave
xchg
jae
outsb
jecxz
je
mov
push
adc
and
sbb
sub
pop
addr16
mov
out
fisubrl
test
cmp
add
lds
and
aam
push
insl
jo
fstpt
ss
xchg
sbb
mov
pop
mov
dec
pop
scas
pop
stos
push
or
jne
sbb
jns
loopne
pop
cld
lock
mov
pop
in
out
imul
aas
rolb
mov
cmp
sti
ljmp
adc
mov
or
xchg
ficompl
jge
in
out
inc
lahf
mov
lahf
sub
jge
sbb
or
mov
leave
sbb
outsl
roll
arpl
mov
pusha
dec
mov
jl
int
sub
sbb
jae
imul
mov
int
daa
push
adc
inc
xor
mov
cltd
ja
jne
mov
sbb
mov
push
dec
movsb
inc
daa
sbb
xchg
lock
cmpsb
xchg
aam
xor
or
movb
popa
shrl
jge
mov
subl
adc
ret
push
sar
fistpl
dec
adc
push
popf
lods
sbb
mov
xchg
add
imul
bnd
adc
mov
xor
mov
cmpsb
fisttpll
push
adc
sbb
test
xchg
mov
sub
mov
push
push
and
inc
mov
sub
adc
push
sbb
ljmp
test
int3
ds
mov
fdiv
jp
cmpsb
push
out
xchg
lock
jbe
push
arpl
je
stos
mov
inc
mov
push
inc
rorl
jg
nop
or
or
sbb
mov
scas
sbb
aad
push
fistpll
bound
or
jecxz
das
cli
push
arpl
repz
push
test
dec
inc
les
movsb
imul
mov
fcmovbe
pop
push
sbb
filds
sbb
lfs
cld
scas
mov
insb
rcr
and
add
repz
and
mov
rorb
dec
sahf
aas
testl
mov
test
sub
imul
mov
jne
jbe
inc
inc
test
or
test
cmp
int
clc
push
pop
cwtl
sub
mov
jne,pn
fisubs
pusha
fwait
mov
in
std
test
cmp
idivb
mov
adc
mov
hlt
or
rolb
nop
popa
divl
xlat
or
jbe
xchg
into
inc
xchg
cmpsb
jecxz
mov
fdivs
fs
push
sub
jge
inc
jb
dec
fwait
loope
fstpl
cli
mov
outsl
adc
cmpsl
ret
mov
push
sub
andl
lea
dec
pop
or
lods
add
sub
xchg
outsl
cld
sub
and
or
scas
mov
add
and
out
hlt
fdiv
aad
pop
inc
dec
ret
lds
add
ret
pop
and
push
out
adc
pusha
in
rcll
std
xchg
loope
call
jp
adc
lods
or
jecxz
pop
mov
push
enter
mov
xor
test
mov
aas
sahf
xchg
add
es
adc
ret
push
push
dec
add
imul
clc
insl
xchg
mov
pop
jle
imul
sub
iret
pop
in
inc
add
push
pop
xor
in
sub
sbbl
xchg
out
cmc
cmc
shl
stos
cmpsl
addr16
mov
add
loope
pop
inc
add
ret
xchg
push
sub
in
xor
xor
xchg
push
out
mov
in
mov
and
or
jnp
outsl
aad
jno
hlt
inc
xor
add
addr16
jl
xchg
das
test
xchg
ja
js
popf
dec
add
mov
inc
xor
push
outsl
dec
stos
hlt
ljmp
mov
leave
leave
xlat
cld
dec
ret
mov
hlt
addb
xchg
lods
ret
jp
filds
jo
sub
in
sbb
movsl
idivb
or
push
mov
sub
sbb
out
xor
jnp
and
aad
inc
aad
lahf
sub
ja
xor
xchg
mov
xor
ljmp
xlat
sbb
and
jle
add
aas
push
push
fidivs
push
movsl
movsb
sub
imul
adc
jl
je
ror
std
sarl
jge
popa
push
and
jbe
cli
push
push
xor
mov
les
mov
in
fcoms
aaa
stos
cmpsl
data16
rol
mov
add
adc
out
test
outsl
jne
push
mov
or
jbe
insb
fcoml
stos
push
ret
push
out
lods
pop
pushf
movsb
into
hlt
in
add
mov
jo
jecxz
hlt
rorb
xor
dec
test
sub
dec
pop
xor
popa
test
xor
mov
jo
xor
sub
or
nop
xchg
pop
call
repnz
cld
pop
xor
mov
insl
js
add
adc
test
hlt
and
fisubl
xchg
call
test
mov
xor
pop
mov
sarb
fisttpll
cmp
push
push
mov
xor
and
repnz
pop
pop
jo
fwait
jl
jo
in
inc
jg
js
mov
mov
pushf
clc
clc
dec
mov
fwait
adc
inc
jge
push
loope
mov
pop
imul
lds
adc
xlat
fmul
jb
push
sub
pop
out
mov
xchg
mov
rclb
in
mov
push
aas
cmp
in
test
dec
les
popf
jo
cmpsb
pop
inc
jns
rcl
mov
xchg
pop
fldenv
jecxz
fdiv
xchg
pop
cmp
mov
sub
mov
mov
pop
lods
push
ficompl
hlt
mov
pop
push
add
pop
or
aas
mov
ja
mov
out
xchg
stos
iret
adc
adc
xchg
outsl
fbld
adc
insl
push
arpl
xchg
push
ret
add
shlb
ds
mov
addr16
or
cld
and
rcl
ficoml
mov
jecxz
insb
dec
jg
ret
mov
pop
push
add
ret
in
xchg
push
lahf
xor
sbb
mov
xor
jle
ret
inc
adc
gs
ret
pop
outsl
ret
mov
test
lock
popa
cmp
xlat
lea
jbe
jae
adc
inc
or
lcall
push
mov
inc
sub
jae
test
js
addl
mov
lock
call
jne
gs
ret
test
and
inc
jo
shl
mov
hlt
loop
subb
ficoms
cmp
adc
psllw
call
popf
jnp
lods
stc
out
sbb
and
sub
adc
orb
sub
aam
ret
adc
les
xor
push
out
sub
dec
and
mov
insl
imul
out
cmp
ss
insb
shlb
cmp
xor
lock
pop
push
enter
and
mov
stos
out
mov
mov
punpckhwd
dec
mov
fcmovnu
cmp
or
rclb
rol
ffree
cli
xchg
jo
mov
cmp
add
lret
jmp
fstpl
int3
shlb
clc
sub
xchg
mov
ljmp
repz
outsb
cld
sub
sti
adc
pop
test
addb
push
ljmp
jne
sti
xor
outsb
clc
mov
shr
fsub
repnz
cli
sub
push
mov
movsl
push
call
mov
xchg
push
lret
mov
or
mov
cli
arpl
mov
push
pop
mov
add
pushf
jb
fisubl
fiadds
andb
in
inc
shrl
mov
mov
mov
fwait
or
in
repnz
xchg
mov
aad
idivl
into
sar
ret
and
mov
xor
sub
insl
nop
jmp
idivl
ret
repz
mov
xlat
dec
push
inc
push
pusha
imul
sbb
repz
mov
cmpsb
cmp
adc
dec
jge
loope
push
dec
aas
aas
xor
mov
outsb
daa
jmp
add
dec
insb
inc
call
jae
and
test
aad
adcb
in
and
sub
add
subl
cmp
stos
mov
lcall
call
push
lcall
mov
je
mov
add
lds
inc
inc
jp
add
adc
sub
push
jo
fistpll
gs
adc
mov
add
icebp
rol
pop
lea
lcall
xor
push
add
pop
jle
jmp
xchg
ds
pop
cld
ja
xchg
dec
add
test
and
xchg
or
ret
fsubr
adc
sbb
mov
cmpsl
in
shll
addps
stc
xor
clc
inc
add
ret
or
ja
inc
or
xchg
popa
pop
push
testb
jmp
stos
out
add
push
dec
fwait
sti
imulb
pop
cmp
repnz
cs
push
leave
inc
sub
jae
mov
mov
outsb
shll
sti
push
imul
imul
or
dec
adc
test
stos
je
or
sbb
add
adc
xchg
addr16
adc
and
mov
test
push
add
inc
dec
jge
cwtl
icebp
dec
add
aam
ret
movsl
cli
push
mov
insl
xorl
adc
jo
rorl
sbb
mulb
mov
mov
xor
mov
mov
push
sti
pop
adc
sub
sub
pop
push
jecxz
mov
xchg
xchg
cmc
insl
cpuid
sbb
mov
mov
cmp
scas
fsts
push
out
sahf
sahf
ljmp
fs
cmp
scas
add
xor
dec
lock
jo
imul
outsb
mov
jbe
mov
push
push
sbb
pop
test
out
std
mov
pop
stos
test
scas
js
arpl
dec
add
inc
or
sub
test
xor
cwtl
mov
add
and
add
fs
pand
ljmp
pushf
xor
or
inc
sub
mov
test
or
sbb
adc
sub
iret
inc
fstpl
ret
aas
pop
test
test
scas
imul
rcrb
jecxz
ret
xchg
inc
lea
sub
add
jecxz
loope
add
push
jge
push
pop
pop
popa
jge
xchg
inc
push
mov
out
pusha
mov
inc
lret
inc
rclb
aaa
es
inc
xor
ds
pop
mov
lods
lock
scas
cmpb
mov
je
inc
rcrl
ss
into
out
and
xchg
pop
mov
cwtl
xlat
push
in
mov
cld
mov
test
aas
maskmovq
imull
pop
filds
fldt
mov
iret
loop
rcll
sti
push
mov
sbbb
xchg
test
lods
bound
movsb
or
jecxz
iret
dec
push
out
mov
fadds
mov
mov
aad
repnz
inc
mov
xchg
jnp
outsb
jnp
mov
cmp
test
popf
jecxz
stos
push
and
lods
es
fdivl
cmp
jno
aas
push
ret
dec
mov
xor
mov
out
in
aas
fsubrl
pop
push
fwait
or
notb
enter
lea
roll
stos
gs
xor
inc
or
dec
mov
inc
lahf
addr16
stos
push
jno
ljmp
les
mov
pop
inc
mov
aaa
push
mov
inc
xchg
push
in
jne
int
pop
int
sub
inc
dec
stc
loopne
add
cmp
dec
xor
mov
mov
mov
test
push
xlat
pop
jmp
rorl
sbb
pop
ja
popa
jnp
ffreep
cmp
dec
pop
scas
aas
arpl
fcmovu
add
outsb
mov
pop
fcmovnu
sub
add
and
mov
adc
pop
fisubrs
dec
sbb
add
shrl
int
sub
aas
das
mov
fnstsw
je
and
cmc
sub
jmp
popf
cmc
shll
adc
mov
push
cli
repz
jne
push
rorl
pop
cmp
fs
call
pop
lods
and
filds
aas
jge
add
push
mov
out
sub
fstp
push
mov
inc
add
cmp
mov
cli
je
xor
xchg
filds
or
adc
subl
mov
dec
ja
adc
div
pop
or
out
dec
and
cmp
into
shrl
push
mov
pcmpeqd
sbb
mov
fildl
aaa
mov
fwait
jns
lock
cmp
sbb
cmpsl
xchg
arpl
mov
sbb
js
out
mov
lds
insl
mov
sbb
fs
imul
jmp
jmp
pushf
mov
es
loop
mov
pusha
add
imul
cs
in
lods
sbb
and
sti
dec
sub
inc
mov
inc
add
mov
lock
pop
test
lea
sub
fbld
std
mov
dec
mov
inc
into
addr16
movb
jp
push
lret
jge
shll
mov
xchg
test
xchg
and
lret
je
pop
push
pop
outsl
aas
in
ficoms
add
push
sti
jbe
sub
mov
outsl
int3
mov
call
pop
or
rcll
mov
into
int3
pop
push
out
adc
and
enter
mov
mov
pop
add
push
fstl
fst
jmp
dec
inc
les
xchg
mov
fisubrs
adc
test
dec
push
pop
xchg
xor
jp
mov
push
push
mov
adc
iret
ret
or
xchg
adc
sti
imul
fmulp
lds
xor
mov
pop
and
xor
fs
cmp
xchg
pop
out
mov
add
add
xchg
and
pop
movsb
aad
clc
outsb
jmp
in
push
insb
xlat
adc
lahf
dec
lods
cmc
inc
xchg
sbb
mov
jmp
loopne
jbe
sub
lock
push
data16
mov
mov
fiadds
hlt
adc
cmpsl
jnp
jo
mov
ret
mov
mov
cmp
xorb
out
xchg
inc
pop
cmpsb
jne
sbb
or
fwait
in
mov
stos
and
testl
pusha
mov
lods
in
fisubrs
lret
mov
insb
pop
int3
icebp
pop
xchg
and
mov
pop
add
into
in
mov
mov
fwait
cmpsb
cmpsl
into
sub
inc
lea
and
cmpsb
add
and
stos
pop
or
aaa
dec
faddl
cli
sti
adc
test
sbb
test
xchg
pop
jle
aas
icebp
loope
sbb
bnd
mov
lea
in
pop
inc
sub
shlb
dec
imul
pop
xchg
pop
sub
insb
in
mov
and
ret
mov
push
hlt
jnp
xchg
scas
test
xchg
ret
insl
xchg
sbbb
mulb
mov
xchg
dec
in
mov
cltd
popa
and
mov
outsb
sbb
iret
xor
xorl
pushf
ret
repnz
mov
shl
mov
repz
mov
add
and
sbb
lock
xorb
pop
jbe
xchg
ljmp
in
inc
inc
call
jge
fs
js
mov
aaa
cmp
lret
movsb
sub
aaa
adc
dec
inc
sbbl
inc
mov
add
mov
aam
movsb
mov
out
loop
lods
xchg
add
pop
fcmovnb
lds
push
jae
cmp
scas
jo
cmc
jbe
mov
xor
push
xchg
dec
pushf
add
or
out
dec
inc
insb
in
ret
and
mov
clc
mov
adc
jns
xchg
push
ret
ja
xor
pop
and
int
arpl
jmp
outsb
inc
mov
push
lret
addr16
insl
sub
mov
jmp
mov
inc
adc
out
aas
test
ret
sub
test
mov
jb
scas
stos
int
cltd
cmp
mov
jg
jo
inc
push
mov
inc
iret
mov
dec
test
aam
stc
push
pop
add
sub
pop
pop
mov
push
xchg
int3
cmpsl
sbb
into
cltd
js
sbb
sbb
sub
xchg
ljmp
jl
fwait
adc
jmp
sbb
sub
sarb
mov
nop
mov
fs
jbe
ret
cmc
aam
pop
cld
stc
fxch
mov
stos
loop
pusha
jmp
and
icebp
mov
inc
mov
jmp
hlt
or
cmp
and
mov
jecxz
das
add
xor
pop
enter
stos
or
adc
or
in
mov
cmp
or
call
sub
adc
lock
out
imul
xchg
repnz
lock
dec
mov
jle
fcoml
jae
pop
pop
adc
dec
push
cmp
xor
and
fidivl
hlt
call
fldt
inc
rorb
arpl
lcall
in
push
or
fstpl
in
sahf
pop
shll
das
hlt
dec
shrl
icebp
pop
insl
fcompl
sub
clc
mov
pushf
test
mov
or
ds
imul
sti
mov
scas
jo
sub
pop
mov
dec
outsb
push
add
fidivrs
cmp
jl
sub
ret
inc
lahf
or
cli
cwtl
fidivrs
xor
mov
mov
mov
pop
fadd
mov
sbb
pop
dec
xor
jle
imul
imul
fbld
mov
in
cmp
std
adc
dec
in
inc
fucomp
mov
rcrl
jp
push
push
jl
inc
pop
mov
and
icebp
in
je
inc
sbb
aad
xchg
pop
push
mov
sbb
or
sahf
cmp
addr16
ss
fdivl
cmp
push
lea
dec
jbe
or
int
jne
dec
jl
or
sbb
pop
jle
or
outsl
sbb
js
xlat
or
sub
xchg
mov
ret
fsubr
dec
mov
rcr
push
xor
test
addr16
and
pop
sbb
outsl
std
adc
cmpsb
daa
sub
cwtl
mov
cltd
xor
push
jl
lahf
sub
push
popa
cmp
jle
pop
jo
and
ja
icebp
sub
cltd
iret
mov
adc
pop
xor
push
push
cmp
dec
jo
sbb
xor
movsl
or
dec
xchg
push
mov
inc
mov
inc
fsqrt
aaa
dec
outsl
mov
lock
clc
sarb
lock
xor
jecxz
sbb
cmpsl
mov
mov
mov
mov
les
lahf
sbb
and
push
pusha
or
arpl
sarl
push
push
in
add
jnp
minps
cli
pop
mov
push
mov
in
jge
sub
lcall
data16
in
xorl
add
inc
xchg
subb
inc
and
inc
ret
or
or
sbb
jl
rorl
add
push
lea
add
or
out
add
jo
add
xor
xchg
inc
push
cmp
or
cmp
lahf
or
cld
lods
jecxz
aam
notl
mov
pop
dec
aam
add
mov
xlat
mov
movsb
mov
xchg
mov
sbb
xchg
fcom
or
mov
jle
xor
jae
clc
loope
in
cmpsl
cmc
leave
loopne
in
pop
mov
mov
scas
xchg
mov
push
adc
xchg
dec
mov
idivb
stos
ret
sub
call
aam
les
mov
insl
push
jge
sbb
mov
and
xchg
fs
push
and
push
cmc
shl
aaa
inc
add
add
cmpsb
sbb
dec
push
cld
xchg
jmp
mov
imul
jo
mov
inc
lret
rolb
in
das
inc
cmp
test
inc
hlt
repnz
add
dec
jne
jmp
pushf
adc
int3
jecxz
jb
or
push
sbb
cli
lret
and
cli
inc
sbb
pop
ss
in
mov
test
je
jo
sub
and
pop
js
ds
mov
jne
mov
aad
lds
mov
inc
cmp
je
lcall
sbb
psubd
fldt
out
hlt
rcl
jl
sahf
ret
addr16
addb
andl
ret
xchg
in
mov
cmc
inc
push
mov
imul
aam
push
arpl
push
mov
pop
cld
mov
add
jbe
and
sub
into
adc
stos
xchg
insb
addb
call
sub
mov
xchg
loop
cmp
jmp
test
inc
fmull
xor
outsb
pop
ret
mov
test
sbb
movsb
pusha
pop
je
jecxz
daa
hlt
push
lea
push
notl
push
imulb
gs
pop
cwtl
xchg
nopl
aad
mov
insb
adc
mov
xchg
test
lock
test
int3
mov
inc
movsb
ret
pop
out
jp
inc
test
lods
insl
jb
icebp
int
ss
and
xchg
push
mov
ds
loope
mov
std
in
pop
add
in
jge
jle
and
or
jl
sbb
sbb
jge
sbb
push
push
loope
jle
add
and
insb
pusha
scas
daa
stc
inc
dec
mov
pop
sbb
icebp
add
xor
insl
xchg
jle
out
mov
or
lods
mov
xchg
mov
add
test
out
sbb
add
fisttpl
pop
adc
pushf
gs
add
fldl
mov
cmp
test
outsb
dec
je
dec
xchg
imul
int3
loopne
sub
addb
sbb
cmc
daa
and
jg
test
popa
orb
outsb
mov
inc
rorb
js
or
in
out
sbb
ret
adc
jle
jp
or
mov
arpl
and
dec
bound
push
add
stos
sarb
dec
mov
push
mov
popf
shll
cmp
ss
push
nop
leave
jmp
sub
cmp
mov
imul
mov
mov
in
pop
add
insl
jo
xchg
push
mov
fistps
enter
push
inc
push
sbb
js
loopne
jae
std
imul
jge
mov
repnz
mov
shrl
icebp
popa
xchg
jnp
push
pop
xchg
mov
mov
xchg
clc
test
xchg
add
mov
xchg
adc
xlat
fdivl
mov
xor
dec
rclb
negl
add
xor
fsts
push
hlt
stos
stc
mov
enter
mov
jb
in
sahf
and
pop
mov
cmp
or
in
xchg
lret
faddl
jne
or
mov
sbb
jbe
xchg
sbb
pop
adc
mov
cmp
loop
cltd
gs
add
cli
fidivrl
in
lahf
lcall
xor
push
cmc
loopne
into
scas
xor
pop
aas
stos
pop
mov
mov
pop
arpl
pop
mov
xchg
adc
xor
inc
lahf
sub
rcl
imul
fwait
push
push
les
jno
pop
jl
xor
insb
mov
pop
mov
push
pop
cltd
inc
lret
dec
fnsave
mov
sub
aas
mov
cmp
call
es
sub
ja
jp
mov
je
daa
mov
adc
in
xchg
xchg
xchg
adc
ret
inc
pop
sbb
dec
mov
scas
or
inc
cmp
or
fucomi
jge
dec
push
pop
mov
pop
je
xor
in
imul
and
xorb
aad
stos
sbb
jp
int3
or
fstl
sbb
nop
inc
int
cmc
bound
pop
lds
pop
and
mov
sbb
repz
pop
std
mov
and
jo
or
push
fnstsw
pop
adc
or
mov
call
inc
mov
addr16
cmp
mov
sub
push
cmp
ds
loop
pop
arpl
xchg
xchg
test
pop
in
popf
dec
inc
push
dec
loopne
cs
aas
or
ret
insb
loop
std
pop
je
scas
into
xlat
mov
add
rcr
mov
and
or
loop
mov
stos
jnp
in
test
test
lret
mov
mov
cmp
and
sbb
push
std
cmp
or
pop
dec
xor
das
sti
add
bound
add
int
test
inc
and
pop
jne
jle
ret
sarl
outsb
xor
dec
sub
bound
mov
xor
sbb
jecxz
xchg
popa
inc
xlat
sbb
js
scas
pop
jp
shr
fs
inc
test
adc
test
aam
insb
lahf
cmp
insl
cli
mulb
stos
sbb
mov
inc
ss
fiaddl
jl
fcmovnbe
jp
in
and
inc
add
xchg
mov
js
in
xor
and
jp
pop
push
xchg
xor
cs
subb
and
pop
xchg
jne
int
sub
jmp
cmpsl
fistpl
fsub
jmp
xlat
push
inc
in
mov
jb
adc
add
mov
pop
pop
insl
shrl
ds
pop
ffreep
xor
mov
bsf
out
xlat
pop
sbb
push
ss
insb
pop
test
and
movsl
add
mov
cmp
ds
ljmp
mov
jge
xor
je
add
lods
insl
orl
push
mov
iret
nop
fsubr
lock
insb
fstl
mov
push
mov
add
imul
sub
push
imul
mov
stc
aas
hlt
int3
rorl
pusha
push
jmp
or
push
jg
jne
mov
insl
je
popa
lcall
pop
pop
rol
dec
jg
cmc
mov
movb
cld
insl
inc
xchg
sub
push
testb
pop
jg
mov
xor
mov
xor
les
stos
push
mov
pop
pop
push
xchg
fsubl
mov
mov
xchg
add
pop
sbb
cmp
push
push
aaa
push
mov
adcl
sbbb
sahf
or
in
xchg
jb
pop
sahf
in
mov
gs
sbb
inc
inc
push
nop
testb
jns
adc
fcmovne
mov
cltd
add
xorb
aam
lcall
popl
pop
filds
jl
mov
jo
or
dec
hlt
pop
cmpsb
mov
lcall
sbb
in
ds
test
or
jecxz
xchg
js
xorb
mov
rcll
pop
mov
pusha
sub
dec
jb
cld
call
aas
dec
mov
mov
sub
and
test
stos
test
mov
fidivl
cld
xchg
pop
and
xor
call
aaa
xor
in
pop
stos
ss
cltd
fcompp
jle
insb
and
push
shlb
lods
popa
cmp
sahf
push
pop
cmp
int3
inc
inc
or
lods
outsl
inc
outsb
pop
je
add
jle
int
cmpsl
push
pop
mov
subl
ss
xor
loopne
ss
hlt
sarl
into
xlat
mov
cmp
cmpl
ret
jge
stc
pop
sti
cmp
gs
lcall
pop
ss
js
mov
int
jo
or
dec
push
push
fldt
divl
lahf
mov
rorl
sahf
pop
js
inc
sbb
mov
sbb
sbb
pop
imul
repnz
loop
push
mov
ret
sub
xchg
lret
jnp
sbbb
pop
jecxz
pop
or
xor
and
mov
mov
test
cltd
cmp
jne
mov
in
mov
mov
lods
icebp
insl
pop
das
scas
clc
mov
or
ret
add
push
mov
cmp
fnsave
cmp
xor
xchg
push
mov
pushf
scas
mov
mov
mov
mov
cmp
arpl
dec
dec
shll
mov
adc
les
fprem
adcl
sub
xchg
rorb
add
cmp
mov
pop
movsb
xchg
sub
cmpsb
fcomps
je
mov
jge
data16
xchg
pushf
add
cmp
bnd
orb
cld
out
idivl
add
sbb
filds
pop
ds
dec
jg
lret
iret
mov
cltd
cli
stc
mov
imul
ret
add
fs
xchg
push
mov
subps
pop
stos
scas
jno
aaa
sbb
jns
imul
fmull
scas
out
mov
fisttpl
xor
mov
mov
and
dec
add
fnstenv
add
mov
sub
sbb
es
cld
or
iret
divb
xchg
jbe
mov
repnz
dec
sbb
mov
xchg
sbb
test
pop
scas
cmpl
out
and
mov
sub
gs
bound
mov
sub
jae
push
stos
mov
cmp
aas
xor
mov
call
repnz
xor
iret
cltd
inc
pop
push
sbb
adc
call
pop
push
inc
lret
jb
out
push
imul
dec
adc
mov
out
dec
fwait
mov
mov
add
shr
and
call
insl
in
sbb
stos
arpl
daa
dec
jno
dec
xor
adc
pop
outsl
dec
and
push
stos
cli
rorb
cmp
movsl
pop
xchg
imul
insl
jmp
mov
test
mov
std
pop
mov
cmp
cmp
inc
shll
cld
mov
iret
jne
dec
inc
add
fcomps
gs
xchg
xchg
daa
push
inc
fdivr
cs
and
repnz
mov
push
fistpll
push
sbb
sub
and
xor
xor
gs
cmpsb
lret
pop
mov
fadds
xchg
data16
shlb
sbb
inc
jg
data16
mov
ficompl
push
mov
es
cmpsb
movsl
loope
stos
test
add
adc
cld
popf
jg
shlb
mov
adc
ret
idivb
xchg
sbb
adc
cmp
rorb
ss
pop
sbb
mov
mov
mov
fidivrl
ficoml
orl
xchg
rcrl
mov
scas
xchg
cmp
mov
addl
dec
imul
mov
add
enter
frstor
sub
fdivl
subb
adc
fsubrl
out
add
push
sub
push
in
shrl
mov
aam
jecxz
into
scas
sbb
inc
jmp
mov
fidivrs
rcll
and
in
jae
pop
sbb
sti
cmp
rol
xchg
mov
fstpt
je
push
into
out
fisttps
pop
xor
into
cltd
or
mov
in
jb
lcall
cmp
ja
flds
lret
out
jne
mov
ret
rcr
insl
pop
lock
adc
push
cmpsl
xchg
dec
pop
xchg
daa
adc
mov
pusha
jge
mov
xchg
imul
add
add
add
adc
stos
mov
movsl
mov
mov
out
jge
jo
test
xchg
rcr
outsb
std
push
fbld
idiv
pop
or
inc
dec
gs
popf
and
scas
call
cwtl
iret
jbe
ficompl
mov
mov
stos
pop
ds
rcl
loop
add
mov
repnz
test
mov
xor
jl
test
xchg
xor
jnp
fisttpl
stos
mov
xor
push
push
inc
push
add
mov
int3
push
jmp
mov
push
and
lret
dec
mov
loope
push
pop
mov
adc
cmpsl
in
or
mov
ret
jno
sbb
lret
cld
test
ret
xlat
in
dec
fisubrl
ds
je
sub
push
fistpl
rcl
push
movsl
rcrb
jae
int3
pop
mov
mov
subb
pop
aam
sbb
or
pop
aaa
testb
inc
lret
nop
aas
fcoml
js
cmp
mov
xor
push
ljmp
je
aam
loopne
mov
push
mov
mov
pushf
loop
inc
sbb
cld
pop
inc
mov
jge
jnp
cmp
in
sub
rcrl
mov
rcr
inc
mov
fadds
iret
dec
pusha
lods
add
adc
cmp
xchg
sub
loop
rorb
cmpsl
cmc
ret
fnsave
mov
pop
je
inc
jge
xchg
bound
int
dec
and
scas
pop
push
inc
js
sub
cmp
pop
icebp
hlt
icebp
xchg
cmp
sbb
loop
out
in
adc
ret
sub
cmp
sbb
add
cmp
imul
mov
push
sub
and
pop
in
pusha
lods
pop
pop
add
mov
inc
pop
das
push
movsb
pop
or
out
jnp
jno
jl
dec
rclb
mov
push
adc
mov
cmc
mov
hlt
not
jno
outsb
or
es
outsb
gs
push
insl
inc
addl
push
mov
shl
mov
add
mov
fs
test
inc
add
insb
ret
enter
adc
addl
jbe
ja
aas
jno
adc
xor
cmp
inc
jl
and
imul
push
movsb
sti
inc
inc
mov
arpl
in
test
es
ljmp
xlat
push
loope
paddsw
stos
lock
xor
sbb
stos
mov
test
daa
nop
mov
cmp
ret
das
mov
out
add
mov
push
insl
push
mov
push
mov
jo
push
sti
sub
fcompl
loop
inc
fbld
fiaddl
or
push
jl
gs
mov
cmpsb
repnz
scas
mov
shlb
jg
mov
movsb
xchg
sbb
orl
das
cmp
xlat
push
cmp
aam
and
scas
cli
mov
push
lods
loop
xchg
ret
call
sahf
mov
sbb
cmp
pop
dec
mov
cmp
cltd
push
scas
add
cmp
push
dec
add
or
bound
pop
lcall
ljmp
leave
ret
fidivs
and
nop
xchg
fnsave
scas
mov
xchg
mov
jbe
jge
outsb
ss
xchg
jle
lea
testb
and
sbb
cmpl
xor
push
or
jae
inc
fiadds
cmpsl
dec
cmp
int
inc
std
inc
or
in
sahf
ljmp
mov
mov
movsl
sti
add
stos
jmp
mov
push
push
sarl
in
and
ret
mov
nop
ss
add
in
xor
aad
ret
ret
ret
out
jo
add
stos
sub
mov
jbe
pusha
and
mov
sub
in
mov
add
aaa
and
jae
push
bound
sbb
push
and
jne
ja
cmp
insl
pop
pop
hlt
push
ret
add
xlat
push
cmc
adc
mov
loope
fistpll
je
sbb
xchg
addl
arpl
jecxz
mov
fndisi(8087
inc
out
adc
fidivs
push
aas
jp
jnp
loope
arpl
out
mov
out
mov
and
sarb
addr16
cmpsb
and
fidivl
push
rorl
dec
mov
arpl
in
pop
jno
push
or
mov
into
jno
test
jbe
out
mov
push
adc
cld
mov
jne
fnsave
or
and
cld
mov
lock
out
loope
jbe
xor
mov
pusha
mov
jbe
sub
imul
int3
dec
ss
pop
sahf
pop
rcll
sub
inc
xchg
pop
cmpsl
int
cmp
jp
outsb
dec
pusha
pop
out
mov
imul
dec
and
add
fldl
xlat
addr16
andb
add
jge
popa
push
push
adc
xor
cmp
push
pushf
add
pusha
scas
jge
jnp
loopne
push
push
pop
inc
xlat
dec
xor
or
sbb
sbb
adc
add
mov
inc
sbb
jnp
jbe
jns
cmpsb
dec
fcmovnbe
loopne
mov
adc
cs
leave
fidivs
loop
sbb
sarl
sub
shlb
mov
scas
adc
test
mov
jmp
dec
cmpsb
ficoml
dec
xchg
xor
jge
rcl
rcrb
push
pusha
stc
cmc
fistl
mov
sbb
es
jecxz
push
push
cmc
arpl
add
stos
push
sub
push
xor
xor
fs
xlat
outsb
jmp
cmp
cmp
inc
rolb
sbb
mov
push
pop
push
jbe
out
loope
lds
add
dec
jg
sarl
mov
imul
adc
cltd
dec
aam
pop
dec
push
xchg
jle
push
mov
inc
pop
or
adc
inc
xor
lods
mov
mov
mov
idivl
dec
insl
fwait
enter
roll
sub
lock
ja
lea
test
insb
lret
sub
and
stos
imul
pusha
ret
fidivs
push
cmc
jle
mov
or
inc
inc
add
cmpsb
xor
ljmp
fnstsw
sbb
dec
inc
cwtl
sbb
jb
jmp
cmp
or
nop
or
jmp
mov
std
shlb
out
mov
pop
fdiv
jne
rcrb
js
imul
lcall
testl
pushl
out
sbb
jb
mov
xchg
mov
and
and
mov
stos
xorl
mov
mov
mov
mov
ret
adc
pop
pop
gs
fcoms
mov
cmp
pop
out
mov
mov
xchg
xchg
movzwl
mov
cmovno
cmp
adc
mov
push
dec
mov
nopl
inc
or
push
mov
cmp
sub
sub
aam
gs
push
adc
or
and
pop
jmp
addl
std
rclb
mov
loope
add
mov
or
push
shll
cmpsl
pop
lock
arpl
jge
pop
push
inc
imul
ljmp
cltd
sbb
insb
fdivrs
aad
stos
mov
shl
loop
mov
pop
addr16
push
mov
sub
shl
sbb
mov
sbb
dec
xchg
iret
subl
adc
push
fisubs
cli
shl
jl
xor
adcl
inc
cmp
mov
sbb
sbb
dec
and
inc
jo
rcl
mov
loop
ret
outsb
cmp
pop
clc
scas
fisttpll
push
popa
add
mov
stos
jmp
call
rol
add
mov
das
sub
stos
lds
cmp
push
adc
scas
outsb
and
push
not
test
dec
in
xchg
scas
xchg
and
in
fs
pop
mov
testb
sub
push
in
xor
dec
jo
outsb
imul
pop
mov
or
or
adc
mov
fsub
fdivs
dec
jmp
in
adc
dec
out
mov
inc
fs
loop
add
add
inc
mov
and
icebp
mov
sbb
cwtl
sub
mov
sbb
cmc
std
vpavgb
mov
pop
mov
imul
mov
hlt
sar
rcr
scas
push
nop
sub
mov
and
or
cmp
adc
sahf
cmp
sahf
push
imul
adc
mov
and
or
mov
jbe
mov
add
mov
jle
into
adc
leave
pop
jle
add
jl
cmc
pop
shl
jae
sub
cmp
push
fbstp
outsl
cmp
loope
pop
das
mov
ret
imul
mov
pop
stos
dec
popa
xchg
pop
mov
inc
xlat
inc
ret
lahf
out
dec
aaa
imull
js
sti
adc
xchg
shrb
xchg
jne
mov
ds
xor
cmp
inc
popf
push
inc
sub
outsb
sbb
or
add
fcompl
pop
push
or
push
and
push
mov
push
test
jle
jge
push
int
xchg
lret
push
out
scas
outsb
or
cmp
fildl
les
push
pop
aam
inc
stc
add
pop
and
mov
push
sub
adc
ret
cmp
roll
jecxz
or
mov
idivb
add
cli
sub
dec
mov
mov
pop
shrb
ficoml
sbb
or
scas
iret
mov
jnp
into
push
pop
loope
fstp
dec
push
dec
xchg
iret
fnsave
xchg
inc
ja
scas
popa
ret
mov
xchg
cmp
xchg
fcmovnb
aad
jp
mov
xchg
enter
adc
push
shlb
sbb
int
dec
lret
xor
mov
pop
jle
or
cmp
or
push
xor
push
hlt
mov
lcall
pop
loopne
jne,pn
sub
cmp
cmp
add
testb
ljmp
and
gs
or
cmp
popa
push
xchg
punpckldq
pop
call
inc
or
sbb
pop
movb
or
sbb
adc
cmp
std
sbbb
push
dec
frstor
dec
lret
pop
jno
inc
xchg
push
or
dec
add
xchg
xor
sub
scas
inc
bound
push
in
cmp
shll
into
test
loop
sub
jg
cmpsb
gs
out
push
js
and
popf
push
and
xor
mov
fnstsw
mov
in
adcl
mulb
and
pop
cmp
adc
xor
fisttps
add
add
mov
pavgb
sbb
icebp
jbe
rorb
into
pop
clc
mov
xchg
fwait
jne
cmp
mov
icebp
insb
push
lret
xchg
pop
inc
iret
xorb
loopne
clc
js,pt
adc
or
ret
loope
mov
ret
and
hlt
cld
sub
jge
lock
and
movsb
fistl
inc
dec
jecxz
daa
add
cmp
sub
div
ret
nop
inc
push
jae
popf
scas
or
mov
mov
xchg
adc
aas
movsb
ljmp
cmpsb
or
idivl
mov
mov
das
sub
rolb
or
sbb
mov
pop
adc
dec
push
jge
sub
inc
ds
je
icebp
mov
lds
adc
jne
js
mov
sub
outsl
mov
lcall
lahf
mov
cs
and
or
xor
mov
loope
roll
adc
and
push
stos
inc
sub
push
hlt
pop
fadds
in
insl
pop
jo
sbb
mov
inc
pop
jge
ja
mov
shl
sbb
pushf
addr16
cld
and
dec
inc
mov
inc
in
xor
shrb
sarb
inc
jecxz
jns
pop
mov
sti
jne
cmp
lds
popf
mov
or
sbb
add
push
ja
push
xor
xchg
jecxz
or
inc
mov
mov
fimull
pop
aas
js
pop
and
inc
mov
icebp
lods
es
mov
mov
out
loopne
shrb
mov
cmp
mov
clc
int3
lret
cmp
ficoms
test
xor
enter
insl
int
loop
inc
icebp
pusha
jns
add
or
pop
pop
inc
stos
pop
fildll
pushf
xchg
inc
sbb
pop
or
push
mov
outsb
inc
jnp
mov
mov
stos
push
imul
rclb
popf
jmp
add
rclb
dec
orb
add
cmp
loop
jl
clc
add
loopne
mov
push
in
xchg
in
xchg
fdivs
jecxz
call
jae
xchg
enter
ret
scas
outsb
fstpl
imul
leave
bound
popf
jmp
lea
xor
jne
push
fcomps
orb
lcall
adc
pusha
scas
jmp
inc
lods
jp
shll
insl
not
xchg
popf
mov
push
pusha
popf
xor
add
mov
addr16
out
push
xor
sub
push
add
and
dec
inc
and
push
hlt
push
clc
mov
les
and
insb
cmc
inc
mov
mov
idivl
sbbb
dec
xchg
arpl
xor
sbb
aaa
in
mov
fcmovnu
insb
out
jp
fisttpl
aaa
out
pop
out
loopne
jne
outsl
mov
mov
mov
xlat
adc
lds
cmpsb
arpl
or
mul
imul
cmp
fldl
pop
fstps
loopne
sbb
xchg
addr16
scas
adc
insb
out
and
mov
mov
stos
pop
clc
int3
call
mov
xchg
cmp
jae
xor
sbb
pop
inc
insb
mov
mov
lds
inc
pushf
sbb
xchg
subl
pop
pop
inc
sarb
mov
pop
repz
loope
pop
pusha
popa
fistpl
pop
cmp
sub
or
add
insl
add
and
lds
cli
jp
mov
lret
mov
add
cli
pop
aaa
push
jbe
add
jo
repz
adc
or
push
and
daa
xor
or
sahf
insb
add
mov
jo
pop
push
mov
push
ds
fsubrp
jecxz
mov
pop
jle
xchg
out
and
lods
inc
push
adc
sbb
pop
add
jbe
mov
pop
addb
push
pop
pop
shrl
rolb
insl
xchg
jb
pop
inc
and
mov
mov
push
mov
sub
or
sbb
mov
out
jle
mov
outsl
stc
rolb
cmp
mov
jecxz
mov
and
xchg
jnp
mov
sbb
stc
dec
stos
lds
push
pop
shrl
xchg
pop
mov
ljmp
and
lods
imul
mov
lahf
rorl
loopne
mov
xchg
inc
popa
loope
inc
je
add
imul
xor
pop
add
aad
inc
mov
ror
mov
add
or
add
sbb
ss
xor
dec
ret
call
ret
into
mov
imul
mov
xor
rcrb
jmp
mov
prefetch
inc
sub
add
or
mov
test
add
cmp
xchg
add
xchg
stos
orl
or
inc
mov
sbb
fldenv
push
icebp
jmp
jmp
shlb
icebp
push
xchg
and
imul
or
sub
jmp
xchg
out
stos
daa
decb
ret
and
inc
pop
pop
add
popf
fcmovbe
xor
cmp
aaa
cmp
inc
inc
sbb
daa
cmp
mov
imul
cmp
test
jg
mov
insl
hlt
cwtl
and
in
in
aaa
mov
ficoms
lahf
sbb
jnp
adc
aas
fnsave
adc
mov
mov
sbbb
cld
add
push
jl
xchg
cs
fsubs
js
xchg
cmpsl
push
pop
mov
cmp
test
lods
sbb
adc
call
fdivp
cmp
cmp
ror
mov
sbb
clc
loope
push
adc
mov
jbe
or
adc
jbe
mov
xchg
mov
cld
ds
clc
arpl
jmp
mov
cmp
mov
jmp
outsb
adc
adc
lods
sti
add
adc
sarl
mov
jg
jl
fsubl
loop
lea
jl
mov
test
outsw
mov
pop
mov
xor
mov
mov
test
push
test
jno
xchg
jb
rorb
je
dec
fdivr
jecxz
scas
xorb
ss
stc
pop
loop
cmp
cmp
out
pop
les
cmc
jne
sbbb
sub
sbbl
out
andb
inc
mov
push
jmp
jmp
cmp
jbe
cmc
xor
pop
mov
out
jmp
mov
pop
cmp
inc
lds
test
sbb
add
loop
push
ss
jnp
popl
adc
sub
lds
cmp
xchg
cmp
jge
xchg
xchg
mov
popf
jns
mov
mov
test
stc
jns
ret
push
nop
and
pop
cmp
rcl
mov
movsb
scas
sti
cmp
ja
arpl
addl
les
xchg
dec
add
sub
xchg
push
aad
mov
or
rol
int
js
out
adc
push
fsubs
xchg
pop
and
xchg
mov
add
pusha
xchg
fnsave
jle
push
push
push
or
inc
fmuls
pushf
stos
sti
pop
aad
sbb
scas
sti
divl
mov
jle
sub
cld
test
add
sbb
jge
imul
fsubp
pusha
pusha
mov
lods
jmp
das
mov
addl
adc
or
xchg
push
iret
adc
ds
sbb
dec
add
jbe
loope
call
fdivrl
adc
aaa
aaa
push
dec
setnp
push
das
in
insb
outsb
fbstp
repnz
fisubrl
call
push
push
or
js
mov
scas
subb
cmpsb
into
test
insl
sbb
inc
std
fldt
sti
lea
lods
das
dec
int3
pop
pop
xor
mov
dec
xchg
xchg
lret
icebp
stos
loop
loop
or
cli
push
enter
cmp
idivb
call
dec
lea
inc
stos
mov
js
lcall
popa
scas
xchg
in
fisubrl
sub
pop
aad
inc
xor
mov
jmp
sub
push
pop
pop
pop
sbb
test
inc
and
add
cmp
sbbb
jno
mov
cmp
in
fucomi
inc
dec
dec
stc
rcl
push
pop
ljmp
xor
adc
sbb
test
sbb
clc
in
cmp
jb
sub
push
xchg
adc
ss
add
cmpsl
sbb
imul
mov
out
inc
mov
xchg
jle
bndldx
push
xchg
rolb
mov
mov
or
stos
test
sbb
call
inc
cmc
fcmovnb
push
je
sub
push
inc
imul
aam
lock
and
out
ja
sti
imul
icebp
adc
pushl
test
cld
sbb
aas
pop
mov
pushl
push
sub
push
lea
loopne
rol
cmpsb
out
in
pop
mov
sub
in
mov
jnp
fsub
ljmp
insl
pop
xchg
jns
ret
decb
test
dec
xchg
jnp
mov
pop
inc
jne
mov
dec
push
pop
sbb
fisttpll
ud0
bound
sbb
sub
pop
inc
fcmovnbe
jmp
xlat
xchg
sbb
aam
or
lds
pop
std
adc
jmp
lods
add
jmp
insb
jg
mov
lods
mov
aaa
jl
and
or
push
jl
scas
leave
ret
pushf
fistpl
push
cli
fimuls
mov
mov
cmpl
daa
cmp
das
add
pop
adc
mov
dec
pop
inc
arpl
pop
cmp
cmp
daa
mov
scas
mov
xchg
loop
in
imul
inc
paddq
add
inc
sub
push
push
xchg
cmp
mov
ret
or
jno
sbb
xchg
inc
cmpsb
mov
fucomi
adc
shl
dec
out
out
mov
fimuls
adc
pop
ret
insl
sbb
jecxz
cmp
pop
scas
ja
aam
jne
shl
sbb
jbe
inc
inc
push
mov
or
and
xor
into
sub
mov
mov
cwtl
jbe
fdivrl
jns
mov
adc
jne
addr16
addb
cmpsb
xlat
sbb
mov
mov
add
repnz
mov
call
add
cmp
mov
sbb
pop
push
dec
fistps
cltd
cmp
aam
mov
ds
adc
mov
rcr
xchg
test
sub
ds
inc
imull
or
test
mov
push
loopne
rorl
sbb
loop
ret
cmp
ljmp
push
inc
test
lods
out
testb
je
jmp
aaa
sbb
jbe
jne
clc
test
stc
imul
call
pop
jge
jo
andl
xor
ret
mov
push
test
pop
xor
and
mov
mov
mov
js
sbb
dec
add
mov
cmp
xchg
add
movsb
mov
stos
push
jmp
aad
shlb
cld
adc
fadds
out
pop
inc
ret
lahf
jnp
pop
ss
pop
repz
adc
pop
outsb
pop
jo
in
sahf
orb
sbb
sub
sahf
mov
movnti
and
outsb
scas
jecxz
xor
cmp
adc
rcr
sbb
xor
xlat
out
add
unpcklps
fwait
mov
je
into
sbb
jb
adc
and
out
mov
and
push
cli
nop
jae
push
subb
mov
inc
arpl
mov
sbb
sub
pop
adc
pushf
out
adc
mov
cmp
add
ja
xchg
in
push
mov
daa
dec
mov
scas
jecxz
mov
mov
or
push
fsubrs
pop
cmp
in
rorb
cld
loope
insl
sbbb
lods
mov
insl
cwtl
dec
inc
clc
jnp
xchg
sbb
sbb
pop
add
jne
xchg
sbb
adcl
sbb
or
rorl
add
fwait
pop
fs
fnstenv
adc
adc
scas
adc
sbb
and
xor
loopne
nopl
or
inc
mov
cmp
xchg
sbb
rorl
jmp
btr
scas
fcom
lock
ljmp
ljmp
enter
lahf
add
jg
fisttpll
int
mov
fldt
cmpl
aad
js
push
out
testb
lret
cmpsb
push
popf
mov
test
push
pop
push
jecxz
out
xchg
fcomps
xchg
adc
js
cwtl
jp
dec
push
ljmp
int
imul
js
push
push
mov
mov
mov
jns
lea
fildll
jno
and
jmp
sub
inc
testl
jl
mov
xlat
outsb
fwait
or
mov
stos
cmp
adc
dec
cmp
popa
dec
xchg
or
add
mov
jns
and
dec
mov
jle
cmp
test
sbb
mov
push
push
in
pop
adc
icebp
xchg
outsb
mov
mov
pop
mov
fdivrs
xchg
mov
jns
inc
fcom
jbe
in
adc
xchg
pop
and
hlt
push
adc
popf
pop
mov
mov
js
addb
les
std
test
insl
mov
ret
leave
int3
inc
or
mov
push
xor
add
mov
and
xor
dec
pop
divl
inc
ja
aam
sbb
xor
imul
xorl
std
fnstsw
mov
fcoms
aas
or
out
and
jl
jno
jbe
ljmp
and
sbb
lods
push
sbb
adcl
sub
mov
cwtl
shrl
and
test
mov
int3
rorb
stos
int
mov
cmpsb
lea
jmp
dec
fidivrs
push
push
movsb
ljmp
cmp
int3
imul
daa
lods
test
push
add
es
outsb
aam
int
xchg
aaa
andb
adc
sbb
add
adc
mov
push
xor
push
push
mov
fsub
mov
ret
xchg
sti
movsl
jmp
outsl
enter
loop
jbe
mov
sahf
fcmovb
ret
out
cmc
xor
dec
add
mov
add
mov
setp
pop
push
loop
cli
sbb
sbb
xchg
adc
fstps
test
pop
jge
loope
fisttpl
push
xchg
mov
mov
cmpsl
or
loope
jnp
sub
jp
test
jno
push
xlat
lock
sbb
inc
dec
push
imul
jl
out
mov
xchg
mov
mov
mov
test
fmull
popf
pop
out
pop
add
iret
sbb
push
in
cmpsb
pop
pop
loopne
push
xchg
sarb
pop
adc
mov
daa
ret
push
aas
jae
pushf
aad
inc
test
sub
and
mov
out
mov
sbb
gs
push
push
fildl
push
lret
shr
sbb
jge
sbb
fstl
pop
jne
leave
incb
fdivl
mov
std
popa
stos
nop
push
mov
jge
push
push
pop
fdivs
push
sub
fildl
out
push
in
andl
mov
int3
addr16
sbb
cld
mov
pop
push
ljmp
push
adc
mov
js
flds
jp
loopne
aaa
jnp
psubusb
xchg
sbb
aad
add
clc
rolb
dec
sub
popa
pushf
imul
mov
push
xor
aad
push
mov
jmp
clc
add
jo
jge
jnp
pop
cmp
inc
fwait
scas
cmp
pop
rolb
sbb
ss
stos
or
push
xor
sti
clc
mov
pop
int
push
inc
sbb
mov
and
insb
push
add
inc
sti
loopne
arpl
scas
add
xlat
insb
mov
gs
repz
mov
jp
rolb
push
rol
adc
cmp
test
adc
sbb
sub
loopne
mov
push
or
pop
mov
lret
mov
shrl
xlat
insl
jns
mov
dec
ret
insl
and
xchg
fdivs
orb
or
cmp
and
adc
mov
jb
ja
add
pop
lock
xlat
int
aad
inc
add
test
loopne
fwait
push
mov
cmp
mov
sub
push
inc
aaa
lcall
xor
cmp
fucomi
fistl
push
lcall
stos
and
ret
test
mov
jnp
mov
and
movl
jne
cmp
lcall
shlb
rcll
add
gs
outsl
mov
hlt
aam
fidivrl
lods
int
jl
or
test
jp
cmp
dec
int
sub
dec
aad
mov
pop
mov
pop
push
mov
xlat
mov
add
and
and
pop
push
out
imul
stos
daa
sub
push
jae
dec
lds
xchg
jbe
es
sbb
mov
xor
jp
pop
cwtl
and
adc
jbe
pop
popa
sbb
xor
inc
inc
fists
out
pushf
mov
push
daa
mov
lahf
mov
cmpsl
inc
push
dec
pop
ja
push
popa
je
imul
ret
adc
push
daa
and
test
das
jmp
sbb
mov
mov
jae
sbbb
leave
data16
enter
data16
nop
mov
decl
cmp
mov
adc
jmp
adc
notl
mov
inc
pop
push
aas
push
mov
push
jge
dec
bound
jp
je
push
les
push
cmp
xor
cmc
dec
push
push
lret
mov
sbb
repnz
jle
mov
jbe
ss
insb
cmpsl
push
fcom
sub
mov
xor
sahf
xor
es
fwait
mov
out
das
aam
popa
out
sbb
cmp
and
ret
sahf
movb
in
mov
inc
aad
adc
imul
lock
mov
loop
adc
pop
xlat
xchg
imul
and
js
xchg
fisttpl
mov
out
inc
das
stos
pop
pop
push
cmpsl
cmpb
scas
out
dec
dec
bound
loopne
or
icebp
ja
gs
es
mov
pop
icebp
push
lahf
push
cmp
notl
outsb
mov
movsl
add
push
xchg
cmp
out
adc
bound
test
sbb
out
test
dec
mov
jge
pop
lahf
imul
stc
cmpsb
dec
inc
shll
popf
je
mov
dec
fadd
dec
jle
cli
sub
xchg
adc
leave
sub
lods
out
jg
in
jmp
and
sub
adc
sbb
sub
dec
ds
das
cmp
mov
aaa
cmp
insl
bound
xor
xchg
cmp
orb
pop
aaa
pcmpeqb
adc
cwtl
popa
andl
mov
mov
in
sbb
cmp
and
ljmp
pop
fstl
sbb
pop
jle
scas
add
daa
mov
cs
and
xor
inc
aas
jbe
hlt
and
and
addr16
mov
dec
mov
movsb
or
lds
outsb
mov
jnp
cmp
cmp
testb
mov
xor
fcmovnu
je
add
lea
loope
jp
push
outsl
fwait
out
cmpsb
xchg
imul
sub
cmp
pop
in
jno
dec
and
cmp
aas
sbbb
aad
push
xor
dec
hlt
jo
and
lret
mov
jbe
bound
repnz
cmp
jmp
subl
fwait
xor
ret
bound
or
pop
lret
int
lcall
fldt
mov
add
mov
cld
push
addr16
das
sub
jmp
mov
insl
push
xor
add
stos
jne
jo
cmpb
mov
inc
fidivs
ja
lds
out
sbb
xor
subb
inc
mov
in
dec
inc
and
outsl
sub
hlt
ret
sub
add
pop
pop
push
inc
jmp
dec
jp
and
xor
and
loope
fimull
insl
clc
lcall
aaa
shr
arpl
xchg
xchg
aaa
ret
cmc
or
xchg
pop
sbb
adc
pusha
fidivrs
addl
cmpsl
and
loopne
subl
daa
imul
mov
add
cwtl
test
mov
sbb
into
add
lcall
sysenter
fmuls
mov
inc
push
andb
stos
data16
les
sbb
or
andl
xchg
mov
inc
adc
and
pop
fidivs
data16
lret
pusha
out
sub
xchg
pop
ret
mov
outsb
and
cmpsb
test
and
jne
shll
mov
cmc
rorb
or
cmpsb
mov
xchg
movsl
pop
out
jbe
mov
or
lea
mov
addr16
jecxz
xchg
ret
test
pop
test
notb
jae
mov
mov
shlb
xchg
add
adc
mov
mov
cli
and
xor
pop
pop
je
sub
lock
mov
xor
lds
cmpsl
mov
and
mov
mov
iret
inc
pop
and
cmp
push
jne
inc
inc
icebp
adc
scas
mov
sub
das
loop
stos
in
mov
or
sub
mov
inc
icebp
shll
clc
fsubp
push
jns
cmpb
popf
push
sbb
xchg
push
mov
inc
repz
lods
pop
jns
mov
add
jge
adc
jne
xchg
dec
ja
outsl
cwtl
cmp
pop
icebp
and
shl
adc
dec
mov
sub
mov
out
hlt
and
or
add
jmp
or
pop
and
adc
adc
mov
aas
das
mov
out
push
pop
rcr
xlat
dec
mov
jle
nop
pushf
das
lret
xchg
jns
jge
ss
cmp
stos
es
mov
add
sub
add
jb
pop
and
or
rcrl
popl
xchg
lods
and
ss
sbb
xor
jle
sub
addr16
hlt
inc
clc
mov
push
enter
inc
push
test
test
inc
scas
inc
je
sbb
push
and
inc
adc
addl
ror
sbbb
xchg
mov
jo
or
cmp
imul
out
arpl
adc
sbb
jle
fcompl
subl
daa
ret
lcall
fmull
popf
dec
mov
mov
dec
add
xchg
clc
mov
push
jl
mov
pop
dec
icebp
movsb
sub
popf
sti
inc
mov
hlt
sahf
dec
or
sbb
shl
out
bound
in
int3
sbb
push
or
jo
mov
add
insl
out
pop
add
push
stos
sub
xchg
xchg
lret
jg
inc
mov
fnsave
xor
and
adc
sub
not
pop
stos
xor
and
pop
and
xchg
or
mov
xor
imul
jecxz
adc
sbb
sbb
fs
fdiv
js
adc
arpl
push
and
stc
jecxz
mov
add
sbbl
dec
ljmp
cwtl
cmpsb
mov
ja
sbb
pushf
pop
retw
scas
jecxz
icebp
daa
cld
adc
andb
mov
sti
jne
mov
dec
scas
scas
insl
adc
and
out
xchg
pop
mov
inc
or
arpl
daa
sbb
addr16
mov
lods
xor
inc
and
dec
out
roll
andl
push
inc
xchg
cmp
sbb
jns
outsb
jl
jecxz
test
push
inc
in
mov
loope
test
push
or
or
sbb
push
ret
pop
and
jae
hlt
add
jbe
mov
jl
ret
test
inc
xchg
loope
or
addr16
std
clc
push
jns
pop
lds
ret
fwait
jecxz
push
or
daa
jle
push
inc
xchg
adc
sub
aam
fistpll
loope
mov
xor
or
or
inc
cmp
mov
dec
outsl
insb
movsb
inc
adc
movsb
sub
xchg
je
and
lcall
mov
ljmp
in
lcall
xor
imul
stos
and
sti
inc
aad
jno
adc
fsubr
fistpl
mov
pop
loopne
lock
scas
aam
les
mov
orl
outsb
dec
jmp
aam
mov
pop
push
mov
lods
pushf
push
insl
or
mov
mov
jg
xlat
mov
movsb
cmpsb
mov
and
dec
pop
dec
and
mov
out
icebp
adc
pop
cld
stos
adc
jmp
sub
pop
cmpsl
sub
daa
pop
xchg
pop
xor
and
xchg
cmc
jle
jle
jg
jo
push
mov
or
fidivrl
filds
pushf
add
loope
fstpt
das
add
jne
in
sub
cltd
push
jne
sti
in
ret
jl
cmp
pop
outsb
cli
loopne
pop
xchg
movsb
cmc
aam
inc
loope
push
movq
cmp
dec
shrl
xor
loope
xor
bound
imul
insb
loopne
div
push
cmp
mov
sub
push
lahf
or
jno
out
insl
xchg
xorl
inc
stos
sbb
orb
xor
inc
pop
sub
scas
jecxz
mov
add
push
scas
mov
or
arpl
loope
xchg
fdivrl
fidivs
sub
mov
shrl
pxor
add
daa
mov
ss
popf
mov
jge
fidivl
inc
and
lods
and
shll
push
aad
pop
call
fstpl
adcl
lret
sub
cli
setg
jl
adc
push
divb
sub
cmp
test
arpl
mov
mov
stos
jmp
scas
outsl
lods
push
popf
cmp
add
stos
fcoms
dec
sbb
mov
xorl
dec
filds
sub
pop
ret
sub
test
scas
test
adc
jmp
clc
mov
sti
dec
jbe
lock
push
dec
mov
sarb
aas
cld
adc
out
and
testb
cmp
inc
shl
jnp
test
mov
jns
sub
add
xor
lahf
out
or
cmp
xchg
cmp
or
scas
mov
pop
sub
push
push
inc
pop
inc
and
scas
cmp
stos
adc
sbb
inc
subb
mov
adc
inc
jge,pt
mov
mov
lcall
mov
stos
cld
mov
jne
addb
jno
sti
jle
xlat
mov
imul
push
push
movsb
sarb
xchg
inc
iret
sbb
mov
add
lret
loope
xchg
aas
push
lds
pop
stos
in
ja
xchg
cmc
out
push
xor
mov
test
or
mov
xor
inc
adc
pop
cmp
xor
and
push
ret
fucomp
clc
popf
ret
and
ret
inc
popa
enter
and
mov
idivl
insl
popa
sub
push
pop
lods
push
fs
push
loopne
fucomi
jne
push
shr
pop
jnp
mov
mov
sbb
xorb
mov
lods
test
mov
loop
sub
out
xchg
mov
std
sbb
hlt
mov
add
das
xchg
ja
lds
addb
cmp
fwait
mov
ret
cli
shlb
push
fnstsw
xchg
lea
mov
push
test
jno
stos
pusha
lcall
shl
outsl
pop
add
pop
dec
lods
lret
ja
pop
cmp
xor
sbb
pop
repz
sub
fadd
add
xor
mov
push
pop
jns
mov
pop
mov
push
repz
add
jae
fs
std
inc
pop
add
jns
dec
iret
pop
je
mov
jmp
outsb
mov
aas
mov
mov
fimull
rcll
pushf
pop
sbb
mov
adc
mov
aaa
fisttps
test
or
dec
push
lods
sub
loop
lods
fnstsw
and
cmp
cmp
jl
or
push
cli
inc
lock
call
jne
sarl
jae
in
paddsb
inc
push
or
outsl
dec
sti
mov
dec
pmulhuw
out
fwait
insb
sti
pop
xor
mov
call
jno
shrl
mull
jle
xchg
adc
xor
jo
and
cmpsb
sahf
sbb
jle
outsb
imull
push
cs
ret
mov
push
hlt
push
test
test
inc
roll
mov
out
cltd
xchg
insl
push
movsl
xor
mov
dec
repz
fisubl
adcb
or
or
sarl
pop
adc
and
pop
xor
mov
fwait
adc
pop
mov
xchg
cmp
jg
sub
mov
inc
popa
int
mov
cmp
xor
lahf
push
and
es
pop
int3
add
sahf
dec
push
popa
mov
pop
xor
jb
loope
inc
mov
sarb
adc
mov
jne
cmpsb
fnsave
cmp
jnp
out
xchg
cmp
stos
jecxz
mov
sub
pop
jmp
cmp
pop
jo
fmull
dec
push
inc
fwait
push
pop
add
mov
fnstcw
pop
nop
mov
mov
mov
xor
cmp
enterw
or
mov
mov
ss
add
aad
sbb
mov
aad
push
inc
mov
outsl
lods
fwait
jg
mov
jbe
arpl
insb
ret
inc
add
push
movsb
mov
inc
test
insb
pop
pusha
and
in
cmp
insb
add
mov
repnz
mov
js
push
aam
mov
cmp
sub
aas
insl
daa
jp
xchg
mov
fnsave
cmp
das
lea
jae
adc
sub
ds
loop
pop
xchg
or
mov
in
movsb
es
cmpl
push
and
jne
arpl
jle
xor
sub
es
gs
mov
ud0
icebp
rcl
js
test
or
aad
jb
outsb
xor
pop
xchg
jmp
xorb
cmp
ficompl
jl
push
pop
es
outsb
lds
int3
sbb
jge
fimuls
fiaddl
loopne
xchg
pop
add
aas
sti
inc
leave
sahf
xorl
push
test
cmpsl
sti
in
push
pop
arpl
and
jnp
pop
lcall
sbb
sahf
in
mov
mov
xor
pop
outsl
pop
mov
sbb
dec
xor
dec
xchg
nop
ret
notb
xor
rcrl
jmp
jmp
jle
les
xor
mov
pop
cltd
inc
push
mov
loope
jge
je
imul
lcall
lret
test
jge
pusha
cmp
jge
mov
inc
aam
mov
clc
repz
jge
je
mov
mov
push
fisttps
pop
add
push
aaa
mov
fistpll
pusha
ret
les
inc
test
jne
outsl
sub
aaa
nop
fistpl
repz
fsubr
lcall
int
dec
addr16
andl
add
mov
add
add
lods
std
xlat
loopne
call
scas
ljmp
sbb
and
pop
das
fstl
movsb
out
dec
cmp
insl
ja
xlat
xor
scas
jge
mov
pushf
scas
sub
inc
pop
lock
or
sarl
hlt
ret
mov
stos
jb
mov
cmp
adc
jecxz
divl
pop
orl
sbb
cmc
out
mov
arpl
in
inc
incl
or
stc
in
xchg
push
jle
sbbl
out
inc
cmp
mov
mov
das
ss
fsubs
fsts
iret
mov
imul
cwtl
stc
add
into
xlat
pusha
mov
lret
outsb
inc
or
jge
inc
jp
mov
pop
scas
mov
mov
in
xchg
xchg
jl
add
jge
sbb
inc
std
jp
movsl
and
sub
sub
imull
adc
mov
cmp
scas
adc
cmp
sbb
bound
dec
sub
jnp
adc
popf
and
mov
hlt
push
popa
mov
dec
je
arpl
mov
add
sti
mov
add
cmp
lods
or
push
or
je
ds
icebp
inc
pmaxsw
add
popl
mov
arpl
pop
xor
cs
adc
push
push
int
sub
jae
rdpmc
orb
add
sbb
and
pop
dec
mov
leave
mov
mov
mov
idivl
nop
mov
push
pop
inc
push
aad
rclb
pop
cltd
in
sub
mov
inc
mov
ret
ret
cmpsl
sahf
mov
pop
and
add
mul
push
les
imul
add
lret
or
and
add
jae
push
out
scas
fcomi
mov
push
adc
jbe
dec
jne
mov
adc
cmp
rcll
out
sbb
cmp
inc
inc
cmp
jbe
adc
imul
xchg
loopne
jo
test
xorl
mov
xchg
pop
ficoms
cmpl
xlat
cmp
movsb
and
add
pop
cli
addl
mov
test
adcl
sub
jbe
js
je
mov
jno
scas
add
es
push
pop
sbb
imulb
movsl
sahf
mov
daa
lock
inc
adc
orb
insb
in
ss
mov
jp
sbb
lock
loopne
push
pop
js
xchg
xor
mov
inc
es
inc
xchg
inc
or
pop
sbb
mov
popa
mov
mov
cltd
sub
hlt
xor
inc
jnp
shrl
in
sahf
push
dec
not
lock
aad
cmp
jge
loop
iret
mov
lds
nop
add
push
push
subb
imul
add
mov
fildll
inc
leave
arpl
add
rol
div
and
pop
inc
test
add
add
mov
pop
push
push
xor
popf
cmc
mov
fimuls
scas
jbe
aam
jo
mov
cmp
inc
mov
js
test
out
lcall
aaa
mov
fimull
aas
dec
mov
mov
test
adc
inc
leave
jl
inc
jns
in
cmpsl
push
movsl
lcall
sti
insl
add
outsb
test
insl
sub
mov
lcall
cs
jbe
sbb
fwait
lds
pop
adc
mov
cld
mov
push
mov
divl
jle
mov
mov
inc
jge
jne
fnstenv
out
mov
loop
loope
cli
cmp
fimuls
push
aas
lods
dec
daa
mov
mov
jecxz
mov
popf
jl
push
push
rcr
and
iret
or
mov
cmp
or
pop
fisubl
dec
jne
mov
mov
fstpl
icebp
xor
fst
xor
jo
mov
filds
in
cmp
lret
or
push
mov
test
pop
mov
pop
push
icebp
lds
cmp
enter
rcl
lods
out
negl
fsubs
push
ljmp
jge
nop
cmp
cmp
iret
in
nop
push
lahf
or
roll
loopne
cmpsl
cmpsl
xchg
mov
hlt
lds
js
xchg
repz
adc
ss
in
andl
xor
into
mov
mov
out
mov
lcall
inc
test
mov
add
push
push
lock
cmp
ljmp
pop
outsb
cmp
push
loope
in
scas
push
jge
cmp
sub
xchg
in
pushf
mov
cld
aad
inc
cs
out
imul
ret
outsl
outsb
mov
jne
lret
cmp
pop
push
fimull
pop
out
sub
inc
mov
frstor
subl
adc
ret
mov
ds
mov
jns
test
mov
add
and
inc
movsb
pop
ds
sbb
pop
daa
cmc
mov
movlhps
das
sbb
loop
and
movsl
xchg
jno
sbb
push
gs
push
pop
inc
mov
mov
cwtl
pop
ja
rcl
cmc
jle
add
adc
ret
scas
test
gs
lcall
dec
inc
movsl
movb
aad
lret
pop
lret
mov
and
fstpt
pop
add
ja
and
sbb
sbb
push
aas
xlat
xor
dec
jmp
out
cs
fmull
mov
mov
int3
cli
stos
jp
in
or
mov
xlat
out
mov
fwait
sub
jge
jg
shr
jbe
std
hlt
cli
fildll
js
outsb
cltd
xchg
add
sbb
lods
dec
jae
roll
mov
mov
lock
ret
inc
sbb
mov
cmp
fistpl
loope
aad
std
mov
mov
loopne
ret
imul
das
pop
inc
add
xor
fcoms
lea
dec
sbbb
insb
sbb
jmp
lahf
adc
aas
sbb
stos
test
cmpsl
cmpsb
lea
push
js
or
mov
or
clc
sub
in
rcrl
inc
push
roll
add
sahf
sahf
mov
jl
xor
or
orb
lock
or
or
in
sub
mov
and
sahf
loopne
outsl
mov
pop
jp
jl
roll
lahf
into
mov
sub
and
sbbl
in
shrb
adcl
sbbb
pushf
add
imul
adc
mov
out
out
add
jl
out
xchg
std
cmp
mov
out
rorl
push
sub
lea
pushf
outsl
scas
mov
sbb
ja
pop
js
sbb
adc
rorl
movsl
and
sbb
or
xchg
cmpsb
add
push
mov
add
popa
movsb
add
mov
and
sbb
mov
xchg
arpl
inc
xor
push
sub
sbb
sub
mov
je
or
jb
mov
push
cmp
gs
sbb
sbb
cmp
fdivrl
xlat
aas
rcll
xor
leave
mov
es
xor
mov
push
fs
cltd
xor
xor
xchg
fdivr
cli
outsl
shrl
cmpsb
cmp
sbb
rcll
ja
jle
sub
xor
clc
push
fisttpll
adc
dec
rcr
out
xchg
jo
sub
jecxz
jmp
push
lds
dec
mov
push
fldl
popf
andl
mov
add
les
adc
rcr
mov
in
imul
jl
mov
sbb
scas
dec
aam
jbe
or
mov
mov
aas
lds
xchg
imul
pop
movsl
inc
mov
xor
mov
jl
jl
loop
mov
and
cmpsb
xor
test
sti
clc
and
hlt
sub
roll
add
fnsave
dec
sbb
dec
fdivrl
adc
push
jns
insb
loop
jecxz
push
mov
push
xor
or
jb
mov
sbb
push
add
mov
fildl
push
pusha
xchg
jle
in
adc
or
nop
xlat
aaa
in
cmp
lahf
push
stos
loopne
push
jg
dec
mov
cmp
js
ds
jbe
adc
cmp
scas
leave
repz
mov
or
mov
cmc
fistpl
daa
mov
pop
mov
repnz
cli
icebp
sbb
cmp
or
fstpt
jge
int
es
and
lods
push
dec
lahf
fdivl
sbb
lock
sbb
int
fnsave
pop
std
mov
lock
push
aad
adc
xor
lea
int3
ret
std
call
sub
pop
aad
imul
jbe
cmpsb
dec
lahf
and
mov
xchg
xor
shlb
sub
fcom
jmp
mov
mov
loop
pop
pop
xlat
popf
mov
repz
add
sub
sbb
jmp
popf
js
cmp
push
mov
mov
mov
ljmp
sti
in
cli
cmp
ds
enter
pushf
jge
cmp
pop
in
inc
inc
jae
fidivl
xchg
cld
shrl
cld
inc
jne
mov
movsbl
mov
stc
mov
mov
in
pop
mov
fistl
mov
mov
loop
in
mov
jecxz
jle
mov
cmp
bound
sub
call
sub
aas
add
cmpsl
or
mov
adc
cmp
xlat
xorb
js
mov
arpl
arpl
pop
cmp
ss
lods
mov
ds
mov
cmpsl
mov
xchg
pminub
cmp
sbb
or
es
mov
stos
sub
jecxz
in
scas
dec
inc
aaa
pushf
scas
loop
cmp
inc
ffree
ja
and
lcall
or
mov
jae
fiadds
imul
outsl
call
icebp
out
xchg
out
or
adc
dec
add
sbb
sub
inc
add
sahf
test
jb
adc
sub
mov
sub
xlat
and
rcl
sti
bound
cmp
mov
pusha
inc
test
xchg
test
fcom
pusha
mov
mov
jg
sarl
fistpl
test
add
cwtd
push
filds
jp
xor
repnz
and
xor
shlb
test
out
push
jne
je
in
faddl
mov
mov
je
jmp
aaa
cmp
adc
inc
pushf
cli
cmp
test
mov
or
sbb
lods
insb
dec
pop
push
mov
push
rcl
inc
mov
aaa
lods
push
pop
mov
xchg
mov
xchg
std
aam
jne
jg
sub
cmp
push
dec
cld
outsb
sbb
das
sbb
ret
test
add
jae
fstl
add
ret
loope
pop
push
mov
negl
mov
test
jg
fstpl
xchg
or
dec
push
xor
jp
rolb
mov
fwait
cmpb
popa
sbb
fistpll
ret
dec
cli
mov
push
les
mov
sarb
cld
xchg
test
push
jecxz
xor
push
insb
pop
push
dec
clc
push
pop
movsl
inc
inc
jo
sbb
pushf
push
sahf
lahf
les
ret
scas
xchg
pop
call
test
pop
call
movsb
add
daa
lcall
mov
jge
femms
popf
push
outsb
push
es
pop
cmp
pop
outsb
inc
jmp
hlt
dec
mov
shlb
daa
adc
ja
cli
mov
fldcw
jnp
cmpb
sarl
fstp
imul
popa
je
inc
xor
inc
daa
mov
add
jg
xor
add
jecxz
xor
adc
insb
and
jp
xchg
xor
adc
and
popa
insl
cmp
jnp
and
dec
xor
and
cmp
inc
xchg
cwtl
mov
aam
fucomp
lock
shlb
cwtl
arpl
inc
loopne
mov
aad
lcall
scas
adc
cmp
cmp
ror
or
jle
push
xor
xchg
clc
call
daa
aas
cld
sbb
inc
popf
lock
jne
jge
test
add
pop
mov
fcom
jnp
add
push
aam
stc
dec
add
inc
xchg
repz
lods
jnp
cmp
clc
cmp
pop
mov
adc
push
sub
xchg
mov
cmc
or
ds
adc
negb
pop
lods
xorl
aas
lock
and
pop
mov
stos
sub
pop
inc
or
sub
ret
test
inc
call
mov
mov
push
cmc
das
mov
std
jmp
adc
aam
shlb
ss
push
and
repz
xor
imul
lret
jo
pop
sbb
mov
inc
nop
mov
xor
mov
xor
and
fmull
mov
clc
sarb
jge
push
adc
out
test
sbb
fwait
paddsw
loop
mov
fcompl
add
mov
jecxz
arpl
cltd
cli
pop
and
icebp
jp
out
sub
jb
jbe
icebp
out
gs
lcall
mov
pop
add
ljmp
lcall
shl
and
mov
mov
mov
add
sbb
jg
add
ret
xor
out
lods
sub
mov
imul
pop
bound
push
popf
jnp
mov
outsl
enter
mov
mov
push
xor
push
cwtl
ret
pop
mov
addl
inc
mov
sbb
ret
fiaddl
hlt
push
dec
scas
adc
movl
cmpsl
jecxz
stos
not
jne
loope
mov
xchg
popf
je
mov
aaa
cmpsl
xor
mov
es
js
add
adcl
les
pusha
int
and
add
repnz
mov
jae
fsubrp
sub
inc
cld
in
mov
and
xchg
adc
push
mov
jmp
lahf
push
inc
xor
mov
xor
sarl
rcrl
int
mov
pop
popf
mov
scas
outsb
push
sbb
into
xor
mov
notl
ret
dec
xor
cmpsl
fdivrs
clc
inc
adc
cmp
test
sub
rorb
out
xchg
ljmp
or
fs
repnz
pop
aad
push
cli
ja
sbb
mov
mov
loope
dec
pop
push
test
or
cmpsb
jl
rcll
je
mov
pop
aas
pop
aad
push
enter
sbb
and
fdivrl
daa
fdivrs
ja
mov
pop
in
xchg
imul
fldl
inc
arpl
orl
call
iret
sub
scas
fidivrs
cmc
mov
mov
fstpl
jnp
or
bound
punpckhdq
jl
pop
sbb
shr
dec
push
xor
ret
jns
xchg
ret
scas
cmp
sbb
push
sbb
mov
cmp
mov
pop
ret
pop
or
inc
mov
icebp
pop
pop
add
pop
adc
inc
sti
pop
lods
ljmp
mov
mov
cmp
rclb
lret
jecxz
xchg
icebp
ljmp
sbb
mov
mov
mov
xor
rol
fwait
adc
mov
aaa
lock
aad
or
adc
jmp
out
mov
and
jle
mov
mov
sbb
adc
or
push
xor
pop
mov
lock
mov
imulb
std
xchg
out
lds
xchg
add
les
cli
jecxz
xor
imul
ljmp
pop
pop
aad
jle
add
mov
shrb
sti
ficomps
and
stos
in
mov
mov
cli
idivl
stos
cmp
cmp
cmp
mov
clc
xchg
xor
je
icebp
pop
out
jecxz
pop
dec
addr16
aam
push
insl
sbb
int
es
xor
outsl
xchg
jl
jae
pop
shl
mov
sub
test
xor
pop
lock
push
fbld
sahf
pusha
jae
and
sahf
push
mov
jg
in
inc
test
lahf
sub
sbb
test
int3
idivb
cmp
mov
jnp
std
jp
sbb
out
scas
and
adcb
ja
lret
daa
mov
aas
mov
mov
dec
mov
add
mov
in
push
ret
pop
jecxz
loop
inc
inc
mull
test
mov
jle
fisttps
scas
mov
jle
jnp
and
test
adc
jmp
or
daa
jg
add
dec
shlb
in
cmp
push
dec
inc
cmpsb
pop
shll
mov
mov
jae
aaa
testb
pusha
out
popa
arpl
adc
jmp
daa
xchg
pop
inc
xorl
sti
fbld
add
mov
imul
es
pop
out
fisttpll
test
cltd
xlat
mov
xchg
push
scas
add
jl
push
xor
mov
arpl
sti
push
xor
insb
aaa
jge
loopne
into
fmull
dec
popa
xchg
out
adc
jae
and
sti
sbb
jbe
xlat
sub
xor
xchg
cli
aaa
shll
vandnps
xrelease
cld
push
pop
lret
cmp
xlat
pop
fildl
push
std
inc
pop
stos
gs
in
mov
and
add
call
jb
iret
testb
pop
cmp
out
mov
sbb
xor
flds
sti
and
stos
jmp
scas
and
cmpsl
scas
cli
xchg
mov
cmpsl
movsb
jp
push
push
pop
push
push
testb
mov
insb
cld
rorb
mov
xor
jns
imul
cmp
insl
mov
or
cli
fsubl
xlat
cmp
sti
inc
repnz
dec
cltd
jns
mov
loopne
jo
push
push
mov
or
push
js
jl
and
push
xchg
jbe
fs
sbb
insl
push
mov
mov
outsb
jle
mov
mov
pop
rol
negl
mov
in
shrb
aaa
jge
cmp
mov
inc
mov
iret
xchg
fidivrl
push
pop
lock
loope
movsl
or
mov
js
movsb
or
dec
addl
adc
pop
cmp
sbb
neg
dec
sarb
cmp
sti
xor
push
rcl
das
aas
out
std
rol
adc
inc
nop
outsl
pusha
inc
jge
inc
adc
pop
inc
xchg
add
lds
jmp
mov
xor
in
sbb
mov
call
and
mov
add
imul
push
mov
push
jl
popf
ss
ficoml
push
push
pop
pop
cmp
inc
lahf
lds
push
jge
and
dec
icebp
mov
imul
cwtl
fstpl
push
adc
pusha
mov
sbb
imul
dec
sahf
lods
mov
and
xor
sbb
cld
mov
mov
cltd
pop
sub
lahf
lock
or
mov
cld
js
xchg
sbb
pop
and
xchg
lods
mov
aas
xchg
testb
jp
fistl
sub
and
and
cmc
mov
xor
ret
je
add
jle
jbe
xor
dec
aaa
imul
fdivr
outsb
rorl
sahf
add
cmp
lret
clc
mov
je
sbb
mov
jl
or
clc
sbb
xlat
lock
shlb
push
outsl
mov
adc
sarb
out
outsb
nop
test
mov
leavew
cmc
fdivrl
inc
mov
and
cltd
cwtl
cmp
mov
or
outsb
pop
sbb
jmp
mov
add
push
mov
cltd
sti
mov
fimuls
inc
mov
enter
imul
jmp
sbbb
decl
out
jmp
enter
imul
mov
cmp
push
sub
insb
jg
sbb
repz
add
loop
je
mov
mov
mov
or
and
add
sbb
xlat
push
push
stc
test
sbb
inc
roll
push
mov
jl
std
jae
add
in
push
sbb
repz
fstpt
pop
inc
clc
andb
push
jecxz
and
mov
outsb
sbb
cs
daa
fidivl
lods
push
cli
jnp
pop
into
aaa
and
jmp
mov
or
stos
fistl
mov
ss
ljmp
sub
movsb
or
jno
idivb
in
mov
arpl
mov
push
or
jl
cmp
outsb
addr16
shll
nop
jl
xchg
or
xorl
movsb
pop
mov
push
mov
cmp
jmp
fists
jo
mov
or
jnp
or
dec
or
fimull
enter
pop
add
mov
sub
ficompl
scas
ret
hlt
rolb
sub
inc
sar
mov
and
mov
mov
gs
push
cmp
mov
in
shll
sbb
pop
test
sti
cmp
aas
ss
subl
gs
call
jg
imul
lret
push
mov
and
xchg
movsb
outsl
push
pusha
mov
sub
sbb
andl
push
mov
inc
popf
es
ret
add
push
sub
cmp
mov
insl
cmp
xlat
mov
mov
xor
jg
hlt
rolw
andb
mov
jp
pop
mov
mov
add
or
test
or
lock
xor
mov
mov
lret
pop
xchg
loopne
data16
lds
sahf
push
out
push
xchg
mov
add
jne
xchg
loope
pop
lret
xchg
push
push
and
roll
insl
loope
xor
mov
dec
cmpsl
out
and
movsb
std
cmpsl
mov
call
rorb
and
inc
in
outsb
mulb
pop
push
jle
addb
andl
pushf
mov
sti
fdiv
loopne
or
or
in
mov
popl
lret
or
jmp
mov
inc
xor
mov
mov
mov
or
or
adc
or
stos
aaa
jae
das
jae
push
icebp
loopne
sarl
adc
sbb
or
stc
std
mov
xor
popa
xchg
cmp
test
jae
sarb
and
out
call
sub
cwtl
rol
cmp
in
pop
in
lcall
cmpsb
mov
loopne
scas
pop
push
cmpsl
inc
leave
cmp
pop
add
aas
pusha
lock
aam
dec
lock
orb
pop
je
cmc
pop
xlat
int3
and
mov
push
mov
mov
into
push
mov
insl
xor
add
and
in
scas
jne
mov
pop
stos
and
cwtl
pop
js
bound
insl
push
push
adc
int
jb
cmp
inc
fcmovne
out
sbb
stos
or
sub
push
insb
enter
and
scas
sub
cmp
push
std
mov
cmp
faddl
jb
cmpsl
mov
inc
lahf
aas
mov
push
mov
aad
jmp
cmpsl
int
in
mov
xor
jmp
rol
test
sbb
lea
sub
and
repz
xlat
rorl
insb
popa
ja
add
jge
mov
ret
ret
cmp
push
dec
outsl
int
pushf
jo
cli
or
mov
add
jle
or
sti
mov
mov
fistps
andl
cmp
jecxz
xchg
add
cmp
xorb
jo
or
lods
sub
aam
push
vrcpps
mov
xor
push
jae
rorl
mov
fyl2xp1
iret
add
int
or
adc
cmp
adc
or
pop
stos
or
daa
jge
jo
cmp
cmp
inc
jecxz
inc
xlat
jo
jno
jmp
sub
cmp
lea
jb
lock
in
mov
mov
lock
jmp
jecxz
in
mov
lds
cmc
mov
call
jle
jp
dec
jne
loope
cmpsl
lods
outsb
push
cmp
sbb
mov
inc
xchg
xor
iret
mov
popa
or
fwait
adc
inc
shlb
xor
sbb
out
or
push
maxps
cmp
aad
je
cltd
stos
or
cmc
mov
test
xchg
mov
sbb
imul
aas
stc
mov
adc
mov
fimull
out
jno
imull
pop
fsubrp
inc
adc
sarl
imul
arpl
stos
or
pop
jg
and
hlt
mov
sti
xchg
stos
mov
sbb
xor
mov
adc
popa
sbbl
test
icebp
jae
jp
ret
sarl
aas
mov
pop
fstl
mov
push
mov
inc
aad
dec
fwait
push
out
adc
sti
lret
cmp
ds
int3
jne
test
push
push
jle
stos
dec
mov
push
inc
push
js
ret
pop
pop
xchg
or
adc
imul
jo
adc
jecxz
scas
call
or
in
inc
int
mov
push
inc
addr16
jo
xchg
and
stos
jnp
jb
or
lcall
pop
pop
clc
sahf
and
cmp
je
mov
testl
push
aas
fcomp
mov
push
rcll
and
xlat
popf
add
imul
aad
out
inc
sahf
cmp
clc
inc
adc
xchg
jg
xor
insl
roll
push
fdivrl
mov
call
int
lret
sub
and
notb
or
mov
in
cltd
mov
sarl
adc
sti
jno
out
xchg
jnp
sbb
call
dec
out
push
test
xor
jnp
adc
notl
int
and
sti
cmpsb
ror
sub
int3
lea
fldt
mov
adc
dec
push
loop
xlat
push
sbb
mov
test
sub
lahf
push
mov
dec
or
pop
adc
scas
sti
xlat
pop
cmpb
dec
jno,pn
daa
push
jne
jp
or
xorb
add
push
inc
scas
scas
fldl
jae
fsin
addr16
ds
lret
fstl
mov
jne
imul
maxps
push
insb
iret
xor
and
jno
dec
mov
call
xchg
push
push
push
int
jno
sahf
and
aad
jo
push
lods
cmp
mov
inc
dec
fsts
test
insb
push
iret
gs
sbb
adc
and
ficoml
xor
clc
push
outsl
fwait
sbb
insb
das
stos
mov
push
dec
push
sub
out
mov
jmp
movsb
xchg
and
fcomp
adcl
and
aas
imull
dec
sub
jne
inc
jl
sub
and
dec
int
enter
addl
mov
sbb
popa
dec
add
mov
mov
add
sarl
sub
jb
sub
pusha
jno
inc
mov
and
adc
clc
jle
and
jns
scas
fidivl
aaa
ds
pop
jecxz
jnp
jnp
cmpsl
or
cmp
js
movsb
fbld
pop
das
mov
jp
add
jge
loope
xor
mov
cmpsb
add
jbe
scas
insl
jnp
mov
aam
sub
sbb
in
out
ret
adc
es
inc
or
cmpsl
lret
mov
sub
lret
clc
in
test
jle
and
fadd
mov
imul
push
xor
out
fcoml
hlt
nop
sub
clc
mov
jo
mov
mov
test
ja
ficompl
mov
push
inc
jp
xchg
cmp
in
clc
daa
or
adc
pop
xor
dec
jecxz
psubb
ja
in
aaa
mov
jge
xcrypt-ecb
cmpsl
mov
xchg
lret
scas
add
ja
or
sub
inc
inc
mov
adc
mov
ljmp
sti
cmp
jo
pop
xchg
gs
mov
add
dec
scas
adc
xlat
mov
ss
das
jbe
call
leave
mov
and
mov
roll
out
dec
and
add
pushl
mov
loop
fistl
mov
sbb
lock
popa
sub
in
lret
lret
jecxz
fidivrs
inc
ds
mov
mov
jnp
scas
fidivs
mov
jmp
mov
push
lcall
in
ds
test
push
xor
mov
cmc
mov
arpl
sub
dec
or
paddsw
test
lret
inc
cmp
cmp
pop
mov
cmp
or
mov
sbb
push
les
adc
cli
cs
inc
and
imul
test
pop
inc
fdivrs
push
outsb
call
push
out
lock
mov
jae
dec
les
adc
inc
jo
cmc
aam
cmp
xor
pop
cmp
mov
lods
cmpsl
in
ret
cmp
mov
xlat
dec
fisubs
xor
in
in
lcall
ds
ljmp
mov
aam
and
movsl
and
xchg
sub
daa
pushf
fbstp
add
and
or
ljmp
push
xor
push
bound
xchg
push
inc
inc
mov
lea
sub
js
scas
push
and
mov
pop
inc
lods
inc
pop
mov
push
adcb
xorb
push
pop
fcom
xor
ret
adc
jp
inc
jl
std
add
leave
sbb
ljmp
push
cmpsb
in
ljmp
xchg
or
cmc
pop
adc
arpl
xchg
leave
imul
in
test
jnp
mov
nop
sbb
adc
jp
add
imull
dec
push
xchg
add
or
dec
or
and
fnstcw
filds
push
mov
inc
cmp
xor
push
pop
or
inc
add
push
inc
insl
add
sbb
jae
cltd
pushl
cmp
mov
xor
lods
mov
push
adc
rcrl
mov
cmp
int3
and
cmpsl
sbb
mov
out
add
stos
xor
call
sti
ret
addl
sub
inc
mov
and
packsswb
arpl
mov
je
fcmovne
dec
mov
sti
xor
out
mov
call
and
mov
lahf
stos
icebp
xlat
xchg
xchg
icebp
mov
cmp
icebp
icebp
cmp
scas
mov
scas
pushf
adc
out
jge
cs
inc
mov
dec
mov
sbb
xchg
fsubrs
mov
add
xlat
int
cmp
ja,pt
pop
mov
lcall
push
lods
mov
sub
mov
or
mov
clc
rcrb
mov
mov
arpl
xchg
sbb
and
push
nop
movsb
inc
jl
cs
and
movsb
sub
fwait
ss
daa
test
and
rcrb
cli
adc
sub
aad
and
cmp
sub
dec
nop
cmp
mov
sbb
xlat
cmp
pop
movsb
stos
xor
test
cmpsl
jb
xor
loope
inc
mov
into
push
stc
xor
mov
xor
sub
je
cmpsl
push
mov
bound
dec
jne
lcall
jp
jle
lods
ja
and
cmp
scas
jno
push
divl
loopne
jnp
xlat
not
add
dec
adc
addr16
ss
mov
test
lahf
or
js
aaa
adc
lods
jge
jg
test
dec
mov
cmp
mov
das
mov
fildll
adc
mov
ljmp
push
push
inc
sbb
pop
call
or
jle
imul
std
cmp
arpl
push
sbb
inc
xchg
mov
add
pop
sbb
jno
loopne
pushf
stos
outsl
dec
fistpl
idivb
or
scas
cltd
pop
sub
sbb
cmp
mov
aam
mov
inc
mov
jmp
jle
jnp
insl
out
bndstx
add
fdivr
pop
int
cmp
xchg
out
repz
out
add
mov
movsl
inc
scas
inc
push
add
cmp
sub
inc
xor
mull
in
sahf
jmp
xor
xchg
or
pop
add
cli
dec
jge
mov
call
inc
das
arpl
gs
push
outsb
mov
push
xchg
mov
loope
dec
jecxz
mov
and
cmp
pushf
fistpll
addr16
xor
iret
jbe
jp
inc
ds
vpmacsdd
je
xlat
jge
xchg
mov
cs
fnstsw
add
sub
sbb
dec
aam
pusha
ret
cmp
mov
je
push
sti
push
and
ja
inc
rorl
imul
mov
sbb
std
test
ret
clc
shll
shll
enter
add
ret
int
rcl
xchg
pop
push
xor
sar
xchg
mov
or
js
cmp
mov
das
into
mul
sub
pop
out
jnp
jmp
sub
xor
sbb
pop
loopne
movsl
aaa
out
cmovo
test
lret
mov
cmpsb
icebp
out
adc
cld
mov
ss
pushf
stc
pop
daa
popf
ss
sub
sbb
clc
dec
and
fisttpll
and
and
mov
mov
mov
mov
rcll
rolb
cld
ret
into
stos
add
sub
sbb
cmp
bound
popa
ret
fldpi
inc
mov
cmp
jle
negb
cmp
sub
jmp
pop
lods
and
sarb
mov
lcall
aas
jno
fmuls
xor
int
fnstsw
stos
xor
mov
stos
push
arpl
add
jne
xchg
xor
mov
jl
je
clc
loop
push
test
sbb
mov
sbbl
adc
add
pop
fnstsw
pop
sub
xor
pshufw
xor
out
xchg
lock
jg
mov
push
adc
push
mov
ds
sub
cltd
lods
mov
scas
mov
mov
cmp
test
mov
insb
fstpt
adc
sub
mov
sbb
aas
aas
repnz
inc
divl
lahf
and
sub
add
xor
pop
mov
mov
lods
sub
pop
out
pop
and
jg
aas
inc
cmpsb
push
and
dec
dec
dec
sbb
lods
in
push
sub
dec
sub
sbb
aaa
cmpsl
sub
out
add
int
lret
pop
sbb
hlt
inc
inc
out
stos
std
sub
cmp
fstpt
sub
push
aaa
mov
push
mov
jp
adc
pop
pop
aaa
mov
shlb
bound
mov
pop
out
jp
and
jae
loopne
adc
fisubrs
sbb
out
push
pop
push
fwait
adc
sub
jg
push
rclb
popa
xlat
sbb
dec
jge
jg
popf
pop
mov
stos
xchg
gs
pusha
push
fdiv
out
imull
in
test
add
pop
pop
xchg
ds
sub
mov
cmpsb
push
inc
and
sub
ret
lea
xor
std
aaa
fsubr
out
or
mulb
sub
ror
rolb
adc
lock
or
inc
push
mov
ds
adc
xor
inc
mov
xor
and
ljmp
mov
lds
shlb
pop
aas
xlat
mov
daa
push
arpl
and
push
jp
mov
push
testl
or
mov
imul
popa
dec
das
xor
and
fwait
in
add
addr16
dec
lret
and
push
xchg
push
xchg
adc
cmp
dec
out
das
adc
or
mov
sub
sti
or
sub
jecxz
dec
outsl
pop
push
and
cmpl
fidivl
push
xorl
fimuls
lahf
inc
cltd
push
add
addr16
inc
pop
fistpl
sahf
stos
sahf
mov
ret
push
fucomp
sub
aas
dec
mul
or
test
jne
pop
mov
arpl
cmp
jbe
fucomip
dec
pop
dec
je,pt
lea
and
outsb
loope
dec
pop
adc
pusha
daa
in
xchg
faddl
mov
fldl
add
mov
xchg
nop
lcall
pop
sub
dec
ret
out
cmp
and
dec
pop
mov
icebp
inc
arpl
xor
scas
jbe
cmp
cmp
stos
imul
roll
pop
stos
shll
sub
or
jge
aaa
push
fidivs
mov
mov
jbe
test
hlt
adc
fadd
cmpsl
test
or
push
sbbb
push
enter
jl
js
cwtl
push
js
push
aaa
adc
sbb
xchg
mov
test
sub
jp
ja
cmp
add
jge
out
jl
xor
ss
xchg
and
cmp
rcll
outsl
leave
lods
xchg
iretw
mov
cld
sti
pop
xorl
jmp
arpl
sub
movsl
test
cmp
sub
mov
paddusw
rorl
add
cmp
insb
test
mov
push
cmp
cmp
das
enter
adc
aaa
js
popa
in
mov
cwtl
loope
inc
add
jo
pusha
loopne
sbb
stc
xor
lock
push
ja
loope
xchg
push
xor
cld
mov
in
mov
push
add
sub
std
cwtl
out
sbbl
push
jecxz
hlt
aaa
lods
sub
mov
fildl
call
lret
pop
ret
pushf
fdivs
pop
cli
scas
xor
mov
insl
test
das
dec
or
push
push
in
addr16
or
mov
ss
ret
popf
jle
rorl
adc
and
cmp
add
pop
xchg
lods
cmpsl
shlb
jno
adc
cli
push
mov
adc
or
dec
mov
jp
push
in
mov
movsl
test
sti
loope
rorl
or
and
and
jbe
mov
or
pop
mov
adc
jb
fdivrl
xor
aaa
and
push
popa
ja
xchg
and
adc
mov
xchg
adc
jle
cmp
mov
jmp
cmp
cmpsb
jle
insl
ret
test
test
loop
lods
cld
push
push
aas
bound
ljmp
sub
xlat
jp
je
pop
call
into
add
shl
mov
mov
sub
cltd
adc
sti
out
fwait
mov
dec
jge
jnp
push
and
cmp
sub
dec
loope
cmp
sti
imul
iret
sbb
mov
cld
je
xor
arpl
mov
stos
pop
cs
test
loope
mov
adc
pushf
or
dec
xchg
shl
add
fcomp
aas
push
mov
ss
outsb
movsb
lods
notb
outsl
mov
lahf
js
popf
cmp
xchg
je
lods
js
test
mov
add
call
fisttpll
sub
cmp
push
mov
lahf
shrl
xchg
jle
fdivl
les
mov
aad
pop
push
sub
pop
jge
jle
push
sbb
jge
andl
pop
out
or
push
pop
lods
jae
insb
icebp
lahf
cmpl
jno
pop
and
cwtl
jno
test
ds
ret
or
inc
ret
es
cmp
mov
adc
mov
adc
push
daa
in
mov
pop
sbb
sub
xlat
andl
test
cli
jmp
fisttps
loop
lds
or
in
add
test
or
imul
mov
xor
int
cli
or
mov
push
es
jae
imul
cs
mov
adc
adc
mov
inc
sub
mov
aad
pop
je
repnz
outsb
and
bound
xlat
mov
push
out
in
and
dec
mov
cwtl
andb
cmp
loopw
xchg
xchg
in
adc
push
fdivrl
aaa
adc
xor
sbb
shlb
sbb
cmp
pusha
mov
push
jp
mov
divl
in
out
xor
mov
in
je,pt
call
inc
push
sahf
fidivrl
sti
stos
inc
or
mov
dec
les
jo
mov
imul
cmp
test
cld
mov
mov
xor
sub
inc
test
and
lds
inc
dec
dec
jne
jne
mov
stc
adc
pop
xor
push
popf
scas
ret
imul
fmul
pop
xor
mov
and
pop
or
inc
repnz
or
jne
cmp
jle
testb
sahf
lret
lret
or
or
pop
ljmp
repz
ss
in
mov
jle
andl
into
jno
clc
ljmp
mov
outsb
mov
daa
sub
cmp
mov
cs
lds
cs
and
pop
je
push
mov
inc
sub
xchg
and
out
add
adc
icebp
push
insb
inc
jecxz
pop
or
mov
or
ljmp
jbe
jae
ret
nop
cmpsl
rcl
cmpsl
imul
jo
data16
and
sub
addr16
mov
movsb
xor
sbb
jo
add
pop
jp
mov
dec
xchg
ja
cmp
sub
add
scas
cli
and
pavgw
das
jecxz
sti
divl
push
sub
rcll
lahf
push
cmp
sub
orl
push
cmpsb
mov
mov
mov
cs
ret
pop
or
push
push
sti
rcr
cli
hlt
rcll
in
pop
sub
int3
shll
ds
xor
shll
out
adc
int
push
dec
aaa
add
ljmp
or
shrb
fwait
add
in
sub
not
loope
mov
aaa
stos
push
leave
add
hlt
mov
pop
push
push
mov
popa
mov
shrl
sahf
aad
imul
imul
fwait
jmp
and
insb
outsl
out
sub
mov
jle
repz
adc
lock
pop
das
add
fistpll
aad
aaa
inc
sub
aaa
add
lret
pop
add
xlat
ret
sbb
jno
sub
js
mov
test
in
or
cmpsb
sub
mov
mov
fwait
ds
add
in
ret
mov
and
mov
xor
push
mov
lret
pop
test
arpl
or
or
stos
cwtl
sbb
lds
lret
stos
mov
loope
subb
cwtl
idivl
test
jge
or
imul
mov
pop
jg
mov
mov
out
fidivrl
dec
movsl
lret
in
or
jb
push
arpl
pop
inc
into
lock
mov
xor
mov
lea
jnp
stos
fldt
pop
imul
cld
stos
mov
cmp
out
pop
dec
aaa
idiv
inc
incb
mov
inc
cmp
loope
scas
frstor
data16
sub
sub
push
xor
push
dec
ret
fnsave
out
dec
jno
mov
dec
sub
mov
mov
mov
or
je
pop
cmp
movsl
mov
imull
mov
ss
xchg
es
pop
mov
test
push
and
inc
aam
xorl
stos
aam
cmc
sti
cmpsb
add
sub
jg
inc
push
mov
xchg
jns
mov
dec
pop
sbb
fisubl
xchg
xchg
sahf
inc
mov
hlt
aad
pop
imul
adc
add
push
test
jo
idivl
jmp
and
jne
push
rcll
ret
fwait
stos
mov
pop
xor
test
sbb
mov
notl
ja
stos
mov
push
add
test
xorb
inc
mov
xorb
jcxz
jo
arpl
sub
rcll
push
sbb
push
cmp
bound
push
push
and
dec
xor
pop
push
out
test
mov
cmp
sbb
pushf
adc
loop,pn
cli
mov
cmp
scas
pusha
loop
js
jns
cmpsb
lret
frstor
loope
repnz
lahf
sbb
jns
fdivrl
inc
inc
or
pusha
ret
divl
inc
jnp
xor
xor
stos
js
xchg
shlb
sub
mov
in
mov
pop
push
inc
mov
add
cmp
xchg
lahf
lret
push
cmp
notl
aad
sar
das
cltd
xorps
dec
sbb
fdivrp
popf
mov
add
cmp
bnd
xor
mov
sub
jle
inc
insb
xlat
pop
push
je
jo
mov
jae
jle
mov
jge
mov
test
mov
mov
jmp
xchg
sti
add
inc
or
aam
das
test
fcomps
mov
cmp
icebp
nop
adc
leave
push
insb
or
pop
pop
fwait
sti
loopne
or
pusha
jb
xor
push
pop
lods
sub
pop
das
sbb
xor
int3
mov
shl
and
jmp
sub
mov
es
xor
add
addl
bnd
dec
orps
sub
sub
aam
loope
in
out
mov
cmpsl
mov
jb
testl
leave
jo
loop
lret
fldcw
xorl
movsb
insl
push
stc
push
jmp
aad
sub
in
cmp
rolb
and
mov
scas
adc
jae
xor
pop
stc
scas
shlb
pop
pop
mov
xor
dec
inc
adc
jmp
pushf
or
popa
inc
out
in
jne
test
test
push
or
jmp
push
adc
adc
mov
inc
pop
in
cmp
inc
cmpsb
xchg
pop
or
mov
pop
in
mov
ret
fcompl
sbb
shrb
psrlq
mov
in
jle
imul
jno
cmpsb
sti
cmp
and
int3
test
dec
sub
or
adc
push
mov
xor
and
push
stos
xchg
aas
test
mov
mov
inc
ret
mov
js
call
dec
xor
sub
mov
adc
js
mov
mov
jae,pt
ds
sbb
int
sub
adc
in
call
out
in
cwtl
or
int3
lcall
adc
or
shrl
xchg
push
mov
stos
leave
aas
pop
mov
cli
xorb
loope
and
out
sarl
call
lods
frstor
orb
push
push
outsb
iret
scas
fsubrs
push
cmp
pop
call
xchg
mov
scas
add
push
fucomp
jae
mov
insl
adc
aad
rol
mov
cmp
clc
adc
mov
mov
jmp
cmp
push
mov
adcb
insl
stos
enter
jp
or
shrb
mov
sbbb
stos
mov
adc
data16
sbb
push
push
ficompl
rorb
je
pop
int
adc
div
aam
repnz
or
jb
ror
jecxz
rol
stos
xchg
dec
jnp
push
div
and
xor
int3
pop
call
ret
cmc
dec
add
stos
jp
mov
les
loope
push
sbb
daa
stos
sarl
sbbb
mov
cmp
roll
fimull
imul
stos
ljmp
inc
inc
insb
mov
test
mov
push
xchg
push
pop
xlat
out
xorl
iret
push
adcb
fsubl
push
add
jecxz
outsb
push
leave
fldenv
sub
pusha
js
dec
add
jp
std
aas
push
icebp
xor
pop
dec
adcl
cmp
sub
sub
jge
scas
out
loope
stos
or
ljmp
mov
ds
mov
dec
add
and
mov
int
fnstsw
loope
js
stos
xchg
call
sub
inc
aas
enter
mov
int
mov
out
xchg
dec
imul
sbb
scas
sbb
or
pop
push
pop
mov
ds
out
adc
ljmp
or
shl
pop
adc
lret
sub
and
inc
cmp
fsubrs
and
mov
jg
fistps
mov
mov
sahf
and
ja
loopne
dec
nop
inc
dec
push
leave
mov
js
fidivrs
add
mov
dec
add
mov
jmp
or
movsb
sub
out
xchg
shl
cli
xorl
pop
cmp
xchg
das
pusha
cmovne
ret
in
or
mov
jl
xchg
mov
jp
add
add
cmp
adc
cmp
test
push
push
xor
int
shlb
es
cmp
ret
jnp
mov
mov
jbe
and
jmp
jmp
dec
push
in
call
lock
pop
xchg
xchg
xlat
loop
jns
sbb
push
dec
imul
sbb
loopne
ljmp
push
sar
idiv
sarl
jl
push
push
mov
sysexit
jl
sbb
cmc
or
adc
in
lahf
cmpsb
xchg
push
push
xchg
jno
int
inc
sub
push
xlat
sub
mov
push
pop
stos
outsb
jo
and
out
mov
push
testl
aas
add
mov
cmpsl
xor
add
cltd
gs
sarl
dec
shld
loopne
dec
scas
jp
jg
dec
adc
call
jo
fildl
mov
and
push
ja
xorl
shll
inc
int3
test
pop
mov
jnp
dec
xor
ret
adcl
out
pop
mov
push
adc
in
xchg
loope
ret
jecxz
sub
sbb
pmullw
jno
xor
push
xchg
gs
mov
xor
push
sbb
push
sahf
lods
cmp
jecxz
cwtl
jp
clc
push
cld
ds
xor
adc
xor
xchg
sub
in
decb
ss
xlat
mov
shl
mov
fmull
sbb
mov
and
fimuls
sub
imul
sbb
js
fdiv
or
pusha
pop
repz
sbb
popa
push
pop
mov
mov
xchg
mov
outsl
add
and
aaa
mov
cmc
adc
cld
pop
pop
mov
out
pop
shr
mov
mov
icebp
dec
rorb
dec
dec
inc
shrb
loop
repz
insb
pop
pop
into
jg
jnp
push
jp
xlat
jge
inc
arpl
sbb
lcall
xchg
push
cld
cmp
mov
mov
xchg
inc
push
xlat
rcl
cmc
cltd
lock
shlb
sub
les
inc
xor
jbe
fildll
cmpb
mov
add
and
mov
push
sub
lds
xchg
fwait
movsb
adc
mov
sahf
sbb
cmp
cmpsl
fcomp
dec
cltd
aam
inc
dec
cld
xor
lds
mov
sub
adc
shlb
imul
out
scas
aad
call
adc
cs
fldt
mov
mov
mov
mov
push
out
movsb
xchg
insb
popf
addb
es
outsb
rcll
popf
js
rcrl
mov
not
idivb
imul
cmpsl
aaa
cltd
popa
push
add
or
cmp
ja
test
jnp
arpl
adc
imul
popa
fildl
scas
cmp
sti
in
dec
xchg
inc
xchg
stos
inc
jl
xor
clc
push
sub
into
add
out
add
push
mov
sub
xor
pop
popf
mov
xor
adc
out
outsb
mov
sub
ret
cs
xchg
mov
iret
and
fcomps
xchg
sti
mov
sbb
adc
or
orl
pop
insb
cmpsb
sbb
mov
scas
lret
insl
sub
add
push
jns
mov
push
cmp
jo
popl
lea
scas
std
mov
daa
xchg
adc
dec
cmc
aad
dec
sub
pop
cmp
add
fldt
push
fidivs
add
xchg
sbb
jge
add
hlt
inc
pop
pop
mov
xorl
add
fsubrl
ds
cmp
in
call
enter
inc
inc
insb
popf
insl
sub
jmp
xor
mov
xchg
int3
jg
mov
std
test
xor
lods
sbb
pop
and
mov
xchg
sub
sarb
jle
cmp
dec
xchg
sub
sub
mov
sti
push
mov
cwtl
mov
cli
loopne
fwait
lcall
push
jl
fsts
and
ret
popf
scas
adc
cmp
push
leave
sub
adc
rolb
mov
jbe
jecxz
dec
cmp
add
jns
sub
push
ss
sbb
je
pop
xchg
cld
fsubrl
outsb
jnp
rcr
cmp
mov
or
movsb
stos
imul
jle
xchg
out
fidivl
lea
dec
cmp
aad
cmp
rcl
arpl
push
insb
fadds
or
adc
in
ficomps
mov
inc
das
sti
lret
jge
lahf
inc
fistps
cmp
pop
jno
add
cs
adcl
cmp
aaa
ret
mov
jo
scas
shrb
das
std
mov
cmp
in
pop
shlb
fbld
sbb
and
std
popf
clc
adc
jmp
xor
pop
hlt
jo
add
mov
daa
testb
std
hlt
inc
ss
imul
mov
lock
adc
repz
sub
mov
mov
cmpsl
xchg
sub
jg
cmp
pop
lods
inc
push
mov
loope
repz
repz
mov
lret
in
jnp
pop
ds
les
mov
les
jbe
arpl
cmp
int3
jo
adc
inc
lods
xor
mov
cmc
fildll
idivl
fidivl
ss
adc
jge
push
jl
stos
or
mov
mov
mov
addr16
or
xor
rolb
jge
add
xor
jae
sub
mov
jno
xor
adcl
ror
aas
adc
push
inc
pop
adc
cmp
ds
sahf
mov
inc
add
xchg
jo
sub
fstpl
jl
cld
push
aam
add
mov
adc
jecxz
push
pop
push
mov
mov
and
dec
cmp
adc
sbb
ds
cs
cmp
int
jmp
test
out
add
adc
inc
cli
lock
pop
xor
sub
jne
mov
jnp
hlt
mov
es
jbe
ja
xor
push
movl
hlt
or
pop
mov
dec
mov
mov
lods
jae
inc
mov
and
shrb
xchg
int
in
es
sub
mov
push
lods
mov
hlt
adc
addr16
push
push
clc
mov
mov
insl
jno
in
mov
and
subl
cmp
push
js
or
xchg
lock
dec
mov
shll
jne
or
in
mov
outsb
jnp
mov
jecxz
mov
sahf
fld1
enter
sbb
or
add
or
cmp
push
insl
mov
jb
daa
add
scas
ss
cmpsl
xchg
or
jp
pop
call
cwtl
or
jmp
ja
repnz
cmc
shrb
imul
aaa
or
add
xor
lock
xchg
mov
es
js
push
mov
ret
xor
dec
stc
adc
push
stos
pop
jl
push
mov
cmpsl
stos
pop
nop
push
int3
in
hlt
jo
mov
lock
ss
sbb
push
sub
pop
ficomps
mov
push
or
push
ja
and
jp
and
sbb
cmp
sbb
add
leave
mov
rol
rolb
or
call
aaa
sbb
sti
into
mov
orb
cmpsl
xchg
add
add
jge
mov
mov
outsb
sbb
sub
sbb
sub
mov
jecxz
sti
addr16
sub
push
or
imul
sahf
mov
add
ret
add
jmp
xchg
test
sbb
jae
js
aaa
subb
cmpsb
movl
cmp
test
push
pop
enter
dec
je
out
divb
jecxz
loope
loope
adc
fistps
and
outsb
sbb
mov
inc
lcall
pop
sarb
mov
aad
mov
loop
xchg
in
ja
jnp
pop
sub
fadds
ja
sbbb
sub
cs
adc
jnp
and
push
mov
into
push
clc
scas
xor
paddsw
sbb
das
stos
sub
mov
sub
add
sub
stos
jnp
sahf
sbb
xor
and
mov
int3
sub
out
popa
lods
mov
fnstcw
scas
jge
xlat
mov
dec
jmp
mov
pop
pop
jnp
cmpsb
mov
mov
pop
dec
jle
aaa
push
xlat
lock
fsts
adc
xchg
adc
shl
test
cmp
xor
adc
mov
leave
xorl
aad
sahf
mov
xchg
jmp
mov
ds
adc
inc
inc
cmp
push
in
pushf
in
lds
push
out
addl
push
movsl
push
iret
shrl
ret
or
xorb
test
aaa
fldl
xor
push
shll
sbb
mov
pop
cmp
rcrb
cmp
adc
popf
push
sub
pop
xchg
sub
cmpsl
xchg
sar
sbb
mov
adc
pop
rorb
jnp
mov
fcomi
ret
notl
mov
add
mov
sub
dec
cld
pushf
xchg
jne
mov
lret
inc
pop
xor
rcrb
sbb
mov
or
out
stos
popf
imul
lahf
movsb
xor
mov
lds
aad
inc
fadds
pop
mov
addr16
cs
adc
mov
cmp
push
addr16
jae
sub
jecxz
insb
jno
mov
xor
jecxz
jnp
aaa
cmp
mov
push
loop
out
sub
xor
mov
xchg
xchg
jo
cmp
sbb
cwtl
stos
lds
mov
faddl
pop
inc
adc
fs
out
mul
sbbl
dec
and
add
xchg
aad
or
pushf
pop
and
sahf
pop
scas
mov
push
fistpl
fistpll
xor
add
iret
add
outsb
xchg
xlat
lret
fs
adc
adc
xchg
outsb
movsb
ljmp
pop
fwait
loopne
aaa
push
pusha
daa
pop
and
push
clc
in
popa
dec
cltd
ss
mov
pop
dec
mov
roll
fwait
mov
call
xchg
jns
imul
cvtps2pi
mov
call
cmpsb
int
outsl
movsb
cli
sarb
mov
enter
cmpsl
stc
jg
jb
dec
push
inc
push
ljmp
sbb
xchg
push
jg
outsl
das
push
test
out
repz
mov
dec
jge
fildl
jp
push
jg
xchg
fisttpl
sbb
ljmp
xor
clc
push
andb
call
cmp
mov
xchg
loopne
jl
sbb
pop
jnp
and
mov
pop
dec
insl
inc
or
jbe
daa
push
fstpt
mov
testb
iret
sbb
adc
mov
inc
imul
dec
mov
and
mov
adc
dec
das
ljmp
outsb
aas
jl
mov
insb
sbb
and
lock
mov
dec
xor
or
push
mov
push
mov
push
cmpsb
arpl
lcall
cmp
sti
shll
ss
aam
xor
lret
repnz
sahf
arpl
aaa
sbb
cmpxchg
outsb
clc
jp
xchg
sbb
xor
sub
push
inc
shl
cltd
ljmp
sti
push
cmp
adc
xchg
jo
dec
shlb
push
or
dec
push
cmp
mov
ss
scas
fisubrl
inc
sti
push
cltd
jp
cmp
fists
and
adc
push
xor
sub
pop
mov
jmp
ja
sub
jmp
add
mov
mov
cltd
mov
orb
outsb
mov
or
roll
cmpl
testl
push
aam
or
test
adc
cmp
rcl
sub
mov
out
push
pop
dec
mov
adc
jmp
out
neg
cmp
divl
imull
cmp
cmp
jmp
inc
jg
pusha
test
ja
inc
fs
lods
fistl
sub
dec
imul
cli
jne
popl
out
pop
mov
repz
xrstors
out
mov
das
or
xchg
mov
mov
pop
imul
mov
jae
pop
push
jb
push
sub
fdivl
outsb
lahf
fldt
icebp
push
sahf
and
sbb
pop
arpl
jnp
and
xchg
xor
dec
ja
out
lahf
movntq
out
lret
mov
mov
pop
jp
shrl
dec
lret
cmp
out
and
and
outsl
iret
popa
push
mov
lods
add
gs
mov
or
mov
inc
loopne
fwait
sbb
lds
mov
xor
add
xchg
fidivrl
repnz
in
loope
jne
fwait
stos
jmp
ret
lret
and
push
test
aas
cwtl
int
pop
inc
lret
sub
jnp
mov
daa
xorl
add
mov
inc
pop
inc
int
mov
mov
xchg
addr16
test
jne
iret
outsl
mov
loope
movsl
mov
sti
and
mov
jbe
movsb
xor
push
push
sbb
outsl
ja
push
push
sub
pop
or
mov
sbb
outsl
out
imul
out
stos
ret
sbb
pop
mov
cld
mov
idivl
jp
out
pusha
mov
aam
jmp
mov
dec
testl
mov
dec
dec
mov
mov
xlat
sub
loope
jnp
sbb
test
push
hlt
ficoms
mov
pop
mov
or
cmpsl
sub
mov
jge
mov
jns
and
mov
jge
enter
shl
aaa
arpl
mov
xchg
jecxz
jae
testl
sbb
cmp
push
add
inc
cmp
pop
or
in
dec
lea
lahf
xchg
and
arpl
sub
dec
cmpsb
das
sbb
je
or
mov
mov
mov
xor
push
popa
mov
or
popf
sbb
insb
imul
movsb
addr16
xor
jmp
repz
cmp
push
sub
sbb
arpl
arpl
inc
mov
sbb
in
outsb
xchg
scas
outsl
inc
push
mov
mov
xchg
add
sbb
mov
movsl
cmp
out
aaa
pop
or
mov
sti
or
test
pop
ja
inc
test
lret
dec
xlat
pop
mov
mov
cmp
loope
sub
ret
arpl
daa
cmp
mov
fidivrl
jnp
cmp
dec
mov
outsl
decb
sbb
out
sbb
mov
ret
sbb
stos
pop
push
xor
addr16
pop
dec
dec
mov
xchg
outsl
fstpt
sarl
mov
movsl
sti
mov
pop
mov
xor
xchg
arpl
jl
fwait
inc
push
outsl
or
push
inc
mov
mov
out
loope
jge
outsb
adc
fisttpl
aam
std
enter
and
dec
jno
sub
test
sub
sbb
lret
imul
cmp
jb
icebp
lea
mov
dec
or
dec
aaa
daa
imul
push
inc
or
add
mov
sbb
sub
dec
lea
sti
sbb
jno
mov
push
jg
stos
add
fisubl
and
xchg
or
das
mov
lock
cmp
xchg
loop
push
dec
dec
inc
push
inc
mov
je
cmp
jge
or
clc
mov
sub
adc
push
sbb
movsb
adc
fisubl
mov
ret
push
xchg
jne
mov
mov
clc
sub
in
insl
call
cmp
out
mov
pop
add
sub
les
add
sub
mov
inc
dec
adc
gs
ss
jl
js
fs
add
loope
aaa
leave
test
stc
fisttps
test
and
sub
mull
out
daa
xchg
push
stos
enter
push
dec
add
loopne
mov
loopne
test
add
jnp
int
or
leave
mov
into
xor
cld
inc
mov
mov
movsl
stos
xor
sbb
test
mov
in
std
mov
xor
loope
fucomp
into
mov
hlt
sbb
sbb
rorb
xor
inc
pop
xor
call
fdivrl
fcoms
mov
adc
cmp
add
leave
sbb
mov
loopne
sub
cli
push
aad
mov
sub
dec
sti
inc
clc
mov
mov
inc
shrb
mov
arpl
ds
mov
dec
popa
stos
mov
cmp
imul
clc
push
out
mov
inc
pop
or
addl
mov
jo
movsb
xor
dec
adc
dec
pop
scas
ljmp
mov
dec
data16
sbb
aas
jo
or
cwtl
push
roll
sti
sbb
push
shrb
dec
jmp
sti
ret
insb
push
push
and
add
sbb
loopne
adc
cmpl
inc
das
push
aas
mov
dec
sbb
dec
mov
sub
cmpsb
insl
pop
ljmp
lds
mov
inc
add
mov
cmp
sub
jge
rolb
jns
int
mov
mov
xor
test
pop
inc
testl
aam
adc
pop
mov
xchg
xchg
imul
sbb
mov
xor
mov
popa
mov
enter
outsb
cmpsl
lahf
add
ds
hlt
mov
mov
adc
mov
fdivrs
fistps
push
or
pop
inc
pop
inc
push
mov
shl
aas
sti
mov
cmc
sarb
ret
jecxz
imul
stos
mov
xor
popf
mov
inc
ss
test
stos
ja
ficoms
imul
aam
dec
sbb
out
fdivrs
lea
clc
std
mov
xor
sbb
mov
inc
cmp
lahf
pop
movsl
bound
scas
out
mov
js
pop
cs
cmp
add
fs
push
sbb
aas
jae
mov
mov
mov
pop
inc
inc
in
mov
jge
shlb
mov
bound
add
fidivl
pop
stos
ja
mov
sub
pop
in
mov
ljmp
stos
jne
pop
pop
xor
push
daa
sti
mov
dec
ret
jecxz
insb
jl
mov
scas
mov
lcall
add
enter
stc
add
stos
inc
lods
mov
cmpsl
jecxz
pop
mov
sub
lock
and
scas
cli
adc
jmp
jge
cmc
sub
push
iret
je
mov
leave
lock
mov
jle
cmp
add
push
inc
stos
es
outsl
xor
pop
xor
sub
lret
xor
div
add
dec
adc
sub
inc
pop
mov
jmp
lret
sub
sbb
ficompl
into
add
and
outsb
inc
aaa
mov
pop
mov
sub
aaa
cmp
mov
pop
out
ss
mov
dec
das
inc
or
cmp
mov
lea
pop
negl
and
mov
jge
loope
or
scas
jae
fistpl
jle
pop
das
rcrb
inc
pop
cmp
and
pop
fsubl
pop
xlat
xor
and
push
pop
aaa
mulb
jo
sub
jno
test
dec
cmp
daa
ljmp
push
push
movsb
pop
aaa
in
cmp
ds
pop
stos
aaa
xchg
mov
aas
or
enter
mov
cmp
mov
int
aam
aas
push
mov
mov
lcall
data16
cmpsb
pop
pop
enter
rorl
sbb
or
xchg
adc
and
dec
ja
aad
mov
sub
cmp
or
int
jae
mov
nop
mov
arpl
sub
sti
cmp
notl
aam
and
ror
fcoms
pop
aas
ss
xlat
outsl
das
sarb
and
repz
data16
fistps
bswap
pop
in
ds
mov
mov
cmp
data16
mov
jge
sbb
inc
jge
roll
call
addl
add
stos
pop
arpl
push
xlat
mov
sbb
mov
mov
out
fidivrs
outsl
sub
pushf
nopl
pop
dec
jnp
push
lcall
inc
cltd
fistpll
orb
pop
push
or
push
mov
fnstsw
test
xor
xor
out
xlat
fnstenv
iret
ja
mov
bound
out
shr
and
pop
sti
and
add
pop
or
inc
mov
pop
bound
pop
or
clc
iret
outsb
fstpt
dec
xorb
xor
xchg
xchg
jnp
xor
sub
clc
stos
inc
xor
jne
xor
pushl
fdiv
loope
scas
jb
xor
rcrl
mov
pop
fidivrl
invd
cmpsl
insb
mov
into
imul
iret
testl
jg
das
ljmp
mov
sbb
test
push
push
or
mov
jmp
rolb
arpl
ds
jb
ds
js
sbb
inc
out
mov
push
loopne
imull
sbb
cmp
imul
ficoml
ret
push
cmp
lret
dec
stos
sbb
jne
lods
fucomi
add
aaa
js
jae
outsl
or
add
outsb
jp
hlt
addl
orb
inc
cmpsb
mov
lods
mov
movsl
out
jb
fwait
sbb
es
add
imul
lret
sbb
roll
add
sbb
sub
xchg
negl
out
cmp
push
dec
xchg
sets
pop
jmp
je
adc
mov
add
in
mov
ja
or
loop
inc
arpl
or
ret
mull
sbb
push
xchg
mov
mov
mov
adc
mov
mov
imul
mov
bnd
faddl
adc
inc
mov
pop
sti
insb
lock
cmp
and
xlat
scas
jmp
xchg
fs
adc
imul
push
pop
lods
and
mov
scas
and
mov
insl
lea
mov
arpl
cmp
cmc
lock
inc
push
sbb
dec
aas
arpl
add
test
xlat
inc
ret
and
out
and
lcall
sbb
jle
lods
jnp
dec
jl
fistpll
add
pusha
cli
test
aaa
call
cld
xor
or
fwait
jge
jbe
jb
mov
pop
pop
aaa
test
mov
loopne
iret
aas
jmp
inc
out
jae
adc
jecxz
popf
pop
mov
mov
mov
clc
mov
mov
push
adc
int3
cmp
adc
mov
dec
push
call
rolb
ret
and
cmc
insb
xlat
adc
fldl
movsb
mov
or
and
jb
sbb
xlat
xchg
sub
and
pop
mov
mov
fcoml
inc
jae
pop
clc
push
mov
inc
mov
idivl
insb
clc
mov
jnp
xor
sub
dec
mov
pop
xor
inc
loope
adc
jne,pt
sti
push
cmp
jno
aas
jg
out
out
mov
insb
testl
jle
fcompl
popf
ss
push
sub
mov
adc
test
pop
pop
dec
popf
mov
xor
shlb
mov
jbe
ljmp
and
popa
movl
sbb
xchg
push
roll
stos
mov
mov
mov
dec
jecxz
mov
aam
ret
sub
out
and
inc
push
bound
cmpsl
scas
sti
push
xchg
inc
lret
xchg
ret
stos
fstpt
jo,pt
cmc
dec
xchg
xchg
jge
push
and
insb
fucom
out
loop
pop
push
add
aam
iret
add
or
mov
jecxz
and
jns
inc
addr16
cmp
fisttps
and
jbe
sbb
pop
lock
jecxz
iret
pushf
add
jmp
sub
and
push
and
and
iret
mov
xchg
popf
shlb
popa
aad
sub
pop
or
jbe
popa
jb
std
xor
sbb
daa
test
inc
adc
cmpsb
fwait
mov
movsb
jb
loop
fsubl
sub
and
pushl
lock
mov
mov
stos
cmp
mov
cmp
cld
sahf
les
adc
sti
pop
and
add
mov
das
sar
mov
and
jecxz
repz
push
movsl
sbbb
xchg
mov
mov
mov
ficompl
adc
add
sub
repz
aaa
dec
add
mov
cmp
addl
movsl
ret
cs
test
jbe
loopne
xlat
repz
orl
aas
xchg
out
sub
scas
mov
and
mov
xlat
mov
stos
dec
fs
bound
je
xor
loope
push
xchg
adc
push
push
push
mov
das
pop
cmpsb
mov
sarl
outsl
pop
call
es
stos
test
jge
out
push
in
xor
out
orl
ret
stos
roll
pushf
push
pushf
sarl
xchg
adc
sub
pop
idivl
insb
sub
jl
pop
sub
adc
gs
ja
cli
sete
imul
in
sub
pop
outsb
cmp
sub
push
neg
mov
and
mov
call
mov
jae
xchg
call
fstps
cmc
lods
jecxz
mov
shl
inc
sti
jo
sub
mov
inc
stc
or
movsb
daa
adc
mov
push
mov
pop
dec
popf
and
arpl
mov
dec
jae
sbb
mov
cmp
mov
inc
ret
ret
out
rcrb
out
stos
fdivrp
jmp
jns
inc
dec
fwait
cmc
jns
dec
repz
mov
ja
xchg
dec
xchg
addr16
or
pop
ds
cmp
std
adc
outsl
pop
fisttpll
sub
stos
fbstp
dec
add
sbb
jg
cmp
push
pop
mov
test
sub
jnp
jae
testl
sbb
push
cmp
cmpsb
outsb
sub
xor
out
sbb
out
mov
jg
aas
mov
cmpsb
test
or
jne,pt
or
dec
and
out
add
sarb
aam
xchg
push
test
std
push
push
or
or
dec
je
mov
inc
lods
adc
add
push
dec
dec
inc
sbb
stos
mov
mov
mov
ret
jbe
sbb
movb
xor
and
xchg
lock
mov
or
fwait
nop
push
lock
rcl
outsb
aam
cmp
mov
jecxz
lcall
xor
push
pop
repz
faddl
cmp
mov
push
fisubl
xor
stos
dec
cvtpi2ps
sbb
jns
insl
dec
inc
pop
jo
jne
ljmp
push
shl
mov
dec
jecxz
into
ret
xor
sub
mov
push
scas
out
sbb
sub
adc
call
ficompl
adc
iret
lahf
pop
js
fdiv
dec
push
push
mov
cmpsl
push
movsb
mov
jb
xlat
xor
dec
mov
mov
repz
aaa
inc
inc
jnp
xchg
and
push
pop
xor
pop
dec
rcll
test
aas
push
sbb
aam
stc
or
sub
mov
jp
sbb
aaa
dec
ficompl
sub
adc
sahf
mov
es
je
ret
imul
adc
inc
mov
or
pop
inc
mov
es
repnz
popf
ds
add
jno
sbb
shrb
lcall
or
cmp
ret
pop
test
adc
jnp
and
outsb
aaa
sub
jnp
js
inc
jne
jge
pop
rcll
mov
push
and
inc
pop
xlat
xor
dec
pop
or
scas
loope
lods
mov
fstpl
inc
add
mov
push
push
cmpsl
push
dec
hlt
aad
inc
addr16
inc
aam
sti
cmp
pop
and
loopne
hlt
inc
loopne
lahf
inc
jbe
lock
dec
es
xchg
sbb
leave
and
ret
into
mov
or
aaa
xchg
clc
cmp
or
xchg
xchg
and
negb
mov
push
push
stos
aaa
sub
xor
push
sub
xchg
mov
inc
outsb
rcrb
mov
mov
add
fldl
push
cmpsb
leave
aas
or
mov
cmp
scas
or
pop
pop
pop
fcmovnbe
xlat
jno
xor
ja
imul
je
jl
sub
fs
lret
mov
scas
sbb
and
enter
adc
inc
adc
mov
jecxz
subl
pop
or
cmp
push
pop
mov
mov
cld
hlt
std
add
push
cmpsb
cmp
pop
pop
std
js
jne
or
inc
inc
inc
pop
xor
and
inc
stc
xor
outsb
cmp
inc
fcmove
fidivl
push
adc
jecxz
cli
jecxz
mov
and
iret
xchg
pop
and
mov
jo
mov
dec
rolb
mov
dec
mov
roll
movsl
add
jg
lods
cmp
or
push
out
push
lods
aaa
xchg
lods
mov
outsb
adc
ja
mov
fisubrl
iret
bound
add
push
stc
gs
pop
sti
out
pop
mov
fistl
pop
cmp
outsb
clc
inc
out
test
js
pop
insl
mov
mov
insl
arpl
loope
stos
imul
sbb
mov
mov
xchg
mov
sub
cmp
outsl
gs
cmpsl
imul
cmp
sbb
xchg
popf
pop
mov
insl
addr16
inc
mov
hlt
pop
xchg
mov
mov
jae
inc
andl
jo
pushf
cmp
jmp
jecxz
push
pop
sub
cmp
sbb
cmpsb
cmp
in
ja
ret
xchg
outsl
or
fsubrs
lcall
mov
jne
adc
or
insl
lods
mov
add
call
push
add
inc
mov
outsb
out
jnp
iret
test
xchg
and
clc
jne
cmpsb
mov
rorl
daa
push
rclb
into
or
movl
mov
sub
mov
adc
bound
lds
inc
pop
jl
pop
add
dec
sbb
popf
loope
mov
dec
jg
inc
push
jae
jge
inc
and
mov
push
add
cmp
mov
pop
dec
jmp
je
inc
negb
testb
fidivrl
inc
lret
imul
mov
je
pop
jbe
mov
jne
dec
dec
lock
insb
movsl
movmskps
mov
hlt
push
sbb
cmp
rclb
cmc
push
imul
cmpsl
push
inc
adc
lds
or
sarl
jge
jne
dec
jne
xor
add
ret
pop
in
inc
push
cmpsl
scas
jge
dec
insb
pop
cli
lcall
mov
xchg
in
sbb
pop
dec
add
cli
outsb
in
jbe
add
jecxz
mov
jg
mov
dec
mov
sbb
out
inc
decb
sub
mov
inc
jo
cmp
jp
out
pop
push
out
cltd
jl
or
js
rcl
cmp
stc
rorb
outsb
adc
mov
jne
sub
add
inc
xchg
mov
sahf
jne
jnp
cmpb
iret
ret
add
imul
cmp
mov
xor
mov
adc
jnp
fadd
mov
addl
push
lds
rcrl
and
mov
sbb
imul
inc
out
xor
mov
jmp
sbb
xchg
xor
fucomi
js
mov
aam
push
inc
sub
pusha
mov
out
cmp
jmp
pop
xlat
adc
aaa
mov
fdivl
notl
xchg
fs
sbb
inc
inc
push
daa
inc
adc
mov
dec
mov
ret
ror
arpl
sub
pop
fdivrl
xlat
rep
xor
sbb
cmp
movsb
ret
repnz
mov
mov
xor
or
dec
fsubl
mov
fisttpll
repnz
leave
pop
inc
cmc
push
jl
adc
std
push
arpl
adc
push
adc
add
push
notl
pushf
ss
mov
sub
inc
hlt
pxor
arpl
clc
xor
sub
xchg
xor
mov
sbb
sti
mov
arpl
sub
and
jl
mov
insb
dec
test
int
sbb
ds
ljmp
mov
push
mov
fsub
xor
sub
xor
adc
mov
push
iret
jbe
adc
or
xlat
mov
addr16
inc
and
mov
xchg
and
int
and
stc
les
testl
and
loop
push
mov
cltd
mov
out
adc
push
add
fnstsw
push
xor
push
cmp
inc
push
in
daa
jle
xor
ja
je
outsb
and
test
adc
rcll
inc
popf
out
gs
hlt
sbb
imul
outsl
adc
xor
into
mov
dec
nop
popf
jge
push
aam
push
mov
dec
sub
jle
aaa
mov
push
shll
jno
mov
subl
dec
test
fsts
imul
push
sti
mov
cld
mov
fdivl
aas
mov
shrl
and
in
push
js
push
addb
pop
stos
pop
aaa
fnsave
cld
add
lcall
ficoml
xor
sbb
add
jns
xchg
jge
arpl
pop
shrl
dec
jg
ret
mov
flds
push
lods
mov
add
or
dec
jle
sbb
mov
push
push
ret
adc
mov
ljmp
outsl
adc
push
add
int
push
pop
mov
ljmp
jg
fimull
sbb
sub
test
fidivl
fsubs
mov
mov
out
dec
or
mov
sti
in
stos
adc
lea
out
clc
hlt
xor
or
jge
insb
pop
in
pcmpeqb
stos
add
sbb
sti
or
roll
sub
add
xor
inc
xchg
mov
rorb
ss
dec
incb
fst
xchg
cmp
mov
aaa
repnz
hlt
add
mov
test
aaa
idivl
jnp
in
push
jg
lock
xor
mov
pop
iret
push
fcompl
jno
loope
jge
mov
push
leave
nop
ja
mov
insb
fldt
lahf
pop
dec
aaa
fidivrl
sarl
lea
pop
outsl
push
lods
mov
rcrl
shlb
xchg
xorl
sub
add
pop
aam
testb
push
or
add
jns
pop
inc
pop
sbb
pop
add
jcxz
shlb
shr
inc
pop
mov
fstl
add
cwtl
dec
inc
fadd
into
cmp
data16
ficomps
aam
ja
das
or
shrl
pop
inc
imull
idivb
cmc
add
push
test
das
mov
in
add
dec
lret
ret
sti
xor
test
imul
daa
ja
sbb
fstps
sbb
add
inc
stos
das
mov
sbb
sti
clc
xlat
hlt
out
inc
imul
je
push
sti
jp
aas
or
push
inc
mov
xchg
sbb
and
mov
mov
aam
loop
dec
push
mov
insl
mov
jmp
sti
or
adcl
mov
dec
pop
xchg
popf
and
push
insb
dec
mov
mov
pop
pushf
leave
movsl
push
aad
mov
hlt
in
loope
xchg
xchg
ljmp
addb
aad
cld
adc
pop
mov
mov
jmp
ja
jl
push
jl
pop
lods
mov
push
lock
mov
mov
pop
stos
dec
mov
jecxz
stc
mov
add
in
jbe
xchg
ds
jb
sarl
lahf
or
or
shrb
cmovbe
leave
jg
mov
jmp
jno
inc
mov
mov
mov
mov
pop
adcl
cmp
es
call
pop
and
je
jnp
adc
sub
mov
push
loop
les
je
push
mov
sub
loop
jge
jbe
in
loop
sahf
mov
pop
iret
aaa
dec
mov
sub
add
jb
rolb
push
xor
mov
in
fcos
push
push
test
cmp
jl
pop
test
push
and
push
ret
scas
xor
mov
rcrb
mov
or
jae
xor
jbe
pop
sbbb
pmaddwd
adc
sub
pop
push
cmp
dec
mov
flds
xlat
je,pt
jbe
and
lcall
ret
sbb
sub
and
xorb
rclb
mov
loop
add
aad
sbb
shl
imul
outsl
loope
jbe
xor
pop
dec
scas
push
push
mov
sub
test
out
push
mov
lret
lahf
je
mov
aas
int3
loop
sbb
sbb
outsl
jge
in
fiadds
test
push
sub
inc
pop
dec
push
pop
dec
stc
push
fbld
icebp
jge
es
lds
push
mov
pop
add
and
cmp
cmpb
je
call
xchg
aaa
lods
adc
sbb
adc
sahf
orb
adc
cmc
pop
fidivrs
jne
dec
lcall
or
pushf
dec
add
xchg
mov
fnstsw
sbb
adc
add
or
mov
adc
cmp
test
mov
popa
cmp
jle
jle
pop
lds
jge
jnp
aaa
lods
sti
or
ds
sub
xchg
jbe
mov
mov
xchg
test
shlb
clc
jp
imul
push
cmp
inc
inc
aam
mov
mov
roll
dec
cmpb
push
sti
mov
inc
push
cmp
das
jbe
xchg
pop
loopne
jbe
xchg
sub
aad
test
imul
ret
int
loopne
sbb
pop
das
pop
mov
push
pop
mov
and
aad
fmul
xchg
push
les
fistl
hlt
sarl
fildll
dec
and
imul
dec
jbe
jae
mov
in
dec
add
add
xor
pop
and
hlt
je
je
shrl
lods
test
dec
and
insl
shl
mov
fistpl
dec
mov
fnsave
or
sub
cmp
xchg
pop
aaa
push
mov
cmp
sbb
adc
and
xor
jmp
or
adc
cs
cmp
addl
int3
mov
inc
mov
lock
call
lds
sti
ficomps
adc
rcll
push
xchg
mov
stos
sbb
scas
or
sbb
xor
outsl
test
mov
jae
hlt
fnstcw
ljmp
sub
outsb
pop
sbb
in
push
mov
cli
imul
jecxz
xchg
ljmp
mov
out
pop
mov
add
shll
orb
push
inc
clc
rcll
inc
xchg
and
jmp
cld
dec
jno
jecxz
push
mov
in
xlat
in
test
es
les
lods
and
dec
lret
in
out
pop
pop
xchg
jbe
cwtl
push
sbb
enter
inc
cmp
dec
xchg
mov
sub
or
push
jmp
and
fldt
push
mov
nop
mov
dec
mov
xchg
in
mov
sub
xor
pusha
addb
dec
and
clc
sub
inc
cmp
pop
mov
iret
je
mov
or
push
dec
out
and
mov
xor
les
rol
xor
fisttpll
add
cmp
mov
sbb
out
inc
pop
sbb
movb
cmp
inc
cmp
jmp
pop
mov
adc
jge
andl
loopne
mov
jle
aas
jp
cmpsl
push
push
sti
les
pop
adc
cmp
in
popa
cli
mov
sbb
sbb
xchg
xchg
xor
sub
lods
xchg
push
jp
jg
jne
insb
adc
sbb
stos
push
mov
or
fs
addr16
jnp
test
dec
sbb
jo
adc
push
push
aas
imul
pushf
mov
mov
push
imul
pop
aas
push
les
loope
pop
in
xor
movsl
out
hlt
out
lcall
mov
scas
push
xor
aas
mov
dec
pusha
xchg
fiadds
dec
or
inc
or
jle
pop
xchg
adc
adc
adc
pushf
pop
cli
sub
sbb
in
test
xchg
sbb
or
into
pop
enter
es
jl
dec
outsb
fwait
stc
pop
sub
xor
femms
xor
aas
addr16
insb
jbe
inc
xor
int
and
aaa
cmp
cmp
das
jnp
cmp
cmp
cmp
inc
jne
cld
inc
stc
aas
das
or
fs
rorb
inc
outsb
das
in
pop
inc
pop
mov
inc
btr
in
dec
pop
fisttpll
cs
mov
dec
decb
out
pop
push
pop
ret
dec
aam
rcrb
sbbb
or
lcall
gs
xor
fnstenv
xchg
pushf
jnp
outsb
das
fs
outsl
pmulhuw
in
fldcw
je
pusha
ja
jp,pt
mov
mov
ja
mov
and
bswap
dec
cs
xchg
mov
mov
pop
fwait
xchg
aaa
cwtl
xchg
pop
jb
fnstenv
cwtl
or
pop
gs
and
cs
jbe
rcrl
sahf
cmpsl
pop
mov
das
mov
shll
repnz
setns
lods
lods
pop
scas
jns
pop
into
pop
mov
pcmpgtw
flds
mov
fnstsw
mov
or
and
das
xchg
mov
dec
ret
in
push
fistpl
pop
fidivl
daa
cmp
lret
pusha
int
int
fistl
add
pop
sahf
je
in
repz
aad
aad
loop
jnp
lret
pop
aad
or
jmp
daa
xchg
sahf
mov
mov
and
out
or
cmp
adc
or
pop
repnz
test
stc
pop
dec
cli
mull
push
cld
or
std
or
or
mul
jbe
movsb
add
or
adc
jb
jbe
adcb
or
adc
das
jnp
and
fisubs
mov
pop
jbe
mov
add
adc
xor
mov
inc
add
addr16
mov
lret
or
lret
and
add
mov
mov
cmpsb
leave
add
dec
mov
pop
xor
inc
dec
mov
pusha
dec
outsb
das
xchg
push
movsbl
jecxz
dec
pop
ss
or
popa
mov
xchg
shlb
insb
psubw
jns
xchg
insl
push
jo
jb
inc
jbe
sbb
out
test
pop
inc
jne
scas
jbe
pop
fsubs
jg
jg
repz
addb
orl
addr16
in
and
lea
mov
inc
std
nop
pop
loope
add
outsl
xchg
pop
jb
mov
fwait
cwtl
jo
jbe
fwait
lret
or
mov
cmp
iret
das
mov
sbb
scas
cmp
ljmp
cmp
pop
lods
pop
icebp
mov
pop
enter
mov
in
and
xor
daa
jne
in
test
paddusb
cmp
sbb
cs
in
mov
sbb
pop
xor
cs
in
test
rorb
lahf
shl
aam
jecxz
ret
aad
xlat
dec
iret
cs
xchg
fcoms
push
movsb
jns
out
and
cmp
dec
adc
jb
pop
xor
add
or
cs
ficomps
in
frstpm(287
add
jnp
dec
push
jmp
test
scas
ud1
or
jnp
repnz
jmp
cmp
pop
cmc
inc
js
std
sar
jbe
pop
add
dec
test
xchg
pop
add
or
sbb
sahf
mov
rcpps
pop
dec
or
or
fsubs
push
ss
jmp
or
pop
stos
adc
fs
test
inc
push
and
and
and
sbb
or
push
jmp
pop
fadd
dec
mov
out
and
clc
popa
das
in
orb
sub
mov
sub
das
jns
sub
sub
jns
sub
or
or
daa
mov
pop
aaa
add
mov
pop
notb
xchg
pusha
cmp
das
adc
shlb
mov
add
adc
nop
jo
ret
dec
pop
dec
jb
cs
mov
pop
mov
mov
das
in
imul
push
sbb
and
fiadds
mov
popa
adc
or
xchg
pop
fsubrs
pop
lock
dec
ss
frstors
lahf
addr16
das
in
push
push
test
inc
divb
jecxz
push
rolb
jo
add
jb
nop
addr16
pop
jae
shlb
pop
push
xchg
and
jp
in
in
mul
push
jnp
addl
pop
jbe
jb
outsl
xchg
pop
jb
pop
inc
outsb
dec
pop
fisttps
xchg
sbb
popf
pushf
add
xchg
jns
pop
dec
popf
pop
sub
out
xchg
cmp
sahf
mov
dec
pop
fcomp
mov
movsl
pop
flds
adc
cli
inc
push
out
xchg
mov
fsubs
mov
mov
cli
or
adc
mov
mov
xchg
insl
cs
sarb
das
cltd
pop
jb
xchg
mov
shrb
in
mov
ret
ret
sahf
das
cmp
pop
adc
xor
nop
addr16
xor
ror
add
dec
enter
aad
or
add
ret
pop
shl
fbstp
fwait
in
jns
mov
or
jmp
xor
add
pop
jbe
sti
sysret
cld
or
imul
adc
nop
add
xor
add
or
sub
vmwrite
in
or
adc
add
adc
adc
dec
pop
test
rorb
loope
dec
in
mov
in
sbb
cli
and
mov
sub
sub
aas
xor
pslld
leave
pop
xchg
xor
add
xor
mov
inc
pop
or
push
xor
imul
aaa
jbe
cs
dec
mov
jae
cmp
sbb
lock
add
sbb
cmp
stc
lods
jnp
lret
pop
inc
add
pushf
xchg
inc
add
or
rolb
or
addb
sub
incl
insb
jae
jb
jo
inc
popa
je
popf
nop
sub
inc
js
mov
add
mov
popf
sub
push
and
sub
insb
sti
decl
dec
outsl
fs
gs
popa
outsb
fs
in
mov
jae
push
imul
sub
insl
in
dec
adc
dec
adc
imul
nop
or
push
imul
fisubrl
dec
outsb
cmp
imul
ja
addr16
into
imul
mov
testl
filds
mov
lods
jge
push
je
pop
gs
gs
outsl
fists
jmp
jnp
aad
imul
dec
mov
jbe
div
adc
xchg
fisttpll
popa
addr16
outsl
jne
pushl
pop
imul
dec
cmp
jne
push
imul
add
and
pop
nop
imul
add
insb
incb
stc
add
pop
inc
sub
add
sbb
jo
pushf
jge
sti
cmp
cwtl
add
inc
or
fnstenv
or
add
xor
adc
fldt
fwait
or
shrb
sub
aaa
and
adc
add
stc
push
inc
dec
inc
inc
js
nop
jmp
cld
jbe
jg
or
inc
push
inc
mov
popf
popw
xor
push
rolb
and
arpl
mov
lcall
imul
imulb
pushf
sub
aad
xor
add
jae
inc
inc
mov
pop
sbb
rcll
push
add
add
incl
add
add
add
add
add
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
