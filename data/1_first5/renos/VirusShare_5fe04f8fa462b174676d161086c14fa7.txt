jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
xor
bound
bound
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
lea
push
call
call
mov
lea
cmp
js
mov
mov
mov
mov
mov
lea
lea
inc
dec
je
inc
inc
xchg
mov
lea
xchg
mov
dec
dec
dec
call
lea
push
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
call
call
call
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
movl
pushl
pushl
mov
push
call
mov
pop
ret
mov
push
mov
add
movl
pushl
pushl
mov
push
call
call
call
call
movl
pushl
pushl
mov
push
call
call
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
lea
push
call
call
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
movl
pushl
pushl
mov
push
call
call
call
call
lea
push
call
movl
pushl
pushl
mov
push
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
mov
cmp
je
call
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
xor
divl
test
jne
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jno
mov
mov
mov
xchg
mov
mov
lea
dec
inc
dec
jne
xchg
inc
mov
inc
dec
dec
xchg
xchg
lea
mov
lea
dec
mov
cmp
je
jmp
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
push
mov
push
call
mov
mov
mov
pop
ret
inc
gs
jb
arpl
fs
jae
add
push
mov
add
mov
mov
mov
mov
lea
cmp
js
mov
mov
mov
mov
mov
lea
lea
inc
dec
je
inc
inc
xchg
mov
lea
xchg
mov
dec
dec
dec
mov
cmp
je
jmp
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
mov
push
mov
push
mov
push
mov
push
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
cmp
je
call
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
mov
sub
mov
cmp
jge
mov
lea
mov
lea
mov
xchg
dec
inc
dec
inc
inc
dec
xchg
lea
mov
mov
mov
lea
dec
je
xchg
inc
dec
dec
push
mov
mov
xor
call
mov
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
mov
mov
mov
call
cmp
jno
mov
mov
mov
xchg
mov
mov
lea
dec
inc
dec
jne
xchg
inc
mov
inc
dec
dec
xchg
xchg
lea
mov
lea
dec
push
mov
mov
xor
call
mov
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
lea
mov
push
mov
jmp
cmp
jge
mov
lea
mov
lea
mov
xchg
dec
inc
dec
inc
inc
dec
xchg
lea
mov
mov
mov
lea
dec
je
xchg
inc
dec
dec
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
mov
lea
cmp
js
mov
mov
mov
mov
mov
lea
lea
inc
dec
je
inc
inc
xchg
mov
lea
xchg
mov
dec
dec
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
sub
add
add
mov
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
lea
pushl
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
call
push
call
mov
cmp
jno
mov
mov
mov
xchg
mov
mov
lea
dec
inc
dec
jne
xchg
inc
mov
inc
dec
dec
xchg
xchg
lea
mov
lea
dec
mov
call
mov
mov
mov
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jge
mov
lea
mov
lea
mov
xchg
dec
inc
dec
inc
inc
dec
xchg
lea
mov
mov
mov
lea
dec
je
xchg
inc
dec
dec
mov
mov
movl
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
mov
pop
ret
lea
push
cmp
testb
mov
shll
ljmp
stos
mov
mov
mov
mov
int3
int3
mov
stos
test
mov
ror
mov
stos
test
mov
shrb
scas
cmpsl
test
int3
xchg
scas
rcrb
mov
int3
movsl
scas
mov
ljmp
int3
movsl
int3
scas
int3
mov
int3
test
std
int3
dec
ljmp
int3
int3
int3
int3
int3
lahf
inc
sub
xor
cmp
or
cmp
lock
sbb
mov
sahf
in
mov
into
in
mov
enter
loop
mov
in
in
mov
out
mov
add
mov
cli
in
mov
test
mov
imul
int3
inc
xor
test
ret
inc
xor
mov
ret
inc
xor
add
rorl
out
rol
int3
inc
xor
in
imul
int3
inc
xor
shrl
rorl
leave
imul
int3
inc
xor
iret
std
or
xor
xor
xchg
xchg
or
inc
add
inc
adc
or
mov
or
inc
sub
add
pop
inc
popl
sbb
inc
mov
pushf
inc
popl
popl
pushf
mov
add
mov
inc
vpmacssdqh
add
mov
pushf
inc
popl
pushf
xchg
inc
vpmacssdqh
inc
iret
cld
int3
int3
int3
inc
xchg
inc
test
inc
clc
int
sub
cmp
cmp
dec
int3
int3
int3
inc
adc
adc
mov
int3
leave
push
sbb
adc
int3
int
sub
and
or
int3
cmpsb
int3
cmpsb
int3
inc
and
enter
pushf
inc
popl
pushf
add
and
mov
cmp
push
pop
int3
int3
int3
inc
and
int3
rcl
and
int
sub
xor
and
fmul
vpmacssdqh
mov
int
sub
xor
and
fmul
vpmacssdqh
mov
dec
rcr
xor
out
cmp
int3
int3
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
and
inc
lahf
xor
into
inc
sbb
sbb
or
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
dec
sub
dec
xor
inc
xor
int3
mov
loopne
and
enter
idivl
cmp
inc
cmp
mov
int
sub
xor
popl
inc
adc
int3
cmpsb
faddl
add
or
pushf
inc
popl
pushf
xchg
movsb
int3
dec
int3
int3
cmpsb
int3
inc
popl
popl
pushf
mov
int3
cmpsb
int3
inc
pop
pushf
inc
popl
pushf
mov
scas
inc
inc
push
lock
cmp
cmp
ss
sub
cmp
cmp
or
cs
das
xchg
push
ror
or
inc
sub
enter
sti
adc
cmpsl
int3
int3
int3
mov
mov
int3
int3
mov
xchg
int3
int3
int3
mov
jl
and
int3
int3
int3
fmull
and
int3
int3
jecxz
mov
int3
int3
and
rolb
test
sub
push
int3
test
dec
cmp
mov
ror
mov
and
lret
mov
cmp
int3
push
mov
fcompl
or
sub
cmp
fildl
and
cmp
cmp
push
int3
inc
mov
inc
ss
adc
cmp
cmp
or
push
cmp
cmp
jecxz
inc
and
dec
adc
cmp
inc
cmp
iret
les
int3
adc
ret
dec
int3
int3
adc
inc
xor
pop
enter
cmp
int3
mov
int3
inc
cmp
cmp
cmp
xor
leave
push
inc
int3
int3
int3
adc
inc
ss
lahf
cmp
into
std
push
inc
lahf
xor
cmp
cmp
ss
testb
ss
cmp
int3
mov
int3
adc
inc
ss
push
inc
lahf
xor
xor
cmp
int
std
push
inc
lahf
xor
dec
int3
int
out
cmp
int3
int3
inc
ss
or
xor
int3
inc
xor
or
ss
lahf
xor
dec
int3
cmp
int3
mov
or
inc
sub
or
les
mov
cmp
int3
int3
outsb
les
std
or
ret
dec
int3
std
push
inc
ffreep
dec
int3
leave
sbbb
int3
int
out
cmp
int3
int3
outsb
ret
dec
int3
std
or
les
inc
dec
enter
inc
aaa
std
or
ret
dec
int3
inc
dec
enter
std
push
inc
ffreep
dec
int3
inc
dec
enter
std
or
ret
dec
int3
inc
lahf
aaa
inc
pop
enter
std
or
les
leave
orb
int3
std
push
inc
ffreep
dec
int3
leave
sbbb
int3
int
out
cmp
int3
int3
inc
aaa
std
or
aaa
inc
dec
enter
decb
inc
cmp
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
lea
cmp
js
mov
mov
mov
mov
mov
lea
lea
inc
dec
je
inc
inc
xchg
mov
lea
xchg
mov
dec
dec
dec
movl
cmp
jge
mov
lea
mov
lea
mov
xchg
dec
inc
dec
inc
inc
dec
xchg
lea
mov
mov
mov
lea
dec
je
xchg
inc
dec
dec
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
mov
mov
call
mov
cmpl
je
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
cmp
je
mov
subb
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
xorb
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
incl
mov
cmp
jne
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
mov
call
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
push
mov
push
call
mov
pop
ret
mov
push
mov
add
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
movb
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
mov
pop
ret
mov
push
mov
add
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
cmp
jge
mov
lea
mov
lea
mov
xchg
dec
inc
dec
inc
inc
dec
xchg
lea
mov
mov
mov
lea
dec
je
xchg
inc
dec
dec
call
test
jne
mov
jmp
movw
cmp
jno
mov
mov
mov
xchg
mov
mov
lea
dec
inc
dec
jne
xchg
inc
mov
inc
dec
dec
xchg
xchg
lea
mov
lea
dec
call
lea
mov
pop
ret
push
mov
add
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
movl
pushl
pushl
mov
push
call
lea
push
call
call
call
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
lea
push
call
call
movl
pushl
pushl
mov
push
call
call
call
call
lea
push
call
call
call
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
lea
push
call
mov
lea
cmp
js
mov
mov
mov
mov
mov
lea
lea
inc
dec
je
inc
inc
xchg
mov
lea
xchg
mov
dec
dec
dec
call
lea
push
call
lea
push
call
lea
push
call
mov
lea
cmp
js
mov
mov
mov
mov
mov
lea
lea
inc
dec
je
inc
inc
xchg
mov
lea
xchg
mov
dec
dec
dec
movl
pushl
pushl
mov
push
call
call
movl
pushl
pushl
mov
push
call
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
push
call
mov
call
cmp
jge
mov
lea
mov
lea
mov
xchg
dec
inc
dec
inc
inc
dec
xchg
lea
mov
mov
mov
lea
dec
je
xchg
inc
dec
dec
mov
pop
ret
jne
je
jae
fs
insb
and
add
in
add
lea
push
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
call
call
movl
pushl
pushl
mov
push
call
call
call
call
call
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
call
call
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
call
cmp
jno
mov
mov
mov
xchg
mov
mov
lea
dec
inc
dec
jne
xchg
inc
mov
inc
dec
dec
xchg
xchg
lea
mov
lea
dec
lea
push
call
lea
push
call
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
lea
push
call
call
mov
pop
ret
subl
jae
mov
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
mov
mov
mov
lea
call
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
ret
mov
ret
lea
aas
add
xchg
mov
in
and
in
add
cmpsl
add
push
out
add
pop
repz
lret
or
fs
add
loopne
mov
ss
add
sbbl
testl
add
mov
repnz
inc
add
add
add
pop
xor
xor
pop
call
fisubrl
xchg
popa
lock
xchg
loopne
jnp
adc
into
jae
nop
add
add
addr16
add
lock
push
or
movsb
add
loopne
add
add
add
aad
stos
add
add
movl
add
and
pop
add
pop
vpcmpgtb
xchg
and
add
dec
lock
adc
xchg
imul
add
and
out
add
add
cwtl
dec
inc
add
ljmp
xor
cltd
scas
mov
ds
cmp
add
mov
repz
add
add
jmp
jae
mov
push
jecxz
lea
cmp
and
pop
fildll
add
mov
dec
mov
and
add
loop
pop
shlb
and
js
mov
add
imul
xchg
add
cmp
imulb
mov
arpl
sub
or
add
add
add
or
fld
cmp
xchg
mov
or
call
mov
inc
adc
enter
adc
and
ljmp
xchg
test
bound
data16
jnp
xchg
in
push
add
add
add
add
add
xor
fisttpl
and
sub
xlat
jnp
clc
xlat
mov
dec
imul
loop
cli
pop
sbb
xchg
mov
xchg
inc
or
add
xchg
les
inc
mov
add
xor
cmp
add
lahf
js
jmp
call
add
add
cmp
cmp
add
fs
add
add
lea
mov
stc
push
add
stc
incb
cmp
dec
clc
js
add
in
loop
and
mov
add
add
add
add
scas
in
fs
xchg
mov
push
jno
fistl
jl
iret
test
imul
popa
sub
xchg
adc
add
cwtl
add
mov
add
movb
add
std
mov
add
inc
and
add
add
jb
add
inc
push
add
add
pop
lods
pusha
xchg
ret
mov
pop
mov
add
fsubrp
add
add
nop
aaa
cld
add
jo
add
and
out
sub
inc
and
add
xor
pusha
es
add
in
inc
add
or
sub
mov
add
add
je
sbb
inc
lock
push
add
jecxz
add
notl
adc
outsb
ret
add
add
lock
add
sub
pop
add
fidivrl
push
xchg
add
add
arpl
jge
push
hlt
xor
add
test
repz
xchg
shlb
repz
add
js
mov
icebp
inc
fcomps
dec
sbb
scas
ss
mov
jb
add
jp
mov
and
adc
pop
movsb
xchg
add
push
cmp
pop
dec
pop
dec
lods
cwtl
jbe
test
add
mov
icebp
push
call
pop
push
add
int
jg
mov
add
add
dec
add
stc
or
jnp
add
popa
pushf
add
loope
out
andb
pop
ret
loope
xchg
mov
xor
push
int3
lods
js
nop
cmp
fwait
sub
test
sti
mov
push
adc
les
in
dec
jae
adc
or
fstps
add
nop
daa
repz
mov
test
sbb
shll
lds
push
adc
mov
inc
jmp
mov
cs
aas
testl
mov
lods
dec
add
je
fs
jecxz
xchg
test
lea
cwtl
inc
mov
decb
mov
xlat
sahf
add
inc
fcmovnu
rorl
pop
cli
mov
sub
gs
das
or
mov
dec
or
addb
sarb
vpmulhw
cmc
lcall
outsb
ret
xor
insb
icebp
jnp
push
cld
addr16
lret
movsb
ret
cs
mov
or
mov
ja
aas
sarb
push
push
aam
push
and
add
lds
xchg
mov
xchg
rclb
push
inc
sub
popf
shrb
pop
sahf
mov
es
repnz
pop
icebp
aad
sub
add
push
cltd
enter
or
pop
push
cld
mov
adc
cltd
xchg
and
pop
mov
pop
adc
sahf
jb
fists
outsl
xchg
ljmp
stos
inc
or
inc
arpl
out
add
ja
popf
pop
xchg
cmp
ja
mov
dec
cmpsl
rcrl
sub
aad
mov
push
sbbl
scas
das
and
sahf
jns,pn
sbb
in
in
sbb
mov
push
mov
test
stos
addr16
div
jp
fucomip
mov
cmp
mov
pusha
shrl
sbb
jne
sbb
fistps
in
xchg
push
cld
mov
push
cli
jg
out
js
les
pusha
sub
push
mov
stos
int
lret
and
shrl
jnp
cmp
jle
out
in
in
rcll
out
sbbb
and
ret
push
pop
jbe
in
inc
sub
jns
push
addr16
xchg
push
push
inc
sub
outsb
cmpsl
out
aam
popa
sbb
and
scas
imul
rclb
insb
repnz
ficomps
leave
cmp
cmpsb
arpl
pop
addl
ret
xchg
popa
push
aaa
orb
movb
out
int3
les
add
dec
std
pushf
lds
mov
xor
jnp
and
mov
movsl
sub
push
loope
pop
jbe
je
jge
in
jg
sbb
adc
addr16
jl
movsb
cmc
dec
pop
mov
push
xor
and
lahf
xchg
and
jle
push
stc
fcmovb
inc
enter
push
dec
insb
in
test
rcl
pop
loopne
and
pop
inc
loope
fldcw
or
push
cmp
mov
movsl
test
push
sub
sbbb
fs
pop
xchg
rep
aam
aaa
cmp
pop
sbb
pop
es
lcall
or
ljmp
outsb
movsb
inc
inc
adc
cld
and
xor
pop
mov
mov
mov
ret
sti
and
push
push
mov
push
fsubrs
out
dec
xchg
outsl
lret
mov
mov
ja
sahf
push
sub
test
in
xor
scas
cmpsb
outsl
push
pop
mov
data16
stc
mov
pop
fs
in
ss
and
mov
test
cli
stc
cs
xor
or
or
mov
dec
loopne
rcll
pop
out
mov
cmp
fldt
popf
enter
mov
or
sub
mov
out
cmp
inc
xlat
iret
adc
mov
test
sar
push
pop
and
nop
jne
gs
lods
xchg
nop
pop
and
dec
shlb
xor
les
mov
repz
subb
dec
inc
pop
sbb
dec
cli
ret
aad
xchg
pop
enter
cmpb
mov
cmp
cs
je
inc
mov
imul
ja
inc
je
pop
mov
lds
outsb
imul
mov
inc
jo
mov
dec
fisttpll
push
fisttpl
jb
pop
popf
stos
hlt
inc
mov
and
decb
pop
mov
add
adc
repz
mov
mov
or
pop
dec
les
mov
push
in
dec
cld
xchg
fcomps
mov
insl
xchg
mov
scas
shlb
xchg
sti
call
mov
aam
mov
ret
jge
es
adc
lcall
dec
stc
ljmp
mov
das
imul
repnz
jp
jbe
cltd
lcall
test
mov
mov
cmp
fldt
adc
ja
shll
and
or
aad
cmp
add
outsl
lock
sti
or
push
xor
xchg
pop
mov
lods
loopne
fidivrs
push
ja
push
mov
inc
sbb
mov
fwait
mov
cmp
add
xor
add
bound
icebp
mov
xchg
cmp
cltd
mov
cmc
jb
data16
or
mov
sti
mov
in
sarb
push
push
dec
push
jne
ss
cmc
movsb
rcr
jge
insl
xchg
and
imul
test
sub
out
push
and
mov
sbb
pop
cmp
insb
cmp
jnp
test
jle
rclb
aam
leave
int3
ret
ret
jg
lods
pop
jge
cmp
jbe
scas
pop
cmp
sub
stc
popf
and
mov
inc
xchg
lcall
sub
pop
sbb
inc
sub
sarl
push
mov
shlb
xor
mov
leave
mov
imul
dec
aad
inc
lock
or
sbb
inc
aaa
aas
aam
or
jbe
int3
scas
loope
pop
cmpsb
or
fsubrp
xchg
sbb
testl
hlt
and
pop
lret
lods
rclb
lcall
mov
push
cmp
mov
mov
sub
sbb
or
add
xor
mov
shll
push
clc
cmp
test
les
cmp
insb
push
push
js
dec
pop
pop
ss
push
sub
jge
movsl
sub
stos
or
mov
ljmp
mov
rcr
and
mov
adc
sbb
xor
ret
cli
push
mov
movsl
std
sub
incb
push
fdivrl
scas
gs
push
loope
mov
xchg
stos
jle
popa
mov
sbb
adcb
mov
roll
sti
mov
imul
imulb
push
xchg
xchg
sbb
adc
add
sub
dec
lret
and
push
or
sbb
sub
testl
iret
outsl
in
xor
stc
aas
mov
imul
mov
ss
gs
mov
iret
das
out
cs
sub
stc
xor
pop
cmp
pop
orl
push
xor
insb
loopne
mov
rclb
or
push
fcoms
cmp
fwait
dec
call
lods
inc
sbb
cmp
fdivrs
cli
sbb
mov
out
pop
ss
pushl
out
sarb
sub
xor
inc
push
push
fcmovu
enter
cmp
inc
pop
xchg
or
popf
call
push
xchg
js
jnp
adc
xlat
fs
pushf
pusha
and
mov
mov
aad
or
jmp
pop
sbb
jb
mov
dec
out
out
je
mov
and
jno
and
or
pop
cwtl
jns
int
push
or
mov
push
dec
movsl
hlt
cmp
mov
cmp
das
test
push
mov
xchg
aaa
testb
std
inc
cmp
test
cmpsl
insb
or
mov
sub
cmp
orb
hlt
and
mov
pop
mov
stc
shlb
movsb
sub
cmpsl
cmp
es
clc
cwtl
rcl
xchg
ds
ss
popa
mov
lods
stos
sub
mov
pushf
jae
and
int
ret
psubsw
push
add
sbb
and
adc
pop
movsb
push
frstor
aam
push
sbbl
rorl
push
pop
imul
pop
fdivrl
movb
movsl
jmp
sub
les
popf
or
sahf
cwtl
xor
out
stc
mov
xchg
pop
cmpsl
dec
inc
cmp
pop
or
jno
cmc
ss
mov
jnp
add
fwait
jmp
push
clc
add
nop
ret
popf
out
pop
fiadds
jns
mov
dec
xchg
mov
mov
jb
mov
sahf
mov
addr16
add
inc
sub
jg
mov
xor
jne
cmc
clc
pusha
nop
sbb
xchg
idivb
jp
jl
cs
fucom
pop
shrl
sub
sub
push
scas
mov
stos
mov
jns
outsl
ljmp
push
xchg
call
in
add
adc
pop
ret
in
pop
in
xor
push
jae
stc
lahf
push
in
cltd
push
popf
dec
mov
inc
adc
in
fcmovbe
pop
dec
xchg
and
sbb
aaa
pop
imul
scas
xor
ror
pop
mov
clc
insb
dec
sub
hlt
pop
movsb
xchg
arpl
inc
repz
xlat
and
jmp
add
cld
inc
pop
aad
sbb
xchg
and
lds
fdivl
cmpsb
push
scas
je
pop
and
push
cmp
cmp
push
jg
movsl
jbe
xor
jge
outsb
adc
mov
shll
cmp
mov
jno
imul
push
mov
dec
cmp
mov
push
lahf
les
push
lret
les
push
pop
das
inc
out
or
push
sub
ss
pop
pop
outsl
es
push
gs
mov
test
ds
shlb
mov
stc
mov
xorb
add
std
mov
xchg
dec
xchg
mov
adc
sub
pop
aam
lcall
or
inc
push
mov
outsb
push
popf
adc
xor
ret
jg
sti
push
mov
pop
push
mov
jle
and
sti
adc
js
adc
in
repnz
dec
rol
adc
mov
loop
add
stos
test
sub
outsl
int3
or
loop
test
stos
fs
sub
adc
sbb
cmp
sbb
out
cmp
cli
pop
sub
push
cmp
jle
or
dec
into
mov
imul
pop
sub
popf
adc
into
adc
inc
insl
adc
xor
add
loop
pushfw
lcall
in
aam
dec
mov
sub
pop
mov
pop
jmp
scas
and
fldenv
dec
nop
adc
test
cwtl
pop
inc
addr16
pop
fcos
mov
les
mov
in
cs
into
lcall
inc
addr16
shll
pop
pop
jge,pn
adc
outsl
cwtl
pushf
or
dec
jecxz,pn
rcl
or
fsts
and
mov
dec
mov
mov
jecxz
sub
je
sbb
cwtl
xor
jae
fstl
mov
scas
push
fldt
pop
jecxz
xor
jp
lock
jp
fs
stos
mov
outsb
mov
cwtl
shll
or
testb
push
dec
mov
imull
icebp
add
lret
lret
icebp
mov
ss
sbb
mov
shlb
adc
sbb
push
aam
out
sub
lods
or
ret
inc
dec
jecxz
shll
fs
cmc
lods
adc
lods
inc
mov
cmp
push
push
test
cmovs
in
add
pop
test
cli
divl
pop
es
test
out
xchg
test
sbb
cmp
loope
push
jnp
stos
inc
mov
enter
movsl
add
mov
mov
sub
arpl
jb
mov
addb
mov
xchg
ja
push
dec
adcb
or
sar
fwait
sbb
loop
inc
adcl
sarl
in
into
xchg
fidivrl
mov
bound
mov
dec
or
into
jmp
jns
popf
mov
mov
fimuls
xor
pusha
sub
jle
leave
in
sbb
cmp
sbb
inc
lods
sub
jno
or
ffree
scas
sub
add
jecxz
in
shlb
stos
es
adc
jl
push
idivl
dec
add
fsubl
iret
aas
fsubs
jmp
pop
sbb
jp
dec
test
jae
pop
and
mov
out
popf
jno
daa
push
xchg
iret
dec
fiaddl
add
sbb
add
imul
sti
scas
xchg
inc
adcb
sbb
out
adc
dec
xorb
fldt
test
or
imul
or
xchg
popa
jl
mov
sarl
int3
test
or
fidivs
push
lds
cld
mov
push
inc
lods
and
mov
push
push
fistpll
into
clc
imul
les
add
enter
daa
imul
xchg
aaa
jno
imul
jle
in
test
movsb
cmpsl
xor
repnz
lahf
jecxz
clc
push
sahf
adc
xchg
xor
pop
xor
jne
inc
cmpsb
ficoms
in
cmp
pop
js
lahf
cmp
popf
sub
push
jmp
lods
sub
push
cmp
pop
call
movsl
mov
add
adcb
imul
lock
adc
adc
fwait
movsl
sub
roll
adc
sbb
scas
add
jmp
xchg
sub
sub
out
adc
dec
cmp
bound
push
mov
mov
pop
fisubs
xchg
cwtl
int
int3
out
mov
adc
rcll
hlt
sbb
fstpl
sahf
cmp
xor
outsl
stos
in
sbb
pop
inc
js
xlat
sahf
fs
lds
adc
aaa
aaa
and
cmp
push
mov
xchg
cmp
xor
xorl
into
mov
push
cmp
clc
shlb
pop
dec
fs
mov
pop
imul
mov
outsb
lods
adc
daa
cmp
mov
xlat
mov
out
sub
push
xor
in
lds
jne
stc
dec
gs
pop
nop
in
popa
push
dec
out
sbb
jp
icebp
fnstenv
pminsw
push
and
repz
cltd
xchg
xchg
repz
call
push
dec
cmp
inc
sub
pushf
mov
ja
lcall
aad
insb
mov
lods
sarl
mov
jb
loopne
dec
fdivr
or
mov
repnz
hlt
ja
lods
fstps
inc
mov
and
mov
sbb
jnp
pop
fistpl
mov
mov
das
inc
jne
mov
and
inc
hlt
shll
add
shll
mov
xchg
testl
test
mov
xlat
mov
std
lret
pusha
in
mov
mov
jmp
mov
repz
pop
jb
sub
inc
jo
aas
mov
mov
sti
xbegin
mov
decl
popa
mov
subb
cmp
inc
pop
push
push
addl
lahf
sub
hlt
test
jb
mov
clc
pop
push
loop
sub
scas
pop
test
xchg
lods
or
pop
shll
sub
jb
xchg
push
aam
add
lea
pop
push
leave
xor
imul
xchg
andl
mov
pop
jle
test
in
pop
mov
inc
loop
aas
or
and
inc
inc
pop
push
jo
mov
out
sbb
sti
jns
out
lret
adc
xchg
sub
lea
pop
sbb
addr16
jp
inc
xchg
mov
aam
mov
sbb
or
ficompl
jne
pop
mov
movb
loope
xchg
pushf
dec
inc
jmp
adc
addl
push
out
and
sub
cmp
jno
stos
cltd
xchg
jmp
popf
mov
insb
jnp
mov
mov
adc
or
in
test
call
ret
pop
pop
push
jp
inc
pop
jne
jae
mov
popf
cwtl
mov
stos
inc
adc
xlat
xchg
xor
sbb
lahf
push
imul
into
scas
test
scas
rolb
hlt
mov
sahf
lret
xchg
pop
or
hlt
repz
arpl
out
inc
stc
sahf
std
or
dec
xor
aaa
jl
decl
nop
xchg
ljmp
scas
add
stos
daa
adc
mov
pop
jo
inc
scas
xor
lret
and
bound
adc
mov
jbe
rorl
jg
enter
daa
push
push
cmp
nop
jl
or
lcall
aaa
mov
lahf
add
sti
push
jno
sub
mov
cmp
xchg
cmpsb
popa
xchg
call
js
popa
push
pop
fsubrl
push
adcl
cmp
int
je,pt
push
movsl
lds
add
jo
icebp
sti
stc
subb
jecxz
mov
mov
pop
ret
sub
hlt
arpl
rclb
lcall
fstp
xchg
daa
les
cs
sbb
outsb
inc
adc
push
out
shll
dec
xor
cmpsb
mov
and
and
sti
fcomps
add
dec
inc
or
in
mulb
jbe
mov
loope
pop
faddl
loopne
test
hlt
dec
outsl
mov
std
loop
sbb
stc
mov
jo
in
loopne
push
fidivrl
ss
cmp
adc
gs
xor
inc
in
or
into
test
mov
kmovw
in
push
clc
adc
jns
adc
xchg
arpl
dec
data16
cmp
cmp
cmp
sub
mov
xor
or
or
mov
sbb
pop
gs
fcoms
dec
popf
lea
mov
add
pop
fwait
mov
adcb
xchg
push
shlb
sub
call
shl
negb
mov
repnz
popa
mov
scas
cs
xor
aas
ss
sbb
inc
test
push
add
jecxz
js
jp
add
cwtl
stos
push
cmc
mov
je
mov
movsb
adc
daa
fcmovne
lcall
rcrb
add
and
mov
fsub
out
and
add
notb
cltd
std
cmp
dec
mov
pop
cmpsl
imul
icebp
scas
lock
ds
icebp
mov
sbb
nopl
fcomps
sub
xchg
add
or
ret
lret
cmpsl
xlat
and
insl
adc
cmp
xchg
sti
mov
or
lret
jmp
adc
add
xchg
fistl
fwait
je
push
incl
mov
std
cltd
daa
test
clc
mov
xchg
rclb
lret
bswap
test
insl
add
mov
push
pop
insb
and
stos
and
out
xchg
fwait
xor
add
jge
std
dec
or
mov
repnz
int3
cli
mov
fwait
sbb
jp
jle
cmp
xorb
fimuls
icebp
sub
inc
out
roll
jbe
mov
add
mov
and
cld
je
jns
mov
stos
cmpsl
adc
add
inc
repz
repnz
jp
pop
mov
jmp
adc
dec
imul
or
test
mov
xchg
outsl
out
jmp
frstor
orl
jecxz
outsl
sub
imul
and
cli
jnp
push
xor
lods
jle
ljmp
iret
std
loopne
ret
ret
pop
mov
mov
mov
ss
push
ss
pop
popf
mov
popl
xchg
adc
mov
xchg
xchg
and
xor
push
int
dec
rcrb
repnz
dec
leave
mov
pop
hlt
repz
mov
inc
cld
add
or
or
stos
or
sbb
pop
inc
fstps
mov
je
adc
stos
scas
adc
lods
and
loopne
cmp
popf
aad
insl
out
insb
popa
out
jbe
mov
jge
faddp
enter
daa
imul
lcall
dec
xchg
into
mov
and
out
negl
inc
xchg
imulb
lock
mov
xchg
cltd
shll
or
push
pop
sbb
lahf
push
int3
loopne
fchs
imul
pop
adc
xchg
lods
lds
dec
rorb
mov
mov
clc
xor
mov
mov
sub
fisubrl
lcall
or
inc
dec
repnz
fcmovnb
adc
sbbl
mov
pusha
sub
or
pop
mov
or
and
call
mov
testl
fmul
rol
or
lahf
lea
adc
ja
outsl
imul
cmp
call
cmpsl
test
push
jmp
aas
out
outsb
jo
xor
cwtl
cmp
in
or
xor
addr16
cmc
dec
mov
loopne
cmp
pop
mov
imul
and
pop
add
inc
push
and
mov
cmp
or
sub
ret
xchg
mov
fwait
sti
mov
popf
adc
dec
daa
nop
mov
and
add
les
xor
push
out
xchg
pop
add
call
push
sbb
adc
lock
or
mov
cs
jb
lock
fiadds
pop
mov
aad
mov
sbb
fimull
movsl
and
jecxz
movsb
cltd
jge
push
lea
xor
jl
ret
orl
outsl
push
fwait
pop
int3
mov
lds
das
add
mov
xchg
std
push
and
pop
stos
rcll
cmpsb
pop
notb
pop
std
fbld
push
dec
stos
dec
sub
sbb
test
cld
imul
xor
and
rcrl
xor
fcmovnbe
lods
mov
dec
aam
mov
cmp
cmpsb
mov
insl
cld
add
clc
test
gs
cmp
aaa
ljmp
jbe
push
mov
fidivrl
push
mov
cmp
aas
pcmpgtw
cmpsl
add
stos
sub
dec
pop
jno
in
sub
arpl
pushf
cltd
test
mov
nop
mov
sbb
shrl
push
pop
pop
mov
stos
adc
push
out
les
xchg
loop
movb
addb
adc
or
add
xor
lods
push
mov
sahf
xchg
and
loope
std
pop
hlt
adc
push
lret
lods
cmpsl
inc
adc
push
or
cmp
fwait
movsl
lret
push
leave
jo
fsts
mov
addb
insl
fisubs
adc
jns
int
in
xchg
call
dec
jmp
mov
mov
push
addr16
adc
mov
mov
cli
cmp
or
xor
pusha
cld
mov
dec
xchg
inc
mov
jmp
test
lock
add
sub
mov
or
cmp
fsubl
lret
or
insb
push
and
jnp
jno
jle
dec
loope
icebp
fbld
adc
je
iret
pop
imul
ret
rol
inc
outsl
or
jae
sub
popf
out
pushf
push
adc
mov
xchg
fisubrs
inc
sbb
push
repz
scas
mov
adc
or
inc
cli
aaa
leave
add
mov
arpl
fisubs
sbb
mov
aaa
cli
daa
decl
jbe
add
pop
mov
pop
xchg
xchg
cmpsb
ficomps
pop
lea
ja
scas
lock
and
dec
movsb
clc
and
push
mov
and
jge
and
test
sub
push
outsb
mov
jno
or
dec
neg
test
jb
sbb
ret
jp
lahf
inc
cmp
push
pop
in
pusha
test
mov
lock
out
jne
js
mov
fsubrs
int3
inc
loope
out
sub
ds
cmpsl
lods
ds
or
shlb
arpl
xchg
push
inc
or
xchg
scas
push
ss
sub
into
leave
std
sti
pop
adc
fiadds
shlb
out
lcall
fsubr
dec
shrl
or
push
outsb
idivb
adc
sahf
stos
pop
jg
icebp
sub
mov
jecxz
and
dec
int
xor
test
outsb
sub
pop
imul
mov
je
test
mov
movsb
imul
cld
push
fs
xchg
adc
in
mov
cmp
pop
std
pop
out
mov
cli
sub
std
cmp
pop
rorb
cmp
into
dec
jo
cmc
push
xchg
pop
loopne
mov
adc
push
imul
inc
mov
callw
test
scas
lods
leave
sbb
xlat
dec
inc
jae
cmp
mov
push
mov
xchg
bound
nop
jge
adc
mov
inc
mov
out
sub
repz
rclb
pop
iret
call
iret
ret
cli
ret
insl
adc
dec
xchg
jmp
outsl
add
aaa
call
outsl
aas
je
cli
jb
cmpsb
lahf
dec
inc
out
je
mulb
jecxz
adc
movb
mov
mov
movsl
test
loope
push
dec
cmp
sahf
fldt
inc
rcrl
mov
ficoms
lock
push
das
loopne
push
mov
dec
mov
shlw
xchg
negb
xlat
sub
stos
shlb
cwtl
jo
icebp
pop
lret
xchg
imul
arpl
mov
call
test
pop
push
fiadds
rolb
sub
enter
push
sub
clc
mov
push
jg
jne
cltd
popa
cld
fadd
lods
rcll
not
gs
push
jecxz
push
adc
and
les
inc
cltd
dec
fs
test
and
push
sub
xor
setp
sbb
cmp
pop
ret
stos
add
out
daa
test
js
sub
jns
cmp
xor
dec
or
mov
xor
scas
shlb
mov
sub
pop
scas
addr16
ja
inc
push
dec
dec
sbb
in
or
add
push
clc
pop
das
add
push
and
mov
cld
bound
call
adc
rcl
xchg
push
sbb
mov
stos
fidivrs
test
les
es
jp
mov
mov
decl
mov
insl
dec
mov
push
pusha
xchg
cwtl
add
aaa
sub
xchg
adc
aaa
int
jae
mov
out
push
ds
out
and
stos
repnz
loop
loop
pop
insb
mov
push
es
fildl
clc
adc
iret
mov
sbb
pop
negl
inc
jp
and
pop
sbb
mov
mov
inc
push
ja
xchg
xor
jo
imul
pop
scas
and
popf
push
pop
aam
rclb
mov
xchg
fbstp
leave
jl
jg
aam
push
cmpsl
inc
aam
add
sub
jle
mov
or
adc
lods
sarl
shrb
shlb
lds
sbb
jo
sbb
jae
daa
in
pop
cmp
xor
mov
jge
inc
mov
mov
pop
dec
cmp
pop
divb
xlat
cmp
mov
push
push
enter
popl
pop
sbb
lahf
pop
ret
ljmp
push
xchg
cmpsb
ljmp
js
and
cltd
dec
sub
jg
loope
adc
not
xchg
cmp
mov
repnz
ficoml
rolb
lods
add
repz
add
add
dec
lea
pushf
push
xchg
mov
out
sub
icebp
push
loopne
push
push
jmp
fcoml
jo
outsb
pop
xchg
sub
mov
jns
mov
adc
mov
push
cmc
and
cmp
push
mov
sbb
fmuls
xor
lds
mov
sbb
jno
sahf
leave
and
and
movsl
xor
xchg
aam
imul
stc
mov
xchg
adc
pop
pop
ss
into
mov
or
cli
pop
ja
xor
adc
push
movsb
or
fs
loopne
in
loop
insb
adcl
inc
scas
imul
cltd
and
cmc
shll
sub
lods
mov
pop
cmp
cmp
mov
jno
insl
mov
jno
push
sti
sbb
stc
incb
scas
add
dec
imul
cld
xchg
fsts
in
les
pop
repz
push
in
popf
ficoms
sbb
test
icebp
in
lods
push
scas
adc
mov
js
push
test
aad
inc
pusha
roll
adc
dec
mov
ss
cs
pop
cltd
lea
int3
cwtl
fistl
cmp
js
stos
dec
daa
jle
fistl
pushf
pop
adc
adc
rorb
mov
mov
add
movsl
and
ds
mov
neg
xlat
sub
sub
mov
mov
xor
cld
mov
push
movsb
mov
adc
stos
rcr
pop
outsl
out
rclb
lds
out
outsl
cmpsl
aam
cmp
ret
js
or
lods
ljmp
cli
sbb
mov
cld
popa
adc
test
movsl
dec
add
outsb
fsubs
pop
lahf
rcll
push
into
mov
fwait
add
stc
jne
cmp
test
lds
out
jp
fisttpll
or
mov
sub
mov
aam
pop
insl
dec
or
repnz
or
xchg
jo
popa
add
cmc
ficompl
xor
or
mov
movsb
jmp
dec
scas
add
pop
push
mov
dec
aas
inc
jle
ds
sub
fwait
add
push
fwait
loop
add
mov
sub
xchg
dec
xor
out
ret
jns
cmp
dec
arpl
mov
mov
subb
movb
jmp
sarb
fsubl
jne
loope
pusha
xor
ds
call
bound
xchg
ds
cmpl
out
cmp
sub
sub
outsb
push
sub
xchg
stos
gs
and
repnz
jnp
clc
fidivrs
pusha
jmp
repz
sbb
pop
cs
in
inc
test
ss
fadds
jg
clc
popf
xor
xchg
push
push
pop
fiaddl
gs
xchg
mov
imul
push
scas
cmpl
push
mov
in
sbb
ljmp
hlt
pop
adc
fwait
xor
out
dec
or
cmp
loopne
js
push
add
int3
sbb
jns
out
mov
fisubs
aam
test
ljmp
fidivrl
and
stc
movsb
push
popf
inc
push
pop
cld
and
jge
push
out
enter
daa
data16
cmp
lcall
mov
dec
aam
mov
xor
stc
int
lahf
jle
outsl
push
mov
cs
inc
inc
imul
js
xor
pop
fcomps
sti
loope
fildll
inc
xchg
jge
movsl
add
shld
xorb
or
xor
cmp
sbb
dec
add
mov
dec
dec
mov
sub
lret
into
inc
lcall
repnz
popa
sub
jmp
outsb
mov
nop
mov
sub
lret
adc
and
arpl
int
out
fadds
and
inc
xor
lret
mov
mov
cmp
sbb
adcl
stos
lods
shll
jns
outsl
push
mov
insw
stc
push
insb
adc
ss
push
cmp
std
mov
out
dec
inc
cli
xchg
or
cmc
into
fidivrs
shrl
lahf
call
cmc
movsb
andb
out
or
rorb
bound
inc
pop
add
and
inc
sahf
xlat
mov
mov
in
fsubrl
mov
test
insl
gs
je
xor
mov
inc
fldenv
les
out
dec
xchg
pusha
jnp
sbb
and
test
pusha
lahf
adcl
or
icebp
cmp
xor
addl
pusha
dec
jb
fstps
je
lret
cmp
fwait
out
fcoml
nop
cwtl
xchg
jg
mov
out
mov
lahf
orl
jnp
fildl
out
inc
in
xchg
mov
das
sahf
adc
mov
and
push
or
mulb
arpl
dec
pushf
sub
popf
mov
or
lret
mov
mov
in
mov
int3
and
mov
lret
shlb
stos
repnz
push
mov
ret
pop
adc
das
mov
insl
mov
mov
xor
hlt
das
ljmp
and
mov
xchg
adc
and
lret
jb
outsb
hlt
cltd
mov
test
insl
mov
mov
mov
push
mov
call
test
imul
insl
insl
jl
insl
aas
sub
out
loope
mov
in
cmp
mov
repz
movsl
jns
xchg
xor
sahf
xlat
or
lods
jmp
cmpsl
les
dec
push
les
pop
and
les
inc
aad
orl
pop
mov
mov
mov
push
dec
sub
inc
addr16
in
dec
je
mov
sub
sahf
mov
mov
lds
jp
aam
mov
jnp
mov
inc
push
enter
dec
jne
mov
xor
jne
cmpsl
xchg
mov
xor
or
insb
out
loope
sub
fs
lds
dec
lods
stos
fdivs
and
popf
dec
insb
xchg
mov
and
jle
in
lahf
jge
mov
and
bound
gs
inc
nop
bound
es
sub
inc
cmc
sti
popf
pop
mov
push
into
mov
xchg
jecxz
xor
pop
imul
out
mov
jmp
jno
mov
cmp
xchg
push
hlt
push
addr16
xor
sti
or
hlt
jmp
aaa
aaa
mov
dec
jecxz
add
cli
xor
pop
jmp
test
push
mov
add
cmpsb
lea
dec
lret
adc
or
bound
jbe
adc
jge
inc
in
enter
daa
gs
fdivrs
cwtl
fwait
int
mulb
xorb
inc
inc
aaa
push
sbb
dec
and
push
nop
sub
popa
out
push
sbb
test
cmpsb
lock
push
in
movsb
or
rcr
jns
pop
jo
push
add
sub
xchg
cmp
loop
and
sbb
mov
mov
mov
addb
dec
sbb
mov
repz
cmp
adc
jno
test
xchg
sub
sbb
inc
sub
push
cltd
adc
in
xor
fldcw
cmp
adc
out
int
jg
xchg
adc
call
popa
and
into
and
int
cltd
sub
testl
push
movsb
mov
mov
pop
sahf
pcmpeqd
test
mov
cmp
outsl
in
sub
fs
cmp
adc
push
mov
cmp
clc
outsb
or
inc
out
pop
cli
les
xor
mov
cmp
mov
or
lahf
into
repz
arpl
imul
pop
add
adc
pushl
add
adc
xor
int3
lods
jle
jae
or
xlat
push
sbb
mov
inc
loopne
sti
ja
movsb
dec
mov
or
push
dec
sub
inc
in
andb
andb
repz
into
lock
and
call
dec
fcmove
pop
adc
xchg
and
cs
inc
aad
call
in
aas
push
xor
jb
inc
cmp
mov
jecxz
cld
mov
pop
cwtl
push
jge
mov
into
and
cmpsb
jg
dec
std
dec
jnp
mov
xor
cltd
lods
inc
jae
cwtl
lock
das
jge
aam
push
inc
lret
les
rorl
mulb
mov
dec
xchg
dec
mov
fs
mov
loope
inc
cld
adc
and
mov
repnz
loope
fcompl
lods
add
out
fstp
or
add
cmp
xchg
and
insl
cwtl
enter
and
xchg
ss
ljmp
pop
lods
add
mov
mov
or
movsl
cmp
add
sbb
cltd
out
or
test
xchg
je
dec
fstpl
fmull
aam
sbb
push
into
sbb
fldt
push
jae
xchg
in
add
aaa
lcall
jle
xor
or
adc
stos
adc
dec
jge
mov
ja
int3
or
movsl
adc
lea
pop
pop
insb
fwait
popa
pop
mov
add
push
cmp
jns
aaa
fs
test
xchg
add
mov
jbe
mov
rcrb
jp
jae
mov
outsl
in
sarb
mov
xchg
jo
dec
sti
out
pusha
push
xchg
inc
xchg
mov
fucomip
cli
mov
jbe
pop
push
out
std
push
sub
lahf
cmpsb
lret
push
cmpsb
push
scas
stos
dec
push
cltd
and
imul
std
stos
icebp
jnp
jl
fldl
in
cld
notb
jl
nop
iret
fdivrs
pop
pushf
std
jnp
fwait
daa
imul
inc
sub
andb
js
inc
or
inc
fisubrl
xchg
cmp
sub
lods
loop
scas
dec
scas
adcb
jmp
mov
nop
adc
loope
ja
mov
and
adc
or
scas
xor
divb
add
test
repnz
std
fisubrs
lods
hlt
jo
mov
and
push
push
cmp
adc
or
or
jbe
dec
adc
adc
enter
daa
fs
mov
jl
add
dec
mov
imul
mov
jno
lahf
mov
push
or
pop
inc
rclb
inc
pop
repnz
push
adc
push
sarb
loope
insb
das
sub
pushf
jle
fisttpl
inc
movsl
out
mov
rclb
rolb
mov
mov
xor
jae
aad
je
lods
popf
sub
sbb
adc
lcall
xor
sub
sub
loopne
mov
lods
cld
jg
sub
mov
and
mov
mov
and
jge
push
lods
addl
cs
mov
inc
adc
sahf
into
or
mov
inc
mov
jmp
sbb
sub
test
xor
outsl
les
loop
inc
es
fcomps
outsb
adc
inc
fidivs
negb
stos
mov
mov
idiv
testl
cmp
ja
or
adc
cmc
xor
lods
loopne
xchg
cli
pop
and
ret
adc
push
imul
xchg
int3
add
xchg
pop
lods
gs
cmp
adc
sub
aas
add
mov
cwtl
sti
xor
adc
pop
dec
mov
mov
fnstenv
dec
pop
repz
repnz
out
add
push
and
xor
lret
xchg
xchg
pop
dec
cwtl
adc
roll
jmp
adc
mov
push
add
and
jb
fldt
dec
sbb
out
cmp
pop
jl
mov
out
lea
push
mov
cmp
mov
cmp
cmpl
iret
leave
pop
sti
ds
inc
cli
mov
das
pop
or
mov
adc
rcrl
aad
std
and
fwait
cmpsl
arpl
iret
mov
mov
pop
in
lret
imul
and
int3
sbb
int3
cli
aam
aam
pop
aam
hlt
imul
xor
mov
clc
stos
cmpsl
repnz
jne
mov
popa
pop
movsl
fisubrs
inc
mov
xlat
push
adc
or
cmovo
add
pop
test
aad
push
aaa
test
fnstsw
loop
xchg
lock
sbb
jb
rcrl
orb
lock
stos
mov
sahf
adcl
ret
mov
jecxz
scas
mov
divb
sti
pop
mov
lods
shrb
in
and
lret
and
in
inc
add
and
jae
fwait
nop
add
add
ret
outsl
pop
out
xor
mov
outsb
ds
jns
lods
aaa
in
adc
xchg
push
stc
scas
mov
xor
mov
jno
jmp
ret
mov
adc
push
xchg
mov
pop
xchg
jne
sahf
mov
fbstp
mov
jmp
lahf
pop
pop
sub
xchg
cmc
mov
fnstcw
adc
in
mov
ds
inc
insb
push
addl
adc
lods
adc
out
iret
aaa
pop
and
mov
inc
cmpsb
inc
in
push
enter
test
bound
ficompl
repz
xchg
hlt
mov
push
imul
lods
xlat
sbb
mov
pop
mov
jecxz
popf
leave
pop
inc
mov
add
arpl
xor
out
or
push
adc
mov
jbe
xor
les
fnsave
mov
jl
jae
dec
in
and
cmp
jg
scas
dec
lret
pop
and
popf
cmp
lret
outsb
push
inc
sti
fwait
jbe
cli
fdivrl
leave
push
mov
daa
arpl
cmp
out
jno
sub
inc
dec
and
push
loope
fwait
xor
lret
lahf
fildl
test
test
mov
aaa
inc
in
pushf
shlb
ficomps
js
loope
pop
xchg
cmpsb
es
push
loope
daa
fldt
test
cmp
push
mov
shrb
push
outsl
sub
sub
or
xor
leave
cs
cwtl
inc
loopne
rcll
mov
xchg
jl
pop
dec
dec
dec
lcall
mov
inc
lcall
in
adcl
pop
rol
pop
loop
mov
arpl
mov
add
and
jno
push
scas
jecxz
pop
test
fdivrs
testl
xchg
mov
inc
mov
test
jne
xor
das
jp
mov
orl
mov
sahf
adc
jnp
cmp
fdivrs
out
sahf
mov
inc
movb
sub
cld
xor
clc
cmp
adc
or
add
cmc
stc
aam
loopne
inc
scas
pop
inc
mov
adc
add
arpl
add
sub
aaa
loopne
lods
dec
popa
xor
clc
sbb
sub
mov
sbb
sub
adc
sbb
add
out
insb
inc
adc
sub
les
pop
xchg
xchg
test
push
mov
xchg
out
je
dec
ror
pop
jns
cmp
cmp
and
adc
mov
pop
daa
add
lcall
aas
fidivs
jb
stos
cwtl
dec
xchg
cli
dec
je
jg
jecxz
inc
xchg
pop
sti
lea
inc
leave
cwtl
xor
mov
daa
nop
mov
ret
insb
adc
imul
pop
sahf
fmuls
inc
andl
das
cmp
mov
int3
and
jl
shr
or
imul
mov
push
dec
lea
cmpsl
bound
mov
pusha
jmp
lret
fdivr
mov
lret
lret
imul
rcrb
aam
das
fwait
ret
mov
mov
addb
out
jmp
ljmp
shrb
stc
mov
jp
bound
imul
xchg
arpl
aaa
push
adc
mov
ss
dec
int3
push
cli
sbb
aam
loopne
mov
or
jb
daa
pop
sbb
stos
scas
add
out
push
mov
sti
add
lods
push
xor
xchg
pop
or
mov
jnp
mov
sub
pop
sub
xchg
es
and
inc
lcall
fwait
mov
test
mov
jne
out
adc
mov
in
cmc
push
xchg
mov
cmp
mov
insb
addr16
ret
jp
into
pop
mov
ret
push
insl
lea
sub
loop
frstor
inc
loopne
xor
mov
call
sub
cmpl
out
nop
pushf
sub
adc
add
stos
xor
jp
push
jae
insb
shll
jnp
aaa
xchg
jle
std
in
loop
adc
aaa
aas
iret
xchg
std
fcmovb
fwait
ljmp
mov
cmp
addr16
mov
rcrb
push
loope
inc
or
shlb
pop
xchg
call
pop
imul
test
mov
js
mov
ss
leave
iret
xchg
mov
arpl
fwait
inc
inc
adc
or
and
nop
jp
sub
insl
add
xchg
jmp
stos
stos
aad
out
add
sub
xchg
mov
scas
sub
lret
sbb
cmp
cmc
outsb
movsb
cmp
xor
sbb
jge
fs
enter
daa
movl
jno
movl
xchg
bound
les
xor
gs
cli
mov
subl
in
stos
inc
jl
repnz
jns
out
pop
lahf
mov
test
pop
aam
add
mov
sub
inc
into
cmp
xchg
fdivrs
mov
adc
inc
jl
into
cmpsb
sbb
clc
cmpb
cmpsl
fs
pop
adc
pop
cli
sbb
adc
rolb
lret
lcall
dec
fsubr
mov
cmpsb
jg
outsb
dec
mov
inc
movsb
cmp
pop
pop
mov
fmuls
mov
rorb
and
test
push
mov
ror
add
push
testl
sub
in
cld
mov
gs
clc
or
xor
outsl
cmpb
dec
cmc
cmp
dec
push
fs
test
cmp
jmp
clc
jl
pop
push
and
push
cmp
jle
or
xchg
xchg
into
pushf
jae
cmc
rorb
pop
bound
out
adc
lret
mov
adc
xor
mov
lods
xor
daa
cmp
mov
imull
jmp
nop
mov
mov
sti
test
sub
cli
addr16
lahf
push
push
inc
push
stos
inc
and
sbb
les
add
inc
sbb
adc
mov
leave
xchg
bound
xor
xchg
xchg
loop
mov
dec
and
sarl
inc
out
lret
aas
cs
mov
je
arpl
xchg
adc
js
dec
cwtl
sub
mov
lcall
imul
dec
mov
lods
dec
pop
inc
data16
or
mov
inc
push
out
das
sbb
pop
mov
xchg
xchg
test
sarl
xlat
imulb
inc
std
jo
xchg
dec
mov
out
cmpsl
popa
or
icebp
data16
cld
xchg
lret
inc
adc
mov
mov
int
or
shlb
pop
sub
push
pop
aam
mov
or
cmp
insl
dec
xor
mov
repz
xchg
lods
inc
ror
mov
sbb
daa
mov
ss
paddd
sahf
cltd
xchg
jns
test
or
mov
imul
xchg
mov
sbb
dec
xor
leave
push
pop
pop
aad
stos
popf
outsb
imul
jns
push
xchg
shll
add
into
and
cmc
lret
push
cmpsl
lcall
lcall
mov
xor
mov
and
hlt
add
mov
addb
add
sbb
xor
out
ds
push
lret
add
jns
sbb
icebp
inc
dec
bound
xchg
in
sub
xchg
lock
mov
mov
mov
cmpsl
hlt
shll
jp
mov
mov
add
jnp
push
lret
xchg
jne
orps
pop
cmp
xchg
pop
in
mov
xchg
xor
inc
and
sti
pop
das
sub
push
pop
aad
arpl
stos
movsb
xor
and
insb
ds
jnp
mov
jle
inc
in
imul
cmc
mov
cmpsb
pop
inc
test
adc
xor
cmpsl
popf
idivl
sbb
repz
inc
mov
outsl
fiaddl
flds
movd
imul
scas
jb
pop
push
add
dec
mov
std
dec
sahf
repnz
js
xchg
xor
movsl
inc
adc
mov
sbb
andb
sbb
xor
aaa
sbb
jg
fcmovu
adc
xchg
or
lds
push
jo
cmpsl
adc
cltd
hlt
dec
cmp
fisubrl
lds
loop
dec
mov
jge
jecxz
enter
daa
popa
pushf
fidivrs
fs
jno
xor
jl
stos
movsb
dec
incl
outsl
xor
add
sbb
push
faddl
in
dec
movsl
es
or
imul
inc
inc
test
pop
adc
xchg
push
js
loope
or
jns
out
cmp
cmp
pop
movsl
add
jge
and
inc
adcb
sbb
fwait
lret
add
in
xor
adc
push
mov
and
addl
adc
push
cmc
fcompl
into
jecxz
stos
xchg
jns
ja
arpl
inc
sti
mov
incb
mov
mov
test
and
push
or
in
pop
fsubr
pop
testl
cmp
mov
dec
mov
fwait
shlb
dec
out
xor
xchg
lcall
enter
sbb
cmp
in
mov
inc
scas
dec
cli
nop
push
xor
mov
mov
into
jg
push
cmc
xchg
mov
adc
sbb
adc
sub
dec
in
lret
iret
sub
outsb
mov
cmp
pop
xlat
mov
repz
xor
push
push
jbe
es
rorl
clc
arpl
stc
xor
pop
fildl
rorl
xchg
das
push
or
mov
dec
fmull
fists
and
mov
aad
mov
inc
add
cwtl
aas
int
pop
jb
in
dec
and
je
pushf
and
xchg
add
rcrl
xchg
cwtl
cmp
xchg
or
add
std
dec
test
inc
adc
out
inc
xchg
xchg
lock
jle
das
stc
sbb
aam
mov
or
imulb
xchg
std
pop
mov
mov
mov
cmp
inc
das
lret
mov
into
mov
jno
mov
sub
rolb
dec
sub
mov
inc
es
int3
mov
pop
lods
call
lcall
lods
scas
dec
mov
inc
lea
mov
jae
adc
mov
add
fs
lret
test
adc
andb
test
push
xchg
shrb
outsl
push
arpl
push
xchg
sbb
sti
add
jb
call
push
or
out
mov
mov
les
fldl
ja
adc
inc
enter
add
push
fwait
sbb
push
rolb
aam
xor
rorb
daa
popa
jne
stc
in
mov
xchg
aas
test
in
loope
ja
bound
rcrb
clc
lods
mov
cmpsb
test
sbb
icebp
jo
jne
fiadds
aam
out
adc
xchg
ficoml
jmp
add
ret
push
dec
sub
mov
jne
mov
out
and
je
jnp
out
test
imul
jge
push
dec
lret
inc
or
jp
inc
movl
imul
or
sbb
mov
gs
push
mov
push
or
dec
mov
mov
xchg
leave
mov
xchg
mov
inc
pop
cmp
fwait
sbb
aaa
bnd
or
enter
jg
int3
sahf
xlat
and
aam
fidivs
cmp
jo
ficoml
scas
call
add
cmp
out
out
push
xor
jbe
mov
add
sbbb
cmp
mov
inc
dec
outsb
inc
or
mov
aad
fwait
cmpsl
pop
lahf
cmp
sti
push
scas
cli
mov
push
adc
test
jg
popf
in
daa
int
js
ret
std
pop
push
push
aad
aam
push
loope
xor
cmp
test
movsl
or
sar
fnstcw
mov
bound
pop
sbb
dec
ja
inc
data16
loope
jne
dec
ret
or
pop
enter
lds
push
dec
adc
sub
xor
jbe
mov
mov
popa
lods
mov
jns
mov
insl
int3
and
adc
mov
insb
test
nop
mov
push
push
adc
fimuls
lock
aam
xlat
xor
lcall
jo
push
stc
mov
std
fs
sti
xchg
xlat
test
add
jb
xor
mov
pop
cli
ret
xor
xor
xor
mov
into
bound
in
mov
aad
adc
mov
bound
and
add
mov
data16
cmp
test
and
pop
mov
pop
pop
fwait
sti
loop
pop
jp
sub
aam
nop
push
repnz
inc
dec
pop
iret
fsts
dec
cmp
cwtl
sub
xchg
repnz
rcrb
push
test
mov
adc
adc
lcall
mov
xchg
aad
bound
aas
insb
cmpb
stc
dec
popf
je
sub
jecxz
and
cwtl
pop
mov
clc
sbb
add
cltd
fiadds
mov
pop
lock
push
mov
pop
das
fsubs
sahf
mov
add
add
fcmovbe
mov
mov
jb
mov
xchg
fisubs
xor
icebp
adc
mov
in
mov
lret
and
inc
arpl
call
xchg
jg
sbb
cld
sub
xlat
adc
popa
test
push
insl
sbb
clc
xchg
cmpb
cmp
ljmp
dec
lods
sbb
mov
mov
push
in
lret
pop
bsf
push
add
xchg
cltd
add
sub
scas
inc
mov
push
inc
xchg
mov
test
shrb
xchg
lahf
in
lcall
or
stos
jnp
ja
aas
aam
xchg
popa
pop
scas
add
jno
xor
push
xor
arpl
or
push
xor
mov
mov
hlt
mov
xchg
ja
scas
jae
in
ret
inc
pop
pop
xchg
and
push
adc
add
das
std
xchg
out
scas
pop
les
aam
jns
out
in
xchg
xor
mov
mov
or
dec
addr16
sbb
mov
dec
mov
mov
es
aam
aam
xor
mov
cmp
inc
xchg
lods
test
int
mov
andl
and
mov
push
and
mov
dec
jle
mov
in
test
lret
iret
mov
ffreep
aam
daa
pop
scas
xor
shr
push
jae
popf
mov
aam
dec
popf
inc
out
pop
push
xchg
xchg
ret
dec
push
sbb
or
mov
cmp
notl
ficoms
cmp
repnz
pop
cmpsb
leave
xor
push
hlt
sub
xchg
arpl
data16
in
xchg
or
push
inc
int3
aaa
mov
cmpsb
or
inc
lock
jl
mov
jmp
lds
fidivs
and
scas
out
arpl
mov
xchg
dec
movsb
pop
jbe
aaa
movsb
jge
mov
daa
pop
rcrb
lret
jno
outsb
sti
jl
aas
jae
ffree
push
push
insl
iret
mov
test
mov
lahf
push
mov
test
ficoms
testl
inc
or
push
cmp
xor
inc
stos
push
imul
mov
jae
cmp
fistpll
cmc
push
jnp
adc
rcr
ret
jmp
pop
cmpb
sbb
or
xor
bound
lds
addl
lcall
xor
sub
shrl
stc
adc
xchg
cs
jg
inc
pop
mov
repz
mov
cmp
and
inc
push
mov
jne
fsubs
testl
movsl
cmp
pop
fstps
pop
not
xor
push
outsl
pop
mov
in
stc
imul
fiadds
fs
cltd
sbb
adc
cmpsb
mov
xor
out
into
cmp
mov
out
into
inc
push
stos
cmc
adc
loop
pop
mov
pop
push
imul
sbb
add
or
mov
lods
call
mov
xlat
xorb
mov
leave
mov
sti
xchg
jp
popf
push
push
nop
xor
dec
arpl
inc
pop
in
mov
xlat
pusha
imul
mov
rcrl
orl
aad
cltd
shr
mov
push
inc
cs
inc
cmp
cwtl
aas
or
jb
lock
je
or
fwait
scas
aad
lods
repz
cwtl
mov
stc
mov
or
xorl
xchg
js
iret
mov
pop
sub
adc
dec
dec
lock
or
mov
mov
sti
cld
shrl
cmc
and
cmc
loope
std
gs
insl
dec
jns
or
arpl
icebp
jmp
pop
test
and
mov
or
mov
rolb
jmp
xchg
sub
bound
ret
lock
imulb
cmpsb
sub
shr
fists
cmpb
lods
test
sbb
xchg
vphaddwq
lods
add
stos
into
test
ftst
push
push
stc
mov
sbbb
shrb
sbb
cmp
into
push
adc
sbb
mov
pop
sbb
pop
test
xor
sub
outsb
int
xor
jle
mov
mov
out
sub
mov
ja
into
rorb
dec
inc
idivb
jle
jnp
cmp
mov
or
mov
out
mov
dec
jl
jns
nop
insb
in
cmp
mov
sarl
mov
pop
fisttps
adc
xchg
ret
mov
dec
mov
les
cmpsl
push
pusha
or
test
dec
rcl
xchg
or
jmp
xchg
mov
xorl
sub
add
push
and
stos
std
shlb
xor
jnp
mov
jle
aaa
pop
sub
sahf
sahf
int3
iret
adc
sub
nop
push
inc
adc
xchg
test
insb
sbb
mov
outsb
inc
ficompl
ds
sbb
fwait
jae
inc
bound
scas
fwait
in
cmp
fisubl
inc
rolb
mov
adcb
leave
stos
cmp
hlt
ja
packsswb
fdivl
inc
sbb
sub
sbb
push
out
aaa
jo
xor
hlt
jne
add
mov
int3
je
pop
pop
addr16
fidivrs
dec
vmulps
scas
cmpsb
add
push
mov
cmp
test
add
sub
jbe
or
pop
xor
cmp
hlt
mov
inc
jl
fimull
add
push
push
fidivl
dec
lods
shlb
sarl
jae
jbe
mov
xchg
test
test
in
or
cmc
mov
js
xchg
lods
pop
shlb
loope
ljmp
cmc
aad
sbb
movsl
sbb
and
orb
add
push
sbb
jecxz
dec
xlat
cmpsl
pop
xchg
lods
xor
xor
rcrb
fcompl
push
ja
aam
add
dec
sbbb
test
mov
mov
adc
sub
push
mov
arpl
pop
int
idivl
rolb
push
testb
cltd
insl
mov
cmp
xchg
mov
sahf
test
stos
test
xchg
outsl
xor
mov
loop
ret
sub
imul
mov
xor
cmp
loop
xor
jp
or
cwtl
loopne
cli
mov
fisubrs
loop
rorb
cld
maskmovq
mull
sbb
cmp
mov
sub
je
in
xor
addr16
inc
mov
cwtl
cmp
mov
or
xlat
dec
ret
inc
jno
and
add
cmc
repz
push
xchg
js
xor
add
nop
mov
sub
adc
ret
pop
pushf
gs
jmp
loopne
cs
pop
adc
std
call
sub
stos
push
mov
dec
out
ja
sbb
adc
sahf
lret
lea
xchg
dec
lea
mov
icebp
mov
xor
push
xchg
xchg
lds
and
inc
and
cli
lock
outsl
sbb
xchg
dec
dec
mov
jo
xchg
lods
std
sarl
pop
idivb
or
xchg
push
in
cmpsl
pop
cmc
or
ret
cld
inc
fwait
cmp
add
out
inc
pop
ja
scas
ljmp
xchg
fcom
mov
xchg
sub
mov
ret
jg
out
es
pop
in
jmp
in
xchg
out
push
xchg
repz
outsl
popa
loop
add
mov
test
iret
mov
ja
add
add
lds
mov
cmpsb
fcoms
sarb
daa
xchg
xchg
arpl
pop
jo
std
stos
pop
lret
add
adc
int
jno
stc
xor
out
xor
cmp
mov
iret
push
pop
std
ss
lahf
jb
dec
lret
inc
lea
or
jb
fwait
stos
jmp
push
push
cmpb
and
mov
mov
xchg
loopne
outsb
jns
fcoml
cs
jnp
sub
enter
inc
mov
push
outsl
jno
mov
jle
mov
or
mov
mov
sbb
jne
mov
insl
shll
push
shlb
xchg
popa
lea
pop
outsb
mov
inc
inc
jle
cmp
into
push
pop
andb
ss
enter
ljmp
jle
repnz
ja,pt
adc
xor
jno
test
sbb
mov
stos
push
pop
sti
sbb
mov
add
ficoml
mov
sbb
cld
fisubrl
shlb
push
and
xor
pusha
push
mov
aad
mov
and
pushf
hlt
ret
arpl
and
rcrl
int3
pop
add
das
inc
mov
add
lock
pop
xchg
dec
jno
push
scas
xlat
lds
push
jo
jmp
xchg
and
pop
inc
cmp
fxtract
movsb
icebp
add
push
and
mov
loopne
mov
jno
sub
pop
sbb
xor
or
sub
push
xor
out
adc
shll
insb
mov
mov
sub
loopne
sbb
sub
xor
in
fdivrl
dec
pop
rsm
loopne
sub
jge
sub
bound
movsb
nop
mov
cmp
xchg
movsl
and
rorb
xchg
mov
lahf
movsl
jb
or
dec
test
sub
jne
mov
jge
pop
inc
push
clc
lcall
and
inc
mov
sub
outsb
aaa
push
adcl
shll
mov
lret
cwtl
and
movb
fs
fcomp
mov
lret
stos
rcr
in
mov
imul
ret
sahf
daa
imul
imul
mov
sub
idiv
flds
sti
fs
nop
jecxz
push
push
mov
lret
sub
cmp
rorb
enter
mov
pop
xor
test
out
add
or
inc
jb
or
cmc
mov
daa
mov
adc
dec
dec
adc
lcall
add
sbb
pop
cmp
dec
xlat
pop
pop
sub
inc
daa
mov
lahf
arpl
out
lea
jecxz
scas
gs
or
nop
out
adc
ret
test
je
in
addb
pop
sbb
daa
push
mov
ja
sub
inc
push
or
enter
ljmp
lods
xor
stc
adc
ret
outsb
and
aas
dec
inc
cmp
dec
gs
pop
pop
xor
sbb
les
mov
movsb
push
cwtl
sub
adc
loopne
sbb
push
mov
inc
pop
jo
mov
lock
xchg
jne
pushf
mov
daa
adc
aaa
mov
rol
add
jnp
sub
mov
icebp
dec
outsl
adc
cmpsl
pop
pushf
mov
leave
mov
icebp
cltd
test
cld
insl
popa
test
jb
dec
mov
lgs
and
mov
push
jecxz
xchg
ja
sub
je
ret
push
mov
insl
rorb
fs
dec
jne
xchg
cs
adc
data16
aaa
popa
stc
mov
lods
pop
or
jnp
jl
int3
adc
movsl
push
jge
mov
add
decb
test
jbe
mov
mov
push
mov
pop
fst
mov
test
cmp
xchg
cmp
pop
sbb
js
dec
or
out
push
mov
add
cmp
adc
inc
or
xor
fs
xchg
leave
out
mov
mov
ja
lcall
and
cld
or
pop
js
flds
push
stc
nop
mov
sub
cmp
pushf
xor
outsb
jns
int
in
sub
mov
insb
mov
dec
xchg
test
jp
mov
leave
mov
cs
dec
jge
xor
pusha
inc
and
sub
mov
call
cmpsb
cmp
mov
fldcw
ja
or
pop
xchg
fucomip
in
push
jle
jnp
sarl
push
in
hlt
and
push
lret
rcrb
fld
or
aaa
out
inc
repz
push
jae
ss
sbb
and
test
add
js
add
imul
and
xchg
scas
popa
mov
sarb
mov
sub
mov
hlt
or
xchg
jne
and
or
xchg
aaa
out
mov
or
repz
sub
int3
dec
dec
adc
push
adc
sarl
out
or
jo
imul
xor
cmp
mov
push
outsl
out
shll
addr16
mov
mov
pop
andl
test
jl
push
sbb
aam
push
push
int3
xor
pop
push
fstpl
sti
loope
test
aas
sub
lcall
fmuls
out
add
push
popf
jg
add
std
sub
pop
leave
cmp
dec
ds
sbb
daa
dec
push
shrb
inc
xorb
fwait
add
xchg
sbbl
pop
sub
pop
nop
pop
int
lcall
addr16
mov
iret
outsb
lcall
and
cli
jg
push
arpl
pop
jecxz
mov
xchg
mov
push
les
dec
int
jmp
cmpsb
idivl
dec
inc
shrl
mov
xor
sahf
lret
test
repnz
outsb
aas
fisubrs
ljmp
nop
inc
inc
fs
xor
ss
and
cmp
lret
cld
mov
cmp
adc
xor
lds
jno
or
dec
out
mov
push
add
pop
sbb
sub
adc
adc
icebp
lret
jnp
data16
xchg
hlt
lods
popf
sub
xlat
cmp
popf
adc
or
mov
incb
and
gs
cmp
nop
shll
dec
cmpb
xchg
loope
fldcw
iret
clc
xchg
push
repz
rclb
dec
jbe
call
ret
clc
cmpsb
pop
pop
sbb
adc
sbb
jmp
inc
jmp
aad
decl
inc
mov
in
call
push
movsl
dec
aad
pop
je
mov
int3
movsb
pop
lahf
loop
adc
int
std
mov
and
dec
inc
call
mov
inc
xor
lock
das
push
sbb
inc
sbb
push
and
or
rcll
out
lock
sbb
addr16
push
sub
jo
xor
cwtl
sti
ror
mov
fwait
mov
fidivl
pop
les
shlb
sub
mov
es
mov
clc
sbbl
ljmp
adc
fmul
mov
stos
jnp
push
pop
punpcklbw
cmp
push
add
xchg
or
push
dec
loop
rcll
test
fidivrs
xchg
pop
adc
rcl
sub
pop
cmp
lret
dec
mov
add
mov
scas
sarb
or
or
push
cmpsb
mov
lds
cmp
ja
inc
pop
dec
mov
inc
inc
mov
adc
fwait
or
push
pushf
xchg
lock
fwait
lret
sub
mov
in
push
dec
xchg
lret
mov
push
out
mov
dec
dec
in
mov
mov
mov
push
or
add
dec
pusha
cli
adc
pusha
fucomi
std
fildll
jns
jmp
testl
fsub
or
imul
push
fnsave
and
std
mov
jnp
sahf
cmp
sbb
xor
dec
aad
adc
jle
iret
das
ret
jg
mov
int
cmp
pop
push
loopne
lahf
popf
loope
mov
xchg
xorl
xchg
dec
out
sbb
cmp
imul
cmpsb
scas
les
push
scas
inc
mov
mov
jnp
push
leave
adc
arpl
xchg
inc
es
repz
into
aaa
lods
push
jle
int
ja
rorl
pop
hlt
push
sub
cmp
lds
aas
jo
add
scas
inc
push
mov
or
cmp
mov
jbe
mov
jge
js
addr16
lds
xchg
cmp
jl
pop
push
dec
cltd
bound
stc
mov
xor
mov
dec
lcall
push
mov
inc
orl
in
stos
aad
js
and
push
rcl
sbb
push
sub
mov
loopne
adcl
rolb
cmp
lds
mov
xor
imul
outsb
imul
mov
pop
inc
lret
outsb
lcall
and
fwait
pop
iret
sub
mov
nop
adc
std
and
or
mov
inc
movsl
mov
scas
cwtl
and
stos
push
es
dec
subl
jl
cmp
sub
inc
roll
mov
fists
and
cmp
leave
fiaddl
fwait
or
stc
inc
sub
or
outsl
adc
dec
shll
push
mov
cmp
jle
out
xchg
cli
ret
xor
aas
cmp
stos
or
aad
push
into
shrl
movsl
cmc
xor
jnp
cmp
loop
jecxz
out
imul
xchg
and
dec
jl
lods
test
mov
rolb
or
adc
shr
jne
psubq
adc
sub
add
fistpll
push
stos
inc
aaa
fldenv
cmc
pop
repz
pop
cltd
sbb
insl
arpl
inc
push
cmp
sbb
adc
mov
dec
jmp
sbb
jbe,pn
pop
aad
mov
insl
aas
xchg
in
jb
jne
dec
dec
divb
roll
cmpsl
xlat
lea
cmp
lahf
xor
mov
dec
push
orl
xor
cmc
sub
jb
lock
mov
or
dec
mov
mov
add
std
add
jno
gs
les
das
int
icebp
inc
pop
mov
lret
push
adc
mov
and
add
sub
jecxz
sub
aad
ret
sub
mov
rclb
insl
sahf
or
lods
push
inc
ljmp
outsb
lods
xor
imul
xor
seta
jne
iret
fisubs
adc
sub
movsl
and
sbb
push
test
pop
dec
xchg
pop
xor
sub
pop
jno
imull
or
les
idiv
dec
or
or
js
xor
test
add
pop
cs
inc
dec
mov
test
rcrl
mov
cmp
mov
outsl
xor
bound
fwait
and
iret
fnstcw
xchg
sbb
idivl
inc
xchg
aam
mov
push
fnstenv
outsb
push
or
inc
pop
cmpsb
jne
jmp
pusha
jbe
sub
xchg
int3
sbb
jmp
ret
xor
xchg
out
cld
mov
mov
sbb
fisubrl
or
jnp
jnp
je
jle
test
push
sbb
iret
mov
lcall
insl
sbb
fwait
jae
inc
dec
push
mov
mov
scas
inc
add
cwtl
fisubrl
or
mov
mov
scas
daa
daa
xor
push
inc
mov
cmp
into
add
hlt
mov
pop
out
inc
sub
or
std
int3
loop
insb
cmpsb
xchg
or
inc
fiadds
pop
ret
and
pop
and
pop
kxorw
jo
lods
je
and
and
adc
movsb
xchg
getsec
push
or
jbe
jge
dec
ror
bound
lret
daa
pop
fisttps
leave
or
cmp
test
mov
push
fmull
and
cmp
or
test
aad
xor
xlat
cmpsb
xchg
aas
inc
in
xchg
mov
js
and
cwtl
push
cwtl
loope
xor
adc
data16
jne
mov
inc
movsb
mov
movsl
xor
jnp
pop
push
cmp
fsubr
je
mov
rolb
inc
xor
lret
enter
repnz
xor
popf
sub
lret
cmpsb
pop
ret
lcall
mov
sub
addr16
outsb
pusha
movsb
adcl
movsl
call
mov
fldt
mov
sbb
fildl
lret
int
add
fmuls
sub
idivl
jg
lret
ffreep
popf
iret
nop
mov
push
jge
dec
out
mov
test
jecxz
xor
shrl
jle
loop
push
mov
fs
sbb
das
fnstenv
xchg
push
mov
rcll
cmc
scas
xlat
xor
lods
pop
cmp
mov
or
into
mov
pop
cmc
clc
jecxz
loopne
and
adc
push
aad
cmp
int3
data16
mov
or
jp
xorl
cwtl
mov
adc
decb
gs
ret
ja
push
dec
ds
inc
mov
and
les
lods
sbb
jb
notl
pushf
repnz
dec
add
cmp
adc
pushf
adc
gs
mov
stos
aad
cmpsb
out
mov
xor
jb
sbb
ret
aaa
je
push
inc
jecxz
sbb
lea
mov
mov
mov
out
dec
fstpt
and
lock
bound
adc
aam
cmpsb
and
fdivrs
fwait
testb
test
addr16
pusha
leave
cmpsl
pop
test
pop
icebp
push
jle
cld
out
stos
ror
mov
testb
pop
jmp
add
mov
or
sbb
mov
rorb
es
mov
insl
test
sbb
stc
popf
sbb
ljmp
lock
fdivr
mov
xor
mov
push
push
test
arpl
loop
or
icebp
sahf
pop
mov
cmpb
shrl
ret
daa
in
xchg
pop
dec
sbb
mov
push
pop
sbb
pop
stos
adc
mov
pop
add
inc
aam
in
jns
or
mov
insl
mov
lret
dec
dec
ljmp
ja
sub
dec
xchg
adc
mov
fcompl
loop
sbb
push
sub
out
jmp
into
adc
in
mov
xchg
push
ret
mov
jb
dec
or
ja
addr16
mov
mov
xor
mov
xlat
dec
es
push
jne
jne
pusha
adc
push
fucomip
mov
in
jmp
lea
fs
adc
sub
sub
out
cmp
mov
and
add
jb
push
push
dec
jle
fisttps
in
ret
inc
adc
and
in
pushw
ret
push
pop
stc
cmpsb
inc
adc
jno
fidivl
inc
push
pop
push
popf
das
pusha
jbe
cmpsb
push
popa
inc
cmpl
testl
or
das
adc
mov
rcll
dec
pusha
ror
insl
mov
and
jnp
out
ja
arpl
js
sub
xlat
or
mov
jnp
or
and
pop
push
lcall
lds
push
scas
add
cmp
mov
out
stos
mov
enter
daa
pop
aam
cmp
xchg
in
jno
xchg
dec
ja
fisttps
mov
clc
int
fmuls
sbbb
jno
test
mov
loop
cmpsb
adc
ds
js
adc
mov
mov
stc
and
loope
xor
cmp
popa
ds
scas
mov
cmp
loop
sti
fldt
and
imul
add
fs
out
leave
pusha
ss
pop
mov
pop
inc
push
sbbl
pop
scas
fdiv
pop
inc
sub
push
test
scas
stos
incb
cmp
movsl
rorb
mov
mov
int
call
fadd
jo
idiv
je
lret
inc
shll
mov
mov
adc
test
xor
les
push
std
loop
pop
cmp
mov
pcmpgtb
fwait
popa
adc
mov
push
mov
sub
sub
loopne
lock
cwtl
pop
or
into
adc
mov
mov
call
imul
cltd
cld
push
stos
lods
push
mov
and
cli
fcompl
sub
ljmp
dec
add
outsl
outsl
xchg
gs
sbb
adc
lret
and
test
insb
les
mov
repz
add
xchg
inc
lods
xchg
sbb
arpl
ret
mov
out
adc
repz
push
jmp
aad
pcmpeqd
test
aas
lds
lret
lock
dec
cmp
push
jecxz
test
lea
mov
cwtl
adc
xlat
push
mov
jge
add
mov
inc
fnsave
lock
jp
icebp
lock
cli
mov
cltd
and
adc
add
testb
insb
dec
pop
fsubrs
cmpsl
pop
pusha
mov
xchg
icebp
cmc
sbb
cld
sbb
or
cs
add
mov
das
popf
mov
and
push
rcr
movsb
sub
not
test
and
cmp
insl
insb
xchg
fwait
clc
xor
ds
sub
ljmp
or
adc
pop
fisubs
shr
push
jmp
mov
imul
incb
mov
mov
hlt
test
inc
jno
andb
sbb
stc
pop
pop
sbb
hlt
arpl
shll
mov
push
xor
and
xchg
add
lcall
dec
or
popa
inc
dec
mov
inc
cmp
or
cmp
fwait
xchg
cmp
insb
add
lods
mulb
bound
clc
arpl
in
mov
mov
dec
pop
mov
cmp
lea
ljmp
dec
aad
mov
ljmp
jne
fs
pusha
lods
cmp
or
jmp
pop
push
stos
orl
xor
xchg
lahf
sub
arpl
pop
stos
scas
lret
cmp
insb
add
lea
insb
jle
mov
jnp
rclb
iret
dec
xor
ret
mov
xor
inc
pop
cld
std
jae
and
sub
cmp
and
daa
fcmovbe
cmp
aam
sbb
push
test
loopne
dec
scas
in
jnp
push
test
ss
xor
je
jle
jne
iret
hlt
cmp
arpl
pop
stos
or
jae
fdivs
ljmp
add
std
pop
adcl
jo
and
jmp
les
int3
movsb
test
cmp
rol
test
imul
aaa
dec
daa
pop
dec
loope
das
shrb
loope
aaa
jl
pop
fwait
dec
out
jg
mov
jp
jae
lods
lahf
xor
and
imul
inc
adc
cmpsb
xchg
pushf
dec
in
pop
and
js
in
pop
dec
xor
push
arpl
loope
jns
sub
xor
sub
ljmp
rcl
push
adc
sbb
sbb
pop
daa
add
outsb
lret
or
stc
sbb
pop
or
sub
mov
pop
rcr
lcall
arpl
pushf
xchg
mov
cld
or
outsb
es
dec
sub
add
repz
and
push
fadds
out
es
cltd
ror
and
sbb
sahf
cmp
fisubl
loop
xchg
cmp
mov
fs
outsl
js
ffreep
popa
sbb
loope
mov
movntq
dec
sub
pop
int
xor
dec
cmp
and
into
jp
in
cmc
xchg
or
jns
lcall
pop
ljmp
add
data16
in
cmp
cmp
pop
call
mov
mov
idiv
pop
movsb
out
xchg
arpl
fsub
nop
sub
xchg
addr16
jecxz
test
dec
mov
repz
xchg
or
sub
fsub
mov
pop
pop
adc
jcxz
jmp
cmp
cs
mov
aad
fdivl
aas
fs
xchg
dec
mov
pop
je
pop
pop
jecxz
xor
sub
sar
pop
mov
jno
mov
xchg
jge
in
inc
mov
pop
lahf
pop
inc
dec
sub
shrb
das
rcrb
dec
mov
out
mov
xchg
test
pop
std
testb
push
jnp
cmpsl
push
fwait
mov
icebp
int3
xlat
xchg
cld
inc
lods
lock
popf
cld
lods
mov
imul
inc
push
cmp
sub
clc
aam
pop
outsb
ret
fscale
jmp
pop
pop
push
mov
xchg
imul
mov
mov
mov
jnp
and
push
les
cwtl
add
sub
test
mov
mov
pop
aas
push
pop
jno
fstl
cmp
xchg
jno
sbb
mov
sbb
loope
repz
mov
xchg
cltd
lahf
incl
fdivrl
lret
xor
cli
xchg
xor
arpl
xchg
ss
mov
jae
ja
sbb
roll
ljmp
dec
push
sub
jp
shlb
stos
mov
fdivrs
cmpsl
pop
or
jns
sbb
js
push
adc
mov
xor
or
push
push
jp
test
mov
pop
and
in
sub
push
pop
pusha
inc
loop
fbld
stos
mov
inc
cmp
adc
and
mov
out
lahf
pop
sub
sahf
push
stc
push
stos
and
and
adc
adc
lea
movsb
lea
in
inc
xor
fwait
adc
sbb
pop
addr16
bnd
fneni(8087
push
in
inc
mov
push
jg
adc
xorl
sbb
stos
cld
imul
js
push
adc
push
lret
call
xor
aam
leave
in
dec
adc
test
pop
arpl
lods
mov
sbb
je
aaa
test
jl
add
jge
pop
mov
cmp
lock
and
mov
xchg
dec
cmp
adc
push
cli
fisubs
jbe
jno
jge
shll
push
dec
enter
and
add
jl
mov
dec
push
inc
jmp
test
and
push
mov
lahf
dec
push
stos
push
sbb
fildll
ss
mov
in
inc
mov
js
movsb
inc
pop
mov
or
ja
dec
sub
push
add
ds
aad
shlb
xor
adc
sbb
imul
call
mov
out
sub
or
aas
jmp
pop
push
pop
and
inc
mov
outsb
mov
mov
jnp
pop
mov
adc
push
in
aaa
arpl
lea
jmp
mov
idivl
lret
sbb
bound
cwtl
mov
rcrb
mov
pop
outsl
pop
mov
loop
jno,pt
and
cmp
jno,pn
ss
mov
mov
out
es
mov
jmp
mov
loope
add
and
into
pop
inc
push
cmc
dec
inc
pop
loopne
xlat
jnp
mov
mov
imul
lods
mov
pop
stos
hlt
lods
and
bound
mov
mov
sub
div
mov
and
xor
or
inc
mov
dec
gs
incl
nop
or
mov
les
leave
dec
repz
xchg
int
test
adc
ds
ds
lds
xor
adc
sub
and
add
aad
or
mov
add
push
jb
cmp
dec
sub
pop
je
fistl
jecxz
sub
mov
out
in
mov
mov
or
xchg
out
dec
sub
lods
sbb
es
pop
inc
fs
inc
aad
and
sub
das
scas
dec
xchg
mov
jno
inc
and
mov
shll
in
mov
popf
sbb
push
mov
cmpsl
push
pop
jl
sti
mov
jb
outsl
push
lret
or
cwtl
mov
xor
pop
or
rolb
scas
mov
sbb
pop
es
lcall
cli
inc
xchg
test
push
ljmp
mov
fsubrl
jecxz
sahf
cli
mov
lahf
and
mov
cltd
lock
adc
mov
push
push
ja
fnstsw
jle
nop
sbb
and
roll
jns
stos
loop
out
mov
imul
dec
sbb
out
outsb
or
xchg
add
pop
clc
inc
mov
aam
jecxz
pop
frstpm(287
pop
sbb
jmp
dec
outsl
and
inc
scas
xlat
fmull
and
repz
mov
lret
in
je
push
sub
mov
int
out
xchg
test
jmp
inc
in
sub
push
loop
mov
ret
sbb
xor
adc
mov
mov
mov
enter
iret
push
xchg
outsb
sbb
adc
inc
mov
xchg
sbb
aad
out
cmpb
sub
mov
pushf
adc
sub
flds
xlat
stos
xchg
mov
imul
popa
jae
jle
push
jns
outsl
push
fcoms
jbe
stos
iret
or
out
jg
inc
pop
sahf
mov
xor
xchg
outsb
push
scas
ljmp
pop
out
inc
incb
mov
cld
rorb
push
inc
jg
mov
adcb
add
sbb
arpl
repnz
pop
leave
arpl
hlt
iret
jp
arpl
scas
inc
or
jmp
adc
add
xor
ficoms
jbe
jo
sbb
cmp
ljmp
movsb
mov
inc
in
jbe
add
dec
movsl
test
push
lret
pop
cmp
stc
dec
jl
dec
les
xchg
test
pop
loop
in
aam
test
add
cmp
cmpsb
popf
leave
jb
sub
testb
enter
push
mov
sub
mov
jnp
xor
dec
movsl
push
subl
mov
popl
dec
andb
sbb
mov
jg
lds
cmc
push
sub
mov
rcrb
mov
fcmovu
repnz
mov
and
test
enter
sbb
andb
and
hlt
sbb
jns
int
ficomps
ret
aaa
outsb
and
sar
data16
xchg
cld
sahf
pushf
sub
xor
in
loop
and
stc
fiaddl
rcll
jge
lret
mov
bound
lods
mov
out
mov
xor
sbb
or
testb
adc
movsl
loopne
out
pop
lcall
js
rcll
sbb
je
pop
data16
test
notl
inc
xlat
mov
cmpsl
sub
jg
hlt
inc
aas
in
mov
sti
mov
push
jg
jae
inc
nop
jecxz
testb
ja
or
fnstcw
shlb
xchg
nop
out
sbb
aam
mov
mov
pop
pushf
mov
rolb
cs
jmp
sub
aas
aas
mov
scas
fimuls
movsl
outsl
je
scas
and
sub
sti
cmp
inc
mov
popa
mov
sub
dec
ret
mov
inc
pop
in
sub
xchg
das
mov
inc
mov
add
inc
shl
or
mov
std
inc
xlat
xor
dec
jge
cmpsl
push
popf
fstpt
jp
cld
cld
lcall
mov
gs
or
pop
jle
rclb
fwait
sub
push
aam
pop
or
idivl
pop
es
std
mov
and
sti
clc
in
nop
xchg
out
ljmp
lods
inc
inc
fistpll
shll
aad
sbb
int3
repnz
mov
add
pusha
iret
cltd
daa
aam
test
popf
dec
push
loope
test
test
jecxz
xchg
xchg
cli
sbb
adc
pop
enter
roll
out
sbb
cwtl
xchg
adc
pop
xor
inc
aaa
or
loope
mov
xlat
hlt
jns
xchg
outsb
pop
aad
into
ja
and
inc
jge
or
rorb
fwait
and
mov
mov
sarl
js
sarb
push
and
xchg
xchg
movsb
idivl
inc
lods
xchg
mov
sub
mov
mov
cwtl
int
inc
repnz
mov
leave
jg
mov
push
jne
mov
fbld
ficoms
jae
jae
mov
cmc
out
cli
lea
adc
jl
push
mov
stos
or
mov
insb
inc
icebp
sbb
sbb
and
jbe
ficoml
push
pop
icebp
iret
imul
daa
inc
inc
adc
jae
xchg
mov
popf
lret
sarb
xchg
jmp
aam
jmp
add
subl
push
scas
push
and
sarb
mov
jno
insl
repnz
mov
adc
sbb
arpl
and
push
sbb
mov
add
pop
int3
mov
in
push
lock
ss
xchg
sub
scas
jge
and
cmp
and
out
jbe
or
jge
dec
in
dec
cmp
daa
push
rolb
jno
adc
dec
xor
in
dec
and
xor
inc
scas
scas
lahf
out
fsts
or
int3
out
inc
mov
mov
in
adc
adc
sbb
pop
pop
in
push
pop
or
movsl
es
sub
cmp
jecxz
push
rol
movsl
pop
xchg
not
addr16
pop
mov
outsb
arpl
ret
int
add
test
xor
insl
inc
fsts
sub
sub
cmp
mov
push
or
fcompl
cmp
adc
lahf
jg
scas
xor
pop
movb
lahf
mov
int
iret
imul
divb
lret
push
rcll
inc
sbb
cmpsl
adc
mov
and
sbb
push
stc
xchg
push
pcmpgtb
adc
fwait
insb
ss
dec
cmp
test
imul
outsb
and
hlt
inc
aam
cmp
sbb
rorl
outsl
lea
cmc
fstpt
loopne
pop
mov
adc
mov
sub
mov
ret
popaw
jns
lods
out
xchg
mov
xor
jle
ret
mov
mul
mov
addr16
sti
subl
mov
adc
sbb
lock
sub
repz
rclb
pop
aas
push
call
cmp
and
mulb
pushf
push
inc
cs
jl
lret
inc
inc
insl
inc
aas
inc
pop
or
push
sbb
je
xlat
cmp
cmp
rol
mov
pop
aas
cwtl
add
jmp
push
pop
mov
js
jle
push
test
nop
push
or
arpl
lock
mov
insl
mov
sub
scas
arpl
aas
aam
notb
ja
dec
inc
fcompl
mov
push
in
movsb
cld
lds
lret
ljmp
mov
outsb
mov
pop
popf
aaa
mov
sub
and
mov
outsb
ret
xchg
fisubs
loop
mov
push
xor
and
fwait
xchg
mov
adc
in
cli
lods
mov
loop
rep
jno
in
or
push
push
xchg
psrlw
roll
inc
dec
cld
cltd
pop
lock
into
adcb
xchg
fisttpll
lods
xchg
jl
hlt
sbb
leave
shll
pop
jae
dec
stos
shlb
xchg
outsb
sub
add
mov
insl
or
sub
push
std
mov
fiaddl
fwait
pop
nop
pop
in
ja
push
xchg
inc
faddl
or
pop
jns
push
jp
push
adc
add
sbb
mov
inc
sti
dec
bound
xor
jns
arpl
in
int
xchg
repz
shll
adc
or
subl
push
pop
data16
int3
ss
cmpsb
inc
add
divl
pop
test
filds
add
xchg
test
inc
orl
out
push
mov
mov
xchg
stos
subb
insb
fisubrs
cld
jnp
mov
in
in
test
iret
enter
movsl
arpl
pop
or
mov
sbb
aam
push
xor
out
push
cld
outsb
ficompl
call
imul
push
mov
cmp
mov
sarb
xor
arpl
adc
inc
cmp
push
or
pop
dec
cmp
out
inc
or
jle
loop
sbb
pop
cmp
daa
add
es
dec
subb
jo
cmp
rcll
aam
lahf
push
out
xorl
pop
enter
daa
push
pop
ss
lret
cmp
movsl
leave
dec
mov
mov
xor
iret
lahf
lods
roll
enter
xchg
jecxz
inc
dec
jnp
cmpsb
mov
scas
lahf
js
push
adc
inc
jge
push
imul
sub
xchg
mov
lret
xchg
mov
jbe
popa
movsl
pop
or
popl
cmp
orb
sbb
cmp
xor
mov
mov
sub
add
pop
mov
stc
rcll
pop
mov
sub
add
adc
mov
orb
iret
jbe
mov
popf
inc
and
mov
fcoml
push
fsubrs
aaa
divl
int
shll
rorl
jle
sahf
loop
jne
inc
dec
std
outsl
mov
jmp
push
jg
stc
dec
imul
ss
cmp
mov
fcoms
xor
xor
cmp
push
or
call
movsb
cmc
mov
cmp
pop
adc
rclb
test
clc
imul
fiadds
xchg
cmpsl
data16
in
lods
aad
and
xlat
xor
rcll
mov
bound
push
sti
push
dec
int
push
stos
xchg
rolb
cltd
inc
pop
dec
js
jbe
das
mov
fldenv
adc
les
xchg
push
std
jmp
call
mov
in
adc
jnp
adc
inc
jmp
je
sub
pop
inc
popa
shrb
loopne
mov
xor
je
push
or
dec
popf
push
mov
push
sbbb
add
mov
les
cwtl
fistpll
aam
out
sub
cmp
aas
lcall
stc
xor
xchg
jmp
and
test
rorl
test
mov
inc
iret
jge
push
scas
ds
sub
lock
dec
lret
pop
xchg
push
mov
clc
enter
fisubs
mov
mov
sub
aam
add
es
dec
insl
out
subl
ljmp
mov
insl
xchg
mov
jecxz
lahf
push
xor
wrmsr
imul
test
lret
test
push
addr16
lret
in
add
sti
insl
sbb
fidivs
rorl
fistl
stos
scas
or
jecxz
outsl
xchg
mov
jno
dec
in
jmp
filds
mov
xor
mov
mov
fldl
fcompl
bnd
xor
dec
dec
test
inc
jae
out
repz
fwait
xorb
add
jae
popa
out
and
inc
bound
sbb
in
fwait
mov
mov
fsubrs
or
fcmovnb
addr16
popf
jp
lcall
fwait
cld
mov
adc
cltd
xchg
jne
ljmp
mov
inc
jecxz
popa
dec
or
jl
out
and
and
aad
test
out
repnz
scas
sahf
jp
sbb
call
in
in
mov
pop
in
jmp
ret
mov
fiaddl
inc
push
jno
jae
pop
dec
push
clc
mov
push
jnp
fimull
jae
add
loop
imul
scas
fdivr
push
out
mov
outsb
sub
scas
sbb
repnz
leave
enter
mov
jno
shll
inc
ds
inc
or
sbb
aaa
movsl
dec
daa
or
mov
jns
das
int3
shr
insb
add
fidivrs
lds
test
and
scas
cmpsb
movsb
pop
movsb
pop
push
add
jbe
outsb
in
push
aas
enter
daa
push
data16
mov
adc
jle
xchg
dec
adc
push
adc
jns
fadds
push
and
and
lret
cwtl
int3
push
data16
test
bound
cmpsb
es
in
loop
test
stc
fs
pop
test
push
loope
clc
adc
mov
in
cltd
cwtl
dec
movsl
in
rcrb
cltd
mov
pop
test
sbb
dec
and
mov
push
cmp
enter
inc
arpl
sub
sbb
lcall
mov
sub
sbb
shll
pop
jg
pop
mov
cmpsl
out
inc
lret
xorl
xor
fisttps
int
pop
xchg
sub
divl
lret
imul
push
sbb
test
test
xchg
cltd
mov
out
stc
ljmp
bound
aaa
imul
mov
jg
pop
addr16
ljmp
or
xchg
into
jmp
inc
fnstsw
xorb
pop
xor
adc
ljmp
xor
mov
sbb
lods
mov
out
ljmp
xorl
int
jne
incb
mov
nop
je
jns
xlat
shrl
inc
mov
fstps
cli
les
sub
sbb
aas
xchg
fnstenv
xor
inc
xlat
cmp
mov
mov
adc
std
test
add
mov
mov
inc
jl
imul
mov
cmp
repnz
jecxz
mov
lea
xor
mov
xor
pop
sarb
sbbl
pop
into
adc
lock
out
das
sub
fsubl
dec
sbb
and
cmc
add
fnsave
cmpsl
negb
roll
cmp
dec
cmp
jle
mov
ljmp
add
enter
add
mov
pushw
jns
pop
frstpm(287
enter
popf
sub
pop
inc
aam
jl
ret
movsb
adc
es
nop
xchg
jecxz
xchg
movsb
fiaddl
in
sub
jecxz
lods
mov
adc
sub
test
cmp
jg
mov
cltd
int3
adc
test
and
scas
sti
pop
push
sub
sbb
adc
test
push
sbb
out
push
pop
leave
mov
cld
out
inc
push
sub
arpl
mov
xor
in
add
xor
xchg
dec
mov
loopne
nop
dec
mov
loope
ja
orl
cmp
or
fwait
scas
mov
push
push
popa
add
into
push
out
add
bound
das
sarl
jo
in
mov
inc
mov
sbb
fisttpl
sbb
packuswb
loope
mov
mov
mov
addr16
xor
ffreep
add
xchg
xorl
sbb
cmp
out
push
and
adc
pushf
stos
popa
jge
and
hlt
cmpsl
insb
orl
jle
out
push
in
push
jno
loop
cld
iret
xchg
ret
add
out
inc
popa
push
aam
andl
mov
mov
leave
inc
cli
imul
lahf
in
pop
jp
sbb
xlat
dec
imul
scas
aas
pop
xor
rorl
sub
mov
data16
pop
leave
aas
scas
jo
sti
imul
inc
aas
push
sbb
sbb
or
cmp
adc
lcall
fldt
lds
push
jo
iret
push
scas
sbb
cmp
fwait
add
jb
jbe
shrb
or
jno
daa
push
idiv
cmp
loope
jmp
mov
dec
sbb
push
hlt
mov
xor
adc
jae
push
cmp
push
test
sub
xchg
lea
leave
int
js
pop
ds
les
dec
push
movsb
lods
loope
pop
std
sub
mov
pop
ds
and
mov
xchg
repnz
in
add
mov
xchg
xor
pop
push
pop
sub
mov
pop
mov
lcall
sahf
push
cmp
xchg
dec
push
outsb
js
fists
lock
pop
jg
xor
arpl
scas
addr16
and
cmp
push
loop
and
fsub
popf
popa
divl
popf
xor
mov
add
cld
in
mov
cmp
js
sahf
sub
jmp
cld
aam
outsl
jb
jmp
jp
sahf
stc
mov
adc
cmc
adc
stos
aam
push
pop
cmp
xor
into
cli
lea
cmp
shrl
cmp
lock
into
int3
xchg
shl
xor
and
push
repz
adc
jmp
adc
outsl
add
adc
ret
cmp
mov
xlat
mov
sbb
mov
cmp
sti
je
or
fs
gs
dec
adc
inc
push
out
or
xchg
sub
data16
repz
sbb
rcrb
mov
loope
adc
fcompl
daa
pop
cs
inc
jbe
push
loopne
inc
xchg
shl
aas
push
movsl
xchg
jb
addl
mov
jmp
jns
call
sub
inc
out
mov
cltd
sbb
and
lcall
loopne
inc
js
push
lock
or
mov
add
sbb
xchg
in
sub
jo
pop
insb
arpl
loopne
lock
cmp
cmpsl
push
shll
cli
mov
mov
inc
lea
mov
in
mov
mov
cli
inc
shlb
aad
aam
dec
inc
ret
xor
frstor
imul
clc
ror
sub
jecxz
inc
ljmp
mov
mov
dec
out
in
icebp
inc
push
out
testb
das
jbe
jp
inc
cltd
add
leave
mov
clc
ss
in
pop
in
fnstsw
pusha
test
and
xchg
or
sarl
sub
stos
lea
out
test
cmp
jle
cld
jmp
fidivl
test
jns
or
aam
add
xchg
loopne
dec
and
pop
pop
sarl
xchg
push
fs
mov
js
leave
loope
fidivs
push
cli
sbb
add
sub
daa
out
loope
mov
jns
insl
and
xchg
loopne
pop
mov
aad
mov
pop
inc
aas
addr16
ss
fdivrl
sub
scas
mov
repz
and
mov
pusha
jmp
and
jmp
in
sub
idivl
out
and
sub
add
xor
stos
dec
stos
aam
dec
and
outsb
insb
out
push
jnp
imul
jbe
insb
in
sbb
mov
sub
pop
mov
repnz
insb
pop
movsb
jae
xor
push
jle
pop
popf
orl
inc
jns
data16
ds
sbb
sub
scas
outsl
scas
mov
sbb
mov
mov
loope
hlt
inc
mov
pushf
inc
inc
test
or
nop
pop
aad
and
cmp
cmpsl
es
arpl
stos
pop
lret
faddp
and
cmp
scas
stc
bound
cmp
nop
movsb
jne
inc
push
aam
jbe
movsl
xor
in
xor
daa
push
or
cmp
pop
jl
or
test
xlat
and
xor
mov
cs
or
push
or
out
lods
int
push
clc
rorl
sti
push
mov
in
mov
hlt
js
cmp
in
push
iret
data16
pop
inc
sub
mov
fbstp
leave
movsl
je
mov
sbb
mov
sbb
in
xor
rcl
dec
xor
pop
xchg
jne
sub
push
add
gs
fmull
mov
outsb
fisttpl
adc
or
test
adc
jbe
xor
popa
mov
lret
adc
and
fcomps
mov
lret
faddp
in
ret
adc
fwait
popf
sahf
lret
mov
add
push
cmp
loop
xchg
jbe
insl
imul
adc
and
push
mov
jb
rcrb
cwtl
pop
jb
or
xchg
ror
scas
jge
cmc
notl
mov
adc
leave
and
push
sbb
dec
std
dec
add
inc
jmp
xchg
cmp
adc
sub
sbb
in
mov
push
and
xchg
jae
xchg
add
push
dec
xchg
sahf
loopne
push
cs
repz
add
mov
call
cmp
paddsw
pop
scas
popf
pushf
adc
xor
loopne
movsl
cs
mov
cwtl
imul
aas
mov
cli
sub
je
rol
js
inc
mov
cmp
in
mov
mov
sbb
mov
pop
xchg
xchg
pop
adc
inc
inc
ljmp
mov
dec
movsb
ret
das
jmp
popf
iret
mov
mov
popf
into
negb
loop
dec
xor
mov
sub
pushl
cld
jno
xchg
lret
cmpsb
xchg
sub
enter
leave
in
andl
jne
pop
sub
das
insb
aam
insl
or
ret
es
std
or
pop
and
xchg
and
addr16
or
mov
scas
mov
clc
fwait
rcll
ret
cmovge
aas
cltd
cmp
xchg
test
mov
cmp
frstor
sbb
sbb
mov
pop
pop
mov
stos
jl
inc
out
or
lahf
xchg
mov
add
es
or
mov
sbb
fs
cmp
jbe
jl
pop
ja
scas
in
dec
and
inc
cmp
insl
or
mov
fwait
or
cwtl
inc
add
test
mov
bound
int3
jns
push
ja
cmp
pop
inc
mov
add
push
bound
adc
addr16
jp
mov
sbb
jg
rolb
fucomi
push
pusha
test
iret
filds
inc
xlat
xchg
or
xchg
mov
cmpsb
addl
cvtps2pi
pop
fnstcw
xchg
mov
stos
inc
scas
movsb
and
or
insb
pop
sbb
jnp
jmp
aad
cltd
dec
scas
adc
adc
ret
sub
in
dec
inc
ja
stos
jae
test
inc
aas
sub
stc
mov
scas
fisubrl
mov
push
daa
ret
sbb
dec
shrb
adc
add
ror
sarb
stc
repnz
cmc
leave
sub
pop
adc
add
clc
or
dec
ss
loop
dec
or
mul
add
leave
mov
pop
stc
push
test
gs
test
sti
lahf
xchg
scas
fsubrs
inc
cmp
and
movsb
add
add
out
insb
jge
nop
mov
daa
push
movsl
and
movl
sbb
movsl
dec
pop
or
push
mov
dec
mov
lahf
sub
rclb
pop
xchg
test
ret
push
mov
mov
pop
in
xchg
jnp
js
pop
adc
push
scas
mov
sbb
pop
sub
xor
mov
ds
mov
shrb
iret
cmpsl
adcb
pop
add
mov
xor
sub
sub
mov
lcall
and
hlt
cmp
je
pop
outsb
ds
stos
adc
outsb
sub
clc
or
stos
mov
loopne
and
or
call
loop
fcomps
push
divl
insl
mov
subl
sbb
mov
test
xor
jno
loop
lods
inc
stc
and
fs
mov
xor
adc
cmp
out
test
cli
repz
xor
ret
movl
cmc
mov
xchg
adc
lret
out
adc
fisttps
into
dec
and
insb
or
pop
add
sub
lret
pop
mov
push
mov
and
stos
iret
pop
gs
in
nop
add
mov
jnp
or
add
mov
jl
pop
xrelease
aad
and
mov
mov
cs
mov
imul
adc
pushf
mov
jmp
cs
aam
fists
inc
int
push
aas
pop
ljmp
imul
pop
jecxz
inc
cmp
enter
mov
hlt
cwtl
test
insb
mov
xlat
fisttps
or
dec
inc
mov
insb
pop
mov
sbb
xchg
pop
lock
push
das
enter
and
and
inc
ss
mov
jecxz
mull
arpl
mov
test
add
pushf
int
lret
adc
mov
mov
inc
in
mov
cmp
cmp
dec
mov
aam
in
ret
push
push
repz
fs
mov
dec
xchg
popa
adc
ljmp
inc
lods
leave
xor
mov
xchg
arpl
push
cli
push
pushf
pop
sub
lods
push
sub
mov
sbb
test
pop
mov
mov
nop
fnstenv
test
mov
xchg
pop
push
sbb
pop
std
shl
or
pop
lret
stos
imul
out
outsl
sub
add
inc
xor
mov
push
or
jmp
mov
aaa
jns
ja
mov
inc
iret
push
push
or
popa
inc
fwait
cmp
lods
push
inc
or
add
fbstp
xlat
ljmp
in
sbb
ljmp
scas
outsl
or
jbe
jp
out
mov
mov
mov
sbb
xlat
jne
pop
ret
xchg
fistps
imul
add
cmp
out
pop
adcl
sti
sub
jbe
bound
aas
mov
and
iret
imulb
fwait
jnp
sub
in
fsts
adc
int3
iret
mov
jle
pop
pop
out
inc
sbbb
push
add
dec
popf
mov
imul
inc
xor
sbb
outsl
xchg
pop
xor
adc
aaa
mov
push
repz
cmpsl
mov
pop
dec
sub
movsb
xor
hlt
fcoml
arpl
cmpsl
leave
inc
dec
insl
or
push
mov
clc
or
mov
add
dec
int3
cmp
pop
sub
fimuls
mov
leave
adc
scas
mov
and
ljmp
mov
push
jb
jbe
lods
dec
jge
pop
dec
enter
daa
dec
ret
cli
xchg
mov
jl
and
dec
int
outsl
push
popf
fisttpll
and
orb
push
mov
xchg
test
mov
inc
cmpsb
xor
js
in
mov
push
inc
mov
sub
test
jmp
and
xor
jp
fstpt
and
test
jmp
add
mov
aam
mov
fists
sbb
xor
mov
aaa
in
lcall
insl
fcompl
inc
mov
adc
inc
lock
loopne
mov
mov
popf
mov
lea
xor
push
push
jmp
cmpsb
int
sub
fcoms
int
jo
in
lret
xor
sbb
popf
sbb
sahf
adc
enter
outsl
xadd
stc
fcomi
inc
mov
ss
pop
cmp
mov
jp
es
xor
jge
pop
lock
or
outsb
into
jne
mov
test
in
lret
scas
pop
scas
fists
imul
adc
add
sub
lods
pop
pop
fwait
cmp
adc
mov
jns
aam
adc
fsubs
daa
add
loopne
fisttpl
jnp
inc
mov
fnstcw
and
les
ds
in
fwait
sbb
xor
ss
xchg
and
pushf
push
push
jmp
sbb
fcom
es
inc
call
adc
jb
test
dec
loopne
loopne
subb
lret
iret
in
sbb
aas
mov
push
xchg
mov
mulb
mov
jge
mov
add
inc
or
mov
das
cmpsl
shll
inc
mov
jae
rcrl
sbb
mulb
out
adc
cmp
cmpsl
dec
loop
mov
pop
loope
cld
sub
lret
test
cld
mov
add
aam
push
jb
rcrb
dec
push
sub
iret
sbb
jae
js
loopne
cmp
hlt
negb
clc
orb
mov
dec
popa
cmp
pop
mov
mov
mov
push
ja
aad
or
add
or
push
mov
xchg
mov
test
loope
xchg
adc
sarl
mov
pop
jne
fisubrl
rcrb
xchg
sbb
fildl
iret
pop
mov
ret
xor
inc
or
push
or
mov
mov
cmp
sub
in
push
jne
push
lcall
ljmp
data16
loope
mov
cli
fwait
imul
jecxz
sbb
mov
dec
sub
jle
pop
bound
or
in
nop
mov
int
inc
mov
mov
mov
or
add
cmp
push
aam
mov
xor
das
in
out
inc
jne
xor
pusha
mov
xchg
mov
jmp
inc
dec
add
mov
shrl
mov
pop
push
adc
stos
sub
mov
insb
das
clc
enter
cld
jle
lret
popa
in
into
loopne
dec
mov
xchg
pop
in
xor
test
inc
lea
and
repz
push
push
rcrl
sub
into
popf
movsb
xchg
mov
add
adc
gs
lret
push
inc
push
dec
jbe
shl
sarl
mov
cmp
sbb
daa
popf
int3
arpl
pop
and
dec
jbe
sbb
mov
scas
or
jge
and
lcall
movq
stos
mov
lds
es
shlb
sbbb
movsb
push
ret
shl
jbe
jge
adcl
cmp
mov
jl
ljmp
subb
xor
adcl
push
test
adc
push
pop
mov
inc
test
jbe
mov
fldln2
gs
push
pop
shr
push
mov
push
lods
cmp
pusha
out
ds
cmp
movsl
mov
mov
fs
jo
mov
inc
xchg
add
fdivrp
xor
inc
push
xchg
jae
pop
push
aas
lods
sub
xchg
lds
push
dec
push
sub
subl
cmp
xchg
mov
mov
xchg
mov
in
and
push
push
out
rorl
iret
mov
movsb
lret
mov
mov
daa
mov
lea
sahf
mov
push
test
push
xor
xchg
outsl
out
adc
loop
jl
stc
xchg
sub
sub
ss
popl
test
cli
pop
xchg
push
sbb
in
jp
js
cmp
pop
stc
inc
cmc
dec
test
xchg
pop
into
mov
imul
sahf
ret
sub
data16
ss
fwait
mov
scas
or
sub
jg
mov
in
sar
xor
and
into
xor
mov
outsl
push
inc
mov
adc
xchg
fcoms
xchg
test
sbb
lods
dec
lock
mov
enter
dec
adc
popa
pushf
adc
mov
stos
aad
pop
inc
inc
add
pop
aas
lcall
dec
push
inc
push
je
and
jecxz
mov
into
sub
lea
cs
sbb
sbb
mov
out
mov
pop
std
sahf
popl
cwtl
ss
push
or
xchg
jnp
loopne
lahf
and
gs
push
popa
dec
std
jl
lcall
inc
or
std
shl
xor
dec
cld
repnz
stos
lret
repz
mov
push
mov
daa
mov
into
inc
ja
jbe
mov
out
push
add
push
adc
add
iret
xchg
es
loopne
pop
aaa
sar
mov
jb
ljmp
mov
mov
fldenv
iret
push
push
sarl
push
aas
add
pop
jo
fbld
adc
stc
push
fstpl
sub
test
sahf
xchg
xchg
sarb
xor
jg
pop
and
enter
mov
xor
sbb
ljmp
xor
xchg
mov
xor
cld
imul
mov
ret
into
cld
dec
cli
inc
and
std
mov
and
xchg
faddl
xchg
icebp
popf
out
pop
add
adc
xchg
in
push
mov
pop
cmpl
pop
lods
jp
jp
shll
mov
daa
xor
add
dec
lret
jne
outsl
fsubl
cmp
fistps
fistl
sub
push
xchg
adc
inc
xorl
repz
xchg
sub
in
push
iret
push
dec
in
stos
mov
mov
inc
jnp
cli
xchg
jle
and
mov
sub
hlt
ret
ds
lds
inc
cwtl
imul
mov
pop
push
mov
mov
add
push
jne
mov
sbbl
mov
imul
push
push
xchg
pop
xchg
rclb
sbb
add
pop
je
jb
sbb
sub
and
lret
xor
pop
or
dec
rolb
add
outsl
pop
xchg
xchg
xlat
ja
jo
outsl
sbb
adc
push
ret
movsb
mov
stos
scas
jbe
subb
and
jmp
jno
jmp
adc
nop
es
arpl
xor
sbb
lahf
test
cmp
pop
testl
std
gs
aaa
jns
cmpsb
cmp
aaa
in
dec
cs
pop
pop
lcall
fsub
pop
iret
leave
sub
sbb
xchg
pop
out
ds
movsl
nop
xor
xor
iret
and
jnp
int3
add
test
xor
aam
sub
xchg
add
xor
jl
push
shll
cmc
rorb
addr16
add
xchg
xorb
jg
mov
pop
mov
cmp
and
sti
push
icebp
xor
int
push
fmuls
xor
jae
out
dec
dec
fimull
shlb
test
cwtl
jmp
ret
lea
int
sbb
pop
xor
dec
or
movsb
cmp
inc
out
ss
in
add
lcall
out
cs
mov
fidivrl
mov
jmp
cmc
adc
aaa
loopne
xchg
out
in
cmp
insl
adc
imul
jl
add
scas
data16
push
lods
es
mov
or
xlat
out
fists
sub
cmp
dec
push
sti
fildll
adc
gs
jp
xchg
jne
dec
adc
inc
mov
int
test
adc
popf
rol
repz
jns
xchg
imul
sbb
daa
mov
xor
sbb
and
adc
xlat
push
pushf
dec
shrl
loopne
jnp
mov
leave
inc
push
mov
aas
cmp
jb
loopne
dec
into
lds
in
jecxz
dec
add
sar
lods
jmp
es
fnstenv
icebp
mov
inc
iret
or
push
or
sbb
xor
mov
adc
mov
out
push
imulb
lea
pop
movsb
ljmp
dec
loope
or
cld
sbb
popf
lcall
lods
in
mov
xchg
push
rcl
shl
sub
inc
test
es
mov
ja
clc
sbb
xchg
push
ljmp
imul
outsl
mov
cld
mov
and
sub
data16
loope
cltd
push
loop
test
in
push
mov
movsl
mov
je
jno
call
outsb
stos
pop
lret
mov
mov
xchg
cmpsb
int3
stos
add
aad
xor
and
int3
lods
sub
mov
repnz
push
ss
dec
in
mov
inc
xchg
mov
outsl
fwait
leave
mov
push
sub
imul
cmp
out
mov
stc
pop
in
jno
xchg
imul
mov
jb
lods
inc
jmp
mov
jnp
mov
push
sahf
add
lods
mov
pusha
lock
fistpll
xchg
push
pop
sub
and
int
ret
out
cmp
mov
mov
lcall
in
pop
insb
add
mov
and
in
adc
lock
shl
ret
xchg
pop
les
mov
pop
jae
push
dec
xor
sub
cmova
ret
xor
cmp
push
sub
test
xchg
mov
fsubrs
xor
pop
xlat
movsl
leave
or
hlt
mov
xchg
adc
scas
xchg
or
aaa
pop
fdivl
fidivs
or
and
int3
cli
cltd
mov
mov
enter
jge
pop
rcll
xor
add
and
scas
out
sub
jmp
jbe
fwait
mov
add
enter
daa
dec
xor
jno
inc
sahf
jl
imulb
push
inc
lcall
mov
pop
lahf
movsb
ljmp
adcb
push
out
cltd
pusha
inc
aas
outsl
cmpsb
mov
xchg
xchg
clc
rcll
xlat
popf
push
xor
loope
jae
inc
push
mov
mov
movsl
xchg
lret
mov
clc
movsb
cmp
mov
pop
add
jg
xor
pop
sbb
cmp
movsb
mov
pop
mov
sub
push
sbb
mov
and
outsb
lret
adc
xchg
out
inc
jg
scas
js
int
das
mov
cmpsl
bound
pusha
xchg
cmp
int
pusha
add
imull
dec
jl
ffreep
inc
mov
fyl2xp1
sbb
cltd
sahf
cli
sbb
clc
xor
push
mov
loop
sbb
stc
add
rcll
orl
mov
icebp
out
mov
jecxz
lret
jb
cmp
arpl
or
jae
push
gs
cmc
fcmovb
and
adc
pop
or
mov
imul
scas
push
add
adc
data16
mov
or
xchg
sub
add
mov
mov
pop
ss
gs
pop
cld
dec
jo
inc
movl
dec
repz
std
mov
sbb
mov
shlb
mov
adc
cli
sbbl
dec
cs
dec
jns
sti
repz
mov
xor
pop
inc
dec
inc
adc
jecxz
sub
xchg
lea
out
xchg
sub
mov
ljmp
orb
mov
dec
inc
ds
inc
mov
inc
mov
fcmove
das
inc
jo
mov
dec
pop
ret
inc
pop
roll
shll
imul
xchg
and
lret
dec
sbb
inc
cmpsl
dec
xchg
xchg
loopne
or
dec
ds
rorl
repz
xchg
mov
pop
mov
adc
xchg
push
jo
cld
mov
ret
lea
jge
push
insl
daa
jmp
movsb
xchg
pop
in
ljmp
push
lods
jne
lahf
mov
pop
mov
imul
insl
movaps
xor
in
sahf
sub
mov
inc
push
jg
pop
frstor
sub
xchg
xor
roll
mov
stos
daa
jg
out
sti
lahf
mov
add
cmc
mov
xor
test
xor
or
xchg
fiaddl
shrb
pop
and
or
rcrl
inc
sub
fwait
clc
or
push
int3
pop
repnz
dec
orb
mov
idivl
int
in
filds
mov
stos
mov
stc
push
stos
mov
flds
xchg
mov
sti
xchg
dec
nop
cmp
jne
adc
fistps
pop
jmp
sbb
jle
cmpsl
push
adcl
out
icebp
lods
sub
bound
data16
xchg
mov
data16
test
lret
jnp
flds
dec
mov
in
add
out
iret
pop
in
ret
pop
pop
sti
xor
inc
scas
or
jae
sbb
push
adc
ret
ret
pusha
into
inc
jae
pop
notl
shll
add
scas
hlt
nop
fcoms
pop
mov
inc
lret
mov
stos
insb
arpl
orb
arpl
test
lods
ds
repnz
or
scas
jecxz
xor
int3
in
jno
in
xor
xchg
aam
vmovd
jo
pop
ljmp
cmc
push
movsb
mov
dec
push
scas
add
jge
sbb
daa
dec
pop
bound
fsub
jno
push
jl
cmp
push
sub
arpl
push
inc
lds
cmp
ja
xchg
push
mov
dec
adc
ds
and
sbb
and
pop
jge
ds
cwtl
inc
loope
loope
sub
xlat
insl
cmp
pushf
pushf
ds
sub
cmc
pop
call
xor
push
sbb
out
mov
adc
cmpsl
xor
xchg
loopne
fcomps
or
sub
pusha
dec
pop
xor
pop
lcall
popa
fmull
fldt
pop
dec
shrl
es
lods
rcrb
and
mov
jle
mov
add
push
divl
int
cmp
add
imull
lret
jns
jbe
loopne
sarb
sahf
popf
fiaddl
jns
test
loop
cmp
fs
pusha
scas
ss
xchg
mov
lret
int
repnz
xor
fstl
into
add
test
mov
cmpsb
jecxz
sub
repz
outsl
adc
mov
lods
hlt
sahf
and
sbbb
insb
sbb
mov
and
or
pop
out
movsl
rcrb
nop
dec
pop
decl
fs
fsts
mov
les
icebp
dec
sbbb
dec
lahf
xor
pop
inc
idivl
gs
pushf
push
imul
jp
imul
inc
aad
inc
push
shrb
jb
or
dec
mov
jbe
jecxz
push
and
lea
mov
negb
cmp
das
cmp
jnp
jle
out
and
mov
lock
mov
inc
mov
add
xor
push
inc
stos
divb
pop
lods
std
jno
into
dec
adc
xchg
icebp
mov
lock
jae
sbb
inc
cmp
mov
in
mov
sarl
jo
insb
mov
repz
sbb
sbb
jp
add
insl
push
sbb
pushf
fs
pop
subb
pop
mov
and
lcall
gs
add
jne
test
test
push
jg
inc
adc
fisttpll
dec
pop
xchg
int3
sbb
psrlw
mov
mov
xchg
xor
fwait
add
push
lods
les
or
popl
xchg
out
nop
dec
repz
rcrb
push
jg
int3
xchg
outsl
dec
shll
das
or
pop
xor
outsl
xchg
test
stos
or
mov
gs
cmp
xchg
inc
sbb
jg
or
and
rorb
imulb
stos
pop
jp
imul
or
sub
mov
sbb
dec
jae
and
pusha
es
jle
mov
jmp
adcb
push
out
aam
sub
popf
mov
jle
stc
and
jge
sti
insb
cmp
call
adc
out
ret
rcrb
popa
adc
loope
sti
add
shl
inc
popf
js
adc
sub
inc
repnz
ficompl
lea
imul
mov
push
imul
inc
sbb
repnz
xor
sub
push
push
sbb
fnsave
inc
pop
pop
fwait
or
lods
push
mov
lock
enter
rorb
pop
adc
lds
jo
repnz
and
jns
cmp
movsl
movsb
inc
sub
push
std
xchg
lea
sub
enter
daa
dec
syscall
cmp
lock
jno
imul
or
dec
clc
sti
pusha
push
or
ss
in
sub
lahf
loop
bound
stos
aad
outsb
jne
push
test
jle
in
adc
shl
in
add
dec
js
jmp
es
scas
out
mov
jne
cmp
dec
dec
movsl
movsl
and
shr
cmp
or
add
outsl
cld
xor
cwtl
sbb
mov
ret
dec
sub
test
daa
inc
jne
loop
fdiv
mov
dec
outsb
nop
fidivrl
or
xchg
jg
mov
and
jne
imul
inc
mov
fdivrs
mov
or
mov
add
sahf
inc
mov
xor
pop
inc
outsl
push
add
adc
in
fs
cmp
xor
cmp
jno
cs
pop
or
and
stos
xor
xor
sti
or
int
in
ds
push
dec
ret
pop
dec
fs
adc
outsb
adc
pop
cwtl
adc
or
scas
data16
lods
fstpt
lret
xlat
stos
jp
sub
pop
adc
nop
movsl
repz
in
addl
push
sub
dec
imul
push
les
shrl
sbb
cwtl
jae
mov
jmp
hlt
out
adc
pop
jmp
xchg
push
or
aad
sbb
aas
push
sbb
jb
out
aas
dec
xor
je
cmp
fisubl
pop
lea
bound
cwtl
or
leave
mov
or
mov
je
adcl
loopne
pop
mov
lock
das
add
dec
mov
mov
jae
shll
loopne
sbb
xor
sbb
dec
stc
enter
shl
mov
cld
sahf
outsb
clc
lret
scas
scas
xor
std
in
mov
xchg
cmp
repnz
jl
ljmp
ret
stos
stc
andl
cmc
sub
clc
test
addr16
ljmp
aad
dec
repz
mov
sub
dec
push
mov
ljmp
mov
decl
mov
outsb
adcb
xchg
mov
pop
test
pop
xor
icebp
mov
sbb
test
fstps
pop
stos
add
xchg
push
xchg
jnp
cmp
push
rcll
fldl
xor
addl
test
xchg
js
dec
pop
dec
ljmp
test
das
adc
cmp
or
rorl
push
or
add
add
out
fnstcw
bound
jns
arpl
mov
and
loop
mov
out
push
cmp
test
push
and
dec
loopne
mov
bound
push
pop
pusha
rorl
xchg
iret
add
pop
in
mov
subl
out
sub
sub
fsubrs
push
dec
pop
shrl
xchg
dec
rep
inc
push
mov
jle
adc
adc
in
adc
jbe
sbb
inc
imull
push
xchg
push
popf
lahf
mov
adc
in
fimull
dec
xchg
addr16
sbb
xchg
imul
cmp
mov
loop
sarb
in
out
repnz
xor
leave
outsb
lea
hlt
sahf
cld
adc
out
inc
pop
add
sbbl
dec
and
sbb
lods
or
in
add
es
mov
inc
aaa
scas
pop
and
js
arpl
popa
xor
movsb
int
adc
imul
in
repnz
or
inc
cmpl
jp
sbb
decb
push
popa
push
out
ljmp
mov
and
movsb
dec
cmpsb
test
push
push
pusha
cmpsb
inc
sbb
in
call
mov
dec
push
jnp
loope
andl
and
jne
divl
mov
stos
mov
adc
sti
dec
sbb
push
add
test
aam
data16
ds
leave
pop
cmp
adc
lret
fidivrl
sqrtps
arpl
in
outsb
repz
jl
pop
rolb
jg
mov
test
in
push
mov
pop
sti
push
std
mov
int
cwtl
and
jbe
push
imul
lock
push
movsb
adc
xchg
add
sbb
pop
sahf
jecxz
mov
cmc
jp
xor
and
outsl
dec
hlt
loope
movsl
adc
stc
and
inc
adc
jg
cmp
insb
jle
out
outsb
sbb
pop
push
dec
xor
insb
cmp
dec
mov
into
sub
cmc
das
std
loopne
or
imul
imul
cmp
test
lods
ret
cmp
mov
dec
sub
adc
mov
sti
or
sti
fwait
mov
push
gs
in
sub
lea
inc
add
xchg
flds
mov
xor
fsts
xor
call
xor
in
pop
cmpsl
lcall
insb
dec
outsl
jmp
aaa
pop
cs
xor
rol
jno
mov
in
mov
in
jnp
mov
je
push
shl
gs
ffree
xchg
lea
cmc
xchg
mov
lret
mov
inc
push
subl
pop
test
popf
pop
sub
out
inc
aaa
jbe
lock
sahf
add
mov
adc
imul
out
push
divb
ja
dec
or
cmpsl
dec
lock
mov
gs
cld
leave
fcmove
push
out
mov
in
insb
mov
lods
jmp
adc
ja
loope
dec
aam
push
dec
ret
cmp
dec
es
ret
fsubl
sub
in
stos
xchg
sbb
sub
bound
lods
mov
add
mov
out
push
cltd
popa
dec
cmovne
and
cmp
mov
iret
xor
pop
xchg
fstp
add
xchg
movsb
sbb
rcrb
stos
hlt
in
out
and
adcb
inc
lcall
inc
rorb
test
mov
mov
jne
dec
rcr
pop
push
sbb
ja
std
cmp
imul
or
fwait
test
pop
add
pop
insb
push
out
mov
inc
insb
jns
and
in
and
mov
mov
mov
ljmp
jp
push
mov
mov
fisubrl
adc
adc
pusha
pop
shrl
xchg
mov
dec
push
xchg
or
cmp
mov
sub
adc
push
stos
fists
fsubrl
idivl
data16
mov
dec
in
sarb
jo
fs
cmp
out
mov
outsb
pop
mov
in
sub
push
pop
gs
push
out
lock
sbb
add
xchg
mov
dec
xor
mov
scas
sbb
mov
insb
mov
movsb
fs
leave
in
lret
lods
arpl
or
pop
and
and
sbb
fidivrl
or
mov
add
in
jle
cmpsb
dec
xchg
pop
jno
mov
jge
xchg
lds
mov
roll
cwtl
scas
rclb
cmp
jge
movsb
pop
push
into
push
fwait
test
mov
or
daa
dec
std
cmp
jecxz
push
and
dec
insb
cmp
xor
and
sbb
push
ja
pop
test
sbb
inc
add
out
mov
mov
pop
cmp
xchg
push
cli
add
sub
sub
mov
inc
movsl
mov
jge
xchg
inc
je
lret
subb
scas
sbb
scas
out
xor
mov
fnstsw
pop
mov
pop
lcall
jmp
dec
fisubs
in
push
test
adc
scas
adc
movsl
mov
sub
arpl
and
cmc
int
sbb
imull
insl
mov
mov
dec
rcrl
lods
xchg
xor
pusha
out
loop
lret
faddl
push
fs
pop
pop
adc
xchg
dec
ss
test
fstpl
push
mov
pop
out
or
cli
mov
push
xor
jb
cmp
inc
test
adc
into
stos
lods
leave
cmc
imul
and
sub
mov
mov
call
imul
mov
outsb
data16
mov
xor
xlat
sub
loopne
cltd
jle
mov
inc
adc
dec
mov
or
in
imul
adc
fnstcw
cmpsb
sub
add
sbbb
sbb
scas
push
mov
pop
cli
cld
adc
or
fwait
or
iret
paddw
pop
shl
inc
movsl
lea
jb
push
les
pop
xchg
je
mov
jle
loopne
cld
out
jp
cwtl
xorb
mov
popa
add
xor
pop
iret
push
or
add
lock
das
rorb
mov
sub
and
repnz
inc
sub
idiv
push
cwtl
dec
push
dec
pusha
cmpsl
inc
imul
jbe
icebp
cmp
cmc
cld
hlt
out
outsl
lret
jecxz
mov
ljmp
jo
or
xor
jnp
loopne
stos
sub
sub
aam
imul
cmpsb
lret
mov
insl
ret
cld
or
pop
daa
xchg
pop
cli
sub
fnsave
popa
fdivrl
scas
lods
and
mov
stos
push
push
and
je
xor
movsb
add
cltd
sub
adc
mov
imull
out
dec
cmp
addr16
repnz
jmp
stos
jecxz
mov
xchg
or
add
jp
ret
fwait
mov
pop
inc
adc
pop
sahf
mov
add
sub
push
xor
ja
stc
xchg
dec
lods
pop
test
dec
or
adcb
pop
lock
mov
lea
bound
mov
in
loop
xchg
testb
mov
in
aas
cmpsl
out
jp
pop
xchg
lahf
lret
dec
sbb
jne
add
pusha
imull
clc
fists
sub
xchg
jne
push
jmp
rcrl
shl
dec
aaa
cmc
sub
dec
mov
leave
xor
stos
push
fdivrs
ret
insb
sbb
cltd
jnp
enter
aas
adc
fdivs
adc
push
iret
fwait
add
negl
shlb
fidivl
in
push
sbb
std
popf
in
adc
push
outsl
cmp
fidivl
cmpsb
cmp
negb
cmpb
push
cmp
test
pop
loopne
and
repnz
inc
hlt
xor
lcall
sub
pop
sbb
iret
and
or
jmp
add
or
pop
mov
pop
pop
lds
or
push
scas
scas
add
and
or
jecxz
or
jecxz
jbe
out
jge
pop
movsb
enter
daa
inc
cmp
cmp
xor
mov
in
mov
divl
mov
out
push
dec
xor
push
pop
adc
bound
sbb
cmpsb
dec
loope
in
mov
mov
mov
xor
push
loopne,pn
out
pop
sub
inc
dec
cmp
pop
andl
pop
push
rorl
addb
sbb
and
xor
in
inc
xchg
inc
inc
sub
out
pop
das
loope
lcall
xchg
fdiv
sub
sub
mov
mov
sbb
sbbb
stc
jg
lods
mov
mov
mov
out
stos
ficoms
add
int
xchg
in
imul
and
dec
mov
insb
xchg
sub
int3
pop
and
add
in
test
rcrb
loop
mov
stc
xchg
mov
das
adc
xchg
cmp
bound
and
mov
mov
or
and
cmc
mov
shrb
cmpsl
mov
adc
pushf
imul
xchg
cld
add
test
mov
xor
cmp
xlat
push
lahf
sub
rcll
stc
adcb
arpl
fmull
nop
mov
mov
fptan
mov
repz
mov
lods
sbb
or
add
pop
or
leave
mov
jmp
ret
pop
cs
mov
pop
inc
nop
inc
shl
aas
repz
jb
rclb
je
jg
jecxz
mov
jecxz
mov
cwtl
cmp
inc
mov
std
sbbw
xchg
outsl
or
pop
jb
addl
pop
lock
fisubrl
lahf
jl
mov
loope
andl
or
xchg
lods
xchg
idivb
lds
add
andl
adc
xor
pop
in
addr16
cld
mov
inc
mov
add
pop
dec
dec
pushf
shlb
out
adc
lret
aad
ret
pop
arpl
es
stc
insl
stos
mov
pop
xchg
cwtl
mov
ljmp
adc
and
and
dec
repz
add
stc
cltd
pusha
mov
sbb
dec
jae
dec
push
dec
std
cmp
sbb
add
idiv
jae
int
mov
ljmp
add
rclb
xor
sub
xor
in
mov
xchg
jecxz
mov
pop
lret
ja
js
dec
lahf
incl
push
adc
fwait
jecxz
cmp
sti
testb
aam
mov
ret
mov
jbe
push
bound
xchg
in
stos
hlt
jo
inc
pop
push
mov
test
mov
loopne
xchg
cmpsb
mov
mov
data16
dec
fisttpll
aad
jne
cli
push
fbstp
jbe
xchg
dec
jge
jmp
sahf
sbb
jecxz
int3
ljmp
mov
pushf
push
or
stos
and
cmc
inc
insb
xchg
addr16
inc
pop
in
xchg
es
ja
cli
pop
daa
ret
out
push
jle
inc
in
pop
jae
push
ficoms
fbstp
leave
push
out
test
les
sbb
imul
test
mov
inc
mov
dec
arpl
leave
rcrl
hlt
jg
mov
popf
pop
inc
outsl
cmpsl
or
cltd
outsl
cmc
aaa
pop
cmp
ret
add
dec
int3
jl
rcrb
pop
faddp
push
adc
mov
pop
scas
mov
and
xchg
cwtl
cmp
into
jo
cmp
mov
out
enter
daa
inc
sti
outsb
cmp
dec
jp
jmp
jl
sti
decl
in
dec
push
cwtl
iret
lcall
andl
push
sbb
in
push
push
mov
lahf
inc
and
cmpsb
int
popf
in
popf
push
out
js
mov
pop
push
adc
subl
stc
cmp
adc
pusha
pushf
jle
roll
xor
xchg
adcb
cld
xchg
add
aas
xor
dec
sub
scas
rcll
mov
pop
scas
mov
lcall
out
mov
mov
adc
xor
cmp
or
lcall
mov
and
or
ret
fsubs
stos
ret
lret
or
mov
loop
sti
cmpsb
imul
inc
movsl
pop
outsl
out
push
loop
fnstcw
dec
adc
fs
pop
adc
mov
cmp
pop
mov
out
enter
outsb
iret
xor
leave
cmpb
call
into
jo
mov
test
mov
pop
mov
in
adc
push
imul
mov
lret
push
pop
lods
ja
idivl
cmpsl
and
xor
jg
adc
cmp
xor
test
jmp
gs
jl
xchg
jle
dec
stos
mov
test
sub
push
repz
test
xchg
rclb
test
mov
lods
xor
rcl
adc
sub
pushf
insl
pop
cltd
jmp
scas
mov
xchg
test
aad
pop
mov
aas
xchg
xor
jb
adcl
fstpl
je
xchg
cli
jecxz
add
out
std
lea
sub
mov
adc
dec
jb
jns
dec
call
inc
int3
inc
sbb
ss
leave
das
jle
mulb
cwtl
shrl
shl
jo
testb
mov
cmpsl
inc
in
popf
mov
ljmp
lret
imul
mov
inc
push
cmpsb
add
rolb
push
inc
aam
xchg
or
popl
insl
xchg
pop
and
xchg
cli
clc
xchg
xlat
pushf
push
ljmp
pop
lods
negl
mov
icebp
fcom
and
sub
pop
punpckldq
push
add
ficomps
int
shll
sub
mov
in
in
pop
sbb
inc
outsb
rorl
pop
pop
js
jle
shll
out
dec
call
jg
ret
lcall
scas
xor
lret
xchg
fnstenv
push
bound
pop
and
pop
test
mov
xchg
xchg
push
testl
nop
das
fwait
adc
nop
push
sahf
icebp
imul
push
aas
adc
fnstsw
es
in
pop
mov
jno
bsr
rorl
fistpl
movsl
sub
mov
mov
mov
daa
inc
sti
dec
loop
push
jne
push
inc
pusha
sub
les
xchg
sbb
jecxz
adc
mov
dec
adc
jmp
pop
mov
inc
push
inc
stos
cmp
popf
insb
repnz
fstpt
fdivs
in
lcall
iret
pop
jne,pn
ret
pop
inc
fists
inc
lock
fbstp
nop
mov
mov
adc
push
insl
sahf
insl
ficompl
jge
xchg
ret
push
sbb
xchg
je
popf
into
in
scas
inc
jg
leave
cmpsl
data16
inc
mov
popf
xor
leave
dec
inc
mov
arpl
and
cmp
push
mov
mov
add
push
lock
xor
data16
mov
jo
mov
scas
insl
in
lret
sbb
cmp
adc
push
mov
mov
push
ror
sub
daa
inc
inc
mov
clc
loope
jno
mov
xchg
dec
and
jnp
imul
jge
loope
lock
test
jl
and
scas
sbb
out
test
lret
loopne
pop
notl
push
mov
loope
js
sub
hlt
sbb
or
test
movsl
enter
pop
aad
xchg
je
andb
sbb
xchg
jp
push
test
sbb
jb
das
pop
gs
sub
mov
inc
lcall
dec
fmull
push
sub
add
jo
dec
push
mov
enter
sbb
mov
lods
aam
jge
pop
and
jo
push
or
mov
bound
in
or
push
mov
in
sub
mov
adc
aaa
outsl
lds
and
add
xor
xchg
adc
pop
cmp
pop
out
popa
out
out
outsl
cli
and
sbb
lods
sub
cmp
sbb
or
into
push
in
cmc
dec
push
jno
in
push
adc
xchg
adc
add
sub
xchg
xor
lods
pop
xchg
fstpt
loop
adc
and
sub
sti
mov
cmpsl
in
mov
sub
gs
dec
or
dec
fldenv
sbb
cmc
jnp
rep
or
xchg
and
sbb
jmp
negb
push
out
outsl
mov
pushf
sbb
cmp
aad
push
loopne
idiv
test
xor
xor
xchg
insl
je
cld
aaa
jecxz
mov
clc
lea
into
push
cwtl
mov
push
mov
in
mov
rorb
dec
pop
test
xchg
pop
mov
cld
jge
xchg
mov
sti
mov
dec
sti
sub
cmpsl
ret
jns
test
jb
pop
mov
sbb
xchg
xor
cld
jne
inc
lret
fidivl
mov
mov
jmp
mov
lea
rcrb
je
mov
cmpsl
clc
ret
jbe
fisubl
adc
insl
js
ss
shrb
xchg
push
xor
ljmp
cli
lods
bound
mov
adc
push
and
add
sar
jno
ds
into
shl
test
addr16
add
mov
aam
dec
fnstsw
test
dec
cld
xchg
sbb
stc
xchg
pop
and
mov
mov
fists
fstpl
inc
xor
adc
mov
or
inc
dec
pop
adc
pop
inc
sub
ja
add
dec
test
inc
dec
add
fwait
inc
in
aaa
push
inc
loopne
add
enter
xor
add
int
jns
mov
xchg
jecxz
and
bound
movsb
adc
ds
and
mov
dec
lds
pusha
enter
je
pop
xchg
out
jle
jmp
xor
imul
rclb
lahf
push
xchg
stos
stos
jecxz
and
outsb
stos
insb
pop
clc
fidivrl
test
in
fadd
adc
ss
mov
fs
inc
sti
or
jae
adc
push
gs
popf
bound
push
in
push
popa
fcmove
push
jecxz
sbb
popa
sbb
stos
aam
mov
scas
test
adc
mov
lock
leave
ror
hlt
adc
adc
stos
or
packssdw
or
pusha
fxch
push
inc
outsl
pop
sub
cmpb
xchg
sbb
lea
inc
fsts
mov
movsb
test
adc
in
inc
jge
test
enter
daa
inc
or
sub
dec
jno
cmp
jl
dec
inc
dec
xchg
jle
push
pop
adcl
pushf
adc
push
ret
fsubrl
inc
push
mov
cmpsb
shr
add
imul
outsb
lcall
push
sbb
cwtl
mov
mov
cld
jno
iret
mov
shl
fsts
lock
push
jnp
pop
pop
ds
or
xor
ret
jl
pop
pop
lods
loope
lcall
xor
clc
adc
sub
mov
adc
push
xchg
jg
fsubl
sub
mov
sahf
or
lahf
pop
push
or
mov
fcomps
mov
jnp
xchg
mov
mov
adc
adc
cmpsl
xor
pop
lret
aaa
mov
test
sbb
xchg
or
xchg
ss
es
cmp
push
mov
mov
xor
pop
test
into
mov
jg
adc
loopne
out
pop
add
out
fcomps
dec
adc
or
add
xchg
lods
inc
or
sbb
pushf
push
sub
pop
mov
adc
sti
push
data16
gs
shl
nop
dec
jle
dec
push
push
outsb
fsts
imul
cmp
mov
imulb
call
stos
and
pop
addl
jmp
shll
pop
adc
xor
jb
adc
xchg
jb
xchg
std
jmp
je
mov
sahf
in
scas
fisttpl
insb
xchg
mov
shrb
fimull
sbb
into
and
les
sbb
pop
cmc
lock
or
das
cmp
imul
lret
sarl
testb
xchg
std
add
dec
repnz
repz
inc
jg
mov
cwtl
dec
ret
cld
mov
jge
mov
sbb
fdivrl
jae
sub
push
aam
push
xor
add
ss
pop
push
xchg
clc
or
xchg
push
dec
out
mov
or
int
push
mov
aaa
sub
push
loopne
jnp
and
add
incb
scas
notb
cld
or
test
rcr
xchg
lahf
rcrl
dec
sbb
pop
into
lds
lahf
ss
out
adc
xchg
and
add
mov
or
jae
xor
jmp
or
sbb
sti
loope
ja
adc
dec
js
jmp
or
lock
in
dec
add
and
mov
into
lock
jns
sbbl
and
xchg
xor
cmpsb
mov
jl
mov
sar
das
addr16
jp
insl
mov
out
shll
dec
lret
mov
xlat
xchg
jne
ss
pusha
arpl
fists
int
jmp
call
or
scas
out
mov
adc
lds
inc
stos
push
cli
int3
and
loopne
insb
enter
pop
notl
pusha
or
in
sbb
stc
iret
pop
addr16
pop
mov
addl
jmp
popf
mov
lods
inc
imul
fidivrl
cmpsl
xchg
jno
pop
sbb
xchg
test
scas
or
addr16
push
loop
rcrb
out
lahf
movsl
mov
inc
addr16
hlt
pusha
jbe
arpl
mov
inc
outsb
in
adc
lret
aaa
xchg
aaa
pop
or
pop
int3
cmp
ret
jl
lods
and
lds
mov
scas
sub
and
ror
inc
cmp
sbb
add
popa
jge
fdivp
enter
daa
inc
push
ret
add
fnsave
jl
sub
dec
add
push
inc
dec
dec
xor
sub
push
xchg
imul
push
adc
movb
shlb
push
mov
fsts
jne
xor
add
sub
repz
push
add
leave
sbb
movsl
movsl
adc
int
dec
scas
jp
lea
insb
add
or
test
clc
clc
mov
sub
stos
in
sub
and
push
daa
aam
fsubl
adc
adc
test
add
mov
insb
adc
adc
xor
setg
fcomp
hlt
mull
lret
jbe
jb,pn
mov
lods
mov
mov
pop
sahf
mov
inc
test
xchg
outsl
xorl
stc
outsl
sti
pop
adc
aaa
ss
jo
cmp
dec
push
icebp
out
jl
mov
test
pop
pop
push
or
js
cmc
fldcw
jg
and
xchg
adc
ret
xor
adc
inc
xchg
push
shrb
ret
fs
test
lahf
sti
mov
test
gs
ret
seto
mov
imull
jb
and
into
lahf
jge
or
cs
or
sbb
cmc
mov
rcrb
fs
sbb
fcoms
cs
out
loope
sub
mov
outsl
xor
dec
je
pop
je
leave
xchg
jecxz
add
out
pop
icebp
into
insl
cwtl
daa
sub
mov
aas
fimuls
mov
jo
xor
and
repz
testb
out
lock
lea
das
sbb
mov
mov
outsb
push
ror
push
shl
in
std
test
adc
divl
ja
outsl
sti
pop
cld
lret
sub
push
mov
daa
push
stos
bound
pop
lret
xchg
pop
sar
push
sub
enter
std
xchg
es
jmp
inc
lahf
mov
xchg
xchg
out
lock
imulb
popf
fidivrs
pop
cmp
push
mov
add
cltd
cmp
mov
out
inc
ss
test
push
pop
adc
movb
push
and
out
mov
pop
jns
mov
mov
out
jbe
sub
adc
pushl
and
xor
mov
xor
mov
out
inc
mov
sub
std
pop
mov
xchg
ja
lahf
jne
imul
or
pop
pop
fwait
lahf
mov
sub
jecxz
xchg
mov
pusha
or
repnz
ss
sbb
in
xchg
xchg
addl
mov
int3
es
jp
hlt
push
mov
jge
mov
je
push
dec
mov
jl
sbb
fbstp
push
adc
xchg
lret
sbbl
out
inc
cmp
mov
je
push
add
subb
jbe
insb
xor
cmpb
mov
adc
mov
sti
in
outsl
pop
ljmp
jae
loope
push
jmp
cmpsl
popf
mov
adc
lock
xchg
stos
fidivl
sbb
sbb
push
mov
scas
outsl
shlb
cmp
in
subb
xchg
shrb
hlt
stos
mov
arpl
popf
iret
inc
jno
stos
or
test
mov
mov
add
xor
fimuls
add
sbb
jo
adc
scas
or
and
test
sbb
lcall
jbe
test
enter
daa
inc
daa
jno
xchg
loop
jno
mov
mov
push
and
mov
and
pop
mov
fiaddl
push
imul
push
ffree
inc
inc
pop
popf
insb
cmpsb
fnstcw
sub
cld
jo
in
xchg
pop
mov
pop
push
mov
stos
sub
xor
cmp
test
mov
shrb
push
cmpsl
andb
mov
xor
dec
int
fimull
pop
stos
and
lcall
push
fmull
inc
sub
cmc
push
adc
mov
cmovbe
sub
cld
repnz
leave
incl
adc
dec
pop
repnz
fcoms
fldcw
in
mov
lds
mov
add
arpl
cmpsb
adc
lods
push
outsl
bound
xchg
stos
addr16
stc
es
fs
mov
adc
sbb
dec
adc
out
js
cli
mov
sub
cmp
arpl
lods
inc
insl
into
cld
scas
test
loopne
arpl
adc
dec
imul
lods
push
add
mov
lods
adc
mov
mov
int
mov
call
shll
lcall
and
es
inc
test
xchg
flds
inc
stos
repz
lahf
sbb
jo
inc
test
cld
inc
adc
pushf
sbb
movsl
jmp
push
push
and
aad
push
popf
inc
inc
and
aas
push
jb
pop
xchg
mov
je
sub
mov
repnz
lea
in
cwtl
loop
pop
mov
xor
mov
in
popf
dec
push
xchg
sub
pop
mov
jp
lock
in
inc
mov
je
cs
dec
rcrl
dec
testb
dec
call
and
icebp
inc
rcrb
testb
daa
loop
mov
xor
mov
ljmp
sub
xlat
pop
ret
and
mull
fwait
divl
sub
xor
xchg
rcll
mov
popa
data16
xor
mov
gs
mov
popa
push
adc
fisubs
and
stc
das
sub
sbb
int
test
cwtl
std
xchg
sbb
ljmp
pop
and
sub
jge
dec
out
fnstcw
xchg
mov
dec
add
adc
call
mov
cmpsl
or
in
xor
add
mov
adc
jmp
pop
jno
xorb
aaa
dec
pop
mov
or
mov
jae
sub
push
je
fyl2xp1
inc
out
sarl
mull
rcll
in
cmp
pushl
sbb
or
out
addr16
jp
das
js
pushf
pop
mov
mov
nop
jne
test
pusha
cltd
out
add
shll
xchg
addr16
iret
jmp
xchg
or
and
sbb
pop
cmp
sub
mov
and
stos
add
push
and
insb
sahf
rcll
cmpsb
stos
in
int3
bound
insl
cs
iret
aad
adc
pop
and
add
sbb
mov
das
jle
scas
lock
addl
in
mov
outsl
jecxz
imul
scas
rclb
push
in
cmp
push
xor
pop
loop
jmp
cmp
hlt
idivb
insl
arpl
inc
je
mov
sbb
cwtl
aaa
adc
clc
add
xor
adc
stos
pop
mov
cmp
lds
mov
jo
mov
scas
jmp
inc
inc
cmp
rcrl
and
lods
pop
jbe
cltd
std
jge
clc
lret
inc
mov
cmp
dec
std
jno
mov
dec
fists
sbb
sbb
pusha
scas
push
lahf
stc
fs
push
cmp
jb
sbb
dec
inc
jmp
shlb
and
and
pop
inc
pop
repz
push
es
jno
inc
sub
inc
push
cmp
rorl
movsl
in
sub
andl
or
inc
sbb
and
add
in
xor
push
pop
add
sub
push
loop
sub
enter
fs
push
adc
andl
push
bound
mov
das
jge
pop
lea
movsb
inc
lcall
lds
int
mov
fmuls
cld
mul
cs
lret
loop
pop
pop
pop
mov
xor
sahf
sti
movsb
inc
test
push
cmpsb
outsl
inc
ret
adc
stc
fnsave
sub
xchg
adc
mov
ss
popa
popa
cmp
inc
sahf
scas
out
scas
pop
cli
lock
lcall
and
or
sub
cmpl
data16
popa
mov
adc
enter
jb
sti
jns
add
lahf
ja
popf
aas
dec
lods
cli
mov
cmp
gs
loop
cltd
sub
cli
in
in
push
pcmpgtd
adc
gs
xchg
test
cwtl
mov
rol
and
cmc
repz
scas
repz
jmp
addr16
sub
cmp
dec
aam
lret
xor
pushf
sti
fucomip
rol
jge
test
or
adc
aas
lods
out
xchg
jb
adc
dec
rcrb
jecxz
push
inc
cmc
adc
lea
xor
repnz
mov
and
xor
fstps
pop
aad
outsl
ret
std
leave
in
fnstenv
mov
sub
jp
imul
test
popf
std
testl
cmpsl
inc
cmp
icebp
sbb
inc
ror
xchg
cmp
clc
test
mov
or
lods
shlb
out
nop
aam
cmp
es
xchg
adc
mov
xchg
adc
into
popa
jge
xchg
repnz
mov
push
mov
dec
test
mov
lods
roll
pushaw
push
loopne
paddusw
cltd
test
fisubl
sbb
roll
lahf
xor
jle
insb
std
push
xchg
cli
lahf
lds
dec
ss
pushl
xor
mov
or
xorb
mov
push
scas
out
stc
mov
sub
imul
sub
fwait
or
mov
fs
fwait
std
imul
mov
cmpsl
and
mov
pop
bound
cmp
xchg
pop
adc
gs
rcrl
ret
addr16
jp
pop
dec
mov
popa
pusha
mov
push
xchg
push
insl
iret
jne
testl
lock
xchg
cmp
pop
jmp
pusha
add
xorl
out
mov
cmpsl
mov
adcb
ja
dec
and
mov
pop
jnp
in
jle
addr16
or
push
adc
adc
xor
inc
ret
jg
pop
popa
and
jae
shl
jno
pop
popf
test
fs
call
mov
xchg
jbe
inc
sbb
dec
lds
push
mov
push
sub
cmp
outsl
lcall
cmp
mov
popf
push
and
arpl
xor
sub
sti
push
jae
rcl
stc
or
loopne
scas
adc
int3
je
pop
jmp
mov
lahf
jo
and
mov
stos
cmp
pop
sbb
call
fistpll
fisubl
enter
daa
inc
push
lret
cmp
data16
jl
rcl
dec
dec
rolb
xor
sti
pop
cmp
sbb
movsl
test
jae
or
inc
repz
fistps
in
pop
sub
pop
xor
loope
push
lods
sub
daa
cmp
xchg
xor
clc
rcrb
jecxz
insb
movsl
lock
cli
sbb
inc
add
iret
shll
add
inc
inc
jnp
sub
aaa
sub
mov
lcall
mov
sub
outsb
outsb
add
adc
out
sarl
arpl
sbb
mov
add
push
sbb
int
pop
movsb
fmuls
outsl
mull
insb
mov
xrelease
sbb
fucom
test
lock
and
loop
out
stc
xchg
cmpsl
lds
dec
adc
pop
bound
daa
cmp
aas
mov
loope
and
repz
mov
loop
ret
cmc
cs
loopne
xor
adc
mov
mov
pop
adc
fwait
lret
out
data16
lods
loope
push
cmp
xchg
pop
xlat
and
pop
out
push
in
mov
dec
cmpsb
jns
or
insl
std
dec
in
pop
inc
stos
fwait
jbe
jae
out
les
iret
repz
add
sbb
data16
cmpsl
ficompl
inc
adc
and
pushf
outsl
lret
imul
mov
push
mov
inc
jge
je
dec
push
push
jb
sti
sub
je
icebp
adc
xabort
xor
pop
xchg
std
mov
mov
repz
push
fildl
push
ss
imulb
lock
xchg
das
mov
loopne
loop
push
and
push
rcl
sahf
push
notb
ror
std
sahf
popa
orb
add
nop
js
icebp
hlt
jmp
cld
dec
adc
mov
and
mov
add
mov
sub
sarb
test
aam
icebp
add
inc
sti
je
mov
jecxz
clc
testl
ljmp
pusha
lods
jns
je
dec
inc
adc
and
dec
out
setl
push
add
push
out
loope
and
sub
fnstsw
or
test
scas
xchg
xchg
xor
adc
push
bound
pop
jp
pop
stos
pop
jb
out
lahf
adcb
inc
data16
outsb
add
adc
jae
pop
scas
imul
in
xor
repnz
sbb
std
pop
out
std
ja
addr16
dec
inc
sub
aas
dec
leave
or
mov
or
jo
mov
js
sbb
push
out
bound
xchg
in
cmpsb
dec
xchg
outsb
add
mov
mov
push
pop
jp
ret
dec
mov
mov
rcll
xor
into
jne
stos
pop
pusha
iret
shlb
fisttps
in
jp
or
popf
xchg
xchg
sub
add
orl
outsb
fdivrl
shll
stos
ljmp
insb
je
or
sbb
jle
sbb
in
or
adc
loop
iret
xchg
or
ret
sbbl
dec
imul
lcall
and
jg
addr16
rcll
lds
jb
cwtl
dec
cmp
rorb
popl
adc
mov
arpl
out
inc
jp
outsl
or
mov
loop
xchg
adc
or
mov
int3
jmp
adc
fidivrs
sub
lds
or
jo
sub
scas
cmpsl
or
and
xchg
repnz
mov
movsb
cmp
push
bound
jbe
and
jb
mov
daa
aas
mov
cmp
aaa
bnd
enter
add
dec
mov
jmp
xor
xchg
sbb
lahf
aaa
scas
push
loop
daa
test
ds
mov
or
scas
in
out
push
fs
jmp
stc
push
sbb
lahf
push
push
sub
loopne
cmp
jne
ds
sbb
movsl
repnz
loope
cmp
cmp
fstps
pop
add
or
repz
add
jbe
dec
push
sub
mov
pop
daa
fnstsw
push
adcl
dec
jb
sub
jo
sarl
adc
icebp
mov
jg
jp
mov
jle
mov
loop
and
xchg
int
loop
fadd
mov
in
mov
fsubrs
add
sbb
sahf
inc
or
test
or
outsl
fisubrs
loop
je
stc
dec
jle
fs
adc
and
mov
outsb
sbb
push
cmpsb
fdivr
push
xchg
fnstenv
mov
push
cmp
and
or
inc
mov
movsl
pcmpgtw
cmc
call
out
lahf
xorl
imul
jb
mov
popf
jbe
inc
pop
loopne
pusha
mov
out
add
cwtl
jae
jno
push
gs
adc
dec
inc
mov
inc
fldcw
add
repz
int
sbb
loope
mov
es
adc
adc
sbb
jmp
xchg
mov
aad
fdivr
inc
cwtl
std
mov
jb
sbb
dec
push
inc
movsb
je
push
add
xchg
imul
jo
popf
mov
push
adcl
repnz
fldt
cmp
jge
mov
das
xchg
xchg
cwtl
mov
cltd
pop
and
in
rorl
aas
xor
push
or
dec
cmpsl
ds
mov
lret
cs
cld
ja
lret
je
xchg
mov
add
popa
daa
pop
inc
and
rorb
inc
sub
cld
and
rcl
jo
and
mov
loop
mov
xchg
nop
xchg
add
loopne
ljmp
insb
sbb
out
dec
and
daa
pop
repz
lods
cli
add
mov
cltd
sbb
test
in
add
push
data16
adc
bound
adc
gs
and
shrl
cmp
stos
lods
out
add
js
mov
mov
xor
xor
addr16
mov
sbb
das
dec
pushf
out
pop
mov
push
push
dec
aaa
outsl
enter
inc
or
pop
dec
fwait
pop
inc
inc
push
adc
ljmp
lds
outsb
call
mov
in
pop
adcl
nopl
addr16
push
mov
mov
aad
mov
xor
dec
pop
xchg
mov
pusha
push
scas
fildll
push
cmpsl
xchg
loopne
mov
movsb
push
ret
adcl
sub
popa
xor
stos
pop
test
xchg
add
push
jnp
stos
test
mov
std
adc
fldenv
cmp
ret
imul
push
inc
cmp
mov
push
negl
popf
dec
and
push
out
pop
sbb
xchg
and
xchg
nop
mov
scas
sti
mov
xlat
shlb
push
loop
adc
mov
hlt
xlat
loope
arpl
ficomps
jge
movsl
or
jno
xchg
aaa
push
shrl
faddl
int3
aam
ja
inc
adc
fisttpl
mov
push
mov
mov
inc
cmp
movsb
fimull
jbe
xchg
mov
enter
daa
ds
or
pop
mov
mov
or
xchg
dec
push
mov
mov
and
out
xchg
lahf
push
fidivl
mov
sub
or
cmpsb
in
mov
js
sbb
mov
push
loope
or
mov
js,pt
mov
stc
add
adc
lods
sub
lods
sbb
aaa
xor
adc
bswap
pop
jbe
pop
sub
xchg
cmpsb
into
dec
lcall
sti
fdivr
xor
sub
dec
outsb
xor
push
orb
jg
cmpsb
cld
mov
les
mov
adcl
int
dec
and
negl
dec
test
mov
jle
and
scas
lods
add
jae
jmp
test
and
outsl
fidivs
loop
xor
xchg
fs
xor
adc
jecxz
ss
ljmp
sbb
dec
loope
enter
pusha
or
push
pop
push
cmc
mov
dec
xor
insl
mov
lret
imul
inc
pop
data16
lods
scas
xor
jg
or
lahf
dec
cmpsl
sub
addr16
sbb
add
sti
and
lock
and
sbb
nop
imul
mov
notl
les
icebp
repz
pop
mov
loopne
outsl
call
movsl
push
cmpsl
pop
pop
arpl
rorb
pushf
jmp
sahf
jp
lods
sub
aad
roll
mov
sbb
mov
adc
outsb
fimuls
js
je
push
jecxz
push
lods
decb
sbb
das
and
pop
andl
ficoml
sub
icebp
lock
cmp
das
jbe
xor
push
add
or
adc
pop
and
std
in
mov
dec
aam
repz
cmp
orb
xchg
jg
mov
fcmovne
mov
arpl
pop
rclw
sub
outsb
aam
pop
scas
ret
pop
clc
jg
cmpsl
jmp
jmp
insl
lods
movsb
xchg
iret
sub
popa
ret
lods
dec
in
mov
or
repz
add
cltd
cvtps2pd
add
dec
sbb
and
cmp
sub
fisttpll
push
sub
cmp
add
gs
out
gs
xor
add
pop
pop
xor
cmp
lds
xor
xor
mov
pop
cmp
xchg
pop
pop
dec
sub
sub
inc
insl
xor
and
push
arpl
mov
xor
xchg
ds
daa
inc
out
dec
jle
bound
lds
mov
in
pop
jmp
mov
bound
mov
mov
fs
fimull
and
mov
inc
cltd
mov
lahf
jnp
dec
cli
xchg
int3
jne
cmp
add
lds
jmp
rcr
andl
out
sahf
aas
sub
pushf
shlb
aas
dec
jnp
rolb
test
daa
insb
dec
mov
jnp
mov
jle
push
fwait
in
fadds
adc
in
iret
push
jno
ret
insb
pop
std
clc
inc
inc
dec
sbb
jae
push
push
push
mov
mov
push
rorb
fidivl
sbb
mov
scas
pop
sbb
rorb
pop
add
xor
outsl
out
hlt
and
shlb
sbb
andb
sbb
inc
aaa
prefetchnta
add
jbe
mov
aam
fidivrs
sub
inc
lock
hlt
or
and
xlat
cmp
jg
add
and
jbe
jge
fiaddl
shll
fnstcw
nop
repz
jno
xchg
bnd
jmp
jnp
xchg
cmc
mov
int3
aad
lahf
jne
push
mov
aam
testl
ljmp
or
add
push
fadd
loope
and
sub
iret
dec
cmp
aam
add
shr
sub
cmp
add
jmp
push
add
test
xor
mov
iret
sub
lods
filds
and
pop
xchg
push
xor
fsubl
shlb
outsb
xchg
inc
and
jae
andb
add
aad
mov
fisttpll
aad
je
inc
pop
je
and
fdivrs
sbb
sbb
mov
jecxz
mov
and
test
sub
jae
jne
mov
sub
stc
mov
loop
adc
jns
sub
or
xor
daa
cli
mov
dec
icebp
cmp
jno
or
outsl
and
cmc
sbb
loopne
cli
inc
pop
fstpl
adc
lods
sub
stc
pop
add
clc
test
lods
xchg
adc
mov
fisubs
sub
xchg
adc
sti
iret
inc
xor
inc
aas
sbb
stos
cmp
add
loop
in
xchg
fstps
notl
dec
and
repz
gs
fwait
mov
adc
xlat
sbb
mov
or
adc
cmc
jmp
jo
dec
jmp
outsb
sbb
adc
adc
inc
test
sub
xchg
dec
ds
je
push
pop
jecxz
cs
movb
and
mov
push
mov
stos
dec
mov
cmpl
add
fisttpl
ljmp
imul
mov
pop
dec
jae
xchg
mov
xor
aam
std
xchg
mov
dec
iret
xor
cmpsl
cmp
gs
jns
cmp
int
xchg
lret
push
inc
lods
mov
sbb
test
clc
sub
pop
aam
or
xchg
sub
insl
mov
outsl
clc
test
sub
ljmp
lods
mov
int
mov
test
push
fnstsw
ud1
add
adc
cltd
xchg
cmp
mov
adc
fnsave
test
xchg
sbb
add
pop
test
stos
sub
out
enter
push
adc
add
push
and
push
iret
xor
cmp
jmp
mov
and
pusha
pop
sbb
xchg
sarb
sbb
pop
insb
or
push
cmp
pop
movsl
syscall
or
and
out
sub
sahf
cltd
jmp
xchg
and
in
mov
add
pop
stos
decb
scas
push
packuswb
gs
fdivs
mov
push
fimuls
mov
jne
sbb
fildll
xchg
xchg
repz
mov
sbb
ljmp
mov
jle
xor
mov
lret
jns
daa
cmpl
and
add
pop
ret
mov
xor
push
inc
push
add
dec
mov
push
jge
fwait
popf
lcall
inc
in
sbb
fs
mov
sbb
daa
add
cmpb
outsb
sub
dec
jge
rcr
mov
repnz
hlt
insl
repnz
inc
sub
or
out
lea
into
loopne
or
push
repnz
add
and
pop
inc
fisubs
das
xor
into
jns
jo
negl
inc
iret
sub
fmuls
add
jns
jbe
iret
popf
jge
dec
sbb
int3
stos
mov
cmp
jno
xor
dec
or
push
jbe
pop
xor
roll
xchg
cmp
push
pop
sbb
test
lahf
push
testl
add
mov
cmp
pop
mov
loope
push
push
sub
add
cmp
and
xchg
movsl
pop
dec
xchg
ror
shlb
adcb
in
sbb
rcll
mov
jp
popa
xor
pop
les
sub
pop
movsb
cmp
in
push
mov
cmp
and
outsb
cli
xchg
adcl
inc
or
mov
xor
and
lret
sub
int
push
fdiv
sub
negl
dec
push
mov
pop
sbbl
into
push
outsl
pushf
cmpsb
aad
sbb
lret
ficompl
out
adc
sub
cmp
sub
ljmp
mov
cmp
adc
mov
or
stos
into
dec
add
dec
out
gs
mov
push
adc
push
imul
lods
dec
data16
add
cmc
sbb
xlat
sbb
imul
push
aad
jle
push
inc
mov
nop
and
cwtl
inc
mull
jb
dec
outsb
inc
les
xchg
repz
out
pop
pop
pushf
sbb
push
pop
lahf
mov
dec
lods
adc
scas
pushf
sbb
jmp
add
jae
ret
aad
call
xchg
aas
enter
mov
pop
dec
mov
mov
jecxz
dec
fadd
add
decl
inc
in
mov
mov
mov
ret
aad
repnz
mov
out
pop
jae
arpl
add
lock
adc
xor
inc
mov
mov
jge
shl
mov
negb
push
fmull
push
xchg
pop
pop
adc
cld
clc
subb
shll
addr16
mulb
movsb
aaa
adc
sub
aam
adc
ret
jge
cwtl
lods
sbb
xchg
mov
clc
jecxz
test
ljmp
mov
and
sbb
mov
ficompl
sbb
cmp
cmp
push
scas
pop
fcmovnu
xlat
cmp
xchg
int
xchg
or
shll
cmp
stos
pop
out
xor
sub
jnp
pop
addr16
decl
xchg
sbb
xor
mov
fiaddl
cld
mov
addr16
ja
std
fs
adc
inc
fwait
stos
repz
pop
fwait
call
daa
call
mov
xor
bound
arpl
cmp
xchg
stos
pop
mov
dec
test
test
outsb
mov
mov
nop
cmp
mov
bnd
jne
pop
lds
adcl
pop
xchg
and
mov
out
inc
xchg
inc
out
mov
icebp
and
pop
push
mov
std
jp
xorb
loopne
jnp
adc
jle
gs
ss
adc
ljmp
imul
inc
pop
cmp
jae
xchg
xchg
push
inc
pop
pop
popf
roll
arpl
test
jno
ds
dec
scas
and
jb
insb
fadd
not
mov
leave
lock
adc
mov
pop
mov
or
mov
sub
add
mov
xchg
pusha
pop
aam
stc
faddp
outsb
mov
jo
or
pop
and
jno
sbb
aaa
push
sahf
pop
mov
popf
mov
movsb
jmp
daa
cmp
cmp
jg
jno
hlt
loope
mov
sbb
pop
iret
das
xor
add
aam
mov
jmp
test
push
pop
inc
inc
adc
outsb
mov
mov
jmp
push
outsl
pop
loope
mov
sub
push
adc
loop
sbb
loope
and
shlb
cmp
and
xor
rorl
xor
push
adc
mov
sub
neg
pop
and
sbb
push
fdivr
je
sub
outsb
pop
xlat
mov
add
das
jg
inc
repz
iret
cld
mov
inc
mov
push
or
pop
cmp
int
lock
mov
repz
lret
pusha
shl
push
mov
mov
add
sahf
int
ret
lret
sub
mov
scas
mov
stc
daa
inc
push
fs
or
shlb
ss
cld
cmp
es
cld
out
mov
and
cmp
psubsw
mov
clc
into
xor
pop
cmc
adc
or
test
imul
dec
inc
scas
in
sbb
xor
into
sub
mov
aad
fs
sub
inc
mov
xor
cld
ficompl
dec
mov
or
xchg
mov
andl
and
sbb
int
pop
and
pop
jno
sub
aad
inc
pushf
movb
push
imul
push
jg
mov
fadds
loop
aas
xchg
add
in
je
sbb
jecxz
mov
movb
jne
sub
cwtl
ljmp
xchg
imul
dec
mov
fldt
lea
push
inc
cltd
mov
mov
mov
jne
out
and
stos
adc
inc
push
push
std
loope
adc
insl
mov
mov
daa
mov
fs
xor
mov
outsb
mov
loopne
mov
ret
lock
arpl
lret
outsl
fld
or
andb
popa
push
insl
jle
cmp
push
cltd
xchg
mov
ljmp
mov
nop
inc
mov
mov
leave
and
xchg
in
cmp
add
inc
mov
test
mov
jb
mov
testb
scas
popf
rorl
dec
fs
shl
mov
push
aaa
mov
mov
fadds
jmp
je
jle,pn
xor
xchg
push
or
push
cmp
test
sub
daa
dec
arpl
pop
mov
ja
lods
sbb
add
pop
or
popf
js
pop
sbb
in
add
push
pop
mov
ljmp
jns
repnz
xchg
stc
sahf
lea
stos
lret
movsb
push
pop
addr16
mov
insb
popf
mov
in
push
xor
jne
add
pusha
loope
fildll
mov
jmp
and
ljmp
lea
push
cld
fsubl
and
ss
mov
inc
jnp
push
jle
fisubl
xor
fwait
adc
cmp
ret
ficompl
push
stos
inc
imul
dec
push
add
dec
push
loop
sbb
xchg
xorb
imul
xor
mov
mov
imul
addr16
push
hlt
add
arpl
mov
or
pop
add
aaa
dec
push
or
mov
pop
int3
sbbb
pop
add
pop
in
jo
aaa
adc
fidivrl
rorl
pop
push
in
fxch
jbe
fimuls
jge
ficomps
enter
daa
cmp
cmp
aam
jno
fnstenv
mov
inc
push
cmp
inc
xor
popf
add
lahf
shrb
clc
test
xor
mov
push
in
jno
vmread
cmp
lahf
loope
xor
jmp
cmp
push
mov
adc
push
jg
cmpsb
std
int3
cmpb
cmp
nop
dec
gs
das
or
jmp
rcll
push
pop
adc
sub
call
lcall
call
sub
add
outsb
rclb
adc
js
push
jg
jl
mov
in
mov
jp,pt
mov
and
outsb
adc
push
sub
xor
fsubrs
push
negl
testl
sarl
mov
xor
das
adc
xor
test
mov
inc
inc
or
fimuls
fs
jmp
adc
fabs
ss
jo
cmp
and
cli
push
adc
xor
pushf
inc
or
std
into
adc
adc
fdivrs
pop
cmp
adc
fmull
adc
dec
mov
sbb
aad
xor
hlt
lods
dec
ja
cmp
lock
fwait
mov
sti
mov
inc
insb
movsl
sti
fcompl
xchg
lods
xor
gs
jecxz
nop
xlat
sub
dec
push
iret
dec
inc
sbb
dec
jne
outsb
int
repz
scas
popf
xchg
in
aas
sbb
dec
fwait
mov
pop
and
jle
sub
pop
pushf
jno
and
pop
jbe
cmp
aad
mov
aas
push
add
jb
ret
pop
dec
mov
pop
and
or
cwtl
mov
pop
dec
mov
les
dec
jbe
or
pop
mov
cmpsl
push
lock
bound
repnz
cmp
cmp
rcll
mov
mov
jecxz
shrb
cmp
mov
cwtl
cmp
xor
lret
lahf
adc
lock
rcr
mov
loop
not
push
subl
sbb
or
fwait
and
insl
gs
clc
pop
cmp
pop
xchg
popa
popa
push
pop
cmp
xchg
add
push
outsb
les
inc
cmpsb
ret
cltd
sub
fadds
pop
push
xor
daa
hlt
test
aam
xchg
push
xlat
sbb
xchg
add
popa
ljmp
cmc
inc
cmp
icebp
push
jnp
push
arpl
xor
or
mov
popf
dec
mov
sub
negb
sarl
dec
testb
leave
mov
or
jg
fwait
inc
ds
push
inc
or
mov
xchg
pop
out
leave
std
jecxz
mov
cmc
in
shll
dec
and
mov
or
mov
lahf
mov
addr16
adc
jp
pop
jnp
push
insb
dec
mov
pop
jns
dec
xchg
or
push
pop
pusha
jno
leave
movsl
rclb
ja
jle
in
divb
sbbl
out
inc
sbb
mov
nop
push
cmp
inc
stos
pushf
xchg
and
or
fistpll
test
jle
inc
jmp
cmp
iret
int
pop
ret
pop
pop
fldenv
inc
je
cmp
sub
sub
push
popa
dec
out
fidivrl
repz
xlat
sub
movl
scas
ljmp
shrb
mov
subl
pop
arpl
in
inc
mov
push
sbb
sub
aaa
or
or
aad
add
xor
int3
imul
xor
cmp
arpl
jo
jbe
scas
loope
sbb
xchg
pop
inc
cmp
insb
movsb
push
cmp
cmpsb
jbe
xchg
dec
jge
std
sub
mov
mov
cmp
jno
loope
jl
mov
cmpsb
push
pop
jns
xor
cmp
lahf
icebp
in
push
push
aam
dec
test
add
adc
in
pop
pop
jno
test
bound
rol
loope
aad
sub
popf
lock
dec
ds
mov
movsl
sbb
icebp
rcrb
in
add
mov
sbb
add
add
gs
xor
jecxz
xchg
jp
pop
cmp
popf
sub
xchg
ss
and
lcall
pop
fcoml
addr16
repz
ds
adc
xchg
loop
jg
mov
mov
pop
cmp
jge
lds
sub
into
das
fsubs
enter
insb
ror
outsl
push
dec
rcll
mov
bound
pop
cwtl
data16
adc
adc
movsl
outsl
cmp
std
stc
xchg
cli
cmpsl
fs
adc
lret
inc
and
sbb
jae
sbb
xchg
mov
xor
mov
out
or
mov
cmc
lahf
jns
loopne
jne
pop
pop
inc
lock
dec
scas
imul
cld
add
sbb
lods
xor
stos
xlat
add
push
cmp
in
stos
adc
mov
jp
ds
ss
jge
and
insb
es
stos
lcall
ds
cmpsl
add
call
and
iret
adc
test
adc
pushf
ja
aad
js
inc
cmp
fwait
aas
movsl
test
jb
sbb
sbb
je
ja
jecxz
inc
ret
fs
testl
mov
out
mov
movsb
sbbl
aaa
inc
pop
pop
mov
xor
aad
mov
mov
jecxz
push
and
add
shl
xchg
out
out
das
mov
icebp
cmpsl
cmp
imul
mov
cld
jns
or
mov
adc
mov
sub
mov
add
sarb
into
inc
aam
and
ret
sub
mov
dec
mov
clc
xchg
lds
ljmp
cltd
lods
movsw
lock
mov
lods
push
push
dec
scas
jae
xor
aas
mov
pop
inc
xor
clc
xlat
cmpsl
fisttpll
test
mov
xchg
and
in
xor
mov
mov
stos
in
es
push
nop
mov
add
daa
std
mov
or
pop
dec
xor
or
test
dec
xor
sub
cltd
mov
jmp
imul
and
push
in
aas
add
or
test
bound
loopne
jns
dec
cmpsb
in
insb
in
xchg
in
lcall
jns
or
sub
jp
call
lods
mov
lret
dec
imul
int
or
xor
call
cwtl
and
outsb
sahf
mov
push
push
out
dec
outsl
sub
ret
movsb
aaa
push
jp
or
and
jae
jnp
popa
es
mov
pop
adc
dec
ret
mov
pop
pop
adc
roll
mov
mov
mov
mov
lock
loopne
mov
xor
clc
xchg
cs
xchg
sbb
inc
mov
out
sbb
fs
sbb
inc
mov
mov
aam
test
push
sbb
hlt
cltd
add
inc
lahf
or
sbb
fcomip
aaa
lret
or
mov
xchg
int3
push
pushf
clc
pop
popa
sbb
lods
in
popa
jo
enter
bound
cmp
cmp
mov
jbe
mov
jle
mov
lods
xor
cwtl
or
push
idivl
add
xor
xor
roll
notb
inc
inc
test
lret
shrl
mov
cmpsb
imul
mov
js
insl
or
push
xchg
cmc
loope
pushf
inc
sub
and
ds
dec
mov
ss
fs
push
sbbb
sbb
popa
cmc
add
out
push
pop
push
test
lock
sub
jp
mov
mov
cwtl
fdivr
sub
sub
cmpsb
and
pop
or
scas
xor
jg
pushl
mov
fildl
and
test
xchg
and
negl
insb
xchg
shrl
iret
sbb
repnz
push
popa
outsl
sbb
cmp
push
dec
fisubs
nop
adc
mov
pop
jl
out
enter
xor
cmp
xor
fimull
cmc
data16
pop
js
mov
imul
cmpsl
add
mov
data16
lods
lods
sbb
sbb
loope
sub
sbb
or
cmpsb
sti
int
push
cld
sti
cmp
repnz
repnz
lea
dec
fsubl
inc
inc
in
pusha
fldcw
mov
les
sub
sbb
sub
lahf
sbb
pop
mov
inc
pushf
sbb
cli
lahf
call
cwtl
inc
push
pop
sub
inc
or
jb
movsl
and
xchg
adc
shl
out
jbe
adc
or
test
xchg
jno
xor
dec
dec
and
das
rcrb
dec
mov
lock
jns
mov
and
in
adc
and
sub
xor
arpl
sub
and
cmpsl
aaa
cmp
sub
icebp
lods
bnd
movsb
xor
lret
jge
push
mov
loop
mov
and
rclb
arpl
aam
ja
ret
mov
in
xchg
insl
xor
pop
clc
iret
mov
inc
ljmp
pop
lods
rcll
mov
cmpsl
in
push
and
pop
sete
jmp
cltd
cltd
into
add
addr16
mov
loope
push
mov
movsl
das
test
sub
sbb
lea
rcl
ljmp
stos
adcb
call
decl
ret
sub
repz
jb
andb
xchg
out
cwtl
in
mov
ja
aam
dec
fdivr
cli
inc
testl
fwait
movsb
int3
add
mov
pushf
mov
inc
add
xchg
bound
hlt
cmp
xchg
out
mov
mov
xor
xchg
xor
sub
mov
fdivrs
dec
pop
pop
mov
adc
dec
dec
cmpsb
inc
jne
push
xchg
pusha
cmpsl
jne
filds
scas
ljmp
in
xchg
cmpl
jge
cld
out
iret
sub
mov
rep
sbb
and
xor
int3
jns
jnp
add
add
loop
dec
mov
jb
mov
and
int3
pop
inc
je
inc
mov
jae
aad
push
dec
pusha
mov
pop
aad
push
pop
and
sub
xchg
test
jge
scas
jne
scas
mov
pop
push
stos
adc
shlb
repnz
mov
sbb
arpl
cwtl
inc
xchg
lods
prefetchwt1
xchg
out
sbb
mov
add
pop
lock
inc
fwait
adc
ficoms
adc
jo
cs
scas
lahf
adc
cmp
push
out
movsb
xchg
mov
repz
pop
fstpt
out
enter
daa
aaa
sub
ret
jno
pop
lret
jbe
dec
xor
repnz
out
lahf
das
js
push
jp
add
ret
js
push
xchg
inc
adc
in
cmpsb
jp
shr
mov
pop
imul
nop
sub
jl
cmp
fdivrl
movsl
sub
rclb
xor
roll
xor
int
xor
sbb
test
xchg
inc
sub
lcall
push
fsubl
sbb
popa
adc
leave
xchg
dec
jg
inc
out
mov
pusha
xchg
xchg
or
and
mov
out
pushf
adc
push
lret
push
roll
mov
daa
sbb
testl
imul
ret
loop
xor
fs
jmp
in
mov
adc
adc
cwtl
out
es
cli
out
rolb
cmp
cmp
or
mov
cmc
sub
stos
jmp
adc
cmpsb
and
add
pop
jae
mov
fstpl
cmp
and
pop
mov
adc
sbb
sub
adc
mov
add
mov
inc
push
mov
sub
mov
arpl
mov
or
cmp
iret
je
jb
por
bound
aad
jbe
inc
jo
sarb
jecxz
dec
jb
gs
dec
or
jecxz
mov
jecxz
ljmp
lds
mov
mov
or
or
or
in
divps
or
lock
inc
mov
push
imul
test
roll
adc
std
jge
je
mov
lahf
cmpsl
ss
mov
adcl
iret
outsl
push
mov
mov
mov
pop
aas
std
out
shl
enter
cs
ret
dec
dec
lds
cmp
int
sbb
adc
or
xchg
mov
frstor
push
lods
cmp
daa
mov
ds
scas
inc
pop
push
inc
or
repz
or
rolb
movsb
push
jle
mov
lcall
xchg
ljmp
xchg
jecxz
jge
test
sbb
add
popa
ljmp
lea
or
mov
xchg
xor
push
dec
incl
xor
xchg
int3
dec
iret
fidivs
inc
mov
or
sbb
test
sub
test
ret
out
popw
adc
cmp
fistpll
in
mov
test
mov
nop
dec
push
xchg
out
jp
and
flds
mov
test
mov
jne
xchg
fbld
cmp
js
mov
xchg
dec
mov
and
ret
je
pop
mov
clc
test
stos
cmc
sbb
and
or
aaa
mov
jnp
imul
dec
notl
adc
push
push
fildll
dec
inc
xchg
inc
xchg
setb
jae
cmp
idiv
inc
ljmp
sbb
enter
sahf
mov
jnp
repnz
sti
sarb
mov
jp
aad
inc
ja
hlt
das
add
arpl
das
orl
dec
imul
int3
sub
and
xchg
sahf
fdivp
clc
and
clc
out
jo
test
dec
and
inc
cmp
out
push
sub
inc
jbe
imul
scas
add
daa
sub
cmp
sub
jno
aam
jl
push
testl
sbb
les
or
lahf
dec
ret
rcll
bswap
test
popa
pop
push
inc
adc
in
or
jge
pop
test
xchg
push
sub
loope
xchg
or
test
jb
nop
pop
movsb
movsl
xor
and
loopne
test
clc
sbb
add
call
xor
clc
jmp
fistps
pop
scas
sbb
sub
push
mov
lcall
sbb
push
sbb
sub
jle
adc
in
ret
xchg
cmp
rorl
mov
dec
nop
and
lcall
push
lcall
dec
xor
rcr
and
mov
pop
test
push
mov
lock
mov
jb
mov
out
adc
divb
add
cmp
or
or
xor
pop
cmp
sbb
or
mov
test
hlt
xchg
loopne
jecxz
pop
mov
adc
push
imul
jmp
ds
loop
push
cmp
xchg
outsl
sub
xchg
cwtl
movsl
test
gs
cmpsl
adc
dec
lcall
fstps
icebp
pusha
repz
stc
sbb
xor
jbe
popf
jnp
pop
lock
pushf
sbb
mov
lds
in
inc
mov
aas
aas
sbbb
jb
pop
clc
dec
jg
insb
je
js
jecxz
mov
xor
cmpsb
xor
mov
aaa
push
sbbl
cmp
push
insb
hlt
pop
inc
push
inc
inc
cmp
insb
lock
fsubrs
outsb
pop
lock
or
mov
rcl
aad
divb
lods
and
sbb
cmpsl
xor
ret
pop
fsubl
cli
andl
mov
andl
shlb
aam
aam
and
xlat
mov
es
lods
sub
xchg
lock
jmp
das
popa
jp
lods
lods
cmpsl
outsl
pop
mov
and
shlb
xor
push
sahf
jg
mov
cltd
pop
sbb
test
lahf
mov
ja
push
inc
imul
xchg
inc
inc
sbb
jne,pn
mov
fwait
xchg
jge
ds
pop
mov
and
dec
pop
inc
xor
pop
lock
dec
adc
aaa
push
pop
dec
popw
xchg
pop
xor
fcomps
and
dec
daa
fwait
add
push
into
cmp
add
sbb
mov
pop
jns
sub
in
arpl
mov
hlt
mov
mov
popf
addr16
mov
jp
into
cmp
mov
pop
mov
dec
adc
inc
jne
and
pusha
fucom
filds
pop
xchg
dec
jno
jmp
sbb
sbbl
mov
je
movsl
push
aaa
jp
stos
push
loope
insb
mov
xchg
push
jle
jo
in
mov
adc
mov
ret
ss
mov
sahf
inc
mov
mov
popf
stos
push
xchg
push
pop
push
mov
dec
cmp
xor
xchg
sbb
dec
cmp
int
scas
jbe
push
push
cmp
rcrb
cmp
int
and
mov
orb
cwtl
and
pop
sbb
imul
into
or
fbstp
adc
pop
adc
out
ficoms
sub
jo
aaa
push
scas
pop
jnp
and
inc
jl
mov
bound
jbe
lock
clc
pop
or
sbb
cmp
add
ret
jl
lcall
stos
cmp
xor
movsb
loop
lahf
insl
adc
push
and
mov
push
sub
filds
lds
hlt
push
gs
jecxz
pop
out
std
push
or
loope
leave
and
mov
ds
std
movsl
cmp
mov
movl
sub
mov
xchg
xor
xchg
pop
aad
mov
pop
sbb
int3
adc
bound
fdivr
push
xchg
test
jnp
adc
call
test
cmp
pop
and
in
inc
int
cmp
fcoms
mov
not
imul
cmp
and
dec
enter
lock
into
aaa
outsl
mov
cmc
loop
sub
sbb
or
lods
lds
cmp
or
in
out
outsb
inc
cli
push
daa
sbb
sbb
dec
cmp
lret
dec
mov
cmc
cmc
mov
das
push
pop
aad
sbb
xor
les
add
adcl
into
xchg
in
xchg
les
sub
and
mov
push
hlt
fs
inc
xor
pop
sub
nop
push
repnz
pusha
and
jl
stos
fnop
mov
ret
repz
and
jecxz
aas
add
call
sbb
push
pop
mov
aaa
dec
pushf
enter
add
push
aad
add
and
and
jge
testb
je
and
sbb
xchg
xchg
mov
popa
lock
fcoms
dec
xor
pop
cmp
test
lahf
inc
ret
xchg
xchg
inc
fisubrl
dec
sbb
mov
out
lahf
jne
pop
push
jbe
repz
or
lret
int3
lahf
dec
cmpsl
sti
sub
shl
icebp
xor
fwait
lret
lret
mov
pop
mov
jge
fwait
rorb
push
inc
aam
je
ret
adc
es
mov
insl
call
push
push
xchg
push
enter
sbb
lods
adc
mov
inc
sub
and
mov
orb
ja
add
mov
test
daa
xor
xlat
jle
call
add
sbb
jl
stos
mov
mov
xchg
dec
mov
add
sub
xor
rorl
push
or
mov
cmp
dec
int
ds
lock
mov
mov
mov
push
setnp
pusha
fwait
push
jno
ds
js
mov
bound
dec
jns
mov
lods
xchg
sarl
in
mov
xchg
addr16
mov
jp
sub
inc
mov
xchg
loope
lahf
and
js
mov
xchg
push
int3
jmp
dec
xchg
notl
aad
out
push
out
inc
mov
mov
jbe
scas
stos
fldt
lcall
cmpb
popf
cs
int
adc
cmp
add
push
xchg
inc
stos
stc
ja
lds
push
xchg
and
popf
shr
test
inc
fdivrl
rclb
movsl
imul
fldenv
push
and
shlb
test
and
sub
xor
hlt
lds
movsb
push
pop
inc
fwait
jb
inc
jg
sbb
mov
or
imul
add
dec
fidivrs
fsubl
push
jo
fldcw
and
movsb
cmp
dec
movsb
xor
push
pop
jmp
adc
repnz
enter
daa
xor
inc
cmp
and
sub
jl
ljmp
mov
xor
aas
jle
lahf
mov
push
rep
adc
idivl
cmpsb
add
push
in
fisttpl
pop
es
push
xchg
xor
sub
sbbb
stos
stos
pop
ds
jbe,pt
aas
or
shlb
in
subb
fldl
pusha
mov
fstps
cmp
cld
aam
sub
loopne
pushf
cltd
mov
mov
call
sub
insl
mov
repnz
arpl
cmp
shlb
js
cmp
push
cmp
or
xchg
repz
pop
out
notl
int3
inc
roll
pop
mov
xchg
sbb
mov
test
test
xor
adc
sahf
stc
sub
dec
fs
fistl
adc
rcl
xchg
xor
add
out
pop
fs
xchg
sbb
repz
or
rorb
addb
pop
hlt
cmp
or
mov
dec
leave
std
add
and
jg
lods
mov
xchg
cmp
jecxz
xlat
adc
lahf
push
mov
ret
sti
testb
gs
loope
nop
stc
mov
cli
inc
hlt
inc
flds
cmp
mov
cmc
repz
xlat
xchg
jbe
adc
sub
dec
fwait
in
cmp
sbb
adc
and
pushf
jae
sahf
jmp
xor
mov
xor
jae
aas
rolb
dec
fistl
mov
test
sub
push
sbb
decl
sbb
jmp
movsl
pushf
jno
lret
test
hlt
dec
clc
mov
imul
in
inc
dec
lock
pushf
jb
das
sub
mov
mov
jp
shrl
outsl
divb
push
push
std
jb
pop
dec
mov
dec
test
hlt
fiaddl
or
cld
push
and
mov
popa
mov
mov
mov
pushf
jo
rcrb
sub
pop
aam
sbb
es
insl
iret
push
pop
clc
mov
and
ljmp
push
lods
jge
adc
cmovge
ret
or
push
nop
jno
movups
add
lds
sbb
push
mov
add
sbb
mov
pop
jle
xchg
inc
mov
fiadds
test
add
xchg
xor
aas
sub
or
sub
sahf
sbb
iret
popa
scas
xchg
mov
pop
stos
in
jb
cmc
jmp
dec
test
dec
inc
push
daa
fisttps
das
dec
fwait
pusha
sbb
push
adc
mov
mov
nop
xor
add
or
add
pop
in
lods
rclb
daa
and
or
pop
cmpl
cmpxchg
fistpll
insl
decb
adc
lds
test
filds
pop
push
jmp
scas
jno
cmpl
cmp
ljmp
stos
dec
add
insb
js
aam
dec
xor
in
dec
cmc
adc
sbb
ret
mov
and
inc
mov
shll
push
lret
mov
out
call
sti
pop
fisubrl
movsb
cld
sbb
into
or
xor
sti
push
imulb
ror
insb
mov
jae
push
leave
test
in
adc
arpl
insl
push
or
jp
movsb
aaa
test
adc
add
mov
in
faddp
pop
dec
xchg
lds
nop
add
and
jae
cmp
movsl
xor
mov
or
jbe
push
push
jge
imul
mov
inc
jno
or
dec
icebp
jae
push
jno
adc
fisubrl
pop
push
mov
test
ret
inc
mov
inc
dec
in
ret
js
insb
popf
pop
cmpb
fistl
sub
sub
ds
pushf
cmp
sarb
xchg
aas
lds
mov
aad
add
mov
test
pop
sub
pop
and
test
cmpsl
inc
inc
pop
sbb
pop
lcall
xchg
push
cmp
sub
push
xor
xor
fnstenv
es
xlat
arpl
out
int
lret
movsb
fmuls
add
lret
aaa
rcrl
jg
js
insl
sahf
in
jl
push
jbe
add
test
aad
loop
out
cmp
filds
adcb
add
mov
cmp
fucomp
out
std
cli
mov
sbb
cmp
test
cld
into
dec
push
mov
loopne
add
pop
adc
pop
imul
mov
data16
mov
lods
pushf
fcompl
or
adc
or
jo
sbb
cli
in
sub
xchg
cs
mov
adc
nop
aam
scas
dec
mov
insl
inc
mov
jae
les
xor
cmp
call
sbb
lcall
xor
jmp
test
pmullw
and
inc
fsubrl
aas
pop
fsub
jb
push
dec
in
fidivl
das
jecxz
arpl
popa
adc
mov
mov
imul
xchg
shrl
imulb
or
push
mov
add
jp
idivb
xchg
std
sbb
push
cmpsl
xor
or
fisttps
cld
jnp
cltd
lret
test
ret
aad
mov
pop
pop
mov
mov
push
leave
aam
adc
cmp
insl
mov
inc
clc
imulb
push
xchg
test
popa
ljmp
mov
mov
mov
or
push
imul
movq
faddl
sbb
test
push
dec
push
mov
fnsave
notl
xchg
jb
push
test
pop
sub
in
jle
sahf
out
cmpsb
sbbb
faddl
sbb
ret
arpl
xor
popa
repnz
jle
mov
inc
fdivrs
pop
data16
ja
mov
push
or
fisttpll
push
mov
jmp
push
xchg
mov
push
fucomip
loop
bound
movl
xchg
jno
leave
mov
in
mov
jl
out
addr16
mov
aam
pop
mov
pop
sarl
out
pop
dec
mov
dec
lret
cmpsb
cld
fbld
sbb
loopne
jp
in
orl
out
sbb
mov
hlt
outsb
in
stos
rorl
and
fcomi
jnp
cmpsl
sbb
rcr
in
xor
nop
mov
iretw
fwait
ret
adc
into
xor
sar
jae
sahf
mov
popf
and
mov
inc
fidivrl
sbb
je
iret
imul
scas
lahf
es
push
push
push
shr
fdivrl
movb
hlt
pop
cmc
icebp
arpl
push
cli
inc
mov
in
sbb
adc
or
cmp
fadds
je
jnp
out
fidivrs
lret
lds
pop
scas
cli
mov
and
cmpsl
int3
movsb
dec
int
push
gs
xorb
es
ret
ror
shl
daa
xor
cmp
lds
jl
pop
dec
pusha
data16
push
push
ret
xor
jne
and
cltd
push
popf
test
lea
cmpsb
or
jge
test
mov
push
rcrb
loope
cmp
push
cmpsl
xchg
cmp
xor
ds
andl
lea
sahf
test
adc
jmp
dec
or
xor
iret
jmp
out
pop
dec
pop
subb
addr16
lcall
push
out
repnz
in
pop
sub
shrl
sub
adc
push
test
shll
adc
push
xchg
in
out
push
push
inc
sahf
dec
int
call
cmp
lret
inc
shll
ret
sbb
or
test
fnstenv
xor
outsl
push
cltd
adc
fisubl
jo
xchg
mov
fs
and
cltd
orl
aaa
push
xchg
mov
adc
cli
in
outsb
xorb
es
cmp
repnz
jbe
adc
loop
jnp
ds
xor
loopne
xor
stos
adc
call
and
push
js
adcl
inc
fdivrp
xlat
xchg
pusha
imulb
jnp
mov
cwtl
iret
sub
inc
stc
jb
outsl
stos
adc
push
subb
xor
jne
inc
push
mov
lret
xchg
cld
mov
call
cltd
insl
pop
pop
mov
bound
jmp
in
cs
push
mov
xor
call
aas
js
jb
sub
adc
shl
dec
sub
and
enter
xchg
mov
mov
cmpl
adc
pop
inc
pop
rorl
lock
pop
outsl
das
ljmp
mov
nop
or
rorl
outsl
idivb
push
dec
cwtl
adc
cmpsl
xor
mov
mov
das
cld
cmpsb
adc
pop
dec
mov
loop
adc
fisubl
push
add
push
sub
aam
aam
fs
ret
adc
push
es
aas
stc
insl
popf
and
xchg
fistl
mov
cwtl
popa
test
mov
lods
mov
and
inc
dec
ds
sbb
add
push
xor
test
rol
push
dec
fadds
pop
adc
sbb
or
pop
aam
imul
push
mov
and
add
mov
inc
mov
cld
or
addr16
cmp
mov
inc
inc
icebp
dec
add
jno
and
xor
outsb
cmp
pop
jle
mov
scas
cmc
add
mov
jl
sarl
jb
aaa
in
inc
adc
lods
sbb
pop
or
nop
addr16
inc
jge
pop
subl
or
lea
xor
dec
sahf
add
lds
mov
xor
das
add
xchg
inc
in
adc
cli
out
push
xchg
sub
pusha
jns
push
xor
stos
xor
xchg
and
lahf
jnp
loope
jle
fcoml
jl
adc
xor
enter
mov
jae
sub
push
fdivrp
imul
dec
xchg
inc
pop
add
ficoml
or
imul
scas
add
js
push
inc
dec
rolb
mov
sbb
or
cmpsb
ret
loop
rorl
rorb
lock
dec
or
cmp
ret
clc
jg
stos
cmpsb
adc
and
lds
cmp
fnstcw
and
jo
cmp
movsb
aad
insl
push
mov
add
lea
xchg
xor
mov
hlt
insl
adc
cmp
jl
shll
aaa
inc
popa
xor
adc
xchg
lahf
jmp
lcall
pop
sub
cmpsb
mov
adc
nop
aaa
js
inc
adc
jecxz
and
jge
loope
std
addr16
clc
dec
cmp
xor
adc
xor
into
std
mov
sbb
loope
das
out
xor
inc
scas
call
and
popf
push
lock
sbb
lcall
pusha
fsubrl
sti
dec
outsb
cmp
in
movl
imul
pop
je
and
xchg
and
inc
sarl
xor
fnstsw
lret
lcall
adc
inc
mov
sub
aaa
xor
popa
add
insl
xchg
dec
xorb
rcrb
dec
stc
ss
and
jmp
hlt
fstpl
cli
and
js
stos
cmp
xlat
pop
or
shrl
cmc
xlat
outsl
and
sub
pop
push
xlat
adc
andl
insb
adc
testb
pop
clc
xor
testl
xlat
shlb
shlb
add
lahf
sti
add
sbb
out
dec
gs
push
nop
mov
in
enter
lods
aad
roll
js
mov
jl
call
sbb
outsl
mov
add
in
cs
aas
aad
shlb
aas
popf
sbb
jb
and
mov
cmp
and
fstps
loop
mov
ret
jecxz
fildl
loop
je
push
inc
fistps
lock
out
sbb
leave
and
repnz
sarl
jle
rcrl
push
idiv
mov
imul
enter
lea
jecxz
xchg
xor
test
pushf
lret
pop
popa
rcl
outsl
push
sub
scas
pop
aam
pop
fwait
ret
mov
push
push
insl
test
clc
insb
xchg
and
sub
ljmp
push
xchg
mov
shlb
and
and
or
add
push
xchg
cltd
sbb
adc
adc
pop
fldl
mov
sbb
shll
cs
jg
lret
sub
out
insb
sbb
xchg
push
inc
add
pop
add
fs
rcrb
mov
cld
sub
xchg
cmpsl
dec
imul
adc
out
dec
cmp
xchg
or
mov
fwait
in
fcoml
std
lods
or
popa
in
mov
sbb
out
mov
sub
jns
gs
in
nop
mov
lock
in
xor
push
or
addr16
jp
jp
mov
mov
mov
adc
subl
pusha
in
fstp
loopne
jae
push
imul
movb
sbb
push
push
cld
repz
fwait
sahf
adcb
sbb
rorl
les
cmpl
mov
in
sub
adc
fwait
js
and
or
push
inc
pop
pop
enter
xlat
push
mov
add
add
mov
sub
push
fmul
cwtl
fcmove
lods
adc
lret
imul
jmp
push
pushf
jl
rcrb
mov
insb
hlt
push
leave
or
in
arpl
ss
inc
cmpsl
mov
dec
sbb
subl
add
pop
iret
int3
scas
ret
fwait
pop
fstps
lds
lds
fs
jo
sub
scas
mov
cmp
cmp
xchg
xchg
movsb
pusha
mov
mov
push
lds
and
inc
daa
xor
and
test
jl
jae
dec
ds
jmp
xor
stos
mov
lahf
or
test
push
call
push
and
fiadds
iret
jle
jno
push
js
call
and
push
fstl
sub
sbb
sti
bound
movsl
pop
int3
stc
rorb
mov
cmp
sbb
adc
xor
pusha
lods
pop
cwtl
stc
fisubrl
sbb
pop
cwtl
daa
jno
push
mov
jnp
push
into
subl
sahf
mov
adc
xchg
jg
lods
mov
mov
stos
add
add
leave
push
dec
pop
ret
iret
mov
loopne
cli
imul
bound
iret
sbb
sahf
into
pop
mov
adc
push
outsl
adc
data16
add
lahf
arpl
lods
ss
or
mov
cmp
out
sub
cli
push
int
xor
inc
cmp
lods
ret
or
in
into
repnz
jg
sahf
xor
loopne
fisubl
sti
or
push
push
hlt
adc
pop
cltd
add
pop
inc
lods
push
mulb
xlat
adc
sub
ja
pop
mov
in
outsb
xor
decb
hlt
mov
add
in
aam
int3
inc
fstpt
cld
repz
fdivr
xchg
repz
jo
sbb
push
jl
xchg
dec
pop
and
rclb
xor
pop
data16
test
arpl
mov
enter
mov
test
dec
jno
je
push
and
xchg
sub
push
cwtl
or
mov
outsl
daa
mov
sbb
dec
movsb
cwtl
push
pop
pop
dec
inc
inc
inc
jmp
or
cmpsb
das
test
ret
xchg
mov
cmpsb
inc
popf
shrl
cmpsl
and
push
int3
orb
out
cmpsl
das
mov
ja
fs
pop
cld
cld
push
jl
cmc
cmp
push
mov
rol
clc
adc
pop
sbb
rcl
inc
into
sub
sub
aam
jl
xor
insl
imul
xchg
inc
mov
addr16
add
sahf
lods
sub
mov
repz
lcall
je
jl
lds
push
pusha
adc
xchg
cmp
mov
test
cmpsl
or
das
das
mov
pop
sub
mov
dec
loope
out
iret
addr16
mov
pop
add
incl
andb
inc
sub
aam
or
xchg
adc
mov
pop
xchg
nop
lods
ja
inc
pop
dec
je
cltd
inc
scas
inc
mov
fwait
sbb
sub
mov
sub
mov
push
inc
out
jg
or
pusha
jns
sub
in
das
aad
pop
cmc
mov
fsubs
addr16
lods
jp
xchg
adc
cmpsl
add
lds
pusha
jg
inc
outsb
fwait
xchg
cmp
sub
lods
xor
dec
out
sbb
sub
push
jnp
mov
movsl
stos
sbb
and
push
imul
popf
jle
lret
addr16
cmp
adc
mov
arpl
fs
pop
decl
inc
loop
mov
adc
popf
xchg
xor
stos
roll
mov
jnp
out
cmp
mov
stc
scas
enter
jecxz
cmp
cmp
gs
jecxz
hlt
cmp
sub
inc
stos
insl
mov
pop
int3
aaa
cmp
mov
mov
int3
cltd
bound
or
mov
push
add
mov
jmp
and
loop
scas
test
push
imul
fs
lock
sub
enter
daa
das
mov
fidivs
test
xchg
out
dec
lods
aad
push
std
stc
and
inc
mov
lahf
daa
inc
rcll
ds
test
out
sbb
cmpsb
xchg
jge
in
pop
add
cmc
pop
popa
pop
pushw
lock
sbb
pop
and
push
rorb
popf
xor
jmp
push
orb
push
in
test
inc
mov
xor
jae
xor
scas
pop
mov
dec
jbe
pop
aad
lcall
dec
fdivr
cld
das
sub
out
add
adc
mov
adc
mov
inc
ret
mov
push
pushf
mov
cmp
adc
aaa
push
dec
arpl
int
cltd
and
je
loopne
push
bound
in
adc
cmp
je
xchg
sbb
and
stos
nop
aad
insl
out
outsl
out
cld
xchg
in
xchg
mov
std
pop
adc
mov
ljmp
cli
xchg
fnstenv
sub
mov
pop
mov
cmc
gs
push
loopne
lahf
xor
and
adc
loope
imul
push
mov
shlw
shrl
hlt
sub
xlat
push
mov
stos
mov
fstps
out
popa
mov
gs
mov
xor
push
inc
out
nop
pop
fstps
enter
shlb
repz
js
xchg
inc
stc
mov
xchg
inc
js
push
or
imul
lret
jmp
xor
jp,pn
es
adc
inc
dec
shufps
sub
scas
ljmp
divb
jecxz
sbb
sub
bound
ret
xchg
mov
repz
dec
and
lahf
pop
stc
pop
mov
xchg
or
arpl
lds
xchg
jae
sbb
inc
mov
xor
sar
arpl
std
mov
pop
dec
mov
cmpsl
add
icebp
cmp
daa
xor
lret
fs
hlt
mov
pusha
iret
mov
test
xchg
fwait
mov
aaa
jns
jnp
outsb
sub
dec
jo
rorl
ret
rol
es
pop
inc
insl
push
rcr
clc
loop
sti
xchg
andb
popa
sbb
lods
xchg
inc
stos
mov
push
rcl
and
xlat
daa
and
add
les
lret
mov
loopne
push
xchg
in
outsb
fst
jae
test
push
push
xchg
repz
iret
pop
rcrl
fildll
pop
aad
shrb
xor
xchg
das
sbb
jmp
aas
or
mov
pop
dec
mov
dec
xor
dec
aaa
jae
pop
push
imul
addr16
xchg
inc
inc
rorb
ljmp
push
inc
xchg
add
lcall
ffree
movsl
jns
xchg
dec
in
and
mov
jle
mov
push
jbe
jp
sub
mov
mov
mov
and
sub
dec
frstor
imul
xchg
adc
jmp
cmpsb
mov
addl
sub
adc
mov
and
mov
mov
jle
mov
in
scas
jge
scas
testl
ja
fstps
imul
sti
cld
jae
insl
lds
daa
jmp
lret
cmp
inc
in
fisubrl
xchg
xor
and
sbb
push
lahf
data16
sub
xor
pop
cmp
push
pop
xor
repnz
adc
arpl
pop
xlat
inc
lods
cmp
and
dec
aaa
inc
ljmp
or
jne
test
ret
adc
add
xor
push
jo
dec
jae
jbe
nop
and
jno
cmp
movsb
jbe
int3
push
mov
inc
out
jge
push
aaa
enter
daa
cs
cmp
jno
mov
jl
das
orb
sub
loopne
mov
and
movl
in
je
jb
adc
dec
inc
mov
sbb
inc
push
js
fbld
push
mov
mov
cmp
jbe
ds
push
movsl
imul
sbb
sbbb
sbb
sub
push
pusha
lds
mov
push
imull
inc
sub
mov
pop
lcall
fsubrl
shl
sbb
adc
mov
jg
mov
leave
jle
jns
mov
fistps
dec
loop
int
inc
fstp
das
nop
loop
je
sub
xchg
movsl
or
ret
jl
adc
cltd
test
jmp
xor
add
mov
stc
jb
inc
fs
out
adc
cmp
cmp
in
out
test
cli
mov
lds
cmp
shrb
pop
iret
jp
mov
fcompp
loopne
ja
pop
scas
dec
adcl
adc
adc
sbb
add
pop
mulb
test
es
cmp
ret
sbb
sub
fwait
mov
inc
loope
sti
adc
push
mov
addr16
sbb
fmull
cmp
fsts
fadd
repnz
movsb
repz
hlt
xor
push
icebp
jp
or
insb
xchg
lahf
or
jle
adc
rcrl
jge
fnsave
mov
dec
inc
stos
inc
arpl
aas
jp
inc
jb
inc
lahf
dec
aaa
mov
je
jmp
jecxz
repz
cs
cwtl
lea
cwtl
jle
or
jge
mov
dec
jp
or
into
std
ret
pop
pop
xchg
cli
inc
je
fcomi
mov
xchg
mov
rcrb
cwtl
rorl
loop
enter
pop
mov
aad
sub
add
icebp
adc
frndint
push
jecxz
lret
roll
mov
and
and
pop
push
ret
jnp
dec
andl
aam
out
ret
dec
and
insl
cmp
call
xchg
mov
mov
inc
lods
cli
dec
mov
cmp
in
xor
push
mov
int3
cmovp
xchg
add
cmp
cltd
mov
mov
mov
insl
notl
xchg
test
mov
aad
or
xchg
and
shll
mov
stos
sub
lds
dec
mov
sub
xor
dec
or
gs
les
sahf
adc
ja
xchg
pop
xchg
inc
fwait
jp
pushf
push
out
jg
neg
or
cmp
arpl
jns
lahf
mul
ds
out
mov
xchg
es
mov
arpl
lea
xchg
jp
ja
mov
bound
mov
repnz
dec
sub
jne
or
pusha
mov
imul
pop
xchg
jecxz
ret
jmp
jno
movsb
adcl
push
out
mov
sub
dec
xchg
add
pop
and
inc
pop
insb
cli
icebp
push
push
mov
mov
clc
iret
inc
idiv
ret
into
pop
insl
sub
inc
clc
int3
mov
outsb
or
jecxz
sub
pop
xchg
inc
push
cmp
xchg
and
sbb
sub
imul
sti
push
jno
jl
jo
popa
mov
gs
or
push
hlt
rolb
or
and
arpl
fsubr
mov
or
fiaddl
jecxz
jbe
outsl
sbb
pop
popw
add
scas
std
rol
push
pop
scas
push
ret
jne
insl
cmp
dec
movsb
add
adc
mov
jbe
push
jge
in
enter
daa
sub
push
and
jl
dec
pop
dec
mov
shlb
jl
in
lahf
sbb
mov
xchg
mov
test
inc
pop
or
cwtl
shlb
in
sub
call
pop
filds
pop
loope
jb
sub
xchg
cmp
ds
aad
movsl
jo
add
jns
adc
das
pop
sbb
pop
mov
add
xchg
xor
jg
pop
or
les
adc
xchg
mov
fcoml
out
sub
outsb
mov
adc
xlat
mov
jg
out
cmp
fiaddl
mov
and
sub
push
push
aad
int
xlat
test
ljmp
lret
jl
sub
mov
xchg
xchg
jbe
sahf
mov
cwtl
test
cmp
lods
test
loop
and
stc
sub
pop
fs
inc
adc
xlat
ss
jbe
cmp
loopne
or
or
mov
xor
xchg
adc
or
push
and
cmc
repz
andb
jg
adc
outsb
mov
adc
jne
add
test
inc
sbb
push
xchg
into
out
sub
je
in
scas
ja
sti
mov
adc
nop
divb
dec
icebp
mov
inc
adc
je
repz
icebp
xchg
lret
xchg
sbb
xchg
into
pop
cmp
sbb
pushf
and
daa
cs
int3
inc
aad
fistpll
aas
sbb
push
jb
or
dec
scas
js
xchg
jecxz
pmuludq
xor
lret
idivl
cmp
sub
scas
adc
std
popa
mov
inc
sti
pusha
shl
sbb
das
inc
outsl
jecxz
add
ja
and
pushf
into
rcll
imul
dec
jg
or
pop
pop
icebp
jmp
imul
mov
mov
lds
inc
pop
jne
mov
and
es
jge
aam
fisubl
lds
shlb
and
sbb
ljmp
sbb
mov
pop
cld
test
leave
sbb
test
inc
and
loopne
btr
lret
xchg
inc
frstor
mov
test
pop
movsb
xchg
sbb
es
cltd
xchg
pop
sub
jle
sbb
sub
gs
jmp
dec
sub
test
xor
ret
cmp
xchg
popa
dec
add
fcoml
outsb
fmull
jb
inc
je
pop
or
push
fstps
mov
stos
add
push
lcall
add
clc
jns
push
pop
in
add
dec
adc
inc
mov
pop
xor
mov
push
ja
mov
bound
or
mov
push
inc
fistps
xchg
mov
inc
jmp
cmp
mov
out
xor
mov
outsb
inc
dec
stos
jae
popa
and
lock
push
jnp
jle
jle
push
cmp
xchg
lds
mov
push
ret
or
xchg
incl
arpl
in
adcb
lret
or
xchg
inc
aam
xor
xchg
dec
repnz
inc
jnp
sbb
and
imul
sbb
mov
cmp
cmp
sbb
hlt
sbb
xchg
adc
or
xchg
xchg
shlb
mov
orl
pop
xchg
fldl
lds
xor
mov
jbe
or
cmp
and
fs
aas
lock
add
jge
xchg
cmp
jl
mov
sub
ds
inc
push
jno
and
cli
sub
push
cmpsb
fidivl
pop
sub
push
mov
shrl
jae
inc
cmpsb
push
in
sbb
test
adc
pop
js
jg
pop
push
aas
and
loope
jmp
and
and
inc
ds
fists
movsl
ja
icebp
sarb
or
inc
cld
mov
xchg
lret
add
add
push
cmpb
jge
mov
pop
inc
sub
mov
lcall
push
faddl
sbbl
sub
adc
repnz
adc
mov
jb
mov
dec
mov
shlb
push
push
cmp
int
dec
mov
movsl
xchg
cmp
lea
lret
or
mov
pop
popa
sbb
in
sub
pop
jb
test
lret
andb
test
stc
loopne
loopne
iret
xlat
adc
or
sahf
sub
cmp
fstpt
out
cmp
cli
pop
cli
xor
stos
insl
repnz
dec
ja
add
cmc
mov
gs
adc
add
add
inc
int3
pop
jnp
lods
in
in
cmp
ret
sub
mov
in
sbb
and
outsb
mov
xchg
pop
mov
imul
dec
push
xor
daa
mov
inc
das
rep
mov
xchg
mov
sbb
add
pop
xchg
push
xchg
pop
out
jmp
lcall
popa
pop
mov
fdivl
aas
mov
add
aaa
je
iret
inc
jecxz
outsl
dec
xor
fisttpll
hlt
lahf
and
arpl
mov
fldt
xchg
stos
mov
sbb
lock
outsl
das
and
andb
adc
shl
pushf
push
testb
std
stos
push
xchg
dec
jp
pop
cmpsl
sub
jne
mov
rcr
cld
test
pushf
lret
mov
mov
xchg
mov
mov
xchg
test
lahf
sub
mov
xor
push
es
add
xchg
xchg
inc
inc
xchg
cmp
push
mov
lods
aad
and
jg
push
and
push
rorb
sub
jl
mov
push
jg
fists
int
inc
imul
inc
lds
xchg
jecxz
sbb
jmp
sub
imul
int
mov
cmpb
jg
lea
xlat
mov
sysenter
divb
mov
push
cmp
insb
std
xor
jae
ja
fldcw
inc
or
fdivs
push
sub
roll
stos
jmp
out
sti
mov
bound
movsb
push
icebp
in
xchg
lcall
mov
pop
stos
xchg
dec
scas
jp
sub
push
or
jmp
bnd
test
neg
jnp
in
xchg
mov
mov
stc
xor
pop
and
xorl
popf
and
popa
test
lods
pusha
stos
stos
out
push
and
mov
imul
movsb
jle
pop
jno
pushf
data16
aas
pop
aaa
iret
out
fs
mov
inc
push
imul
jo
gs
xor
push
push
outsl
jbe
inc
mov
xchg
cltd
xchg
fstps
in
pop
imul
inc
scas
push
fldl
push
incl
mov
or
leave
pusha
cmp
sub
mov
sbb
cmp
or
fadds
adc
and
les
fdivp
or
lds
jo
adc
adc
fwait
inc
scas
cmp
inc
je
mov
jbe
adc
enter
daa
sub
sub
and
lods
and
jl
add
push
mov
out
xor
mov
clc
lahf
mov
cmc
out
push
mov
push
sbb
push
inc
xor
imull
cli
mov
notb
pop
cld
aad
mov
test
sub
inc
mov
shlb
popa
ds
adc
push
mov
aaa
push
adcb
sbb
jbe
add
into
scas
xor
mov
inc
orl
pop
mov
sub
add
lcall
push
fsubrl
push
cs
or
fiaddl
mov
dec
add
mov
int
cmpsb
pop
fsubs
in
testl
rcll
mov
jnp
sbb
sub
std
scas
jae
push
stos
xor
fldt
loop
sub
xchg
int3
inc
sbb
adc
mov
ss
mov
mov
iret
cli
push
pop
test
xorb
imul
into
popa
lds
cmc
adc
out
pop
or
xchg
adc
xchg
imul
sub
mov
lods
aam
mov
loopne
sbb
sub
sbb
in
test
dec
sti
sbb
xchg
mov
mov
pop
dec
dec
scas
mov
inc
cmp
inc
fdecstp
pop
cmc
les
addr16
repz
push
xchg
push
movsb
stos
sbb
jge
mov
adc
pop
mov
mov
pushf
jbe
mov
cs
fstpl
mov
jmp
jb
xor
ja
push
rcr
mov
data16
aaa
cmp
cltd
mov
sbb
push
js
sbb
lea
pop
inc
movsb
out
or
das
add
jg
in
iret
and
and
shll
xorl
ss
jne
outsl
cmpsl
sub
xchg
out
int3
cld
shl
or
mov
jp
outsb
mov
fstpl
pop
mov
xchg
rol
data16
cmp
jmp
cld
fcmove
es
imul
clc
into
mov
lret
fcmovnbe
popa
ja
adc
mov
push
and
inc
mov
repz
cs
fs
mov
pop
lods
push
push
mov
xor
test
mov
insb
sbb
in
pop
orl
and
mov
out
add
cmp
sub
pusha
or
jns
mov
pop
shlb
dec
rorl
pop
ds
movsl
ja
leave
dec
dec
xor
inc
mov
sbb
fwait
pop
adc
add
push
push
nop
out
ficoml
jns
popf
std
in
xor
mov
push
cmp
push
mov
mov
insb
xchg
jecxz
in
dec
mov
mov
dec
rcl
add
nop
push
pusha
xchg
fistps
test
jmp
rorb
add
cli
out
test
std
mov
push
stos
pop
scas
shlb
mov
sbb
in
jle
int3
sbb
mov
lahf
sub
pop
jb
ret
adc
inc
sbb
push
push
xor
pop
lds
cmp
rcl
xchg
lock
loope
int3
mov
scas
mov
pushf
push
inc
adc
rol
jg
es
repnz
mov
and
mov
mov
inc
mov
pop
cmp
or
sub
dec
icebp
add
jmp
repz
icebp
mov
jge
scas
repnz
in
cs
push
inc
lds
movsb
mov
push
dec
jbe
xchg
fnstsw
test
int3
daa
sub
cmp
pop
jno
inc
inc
jl
cwtl
dec
dec
fmuls
inc
xor
dec
fidivrs
push
xor
dec
test
in
adc
les
pop
in
loope
mov
insb
jo
pop
pushf
cmp
or
addb
jbe
std
cmp
rclb
movsl
test
shlb
xchg
push
sbb
add
sub
xor
xor
sub
sub
push
out
xchg
hlt
lret
lcall
xor
push
push
shrl
out
rorl
adc
sub
mov
mov
cs
fstpt
pop
mov
cmp
push
in
fcomps
jmp
testl
repz
in
fildl
sbb
sub
sahf
mov
cmp
mov
dec
pop
loop
std
and
dec
pop
clc
movsl
push
adc
cs
ss
fwait
cmp
rcll
mov
xor
push
cmp
cvtps2pd
adc
repnz
inc
fstp
cmc
dec
jmp
icebp
pop
sub
enter
ds
xchg
or
bound
lods
mov
call
aas
sub
sub
in
lock
sti
int3
mov
imul
ljmp
dec
inc
loopne
sub
fidivs
xchg
adc
aad
in
pop
mov
xchg
adc
pop
push
and
insb
pushf
and
shr
push
sahf
imul
inc
iret
sahf
dec
aas
imul
jb
cwtl
cmpsl
dec
adc
or
adc
sar
cmp
jle
add
cwtl
push
out
mov
movsb
and
jae
clc
dec
cmp
pop
jmp
jmp
lock
das
loop
mov
pushf
push
inc
and
in
roll
idiv
clc
sti
jbe
jo
cld
cmpsl
sub
shl
outsb
es
repz
mov
scas
mov
pavgb
rcrb
mov
aam
stos
lahf
ret
mov
es
dec
insl
aad
sar
or
and
dec
dec
cmp
mov
scas
mov
lds
or
dec
push
push
rcr
shufps
add
insl
cltd
fwait
mov
test
shll
dec
push
push
gs
fstl
dec
mov
shll
sbb
nop
rcl
mov
fldcw
and
ja
pop
inc
and
mov
sbb
mov
imul
mov
mov
xchg
rorb
out
stc
pop
movsb
ja
cmp
les
sub
or
ds
ss
push
jb
fadds
popa
lret
mov
fxch
jns
cmp
in
lret
cmp
mov
ret
or
and
jb
jp
lods
mov
test
lock
in
jne
fcmovnb
pusha
and
push
xchg
das
sbb
xchg
popf
shrl
out
pop
push
mov
sub
jns
je
inc
insb
cmpsb
jmp
jnp
aas
inc
jle
jne
in
aam
adc
cmp
mov
mov
roll
sbb
push
testb
push
push
mov
fisubrl
cmp
sbb
sti
mov
shrl
sbb
fstl
or
rcr
pop
mov
mov
sub
dec
cmp
hlt
incb
push
inc
mov
mov
shlb
sti
mov
add
int3
sbb
mov
vcvtpd2dqx
fdivr
insb
scas
roll
and
test
cmp
mov
movsb
sub
jne
jbe
xchg
jge
pop
push
enter
daa
sub
cmp
pop
jl
add
dec
inc
pusha
mov
dec
pop
pushl
call
lcall
push
add
es
mov
mov
cmpsb
movsb
in
mov
enter
cmpsl
push
pop
fildl
add
sub
loope
es
push
and
xor
movsl
mov
rorb
in
cmc
pop
mov
aaa
pop
add
pushaw
xor
push
xchg
pop
test
stos
push
pop
adc
add
cmp
jns
sub
add
outsb
push
mov
adc
inc
and
jg
add
int3
and
mov
fsubs
insl
rolb
pop
sub
insl
add
aad
lret
lret
fld
test
mov
mov
ss
inc
add
test
mov
xor
xor
stc
add
xchg
ret
adc
cmp
addr16
jle
push
push
addr16
std
lods
out
outsb
jnp
mov
not
cmp
mov
or
jmp
mov
out
fidivs
push
mov
adc
xor
dec
in
mov
cmp
dec
xlat
lret
sub
dec
jb
pop
sbb
jnp
sar
jmp
fldenv
mov
dec
insl
mov
out
fldenv
les
test
iret
xchg
xlat
mov
sbb
jae
cltd
adc
bound
push
dec
adc
jnp
pushf
int3
add
cmp
cs
mov
xchg
inc
ljmp
jb
das
addr16
mov
nop
jecxz
daa
lods
cmp
or
mov
jp
mov
lods
orl
mov
mov
mov
inc
pop
cmpsl
lock
cld
das
sar
mov
push
imul
cli
jp
sarl
loop
pop
outsb
push
std
lahf
int3
dec
imul
mov
inc
sbbl
xor
mov
jne
loope
lock
icebp
mov
mov
aam
in
xor
sbb
jo
data16
mov
imul
ret
popa
movsl
add
mov
pop
rorl
and
stc
cld
lods
loopne
add
add
or
ret
mov
sub
push
das
fnstsw
arpl
adc
or
pop
xlat
pop
mov
out
test
and
rorl
add
pop
aaa
xorl
or
xchg
xor
jg
mov
pop
push
push
dec
mov
scas
sbb
xor
sub
or
xor
fwait
gs
out
adc
clc
das
mov
push
dec
out
cwtl
gs
jns
jp
in
mov
xchg
xchg
or
dec
mov
jp
jnp
mov
in
loop
aam
mov
dec
cltd
ljmp
mov
imul
fsubrp
popa
xchg
push
dec
out
test
sub
jae
outsb
push
push
dec
stos
aas
and
mov
dec
insb
adc
jle
adc
adc
ljmp
jmp
mov
jae
sbb
push
mov
insl
sub
mov
inc
rcrb
xchg
sahf
les
and
imul
cmc
push
aam
pop
shl
push
mov
add
mov
lds
loop
pop
aaa
mov
mov
dec
popa
sbb
xlat
mov
ss
inc
add
adc
push
jmp
pop
push
sahf
aam
fnstsw
lds
jo
xor
pop
and
cmp
test
push
jnp
sbb
icebp
mov
enter
daa
sub
cmp
cld
mov
jno
mov
add
xor
out
and
lahf
add
popf
test
jnp
imul
adc
test
mov
pop
sbb
cld
sub
sub
sbb
jp,pt
leave
movsl
xchg
or
shl
sbb
push
data16
rolb
xor
xor
outsb
lock
rolb
add
lock
sub
nop
add
in
xchg
fsubrl
pop
outsb
mov
adc
mov
lods
pop
mov
xor
mov
xor
add
pusha
pusha
imul
or
fcoms
and
xchg
imul
iret
dec
mov
sahf
popa
sbb
mov
out
mov
xor
shrl
sbb
loop
cmp
stc
mov
sub
adc
lea
mov
sti
stos
out
mov
cli
jmp
mov
cmp
and
fmul
or
pusha
cmc
inc
jge
mov
sub
lods
cltd
adc
fsubrp
imul
mov
pushw
lods
mov
mov
or
sub
dec
dec
mov
sarl
and
xor
mov
test
cmp
dec
mov
jae
pushf
fstps
enter
outsb
cs
lcall
call
loop
pop
mov
push
cltd
pushf
ja
jnp
daa
pop
cli
cs
sbb
aad
mov
out
xor
sub
cs
mov
je
mov
jecxz
xchg
mov
into
xchg
mov
aad
mov
gs
dec
cld
femms
fucomi
rolb
pop
das
dec
sub
mov
lock
pop
das
mov
sbb
and
arpl
negb
mov
dec
ljmpw
add
sbb
and
push
je
lret
insl
mov
mov
out
mov
sahf
cmp
adc
hlt
sub
test
test
mov
insl
mov
popf
seta
mov
cmpsb
popa
mov
stos
je
mov
lret
sbb
push
aam
xchg
je
jge
cltd
or
inc
test
push
dec
mov
dec
ljmp
xlat
dec
test
and
xchg
stc
test
sarl
mov
stos
ret
sbb
xchg
jmp
and
sti
cmp
xor
out
or
sar
xor
cmpl
dec
or
mov
dec
or
and
or
jecxz
xchg
jg
push
mov
pop
sub
pop
stc
add
ja
pop
cwtl
pop
aas
in
repz
dec
cmp
mov
inc
push
or
cmpsb
mov
lcall
mov
sub
add
in
jne
pushf
les
mov
lea
aad
ret
xchg
xor
mov
insl
fldcw
test
jnp
mov
test
out
and
pusha
and
ds
jle
movsb
test
adc
adc
pop
mov
enter
pop
jae
push
iret
push
jl
ficompl
lods
dec
cli
inc
dec
or
ficoml
fs
cmc
jo
sbb
pop
jnp
lahf
hlt
gs
loopne
adc
es
mov
push
mov
leave
cmp
lcall
dec
popa
inc
ret
or
ds
aaa
jns
inc
or
lret
insl
out
int3
icebp
sub
pop
cmpb
fiadds
std
stc
jo
xor
scas
pop
adc
out
dec
cmp
add
in
inc
jbe
into
mov
enter
daa
daa
sbb
repnz
fdivs
lea
ljmp
push
adc
add
and
orl
in
in
xor
pop
inc
jno
sbb
xchg
jl
js
das
mov
push
fsubrl
sub
mov
cmp
pop
in
lcall
mov
mov
sbb
dec
lahf
xor
dec
cli
negb
in
sub
out
pop
psrlw
push
stos
sbbl
outsb
sbb
adc
jns
mov
dec
loope
mov
and
loop
inc
popa
sub
mov
fmul
cmp
push
fmuls
testl
xchg
shll
negl
lods
mov
out
jecxz
divl
inc
adc
out
jno
sub
dec
fs
adc
adc
scas
pop
ss
xchg
fs
ret
out
es
xor
push
nop
cmp
outsl
icebp
or
movsl
into
in
fcoml
loopne
xchg
mov
adc
push
cmpsb
adc
mov
mov
mov
lods
jo
lret
cmp
adc
xchg
sub
mov
xor
sti
fnstcw
ret
incb
stos
gs
sbb
dec
sub
xchg
inc
xchg
int
aas
cmp
xchg
pop
adc
imul
pop
insl
lret
aam
pushf
and
xchg
jmp
add
cs
outsb
repnz
stos
int3
inc
and
jg
sarl
iret
jb
cli
int3
dec
js
sbb
jecxz
dec
dec
movb
lea
add
mov
mov
mov
sbb
cmpl
cmp
fistl
iret
adc
adc
inc
and
dec
leave
das
jg
and
roll
shll
outsl
negb
sbb
popa
loope
cmpsl
mov
icebp
repz
cmp
fdiv
or
push
cmp
cld
xor
das
scas
inc
rclb
xchg
sub
outsl
mov
es
or
mov
mov
ljmp
xor
in
movsb
mov
cs
mov
push
and
scas
mov
jecxz
aas
add
xchg
and
sbb
imul
sub
aam
dec
mov
sbb
sub
pop
sub
mov
out
dec
push
pop
xchg
xor
add
lcall
or
fidivl
imul
lods
aas
dec
outsl
pop
mov
ja
mov
dec
mov
ret
pushf
icebp
fwait
ret
sub
push
pop
or
add
jb
cmp
push
inc
or
jns
call
mov
and
jo
mov
inc
scas
shlb
push
lcall
and
mov
cwtl
mov
fdivs
adc
pusha
repnz
fists
cli
icebp
xchg
test
cli
jmp
push
add
out
fwait
mov
jmp
test
add
mov
fcomps
jnp
in
jle
sub
in
addr16
adc
mov
les
fs
inc
mov
jae
int3
mov
aas
dec
lcall
daa
jle
inc
into
stc
push
fcmovb
push
add
sbb
dec
pushf
imul
gs
bound
shrb
cmc
repnz
int
leave
mov
in
fisttps
arpl
push
inc
or
stc
cmpsb
pop
aaa
cmp
or
add
imul
scas
xchg
test
and
and
push
out
cs
outsb
adc
jp
push
cmp
ljmp
pop
hlt
jge
jnp
enter
daa
es
daa
cmp
inc
out
jl
inc
ret
jnp
push
clc
imul
mov
xchg
push
push
jge
sub
sub
inc
add
dec
in
jge
dec
js
inc
out
cwtl
push
push
inc
sub
fisubs
mov
shlb
movsl
mov
mov
das
xorb
add
rorb
lds
cli
aad
push
lods
mov
pop
mov
mov
push
or
faddl
in
sub
mov
adc
xchg
or
insb
stc
mov
dec
cmp
xchg
loopne
and
sub
int
shrl
pop
and
dec
push
mov
mov
sub
fcmovne
sahf
sub
pop
test
in
xor
ljmp
mov
stos
xchg
rorl
adc
jno
xor
fidivrl
mov
dec
push
cli
push
aad
xor
mov
into
rol
dec
cmc
fs
loopne
or
pop
cmpsb
inc
fists
xchg
inc
adc
push
notb
ss
add
data16
inc
imul
dec
lahf
xlat
xchg
dec
mov
pushf
les
mov
push
aaa
adc
mov
inc
cltd
test
les
mov
xchg
and
call
ret
or
adc
mov
pushf
int
imul
cmc
mov
aad
add
aas
jb
std
jb
sub
pusha
je
pop
stos
jecxz
inc
dec
movb
lea
pushf
mov
pop
mov
in
dec
shlb
les
shr
inc
lods
cmc
and
xchg
adc
das
pop
int
mov
js
insb
and
xor
rol
cmp
std
xchg
xchg
outsl
dec
pop
insb
popf
cmpsl
and
inc
xchg
icebp
lret
cld
stos
inc
mov
mov
pushf
mov
mov
dec
mov
iret
sub
lods
adc
mov
es
aad
insl
jno
sbb
cmc
roll
sbb
ja
ljmp
mov
push
popf
shll
cmc
insl
cmovb
add
mov
shlb
jno
movsl
fnsave
popw
test
dec
stc
xchg
pushf
mov
sub
xchg
cmpsl
pop
fadds
jl
lods
xchg
enter
fwait
add
lea
cmp
leave
xor
xor
jg
mov
addr16
dec
sbb
xor
dec
repnz
test
jmp
repz
repnz
add
incb
xor
xor
nop
outsb
jns
adc
clc
xchg
je
push
mov
sbb
test
mov
jp
and
mov
icebp
xor
mov
cs
inc
mov
jne
out
frstor
mov
fbstp
jle
jmp
leave
sub
mov
sub
scas
inc
ss
and
sbb
fsubrp
stos
cwtl
repz
mov
fidivrl
dec
sub
mov
dec
adc
aad
cmp
add
jno
pop
and
and
add
add
and
mov
outsb
sub
jns
xchg
mov
or
imul
scas
cmpsb
adc
push
test
cmp
repnz
sbb
sub
sti
hlt
sub
inc
arpl
and
mov
aaa
idivl
testl
fwait
and
fidivrs
call
jo
mov
and
or
or
movsb
pop
mov
enter
jge
push
enter
daa
and
sub
jno
sbb
jl
std
mov
add
push
fcmovne
in
xor
push
cld
xchg
lahf
pop
and
push
push
mov
push
push
fsubrl
scas
cmpsb
mov
inc
in
fs
xchg
out
pop
xlat
aas
mov
loope
sbb
sub
popa
lcall
xchg
ja
mov
jno
cld
add
fstps
adc
into
add
xchg
xor
xchg
mov
pop
inc
pop
cmp
popa
shlb
pop
or
pop
xchg
push
pop
pop
push
fsubrl
in
fcomip
mov
subb
mov
jb
mov
mov
mov
and
mov
jbe
ret
test
gs
loopne
out
mov
mov
jge
icebp
lods
imul
movsl
mull
push
and
stc
loope
fs
adc
cmp
mov
out
xchg
cli
test
enter
xchg
cmp
jge
or
push
mov
mov
mov
loopne
cltd
dec
pop
lds
inc
imul
fiaddl
lods
ds
sarl
inc
sbb
sub
sub
pop
mov
pop
sti
cld
sti
aaa
or
decb
loop
nop
into
out
mov
jmp
add
in
push
sbb
adc
scas
data16
pop
mov
sub
adc
sub
jmp
pushf
push
cs
out
lock
mov
mov
adc
movsl
jb
xchg
sti
dec
andw
inc
xor
or
mov
lea
pop
inc
cwtl
adc
std
mov
and
mov
adc
pop
sbb
repz
jmp
das
cmp
data16
das
xor
lahf
cwtl
jl
movnti
std
cmp
pop
dec
push
mov
cmpsl
and
push
icebp
mov
push
lret
mov
cmc
jb
std
jecxz
mov
insl
int
sarb
fldl
roll
push
jp
es
pop
add
clc
xor
out
ljmp
lods
ret
mov
je
shll
gs
pop
sub
pop
cltd
scas
lcall
loope
repnz
xor
and
pop
xor
sahf
mov
adc
loopne
mov
pop
and
stos
nop
das
insl
out
adc
cmp
add
gs
xor
out
or
xor
jge
mov
push
jp
cmp
ret
es
dec
in
dec
inc
sub
jle
sbb
and
ret
hlt
push
add
sub
out
adc
jns
fwait
push
jns
in
in
cmpsl
mov
mov
xor
dec
or
and
jp
sarb
in
mov
jbe
xor
and
sub
lahf
fists
xchg
dec
sbb
xchg
xchg
push
stos
sbbl
mov
xor
sub
pop
jne
push
xchg
or
and
jo
insb
mov
jnp
jle
lsl
int
sbb
cmp
repz
cwtl
aam
ret
addr16
pop
lret
xchg
inc
pop
ljmp
lds
popf
inc
outsb
sbb
sbb
xchg
fisubrl
push
xchg
cli
dec
mov
imul
or
push
lock
sarb
push
pushf
fwait
leave
mov
sbb
inc
lret
iret
scas
or
outsl
mov
testl
xor
mov
pop
or
ss
jbe
cmp
lahf
loop
sub
pop
and
add
push
mov
push
jbe
push
dec
jge
cmp
xchg
and
xchg
cmp
pop
call
dec
jb
lods
push
mov
fdivrl
and
xlat
sub
and
jl
sbb
stos
push
cmpsl
sub
push
push
int3
cmpsb
xor
adc
dec
mov
loopne
push
cltd
sbb
cs
loope
mov
sub
jbe
cmp
subl
push
mov
sarb
iret
sbb
jecxz
mov
cmpsb
fcmovbe
xchg
push
fstpl
out
sub
or
pop
mov
lcall
rcr
cmpsb
inc
sub
and
or
jbe
sub
inc
mov
in
mov
sar
insb
ror
jo
sbb
jge
cmpsl
testl
gs
mov
aaa
int3
sahf
jb
dec
test
fnsave
push
mov
loop
sub
stc
cwtl
dec
pop
fs
icebp
adc
xchg
push
ss
xchg
cmp
mov
xchg
out
sbb
xor
scas
cmp
inc
or
jo
cmc
repnz
loopne
cmp
adc
jp
imul
xchg
inc
data16
pop
lods
and
ja
xlat
add
push
add
jb
sbb
jb
jbe
out
cwtl
scas
loope
gs
rcll
dec
mov
dec
fnstenv
ret
les
cmp
xchg
cmpsb
rcll
scas
mov
fcmovu
into
mov
adc
mov
imull
mov
xlat
push
inc
jno
mov
mov
mov
dec
fstpl
je
xorb
jnp
dec
jo
lea
jle
int3
std
jle
xchg
push
mov
dec
test
insl
mov
mov
fsubs
ret
loope
imul
add
pop
dec
mulb
cmp
cmp
cmpsl
and
mov
icebp
js
cld
add
lret
sub
mov
insl
outsl
mov
mov
jle
mov
lret
sub
dec
ret
in
mov
cmc
fsubrs
in
add
imul
xchg
xor
mov
insl
lods
sub
out
fdivrs
xor
out
add
add
mov
xor
mov
divl
jg
push
test
rorl
xchg
pop
or
fcmovnbe
fcompl
jg
jg
push
out
jae
in
xchg
add
dec
mov
xor
in
or
add
xor
into
inc
mov
insl
xchg
in
dec
movsb
dec
popa
pop
pop
stc
nop
ja
movl
or
outsb
xchg
fwait
push
int3
ret
push
inc
push
and
addl
repz
bound
mov
or
lods
xor
scas
mov
lods
rorb
xor
les
ds
rcll
and
stos
mov
mov
fs
dec
or
iret
nop
pusha
ret
icebp
adc
jae
jle
and
aam
mov
icebp
xchg
pop
into
pusha
subl
adc
mov
movsl
rorb
and
bound
insb
sub
js
ds
jbe
shlb
aam
sub
pop
xchg
divl
ret
xchg
pop
xchg
hlt
push
jae
shr
push
mov
pop
popf
imul
cld
inc
dec
jecxz
fcmovu
push
sub
push
mov
imul
scas
insb
jo
push
aaa
or
sarb
mov
mov
movsl
dec
hlt
sarb
mov
in
add
sbb
jle
aaa
jne
push
or
inc
cmpsb
add
jmp
jne
cmp
xchg
fimuls
sub
std
fistl
cli
xchg
pop
scas
or
cld
and
sbb
cmp
icebp
movsb
outsl
adc
jo
jge
repz
dec
outsl
andb
ss
mov
cmp
jl
icebp
xchg
dec
loope
pop
push
mov
cwtl
jp
mov
icebp
lahf
fwait
dec
dec
push
mulb
in
xadd
lods
shl
mov
in
xor
hlt
pop
push
jbe
push
mov
loope
insl
mov
pusha
js
dec
fmuls
mov
cmc
shrb
fistl
sub
or
sbbl
lds
cwtl
std
in
pop
mov
pop
xchg
pop
mov
pop
or
adc
pop
mov
sbb
ja
outsb
movsl
dec
test
and
dec
jg
daa
jmp
mov
push
jp
mov
push
outsl
aas
push
int
orl
testl
rorl
push
sbb
xchg
call
pop
outsl
arpl
or
ja
fdivrp
dec
adc
fs
jbe
cmp
cmp
scas
popf
jle
add
add
ljmp
cmp
fstpt
or
xor
cmc
mov
out
sahf
pop
add
loope
lods
and
adc
sub
add
lea
test
or
cmpl
push
xlat
inc
mov
jnp
mov
in
fucom
jo
xchg
out
ja
sarl
nop
test
out
cmpsl
inc
jne
rcrb
fldcw
dec
fs
xlat
xchg
imul
je
or
call
adc
xor
ss
dec
mov
aad
pop
push
inc
mov
dec
xchg
jb
pushl
push
fdivr
je
adc
jecxz
les
rcrl
cwtl
xchg
fwait
mov
push
cmp
out
jmp
adcl
adc
shll
cmpsl
fdivr
das
sti
ret
ljmp
insl
mov
shrl
or
pop
dec
dec
test
mov
dec
xchg
pop
cld
sub
and
cwtl
fwait
repz
pop
outsb
mov
stos
sti
adc
gs
sub
bound
js
mov
clc
cmpsb
dec
mov
ljmp
stos
lods
cwtl
test
jae
mov
cmp
inc
push
sbb
or
test
stc
test
xchg
mov
imul
sbb
inc
shll
scas
rcrl
stos
outsb
mov
push
xchg
dec
enter
push
xchg
fdivl
ret
or
sbb
jae
mov
jo
orl
pusha
pop
push
les
movsb
xlat
xlat
dec
lret
push
sti
inc
pop
repnz
or
pop
mov
out
sahf
add
fimuls
out
shlb
jns
jae
in
sbb
xchg
popa
outsb
jae
lcall
or
cmp
scas
bound
sbb
mov
cmp
mov
push
orb
mov
popf
jnp
pop
xor
fists
ljmp
sub
mov
sub
aad
in
in
fisubrl
adc
add
jle
lds
in
mov
stos
iret
push
adc
out
lret
inc
jno
sahf
jae
pop
inc
push
dec
bound
nop
dec
push
lret
ficoml
ljmp
dec
dec
pop
scas
iret
mov
rcrb
sbb
leave
hlt
fs
or
push
arpl
jg
or
in
push
aaa
xor
testl
pusha
add
int3
mov
sahf
pop
imul
lds
jle
ljmp
cmp
loop
movsb
cli
in
push
push
inc
es
in
xor
mov
enter
daa
and
loop
cmp
jl
sub
dec
push
lods
xchg
test
pop
and
jmp
or
push
cmp
scas
mulb
sbb
js
push
add
xchg
xlat
dec
push
jmp
jo
into
sbb
mov
dec
mov
movsl
mov
sti
mov
add
dec
add
rcrb
addr16
leave
sbb
insb
sub
jle,pt
mov
fsts
test
fsubrl
mov
dec
adc
add
inc
mov
in
sub
or
and
repnz
jb
or
fbstp
add
lret
mov
movsl
or
sbb
mov
test
xchg
sub
inc
negl
stc
push
jge
fs
mov
ss
add
test
clc
fsqrt
sbb
and
cmp
dec
jbe
mov
push
into
pop
in
aaa
cmc
cmpb
pop
and
test
adc
and
sub
lods
repz
cmp
icebp
std
xlat
andl
mov
xchg
popf
sti
inc
pop
pop
hlt
mov
nop
pop
dec
call
ds
gs
les
mov
xchg
sub
int3
sbb
rcl
sbb
mov
adc
pushf
jns
fucomip
rol
adcl
inc
cmpsl
loopne
out
jb
add
dec
lret
stc
out
je
mul
jecxz
int3
mov
lea
xor
cwtl
inc
fstl
mov
lret
loope
repz
jno
fildl
cmp
inc
enter
add
push
das
fcmove
cmp
mov
inc
sarl
repz
in
push
push
dec
dec
pusha
mov
and
pop
mov
es
and
push
aad
lret
pop
mov
mov
or
jb
jae
lret
shlb
punpckhwd
adcb
and
mov
add
es
xchg
insl
or
cli
adc
out
dec
popa
inc
sub
mov
fstl
ljmp
xchg
sti
add
adc
push
pop
fiaddl
mov
aas
xor
xchg
adc
sbb
hlt
lcall
cmpb
sub
xchg
xchg
inc
fwait
add
mov
xor
jae
xor
insb
shlb
jae
insl
dec
jb
push
pop
shll
dec
ja
imul
std
inc
inc
icebp
out
or
sbb
dec
push
mov
testl
mov
mov
push
xchg
jns
das
mov
ret
xchg
mov
sbb
cli
rorb
daa
es
andl
jl
mov
add
mov
into
ret
pop
jne
inc
pop
pusha
stc
adcb
sub
jmp
cmc
roll
es
mov
daa
and
and
arpl
sub
lret
sahf
jge
pushf
pushf
jle
getsec
in
sub
adc
jmp
and
outsb
adcl
jae
sub
push
or
mov
aaa
push
dec
push
cmp
ljmp
sbb
pop
cmp
lods
fldcw
shlb
repnz
pop
pop
leave
push
call
lods
arpl
dec
sbb
test
in
adc
mov
hlt
or
mov
cmpsb
int3
jae
sub
jmp
push
lds
mov
sti
scas
leave
or
and
or
mov
fsubs
mov
jbe
sub
add
mov
daa
and
and
fnsave
out
jl
xor
push
push
addr16
cltd
xor
shl
lahf
es
or
inc
lret
loope
cmpsb
mov
js,pn
dec
mov
push
aad
loope
dec
scas
sub
scas
insl
cmp
aaa
mov
shl
mov
jno
adc
sbb
test
add
out
xor
ja
faddp
outsl
pop
loope
fsubrl
dec
ss
pop
or
lcall
sbb
jle
sub
push
outsb
imul
aaa
stos
sti
sbbb
stc
jg
arpl
mov
push
clc
mov
dec
js
in
roll
jne
xor
movsl
and
ret
lret
push
sarl
mov
push
sbb
xchg
call
test
mov
out
loop
jg
stc
mov
imul
jg
push
cmp
movsb
sbb
push
cli
push
aaa
mov
cmp
mov
into
aas
cwtl
addr16
inc
pop
sub
pop
inc
stc
and
mov
lods
imul
push
xor
std
scas
inc
lods
fidivl
push
xlat
ret
sub
je
mov
mov
lods
sti
repz
pop
dec
and
nop
cmp
outsb
inc
clc
jge
fstps
in
les
imul
call
or
xor
rclb
stos
ds
and
mov
mov
jp
in
xchg
aad
xchg
lea
jb
cmp
je
jns,pn
dec
sbb
push
push
pop
lea
sub
mov
sub
dec
imul
int3
inc
dec
repz
lock
adc
lret
stc
pop
mov
lret
jbe
rorl
jg
das
cmp
xlat
popa
fisttpll
iret
push
mov
std
addr16
cld
orl
mov
scas
mov
arpl
or
cmp
rolb
insl
aam
shl
ret
xchg
xor
es
cmpsb
insl
hlt
add
add
pop
out
mov
lods
outsb
cmpsl
inc
mov
add
and
shll
push
nopl
or
fs
mov
sarb
fbstp
xchg
clc
sbb
dec
pop
das
mov
stos
dec
pop
add
pushf
xor
xchg
fisubrl
and
test
aam
xor
jle
inc
mov
xor
jbe
fimull
ss
pop
mov
sub
pop
push
or
mov
fisttpll
push
sub
or
mov
xchg
pusha
out
nop
inc
cltd
out
or
nop
in
xchg
jl
mov
cs
mov
and
test
sbb
mov
sbb
mov
xor
mov
imul
or
xchg
lcall
xchg
sarb
adcl
out
push
adc
dec
mov
mov
bound
mov
inc
adc
insb
imul
lock
dec
scas
in
sbb
adc
data16
addl
inc
xchg
jae
cmp
and
popf
fisubrs
dec
inc
enter
clc
cmpsl
rcll
jp
daa
imul
xlat
scas
xchg
mov
dec
ror
ja
pop
aad
repnz
test
stos
hlt
mov
aaa
gs
xlat
jmp
or
pop
mov
mov
loope
into
test
add
adc
pop
leave
fdivp
insb
xor
xchg
sbb
jo
icebp
subb
movsl
sbb
addr16
push
movsb
adc
push
repz
jbe
mov
jge
outsl
fxch
inc
pop
out
and
push
jno
jb
jl
push
mov
push
dec
icebp
xchg
xor
pop
push
imul
outsl
pop
test
shll
pop
pop
dec
cmpsb
aas
test
insb
js
rcl
pop
adc
pusha
push
je
loope
jbe
sub
adc
cmp
es
mov
movsl
lret
dec
pop
sarb
push
mov
incb
ljmp
mov
or
sub
rcrl
mov
adc
or
pop
faddl
dec
sub
outsb
into
jo
adc
repz
push
and
sti
push
loope
push
rclb
and
icebp
int
inc
fsubrs
in
testl
cmp
mov
outsb
lcall
xor
xor
lock
or
loop
pop
inc
stc
je
push
adc
inc
ss
cmp
lahf
mov
js
addl
xor
lahf
and
push
mov
cmc
push
pop
shl
popa
test
pop
pusha
pop
push
imul
sbb
data16
shll
add
xchg
mov
push
ja
sti
mov
push
cwtl
gs
adc
loope
les
fsts
popf
les
or
jb
jg
and
movl
stc
rcrb
or
inc
pop
sbb
das
xor
inc
fstpl
divl
movsl
push
dec
mov
mov
xchg
pop
mov
cwtl
mov
cmp
sbbl
dec
in
pop
inc
inc
dec
inc
push
out
mov
fiadds
mov
push
or
lcall
std
jle
arpl
shlb
pop
jae
mov
aam
sar
xchg
or
mov
decb
mov
or
rcr
sub
arpl
mov
dec
inc
add
push
insl
fildl
es
xor
popa
je
add
cltd
adc
dec
xor
mov
add
or
outsl
lds
in
add
push
add
test
lahf
adc
pop
lcall
fidivl
or
xchg
and
add
mov
push
stc
fbstp
mov
je
xor
pop
aaa
mov
jns
sti
dec
inc
dec
pop
inc
pushf
out
ja
push
or
imul
fwait
or
nop
imul
mov
rorl
outsl
push
sub
cmp
in
mov
xchg
dec
ljmp
dec
lahf
inc
or
push
jp
push
lea
add
dec
xchg
add
pusha
das
fs
out
lock
jmp
mov
pop
out
mov
sub
xchg
imul
xchg
pop
insb
aam
push
cli
fildl
dec
jge
in
push
adc
adc
ret
lods
pop
outsl
add
scas
add
nop
repnz
xchg
mov
popf
add
repz
inc
inc
std
sbb
subl
imul
inc
scas
clc
cltd
push
push
push
xor
shr
xchg
out
cs
leave
hlt
mov
out
arpl
imul
or
push
mov
aaa
jno
add
add
icebp
sbb
cltd
rcr
cwtl
pop
ffree
sbb
popa
jo
aaa
les
jg
add
movsb
fwait
add
push
inc
jo
jbe
or
jge
mov
enter
daa
pop
xchg
bound
mov
jno
and
lret
popf
fmull
sub
outsl
and
testb
pop
roll
inc
fwait
call
push
sahf
lds
cmpsb
ret
in
into
repz
cmc
lock
pop
push
adc
pop
enter
roll
dec
cli
cmp
or
movsl
shlb
rcrb
orb
pop
leave
es
push
and
aam
jge
fs
pop
das
sub
lret
int
lcall
out
fsubrl
hlt
pop
outsb
xor
adc
push
xor
test
jb
adc
sub
push
jnp
jge
jae
jle
and
dec
testl
shrl
mov
dec
sbb
insb
sahf
mov
sbb
xor
sbb
stc
sub
imul
add
cmp
lcall
cli
mov
mov
xchg
in
cmp
mov
or
jb
into
add
roll
jg
mov
push
push
sub
sub
mov
add
lods
test
fnstcw
movsb
dec
xlat
inc
ret
stos
sub
and
mov
cwtl
pop
mov
gs
sbb
push
pop
dec
and
pop
inc
push
jb
mov
xor
cltd
jae
call
push
adc
pop
adc
lret
and
jmp
rorb
aad
inc
lcall
adc
jb
inc
cmp
xor
sbb
mov
pop
xor
lea
add
push
cmp
xor
push
test
popl
pop
ljmp
lock
push
mov
jns
xor
fstpl
shr
mov
mov
daa
std
and
imul
icebp
stos
leave
je
xlat
mov
lret
push
test
mov
shufps
aad
pop
daa
mov
stos
inc
lret
lea
aam
xchg
jo
mov
test
test
inc
insl
ret
clc
xchg
ja
xchg
jo
cmpsb
ljmp
jae
inc
sbb
mov
inc
repnz
and
xchg
push
fistpl
pop
add
mov
test
add
jmp
in
orb
sbb
jnp
rorl
mov
sub
mov
xchg
push
jge
call
movsl
mov
xor
push
xchg
mov
jl
decl
dec
inc
pop
add
stc
dec
xchg
sub
jge
lcall
push
jae
adc
dec
sub
out
dec
fs
bound
ds
arpl
adc
popf
fwait
test
cmpsb
bound
out
nop
xlat
or
pop
fisubs
xchg
add
aas
repz
nop
push
orb
ja
xchg
fldenv
pusha
lret
fisttps
fisttpl
test
notl
arpl
out
xchg
sbb
in
rcrl
push
loopne
lret
test
insb
aas
insb
out
jnp
mov
push
in
pop
bound
pop
adc
push
ret
jl
cmpsb
pop
and
imul
mov
popf
sub
xchg
push
or
push
xchg
add
lcall
test
push
pop
or
push
lcall
mov
inc
call
sahf
hlt
aaa
imul
out
fists
or
shll
xor
xor
add
loop
daa
sbb
cmp
lds
xchg
outsl
scas
cmp
cmp
push
ja
es
push
xchg
mov
jbe
stc
xchg
jge
loopne
enter
daa
push
repz
cmp
clc
push
dec
or
lret
adc
and
jle
push
adc
pop
mov
inc
js
push
cmpsb
inc
xchg
jecxz
mov
adc
mov
push
iret
mov
sub
pop
push
cmp
and
shlb
orb
xchg
iret
outsl
add
and
daa
dec
mov
sub
ds
lcall
movsb
fcompl
dec
sub
outsb
xchg
dec
popf
adc
insb
mov
jg
pop
jp
mov
orb
stos
clc
and
jo
push
jle
add
fcomp
jnp
idiv
mov
test
add
mov
ljmp
inc
jg
test
fwait
or
loop
test
stc
loop
xchg
sub
dec
adc
lea
dec
mov
mov
out
cli
jmp
ret
aad
cwtl
inc
test
dec
es
into
call
mov
pop
sahf
xor
sub
add
dec
inc
adc
push
into
add
lods
in
cmp
aad
sub
outsb
mov
hlt
cmpsl
add
add
cli
incb
jg
nop
lret
fcomps
andb
fld
dec
push
les
rcrb
sbb
mov
out
pop
mov
flds
and
pop
mov
aad
mov
push
aas
push
ja
insb
sbb
lret
xchg
jl
pop
dec
cld
aam
cmp
mov
mov
roll
sub
xchg
mov
or
inc
lock
push
push
das
push
add
mov
xor
je
cmp
pop
idiv
pop
inc
std
int3
mov
dec
xor
dec
cmpsl
sbb
xchg
mov
cld
add
enter
xchg
mov
fdiv
mov
inc
mov
sarb
test
pop
xchg
inc
aam
je
ret
aas
dec
and
pop
jp
insl
test
jae
xchg
scas
outsb
in
mov
mov
lods
scas
adc
mov
imul
pop
push
cld
adc
cmp
add
pop
cltd
das
nop
adc
pop
xor
mov
imul
or
lds
rcl
in
lahf
pop
xor
and
xchg
scas
daa
and
cli
pop
enter
inc
xor
pop
or
lcall
jg
push
dec
push
sub
mov
loop
dec
mov
repz
insl
enter
cltd
push
push
stos
mov
mov
xchg
leave
out
sub
mov
pop
in
jo
xchg
in
nop
cs
stos
add
adc
cmpsl
addr16
pop
jp
lret
pop
mov
jg
mov
jg
sub
adc
gs
fildll
add
push
xchg
and
or
sub
cld
cmp
pop
adc
and
pop
mov
jle
mov
adc
cmp
add
pop
fstpl
inc
test
push
jae
or
push
sbb
popf
push
cmp
push
inc
mov
add
sbb
out
imul
and
mov
sbb
shlb
mov
repnz
aad
leave
loop
shl
or
arpl
cltd
pop
inc
loopne
test
mov
lret
aaa
out
out
pop
or
movsl
lcall
pop
mov
lds
loope
jo
add
and
movl
push
loopne
int
sbb
jge
out
mov
xor
inc
cmp
cmp
cwtl
scas
mov
push
repz
xor
sub
sbbb
mov
push
xor
adc
cmpsb
enter
pushf
jns
js
jmp
into
push
mov
sub
cmp
cmp
ds
xlat
out
loopne
lods
rorb
lods
sbbb
sbb
jns
add
xchg
ljmp
sub
fcompl
add
sbb
out
faddl
out
push
outsb
imull
adc
xchg
cwtl
jg
or
mov
leave
ja
pusha
lock
sti
xor
andl
aas
idivl
inc
aad
cwtl
push
js
cli
in
sbb
adc
xor
push
popf
outsl
popf
inc
pop
loop
sbb
pop
fs
mov
mov
ds
nop
or
sar
sbb
and
inc
lds
or
iret
xchg
cmc
arpl
das
pop
mov
sbb
imul
in
add
push
or
sub
sbb
xlat
mov
frstor
in
pop
jle
sti
scas
stc
adc
mov
dec
loopne
cmpsb
outsb
cltd
dec
loope
icebp
inc
inc
ss
les
rol
xchg
sti
adc
out
sub
aaa
in
xchg
add
outsb
pop
imul
pushf
shl
mov
insb
lods
clc
jo,pn
sbb
add
leave
inc
imul
mov
cmp
gs
lock
popa
fsubl
cmp
in
mov
ret
mov
push
cmp
fucomi
les
inc
imul
lock
jle
das
xor
lret
jmp
and
xchg
jg
xchg
cmp
das
push
jp
sbb
sub
pop
mov
icebp
lret
xor
sub
xor
movsb
fs
gs
rclb
mov
push
cmp
rol
cs
mov
insl
nop
dec
or
or
xchg
out
movsl
xchg
ljmp
imulb
mov
fbld
cmp
mov
add
addr16
mov
test
imul
nop
jl
test
pop
mov
sbb
xchg
cmp
mov
stos
or
mov
sub
int
negb
clc
call
xorb
mov
icebp
or
push
xor
aaa
push
mov
orb
pop
js
mov
push
or
dec
jge
jle
in
imul
dec
fwait
cltd
or
push
mov
jbe
mov
adc
bound
int3
cmp
jnp
in
dec
sbb
sub
lret
and
or
adc
addr16
lds
or
mov
xchg
xor
ret
cmp
xor
dec
mov
and
jb
js
in
pusha
mov
xchg
mov
dec
mov
sub
aaa
out
sub
call
fsubl
lahf
icebp
movsl
insb
adc
jns
jle
enter
mov
adc
ss
nop
aaa
call
pop
adc
dec
inc
mov
mov
push
fstl
cwtl
popf
jp
stos
push
les
fstl
es
jns
and
jle
sub
mov
push
mov
call
inc
shl
jnp
arpl
jge
jecxz
sbb
inc
mov
aaa
scas
cmp
lcall
int3
or
mov
and
hlt
jo
add
and
and
loopne
cmp
sub
add
jge
loop
enter
daa
sbb
dec
cmp
cmpsb
lock
push
lds
pusha
dec
ljmp
xor
movl
test
fistps
inc
xchg
fiaddl
adcl
pop
push
repz
cli
icebp
loope
jp
sub
repnz
cmp
cmp
ds
and
shrb
lods
jae
enter
jb
mov
add
and
inc
mov
lods
jecxz
pop
movsb
jo
sub
es
cmp
mov
pop
sub
adc
pop
xor
mov
mov
repnz
xorb
xor
mov
test
test
mov
idivl
or
dec
pop
shrl
jl
in
rcrb
mov
pushf
sahf
mov
xor
xchg
bound
bound
jl
ljmp
mov
mov
into
xor
mov
cltd
out
idivl
xor
jmp
cmp
cmp
into
scas
aas
in
cmc
sub
loopne
push
rcrl
adc
fisubrl
jo
adc
in
add
ficoms
lods
pop
and
cmp
jno
std
test
pop
cmp
mov
lret
sti
pop
test
push
or
nop
sbbl
sub
sbb
xchg
inc
les
adc
xchg
mov
add
mov
test
sbbl
pop
push
test
adc
jae
jnp
nop
jmp
rolb
shl
xor
dec
rorl
inc
dec
cs
aas
test
in
adc
dec
xchg
ss
jae
cmp
xchg
nop
cld
fs
lea
pop
add
xchg
pusha
jbe
mov
lods
dec
add
push
pop
shll
lock
fildll
adc
ret
inc
mov
sahf
jmp
and
out
out
rcl
adcl
jno
dec
sub
xor
xor
fs
pop
push
jecxz
mov
stc
mov
cld
lret
leave
mov
test
and
and
add
aam
sub
or
or
push
adc
inc
sub
sub
push
adc
ret
out
test
ljmp
and
sbb
psubb
mov
cltd
popf
sub
test
rolb
shll
fnsave
mov
je
sub
rcll
adc
stos
test
or
cmp
pop
cmp
outsl
mov
mov
xor
sub
xchg
xchg
mov
jg
ja
mov
dec
jo
roll
popf
push
or
or
addr16
pop
mov
xor
jmp
mov
jns
adc
in
jp
xchg
mov
mov
xchg
jmp
or
lret
jnp
sub
std
stos
mov
lret
std
mov
pop
loopne
dec
and
into
jne
negb
fwait
push
jae
imul
jmp
mov
or
int
push
sub
jb
out
popf
inc
xchg
stos
push
or
and
lods
stc
jnp
mov
jle
leave
outsb
in
xchg
lret
hlt
js
out
cmc
out
ret
cmp
dec
mov
push
jae
ficoml
mov
or
push
inc
push
dec
fidivl
mov
sbb
movsl
imul
cld
scas
test
adcl
test
push
mov
mov
cmp
rclb
fdiv
sbb
in
inc
out
sub
add
aaa
insl
add
pusha
add
mov
pop
mov
xlat
fisubs
push
lds
sbb
scas
add
push
cmp
sahf
dec
movsb
sbb
jbe
test
mov
jne
sbb
push
cmp
mov
sbb
in
out
loop
dec
pop
jle
push
mov
xchg
and
xor
mov
test
lret
inc
and
pop
mov
js
xor
push
sbb
dec
sub
jnp
cmp
jge
ds
pusha
hlt
movsl
out
push
mov
add
data16
cmp
mov
adc
jo
fcomps
add
pop
add
inc
push
mov
mov
sub
divl
ret
mov
cmpb
adc
dec
mov
mov
add
and
fnstsw
int
pop
mov
adc
jns
cmp
movsl
lret
dec
rol
stos
mov
pop
push
sbb
sti
fstpl
aaa
outsl
pop
and
shld
fs
adc
fwait
mov
xchg
out
lds
xor
xor
cmp
jne
or
mov
mov
pop
sti
lea
imul
lret
cli
jae
minps
lods
inc
sbb
cmp
and
sub
dec
movsb
mov
xor
sbb
test
nop
pop
mov
jp
push
push
fldenv
adc
ret
aaa
add
arpl
sbb
sub
ja
pop
rorl
or
cwtl
mov
aad
jb
inc
fs
jmp
gs
or
insb
je
fs
jecxz
je
addr16
xchg
lea
fstpl
dec
pop
data16
addr16
dec
jmp
push
fisttpl
negl
fidivs
lock
das
repz
pop
mov
push
sti
push
and
pushf
jne
and
xchg
push
std
sarl
cmpsl
sbb
jge
pop
cmp
ja
adc
popa
mov
mov
mov
arpl
sub
cmp
scas
or
in
ret
pop
es
jno
insl
pop
inc
dec
clc
jle
fists
or
dec
popa
out
mov
sub
mov
jb
outsb
push
xrelease
add
jo
test
pop
xor
or
fisubs
out
xchg
add
fiadds
popf
pop
xor
mov
out
out
popa
xor
add
inc
decl
repnz
pop
pop
mov
xor
insl
and
mov
mov
inc
pop
push
ja
in
dec
arpl
inc
adc
jg
testl
push
add
mov
sub
pop
xchg
jns
dec
in
cld
xchg
loop
mov
mov
add
mov
jp
movsb
stc
mov
daa
mov
mov
shll
aad
cmp
cmc
out
mov
sub
pusha
fwait
lock
sub
xorl
mov
mov
adc
subl
cmp
insb
jmp
jnp
pusha
xor
sti
mov
mov
lret
iret
dec
mov
test
cmp
inc
leave
test
jae
cmp
arpl
popf
enter
jmp
mov
ja
fisubrl
dec
xlat
xchg
pusha
std
mov
imul
popf
scas
out
std
push
mov
pop
shlb
mov
mov
vfrczps
arpl
pusha
cltd
inc
jmp
jge
sbb
push
sbb
cmp
add
jmp
and
mov
test
mov
ret
add
pop
xor
in
push
jb
push
int
adc
inc
and
jae
enter
daa
sbb
adc
jl
mov
enter
xor
daa
lahf
and
mov
lahf
mov
sbb
popa
sbb
mov
xchg
pop
inc
mov
arpl
push
jo
js
xor
pop
mov
push
cmc
sub
sub
fldenv
cmp
jge
fs
popa
movsl
cmc
and
shl
xor
xchg
into
sbb
lcall
lahf
xor
pop
bnd
sub
sub
lcall
movsb
faddl
sbb
push
outsb
and
adc
fsubrs
mov
mov
lea
and
cmp
mov
mov
jbe
sti
fmul
cmpsb
idiv
outsb
rol
pop
xor
xor
sahf
rorb
iret
xor
loopne
outsl
cmp
jne
mov
mov
cli
ss
jns
cmp
adcl
into
xor
mov
inc
or
stos
into
je
xchg
cmc
mov
int3
es
sbb
push
adc
and
outsb
adc
ret
out
clc
pop
in
xchg
mov
dec
cmp
sti
not
jnp
xor
inc
xsavec
mov
push
add
or
mov
add
nop
aaa
test
dec
lcall
popf
outsl
lahf
into
out
xchg
repz
xchg
inc
fstp
sbb
test
push
movl
dec
in
roll
jmp
xor
cs
pop
mov
fnstenv
inc
jg
cmp
out
mov
dec
adcl
jecxz
pushf
xchg
push
mov
cwtl
sbb
mov
lock
jns
ljmp
test
fstpt
sbbl
pop
and
das
sarb
mov
or
out
and
popf
rcl
es
add
mov
push
or
sbb
add
and
popa
icebp
fidivs
pop
lret
jg
push
mov
dec
dec
mov
ret
ror
lods
and
aam
aaa
mov
jnp
jg
adc
clc
mov
arpl
popa
inc
pop
lods
pop
aaa
call
mov
jns
loop
into
fildll
movzbl
mov
pop
xlat
test
xor
xchg
add
ret
xchg
mov
rcl
inc
xchg
aas
pop
fdivl
pop
out
push
adc
sub
ljmp
push
sbb
xor
pop
jle
push
pop
push
xchg
mov
ja
cltd
dec
dec
push
lea
xor
mov
mov
loopne
mov
add
in
xor
jns
and
sahf
xchg
sub
dec
mov
push
jmp
xor
icebp
addr16
lods
jp
decl
xor
xchg
mov
cmp
dec
out
leave
jne
cmpsl
mov
out
fildll
sub
push
sbb
xchg
dec
mov
cmpl
in
out
je
sub
call
mov
and
xchg
popf
insb
push
push
pushf
jnp
cli
insl
jle
test
in
test
adc
jle
ret
test
inc
aam
push
jae
daa
in
es
aad
out
imul
inc
sbb
fcmovu
pop
pop
xchg
mov
mov
imul
push
push
std
lahf
lcall
imul
repnz
sbb
mov
mov
arpl
sub
in
add
stos
sbb
push
aaa
jmp
add
scas
inc
or
adc
cmpsl
fisubrs
aam
inc
pop
scas
jo
orl
and
lods
cmp
push
sbb
jne
es
jge
adc
enter
daa
sbb
jno
cmp
jl
addr16
jge
jg
xor
cwtl
outsl
jb
rcll
icebp
push
xor
xor
pusha
out
lock
inc
push
dec
cmpsb
aam
mov
cmp
or
lret
jbe
push
addb
xchg
or
and
xchg
sarb
lock
subb
push
add
addr16
xor
xor
sbb
push
sub
xor
push
insl
xor
sub
adc
outsb
subl
adc
repz
mov
mov
xchg
mov
xor
push
stc
test
xchg
jne
mov
xchg
pop
shl
dec
mov
ds
sahf
jae
cmpsb
test
les
aas
movsb
xlat
outsl
sbb
cmpsl
loop
cld
nop
stc
jne
shlb
mov
push
stos
jmp
xchg
lret
dec
cmp
jl
jp
clc
in
repnz
call
xor
cmp
arpl
or
push
into
push
inc
inc
cmc
jg
push
pop
cmp
imul
mov
xchg
in
adc
lods
adc
adc
in
clc
sub
cs
or
sti
imul
das
mov
cltd
nop
adc
xor
nop
cs
aam
pop
fyl2xp1
xor
js
xchg
pop
pop
es
and
movl
lods
adcb
add
jl
cs
xchg
shrl
cld
add
loope
inc
lcall
jb
inc
mov
cli
int3
je
shl
rorb
insl
movsb
loop
xlat
iret
sbb
lret
mov
cmpl
pop
fldt
sub
mov
das
mov
ret
push
and
and
adc
fisubrs
std
maskmovq
imull
sbb
stos
icebp
mov
cld
fxch
dec
lret
out
fistpl
mov
and
in
negl
loope
rcrb
dec
sbb
inc
mov
addr16
pop
pop
insl
sub
and
xchg
ljmp
popa
adc
push
dec
mov
sbb
and
test
xchg
jl
mov
js
inc
in
test
mov
sub
inc
xchg
cwtl
aam
pop
xchg
dec
stos
les
out
mov
add
adc
add
jno
xor
repz
or
and
dec
mov
mov
aas
dec
adc
lock
fs
ja
sarl
dec
dec
mov
or
xor
push
inc
jl
add
insb
int
out
mov
cli
bound
jns
push
cmpsb
js
movsl
std
ja
ja
add
fldz
cmpsl
or
imul
mov
dec
cmp
test
mov
call
leave
pusha
insb
out
jl
enter
xor
shr
cmp
fiaddl
push
add
mov
pop
jno
stos
outsl
out
and
adc
jnp
push
xchg
jle
test
adc
dec
cmp
sbb
aam
lock
inc
fistpll
push
push
jmp
lock
push
rolb
and
es
cmp
imul
adc
shlb
xchg
repnz
mov
hlt
stc
mov
dec
cmp
out
pop
inc
or
xor
pop
aaa
stos
subl
inc
lret
mov
inc
pop
inc
and
fimuls
clc
loop
jecxz
cmpsl
scas
mov
pop
je
pop
mov
movsb
push
aam
jbe
and
adc
sbb
xchg
daa
sbb
jne
mov
out
dec
cmpsb
rorl
bound
xor
xor
jecxz
lock
push
pop
jle
test
sub
outsl
cmpsb
push
cmp
int3
js
hlt
mov
or
xchg
shl
and
xchg
cmp
ffree
ds
sar
movsl
add
push
popl
cmpb
push
add
jno
xor
sbb
mov
adc
jo
cmpb
push
les
jp
mov
lret
mov
mov
mov
jg
mov
mov
mov
cld
mov
dec
jl
insb
scas
push
int
addl
jns
jne
ret
rorl
enter
push
sahf
push
inc
int
int3
xchg
xor
stc
aad
enter
sub
fisubl
clc
adc
xchg
xchg
cmp
ja
mov
testl
xor
dec
cmp
sbb
loop
into
cmp
shl
flds
adc
pop
imul
in
add
in
cbtw
roll
push
and
xlat
stc
push
jecxz
sub
in
jbe
push
sti
sbb
paddd
mov
nop
in
xchg
mov
cs
or
scas
in
xor
lret
jae
lret
sbb
sahf
ja
jg
rcrb
lret
sbb
mov
dec
xchg
pop
mov
das
aad
scas
adc
add
jb
push
orl
in
xchg
jecxz
mov
sub
cwtl
nop
ljmp
pop
xor
adcl
jnp
fdivs
pop
pop
inc
stos
inc
push
mov
das
nop
aad
mov
jp
fs
pushf
rclw
fstpt
testb
jmp
cmpsl
pop
fistpl
icebp
mov
in
pop
cwtl
xor
push
xor
lock
add
dec
shlb
sub
sub
cltd
mov
out
adc
clc
das
and
ljmp
and
scas
or
and
test
jecxz
je
dec
add
out
nop
cltd
jns
sub
mov
mov
pop
fstl
dec
test
sbb
sbb
dec
pop
shr
aaa
sbb
inc
stos
mov
fsubr
pop
pop
or
pushf
inc
jmp
popf
xor
push
or
arpl
xor
pop
xchg
sbb
pop
mov
rorb
cmp
xlat
cmp
pop
cmp
lret
push
call
lds
mov
scas
pop
out
addr16
jns
adc
cmp
or
in
xor
in
mov
loopne
mov
cmc
jno
addr16
gs
shlb
mov
sbb
iret
dec
lods
and
pop
or
mov
xchg
add
add
xchg
jecxz
add
pop
xchg
sbb
fcos
insl
sub
pop
and
subb
mov
insb
sub
es
jns
jle
push
fs
add
adc
in
iret
imul
ret
aaa
pop
daa
fisttpl
inc
ljmp
push
lods
js
popf
cmp
xchg
lcall
lahf
push
xchg
gs
imul
lods
adc
cmp
ret
mov
xchg
mov
arpl
outsb
inc
repnz
xor
out
loop
aaa
imul
add
jo
int3
mov
sti
test
lds
mov
scas
jg
andl
std
mov
push
mov
inc
fidivrs
sti
cli
enter
daa
pop
or
cmp
dec
shll
mov
scas
dec
adc
comiss
into
sbb
lahf
setl
fimull
test
negb
mov
in
push
imul
int
out
dec
or
pushf
loope
sub
addr16
fidivrl
int
andb
nop
call
adc
je
adc
iret
jne
dec
mov
jl
fstpl
cmp
sub
lods
or
dec
or
sbb
dec
faddl
int
sub
popa
dec
adc
sub
xor
cmp
mov
ljmp
divl
cmc
push
xchg
pop
cld
int
stos
mov
idivl
fcoml
mov
rol
and
fwait
sbb
enter
lds
cmc
data16
xlat
sub
loop
and
jecxz
test
or
ss
dec
bound
mulb
jmp
cmp
mov
push
into
sbb
clc
cmpsb
loopne
jge
pop
ja
inc
adc
and
imul
add
mov
cmp
xlat
cmp
loope
pushf
xchg
add
loope
add
leave
xchg
pop
jne
pop
gs
nop
enter
sbb
sahf
inc
mov
cld
flds
adc
out
or
lahf
arpl
sbb
sbb
sbb
popf
lahf
adc
adc
dec
pushf
rclb
in
jmp
mov
add
scas
filds
aas
ret
in
jb
cmp
mov
je
insl
fucom
fisubrs
lea
add
mov
shlb
test
xchg
dec
xchg
addr16
pop
add
inc
xchg
cmp
jmp
pop
das
outsl
push
add
loopne
cwtl
mov
cmp
inc
test
std
pop
les
cmpsl
push
lcall
arpl
dec
cld
das
jne
lret
int3
sbb
mov
out
mov
clc
or
pop
popa
mov
sub
lods
jg
fstpt
inc
es
adc
insl
cli
out
clc
push
mov
ljmp
sti
lods
pushf
add
or
mov
cmpsb
push
pop
pop
xchg
psrlq
add
outsl
les
sarb
aad
fisubs
fnstsw
test
xchg
mov
push
roll
cs
frstor
stc
stos
mov
out
xchg
mov
scas
mov
xor
scas
mov
mov
xchg
pushf
fwait
dec
fbstp
pop
ficompl
cwtl
int3
hlt
dec
das
popf
aaa
inc
outsb
mov
aam
mov
pushw
mov
jno
and
bound
xchg
cmpsl
in
dec
into
xchg
adc
push
es
lock
into
jp
dec
sub
fidivl
mov
push
xor
lahf
mov
mov
mov
push
xchg
scas
repz
sub
xchg
pop
jae
sub
cltd
push
mov
stos
push
test
and
jp
insb
xchg
cmp
pop
jae
xchg
imul
movsb
push
iret
lret
ret
add
pop
mov
jae
mov
push
outsl
sbb
popf
fs
push
mov
int3
xor
sub
cmp
cmp
inc
push
rcrb
adc
xchg
mov
and
cmp
and
cmc
scas
nop
or
test
shrl
je
lods
int3
mov
bound
cltd
jbe
push
lods
sbb
fcoms
jo
xor
scas
pop
pusha
imul
out
jl
jle
es
or
jbe
rcl
jge
inc
or
push
fs
daa
push
mov
cmp
jno
scas
insb
jl
arpl
test
orl
mov
jl
imul
aad
lods
dec
les
shl
inc
lock
sub
in
fisttpl
or
test
pop
mov
sub
xchg
pop
cmp
loop
movsl
adc
and
in
daa
sbb
add
adc
aas
xchg
ret
pop
mov
push
sub
pop
pop
lcall
in
mov
sub
ljmp
inc
or
jg
inc
mov
mov
jne
and
mov
cmp
mov
xor
pop
mov
test
cwtl
sarl
or
lret
fisttps
pop
aam
test
xchg
mov
push
rep
mov
jl
out
add
stc
lcall
adc
jp
cmp
insl
mov
out
xchg
cli
orl
push
or
push
into
add
add
aam
mov
outsl
ss
pop
xchg
and
ret
imul
jae
add
jnp
sahf
mov
data16
mul
sub
sub
mov
dec
mov
js
jbe
cwtl
cltd
dec
gs
je
mov
aam
inc
leave
lret
jns
repnz
cli
adc
outsb
aas
in
xchg
push
cwtl
aam
clc
and
call
jge
mov
push
daa
sahf
adc
xchg
dec
les
and
je
inc
jmp
nop
aas
mov
add
loop
pop
cmp
xor
in
jbe
stc
lea
repz
push
stos
xor
inc
cmpl
movsb
mov
pop
movsl
dec
mov
dec
cmp
das
dec
cmp
mov
call
jmp
shll
or
std
add
mov
cmpsl
adc
enter
mull
pop
pop
clc
lret
cmp
mov
mov
cmpsb
cli
inc
mov
ds
mov
sub
sarl
cmp
ret
mov
adc
pop
push
inc
insl
loope
lock
movsl
and
fs
mov
mov
cmp
jg
cmp
mov
add
and
cltd
out
and
mov
push
sub
mov
sbb
mov
add
mov
stos
xchg
std
loope
xchg
out
mov
ljmp
dec
jae
stc
xlat
mov
xor
mov
mov
xchg
mov
dec
inc
xor
pop
xchg
stos
aam
push
nop
xchg
dec
and
rorb
shlb
sarb
mov
lods
ja
and
jmp
xor
inc
jne
xchg
fs
addr16
cmp
adc
jmp
jne
jne
aam
fwait
je
mov
push
idivb
movsb
add
jne
mov
fcomp
and
mov
jmp
jns
dec
cmpl
out
pop
push
sub
aam
pop
push
pop
inc
subl
and
pop
jnp
or
jle
aam
in
adc
iret
sub
mov
push
xor
xchg
jns
inc
add
push
jae
xchg
popf
mov
inc
push
cmp
scas
cmp
rol
imul
scas
mov
jae
clc
sub
xor
adc
sub
dec
xchg
hlt
fimull
pop
inc
clc
and
dec
sbb
aaa
out
or
fadds
or
pop
int3
ja
or
sti
pop
fdivp
and
lds
test
inc
mov
cmp
test
movsb
or
push
pop
sti
loop
xor
push
jge
je
enter
daa
adc
dec
enter
pop
jg
repz
sbb
or
imul
dec
ss
push
cmpb
xchg
add
push
mov
popf
cmpsb
loopne
movsb
in
aam
inc
js
jmp
pop
mov
push
mov
loope
insb
inc
sub
sbb
cmp
and
movsl
sbb
cmpsl
popa
rolb
sbb
add
xchg
ljmp
pop
mov
popf
sub
call
pushf
lcall
nop
fcompl
arpl
mov
outsb
punpckhbw
adc
pop
push
jmp
jns
call
mov
fs
mov
mov
push
cltd
out
int
test
mov
mov
nop
lret
in
push
jecxz
mov
les
cli
repnz
popa
mov
xor
xchg
aam
sbbl
jae
or
repz
inc
cmp
push
insl
insl
cli
mov
sub
cld
jecxz
cmp
xor
or
jmp
outsl
cmc
fwait
sub
pop
pop
mov
mov
xchg
jb
imul
mov
add
xor
and
lods
scas
xchg
movsl
cmp
imul
lods
fsubrl
xorb
lret
inc
pop
in
mov
imul
mov
mov
nop
jle
orb
aaa
inc
fsubl
fnstenv
outsb
mov
xchg
adc
dec
sbb
mov
cld
orl
pushf
sub
or
mov
jbe
push
mov
aas
add
lea
stos
lods
dec
clc
js
subb
cld
pusha
cmp
jns
fimull
shl
mov
mov
mov
xor
dec
dec
insl
mov
push
dec
cmp
inc
mov
adc
sub
xor
and
xchg
xlat
sar
addr16
push
inc
std
stos
and
dec
pop
sbb
cmpsl
adc
dec
mov
adc
xchg
cld
test
lret
stos
gs
mov
and
mov
pusha
add
pop
decl
sub
or
addr16
insl
enter
loopne
pop
xchg
out
push
ljmp
shrb
sbb
mov
pushf
and
adc
xchg
jecxz
add
push
cmp
test
dec
jmp
push
fs
cmp
enter
dec
jae
xchg
jp
adc
jns
hlt
cmp
pop
xor
outsl
out
inc
loop
xchg
cs
add
ret
enter
dec
mov
xor
icebp
mulb
lcall
pop
push
mov
ja
fsubs
pushf
sub
or
push
cmc
fwait
adc
push
sarl
add
fmul
sbb
add
cmp
cwtl
int3
jns
adc
in
out
jmp
mov
cltd
clc
mov
out
out
addr16
addr16
push
xchg
mov
inc
call
mov
js
push
mov
pusha
fcom
xchg
filds
xchg
jle
mov
xchg
inc
outsl
lret
mov
sub
punpckhwd
push
push
cmp
stos
cmp
and
out
insl
in
outsb
jnp
jbe
jle
or
adc
movd
mov
mov
xor
and
push
cmc
mov
jb
int
popa
inc
mov
inc
xchg
xchg
push
mov
imul
cmp
or
nop
xchg
rclb
movswl
lods
loop
adcb
adc
mov
inc
sti
maxps
pop
mov
nop
or
enter
cmp
int3
bound
push
ficomps
inc
xchg
sub
rclb
cmp
mov
cmp
jbe
push
jg
jg
push
enter
daa
adc
imul
std
add
jl
xor
push
out
jmp
xor
lahf
xor
lahf
insb
or
push
push
in
test
push
xchg
fiadds
lahf
push
cmpsb
arpl
in
mov
mov
push
lds
loope
inc
push
sub
insl
clc
cmp
ret
pop
movsl
pop
or
das
pop
xchg
dec
orb
sbb
add
loope
xor
jno
pop
fdivr
cmp
mov
pop
jl
mov
push
and
mov
sub
loope
jb
push
adc
jp
xchg
ljmp
adc
mov
out
xchg
test
mov
pushf
aam
int
jle
fsubrs
in
ror
mov
jmp
mov
lret
mov
cmp
outsl
je
sbb
adc
repz
or
and
fldt
ss
fs
arpl
and
xlat
inc
cli
out
test
shrl
ret
xor
xor
push
cmc
ficoms
loopne
jecxz
pop
aam
cmp
push
test
adc
inc
insl
add
scas
data16
outsl
shrb
or
sub
insl
addr16
cmp
sti
mov
fdivp
into
gs
add
nop
pop
aaa
int3
dec
cmp
mov
out
call
repz
aas
xchg
lods
or
mov
jmp
mov
and
pushf
rcll
shr
xchg
jmp
or
or
inc
and
inc
aas
mov
test
dec
dec
adc
je
out
jecxz
and
jl
mov
cwtl
jl
cmpsb
mov
xor
mov
dec
pop
subl
rcr
xchg
incb
pop
jmp
jo
sub
fisubrs
or
and
push
pop
mov
mov
rorl
insl
notb
cmpsb
xchg
dec
add
int
adc
and
call
cmpsl
adc
mov
mov
mov
sub
pop
jl
or
mov
or
cmp
pop
ret
aad
xor
and
mov
jge
and
icebp
pusha
popa
mov
lods
fldl
mov
shl
and
lock
inc
pop
add
loop
push
ds
test
dec
jne
mov
xor
test
mov
aad
ret
mov
rorl
pop
pop
fiadds
out
out
mov
xor
add
imul
lahf
je
or
das
xor
subb
ret
sub
dec
adc
stos
pop
or
adc
add
inc
xor
addr16
lods
stos
fwait
inc
jg
push
je
jp
lods
aas
add
xor
dec
out
jecxz
mov
pop
jl
jns
lds
pop
mov
sbb
sbb
or
loope
in
addr16
jns
add
in
ds
aad
mov
jne
sbb
pusha
jae
sbb
arpl
gs
push
jne
jmp
lds
in
fs
dec
push
cmpsb
push
xchg
mov
stos
scas
cmove
outsb
movsb
lret
insb
fsubs
lock
test
jle
and
adc
arpl
ret
test
inc
push
xor
jae
dec
push
push
mov
ljmp
cmp
add
xchg
shrl
sub
dec
xor
pushf
xchg
call
pop
pop
shrb
mov
outsl
inc
push
repnz
leave
mov
jo
lds
jp
inc
insl
sub
sbb
fld1
aaa
gs
adc
and
jae
int3
dec
cld
negb
or
fidivrs
dec
lds
aam
stos
fwait
lds
arpl
lret
pushf
push
movsb
pop
pop
dec
push
notb
and
aas
jge
jle
enter
daa
adc
idivl
out
pop
fidivs
cmp
mov
push
shll
xor
cmp
lahf
mov
adcb
push
test
and
adc
mov
out
repnz
mov
jae
pop
inc
push
push
mov
sub
xchg
scas
cmp
and
ds
mov
jnp
fnstsw
pop
icebp
ljmp
pop
sbb
xor
or
mov
pop
sti
es
lcall
loop
mov
or
outsb
aad
adc
adcb
cld
mov
mov
insl
mov
stos
scas
and
dec
int
cmp
call
sti
addr16
sarl
mov
dec
fstpl
pop
gs
inc
dec
movl
push
adc
loop
loope
stc
mov
and
shlb
sub
mov
pop
pop
mov
cli
sbb
xor
push
movsl
or
adc
cmc
sub
nop
loopne
fmul
pop
repz
adc
nop
fwait
imul
data16
stc
push
lods
jl
xchg
cmp
sub
xor
imul
stc
stos
cmp
sti
test
incb
xadd
mov
nop
xor
xor
imul
les
and
fldt
xchg
cltd
out
sbb
add
cli
mov
adc
xchg
pushf
jle
jmp
out
cs
push
xor
lret
inc
cmp
or
aas
xor
std
xchg
imul
les
data16
and
orl
pop
or
inc
arpl
mov
syscall
addl
leave
fcmovnb
dec
or
mov
sti
inc
mov
jp
push
jle
das
jmp
dec
mov
or
fsubs
rcrl
and
dec
std
xchg
fsubs
xchg
push
icebp
mov
mov
lret
mov
call
mov
push
loop
xchg
pop
fwait
lods
pop
rorb
sbb
aam
scas
and
fs
xlat
insl
xchg
lret
push
jb
xchg
fs
ljmp
mov
mov
ljmp
push
lret
outsl
in
cmovg
bound
movsl
lods
mov
scas
sahf
push
ljmp
test
xchg
jmp
sbb
xchg
shll
dec
ret
stos
pop
insb
dec
out
push
lods
loope
mov
daa
popa
incl
dec
dec
xor
nop
adc
ret
xor
push
push
xchg
mov
sysret
ja
repz
dec
sti
xor
inc
lret
or
fisubl
outsl
jl
push
pop
mov
xor
ret
xchg
popf
jns
push
aad
out
dec
xchg
push
mov
and
ret
pop
inc
or
inc
sbb
jp
mov
xchg
mov
jne
arpl
filds
mov
jb
fidivrl
in
subl
mov
push
sbb
mov
aam
dec
stos
and
inc
insb
inc
sub
fstpl
cmp
dec
adc
adc
pop
xor
mov
pop
cmp
mov
sbb
push
jnp
dec
popf
add
mov
inc
mov
mov
xchg
sbb
mov
aam
movsb
imul
push
scas
push
jmp
rorb
mov
es
leave
decl
test
arpl
inc
sub
xchg
mov
aaa
and
loopne
sbb
add
int
int3
cmp
sub
filds
fnsave
out
scas
ficoml
and
test
aas
movsb
stos
decb
inc
xchg
jge
pop
or
das
loopne
adc
cmc
jno
ljmp
inc
hlt
cli
push
mov
test
and
movsb
xor
stc
push
mov
jbe
pusha
push
in
mov
cmpsb
imul
js
adc
test
fiadds
stos
pop
mov
xchg
in
cmp
dec
and
jl
and
sarb
push
cwtl
xorb
mov
sub
push
add
xchg
mov
dec
sbb
cmp
adcb
pop
jp
dec
lcall
imul
push
mov
cmp
dec
xorb
lds
jge
adc
jl
push
mov
aad
fsubs
mov
je
fcmovb
adc
popa
fwait
sbb
pop
mov
xor
xor
cmp
outsl
lods
icebp
jb
jns
jmp
insb
mov
jns
pop
adc
out
aaa
cmp
dec
aad
xor
mov
lock
mov
in
cmc
lock
fneni(8087
test
adc
adc
in
cmpsb
imul
out
jo
jge
stos
mulb
lods
arpl
push
cmp
call
or
clc
pop
loope
xor
push
and
mov
nop
sysret
addr16
testb
adc
jns
les
ja
rep
push
jmp
pop
xchg
adc
cmp
jns
in
pop
sbb
das
adc
in
sub
jmp
mov
push
adc
pop
aas
fimuls
push
fdivrs
je
fistl
sub
movb
mov
add
push
mov
mov
sbbl
pop
jl
xor
fadds
test
das
lret
mov
les
lock
shr
pop
jle
sbb
js
mov
scas
mov
jp
cld
push
cwtl
mov
mov
jmp
nopl
dec
out
sub
rolb
sarb
ret
repz
es
arpl
mov
ficoml
pop
loopne
popa
mov
outsl
lods
mov
xor
shlb
or
leave
xor
data16
fxsave
xor
cmp
out
cltd
ret
stos
std
test
push
aas
mov
lods
pop
push
lods
push
in
fnstsw
std
xchg
loopne
sar
jg
pop
xor
arpl
imul
fadds
divl
jmp
loope
or
cmp
xchg
mov
addb
sbb
pop
subl
add
popa
popa
mov
fwait
sahf
cmp
out
add
jmp
mov
mov
push
sbb
in
push
int
mov
data16
mov
xlat
lds
addr16
aam
sub
mov
mov
mov
outsb
dec
incb
pop
pusha
test
sub
jmp
movsl
sahf
out
xorl
sbb
shl
push
adc
push
stos
xchg
fdivs
insb
scas
add
mov
inc
or
adc
je
movsl
inc
das
ret
mov
adc
jae,pn
es
push
ds
mov
inc
cmp
fidivl
mov
sbb
adc
imul
das
scas
bound
push
xor
push
mov
bnd
push
hlt
push
int
arpl
xchg
sbb
pop
aaa
jecxz
call
add
and
pop
mov
lds
adc
inc
test
mov
ret
and
xor
cmp
jbe
jbe
jge
pop
loop
cmc
adc
daa
adc
aas
cmp
jno
xchg
out
jl
cwtl
jecxz
scas
sub
push
xchg
pop
xor
jo
inc
lahf
leave
lcall
insl
dec
out
push
mov
sub
jo
or
dec
cld
pop
ret
xor
push
sub
loope
mov
pop
cmp
cmp
movsl
xor
adc
fnstsw
mov
pop
insb
iret
add
out
xor
test
push
mov
jns
std
dec
enter
fwait
lcall
fmull
mov
sub
adc
adc
lret
push
sahf
jg
jl
mov
pop
ja
hlt
std
sbb
mov
aaa
movl
adc
xor
pop
lret
and
mov
dec
sbb
arpl
pop
jo
adc
ss
sub
adc
adc
je
ss
lods
pop
cmp
push
pop
mov
cli
subb
xor
jp
cmp
or
out
xchg
into
outsl
negb
cmc
mov
cmp
jbe
test
sbb
adc
jge
imul
lock
ljmp
insb
lods
dec
mov
cmp
pusha
xchg
xlat
mov
or
dec
fwait
or
arpl
sti
jecxz
and
inc
and
gs
inc
push
nop
ljmp
inc
sub
sbb
mov
xor
jmp
jns
cmp
mov
sbb
clc
xorl
pop
adc
negl
and
aad
cmp
inc
jb
fstpt
jge
jg
mov
ss
je
push
or
cmp
in
movb
into
cwtl
lods
cmpsb
pushf
mov
dec
cmp
xorl
inc
sbb
das
inc
pop
aam
ss
mov
cmp
das
test
ret
jnp
or
sarl
xor
negb
nop
std
inc
mov
cmpsl
adc
add
in
dec
jmp
insl
xor
jg
data16
dec
mov
fildll
mov
fldcw
shlb
sub
aam
mov
pushf
es
push
insl
insl
fs
ja
int3
fidivs
je
ljmp
cmp
mov
mov
mov
jno
prefetch
add
mov
cli
push
jno
adc
fnsave
jo
push
frstor
test
add
sbb
cwtl
and
push
fists
cmp
jbe
int3
inc
push
xchg
dec
insl
arpl
pop
xor
test
add
cmpsb
incb
pop
cmp
sbb
pop
repz
loope
movsl
inc
clc
mov
movsl
fwait
int
push
pop
shll
inc
or
out
addb
bound
pop
xor
mov
jno
out
xor
adc
rcr
fldenv
mov
xchg
fmull
dec
loope
out
jne
sbb
pusha
inc
repz
rorb
fld
jmp
jo
jg
inc
vcvtpd2dqx
test
mov
test
push
push
inc
pushf
stos
pop
lret
ja
mov
mov
jnp
aad
jle
mov
adc
or
sub
ret
mov
test
xchg
inc
aaa
aaa
or
ja
push
add
popf
dec
xor
mov
sbb
xchg
mov
xchg
imul
mov
jl
in
jg
jns
dec
pop
arpl
int3
pop
or
push
arpl
push
outsl
daa
arpl
cmp
inc
pop
inc
jne
ret
movsl
jge
or
sbb
mov
add
out
int3
push
popa
mov
fisubs
aad
jo
mov
scas
cwtl
in
and
sbb
movsb
shr
push
jecxz
daa
jbe
mov
or
lock
daa
adc
cmp
pusha
jno
mov
std
push
jp
xor
or
lahf
call
mov
test
adc
inc
dec
loope
cmpsb
outsl
shr
in
push
xor
cmp
add
int3
push
or
fadds
jns
push
or
ds
movsl
cmp
sub
outsb
jle
cmp
jecxz
push
dec
lea
xchg
push
add
xchg
daa
xor
out
rcrl
int
js
sub
js
ss
fdivl
add
sbb
out
push
jg
pusha
test
imul
mov
aad
and
ss
push
test
xchg
int
mov
pop
divl
xchg
lret
jmp
mov
or
sbb
into
jo
cs
mov
add
mov
outsl
lock
push
stc
in
inc
fs
xchg
adc
add
repnz
cmp
dec
cmp
out
cmpsl
mov
mov
adc
cmp
xchg
push
or
dec
into
push
repnz
jle
inc
loopne
cs
push
mov
mov
adc
shll
add
dec
push
lods
xor
cmp
push
icebp
clc
sub
addr16
mov
into
mov
sar
push
xchg
gs
es
dec
mov
bound
jg
fld
and
les
and
xchg
loop
imul
ja
ds
sbbb
adc
popa
pushf
jg
fsubr
addr16
ja,pn
ret
sub
lea
aas
sbb
iret
jb
cli
cmp
loopne
je
pop
cmp
inc
leave
ss
mov
lea
dec
cwtl
push
pop
jg
negl
nop
dec
add
mov
pop
ja
inc
inc
inc
testl
mov
inc
mov
xor
bound
mov
loopne
mov
mov
mov
and
sahf
cld
pop
fdivs
aad
inc
mov
mov
push
cmp
mov
clc
rclb
or
aam
pop
imul
xor
and
dec
in
pop
repz
xchg
and
ljmp
mov
les
and
pop
nop
adc
insb
fsubp
add
out
xor
ss
jno
push
xor
fisttpll
xchg
scas
xchg
add
pusha
pop
mov
sbb
das
and
xchg
repz
jmp
jae
xor
sbb
cmc
xor
adc
mov
test
in
pop
mull
cmp
or
cmp
fwait
cld
or
add
lahf
mov
pop
push
dec
bound
add
xchg
fistpll
mov
int
lds
mulb
cmp
lcall
mov
inc
insb
jne
mov
lods
jb
xchg
popf
mov
movsb
xchg
cmp
adc
stos
out
dec
repnz
ss
mov
jp
xor
lret
insb
test
push
jnp
push
stos
jle
das
fucom
pusha
fwait
adcl
arpl
jns
les
out
inc
loopne
jae
or
icebp
popf
jne
mov
cmp
inc
aaa
in
fcmovu
mov
gs
xor
scas
sub
dec
push
ret
inc
pushf
rcrb
xor
and
leave
fs
test
arpl
stos
out
inc
or
or
adc
popa
addr16
jo
add
jg
pop
call
idivb
jo
cmp
jnp
scas
pop
cmp
fnsave
jbe
jl
jge
inc
enterw
daa
jb
aam
xor
jl
lods
jbe
jecxz
push
pop
push
xorl
out
lahf
pop
gs
test
dec
jb
inc
lret
dec
in
loop,pt
js
je
pop
inc
pop
int3
push
lahf
mov
sub
test
ds
insl
movsl
inc
aaa
push
rorb
out
fwait
xchg
pusha
subb
sbb
or
add
mov
xchg
add
pop
lahf
popa
movsl
sub
js
pop
test
jno
shll
stos
sub
sbbl
xor
negl
mov
int
mov
and
mov
loopne
and
jns
push
stos
add
jecxz
rcr
ret
xor
lret
push
rcr
dec
mov
mov
jnp
rorl
test
xchg
jae
iret
cmp
repz
fs
dec
push
adc
or
cmp
dec
lods
jnp
out
movsl
or
out
repz
mov
adc
leave
mov
into
xor
cs
loopne
jb
pop
outsl
addr16
imul
pop
filds
sbb
cmpsl
or
push
rcrl
xor
cmp
xor
dec
mov
cmp
sti
inc
inc
push
decb
imul
inc
dec
push
and
cli
outsb
jae
inc
je
repz
mov
xchg
movsl
push
dec
sbb
icebp
movhlps
negb
pop
xor
pushf
sub
push
ficoml
inc
aad
jns
inc
test
dec
aas
mov
fcmovb
dec
mov
inc
xchg
jecxz
fldl
fstl
cwtl
and
mov
inc
rorl
pusha
inc
lcall
and
inc
int
shl
ret
inc
icebp
das
addr16
dec
mov
xchg
push
jns
fldcw
nop
std
xchg
cltd
mov
js
cmpsl
push
and
icebp
sbb
mov
xchg
dec
lret
inc
lods
cld
mov
mov
pop
negl
repz
cltd
pop
pop
cmp
rcr
inc
pop
sub
int3
push
aam
loop
ret
mov
pop
mov
clc
inc
fwait
icebp
xchg
pusha
iret
aas
ljmp
int3
lods
hlt
lock
mov
jbe
ret
and
aaa
ret
les
lret
dec
mov
jae
mov
push
dec
sti
mov
cmp
mov
cmpsb
test
shrb
cmpsb
sar
or
stos
sbb
cmpsb
xchg
fcomp
ret
fistpll
incl
or
xor
inc
das
mov
lods
adc
dec
pop
and
mov
int
nop
pop
xchg
dec
or
inc
fimull
dec
fidivl
sub
cltd
push
mov
and
mov
push
mov
mov
or
in
mov
xchg
shlb
mov
enter
outsb
mov
jp
push
adc
xor
sbb
cmpsl
psubusw
data16
pusha
jp
xchg
pushf
test
hlt
cli
xchg
push
ret
fs
shl
je
and
mov
rcr
pop
stos
in
lret
push
and
mov
stc
jnp
sbb
jle
xchg
cmp
addr16
stos
adc
xor
ret
ret
push
pop
push
push
jg
dec
jae
out
push
xchg
ds
mov
mov
mov
icebp
sbb
add
negb
scas
mov
out
push
or
daa
shlb
mov
jb
fmulp
or
pusha
lcall
sub
adcl
mov
add
cld
int3
in
pop
pop
sbb
lds
je
jo
xlat
jg
push
xchg
cmp
sub
divl
jbe
scas
mov
imul
lods
cmp
fs
jno
data16
jl
jne
dec
cld
gs
inc
popa
xorl
jnp
lahf
es
js
inc
cwtl
mov
push
sbb
inc
push
ds
and
test
cmpb
loope
inc
pop
sub
rcr
cmp
inc
outsb
movsl
dec
add
fisttps
jl
jae
add
push
add
loope
xor
in
pop
mov
outsb
insb
adc
jbe
add
sub
fmull
xchg
add
adc
outsb
les
mov
sbb
or
xor
mov
or
and
add
scas
add
int
xor
fmuls
sti
cmp
inc
jb
shll
mov
jmp
std
test
jl
xor
xor
scas
mov
loop
popa
cmp
push
pop
mov
call
mov
sub
js
dec
cmp
inc
mov
out
daa
mov
sbb
xor
shlb
cmp
into
sbb
cmc
or
stc
loopne
lret
add
adc
pop
push
adc
xchg
iret
add
lds
outsl
sbb
sub
fwait
inc
in
movsb
outsb
mov
mov
fldenv
adc
nop
jnp
in
dec
jb
xor
popa
pop
lret
pop
clc
les
pop
repz
dec
xchg
push
ss
jne
pop
pop
call
pop
pushf
aad
xor
insl
cmp
cmp
das
mov
aas
pop
out
jb
in
mov
je
mov
jecxz
xor
rorl
faddp
xor
fnstsw
xor
pop
fcmovu
scas
inc
in
pop
mov
cli
push
in
xchg
das
inc
jb
mov
mov
dec
movsb
shrl
push
adc
sub
into
dec
in
push
cmpsl
or
or
icebp
repnz
mov
mov
imul
sbb
mov
cmpsl
push
shrb
adc
aam
add
ret
das
jae
es
ret
sbb
clc
jge
xor
jecxz
xchg
popa
adc
cmpsb
mov
cltd
xor
push
adc
outsl
cvtpi2ps
std
add
xor
xor
inc
mov
mov
icebp
xlat
test
jge
xchg
cli
cltd
rcll
stos
pop
loopne
ds
or
out
cmc
aad
xchg
pop
sub
add
dec
bound
xchg
sub
xor
into
jbe
or
jecxz
jle
daa
pop
insl
icebp
ds
mov
lahf
jbe
xor
ljmp
scas
enter
stos
out
sbb
adc
jmp
sahf
jns
xchg
faddl
adc
ret
lea
insl
cli
stos
jp
push
and
pop
inc
mov
outsl
loopne
dec
mov
gs
mov
xor
sbb
adc
jmp
shll
xor
dec
out
out
sub
lods
in
cltd
push
pcmpeqb
and
les
pop
mov
add
in
js
outsb
jmp
mov
and
adc
ljmp
inc
pop
cs
jae
add
mov
sub
cmp
or
fiaddl
cltd
xchg
lret
dec
mov
sub
jmp
out
or
push
push
scas
test
sub
jmp
lds
leave
push
jne
hlt
xor
arpl
pop
mov
adc
js
clc
ret
cmp
outsl
aaa
fistps
or
push
mov
ret
scas
loop
iret
cmp
inc
popf
fimuls
xor
lds
test
xor
sub
cmp
inc
movsb
popa
shlb
sarb
add
cli
test
loope
mov
cmp
pop
jno
sahf
fidivrs
cmc
dec
imul
inc
and
lahf
inc
aas
jns
sbb
dec
shrl
inc
negl
in
or
lods
js
in
repnz
mov
loop
loope
adc
add
push
xchg
movsl
push
aaa
mov
pop
cmpl
add
xchg
sbb
fcomps
xchg
movsb
sub
repz
pop
cmc
stos
adc
orl
sub
std
mov
mov
and
jno
mov
mov
xlat
pop
mov
repnz
adc
jbe
mov
add
mov
push
fmuls
dec
imull
add
rorl
hlt
mov
sbb
sahf
pop
cltd
test
in
outsl
in
loop
pop
data16
or
js
faddl
ss
orl
in
sub
loope
mov
jae
out
or
sub
jg
loop
lds
ret
jge
sub
cmp
adc
outsl
mov
cmp
cmp
inc
cmp
xchg
cmp
sub
add
mov
jne
test
shll
lret
insb
insl
dec
sar
jle
je
and
push
push
psllq
mov
mov
out
rol
hlt
lds
adc
rcrb
lea
mov
dec
cmp
fdivrp
sarb
stc
pop
and
xor
dec
mov
jecxz
shl
xchg
jl
lea
movsl
adc
mov
jl
orl
daa
fs
pusha
sbb
fistl
sub
and
xchg
mov
push
sbb
and
lea
imul
dec
jl
or
sarl
leave
mov
cld
lret
and
jge
adc
xchg
mov
sahf
sti
mov
push
sbb
sub
cld
leave
jae
ret
mov
loopne
insl
add
lods
clc
mov
cmp
push
add
popa
sub
rep
lret
mov
mov
push
rclb
rorl
ds
cltd
outsl
push
test
xchg
jl
jae
add
test
iret
pop
xchg
add
test
lcall
data16
stos
clc
cmc
cltd
out
pop
in
fs
data16
add
xor
xor
jle
or
je
sbb
fiadds
in
sub
sub
push
cmpsb
sub
xor
or
push
xchg
fwait
mov
push
jmp
lahf
in
mov
add
cld
push
frstor
lods
jns
cmpsb
and
sub
mov
lret
ret
mov
mov
ret
popfw
movsb
mov
icebp
es
fidivrs
dec
insl
xchg
mov
jmp
push
jne
cmp
xchg
push
lea
jmp
pushf
jge
addl
pop
sub
out
loop
dec
mov
stos
rcrl
insb
lds
jp
in
lret
in
cmpsb
add
fmulp
iret
cmp
ret
dec
pop
test
inc
arpl
gs
mov
inc
popf
ljmp
inc
mov
out
inc
jl
and
and
pop
jae
aam
popf
scas
push
and
shr
aam
enter
sbb
hlt
jge
mov
cld
cwtl
sub
mov
or
test
dec
or
add
daa
int3
mov
jecxz
fidivs
mov
pop
scas
adc
sbb
push
pushf
xor
enter
insb
cmpl
sub
fdivrl
pop
daa
or
jecxz
push
or
jl
add
push
push
shll
and
js
xor
test
scas
dec
mov
xchg
cmpsb
jnp
out
in
repz
loopne
push
pop
jnp
cmpsb
mov
loope
or
sub
jmp
sarb
fs
movsl
push
int
rcr
cltd
lock
mov
sahf
out
jb
pop
add
sbbl
sbbb
stos
sub
pop
je
sub
orl
sub
lock
ret
outsb
mov
adcb
jg
pop
divb
inc
test
mov
cli
dec
and
fisttpl
push
mov
inc
int
cmp
imull
mov
rcrl
sbb
mov
sbb
fisubrs
inc
loop
add
sarb
push
aad
ss
xor
cmp
cmp
out
mov
cli
jg
push
xor
jno,pn
push
mov
into
popf
cmc
lcall
pop
int3
ja
adc
pop
imul
icebp
adc
mov
fwait
mov
lods
int
cmp
add
dec
cmp
mov
jp
xor
dec
les
idivb
jns
out
nop
xor
dec
xor
cmc
inc
xchg
pop
fstps
data16
xchg
out
and
sbb
bound
jae
leave
pop
dec
and
into
ud2
pushf
sub
cmp
dec
pop
js
add
aad
stc
pushl
jb
mov
dec
add
cltd
test
xorl
lea
repz
cwtl
push
pop
jb
jge
lahf
mov
das
mov
and
xchg
icebp
fisttpl
loopne
add
data16
bound
add
push
mov
push
loope
xor
lret
xchg
imulb
fldt
cmpsl
or
jb
in
bound
cld
or
lret
xchg
and
fnsave
les
xor
push
or
aam
cmp
dec
add
es
and
xchg
sbb
mov
lods
xor
scas
sarb
fistpl
imul
mov
sahf
cltd
or
lods
mov
sub
or
daa
rolb
xchg
rcl
add
daa
pop
ss
add
mov
hlt
sbb
loopne
mov
pop
xor
add
xor
fstp
mov
mov
jnp
dec
sub
pop
jecxz
shll
xchg
dec
dec
mov
xchg
aas
or
dec
test
mov
xchg
mov
push
fs
fldt
fidivrs
jnp
in
add
mov
cmp
mov
mov
push
sub
ror
mov
push
arpl
push
xor
pusha
dec
pusha
add
pop
xor
jmp
fsts
mov
pop
sub
and
lea
stos
inc
adc
insb
xor
jle
jl
in
adc
iret
jl
adc
pop
mov
int3
cmpsb
jae
or
push
rolb
fstps
and
fwait
inc
xor
mov
xchg
jns
cmpsl
sbb
popa
push
imul
jl
mov
stc
push
fildll
xor
imul
inc
call
push
arpl
sbb
inc
push
scas
or
lahf
fwait
sbb
icebp
or
aaa
cmp
movsl
inc
daa
pop
movsb
in
jmp
push
cmp
pop
jo
push
inc
scas
repz
sub
sti
cltd
ret
cmp
add
push
push
jbe
stc
data16
inc
ror
xchg
or
cmp
jl
jl
dec
test
push
jmp
bound
lahf
subl
push
mov
out
rclb
inc
adc
movl
pop
cmp
cmc
lock
daa
cmpsb
sub
mov
cmp
loop
movsl
pop
mov
pop
jl
xorb
hlt
add
iret
add
mov
push
imull
fistpll
cmp
xor
insb
push
das
outsl
iret
fmull
adc
jecxz
in
mov
jmp
jg
push
test
loopne
push
mov
push
sub
das
cs
mov
sbb
jg
in
fadd
int
imull
lret
inc
dec
shll
mov
into
sbb
test
xchg
outsl
dec
mov
adc
fs
loop
mov
cmp
ss
loope
mov
stc
xor
inc
cmp
cmpsl
jmp
into
roll
loopne
dec
dec
pop
jmp
jb
shll
or
aad
lcall
shll
aas
xchg
fldt
inc
test
xlat
sub
push
sub
repnz
mov
inc
in
in
lcall
cmp
nop
or
loope
cld
mov
stos
mov
les
mov
xchg
mov
movsb
sbb
fucomp
push
bnd
pop
add
and
aad
jmp
aaa
or
imul
idivb
aaa
test
dec
jl
add
jecxz
aad
xchg
js
lea
inc
cwtl
nop
mov
imul
dec
fwait
ljmp
cmpsb
sbb
jmp
push
in
das
jecxz
mov
mov
mov
xlat
das
div
stos
or
xor
aad
lds
pop
sbb
cmp
xor
ds
add
dec
mov
mov
xor
andl
daa
popa
sub
push
or
fsubrl
insl
into
push
lods
clc
cs
xchg
pop
mov
ljmp
xor
xchg
int
add
rclb
push
push
cmova
mov
test
pushl
add
fisubrl
xor
adc
loope
ljmp
push
clc
or
sti
xlat
inc
stos
pop
xor
mov
xor
bound
rcll
mov
cmc
popa
pop
sahf
xor
cmp
xchg
and
inc
or
or
sbb
out
inc
push
das
mov
lcall
adc
bound
hlt
outsb
in
lds
mov
pop
push
mov
mov
gs
sarl
mov
mov
add
mov
mov
iret
stos
jne
test
mov
jp
or
mov
push
xchg
xor
out
xorb
mov
int3
dec
aaa
stos
mov
mov
inc
jnp
fstpt
in
dec
push
adc
inc
iret
ds
push
ret
sub
cs
inc
jns
aas
jae
testb
adc
popf
cmp
dec
push
mov
inc
ficompl
mov
sub
pop
imul
push
push
es
mov
repnz
xchg
test
adc
stos
arpl
loope
inc
sbb
inc
or
insl
xlat
sbb
sbb
inc
or
mov
int3
nop
xchg
sarl
xor
sub
pushl
or
and
cmp
movsb
add
sbb
sti
fdivrl
ds
xchg
or
add
mov
and
leave
dec
mov
adc
xor
lods
xchg
jecxz
mov
pop
cwtl
test
inc
cmp
movsb
mov
into
in
rcrl
pop
jl
xchg
or
loope
add
dec
cmp
jbe
xchg
push
cmpsb
movsl
gs
rorl
andb
shrl
xor
lret
call
arpl
rcrl
clc
sub
mov
lcall
aaa
fdivl
jno
outsb
push
mov
adc
mov
test
mov
add
and
lds
int
shlb
ret
jmp
pushf
lret
iret
ror
mov
dec
xchg
sahf
add
test
into
push
xor
cmp
shrb
stc
cs
xchg
fs
xlat
in
ss
fidivrs
xor
jge
in
push
xor
mov
or
hlt
repnz
movsb
sbb
sub
loopne
cmc
outsl
pop
or
inc
adc
adc
std
add
jb
retw
lods
fwait
mov
cmp
fcom
imul
mov
push
shlb
cmp
cmpsb
xchg
dec
out
add
inc
lods
andl
or
inc
repz
xchg
je
pop
sbb
pop
adc
jno
add
mov
jae
jl
sbbb
cs
pop
fwait
aad
in
pop
inc
das
inc
cmp
shll
repz
push
je
int
jecxz
cmp
jae
loopne
cmp
sti
cmp
test
sbb
push
pop
dec
xchg
lock
das
ret
mov
jl
inc
and
push
inc
shll
divb
fcom
dec
dec
rclb
cmpsl
or
jbe
push
mov
cld
pop
jns
lret
outsl
dec
ljmp
xchg
cli
push
pop
mov
jne
cli
ljmp
sub
lret
popf
push
es
hlt
es
mov
insb
clc
imul
or
lods
or
mov
and
pop
fcoml
in
mov
cmpsb
ret
sarb
cltd
jnp
dec
test
sub
mov
xor
out
outsl
fnsave
pop
test
cmp
sbb
push
enter
push
pop
mov
pop
out
sub
pushf
add
dec
jo
popf
sub
xor
mov
or
sahf
aam
in
cmp
mov
movsl
jb
pop
je
ja
cmc
ljmp
push
xchg
or
mov
jmp
add
shll
bound
cmc
jns
adc
lret
xchg
sbb
lcall
xchg
push
imul
mov
mov
sub
xor
popa
cwtl
jne
je
pusha
xorl
mov
xchg
std
mov
out
lea
pcmpeqw
push
or
lods
stos
sub
dec
and
insb
push
mov
pop
jle
ficoml
in
xor
loop
popf
add
ret
inc
pop
sub
rolb
fidivs
and
push
push
fwait
push
popf
pop
lods
dec
push
xor
xchg
daa
pop
mov
imul
push
push
insl
xor
sarb
mov
adc
inc
leave
cs
hlt
pop
sub
sbb
push
pop
or
sub
loop
mov
push
xchg
int3
jnp
rcrl
dec
push
ficomps
xlat
dec
jo
pop
scas
mov
stos
and
xlat
test
fadds
push
push
or
ret
jbe
jo
jge
sbb
enter
daa
or
cmp
inc
push
jno
ljmp
daa
outsb
femms
scas
and
pop
loop
dec
mov
shll
push
fs
jne
and
sbb
cmpsb
add
in
test
sub
pop
mov
xlat
mul
jns
cmp
cmp
sbb
mov
mov
insb
out
shrb
stos
aad
xor
pop
dec
mov
out
mov
sahf
or
movzbl
test
sub
fnstcw
icebp
test
lds
and
push
sub
mov
jno
mov
or
mov
call
mov
and
mov
int
jb
fdivs
dec
test
stos
loopne
lret
sbb
fs
mov
ficomps
cs
and
mov
or
out
jns
outsl
or
gs
sub
in
fisubl
test
inc
aas
loop
cmp
sub
call
and
xor
jb
cmp
push
jg
arpl
icebp
cmc
out
ds
pop
sub
imul
cs
add
aam
inc
inc
or
xorb
xlat
stos
jo
sub
scas
out
fisttps
and
mov
sub
mov
fcoml
dec
or
inc
rorb
les
xchg
aad
aaa
or
repnz
ror
lock
out
addr16
addr16
xchg
jmp
mov
cs
rcl
xchg
dec
inc
dec
xorl
jb
pop
in
push
fidivl
mov
mov
dec
popf
inc
mov
test
push
mov
xchg
rorl
ljmp
fistpl
out
inc
not
sbb
in
mov
mov
cmpsb
xor
shr
fcmovbe
mov
mov
std
jg
ja
lret
cmpsb
in
cmpsl
or
mov
icebp
and
iret
push
fiadds
dec
mov
popf
jno
xchg
in
insl
pop
roll
sub
xchg
cli
shll
insl
pushf
pop
inc
clc
movsb
mov
xchg
fidivrl
cmp
and
popa
test
add
test
mov
lock
push
pop
cwtl
pop
syscall
dec
mov
in
mov
test
mov
xorl
lcall
fucomp
xchg
push
mov
je
fcmovnbe
or
inc
pop
aaa
mov
stos
mov
fldz
in
sbb
xor
mov
xor
fadds
xor
imul
mov
cmp
adc
mov
or
dec
jns
cmpsl
inc
mov
sub
int3
xor
push
jne
mov
mov
inc
out
js
bound
rcl
in
inc
mov
mov
inc
les
stos
dec
pop
addr16
mov
mov
mov
out
jne
mov
aas
fistpll
sbb
mov
in
cmpl
sub
sarl
push
dec
adc
cld
and
push
insb
jno
out
mov
hlt
jle
notl
adc
es
iret
cld
push
or
dec
leave
pop
pop
pusha
jne
inc
scas
xor
push
sbb
dec
push
mov
add
shlb
xchg
jle
es
ss
imul
sub
mulps
push
dec
and
fs
leave
movsl
loop
hlt
test
cmp
pop
pusha
xchg
jecxz
jmp
lcall
add
mov
pop
xor
lds
mov
jo
sbb
nop
int3
jmp
mov
adc
imul
sbb
clc
jbe
pop
inc
jge
fbstp
daa
or
mov
jl
mov
dec
xchg
mov
push
xchg
xor
jecxz
mov
push
aaa
fwait
repz
fildl
fs
ret
cmpsb
xchg
in
mov
js
cmp
cli
mov
push
push
cld
loope
push
lds
push
dec
cmp
adc
movsl
jae
adc
inc
cmc
rorb
out
xor
dec
insb
js
repnz
xor
jmp
daa
fsubrs
push
inc
dec
pop
jo
lcall
mov
fmull
jg
lods
xchg
push
outsb
push
cmp
es
push
cmpb
pop
mov
cmp
in
mov
pop
or
pop
mov
mov
mov
stc
fdiv
addr16
imull
push
lret
pop
sar
adc
inc
faddl
sbb
mov
test
sub
outsl
call
scas
sar
pushf
das
dec
fs
sub
or
orl
dec
int
xor
addr16
cmp
or
or
inc
add
push
enter
loopnew
sub
dec
jo
adc
imul
jle
enterw
imul
jmp
pop
sbb
mov
es
mov
incb
jbe,pn
popf
lds
inc
ror
scas
fnstcw
dec
les
std
xchg
cli
ds
sbb
dec
pop
add
jb
pop
sbb
adc
mov
data16
pop
sti
cs
xlat
mov
lcall
movsl
jge
loope
fidivl
je
mov
pop
rorb
inc
cmpsb
test
popl
flds
pop
in
mov
pop
cmp
mov
das
add
mov
ljmp
roll
rclb
es
and
mov
pop
stos
mov
icebp
cld
sbb
cld
mov
mov
dec
jg
mov
pop
or
lock
sub
popf
cwtl
ret
mov
es
inc
mov
clc
fbld
sbb
ljmp
cmp
fsts
imul
and
xor
inc
pcmpgtb
addb
pop
or
ja
fnstenv
dec
push
push
ffree
cmp
test
adc
sbb
mov
mov
loop
scas
stos
mov
scas
ds
leave
xor
fdivrp
pop
xor
pop
jno
sub
mov
shll
pop
iret
lods
imul
fcoms
or
jnp
fwait
je
aad
sbb
cmp
add
ja
ja
inc
out
push
dec
sahf
bound
nop
jns
ss
add
xchg
mov
xchg
mov
test
movsl
xchg
and
lds
movsl
jle
push
mov
mov
or
bound
pusha
shll
xor
rcr
xlat
xor
xchg
xor
xchg
push
xchg
xchg
nop
cmpsl
orl
out
cwtl
shrl
push
pop
sbb
rorl
xor
insb
fsubrl
addr16
or
in
xor
iret
pop
sbb
mov
xchg
mov
inc
lcall
push
faddl
popf
lods
sbb
push
das
flds
jae
cs
aad
imul
subb
dec
repz
mov
mov
mov
hlt
hlt
out
arpl
mov
or
sahf
sbb
pop
dec
or
mov
fs
push
inc
mov
fsubp
ret
leave
vpmaxsw
scas
outsl
cmp
and
cld
cmp
push
movsb
mov
imull
jge
test
daa
pop
cli
in
push
repnz
push
hlt
dec
add
sbb
sub
lahf
ljmp
inc
test
cmpsb
dec
sbb
cmpsb
or
cmpl
add
loope
sti
or
and
std
bound
shlb
mov
dec
addb
sbb
dec
mov
lods
mov
pop
xlat
mov
pop
out
shr
add
sub
mov
push
sub
push
cs
les
adc
mov
or
push
ret
stos
nop
int
popa
fsubrs
sbb
in
ret
rcll
adc
mov
sahf
jmp
gs
xor
inc
xlat
loop
pushf
and
push
out
cmpsb
arpl
fsts
cmp
and
adc
jle
stos
xor
aam
or
ret
into
dec
cltd
div
jge
mov
test
pop
cmp
pop
push
jmp
adc
test
dec
ret
ret
pop
fidivrl
sub
cmp
sub
cmp
mov
xchg
outsl
pop
sti
mov
lods
add
xchg
lds
or
lods
inc
out
adc
mov
cld
les
add
mov
inc
jmp
out
and
pop
int
adc
sbb
sbb
idivb
subb
cli
add
push
adc
inc
cmpb
aas
mov
loopne
loope
fmuls
test
loop
into
or
imul
cmp
lret
sbbl
xchg
je
notl
inc
add
lcall
adc
push
mov
jmp
inc
pop
idiv
push
xor
int
mov
cmpsl
push
stos
jbe
jmp
aaa
icebp
sarl
popa
lret
mov
xchg
and
lret
sub
call
jae
mov
in
xchg
aam
or
ret
sbb
in
int3
sbb
insl
push
out
clc
sbb
cmp
popa
mov
out
dec
fcompl
mov
mov
bound
sub
movnti
add
and
and
test
adc
push
push
fs
ljmp
xchg
mov
sub
mov
or
jno
xchg
pmulhuw
stos
jge
xchg
adc
add
cmp
mov
push
xor
mov
or
dec
or
mov
into
dec
pop
jl
inc
fdivp
fs
cltd
mov
mov
jbe
mov
cltd
cmp
rcll
aad
sub
aas
fnsetpm(287
imul
xchg
add
cmp
or
inc
xchg
pop
mov
mov
js
orb
jge
popa
sub
pusha
push
rcrl
idivb
xchg
or
lcall
pop
out
out
dec
adc
dec
ljmp
out
mulb
cltd
sti
inc
insb
inc
es
fisubrl
in
dec
aam
out
outsl
iret
mov
mov
pop
into
dec
imul
jae
inc
inc
push
lahf
out
popf
aam
jmp
inc
scas
dec
mov
es
push
xchg
sub
clc
sbb
cmp
push
scas
mov
repnz
lea
cmpb
cmp
leave
xchg
mov
outsl
arpl
adc
or
pop
fimuls
aaa
sbb
jne
jl
push
add
add
int3
cmp
aas
pop
pushf
or
addl
jo
jp
scas
dec
scas
jle
fidivrl
je
std
sub
push
stc
cltd
jbe
mov
enter
daa
push
mov
test
jl
xchg
dec
je
lret
or
leave
outsb
and
call
pop
push
fucom
mov
outsb
inc
loopne
inc
cmpsb
lea
shr
pop
or
js
enter
rolb
inc
jb
loope
lret
orb
and
mov
cld
lcall
adc
mov
mov
inc
mov
or
outsl
xor
sub
mov
outsb
xchg
ficomps
loop
sbb
jp
sub
and
xor
int3
jg
and
mov
pushl
or
push
dec
jmp
subb
mul
cltd
fs
add
add
mov
sahf
mov
test
fidivl
add
dec
outsl
cmpsb
mov
dec
stc
or
xor
fcoms
sub
push
cmp
sbb
mov
xor
jno
or
add
loopne
pusha
in
pop
xchg
adc
push
daa
imul
cltd
ds
xor
aaa
add
cmp
pop
xlat
cmp
aas
adc
insb
jp
cld
push
sti
push
sub
mov
jne
dec
push
faddl
jmp
fldl2t
out
les
sbb
xchg
addb
push
jl
insl
push
in
addb
fadds
pushf
sub
sub
push
roll
fwait
mov
aas
push
fsubrl
xor
and
iret
mov
stos
jecxz
test
cmpsb
fmull
cwtl
mov
pop
mov
scas
mov
subl
aad
pop
aad
sbb
mov
jl
ds
add
je
cmp
mov
pop
mov
je
mov
mov
sub
shl
test
cld
or
and
sub
movsl
mov
adc
jmpw
mov
imulb
xchg
aam
addr16
cmpsl
pop
imul
lretw
insl
push
cwtl
cmpsl
clc
push
mov
xchg
in
ljmp
js
mov
and
mov
andb
adc
and
sbb
push
push
and
cli
xor
rcrl
xor
cmpl
xchg
lock
inc
mov
stos
sub
mov
add
dec
adc
sub
or
mov
xor
jmp
faddl
mov
cld
pop
inc
aaa
or
in
xlat
dec
push
aam
inc
jne
in
lea
test
pop
sbb
push
and
sub
aaa
bound
xor
jmp
in
jge
xchg
push
inc
or
mov
fstsw
jp
mov
mov
aad
out
xchg
dec
mov
xchg
pusha
in
inc
iret
fists
cwtl
popa
jmp
sub
jns
imul
sub
test
mov
stos
clc
popf
pushf
and
repnz
ret
stos
jle
push
fsubp
cmpsb
roll
sbb
ret
lds
lods
sbb
jae
addl
sti
sbb
push
sub
imul
sbb
jg
imul
scas
push
pusha
mov
stc
xchg
shrb
test
pop
add
lret
adc
inc
sub
cmp
sbb
jns
xlat
adc
jle
add
xor
daa
inc
fs
mov
aas
out
iret
xchg
jo
enter
and
test
mov
xchg
movsb
mov
addb
int
jge
jg
ret
nop
