jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
ss
cmp
xor
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
push
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
call
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
movw
movzwl
push
call
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
call
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
movw
movzwl
push
call
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
call
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
call
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
pop
pop
ret
mov
push
mov
push
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
movw
movzwl
push
call
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
movw
movzwl
push
call
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
call
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
call
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
pop
pop
ret
mov
push
mov
add
mov
mov
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
mov
mov
add
mov
mov
mov
mov
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
mov
add
add
mov
mov
mov
mov
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
xor
mov
cmpl
jbe
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
lea
xchg
dec
inc
dec
lea
lea
xchg
mov
mov
dec
inc
mov
test
jbe
mov
movl
mov
add
mov
dec
shl
add
mov
mov
mov
add
push
mov
push
call
test
jne
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
mov
add
mov
dec
add
add
mov
mov
movzwl
mov
jmp
incl
decl
jne
jmp
mov
sub
mov
mov
add
mov
shl
add
mov
mov
mov
add
mov
mov
mov
pop
ret
push
mov
add
mov
mov
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
mov
cmp
je
jmp
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
mov
xor
divl
test
jne
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
mov
cmp
je
jmp
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
lea
xchg
dec
inc
dec
lea
lea
xchg
mov
mov
dec
inc
mov
cmp
je
jmp
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
call
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
mov
sub
mov
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
push
mov
mov
xor
call
mov
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
mov
mov
mov
call
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
push
mov
mov
xor
call
mov
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
lea
mov
push
mov
jmp
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
lea
xchg
dec
inc
dec
lea
lea
xchg
mov
mov
dec
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
mov
sub
add
add
mov
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
lea
pushl
call
mov
pop
ret
lea
push
mov
add
mov
mov
mov
call
push
call
mov
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
mov
mov
call
mov
mov
mov
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
mov
mov
movl
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
mov
pop
ret
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
shll
ljmp
stos
mov
mov
mov
mov
int3
int3
mov
stos
test
mov
ror
mov
stos
test
mov
shrb
scas
cmpsl
test
int3
xchg
scas
rcrb
mov
int3
movsl
scas
mov
ljmp
int3
movsl
int3
scas
int3
mov
int3
test
std
int3
dec
ljmp
int3
int3
int3
int3
int3
lahf
inc
sub
xor
cmp
or
cmp
lock
outsb
out
mov
loop
mov
adc
mov
sbb
mov
push
out
mov
xor
mov
sub
mov
xor
mov
into
repnz
enter
imul
int3
inc
xor
test
inc
int3
inc
xor
mov
inc
int3
inc
xor
add
inc
int3
inc
xor
out
pop
inc
int3
inc
xor
in
imul
inc
xor
shrl
inc
int3
inc
xor
leave
imul
inc
xor
iret
std
or
xor
xor
xchg
xchg
or
inc
add
inc
adc
or
mov
or
inc
sub
add
pop
inc
popl
sbb
inc
mov
pushf
inc
popl
popl
pushf
mov
add
mov
inc
vpmacssdqh
add
mov
pushf
inc
popl
pushf
xchg
inc
vpmacssdqh
inc
iret
cld
int3
int3
int3
inc
xchg
inc
test
inc
clc
int
sub
cmp
cmp
dec
int3
int3
int3
inc
adc
adc
mov
int3
leave
push
sbb
adc
int3
int
sub
and
or
int3
cmpsb
int3
cmpsb
int3
inc
and
enter
pushf
inc
popl
pushf
add
and
mov
cmp
push
pop
int3
int3
int3
inc
and
int3
rcl
and
int
sub
xor
and
fmul
vpmacssdqh
mov
int
sub
xor
and
fmul
vpmacssdqh
mov
dec
rcr
xor
out
cmp
int3
int3
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
and
inc
lahf
xor
into
inc
sbb
sbb
or
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
dec
sub
dec
xor
inc
xor
int3
mov
loopne
and
enter
idivl
cmp
inc
cmp
mov
int
sub
xor
popl
inc
adc
int3
cmpsb
faddl
add
or
pushf
inc
popl
pushf
xchg
movsb
int3
dec
int3
int3
cmpsb
int3
inc
popl
popl
pushf
mov
int3
cmpsb
int3
inc
pop
pushf
inc
popl
pushf
mov
scas
inc
inc
push
lock
cmp
cmp
ss
sub
cmp
cmp
or
cs
das
xchg
push
ror
or
inc
sub
enter
sti
adc
cmpsl
int3
int3
int3
mov
mov
int3
int3
mov
xchg
int3
int3
int3
mov
jl
and
int3
int3
int3
fmull
and
int3
int3
jecxz
mov
int3
int3
and
rolb
test
sub
push
int3
test
dec
cmp
mov
ror
mov
and
lret
mov
cmp
int3
push
mov
fcompl
or
sub
cmp
fildl
and
cmp
cmp
push
int3
inc
mov
inc
ss
adc
cmp
cmp
or
push
cmp
cmp
jecxz
inc
and
dec
adc
cmp
inc
cmp
iret
les
int3
adc
ret
pop
int3
int3
adc
inc
xor
pop
enter
cmp
int3
mov
int3
inc
cmp
cmp
cmp
xor
leave
push
inc
int3
int3
int3
adc
inc
ss
lahf
cmp
into
std
push
inc
lahf
xor
cmp
cmp
ss
testb
ss
cmp
int3
mov
int3
adc
inc
ss
push
inc
lahf
xor
xor
cmp
int
std
push
inc
lahf
xor
pop
int3
int
out
cmp
int3
int3
inc
ss
or
xor
int3
inc
xor
or
ss
lahf
xor
pop
int3
cmp
int3
mov
or
inc
sub
or
les
mov
cmp
int3
int3
outsb
les
std
or
ret
pop
int3
std
push
inc
ffreep
pop
int3
leave
sbbb
int3
int
out
cmp
int3
int3
outsb
ret
pop
int3
std
or
les
inc
dec
enter
inc
aaa
std
or
ret
pop
int3
inc
dec
enter
std
push
inc
ffreep
pop
int3
inc
dec
enter
std
or
ret
pop
int3
inc
lahf
aaa
inc
pop
enter
std
or
les
leave
orb
int3
std
push
inc
ffreep
pop
int3
leave
sbbb
int3
int
out
cmp
int3
int3
inc
aaa
std
or
aaa
inc
dec
enter
decb
inc
cmp
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
lea
xchg
dec
inc
dec
lea
lea
xchg
mov
mov
dec
inc
movl
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
mov
mov
call
mov
cmpl
je
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
mov
cmp
je
mov
subb
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
mov
xorb
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
incl
mov
cmp
jne
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
mov
call
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
push
mov
push
call
mov
pop
ret
nop
push
mov
add
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
movb
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
mov
mov
pop
ret
lea
push
mov
add
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
call
call
call
test
jne
mov
jmp
movw
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
call
lea
mov
pop
ret
mov
push
mov
add
cmp
jo
xchg
xchg
mov
xchg
mov
lea
xchg
xchg
mov
mov
xchg
xchg
dec
inc
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
push
call
mov
call
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
mov
pop
ret
add
add
cs
jae
jae
gs
xor
pop
jne
je
jae
fs
insb
and
add
add
jae
mov
call
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
call
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
movw
movzwl
push
call
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
call
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
call
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
movw
movzwl
push
call
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
call
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
call
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
lea
xchg
dec
inc
dec
lea
lea
xchg
mov
mov
dec
inc
call
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
movw
movzwl
push
call
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
call
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
call
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
call
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
movw
movzwl
push
call
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
call
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
call
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
lea
xchg
dec
inc
dec
lea
lea
xchg
mov
mov
dec
inc
call
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
movw
movzwl
push
call
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
call
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
movw
movzwl
push
call
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
movw
movzwl
push
call
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
movw
movzwl
push
call
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
movw
movzwl
push
call
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
movw
movzwl
push
call
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
lea
xchg
dec
inc
dec
lea
lea
xchg
mov
mov
dec
inc
call
cmp
jo
xchg
lea
inc
dec
dec
lea
mov
inc
xchg
mov
lea
lea
mov
xchg
xchg
mov
dec
inc
inc
call
cmp
jae
mov
lea
lea
xchg
mov
lea
inc
dec
jne
xchg
dec
inc
lea
lea
inc
mov
lea
lea
mov
movw
movzwl
push
call
xchg
cmp
jne
lea
lea
mov
lea
mov
xchg
inc
inc
mov
xchg
mov
mov
mov
mov
xchg
xchg
call
cmp
jnp
xchg
lea
inc
dec
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
mov
inc
dec
dec
call
cmp
jge
lea
mov
lea
mov
xchg
xchg
mov
mov
xchg
mov
inc
mov
xchg
lea
mov
xchg
inc
dec
dec
call
cmp
jl
xchg
mov
mov
xchg
lea
xchg
mov
mov
dec
jne
mov
dec
mov
mov
lea
lea
dec
inc
dec
lea
mov
mov
mov
mov
lea
call
mov
cmp
jp
dec
dec
mov
cmp
je
lea
xchg
xchg
mov
mov
lea
mov
mov
dec
inc
lea
mov
lea
inc
ret
mov
ret
lea
push
sub
push
add
sbb
mov
mov
test
loope
push
jecxz
lret
push
out
mov
pusha
and
sub
add
mov
add
filds
add
add
add
add
sub
lods
in
paddd
jns
adc
inc
loope
add
add
icebp
scas
add
jne
int
movl
mov
and
add
fidivl
inc
movsl
add
in
into
xchg
dec
push
add
dec
add
loopne
rclb
imul
push
xchg
cmp
add
add
and
xchg
pop
or
mov
mov
aam
and
add
add
push
add
xchg
lods
inc
out
cmpsl
sub
sbb
add
cwtl
inc
lahf
xchg
std
add
or
add
add
nop
fistl
add
add
or
cmp
sub
or
jle
sub
sub
loope
idivb
push
popf
or
mov
sub
add
outsb
psubd
add
add
xchg
mov
cmp
push
or
addl
add
in
add
rcl
cmpsb
add
add
add
or
in
add
imul
jb
mov
add
jecxz
mov
inc
mov
mov
xchg
xlat
push
add
jge
dec
stos
fst
add
enter
in
addr16
pop
mov
cmp
fwait
in
repnz
jge
mov
add
rcrl
shll
push
pushf
add
push
scas
aas
add
dec
add
add
add
add
add
add
add
roll
add
mov
cmc
add
add
fstps
push
mov
mov
add
mov
add
sub
iret
add
repz
add
xchg
add
pop
cwtl
pop
add
pop
add
add
sbb
ja
sub
xchg
lcall
jnp
sub
mov
call
mov
sub
cli
add
add
test
fisttpll
aad
or
jno
push
test
add
push
xor
add
dec
jle
jno
add
test
add
adc
add
add
add
scas
shrb
gs
add
jns
xor
into
xlat
mov
incb
jne
mov
adc
mov
test
mov
jmp
jo
push
jl
xor
jp
cltd
jne
add
lret
add
adc
test
sbb
add
add
outsb
dec
test
or
cli
add
add
loopne
add
rcrl
add
pop
sbb
xor
pop
lret
jecxz
add
dec
add
sbb
inc
movsl
adc
leave
add
lret
pop
add
xchg
pop
inc
jle
add
out
sbb
add
out
hlt
push
hlt
jae
add
movsb
popa
lods
xchg
inc
add
int
push
lods
mov
add
add
repz
pop
push
add
push
int
in
imul
test
add
adc
fs
dec
mov
xchg
lds
add
push
enter
or
dec
cmp
add
cs
mov
jecxz
shl
and
sub
mov
inc
mov
add
sbb
arpl
mov
nop
xor
pop
add
leave
sbb
add
addl
stos
and
inc
and
jl
out
test
stos
add
and
popa
outsl
das
pop
enter
jp
dec
pop
rcrb
test
jae
loope
jbe
fadd
mov
sub
cli
outsb
mov
out
jle
cmpsb
or
leave
and
add
out
divb
jae
push
cmp
inc
sub
imul
mov
fisubl
sbb
pushf
fiadds
testb
jg
fdivrs
shrl
mov
repnz
out
cmpsl
andb
fsubrs
mov
inc
lcall
xchg
pop
sarb
or
sub
cmc
into
call
dec
outsl
shrb
lahf
jge
xor
jbe
out
incl
pop
xchg
cmp
or
jle
mov
out
jle
jg
mov
fiadds
popa
cli
adc
loopne
cmp
bound
inc
in
sub
insb
scas
les
repz
sbb
sub
data16
shrl
push
aas
mov
pushf
jmp
into
lcall
fucomip
nop
aad
add
mov
cmp
adc
je
orb
sbb
add
xchg
pop
adc
lods
dec
adc
aas
jp
pop
pop
icebp
xor
inc
popf
repnz
in
cmp
jb
fmull
jns
xchg
and
adc
divb
dec
dec
std
ds
adc
push
xchg
lcall
in
cld
insb
adc
movsl
or
sti
clc
call
lock
jg
pop
xorb
jne
in
mov
js
aas
ret
loope
lock
insl
fwait
push
out
dec
bound
mov
xchg
jbe
lods
cltd
inc
es
jecxz
lods
and
push
nop
or
cwtl
aad
sub
and
test
cli
shll
ret
div
fstp
push
loope
pop
jo
xchg
icebp
add
cmp
test
stos
sti
push
mov
mov
pop
adc
stos
sbb
lock
test
cmp
mov
cmp
push
add
test
iret
sub
pop
imul
outsl
or
nop
push
aad
sbb
and
mov
dec
xor
lods
or
movsb
in
mov
xchg
push
dec
sbb
mov
pop
popf
cld
ja
mov
jp
dec
mov
popa
sub
jne
dec
pop
mov
cmp
out
das
xor
bound
add
jns
mov
cmp
adcl
pop
or
xor
addr16
inc
jl
pop
xlat
mov
xchg
loopne
jnp
xchg
jmp
in
xchg
out
pushf
add
scas
bound
jmp
push
and
jae
push
bound
push
sub
inc
sub
push
popa
movsl
dec
stos
or
pop
and
push
fistps
stc
mov
mov
pop
sub
iret
xor
or
push
test
pop
das
dec
popf
hlt
lods
movsl
fisubl
ja
inc
lcall
push
pop
inc
and
xchg
insl
mov
int3
or
and
ficomps
pop
pop
shrb
xor
in
leave
mov
ret
sbb
push
add
ja
push
pop
lcall
cmc
lods
aaa
xor
or
andl
jl
pop
dec
pop
inc
pop
push
in
xorb
add
arpl
loopne
scas
inc
dec
sub
aas
in
repz
out
push
pop
stos
push
inc
test
mov
mov
enter
daa
cmp
loope
adcb
sub
sbb
movb
jne,pt
xor
xchg
sar
and
test
push
add
mov
add
ret
xchg
xchg
mov
dec
pop
out
jb
js
ror
pop
adc
loope
roll
outsl
and
sub
jns
outsb
icebp
andb
test
mov
cmp
insl
sbb
adc
and
jbe
push
cmp
push
int
ret
push
sub
xchg
out
pop
push
mov
push
and
in
add
sahf
popa
dec
cmpsl
test
xchg
sub
add
mov
fs
jnp
adc
cwtl
jg
lds
cmp
in
ret
testl
repz
shrl
aam
sub
sbb
cmc
xchg
dec
xor
frstor
outsl
lahf
jl
loop
lods
jbe
jmp
sub
mov
xor
in
xchg
loop
ret
push
loope
push
ds
out
dec
xor
jbe
push
xor
shr
dec
mov
sti
adc
gs
inc
loopne
inc
push
pop
aas
mov
adc
movsl
mov
les
inc
repz
push
xchg
xor
pop
sbb
and
xlat
add
lds
les
mov
cmp
jnp
dec
xchg
mov
aad
icebp
xchg
mov
xor
outsb
loop
ficomps
lds
mov
or
sbb
sbb
add
mov
fimuls
lds
adc
daa
dec
cld
cmpsb
fisttpl
hlt
pop
stos
pop
enter
xor
jns
aas
mov
push
jb
jnp
dec
lock
adc
cmpsb
mov
std
in
pop
cwtl
xor
mov
xchg
aas
mov
pop
xorl
imul
fimuls
sbb
ror
jl
aaa
xchg
loopne
or
mov
inc
cli
mov
jo
es
xor
dec
stc
stc
push
mov
imul
lods
add
xor
push
cmp
dec
mov
out
imul
sbb
sub
test
cmp
mov
lret
int
xchg
add
push
xchg
xor
adc
aam
pop
inc
stos
fsubrl
and
dec
push
inc
mov
sbb
add
arpl
test
mov
cmp
inc
dec
addr16
jmp
sbb
dec
mov
or
dec
mov
sti
mov
sbb
lahf
push
mov
xor
sbb
in
mov
jmp
data16
mov
ret
ja
fcomps
dec
push
dec
push
inc
jbe
adc
stc
fimull
int3
js
jns
out
mov
xchg
out
push
inc
mov
int
and
test
push
stos
out
ljmp
fsubrs
mov
shlb
scas
shlb
clc
cltd
jnp
push
adc
sub
cmp
sub
xchg
add
jnp
pop
loope
jae
test
push
pop
push
jmp
push
mov
inc
add
xor
enter
fsubrl
mov
fists
lahf
mov
iret
xchg
enter
cs
data16
lods
hlt
imull
addl
pop
or
mov
push
mov
push
push
loopne
les
sbb
in
adc
sti
push
lds
mov
mov
add
stos
movsb
out
or
push
pop
jbe
dec
aam
mov
mov
aaa
lock
or
add
jl
dec
push
push
rorb
pop
jo
cmp
and
popa
mov
xchg
mov
insl
inc
cmp
std
cmpsb
add
cwtl
mov
daa
ficomps
jge
or
sub
sub
jne
mov
movsl
cltd
pusha
mov
push
sbb
push
aad
inc
test
rcl
xor
xor
pop
push
pop
push
js
addl
push
jle
push
into
jnp
push
xor
sbb
sub
adc
outsb
push
push
adc
xor
out
orb
sbb
mov
das
inc
and
mov
mov
lcall
pop
inc
enter
jge
push
jp
cwtl
mov
push
add
adc
sahf
add
hlt
test
or
jg
sub
mov
lds
test
push
mov
or
cmp
lahf
cld
sub
mov
xchg
jns
rcrl
cmp
xorb
int3
lods
into
test
adc
pop
push
xchg
xor
test
outsl
jle
add
push
out
enter
jo
jl
stos
add
inc
fistps
dec
js
mov
lock
xchg
mov
xor
mov
sti
rolb
inc
pop
loopne
mov
pop
sbbb
stos
adc
xchg
sbb
add
repz
stos
xchg
clc
xchg
fistps
lahf
divl
aas
divps
aaa
je
mov
in
arpl
cmp
xchg
cs
data16
nop
mov
dec
inc
and
inc
icebp
and
je
xchg
imul
push
iret
add
jl
jo
inc
mov
pop
js
dec
adc
pop
dec
ljmp
pop
dec
mov
sub
adc
aas
sub
scas
jb
dec
xchg
dec
addr16
sar
or
std
mov
cwtl
out
dec
test
insl
or
dec
cld
ret
lret
orl
mov
test
lock
mov
mov
lock
cs
fstps
es
pushf
les
idiv
dec
hlt
and
cmpsl
fstpl
mov
icebp
inc
and
outsl
pop
fidivrl
sub
lds
sahf
stos
ret
out
sarb
xchg
sbb
test
es
cwtl
mov
and
xchg
outsl
call
outsl
popa
aad
pop
lock
pusha
stos
mov
and
jnp
cli
adc
add
push
or
xor
sahf
cmpsl
mov
aas
pusha
xor
sbb
test
ss
xchg
fiadds
shll
pop
inc
fwait
sub
push
xchg
cld
add
mov
mov
aas
or
push
in
inc
fcoml
test
push
pop
jge
mov
dec
dec
les
mov
aas
clc
dec
sbb
jne
loopne
mov
sti
pusha
out
in
pop
xor
jns
mov
xchg
loope
pop
add
push
out
xor
rolb
or
mov
test
cmp
cwtl
das
mov
push
adc
jle
inc
and
mov
into
inc
fucomip
cmp
xchg
rcrl
mov
cmp
push
inc
push
xchg
fcmovu
pop
popf
adc
mov
jbe
lock
dec
ret
jae
cmp
mov
and
push
mov
test
aad
jp
pop
pop
popf
cmpsl
jo
inc
push
shll
jno
mov
push
jns
cmp
fs
pop
test
fists
pop
push
xor
sahf
inc
aaa
sub
mov
push
mov
mov
jl
push
mov
mov
jge
xor
aaa
scas
leave
push
or
mov
adc
pop
dec
cmp
dec
xor
fsubrl
or
cmp
push
hlt
addr16
inc
movl
adc
daa
fldl
cmp
loope
sub
or
and
lods
ds
push
adc
in
andl
push
test
test
lret
cmp
xor
pop
jle
stos
dec
pop
cmp
lret
jae
push
mov
insl
ret
iret
fadd
jge
sub
jae
outsb
mov
xchg
adc
repnz
sbbb
or
mov
mov
xor
inc
call
push
sub
mov
lcall
add
fistps
cmpsl
jle
test
sub
adc
fistl
mov
mov
fs
mov
aam
cltd
ss
int
cmp
pop
cmc
je
jle
int3
lret
sub
cmp
adc
ja
sbb
mov
call
outsl
pop
test
loop
movsb
stc
pop
mov
inc
pop
sbb
or
leavew
loopne
lods
cmpsb
mov
out
push
push
cli
faddl
cmp
pop
mov
sti
outsl
das
adc
arpl
push
loopne
xchg
adc
ret
pop
les
jecxz
test
mov
mov
cmp
cmp
bound
xlat
jle
push
stos
sbb
mov
nop
les
jmp
jb
xor
aad
aas
clc
nop
imul
dec
mov
sbb
sub
shl
inc
jle
and
sti
jno
call
les
mov
adc
dec
call
fldt
or
sub
pop
aas
leave
decl
jb
push
xchg
dec
ficoms
and
sub
roll
out
idiv
iret
sahf
std
xor
lock
test
sbb
repz
call
movsb
mov
fdivp
mov
inc
mov
cmpsl
addr16
aam
or
es
jnp
insl
push
sbb
lcall
enter
sub
mov
dec
jmp
js
cmp
sti
rclb
inc
cmpsb
sub
cs
push
or
dec
fstl
outsb
clc
enter
scas
pop
fsubrp
out
mov
cli
out
fdivrs
int3
or
call
test
mulps
add
pushf
mov
es
cmp
mov
inc
dec
pusha
dec
xor
dec
and
add
mov
cmp
popa
sar
jecxz,pt
xor
fwait
pop
mov
stos
add
aad
scas
call
adc
or
fildl
cmp
fstl
in
jns
mov
cmp
rorl
lock
outsl
sarl
jne
std
ret
int
pop
aas
lods
mov
js
out
int3
jne
xchg
and
xor
add
inc
out
in
pop
sub
into
loop
addr16
movsl
jp
js
mov
inc
mov
aad
mov
adc
push
jp
pusha
rolb
cmpsb
push
jg
xor
incb
out
in
cmpsl
or
popf
cmp
mov
push
mov
or
pop
mov
sbb
jns
imul
push
call
dec
ljmp
into
into
pop
aam
pop
hlt
shrb
mov
mov
mov
dec
inc
test
fiaddl
stc
int3
lret
pop
inc
ss
xchg
lds
add
mov
test
sub
movsb
cld
sub
out
mov
jg
pop
mov
pop
icebp
cmpsb
aaa
outsb
adc
paddusw
stos
ja
jl
fucomi
dec
stos
push
pushf
push
xchg
jg
xor
aaa
sub
and
out
cmp
dec
mov
mov
or
in
inc
out
enter
daa
fsubrl
shll
into
sub
mov
movsl
ds
test
xchg
fwait
lahf
xor
sbb
test
cmc
dec
xor
mov
insl
jle
fs
js
movsb
pop
pop
into
in
ss
stc
jp
test
fdivl
cmp
rclb
adc
ljmp
xorb
mov
mov
push
and
pop
fiaddl
inc
and
push
push
movsb
lcall
jb
movsl
and
sbb
push
dec
pop
filds
bound
mov
out
fimull
decl
adc
fidivrs
cmp
adc
sub
lret
sbb
out
jno
cmp
js
or
jle
into
outsb
cli
inc
cmc
ljmp
outsl
cmp
jae
cmp
cmp
adc
fs
or
add
push
or
sbb
dec
push
out
mov
mov
in
mov
push
incb
adc
dec
pop
pushf
pop
out
nop
pop
sti
imul
leave
shl
push
adc
jle
negl
adc
mov
mov
pushf
cmp
sbb
and
or
nop
inc
mov
std
inc
pop
dec
loop
out
pop
out
je
stc
jb
push
push
rol
and
fisttpll
jb
lret
loop
pop
ficoms
adc
push
lcall
faddl
scas
inc
mov
testb
int
push
xchg
arpl
push
add
cmp
xchg
lahf
js
jecxz,pt
std
fidivl
cwtl
fs
mov
test
mov
lods
xorl
in
popa
and
mov
xchg
aaa
lock
shrl
fcmovnu
mov
pop
rcl
aam
xchg
jae
sbb
int
insl
aaa
sub
ljmp
mov
lock
mov
mov
outsl
lods
stc
and
aam
and
inc
dec
or
in
cmpsl
sub
lods
test
cmpsl
mov
std
pop
push
iret
inc
outsl
fnsave
int3
clc
add
gs
cmp
loop
mov
xchg
dec
cmp
mov
xchg
cltd
pop
xor
xor
sub
push
xchg
add
xchg
mov
std
xchg
and
rcll
fimuls
cli
ja
mov
push
add
lock
ljmp
or
pop
mov
push
ds
dec
outsl
xchg
dec
movsl
fnstenv
movsb
rcll
repz
ja
dec
xchg
rolb
cmp
ret
push
inc
dec
loopne
mov
mov
or
out
stos
xchg
bound
aaa
sbb
icebp
pop
out
sbb
sub
leave
lcall
sub
inc
jnp
insb
inc
cmp
jle
push
adc
pusha
pop
dec
out
fildll
and
lds
inc
jle
aas
jae
or
inc
popf
popa
sub
jnp
pop
push
stos
lret
jbe
int3
sbb
xorl
cmp
push
das
shll
std
jmp
ret
mov
hlt
fadd
xor
out
inc
cmpsb
xor
or
xor
jge
add
xchg
mov
jp
je
mov
in
jae
cmc
xchg
test
push
nop
in
mov
sti
add
nop
push
push
push
ds
loope
pusha
fcoms
scas
cld
xchg
ret
aaa
sub
pop
lret
mov
jl
ffreep
dec
sbb
xor
jns
shlb
xchg
ror
ret
stos
mov
cmp
jne
inc
in
imul
jecxz
enter
daa
fistl
test
sub
dec
cmp
sub
and
lret
dec
jns
dec
test
inc
add
add
add
xor
pop
pop
mov
js
adc
pop
or
sbb
loope
push
rcr
sbb
inc
sub
fiadds
rol
sub
clc
addb
sbb
inc
lods
mov
test
sub
push
inc
stos
int
ror
sub
xlat
push
pop
ret
xor
lcall
push
mov
adc
test
push
sahf
cmpb
jg
inc
out
mov
push
adc
mov
add
shrl
dec
fcom
mov
cs
insl
roll
push
into
push
pop
sub
mov
adc
outsl
sbb
shl
jmp
stc
push
adc
dec
mov
sub
iretw
aas
test
add
adc
mov
imul
mov
sti
int
ss
test
test
loopne
sbb
pop
mov
nop
xor
les
lcall
cmc
out
sbb
push
cmc
inc
xlat
cld
pop
mov
mov
out
imul
pop
jno
idiv
adc
push
push
cmp
pop
pop
test
fldenv
clc
pushl
jmp
bound
jmp
leave
mov
call
ret
pop
xchg
pop
dec
adc
mov
hlt
fisttpl
scas
mov
mov
inc
and
xchg
aas
pop
in
insl
jb
add
dec
int3
stos
cld
and
xor
shl
iret
xor
std
cmpl
mov
mov
mov
lcall
icebp
gs
rclb
mov
movsl
jp
aas
aam
das
mov
dec
mov
adc
insl
leave
ret
lods
jno
es
xchg
shrl
pop
mov
in
sub
scas
or
icebp
lods
insb
lods
mov
push
mov
xor
mov
arpl
push
sub
jne
test
shll
xchg
jnp
fstpl
inc
ficoml
int3
shrl
pop
icebp
push
inc
stos
cmpsb
lcall
inc
xchg
sbb
push
pop
leave
dec
add
scas
cltd
xchg
js
xor
jb
mov
dec
orl
adc
test
daa
xchg
xchg
test
sahf
aam
shrl
mov
push
mov
fildl
or
repnz
inc
sbb
sbb
jle
dec
roll
cltd
leavew
mov
dec
fwait
mov
scas
ljmp
and
shrb
ds
mov
dec
dec
ret
mov
jne
sub
mov
scas
iret
out
mov
insb
jns
jo
xchg
inc
xchg
testl
js
mov
out
addr16
into
jp
adc
sbb
mov
mov
dec
and
shl
dec
pusha
imulb
xchg
xchg
dec
push
js
mov
fcoml
and
mov
mov
add
pushf
fidivrs
and
popa
pop
imul
lcall
lds
push
mov
dec
pop
inc
sbbl
and
arpl
insl
sub
bound
jge
jg
stos
xor
inc
add
pop
inc
xchg
and
enter
cvtdq2ps
orl
shlb
cmpl
mov
leave
pop
fsubs
push
lea
xchg
jbe
cltd
mov
push
mov
sbb
into
aaa
in
das
decb
inc
pop
addl
enter
mov
dec
mov
lds
pop
inc
pop
xor
in
imul
mov
cmp
cmp
repz
push
jp
inc
je
mov
adc
xor
loop
repnz
fimull
fnstsw
dec
dec
xor
mov
sarl
xor
ds
lret
sub
mov
add
push
and
inc
test
in
gs
lahf
mov
fstps
fsubp
js
adc
pop
dec
imul
push
hlt
and
push
cmp
mov
loopne
loopne
push
call
jp
popl
mov
sbb
fcomps
mov
hlt
sub
push
xorb
ss
cmpsb
sub
cs
inc
mov
lcall
sbb
jnp
int
iret
push
sub
jle
cmp
jg
add
mov
adc
adc
fidivrl
mov
idivl
adc
sbb
mov
cmp
xor
aam
js
shlb
movsb
leave
cmp
cli
pop
pop
loop
std
dec
stc
jle
rclb
call
add
lods
jmp
mov
out
rorl
jne
push
xor
push
cmp
jl
fwait
dec
pop
les
lahf
scas
loopne
test
adc
dec
dec
imul
pop
repz
sbb
dec
cmp
subb
sbb
sub
stc
stc
add
pop
mov
aad
and
divl
sub
sbb
inc
cmp
aaa
into
je
lods
and
sub
pop
lea
test
push
inc
and
adc
lcall
cmp
jno
rclb
inc
aas
dec
push
jb
movsb
cmp
inc
in
dec
and
xor
shll
pop
test
mov
sub
add
cmp
andl
leave
aaa
mov
xorb
mov
das
xchg
and
mov
cmp
es
mov
ljmp
cmpl
sbb
mov
cmp
mov
add
rorb
or
mov
jae
push
push
and
outsl
clc
jns
cli
xchg
imul
ljmp
outsb
pop
pushf
push
inc
stos
xchg
daa
nop
out
adc
jnp
mov
xchg
add
gs
lret
pusha
jbe
cld
or
daa
jecxz
dec
int3
fs
push
lods
test
hlt
cltd
xchg
cmp
icebp
jmp
pop
push
bound
push
add
aas
call
xor
adc
inc
out
stos
in
cmpsl
pop
xchg
call
data16
imul
inc
dec
push
lods
out
imul
sti
mov
pop
mov
mov
push
inc
bound
mov
or
mov
out
xlat
sub
mov
cld
mov
outsb
loopne
hlt
push
imull
cmpsl
jnp
scas
dec
jle
xor
in
mov
jnp
imul
aaa
jmp
xchg
jle
jae
movsl
leave
push
out
popa
popf
scas
mov
fildl
stos
mov
push
push
out
pushf
imul
scas
or
push
mov
mov
pop
ret
mov
jns
dec
hlt
outsb
iret
test
inc
lods
or
or
es
inc
add
ficompl
jno
int3
mov
insl
fisubrs
sub
dec
data16
mov
mov
jmp
movsb
popf
xor
push
fcoml
fidivrl
push
and
cmp
cltd
aaa
stos
add
or
adc
add
adc
sbb
dec
inc
push
aas
adc
scas
mov
jo
sub
and
outsb
cs
and
pop
inc
add
cmpsb
xchg
ja
in
clc
mov
pop
cmp
jno
sub
sub
xlat
cmpb
inc
insb
ds
sbbl
mov
call
push
push
hlt
cmp
test
negl
xorb
mov
fistpl
cmp
js
stos
adc
mov
push
jg
loope
ja
fdivl
add
lea
adcl
movsl
xor
sbb
mov
mov
leave
push
dec
cmp
int
scas
sub
pop
sarl
push
sub
mov
sahf
xor
test
jle
jg
roll
cld
mov
mov
ss
pop
mov
fadds
push
idivl
test
shll
or
leave
cmpsl
into
pop
add
aas
fidivrs
decl
loop
inc
cs
xor
adc
data16
push
lods
rolb
mov
pop
out
xchg
pop
cli
test
sti
xor
out
in
lret
sub
sti
sub
sbb
cli
push
loopne
add
adc
ja,pt
adc
inc
les
jne
xchg
nop
cmp
inc
xor
cmp
xlat
add
jp
ljmp
outsb
mov
cmp
xchg
jmp
pop
sbb
mov
mov
dec
sbb
adc
leave
je
xchg
sub
sbbl
rorb
adc
push
cs
adcl
stos
pop
jl
cmp
inc
sti
flds
dec
lock
inc
ljmp
mov
xchg
roll
aad
std
iret
mov
mov
sub
iret
cmpl
dec
adc
scas
roll
jae
mov
in
jg
cmc
push
call
mov
sub
aam
pop
mov
lret
es
jge
insl
in
mov
cltd
cmpsl
fmuls
jge
jne
add
xor
mov
inc
dec
jmp
pop
mov
add
icebp
inc
test
mov
xchg
push
push
sbb
fucomp
cmp
clc
mov
sbb
ljmp
das
pop
inc
and
out
je
mov
imul
push
add
xlat
cltd
add
and
mov
dec
mov
test
push
mov
sbb
or
pop
fs
or
pop
fstpl
add
sbb
add
add
or
addr16
imul
shrb
aaa
mov
mov
repnz
and
mov
fisubrl
dec
or
pop
mov
push
call
jne
mov
add
js
adc
clc
xchg
fsubrs
mov
and
push
arpl
or
xchg
outsb
jp
jge
mov
cli
inc
insb
sub
std
jle
adc
loope
dec
pusha
sub
out
fisttps
dec
xor
push
jne
inc
lahf
xor
push
test
adc
push
sbb
cmp
mov
cwtl
mov
scas
insl
out
fwait
push
add
push
adc
popa
iret
int3
dec
enter
and
hlt
mov
inc
dec
inc
scas
and
dec
retw
push
orb
xchg
into
cmp
jbe
mov
neg
fmulp
les
lds
out
mov
hlt
cmp
cmc
mov
jge
sub
jbe
js
jge
fsubs
aaa
push
orb
jnp
add
stos
mov
dec
data16
popf
push
and
xlat
xor
mov
and
and
cmp
pop
mov
inc
xchg
lret
pop
loopne
in
fbstp
fadds
jne
fdivs
cmp
sub
fcompl
ds
lret
movsl
ret
call
je
mov
mov
aam
test
add
sbb
cmp
jge
pop
add
js
aad
pop
lret
push
mov
sbb
sbb
movntps
outsb
cmpsb
out
adc
push
push
dec
popl
mov
sbb
iret
xchg
and
xor
int
cmc
shrb
pusha
sahf
pop
pop
inc
inc
adc
push
test
mov
sahf
mov
test
mov
mov
scas
sub
adc
push
ss
fadds
jge
idivl
clc
call
rorl
cmp
push
jp
mov
inc
inc
cmc
push
inc
xor
mov
loop
mov
cmp
sbb
pop
mov
lods
mov
int3
mov
jno
fisttpl
and
ss
pusha
sti
fiaddl
adc
pop
gs
shl
stc
xchg
icebp
pop
sbb
cmp
fsubl
imul
dec
push
xchg
mov
cmp
daa
mov
mov
bnd
inc
jle
pushf
out
push
jmp
jge
cs
std
lock
pop
mov
lods
adc
jl
mov
arpl
pusha
je
mov
jecxz
inc
xor
xor
das
incb
call
aas
je
pop
stos
pop
movsb
adc
clc
dec
insb
stos
fcomp
cwtl
lret
xlat
pop
pop
out
cmp
inc
aaa
inc
jne
fistpll
in
dec
jb
xchg
and
xor
testb
std
jbe
and
dec
sti
mov
rcrl
fwait
lret
sbb
xor
mov
es
push
sub
pop
mov
cmp
push
aam
cmc
lods
ret
pop
dec
mull
fstps
ds
dec
mov
mov
dec
jge
lods
icebp
mov
data16
mov
inc
loope
mov
rorb
xor
test
stc
std
push
fcmovnbe
out
fstl
out
test
out
loope
xchg
jmp
add
in
iret
negb
bts
mov
xchg
sbb
mov
add
sbb
enter
clc
xchg
rorl
or
lods
xchg
cmpsb
sbb
loop
sub
push
test
test
add
ljmp
orb
xor
lock
and
mov
repz
mov
fbld
ret
push
or
fildl
mov
fldenv
push
dec
insb
pop
test
mov
pop
sbb
enter
mov
sbbb
bound
sub
mov
inc
addr16
mov
jp
inc
xchg
mov
ret
in
rorl
jle
loope
in
push
dec
pusha
movl
xchg
lds
cmpsb
inc
stos
cmp
jae
dec
pop
push
insb
sub
mov
pop
xchg
daa
stos
mov
jae
sbb
repnz
mov
or
adc
xchg
push
iret
sub
sbb
in
enter
and
add
lods
arpl
cwtl
jp
mov
sbb
push
cmp
fiaddl
scas
mov
and
in
pop
xor
sbb
push
sbb
adc
call
mov
inc
pusha
icebp
leave
insb
dec
movsb
mov
inc
push
jp
adc
xchg
jge,pn
aas
fistpl
scas
and
sub
xor
sbb
ret
cmp
dec
aad
ret
mov
xor
loop
scas
aas
dec
push
xlat
inc
and
xchg
gs
mov
jne
and
mov
mov
in
xlat
jae
cmp
std
pop
jno
stos
or
cmp
es
lea
inc
and
dec
repnz
lcall
add
test
or
mov
pop
daa
pushf
mov
xchg
cmpsl
pop
or
pushw
mov
loope
sub
imul
or
mov
fstps
xchg
out
mov
mov
cmp
push
push
sahf
jle
imul
sub
pop
sbb
mov
enter
push
sub
cmpsb
sahf
jns
pop
test
pop
xchg
sti
dec
iret
mov
loope
mov
xchg
adc
pop
mov
fdivrs
mov
shl
cmpl
cmp
fnsave
cmc
int
fnsave
mov
sbb
loop
push
stc
mov
scas
add
pop
data16
lods
mov
sahf
dec
out
iret
ds
push
cmpsb
fdivl
push
hlt
xor
mov
leave
push
xor
fdivrl
pop
aaa
mov
imul
add
pop
popa
jns
dec
out
mov
xchg
or
cmp
fcom
clc
inc
sub
mov
xchg
out
sub
gs
orb
nop
mov
inc
dec
fildl
mov
add
add
stos
xor
jecxz
cmp
xor
lea
mov
cs
adc
sub
push
adc
fcmovnb
pop
mov
inc
push
notb
nop
and
xor
jb
pop
dec
test
and
cs
shll
cmp
testb
sahf
cwtl
or
cld
mov
sbb
subl
xchg
mov
dec
mov
loopne
mov
les
stos
sbb
pop
mov
icebp
mov
aam
and
ret
call
ss
insl
mov
andl
jnp
dec
icebp
and
lods
pop
push
jl
adc
into
mov
fucomi
cmp
fists
inc
sub
movsb
lret
test
mov
neg
cmp
sub
cwtl
iret
fisubs
int
pop
popf
inc
xor
cmp
outsl
push
pop
and
sti
add
icebp
pop
xor
iret
arpl
push
pop
mov
sub
sbb
sbb
push
or
push
dec
sbb
pop
mov
dec
add
add
ja
pop
decl
push
xor
imul
mov
jnp
ficoms
jle
xchg
lcall
dec
out
mov
popf
mov
dec
adc
lret
jne
stos
add
push
cmp
xor
jns
mov
mov
out
xchg
sub
mov
fs
add
sub
lds
dec
jnp
adc
jle
cmpsb
cwtl
in
repz
jo
ffreep
sub
in
cld
cmpsb
push
inc
mov
fdivs
push
out
das
into
lods
popf
and
stos
mov
cwtl
xchg
stos
adc
cmp
sbb
pop
das
imul
or
xchg
leave
mov
imulb
ret
fistpl
mov
pop
arpl
movsl
inc
mov
push
or
xchg
jbe
inc
jle
out
mov
xor
int3
dec
cmp
pop
pop
outsl
pop
ficoms
fdivs
cwtl
xchg
adc
popf
cmp
daa
repnz
movsb
ds
shlb
es
sbb
adc
call
imul
test
dec
inc
sub
add
ja
pop
frstor
push
subb
push
or
dec
push
push
adc
sbb
lods
das
test
into
je
daa
hlt
dec
cmp
lahf
cmp
xchg
arpl
ds
or
sub
add
mov
adc
ss
fisttpl
decl
lds
in
pop
dec
cwtl
bound
pop
mov
fdivl
sub
mov
adc
or
xchg
pop
and
andb
mov
cli
clc
and
fildl
push
std
jbe
shrb
sub
push
mov
pop
ds
lcall
loope
daa
push
sbb
aas
xchg
test
and
adc
mov
andl
adc
xchg
mov
and
pusha
fdivs
ret
divl
shll
cmp
cmp
xor
into
rcrb
xor
dec
aam
jbe
xchg
loop
dec
data16
pop
sbb
mov
hlt
in
aaa
pop
fwait
leave
lods
xchg
decb
mov
mov
inc
ja
xor
icebp
cltd
in
or
sti
cmp
xor
pop
movsb
push
gs
loopne
out
leave
pop
push
adc
adc
stc
inc
les
cmp
sub
ja
and
sub
addr16
mov
cmp
adc
cs
int3
aad
and
dec
cmp
inc
mov
and
jecxz
jb
jmp
call
cmp
mov
adc
dec
lods
dec
inc
push
in
fcomi
pop
aas
pop
gs
addl
lods
inc
stos
mov
mov
les
or
pop
lea
cmpb
rcr
lock
les
push
mov
mov
roll
sbb
mov
test
data16
aad
push
and
mov
test
ss
lahf
or
ja
pop
filds
insl
mov
dec
dec
cmpsl
aad
pop
mov
cli
subw
xchg
push
cmp
js
fbstp
mov
sub
lret
popf
into
cmp
popa
push
icebp
frstor
clc
xchg
addr16
ljmp
push
pop
dec
lea
out
popf
add
rcll
lret
push
pslld
add
imul
mov
push
js
dec
push
sub
xchg
bndldx
cli
lods
or
mov
ljmp
ss
xchg
jmp
dec
or
dec
dec
xchg
and
fdivl
mov
loope
push
lods
xorl
ja
loop
sub
add
mov
lods
lea
mov
cmp
lcall
ss
xchg
cmp
out
mov
js
stos
push
test
xor
jecxz
mov
mov
xlat
jnp
mov
mov
imulb
pusha
std
mov
cmp
jmp
rorb
xchg
add
push
repnz
popf
dec
repnz
xlat
sti
sbb
add
sbb
and
scas
xchg
xchg
ret
nop
push
adc
fdivrs
jmp
cltd
sbbl
shlb
inc
mov
and
adc
inc
std
pop
xor
imul
pop
mov
dec
fidivs
pop
lods
sarb
popf
repnz
inc
lcall
sub
push
sbb
int3
jge
mov
xchg
aaa
cmpsl
jg
or
in
lahf
add
or
mov
test
dec
xor
lret
rorl
xor
mov
stc
scas
std
mov
mov
add
mov
dec
jle
inc
aas
cmp
xchg
test
daa
aad
xchg
cmp
scas
jno
mov
sub
in
cmp
cmc
movsl
fdiv
hlt
and
mov
or
aam
test
and
xor
cmp
pop
jne
loope
add
sub
xchg
inc
loope
insb
or
sub
xor
orb
out
and
xorb
mov
dec
or
hlt
push
pop
rcrb
int
sbb
cmp
mov
xor
mov
mov
add
sahf
mov
xor
sbbb
dec
jg
call
leave
mov
sti
xchg
fs
fcoml
dec
int
arpl
add
xor
out
lret
rcll
aas
cmp
insb
stc
or
mov
cmc
pop
mov
xchg
outsl
push
test
stc
adc
push
adc
aad
add
cmp
lods
outsb
and
mov
cli
je
push
in
ja
jg
out
dec
jnp
ja
cli
dec
repnz
mov
inc
adc
cmp
lds
repz
pop
inc
xchg
rcrl
mov
fildll
mov
dec
xlat
jbe
mov
inc
mov
mov
call
xorl
cld
sbb
dec
cltd
jl,pn
pushf
dec
dec
fnstenv
xor
add
mov
das
pop
lea
aad
call
mov
icebp
bound
jg
jbe
sub
int3
pop
pop
or
xor
andl
jb
loope
dec
xchg
rorb
and
es
notb
sbb
in
cwtl
subl
out
xchg
scas
sar
inc
ljmp
mov
sub
lock
cmp
in
adc
sub
xor
ret
push
xchg
push
bound
insl
dec
stos
adc
loope
sti
icebp
rcll
stc
mov
fs
jo
adc
popa
pop
sbb
add
test
mov
or
mov
clc
mov
imul
xor
lret
lods
pop
stos
inc
fs
out
add
xchg
out
daa
dec
push
aad
sbb
add
xor
cltd
fiadds
frstor
pop
add
cmp
cld
aad
sbb
mov
or
fwait
rcr
aas
push
xchg
imul
lods
pop
test
mov
push
xor
stos
in
les
xchg
jae
sbb
mov
adc
jg
aad
rolb
int3
jg
lock
jno
es
pop
dec
adc
inc
es
xor
out
aam
bound
cmp
add
addl
sbb
or
sbb
jp
ret
daa
bnd
sub
sub
jle
or
in
leave
lahf
pusha
cwtl
or
filds
jmp
jge,pt
jmp
lret
dec
mov
push
mov
aam
jb
hlt
mov
push
hlt
add
pop
xor
imul
scas
stc
or
and
iret
dec
pushf
mov
pop
mov
jns
inc
es
mov
jg
push
jl
add
xchg
sub
js
and
pop
mov
mov
pop
rcl
insb
mov
inc
or
leave
shr
xor
sbbl
mov
lret
sub
xor
callw
repnz
fdivrl
stos
dec
and
pop
push
scas
data16
xchg
les
femms
xlat
scas
fdiv
and
nop
sbb
es
push
pop
jnp
inc
into
int3
push
cmpsb
and
daa
in
jnp
mov
daa
aam
pop
cmp
fidivs
hlt
cmp
push
mov
testb
and
sahf
lahf
sub
push
push
adc
test
cs
sbb
jns
cmp
test
pushf
pop
push
js
inc
jns
movb
mov
inc
cmp
enter
cmp
and
adc
ret
popl
fdivrl
rcll
and
es
pop
pop
lcall
adc
pop
cmp
lcall
std
mov
jno
sbb
fbstp
test
dec
fs
mov
cmp
push
add
cmpsb
lds
fsubr
mov
divl
imul
cmp
jb
or
je
xchg
push
xor
mov
xor
in
aam
imul
push
dec
add
cltd
mov
lods
push
push
dec
mov
mov
out
addl
xchg
pop
sbb
loop
inc
sti
xchg
in
mov
sahf
incb
add
cmpsb
pop
xchg
cmp
sub
in
out
leave
rclb
repz
shl
xchg
loopne
sbb
in
sub
xlat
mov
pop
sub
mov
jmp
mov
cs
sahf
aad
ja
nop
sbb
dec
clc
or
scas
sbb
popf
je
stos
xor
cmp
stc
lea
jb
cmp
pop
jbe
inc
adc
cld
and
loope
push
push
stc
pop
stos
int3
rolb
pop
scas
inc
loope
bound
pusha
sub
jb
mov
andl
cmpsb
rorl
xchg
fdecstp
push
int
std
adc
cwtl
cmp
js
inc
mov
jmp
jle
sub
and
lret
fsts
xor
lahf
stos
cmpsb
mov
cmc
mov
mov
push
add
pop
int
mov
cld
cwtl
jmp
xchg
fxch
es
and
jae
ret
cmpsl
rcr
hlt
mov
test
mov
popf
xchg
pushf
mov
xchg
loop
arpl
or
pop
cmp
mov
jl
adc
test
xor
push
out
jne
scas
lcall
in
mov
icebp
outsl
add
dec
pushf
add
stos
das
mov
out
arpl
jnp
xor
push
add
mov
in
add
push
lcall
xchg
outsl
xchg
mov
pop
push
fisttpl
rolb
test
jmp
mov
sbbl
or
out
add
lret
cmp
enter
daa
inc
mov
or
bound
in
xchg
lock
ret
mov
jl
mov
lret
add
out
enter
repz
iret
mov
int3
mov
push
sub
out
mov
inc
lea
in
pushf
xchg
iret
iret
lret
dec
dec
out
call
or
mov
dec
fidivrl
push
pop
mov
dec
out
insb
cwtl
lods
or
pop
inc
jle
lods
xlat
in
lret
mulb
je
fbld
fs
xchg
adc
inc
test
jae
int3
mov
js
ficompl
or
and
jo
stos
outsb
into
andb
ficomps
mov
fisubrs
addr16
lcall
jp
ret
push
pop
ret
out
daa
hlt
xor
dec
arpl
je
mov
sarb
cmp
fcmove
pushf
insl
xchg
cmpl
push
pop
in
loope
fdivrp
sbb
adc
shr
lea
xchg
std
sub
dec
aam
movsb
fistps
pop
push
mov
add
xchg
xor
rcrl
and
adc
jl
rcrl
push
xchg
in
dec
xor
push
scas
scas
mov
int3
hlt
cmp
test
loop
dec
inc
pop
mov
cmpsb
cmpsb
mov
in
fidivl
enter
daa
rorl
sti
jno
push
out
sub
arpl
cli
sbb
sbb
out
dec
and
fnstenv
push
out
adc
cmp
dec
dec
dec
add
ret
adc
pop
add
mov
loope
loopne,pt
jae
ret
inc
subb
mov
rcrb
xor
sbb
das
leave
and
popa
push
pop
shlb
and
pop
mov
imul
call
jnp
sahf
add
fwait
out
push
jg
jg
xchg
mov
mov
add
loop
cmp
ljmp
cmp
test
into
div
adc
lret
and
ds
cmp
dec
pusha
or
or
cmc
jmp
vmovdqa
jae
loop
sub
stc
jg
inc
adc
dec
adc
mov
fstpt
cmp
pop
mov
scas
fsubp
mov
dec
cli
fisubl
and
push
sbb
dec
ja
sti
inc
sbb
rcrl
or
loopne
xchg
cs
mov
xchg
adc
imul
adc
repz
push
iret
sbb
sub
xlat
hlt
fbstp
sub
pop
jmp
pushf
ds
mov
subb
aad
cmp
nop
hlt
sbb
ja
ret
loope
je
jnp
jecxz
mov
aas
jmp
lea
push
clc
call
mov
test
sub
add
fildl
cmpsb
xchg
inc
jno
cmp
cld
out
aas
incl
jb
lret
mov
and
insl
and
pop
loop
negb
shlb
mov
mov
enter
cmpsl
cld
fwait
xor
lret
dec
test
mov
and
lock
cmpsl
push
das
stos
xchg
push
mov
int
dec
aam
adc
and
popf
es
sahf
das
dec
mov
cmpsl
repnz
jg
adc
or
mov
push
cmp
pop
fbld
cmp
sub
fidivl
push
stos
jns
fst
mov
movsb
xchg
and
shr
fs
jbe
dec
imul
movb
jl
dec
push
mov
jae
pcmpgtb
cltd
dec
stos
js
or
mov
pusha
jnp
dec
cmp
test
ret
ja
cli
adc
shll
icebp
or
into
fwait
das
adc
add
jecxz
stc
inc
mov
sub
orb
xchg
adc
xchg
mov
rcr
andl
xchg
dec
ja
lea
inc
mov
cs
add
cs
fcmovne
jae
int
movsb
mov
stos
imul
adcb
pop
cmp
inc
fistl
sub
out
sub
sub
pushf
push
daa
addr16
adc
pushf
and
add
cmp
inc
cmp
pusha
into
bnd
inc
jle
xchg
in
jl
fdivrs
aaa
jae
xchg
rcll
cmp
insb
popf
shr
mov
xchg
jo
stos
loope
shll
inc
mov
dec
imul
jbe
mov
ds
iret
push
pop
rol
dec
xlat
ficomps
cld
mov
jnp
loop
bound
hlt
inc
roll
mov
or
clc
addb
adc
sbbb
int3
clc
lret
icebp
pop
sbb
outsl
lds
pop
mov
out
test
mov
adc
jbe
repz
lret
in
mov
fdivs
jl
dec
pop
dec
add
push
je
jne
pop
and
jo
mov
scas
lcall
cmp
xchg
lods
jo
inc
in
in
cmpsb
sub
pop
in
dec
shlb
push
cmp
cmp
jno
ficoml
ds
cmp
ds
in
subb
mov
push
xor
cmpsl
inc
test
inc
inc
shlb
pop
and
or
xchg
pop
ljmp
pop
inc
add
fsub
push
jne
push
pop
sub
adc
adc
js
fs
ds
mov
lock
sbb
cltd
xchg
mov
aas
stos
and
add
int
dec
outsb
sub
ja
cmp
lcall
jmp
sbb
std
sahf
test
pop
test
lds
mov
jmp
or
jge
cmp
sub
and
arpl
sbb
lret
mov
aad
sub
clc
jne
cmp
into
dec
vpmaddwd
adc
outsl
repnz
loop
fsts
stc
ss
adc
xchg
xor
push
movsb
lods
and
mov
fs
mov
mov
or
push
daa
in
mov
xlat
cmp
in
lcall
cltd
pop
pop
shrb
into
cmp
aam
daa
out
je
push
fs
sbb
mov
cmp
popf
xlat
xor
pop
sub
shrb
jmp
imul
aad
pop
jne
iret
fisttpl
iret
dec
inc
aad
jb
adc
mov
and
lea
add
inc
out
stos
cmp
xchg
pop
xchg
adc
xor
mov
xchg
jae
inc
clc
aas
mov
aas
sahf
pop
mov
dec
sti
or
and
push
out
lods
jbe
neg
cld
std
pusha
pop
pop
cwtl
mov
pop
mov
outsl
lds
pop
or
mov
push
mov
jge
xorb
das
mov
push
mov
test
xchg
loop
ret
mov
lds
jmp
xchg
insl
cmp
inc
mov
mov
push
ljmp
sbb
mov
jno
imul
cmp
shlb
and
sub
xchg
jmp
sti
enter
mov
scas
ljmp
mov
mov
out
sub
scas
push
data16
sbb
outsb
leave
jne
cli
daa
xor
push
cmpsb
or
lea
xchg
jae
mov
xor
sbb
scas
sub
mov
leave
imul
jp
mov
jmp
sti
xor
push
dec
in
sub
xchg
pusha
mov
mov
inc
scas
ss
popa
inc
and
mov
dec
test
jne
sbb
out
popa
lcall
adc
xchg
gs
popl
stos
jecxz
sub
xchg
xchg
fsubs
sub
jp
cwtl
insb
mov
gs
jnp
or
stc
sbb
imul
add
inc
in
push
jmp
push
inc
mov
mov
shl
lcall
xor
sbb
jo
imul
fwait
scas
and
mov
cmc
xchg
xor
cmp
inc
sub
pop
test
ljmp
sbb
inc
les
sub
decb
inc
stc
sbb
fidivl
movsb
outsb
int3
jecxz
and
fiadds
sti
lds
push
std
shlb
mov
cmp
movsb
cmc
pop
mov
jbe
enter
pop
test
adc
shll
mov
or
add
sub
jl
xchg
popf
dec
outsl
nop
fisttpl
push
xlat
xchg
and
or
dec
leave
insl
cmp
stos
gs
js
or
pop
jecxz
lods
imul
xor
xchg
enter
daa
shll
ret
jno
and
test
sub
ds
add
movsl
hlt
and
and
jne
lahf
mov
mov
add
pushf
fbstp
out
push
into
xchg
lcall
sub
pop
subl
push
sub
loope
mov
mov
add
add
rclb
leave
popf
std
mov
add
xchg
mov
mov
mov
movsb
sbb
aad
adc
mov
ja
lcall
mov
std
setle
js
cmp
pop
bnd
dec
and
mov
push
fs
xchg
mov
outsl
inc
xor
push
mov
divl
fwait
lret
cmp
insb
dec
sti
cmp
jns
or
mov
cmc
ja
cwtl
xor
ja
outsl
sar
ss
mov
test
lret
adc
add
dec
aas
lods
or
mov
sub
cli
inc
sbb
in
and
push
sti
mov
sub
gs
jecxz
loopne
mov
pop
icebp
or
adc
push
icebp
push
sub
cmp
sbb
sahf
cmp
sub
fiaddl
pushf
xchg
call
cs
aam
sbb
jo
stos
adc
mov
je
sbb
jecxz
xchg
iret
data16
call
mov
call
rorl
fndisi(8087
test
xor
mov
aas
cmp
xchg
dec
jb
stc
and
add
sar
dec
adc
pop
lahf
test
cwtl
insl
addr16
mov
xchg
cmp
icebp
lret
es
xlat
mov
stos
mov
int
inc
das
imul
sbb
pop
add
xor
outsb
inc
cmc
insl
and
mov
out
add
lods
jp
icebp
sub
dec
pop
mov
lock
and
jge
mov
cltd
popf
dec
shl
inc
dec
sub
xchg
mov
sub
frstor
dec
clc
mov
adc
dec
fs
popa
lea
mov
out
mov
adcl
int
mov
or
pop
pop
xor
xor
mov
shrw
cmp
clc
pop
into
sbb
inc
or
lahf
push
push
sbb
xor
add
je
incl
mov
pop
fdivrl
in
test
scas
popl
mov
cld
loope
ja
mov
insb
inc
mov
dec
orb
mov
cld
mov
jno
out
inc
in
xlat
and
pop
xchg
xor
imul
sub
xchg
stos
sbb
jp
inc
push
subl
insb
flds
jnp
mov
in
es
pusha
add
xchg
filds
lock
jmp
imull
jg
shll
popf
push
push
icebp
mov
adc
xchg
stos
mov
jae
xlat
sbb
xchg
pop
imul
aas
scas
test
push
cmp
cmp
sbb
adc
les
sub
add
arpl
inc
xor
push
js
mov
xchg
xchg
pop
jns
xchg
in
and
ret
sarb
lret
mov
mov
jge
cmp
push
mov
adc
pop
sbb
in
aaa
bound
roll
into
pop
jl
mov
dec
fimuls
mov
lods
or
jnp
lock
pop
pop
sub
cmp
mov
inc
or
dec
cmpsb
das
je
in
pop
mov
mov
in
daa
ror
mov
inc
aas
int
sbb
sub
fsubs
cmp
flds
cmpb
and
loopne
lahf
test
or
test
pop
inc
push
xor
mov
js
testl
cwtl
pop
daa
fdivl
sub
icebp
imul
add
shrb
out
cld
push
mov
push
repnz
test
int
xor
cmp
add
cmp
pusha
lcall
mov
in
sahf
out
mov
andb
jae
add
add
sbb
adc
fisttpll
ss
ret
cmp
fnstenv
into
divl
push
iret
lret
arpl
add
aad
sbb
mov
cmc
ds
lods
outsl
mov
outsb
loop
stc
movsb
xor
add
sbb
lods
icebp
push
xchg
mov
mov
out
push
jae
jae
or
out
fdivrs
in
mov
inc
sti
push
rol
sub
frstor
ret
shl
insb
pop
adc
imul
adc
mov
sbb
fnstenv
xlat
mov
or
andl
adc
dec
sub
sub
pop
aam
nop
test
arpl
gs
flds
in
jecxz
push
test
jmp
lea
inc
loope
ss
push
pop
inc
test
adc
push
dec
dec
les
fistl
sbb
jnp
push
mov
inc
dec
les
fsubl
jle
jmp
dec
sti
rorl
lock
loope
scas
fs
mov
popa
sbb
mov
cld
sbb
nop
lret
xchg
icebp
cld
mov
addr16
add
dec
das
dec
outsb
mov
repnz
pop
aam
jl
ret
shll
add
and
dec
scas
xor
mov
add
test
cmp
adc
jge
jg
mov
mov
xchg
xchg
sub
fisubl
pushf
scas
stos
push
repz
fisttpll
arpl
push
cmp
mov
test
pop
dec
mov
sub
out
sbb
outsb
push
sbb
rorb
sub
fiadds
and
mov
icebp
scas
push
xor
adc
mov
imul
xchg
xchg
mov
shll
xor
dec
jnp
mov
push
mov
add
jg
mov
xchg
jg
out
lock
adc
sub
js
mov
mov
mov
dec
xchg
daa
addl
jl
or
mov
outsb
dec
test
and
push
out
pop
xor
push
sub
subb
xchg
sti
push
test
mov
inc
sub
lea
addr16
and
mov
adc
insb
inc
and
stos
int3
loope
cmp
jmp
and
sbb
lahf
in
xchg
pop
iret
ret
xorl
jo
jmp
test
dec
popf
xor
pop
aam
push
mov
and
je
js
scas
call
jo
adc
and
and
ret
dec
pop
lahf
cld
aas
hlt
pop
stos
adc
mov
mov
ljmp
inc
imull
sub
fwait
lret
mov
fstpl
imul
aad
mov
pextrw
dec
cs
pop
inc
enter
movsb
repnz
or
and
les
adc
jge
test
sbb
mov
or
xchg
pusha
jl
test
pop
push
sbb
xchg
lea
in
scas
aaa
push
sub
outsl
xchg
fwait
cmp
insl
push
push
push
test
cmpsb
mov
push
in
xor
cltd
daa
iret
jmp
cmp
test
inc
xor
push
mov
movsl
insb
popf
movsl
add
gs
push
adc
test
gs
fdivs
test
push
idivl
js
push
sub
add
stc
push
popf
jecxz
scas
xchg
and
pop
scas
adc
jecxz
into
outsb
and
adc
or
orl
js
sbb
gs
and
inc
or
jns
sub
dec
imul
rcrl
aam
mov
test
mov
jg
sbb
push
les
mov
movsb
mov
lods
in
ss
addb
int3
fsts
fcoms
sbb
or
inc
cld
cmp
idivl
mov
inc
into
cmc
fs
lea
outsl
lcall
pop
enter
sub
add
push
xrelease
mov
sub
scas
dec
lods
cli
cmpsb
fisttps
xor
rcrb
in
stc
cmp
add
decb
iret
gs
xchg
loopne
sub
das
pop
pusha
adc
shrl
xchg
into
les
imul
xchg
test
adc
cmp
lock
sub
es
mov
ljmp
cs
nop
pusha
pop
push
dec
rcll
fnstcw
add
outsb
dec
shrl
call
mov
mov
sbb
mov
dec
scas
sub
fstpt
jns
pop
ficoml
inc
push
int3
call
dec
pusha
add
lods
rcrl
sbb
std
push
pop
popf
cwtl
jecxz
inc
mov
mov
mov
cld
inc
mov
lret
add
orb
ret
xorl
daa
mov
jo
test
inc
sub
pusha
inc
nop
es
ljmp
or
into
or
mov
fildl
cmp
lea
dec
mov
xchg
arpl
xlat
imul
fwait
sbb
test
cmpb
imul
mov
rcr
jb
cmp
add
inc
xchg
and
ljmp
or
mov
out
push
dec
ret
leave
stos
push
testl
les
xor
bound
xchg
dec
xlat
adc
lock
xchg
mov
sbb
cmc
xchg
mov
push
fwait
jmp
pusha
push
arpl
outsb
add
incl
adc
incb
or
roll
jnp
xchg
pop
xchg
mov
jb
xchg
hlt
inc
dec
xchg
flds
jns
mov
shlb
dec
addr16
sbb
jno
mov
xchg
out
incb
mov
xchg
data16
xor
int3
sub
mov
idivl
sarl
scas
pop
je
pop
shlb
pop
pop
adc
daa
lods
xchg
pusha
cmp
jne
xor
push
jmp
or
movsl
push
inc
xor
popf
pop
dec
movsl
mov
nop
cltd
inc
stos
lods
mov
and
pop
mov
mov
mov
push
lret
adc
cmp
orb
ret
push
pop
cltd
sbb
cmpsl
hlt
xchg
arpl
adc
or
outsl
mov
neg
dec
cltd
mov
int3
movsb
lahf
ficomps
lock
sub
push
shlb
mov
xor
stos
leave
fwait
or
movsb
xchg
cmp
jbe
add
sub
and
inc
push
jl
loopne
dec
or
cmp
inc
dec
mov
fsubl
xor
xor
cmp
cmp
dec
lds
dec
or
in
ret
enter
daa
into
mov
cmp
push
shrl
sahf
mov
ds
or
and
hlt
push
lahf
out
outsb
push
add
xor
jo
and
push
ss
pop
xlat
cmp
js
inc
mov
inc
mov
push
in
loope
inc
int
lret
sub
jecxz
outsb
test
repnz
sub
mov
xor
sbb
mov
les
ret
push
outsb
inc
push
int
cmpsl
outsl
sub
sbb
sahf
lcall
xor
cmp
shl
xchg
sbb
sarl
add
call
fs
sarb
cmp
pop
cmp
dec
call
push
add
fcmovnb
xor
cmp
cmc
adc
clc
and
into
fsubrs
xor
sbb
outsl
outsb
out
cmpsb
loop
test
stc
adc
ja
sub
jl
insb
cli
clc
data16
xchg
lods
mov
add
out
rorl
cli
fsts
xor
jnp
sti
mov
test
sub
pop
dec
add
je
mov
les
adc
cmpsb
stos
push
sub
xchg
sbb
dec
or
das
push
inc
sub
sbb
pushf
xchg
adc
add
cs
cwtl
out
in
fisubrl
dec
xor
out
fyl2x
and
cmp
and
das
sub
sub
lock
xor
inc
enter
add
stc
fldt
sbb
xor
inc
adc
push
inc
andl
sbb
ja
pop
and
dec
xlat
idivb
shr
outsl
cmc
imul
test
cwtl
sahf
mov
mov
bound
xorl
divb
mov
in
lock
mov
pusha
sti
out
mov
and
mul
loopne
flds
movsb
je
cmpsl
int
pop
mov
mov
and
cmpsl
cmpsb
mov
lea
mov
neg
xchg
shrb
add
mov
testb
int3
push
jns
or
clc
cmp
cmp
ljmp
push
pop
mov
jp
out
mov
push
xchg
fists
adc
shlb
add
mov
xor
sar
mov
outsl
nop
dec
dec
ds
test
scas
jbe
jne
and
mov
pop
rcll
sbb
push
loopne
add
push
ret
pushf
xor
aad
xchg
in
dec
or
fabs
mov
in
pop
sub
fmuls
inc
jge
sti
mov
das
push
xor
or
jne
lods
fbstp
fstp
test
nop
faddl
out
popf
mov
xchg
sbb
mov
and
mov
outsb
sub
sbbl
sub
mov
or
insb
sbb
or
in
add
sbb
cmp
xchg
add
push
jmp
sbb
popf
push
or
adc
insb
mov
sub
jmp
sbb
decb
scas
out
push
adc
pop
adc
add
ret
je
or
xchg
inc
arpl
sub
push
cmc
push
add
push
int3
data16
push
jae
fmulp
pop
push
lds
add
nop
sti
mov
repnz
push
leave
adc
push
movsb
and
cmp
pop
pusha
jbe
cmpsb
and
sarb
pop
aaa
lahf
xor
mov
jl
push
arpl
adc
jecxz
les
mov
mov
and
stos
inc
push
movsb
xchg
test
cmpsb
mov
cmp
mov
mov
cmp
or
jno
mov
push
shlb
jge
ds
ja
adc
fwait
lahf
add
ret
or
add
cmp
xor
gs
fisubrl
inc
pop
lods
divl
fcmovne
push
pop
jg
jb
fucom
movsl
loope
adc
fdivl
loop
roll
adc
mov
ret
xchg
orb
sbb
les
and
sbb
push
jno
aad
jno
and
pop
mov
call
push
inc
pop
pusha
mov
mov
sahf
xlat
push
jae
testl
mov
add
mov
xor
les
jnp
dec
cmp
or
push
imull
mov
repz
imul
fidivl
into
mov
das
mov
outsl
dec
inc
mov
fstps
stc
leave
loope
adc
xchg
scas
add
int
data16
cwtl
xlat
lods
cmpsb
movsb
jne
add
jle
or
inc
xor
in
iret
xchg
dec
sti
pop
or
xchg
rolb
mov
loopne
lock
insl
mov
adc
pop
adc
repnz
sbb
jmp
xchg
jmp
sbbl
outsb
sub
sub
inc
xchg
mov
inc
pop
addr16
xchg
inc
cs
mov
aad
hlt
jp
push
cmc
xchg
dec
xchg
orl
je
inc
jecxz
pop
cs
push
lcall
imul
call
mov
push
pop
pop
pop
jle
aaa
aad
dec
test
fwait
pop
and
dec
inc
fwait
dec
flds
push
pop
aas
mov
imul
addr16
shll
pop
imulb
cmpsb
std
mov
data16
mov
test
movl
loop
xchg
mov
xor
dec
lock
lahf
das
in
mulb
pop
add
aam
fcomps
es
adc
dec
lahf
jae
cmpsl
int3
push
mov
jns
cmp
mov
mov
mov
jl
and
jmp
dec
mov
inc
rorb
iret
fidivs
cmp
jmp
rclb
js
leave
xchg
sahf
mov
ljmp
cmc
pop
dec
xorl
sti
sub
mov
es
lods
sub
sub
pop
int
cltd
xchg
ja
xor
mov
mov
jb
xor
movsl
ss
out
fwait
xchg
and
push
push
inc
or
or
test
fwait
dec
add
push
xchg
movsb
cmc
rorl
dec
jecxz
in
push
icebp
mov
fdivp
mov
call
aas
int3
dec
insl
dec
add
adc
pop
mov
sahf
lahf
sub
ret
ja
cmp
mov
sub
jns
into
lods
xchg
pop
and
addl
out
inc
pop
sub
jle
mov
sub
fstpt
or
mov
mov
mov
jle
lds
jo
ret
outsb
and
mov
dec
popa
jae
in
push
int
loope
stos
aad
mov
push
inc
jmp
xchg
pop
mov
iret
mov
sbb
je
imul
push
pop
es
adc
outsb
ret
fistpl
rcrb
test
arpl
xchg
or
gs
rolb
lods
int
mov
lock
loop
add
jp
aam
xor
push
adc
stos
je
mov
fsubs
leave
mov
movsb
lods
les
gs
jbe
mov
sbbl
or
aaa
pop
mov
add
shll
lcall
xor
out
stos
scas
aam
push
and
push
mov
push
outsl
xor
inc
inc
xchg
cmc
cmpsb
cmp
jne
mov
mov
daa
int3
pop
mov
jno
jmp
sub
mov
cmp
cmp
ds
das
cmp
aaa
push
out
and
rclb
lret
add
mov
xor
xlat
fcom
popf
repnz
aam
dec
js
call
push
push
nop
imul
and
dec
outsb
dec
iret
mov
rcrb
ds
bound
sbb
push
sub
lock
and
sub
push
je
lock
lods
aaa
sub
pop
pop
xor
cmp
cwtl
pop
xchg
mov
and
sahf
jp
stc
test
fmul
adcb
cld
jg
call
sub
scas
cmc
xchg
adc
mov
ss
jo
fadd
in
mov
sub
call
cmpl
push
ja
sahf
cwtl
inc
cmc
pop
add
outsl
sub
xlat
loop
inc
out
andb
lds
jl
jns
idivb
sti
lret
aad
stos
popa
clc
cli
aas
dec
fidivl
dec
cwtl
jnp
cmp
push
cli
push
mov
es
mov
cmp
imul
imul
outsl
repz
scas
push
aaa
sbb
xlat
lods
adcl
loopne
mov
jmp
es
in
cs
rcrl
icebp
fidivrs
inc
inc
out
or
pop
lock
jecxz
jecxz
aas
push
push
inc
repz
shlb
jge
xor
movsb
adc
ds
int3
and
xor
and
inc
mov
pop
ja
add
and
repnz
dec
imulb
out
dec
lahf
mov
adc
sub
orl
and
push
or
mov
push
lock
cltd
adc
leave
scas
mov
into
scas
push
lahf
js
or
xchg
mov
cmpsl
idiv
dec
lcall
mov
pusha
addr16
mov
lahf
popl
mov
xor
movsl
rclb
nop
sub
test
jae
mov
push
push
incl
cltd
fucom
mov
clc
mov
popf
xchg
jmp
pop
notb
call
out
jnp
cmp
push
mov
add
cltd
int
xor
loop
mov
jne
dec
or
cmpsb
test
in
xchg
rcrb
cmpsl
rol
addr16
lret
cmp
outsb
and
dec
jno
add
mov
test
xor
jge
or
test
xchg
cmp
xchg
mov
mov
sub
dec
pusha
outsl
cmp
xchg
std
je
adc
ds
daa
mov
mov
ret
bound
mov
add
shrl
mov
or
sub
sub
push
jp
aas
addr16
sbb
lock
jnp
jnp
jle
push
push
in
jecxz
pusha
or
jne
test
xchg
inc
cs
scas
jae
mov
push
nop
mov
popf
shr
lods
mov
dec
loop
stos
push
shl
and
add
sbb
mov
sahf
scas
je
jno
lahf
aad
adc
bswap
lahf
std
mov
rcr
mov
hlt
mov
std
arpl
sub
inc
mov
or
loopne
sbb
xrelease
xchg
cmp
cmpsb
int3
gs
pop
fs
xor
adc
popa
lds
in
rol
hlt
mov
sub
mov
add
movsb
aaa
or
cs
jbe
dec
mov
push
xchg
jb
mov
or
push
add
ret
or
fisttpl
test
scas
mov
inc
adc
mov
add
cmp
mov
fwait
adc
mov
roll
enter
daa
lret
xchg
inc
sbb
jno
insb
sub
jg
cmp
sarl
xor
sbb
shlb
out
inc
fstpt
test
xchg
test
rorb
pop
sti
mov
jmp
push
repz
loope
daa
cmp
lret
mov
sub
aam
adc
jne
stc
xlat
mov
das
sbb
inc
mov
fisubrl
push
ja
xchg
int
xchg
pop
mov
sbbl
jle
mov
rcrl
nop
in
sahf
sbb
filds
subb
adc
jle
bound
enter
push
add
cmp
orb
in
adc
lret
rol
ljmp
inc
xchg
or
cmp
cmc
and
subb
test
jmp
aaa
mov
adc
dec
scas
add
inc
jno
pushl
lods
je
and
stos
outsl
addr16
jb
test
and
dec
in
movsl
cmp
mov
inc
fs
stc
mov
pop
stos
and
adc
loopne
les
std
dec
repz
and
shrb
xlat
in
popa
loope
shlb
mov
xchg
mov
jmp
cld
dec
cs
out
ret
nop
int3
faddl
inc
pop
xchg
xchg
fsts
into
jecxz,pt
arpl
push
sti
and
popf
fisubl
pop
shl
adc
or
push
xchg
fwait
pop
retw
mov
inc
aam
ja
notl
cltd
dec
cmp
movsl
and
test
int3
divb
daa
sbbb
ret
jbe
in
jl
xchg
cld
repz
lret
sarb
mov
mov
fldt
mov
mov
cmp
pop
mov
mov
sbbb
xchg
sub
push
mov
aaa
cli
inc
lods
pusha
adc
mov
ret
and
pop
div
pop
push
cmp
shl
aaa
cmp
test
imul
inc
lock
ret
fisttpll
stc
mov
out
fs
sbb
mov
cld
dec
and
mov
push
stos
xchg
dec
pmaxsw
xchg
cli
xchg
mov
xchg
push
arpl
lea
pop
call
add
fstpl
popa
addr16
negb
lea
jmp
mov
sbb
jg
rcrl
lahf
out
mov
adc
out
cmpsl
mov
add
std
xchg
xor
push
or
int3
sub
xchg
mov
mov
mov
ss
ja
fwait
rorb
inc
outsb
inc
inc
push
repz
dec
repz
jne
mov
mov
movsl
movsb
out
jp
pop
bound
push
jns
sbb
xchg
repnz
mov
sub
je
push
sub
mov
mov
test
pop
leave
jae
adc
cmp
cmpsb
mov
fistpll
fistps
jl
jbe
nop
mov
push
jae
je
push
push
movl
sbb
add
stos
jns
and
std
jp
sbb
fldt
jb
in
xlat
add
out
ficoml
cmp
inc
iret
inc
ret
aas
pop
mov
out
hlt
shll
arpl
out
push
inc
fldenv
add
in
pop
xchg
push
jb
xchg
ficompl
fmuls
nop
repnz
push
mov
pop
xchg
xchg
aas
fidivs
popf
add
loope
cld
mov
jle
je
ja
enter
rclb
sub
rorl
jge
cmpl
or
dec
add
dec
jl
fisubrl
dec
js
stos
push
mov
inc
jo
mov
scas
xchg
sbb
and
cmp
push
add
ljmp
xor
aam
lret
cmp
in
jno
adc
cmp
add
pop
movsl
and
or
mov
test
pushf
es
vphadduwd
fisubrs
and
js
fcoms
pop
cmp
adc
or
fdivl
pop
sub
into
mov
rclb
push
ss
movsl
orb
cmp
adc
push
jp
clc
int
inc
das
sub
mov
pop
xor
mov
cmpsl
mov
mov
sbb
sahf
aad
out
dec
popf
orb
jg
fsubrl
mov
int3
test
xchg
adc
nop
add
fdivrs
inc
in
imull
nop
cmpsl
rorl
sbb
mov
inc
into
fs
cmc
call
pop
loop
ljmp
stc
out
push
adcb
fiadds
test
xchg
adc
iret
mov
jecxz
out
add
stc
iret
test
adc
aaa
sti
insb
and
sub
inc
xor
jae
mov
lret
adc
mov
mov
add
ds
pop
repz
aad
xor
scas
sbb
cmp
enter
mov
xor
ret
pushf
inc
cmp
mov
lods
nop
cmpsl
out
xchg
dec
scas
cmpb
insl
push
fxch
dec
jmp
jecxz
lret
in
pop
daa
sbb
mov
add
xor
pop
je
add
cmp
xor
cmp
sub
cli
pop
or
push
inc
xor
out
lcall
test
inc
dec
mov
scas
and
jmp
shll
jb
hlt
mov
lock
mov
mov
xchg
int
imul
jle
das
xor
jge
ja
mov
outsb
movsb
das
orb
mov
ljmp
add
add
cmp
dec
nop
call
cmpl
mov
lods
lret
lcall
in
ss
mov
mov
sarb
mov
test
mov
mov
pusha
jmp
test
fnsave
icebp
fstl
outsl
cmp
pop
dec
mov
fldz
inc
xchg
xchg
sti
cmp
push
ds
pcmpgtd
cltd
cmp
xor
inc
dec
mov
jnp
pop
dec
ficompl
sbb
sbb
cli
in
or
test
fwait
insb
ficomps
xchg
shlb
add
loopne
lcall
xchg
xor
mov
in
mov
xchg
fsub
cmp
mov
sbb
ja
js
inc
lret
rolb
mov
push
mov
add
jne
jg
mov
sahf
jno
pop
pop
ss
fcoml
jns
cmp
xchg
mov
jmp
mov
iret
mov
outsl
in
sub
mov
je
insb
movb
les
jle
gs
dec
push
int
inc
ljmp
dec
dec
loopne
xchg
inc
inc
das
add
mov
xor
pop
fcmovnbe
push
lret
cmpsb
icebp
stos
in
fidivl
adc
sti
sbb
int
imul
scas
cmp
mov
sub
lcall
ret
fwait
pop
jmp
push
shll
gs
fmull
repnz
scas
pop
inc
icebp
int
fcmove
sub
out
stc
int3
cmp
mov
ficomps
mov
sar
in
gs
push
repnz
movsb
dec
mov
jbe
ret
mov
pusha
out
call
jo
or
cmp
fbstp
xor
aad
out
fs
outsl
sahf
shlb
scas
adc
loope
popa
cmp
dec
inc
repz
cmpsb
les
in
push
sbb
enter
lods
jno
fldcw
cmp
mov
ja
pop
movsl
sub
and
add
lahf
adc
mov
in
sbb
sbb
xor
cmp
out
ja
dec
or
js
scas
push
push
jle
cmp
xchg
fsubl
sub
jge
pop
outsb
jae
jne
lahf
int
shrb
mov
fwait
out
sbb
aad
mov
mov
and
or
int
out
sub
xor
popf
xor
jb
out
cmpsb
pushf
sahf
arpl
test
cli
andb
jg
fildl
mov
fs
cmp
xchg
dec
cmp
test
imull
cs
push
shll
cmp
push
jl
and
into
inc
pusha
ja
scas
lret
scas
bound
loop
cmp
stc
movsl
les
add
les
lods
inc
inc
testb
pop
out
fcoms
mov
shlb
pop
sti
sbb
pop
xchg
mov
dec
lret
jno
push
imul
popf
push
adc
jmp
imul
xchg
call
mov
ljmp
stos
mov
mov
in
xchg
repz
js
cs
movsb
pop
aad
inc
dec
nop
adcb
or
jbe
flds
je,pn
stos
and
jo
sub
lea
dec
or
xchg
mov
mov
xchg
pushf
adc
lds
pop
lods
xchg
jo
mov
inc
inc
or
mov
xor
nop
dec
dec
sub
and
sbbb
mov
dec
std
aas
in
cwtl
inc
movsl
cmpsb
mov
in
cmp
stos
lods
mov
lret
sahf
push
mov
subl
das
popa
clc
mov
stos
sub
loopne
mov
dec
ret
mov
add
fmull
aaa
push
cmpsl
enter
inc
fdivr
icebp
in
sahf
lods
divb
mov
mov
mov
xchg
ss
rorb
add
test
jno
inc
rcrl
pop
das
cmp
adc
ljmp
xchg
aam
je
in
movsb
insl
repnz
inc
jnp
push
sbb
pextrw
or
insb
cltd
jb
mov
imull
mov
jle
xor
sub
test
or
or
xor
lcall
push
jmp
push
xor
inc
mov
icebp
fs
cld
cld
lds
lock
lret
or
inc
sbb
xchg
daa
push
mov
push
dec
mov
aam
lahf
ja
push
iret
dec
cmp
xchg
inc
jo
push
mov
pop
lods
dec
mov
scas
fidivl
cmp
dec
bound
mov
stc
addr16
mov
xor
inc
mov
fimull
push
xchg
xor
jp
adc
mov
pop
iret
insb
xor
jmp
xor
cmpsl
pusha
fdivl
sbb
pop
mov
and
lcall
adc
push
popf
inc
xchg
xchg
mov
or
or
pop
insl
adc
sub
lea
xchg
xchg
repnz
je
xor
lock
iret
mov
xor
pop
and
mov
inc
fbld
or
push
xor
fiaddl
filds
pop
icebp
jns
fdivrp
push
dec
popf
rclb
pop
mov
and
leave
cmp
movsb
fmul
xor
aaa
fdivl
lods
dec
jge
and
mov
or
add
xor
dec
push
out
cli
push
push
mov
js
push
ret
push
out
lahf
and
cmp
jge
fwait
in
jmp
adcb
inc
or
in
dec
loopne
enter
daa
enter
fbstp
jno
mov
insb
shll
cmp
dec
ds
and
fsubrs
test
mov
pop
xor
cltd
clc
pop
jo
mov
pop
mov
push
imul
int3
movsl
jecxz
insb
sbb
outsb
pushf
lea
push
ds
fld
sbb
hlt
mov
or
scas
int
imul
adc
or
xor
mov
hlt
mov
dec
les
sbb
faddl
cmpb
jg
fisttps
mov
xor
mov
jmp
mov
dec
enter
sub
fdivs
mov
lret
cld
sarl
out
xchg
jmp
into
sub
inc
cmc
jbe
jge
or
outsl
test
and
mov
xlat
mov
add
jmp
data16
mov
dec
inc
out
mov
cli
or
in
out
cwtl
sti
lret
incb
pop
gs
lret
test
bound
jp
pinsrw
andb
xchg
mov
into
pushf
cmp
adc
sub
pop
jbe
mov
inc
pushf
xchg
lds
jmp
fcompl
dec
and
xchg
dec
xchg
nop
pop
dec
pop
dec
insb
xchg
adc
mov
fnstcw
xor
mov
jg
or
pusha
lea
xchg
call
das
cmp
pop
gs
lock
sbb
ljmp
call
pop
inc
and
pop
cmp
fsubr
dec
mov
push
rol
fucomp
idivb
xchg
std
out
push
add
mov
dec
mov
repz
cmp
or
sahf
popf
mov
jecxz
lock
je
cmp
lds
aam
add
ret
dec
clc
jbe
or
insl
inc
or
xchg
insl
cmpsl
xchg
ds
mov
and
adc
mov
xlat
mov
mov
jne
pusha
jno
sub
faddl
callw
xchg
xor
clc
lahf
lds
xchg
fld
in
ljmp
pop
pop
mov
cld
and
pop
dec
lea
hlt
pop
in
fwait
inc
add
inc
call
mov
subl
test
inc
loop
outsl
mov
sbb
mov
pop
sbb
pop
fwait
xor
fcompl
fadds
or
or
aad
fwait
sbbb
inc
cmpsl
cmp
lahf
ja
in
xchg
jbe
mov
xchg
pop
mov
scas
ja,pn
add
dec
sub
ljmp
rcl
mov
sbb
pushf
fwait
jne
inc
xorl
xor
jns
pop
jg
push
xor
fucom
leave
cli
int
popf
dec
lret
in
addr16
nop
sarb
adc
mov
pusha
data16
pushf
mov
out
push
xchg
fucom
pop
dec
jmp
mov
fists
adc
xor
xor
leave
or
pushf
mov
popf
insl
inc
lret
mov
dec
jnp
stos
shlb
sbbl
scas
push
push
mov
jb
iret
sbb
aaa
ret
lcall
sub
arpl
fstps
loop
sub
and
ret
inc
out
and
fidivl
jmp
out
int3
adc
and
lds
adc
ja
scas
leave
mov
push
push
jbe
pushf
or
jge
leave
jp
pop
jg
aaa
sbb
push
add
sbb
dec
vsubps
xor
add
ss
das
pop
outsl
and
jmp
cmp
popa
js
sub
adc
cmpsb
lret
in
lods
mov
and
daa
arpl
adc
in
sub
jno,pn
ds
repz
ds
js
lret
test
mov
adc
insb
movsl
and
out
dec
js
pop
push
pop
stc
cli
lods
push
mov
fdivl
fildll
pop
push
outsb
cmp
adc
loope
jo
push
jecxz
add
mov
mov
jae
sub
push
sub
int
aam
sub
dec
adc
dec
jl
mov
jl
sbb
sahf
test
loope
sbbb
mov
in
cmpsb
xchg
mov
sahf
mov
ss
out
fsubrs
imul
icebp
adc
movsl
ror
rcll
cmp
adc
or
cmp
cmc
cmp
movsl
outsw
xchg
cwtl
stc
adc
add
mov
or
jno
loop
out
out
iret
jp
ds
xor
xchg
in
push
jl
sti
jns
add
gs
gs
sub
loop
daa
sub
fucomip
repnz
xchg
repz
jbe
jge
aad
add
out
cmp
fldl
add
sub
repz
inc
leave
es
add
cs
mov
fidivrs
insl
dec
lret
cmpsl
iret
inc
cmpsb
sub
fnstenv
je
xlat
jmp
mov
xchg
aad
inc
call
scas
ljmp
inc
das
test
into
xor
inc
lds
xor
xchg
mov
jae
push
jb
pop
dec
dec
sbb
ret
pop
popf
idivb
xor
mov
and
dec
sbb
je
lret
jl
movsl
mov
outsb
mov
sarl
pop
into
mov
popa
movsl
mov
dec
insl
add
mov
mov
fsubrs
leave
stos
dec
adcl
mov
lods
or
jno
add
lock
mulb
iret
inc
jo
xor
repnz
pop
mov
dec
lret
cmc
idiv
fimull
out
ljmp
sub
stos
push
adc
rclb
iret
repnz
jae
inc
test
xor
stc
mov
test
dec
ud0
enter
out
ret
lcall
or
xchg
fwait
arpl
les
daa
test
nop
xor
dec
dec
in
in
pop
xchg
lds
mov
dec
cmp
dec
test
inc
dec
pop
fwait
incb
xchg
adc
dec
pusha
dec
jg
push
mov
add
mulb
add
in
xchg
push
xor
addr16
scas
popa
sub
pusha
lds
jo
jp
lret
divl
pop
mov
jnp
mov
ja
inc
in
fs
pusha
adc
push
fbstp
enter
jbe
inc
or
jae
ret
cmc
push
pop
lcall
or
push
mov
aam
pop
mov
jb
cs
out
arpl
push
add
pop
adc
xor
ret
pushf
pop
mov
pusha
arpl
scas
fiaddl
jb
or
inc
cmp
outsb
xchg
out
out
push
int3
cld
push
mov
dec
jb
fiadds
mov
or
rorb
mov
lret
leave
push
adc
cwtl
push
mov
fisubl
popa
push
sbb
pop
or
fadd
int3
or
roll
movsb
in
jl
cmpl
sbb
jp
or
push
scas
push
rcl
and
xchg
movsl
push
xor
nop
inc
mov
mov
in
sbb
and
daa
and
cmp
test
jg
out
sub
cmp
insl
loopne,pt
pop
movsl
inc
loope
and
pusha
xchg
lahf
fsubrp
sbb
cmp
daa
add
mulb
lret
sbb
das
and
dec
js
test
mov
add
loope
lret
and
in
sub
dec
outsb
pushf
cmp
sarb
pop
adc
push
mov
mov
and
pop
ds
xchg
lods
sub
mov
lcall
mov
or
dec
jmp
sbb
mov
jg
mov
imul
xchg
jns
icebp
je
adc
ljmp
stos
stos
sbb
cmpsl
mov
lret
out
shr
call
or
aas
into
lock
ja
shl
outsl
sbb
fiadds
stc
lret
adc
aam
add
push
mov
adc
lods
notl
in
movsl
jno
cli
jno
mov
push
out
pushf
in
mov
lods
sar
mov
jge
arpl
mov
pop
inc
mulb
mov
imul
inc
repz
sbb
sub
push
cmp
xchg
jnp
daa
jne
sub
dec
lods
mov
in
mov
adc
adc
xchg
icebp
nop
adc
mov
mov
ret
scas
imul
inc
pop
xchg
add
enter
ss
inc
rorl
cwtl
xchg
popa
dec
repnz
daa
pop
xchg
outsl
gs
dec
bound
inc
pop
cmovns
adc
std
jb
push
pushf
dec
xchg
fldenv
cmp
pusha
and
add
or
xor
lahf
cwtl
jbe
inc
mov
or
mov
pop
aam
lret
lret
jmp
cmp
add
mov
popf
das
decb
mov
sbb
inc
aam
sub
ret
addr16
es
je
jl
jmp
lds
sarb
hlt
inc
lods
ja
es
jno
addr16
es
pop
out
shll
rolb
icebp
add
test
out
mov
cs
xchg
nop
inc
fst
scas
and
adc
repnz
mov
and
adc
int
lock
pop
lcall
loop
mov
fidivrs
cltd
pop
or
add
xchg
inc
test
push
xchg
adc
dec
mov
fisttpl
cltd
popf
push
push
add
rolb
inc
imul
jmp
enter
push
pop
xchg
adc
adc
mov
xchg
xchg
adc
add
jl
mov
cmpsl
inc
cmp
imul
in
dec
mov
aad
and
sub
sarb
adc
xchg
jmp
cwtl
shl
aad
sub
pop
scas
shll
arpl
add
jb
mov
jle
xchg
adc
data16
pusha
lods
jl
cmp
mov
arpl
sbb
mov
push
and
sbb
inc
push
leave
stos
mov
in
sbb
fsubrl
scas
cmp
push
dec
and
sub
flds
ret
xor
hlt
dec
push
arpl
sub
ret
inc
in
xchg
cltd
js
xchg
inc
rolb
int3
out
add
adc
fsubp
imul
shrb
mov
sbb
clc
out
movsb
jns
mov
jbe
and
jge
ret
stos
sbb
push
dec
aaa
xchg
jmp
or
fisttpll
jl
mov
inc
push
sti
popa
jl
cmp
add
and
push
ja
das
outsl
sbb
add
loope
jns
aam
lds
cmp
test
gs
fwait
inc
cmp
mov
dec
xor
and
lahf
std
stc
jnp
jo
pusha
test
sarl
xor
sbb
pop
in
cmp
iret
and
push
or
loope
mov
mov
outsb
clc
add
xchg
aam
adc
inc
and
negb
mov
test
add
mov
subb
mov
pop
lods
jno
lcall
sbb
ret
sbb
pop
ret
test
jo
jg
add
mov
daa
dec
mov
andl
jecxz
xchg
repz
loop
stc
mull
adc
mov
pop
cmp
pop
sub
into
rcll
jne
lret
movsl
popa
xor
cmp
loop
pop
cmp
out
adc
push
sbb
jae
movsl
adc
dec
lods
fisubs
adc
out
xchg
movsl
cli
movsb
out
shlb
sub
addr16
daa
adc
sar
stos
test
sahf
loopne
and
movsb
adc
or
les
adc
in
jns
xchg
add
imul
imul
sti
addr16
pushf
cwtl
dec
dec
jmp
mov
out
aad
into
loope
out
jae
dec
mov
fwait
inc
int3
scas
cltd
fchs
and
lods
iret
add
iret
xor
mov
jns
lods
sar
pop
repz
adc
pop
scas
dec
fstl
sbb
pop
cmp
call
aas
mov
and
testb
push
dec
adc
shrl
scas
xchg
std
fisttpl
mov
mov
outsl
movsb
mov
mov
xchg
cld
cmc
in
lock
pop
repnz
dec
jl
popf
test
lock
das
ffree
adc
iret
push
sub
ret
idiv
repz
inc
fisubrl
repnz
cmp
mov
inc
pop
jnp
loop
test
arpl
mov
int3
popa
imul
fnstcw
sub
pop
mov
push
push
mov
addr16
push
pop
mov
xchg
std
in
scas
jge
popa
mov
pop
shrl
xchg
sbb
test
push
cmovno
add
adc
and
mov
mov
dec
frstor
test
pop
outsl
xchg
insl
lahf
sbb
call
jge
cmp
add
push
shl
add
pop
cmp
jbe
cmp
movsl
or
aaa
in
or
xlat
mov
adc
mov
rcrb
or
and
int3
test
mov
sti
out
dec
inc
sarl
dec
test
outsb
bound
lea
sub
test
push
mov
addr16
or
push
add
fstpl
fidivrl
daa
jne
mov
mov
rcr
hlt
xchg
xchg
outsb
lret
pop
mov
fidivs
cmp
in
or
jg
es
push
cwtl
imulb
xchg
add
out
icebp
mov
or
jns
sub
inc
push
nop
nop
sbb
pop
mov
iret
cmp
ret
xchg
pop
cld
stc
cwtl
hlt
xchg
out
arpl
nop
inc
jmp
aas
or
cmp
add
dec
dec
sub
shrb
add
mov
ffreep
orl
bnd
adc
movsb
add
je
push
dec
jbe
flds
sbb
xchg
cmc
or
push
cmp
shlb
jl
iret
dec
dec
adc
test
xor
mov
rorl
rolb
out
inc
mov
xor
in
jmp
push
enter
daa
les
inc
cmp
loop
sub
xor
ds
movsl
dec
jmp
jae
sbb
push
inc
pop
les
xor
mov
jae
or
js
out
mov
push
pop
test
lods
aam
fdivrl
stc
sub
jmp
adc
jb
jno
jo
pushf
cmp
cwtl
sbb
aam
mov
mov
and
mov
mov
and
adc
sub
imul
sub
push
lcall
mov
jb
sahf
xchg
popa
test
std
enter
pop
jg
adc
movsb
mov
ljmp
leave
dec
cmp
popf
and
lret
add
pop
cmp
cmp
fs
or
push
mov
shl
xchg
sub
jbe
icebp
outsl
and
dec
loop
in
stc
cmp
rolb
add
clc
xchg
dec
mov
mov
or
mov
push
arpl
xchg
lahf
out
sti
xchg
dec
adc
gs
sahf
loopne
inc
daa
pop
test
fildll
iret
xor
andb
xchg
int3
add
popf
mov
shrb
adc
pushf
inc
int3
mov
adcl
fildl
nop
leave
std
mov
call
mov
jne
cmp
jp
mov
mov
lea
sub
sub
dec
pop
cmpsb
jl
adc
fimull
call
pop
fcmovnb
rolb
xor
fstpt
push
xchg
lods
jb
adc
dec
jge
inc
and
pop
cli
sar
jbe
testb
sets
xor
popf
mov
mul
sbbl
inc
mov
sbb
mov
mov
lock
int3
add
mov
xchg
aam
movsl
sbb
test
cmpsl
insl
fistps
dec
jb
or
inc
adc
sbb
cmp
mov
mov
ljmp
cltd
test
sub
aad
lods
inc
sbb
xor
add
mov
pop
int
clc
mov
xchg
aad
mov
popa
mov
lea
stos
pop
clc
enter
jl
movsl
mov
cmp
mov
ret
das
cltd
test
xor
cmp
mov
lea
inc
test
loope
xchg
stos
sbb
adc
fsubs
push
fs
gs
js
dec
call
ror
adc
jnp
sub
xchg
mov
popf
mov
and
pop
jnp
ret
sbb
inc
arpl
push
mov
or
jne
je
mov
sbb
out
xchg
adc
jns
pop
lahf
xchg
jg
push
orl
out
xorb
test
and
sub
sub
mov
out
insb
dec
xchg
and
jle
pop
xchg
in
sti
add
mov
rcll
push
dec
ss
xchg
es
dec
out
push
test
push
popf
or
jbe
mov
push
add
sahf
movsl
fcompl
fldt
imul
iret
scas
mov
pop
adc
dec
sub
xchg
sbbb
push
mov
inc
arpl
cmpsb
inc
out
lock
or
mov
cld
xlat
rcll
mov
pop
fsubl
lds
cmp
mov
ret
bnd
mov
hlt
gs
cmpsb
mov
jbe
push
sarb
dec
negb
dec
jbe
aaa
adc
addl
imul
dec
sub
inc
xor
sbb
scas
stos
inc
shll
jne
cmp
mov
inc
dec
andb
ror
inc
enter
daa
ret
jg
cmp
imul
cmp
arpl
ds
out
sti
movsl
push
add
stos
jae
lahf
cmp
push
push
xor
mov
xor
aad
js
pop
pop
xor
js
fsubs
cmc
push
push
push
pop
xchg
loope
pand
and
sub
aam
outsb
lds
adc
dec
repnz
iret
dec
adc
and
dec
mov
test
and
add
and
int
bound
sub
sbb
stos
test
lcall
xor
cwtl
xchg
in
sbb
dec
mov
xor
and
addb
dec
mov
js
mov
push
test
ficompl
sbb
cmp
pop
and
mul
adc
shrl
outsb
or
stos
and
pop
jmp
xor
sbb
xchg
mov
fsts
lods
jno
pop
adc
lods
lods
jmp
mov
insl
addr16
outsl
out
or
add
std
std
sar
xor
imul
jp
pop
mov
push
cmpsl
imul
shl
mov
adc
fdivs
out
in
mov
pop
add
mov
out
pop
out
jb
out
ds
or
nop
movsb
fwait
sbb
adc
inc
repnz
je
and
jecxz
adc
outsl
or
jno
pop
call
stos
int3
or
adc
cs
jae
pop
pop
jle
and
mov
inc
lods
clc
push
aas
out
jmp
jb
pusha
push
dec
hlt
sahf
xlat
and
in
rorl
mov
leave
or
std
sub
cwtl
cmpsl
fisttpl
mov
std
in
xorl
xchg
mov
and
lock
dec
sbb
mov
cmp
pusha
mov
es
and
dec
insl
xor
sbb
icebp
out
mov
xlat
mov
ficompl
popa
mov
dec
xchg
xchg
sarb
sub
push
mov
mov
lcall
inc
xor
clc
imulb
xchg
adc
pop
ljmp
mov
stos
push
and
out
neg
dec
xchg
in
cmp
push
cmp
lods
ud0
sub
mov
xlat
push
xchg
push
dec
test
cli
imul
push
aaa
rcl
imul
fwait
pop
add
mov
arpl
xchg
and
mov
clc
xor
insb
or
repnz
in
jle
xchg
add
push
mov
movsb
sub
ss
insb
ja
test
mov
add
mov
hlt
mov
or
mov
lahf
out
jb
movsl
jae
jns
icebp
xchg
dec
jl
sbb
or
pop
add
sub
dec
jbe
and
mov
mov
mov
dec
jnp
into
mov
add
pop
pusha
jle
jo
xor
xchg
adc
jl
dec
mov
xchg
movb
push
je
imul
mov
test
and
cltd
les
adc
scas
out
xor
push
push
xchg
test
iret
mulb
insb
pop
push
jbe
sub
jg
push
scas
jp
icebp
add
xor
hlt
fidivl
add
xchg
pop
or
out
and
test
mov
cmp
leave
das
jnp
movsb
sbb
jbe
cmpsl
jge,pn
data16
jno
or
adc
add
jl
imul
lock
cmpsb
xor
jne
sahf
scas
mov
lret
cltd
aam
cltd
rcll
pop
mov
cmpsb
pop
jg
in
mov
lock
ret
cmp
push
dec
jno
inc
xchg
sub
xlat
mov
cltd
lret
insb
add
pop
cmpl
pop
aas
mov
inc
insb
test
hlt
push
push
xor
lock
cmp
js
mov
fisubrl
push
fsub
fisubrl
fmul
jmp
xor
jmp
xchg
shrb
pop
mov
andb
aad
pop
sbb
push
push
xchg
xchg
jecxz
fidivrs
jmp
pop
sub
test
mov
in
cmp
es
adc
push
dec
lcall
mov
adc
pusha
mov
pop
rolb
fcoms
mov
insl
lret
mov
inc
fneni(8087
cmp
imul
inc
mov
jl
into
cmc
and
outsl
loop
aam
sub
push
adc
ret
jo
and
lcallw
and
push
mov
ja
xor
xor
sti
in
xchg
adc
jl
jg
outsl
loopne
ret
stos
pop
ret
adc
lock
inc
inc
inc
les
xor
xchg
dec
xor
sbb
adc
cwtl
xlat
and
sub
test
mov
cltd
inc
xchg
jmp
dec
les
mov
sar
nop
jg
dec
dec
cmpsb
xor
sbb
test
roll
jb
imul
sub
xor
clc
pushf
adc
adcb
rcrl
inc
push
ret
leave
aas
mov
jb
in
dec
imul
pusha
in
pushf
fstpt
testb
std
rorb
cmp
bound
jbe
add
and
lret
cmpsl
arpl
xchg
outsb
mov
icebp
inc
lock
mov
jp
imul
inc
outsl
push
ret
mov
cmp
insl
lods
fists
push
dec
adc
icebp
ja
lods
and
and
loope
daa
mov
push
push
pusha
int
and
test
aad
out
xchg
push
popf
ljmp
insl
jnp
clc
add
inc
xchg
push
fcmovnb
ljmp
mov
stos
std
or
scas
xchg
xor
pop
push
push
cmp
add
sbb
repz
jl
add
sbb
jge
xchg
and
test
test
xchg
add
sbb
mov
xchg
push
stos
ja
add
scas
xor
push
clc
jmp
xor
sbb
loop
lret
fwait
jmp
mov
icebp
cmp
add
sub
xchg
jp
mov
arpl
scas
jne
out
mov
cmp
out
push
sbb
je
xor
ja,pn
adc
xchg
out
sti
add
inc
xlat
and
push
jmp
mov
and
push
stc
stc
jnp
enter
subb
fists
jge
out
enter
or
out
jae
mov
popf
push
icebp
and
ret
pop
imul
out
sub
scas
push
les
push
sub
in
lods
stc
iret
push
leave
lret
ret
inc
pop
mov
xchg
sub
popa
fsincos
inc
hlt
mov
mov
fldl
addl
or
pop
cmp
fidivs
add
aam
add
imul
shll
pop
jbe
mov
fstpl
shr
aaa
xchg
cmpsb
mov
sti
clc
lahf
add
clc
ret
pop
fisttps
xchg
xor
shlb
scas
imul
cmp
iret
push
sub
xchg
cmpsb
fcoml
in
mov
adc
nop
cmp
jno
xor
sub
jmp
add
popl
cmp
and
mov
lahf
jns
dec
push
mov
bound
xor
dec
mov
pop
xor
mov
jae
sbb
addb
jns
cmp
cmc
lods
dec
outsb
mov
adc
add
lea
rcrl
mov
mov
ja
and
je
int
add
sub
sbb
test
jp
push
mov
mov
dec
sbb
pop
sahf
jnp
jp
lods
pushf
push
cmp
jg
push
test
and
out
fs
push
adc
adc
lahf
add
cmp
into
loope
mull
arpl
push
push
pop
rcr
loop
aaa
sub
or
pslld
out
sbb
xchg
outsl
rcrl
pop
dec
adc
jnp
mov
scas
jo
sbb
lods
jp
rorb
mov
or
xor
ss
xchg
into
aaa
xchg
xchg
push
pop
loope
adc
rorl
mov
mov
dec
sbb
dec
aad
xlat
bound
ds
mov
inc
inc
je
push
or
aad
fwait
ds
pop
adc
dec
add
daa
fnstcw
addr16
jne
aad
aas
sub
add
test
test
adc
add
sbb
shl
cmp
out
in
out
ffreep
inc
loop
mov
jb
fwait
cmc
dec
loop
call
shr
repz
testb
std
ja
lock
sbb
xor
mov
es
bound
cld
mov
mov
xchg
jge
subb
iret
cpuid
inc
adc
mov
or
mov
es
leave
jg
xchg
mulb
cmpsl
shlb
fnstsw
cmp
adc
mov
call
ret
mov
pushf
shlb
in
test
xchg
push
pusha
std
jo
xchg
test
clc
cmp
out
xchg
sbb
jp
sbb
and
stos
in
mov
fists
icebp
xchg
bsr
jle
cmp
inc
cmp
test
mov
xchg
xor
dec
jns
mov
stos
jmp
sub
int3
xchg
cmpsb
roll
popf
pop
fwait
jge
in
push
dec
ss
jno
je
leave
push
sti
push
cltd
xchg
xor
enter
aas
nop
xchg
lahf
inc
push
mov
or
mov
lods
lods
dec
ja
push
lea
ss
inc
sub
mov
rorb
fbstp
xor
mov
out
out
xor
push
jns
nopl
sub
addr16
sub
inc
mov
and
mov
xor
repz
insb
mov
loop
jmp
jmp
dec
mov
fsubl
xor
lret
cmp
rolb
int3
jae
xor
push
icebp
outsb
dec
popf
jle
je
imul
push
add
sub
jecxz
mov
nop
sub
xchg
inc
scas
mov
in
push
lods
and
xchg
mov
push
ret
lahf
pop
fdivs
hlt
sarl
jo
sbb
addb
sub
inc
inc
push
lods
cltd
xchg
divb
sbb
pop
imul
shr
mov
cld
cli
fcomip
mov
push
ljmp
cltd
push
jbe
inc
jecxz
dec
dec
inc
sbb
xchg
aaa
push
pop
add
add
sbb
dec
into
push
adc
push
fs
sub
xchg
and
push
cmp
xor
and
cli
xchg
xor
xchg
outsb
enter
daa
sarb
ja
mov
sub
into
xchg
cmp
jecxz
ds
adc
imul
lahf
cwtl
addl
add
xchg
movsl
icebp
xchg
shll
js
cmp
mov
add
mov
sbb
and
sbb
outsb
out
notl
rcr
mov
in
ds
addb
sbb
cmc
pusha
mov
outsb
andb
xchg
xchg
cwtl
lret
push
int
cmpsb
dec
sub
and
sub
cwtl
lcall
pusha
mov
cmp
xchg
ja
sahf
push
icebp
mov
push
setno
mov
xor
mov
les
ss
idivl
mov
jg
dec
or
cmp
shrl
inc
das
mov
xor
add
outsl
mov
adc
jge
adc
mov
add
mov
ljmp
mov
adc
xor
or
adc
out
jmp
gs
rclb
pop
add
inc
adc
lods
les
notb
adc
outsb
xlat
mov
or
cmp
mov
addr16
sbb
iret
enter
in
aam
fs
inc
sub
and
repz
je
dec
call
js
out
cmpsb
dec
inc
call
daa
and
jb
or
mov
adc
add
sbb
in
inc
jbe
das
inc
std
xchg
xchg
aas
int3
or
in
pop
outsl
inc
and
xchg
xchg
mul
std
push
iret
mov
mov
sub
adc
cld
int3
xchg
cltd
lret
test
jp
pop
aad
mov
roll
xor
cmp
aad
pop
mov
fmuls
lock
loop
jnp
add
add
mov
je
xchg
lods
stc
jo
mov
inc
sbb
out
push
js
enter
test
sar
dec
mov
test
sbb
push
and
fnstsw
aaa
mov
ljmp
and
mov
mov
pop
je
xchg
shll
int3
out
nopl
adc
xor
leave
mov
fwait
scas
mov
loopne
in
test
mov
xchg
sbb
add
xlat
inc
out
or
xchg
fwait
lods
push
jae
lock
or
in
icebp
call
mov
loope
clc
popf
daa
xchg
out
xor
sub
mov
addr16
ja
jo
dec
aas
inc
mov
fwait
and
dec
mov
shlb
out
mov
test
out
wrmsr
sbb
jns
xchg
sub
adc
mov
aad
mov
cmp
add
jge
mov
scas
mov
mov
lcall
in
out
pusha
dec
xor
data16
xchg
lea
sub
test
push
mov
jmp
mov
inc
insl
test
cli
aad
sbb
lret
mov
mov
sbb
sub
adc
and
mov
mov
cmpxchg
arpl
lds
lock
pop
rcrb
repz
push
mov
lret
push
xor
imul
or
mov
es
rorb
push
mov
loope
xchg
shrl
lret
loop
inc
jbe
inc
cltd
jge
push
loopne
lods
add
adc
add
push
clc
jl
mov
push
dec
lahf
sbb
in
sbb
jmp
scas
daa
xor
lahf
aas
ja
mov
add
mov
ja
loop
inc
in
outsb
and
enter
daa
mov
jb
jno
outsb
adc
mov
cmp
out
stc
movsl
jb
cmp
push
cli
dec
lahf
mov
sbb
test
adc
fcomps
test
pop
iret
pop
std
js
fstps
pop
icebp
hlt
subl
fs
cmp
sub
xchg
pop
outsb
push
insl
mov
mov
out
in
sbbb
sbb
xlat
fidivs
sbb
fwait
xchg
and
adc
fldt
arpl
repz
cmpsl
inc
pushf
lcall
xchg
mov
sbb
bound
sahf
rcrl
xorb
jg
mov
mov
mov
mov
and
fs
ret
and
hlt
clc
fadds
mul
outsl
mov
cmp
pop
dec
cmp
sub
jns
daa
into
and
outsl
xor
mov
xchg
stc
lret
push
or
sub
and
mov
mov
dec
stos
cli
push
jp
ss
xchg
in
test
shl
jge
aas
gs
push
inc
loopne
adc
movsb
adc
push
imul
cmp
repz
dec
dec
xchg
xchg
mov
sbb
repnz
loopne
mov
and
shlb
mov
jmp
aam
cs
aad
pop
mov
adc
mov
mov
add
sub
mov
jecxz
int3
mov
lea
call
push
pop
and
xor
pop
pop
pop
sub
or
insb
inc
std
lcall
imul
cmp
and
fs
mov
or
aad
add
lds
cwtl
xchg
cmp
lock
jp
nop
dec
cld
divl
mov
mov
mov
jo
pop
in
lret
xchg
adc
aam
xchg
bnd
push
sub
movsb
inc
and
rcl
dec
pop
sbb
mov
dec
aam
lods
fs
mov
addw
lods
loop
arpl
pop
sbb
shrl
pop
add
test
and
fcomp
loop
in
clc
mov
jno
adc
ljmp
cwtl
pop
movsl
add
lret
out
and
xchg
or
jge
jnp
test
arpl
adc
rcrl
dec
inc
ljmp
out
sub
shrl
das
mov
inc
ret
mov
jbe
jg
std
add
fldl2e
pushl
jmp
aaa
or
adc
adcl
cmp
cmp
mov
ja
adc
dec
mov
adc
mov
mov
mov
sbb
enter
dec
mov
jge
out
out
rcr
sub
mov
insl
adcl
out
lcall
cmp
dec
addr16
add
jp
aam
mov
cli
dec
insb
pop
inc
and
dec
lahf
jle
adc
in
sbb
pusha
ljmp
xchg
pusha
scas
fs
mov
and
push
ja
aad
int3
dec
inc
mov
cmpb
and
cld
push
sbb
xlat
arpl
and
jnp
and
cmp
adc
pop
iret
jb
mov
fsubrs
hlt
push
cmp
arpl
shlb
rol
push
cmpsw
mov
xchg
movsb
out
mov
push
outsb
jbe
repz
ficomps
stos
lds
push
shlb
repnz
cmpsb
leave
or
leave
movsb
inc
push
push
xor
imul
and
mov
mov
or
out
push
add
jl
xchg
out
dec
lods
adc
xor
push
xor
loope
lea
xor
push
mov
jno
sbb
cmpsb
mov
enter
daa
mov
mul
jno
ret
xchg
sub
adc
adc
clc
rcrb
movsl
jns
stc
and
roll
push
xor
xchg
dec
add
push
jnp
inc
add
inc
jae
pop
idivb
js
or
push
cld
lahf
loope
push
arpl
jp
xor
ret
outsb
mov
adc
xchg
lcall
insb
test
xor
jge
or
and
aad
int
popf
jecxz
fdivp
inc
pop
es
lcall
repnz
xchg
or
repz
test
jle
mov
mov
mov
sub
gs
and
call
imul
xor
mov
rorl
jns
into
or
cmc
cmp
sahf
xor
dec
dec
loop
popa
or
or
adc
repnz
data16
iret
dec
lods
das
cmc
das
mov
adc
cli
or
xor
inc
jmp
mov
cmp
loopne
lods
ds
ds
adc
add
loope
repz
mov
pop
insl
mov
pusha
cld
push
cmp
push
push
xlat
pop
xchg
mov
xchg
inc
test
pushf
jl
pushf
inc
cs
jmp
loopne
cs
dec
into
nop
jmp
int3
dec
and
enter
arpl
popa
cmp
je
pop
pop
jecxz
fs
jle
ret
lea
call
and
pop
cli
adc
leave
dec
dec
ja
fistpl
fs
lods
lods
xor
push
inc
inc
xor
inc
jb
stc
mov
and
xchg
mov
negb
flds
std
insb
and
cwtl
dec
les
scas
scas
pop
mov
stos
and
and
scas
mov
jmp
mov
and
lock
icebp
das
testb
mov
outsb
repnz
fisttps
es
sub
lea
les
mov
mov
imulb
push
clc
mov
std
insl
push
mov
out
adc
sahf
nop/reserved
decb
jp
sub
push
test
mov
clc
in
fwait
mov
ljmp
jne
push
sub
js
in
or
push
and
pminub
jo
jbe
imul
or
xchg
dec
cltd
test
sub
in
in
roll
xlat
leave
fwait
or
testl
rcll
cmpsl
or
js
push
push
mov
or
xchg
fnstsw
ja
xor
in
mov
into
mov
jge
dec
jp
mov
and
mov
data16
out
int
and
xor
ss
inc
notl
mov
popa
or
mov
and
jp
loopne
mov
push
insb
lret
jnp
push
fistpll
stos
fsub
sahf
mov
pusha
test
ds
xor
and
sbb
inc
enter
jg
push
cmp
cmp
repz
mov
mov
and
sub
sbb
mov
xchg
scas
fimuls
rcll
gs
rorl
ret
push
xor
pop
sbb
sub
or
lcall
fidivl
call
aas
jne
pop
divb
leave
inc
rolb
mov
mov
je
andb
shrl
jo
cmp
jle
lods
shlb
mov
imul
xchg
jnp
mov
cltd
ss
adc
js
cmp
shrb
lds
sub
push
push
push
rcrl
adc
cmpsb
call
stos
ret
jno
daa
mov
das
bnd
cmp
sub
ja
cmp
jns
sbb
scas
and
lahf
cmc
add
push
or
mov
xor
jb
or
cmp
lret
mov
fwait
pop
outsl
pop
or
or
data16
and
xchg
pop
outsb
pop
xor
adc
outsl
sub
cmpb
sbb
lods
mov
dec
aam
shr
push
mov
out
xlat
sub
and
movsl
lods
or
mov
loope
sbb
push
sbb
test
test
ds
andb
es
dec
mov
push
xlat
fs
cmp
mov
enter
mov
mov
vdivsd
fwait
sarl
sbb
js
or
bswap
jmp
out
cmc
add
xor
mov
loop
push
push
stc
cmp
cmp
adc
sub
lods
push
mov
ss
push
sub
xor
outsl
xchg
jg
inc
sti
dec
in
inc
xchg
adc
xchg
loopne
pop
mov
xlat
mov
sbb
and
pop
js
or
sahf
outsb
sbb
cmp
mov
sub
imul
pop
push
lock
jmp
mov
cs
stc
mov
movsb
test
nop
repnz
dec
andl
jae
cwtl
or
je
pavgw
and
sbbl
push
movsb
pop
mov
jp
adc
push
mov
push
jle
inc
or
iret
inc
dec
out
aas
test
cmp
mov
sbb
shll
std
push
negb
and
adc
jge
outsb
xor
dec
cmpl
lds
add
shll
jmp
sbb
mov
cmp
jnp
stos
mov
insl
xor
fwait
dec
dec
add
cmpsl
mov
dec
mov
lods
cmp
das
mov
lods
sub
imul
jl
shlb
cmpsl
sub
mov
test
add
insb
jl
fnsave
inc
sub
sub
ljmp
es
sti
sub
mov
xchg
xchg
push
fists
jnp
mov
add
pop
dec
xor
and
inc
xchg
in
test
mov
xchg
mov
fst
fsubrl
or
cmp
push
add
xor
dec
daa
xor
fiaddl
mov
mov
xchg
fistl
mov
fstpl
outsb
ja
fisttpl
popf
scas
xor
loop
mov
mov
dec
pop
rolb
out
daa
mov
fs
out
lods
icebp
fisubl
adc
aas
xchg
push
push
sub
mov
xchg
jp
lahf
xchg
mov
loopne
xor
and
jle
aaa
xchg
in
mov
pusha
and
dec
xchg
push
icebp
jno
adc
inc
sarl
xor
and
popf
sbb
mov
jmp
shlb
mov
sbb
outsl
lock
push
enter
xor
iret
xor
rol
in
rcrb
mov
add
in
dec
push
arpl
les
adc
push
add
in
xchg
xchg
push
cmp
int3
sub
pop
and
ret
dec
xchg
test
pop
cmpsb
les
or
jge
stc
lret
movsb
pop
pop
js
iret
sub
jge
imul
sub
or
or
jecxz
daa
dec
mov
cmp
negb
out
xor
xchg
mov
scas
les
and
nop
cmp
mov
mov
cmpsb
imul
and
enter
daa
mov
sbb
in
mov
cmp
jno
movsl
xchg
inc
lahf
adc
mov
out
test
ss
xor
and
int
lcall
stc
loopne
sub
push
daa
or
fs
and
sar
dec
sub
test
adc
dec
shlb
push
push
ficompl
mov
xchg
and
sarb
lock
movsb
scas
xor
dec
and
sub
pop
xor
and
push
lcall
aam
add
mov
pop
test
mov
jg
inc
add
ja
je
pop
ficoms
ss
lret
xchg
jne
mov
sbb
call
fs
pop
xor
sub
into
into
ss
lret
xor
scas
outsl
sbb
aas
loop
or
lock
mov
add
iret
data16
inc
pop
lods
std
xor
mov
and
outsl
add
mov
ret
adc
out
and
test
sbb
jl
dec
adc
loope
imul
ljmp
fiadds
sbb
jne
sub
popf
inc
dec
sub
jo
lret
pushf
fwait
cltd
jne
sti
inc
cmp
repz
add
jmp
loope
mov
arpl
fxch
sbbl
xor
movb
call
and
pop
ds
in
adc
and
dec
and
add
inc
scas
inc
xchg
and
inc
imul
movsb
jb
cmp
dec
xor
hlt
mov
negb
or
cwtl
les
mov
adcl
lret
inc
bnd
out
int
pushf
adc
das
mov
xchg
mov
ret
std
push
sti
es
lds
dec
stos
cmpsl
mov
xchg
pusha
icebp
shlb
movsl
neg
mov
iret
jno
and
xor
fistpl
and
inc
rolb
sub
sbbl
push
das
mov
es
arpl
xchg
int
insl
ljmp
sbb
stos
xchg
scas
imul
jmp
jmp
cmp
pop
sets
add
inc
xor
xchg
mov
movsl
push
dec
jl
aad
adc
xor
dec
cli
or
xor
hlt
fwait
push
cmp
add
leave
decl
je
daa
mov
mov
and
jb
sub
xor
pop
push
xchg
test
pop
int3
dec
nop
push
jecxz
sbb
mov
mov
repz
inc
stos
aam
scas
lcall
mov
imul
push
xchg
xlat
fidivl
out
dec
mov
sub
andb
gs
adc
insb
mov
mov
jle
mov
nop
pusha
mov
daa
jae
xchg
or
into
inc
fidivs
jae
pop
addr16
rolb
inc
mov
mov
cmp
fpatan
and
leave
sbb
clc
int
jae
jb
movsb
sub
push
pminsw
adc
mov
mov
add
out
pop
jmp
adc
cmp
push
arpl
xor
push
jecxz
ficoml
pop
ror
adc
xchg
xchg
shlb
mov
pop
in
out
leave
jo
movsb
out
adc
push
mov
mov
adc
sbb
and
aaa
or
cmp
jl
movsl
pop
dec
stc
icebp
dec
push
flds
fidivs
int3
push
mov
dec
cmp
into
inc
inc
lds
out
shr
in
or
add
daa
mov
mov
inc
sub
mov
cmp
hlt
ds
das
out
mov
enter
adc
push
scas
arpl
test
inc
add
sbb
nop
mov
js
sbb
push
lret
jnp
cmp
sub
lret
xorl
enter
cwtl
sbb
enter
cs
push
cmpsl
dec
adc
scas
cmp
es
mov
jl
push
pop
hlt
cmp
mov
sahf
dec
pop
mov
sbb
dec
jg
jp
mov
fisubrl
fs
xor
movsl
fdivs
cli
fmull
sbb
or
enter
fnstcw
pop
test
xor
sbb
test
pop
dec
loop
fisubrs
cmpsl
push
and
sbb
das
mov
lods
in
push
mov
outsl
cli
mov
filds
shll
or
loopne
out
xor
ret
jle
ret
ljmp
jecxz
sub
add
rcll
aad
sbb
mov
xlat
fsubl
sub
xlat
mov
loope
or
fwait
lock
mov
nop
jl
mov
inc
mov
flds
lahf
inc
je
jb
jecxz
sbb
call
mov
int
adc
add
cld
fucomi
je
pop
xchg
std
lds
rorl
test
and
dec
lods
lcall
lds
test
loope
insl
std
popa
shlb
jg
mov
in
into
pop
mov
sbb
cld
mov
loop
mov
xor
mov
sahf
dec
lock
pop
in
xchg
pop
cmp
cmc
sbb
aam
push
xor
mov
es
mov
xor
inc
cmp
inc
mov
cmpsl
inc
inc
lods
adc
cmp
repnz
jp
iret
das
test
rclb
xor
mov
mov
lock
jae
fnstsw
sahf
clc
sahf
mov
xchg
or
push
ljmp
leave
pop
push
stos
cmp
push
sub
adc
iret
maskmovq
divl
add
aas
push
adc
out
xor
dec
jecxz
shrl
mov
sbb
sub
or
test
xchg
jle
push
pop
mov
add
imul
ljmp
lahf
dec
or
bound
jns
dec
mov
push
aas
mov
push
xorb
andl
inc
mov
mov
dec
add
mov
dec
and
fdivs
push
jb
jns
jbe
add
xchg
mov
mov
scas
sub
and
data16
and
cmp
std
xchg
sbb
or
xchg
jnp
or
jle
cs
in
fcoms
fildll
mov
nop
jmp
jmp
xor
push
adcl
mov
jl
lret
stos
test
cld
jnp
pushf
push
push
imul
scas
pop
fsts
cmp
inc
iret
out
inc
movsl
ret
pop
and
hlt
subl
inc
or
and
or
bound
aaa
fimull
add
add
add
add
hlt
fsubp
xor
ffreep
xchg
push
mov
scas
idiv
leave
out
xchg
movsb
jb
push
push
insl
mov
jbe
add
fnsave
clc
or
pop
and
mov
les
mov
dec
or
scas
subb
jle
mov
push
mov
test
cmpsb
jno
pusha
in
icebp
and
inc
dec
dec
daa
mov
divps
jle
sub
xchg
inc
cmp
nop
jmp
movsl
xchg
orl
lahf
push
test
push
adcl
lret
out
xor
mov
pop
xchg
add
pushf
pop
sub
ret
push
and
xchg
ja
fsubl
dec
jmp
jle
fldcw
add
adc
add
es
popl
adc
std
mov
push
cmpsl
and
mov
stos
int
cmp
and
mov
push
mov
xchg
jbe
sahf
lock
addb
mov
mov
mov
icebp
mov
jne
mov
ss
movsl
cmp
jmp
sti
negl
rsm
sar
jmp
or
cmc
pop
jp
xor
test
ret
stc
pop
and
adc
bound
add
lea
mov
inc
repz
aad
and
in
rclb
sub
mov
rorb
fsub
pop
mov
daa
dec
imul
add
repz
push
fs
imul
sbb
inc
sub
outsl
mov
icebp
push
es
mov
cs
or
nop
push
lods
or
inc
popf
mov
je
ja
jecxz
insb
pop
mov
mov
enter
and
arpl
lods
and
fistpl
in
pop
cmp
sahf
inc
lahf
in
push
aas
xchg
jl
and
mov
push
adc
and
sti
std
or
cwtl
cmp
rorb
data16
into
mov
inc
mov
nop
xor
cli
push
dec
das
jb
mov
inc
and
lcall
xor
insl
in
daa
dec
inc
cmp
mov
cmp
mov
mov
adc
push
or
bound
in
fimull
lock
pop
aad
dec
rcll
popf
rcr
movsl
aam
clc
fsts
dec
test
lahf
icebp
jmp
pop
cld
daa
pop
stos
jne
out
jno
or
out
ret
clc
orps
and
ret
cltd
stos
cmpsl
and
mov
stos
sub
dec
dec
scas
and
popa
js
sbb
iret
xor
fwait
lahf
and
ret
add
xchg
add
or
jle
in
mov
cmpsb
mov
scas
mov
leave
add
dec
jbe
jb
dec
aaa
push
mov
fstpt
dec
push
pop
mov
cmp
sub
dec
xlat
bound
xor
and
xchg
insl
push
lret
sbb
push
out
pop
scas
sub
pop
push
scas
sbb
out
adc
mov
xchg
icebp
insb
jbe
push
jnp
and
or
mov
mov
fisttps
insl
xchg
jg
mov
inc
hlt
fildll
push
inc
pop
jns
adc
push
mov
bound
test
scas
sbb
mov
imul
scas
push
sub
adc
pop
pop
iret
dec
mov
pop
pop
jnp
hlt
into
fsubrs
fnstcw
xchg
xchg
inc
loope
and
std
in
xchg
push
cmp
int3
jmp
les
data16
fimuls
mov
shrb
repnz
leave
pop
lcall
mov
mov
jge
push
sbb
fdivl
add
js
sub
xlat
pop
dec
push
lahf
sub
xor
test
stos
scas
popa
adc
and
pop
xor
or
push
subb
jecxz
test
in
fsubs
enter
daa
mov
pop
mov
xchg
mov
scas
cmp
ficompl
movsl
pushf
addl
mov
out
push
push
idivl
push
mov
add
sbb
xchg
push
fiadds
js
mov
pop
imul
fldcw
xor
add
xor
pslld
popl
ja
sbb
iret
mov
popa
aas
and
mov
das
int
sbb
sub
addb
stos
mov
push
or
inc
adc
fdivrp
dec
sahf
xchg
sub
mov
adc
data16
cmc
nop
mov
cmp
fs
call
ss
push
cmp
cmpsb
idivl
lret
push
rcll
or
idivl
mov
inc
xor
and
imul
xor
inc
adc
iret
rolb
sbb
sub
mov
cmc
cli
or
and
in
sub
into
sti
or
decb
cmp
mov
aam
pop
fnstcw
add
lea
repz
jmp
js
es
xlat
pop
cs
adc
mov
pushf
lock
enter
sbb
in
shl
nop
xor
pop
dec
std
xor
mov
dec
fnstenv
je
iret
jecxz
pop
je
lea
lea
pop
call
mov
icebp
xchg
add
loope
xchg
dec
sbb
fmull
daa
sub
inc
mov
ja,pt
sub
cmp
shll
nop
mulb
std
scas
cvttps2pi
push
aad
mov
add
sbb
xlat
cld
stc
dec
leave
lret
mov
leave
mov
in
lock
pushf
push
push
cmpsb
in
mov
arpl
xor
stos
call
push
insl
int3
mov
pushf
cmpsl
mov
lahf
sub
push
pop
pop
lods
out
mov
mov
and
mov
subl
sub
ret
in
test
test
push
js
cltd
and
clc
adc
lret
dec
fldl2e
adc
add
flds
pop
cmpsl
js
stos
fs
out
aam
dec
xchg
mov
mov
ret
in
aad
ss
loop
jmp
mov
scas
imul
add
xchg
mov
cmp
leave
fwait
cmc
test
push
gs
add
mov
sub
and
or
arpl
xchg
pop
pop
dec
mov
mov
sbbb
sbb
mov
mov
loopne
dec
mov
dec
fs
dec
jmp
mov
or
sub
sarb
and
xchg
cmp
xchg
jbe
mov
es
cmp
sbb
or
aam
jp
movsb
sbb
insb
loope
int3
jnp
add
in
mov
mov
sub
push
in
jmp
call
jae
push
ja
or
mov
cli
jb
stos
xor
and
lea
imul
scas
int
push
push
in
ja
mov
mov
cmp
or
hlt
sbb
arpl
inc
stos
inc
bt
or
add
fcmovu
mov
sbb
add
pop
loope
mov
sub
movsl
call
mov
push
movsl
movsl
leave
aad
jge
mov
push
or
inc
jbe
loopne
jge
insl
ljmp
mov
or
cmp
jl
sub
push
subb
push
notb
scas
inc
mov
cmp
pop
mov
jb
fisubs
mov
data16
mov
aam
jno
mov
sub
lret
outsl
jmp
cmpsb
movsl
mov
cmpsl
lahf
nop
sub
test
bound
cltd
fnstenv
mov
pop
lods
pop
stos
popa
jae
dec
in
js
shl
fdivrl
sub
outsb
push
push
adc
shlb
sub
sbb
popa
mov
clc
movsl
and
out
push
mov
iret
int
loope
sub
dec
inc
pop
and
lea
cld
mov
inc
negb
insb
xchg
subb
adc
mov
mov
xchg
mov
or
aas
popf
lods
ss
sub
cmp
popa
push
negl
jo
lret
cmc
shrl
lcall
ret
pop
jle
cmc
out
cwtl
xor
pop
or
call
and
adc
xchg
int
mov
jmp
lods
cltd
fs
mov
jno
cli
cmp
out
xor
adc
movsb
sti
mov
fisubl
fimull
pop
clc
ret
and
cmp
sahf
imul
outsl
xchg
repz
in
xchg
ljmp
cmp
dec
xlat
cltd
fadds
sub
and
shll
mov
mov
push
jg,pn
int3
aad
inc
fcoml
pop
jge
inc
ret
push
lcall
jnp
jecxz
mov
fimuls
call
pop
add
pop
or
jge
int3
mov
fstpt
cmp
loop
inc
scas
neg
inc
aad
pop
aas
jle
imul
clc
and
mov
adc
stos
pusha
aad
push
test
mov
xchg
mov
mov
data16
and
lods
lret
std
dec
mov
mov
lahf
xlat
lock
call
mov
sbb
xor
cmp
fildll
fdivs
dec
ss
test
or
sub
jmp
push
mov
insl
mov
daa
and
mov
sub
ds
and
mov
rcll
push
cmp
push
push
clc
dec
test
push
ljmp
insb
pop
push
popf
pop
stos
push
imul
lahf
add
stc
movsl
xor
lods
xor
adc
or
cltd
sbb
repnz
add
dec
sbb
std
test
cmp
pop
cmc
jb
or
cmpsl
negl
or
pop
add
mov
cld
jno
jae
pop
or
mov
rclb
fwait
cmp
and
mov
jns
dec
dec
pop
xchg
addl
sub
int3
jne
icebp
mov
andb
pop
das
cmp
lahf
jle
test
jl
add
movsl
out
xchg
imull
adc
jo
jp
out
mov
std
cmp
lods
jnp
movsl
add
in
jg
pusha
daa
aad
filds
mov
popa
inc
or
stc
push
int3
inc
bound
jle
pop
push
cmp
stos
add
pop
sbb
addr16
imul
or
push
sub
mov
ret
fwait
pop
mov
hlt
fs
arpl
sbb
or
jl
pop
inc
fisttps
dec
fisubl
mov
add
add
pop
adc
mov
icebp
and
mov
cmpsl
dec
mov
movsb
adc
lods
push
pop
lcall
sub
push
fcomi
aaa
or
and
jns
sti
add
icebp
jl
std
sarl
xor
pop
out
adc
aaa
xchg
fdivrs
jbe
mov
ret
aaa
aas
cmpsb
cli
mov
in
cmpsb
fwait
xor
xor
daa
mov
arpl
inc
inc
push
jno
add
cmp
ds
scas
ret
movsl
stos
mov
and
sub
scas
jno
push
cli
pop
push
test
insl
test
pushf
add
pop
inc
jmp
pop
jmp
pusha
inc
loope
int3
neg
daa
jg
sub
jno
imul
rclb
stc
mov
sbb
in
and
ror
mov
mov
sub
lea
lcall
and
dec
pushf
sahf
lahf
test
imul
fildl
jp
lret
fs
loope
adc
out
cmp
sbb
neg
in
out
lret
mov
cmp
inc
xor
icebp
push
add
cmp
pop
jl
adc
out
loop
pop
sbbl
adc
cmpsl
out
add
pop
cmp
mov
mov
iret
cmp
outsb
mov
in
add
cmp
xchg
or
loopne
or
pop
pop
int3
sub
movhps
loope
in
les
mov
mov
sbb
pushf
mov
xlat
fadds
or
mov
jne
pushf
repnz
ljmp
loop
rcl
dec
hlt
mov
mov
or
je
jl
jecxz
cld
pop
xchg
sub
inc
jno
call
sahf
repnz
in
adc
jno
insb
cs
xor
movsl
inc
aas
arpl
jb
lock
dec
mov
and
and
roll
orl
std
fsubr
cwtl
imul
mov
orl
hlt
lret
insb
dec
rorl
mov
jns
dec
mov
rol
ss
mov
mov
mov
xlat
js
xor
cld
mov
add
mov
mov
scas
dec
mov
cs
daa
mov
mov
xchg
outsb
sub
mov
mov
sti
pushf
push
rolb
fstpl
push
jge
or
ljmp
dec
pop
std
xchg
xchg
stos
inc
les
lcall
push
jg
mov
add
clc
fcomps
cmp
mov
xchg
pop
test
inc
int3
xchg
fisubl
shl
jns
or
add
negl
stos
adc
add
xlat
or
cwtl
inc
or
mov
xchg
mov
push
mov
das
fs
cli
hlt
and
cmp
adc
shlb
mov
add
scas
xchg
jne
les
inc
clc
mov
lds
jns
adc
xchg
into
sarl
mov
movsb
out
xchg
or
sahf
mov
jp
fidivs
pop
imul
jle
mov
in
aam
pusha
ret
fbld
xchg
jmp
adc
orb
data16
add
ljmp
iret
jno
jne
sub
leave
cmp
sbb
adc
xchg
jb
out
adc
popa
iret
push
inc
pop
cltd
nop
pop
incb
mov
inc
adc
ja
push
pop
mov
dec
xchg
pop
adc
pop
aas
jne
fidivs
ffreep
js
pop
sar
pop
mov
cli
and
leave
ret
sub
movsb
sahf
pop
dec
push
test
jge
rcrl
cmp
leave
mov
lods
or
add
hlt
jl
movsl
aam
and
adc
dec
shl
xor
mov
sbb
push
push
loope
inc
nop
aad
cmpsb
jge
adc
lea
daa
mov
cmp
jno
jns
sub
push
adc
int
imul
xor
and
mov
lods
test
js
xor
pop
rorl
enter
insl
scas
pop
sub
test
mov
out
fistpl
loope
sub
sbb
adc
insb
push
dec
mov
lods
push
sbb
lahf
mov
test
push
mov
and
mov
adc
mov
jb
push
push
sub
push
adc
pop
mov
sbb
sahf
jl
jae
jp
mov
jg
int3
mov
push
mov
adc
adc
aas
sbb
adcb
fcom
leave
xchg
notl
iret
faddp
pop
jle
cmp
and
into
and
add
je
pop
xor
cmp
loop
mov
je
xor
aam
aam
and
mov
lods
addr16
xor
xchg
mov
cli
mov
in
ret
in
insb
and
xor
mov
test
loopne
inc
lcall
and
fcomp
dec
les
sub
push
test
sbb
xlat
test
xlat
pop
mov
adc
popf
mov
add
inc
and
ret
mov
cmp
repz
sbb
push
je
ror
jecxz
mov
xchg
mov
fucomp
mov
cmpsb
sbb
in
adc
xlat
cmp
fcmovu
dec
rcrl
jmp
sub
or
aas
add
dec
jb
in
dec
dec
leave
and
icebp
push
xchg
divb
sbbl
es
mov
push
mov
sbb
or
fistl
adc
inc
aas
and
in
lret
das
out
mov
and
mov
insl
es
roll
mov
and
push
incb
subl
mov
mov
jle
mov
faddp
shlb
cs
sub
in
mov
int3
paddusw
xchg
clc
lds
xchg
inc
mov
jmp
push
adc
cmp
std
mov
xchg
xchg
mov
shlb
push
add
add
mov
shlb
mov
repnz
out
call
xchg
lcall
movsl
sub
fwait
or
push
dec
dec
mov
repnz
xor
cltd
popa
or
pop
dec
xchg
add
mov
outsb
sbb
pop
mov
push
ja
loope
dec
inc
adc
mov
xchg
mov
mov
mov
addl
jns
push
xchg
cltd
gs
sbbl
jno
in
out
fstpt
or
dec
outsl
addr16
mov
mov
stc
ljmp
xor
jle
ret
arpl
lea
ffreep
aas
pop
xchg
lret
mov
cld
inc
and
push
push
std
jl
sub
dec
push
mov
cli
stos
call
cmpsb
dec
sbb
xchg
xchg
imul
mov
adc
xchg
in
iret
leave
int
ret
sbb
hlt
cli
fldenv
mov
sbb
xchg
or
jb
fwait
inc
fucomp
es
xor
xchg
mov
cmp
pop
outsb
push
jmp
push
test
and
sbb
mov
repnz
xor
leave
cmp
movsb
sub
push
clc
mov
fdivrl
int
sbb
mov
pop
int3
xor
stos
sbb
jl
and
dec
xchg
pop
sbb
sub
jecxz
stos
in
jo
mull
fst
std
and
mov
in
fsts
push
inc
pop
mov
in
je
sbb
sub
test
mov
mov
test
or
sub
push
aaa
cmp
xor
cmc
and
push
lahf
in
or
push
mov
mov
xor
mov
and
pop
pop
push
xor
arpl
mov
addr16
mov
arpl
pmaxub
jge
or
sub
dec
outsb
das
outsl
adc
inc
adcb
pop
jl
sbb
ljmp
cmp
and
int
mov
sub
enter
jmp
popf
push
imul
sbb
dec
jl
add
cmpb
jg
sbb
mov
insb
or
sub
adc
mov
cmp
xchg
loop
notl
mov
shl
mov
or
mov
fs
cmp
mov
loop
push
jmp
adc
into
sub
inc
lods
push
lods
dec
and
out
pop
push
cli
aam
in
xor
jae
shlb
fstpt
gs
lods
loopne
mov
push
call
loopne
iret
cmp
and
xchg
adc
mov
xor
xlat
push
out
sbb
mov
dec
ret
cmpsl
mov
cs
cmc
aad
cmp
sahf
jno
dec
jns
mov
fsts
repz
js
jecxz
mov
cltd
outsl
orl
pushf
pop
stc
pop
and
or
cli
fildl
pop
or
mov
inc
xor
aas
mov
or
jbe
mov
rcrl
inc
dec
std
dec
cmp
cwtl
loope
sti
mov
sti
loopne
pop
xor
xorl
imul
cltd
mov
or
test
mov
aas
in
push
aam
or
out
aam
ret
insl
push
lret
fisubs
inc
xor
lods
xchg
add
push
fs
mov
cmp
mov
std
xchg
ret
rorb
cld
sub
shr
jno
and
cmp
sub
add
jns
xchg
frstor
push
sub
stos
and
jle
pusha
test
in
push
xor
adc
and
adc
fcomip
mov
mov
mov
inc
xchg
add
lods
rcll
ficompl
icebp
jge
add
or
gs
xor
or
in
push
inc
xchg
push
in
aam
fs
mov
jo
push
ja
test
sub
mov
push
mov
dec
jne
dec
jne
pop
add
clc
push
es
movsb
push
enter
sarl
dec
pop
subl
hlt
sub
push
xchg
clc
addr16
test
call
ret
lods
jnp
and
jle
lock
mov
xchg
sahf
pop
dec
jmp
sub
push
jae
rclb
or
mov
idivb
jo
pop
xchg
and
xor
sbb
in
arpl
loopne
scas
pop
aad
push
add
adc
or
sub
add
shll
insb
insl
nop
hlt
inc
lods
jo
and
mov
sbb
sti
push
pop
test
fidivrl
xchg
or
into
int3
xor
pop
popf
std
sbb
outsl
push
lds
aas
sarl
jb
leave
mov
fbld
or
in
jge
pusha
jecxz
aas
ss
inc
inc
or
sbb
inc
scas
mov
dec
add
mov
xor
outsl
cltd
inc
scas
mov
in
out
cmp
push
aaa
inc
scas
faddp
cmpsb
sbbl
pop
sbb
enter
daa
mov
mov
fcmovne
adc
iret
dec
sub
daa
cmpb
int3
int3
ds
adc
mov
pop
pop
lahf
or
lret
jbe
test
mov
movsb
xor
adc
in
cmpsl
pop
jl
cmpb
pop
pop
cmpsb
scas
js
sbb
add
sbb
lods
fsubrl
and
sub
fdivl
xchg
pusha
test
and
fmull
sub
sbb
icebp
mov
popf
mov
inc
addb
aaa
and
sbb
sub
xor
shrb
sbb
add
jmp
sbbb
add
das
sti
das
fs
push
adc
ljmp
mov
out
adc
addr16
xchg
cmpl
xchg
ds
and
out
scas
cmc
add
fidivs
es
outsl
adc
mov
xor
cs
test
sti
adc
loopne
add
lret
les
lods
xor
mov
xchg
add
pushf
shll
push
iret
in
inc
out
sti
jbe
aaa
and
gs
test
pop
je
enter
push
imul
xor
rep
jp
xchg
idivb
cmp
xchg
test
mov
subb
rep
jmp
jae
or
je
and
nop
jns
mov
inc
punpcklbw
flds
je
jecxz
lock
pushf
xchg
or
call
sbb
pop
pop
aad
mov
mov
mov
inc
lret
inc
inc
adc
inc
std
pop
jb
data16
in
pop
test
shr
pop
pop
divb
ds
cwtl
pushf
icebp
and
dec
lds
orl
in
mov
xchg
aam
lcall
cs
mov
mul
aam
mov
ret
jne
scas
es
inc
mov
dec
and
xor
je
sbb
mov
jmp
mov
out
in
inc
push
mov
sbb
stc
rcr
std
push
sub
lock
push
std
push
inc
sbb
fisttpll
inc
dec
xchg
kandw
push
fisubs
sub
or
ja
stos
packuswb
ret
xchg
jo
adc
jno
seto
addb
xor
cltd
cmc
mov
mov
mov
jmp
jmp
loope
sbb
das
adc
xor
rcll
cmp
xchg
mov
add
inc
or
pop
cmp
xor
lock
jl
inc
xchg
mov
repz
sub
scas
dec
sub
inc
shrl
mov
dec
dec
pop
dec
fidivl
rorb
pop
out
orl
bound
movsb
jns
les
das
mov
cmpl
cmp
add
loop
or
push
adc
add
cld
sahf
mov
test
into
rcrl
jle
adc
in
jne
xchg
pop
filds
push
inc
jmp
or
push
fadds
mov
push
xor
cmp
stos
into
fcompl
sbb
push
test
jmp
test
inc
je
adc
daa
outsb
iret
xchg
mov
hlt
nop
rorb
inc
push
jno
or
push
in
fisubrl
adc
xchg
popa
or
int3
insl
inc
cmp
ficomps
lds
lods
les
repz
leave
sub
sbb
mov
loopne
xor
cli
rcr
aaa
add
repnz
fldenv
jl
xchg
add
push
icebp
or
xor
lret
scas
fwait
dec
dec
and
sti
jne
inc
and
xor
inc
mov
enter
daa
mov
sub
push
or
les
rcrl
jns,pt
movsl
mov
and
xchg
lahf
sub
xchg
test
cltd
inc
xor
sti
test
pop
pop
mov
pop
inc
pop
in
aas
push
ss
loope
loope
add
sub
arpl
adc
std
pop
aam
mov
mov
sbb
fxch
and
jecxz
mov
sbb
daa
push
xchg
pop
fwait
mov
sqrtps
das
dec
mov
std
sbb
and
shrd
push
repz
cmp
shll
push
ss
pop
into
cmp
or
xlat
not
or
lret
das
rcrl
adc
mov
or
mov
cmc
leave
push
pop
xor
scas
jb
sbb
stc
pop
pop
adc
add
dec
insb
lods
sbb
inc
mov
test
xchg
outsl
pop
cli
cmp
push
xor
adc
lods
test
sti
and
mov
shl
pusha
fs
xchg
adc
adc
sbb
out
les
mov
repz
add
or
push
xlat
aam
mov
mov
sahf
cli
in
jmp
jmp
outsb
in
rcl
push
sbb
push
sbb
aaa
aaa
mov
fnstcw
mov
sub
call
lcall
adc
pop
jecxz
arpl
pop
scas
sbb
inc
pop
or
jb
test
fs
mulb
sub
idiv
sbb
std
cltd
daa
push
push
xlat
clc
mov
aam
mov
or
andl
sahf
mov
mov
fwait
sbb
lock
das
das
mov
mulb
lods
cmpsl
add
daa
lods
rol
cmp
es
ss
int
mov
int3
mov
pop
out
or
push
sub
mov
dec
jbe
mov
cmp
shrb
xchg
repnz
sbb
mov
inc
sub
or
fnsave
sbb
add
outsb
ljmp
and
jge
dec
popa
out
es
xchg
pop
add
jmp
clc
pxor
roll
add
mov
imul
xchg
pop
imul
cs
xor
xchg
inc
push
sbb
decb
les
push
aaa
mov
add
inc
or
cmpsb
adc
xor
rcrb
or
mov
pop
inc
adc
ljmp
pop
out
pop
ja
lds
inc
push
lret
mov
in
adc
lcall
xchg
leave
out
sarb
jns
popf
pop
xchg
cli
sbb
or
push
out
fsubrl
cld
aad
adc
call
mov
andb
jge
out
jle
daa
pop
in
adc
pusha
cs
jg
and
jbe
inc
imul
jae
mulps
fwait
jns
popf
mov
push
loop
je
loopne
inc
out
and
adc
imul
aad
pop
lcall
ret
iret
out
xchg
ret
sub
hlt
fisttpl
inc
xor
and
jp
xchg
mov
push
pop
movsl
pop
nop
and
mov
imul
fdivrp
and
xchg
jb
shrb
mov
inc
xchg
xchg
leave
lahf
xchg
push
movsb
lret
push
in
xchg
jbe
pop
out
insl
xor
mov
imul
popf
or
cmp
push
jl
mov
dec
loopne
xchg
push
aam
int3
xor
and
adc
and
sub
or
ja
or
idivl
mov
sbb
enter
daa
mov
or
inc
add
jno
mov
sub
dec
inc
cmp
ret
int
repnz
shlb
push
sbb
enter
popl
sub
imul
lret
js
jle
pop
and
into
push
sub
xor
jle
subl
pop
pop
jmp
rcr
mov
push
inc
xchg
enter
mov
and
inc
push
ret
int
ss
sub
ret
outsl
lods
notl
fdivrs
xor
arpl
daa
add
sahf
or
mov
xchg
jbe
adc
dec
jg
and
mov
pop
aam
sbb
pusha
cmp
ret
movsb
cmp
xchg
push
ror
xchg
iret
mov
mov
mov
or
addr16
lods
add
fdivrl
inc
outsl
shlb
loop
dec
and
push
xchg
adc
add
add
xchg
lret
lods
add
and
xchg
popa
and
insl
sub
xor
dec
arpl
sbb
mov
incb
gs
mov
loopne
in
popa
pop
mov
mov
cs
xor
xor
les
sbb
dec
push
mov
xor
mov
xlat
adc
mov
dec
ljmp
ret
cmp
mov
call
dec
xchg
fwait
adc
xor
lds
imul
mov
jns
call
sbb
pop
cmp
push
adc
dec
dec
push
fistl
push
lock
ja
cmp
jle
fnstenv
mov
pop
and
xorb
mov
idivb
inc
hlt
std
cwtl
adc
mov
pop
lods
mov
pop
push
cmp
jecxz
es
lds
mov
cs
das
push
andl
sti
aam
sti
xchg
ret
xchg
mov
dec
xorl
jbe,pn
sbb
pop
cmpsl
mov
pop
mov
ss
jle
pusha
xor
and
inc
sbb
pop
pop
and
rolb
leave
or
ret
popf
push
int
push
fstp
sub
or
aaa
int
popa
push
cmp
movsl
stos
in
cld
adc
xchg
mov
dec
mov
add
pop
cltd
arpl
divl
jno
xchg
les
cmpb
test
pop
fadds
dec
test
cltd
mov
scas
fwait
cmp
push
fcmovb
adc
pop
sarl
inc
repnz
mov
out
xchg
cmp
je
sub
fcmovne
pop
mov
sbb
dec
push
jp
inc
add
mov
xchg
cmp
mov
outsl
sub
inc
xchg
insb
bound
repnz
adcl
out
adc
sub
not
imul
ds
mov
mov
and
sub
aas
jle
xor
in
pop
hlt
pusha
leave
sbb
filds
popf
xchg
pop
pusha
mov
inc
dec
mov
rclb
loopne
popf
xor
loopne
push
push
mov
mov
and
negl
in
imul
mov
subb
aad
sub
iret
inc
dec
jo
mov
adc
ret
lcall
cld
cmp
pop
fimull
fldl2t
loop
xchg
ret
movq
int3
inc
pusha
cmp
mov
fisubs
dec
rolb
repnz
outsb
jge
push
inc
stos
movsb
push
adc
push
xor
or
mov
jge
jo
sbb
sub
adcl
or
call
dec
jl
pop
mov
push
mov
pop
xor
cmp
scas
pop
fsub
and
mov
xchg
inc
pop
ljmp
adc
dec
daa
mov
inc
cmp
jno
fiadds
or
fistpll
mov
mov
addr16
imul
test
scas
popf
cmpsl
xor
pop
sbb
cs
mov
js
xor
pop
arpl
push
push
fnop
loope
inc
lret
cmp
sub
mov
lea
mov
xchg
jge
lea
jp
mov
dec
lds
jne
xchg
lds
mov
imul
cs
pop
cltd
addr16
lcall
jns
push
ja
sbb
push
test
mov
aaa
mov
fsubrp
mov
or
push
enter
jae
fdivrs
mov
lret
rorl
out
pop
or
insl
fdivp
push
lods
add
aaa
and
loop
mov
stc
int
and
sub
loopne
lahf
leave
mulb
mov
cmc
mov
out
xlat
mov
mov
jge
in
cmpl
rcrb
orl
rcll
adc
outsl
subl
scas
les
mov
xchg
aas
aas
mov
sub
push
lock
outsb
sub
mov
hlt
popf
adc
inc
daa
jecxz
xor
in
clc
dec
jo
or
ret
add
inc
dec
mov
fldcw
jns
int3
popa
int
fmuls
movsl
mov
lea
fcmovnu
cwtl
pop
test
sahf
aas
adc
dec
jmp
rorl
hlt
test
inc
inc
xchg
xor
aas
sbb
mov
dec
push
std
jnp
fwait
cmc
cltd
rcr
cwtl
fcomi
jg
out
and
bound
and
push
sarb
lret
push
arpl
sub
das
dec
jge
mov
sbb
cmpsb
aam
sahf
mov
into
push
jle
add
stos
dec
adc
lcall
add
or
clc
jne
ud0
and
fnstsw
pop
jns
icebp
rclb
popf
sub
enter
test
nop
jns
fldl
pop
clc
in
xchg
adcb
ljmp
stos
pop
dec
cmpsb
stos
fsubr
mov
in
push
xor
mov
sahf
dec
add
into
cltd
lcall
mov
mov
adc
fmuls
inc
shl
cltd
pop
or
pushf
sub
jge
cltd
add
jns
sar
in
jp
mov
shlb
sbb
stc
pop
mov
insl
mov
pop
pop
jns
ja
lock
dec
add
mov
ret
dec
add
or
fs
and
bound
pop
out
test
xor
and
push
mov
and
repnz
jp
insl
mov
arpl
cmpsb
insb
cmp
jle
sub
push
pusha
fs
in
pusha
inc
mov
jmp
push
lea
jae
outsl
xchg
push
and
fdivrl
repnz
inc
stos
daa
sbb
sbb
mov
imul
aas
push
sbb
mov
iret
movsb
mov
inc
pop
dec
ljmp
pusha
dec
lea
ret
dec
or
flds
inc
pop
mov
fimull
ret
xchg
data16
int3
sub
pop
ds
inc
cmpsb
aas
lds
imul
in
jg
leave
lea
ds
sbbl
mov
xchg
dec
sbb
sbb
xlat
or
jno
add
cli
xchg
sbb
push
lcall
jo
ljmp
cmp
fidivrl
ja
adc
cmp
ljmp
in
mul
jg
adc
mov
cmp
sub
sub
out
push
loop,pt
cmc
movsl
fldt
stos
and
xchg
pusha
lahf
mov
add
sbb
add
movl
sbb
scas
pop
mov
cmp
aam
das
sub
lcall
pop
jne
mov
test
ss
mov
cmpsb
cmpsb
push
enter
sbb
sub
cwtl
jns
pop
sbb
push
push
sbb
mov
sbb
sbb
movsb
aaa
faddl
xor
addr16
cld
pop
mov
and
mov
mov
lods
adc
daa
fdivrs
or
notl
into
mov
jp
push
shl
sbb
or
lods
dec
into
jb
test
push
outsb
or
xchg
sbb
loop
dec
cmp
adc
outsl
iret
add
push
jp
shlb
imull
outsl
mov
out
roll
rorl
in
out
push
pop
sti
xor
aam
mov
gs
loop
loopne
cmp
lock
adc
mov
imul
mov
xchg
add
addb
cmp
inc
sub
je
mov
lahf
lods
sbb
das
jmp
cs
dec
sti
aad
mov
fisttpll
jo
inc
pop
test
fldenv
dec
je
scas
adc
test
or
xchg
or
pop
mov
cltd
cmc
dec
and
xor
lock
inc
out
addr16
lods
addr16
mov
fdivrl
leave
es
and
mov
inc
test
pusha
std
mov
inc
cwtl
mov
arpl
pop
sbb
subl
jbe
jne
mov
mov
jge
lock
cmp
rorb
or
mov
push
es
xchg
cmp
mov
sub
inc
mov
icebp
in
lret
pop
stos
mov
jae
cli
and
js
jge
cwtl
out
shrb
or
inc
test
pushf
mov
mov
push
push
sub
sub
adc
daa
sbb
xchg
roll
popa
test
add
xor
dec
lret
xor
dec
push
jl
pop
mov
mov
cltd
shl
xorb
fbld
leave
repnz
add
sub
scas
stos
jmp
inc
popf
int
jg
mov
pushf
pop
xor
and
xchg
xchg
scas
ja
cmpl
or
bound
test
rclb
mov
in
mov
pop
shrb
hlt
gs
das
lret
inc
mov
xor
xor
mov
pop
jo
ljmp
fidivrs
js
pop
rclb
jne
ret
out
fists
or
xchg
sbb
pavgb
mov
dec
jno
movsb
xchg
sbb
inc
push
jle
push
in
add
test
fistpll
mov
jmp
bound
lret
or
popf
adc
sub
xor
stos
lcall
sbb
add
imul
pop
push
arpl
iret
add
insl
ret
dec
pop
jg
jno
mov
cmp
or
push
cmp
inc
xlat
inc
inc
push
int3
sbb
je
mov
dec
lds
pop
mov
mov
imul
aas
add
mov
imul
jbe
mov
jge
cltd
aad
out
push
aaa
add
cmc
add
outsl
fimuls
push
rorl
jge
pushl
ss
dec
scas
pop
jb
and
call
lea
dec
inc
jns
xlat
cmpsb
adc
in
ficoms
daa
enter
daa
scas
lret
test
ficoml
sbb
mov
fdivrl
add
adc
and
xchg
dec
lahf
cmpsl
cmp
push
xchg
or
test
lds
xor
mov
sti
pop
aas
push
js
pop
cmpsl
pop
loope
mov
dec
cmp
xor
jg
ret
es
adc
imul
orb
xchg
mov
push
mulb
xchg
imul
sub
pop
aam
xchg
ds
lcall
mov
hlt
lret
mov
dec
sahf
icebp
xchg
andb
sarl
dec
aaa
mov
dec
inc
mov
cmc
lea
push
xlat
xchg
ss
or
fdiv
lcall
insl
mov
sarl
cmp
pop
fimull
imul
cmc
in
and
in
and
aad
adc
jo
cmp
in
adc
and
in
push
cli
xor
push
lcall
cltd
xor
inc
sar
sub
lods
mov
gs
push
loopne
sbb
popf
in
adc
repz
mov
mov
sbb
je
cmp
sub
mov
dec
xchg
scas
jmp
jae
cs
scas
aad
mov
rcrb
mov
lds
cld
fstps
dec
mov
imulb
lea
xor
adc
ss
xchg
negb
adc
xchg
dec
jns
outsb
pop
cmp
sub
inc
enter
pop
and
jb
cmp
inc
hlt
iret
and
fdivr
sarl
sbb
add
mov
cwtl
inc
ss
mov
mov
xor
cld
cmpsl
mov
mov
mov
mov
pop
das
pop
sbb
cwtl
fsubr
mov
push
loopne
ret
inc
adc
insl
rcr
xchg
dec
or
lds
jae
xor
mov
jmp
mov
xchg
mov
lds
mov
mov
sub
inc
test
lret
mov
rcr
push
push
push
push
fstl
xchg
bound
xchg
add
ljmp
dec
pop
push
sub
stos
mov
jns
xchg
js
xchg
push
push
daa
iret
packssdw
add
push
xor
xor
xchg
mov
dec
mov
inc
test
pusha
cmc
xchg
out
sbb
rcrl
les
fwait
lret
xchg
ss
ret
cltd
xchg
add
scas
cmp
jmp
mov
or
cltd
and
sbb
mov
and
mov
rcrb
push
dec
out
cld
inc
in
and
sahf
pop
dec
movl
mov
jae
out
fdivrp
jbe
pop
repz
jns
push
mov
out
jb
sub
call
and
mov
fcoms
movsb
jnp
enter
add
pop
lea
lcall
xchg
nop
jl
jmp
insl
xor
jae
fisttps
int3
sub
xchg
adc
push
jo
pop
stos
or
jge
sbb
push
in
xchg
loopne
scas
stos
xchg
xor
stos
pushf
jnp
ja,pn
iret
bound
ds
mov
fcomip
pop
jle
arpl
or
xchg
sbb
iret
leave
fiadds
iret
add
scas
popl
int3
add
loop
mov
pushf
fimuls
and
rcl
xlat
mov
xchg
ds
jnp
dec
movsb
imulb
push
and
jl
daa
imul
mov
mov
or
push
add
adc
cmp
pop
lret
push
pusha
js
xor
xchg
or
and
inc
cmp
imul
or
cmpsb
xchg
xor
lds
jl
push
lods
scas
in
insb
cmp
xor
dec
mov
cmp
jae
sub
and
loope
movsl
mov
test
rclb
sub
xor
sbb
pop
adc
add
pop
pop
and
mov
loope
fs
sub
or
adc
inc
or
lcall
sbb
cmp
mov
gs
sub
jo
lcall
aam
fbstp
fstpl
mov
int
cmp
pop
jg
mov
xchg
mov
xchg
cmp
adc
mov
cmp
scas
mov
out
lret
mov
cmp
fiaddl
fcom
dec
into
cmp
cmc
lods
sbb
outsl
dec
stos
stc
loop
sbb
stc
repnz
jo
mov
sbb
dec
sub
data16
inc
jo
lahf
mov
mov
in
lea
cli
cmp
and
les
sbb
nop
adc
rclb
mov
loopne
xlat
cmp
leave
push
imul
gs
mov
dec
sbb
scas
xor
pand
mov
cmc
dec
sub
mov
xor
int
rclb
adc
inc
addl
jecxz
add
rorb
mov
lods
adc
jp
adc
stc
mov
cli
in
fisttpl
jb
frstor
addl
or
aas
cli
int3
adc
dec
mov
lahf
and
dec
popa
ror
cmp
dec
sub
inc
cwtl
decl
lahf
cli
fisttpll
xchg
cmc
jo
shrb
lret
push
les
push
fldcw
lock
das
out
pop
mov
inc
mov
aam
jg
ret
iret
jb
es
jne
insl
mov
adc
cmpsl
lods
push
sub
xchg
enter
mov
or
and
scas
sbb
pop
mov
arpl
outsb
or
test
and
fldl2e
lahf
fnstsw
and
xchg
aas
in
ljmp
clc
pop
add
fsubr
adc
and
push
xor
cmp
lret
add
xorb
test
lock
push
pusha
xor
push
fisubrl
sbb
pcmpgtb
in
push
data16
add
lret
inc
nop
cmc
xor
jae
in
pop
pop
xchg
jl
popa
mov
sub
mov
lea
mov
dec
fisubl
mov
mov
pmuludq
dec
stos
mov
jne
mov
mov
mov
into
je
xchg
icebp
ror
adcl
push
sub
jecxz
popf
addr16
xor
mov
xchg
insb
jp
js
call
fsubl
pusha
xor
inc
cs
arpl
jmp
js
ret
jl
push
push
ficompl
int3
cmc
inc
push
scas
cmc
inc
stos
andb
sbb
je
imul
lock
icebp
add
iret
rcll
ret
inc
pop
in
inc
add
push
pushf
inc
arpl
sub
push
aad
push
fisubl
dec
xchg
imul
int3
out
subl
clc
int
cs
add
xchg
shl
inc
mov
in
leave
bnd
movsb
addl
test
mov
push
sbb
aaa
jg
stos
or
inc
jmp
jl
shr
dec
or
out
push
inc
aaa
xchg
xor
in
cmp
scas
aad
in
cmc
test
cmp
pop
inc
xchg
pop
mov
lods
sbb
enter
daa
lods
xchg
insl
cmp
aad
jle
enter
popa
cmp
adc
movsl
lock
in
pop
push
cmp
test
fstpt
rcl
cmp
sahf
pop
lea
pop
pop
iret
sub
mov
popf
subb
mov
aam
arpl
xchg
stc
out
push
sbb
dec
jbe
add
mov
arpl
push
and
mov
xchg
and
xlat
push
and
mov
outsb
rcrb
adc
lret
cmp
cltd
adcb
jg
sub
pop
cmp
test
fistpl
xchg
cmp
push
lret
testl
pusha
shrl
dec
or
scas
into
sbb
cmp
mov
sbbb
test
xlat
add
jg
pop
or
lods
xchg
stos
out
xlat
pop
cli
insb
pop
jle
push
lods
in
das
lahf
adc
aas
rcl
repz
adc
loopne
les
pop
dec
stc
mov
imul
and
iret
sbb
ljmp
sub
xchg
pop
mov
mov
into
fsubrs
sarb
aad
pop
lods
nop
jbe
push
dec
jno
rolb
inc
pusha
lret
mov
mov
repz
dec
call
xchg
lahf
inc
pop
mov
loopne
dec
in
pop
fstpt
mov
cmp
inc
jnp
sub
js
aas
cltd
jge
jb
xchg
orb
jb
adc
pop
mov
adc
orl
mov
shll
jns
subl
lock
ret
mov
jb
inc
arpl
cltd
sbb
mov
idivl
icebp
aam
jno
ret
pop
pop
ficoml
pop
insl
mov
xchg
into
cmpsl
lods
jne
mov
imul
ss
je
jp
dec
lret
cmc
lods
scas
shlb
jae
test
inc
mov
das
xchg
clc
mov
mov
dec
push
xchg
jle
push
ljmp
jl
stos
fsub
stos
cwtl
pop
mov
js
adc
push
push
adc
leave
dec
movaps
mov
ds
xor
lcall
rcrb
inc
test
outsl
inc
xchg
push
jo
enter
dec
jg
or
cmp
fwait
sub
int
or
add
in
inc
jmp
int3
xor
imul
dec
cli
pop
xchg
lret
inc
in
mov
cmpsb
in
dec
push
sbb
ja
ja
dec
int
adc
mov
jle
jecxz
lea
jp
rcr
add
bound
and
dec
andl
lret
cmc
aaa
sub
fiadds
aad
xchg
mov
insb
in
inc
jnp
pop
adc
stos
or
pusha
shlb
jle
ss
subb
jae
pop
cld
push
sub
fcmovu
mov
out
fisubrs
scas
mov
sbb
imul
jno
rcll
dec
adc
and
mov
ret
xchg
pop
and
dec
hlt
popf
push
and
test
inc
xor
addr16
lds
mov
xchg
ret
int3
ficompl
mov
rcrl
lds
fadds
repnz
repnz
imul
push
mov
daa
or
sbb
inc
sbb
ds
xor
ljmp
jl
ret
add
stos
cs
es
inc
jl
scas
mov
sub
mov
lcall
or
inc
mov
dec
in
xchg
icebp
out
enter
daa
lods
mov
nop
jno
imul
push
cmpl
imull
lret
or
push
or
cwtl
add
mov
xor
jno
std
sub
mov
pop
js
outsl
scas
pop
sahf
or
mov
faddl
sbbl
cmp
adc
cli
mov
jg
ret
sbb
pop
xor
dec
popa
push
aam
in
int
lcall
adc
icebp
lcall
cmp
dec
add
shrb
jb
or
mov
jge
mov
mov
fs
jmp
repz
hlt
ss
ror
cmp
and
pop
add
inc
out
sarl
push
mov
add
into
aam
cmc
cmp
xor
mov
stos
loop
mov
loope
and
cmp
push
icebp
data16
scas
lods
insl
jae
mov
pushf
out
loope
cli
lahf
mov
xor
xchg
push
in
lcall
push
lods
push
sbb
loopne
les
insb
sub
cmp
jbe
les
sub
xchg
push
das
adc
and
or
sub
jp
pushf
dec
xor
jmp
mov
popa
aad
pop
jb
push
pop
ret
dec
and
xor
fnstcw
pop
outsb
je
daa
mov
mov
jnp
mov
vpmacsww
outsb
in
adc
xor
rcrb
and
lods
imul
add
cld
inc
sbb
aad
cmp
jb
xchg
cmp
and
sub
mov
std
sub
je
imul
lods
jne
lds
cld
sub
lret
xor
mov
mov
int
lock
imull
movsb
movsl
bound
scas
gs
mov
jle
in
pushl
es
es
xchg
sahf
cmpsl
stos
pusha
cmp
inc
orb
jp
ret
push
jg
jnp
push
in
push
pop
adc
in
shlb
sub
test
in
mov
jp
ffree
sbb
xchg
mov
jns
popa
loopne
inc
pop
push
in
outsl
stos
xchg
add
fstpt
es
dec
jmp
mov
mov
add
insb
adc
jbe
sub
aad
add
dec
jmp
xchg
mov
jnp
and
mov
mov
fwait
pop
aam
push
lods
add
int
add
pushl
xor
dec
or
call
stc
mov
xchg
dec
mov
add
xor
shrb
mov
in
ljmp
push
out
mov
sub
jnp
aaa
bound
bound
jns
jp
xchg
xchg
mov
out
in
sub
fyl2xp1
insb
addr16
sti
jp
in
mov
push
add
mov
jle
imul
imul
sti
test
xchg
or
jmp
mov
or
lock
insl
popf
mov
daa
mov
sub
loopne
and
xchg
mov
mov
scas
aam
fsts
xor
mov
or
ret
push
pop
pop
mov
hlt
call
stos
roll
mov
or
inc
in
push
inc
rcrl
fcmovb
mov
xchg
sbb
and
lds
fidivs
lds
mov
mov
mov
mov
loopne
lcall
mov
aam
fwait
out
sarb
aaa
std
mov
mov
xchg
sub
jl
xchg
clc
jns
or
imul
aad
and
repz
jnp
inc
mov
xor
jp
out
enter
daa
stos
addr16
cmpsb
pop
mov
sub
in
and
ds
mov
movsl
mov
pop
lahf
and
push
push
faddp
adc
icebp
test
shl
pop
fistpl
js
popf
mov
ffree
pushw
mov
jbe
sub
dec
sub
add
roll
aad
rorl
aad
xor
mov
addl
iret
sbb
add
pop
hlt
push
sub
sahf
imul
sbb
lcall
mov
mov
jge
jae
inc
lock
orb
imul
xorl
pop
dec
adc
sbb
popa
cli
jb
dec
cmc
daa
fsub
movsl
div
int3
or
lret
add
sbb
rorl
and
clc
add
add
iret
xor
inc
outsl
jmp
sbb
pop
push
xchg
stc
pop
mov
in
add
repnz
pop
call
out
mov
push
mov
cli
rol
lea
add
scas
sti
popf
arpl
and
loopne
mov
adc
pop
out
jne
cmp
repz
xchg
roll
jo
pusha
jo
xlat
int3
imul
mov
mulb
jmp
cmp
xchg
aad
mov
or
lret
mov
jb
je
pop
mov
mov
lcall
test
pop
and
jne
mov
push
mov
inc
mov
rolb
xchg
jae
xlat
ljmp
sbb
jecxz
fstpl
notb
cmpsl
stos
std
sarl
das
aad
mov
fisubrl
sbbl
lret
mov
fisttps
lock
lds
das
addl
mov
jg
fs
jl
dec
es
xchg
insl
outsb
inc
mov
cmc
dec
cmpsl
stos
iret
mov
aas
rclb
icebp
pop
xchg
popa
lods
rol
mov
and
test
mov
xor
sub
stos
test
lods
mov
popf
mov
and
fucomp
dec
lods
inc
xchg
cld
push
test
pop
aaa
sub
testl
out
ds
mov
ret
mov
test
cltd
in
sub
mov
fcoms
dec
push
xchg
xchg
test
into
iret
xchg
int3
fistps
cs
pop
sar
leave
sbb
add
fwait
xchg
push
dec
mov
adc
lcall
add
or
fstpt
pop
sub
mov
sti
ds
mov
shr
dec
mov
insb
inc
and
test
aad
mov
dec
push
push
fnsave
int
mov
nop
mov
pop
outsl
mov
cltd
leave
jns
jb
xchg
push
fiadds
out
dec
pop
sub
aam
or
dec
adc
dec
aad
insl
outsl
lods
insb
mov
xchg
in
dec
pusha
push
lret
in
fistps
arpl
xchg
fmul
fucomp
jo
fildl
sbb
out
and
mov
mov
fdiv
lea
insb
dec
pop
stos
ret
roll
imul
scas
aaa
int
push
xchg
stos
adc
mov
pop
xchg
pop
push
hlt
xor
inc
arpl
mov
pop
push
push
cmp
jp
jno
jo
push
int3
mov
mov
jae
insl
ficoms
adc
and
inc
push
sub
fisubrs
mov
movsb
and
rclb
shrb
jbe
mov
jge
push
adc
lea
aaa
mov
push
add
and
rorl
rorl
sub
xor
std
cmp
scas
jb
dec
and
sbb
push
gs
mov
cmpsb
mov
dec
pop
enter
daa
stos
cwtl
push
jno
in
insl
sub
or
ds
movsl
add
mov
jae
mov
or
cld
cmpsl
pop
xor
xor
adcl
pop
add
sub
push
cmp
add
dec
sub
jl
jo
inc
adc
mov
jmp
sub
lcall
mov
and
xor
push
fucompp
ror
xchg
in
sub
iret
pop
adc
lcall
jae
mov
or
into
fimull
jg
gs
testb
aad
mov
adc
cwtl
mov
fcomps
cmp
lret
pusha
shrl
cmp
pop
mov
into
les
scas
cmc
enter
mov
imul
sub
into
in
int
mov
adc
loop
xor
cmp
fmuls
mov
sbb
in
jo
scas
sti
dec
pop
stos
pop
push
fisubl
push
push
loopne
add
adc
xchg
push
imul
repz
xchg
xchg
push
test
insb
xchg
fwait
push
out
or
xchg
add
mov
mov
xchg
jge
jmp
addb
mov
inc
int
adc
je
pop
push
jecxz
or
orb
push
adc
mov
aam
jbe
sbb
cmc
dec
cmpsb
mov
mov
imul
sbb
jbe
add
and
dec
xchg
xchg
popa
and
pop
loopne
add
cmc
notb
std
js
je
ljmp
mov
cs
xor
jnp
lret
paddd
mov
je
mov
int3
fdiv
stos
cmp
bound
mov
sbb
jo
dec
inc
jp
or
push
insl
push
aad
dec
lock
test
shl
out
lret
and
pop
ret
cmp
and
sbb
pop
push
cltd
mov
sub
nop
test
cmp
push
in
repnz
mov
pop
ljmp
pop
lods
xchg
and
gs
mov
mov
inc
and
sahf
rcll
inc
jo
add
andb
sbb
xor
stos
adc
fistpl
mov
pop
loopne
push
shr
sbb
cli
mov
push
movsl
mov
fwait
mov
cs
repnz
and
cmp
je
or
rorl
inc
shl
mov
jns
mov
jmp
addr16
cmpsb
or
inc
mov
or
push
dec
sbb
mov
or
out
cmp
bound
sub
or
jnp
and
sbb
or
movsl
or
sbb
jp
push
movsb
insb
adc
movsb
loopne
jle
leave
nop
in
mov
pusha
mov
and
xchg
scas
data16
jmp
movsb
nop
mov
sub
popf
call
mov
outsb
xchg
stos
dec
jmp
mov
inc
stos
imul
scas
lcall
adc
sub
cmp
or
pop
leave
scas
pop
hlt
jle
in
arpl
jp
inc
cmp
mov
ss
fisubrl
mov
mov
fidivrs
add
rcrb
inc
cmpsl
out
xor
jb
lods
cmp
push
lods
es
jbe
stos
dec
jge
jne
sbb
pop
aaa
jnp
mov
add
mov
dec
loope
push
iret
mov
movsl
jo
mov
pop
and
xor
js
pusha
push
xor
inc
rorl
inc
cmpsb
and
push
dec
aam
enter
daa
test
cmp
jno
xor
sub
sti
add
mov
xlat
mov
movsl
or
inc
and
jge
popa
stc
xchg
push
test
jae
lds
add
push
xor
loop
inc
mov
pop
js
mov
pop
pop
int3
lds
test
loope
insb
sbb
addl
outsb
shll
cwtl
rorb
hlt
inc
cmp
and
mov
ret
ss
in
popl
push
sub
mov
inc
lcall
aad
jbe
mov
into
dec
mov
test
rolb
lea
lahf
mov
and
dec
pop
mov
jge
loopne
adc
out
int3
cmp
push
and
testl
add
cmp
mov
or
cmc
mov
shrb
or
loop
cs
fldt
add
jbe
gs
dec
lods
and
mov
out
pop
mov
cmp
inc
xor
inc
adc
sti
push
dec
jg
mov
loopne
ds
inc
adc
mov
mov
xchg
int3
xor
sbb
rorb
sub
cmp
mov
dec
dec
xor
mov
xor
xor
sub
inc
loopne
ss
adc
je
hlt
xor
push
cmp
mov
xchg
call
nop
and
xchg
jae
and
fstpt
jl
pop
or
mov
xchg
les
push
jae
adc
mov
mov
rcll
aaa
notb
cmp
cwtl
movsl
pushf
popf
mov
add
mov
sbb
test
mov
mov
std
clc
mov
bound
das
inc
push
sub
rol
in
adc
push
loope
out
or
dec
loope
jmp
jl
test
aas
mov
lds
inc
lods
xchg
mov
adc
and
mov
sbb
jno
cld
shr
jns
sub
sub
sbb
push
test
inc
fnstsw
xor
les
xchg
jp
cmp
inc
into
push
popa
and
and
add
xchg
xchg
and
push
jns
loop
movsl
jns
add
xchg
shll
popa
mov
fcompp
repnz
and
mov
xor
xchg
push
int
xchg
rcr
shrl
sbb
in
test
xchg
add
les
push
sub
fdivl
xor
jnp
or
jne
scas
xchg
pop
aam
mov
pop
jae
jmp
fildll
ja
mov
lds
mov
cmp
sub
push
lods
jne
dec
mov
xchg
out
sbb
iret
movsb
dec
jns
push
xor
popa
pop
out
imul
fstps
or
jp
aaa
divb
xchg
jecxz
jnp
adc
data16
xor
pusha
cmp
in
pop
jecxz
xchg
xorb
jmp
scas
add
inc
push
cmp
and
repz
cs
ljmp
and
aas
sbb
mov
jo
scas
std
mov
sbb
iret
pushf
pushf
lock
dec
pop
add
arpl
dec
rolb
jns
fwait
sbb
inc
push
xchg
loopne
pushf
xchg
push
sub
int3
xchg
pop
sarl
ficomps
pop
vminss
mov
test
leave
inc
imul
sti
shr
mov
mov
sbb
stos
stos
aaa
cmp
or
xchg
jl
int3
sub
jl
push
mov
aad
lds
xchg
scas
xor
sub
das
dec
in
push
sti
bound
cmpsb
cmpsl
pop
mov
das
cmp
lods
daa
test
mov
jno
mov
mov
pop
hlt
pop
ds
arpl
movsl
adc
and
rcrl
jl
push
push
sub
test
adc
in
or
rcrb
js
mov
mov
loope
jae
fsubrl
or
dec
mov
outsb
or
shlb
jp
aam
jnp
push
jl
sbb
cli
fidivs
cs
loopne
fs
pop
lea
jo
pop
pop
adc
lcall
sti
mov
push
sbb
shll
data16
test
fistl
insb
jg
xchg
pop
mov
or
cmp
mov
das
jb
sub
fistpll
adc
jnp
or
lret
mov
cmp
sub
or
mov
cmc
push
test
xor
xor
cmc
mul
sbb
stc
cmp
mov
dec
dec
out
cmpsb
sbb
jle
or
xlat
out
xor
cli
imul
xor
sti
test
stos
xchg
push
mov
jmp
loopne
loopne
call
sub
imul
and
pusha
loopne
xchg
sbb
sbb
adc
not
mov
mov
idiv
loope
cmpsl
lcall
ja
xchg
dec
arpl
inc
repz
cmc
fstps
pop
pop
je
loopne
jecxz
test
lea
sbb
outsb
pop
aam
bswap
xchg
pop
cmp
dec
jl
mov
push
fcompl
push
ror
inc
test
ss
mov
sbb
xchg
dec
addl
jle
fidivl
std
out
cmpsb
cwtl
pusha
fidivrs
sbb
mov
aad
cld
aam
hlt
lret
in
xor
mov
pop
enter
jmp
mov
mov
loopne
test
imul
or
mov
cs
pushf
movsl
xor
movsl
mov
xchg
ret
push
outsb
add
nop
lahf
ds
jmp
sub
and
test
aas
mov
or
frstor
push
clc
decl
ljmp
fcompl
cmp
inc
fidivl
addr16
outsl
xchg
imul
lea
add
faddl
sbb
cltd
mov
mov
loope
imul
xor
xchg
imul
pusha
and
inc
dec
or
in
fwait
adc
pop
push
cmp
or
insb
inc
loop
jnp
enter
mov
jg
popf
in
jmp
xchg
push
and
mov
fists
mov
out
vzeroall
imul
scas
mov
test
pop
fnsave
fcmovb
mov
cmp
imull
bound
mov
xor
sub
sub
xchg
sub
lds
jp,pt
mov
xor
cld
jnp
loopne
jle
divl
pusha
xlat
push
xchg
fbstp
jge
push
xor
jmp
mov
ret
sub
cld
iret
stos
popf
dec
lds
push
sub
stos
xor
lret
and
cmp
dec
mov
push
scas
pusha
cli
mov
fwait
mov
push
iret
sti
sub
pop
aaa
cmp
into
arpl
pop
ljmp
mov
sub
xchg
repnz
ficoml
jge
jno
fistpl
sbb
add
je
popa
sbb
xchg
loope
mov
xlat
aas
leave
mov
divps
lahf
push
jbe
icebp
mov
fisubs
mov
std
pop
or
in
jl,pt
loopne
dec
movsl
fcmovu
push
xchg
mov
xor
push
hlt
add
vmwrite
cmp
push
cmp
movb
cmpsb
sub
inc
in
push
mov
cmpsl
inc
or
jb
je
mov
ljmp
pop
cmpb
xor
and
add
test
sbb
sub
pop
ja
insb
js
push
arpl
push
aaa
lahf
loope
sahf
lock
or
sub
outsb
imul
arpl
rolb
push
xor
adc
and
cmp
and
adc
int
inc
ja
jmp
pop
pop
cmp
and
push
sub
mov
sbb
and
test
jp
stc
jae
jg
sbb
mov
mov
cwtl
adc
es
sub
cmp
int3
lock
enter
add
add
cmp
jbe
or
push
cmp
sbb
push
xor
loop
aad
stc
rep
pop
adc
movsb
int3
add
push
push
lods
lock
repnz
iret
jle
sahf
ljmp
pop
sub
in
mov
mov
inc
pop
jno
cmp
loopnew
repz
pop
outsb
repz
inc
icebp
imul
dec
repz
cmp
xchg
fnsave
sbb
dec
test
xlat
enter
in
enter
fwait
pushf
mov
inc
cs
or
mov
xchg
add
repz
in
test
push
inc
fidivs
xchg
jecxz
pop
pop
ret
mov
enter
aad
mov
xchg
pop
in
mov
push
dec
addr16
xchg
mov
pop
push
cmpsb
push
inc
mov
cmc
xchg
jb
xchg
dec
clc
outsl
xor
cltd
addr16
cmpsl
mov
std
insl
xchg
sbb
mov
int
cld
jns
lret
pop
jae
mov
mov
sbb
pushl
lds
inc
fcompl
stos
push
mov
es
dec
xor
out
dec
loope
and
or
addr16
jae
pop
lods
insb
mov
scas
xor
and
jmp
xor
scas
test
rclb
arpl
mov
test
push
cs
mov
clc
cmp
xchg
clc
jp
ljmp
pop
lods
rolb
lret
xchg
mov
push
push
das
mov
packsswb
cmp
rcrb
xor
lods
and
in
inc
dec
out
stos
and
into
repnz
rcll
dec
or
sbbl
fistpl
cld
add
xchg
sbb
clc
or
pop
push
xchg
movsl
mov
mov
adc
mov
stos
inc
inc
ja
mov
inc
jle
arpl
mov
jge
add
mov
in
cmp
push
push
cmc
jg
jns
mov
fiadds
lods
pop
push
sub
sar
addr16
mov
jp
icebp
mov
insb
add
jnp
test
in
inc
test
or
mov
jmp
jae
cmp
add
imul
stos
movsl
cmp
and
mov
jne
push
shr
ret
inc
clc
push
loop
and
push
push
jbe
pop
mov
mov
hlt
pop
mov
adc
repz
or
cmpsl
or
jne
inc
dec
jmp
int3
pop
movsb
xchg
js
fisubs
cmp
shrb
sub
sub
leave
xor
dec
ja
push
cltd
rcrl
inc
jmp
scas
aaa
mov
jbe
add
mov
push
js
add
imul
cmp
fwait
nop
inc
sbb
cmpsb
lods
add
sbb
fiadds
cld
cmp
out
sub
cmp
hlt
fldenv
cmp
lahf
mov
ja
test
sub
xor
pop
in
sahf
pop
push
js
xor
push
lahf
jae
pop
in
faddl
sub
jmp
and
sbb
lret
and
xorb
sbb
mov
mov
iret
push
out
and
sub
testb
mov
add
mov
ret
pop
rcrb
insb
mov
jg
cmpsb
and
mov
inc
rcll
int
ss
mov
fadds
sub
clc
dec
add
xlat
sub
rclb
into
push
clc
in
in
stos
xor
adc
loop
ja
stc
stos
jg
adc
dec
ja
les
std
data16
add
lods
xlat
adc
out
icebp
jns
rcll
push
in
sbb
popa
sti
or
push
call
adc
and
mov
cmp
enter
cmp
repz
shll
xchg
mov
xor
xlat
pop
std
dec
sub
sub
dec
adc
test
mov
nop
jae
movsb
dec
or
adc
mov
fnsave
jo
jge
shufps
cmpsb
lea
push
call
or
pop
pop
adc
cmp
mov
jo
pop
cmc
arpl
mov
rcrl
outsl
add
xchg
stos
mov
inc
in
fdiv
pusha
xlat
fwait
std
adc
xchg
cwtl
sbb
mov
orl
lock
lret
ja
mov
pop
mov
jnp
lock
rorl
das
fisubs
ljmp
filds
inc
jne
inc
pop
fisubs
outsl
sbb
insl
icebp
or
cmpsl
movsl
mov
mov
dec
xlat
sub
mov
and
xchg
arpl
into
mov
shlb
pushf
sub
dec
jp
lods
lock
push
pusha
push
icebp
or
mov
out
clc
jne
lret
push
gs
daa
pop
pop
int
stos
and
mov
sub
mov
jmp
add
pop
lcall
push
repz
out
mov
push
imul
pop
sub
lods
xchg
jno
lods
jp
or
cmc
mov
push
jle
jae
scas
out
movsl
add
lea
dec
jge,pt
insl
push
and
push
fs
xchg
hlt
xchg
push
mov
push
pop
gs
dec
ja
cmp
rolb
outsl
sub
das
mov
jne
sub
dec
mov
out
mov
sbb
mov
imul
push
mov
dec
pop
sub
mov
xchg
xor
faddl
mov
push
daa
insb
rorb
pusha
out
in
jle
cmc
test
inc
ds
or
inc
inc
xchg
sti
leave
mov
inc
rcrb
data16
push
push
orb
popf
fwait
lds
movsb
iret
fstl
daa
mov
sbb
and
insb
sbb
push
dec
imul
scas
xchg
adc
icebp
ror
push
push
ret
cmp
pop
push
stos
pop
mov
inc
dec
sub
rclb
mov
sar
inc
int
push
xchg
and
rcrl
lcall
outsl
ret
enter
ror
bnd
inc
leave
stos
cmpsl
outsb
movsb
fnstenv
and
call
or
jge
xlat
dec
sbb
xchg
ja
inc
or
es
jl
test
and
push
pop
jle
xor
les
int
dec
and
pop
loop
pop
add
inc
lods
cmpsb
xor
cmp
adc
movsl
dec
mov
fsubs
jno
sar
or
js
arpl
mov
aam
sbbl
mov
ds
xor
xor
push
sar
pop
lds
fistl
push
or
push
mov
jl
sub
sub
pop
in
adc
imull
xchg
icebp
cmp
addb
sbb
mov
and
movsb
and
jmp
shrb
lea
lcall
data16
push
add
mov
xor
dec
xor
test
addl
repnz
mov
mov
fs
pop
adc
fidivs
repz
cmp
inc
push
push
testl
shll
cmp
test
or
aam
cmc
stos
jle
xor
lock
and
dec
xchg
popa
decb
scas
dec
xchg
add
add
gs
lods
mov
mov
or
add
mov
in
xchg
sub
mov
xor
or
gs
shlb
leave
pop
inc
or
in
add
imul
repz
pop
xchg
arpl
sub
ret
xlat
inc
jae
sub
and
dec
pushf
clc
add
jmp
fsubs
aad
aaa
ja
dec
outsl
add
imul
rcr
rorb
je
popf
pop
jecxz
xchg
hlt
leave
cmovb
fisttps
mov
jbe
push
add
dec
cmp
hlt
ret
adc
popf
inc
ror
xchg
xchg
and
and
dec
out
push
and
adc
rorl
je
mov
sbb
push
xchg
and
repnz
mov
mov
mov
je
mov
adc
mov
inc
fmul
ret
lret
clc
es
xchg
insl
fmuls
or
pop
mov
mov
and
xor
dec
and
lods
and
pop
in
fcmovbe
cmp
sub
pusha
je
popa
inc
jg
mov
cld
fstp
xor
clc
mov
rcll
push
insb
pusha
popa
addl
pop
out
nop
mov
push
push
in
cld
mov
daa
add
jb
xor
xor
push
sti
mov
ljmp
test
lret
scas
xchg
popf
and
pusha
ds
add
lret
cmp
push
and
cmp
mov
lahf
shlb
mov
or
cmc
cmp
xchg
inc
mov
push
pop
and
test
inc
mov
inc
lods
clc
jb
add
imul
int3
jne
push
mov
xchg
push
xchg
push
bound
sub
xchg
adc
dec
sbbl
fsubrs
mov
repz
test
jl
mov
or
insb
cmp
sbb
in
fwait
lock
test
mov
xchg
into
fs
cmp
inc
and
xor
push
rcrl
mov
fildll
mov
and
dec
sbb
out
imul
lock
mov
aaa
adc
ljmp
loopne
hlt
cmc
jo
arpl
sbb
roll
push
dec
push
out
lods
inc
fsts
xor
pop
lea
inc
mov
jecxz
or
shlb
add
and
adcl
shlb
lret
stos
adc
aaa
ss
fimull
xorb
jmp
add
lea
xor
pop
pop
cltd
scas
lods
pop
loope
and
cmp
pop
sbb
imul
bound
lret
enter
rcrl
movsb
xchg
lahf
cmp
xor
sub
push
cmp
xlat
out
xchg
das
ljmp
cld
mov
push
mov
mov
add
pop
xor
fs
adc
xchg
jo
dec
adc
push
mov
loope
negl
sub
sub
adc
shlb
sbbb
sbb
fistl
and
push
xchg
push
in
inc
xchg
int
push
fsubrl
pop
sbb
pop
or
xchg
lcall
cld
mov
cwtl
jo
repnz
clc
lea
orb
jg
leave
aas
mov
inc
adc
addr16
push
ss
cmp
std
cli
mov
lret
add
push
dec
push
or
outsl
mov
cmc
jb
divb
lret
add
and
fs
fdivrp
sbb
jno
jp
flds
loop
cmp
cmp
movsl
adc
out
shll
aaa
iret
mov
in
repnz
sti
cmp
cs
into
loopne
cltd
fs
fs
test
mov
scas
jmp
loopne
sub
xchg
movsl
push
sbb
std
out
xlat
test
sub
andl
add
jmp
shlb
cmp
pusha
nop
sub
dec
enter
aas
add
fincstp
loopne
je
fsin
jecxz
adc
int3
jae
ljmp
or
sub
es
mov
scas
inc
cmp
lret
in
aas
xor
jb
mov
mov
stos
leave
sahf
rcr
inc
test
out
sbb
bound
xlat
mov
repnz
pop
cld
sub
lret
test
neg
mov
sub
int3
xchg
cld
das
pushf
sbb
mov
rorw
ret
gs
es
or
dec
rorb
cmp
clc
or
mov
pop
mov
call
pop
or
and
or
mov
test
and
mov
jnp
push
ja
cld
xor
jmp
dec
xchg
mov
dec
ljmp
pop
scas
bound
out
repz
sar
jo
movsl
negb
into
movsl
jmp
xchg
push
or
xchg
push
xchg
push
sbb
fwait
icebp
rcrl
sub
adcl
shrb
jns
mov
push
divb
out
pop
add
pop
cmp
in
sub
in
xlat
push
push
pop
fldt
stos
ja
rcrl
pop
std
push
inc
inc
cmpsb
scas
mov
gs
mov
mov
out
jae
pop
bound
das
nop
xchg
pop
subl
sbb
xor
inc
outsl
or
call
iret
mov
and
jnp
push
scas
jle
out
push
pop
dec
pusha
inc
push
jae
repz
ljmp
cmp
add
xor
or
scas
popf
jmp
mov
stos
jecxz
and
inc
sbb
push
sti
imul
scas
in
jecxz
push
mov
add
xchg
add
imul
cld
mov
hlt
inc
xlat
sub
inc
dec
icebp
mov
sbb
xchg
inc
lret
int3
pop
dec
xchg
sbb
sub
lds
jmp
sbb
or
and
test
cwtl
pop
xchg
movsb
out
movsl
pop
push
xchg
xor
or
fs
popa
push
sbb
cwtl
iret
or
jmp
jl
jns
dec
popa
cld
sti
push
and
add
jp
aam
mov
mov
cmp
ret
push
repnz
inc
sub
out
repnz
mov
sbb
iret
ds
daa
mov
mov
jno
frstor
jecxz
and
lret
ds
test
or
ficoms
out
sahf
test
dec
fidivs
sbb
jo
fcoms
pop
adc
adc
fistpll
push
or
cmp
orl
and
lods
sub
lods
dec
aam
scas
je
subb
sbb
scas
pop
mov
sub
or
out
ret
push
iret
push
sub
ljmp
in
mov
xchg
sbb
repz
xchg
divl
test
andb
jg
popa
mov
mov
aaa
fs
mov
pushf
mov
addb
test
add
mov
fdivrl
jecxz
or
addr16
cmp
fidivl
xor
test
int3
inc
loop
xchg
lahf
stc
iret
out
adc
inc
icebp
add
popf
data16
adc
cs
xor
subb
push
ja
mov
or
sti
adc
adc
gs
inc
icebp
loopne
dec
mov
adc
xchg
ss
jmp
repz
xchg
jmp
or
cmp
fcmovb
xlat
jmp
sub
bt
mov
aad
aad
nop
add
mov
inc
push
lds
je
imul
lea
shr
aad
dec
mov
gs
mov
fwait
cmp
fistl
inc
pop
ficoms
shl
inc
or
pop
aas
iret
aas
pop
jb
mov
and
xlat
fwait
shrl
xor
cwtl
pop
shl
mov
loopne
mov
push
adcl
push
lret
sbb
cltd
mov
sbb
lock
cwtl
push
das
jnp
cmc
mov
sbb
stc
sbb
hlt
and
clc
xor
dec
int
test
xlat
repz
iret
cmp
lods
sbb
mov
cmp
mull
push
push
ret
pop
sub
call
fbstp
jno
or
lret
cmp
mov
repz
outsb
jge
es
scas
clc
es
xchg
hlt
filds
ljmp
lods
pop
pop
jmp
stos
out
jle
out
push
or
lds
fwait
mov
xchg
add
push
cltd
pushf
aam
xor
dec
outsb
mov
lock
push
dec
mov
repnz
push
xchg
pop
mov
stos
cld
shll
inc
mov
push
shll
int
add
in
call
aaa
pop
or
push
push
in
cmovg
sbb
mov
xchg
repz
loope
dec
dec
icebp
cmp
ja
mov
aam
sub
inc
sbb
sbb
mov
out
push
push
fisubs
cmpsb
data16
dec
lea
push
push
sub
lods
xor
cltd
jp
cltd
mov
pop
inc
insb
adc
cmp
in
jle
sbb
pop
adcl
adc
leave
xchg
je
sbb
sub
fildl
popa
jae
int3
adcl
adc
sarl
fsubrl
jno
push
and
mov
imul
stos
scas
dec
add
push
cmp
adc
fmulp
cs
pop
and
xlat
xor
mov
push
inc
push
add
add
pop
inc
dec
int
ficoml
or
xchg
sub
int3
or
push
pop
jmp
jae
das
std
scas
lds
or
sbb
mov
bnd
push
rsm
xchg
movsb
jp
test
jbe
adc
jge
sti
ja
gs
lods
aaa
mov
push
or
jno
loopne
inc
jl
mov
dec
shrb
loope
add
in
outsl
jne
jo
pop
mov
and
xor
jns
jg
mov
add
in
cltd
data16
lret
daa
mov
in
jno
and
lds
ds
test
movsl
cmp
stos
push
lahf
cmp
inc
push
dec
jg
test
push
mov
out
inc
fwait
in
pop
cmp
js
inc
rclb
adc
inc
push
inc
mul
mov
jg
sub
jl
outsb
mov
adc
mov
lods
push
cwtl
jbe
xorb
cmp
mov
std
fbld
push
jge
push
repnz
int
sub
sub
jbe
or
fs
jbe
jecxz
test
pop
adc
cmp
into
test
aas
bound
out
aad
jmp
sbb
jge
std
adc
or
ss
push
sahf
fdivs
and
lret
pop
shll
in
or
fcompl
popf
cmc
add
jl
mov
pop
outsl
ret
loop
add
inc
adc
cmp
push
data16
inc
add
sub
out
mov
sbb
xchg
dec
aaa
in
enter
les
sbb
loopne
push
sub
adc
sbb
and
negb
mov
movsb
sbb
xlat
add
mov
sub
mov
stc
jl
jmp
push
dec
cs
push
aad
mov
insb
dec
xchg
std
inc
gs
jp
xor
jecxz
frstor
rclb
call
or
ret
adc
or
mov
sbbb
pop
and
and
addr16
jb
mov
dec
dec
scas
xchg
and
cmp
sarl
imulb
std
mov
mov
mov
push
mov
mov
stos
pop
mov
xchg
lods
mov
imul
lods
xor
pop
and
mov
mov
mov
es
mov
jl
dec
enter
mov
andb
xchg
xor
and
repnz
pop
dec
adc
mov
jge
add
test
test
mov
mov
push
std
ja
fisttpll
xchg
popa
ljmp
test
outsb
cmp
fsubrs
mov
inc
in
push
jbe
add
ds
add
pushf
pop
xor
inc
cmp
repz
jmp
repnz
outsl
test
xchg
dec
xchg
push
sbb
and
or
nop
fwait
cs
jge
or
add
push
jne
pushl
inc
mov
in
inc
push
xchg
xor
inc
mov
push
push
insb
ja
je
dec
ds
aam
jno
ret
xchg
pop
mov
sbb
idivl
mov
movsb
nop
out
xor
aam
jns
add
ret
addl
out
sub
sub
cmpsl
jne
add
jp
xchg
out
cld
mov
and
ds
jle
lock
or
jns
clc
fbstp
mov
ljmp
push
dec
push
mov
cmp
nop
pushf
mov
and
and
cmp
mov
adc
dec
imul
pop
orl
arpl
jge
push
mov
insb
loopne
push
leave
push
add
xchg
jg
cmp
rep
add
lret
sbb
lds
mov
mov
leave
jecxz
leave
xchg
rclb
imul
sbb
mov
mov
pop
xlat
jne
ja
inc
jl
mov
xor
out
mov
ss
divb
jle
scas
dec
scas
and
inc
test
push
mov
fiaddl
xor
cmpsb
cmp
int3
in
orb
enter
daa
mov
int3
gs
mov
cmp
mov
out
or
and
xlat
lahf
pop
subb
sbb
add
jge
mov
pop
sahf
mov
mov
fcom
pop
sub
popa
lcall
push
xchg
loope
xchg
mov
flds
sub
lret
lret
bound
test
shlb
xchg
insl
mov
fcomps
outsl
jns,pt
mov
nop
and
push
cmc
adc
int
outsb
in
sub
inc
or
mov
fstps
xor
aad
sbb
cmp
lea
jg
pushf
mov
and
add
lea
inc
adc
xor
decl
fsubrs
cmp
testl
rol
adc
cwtl
or
aas
into
mov
cltd
dec
xor
clc
jo
mov
stos
sbb
adc
mov
and
lods
pop
inc
cld
mov
in
shl
fdivl
push
inc
sti
jae
test
xchg
mov
push
loopne
repz
adc
sbb
imul
or
xchg
outsl
jmp
sbb
scas
jl
xlat
inc
je
sub
sbbl
xor
cs
aad
add
nop
mov
test
pop
fstps
sub
enter
aad
pushf
lea
mov
dec
mov
loop
pop
cli
aaa
adc
movsb
out
dec
jmp
lods
push
pop
and
sbb
inc
inc
nop
aas
or
lds
dec
ret
and
out
adc
imulb
iret
xor
jge
divl
push
inc
and
cld
add
aas
lret
testb
mov
xchg
ret
mov
and
fst
inc
das
cmp
mov
mov
cs
adc
lock
je
xchg
dec
ret
sahf
inc
cmpsl
mov
les
lods
out
dec
inc
mov
sub
and
lea
dec
rolb
bound
in
sbb
shl
fnsave
clc
pushf
sub
jb
sahf
ljmp
fcompl
out
int3
sbb
out
sbb
js
pop
es
push
and
add
or
xor
xchg
cli
mov
notb
or
test
or
xchg
and
sub
cwtl
shll
sbb
fwait
pop
mov
push
lods
dec
or
sub
mov
xor
mov
rcl
in
rorb
xchg
jg
mov
mov
jg
pop
or
push
mov
cmc
dec
inc
or
jp
mov
test
jne
dec
sub
adc
scas
bound
stc
jns
mov
sbb
or
mov
les
jp
add
mov
inc
mov
inc
jnp
jnp
jle
lahf
fxam
imul
sub
push
test
jmp
pop
jle
jae
lods
xchg
push
pop
dec
popf
pop
fsubl
mov
loop
popa
stos
push
and
bound
test
imul
test
into
xchg
adc
mov
and
pop
mov
add
arpl
inc
inc
push
add
push
dec
pop
adc
js
mov
int3
fidivrs
pop
dec
rcll
cmp
dec
popf
mov
fmull
std
leave
std
xor
movsb
nop
enter
and
shrl
xor
aaa
xor
and
jl
popf
orb
fimuls
lret
xor
mov
insl
and
cmp
cmpsl
outsl
push
push
cld
test
test
sub
xchg
jne
shrb
cmp
push
jae
and
clc
cmp
stc
sbb
adc
scas
and
in
mov
push
out
cmp
test
push
sbb
test
mov
mov
mov
push
rolb
call
loopne
sub
ficoms
dec
mov
ds
ds
int3
ljmp
cmpsb
cld
pop
mov
xchg
mov
je
or
clc
jmp
int
xchg
jmp
pop
or
lcall
inc
mov
popf
cli
sahf
jle
or
mov
inc
jg
inc
push
mov
pusha
fs
xchg
or
cmpsl
pop
loop
inc
mov
cmp
jmp
mov
stos
push
fadd
push
sarl
cmpsb
rorl
ljmp
cmc
mov
inc
outsl
and
loop
test
stc
hlt
adc
adc
sub
add
ljmp
inc
ret
pop
or
jg
jo
add
in
sahf
sahf
and
and
mov
repz
loope
stc
pop
loopne
cmp
add
mov
adc
cmp
or
sub
fmuls
cmp
repnz
cmp
sub
xlat
cmpl
mov
dec
dec
fucomp
pop
dec
je
rcl
aad
mov
nop
xchg
push
xchg
inc
mov
movsl
xchg
je
adc
fmuls
stos
call
pop
mov
pop
sarb
adc
out
fneni(8087
add
push
inc
push
cmp
inc
pop
cmp
loope
jb
xor
cmp
test
div
rcrl
sbb
div
sahf
dec
std
mov
cmp
inc
call
cld
sub
sub
cmpsb
ret
mov
mov
cmp
lock
xor
sbb
lcall
push
aam
mov
jmp
sbbl
mov
pushf
pop
mov
push
lods
and
mov
cmpsl
and
sub
pop
mov
rcrb
pop
sub
and
test
jl
mov
negb
fstpl
jbe
mov
gs
add
jge
mov
and
xchg
mov
add
paddb
jbe
inc
sbb
mov
stc
mov
add
xchg
lret
adc
rorb
add
mov
add
inc
rcll
pushl
xchg
xor
add
or
stos
lods
in
scas
rclb
jecxz
fnstsw
lret
adc
sub
and
aad
lahf
sarb
add
dec
adc
adcb
outsl
adc
cli
test
push
xchg
or
jb
inc
ja
sub
popf
mov
addr16
mov
enter
jp
push
jnp
jnp
jge
jle
rolb
jo
xlat
pusha
scas
ret
loop
outsl
push
xchg
in
jbe
jmp
adc
insb
jae
add
push
adc
jp
test
cmpb
xor
pop
and
pop
inc
sbb
aas
xchg
imul
test
lods
push
adc
sbb
xchg
ret
push
pop
out
push
add
insb
mov
cwtl
inc
pop
icebp
imul
xorl
sub
xchg
sub
pop
aaa
pop
js
enter
fadd
cltd
pop
and
push
pop
mov
outsl
mov
movsl
movsb
sbb
ret
jbe
sub
jge
and
aaa
icebp
jae
or
mov
movsl
xor
dec
sbb
mov
arpl
testb
dec
and
xchg
lret
aad
push
push
pop
cltd
inc
imul
dec
add
mov
mov
stos
jno
leave
inc
sub
cmc
sub
xchg
ds
aam
and
popa
lahf
xchg
int3
cmp
ljmpw
add
mov
push
bnd
pop
scas
mov
ret
pop
rcr
pop
push
and
incl
pop
fsubrl
dec
repz
pop
ret
xor
push
sub
int3
cmpb
in
mov
arpl
push
sti
ss
sub
lock
pop
xchg
mov
jecxz
cld
mov
xor
fwait
mov
adc
in
ret
out
mov
adc
fs
push
notl
imul
lret
test
cmp
movsb
inc
push
shlb
popf
lock
shr
dec
cmp
popl
pop
je
into
test
sub
push
cmp
popf
jnp
outsl
pop
hlt
and
inc
xchg
cmp
push
adc
and
lods
cmc
insl
xorw
lods
sub
xor
jle
xor
cmp
push
or
in
or
sub
roll
cld
gs
shl
jl
cltd
pop
cmp
xlat
pop
push
imul
fistl
repz
xchg
cmc
or
cmp
sbb
rorb
test
mov
cli
imul
sub
in
test
nop
jo
xor
push
outsl
inc
sahf
fstpl
je
repz
lea
jbe
in
ficoml
shll
pop
test
and
xor
mov
pop
push
loope
and
rcrb
cltd
rol
dec
mov
jnp
popa
push
and
divb
pop
ret
cwtl
repz
mov
ret
out
mov
aas
or
push
cmp
lret
aam
jnp
sahf
ret
daa
mov
mov
testl
mov
add
frstor
add
icebp
insl
inc
in
aaa
dec
mov
cmp
mov
outsl
add
dec
test
outsb
or
ret
mov
pop
cmpsl
xorl
sub
addb
cmp
push
inc
dec
inc
ffree
xchg
add
adc
xchg
lock
or
dec
stos
stos
lret
loop
je
call
cmc
xor
pop
mov
add
add
cltd
js
jmp
inc
sub
mov
cld
cmpsl
xchg
dec
daa
xchg
test
cwtl
jbe
push
sbb
pop
lock
inc
pop
fwait
mov
mov
dec
add
insl
call
pop
pop
xor
and
in
loope
xchg
sbb
push
mov
pop
and
ja
dec
rorb
leave
pushf
inc
ss
mov
nop
aad
dec
test
inc
mov
push
push
bound
adc
cmp
xor
lahf
out
dec
mov
or
aas
mov
mov
mov
insb
mov
inc
cmp
out
cmc
fs
std
repz
dec
push
aad
mov
rorb
add
mov
jae
pushf
push
push
xlat
cwtl
hlt
popf
lods
push
xor
pusha
add
pusha
and
jbe
push
int
imul
cmp
icebp
loopne
ficoms
ret
add
je
hlt
mov
and
icebp
imul
xchg
lock
inc
test
xchg
test
insb
int3
mov
and
stc
test
mov
pop
rolb
jp
ret
leave
jmp
ja
cmpsb
adc
adc
push
sbb
iret
sbb
hlt
aaa
mov
mov
xor
dec
add
sarl
dec
mov
mov
inc
push
mov
out
aas
and
cmpsl
push
jmp
lds
xor
pop
xchg
daa
sahf
sbb
cmp
sahf
mov
add
ds
push
xchg
movsl
pop
stc
and
add
push
xchg
movb
sbb
xor
popf
dec
cmpsl
stos
pop
pop
mov
lahf
pop
adc
push
sub
ficoml
fildll
inc
cmp
mov
rcl
hlt
jne
or
mov
adc
mov
and
cmc
repnz
mov
movsb
dec
pop
push
test
lcall
fisttpl
aaa
aam
les
addb
xchg
jbe
aaa
fidivrl
fs
mov
cmpl
stos
div
jg
jbe
nop
mov
roll
sahf
or
daa
mov
push
enter
fiaddl
outsl
or
stc
bound
adc
insb
call
pushw
rorb
js
jge
sbb
imul
in
je
push
sti
subb
gs
into
loopne
add
push
stos
add
imul
inc
call
xchg
mov
inc
mov
pop
inc
sbb
lcall
adc
notl
fisubl
movsl
arpl
jmp
popf
aaa
lea
cmp
add
out
inc
pusha
loope
pop
daa
mov
fimuls
lea
call
add
xchg
jp
xor
les
pop
fstpt
add
or
mov
cmp
ljmp
dec
daa
popf
add
sarl
orl
cwtl
scas
cmp
mov
fistps
cld
subb
mov
cltd
gs
lds
pop
cli
mov
mov
in
aam
or
mov
mov
lods
dec
mov
stos
cmpsl
popf
pop
push
mov
add
lods
das
mov
out
jmp
scas
mov
scas
and
decb
pushf
test
dec
xchg
push
or
pop
fucomp
in
out
clc
dec
arpl
xchg
das
cmp
and
push
stos
cltd
inc
cld
out
inc
repz
xchg
das
and
lahf
bts
add
pop
cltd
cltd
scas
and
in
cltd
sahf
or
mov
test
adc
std
sbb
mov
or
push
mov
push
xchg
mov
stc
add
jl
mov
scas
xor
nop
fimuls
and
push
inc
mov
dec
mov
cmp
jmp
dec
or
inc
int
lea
push
dec
fiaddl
jne
adc
mov
rcrb
bound
call
and
es
inc
xchg
movsb
sub
xchg
cmp
push
jp
xchg
mov
movsl
adc
jmp
fmul
push
jle
packuswb
jle
out
pusha
in
mov
lods
inc
xchg
xchg
xchg
push
pop
jmp
sub
sub
lcall
mov
lahf
pop
cmp
mov
mov
leave
push
sti
jns,pn
jne
sbb
popa
cwtl
mov
mov
xchg
arpl
cmp
and
arpl
test
pusha
sub
or
cli
mov
inc
lds
dec
xchg
fisttpl
int3
lahf
xchg
sub
cmp
ficomps
sub
cmpsl
loop
mov
into
fptan
adc
rcll
pusha
ljmp
and
sbb
xor
outsl
jns
or
xor
add
stos
fistpll
outsb
dec
sti
cmpsb
imul
push
lock
jo
mov
xor
and
sbb
mov
cmpsb
dec
in
sbb
dec
mov
sbb
popf
add
cmp
insb
jno
xchg
mov
gs
cmp
fstl
stos
add
pusha
push
fsubl
lods
call
push
push
sub
xor
mov
push
jns
std
outsb
jp
jmp
in
dec
inc
lret
push
out
loope
or
sub
and
adc
iret
xchg
sbb
jg
dec
pmulhuw
mov
int
pop
call
pop
test
rcll
cmp
jp
and
add
into
sahf
addr16
fildl
pop
adc
les
loopne
inc
fs
or
xchg
pop
ss
in
push
cmp
sbb
lret
fadd
sbb
or
lahf
adc
dec
add
xor
push
outsl
sbb
dec
dec
stc
sbb
adc
or
lret
fsubs
lods
negb
mov
jl
push
cli
pushf
dec
test
ljmp
das
fwait
inc
and
mov
sub
loopne
sub
mov
jge
and
sbbb
sub
inc
loopne
jnp
mov
cmp
mov
sub
mov
push
das
out
in
in
dec
lock
nop
es
testb
cld
inc
les
bnd
scas
popf
jecxz
add
loope
insl
lea
jl
movl
push
dec
xchg
insl
cmpsb
sub
bnd
inc
scas
or
aas
mov
cmp
repnz
and
or
roll
inc
ret
and
repz
cwtl
imul
jae
and
jp
sahf
aas
mov
lret
mov
testl
dec
ds
mov
sub
addr16
aam
ds
ret
dec
add
or
dec
scas
and
pushf
add
in
fldenv
lods
lcall
mov
in
out
mov
in
inc
rcl
aaa
js
aad
test
adc
or
je
fstl
sub
mov
notl
cmpsb
lds
shl
pop
adcl
mov
test
xlat
xchg
jbe
stos
push
mov
and
cltd
out
dec
xor
push
pop
mov
add
push
cmc
cmp
es
jmp
sub
mov
cmp
sbb
push
cmp
lods
add
xchg
jno
call
jne
xor
add
pushf
stc
add
xchg
mov
or
pop
clc
xlat
xlat
ja
adc
dec
std
insb
stos
inc
fs
mov
pop
ss
mov
in
mov
jo
mov
dec
push
out
mov
bound
push
xlat
xchg
insb
js
adcl
out
dec
aad
push
outsl
or
lret
xchg
jp
lds
insb
xchg
inc
jnp
sbb
test
and
xchg
mov
repnz
testl
jle
pop
cli
lea
mov
add
xor
stos
and
sbb
fs
imul
mov
mov
hlt
iret
adc
ret
cmp
sbb
hlt
dec
roll
mov
jge
outsl
es
push
inc
movsb
hlt
fiaddl
xchg
xor
push
pop
add
ja
lds
or
pop
inc
sub
push
cli
insl
movsb
mov
mov
jbe
pop
and
dec
les
pop
adc
cs
sbb
pop
add
pop
jl
data16
push
out
push
mov
pushl
inc
mov
mov
ss
jg
and
cmpsb
lret
xchg
ljmp
daa
pushf
push
cmp
mov
sub
cltd
sub
xchg
pop
std
ds
cmc
adc
and
cmp
push
cmp
std
test
xchg
clc
push
xor
mov
dec
pop
and
mov
pop
mov
loope
rolb
xor
lea
icebp
mov
sbb
stos
stos
and
repnz
sub
pop
push
push
add
sbb
sub
mov
xor
popf
pop
add
adc
call
popf
pop
sbb
loop
sahf
or
jnp
and
xorb
mov
fs
xor
ss
aam
cmp
aad
fs
sbb
jbe
mov
scas
xlat
xchg
cmp
inc
les
cmpsb
fimull
jae,pn
cmc
stos
test
scas
aad
outsl
cld
cmp
loop
repnz
rolb
adc
sti
popl
pop
mov
data16
js
fnsave
fsubp
jnp
sbb
iret
call
hlt
in
dec
push
mov
incb
cld
mov
loopne
outsb
mov
adc
mov
out
in
les
or
repz
and
sbb
cmp
mov
xlat
jge
shrb
fstl
inc
pushf
sti
into
mov
fildl
adc
push
push
mov
lret
dec
addr16
add
lea
shll
repz
jecxz
mov
in
lea
mov
or
pop
sahf
sbbb
orb
fistpl
jle
jb
jno
leave
int
aas
sub
dec
adc
pushfw
rcll
pop
idiv
xor
and
imul
xor
lea
mov
xorb
lret
xchg
xchg
inc
mov
push
inc
loopne
lds
into
insl
mull
dec
stos
jne
cmpsl
fwait
xor
icebp
mov
outsl
lods
add
movsl
hlt
mov
jmp
sbb
add
xchg
shlb
adc
mov
mov
push
ss
fnsave
dec
adc
ret
pop
enter
test
sbb
xchg
pop
push
fdiv
stos
ja
pusha
out
or
les
inc
push
vmread
add
xor
add
mov
aaa
xchg
loope
test
int3
mov
sbb
push
rcrb
iret
xchg
add
mov
jae
out
icebp
mov
or
pop
sub
xchg
or
mov
cmp
mov
mov
add
mov
push
inc
sti
and
addl
dec
mov
xor
mov
loopne
out
imul
jns
in
xchg
aaa
xchg
pop
andl
jg
push
jo
or
xlat
push
jp
mov
xchg
insb
add
push
ss
jle
sbb
cmp
jbe
fucomip
sub
cmp
iret
jmp
ds
jae
add
push
and
popf
and
mov
push
sbb
out
and
leave
push
sbb
outsb
je
push
xor
jnp
out
adc
adc
stc
iret
outsl
vmlaunch
pusha
popf
repnz
lret
arpl
hlt
cwtl
fstps
jmp
inc
xor
inc
push
push
ret
inc
mov
imul
cmpsl
xchg
mov
cwtl
int3
jne
popa
pop
xor
mov
movsb
ss
mov
adc
push
cmpb
xlat
push
leave
push
jb
inc
xchg
and
ret
and
jns
sbb
aaa
in
mov
add
mov
jl
push
dec
fcos
outsb
push
cmp
pop
jo
fcoms
and
and
sub
jp
jle
dec
sub
cmpsb
dec
mov
mov
daa
fwait
push
inc
cmp
add
jno
hlt
subl
xchg
cmp
cmpb
xor
movsl
outsb
fs
and
repz
adc
cmp
mov
xor
or
js
and
int
sbb
jns
loope
fwait
dec
push
icebp
sub
dec
outsb
cmp
rolb
ljmp
sbb
fsubrs
push
pop
jmp
int
stos
dec
sub
adc
lcall
mov
push
inc
les
pusha
pop
mov
mov
pushf
cmpb
pushf
mov
adc
dec
mov
adc
shll
ds
cmp
nop
push
mov
lret
repnz
cmp
jl
or
xlat
fcomip
jno
jg
or
outsl
fistpl
loop
shl
stc
xchg
or
jmp
and
les
in
jp
adc
add
push
xor
test
mov
mov
lea
enter
push
loopne
ret
jnp
xchg
adc
inc
cmpsb
imul
outsl
in
jecxz
call
mov
stos
cmp
inc
fcmovnbe
mov
es
mov
cmpsb
inc
sub
fnstcw
mov
and
adc
iret
nop
fcoml
dec
pop
lock
xor
sbb
cmc
jecxz
xchg
out
add
lods
xchg
add
push
test
adc
and
lret
cmp
pop
divb
inc
stc
icebp
std
inc
in
aas
xchg
in
jb
push
stc
dec
mov
add
movsl
arpl
testb
std
inc
daa
rcrl
int3
out
mov
mov
scas
cld
add
mov
mov
mov
mov
xchg
stos
lock
das
jae
xor
mov
das
mov
js
adc
int3
dec
movsl
pop
mov
lcall
icebp
xchg
movsl
lods
jo
pop
mov
push
out
add
das
mov
std
shlb
cmp
ret
jb
test
int
mov
dec
adcl
push
and
xchg
in
imul
addr16
pop
mov
test
outsb
push
and
jae
xchg
mov
mov
xor
inc
aaa
mov
or
ret
insb
dec
test
add
adc
shrl
addr16
cmpb
jg
lods
add
lret
xchg
mov
xor
imul
in
hlt
in
xchg
pop
cmp
mov
fbstp
pop
outsb
sbb
sbb
inc
dec
jecxz
clc
inc
xchg
adc
mov
dec
ret
mov
jne
pop
jnp
xchg
fnstenv
and
xorl
lret
and
sub
test
addr16
cmpl
or
imul
jle
adc
pusha
mov
lcall
popf
pop
jmp
dec
loopne
jae
stos
outsl
push
jecxz
cltd
popf
dec
cmc
cs
pop
outsb
out
or
std
and
sub
cld
dec
xchg
imul
scas
addr16
push
ss
adc
jb
into
shll
jae
push
pop
add
hlt
jecxz
mov
stos
jno
inc
imul
push
inc
popa
or
stos
dec
xchg
xchg
loopne
int
pusha
pop
jmp
arpl
mov
shl
fidivrs
push
popa
test
movsb
shr
push
dec
adc
xchg
jge
loope
sbb
filds
or
sbb
add
inc
lret
dec
dec
push
repnz
sbb
in
xor
lods
orb
jl
fsubp
dec
cmp
push
adcb
inc
xor
mov
in
sarl
enter
daa
lcall
jno
pop
add
addb
icebp
movsl
into
ds
aad
jne
mov
lahf
xor
loope
mov
mov
lods
push
in
mov
jecxz
jb
cmpl
cmp
jb
add
xchg
subb
fs
mov
push
shlb
jne
push
inc
jo
sbb
pop
sbb
in
mov
inc
jb
into
lds
int
daa
and
sub
addb
xchg
pop
lcall
orb
xor
mov
scas
jg
imul
mov
andb
adc
sbb
cmp
dec
push
shl
jnp
popf
lret
lret
rcr
jecxz
les
add
hlt
cs
cmp
aam
and
mov
loop
stc
ds
mov
js
cmpsb
data16
lods
stos
xorl
cli
xor
enter
and
sti
cmp
loope
mov
stc
loopne
sub
lcall
imul
es
repz
pop
xchg
rcl
fsubrl
push
xlat
sti
in
ret
ljmp
push
mov
jne
cs
sbb
pop
cmc
add
mov
inc
dec
jle
repnz
std
int
fstps
inc
mov
xor
loope
lock
sub
movl
cmp
adc
jns
cli
sub
inc
xorb
decl
cwtl
jb
stc
mov
lret
mov
sbb
sbb
test
mov
mov
mov
jge
andl
inc
lret
jmp
or
or
lock
pop
fisubrs
push
fptan
mov
mov
aam
into
test
sti
lds
es
out
and
dec
mov
adc
icebp
pop
pop
lret
mov
jne
xor
lret
pop
inc
mov
dec
jns
sub
fldenv
mov
daa
imul
cmp
clc
cmp
xchg
sub
xchg
popa
jle
push
pop
pop
std
shrb
or
dec
inc
iret
push
dec
fistpll
and
mov
fs
fdivp
mov
or
and
xchg
popf
sbb
out
rol
jp
or
in
fwait
cmpsb
add
pop
add
out
jbe
sub
sbb
or
or
pop
xchg
test
inc
mov
testl
sub
dec
ja
mov
iret
inc
sub
mov
push
mov
sbb
cltd
mov
aas
mov
sub
sub
pop
xor
sti
popf
xchg
int
inc
cmpl
add
jg
sti
addr16
jnp
jp
mov
jnp
jns
jnp
fwait
ljmp
bound
push
inc
cli
fildll
and
jmp
push
inc
or
cltd
in
push
cmpsb
jb
popf
outsl
xchg
sub
push
shrb
and
sbb
std
add
insl
sub
jge
outsl
adc
cwtl
out
ret
xchg
loop
hlt
loop,pn
arpl
or
or
out
dec
inc
roll
xchg
aaa
pop
cli
int3
dec
notb
in
cli
fsubrp
xchg
jl
ret
jl
rorb
repnz
push
leave
ds
mov
push
pushf
stos
out
jbe
lahf
push
jge
jg
sbb
mov
mov
or
into
jnp
das
dec
outsb
jl
out
decl
push
fdivl
or
scas
inc
sub
imul
pop
fs
loopne
sbb
ret
push
and
mov
in
xchg
daa
cltd
mov
pop
jno
loop
sub
mov
cmp
mov
movsl
jl
out
sbb
lahf
push
or
mov
mov
add
push
mov
jbe
add
and
xlat
mov
mov
fdiv
loope
mov
adc
outsb
add
or
cmp
mov
sub
pop
mov
or
and
pusha
clc
push
or
mov
pop
sbbl
cmpsl
mov
add
in
sahf
repz
xorb
jg
sub
mov
adc
pop
outsl
mov
fadds
dec
mov
lret
imul
bound
out
push
or
and
into
xlat
jp
cmc
decl
xchg
outsl
cltd
cmpsl
pop
loop
daa
push
stc
cmc
out
adc
leave
mov
xchg
dec
xlat
lods
xchg
aas
xor
out
xchg
mov
xor
pop
aaa
in
mov
sti
jmp
outsb
scas
or
gs
cmp
loopne
test
pop
mov
repnz
imul
xor
repz
dec
sbb
xchg
loop
cmp
inc
sub
arpl
pushf
cld
movsl
adc
test
or
jl
rcl
mov
or
cmpsl
inc
adc
ss
sbb
in
cmpsl
mov
push
popf
scas
call
subb
adc
data16
fldt
fists
cmp
ret
inc
pop
pop
loopne
sbb
pushl
rolb
and
push
roll
and
and
push
cwtl
push
sbb
dec
nop
cwtl
mov
or
cmp
push
ror
outsb
pop
pop
mov
sub
lock
cmp
xor
push
cmp
pop
aam
push
add
mov
xor
dec
fwait
out
cmpsl
cwtl
leave
fs
xor
cli
push
mov
cwtl
cmp
mov
popa
int3
rcrb
inc
pop
test
mov
fdivs
pop
xchg
push
and
jb
loopne
xchg
mov
push
stos
inc
xor
out
xor
xchg
xchg
dec
mov
setne
xchg
xor
jp
xor
int3
sub
push
dec
add
das
out
loop
cmpsl
xchg
out
repz
incb
or
sbb
push
lds
loope
add
push
dec
stos
clc
xor
pop
loope
and
mov
mov
xorl
in
into
ja
fidivl
inc
shlb
add
popf
mov
rcrb
dec
dec
sbb
jne
rcrl
out
or
fisubs
cmp
lea
out
ret
ss
jp
enter
in
or
mov
jo
insb
inc
mov
jnp
stc
dec
jle
fmuls
mov
dec
mov
dec
and
sbb
into
mov
inc
pop
testb
pop
push
imul
sbb
mov
push
and
into
sbb
cmpl
scas
mov
les
or
bound
cltd
xor
pop
jo
lods
hlt
jns
in
arpl
dec
sbb
and
or
push
push
inc
cs
ficoml
and
xchg
mov
mov
mov
cwtl
fimuls
push
stos
shlb
in
aam
mov
mov
mov
out
call
test
jbe
dec
or
arpl
rcrl
enter
leave
or
aaa
dec
add
iret
jl
outsb
dec
es
lods
push
loop
addr16
arpl
jbe
and
and
mov
lahf
add
dec
inc
push
out
mov
in
lahf
jmp
enter
daa
cwtl
sarl
outsl
lcall
jl
mov
dec
decl
movsl
sub
and
into
mov
test
ret
xor
xor
cmp
cltd
pop
rol
js
in
pop
mov
test
sbb
faddl
pusha
outsb
mov
outsl
push
rclb
pop
or
ds
jmp
mov
and
and
aas
mov
adc
insl
int
into
sub
std
jl
add
mov
mov
and
mov
xchg
pop
inc
test
orb
mov
xor
fs
mov
pop
inc
push
ss
xor
cmp
shrl
idiv
out
lret
add
or
pop
cmp
and
or
pop
into
mov
mov
xor
mov
out
dec
mov
and
decb
push
add
xchg
movsb
lods
jns
mov
out
icebp
sbb
fwait
push
aas
xor
pslld
testb
lcall
movsl
sti
iret
loopne
cmp
fadds
jle
lret
les
repz
cmp
dec
sbb
shll
jns
enter
popf
mov
cmpsl
xchg
or
fists
xchg
nop
insl
pop
dec
cmp
dec
inc
and
divb
mov
dec
lret
lock
lea
pop
test
call
loop
cmp
dec
sub
sbb
pop
push
scas
pop
cld
inc
mov
es
movsb
xchg
adc
fildl
dec
icebp
cmp
and
adc
rcll
or
cwtl
adc
mov
adcl
sbb
mov
sbb
das
adc
mov
cli
push
or
nop
sub
es
shlb
jne
dec
xchg
mov
cmpsl
xchg
add
mov
or
popf
lods
mov
cwtl
mov
mov
arpl
mov
adcb
shl
test
sub
in
sub
fwait
vpaddusw
mov
clc
scas
jo
xchg
test
popa
lods
xchg
jno
mov
rep
xor
out
xchg
dec
iret
xchg
fldcw
sti
pmuludq
dec
fimull
xor
or
and
clc
data16
test
sub
xchg
cmp
sbb
sbb
outsl
sbb
scas
fwait
add
inc
push
push
arpl
ljmp
and
rcll
cmp
out
dec
cmpsl
in
jae
xchg
inc
push
out
sti
addl
or
pop
lahf
sarl
pop
xchg
loope
mov
rcr
das
mov
js
sub
jne
es
mov
out
ja
out
mov
jns
mov
fwait
sbb
add
pop
ret
cmpsb
sub
jne
pop
imull
mov
mov
cmp
lods
outsb
pop
jnp
sbb
in
loopne
pusha
xchg
fbld
les
lds
inc
push
divl
inc
movsb
push
sub
addr16
mov
xchg
xor
daa
mov
leave
scas
and
fsubl
nop
and
push
or
jne
jmp
lods
ret
cmp
lock
les
sub
xlat
fwait
xchg
inc
jb
prefetch
popf
push
mov
lcall
and
mov
fdivl
xor
mov
inc
push
out
mov
pop
xor
cli
movsb
jae
arpl
movsb
inc
jbe
data16
or
sbb
xor
jmp
push
jb
pop
jbe
jl
ret
sub
loope
push
xor
mov
xchg
cmp
xchg
push
jbe
pusha
inc
loope
xchg
xchg
enter
daa
xchg
xor
cmp
pop
es
nop
push
cmp
push
fnstcw
dec
mov
movsl
mov
and
push
lahf
xchg
and
pop
adc
les
mov
fstps
in
js
mov
cltd
push
loope
outsl
push
faddl
std
and
leave
push
mov
icebp
popa
and
sti
sbb
lea
push
adc
int
clc
data16
xor
push
cmc
test
fsubrl
sbb
jno
cmp
jmp
jg
mov
mov
idiv
mov
xor
ss
outsl
fnstsw
jl
in
mov
nop
ret
sbb
or
sarl
into
popf
out
adc
lea
mov
loop
dec
cld
stc
arpl
cmp
mov
imul
ret
lods
pusha
addr16
pushf
push
out
iret
inc
cli
into
jb
xor
jmp
or
dec
xor
inc
lods
push
xchg
loopne
ffree
pop
testl
mov
les
stos
repz
aad
xchg
or
xchg
pushf
cmp
pop
add
mov
jo
mov
push
pop
adc
cs
test
aad
pop
into
nop
dec
adc
lds
into
xchg
ret
je
lds
pop
mov
pop
lea
stos
inc
jle
daa
pop
sbb
aas
testb
fildl
loopne
inc
adc
leave
icebp
aas
inc
lahf
mov
dec
push
adc
shl
int3
sub
std
fnsave
rcrl
enter
rolb
subl
cld
mov
dec
lcall
pop
mov
lock
pusha
dec
idivb
pop
push
pop
ret
test
inc
es
or
dec
xchg
rolb
cmp
fdiv
jecxz
sub
sbb
inc
mov
ficoms
and
fwait
rcrl
lahf
pop
push
rol
mov
lahf
mov
mov
mov
push
push
pop
lret
out
cli
dec
push
clc
ljmp
ljmp
negb
dec
stos
and
jb
cli
fidivl
and
push
fistps
rcpps
xor
pop
pop
aam
xor
xor
mov
daa
xchg
rorb
shrb
mov
dec
loopne
movsb
mov
fwait
xor
xchg
aaa
into
cmp
or
xor
arpl
or
in
in
inc
fstl
ds
adc
pop
mov
ja
popf
dec
scas
cmp
out
inc
inc
mov
or
aad
je
sbb
pop
cmpsl
bound
imul
out
subb
pop
pop
addr16
jp
add
mov
and
insb
pop
daa
push
jnp
add
in
mov
pusha
and
rcll
mov
pop
mov
push
out
incb
sbb
pushf
push
pop
pop
shrb
test
or
scas
rep
notb
sbb
iret
dec
add
ret
adc
hlt
pmulhw
out
adc
mov
or
push
xchg
or
fidivl
aaa
xchg
cmp
mov
or
mov
pop
jnp
inc
pop
lds
mov
mov
pop
mov
movsb
decb
adc
outsl
testl
sbb
repnz
aaa
test
stc
or
and
cwtl
jl
jmp
dec
add
xchg
push
test
adc
sbb
xchg
sub
xchg
cmp
mov
inc
jo
push
mov
daa
xchg
mov
cmp
cs
jno
push
fisubrs
ds
jo,pt
pop
movsl
xchg
loop
and
in
sahf
lahf
scas
pusha
jbe
sub
add
xor
stc
icebp
pop
push
in
inc
js
hlt
cmp
or
push
mov
loope
xlat
fdivl
ja
sub
mov
rcll
int3
sub
popl
dec
rcrb
cmpsb
dec
mov
dec
xchg
and
lret
push
ds
int
add
push
pop
inc
lcall
insb
mov
loopne
sbb
sbb
pop
xor
lods
jg
orb
and
sti
adc
sbb
cmp
divl
sub
sub
fld
cmp
test
push
pop
or
iret
into
adcb
cmc
push
push
pop
xor
movsl
imulb
aaa
inc
loop
xor
adc
mov
mov
sbb
push
jl
lods
inc
shl
mov
add
out
xor
cli
add
movsl
out
in
int3
mov
sti
clc
jl
sbb
movsl
gs
jnp
out
xchg
mov
adc
dec
imul
mov
xchg
sarb
sbb
aaa
shl
xlat
testl
mov
std
lock
jne
sub
movsl
cs
aad
repnz
nop
and
dec
dec
cli
in
or
fyl2xp1
jmp
data16
negb
idivb
lea
push
std
hlt
test
and
adc
popa
pop
dec
add
faddp
inc
pushf
imul
loop
divb
mov
inc
arpl
xor
notb
out
gs
xchg
mov
in
push
mov
icebp
aam
mov
mov
mov
ds
es
gs
into
xchg
mov
push
rclb
es
popa
xor
dec
mov
mov
mov
inc
adc
test
fnstsw
adc
dec
ficompl
mov
test
sub
push
fnsave
and
frstor
sub
and
in
lret
sub
pusha
pop
or
or
pop
pop
out
xchg
cmpsl
mov
add
mov
cli
add
gs
negl
call
ja
xchg
cmp
dec
movb
xchg
addb
sbb
mov
fwait
bound
dec
push
scas
jecxz
add
push
dec
mov
xor
int3
or
push
and
insb
pushf
xchg
in
dec
mov
loopne
mov
adc
cltd
fmuls
push
lds
call
lahf
mov
and
movsl
mov
cmp
jae
std
in
pop
out
movsl
xchg
pushf
bound
aad
xchg
stc
push
cmpsl
cmp
mov
sub
imul
jp
xor
insb
xorb
jle
sub
in
out
pusha
pusha
mov
inc
daa
xchg
sub
or
mov
mov
orb
push
mov
lahf
popf
or
cmp
push
addl
mov
stos
dec
repnz
shrb
sbb
or
imul
adc
push
sub
outsl
adc
fnstcw
pop
adc
jecxz
arpl
or
sub
or
rclb
sub
xchg
xchg
add
int3
negl
fidivs
pop
sub
js
jle
mov
shl
sbb
leave
sbb
mov
push
fsubrs
jge
loop
sbb
in
aaa
addr16
push
or
das
out
jl
out
dec
jae
adc
mov
xor
je
mov
and
fimull
inc
decl
cmpsb
pusha
jb
in
push
ds
daa
xchg
mov
cmp
insl
cld
sub
mov
push
ds
lods
mov
cwtl
hlt
test
test
rcrb
dec
jne
adc
outsb
add
mov
subb
js
ficoml
add
mov
sub
insb
outsb
pop
or
shlb
iret
xchg
xorb
sbb
jno
mov
pusha
dec
and
jne
push
sbb
push
int
negb
sub
fnstcw
lcall
inc
mov
jl
sbb
cltd
sahf
jg
lret
push
faddl
stc
dec
mov
cwtl
cltd
sub
push
adc
inc
and
cmp
repnz
divl
insl
mov
rcl
xchg
cmp
aaa
rorb
ljmp
sbb
xor
mov
hlt
loop
inc
push
stc
rorl
sti
adc
enter
add
mov
cs
mov
out
pop
cmp
leave
inc
xor
in
aaa
sub
cmp
andl
stc
loopne
cmc
pop
xor
mov
pop
test
icebp
xchg
xchg
int3
cmp
jb
mov
sub
dec
mov
dec
or
pushf
test
or
fs
sub
or
push
nop
insb
out
dec
pop
adc
sarb
je
ret
jl
adc
stc
scas
jbe
repz
jo
mov
jl
js
sbbl
aas
test
dec
in
sbb
frstpm(287
push
ret
pop
enter
and
or
aas
cmpl
and
or
not
push
std
sub
fs
adc
mov
push
mov
add
out
mov
mov
sbb
insb
das
lods
int
mov
pop
and
ret
xor
es
sbb
sahf
pop
dec
xchg
sti
cmpsl
xchg
int
mov
xchg
mov
mov
and
sbb
lods
mov
cmc
shrb
int3
sub
add
push
jae
push
in
xor
clc
pusha
inc
rcll
arpl
pop
mov
loope
add
out
rcl
xchg
scas
cmp
movups
add
adc
mov
sbb
int
sub
subb
imul
fwait
xchg
cmpsl
aad
push
xchg
pusha
add
insl
loop
decl
jmp
int3
xchg
and
push
std
mov
push
out
xchg
xor
mov
cmp
mov
sarb
orl
mov
mov
out
dec
dec
aad
inc
jne
jbe
mov
or
out
test
xchg
les
xchg
les
adc
sub
push
andb
or
setb
in
adc
jnp
pop
ljmp
mov
pusha
pop
xor
ffreep
push
mov
mov
jmp
mov
inc
jae
cmp
push
jne
gs
xor
jbe
fcomps
push
sub
mov
aaa
and
loope
imul
shrl
loopne
pop
adc
iret
or
pop
dec
push
imul
xor
ret
adc
sbb
dec
cs
inc
cmp
jecxz
fdivrl
ds
ljmp
pop
jge
int3
ficomps
and
lds
jbe
xchg
mov
insb
repnz
leave
xchg
inc
sbb
xchg
mov
jge
hlt
sub
lahf
insl
aaa
es
adc
mov
repz
inc
and
dec
loop
sub
xor
iret
and
scas
pushf
sub
and
imul
xlat
sub
inc
cmpsb
jecxz
ret
in
cmp
enter
daa
xchg
inc
adc
cmp
lock
adc
les
mov
jp
lahf
push
and
adc
in
add
shll
lret
cwtl
jl
cmp
stc
inc
aad
pop
pop
cmpsl
inc
js
push
mov
xchg
int3
push
and
loope
mov
sub
jns
outsb
repnz
push
push
sub
rolb
sub
and
cmp
loope
pop
cltd
and
fs
int3
xchg
or
mov
cld
jb
lcall
lcall
sub
sahf
and
test
nop
cmp
scas
jg
and
mov
dec
cmp
push
ss
int3
cmp
lods
sub
idivb
push
iretw
shll
cmp
cmp
or
inc
in
inc
inc
push
xor
stos
xchg
loop
pop
stc
mov
sub
add
cld
inc
data16
call
mov
mov
out
xorl
push
dec
adc
mov
pop
cmc
pop
inc
or
fistpll
inc
and
rolb
mov
imul
xor
xchg
push
xchg
sub
lods
jp
xlat
jne
push
sub
pop
mov
push
pushf
pop
jmp
xor
imul
aad
dec
xchg
mov
mov
xlat
je
ds
jecxz
xor
cld
push
icebp
lea
xor
sti
gs
pop
ss
adc
add
fistl
xchg
pop
imul
inc
mov
rol
jb
adc
and
add
ror
and
rclb
insb
cwtl
cld
push
xlat
mov
clc
out
xor
enter
decl
mov
adc
jl
xchg
das
mov
je
sbb
icebp
mov
mov
jge
movsl
shr
insl
das
leave
fimull
fldl
xchg
sbb
aam
int3
icebp
push
out
mov
inc
cmpsl
mov
mov
cld
dec
dec
sarb
pop
sub
mov
push
cmpsl
xchg
mov
clc
fwait
or
xchg
movsl
xchg
fucomp
mov
adc
pop
pop
dec
subb
inc
xor
push
jo
pop
pshufw
add
dec
xor
pop
sub
sbb
sub
test
enter
xchg
sahf
sbb
pop
ror
adc
xor
push
hlt
xor
add
mov
adc
pop
adcb
lret
jg
in
mov
xchg
xor
mov
or
cmpsl
pop
mov
ja
lods
mov
pushf
ds
mov
movsl
mov
push
pop
dec
dec
mov
pop
xchg
arpl
pop
fisubs
jle
popl
sbbl
cmp
gs
gs
popa
test
xor
mov
mov
jno
scas
dec
push
jle
jbe
in
mov
imul
rol
mov
imul
mov
mov
lret
push
adc
jmp
and
imul
scas
sbb
mov
popf
ljmp
xchg
xchg
ret
hlt
pop
cmpl
arpl
mov
inc
jle
aam
push
pop
out
enter
mov
mov
xchg
inc
aad
int3
int
lods
pop
lods
in
clc
fidivrs
or
mov
push
rorb
movsb
lahf
jle
push
jbe
ja
cmp
jge
jmp
sbb
bound
in
xor
movsl
shrb
mov
pop
mov
push
push
shlb
sub
scas
jnp
imul
jo
cmp
repnz
mov
fistpl
cmpsb
push
pop
in
and
daa
xchg
dec
mov
jno
or
sub
jns,pt
mov
je
movsl
cmpsb
inc
mov
mov
fidivl
test
stc
inc
stos
xor
jl
or
pop
sbbl
cmp
pop
lds
mov
loope
test
sub
sbbb
cltd
push
popf
rcrb
call
sbbb
xchg
jbe
pop
adc
int
test
sub
nop
and
negl
out
test
fwait
sbb
jecxz
lds
test
mov
idivl
sti
push
mov
dec
mov
sbb
adc
loopne
cmp
push
add
lret
or
cmp
adc
loop
sub
cmc
test
sbb
loop
or
js
cmc
aas
cmp
popa
cmp
lods
cld
mov
lods
jns
jb
aad
lcall
in
or
in
cli
incb
xchg
jne
shlb
pop
jae
mov
imul
fdivl
lret
in
ljmp
mov
push
sub
stc
sub
scas
je
inc
sub
aad
or
dec
pop
adcl
andb
je
push
jae
lcall
shrl
test
xlat
pop
jmp
mov
pand
fstps
pop
inc
mov
jmp
int3
dec
inc
test
and
dec
rcl
jbe
negb
mov
cwtl
mov
xchg
sahf
sub
cld
pop
cmp
add
mov
adc
xchg
das
imul
lods
cmp
mov
xchg
ret
in
dec
sub
fisubrs
fmuls
dec
jge
iret
cmpsl
xchg
out
mov
aas
mov
mov
push
lret
aaa
sub
sbb
adc
jnp
inc
test
xlat
mov
mov
fstl
popa
sub
ljmp
pop
pop
or
pushf
stos
fisubrs
pop
xchg
cmp
dec
push
dec
outsl
into
bswap
cmp
cmpsl
addr16
xor
aas
xchg
mov
and
dec
sti
xlat
cltd
test
mov
sbbb
push
insl
shll
sub
out
fstl
mov
and
mov
mov
xor
fmuls
inc
cmpsb
mov
xchg
rcl
xor
inc
dec
out
inc
aas
inc
ja
std
fisttps
shlb
mov
les
dec
fwait
ret
xchg
jne
mov
jmp
inc
dec
add
mov
gs
pop
push
insl
subl
les
pop
xchg
mov
bnd
jp
jmp
or
out
jnp
aas
mov
xchg
or
pusha
mov
fcomp
add
mov
cwtl
clc
adc
jae
mov
push
sti
adc
popf
xor
mov
push
add
and
or
imul
fs
outsb
nop
mov
and
iret
je
ret
dec
pop
mov
dec
arpl
xor
or
inc
pop
add
cmc
mov
inc
xchg
cwtl
jne
int3
mov
fwait
adc
pop
xlat
add
je
pusha
ror
loopne
mov
je
jg
jns
sub
push
lds
pop
jbe
les
sbb
cmc
xchg
or
shr
jl
rcr
dec
shlb
xor
repnz
test
push
and
mov
jmp
and
lods
or
cmpsb
jmp
xchg
ror
jp
xchg
daa
xchg
loopne
cmp
nop
sbb
cmp
cmp
inc
ds
inc
sub
push
test
push
jns
push
test
add
xlat
push
and
pop
stos
icebp
push
js
add
inc
push
pop
adc
sub
in
sub
dec
shrb
dec
adc
cmp
in
push
mov
xchg
sbb
xchg
cltd
and
cld
push
and
int
and
pop
cli
xor
lcall
cwtl
mov
mov
jbe
mov
jg
stc
mov
in
std
xchg
pop
fs
pop
cmp
in
pop
outsl
cmp
and
jae
and
hlt
int
rcll
pop
or
dec
sbb
or
jb
jo
lds
cmp
add
cs
loop
mov
xor
add
mov
data16
mov
bound
out
loope
cli
int
and
add
in
js
xchg
sti
mov
pop
movsb
jno
gs
test
or
xchg
hlt
inc
adc
adc
cmpsb
scas
adc
sub
xchg
fdivl
sbb
and
xlat
repz
pop
pop
dec
mov
test
in
cs
pop
aad
das
jmp
popl
jmp
mov
je
xor
jecxz
jle
movb
pop
lea
xchg
call
stc
out
pop
pushf
dec
in
inc
push
cmpsl
dec
scas
inc
xor
jb
sbbl
xlat
inc
mov
mov
add
dec
mov
icebp
fcom
insb
or
pushf
loopne
std
and
sub
mov
lahf
mov
sbbl
pop
mov
ja
decb
inc
cmpsl
lret
xchg
push
das
dec
nop
les
inc
mov
aam
adc
inc
es
adc
js
push
cmpsl
xchg
cmp
cmp
jmp
xor
xor
lea
and
mov
add
shl
pop
and
jb
xchg
test
popf
jns
sub
xchg
std
clc
adc
xchg
and
sbb
xchg
cmp
popa
mov
fisubrs
jmp
dec
lret
data16
mov
push
cltd
inc
inc
jns
mov
and
aad
aas
xorps
test
or
les
lahf
lods
push
cmp
add
mov
out
xor
in
cwtl
or
dec
inc
xchg
and
push
mov
or
mov
add
push
ja
shlb
mov
sbb
xor
jae
jle
mov
push
dec
mov
imul
insl
bound
mov
shl
rcll
xor
imul
xchg
js
push
adc
les
in
mov
cs
fidivrl
xchg
out
sarb
inc
fbld
movsb
jmp
jmp
lods
sbb
jae
xchg
push
push
mov
mov
push
push
xchg
test
stos
adc
popf
and
icebp
sbb
pop
imul
push
mov
mov
std
mov
and
scas
cld
pop
icebp
jnp
hlt
xchg
arpl
sbb
inc
test
mov
imul
cmp
xchg
out
cmp
int3
mov
push
or
add
int3
ffreep
in
aam
sub
pop
movsb
leave
div
inc
movsb
mov
aad
adc
pop
jbe
cltd
dec
jge
test
sbb
jl
aaa
arpl
cmp
mov
outsb
add
push
bound
sub
lods
orl
cmpsb
push
fs
add
scas
cmp
andl
mov
sbb
inc
cmp
insb
or
in
lock
enter
daa
xchg
cmc
ss
out
add
cmp
sub
or
loope
pop
or
mov
lahf
dec
xchg
push
push
dec
and
inc
aaa
add
lahf
mov
mov
pop
shrl
scas
cmp
pop
inc
cli
lcall
out
fmull
fisubrl
outsb
sbb
cs
adc
pop
push
jb
ret
loop
sbb
add
cmp
scas
and
push
and
movsb
push
sub
bound
jns
cmpsb
lcall
sbb
sbb
dec
rcrl
std
mov
orb
jg
mov
mov
push
push
fs
cmpsb
movsl
ss
push
push
cmp
fisubs
xor
shrl
cmp
inc
std
or
jne
out
sub
xor
jbe
loop
movsb
cmp
lods
insb
xor
pop
das
add
jnp
lods
sub
mov
lods
xchg
out
xlat
mov
xor
clc
dec
in
jecxz
arpl
arpl
inc
je
gs
and
loopne
pop
sub
xchg
lret
leave
adc
test
les
notl
xchg
lahf
xchg
outsl
sbb
pop
rolb
xor
and
into
jbe
mov
push
push
shr
and
cs
sbb
aad
mov
mov
dec
ds
test
adc
or
sbb
sub
mov
clc
lods
lea
stos
push
js
lds
push
in
fwait
sub
push
cmpsl
inc
aas
test
sbb
std
es
and
jbe
xor
mov
out
sarl
out
stc
sub
sub
pop
mov
pusha
cld
mov
pop
lret
out
fisttpl
or
mov
mov
sti
sub
ret
add
jge
cs
xlat
insl
in
pop
dec
jae
andl
in
ficompl
lods
sahf
movsl
loop
out
aam
mov
cmp
mov
pop
movsl
shlb
and
xchg
or
mov
fisubs
lock
fucom
jg
clc
dec
into
jecxz
bound
ljmp
xor
cli
stos
mov
cmp
push
add
jge
movsl
xor
pop
push
in
mov
es
leave
fidivl
adc
sbb
rcl
les
or
cltd
cmp
fst
jo
rcl
add
cli
mov
les
xor
jno
or
filds
xchg
outsl
arpl
shlb
add
mov
sub
dec
popa
push
stos
inc
js
test
lods
jle
popa
fwait
pop
jne
pop
lods
mov
inc
int3
out
add
nop
bound
xchg
cmp
xchg
and
out
outsl
mov
or
jne
lock
jp
xchg
int3
mov
lahf
cltd
insb
cltd
fnsave
jle
adc
arpl
push
sbb
cmpsb
xchg
dec
and
mov
mov
mov
popa
jmp
cld
popf
into
pop
push
mov
rorb
and
fadds
imul
mov
adc
push
pop
iret
test
ret
xor
shll
test
inc
dec
aas
inc
xchg
or
cmp
inc
cmp
lock
and
mov
aad
cmp
movsl
pop
lds
into
xlat
mov
dec
ljmp
inc
popa
lahf
push
arpl
imul
daa
add
aaa
and
or
pop
add
je
inc
inc
push
dec
sahf
cmpsb
push
cli
jb
xor
cmp
scas
sbb
loopne
pushf
mov
outsl
push
add
inc
lret
cmpsb
out
adc
in
xlat
inc
dec
enter
daa
nop
mov
cmp
int3
mov
sub
mov
cmp
add
ds
xchg
movsl
mov
inc
negl
pop
pop
lcall
dec
pop
xor
cmp
push
cld
les
lret
cli
js
add
fwait
push
addr16
loope
dec
sub
sub
hlt
adc
out
jge
mov
xor
into
mov
lods
adc
fs
cld
cmp
sub
sub
clc
add
xor
add
mov
push
sbb
popf
sahf
scas
outsl
mov
andb
jg
lcall
jmp
pop
fs
jle
adc
mov
cmp
cltd
loope
div
inc
cmpsb
lret
pop
rol
add
or
pop
jmp
rorb
pop
cmc
inc
shll
repnz
out
outsl
jo
and
loopne
imul
pop
ficoml
jmp
out
xor
inc
lods
mov
bound
outsl
push
and
xor
inc
xor
in
sti
adc
hlt
ljmp
loopne
sti
pop
sarb
cmp
xor
push
imul
imul
sub
sbb
cltd
mov
mov
inc
inc
dec
mov
jmp
jb
pop
adc
negl
aad
cmpsb
inc
nop
inc
cmpsb
sub
cmp
inc
mov
cmp
jecxz
fidivl
or
negb
call
divl
pop
add
das
dec
test
dec
fcmovnbe
test
pop
not
daa
inc
adc
inc
or
dec
jb,pn
xchg
test
xor
mulb
jae
std
outsb
push
sub
add
dec
orl
lods
lret
push
lea
shl
lods
lock
es
mov
mov
push
aam
scas
aaa
ret
xchg
inc
in
es
inc
insl
lret
pop
push
dec
outsb
jno
cmpsl
insb
fdivrl
les
sarb
sarl
mov
js
call
mov
xor
mov
arpl
mov
push
clc
xchg
mov
mov
cli
in
popa
outsb
sub
sahf
stos
stos
orb
jbe
xchg
adc
mov
paddsb
add
xchg
je
mov
xor
out
mov
sub
dec
xor
call
xchg
daa
sub
jno
clc
or
inc
inc
fwait
jl
add
addb
dec
xchg
lods
add
repnz
xor
aam
cmpsl
icebp
mov
or
and
adc
inc
mov
ja
pop
ja
add
dec
push
movsb
lods
inc
movsbl
mov
sti
sbb
jne
jne
int3
jp
pop
leave
fildll
pop
bound
ds
jns
add
inc
gs
btc
dec
shl
addr16
lahf
mov
negl
sbb
pusha
jnp
mov
lcall
or
dec
xchg
sbb
roll
xor
push
inc
and
cmc
call
aad
adc
mov
and
negl
je
scas
test
popf
push
inc
ret
mov
das
iret
jecxz
ret
ret
and
lret
sbb
cmp
mov
nop
or
mov
mov
ficompl
out
xchg
popf
cs
int3
jns
int
push
mov
or
push
rcrb
lcall
scas
mov
movsb
lret
push
push
mov
jae
inc
mov
insb
sbb
fdivl
loope
in
or
and
adc
xor
dec
or
leave
mov
jo
cld
push
scas
testl
cmp
inc
pop
sub
test
mov
push
daa
stos
fnstcw
cmp
mov
xchg
sub
sub
cmp
ds
movsl
ret
and
movl
test
and
jg
adc
or
paddusw
fs
rcl
push
cli
pop
loope
fmuls
fnstcw
sub
dec
lret
adc
leave
cmpsb
jo
sbb
inc
sub
jge
dec
mov
je
jae
les
sub
aam
jae
push
pop
ja
inc
lcall
mov
sbb
lea
adcl
sbb
adc
cld
mov
xor
into
inc
mov
out
dec
ss
daa
cmp
push
repnz
mov
xchg
lret
aam
pop
stos
add
popf
ret
dec
mov
mov
cld
cmc
lds
xor
les
adc
jae
mulb
add
push
lods
cwtl
cmpsb
mov
lret
out
dec
mov
xor
push
fs
shl
decb
inc
scas
loopne
shrb
out
loopne
adc
xchg
imul
sbb
xchg
and
and
subl
mov
mov
mov
xchg
stos
inc
mov
cs
mov
nop
and
xchg
sub
inc
into
mov
je
ret
jecxz
out
cmp
or
pop
and
jno
adc
jbe
rcrl
adc
rorl
test
incl
pop
lcall
inc
sub
or
cmp
leave
gs
and
lret
and
into
lahf
rcrl
add
gs
std
adc
sub
and
and
mov
add
xchg
mov
lock
pop
jae
out
dec
mov
imul
jg
xor
xchg
sti
mov
cmpsl
mov
mov
fwait
mov
scas
mov
mul
aad
inc
dec
mov
jae
rcrb
xchg
xor
sub
test
mov
sub
push
jbe
test
xor
arpl
ret
xchg
loopne
cmc
ljmp
pop
pop
mov
jnp
lcall
xchg
pop
fistl
push
mov
scas
cmovnp
sbb
repz
cltd
call
sbb
mov
sub
leave
dec
xchg
insl
lahf
test
iret
mov
ret
sarl
pop
or
rorl
stos
jp
push
and
add
ud0
incl
pop
sub
mov
test
in
stos
sti
xchg
or
ljmp
xor
adc
or
test
inc
cmpsb
pop
fistpll
or
dec
daa
inc
sub
mov
pop
in
mov
and
movsl
xchg
xchg
or
in
push
out
and
or
inc
addr16
pop
cmp
push
cli
mov
xchg
shrl
and
sbb
push
pusha
cli
fistl
jle
rclb
dec
inc
inc
int
xchg
jae
pop
add
pop
xor
icebp
sti
jb
push
sub
stos
insl
cmpsl
stc
and
mov
imul
scas
or
push
mov
adc
es
ret
negl
addr16
arpl
or
or
das
fsts
fimull
xchg
xchg
hlt
pop
dec
fidivl
fsubrp
lods
jge
nop
xchg
mov
mov
repnz
leave
pop
addr16
movsb
push
pushf
ficoml
test
jnp
jmp
shr
mov
std
repnz
in
dec
jl
femms
rclb
sti
clc
push
jo
xchg
loop
loopne
and
out
mov
push
cltd
insb
inc
call
or
enter
daa
mov
insl
mov
mov
cmp
pop
cmp
rcrl
cmpsb
dec
jmp
test
xor
mov
xlat
inc
movsb
pop
inc
ss
pusha
push
jns
add
sbb
xchg
sub
jns
adc
movsb
jecxz
jp
call
sbb
test
adcb
int
adcb
neg
pop
lcall
push
mov
lock
sbb
dec
sahf
hlt
cmp
test
lods
mov
mov
fists
mov
loopne
fs
arpl
ss
cmp
seta
rorb
cmp
mov
cwtl
movsl
movsl
cmc
mov
test
jno
cs
loop
lea
shlb
cli
adc
test
add
gs
lods
jg
push
mov
add
out
sarl
cltd
sbb
add
and
idiv
jo
cmp
xor
ret
in
and
push
lea
imul
arpl
popw
adc
mov
add
cvtps2pd
out
bound
sub
clc
andb
jle
jmp
jl
cs
lods
pop
nop
sti
adc
test
neg
mov
arpl
shl
inc
cli
push
mov
and
in
ja
cmc
sbb
pop
push
test
dec
pop
ret
lret
and
cld
inc
aam
pusha
inc
inc
lods
xchg
aas
fisubl
testl
mov
imulb
jecxz
cwtl
pop
ja
mov
xchg
push
mov
mov
cld
xor
xor
xor
dec
mov
cmp
sahf
stos
fsubrs
lret
popf
mov
and
aam
cwtl
les
insl
cltd
jle
dec
fs
cmpsl
lea
stc
icebp
jb
dec
lods
sub
sbb
and
push
or
pop
mov
scas
shrb
xchg
sub
sbb
mov
jo
cli
cmp
fstpl
sahf
clc
std
test
pop
mov
arpl
push
pusha
insl
inc
stos
mov
in
jne
clc
xchg
lahf
sub
rsm
pop
in
push
or
cltd
pop
leave
in
inc
cmpsb
test
das
push
dec
dec
decb
xchg
jbe
rcl
mov
dec
fimull
push
or
add
pop
jmp
ss
or
jno
xchg
pop
aaa
fs
jb
mov
in
and
ja
inc
stc
dec
cmp
inc
cmp
dec
sbb
or
pop
mov
pop
lahf
out
popf
rcrl
jns
dec
mov
pop
mul
ja
sahf
sub
inc
fisttpll
in
mov
fdivl
xor
xchg
in
sub
xchg
mov
cld
xchg
ret
pop
leave
jmp
fsubs
jae
jbe
push
lret
popf
inc
test
push
mov
andl
mov
stos
jmp
subb
sub
adc
cmpsl
iret
mov
jecxz
int
in
hlt
mov
xchg
arpl
mov
or
stos
jnp
inc
mov
loope
roll
xchg
dec
mov
int3
dec
mov
inc
fimuls
ja
rclb
mov
inc
pop
leave
shrb
pushf
movsb
loope
lods
push
push
outsl
cmp
jbe
jge
addr16
push
cmc
aaa
pop
in
or
add
inc
mov
jl
cwtl
les
sub
xor
dec
inc
mov
push
fdivrs
cmp
push
fs
inc
ja
ljmp
cmc
repz
daa
lea
cmp
inc
lret
fwait
lcall
lods
sbb
pop
add
lds
les
aaa
es
cmp
adc
loop
mov
lcall
js
fsubr
pop
aas
mov
push
cmp
or
sub
xchg
outsl
adc
jg
mov
fstps
push
orb
push
sbb
lret
xchg
pop
add
xor
ror
xchg
inc
sub
xchg
pop
jne
xchg
add
cmp
sub
sahf
xchg
adc
test
pop
dec
xorb
sbb
push
or
repz
stos
cmp
lret
imull
sub
mov
add
cmp
nop
cmpsl
or
ss
jnp
xchg
push
loope
xor
and
outsl
or
inc
mov
mov
push
adc
xchg
mov
jns
lods
data16
lods
mov
pushf
dec
out
xlat
push
cli
int3
inc
xchg
xor
test
lods
sub
pop
jbe
push
or
gs
push
bound
jg
lods
adc
imul
dec
repz
mov
pop
cmp
mov
cmp
sub
std
rcrb
jg
and
aad
lds
jmp
dec
push
sbb
inc
hlt
add
call
aam
jecxz
loop
adc
jo
addr16
je
dec
pop
sbb
dec
inc
je
fistpl
lea
lods
scas
inc
pop
scas
or
pushf
push
aas
jns
push
jb
shlb
push
push
and
add
loopne
jmp
dec
std
arpl
mov
fyl2xp1
mov
sbb
cld
pop
idivb
mov
out
nop
mov
pop
lock
arpl
das
movsl
and
mov
xlat
jo
aam
or
ds
imul
mov
cmpsl
mov
test
dec
cs
lods
dec
fcomi
mov
cmp
and
mov
aad
in
add
roll
int
cld
lock
fldl
xchg
das
xchg
pop
add
ljmp
xchg
pop
or
mov
out
fsub
mov
insl
fs
wbinvd
fsubs
sbb
inc
xor
and
cwtl
mov
push
dec
gs
cltd
test
fiadds
mov
jg
sub
pop
shrl
and
cmp
push
imul
add
mov
inc
mulb
xor
or
push
in
mov
xchg
stos
mov
mov
outsb
mov
pop
test
ljmp
int3
cmc
inc
aam
xchg
jnp
dec
in
mov
dec
mov
lds
nop
add
jl
xchg
sbb
movb
movsl
out
fimull
mov
jp
pop
xor
inc
out
jnp
adc
fsubp
cmc
or
xor
in
xchg
xchg
fsubs
bound
inc
jecxz
xchg
jae
fadds
inc
pop
popf
push
mov
into
aad
stos
push
js
and
pop
shrb
jmp
rcll
adc
iret
add
push
ret
pop
pop
add
enter
mov
inc
xchg
mov
or
and
dec
mov
je
mov
mov
cmp
pop
cmc
les
lds
cmp
mov
cwtl
aaa
jp
dec
xchg
scas
movsb
insb
daa
mov
jns
jbe
nop
scas
jge
lcall
push
outsb
mov
add
out
jl
or
dec
pop
cmp
xchg
cmpsl
pop
scas
xchg
xchg
or
cmp
repnz
push
das
in
inc
push
mov
cmpsb
sti
mov
mov
pop
or
daa
mov
pop
cmp
inc
dec
jno
mov
mov
andl
into
aaa
pushf
movsl
xlat
sub
and
mov
rclb
aas
aad
rolb
mov
push
pop
arpl
js
divb
jle
repz
in
sub
mov
stos
fsub
fstpl
outsb
or
das
rcrb
mov
andb
xor
repnz
les
insb
clts
xor
mov
sub
push
xor
hlt
into
mov
push
pop
das
jbe
adc
jne
sahf
cmp
jmp
adc
outsb
jg
push
inc
mov
mov
fldl
adc
push
les
jle
mov
sbb
sbb
in
aam
lret
fld
pop
mov
cmp
ss
or
adc
cmc
sbb
or
in
sbb
stc
inc
xchg
adc
cmpb
data16
mov
dec
lock
mov
popa
sub
lcall
xor
mov
sti
into
gs
jbe
gs
addr16
std
pop
out
dec
icebp
add
subb
call
jecxz
xchg
outsb
pop
mov
cmp
xchg
pop
sub
mov
pop
jmp
pusha
and
sbb
aad
inc
rclb
adc
stos
fstps
divl
jecxz,pt
ret
push
adc
rorb
loop
rdrand
leave
pushf
pop
into
sbb
adc
orb
fisttpl
aam
loop
dec
inc
jns
aas
aas
sbb
inc
jb
cmp
dec
test
xchg
roll
aas
imulb
or
std
or
cwtl
aam
cli
mov
mov
jg
movsl
sub
mov
mov
lret
mov
inc
out
lock
xor
das
test
jne
mov
aam
rcl
ret
int
imul
mov
insl
xor
dec
pop
inc
inc
cmpsl
mov
jns
insb
sahf
call
lods
mov
mov
mov
pop
sti
xchg
hlt
xchg
aam
aas
sub
leave
test
cmc
add
push
mov
jge
clc
jae
test
popf
push
ljmp
add
inc
stos
addr16
sub
in
ficoms
dec
rcrl
add
je
in
xor
mov
mov
xor
ja
test
fiaddl
fstpt
insl
roll
xor
fwait
cmp
jb
or
mov
pusha
fwait
out
fildll
xor
mov
insb
xchg
cli
insl
or
mov
arpl
xchg
dec
and
pop
inc
imul
xor
in
shlb
jg
mov
xchg
fsubr
pop
mov
jns
push
repz
out
lds
jge
test
ror
or
cmp
addr16
mov
sbb
insb
mov
in
jnp
addr16
in
movsb
and
lods
adcl
knotb
add
push
push
in
popf
xchg
stc
xor
or
out
pop
and
test
test
pop
daa
add
iret
pop
adc
ret
pop
cmp
dec
fidivrs
mov
inc
xchg
mov
or
mov
sub
xchg
stc
xor
and
iret
imul
rcrb
rolb
push
bnd
push
leave
rcrb
push
out
xor
sbb
out
sbb
aaa
mov
or
cmp
repnz
leave
push
sub
imul
ljmp
inc
lock
out
rcll
jno
xchg
mov
inc
in
pop
mov
push
daa
mov
cmp
movsl
dec
jno
and
jmp
aam
xor
in
ds
mov
movsl
fisubs
and
and
push
jnp,pt
test
push
xchg
add
and
push
js
movsl
pop
mov
push
fsubp
lret
insb
inc
fmull
dec
pop
outsb
insl
lods
fwait
adc
xor
adc
or
sub
lods
and
cmp
pop
into
mov
jae
jecxz
mov
push
scas
push
and
add
sbb
insb
sahf
fstl
xchg
sub
iret
jg
dec
shlb
ds
adc
cli
mov
adc
out
roll
fadds
jecxz
lods
add
lret
adc
cmp
scas
in
add
mov
cmc
loope
xchg
xor
jns
loop
dec
xchg
idivl
jnp
fldenv
lods
xor
dec
mov
outsl
sti
cli
xor
adc
gs
cmp
jge
cltd
mov
add
cmp
pop
imul
imul
mov
xchg
xor
test
rclb
xlat
lods
jno
sub
mov
fwait
jmp
js
cs
and
nop
mov
loop
movlhps
inc
sbb
add
push
sbb
pusha
test
adc
push
pop
jl
stc
adc
pop
jns
jb
loop
sbbl
dec
sbb
fstpt
lods
cltd
inc
imul
mov
jb
jmp
dec
cld
xorb
xchg
mov
divb
cmp
shll
int3
xchg
ss
cmpl
mov
mov
sub
scas
adc
arpl
cmp
inc
insb
adc
in
ljmp
pop
int3
dec
push
insb
int3
cmpsl
mov
and
imull
push
lods
and
mov
adcb
and
dec
pop
adc
mov
sub
mov
test
in
cmp
subb
into
ret
scas
repz
mov
and
sub
stos
push
add
sbb
and
push
add
inc
mov
xor
cmp
xchg
xor
dec
xor
test
cmp
iret
sbb
hlt
add
push
scas
shr
add
jnp
jle
mov
or
push
in
mov
xchg
mov
ret
lcall
gs
or
inc
add
mov
cmp
pop
dec
mov
enter
bound
cmp
shlb
int3
or
leave
dec
xchg
mov
jno
and
sub
xor
or
ljmp
mov
sub
insb
sbb
aad
pushf
jle
add
in
sub
out
xchg
cmp
adc
inc
stc
push
xor
push
repz
mov
clc
mov
stos
cmp
add
mov
out
imul
cmp
cmpsb
cmp
cli
pop
test
ret
adc
hlt
xchg
js
arpl
and
or
sbb
mov
fcmovu
les
push
mov
adc
repz
push
popf
stos
fidivs
xchg
lods
jg
shlb
or
ds
int
aaa
dec
leave
movsb
addb
push
cmp
push
insl
jge
stos
stc
sbb
xchg
xor
jno
or
test
push
dec
enter
mov
add
push
lret
mov
sbb
inc
and
stos
cmpsb
add
cmp
enter
daa
mov
scas
cmp
mov
mov
cmp
xor
adc
cmp
sub
push
cmp
jmp
test
pop
sub
dec
mov
dec
pop
loop
popa
js
out
pop
cld
outsb
repnz
addr16
loope
stos
dec
fdivl
scas
mov
dec
xor
outsb
shlb
jp
adc
data16
sbb
and
push
mov
cmp
jnp
pushw
cmp
ficoml
leave
pop
repnz
lcall
mov
jmp
in
jg
sbb
addb
scas
imul
int
jg
inc
lods
mov
add
test
or
add
cmp
sti
icebp
pushf
imull
dec
lret
jmp
cmp
cld
cmpsb
or
into
and
pop
cmc
test
dec
xor
inc
outsl
stos
fnstsw
loop
fwait
jge
scas
subl
push
notb
mov
add
xor
out
sti
sub
mov
jb
loopne
push
jecxz
mov
adc
outsl
pop
imul
repz
sub
sbb
sti
jle
xlat
jmp
cld
sub
rorl
pushf
add
dec
cs
rcrl
aad
imul
dec
outsb
sbb
inc
sub
cwtl
mov
jecxz
dec
dec
sbb
loop
fsubs
or
push
mov
dec
push
jg
fucomi
dec
jg
leave
sbb
inc
lock
inc
scas
loope
aas
push
jnp
jb
into
popa
dec
jae
movsb
and
int
shl
cmp
divb
mov
jnp
mov
sub
or
cld
fiadds
fcmove
out
lret
nop
mov
inc
dec
lock
pop
mov
cld
pop
mov
stos
pop
in
jmp
cmp
insl
xor
daa
into
cmpsl
mov
mov
into
out
lods
mov
add
movsl
cld
outsl
and
jp
dec
pop
xor
sarb
mov
sub
dec
mov
adc
push
inc
push
jmp
clc
jmp
sbbl
pop
or
xor
add
insb
xchg
mov
in
cmp
es
fwait
add
push
cltd
sti
xchg
jp
insb
adc
mov
cmp
jge
pop
dec
xrelease
or
inc
roll
shll
push
call
fwait
xchg
cmp
add
xchg
addr16
lcall
mov
in
dec
rcr
xchg
cwtl
mov
mov
sbb
mov
fldenv
gs
push
dec
mov
mov
cmp
dec
xchg
xchg
cmpsb
jne
mov
mov
jne
out
sbb
bound
mov
jge
jns
scas
int
out
push
push
sub
das
in
addr16
push
ret
mov
ljmp
test
jle
sub
aam
add
int3
fistps
and
mov
inc
lahf
lds
mov
or
add
sbb
dec
stos
lods
test
sbb
mov
add
in
mov
adc
jne
iret
sbb
mov
pop
test
data16
inc
pushf
or
or
xchg
int
inc
mov
rcr
lea
enter
xchg
int3
sti
add
pop
subb
ficomps
lods
pop
lds
cmc
imul
push
push
mov
xchg
xchg
push
leave
scas
mov
push
push
mov
fdivl
xchg
xlat
jge
mov
sbb
and
and
pop
jl
push
or
out
xchg
push
das
xlat
and
mov
mov
cmp
or
fiadds
mov
and
sub
inc
daa
mov
push
jno
pop
sub
push
pushf
ds
mov
and
push
jp
in
add
addr16
lcall
jb
pop
or
js
mov
into
push
xor
fsub
push
lods
sub
xchg
iret
adc
jmp
mov
sbbb
sbb
fistps
push
cmp
mov
and
jno
ficomps
pop
or
sbb
in
add
and
adc
insl
inc
mov
or
sub
adc
mov
ss
xor
cmp
mov
div
sub
insb
lret
test
in
dec
cmp
sbb
jp
pop
fprem
cmc
outsl
jl
xor
imul
hlt
loop
and
adc
inc
mov
mull
cmpsl
lds
fisubrl
lods
int3
pop
cmp
cwtl
fildll
in
cmp
sti
fcmovne
push
xchg
gs
or
lret
pop
test
lahf
aam
inc
sbb
les
sub
jno
jl
mov
mov
jae
jl
ss
xlat
sub
or
pop
aad
pushf
lods
add
jmp
hlt
mov
lods
mov
mov
dec
int
inc
inc
sti
mov
je
cmp
loopne
sbb
arpl
jo
or
add
push
in
jle
icebp
jg
fistpl
inc
in
insb
jnp
inc
ja
fildl
and
jb
in
dec
ljmp
shll
xor
fs
decl
in
cmp
mov
lcall
push
adc
pop
add
mov
pop
adc
gs
scas
mov
mov
jp
jne
out
jp
push
es
es
insl
sbb
jbe
dec
jbe
cmpsl
mov
mov
movsl
sarl
push
loop
addr16
enter
jo
repz
push
mov
dec
je
sub
add
mov
jne
push
or
mov
xchg
pop
or
popa
add
js
stos
xor
and
fs
or
fsts
pop
add
leave
cltd
xor
xor
inc
inc
mov
ds
cld
test
in
roll
hlt
sub
rorl
sbb
vpaddd
cmc
sbb
add
mov
mov
jecxz
or
bound
xchg
out
lods
mov
out
mov
xchg
jbe
ja
jbe
dec
stc
cmpl
sbb
add
jns
xchg
jne
loopne
mov
addb
das
xlat
fdivrs
cmpsl
mov
push
sbb
push
sbb
sub
sub
mov
pop
ret
mov
int
insb
icebp
xor
jnp
hlt
dec
jle
dec
insl
in
pusha
pop
pusha
pushf
push
xchg
fistpll
test
push
jmp
movntq
out
jae
pop
mov
cltd
jns
popf
push
mov
xchg
push
lret
stos
pop
mov
and
fadds
imul
ret
outsb
pop
push
xor
xchg
adc
sub
ret
outsl
pop
loopne
data16
sub
mov
lahf
arpl
or
adc
xor
xor
inc
sbb
xchg
je
int3
out
push
pop
mov
xor
mov
into
and
xlat
out
mov
in
dec
leave
and
sub
or
jge
jge
dec
add
arpl
jp
sbb
push
add
sbb
jl
adc
dec
push
or
push
adc
in
xor
adc
insl
scas
adc
pop
and
jne
xadd
push
pop
lahf
adc
ja
cmpsb
pop
test
icebp
enter
daa
mov
data16
jl
sub
scas
mov
aas
or
call
push
and
or
mov
adc
jb
mov
imul
push
js
daa
gs
jp
shrl
mov
loope
xchg
popa
fmull
ret
outsb
xchg
jne
adc
hlt
test
subb
sbb
add
mov
ss
fcoml
push
inc
add
int
inc
aam
rclb
lock
push
mov
inc
mov
ret
ss
stc
mov
movb
ds
jg
inc
adc
mov
repnz
mov
cmp
jno
mov
lret
sbb
jnp
jbe
lret
or
outsb
into
ljmp
xor
rorb
js
ja
sbb
cmp
adc
xchg
dec
lea
lods
jmp
dec
mov
cli
lret
mov
xor
inc
in
cmpsb
mov
sti
mov
incb
jne
gs
loop
pop
enter
int3
add
imul
and
inc
lcall
lcall
xlat
imul
mov
push
xor
setl
aad
and
nop
sbb
das
mov
push
cmp
sti
xorb
iret
test
push
and
bound
call
out
pop
enter
je
stos
push
aam
fcoml
dec
cli
or
inc
incb
sub
xchg
add
push
xor
popa
icebp
inc
and
dec
ljmp
fisttpll
ret
jae
rclb
stc
imulb
nop
addl
cmp
mov
push
sti
mov
aad
lock
das
add
xor
push
dec
aam
xor
sbb
insl
add
inc
pop
clc
cmpsl
xchg
sub
icebp
jl
sub
popa
addb
jmp
mov
ja
lcall
adcl
and
sub
and
test
cmp
sbb
clc
pop
push
enter
mov
popa
sbb
sub
jle
and
and
mov
jle
in
xchg
js
daa
cltd
imul
andl
sub
push
and
sbb
jb
or
arpl
fwait
hlt
inc
out
push
cwtl
sub
add
int3
cmpl
pop
push
xor
cmp
or
push
in
cld
lret
xchg
or
mov
sub
mov
dec
fnstsw
dec
in
jae
inc
mov
daa
mov
xchg
ret
jne
jae
mov
mov
jge
ret
jns
or
adc
cwtl
out
pop
sub
pop
sbb
and
btcl
es
aad
insb
pop
push
push
jnp
push
clc
jle
pop
pusha
in
adc
fists
push
xchg
mov
cmpsl
jmp
sbb
lea
mov
xchg
popf
sub
enter
or
stos
xchg
rolb
add
imul
jae
rolb
jnp
sti
adc
ss
fmull
xlat
pop
pop
movsb
mov
je
fisubs
fmull
or
mov
inc
scas
ret
repz
xchg
push
mov
or
lahf
push
fisubs
jne
inc
or
shl
or
aaa
sub
movsb
and
mov
jbe
fidivl
sbb
out
lods
aaa
pop
or
les
jl
movsl
dec
test
insb
push
cmc
rolb
jo
jmp
scas
out
xchg
stos
and
jno
dec
nop
push
es
inc
rcll
push
in
mulb
enter
daa
xchg
loope
shrb
xchg
or
jge,pt
jmp
xchg
add
mov
test
jge
jb
mov
push
push
pop
push
cmp
js
and
lock
out
loope
inc
push
fdivl
pop
scas
sub
mov
in
stos
cmc
shlb
cmp
addb
es
loop
and
mov
push
inc
das
jl
fwait
scas
cmp
dec
push
insl
pop
outsl
sub
lcall
mov
sbbb
add
stos
dec
js
lods
mov
outsb
fs
adc
pop
or
ss
push
cmp
sub
dec
imull
iret
rol
adc
mov
xchg
jmp
cmc
std
mov
push
outsl
inc
and
loop
enter
mov
test
adc
xchg
lods
shl
jg
mov
iret
xchg
cli
in
xor
cmpsl
jg
adc
insl
and
outsl
and
add
fstpl
mov
adc
sub
les
adc
repz
adc
sbb
lods
sub
xlat
test
shrb
dec
pop
shll
add
jmp
or
jb
pop
aad
xchg
xchg
mov
je
scas
mov
je
push
jecxz
pop
ret
in
lea
xchg
inc
outsb
or
dec
jbe
adc
inc
mov
in
pop
mov
mov
inc
add
out
xor
jb
mov
dec
fcomps
and
mov
icebp
in
jge
outsl
std
dec
fcoml
cwtl
jnp
xor
mov
push
das
sbbl
shrl
iret
mov
lock
das
fisttps
sarl
or
mov
dec
pop
pop
insl
ljmp
cmpsl
xchg
mov
push
jecxz
lods
int3
orl
jns
and
dec
or
shl
mov
sub
loop
test
push
jnp
mov
movl
xchg
fsubs
pop
popa
xor
stos
adc
lahf
out
sub
xchg
nop
cmp
repz
add
loop
xor
xchg
cltd
mov
inc
adc
test
jmp
xchg
not
shll
cmp
and
push
push
cmp
add
pop
adc
add
das
and
cli
repz
push
enter
imul
test
mov
fcoml
pop
or
inc
ja
repnz
dec
fists
jle
pop
jl
mov
clc
daa
test
add
loope
pushf
mov
fnstcw
lcall
scas
adc
xchg
fisubs
repz
nopl
and
xchg
jp
sbb
test
dec
imul
popa
xchg
pop
es
pusha
shlb
neg
jbe
in
xchg
mov
stos
jmp
and
mov
push
pop
lret
jl
push
fdivrs
leave
xor
inc
stos
add
ror
pop
test
imul
add
ret
adc
fcmove
cmp
ret
cmpsb
pop
dec
popa
jno
mov
mov
inc
movsl
jae
or
pop
sbb
adc
cmpsb
inc
cmp
mov
jle
fiadds
sbb
pushf
rorb
in
repnz
outsb
leave
adc
movsb
scas
test
push
jns
into
jbe
stos
test
jle
sbb
lea
or
aam
add
jl
or
jnp
fdivrs
push
leave
cmp
scas
into
pop
mov
pop
in
cmp
push
icebp
je
inc
pusha
lock
fstl
inc
enter
daa
xchg
add
add
ret
add
sti
mov
jecxz
and
xor
test
mov
push
mov
out
xchg
jae
jle
pop
js
mov
push
push
int
loope
adc
inc
lock
xchg
outsb
pop
adc
adc
jl
decl
xchg
mov
sub
pop
jo
inc
into
mov
add
pushf
sub
out
pop
out
sti
push
lcall
test
sbb
push
ss
or
call
xorb
dec
pop
out
mov
popa
nop
mov
pop
js
lods
cmp
adc
out
fsub
mov
lret
in
test
jns
or
stos
fmul
mov
mov
lret
cmpb
outsl
es
mul
sahf
jmp
inc
adc
mov
dec
hlt
sub
popf
add
out
jno
cli
xor
lods
xor
jns
sti
call
jg
and
loope
lahf
mov
fcoms
jb
sub
sub
repz
dec
sbb
out
fwait
xlat
out
aaa
sub
xor
lods
or
insb
data16
into
aad
xchg
nop
shl
or
push
std
inc
jns
xor
imul
mov
pop
xchg
ljmp
or
call
in
cmp
pop
add
mov
pop
cmpsl
sahf
dec
mov
jae
cmpsb
mov
pop
push
pop
jae
or
pop
inc
sbb
aas
rclb
out
dec
dec
jo
and
sbb
mov
test
cld
std
hlt
fcomps
cwtl
ss
out
mov
cmp
cmc
inc
xchg
subl
push
mov
stos
inc
xor
leave
sub
mov
hlt
pop
lock
shrb
mov
adcb
pop
or
daa
pop
mov
iret
test
jns
cmp
inc
cmpsl
test
mov
sub
mov
mov
xor
lret
mov
scas
cltd
push
rol
in
sub
dec
jns
or
das
mov
fstl
js
xchg
pop
mov
ljmp
mov
stos
add
adcb
adc
cpuid
cltd
roll
sahf
add
lcall
add
jnp
inc
imul
sub
insb
inc
rorl
jae
fwait
push
adc
fisubrs
or
add
cmp
cltd
sub
or
in
jne
xchg
aam
mov
add
mov
lds
ja
cmc
mov
inc
cmc
popa
jo
xor
sbb
mov
mov
and
xchg
adc
call
roll
sti
hlt
sub
sbb
sub
sbb
or
mov
push
or
xchg
gs
jle
pop
pmulhw
lahf
push
pusha
insl
mov
adc
and
addl
pop
push
loop
pop
popf
jnp
or
xchg
cmpsb
stos
js
popa
and
jmp
sbb
cmp
or
xchg
push
push
or
adc
test
cltd
pop
imul
test
hlt
or
arpl
int3
adc
or
sbbb
lods
daa
ja
pop
gs
add
int3
cmpsl
test
pop
and
fisubs
mov
shrb
jge
mov
nop
mov
movsb
cmp
fcoms
xor
loop
fnstcw
in
sbbb
rorl
push
fwait
in
out
cltd
push
add
cmp
and
dec
arpl
xor
xor
and
sti
scas
lods
jle
and
insb
inc
cmp
fists
faddl
xchg
dec
cmpsb
nop
pop
pop
in
les
daa
test
ret
stos
loopne
push
sbb
sub
jbe
cmp
ds
scas
inc
movsl
or
adc
mov
es
sbbl
pop
mov
fwait
pop
movsl
stos
cmpb
loope
aaa
icebp
xor
xor
add
sub
inc
and
mov
mov
push
mov
shll
andb
cmp
mov
inc
out
push
dec
loope
int
sub
or
insl
push
scas
lcall
inc
mov
cmpsl
ret
push
pop
test
fwait
orb
gs
cmp
mov
subl
ss
add
cmp
mov
jmp
jg
inc
add
dec
ljmp
xchg
nop
ljmp
mov
xor
pop
stc
inc
adc
arpl
xor
rcl
adc
sahf
sbb
cmc
out
xchg
jg
fs
fs
out
pop
sti
xchg
arpl
sub
loopne
int3
xor
and
imul
pop
enter
testb
js
sbb
and
dec
xlat
es
sub
je
mov
pop
mov
jmp
sbb
cs
mov
nop
scas
push
dec
dec
insb
inc
inc
mov
xlat
fldenv
out
jecxz
push
js
sub
lea
push
insb
repz
pop
mov
pop
adc
lret
mov
aad
xchg
mov
inc
xchg
jnp
inc
ss
aas
jno
xor
pop
dec
lock
and
adc
add
and
fwait
mov
divl
call
jge
cld
mov
aam
sbb
shll
shl
js
popf
jnp
mov
mov
insb
ret
mov
or
insl
mov
jp
cmpsl
test
mov
add
scas
mov
push
in
and
sbbl
popf
sub
push
insb
test
mov
or
scas
loope
mov
jmp
cld
ljmp
dec
pop
arpl
xchg
stos
lock
gs
lock
xchg
push
jle
push
inc
or
lmsw
roll
mov
mov
xor
cmp
xchg
sub
popf
mov
xchg
cmp
in
cmpsb
or
cmp
sbbl
jge
adc
les
cmp
sbb
cld
jl
or
add
in
xor
and
data16
mov
or
mov
dec
lds
inc
mov
mov
testb
scas
jne
cmpl
je
in
bound
sarl
push
xchg
je
sbb
adc
cli
sub
push
xor
jp
mov
dec
insb
popf
mov
cltd
jle
inc
sub
sub
cmp
fbstp
mov
sbb
sbb
mov
push
movsl
in
imul
int3
ds
daa
cmc
stos
jmp
pop
and
sbb
scas
fdivl
int3
popf
jbe
jmp
loop
adc
mov
aad
pop
mov
cli
pop
arpl
sub
or
std
xor
fimull
push
xchg
pop
pop
int3
xchg
jecxz
pop
insl
xchg
mov
aam
mov
xor
sub
push
pop
pop
add
stos
loopne
outsl
aas
sbb
sahf
aaa
push
inc
rorb
loop
out
add
pop
pop
dec
rcrb
mov
sahf
insl
in
xor
jg
jle
mov
enter
jne
jmp
push
xchg
imul
and
lcall
mulb
jno
xchg
imull
or
cmp
in
data16
jp
por
iret
push
lahf
fcoml
add
push
test
sahf
xor
xor
jne
sti
pop
int3
mov
add
jbe
cmp
mov
jmp
cmp
addr16
enter
orl
mov
nop
xchg
xor
cmpb
iret
mov
and
jne
push
dec
push
adc
pop
in
sub
lcall
pop
mov
sbb
outsl
cmp
stos
aad
jg
jge
mov
dec
dec
mov
mov
mov
adc
and
xchg
fidivl
cmp
pop
shrb
mul
mov
lret
rol
xlat
popf
mov
or
sbb
xor
push
dec
push
xor
imulb
in
or
enter
mov
adc
push
xor
ret
push
sub
lods
test
jbe
arpl
cli
xchg
xor
jmp
sti
inc
jae
decb
lock
aad
icebp
pop
inc
and
adc
mov
les
clc
repz
loop
xchg
sbb
pop
push
xchg
gs
iret
sub
int
pushf
add
mov
inc
nop
push
cs
popf
pop
aad
cmp
cmp
mov
inc
lahf
inc
fcmovu
xlat
pop
inc
je
mov
pop
sub
xchg
lret
call
jmp
sub
jmpw
push
fsubrs
dec
mov
dec
fildl
and
fwait
scas
pop
inc
sbb
xchg
adc
xorl
inc
dec
cmp
cmp
testb
std
inc
jle
cwtl
lods
and
mov
mov
xchg
sbbl
insb
lret
mov
push
and
arpl
sub
inc
das
jl
pop
mov
inc
mov
aam
fcomps
ret
inc
es
aad
inc
insl
lahf
xchg
out
dec
xor
cli
mov
fsubs
lods
or
outsl
mov
xchg
dec
ret
mov
in
mov
xor
hlt
incl
and
and
xlat
push
lock
xchg
xlat
clc
dec
in
adc
loope
sbb
adc
stos
fbstp
add
push
and
loop
pusha
sar
add
xchg
xor
xadd
dec
ja
dec
add
pop
test
mov
mov
sarl
push
out
mov
js
and
pop
add
cmp
xor
pusha
or
mov
mov
inc
xchg
jb
cmp
aaa
mov
mov
cmp
ja
mov
mov
cltd
mov
mov
outsl
dec
call
cmpsb
mov
out
push
or
jns
push
adc
jmp
out
loope
sub
adc
frstor
cmpsl
xchg
jp
jne
mov
pop
jb
or
fnstsw
test
jle
sub
in
mov
rcr
shr
jmp
jmp
inc
pushf
xlat
jae
cmp
push
push
fcmovb
mov
add
repnz
and
cmp
imul
sbb
mov
adc
shlb
sub
pop
repz
hlt
mov
int
inc
scas
icebp
or
js
jo
stos
pushf
iret
fidivrl
mov
and
mov
fsubrp
sbb
xchg
rcrb
mov
add
leave
js
mov
lret
push
jbe
sbb
in
aaa
aad
adc
add
add
jl
fimull
or
xorl
jo
pusha
cld
scas
imul
adc
cmp
sub
or
mov
jp
das
push
pop
daa
cmpl
cmp
cmp
inc
jne
cmp
testl
and
cmp
test
mov
test
or
cmp
les
lods
xor
pop
mov
sbb
mov
cs
mov
mov
sub
rorb
mov
rcrl
xor
mov
xlat
lret
call
jae
aaa
cmp
sub
sbb
lcall
push
pop
movaps
enter
cmc
lret
stos
test
pop
add
insl
jg
xchg
push
mov
mov
testb
adc
and
cmp
sbb
mov
lret
or
outsb
pop
fidivrs
dec
out
or
in
pop
and
cmc
sbb
lods
outsl
ret
or
loop
xchg
stc
scas
lahf
adc
cmp
add
fldenv
hlt
mov
mov
outsl
cmp
loopne
lcall
sti
cmc
inc
insb
mov
icebp
gs
pop
loopne
and
arpl
rcll
jmp
test
or
sub
repz
jns
xchg
dec
negb
cwtl
xor
sub
mov
insl
pushf
scas
mov
jmp
enter
aas
aam
mov
xchg
movsl
dec
pop
test
insb
add
je
mov
jecxz
xchg
add
mov
lea
mov
call
push
int
sbb
scas
adc
scas
dec
jae
arpl
xor
ss
ds
out
mov
aas
jg
scas
xchg
sub
lods
mov
dec
mov
sub
fwait
testb
mov
mov
clc
xor
into
cmp
cld
or
es
clc
push
mov
test
jmp
jns
xchg
fildll
pop
jns
mov
std
stc
arpl
aaa
xchg
rol
aam
pop
es
inc
mov
out
dec
sub
div
mov
scas
shrd
mov
lcall
mov
or
sarb
sub
sub
push
test
mov
dec
out
push
lcall
clc
xchg
mov
push
popa
dec
popa
loopne
pop
mov
fdiv
out
mov
dec
xchg
lods
dec
mov
cmp
movswl
add
sbb
jl
jecxz
jns
adc
push
sub
dec
imul
xchg
add
or
inc
sbbb
aad
add
push
test
pushl
pop
xor
sub
enter
add
jp
cli
mov
testb
dec
stos
scas
mov
mov
mov
cmpsl
dec
lret
inc
sti
jne
sub
mov
jbe
out
xor
fdivrl
lahf
loop
or
mov
sbb
sub
or
dec
loopw
xchg
cld
insl
mov
sbb
insb
jae
ja
dec
mov
frstpm(287
cmp
pusha
mov
jge
aam
sub
enter
mov
jae
inc
lahf
push
sub
int3
popf
lock
lret
mov
inc
and
stos
sarl
sbb
test
imul
rcll
in
adc
push
pop
ret
stos
pop
sub
cmp
mov
inc
mov
mov
in
add
repz
aad
sub
xchg
xchg
or
addr16
lret
sahf
jne
mov
sbb
mov
xor
movsb
fimull
daa
jbe
js
jge
nop
inc
sbb
aam
aaa
xchg
and
add
pushf
mov
dec
mov
lret
push
fs
repz
xor
sti
mov
cmpsb
ds
jns
sbb
adc
sbb
sub
jns
ror
sub
repz
stos
mov
fwait
std
out
scas
mov
cmp
cmp
sub
or
add
xchg
push
test
sbb
add
or
sti
sbb
pop
sbb
pop
hlt
or
push
jae
loope
mov
fmull
sbb
outsb
call
shll
out
inc
arpl
sbb
cmp
lahf
mov
int
sbb
pop
ljmp
push
mov
addr16
sbb
cmp
sahf
cwtl
sbb
test
iret
inc
and
add
mov
mov
add
mov
lret
fstl
adc
mov
ss
movsb
cmp
shll
mull
adc
and
pop
roll
cmpsl
or
lahf
push
into
cmp
cmp
loopne
jb
in
add
outsl
mov
ja
stc
jmpw
jo
stc
add
sarb
pop
xor
lods
push
pop
xchg
popa
and
std
inc
fdivl
jno
dec
in
sub
sti
movsb
fisubs
add
loopne
push
pop
adc
adc
add
les
push
repz
imul
mov
jne
sub
cli
jb
pop
mov
jmp
fldt
popa
pop
aad
movsb
add
data16
inc
flds
shlb
mov
xor
lea
mov
jmp
fs
dec
pop
mov
lods
pop
loope
lds
cli
stos
inc
xchg
aas
dec
lock
cmp
and
stos
daa
rcrl
test
sbb
nop
mov
cwtl
and
mov
jmp
mov
hlt
pop
orl
call
mov
mov
lock
das
cmp
ljmp
or
xor
arpl
or
fistpl
insl
insl
sbb
dec
sub
sub
orl
lods
jecxz
dec
mov
mov
inc
add
sub
add
adc
sub
inc
dec
test
push
mov
mov
pop
lock
clc
shll
ljmp
bound
mov
out
sbb
xor
jae
nopl
mov
ljmp
xor
lods
movsl
mov
push
push
orb
pop
test
xchg
xchg
sub
sbb
inc
push
shr
cmp
or
or
push
shlb
add
outsb
mov
shll
cmc
xchg
test
in
push
ret
outsl
stos
mov
sub
rcrl
leave
ja
sub
dec
sahf
xlat
dec
inc
push
pusha
fwait
mov
and
cltd
jne
pop
mov
sbb
popf
out
adc
je
xor
pushf
jns
fdivrl
xchg
aad
xor
out
pop
mov
pop
mov
loopew
jp
cmp
mov
clc
inc
insb
ficoms
into
jle
shl
inc
imul
adc
fsubr
jmp
dec
jae
xchg
xor
out
add
popf
pop
sti
fidivrs
sub
stos
inc
cmp
mov
mov
imul
mov
and
and
iret
adc
outsl
dec
pop
popa
scas
int
ss
push
inc
mov
cmp
push
test
hlt
sti
xchg
pop
lahf
jae
push
mov
fidivs
cmp
lds
rol
xchg
xchg
cwtl
mov
sub
add
movsb
sbb
push
add
insb
jbe
lea
jge
cltd
sbb
push
outsl
or
pop
movsl
jl
andb
inc
sahf
inc
xor
nop
mov
and
xchg
jg
adc
pop
inc
sub
or
pusha
call
out
daa
andl
jno
out
sub
les
or
or
dec
bsr
mov
cmpsb
push
push
jl
test
mov
andb
mov
aas
mov
pop
xor
push
fcomip
loope
aaa
in
fdivrl
pop
inc
sub
dec
in
adc
ret
push
xlat
dec
jmp
xor
scas
sbb
out
mov
leave
and
inc
lcall
add
jne
pop
imul
sbb
xchg
sbb
pushf
sub
insl
mov
arpl
shl
mov
lods
stc
mov
sbb
adc
cmp
pop
adc
fmuls
sub
rcrl
or
jo
pop
mov
cmpsl
jb
xor
push
outsl
adcl
stc
sbb
test
aam
data16
lods
cmp
fucom
pusha
push
sbb
xor
repnz
pop
in
xchg
push
cmp
push
cmp
inc
addr16
cmc
sbb
cmpsb
scas
pop
mov
jbe
imul
stos
adc
jmp
inc
nopl
and
xlat
and
popf
out
pop
inc
xor
test
les
aad
insl
pop
nop
sbb
dec
vmovd
stos
fnstcw
je
iret
fucom
test
arpl
xor
inc
mov
push
mov
adc
scas
imul
fistl
fsubs
mov
push
push
jb
lock
arpl
and
fisttps
shrl
test
cwtl
fst
shlb
mov
inc
andl
fadd
lret
push
lods
mov
icebp
iret
mov
sbb
das
sbb
sbb
int
clc
ret
repnz
sti
es
ljmp
and
hlt
mov
pop
test
lods
dec
cld
push
mov
loopne
mov
in
test
pop
dec
xchg
add
sub
loope
test
mov
or
push
and
push
jb
clc
cld
jno
xchg
push
shlb
cmp
inc
popa
mov
into
loope
lods
jp
out
jl
loopne
cmp
cltd
ror
std
das
cltd
ljmp
mov
push
repnz
test
enter
push
lds
mov
pop
roll
or
cwtl
jle
cmp
pop
lret
sti
call
pushl
sti
or
fstl
add
adc
ja
les
dec
xchg
mov
inc
call
out
mov
cltd
jne
xchg
mov
mov
ja
and
xchg
mov
out
enter
subl
loopne
jb
dec
daa
addr16
cld
enter
stc
jnp
jno
jle
test
in
fadds
pusha
je
out
fbstp
or
jmp
addr16
cld
jae
es
mov
pop
popf
loope,pt
mov
ret
stos
mov
dec
and
jnp
imul
in
push
insb
ja
adc
or
ret
ja
cwtl
inc
xor
xor
inc
mov
push
or
jmp
stos
push
fcmovu
cltd
jns
mov
or
ds
ret
pop
sub
mov
and
scas
add
bnd
ror
frstor
movsb
lock
dec
push
push
lods
mov
jge
jb
sbb
jo
aaa
adc
or
cmp
repz
mov
push
sub
xor
jmp
xor
int3
and
push
adc
adc
mov
cmp
or
and
inc
cmp
das
js
dec
rep
sub
test
jb,pt
push
movsl
sub
pusha
lahf
pop
leave
mov
jne
test
lret
xor
movsb
sbbl
jmp
pop
jb
sub
je
cwtl
loope
fiadds
in
pop
sub
push
adc
sahf
imul
push
pop
dec
sbb
shr
push
fstps
int
adcb
orb
call
jg
push
insb
aaa
mov
sbb
add
hlt
adc
push
push
aas
jg
hlt
je
icebp
mov
mov
andb
adc
mov
rcr
dec
dec
mul
add
or
scas
cmp
mov
lret
into
add
dec
xor
mov
sar
aam
inc
adc
cmpsb
xchg
add
sbb
pusha
or
mov
in
out
adc
arpl
push
xor
dec
mov
sub
sbb
gs
adc
loopne
aaa
adc
lcall
repnz
insb
jmp
mov
shrb
and
dec
push
insb
xlat
popa
push
ja
jno
lock
scas
jge
jmp
pop
jns
daa
fists
lcall
and
jo
jmp
pop
fnstenv
fcoml
cmp
data16
call
out
enter
adcb
jmp
lcall
into
xor
ss
inc
mov
mov
jb
fildl
and
imul
std
fidivrs
cwtl
cwtl
xor
mov
pop
pop
cld
mov
sbb
inc
mov
lock
faddl
mov
and
lock
mov
push
es
icebp
insl
cmp
fisttps
inc
shlb
rol
aaa
icebp
xor
inc
lods
mov
adc
mov
scas
roll
mov
push
inc
in
sub
pop
and
dec
ds
mov
rclb
fnstsw
dec
clc
aaa
movb
lods
xor
aam
je
mov
out
shr
int3
xchg
mov
repz
add
cltd
and
xor
pushf
arpl
pop
add
mov
popf
pop
xchg
decl
sbb
in
loop
xchg
popf
inc
or
addb
and
push
mov
jle
mov
adc
call
push
xor
cmp
in
ror
scas
add
sbb
daa
jecxz
ja
loopne
dec
test
inc
jg
cmpl
cs
je
mov
push
sbb
iret
jle
out
iret
daa
and
pop
outsl
jns
inc
aas
xchg
imul
addl
out
cmpsl
cli
sub
std
lock
jp
lret
mov
insb
mov
inc
jnp
repz
xor
pop
pusha
xorps
fisttps
adc
jmp
jb
xchg
jae
cld
xchg
push
je
fistpl
bound
push
add
daa
stos
sub
mov
mov
imul
scas
fcomps
push
mov
mov
iret
sarl
hlt
ret
pop
pop
iret
jge
hlt
int3
rcll
aas
std
jp
mov
push
push
cmpsl
mov
fimull
adc
int3
sub
pop
pop
add
jns
jge
lret
mov
iret
movsb
dec
leave
push
pop
outsl
movsb
jnp
push
mov
adc
jge
cmp
sbb
sbb
or
inc
mov
dec
std
imul
or
in
jo
add
out
ja
pop
in
cmp
mov
xor
testb
cs
enter
daa
jg
dec
cmp
dec
jno
and
sub
bound
ds
div
movsl
xor
and
pusha
ret
lock
and
mov
add
push
xor
ret
les
aad
mov
push
sar
loope
test
push
sub
inc
enter
cli
sarb
popf
or
sbbb
jmp
mov
or
and
les
pop
xlat
and
rorl
lcall
mov
ret
or
mov
movsb
sbb
std
test
push
xor
inc
jg
sbb
mov
mov
lds
adc
xchg
cmp
add
xor
lret
mov
cmp
cmc
xchg
or
mov
ret
cmc
xor
es
loop
test
adc
sbb
lea
cwtl
lods
or
pop
out
dec
lret
pop
xor
testb
sti
mov
xlat
cmp
xchg
out
loopne
mov
fists
aaa
mov
imul
jl
repz
jne
push
popa
xchg
sbb
test
xchg
xlat
mov
push
mov
pop
and
out
dec
test
mov
aad
sub
nop
rcl
sub
push
int
lahf
or
je
cmp
jecxz
dec
cltd
cmp
int
dec
call
pushw
cwtl
pop
in
popf
adc
adc
lret
pop
lret
inc
mov
jecxz
aas
sub
and
cli
inc
dec
nop
fidivrl
rorl
fcomi
xchg
jle
std
test
in
mov
fcmovnu
mov
cmc
add
mov
sub
mov
dec
mov
push
mov
mov
lock
inc
das
xlat
movsb
iret
mov
fldenv
aam
arpl
pop
ret
adc
gs
dec
sbb
cmpsl
jle
std
mov
or
in
and
fidivrs
or
mov
mov
xchg
xor
mov
sub
movl
sbb
push
cmpsb
inc
sbb
js
clc
jb
fstl
and
fisubl
jl
pop
gs
jge
mov
pusha
out
inc
cmp
xchg
enter
addr16
cmp
cmp
cmc
add
gs
xor
adc
mov
pop
mov
pop
inc
and
pusha
pop
xor
sbb
dec
pop
shr
test
or
inc
int3
fwait
fwait
insl
mov
push
mov
and
mov
sar
xor
jp
or
jae
xchg
std
ss
mov
into
les
loop
movsb
ja
add
ja
clc
inc
push
cltd
je
bound
dec
push
rcll
sub
scas
mov
loop
addr16
xchg
ss
adc
mov
and
imulb
clc
insb
mov
jp
and
mov
jo
insb
pop
loope
jnp
cmp
jle
fisubl
push
fisubrs
pusha
stos
gs
outsb
fcomps
in
jmp
jge
leave
jae
adc
in
mov
mov
inc
dec
mov
popf
out
inc
and
add
sbb
ret
sbb
cmp
sbb
adc
sar
iret
xor
xchg
and
pop
hlt
pop
dec
shlb
repz
inc
mov
pop
and
inc
es
out
fidivrl
add
test
xchg
or
sbb
push
shl
jecxz
cli
repz
repnz
lcall
mov
push
icebp
in
inc
jbe
test
mov
jge
nop
or
or
sarl
jmp
insb
fmuls
lock
jo
fsubl
scas
cs
and
fsubs
push
dec
jmp
inc
fdivs
and
scas
ds
daa
jle
jns
popf
cmp
idivl
sub
lock
cmp
movsl
cmp
and
leave
lahf
xchg
sbb
test
loopne
sub
add
push
pop
in
pop
mov
aas
js
sbb
pop
lock
push
pop
pop
loope
cwtl
and
cmp
fildll
sub
outsb
je
adcb
push
sub
mov
mov
stos
daa
and
mov
int
ja
sub
pop
xchg
lcall
push
mov
push
adc
mov
push
sahf
and
test
loop
orb
inc
inc
inc
mov
in
mov
pop
fs
mov
and
fs
mov
adc
pop
inc
adc
lock
popa
aaa
in
cmp
xor
or
ret
imul
and
pop
push
imulb
les
loop
inc
add
inc
cld
xor
pushf
in
add
push
data16
lods
out
out
jle
jne
push
out
adc
leave
shlb
in
aam
movsb
sti
pusha
in
pusha
enter
jle
loopne
push
cmpsl
pop
outsb
dec
adc
and
loopne
les
repz
cld
and
sbb
mov
cmpsb
test
push
mov
add
pop
lods
cs
mov
aad
and
nop
stos
shrl
loop
jbe
adc
cmp
and
xor
aad
sub
adc
call
in
mov
lret
lret
lret
or
adc
push
dec
xor
inc
inc
jo
inc
repz
lret
jb
dec
je
pop
or
and
js
rcrl
sub
std
sub
or
outsl
fidivrs
call
loop
in
and
das
mov
mov
jo
dec
xchg
dec
das
mov
inc
mov
nop
les
aam
and
mov
insl
or
pop
dec
adc
xchg
cmpsl
jge
cmp
loop
mov
out
mov
dec
sub
out
dec
mov
cmpsb
xchg
inc
rcrb
jge
mov
bound
ljmp
push
xor
lods
sub
xchg
pavgb
popa
add
pop
pop
adc
push
stos
jns
nop
out
movsl
lahf
test
inc
pop
stos
setp
mov
cltd
insb
jbe
lock
jns
inc
xchg
stos
dec
outsb
mov
mov
sbb
nop
addr16
ror
fwait
lret
push
notb
add
fcmovb
mov
xchg
jle
xor
in
add
jns
xchg
dec
lods
lret
mov
xchg
addr16
popf
lods
mov
dec
push
es
lods
sahf
clc
mov
fistps
dec
cmp
xchg
jne
stos
repz
cmp
bound
aaa
sahf
xchg
add
andl
out
ret
arpl
mov
fldl
ja
jecxz
jns
cmp
sbb
dec
jnp
inc
fidivrl
jae
in
ja
pusha
inc
mov
fisttps
push
jmp
mov
inc
jae
jae
push
cli
daa
imul
jg
mov
adc
ds
movsb
cmp
or
push
inc
shll
sbb
scas
iret
xchg
mov
add
fcoml
bound
mov
inc
shrb
or
pop
inc
dec
inc
movsl
pop
in
ret
mov
scas
and
shll
mov
out
adc
mov
jne
test
addb
nop
pop
push
inc
hlt
pop
jbe
push
jge
jb
sbb
aaa
dec
push
mov
add
sti
out
dec
xor
cld
lret
movsl
test
xchg
cmp
adc
inc
addr16
jg
test
jecxz
cld
arpl
enter
daa
jge
ret
mov
add
jae
fldt
cwtl
and
and
push
enter
cmp
add
aas
jno
shlb
mov
adc
dec
loopne
pop
das
sub
loope
lods
test
in
test
jno
sub
or
adc
das
loop
cmpb
lock
xchg
stos
mov
lahf
sti
and
leave
popf
int
enter
sbb
pop
lea
push
jno
dec
mov
mov
loop
and
mov
andb
jg
jbe
mov
pop
ljmp
jl
adc
imul
dec
or
fdivrs
push
negl
cmpsl
jecxz
jecxz
out
clc
into
inc
cmp
inc
xchg
or
int
into
stos
mov
adc
mov
or
pop
loop
cmp
stc
sbb
adc
add
jmpw
lods
pushf
cmc
mov
jg
pop
push
psubd
xor
int3
in
aas
mov
sti
sqrtps
sbb
gs
leave
pop
loopne
add
sbb
shll
xlat
fistps
lea
mov
inc
mov
xlat
push
mov
push
mov
mov
mov
int3
sub
push
adc
fs
nop
xchg
repnz
inc
mov
sbb
pop
pop
das
je
stc
jnp
in
mov
lea
dec
rol
fs
xchg
pop
dec
out
adc
in
cmc
and
pop
adc
inc
lret
inc
xchg
inc
push
js,pn
imul
inc
dec
jle
mov
shl
nop
inc
negb
dec
cwtl
std
ror
adc
cs
andb
cmpl
xchg
popa
mov
mov
fdivs
lock
shlb
inc
or
aam
xlat
mov
cs
sbb
insl
lock
dec
cmovb
cmpsl
jl
mov
mov
xor
mov
insb
mov
and
pop
idivl
shlb
xor
sub
repnz
mov
mov
push
sub
jecxz
lock
pop
clc
call
xchg
repz
push
pop
mov
out
out
or
cmp
sbb
lea
dec
ret
outsl
cltd
call
mov
xchg
es
aad
lcall
sbb
sbb
inc
rcrl
jmp
push
cltd
loope
add
cmc
xor
pushl
xor
xor
inc
in
aam
xchg
fwait
gs
or
xor
pop
outsl
xchg
ja
dec
arpl
sub
inc
inc
enter
fcmovne
mov
xor
sbb
mov
mov
cmp
bound
sub
jns
cmpsl
daa
xchg
int3
mov
xor
mov
sub
out
and
jp
in
jns
pcmpeqb
insb
cmc
lea
addr16
jle
add
pusha
loopne
jne
lods
mov
jmp
xchg
sti
mov
lea
lcall
inc
dec
push
mov
aas
xchg
and
mov
pop
imul
add
push
mov
hlt
sti
jno
lock
lods
aad
pop
je
hlt
lods
pop
mov
stos
and
repz
push
and
neg
movsb
cmp
xchg
adc
cmp
pop
in
sub
lds
jns
rcrb
xor
repnz
mov
rorb
cmp
in
sbb
xchg
shll
sbb
add
xor
dec
dec
jmp
stc
mov
test
sbb
cmp
push
fiadds
cmp
jl
jecxz
out
or
mulb
jl
adc
jno
mov
xor
inc
ds
jns
movsl
inc
stos
adc
cmpsl
pop
xchg
fwait
pop
loope
xor
idivb
xor
jg
pop
add
sub
cmp
pop
outsb
and
push
test
fcoml
jo
outsb
cmp
adc
or
popa
adcb
sbb
add
pusha
out
and
lock
int
shrl
xchg
jbe
pop
in
loop
xor
cmp
fs
mov
sbb
or
add
test
inc
out
adcb
mov
or
int
pop
and
ss
fcoml
icebp
mov
fdivs
nop
lcall
mov
into
sub
into
mov
sub
push
add
testl
stc
mov
and
jne
add
loop
data16
daa
lods
mov
dec
sbb
cli
das
dec
test
jnp
mov
sti
mov
loop
imul
pop
cmp
dec
adc
iret
les
aas
cltd
xchg
sahf
repz
sbb
xor
push
data16
ficoms
pushf
pop
add
jmp
mov
xor
nop
popa
adc
mov
adc
push
std
jecxz
jecxz
movb
add
fwait
call
jecxz
pushf
pop
mov
adc
out
fstpt
pop
mov
push
inc
push
addl
or
jb
nop
jmp
cmc
pop
xor
shll
std
negb
popf
std
jp
fistpl
in
outsl
jb
jae
xchg
adcl
mov
mov
add
add
loope
je
push
mov
idivl
ret
mov
jle
insl
xlat
sub
cmpsl
jnp
fnstsw
nop
stos
lahf
lods
gs
add
cli
cwtl
and
hlt
jl
pop
in
hlt
rolb
sub
test
adc
mov
xor
clc
and
sbb
ljmp
xchg
pop
lods
jno
push
imul
inc
test
push
clc
pusha
sub
add
cltd
std
or
xchg
mov
gs
adc
test
mov
jne
or
mov
fwait
sub
scas
push
cmp
outsb
add
adc
loop
out
repz
ljmp
mov
adc
int3
ja
ja
dec
push
mov
mov
mov
mov
cmp
dec
xchg
bound
mov
enter
mov
lods
lods
inc
sub
jmp
xchg
fdivrs
pop
sbb
insb
pusha
mov
cmp
sub
pusha
jnp
push
cs
xchg
cltd
adc
jmp
sahf
xor
jae
sti
mov
xorb
add
push
std
push
clc
stos
div
aaa
and
dec
jb
mov
push
xor
push
push
iret
cmp
iret
dec
sbb
rcrb
pop
stos
lret
clc
loop
arpl
mov
xor
push
mov
lock
imul
in
add
push
lds
cmp
xlat
lret
dec
repnz
mov
xor
movsb
cmpsl
inc
adcb
xchg
imul
dec
sbb
xchg
mov
int
jns
insl
mull
jl
das
ja
mov
mov
popa
jo
jecxz
scas
arpl
or
cmp
enter
jge
test
fwait
in
lret
enter
daa
jnp
bound
ss
pop
jno
dec
push
sub
nop
jmp
and
aad
dec
in
and
pushf
lahf
repz
push
outsb
fsubs
test
add
sbb
jo
add
push
sti
cmp
push
dec
js
sub
push
daa
in
loope
ds
fdivrl
addr16
outsb
popf
mov
xchg
in
sub
xchg
cltd
andb
sbb
cmpl
mov
pop
out
pcmpgtd
in
arpl
lret
mov
fstpl
inc
add
sahf
or
mov
sbbb
or
scas
mov
jle
adc
les
icebp
das
cmp
lock
negl
in
shll
xchg
cmp
loope
or
pop
dec
into
jno
jae
push
push
or
imul
loop
ret
addr16
xor
jge
out
nop
lea
dec
xchg
out
outsl
push
bound
xor
fwait
in
adc
je
dec
gs
xlat
loopne
xchg
push
adc
dec
cmp
mov
inc
cmp
popa
or
sbb
jo
sahf
xlat
pushf
jne
sub
add
push
clc
xchg
stos
pop
pop
cs
mov
jb
cmp
insl
dec
cmp
fld
in
xorb
jecxz
dec
add
inc
pushf
xor
or
jo
pop
mov
xchg
adc
cmp
stos
add
inc
fldenv
addb
add
cmpsl
call
xchg
dec
insb
js
and
add
roll
jecxz
std
and
aas
enter
mov
shl
lods
mov
pop
lret
jo
je
mov
and
and
into
das
push
adc
je
and
cmp
ret
dec
out
es
imul
mov
add
jmp
mov
addr16
lods
rolb
stc
pop
mov
rolb
push
pop
add
ljmp
push
jle
push
movsb
loopne
mov
mov
ds
jecxz
int3
xchg
mov
in
pushf
add
pop
mov
pop
stos
inc
mov
out
into
addl
push
shll
mov
add
rcrb
shrl
sub
xchg
test
mov
jne
xchg
xlat
rorl
jo
adcb
dec
jp
and
sub
ljmp
dec
xor
xor
or
aaa
in
test
mov
cmpsl
idivb
into
mov
ja
es
inc
lahf
cs
jb
push
mov
sub
loope
jecxz
sub
jae
mov
jno
out
sub
sti
bound
in
jns
jne
xchg
bound
jle
xor
sub
in
insb
fisubl
jl
xchg
mov
pop
cmp
imul
test
notb
push
push
mov
shrb
jae
and
ret
cli
sbb
lea
cmp
adc
sub
inc
and
insl
jnp
inc
push
push
push
adc
pop
push
ret
or
loop
js
inc
mov
addl
sbb
bound
and
repnz
shrb
pop
inc
mov
dec
lds
inc
rclb
mov
outsb
lret
and
movsb
xor
fists
lahf
es
sarb
sbb
aaa
sbb
add
aad
stc
xchg
sub
mov
xor
or
mov
mov
adc
push
push
jne
cmc
inc
adc
fsubl
mov
mov
add
jmp
cmp
sub
xor
sub
outsb
adc
sarl
xchg
movsl
push
cmp
fisttpll
lahf
adc
and
inc
mov
add
ljmp
adc
and
dec
es
stos
test
push
jg
loope
mov
push
ds
outsb
add
mov
mov
or
rorb
out
pusha
cmpb
sbb
in
ja
divb
and
lcall
mov
mov
lcall
push
mov
ret
mov
mov
cmpb
push
mov
add
pusha
fs
pop
loopne
xor
stos
cmp
stos
negl
jnp
mov
insl
outsb
cmp
outsl
pop
or
into
push
imul
sbb
xor
dec
dec
outsl
lcall
stc
push
dec
lea
push
dec
add
push
data16
jbe
mov
adc
popa
loop
out
inc
clc
cli
xchg
popf
cmp
sub
es
subb
in
int3
andl
ja
jecxz
pusha
pop
jp
mov
imul
gs
and
sbbl
xchg
jmp
sub
mov
gs
mov
adc
cltd
xor
jns,pn
pop
aad
fidivs
nop
pop
mov
roll
adc
je
or
adc
lret
or
ror
call
loope
jnp
fs
adc
dec
mov
sbb
fidivl
pop
stc
xchg
cwtl
inc
pusha
es
inc
pop
xor
shlb
mov
cmp
xchg
rcl
mov
dec
std
enter
cli
mov
mov
pop
sbb
addl
inc
lret
fbstp
mov
ljmp
das
xor
inc
mov
pop
call
test
insl
movsl
rcr
add
cmpsl
jns
inc
mov
je,pt
lods
cmp
mov
aad
mov
mov
and
shrb
pop
dec
test
add
push
jne
or
gs
fprem
cltd
jecxz
xchg
or
add
pop
into
or
pop
push
pop
mov
rol
xor
push
push
scas
cli
rorb
push
shlb
adcb
imul
mov
imul
dec
or
mov
xchg
fadds
shll
bound
fwait
xchg
push
addb
loop
push
add
decl
fs
in
xchg
mov
lock
aas
push
mov
mov
cmp
dec
ss
inc
or
or
push
mov
jge
mov
stos
lods
out
or
cmp
adc
cli
shrl
sub
push
and
push
mov
fnstcw
lock
popa
or
xchg
pop
xchg
insb
ss
sahf
jnp
adc
jle
pop
loope
jp
iret
pusha
mov
mov
or
or
jmp
mov
mov
cli
xchg
pop
push
push
mov
popf
dec
sbb
mov
jnp
imul
fsubr
sbb
jae
imul
pushf
scas
sub
cwtl
push
pop
inc
and
test
adc
or
dec
sub
dec
sub
mov
and
mov
pop
or
inc
xchg
and
aad
fidivrl
rcrb
stos
adc
fimuls
sub
mov
adc
repnz
leave
push
clc
inc
movsb
mov
mov
jbe
mov
jge
xchg
adc
pop
inc
fidivl
dec
mov
push
lods
aad
punpcklbw
jl
mov
dec
xchg
jbe
push
pop
gs
xor
push
dec
test
shrl
push
push
inc
fcomip
inc
mov
call
out
enter
daa
jns
cmpsl
cmp
test
pop
cmc
cmp
nop
jg
pop
test
andb
adc
cltd
test
pop
and
xor
or
pop
jns
and
aaa
ror
sub
cltd
push
mov
loope
pusha
icebp
fcoml
icebp
xchg
outsb
arpl
mov
fwait
in
repz
test
mov
mov
mov
and
sbb
xor
add
mov
lcall
mov
xchg
loope
sahf
inc
mov
test
or
pop
pop
loope
ss
mov
xor
mov
aam
ja
hlt
cmp
data16
sbb
lret
push
rcll
dec
shlb
rcll
into
aaa
aaa
mov
xor
push
outsl
jns
mov
adc
std
cmpsl
adc
ret
out
jno
cmc
mov
rorl
pop
xchg
pop
cli
enter
add
mov
jmp
sar
lret
cmpsl
add
cmpxchg
gs
jmp
jle
fstps
inc
cmp
sub
imul
and
sbb
out
dec
xlat
sbb
mov
xchg
mov
mov
pop
pop
dec
jmp
adc
aad
xor
mov
pop
daa
fnstenv
lds
mov
dec
call
nop
call
pusha
mov
cmp
ret
jno
dec
mov
movsl
cmp
xor
cmp
mov
aas
in
xchg
jb
cli
cmpsb
dec
pop
lahf
stos
and
pop
sbb
and
mulb
dec
dec
std
outsl
mov
out
sub
filds
mov
stos
decl
mov
push
adc
pop
mull
and
push
ret
push
jae
jbe
ljmp
add
cmp
adc
cmpsl
inc
mov
clc
jle
and
lds
xchg
sarb
sbb
xchg
shll
cmc
mov
out
fisttpll
adc
ljmp
push
pop
and
stos
and
xchg
fdivl
xchg
jb
das
push
mov
pcmpeqw
bound
addr16
mov
outsb
sub
jno
imulb
mov
push
cld
sar
in
or
pop
xchg
fwait
mov
loope
and
cmovs
popa
int
ljmp
mov
pop
push
in
xchg
xchg
xlat
repnz
mov
inc
inc
shlb
adc
inc
mov
adc
or
dec
test
in
push
dec
clc
jge
call
jo
jns
shrb
xchg
clc
sbb
cs
and
je
sub
fidivrl
fcoms
jp
lock
imul
insb
mov
out
or
and
pop
pusha
dec
popa
fildll
test
enter
sub
jae
inc
dec
push
leave
jbe
dec
mov
mov
push
cmp
pop
ficompl
mov
aas
imul
mov
push
movsb
popa
push
pusha
inc
pop
iret
insb
out
cmp
stc
xor
hlt
fldcw
arpl
mov
jb
rcrl
and
fidivl
pusha
xchg
outsb
sbb
int3
xchg
sub
or
lds
xchg
rolb
mov
leave
xchg
das
loopne
dec
movsb
push
lret
jno
jge
xchg
daa
sbb
inc
aaa
or
or
sbb
cmpsb
bound
jl
mov
dec
push
rorl
inc
test
xor
ret
sahf
jns
add
shll
fsubs
jg
loop
or
cmpsb
aaa
shl
in
jg
mov
daa
js
cmpb
pusha
fidivl
push
sub
movsb
cmp
das
adc
lret
movsl
arpl
shlb
adc
cld
lahf
push
jb
push
out
sub
or
sbb
stos
movsl
xor
lret
xor
cltd
es
pop
mov
imul
push
cmpsb
push
dec
mov
fdivrl
jne
sbb
ljmp
cmp
shlb
pop
movsb
andl
ds
mov
int3
popa
mov
jo
fmul
movsb
mov
add
loopne
cltd
lcall
and
mov
test
jmp
cld
mov
or
dec
fldt
ss
dec
leave
fsubs
add
neg
pop
aaa
lret
loope
jmp
mov
jp
outsb
or
inc
into
sbb
xor
or
xor
pop
outsl
pop
aad
test
ja
mov
adc
test
add
dec
data16
dec
lods
pop
pop
jnp
push
lret
push
jno
cli
sti
mov
mov
push
iret
sbb
xor
cmpsb
loopne
mov
adc
icebp
sub
les
or
or
adc
and
popf
sub
pop
out
out
popf
pushf
pop
lret
loopne
ja
aam
aas
and
aad
adc
nop
int
pop
dec
sbb
sub
faddl
imul
je
push
or
das
or
push
cmp
lea
push
or
fbld
test
adc
int3
cmp
mov
cmp
push
inc
outsb
pop
fiadds
inc
inc
aas
test
jb
xchg
test
and
test
imulb
pop
std
push
xor
jmp
out
ljmp
ret
ret
out
mov
lds
jo
bound
lock
sub
push
cmp
lock
xor
es
push
insl
jae
fisttpl
sub
mov
in
int
lods
adc
cmp
push
cmpb
mov
mov
rclb
icebp
sub
scas
popf
mov
xchg
sti
cmp
fwait
clc
xchg
mov
push
ljmp
push
pop
adc
stos
adc
and
xchg
mov
in
paddq
add
icebp
xchg
jbe
mov
jno
adc
xchg
xchg
pop
jmp
sbb
mov
testb
mov
in
pop
push
enter
lock
add
decl
jecxz
xor
or
fsubl
xchg
add
loopne
mov
call
mov
adc
inc
aaa
mov
mov
jns
mov
jne
mov
sbb
add
jns
ja
xchg
ret
add
cmpl
and
or
add
xlat
out
cmp
mov
jae
insb
or
loope
rclb
and
mov
pusha
out
jno
inc
das
pop
xchg
in
fucompp
movsl
cwtl
xchg
jbe
cwtl
cmp
mov
popf
or
mov
stc
out
nop
stos
ret
and
daa
sbb
push
add
scas
lock
in
push
jmp
xchg
adc
jle
lret
cmp
ret
test
xchg
hlt
and
in
mov
mov
or
cmp
test
stos
test
xchg
lds
pop
pop
shlb
ficoms
add
shlb
ds
jno
or
push
push
sbb
idivl
jge
sbb
dec
mov
or
xor
jl
mov
dec
jne
fimull
and
push
scas
jo
add
les
idivl
mov
ss
xor
dec
inc
rcrl
mov
push
adc
repz
ja
adc
add
loopne
fdivrs
xchg
cmp
out
lods
mov
ljmp
mov
jl
sub
shl
pop
jb
pop
mov
lods
test
lret
push
mov
mov
out
xor
or
call
adc
push
jmp
popl
push
js
mov
rcrl
jne
sbb
add
push
jae
movsb
int
gs
jmp
pop
pop
and
lcall
les
xchg
push
sahf
cltd
jnp
test
mov
jb
faddl
popf
fs
or
dec
and
std
divl
fcomp
repz
negl
push
xchg
roll
xor
mov
mov
cmc
insl
push
push
aad
add
aas
cmp
cmp
stc
inc
inc
fsts
lcall
sti
mov
jge
push
sbb
out
iret
cli
cs
shll
scas
fs
in
rcrl
push
push
les
mov
push
pop
xlat
push
imul
lret
mov
in
repz
addr16
insl
notl
xor
cmp
xlat
cwtl
push
sub
mov
mov
sub
pop
repnz
mov
dec
jnp
daa
inc
xchg
nop
sub
mov
push
jmp
ds
push
add
lea
jp
pop
adc
pop
jge
pushf
adc
mov
fcompl
push
iret
inc
cmc
mov
in
out
aas
and
pop
jb
inc
add
dec
push
xchg
and
add
rol
push
loop
lods
mov
cwtl
sub
scas
mov
gs
add
mov
test
aas
scas
and
lret
pushl
iret
mov
loopne
xchg
cs
mov
inc
adc
jl
pop
insl
pop
adc
cmpsl
jbe
pop
mov
ret
xor
lods
jl
movsl
mov
ds
aaa
and
sti
inc
fistps
jg
push
shlb
mov
sub
push
test
scas
push
mov
xor
xchg
enter
mov
jne
pop
mov
adcb
add
mov
aas
testl
cltd
adc
xor
mov
mov
je
adc
aas
das
fsubrl
sahf
cmp
shll
lcall
fwait
adc
push
imul
add
lods
add
or
loope
fwait
xlat
push
xchg
jne
into
mov
rorb
mov
or
pop
inc
into
mov
mov
call
add
push
testb
cmpsb
fdiv
bound
rcr
lea
