jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
popa
xor
xor
xor
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
cmp
jo
mov
lea
mov
mov
mov
mov
lea
mov
lea
inc
dec
inc
mov
mov
lea
mov
mov
inc
inc
inc
mov
cmp
je
jmp
jmp
lea
inc
dec
dec
cmp
jns
xchg
lea
lea
mov
xchg
dec
dec
inc
mov
mov
lea
mov
xchg
dec
xchg
inc
mov
xor
divl
test
jne
mov
lea
mov
mov
mov
lea
lea
mov
mov
mov
xchg
dec
dec
jne
mov
mov
lea
dec
dec
dec
dec
je
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
cmp
jns
lea
xchg
mov
mov
mov
xchg
xchg
xchg
mov
mov
mov
lea
lea
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jge
lea
lea
mov
xchg
xchg
lea
xchg
mov
mov
mov
lea
lea
lea
mov
mov
mov
lea
dec
inc
mov
cmp
je
jmp
cmp
jnp
xchg
lea
lea
lea
mov
lea
mov
lea
lea
xchg
dec
mov
mov
lea
mov
lea
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
js
mov
mov
lea
mov
mov
mov
lea
mov
lea
xchg
lea
lea
lea
xchg
mov
inc
dec
inc
lea
mov
cmp
je
jmp
cmp
jnp
xchg
lea
lea
lea
mov
lea
mov
lea
lea
xchg
dec
mov
mov
lea
mov
lea
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
jmp
mov
cmp
jns
lea
xchg
mov
mov
mov
xchg
xchg
xchg
mov
mov
mov
lea
lea
mov
mov
sub
mov
cmp
jge
lea
xchg
dec
mov
mov
cmp
je
mov
lea
mov
dec
lea
lea
xchg
dec
mov
lea
xchg
inc
inc
inc
push
mov
mov
xor
call
mov
mov
lea
mov
mov
mov
lea
lea
mov
mov
mov
xchg
dec
dec
jne
mov
mov
lea
dec
dec
dec
dec
je
mov
mov
mov
call
cmp
jge
lea
lea
mov
xchg
xchg
lea
xchg
mov
mov
mov
lea
lea
lea
mov
mov
mov
lea
dec
inc
push
mov
mov
xor
call
mov
jmp
lea
inc
dec
dec
cmp
jns
xchg
lea
lea
mov
xchg
dec
dec
inc
mov
mov
lea
mov
xchg
dec
xchg
inc
cmp
jo
mov
lea
mov
mov
mov
mov
lea
mov
lea
inc
dec
inc
mov
mov
lea
mov
mov
inc
inc
inc
lea
mov
push
jmp
cmp
jge
lea
xchg
dec
mov
mov
cmp
je
mov
lea
mov
dec
lea
lea
xchg
dec
mov
lea
xchg
inc
inc
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jnp
xchg
lea
lea
lea
mov
lea
mov
lea
lea
xchg
dec
mov
mov
lea
mov
lea
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
js
mov
mov
lea
mov
mov
mov
lea
mov
lea
xchg
lea
lea
lea
xchg
mov
inc
dec
inc
lea
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
cmp
jl
mov
mov
mov
xchg
lea
dec
lea
mov
mov
mov
lea
mov
inc
dec
dec
dec
je
lea
inc
inc
inc
mov
mov
mov
mov
mov
add
mov
mov
mov
jmp
lea
inc
dec
dec
cmp
jns
xchg
lea
lea
mov
xchg
dec
dec
inc
mov
mov
lea
mov
xchg
dec
xchg
inc
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
lea
push
mov
add
movl
mov
mov
mov
push
mov
push
call
test
je
push
lea
push
call
jmp
push
lea
push
call
movl
mov
mov
mov
push
mov
push
call
test
je
push
lea
push
call
jmp
push
lea
push
call
jmp
lea
inc
dec
dec
cmp
jns
xchg
lea
lea
mov
xchg
dec
dec
inc
mov
mov
lea
mov
xchg
dec
xchg
inc
movl
movl
mov
push
mov
push
call
mov
pop
ret
add
xor
xor
xor
add
jae
popa
addr16
add
ja
and
add
add
in
add
mov
mov
cmp
jge
lea
lea
mov
xchg
xchg
lea
xchg
mov
mov
mov
lea
lea
lea
mov
mov
mov
lea
dec
inc
push
push
push
call
mov
push
mov
push
call
mov
mov
mov
mov
lea
mov
mov
mov
lea
lea
mov
mov
mov
xchg
dec
dec
jne
mov
mov
lea
dec
dec
dec
dec
je
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jge
lea
xchg
dec
mov
mov
cmp
je
mov
lea
mov
dec
lea
lea
xchg
dec
mov
lea
xchg
inc
inc
inc
mov
mov
movl
mov
cmp
jl
mov
mov
mov
xchg
lea
dec
lea
mov
mov
mov
lea
mov
inc
dec
dec
dec
je
lea
inc
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
jmp
lea
inc
dec
dec
cmp
jns
xchg
lea
lea
mov
xchg
dec
dec
inc
mov
mov
lea
mov
xchg
dec
xchg
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jl
mov
mov
mov
xchg
lea
dec
lea
mov
mov
mov
lea
mov
inc
dec
dec
dec
je
lea
inc
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jns
lea
xchg
mov
mov
mov
xchg
xchg
xchg
mov
mov
mov
lea
lea
mov
mov
pop
ret
imul
add
outsb
add
insb
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
mov
xchg
xchg
sahf
sahf
repnz
fwait
xchg
test
mov
repnz
test
test
repnz
test
test
sahf
mov
xchg
lahf
mov
repnz
mov
test
popf
xchg
test
loopne
sahf
sahf
repnz
repnz
repnz
mov
repnz
repnz
xchg
repnz
repnz
repnz
jge
jne
or
adc
xor
jne
cli
mov
shlb
repnz
mov
jbe
mov
adc
repnz
mov
push
shlb
repnz
shlb
repnz
push
fs
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jge
or
xor
sub
add
xor
mov
xor
jge
jne
cmp
cli
jnp
cmp
mov
cmp
fisubl
mov
mov
mov
jge
cli
jnp
push
jge
cmp
mov
mov
mov
jge
cmp
mov
jnp
push
xchg
jge
ret
bnd
push
jnp
cli
jge
push
jge
into
cmc
mov
jnp
add
add
jb
repnz
sub
sub
div
add
repnz
sub
cmc
mov
jnp
sbb
repnz
repnz
bnd
es
cmc
mov
mov
mov
jne
sbb
add
repnz
es
repnz
jge
es
cmc
mov
jnp
push
jge
es
loop
mov
jnp
adc
jge
loop
mov
jnp
push
jge
es
loop
mov
jnp
adc
or
jge
push
jge
xlat
adc
repnz
jge
cmp
mov
jnp
sbb
jge
push
cmc
hlt
jnp
and
and
hlt
mov
jge
cmp
mov
jnp
jne
adc
jne
push
idivb
push
jne
xacquire
es
mov
jne
repnz
adc
adc
add
mov
jnp
or
cmp
fidivrs
push
cmp
repnz
loop
mov
jne
mov
jge
cmp
mov
repnz
bnd
cmp
shlb
mov
repnz
bnd
cli
mov
mov
jge
push
jg
repnz
adc
pushf
repnz
xchg
push
repnz
adc
ret
xor
adc
pop
scas
xor
repnz
jge
xchg
jge
cli
jge
decb
inc
jb
sub
lahf
repnz
ret
cmp
xchg
repnz
ret
xor
lods
repnz
inc
hlt
mov
loop
shl
repnz
test
xchg
pop
sbb
repnz
xchg
sbb
pop
and
xchg
arpl
sbb
repnz
repnz
repnz
jb
testl
addr16
inc
repz
adc
cmp
repnz
idivl
loop
xor
and
adc
jecxz
sbb
adc
adc
cli
bnd
bnd
jnp
dec
adc
adc
les
add
dec
adc
adc
fstpt
jnp
xor
jae
or
adc
jnp
push
cmp
cli
push
mov
repnz
sti
push
mov
repnz
jl
or
push
mov
adc
xacquire
cmp
push
sbb
adc
mov
or
add
repnz
jl
or
cmpsl
push
jl
hlt
lds
cmpsl
or
adc
adc
mov
jl
or
mov
xchg
cmp
or
xchg
cmp
or
mov
lds
cmpsl
or
or
adc
cmc
xor
and
cmpsl
or
push
mov
cmc
xor
adc
repnz
or
xor
jl
push
mov
jp
or
xor
jl
or
push
mov
adc
xacquire
pop
scas
xor
jge
mov
xor
push
mov
mov
adc
repnz
cli
push
mov
lds
push
sti
push
mov
lds
out
push
mov
add
push
mov
cmc
xor
adc
repnz
sti
push
mov
lds
push
cli
push
mov
jl
push
mov
jp
pextrw
xor
push
mov
jl
push
mov
lds
out
push
mov
jp
push
mov
lds
push
sti
push
mov
jl
push
mov
lds
push
cli
push
mov
add
push
mov
lds
out
push
mov
add
push
mov
cmc
xor
adc
repnz
pextrw
xor
jl
push
mov
les
jl
adc
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
js
mov
mov
lea
mov
mov
mov
lea
mov
lea
xchg
lea
lea
lea
xchg
mov
inc
dec
inc
lea
movl
cmp
jge
lea
xchg
dec
mov
mov
cmp
je
mov
lea
mov
dec
lea
lea
xchg
dec
mov
lea
xchg
inc
inc
inc
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
mov
cmp
jns
lea
xchg
mov
mov
mov
xchg
xchg
xchg
mov
mov
mov
lea
lea
mov
mov
mov
call
mov
cmpl
je
mov
cmp
jl
mov
mov
mov
xchg
lea
dec
lea
mov
mov
mov
lea
mov
inc
dec
dec
dec
je
lea
inc
inc
inc
mov
cmp
je
mov
subb
mov
mov
jmp
lea
inc
dec
dec
cmp
jns
xchg
lea
lea
mov
xchg
dec
dec
inc
mov
mov
lea
mov
xchg
dec
xchg
inc
mov
nop
xorb
nop
mov
cmp
jns
lea
xchg
mov
mov
mov
xchg
xchg
xchg
mov
mov
mov
lea
lea
mov
incl
mov
cmp
jne
cmp
jnp
xchg
lea
lea
lea
mov
lea
mov
lea
lea
xchg
dec
mov
mov
lea
mov
lea
dec
mov
call
mov
cmp
jl
mov
mov
mov
xchg
lea
dec
lea
mov
mov
mov
lea
mov
inc
dec
dec
dec
je
lea
inc
inc
inc
mov
push
mov
push
call
cmpl
je
mov
push
call
mov
cmp
jl
mov
mov
mov
xchg
lea
dec
lea
mov
mov
mov
lea
mov
inc
dec
dec
dec
je
lea
inc
inc
inc
jmp
lea
inc
dec
dec
cmp
jns
xchg
lea
lea
mov
xchg
dec
dec
inc
mov
mov
lea
mov
xchg
dec
xchg
inc
cmp
jo
mov
lea
mov
mov
mov
mov
lea
mov
lea
inc
dec
inc
mov
mov
lea
mov
mov
inc
inc
inc
push
mov
push
call
mov
pop
ret
push
mov
add
cmp
jo
mov
lea
mov
mov
mov
mov
lea
mov
lea
inc
dec
inc
mov
mov
lea
mov
mov
inc
inc
inc
mov
mov
mov
add
xor
add
mov
dec
cmp
je
xor
add
inc
and
cmp
jmp
jmp
ret
jne
mov
lea
mov
mov
mov
lea
lea
mov
mov
mov
xchg
dec
dec
jne
mov
mov
lea
dec
dec
dec
dec
je
movb
jmp
lea
inc
dec
dec
cmp
jns
xchg
lea
lea
mov
xchg
dec
dec
inc
mov
mov
lea
mov
xchg
dec
xchg
inc
mov
mov
pop
ret
push
mov
add
call
mov
cmp
jl
mov
mov
mov
xchg
lea
dec
lea
mov
mov
mov
lea
mov
inc
dec
dec
dec
je
lea
inc
inc
inc
call
call
call
test
jne
mov
jmp
movw
cmp
jge
lea
lea
mov
xchg
xchg
lea
xchg
mov
mov
mov
lea
lea
lea
mov
mov
mov
lea
dec
inc
call
lea
mov
pop
ret
push
mov
add
mov
cmp
jl
mov
mov
mov
xchg
lea
dec
lea
mov
mov
mov
lea
mov
inc
dec
dec
dec
je
lea
inc
inc
inc
mov
lea
mov
mov
mov
lea
lea
mov
mov
mov
xchg
dec
dec
jne
mov
mov
lea
dec
dec
dec
dec
je
push
lea
push
call
push
lea
push
call
push
push
lea
push
call
mov
pushl
call
cmp
jge
lea
xchg
dec
mov
mov
cmp
je
mov
lea
mov
dec
lea
lea
xchg
dec
mov
lea
xchg
inc
inc
inc
mov
pop
ret
add
add
je
data16
add
add
jne
movl
cmp
jnp
xchg
lea
lea
lea
mov
lea
mov
lea
lea
xchg
dec
mov
mov
lea
mov
lea
dec
mov
mov
mov
lea
call
mov
cmp
jns
lea
xchg
mov
mov
mov
xchg
xchg
xchg
mov
mov
mov
lea
lea
mov
ret
mov
ret
lea
add
xor
pop
mov
inc
mov
inc
push
cmpsb
or
cmp
out
mov
inc
add
add
jle
pop
add
mov
cmp
add
loope
cmpl
pop
dec
addb
xor
pop
add
lret
movsl
pushf
xchg
mov
in
in
das
repnz
cwtl
add
aam
add
es
xor
flds
gs
dec
divl
adc
jmp
dec
push
aam
cmp
mov
jns
add
mov
push
xchg
push
rcrb
add
add
imul
add
dec
iret
xchg
add
lret
jp
sbb
mov
jl
add
add
test
scas
dec
popa
lret
push
inc
call
and
adc
fldenv
in
imul
or
test
loop
jle
add
add
adc
test
add
dec
jno
push
add
add
dec
mov
js
loop
mov
pop
push
popa
add
add
or
stos
xchg
stc
inc
insl
push
in
repnz
dec
cs
add
scas
fxch
add
popf
stos
add
inc
cmp
add
jmp
add
xchg
xchg
cmp
jp
ja
add
mov
rol
pop
imul
push
sti
add
cmpsl
add
add
movsb
dec
or
test
adc
add
add
add
test
and
dec
and
ret
xchg
add
add
arpl
cmpsl
dec
add
lods
test
daa
fs
inc
adc
outsl
add
jl
sub
add
fwait
mov
mov
inc
inc
add
roll
stos
insb
lods
sub
movsl
mov
out
mov
jge
adc
push
add
add
icebp
rclb
stc
mov
add
or
daa
add
xlat
inc
ljmp
add
leave
clc
adc
std
gs
adc
add
or
out
add
xor
jmp
sbb
add
adc
xchg
and
in
fidivl
mov
in
jns
test
jecxz
popf
dec
mov
add
mov
lea
outsb
jmp
pushf
mov
add
str
add
cmp
mov
gs
loop,pn
jmp
stc
mov
add
xor
hlt
xchg
fldl2t
addl
out
aaa
pop
push
addr16
add
movsl
rcl
jge
jle
xor
add
pop
std
out
push
add
inc
loopne
insl
push
mov
fwait
sti
lds
mov
js
push
iret
add
iret
sbb
ljmp
add
lods
lahf
push
push
es
add
lock
inc
mov
add
std
jno
add
int
imul
pop
mov
mov
icebp
scas
and
leave
in
sarb
fstl
fsubs
data16
add
and
push
add
add
add
add
ss
add
out
addb
dec
test
add
insl
add
stos
add
add
divl
pop
add
sbb
xor
hlt
sbb
mov
add
add
popa
add
movsl
sub
inc
jne
xor
mov
or
pop
pop
sbb
and
add
cmp
in
sbbl
jge
stos
jecxz
mov
lret
icebp
push
enter
out
cld
ss
ret
arpl
fisttpl
movsb
and
xchg
push
fstpl
scas
add
push
lods
xchg
sbb
out
sub
mov
std
insl
cmp
enter
cs
inc
outsb
mov
and
loopne
adc
adc
push
adc
jo
repz
adc
fwait
or
pop
push
ret
inc
cmpsl
xlat
ficomps
add
mov
mov
incl
xchg
jmp
cltd
imul
and
cli
nop
inc
cmp
add
inc
in
xor
sbb
scas
jecxz
stc
cmc
movb
sbb
xlat
add
and
jmp
or
adc
sub
jo
add
or
cltd
lock
mov
xchg
inc
into
dec
in
sub
or
and
je
add
mov
std
xchg
jp
cwtl
mov
mov
out
mov
adc
mov
jno
push
out
mov
arpl
imul
mov
pop
pop
mov
ret
out
cmpsl
sbb
sub
insl
mov
lods
dec
iret
lcall
sub
fs
int
outsl
mov
sub
push
mov
test
out
sub
xor
mov
pushf
mov
in
fnsaves
clc
test
test
fdivrl
jg
sub
xchg
push
hlt
inc
push
fldl
ud1
add
repnz
xchg
test
outsl
mov
and
cmovge
mov
sbb
add
rcrl
pop
jnp
mov
push
pop
push
rolb
mov
sub
lock
push
cmp
gs
inc
fstl
int3
insl
sub
sbb
lcall
push
ret
inc
add
adc
mov
add
jne
jge
mov
imul
sub
push
clc
stos
jns
aaa
and
mov
push
out
call
inc
or
pop
repz
mov
mov
daa
outsb
jecxz
push
adc
in
js
pusha
mov
push
push
xchg
xchg
xchg
cmp
into
jae
cmp
push
jge
mov
mov
jle
shrl
mov
bound
add
cmp
dec
pusha
push
mov
mov
ret
push
pop
xor
mov
push
mov
mov
cmpl
jae
inc
in
sbb
xchg
rorb
js
dec
pop
movsl
lds
and
and
into
pushf
and
fisttpl
adc
mov
jb
insl
jmp
fidivl
sahf
movsl
jge
adc
out
pop
aaa
into
sbb
cmp
cmc
int3
stos
incl
or
mov
mov
jl,pt
inc
stos
push
cmp
out
fcompl
inc
mov
cmp
mov
adc
cmp
xchg
ret
pop
mov
jl
lock
xor
lds
mov
out
push
and
in
xchg
push
sahf
push
pop
mov
iret
push
lahf
jge
xor
xlat
dec
cli
in
pop
les
ficoml
cs
in
add
mov
lock
lods
sub
sahf
push
outsb
cli
add
mov
xchg
inc
vpperm
push
inc
add
jbe
and
and
int
pop
pushf
sub
pop
movsb
cmp
lcall
sbb
or
je
sub
mov
addb
jg
movsb
sub
testl
adc
testl
fdiv
push
dec
negl
mov
rorl
mov
push
into
dec
repnz
dec
push
movsl
xor
mov
outsl
pushf
sbbl
fistps
pcmpgtd
aaa
lods
jge
xchg
mov
arpl
out
repz
out
inc
lock
mov
scas
sti
jle
and
data16
gs
push
loopne
inc
mov
adc
push
imul
in
xchg
pop
scas
fstpl
cmc
rclb
sbb
sub
dec
xchg
in
push
inc
jmp
sub
and
nop
and
pusha
movsl
mov
cmp
pop
push
jecxz
sbb
movb
ret
call
mov
dec
mov
pushf
sbb
xchg
fstpt
imul
daa
pop
inc
jmp
test
xchg
dec
mov
ret
je
cld
shl
ret
push
aaa
iret
std
cmp
cwtl
inc
or
mov
icebp
fisttpl
aad
pop
dec
mov
sbb
or
mov
mov
lock
mov
mov
mov
ret
jge
jb
lods
sub
xchg
mov
or
pop
fdivs
cld
clc
xlat
sub
dec
int
and
mov
lea
movsb
push
not
les
sub
aam
mov
mov
jno
push
scas
test
insl
clc
jecxz
in
dec
je
ljmp
xor
stos
pop
sbb
xchg
pop
dec
js
mov
xor
ficompl
cmp
mov
and
jmp
popl
lret
jge
shll
adc
fwait
call
outsb
add
rcrb
mov
or
mov
xchg
stos
push
mov
pop
rorl
out
adc
dec
or
cmpsb
xchg
mov
cld
dec
shlb
cs
sti
jl
out
or
es
dec
push
in
lahf
and
insl
cwtl
xor
test
jmp
mov
mov
decl
jle
xchg
es
fsts
cmp
cmp
mov
mov
pop
xor
mov
mov
jae
and
push
inc
lods
mov
mov
mov
mov
arpl
mov
repz
scas
and
mov
dec
mov
popl
loop
cmovne
ret
pop
pop
imul
pop
icebp
int3
arpl
and
inc
xchg
push
arpl
push
xchg
sub
test
pop
aam
int3
faddp
sbb
fcmovb
neg
cmp
repnz
dec
hlt
mov
adc
jbe
insb
xlat
jge
addr16
mov
push
cmpsb
add
scas
test
jns
loope
pop
mov
jmp
jb
cmpsl
scas
and
and
mov
sbb
testb
cmpsb
outsb
sahf
xor
mov
jbe
cmp
jmp
idiv
jno,pn
cmpsl
sbb
mov
loope,pt
xchg
movsl
push
sub
and
push
push
push
cs
xchg
test
push
loopne
xor
scas
pop
jmp
js
rcll
push
jb,pn
sti
movsl
bound
movsl
pop
sub
add
gs
movsl
push
pushf
popl
xchg
andb
lods
add
add
and
pop
push
daa
push
jg
das
jae
sub
fidivs
pop
and
lret
push
filds
fdivr
dec
mov
add
jno
int
stos
test
inc
sbbb
jg
mov
adc
sbbb
loope
cmp
mov
pop
negl
lret
mov
mov
popf
or
gs
adc
sbb
sub
jg
jnp
pusha
loop
adc
stc
daa
push
mov
add
sti
xchg
lods
and
es
out
inc
and
pushf
xor
insl
aas
cmp
data16
sub
jo
xor
fsub
or
mov
adc
jmp
adc
cmpsl
dec
repz
xchg
and
pusha
sbb
xor
xor
pop
xlat
dec
sub
ret
stos
sub
aad
cli
jmp
test
test
cld
mov
mov
flds
dec
in
ret
movb
testb
sbb
pop
jno
rclb
loopne
pushf
sbb
fldt
dec
pop
push
sbb
inc
cltd
es
add
sub
addr16
jb
mov
jge
pop
adc
mulb
std
loope
xlat
cwtl
call
mov
xorb
test
subl
lret
xor
mov
inc
in
lock
cmpsl
jno
adc
cli
mov
jne
mov
ret
or
scas
xor
insl
jle
pop
dec
cmpsl
cmp
aaa
mov
daa
push
fdivrp
and
mov
jb
pushf
and
dec
xlat
jl
ret
or
xchg
or
aam
out
mov
mov
pop
cmc
add
push
inc
out
mov
cmp
lods
and
pop
inc
jmp
nop
out
mov
push
xchg
mov
emms
testb
das
and
hlt
cmp
test
adc
sub
dec
arpl
xchg
test
outsb
cmp
jle
adc
or
mov
push
lahf
dec
cmp
jmp
jbe
sbb
or
icebp
push
xor
jnp
xchg
stc
test
fidivrl
mov
ja
call
xchg
mov
mov
sbb
inc
mov
data16
push
mov
bound
mov
jns
add
jecxz
rcrb
cs
mov
xor
movsb
mov
jno
cmp
push
mov
pop
fdivrl
push
inc
jle
or
in
sahf
andb
icebp
fildll
push
fsubr
orb
and
pop
jae
dec
dec
push
add
int3
popf
call
aad
push
cld
xchg
outsl
stos
sub
mov
insb
mov
imul
xchg
scas
xchg
push
mov
jp
outsb
xchg
mov
jle
arpl
sub
outsb
mov
push
loop
inc
fcmove
push
ficoms
sbb
xor
push
rcr
push
add
fcmovne
rclb
fnstcw
mov
leave
addr16
hlt
add
push
in
in
jbe
lods
fwait
jge
mov
push
dec
cmp
cmp
pop
int3
xorb
dec
call
sbb
xor
int
cld
scas
add
mov
cmp
pushf
bound
in
in
cmpsb
icebp
sahf
cmp
enter
daa
cmp
jno,pt
mov
mov
pop
sbb
add
call
and
leave
sbb
out
test
xor
out
adc
adc
lret
pop
lods
les
loope
and
pop
sub
das
pop
outsb
sarb
dec
xchg
rolb
pop
adc
sbb
out
and
add
int
jo
sub
pop
pop
mov
mov
fsubl
adcb
ficoms
or
pop
gs
add
mov
adc
mov
fistl
and
shll
aas
dec
cmp
imul
negl
xor
jl
mov
jge
mov
or
dec
into
adc
loop
fcomps
bound
lds
inc
mov
cmp
adc
sbb
data16
mov
dec
jp
mov
sti
insl
out
adc
xor
pop
lret
cmp
repz
sti
fmull
dec
lods
pop
push
gs
xchg
loopne
call
adc
jnp
imul
repz
cmp
in
or
imul
fwait
jns
sub
pushl
in
inc
add
pop
mov
mov
stc
jno
nop
xlat
repz
sub
fnstcw
test
jecxz
and
js
nop
imul
dec
adc
mov
or
pushf
jno
inc
fistpl
pop
inc
and
arpl
push
add
push
lahf
pop
jb
loop
dec
mov
push
enter
mov
movsb
mov
sbb
mov
xchg
rorl
add
sbb
or
lahf
rolb
stos
xor
jge
bnd
mov
sub
sbb
cmp
ret
fwait
insl
mov
insl
gs
dec
ror
cmpsl
cmp
je
ret
icebp
decb
cld
dec
mov
mov
xchg
xor
cltd
fwait
xor
pop
loop
add
push
subl
addr16
aam
xchg
aas
mov
out
push
xor
push
clc
pop
or
xchg
lret
jbe
ljmp
lods
sti
mov
cmp
icebp
xlat
les
outsb
mov
mov
outsb
cltd
sub
inc
mov
sub
adc
test
mov
xor
xor
ds
jl
pop
fwait
inc
test
pop
add
push
push
dec
mov
or
xchg
fsts
xchg
fisubrl
pop
dec
clc
jl
jnp
cmp
inc
leave
and
or
xchg
aam
pop
and
dec
xchg
xorb
fcomp
bound
sub
mov
pushf
cmp
jae
js
mov
sbb
test
fadds
stc
dec
adc
outsl
jbe
mov
dec
pusha
jno
push
rcrb
ljmp
xchg
in
insl
fdivs
mov
sbb
mov
lret
push
cmp
pushf
inc
sbb
add
pop
insb
negb
sub
pop
pop
scas
ljmp
adc
ss
int
outsb
ret
ret
pop
fprem
les
lea
jae
inc
mov
push
popa
inc
lods
fidivrl
int
xlat
or
sbb
pop
mov
lock
or
lds
jo
sub
push
mov
add
inc
hlt
dec
js
push
cmp
test
bound
jge
rcrb
or
gs
cmpsl
ja
imul
push
pop
push
das
jo
mov
xchg
and
and
arpl
sub
pop
pop
movsb
push
daa
cmp
arpl
pop
pop
sbb
ljmp
cmp
arpl
daa
jecxz
movsl
sbb
xchg
cmp
popf
lahf
icebp
or
push
aam
shrb
add
xor
outsb
mov
xchg
leave
stos
pop
cmp
imull
pop
jmp
fs
xchg
fsub
sub
je
xor
outsb
and
mov
popl
imul
xlat
sbb
and
sbb
sub
push
shrb
lds
pop
and
imul
inc
cmpsb
sbb
sahf
adc
addl
jmp
push
mov
mov
xorl
cmp
es
sti
neg
cmpsl
lret
xchg
rcll
or
jns
cmc
lahf
fsubrl
outsl
cmp
loop
push
jne
andb
add
sub
lods
xor
sub
sbb
cli
mov
arpl
shrb
push
sar
mov
and
popa
xchg
loopne
cld
out
pop
popa
enter
jae
jae
rcll
das
outsl
repz
mov
cmpsl
push
add
mov
mov
xlat
ficompl
push
mov
stos
test
mov
pushf
out
aad
pop
mov
jge
test
dec
aam
hlt
ds
loopne
scas
or
lds
and
imul
sub
pushf
sbb
int
leave
mov
cltd
inc
cmpsl
xor
movsl
pop
popf
jb
cmp
dec
sbb
pop
je
outsb
lahf
arpl
out
das
gs
jne
adc
or
xchg
sbbl
cmp
mov
or
jno
fdivp
aad
cmp
shll
and
jecxz
xor
cmp
ret
sub
xchg
es
mov
mov
dec
mov
sti
cmpl
data16
jns
in
mov
mov
dec
bound
add
test
push
and
aam
xchg
repnz
xchg
push
clc
es
fisttpll
clc
xchg
insb
xchg
xchg
or
mov
xchg
cmp
lods
data16
stos
in
cli
out
push
call
xchg
xor
pop
sysexit
test
cltd
bound
mov
jne,pn
dec
xor
mov
in
mov
mov
mov
jne
dec
push
in
adc
and
ljmp
xor
ljmp
xchg
clc
js
fsub
arpl
add
iret
ja
aam
dec
jmp
fimuls
or
dec
jno
lret
dec
imul
loop
or
ret
addb
jno
or
sub
inc
out
pop
adc
lcall
jp
addr16
mov
jecxz
lcall
push
sub
bound
fucomip
inc
or
jmp
mov
push
push
mov
rcrl
ret
dec
push
push
jp
std
stos
shlb
add
imul
and
push
fs
adc
adc
iret
sub
adc
pop
adc
test
push
cs
push
loopne
xor
push
xchg
cs
xor
sbb
mov
lods
xchg
xchg
ljmp
mov
aam
mov
push
out
inc
hlt
cltd
cli
mov
mov
jbe
mov
sbb
push
dec
aaa
lret
or
std
in
add
test
mov
dec
fiadds
push
add
sbb
orl
scas
sarb
cmp
dec
push
inc
repnz
cmpsb
idiv
das
in
aas
test
enter
daa
cmp
push
cmp
rorl
stc
jle
out
mov
ds
jge
movsl
and
push
and
push
rcrb
cmpsl
loop
test
lret
cmp
xor
mov
les
adc
pop
sub
push
push
xchg
loope
mov
sub
rcrl
xchg
or
repz
fs
sbbb
sbb
hlt
out
add
cmpsb
mov
mov
push
xor
repnz
pop
fsubrl
inc
and
sub
in
fdivr
call
lea
sahf
mov
iret
test
sbb
jg
lcall
shrl
pop
adc
pop
lds
loope
in
negl
stos
shrw
dec
or
insb
call
cmc
data16
xor
xchg
stos
outsl
sbb
dec
loop
bound
dec
pusha
fbld
in
ss
xchg
data16
icebp
lods
sbb
aas
mov
jecxz
out
inc
aas
cli
mov
mov
stos
sti
cmp
push
repnz
gs
mov
outsb
pop
js
stos
adc
mov
repz
jg
push
test
loope
mov
sub
movsb
int3
mov
push
and
jmp
and
ss
test
nop
shll
inc
inc
lret
adc
sub
les
cmp
adc
lea
cld
call
lahf
adc
jb
fiaddl
scas
lcall
cs
testl
movsb
mov
les
je
sbb
imulb
or
std
flds
xor
xchg
mov
aam
xorl
cmp
mov
inc
sti
mov
inc
div
xor
mov
mov
dec
bound
ret
mov
sti
test
xor
fisttpl
sbbl
icebp
lods
movsl
es
movsb
mov
movb
and
and
pop
and
rclb
add
sub
dec
aam
out
xor
push
mov
call
pushf
xchg
dec
mov
ljmp
stos
lods
shrl
in
out
mov
arpl
and
stos
sete
add
out
cltd
cltd
popa
cltd
test
mull
xor
test
outsl
mov
fistps
sbb
shlb
lods
pop
fwait
movsb
aaa
das
push
mov
add
cmp
add
or
xor
or
ret
push
xchg
out
mov
mov
mov
cmovge
cmp
idivl
mov
dec
dec
xchg
xorb
fwait
mov
mov
xchg
pop
bound
pop
ftst
shlb
cmp
jns
in
lea
cmpsl
or
inc
add
mov
mov
jnp
out
pushf
jle
and
pusha
cmpsl
cld
lret
leave
pusha
xchg
movsl
mul
jmp
xor
jae
pusha
cmp
dec
scas
and
mov
mov
sahf
fsubl
xor
imul
pop
push
stos
hlt
pop
adc
xchg
fcmovne
mov
ret
mov
pop
lea
sub
roll
inc
xchg
cmp
or
cld
out
xlat
inc
pop
sbb
daa
cmpsl
xchg
test
cli
pop
nop
loopne
ficoms
ffree
jno
je
xlat
cmpsl
mov
daa
ficomps
hlt
in
in
push
jp
dec
sub
jge
test
add
or
cltd
rolb
std
rolb
inc
mov
dec
xor
loope
xor
fidivs
scas
lahf
in
inc
and
sbb
movsb
xchg
notb
cmpsb
jp
jns
es
lret
enter
daa
aaa
movsl
add
ret
jno
adc
jl
int
cmp
or
and
ja
das
xchg
aaa
push
jp
xchg
test
xchg
mov
mov
sbb
mov
mov
push
sub
imul
loope
jp
sub
adc
lret
dec
add
adc
adc
lahf
pop
mov
popa
sbb
test
and
dec
jo
lret
shlb
fs
pop
pop
aam
lcall
test
cmpsl
mov
push
pop
sahf
pop
outsb
lock
mov
pop
loop
mov
jg
mov
fdivs
cmpsb
shlb
adc
fcomps
outsl
lret
popa
roll
mov
enter
mov
mov
cmpb
test
push
stc
add
fs
and
lds
je
add
mov
adc
ss
out
dec
push
xor
cmp
enter
in
gs
inc
pop
loopne
xor
pop
xchg
insl
jmp
popa
stc
and
repz
mov
sbb
sbb
cwtl
xlat
pop
js
sub
jl
xorl
bound
or
nop
push
unpckhps
jg
fldenv
les
mov
adc
mov
mov
add
pop
cmp
add
pushf
jb
lahf
push
sbb
mov
sub
inc
jo
mov
jecxz
push
test
dec
or
pop
roll
jecxz
std
jge
or
push
dec
es
and
mov
js
mov
bound
das
popl
adc
push
jle
and
fbstp
es
daa
insl
sbb
push
dec
mov
cwtl
cmpsl
ss
mov
orl
cld
iret
sbb
jne
xchg
mov
scas
jecxz
mov
aas
sbb
jecxz
bound
aas
orl
push
xchg
pop
push
jle
fcomp
lcall
xchg
mov
ljmp
xchg
lods
cmp
xchg
stos
ret
out
sbb
cltd
xchg
rcl
push
incl
lahf
add
mov
test
fisubl
xor
cmp
or
test
sbb
xchg
lcall
dec
jns
shll
mov
fwait
shll
add
push
repnz
lods
push
or
jae
xor
fdivr
xchg
xor
pop
inc
mov
jp
pushf
ja
iret
xor
sbb
orb
push
mov
inc
jae
adc
sbb
data16
bound
jecxz
fisttps
in
hlt
xor
cld
shll
sub
nop
mov
addr16
popa
push
jp
mov
je
jp
fistpll
push
outsb
jle
data16
dec
lcall
es
or
pop
and
xchg
dec
xor
daa
lcall
test
fnstsw
clc
inc
stos
cmc
fcomps
insb
aaa
dec
test
ljmp
repnz
xchg
adc
das
and
ljmp
pop
jle
loopne
xchg
cli
les
jmp
mov
jns
xor
inc
fmulp
ficoml
dec
pop
sbb
movsb
jb
mov
cmpsl
lods
mov
jge
loopne
mov
xchg
jp
in
inc
dec
outsl
hlt
das
sti
es
sub
pop
jbe
cmp
sbb
xorb
movsb
sub
in
ljmp
sub
push
dec
movsb
fildll
push
enter
arpl
mov
scas
jle
add
dec
fcompl
movsb
push
push
testl
sub
in
or
imul
cmpsb
push
cmp
stos
outsb
jno
xchg
gs
cmp
add
nop
call
and
loop
lahf
dec
fisubs
test
popa
mov
cmp
movsb
pop
scas
pop
lret
and
pop
test
dec
push
jmp
loope
mov
sub
inc
icebp
sub
in
add
in
sbb
and
mov
insb
popf
stos
add
mov
and
sub
xor
sub
cmp
sahf
in
lcall
dec
fcoml
js
jmp
xchg
cli
sub
clts
jg
sub
and
loop
ficoml
pop
sbb
add
cmp
push
sarl
and
rcr
fmuls
dec
mov
cmc
hlt
ljmp
jl
loop
icebp
dec
stc
mov
sbb
jle
xlat
ja
out
out
mov
adc
and
jo
nop
jo
sti
cwtl
nop
scas
cmp
loopne
push
pop
mov
js
bound
imul
dec
repz
adc
sbb
xor
xlat
xchg
sub
mov
in
xchg
movsb
jmp
mov
xor
adc
add
inc
imul
les
outsb
iret
push
dec
or
xor
xor
pop
lock
rcll
mov
fistl
aam
inc
add
cltd
inc
mov
pop
aas
cmpb
dec
jg
je
outsl
pop
rcl
loopne
divb
outsl
sub
mov
push
fwait
mov
jbe
sbbl
lret
pop
cmp
mov
in
lock
subl
cmp
mov
fs
ret
xlat
xlat
add
mov
mov
dec
lods
or
xor
inc
icebp
pop
jge
cli
fdivr
mov
and
and
push
add
pop
in
shlb
daa
inc
aam
cwtl
sub
push
inc
mov
push
clc
inc
add
xor
jmp
sbb
lods
cmpsl
push
stos
stos
mov
sub
jge
test
push
fisubrl
and
mov
fcompl
jge
pop
mov
aaa
in
dec
data16
jae
roll
sub
pop
pop
sub
fwait
add
cmp
into
ljmp
jb
sbb
dec
cmc
fdivl
cltd
lods
in
jge
fdivs
inc
sub
mov
ret
sarb
xor
adc
inc
and
data16
pop
bound
adc
add
mov
mov
out
inc
cwtl
das
fcoms
in
out
xchg
jg
stc
sub
mov
addr16
add
push
mov
xchg
outsb
or
jge
jle
lahf
jmp
pusha
filds
notb
push
mov
xchg
sbb
sbb
notb
dec
push
shrb
popf
stos
cwtl
lods
mov
aaa
xor
and
and
dec
imul
xor
pop
in
adc
mov
repnz
pop
mov
addr16
mov
inc
dec
inc
cwtl
mov
or
repnz
fildl
add
xchg
xor
push
sbb
lcall
loopne
ficoms
dec
rcrb
cwtl
repnz
aaa
leave
mov
jns
push
js
and
mov
lds
add
jae
pop
or
or
out
outsb
add
mov
dec
adc
gs
xchg
jle
scas
pop
push
ds
movsb
fdivrs
mov
xor
cmpsb
subb
hlt
push
mov
test
sub
test
inc
and
jl
icebp
movsb
cmp
jbe
ds
push
movsl
cmp
in
insl
sub
push
test
sub
js
or
mov
enter
mov
push
movl
sub
ljmp
dec
and
xchg
outsl
in
mov
cmp
push
push
cmp
cltd
mov
xchg
pop
sbb
lret
fstl
xchg
and
std
daa
push
sbb
mov
jo
or
call
mov
add
cmp
mov
or
ss
jecxz
cmp
adc
xor
cmpsb
xor
cmp
mov
jo
mov
and
xorl
cmc
mov
adc
inc
loop
xchg
jno
xchg
lods
insl
dec
add
int3
addr16
lods
into
xchg
data16
xchg
xor
adc
add
xor
addr16
and
inc
sbb
pop
push
inc
gs
mov
loopne
mov
pop
aad
inc
adc
pop
unpcklps
in
pop
mov
xchg
mov
add
xchg
imul
pusha
pushf
sub
loop
mov
push
mov
jmp
test
aad
pop
call
arpl
mov
imul
movsl
cmp
sbb
mov
lea
cmp
sbb
sub
stos
mov
fildll
pushf
enter
test
and
jbe
inc
ret
mov
inc
cmpsb
xchg
movsl
aas
and
jb
sahf
adc
faddl
je
sbb
pop
sub
repz
or
cwtl
popa
pop
aas
mov
lods
rorl
imulb
dec
or
ret
pushf
mov
mov
lret
inc
or
call
mov
out
pop
ret
pop
inc
es
fwait
sti
insl
call
in
cmpsl
xor
scas
mov
xor
sahf
cld
and
sub
pop
and
icebp
adc
pop
jge
or
mov
lahf
sub
jmp
mov
mov
push
add
sub
clc
xorb
ljmp
mov
sub
loopne
ret
xchg
dec
xchg
lahf
push
mov
sti
cmpxchg
faddl
mov
dec
loope
mov
cmp
int
push
out
ljmp
mov
inc
rcll
int3
pop
rcll
test
jno
and
lea
and
xor
loopne
or
mov
xor
call
mov
lahf
add
xchg
dec
jl
lock
imul
sub
or
insb
mov
cmc
jp
jne
subl
es
bound
sub
int
in
xchg
aas
subl
and
add
cmp
xchg
mov
outsb
lods
mov
xchg
mov
jnp
imul
pop
jo
pusha
js
fbld
xchg
push
imul
in
xchg
in
mov
vpunpcklwd
xchg
jae
popf
shrb
xor
scas
sub
stos
fldt
and
je
or
lret
fnop
fs
or
adc
test
inc
cmp
ljmp
movsb
loope
inc
fwait
push
cs
insl
jbe
inc
fdivrl
cs
mov
push
push
jl
pop
sbb
mov
push
stc
out
shlb
sbb
and
inc
leave
xor
pusha
push
data16
jbe
mov
pop
sbb
icebp
xchg
or
test
add
sbb
int3
add
or
mov
xchg
xor
out
and
scas
cmp
out
and
add
sbb
movsb
xor
add
fcomps
in
fisttpl
inc
enter
daa
xor
mov
jno
fucomp
jl
inc
cmpsl
cmp
insl
inc
movsl
aas
scas
icebp
and
add
lods
push
repz
stos
test
divl
lahf
xor
in
mov
js
test
push
push
in
pushf
adc
sub
fadd
adc
mov
inc
push
stos
jb
sbb
aad
add
pop
cmp
enter
cmp
int
adc
outsl
pop
pushf
xchg
mov
push
inc
testl
sahf
inc
mov
test
lret
push
jg
sar
mov
into
outsl
mov
mov
test
cmp
int
xchg
notl
or
roll
jbe
fstp
movsb
or
shll
cmpsb
mov
fucom
mov
cmp
adc
fs
adc
add
mov
mov
lods
mov
xchg
adc
mov
xor
loope
cmp
cmpsb
adc
imulb
jle
mov
loopne
pop
xor
adc
sub
imul
movsb
repz
jns
jbe
jae
dec
loopne
int
rcl
adc
pop
and
add
shr
repz
out
mov
es
lds
dec
pop
sbb
inc
roll
pop
lret
fcmovb
mov
into
jecxz
stos
cli
sbb
pop
cli
in
call
fwait
out
pop
push
sbb
ss
lcall
and
pop
mov
popa
inc
dec
adc
inc
sarl
rcr
jb
cli
out
dec
insl
jbe
je
adc
shrl
pushf
divb
and
sbb
dec
mov
xlat
outsb
mov
call
decb
mov
cmp
in
mov
mov
lock
mov
mov
jbe
clc
and
push
mov
cmc
and
lds
stos
dec
mov
lret
hlt
pop
add
or
dec
cld
push
jns
mov
addr16
ret
scas
mov
mov
cmp
pushf
mov
pop
rcrl
aam
xchg
cmpsb
mov
cmpsl
lea
pop
mov
clc
mov
fdivrp
ljmp
je
jge
jmp
shrb
inc
adc
xchg
xchg
or
push
nop
cmp
add
sub
sub
xchg
xor
imul
imul
fwait
pusha
test
add
test
ret
pushf
cmc
xor
dec
xchg
imul
xchg
and
or
cmp
jge
stos
adc
ja
es
dec
test
outsb
inc
push
lcall
cmc
sbb
jne
out
mov
xlat
cmp
add
fbld
sub
jns
add
in
jecxz
cmpl
xor
addl
xor
sti
js
jnp
sbb
insb
in
icebp
test
das
in
filds
stc
stos
jmp
scas
call
push
push
pop
repnz
popf
stc
test
mov
mov
cmp
dec
shlb
js
imull
pusha
mov
push
fldenv
iret
pop
enter
das
jne
and
aam
mov
arpl
cld
push
or
call
notb
xchg
loope
sbb
pop
dec
icebp
sbb
fsubrl
lds
adc
mov
jae
cmp
test
ret
jb
push
push
adc
mov
sbb
je
test
or
adc
xchg
int3
in
cmc
das
dec
icebp
push
push
push
jno
dec
xor
dec
xlat
stos
scas
sbb
jmp
add
dec
cmp
mov
or
inc
cmpsb
xchg
in
ret
enter
daa
xor
lods
cmp
mov
je
pop
js
ds
lret
int
inc
or
and
mov
lahf
stos
xlat
sub
gs
test
ret
xor
movsb
ljmp
adc
gs
out
mov
subl
jne
add
sarb
movsb
aas
and
cmpb
push
add
inc
shll
cs
push
aas
jle
int
dec
ljmp
cmpsl
sub
lcall
aad
push
adc
sbb
aad
in
test
xor
sub
mov
push
push
mov
insl
sbb
or
cmp
mov
notw
lret
lcall
mov
sbb
dec
inc
jmp
dec
jge
xor
js
outsl
jae
push
loop
dec
and
fistps
or
add
shlb
xchg
imul
inc
std
out
inc
jmp
mov
lret
pop
cmp
add
movsl
jg
mov
mov
loopne
mov
pop
adc
cmp
lds
adc
cmpsb
cmp
sti
mov
pop
sbb
or
push
sub
pop
mov
sub
aam
cs
call
pop
nop
aam
js
inc
mov
push
jo
mov
cs
mov
lea
dec
call
sbb
lcall
arpl
pushf
push
mov
cs
inc
rcl
insl
inc
fdivl
aas
pop
ja
jb
mov
mov
je
fs
sarl
enter
jge
cwtl
xlat
dec
add
mov
fcompl
jecxz
xlat
lret
test
xchg
mov
lea
idivl
das
or
mov
sub
push
popf
ret
test
or
dec
hlt
test
mov
dec
popf
fcompl
mov
stc
cld
jnp
fidivrs
mov
add
daa
je
pop
mov
pop
mov
aam
mov
mov
loopne
push
mov
fnsave
cmp
not
push
xchg
test
mov
mov
inc
jns
jle
push
cmpsb
out
aam
fsub
or
fwait
lcall
clc
rcrl
sahf
sbb
fiadds
mov
fwait
pusha
push
test
or
xchg
xlat
sbb
test
pop
sub
or
push
mov
push
add
ret
push
jmp
jbe
xor
xor
xor
jne
xchg
jno
lahf
mov
mov
mov
data16
pop
ja
negb
dec
fwait
mov
inc
ljmp
mov
dec
mov
lods
xchg
mov
popf
dec
out
loop
jg
xchg
shlb
xchg
in
out
sub
sub
jl
out
addr16
or
jp
xchg
mov
push
mov
es
jnp
xchg
xchg
add
pusha
scas
sub
mov
jmp
jp
or
sub
sbb
xchg
and
sub
ror
and
jb
imul
scas
lahf
xchg
dec
push
push
dec
jecxz
inc
push
bswap
data16
sub
pop
pop
popa
lcall
jmp
movsl
or
arpl
inc
fidivl
mov
je
add
pop
xor
lds
push
shr
xlat
mov
and
leave
pop
mov
hlt
pop
in
loop
gs
scas
jbe
pop
jge
xchg
xor
dec
insl
or
lods
dec
fcomps
add
adc
push
inc
ret
xor
movsl
mov
arpl
xchg
ss
mov
add
icebp
xchg
test
aaa
pop
daa
xor
or
roll
ret
adc
cmp
pop
cltd
ds
fsubs
jne
test
lret
push
cltd
mov
test
lea
xchg
xor
inc
jmp
dec
pop
dec
bound
js
xor
subl
sub
sub
jbe
or
lcall
pop
push
sahf
sahf
add
adc
mov
dec
sahf
addr16
dec
and
and
into
imul
and
pop
lcall
push
out
and
push
sbb
mov
repnz
jg
test
mov
pop
xchg
mov
mov
ss
xchg
cmp
inc
pushf
stos
notl
push
xor
adc
sub
xor
cmp
or
addr16
adc
xor
outsl
push
je
loop
jg
stc
xchg
les
add
adc
xchg
adc
jle
in
in
out
mov
sub
jle
les
js
outsl
dec
adc
jnp
pop
pop
xor
outsb
adc
adc
repz
xchg
cld
or
sbb
inc
test
xlat
xchg
sbb
mov
cwtl
popw
jmp
adc
aad
lods
dec
nop
scas
push
out
dec
push
fstpl
mov
sbb
jne
inc
or
jecxz
idivb
and
jge
and
icebp
pop
mov
xchg
insb
pushf
leave
icebp
sbb
adc
adc
inc
idivl
adc
dec
pop
xchg
cmp
add
xchg
rorl
inc
idivb
sub
and
push
cmpl
hlt
mov
xor
push
dec
stos
das
ljmp
mov
nop
aas
int3
ret
adc
cmpsl
insl
popf
and
cmpsl
xor
cwtl
mov
mov
adc
mov
lods
loop
and
ret
pop
fiaddl
rolb
jno
sub
daa
or
jb
and
dec
daa
jg
pop
ret
pusha
clc
xor
xchg
ret
and
mov
xchg
popa
ljmp
insl
data16
or
sub
and
out
into
jbe
add
std
cld
cltd
jecxz
test
sbb
inc
shlb
dec
add
test
testl
sbb
or
rcrl
or
aam
mov
mov
pop
and
fisubl
lahf
add
mov
push
in
pop
or
pop
xor
das
out
shr
mov
in
pusha
mov
and
sbb
cwtl
or
jbe
mov
fistps
dec
sahf
hlt
dec
jne
xlat
xchg
rcll
jns
push
or
adc
adc
xor
mov
sub
ja
jne
xchg
mov
push
mov
and
int3
jb
or
dec
inc
xchg
ffreep
inc
pop
xchg
xchg
mov
jmp
inc
pop
es
mov
push
fimuls
popf
inc
dec
cmpb
sub
mov
iret
or
fcomps
add
push
push
and
adc
nop
adc
ds
xchg
pop
xchg
xchg
push
inc
int3
aaa
xor
rcll
inc
movsb
adc
or
fidivs
aad
pop
sti
cmp
adc
cmp
sbb
jne
pop
stos
adc
lds
sub
mov
sbb
cmpsb
leave
xchg
arpl
mov
xorb
xor
lds
lock
aaa
add
mov
add
wrmsr
dec
iret
movl
inc
inc
sahf
jo
adc
fstps
and
iret
idivl
inc
pusha
out
aad
xchg
inc
fninit
jne
mov
fs
nop
xchg
sub
xchg
pushf
mov
xor
cmp
in
popf
jno
jmp
jl
sub
cmp
fs
movsl
push
jmp
jle
jmp
cmp
test
pop
mov
or
scas
aaa
outsb
pop
jno
daa
js
jmp
pop
jecxz
ret
push
cmp
loope
lock
popl
gs
outsb
cmp
adc
xor
cmpsl
std
ljmp
jg
dec
add
popf
test
cmc
pusha
sbb
inc
push
adc
xor
add
mov
inc
repz
fsubrl
lods
lds
popf
sub
subb
jg
in
mov
icebp
jae
adc
dec
mov
imul
push
int
dec
hlt
xchg
incb
not
in
lret
add
mov
insb
out
into
movaps
sarb
outsl
xor
loop
in
stc
dec
xchg
mov
add
inc
xchg
data16
mov
push
inc
mov
inc
cmc
out
test
xor
xchg
cmp
cs
add
inc
out
adc
jbe
inc
loopne
mov
pop
push
repnz
add
movsl
adc
insl
sahf
repz
xlat
push
xchg
mov
mov
not
shlb
sub
or
mov
add
pop
cs
or
js
add
jne
out
enter
lods
push
or
and
test
pop
sbb
pop
outsl
mov
in
je
enter
out
je
sbb
jge
inc
adc
jb
inc
dec
dec
rcrb
jmp
dec
add
pushl
std
addr16
mov
dec
xor
movsb
fnstcw
adcl
loop
xchg
mov
dec
lock
ss
mov
fwait
mov
and
mov
ret
mov
sbb
mov
xchg
cmpsb
das
cmpsl
xor
mov
lea
cld
rcrl
push
shlb
cmp
stc
and
rcl
push
cmp
aam
jle
mov
push
loopne
adc
fldl
sub
sub
xor
push
enter
dec
xchg
push
pop
push
and
mov
cltd
sbb
mov
mov
inc
lods
and
arpl
test
js
xchg
rcrl
inc
cmpsl
shll
ds
jg
cmp
std
pop
incl
stc
push
in
jmp
xor
mov
call
xchg
psrlq
lock
or
xor
aam
xor
dec
cmpl
cmpsb
or
int3
loopne
inc
jmp
shlb
data16
mov
mov
jns
js
in
lods
andl
out
or
or
addr16
cmc
aad
cmp
pop
mov
jno
mov
pop
lret
stc
or
jns
pop
pusha
in
aam
loopne
jne
push
pop
jmp
adc
push
mov
outsl
dec
mov
jb
stos
stos
cmpsl
sti
inc
and
add
mov
mov
rclb
pop
arpl
clc
bound
ret
xlat
pop
enter
xlat
or
arpl
add
cmpsl
dec
lcall
cwtl
mov
fadd
mov
enter
out
daa
sbb
sbb
pop
fld
icebp
faddp
sar
and
dec
mov
insb
adc
or
fsubrl
push
add
std
jge
call
getsec
ret
or
iret
iret
int3
scas
fisubrl
ds
int
sbb
mov
jo
jb
scas
mov
fwait
mov
movsb
pusha
out
jne
push
pop
cmpsb
seto
in
ja
jle
nop
xchg
andl
cmpb
jns
icebp
jl
lret
addr16
sub
stos
cmp
push
aas
icebp
nop
test
and
xor
scas
mov
cmp
js
ss
and
dec
loope
xlat
cmp
mov
sub
outsb
sahf
sub
rorb
push
pop
dec
xor
enter
imul
loopne
push
dec
out
int
push
xchg
sub
push
mov
lcall
in
push
movsl
add
add
mov
test
or
inc
dec
mov
movhps
movsb
mov
aam
xchg
cmp
mov
decl
lret
push
shll
mov
push
xchg
repnz
cmc
sahf
xchg
jo
adc
shrl
push
loop
jg
stc
add
inc
fs
sahf
add
insb
lods
lods
push
stc
insb
mov
mov
xchg
cli
push
dec
shlb
popa
call
sti
mov
out
decb
and
mov
or
adc
imul
iret
iret
repz
mov
inc
cmp
sub
sub
push
mov
outsb
mov
cs
dec
cmc
aad
and
nop
gs
dec
aam
loope
fistpl
ljmp
mov
jecxz
push
adc
sub
mov
call
xchg
stc
mov
loop
adc
cmp
sub
sti
int3
inc
imul
iret
sbb
cmp
jno
xchg
outsl
push
dec
dec
inc
dec
je
dec
shrl
jbe
std
push
popl
or
mov
stos
je
xchg
cmp
sub
scas
sub
cmc
call
mov
lock
stos
das
test
cli
mov
push
dec
dec
and
jle
ret
xor
add
rcrl
insl
imul
cmpsl
das
push
xchg
mov
lods
push
cld
cld
test
movsl
mov
fbstp
xchg
mov
sbb
xchg
shrb
jg
aam
jne
mov
and
push
rcll
enter
push
clc
cmpsl
rorb
ljmp
lods
sub
adc
dec
or
out
iret
inc
push
mov
rclb
cmp
jl
movsb
xor
mov
sbb
dec
sarb
call
xchg
or
rol
ljmp
sbb
clc
push
mov
dec
sbb
adc
mov
add
mov
or
inc
xor
popf
enter
pop
mov
mov
iret
pop
xchg
mov
ja
jge
dec
je
lret
inc
scas
mov
outsl
mov
mov
jne
pop
or
jg
bound
icebp
jns
cmp
in
data16
xor
sub
xchg
sub
sub
insl
test
and
adc
mov
fstps
mov
or
in
frstor
jg
sahf
mov
jmp
fistpl
mov
rcrb
dec
popf
xchg
jns
mov
mov
leave
stos
sbb
into
and
inc
insb
and
add
scas
enter
jecxz
adcl
subl
fs
pop
jmp
inc
loop
inc
arpl
repz
cld
fwait
or
aam
lret
inc
push
adc
jnp
call
sbb
xchg
jg
or
fisubrs
pop
lds
nop
dec
mov
mov
mov
hlt
cmp
mov
jbe
arpl
out
or
data16
cmp
add
jns
dec
lods
andb
aam
adc
js
scas
xchg
repz
dec
pushf
push
cmp
bound
xchg
jae
xchg
mov
in
pop
or
enter
daa
das
sbb
jno
push
test
push
cmp
stos
stos
ds
shlb
inc
cmp
push
adc
lcall
cld
xor
incb
pop
mov
adc
pop
popa
fisubrl
push
scas
push
loope
jecxz
sub
scas
push
sub
cwtl
outsb
add
add
push
jbe
shr
adc
orb
aas
sbb
sbb
inc
inc
xlat
and
mov
ja
add
sub
sarb
push
repz
push
sbb
fstps
stos
mov
andb
push
mov
bound
mov
sub
adc
aad
pop
cmp
je
stc
notl
sbb
sar
fimuls
push
and
cmc
gs
ja
out
xlat
mov
stc
mov
xor
add
inc
jp
cmp
outsl
mov
xchg
fwait
out
and
cli
xchg
fwait
cmp
lods
icebp
sti
popa
jbe
sub
imul
es
adcb
addb
inc
test
xchg
inc
dec
inc
sbb
hlt
shlb
sub
pop
push
mov
fnstenv
fsubrl
jp
jnp
push
hlt
pop
nop
inc
mov
cmp
outsl
xor
sbb
out
xor
jbe
or
sub
sub
daa
je
push
or
adc
add
pushf
lret
fistpl
and
inc
in
mov
lahf
aas
fildl
nop
jb
into
cwtl
dec
rclb
je
in
loop
stc
outsb
jo
test
iret
std
mov
ds
ret
lods
pop
mov
imul
andb
cmp
mov
dec
std
mov
popa
dec
lock
das
xchg
mov
xor
es
push
mov
dec
mov
push
cmpsl
jge,pn
mov
cmp
pop
cld
daa
mov
mov
push
fsubs
xchg
and
pop
aaa
icebp
pop
sarb
pushf
sub
mov
bound
xchg
cmp
fst
mov
clc
loop
leave
xchg
andb
adc
shll
jecxz
xchg
fidivrl
stos
cmp
scas
xchg
clc
aaa
inc
push
xlat
out
clc
por
push
add
inc
fwait
cltd
mov
test
ret
mov
dec
ret
pop
dec
aaa
testb
aaa
dec
xchg
test
loop
add
push
adc
fwait
dec
sahf
xchg
push
inc
xor
add
and
xor
pop
js
mov
push
jecxz
lods
jno
mov
dec
push
mov
push
xchg
sub
pop
jmp
lea
inc
fimull
ljmp
dec
inc
add
dec
mov
mov
jp
out
pop
add
frstor
popf
jns
movsl
mov
addl
sub
push
icebp
cwtl
jp
stos
aas
mov
lea
adc
in
push
shlb
lock
xchg
adc
inc
jmp
cmpsb
incl
push
daa
cmp
mov
lock
je
cld
jge
add
nop
imul
mov
sub
jne
scas
mov
inc
ret
mov
ss
sahf
inc
in
mov
arpl
sub
or
dec
and
inc
loopne
fisubrl
xchg
mov
xchg
loope
sbb
loop
pop
aaa
andb
xor
test
push
popa
sarb
rclb
sti
push
div
xchg
add
adc
jge
fldenv
aaa
inc
cmp
test
ljmp
in
fimuls
xorl
fwait
gs
jo
xchg
or
jbe
out
loop
add
sub
movsb
jbe
loopne
mov
cmpsb
adc
sbb
xchg
daa
cs
cmp
ds
jl
xchg
lds
ds
mov
imul
loope
in
and
jb
fistl
xor
cli
jb
out
cmpsb
js
xchg
pop
mov
ja
loope
adc
lret
sub
jmp
outsb
mov
rol
iret
add
sbb
jmp
add
pop
dec
and
stos
push
push
dec
jno
int
leave
jnp
push
movsb
or
xchg
add
lcall
adc
stos
cmp
arpl
or
xor
loopne
mov
sbb
mov
call
clc
mov
or
jnp
sbb
adc
fsubrs
mov
testl
mov
rcll
or
pop
jp
into
mov
inc
jno
enter
into
stos
jle
es
cli
stc
jb
dec
fs
stos
add
movsl
push
push
xchg
dec
lods
pop
sub
out
and
xor
js
cmp
sub
sti
adc
push
in
sub
xchg
ss
jg
scas
push
adc
sub
imul
lahf
repz
jg
xchg
or
sbb
das
push
xlat
dec
stc
sub
andl
js
jmp
test
frstor
loope
sbb
cli
dec
xchg
xchg
fiaddl
clc
neg
push
lret
repnz
jecxz
mov
mov
or
dec
xchg
lcall
inc
rcrb
push
or
insb
test
arpl
aas
jp
mov
dec
aaa
sub
sub
xchg
pop
test
or
pop
fs
cwtl
jle
mov
mov
push
adcl
xchg
mov
shr
fisttps
incb
mov
das
data16
mov
shrb
mov
insb
and
xlat
inc
rep
cmp
repnz
test
dec
mov
adc
mov
push
cmp
mov
cmp
test
pop
push
fidivs
and
out
out
sahf
pop
sbb
pop
adc
stc
iret
aaa
clc
sbb
aad
ljmp
pushf
lods
call
out
xchg
cwtl
dec
xchg
aas
push
loop
mov
add
dec
xor
add
sbb
cltd
mov
aas
test
sub
loope
dec
cld
add
xchg
in
dec
jne
xchg
imul
and
shll
in
andb
push
out
mov
add
add
inc
repnz
mov
xor
pop
add
cld
imul
or
roll
pop
lds
inc
fstpl
ret
or
lds
dec
sub
adc
mov
mov
std
bound
cmp
mov
in
lahf
lods
adcl
popf
out
xchg
jecxz
or
xor
mov
jp
idivb
push
ja
jnp
pop
sarl
mov
and
push
mov
cmp
xchg
aaa
jmp
jno
cmc
jae
xchg
rclb
ljmp
mov
das
addr16
stos
add
imul
notl
imul
mov
test
inc
clc
xorl
mov
popf
or
lret
inc
push
xor
das
xchg
jmp
dec
sbb
add
pop
data16
xor
mov
jno
jo
push
mov
gs
leave
jb
and
sarb
add
mov
bnd
test
sbb
adc
aaa
mov
mov
jecxz
xchg
int3
outsl
xor
mov
push
ret
jb
xor
insb
rcll
popf
hlt
and
ljmp
inc
leave
inc
pop
push
fisubs
sub
lods
enter
daa
sub
xchg
mov
jl
mov
push
ds
add
movsl
jo
or
jl
push
push
mov
out
push
test
xchg
xor
into
lcall
mov
pop
ffreep
mov
loope
gs
xor
or
outsb
and
inc
rcrb
mov
subb
negl
pop
dec
mov
pop
cmp
ja
push
fs
int
pop
cwtl
sub
mov
lcall
dec
fcoml
fstpl
xchg
loope
sahf
mov
cmp
xlat
mov
add
lock
test
adc
sti
ss
inc
and
ljmp
lret
test
dec
sahf
or
mov
into
fwait
pusha
popf
cmc
repz
adc
loop
addl
sub
xchg
fs
cmpsb
add
data16
push
pop
rorl
test
adc
cmp
jnp
sti
mov
inc
xchg
gs
sbb
sbbb
cmpsl
adc
or
xchg
adc
in
popf
repz
loopne
lret
mov
sbb
push
in
into
mov
in
mov
push
test
jl
mov
inc
cmp
aad
ret
divb
pop
dec
icebp
push
mov
sub
jecxz
fcmove
xor
inc
lret
jp
call
adc
inc
pop
cmp
jmp
pushf
and
std
int3
negl
push
out
inc
sti
adcl
sbb
jb
sub
js
mov
xchg
sti
repnz
fs
add
icebp
mov
jb
mov
outsb
subl
xchg
dec
mov
xor
das
inc
dec
push
mov
ja
mov
rcl
ret
ficoms
cmp
pop
fbld
and
in
cmpsl
sub
push
mov
jmp
shlb
test
hlt
aaa
inc
mov
jne
ret
shlb
mov
in
mov
mov
leave
lea
in
frstor
int
clc
pop
pop
mov
dec
test
not
inc
popa
dec
cld
sub
ret
pop
out
clc
das
jns
xchg
push
push
lea
adc
cmp
add
loopne
lea
push
test
loop
movb
push
jecxz
sbb
rcl
int3
int3
jae
sub
jle
test
fisubrs
gs
jmp
jecxz
xor
or
mov
dec
mov
sarl
int
aaa
pop
enter
cs
lds
mov
mov
mov
dec
or
mov
mov
loope
out
sbb
push
bound
xchg
idivl
arpl
in
cmp
andl
insb
sub
pop
cltd
jns
mov
sarl
imulb
mov
jmp
xchg
jnp
imul
xchg
push
adc
pop
xchg
and
add
scas
jae
js
push
lods
sbb
mov
outsb
ljmp
stos
jae
push
and
jecxz
insb
or
imul
adc
mov
push
iret
mov
inc
jmp
inc
add
sbb
mov
ljmp
cli
dec
inc
aam
jne
xchg
dec
adcb
stc
or
dec
ficoms
or
ds
xchg
rorb
jmp
leave
jmp
scas
and
dec
adc
shrl
xlat
pop
xchg
sbb
outsl
or
jmp
int3
pop
dec
int
cli
rorl
and
cmp
add
scas
xor
hlt
and
aas
cmp
cmp
movsb
mov
aam
sbb
sub
adc
xchg
enter
daa
sub
push
cmp
shrl
rcll
adc
sbb
movsl
ja
jmp
pop
mov
lahf
test
jns
pusha
and
push
dec
ljmp
jge
jnp
xor
mov
call
push
cli
stos
push
and
loope
fdivl
sub
in
adc
mov
adc
jp
fmuls
inc
fistl
add
mov
and
ss
push
lret
out
cmp
adc
add
push
lcall
mov
add
sbb
pop
pusha
sahf
pop
and
test
inc
xor
inc
jg
decb
mov
and
xorl
sti
imul
mov
inc
lret
pop
sarl
mov
lods
into
jle
mov
xor
pop
outsl
mov
loop
in
sar
cmp
popl
faddl
ljmp
lods
in
call
ret
out
mov
cli
pop
jns
xor
mov
pop
xchg
xchg
gs
or
loopne
in
negb
into
adc
push
adc
sahf
inc
rep
inc
lcall
mov
cmp
or
xchg
mov
sbb
jmp
mov
fstpt
test
inc
daa
movsb
ret
xchg
cmpsb
les
sti
daa
jecxz
cmp
xor
pop
lea
imul
pop
out
call
pushfw
lret
ret
aad
sub
scas
pop
mov
decl
aas
mov
and
dec
and
out
and
dec
or
std
stos
leave
es
hlt
mov
mov
mov
push
lret
and
mov
dec
mov
jb
lock
add
and
or
and
shr
push
ret
insl
stc
dec
es
dec
insl
pop
mov
cmp
push
mov
rorb
mov
jg
movsb
and
fs
sub
xchg
les
shl
das
fisubrl
mov
mov
ficoms
fldl
nop
clc
xchg
jmp
xchg
cmp
popa
pusha
add
sbb
pop
mov
push
push
push
sub
add
cltd
sub
xor
mov
push
lret
insb
xorb
lods
test
rcr
sbb
call
mov
fcomp
outsb
push
sub
cwtl
add
cmpb
jg
lock
fildl
and
sbb
aas
ret
je
iret
pop
sbbl
dec
inc
push
and
pop
sub
in
mov
push
dec
lock
fdivs
sti
mov
jns
mov
in
sub
xor
xchg
sub
pop
adc
addr16
jb
cmp
aad
push
ret
cmp
jle
inc
jo
pushf
or
jmp
loop
jnp
push
xchg
mov
pop
jmp
pop
xchg
data16
sahf
adcb
cmp
popf
xor
or
sbb
stos
out
dec
and
mov
rcrb
imul
push
scas
push
dec
test
arpl
iret
decl
ret
lahf
pop
fldt
add
inc
mov
fisttpll
rolb
push
fiaddl
fsts
and
xor
fdivp
mov
xchg
cmpsb
dec
lea
or
leave
pusha
or
hlt
push
pop
aas
jbe
loopne
jge
icebp
les
push
imull
or
mov
int3
inc
cmp
mov
mov
dec
xor
and
scas
adc
and
mov
movsb
pop
jns
inc
xor
push
push
in
cli
mov
daa
daa
sub
or
aam
jl
push
jecxz
rcrb
ret
movsl
jle
movsb
and
and
pop
xchg
movsb
test
sbb
xor
inc
jnp
inc
rolb
pop
hlt
mov
xor
pop
pop
mov
push
add
mov
or
sbb
call
and
push
jle
aaa
stos
mov
sbb
or
add
test
and
jle
push
cmpsb
mov
lahf
sub
jg
cwtl
pop
adc
leave
push
dec
mov
fsubrl
xchg
imul
or
jne
mov
mov
mov
and
sbb
add
loope
and
fsubs
xchg
testl
rcll
mov
xchg
mov
into
popa
mov
cmc
xorl
mov
aas
int3
loop
mov
xchg
fucomip
sbb
adc
xor
mov
and
out
inc
pop
cli
push
xchg
cmp
cltd
lock
sbb
ret
mov
add
jae
xchg
imul
movsb
aaa
repz
ljmp
lods
cmpsb
cmp
cmpsl
inc
xlat
dec
mov
or
in
test
push
aad
and
nop
lods
pop
xchg
dec
scas
or
inc
cmp
es
out
pusha
les
push
cmp
mov
jmp
lea
add
adc
pop
mov
out
pushf
jbe
fistpl
pop
pop
inc
push
inc
inc
or
lea
cli
push
aas
push
int3
fdivs
push
or
scas
push
je
mov
shll
push
and
push
sarb
scas
dec
jl
pop
mov
mov
faddl
cmp
mov
lods
mov
inc
or
iret
dec
scas
das
add
xchg
mov
in
shll
cmp
pusha
js
insl
out
aaa
ss
jne
pop
cmpsl
sub
dec
mov
xchg
mov
call
mov
add
mov
mov
int3
rol
add
scas
aam
xor
push
mov
jae
clc
into
arpl
jl
cs
test
adc
xchg
adc
pop
push
inc
sbb
addr16
add
adc
test
stos
js
push
mov
inc
dec
ror
push
test
movsl
lods
xchg
jno
scas
pop
xchg
sarl
aaa
pop
and
cs
iret
push
mov
mov
add
sarl
or
jo
xchg
jmp
es
mov
ds
lods
add
dec
xor
sti
or
xor
fdivl
das
jne
repz
mov
cwtl
and
fidivl
bound
int
jns
mov
in
push
add
jle
and
or
mov
add
adc
mov
jne
jle
lret
sti
fucom
mov
repnz
xchg
pop
and
lock
mov
rol
leave
jae
pop
notb
xor
pop
popf
pop
or
std
dec
rcll
mov
jbe
pop
stos
push
insb
cmp
daa
scas
mov
jecxz
inc
testl
int
ret
std
pop
adc
in
inc
sbb
push
arpl
stos
ss
mov
lcall
rorb
shrl
lock
int3
pusha
pop
pop
repz
ficoms
adc
rol
lcall
mov
shl
mov
lret
sub
jbe
popa
lods
jge
insb
pop
sbb
gs
or
push
add
add
push
insb
addr16
xor
jge
test
and
stos
repnz
mov
mov
cmc
repnz
and
in
loope
enter
daa
sub
aaa
cmp
xorl
outsl
jl
out
sarl
in
ds
test
dec
gs
ret
push
xor
push
in
mov
add
and
js
pop
inc
pop
pushf
clc
jl
push
popf
jecxz
xorb
sub
stc
lods
sub
popa
outsb
lock
adc
xor
mov
sbb
pusha
add
cmpsl
test
pop
outsb
aas
push
pop
cmc
lock
addr16
cli
cmp
xchg
out
lcall
adc
push
sub
sbb
xchg
fwait
sahf
mov
pusha
inc
subb
pop
jg
icebp
mov
mov
insb
mov
shlb
adc
cmp
les
jle
fcomps
adc
testl
xor
mov
lret
adc
or
int3
jmp
xor
push
outsl
dec
and
jb
cs
dec
sub
movsl
mov
bound
lods
mov
cli
lods
out
push
fdivr
test
xor
sub
sti
int3
movsb
pusha
fdiv
mov
push
mov
push
sub
pop
sub
adc
aas
imul
xor
inc
push
rcll
pushf
in
cmp
mov
mov
jle
call
leave
and
dec
subb
imul
enter
sbb
dec
and
fldcw
xchg
mul
rol
cmp
lea
repnz
call
xchg
or
pop
push
and
adc
and
mov
or
and
aas
testb
dec
adc
hlt
roll
jmp
cwtl
push
xor
sbb
call
xorl
jmp
daa
int
pop
mov
mov
jb
lock
pop
das
loop
in
mov
pushf
data16
sbb
es
push
insl
aad
lods
dec
jo
mov
repnz
cld
decb
mov
lds
cmpsl
mov
sarb
cld
sub
out
aam
and
mov
rorl
push
lds
clc
or
xchg
mov
or
popa
mov
icebp
stos
in
test
xchg
pop
daa
movsl
push
push
cltd
movsb
shufps
add
pop
cltd
fwait
dec
jb
add
mov
pop
push
push
test
xor
xchg
popa
cli
sbb
leave
rcl
repnz
pop
sub
inc
fmull
add
mov
mov
xor
std
or
jecxz
xor
leave
xchg
mov
stc
andl
lods
or
or
push
jmp
dec
fwait
mov
jne
ds
adc
mov
cmp
jns
dec
xchg
in
add
orl
out
imul
das
mov
es
insb
jp
sub
mov
cmp
mov
and
and
movsb
out
in
ja
pusha
and
pusha
xchg
das
mov
mov
jae
mov
push
not
repnz
jg
sarb
sub
aam
int3
int3
mov
je
insb
cmpsb
sbbb
push
dec
scas
sbb
jmp
adc
add
iret
mov
jg
pop
dec
sub
inc
and
mov
dec
xor
inc
mov
inc
adc
mov
xchg
inc
push
scas
lods
fisubrl
outsl
or
shrb
fidivrs
xchg
mov
rorl
mov
fsubl
nop
repnz
insb
leave
dec
jge
push
sub
mov
push
fstpt
lret
enter
sti
stc
into
or
lock
mov
int3
sbb
pusha
push
dec
mul
xor
fadds
scas
shll
add
shl
cmp
popf
mov
inc
push
or
cmpsb
movsb
sti
clc
in
enter
insl
xchg
cmc
daa
sub
int3
jno
inc
cmp
cmp
outsl
inc
ds
in
movsl
mov
fs
fsubl
push
add
ljmp
cmp
xor
movsl
dec
pop
test
insl
lret
pop
fstpt
and
cltd
sbb
loope
clc
sub
sub
jle
sti
sub
cmc
mov
cmpb
sbb
pop
es
sbb
imul
insl
mov
sub
imul
cmp
std
insl
ret
push
mov
dec
push
out
inc
mov
test
scas
addb
jg
jno
mov
xchg
cli
mov
cmc
mov
mov
jbe
pusha
and
cmp
sbb
lret
lret
roll
or
fcomps
bswap
out
adc
mul
add
sbb
xor
mov
xchg
out
dec
in
sti
lods
mov
movsb
out
jmp
cmpsb
xor
stos
pop
cmp
pop
sbb
jnp
fwait
call
gs
xor
out
fstps
adcl
jecxz
fists
lods
loop
adc
or
sbb
push
or
xlat
lret
sub
aas
loop
pop
mov
jmp
mov
sbb
mov
nop
bound
dec
insl
sbb
pusha
lods
fs
jnp
sub
jecxz
repnz
cmp
mov
jae
in
adc
sub
push
sub
repz
cmc
pushf
int3
fstpt
and
inc
pop
lret
ljmp
jb
dec
sub
je
xchg
pop
rcl
inc
stos
notb
cmp
mov
and
mov
mov
flds
adc
dec
lret
fildll
mov
cmp
test
das
rcl
mov
push
jle
and
xor
sbb
es
insl
mov
out
and
and
xor
cld
sub
cmpsl
mov
call
mov
mov
icebp
mov
add
shl
aam
fs
mov
mov
push
sub
push
clc
inc
adc
cli
shll
popa
movsl
clc
je
push
xchg
sbb
test
lcall
cmp
add
xchg
or
jo
xchg
in
dec
mov
push
mov
push
jmp
lret
repnz
xlat
xor
add
add
rorl
push
lcall
xor
sub
or
jbe
xchg
xchg
push
mov
mov
ja
jo
dec
sbb
inc
rclb
inc
mov
fldenv
mov
sahf
mov
bound
cli
jns
lea
jmp
sbb
jp
es
sub
dec
icebp
pushf
mov
jp
cli
sub
mov
roll
jle
inc
shl
mov
out
pusha
mov
test
xchg
add
push
xchg
push
cmpsl
lret
push
mov
mov
mov
push
jp
aas
fbstp
mov
cwtl
insb
adc
imul
les
dec
adc
shlb
sbb
jmp
and
inc
das
test
arpl
pop
inc
mov
iret
fisubrl
pushf
jg
rclb
cli
xchg
sahf
mull
sbb
sbb
push
or
fucomp
test
shl
add
add
ror
lds
cmp
sbb
jae
sbbb
and
aaa
mov
sub
add
repz
push
add
dec
mov
mov
xor
xor
xor
aam
mov
sub
push
push
lcall
mov
cmpsb
daa
and
in
scas
xor
daa
sub
cmpb
jp
jno
scas
and
das
cmp
mov
lds
subl
add
gs
jnp
push
xor
mov
sbb
push
das
pop
sbb
xor
out
loope
and
sub
mov
sub
and
outsb
mov
cmpsb
adc
out
inc
push
rcll
outsb
clc
or
xchg
out
and
push
pusha
out
cmpsl
int
lea
lock
pop
nop
incb
in
xchg
push
push
jg
fsubrl
cmp
pop
popa
popa
sbbb
jg
hlt
mov
mov
push
mov
sub
adc
pop
cmp
xchg
mov
testl
inc
mov
mov
or
inc
adc
cmc
test
pop
outsl
or
xlat
loop
fwait
mov
fs
xchg
and
push
sbb
mov
bound
cli
jmp
dec
xor
and
cmp
jl
sti
sub
cmp
and
gs
loopne,pn
mov
pop
push
jge
imul
lods
div
loopne
rclb
sub
cmp
push
fldcw
stc
or
push
adc
jmp
test
aad
pushf
nop
nop
cmp
movsb
gs
jae
mov
fstcw
jecxz
bound
movb
into
or
call
pop
mov
dec
rcrb
cmp
rolb
aad
inc
add
push
sbb
sbb
je
jg
shll
add
loopne
std
inc
inc
clc
cwtl
loopne
cli
mov
adc
mov
movsb
in
mov
es
lret
insl
pop
fimull
test
mov
loopne
jl
mov
jp
mov
lcall
jmp
pushf
dec
dec
push
xchg
cmpsl
daa
xchg
mov
sbb
or
mov
or
and
rclb
jne
inc
mov
aam
sti
pop
mov
fsts
jmp
std
fucom
sbb
xchg
cmp
ljmp
mov
stos
ret
inc
xchg
out
out
out
xchg
jmp
add
add
test
test
or
mov
popa
cmc
dec
or
cmp
iret
hlt
push
jecxz
sarl
pop
pop
adcb
push
mov
sub
in
daa
xor
sti
xlat
xchg
xor
add
mov
xchg
cli
adc
adc
jge
outsl
mov
testb
jbe
addr16
or
adc
mov
jne
decl
out
ja
mov
loop
jns,pn
jb
in
sub
subl
out
jbe
sub
inc
mov
popf
jp
jle
mov
sub
mov
subb
jle
sarl
pusha
push
inc
mov
testl
jmp
xor
jae
fisttpll
push
jl
mov
scas
cwtl
popa
push
test
movsl
sub
mov
div
imul
movsl
push
sbb
adc
iret
jnp
retw
loope
mov
imul
or
mov
xchg
push
dec
add
ficoml
arpl
cmc
mov
cmp
mov
adc
loope
stc
rclb
mov
repnz
shll
cmp
out
xchg
aad
push
lret
jbe
popf
jge,pt
xor
sbb
scas
js
jns
jge
sub
aam
insl
pop
repnz
icebp
inc
out
and
lock
jo
jnp
scas
cli
icebp
and
lock
adc
inc
iret
addr16
jno
lods
cmpsb
stos
shl
xchg
jg
enter
daa
daa
xchg
inc
cmp
sub
jl
scas
push
cmp
lea
push
or
lahf
pop
and
mov
xor
in
inc
test
lds
dec
dec
cmp
sub
pop
pop
aam
push
fwait
or
dec
push
sub
dec
jo
mov
fisubl
lea
rol
sub
andb
and
popf
add
mov
int
ja
sub
adc
bswap
cmp
stos
mov
fcoml
xchg
lods
sub
test
ja
cmpb
jg
jl
mov
inc
lcall
pop
adc
mov
sbb
dec
call
insl
lret
sub
mov
xchg
mov
imul
into
in
lret
in
cmc
popf
out
inc
xor
add
out
loop
or
stc
jae
mov
add
popa
ret
out
mov
out
xor
mov
pop
sti
fldenv
xor
gs
sbb
pop
xchg
push
adc
test
adc
add
repz
push
lret
fsubp
sbb
int3
mov
mov
mov
xor
xor
cs
frstor
mov
dec
sub
psubusw
les
les
repnz
out
push
sbb
lea
sbb
push
or
pop
insl
ret
scas
adc
push
fistl
cmp
rol
sub
inc
and
js
rcl
shll
sbb
je
sar
jno
loope
popf
negl
std
in
fsubrl
cwtl
fwait
sub
pop
out
in
and
cmpl
dec
je
fcompl
mov
pop
jno
cmp
push
mov
rcrl
ret
cmp
scas
insl
mov
push
dec
popa
dec
mov
mov
push
icebp
repz
cld
jg
xor
cs
fsubs
imul
pop
das
lret
adc
sub
out
mov
inc
push
scas
mov
and
mov
insb
mov
popa
rorl
lods
in
lds
mov
dec
out
dec
rolb
lcall
jecxz
push
add
sbb
mov
cmp
outsl
loope
test
push
jmp
sbb
repnz
pop
pop
sub
xchg
aam
pop
mov
mov
lcall
adc
or
int
insl
int
xchg
and
aas
add
mov
insb
pop
sub
fbstp
jmp
dec
cld
mov
neg
or
mov
mov
rcll
xorl
out
push
and
jne
mov
in
mov
xor
sub
imull
inc
adc
inc
jp
mov
mov
aam
mov
xor
pop
jle
pop
shl
mov
xor
fists
adc
mov
int3
repnz
xchg
dec
shll
push
sbb
aas
sahf
negb
jmp
or
mov
outsl
adc
test
mov
adc
incb
out
testl
inc
lds
or
daa
xor
hlt
or
xchg
dec
je
sbb
pop
jle
scas
add
fisubs
sub
push
mov
xor
in
dec
leave
mov
data16
fistpll
notb
sbb
jbe
out
sarl
jg,pt
stc
int
aaa
cmp
sub
sbb
jg
add
jno
fcoml
dec
xchg
es
xor
jmp
in
dec
and
mov
sbb
ss
inc
add
cmpsb
sub
mov
enter
daa
es
mov
and
hlt
jmp
cmp
dec
inc
movsl
mov
mov
popa
push
jge
std
test
adc
xor
push
mov
pop
push
lock
pop
cwtl
and
adc
ficomps
cld
sub
and
adc
pushf
xchg
adc
pop
xorb
add
ja
and
mov
in
sub
prefetch
mov
aaa
push
add
add
sahf
sub
adc
xchg
adc
jg
pop
dec
mov
imul
sbbl
xlat
lret
outsb
loope
xor
lret
cmp
pop
lods
testl
bnd
dec
lds
shlb
imul
mov
loop
stos
cmc
stc
sub
dec
add
data16
dec
js
push
mov
mov
ret
cli
push
push
mov
cmp
jecxz
sti
mov
je
push
fiaddl
pop
cmpsb
pop
xor
xchg
jecxz
imul
lods
or
jle
sbb
mov
cmp
hlt
cmp
xchg
sub
add
inc
sbb
in
pushf
pop
fucomip
add
and
aad
jecxz
nop
repz
leave
push
inc
cltd
mov
les
mov
std
push
ja
inc
stos
icebp
lea
enter
xchg
pop
and
xor
clc
jmp
pop
fildl
in
jne
sbb
sbb
aas
jb
adc
dec
movsl
dec
out
push
sti
je
push
sbb
mul
subb
mov
mov
push
push
mov
push
movsb
dec
rorb
dec
mov
iret
mov
and
xchg
pop
out
pop
test
mov
js
bound
push
ret
movl
adc
inc
dec
pop
sarl
mov
lret
cld
stos
fwait
mov
mov
and
jge
pop
dec
xlat
call
sub
and
mov
out
fcoml
hlt
dec
fnsave
test
pop
xchg
mov
int3
ljmp
sbb
cmp
lods
add
ja
out
push
mov
add
push
test
lock
mov
addr16
dec
mov
repnz
xchg
cltd
sbb
enter
fsubl
repnz
push
xor
add
and
xor
push
and
in
hlt
shlb
jbe
xchg
je
and
pop
insb
push
pop
in
les
outsl
adc
aam
inc
xchg
pop
scas
or
and
mov
mov
cmpxchg
mov
dec
bound
out
mov
sub
in
mov
push
out
push
in
lret
sarb
cmp
cmpl
push
mov
movsb
cmp
cmp
jp
dec
in
add
pusha
lea
cmp
xor
sbb
int
leave
mov
out
add
popf
sbb
push
mov
daa
cltd
stos
cwtl
dec
cmp
insb
push
mov
das
scas
cmpsb
cmpb
test
cmp
cmp
cs
and
fcompl
inc
enter
push
int3
lea
daa
pop
inc
dec
imul
mov
loope
pop
fisubs
push
faddp
mov
push
rorb
mov
std
cmp
leave
sub
mov
sub
xchg
xorl
jge
sub
jns
divl
pandn
add
cmp
dec
add
loopne
lcall
scas
dec
in
and
sbb
movsb
pop
repnz
cli
lret
cmpsb
mov
in
lds
pop
jo
daa
and
cmpsl
les
int
jl
push
fnstsw
in
inc
es
iret
movsl
test
push
and
lahf
pop
aas
push
push
push
aas
jns
and
xor
push
pop
sarb
js
mov
xlat
cli
dec
push
push
mov
sub
clc
sub
pusha
dec
adc
ja
aas
jno
call
sbb
stos
movsb
add
cmp
out
push
imul
popa
mov
pop
or
push
sahf
push
pop
mov
lods
xor
sahf
iret
int
test
rorb
jg
xchg
sbb
test
mov
adc
or
ret
test
movsb
dec
shl
nop
mov
std
inc
into
mov
popf
cmc
sub
outsl
movsl
shl
loop
addb
loope
inc
fs
push
push
add
and
les
mov
imul
cmp
aam
sti
aaa
imul
decb
test
loopne
and
lds
pop
imul
int
xchg
jecxz
mov
cmp
cli
xlat
in
sub
out
pop
pop
dec
in
pop
xchg
stos
jmp
movl
nop
into
mov
dec
jmp
in
flds
mov
push
aam
jecxz
dec
ss
dec
fwait
pop
lea
call
or
inc
pop
roll
jbe
dec
lock
pop
sbb
lret
push
push
inc
push
sub
adc
daa
mov
dec
push
cmc
je
cmp
rorl
into
cmpsl
mulb
adcb
mov
leave
mov
cmp
or
jg
cbtw
push
dec
mov
imul
std
inc
add
icebp
xor
das
cmp
lds
mov
lahf
iret
movsl
ret
push
lds
insl
pop
add
shlb
icebp
ss
mov
roll
ret
sbb
je
jge
sub
movsb
mov
insl
call
sub
popf
xor
aam
mov
mov
fists
xor
adc
pop
popf
clc
xor
xchg
notb
lret
ljmp
adc
pop
shr
adc
lods
xchg
mov
aaa
jp
mov
mov
addb
addb
inc
push
test
mov
nop
sbb
rorl
mov
lods
push
mov
add
push
xor
test
fs
aaa
xor
je
xchg
ret
jp
mov
add
mov
mov
ja
dec
in
sub
out
or
imul
adc
and
nop
push
mov
pushf
int3
out
adc
adc
pop
adc
clc
add
and
jae
sbb
pushf
sub
ss
addr16
push
jp
aas
pop
mov
xchg
mov
jnp
data16
popf
ds
in
pusha
mull
dec
inc
fists
xchg
dec
mov
cld
xchg
xchg
leave
mov
push
lds
out
pop
sbb
push
push
mov
out
enter
push
imul
or
aam
cmp
enter
inc
xor
pop
iret
inc
pop
mov
movb
stos
or
sbb
popa
jb
sub
call
into
jbe
pop
or
in
lds
push
shlb
mov
push
mov
ss
jne
jp
mov
leave
jbe
in
mov
ltr
sbb
pop
aaa
mov
ljmp
data16
mov
jg
jb
orb
or
xor
lahf
out
scas
sub
jnp
mov
push
data16
in
roll
popa
pop
cmpsb
xor
in
dec
mov
jp
and
dec
cmp
lret
imul
cmp
mov
movsl
scas
das
ds
pop
sub
and
test
cmpsl
mov
call
pop
insb
sub
js
enter
push
aas
push
in
xor
or
and
or
aas
outsb
inc
xchg
fistl
push
jl
rclb
cli
sbb
rcrb
dec
fldln2
add
push
push
and
push
pop
int
mov
fdiv
lds
mov
mov
sub
fcompl
jne
cmp
int3
test
testb
sub
mov
push
pusha
mov
rolb
sub
mov
jmp
insl
ss
or
jge
mov
test
pop
or
shll
mov
sbb
into
xchg
pop
mov
xor
mov
loop
mov
cwtl
pop
xor
adc
data16
repnz
and
and
out
xchg
sub
mov
xchg
xor
mov
sti
out
xchg
scas
adc
xchg
sub
cmc
sar
in
xchg
adc
sbb
imul
icebp
dec
xchg
cmpsb
adc
sbb
jge
inc
xlat
add
lds
mov
jb
inc
jmp
mov
sahf
aad
mov
dec
dec
inc
inc
mov
pop
fwait
les
push
jecxz
lret
dec
dec
pushl
fcmovb
xchg
mov
stos
adc
xchg
inc
imul
dec
aas
mov
clc
jb
dec
push
dec
das
rcrl
mov
std
loop
mov
int3
and
mov
mov
jp
std
cld
fwait
dec
test
or
mulb
mov
rorb
das
sbb
or
out
inc
and
mov
ret
in
insl
es
aad
insl
aas
lock
dec
push
movsl
jg
and
lahf
icebp
js
mov
mov
xchg
and
mov
mov
aas
rorb
jecxz
mov
xor
ret
and
jg
ja
imul
xchg
xor
jns
popa
sbb
lods
sub
aas
mov
jae
pop
xchg
add
movb
add
rcrl
inc
and
mov
insl
and
dec
movsb
lret
inc
test
test
xchg
dec
push
sbb
or
pop
jb,pn
fwait
push
aaa
sbbl
cmp
leave
add
mov
ja
lods
xor
mov
fcmovnbe
imul
ljmp
xchg
jg
lods
sbb
pop
and
ja
add
dec
fsubs
dec
or
test
in
in
dec
or
jne
xor
out
repz
push
je
mov
lods
insb
rolb
mov
dec
sub
xor
lahf
jp
xchg
xorl
ds
dec
jle
lahf
xor
aam
sti
pusha
ret
js
fbstp
test
mov
call
jae
pop
jnp
mov
popf
imul
push
movsl
lea
stos
jle
fs
push
iret
insb
sub
fldt
scas
insb
fbld
push
aaa
out
adc
dec
mov
test
xchg
pop
xchg
xchg
inc
mov
mov
jl
or
cwtl
push
in
fists
xchg
push
mov
mov
mov
fimuls
and
jle
fdivrl
mov
js
hlt
shlb
push
sbb
jge
mov
sbb
movsl
or
jne
cmc
test
int3
popf
test
push
mov
sti
nop
jo
faddl
or
sub
cmp
jmp
inc
lods
or
cmpsb
mov
in
in
xor
push
daa
and
clc
jno
jmp
jl
dec
pop
cmp
fnstcw
sub
movsl
mov
andb
dec
push
lahf
fwait
imul
push
jb
xor
add
js
xchg
add
push
xor
push
jno
loope
pusha
leave
sub
mull
ja
or
mov
adc
sub
sub
subl
mov
outsl
into
loope
xlat
add
sub
loop
or
in
lcall
mov
add
sahf
adc
mov
cld
jg
ret
sbb
and
xchg
aam
mov
dec
lock
and
stc
idivb
cmp
testl
rorl
jp
js
mov
sbb
and
cmc
mov
int
outsl
arpl
ret
loop
movl
fs
aas
add
fsubs
test
or
sub
scas
add
out
inc
xor
ljmp
cmp
xor
sti
xchg
fidivrl
shr
shll
pop
mul
nop
jne
pop
add
adc
add
imul
pop
push
xchg
imul
ja
mov
pop
pop
sub
ss
mov
in
fnstsw
jmp
jae
cs
scas
sub
pop
cmp
nop
test
push
dec
cmpsl
sahf
mov
cmp
fldcw
push
and
sub
popa
rcr
sbb
push
jne
or
sub
sbb
adc
push
xchg
fcmovnbe
shrb
inc
inc
jmp
inc
mov
jnp
int
push
dec
push
stos
xor
or
imulb
daa
add
mov
xchg
or
adcl
add
mov
mov
adc
sti
sahf
mov
popf
orb
xchg
mov
je
cmp
js
imul
in
jne
and
bound
dec
dec
int3
cld
sub
or
cmp
pop
stos
push
pop
rcrb
dec
sub
flds
push
mov
lods
dec
clc
cmpsb
cmc
and
je
lea
stos
mov
stos
outsb
call
cld
xchg
dec
stos
sbb
maxps
sub
imull
roll
repnz
xchg
mov
or
mov
xchg
inc
incb
inc
das
sbb
xor
test
fwait
jg
xchg
out
dec
add
jae
dec
call
xor
xor
dec
pop
or
fbstp
push
xchg
popa
jns
mov
cwtl
jne
push
in
pop
push
jmp
ja
adc
dec
lret
xchg
loopne
pop
gs
jb
mov
dec
jmp
pushl
cmp
out
rorb
ds
fld
jns
xchg
aaa
dec
repnz
cmp
daa
sub
sub
jge
subb
jp
lcall
push
push
jnp
or
cmc
in
inc
lods
pusha
pop
mov
fists
mov
jmp
sub
and
dec
mov
popf
nop
or
mov
in
subl
insb
insb
xchg
cltd
cmp
scas
iret
sti
cmc
push
jle
iret
adc
je
iret
push
jo
ret
out
pop
lret
inc
jno
lods
arpl
push
adc
adc
dec
inc
lret
ficoml
sbb
inc
pop
imul
fisubrs
mov
rcrb
stc
repnz
leave
pop
mov
or
inc
push
push
dec
xchg
jbe
mov
adc
in
inc
aaa
xor
adc
call
ja
int3
mov
push
push
pop
add
test
arpl
out
scas
ljmp
cmp
cmc
pop
movsb
cli
sbb
inc
cmp
cmpsb
cmp
jg
dec
out
daa
and
enter
sub
xor
jl
cmpb
stos
ds
loopne
movsl
mov
push
addr16
mov
push
out
test
cmp
and
sbb
push
pop
mov
stc
hlt
pop
xchg
xchg
cltd
push
test
loope
aas
pop
sub
mov
sub
sub
or
and
or
aas
mov
addb
mov
add
xchg
push
jb
ds
sub
and
sbbl
fldt
fsubrl
sbb
sahf
mov
les
mov
jg
pop
jecxz
imul
or
sbb
adc
push
add
xrelease
lret
fadd
movsl
jnp
mov
pop
or
push
xor
imul
push
nop
lcall
sbb
jp
mov
repz
js
add
cli
sbb
xlat
stos
cmp
lahf
xchg
sti
inc
repnz
hlt
mov
test
sub
or
mov
adc
push
lret
imul
xlat
xchg
sub
cmc
sbb
repz
daa
xlat
sbbl
stos
pop
or
dec
sub
inc
cs
ds
pop
adc
inc
in
dec
fxam
clc
xchg
les
sbb
cmp
lea
mov
call
mov
cmpsb
adc
pushf
jns
arpl
add
cmp
dec
aad
cmpsl
into
int
out
std
dec
jb
and
lret
int3
pop
je
in
ljmp
aaa
xchg
std
xor
cwtl
inc
add
mov
add
mov
dec
jle
lret
pop
pop
mov
sub
push
adc
xor
das
fisubl
push
mov
inc
clc
xchg
ret
add
loop
or
arpl
mov
lret
icebp
mov
pop
mov
fldl
inc
dec
out
jb
in
pop
lret
shlb
scas
lret
sub
push
into
push
jge
stc
jne
clc
loope
jae
mov
enter
test
sbb
lods
add
jae
pop
push
mov
cmp
mov
movsbl
sub
cltd
push
lcall
addl
xchg
movq
sbb
repz
push
or
mov
xor
mov
mov
add
adc
inc
add
arpl
mov
adc
pop
rorl
ja
cmpsb
hlt
dec
mov
pop
outsl
or
xor
mov
push
push
dec
into
mov
jne
movsb
pop
mov
lods
fsubr
mov
test
in
jns
inc
leave
in
test
out
ja
sub
daa
lea
aaa
push
cld
mov
dec
test
xchg
push
ds
loop
jp
stc
or
fbstp
rclb
mov
jae
mov
push
push
pop
mov
adc
push
push
and
and
sub
add
sub
xlat
out
scas
xor
push
lds
cmpsb
iret
mov
pop
ret
popf
pop
add
out
inc
jl
add
adc
inc
aam
cmp
mov
mov
fiaddl
jbe
jmp
iret
pop
lcall
lds
fcmovb
mov
mov
dec
ja
leave
push
mov
adcl
push
and
shl
sbb
das
xchg
cwtl
add
mov
int3
jae
sbb
dec
outsb
push
addr16
inc
jo
add
ja
pop
clc
mov
mov
cmp
sub
cmpsb
mov
add
inc
mov
daa
and
xchg
cmp
test
adc
sbb
test
mov
movsl
les
fsubs
shrb
fldenv
or
or
sub
add
ficoms
dec
pop
loope
and
out
xchg
pop
shll
push
xchg
insb
loope
inc
push
sub
inc
bound
push
xor
aaa
adc
jecxz
lret
subb
out
cmp
and
xor
push
jne
dec
int
mov
or
lcall
jbe
pop
push
mov
pushl
sahf
pop
sub
sbbb
jno
add
ss
mov
ss
ljmp
dec
jecxz
fsubrs
popa
jp
aaa
je
sarl
mov
or
sti
add
into
aas
xchg
mov
or
fcmove
loop
fisubs
mov
mov
aad
std
mov
jmp
movsb
test
out
sub
mov
xor
dec
lods
cmp
loope
sti
repz
pop
jle
gs
mov
sbb
adc
xor
repz
xchg
xchg
out
push
sbb
dec
and
cmp
mov
xlat
ret
sub
xor
mov
mov
jmp
cs
mov
nop
cmp
dec
gs
inc
clc
pop
xchg
fstps
pop
les
jecxz
push
jecxz
lea
lcall
lahf
std
int3
adc
mov
aaa
hlt
pop
movsb
jg
inc
dec
push
xchg
sub
push
jb
pop
cltd
dec
inc
xchg
ret
and
call
std
xlat
and
cwtl
std
push
jecxz
sar
lock
push
pop
dec
imul
xchg
mov
arpl
pop
pop
inc
das
mov
pop
mov
or
lret
lods
mov
xchg
jg
es
fsubrs
or
dec
inc
ss
cmpsl
and
idivl
std
sbb
mov
add
and
or
push
push
rolb
rorb
dec
sbb
push
inc
loope
and
xchg
repnz
call
popa
pop
mov
lods
outsb
ds
xchg
xchg
fimull
aaa
push
shr
pushf
nopl
sub
sbb
push
test
call
xchg
dec
fnstcw
fiaddl
lods
insb
sbb
loopne
lahf
pop
das
mov
push
sub
das
jo
test
outsl
xor
and
xor
mov
xchg
incl
xor
mov
cmp
ja
mov
push
inc
mov
lret
xor
jb
sub
mov
out
nop
pop
andb
cmp
mov
adcl
out
arpl
sub
and
adcb
les
mov
dec
lds
jnp
in
mov
cmp
shlb
insl
jmp
shlb
push
shll
popf
fdivp
ss
bound
stos
xlat
ret
inc
add
insb
imul
ss
or
fcoml
test
pop
iret
adc
and
andl
xlat
inc
xchg
mov
add
xlat
mov
or
or
test
clc
cmpsb
xchg
push
dec
xor
adc
add
lds
add
mov
pushf
enter
push
arpl
mov
jl
jbe
pop
xchg
jge
xor
aaa
mov
and
into
ret
jp
mov
pop
sub
dec
or
xor
or
xchg
scas
test
out
and
add
cmp
in
adc
cmpsb
aas
mov
adc
inc
lds
and
stos
cmp
movsl
jno
and
xchg
cmp
out
ds
loopne
movsl
lret
out
enter
cli
lahf
clc
inc
in
push
outsl
push
dec
test
rcr
adc
mov
dec
sbb
jns
pop
adc
aad
xchg
xor
sub
stos
add
inc
dec
inc
outsb
into
fildll
adc
mov
lods
fiadds
es
fadds
pop
fsubl
hlt
lock
push
js
dec
int
leave
cmc
sub
test
pop
mov
test
test
or
or
add
or
cmc
cmpsb
xchg
sahf
loopne
test
or
movsb
mov
xchg
mov
jmp
jbe
daa
ss
cmp
imul
lret
std
rcl
cmp
cs
into
and
clc
cmc
push
rol
ret
outsl
add
xor
jmp
adc
sahf
arpl
data16
aaa
xor
jmp
cli
cmpl
mov
testb
cmp
jl
popa
or
pop
pusha
js
adc
sbb
mov
repz
sub
xchg
mov
inc
sbb
imul
sub
mov
scas
jmp
xor
das
pop
pop
nop
adc
xchg
ljmp
and
mov
jecxz
jae
pop
pop
push
lea
push
mov
or
pop
push
jge
adc
sub
pushf
iret
xlat
xor
pusha
popl
inc
inc
or
frstor
test
les
mov
mov
rcrl
dec
mov
jle
gs
mov
jbe
mov
or
pop
mull
push
sahf
lock
in
movsl
mov
in
xor
mov
mov
xchg
mov
push
mov
ret
and
jl
fildl
out
pop
out
sub
lock
xchg
icebp
aam
dec
cld
lods
in
std
mov
and
movsl
and
test
xor
or
rcr
popf
xchg
sub
sbb
mov
xor
add
push
fstpl
mov
clc
push
mov
xchg
xor
ljmp
xor
jnp
out
lcall
clc
push
lods
leave
imul
xor
sbb
dec
fildl
inc
roll
xchg
loopne
sbb
mov
pop
fimull
push
rcrb
clc
add
les
xor
mov
inc
sbb
push
imul
pop
pop
mov
inc
ret
ja
pop
mov
inc
pop
mov
or
xor
mov
repnz
movsl
lods
mov
sbb
out
outsl
sub
mov
in
out
mov
out
ret
xor
leave
movsl
addr16
jp
popf
out
mov
ja
mov
cli
imul
or
adc
out
or
xchg
insl
lret
lea
rcll
iret
push
xchg
add
popf
add
xor
push
mov
sub
and
imulb
pop
imul
add
push
adc
adc
outsl
dec
ret
rcrb
xchg
inc
xchg
data16
arpl
xor
inc
fidivrl
mov
inc
inc
clc
inc
fisubrl
push
cmpsl
sbb
iret
daa
pop
clc
add
ficomps
sbb
out
mov
out
dec
pop
leave
hlt
lea
push
inc
jnp
jbe
xlat
lods
jge
jns
sbb
fsubr
aaa
jno
fisttpll
roll
and
or
popf
xchg
sub
rolb
jo
jle
scas
xchg
mov
jg
mov
movsb
fwait
cmp
inc
jmp
hlt
cmp
enter
daa
pop
or
push
jno
xor
popf
cmp
testb
dec
xor
and
aam
lahf
pop
out
ficoms
cmp
test
sahf
cmp
xor
mov
idivl
js
xchg
mov
push
into
pusha
push
xchg
jg
cvttps2pi
in
sub
pop
adc
aad
adc
cltd
inc
rorb
cmp
xor
and
hlt
out
push
jnp
push
int
shr
sub
or
lcall
dec
fsubrl
adc
lea
test
cmp
adcb
jg
dec
arpl
jb
mov
add
pop
fsubs
mov
lret
icebp
shrl
mov
dec
or
sbb
imul
and
xor
cmc
loop
lds
sahf
pop
roll
outsl
pusha
add
lods
test
push
mov
and
xor
fistpll
shrl
gs
mov
fstpl
loopne
adc
pop
imul
mov
cmpsl
sbb
movsb
cmpsb
lahf
xlat
inc
jle
sub
mov
mov
jmp
sti
xor
stos
rcl
jbe
sbb
lock
addl
cs
xchg
pop
add
pop
mov
dec
call
push
adc
pop
add
or
jp
xchg
fisttpl
pop
ss
pop
rcl
inc
clc
daa
push
aas
lret
stos
aam
sbb
xor
pop
je
xchg
test
divb
mov
cwtl
jae
fwait
mov
jne
mov
cvttps2pi
dec
lret
push
xor
push
xor
adc
clc
das
ja
fisubs
jns
xchg
and
adc
ret
mov
push
test
std
insl
ret
dec
cmp
fisubl
and
mov
xlat
or
fstpl
inc
mov
push
mov
mov
daa
mov
cmp
loopnew
aam
or
mov
sbb
push
cmp
fldl
dec
clc
xchg
push
cmp
inc
push
or
inc
pop
lods
inc
mov
stos
sub
xchg
push
mov
movl
clc
lret
jp
jne
or
lock
dec
cmpsl
int3
imul
adc
rorl
gs
push
jae
int3
add
filds
xor
les
cs
imul
xor
out
push
jmp
add
mov
mov
insb
or
adc
or
jb
mov
jg
dec
ja
in
mov
jo
out
dec
aas
pop
bound
push
cmp
arpl
mov
out
xchg
in
sub
sbb
scas
addr16
dec
jp
mov
pop
mov
test
rorl
test
sub
push
div
xchg
inc
popf
fucompp
test
xchg
push
pushf
xor
mov
push
push
add
popf
sub
adc
sarl
stos
mov
sub
insb
aas
add
imul
sahf
scas
pop
cmc
lea
push
jp
pop
fdivrl
shlb
lret
dec
xchg
pop
cmpsb
icebp
xchg
inc
popf
and
arpl
stos
xor
fstp
aam
and
push
or
pop
push
int3
xchg
add
in
rcrb
daa
orl
out
imul
pop
adc
mov
inc
pop
xlat
leave
imul
aaa
bound
jbe
enter
mov
adc
xor
or
iret
int3
xor
ds
or
xchg
push
adc
jmp
jo
fmuls
data16
and
mov
jae
es
mov
js
mov
mov
daa
push
outsb
je
mov
stos
add
insl
test
sahf
fdivs
data16
cltd
and
lcall
imul
call
pop
push
cmp
js
dec
dec
pop
nop
aas
je
jp
ret
loope
and
sub
mov
test
je
stos
orb
xchg
bound
and
cmp
jle
ljmp
jnp
pop
xchg
lods
lcall
mov
pop
mov
lahf
sahf
inc
cs
test
xchg
je
loop
imul
cmpsl
mov
mov
pop
ss
xchg
cmp
fbld
pusha
lret
mov
mov
add
rol
into
call
in
mov
js
jg
mov
pop
ds
loop
fisubs
dec
add
add
out
mov
cli
jmp
jbe
cmp
pushf
push
sti
add
cmpb
sti
and
loopne
sub
adc
lcall
mov
pop
clc
xchg
cmp
es
jge
xlat
jg
or
ja
xchg
mov
hlt
lods
jmp
xchg
aad
popf
jmp
dec
cmp
inc
xor
hlt
fld
frstor
jecxz
pop
inc
pop
aam
imul
mov
loop
pop
mov
or
pushf
and
mov
inc
in
push
inc
adc
sarl
push
jb,pn
aaa
xchg
mov
pop
sarl
clc
mov
std
int3
dec
push
cwtl
cs
mov
clc
mov
addl
push
decb
outsb
aas
leave
lock
dec
pop
das
push
mov
xor
pop
and
sbb
aas
xchg
shlb
pop
mov
dec
xor
xchg
push
push
jne
andb
add
sub
imul
mov
inc
rcrb
sub
aam
jmp
mov
in
push
mov
stos
mov
xchg
scas
sub
ljmp
jecxz
scas
test
stos
sbb
adc
mov
cmp
and
test
aaa
xchg
popf
dec
push
lods
add
sbb
push
cmp
in
or
xor
inc
fwait
push
dec
push
push
pop
cmp
add
fs
pushl
in
shlb
movsb
adc
movsl
fsubrs
xchg
in
fwait
call
mov
mov
sbb
jb
dec
cltd
bound
adc
dec
pop
add
mov
fldcw
sub
sbb
jns
popf
add
out
cmpsl
cmc
addl
aam
frstor
add
nop
or
push
pop
addr16
cmp
dec
shlb
lods
mov
pop
push
nop
jle
ljmp
gs
fildll
movsb
jg
and
in
pop
xchg
mov
sbb
popf
push
jl
mov
pop
lret
xor
mov
xor
stc
imul
mov
loope
ja
cmp
iret
xor
mov
mov
repnz
inc
test
pop
arpl
fs
inc
loopne
pop
or
jp
mov
inc
popf
cmp
adc
xchg
pop
sbb
jnp
adc
lds
sti
lds
add
shlb
sarl
xchg
hlt
pop
leave
loop
es
add
push
loopne
fdivl
cmpb
mov
mov
xor
out
sub
cmpsl
push
push
add
test
jnp
femms
repz
xor
sbb
jb
inc
sub
and
fidivl
movsb
mov
out
inc
pop
lahf
mov
pushf
jl
enter
daa
sbb
mov
mov
cmp
ds
push
dec
movsl
loopne
repz
cmp
push
call
xchg
xor
sbb
ljmp
js
nop
je
iret
xor
push
dec
cmp
lods
mov
sub
shll
sub
sbb
outsb
negl
pop
rorb
push
sbbb
sbb
or
add
ds
push
xorl
sub
ret
fs
add
sbb
push
adc
mov
xorb
out
jg
sub
sahf
addb
repz
call
jmp
xor
mov
mov
xchg
cmp
lcall
lret
nop
rcrl
add
mov
cmp
cmc
arpl
mov
outsl
popf
and
stc
cltd
inc
xchg
fs
pop
add
dec
or
loope
nop
je
out
sub
sbb
pop
xor
cmp
sub
lret
mov
out
loop
xor
pop
mov
mov
fcoml
imul
sti
popa
les
sbb
mov
mov
pushf
push
mov
pop
adc
jo,pn
ss
ja
nop
cmpsb
xor
addb
fstp
clc
xor
les
mov
fisttpl
aaa
aam
movl
das
adc
xor
fucomi
das
ss
xor
loop
imul
jb,pn
aas
or
test
adc
je
dec
pushf
roll
int3
out
jae
lods
cwtl
jmp
aad
mov
lods
xlat
dec
adc
cmp
and
leave
lds
mov
out
clc
and
lret
enter
mov
insl
nop
dec
enter
lcall
sbb
icebp
pop
outsb
cmp
ret
dec
mov
mov
test
mov
gs
rclb
add
push
nop
mov
mov
imulb
fstl
stos
ja
out
pusha
push
ljmp
inc
lods
sbb
or
mov
xchg
idivb
cmp
jecxz
add
xchg
nop
mov
mov
sbbb
dec
jne
mov
xchg
sbb
jae
cmp
fstpl
adc
mov
cltd
sbb
adc
sbb
test
sbb
dec
xor
cs
cmp
push
mov
ss
mov
js
inc
ja
inc
das
dec
jge
jl
in
or
push
mov
insl
pushf
dec
cmp
xchg
dec
mov
push
out
or
push
bound
sub
jne
and
xchg
aad
out
cltd
sub
push
jns
addr16
xor
mov
mov
inc
mov
fs
mov
add
add
sarl
xchg
out
fsubr
jb
ficoml
mov
push
frstor
popf
jp
adc
push
pop
mov
lret
in
insb
adc
sub
push
sub
sub
adc
sub
nop
xchg
add
inc
mov
adc
sub
mov
inc
jecxz
xor
cmc
add
fcmovb
inc
stos
xchg
mov
jns
es
sbb
lret
or
adcl
mov
bnd
sbb
int
push
das
push
nop
jbe
pop
mov
sbb
divl
scas
jae
or
or
or
movsl
push
repz
ja
gs
and
test
cmp
popf
cmp
mov
and
jecxz
adcl
daa
sbb
mov
jno
ror
ret
xor
cmp
push
push
mov
out
jmp
lahf
je
pop
push
mov
add
push
call
xor
mov
pop
movsb
mov
js
push
pop
push
scas
hlt
push
mov
sub
mov
sub
cmp
outsb
pop
insl
mov
shrb
jae
vprotq
jb
aad
add
add
clc
into
and
xchg
mov
test
xor
test
imul
test
xor
inc
mov
mov
lods
sbb
dec
testb
jp
jg
pop
ljmp
push
mov
faddl
arpl
imul
xchg
aad
fcoms
inc
idivl
cmp
testb
mov
int3
aas
or
test
cmc
sub
pushf
outsl
jl
mov
jl
sub
push
test
add
sub
data16
das
mov
jb
cli
dec
lods
xor
sahf
movsb
cmp
xchg
cmp
cltd
sub
loopne
xchg
dec
pop
fdivl
movsb
adc
unpcklps
ret
call
repz
lahf
mov
push
inc
cld
cmp
repnz
std
inc
shrb
stc
mov
lret
jmp
jmp
rorl
aad
mov
nop
sbb
int
push
inc
movsl
fldcw
sub
jecxz
pop
insb
outsl
in
lea
xchg
nop
movl
jge
pushf
jnp
in
fistpl
mov
inc
repnz
and
xor
ret
jb
jp
dec
xchg
or
rcl
mov
jle
mov
sbb
cwtl
movsb
cmpb
xchg
lahf
push
xorl
jmp
outsb
mov
cs
and
mov
adc
mov
sahf
loope
andb
es
push
inc
dec
sub
push
mov
xor
arpl
scas
xchg
cs
adc
xlat
pop
test
test
and
jg
dec
fisubrs
in
mov
push
mov
fnsave
iret
sub
cltd
adc
popa
shlb
fisubrl
mov
pop
xchg
cmp
or
imul
popf
mov
je
aaa
jbe
xchg
push
or
ret
mov
sbb
push
jmp
pop
xchg
das
fwait
enter
pop
imul
xor
ljmp
sub
pop
add
xchg
stc
shlb
push
xchg
mov
mov
data16
mov
xor
jl
jo
push
inc
jnp
das
or
and
mov
je
and
jns
push
pop
adc
out
jmp
in
outsb
sbb
and
in
mov
andl
cs
enter
in
or
xor
jnp
sub
mov
jle
mov
mov
jno
fdivr
lods
in
cmp
pusha
fwait
popf
popf
fildll
notl
imul
loopne
cld
sbb
push
mov
dec
fstpt
popf
incl
push
lret
out
mov
das
insb
addb
push
or
outsl
js
adc
mov
sahf
ret
pop
pop
dec
loope
inc
mov
movsl
xchg
mov
jne
jo
cmpsb
inc
inc
push
pusha
fidivl
setno
mov
sbb
std
adc
xchg
sub
and
push
lds
mov
repnz
leave
shl
cwtl
hlt
sbb
push
jle
add
push
and
jnp
sbb
push
adc
insl
inc
mov
lea
add
lret
orl
inc
push
mov
jmp
shrl
lret
dec
jecxz
cli
mov
movsb
push
inc
inc
and
outsb
in
push
in
enter
daa
sbb
xchg
jno
add
ret
ds
in
out
test
mov
xchg
mov
push
mov
jmp
and
push
lret
xor
iret
mov
jo
dec
pop
lret
inc
cmpb
les
dec
stos
inc
push
fmull
fisttpl
sub
adc
outsb
mov
jecxz
rolb
shll
dec
dec
add
push
and
test
push
xchg
adc
pavgb
sub
push
xchg
pop
add
jp
mov
popa
jo
loopne
and
test
decb
or
jg
cmovo
dec
mov
adc
push
cmp
adc
idivl
repnz
push
rol
pop
mov
jo
or
xchg
imul
mov
outsl
pop
pop
cmp
jmp
fs
add
or
lods
inc
sbb
out
inc
fs
cmp
xor
out
cmp
int3
xor
or
adc
adc
outsl
pop
sti
test
adc
int3
ljmp
daa
ret
xchg
sbbl
cmpb
jnp
xlat
cmp
mov
mov
xor
ret
xor
adc
push
cld
nop
pop
popf
adc
inc
push
jl
retw
mov
jecxz
aas
mov
addr16
lea
xor
sub
jb
pop
roll
pushfw
shlb
dec
les
pop
jbe
push
inc
jns
pop
inc
fs
aas
inc
jbe
jb
jmp
inc
je
pop
js
and
data16
std
sarl
dec
jecxz
dec
cwtl
xlat
mov
fcmovu
dec
jmp
js
adc
mov
cmp
lock
das
repz
cmpb
roll
ret
in
push
or
nop
andb
inc
repnz
and
xor
mov
pop
lock
lret
sbb
rorb
and
scas
dec
imul
testl
clc
aam
jg
mov
jecxz
push
rclb
fstp
in
clc
jle
jle
insb
pop
movsb
ljmp
inc
lods
lock
stos
out
and
xchg
test
arpl
push
in
popl
ljmp
sub
inc
mov
mov
inc
jbe
sbb
add
shr
lods
and
fwait
imull
push
jmp
add
dec
jge
decl
jmp
or
add
xor
mov
mov
mov
out
adc
pushf
and
inc
adc
mov
inc
mov
mov
insb
mov
inc
lret
jne
jg
mov
lea
lret
bound
cmp
in
xor
out
insb
dec
sub
add
sbb
cmp
pushf
and
mov
fisubl
cs
fwait
jnp
dec
cmpb
lret
jg
pusha
ss
fisttps
lock
pusha
out
mov
jae
loopne
arpl
mov
push
lret
stos
mov
adc
insl
imul
jle
out
test
dec
imul
sub
dec
adc
ret
lods
pop
or
inc
leave
pop
fsubs
sub
or
jmp
inc
inc
ret
fisubrl
dec
lods
xchg
pusha
xor
jl
mov
jecxz
mov
movl
outsl
mov
mov
bswap
inc
push
xor
rcrl
int
sbb
jecxz
xor
ss
mov
xchg
or
pop
imul
enter
pushf
mov
xor
sub
xchg
pop
xchg
idivb
mov
mov
push
test
cmp
push
jae
enter
daa
sbb
mov
jno
movsw
jl
adc
cmp
ds
std
ds
lahf
mov
sbb
and
test
xchg
or
xor
mov
xor
es
fisttpl
sub
push
mov
loope
inc
out
es
sub
int
outsb
and
or
loopne
pop
popl
push
negl
jo
lods
add
push
mov
int
pop
stos
sub
daa
dec
lcall
xchg
push
hlt
sbbl
cmpsb
arpl
mov
mov
jg
lret
in
add
jge
lds
mov
addr16
add
and
inc
fmul
std
jae
sti
test
sbb
pop
test
mov
inc
jnp
je
in
mov
daa
push
outsl
cmp
mov
fs
hlt
movsl
add
movsb
fisubl
leave
insb
lods
sub
or
stc
xchg
mov
xor
push
mov
inc
flds
decb
repz
cmpsl
stc
loopne
push
addr16
sbb
arpl
jns
adc
cmp
xchg
inc
sub
sbb
lret
mov
sub
mov
mov
pop
dec
cs
enter
pop
pop
nop
aaa
outsl
mov
cmc
cmpsb
inc
jge
xchg
fstps
movsl
adc
mov
test
lea
fs
adcl
or
repz
rcrl
fstpt
xchg
pop
sbb
add
testl
mov
call
jne
je
testb
std
push
mov
test
jecxz
push
dec
mov
fmull
mov
dec
das
rcrb
mov
or
push
and
aam
ret
jnp
andl
inc
sbb
and
cmpsl
sbb
and
xor
scas
or
or
jns
jge
dec
js
pop
ret
ror
dec
test
cmp
aam
scas
inc
mov
rcrb
add
shll
ljmp
ret
into
push
aad
fsubrp
push
test
lret
sub
push
into
cmpsb
xor
mov
out
mov
in
addl
add
stos
adc
test
stos
jg
sarl
roll
jnp
fmull
fwait
paddw
mov
add
add
mov
xor
stos
push
xor
decb
mov
and
mov
test
aam
dec
push
int3
xor
or
adc
mov
adc
dec
out
cld
jne
or
mov
inc
in
test
xchg
adc
cmp
cmpl
add
sub
lcall
jns
fdivrs
jle
mov
pop
add
jnp
in
jle
xlat
mov
sbb
xchg
pusha
shrl
fildll
or
xchg
dec
daa
mov
mov
push
fiadds
out
lods
and
sbb
cld
push
add
in
jae
push
jmp
add
std
sbb
movsl
pop
sub
lods
fcos
ret
aad
mov
shlb
cmp
mov
in
xchg
jbe
and
out
push
inc
pop
xor
fstpl
xchg
mov
and
daa
lea
fisubrs
xchg
lds
add
mov
loope
lahf
leave
mov
and
jbe
dec
or
aad
sbb
pushl
jmp
fimuls
jae
add
movsl
jnp
aaa
xchg
insl
push
jg
push
xor
mov
fsubrl
icebp
or
cmp
pop
movsb
fstl
inc
push
js
aam
cmp
cmp
xor
sbb
movlps
mov
out
push
jl
mov
loope
xchg
jne
cld
dec
movsl
and
sub
push
xor
cmp
pusha
gs
scas
mov
testb
js
jno
pop
lret
xor
loope
imul
int
in
sbbl
sarb
dec
aaa
subb
pop
add
push
enter
sti
push
lea
adc
and
sub
inc
push
insl
arpl
mov
cwtl
sbb
test
xchg
test
pop
xor
cmpl
fldcw
mov
sub
ss
lcall
xchg
idivl
shr
shl
mov
into
hlt
into
push
ss
cmc
jg
add
aas
jmp
outsl
sbb
fdivrp
jne
sbb
add
fwait
stos
lods
adc
mov
clc
push
popf
xor
mov
pop
das
out
gs
add
iret
fistps
movsl
pusha
adc
or
adc
sub
xchg
pop
lods
mov
adc
cmp
pop
mov
mov
inc
push
mov
or
repnz
jb
aad
notb
pop
mov
sbb
aam
insb
fnstenv
inc
insl
xor
push
sbb
and
movl
stos
pushf
adc
xor
push
add
xchg
inc
lcall
jb
fs
dec
cli
int
je
mov
testb
std
fistpl
lret
mov
cmpl
cld
lret
out
xchg
mov
in
mov
test
lock
sbb
mov
sbb
ret
or
insl
sub
mov
sbb
cmpsl
sbb
mov
mov
ds
fldenv
xor
mov
adcb
mov
loope
jae
popf
lret
xor
add
pop
pop
dec
dec
clc
hlt
mov
xchg
ljmp
popa
adc
jmp
fsubr
mov
mov
push
test
icebp
bound
mov
cmpsl
cltd
inc
js
test
dec
xchg
gs
bound
xchg
sbb
inc
adcb
xchg
sbb
inc
sub
add
or
xor
adc
or
clc
push
xor
jmp
xchg
ja
pop
mov
scas
mov
fnstenv
ret
or
dec
dec
enter
push
and
dec
in
mov
xlat
cmp
mov
adc
out
mov
andb
enter
pop
in
xor
or
mul
push
psrlq
cli
shlb
js
imul
bound
inc
mov
mov
in
xor
rcr
enter
xor
xchg
dec
nop
adc
in
push
jmp
xor
push
pop
sub
stos
outsl
cmpsb
pop
and
add
insb
sar
imul
and
inc
push
mov
iret
or
es
add
lock
movl
add
scas
imul
mov
aam
nop
and
xchg
push
popf
inc
sbb
adc
fimuls
sbb
shlb
aaa
repnz
sub
xor
adcl
fistps
jbe
hlt
iret
jge
push
jge
xor
xor
or
add
adc
mov
ja
cmpsb
insb
rorb
bound
xor
jecxz
fsubrs
test
pop
movsb
push
out
cmpsb
push
dec
in
in
pop
loope
enter
daa
sbb
jecxz
mov
ds
iret
enter
add
and
ret
lock
fstl
sbb
repz
sub
ljmp
pop
inc
pop
push
js
fwait
mov
or
psraw
mov
sub
cmpsb
into
sub
ss
xchg
into
out
popl
cmpb
int
inc
sub
and
push
nop
call
int
add
sub
mov
lcall
cmpsb
fcompl
sbb
sbb
int3
test
mov
pushf
dec
mov
loope
lods
inc
adc
pusha
cmp
fadds
sub
jns
jle
ret
rorl
lds
loop
push
into
cmp
cmc
inc
dec
xor
aam
loop
aam
stc
sub
pop
imul
push
xor
cbtw
loopne
lods
stc
push
lret
loop
out
ret
sbb
jo
ja
lret
outsl
out
sbb
in
push
movsl
gs
pusha
mov
sub
adc
mov
adc
push
repz
xchg
lret
sbb
inc
lods
call
sub
jae
mov
jbe
shr
pop
jecxz
cs
adc
aad
xchg
ds
in
dec
push
dec
mov
or
test
iret
cmpl
pop
sti
lea
adc
jg
insb
pop
ljmp
pushf
daa
and
mov
inc
push
scas
outsl
inc
mov
mov
and
mov
pop
outsl
mov
push
test
call
adc
fwait
testb
mov
mov
in
pop
jae
adcl
adc
bound
sbb
mov
nop
mov
mov
jp
xor
shl
ret
cltd
in
lods
sbb
dec
push
and
cmpsl
pop
push
mov
mov
sbb
add
idivb
cmp
daa
and
orb
pop
add
add
jo
icebp
sub
jle
aam
or
fs
test
sbb
das
sub
sub
shr
inc
int3
popa
sub
icebp
lods
xor
xor
pop
insl
xchg
pop
xchg
mov
test
inc
add
int
cltd
jns
inc
test
in
pop
mov
xchg
xchg
dec
js
lret
test
add
xchg
dec
loopne
out
push
pop
xor
js
call
call
je
jmp
xchg
xor
sbb
outsl
jmp
xor
sub
xchg
out
test
mov
pop
leave
dec
ja
and
cmp
xchg
inc
xlat
scas
in
or
push
cwtl
mov
test
mov
mov
cmc
adc
addr16
bound
test
in
mov
sbbl
out
push
aad
insl
fisttpll
addr16
mov
mov
scas
jnp
fs
test
pusha
pop
nop
mov
out
sub
inc
push
add
pop
and
lods
push
cmp
int3
aad
cltd
cwtl
test
adc
cmp
sahf
out
scas
adc
adc
aad
imul
sub
imul
ljmp
push
pop
inc
repnz
or
pop
jle
inc
aas
in
xor
inc
sahf
mov
sbb
insb
dec
pop
jo
dec
fidivs
sbb
rol
in
repz
xchg
repnz
lods
jns
hlt
inc
ficoml
jbe
adc
sbb
or
or
mov
fucom
add
mov
or
push
inc
fidivl
orl
and
lcall
repz
lea
ret
fisubrl
in
push
outsb
mov
adc
jmp
pop
test
cmp
into
lds
insl
data16
xchg
sarb
jle
pop
ds
andl
mov
cwtl
push
add
push
notb
inc
xor
jl
popa
pop
addr16
js
pop
movsb
pop
dec
enter
jb
loope
sbb
jb
stos
data16
outsb
dec
rorb
shlb
ljmp
daa
test
add
xchg
push
xchg
ljmp
sbb
lcall
dec
faddl
movsb
sbbl
sti
jb
mov
add
sub
or
mov
ret
imull
ss
or
fdivr
xchg
sub
cmp
out
lret
cmpsb
shll
pop
mov
or
lahf
into
sbb
pop
sub
cmc
lods
cmpsl
outsl
xlat
add
loop
cmpb
divb
add
lcall
jb
and
mov
cmp
cmp
clc
push
sti
leave
jle
jne
push
gs
nop
loopne
add
pop
ja
les
out
ret
push
imul
jno
lahf
out
xor
shll
xchg
xlat
cmp
lds
loope
cmpsl
jmp
lret
mov
ret
aad
ret
enter
sbb
inc
mov
xor
inc
cwtl
mov
out
ret
fidivs
jae
loope
movsl
mov
call
adc
adc
or
cld
fildl
sbb
jnp
xchg
pop
adc
xor
ret
sbbb
call
fs
shll
cmc
test
mov
pop
xchg
dec
daa
hlt
mov
sti
js
push
push
subl
ret
adc
fistps
lock
es
outsl
loope
mov
xor
inc
ret
sub
es
and
dec
adc
cmpsl
push
adc
out
arpl
sbb
pop
mov
and
sbb
pop
pop
jl
rolb
lcall
xor
mov
out
rclb
mov
fnstsw
scas
clc
push
jmp
push
bswap
popa
inc
inc
subb
push
out
jp
loop
mov
and
psrlq
sti
cltd
mov
inc
test
hlt
test
andb
dec
fbstp
push
xchg
pushf
jmp
roll
xchg
adc
mov
aas
add
mov
lret
fwait
or
cmpsb
jbe
or
xor
xchg
adc
and
pop
fiaddl
fisttpl
fmull
xor
repnz
dec
aas
mov
icebp
add
mov
jmp
out
inc
pop
mov
jns
cmpsb
mul
mov
stos
cltd
out
addb
push
or
je
addr16
mov
push
mov
mov
and
jle
dec
jl
das
jnp
pusha
mov
xlat
jb
fadds
pop
xchg
scas
push
jae
adc
push
outsl
push
popf
fs
mov
fmuls
test
insb
xchg
xchg
jno
jle
cmp
rolb
mov
ret
cmp
jmp
inc
cmc
fistpl
inc
cmc
ds
or
xlat
in
sub
sbb
lret
sbb
sub
in
ficoms
and
rcr
mov
fisubl
in
leave
and
hlt
popl
jbe
mov
pop
sbb
cld
mov
dec
dec
jo
je
cmc
int3
mov
fimuls
insl
out
push
sub
divl
jnp
scas
pop
cmp
cmp
dec
cltd
inc
lock
cmpsb
pop
jns
in
in
fidivrs
push
lret
add
push
push
xchg
cmp
push
jno
bound
cmp
adc
and
dec
lahf
andb
call
cs
shll
sbb
mov
adcb
mov
push
sbb
loope
lods
out
shrb
jno
lods
pop
stos
adc
dec
hlt
test
in
pusha
sbb
add
cmp
push
xchg
dec
and
adc
mov
pop
jle
lcallw
jb
xchg
fdivl
dec
mov
pop
addl
inc
adc
jg
loope
mov
jo
mov
insb
movlps
dec
adc
mov
loopne
negl
out
sarl
dec
or
cld
scas
into
add
popa
cmc
aam
add
push
lods
test
cmp
loop
arpl
stc
lcall
add
mov
lods
movl
out
add
cli
addl
push
lock
and
js
cld
cwtl
enter
imul
outsl
mov
repnz
push
push
imul
ljmp
push
out
sbb
mov
imul
mov
sub
call
and
jmp
jbe
cs
push
xchg
nop
mov
das
stos
inc
leave
test
mov
jecxz
scas
jbe
dec
lea
dec
call
jge
jnp
push
es
adc
addr16
jge
inc
sbb
clc
inc
sbb
ljmp
lea
jb
and
dec
pop
push
shll
xor
mov
xor
adc
add
add
sub
pop
sahf
aaa
cmpl
mov
testl
inc
inc
pop
das
dec
push
das
mov
call
and
ret
mov
gs
sub
fimull
and
cmpsl
adc
inc
or
cmp
push
mov
subl
jmp
mov
xchg
pop
ds
xchg
rclb
jl
sub
es
mov
mov
fdivrl
mov
pop
sub
xchg
cmpsl
push
in
ljmp
hlt
lods
pop
xor
stos
xchg
sub
xchg
out
push
push
cmp
push
rdmsr
in
add
add
out
mov
mov
xchg
inc
mov
inc
mov
test
test
xchg
add
rcrl
inc
push
fwait
loop
mov
jg,pn
add
shlb
mov
stc
notb
xor
stos
pop
xchg
fs
shll
out
pop
xchg
shlb
dec
and
repz
add
jecxz
mov
dec
nop
dec
jb
inc
jne
sbb
cmp
and
dec
adc
adc
jnp
sub
fildll
sub
jmp
dec
addr16
dec
jp
repz
add
repz
stos
add
pusha
cmp
in
xchg
stos
sub
jmp
jns
cld
jae
adc
push
xor
fnstcw
pop
std
scas
stos
enter
inc
push
enter
jae
insl
notb
sub
push
sbb
adc
xchg
dec
iret
sub
mov
push
adc
inc
add
lock
clc
mov
or
push
out
insb
inc
cmp
lods
mov
sbb
fwait
test
data16
fdivp
sarl
clc
xor
repnz
sbb
hlt
fiaddl
xchg
jbe
test
jge
aaa
jno
fs
adc
out
push
or
into
adc
or
test
push
or
xor
hlt
mov
scas
cmp
imul
cmp
movsb
or
inc
jg
sbb
aam
ljmp
or
jno
jnp
jl
mov
cmp
or
adc
mov
add
lahf
dec
push
jno
sbbb
xchg
push
stos
push
mov
imul
sub
add
push
js
xchg
xor
outsb
shrb
jne
loope
pop
push
sub
scas
mov
outsb
mov
shlb
movsl
jno
popa
xchg
cld
xor
cli
sbb
ds
push
cltd
sbb
int
sub
sub
iret
pop
pop
std
push
lcall
neg
pop
cmp
into
sahf
pushl
mov
jns
lea
sbb
push
mov
jg
adc
mov
and
cmpsl
fdivs
cmc
divl
arpl
rcll
mov
sub
into
jecxz
xchg
cmc
fwait
nop
dec
xor
jo
loop
jns
stc
push
inc
nop
fs
mov
ret
jle
and
lods
scas
xchg
cmpsb
mov
test
hlt
call
xchg
cld
xchg
movsl
cmp
xchg
sti
daa
rcrb
mov
push
dec
loopne
mov
xchg
adc
imul
daa
dec
repz
cmp
sbb
repnz
xlat
mov
push
sub
cmp
jmp
out
mov
nop
jle
arpl
pop
imul
fisubl
jecxz
sub
jns
je
jae
test
invd
push
cld
jl
pop
add
adc
in
neg
gs
pop
dec
jmp
inc
mov
mov
divl
leave
ret
dec
lret
xchg
test
pushl
notb
adc
cwtl
rorl
mov
les
mov
je
adc
int3
popa
lret
stos
adc
mov
adc
mov
ret
push
mov
dec
test
push
popl
and
enter
cs
mov
xchg
std
dec
pop
orb
pop
jns
and
push
icebp
adc
test
dec
mov
movsb
sahf
xchg
and
push
mov
pop
pop
sbb
jmp
lock
jno
jns
rorl
push
fs
push
enter
loopne
push
xchg
out
jb
mov
cmpsb
mov
stos
orb
xchg
cs
adc
test
xchg
rolb
in
jnp
push
adc
test
add
mov
lcall
test
pop
testb
in
xchg
hlt
insb
mov
fwait
adc
mov
add
leave
sar
cmp
xor
or
lcall
mov
outsb
mov
push
mov
ja
adc
inc
pushf
lahf
in
enter
leavew
dec
push
ja
jne
pushf
fidivl
add
adc
imull
jns
and
in
es
orl
jns
lds
sub
out
test
je
ja
into
shlb
mov
jg
jle
mov
in
push
jp
fcoms
filds
xchg
jle
jp
sub
jae
push
cmpsb
push
cmc
or
mov
push
cmc
scas
stos
cmp
dec
and
inc
insb
insl
sub
pop
dec
sub
cmp
cwtl
adc
xchg
iret
mov
or
gs
lret
shrl
arpl
lcall
test
mov
inc
test
jle
jo
std
mov
aas
sub
rclb
ret
inc
xlat
repnz
adc
and
lock
and
jge
dec
nop
sbb
in
aaa
cmpsb
dec
ret
or
pop
mov
int3
bound
bound
push
out
xor
dec
lods
in
scas
sbb
or
cmp
rcrl
lcall
arpl
in
mov
mov
daa
adc
pop
cmp
mov
jl
xchg
mov
cmpsb
movsl
pop
mov
and
and
push
push
test
test
push
or
sbb
pop
fdivrl
js
or
pop
push
or
push
test
loope
ss
test
shrl
jecxz
outsb
jb
call
rolb
push
pop
in
lea
mov
cwtl
push
and
arpl
sub
inc
lcall
or
sbb
sub
pop
test
pop
out
jp
adc
test
out
mov
out
adc
jne
ss
sbb
fsubrs
sub
lret
dec
shl
or
cmp
out
clc
into
std
scas
cmc
bound
xor
call
std
loop
ret
push
stc
or
mov
push
jbe
data16
jle
lods
xchg
movb
arpl
sbb
out
fs
fcoml
cmp
mov
fisubs
int3
gs
movsl
js
movsl
push
pop
aam
hlt
adc
imulb
sti
xchg
adc
mov
bound
inc
xchg
ja
sub
mov
mov
loop
jno
and
nop
jmp
sbb
cs
or
subl
dec
cmp
roll
adc
inc
adc
xor
or
faddp
jl
orb
push
xlat
pop
mov
aad
push
loopne
pushf
shrl
fistl
gs
sub
repnz
and
stos
aas
mov
movsb
in
dec
in
je
fisttpll
notb
imul
mov
xchg
subl
es
sbb
sbb
xor
sbb
cld
test
das
or
mov
push
insb
sub
fcmovb
aas
ret
aad
sub
and
mov
icebp
cmpsl
adc
mov
call
mov
bound
mov
mov
sub
or
mov
pop
gs
stos
call
push
daa
addb
out
stc
lock
sbb
push
xchg
and
mov
popa
mov
dec
lods
fstp
push
out
mov
adc
lcall
or
test
add
mov
popf
rcrb
test
lahf
ret
xchg
mov
pop
ficomps
inc
ljmp
lods
add
jb
jmp
push
or
pushl
jns
xchg
add
sbb
sbb
sbb
sub
ja
fidivs
xor
lret
push
in
dec
cmp
sbb
jecxz
lahf
bound
pop
jns
fadds
pop
cmc
out
sbbl
fldt
loope
mov
cltd
sbb
add
mov
dec
outsl
mov
cs
inc
jle
push
call
pusha
jae
fbld
lods
xchg
push
adc
jmp
cpuid
mov
push
mov
sub
mov
stos
scas
into
aad
outsb
xchg
fldcw
xchg
imul
scas
pushf
add
push
adc
sub
iret
out
add
js
in
pop
add
test
push
arpl
cld
lods
or
dec
mov
inc
cmp
mov
xchg
shll
pop
sub
cmp
cmp
cmpsb
lds
jecxz
cs
repnz
leave
mov
hlt
jo
xchg
push
negb
jp
mov
inc
es
add
aaa
gs
and
out
int3
dec
adc
dec
shrl
push
shll
xor
stos
loop
scas
sti
jmp
and
scas
cmp
lods
inc
popf
aam
cmpsb
out
cmp
mov
inc
gs
adc
loopne
aam
xchg
jl
sub
cmp
test
pop
rclb
movsl
mov
cmp
push
lahf
mov
or
test
and
xor
pop
std
pop
add
cmp
mov
and
push
loope
xor
sub
cs
sub
aad
aad
imul
pop
dec
aas
sbbb
fwait
add
inc
inc
and
push
pop
int
mov
cmpsb
pop
sti
and
pushf
sbb
push
ja
mov
mov
movsb
sbb
dec
sahf
inc
std
dec
test
lods
adcb
lret
fldt
mov
cmp
mov
mov
jl
sub
cmp
call
ss
lret
mov
mov
pusha
mov
or
add
cmc
sub
xor
add
push
in
xor
stc
mov
pop
movl
daa
or
fdivrl
pop
les
out
inc
stc
cli
sbb
and
gs
test
andl
pop
leave
pop
repz
test
cmp
stc
imul
cmc
or
insl
add
cmp
scas
xlat
xor
or
push
popf
and
jmp
adc
dec
jne
aad
outsl
seto
fimuls
fiaddl
sbb
fstps
lods
sub
sbb
jno
sbb
or
jg
movsb
lea
lret
pop
adc
cli
cmc
cmp
cmc
mov
insl
outsb
pushf
jle
fs
mov
pop
mov
add
cmp
aam
aas
lret
add
mov
dec
les
add
neg
lock
rcrb
sahf
inc
mov
dec
mov
inc
push
lret
mov
mov
and
mov
mov
outsb
das
jmp
enter
mov
or
paddq
add
insl
xchg
int
dec
std
sti
loopne
adc
mov
icebp
mov
or
mov
ljmp
mov
fwait
enter
add
sub
outsl
cmp
pop
es
mov
cmp
push
ljmp
clc
push
sbb
ljmp
shrd
stos
pop
xchg
fwait
out
push
sbb
xchg
mov
ss
dec
std
sahf
add
pop
test
test
pop
shlb
mov
or
into
xchg
add
mov
and
lret
xor
xor
stc
add
cs
push
ljmp
ret
xor
pop
clc
xchg
push
scas
mov
lret
mov
xorb
add
inc
lret
or
icebp
test
inc
or
dec
sbb
jne
fidivs
ret
repnz
fwait
xor
in
pop
movsl
subl
adc
sub
fsubrl
jp
lods
lods
mov
leave
pop
mov
fisttpll
pop
in
mov
pusha
push
inc
filds
push
int3
jmp
fidivl
das
push
jnp
xchg
popf
add
mov
aam
xor
and
rclb
cmp
aam
jmp
push
out
cmc
pop
adc
mov
ret
cmp
dec
fiadds
fsubs
jmp
inc
add
out
or
ret
outsb
test
fcmovb
mov
xchg
sbb
sbb
cwtl
push
pop
pop
and
pop
loopne
dec
clc
cmpb
imul
fidivrs
hlt
mov
xchg
mov
jge
sbb
aaa
and
cmp
sbb
je
cmp
mov
mov
sub
add
cs
testb
cmp
stos
movsb
stos
xor
sbb
mov
fisubl
adc
or
and
jl
stos
popf
or
cmp
xor
jl,pt
stc
movsl
sub
sub
lahf
stos
cmp
test
in
add
dec
insb
imul
mov
xor
loope
push
mov
sub
adc
adc
mov
scas
add
sub
aaa
and
inc
cmc
push
mov
pop
mov
cmp
pop
jp
negl
into
nop
jmp
pop
pop
sbb
or
dec
xorb
cmpsl
mov
adc
mov
das
mov
mov
adc
jmp
insb
mov
cmp
mov
mov
rcll
jo
jl
pusha
into
mov
pop
cmc
lock
push
xor
cmp
cmp
jp
jbe
sub
pop
add
or
add
jnp
pop
jp
out
mov
cli
dec
push
jg
adc
sub
and
inc
gs
outsl
mov
pop
adc
or
icebp
pop
adc
fsts
stos
loope
xchg
pop
loop
sbb
mov
mov
bound
clc
repz
mov
lret
cs
repz
xchg
xchg
nop
bswap
jne
imulb
stos
fsts
nop
les
loope,pn
sub
jo
addb
call
jns
add
dec
out
les
fstpl
lds
xor
inc
cmp
test
fsubp
add
neg
dec
cmp
je
rclb
negb
lret
push
fwait
cwtl
repnz
je
add
mov
leave
sbbl
rorl
xchg
sbb
mov
mov
lret
mov
les
and
mov
ret
repz
fists
dec
clc
push
enter
repz
xchg
sub
cmpsb
mov
or
insb
outsb
mov
mov
jmp
sub
and
ja
ds
push
lods
lahf
out
cmp
add
or
pop
lahf
cs
mov
js
mov
stos
dec
inc
mov
xchg
add
cmp
sub
mov
cltd
ret
cmp
or
mov
pushf
and
mov
sar
mov
pop
xor
xor
mov
imull
ds
cmp
movsl
inc
sahf
xor
and
xor
cwtl
ljmp
xor
daa
pop
adc
xchg
dec
out
pop
lods
inc
popa
aam
or
repz
jo
jne
jo
mov
loope
out
mov
and
cs
jb
lret
xorl
pop
sub
xlat
sub
addr16
lahf
jp
test
mov
push
js
mov
jle
jo
in
addb
test
inc
stos
xchg
test
out
xchg
movsl
adc
mov
popf
daa
into
push
mov
adc
lcall
addr16
insb
scas
pushf
sbb
test
xor
push
mov
movsl
pushf
cmpsb
ret
ficompl
stc
sub
sub
and
aad
inc
add
nop
or
shll
cmp
inc
fidivl
sbb
sbb
ljmp
cmpb
lds
or
fs
xchg
bnd
or
jbe
dec
hlt
push
ficoms
inc
adc
inc
mov
fidivl
push
hlt
jo
jecxz
xlat
or
ljmp
and
pop
push
xchg
dec
or
pusha
mov
and
push
movsb
xor
jne
cmpsb
in
xlat
in
jo
jle
cmc
jnp
daa
adc
cmp
jno
inc
scas
jl
out
fnstsw
cwtl
pop
mov
movsl
xor
lret
and
mov
leave
mov
push
int3
repz
insl
sahf
lcall
push
lock
pop
push
add
js
repz
ret
jmp
push
jmp
loope
xchg
std
sub
cld
xchg
sub
lahf
outsb
fwait
push
and
xchg
xor
fstl
ret
add
pop
pushl
and
add
push
movsl
lock
int
ficoml
sub
xor
pop
stc
call
sub
and
pusha
fstps
mov
outsb
sahf
mov
mov
jge
das
or
push
jg
pop
inc
mov
jnp
mov
shrb
mov
jg
ss
jl
cmp
pop
pop
int
mov
insl
lret
adc
lods
pushf
ret
mov
arpl
jmp
fmul
outsl
in
cmc
mov
ja
pop
imulb
js
loop
xlat
mov
cmp
add
hlt
pop
sub
lods
dec
mov
mov
out
test
cli
subb
cmp
xchg
push
sti
jecxz
lret
push
cmp
push
ljmp
xor
sub
loope
push
imul
addr16
xchg
pop
add
mov
pop
in
mov
iret
sub
in
daa
xchg
fsubr
arpl
pop
cs
sub
nop
ljmp
inc
sub
mov
jecxz
clc
movb
outsb
call
clc
jle
pop
iret
pop
cltd
adc
negl
aam
lcall
mov
mov
cmp
outsb
sbb
or
je
dec
lock
cmp
negb
es
inc
dec
add
lods
int
mov
xchg
add
aaa
xorl
pop
inc
lret
data16
incb
mov
lock
pop
adc
jnp
inc
and
cmpsb
jl
sub
es
sub
movsl
dec
repz
adc
mov
insl
call
mov
xor
lods
and
mov
xchg
shlb
jg
aam
pop
clc
mov
js
push
jo
xchg
frstor
clc
int3
test
xchg
loop
mov
mov
lods
push
xchg
mov
int3
mov
xchg
dec
push
mov
prefetchw
or
cltd
add
adc
dec
mov
cmpsb
lea
adc
cmp
sbb
xchg
inc
rcll
and
fwait
int
inc
push
pop
jo
add
pop
loop
incl
xor
jl
xor
and
xorb
movzbl
or
pop
push
dec
loope
rolb
sub
xor
loope
push
jne
jg
mov
dec
out
sbb
bound
mov
pop
in
pop
adc
outsb
mov
hlt
or
inc
and
xor
mov
ret
sub
mov
cmp
cmpb
fsubp
pop
lods
mov
inc
jp
ffreep
addr16
js
jmp
jo
arpl
add
popf
dec
je
mov
push
lods
stos
pop
mov
insb
sbb
imul
mov
push
jl
mov
iret
add
sub
pop
test
loopne
aaa
out
mov
inc
pop
iret
rorb
cmpsl
inc
inc
mov
mov
pop
sbb
adc
fisubs
clc
int3
sarb
mov
int3
jge
leave
in
jmp
loopne
jecxz
jp
orl
mov
mov
repnz
add
popa
push
int3
push
js
dec
push
shlb
jp
push
xor
mov
rolb
sbb
or
movsb
shlb
inc
dec
sub
cmpsb
outsl
loopne
in
push
cmp
daa
adc
push
cmp
adc
jl
jbe
ds
movsl
cmp
and
out
outsl
lahf
call
sub
test
orl
cmc
jno
shl
lret
popa
les
mov
subb
jle
fdivr
cvttps2pi
sub
bound
xchg
mov
shrb
int
cmp
jae
push
sub
sbb
dec
out
in
pusha
push
test
xor
jl
cmp
js
lret
xchg
or
push
jl
dec
fdivl
aam
or
and
and
sti
lea
imul
mov
int3
sbb
pop
or
ss
cmp
sbb
adc
jno
cmp
pop
test
popa
mov
and
or
push
cmc
jle
jbe
jb
dec
outsl
lock
jb
pusha
icebp
vpmulhuw
add
pop
cmp
dec
mov
mov
mov
add
das
pop
jge
bnd
dec
push
mov
loopne
mov
pop
push
fcmovbe
adc
jne
dec
jmp
xchg
loop
pop
sbb
sbb
pmovmskb
mov
sub
les
into
push
insb
jmp
xchg
in
ja
aam
lahf
or
nop
dec
mov
testl
mov
les
or
mov
jge
jbe
pop
call
ja
jp
sbbb
adc
js
jg
call
pop
ja
dec
inc
inc
sbb
sbb
sahf
jb
sbb
sub
pop
mov
arpl
out
xchg
mov
inc
dec
mov
fcmovu
or
lea
mov
sahf
mov
pushf
pop
lock
cmpsl
cld
mov
xor
shll
lock
adc
es
fldcw
push
xchg
or
mov
inc
imul
das
mov
mov
mov
mov
rorb
pop
pop
sub
jge
aam
mov
push
xor
sar
pop
lcall
std
pop
jb
in
stc
lods
mov
stos
sub
in
das
repnz
push
pop
push
add
insb
cmp
cltd
xor
xchg
test
pop
dec
mov
test
or
inc
xchg
add
shll
ja
fwait
cld
jbe
push
add
int3
add
je
cmp
xor
cmp
or
xchg
xor
pop
bound
xchg
add
mov
test
sub
inc
stos
add
jae
mov
xor
rolb
bound
adc
in
ja
adc
or
icebp
pop
jns
movsl
mov
int
repnz
jno
jp
mov
xchg
mov
ljmp
in
bound
xor
lea
popf
push
stos
xchg
cmp
shll
cwtl
or
les
mov
xchg
mov
jp
and
dec
insb
test
mov
pop
dec
scas
sub
inc
push
ret
daa
adc
inc
mov
ret
jecxz
filds
inc
inc
xchg
or
jne
inc
or
mov
sub
dec
push
aaa
loopne
fcmovu
mov
sbb
or
enter
mov
mov
repnz
inc
out
leave
fs
hlt
pushf
pop
mov
xor
arpl
add
sbb
aaa
cmp
popa
adc
icebp
scas
movl
stc
xchg
or
mov
xor
push
test
ja
cmp
cmp
adc
inc
fldenv
aas
cmpsb
repnz
out
ds
enter
daa
paddw
jno
add
jl
add
ds
lea
cmpsb
outsb
and
jb
inc
test
dec
jmp
sbb
xchg
push
and
movsb
adc
sbb
inc
ret
aaa
pop
jl
out
test
mov
scas
dec
outsb
popa
lret
bound
dec
outsb
or
imul
add
repz
dec
push
stos
xchg
cmp
jecxz
push
repz
ss
idivl
aam
shl
push
fcompl
rcrl
adc
mov
shl
lods
test
sbb
jecxz
mov
in
movsl
mov
cmc
in
dec
xlat
mov
ss
sbb
aam
fdiv
xor
inc
rcr
push
aam
sbb
into
xor
xchg
test
int
shrl
and
ds
fwait
xor
fs
xchg
