mov
mov
sub
mov
mov
cmp
jg
mov
mov
add
mov
xor
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
push
call
mov
add
mov
mov
mov
add
mov
mov
push
call
mov
add
mov
mov
mov
mov
call
ret
int3
int3
int3
push
mov
add
mov
mov
mov
sub
mov
adc
mov
cmp
ja
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
incl
and
sub
mov
leave
ret
push
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
add
and
mov
mov
mov
mov
mov
pushl
call
mov
mov
add
cmp
jl
mov
or
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
push
call
mov
mov
or
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sbb
cmp
jbe
mov
mov
mov
adc
add
mov
mov
mov
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
inc
cmp
jne
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
pushl
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
sub
mov
orl
mov
call
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
mov
addl
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
adc
mov
push
call
mov
mov
mov
test
jne
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
call
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
push
call
mov
mov
add
mov
sub
cmp
jne
mov
mov
sub
mov
mov
push
call
mov
add
mov
orl
mov
mov
call
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
sub
mov
add
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
sub
sub
mov
mov
mov
mov
inc
mov
cmp
jne
mov
and
sub
add
xor
mov
add
push
call
mov
mov
mov
mov
mov
mov
sub
mov
cmpl
ja
mov
mov
mov
mov
mov
and
call
mov
add
mov
mov
mov
inc
mov
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
mov
cmp
jg
mov
mov
mov
mov
mov
mov
xor
mov
push
call
mov
mov
mov
mov
orl
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
jg
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
push
call
mov
add
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
cmp
je
mov
add
mov
sub
mov
mov
add
mov
xor
mov
mov
mov
add
add
mov
sub
add
mov
sub
jne
mov
mov
mov
mov
mov
call
mov
add
sub
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sub
sub
xor
mov
push
call
mov
sub
addl
mov
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
mov
sub
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
adc
mov
mov
sub
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
sub
sub
sub
mov
mov
mov
mov
mov
mov
mov
xor
push
call
mov
mov
mov
mov
add
mov
mov
mov
push
mov
pushl
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
pop
ret
int3
int3
mov
sub
sub
mov
sub
mov
mov
test
ja
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
push
mov
mov
sub
mov
cmp
jae
mov
mov
sub
mov
mov
xorl
mov
mov
mov
call
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
jg
mov
mov
mov
mov
mov
mov
push
call
sbb
add
mov
call
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
add
mov
mov
sub
add
movl
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
and
mov
mov
mov
mov
sbb
call
mov
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
add
mov
mov
pushl
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
call
or
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
push
call
xor
add
mov
mov
mov
mov
pushl
call
mov
mov
mov
xor
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
pushl
call
mov
add
add
cmp
jl
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
xor
mov
push
call
mov
sub
mov
mov
mov
mov
mov
sub
mov
mov
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
call
mov
sbb
add
mov
mov
mov
add
push
call
mov
sbb
sub
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
add
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
push
call
mov
mov
mov
mov
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
add
mov
add
cmp
ja
mov
add
mov
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
sub
or
add
cmp
js
mov
add
mov
mov
push
call
mov
mov
mov
mov
add
mov
mov
mov
call
mov
mov
add
mov
adc
mov
mov
mov
pushl
call
mov
add
add
mov
mov
mov
cmp
jg
mov
mov
mov
mov
mov
mov
mov
movl
push
call
mov
mov
mov
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
and
mov
mov
mov
xor
sub
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
mov
mov
push
call
mov
mov
sub
cmp
jl
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
cmp
jg
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sub
mov
mov
sub
mov
call
mov
mov
sub
sbb
mov
mov
subl
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
cmpl
jg
mov
mov
mov
sub
mov
mov
push
call
or
add
sub
mov
mov
mov
mov
push
call
mov
or
mov
mov
mov
mov
call
mov
add
sub
mov
mov
call
xor
add
mov
mov
mov
call
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
cmp
jb
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
sub
mov
mov
push
call
mov
mov
mov
mov
mov
mov
add
push
call
mov
sub
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
cmp
jg
mov
add
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
jl
mov
mov
sub
mov
sub
mov
push
call
mov
mov
sub
mov
mov
cmp
jl
mov
mov
sub
sub
mov
mov
push
call
mov
add
mov
cmpl
ja
mov
mov
or
mov
mov
mov
sub
xor
cmp
jl
mov
mov
sub
mov
add
andl
mov
mov
mov
call
mov
add
mov
sub
mov
adc
push
call
mov
add
mov
add
mov
mov
mov
push
call
mov
add
mov
mov
mov
mov
push
call
mov
sub
mov
xor
mov
mov
push
call
mov
sub
add
cmp
jbe
mov
mov
add
mov
orl
mov
call
mov
sub
mov
cmp
jle
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sub
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
call
mov
add
mov
mov
mov
mov
mov
mov
sub
mov
push
call
mov
sub
sub
test
jbe
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
addl
call
mov
mov
xor
mov
mov
mov
pushl
call
mov
mov
add
cmp
jae
mov
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
or
mov
mov
push
call
mov
add
mov
mov
mov
mov
call
mov
sub
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
add
push
call
mov
mov
add
mov
mov
mov
mov
pushl
call
mov
mov
mov
cmp
ja
mov
mov
mov
mov
add
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sub
cmp
jg
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
xorl
mov
pushl
call
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
cmpl
jae
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
add
mov
mov
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
mov
call
mov
and
and
cmp
jg
mov
xor
sub
sub
mov
mov
mov
mov
sub
mov
xor
mov
pushl
call
mov
mov
mov
sub
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
sub
push
call
mov
add
mov
sub
mov
mov
mov
add
push
call
mov
mov
mov
mov
mov
add
push
call
mov
mov
mov
mov
mov
mov
sub
cmp
jb
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
add
mov
sub
cmp
jg
mov
mov
sub
mov
mov
mov
push
call
and
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
call
mov
add
mov
or
mov
mov
mov
pushl
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
add
mov
mov
mov
push
call
mov
add
mov
mov
mov
mov
subl
push
call
mov
mov
sub
mov
mov
mov
cmp
jg
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
mov
sub
mov
mov
mov
mov
push
call
mov
add
mov
xorl
sub
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
cmp
ja
mov
mov
mov
mov
mov
sbb
push
call
mov
add
add
cmp
jp
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
addl
mov
mov
push
call
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
sub
mov
mov
mov
push
call
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
pushl
call
mov
mov
sub
mov
mov
mov
push
call
mov
sub
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
push
call
mov
mov
add
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
push
call
mov
mov
add
mov
add
mov
push
call
mov
mov
add
mov
add
mov
mov
sub
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
sbb
mov
sub
mov
sub
mov
mov
mov
sbb
mov
sub
sub
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
xor
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
mov
mov
mov
push
call
mov
mov
mov
call
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
mov
and
mov
mov
sub
call
mov
mov
mov
push
call
mov
mov
mov
sub
mov
push
call
mov
mov
add
mov
mov
add
mov
pushl
call
mov
mov
sub
add
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
push
call
mov
lea
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
and
add
mov
sub
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
add
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
subl
mov
call
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
sbb
add
mov
add
push
call
mov
mov
mov
mov
mov
push
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
sub
push
call
mov
mov
add
mov
mov
mov
push
call
mov
mov
mov
cmp
jbe
mov
mov
mov
sub
mov
call
mov
sub
mov
cmpl
je
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
cmp
ja
mov
add
adc
mov
sub
mov
mov
mov
cmp
jae
mov
sub
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
call
mov
add
mov
sub
mov
mov
mov
call
mov
mov
sub
sbb
mov
sub
test
jae
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
mov
cmpl
ja
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
push
call
mov
or
or
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
and
mov
mov
mov
push
call
mov
sub
sub
mov
mov
push
call
mov
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
sub
mov
mov
mov
mov
sub
push
call
mov
mov
sub
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pushl
call
mov
or
mov
mov
mov
or
sub
cmpl
jne
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
push
call
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
orl
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sub
sub
mov
mov
or
pushl
call
mov
mov
cmp
ja
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
sub
mov
mov
cmp
je
mov
sub
mov
movl
mov
mov
mov
push
call
mov
mov
add
sub
mov
mov
mov
mov
add
mov
mov
mov
mov
add
sub
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
mov
push
call
mov
mov
add
cmp
ja
mov
sub
mov
sub
push
call
mov
add
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
cmp
jg
and
mov
mov
add
mov
mov
mov
push
call
mov
mov
sub
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
call
mov
sub
mov
sub
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
pushl
call
mov
mov
add
sub
mov
mov
push
call
mov
sub
mov
add
mov
mov
call
mov
mov
mov
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
movl
mov
pushl
call
mov
and
mov
cmp
je
mov
mov
mov
mov
sub
mov
mov
pushl
call
mov
sub
sbb
mov
mov
mov
mov
mov
add
mov
mov
push
call
mov
mov
add
mov
or
mov
mov
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
cmp
jl
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
call
mov
add
mov
cmpl
jbe
mov
mov
add
mov
mov
mov
mov
add
mov
pushl
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
add
mov
cmp
jae
mov
mov
mov
sub
mov
mov
mov
mov
mov
add
push
call
mov
add
mov
mov
cmpl
jne
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
sub
mov
sbb
call
mov
mov
add
add
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
pushl
call
mov
add
mov
mov
mov
call
mov
xor
mov
sub
test
jne
mov
mov
add
mov
mov
mov
mov
mov
call
mov
sub
add
mov
mov
mov
mov
push
call
mov
mov
xor
mov
addl
push
call
mov
mov
mov
sub
cmp
jg
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
or
sub
cmp
jl
mov
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
sub
mov
andl
mov
mov
pushl
call
mov
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
add
mov
cmpl
jae
adc
mov
sub
mov
mov
mov
push
call
mov
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
mov
mov
pushl
call
mov
add
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
push
call
mov
or
mov
mov
push
call
mov
sub
mov
mov
call
mov
mov
mov
mov
mov
mov
push
call
mov
sub
mov
sub
test
ja
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
and
push
call
mov
mov
mov
mov
add
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
xor
mov
mov
mov
push
call
mov
mov
xor
mov
mov
mov
push
call
mov
add
mov
mov
push
call
mov
mov
mov
cmpl
jg
mov
mov
add
mov
subl
mov
mov
call
mov
mov
sub
mov
mov
mov
pushl
call
mov
mov
sub
mov
mov
mov
pushl
call
mov
xor
xor
mov
mov
mov
push
call
add
sub
mov
cmp
jbe
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
call
mov
mov
add
cmpl
ja
mov
mov
mov
add
mov
push
call
mov
mov
add
mov
cmp
je
mov
mov
mov
mov
mov
sub
orl
push
call
mov
mov
mov
add
mov
mov
push
call
mov
mov
mov
test
ja
mov
mov
sub
mov
push
call
mov
mov
sub
mov
mov
or
sub
call
mov
sub
sub
mov
mov
mov
sub
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
sub
mov
mov
mov
mov
mov
add
mov
mov
test
jns
mov
mov
sub
mov
xor
mov
orl
mov
mov
add
mov
mov
mov
adc
mov
push
call
mov
mov
mov
mov
mov
mov
push
call
mov
sub
mov
mov
mov
mov
call
mov
mov
add
mov
sub
cmp
jb
mov
mov
sub
mov
sub
mov
mov
push
call
mov
xor
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
call
mov
mov
add
mov
mov
push
call
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
cmp
je
mov
sub
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
add
mov
add
mov
mov
push
call
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
add
addl
mov
sub
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
add
mov
cmp
ja
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sub
mov
mov
mov
mov
push
call
mov
mov
sub
mov
cmpl
jne
mov
mov
mov
mov
call
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
orl
mov
mov
push
call
mov
add
mov
sub
mov
mov
mov
call
mov
mov
add
mov
mov
push
call
mov
mov
sub
xor
mov
mov
push
call
mov
mov
add
mov
mov
mov
push
call
mov
mov
cmp
jbe
mov
mov
xor
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sub
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
cmpl
jb
mov
adc
mov
mov
mov
call
mov
sub
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
pushl
call
mov
mov
add
cmp
je
mov
mov
mov
mov
and
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
call
mov
mov
mov
mov
mov
mov
add
mov
cmpl
jbe
mov
mov
add
mov
add
mov
mov
mov
mov
and
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
push
call
mov
sub
mov
mov
push
call
mov
mov
add
mov
cmp
jne
mov
mov
or
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
add
cmp
jge
mov
mov
sub
mov
mov
call
mov
mov
sub
or
mov
push
call
mov
mov
mov
mov
mov
call
mov
sub
mov
cmp
jg
mov
sub
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
add
test
jbe
mov
mov
add
lea
mov
mov
mov
add
push
call
mov
mov
mov
xor
mov
mov
mov
sbb
push
call
mov
mov
add
mov
mov
mov
push
call
mov
mov
mov
sub
mov
sub
mov
push
call
mov
mov
mov
mov
mov
sub
mov
push
call
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
call
mov
add
adc
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
push
call
mov
mov
mov
mov
sub
mov
mov
call
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
sub
add
sub
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
movl
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jb
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
xor
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sub
cmp
jne
mov
mov
mov
mov
add
mov
mov
mov
add
mov
sbb
mov
call
mov
add
mov
mov
push
call
mov
add
or
cmp
je
mov
mov
mov
sub
mov
mov
call
mov
mov
sub
cmp
jb
lea
mov
mov
add
mov
mov
push
call
mov
mov
and
mov
mov
push
call
mov
sub
mov
mov
mov
mov
push
call
mov
mov
sub
xor
mov
mov
push
call
mov
mov
xorl
mov
pushl
call
mov
and
mov
mov
mov
adc
push
call
mov
sub
add
andl
mov
mov
mov
mov
add
mov
pushl
call
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
add
mov
sub
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
push
call
mov
add
mov
mov
mov
push
call
mov
mov
sub
mov
mov
cmp
jae
mov
mov
mov
push
call
mov
sub
mov
mov
or
mov
pushl
call
mov
mov
sub
mov
mov
push
call
mov
add
test
je
mov
sub
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
cmp
jb
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
adc
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
call
mov
sbb
mov
mov
mov
call
mov
sub
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
call
mov
add
sub
mov
mov
add
mov
add
mov
mov
mov
mov
push
call
mov
mov
mov
mov
cmp
jae
sub
mov
add
mov
mov
call
mov
mov
add
mov
mov
pushl
call
mov
sub
mov
mov
mov
or
pushl
call
mov
mov
sub
sub
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
add
mov
sub
mov
mov
mov
xorl
push
call
mov
mov
cmp
ja
mov
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
cmp
jl
mov
mov
add
mov
mov
mov
mov
pushl
call
mov
add
add
mov
mov
push
call
mov
mov
sub
mov
mov
cmp
jae
mov
mov
sub
mov
mov
sub
mov
mov
push
call
mov
sub
mov
add
cmpl
je
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
adc
mov
push
call
mov
add
sub
mov
subl
mov
or
call
mov
mov
add
mov
mov
mov
mov
mov
xor
mov
push
call
mov
mov
mov
or
mov
xorl
mov
push
call
mov
mov
add
mov
call
mov
mov
mov
mov
cmp
ja
mov
add
mov
sub
mov
push
call
mov
mov
mov
mov
test
ja
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
cmp
jg
mov
mov
mov
mov
mov
call
mov
mov
sub
sub
mov
mov
call
mov
mov
mov
mov
cmpl
jb
mov
mov
add
mov
mov
mov
mov
call
mov
add
mov
mov
mov
mov
push
call
sbb
add
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
push
call
mov
mov
add
lea
mov
mov
mov
mov
call
mov
or
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
or
add
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
mov
mov
sub
mov
mov
mov
push
call
mov
add
sbb
mov
mov
mov
mov
mov
sub
add
mov
mov
push
call
mov
mov
mov
mov
and
push
call
mov
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
push
call
mov
xor
mov
mov
mov
mov
xor
mov
mov
mov
add
or
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
andl
mov
call
mov
sbb
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
add
mov
and
mov
push
call
mov
mov
mov
mov
mov
cmp
ja
and
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
call
mov
mov
mov
mov
mov
push
call
mov
sub
mov
sub
cmp
je
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
call
mov
mov
add
mov
cmp
jg
mov
or
sub
mov
mov
add
mov
mov
add
mov
mov
mov
call
mov
mov
sub
mov
mov
push
call
mov
mov
mov
mov
mov
cmp
jl
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
call
mov
mov
mov
and
cmp
jb
mov
mov
mov
mov
mov
mov
push
call
mov
add
mov
sub
cmpl
jne
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
add
mov
call
mov
sub
mov
mov
mov
pushl
call
mov
mov
mov
and
cmpl
jg
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
add
mov
xor
mov
mov
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
push
call
mov
sub
add
mov
mov
mov
pushl
call
mov
add
mov
cmp
jbe
mov
mov
add
mov
mov
mov
mov
push
call
mov
add
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
push
call
mov
mov
sbb
mov
mov
push
call
mov
sub
add
mov
mov
push
call
mov
mov
add
mov
add
mov
mov
mov
push
call
mov
mov
add
orl
mov
sub
cmp
jl
mov
sub
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
subl
push
call
mov
mov
mov
mov
mov
add
push
call
mov
mov
add
mov
mov
mov
call
mov
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
inc
cmp
jne
mov
mov
sub
mov
add
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
push
call
call
pushl
call
call
mov
sub
cmpl
jg
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
cmp
jl
mov
mov
mov
or
call
mov
add
mov
mov
mov
mov
add
mov
add
mov
mov
mov
call
mov
sub
mov
sub
mov
mov
mov
push
call
call
mov
mov
mov
or
mov
pushl
call
mov
mov
sub
sub
mov
mov
call
mov
mov
sub
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
sub
mov
mov
call
mov
add
mov
mov
mov
mov
call
call
mov
mov
mov
mov
pushl
call
mov
add
mov
add
call
mov
mov
mov
call
mov
mov
mov
sub
mov
or
mov
mov
mov
mov
add
mov
mov
mov
call
push
call
int3
int3
int3
push
mov
mov
mov
mov
sub
mov
mov
call
mov
mov
sub
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
and
mov
mov
mov
mov
mov
or
push
mov
pushl
pushl
push
call
mov
mov
add
mov
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jg
mov
mov
mov
mov
add
mov
mov
mov
mov
leave
ret
push
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
or
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
add
mov
mov
mov
mov
sub
cmp
jb
mov
mov
mov
sub
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
add
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
ret
int3
int3
int3
push
mov
add
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
pop
ret
int3
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
pop
ret
push
mov
mov
add
mov
adc
mov
mov
sub
or
cmp
jl
and
sub
andl
xorl
mov
call
mov
mov
mov
mov
sub
mov
mov
add
cmp
jbe
mov
mov
mov
mov
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
add
mov
mov
add
mov
mov
sub
test
je
mov
mov
mov
add
mov
mov
addl
mov
mov
mov
push
mov
lea
push
mov
push
call
and
mov
mov
mov
add
mov
mov
mov
mov
pushl
lea
mov
push
add
push
lea
push
call
mov
mov
sub
sub
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
add
mov
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
and
sub
mov
mov
mov
mov
push
push
call
mov
add
mov
mov
mov
sub
mov
mov
or
mov
mov
mov
mov
pop
ret
int3
push
mov
mov
mov
sub
mov
sub
cmp
jg
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
mov
mov
add
mov
add
mov
subl
mov
mov
mov
sub
mov
cmp
jne
mov
mov
mov
sub
mov
mov
xor
adc
mov
push
call
mov
mov
add
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
and
mov
mov
mov
mov
sbb
push
call
mov
sub
mov
mov
mov
call
mov
mov
mov
sub
mov
add
mov
mov
mov
mov
sbb
pushl
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
sub
mov
mov
lea
sub
cmp
jae
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
add
add
add
add
add
inc
dec
cmp
cmc
loope
or
add
cmp
inc
ss
aaa
pop
sti
xlat
fs
out
fsts
aaa
popa
out
ficompl
sub
cmp
pop
push
sbb
jle
decl
xchg
sbb
jne
pushf
cli
js
dec
mov
or
push
xor
xchg
lret
mov
sbb
fs
insl
or
sbb
xchg
xchg
lcall
xchg
pushf
pop
or
mov
ret
add
xchg
xchg
pushf
pop
or
sbb
out
and
aad
or
mov
push
lea
or
mov
sbb
sbb
or
sub
mov
pusha
cli
xchg
fcmovb
fiadds
rcll
or
add
cmpsb
icebp
popa
mov
xor
pushf
and
mov
sub
jl
pop
xchg
out
cmp
pop
sahf
scas
out
js
add
push
push
rcrl
adc
mov
xchg
sbb
add
jns
sub
or
dec
cs
pop
fsubs
lock
sub
rcrl
and
pop
sub
cwtl
shll
add
aaa
rcll
xor
enter
lret
addl
dec
stos
ljmp
xchg
imul
pop
testb
or
mov
jns
lret
sbb
pop
jns
or
dec
cmpsl
repz
push
xchg
jmp
or
sub
or
int3
lahf
push
shrl
sarl
or
sub
loop
sub
sbb
and
adc
popa
or
push
aaa
mov
push
xor
jmp
shll
or
jp
sahf
lock
rcrl
imul
xchg
sbb
jns
ss
movsb
inc
int3
jb
sub
sub
aad
movsb
jo
xchg
adc
je
adc
add
mov
loop
lock
lock
pop
ss
push
sahf
push
lcall
das
sbb
sub
or
push
or
fldenv
into
nop
sbb
add
cwtl
repnz
aaa
fistpl
dec
sub
jp
mov
or
pushf
in
js
or
push
xchg
mov
cmp
sbb
lahf
lock
sbb
fstps
cs
sbb
popf
xchg
lcall
and
sbb
or
sub
xchg
mov
mov
mov
cltd
fdiv
in
repnz
cs
sbb
or
xchg
push
xchg
sbb
xchg
sbb
or
sbb
or
adc
cmp
rcrl
or
xor
pop
div
pop
sbb
or
movsb
repz
ljmp
xchg
sbb
jmp
jae
or
jno
sub
sub
jecxz
fisubl
mov
xor
mov
into
sbb
or
fidivl
xchg
mov
mov
sbb
pop
add
sub
xchg
xchg
pushf
push
lock
adc
or
pushf
testl
cld
jmp
xchg
mov
imul
or
fisttps
xchg
sub
and
fldenv
idivb
mov
icebp
shrb
movsb
xchg
call
mov
mov
sbb
or
mov
mov
dec
std
insl
lock
sub
cmc
push
sbb
adc
les
dec
or
sbb
mov
xchg
pusha
lahf
lock
cs
mov
or
dec
or
ds
xchg
push
push
or
clc
lahf
call
xchg
adc
jge
mov
xchg
fs
jne
xchg
mov
and
or
sbb
or
jo
lock
or
xchg
mov
lds
sahf
dec
arpl
imul
or
sbb
rsqrtps
aaa
or
fcomps
xchg
lret
ficompl
ljmp
push
aad
mov
cmp
xor
and
xchg
clc
mov
lock
add
or
and
xchg
push
or
fstps
dec
out
js
rcrl
out
xchg
sbb
ljmp
sub
mov
mov
or
pushl
rcrl
mov
jle
sub
jecxz
stc
lea
or
jo
jns
mov
sbb
imul
or
ja
inc
dec
sbb
int3
pop
xor
sub
jns
ss
xchg
sbb
or
loop
or
clc
lahf
lock
outsb
or
sbb
or
lcall
rcrb
stos
aam
cmp
or
sbb
insl
cwtl
adc
xchg
sbb
lock
aaa
jbe
sbb
or
pop
or
sbb
fstpt
dec
lahf
lock
ss
xchg
lret
xchg
sbb
jns
ss
xchg
les
or
add
xchg
sbb
lock
imul
xchg
cmpsb
lahf
lock
cli
mov
jo
lahf
lcall
or
mov
adc
or
or
inc
or
sbb
or
sbb
cltd
xchg
or
sbb
jae
roll
dec
loope
pop
fidivrl
xor
das
xchg
fiaddl
or
push
pusha
fdivrs
xchg
js
sbb
sbb
jmp
sbb
arpl
pop
sub
sbb
mov
icebp
jo
jle
loop
cmp
out
sahf
ret
push
out
or
sbb
inc
xchg
sbb
sbb
sub
hlt
add
call
sub
mov
dec
xchg
mov
ret
int
xchg
test
pop
call
cmp
cli
or
pushf
sti
or
outsl
lcall
jae
jg
repz
xor
out
in
leave
mov
ss
push
ret
aaa
inc
scas
mov
mov
or
rolb
pop
fdivr
inc
test
pop
add
inc
sahf
sbb
leave
mov
rorb
gs
cmp
cli
addr16
cld
rorl
dec
inc
andl
sbb
jl
xor
xlat
xor
lret
jecxz
stos
lret
cld
xlat
jp
pop
xchg
ret
push
pop
fidivrs
mov
scas
inc
scas
adc
test
jl
fistpll
sub
ja
mov
xor
jno
clc
sub
mov
xor
bound
push
jmp
into
pop
mov
insl
jmp
dec
sub
ror
xor
jns
test
mov
inc
shll
sbb
mov
adc
arpl
and
popa
into
sbb
or
subl
cmp
mov
adc
mov
xor
shl
fcmovb
inc
das
fadd
add
mov
jae
rclb
mov
iret
push
ret
xchg
sbb
or
out
data16
daa
xor
or
mov
ret
nop
mov
lock
add
xchg
and
sub
xchg
andb
sub
xchg
sbb
or
jbe
xor
xchg
cwtl
sbb
jno
stos
sbb
or
cmp
in
xor
aas
mov
xlat
fbld
jns
outsl
sbb
lds
cs
lds
lahf
dec
fnstenv
add
pop
add
xor
out
int3
mov
or
sbb
mov
xchg
sub
and
adc
or
sbb
mov
xchg
sbb
or
sbb
or
sbb
daa
xchg
sbb
repz
lahf
lock
xchg
or
sbb
or
sbb
adc
add
jmp
mov
sbb
or
sbb
in
jle
mov
pop
dec
cltd
sahf
lock
pop
inc
pop
sub
popa
sbbl
xchg
sbb
cmp
jb
xor
adc
repz
sbb
sbb
sbb
push
arpl
and
js
ss
cmpsl
pop
inc
fstl
xor
or
sbb
or
into
scas
out
js
pop
aam
or
mov
jo
rclb
adc
jo
cmc
pop
in
adc
sbbb
aaa
in
pop
jl
fs
jle
jo
jmp
mov
ss
dec
sub
dec
and
les
into
rol
sbb
or
inc
mov
xchg
movsb
jmp
nop
sbb
adc
inc
or
f2xm1
or
jns
mov
adc
in
pop
pop
sub
xchg
out
rorl
lods
hlt
or
scas
jns
lcall
mov
mov
xor
xchg
xchg
movsb
xor
js
xor
nop
in
sbb
jbe
xorl
sbb
ja
dec
mov
push
nop
sbb
xchg
push
jne
lock
mov
sbb
mov
int3
leave
stos
jne
lahf
cmp
adc
sahf
lock
and
scas
inc
or
mov
push
nop
sbb
bound
pop
lock
jp
xchg
inc
mov
add
xor
xchg
inc
mov
nop
cmpsb
or
sub
xchg
inc
jne
lock
rorb
sbb
fldcw
movsb
jmp
nop
sbb
jecxz
loop
lret
adc
dec
loopne
sub
xchg
or
sbb
enter
lret
sbb
lock
mov
stos
std
nop
stc
js
cld
in
ss
fbstp
lret
or
inc
pop
cld
ljmp
adc
mov
xchg
adc
cmp
pop
sbb
push
leave
push
push
dec
jns
push
add
push
add
pop
js
add
add
pop
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ja
add
add
add
add
add
push
add
add
add
add
jno
inc
add
add
add
jne
add
add
push
add
aaa
add
add
add
inc
add
add
add
add
add
add
add
add
add
push
add
add
add
insb
add
add
add
add
add
add
add
add
push
add
add
add
add
dec
add
push
push
add
add
add
dec
add
add
add
inc
add
add
push
inc
add
add
add
inc
add
add
add
add
add
add
push
push
add
imul
add
add
add
jbe
add
add
add
add
jb
add
add
add
dec
imul
je
insl
add
push
bound
add
add
add
add
add
add
add
outsb
add
jno
add
pop
je
push
add
add
add
push
add
inc
add
add
jne
dec
add
add
add
add
add
add
add
jp
add
insb
jo
add
add
add
add
push
add
add
add
pop
add
add
xor
add
push
jae
dec
add
dec
add
add
add
add
dec
add
add
add
add
add
add
dec
add
jp
imul
add
add
add
add
add
dec
add
add
add
add
aad
fs
push
aas
cmp
imul
enter
movsb
mov
je
dec
fs
adc
psubq
je
add
and
lea
cld
xchg
cli
inc
add
cli
push
icebp
or
or
and
jae
neg
ret
and
push
iret
clc
push
cmp
xlat
call
or
stos
cmp
cmp
orl
mov
fwait
gs
inc
jae
fld1
lods
xor
cmp
pop
pop
lods
add
mov
pop
pop
movsb
jmp
pop
lods
pop
pop
push
stc
pusha
jne
xchg
jmp
push
cmpl
popf
xchg
push
sarl
xor
xorl
imull
pop
mov
rcrl
fadd
jae
dec
shlb
mov
inc
xor
scas
xchg
and
dec
add
cmpsl
lret
pop
stos
addr16
push
push
mov
mov
jge
fmuls
adcl
mov
mov
movsl
enter
out
add
jno
or
dec
adcb
je
push
xor
ds
out
mov
add
xor
sar
leave
push
cmp
pushf
ret
daa
xchg
mov
loop
hlt
sbb
cmp
mov
fldcw
repz
cmp
je
pushf
lea
pop
sar
mov
scas
xchg
mov
cmp
rorl
push
cwtl
stc
and
sbb
jne
fstpl
jb
sbb
loop
jecxz
aaa
inc
test
xor
xchg
mov
and
scas
sub
pop
xor
mov
lock
repnz
daa
jbe
pop
sbb
inc
dec
lcall
test
imul
lods
and
or
mov
mov
inc
or
dec
sbb
inc
scas
jae
xchg
das
dec
mov
ret
stos
jb
call
mov
mov
cwtl
pop
jno
cltd
mov
ljmp
call
ljmp
xor
pop
fisubl
fdivrs
pop
loopne
out
loope
icebp
stos
lret
dec
and
pop
in
mov
enter
call
sbb
pusha
call
pop
pop
test
xor
in
mov
xor
jle
mov
fwait
jle
mov
cmp
jne
or
shr
sbb
scas
jns
test
push
push
daa
fisubrs
call
mov
das
add
out
jno
test
jge
mov
dec
cmp
cs
sub
xchg
scas
cs
jmp
jb
adc
cmp
push
xor
jmp
or
inc
je
mov
jmp
sahf
out
or
testl
add
out
adc
loopne
sub
in
fmull
cmp
push
mov
call
pop
push
sbb
jno
cmpsb
fidivrs
cmpsl
and
jno
insl
sbb
nop
orb
cmp
pop
lods
leave
sbb
mov
js
iret
inc
add
rorb
jb
dec
lock
mov
subb
sbb
stc
cmpsb
lods
iret
push
inc
sti
enter
inc
sbb
or
iret
mov
mov
jne
sub
in
cs
sbb
push
adc
nop
push
mull
jp
xor
popf
or
push
shrl
out
mov
pop
push
out
push
pop
push
sbbb
jg
lds
sub
cmp
test
ljmp
vmwrite
xchg
pop
repz
das
mov
pusha
movsb
out
lcall
mov
in
aad
loop
mov
mov
push
sarl
test
add
pop
dec
jge
push
scas
psubusb
and
outsl
cmp
cmpb
or
xor
dec
pusha
pop
fsubrl
jnp
daa
xchg
nop
incl
movsb
pop
cmpb
push
push
push
je
rcll
sub
fcmovnu
call
ljmp
and
andb
notb
aaa
call
test
idivl
std
inc
jae
call
pop
or
lock
xchg
cmp
scas
or
xor
cli
push
hlt
mov
cmp
lods
mov
sbb
pop
mov
push
ret
insl
add
enter
xchg
adc
rcrl
dec
stos
dec
pop
cmp
pop
fcoml
je
xchg
push
pop
cli
inc
xlat
sub
aaa
add
xchg
std
xchg
ret
outsl
cmp
in
adcb
test
or
push
jge
mov
add
lock
repz
mov
and
sub
mov
ret
jmp
push
xlat
jnp
sbb
mov
xor
push
mov
pop
cmpsb
cli
repz
pop
jmp
lahf
cld
sub
insb
clc
inc
out
fisubs
xchg
add
pop
add
rorb
sarb
lock
std
add
sub
push
pop
inc
push
cmp
int
jbe
xchg
mov
mov
inc
cmp
test
sub
mov
inc
push
call
fwait
loopne
aas
xor
call
adc
mov
xor
cmpl
dec
xor
or
mov
call
mov
adc
fs
dec
mov
cmp
or
pop
mov
mov
mov
mov
dec
mov
imul
aas
inc
lea
ds
call
nop
mov
or
movb
jmp
aad
mov
or
add
pop
inc
in
rcr
cmp
push
pop
inc
sub
cwtl
pop
into
cmp
cmc
leave
sarl
or
mov
mov
push
jo
sbb
dec
pop
xchg
push
loope
vmovlps
inc
out
je
lea
mov
les
imul
xchg
xchg
xor
repz
hlt
lret
dec
js
mov
shl
mov
repz
cmp
push
adcb
cwtl
cli
imul
or
adc
jge
jnp
jns
hlt
adc
push
nop
fmulp
int
add
out
std
push
push
insb
inc
cmp
arpl
and
xor
repz
cs
popa
inc
jmp
or
or
mov
and
push
mov
popa
jns
pop
cmp
mov
mov
inc
clc
mov
icebp
mov
icebp
mov
jmp
dec
inc
imul
mov
mov
pusha
and
sub
xchg
add
js
xlat
addl
or
addr16
or
mov
mov
xor
adc
fmul
psubsb
data16
in
adc
iret
or
pop
fmuls
mov
mov
xor
inc
adc
js
dec
jo
and
scas
ds
pop
adc
add
xchg
in
fadds
aam
test
imul
jne
inc
xchg
test
xlat
dec
cwtl
cmp
inc
or
loopne
adc
inc
mov
outsb
adc
cs
imul
sub
data16
cmp
pop
sarb
shrb
add
inc
inc
or
pop
cli
jne
in
or
shl
xor
sbb
addr16
fwait
in
movsb
push
sbb
sub
mov
sbb
lock
mov
add
sahf
sti
push
or
fisttpl
sbb
xchg
shl
or
stos
dec
dec
push
push
cltd
mov
shll
lret
jmp
bound
push
sbb
xor
jl
movsl
mov
sbb
adc
insl
push
call
pop
outsb
push
cwtl
dec
inc
jmp
lret
push
sbb
pop
and
jns
mov
loop
cmp
pop
push
jp
nop
cmp
rorl
add
dec
xorb
in
call
repnz
loopne
loopne
sub
add
inc
adcl
mov
mov
in
daa
inc
pop
pop
cmpsl
or
fadds
lds
or
inc
in
add
mov
adc
xchg
jbe
jne
rol
mov
andl
movsl
adc
mov
pop
es
push
sti
inc
cmp
in
sarb
ja
pop
out
jae
inc
mov
aam
repz
xchg
stos
add
inc
addl
rclb
pop
pop
mov
mov
sbb
inc
and
pop
push
mov
xlat
repz
jmp
ljmp
or
repz
ret
jecxz
inc
or
xor
orl
mov
inc
stc
addr16
cltd
cmpsl
lock
dec
in
addr16
dec
mov
xchg
out
loopne
movsb
adc
and
loope
push
arpl
xor
push
mov
push
frstor
sbb
pop
xchg
push
loop
pop
add
add
cmp
push
jo
shll
fxch
adc
aaa
pop
sbb
mov
in
fsubs
iret
mov
shlb
sbbl
je
in
jecxz
sbb
cmp
dec
fldcw
bound
jg
cwtl
xchg
adc
adc
push
hlt
pop
lea
shl
jne
mov
push
into
jns
mov
fcompl
fs
lahf
fmull
add
out
inc
out
cwtl
inc
fistl
push
pop
xor
fldt
xor
fxch
imul
add
leave
xchg
cmpsb
sub
fnstsw
adc
std
push
test
rcr
xor
lret
or
pushf
pop
push
scas
das
dec
xor
mov
pushf
sahf
repz
ret
inc
xor
sub
jne
call
cmpsb
dec
loopne
aaa
enter
mov
sbb
inc
sub
inc
ljmp
repnz
in
cmpsb
in
push
jge
pusha
push
mov
cli
xchg
js
cld
xchg
dec
das
ljmp
pop
ficoml
stc
movsb
sub
jmp
popf
adc
lcall
faddl
ret
or
mov
pop
dec
hlt
fwait
lods
subb
pop
icebp
in
push
lcall
testl
fadds
out
mov
test
or
subb
dec
cmp
jns
lcall
xor
jmp
in
jp
pop
test
pop
call
xchg
lea
call
inc
test
inc
les
call
pop
in
testl
movsl
mov
adc
xchg
jle
orb
test
xor
fidivrl
pop
dec
in
and
jae
xchg
nop
jne
pop
sub
data16
out
movsl
sub
jne
js
jge
bound
repnz
sbb
cmp
in
sub
clc
mov
cmp
je
pop
test
adc
mov
ror
add
mov
adc
xor
daa
lods
jb
push
push
call
fcomps
fldt
xchg
loopne
je
add
dec
jmp
xchg
aas
xchg
aas
sbb
jecxz
fsubrp
cs
imul
xchg
sbb
je
push
push
mov
or
cmp
mov
icebp
jg
xchg
push
cmpsb
fwait
mov
push
sahf
enter
dec
mov
push
lret
inc
pop
mov
popf
or
nop
test
decl
jle
cs
int
mov
push
pop
inc
jg
iret
test
dec
daa
push
rorb
xchg
nop
pushfw
pop
sub
xchg
lock
mov
push
je
fmul
rcl
jno
xor
mov
cmpsb
fwait
sub
jae
add
add
jbe
add
add
inc
add
dec
add
add
jne
add
add
add
jbe
add
add
add
add
add
jae
add
add
add
add
add
add
add
add
push
add
popa
add
pop
add
dec
add
add
add
add
add
push
popa
add
jbe
add
js
add
add
add
aaa
add
bound
add
add
push
add
data16
add
add
add
add
add
add
insl
add
xor
add
add
add
add
push
add
jns
add
add
add
cmp
add
add
add
add
add
add
inc
add
add
add
arpl
add
add
xor
add
add
add
outsl
add
add
add
pop
dec
add
add
add
add
add
jne
add
add
add
add
add
aaa
xor
jp
inc
dec
dec
add
add
push
add
imul
add
add
add
add
jbe
add
inc
add
jae
add
inc
jne
add
add
add
add
add
js
add
jp
jbe
add
add
add
add
add
dec
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
push
data16
xor
push
add
add
add
add
insb
add
add
add
inc
dec
xor
add
add
jb
add
add
add
add
add
add
add
add
xor
add
add
data16
jo
add
add
add
add
add
add
lods
inc
icebp
mov
push
dec
mov
pop
test
imul
jb
imul
mov
roll
mov
pop
iret
out
adc
stc
repz
call
jae
pop
jne
aad
dec
cmp
filds
jmp
mov
mov
push
ret
cltd
test
in
mov
jbe
mov
push
mov
pop
shll
mov
in
call
mov
or
push
cmc
mov
mov
testb
push
jns
jg
and
or
decb
addr16
and
dec
cmp
push
leave
inc
fcomps
clc
pop
dec
push
push
mov
mov
jmp
scas
call
movsl
dec
call
xchg
mov
inc
mov
outsl
rcl
mov
pop
loop
sub
cwtl
inc
fcmovnb
mov
inc
cwtl
lret
push
cld
add
cmpsl
pop
push
push
mov
in
jns
jb
and
pop
dec
xlat
mov
sub
xchg
cmp
je
or
sub
jmp
andb
mov
or
je
sbb
jmp
and
iret
pop
shr
mov
sti
pushf
faddl
sbb
adc
jmp
sub
ljmp
in
push
add
push
jecxz
fwait
and
push
repz
sti
push
nop
inc
jge
pop
fstpl
sti
call
jge
fwait
cmpsb
rcl
jne
xlat
lds
or
icebp
dec
add
into
shr
mov
fstpt
add
rcrl
frstor
mov
cmp
test
or
fstpt
inc
or
out
lea
jne
xor
push
shl
push
call
inc
push
rclb
call
inc
shll
loop
mov
test
and
xor
dec
dec
lcall
stos
test
rcr
jp
enter
xchg
mov
ret
xchg
fdiv
cmp
or
call
or
into
and
push
jnp
and
ret
out
je
sub
mov
les
lret
add
xlat
jle
sbb
xchg
jmp
jne
jmp
insb
aas
push
jge
mov
dec
add
inc
repz
adc
rcrl
mov
mov
cmp
cmp
jp
mov
pop
push
jmp
movsb
pop
push
jb
outsl
sub
add
mov
sub
mov
jp
outsl
shr
pop
fsts
jle
mov
fimull
push
mov
push
insb
inc
rcll
fwait
pop
xchg
les
rorb
jne
push
adc
push
dec
inc
xor
rclb
mov
cwtl
mov
test
and
fsubl
mov
add
mov
pcmpgtb
and
mov
call
insb
ret
mov
mov
mov
fcmovnu
inc
lcall
daa
mov
jl
or
popf
shrb
in
push
xchg
lcall
les
xor
sub
jl,pn
push
mov
or
mov
mov
mov
jle
int3
cmp
hlt
loop
leave
and
les
jge
mov
ror
add
push
aaa
pop
dec
call
lods
pop
pop
outsb
sub
rsqrtps
xchg
jl
xchg
loopne
jl
imul
xor
pop
sti
out
lea
add
cli
repz
cld
pop
test
test
jb
orl
sub
int
xor
add
fsubr
sbb
icebp
add
je
sub
frndint
jp
je
pop
jp
jnp
jge
mov
outsl
jl
add
jle
leave
cmpw
subb
cltd
ret
ja
jmp
mull
cmpxchg
fstl
adc
mov
inc
xchg
add
xor
testb
mov
andb
add
mov
gs
loop
dec
push
dec
lea
daa
or
xchg
adc
dec
xor
out
sbb
ret
pop
cmp
enter
cmp
cwtl
test
cwtl
fdivr
and
fimull
inc
xor
pop
js
scas
mov
clc
std
dec
inc
jmp
adcl
sub
sub
mov
xchg
dec
pop
mov
sub
imul
jle
sbb
inc
dec
sbb
mov
mov
inc
mov
mov
inc
add
sub
dec
arpl
mov
jmp
fisubrs
mov
mov
xchg
and
mov
cmp
pusha
mov
iret
ds
arpl
dec
push
sbb
stc
jns
jecxz
dec
cmp
push
nop
sbb
rcrb
mov
dec
push
movb
mov
call
stc
pop
mov
aaa
nop
icebp
cli
lds
pop
ljmp
arpl
jge
mov
pop
jmp
aaa
mov
fimull
shr
push
push
loop
lcall
mov
mov
ret
lea
xchg
addl
bound
push
cltd
dec
nop
js
fldt
cltd
in
dec
push
push
mov
jle
fimuls
roll
xchg
addr16
adc
scas
mov
std
lea
mov
mov
xchg
push
inc
xor
insb
hlt
in
cmp
sar
mov
and
je
jmp
imul
jmp
mov
mov
xchg
stc
push
fnstcw
cmpsl
add
xor
shrl
lahf
cmp
sarl
ja
pop
jmp
jo
ret
jne
cmp
fadd
cltd
mov
mov
push
lret
lea
loop
pop
fisttpll
pop
dec
lea
lea
sbb
sub
fldcw
in
jmp
add
cwtl
fmuls
fdivs
xchg
jbe
dec
mov
mov
inc
ret
pop
mov
sbb
aad
hlt
addb
pop
repz
push
or
or
call
add
fsubs
stc
push
leave
push
mov
call
dec
or
jecxz
movl
gs
rcrb
inc
adc
inc
mov
or
inc
dec
pop
movb
xchg
add
cs
jge
jmp
hlt
fldl2e
dec
pushf
jne
clc
jo
in
pushf
add
lds
leave
mov
dec
pop
jne
sub
mov
sti
aad
dec
or
sub
pop
imul
inc
add
mov
xchg
cmp
mov
or
or
sbb
push
mov
add
jmp
js
call
push
outsl
mov
cwtl
hlt
or
or
mov
out
fadds
or
gs
je
sub
add
jae
nop
ret
cmp
lea
or
int
es
test
sub
repnz
inc
mov
decl
cmc
pop
inc
outsb
shrb
or
or
and
mov
xchg
scas
aam
test
dec
clc
sub
call
pop
adc
push
push
push
pextrw
mov
cmp
test
fbstp
inc
mov
jae
movsb
fcomps
pop
outsl
cmp
and
inc
push
inc
neg
lcall
cmp
add
jnp
xchg
jb
cwtl
mov
enter
pushl
dec
insl
into
add
push
nop
dec
ja,pt
jg
or
push
fdivl
and
xchg
mov
add
mov
cmpsb
lods
stos
insl
add
lods
js
or
and
repnz
add
xor
cmc
sub
hlt
test
mov
xor
xor
adc
adc
sub
push
into
repz
push
dec
push
ja
test
adcb
jb
cmpsb
xchg
jno
add
xlat
sbbl
data16
mov
call
push
fs
push
bound
shlb
push
rorb
hlt
call
mov
cmp
mov
ret
dec
lock
add
aaa
gs
sub
movsb
pop
xlat
ret
and
ret
sbb
xchg
pop
or
lret
stos
and
dec
lds
mov
mov
out
xlat
jmp
adc
add
cmp
cmp
ficompl
jno
popa
push
jp
imul
das
test
mov
add
push
jno
and
rorl
cmp
ret
sbb
mov
sbb
out
cmpl
mov
pop
sti
pop
sub
sub
aas
push
xlat
cmpl
sti
cltd
jl
mov
adc
add
lea
inc
out
cmp
add
fsubrl
stos
push
cs
or
pop
or
je
pop
pop
push
add
ss
jle
dec
xor
pop
pop
dec
sbbl
or
add
or
lahf
sbb
jns
movb
into
mov
in
jmp
xchg
fucomi
fucomi
lcall
ret
fnop
ljmp
adc
xchg
into
push
icebp
and
aad
in
lods
add
lods
cltd
or
lea
aaa
and
fisttps
push
jmp
cld
popf
add
ljmp
call
or
inc
js
pop
je
or
mov
int
or
loope
mov
repnz
add
xchg
inc
sbb
jle
or
fstpt
stos
in
push
rorl
lock
push
jge
movsl
sbb
imul
inc
sbb
dec
mov
arpl
je
aas
xor
test
lock
ror
mov
xchg
mov
dec
popa
aam
loopne
pop
pop
outsl
loope
ja
loop
dec
cmc
sbb
dec
js
dec
mov
pop
cmp
je
inc
or
cmpsb
icebp
jb
and
mov
add
adc
cmpb
push
add
mov
rclb
fidivrl
stos
xchg
fisubrs
cmp
popa
adc
pop
ret
sbb
cmp
pop
jecxz
dec
lea
dec
repz
push
sbb
aaa
jl
mov
jmp
push
stc
xor
notl
add
mov
ljmp
loop
leave
aaa
xor
jge
lea
rcrl
adc
shll
pop
subl
sub
int3
scas
outsb
sarl
iret
mov
sub
adc
fcom
scas
jge
fcmovu
adcl
push
cmpl
mov
mov
pop
fnstcw
or
test
mov
pop
lcall
mov
jecxz
mov
push
pop
ficoms
mov
mov
imul
jns
pop
sub
jmp
lcall
leave
mov
mov
divl
mov
pop
adc
outsl
test
hlt
xchg
ret
imul
inc
mov
sbb
ret
jne
cmp
das
int3
dec
lock
push
jmp
cmp
push
scas
iret
cwtl
orb
pop
push
movsl
out
jb
faddl
rorb
mov
add
mov
scas
dec
mov
cld
ret
fmuls
jnp
xor
push
push
mov
test
dec
je
push
push
call
sub
mov
pop
scas
insl
cmpb
lahf
mov
testb
jg
jb
or
cmc
jmp
push
push
icebp
stc
hlt
icebp
sti
call
cmp
adc
mov
ljmp
in
xor
dec
cmp
push
pop
in
out
xor
mov
fcmovnbe
add
add
add
dec
add
jno
add
dec
add
add
jb
jb
add
inc
add
add
add
insb
add
push
add
add
inc
add
cmp
add
add
add
add
add
add
add
bound
add
add
add
push
add
add
add
add
add
aaa
add
cmp
add
ja
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
dec
add
add
add
add
add
add
add
inc
add
add
push
add
add
add
dec
add
add
add
dec
add
add
pop
add
add
add
ja
add
add
push
add
add
popa
add
add
add
add
add
add
add
dec
add
add
aaa
add
add
add
add
add
push
add
add
outsl
add
add
dec
add
add
add
add
jo
add
pop
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
outsl
add
add
add
add
add
add
push
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
xor
add
jbe
add
add
xor
push
add
add
data16
add
add
dec
add
add
add
add
xor
add
add
push
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
arpl
add
cmp
add
add
mov
ret
mov
jae
scas
inc
mov
scas
push
cs
mov
pop
mov
aam
call
pop
inc
adc
push
jle
xlat
mov
js
aad
out
or
inc
or
inc
or
inc
cli
xor
sub
fisubrs
addr16
inc
cwtl
push
ret
negl
add
mov
je
jns
cld
pop
mov
nop
and
add
sti
movsb
xchg
cmp
roll
test
xlat
cmc
inc
cwtl
inc
fldl
or
fwait
sub
movswl
shrl
push
ret
xor
cmp
inc
jmp
rolb
js
jecxz
xchg
clc
xchg
jecxz
mov
push
mov
ret
cmpsl
repnz
xlat
xchg
cmp
mov
dec
imul
js
sti
movups
test
ffreep
scas
xor
test
cmp
lods
xor
test
dec
add
imul
movsl
fstpt
mov
cs
mov
pop
mov
add
xorb
sti
mov
ret
dec
fistpl
pop
out
jns
cld
pop
clc
or
adc
test
emms
add
imul
xor
push
cmp
sti
xor
push
mov
pusha
mov
scas
mov
mov
sub
shr
call
mov
or
lea
lret
sub
sbb
addr16
or
jecxz
push
stos
add
fwait
arpl
mov
mov
xchg
lock
mov
insl
cmpsb
inc
add
mov
sti
test
fidivs
addr16
insl
xchg
pushf
call
das
test
ficompl
inc
xor
sub
cld
inc
dec
push
xchg
mov
cwtl
mov
lahf
sub
jb
jmp
jnp
inc
or
inc
or
inc
lea
xchg
jge
lods
lahf
inc
xchg
mov
ret
loop
rcrl
jecxz
or
scas
or
mov
cmp
push
mov
call
sbb
outsb
xchg
jae
outsl
mov
and
sbb
cmp
or
push
jecxz
mov
mov
call
sbbl
jbe
jecxz
sub
mov
call
call
add
rolb
sbb
loopne
xchg
clc
data16
scas
sbbb
inc
cmp
inc
inc
fiaddl
inc
push
fiaddl
inc
fiaddl
ret
lods
ja
lods
add
jno
movsb
insl
mov
test
loopne
repz
int3
xlat
aad
pushf
frstor
in
in
ret
add
cs
mov
or
adc
insl
fstpt
fbld
add
or
adc
add
jecxz
mov
dec
push
test
pop
push
gs
jno
push
fwait
jge
rorl
call
lods
das
mov
mov
cmp
icebp
into
mov
mov
pop
lock
jp
jae
dec
or
inc
add
lea
xor
lea
enter
shl
xchg
lock
fwait
add
jecxz
imull
test
test
jo
push
jns
mov
mov
rcll
sbbl
sbb
sti
pop
les
fadds
loope
mov
xchg
cld
gs
add
ret
fimull
add
jne
or
cli
sub
cltd
cmp
jl
fs
insb
add
add
mov
lock
call
add
jbe
fcom
or
ljmp
pop
loope
pop
dec
ljmp
aam
rorl
test
pop
fucomip
sahf
jl
inc
and
loop
ljmp
mov
fldenv
out
mov
test
mov
aam
and
test
push
mov
addb
je
lret
xchg
jecxz
adc
gs
jae
jb
and
insb
or
inc
dec
addr16
dec
ds
js
jb
push
dec
out
fisttps
imul
jne
popa
stos
enter
and
sub
jae
out
jg
dec
outsl
xor
pop
inc
dec
popa
outsb
xor
inc
pop
jecxz
inc
push
or
imul
mov
dec
dec
cltd
addr16
mov
repz
dec
rcr
inc
adc
dec
dec
imul
push
cmp
fldcw
jb
xchg
jecxz
dec
pop
xchg
insb
xor
scas
arpl
insl
outsl
pop
mov
mov
je
test
jg
repz
add
pop
mov
jb
dec
jns
int
xlat
push
dec
pop
cmp
insl
imul
add
out
daa
jae
sub
addb
dec
xor
dec
and
dec
rolb
push
pop
mov
inc
mov
stos
jmp
add
jae
adc
mov
dec
inc
aad
xchg
cmc
inc
subl
mov
inc
mov
dec
lahf
mov
adc
adc
xor
inc
xchg
push
push
test
je
pop
xor
sbbl
mov
push
jns
pop
imul
outsl
sbb
fcomi
inc
cld
jbe
add
jmp
mov
ljmp
add
popa
outsl
xor
rorl
dec
inc
push
dec
push
dec
mov
inc
adc
xlat
xchg
add
or
cltd
sti
sbb
fwait
jg
jne
add
sub
adc
ja
or
push
mov
aad
push
imul
xchg
dec
mov
jecxz
jnp
dec
faddl
dec
and
add
xor
test
adc
xor
pop
sbb
mov
pop
shlb
cmpsb
mov
mov
inc
js
jns
mov
push
bound
jp
push
push
lret
jecxz
and
xchg
mov
insl
mov
push
dec
xchg
aad
packssdw
mov
cltd
inc
jmp
and
and
std
out
dec
call
push
jno
movsb
dec
pop
ret
adc
arpl
xchg
dec
inc
inc
push
push
addr16
mov
xor
and
inc
jmp
mov
inc
movsb
push
jmp
aad
imul
stc
movsl
es
out
lcall
loop
pop
fmull
inc
inc
cmp
dec
pop
inc
add
pop
xchg
int3
inc
inc
dec
push
mov
cmp
add
sbbl
fs
xor
inc
imul
pop
dec
fwait
sbb
aas
inc
inc
pop
outsb
jg
popa
push
arpl
adc
lea
popa
push
aas
inc
mov
imul
dec
dec
nop
and
insl
ds
test
push
jnp
push
out
jo
gs
push
cli
popf
sub
imul
mov
mov
mov
add
or
push
icebp
jnp
sti
add
addps
xor
pop
insl
xor
stc
int
mov
jae
inc
gs
xor
pop
sahf
push
insb
aaa
lcall
outsl
lahf
bound
loope
pop
outsl
push
cmp
mov
mov
adc
add
mov
push
mov
cltd
bound
jno
aas
inc
repz
pop
xchg
lret
lea
das
imul
and
outsl
xchg
xchg
mov
inc
sub
cmc
mov
inc
std
ss
ljmp
push
mov
js
cltd
aam
and
inc
stc
pop
dec
mov
pushf
sbb
arpl
push
pop
out
bound
push
aas
pop
dec
vpshaw
xchg
jae
mov
push
test
movsl
outsl
mov
mov
dec
or
pusha
push
imul
pop
adc
push
shl
out
aas
ja
cltd
scas
divb
stos
pop
in
cmp
arpl
push
call
xor
jmp
inc
jmp
push
test
popf
aaa
rorb
inc
rorl
rcrb
enter
jns
cmpsl
mov
lods
push
in
inc
loopne
sbb
xchg
mov
jae
in
sbb
insl
int
mov
jnp
mov
std
popaw
arpl
jmp
shrl
pop
mov
incb
inc
add
xchg
cmp
dec
in
mov
xlat
dec
xor
repnz
add
repz
fmull
pop
movd
arpl
pop
outsb
cmp
movsl
in
push
mov
push
cmpsl
aaa
push
or
dec
imul
inc
xchg
cmp
test
movsb
fistps
movsb
xchg
cmp
inc
xor
jnp
mov
jns
scas
std
sbb
outsb
xor
sbb
andb
pop
lods
pop
cmpsl
outsb
jno
and
pop
inc
mov
test
clc
das
addr16
pop
add
xchg
out
out
sarb
out
addr16
jp
ljmp
sub
aam
stc
sub
imulb
inc
stc
bound
sub
imul
add
clc
xchg
dec
dec
push
and
out
xor
ret
xlat
pop
test
out
imul
sub
jae
xorl
push
mov
mov
arpl
jns
cltd
out
dec
sub
call
pmaxsw
pop
popf
pop
fs
roll
arpl
push
or
xor
repnz
ret
pop
pop
outsb
xlat
and
fistps
loopne,pn
cmp
push
push
mov
mov
filds
push
movsl
inc
jo
cmpsb
popa
fisubrl
pop
cmp
aas
stc
fcmovnb
dec
out
shl
std
jg
pop
jno
shll
sbb
cld
mov
mov
mov
frstor
pop
mov
hlt
popa
or
push
loope
mov
dec
jge
push
xlat
xchg
push
push
pop
push
int
ret
nop
insl
addr16
pop
pmulhw
imul
mov
fldt
mov
mov
fidivrs
roll
int
pop
cmp
mov
xor
data16
jae
mov
mov
jae
jne
shrb
mov
in
xor
popw
imul
or
mov
or
mov
lds
jo
in
outsb
out
mov
mov
pop
jmp
push
dec
dec
push
sbb
xor
jb
or
inc
cmp
in
push
sbb
bound
outsb
mov
fnstenv
or
adc
stc
dec
dec
iret
inc
xchg
test
add
jo
jb
cmc
pop
add
mov
lcall
loopne
xchg
fwait
dec
adc
ret
fidivrl
iret
xor
gs
jne
inc
cmp
cmp
sub
data16
cmpsb
rorb
mov
jmp
jmp
and
mov
enter
or
aad
ret
fcmovnu
mov
pop
mov
push
xchg
loopne
sbb
dec
push
add
pop
in
ret
fcompl
jp
int3
mov
scas
add
sub
xorb
cmp
rorb
pop
adc
mov
lret
xchg
jecxz
lds
arpl
addr16
inc
jbe
push
mov
std
je
jmp
ret
popf
repz
popa
frstor
push
jne
stc
cmp
insb
ljmp
popf
add
add
add
mov
iret
adc
mov
fucomi
pop
repnz
sub
add
xlat
imul
into
lods
xchg
shl
pop
mov
pop
mov
cltd
jo
pop
cmp
js
adc
add
rcrl
adc
add
jae
adc
cmp
xchg
popf
xor
push
imul
insl
sti
or
jle
ret
lds
pop
and
in
arpl
lods
cmp
and
imul
add
cmp
divl
fwait
xchg
jne
and
xchg
int
xor
or
pop
out
push
xor
jecxz
push
push
fs
ss
mov
push
xor
js
aas
and
ffreep
sbb
adc
mov
adc
mov
pusha
add
sbb
mov
gs
sub
sbb
das
outsb
cltd
xchg
mov
lret
adc
add
in
mov
out
jb
push
icebp
or
push
inc
loopne
out
mov
adcb
shr
push
hlt
mov
sbb
lcall
sub
incb
mov
pop
std
mov
call
push
add
dec
lods
cmp
call
loope
mov
les
js
xchg
inc
mov
test
xchg
cmp
sbb
jle
adc
sbb
xchg
stos
cs
sub
pop
sbb
scas
mov
sbb
add
inc
add
push
test
loop
addl
sub
stos
rorb
lock
xchg
xorl
stos
push
jne
inc
add
andl
scas
inc
lea
mov
cmpsl
or
fwait
xorb
mov
and
je
outsl
test
andb
inc
imul
mov
ds
pushf
push
ficompl
xchg
xchg
sbb
insl
in
push
movsb
dec
aam
lock
push
pop
lcall
inc
jnp
mov
mov
aad
cmp
mov
mov
cmp
sahf
mov
insb
mov
sbb
loope
or
cs
into
sbb
mov
scas
ret
dec
sbb
clc
adc
mov
je
add
ss
cmp
cmc
fdecstp
sahf
popa
mov
inc
sub
in
gs
or
notb
fwait
mov
aam
mov
inc
inc
fsubr
dec
ret
dec
dec
mov
ljmp
in
jmp
pop
dec
mov
ljmp
ret
mov
mov
and
pop
mov
dec
loopne
add
test
das
pop
push
jno
stos
mov
jp
pop
testl
fstps
pop
aas
repz
dec
inc
je
fidivs
aad
imul
cmpl
jbe
lds
icebp
insl
ljmp
add
maskmovq
lock
inc
xor
arpl
sahf
cmp
mov
data16
sti
call
cmp
cmc
rcrb
negl
and
mov
gs
xorb
icebp
aas
data16
xor
sahf
jns
mov
outsb
pop
jmp
mov
aam
push
imul
insl
pop
js
clc
push
iret
hlt
ficomps
outsl
popa
insl
and
rcll
mov
fs
pop
sarb
movsb
sbb
bnd
and
add
jae
outsb
or
lahf
sbb
in
mov
decl
dec
mov
mov
pop
mov
xchg
xlat
sbb
fdivs
cmp
xor
fld1
push
and
inc
sbb
jp
mov
mov
mov
jle
jle
outsb
push
jb
call
jg
jnp
mov
fwait
pop
pop
inc
fs
lcall
jae
andb
int3
sub
pop
sbb
mov
lcall
push
cmp
inc
jmp
xor
dec
pop
mov
dec
inc
push
aad
fstl
out
ljmp
push
fsubl
jne
stos
in
out
adc
inc
loope
xor
ljmp
mov
lea
mov
push
fstpl
mov
mov
mov
fldt
jp
cltd
mov
inc
add
call
lds
xchg
mov
jb
or
jbe
and
sub
std
dec
aaa
mov
sbb
xchg
mov
dec
neg
cli
adc
jg
or
dec
mov
add
push
mov
out
pop
out
sbb
test
push
xor
ret
pop
call
cmp
cmpsb
cwtl
dec
iret
mov
add
or
inc
inc
hlt
or
repnz
push
shrb
stc
dec
inc
leave
mov
adc
icebp
aaa
cltd
sub
outsb
add
out
xor
pushf
jne
jmp
ficoml
or
in
lcall
lret
scas
mov
adc
mov
fnstcw
mov
out
fldcw
xchg
mulb
fwait
outsb
dec
sbb
inc
cmp
fmull
daa
pop
jns
cld
jae
xchg
sbb
fisubl
imul
test
adc
and
sbbl
andb
mov
xchg
ja
sbb
call
push
adc
xlat
xchg
jbe
and
mov
xchg
inc
jp
mov
in
sbb
test
dec
xchg
out
out
jns
call
mov
jge
mov
fwait
test
add
push
mov
fcos
bound
cmp
ret
pop
xor
popf
lock
nop
push
mov
sbb
jg
insb
imul
test
dec
pop
clc
inc
pop
dec
jo
jle
call
mov
mov
test
xchg
pop
pop
jo
sub
dec
cmc
xor
pop
out
push
rorb
mov
cmpsl
inc
mov
shrl
sti
ret
inc
jl
mov
xor
and
pop
ljmp
xchg
jne
add
ljmp
and
xlat
jecxz
add
test
das
pop
xlat
dec
je
loop
mov
jnp
xchg
pop
xchg
jns
mov
lahf
out
fidivl
test
cli
mov
lcall
lcall
jo
mov
inc
loopne
and
rolb
lahf
push
adc
xchg
lahf
into
mov
lret
or
adcb
adc
out
jb
push
jmp
xorl
cmp
cmp
dec
mov
enter
inc
ret
int3
mov
mov
mov
movsb
mov
aas
dec
and
jae
in
faddl
stos
inc
sub
and
and
push
push
call
loopne
pop
je
call
call
cli
sub
mov
test
pop
mov
xor
xor
loopne
sbb
dec
push
push
xchg
sbb
jno
or
fadd
ret
adcl
inc
sarl
jae
fisubl
test
in
inc
fistl
ds
jno
pop
or
mov
out
cli
xchg
out
mov
dec
popf
ljmpw
loopne
add
test
scas
mov
inc
push
adc
test
mov
outsb
test
push
sbb
out
xchg
orb
orl
mov
cld
and
shrl
or
and
test
cmp
adcb
leave
in
in
cmp
in
lock
andb
test
shrb
scas
ret
pop
call
jp
daa
nop
inc
xlat
sbb
roll
xor
mov
pop
hlt
dec
arpl
dec
test
rorb
push
fstl
or
dec
cmpsb
call
pop
cmp
ret
mov
mov
xor
add
in
inc
inc
out
mov
add
mov
scas
das
pop
cmp
movsl
jo
loopne
rcrl
dec
push
call
jmp
lahf
xchg
test
rorb
jl
cmp
jle
push
add
cltd
adc
ret
test
sahf
add
xor
pop
and
mov
cmpsl
rorb
clc
out
in
mov
iret
call
pop
xor
cmc
and
ljmp
inc
in
int
mov
mov
imul
xchg
test
or
outsb
xor
pop
xor
fwait
outsb
cs
mov
iret
inc
lock
packssdw
movsl
aas
mov
adc
popa
repz
xorl
nop
push
int
jecxz
jo
mov
mov
push
test
add
imul
jb
insb
lahf
idivl
and
pop
subl
dec
leave
clc
in
push
mov
lea
cmp
mov
outsl
ja
xchg
cmp
cmp
xchg
jle
sub
cmp
dec
sbbb
jns
jle
mov
push
lds
int
rcl
test
push
jno
and
into
mov
or
dec
filds
inc
add
jecxz
cs
mov
rorb
add
ret
les
add
call
add
mov
jmp
push
call
subb
les
lcall
xor
mov
fwait
push
fcmovnu
iret
mov
lock
jp
mov
mov
insb
inc
pop
jno
insb
cli
int3
std
fdivrl
orl
mov
fnstsw
xor
inc
adc
fucomp
test
mov
jmp
mov
cmpl
fsts
pop
mov
repz
int3
out
xor
rcrb
clc
repnz
divps
pop
in
movsb
push
pop
lods
repz
xor
pop
push
pusha
icebp
push
push
push
pushf
mov
mov
pop
repz
jmp
iret
mov
repz
loope
add
andb
xor
xor
dec
decl
cmp
inc
mov
dec
jae
jle
out
or
lock
inc
cmp
xchg
mov
loope
out
sub
insb
popf
sbbb
push
call
lret
cmc
mov
repnz
push
call
daa
lods
das
and
mov
mov
gs
sub
cmpsl
ror
sbb
inc
mov
dec
or
xchg
loope
ret
cmp
xlat
adc
gs
ret
scas
aam
inc
mov
loopne
mov
pop
insl
sbb
lret
fsubs
inc
shl
xlat
push
pop
pop
dec
jae
sub
dec
enter
imul
mov
mov
mov
arpl
push
lds
stc
popa
mov
push
jp
lret
rclb
lock
push
pop
cli
out
clc
or
leave
dec
lret
jge
add
insl
pop
cld
out
addr16
xchg
hlt
xchg
pop
push
arpl
push
dec
lods
mov
and
sbb
pushf
scas
mov
ja
and
in
sbb
movl
loope
mov
jb
sbb
hlt
imul
ss
call
pop
mov
lds
pop
xor
scas
pop
mov
sub
pop
pop
push
lahf
mov
pushf
xchg
cs
mov
cwtl
lcall
pmaxsw
out
sbb
jno
in
das
and
sub
fldenv
addr16
test
fiadds
test
dec
mov
dec
push
enter
lods
out
xor
andl
pushf
jmp
in
pop
inc
pusha
sub
outsl
aad
call
gs
or
fisttpll
incb
sub
add
mov
push
and
sub
mov
int3
jp
fwait
scas
insb
insb
pop
push
stmxcsr
mov
push
es
jle
mov
inc
cmc
jns
inc
push
mov
dec
lock
mov
call
adc
xchg
cmp
sbb
mov
lret
jle
xorb
jno
mov
mov
out
aam
jl
out
or
mov
push
icebp
mov
push
sbb
notb
or
jg
adc
fnstsw
insb
xchg
mov
add
mov
je
push
adc
lds
test
sahf
mov
das
clc
or
ja
or
pop
dec
and
and
add
sub
push
mov
mov
in
mov
cmpb
and
test
jle
in
das
mov
test
push
nop
jns
xor
call
cmp
xor
mov
cs
sbb
cmp
and
into
pop
in
pop
xorl
cmp
fs
mov
lret
and
xchg
adc
mov
cmp
insl
aaa
cli
mulb
loopne
lock
rorb
popa
outsb
add
add
add
add
aaa
add
add
add
add
push
push
dec
add
add
add
add
add
popa
add
add
add
add
add
add
add
push
add
add
inc
add
add
add
add
push
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jns
aaa
add
add
outsl
add
add
xor
add
jo
add
add
add
dec
add
add
add
add
add
add
arpl
add
ja
jbe
add
add
add
add
add
add
add
add
add
add
add
add
add
outsl
jns
arpl
add
push
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
add
add
add
insb
add
add
add
aaa
add
add
inc
dec
add
pop
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
pop
add
je
add
jne
add
add
add
add
add
add
add
add
push
add
add
add
add
dec
jne
push
add
inc
inc
add
add
add
add
add
add
cmp
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
dec
add
add
add
jae
add
add
add
add
add
inc
add
add
jb
add
push
add
add
add
dec
add
add
add
inc
add
add
add
add
add
cmp
adc
out
cld
and
push
and
xor
ficompl
and
jge
dec
iret
push
adc
add
pop
ret
dec
iret
dec
insb
dec
dec
pop
fstp
sbb
in
jmp
out
mov
loope
bound
xchg
arpl
mov
rcl
lcall
enter
enter
xor
mov
outsl
adc
xchg
ret
mov
out
int
and
jg
inc
fwait
push
and
mov
pop
jle
adc
in
adc
pop
aaa
ret
dec
fwait
rorb
aad
int
fimull
loop
in
roll
shlb
mov
aam
pop
in
adc
pop
inc
jne
call
xchg
pop
fwait
outsl
ret
outsb
add
jo
cli
ret
mov
cmp
inc
shll
loop
lods
cs
jno
push
xchg
in
cmc
ret
orl
sbb
jb
test
jmp
ss
xor
or
mov
flds
outsl
addr16
dec
pop
and
xor
ret
dec
pop
roll
fldenv
mov
repnz
call
adc
stc
push
mov
pop
push
xlat
ret
xor
pop
out
push
mov
cmp
inc
sbb
add
popw
sub
div
ftst
mov
gs
xlat
xor
outsb
inc
lret
jbe
dec
aam
lds
divb
das
dec
mov
shl
rolb
adc
adc
call
cwtl
ret
mov
icebp
enter
insl
lret
or
in
mov
fwait
xchg
out
dec
or
int
add
ss
add
movsb
push
loopne
adc
loopne
out
mov
sub
sbb
test
imul
pusha
mov
sub
dec
inc
fsubs
ficompl
stos
shlb
pusha
dec
mov
add
gs
fstps
cld
xor
je
push
stc
popf
cli
mov
fnstcw
iret
or
fwait
add
fnstcw
sub
xor
dec
inc
aas
jge
rolb
roll
test
loopne
adc
sahf
jne
mov
fwait
pop
cli
daa
mov
test
lret
test
test
out
aam
adc
mov
add
add
bnd
push
mov
es
sub
popa
iret
fwait
int3
add
add
sbb
xchg
lea
rcl
fsts
push
adc
out
das
jle
sbb
arpl
enter
and
cmpl
fistps
lock
adc
inc
out
cltd
ret
xor
ficoms
pushf
sbb
xchg
in
lods
dec
pop
gs
lods
pop
mov
cld
outsl
mov
push
orb
jp
sub
inc
rol
add
push
jo
sbb
inc
fbld
sub
cmp
flds
sbb
pop
fcomi
or
ret
sub
sbb
adc
jns
push
jge
inc
xchg
sub
mov
insl
in
ret
in
jg
push
insb
adc
cmpsl
and
ret
repz
jae
cmp
adc
cmp
mov
mov
mov
xchg
sub
pop
testl
xlat
dec
sub
out
inc
mov
sbb
add
push
fistl
out
or
cmpb
bound
cmp
pop
in
popa
in
mov
psubusb
dec
cmp
push
faddl
or
out
cmp
pop
cmp
lret
inc
mov
sbb
xchg
or
shll
out
jo
mov
adc
jle
outsl
inc
or
lock
loopne
inc
test
xchg
pop
pop
sbb
sub
jae
popf
sub
cwtl
jb
cmpxchg
int3
outsb
adc
das
mov
fmuls
cld
notb
arpl
pop
notb
adc
dec
push
mov
add
xchg
stc
js
sbb
mov
cltd
scas
and
sub
test
jmp
cltd
pop
pop
push
inc
aas
sbb
push
mull
cmp
push
daa
jg
lret
repnz
lcall
mov
sub
mov
fld1
mov
xor
insl
add
ljmp
add
inc
pop
and
out
mov
insb
and
add
add
or
or
mov
sub
mov
mov
sub
popf
ljmp
in
jge
fcmovne
sub
pusha
ret
sub
pop
and
gs
push
mov
push
pop
xor
fbld
insl
ret
dec
cmpl
jbe
pop
mov
jne
lret
ljmp
adc
lea
sub
ret
inc
addr16
mov
movl
cmp
dec
jae
jbe
sbb
cld
adc
movb
sbb
sar
and
lods
sub
sbb
cmp
sub
mov
cs
or
and
xchg
or
pop
addr16
imul
mov
lcall
xchg
in
scas
fdivr
cli
mov
hlt
jge
cmpxchg
hlt
sub
mov
pop
push
xchg
mov
xlat
or
xchg
insl
in
jmp
in
and
mov
mov
push
imul
xor
insb
mov
dec
mov
hlt
fstpt
jo
loopne
xchg
into
lret
lret
shr
or
fsubrl
in
ss
jb
push
popa
loop
fdivrl
push
mov
jmp
jno
aas
mov
ljmp
popa
ret
xchg
push
cmp
movsl
std
fcmovnb
es
rorb
jno
inc
and
push
or
adc
mov
sti
mov
jb
inc
sub
dec
or
cmp
jae
sub
jae
mov
add
mov
push
sub
mov
roll
jbe
in
push
pop
lahf
aaa
pop
mov
or
jmp
mov
add
test
push
call
aaa
mov
pop
cmp
mov
leave
pop
mov
cmp
shl
push
aaa
push
push
leave
inc
push
push
call
add
mov
dec
loope
inc
dec
inc
outsb
xchg
jb
jae
xchg
dec
xchg
adc
mov
jl
sbb
xor
pop
pop
in
jns
or
js
lock
xsave
or
not
push
orl
out
mov
rcrl
dec
cmp
test
mov
cmp
sub
sbb
je
and
test
jbe
xor
das
and
jecxz
pop
push
jnp
add
sarl
jae
jne
pop
aam
dec
and
inc
inc
pop
insb
repnz
jb
jge
nop
arpl
sub
popf
pop
lcall
xchg
and
jl
and
ret
xchg
ret
and
xchg
lds
and
in
fsubrs
add
call
push
lods
lea
add
ds
mov
pop
or
add
cmp
and
jb
out
in
into
fisttpl
push
div
jae
jp
and
lar
cmp
pop
scas
dec
fisttpl
xchg
or
mulb
popf
add
push
xchg
inc
cld
pop
push
out
pop
popl
dec
inc
pop
stos
fisttpl
scas
push
dec
mov
xor
adc
mull
mov
inc
lock
xor
dec
adcb
mov
ljmp
in
push
pop
cmc
and
jg
out
test
ficomps
leave
and
sub
xlat
insb
sbb
loop
hlt
fs
mov
mov
mov
push
push
mov
add
rcrb
mov
lods
in
and
cld
and
out
inc
cmovne
xchg
dec
shlb
and
in
pop
mov
lahf
dec
inc
cmp
mov
je
pushf
cmp
call
adc
cli
push
push
jmp
or
js
jne
pop
andl
xorb
push
scas
dec
sarl
xchg
filds
mov
cmp
cmp
inc
call
push
shr
movsl
popa
mov
or
or
mov
jb
dec
xchg
and
mov
mov
add
push
jno,pt
mov
stc
andl
inc
and
xchg
mov
pop
in
je
mov
fistpl
fdivrs
idivl
mov
in
push
mov
adc
lret
jne
xchg
testb
push
mov
fs
or
cmpsl
adc
mov
lock
sbb
lock
xor
loop
in
rclb
mov
cmpsb
insb
stc
xor
jns
or
mov
or
not
sbb
pop
testl
mov
pop
add
in
in
and
mov
push
adc
push
sub
cmp
dec
adcb
scas
push
mov
mov
mov
out
test
fsubr
and
jo
mov
mov
sbb
je
js
adc
xchg
cmp
push
xor
lea
popf
rcr
addr16
inc
push
pop
daa
cmc
rcl
adc
add
inc
and
sbb
daa
lcall
jmp
pop
dec
pop
mov
pop
sbb
adc
insb
mov
mov
inc
push
add
sbb
inc
or
add
mov
iret
pop
dec
pop
repz
jno,pn
jne
pop
ret
mov
adc
sbb
dec
sbb
mov
ljmp
inc
cmp
sbbb
inc
or
xchg
jl
loopne
mov
lock
xor
call
push
jmp
fdivl
mov
pop
shrl
adc
dec
jo
sub
push
popa
fldenv
mov
xor
or
or
xchg
jmp
nop
enter
test
fs
or
out
cmc
cmp
xor
fcoms
jno
xchg
cli
add
fstpl
jb
add
dec
pop
sbb
adc
seta
mov
mov
xchg
sbbb
out
loopne
mov
jne
mov
dec
push
andl
sti
outsb
mov
xchg
ret
xchg
mov
pop
push
push
call
pusha
pusha
sbb
in
mov
or
stos
fucomip
outsb
add
mov
les
mov
fstps
leave
and
rorb
jmp
sbbl
mov
arpl
pop
or
popa
leave
sbb
inc
shr
leave
inc
adc
push
xchg
notl
fstpl
mov
das
adc
je
pop
arpl
cmp
mov
push
loopne
mov
or
lcall
sti
sbb
fwait
dec
movsl
rol
mov
pop
sub
mov
jne
push
pop
subl
mov
push
push
out
pop
cmp
arpl
add
xor
mov
inc
jg
mov
sahf
push
ss
push
fs
cmp
fsubr
int
xor
dec
outsb
mov
and
loopne
cld
out
or
pop
lahf
add
stc
movsl
lahf
jmp
mov
mov
roll
pop
xlat
fbld
in
push
rcrl
lds
or
sub
fbstp
dec
sbb
insb
jg
jl
jns
add
ljmp
pop
pop
inc
mov
sbb
inc
in
add
xor
outsb
fcoml
cmpsl
jb
and
stc
jno
iret
pop
xor
out
cmp
adc
xor
xchg
lahf
pop
or
out
adc
jo
out
mov
jae
sahf
dec
jne
pop
or
mov
cltd
aad
inc
mov
aad
dec
sub
adc
in
cmp
ret
mov
ret
mov
xor
sahf
mov
fld1
mov
xor
cmp
add
outsl
add
add
add
dec
dec
add
jae
inc
add
push
add
jbe
pop
add
dec
add
add
jp
push
add
push
add
add
add
jb
add
push
add
add
jne
add
add
add
xor
add
add
add
cmp
add
cmp
add
add
add
add
jp
add
inc
add
jo
inc
add
add
add
add
add
jbe
pop
add
add
add
dec
add
add
add
add
cmp
xor
add
add
add
add
add
add
add
add
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
xor
push
imul
add
add
dec
arpl
push
add
add
add
pop
add
add
add
inc
add
push
add
add
add
add
add
add
add
add
add
add
dec
add
imul
add
add
add
add
add
js
add
add
xor
add
add
jns
jo
add
add
add
add
inc
add
add
push
add
add
add
inc
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
jne
add
add
add
add
add
add
add
jb
add
add
jae
add
add
push
add
push
add
push
dec
add
jno
add
add
add
add
add
add
inc
add
add
add
add
add
jno
shl
pop
jmp
js
btr
add
sbb
sbb
fsubrs
add
pop
outsl
mull
push
test
push
ret
sbb
inc
inc
adc
outsb
ret
jg
mov
sbb
xchg
filds
add
push
int
mov
pop
xor
decl
mov
movsb
xor
test
lods
loope
addr16
mov
in
cmp
mov
stos
sbb
push
cs
push
adc
ja
sub
scas
push
test
les
lahf
das
add
sbb
lds
imul
pop
hlt
adcb
pop
xchg
or
jmp
mov
adc
dec
mov
out
inc
add
push
add
cmp
je
aaa
push
and
push
push
xchg
push
push
jmp
jmp
sub
push
repnz
sub
push
js
fmuls
mov
cmp
xchg
cmp
dec
daa
cwtl
add
lahf
add
inc
sbb
iret
fadds
into
fiaddl
inc
mov
sbb
mov
pop
enter
in
call
icebp
notl
mov
call
pop
daa
nop
sbb
addr16
fcompl
pop
mov
ret
call
xorl
test
stos
mov
xchg
adc
lock
xor
push
imulb
lock
add
sub
pop
mov
cwtl
dec
enter
mov
or
lret
rorl
mov
add
cmp
xchg
dec
cwtl
push
call
mov
ss
fstps
xor
pop
mov
shlb
push
and
push
add
enter
insb
fnsave
xchg
gs
in
mov
lods
popa
out
ret
rcrl
mov
mov
push
cmpsb
xlat
cvtps2pi
inc
pusha
mov
lock
fistl
ja
popf
gs
dec
pop
pop
test
mov
out
mov
mov
int3
xlat
mov
addl
pusha
sbb
jnp
mov
add
mov
push
sub
xor
sbb
out
clc
cmpsb
cwtl
cltd
fcmovu
pop
pop
fsubl
lods
aas
and
test
add
iret
lock
pop
mov
lods
add
jnp
fcomps
into
iret
mov
jmp
adc
cltd
xor
jne
incb
or
call
dec
call
jbe
dec
cvtpi2ps
fisubl
inc
leave
adc
call
fstl
mov
loope
cmc
cmpsb
xorb
iret
mov
test
flds
repnz
jle
iret
cmpsl
add
mov
sub
sub
sub
mov
mov
jp
pop
mov
lods
dec
fwait
movsl
ljmp
sub
test
cld
mov
scas
lock
lea
add
push
dec
xor
inc
inc
mov
sub
in
bound
outsl
and
adc
inc
cmpsl
inc
pop
cmp
out
out
mov
cmp
jne
sub
lock
cmc
jmp
mov
add
adc
lods
jnp
test
js
popf
in
lock
out
push
push
ret
arpl
mov
jg
out
sub
push
xchg
fbstp
sub
shlb
lods
sbb
orl
fwait
imul
pop
cmp
jg
jb
call
pop
out
add
in
jmp
push
sub
xchg
sub
push
repz
incb
add
sub
xor
test
and
sub
push
pusha
mov
sbb
movb
jle
mov
jl
cwtl
scas
dec
jge
xor
iret
testb
movsb
pop
push
jne
add
cmc
sbb
pop
popa
xrelease
sbb
pop
imul
in
mov
mov
pop
arpl
pop
js
push
pop
loop
sbb
jae
sar
jl
shl
or
fwait
add
xchg
mov
xchg
iret
test
jmp
loopne
mov
pop
lea
loopne
push
lock
push
cmp
jne
dec
or
mov
out
aad
sbb
pop
mov
xor
repz
pusha
dec
mov
pop
filds
mov
adc
repz
lret
loopne
je,pn
loopne
adc
out
lock
mov
addb
push
rcll
lcall
or
loop
call
ret
sbb
scas
insl
mov
adc
aaa
dec
push
add
mov
pop
or
pop
in
fldcw
dec
ljmp
cld
data16
ljmp
mov
loopne
out
gs
out
xor
xchg
mov
wbinvd
mov
in
dec
jno
int
and
call
test
call
jmp
push
les
jnp
push
dec
ffreep
loope
push
dec
in
push
pop
mov
mov
mov
repz
sbb
out
lar
or
pop
loope
push
add
or
call
sbb
and
sti
rcll
adcb
and
gs
dec
jne
fmull
outsb
fwait
repnz
push
xchg
push
insb
jg
scas
popa
xor
pop
data16
pop
gs
and
xlat
js
fnstsw
jo
jae
dec
call
xchg
in
jo
mov
or
pop
lock
sti
repz
adc
jns
mov
sarb
imul
scas
push
inc
rcrl
dec
mov
data16
jp
pop
rorl
inc
pop
sub
mov
cmpsb
ret
lcall
xchg
xor
dec
call
gs
mov
mov
call
rolb
pop
cli
mov
rclb
jno
mov
addr16
pop
push
incl
adc
ret
out
in
mov
imul
in
ud1
jecxz
enter
xor
or
icebp
fwait
or
ret
push
push
mov
ljmp
ficoms
fs
dec
sbb
adc
mov
pop
insl
mov
dec
in
mov
shrb
sub
jmp
js
dec
inc
pop
not
dec
test
cmp
jge
sbb
mov
sahf
stos
in
out
nop
ljmp
inc
enter
add
int3
fs
jmp
call
jo
flds
cmpsl
pop
clc
inc
hlt
addr16
mov
lods
push
jnp
pop
jbe
xchg
dec
push
mov
mov
inc
hlt
or
push
addb
pop
shl
jbe
cwtl
inc
repnz
lret
ljmp
push
lahf
jecxz
fdivs
dec
call
push
mov
iret
out
add
aaa
aas
test
fisubl
fwait
cvtpi2ps
jmp
sbb
fdiv
or
int3
push
cld
mov
subl
in
cmp
xchg
and
mul
je
es
in
mov
fmull
sbb
add
inc
or
sbb
mov
sbb
shrb
int3
jmp
pop
in
mov
and
addw
pop
cltd
cmp
vpaddsb
jns
rcr
inc
jns
jne
ja
or
call
sbb
test
pop
adc
cmp
push
pop
mov
mov
aaa
push
push
stos
pop
add
lret
sbb
and
cmp
je
push
sub
mov
test
add
or
or
jmp
lahf
decl
fwait
das
adc
add
xor
cmp
imul
out
push
adc
push
jmp
movsl
aad
into
in
cmp
inc
push
data16
rdtsc
imul
dec
and
lea
inc
popa
adc
iret
dec
push
dec
out
sahf
cmpsl
dec
icebp
mov
mov
aas
ret
push
daa
xchg
aam
ljmp
test
ljmp
stos
cld
aam
mov
push
xchg
push
lcall
push
pop
int
xor
mov
out
roll
imul
nop
mov
push
dec
pop
notl
pop
adc
sub
push
call
inc
aam
or
adc
xor
icebp
loop
jp
cmp
je
add
orb
fucomp
shrb
adcb
sti
dec
inc
stos
stos
call
loope
pushf
movsb
pcmpeqw
fnstcw
rorb
add
mov
pop
xor
subl
xchg
sub
pop
push
xchg
xchg
and
std
roll
add
addr16
addr16
inc
jg
dec
pop
lahf
inc
cmpsl
jne
mov
push
jb
add
fwait
mov
ret
enter
mov
cmp
call
xor
hlt
pop
inc
sbb
xchg
mov
xchg
inc
call
inc
sti
cwtl
test
enter
inc
mov
in
lcall
sbb
inc
jge
pop
cltd
mov
jle
pop
test
xchg
mov
dec
repz
pop
push
js
shr
xchg
mov
push
rcl
jg
stos
mov
hlt
out
arpl
adc
call
mov
shr
mov
xchg
and
lret
sub
cmp
mov
movsl
jp
xchg
ret
push
pop
push
mov
xchg
addr16
cmp
mov
cs
pop
call
fisubrl
jne
xchg
dec
imul
sbb
repz
mov
or
stos
xchg
insl
cmp
add
inc
ret
lahf
shlb
xchg
push
mov
or
lcall
call
dec
pop
push
fs
nop
sub
push
ljmp
sbb
jmp
push
xchg
sbb
in
je
mov
or
shlb
rolb
sbb
push
cli
call
fs
cld
mov
mov
out
std
mov
mov
js
and
hlt
pop
mov
call
mov
pop
and
mov
and
call
jle
dec
inc
add
cmp
cmp
cmp
imul
int3
push
push
rcrb
lret
clc
pushf
sub
and
or
lret
adc
ljmp
flds
inc
xchg
scas
pop
pop
scas
ljmp
lret
ja
insl
and
leave
jnp
xor
xchg
pop
mov
stc
xchg
aam
add
jecxz
add
push
xchg
out
ret
push
xchg
das
int3
lods
jns
jp
or
and
sbb
jae
call
stc
push
pop
int3
sbb
cmp
imul
sub
push
outsl
gs
jp
add
sar
loop
decb
int
xor
lock
out
dec
in
xchg
mov
dec
mov
dec
mov
in
push
cmp
test
mov
decl
mov
push
call
add
hlt
lods
pop
call
adc
rcll
cmp
add
lret
je
mov
inc
or
jge
enter
mov
dec
xchg
add
mov
mov
cmp
fstl
mov
mov
ret
push
dec
subl
test
out
aam
mov
mov
lock
scas
rcl
and
mov
ja
out
lret
mov
xchg
inc
mov
mov
jae
movsb
xorl
js
inc
pop
mov
mov
outsb
cmp
xchg
sbb
adc
dec
scas
push
fs
repnz
les
xor
add
add
dec
add
push
add
add
add
data16
add
dec
add
add
jne
add
jno
add
add
add
add
add
add
inc
add
add
add
add
jae
add
add
dec
add
add
pop
add
add
push
jae
xor
add
dec
jae
add
add
add
add
add
inc
push
insb
add
add
add
xor
add
data16
ja
add
add
jns
dec
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
cmp
add
inc
add
add
add
jp
add
add
jne
add
je
dec
add
pop
add
inc
add
dec
add
add
add
push
jp
cmp
add
add
add
add
inc
add
add
push
add
add
add
add
add
add
dec
add
add
add
jb
add
add
add
add
add
push
add
add
push
add
dec
jne
add
add
add
add
dec
add
add
inc
add
add
add
inc
add
jae
add
add
add
add
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
outsl
add
add
add
jns
add
add
add
add
add
add
cmp
add
add
add
add
jo
push
add
add
jns
add
add
outsb
add
add
jbe
add
add
add
mov
int3
mov
test
and
dec
fs
push
stos
jmp
pop
popf
loop
hlt
fstl
dec
scas
pusha
fnstsw
cli
aaa
add
das
sar
adc
pop
and
shll
inc
cld
mov
inc
fs
jl
ljmp
repz
and
xor
sub
lcall
iret
dec
lea
rcll
test
adc
es
adc
lea
xor
in
cmpsb
scas
sub
aaa
pop
dec
add
cmpsb
data16
movsb
dec
or
call
call
les
mov
arpl
dec
and
fiaddl
cmpsl
ljmp
pushf
mov
fistpl
pushf
rolb
sbb
pop
shr
sbb
sbb
loop
add
mov
inc
fcomi
inc
movsl
lcall
push
test
mov
js
or
jecxz
inc
sbb
inc
cmp
xchg
sbb
ret
mov
fstpt
cs
mov
mov
dec
jns
push
fidivs
xor
jae
lcall
mov
dec
sbb
loope
jne
ret
mov
out
sub
shlb
mov
mov
adc
test
leave
setne
fisubrl
aas
lock
or
pop
popa
jns
int3
je
cmpl
lds
adc
pop
push
cmp
mov
sbb
xchg
add
adc
jecxz
sub
xchg
xchg
inc
decb
mov
inc
jne
bound
sbb
xchg
test
or
mov
pop
jle
cmc
xchg
or
lea
cltd
sbb
scas
and
lret
push
mov
inc
ret
mov
adc
adcb
lahf
and
rorl
ret
imul
ss
jne
gs
or
add
jbe
or
and
fisttps
imul
and
inc
cmp
jle
cmpsl
mov
xor
pop
aam
mov
ljmp
cwtl
mov
mov
or
in
mov
adc
scas
cltd
jo
lods
xchg
pop
cli
and
and
sbbl
xchg
add
jnp
sub
cmp
pop
mov
pop
stc
add
lods
cli
lea
das
sbb
cmc
not
mov
xlat
add
or
add
out
push
xor
lock
mov
mov
fsubs
mov
push
mov
jge
sbb
movl
xor
lcall
mov
adc
fisttpll
sbb
fcomp
jb
or
jecxz
call
mov
sub
cmp
sbb
jl
sbb
jg
or
enter
shr
or
popa
jl
sbb
cltd
pop
test
jno
mov
add
out
mov
dec
test
jle
lods
pop
lcall
loopne
dec
leave
mov
mov
imul
andl
in
dec
dec
hlt
ud0
stc
add
lock
stos
dec
pop
push
pop
xchg
adc
jmp
sub
jae
pop
fistps
cmc
iret
jg
lret
loope
sub
in
push
outsb
out
lds
xchg
aas
adcb
xor
in
rcrb
test
orl
jbe
into
xchg
xor
pop
xchg
adcl
xor
push
mov
inc
xchg
pop
int3
pop
es
mov
hlt
sub
add
adc
fsubrl
push
cmc
sub
shll
jae
movsb
jno
fsubrl
movsb
mov
mov
and
mov
rcr
in
push
mov
call
mov
mov
iret
mov
mov
fsubrp
scas
xchg
jne
mov
jne
and
jnp
out
mov
shlb
in
aaa
push
xor
enter
push
pop
das
inc
jl
sbb
idiv
cmp
jbe
cmp
enter
fisttpl
sbb
clc
xchg
sub
sbb
push
in
jns
test
jmp
mov
jnp
hlt
call
or
clc
adc
call
mov
lcall
mov
call
inc
out
sbb
pop
jge
push
imul
or
ljmp
or
cmp
xchg
es
mov
sub
push
inc
fs
out
leave
adc
aaa
sub
or
jge
mov
in
aaa
xlat
mov
mov
ficomps
and
cmp
sub
addb
popa
cmpsb
jb
push
frstor
in
fsubrl
popa
divb
push
mov
andb
xor
int
call
mov
push
jnp
mov
push
mov
imul
aas
clc
xor
jns
ret
sub
push
ffree
xlat
sbb
add
insl
inc
mov
mov
inc
arpl
sub
xor
jbe
mov
sbb
dec
loopne
xchg
mov
pop
jp
add
push
jno
scas
push
ljmp
mov
aad
jns
jge
je
jl
and
push
push
push
call
add
or
xchg
fidivl
sbb
ljmp
jnp
jp
adc
jnp
sub
nop
xor
enter
cmp
cmpb
xchg
loope
xchg
roll
inc
mov
fldenv
cmc
call
mov
shlb
add
and
je
cli
dec
call
int3
out
jmp
in
cmc
push
mov
lea
loope
xchg
je
jno
iret
sbb
je
xchg
aad
shr
push
sub
cmp
mov
xor
repnz
pop
mov
pop
popf
jb
sbb
sub
cmp
mov
mov
pop
sbb
xor
ss
sub
cmp
sbb
jg
xor
hlt
dec
iret
or
xchg
push
mov
icebp
scas
icebp
clc
xchg
sti
and
pop
and
inc
fldcw
in
in
std
ss
orb
jae
adc
xchg
jg
xchg
dec
xor
sbb
fstpt
cmc
outsl
sarb
test
cwtl
dec
out
int3
jle
pop
push
pop
push
or
mov
sbb
push
out
jbe
dec
pop
or
cmpb
imul
addr16
dec
sbb
shlb
call
cli
mov
clc
mov
hlt
sbb
inc
lea
push
jmp
outsb
adc
adc
jecxz
push
arpl
movsb
rorb
jp
push
hlt
inc
mov
in
add
dec
mov
movsb
inc
movsb
idivl
ficoml
sub
cmp
andb
in
mov
jge
in
push
xchg
push
repnz
out
rcl
lahf
push
mov
imul
xor
stos
push
push
push
pop
cmpsl
imul
in
addr16
mov
cmp
push
popf
mov
je
cmp
mov
push
adc
pop
adc
cmp
fimull
aaa
mov
jns
popf
cmp
jne
jmp
test
es
jl
or
cmp
in
sti
je
pop
push
xor
ljmp
ret
add
sub
test
adc
pop
je
and
test
xorl
idivb
mov
fsub
xor
and
xor
les
and
cwtl
aas
xchg
push
cmp
sub
orps
call
mov
push
mov
insb
mov
mov
mov
jo
jle
rcrb
je
lods
cltd
test
xor
lret
outsb
xor
aam
cmp
cli
ret
iret
jno
add
mov
incb
lock
rcrl
out
sub
or
lcall
int3
sub
or
aad
mov
lea
lret
push
push
xor
aaa
pop
popa
or
jg
out
xchg
test
add
dec
lds
imul
js
addb
inc
test
sub
arpl
and
sti
pop
sbb
test
push
and
stc
xor
add
jno
xor
cmp
mov
or
or
outsb
daa
pop
mov
dec
xchg
push
lea
mov
push
xchg
xor
mov
mov
xor
clc
repz
mov
mov
pop
mov
icebp
inc
imul
sbb
test
imulb
clc
push
stos
sahf
xor
pop
jno
fwait
out
lods
dec
dec
xlat
fwait
aas
push
xor
ret
mov
mov
adc
mov
push
xor
cmp
add
popf
mov
push
push
sbb
dec
shrb
push
cmp
push
mov
loopne
push
sbb
pushf
mov
mov
cmp
je
push
or
dec
and
cld
sar
pop
xlat
mov
ficoml
add
cmpsl
push
stos
call
into
inc
push
fimull
movsb
and
int
mov
adc
adc
flds
fcoms
mov
adc
add
cmp
dec
xor
sti
cltd
das
jne
stos
jmp
xchg
fadd
inc
out
xor
push
push
pop
push
or
sub
inc
ja
pop
mov
sbb
addl
test
adc
jmp
push
jmp
popa
cmp
testb
ret
xchg
push
xchg
add
out
mov
cld
popa
cmp
sub
les
push
xchg
cld
inc
lods
pop
mov
mov
cmp
mov
movb
push
stos
lods
mov
xor
mov
mov
lea
xchg
mov
out
movswl
mov
mov
and
or
aaa
pop
adcl
jge
jbe
push
test
add
or
call
std
sti
aad
call
pop
xor
xchg
sti
rol
cli
fincstp
loop
adc
js
fucomp
inc
pushf
jmp
cli
mov
ja
aaa
bound
and
shlb
lea
mov
xor
jmp
adc
stos
shr
push
pop
stc
sbb
sti
call
jle
xor
push
mov
test
rdpmc
dec
jnp
dec
jne
imul
inc
andl
add
aam
movsb
scas
ja
mov
mov
mov
ljmp
pop
xor
ficompl
pop
ss
or
add
sub
pop
jo
jmp
mov
aas
pusha
popl
jo
iret
add
popa
mov
or
ja
adc
push
sub
out
xchg
jb
js
inc
popf
outsl
and
out
cmp
xor
jbe
push
lods
cmovs
inc
push
cmp
dec
xchg
pop
cmc
insb
inc
mov
xchg
loop
jg
mov
mov
pop
push
repz
ljmp
inc
test
cmp
adc
testb
je
inc
in
adc
xlat
mov
mov
dec
jmp
jns
cmp
mov
push
pop
push
lock
mov
fcmovnu
sub
push
sub
loopne
icebp
arpl
xchg
mov
rcrl
add
pushl
pop
sbb
sbb
mov
sub
pop
shl
push
negb
cmpsb
mov
or
dec
jmp
push
jno
xor
push
sub
pop
sub
pop
push
jne
call
pop
sbb
inc
mov
mov
pop
pop
pusha
ljmp
mov
dec
ret
lea
push
mov
adc
sbb
out
sbb
cld
dec
cmpl
or
dec
sbbl
dec
sbb
rcl
jbe
pop
dec
std
mov
inc
xchg
dec
mov
dec
and
pop
pop
test
test
scas
sub
adc
ficoml
cvtdq2ps
mov
dec
sbb
ficompl
imul
sub
cmp
cwtl
lods
fistps
call
btr
movsl
fildl
ljmp
loope
mov
nop
push
loop
insb
xchg
pusha
mov
inc
jg
add
fsubrl
xchg
dec
std
jle
mov
push
jbe
stos
loop
mov
lods
out
sub
sbb
loopne
inc
aam
stos
inc
xor
xchg
mov
sub
inc
mov
ds
xchg
dec
inc
in
lahf
mov
pop
cwtl
call
mov
adc
outsb
cwtl
lret
fists
lods
sub
fwait
mov
add
inc
inc
adc
pop
or
sub
imul
xchg
mov
mov
cmp
pushf
popf
mov
insb
addb
fisttps
xchg
cli
push
dec
mov
pop
ja
push
dec
mull
jge
jp
push
inc
shlb
fisubrl
scas
sbb
sbb
out
inc
in
mov
fwait
add
or
mov
adc
add
jecxz
jg
mov
pop
mov
sbb
mov
movsb
das
mov
das
pop
out
je
add
inc
cmp
push
hlt
call
ja
test
js
sbb
add
lcall
imul
mov
sbb
mov
ss
mov
mov
cs
sub
subl
sub
add
adc
xchg
dec
ret
add
mov
push
xchg
icebp
mov
cmp
in
shlb
inc
test
mov
sbb
dec
push
mov
mov
mov
fmull
dec
movsb
xor
mov
imul
dec
push
sub
ss
push
mov
mov
pop
rcll
dec
pop
daa
fs
mov
icebp
dec
bound
pop
out
or
das
out
in
dec
pop
subb
and
sahf
jno
mov
roll
pop
fbld
mov
and
mov
mov
or
rcr
mov
mov
mov
sub
in
dec
in
push
call
int3
stos
inc
rcrb
das
xchg
inc
inc
push
adc
pushf
sti
cmc
jne
push
int
xchg
mov
dec
in
out
xor
xchg
call
adcb
sub
roll
sti
inc
jmp
repz
test
hlt
bnd
push
push
cs
mov
lcall
hlt
and
and
pop
cwtl
sbb
in
jb
pop
mov
and
jns
pop
fcmovu
and
inc
adc
jl
mov
dec
xchg
jmp
cmp
shrd
loope
mov
pop
cwtl
mov
cmp
fiaddl
pop
add
cmp
cmpl
imul
fld1
filds
pop
jmp
cmp
xchg
mov
mov
mov
shll
test
inc
pop
mov
jg
mov
dec
mov
mov
mov
add
lcall
inc
jle
push
imul
test
mov
inc
and
inc
cmp
das
int3
and
cmpsl
outsb
fnstcw
cmpsb
call
sub
mov
mov
add
xor
pushf
jge
pop
push
in
test
xor
dec
push
out
in
and
jne
aad
test
mov
xchg
mov
leave
mov
inc
pop
inc
jne
sub
shlb
in
inc
lcall
and
xor
lock
ljmp
nop
pushl
in
lcall
sbb
pop
add
fiadds
pop
xchg
xchg
pop
mov
or
mov
lods
lahf
xchg
leave
sbb
dec
cwtl
das
push
sbb
xlat
pop
sub
cs
cs
mul
ljmp
push
add
cmpsl
call
jne
pop
shr
pop
rcll
jno
sub
ja
addb
cmp
pop
fs
rcr
test
jmp
inc
jnp
test
dec
inc
shrl
xlat
pusha
inc
in
sbb
xchg
stos
call
sub
jno
and
push
stos
cmp
test
lret
xor
inc
xchg
sub
inc
test
pop
test
fisttpll
decb
repz
enter
int3
adc
mov
dec
ljmp
xchg
insl
pop
ret
aas
repnz
fdivs
inc
mov
aaa
inc
subb
cmp
mov
dec
mov
and
insb
fists
or
or
fxch
cmp
dec
ljmp
xor
daa
xchg
mov
fs
sbb
lahf
xchg
shl
mov
lea
popf
lock
mov
popf
fisttpl
cmpb
cmp
xor
mov
push
icebp
add
stc
mov
jmp
xlat
call
incb
orb
loop
add
out
mov
sub
in
xor
mov
inc
cmp
mov
push
shr
inc
aam
clc
mov
xchg
xchg
sub
dec
push
ja
insl
sbb
outsb
adc
inc
addr16
jns
fbld
xchg
scas
cmp
mov
aad
test
fstpt
sbbl
andl
pusha
iret
lds
add
mov
jne
and
mov
mov
adc
jo
aam
adc
hlt
loop
leave
and
and
fistpll
cmp
imul
mov
shrb
aas
repz
lods
sbb
jb
aam
add
test
mov
lods
xchg
dec
add
movsb
mov
adc
jmp
adc
outsb
inc
jbe
adc
lock
cld
push
lods
shr
jl
inc
nop
xor
movsb
xchg
mov
cwtl
push
ret
lea
hlt
jb
pop
test
cmp
sub
daa
jle
jmp
loop
shl
jmp
jge
mov
aad
shr
or
rcrb
and
push
imul
lcallw
test
adcl
mov
push
push
mov
fisttpll
xor
stos
insl
call
aad
mov
ficomps
mov
push
ss
outsb
mov
jmp
jmp
and
push
call
mov
mov
call
or
clc
test
sbb
cmpsb
es
or
fstpt
add
jbe
sub
faddl
sbb
push
jbe
pop
enter
cmpsb
push
pusha
push
pop
hlt
inc
insb
cli
sub
xor
ds
out
jne
sbb
mov
mov
fcom
loopne
xchg
lods
push
cmp
jo
jbe
push
or
pop
rclb
dec
pusha
arpl
sub
call
mov
fisttpll
iret
sub
push
sbb
out
add
xor
lds
out
pop
outsb
adc
inc
pusha
cmp
push
mov
scas
inc
loopne
shl
mov
mov
pop
xchg
jge
and
inc
xchg
notl
test
sub
stos
adc
out
pop
sub
loopne
inc
cld
movsl
mov
push
mov
pop
mov
out
jle
add
push
arpl
pop
mov
clc
pop
ficoml
or
add
pop
clc
jae
mov
add
dec
mov
pop
push
adc
add
cmpsl
sbb
sbb
rclb
sti
insl
add
mov
fld1
popa
cmp
imul
fidivrs
into
stos
sbb
dec
loope
inc
ss
add
insl
ret
hlt
mov
mov
mov
clc
sbb
pop
mov
hlt
or
flds
push
sbb
ljmp
push
dec
hlt
xor
xor
clc
fcmovnbe
call
xchg
and
loop
dec
fsts
cmp
stos
and
jmp
cmp
inc
insb
or
fsubl
sbb
xchg
out
sub
in
cmpl
in
mov
jb
out
cmp
aam
inc
cmpl
jge
fdivs
in
sub
pop
movsb
test
xor
xchg
or
mov
add
leave
and
aas
stos
push
and
jmp
int
xor
out
int3
fstps
and
adc
ja
jb
cmp
jae
ret
call
mov
out
jnp
cmp
imul
jnp
test
jb
fsub
imul
cmp
jge
sub
fstpl
cli
mov
je
outsl
add
andl
xor
stos
dec
out
add
paddsw
stos
adc
add
pop
jle
mov
ret
cmp
in
pop
iret
push
and
repz
into
mov
adc
add
xor
xor
add
jge
jb
ja
add
push
adc
stc
jge
pop
sub
mov
fnstcw
stc
outsl
xchg
cmp
stc
sub
inc
xchg
aaa
xchg
fstp
adc
push
test
sbb
pop
ja
cmp
add
cltd
les
and
in
or
mov
or
ret
xor
call
or
test
push
pop
aad
jnp
andl
xlat
testl
mov
rcl
jmp
push
dec
inc
jmp
leave
or
loope
xchg
and
mov
xor
push
jg
or
ss
scas
inc
jbe
xor
call
sub
dec
mov
jne
xor
jmp
mov
or
stos
shrl
jge
in
enter
dec
mov
dec
xor
add
into
out
inc
sub
sahf
dec
inc
push
fldl
xor
fcomip
and
pop
decb
pushl
push
mov
xchg
push
push
ljmp
loopne
push
repnz
subl
xor
ss
psubusw
out
cmp
das
gs
pop
aas
push
movq
sub
mov
and
test
call
dec
lock
cltd
jp
jg
pushf
dec
mov
nop
sub
add
cli
in
push
adc
adc
and
sbb
arpl
inc
mov
xchg
in
sub
shrb
hlt
mov
lahf
aam
popf
push
test
in
cmp
mov
sub
mov
dec
call
neg
outsl
rolb
cmp
scas
sub
repz
sbb
fsts
mov
xchg
xlat
das
ja
jo
mov
xchg
fsts
stos
pop
jmp
cld
add
and
push
push
call
stc
scas
sub
punpckhwd
mov
add
aad
jns
xchg
imul
fildl
lcall
fadds
sahf
add
add
fcmovnb
popa
addr16
dec
mov
xchg
push
or
ja
lahf
sbbl
mov
mov
pop
jle
mov
inc
paddb
imul
push
je
or
call
dec
jno
cmpsl
push
pop
data16
add
in
rcl
and
mov
mov
xor
mov
ja
mov
adc
adc
sbb
sbb
and
and
sub
cmp
add
push
mov
mov
imul
add
or
aaa
aam
sub
push
shll
arpl
cli
mov
pop
adc
and
push
fst
roll
imul
pop
movsl
ljmp
mov
jno
fwait
lahf
mov
lea
inc
pop
cli
inc
dec
mov
enter
push
int
cld
je
inc
sub
inc
hlt
dec
xchg
sub
mov
adc
mov
fwait
push
pop
inc
mov
in
fisttpll
adcb
xor
fcompl
inc
rcrb
scas
fs
fldcw
fcmove
call
dec
xor
push
in
shlb
cmc
cld
cmp
mov
mov
inc
mov
xorl
jecxz
push
push
ja
or
sar
xorb
mov
aad
jns
cwtl
adcl
into
arpl
jns
jp
jle
or
pop
mov
add
sub
shrb
pop
cmpsl
xchg
scas
stos
in
addr16
outsl
mov
out
addr16
jg
fidivrl
bnd
in
loope
jns
enter
push
int3
test
lea
ja
shll
repz
fldt
dec
fwait
or
inc
fildl
mov
xor
sbb
lds
cmp
mov
jmp
inc
jg
aaa
aad
sbb
inc
sbb
lret
lea
pop
ret
inc
les
test
sbb
xorl
push
sub
shll
mov
mov
dec
test
mov
incl
pop
sbb
lods
push
jnp
in
xchg
stc
loopne
sbb
addl
xchg
aad
stc
mov
loopne
jmp
pop
in
mov
rcrb
jbe
xchg
inc
mov
daa
cmc
fsts
aas
ror
mov
or
adc
add
mov
or
rcl
pop
sbb
lret
icebp
push
repnz
or
sti
je
adc
aaa
sub
sub
inc
pop
jge
sbb
inc
arpl
int
xchg
mov
cmp
sti
push
test
fistpl
fld
fwait
sti
pop
push
add
sarb
inc
ret
ret
fdivs
xor
in
cld
adc
fincstp
fnstenv
adc
xor
sub
ret
cld
and
pop
in
jge
xchg
ret
imul
shr
sbb
jmp
in
sub
movl
lock
lcall
mov
push
dec
dec
push
stc
push
pop
lea
enter
cltd
outsb
sahf
add
fdivs
mov
bound
mov
pop
iret
lahf
adc
out
arpl
push
pushf
push
or
cmp
cld
inc
xlat
jne
xchg
inc
repnz
add
rcr
addr16
sbb
in
aas
or
call
je
ret
and
call
je
and
jno
cltd
push
dec
fld1
mov
jg
dec
fsubrl
mov
fcmove
scas
sub
push
xchg
or
pusha
and
push
pop
mov
or
leave
pop
sub
test
jb
or
repz
or
outsl
aaa
stc
mov
or
mov
fiaddl
pop
sbb
xor
and
int
add
loope
imul
push
jne
cwtl
pushl
test
push
push
mov
or
or
addb
adc
or
mov
cmp
enter
cmp
orb
mov
leave
mov
inc
inc
mov
fucomip
cmp
mov
and
mov
mov
lods
mov
push
add
pop
push
or
jne,pt
mov
popa
movsl
test
lock
out
add
lods
mov
inc
cltd
push
hlt
repz
sbb
jp
ret
scas
push
rorl
or
jmp
ret
sub
sub
adc
jecxz
fstl
push
push
fs
lret
test
mov
leave
sbb
ss
push
add
cmp
pop
lock
out
xchg
mov
and
jecxz
adc
adc
mov
mov
loopne
sbb
and
or
out
sbb
fcomps
add
fsubrl
push
jecxz
adc
sub
push
mov
ret
adc
out
mov
rorb
jmp
sbb
fsts
jae
sbb
mov
pop
jge
push
pop
out
rolb
fdivs
pop
pop
inc
sbb
fdivs
fnsave
inc
xor
cmc
sbb
hlt
iret
lret
jbe
arpl
fdiv
dec
inc
cmc
jmp
push
rorl
sbb
enter
jg
call
cmp
rcr
sbb
xchg
add
cmp
and
clc
loope
dec
xchg
push
mov
sbb
adc
inc
adc
pop
push
inc
xor
ljmp
push
push
and
nopl
fwait
subl
adc
dec
cmpl
out
lds
dec
lret
movl
pop
insl
or
sub
fadds
lods
lret
add
ret
addr16
mov
mov
jmp
sub
and
mov
cld
cmp
shll
movsl
cltd
mov
mov
cmpsb
xor
push
push
lcall
sti
cmpsb
lret
jae
jecxz
inc
jae
jne
aas
jns
test
mov
pop
dec
mov
adc
jl
ret
sub
dec
fpatan
roll
dec
push
popl
add
add
push
jl
adc
mov
xor
inc
push
pop
jl
sub
jne
sbb
popa
inc
mov
adc
outsl
call
pushl
and
call
jmp
dec
shl
cld
outsl
add
shl
scas
clc
mov
test
clc
or
mov
mov
out
scas
negl
fimull
loope
mov
sub
jnp
sarl
jnp
pop
push
push
jp
ret
mov
fldpi
jnp
mov
inc
jl
adc
pop
into
xor
pusha
jmp
scas
in
int3
cmc
cmp
adc
xor
sbb
push
jecxz
dec
inc
jle
ds
and
or
shl
add
xchg
inc
repnz
push
and
scas
movsl
outsb
scas
adc
mulb
call
in
shll
mov
addl
pop
cmp
cmp
je
pop
cmp
shll
jne
or
and
sbb
mov
sub
scas
ret
push
bound
loop
das
cmp
xchg
testb
inc
insl
lds
jnp
cmp
cmp
or
stos
icebp
push
push
adcl
mov
test
bound
int3
outsl
and
sub
jae
je
ret
mov
jb
mov
add
out
push
jns
dec
out
push
rcrb
pop
lods
les
into
je
dec
mov
add
pop
test
jmp
out
mov
test
push
xchg
mov
dec
push
call
lods
int3
lock
mov
push
add
sbb
fs
call
push
out
xchg
sbb
arpl
ds
out
add
fisttpll
jne
pop
movsl
aam
call
popa
mov
inc
ffreep
lret
test
mov
mov
std
jmp
orb
test
mov
push
cld
fidivrs
shrl
xchg
rorl
cmp
add
mov
adcl
subl
pop
mov
push
add
test
inc
scas
dec
sub
ret
pushf
das
int3
push
fisubrs
adc
mov
shl
jmp
mov
inc
fcmovb
out
in
inc
sti
sub
sub
jge
rcrl
inc
fld
sarb
or
pop
and
pop
in
jns
xchg
sub
mov
sbb
and
jge
jecxz
out
pop
fimull
sbb
test
mov
push
mov
scas
push
inc
push
mov
adc
inc
and
nop
sahf
inc
hlt
repz
push
inc
ds
dec
sbb
push
fmull
ss
or
push
addr16
inc
push
dec
adc
clc
imul
or
dec
mov
pop
ss
gs
mov
adc
fisttpll
ret
jae
cmp
add
gs
clc
into
cld
adc
jne
popf
dec
ret
sub
xchg
sti
jne
rol
test
sbb
inc
sbb
lea
cmp
mov
js
std
shrb
ljmp
nop
sub
aad
add
and
add
int
arpl
mov
add
or
pop
cmpb
jbe
into
out
and
sub
xchg
xchg
out
ss
pop
imul
push
jnp
xor
cld
arpl
lock
xchg
and
mov
mov
in
fsubrs
dec
sbb
div
andl
mov
dec
ja
xchg
mov
or
outsl
out
test
jns
outsl
inc
clc
subb
popf
ficoms
mov
add
jo
dec
cwtl
push
jge
shl
subl
loope
int
in
cld
cltd
mov
push
or
pop
mov
mov
call
adc
arpl
enter
push
add
mov
pop
jbe
pop
cmp
dec
mov
mov
in
int3
sub
daa
xadd
pop
int
outsl
in
jecxz
outsb
mov
xor
repnz
push
call
and
jmp
push
sbb
das
shl
or
adc
cltd
in
notb
ret
call
mov
imul
out
inc
cmp
push
mov
cmpsl
jmp
sti
mov
push
pop
mov
cmp
and
mov
mov
loop
push
cmp
jne
cmp
into
mov
enter
movsb
inc
lahf
mov
push
pop
fs
push
mov
mov
dec
test
dec
push
pushf
test
insl
pop
sahf
fsub
jmp
adc
out
clc
jp
fbstp
cld
jne,pt
cmp
repz
cli
push
ret
or
add
jne
jmp
in
lds
repnz
fisubs
xchg
cli
dec
das
stc
inc
mov
shr
fdivrl
rorl
jge
in
movsl
mov
pushf
fldpi
jp
les
mov
test
mov
shrl
aad
lods
push
pop
mov
movsb
aad
dec
push
sub
aam
add
xchg
cltd
xchg
mul
aam
jp
mov
aas
fmull
loop
fildll
inc
int3
into
sbbb
imull
lods
fimull
mov
test
test
push
pushl
lcall
sbbl
fcmovu
mov
dec
cmp
lahf
jp
test
ljmp
outsl
aad
push
int3
fistpll
movsb
ss
xchg
scas
dec
add
andb
fsubrp
outsb
cs
call
adc
pop
adc
sub
lods
scas
out
aam
sbb
or
movb
jp
inc
aas
dec
inc
xor
inc
adc
in
inc
adc
imul
xlat
or
cli
sbb
push
icebp
sarb
call
adc
add
pop
add
add
add
add
add
dec
add
add
add
add
add
pop
add
add
cmp
add
add
add
add
jo
aaa
add
add
add
add
add
add
add
add
xor
dec
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
inc
add
dec
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
dec
add
add
jb
dec
jns
xor
add
add
add
add
aaa
add
add
push
add
xor
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
xor
add
add
add
add
inc
add
add
add
jae
add
add
fs
add
add
pop
add
add
add
insb
add
add
add
add
add
add
inc
add
add
add
add
imul
add
add
add
add
dec
add
arpl
add
add
add
dec
add
add
add
dec
add
add
add
push
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
insl
add
add
add
dec
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
ja
insb
dec
add
add
add
add
add
imul
add
push
add
add
add
add
add
add
push
add
es
shll
jmp
or
sub
jmp
pop
in
aam
out
inc
negb
cmp
sub
loopne
ss
jmp
or
add
icebp
jae
fsubrp
fiaddl
les
push
xor
xchg
insb
xchg
xchg
sub
xor
js
dec
cs
adc
cltd
mov
push
ljmp
mov
jge
and
mov
rclb
fdivs
std
jo
push
movsb
dec
jne
gs
mov
xlat
push
adc
mov
push
adc
jg
jg
stos
mov
loop
mov
jl
mov
std
sub
in
mov
lahf
push
push
or
pop
adc
sub
dec
ret
jg
cli
fstpt
inc
and
stos
mov
sbb
push
xlat
ss
into
test
iret
mov
aad
out
shrb
testl
or
call
mov
push
jne
out
pop
repz
cmp
pushf
cmp
adc
sbb
jge
inc
inc
test
mov
jecxz
fnstsw
xchg
in
xor
jo
sbb
jo
jne
push
pop
and
lahf
sub
mov
fucom
and
fldl2t
or
push
mov
out
nop
and
shrl
shrl
shrl
fcoms
add
mov
mov
or
mov
jns
xchg
pop
imul
pop
rolb
aaa
popf
sahf
add
jb
cmp
lods
cmpsb
sbb
dec
orl
into
mov
mov
hlt
xor
bound
push
pop
or
insl
pop
das
xchg
pop
jge
add
mov
mov
hlt
std
dec
sbb
repz
xchg
arpl
ret
mov
jbe
xor
inc
push
int
jp
push
das
aam
mov
dec
cmp
and
mov
mov
pushf
pop
ja
adc
test
loop
mov
sub
cmc
es
cmp
dec
test
push
les
das
sti
int3
iret
pop
mov
ficompl
jle
loop
data16
fcomip
das
andb
jecxz
and
aad
fidivrl
std
push
sbbb
xchg
xor
aas
add
adc
mov
cmp
jmp
rolb
and
fsubrs
xor
jmp
or
and
mov
icebp
ss
sbb
out
ret
lret
jbe
out
out
and
lret
in
xor
or
add
xor
ficompl
cmpsb
pop
pusha
call
sbbl
icebp
std
hlt
iret
xchg
icebp
std
out
adc
addr16
inc
fs
lcall
inc
jns
and
sub
cmp
shl
repz
xor
cmp
subl
fcmovb
push
jb
sbb
test
or
ds
and
lock
push
into
and
int
mov
mov
sub
je
scas
aas
leave
dec
or
enter
push
mov
frstor
movsb
cmpsl
xchg
adc
pop
inc
pusha
push
jb
aaa
sub
jg
xor
pop
mov
rolb
out
fcoml
xor
test
sbb
pop
out
std
inc
pop
rcrl
fsubl
and
jbe
cmc
shrb
cmp
iret
call
add
fnstsw
inc
and
mov
and
jle
std
fildll
test
cltd
aad
or
inc
stc
jb
loopne
ret
mov
std
and
cmp
or
cmp
cli
lds
in
cmpsl
mov
out
sub
pop
xor
cwtl
into
mov
or
push
les
and
xor
mov
pusha
sti
jo
call
sbb
andb
pop
xor
in
std
dec
or
jb
pop
pop
push
cmp
add
scas
test
lcall
or
jns
out
jmp
push
adc
pop
inc
ret
sbb
mov
es
dec
mov
sbb
or
lea
test
in
dec
pop
in
loop
adc
xor
pop
mov
mov
loopne
ret
or
jmp
push
mov
mov
div
ljmp
dec
andl
inc
sub
negl
pop
fdivs
push
adc
fninit
ljmp
push
int3
mov
add
loop
cwtl
mov
inc
call
aam
dec
pop
mov
lea
js
push
push
inc
sbb
jno
push
testl
push
adc
test
arpl
inc
add
jmp
repnz
fidivrs
dec
clc
test
sub
in
sub
inc
mov
aam
mov
movsl
xchg
fneni(8087
jmp
sub
fs
aaa
inc
add
xchg
lock
ljmp
out
shl
in
dec
data16
shr
and
sbb
mov
mov
lcall
xchg
pop
clc
lea
outsb
jge
sub
hlt
pop
ficompl
add
lcall
xchg
icebp
inc
lock
push
lea
pop
ss
fstpl
ljmp
out
iret
add
mov
pop
aaa
xchg
enter
mov
xor
push
jecxz
push
mov
and
in
cld
push
fiadds
inc
add
imul
inc
mov
add
sbb
mov
dec
add
xchg
push
mov
fdivr
aaa
or
and
or
push
and
push
call
and
outsl
andb
pusha
mov
loope
lea
xchg
out
movnti
sub
add
fldl
test
test
cmp
mov
cmp
lock
lods
inc
dec
xor
std
cmc
fdivrl
out
daa
ljmp
gs
fucomi
mov
ljmp
and
pop
jno
ja
aaa
ljmp
loop
cmp
or
das
push
sub
sub
loopne
jg
dec
out
cmp
out
mov
add
jg
test
test
mov
pop
or
push
cmpl
push
add
in
sbb
sbb
push
lcall
shlb
loopne
jge
ljmp
testb
mov
mov
sub
dec
call
repz
repz
push
xchg
loop
sub
pop
mov
jae
mov
faddl
rorb
mov
pop
call
or
in
mov
pop
test
push
clc
sbb
or
mov
sub
lea
or
push
sahf
inc
mov
push
call
std
ds
aas
lret
movl
enter
push
jne
and
or
and
dec
push
ret
or
pop
xor
or
lret
mov
jns
ret
xor
jmp
mov
iret
daa
and
adc
pop
pop
sarb
imul
imul
sti
ret
xchg
jb
push
sbb
mov
std
mov
dec
call
add
ret
adc
inc
sbb
mov
and
sbb
into
push
popa
lret
push
sti
jle
and
loopne
jecxz
xchg
xchg
inc
stos
jecxz
addb
pop
addr16
inc
loop
pop
jno
sbb
jge
pushf
sub
mov
jmp
push
xor
push
mov
adc
jne
loop
xchg
pop
or
and
push
test
or
fisttpll
pop
das
mov
sbb
test
inc
cmp
push
psraw
ss
scas
movsb
test
call
imul
pop
stos
mov
std
orl
imul
ljmp
fcmovb
inc
call
call
outsb
lret
ret
pop
imul
ret
cmp
jp
add
and
mov
inc
sbb
and
fwait
push
call
jno
inc
lret
fsubr
push
add
in
sbb
pop
push
sbb
nop
addr16
aam
sbb
push
or
dec
ljmp
add
sarb
adc
and
loope
mov
cmc
xor
inc
inc
popf
jle
lcall
mov
and
add
sub
and
jnp
fldl
and
repz
inc
sarb
mov
mov
adc
sub
cmp
sar
out
adc
adc
lock
cltd
rol
jae
mov
add
mov
lea
push
dec
hlt
jae
cmc
jmp
jo
jnp
lock
jl
xlat
add
out
xchg
mov
shlb
sarl
jnp
call
and
jg
and
cmp
inc
inc
push
scas
shr
or
mov
sbb
push
push
adc
xchg
dec
inc
nop
add
and
and
mov
das
loop
xlat
jge
mov
stos
adcl
jns
je
fldenv
and
shl
cmp
cld
cmpb
aam
mov
cmpsl
movsl
mov
add
clc
push
fidivs
and
rorb
rcl
jp
adc
cmc
sbb
and
xchg
sub
xchg
jae
nop
and
fcoml
pop
daa
jae
data16
inc
popf
stos
ficoml
fldcw
movsb
addr16
adc
push
pop
test
into
fnstenv
js
movsl
jns
lret
add
adc
cmp
dec
stos
out
mov
stos
ret
std
xchg
repz
std
sbb
popf
mov
rorb
jmp
push
into
push
call
mov
add
sub
xchg
sbb
int3
xor
add
mov
dec
cld
add
pop
xor
call
xor
push
shll
mov
sbb
lock
inc
sbb
fs
xchg
sbb
cmp
in
push
push
xor
sahf
xlat
xchg
inc
stos
add
mov
movb
or
hlt
data16
inc
sbb
adc
in
inc
fucomi
in
push
sbb
test
and
imul
test
mov
fadd
sbb
out
inc
fadd
or
clc
push
repz
lods
test
xorb
mov
test
sub
imul
push
jl
imul
in
mov
test
mov
fs
xchg
push
lods
fbld
adc
push
sbb
adc
div
xor
xor
shr
andl
mov
mov
cli
je
daa
clc
adc
mov
dec
xlat
mov
das
push
loopne
mov
fisubrl
psubusw
loope
out
out
cmp
sub
push
inc
push
cmpsl
adc
pop
fcmovu
jmp
mov
xor
movl
cltd
xlat
movsl
mov
jo
and
jb
shlb
shr
inc
aad
fdiv
hlt
or
out
mov
fs
outsb
imul
loop
push
jecxz
inc
mov
cmpsl
jae
mov
sbb
icebp
test
bound
sub
sbb
and
imul
mov
movsl
add
push
aaa
pop
pop
enter
ja
sub
scas
mov
add
lahf
push
dec
cmp
cmc
popf
xchg
stos
jmp
dec
adc
test
cmp
test
aas
pushf
xor
push
out
cmp
xor
lret
aam
bound
rorl
adc
and
jge
aas
adc
imul
insl
dec
dec
and
add
outsb
loop
lods
push
push
je
mov
jle
gs
mov
xor
mov
outsb
adc
call
pusha
addl
push
call
jno
ja
shr
pop
jg
inc
dec
popf
clc
xchg
jae
adc
push
add
push
dec
xor
add
add
push
add
add
add
add
add
add
add
add
add
jno
inc
add
dec
add
jb
push
add
add
add
add
xor
add
add
xor
dec
add
add
push
add
add
add
add
add
add
jbe
add
add
push
add
js
add
dec
add
add
add
add
add
add
inc
add
add
dec
add
add
add
add
push
add
add
arpl
add
add
add
popa
add
add
add
dec
push
add
add
add
add
add
imul
add
add
jno
add
add
add
add
add
add
dec
bound
push
insl
add
push
add
xor
add
add
inc
add
popa
add
add
add
jns
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
pop
add
add
dec
add
add
add
add
add
add
aaa
cmp
add
data16
add
add
add
add
add
add
add
xor
add
add
add
add
imul
dec
add
add
dec
add
add
push
add
push
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
andb
adc
dec
lods
ss
stos
es
inc
stc
adc
push
enter
enter
insl
fisttpll
add
mov
xor
xor
sub
xchg
sub
out
sbb
xchg
aaa
pop
mov
mov
insl
fldenv
out
int
mov
pop
daa
push
jg
in
stc
pop
cmp
pop
nop
inc
mov
imul
adc
jg
inc
rorl
imul
mov
mov
jg
fldl
pop
push
cld
mov
jbe
movsl
lea
imulb
push
daa
fisttpl
xor
call
pop
cs
jmp
push
rclb
aad
fnsave
pop
xchg
sub
ret
nop
pop
adc
fld1
xchg
pop
cmp
dec
jbe
mov
push
add
subl
jns
pop
jl
xchg
loopne
sub
fsubrs
lcall
arpl
jmp
pop
jl
or
adc
movsl
fiadds
xchg
setno
iret
push
ja
outsb
flds
movsl
nop
andl
mov
loope
or
call
ret
and
mov
jge
cli
ret
adc
mov
mov
pop
arpl
mov
or
jb
sbb
jne
stos
xor
xchg
sbb
call
bound
add
mov
lods
xchg
ret
dec
pop
mov
mov
das
mov
add
lret
add
add
push
adc
mov
js
addr16
cmpsb
push
inc
sub
lock
cmp
xor
das
mov
pop
rorb
hlt
js
jp
lcall
mov
jecxz
and
loop
hlt
ficomps
out
mov
inc
or
dec
mov
push
mov
xor
cmp
dec
or
lods
adc
rcrb
pushf
push
xchg
mov
ljmp
push
push
pop
and
aam
inc
call
or
rcrl
sbb
mov
dec
lock
test
or
pop
or
or
jns
jmp
or
lods
mov
in
jnp
adcl
cmpsl
aam
movsl
enter
mov
inc
imul
adc
ret
in
fwait
mov
adcb
lcall
sbb
fldt
mov
rolb
mov
pop
pop
pop
or
or
outsl
enter
in
pop
je
inc
lahf
ds
aaa
mov
je
addl
pop
into
cltd
sbb
mov
sbb
insl
push
dec
and
mov
or
arpl
orb
pop
imul
iret
in
add
imul
iret
mov
mov
sub
imul
xchg
adc
add
out
sub
cmp
es
hlt
dec
mov
cwtl
xchg
cltd
xchg
call
repz
popa
jl
pop
add
out
xor
ret
sub
push
sti
and
call
jb,pn
xchg
mov
ss
or
sbb
dec
lea
gs
fcomps
mov
mov
pop
mov
andb
scas
std
mov
adc
pop
lcall
cmp
add
push
pop
pop
fcmovnu
mov
stos
mov
and
cmp
xchg
add
sti
ret
add
push
into
xor
dec
in
ja
cmp
mov
xorb
and
sahf
xor
loopne
sahf
sub
fidivl
cmpb
loope
stos
push
ljmp
sub
inc
or
xchg
mov
faddl
imul
add
lahf
ret
push
movsl
inc
std
aad
imul
fwait
jbe
fucomi
pop
js
dec
jmp
mov
pop
xchg
jmp
cld
and
push
imul
mov
jl
shrl
jmp
aam
add
pop
addl
xchg
cmp
aas
inc
and
mov
out
inc
sub
sub
cmc
arpl
mov
orb
call
mov
ficomps
push
jne
pop
call
push
scas
mov
cmp
gs
ja
jle
and
aad
lahf
mov
loope
mov
fwait
call
test
xchg
test
mov
pop
sbbb
je
push
fsubr
jno
cltd
push
push
jecxz
xchg
and
inc
sbb
jecxz
movb
cmpsb
rolb
mov
push
iret
sbb
aas
rorl
int
stc
sbb
mov
add
fsubl
add
sahf
cmp
in
inc
dec
outsl
popa
pop
das
push
push
adc
inc
and
out
cmp
ja
mov
pop
movsl
cmp
rcrl
movnti
in
rolb
nop
ljmp
or
xchg
in
mov
pop
fisubl
pop
mov
push
push
adc
in
push
pop
mov
xchg
movsl
lock
mov
cwtl
mov
push
pop
mov
out
call
addr16
adc
xor
push
xlat
cmovg
cmp
mov
inc
jge
ret
ss
sub
mov
loop
data16
test
cmpsl
fists
mov
pop
fcmovnbe
push
mov
subl
pop
mov
cs
xor
lods
mov
mov
sub
or
imul
jge
xchg
cmp
dec
jbe
or
push
push
lcall
inc
and
add
dec
pop
jno
ss
out
pop
mov
pop
xor
pop
wrmsr
into
jne
push
mov
adc
les
scas
ret
push
xchg
and
lcall
in
xorb
sahf
fsubrp
or
in
push
and
inc
xor
add
movsl
es
mov
in
dec
pushf
sub
shrb
cmp
sub
arpl
mov
ret
push
sbb
pop
adc
rorl
mov
imulb
and
sbb
mov
mov
push
popf
popf
xchg
push
mov
mov
test
adc
mov
cwtl
movsb
cmp
mov
cli
mov
jmp
xorb
or
mov
out
mov
add
xor
pop
xor
sub
sahf
outsb
or
movsl
cmp
mov
push
test
and
sar
sub
in
pop
or
pop
out
add
pop
int
aaa
pop
sbb
jmp
insb
jbe
stc
add
and
movsl
ja
das
pop
test
mov
pusha
push
mov
outsl
in
aas
movsb
sbb
dec
cvtps2pd
jp
mov
push
dec
int
bound
dec
jge
inc
loop
sub
lcall
pop
sub
je
and
mov
aaa
call
jle
pop
mov
call
mov
mov
jns
loope
shrl
mov
mov
xchg
push
ret
and
out
push
sbb
or
mov
mov
mov
xor
push
push
imul
xchg
inc
js
sbb
clc
push
add
jo
jo
add
inc
push
push
lret
in
xchg
jne
rcll
or
mov
test
mov
cmpsl
into
jg
push
or
lock
inc
das
leave
std
in
dec
mov
pop
jbe
inc
inc
je
cmc
mov
mov
imul
fcmovbe
test
jns
call
xchg
mov
xor
push
adc
push
sti
mov
inc
insl
fisubs
fucomp
xor
push
out
mov
push
call
inc
mov
test
pop
xor
jmp
ret
lcall
pop
mov
mov
mov
lcall
or
add
popa
repz
lret
and
xchg
jbe
ret
pushf
pop
imul
push
push
loop
loopne
push
or
int
popa
sahf
sbb
cmp
sti
enter
push
xchg
sar
xor
aam
xchg
lret
call
adc
adc
js
punpcklbw
into
scas
sbbb
call
jnp
loopne
movsb
rol
scas
call
mov
inc
mov
or
xor
nop
adc
xchg
insb
jp
in
rclb
call
pushf
add
sbb
mov
push
jae,pt
repz
call
je
repz
out
inc
call
mov
std
xor
add
jbe
mov
add
cmp
add
lea
xlat
lahf
stc
cmpsl
mov
xorps
dec
ret
inc
push
push
sti
xchg
fwait
daa
push
or
cld
inc
xchg
push
scas
in
in
xchg
or
adc
je
push
insl
enter
pop
outsl
sarb
xor
mov
lea
and
out
insl
gs
add
cmp
mov
and
sbb
inc
inc
icebp
jg
cmp
xchg
sbb
xor
loopne
push
lahf
inc
sarb
add
jmp
inc
mov
mov
fsubrs
jae
test
sbb
imul
pop
mov
rolb
data16
dec
frstor
pop
or
repnz
mov
lods
xor
iret
xorl
jmp
lock
mov
fnstcw
push
xor
xor
sub
fistpll
ret
xchg
inc
adc
pop
iret
jns
mov
call
add
cld
cmp
pop
inc
mov
mov
xchg
push
call
sub
mov
mov
cwtl
repz
fnstcw
inc
and
out
fmuls
fildl
loope
into
mov
pop
ret
inc
orl
test
rclb
fsubr
cmp
mov
iret
and
pusha
inc
fsts
out
adcb
test
lea
mov
sub
pop
lcall
fnstcw
stc
inc
add
pusha
adcb
das
loopne
xor
dec
inc
xchg
jae
push
decb
mov
xchg
sub
adc
pushf
xchg
push
dec
pop
call
xchg
shll
adc
add
cmp
std
mov
pop
test
test
shlb
pusha
add
sbb
jmp
jbe
push
cld
pushf
sbb
and
clc
jne
mov
mov
iret
mov
in
in
rcrb
mov
push
cld
ja,pn
add
xchg
and
jmp
inc
jl
lcall
cli
imul
mov
jb
test
paddd
stos
and
cmpsl
lahf
push
push
in
jp
out
push
push
add
rorl
in
or
test
or
ss
add
sti
out
add
popf
xchg
cmpsb
fstpl
mov
pop
adc
cmc
call
cmp
incl
xor
adc
add
fildll
repz
nop
nop
loopne
cs
inc
jo
lcall
adc
mov
mov
les
cs
xorl
je
inc
xchg
mov
call
inc
scas
lcall
arpl
call
sbb
mov
iret
pushf
hlt
mov
add
imul
add
add
add
dec
add
dec
data16
add
add
add
pop
add
add
push
add
dec
inc
add
add
add
inc
popa
add
add
add
add
push
add
add
outsl
add
push
add
pop
add
dec
add
je
add
add
add
inc
push
jno
add
add
add
add
add
dec
add
add
add
add
dec
add
push
add
push
add
add
add
arpl
add
add
add
add
add
add
outsl
add
add
add
add
add
ja
add
add
add
cmp
add
add
xor
add
add
add
data16
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
jno
add
add
add
add
add
add
dec
add
add
add
add
add
pop
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
push
add
add
add
add
dec
add
add
add
js
add
add
add
add
dec
push
add
dec
add
add
add
add
add
add
add
add
add
add
leave
lds
xor
ror
add
ret
mov
inc
dec
mov
or
popf
cli
repnz
ret
dec
add
leave
jbe
inc
or
inc
loopne
smsw
add
xchg
mov
adc
and
pop
aad
movl
ret
add
movb
int
add
dec
cmp
pop
stos
enter
arpl
pushf
add
arpl
xlat
je
js
repz
data16
int3
jb,pn
popa
je
lock
outsb
aaa
push
jo
or
out
inc
add
cs
test
or
shrb
jecxz
rorb
lret
cli
call
fistl
inc
enter
sub
movsl
sub
popa
xor
fidivl
pop
ret
push
xchg
faddl
rcrb
jno
add
les
pop
dec
mov
mov
call
insb
pop
lock
clc
stc
je
dec
xchg
fidivrl
or
sub
pop
test
sbb
mov
sub
nop
ljmp
pushf
stc
dec
shlb
ljmp
stc
jo
enter
mov
ljmp
fdivr
nop
rcr
cwtl
dec
mov
ljmp
xchg
fcmovu
mov
lock
sahf
in
ret
into
hlt
cld
ljmp
ret
sbb
mov
sub
xor
cmp
mov
fisttpl
inc
mov
je
jl
test
mov
xchg
ljmp
mov
lods
jmp
xbegin
fcmove
cld
insl
sbb
fmuls
add
loopne
or
call
rclb
xbegin
mov
add
adc
and
and
sub
sub
mov
mov
xor
inc
add
dec
stc
inc
rclb
fs
mov
push
scas
push
pushf
dec
mov
mov
scas
mov
test
mov
les
int3
mov
aam
fadd
in
mov
ljmp
orl
mov
dec
xor
xor
into
inc
dec
jmp
fs
mov
fstpt
mov
xchg
loop
cwtl
imul
mov
je
sarb
mov
stc
enter
rorb
enter
int3
add
scas
sar
call
dec
mov
ljmp
inc
loopne
or
in
adc
call
in
pop
and
lock
sub
hlt
shlb
xbegin
cld
pop
inc
pop
fildl
dec
scas
add
push
rorb
pop
dec
mov
pusha
pop
adc
push
rcll
jmp
mov
aam
fsubr
in
in
ret
hlt
dec
mov
fiaddl
jmp
adc
add
sbb
sub
and
aaa
out
sub
andl
ds
pop
dec
shlb
dec
lahf
jl
js
ficompl
jo
dec
lahf
and
mov
and
nop
pop
sub
mov
shlb
mov
mov
ljmp
inc
stc
enter
rorb
dec
ljmp
push
stc
call
dec
mov
clc
pop
pop
pop
fistpl
stc
rclb
push
insb
pop
and
jo
sub
je
xor
js
mov
ljmp
out
cwtl
pop
into
ljmp
dec
lods
mov
mov
daa
fldpi
in
in
dec
mov
ljmp
into
fistl
sbb
and
sub
xor
cmp
popl
dec
cli
push
xor
xchg
pop
into
cmp
fldl2t
pusha
loop
sar
push
inc
test
test
in
nop
rcr
inc
cwtl
js
pushf
fidivrl
dec
mov
inc
test
mov
lods
fimull
ret
int
mov
enter
je
or
add
pop
mov
cmpb
je
jl
adc
sub
push
mov
mov
out
movsl
or
rorb
push
push
xor
call
add
ljmp
mov
cmp
push
filds
jmp
aaa
xchg
push
lret
addr16
fucomip
cld
xchg
mov
subb
mov
mov
in
cwtl
add
je
push
mov
test
pop
dec
push
add
movsb
stos
loop
popf
dec
push
call
stc
test
inc
and
pop
sub
pop
pop
ret
inc
aam
dec
xlat
push
mov
into
call
ret
dec
sbb
rorl
shlb
push
push
repz
inc
shlb
mov
ret
flds
push
dec
gs
loopne
push
in
int
xor
leave
xchg
fidivrl
bound
icebp
inc
into
sub
in
cmc
int
das
and
dec
call
pop
call
test
jae
loop
xor
call
mov
call
les
mov
push
pop
js
mov
push
rorb
xchg
sub
dec
pop
jecxz
pop
jae
and
push
leave
out
dec
mov
imul
repz
clc
push
mov
lret
sbb
dec
rorl
rcrb
jno
adc
fldt
enter
pop
add
xchg
pop
sarl
add
adc
lods
sbb
ret
andb
mov
inc
mov
ss
test
sbb
jns
mov
mov
sar
xor
xchg
push
into
sub
add
add
push
testb
dec
mov
fsub
mov
ficoml
jecxz
aad
mov
pop
add
pop
shrb
push
jp
das
mov
dec
vphaddbq
xchg
inc
jmp
lret
ret
mov
jns
xbegin
orl
add
xchg
dec
inc
sbb
loop
jmp
or
ret
leave
rorb
call
sub
mov
repz
ret
enter
ret
dec
lock
les
movsl
cli
mov
sub
sbb
decl
inc
and
loop
pop
mov
mov
mov
sub
dec
mov
call
mov
fnstenv
lds
dec
test
inc
sub
call
push
mov
lret
rol
jp
pop
add
cwtl
cltd
into
xor
cmp
in
test
adc
ja
call
mov
cld
sub
mov
insb
lahf
jp
dec
call
test
inc
mov
xor
xchg
je
or
subl
clc
push
movb
leave
cli
lret
into
lret
jmp
ret
int
mov
into
mov
shl
fwait
loop
loope
jns
inc
jp
jnp
jl
mov
jge
test
jg
orb
test
xor
xor
xor
fidivl
jmp
outsl
fimuls
and
outsl
mov
cmp
jmp
xor
mov
push
push
pop
out
int
fld1
je
stc
adc
ljmp
or
push
push
sub
int
fisubrs
push
dec
sbb
arpl
cli
arpl
arpl
cmp
jmp
dec
rorl
clc
push
push
cmp
gs
push
testl
mov
and
add
jmp
and
ret
cld
call
subb
pop
xchg
xchg
dec
in
mov
in
xlat
jo
out
loope
or
inc
inc
xchg
leave
inc
out
cwtl
ret
inc
pop
xchg
inc
outsl
fimuls
fxch
iret
inc
or
dec
test
rorl
dec
adcl
push
fsubrp
push
mov
push
lahf
loop
push
test
jmp
outsl
call
pop
ficompl
cltd
pop
nop
jmp
outsl
xlat
cltd
pusha
test
bound
fs
inc
mov
jb
out
ret
call
shlb
mov
sbb
and
inc
mov
scas
xchg
pop
cmp
mov
push
repnz
dec
loope
mul
mov
add
inc
movzbl
pop
clc
int3
jne
fwait
mov
inc
repnz
pop
mov
ret
jnp
inc
decb
or
daa
push
call
shll
daa
das
sar
decb
push
call
fcmovb
test
fwait
cwtl
mov
inc
nop
dec
in
pop
inc
in
dec
and
xor
inc
cli
sub
fmul
and
add
mov
out
and
imul
xor
nop
or
movl
push
fwait
lods
out
mov
push
leave
nop
and
sub
sbb
xlat
dec
mov
imul
testl
out
shlb
pop
mov
in
cmp
inc
repnz
or
dec
nop
ds
std
inc
add
rorl
fistpll
nop
sbbb
rolb
iret
sub
dec
dec
sub
fisubrl
test
and
addb
mov
ljmp
and
jns
mov
out
pop
xor
or
lcall
popa
fld
cs
lods
andl
stos
mov
add
std
mov
sahf
jne
testl
add
inc
or
sub
xchg
pop
inc
dec
xchg
lds
jge
cmovo
std
lret
call
jmp
adc
clc
popa
jecxz
sbb
iret
sbb
ret
imul
test
mov
lret
and
and
in
int
les
push
cmp
fs
mov
xchg
int3
xchg
sub
loop
lret
call
jecxz
je
lea
mov
pop
inc
push
decb
jge
pop
rcrb
inc
and
sbb
rcrl
mov
out
push
push
out
test
xor
insb
loop
arpl
mov
popf
les
push
and
inc
dec
nop
jbe
out
shll
mov
mov
cmc
sub
lock
mov
sbb
fistpl
cwtl
pop
cli
cs
enter
push
adc
lea
popf
inc
push
mov
and
mov
cmp
rol
outsl
ret
call
out
mov
mov
ljmp
xor
testb
jmp
ret
outsl
cmpsb
sub
inc
mov
notb
call
jb
mov
jge
mov
leave
cwtl
xor
mov
roll
cli
fsts
mov
pop
mov
imul
scas
imul
scas
mov
rcll
fsubr
movsl
test
notb
inc
sahf
lea
fisttpll
mulb
out
add
sub
loop
int3
fsubrs
xchg
test
repz
mov
jb
jae
call
jne
int
test
mov
les
scas
insb
cli
sub
out
adc
sub
jp
jp
xchg
pusha
dec
mov
call
cwtl
sub
inc
test
mov
nop
mov
enter
jne
callw
cmp
jnp
or
call
inc
pushf
dec
int3
jmp
out
jmp
sub
rorl
sub
js
mov
pop
pop
call
mov
add
enter
mov
das
movsl
or
mul
pop
sbb
push
push
push
enter
cmpsl
popa
inc
mov
mov
addb
xchg
lea
mov
bound
call
and
sahf
add
scas
sbb
mov
sbb
jae
sbb
mov
ja
movb
popf
in
xor
shll
dec
mov
dec
add
inc
add
add
add
add
add
add
add
xor
add
cmp
add
add
add
add
pop
push
add
data16
jno
add
add
add
add
add
outsb
add
add
insl
aaa
add
add
ja
add
inc
add
add
bound
add
add
add
js
add
add
add
add
jno
add
js
add
add
add
dec
add
add
add
add
insb
add
add
add
add
add
inc
add
add
add
add
add
add
add
bound
cmp
add
add
add
inc
add
data16
add
add
add
cmp
add
add
dec
add
pop
add
add
ja
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
dec
push
add
add
jne
xor
push
add
aaa
add
push
add
add
add
add
jb
add
add
add
add
add
add
add
add
dec
push
push
insb
dec
add
inc
add
add
add
add
add
jne
pop
add
data16
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
js
add
push
add
add
xor
add
imul
add
add
add
add
add
add
add
es
inc
push
in
push
int
add
inc
sbb
push
mov
cli
fdiv
inc
hlt
dec
in
lret
divl
push
cmp
sub
and
or
leave
and
jmp
test
jns
sbb
fbld
incl
add
push
push
push
push
push
mov
and
sbb
cld
and
mov
pop
or
inc
mov
fcomps
xor
call
sub
scas
adc
xchg
adc
adc
jns
ss
ret
jb
mov
add
lcall
inc
xor
enter
icebp
andb
xchg
jmp
cmc
or
xor
jne,pn
jmp
call
mov
push
and
dec
pop
xor
orb
pop
dec
repnz
movsb
push
lods
movsb
push
scas
test
lods
nop
arpl
call
inc
scas
aaa
lds
ljmp
push
ret
or
outsb
jl
aaa
outsb
push
inc
iret
cmp
and
jbe
pminub
mov
mov
in
ret
addr16
xchg
push
sar
dec
xor
addr16
mov
pop
test
out
and
sbb
fistps
pop
out
push
mov
sarb
push
sub
and
orl
xor
cmc
push
mov
cmpsl
push
or
push
jno
mov
lods
inc
and
out
or
xchg
fst
lahf
push
mov
stos
mov
mov
sub
aaa
add
or
inc
mov
push
or
test
jge
jmp
push
es
jo
fldl2t
pop
dec
cmp
push
mov
cmp
mov
hlt
sub
ljmp
inc
cmp
adc
pop
insb
sti
jb
adc
adc
clc
out
cmp
dec
in
add
jmp
jmp
mov
cmp
jne
hlt
add
push
mov
xor
pop
dec
fbstp
dec
inc
adc
add
gs
out
mov
push
fmuls
or
xor
add
mov
aam
pop
lahf
mov
shl
int
inc
shll
and
in
das
out
add
movsb
pop
or
cmpl
xchg
out
mov
roll
cmp
mov
movsb
lea
push
sub
mov
ret
in
jp
cmp
inc
loop
xchg
push
push
jecxz
lods
jo
data16
add
xchg
push
pushf
xchg
jge
sbb
or
dec
xchg
dec
pop
addb
scas
xchg
jne
mov
push
test
xadd
fld
pop
lods
xchg
in
rcrl
lret
pushf
rorl
xor
ja
outsl
popa
adc
jge
mov
arpl
jno
jb
sbb
push
jb
push
ret
clc
scas
ret
shlb
pop
add
cltd
bound
jns
cmp
outsb
outsb
mov
push
pushf
scas
jmp
xor
test
sub
jmp
stos
in
xchg
fisubs
fidivrs
frstor
inc
push
sbb
pop
xchg
lret
call
inc
push
push
dec
insb
and
mov
and
xor
ljmp
ds
ljmp
inc
push
pop
frstor
push
fsub
sarb
lods
adc
pop
pushw
pop
je
pop
out
push
sbb
and
cwtl
mov
xchg
inc
sbb
scas
cmp
std
jecxz
jns
jmp
cltd
mov
xchg
call
out
cmp
mov
mov
mov
jo
cltd
inc
xor
xchg
dec
rorl
push
aaa
cmpsb
sbb
xor
call
out
mov
push
and
push
push
cmp
dec
adc
xor
fdivr
loopne
mov
loope
lahf
test
push
and
push
das
cmp
and
cmp
in
push
inc
call
jo
sub
mov
cltd
mov
inc
jo
icebp
sub
hlt
aaa
mov
cltd
xor
xchg
jbe
je
jmp
pminsw
mov
inc
call
xchg
add
enter
shll
packssdw
hlt
ljmp
mov
add
out
jl
mov
xlat
or
push
cmp
mov
fcoms
icebp
or
test
leave
sbb
ret
mov
sub
fidivrl
xor
add
out
cs
or
pushl
cmp
pop
and
xor
mov
leave
mov
mov
mov
pushl
dec
pop
xor
rcrl
decb
mov
jmp
in
loope
sti
push
add
and
call
inc
lods
push
addl
or
sti
jl
test
iret
outsb
ret
push
call
jmp
sbb
jle
es
mov
fists
mov
outsl
jnp
shrb
movl
shl
adc
mov
jmp
ja
je
cmp
sub
sbbl
enter
fcoml
pop
fisttps
shrb
shl
addr16
mov
cld
call
pusha
test
pop
cmp
notb
mov
add
cmp
jmp
aas
xor
not
pop
pop
into
sbbb
inc
std
mov
dec
jmp
xor
mov
mov
jns
push
push
rcll
sub
js
add
pop
or
decb
or
add
mov
test
add
pop
incb
jp
imul
xchg
cmpsl
mov
inc
sub
or
inc
pop
into
incl
popa
dec
out
mov
or
jle
call
into
ret
jnp
sub
sbb
mov
dec
xlat
shrb
popa
ja
dec
repnz
clc
loop
ffreep
outsl
or
orl
jmp
push
je
cmc
and
enter
jmp
inc
add
add
jmp
push
loopne
jbe
lea
ret
inc
loope
jg
xor
sarl
jbe
das
mov
pop
mov
sub
jecxz
mov
test
or
jns
sbb
jnp
jmp
add
cmp
jp
out
inc
cli
or
inc
js
addb
push
push
popf
loopne
push
push
push
push
push
fnstenv
out
addl
xchg
fcomps
gs
mov
push
imul
inc
jl
sbb
sbb
call
mov
dec
or
inc
sarl
mov
cmpb
cmp
xor
cmp
cmpl
int
dec
jb
sub
mov
imul
xlat
sahf
pop
fldl
pop
fs
mov
mov
outsl
pop
inc
into
add
push
push
call
jb
rol
fs
pop
push
push
scas
insb
mov
pop
inc
xchg
shrl
sti
cli
popa
imull
cmp
cmpb
inc
fdivrs
push
jmp
dec
scas
or
xchg
xchg
es
or
xchg
mov
add
dec
push
gs
adc
mov
push
jmp
in
ret
sbbb
cmp
dec
je
mov
sbb
mov
xchg
je
add
sub
movsl
sbb
adc
inc
outsl
sub
adc
sbbl
push
xor
lock
mov
aad
orl
and
push
mov
das
js
test
int
push
inc
push
sbb
ficoml
cmp
out
fldenv
into
stos
or
push
adc
jmp
mov
iret
stc
insb
xchg
repz
out
scas
mov
pop
adc
hlt
rorl
shr
mov
mov
mov
sub
cmp
sbb
clc
lcall
popf
sub
and
ja
jp
clc
adc
dec
mov
adc
and
cmpl
xchg
ret
loopne
scas
sbb
jne
xchg
mov
jnp
flds
push
xlat
daa
cmp
and
cmp
js
ss
add
add
or
sub
mov
out
gs
xorb
fs
xor
pavgb
aas
cmp
push
or
jl
out
mov
imul
jl
out
lods
xchg
or
xor
mov
jmp
pop
or
dec
push
cwtl
add
xor
cmp
mov
bswap
mov
enter
je
rorl
mov
xchg
push
js
fisubl
push
testl
insl
dec
adc
insl
add
je
pop
pop
shr
ljmp
leave
sbb
nop
negb
push
or
mov
push
mov
lret
in
mov
xor
push
hlt
stc
dec
mov
cmp
push
dec
pop
mov
insl
repnz
shl
je
jae
xchg
push
aaa
jmp
arpl
mov
std
lods
in
orb
push
push
mov
inc
xchg
pop
scas
adc
imul
loopne
pop
add
pusha
addr16
fisttps
xchg
in
push
xchg
cld
fucom
xor
mov
or
cmpsl
pop
adc
rclb
movsb
pop
lock
xchg
ret
mov
add
fdivrs
jae
outsl
scas
adcl
rorb
mov
add
push
pop
jge
pop
cmp
jne
pusha
xchg
mov
aaa
imul
adc
dec
cmp
int
scas
enter
sarl
das
jo
pop
xor
mov
scas
inc
out
loopne
push
jl
shlb
inc
fwait
adc
fidivs
inc
xchg
sar
ds
push
sbb
xor
lea
inc
int
add
add
ret
xor
mov
pop
jb
push
repnz
xor
idivl
fisttps
pop
push
sbb
call
iret
cmpb
iret
les
push
mov
xor
rclb
out
adcl
scas
hlt
add
xchg
push
jae
mov
dec
sbb
add
xchg
dec
cmp
push
gs
xor
jae
jne
push
add
test
dec
sub
insl
pop
jmp
mov
mov
dec
pushf
mov
sbb
push
sti
dec
mov
cmp
xchg
and
orl
ss
xor
or
test
outsl
and
cmp
mov
mov
jecxz
test
je
loopne
push
and
leave
test
jbe
and
test
js
fistl
mov
jbe
gs
scas
ds
mov
cwtl
iret
cmpl
cli
fnstenv
and
xor
mov
cmp
jns
push
mov
mov
add
mull
arpl
movsb
and
dec
call
xor
movsl
inc
jne
scas
testl
movl
sub
shll
test
leave
aam
pop
vpunpckhwd
xchg
ljmp
mov
inc
jbe
pop
cmp
jle
std
negl
add
scas
icebp
ljmp
or
cs
lods
scas
mov
xchg
lods
lds
test
xchg
push
push
lock
scas
xor
pop
in
sbb
in
inc
xchg
mov
sub
dec
pop
in
pop
xor
aaa
fistl
test
lahf
scas
sbb
sbb
push
fsubr
mov
xchg
fs
test
and
jl
das
cltd
xchg
cmpsb
fisubrl
in
mov
icebp
fidivl
call
sbb
iret
cmp
dec
sbbl
push
xchg
lahf
sahf
into
and
xchg
nop
pop
in
sbb
jle
mov
leave
push
scas
out
dec
inc
push
out
call
gs
sti
in
cmp
or
mov
xchg
lds
mov
xor
ds
push
add
push
add
add
imul
xor
add
add
add
arpl
add
add
jns
add
bound
jp
add
add
jp
add
add
inc
add
add
dec
add
add
add
add
dec
add
add
add
jne
add
dec
add
add
push
add
add
add
add
add
add
add
add
push
add
add
add
add
insl
outsl
inc
add
pop
add
add
add
add
add
dec
add
outsb
add
add
add
add
add
jns
add
add
add
push
add
add
add
jp
dec
add
pop
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
dec
add
dec
jbe
add
add
add
add
add
cmp
ja
add
add
add
jns
add
add
add
add
imul
add
add
add
xor
cmp
add
inc
add
add
add
inc
add
jns
add
add
js
add
add
add
add
add
add
add
push
add
add
add
add
dec
add
add
add
add
add
inc
add
add
add
dec
add
add
add
js
add
arpl
add
dec
xor
add
jns
add
add
add
pop
add
add
inc
add
add
add
add
add
push
add
add
add
add
outsl
add
add
jae
add
add
add
imul
jp
add
mov
shl
loopne
push
fs
out
sbb
adcl
fs
add
adc
pop
push
push
pop
jl
mov
sub
pop
fadd
mov
addb
lds
inc
loop
subl
call
xchg
pushl
jp
hlt
incb
xor
adc
ss
adc
mov
hlt
scas
test
or
cmp
pusha
mov
jae
dec
std
cmp
rclb
je
outsl
xor
fsubr
dec
or
jp
test
fadds
xchg
arpl
rclb
cmp
call
add
aam
call
sbb
leave
sub
call
push
cmp
push
filds
add
jmp
add
cld
scas
lcall
pop
inc
xchg
or
test
inc
inc
mov
popa
mov
movsb
jp
add
jle
jo
inc
in
mov
cmp
orb
inc
fs
aad
jo
jb
push
pop
xchg
out
pop
aas
ja
mov
sbb
jno
push
jg
fs
inc
sub
pop
sub
mov
iret
imul
add
xchg
sbb
jnp
mov
sub
add
ljmp
pop
pop
xor
fisttps
sbb
pop
mov
outsb
outsb
fnop
cmp
cmp
add
gs
addr16
sub
in
lret
mov
mov
out
xchg
cmp
outsl
imul
mov
or
mov
call
push
mov
sub
mov
jmp
rol
call
out
mov
stos
arpl
sbb
inc
dec
xchg
mov
push
jae
pop
and
mov
fstpt
call
jb
lret
mov
jbe
add
cmp
push
pop
adc
add
fdivs
shl
mov
inc
pop
pop
mov
sbb
gs
or
adcl
xorl
sahf
cmp
scas
insl
aam
mov
push
pusha
sahf
jo
inc
test
and
cmp
and
jmp
jno
pop
fmuls
scas
pop
cmp
inc
dec
fistpl
popa
in
decl
fsubr
enter
out
and
sahf
push
arpl
mov
or
fistpl
inc
loopne
sbb
adc
aad
adc
stos
pop
xchg
xlat
loopne
dec
movsb
arpl
ss
fildll
sub
ljmp
aas
mov
stc
imul
jne
stc
push
adc
mov
out
leave
aad
insb
outsl
push
fiadds
loop
xchg
xlat
test
mov
inc
ret
xor
sub
xlat
cmpsb
lahf
pushf
jp
ljmp
lock
call
inc
shr
div
adc
and
add
lea
adc
test
sbb
xchg
sub
pop
shll
jg
rcrl
cwtl
rcr
xorb
pushf
pop
fwait
movsl
cmp
test
std
add
test
test
mov
aam
cli
out
mov
scas
imul
orb
stos
pop
push
mov
xchg
xchg
fstp
test
ret
inc
clc
jns
or
out
fcompl
push
addr16
fsts
out
test
xchg
shrb
fbstp
cmp
das
popf
push
mov
test
stc
insb
sarl
loopne
bound
push
adc
imul
mov
test
aaa
vcvtps2pd
roll
lcall
mov
push
lock
ljmp
cli
pop
imul
mov
mov
jae
fnstcw
jne
loop
leave
cmp
jle
pop
arpl
inc
stos
cmp
jge
lret
pop
jle
dec
movsb
lea
mov
rcr
xchg
xchg
jmp
adc
mov
adc
inc
pop
xchg
popf
imul
add
adc
adc
int
in
jl
jae
hlt
cmp
jle
cld
jl
mov
pop
dec
mov
sub
loope
dec
push
repz
adc
pop
push
add
xchg
repnz
mov
cmp
sbbb
xchg
ljmp
pop
test
jne
std
push
push
stc
sahf
or
data16
cmp
dec
call
pop
pop
ljmp
into
imul
out
xor
test
test
call
mov
repz
sub
and
pop
jbe
fs
test
and
icebp
sub
addr16
call
outsl
daa
ja
lcall
ret
adc
or
push
mov
push
out
push
mov
xchg
imul
cmp
imul
pop
pushf
add
adc
cmpsl
scas
jae
mov
leave
push
mov
fisubrs
mov
mov
popfw
xchg
fwait
mov
sub
push
push
cmp
inc
aad
xchg
imul
mov
push
inc
out
jns
cwtl
and
add
cmpsl
jno
inc
std
jmp
mov
dec
mov
cmp
out
aas
mov
test
mov
and
xor
addl
add
push
lea
push
xchg
jle
add
adc
ret
push
or
pop
pop
mov
aad
adc
sar
insl
flds
fnstcw
cmp
jl
push
clc
call
fadds
dec
add
sti
stos
inc
pusha
xor
in
mov
popf
inc
ret
adc
mov
jl,pt
mov
fistl
je
imul
adc
sub
pop
ja
pusha
out
outsl
mov
xchg
lock
orl
mov
stos
das
pop
sub
pop
add
addr16
lret
xchg
sub
sub
xor
xor
cmpsb
movsb
xchg
jge
lret
ret
xor
in
call
rcll
xchg
enter
aas
inc
sti
stos
test
jecxz
xor
std
lahf
inc
nop
aad
jae
sbb
mov
addr16
std
add
mov
inc
mov
mov
add
mov
lock
mov
enter
sbb
push
mov
xchg
mov
xchg
fiaddl
mov
int
scas
sahf
push
cmp
lahf
adc
gs
out
das
repnz
mov
pop
lcall
fmull
ror
call
mov
inc
lods
ss
into
inc
enter
mov
ds
fucomip
ficoml
mov
call
pop
sahf
iret
movsb
lds
push
stos
pushf
data16
fldenv
nop
jnp
enter
or
push
shll
rcrb
loope
cs
out
jle
inc
jl
jo
lret
push
inc
mov
lcall
push
fs
jnp
xadd
xor
scas
jmp
fs
das
xchg
pop
scas
and
shr
mov
mov
sti
cmp
add
popa
out
outsl
inc
mov
outsl
mov
or
pop
cmp
rclb
xchg
jp
push
in
movsb
test
imul
roll
mov
jns
fcmovbe
pusha
aam
dec
add
lahf
rclb
rclb
pop
lcall
and
out
fs
loopne
pushf
jo
adc
pop
sahf
in
jae
add
jb
sub
andl
and
test
push
or
dec
inc
stc
add
not
add
inc
and
jne
setg
jmp
add
outsl
sarl
push
add
xor
mov
push
jge
loopnew
xor
dec
int3
mov
fsub
jns
andb
inc
fcomp
test
movsb
insb
inc
repnz
add
jne
lahf
arpl
loop
sub
aam
push
test
ljmp
loopne
jl
pop
jge
fnsave
aaa
push
push
dec
mov
loopne
clc
ret
enter
fwait
jmp
std
and
xchg
add
repz
jmp
sti
test
xchg
hlt
push
pop
mov
pop
xchg
xchg
jecxz
fildll
fdivs
mov
daa
fdiv
add
sti
clc
aaa
rorb
mov
jle
push
out
push
add
cltd
add
lret
repnz
mov
lea
xor
sbb
mov
mov
in
mov
mov
rolb
mov
int
rcl
adc
push
push
imulb
shlb
cmp
fcmovnu
out
sbb
repz
stc
ficomps
pusha
xor
dec
xchg
jne
scas
cmpsl
add
int3
fsubs
push
test
dec
aas
stos
xchg
jl
cld
sti
or
xchg
repnz
xchg
jmp
dec
pop
call
pop
mov
cltd
loop
fistl
rcl
enter
cmc
addb
fdivr
mov
sbb
ljmp
push
xchg
and
xchg
pop
add
jne
mov
mov
sub
ja
mov
data16
jecxz
jmp
call
outsl
int
mov
daa
push
fs
sti
pop
scas
nop
pushf
popf
addr16
xchg
imul
outsl
cmc
push
pop
call
aam
outsb
negb
imull
in
fdiv
mov
cmpsb
insb
insb
xor
das
xchg
shlb
jmp
push
das
add
fldcw
or
test
rcr
jg
or
push
cmp
cmp
hlt
or
mov
call
cwtl
xlat
jge
test
mov
jne
lods
das
les
fcmovne
insb
mov
mov
xor
scas
rorl
or
mov
cmp
sub
outsb
mov
aaa
or
xor
jbe
or
imul
pop
insl
add
dec
pop
cltd
push
gs
pop
mov
loope
and
iret
in
mov
clc
pop
or
or
dec
cmp
jae
jl
fcom
dec
movsl
pop
jg
lea
dec
pop
mov
add
mov
xorb
xor
pop
mov
insl
xchg
pop
mov
scas
mov
pop
xchg
mov
sub
es
lret
or
stos
pushf
add
mov
mov
bound
xchg
adc
push
scas
or
mov
inc
xor
cltd
outsb
sub
fsts
xchg
imul
call
fwait
pop
adc
fdivrl
lcall
sar
aad
jle
stc
lcall
pop
mov
pop
pop
adc
in
loope
xchg
push
cmp
decb
sbb
arpl
in
pop
jno
pop
dec
mov
cmp
and
cmp
call
lock
nop
xor
cmp
add
and
pop
lahf
cwtl
test
cmpsb
mov
ficoml
fadds
jo
dec
xchg
cmp
cmp
fld
xchg
push
or
nop
add
sub
je
lea
cmp
push
sub
mov
aas
sbb
aad
mov
and
push
mov
sub
cmp
aaa
lret
mov
add
ja
jne
sub
sbb
cmpsl
in
push
mov
adc
mov
pop
sub
movsb
lds
loop
jno
outsl
xchg
addr16
out
shlb
imul
jle
popa
jns
fsts
sbb
xchg
sbb
movsl
imul
imul
add
add
add
add
add
add
add
add
inc
add
add
jb
add
dec
add
add
add
add
add
add
add
add
add
arpl
add
add
add
add
imul
inc
insb
push
add
add
add
add
add
add
add
dec
add
pop
add
add
data16
jo
add
add
add
add
add
add
add
add
pop
add
add
add
xor
add
add
add
inc
insl
add
xor
add
add
inc
xor
add
outsl
bound
add
add
add
data16
add
dec
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
push
outsb
add
add
arpl
add
xor
add
add
push
add
xor
jne
add
add
add
add
add
dec
add
add
add
add
add
add
xor
add
js
add
add
push
pop
add
pop
push
add
add
add
add
dec
add
add
add
insb
add
add
add
dec
add
dec
inc
popa
add
imul
add
add
bound
add
add
add
add
add
add
add
add
add
add
outsl
add
add
add
add
add
arpl
push
add
aaa
add
jp
add
add
jp
insl
cmp
inc
dec
jmp
mov
jnp
sbb
aaa
add
pop
sbbb
pusha
call
pop
push
and
out
sub
leave
inc
cmp
sub
add
push
jmp
test
je
in
test
add
sbb
jne
lahf
jne
into
in
adc
xchg
or
mov
cs
sbb
stc
mov
mov
jl
rcr
push
test
add
push
inc
add
jnp
ja
pop
fisubrl
jnp
push
shl
sti
and
or
pop
xchg
sub
dec
xchg
testb
nop
in
loope
ret
mov
addr16
shl
jl
jnp
push
out
rcrl
push
mov
cmpxchg
shrl
push
fadds
and
fwait
mov
mov
shrb
test
dec
jb
sbb
or
repnz
mov
cmp
pop
jno
sahf
lods
cmp
jno
push
pop
and
faddl
aaa
or
mov
out
les
stos
mov
or
xchg
int3
pop
dec
je
loopew
popa
pop
cmp
loopne,pt
lret
pop
fs
jmp
insb
mov
popa
pop
popa
and
mov
scas
addl
pop
mov
cmpsb
ja
push
mov
pushl
mov
cmp
fs
push
mov
cmp
lea
mov
roll
mov
js
ds
jle
xchg
sahf
pop
jle
lret
in
nop
mov
add
lea
jl
cmp
inc
dec
out
hlt
movsb
mov
data16
xlat
push
cmpsb
call
push
or
adc
mov
push
fisttpl
push
mov
loop
jmp
cltd
ja
pop
sar
cs
test
and
das
push
and
or
into
add
in
mov
lcall
xorl
addr16
sbb
ret
add
fstpl
sbb
pop
ret
inc
add
movsb
out
mov
xchg
popa
mov
pop
cmpsb
dec
in
imul
ret
add
inc
add
add
loope
push
std
loope
push
jo
jle
cmc
sub
xor
or
mov
sub
outsl
in
outsl
pop
push
xchg
dec
test
push
push
pop
imul
lahf
out
stos
push
lock
stos
fcmovnbe
lock
jnp
inc
pop
xchg
fistl
inc
in
mov
mov
mov
inc
push
mov
or
cltd
push
mov
sub
xchg
push
push
jl
stc
xor
dec
imul
mov
fucomi
enter
call
adc
shll
inc
or
pushf
outsb
mov
in
out
jge
pop
andl
adc
test
sbb
adc
jne
je
xchg
mov
or
mov
mov
xor
adc
xor
repz
lock
mov
pusha
jle
inc
adc
data16
pop
inc
lea
inc
sub
into
mov
and
insl
push
pop
pop
xchg
push
and
imul
dec
add
or
push
inc
push
push
ja
nop
jbe
pop
ret
xchg
sbb
xor
inc
mov
mov
call
sarl
jns
push
stos
les
inc
push
out
and
shrb
pop
mov
movsl
dec
add
hlt
fadd
or
iret
fiaddl
hlt
inc
pop
pop
in
outsl
lret
lea
fstpt
sbb
in
adc
xchg
dec
test
mov
sub
out
add
loop
xchg
fmuls
test
fiaddl
pop
shr
xchg
hlt
xor
mov
in
cmp
push
cmp
fdivr
nop
enter
pusha
in
xor
fmull
das
and
int
movsb
lret
fists
jmp
test
shr
in
out
pop
mov
test
es
je
dec
xor
cli
push
cltd
fcomp
fcmovnb
add
nop
fbld
out
push
je
fistpl
je
xchg
leave
add
jmp
pushf
cmp
add
mov
cld
push
and
push
mov
enter
fisubl
push
xlat
jge
dec
push
xchg
pop
cwtl
cmp
ds
sbb
push
jmp
sbb
iret
xor
inc
iret
or
lcall
xor
leave
mov
call
popf
jns
subb
sub
cmp
xchg
jno
inc
or
cmpsb
dec
data16
test
loopne
repz
or
sub
add
rcrl
nop
mov
jo
jbe
pop
mov
or
mov
scas
cld
inc
push
cltd
es
inc
in
cmp
call
jg
lock
test
inc
push
push
out
xor
icebp
andb
jp
in
ds
push
xchg
in
ja
add
and
mov
cli
mov
sbb
int
push
or
insl
jecxz
in
nop
mov
iret
jne
push
cmc
add
out
pop
inc
int3
dec
mov
cld
or
call
mov
jbe
out
push
stos
arpl
inc
sub
rclb
mov
pop
in
add
lret
adcl
xchg
add
outsb
test
negb
addr16
jg
leave
aas
mov
dec
inc
lds
dec
xor
add
and
mov
lea
hlt
sahf
cmp
mov
iret
inc
addl
inc
mov
int3
enter
lock
lahf
mov
cs
mov
sbb
push
push
loope
aas
xor
adc
adc
xchg
aam
cli
call
or
mov
pop
sahf
ss
jl
mov
fidivs
add
pop
dec
in
mov
cmc
arpl
push
pop
dec
and
xor
mov
movl
filds
jecxz
in
pop
cmp
jb
loopne
and
add
pushf
jp
inc
push
push
fsubrp
sub
adc
fs
insl
js
test
xor
insl
cmp
in
mov
add
popf
test
popa
mov
push
ss
mov
dec
jbe
push
push
xor
mov
mov
mov
mov
jle
jmp
jbe
inc
in
pop
stc
jmp
fcmovnu
push
cmp
rcrl
daa
leave
lea
in
fsub
cltd
jmp
fsts
lds
test
and
cmpsb
add
ds
in
xchg
test
dec
call
xor
jae
popa
push
mov
pop
pop
stos
mov
push
and
adc
fsubrl
pop
mov
push
cmp
jne
adc
loopne
jle
xor
das
mov
lds
lea
dec
jne
ret
das
mov
das
push
and
das
sbb
sti
das
leave
in
shrb
push
pop
out
call
sbb
daa
ret
push
lahf
out
cmp
je
out
btc
xlat
mov
cmpl
sub
inc
unpckhps
xorl
arpl
push
neg
call
cmp
lock
insl
mov
imul
lds
fldl
fcomps
test
pop
rcr
call
fprem1
cmp
movsb
das
jle
popl
push
mov
mov
cmp
incl
add
fidivrl
jp
and
or
push
dec
lods
add
jge
and
in
fdiv
and
stos
pop
push
call
imul
adc
ss
inc
mov
push
scas
dec
pushf
pushaw
pop
inc
add
scas
jecxz
adc
out
dec
aam
push
aas
mov
loop
addr16
in
jns
xorl
out
pop
mov
push
shrb
or
jmp
pop
ja
insl
sbb
sub
imul
or
jge
stos
jge
movntq
int
dec
sbb
lods
mov
enter
mov
in
xchg
cli
mov
outsb
lods
sbb
mov
pop
fs
int3
loopne
sub
xchg
jbe
jno
je
add
call
loope
out
inc
lahf
insb
xchg
jne
dec
insb
int3
jecxz
nop
sti
iret
or
push
mov
xchg
mov
stc
fsubs
mov
mov
int3
xor
outsl
fwait
loope
sub
and
out
add
shr
test
add
daa
fsubrs
inc
sbb
jae
outsb
inc
pop
sub
inc
fcomps
aad
mov
out
and
xor
pop
fdivrs
inc
and
mov
shll
sbb
push
sub
es
arpl
lds
fwait
jge
jecxz
jmp
mov
clc
repz
mov
xchg
jl
lds
ljmp
cmp
pop
and
mov
inc
xchg
in
xchg
xlat
pop
sahf
loopne
icebp
xor
jmp
cwtl
xor
in
cmp
sbb
lret
or
es
rorb
add
inc
cli
push
mov
fldt
push
mov
in
test
mov
lahf
jle
iret
movsb
xchg
or
cwtl
mov
test
das
int
ret
sti
shl
pop
je
pop
jne
shr
out
xor
in
out
icebp
fdivrs
rcl
lcall
adc
outsb
jle
cli
sbb
jp
jmp
add
jecxz
and
fs
adc
add
fadds
ret
fmuls
jns
pop
enter
daa
jl
call
mov
fimuls
and
ja
add
push
mov
out
push
mov
jp
add
xchg
ret
scas
mov
push
test
xchg
addr16
mov
leave
je
xchg
sti
enter
push
test
jo
aad
sbb
mov
sahf
push
loop
div
add
mov
adc
dec
incl
jmp
lock
add
sub
stos
daa
or
add
mov
andb
and
pop
repnz
pop
dec
lock
ret
jne
push
mov
pop
pop
adc
xchg
cld
add
orl
jo
fisubrl
dec
or
xchg
and
fdivs
pop
xchg
add
mov
and
dec
and
enter
mov
mov
add
mov
and
lahf
popl
sbb
out
cwtl
xchg
ficoml
pop
loopne
mov
pop
add
out
sbb
xor
push
push
pop
cmp
aaa
mov
jmp
iret
fidivl
push
insb
inc
pop
popl
or
lcall
ja
mov
data16
mov
in
adc
xlat
das
xchg
pop
or
inc
ja
aam
lock
mov
push
push
jp
jecxz
push
xchg
jp
lods
call
mov
stos
test
jns
hlt
daa
lods
jle
cmpsb
jmp
call
mov
dec
int3
sarb
mov
jl
and
cmp
add
push
sbb
ja
aad
cwtl
insb
shr
dec
mov
pop
fs
dec
dec
fnstsw
jmp
mov
xor
cmc
push
fisubl
pop
xchg
or
jle
sub
and
lret
mov
lcall
or
pop
add
push
dec
pop
add
push
pushf
fsts
sub
sbb
pop
icebp
arpl
adc
jne
jno
dec
ffreep
add
aaa
mov
sub
sub
test
addb
fists
and
cmp
fsubr
shrl
mov
das
lock
dec
into
sub
mov
mov
les
mov
sti
dec
leave
shrb
mov
push
xchg
mov
jecxz
dec
adc
pop
arpl
aas
out
mov
test
popa
or
ror
or
add
dec
add
add
add
add
add
add
jbe
add
add
add
add
add
inc
insl
add
add
add
popa
popa
dec
add
add
add
add
add
add
add
add
add
add
add
inc
pop
cmp
add
add
add
add
add
add
add
dec
add
cmp
add
add
dec
add
add
add
je
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
push
add
jp
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
xor
inc
dec
add
add
add
add
jno
dec
add
dec
add
add
add
add
add
add
add
add
push
dec
add
add
add
dec
add
add
add
add
add
add
popa
push
popa
add
add
xor
add
add
xor
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
ss
dec
add
add
add
add
xor
add
add
bound
add
add
add
add
add
add
add
dec
add
add
add
push
add
xor
add
popa
add
add
add
add
add
dec
inc
add
add
add
add
add
add
xor
add
add
push
add
inc
add
push
add
add
add
jne
add
add
add
add
add
pop
add
add
add
jne
add
cmp
lea
daa
xchg
xor
int
fsubl
loope
xorl
pop
push
push
mov
pop
pop
jne
movsl
push
ljmp
mov
rclb
add
out
aam
ljmp
ret
std
cmp
mov
sub
ja
popa
xor
xor
sub
push
popf
mov
icebp
loop
mov
insb
push
jnp
mov
xor
and
inc
pop
xor
loopne
test
icebp
ja
xor
pushl
jb
orl
lock
ljmp
cmp
mov
inc
lods
xor
stos
xchg
mov
das
aam
push
rcrb
mov
loope
mov
jno
sbb
sbb
push
pop
je
add
lods
inc
mov
stc
mov
les
mov
add
dec
sbb
addr16
fsubr
pop
mul
mov
fcompl
adc
dec
jo
rclb
ds
test
loopne
ret
idivb
xchg
aam
adcb
rol
push
or
mov
mov
jbe
mov
in
scas
pop
sub
sbb
push
pop
inc
xor
in
pop
cmp
adc
loope
xchg
test
ja
inc
int
mov
sub
xchg
lea
pop
pop
mov
cmp
or
les
je
xchg
repnz
xor
stos
dec
push
in
adc
dec
pop
add
icebp
mov
or
add
pop
sub
mov
dec
dec
in
push
pop
push
or
pop
add
mov
pop
add
lods
outsb
push
popa
push
mov
addr16
mov
mov
js
mov
push
jecxz
jp
test
xchg
movsb
es
imul
cwtl
sub
adc
sub
dec
push
shll
inc
mov
sbb
add
push
xor
push
popf
insb
cmc
sbb
mull
mov
push
jns
lock
gs
jns
pop
mov
inc
xchg
mov
mov
data16
xor
ret
bound
pop
popf
xor
sub
mov
aaa
daa
fisttpll
nop
into
xor
and
test
sub
push
icebp
out
add
test
jbe
enter
mov
in
sub
inc
inc
int3
jge
dec
lret
jmp
pop
mov
mov
repz
lock
aaa
mov
decl
xor
test
cs
inc
xor
mov
in
push
push
or
and
jae
jnp
scas
call
ljmp
jb
sti
cmpsb
sbb
fwait
test
dec
out
and
je
mov
call
sub
pop
jmp
and
adc
sub
push
test
jne
ja
mov
inc
push
mov
sbb
jg
das
nop
xor
dec
in
cmp
mov
xchg
pop
adc
insl
and
imul
cmpsb
pushf
pop
pushl
jge
sbb
mov
jmp
mov
mov
mov
call
movb
nop
je
sub
fcomip
bound
fwait
loopne
and
or
fstpt
rcll
push
lods
ds
out
inc
pop
ret
xchg
xchg
ss
or
pop
cmpsl
sbb
cmpsl
pop
testl
pushf
inc
push
lods
jae
call
lock
popf
xor
ret
add
enter
add
xchg
pop
test
adc
imul
xor
mov
xchg
lret
sti
add
adc
ret
in
sbb
mov
jb
lea
lcall
cltd
inc
mov
push
cli
bound
mov
dec
push
or
into
call
push
xchg
push
lahf
gs
aam
sahf
jno
cltd
fcmovnbe
lcall
jbe
imul
push
fcoms
les
in
or
dec
movsl
loop
inc
push
inc
mov
lods
pop
ret
mov
lea
mov
test
lahf
and
call
stc
jge
out
in
sbb
sahf
and
das
mov
jp
popa
cwtl
xor
jae
rorb
xchg
ret
cmp
lret
pop
push
push
fucomi
or
scas
pop
gs
or
ret
ljmp
sub
test
insl
faddl
mov
xor
fistl
pushl
stc
iret
cmp
add
cwtl
fiadds
shlb
loope
daa
fidivl
adc
shll
fnstenv
insl
outsb
mov
insl
jle
push
scas
push
out
xor
xchg
out
or
pushl
test
sub
loop
jne
xchg
bound
out
mov
jl
cli
movsb
jge
andl
movsl
rcrb
jmp
xchg
cmp
push
ss
imul
pop
push
les
pop
cmp
sarl
in
add
testb
adc
dec
jmp
ret
test
add
inc
dec
dec
test
inc
adcl
mov
adc
push
nop
mov
mov
nop
fwait
dec
mov
dec
add
push
lods
push
out
aas
call
nop
dec
inc
dec
xchg
mov
aam
in
addb
out
mov
mov
mov
dec
mov
push
jecxz
in
std
dec
xor
imul
add
stc
mov
xor
jp
push
mov
ret
call
aad
call
mov
cmp
dec
sahf
adc
mov
and
xor
fcoms
ficompl
xchg
inc
sub
ljmp
scas
pusha
mov
je
popa
push
inc
outsb
addl
ljmp
push
jge
adc
jg
out
cmp
cmp
jbe
fistpl
lret
test
out
cmp
sub
pusha
and
push
and
mov
sbb
inc
je
jle
dec
out
dec
pop
push
imul
push
add
or
imul
cmp
pushf
and
pop
or
mov
jns
push
call
out
jmp
imul
fwait
lds
xor
jge
movq
mov
fldenv
jne
push
dec
fbld
cmp
cmc
cmp
repnz
adc
adc
jns
mov
pop
cmp
mov
xchg
cmpsb
xchg
jb
movsl
out
push
imul
sub
cmp
and
jne
cli
scas
sub
xor
sbb
xchg
push
fs
push
and
cmp
jno
cltd
cmp
in
and
fs
std
and
fildll
test
addb
lret
dec
dec
adc
fisubs
pushf
call
ret
mov
or
pop
push
out
push
push
push
cld
aam
push
loopne
rorl
and
dec
cld
imul
pusha
pushf
inc
imul
mov
sbb
lahf
faddl
xchg
cs
push
push
adc
ret
mov
test
lock
movsl
leave
jne
aam
pop
je
and
lock
mov
je
xchg
mov
mov
shll
xor
sub
inc
fwait
in
fistl
ss
and
je
les
pop
ret
gs
les
jne
movsb
jae
lret
pop
xchg
mov
fstpl
add
sbb
scas
shlb
sub
lret
mov
insl
in
xchg
mov
lock
fidivs
push
out
pop
cmp
or
sbb
cmpsl
xlat
pop
in
adc
mov
fmull
jbe
frstor
fstpl
test
arpl
jns
decb
mov
insl
mov
jmp
insb
rcrl
mov
loope
mov
mov
popf
sub
pop
lcall
icebp
xlat
pusha
push
inc
pop
pop
cs
pop
xor
gs
add
fstpl
xchg
ljmp
hlt
arpl
jmp
std
inc
sub
sub
jmp
fmull
lcallw
jge
sbb
xchg
in
push
fwait
lods
sub
fldl
push
xor
je
fstpt
adc
add
fcompl
push
xor
cmp
fwait
test
adc
jmp
add
xchg
jmp
ss
push
cltd
les
stc
cmc
mov
jns
push
fucomi
push
dec
pop
inc
inc
mov
enter
add
cmp
in
push
and
stc
movsl
adc
mov
xchg
cmp
cltd
mov
xchg
mov
pushf
mov
pop
xchg
call
xor
in
ss
sub
adc
jae
or
add
pushf
add
rol
test
outsb
sub
mov
adc
push
jle
push
xchg
mov
adc
in
xor
sbb
gs
ret
lea
adc
mov
pop
mov
pop
ficoms
cmp
adcb
mov
in
cmp
and
pusha
pop
inc
aam
test
push
push
in
mov
or
mov
mov
mov
xor
iret
mov
mov
mov
cli
cltd
out
or
jmp
mov
sbb
pop
sbb
adc
insb
sbb
lock
in
fstp
add
mov
mov
imul
and
shrb
lret
push
adc
stc
mov
bound
lock
mov
loopne
push
mov
orl
xchg
sub
sub
insb
insb
data16
stc
in
sub
sub
xchg
popf
fistpl
push
test
ret
cmp
das
adc
dec
outsl
es
sbb
sbb
mov
loop
xor
cmp
add
lret
jne
jne
jl
or
mov
fimull
mov
push
xchg
fs
pop
inc
and
and
inc
or
add
inc
setb
jae
mov
jp
xchg
jge
push
cmpsl
add
insb
loop
inc
mull
xchg
addr16
iret
loopne
dec
ja
lret
xor
repnz
mov
lds
les
cmp
sbb
mov
pop
test
fsubrs
inc
cmp
into
cmp
or
xor
xchg
fnstenv
jno
pushf
fistps
loopne
or
jno
mov
cmp
sbb
jo
dec
dec
pop
fdivr
out
lret
sbb
push
ja
dec
pop
jae
test
int
mov
cld
push
push
xlat
sbb
sub
mov
lret
lahf
mov
adc
sbb
pop
xchg
mov
and
mov
ss
push
dec
push
outsl
scas
jbe
push
mov
lahf
dec
sahf
and
mov
hlt
stos
pop
pusha
insb
hlt
add
jmp
push
xor
adc
fcoms
gs
jg
fs
xchg
sub
jle
xchg
mov
add
xchg
and
scas
pop
jle
lock
dec
mov
jae
test
lock
rclb
mov
mov
fsub
mov
mov
cmpl
ja
sbb
call
dec
shll
dec
xor
pop
cwtl
or
prefetch
or
dec
add
or
cmp
jmp
andb
sbb
sub
fs
ja
rcrl
shlb
cmp
jecxz
inc
fs
sbb
cmp
and
xchg
negb
enter
add
lea
movsb
repnz
movsb
add
mov
inc
test
xor
fs
mov
hlt
pop
push
imul
jp
insl
adc
mov
pop
in
push
add
orb
jecxz
stc
mov
and
add
inc
add
add
add
xor
add
cmp
add
add
add
add
add
push
pop
add
bound
add
add
add
xor
add
push
add
add
inc
add
add
add
inc
inc
add
add
dec
xor
add
add
add
add
dec
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
jns
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
add
add
add
pop
add
insb
pop
add
dec
add
xor
add
add
add
add
add
data16
add
inc
add
dec
add
add
add
arpl
inc
popa
add
jns
add
add
push
add
add
push
add
dec
add
add
add
add
add
bound
add
add
jns
add
push
add
add
add
dec
add
inc
add
add
add
add
imul
add
add
add
add
pop
add
js
add
add
add
add
add
arpl
add
add
add
add
jae
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
pop
add
add
add
add
add
dec
add
add
add
add
jns
add
add
jp
add
add
dec
add
add
xor
push
add
add
add
add
ja
add
push
add
add
jns
add
add
add
add
add
add
add
add
and
push
sbb
lcall
or
pop
cli
sbb
pop
add
test
lds
stc
call
sbb
bound
inc
stos
pop
jmp
push
cmp
push
adc
jne
xor
xor
or
ret
mov
push
ds
xor
pop
push
sbb
cmpsl
dec
cltd
sbb
jo
call
idiv
lods
shr
ss
nop
test
mov
adc
idivb
popf
iret
fisttpll
xor
adc
cmp
ret
adc
jmp
pop
xchg
test
and
sbb
out
sub
rcrl
call
repz
jg
jbe
ss
in
dec
mov
test
xchg
arpl
adc
daa
pop
push
inc
jle
lods
lds
subl
or
sub
add
lds
mov
test
push
gs
pop
dec
adc
pop
jecxz
inc
lock
popf
dec
mov
testl
jmp
cmp
in
shlb
inc
sbb
adc
pop
mov
jmp
jmp
or
dec
outsb
xchg
popf
mov
or
aad
icebp
stos
mov
enter
mov
xor
hlt
imull
je
xchg
push
dec
imul
push
call
out
mov
add
call
inc
adc
les
shl
add
cmp
fistl
pop
pop
popa
dec
call
icebp
shrb
out
je
cs
jmp
cmp
mov
in
out
push
mov
jno
je
adc
fsts
call
fdivrl
mov
mulb
call
cmp
push
leave
push
jl
pushf
into
push
call
xor
jmp
adc
jge
add
mov
rolb
pusha
sub
imull
xor
dec
cs
popa
gs
repz
test
cmp
call
mov
sub
ret
xchg
and
outsl
fidivrs
sarb
loopne
out
call
cltd
jns
hlt
stos
nop
push
popa
and
jge
mov
mov
fidivrl
out
leave
orl
sar
sahf
lahf
dec
cltd
push
bsr
enter
xor
mov
js
add
mov
ffree
rorb
add
test
jecxz
or
fimuls
sub
cs
fldln2
aaa
imul
xchg
les
dec
aas
ret
rol
push
inc
push
dec
je
rcrb
aam
test
push
popf
fwait
shlb
pminsw
pop
xchg
jb
jo,pn
cmpsl
out
cmp
dec
jne
sbb
pop
xlat
je
mov
sbb
pop
cld
push
sub
test
stc
jne
mov
mov
scas
pop
sti
clc
jne
adc
mov
out
jg
mov
ret
js
jbe
aam
mov
enter
pop
fsubrs
xchg
push
jg
or
test
sarb
sub
xorb
fimull
sahf
cli
in
repz
mov
hlt
push
push
repz
dec
jmp
and
sbb
xor
aaa
and
dec
sub
clc
dec
or
jo
rorl
ret
test
mov
mov
xchg
repz
jmp
inc
aas
add
dec
push
imul
cmp
cmovs
inc
dec
mov
sarb
and
dec
mov
testl
mov
lods
mov
pop
sub
and
mov
call
loopne
dec
push
cld
push
and
inc
leave
nop
aaa
loop
mov
dec
hlt
jae
cmc
jmp
jno
loopne
xrelease
xlat
xor
ljmp
inc
dec
cmp
aam
test
adc
dec
mov
pop
rorb
add
add
enter
test
aaa
gs
jb
insb
out
push
rcrb
out
clc
mov
lcall
cmc
xchg
mov
ljmp
pushf
lcall
xor
or
loop
in
pop
stos
sbb
lods
mov
arpl
xchg
aaa
pop
add
or
jne
movsb
jge
ljmp
dec
lahf
dec
xchg
ret
outsl
adc
fucom
xor
out
clc
test
inc
add
inc
out
sbb
fnstenv
pop
jmp
loope
shll
or
ds
jne
data16
mov
inc
push
into
adc
mov
cli
add
cmp
in
cmp
lea
ljmp
dec
popf
jnp
mov
dec
out
jecxz
mov
adc
mov
dec
xorb
or
pop
mov
mov
jle
cmp
rorb
dec
mov
add
jae
dec
mov
mov
dec
add
push
test
testl
pusha
ret
cmp
dec
sub
aaa
testl
dec
fsubr
or
das
fadds
cmp
inc
dec
popf
fimull
inc
je
push
xchg
js
scas
clc
pop
ss
mov
loop
int3
out
mov
fucomi
cwtl
add
arpl
dec
loop
les
add
imul
push
dec
jns
je
fiaddl
xor
aas
fisttpl
inc
xor
mov
loop
jns
push
cmc
xchg
arpl
dec
mov
out
cmc
pushl
hlt
fstpt
dec
add
loop
mov
sub
or
jo
sub
ss
test
stos
mov
fnstcw
dec
inc
mov
jmp
sbb
andl
push
cmp
into
repz
pusha
jbe
cmp
xchg
inc
je
and
pop
daa
jle
std
push
mov
out
enter
call
xor
mov
lea
mov
mov
dec
push
test
jno
loopne
ja
add
push
test
jne
sub
arpl
dec
loopne
out
out
lock
mov
repnz
cmpsb
movsl
jge
call
and
pop
dec
ljmp
mov
andps
add
rcll
movsl
xchg
sbb
addr16
add
mov
cmp
imul
mov
mov
fidivs
das
xchg
add
loope
mov
cmp
jne
aaa
je
into
call
lret
sbbl
xchg
dec
mov
not
mov
jp
loope
icebp
pop
ret
mov
movsl
pushf
adc
jge
inc
andb
movsb
cmp
or
sbb
and
aaa
pop
cmp
sbb
nop
sub
aam
and
mov
data16
stc
ds
push
xchg
mov
shlb
inc
call
mov
test
mov
or
insb
cs
inc
lods
cmp
pushf
loope
mov
lahf
mov
out
test
outsb
hlt
js
sbb
out
idiv
xchg
addl
dec
inc
mov
sti
imul
mov
adc
nop
sbb
cwtl
dec
mov
mov
pop
xor
dec
sub
push
hlt
stc
dec
push
lods
mov
fs
adc
out
sahf
push
pop
dec
add
adc
adc
mull
fcompl
nop
pop
sub
pop
lahf
ljmp
cmp
mov
xor
dec
inc
cld
push
jmp
add
push
imulb
testl
aas
pusha
pusha
out
icebp
gs
pop
jne
fdiv
je
icebp
aam
stos
test
ds
xchg
imul
call
sahf
pusha
mov
push
mov
mov
out
inc
adc
into
dec
push
jo
jp
enter
sbb
mov
out
mov
jno
jno
cmp
addr16
add
jge
sub
add
test
out
jbe
sub
mov
leave
cmp
mov
mov
daa
in
pop
mov
pop
bound
pop
popf
add
fs
dec
das
push
inc
ja
jne
mov
shll
pop
cmp
jg
nop
outsb
mov
push
push
orb
add
adc
add
clc
inc
xchg
in
xchg
test
lret
into
cmp
je
xchg
sti
jmp
shl
push
dec
inc
sarb
inc
ret
pop
por
jle
and
jmp
clc
dec
dec
push
mov
mov
push
mov
das
dec
divl
int3
inc
dec
add
jl
push
mov
mov
pop
xchg
aas
gs
std
sahf
adc
add
inc
xor
decb
cld
inc
jl
inc
sbb
out
cmp
test
mov
bound
inc
push
fsub
cld
icebp
cmp
xor
ret
pop
into
cmp
adc
adc
jne
addb
inc
int
pop
mov
sti
mov
cld
ja
cmpl
dec
adc
pusha
ret
lods
inc
jmp
push
pop
test
xchg
add
sahf
pop
pop
dec
or
fistpl
and
stos
hlt
cli
inc
lds
jmp
fwait
test
cmp
imul
and
xchg
pusha
lea
mov
sti
ljmp
cwtl
int3
cld
mov
cli
push
inc
mov
movsl
sbb
test
cltd
add
in
adc
jo
xchg
inc
lea
je
aam
mov
cli
das
sarl
fcmovnu
push
push
fiaddl
jl
mov
adc
jl
sbb
pop
subb
inc
stos
int
mov
out
icebp
stc
ja
cmp
pop
pop
ret
push
fsubl
pusha
je
jmp
bswap
mov
addb
xor
gs
mov
notl
cs
aad
jmp
movsl
fnstcw
pop
and
push
stos
in
loopne
xlat
xorl
cmp
dec
mov
jecxz
sbb
ja
adc
push
xor
lret
or
and
pop
ja
daa
and
cmpl
mov
pop
movsl
dec
ss
mov
movsl
mul
mov
not
jmp
xchg
shl
jnp
mov
decb
testb
xchg
mov
or
insl
movsb
sbb
fwait
je
sbb
mov
xor
js
cmpsl
sti
ret
pop
add
test
movsb
jge
xchg
jg
lcall
movsb
arpl
push
sub
ljmp
mov
sub
mov
push
jge
loopne
lea
mov
adc
fstl
stos
inc
push
xor
jecxz
xchg
lret
insl
scas
aam
mov
lods
movsb
adc
rorb
dec
push
mov
aam
out
jbe
jl
ret
mov
jmp
dec
adc
iret
stos
jne
xor
jl
or
cmp
xchg
sub
cmp
fsubrl
les
mov
loopne
xchg
pop
iret
sbb
lea
add
mov
out
inc
fmuls
or
add
lea
mov
cltd
pop
push
ss
or
sarb
adc
sti
and
inc
pop
push
mov
sub
push
or
icebp
cmp
pop
push
xchg
push
xor
dec
jno
popa
jae
repz
test
roll
mov
or
pop
sub
addr16
lea
sbb
gs
fidivrl
mov
arpl
cmp
cmp
cmp
or
add
jae
add
add
add
popa
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
data16
add
add
add
aaa
imul
add
cmp
add
dec
push
add
add
add
inc
add
xor
add
add
add
add
dec
add
add
add
add
add
push
add
add
add
add
add
add
dec
add
outsl
push
add
add
add
add
jo
add
add
push
add
add
ja
add
add
add
add
add
add
add
add
add
add
push
add
xor
add
jns
add
pop
add
add
add
add
add
xor
xor
add
inc
push
add
add
xor
imul
add
inc
xor
add
jbe
add
add
add
jno
add
add
push
add
add
jo
dec
add
add
add
add
add
add
jbe
add
inc
js
add
add
add
add
inc
add
push
pop
add
add
add
push
add
push
dec
add
add
dec
add
xor
jb
add
add
add
aaa
add
data16
inc
add
dec
add
add
add
add
add
add
add
add
add
dec
add
add
add
push
jp
jae
cmp
add
add
add
push
add
add
aaa
add
add
add
add
add
add
add
insb
jae
popa
add
add
add
jne
add
je
add
add
add
add
push
add
add
add
add
add
push
add
add
add
push
add
push
add
add
add
dec
add
js
in
pop
ja
xor
rorb
test
mov
jno
das
pusha
addr16
add
movsb
cmpsl
mov
cmp
and
push
mov
sbb
je
arpl
sub
inc
cmpb
sbb
lea
mov
adc
push
orl
jo
sub
fs
fwait
cld
mov
push
fists
cmc
sub
ss
jp
rol
cmovnp
fsubs
mov
inc
pop
adcb
adc
fcompl
or
jl
imul
or
dec
fldenv
push
ret
cmp
psraw
clc
insb
and
xor
mov
iret
std
shlb
xchg
loop
inc
mov
push
ret
andb
popa
lret
leave
cmp
add
ds
sbb
jecxz
pushf
les
ss
jbe
addr16
and
inc
jbe
das
dec
and
std
icebp
ret
aam
std
lret
mov
jge
xor
std
out
mov
jae
push
andb
filds
and
jnp
test
cmp
push
aas
das
mov
into
std
jnp
into
std
inc
and
out
cmp
xchg
jle
push
fs
cmp
and
mov
jmp
push
cmpsb
sub
xchg
int
inc
cmp
ja
jns
rorl
pop
pop
ja
add
rclb
mov
outsb
xor
cmp
call
icebp
lcall
pop
aam
adc
mov
cmc
dec
dec
int3
std
loop
or
inc
push
push
je
mov
call
bound
scas
addr16
push
xor
or
lret
std
fbstp
aam
nop
sbb
dec
pop
lcall
std
mov
test
push
xor
and
cmpsl
jns
xchg
cltd
scas
fsubrs
inc
dec
jae
bound
ret
pop
outsb
and
int
add
pop
push
xchg
inc
lcall
inc
lret
in
sbb
jl
xchg
adc
inc
mov
cs
sub
roll
lcall
adc
loop
add
mov
fcoms
lret
iret
push
call
andl
nop
outsl
push
outsb
mov
mov
and
lret
push
xchg
pop
mov
add
pop
adc
lds
and
mov
lret
std
fcoml
out
je
out
xchg
cmp
sub
daa
dec
push
cmpsb
adc
fiaddl
pop
pushf
shl
dec
and
jbe
dec
sub
jo
push
pushl
xor
add
mov
lock
test
hlt
push
push
call
aas
and
dec
aas
leave
std
fisttpll
xchg
nop
in
sahf
jne
fistl
std
jae
scas
enter
push
cmc
cmp
mov
lock
dec
dec
lret
out
mov
inc
or
lret
sbb
push
stos
ret
jmp
imull
icebp
leave
std
arpl
in
mov
cwtl
mov
jnp
std
rcll
sbb
cmp
enter
into
test
adc
subl
loopne
out
dec
mov
mov
or
out
jbe
jl
fimull
mov
sub
mov
jns
cmp
lcall
jb
adc
fdivrp
stos
aad
inc
int3
or
ret
sbb
jb
in
add
jnp
test
jo
mov
push
or
repnz
mov
sahf
fisubrs
insl
cmpsl
or
inc
mov
test
out
out
std
mov
xchg
cmp
inc
push
push
hlt
cmp
mov
jne
call
jo
cmp
mov
cltd
in
push
jl
fs
fstpl
xchg
and
jecxz
jno
pushf
xchg
clc
adcb
mov
and
jbe
xchg
xchg
jge
je
or
push
cmc
xchg
pop
cmp
leave
mov
cmp
jecxz
fdivrs
xor
or
call
push
int3
jbe
push
push
mov
cmp
mov
out
aad
ljmp
and
imul
or
filds
mov
adc
fld1
xorl
sbb
add
sub
and
into
fcoml
shlb
mov
jmp
je
jbe
push
jle
pop
xchg
pop
pop
mov
lret
repnz
pop
fsubs
ss
lret
movsl
push
adc
pop
push
cmpsl
xor
or
xor
cmp
mov
push
jp
call
cmp
or
mov
push
call
testb
ljmp
mov
lds
addr16
sub
pop
fstps
jge
movups
xor
jno
xor
popa
nopl
and
or
fcmovnb
movsl
or
or
shrl
in
insl
jne
call
push
data16
cmp
stc
lock
add
insb
jmp
dec
mov
add
in
adc
adc
test
adc
add
ljmp
fwait
sbbb
adc
sub
mov
lea
xorl
ret
jae
sbb
and
sbb
push
pusha
mov
xchg
mov
cmp
xchg
xor
les
pop
lea
faddl
add
cmp
out
mov
push
hlt
jo
ret
fs
lock
xchg
addb
das
adc
dec
scas
mov
out
inc
add
test
cmpsl
test
push
call
and
or
xor
ljmp
xchg
cmp
in
sub
xor
sub
aaa
jecxz
shrb
xchg
ret
rorl
stc
rcr
rcll
aas
pop
or
mov
inc
out
xchg
enter
inc
inc
inc
add
loop
cmpb
out
mov
outsb
cmp
filds
daa
loop
pushf
push
mov
push
push
cmp
in
jle
fmuls
fnstsw
sub
js
jno
ds
fldenv
cmpsl
stos
cmp
test
xor
xchg
lock
inc
fs
push
dec
fildl
pop
mov
pop
ljmp
out
in
mov
xor
test
inc
loop
mov
movsb
add
aas
lock
pusha
sbb
pusha
pushl
js
out
test
mov
inc
add
fcmovne
or
leave
cmp
or
shl
out
inc
imul
cmpl
popw
test
pop
ret
clc
inc
fcmovnb
dec
iret
imul
leave
out
mov
loop
fcoml
das
insb
lods
cld
mov
dec
jg
jo
pop
sbb
mov
nop
and
xor
call
mov
in
shr
mov
push
ljmp
pop
inc
pop
lcall
mov
cmp
inc
push
loopne
sbb
iret
loopne
dec
add
mov
mov
sbb
xor
xchg
jl
push
lock
xor
mov
add
sbbb
pop
stos
std
xor
add
inc
adcb
mov
push
pop
mov
dec
jnp
sub
cmp
out
push
jmp
cmp
mov
inc
cmpb
sbb
jo
add
popa
mov
pop
ret
int3
and
dec
mov
hlt
sti
lahf
lock
mov
mov
test
add
or
lods
ret
mov
clc
ja
sbb
out
or
jp
repz
ret
dec
in
lret
lret
fcomps
cli
or
dec
out
and
pop
int3
lret
je
push
lea
and
sahf
lods
insb
ja
cmp
dec
aas
or
adc
jmp
loope
add
shlb
enter
sbb
mov
or
bound
push
je
sub
sub
loope
out
cmp
sar
int
clc
int
sub
jge
pop
jns
into
call
add
or
jmp
out
addl
lds
mov
adcl
mov
cmp
jl
dec
jmp
in
sub
imul
aaa
add
js
or
inc
cmp
xchg
or
dec
ficoml
ljmp
add
dec
aam
mov
call
sub
ds
push
sbb
pop
xor
jo
call
test
cmpl
loopne
add
add
jl
cmovb
pop
inc
stos
adc
enter
jne
int
mul
movsb
movsb
push
movl
subl
rcrl
int3
or
push
dec
sbb
rorb
stos
adc
adc
shl
lahf
icebp
icebp
or
fcmovbe
jmp
sub
push
fcmovnu
xlat
shr
push
fcmovnbe
ljmp
notl
mov
or
add
jb
scas
cmp
or
dec
push
sahf
ret
in
mov
mov
movsb
call
xor
shll
or
jecxz
cltd
int
rcr
and
sarb
cmp
jae
icebp
shll
push
shrd
shr
jmp
ret
add
pop
test
cltd
rcl
fbstp
pusha
std
shrb
inc
pop
lcall
bound
xchg
or
or
jmp
sub
adc
call
in
mov
or
cwtl
call
sbb
rcl
ds
adc
xchg
nop
rcrl
cmc
sbb
mov
and
mov
rclb
aam
sbb
lea
dec
add
rolb
fistps
mov
mov
mov
lods
mov
movsb
fnsave
lret
cmpb
pop
cmp
fmuls
add
add
repnz
or
and
dec
push
rclb
movsb
js
enter
lret
movzwl
aam
cmpsl
push
xchg
neg
push
or
pop
push
cmp
mov
cmp
cwtl
mov
dec
test
stos
push
mov
push
call
pop
subl
mov
stc
mov
lods
cltd
int
rclb
into
jne
filds
negb
gs
insb
pop
cld
orb
add
and
dec
shlb
lea
push
push
adc
jl
lock
jns
jb
divb
mov
fmuls
lcall
test
jne
ficoml
insb
or
mov
enter
sub
cmpb
hlt
ret
out
push
mov
xchg
mov
fcompl
dec
out
jge
rcl
push
out
sub
mov
repnz
jmp
or
xchg
or
and
mov
dec
push
cmp
out
pop
andb
out
mov
in
inc
sub
xor
push
daa
mov
lahf
jmp
pop
lret
jge
ret
ljmp
add
nop
xor
cli
push
pop
call
jecxz
push
dec
test
ds
insl
mov
cmp
loope
jae
mov
add
loop
inc
push
or
incl
je
ljmp
push
fiaddl
arpl
movl
mov
adc
push
inc
mov
mov
or
jb
add
inc
fst
out
sbb
mov
xchg
xchg
mov
repz
push
or
imul
inc
pop
jo
or
pop
je
or
pop
sbb
xchg
call
imul
popa
in
dec
mov
xor
add
scas
movsb
cmp
dec
jbe
xor
xor
test
sbb
ret
stos
mov
jmp
sub
aas
mov
loope
mov
add
out
sub
hlt
cmp
gs
add
fisubl
insb
inc
cmp
jbe
leave
fnstsw
cld
rcrl
inc
cmp
push
mov
das
and
fcmovne
fstps
sbb
in
ja
jno
jo
cmc
call
int3
and
daa
jb
and
mov
pop
xor
push
xchg
loopne
pop
jno
pusha
add
test
xor
cwtl
mull
add
push
adc
pop
sti
fistpll
xchg
fs
in
mov
mov
cmp
lret
mov
mov
shll
and
dec
nop
je
pushf
fldl
cmp
jp
lods
or
mov
fdivrp
jae
cwtl
fidivrs
mov
lcall
gs
inc
pop
ret
mov
es
push
sbb
icebp
loopne
icebp
outsl
cmp
mov
push
push
sbb
ret
imul
push
mov
mov
or
arpl
pop
dec
push
sbb
pop
sahf
pop
popa
mov
pop
pop
dec
rorb
pop
adc
inc
scas
lret
pushf
xchg
iret
loope
in
cld
fdiv
ljmp
sbb
jmp
test
jle
mov
push
fdivrl
jo
mov
repz
insl
and
imul
fsubrl
lcall
mov
or
pop
subb
mov
mov
rol
xchg
sbb
subl
fnsave
cmpb
pushf
aas
lods
popf
pop
dec
jns
or
sti
mov
push
xor
pop
inc
xor
and
or
xor
or
lret
mov
sub
xor
test
negb
test
in
adc
lods
ficoml
fdivr
addr16
call
mov
adc
and
and
mov
jne
ds
pop
and
pushf
outsb
mov
clc
loopne
icebp
repz
fistps
jecxz
pop
push
leave
in
pop
notl
daa
ds
mov
mov
movsb
or
inc
add
popa
cmp
sbb
xor
call
and
outsb
inc
loope
adcb
dec
xchg
inc
xchg
loope
aam
mov
sbb
inc
xor
cmp
xchg
jno
sbb
sub
je
out
push
xchg
cmc
jp
out
jo
add
sbb
jmp
roll
mov
mov
test
aad
jbe
subb
pushf
jg
je
popf
dec
mov
pop
inc
jmp
out
stc
fsubl
inc
outsb
shll
pop
fwait
push
ret
mov
or
jl
outsb
jae
and
mov
cltd
dec
push
or
test
xchg
jnp
fdivr
dec
lea
mov
mov
sbb
mov
or
xor
sbb
pushf
jnp
aas
fidivl
sbb
jbe
xchg
push
fnstenv
and
xchg
adc
fistps
outsl
mov
adc
mov
jge
nop
jne
adc
ja
jmp
fst
jl
adc
lret
mov
xchg
jmp
push
fsubl
scas
jno
test
jae
cmp
mov
addl
cmp
xchg
pop
adc
mov
shlb
scas
bound
sbb
xor
test
popa
lods
movb
lea
int
sahf
push
push
out
xor
sbb
jecxz
pop
mov
push
jl
scas
xchg
sub
mov
jae
out
push
stc
or
mov
and
call
test
cltd
inc
xor
or
out
push
and
pop
xor
dec
test
jo,pn
aas
movsl
adc
ret
inc
xlat
sahf
jno
cs
fcoms
lcall
mov
fs
mov
ss
outsl
in
jle
data16
inc
inc
popa
mov
fcom
decb
adc
xchg
leave
or
xchg
fstl
enter
inc
mov
popa
jl
js
int
cmpb
mov
adc
or
test
jne
pop
mov
lods
push
xor
pop
or
lods
ret
sub
mov
lods
aam
addr16
ljmp
jne
ffree
add
lods
ja
call
mov
addr16
cmp
loope
xchg
mov
mov
mov
jne
mov
jl
xchg
fdivs
sub
push
cmpsl
jecxz
je
popf
pushf
xchg
jne
xchg
jae
ret
push
aad
and
mov
jne
jns
push
nop
mov
xor
arpl
daa
dec
call
dec
pop
ds
pop
mov
xchg
popa
mov
xchg
out
xor
jbe
js
rorb
mov
stos
xchg
cs
jmp
loop
and
sbb
jl
xor
insb
loope
cmp
push
fwait
sarl
mov
lret
adc
jb
scas
pop
push
or
cmp
imul
rcrl
xorb
add
lahf
orb
gs
lea
je
lods
icebp
cli
andl
cmp
jb
jle
cltd
iret
mov
adc
mov
inc
sar
jg
int3
jp
lfs
es
addb
mov
aaa
in
pop
add
mov
or
out
ret
lahf
sub
gs
mov
mov
scas
xchg
ljmp
imul
mov
mov
rolb
test
daa
cmp
fwait
sbb
test
add
cltd
imul
xor
pop
ret
test
adc
fcmovnbe
shlb
or
shl
add
hlt
adc
push
testl
scas
add
push
pop
xor
mov
jecxz
jmp
aas
xor
test
jns
out
sub
shll
xchg
jmp
push
sbb
and
faddl
push
shl
cmp
mov
pop
push
fld
sub
sub
dec
xor
mov
push
aas
hlt
sbb
cmc
shlb
jge
dec
aaa
bound
mov
shll
test
test
cltd
out
pop
push
mov
fistpl
fnsave
je
testb
cld
and
rclb
dec
inc
push
clc
loopne
add
or
pusha
mov
les
pop
mov
fistps
mov
in
jp
mov
mov
mov
repz
iret
je
mov
fldcw
clc
mov
push
dec
dec
cmp
imul
pop
movsb
out
shr
call
call
dec
xor
mov
xchg
insb
mov
movsl
mov
mov
les
xchg
push
stos
add
lea
jl
dec
jne
or
cmc
adc
dec
push
xchg
dec
mov
call
cmpsl
mov
or
cmp
sub
fisubl
xchg
int3
jne
cmp
sbb
adc
sbb
jge
mov
mul
hlt
push
neg
jg
popa
imul
cmp
vrcpps
pop
dec
stc
xchg
call
test
aas
test
nop
ja
dec
push
push
xchg
in
cltd
leave
sbb
sub
mov
mov
in
notl
stc
inc
mov
sqrtps
filds
sbb
pop
pop
ss
fstl
addr16
sub
cmp
mov
and
mov
and
sahf
pop
icebp
out
pushf
or
and
jecxz
push
sti
call
adc
cmp
cwtl
and
pop
sbb
xor
xchg
pop
call
dec
lea
inc
hlt
mov
andl
jl
int3
popf
and
adc
ljmp
jno
cmp
popa
lret
int
cmp
pop
loopne
mov
push
ret
add
inc
mov
enter
jne
imul
jo
lcall
dec
and
push
dec
pushf
cmp
je
movsl
insl
subl
not
mov
aam
push
add
push
or
iret
outsl
or
mov
mov
llwpcb
cmp
aad
mov
jecxz
add
ror
pop
cmp
movsb
ret
jne
mov
rclb
jge
mov
addr16
add
int3
and
and
rcrb
push
scas
adc
call
insl
push
loopne
mov
cltd
lods
dec
in
mov
mov
data16
mov
push
adc
jecxz
fld
and
shr
pop
mov
pop
test
inc
mov
mov
or
test
mov
cmpsb
push
mov
xchg
cwtl
mov
mov
arpl
mov
mov
push
xchg
mov
adc
cmp
dec
mov
cmp
xchg
ljmp
lods
pop
enter
dec
push
in
in
cmp
xor
adc
jb
icebp
jg
xchg
inc
decb
out
in
je
test
loop
cmp
loope
push
jbe
stos
ret
stc
or
call
mov
jge
sbb
insb
cmp
sub
test
lea
adc
and
or
out
jmp
mov
add
je
adcl
push
dec
xor
in
or
clc
adc
and
mov
inc
cmp
mov
jle
int
iret
sub
ss
imul
mov
pop
xchg
lahf
loopne
in
loopne
in
sbb
lcall
mov
dec
dec
push
push
call
out
xchg
and
adc
in
popa
clc
int
iret
jnp
sbb
dec
inc
cmp
aaa
or
or
and
cmp
fisttpl
sbb
jmp
inc
ljmp
fistl
cmpsl
mov
xchg
call
imul
out
fbld
cmp
fstpt
pop
add
ja
cs
push
movsl
pusha
ret
add
and
add
out
add
mov
cmp
repz
movsl
pop
mov
xor
insb
inc
popf
pushf
mov
or
stc
shll
cmp
jge
push
jmp
xchg
pop
sahf
je
cmpsl
jnp
dec
cmpsl
nop
fucomp
jl
fwait
insb
imul
lock
in
sbbb
cltd
xlat
popa
jp
mov
add
es
fisubrl
dec
rol
call
ret
stc
or
pop
in
cmpsb
pop
push
jmp
out
pop
outsl
arpl
xchg
test
sahf
repnz
or
sbb
lret
xchg
ret
imul
mov
adc
jmp
in
add
leave
adc
dec
cmpsl
call
in
mov
jbe
gs
shll
jbe
imul
in
inc
jmp
faddl
pop
in
cmp
rorl
mov
shlb
call
imul
fisubrl
or
movb
call
cmp
dec
out
cltd
shrb
das
dec
fldl
imul
adc
mov
mov
jae
js
cmp
push
cmp
sub
push
sub
or
mov
testl
rcrb
inc
subl
in
ret
pop
jmp
out
sbb
cmp
xor
insb
aad
call
inc
adc
push
and
push
outsb
cwtl
popa
in
jg
jge
mov
daa
and
mov
sbb
cmp
jb
lods
jmp
rol
call
xor
repz
je
cmp
cmp
stos
scas
in
call
aam
jmp
sti
jp
add
cmpl
add
stc
pop
in
cmp
scas
mov
push
xlat
dec
das
stos
push
mov
inc
cld
sub
clc
cltd
fdivr
int3
ret
out
mov
nop
sbb
add
add
pop
jns
mov
cmp
test
imul
inc
rolb
mov
adc
popa
fldenv
movsb
push
mov
std
sub
call
xchg
or
mov
jg
xchg
add
push
push
push
insl
push
out
leave
insb
mov
rorb
addl
mov
dec
inc
add
pop
mulb
sbb
les
bound
and
fcomi
pop
and
adc
add
ds
aad
call
ds
lods
int
mov
fwait
jae
outsl
adcb
rcrb
fcoml
jb
mov
adc
and
cmp
je
push
jno
and
loop
mov
loop
mov
fmull
popa
push
jl
push
pop
inc
aam
scas
pop
xchg
cmp
shll
mov
js
adc
call
push
mov
imul
rorb
cs
adc
xor
lock
cs
fcoms
inc
je
xchg
inc
push
call
xchg
pop
shlb
mov
xorl
push
or
or
jbe
add
popf
pop
jecxz
push
and
test
fs
ds
fcomps
test
iret
sbb
and
cmp
fadds
inc
cmp
mov
mov
scas
in
push
mov
xchg
sub
mov
xor
mov
push
adc
mov
call
jne
loopne
mov
and
lods
pop
pop
adc
icebp
cli
inc
xchg
fsubr
push
scas
mov
jnp
pop
cmp
or
push
xchg
xchg
pop
in
bts
test
popa
out
mov
pop
sbb
fbld
es
adc
jb
leave
push
jb
mov
mov
jo
push
pop
sub
mov
inc
cwtl
add
mov
bound
fcmovnb
sbb
and
pushf
mov
addb
fistpl
aam
popa
out
scas
cmpl
inc
jp
jg
stos
cmpl
xor
out
xchg
cmp
in
hlt
or
mov
mov
icebp
xor
mov
cmp
mov
sbb
dec
shr
testb
mov
ret
inc
in
pop
cmp
jne
sbb
cmp
jle
pop
inc
out
add
out
cmp
mov
adc
pop
call
mov
mov
xlat
rclb
sbb
mov
lock
lds
mov
dec
fistl
call
mov
and
mov
push
mov
lock
adc
sub
daa
inc
push
sbb
ljmp
cmp
jge
sbb
jb
jns
aaa
xchg
cmpl
dec
xchg
and
repz
ffreep
jge
sahf
pop
ret
add
incl
call
in
testb
call
dec
lock
call
add
fprem1
imul
addb
subl
mov
cmc
repz
fistps
cld
imul
dec
push
push
out
movsb
cltd
inc
pop
dec
mov
mov
lcall
iret
inc
inc
push
gs
inc
mov
sub
or
out
sub
push
push
les
mov
cmp
dec
jmp
mov
or
inc
je
leave
adc
xor
add
jae
enter
jbe
icebp
fisubrs
lret
xchg
add
mov
xor
or
test
add
sbb
add
jl
negl
jmp
push
adc
mov
jl
xchg
insl
flds
push
fidivrs
xchg
pop
divl
sti
in
movsb
push
fisttpll
xor
jae
nop
jnp
repnz
mov
out
push
xor
jmp
adc
push
icebp
pop
popa
in
push
cli
gs
fmull
jnp
or
cmp
pop
sub
jl
inc
mov
lret
jnp
push
lahf
data16
pop
jno
aaa
jl
mov
cld
xchg
sbbb
iret
lcall
jp
loope
daa
cs
fs
fcomps
popl
add
adc
outsl
call
and
pop
fmull
stos
xor
dec
mov
mov
in
xchg
push
test
cltd
cwtl
dec
or
jp
xor
and
xchg
jnp
out
aaa
aaa
mov
scas
xchg
nop
push
pushf
xchg
popf
sbb
adc
mov
xor
jno
pop
xchg
xlat
sub
jnp
call
insl
call
outsl
addr16
and
jb
sbb
mov
lret
jmp
xchg
lock
arpl
ds
sbb
test
xchg
fwait
cmp
xchg
adc
pop
lret
aaa
in
std
push
push
pop
push
xlat
xor
xor
and
inc
pop
fsincos
aaa
and
data16
jmp
mov
pop
dec
fld
adc
or
mov
ficoml
jl
pop
and
pop
test
adc
cmpsl
push
fadds
cmp
dec
out
mov
cmp
jbe
push
js
repnz
imul
push
call
ret
mov
sbb
push
and
js
cmp
daa
pop
mov
cli
adc
loop
cmp
lret
sti
mov
je
xchg
add
icebp
jge
std
ret
push
stc
mov
les
fchs
pop
adc
arpl
jg
push
mov
rcll
xchg
outsb
js
insb
inc
outsb
lret
out
adcb
scas
cwtl
xchg
inc
sbb
and
pop
mov
pop
and
inc
lock
push
mov
ja
or
dec
and
clc
je
cmp
test
popf
ja
vxorps
sbb
dec
pop
cmp
jbe
loop
iret
lea
jae
punpcklbw
je
cli
in
mov
outsb
lock
mov
fnstenv
cmp
loopne
push
ss
scas
push
out
out
icebp
ret
ljmpw
insb
lea
leave
xor
and
pop
shl
clc
es
dec
push
xor
or
jae
mov
cli
xor
fldl2t
push
outsb
adc
std
xorb
sarb
call
or
jns
adc
mov
out
loope
sbb
int
xchg
dec
call
mul
ss
push
call
in
inc
sar
out
jmp
mov
mov
jle
xor
sbb
pop
cli
dec
stc
adc
test
lcall
data16
or
pop
cmc
sub
and
pusha
pop
lock
pop
cmpsb
ja
jno
adc
rol
push
push
or
in
jp
insl
xchg
jge
fucomp
xor
out
outsl
insl
dec
lock
shr
xor
stos
testl
data16
xchg
loop
ja
mov
push
inc
cmpb
shrb
add
and
nop
fisttpll
call
popa
mov
push
jne
mov
das
or
shlb
mov
je
shrb
lret
call
sti
pop
push
inc
icebp
stos
xor
adc
add
enter
and
sub
mov
push
and
xchg
repnz
in
xchg
inc
and
xlat
cmp
rorb
cmp
enter
xchg
push
mov
in
xor
mov
push
test
outsb
pop
cld
pop
push
and
add
pop
xchg
cwtl
inc
jg
cmp
mov
popa
clc
xchg
inc
ret
jp
adc
push
jno
mov
jnp
mov
leave
je
cwtl
addr16
test
mov
pop
daa
and
loope
xchg
pop
leave
cltd
call
ljmp
jp
ret
cmc
mov
mov
dec
cmp
aaa
jne
push
inc
ret
push
mov
cmp
nop
sub
mov
mov
cmp
jbe
mov
inc
push
data16
lcall
sti
xchg
ss
hlt
jmp
shl
dec
call
test
xchg
jp
popa
loop
in
lret
outsb
cmp
cmp
pop
je
cld
pop
cmp
or
inc
movsl
mov
out
push
je
and
sbb
pop
lods
cli
fcomps
xchg
pusha
rcll
fisttpl
ljmp
pop
xor
inc
je
lcall
add
or
cmp
pushl
inc
je
mov
add
sbb
mov
int
xor
push
fsubrl
and
push
int3
jmp
fdivrs
push
je
pop
icebp
ret
xchg
add
xchg
pop
scas
rcrl
jns
and
orb
mov
pause
jmp
xchg
inc
push
icebp
repz
fwait
dec
fs
jae
adc
adc
ret
and
jmp
popa
push
movsl
fdivrs
jbe
sub
out
inc
mov
std
lock
mov
pop
dec
jle
pop
sbb
sbb
arpl
lds
mov
mov
and
sub
lods
ret
and
test
pop
std
ljmp
adc
cltd
dec
dec
mov
cltd
popf
aam
lcall
jmp
stos
jmp
inc
imul
cs
fs
into
pop
pop
movsb
or
and
out
sbb
dec
fsubl
shrl
mov
sbb
les
dec
pushf
cmp
add
jae
xchg
cwtl
xor
shrl
or
push
dec
in
dec
push
icebp
add
cmp
cs
push
aaa
call
mov
rolb
mov
sarb
jmp
mov
ret
ja
inc
xor
adc
jge
push
jno
testb
fimull
push
jge
negb
test
daa
mov
inc
adc
mov
outsl
ret
or
mov
push
push
push
add
cvttps2pi
lahf
in
outsb
icebp
push
mov
sub
push
push
loopne
ds
mov
and
and
cmpb
lods
xchg
test
push
mov
jbe
pushf
lock
cmp
xor
lret
and
or
sub
loopne
setnp
and
idiv
push
adc
push
je
jle
inc
into
push
mov
call
inc
add
xchg
repnz
add
pop
xchg
outsb
push
xlat
stc
sub
and
jnp
jno
sub
push
shr
call
sahf
mov
xor
cmp
inc
outsl
mov
mov
dec
inc
addr16
xchg
addb
inc
lock
enter
les
pusha
mov
xchg
insl
imul
mov
ljmp
xor
popf
out
jle
mov
test
sbb
call
xorb
pop
sub
fstl
mov
sbbb
mov
push
call
hlt
bound
dec
mov
popf
pop
imul
in
sarb
push
roll
push
lret
je
push
push
cmp
sub
sbb
add
jne
jl
cmp
pop
pop
rcrl
push
inc
fbstp
sbbl
adc
xchg
push
push
out
dec
cmp
adc
ret
adc
into
sbb
xor
jp
push
or
ss
pop
push
ret
mov
and
lret
je
adc
mov
cmpb
in
mov
shll
sahf
js
xor
dec
fnclex
popa
pop
and
push
mov
out
ficomps
setb
test
xor
mov
add
popf
add
fildl
dec
sub
jae
cmpsb
push
push
mov
out
mov
xchg
andl
setge
cmp
and
insl
lahf
or
ret
jo
add
ljmp
sbb
mov
sbb
jbe
cld
mov
call
or
add
pop
sbb
ljmp
js
dec
popf
aam
js
ficoml
jl
fstpt
js
out
pushf
aam
js
cmp
scas
js
sbb
sbb
jmp
jb
call
add
sbb
or
push
inc
packuswb
xlat
inc
adc
mov
dec
orb
adc
stos
test
adc
pop
fs
or
sti
mov
push
adc
mov
adc
push
pop
mov
xchg
cmp
rolb
inc
js
xchg
out
shrl
lds
sahf
ret
xchg
cld
mov
js
cmpl
shrl
ljmp
rclb
lea
mov
into
ret
mov
adcl
xor
pop
ret
mov
out
mov
jmp
or
mov
movsl
lods
mov
dec
pop
push
enter
dec
lods
mov
cmp
lret
adc
xchg
popf
cmp
icebp
pop
scas
inc
ret
push
push
mov
pop
push
mov
je
out
outsb
je
add
ljmp
jns
xor
lahf
xchg
sbb
mov
popa
mov
mov
sub
call
fsubr
push
or
mov
or
or
cmp
sub
clc
shl
mov
xor
push
sahf
pop
gs
pop
push
mov
sbb
rol
pop
fimull
push
fidivl
ret
sbb
outsl
testb
adc
rol
in
call
mov
pop
mov
popa
add
cmp
adc
pop
out
je
cmp
jg
daa
ljmp
jmp
pop
sbb
fists
mov
jns
or
jl
movsb
mov
cli
daa
movsl
sbb
mov
xchg
out
inc
sarl
aaa
cs
out
or
cmp
sub
ffreep
arpl
or
add
cwtl
sub
fisttps
push
jns
or
inc
add
stc
movsl
imul
xchg
out
lcall
adc
les
push
ljmp
push
push
dec
rcl
sbb
pop
cmp
cmp
shll
pop
lea
out
adc
mov
xchg
movsb
mov
pusha
adc
repnz
cwtl
sub
aaa
xchg
imul
xchg
adc
push
adc
nop
xchg
push
ret
scas
xchg
xchg
pop
pop
and
imul
fsubrl
fdivrp
push
xchg
jle
icebp
fs
mov
add
cmp
lock
inc
outsb
adc
out
mov
mov
inc
insb
xor
ss
fcmovnb
cli
dec
popa
nop
cwtl
jo
mov
dec
in
insl
push
ret
in
mov
push
mov
out
es
xchg
repnz
outsl
pop
fstps
cmpsb
std
mov
icebp
outsl
and
cmp
mov
test
adc
jl
outsb
push
popw
dec
dec
inc
out
jne
cmp
push
lcall
sub
jmp
enter
push
outsl
lcall
insl
xor
sub
lea
fs
iret
call
shlb
and
pop
xchg
pop
outsb
call
gs
xchg
mov
out
jle
imul
lock
loopne
icebp
cmp
inc
inc
out
outsl
lock
jmp
jmp
mov
loope
out
fiadds
xchg
mov
mov
pop
pop
jmp
call
dec
add
pusha
invd
cltd
je
les
or
stc
jo
xchg
mov
or
test
push
push
or
push
mov
aad
call
jbe
xchg
push
pusha
out
xchg
add
sbb
pop
and
aas
cmc
sbbb
into
jp
aas
clc
xchg
sbb
inc
add
test
outsb
test
imul
jbe
jo,pn
mov
iret
repnz
push
add
inc
ret
sbb
push
lock
out
daa
sub
repz
je
popf
sti
jno
ds
mov
in
lahf
popl
push
adc
test
jo
xchg
push
or
aam
cmp
ds
and
cld
inc
addr16
ret
mov
pop
mov
pop
rcpps
aaa
xchg
xchg
dec
ss
xorb
loopne
fs
loopne
insb
in
jmp
popa
shrl
lods
mov
gs
pop
out
sub
jns
adc
fdivl
dec
mov
ficoms
stc
nop
mov
dec
jae
sahf
sbb
scas
lret
pop
loope
pushf
inc
xor
fistpll
mov
cmp
lods
fcoml
pop
mov
xorb
lret
out
call
shl
scas
rolb
stos
add
cwtl
lret
mov
mov
xor
mov
pop
call
ljmp
repz
cmovae
mov
pushf
fdivl
mov
mov
leave
popf
lea
test
int3
push
adc
test
sub
sub
fldt
push
add
lock
ret
cmp
cmp
cmp
call
sub
mov
add
sti
mov
add
dec
hlt
jae
cmc
jmp
and
mov
addl
fildl
xor
add
lock
cmp
mov
sub
jbe
xor
xor
ds
mov
mov
ljmp
ret
xor
in
xchg
sub
fiaddl
xor
cmc
mov
test
test
stos
sub
adc
mov
fiaddl
movl
test
sub
testl
add
daa
loope
sub
cld
in
push
mov
sub
test
fldl
lahf
in
mov
cmp
shlb
testl
cmpb
pop
es
pop
and
movsb
or
and
sahf
push
out
mov
sti
pop
xor
push
test
pop
or
pusha
in
xor
inc
xor
dec
push
push
push
mov
movl
jne
and
test
inc
fs
in
inc
or
in
xor
mov
clc
push
push
jl
xor
sahf
and
scas
in
mov
test
insb
sub
jl
movsl
adc
jae
mov
sbb
adc
repz
insb
push
je
lods
mov
call
in
lds
xchg
frstor
cmp
stos
mov
mov
ds
pusha
add
dec
jp
cmp
xor
test
pop
inc
into
lcall
jl
sarb
hlt
sub
inc
or
and
shrb
je
push
dec
outsb
xor
push
or
dec
movl
fsubr
jno
sub
sub
cmp
push
aaa
int
int
fdivrl
daa
jb,pn
testl
movsl
mov
loopne
xchg
inc
ss
test
inc
fisttpl
cmp
sub
pop
shl
add
ret
aas
cmp
add
mov
stos
cmp
cmp
ds
push
out
insl
sub
imul
adc
aas
pop
ret
inc
cmp
push
mov
pop
fs
jae
sub
sub
outsl
and
dec
cmp
jb
fucomp
push
or
mov
inc
xor
leave
jecxz
jle
push
shrl
insb
movsb
fldenv
xchg
sbb
dec
push
cmp
bsr
xor
and
jnp
jae
mov
aas
add
imul
dec
fildl
dec
add
inc
mov
or
out
add
loop
cmp
fistl
lock
xor
ljmp
out
xchg
fadds
adc
test
pop
cmp
or
cwtl
sti
cmp
mov
jle
push
js
adc
scas
pop
xor
cmp
stos
out
pop
jns
mov
push
jmp
es
nop
cmp
std
push
loop,pn
fwait
push
jmp
xlat
call
mov
and
dec
sub
cmp
out
mov
testl
sub
aas
pop
cmp
jb
js
sub
push
into
push
push
je
xchg
push
sub
clc
cmp
jae
ljmp
fldt
jmp
inc
pop
mov
sbb
data16
iret
jl
in
std
pop
pop
mov
test
inc
mov
adcw
rolb
jne
adc
adc
sbb
mov
test
xor
test
jns
pushf
inc
mov
or
mov
hlt
dec
aad
call
sub
push
aas
jmp
mov
jl
and
es
add
add
push
aam
into
test
lret
jo
sbb
not
jae
sar
or
jecxz
add
imul
xlat
xor
or
stos
aas
cmp
pop
jecxz
into
int3
and
out
cld
addr16
mov
mov
call
adc
or
or
or
fisttps
mov
pop
iret
xchg
jmp
xchg
and
xor
das
invd
mov
aam
add
out
adc
rcll
adcl
mov
add
movsb
inc
fldl
mov
mov
or
add
mov
mov
inc
sbb
in
push
shrl
or
xor
push
leave
push
les
dec
scas
cmc
aad
stc
iret
inc
mov
enter
movb
call
popf
hlt
pop
les
scas
ficompl
inc
xor
add
xor
fistl
dec
loopne
ss
mov
ss
xchg
fs
mov
push
lret
loope
aam
ret
fcomps
shr
fdivs
add
shrb
lret
jb
jge
push
xchg
mov
push
scas
ret
faddl
pop
mov
mov
sbb
mov
xor
mov
lea
push
mov
mov
leave
mov
imul
leave
sub
sti
fwait
enter
js
sub
mov
stos
call
cwtl
pop
lea
cmp
xchg
fcoms
xor
xor
mov
ja
or
xor
xor
jb
in
fisttpl
add
push
rcll
sub
inc
and
mov
inc
insb
sbb
dec
xor
pusha
jecxz
clc
shlb
jge
adc
cmc
sub
pop
bound
pop
add
bound
inc
sbb
add
insb
or
inc
and
arpl
push
fsts
mov
int3
pop
shlb
mov
sarb
pop
rorl
andb
std
testb
and
pop
pop
es
je
or
inc
test
or
jno
pop
faddl
lret
popf
insl
stos
call
and
xchg
and
inc
or
or
stos
mov
add
or
out
dec
call
dec
cmp
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
outsl
add
add
add
jp
add
add
insl
add
dec
add
add
add
pop
add
add
add
add
add
add
push
dec
add
add
add
add
add
add
add
add
inc
add
add
je
add
add
add
add
push
add
inc
add
add
jbe
add
add
add
add
add
add
push
add
add
add
jbe
add
add
inc
add
inc
add
outsl
push
aaa
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
jno
add
add
add
add
add
add
add
add
add
dec
add
add
add
dec
inc
add
add
add
add
add
pop
add
add
add
cmp
add
imul
add
add
add
push
outsb
add
jno
cmp
add
jno
xor
add
outsb
add
push
add
jns
arpl
add
add
xor
add
arpl
add
dec
add
add
add
ja
add
xor
push
popa
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
jne
add
add
add
add
add
dec
add
ja
arpl
add
add
add
pop
add
add
add
add
add
add
add
add
add
inc
add
add
add
xor
inc
add
add
push
add
add
mov
inc
mov
bound
and
inc
notl
jecxz
jns
xchg
sbb
pop
popa
pop
shll
das
inc
xchg
mov
add
push
mov
adc
pop
and
push
xor
jo
and
add
sub
call
iret
add
test
add
adc
pop
xchg
jo
stc
sbbl
pmuludq
ret
cmpsb
jmp
jne
ficompl
test
or
mov
jne
roll
xchg
fs
lods
adc
gs
add
push
mov
push
lea
and
repz
shl
inc
sbb
daa
dec
and
adc
dec
call
mov
cmpsl
test
adc
out
pop
inc
daa
and
in
mov
stos
dec
out
je
jge
out
sub
pop
dec
clc
sbb
imul
call
cld
sub
adc
pop
shlb
gs
push
push
leave
fildl
push
mov
xlat
lods
push
jne
int3
call
adc
dec
mov
pop
adc
pop
pusha
shr
and
push
lcall
mov
arpl
icebp
push
jmp
test
mov
xor
test
sub
into
push
call
enter
jg
mov
mov
pop
cmpsl
ss
pop
ret
in
cmp
mov
lds
ljmp
pusha
pop
popf
jns
das
pushf
repnz
push
int3
xrelease
fdiv
ss
gs
dec
cltd
push
imul
imul
push
push
or
push
rclw
call
fisttpll
xlat
divps
add
adc
mov
sub
aad
push
inc
inc
pushl
sub
adc
cmpsl
sti
andl
fstpl
jns
loope
adc
sbb
mov
lds
dec
aas
push
sbb
jecxz
or
mov
fucomi
imulb
not
or
sahf
mov
dec
int3
mul
out
inc
cmp
adc
mov
icebp
jl
les
ret
into
movsb
dec
pop
ret
push
adc
add
jecxz
out
shr
cli
std
ret
jne
iret
aas
adc
ret
pusha
push
arpl
pop
pop
int
adc
push
inc
cltd
in
pop
mov
push
or
popa
push
test
paddusw
jge
lahf
ljmp
aaa
or
jno
ret
jmp
rcr
or
hlt
mov
and
mov
pushf
sbb
push
xchg
mov
idivb
aaa
test
jbe
cmp
inc
fmul
cmp
add
std
fcomp
das
xor
leave
repz
adc
and
mov
sti
pop
mov
call
mov
add
sub
sub
in
mov
sub
mov
adc
fnsave
fstpt
call
fidivrl
loop
mov
inc
pop
jno
xor
jb
xor
dec
mov
insb
loop
mov
push
mov
andl
add
fdivrl
repz
xchg
stos
pop
jne
push
out
mov
xchg
xor
cmp
inc
sbb
into
mov
cmp
adc
inc
or
stos
in
xchg
add
loopne
hlt
or
push
sbb
std
xchg
lcall
push
sub
sub
or
fstps
jne
mov
jb
fsubl
shrb
xor
loopnew
test
aam
mov
and
repnz
xchg
popf
and
gs
rcll
movsl
or
inc
add
pop
cs
push
dec
or
ret
xchg
sub
in
fisttpl
jg
xor
scas
inc
cmp
xchg
mov
insb
mov
mov
mov
pop
fnstenv
gs
or
ds
arpl
adc
xlat
bswap
scas
pusha
adc
ljmp
out
sti
insb
pop
stc
push
out
insb
push
dec
cwtl
push
jnp
push
jbe
test
stc
mov
mov
cld
mov
sahf
inc
pop
push
push
xor
popa
jne
mov
repz
pop
jecxz
and
jbe
sbb
or
pop
call
mov
push
or
lcall
dec
cmp
add
push
and
inc
push
dec
fs
fcmove
pop
mov
sub
sub
dec
push
push
sub
mov
pop
dec
fucomip
cmp
jle
aaa
adcb
inc
jle
fcoml
in
inc
ja
cltd
imul
jb
imul
adc
xchg
test
or
andnps
mull
dec
stos
cmpl
ret
out
add
cmpb
inc
aad
scas
mov
lret
or
sub
mov
lods
mov
push
divb
xchg
in
push
dec
imulb
cltd
rorl
xor
xlat
mov
jae
jae
mov
push
aam
out
mov
stc
cli
jb
fldl
cmp
jmp
or
jmp
push
adc
and
cmp
adc
nop
or
inc
jne
popa
push
in
dec
pop
pushf
scas
or
cld
push
xchg
andl
fwait
xchg
jecxz
decb
or
jmp
iret
lea
jg
push
push
jmp
or
je
sahf
sbb
jns
in
or
xchg
call
aaa
mov
aam
or
daa
mov
mov
loop
neg
and
xor
cmp
mov
jge
or
dec
arpl
sbb
sub
sti
or
mov
jbe
js
xorl
cli
xorl
mov
aaa
push
imul
cmp
dec
lods
pop
jl
aaa
sbb
test
enter
mov
int3
jl
pop
gs
scas
xchg
mov
dec
fs
nop
int3
in
movsl
pop
adc
cwtl
imulb
cmpsl
dec
mov
xor
imul
call
bound
test
or
aam
and
movsb
xlat
sub
shr
jne
icebp
pop
jle
pop
test
mov
and
mov
xchg
mov
sbb
xchg
rcrl
xor
jae
ret
out
xchg
shl
outsb
cwtl
xchg
xor
aaa
adc
xchg
movsb
jbe
xchg
mov
aas
cmpsl
in
pop
pop
pop
xchg
add
pop
sbb
pop
lea
push
mov
xchg
loope
orl
fwait
pusha
mov
or
adc
stos
inc
aam
data16
test
add
pushw
or
sbb
add
mov
inc
roll
or
adc
dec
in
sahf
push
cmp
das
sbb
jge
mov
test
cmp
mov
cmp
out
add
imull
mov
jl
mov
pop
ja
xchg
outsl
xor
push
push
adc
dec
mov
cmc
pusha
or
cmp
cmpsl
loope
mov
mov
ret
ret
mov
sbb
lock
arpl
sub
add
outsl
pop
cmpsb
popa
jae
pop
mov
out
dec
sbb
pop
shr
xlat
push
inc
pop
push
jns
jmp
and
inc
jo
ficoms
mov
push
lcall
sbb
out
cwtl
pop
sbb
dec
mov
imul
add
mov
cmp
jbe
jno
push
jp
xlat
inc
inc
loopne
insl
iret
adc
inc
ficompl
xorl
clc
adc
or
mov
pop
ljmp
dec
insb
jecxz
xchg
sub
sub
push
cmp
pop
jmp
aaa
mov
push
cmp
push
pop
push
leave
call
arpl
jmp
daa
mov
insb
mov
or
das
movsl
insl
jle
rol
mov
add
push
sbb
push
inc
fiaddl
add
xchg
add
lods
pop
pushf
test
cmp
call
int
inc
enter
imul
xor
jmp
aad
mov
call
es
and
leave
add
and
jns
inc
push
mov
out
xchg
inc
pop
mov
mov
pop
xor
and
out
pop
dec
adc
out
les
and
stc
cwtl
xchg
and
mov
mov
vpcmpeqd
push
outsl
xchg
pop
mov
lahf
mov
mov
mov
lods
or
jmp
aam
jno
std
pusha
aaa
push
cmp
jmp
sub
push
sub
pop
dec
rol
xchg
xor
jmp
sbbb
test
lcall
jnp
add
mov
in
adc
cmp
je
pop
jbe
mov
jl
outsb
xchg
test
std
movsl
jns
lods
call
stc
pop
cltd
dec
sbb
and
out
pop
cmp
call
and
push
adc
fstl
add
popf
bnd
lcall
lahf
add
dec
aad
std
mov
cmpl
scas
scas
jo
and
xor
stos
out
mov
cmp
ss
sbb
xchg
and
sahf
xor
pop
lret
call
and
movsb
push
rcr
pushf
or
sbb
mov
movsb
xchg
mov
movsl
and
jne
mov
pop
ljmp
loope
xor
fs
mov
xchg
mov
push
pop
jns
mov
sbb
std
inc
jne
adcb
mov
inc
sbb
callw
aas
adc
cmc
add
pop
enter
arpl
fs
jmp
andb
lock
add
or
call
cmpsl
sbb
add
mov
cmp
mov
sub
es
aam
fs
std
loopne
mov
push
gs
or
or
std
sbb
xlat
outsl
arpl
pop
pop
sbb
inc
clc
inc
inc
xchg
mov
adc
pop
lcall
popl
inc
std
or
call
arpl
ret
stc
ljmp
cwtl
sub
std
shll
add
fimull
loope
pusha
adc
jb
or
add
xchg
push
xchg
mov
jb
data16
xor
push
xor
mov
mov
aam
jl
leave
imul
call
stc
cltd
pushf
lea
pop
sahf
imul
dec
aam
push
mov
push
dec
jecxz
repnz
jmp
call
cmp
mov
cld
mov
lcall
mov
aam
cltd
adc
adc
jmp
push
sti
std
inc
outsb
push
outsl
add
sbb
and
mov
mov
inc
stos
sbbl
shl
daa
push
mov
lea
mov
ljmp
mov
mov
nop
mov
ss
mov
loopne
xorb
jo
loope
scas
nop
inc
iret
in
push
mov
fists
fwait
sbb
rclb
lods
call
je
das
push
sbb
jo
nop
ret
std
aas
cmc
cmp
sbbb
pop
das
pop
ljmp
leave
orl
mov
push
lret
std
dec
jne
jl
push
rol
enter
out
dec
fs
xor
test
cmp
mov
outsl
mov
xor
add
test
push
mov
cli
lea
sub
iret
jnp
mov
cwtl
add
sub
push
mov
fcomps
mov
mov
or
cmc
dec
enter
add
sbb
mov
cli
cmp
fstl
pop
loope
ljmp
xorl
push
hlt
out
inc
dec
mov
jecxz
std
dec
pop
pop
and
sbb
sti
sub
cmp
add
call
or
xchg
jle
in
jne
push
call
stos
mov
ja
hlt
add
add
add
popa
pop
add
dec
add
add
add
aaa
add
add
add
add
add
add
add
add
xor
ja
add
add
dec
add
add
add
add
add
add
add
add
add
inc
add
add
pop
add
add
insl
add
add
add
jbe
add
add
add
push
push
ja
add
xor
add
add
add
push
add
add
pop
add
add
outsl
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
push
add
add
pop
add
push
add
jb
add
add
add
add
add
add
add
add
js
add
ja
add
xor
add
inc
add
add
push
add
add
add
jp
jne
add
add
xor
add
dec
jb
xor
add
add
add
cmp
push
add
xor
add
add
add
add
inc
add
add
push
inc
add
add
add
jbe
popa
add
add
add
dec
xor
add
add
outsb
add
add
dec
add
add
add
add
pop
je
add
add
add
add
push
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
insb
cmp
add
add
push
add
bound
inc
xor
add
add
xor
add
add
add
jb
push
add
add
add
inc
add
add
inc
add
dec
pop
add
dec
add
add
push
add
add
add
add
fsubs
fnstcw
lods
out
loop
xchg
push
lock
fs
adc
sub
call
popa
mov
push
mov
inc
sbb
lods
outsl
outsb
scas
mov
inc
imul
jmp
dec
fld
cmp
punpckhbw
test
sub
fdiv
loopne
or
push
adc
orb
mov
dec
scas
ljmp
arpl
jb
in
push
jg
popa
rcll
adc
sahf
xlat
mov
mov
jne
mov
scas
ljmp
mov
leave
or
lods
mov
cmp
push
push
fsts
ja
test
call
push
in
mov
fiaddl
mov
in
aas
xor
jmp
jmp
sub
pop
mov
mov
cmp
out
dec
inc
lahf
add
sub
pop
and
movsb
ja
das
jno
leave
sbb
inc
lea
cmc
push
or
add
cmp
mov
outsb
push
jle
ret
roll
cwtl
or
or
decb
sub
int
icebp
jmp
mov
sbb
push
mov
add
mov
pop
popf
and
call
fidivs
testl
cmc
les
pop
jo
fsubrl
xchg
int3
push
sar
xchg
icebp
test
dec
repz
data16
lea
call
jge
dec
pop
mov
outsb
mov
add
nop
jmp
test
subl
cmc
mov
add
sti
jle
subl
mov
adc
out
adc
inc
push
or
and
dec
adc
push
fneni(8087
cmc
add
pop
dec
add
sub
inc
push
mov
dec
lock
add
mov
add
fldl
in
call
xchg
div
add
inc
xchg
sbb
xchg
rcrl
jae
leave
lods
jnp
mov
mov
cmp
xchg
fldl
mov
adcb
push
xchg
inc
int3
ret
pop
sarl
lret
lock
add
idiv
pop
xor
mov
fildll
jle
sub
call
call
xchg
and
imul
in
cmp
iret
dec
mov
lea
xor
outsl
addl
fstps
je
je
mov
pop
inc
xor
jno
pop
sti
jle
mov
addl
lea
push
add
xchg
dec
sub
jne
icebp
es
push
add
cmp
imul
gs
dec
sbb
loope
inc
add
sbb
xchg
cmp
dec
pop
in
cwtl
mov
ret
mov
xor
dec
in
sub
in
imul
push
pop
fistps
insl
xor
lcall
pop
je
xchg
mov
push
lea
in
cltd
ret
push
ret
adc
mov
lret
xchg
inc
pop
xchg
mov
rcll
pop
aas
jnp
mov
fistpl
pop
pop
pop
push
inc
inc
jo
push
fs
push
mov
aaa
aad
push
pop
stos
aas
loop
xlat
ljmp
adc
xchg
inc
add
add
sbb
dec
push
inc
ljmp
add
ljmp
push
adc
add
mov
xchg
pop
mov
stos
and
push
std
mov
pop
jae
and
sarl
pop
sbb
popf
sbb
and
mov
push
sbb
push
mov
jp
fmulp
pop
fs
inc
push
jle
sbb
cmpsl
mov
xchg
jbe
lahf
in
push
push
jl
jp
imul
fbld
out
insl
ror
aas
xchg
in
xor
xchg
push
jns
xor
lods
mov
stos
call
mov
push
xlat
std
fmull
mov
in
and
fldpi
dec
shr
movsb
test
add
add
icebp
adc
push
xor
adc
mov
js
ljmp
adc
lcall
mov
dec
fiadds
ds
ret
rclb
and
pop
xlat
and
clc
adc
dec
inc
xor
mov
inc
imul
test
mov
shr
and
push
rorl
in
lret
sub
idiv
in
jns
ja
mov
add
call
test
pop
jne
dec
test
lret
ja
mov
push
stc
mov
je
fidivrs
loop
idivb
jnp
mov
cmp
mov
insl
pop
scas
fsub
leave
pop
clc
adc
rorl
inc
mov
outsb
dec
adc
aad
addl
ret
mov
movlps
adc
mov
adc
lret
fldl
out
mov
out
es
out
sub
jle
fcomps
push
add
cmp
pop
xor
mov
sarb
pop
mov
inc
wrmsr
cmp
or
add
in
ficomps
inc
xor
das
and
mov
cmp
mov
xchg
adc
in
dec
adc
mov
jmp
mov
iret
mov
jns
ret
mov
sbb
mov
dec
pop
cmc
cmp
mov
lea
jne
xlat
cmp
xor
xchg
cmp
testb
enter
in
jo
sahf
mov
mov
sahf
stos
sahf
idiv
fldenv
cmp
movsl
iret
call
pop
xchg
insb
hlt
xchg
movaps
fcmovbe
cmp
mov
sub
cs
push
fnsave
int
leave
sub
push
push
add
xor
mov
pop
loope
sub
ljmp
jecxz
mov
cli
push
adcl
pop
sbb
xchg
arpl
ret
fsubrl
xchg
cltd
cmpb
dec
and
cltd
in
loopne
mov
push
icebp
mov
push
lds
fnsave
cmpxchg
in
mov
out
lods
jp
cmc
jo
in
ja
ds
decb
nop
inc
sahf
inc
dec
sbb
je
out
xor
cltd
inc
inc
cmp
xor
repnz
jne
aas
nop
pop
out
cmp
inc
orb
push
psadbw
xor
jno
movsb
popf
add
mov
cld
mov
call
xchg
daa
mov
mov
mov
scas
cmc
adc
cld
mov
xchg
jle
cmp
dec
cltd
cwtl
mov
out
je
ljmp
pop
insb
add
cmp
scas
xor
xchg
scas
cmp
mov
lods
rolb
cltd
out
rorb
rcr
dec
lahf
dec
call
hlt
pop
push
pop
testb
nop
negl
int
jne
inc
call
adc
sub
mov
test
movl
xchg
mov
insb
pop
je
xor
popl
jmp
std
test
nop
dec
mov
dec
movsb
stos
mov
fistl
inc
mov
mov
rcl
ficoml
aam
mov
ljmp
lock
push
clc
fisttpl
cld
lods
add
fcomp
or
lea
and
mov
dec
mov
xchg
xor
out
xor
scas
inc
xchg
sti
cmp
mov
inc
dec
push
push
sub
mov
sub
insb
scas
mov
dec
dec
test
aad
mov
fldenv
pop
push
mov
pop
loope
pop
jmp
test
sti
mov
inc
rolb
lods
int
add
pop
or
movsb
testl
dec
cwtl
mov
iret
lods
ljmp
mov
mov
je
mov
icebp
fcomps
int
mov
nop
xchg
mov
inc
scas
dec
fs
mov
mov
inc
mov
int3
ret
xchg
cmp
mov
inc
ffreep
sti
fimull
add
xchg
xor
inc
fucomip
or
and
fcomi
dec
lea
cld
and
call
mov
pop
repz
xor
push
int3
in
jge
cmp
daa
pop
xor
fld1
ljmp
fldcw
int3
les
sbb
jle
jl
xchg
gs
int3
sub
and
add
mov
and
roll
mov
jbe
and
xor
mov
xor
rorl
movsl
jp
sbb
sbb
inc
inc
stos
fmull
push
jne
pop
cli
push
ret
dec
mov
mov
cltd
mov
cmp
je
xor
ss
add
ljmp
dec
mov
pop
cmp
mov
out
loop
add
pop
mov
lret
cwtl
sbb
pop
call
sbb
dec
xlat
clc
repz
in
inc
mov
jecxz
push
adc
jmp
imul
cmpl
ds
jmp
mov
je
sbb
cmpb
pop
or
lock
fs
int
or
pusha
test
fsubrp
and
push
dec
in
sbbl
jo
or
fadd
mov
das
dec
je
sahf
sbb
rcll
mov
inc
adc
or
cli
je
adc
inc
mov
adc
inc
icebp
inc
adc
mov
adc
jg
and
adc
dec
testl
and
icebp
lea
lahf
sahf
sbb
mov
pop
add
adc
sub
push
loop
filds
in
add
push
sahf
dec
hlt
jae
cmc
jmp
xor
adc
sub
push
jbe
in
jae
adc
lea
sbb
sub
dec
cmp
mov
rorl
call
ficoml
adc
adc
or
sbb
dec
push
sbb
mov
pop
sub
dec
dec
loop
or
sub
adc
out
in
mov
sub
ret
fiadds
sbb
aaa
sbb
cmp
xor
lea
push
mov
ja
lea
jp
add
jp
add
dec
mov
mov
ja
ficompl
aad
sub
sbb
shrd
and
lsl
stc
sbb
jne
inc
adcb
imul
inc
es
clc
cmp
inc
dec
popf
ficoml
inc
mov
sbb
mov
sarb
mov
mov
test
jbe
fdivs
addr16
bound
mov
cmp
ja
xchg
lods
je
lea
cmp
inc
push
movb
test
addr16
int
ljmp
inc
jecxz
adc
in
inc
fbld
out
ret
mov
jge
nop
and
scas
stos
mov
xor
stos
dec
inc
loop
sti
andl
jo
aad
ss
ljmp
inc
lret
lods
mov
mov
jb
and
lret
and
fs
jge
push
xchg
push
xor
jecxz
loope
push
aaa
mov
cmp
add
or
test
adc
mov
les
test
mov
fldt
dec
call
loop
mov
jne
push
call
dec
out
fdivrs
imul
and
sub
shrb
fwait
add
mov
or
ret
sbbb
int
call
insl
cld
nop
and
imul
fdivrl
fstpl
imul
push
mov
jae
inc
in
std
inc
addr16
ret
mov
inc
mov
sahf
out
clc
popf
jecxz
cmp
and
call
je
ret
enter
inc
je
leave
inc
jmp
ret
loope
sub
xor
and
jbe
insl
mov
out
cmp
ror
dec
lcall
aam
icebp
and
frstor
ljmp
mov
cmp
mov
fcmove
nop
and
push
push
call
inc
fwait
mov
je
pop
out
mul
aas
das
mov
mov
lods
jge
cmpsb
inc
or
filds
stos
or
imul
daa
mov
add
pop
ss
pop
data16
add
jp
add
add
add
add
add
push
add
add
add
inc
add
add
add
add
inc
popa
jae
add
add
add
outsl
add
add
add
add
add
add
add
add
add
add
dec
add
add
xor
jbe
add
add
push
add
add
add
add
add
dec
inc
add
add
add
add
add
pop
add
add
add
add
add
ja
add
push
add
add
add
add
add
add
add
xor
add
add
outsl
add
xor
add
add
cmp
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
inc
add
add
push
add
outsb
push
add
add
add
add
add
jae
add
add
add
add
add
add
add
push
add
add
add
add
data16
inc
add
push
dec
add
add
inc
add
add
add
xor
add
add
add
inc
add
add
inc
add
add
add
add
dec
add
add
add
insl
add
add
add
xor
xor
add
add
inc
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
push
aaa
add
push
dec
push
add
add
add
add
add
add
add
add
inc
xor
add
js
add
add
add
add
add
add
add
add
add
add
aaa
add
add
push
add
add
add
add
add
bound
aaa
dec
cmp
imul
add
add
add
insb
add
push
imul
add
add
jne
inc
add
xor
add
add
add
add
add
insb
inc
add
add
add
add
dec
add
add
jo
int
and
fs
ficoms
and
loope
fldenv
push
in
push
mov
dec
clc
jno
rcrb
ja
add
mov
mov
ss
pop
cmc
push
fiadds
push
dec
call
jl
in
jmp
pop
aas
pop
ret
lret
daa
jmp
inc
or
mov
xchg
cltd
fs
paddusw
add
das
jno
mov
insb
inc
data16
jno
ret
lea
lea
dec
cld
movsl
shl
ret
aam
call
cmp
lea
pop
gs
int3
cli
imul
add
fimuls
push
or
push
add
add
dec
popa
fwait
dec
shll
or
repz
dec
ret
aam
sub
sbb
pop
clc
into
add
in
in
push
dec
call
pop
int
mov
inc
adc
rclb
push
fsubr
jp
loope
or
or
aas
pop
sub
mov
repnz
add
mov
push
fimuls
mov
dec
pop
pop
in
push
loop
sbb
fiadds
sbb
inc
adc
mov
xor
or
mov
loopne
push
cmp
arpl
call
ret
inc
mov
or
sbb
sub
fwait
dec
mov
push
shrb
lcall
aam
mov
fistl
sbb
xor
bound
call
shl
sub
and
jmp
mov
in
dec
mov
sub
inc
rolb
pop
mov
test
xorb
push
xlat
pop
add
lcall
rorb
pop
add
fidivrl
pop
scas
push
pop
rorl
mov
pop
inc
or
mov
add
mov
cmpsl
mov
test
xorb
std
stos
iret
shl
or
jmp
shlb
enter
fcomps
cli
jne
out
test
xchg
mov
cmp
mov
mov
je
dec
out
and
push
lods
fsubl
sbb
cli
jmp
jge
xchg
mov
cli
cmp
mov
jb
cmp
dec
push
jecxz
add
stos
jmp
jnp
dec
sti
jae
push
data16
pop
popf
inc
mov
push
xor
pop
stc
out
mov
std
xchg
mov
daa
rorb
in
mov
push
test
push
test
xchg
lds
xchg
fadds
subb
pop
ret
stos
pop
aas
call
ret
jl
jl
repz
sub
lds
mov
sarl
out
or
call
fsubrp
mov
xor
das
div
push
sub
dec
sbb
addb
pop
ret
push
pusha
inc
adcl
or
mov
ds
aad
lods
cmpsl
in
cmp
pop
xor
arpl
inc
in
mov
xorl
nop
hlt
test
xor
out
addl
sbb
arpl
xchg
fcmovbe
pop
lret
shrl
stos
adc
mov
movsb
sbb
lea
rorb
aas
repz
cmp
jo
mov
mov
xchg
daa
pusha
inc
mov
push
mov
inc
sbb
outsl
ds
dec
pop
sbb
ja
jb
jae
inc
fmuls
jl
cmp
aas
and
scas
jnp
mov
inc
sbb
shll
jb
mov
push
mov
pop
imul
xorl
das
lods
mov
or
ss
add
aam
clc
sti
push
inc
int
cmp
fidivs
jb
mov
adc
inc
add
ss
xor
inc
fdivrs
mov
test
mov
or
cli
je
push
mov
and
inc
and
sbb
inc
outsb
add
and
sub
cmp
sar
call
loop
icebp
out
mov
pop
jl
and
ror
lret
call
pop
jmp
sub
sub
add
mov
call
xchg
aad
dec
hlt
jae
cmc
jmp
cmc
and
jge
xor
icebp
out
lahf
mov
add
add
popf
push
mov
leave
sub
mov
cmc
mov
push
adc
or
and
mov
or
pusha
jmp
lahf
dec
cwtl
jmp
dec
scas
and
push
repnz
ljmp
stos
dec
call
dec
sahf
and
ljmp
mov
pop
faddl
test
fldl
and
mov
jmp
mov
lds
pop
mov
cmp
je
stos
enter
or
divb
ja
jb
fldpi
mov
add
mov
in
mov
mov
push
out
popf
fistps
xor
mov
in
adc
ja
pop
xor
and
leave
ja
add
or
mov
mov
xchg
mov
mov
ret
and
mov
push
pop
push
push
fwait
push
hlt
mov
xchg
xor
jae
mov
cmc
jns
mov
and
adc
fmull
sti
sbb
jg
mov
imul
stos
jmp
push
mov
mov
push
xchg
inc
insb
ds
inc
pop
jg
jmp
pop
push
sarl
mov
ficoms
xorl
loopne
add
cmpsl
push
jmp
pop
and
adc
xor
mov
mov
sahf
mov
loop
cmp
dec
sub
jo
mov
sbb
ljmp
push
or
jle
add
cmp
ret
pushf
hlt
dec
inc
loopne
xchg
mov
and
inc
adc
mov
in
adc
cmpsl
imul
add
pop
jl
cmp
loope
xchg
out
push
jno
cmpsl
adc
add
aas
js
sbb
fcomi
mov
pop
jo
sub
push
xchg
stos
imul
shlb
adc
in
leave
sahf
sahf
add
aad
push
pop
pusha
push
fmull
out
rol
leave
aam
jne
loop
in
and
mov
gs
loop
sbb
test
rorl
xor
arpl
xchg
rcr
jno
stos
inc
lea
in
pop
or
iret
adc
xor
sub
outsl
aam
mov
icebp
loopne
das
fsubr
jne
or
sub
aas
jmp
xor
push
xlat
mov
xrelease
out
jo
jl
sub
fmull
mov
xor
xor
dec
imul
and
mov
dec
lea
sbb
in
jecxz
cmpsl
mov
push
cmp
pop
fimull
bound
xchg
xor
pop
aad
push
mov
and
aas
test
rcr
adc
cmp
mov
repnz
pop
addr16
push
mov
lret
roll
mov
mov
enter
mov
js
mov
std
push
mov
mov
sbb
outsl
pop
pop
pop
into
and
lock
sbb
mov
fimull
mov
dec
cmpsl
and
inc
and
icebp
and
push
scas
data16
test
pushl
jl
and
push
pop
mov
pop
add
setge
incb
fsubs
sbb
xor
jbe
ret
dec
mov
call
mov
add
scas
jecxz
fs
je
outsl
scas
scas
es
loop
subb
imul
insb
js
pop
cmp
or
pop
pop
stos
jecxz
daa
in
mov
adcl
outsb
adc
pop
lods
mov
mov
repz
jbe
cmpl
mov
xor
repnz
dec
adc
rolb
cmp
and
jp
or
movsl
xor
inc
mov
and
lret
lods
fisttpl
ljmp
stos
xchg
pop
push
out
stc
ds
leave
ficoms
insb
inc
ret
mov
xchg
neg
pop
orl
out
mov
pop
bound
xchg
xor
pusha
test
jno
mov
cmp
mov
int3
push
pop
cmp
je
xchg
mov
sarb
in
mov
in
mov
in
xlat
lret
mov
inc
sbb
jno
js
dec
jmp
jo
shrl
imul
and
inc
cmpsb
or
mov
lods
mov
mov
sbb
cmp
lahf
mov
push
cmp
push
lods
out
lods
cmpsb
pop
pusha
outsb
xchg
mov
lea
lea
shrd
push
xlat
mov
clc
imul
clc
xlat
orb
jmp
mov
push
je
push
and
lods
mulps
pusha
dec
rcll
or
dec
lock
or
pop
pushf
div
ljmp
in
in
ja
or
xchg
je
pop
gs
xchg
mov
imul
movsl
popf
pushf
imul
icebp
and
dec
and
call
roll
pop
pop
add
sbbb
pop
push
dec
jns
in
sbb
sub
or
jg,pt
mov
mov
mov
outsl
jo
test
or
mov
jp
push
xor
clc
or
push
fxch
sub
addr16
les
rolb
nop
out
in
pop
sub
push
pop
scas
mov
in
fistpl
bound
push
push
cmpb
lock
addb
add
jl
or
lret
popf
mov
call
into
scas
adc
pop
addr16
enter
mov
sub
mov
fbld
rolb
icebp
aaa
dec
cmpl
fldt
mov
sub
jecxz
jge
int
mov
sahf
inc
aam
bound
xor
lcall
decl
mov
xor
inc
jbe
out
gs
scas
mov
cmpsl
mov
data16
push
pop
xchg
ljmp
popa
mov
xor
sbb
subl
jl
mov
andl
and
repz
mov
mov
es
mov
pusha
out
call
jb
and
mov
mov
add
inc
mov
je
push
dec
jb
gs
sahf
fildl
inc
and
adc
fadds
mov
push
adc
sbbb
popa
jns
xor
lds
mov
dec
int3
fadds
add
mov
call
push
sbb
adc
test
lods
outsb
push
push
aas
xlat
clc
pop
imul
mov
jl
rclb
aaa
push
cmpsb
roll
das
jo
mov
call
dec
xchg
hlt
push
inc
call
xlat
js
rolb
sub
in
jle
pop
inc
dec
or
ss
xor
jo
xor
jo
cmovns
mov
mov
loopne
mov
push
pusha
fstpt
mov
scas
pop
out
push
mov
addr16
pop
out
inc
or
addb
cmp
jns
sbb
mov
mov
mulb
and
cmp
fsubr
xor
add
fiaddl
rorl
int
mov
pop
enter
pusha
xchg
xchg
pop
xor
mov
int
dec
iret
jo
movsb
dec
cmpsl
add
push
pushf
xor
aas
jae
and
dec
jno
adc
jb
mov
ljmp
push
pop
js
adc
js
call
add
adc
sub
xchg
cmpsl
add
xchg
enter
rcrb
mov
add
add
add
sahf
lcall
shlb
sbb
jg
sub
and
fidivs
dec
add
push
dec
movsl
sbb
repz
shl
cmpsb
iret
add
add
adc
xor
mov
push
ret
dec
call
les
out
mov
or
push
mov
ret
sti
sub
push
and
sahf
cltd
rolb
jns
sbb
xor
data16
cltd
hlt
adc
xchg
les
jo
or
imul
sti
loop
jb
add
jl
sbb
add
push
mov
sti
add
inc
pushf
data16
aas
add
aad
and
xor
aam
push
fwait
stos
push
test
movsl
cmp
aam
dec
or
mov
and
mov
ffreep
int3
insl
fisttpl
jl
mov
and
adc
iret
sbb
fldt
or
sti
mull
add
sub
push
cmpsl
mov
sub
jge
fistpl
add
add
jnp
shll
in
sti
mov
or
popf
roll
in
dec
sbb
jb
decl
pop
pop
sub
and
xchg
in
sti
cli
sti
fimull
push
add
mov
roll
pop
xchg
add
jecxz
sub
lahf
xor
sbb
fisubrl
mov
popf
sarl
xor
clc
adc
add
inc
pop
xchg
stos
dec
sub
sti
test
mov
icebp
adc
inc
subb
inc
jge
adc
dec
push
add
push
in
sub
loop
stos
mov
lret
outsl
fsubs
test
imul
cmpsb
mov
or
test
sub
dec
ss
shrb
mov
into
shl
popf
pusha
pop
das
stos
cmpsb
mov
fistpl
jo
fwait
ret
insb
jbe
inc
add
iret
popa
mov
fcomi
push
imul
ret
ffreep
jmp
xchg
ret
mov
ror
inc
cs
test
dec
fldt
push
jge
dec
or
sbb
xchg
fbld
add
jbe
popa
mov
pop
sbb
xlat
add
jp
aad
adc
or
inc
push
das
out
pushf
outsb
ret
pop
das
sub
cmc
push
dec
cwtl
gs
xlat
dec
les
pop
push
fldl
scas
stos
xchg
and
add
mov
mov
jmp
sub
pusha
mov
push
outsb
cltd
mov
aam
mov
push
xchg
sahf
and
xchg
adc
add
jns
add
pushf
lea
retw
pop
notb
sti
jno
cltd
daa
add
movsb
orb
xlat
mov
aas
xchg
lahf
inc
inc
adc
jecxz
in
add
sbb
xchg
add
dec
or
sub
popa
cld
pop
xor
inc
adc
fisttps
fistl
dec
cli
call
adc
call
push
leave
mov
test
cmp
xlat
inc
int3
push
aaa
orb
or
leave
inc
and
xchg
xchg
lea
lods
leave
xchg
ret
mov
push
pop
mov
cmp
xor
shrl
lods
nop
sub
jp
xchg
in
dec
lea
push
sbb
imul
pop
rcrl
mov
out
sub
imul
sub
xchg
insl
ss
test
popa
xchg
add
rcll
add
mov
mov
cltd
insb
shrl
xchg
lea
add
inc
mov
and
aad
sub
sbb
ja
or
pop
aam
push
dec
inc
inc
or
sbb
lods
sub
daa
mov
or
push
repz
or
in
mov
mov
adc
jmp
mov
test
xchg
ds
ret
or
mov
mov
sahf
inc
pushf
push
push
and
rcrl
push
cmp
repz
hlt
mov
pop
std
pop
jae
fstpt
add
loope
stos
add
mov
jmp
test
mov
mov
push
mov
fdivl
inc
out
in
sub
ret
out
out
std
loope
in
outsb
mov
repz
in
mov
mov
imul
pop
arpl
and
and
and
xorl
cwtl
push
js
fisttpl
lret
movsl
jmp
mov
shlb
adc
mov
mov
inc
xchg
adc
ud0
inc
stos
pusha
icebp
add
mov
les
sbb
aas
adc
add
cmp
mov
stos
add
leave
outsb
sbb
sbb
sbb
ret
hlt
dec
mov
xchg
fmuls
dec
dec
jns
mov
xchg
dec
inc
nop
outsb
add
add
cmpsb
jns
into
add
ja
ror
test
rol
shll
rorb
pushf
sub
jmp
pop
out
in
lret
fs
jae
mov
sub
test
lret
sub
dec
inc
push
push
sarb
stos
jge
xchg
mov
lods
decb
int
pop
jns
scas
cli
lret
pop
fcompl
add
adc
hlt
mov
cmpsb
inc
iret
push
dec
stc
aad
jb
jo
cmp
popa
shl
add
repnz
add
aas
sub
and
testb
scas
and
inc
or
xchg
add
mull
aam
xor
pop
enter
sbb
sub
in
jnp
jg
add
jl
pop
cwtl
push
aad
testb
mov
lret
shlb
jecxz
dec
dec
push
popf
add
out
jl
sbb
xchg
scas
adc
into
cs
add
add
testb
repz
mov
xchg
dec
pop
imul
dec
jecxz
stc
sub
rol
push
call
xlat
push
or
inc
push
daa
mov
rolb
sar
inc
pop
add
inc
add
jno
inc
lds
lret
jbe
and
inc
ds
pop
pop
lret
jg
adc
add
pop
stos
in
in
lret
roll
lahf
jp
stos
gs
imul
push
pop
mov
lods
add
or
cli
lds
mov
pop
pusha
or
push
in
sbb
adc
add
inc
push
push
jmp
jp
and
test
mov
dec
leave
or
mov
loopne
or
or
xchg
push
or
jbe
or
fildl
cli
mov
jb
xor
in
movsl
test
cwtl
sbb
sbb
xlat
jmp
inc
jnp
and
mov
xchg
cmpsb
les
jb
mov
mov
lds
fsubr
xor
add
rclb
xor
add
addr16
xchg
add
add
mov
mov
add
sbb
inc
into
incb
pop
add
out
fimull
sbb
lea
or
push
aam
sub
cmp
std
dec
fidivl
pushf
nop
xor
xchg
add
add
es
call
adc
jp
hlt
push
or
jae
mov
fmul
dec
faddp
or
jns
mov
mov
cltd
int
int
lcall
dec
roll
sub
ja
mov
hlt
dec
push
pop
or
or
pop
fdivrs
and
lods
aaa
sti
mov
cmpl
dec
add
mov
dec
imul
xor
sahf
popa
xchg
out
push
lcall
sbb
lret
outsb
lret
mov
and
fsubr
sub
fsubl
jl
shll
inc
lcall
subl
leave
xchg
ss
cltd
pop
add
inc
ret
add
adc
js
dec
loop
mov
sbb
jmp
insb
xlat
in
test
push
mov
cmp
es
mov
jno
mov
add
cltd
jnp
lret
ficomps
ljmp
xchg
mov
xor
scas
pop
sar
mov
mov
push
mov
pop
mov
add
push
fcmovu
jecxz
add
test
mov
lds
push
pop
arpl
loop
sbb
fidivl
loope
ret
fucomip
cmpsl
cld
xor
movsl
cltd
jne
ret
stos
rcrb
add
inc
dec
fdivrl
rolb
jmp
jle
hlt
insb
or
and
mov
insl
jbe
cmp
xchg
mov
int3
fstp
mov
xchg
sbb
add
cmpl
push
jle
inc
cmp
dec
fsubrs
into
lods
xchg
sarb
xor
mov
insl
mov
push
xchg
inc
mov
test
cmp
sahf
xor
xor
cmovo
add
cmp
add
lds
cltd
jbe
int3
inc
int
xchg
inc
lock
xor
pop
add
es
stos
add
pop
out
push
push
sarl
or
adc
dec
rorl
xor
lock
daa
rorb
or
add
cmpsl
imul
jg
add
xor
mov
aaa
sahf
clc
add
dec
daa
fldcw
jbe
dec
xchg
xor
add
fbld
push
sub
xchg
in
cmc
cwtl
xchg
add
push
andb
incb
pop
aad
pop
bound
xchg
xchg
pop
pushf
lret
cmpsb
leave
mov
and
add
mov
fsubs
add
jp
inc
add
dec
ret
xor
push
imul
jns
enter
pop
mov
int3
imul
mov
xor
add
loope
sbb
mov
cli
bound
arpl
repnz
andb
aad
pusha
sub
cmp
in
arpl
lea
fcoml
lret
lahf
out
mov
fcoms
add
dec
push
cmc
lret
jl
mov
cmp
add
cs
icebp
pop
add
loop
movsl
add
lret
add
jl
push
xchg
lret
aaa
add
addb
pop
das
int
jg
icebp
or
stos
int3
jmp
leave
mov
dec
pop
orb
popa
shl
pop
into
mov
pop
mov
mov
mov
subb
cmp
in
jg
fsubr
dec
shl
inc
and
adc
xchg
push
pop
or
and
adc
test
lret
sti
mov
outsl
sar
out
inc
sbb
aaa
adc
mov
popl
jae
xor
out
nop
pop
enter
xchg
rol
lret
xor
mov
pop
mov
mov
dec
addl
test
cwtl
fstps
jecxz
lcall
icebp
lock
faddl
mov
adc
mov
sbb
sub
and
jge
sbb
in
icebp
push
add
push
add
divb
push
pushf
inc
std
add
int3
aas
mov
cmp
push
lock
jg
imul
ds
adc
scas
push
pusha
lret
or
pushf
xor
in
mov
outsb
cmp
faddl
imul
pusha
add
jle
cld
add
push
mov
inc
rcl
mov
xor
xchg
dec
mov
xor
add
repnz
out
outsl
adc
int3
clc
test
popf
jmp
fs
aam
gs
dec
aam
adc
mov
loopne
into
ja
sbb
jae
fwait
roll
and
add
lret
subb
addr16
inc
mov
mov
repz
aas
dec
mov
dec
sbb
movsl
xor
aaa
mov
jae
jae
xchg
add
mov
jle
in
sub
push
fcoms
sbb
cs
loope
jnp
cmc
mov
fwait
gs
sub
enter
add
add
xor
add
add
add
add
arpl
xor
add
add
add
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
push
add
bound
add
add
add
add
add
add
add
add
add
aaa
add
push
add
inc
add
add
add
dec
add
add
add
push
popa
add
add
jbe
imul
dec
add
add
add
add
add
add
add
add
je
add
push
add
insb
add
add
add
add
add
add
add
add
inc
xor
add
add
add
add
add
add
add
dec
add
inc
jns
add
add
add
add
add
add
jno
add
add
add
imul
add
add
xor
imul
add
add
add
add
xor
add
xor
dec
add
add
add
add
pop
add
add
add
imul
dec
imul
add
add
add
push
add
add
add
push
add
add
add
add
imul
add
dec
xor
add
add
add
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
add
add
inc
add
inc
add
xor
push
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
jb
add
ja
add
aaa
jo
outsb
add
add
add
add
add
add
add
ja
add
add
add
add
add
fstl
jae
shll
add
ss
xor
xor
xchg
mov
dec
clc
fidivrl
cmc
add
cltd
rcl
cmpsb
mov
stc
cmp
add
mov
mov
in
mov
mov
inc
arpl
adc
fld
dec
xchg
mov
adc
outsb
add
imul
xchg
add
push
push
loope
jl
mov
subl
rcrb
xchg
inc
in
shlb
inc
xlat
aam
cmp
or
ret
mov
adc
fsubr
loopne
call
add
leave
adc
and
movsb
rclb
and
inc
movsb
fnstenv
call
add
and
sub
cmp
pop
fs
inc
je
js
addb
mov
adc
fsubr
call
dec
es
or
and
fnstcw
inc
orl
push
nop
out
loopne
in
pop
hlt
rcrb
inc
jmp
push
out
mov
jmp
cmpsl
sub
fldenv
adcl
shl
inc
lock
sub
sbb
xor
push
pushf
fnstenv
pop
in
clc
jmp
sub
fldenv
je
mov
jmp
inc
in
clc
lea
sub
ret
cmp
dec
pusha
je
test
xchg
out
movsb
xorl
fsubr
inc
cld
ficoml
sub
cmp
xor
dec
andl
jmp
inc
mov
shr
and
lock
scas
ret
push
pop
insb
jmp
inc
mov
shr
sbb
in
mov
and
cmpl
movsb
mov
cld
call
inc
jmp
push
out
lods
add
fsubr
hlt
adc
xor
inc
push
fstps
orl
mov
hlt
jmp
subl
xor
inc
dec
pop
inc
insb
fnstcw
sbbl
rolb
fldlg2
out
hlt
popl
ret
adc
jmp
inc
sbb
out
xchg
sbbl
mov
out
aam
faddl
xor
ret
xor
fxch
out
loopne
adc
sbb
sub
out
jo
sbbb
mov
enter
ficoml
xor
out
dec
andl
jmp
inc
fcomp
lock
ss
sbb
fisubrl
pop
je
orb
mov
les
clc
jmp
aaa
sbb
inc
sub
xor
cmp
dec
pop
fs
jo
jl
mov
movsb
mov
inc
lock
ret
inc
inc
push
fstps
subl
nop
mov
int3
out
in
in
pop
lock
adc
and
push
sbbl
mov
in
fprem
in
cmp
or
adc
fnstcw
out
inc
orl
fs
js
inc
nop
fstps
shr
fdiv
inc
or
dec
sub
jb
rolb
xor
pop
out
mov
mov
lret
mov
mov
fcmovnu
mov
shlb
pop
lods
and
sbb
xlat
lret
push
add
mov
mov
inc
cmp
sub
and
adc
jecxz
lock
ret
leave
mov
int
add
iret
and
leave
bound
inc
imul
aad
adc
stos
mov
dec
stos
dec
push
add
add
and
hlt
mov
fcmovnb
nop
sub
mov
dec
jecxz
fwait
xchg
add
dec
outsl
lret
stos
rcl
scas
ret
clc
xchg
iret
fistpl
cmc
imul
add
push
add
cltd
lret
loop
rclb
xchg
sahf
add
or
push
push
xchg
mov
ret
add
stos
ret
xchg
leave
fucompp
add
pop
xchg
fildl
aaa
jne
mov
mov
sahf
iret
lret
nop
inc
rcr
or
inc
inc
ret
mov
adc
sbb
pop
jmp
inc
nop
mov
jnp
shll
pusha
cmpl
cmp
mov
jge
dec
imul
mov
ret
dec
popa
stc
push
mov
xor
rclb
test
add
sub
dec
add
lods
dec
popa
aad
or
ror
jmp
or
mov
xchg
mov
mov
or
xor
pop
test
stos
imul
shll
stc
add
ret
rorb
adc
inc
sub
lret
fwait
es
mov
sbb
add
loop
pop
daa
inc
aaa
or
add
xchg
ror
cmp
in
les
push
insl
ss
repz
or
fsubl
stos
sbbl
mov
scas
cmp
inc
je
mov
ret
rorl
lcall
dec
jns
cltd
out
rorl
lock
add
sub
cwtl
repz
and
int
leave
xchg
lret
adc
dec
sub
nop
fistps
mul
cwtl
filds
xchg
cmpl
dec
mul
xchg
and
add
sub
lret
xchg
or
inc
adc
sbb
repz
fisubs
xor
sub
mov
pop
inc
mov
dec
sbb
jnp
pop
mov
out
jo
addl
shlb
popf
das
test
bound
sub
fwait
inc
fsubrs
loopne
cmp
sti
scas
hlt
out
js
sub
cmc
cli
adc
pop
sti
lea
call
dec
inc
sub
or
inc
ja
pop
fwait
das
inc
gs
scas
outsb
clc
rorl
cmpl
imul
xchg
shr
add
addr16
cwtl
cld
inc
add
adc
ret
dec
pop
call
sti
jns
cld
pop
pop
add
add
jmp
test
add
mov
mov
cmp
repnz
xor
cli
ret
or
addl
or
cli
and
cli
sub
ret
xor
cmp
inc
inc
xlat
dec
inc
push
fsts
sbbl
insl
bnd
or
jge
fldt
fsts
out
xchg
fldt
fsts
mov
fstpt
leave
inc
sbb
rcll
cli
ret
fcmovbe
loop
repnz
rol
sti
inc
jmp
clc
and
inc
pop
dec
call
clc
inc
mov
inc
cwtl
xor
call
add
pop
cwtl
ja
inc
mov
popl
insl
inc
add
jbe
mov
jle
popl
nop
out
pop
sbbl
dec
mov
inc
cltd
fdiv
add
mov
call
add
ja
stc
mull
xchg
sbb
test
sti
inc
dec
stc
xchg
lcall
testb
jecxz
sbb
sub
test
lahf
cwtl
mov
jmp
insl
fstpt
flds
pop
xlat
jmp
inc
in
out
cmc
mov
push
cli
jmp
xlat
and
fldcw
repnz
adc
cmp
push
inc
adc
andl
loop
fldt
sbb
jecxz
jle
add
dec
lea
out
cli
in
xchg
notl
pop
cmpsl
jmp
inc
mov
roll
lret
adc
or
push
in
imul
sti
jecxz
enter
div
inc
das
cmp
sbb
lea
pusha
aad
push
mov
xchg
inc
jge
or
dec
out
inc
jb
and
test
cltd
jo
add
lods
mov
push
jmp
lock
inc
call
cmp
push
movsl
loop
jecxz
dec
movsb
call
jo
aam
dec
fldl
add
sti
clc
push
ret
add
jg
mov
cld
push
and
sti
or
inc
xlat
add
rolb
pop
jecxz
pusha
rolb
jo
add
mov
mov
pop
xchg
add
add
enter
inc
paddusb
inc
jecxz
lock
arpl
dec
pop
jo
addr16
std
jecxz
cwtl
adc
sarb
jecxz
fidivrl
repz
push
ret
scas
pop
stc
jmp
pop
mov
adc
je
add
jmp
ficoml
mov
mov
cmpb
int3
add
fdiv
jecxz
data16
scas
in
mov
mov
sbb
jne
push
mov
mov
xlat
add
rolb
push
outsb
pop
push
fstl
pop
jecxz
sarb
aad
call
adc
rol
cmp
pusha
jecxz
call
sti
pop
nop
ja
and
or
sar
mov
jmp
sub
aad
out
pop
dec
mov
cmp
mov
pop
add
enter
mov
ret
lret
aam
mov
mul
xchg
stc
sub
shl
flds
out
cld
std
ret
enter
or
jmp
xorb
loop
push
add
inc
mov
call
vcvttss2si
daa
inc
xor
cmpb
repz
dec
xlat
push
inc
mov
mov
rolb
je
xchg
fcom
add
pop
jecxz
pushf
xchg
pop
movsb
insb
xor
sti
addr16
loop
pop
cs
jecxz
nop
movsb
call
inc
sub
add
sbb
jp
and
xchg
xor
sub
inc
mov
pop
inc
add
fs
dec
cld
pop
js
add
mov
pop
lcall
add
test
stos
lods
les
mov
pop
loopne
add
ret
scas
lock
cs
or
inc
or
inc
jmp
sbb
or
sub
mov
adc
dec
pop
jae
lea
idivl
inc
dec
xchg
scas
push
fwait
mov
pop
pop
roll
insb
pop
pop
loop
mov
jl
test
lea
or
pushf
out
or
jmp
inc
adc
mov
clc
movsb
jnp
call
and
push
aad
loopne
aam
test
sbb
jecxz
and
or
inc
or
inc
push
cmp
repz
loop
add
add
inc
pop
fdiv
stos
test
sti
scas
jo
js
jnp
addb
mov
mov
push
ficompl
mov
int3
pop
aam
fsubrl
in
in
repnz
test
loopne
stos
xchg
or
mov
outsl
sti
cmp
cwtl
cld
pop
and
sub
stos
test
pop
inc
cmp
inc
inc
ret
scas
dec
mov
pop
out
imul
test
or
cmpsb
out
je
fiaddl
jae
arpl
pop
fisttpl
lock
and
add
ret
mov
pop
rorb
fwait
loop
repz
sub
fstpt
xchg
inc
inc
mov
push
dec
mov
pop
stos
subb
sti
jl
mov
inc
push
popa
pop
call
ret
xadd
out
push
mov
add
add
loopne
aas
cmp
mov
loopne
pop
push
mov
bound
pushf
repnz
xor
pop
mov
add
fpatan
sub
sti
scas
sarb
in
imul
mov
call
fcmovbe
or
sbb
and
add
inc
add
loop
fistpl
ret
add
mov
arpl
fs
flds
out
jbe
add
jmp
loop
xchg
pop
nop
ret
add
pop
mov
or
or
cmp
mov
pop
in
in
cs
repz
pop
aad
in
sub
inc
or
inc
cli
sti
cmp
jmp
sub
push
jecxz
push
adc
adc
lea
cwtl
cmp
shlb
inc
jae
gs
jecxz
fsubrl
push
jecxz
lock
mov
add
xchg
and
inc
sub
sub
cld
pop
inc
add
call
add
cltd
jmp
xor
mov
lock
out
nop
das
idivb
fidivrl
and
rolb
pop
mov
jmp
notl
mov
dec
dec
out
mov
into
repnz
out
adcb
cmc
add
mov
rcl
mov
mov
mov
enter
ret
cmpsl
and
mov
pop
sahf
ret
mov
lea
gs
dec
movnti
dec
inc
stc
testb
loopne
pop
out
int
mov
mov
mov
xor
mov
out
fmull
adc
cmpsb
pop
fnop
daa
inc
dec
sub
out
pop
fxch
incl
mov
js
int3
cmc
cmpsl
or
out
mov
cld
mov
mov
aam
xchg
cld
jb
xor
jb
ret
sub
cmp
jmp
sbb
push
sti
pop
lcall
push
clc
gs
fcomi
fwait
ljmp
scas
shl
ljmp
cmpsl
clc
push
call
ja
cwtl
xchg
call
gs
push
loopne
cmpsb
ljmp
leave
xchg
xchg
hlt
cmp
aaa
loopne
daa
inc
orl
imul
mov
jl
jbe
test
test
mov
add
jmp
popf
imul
loope
pop
dec
mov
fdivrs
push
cli
or
vcvtps2dq
mov
xchg
or
jmp
icebp
and
xchg
fprem
loopne
add
ret
pop
sbb
dec
and
mov
push
cmpsb
rorl
in
add
fists
mov
out
enter
cmc
call
lcall
pop
pusha
inc
loop
mov
ficoml
jns
ffreep
shr
cltd
sahf
fiadds
ret
mov
lods
aam
mov
cmp
dec
sub
jmp
sbb
mov
mov
mov
sbb
pop
xor
fsubr
test
jmp
sbb
jp
dec
xchg
rcrl
fiadds
pushf
test
int3
mov
call
loopne
ljmp
mov
fwait
xor
inc
dec
out
inc
aam
xor
dec
aaa
push
inc
mov
or
sub
pop
iret
stc
jecxz
fisubrl
add
rol
dec
dec
pop
lock
mov
push
ffreep
fbstp
cmp
or
sub
dec
loope
mov
cltd
and
adc
rolb
icebp
inc
shr
mov
icebp
mov
fisttps
out
xor
fsubrp
andb
fwait
sub
dec
movsb
jmp
iret
call
outsl
test
jo
pop
fsubs
call
ja
cmp
mov
ljmp
out
sbb
push
dec
mov
cs
popf
fwait
pop
sbb
addr16
test
add
fsubrp
inc
fisttps
shr
fisttpll
ret
push
cmpsl
push
push
fsubs
inc
inc
in
ficoms
loop
js
jle
rolb
jae
jmp
cmp
xor
ljmp
dec
mov
inc
daa
idivl
mov
mov
xor
add
xchg
ficoml
in
or
out
les
enter
pusha
push
mov
mov
inc
jmp
mov
fcomip
outsl
shrb
test
push
xlat
das
call
jno
sbb
pop
flds
call
iret
and
sarl
shll
rorl
mov
hlt
mov
in
push
xchg
xchg
pop
fmul
test
in
jecxz
mov
xlat
nop
stc
rcr
and
aaa
mov
int3
add
scas
adcb
test
outsl
shlb
loopne
and
ljmp
das
mov
sbb
mov
flds
jmp
aad
out
inc
test
and
push
mov
sbb
jl
add
addr16
fstpt
xchg
ljmp
imul
push
sarb
fstps
jecxz
ficompl
push
jecxz
popa
pusha
mov
pop
push
push
jmp
push
ret
out
mov
sub
sub
mov
into
fsts
in
push
scas
and
repnz
fnstsw
dec
jg
loopne
out
imul
xchg
cltd
test
rcr
shlb
pop
inc
lret
jmp
mull
sub
mov
fisttps
mov
xorl
les
fiaddl
inc
jns
jecxz
decl
xchg
inc
xlat
lds
pushl
jbe
cmp
mov
push
fxch
roll
arpl
lahf
pop
ret
int3
cmp
xchg
stos
or
sub
in
ljmp
mov
fldt
or
push
subl
dec
add
sahf
mov
leave
addr16
mov
adc
xchg
xchg
mov
aaa
sbb
jbe
add
test
xor
ror
mov
push
lahf
ret
dec
push
jno
scas
inc
decl
cmp
leave
inc
sub
jg
pushf
push
in
jnp
adc
shrl
std
sbbl
push
insl
mov
push
ret
aam
incb
pop
push
lret
lods
add
xor
ljmp
mov
test
cmp
mov
cmp
mov
mov
in
xchg
fadds
test
mov
lahf
shrl
mov
movb
inc
dec
inc
dec
mov
inc
fwait
push
cmp
jle
loopne
inc
pop
and
jns
jmp
jne
imul
cmpsl
mov
or
inc
jg
inc
xchg
pushl
aad
out
mov
dec
and
sbb
subl
loope
pop
mov
dec
xchg
sbb
pop
jge
add
xchg
arpl
das
dec
ja
ret
ficomps
rol
aas
inc
xor
push
or
xchg
cwtl
add
jg
mov
out
loopne
pushf
out
jo
and
ret
and
mov
arpl
pusha
push
xchg
roll
sbb
sbb
out
mov
xlat
sahf
cmpb
mov
jne
cmpsl
xchg
std
inc
setl
mov
sub
fcoms
call
cld
sbb
test
sar
adc
int3
scas
jnp
xchg
lea
jmp
cmp
cmp
fbstp
mov
nop
dec
out
mov
sti
push
scas
fisttpl
jecxz
idivl
fildl
pop
dec
cltd
mov
cmp
bnd
in
loopne
in
fnop
rcr
mov
in
pop
pop
and
arpl
dec
pushf
mov
dec
xchg
icebp
out
dec
push
ja
push
mov
sbbl
fmuls
push
xchg
push
push
xor
mov
fisubs
jp
sub
repz
shr
scas
mov
fsubp
insl
inc
inc
loopne
fcmovbe
sub
gs
stc
mov
cmp
pop
pop
iret
xlat
movsl
out
daa
add
lret
xchg
lret
mov
ret
dec
jmp
jno
adc
mov
stos
jge
sub
jl
and
xchg
fmull
fnstenv
data16
ja
fwait
dec
popf
jecxz
jns
dec
jmp
out
pop
repz
mov
stos
ljmp
test
mov
or
mov
or
xlat
xchg
inc
fwait
call
pop
or
pop
jnp
jns
push
fidivrl
ljmp
out
divl
dec
pop
and
sbb
scas
movsl
in
imul
pop
out
inc
pop
loopne
faddp
loop
jns
scas
add
test
in
ss
add
loopne
ret
inc
mov
cmp
xor
mov
mov
int3
jecxz
jbe
outsl
mov
ljmp
in
jmp
xchg
or
or
dec
loopne
inc
cmp
push
jns
mov
incl
add
pushf
push
adcb
and
in
cmp
jg
ret
fbld
andb
push
loope
sbb
push
sub
pop
cmp
jno
fucomp
loopne
testl
sub
aad
add
push
pusha
push
outsl
sbb
ljmp
iret
icebp
jle
add
fisttps
aam
loopne
aad
xlat
sub
dec
adc
inc
mov
mov
loopne
mov
addr16
jmp
repnz
fwait
push
popa
loop
push
push
das
data16
cmpsl
sub
decl
repz
fucomip
or
inc
popa
pop
xchg
pusha
jecxz
lock
mov
scas
int3
inc
dec
push
fcomp
fisubrs
mov
push
jb
clc
aam
fbld
inc
aas
mov
adc
insl
fmul
ficoms
mov
orb
push
dec
xchg
out
ss
addr16
sbb
mov
mov
inc
ret
fstl
pop
mov
and
fs
mov
in
repz
test
je
mov
lods
cmp
insl
jmp
jmp
outsb
mov
imul
fisttps
mov
pop
cmp
outsl
ficompl
shl
inc
fsubr
inc
adc
fbstp
jecxz
nop
ljmp
add
lahf
das
loopne
icebp
fdivl
decb
jo
push
jmp
xchg
loop
dec
mov
mov
jecxz
fisttpll
mov
xor
fldenv
out
mov
dec
jmp
shlb
push
dec
in
je
push
pop
cwtl
ret
aam
push
and
or
ret
sbb
insl
xchg
sub
or
ret
mov
cmp
loopne
std
je
inc
inc
dec
jno
in
lea
jmp
jbe
xchg
push
pinsrw
fsubrs
jb
std
cltd
ret
imul
mov
push
fadd
loopne
dec
nop
mov
lcall
mov
fisttpl
insb
push
mov
ljmp
push
inc
push
adc
fiadds
fldenv
pop
mov
inc
rorb
call
daa
cmpsl
outsb
inc
fmuls
jmp
jae
xchg
and
test
loop
popl
mov
pop
mov
outsb
icebp
mov
filds
movaps
test
rolb
cmp
push
dec
lahf
subl
orl
xor
sbb
imul
test
mov
mov
cmp
lods
ficoml
jns
popf
xchg
shr
dec
ljmp
sbbl
out
adcb
pop
jno
and
dec
fnstcw
hlt
addb
mov
ljmp
or
mov
into
neg
jbe
push
in
jo
xlat
pushf
fistpll
rcl
call
inc
ffreep
jbe
mov
dec
stos
jl
pop
lock
jp
adc
fnstenv
push
subl
jmp
inc
ret
out
loop
clc
inc
push
jnp
fimull
push
fidivl
ret
push
out
push
jb
sub
mov
dec
dec
fcoms
les
dec
sbb
ret
jmp
cmpl
fmuls
fisubrl
fcmovnb
rolb
inc
dec
fldcw
out
or
fiadds
jmp
inc
xor
and
insb
out
mov
add
mov
or
fisubl
mov
fs
cli
ret
add
orl
mov
push
add
add
xor
add
add
add
add
add
add
push
add
add
add
add
add
inc
dec
add
add
add
add
add
dec
pushw
add
pop
aaa
add
add
add
add
add
pop
insl
dec
jno
add
bound
add
add
js
push
add
popa
add
push
inc
add
jne
add
push
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
outsl
add
add
data16
add
push
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
js
add
add
add
add
add
xor
add
inc
add
dec
add
add
insb
outsb
jp
aaa
add
jae
add
jp
add
add
inc
push
add
jp
add
add
add
add
xor
add
add
jp
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
jae
add
add
add
add
je
add
xor
add
add
add
add
add
jp
add
add
add
jb
dec
add
add
add
add
add
jne
add
add
add
add
add
cmp
add
add
imul
add
dec
add
add
add
add
add
arpl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fidivrl
test
ret
fimuls
mov
enter
int3
mov
mov
jl
jb
push
pop
push
cmp
sub
adc
add
cli
inc
lock
in
fucompp
into
pop
mov
call
mov
push
or
adc
sbb
sub
ss
inc
outsb
flds
lret
int
enter
popl
inc
push
fsts
in
sbb
pop
fs
mov
inc
into
lret
pop
sub
inc
xor
scas
enter
idiv
in
ret
inc
imul
pusha
addr16
jmp
ret
outsb
cmp
or
add
dec
push
push
sbb
mov
push
jae
add
xlat
je
inc
add
xchg
inc
pop
jg
popf
roll
fs
add
pop
jge
and
mov
fcmovne
arpl
popf
adc
mov
lret
and
int
movsl
ret
les
xor
in
mov
out
cmp
jmp
fiadds
sub
enter
xor
lret
inc
add
sub
pop
pop
xchg
jp
in
cmp
mov
std
mov
add
inc
cmpsl
mov
sbbb
and
mov
dec
and
popf
and
scas
pushf
addr16
adc
pop
lret
in
pop
add
fwait
test
add
mov
mov
pop
popf
enter
sbb
and
fwait
add
sahf
sbb
into
mov
das
in
cmp
xlat
aas
lcall
adc
ljmp
nop
xchg
mov
inc
pop
fistpl
cltd
xor
push
mov
add
call
ja
lret
jge
jo
orl
repz
clc
lret
and
jl
out
hlt
xor
push
jle
fidivrs
dec
mov
add
pop
insb
push
or
adc
es
ja
and
and
mov
xor
push
xchg
lret
sub
xchg
rclb
fdivr
orl
lret
cmp
gs
movsb
or
adc
hlt
les
scas
xchg
push
ret
push
push
loop
enter
sbb
rol
cwtl
add
bound
xchg
mov
adc
inc
push
dec
lods
fs
out
dec
hlt
dec
mov
out
pushf
hlt
je
fildl
add
sahf
aaa
push
out
mov
sbb
push
sub
dec
push
cli
mov
cmpsb
movl
rcrb
cmp
sbbl
xchg
adc
int
push
shlb
in
sbb
sub
rcrb
arpl
inc
inc
inc
sub
push
aad
pop
mov
jb
push
mov
cmpl
in
sahf
adc
add
outsb
imul
sarb
movl
sbb
dec
leave
add
push
push
outsb
or
ss
push
enter
dec
loop
fcoms
mov
jne
loope
push
ljmp
jae
add
adc
push
mov
jecxz
pushw
addl
dec
add
pusha
jne
lds
popf
fiadds
pop
rolb
shl
pusha
outsl
pop
add
lcall
ret
jne
lcall
jae
movl
imul
push
add
lret
outsl
imul
sub
dec
cmc
ror
insl
les
int3
jne
lahf
inc
inc
je
push
pop
fisubrs
pop
fs
iret
into
js
sub
les
ret
insl
movsl
and
inc
pshufd
arpl
imul
fld
jg
decl
aam
jp
ja
shlb
vunpckhps
gs
repz
test
setbe
cmp
jmp
iret
aam
jo
pop
int
dec
mov
rorl
push
ficoml
sarl
sbb
vpcmpgtb
adc
test
inc
jnp
sub
cwtl
loope
data16
adc
nop
addl
test
cmp
enter
cmp
adc
mov
fwait
cmp
daa
or
aaa
fst
mov
loopne
popf
add
and
es
adc
aad
jno
dec
bound
xor
inc
dec
pop
dec
push
xchg
sub
inc
ret
lret
pop
jns
movb
pop
push
jnp
lock
add
fwait
into
outsb
mov
mov
testb
sbb
iret
iret
sbb
xchg
xor
lcall
or
sub
roll
dec
mov
sarl
cltd
push
cwtl
inc
dec
ret
jns
shr
dec
and
add
mov
add
ss
mov
in
adc
push
lods
add
sub
repnz
icebp
mov
cmp
aam
lahf
aam
add
in
dec
add
cmp
mov
adc
in
stos
push
cwtl
jecxz
bound
lret
ja
out
dec
xchg
clc
lahf
add
push
mov
lret
data16
mov
testl
aas
add
lods
fsincos
jno
dec
pop
jecxz
add
add
adc
pop
jne
and
test
rcrb
mov
or
jno
leave
mov
xchg
mov
iret
push
mov
nop
dec
test
push
sub
jge
add
psrlq
lods
inc
add
cmc
scas
imul
sti
add
mov
sbb
dec
aad
adc
inc
push
sub
and
bound
sahf
mov
movsb
into
jnp
jo
arpl
adc
stos
dec
jns
mov
aad
sbb
in
sti
add
int3
imul
sub
jl
add
or
xor
int
into
inc
je
mov
adc
ljmp
pop
push
xor
push
loop
mov
out
in
lods
add
push
add
icebp
cmpsb
ljmp
mov
outsl
fisttps
in
add
sbb
imul
jmp
int
xchg
test
cli
addl
mov
mov
jge
or
adc
repz
mov
cwtl
xchg
mov
js
pop
in
push
sub
mov
das
xchg
lds
leave
mov
fsubrp
or
mov
fsubl
es
dec
add
cli
and
cmp
jecxz
jl
ffreep
repz
mov
mov
test
inc
int
mov
push
mov
mov
cltd
mov
xchg
fidivrs
fisttpl
dec
stos
shrl
hlt
or
dec
fildll
popa
mov
repz
icebp
cltd
fisttps
jae
mov
dec
lds
mov
lods
add
addr16
jecxz
sub
xchg
xchg
ret
sbb
pop
leave
pop
pop
cmp
adc
lea
push
ja
xchg
je
add
add
or
xchg
dec
inc
ret
dec
xor
std
fcompl
ud2
cltd
ds
inc
movsl
sbb
cmp
js
fimull
sub
sbb
xor
and
fnstcw
int
ret
mov
dec
pop
enter
dec
outsl
repnz
xchg
ds
mov
xor
repz
outsl
iret
clc
jmp
add
pop
mov
lea
jp
int
aad
outsl
divl
aas
xor
xchg
je
gs
pop
mov
ds
mov
push
jo
repnz
lret
pop
and
outsl
into
mov
mov
fstpt
bound
iret
sub
cmp
mov
dec
test
lods
add
dec
push
fistps
push
add
sbb
fdiv
sub
ror
pop
push
or
jecxz
cmp
or
loop
scas
pop
dec
or
les
xor
roll
in
mov
push
js
ret
xchg
cmp
aas
or
xchg
repz
idiv
sub
leave
xor
push
cld
scas
jo
xchg
adc
cltd
inc
pop
mov
les
lcall
les
mov
gs
aaa
sbb
cmp
lea
push
lret
mov
int3
pop
scas
push
movsl
inc
pop
mov
or
jg
fdivrl
jmp
fbstp
inc
int3
pop
shl
test
jnp
mov
push
add
fnsave
aam
xor
or
les
das
rcr
outsl
nop
in
jg
or
mov
ror
aam
xlat
addr16
andl
std
pop
jmp
mov
ret
cmpsl
sbb
out
add
sub
stos
mov
adc
inc
inc
push
cmp
stos
pop
mov
add
int
xchg
sbbb
push
aad
ret
push
or
sub
mov
adc
aam
sahf
pop
add
test
es
rolb
or
pop
shll
dec
ja
adc
out
jnp
adc
test
and
xor
push
stos
add
lods
and
imul
or
fldl
ss
rorl
xchg
lahf
pop
mov
daa
loop
push
dec
decl
push
fwait
bound
add
js
lret
xor
pusha
xchg
out
dec
push
dec
mov
iret
cwtl
rolb
mov
ret
je
jmp
cmpsl
xlat
rorb
out
add
std
mov
shlb
out
clc
lahf
add
repz
js
sbb
and
sub
das
pushf
rol
inc
xchg
xlat
mov
inc
pop
inc
add
add
adc
fs
fiadds
sahf
lock
shll
cltd
dec
sti
imul
dec
sub
sbb
mov
lock
aad
or
adc
pusha
add
daa
adc
sub
lea
xchg
inc
std
lret
or
cmp
push
cs
in
ret
or
xor
loopne
push
loop
leave
xorl
adc
fisttpl
sbb
mov
mov
into
das
fildll
scas
ja
mov
out
xchg
xor
rclb
ficoms
jns
or
out
scas
adc
xlat
xchg
add
aam
push
cs
xor
lcall
insb
fimuls
mov
push
or
in
orb
jmp
jnp
outsb
add
orl
xor
sti
xchg
add
jbe
into
aad
lods
mov
pusha
in
push
jmp
stos
xchg
repnz
dec
jae
iret
lcall
dec
fstpl
stc
rcrb
int
cmp
mov
jbe
mov
scas
pop
pop
pop
mov
or
xor
fldl
into
sti
sti
jge
cmp
loop
es
popf
enter
push
insb
lret
sti
repz
lret
hlt
es
cmpsb
das
pop
pop
lds
repz
mov
pop
fwait
dec
jae
daa
stos
addr16
mov
sub
xchg
adc
mov
ss
ret
nop
jnp
jno
aam
ret
add
les
mov
aad
ja
out
adc
xchg
sti
mov
xor
lahf
add
jg
xor
rcpps
push
mov
sub
lods
pop
dec
dec
fisttpll
out
out
pop
sub
sbb
mov
jnp
fists
pushf
xchg
sub
pop
mov
pop
test
dec
and
insb
cltd
rorl
sahf
out
xchg
dec
fidivrs
jne
pop
enter
call
pop
add
cmpsl
xchg
mov
lcall
push
sub
sbb
mov
pop
inc
stos
and
mov
hlt
jns
mov
lret
out
xor
mov
repz
add
xor
cmp
dec
pop
out
cmpsl
sbb
out
mov
fs
divb
add
jp
pop
sbb
dec
pop
mov
arpl
sub
cltd
pop
icebp
sbb
ret
inc
lahf
insl
inc
outsl
lods
lret
inc
out
lret
lods
pop
add
add
insl
add
add
add
dec
add
add
outsl
xor
xor
add
add
add
dec
add
add
add
add
add
add
pop
add
add
outsb
add
dec
add
add
add
add
push
add
add
add
add
push
add
inc
add
add
add
add
add
inc
add
add
add
jbe
add
add
inc
dec
add
jo
add
aaa
add
add
add
add
xor
add
add
add
add
pop
push
add
add
add
add
add
add
add
add
add
add
pop
jbe
outsb
add
insb
add
dec
add
add
add
add
push
add
inc
add
add
add
add
add
add
jo
add
add
add
inc
xor
jae
add
js
data16
dec
push
add
pop
add
push
add
add
add
add
dec
pop
add
add
ja
add
add
jbe
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
add
add
add
inc
add
add
add
popa
add
add
add
add
data16
add
dec
add
add
outsl
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
inc
add
bound
imul
imul
add
add
add
outsb
add
add
bound
add
jno
pop
add
add
xor
add
add
xor
pop
add
add
data16
add
add
add
add
add
add
add
scas
sbb
cmp
xchg
jnp
adc
add
loope
and
addr16
lea
sbb
mov
pop
stc
clc
sub
inc
rorl
mov
das
sub
call
cld
ret
push
sub
pop
xor
shrl
std
fstps
xor
jae
stos
mov
stc
sub
out
jmp
mov
jmp
cs
je
rorl
ljmp
iret
xlat
dec
faddp
sub
outsb
jle
aaa
sub
mull
icebp
add
jle
enter
mov
sub
inc
aam
rol
call
das
aam
push
mov
mov
add
sub
not
sub
lret
cld
fimull
lcall
or
test
inc
scas
cmp
or
mov
sub
xlat
sub
sahf
sub
daa
xor
pop
or
out
and
or
pop
xorl
leave
popa
into
jae
mov
mov
out
aam
jb
cwtl
loop
push
leave
aad
xor
lea
cmc
jmp
bound
xchg
test
push
dec
mov
out
pushf
flds
outsl
popf
test
orb
fsubr
and
mov
xor
or
icebp
addb
loopne
std
cmp
std
inc
mov
jl
sahf
ja
out
lret
xchg
test
jne
rorl
daa
push
fldcw
iret
iret
jne
push
pop
and
pop
add
mov
or
cltd
aam
pop
jne
das
xor
dec
jmp
or
pushf
fisttps
ret
mov
fnstsw
dec
mov
addr16
sbb
push
repz
je
mov
fildl
daa
inc
push
sti
ret
jb
fcmovnb
addr16
loop
adc
mov
sbb
roll
std
push
and
hlt
fisttpl
xor
push
add
add
ljmp
xchg
inc
xchg
add
int
sub
xchg
and
xchg
push
jb
daa
xor
daa
adc
xor
sub
int3
outsb
popf
ljmp
ret
add
push
mov
and
lret
push
push
dec
call
push
insb
aas
out
ss
mov
xorl
and
nop
mov
iret
mov
jnp
nop
add
rclb
dec
aad
cmc
imul
dec
jecxz
aad
out
add
push
mov
and
in
cltd
inc
mov
inc
loopne
xor
gs
nop
out
loopne
mov
popf
inc
mov
and
aas
mov
adc
push
aad
into
imulb
roll
fists
pop
repz
gs
sub
clc
dec
inc
inc
in
lds
pop
jecxz
and
mov
movsl
xchg
mov
scas
ret
and
inc
bound
mov
dec
mov
lcall
jae
inc
add
call
inc
cli
xlat
mov
xchg
and
push
jg
jne
and
or
pop
dec
ret
lea
xchg
and
jl
call
test
xchg
fsts
or
call
repz
imul
inc
fdivrs
ja
inc
inc
add
add
cld
jae
into
call
das
pop
inc
mov
movsl
or
push
mov
call
inc
or
inc
mov
push
call
or
mov
movsl
fstpt
jp
fidivrl
ret
cmp
addr16
xchg
jl
test
adc
jne
jmp
adc
cmp
or
aam
mov
xor
xchg
add
call
int3
rolb
xor
pop
sbb
and
xchg
out
inc
mov
sbb
shrl
rcll
lea
imul
push
fisubrl
xor
subb
fidivrl
pop
sub
inc
inc
loopne
jge,pn
mov
add
notrack
ja
les
mov
je
ret
rcrb
leave
leave
ret
and
or
inc
or
andl
or
daa
fstcw
jle
nop
subb
call
daa
xor
push
lods
sbb
mov
in
push
mov
inc
aaa
mov
popa
lock
cltd
jbe
or
xor
test
mov
jmp
push
iret
lea
fwait
roll
in
call
inc
xor
divb
jns
inc
add
adc
inc
jmp
sub
adc
xor
or
ret
out
in
pop
fwait
xor
cmp
mov
movsb
dec
rcll
and
or
dec
dec
add
je
push
int
dec
fld
jmp
lcall
jmp
dec
fldenv
cmp
jnp
or
aas
pop
imul
add
jnp
fidivrl
cmp
dec
push
sbb
leave
inc
push
add
jne
insl
in
rdmsr
ret
dec
es
stos
pop
cmp
fnstenv
addl
cmc
mov
add
out
or
push
add
jo
dec
test
lea
jle
mov
xor
and
fwait
notl
mov
lcall
mov
mov
jb
or
sbb
ds
and
clc
sbb
loopne
push
icebp
jecxz
jmp
leave
jmp
rclb
lret
imul
xchg
cmpsl
pop
std
out
dec
xchg
mov
mov
fxch
add
xchg
sub
jmp
ss
hlt
orl
cmc
mov
and
in
push
mov
push
xor
xor
sbb
dec
pop
pusha
decl
push
pop
sahf
scas
push
cmpsl
repnz
sub
ds
ja
pushl
cmp
mov
mov
jge
arpl
xor
add
shlb
fnstsw
dec
and
xchg
push
add
mov
or
jne
pop
popa
inc
loopne
xchg
xchg
push
push
inc
shll
call
add
inc
push
andnps
jb
dec
xor
push
push
sbb
pop
outsb
popf
mov
ljmp
mov
and
sub
or
cli
je
sub
mov
jae
dec
sub
ljmp
insb
push
sub
inc
cwtl
pop
jmp
xchg
push
outsl
icebp
push
lcall
rorl
fiaddl
lcall
ss
fisttpl
mov
rolb
fdivp
add
insl
lcall
push
stos
jmp
or
sbb
sub
fcmovnu
or
cli
cld
jg
jmp
cmp
je
add
nop
push
jmp
pop
test
insl
push
pop
jmp
aad
fisttpll
lods
sbb
adc
call
xor
lock
pusha
sbb
and
mov
add
sub
imul
cmp
lock
pop
jo
fbstp
or
dec
rcll
xchg
aas
in
xor
mov
sbb
fs
clc
mov
xor
lret
inc
add
pop
lcall
or
cmpsb
xchg
jns
adc
imul
loopne
adc
and
test
xchg
add
shl
insl
dec
pop
es
dec
dec
xor
test
in
or
imul
icebp
out
sbb
shlb
into
setb
test
sbb
jmp
push
and
loop
lcall
inc
inc
mov
xor
fs
cmp
into
je
cmp
jne
fcompl
jbe
push
or
add
mov
adc
push
ljmp
mov
xchg
add
mov
or
andb
cmp
push
sbbb
inc
adc
cmp
sub
je
mov
jecxz
mov
inc
jmp
idivl
mov
pop
jae
pushl
mov
cmp
stc
push
call
call
call
inc
ss
jnp
cmp
mov
int3
pop
cld
sbb
cli
add
jp
cmp
je
xor
sub
scas
or
addr16
lods
stos
dec
lods
inc
out
or
jle
daa
int
faddl
dec
sahf
inc
enter
jb
shlb
add
mov
test
add
push
pop
inc
lcall
adc
inc
xor
jo
out
xor
mov
ljmp
add
jge
cmpsl
inc
data16
dec
mov
cmp
iret
je
lea
and
mov
fcmovu
cmp
sahf
not
lea
inc
data16
pop
es
cmpsb
pop
xchg
aaa
mov
test
call
cltd
loope
leave
call
dec
ljmp
fistl
cmp
xor
ljmp
in
or
sub
mov
fs
mov
add
push
inc
mov
sbb
xor
add
inc
mov
mov
sbb
and
loopnew
lock
add
and
in
movzwl
out
lcall
imul
lock
cli
dec
testl
dec
sub
stc
and
pop
xor
xchg
jns
insb
sarb
and
mov
fisttps
dec
jo
out
xor
jne
mov
scas
and
sub
push
subl
mov
pop
in
sub
pop
mov
adc
mov
orb
adc
adc
addr16
stos
mov
scas
pop
out
int3
dec
xchg
ret
mov
imul
add
push
or
ds
repz
or
cmp
sbb
js
jp
arpl
les
fsubrp
ljmp
fmull
test
lods
push
sti
mov
mov
test
or
lret
or
sbb
pop
popfw
out
push
jne
xchg
jo
push
addr16
lahf
lock
cmp
movsb
push
adc
clc
fld
inc
add
call
mov
test
sbb
sbb
les
mov
add
cmp
adc
mov
lret
sbb
push
add
cmp
jae
jae
push
cli
or
jne
loope
inc
repnz
ja
adcb
imul
call
stc
sub
and
adc
jbe
das
sub
ljmp
mov
xlat
lea
stos
mov
sub
pushf
popf
cld
sub
loope
mov
xchg
clc
xor
dec
aas
or
inc
mov
pushf
fbld
push
test
sbb
add
jmp
cmp
insl
cmpsl
inc
popa
aam
pop
ret
sbb
pop
mov
in
icebp
or
fnstenv
jmp
outsb
xor
jne
jns
fists
out
fwait
scas
push
mov
std
mov
scas
jecxz
in
adc
jmp
mov
add
cmp
shrb
mov
jbe
outsl
clc
sub
push
adc
jl
xchg
ljmp
icebp
jno
jle
sahf
repz
add
or
pushf
leave
xor
insl
out
mov
adc
inc
mov
adc
out
mov
outsb
xchg
dec
fcomi
jg
rol
xor
xchg
les
lods
lret
test
fucomip
mov
rorb
or
leave
imul
orb
sahf
xchg
imul
pop
arpl
pusha
mov
ljmp
adc
js
push
pusha
dec
mov
mov
jecxz
pop
or
in
mov
add
dec
jb
aam
sub
test
divl
out
xorl
insl
jo
or
enter
decb
lret
pop
lahf
pushf
mov
add
add
add
add
add
insb
push
jb
add
add
add
add
pop
add
add
add
aaa
add
dec
add
add
add
add
add
add
add
add
add
arpl
add
add
dec
add
add
push
add
add
cmp
bound
add
add
add
add
jb
add
add
pop
add
add
xor
add
add
push
add
add
add
add
add
push
inc
inc
add
add
imul
inc
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
jns
add
add
add
add
add
add
add
jo
add
push
insb
aaa
add
dec
add
bound
add
add
add
add
add
outsb
add
add
add
add
add
add
add
dec
add
add
add
xor
add
add
aaa
add
jbe
add
add
add
add
add
push
add
add
imul
dec
add
js
add
add
dec
add
add
add
add
add
add
js
add
add
jne
add
add
add
jno
add
add
pop
add
add
ja
add
dec
add
add
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
jns
add
add
cmp
add
add
add
add
add
add
xor
push
arpl
add
add
data16
add
add
inc
dec
jp
add
add
add
add
add
add
cmp
jne
inc
mov
ja
dec
add
jmp
mov
ss
mov
jno
xchg
mov
add
push
call
mov
sbb
in
fisttps
imul
popf
pop
push
push
jnp
imul
cmp
mov
mov
clc
cmpl
jns
mov
and
xchg
sub
push
or
scas
sub
or
scas
cli
adc
jnp
mov
sub
cmp
and
sbb
stc
sbb
ds
leave
hlt
add
and
pop
xor
out
test
mov
mov
lea
ret
out
push
or
add
xor
es
cmp
push
stos
xchg
jb
push
inc
add
xchg
ja
fdivp
je
imul
or
imul
adcb
fs
arpl
push
jle
gs
add
cmp
ja
into
call
mov
sub
call
out
nop
les
aam
mov
out
repz
lods
in
dec
xchg
fmul
fstpl
rorl
jecxz
jmp
call
scas
or
dec
fwait
xor
xchg
cmp
xchg
add
xor
and
xchg
pop
push
push
test
push
mov
jg
nop
mov
mov
mov
xor
add
jae
in
mov
int3
pop
add
ljmp
addr16
cmp
lock
cli
inc
adc
xor
iret
add
js
and
jae
dec
mov
rcrl
add
fildl
add
in
mov
jo
and
outsb
das
insb
mov
cli
lock
in
push
ljmp
ret
xlat
sub
push
iret
rolb
cld
ljmp
enter
ljmp
rol
outsl
call
adc
pusha
or
or
jmp
es
jbe
sub
mov
mov
mov
add
dec
push
popa
das
iret
iret
shl
cmp
mov
lea
je
scas
push
pop
aas
add
test
sahf
or
sub
pop
dec
ret
aad
stc
xor
popa
or
pop
xor
jb
xor
fst
fwait
cmp
inc
inc
sbb
outsb
xor
cmp
pop
and
inc
add
lcall
jg
push
or
lds
cltd
add
out
mov
out
enter
aas
cmp
mov
mov
mov
in
subl
xor
dec
jb
push
pop
es
ret
out
cld
lods
dec
fisubrl
mov
hlt
cmp
and
add
in
jmp
testb
pop
sar
sub
jmp
sbb
cmp
pop
out
mov
or
lock
sbb
stos
add
and
fdivrl
jb
sbb
cmp
push
dec
push
adc
test
jl
and
sbb
out
jns
stc
mov
ja
pop
hlt
add
mov
loop
sarl
xor
push
mov
out
mov
mov
mov
rcll
movsl
pop
mov
cmp
cmp
mov
sbb
dec
aad
add
push
add
lock
dec
sbb
add
popa
or
nop
leave
adc
fs
mov
inc
ret
pop
out
out
xchg
pop
sub
lock
sbb
jno
addb
fidivl
dec
cmp
dec
loope
mov
scas
pop
and
jnp
mov
jnp
dec
aad
mov
cmpb
jmp
cld
sbb
xchg
mov
inc
jmp
insl
mov
add
mov
mov
fsubp
push
dec
dec
fcompl
mov
pushfw
insl
outsb
push
sarb
popa
ret
jg
mov
shl
mov
jo
test
les
cwtl
ret
pop
stos
pop
cmp
frstor
je
inc
sbb
jae
sbb
adc
lea
cmc
sub
vpunpckhbw
sbb
outsl
dec
lds
ret
add
loope
mov
adc
in
ljmp
outsb
jecxz
insl
sub
hlt
mov
xor
int3
mov
push
fucomp
jecxz
cmp
pop
mov
int3
pop
push
gs
pop
push
mov
subb
mov
push
loop
ficomps
pop
roll
push
cmp
inc
nop
in
repnz
repz
xor
and
push
aaa
or
hlt
jle
jns
mov
outsb
outsb
in
xchg
cs
out
jecxz
dec
mov
dec
jns
inc
jbe
notb
dec
cld
dec
lock
in
mov
xor
adc
xchg
ja
jg
popa
push
pop
adc
insl
ficomps
add
punpckhwd
je
mov
pop
call
cmc
mov
and
cltd
jle
push
call
fs
ljmp
repz
test
cmp
sbb
mov
adc
fidivl
jle
cmp
imul
fucomi
imul
cmpl
mov
mov
cmp
pop
test
cmp
mov
aad
cmpl
inc
xor
push
ss
fucomip
sub
mov
mov
jbe
repz
and
test
mov
fstpt
iret
pop
jnp
push
mov
ret
push
mov
inc
mov
std
pop
rclb
jnp
inc
sbb
jbe
jg
mov
nop
cmpsb
or
push
call
out
inc
rolb
into
jo
mov
dec
pop
push
lods
pinsrw
xor
dec
stc
les
pop
rcr
shrb
adc
pop
lcall
repz
dec
ret
push
stc
out
and
cmpb
pop
push
inc
cmc
pop
dec
andw
in
xlat
pop
inc
push
int3
add
jne
mov
decb
jne
int
inc
lods
mov
das
sarb
in
int
pop
push
in
jle
aas
movsb
adc
test
add
mov
adc
je
insl
pop
jmp
lock
out
pop
fsubr
lods
pop
dec
sub
push
fistps
xchg
xchg
mov
adc
jge
scas
shl
xchg
or
outsb
mov
popf
nop
ds
push
push
loopne
cwtl
ds
leave
cmp
je
mov
sub
adc
or
stc
pusha
aaa
push
dec
cmp
pop
imul
and
push
xchg
ds
pushf
mov
jns
jp
je
ss
xor
clc
push
mov
test
pushf
mov
test
insl
push
sarb
xchg
outsl
ds
pushf
mov
out
sbb
mov
add
inc
inc
andb
loop
insl
shlb
shll
push
sub
lea
bound
jecxz
push
pop
aas
xor
mov
push
xor
or
ja
sub
adc
pop
call
xor
in
pop
pushf
mov
xchg
adc
in
hlt
aad
popf
push
mov
lea
lds
subb
push
loopne
lds
cmpsb
ss
call
std
push
mov
js
sub
ret
mov
mov
mov
adc
adc
mov
xchg
cli
jnp
inc
sbbl
or
push
adc
mov
decb
scas
mov
cmp
jo
and
adc
cmp
pushf
rorb
adc
push
pop
sarb
pop
leave
pushl
insb
add
pop
fld
and
mov
insl
or
loopne
xchg
cmp
pop
shlb
jge
addb
mov
xchg
xor
fwait
mov
add
mov
inc
in
or
mov
dec
imul
xchg
lods
xchg
aam
mov
sbb
test
pop
lret
clc
in
fadds
push
ljmp
sbb
in
or
pushf
mov
mov
sbb
inc
mov
sarb
mov
xchg
adc
push
rcr
cmp
or
call
int
push
mov
mov
or
dec
adc
out
cmp
push
js
outsb
add
cmp
testb
lods
fcoms
xor
sbb
cmp
jns
sbb
fimull
and
scas
push
xor
and
sbb
dec
or
pop
fs
dec
push
adc
js
icebp
sarl
adc
outsb
jb
mov
xchg
jmp
xchg
test
push
mov
lcall
roll
mov
mov
adc
mov
mov
xor
and
or
adc
and
inc
mov
movsl
test
dec
mov
outsl
push
movb
fisttpl
inc
sub
adc
or
das
mov
adc
test
or
pop
mov
dec
push
cwtl
adc
daa
jb
scas
test
gs
jmp
adc
cwtl
mov
dec
mov
mov
rcl
mov
jnp
mov
jbe
insb
test
xorb
push
orl
xor
sbb
je
lahf
and
or
inc
shl
add
fsubl
out
xor
lods
dec
dec
inc
les
push
popa
orb
sbb
xchg
fs
dec
xor
fs
jg
jns
sbb
fsubs
inc
aaa
dec
cs
ret
rol
aaa
lahf
scas
out
xor
fadds
mov
icebp
and
and
lods
mov
cmp
pop
pop
and
add
pop
aas
jg
jecxz
jl
sahf
sbb
xchg
pusha
mov
push
faddl
movl
or
push
xchg
push
and
sbb
mov
inc
xchg
fcomi
in
sbb
lods
fmull
fnstcw
repz
xor
in
xor
dec
mov
adc
xchg
popf
aam
xchg
mov
mov
push
stos
cmp
std
retw
add
push
movb
mov
dec
xlat
jns
and
sub
xor
fisubrs
push
mov
int
or
call
insb
mov
mov
in
mov
mov
movsl
pusha
sub
jno
mov
inc
jae
pop
call
sbb
mov
call
lock
test
ljmp
das
jb
mov
and
jp
or
cmovno
loop
inc
out
add
mov
lds
cmp
jnp
insb
jns
mov
sub
xchg
popl
jns,pt
or
cli
insb
loope
push
mov
xchg
push
lahf
dec
add
into
insb
mov
cwtl
sti
pop
add
fldl
dec
dec
and
pcmpgtb
loop
xor
xchg
les
mov
out
push
jmp
sbb
in
stc
cmp
rorb
or
mov
pushf
iret
xchg
add
sti
pcmpgtd
and
jg
pop
repnz
jb
pop
call
sbb
pop
sbb
pusha
pop
fsubrs
daa
and
sti
jo
cmpb
xor
fucomp
xchg
cmp
repz
test
stos
out
or
addr16
dec
sub
xor
fs
push
scas
or
je
nop
shrb
mov
js
sbb
xchg
jmp
or
mov
fldlg2
and
jecxz
cmp
ja
cmp
in
jb
mov
pop
std
in
jmp
cld
sti
fwait
xor
xchg
mov
fisttpll
push
xor
ret
je
dec
sub
std
add
pop
or
rcrb
cmpl
lahf
sahf
ret
push
orb
pop
cld
push
mov
inc
fwait
dec
lea
or
pushf
fcmovnbe
dec
inc
sbb
push
or
fiaddl
pop
scas
adc
and
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
jmp
jmp
jmp
jmp
jmp
int3
int3
