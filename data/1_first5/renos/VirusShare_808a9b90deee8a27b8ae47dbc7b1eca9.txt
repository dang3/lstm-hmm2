jmp
mov
jmp
mov
jmp
mov
xor
xor
cmp
add
add
in
push
movb
mov
pop
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
movl
movl
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
mov
mov
mov
mov
mov
push
mov
push
call
mov
cmp
jo
lea
mov
mov
mov
mov
jmp
lea
dec
lea
mov
xchg
inc
dec
je
mov
mov
mov
movl
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
movl
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
pop
ret
xor
xor
xor
xor
xor
add
xor
xor
add
add
xor
xor
aaa
add
add
add
add
add
cmp
xor
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
cmp
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
xor
xor
xor
add
push
mov
add
cmp
jo
mov
mov
lea
lea
dec
inc
dec
je
mov
mov
xchg
inc
xchg
lea
lea
lea
lea
inc
dec
dec
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
cmp
jo
lea
mov
mov
mov
mov
jmp
lea
dec
lea
mov
xchg
inc
dec
je
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
call
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
mov
push
call
mov
pop
ret
add
aaa
add
add
add
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
xor
xor
xor
add
add
xor
add
add
add
add
add
add
add
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
xor
xor
add
add
cmp
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
cmp
xor
xor
xor
add
add
xor
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
add
xor
xor
cmp
add
add
xor
xor
aaa
add
add
lea
push
mov
add
mov
mov
cmp
jno
xchg
dec
xchg
dec
cmp
jne
dec
dec
dec
inc
mov
mov
lea
mov
mov
inc
dec
dec
dec
je
mov
mov
mov
mov
cmp
je
jmp
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
xor
divl
test
jne
mov
cmp
jo
lea
mov
mov
mov
mov
jmp
lea
dec
lea
mov
xchg
inc
dec
je
mov
mov
mov
mov
mov
jmp
mov
xor
divl
inc
imull
mov
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
mov
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
mov
push
mov
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jno
cmp
jb
dec
inc
dec
inc
dec
inc
cmp
jl
lea
mov
lea
lea
xchg
xchg
mov
dec
dec
mov
mov
lea
mov
cmp
je
jmp
cmp
jp
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
lea
xchg
xchg
mov
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jo
mov
mov
lea
lea
dec
inc
dec
je
mov
mov
xchg
inc
xchg
lea
lea
lea
lea
inc
dec
dec
mov
cmp
je
jmp
cmp
jp
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
lea
xchg
xchg
mov
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
je
jmp
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
mov
sub
mov
lea
cmp
jl
mov
mov
mov
lea
lea
mov
mov
mov
xchg
lea
dec
inc
mov
xchg
inc
push
mov
mov
xor
call
mov
mov
cmp
jo
lea
mov
mov
mov
mov
jmp
lea
dec
lea
mov
xchg
inc
dec
je
mov
mov
mov
mov
mov
mov
call
cmp
jo
mov
mov
lea
lea
dec
inc
dec
je
mov
mov
xchg
inc
xchg
lea
lea
lea
lea
inc
dec
dec
push
mov
mov
xor
call
mov
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
mov
movb
movb
cmp
jno
xchg
dec
xchg
dec
cmp
jne
dec
dec
dec
inc
mov
mov
lea
mov
mov
inc
dec
dec
dec
je
mov
mov
mov
lea
mov
push
add
jmp
mov
mov
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
lea
mov
push
mov
jmp
lea
cmp
jl
mov
mov
mov
lea
lea
mov
mov
mov
xchg
lea
dec
inc
mov
xchg
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jp
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
lea
xchg
xchg
mov
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jno
cmp
jb
dec
inc
dec
inc
dec
inc
cmp
jl
lea
mov
lea
lea
xchg
xchg
mov
dec
dec
mov
mov
lea
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
sub
add
add
mov
cmp
jno
xchg
dec
xchg
dec
cmp
jne
dec
dec
dec
inc
mov
mov
lea
mov
mov
inc
dec
dec
dec
je
mov
mov
mov
lea
pushl
call
mov
pop
ret
lea
push
mov
add
mov
mov
mov
mov
cmp
jo
mov
mov
lea
lea
dec
inc
dec
je
mov
mov
xchg
inc
xchg
lea
lea
lea
lea
inc
dec
dec
mov
cmp
jo
lea
mov
mov
mov
mov
jmp
lea
dec
lea
mov
xchg
inc
dec
je
mov
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
cmp
jl
mov
mov
mov
lea
lea
mov
mov
mov
xchg
lea
dec
inc
mov
xchg
inc
mov
mov
movl
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
mov
pop
ret
nop
push
cmp
testb
push
pop
insb
jle
jle
jp
inc
jnp
adcl
test
arpl
imul
pop
pop
dec
jle
imul
inc
imul
imul
pop
imul
bound
test
pop
pop
pop
pop
jp
inc
imul
pop
cmpb
jp
sub
inc
jnp
adcl
pop
pop
adcb
pop
imul
adcl
pop
sub
inc
pop
jnp
adcl
pop
pop
pop
pop
pop
dec
mov
lahf
pop
hlt
sub
mov
pop
insb
jo
cmp
gs
push
pop
cmc
cmp
pop
pop
aas
push
pop
or
push
pop
adc
push
pop
cmp
aas
push
pop
xor
push
pop
pop
aas
push
pop
mov
cmp
pop
sahf
pop
out
add
pop
cmp
pop
sahf
pop
out
add
arpl
pop
sahf
pop
out
add
inc
cmp
pop
sahf
pop
out
add
dec
cmp
pop
sahf
pop
out
add
mov
cmp
pop
sahf
pop
out
add
mov
cmp
pop
sahf
pop
out
add
ja
pop
pop
sahf
pop
out
add
sub
sahf
pop
out
mov
push
fsubs
ficomps
mov
mov
pop
fsubs
add
pop
sahf
pop
fbld
push
mov
aas
inc
mov
pop
inc
mov
arpl
pop
sahf
pop
add
cmp
pop
fbld
pop
add
pop
fcomip
inc
dec
mov
repz
sbb
pop
pop
pop
mov
pop
mov
xor
pop
add
out
xchg
pop
pop
pop
sahf
pop
iret
mov
sbb
and
enter
mov
sbb
sahf
pop
lret
lods
pop
pop
pop
adcl
lret
mov
add
pop
fcomip
inc
sub
push
and
mov
pop
pop
mov
pop
imul
pop
lret
mov
sahf
pop
sti
mov
pop
sbb
sahf
pop
testl
mov
add
lret
mov
add
mov
sbb
sti
mov
pop
pop
inc
mov
pop
fcomip
inc
das
mov
add
mov
sti
sbb
sahf
pop
mov
sbb
pop
incl
pop
fcomip
inc
das
mov
cwtl
pop
negl
cwtl
pop
sti
sbb
pop
push
cwtl
pop
lret
or
and
and
xor
hlt
hlt
mov
aas
sbb
sahf
pop
out
mov
inc
sahf
pop
jmp
pop
jecxz
mov
mov
and
pop
jecxz
mov
dec
jg
xchg
pop
pop
adcl
push
aaa
inc
mov
dec
jg
xchg
pop
pop
adcl
mov
dec
mov
jmp
fwait
cmp
repz
hlt
adcl
xchg
add
repz
hlt
xlat
hlt
stc
mov
pop
fsubs
add
push
mov
xchg
sarb
pop
pop
pop
push
jnp
pop
pop
push
push
pop
pop
pop
push
cmpsl
pop
jmp
pop
pop
xlat
push
add
jmp
pop
pop
ds
push
lcall
pop
pop
add
ret
ljmp
push
fiadds
adc
ret
incl
pop
pop
xor
jb
pop
push
push
insb
sbb
mov
sahf
cmc
ds
mov
leave
push
mov
fsubs
ficoms
add
fdivrp
cld
hlt
hlt
hlt
imul
pop
pop
mov
sahf
fsubrl
sub
jmp
hlt
hlt
fistps
mov
cmc
hlt
hlt
sahf
pop
repz
pop
daa
pop
pop
pop
fstpl
push
daa
pop
pop
pop
fstpl
pop
sub
mov
lock
xchg
daa
pop
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
mov
hlt
hlt
hlt
pop
lahf
pop
out
xchg
jb
pop
and
mov
pop
lock
sub
mov
repz
mov
or
cmc
hlt
hlt
cmc
pop
icebp
mov
out
push
fstpl
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
fstpl
pop
sub
mov
mov
mov
out
cmc
hlt
hlt
sbb
sub
mov
mov
daa
pop
pop
sbb
cmp
pop
pop
pop
lahf
pop
icebp
sub
mov
and
pop
pop
lahf
pop
out
sub
mov
out
lahf
xchg
daa
pop
pop
cmc
pop
lock
jb
pop
push
mov
push
pop
dec
mov
hlt
sub
mov
daa
pop
pop
push
cmp
pop
pop
pop
mov
sub
mov
daa
pop
pop
sub
mov
pop
and
mov
daa
pop
pop
sbb
cmp
pop
pop
pop
mov
sub
mov
daa
pop
pop
mov
pop
lahf
pop
repnz
mov
daa
pop
pop
mov
pop
sub
mov
pop
lahf
cltd
and
pop
pop
sub
mov
daa
pop
pop
mov
and
pop
pop
sub
mov
daa
pop
pop
and
xchg
and
pop
pop
sub
mov
pop
and
mov
daa
pop
pop
sbb
cmp
pop
pop
pop
lahf
pop
repnz
mov
and
pop
pop
sub
lahf
pop
cmc
mov
fdivr
and
inc
push
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
mov
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jno
cmp
jb
dec
inc
dec
inc
dec
inc
cmp
jl
lea
mov
lea
lea
xchg
xchg
mov
dec
dec
mov
mov
lea
push
call
mov
lea
mov
subl
movb
movb
movb
mov
cmp
jo
lea
mov
mov
mov
mov
jmp
lea
dec
lea
mov
xchg
inc
dec
je
mov
mov
mov
mov
mov
call
mov
lea
cmp
jl
mov
mov
mov
lea
lea
mov
mov
mov
xchg
lea
dec
inc
mov
xchg
inc
lea
mov
subl
mov
mov
call
mov
cmpl
je
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
mov
mov
call
mov
cmpl
je
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
lea
push
push
mov
sub
push
mov
push
call
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
mov
cmp
je
mov
subb
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
xor
add
mov
xor
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
incl
mov
cmp
jne
cmp
jp
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
lea
xchg
xchg
mov
inc
mov
call
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
mov
push
mov
push
call
cmpl
je
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
cmp
jno
xchg
dec
xchg
dec
cmp
jne
dec
dec
dec
inc
mov
mov
lea
mov
mov
inc
dec
dec
dec
je
mov
mov
mov
push
mov
pushl
xchg
push
jmp
cmp
jno
cmp
jb
dec
inc
dec
inc
dec
inc
cmp
jl
lea
mov
lea
lea
xchg
xchg
mov
dec
dec
mov
mov
lea
mov
pop
ret
add
add
jb
gs
xor
cs
insb
add
add
push
mov
add
cmp
jno
xchg
dec
xchg
dec
cmp
jne
dec
dec
dec
inc
mov
mov
lea
mov
mov
inc
dec
dec
dec
je
mov
mov
mov
movb
mov
mov
mov
add
mov
xor
add
cmp
jne
pushl
push
jmp
add
sub
cmp
jne
cmp
jno
xchg
dec
xchg
dec
cmp
jne
dec
dec
dec
inc
mov
mov
lea
mov
mov
inc
dec
dec
dec
je
mov
mov
mov
cmpb
jne
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
movb
cmp
jp
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
lea
xchg
xchg
mov
inc
push
push
push
call
mov
mov
mov
cmp
jo
mov
mov
lea
lea
dec
inc
dec
je
mov
mov
xchg
inc
xchg
lea
lea
lea
lea
inc
dec
dec
jmp
mov
cmp
jo
lea
mov
mov
mov
mov
jmp
lea
dec
lea
mov
xchg
inc
dec
je
mov
mov
mov
movb
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
mov
pop
ret
add
popa
add
jo
ja
imul
arpl
jo
insb
add
add
add
in
add
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
lea
cmp
jl
mov
mov
mov
lea
lea
mov
mov
mov
xchg
lea
dec
inc
mov
xchg
inc
call
test
jne
mov
jmp
movw
cmp
jo
mov
mov
lea
lea
dec
inc
dec
je
mov
mov
xchg
inc
xchg
lea
lea
lea
lea
inc
dec
dec
call
lea
mov
pop
ret
nop
push
mov
add
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
cmp
jp
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
lea
xchg
xchg
mov
inc
movl
movl
mov
push
mov
push
call
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
movl
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
mov
mov
mov
mov
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
mov
cmp
jo
lea
mov
mov
mov
mov
jmp
lea
dec
lea
mov
xchg
inc
dec
je
mov
mov
mov
push
call
mov
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
cmp
jp
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
lea
xchg
xchg
mov
inc
movl
movl
mov
push
mov
push
call
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
movl
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
mov
mov
mov
mov
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
lea
cmp
jl
mov
mov
mov
lea
lea
mov
mov
mov
xchg
lea
dec
inc
mov
xchg
inc
mov
pop
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
jo
imul
add
in
add
lea
cmp
jl
mov
mov
mov
lea
lea
mov
mov
mov
xchg
lea
dec
inc
mov
xchg
inc
movl
movl
mov
push
mov
push
call
cmp
jo
mov
mov
lea
lea
dec
inc
dec
je
mov
mov
xchg
inc
xchg
lea
lea
lea
lea
inc
dec
dec
movl
movl
mov
push
mov
push
mov
push
call
call
call
mov
mov
mov
mov
mov
push
mov
push
call
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
movl
movl
mov
push
mov
push
call
call
call
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
mov
mov
mov
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
movl
movl
mov
push
mov
push
mov
push
call
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
mov
mov
mov
mov
push
mov
push
call
call
cmp
jo
mov
mov
lea
lea
dec
inc
dec
je
mov
mov
xchg
inc
xchg
lea
lea
lea
lea
inc
dec
dec
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
mov
pop
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
add
add
add
add
add
add
add
xor
xor
cmp
cmp
add
add
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
add
add
xor
xor
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
mov
cmp
jp
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
lea
xchg
xchg
mov
inc
mov
mov
lea
call
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
ret
ret
lea
mov
lret
add
add
rcrl
les
testl
xchg
int
imul
fidivl
mov
mov
adc
jne
pushf
add
adc
add
mov
add
fadds
add
xchg
test
lock
sbb
push
cmpsl
scas
sub
mov
lock
jnp
js
inc
add
lea
call
mov
out
add
pop
dec
ffree
lret
pusha
cmc
add
nop
pop
mov
and
push
ret
and
mov
add
lret
mov
loop
add
add
test
lock
cmp
shll
xor
add
stc
les
clc
inc
add
add
rol
xchg
jl
call
jmp
mov
adc
add
cmp
xor
push
push
lods
sbb
xchg
add
add
hlt
scas
jge
add
repz
xor
ds
clc
push
cld
dec
call
add
stos
test
fs
mov
mov
jmp
pop
add
add
add
loope
jnp
test
fadd
add
js
add
xchg
add
sbb
xchg
lods
add
pop
add
xchg
js
jp
add
out
add
lds
and
lock
push
xchg
icebp
mov
out
add
fwait
add
push
call
sub
add
leave
add
xadd
call
dec
add
stos
jno
std
add
mov
add
pop
outsb
mov
cmp
test
add
pop
mov
mov
pusha
filds
mov
in
pusha
xchg
mov
les
clc
inc
add
es
ret
dec
inc
adc
cltd
ljmp
mov
and
subb
js
add
cs
mov
jno
and
insl
dec
add
sbb
icebp
lods
pop
add
stos
repnz
in
or
add
imul
add
fs
add
push
inc
imul
xchg
mov
mov
xor
aam
sub
or
jae
mov
mov
cli
pop
or
add
add
add
mov
or
cmpl
fcomi
pop
adc
sahf
xchg
pop
or
clc
add
sahf
mov
jo
xchg
add
add
add
add
call
inc
jnp
add
mov
lea
add
add
ja
imul
add
add
mov
add
clc
jo
int3
add
in
mov
jae
push
mov
xor
add
add
add
movsb
add
mov
sbb
add
add
jo
mov
or
jge
add
pop
ss
in
cmp
inc
mov
mov
push
push
mov
jbe
inc
mov
cmp
subl
add
outsl
add
cmpsl
fldl
xor
add
add
add
dec
cs
fwait
lahf
add
sti
add
jecxz
add
mov
xchg
cld
push
loop
add
sti
add
add
sub
rolb
popf
lcall
pop
cld
int3
mov
mov
arpl
push
xor
test
adc
mov
add
cmpsb
xchg
mov
add
ret
xor
xchg
sub
iret
xchg
add
push
std
outsb
add
aaa
test
leave
cmp
push
mov
daa
add
int3
out
cmp
add
movsb
push
add
in
nop
dec
mov
mov
or
mov
add
add
xor
test
stc
inc
fiaddl
sub
jg
jno
jg
jl
bound
push
push
jae
xor
outsl
mov
lahf
or
ret
out
test
ja
testl
lret
pop
lret
and
adc
cmpsb
fimuls
loope
push
push
sub
pop
loop
sub
mov
movsl
mov
dec
hlt
pusha
scas
je
sub
mov
pop
mov
xor
jp
in
leave
pop
jl
leave
js
mov
mov
push
rcrb
sub
mov
outsb
xchg
rcrb
adc
and
loopne
adc
stos
xlat
mov
xlat
and
sbb
mov
mov
lods
mov
notl
xlat
mov
mov
pop
sbb
xor
mov
sbbb
mov
xor
cwtl
stc
test
mov
mov
loop
jnp
mov
cmp
dec
jg
out
xor
cli
pop
or
xor
xor
or
enter
jne
cmc
add
xor
movsl
xlat
pop
je
xchg
adc
out
or
sarb
repnz
jp
les
cmp
xchg
fchs
sub
sbb
inc
loop
jbe
hlt
xchg
ds
xchg
loopne
fbld
push
lods
inc
neg
xchg
aad
xor
lcall
sub
cmp
add
sbb
push
pop
xchg
mov
inc
pushf
repz
jmp
mov
xchg
aad
adc
jns
es
inc
sub
jns
in
or
jecxz
and
pushf
add
jp
fucomip
stos
mov
mov
push
dec
mov
insb
orl
lret
or
push
inc
lret
inc
inc
add
mov
mulb
jle
out
mov
std
repnz
xor
mov
fdivrl
mov
stc
lret
mov
imul
mov
push
and
sbb
insb
pop
sbb
xchg
rcr
insl
scas
sub
jge
jne
andl
dec
fdiv
dec
and
sub
push
dec
push
popa
sub
or
out
jne
inc
sbb
mov
nop
push
or
cltd
cmc
cmp
test
xor
mov
ds
inc
mov
fisttpll
xor
sbb
lahf
xchg
shr
pop
adc
test
ret
add
xchg
adc
popa
add
pop
imul
movsl
inc
or
mov
jecxz
dec
and
dec
mov
popf
test
enter
and
adc
pop
dec
or
push
ret
stos
es
xchg
adc
add
sub
dec
out
cmpl
bound
das
jns
je
in
xchg
xor
cmpsl
xor
mov
sub
push
jp
insb
jnp
fidivs
mov
jne
clc
dec
pop
mov
and
filds
cwtl
mov
jmp
das
jns
cmpl
fucom
add
xchg
testb
pop
or
xor
dec
pop
and
xchg
cwtl
insb
clc
push
jnp
add
adc
and
imull
iret
xchg
push
pop
mov
cli
mov
testb
negb
popf
jns
ljmp
adc
fisubrl
subl
mov
mov
scas
mov
and
adc
pop
sti
mov
repz
lods
leave
sub
and
nop
ret
xor
sub
loope
or
push
fstpl
bound
int3
insl
xlat
pop
int3
xchg
pop
mov
add
pushf
adc
and
stos
and
jmp
jbe
ljmp
cli
shll
push
jge
jno
pusha
sbb
and
and
mov
cmp
add
aas
jae
sub
inc
push
inc
add
test
inc
adc
movsb
cmpsb
push
div
in
inc
addr16
pop
mov
xchg
push
cmpsb
jmp
xor
inc
cmp
fidivrs
movsl
jae
and
insl
mov
arpl
xchg
sbb
xor
xchg
mov
pop
mov
dec
mov
lcall
leave
icebp
jmp
outsb
cmc
mov
adc
std
jg
notl
mov
lods
cmc
mov
leave
aad
push
and
and
out
sub
daa
inc
xor
lret
inc
rcrl
and
push
inc
sahf
gs
jecxz
subps
xorb
xchg
mov
fs
mov
sahf
ss
enter
sbb
out
lahf
mov
cmp
xor
mov
xchg
mov
jae
leave
stc
sub
leave
pop
aad
andl
adc
daa
imul
mov
inc
mov
leave
mov
stos
xlat
aam
fldt
mov
add
lods
je
sti
and
andl
sbb
dec
aaa
addr16
fnstcw
cmpsb
insl
repz
jp
mov
cmp
add
pop
mov
test
sbb
outsb
pop
xor
push
cmp
aas
ffreep
gs
movsw
dec
fs
je,pn
mov
jecxz
movsb
aad
lahf
fwait
inc
loope
iret
call
in
orb
push
jl
arpl
rcrb
mov
inc
pop
cli
std
das
mov
lods
push
dec
and
dec
out
cmp
mov
cltd
xlat
call
cmpsl
mov
dec
mov
pop
sahf
add
sti
daa
in
lret
sub
mov
mov
int3
add
pop
cmp
shrb
inc
push
aam
popf
loopne
add
es
imul
add
pusha
ljmp
stos
lods
push
pop
or
dec
mov
out
decl
cltd
sub
sub
ja
push
or
sub
mov
xchg
clc
jbe
mov
sbb
scas
sbb
test
jmp
out
es
xchg
pop
mov
push
jmp
mov
cmpsb
inc
mov
or
adc
inc
ret
mov
ror
dec
sbb
test
and
dec
sbb
jl
mov
sub
aaa
daa
lods
add
inc
jae
out
bound
je
adc
inc
jns
dec
hlt
in
aaa
cmp
icebp
lcall
arpl
and
push
fidivl
cmpsb
fsubl
in
cld
dec
cmp
jne
aaa
xor
scas
test
fbld
xor
xchg
inc
jmp
cli
or
enter
mov
nop
sbb
or
lds
inc
push
cmpsb
and
repz
jns
jle
xchg
in
rclb
testb
stos
dec
rcrb
movb
jae
aas
jo
fwait
jmp
or
pop
aad
add
xchg
mov
add
fiaddl
daa
scas
pop
or
push
mov
xchg
mov
inc
add
hlt
fstpt
arpl
nop
inc
and
xor
jecxz
call
or
xorl
jo
mov
pop
sti
lds
lds
or
push
repz
cmp
lods
arpl
fstl
jbe
int3
aas
jge
loope
sbb
mov
cmp
jno
xchg
sub
pop
dec
push
aam
xchg
xor
and
inc
pop
push
sbb
test
or
daa
sub
in
sub
in
enter
pop
and
pusha
push
popf
pop
loope
xor
sahf
ds
ds
xor
movsl
int
das
and
ror
push
jb
adcb
sbb
push
xor
mov
xor
in
xchg
imul
js
outsb
lret
repnz
outsb
mov
fdivrl
out
neg
adc
cld
adc
fdivrs
notb
mov
arpl
mov
pop
ret
sbb
push
ret
int
out
sub
dec
dec
lret
out
mov
or
xor
sahf
or
insl
adc
ljmp
mov
cmp
and
sbb
ljmp
stos
push
ret
xchg
pop
out
xchg
push
cli
insl
lcall
mov
lret
lock
lods
jno
cmc
nop
add
fsubrl
movsl
pop
mov
rclb
cs
jle
mov
push
adc
lock
adc
push
lods
add
xlat
adc
cltd
sub
ljmp
in
sbb
xchg
sti
aam
aad
inc
mov
loopne
fmull
inc
xor
pop
sub
inc
jge
repz
ds
xchg
jl
jo
xor
aad
ret
cmp
sub
sbbl
js
pushf
dec
push
pusha
jmp
push
adc
aad
testb
sti
mov
jb
sub
je
pop
push
jecxz
insb
test
cmpsl
jno
dec
sub
call
mov
ja
cmpl
pop
add
pop
push
fcomps
inc
ja
ljmp
sbb
mov
adc
rorl
pop
std
inc
movsb
mov
cmpsl
mov
sbb
ss
cld
mov
mov
in
ds
faddp
lock
cmp
orb
aam
jmp
ret
xchg
mov
mov
fimuls
xchg
inc
pop
mov
aaa
cmp
movsl
lods
shrl
mov
push
xchg
and
inc
or
dec
in
add
sahf
cltd
arpl
or
push
int
adc
clc
mov
ret
xchg
bndldx
mov
cltd
push
pop
push
int
stos
in
sub
out
mov
and
cmp
xor
mov
xor
call
xchg
xor
dec
sub
test
ja
dec
adc
push
ljmp
test
imul
add
cmp
inc
pusha
bound
int
xchg
sub
arpl
or
pop
adc
mov
mov
push
or
shll
mov
scas
dec
push
test
cmp
inc
rolb
jmp
adcl
out
test
xchg
or
vxorps
adc
adc
ss
mov
jle
mov
and
or
iret
inc
jg
ret
leave
pop
adc
testb
jae
int
push
pop
push
cltd
popf
jecxz
mov
fstps
pop
ficoml
pop
jg
lahf
aad
imul
inc
scas
sbb
push
aad
adc
push
mov
cltd
fidivs
hlt
or
arpl
movsl
inc
and
nop
or
pop
lret
addl
sub
add
out
mov
inc
push
push
pop
sub
jecxz
sbb
cli
rolb
and
push
or
adc
jbe
and
jge
and
jo
jg
mov
mov
jno
mov
jl
dec
pop
dec
dec
into
lahf
push
mov
addr16
sub
lahf
imul
adc
push
inc
pop
sbb
in
adc
enter
pop
arpl
push
dec
mov
sub
nop
aas
cmp
lock
mov
push
mulb
nop
cwtl
rorb
xor
add
lea
xor
mov
cs
push
js
and
pop
cltd
xchg
xlat
lcall
ja
sub
sub
in
mov
pop
loope
inc
xor
shlb
mov
mov
dec
mov
xchg
adc
mov
cmp
jne
loop
lds
sub
in
lret
into
rorl
push
addr16
sbb
jge
stos
adc
test
xchg
imull
push
loop
and
int
mov
adc
ss
cmp
pop
and
fdivrs
push
out
pop
mov
xor
sub
mov
mov
xchg
into
fnstsw
push
pop
sti
xor
adc
roll
adc
aad
adc
outsl
add
sub
ljmp
xlat
push
and
mov
subl
addr16
pop
divb
push
loopne
jns
dec
cmc
xor
dec
clc
int
sub
sbb
repz
add
sbb
sbb
cwtl
lea
adc
lret
push
adc
xor
aad
call
nop
or
out
aas
sbb
and
push
lods
xor
gs
js
movsl
daa
adc
scas
mov
or
mov
dec
adc
cmp
pop
hlt
sbb
inc
xchg
and
das
dec
lods
scas
mov
sbb
xor
idivb
xchg
std
out
pop
cwtl
int
or
lock
sar
push
xchg
sbb
mov
push
lret
lahf
mov
jns
dec
rclb
mov
aam
mov
and
es
rcr
add
std
dec
adc
push
xchg
addb
stos
ret
insl
inc
mov
ds
sarl
pop
push
mov
lods
into
xchg
add
push
cltd
lcall
mov
mov
push
nop
jmp
add
xchg
mov
sbb
lock
cli
pop
mov
out
in
jle
xchg
ljmp
jmp
add
or
outsb
xor
or
mov
adc
jmp
xchg
cwtl
ja
and
add
pop
inc
cwtl
jge
or
mov
insl
outsb
xlat
push
jge
xor
jns
shr
and
xor
ljmp
jo
push
mov
pop
imul
mov
xchg
insb
mov
ret
dec
add
daa
jne
icebp
movsb
mov
dec
ljmp
cli
push
jmp
nop
and
and
int
mov
mov
or
pop
call
stos
daa
mov
insb
cmp
sbb
jns
pop
in
mov
pusha
fs
insl
iret
movsb
jmp
pop
pop
dec
lcall
sbbl
sarl
pop
loop
fimull
sub
dec
jnp
imul
inc
push
sbb
adc
pop
mov
in
out
push
leave
lea
hlt
jno
out
arpl
pop
inc
daa
xor
push
inc
cmp
or
loope
add
sbb
pop
pop
outsb
cmpsb
fiadds
lds
rcrb
add
cmp
mov
ja
jg
loopne
cli
push
orl
jge
inc
jmp
daa
mov
data16
fiaddl
out
gs
mov
inc
push
xor
fcmovnu
cmp
mov
cli
push
mov
pop
adcl
nop
cmpsb
xor
in
notl
xchg
pop
mov
test
loope
fcmovbe
sub
mov
cmp
push
ds
movsl
fcmovnu
data16
test
faddl
jbe
pop
sbb
test
dec
xor
xor
pop
sbb
js
outsb
lret
rcr
aad
or
inc
cld
test
outsb
push
push
test
mov
push
rorb
push
dec
mov
insb
mov
aad
mov
jae
and
icebp
int
int
sub
lods
lret
sub
mov
cmpsl
imul
cmp
dec
mov
test
jg
nop
ss
cmpb
fs
adcb
mov
adc
or
cmp
mov
popl
mov
sar
sti
xor
andl
movsb
inc
or
fstl
jb
test
push
push
inc
xor
movsb
pop
adc
and
imul
cmpl
shll
jbe
outsl
jnp
xlat
xchg
ljmp
fiadds
hlt
in
out
inc
int3
sti
xor
xchg
decb
xchg
loop
xor
mov
push
mov
adc
arpl
les
repz
les
cmp
mov
pop
sbb
mov
dec
sbbl
or
xchg
mov
add
aas
mov
dec
adc
je
sahf
in
jecxz
enter
sbb
push
add
xchg
sti
lock
sub
pop
mov
dec
and
lods
fcomi
xchg
mov
xchg
dec
xor
adc
lods
push
pop
das
sub
mov
sarb
sbb
shrl
gs
ret
std
mov
sbbb
cld
sahf
mov
in
cmp
lret
jne
xchg
mov
sub
sbb
cwtl
push
ret
shrb
jge
sub
test
ret
mov
sub
push
add
insl
jmp
ja
push
ret
shll
popa
test
sub
mov
imul
js
ss
mov
outsb
cltd
shll
jae
jl
push
push
push
fwait
mov
clc
daa
or
xchg
adc
scas
sbb
roll
stos
pop
stos
xorb
lret
shl
out
dec
cmp
xchg
xor
sub
xor
dec
call
xor
outsb
mov
leave
bound
test
cmpsb
cmpsl
ja
jl
dec
hlt
aad
inc
das
jnp
or
mov
fwait
pushf
aaa
sub
and
aaa
add
xchg
lahf
mov
lret
jns
scas
aam
test
mov
mov
std
jbe
pop
inc
sbbb
jo
movups
mov
cld
jbe
daa
push
hlt
mov
cmp
xlat
jne
in
mov
dec
jne
jg
and
mov
push
xchg
data16
dec
lds
in
andl
stos
lcall
insb
movsb
test
pushf
mov
ljmp
iret
add
ret
mov
inc
bound
mov
popf
adc
mov
inc
xlat
cs
xchg
mov
hlt
push
imul
mov
adc
out
mov
aas
xor
dec
hlt
mov
push
inc
sub
xor
push
sub
aaa
add
jle
xor
mov
int
call
iret
loopne
mov
mov
mov
movsb
imul
jbe
daa
pusha
jge
dec
mov
out
loopne
scas
sti
arpl
fiaddl
outsl
jl
pop
cld
dec
sub
sbb
ss
loope
lahf
cmpsl
push
push
xchg
jns
test
outsb
mov
dec
cmpsb
adc
mov
enter
pop
loope
loope
push
mov
mov
cmp
loope
movsl
loop
lock
andl
cmp
orb
addr16
xor
mov
mov
pop
pop
aas
sbb
pop
xchg
outsb
pop
lcall
xor
sub
push
push
outsb
adc
and
jg
jge
mov
mov
dec
mov
std
and
push
cmp
adcl
not
fwait
pop
lret
xor
jp
lret
mov
fstpl
sub
lods
andb
xor
push
ljmp
in
adc
pop
mov
cmp
hlt
mov
out
jg
cli
push
ss
xor
dec
or
imul
fwait
xor
adc
cmc
adc
mov
arpl
mov
push
lods
mov
insl
rcl
cmp
sub
mov
pop
ss
loope
mov
gs
movsb
loopne
out
add
adc
inc
outsb
insb
test
les
je
mov
sub
test
mov
pop
push
inc
sbb
imul
in
push
mov
adc
xchg
xchg
nop
rorb
pop
push
push
jb
stos
sub
movsb
pop
je
mov
stos
cmpl
inc
pop
call
loopne
inc
mov
mov
int3
dec
vmwrite
outsl
rcrl
jns
inc
insl
arpl
inc
enter
pop
dec
sub
mov
and
int3
sbb
jns
clc
testb
push
cwtl
inc
es
mov
mov
test
lret
in
rorb
mov
js
jecxz
cmp
mov
xchg
sar
xorb
push
shrb
ret
inc
inc
xchg
es
lods
insl
rorb
cld
xchg
add
mov
lods
adc
mov
xchg
adc
bound
imul
cltd
or
and
add
push
push
rcl
push
shrl
push
sbb
xchg
rcrl
sbb
stos
mov
jmp
or
pop
mov
and
push
xor
cmp
ds
or
je
xchg
daa
testl
push
mov
xor
out
xor
or
mov
fwait
lret
les
ret
or
add
das
sub
arpl
pop
sbb
in
or
notb
das
pop
rorb
fidivrs
pop
push
mov
mov
mov
mov
jne
cmp
sbb
fistps
in
shr
xchg
pop
push
xchg
es
roll
xchg
loop
sub
call
adc
stos
or
sub
jbe
cmp
sub
jae
in
cmp
jbe
lret
test
mov
jae
pcmpgtb
cmpsl
cmp
popf
cmp
inc
mov
push
pushl
fisubrl
les
mov
adc
stos
add
adc
addr16
xchg
scas
lret
leave
jnp
and
arpl
push
inc
sub
fcomi
push
sarb
add
ret
add
mov
fimuls
rclb
jmp
adc
bound
cmpsb
movsb
negb
push
and
jbe
fxch
jge
xor
sbb
sbb
cmp
loopne
jl
cmpsl
int
pushf
mov
sbb
jo
sti
ljmp
cltd
cmpsb
test
cmp
mov
in
enter
pop
and
push
adcl
adc
sub
jl
cmp
loopne
sub
into
movsl
jmp
xchg
cli
lcall
sbb
insl
xor
add
pop
rorw
add
jp
cmp
sti
push
lret
fsubrl
mov
sub
jl
adc
inc
clc
out
jb
cmc
mov
inc
sbb
mov
mov
jp
ljmp
testl
fstpt
fbld
mov
xchg
pop
jnp
mov
mov
cmp
shrb
dec
loop
mov
stc
repnz
lods
fs
orl
cmp
scas
scas
or
lea
jge
or
lret
fadds
aam
cmp
push
cmc
lods
lret
jo
dec
xor
mov
jp
adc
nop
andb
imul
pop
stos
data16
mov
lods
lahf
arpl
gs
xlat
ud2
add
cltd
pop
mov
clc
or
nop
inc
test
rolb
or
addr16
arpl
test
inc
xor
les
adc
xchg
mov
sbb
scas
and
adc
ljmp
cmc
cmp
jmp
out
xchg
cs
adc
xor
cli
cld
inc
jb
ds
mov
pop
je
xor
scas
pop
test
in
fs
lahf
sub
mov
push
adcl
prefetcht2
xchg
dec
inc
hlt
push
and
stc
mov
mov
inc
mov
testb
std
fdivrl
andb
scas
push
icebp
xchg
js
cld
rcrb
lret
push
hlt
rorl
or
lahf
pop
in
mov
into
mov
pusha
aam
outsl
in
iret
mov
xchg
insl
mov
add
xchg
aas
adc
ljmp
ret
xchg
nop
mov
mov
ds
lret
add
xor
xor
push
fstps
fnstsw
mov
popf
out
fiaddl
adc
mov
and
test
lock
mov
fidivs
xor
and
xor
sub
mov
iret
pusha
dec
dec
push
adc
test
lea
out
mov
xor
loop
or
xchg
fwait
cli
adc
mov
add
lret
inc
out
mov
decb
and
in
dec
lret
xchg
jl
push
mov
lcall
stc
in
or
mov
dec
mov
sbb
clc
aaa
jne
cmc
lods
mov
mov
xchg
arpl
jl
icebp
ret
aas
adcl
lret
sub
jecxz
and
scas
and
and
or
jle
dec
inc
in
push
inc
pusha
xor
inc
xchg
ret
push
pop
in
icebp
add
jae
lods
fs
push
sub
int3
in
inc
aad
int
popa
add
imul
imul
mov
icebp
mov
adc
mov
mov
in
std
leave
repnz
push
mov
xor
repz
jg
xchg
or
mov
add
pop
int3
out
jae
pop
out
adc
add
aaa
ss
lock
push
scas
aad
test
cmc
cmc
sarb
pushf
push
xor
push
jo
test
incb
mov
scas
sbb
daa
lods
ror
inc
ret
jle
sahf
jl
ret
mov
push
call
xor
in
sub
push
cmp
scas
test
add
filds
mov
in
lods
enter
push
adcl
cmp
addr16
sbb
mov
dec
sbb
movsl
lock
adc
cld
mov
adc
sbb
sti
leave
add
sub
cli
cmp
pop
lea
cmp
push
pop
xchg
push
cmc
lcall
sbb
lea
sub
sbb
adc
pop
leave
scas
jg
pop
adc
jo
movsb
mov
adc
mov
xlat
push
ror
call
sub
shl
dec
arpl
lret
clc
shrl
cli
sbb
or
sahf
aaa
lods
sub
push
ret
fldcw
mov
loop
sarb
test
jb
adc
mov
fsubrs
cs
pop
mov
insb
int3
cli
xor
cmp
sbb
or
js
sbb
xor
mov
sub
adc
js
xchg
pop
adc
jge
add
scas
repz
jns
lods
xchg
mov
push
xlat
dec
popa
cmpsl
sub
add
and
sbb
das
popl
aas
lock
repz
adc
mov
add
inc
xchg
mov
adc
jge
push
repz
push
addr16
dec
mov
nop
cmp
dec
test
xchg
iret
pop
pop
mov
nop
adc
decb
shrb
nop
jbe
inc
aas
cltd
lods
jo
clts
sub
je
jp
jecxz
push
mov
mov
or
pop
add
cli
mov
jmp
decl
xchg
fstpt
jno
subb
inc
push
int
mov
jmp
adc
testb
cwtl
mov
movsl
mov
flds
lods
cld
std
loopne
lret
ret
mov
sahf
mov
adc
pop
cmc
fldl
shlb
and
aam
popa
mov
fiaddl
imul
or
popa
leave
incb
mov
fdivrl
mov
dec
mov
or
mov
out
out
test
ljmp
push
pop
clc
fdivrs
dec
xchg
adcl
dec
das
pop
pop
stos
enter
mov
xchg
push
add
or
mov
xor
push
or
data16
mov
mov
rorb
cmp
ja
cmpsl
mov
inc
hlt
dec
xor
sub
fwait
sub
sbbl
mov
add
in
inc
out
pushf
fildll
or
jns
aad
in
ljmp
jl
cs
dec
cld
pop
mov
mov
or
mov
jle
dec
dec
lea
dec
jne
adc
mov
leave
lret
and
jmp
mov
adc
out
gs
or
jno
push
out
mov
sub
scas
mov
jnp
dec
xor
sbb
in
push
jno
rclb
push
ret
movsb
pop
and
lea
pop
jae
mov
popf
mov
lds
sub
ficoml
dec
xchg
ret
sbb
pop
loop
je
cli
scas
jno
lds
jg
adc
adc
repnz
sub
popf
fisubl
fadds
inc
xor
mov
lds
pop
or
or
add
add
pop
adc
mov
lds
enter
es
sub
or
cmp
pop
fidivl
xchg
out
push
mov
sbb
xor
daa
lods
ljmp
push
jbe
jl
mov
dec
jp
addr16
es
fidivl
inc
insb
add
or
test
iret
cli
xchg
rcr
cmpsb
fmulp
in
xchg
mov
movhps
jae,pn
aam
sub
xchg
cli
cmp
and
movsl
neg
xchg
xchg
cli
dec
pop
sbb
push
sbb
or
add
cmpsl
pop
xor
mov
mov
mov
leave
pop
adc
ja
mov
je
faddl
mov
outsb
stos
stos
push
adc
cli
lods
idivb
int3
lahf
mov
in
push
mov
cwtl
pop
and
jp
push
aam
mov
mov
pop
cld
testl
scas
cmp
mov
sbb
push
sahf
rolb
add
outsl
or
jg
int3
sub
pusha
stos
popf
movzwl
ss
inc
xor
fsubs
adc
cli
lahf
and
mov
or
inc
std
cmc
cmp
push
xor
scas
lahf
pop
insb
pop
dec
adc
aas
or
es
adc
das
or
push
hlt
data16
push
mov
adc
cmp
mov
lcall
push
sbb
gs
mov
popf
mov
dec
sarb
inc
cmpsl
mov
push
les
pop
pop
xchg
push
lahf
les
and
push
pop
outsb
push
outsb
adc
ret
and
jmp
shlb
aad
or
push
dec
das
aas
cmp
jb
add
dec
movsl
in
je
pop
xchg
jecxz
mov
mov
rorb
addb
mov
sbb
add
or
pop
and
mov
sbb
push
das
movsb
aad
mov
scas
adc
rcl
data16
test
lcall
aas
push
cmpsl
stos
nop
jns
or
shl
inc
xor
sub
sbb
mov
scas
cltd
mov
jge
lock
push
in
pop
adc
test
je
pop
sub
aam
test
ret
in
das
add
insl
xchg
dec
cli
xchg
xchg
xchg
mov
jmp
lods
push
jge
mov
inc
push
and
in
js
cltd
lods
dec
xor
imul
mov
ljmp
adc
xchg
sbb
shll
fnsave
xchg
out
fldt
push
push
call
cmpsl
mov
push
cmp
mov
cmp
mov
aad
call
test
les
dec
rcrb
or
cmpsb
cli
fwait
pop
add
push
lods
jne
add
add
out
jnp
stos
bound
shlb
in
fcomps
sbb
mov
add
or
push
cmp
mov
in
sbb
dec
jo
fdivs
xchg
push
mov
sbb
sti
fcomp
xchg
or
jmp
xchg
lods
xorl
clc
sub
fldl2t
jae
sub
push
ja
aaa
pop
insb
push
fimuls
inc
and
sub
aad
sbb
pop
pusha
imul
jg
xor
xor
test
pop
pusha
test
jae
mov
push
lock
popf
mov
pop
mov
rorl
ss
sbb
int
arpl
sbb
jg
mov
mov
pop
repnz
leave
loopne
xor
call
fcmovu
inc
and
or
inc
frstor
or
sbb
xchg
fcmovb
int3
lds
pop
inc
jns
fidivs
lds
cmc
shlb
scas
xchg
add
mov
or
insl
push
push
out
jmp
lock
in
jge
dec
lds
shrb
daa
stos
xchg
pop
cmp
ja
jl
ja
dec
jmp
add
xor
mov
das
mov
xor
push
lcall
cmpsb
push
stos
movsl
in
jp
and
divl
pop
mov
loope
jns
sub
fadd
cmp
add
movsl
push
and
dec
xor
aad
sbb
dec
mov
mov
rclb
fisttpl
popf
js
lea
pop
xchg
dec
icebp
lcall
jecxz
sub
loop
or
or
aad
outsb
jg
inc
mov
pop
xor
fwait
jae
and
dec
stos
push
xlat
or
int
movsb
xor
decl
adc
cmp
fwait
rcl
and
mov
imul
push
insl
outsl
jmp
sub
stc
pop
push
lods
fs
ss
push
cmp
loopne
mov
mov
add
cmp
cmp
or
push
inc
xor
insb
pop
mov
hlt
imul
std
add
and
push
fnstenv
push
std
nop
xlat
int3
cltd
cvtpi2ps
out
loope
push
mov
add
xchg
jge
cmp
and
loopne
leave
leave
dec
das
cli
mov
fnstenv
add
mov
repz
cmp
inc
inc
inc
cmp
ret
mov
pushf
notb
jmp
push
cs
rcl
mov
enter
sbb
mov
rorl
inc
sbb
shl
xor
mov
das
lea
ss
fmull
cmp
pop
jae
dec
mov
xchg
pop
cmpsl
dec
inc
mov
in
xorl
mov
fisttpll
cmpsb
notb
pop
in
shrl
cwtl
das
lds
stos
pushl
mov
pop
inc
push
cld
push
imul
mov
dec
mov
lock
mov
pop
xor
sbb
inc
mov
or
jg
test
jl
pop
es
jae
outsb
repnz
insl
xchg
cld
test
popa
divl
mov
and
and
jg
outsb
movntq
fstps
jbe
shll
and
xchg
out
lea
xchg
cld
inc
sbb
inc
pop
sar
jns
pop
add
cmp
ds
adc
push
ret
stos
jecxz
sahf
mov
fmull
sbb
bound
fadd
xchg
dec
push
inc
push
test
mov
leave
dec
mov
movsb
inc
and
jp
xchg
ja
or
sub
pop
lahf
inc
bound
and
in
sbb
xchg
imul
adc
mov
pop
jp
mov
repz
pop
mov
sbb
jge
mov
or
sbb
or
jo
mov
lret
mov
imul
push
insb
jp
stos
fsqrt
stos
and
sub
pusha
jnp
mov
jle
nop
xor
and
jnp
push
mov
daa
ret
push
pop
xchg
or
dec
jae
push
cmp
mov
ret
popf
fsubs
addb
xchg
fidivrl
push
xchg
jo
ret
sbb
rcrl
pop
scas
aaa
cmp
insb
adc
cwtl
pop
repnz
fdiv
xor
jle
mov
adc
int
sub
mov
gs
fidivrl
int3
mov
nop
pop
jae
jb
pop
orb
inc
idivb
and
lret
and
or
pop
add
jge
xor
lea
or
stos
enter
bound
jno
pushf
add
pop
dec
pop
cmp
in
fwait
movsl
xor
std
sub
lahf
inc
stos
jmp
mov
leave
test
gs
inc
inc
sub
cmpsb
mov
dec
enter
pop
sbb
mov
test
add
stc
lcall
adc
xor
int
jns
push
sbb
mov
add
xchg
popf
xor
sbb
addl
js
dec
enter
push
lcall
xor
or
outsb
jo
pop
adc
mov
jg
mov
vphadddq
and
roll
ficompl
int
loope
sub
scas
testl
adc
sbb
arpl
into
mov
test
inc
outsl
lret
loop
cwtl
push
stc
into
pushf
or
mov
xchg
js
movsb
or
fcomps
mov
cli
add
jp
cmp
pop
or
or
enter
mov
into
pop
stos
rcrl
movb
mov
inc
jne
lods
cmp
mov
sub
or
xchg
jae
mov
jo
mov
pop
xchg
daa
add
loopne
icebp
dec
dec
mov
inc
int
enter
outsl
les
sub
xchg
xchg
fstps
fwait
inc
xchg
adc
lea
nop
jp
sbb
add
outsb
cs
xor
nop
pop
pop
mov
jbe
xor
xchg
add
inc
fnstenv
test
inc
cmp
push
lea
inc
lds
leave
sahf
incl
cmpsb
xchg
or
pop
pop
imul
leave
das
bound
xchg
mov
push
mov
fscale
js
xor
test
xor
cld
jle
add
ucomiss
fucom
sub
lcall
pop
push
leave
mov
sub
xor
dec
xor
ret
or
xchg
arpl
outsb
insl
push
test
lock
xchg
cmp
mov
iret
sbb
lods
sub
iret
mov
mov
mov
cmovbe
imul
push
push
push
in
mov
adc
test
xchg
xchg
sbb
push
rcll
add
stos
stos
gs
out
mov
icebp
aam
sahf
rorl
lahf
jnp
std
in
or
lcall
fcmovne
adc
mov
dec
fbstp
jbe
dec
cmpsb
jns
inc
mov
push
das
fwait
mov
movsb
push
repnz
fiaddl
ss
out
cmp
and
mov
cmc
xchg
mov
inc
out
mov
jns
hlt
or
jp
fsubrs
mov
lret
and
jne
enter
stc
sahf
fistpll
push
notl
xor
fcmovne
or
sahf
out
nop
lret
cmc
or
xchg
xchg
push
stos
sahf
cwtl
stos
dec
pop
mulb
hlt
inc
mov
jnp
adc
jle
cmp
in
bound
iret
cmp
jl
pop
leave
pop
pop
inc
movsb
andb
sub
xchg
push
jbe
test
mov
int
fisubrl
push
cs
xor
inc
sahf
movsl
scas
lcall
adc
aaa
mov
xor
ljmp
dec
fs
stos
cs
cmp
orl
cs
aaa
jnp
mov
ret
dec
add
xlat
mov
fidivrs
mov
rcrb
push
iret
lret
and
into
cmp
mov
push
add
jbe
jecxz
dec
and
jb
test
stos
push
jno
in
jl
jl
dec
adc
push
iret
sub
jo
stos
out
lahf
popa
sub
test
lds
iret
push
xor
inc
sarl
cmpsb
and
cmpsl
in
dec
test
in
in
pop
pop
pop
cld
xchg
push
cmc
jmp
sbb
sub
jmp
cmp
stc
xor
push
and
cmp
test
mov
push
add
push
mov
adc
inc
sub
pop
sub
js
cmpsb
scas
pop
xchg
push
mov
jge
rcr
xorl
and
pop
mov
mov
scas
jg
aas
aas
mov
lock
mov
mov
es
push
fstpl
int
add
testl
popf
roll
mov
mov
into
jl
sahf
ret
xchg
add
insl
outsl
test
sahf
lods
stc
test
or
loopne
lahf
ss
idivb
push
adc
mov
cli
cmp
xor
test
or
mov
jmp
push
push
xor
jbe
leave
adc
cltd
mov
imul
movsb
add
cmpsb
mov
lods
and
mov
xlat
dec
loop
sub
lods
inc
mov
inc
sti
sti
inc
enter
jnp
cs
loopne
cs
dec
in
push
stc
inc
loopne
sub
in
mov
test
cld
sub
push
add
inc
cmp
ret
nop
push
pop
pop
xchg
pushf
dec
cmp
jmp
out
cs
mov
dec
nop
loop
pop
aas
adc
sub
je
in
jecxz
imul
out
ds
pop
xor
mov
sti
dec
xchg
adc
cmp
inc
xchg
je
inc
push
fs
inc
test
mov
repz
dec
rcll
xchg
notb
ljmp
test
cmp
icebp
cld
test
out
mov
insl
and
popa
adc
lock
lret
in
jmp
or
adc
xorl
cld
xor
inc
xor
inc
ds
popa
and
xchg
jecxz
xchg
mov
nop
sbb
mov
movsl
test
mov
push
inc
mov
mov
mov
fnstsw
fdivr
les
xchg
xchg
shrl
adc
push
xor
or
jns
pop
fsubl
popa
or
add
xor
inc
or
fimuls
dec
and
dec
ja
outsb
call
inc
push
pop
rorl
or
fwait
in
cmp
xchg
jne
add
push
sbb
out
sbb
iret
adc
jns
add
jne
pop
xchg
pop
add
mov
mov
pop
xor
lods
or
push
cmpsl
xchg
mov
ret
sbb
dec
xchg
dec
sbb
out
cmp
mov
pop
adc
pop
adc
xchg
call
xchg
and
fldt
sub
lret
push
ljmp
and
xchg
jnp
xor
add
xor
cld
pusha
cmp
insl
iret
pushf
int3
or
imul
mov
stc
mov
mov
es
pop
mov
push
mov
xchg
add
mov
mov
cmpsl
push
push
xchg
pop
adc
daa
mov
test
push
leave
inc
sbb
arpl
js
inc
aas
push
scas
or
mov
xchg
aaa
cmp
aaa
add
dec
int3
xchg
pop
shrl
xchg
fimull
pop
scas
xor
pop
cmp
cli
pop
movsb
cmp
push
push
sti
lock
add
add
pop
cmp
cmpsl
fdivl
push
and
or
lods
cmp
mov
and
mov
addr16
subb
mov
mov
inc
bound
xor
das
in
xor
call
inc
int3
push
hlt
dec
loope
and
int3
mov
cmp
dec
ds
shll
adc
cmp
aam
push
sbb
stos
jb
adc
test
or
pop
push
pusha
xchg
nop
jno
adc
rclb
cmp
sub
out
sub
outsb
ss
adc
or
jg
ret
out
stc
scas
push
mov
call
jae
cld
pop
dec
push
loopne
sub
push
or
sub
jbe
or
adc
rcrl
mov
sahf
data16
mov
faddp
lea
and
jg
cmp
jo
cmp
adcb
mov
dec
cmp
adc
xchg
cli
imul
cmp
sbb
adc
mov
xor
adc
adc
imul
mov
cmpsb
dec
fbld
or
lods
or
mov
mov
sub
daa
mov
inc
jmp
sti
stos
paddd
fwait
xchg
or
dec
dec
xchg
cltd
inc
repz
aas
les
xchg
sbb
push
cmp
shlb
paddb
pop
cmp
pushf
imul
xlat
jmp
lret
scas
dec
aad
out
nop
mov
pop
lret
jb
divb
je
shl
jecxz
mov
mov
call
sbb
outsl
andl
addr16
push
dec
movsl
inc
push
cmpb
shlb
jno
mov
mov
and
lret
jnp
mov
movsb
cmp
sahf
in
pusha
into
out
cmpsl
cmpsl
fs
mov
pushf
push
call
lret
in
bound
mov
or
lock
dec
ficomps
nop
iret
rol
pop
sti
sub
roll
aam
or
ret
sub
imul
dec
out
adcl
cmp
lods
add
mov
mov
xchg
jb
mov
add
push
cltd
mov
cmp
xchg
cld
shll
imul
arpl
mov
inc
sarb
sar
ja
pop
add
stos
inc
or
xchg
imul
or
jnp
dec
xor
mov
xor
dec
mov
xchg
cmp
mov
mov
ljmp
out
and
aad
fwait
adc
push
push
cmp
jns
mov
xor
out
negl
call
jns
add
adc
lret
dec
mov
pop
out
mov
addr16
orb
fbstp
jg
arpl
cld
xchg
jne
mov
ja
in
push
mov
movsb
xchg
mov
sbb
sub
lea
lds
mov
and
icebp
insb
cld
ja
jnp
adc
mov
in
pusha
inc
pusha
xlat
push
pop
iret
sti
pop
ffree
jl
and
in
cmpsl
inc
mov
repz
cld
aas
jl
dec
jne
mov
iret
and
xchg
jne
stos
sbb
xchg
enter
daa
scas
pusha
push
push
fwait
push
jbe
sub
fwait
mov
xlat
scas
jge
mov
es
arpl
mov
inc
inc
mov
lock
stc
sub
gs
pushf
add
jno
jne
add
fiadds
xchg
fcmovnb
popa
lret
mov
scas
pop
leave
and
pushf
cmp
pop
call
push
dec
iret
dec
jbe
popa
mov
sbb
jae
cmp
loope
mov
aas
jl
shlb
push
xchg
and
xor
push
in
lahf
lahf
xor
push
sub
aad
mov
sahf
push
jbe
inc
icebp
das
mov
sub
in
push
cmp
enter
pop
fsts
sbb
cmpsl
out
loope
dec
fisubrl
dec
pop
cmp
aaa
lods
ds
and
and
aas
aas
andb
aas
sbb
divb
fcompl
int3
int
pop
ja
repz
push
mov
lcall
rcr
xlat
stc
inc
sub
sahf
dec
outsb
cltd
into
dec
adc
inc
push
out
jg
dec
scas
mov
mov
jecxz
sub
and
inc
jle
jecxz
mov
mov
adc
test
sarl
mov
mov
sbb
mov
test
pop
cmp
pop
outsl
addr16
cld
stc
repz
pop
fs
stc
mov
ss
fwait
leave
cmp
int3
loopne
out
ljmp
sahf
outsl
sub
pop
fsubl
xchg
data16
loope
aam
insl
adcb
jns
xor
inc
pop
pop
pop
sahf
sti
adc
mov
imul
faddl
xor
xchg
lock
mov
inc
int
xlat
enter
in
cmp
mov
mov
insb
sti
pop
or
gs
mov
movsb
jecxz
dec
stos
and
inc
push
pop
neg
push
testl
repz
push
push
loope
add
dec
jne
mov
sub
in
das
or
and
and
mov
jb
adc
aad
fcomps
aas
push
and
fwait
dec
clc
pop
imul
cmp
ret
adc
mov
repz
fsubrs
mov
jge
dec
addr16
and
xchg
loopne
pop
push
push
lock
movsl
out
add
cmpsl
subl
xor
mov
or
cwtl
negb
aaa
in
cwtl
sbb
mov
jae
push
cld
ljmp
lret
pop
mov
pop
mov
imul
scas
fdivs
rclb
adc
ret
mov
mov
cld
dec
loope
push
xchg
clc
stos
inc
ljmp
sbb
dec
jecxz
scas
movsb
call
mov
arpl
sub
sub
aas
cltd
ror
test
fdivr
push
cs
aas
fisttpll
inc
incl
cli
adc
rcll
pop
lods
mov
stos
xor
out
mov
rcll
mov
xor
insl
pop
or
or
xor
popf
dec
mov
in
imul
insb
inc
ja
ljmp
jle
adc
ret
fwait
inc
mov
adc
xchg
dec
mov
jns
insl
cld
in
insl
lret
xchg
movsl
loop
mov
test
mov
stos
xor
push
loopne
jp
popa
mov
mov
sbb
rorl
jne
jne
add
mov
fldl
xchg
sub
xchg
dec
lds
cmpl
lods
into
les
shr
push
push
lods
aaa
and
outsb
sbb
out
mov
sub
in
fucom
aas
cmc
jno
jb
pop
iret
pop
in
add
outsb
sub
inc
jae
insl
clc
push
mov
adcl
ds
dec
adc
int3
push
sahf
sbb
jg
imul
cmp
ret
mov
push
loop
loop
push
testb
stos
mov
leave
xor
inc
hlt
pop
nop
mov
inc
inc
arpl
or
cmpsl
std
add
mov
out
add
popa
pop
das
test
fisubs
in
into
shrb
stos
and
cmpl
push
cltd
icebp
sbb
aas
mov
jge
cltd
lods
sbb
shll
mov
cmp
xchg
push
jl
mov
sub
js
lret
xor
imul
out
test
xchg
mov
inc
orb
cmpsb
lods
jne
in
std
push
enter
pop
sbb
bound
add
pop
popf
xchg
sub
mov
cmp
fs
movsl
and
dec
xchg
push
data16
sbb
add
push
rcl
int
pop
sahf
or
js
and
push
mov
cld
push
xorb
sbbb
cld
pop
aaa
adc
sbb
cmpsl
jg
test
mov
js
adc
ljmp
mov
aad
xchg
lret
fcmovb
leave
xchg
aaa
mov
sbb
xchg
sahf
lods
lods
mov
adc
subb
in
ds
stc
stos
das
push
fs
ss
adc
les
cmp
xchg
push
xor
addl
push
push
arpl
and
cmc
pop
es
dec
js
adc
cmp
andb
pushf
lods
xlat
ret
cmp
sub
dec
mov
sbb
push
sti
or
xchg
call
lds
loopne
pop
dec
dec
or
xchg
lret
repz
jmp
mov
loopne
cmp
fstl
pop
mov
int3
inc
pushf
dec
mov
test
movsl
jne,pn
popa
aad
cs
nop
jae
xchg
aas
repnz
iret
jb
sub
mov
je
movsl
enter
cli
mov
jnp
sbb
jns
lods
pop
mov
rolb
xchg
adc
dec
push
lea
pop
cmc
ror
inc
sub
mov
mov
push
push
mov
clc
shlb
lcall
pusha
inc
adc
cwtl
or
into
mov
dec
mov
outsb
lret
lret
cmpsl
or
mov
push
push
ret
sbbl
in
shlb
jp
es
sbb
jbe
aad
inc
aaa
xor
outsl
mov
insl
icebp
mov
gs
aaa
ds
ljmp
icebp
lods
xlat
sbb
scas
mov
movsl
dec
mov
ret
add
fcompl
lods
loopne
mov
test
push
icebp
js
fnsave
mov
dec
sbb
sub
pop
pop
mov
jae
sub
push
jbe
or
out
mov
scas
and
insl
pop
jmp
cmp
mov
out
pop
dec
push
sbb
mov
insl
xchg
dec
jb
dec
inc
adc
in
fwait
jb
lds
jle
lret
add
mov
inc
punpckldq
lcall
hlt
mov
mov
sub
mov
gs
lea
les
mov
lods
mov
xchg
dec
ret
jne
fcmovne
mov
cmpsl
jmp
xchg
sti
cmp
jmp
dec
xor
out
jbe
sub
mov
push
mov
sbb
mov
insb
sarb
jnp
pop
lret
jle
gs
in
out
add
add
iret
mov
dec
or
or
inc
rorb
sub
popf
fwait
jne
mov
int
stc
pop
fsts
mov
cmp
push
sub
adc
loope
into
mov
jge
jp
stos
push
xchg
stos
dec
xor
jnp
inc
dec
cltd
outsl
or
and
or
ja
sub
sub
inc
jnp
pop
pop
lret
inc
push
pop
lds
dec
ror
fs
int
mov
mov
movsb
fldenv
mov
jbe
js
jge
xchg
daa
movsl
jns
cmp
shll
jno
jo
jl
je
dec
adcl
push
pop
out
dec
xor
les
fisttpll
push
rcr
cmp
pop
hlt
add
xor
in
in
in
enter
pop
push
cmp
jne
out
or
test
arpl
inc
movsl
sub
aam
fimull
inc
jge
sbb
lds
jp
pop
push
inc
fistps
mov
js
mov
lea
repnz
fldln2
arpl
sub
pop
fldcw
push
adc
negl
mov
or
mov
and
pop
jnp
and
aam
push
jmp
jo
sub
iret
mov
inc
and
shll
mov
push
sub
mov
dec
sahf
dec
mov
movsl
subb
mov
and
mov
fs
mov
ss
cmp
inc
push
cli
add
cmp
or
inc
cmp
je
or
inc
jecxz
stos
cs
xor
xchg
pop
inc
cmp
adc
orb
scas
cmp
add
ret
data16
xchg
lods
mov
lods
arpl
inc
mov
call
in
xchg
pop
sti
mov
scas
decb
mov
out
loopne
call
arpl
loope
fld
mov
cmp
int
push
xchg
arpl
add
ret
mov
lea
jae
adc
rcl
pushf
clc
icebp
lods
jmp
push
or
fcom
rcl
dec
out
nop
dec
pop
xor
xchg
ret
cmpsl
nop
outsb
dec
out
lds
repnz
rcrl
leave
jg
lea
cmp
mov
mov
fisubrl
cmp
and
pop
cwtl
test
mov
adc
mov
das
mov
adcb
pop
add
rorl
inc
cs
mov
or
cmpsl
movsb
insl
loop
jno
movsb
icebp
and
js
cmp
mov
mov
push
push
lock
sub
in
divb
sarb
jmp
sbb
inc
enter
sti
mov
repnz
out
insl
fdivrs
pop
xchg
jbe
fucomi
push
fcoml
xorl
lds
hlt
adc
lods
shlb
and
jae
push
cmp
cltd
loopne,pn
test
jbe
push
mov
fstp
loopne
clc
mov
into
xchg
int
sbb
cmpsl
roll
addr16
add
pop
out
nop
das
sub
in
cmp
pop
iret
add
pushf
and
in
inc
xor
inc
mov
xchg
lds
test
mov
adc
inc
lods
test
or
sub
fwait
mov
js
add
mov
ds
bound
fwait
loop
cmp
mov
xchg
inc
roll
xchg
dec
mov
test
pop
and
or
sub
jp
in
hlt
mov
mov
sbb
movsl
sub
and
aam
and
cmp
cltd
xchg
adc
clc
sbbl
lds
mov
mov
stos
mov
mov
jnp
dec
sbb
sbb
dec
pop
pusha
test
inc
iret
sbb
pop
ret
xchg
pop
fcoml
fdivs
sub
fs
ret
mov
dec
sbbb
arpl
dec
xlat
mov
scas
mov
call
adc
mov
leave
and
hlt
cmc
pusha
and
pop
jecxz
dec
inc
mov
push
ss
or
test
int3
xor
leave
pop
lea
outsb
vcvttps2dq
scas
lods
in
and
insb
cmp
or
push
aaa
add
jbe
mov
jge
pop
mov
out
inc
pop
daa
movsb
ret
or
and
fimuls
mov
es
pop
dec
outsb
lahf
cld
loopne
push
mov
gs
inc
sahf
xchg
xchg
cmpsb
mov
jmp
lret
js
enter
pop
xchg
xchg
repnz
cli
inc
loope
cmpsl
inc
sub
push
mov
sbb
aam
xchg
frstor
outsl
cmpsl
lock
push
test
rorb
lret
add
dec
sub
dec
enter
sub
in
inc
mov
dec
add
pop
or
pop
lcall
cmp
fcomps
sub
pop
pop
outsb
ret
adc
shlb
mov
mov
mov
mov
cs
in
mov
int
add
dec
testl
lcall
mov
mov
orb
outsl
add
mul
fs
dec
stc
sbb
sub
stos
loope
imul
ss
inc
cmp
std
ljmp
aaa
aas
jns
jecxz
les
cmp
or
lahf
stos
into
push
adc
cmc
jb
das
xor
mov
dec
adc
pop
mov
add
xchg
ds
stos
jb
movsl
ret
xor
mov
test
and
repnz
sti
insw
icebp
movsl
stos
gs
jg
loopne
mov
inc
aas
jno
fincstp
nop
test
mov
repz
pop
jmp
sbb
std
push
or
mov
and
pushf
mov
add
xchg
add
nop
sub
aas
xor
mov
je
leave
jecxz
inc
lcall
out
call
adc
add
cmpl
in
testb
jg
icebp
aam
das
pushf
dec
mov
sbbw
fidivs
mul
mov
std
cwtl
dec
popf
mov
movsb
mov
icebp
clc
mov
cmc
lret
test
inc
mov
fldt
or
mov
sub
clc
aam
scas
push
ret
gs
es
stos
insl
mov
std
out
mov
ljmp
adc
aas
adc
mov
inc
mov
adcb
gs
into
test
adc
mov
stos
pop
push
ja
ds
loope
clc
jmp
mov
adc
push
rcrl
or
pushf
stos
incl
or
test
push
shr
push
in
xor
lret
pop
call
shll
in
xchg
dec
and
mov
ja
add
dec
pop
insl
dec
inc
inc
push
and
inc
sub
ficoml
mov
pop
and
jae
mov
mov
fucomip
in
sbb
push
mov
fmul
mov
fistpl
insl
add
addr16
aas
lods
mov
rorb
mov
gs
xchg
dec
mov
xlat
jne
mov
add
repz
xchg
mov
push
jnp
dec
subl
mov
sub
mov
rclb
mov
jle
fisubrs
imul
or
inc
xor
in
or
pusha
inc
inc
cmp
ja
mov
adc
dec
jae
jae
push
or
or
lret
cld
aad
pop
mov
xchg
inc
adc
and
das
push
mov
adcl
jmp
pop
leave
cwtl
or
hlt
inc
and
inc
dec
popa
add
sbb
and
cmc
enter
shll
dec
lahf
xor
sbb
pop
imul
pop
mov
test
iret
scas
mov
cmp
cmpsb
jle
out
xchg
sbb
lock
or
jge
adc
sbb
or
jno
lea
dec
popa
sub
push
and
mov
lahf
sbb
push
jbe
sbb
push
repnz
sub
pop
mov
mov
dec
enter
pop
aad
add
jge
loope
bound
sub
test
ds
xor
and
xchg
cmp
insl
aaa
lcall
mov
xor
pop
sbb
fadds
js
iret
sbb
mov
or
push
xchg
cmpl
and
and
pop
cli
shrb
xchg
ret
mov
jb
mov
out
mov
sbb
out
out
xor
int
jg
sub
fiaddl
cmp
shl
fadd
mov
in
mov
inc
mov
call
addr16
test
or
jecxz
push
loop
add
iret
xchg
lock
adc
or
cmp
mov
lahf
pop
cli
push
jae
mov
shll
popf
jle
into
stc
xlat
push
cmc
cmp
xor
mov
mov
into
imul
loopne
ja
pop
lods
mov
pop
xlat
les
sub
mov
xchg
sti
adc
sbbb
pop
repnz
dec
daa
lea
push
xor
dec
jmp
dec
repz
jmp
mov
xor
mov
pop
mov
dec
or
mov
in
aad
test
add
gs
iret
outsl
dec
jb
sti
mov
cmp
and
iret
mov
sti
call
aam
xchg
mov
stc
adcl
dec
fistl
movsl
pop
faddp
movsb
inc
rcll
das
jnp
fldenv
sbb
mov
sub
mov
and
mov
arpl
cld
stos
stos
xchg
lret
sbb
mov
cmpsl
inc
mov
leave
mov
daa
mov
rcr
mov
sub
xlat
jmp
mov
clc
mov
aam
int
mov
ljmp
aaa
lods
sbb
mov
cmp
and
push
idivb
add
pop
cltd
pushf
test
into
sub
mov
and
push
cmp
frstor
aam
es
sbb
sbb
mov
pop
pop
pop
fucomi
stos
out
scas
stc
out
push
jp
xchg
int3
jne
push
fwait
xchg
push
call
cmpsl
lds
ror
fnstenv
cmp
xchg
mov
insb
test
pop
iret
ja
adc
dec
dec
popa
je
fisubl
add
xor
push
xor
inc
jge
add
aam
out
push
ds
bound
xor
clc
sub
mov
jp
loope
push
mov
mov
xchg
jecxz
add
test
mov
push
mov
push
adc
imul
mov
jnp
fists
hlt
jno
je
inc
jmp
stos
movsl
roll
mov
mov
cli
push
fs
stos
jno
push
and
sbb
jnp
hlt
mov
mov
pusha
fidivrs
iret
pop
sbb
fcmovne
mov
dec
xchg
inc
icebp
xchg
xchg
jae
cld
cwtl
push
lret
mov
popf
adc
inc
dec
std
jp
adc
sub
sti
sbb
jle
imul
cld
scas
dec
jo
push
jmp
adc
stos
mov
jbe
popa
leave
cvtps2pd
mov
sahf
inc
push
repz
add
jg
aaa
mov
mov
add
mov
xor
enter
insl
push
lds
popf
rcrb
xor
inc
fmull
movsb
jp
in
aad
push
jbe
subb
stos
xchg
sbb
mov
cmp
inc
jno
rorb
jl
mov
lcall
and
push
lahf
cmp
mov
test
mov
xor
mov
push
daa
enter
pop
adc
fsubrs
mov
loope
inc
repnz
mov
cmp
jns
int3
hlt
sub
and
enter
loop
sbb
aam
add
js
xor
mov
pop
cmp
lods
js
xor
or
imul
cmp
mov
out
cwtl
outsb
mov
xor
mov
mov
sub
mov
push
mov
and
xchg
push
repnz
mov
ds
testl
or
inc
fstps
push
out
inc
addb
and
xchg
andl
adc
cmp
ss
push
or
out
rorl
xor
inc
push
or
addr16
fmull
xor
pop
mov
cmp
and
mov
adc
cltd
data16
mov
lods
jae
int3
mov
push
adc
add
in
sub
out
mov
enter
fsubrs
gs
leave
test
stos
push
push
dec
xchg
cmp
sub
faddp
testb
xchg
lods
jp
sbb
jae
cmc
or
rcrb
sahf
adc
mov
xchg
inc
cmp
add
not
and
nop
fistpll
sbb
dec
dec
pop
or
xor
mov
mov
pop
sbb
push
push
arpl
popa
cltd
subl
dec
ret
pop
adcl
inc
daa
push
insl
das
pop
push
mov
aam
dec
and
sub
sarl
imulb
std
mov
bound
mov
repnz
cmpsb
inc
push
lret
xchg
mov
fistl
mov
sbb
pop
dec
inc
adc
dec
pop
sub
stc
sbb
ret
and
es
stos
insl
lea
dec
enter
xor
xor
lods
add
mov
pop
pop
shlb
addl
ds
out
mov
cltd
rorl
fstps
jo
std
out
fisttpll
out
clc
popa
ficompl
xchg
sti
sbb
mov
pop
add
pop
stos
fstpl
mov
mov
hlt
popf
push
jbe
add
xor
mov
or
repz
xor
mov
repz
dec
repnz
test
xchg
movsb
dec
inc
jno
mov
pop
cmc
cltd
fwait
cs
repnz
or
lret
add
gs
xor
aam
or
mov
in
mov
pop
push
dec
mov
push
inc
scas
add
jp
add
cld
insl
sarl
fldl
dec
addr16
jne
jno,pn
mov
shrb
jmp
jne
xor
cmp
or
push
xchg
stos
in
and
xor
sbb
mov
rorb
pusha
jns
inc
iret
xor
pop
mov
cmp
addr16
lret
mov
aaa
outsl
mov
leave
cmpl
jg
out
dec
nop
shrb
sbb
iret
push
inc
add
dec
pop
cmpsl
mov
leave
push
lods
leave
xchg
hlt
and
mov
inc
push
stc
push
or
push
xchg
fbstp
jae
jb
pop
inc
jle
ja
test
repz
sbb
sti
je
lds
movsb
cmc
scas
dec
xchg
jae
fnstenv
movsb
add
cltd
push
jbe
adc
push
sbb
xchg
mov
mov
cmp
jno
cmp
insb
lods
daa
dec
aas
push
sub
out
mov
jo
outsb
lea
sbb
add
mov
pop
inc
dec
arpl
cmpb
pop
push
mov
push
mov
sbb
inc
jge
sub
inc
movsl
inc
xchg
in
inc
mov
insl
out
test
sbb
int3
add
mov
pop
cwtl
pop
pop
popa
dec
addr16
daa
addr16
mov
and
xor
xor
sub
shlb
shlb
mov
test
addr16
xchg
das
mov
hlt
mov
adc
and
xor
cmc
test
sub
xor
cmp
mov
pop
sarl
sbb
push
sahf
roll
fwait
aam
outsl
mov
sbb
cmp
push
rcll
pop
inc
shlb
cld
push
cmp
sub
shlb
xor
aam
xchg
addl
mov
dec
inc
xor
call
mov
imul
jp
add
jecxz
lods
pop
lock
inc
movsb
daa
sub
xor
in
xor
sti
jae
add
xchg
adc
data16
loopne
jecxz
dec
in
lea
pop
push
fstps
sbb
or
in
outsl
pop
mov
lret
mov
dec
mov
jl
sub
movsb
call
adc
fs
ds
mov
nop
mov
sub
outsb
dec
ret
je
jbe
jecxz
pop
imul
pop
push
call
push
jp
mov
addl
lret
aam
inc
iret
rcrb
pop
in
mov
mov
cltd
and
fidivs
imulb
jg
cwtl
jge
push
mov
xor
icebp
jge
jns
add
std
lret
idivb
addr16
add
mov
rol
lock
cmc
pop
imul
sub
adc
insl
pop
into
ret
adc
dec
insl
je
jecxz
ret
mov
xchg
jb
adc
fidivrl
in
out
test
sbbb
enter
lea
push
cltd
or
mov
push
shlb
je
in
pushf
sbb
push
push
sbb
insl
shll
mov
stos
int3
dec
fsubr
sbb
jmp
pop
sub
push
adc
call
cmp
sub
xor
andl
dec
pop
xor
test
dec
addr16
mov
add
or
mov
fwait
pop
loope
push
lods
mov
stos
add
or
bound
inc
jns
push
cmpsl
in
sarb
mov
das
daa
pop
or
in
addr16
lock
jo
mov
icebp
push
mov
mov
adc
or
ret
ret
push
mov
xchg
sbb
jmp
inc
inc
and
mov
hlt
clc
or
sbb
ret
xchg
lret
stos
hlt
jle
ud1
imul
inc
ret
ss
mov
outsb
jo
jno
push
push
push
ja
popf
pop
mov
mov
dec
mov
fidivrl
push
xchg
sub
sbb
jne
imul
mov
jle
adc
test
in
sbb
jae
std
in
hlt
and
jge
push
jns
inc
push
jae
or
mov
mov
xor
push
or
outsb
add
pop
gs
fisubrs
pop
dec
icebp
sbb
jne
in
adc
dec
rorb
scas
sub
movsl
cmp
push
push
pop
jbe
push
cmp
sbb
sub
daa
mov
fcomp
jno
enter
lea
scas
prefetcht0
lret
xor
mov
jp
out
stos
or
push
push
in
inc
inc
fcmovu
jmp
addr16
push
pop
xchg
pop
mov
loope
imul
and
pop
cmp
sub
ds
cmp
fcmovnu
cmp
cmpsb
aam
sbb
clc
fbstp
test
lods
pop
mov
js
mov
pop
or
lcall
jle
test
sti
sub
push
stc
outsb
dec
aam
adc
sbbb
xchg
icebp
orl
xchg
je
movsl
push
clc
pop
inc
int
inc
test
dec
shll
mov
mov
push
jno
mov
int
sahf
jle
ret
xor
xorb
add
mov
movsb
stc
hlt
ret
shll
adc
and
fsubr
gs
jg
fdivrp
add
xor
add
ret
or
mov
into
mov
dec
cmc
xor
and
adc
subl
sbb
add
sbb
data16
fwait
mov
sti
pop
xlat
subl
sahf
mov
mov
mov
mov
inc
mov
js
or
add
fdivrs
jo
xor
es
sbb
movl
jmp
mov
jp
movl
nop
xchg
pop
data16
lods
adc
inc
mov
jge
movl
cwtl
fdivr
repnz
mov
jae
inc
pop
inc
sbb
ficoms
loopne
in
pop
dec
push
inc
push
in
mov
pop
sub
sbb
mov
inc
sbb
out
rcrl
dec
insl
div
push
dec
std
push
add
lahf
int3
lcall
pop
frndint
sub
es
gs
fwait
mov
ljmp
mov
mov
aam
xchg
xlat
ret
mov
int3
lahf
insl
pop
ds
mov
test
ljmp
dec
lods
pop
mov
scas
ljmp
iret
inc
shlb
cld
mov
add
leave
ljmp
mov
fstpl
out
mov
inc
jg
sbb
test
pop
pop
insl
subl
nop
xchg
xchg
mov
repnz
adc
or
pop
cmc
xor
and
jnp
pushf
xchg
adc
dec
rorb
test
in
and
int
lahf
je
or
cmc
lcall
in
testl
out
pop
or
aam
jns
sbb
in
lahf
mov
mov
mov
clc
pop
mov
pop
jp
xchg
movsb
mov
cltd
cmpb
jb
adc
jne
xor
mov
add
xchg
in
out
jmp
or
adc
sub
popf
mov
push
stos
lret
and
or
insb
push
imul
jp
mov
in
clc
andl
stos
iret
repz
bnd
jno
out
movb
inc
xor
push
adc
dec
popf
test
mov
push
jmp
inc
push
dec
fisubrl
in
cmc
xchg
sub
das
cmpsl
imul
push
rcrl
adc
or
outsb
repnz
sub
leave
je
cmp
arpl
mov
or
add
les
icebp
mov
cmp
movsl
loope
int3
leave
dec
rcrl
stos
ficomps
pusha
inc
lds
mov
pop
mov
and
add
cmp
insb
mov
ret
jbe
pushf
cmpl
push
jle
lea
