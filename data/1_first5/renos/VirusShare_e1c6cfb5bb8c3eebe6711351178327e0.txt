mov
adc
or
push
je
imul
add
push
mov
mov
outsl
outsl
pop
mov
je
in
adc
insb
and
cmp
outsl
jmp
jp
lea
mov
inc
cmp
jbe
lea
jg
xchg
lea
jno
dec
dec
mov
ja
or
or
fmuls
mov
mov
mov
xchg
call
ss
ljmp
inc
in
push
call
cmp
js
lea
out
dec
mov
and
inc
mov
cld
inc
mov
cld
inc
dec
cmp
outsb
mov
aam
pop
mov
je
subb
mov
repnz
dec
inc
cmp
jbe
mov
and
pop
divl
imul
mov
sbb
neg
mov
lea
bound
add
inc
fistpll
inc
ret
lea
test
testb
pop
ret
jmp
rolb
enter
les
sarb
mov
or
enter
mov
pushf
cwtl
xchg
xor
and
cmp
gs
xor
call
pushl
cmp
mov
jecxz
jge
fs
jge
lcall
pop
aaa
jb
cmp
aaa
push
push
mov
lcall
fildl
ret
adc
mov
jbe
mov
dec
inc
std
sti
xchg
mov
xor
stc
inc
cmp
inc
mov
mov
loope
lahf
out
adc
leave
pop
mov
xor
cmp
adc
sub
aad
pop
aaa
jbe
or
in
fstl
aas
divb
pop
xor
notl
push
icebp
push
mov
neg
lcall
push
aam
mov
xchg
mov
aam
mov
shrl
mov
pop
dec
mov
js
pop
mov
aaa
sub
push
jae
mov
aaa
dec
stc
push
jae
bound
sbb
pop
ja
pop
mov
mov
shll
mov
inc
aas
push
jmp
and
icebp
dec
mov
mov
stc
dec
mov
jbe
mov
ret
test
sbb
ret
divb
fcomp
pop
testl
pop
pushf
mov
cmpsb
pop
sahf
sub
pop
movsb
mov
fcomps
mov
dec
aaa
mov
lods
mov
outsb
sti
out
mov
push
cmpsb
clc
push
dec
ds
inc
sbb
lock
lods
fidivrs
cmpsl
or
out
mov
test
daa
mov
in
imulb
out
jbe
push
pop
jmp
jbe
sarb
and
out
into
daa
loop
mov
notb
mov
xor
add
insl
pop
xchg
dec
inc
adc
pop
pop
into
lcall
pop
cmp
outsl
in
mov
sbb
shl
pop
je
dec
xor
pop
pop
fadd
mov
sub
pop
idivb
stc
pop
sbb
xchg
xor
int
in
sbb
stos
mov
aas
mov
dec
sarb
mov
stc
dec
cmp
mov
scas
push
mulb
mov
or
idivl
jp
into
mov
jnp
paddsb
negb
xor
pop
or
jle
mov
insl
cmp
dec
and
insb
in
int3
mov
push
cmpsb
or
nop
sub
or
insl
outsb
loope
divb
xchg
jmp
fstpt
xchg
sbb
fsts
or
and
insl
lea
dec
xor
mov
mov
mov
in
and
mov
cmc
push
mov
ret
out
divb
xchg
add
fdivs
out
inc
or
mov
sbb
ret
outsl
es
bnd
pop
movsl
insb
adc
movd
and
repnz
push
dec
stc
add
add
xchg
mov
add
lahf
dec
and
aas
jbe
jbe
add
push
out
or
and
enter
repnz
stos
rcr
lock
mov
mov
cmpsb
aaa
jbe
or
xchg
loopne
pop
mov
into
adc
mov
cli
jg
jmp
adc
aaa
pop
test
pop
mov
mov
movb
aas
roll
mov
sti
or
mov
inc
test
rorb
stos
test
out
out
jle
xchg
sbb
push
cmpsb
pop
sti
or
mov
pop
bound
outsl
jge
out
or
clc
rcrl
ja
out
jge
stos
and
sbb
adc
ss
lock
shlb
ret
inc
cmc
and
cmp
das
xor
pop
cmp
push
hlt
cmpsb
push
pop
lea
ja
inc
pop
push
push
enter
stos
mov
push
sbb
cmp
movb
aas
mov
outsb
mov
pop
dec
loope
ds
adc
pop
or
pop
fcomps
push
sub
pop
xchg
push
cmp
dec
jge
ret
push
sbb
sarb
mov
pop
nop
and
ss
gs
sub
pop
xor
push
fwait
imul
fs
sub
jnp
mov
adc
lcall
add
dec
outsl
in
pop
push
iret
idivb
sbb
adc
pop
mov
xor
push
or
bsr
data16
aaa
cmp
pusha
outsb
andps
mov
inc
dec
dec
mov
mov
push
dec
outsb
pop
and
inc
push
loop
pop
and
jae
clc
mov
mov
xor
divl
test
jne
or
jge
fwait
adc
jmp
adc
insl
and
mov
push
sub
in
inc
aaa
call
lods
pop
push
sub
pop
clc
mov
add
in
in
std
or
adc
mov
push
dec
test
jb
mov
lock
mov
mov
ret
adc
mov
add
cmp
or
rolb
jmp
jmp
cmpl
pop
push
in
je
invd
sub
nop
or
push
mov
or
adc
jmp
sub
push
insb
xor
orl
data16
xor
and
adc
add
push
mov
call
dec
in
cvtdq2ps
or
test
incl
inc
ret
dec
outsl
test
pop
imul
adc
jne
insb
inc
insb
insb
outsl
arpl
in
dec
repnz
jb
je
arpl
gs
dec
js
mov
sub
mov
dec
iret
aaa
mov
incl
flds
in
jge
mov
je
repnz
sbb
adc
test
xchg
mov
fdivrs
cld
cmpb
je
or
test
cmp
xor
rorb
dec
cld
mov
and
xor
aas
icebp
dec
inc
das
and
and
icebp
add
sub
mov
ds
outsl
mov
clc
push
repnz
jge
sbb
es
clc
decb
jne
popa
call
push
add
inc
or
jl
inc
xchg
fnsave
fcmovbe
inc
mov
mov
dec
dec
mov
ja
hlt
cmp
jnp
lea
sub
aas
lret
lock
mov
shl
sbb
ljmp
xchg
mov
clc
xchg
in
scas
fisubrs
fdivrs
mov
fmull
sbb
ja
loopne
cmpsb
std
pusha
dec
inc
dec
mov
add
fsub
scas
xor
or
push
inc
popf
call
cmpsb
nop
leave
incb
mov
and
or
mov
push
mov
sbb
xor
inc
cmpb
mov
dec
mov
enter
dec
xchg
test
pop
mov
in
xor
and
add
gs
push
sub
imul
jp
imul
bound
jl
outsw
jnp
dec
imul
jmp
jp
popa
outsl
ja
outsl
popa
pop
jle
inc
gs
inc
and
xchg
mov
add
add
xor
adc
rcl
leave
cwtl
cmpb
mov
inc
jl
dec
inc
fadds
ret
lea
mov
fdivr
outsl
outsl
dec
cmp
jno
lea
add
cmp
insl
dec
mov
sti
mov
adc
mov
mov
loope
jo
mov
mov
outsl
jmp
mov
dec
mov
hlt
pop
cld
in
testb
call
fdivrs
dec
shlb
jecxz
add
dec
pop
inc
clc
call
mov
xor
add
out
push
notl
clc
jp
and
inc
mov
fcomi
dec
cmp
inc
add
test
jb
daa
inc
das
test
inc
inc
inc
mov
add
out
scas
xchg
leave
dec
mov
pop
inc
das
sub
xchg
lahf
inc
xchg
inc
push
add
jne
push
pushf
adc
out
das
int3
lea
mov
outsl
lods
sub
or
pop
fistpl
jae
je
outsb
add
jl
mov
add
cmp
or
pop
jg
xchg
or
nop
sbb
and
fucomi
or
dec
mov
inc
loopne
inc
inc
sbbl
ss
lock
outsb
or
xchg
mov
rorl
in
adc
mov
js
jo
outsb
pop
test
inc
inc
mov
mov
xchg
mov
jne
js
mov
pop
pop
loopne
cmp
pop
mov
and
fmull
mov
arpl
xor
pop
sti
dec
inc
mov
scas
pop
mov
or
jo
aas
fnstsw
inc
push
and
adc
cmp
xchg
out
mov
or
push
cli
ss
enter
xlat
adc
cmp
js
js
fstpt
mov
ja
lods
push
lea
iret
cmp
das
arpl
cltd
mov
test
in
or
cwtl
add
dec
cmp
mov
cmp
mov
jo
sbb
push
test
dec
popf
inc
mov
fstl
mov
push
mov
cld
in
dec
lea
sbb
push
leave
sar
arpl
sbb
cmp
and
fisttps
mov
pop
lods
adc
or
jo
cmp
push
sbb
aam
hlt
cmp
fdivrl
icebp
arpl
or
add
mov
mov
nop
pop
call
call
inc
add
add
adc
in
dec
int
inc
in
inc
andb
js
mov
test
jle
popa
dec
mov
and
fisttpll
and
clc
lock
pop
dec
mov
loopne
stc
popf
movsl
mov
movsl
in
mov
and
adc
ud1
jae
adc
or
sbb
in
jne
or
cmp
pop
test
add
leave
pushw
push
shlb
jl
dec
ja
sub
data16
in
or
jo
lds
adc
aaa
adc
dec
or
pushf
add
mov
sbb
test
es
sbb
shl
inc
scas
insb
jmp
pop
or
test
push
sbb
push
inc
add
xchg
addl
rcrl
add
pop
int
sub
add
int3
pop
add
sub
jae
xchg
lods
aam
or
lods
in
and
shlb
push
rclb
add
outsb
gs
xor
add
fs
insb
inc
loopne
outsl
mov
mov
jb
jae
addps
sti
das
hlt
dec
imul
dec
outsl
jb
sbb
lcall
xor
cmp
lsl
add
cmp
mov
imul
aad
and
pop
clc
sti
add
mov
mov
ja
mov
hlt
xchg
xchg
xor
mov
in
adc
ja
adc
add
inc
dec
add
or
or
dec
jne
mov
in
ja
pushf
jle
or
mov
mov
jnp
insb
pop
sbb
lods
cmp
sub
ja
call
push
fistpl
cmp
dec
sbb
push
idivb
and
lods
test
je
sbb
inc
or
movsl
into
sbb
and
rclb
dec
clc
rorl
lcall
clts
or
test
in
div
mov
incb
cmpsl
outsb
add
fisttpl
cli
je
push
shlb
pop
or
or
ret
pop
dec
adc
or
or
jl
add
push
fnsave
inc
ret
loope
xor
pop
out
adc
sbb
cwtl
gs
push
xchg
rorl
roll
adc
lret
xchg
mov
test
jp
xor
pop
dec
mov
cmp
push
lea
testl
mov
xchg
cmp
jo
cmp
fwait
fs
mov
and
es
jecxz
mov
lcall
dec
andl
out
outsl
mov
in
in
mov
push
push
sbb
orb
fistl
xor
push
mov
cmc
push
cmpl
test
mov
sbb
push
rclb
pop
xchg
out
add
sbb
test
dec
mov
lea
push
xchg
shlb
jp
add
mov
test
loop
adc
in
fistpl
add
inc
xor
and
sbb
mov
xor
sbb
sub
push
xor
push
sub
pop
cmpsl
in
or
cmp
pusha
ljmp
pop
ja
subl
shr
xlat
fcomps
aam
push
sub
movsb
mov
push
mov
and
pop
push
roll
adc
sbb
std
ret
mov
mov
cmp
or
add
mov
sub
mov
add
cvttps2pi
fcoms
dec
dec
pop
add
lahf
test
dec
inc
push
pop
push
push
pop
out
inc
xchg
les
and
adc
push
sub
jp
pusha
mov
sub
lds
shlb
add
bound
out
jb
mov
test
call
pop
push
stos
dec
loop
pop
sub
mov
and
mov
ret
push
add
cmp
xchg
mov
add
add
add
fsts
push
lcall
aad
cmp
loopne
loop
inc
dec
aam
mov
jbe
xchg
fistl
aad
das
shrb
mov
push
fisubrl
push
jmp
and
push
lret
outsl
pop
push
ljmp
jl
insb
adc
mov
cltd
and
cmp
xor
sbb
mov
push
or
mov
out
jbe
je
xchg
lret
outsb
mov
mov
js
popa
arpl
add
sub
mov
in
add
inc
outsb
ja
sub
mov
xchg
fadds
pop
inc
or
add
cltd
add
insl
pop
or
add
pop
push
xor
add
mov
popa
test
xor
and
add
in
ljmp
call
outsl
ja
fisttpl
or
lds
loope
xchg
pop
outsb
fcomi
add
test
js
nop
add
in
divb
xchg
add
add
pushf
pop
mov
dec
push
jae
pop
or
mov
pop
sub
mov
add
popa
ficoml
fistl
xchg
outsb
and
les
dec
out
loope
imul
push
in
sahf
popf
pop
jmp
in
mov
sub
sub
aam
add
jg
int
in
in
inc
jg
aam
add
testb
cs
test
icebp
lcall
cmp
mov
xchg
iret
dec
push
or
out
pop
mov
daa
jp
int3
and
out
jne
mov
add
stos
push
mov
sti
outsb
xor
cmpsb
loop
xchg
pop
push
jmp
into
add
xchg
scas
mov
mov
cmpb
fistps
jl
stc
clc
icebp
js
in
add
lret
insl
imul
incl
adc
add
loope
insl
sti
xchg
out
mov
push
shlb
lcall
add
clc
xor
pop
adc
pusha
mov
enter
fbstp
or
mov
lock
xchg
mov
mov
or
or
mov
testb
mov
pop
std
mov
cmp
sbb
mov
jne
jne
cmpsb
xchg
sbb
push
xchg
cmp
xor
fbld
push
add
adc
push
sbb
hlt
or
jne
cmp
sbb
fisttpl
dec
sbb
stc
popa
xchg
cmp
lock
jae
mov
pop
cld
enter
xchg
mov
jle
rcll
pop
fidivrl
dec
xor
and
lahf
push
aaa
xchg
add
out
testb
cmp
rolb
arpl
lahf
inc
inc
push
or
cwtl
sti
pop
int
and
imull
stos
imul
jno
inc
add
xor
test
push
out
cmp
mov
fmuls
lods
mov
push
jns
push
mov
push
sbb
jp
mov
std
nop
stos
ja
xchg
outsl
mov
enter
imul
imul
push
and
xchg
std
dec
mov
inc
mov
jmp
int
sbb
int3
xchg
insl
xor
mov
cmp
pop
fnstsw
fldt
xor
jecxz
mov
mov
dec
dec
mov
inc
popa
pushf
sub
retw
sub
jle
xchg
mov
mov
mov
mov
popf
shll
cmp
sbb
xchg
dec
or
outsb
rclb
ds
lods
mov
push
shlb
sbb
rcl
cmpsb
inc
mov
sub
andb
int3
negb
sub
lea
jnp
pop
lret
inc
xchg
shrb
out
adc
fcmovb
add
mov
xor
mov
add
and
adc
jae
fdivp
scas
mov
push
mov
dec
sub
sbb
in
pop
lret
xor
jg
xchg
xor
jb
jg
push
ror
mov
xchg
add
sub
jno
mov
lret
mov
dec
mov
outsl
fwait
mov
pop
xlat
sbbl
cmp
outsl
imul
push
and
mov
out
lcall
adc
inc
outsb
mov
cltd
add
shlb
in
out
push
cwtl
and
fildl
ss
repz
xchg
lahf
dec
push
mov
pop
pop
lock
ret
cmp
div
lods
xchg
sub
pop
mov
cmc
cmp
jp
lcall
mov
pop
in
sbb
lods
mov
push
jae
mov
adc
les
lret
push
addb
mov
sub
push
sub
ret
jecxz
divl
adc
jmp
dec
jo
sti
fdivs
or
lret
and
mov
aad
mov
cmp
xor
push
xlat
mov
inc
testl
mov
andb
xchg
outsb
loop
js
inc
push
fdivr
imul
mov
fiaddl
sub
xchg
ljmp
or
pop
xlat
icebp
mov
xchg
inc
std
cmp
jecxz,pn
jmp
xchg
inc
clc
xor
inc
push
loope
movsl
mov
sbb
add
shl
push
inc
repnz
push
xchg
pop
out
cli
ret
adcb
in
xchg
inc
shrb
ljmp
adcb
inc
ret
push
mov
pop
jo
icebp
call
movsb
cwtl
mov
add
cltd
in
mov
fcmovu
aam
ds
inc
mov
fucomp
mov
push
pushf
cltd
add
dec
mov
repz
cmc
sbb
xchg
shlb
fbld
stos
ret
loope
or
in
sub
mov
jo
xchg
or
cwtl
lea
jne
bound
push
add
mov
xchg
fisttpll
push
imul
ret
mov
pop
xchg
xchg
or
icebp
cmp
add
pusha
insl
mov
shll
lods
and
pop
frstor
mov
cmp
mov
insb
or
clc
lock
subl
insb
xchg
mov
icebp
out
cwtl
sarl
inc
xor
jmp
jmp
outsb
in
push
adcl
jg
sbb
mov
insb
or
mov
xor
xchg
jo
pusha
loop,pn
stc
push
ljmp
adc
in
pop
cmp
push
mov
or
add
xor
mov
mov
lret
loopne
mov
push
sarl
mov
pop
mov
imul
pushf
cmp
push
cmpsb
icebp
add
pop
mov
cmpsl
push
push
jl
andb
fistl
daa
outsl
mov
mov
insb
push
iret
sbb
dec
adc
mov
mov
add
sub
sub
xor
mov
inc
fidivl
sbb
xchg
dec
lcall
cmp
add
cwtl
out
add
leave
idivl
and
and
cmpsb
stos
cmp
sahf
daa
sub
sub
fsubrl
and
pop
ljmp
cmpsb
cmp
sbb
jne
ret
jne
sub
pop
fadds
pop
les
orb
push
bound
mov
push
mov
insl
pop
xchg
mov
cmp
imul
dec
push
inc
jg
xlat
lds
pop
inc
fs
test
mov
push
popf
cmp
ja
imul
sub
pop
add
lea
fists
arpl
xor
sbb
cmp
xchg
addr16
outsb
sub
lahf
pop
fwait
xchg
push
popf
adc
lock
jle
fs
jne
fs
pop
and
push
ds
and
fcomps
ret
sbb
or
je
xchg
lahf
pop
cli
lock
mov
popf
aad
jp
add
lcall
bound
or
inc
loopne
xchg
mov
ss
scas
xchg
call
xchg
add
call
mov
nop
lock
xor
sbb
sarl
jl
rol
rcl
xchg
mov
popa
xlat
repz
jns
mov
stos
push
stc
mov
cmc
call
test
test
cmc
pop
dec
sbb
cmpsb
imul
pop
xchg
movsl
test
addr16
or
mov
jns
dec
pop
mov
out
sbb
xor
add
mov
add
jne
mov
hlt
or
add
mov
int3
loope
out
cwtl
mov
stos
loope
movsb
ret
lods
xchg
into
lods
btc
insl
cld
mov
mov
mov
das
rcll
inc
sbb
insb
cmp
popf
in
lahf
jnp
scas
into
fldt
sub
push
push
sub
mov
aam
xor
aam
adc
icebp
cmc
push
cmp
ja
inc
xlat
in
loope
stos
test
js
or
aad
fadd
mov
shll
movsl
push
imul
je
pop
push
sbb
jge
xor
std
xchg
adc
xlat
fucomp
dec
adc
popf
mov
js
jp
inc
push
dec
shll
jnp
pop
lahf
mov
mov
imul
scas
addl
hlt
push
xlat
mov
int
mov
and
pop
lock
inc
dec
clc
jbe
divl
lret
pop
push
fsubr
ss
xchg
repnz
popa
fabs
mov
rorb
and
imul
stos
out
sub
jge
lds
dec
pop
jmp
jne
cmp
insb
fisubrl
add
mov
push
ret
push
pop
sub
cmc
es
adc
jmp
xchg
daa
fsubrl
jge
jnp
leave
jmp
mov
pop
ret
imul
or
sbbl
idiv
jo
jmp
in
test
aaa
or
ss
or
or
in
iret
hlt
mov
sub
xchg
fwait
push
dec
fisttpl
test
stos
loopne
test
call
iret
push
in
mov
sbb
dec
lods
mov
ror
adc
aad
jnp
add
sbb
test
jl
mov
push
call
in
jae
dec
loope
mov
xor
mov
jle
fdivrs
jno
pop
sbb
add
dec
jle
jmp
dec
sahf
aaa
xchg
pusha
lods
pop
or
pusha
neg
lret
cmpsb
cltd
cltd
ljmp
addl
and
lea
lock
je
sti
out
mov
dec
cld
add
les
dec
push
fists
xor
fs
mov
mov
rcrl
mov
insl
pop
in
push
scas
push
aas
jns
pop
stos
jbe
jg
popf
fwait
adc
outsl
stc
and
rcrl
fistps
call
lods
in
sub
jbe
adc
ljmp
xchg
stc
cmp
bound
insl
sbb
cmpsb
sbb
xchg
mov
sub
movsl
push
cmp
lods
packuswb
cmpsb
enter
shrb
adc
lock
cli
fildl
pop
hlt
sub
cmp
jmp
cld
mov
xor
push
out
mov
lock
and
pop
aam
dec
in
loop
fs
add
adc
mov
mov
xor
sbb
cmp
pushf
aam
jo
cmp
mov
pop
xchg
stos
cmp
cmp
sbb
repz
cld
push
push
loopne
test
or
ds
sbb
fcmovbe
aam
push
push
xor
aaa
mov
mov
cmp
scas
ja
outsl
or
xor
fwait
leave
insl
div
scas
aaa
fdiv
cmp
xorl
adc
jle
int
jo
fnstcw
out
mov
scas
mov
js
icebp
jge
iret
icebp
jge
xchg
out
fsubs
mov
adc
loop
and
js
dec
sbb
jno
inc
sbb
mov
dec
push
mov
loopne
pop
test
icebp
jle
push
insl
pop
jnp
repz
test
cli
ljmp
decl
mov
xchg
mov
xor
cmp
mov
mov
scas
aaa
mov
cmp
out
sub
pop
cmc
lods
addr16
jle
xchg
or
ljmp
cmp
xchg
push
cmpsl
pop
xchg
xchg
sbb
xorb
in
jb
add
xlat
testb
lea
push
adc
popl
call
pop
jne
imul
ljmp
ja
push
ss
push
pop
cmc
xchg
shll
ds
sbb
mov
ja
ficomps
fildl
test
es
das
outsb
scas
mov
mov
dec
inc
jecxz
inc
pop
dec
jmp
mov
in
mov
mov
dec
or
xchg
shll
jmp
or
jg
push
ljmp
add
and
add
jmp
loop
fcoms
frstor
ja
cmp
xlat
rclb
lds
xlat
push
add
cmp
xor
xor
aam
pushf
xchg
xor
testb
or
pop
loop
rolb
jle
push
mov
sbb
mov
mov
xor
aas
push
sub
sbb
add
pop
push
inc
mov
aad
pop
xlat
sub
fcmovu
pop
loope
jmp
mov
loopne
mov
or
xchg
cmc
sti
daa
test
hlt
mov
and
lahf
outsl
and
pop
repnz
ja
stc
es
adc
sbb
lock
les
lcall
pop
arpl
sbb
sbb
pop
xlat
inc
xor
cmpsl
icebp
jo
pop
rol
mov
dec
add
inc
mov
shl
inc
cmpsl
mov
bound
addr16
ficoms
out
mov
aad
push
cmpsl
das
je
dec
sub
inc
lret
idivb
cmp
outsl
mov
xor
stos
pushf
nop
sbb
lcall
out
fcmove
das
add
jnp
add
pop
inc
jne
mov
stos
loope
insl
push
jns
pop
xchg
push
rol
inc
jmp
imul
push
cmp
and
jbe
cmp
sub
lcall
sub
sbb
stos
pop
popa
pop
iret
movsl
jbe
xchg
aam
test
jne
fiaddl
xor
xor
movsl
xchg
mov
sbb
mov
ja
sub
xchg
aad
fistpl
jg
fsubrp
dec
jo
push
mov
cmp
push
pcmpgtd
movsl
jl,pn
call
pop
aaa
stc
mov
jb
shrl
mov
cs
mov
add
cli
inc
add
mov
cmp
repnz
xor
popf
xor
dec
mov
sti
lods
mov
clc
dec
rol
mov
dec
sbbb
xor
cmp
in
jbe
pop
decb
out
pop
inc
ja
insl
ret
inc
mov
mov
push
push
mov
test
jg
cmp
xchg
sub
push
xor
adc
shrl
push
ficoms
and
mov
cmp
push
mov
outsb
xor
iret
in
inc
push
ss
xlat
cltd
outsl
aaa
jbe
sbb
orl
sbb
adc
insl
mov
and
mov
out
mov
outsl
push
mov
pop
xchg
scas
mov
pop
mov
jb
es
adc
pop
sub
and
push
filds
ds
pusha
mov
adc
fcomp
cmpsb
push
inc
cs
jne
nop
fiadds
add
fdivp
adc
in
mov
push
mov
mov
sahf
clc
or
jmp
cmp
or
pop
jecxz
mov
pop
div
mov
cld
or
mov
xor
dec
aam
mov
mov
loop
shlb
cmp
call
fwait
in
stos
mov
pop
scas
mov
movsl
fsub
call
mov
aad
push
out
stos
decl
jns
incb
cmp
pop
xchg
xchg
clc
outsb
or
mov
test
cs
cmp
in
jne
jae
andb
aas
jno
int3
shlb
cli
add
repz
sbb
mov
cmc
inc
roll
dec
inc
cmpsb
jp
xchg
fnsave
push
fnstenv
aad
inc
inc
sub
sub
jmp
pop
out
push
or
adc
js
mov
fcmovnb
or
mov
outsl
mov
sbb
scas
pop
sub
std
inc
xor
push
pop
fcomps
faddl
scas
mov
mov
cmpsb
push
daa
mov
outsl
mov
mov
mov
cltd
cmpsl
cmp
aaa
mov
imul
bound
ret
mov
pop
pop
sbb
es
xor
cmp
fiadds
nop
jmp
xchg
je
loopne
xchg
fidivs
sti
sarb
rcrl
inc
add
sbb
push
cmp
pushf
notl
jg
scas
cmp
cmp
scas
idiv
daa
cmp
fadds
push
pop
jne
stc
jl
add
std
fwait
push
bound
xchg
xor
nop
adc
icebp
inc
xlat
lock
mov
in
lock
xchg
inc
sub
js
inc
pusha
cwtl
jp
push
push
js
cli
sti
sarl
imul
and
mov
je
fcomi
aaa
addr16
pusha
pop
and
add
dec
dec
fisubrl
je,pn
pop
dec
aaa
loopne
movsb
cmp
inc
stc
inc
fdivl
inc
shlb
test
mov
cmp
xorl
stos
pop
outsb
push
arpl
jns
data16
pop
mov
pop
call
sbb
inc
lcall
pop
mov
outsb
or
dec
jo
adc
int3
out
into
xor
movsb
les
scas
push
jbe
fwait
adc
int3
mov
jmp
xlat
mov
popf
push
and
push
and
jecxz
in
sub
adc
push
dec
xor
shrb
cmc
fisubl
loop
lods
add
ret
sub
jecxz
fdivrs
mov
adcl
je
test
xor
or
xorb
adc
rol
mov
in
inc
mov
push
or
mov
or
mov
jne
popf
lahf
xchg
adc
xchg
jns
int
push
mov
outsl
jo
cmp
sbb
push
xlat
hlt
test
pop
adc
or
cli
mov
mov
ljmp
push
jle
out
adc
sbb
lcall
mov
sar
mov
push
sbb
fnsave
mov
jbe
fstpl
sar
or
or
es
pop
fcmovne
mov
mov
popa
lcall
shll
push
mull
inc
push
adc
outsl
scas
or
push
push
push
xor
aam
cs
dec
stc
push
push
ret
orl
push
ljmp
xchg
or
ds
sti
mov
shll
pmaxub
push
mov
inc
test
scas
jae
push
bound
cmp
jp
out
aas
mov
or
mov
adc
and
mov
in
jne
mov
pop
xlat
les
imul
in
cmp
movsl
adc
jns
movsb
insl
cmovge
push
repz
loope
sub
ds
mov
mov
mov
test
int
push
sbb
out
jns
sbb
mov
sbbl
scas
fadds
iret
xor
leave
in
jmp
jle
or
dec
sbb
insl
test
push
mov
mov
lods
mov
int
and
aaa
pushf
enter
scas
mov
mov
punpcklbw
xor
pop
pop
sarl
add
addr16
aaa
mov
cmovge
shlb
jb
jl
mov
push
dec
sbb
sub
shlb
xor
push
jmp
js
sbb
les
mov
push
rcll
inc
ret
pop
cmovg
sbb
xchg
data16
rol
bound
cmc
ret
out
repnz
add
add
mov
push
pop
fisttps
cmp
jae
outsb
out
in
adc
adc
pminub
js
popa
insb
lea
arpl
sub
pop
clc
jge
ja
push
mov
ret
ret
sub
xchg
cmp
aad
jge
pop
sbb
adc
data16
es
or
cmp
cmp
push
loop
andb
dec
jge
inc
ja
mov
inc
out
mov
fcmovnbe
ja
out
cmp
jo
in
and
fldt
xor
shlb
push
es
or
inc
imull
xchg
mov
dec
pop
mov
outsb
or
sub
sub
mov
inc
call
rorb
sbb
cmc
add
cmpsl
pop
sub
mov
push
lods
jnp
or
mov
mov
mov
jb
jne
fs
pop
loopne
or
repz
xchg
mov
shll
push
mov
push
add
out
jbe
mov
jb
adc
nop
fstps
xor
adc
jle
cli
jne
clc
jbe
dec
shrl
ss
es
push
push
sbb
xor
lea
push
ja
cmp
scas
sahf
fisttps
in
mov
pop
pop
imul
data16
sbb
xchg
jmp
aam
repz
push
icebp
sarl
mov
mov
movsb
add
scas
mov
mov
loopne
int3
jnp
mov
pusha
ja
sahf
sub
addr16
push
adc
mov
pop
mov
gs
and
pop
push
jl
mov
inc
jae
jg
push
out
sub
clc
mov
xor
ss
xchg
fwait
cmpsl
pop
pop
out
test
push
xchg
push
js
ss
outsb
inc
pushf
mov
neg
ja
and
stos
or
cmpsb
and
std
pop
in
mov
jp
adc
repz
std
ret
jae
in
mov
inc
pop
int
inc
fsts
aam
adc
sub
push
enter
mov
dec
fdivrl
inc
adc
pusha
sti
pop
add
mov
pop
xlat
scas
loope
pushf
add
ss
addl
xor
loope
mov
add
fsubp
inc
sbb
out
cld
mov
mov
mov
mov
jno
push
or
pop
jle
insl
mov
mov
std
mov
jmp
push
scas
loopne
sbb
or
push
andl
stos
push
jne
das
jbe,pt
scas
jecxz
test
jmp
clc
mov
in
jp
inc
push
clc
cmp
jae
fisttpll
pop
ficomps
repz
fwait
dec
aas
cmpsb
mov
lods
clc
adc
xchg
mov
insl
dec
push
xchg
xor
or
sbb
stos
mov
loopne
mov
pop
in
cmp
sub
sub
lock
mov
shlb
jo
and
pop
icebp
jl
jns
fnstcw
jge
lods
dec
fldl
jno
popf
lret
and
mov
subb
flds
insb
outsl
mov
fwait
test
insl
mov
jge
dec
pop
inc
subl
loop,pt
pminsw
dec
rcl
fsubrl
pop
test
pop
rorl
push
cwtl
push
xor
sti
pop
pop
mov
mov
mov
stos
mov
mov
dec
mov
mov
pop
leave
jae
dec
xchg
gs
sbb
push
jl
push
push
or
into
jge
jl
pushf
out
sub
fucomip
movsl
push
adc
mov
call
and
ret
clc
sub
mov
add
or
jl
loope
imul
cmpsl
cmp
jae
in
jg
inc
jne
jne
aad
xchg
inc
sbb
aam
pop
addr16
aaa
jge
std
out
ds
jge
push
mov
dec
jb
in
jp
mov
test
cmpsl
adc
insb
mov
in
push
out
push
dec
xor
aaa
push
pop
pop
sub
xchg
push
aas
test
fsubrs
das
xor
mov
je
jecxz
and
test
mov
jp
lds
xchg
xor
out
pop
cmp
cmp
icebp
inc
jo
repnz
sarb
insb
shrb
mov
insb
mov
sbb
or
pop
xchg
sti
sbb
stc
stc
ficoml
push
mov
or
mov
or
fnsave
jbe
lods
push
push
shll
ljmp
scas
aaa
xchg
test
and
pop
ret
pop
sarb
dec
xchg
sbb
aam
fisubs
lahf
mull
daa
mov
call
cmp
arpl
loopne
or
xor
push
xor
mov
mov
rorb
jnp
insl
push
xchg
filds
xor
pop
sub
aam
mov
ss
cmp
mov
scas
lea
push
loopne
push
cmp
push
push
cmp
xor
mov
cmpsb
xchg
xchg
push
pop
push
mov
int3
lret
clc
sbbl
into
outsb
or
push
mov
imul
push
xchg
mov
mov
jo
mov
cmp
gs
sub
lock
inc
aam
cmp
loopne
in
dec
dec
cmp
je
sbb
or
mov
sub
movsb
pop
popa
push
xor
iret
mov
stc
aam
sub
inc
jl
mov
icebp
repz
jg
pusha
ds
pop
scas
in
cmc
loope
leave
cmp
pop
out
jne
sub
inc
js
jne
movsb
xchg
adc
outsl
popf
jl
sub
add
lret
mov
out
ss
xor
cwtl
push
and
sub
loope
cmp
push
sbb
cmpsb
out
call
jle,pt
call
mov
xor
mov
enter
aaa
lcall
push
mov
cmp
dec
icebp
fmul
pop
insl
testl
pop
sub
ss
add
mov
ss
rcll
pop
xchg
dec
aaa
mov
inc
call
es
sbb
scas
or
les
jbe
jae
aam
add
xchg
test
shl
jns
pop
jecxz
mov
ss
js
xchg
insb
out
es
mov
lock
jmp
and
scas
in
xchg
mov
lahf
mov
pop
pop
sbb
shll
test
mov
outsl
outsl
cmp
adc
cmp
cs
out
lahf
ljmp
push
ljmp
insl
dec
mov
popa
ds
pop
call
je
push
stc
loope
mov
mov
mov
pusha
add
fisubl
add
push
inc
mov
inc
push
pop
pushl
ss
xlat
jmp
add
push
cmp
sbb
out
mov
cmpl
pushf
test
fcompl
fs
nop
popa
movsl
sti
in
mov
out
lret
fdivrl
hlt
inc
insb
jns
mov
adc
fists
stos
mov
mov
xchg
pop
pop
in
push
push
mov
push
hlt
rorb
movsb
mov
inc
rcll
fstpl
or
loopne
push
test
mov
arpl
jge
testl
jmp
int
data16
cmp
imul
outsb
flds
ja
push
xor
push
cmp
loop
adc
sub
add
cli
jle
add
push
or
xorl
das
ljmp
ficoms
cli
ja
movl
lods
xchg
pmaxub
fistpll
ret
rorl
fstl
jae
add
mov
imul
cld
sbb
shlb
loopne
lahf
rcrb
loope
inc
pop
inc
lret
or
das
push
inc
jl
shll
imul
subl
jnp
sub
inc
adc
xchg
push
jae
std
out
outsb
xor
test
jp
out
hlt
cwtl
or
shlb
std
andl
fcmovnu
cmp
sbb
lcall
and
aas
inc
sbb
jg
push
sbb
fisubs
lock
jo
mov
pop
sbb
and
mov
loopne
or
scas
imul
push
sbb
jae
push
mov
push
xchg
int3
sti
out
out
dec
sbb
adc
sbb
jmp
fdivs
fwait
xchg
movlps
outsb
and
hlt
aad
je
subl
iret
fucomi
cmpsl
mov
xchg
inc
push
lahf
rcrb
mov
mov
out
fwait
push
mov
dec
test
jns
mov
xor
lcall
call
shll
jmp
nop
test
jl
aad
sbb
hlt
les
mov
xor
pusha
mov
out
popa
movsb
sbb
in
mov
mov
jno
scas
xor
push
and
or
fnstsw
xchg
js
push
jns
shll
mov
outsb
ficomps
cmp
fcmovu
imul
push
test
or
insl
push
lea
negl
adc
jmp
sbb
roll
inc
and
test
out
aas
inc
rcl
dec
nop
push
or
mov
cli
pop
shl
xor
mov
xchg
jl
paddusw
sub
xor
dec
mov
lds
test
adc
cmp
mov
mov
ljmp
sbb
mov
jge
cmp
rorb
arpl
fwait
movsl
shlb
mov
mov
push
pop
fiadds
je
pop
repz
jne
in
scas
lock
sub
out
shll
cmp
loopne
mov
loopne
loopne
lods
les
cmpsl
sbb
mov
dec
sarl
int
sub
mov
mov
dec
pop
aam
daa
inc
lahf
mov
jle
dec
inc
jl
bound
insb
sarl
or
xchg
jbe
in
lods
cs
fisttpll
dec
les
and
xchg
dec
loope
and
xchg
adc
cmc
int
outsb
ret
mov
test
popf
push
jbe
pop
cs
pop
adcb
dec
mov
outsb
pop
xor
dec
sahf
stos
pop
cli
jmp
lcall
test
push
mov
push
inc
test
lock
iret
sbb
mov
sub
push
hlt
aaa
mov
arpl
pop
jecxz
mov
shll
sub
jno
jo
pop
insb
pop
pop
movnti
push
jne
pop
aas
push
inc
sti
out
push
lds
aam
test
ds
mov
pop
push
hlt
adc
clc
inc
mov
jmp
cwtl
rclb
jl
jo
mov
scas
repz
getsec
inc
divb
dec
xchg
cs
xor
cli
dec
push
and
addl
jb
insl
inc
jg
dec
icebp
out
testl
ficoms
xor
and
add
fdivp
lea
sbbl
xor
lods
arpl
xor
pop
enter
movsl
xor
sub
daa
clc
sti
cltd
sahf
mov
add
cmp
shr
subb
add
adcl
sbb
sbb
or
sub
jmp
push
sub
pop
cmp
jecxz
sub
sub
orb
test
shrl
call
mov
sub
pop
clc
sub
popf
das
scas
dec
pop
push
adc
rorl
cmp
push
pop
outsl
insb
fcmove
loop
ja
mov
adc
sub
sub
sbb
jne
test
imul
fildll
ss
neg
push
jb
push
mov
jne
shl
lret
mov
outsl
js
mov
not
cld
inc
jmp
in
shll
cmp
sbb
push
dec
pop
loop
insl
jg
jno
inc
mov
sbb
pop
xlat
add
or
aam
test
push
fcmovb
jge
in
sbb
roll
adc
cmpsl
pop
stos
pushf
div
cmpsb
idivl
jge
and
push
lret
mov
mov
jne
mov
mov
push
fisttpll
pop
stos
cmp
rorl
out
or
mov
mov
lret
sub
roll
mov
jae
adc
lea
cmp
jb
xchg
shld
xchg
ljmp
cmp
sbb
sbb
pop
ljmp
and
insb
out
out
push
push
or
repz
lods
fiaddl
in
add
fldcw
pop
xchg
loopne
mov
mov
loope
fsub
sub
pcmpgtw
mov
mov
ss
mov
fsqrt
lret
mov
sub
inc
in
pusha
jns
xchg
lahf
jae
rcll
mov
loop
imul
push
aaa
bound
fnstcw
inc
ret
scas
pop
leave
mov
lahf
shll
jl
xor
mov
lock
fistpl
pop
mov
stos
scas
sub
mov
dec
cmp
in
call
mov
or
fxtract
mov
cmp
xor
int
pusha
mov
pop
pop
dec
xchg
xor
ficoml
cmp
sub
arpl
inc
sarl
and
stos
std
cmc
lods
and
jge
add
out
test
and
leave
pop
sub
cmp
mov
cltd
xchg
cli
pop
pop
cmp
insb
or
push
dec
inc
xchg
test
pop
std
arpl
lret
jecxz
or
rcl
loope
dec
pop
sub
jle
inc
and
mov
ss
iret
lcall
enter
sub
sbb
out
inc
outsl
das
cli
test
rcrl
cmpsb
das
adc
push
enter
push
xor
ljmp
mov
lods
jle
and
pop
movsl
and
jo
mov
js
xchg
jge
jae
repz
sarl
cmp
out
add
lds
or
test
out
adc
call
mov
lods
push
fwait
fwait
mov
jne
scas
lret
dec
mov
fstpt
mov
mov
push
xchg
jmp
lcall
sbb
and
jno
lds
scas
popa
fwait
lds
or
js
icebp
rclb
rcrb
sbb
das
loop
in
mov
inc
push
aaa
sbb
arpl
xchg
jecxz
shr
cmp
mov
dec
jne
mov
push
adc
jne
mov
in
fcmovne
addb
jae
outsb
loope
and
dec
or
inc
scas
adc
lods
ljmp
insb
pop
cmpsl
pop
mov
mov
pop
fisubrl
sti
lock
pushf
and
nopl
jbe
ljmp
imul
mov
mov
out
mov
jp
outsl
stos
ss
lret
test
mov
icebp
roll
or
shlb
dec
es
dec
mov
add
movsl
nop
and
add
fnsave
cmpsl
shrb
sbb
les
pop
xchg
and
mov
or
dec
sub
arpl
sbb
jg
cmp
inc
cmp
mov
testl
fdivp
push
ljmp
inc
pusha
fs
pop
cld
les
sbb
ret
jl
js
jmp
and
sarb
push
inc
pop
roll
or
add
push
or
lahf
mov
cmp
lods
jge
mov
xor
lods
es
mov
mov
fildll
push
sub
sbb
or
lahf
sbb
jb,pt
fnstsw
mov
jnp
lret
jl
jno
xchg
add
fsubp
mov
stos
fdivrl
xchg
mov
rorl
mov
or
jl
mov
add
js
ret
mov
sub
add
rorb
addr16
dec
lea
dec
push
xor
mov
fisttpl
je
jb
jno
fmulp
sti
mov
cmp
add
and
mov
inc
ja
jae
mov
mov
and
pop
add
adc
out
jp
push
aaa
jnp
pop
dec
inc
test
imul
out
loope
aam
adc
pop
pop
in
jbe
or
inc
setle
dec
cmp
inc
fcompl
fldl
inc
sub
call
lahf
or
xchg
mov
sbb
aam
inc
inc
int
ss
data16
or
sub
test
cmc
popw
loop
add
mov
jmp
sbb
outsb
test
fwait
ss
outsb
xchg
movsl
sub
or
call
stos
imul
cmc
mov
xchg
cmc
popf
fdivr
sub
inc
mov
sub
sbb
xlat
ret
cs
jo
push
dec
fcmovnb
mov
jns
int3
popa
movsb
ljmp
sub
in
loop
cmpsl
mov
call
add
out
pusha
jb
fcmovnu
push
rorb
into
adc
je
sbb
push
inc
pop
sub
push
mov
bndldx
mov
and
cmc
inc
scas
fdivrl
mov
mov
xor
jmp
push
repnz
int
cwtl
insb
jecxz
into
or
adc
mov
mov
dec
pop
in
gs
pop
movsb
mov
xchg
xchg
aam
std
ss
xchg
bound
or
xor
fdiv
into
pushf
xor
mov
std
cwtl
mov
sbb
scas
dec
cmp
bound
jle
dec
shrb
xor
das
or
das
jl
ds
add
lahf
imul
xor
lock
pop
outsb
push
sbb
icebp
test
sbb
ds
xlat
push
in
lcall
js
ds
aas
cmp
sub
push
fmull
fnsave
inc
loop
or
outsl
mov
test
xchg
cwtl
scas
popa
sub
sub
mov
mov
je
mov
push
enter
xchg
les
mov
mov
xchg
push
inc
das
icebp
push
sbb
je
sbb
cmc
pop
or
mov
push
adc
dec
add
mov
int3
enter
ds
bound
dec
push
insl
mov
xor
repnz
pushf
or
imul
repz
aad
add
test
cs
lock
cmp
or
or
adc
mov
rcl
inc
cmp
sbb
icebp
inc
mov
lock
pop
cs
sbb
mov
mov
clc
xor
das
and
out
mov
ficomps
mov
loope
cmpsl
in
xchg
xor
cmp
outsl
jecxz
je
add
es
bound
sbb
xchg
fdivs
inc
fwait
dec
pop
lahf
fwait
movsb
cmp
mov
lret
movl
mov
push
xor
into
in
cmp
mov
xor
rcr
in
loopne
push
int3
imul
aaa
rolb
mov
insb
mov
cmp
cmpsl
negb
add
orl
adc
cmc
iret
inc
adc
int
pop
pop
sbb
stos
jbe
ret
ja
sarb
mov
adc
fnsave
test
xor
adc
and
dec
andb
push
outsb
inc
dec
dec
push
hlt
push
out
movsl
mov
sbb
gs
cmp
cmpsb
fdivr
popf
cmp
popa
jo
mov
addr16
sarb
or
scas
and
out
jecxz
imul
push
cmpsb
and
into
cli
scas
ret
xor
jge
loop
in
ret
add
inc
xlat
icebp
in
in
push
mov
cmp
sti
push
sbb
out
add
mov
push
push
lods
lock
jo
jle
cmp
clc
add
jns
jo
sbb
rorb
loope
mov
jne
fisttpll
lcall
or
sbb
jo
mov
dec
cmp
out
sahf
xor
jmp
push
push
dec
test
cmc
movsl
fs
mov
aas
sbb
xor
mov
xor
sub
jne
push
push
sub
ss
in
mov
sub
sbb
mov
aam
push
mov
gs
lods
js
mov
and
ljmp
mov
jno
lods
aaa
inc
inc
push
mov
mov
icebp
and
jne
test
icebp
jno
ficompl
in
pop
mov
mov
popf
mov
call
pop
jno
xor
xchg
nop
mov
les
negl
push
jbe
sbb
add
lcall
push
jle
jns
icebp
sbb
pop
inc
testb
and
aad
popa
into
cmp
repnz
sub
loopne
xchg
pop
dec
cmp
adc
mov
jg
dec
push
push
jecxz
stos
in
aam
push
int3
popf
lahf
jo
ret
mov
add
aaa
mov
lcall
adc
ret
int
jge
cli
ret
pop
fdivs
xorb
jg
or
les
cmp
xlat
test
popa
mov
xchg
stc
push
cmc
ja
fidivl
or
cmp
jae
mov
xlat
add
stos
lret
dec
sbb
je
cmpsl
outsb
imulb
imul
ret
out
ds
mov
leave
lock
out
jnp
mov
or
xor
pop
adc
dec
pop
xor
les
pop
jge
scas
inc
daa
pusha
addr16
inc
mov
in
insl
xchg
mov
fimuls
out
lcall
mov
into
mov
or
mov
jne
pusha
pop
pusha
push
js
sub
cmpsb
dec
fnstsw
repnz
xchg
mov
push
pop
orl
out
inc
inc
mov
data16
and
push
dec
fisttpl
in
loopne
pop
movb
xchg
mov
xor
outsl
or
ljmp
mov
add
mov
cmp
mov
cmc
pop
fildll
push
cld
sub
jl,pn
lret
mov
mov
mov
mov
andb
cmp
imul
addl
fcoms
jge
insl
jo
insb
adc
fcomi
rcrb
bound
xchg
mov
fdivl
push
adc
dec
lea
xchg
stc
or
mov
lds
gs
lods
js
fdivr
dec
dec
push
arpl
fidivl
pop
ljmp
div
and
into
clc
jmp
xchg
push
imul
sub
pop
cmpsb
out
or
loopne
dec
sub
push
int
jmp
mov
pop
repz
jecxz
imul
dec
sbb
lock
mov
xor
sub
lock
mov
push
sarb
je
xlat
inc
rcrl
enter
push
inc
and
xchg
mov
scas
sarl
cmp
orb
rolb
jne
sub
ljmp
sbb
fadd
jmp
dec
fsubrs
xchg
pusha
pop
fldt
stc
jns
test
xchg
in
xorb
pop
imul
mov
mov
xchg
mov
loop
or
add
dec
jge
inc
or
std
xchg
insb
cmp
or
cltd
pop
mov
sbb
rclb
jns
mov
or
shll
out
popw
test
in
jns
cmp
or
imul
sahf
ljmp
jp
imul
movsl
iret
adc
in
push
cmp
ret
jne
push
das
idivl
pop
push
push
pushf
imul
popf
cs
sbb
mov
mov
pop
jl
push
fwait
sbb
jecxz
inc
fldcw
xor
push
shl
aad
ss
sub
xchg
sbb
fdivs
jo
pop
and
stos
dec
xor
dec
sub
sarl
loope
test
jge
jmp
mov
loope
mov
or
jmp
fstpt
jne
in
mov
sub
or
lods
or
insl
scas
pop
jl
fistpll
push
and
test
sbbb
loop
repnz
les
shlb
cmc
mov
lcall
push
test
jge
cmp
mov
test
jne
pop
out
mov
sbb
mov
add
ret
push
ds
fcmovnbe
fdiv
repz
add
ja
add
adc
stos
and
fcmovu
sub
mov
outsl
loope
add
jl
mov
jnp
ret
hlt
and
in
or
stos
and
cli
call
bound
xchg
push
cs
aaa
dec
fisubrl
mov
jne
inc
mov
mov
push
sbb
ss
xor
in
fiaddl
fcompl
fiaddl
std
icebp
cmp
xor
not
lahf
pop
push
enter
cmp
insl
scas
popa
adc
lock
sbb
ja
jb
sub
jns
fwait
nop
mov
cmp
cmp
icebp
shl
and
mov
push
les
lods
scas
push
and
aam
sub
aam
ret
out
outsb
jg
cmp
mov
out
stc
xchg
jnp
push
out
and
ret
push
xchg
data16
incl
push
and
pop
clc
xorl
insb
es
jmp
mov
inc
imulb
jbe
aas
adc
in
fisttpl
cwtl
push
test
push
mov
ret
lea
pop
sub
rcll
mov
stos
push
xchg
mov
cmp
int3
inc
jp
fcmovu
je
fs
jge
mov
cmc
scas
mov
push
mov
loopne
pop
fucomp
or
jp
shl
xor
cli
test
sar
shrl
mov
divb
ret
add
xor
add
xchg
mov
lcall
ds
push
aad
negl
pop
ljmp
movsb
xor
cs
add
mov
push
jb
inc
or
sbb
and
or
int3
lret
mov
mov
pop
jp
cmp
daa
mov
add
je
sahf
xor
add
sbb
cmp
push
fldl
scas
sti
add
push
sahf
mov
sub
xchg
dec
shll
lods
sahf
xchg
test
adc
mov
ret
xchg
mov
jmp
inc
out
int3
or
das
cmp
push
mov
jge
add
jno
pop
call
pop
mov
and
adc
pop
mov
jae
getsec
lock
mov
sub
sub
mov
or
outsl
xor
mov
mov
jge
jmp
outsb
add
rcrb
push
repz
rolb
add
aas
push
pop
imul
sub
ss
jp
in
movsl
sub
push
shl
mov
sti
xor
arpl
inc
test
movsl
inc
mov
and
movsl
in
sbb
sar
pusha
sub
inc
insl
lock
fs
insb
lahf
xchg
jmp
js
or
adc
or
enter
sbb
aas
scas
lcall
daa
xor
loope
test
lcall
dec
mov
pop
mov
inc
loope
mov
aas
cmpl
cmpsb
mov
mov
or
jmp
push
data16
insb
ret
jecxz
divb
imul
bound
pop
fnstsw
xor
add
dec
aaa
or
js
sbb
jecxz
mov
test
test
push
ds
ljmp
adcb
in
lahf
mov
jge
mov
enter
sbb
repz
out
into
lock
xchg
in
and
inc
mov
fsubrl
and
mov
aam
lock
jl
cmp
addr16
pop
ret
roll
mov
shll
xor
mov
lcall
enter
andl
cmp
daa
cli
je
inc
mov
mov
loope
inc
loopne
aad
mov
and
in
adc
push
jge
icebp
divl
xlat
inc
cmp
insb
xchg
sbb
addb
cltd
inc
mov
imul
inc
outsb
jg
rol
pop
dec
or
popa
jmp
clc
adc
mov
in
jns
test
xor
mov
push
jle
jl
cmpsb
cli
sbb
cmp
aam
idivl
mov
gs
js
adc
hlt
ror
adc
loop
popf
out
or
cmp
je
mov
dec
sbb
add
cld
andl
mov
or
mov
sbb
cmp
jno
les
mov
lret
insb
xchg
inc
and
dec
xor
or
cld
fs
inc
imul
sbb
pop
or
ret
push
lods
add
insl
cmpsl
addb
jle
mov
pop
sub
mov
pop
loopne
cmc
push
stc
cmp
mov
fimuls
outsb
js
jb
mov
orl
inc
cmp
mov
jecxz
xor
add
mov
or
inc
jae
mov
mov
xlat
rolb
inc
adc
pop
pop
xchg
mov
lods
test
xchg
or
inc
out
lcall
imul
cmpsl
pop
xchg
insl
sbb
stos
aas
cli
js
push
lret
outsl
aaa
or
nop
sbb
icebp
add
scas
stos
adc
in
sub
cmp
dec
inc
pop
ds
shll
jb
shrl
pop
inc
mov
int3
or
xor
fsubs
je
cld
nop
fs
inc
and
addr16
cli
pop
jge
push
scas
dec
mov
lock
push
nop
mov
sahf
bound
pop
in
dec
or
add
adc
or
adc
out
or
aam
test
loop
test
insl
mov
fs
cmp
or
cmpsl
ja
imul
or
mov
cmp
std
jb
mov
in
add
push
xor
xchg
stos
dec
fs
adc
xlat
inc
pop
arpl
hlt
and
movsl
fsubp
test
cli
lahf
sub
push
xor
mov
push
mov
mov
fisubs
clc
pop
inc
pop
outsb
pop
iret
push
testl
mov
jnp
daa
in
mov
std
cli
pop
sbb
add
clc
and
cmp
out
jo
cli
stos
cli
mov
xor
cmp
lock
sub
and
or
jl
out
in
out
inc
jp
dec
mov
cwtl
add
mov
and
icebp
mov
xchg
jns
test
sbb
jecxz
sti
outsb
add
movsb
push
mov
leave
jp,pt
sti
push
movsl
aaa
mov
mov
inc
lds
andl
mov
and
ror
std
xchg
pop
sti
adc
loopne
stos
test
adc
push
jge
inc
jmp
inc
outsl
std
cmp
push
ss
pop
enter
mov
jae
aaa
fwait
add
add
sbb
loopne
imul
jnp
add
xchg
cmp
mov
fcmovnbe
je
outsl
jb
xchg
adc
mov
aaa
jnp
outsl
rcll
pop
insl
adc
mov
adc
and
jge
movsl
in
jbe
xchg
push
push
xchg
insb
mov
lods
and
xchg
jge
cmpsb
cmp
xchg
pop
sbb
jmp
sbb
push
push
dec
and
ds
pop
cltd
or
rolb
jl
mov
push
aas
dec
outsb
ljmp
add
ss
cmp
push
shlb
loope
sub
gs
adc
jbe
cmp
or
cmp
je
sahf
jmp
push
je
out
inc
or
sub
mov
push
adc
outsl
mov
pop
mov
inc
xor
enter
fdiv
pop
push
stos
mov
out
cld
outsb
sti
mov
push
jecxz
mov
data16
in
dec
pop
inc
jg
loopne,pt
mov
and
imul
sbb
lcall
fstl
clc
xorl
pop
sbb
jae
xchg
out
iret
clc
icebp
std
mov
push
ja
subl
into
lods
push
daa
xor
push
cmpb
mov
or
push
out
loopne
xchg
in
shlb
lret
push
xchg
pop
test
fucom
leave
sub
sbb
or
xchg
or
ss
sbb
dec
inc
dec
jnp
ss
push
push
jecxz
pop
jg
loope
scas
mov
fidivrl
or
xchg
jo
hlt
fucomi
sahf
push
mov
in
lods
dec
leave
sti
sbb
popf
sahf
inc
jno
xchg
sti
imul
sub
fldl
fmull
mov
pusha
cld
xchg
inc
inc
cmp
sbb
sub
xor
cmc
jne
or
lret
and
mov
inc
or
mov
mov
or
push
jns
je
test
cmp
daa
xlat
sub
mov
mov
pushf
test
pop
out
std
mov
sbb
or
pusha
out
sbb
repnz
xlat
add
or
out
mov
pop
dec
add
pop
jl
fistpl
shlb
dec
cmpsb
adc
imul
push
aaa
sbbb
imul
or
pusha
cltd
and
xchg
lods
xchg
adc
rolb
shrb
insb
neg
sub
out
sbb
mov
xchg
popa
insl
arpl
test
adc
add
pop
cmpsl
sbb
xchg
fisubl
mov
imul
cltd
icebp
inc
cmp
xor
mov
aaa
js
cmp
lcall
push
xlat
add
inc
dec
mov
ret
cli
add
pop
negl
mov
gs
or
jns
mov
sub
dec
dec
or
add
fwait
mov
pop
jne
xchg
cmp
or
cmp
movsl
lahf
mov
adc
xchg
jbe
pushf
pop
mov
fwait
rcl
movsl
les
mov
mov
js
lea
add
insb
mov
pop
fwait
jmp
imul
inc
sbb
movsl
cmc
les
insb
gs
inc
push
mov
lock
jle
dec
jbe
aam
or
arpl
xchg
pop
fldenv
push
ja
inc
idivl
jp
inc
mov
adc
in
cmp
sahf
movsl
mov
fisttps
out
cs
sub
pop
mov
xchg
outsl
loopne
ret
test
jl
rorb
cmpsb
ljmp
xor
mov
fs
ljmp
push
pop
jae
out
xchg
push
mov
xor
mov
pop
mov
lcall
mov
and
mov
insb
es
pop
sbb
xor
outsb
mov
push
lret
mov
mov
mov
jnp
push
ret
movb
int
je
jo
sbb
jmp
test
xor
dec
jg
lock
push
and
aam
unpcklps
das
inc
stos
sub
out
push
mov
mov
pusha
loopne
mov
aam
je
shr
jle
roll
mov
inc
fwait
scas
test
dec
pushf
push
mov
jecxz
sbb
lock
aad
sub
imul
mov
loope
push
jbe
je
jb
adc
dec
pop
mov
sub
jb
mov
fwait
insl
imul
bound
pop
cmp
mov
mov
repnz
mov
push
int3
lods
push
in
data16
clc
cmp
cmpsb
and
sub
fdivrl
cmp
or
mov
pop
mov
mov
movsb
pop
jae
jne
mov
mov
stc
add
daa
sbb
mov
fmuls
mov
xchg
dec
lea
mov
pop
js
or
rorl
sbb
mov
dec
or
fildl
add
arpl
fsubrl
adc
test
in
aam
adcl
fcmove
mov
call
pop
stc
mov
sahf
lods
pop
adc
jo
pop
xlat
xchg
out
xlat
je
cmp
lea
cld
pop
lcall
loope
pop
mov
hlt
scas
push
je
push
xchg
xlat
pop
xor
rorb
sahf
fadd
jmp
sti
mov
and
xchg
mov
jmp
mov
xor
push
mov
add
fisubrs
xlat
inc
aas
or
cmpsb
mov
lock
sbb
lea
xchg
hlt
ret
add
jge
clc
cmpsl
ja
popa
in
fisubl
push
loop
push
flds
sbb
stos
test
xchg
inc
inc
fs
xor
lahf
int3
pusha
dec
hlt
jmp
in
cli
push
xchg
pop
mul
mov
xor
lods
push
sub
scas
cmpsb
nop
lret
movsl
lahf
rorb
add
dec
mov
pop
incl
mov
testl
pop
sub
mov
imul
sbb
lcall
insl
imul
pop
mov
pop
jno
mov
adc
mov
arpl
jnp
jne
mov
pop
or
stos
lds
scas
std
mov
adc
in
jnp
jns
mov
sub
outsb
adc
fcmovnbe
push
add
fcomi
xchg
lods
pop
mov
or
int3
mov
andl
ss
inc
adc
in
xor
mov
imul
pop
cmp
bound
mov
cmp
xlat
shll
ret
ljmp
dec
xorl
push
cli
scas
pop
push
test
inc
mov
sti
clc
ds
push
das
inc
mov
and
mov
mov
insl
sbb
sub
lcall
cli
mov
out
test
pop
jo
pop
imul
rcl
jae
xor
test
aam
icebp
mov
jmp
mov
jecxz
push
rcrb
pop
xorb
mov
or
loop
jnp
aam
pop
insb
insb
lock
fs
scas
or
lahf
jmp
lods
add
mov
fldenv
xchg
std
xorl
loope
jae
rorl
sub
ja
enter
rol
add
lahf
or
push
leave
inc
fcmove
sbb
push
mov
out
inc
bsf
sbb
xor
pop
sbb
pop
pop
mov
sub
fucomp
inc
pop
or
mov
push
loopne
jg,pt
mov
cmpsl
fsin
icebp
les
fdivrs
popf
inc
push
in
or
fnsave
inc
rcrb
fldt
xchg
push
sbb
inc
push
fidivrs
mov
push
fisttpll
inc
insl
mov
or
icebp
out
ds
leave
push
mov
adc
dec
nop
fidivrs
scas
pop
push
mov
adc
jge
or
pop
enter
push
adc
push
insl
testb
ficompl
dec
dec
cmp
out
cmp
mov
lahf
pop
aad
out
adc
shrb
mov
add
adc
das
pusha
arpl
jb
sub
fdivs
cld
adc
mov
loopne
jo
cmp
insb
push
add
fsubrl
cmp
das
imul
and
push
adc
or
daa
out
cli
clc
mov
psubusw
neg
ss
cmp
or
sbb
lea
jle
jb
dec
stc
gs
mov
or
xor
lods
mov
jmp
push
call
je
fiaddl
push
jmp
ret
testl
and
mov
rorl
mov
xlat
cs
pop
xchg
sbb
xchg
cmp
mov
add
or
mov
adc
dec
ret
loopne
and
dec
ljmp
fimull
mov
sub
aad
jmp
push
notl
jge
jp
sbb
das
nop
mov
sbbl
mov
cmp
mov
fbstp
mov
mov
cli
push
and
mov
sub
test
fistps
mov
rolb
ja
fisubrs
clc
xchg
popf
pop
mov
arpl
int
add
sub
mov
mov
popf
aad
and
xor
adc
cmp
popf
daa
mov
int3
lock
xor
loop
dec
rol
movsb
cmp
ja
jecxz
pop
cmp
inc
insb
mov
and
fyl2xp1
dec
jg
sub
pop
aam
outsb
out
inc
and
xor
xchg
fidivrl
jle
fnstcw
xor
jl
or
mov
lcall
in
xlat
mov
add
push
xchg
push
cs
jecxz
aas
push
dec
mov
jb
icebp
adc
jo
insb
in
lds
xlat
lods
ror
mov
sub
aaa
xor
cmp
out
lods
test
sahf
jg
mov
xor
cmp
stos
mov
sbb
orb
cmc
jo
add
pop
test
dec
les
mov
sub
jbe
call
std
outsl
pop
push
mov
movsl
mov
jo
pop
in
or
mov
std
mov
xchg
cmp
xchg
jmp
in
divb
lods
int3
adc
mov
xor
out
adc
in
pushf
xchg
shll
mov
out
rcr
dec
pop
jecxz
fwait
push
je
mov
mov
mov
dec
lock
popf
and
adc
push
lock
xchg
fisttpll
jl
add
roll
lods
cwtl
mov
pop
add
jno
call
push
aaa
pop
mov
pop
jge
shlb
cs
adc
pop
mov
xor
repz
out
mov
pop
pusha
push
in
pop
mov
pop
push
xchg
cmp
sti
sbb
xorl
jno
pop
scas
cmp
outsb
add
sar
fsubs
faddl
fdiv
inc
jae
hlt
push
and
sti
push
lea
pop
dec
int
lahf
or
mov
mov
mov
inc
cmp
dec
xchg
xchg
push
mov
scas
gs
imull
lds
pusha
adc
xchg
gs
outsb
mov
cli
es
cmc
inc
jecxz
aad
or
mov
les
loope
push
sbbb
sbbl
subl
aas
loop
xchg
xchg
push
mov
test
ret
stos
aas
sub
psubsb
cwtl
int
mov
adc
and
cs
sbb
adc
jae
popa
popa
shlb
xor
mov
push
xor
clc
movl
mov
push
loope
lock
mov
xor
mov
dec
cmp
xchg
daa
jns
bound
mov
fdivrs
sarl
lods
loopne
loop
imul
js
cmp
pop
fs
mov
lock
push
das
and
add
and
add
dec
mov
clc
loope
stos
mov
and
mov
lea
mov
xor
mov
loopne
pop
lock
sub
popa
insb
mov
js
and
mov
pop
testl
mov
inc
fnstenv
adc
inc
fs
mov
dec
mov
gs
push
clc
add
cmpsl
adc
push
sbb
pop
into
enter
mov
and
jnp
mov
sahf
out
rorb
mov
in
out
jl
xor
addr16
pop
dec
inc
shll
stos
loopne
mov
jbe
and
fldcw
mov
push
and
push
inc
mov
jge
push
adc
aaa
rcrl
and
add
pop
inc
jecxz
or
xor
idiv
xchg
push
icebp
adc
out
fsubl
push
ret
xchg
enter
test
lahf
push
lcall
lldt
addr16
xor
movhps
lea
imul
pop
rcr
mov
push
sub
lea
cmp
mov
add
or
movsl
pop
xchg
int3
lret
js
push
popa
mov
dec
nop
loop
and
cltd
movq
jle
js
lcall
jmp
mov
push
std
rorl
mov
cmp
cli
testl
pop
sti
lock
sti
add
pop
xlat
add
jecxz
fnsave
mov
push
ds
icebp
roll
push
fstps
outsl
sbb
xchg
jbe
dec
add
cmpsb
xlat
inc
je
loop
mov
movsb
mov
loope
adc
repnz
popa
aad
push
mov
int
and
mov
mov
std
mov
mov
pop
dec
inc
pop
imull
cmp
pop
jno
push
push
call
lds
jb
push
hlt
jb
aas
fisttpll
les
dec
aam
in
jb
and
xchg
mov
mov
pop
js
cld
in
xor
insl
fcmovu
xor
pop
sbb
dec
lods
mov
scas
pop
or
add
ret
pop
or
or
out
das
add
xor
aaa
sti
mov
xchg
jnp
cmc
les
jae
filds
out
lods
xor
mov
pop
packuswb
push
std
lret
dec
cmc
mov
jle
cmpsl
mov
lock
cmp
inc
aad
push
fisttpll
out
pop
jno
sbb
std
inc
lods
xor
fildl
adc
out
ficoml
lods
mov
mov
mov
sub
mov
cmp
inc
push
mov
adc
subl
fimuls
std
adc
push
stos
cld
adc
aas
inc
mov
int
dec
sub
sbb
jecxz
pop
and
adc
xor
xor
test
mov
jl
sbb
or
xchg
xlat
imul
push
icebp
imulb
push
pop
pop
cs
rcll
loop
test
out
aam
cmpsl
xchg
push
dec
inc
mov
pop
or
imul
mov
imul
push
jecxz
push
sarb
mov
jmp
leave
loop
hlt
sbb
fiaddl
lahf
adc
pushf
shll
movsl
mov
std
cmp
inc
loopne
adc
or
xchg
xor
rclb
jg
and
fisubl
mov
aaa
in
stos
loope
xchg
fidivs
sub
cmp
jmp
mov
aas
inc
mov
or
cmp
pop
hlt
ja
and
cmp
adc
dec
nop
push
xlat
mov
fwait
mov
ss
push
mov
sbb
cmp
add
pop
sbb
adc
popa
popa
loope
push
fiadds
mov
jmp
outsb
int
aam
cld
leave
aad
clc
sub
xchg
or
call
cmp
add
adcl
cmp
cld
or
cld
xor
inc
sbb
inc
fisttpl
xlat
outsl
cmpsl
int3
loopne
decl
xorb
inc
cmp
nop
sbb
sub
sub
ret
stos
jae
mov
cmpsl
iret
cld
rorb
mov
rcrb
adc
sahf
clc
cmp
push
jmp
jns
pop
lret
or
dec
lea
popf
mov
mov
xchg
mov
out
shll
addr16
pop
xlat
mov
jns
lret
cld
aam
shl
into
and
cmp
jg
jo
mov
cmp
pop
paddsb
pop
or
sahf
pusha
imull
push
sbb
in
daa
mov
jo
dec
inc
lock
ret
out
insl
xorb
arpl
fisttps
aad
pop
sub
lcall
sub
and
imulb
pusha
test
int3
out
mov
pop
lea
lds
fldt
je
nop
pop
test
pop
jmp
and
fnstsw
sbbb
add
fcmovnbe
fnstsw
ds
lret
rcrb
mov
or
sti
sub
cmp
jecxz
dec
ja
leave
inc
and
push
sbb
mov
jmp
cmc
sub
xchg
cmp
ficompl
cmp
pusha
dec
mov
pop
in
hlt
test
jge
or
cmp
or
lock
leave
push
dec
dec
cld
and
jnp
fwait
negl
sbb
fildl
fsubrs
std
call
or
jg
sub
inc
cmp
popf
jno
xor
loope
stos
cmp
imul
ds
fimuls
movsb
in
xor
jae
pop
lcall
cwtl
in
mov
xor
jg
mov
xchg
adc
jae
sbbl
fldl
mov
loope
insb
dec
ret
ret
lods
jge
xchg
int3
push
and
mov
js
or
cltd
push
push
popf
push
dec
jno
add
mov
loop
add
mov
js
shl
and
shr
repz
nop
push
scas
sub
inc
sbb
mov
jecxz
sub
mov
pusha
notl
xchg
cld
inc
testb
push
les
pusha
adc
sbb
js
fcomi
lods
mov
and
inc
lods
fdivrl
dec
add
hlt
and
in
test
mov
rcrl
in
lock
mov
xlat
aad
aaa
je
adc
pop
fwait
adc
push
mov
popa
shl
mov
insb
in
dec
xchg
aad
pop
mov
std
cwtl
dec
lret
adc
cwtl
cmp
jmp
cld
stos
cmp
pop
mov
call
adc
rolb
hlt
inc
jl
or
mov
xchg
ret
fsubs
addr16
dec
aas
into
ds
xchg
pop
jp
or
push
adc
mov
adc
xor
cli
clc
xor
popa
sti
lea
cmpb
push
std
in
repz
cmp
out
inc
inc
cld
sub
loope
mov
imul
mov
pop
adc
mov
push
decb
jge
clc
jle
xchg
sub
mov
sub
sub
cmc
pop
dec
in
pop
mov
pop
or
or
push
xchg
mov
test
lock
cmpsb
or
push
mov
add
fwait
dec
js
out
xor
mov
loope
inc
push
mov
aad
mov
lds
cltd
data16
lock
inc
push
adc
lahf
sub
call
aas
in
mov
adc
sub
aam
jp
mov
sarb
or
pop
std
test
mov
add
je
hlt
or
ja
adc
and
push
xchg
fdivs
mov
dec
sbb
dec
jmp
mov
xlat
sub
aad
in
inc
jl
mov
sub
clc
stc
into
mov
sub
call
jnp
inc
pop
ja
rcrl
outsb
pop
add
add
les
aaa
sub
hlt
xchg
sarl
arpl
xlat
shrb
or
xor
pop
lds
cmpsb
pop
outsb
js
pop
jge
movsb
jl
mov
dec
daa
es
push
dec
jl
sbb
pop
insl
dec
loope
lds
lds
dec
dec
arpl
repnz
inc
aaa
icebp
cld
ja
jb
sub
lock
cld
adcb
inc
rorb
in
clc
add
pop
mov
cli
stos
dec
mov
mov
fnstcw
mov
in
mov
pop
jge
clc
orl
divb
cmp
aas
jno
inc
call
fidivs
jo
mov
push
push
jecxz
pop
in
and
mov
ja
jo
lea
lret
insl
scas
arpl
out
pop
icebp
pop
pop
movsb
fisubrs
sbb
mov
es
outsl
shrl
popf
jecxz
sub
dec
iret
jmp
in
test
loopne
mov
xchg
push
out
int
outsl
jnp
lock
cmc
cmp
out
dec
push
scas
and
push
es
add
or
adc
pop
sub
fnstsw
or
mov
decb
mov
daa
adc
jb
pop
sbb
adc
or
scas
mov
mov
xchg
lds
mov
clc
clc
jmp
dec
jmp
inc
stos
sbb
shrb
mov
lahf
mov
lahf
enter
std
bound
mov
in
dec
daa
fwait
in
hlt
adc
push
push
fcmovnbe
addr16
cmp
inc
mov
sub
sarb
jecxz
test
mov
movsl
mov
and
fdivrs
shlb
js
add
sbb
mov
mov
imul
jmp
pop
std
or
xlat
push
loopne
cli
out
push
pop
je
sub
int3
xor
jmp
cmp
inc
mov
push
jnp
aas
pusha
outsb
jns
mov
xchg
das
push
adc
jns
sbb
mov
es
sbb
pop
mov
scas
mov
sbb
fistpl
adc
xlat
into
jg
orl
xor
add
lds
jbe
add
daa
in
push
popa
mov
fnstsw
test
and
jb
push
sahf
pop
je
xchg
daa
insb
mov
jne
mov
or
aaa
icebp
aad
std
dec
hlt
out
jge
gs
push
xlat
addr16
mull
cmpsl
jge
xchg
or
scas
ljmp
xor
xchg
into
sbbb
shlb
test
or
sbb
cmp
movsb
hlt
pop
pop
pop
bswap
test
test
jo
ficoms
mov
mov
in
mov
xor
inc
mov
mov
jae
std
xor
cwtl
sub
push
add
xor
insb
insb
xor
loopne
jbe
adc
cmp
xchg
or
int3
pusha
xor
jle
push
sti
inc
jns
rclb
push
adc
add
dec
pop
mov
sahf
mov
inc
dec
sub
and
imul
out
insl
sbb
jb
test
hlt
ret
add
imul
mov
mov
sbb
nop
int3
mov
mov
daa
jae
mov
or
dec
dec
pop
imul
hlt
cmc
jno
gs
mov
das
call
nop
dec
mov
add
add
pop
imul
lcall
mov
fwait
xchg
je
mov
es
dec
out
lock
jge
test
es
aad
sti
cmpsb
xchg
or
sarl
aad
sbb
pop
sub
jo
jb
frstor
jnp
or
xor
cs
adc
mov
cld
jns
pusha
inc
mov
dec
cmpsb
aad
inc
cmp
pop
loope
mov
ret
lret
jle
call
aad
aaa
push
add
daa
xor
mov
fs
fucomi
push
mov
push
les
mov
mov
xor
jle
inc
fstps
test
cmpsl
mov
andb
sbb
dec
or
loopne
sbbl
pop
mov
pop
xchg
outsb
mov
add
or
inc
iret
stos
fwait
push
inc
mov
push
sti
loope
xor
cmp
mov
mov
in
jbe
dec
ret
das
insb
and
push
mov
sbb
jmp
lods
push
stos
cs
dec
scas
sbb
add
jmp
ds
out
jp
bound
xchg
and
push
aam
dec
or
mov
jle
adc
ret
imul
xchg
mov
in
mov
pop
fcoml
sbb
imul
loope
push
outsl
xchg
scas
jmp
and
jno
outsl
fldcw
xlat
or
inc
rcrl
or
sub
mov
shlb
outsl
inc
sarl
sub
add
test
adc
cwtl
jl
fmul
dec
push
sbb
outsb
adc
mov
mov
xchg
jl
and
fadds
cmpsb
xorb
inc
lret
push
mov
bound
ror
jo
dec
cld
push
fsubrl
das
fidivrs
out
outsb
sbb
fprem1
test
fidivl
lea
xchg
mov
jnp
cmp
add
push
sub
push
fucomp
xchg
sahf
and
sub
jp
test
repnz
mov
pop
out
sbb
mov
icebp
mov
into
sbb
in
lods
into
jge
fldl
push
sub
pop
iret
fwait
mov
add
xor
pop
add
inc
arpl
idivb
scas
insl
shl
test
in
fwait
mov
or
cmp
stos
arpl
fstpl
cmpsl
dec
jns
or
mov
fiaddl
les
sbb
outsb
orl
or
add
add
outsb
test
test
adc
into
pop
in
into
test
xchg
aas
aam
scas
add
pop
dec
fnsave
or
fstpl
stos
stos
lea
loope
pushf
stos
and
ds
push
ja
sbb
aas
dec
arpl
and
ljmp
jp
cmp
and
mov
cmc
or
dec
cli
push
ds
pusha
movsb
ret
xchg
pop
cmc
push
jb
popf
fisubl
std
ljmp
fdiv
scas
psubusw
icebp
aam
daa
pop
loop
mov
sub
addl
arpl
test
sbb
arpl
dec
gs
lcall
jb
xor
imul
loop
fstl
into
and
or
je
jo
popa
inc
or
outsb
movsb
cmp
addr16
mov
xchg
sti
push
sarb
addr16
push
and
push
femms
jl
sbb
mov
sbbb
pop
jmp
mov
jnp
mov
push
out
lock
mov
lds
mov
movsl
xchg
xor
mov
scas
cmc
sbb
repz
outsl
or
in
es
daa
jb
imul
inc
ret
push
cmpsb
sub
mov
adc
rolb
and
cld
jmp
inc
cmp
push
pop
jge
scas
stos
leave
pusha
dec
aad
mov
js
daa
sub
ljmp
pop
push
xlat
sarb
jne
movl
push
ds
loop
cs
jle
les
mov
mov
arpl
inc
fldt
mov
sbb
xchg
lods
mov
sbb
sbb
lods
jns
jmp
pop
jle
push
daa
ljmp
pop
fnstenv
outsb
sub
mov
jbe
mov
adc
in
push
add
fs
fisttpll
xlat
adc
jl
in
loop
shl
push
es
cmp
cmp
add
ja
pusha
retw
mov
inc
add
cld
add
fnstsw
pushf
sbb
cmc
cltd
into
mov
mov
jbe
out
dec
ret
arpl
mov
js
xor
test
push
jno
xor
jecxz
mov
adc
push
pop
ret
bndldx
inc
shll
ljmp
xlat
outsb
in
fcmovnbe
test
xchg
jl
jo
add
sbb
mov
mov
in
mov
jbe
test
jle
ror
mov
push
aad
ljmp
shlb
je
mov
test
nop
sub
adc
fsubrl
les
mov
stos
insl
ret
imulb
mov
les
mov
push
pop
lods
mov
jle
daa
pop
inc
pop
pop
xchg
xchg
dec
out
sbb
adc
cli
mov
pop
mov
mov
pop
fdivrs
rol
xor
xchg
test
iret
subl
mov
in
ss
inc
pop
test
fsubrl
cmp
and
lods
insb
lock
cmp
mov
lock
out
popf
sub
inc
pop
jg
xchg
movsb
jns
sub
mov
pop
pop
mov
test
cmp
scas
pop
shlb
or
into
lcall
or
jne
fs
jne
jmp
xchg
pop
rcll
jge
hlt
ret
jbe
insb
mov
sbb
aaa
je
int3
mov
xchg
mov
xchg
les
jbe
mov
fs
push
pop
arpl
call
mov
add
xor
out
jle
ljmp
pop
mov
fwait
cli
test
xchg
dec
js
jl
sub
jle
mov
lods
mov
push
add
mov
mov
test
icebp
lret
xchg
negl
mov
xchg
add
mov
jne
pop
out
pop
xchg
cld
and
and
pop
pop
or
stos
dec
aaa
sub
testb
inc
call
aas
mov
cmpsl
push
jp
pushf
ljmp
mov
addr16
sub
sub
ds
mov
push
ds
mov
in
mov
sahf
mov
and
add
sbb
insl
hlt
int3
ret
jle
cltd
jp
push
fwait
ret
fdivs
fstp
stos
cmpsl
pop
cmp
in
bound
fwait
insb
jecxz
mov
iret
pop
scas
push
loop
xchg
pop
and
mov
xor
cmp
jae,pt
mov
jecxz
push
aam
das
jl
pop
in
pop
push
mov
cmc
nopl
inc
push
out
pop
out
outsl
mov
push
ror
mov
adc
xor
mov
jg
ljmp
add
add
lock
stos
rclb
add
fwait
inc
int
pop
jo
mov
insb
pop
js
dec
pop
out
inc
push
dec
jge
hlt
jmp
cli
lahf
outsb
sahf
aaa
adc
les
cmp
pop
mov
sbb
adc
sbb
jne
lret
dec
cmpsb
adc
daa
xor
imul
add
push
outsb
popa
jecxz
lds
mov
outsb
scas
shrb
decl
test
xor
xor
mov
movsb
mov
or
in
jnp
xchg
bound
adc
fisttpl
scas
jo
lock
aad
sbb
mov
xlat
jmp
xchg
sub
push
cmp
adc
cli
mov
cmp
lret
in
inc
pcmpeqb
mov
clc
push
pop
imul
pusha
push
daa
adc
fcmovnbe
inc
aaa
gs
out
cmpsb
sbbb
idivl
push
adc
cli
popa
or
out
mov
push
add
into
cmp
mov
mov
cli
mov
pop
jp
add
nop
jl
adc
fisubs
mov
fildl
arpl
repz
cmp
inc
arpl
xchg
sbb
jmp
push
and
cmpsl
ret
xor
or
shr
inc
shrb
loope
add
insl
mov
pop
cli
push
push
mov
mov
sub
cmp
clc
loope
push
fisttps
inc
push
xor
mov
xchg
cmp
push
sub
rorl
dec
sub
mov
and
aas
cmp
jmp
icebp
cmpsl
sbb
ja
out
insb
jge
outsb
test
roll
mov
cld
popf
stos
fdivr
cltd
cmpsb
pushf
xchg
jle
ret
or
sub
mov
arpl
push
jne
sub
dec
pop
mov
and
adc
pop
mov
sbb
sahf
pop
mov
sub
in
cmp
cmc
sti
pusha
jae
push
pop
fwait
hlt
add
push
imulb
cmc
mov
pop
xlat
sbb
aas
pop
loopne
movsb
mov
mov
jp
mov
adc
aad
cmp
dec
ror
or
mov
fldl
cmc
cmp
dec
cmp
mov
or
cmp
test
xchg
hlt
not
add
movsl
ficompl
std
mov
jne
lods
inc
or
mov
and
insb
test
adc
jge
rcrb
adc
test
mov
testl
inc
rcll
xchg
subb
scas
aas
mov
cmc
ja
js
mov
loope
fnsave
mov
mov
rclb
xchg
mov
loopne
xchg
mov
jne
cmp
jmp
push
push
xlat
nop
jmp
xor
xchg
test
clc
insb
jne
mov
sbb
aas
jb
aam
mov
sbb
mov
jl
das
inc
add
pop
andb
stos
push
push
test
test
or
out
fldt
pop
lock
aam
gs
call
jne
and
mov
cli
pop
push
orl
push
inc
imul
jmp
and
sub
push
inc
xlat
jns
xor
xchg
std
dec
test
and
cmovs
pop
jl
mov
push
call
out
out
in
clc
jbe
sbbb
push
jno
cmpsb
lret
jb
imul
out
sbb
out
sti
mov
popf
xchg
cmc
roll
and
fisttpll
shrl
aad
push
mov
or
jmp
xchg
cmp
sar
pop
mov
rcll
mov
and
fldl
sbb
or
aas
add
fld1
hlt
shl
jg
mov
ret
in
sub
notb
dec
inc
mov
inc
jns
test
aam
in
pop
cld
pop
jl
loope
fsubrp
sahf
ds
push
adc
cmp
pop
dec
mov
dec
xor
in
cmp
aam
js
aas
clc
imul
mov
jne
loop
cmp
iret
mov
pop
pop
pop
aam
xchg
add
jge
jnp
sbb
ja
push
or
pop
pop
adc
mov
jbe
sbb
out
mov
cmpsb
arpl
jae
test
call
addr16
cmp
dec
bnd
pop
pop
push
pop
mov
rorb
mov
pop
fwait
fsts
rcl
repz
addr16
fcmovnbe
cli
dec
notl
fstl
pop
iret
stc
xchg
jns
loop
insb
jo
ss
lods
cli
xor
out
out
push
or
popa
in
inc
or
or
js
sbb
pop
iret
into
lods
stos
call
fidivrs
daa
pop
adc
cmc
push
pop
adc
dec
bound
push
imul
pop
jp
enter
ss
mov
push
add
sbb
cmc
aam
sbb
stos
lods
mov
xorl
clc
cmp
xchg
sub
xchg
push
push
ficoml
mov
stos
cmp
xchg
push
lfs
jbe
mov
int3
sub
jbe
icebp
hlt
jecxz
sbb
aad
pop
mov
dec
xchg
test
into
inc
ret
push
movsl
cmp
mov
or
and
imul
into
pop
js
dec
iret
inc
mov
push
loopne
xchg
std
rcrl
adc
push
cmp
idivb
mov
rcl
push
pop
push
xor
ffree
pop
pop
pop
sbb
cltd
stos
sti
fmulp
push
adc
jo
xchg
mov
rcrb
fadds
and
idivb
mov
cmp
in
and
scas
add
xchg
cmp
pusha
ret
out
or
xor
jmp
popa
lods
adcl
jbe
hlt
stos
xchg
pop
pop
out
push
lahf
push
add
shrb
jp
jmp
icebp
fldl
ret
fucomip
popa
sti
pop
add
xchg
es
push
sar
mov
mov
mov
or
cs
cmp
mov
dec
subb
push
enter
loop
ds
pop
jne
and
test
dec
adc
pop
mov
data16
pop
jns
test
clc
out
jg
push
ret
bound
scas
andl
add
add
je
mov
rol
fstpt
jns
stos
pop
inc
loop
jp
scas
mul
lahf
xchg
xchg
and
scas
fiadds
sbb
mov
cmpsl
leave
lret
jecxz
mov
cmp
lds
add
pop
fwait
test
xor
int
cmp
and
mov
cmpsl
mov
push
or
sbb
int
xor
stos
mov
or
repnz
sarl
and
jl
repz
ja
mov
cli
jbe
cmp
popa
mov
inc
pop
pop
push
cmp
sbb
xlat
test
roll
fldl
in
mov
jmp
das
loope
xchg
ret
push
mov
push
and
push
xlat
xchg
cmc
pop
push
sub
jmp
mov
mov
ljmp
inc
ret
pop
and
mov
mov
outsb
daa
aas
mov
int3
xchg
jmp
fidivrs
jg
dec
je
pop
js
jnp
arpl
sbb
mov
mov
js
int3
ds
outsb
jae
fstpt
mov
jl
and
int
mov
mov
cmp
jne,pn
cmpsb
inc
pop
loop
stos
inc
inc
jp
cltd
add
jno
push
jne
jg
jmp
in
mov
cmp
cmp
addr16
orb
std
cmc
mov
fisttpll
insl
mov
aaa
dec
xlat
icebp
add
mov
mov
incb
call
and
mov
into
jl
cmp
fstl
fisttps
ja
mov
insl
lret
mov
lods
bound
sti
aam
push
scas
scas
xchg
lds
ret
sub
fndisi(8087
sbb
and
nop
xor
cmp
notb
sub
cmp
ror
lds
sub
jno
pop
sbb
shlb
ficomps
inc
dec
xor
xchg
ret
and
lods
xchg
push
cmp
loopne
cmpsb
loop
or
cli
pop
lods
sti
inc
fdivrl
adc
cmc
pop
iret
xchg
sbb
insl
test
mov
fstl
pushl
push
pop
icebp
lods
ficomps
inc
lahf
inc
add
movl
int
cmp
xchg
rclb
dec
aas
ficomps
push
test
mov
notb
jecxz
inc
fiaddl
sbb
sbb
cli
js
mov
jmp
mov
je
pop
add
jge
outsl
push
clc
ficoms
ss
subb
cltd
push
pop
sbb
out
mov
pop
add
add
mov
ret
push
lock
jno
test
cli
iret
scas
ret
shlb
pusha
and
jno
mov
cmpsl
mov
test
nop
subl
lea
xorl
adc
mov
jo
adc
mov
cmp
mov
cmp
enter
insl
test
fdivrl
adc
dec
fwait
test
push
mov
sub
dec
lock
cmp
stos
sub
aam
insl
iret
rol
scas
stos
jecxz
in
mov
jecxz
jnp
stos
mov
jbe
sti
xchg
mov
adc
mov
or
jno
lret
and
mov
out
inc
pop
dec
lret
inc
mov
aas
jne
mov
or
lcall
or
loopne
fcmovb
sub
aam
xor
xchg
mov
jae
sbb
jl
push
mov
cmpsb
pop
pop
ds
cwtl
fimuls
xchg
xchg
test
les
sbb
jb
push
shll
loop
cmp
add
popa
cli
jmp
dec
aad
mov
stos
imul
xchg
push
adc
cmp
mov
pop
dec
jle
cmp
push
or
cmc
push
jmp
or
push
push
shl
inc
xlat
xchg
mov
dec
cmpsl
sbb
sbb
das
js
pop
lock
sar
clc
sbb
cmc
push
testl
cld
sub
rcrl
pop
aaa
mov
jno
xchg
orb
fstpl
jge
sbb
stc
sbb
xchg
push
scas
jle
sbb
jl
emms
rcr
xor
jne
or
fdivl
fnstsw
mov
or
loopne
sbb
addr16
das
jb
ret
loope
divl
and
insl
rorl
popa
push
sbb
mov
mov
jecxz
dec
mov
xor
sub
push
pop
cmp
sub
push
dec
mov
or
mov
inc
cli
or
add
lods
mov
fisubrl
adc
inc
or
fadd
and
fwait
cmpsb
mov
arpl
cld
mov
js
bswap
icebp
xchg
xchg
sbb
test
shr
and
shl
ds
sbb
pop
scas
xorl
inc
or
pop
xor
cmc
pop
sbb
sub
lock
mov
loope
in
push
inc
ret
repz
push
sbb
lods
cmp
jge
and
sbb
pop
cld
mov
in
into
loopne
loop
test
push
mov
pop
sbb
aaa
loopne
sarb
xchg
loopne
in
faddl
sbb
test
and
lock
das
push
lret
pop
pop
fdivl
sub
xor
or
jae
fisttps
adc
xor
in
mov
sbb
je
push
pusha
mov
dec
sbb
ret
adc
lods
xchg
test
cld
call
outsl
jns
push
pop
jae
xchg
mov
jae
das
scas
std
clc
xchg
cmp
aad
rorb
ds
shr
push
jge
imul
inc
jge
xchg
mov
stos
loope
popa
addr16
sub
cmp
mov
jecxz
rcl
arpl
out
lods
sbb
xchg
mov
stc
jb
ds
js
xchg
mov
mov
adc
jo
inc
mov
clc
js
imul
pop
sbb
jecxz
mov
lahf
mov
or
pop
je
cmp
cmp
lds
loopne
sarb
btcl
pop
das
shll
in
lea
cmp
or
adc
push
aad
loopne
int
xorl
pop
jg
sbb
dec
xor
jno
neg
icebp
test
in
mov
and
leave
adc
icebp
nop
sahf
lret
pop
dec
movsl
xchg
jle
adc
in
sbb
icebp
in
mov
cltd
popa
aas
dec
sub
cs
iret
pop
xor
cld
push
cmp
cmp
jle
dec
ss
in
inc
call
mov
sbb
ud1
vpsraw
or
jmp
outsb
ret
mov
fisubrs
inc
dec
ljmp
rolb
fcmovb
xchg
dec
test
out
loopne
das
cld
call
shrb
repz
popa
lods
fdivl
cmpsl
movsl
sbb
push
push
clc
scas
mov
jb
dec
scas
pop
cmpsl
push
clc
jg,pt
pop
add
movsb
pop
orb
and
and
jge
testb
mov
pop
movsb
jo
call
lock
mov
lock
or
mov
ret
lock
xor
ficoml
roll
xchg
and
icebp
jns
je
sbb
test
insb
mov
ljmp
mov
into
testb
pop
stos
adc
xchg
packsswb
in
rep
cmp
test
push
dec
out
arpl
mov
je
dec
sarl
jo
cmp
or
xchg
sbb
js
push
push
mov
jl
leave
lcall
enter
cmp
fisubl
insb
paddw
lcall
insl
sbb
pop
das
jl
cmc
sahf
stos
das
mov
mov
cmp
aad
sbb
mov
jo
out
in
stos
ret
ficoml
dec
xor
int3
divb
or
cmp
mov
mov
mov
xlat
mov
stos
xor
add
xor
mov
sbb
js
daa
loop
fcomi
cmpl
inc
xchg
js
scas
loope
mov
add
pop
sub
mov
loopne
mov
std
pushf
mov
popa
xchg
lahf
pusha
mov
mov
mull
pop
inc
add
pop
dec
pop
mov
mov
pop
add
pop
in
sub
outsl
test
clc
cli
pop
mov
push
jl
and
fistl
fistl
rolb
xchg
cmp
lcall
fisttpll
orl
push
xchg
xor
pop
xor
addl
mov
mov
cmp
aad
sub
mov
outsb
fiaddl
gs
cmpsl
dec
inc
test
lock
ds
std
push
in
fisubrs
adc
dec
orl
mov
jecxz
cmp
or
dec
ja
mov
add
pop
dec
add
or
pop
stos
hlt
loopne
daa
gs
cmp
les
cmpb
frstor
ret
sbb
jle
jge
lds
inc
sti
aad
push
sub
frstor
js
stos
pop
xchg
mov
pop
push
push
push
pop
mov
push
push
mov
mov
insl
out
ja
mov
and
jp
out
sbb
imul
cwtl
push
ffreep
jle
test
out
fimuls
ss
or
dec
fnop
push
ds
inc
cwtl
mov
test
sbb
and
mov
jb
xor
stos
jl
or
int
mov
divb
js
xlat
cmp
sti
ret
aaa
test
mov
movups
iret
add
jmp
shll
add
adc
fadd
fildl
mov
fiaddl
movlps
push
pop
dec
sti
jnp
mov
cli
movsb
cwtl
xor
lea
push
leave
inc
push
loopne
inc
rol
adc
pop
fst
jns
mov
jmp
repnz
ljmp
or
test
pop
loopne
hlt
mov
mov
sarb
iret
mov
sahf
push
mov
or
add
add
cmpsl
leave
fimuls
stos
push
jmp
aam
mov
xchg
fisubrs
adc
enter
xor
fst
and
fcoms
sub
dec
decb
dec
push
std
pop
mov
cs
leave
mov
or
call
repnz
add
scas
fsubrp
repnz
mov
inc
inc
mov
mov
cs
push
ret
mov
arpl
xchg
aam
fisttpl
mov
scas
mov
push
jl
idiv
mov
xor
sub
mov
cmc
scas
push
jb
mov
inc
leave
movsl
cmp
mov
shll
pop
sbb
dec
xor
inc
ja
cmp
sti
pop
adc
aad
out
mov
fsubrs
or
push
push
xchg
jp
ficoms
add
pop
int
adc
aam
sbb
hlt
movsl
je
push
test
fdivrl
or
add
pop
push
addr16
aas
pop
inc
lret
xchg
imul
xchg
adc
loope
mov
cmc
les
lahf
add
in
or
jmp
push
jo
xlat
lock
or
mov
sbb
mov
inc
jl
jg
sbb
jbe
fsubl
jl
loope
mov
in
mov
push
jl
fists
mov
iret
mov
frstor
mov
xchg
mov
pop
iret
pop
xor
jecxz
popf
jg
scas
mov
shl
adcl
test
adc
ds
push
fidivl
cmpsl
in
jl,pn
insl
jae
push
mov
call
cmp
cmpsl
xor
sbb
sbb
mov
xchg
cmc
aaa
pop
jb
pop
test
das
ss
sti
mov
int3
or
ja
cli
xor
and
mov
in
sbb
clc
mov
ss
ja
add
stos
pop
or
sub
push
inc
lock
jl
pop
xor
subl
fildl
mov
repnz
pop
ret
jno
repz
mov
mov
push
inc
mov
cmp
pop
popl
scas
stos
mov
jbe
arpl
out
and
fsubs
sub
das
outsb
xchg
ret
aaa
sbb
cmpsb
ffree
or
jnp
shr
adc
repz
push
call
movsb
cmpsl
inc
jne
dec
sub
adc
cwtl
pushf
jmp
jne
jne
xchg
cltd
ds
xchg
xor
xor
jl
sbb
mov
pop
inc
dec
jl
mov
shl
xor
int
sbbb
out
les
pop
cmp
mov
xchg
test
jmp
add
jb
outsl
cld
loop
lea
enter
mov
mov
jne
int
ja
adc
mov
or
cmp
mov
in
pop
decb
sbb
loop
mov
adc
push
inc
mov
pop
bound
lahf
subl
mov
dec
fbstp
xchg
sahf
mov
popf
mov
fildl
sbb
mov
mov
rol
mov
fwait
xchg
outsb
fstpl
inc
pop
add
push
or
or
ret
xor
cmp
push
and
test
shrl
test
hlt
fs
pop
cmp
mov
in
daa
nop
xchg
add
pop
rcrl
pop
xchg
mov
or
movsl
adc
rorb
lock
and
insb
mov
cmpsl
rolb
mov
jnp
xor
stos
pop
icebp
shl
cmp
in
pusha
insb
aad
aas
jp
retw
pop
cld
push
xor
dec
or
push
xor
sbb
mov
or
push
jnp
mov
adc
loope
dec
stos
mov
out
jne
sub
mov
daa
xlat
mov
adc
fildl
orb
sub
xchg
cmpb
mov
push
mov
loopne
mov
cmpsl
xor
std
mov
rorl
xchg
insb
sbb
pop
mov
mov
aad
sub
inc
cmpsl
lea
arpl
mov
fstpt
sbb
lds
rep
jnp
aam
mov
insl
mov
add
jmp
loop
std
dec
pop
mov
cmp
adc
pop
sti
ss
push
out
mov
lea
sub
ja
jne
test
je
dec
scas
rol
pusha
adc
jo
out
pushf
cltd
fnop
push
pop
push
ja
or
adc
out
call
aaa
xor
adc
jnp
ja
bound
adc
inc
testb
adc
mov
shrl
mov
mov
fmul
out
or
pop
adc
and
dec
jle
lock
and
mov
mov
push
out
mov
idivl
sbb
pop
mov
xchg
lea
dec
and
das
sarl
add
mov
xchg
lock
hlt
cmpsb
scas
movsl
mov
lcall
lods
xchg
pop
or
mov
mov
and
lret
cmp
cmpsl
outsb
mov
rolb
loopne
cli
loope
mov
lcall
shrb
test
mov
dec
fcmove
mov
test
mov
xor
pop
stos
cmpsl
and
test
dec
out
dec
ds
mov
int3
mov
push
adc
push
aas
fimull
xchg
int3
test
pop
data16
sub
push
add
clc
inc
push
fnsave
xchg
or
mov
jecxz
add
rolb
into
icebp
addr16
dec
cmp
xchg
sbb
rorb
xchg
mov
fidivl
movsl
gs
ret
mov
out
leave
lds
xor
aad
das
add
test
or
rclb
jecxz
pushf
mov
xor
xchg
cmp
shlb
jb
sub
cltd
jb
mov
sahf
lea
mov
sbb
sti
adc
out
cmp
aam
fmul
inc
mov
jmp
nop
aaa
insl
dec
pop
pop
fwait
xor
xchg
es
pop
pop
rcl
jno
aad
or
mov
mov
or
in
sahf
mov
loope
or
out
mov
int
pop
mov
arpl
lea
fbstp
paddusb
jmp
jge
jge
cmp
aaa
popl
and
jg
mov
pop
push
rcl
sub
xadd
daa
mov
push
xor
test
inc
sbb
pop
inc
mov
loop
or
push
pop
pop
cld
cli
loopne
cmpsb
repz
or
cmp
mov
mov
test
cmpsl
js
mov
mov
jne
cwtl
mov
js
jae
sbb
pop
je
adc
dec
roll
jmp
mov
cmp
jbe,pn
outsb
ss
movsl
push
add
ret
roll
pop
mov
mov
or
sbb
or
in
fmuls
adc
in
int3
cli
jb
adc
cld
data16
sbb
mov
inc
mov
outsb
jg
aas
sarb
imulb
jnp
scas
sbb
pop
dec
pop
repnz
popl
inc
movsb
stos
lods
lcall
push
mov
lahf
adc
sti
call
cltd
imul
add
lods
adc
lock
roll
clc
cmp
call
xchg
dec
test
pop
js
fwait
pop
pop
mov
and
ss
incb
or
jle
pushf
sub
mov
aam
cmp
ds
push
xchg
pop
and
xchg
sbb
add
xchg
mov
add
mov
adc
lock
push
ja
cmp
adc
jns
inc
add
mov
js
inc
xor
lcall
jo
mov
fisttpl
push
push
sbb
stos
inc
sbb
jl
in
lret
inc
scas
dec
std
lret
sahf
cmp
mov
cmp
and
lret
sbb
lcall
out
daa
jle
mov
xchg
fldcw
pop
and
arpl
push
xchg
cltd
jp
movl
rol
pop
pop
inc
xlat
rcll
cwtl
loopne
xlat
loope
stc
pushf
xorb
rorl
jl
mov
hlt
cmc
sbb
pop
jns
sub
cmp
xchg
push
and
and
fmulp
jecxz
test
stos
jno
loope
jl
popf
inc
fs
fildl
call
cmp
sbb
out
pusha
fdivs
shrb
push
dec
or
and
mov
addl
push
mov
cld
mov
lret
add
cmp
mov
je
cmp
or
inc
daa
jb
mov
add
pop
sbb
pop
inc
fisttps
loop
push
cmp
xchg
aam
pop
xchg
aaa
cmp
mov
stos
icebp
leave
inc
sahf
mov
or
cmp
xor
hlt
cmp
jbe
fwait
lods
mov
sbb
aaa
into
mov
jb
xchg
stos
inc
xchg
js
inc
mov
jno
xor
jmp
jnp
mov
cmp
mov
and
lret
xchg
fcoml
imull
test
addr16
stc
insl
mov
mov
vpandn
imull
imul
sarl
lods
cmp
add
rorl
imul
sub
push
mov
jg
ljmp
sbb
cmp
cmp
jbe
je
das
pop
jbe
mov
fucomp
xchg
xchg
inc
push
mov
or
scas
sub
inc
mov
jge
icebp
leave
fmuls
daa
adc
les
mov
vfrczsd
call
xor
shl
inc
and
jo
in
out
adcl
add
mov
addr16
jmp
jge
fcoml
and
push
sti
cmp
loop
inc
sbb
mov
inc
dec
and
add
lahf
cwtl
jae
fadds
negb
or
xchg
test
jnp,pt
push
sub
scas
mov
mov
fmull
sub
enter
mov
jae
jno
xorb
in
add
xchg
push
andb
cmp
jge
scas
sahf
pop
or
pop
push
mov
cmc
rclb
test
mov
sub
inc
fwait
mov
test
dec
xchg
sti
mov
mov
push
ds
orb
aas
add
fdivrp
test
pop
push
div
stos
int
es
aaa
inc
rorb
aad
test
add
icebp
subl
jnp
and
repz
fstl
sbb
setge
sub
sbb
adc
adc
cmp
imulb
sbb
push
ja
enter
rcr
cmp
je
jne
sbb
sub
mov
cmp
stc
movsb
sarl
scas
add
push
loop
sub
daa
xor
jge
insb
sbb
insb
rcr
adc
add
mov
mov
sub
fcomp
popf
adc
lock
ja
lret
push
out
scas
mov
push
je
mov
in
movsb
int
or
push
add
fstp
mov
jl
into
in
nop
out
clc
adc
scas
aas
mov
decl
push
pop
jne
and
jecxz
divb
addr16
cmp
xchg
addl
jne
jge
aaa
subl
xor
adc
xor
sbb
insl
cmp
fbstp
shlb
jno
imul
add
mov
loop
shll
mov
mov
out
subl
sbbl
jne
pop
xor
in
jmp
mov
jmp
aam
adc
xchg
jg
push
dec
jns
std
mov
add
icebp
test
imul
sbb
push
or
mov
out
cmp
lret
call
sbb
cmp
aam
into
stos
mov
mov
div
jge
movsb
out
frstor
jno
pop
sbb
rcrb
je
enter
xchg
cwtl
lret
adc
in
mov
mov
imulb
inc
notb
ret
jno
loop
mov
cltd
imul
shrb
pop
sbb
mov
mov
scas
jae
loopne
in
sahf
ljmp
cmpsb
mov
inc
jg
push
lea
aad
push
or
sbb
sbb
out
aas
xor
sub
push
cmpsl
out
fcmovu
mov
jmp
test
movsb
xlat
xor
shll
add
mov
js
jnp
dec
cmc
mov
mov
jbe
xchg
or
sub
mov
add
adc
lea
or
and
mov
lret
xor
pop
adcl
push
dec
es
inc
xchg
mov
inc
jecxz
sbb
mov
jle
icebp
rolb
loope
rorb
iret
rclb
loope
inc
cmpl
and
imul
inc
stos
pop
rcrb
lods
jbe
mov
enter
insb
daa
xorb
push
push
or
rorl
mov
dec
push
mov
jmp
and
jp
movsb
push
sub
gs
inc
adc
je
add
add
dec
iret
in
sbb
fimuls
jmp
out
mov
mov
ds
adc
mov
rolb
cli
test
cmp
fisttps
add
xchg
xor
adc
shlb
mov
lea
jns
xchg
push
repz
dec
addr16
mov
pop
inc
addr16
out
jl
test
idivl
pop
test
imul
jae
out
pop
das
sbb
pop
pop
push
in
mov
sbb
mov
fwait
popf
std
pushf
outsb
insl
push
fnop
fldcw
add
lock
je
aas
lcall
popf
dec
or
mov
adc
push
xchg
mov
ljmp
je
call
mov
popa
insb
and
fstpt
stos
cmp
fistl
jb
fadds
sbb
std
adc
sbb
es
cli
data16
xchg
nop
xor
bound
ljmp
imul
ds
mov
jmp
sbb
xor
adc
xchg
pop
push
sub
in
js
in
leave
or
sub
pop
lcall
ds
je
out
test
cltd
inc
aad
xor
pmulhw
aam
repnz
mov
loop
adc
cmpb
out
andb
add
popf
add
cmp
fsubr
jo
fidivl
pop
push
push
cltd
mov
aas
roll
adc
or
xchg
mov
jmp
outsb
pop
iret
lea
clc
pop
adc
jmp
fsubl
jns
xchg
lods
xchg
mov
insl
mov
lea
cmp
jbe
lds
jns
iret
je
xor
pop
dec
lock
xor
inc
fwait
pusha
test
ljmp
mov
aad
push
stos
shl
jge
or
clc
bound
sar
xchg
jb
rcll
cmc
mov
cmp
imul
pop
lods
bound
stos
in
rcl
outsb
int3
mov
mov
push
ljmp
ja
in
and
jbe
and
mov
bound
int
push
mov
pop
jb
imul
inc
mov
or
jge
lods
in
jle
inc
sbb
xchg
pop
inc
xchg
fcmovu
fcompl
pop
push
push
lahf
xor
cltd
sbb
pop
push
or
jo
repz
jecxz
aas
and
test
adc
cmpb
out
mov
cmp
jb
pop
cmp
push
ret
or
cmpsb
bound
mov
xlat
mov
fcmovnbe
pop
pushf
data16
jp
jne
out
lcall
gs
popa
pop
outsl
pop
push
aas
in
notl
and
sub
ja
xchg
mov
jno
inc
mov
sbb
ss
jns
mov
gs
mov
fsubl
adc
shl
jecxz
ds
outsl
js
sbb
xchg
sahf
test
xchg
push
sbb
inc
in
adc
and
lock
es
xchg
aas
iret
ret
push
add
mov
mov
int
clc
arpl
pop
sbb
or
clc
add
sub
xchg
in
pop
jne
mov
jecxz
push
popa
scas
leave
add
in
inc
xor
mov
mov
add
aam
or
stc
push
int
iret
orl
dec
movhps
ljmp
xchg
lret
cld
pop
jle
shl
add
push
push
jp
das
lds
scas
lret
pop
neg
in
push
lods
push
inc
cli
inc
pop
jno
lds
testl
mov
inc
pop
mov
pop
fs
push
iret
mov
pop
xor
xor
fdiv
stos
negl
lea
outsl
negl
jno
jg
pop
mov
fildll
push
add
notb
es
and
cwtl
into
data16
inc
icebp
jnp
cli
das
in
fcmove
inc
movsl
jb
out
popf
cmp
lea
ss
add
mov
pop
ja
sub
test
ljmp
adc
or
xlat
or
and
jmp
push
cmpsl
mov
prefetch
jne
lret
mov
jmp
inc
icebp
mov
je
inc
mov
mov
out
xor
cli
pusha
out
mov
int
incl
add
jo
mov
mov
flds
insb
jge
fisubs
jp
adc
loop
adcb
ja
or
in
xchg
out
scas
pop
sti
add
push
adc
add
pop
jge
je
aaa
and
dec
je
mov
nop
dec
repnz
inc
inc
ret
orl
or
icebp
popa
adc
inc
nop
loope
cli
fstps
pop
int3
mov
int3
fisubl
xchg
pop
pusha
ret
jbe
les
push
inc
inc
dec
cmp
pop
je
subl
cs
repnz
mov
inc
or
or
dec
jmp
divb
clc
cs
add
add
adc
fnstcw
test
mov
dec
pop
sahf
test
outsb
loopne
mov
lds
and
mov
adc
cmp
loope
into
lret
or
dec
sbb
or
xchg
mov
or
dec
outsb
xchg
into
in
add
jne
add
inc
mov
cmp
in
mov
pop
inc
test
clc
adc
inc
mov
inc
pop
inc
sahf
mov
or
shl
inc
add
ret
imul
inc
add
push
lods
popf
cwtl
adc
rcl
cmc
mov
stos
enter
or
inc
sbb
cmpsb
jno
add
in
mov
jne
xchg
mov
sub
cmp
and
popa
mov
push
arpl
out
das
test
adc
imul
xor
fwait
and
imul
pop
pop
shll
fists
mov
sub
je
imul
dec
add
sub
push
ja
rolb
or
stos
enter
add
pop
cmp
sarl
imul
and
mov
inc
add
push
loop
sbbb
mov
and
or
xor
add
and
test
sti
ss
jne
dec
xchg
push
std
dec
in
imul
mov
push
cmp
fcmovu
popa
mov
inc
pop
ret
inc
xor
arpl
dec
fidivrl
rorl
mov
ret
adc
add
dec
adc
sub
mov
add
inc
sub
adc
mov
push
push
sbb
cmc
shrb
mov
jbe
rolb
cmpsb
push
cmp
test
nop
jbe
ljmp
scas
mov
sub
adc
in
js
cmp
outsb
push
cmp
pop
pusha
mov
xor
cmp
jns
xchg
scas
or
icebp
mov
xchg
dec
jl
sbb
mov
mov
popa
jae
leave
fdivrs
mov
xchg
and
rcl
loopne
roll
cmpsb
divps
sbb
addr16
pop
cld
call
popf
inc
data16
xor
mov
sub
mov
leave
test
scas
push
push
clc
into
or
dec
jg
mov
scas
lods
test
add
xorb
mov
repnz
cmp
jb
xchg
xchg
jae
sub
mov
sub
lock
push
xor
mov
jl
jle,pt
jge
push
xlat
aaa
pop
je
and
hlt
lock
test
pop
fnstenv
add
pop
fisttpll
cmp
ljmp
push
mov
xchg
mov
fwait
dec
das
fdivrl
push
xor
das
jmp
jge
pop
add
subl
mov
cmp
test
add
outsb
add
jp
std
mov
inc
mov
mov
mov
push
scas
jl
loope
lods
mov
test
xor
rolb
pop
test
jle
jge
sbb
jnp
xor
mov
inc
inc
cmp
cmp
dec
icebp
jl
mov
sbb
fwait
into
mov
into
sub
clc
inc
pop
jle
cli
or
xor
and
lods
pop
rorb
push
pushl
and
inc
jnp
pop
jnp
xor
sub
insb
push
cli
ja
xchg
ret
andnps
test
cltd
mov
jmp
into
dec
aas
mov
test
or
lret
notb
fisubrs
push
push
jp
inc
inc
cld
outsl
or
or
push
test
movsb
subl
pop
pop
cwtl
sub
bound
aam
or
sbb
lock
add
scas
mov
bound
xlat
lret
or
xor
fmull
mov
fisttps
push
cmp
shrl
enter
ljmp
mov
out
movsb
sbb
arpl
pop
jl
cs
inc
out
es
out
jne
les
jl
std
inc
popfw
pushf
hlt
cwtl
movb
aad
setge
stos
sbb
mov
sti
loopne
icebp
sub
cltd
jmp
sub
mov
lret
hlt
jo
shlb
mov
shlb
sarl
lock
mov
dec
push
xor
push
lret
in
xor
test
inc
inc
addr16
mov
adc
inc
jb
mov
test
fcmovb
pop
insl
pop
push
clc
add
hlt
js
xor
lcall
setle
fistps
in
fcoms
pushl
fdivrs
punpckhbw
pop
mov
rolb
popf
mov
jae
push
mov
fcoml
dec
into
test
scas
mov
sar
cmp
loopne
and
sub
lods
mov
jge
adc
xor
psrlw
sub
and
clc
aam
or
push
out
cmpsl
jns
mov
mov
aam
xchg
inc
pusha
jg
mov
arpl
sbb
jo
xor
aam
aas
jbe
jae
ret
mov
pop
or
mov
fldt
fisubl
fs
mov
xchg
adc
sbbb
mov
shl
adc
adc
ret
repz
test
inc
push
inc
imul
insb
mov
adc
cltd
lahf
xchg
fdivl
mov
imul
jmp
sbb
inc
mov
sub
push
sbb
dec
xchg
rol
push
testl
mov
jo
jae
pop
add
cld
lock
xorl
inc
lock
stc
in
inc
hlt
inc
test
pop
xchg
mov
xchg
jmp
pop
push
outsl
sahf
repnz
inc
mov
pop
mov
clc
lock
mov
dec
cmp
cmp
jl
clc
hlt
mov
loopne
pop
jecxz
add
xlat
dec
cwtl
mov
or
sbb
ss
pop
sbb
das
repnz
insl
sbb
mov
or
jge
outsb
adc
pop
xor
shrl
push
and
mov
add
into
jnp
mov
in
sub
lret
mov
testl
icebp
push
mov
icebp
mov
cmp
jns
mov
add
or
imul
ret
and
stos
xor
cld
mov
fnsave
outsb
xchg
int
loope
jmp
orl
shrb
dec
scas
call
shll
mov
xchg
push
aaa
push
sbb
xchg
xor
sahf
fdiv
xchg
insl
sbb
push
dec
cmp
loop
in
and
mov
nop
adc
aad
jnp
cmp
cmp
mov
mov
sub
popa
mov
sbbb
push
adc
loopne
or
add
sti
repz
sbb
ds
xchg
call
xchg
push
add
ret
jge
fdivrl
sub
mov
dec
ljmp
add
mov
pushl
rorl
cmp
shrl
dec
outsl
addr16
int
fldl
aaa
std
ret
inc
leave
popf
outsb
stos
call
int3
es
inc
fildl
xlat
and
xchg
stos
loope
jne
aas
push
inc
ret
in
dec
lret
mov
jne
and
or
sbb
std
pop
and
pop
lret
adc
xchg
imul
fisubrl
loop
mov
shlb
dec
sbb
xor
jle
sbb
mov
pop
ret
jmp
lock
lea
mov
dec
mov
jge
bound
out
imul
mov
mov
mov
hlt
inc
out
fiaddl
lcall
sahf
cmc
clc
adc
push
cmc
mov
inc
adc
sbb
fprem
stc
mov
hlt
and
dec
cmc
ja
mov
xchg
divb
mov
dec
xchg
jo
ja
lock
filds
mov
sahf
loopne
mov
and
std
mov
pop
push
push
aas
pop
out
mov
lahf
jecxz
sbb
or
arpl
cltd
imul
movsl
into
in
sbbb
out
dec
pandn
mov
pop
or
jno
ss
stos
jl
clc
stc
leave
sbb
jg
mov
push
fwait
dec
push
jbe
loope
jge
pop
jl
into
testl
pop
ss
js
mov
outsl
ja
add
mov
dec
xchg
mov
loop
dec
jmp
add
hlt
addl
loopne
inc
xlat
mov
jg
cmp
cli
mov
rcll
mov
xlat
call
jl
out
mov
mov
loop
cmp
clc
in
cmc
pushf
cmp
mov
shrl
in
icebp
inc
xor
inc
scas
pop
add
int3
push
pop
lds
sti
adc
pop
pusha
lcall
ret
cmpl
das
imul
mov
dec
push
imul
jae
inc
loop
push
nop
int
testl
sub
cmp
cvtdq2ps
pop
cmpsl
xchg
fildll
jbe
jl
cmp
push
lods
clc
adc
jne
movsb
and
push
fidivs
xor
mov
push
xor
mov
outsl
in
and
push
sbb
push
lea
mov
minps
sub
inc
and
clc
push
mov
xor
lock
adc
sbb
push
ss
loopne
outsl
push
mov
insb
jge
js
adc
mov
mov
mov
push
shrl
or
enter
lret
push
shr
push
push
cwtl
int3
sub
lcall
mov
imul
pop
daa
mov
mov
cmp
or
lret
das
ficompl
bndstx
ret
addb
int
cmp
sub
pop
and
dec
jg
mov
ljmp
mov
aad
sbb
sti
in
insb
cmp
jmp
inc
pusha
push
mov
pop
aas
cmp
xor
cli
test
fsubrl
leave
xor
and
dec
jae
out
lds
sti
inc
and
inc
cwtl
fwait
call
xor
adc
xor
or
popa
inc
and
fst
pop
and
enter
pop
out
mov
mov
xor
sub
pusha
in
insl
dec
dec
stos
test
sbb
add
adcb
sbb
mov
xchg
out
sahf
xorl
mov
add
roll
lods
dec
sbb
loopne
dec
jo
mov
sub
xchg
mov
add
fwait
insl
pop
stos
dec
outsb
hlt
shrl
shll
xor
and
sbb
rclb
add
bound
or
add
sub
cmp
cli
mov
dec
inc
aam
push
and
out
pop
movsl
iret
aas
repz
push
fisttpl
cltd
movsb
pop
inc
sub
cmp
in
imul
mov
xchg
loopne
pushf
add
insl
cli
loopne
std
add
jne
pop
or
xor
js
cmpl
repnz
outsl
inc
jl
fisubs
jbe
cmpb
xchg
jle
pushl
aam
cs
pop
mov
inc
mov
mov
insb
mov
loopne
rcl
rolb
mov
scas
mov
inc
je
repz
fidivrl
cmp
sbb
lea
jns
mov
sbb
fs
mov
jmp
mov
hlt
or
mov
dec
clc
mov
cmp
mov
xor
push
lods
xor
ret
loope
add
insl
js
inc
or
pop
mov
adcl
sub
cwtl
xchg
jo
jl
ja
cmpl
out
test
xchg
mov
loopne
cmp
lahf
mov
adc
fistl
hlt
cmpsl
call
push
push
xor
pop
testl
stos
adc
rolb
push
in
lahf
mov
add
mov
dec
xchg
and
mov
cwtl
xlat
ja
push
ljmp
scas
add
ds
cmp
lret
pop
mov
das
test
syscall
stc
pusha
lea
rcl
gs
les
jmp
rcrl
test
in
pop
daa
fdiv
push
pop
jmp
jae
push
arpl
fcompl
pop
insl
or
push
ljmp
hlt
mov
jns
xlat
fucom
rorb
frstpm(287
ret
stos
iret
xorl
lahf
jb
cmp
out
or
mov
cmpl
jg
divl
and
lods
add
xchg
mov
sbb
loopne
das
sub
lcall
push
hlt
cmp
sub
mov
shrb
popf
cmp
or
dec
cmc
sub
push
movsl
fldl
sbb
adc
push
and
int3
mov
xchg
mov
jae
lock
mov
shl
loope
outsl
add
jle
adc
cmp
mov
ret
pop
pop
addr16
sbb
shll
clc
inc
mov
scas
lods
inc
pushf
push
cmp
push
cmpb
sbb
rorl
or
xchg
xchg
test
mov
xorl
push
push
js
jg
push
shlb
add
es
xor
add
stos
ljmp
icebp
test
sub
jp
repz
testl
cs
dec
rorb
movsl
pop
dec
mov
mov
jnp
push
aad
xor
sahf
outsb
cmova
add
rcrb
xchg
les
xchg
ret
shlb
hlt
es
xchg
sti
add
loope
das
popf
pop
rcll
xchg
loope
out
jg
scas
xchg
adc
cld
push
adc
mov
pop
xor
and
in
sub
mov
aad
sub
cli
mov
int3
push
mov
fs
ffreep
fsubl
or
pop
in
aad
loope
stos
vpshlw
or
fisubrs
push
loop
in
push
pop
or
ret
mov
outsl
shl
add
pop
jmp
mov
cmp
mov
inc
stos
push
not
mov
lods
mov
push
sub
icebp
notb
jbe
dec
rclb
mov
jecxz
fadds
jnp
addb
icebp
ror
push
movsb
fwait
xchg
sub
and
lock
cmp
out
mov
cmpsl
daa
or
fistpl
addr16
adc
sbb
fildll
leave
mov
xchg
dec
stos
insb
mov
dec
testb
pop
push
rcrl
cmc
fsub
mov
aas
sbb
repz
mov
inc
ret
or
lock
push
mov
push
xchg
sbb
insl
ljmp
adc
aam
inc
lods
lea
into
inc
push
dec
out
pop
and
dec
aas
imul
bound
add
push
mov
jecxz
fsubl
mov
sbb
lock
jns
sahf
loopne
fadds
push
mov
dec
xor
out
ja
jle
leave
cmpl
repz
pop
dec
pop
inc
es
dec
mov
sub
xor
popf
xor
jl
push
adc
bound
aam
mov
in
add
cmp
sbb
ja
mov
lret
and
packsswb
testb
cli
push
or
inc
push
xchg
cwtl
dec
ja
mov
mov
add
cmp
lahf
js
in
jg
xor
dec
pop
das
mov
jecxz
adc
push
xor
stos
mov
push
dec
and
jo
ljmp
inc
adc
data16
inc
xchg
sub
movsl
add
and
cld
jmp
and
push
mov
popf
inc
sar
dec
xchg
or
mov
mov
xor
outsb
inc
mov
adc
sub
dec
dec
fdiv
dec
add
xchg
ljmp
push
jnp
cwtl
xor
cmp
inc
mov
cmc
mov
push
xchg
in
and
sarl
insb
pop
xchg
or
lds
iret
sbb
repnz
pop
hlt
xchg
hlt
out
ret
dec
xchg
push
int
cmp
out
cmpsl
fs
jnp
lea
clc
mov
pop
hlt
jp
divl
mov
stos
push
mov
jle
jo
jmp
dec
cmp
outsl
and
clc
ja
cmc
mov
repnz
adc
mov
add
outsb
mov
outsl
xor
xchg
add
sub
push
insl
add
int
or
jle
test
aam
scas
out
popa
insl
pop
cwtl
mov
ret
iret
fsubrl
xor
fsub
pusha
andl
movsb
mov
ret
push
xor
aaa
shlb
mov
adc
popf
roll
call
dec
inc
xchg
pusha
xchg
mov
jg
xor
inc
sbbb
push
lahf
add
test
ret
push
ja
mul
in
and
adcl
je
insl
xchg
mov
int3
fbld
sahf
stos
in
jle
into
cmpsb
in
in
outsl
insl
repz
sbb
jmp
mov
mov
xor
pop
jge
push
mov
lock
jno
push
pop
imul
jge
sbb
sbbl
push
jmp
pop
mov
call
cmpsl
push
icebp
cmc
aaa
andb
ret
add
xor
cli
js
fmul
push
cwtl
lcall
mov
lcall
or
xorl
out
sub
rcl
rolb
mov
dec
inc
js,pt
les
xchg
xchg
xchg
in
jbe
out
inc
hlt
and
insl
std
stc
jnp
sahf
jbe
sbb
insl
or
mov
outsb
add
scas
push
ret
ss
into
aad
out
sbb
lea
jge
mov
jbe
in
inc
xlat
dec
stc
mov
aad
jne
scas
imul
cli
stc
fucomip
popl
or
stos
shll
loopne
mov
loopne
mov
cmc
mov
mov
sub
dec
fwait
add
sub
shlb
mov
scas
jge
or
imul
fistps
test
xor
out
das
fcompl
mov
sbb
ret
or
pop
fcmovne
mov
add
adc
fcomps
and
xor
and
ja
mov
mov
mov
jne
scas
scas
push
shlb
fmull
scas
mov
jge
mov
xor
int3
ret
in
xchg
cmp
pop
dec
mov
sub
sub
int3
and
inc
icebp
shll
addl
cmp
sbbl
insl
pushf
pop
ror
test
cmp
pop
inc
addr16
mov
inc
iret
test
add
mov
push
mov
sti
push
or
or
fdivl
add
sub
stos
or
sahf
inc
data16
pop
inc
add
js
jne
jecxz
push
cmp
shlb
cmp
xlat
popa
fmuls
into
imul
inc
jle
fistpl
je
daa
cmp
add
scas
and
lahf
xor
dec
fidivrl
loope
xor
xchg
in
cmp
mov
mov
ret
xor
lock
hlt
lods
sbb
sbb
repnz
mov
clc
icebp
push
jle
jne
outsb
jl
icebp
outsl
xchg
ja
js
jg
xchg
xlat
testl
push
neg
arpl
sbb
pop
xlat
add
loopne
push
sahf
xlat
jp
outsb
loop
xchg
addr16
dec
imul
sbbb
shll
mov
inc
in
out
lods
mov
shrb
imul
jbe
ljmp
es
mov
mov
lea
aas
cmp
imul
pop
sbb
and
pop
jge
mov
out
cmp
outsl
xor
jo
fidivrs
adc
in
xchg
fistpl
mov
mov
mov
xchg
out
or
inc
lea
push
xor
add
mov
fldcw
pop
fsubrs
cmc
jne
xor
daa
push
lock
arpl
xchg
movsb
inc
js
imul
outsb
jno
inc
pop
in
cmc
out
shrl
or
or
mov
ret
aam
xchg
sarb
or
sbb
jbe
jne
rcl
punpckhdq
mov
mov
rcrb
inc
mov
or
call
or
xor
popa
fs
cmpsl
cmp
shrl
inc
or
loope
jl
movsb
inc
lcall
jmp
insb
enter
mov
pop
jnp
cli
mov
jo
aad
adc
cmpsb
int
xlat
jge
xchg
jae
xor
cmpsl
xchg
mov
ljmp
sbb
push
mov
cmp
hlt
mov
test
pop
adc
pop
stos
int3
xchg
imul
sub
insl
mov
jnp
ret
test
xchg
cmp
insl
test
fdivrs
div
add
cli
xor
aam
lcall
jmp
cmp
pop
fistps
mov
xor
cmp
cmp
ljmp
push
lcall
and
push
into
mov
adc
mov
int3
add
cs
add
mov
sbb
mov
test
or
push
pop
pop
push
adc
addb
pop
das
mov
cmp
bsr
sahf
or
jecxz
jg
cmp
test
mov
mov
inc
ret
push
decb
dec
fcmovnb
sti
in
mov
addr16
and
adc
fstl
enter
xchg
cmp
or
dec
mov
or
es
lock
lds
ds
enter
push
pop
jecxz
cmc
shll
and
mov
xchg
sub
xchg
into
dec
jle
popf
cmp
adc
icebp
jmp
mov
push
mov
xchg
psraw
add
adc
sbb
inc
xorb
cmp
push
cld
xor
fstpt
cltd
add
cmp
ljmp
aad
out
mov
imul
jne
jmp
shll
movsb
sahf
dec
cld
mov
sub
mov
push
lock
lret
cmp
loopne
adcl
in
leave
stos
mov
fucomi
xorl
into
adc
addl
fs
test
jbe
insl
mov
cmp
pop
test
jb
ss
jge
insb
aas
cmp
loopne
jbe
fucom
xchg
jp
xlat
insb
jg
cwtl
lds
loopne
cmp
pop
iret
push
and
lods
push
sarb
ja
in
xor
mov
inc
jecxz
rorl
adc
mov
pop
int
sbb
push
scas
in
sub
xor
xchg
pop
xchg
shl
ja
arpl
add
aam
bound
add
xor
pop
adc
jle
and
dec
inc
shll
mov
mov
cmc
outsb
sub
cmc
jmp
mov
aam
pop
insl
ret
ret
add
and
jge
mov
fwait
push
das
adc
rcr
push
xlat
inc
jl
xchg
dec
jb
ss
mov
jmp
mov
and
insl
mov
call
add
jp
inc
leave
sbb
mov
test
or
push
push
sbb
pop
mov
xor
fadds
call
mov
xorl
jg
nop
sbb
inc
sbb
std
bound
rcl
mov
ret
lods
lret
push
insl
jnp
mov
lock
or
insb
mov
aaa
push
pop
cmp
cmp
insl
aaa
fs
or
fsubs
and
adc
inc
stos
dec
add
loopne
cmpsl
or
push
call
xchg
mov
outsb
test
lds
xchg
mov
xchg
call
and
pop
push
push
cmp
mov
mov
push
push
push
fld
enter
pop
cmp
imul
pop
jecxz
pop
lock
sub
mov
mov
outsl
std
mov
lahf
imul
mov
mov
test
push
push
ljmp
push
push
sbb
incb
pop
jo
xor
ljmp
inc
in
cwtl
insl
add
dec
push
cmpb
adc
sahf
adc
sub
xchg
icebp
mov
inc
clc
sub
and
rorl
pop
popf
jnp
lock
pop
stos
fwait
xor
pop
adc
xchg
pop
mov
roll
nop
jbe
cmp
jbe
outsl
ja
mov
cli
xchg
cmp
or
dec
aas
fs
divl
push
scas
ret
cmpsb
insl
pop
aas
fadd
jmp
out
bound
out
adc
jne
hlt
and
scas
jp
mov
popa
ret
test
jg
push
test
jne
in
sub
cltd
adc
shrl
fildl
pop
cmpsl
iret
push
out
xchg
push
fdivrs
js
mov
stos
rorl
dec
jp
cmp
enter
jne
stos
lahf
pop
int
arpl
cmp
jmp
out
enter
divl
fs
cmp
mov
xchg
push
roll
push
mov
adc
mov
rcll
jnp
or
addl
mov
cmc
inc
mov
out
sub
cmp
call
mov
adc
sub
or
push
fdivl
push
pop
std
movq
xor
loop
mov
lods
jecxz
pushf
sbb
mov
mov
sub
xor
inc
jge
jge
mov
pop
push
scas
outsb
add
lods
ja
hlt
and
dec
dec
jmp
mov
out
xor
test
push
aas
in
js
cmp
nop
pop
out
jge
sarl
push
jb
aaa
push
mov
xchg
lods
bts
lahf
mov
fsubp
sbb
inc
out
jns
addr16
ret
mov
mov
xor
inc
fildl
push
sbb
mov
pop
mov
jno
xchg
fcomps
iret
mov
add
imul
enter
cld
clc
mov
cltd
mov
fiaddl
cmp
fsubp
test
cmp
jp
push
cltd
enter
sub
clc
sbb
movsb
pop
aaa
mov
pop
jne
push
test
roll
pop
fbld
mov
in
cld
cmp
jne
pop
xchg
clc
jne
cmpsb
jae
nop
popa
testb
dec
sbb
mov
push
arpl
sbb
add
add
push
push
test
push
push
inc
outsb
sub
adc
fnstenv
out
pusha
sub
fnstcw
push
subl
addb
call
adc
cld
pop
lods
mov
loope
mov
dec
sbb
xchg
inc
xor
inc
xchg
adc
mov
and
mov
xchg
test
test
adc
xchg
fsubr
pop
push
insb
mov
imul
ret
jmp
pop
pxor
jge
ret
push
mov
les
push
test
aas
iret
in
jge
jne
stos
mov
sbb
pop
test
in
dec
mov
mov
clc
rcl
jae
fiadds
lds
out
stos
subb
cltd
es
std
push
mov
popa
out
loope
ret
xchg
pmovmskb
add
std
and
shll
mov
shll
mov
loope
push
mov
jp
pop
inc
xchg
sti
in
cmpl
dec
xchg
inc
jne
ret
sti
loop
pop
ds
fistpl
or
cmp
push
cmp
push
xchg
jnp
jne
xor
and
roll
popa
jp
jg
cmpsl
mov
adc
and
and
pandn
out
js
lcallw
lock
mov
test
adc
dec
and
cltd
inc
into
enter
cmp
js
lcall
out
cmpsl
std
push
fwait
pop
js
aad
mov
movsb
fldenv
leave
inc
shll
push
push
and
enter
jne
mov
enter
sti
daa
mov
fldl
xchg
test
jae
dec
cmp
repnz
lcall
pushf
or
lods
fisttpll
mov
in
ret
mov
push
dec
mov
fdivrl
mov
popa
push
repz
mov
das
cmp
fwait
xor
les
mov
fsubs
insl
aas
cmp
dec
add
test
js
lds
ja
jo
cmp
ret
lock
aam
fistl
in
dec
outsl
cmpsl
test
pop
out
mov
ja
lods
fnstcw
insl
js
aam
loop
jb
jae
fidivrl
mov
dec
xchg
scas
push
mov
in
cmpsl
test
mov
push
lods
lods
pop
adc
cmc
loope
inc
cwtl
ffree
movsl
mov
insl
loopne
dec
cmp
mov
jge,pt
adc
iret
or
shlb
sbb
inc
out
push
cmp
and
mov
aas
mov
ljmp
jns
or
jnp
fadd
xor
xchg
ret
popa
in
xchg
in
fildl
cmp
outsb
mov
dec
cltd
pop
pop
jne
pop
pusha
push
addb
push
mov
lock
idivb
mov
int
shl
outsb
xchg
gs
rcll
jmp
lcall
mov
hlt
int
push
inc
mov
pop
xchg
adc
ds
loopne
push
movsl
fdivl
test
andb
jge
lods
mov
dec
in
or
mov
divb
ds
outsb
xchg
adc
in
mov
add
test
mov
mov
aas
add
mov
mov
jp
adc
fiaddl
sbb
jb
mov
in
pop
int
pop
mov
lcall
inc
sub
mov
mov
pop
sub
jge
mov
outsl
out
inc
daa
mov
and
push
ljmp
adc
cwtl
sahf
xor
push
push
aaa
bound
call
push
lods
pop
aad
mov
out
out
popf
mov
popa
aad
jo
lock
out
mov
pop
jg
popf
and
andb
cmp
jbe
mov
out
loop
je
cmp
and
enter
je
cmp
lock
mov
fcoms
jp
mov
fwait
jnp
mov
out
cmpsb
roll
push
push
ja
mov
test
out
cltd
jg
cli
inc
cmp
fildl
xor
fs
outsb
jnp
iret
ds
fsubrs
clc
cmpsl
fisttps
ljmp
das
stos
fcmovnb
pop
shl
or
mov
mov
test
shl
out
sub
js
mov
mov
add
ret
inc
aam
mov
fildl
cli
xor
pop
imul
mov
imulb
mov
lahf
xor
sbb
pusha
mov
in
jbe
std
mov
jg
ja
icebp
movsl
adcl
adc
pop
push
dec
mov
dec
repnz
stos
cmpsb
sysret
sahf
add
call
jle
in
orl
pop
lods
fdivrs
mov
mov
mov
sub
movl
js
rcrb
inc
mov
out
out
sub
jae
jns
rcrl
or
insl
clc
imul
jne
inc
sahf
arpl
scas
lods
ret
je
and
jecxz
aad
ja
insl
dec
jae
mov
ljmp
and
icebp
inc
xchg
mov
pop
mov
cld
xor
test
xchg
inc
or
pop
mov
data16
inc
test
test
out
test
stos
adc
jnp
arpl
stos
sti
fstp
in
cmpsl
mov
das
popa
sub
call
push
adc
jae
mov
call
fwait
dec
ret
add
push
out
movsb
jge
pop
ja
jge
fidivrl
dec
cs
inc
adc
or
imull
insb
stc
sub
add
cmp
mov
lods
mov
lret
mov
sbb
test
sub
out
mov
lock
test
jle
jl
push
jl
pop
movsl
add
mov
or
or
fcompl
outsl
inc
cltd
call
cmpsb
or
cmpsl
daa
and
call
mov
jge
mov
push
xlat
jmp
ret
enter
mov
in
xchg
inc
subl
jg
xor
dec
inc
shrb
push
es
test
pop
or
jnp
sbb
mov
sbb
inc
inc
push
and
inc
pop
mov
call
call
inc
or
mov
ljmp
xchg
add
adc
xchg
jno
mov
sub
and
dec
repnz
sbb
sarb
dec
jb,pt
dec
lcall
cli
loopne
cmp
cwtl
fimull
add
clc
push
xor
gs
cli
jp
push
out
jnp
stos
jae
loopne
movsl
and
pop
ret
test
cmpsl
fdivrs
fisubl
add
adc
clc
loop
pop
pop
movsl
js
in
ss
lcall
push
fidivrl
xchg
ss
ret
jge
stos
cmp
push
arpl
cmpsb
pop
jns
push
jp
jl
add
pop
loope
xchg
lcall
fistpl
lahf
pop
in
adc
and
jp
pop
fs
add
sbb
iret
inc
xchg
pop
xlat
and
lahf
lock
sbb
mov
stos
push
jb
test
mov
push
and
daa
jmp
sub
push
or
or
mov
jae
sbb
add
xchg
and
test
pop
jmp
fmull
mov
sub
sbb
popf
add
cmp
and
jo
stos
dec
pop
sbb
mov
outsb
lea
dec
je
ret
outsl
leave
hlt
push
adc
jne
and
cmp
fcmovnu
mov
fwait
xor
and
jp
lock
int
pop
clc
xchg
and
ds
xlat
adc
cmp
out
fstpt
push
jle
fwait
dec
sub
and
push
cmc
aad
test
lods
xchg
popf
xor
arpl
stos
dec
sub
test
pop
outsl
lods
push
add
mov
outsl
sti
mov
insb
iret
mov
cmc
jp
dec
out
clc
sarb
xor
mov
stos
sub
xor
cmp
add
fucomp
push
dec
mov
scas
mov
aaa
fiaddl
inc
insl
mov
aam
add
lock
xlat
out
lret
cmp
push
pop
mov
cmp
mov
or
push
add
adc
jne
roll
jbe
mov
pusha
rclb
hlt
push
in
mov
mov
scas
into
jb
div
mov
or
dec
cmp
enter
sub
push
cwtl
test
cmp
sub
rcr
xor
into
sbb
in
mov
or
or
sbb
sub
int
hlt
imul
fisttps
popa
subb
jp
popa
testl
mov
sub
cmp
jmp
cmp
scas
xchg
and
mov
cli
jbe
fcmovb
into
fcom
mov
adc
xchg
xchg
add
fmuls
outsl
mov
sti
test
jnp
and
aaa
xor
mov
mov
lret
xchg
mov
add
and
jmp
lea
add
test
test
add
imul
pop
inc
jnp
ja
test
sbb
xchg
adc
imul
loope
adc
mov
les
push
inc
pop
sub
rcl
xchg
mov
stos
dec
iret
xor
scas
and
arpl
pop
push
xchg
es
sub
mov
call
imul
pop
mov
pop
add
ljmp
xchg
addb
push
inc
or
movsb
push
or
jg
xchg
repnz
sbb
inc
rclb
adc
ss
test
jo
shl
aaa
pop
dec
jb
sub
test
pop
frstor
inc
repz
jmp
cld
jg
cmp
jge
or
mov
mov
aaa
push
nop
xor
js
std
sbb
dec
jbe
pop
pop
aam
mov
and
cmp
pop
inc
mov
ret
cmpsl
or
jle
sbb
mov
dec
mov
adc
incb
das
out
jb
jmp
push
das
push
xchg
imul
dec
ficoml
jne
fcmovbe
test
jnp
pop
jns
sbb
mov
addb
jnp
push
and
lcall
xchg
push
sub
jge
test
pop
mov
mov
stos
inc
and
jp
push
pop
add
jmp
es
inc
xlat
sti
and
add
out
mov
loop
jno
neg
mov
inc
inc
ds
sbb
sbb
jl
sbb
out
push
xor
pushf
cmc
mov
mov
pusha
inc
mov
sub
das
dec
fwait
das
xor
inc
xor
adc
inc
adc
sub
aas
pop
inc
cmp
inc
pop
jo
xor
pop
sbb
lret
mov
cmp
aam
xlat
insb
out
testb
pop
ljmp
pop
pop
dec
sub
jle
and
jae
push
pop
lods
scas
aas
sahf
pop
ljmp
js
lahf
sti
repz
pop
pop
cwtl
xchg
ret
loopne
in
dec
and
jnp
jge
mov
out
sbb
jle
nop
mov
repnz
mov
add
jmp
push
cmp
ljmp
test
js
mov
mov
bnd
push
inc
cld
mov
adc
add
aad
ficompl
or
dec
or
nop
out
pusha
imul
test
or
add
xor
pop
ljmp
xorl
sbb
mov
movsb
popa
addr16
call
mov
cmp
pop
adc
push
hlt
cmc
jecxz
das
cltd
xor
dec
iret
ja
test
sbb
cmpxchg
dec
or
dec
xor
add
cwtl
xor
imul
jl
inc
incb
nop
mov
daa
jbe
cmpsl
add
cmpsl
insb
dec
scas
sbb
clc
jbe
push
and
mov
xor
inc
pop
scas
adc
or
test
and
test
pop
xchg
repz
and
fwait
mov
cmp
inc
fists
ds
sub
lahf
pop
lods
les
fldt
loope
or
inc
sbb
mov
xchg
lcall
push
add
out
imul
adc
fdivs
inc
testl
or
push
int
out
xchg
pop
stos
add
push
out
fcom
mov
clc
lods
roll
arpl
or
rorb
ja
cmc
cmp
into
mov
mov
fiaddl
push
out
mov
mov
add
aas
push
push
fdivrl
and
inc
in
pusha
push
addl
add
or
mov
push
inc
mov
call
xor
sub
push
push
iret
jmp
lock
lahf
xchg
cld
adc
jmp
push
cmpsl
dec
add
ret
dec
mov
xlat
inc
insb
cmpb
pop
dec
jns
lods
fmuls
std
clc
add
cmp
test
ljmp
les
push
insb
out
xchg
jne
icebp
movsb
out
adc
je
add
lcall
gs
stos
roll
mov
ret
jo
pop
or
mov
mov
sbb
bound
inc
cmp
xchg
insb
mov
not
xor
dec
cmpsb
xchg
stos
jno
sbb
pop
inc
dec
xor
leave
xor
inc
into
in
ja
lea
js
sub
aaa
sbb
inc
out
add
xlat
orb
sub
add
add
aam
jb
pop
jns
xor
sbb
xchg
jecxz
out
sarb
cmc
xor
mov
add
sub
adc
rol
dec
das
or
or
divl
leave
stos
cmp
lods
mov
das
adc
jmp
or
es
imul
call
shrb
pop
xchg
or
mov
dec
loop
not
and
inc
stos
inc
in
jmp
sub
pop
pop
aam
shr
push
jb
cmp
xor
popf
in
hlt
icebp
mov
cmp
fisttps
movzwl
gs
addl
outsb
movsl
cmpsl
pop
and
mov
cwtl
arpl
dec
fcmovb
inc
cmpsl
scas
fisttpll
fdivl
xor
outsb
les
mov
sbb
test
dec
imul
jecxz
stc
xchg
and
out
mov
mov
push
aam
fwait
jmp
mov
cwtl
sbbb
out
cld
mov
inc
inc
and
or
and
pop
rclb
aad
mov
popa
xlat
mov
xlat
pop
xlat
fiaddl
mov
lret
into
xchg
xchg
int
ljmp
add
mov
jl
inc
movsl
sub
mov
jecxz
pop
push
dec
icebp
mov
fs
outsb
jns
jmp
loopne
cmp
mov
xor
fadds
fdivs
cmp
adc
or
into
and
outsb
imul
sub
add
jl
inc
ret
shll
mov
clc
testb
xchg
mov
int
fdivrl
jnp
mov
std
jmp
inc
fdivs
or
sub
daa
in
push
dec
push
icebp
jp
sti
addr16
divl
xlat
jno
ja
test
subl
test
je
loope
xchg
and
sbb
pop
cmpsl
adc
iret
je
pop
mov
push
aam
stos
out
add
popf
push
mov
mov
inc
scas
push
sbb
daa
outsb
fs
fimuls
xchg
cmpsl
out
das
dec
ficoms
sarb
test
inc
mov
add
adc
jmp
push
test
pop
inc
ret
mov
rcrl
lds
push
cli
orl
loope
xchg
dec
pop
lret
test
push
jnp
push
inc
fldenv
push
loopne
jmp
mov
scas
pop
cmc
pop
loop
xchg
mov
xlat
mov
inc
movsl
xchg
pop
daa
sub
mov
or
movsb
loopne
inc
cmpb
jns
pop
in
jp
imulb
inc
cmpsb
ljmp
inc
js
andb
xchg
jbe
ret
mov
or
xor
jmp
pop
enter
jno
addb
out
int
into
in
int
xchg
inc
cmc
sub
adc
inc
ret
adc
lods
jns
sti
jmp
mov
movsb
imul
sbb
mov
pop
adc
fisttpl
pop
ret
cmp
or
pop
loop
add
lret
xchg
gs
mov
jnp
pop
sub
jmp
in
push
xor
pop
insb
stos
cmp
aaa
mov
movsb
or
xor
aas
sub
in
inc
jb
clc
add
mov
scas
push
sbb
stos
and
fcomp
jb
repz
out
jo
add
push
mov
add
and
imul
dec
sbb
sbb
jp
dec
inc
ljmp
lea
xlat
jae
jne
out
aad
shlb
mov
fldcw
aad
sahf
ss
jmp
je
stc
pusha
jae
mov
icebp
fs
pop
mov
dec
lock
out
sub
imul
mov
xor
jle
aas
ds
or
add
outsb
das
out
xlat
mov
lret
add
push
dec
xor
jecxz
ja
adc
out
xchg
xor
and
jmp
push
and
and
inc
fstl
mov
mov
pop
outsb
push
push
mov
in
mov
sub
fimull
lods
test
fcmove
xor
lahf
fcmovb
idivl
mov
cld
add
dec
rolb
popa
inc
lods
clc
dec
pop
lods
ficoms
mov
cmp
fildl
add
xor
xchg
fadds
add
scas
imul
pop
std
push
xlat
push
sbb
add
adc
jecxz
cmpsl
pop
sbb
and
fldpi
jns
out
shr
aad
xor
jge
test
push
and
xchg
aad
rcll
adc
rolb
mov
inc
rol
cli
bound
movsb
hlt
sub
pop
lcall
mov
mov
sbb
pop
loopne
andl
xchg
int3
insb
ss
push
mov
nop
mov
sbb
loope
sbb
jp
sub
int
xchg
dec
add
movsl
jl
jmp
lret
iret
das
jne
xchg
jge
lock
lods
jb
push
or
push
popf
fsubrs
popa
or
mov
cmc
add
push
outsb
dec
or
push
xor
mov
sti
adc
lcall
clc
fs
push
mov
test
ficoml
adc
mov
mov
test
mov
cmp
test
ret
push
std
out
mov
or
jae
into
mov
lss
mov
sub
dec
cmp
test
mov
cmc
orl
aas
mov
mov
sub
aas
es
add
add
lock
mov
dec
notb
jne
dec
pop
xor
mov
stos
imul
xor
cs
cld
xorl
lcall
fidivl
rcl
adc
lods
cld
sti
or
pop
ss
push
imul
push
mov
je
sbb
cmp
mov
out
fistpl
ja
inc
sbb
or
add
inc
push
push
jecxz
push
dec
cmp
adc
jae
addl
push
cwtl
jnp
lock
pop
cwtl
test
push
iret
gs
call
repnz
shlb
mov
sub
xor
jp
rcll
cmp
mov
loop
jo
pop
and
fnstcw
xor
aaa
xchg
mov
es
repnz
test
jecxz
mov
sahf
pop
pop
fisttpl
or
pop
imul
push
aad
xor
adc
jg
or
les
sarb
mov
lret
mov
ss
dec
push
scas
in
test
stc
std
mov
or
xchg
out
inc
into
and
mov
mov
icebp
stos
dec
pop
xchg
sahf
push
daa
push
rol
daa
mov
mov
mov
sbb
ds
sub
out
sti
push
test
add
in
jb
out
push
ljmp
jne
xor
sbb
stos
add
xchg
push
push
xor
push
or
mov
inc
inc
jb
in
out
addr16
xchg
iret
xor
imul
xchg
fsubl
test
inc
adc
add
jle
jo
sbb
mov
shl
dec
loope
insb
hlt
jg
or
cwtl
xchg
mov
ss
hlt
mov
pop
scas
insb
jmp
lea
jmp
fsubrl
das
or
adc
lcall
lock
inc
and
cmp
ret
mov
icebp
popa
mov
add
icebp
mov
in
ja
hlt
cs
pushf
outsb
daa
sub
test
clc
movsb
aaa
xor
cld
xlat
stos
lods
fdivl
mov
test
bound
insb
ret
jmp
and
arpl
inc
dec
mov
mul
cmpsb
rorl
movsl
gs
add
jp
hlt
sbb
out
in
add
fbld
repnz
jecxz
subl
xor
push
or
xchg
lahf
and
xor
jo
push
jl
outsb
sbb
adc
clc
popa
cmp
add
xchg
mov
push
fdivrl
mov
dec
repz
mov
xchg
add
pop
xor
fldenv
mov
int3
mov
mov
pushf
pop
xlat
mov
xor
movsl
pop
xorb
lods
pop
lock
cmp
jbe
jns
popf
push
aam
jns
data16
nop
ret
mov
cmpsb
mov
sub
mov
jmp
cmc
xchg
push
ja
or
popa
lods
test
or
push
pop
and
clc
icebp
push
add
adc
sahf
fstps
lods
fs
inc
pop
aad
in
pop
movsb
pushf
xchg
sub
cmp
mov
mov
pop
cmp
call
pop
xchg
jle
xchg
rorl
lock
cmpsb
dec
dec
and
sbb
jne
pop
mov
cmp
ds
mov
jne
adc
xchg
pop
in
adc
mov
inc
jp
sub
sbb
and
aam
mov
clc
stos
xor
mov
jge
movsb
outsl
mov
imul
jnp
adc
pop
outsb
cmp
outsb
xchg
sbb
pop
js
pop
xor
je
inc
aas
das
sub
push
je
cmp
push
jb
orb
mov
pop
divl
lret
pop
nop
mov
rcr
imul
sub
negl
or
pop
jae
inc
xlat
daa
push
sbb
loope
ret
in
dec
cmp
scas
sbb
fcoml
mov
pop
cltd
push
jecxz
mov
insb
cmp
mov
out
test
pop
cmpsb
pop
xor
push
cli
jecxz
xor
xchg
dec
notb
sbb
popf
iret
mov
sbb
call
and
xchg
jl
sub
sbb
jl
xor
pop
out
fucomp
xchg
sbb
add
lret
sub
and
and
pushf
leave
push
jmp
pop
out
iret
sbb
jmp
pop
push
ds
inc
mov
loope
mov
out
ret
scas
scas
mov
and
pop
and
setl
xorl
add
loopne
lahf
daa
fcmovnu
int
cmpsl
xchg
sub
mov
pop
mov
addr16
loop
mov
pop
lea
call
stos
nop
out
cs
decl
cmpsl
push
loop
fdivl
pop
dec
je
lret
ja
imul
jge
and
jge
add
mov
inc
fs
outsb
fcmovnbe
mov
push
gs
gs
sbb
sti
hlt
arpl
lock
jl
roll
sub
lods
mul
out
loope
xchg
inc
mov
dec
lcall
bound
sub
mov
test
jnp
out
inc
push
push
sub
xchg
shlb
les
out
jecxz
outsl
inc
movsl
cld
stos
cmp
test
aaa
jbe
cmp
mov
subb
inc
sub
jne
pop
faddp
sahf
js
aam
or
orb
roll
and
int
add
mov
jb
pop
shrb
push
scas
jb
sub
ret
jmp
push
dec
add
jmp
dec
mov
sub
push
ljmp
adc
fadd
ds
pop
je
roll
dec
push
and
shrl
cli
in
pusha
arpl
loopne
inc
shr
cmp
xor
jbe
or
adc
sar
jmp
xor
xchg
dec
mov
mov
adc
inc
xlat
test
cmp
xorl
cmpsb
ja
jne
movsb
jbe
push
add
rcl
loope
pop
fdivl
push
fwait
cmc
cmc
mov
lret
sbb
push
and
jl
push
pop
int
bound
push
in
push
push
cmp
in
repz
jp
jne
inc
mov
jne
cmp
js,pt
xor
jg
inc
pop
cld
mov
pop
lock
mov
insb
adc
frstor
pop
aas
xchg
lods
dec
or
mov
out
jbe
jle
dec
cmc
in
fnstenv
inc
sbb
cmp
gs
jne
inc
mov
push
ret
mov
stos
loopne
inc
enter
shll
lret
adc
xor
bnd
std
cltd
jb
scas
jmp
stc
or
pop
faddl
sahf
shlb
inc
mov
divl
sarb
mov
aam
xchg
loope
test
or
lods
aas
sbb
jne
cs
mov
out
jmp
gs
jecxz
fstpl
clc
cli
adc
imul
push
mov
movsl
cmp
lret
push
lcall
xchg
xor
lods
addl
jno
add
cli
rcrl
and
scas
out
and
xchg
xchg
fidivrl
fcoms
jbe
ljmp
shll
mov
sbb
ja
loop
push
adc
xchg
pop
orb
insl
subb
pop
imul
scas
imul
xchg
fcoml
mov
xor
mov
fldenv
mov
inc
or
out
sub
and
cmp
repnz
pop
cmc
mov
push
call
inc
xchg
popa
inc
out
imul
inc
sbb
dec
jge
sbbb
pop
push
lock
stos
xchg
jnp
cs
test
cmpsl
cmp
lods
popf
gs
xlat
mov
mov
std
xchg
sbb
cmp
clc
out
test
xchg
jge
xor
push
push
jecxz
sahf
add
dec
mov
jl
push
xorl
adc
jno
stos
call
sahf
adc
popf
test
sbb
jp
enter
fsubr
add
xor
sub
pop
mov
loopne
pop
movsb
xchg
cmp
push
das
je
bound
loopne
shl
push
orb
popa
cmp
push
loope
mov
aaa
shr
imul
inc
sbbl
movsl
mov
push
cmpsl
inc
rcrl
inc
cs
mov
cmp
aaa
push
setno
js
gs
mov
cltd
cmp
dec
jb
and
cmp
dec
je
mov
iret
lret
add
dec
pop
dec
stc
mov
cmpsb
sub
mov
test
dec
insb
jmp
dec
mov
rcrl
sarb
ja
mov
ret
xlat
in
sarl
notl
push
mov
fdivs
dec
mov
push
mov
sbb
je
icebp
xchg
jbe
push
arpl
xchg
dec
addr16
addl
mov
dec
fstp
pop
dec
adc
jno
addr16
arpl
sub
movsl
mov
int
addr16
fwait
test
ja
jne
inc
add
ficoms
test
inc
mov
das
cmp
pop
pop
mov
dec
es
ljmp
cmp
xor
sub
sbb
cltd
pop
inc
out
loope
xchg
shl
movsl
and
cmpsb
and
jno
mov
clc
outsl
jp
cmp
mov
je
push
jl
std
ficoml
jg
adc
add
test
xchg
xchg
icebp
outsb
jle
mov
inc
or
jecxz
xor
mov
idivb
jmp
sbb
decl
sbb
add
idiv
fstpl
sub
mov
fdivrl
cli
inc
and
mov
loop
push
jecxz
outsb
mov
jno
repnz
jb
lret
push
aad
std
jge
inc
test
enter
stos
xor
sbb
insb
es
ljmp
mov
push
in
add
rolb
inc
xlat
imul
dec
jnp
push
jbe
mov
jl
dec
scas
aaa
test
sbb
pop
sub
icebp
adc
rorl
loopne
daa
inc
icebp
sti
xchg
or
pop
inc
jmp
sbb
loopne
cld
jmp
mov
fiaddl
mov
fldl
ljmp
jge
or
gs
and
icebp
mov
call
jle
lret
jge
std
out
jge
cmpsl
adc
mov
or
xlat
mov
movsb
out
rcrl
faddl
and
jl
adc
daa
loope
push
push
mov
addr16
std
pop
fiadds
fwait
mov
test
jmp
mov
ror
mov
mov
or
mov
flds
test
push
test
fadd
and
pushf
pusha
shr
lock
scas
into
add
push
sbb
scas
pop
subb
decb
xchg
or
jmp
cmpsb
lahf
cmp
push
fmul
mov
in
jno
jae
cmpsb
test
cmp
mov
cmp
adc
mov
fisttpl
cmp
jl
rolb
jne
pop
mov
jp
pop
fmul
push
test
mov
inc
mov
ljmp
adc
outsl
mov
pop
inc
xor
mov
paddusw
xor
inc
outsl
filds
mov
aad
sahf
and
or
or
dec
mov
shr
pop
lods
pop
fcmovu
cld
loopne
mov
xlat
cs
adc
pop
or
and
dec
pop
pop
add
mov
into
cmpsb
add
cld
inc
lods
scas
mov
rcll
adc
xchg
mov
das
les
jle
xor
add
mov
and
out
mov
dec
jp
data16
mov
mov
je
jmp
sub
mov
add
dec
cmp
adc
aaa
std
inc
cmp
test
ret
das
pop
cmp
cmp
cwtl
mov
int
dec
bnd
out
mov
into
cmp
popa
rol
rep
jns
or
dec
lret
mov
icebp
adc
roll
sbb
fidivs
jbe
xchg
mov
rolb
push
std
pop
fbstp
dec
leave
pop
xor
jmp
int3
mov
jecxz
fwait
jnp
inc
and
cmp
jmp
mov
scas
stc
cmpsb
iret
xor
xchg
sub
or
js
lock
hlt
enter
loopne
das
or
in
pop
sbb
mov
ds
xor
cmp
jno
js
aam
push
xchg
jmp
inc
stos
xor
fimull
push
xchg
in
sub
xchg
out
mov
or
or
pop
sbb
xor
mov
pop
jbe
lock
inc
loopne
stos
mov
add
adc
insl
sbb
sub
push
jecxz
push
lahf
or
mov
dec
fwait
sbb
inc
repz
push
mov
call
popf
jns
rcrb
scas
sub
mov
pop
xchg
jns
jle
test
xor
testb
outsl
adc
xchg
push
add
les
inc
scas
mov
cli
xor
sub
add
and
inc
or
dec
xlat
mov
test
stos
push
push
jl
cmc
mov
insb
mov
shl
stos
or
pop
sbb
cmp
rcrl
stos
mov
je
aaa
mov
add
dec
ret
push
mov
mov
push
pop
push
add
mov
jl
iret
jae
or
test
adc
and
mov
and
and
jle
lea
testl
cwtl
mov
movsb
pushf
or
lds
jo
nop
dec
or
orb
push
push
mov
cmp
scas
mov
push
and
popf
jae
mov
jp
sub
fbld
aam
clc
jp
cs
jns
xchg
lcall
call
loope
dec
mov
cmp
mov
test
ret
scas
jmp
int3
xchg
loopne
lret
addb
out
sbb
push
dec
push
or
sbbl
and
pusha
leave
in
lret
dec
xchg
movl
dec
adc
mov
mov
call
cmc
adc
outsl
lods
divb
push
outsl
pop
jb
jge
jnp
subl
decb
ror
fwait
outsb
lods
ja
int
and
sbb
or
shlb
and
rcrb
pop
fldl
dec
or
test
add
ds
in
shl
stc
arpl
mov
push
sub
rcrl
inc
stos
adc
xchg
push
jp
lods
pop
ljmp
mov
bound
sub
std
loopne
xor
adc
jle
and
push
inc
sub
fstpl
fwait
mov
mov
je
pop
sub
shll
or
sbb
jnp
std
pop
popa
xor
mov
or
sub
xorb
or
xchg
les
sub
pop
dec
mov
loopne
sub
addr16
cmp
jno
aas
mov
mov
lock
push
push
cmpsl
and
jno
scas
xchg
push
in
push
mov
lcall
push
imul
mov
incl
jle
stos
hlt
inc
cmpsl
cmc
push
rcl
pop
and
sahf
jns
dec
inc
roll
jnp
outsl
sti
clc
jp
imul
mov
xor
pop
mov
jbe
and
lret
fisttpl
popf
insl
dec
dec
inc
mov
sahf
push
adc
mov
xor
in
cmp
push
and
insl
push
mov
jno
or
xchg
fcomip
add
push
hlt
mov
jns
or
pusha
mov
clc
in
sahf
cltd
sbbl
fldt
cmp
je,pt
push
and
inc
jb
dec
or
adc
sub
xor
mov
int3
add
push
hlt
jecxz
push
fnstcw
mov
mov
data16
fs
dec
mov
lods
imul
fimuls
mov
xchg
sbb
dec
subl
mov
jmp
xor
shl
nop
ret
aas
cmp
fs
push
or
call
pop
jecxz
imul
jmp
je
sbb
out
rcrb
xchg
xchg
mov
popa
jns
push
aad
dec
add
out
es
xor
jo
cmp
mull
mov
cmpsl
jbe
movsl
sbb
pusha
cs
js
xchg
mov
mov
or
cmpsb
int
cld
mov
hlt
icebp
mov
or
ret
fst
in
idivl
xchg
fucom
or
pop
xchg
or
jnp
pop
adc
cmpsb
lret
icebp
rcrl
cs
addr16
fs
cmp
xor
sub
mov
cmpsb
dec
sbb
cmpsl
add
loope
add
adc
dec
daa
adc
icebp
jecxz
mov
lahf
dec
sbb
mov
int
pop
jo
imul
addl
icebp
es
sbb
jge
stos
into
pop
adc
loope
jbe
push
pop
add
repnz
repnz
shlb
rorl
pop
ja
mov
add
aad
dec
pop
or
cmp
loopne
jo
test
cwtl
pop
dec
sbb
xchg
push
fwait
sub
aad
adc
jae
adc
push
pop
ljmp
push
clc
jle
sbb
out
xchg
int3
add
mov
jle
mov
jg
out
sarb
aam
cmp
enter
mov
inc
jle
push
test
rorl
daa
dec
pop
cmp
adc
dec
jl
aas
jecxz
push
sbb
jns
sbb
pop
lea
xchg
test
nop
jno
xchg
lea
xor
adc
inc
ss
lret
fisubs
call
push
popf
imul
sub
test
bound
add
repnz
fiaddl
ffree
lahf
ss
dec
lock
jge
iret
add
or
lea
repnz
repnz
jl
into
aaa
shrl
pusha
add
pop
inc
lock
or
and
push
dec
inc
bound
jbe
pop
push
mov
mov
rcr
push
outsb
fsubl
mov
mov
jnp
data16
ss
or
jno
push
leave
xchg
lock
pop
dec
inc
ret
shlb
lea
pop
mov
inc
push
jne
inc
pop
jmp
leave
loope
jle
push
inc
out
mulb
jp
std
ffreep
dec
cmp
or
or
rcl
adc
cltd
sahf
call
adc
pop
pcmpeqw
jno
or
cmp
negl
imul
xor
lret
hlt
aam
daa
in
push
rcll
pop
mov
insl
lcall
adc
or
dec
jmp
dec
test
xor
ja
sti
push
inc
ja
icebp
jg
xor
test
or
sub
fs
cmpb
div
fdivl
mov
cmpsl
cmpl
sbb
mov
lock
stos
ds
adc
ffreep
push
cs
cltd
test
push
mov
mov
pop
push
hlt
mov
cmp
andb
add
dec
inc
je
decb
pop
jae
push
xlat
pop
adc
lods
mov
bound
mov
cmpsb
jge,pn
jp
jb
fstpl
pop
subl
lcall
sbb
cli
pop
in
xchg
sbb
sti
shrl
adc
mov
ljmp
nop
stos
xor
mov
cli
pop
pop
mov
xchg
int3
popf
add
pop
pop
cmpb
mov
jo
add
mov
jecxz
sub
arpl
loopne
cmp
xor
and
inc
incb
popa
mov
add
push
inc
mov
add
push
pop
aad
jnp
push
or
cmpsl
ljmp
dec
fwait
push
mov
ljmp
add
jg
mov
mov
idiv
cwtl
cmpsb
cmp
nop
std
adc
pop
and
cli
out
xor
mov
mov
push
push
pusha
testb
mov
xor
mov
jl
cmp
mov
popf
sub
cmp
movsb
jp
or
ja
movsb
pop
jle
inc
insl
outsb
enter
add
hlt
lock
dec
sbb
xor
xchg
stc
push
jae
fldl
mov
mov
and
incb
mov
xor
lea
mov
pusha
push
iret
lret
jecxz
sub
cmp
add
pop
lods
clc
sub
jge
pop
pop
jmp
jne
ljmp
fdivl
loope
popf
sbb
dec
dec
jl
push
xor
fsubrl
in
in
addr16
jnp
inc
and
out
rcrl
or
mov
push
notl
popf
leave
sbb
js
push
adc
pop
das
imul
pop
pop
in
stos
sub
es
add
icebp
popa
divl
ja
daa
aad
mov
hlt
xlat
cmp
mov
adc
push
mov
inc
fadds
aad
xor
or
jge
fiadds
loope
out
in
add
dec
mov
jl
in
jo
jmp
outsb
dec
lret
mov
pop
cld
ljmp
mov
xor
dec
sar
or
dec
pop
mov
scas
lret
and
je
or
pop
jmp
test
sub
popf
dec
inc
ret
xchg
add
inc
bound
sbb
dec
cli
dec
inc
imull
clc
sahf
jnp
sti
in
outsl
add
cli
pop
sbb
mov
mov
shl
pushl
and
jle
pop
cmp
push
adc
loop
cmp
mov
cwtl
repz
mov
fwait
jmp
das
stos
mov
prefetch
mov
jl
push
add
sub
insb
add
subb
pop
or
fidivrl
sbb
push
ljmp
jge
jo
scas
and
not
add
jecxz
fcoms
lock
push
lahf
sub
or
int
pop
mov
rcll
mov
popf
push
mov
fdiv
mov
pop
roll
cmp
jle
fdiv
fdivrl
out
and
xchg
movsl
and
sbb
scas
clc
aad
jo
or
jbe
jp
lahf
stos
pop
movsl
mov
rcll
jmp
stc
lds
cmovge
hlt
dec
shl
fst
xor
sbb
rolb
int3
in
jmp
mov
ret
xchg
lret
cltd
or
jo
mov
je
mov
dec
out
mov
add
push
inc
xchg
sub
aam
cld
insb
loop
shlb
cmpsl
mov
sub
push
mov
loope
pop
jle
fstpt
and
mov
mov
xor
xchg
push
cwtl
sbb
cmp
in
mov
lahf
addr16
sub
lds
fsubrl
aad
dec
fnstsw
adc
out
cmp
pop
inc
call
mov
ds
mov
es
loopne
ret
mov
sbb
jns
adc
sti
mov
cmp
and
sbb
xlat
xor
loopne
jl
std
nop
adc
ret
push
adc
sti
psllw
insb
aas
cmp
lea
dec
rcl
pusha
mov
mov
or
movsb
sbb
jl
fildll
fsubr
imul
stos
sbb
xchg
es
lret
add
inc
call
ja
lahf
popa
pop
cmp
push
xchg
push
fdiv
sti
add
mov
adc
or
push
je
imul
add
push
mov
mov
outsl
outsl
pop
mov
je
in
adc
insb
and
cmp
outsl
jmp
jp
lea
mov
inc
cmp
jbe
lea
jg
xchg
lea
jno
dec
dec
mov
ja
or
or
fmuls
mov
mov
mov
xchg
call
ss
ljmp
inc
in
push
call
cmp
js
lea
out
dec
mov
and
inc
mov
cld
inc
mov
cld
inc
dec
cmp
outsb
mov
aam
pop
mov
je
subb
mov
repnz
dec
inc
cmp
jbe
mov
and
pop
divl
imul
mov
sbb
neg
mov
lea
bound
add
inc
fistpll
inc
ret
lea
test
testb
pop
ret
jmp
rolb
enter
les
sarb
mov
or
enter
mov
pushf
cwtl
xchg
xor
and
cmp
gs
xor
call
pushl
cmp
mov
jecxz
jge
fs
jge
lcall
pop
aaa
jb
cmp
aaa
push
push
mov
lcall
fildl
ret
adc
mov
jbe
mov
dec
inc
std
sti
xchg
mov
xor
stc
inc
cmp
inc
mov
mov
loope
lahf
out
adc
leave
pop
mov
xor
cmp
adc
sub
aad
pop
aaa
jbe
or
in
fstl
aas
divb
pop
xor
notl
push
icebp
push
mov
neg
lcall
push
aam
mov
xchg
mov
aam
mov
shrl
mov
pop
dec
mov
js
pop
mov
aaa
sub
push
jae
mov
aaa
dec
stc
push
jae
bound
sbb
pop
ja
pop
mov
mov
shll
mov
inc
aas
push
jmp
and
icebp
dec
mov
mov
stc
dec
mov
jbe
mov
ret
test
sbb
ret
divb
fcomp
pop
testl
pop
pushf
mov
cmpsb
pop
sahf
sub
pop
movsb
mov
fcomps
mov
dec
aaa
mov
lods
mov
outsb
sti
out
mov
push
cmpsb
clc
push
dec
ds
inc
sbb
lock
lods
fidivrs
cmpsl
or
out
mov
test
daa
mov
in
imulb
out
jbe
push
pop
jmp
jbe
sarb
and
out
into
daa
loop
mov
notb
mov
xor
add
insl
pop
xchg
dec
inc
adc
pop
pop
into
lcall
pop
cmp
outsl
in
mov
sbb
shl
pop
je
dec
xor
pop
pop
fadd
mov
sub
pop
idivb
stc
pop
sbb
xchg
xor
int
in
sbb
stos
mov
aas
mov
dec
sarb
mov
stc
dec
cmp
mov
scas
push
mulb
mov
or
idivl
jp
into
mov
jnp
paddsb
negb
xor
pop
or
jle
mov
insl
cmp
dec
and
insb
in
int3
mov
push
cmpsb
or
nop
sub
or
insl
outsb
loope
divb
xchg
jmp
fstpt
xchg
sbb
fsts
or
and
insl
lea
dec
xor
mov
mov
mov
in
and
mov
cmc
push
mov
ret
out
divb
xchg
add
fdivs
out
inc
or
mov
sbb
ret
outsl
es
bnd
pop
movsl
insb
adc
movd
and
repnz
push
dec
stc
add
add
xchg
mov
add
lahf
dec
and
aas
jbe
jbe
add
push
out
or
and
enter
repnz
stos
rcr
lock
mov
mov
cmpsb
aaa
jbe
or
xchg
loopne
pop
mov
into
adc
mov
cli
jg
jmp
adc
aaa
pop
test
pop
mov
mov
movb
aas
roll
mov
sti
or
mov
inc
test
rorb
stos
test
out
out
jle
xchg
sbb
push
cmpsb
pop
sti
or
mov
pop
bound
outsl
jge
out
or
clc
rcrl
ja
out
jge
stos
and
sbb
adc
ss
lock
shlb
ret
inc
cmc
and
cmp
das
xor
pop
cmp
push
hlt
cmpsb
push
pop
lea
ja
inc
pop
push
push
enter
stos
mov
push
sbb
cmp
movb
aas
mov
outsb
mov
pop
dec
loope
ds
adc
pop
or
pop
fcomps
push
sub
pop
xchg
push
cmp
dec
jge
ret
push
sbb
sarb
mov
pop
nop
and
ss
gs
sub
pop
xor
push
fwait
imul
fs
sub
jnp
mov
adc
lcall
add
dec
outsl
in
pop
push
iret
idivb
sbb
adc
pop
mov
xor
push
or
bsr
data16
aaa
cmp
pusha
outsb
andps
mov
inc
dec
dec
mov
mov
push
dec
outsb
pop
and
inc
push
loop
pop
and
jae
clc
mov
mov
xor
divl
test
jne
or
jge
fwait
adc
jmp
adc
insl
and
mov
push
sub
in
inc
aaa
call
lods
pop
push
sub
pop
clc
mov
add
in
in
std
or
adc
mov
push
dec
test
jb
mov
lock
mov
mov
ret
adc
mov
add
cmp
or
rolb
jmp
jmp
cmpl
pop
push
in
je
invd
sub
nop
or
push
mov
or
adc
jmp
sub
push
insb
xor
orl
data16
xor
and
adc
add
push
mov
call
dec
in
cvtdq2ps
or
test
incl
inc
ret
dec
outsl
test
pop
imul
adc
jne
insb
inc
insb
insb
outsl
arpl
in
dec
repnz
jb
je
arpl
gs
dec
js
mov
sub
mov
dec
iret
aaa
mov
incl
flds
in
jge
mov
je
repnz
sbb
adc
test
xchg
mov
fdivrs
cld
cmpb
je
or
test
cmp
xor
rorb
dec
cld
mov
and
xor
aas
icebp
dec
inc
das
and
and
icebp
add
sub
mov
ds
outsl
mov
clc
push
repnz
jge
sbb
es
clc
decb
jne
popa
call
push
add
inc
or
jl
inc
xchg
fnsave
fcmovbe
inc
mov
mov
dec
dec
mov
ja
hlt
cmp
jnp
lea
sub
aas
lret
lock
mov
shl
sbb
ljmp
xchg
mov
clc
xchg
in
scas
fisubrs
fdivrs
mov
fmull
sbb
ja
loopne
cmpsb
std
pusha
dec
inc
dec
mov
add
fsub
scas
xor
or
push
inc
popf
call
cmpsb
nop
leave
incb
mov
and
or
mov
push
mov
sbb
xor
inc
cmpb
mov
dec
mov
enter
dec
xchg
test
pop
mov
in
xor
and
add
gs
push
sub
imul
jp
imul
bound
jl
outsw
jnp
dec
imul
jmp
jp
popa
outsl
ja
outsl
popa
pop
jle
inc
gs
inc
and
xchg
mov
add
add
xor
adc
rcl
leave
cwtl
cmpb
mov
inc
jl
dec
inc
fadds
ret
lea
mov
fdivr
outsl
outsl
dec
cmp
jno
lea
add
cmp
insl
dec
mov
sti
mov
adc
mov
mov
loope
jo
mov
mov
outsl
jmp
mov
dec
mov
hlt
pop
cld
in
testb
call
fdivrs
dec
shlb
jecxz
add
dec
pop
inc
clc
call
mov
xor
add
out
push
notl
clc
jp
and
inc
mov
fcomi
dec
cmp
inc
add
test
jb
daa
inc
das
test
inc
inc
inc
mov
add
out
scas
xchg
leave
dec
mov
pop
inc
das
sub
xchg
lahf
inc
xchg
inc
push
add
jne
push
pushf
adc
out
das
int3
lea
mov
outsl
lods
sub
or
pop
fistpl
jae
je
outsb
add
jl
mov
add
cmp
or
pop
jg
xchg
or
nop
sbb
and
fucomi
or
dec
mov
inc
loopne
inc
inc
sbbl
ss
lock
outsb
or
xchg
mov
rorl
in
adc
mov
js
jo
outsb
pop
test
inc
inc
mov
mov
xchg
mov
jne
js
mov
pop
pop
loopne
cmp
pop
mov
and
fmull
mov
arpl
xor
pop
sti
dec
inc
mov
scas
pop
mov
or
jo
aas
fnstsw
inc
push
and
adc
cmp
xchg
out
mov
or
push
cli
ss
enter
xlat
adc
cmp
js
js
fstpt
mov
ja
lods
push
lea
iret
cmp
das
arpl
cltd
mov
test
in
or
cwtl
add
dec
cmp
mov
cmp
mov
jo
sbb
push
test
dec
popf
inc
mov
fstl
mov
push
mov
cld
in
dec
lea
sbb
push
leave
sar
arpl
sbb
cmp
and
fisttps
mov
pop
lods
adc
or
jo
cmp
push
sbb
aam
hlt
cmp
fdivrl
icebp
arpl
or
add
mov
mov
nop
pop
call
call
inc
add
add
adc
in
dec
int
inc
in
inc
andb
js
mov
test
jle
popa
dec
mov
and
fisttpll
and
clc
lock
pop
dec
mov
loopne
stc
popf
movsl
mov
movsl
in
mov
and
adc
ud1
jae
adc
or
sbb
in
jne
or
cmp
pop
test
add
leave
pushw
push
shlb
jl
dec
ja
sub
data16
in
or
jo
lds
adc
aaa
adc
dec
or
pushf
add
mov
sbb
test
es
sbb
shl
inc
scas
insb
jmp
pop
or
test
push
sbb
push
inc
add
xchg
addl
rcrl
add
pop
int
sub
add
int3
pop
add
sub
jae
xchg
lods
aam
or
lods
in
and
shlb
push
rclb
add
outsb
gs
xor
add
fs
insb
inc
loopne
outsl
mov
mov
jb
jae
addps
sti
das
hlt
dec
imul
dec
outsl
jb
sbb
lcall
xor
cmp
lsl
add
cmp
mov
imul
aad
and
pop
clc
sti
add
mov
mov
ja
mov
hlt
xchg
xchg
xor
mov
in
adc
ja
adc
add
inc
dec
add
or
or
dec
jne
mov
in
ja
pushf
jle
or
mov
mov
jnp
insb
pop
sbb
lods
cmp
sub
ja
call
push
fistpl
cmp
dec
sbb
push
idivb
and
lods
test
je
sbb
inc
or
movsl
into
sbb
and
rclb
dec
clc
rorl
lcall
clts
or
test
in
div
mov
incb
cmpsl
outsb
add
fisttpl
cli
je
push
shlb
pop
or
or
ret
pop
dec
adc
or
or
jl
add
push
fnsave
inc
ret
loope
xor
pop
out
adc
sbb
cwtl
gs
push
xchg
rorl
roll
adc
lret
xchg
mov
test
jp
xor
pop
dec
mov
cmp
push
lea
testl
mov
xchg
cmp
jo
cmp
fwait
fs
mov
and
es
jecxz
mov
lcall
dec
andl
out
outsl
mov
in
in
mov
push
push
sbb
orb
fistl
xor
push
mov
cmc
push
cmpl
test
mov
sbb
push
rclb
pop
xchg
out
add
sbb
test
dec
mov
lea
push
xchg
shlb
jp
add
mov
test
loop
adc
in
fistpl
add
inc
xor
and
sbb
mov
xor
sbb
sub
push
xor
push
sub
pop
cmpsl
in
or
cmp
pusha
ljmp
pop
ja
subl
shr
xlat
fcomps
aam
push
sub
movsb
mov
push
mov
and
pop
push
roll
adc
sbb
std
ret
mov
mov
cmp
or
add
mov
sub
mov
add
cvttps2pi
fcoms
dec
dec
pop
add
lahf
test
dec
inc
push
pop
push
push
pop
out
inc
xchg
les
and
adc
push
sub
jp
pusha
mov
sub
lds
shlb
add
bound
out
jb
mov
test
call
pop
push
stos
dec
loop
pop
sub
mov
and
mov
ret
push
add
cmp
xchg
mov
add
add
add
fsts
push
lcall
aad
cmp
loopne
loop
inc
dec
aam
mov
jbe
xchg
fistl
aad
das
shrb
mov
push
fisubrl
push
jmp
and
push
lret
outsl
pop
push
ljmp
jl
insb
adc
mov
cltd
and
cmp
xor
sbb
mov
push
or
mov
out
jbe
je
xchg
lret
outsb
mov
mov
js
popa
arpl
add
sub
mov
in
add
inc
outsb
ja
sub
mov
xchg
fadds
pop
inc
or
add
cltd
add
insl
pop
or
add
pop
push
xor
add
mov
popa
test
xor
and
add
in
ljmp
call
outsl
ja
fisttpl
or
lds
loope
xchg
pop
outsb
fcomi
add
test
js
nop
add
in
divb
xchg
add
add
pushf
pop
mov
dec
push
jae
pop
or
mov
pop
sub
mov
add
popa
ficoml
fistl
xchg
outsb
and
les
dec
out
loope
imul
push
in
sahf
popf
pop
jmp
in
mov
sub
sub
aam
add
jg
int
in
in
inc
jg
aam
add
testb
cs
test
icebp
lcall
cmp
mov
xchg
iret
dec
push
or
out
pop
mov
daa
jp
int3
and
out
jne
mov
add
stos
push
mov
sti
outsb
xor
cmpsb
loop
xchg
pop
push
jmp
into
add
xchg
scas
mov
mov
cmpb
fistps
jl
stc
clc
icebp
js
in
add
lret
insl
imul
incl
adc
add
loope
insl
sti
xchg
out
mov
push
shlb
lcall
add
clc
xor
pop
adc
pusha
mov
enter
fbstp
or
mov
lock
xchg
mov
mov
or
or
mov
testb
mov
pop
std
mov
cmp
sbb
mov
jne
jne
cmpsb
xchg
sbb
push
xchg
cmp
xor
fbld
push
add
adc
push
sbb
hlt
or
jne
cmp
sbb
fisttpl
dec
sbb
stc
popa
xchg
cmp
lock
jae
mov
pop
cld
enter
xchg
mov
jle
rcll
pop
fidivrl
dec
xor
and
lahf
push
aaa
xchg
add
out
testb
cmp
rolb
arpl
lahf
inc
inc
push
or
cwtl
sti
pop
int
and
imull
stos
imul
jno
inc
add
xor
test
push
out
cmp
mov
fmuls
lods
mov
push
jns
push
mov
push
sbb
jp
mov
std
nop
stos
ja
xchg
outsl
mov
enter
imul
imul
push
and
xchg
std
dec
mov
inc
mov
jmp
int
sbb
int3
xchg
insl
xor
mov
cmp
pop
fnstsw
fldt
xor
jecxz
mov
mov
dec
dec
mov
inc
popa
pushf
sub
retw
sub
jle
xchg
mov
mov
mov
mov
popf
shll
cmp
sbb
xchg
dec
or
outsb
rclb
ds
lods
mov
push
shlb
sbb
rcl
cmpsb
inc
mov
sub
andb
int3
negb
sub
lea
jnp
pop
lret
inc
xchg
shrb
out
adc
fcmovb
add
mov
xor
mov
add
and
adc
jae
fdivp
scas
mov
push
mov
dec
sub
sbb
in
pop
lret
xor
jg
xchg
xor
jb
jg
push
ror
mov
xchg
add
sub
jno
mov
lret
mov
dec
mov
outsl
fwait
mov
pop
xlat
sbbl
cmp
outsl
imul
push
and
mov
out
lcall
adc
inc
outsb
mov
cltd
add
shlb
in
out
push
cwtl
and
fildl
ss
repz
xchg
lahf
dec
push
mov
pop
pop
lock
ret
cmp
div
lods
xchg
sub
pop
mov
cmc
cmp
jp
lcall
mov
pop
in
sbb
lods
mov
push
jae
mov
adc
les
lret
push
addb
mov
sub
push
sub
ret
jecxz
divl
adc
jmp
dec
jo
sti
fdivs
or
lret
and
mov
aad
mov
cmp
xor
push
xlat
mov
inc
testl
mov
andb
xchg
outsb
loop
js
inc
push
fdivr
imul
mov
fiaddl
sub
xchg
ljmp
or
pop
xlat
icebp
mov
xchg
inc
std
cmp
jecxz,pn
jmp
xchg
inc
clc
xor
inc
push
loope
movsl
mov
sbb
add
shl
push
inc
repnz
push
xchg
pop
out
cli
ret
adcb
in
xchg
inc
shrb
ljmp
adcb
inc
ret
push
mov
pop
jo
icebp
call
movsb
cwtl
mov
add
cltd
in
mov
fcmovu
aam
ds
inc
mov
fucomp
mov
push
pushf
cltd
add
dec
mov
repz
cmc
sbb
xchg
shlb
fbld
stos
ret
loope
or
in
sub
mov
jo
xchg
or
cwtl
lea
jne
bound
push
add
mov
xchg
fisttpll
push
imul
ret
mov
pop
xchg
xchg
or
icebp
cmp
add
pusha
insl
mov
shll
lods
and
pop
frstor
mov
cmp
mov
insb
or
clc
lock
subl
insb
xchg
mov
icebp
out
cwtl
sarl
inc
xor
jmp
jmp
outsb
in
push
adcl
jg
sbb
mov
insb
or
mov
xor
xchg
jo
pusha
loop,pn
stc
push
ljmp
adc
in
pop
cmp
push
mov
or
add
xor
mov
mov
lret
loopne
mov
push
sarl
mov
pop
mov
imul
pushf
cmp
push
cmpsb
icebp
add
pop
mov
cmpsl
push
push
jl
andb
fistl
daa
outsl
mov
mov
insb
push
iret
sbb
dec
adc
mov
mov
add
sub
sub
xor
mov
inc
fidivl
sbb
xchg
dec
lcall
cmp
add
cwtl
out
add
leave
idivl
and
and
cmpsb
stos
cmp
sahf
daa
sub
sub
fsubrl
and
pop
ljmp
cmpsb
cmp
sbb
jne
ret
jne
sub
pop
fadds
pop
les
orb
push
bound
mov
push
mov
insl
pop
xchg
mov
cmp
imul
dec
push
inc
jg
xlat
lds
pop
inc
fs
test
mov
push
popf
cmp
ja
imul
sub
pop
add
lea
fists
arpl
xor
sbb
cmp
xchg
addr16
outsb
sub
lahf
pop
fwait
xchg
push
popf
adc
lock
jle
fs
jne
fs
pop
and
push
ds
and
fcomps
ret
sbb
or
je
xchg
lahf
pop
cli
lock
mov
popf
aad
jp
add
lcall
bound
or
inc
loopne
xchg
mov
ss
scas
xchg
call
xchg
add
call
mov
nop
lock
xor
sbb
sarl
jl
rol
rcl
xchg
mov
popa
xlat
repz
jns
mov
stos
push
stc
mov
cmc
call
test
test
cmc
pop
dec
sbb
cmpsb
imul
pop
xchg
movsl
test
addr16
or
mov
jns
dec
pop
mov
out
sbb
xor
add
mov
add
jne
mov
hlt
or
add
mov
int3
loope
out
cwtl
mov
stos
loope
movsb
ret
lods
xchg
into
lods
btc
insl
cld
mov
mov
mov
das
rcll
inc
sbb
insb
cmp
popf
in
lahf
jnp
scas
into
fldt
sub
push
push
sub
mov
aam
xor
aam
adc
icebp
cmc
push
cmp
ja
inc
xlat
in
loope
stos
test
js
or
aad
fadd
mov
shll
movsl
push
imul
je
pop
push
sbb
jge
xor
std
xchg
adc
xlat
fucomp
dec
adc
popf
mov
js
jp
inc
push
dec
shll
jnp
pop
lahf
mov
mov
imul
scas
addl
hlt
push
xlat
mov
int
mov
and
pop
lock
inc
dec
clc
jbe
divl
lret
pop
push
fsubr
ss
xchg
repnz
popa
fabs
mov
rorb
and
imul
stos
out
sub
jge
lds
dec
pop
jmp
jne
cmp
insb
fisubrl
add
mov
push
ret
push
pop
sub
cmc
es
adc
jmp
xchg
daa
fsubrl
jge
jnp
leave
jmp
mov
pop
ret
imul
or
sbbl
idiv
jo
jmp
in
test
aaa
or
ss
or
or
in
iret
hlt
mov
sub
xchg
fwait
push
dec
fisttpl
test
stos
loopne
test
call
iret
push
in
mov
sbb
dec
lods
mov
ror
adc
aad
jnp
add
sbb
test
jl
mov
push
call
in
jae
dec
loope
mov
xor
mov
jle
fdivrs
jno
pop
sbb
add
dec
jle
jmp
dec
sahf
aaa
xchg
pusha
lods
pop
or
pusha
neg
lret
cmpsb
cltd
cltd
ljmp
addl
and
lea
lock
je
sti
out
mov
dec
cld
add
les
dec
push
fists
xor
fs
mov
mov
rcrl
mov
insl
pop
in
push
scas
push
aas
jns
pop
stos
jbe
jg
popf
fwait
adc
outsl
stc
and
rcrl
fistps
call
lods
in
sub
jbe
adc
ljmp
xchg
stc
cmp
bound
insl
sbb
cmpsb
sbb
xchg
mov
sub
movsl
push
cmp
lods
packuswb
cmpsb
enter
shrb
adc
lock
cli
fildl
pop
hlt
sub
cmp
jmp
cld
mov
xor
push
out
mov
lock
and
pop
aam
dec
in
loop
fs
add
adc
mov
mov
xor
sbb
cmp
pushf
aam
jo
cmp
mov
pop
xchg
stos
cmp
cmp
sbb
repz
cld
push
push
loopne
test
or
ds
sbb
fcmovbe
aam
push
push
xor
aaa
mov
mov
cmp
scas
ja
outsl
or
xor
fwait
leave
insl
div
scas
aaa
fdiv
cmp
xorl
adc
jle
int
jo
fnstcw
out
mov
scas
mov
js
icebp
jge
iret
icebp
jge
xchg
out
fsubs
mov
adc
loop
and
js
dec
sbb
jno
inc
sbb
mov
dec
push
mov
loopne
pop
test
icebp
jle
push
insl
pop
jnp
repz
test
cli
ljmp
decl
mov
xchg
mov
xor
cmp
mov
mov
scas
aaa
mov
cmp
out
sub
pop
cmc
lods
addr16
jle
xchg
or
ljmp
cmp
xchg
push
cmpsl
pop
xchg
xchg
sbb
xorb
in
jb
add
xlat
testb
lea
push
adc
popl
call
pop
jne
imul
ljmp
ja
push
ss
push
pop
cmc
xchg
shll
ds
sbb
mov
ja
ficomps
fildl
test
es
das
outsb
scas
mov
mov
dec
inc
jecxz
inc
pop
dec
jmp
mov
in
mov
mov
dec
or
xchg
shll
jmp
or
jg
push
ljmp
add
and
add
jmp
loop
fcoms
frstor
ja
cmp
xlat
rclb
lds
xlat
push
add
cmp
xor
xor
aam
pushf
xchg
xor
testb
or
pop
loop
rolb
jle
push
mov
sbb
mov
mov
xor
aas
push
sub
sbb
add
pop
push
inc
mov
aad
pop
xlat
sub
fcmovu
pop
loope
jmp
mov
loopne
mov
or
xchg
cmc
sti
daa
test
hlt
mov
and
lahf
outsl
and
pop
repnz
ja
stc
es
adc
sbb
lock
les
lcall
pop
arpl
sbb
sbb
pop
xlat
inc
xor
cmpsl
icebp
jo
pop
rol
mov
dec
add
inc
mov
shl
inc
cmpsl
mov
bound
addr16
ficoms
out
mov
aad
push
cmpsl
das
je
dec
sub
inc
lret
idivb
cmp
outsl
mov
xor
stos
pushf
nop
sbb
lcall
out
fcmove
das
add
jnp
add
pop
inc
jne
mov
stos
loope
insl
push
jns
pop
xchg
push
rol
inc
jmp
imul
push
cmp
and
jbe
cmp
sub
lcall
sub
sbb
stos
pop
popa
pop
iret
movsl
jbe
xchg
aam
test
jne
fiaddl
xor
xor
movsl
xchg
mov
sbb
mov
ja
sub
xchg
aad
fistpl
jg
fsubrp
dec
jo
push
mov
cmp
push
pcmpgtd
movsl
jl,pn
call
pop
aaa
stc
mov
jb
shrl
mov
cs
mov
add
cli
inc
add
mov
cmp
repnz
xor
popf
xor
dec
mov
sti
lods
mov
clc
dec
rol
mov
dec
sbbb
xor
cmp
in
jbe
pop
decb
out
pop
inc
ja
insl
ret
inc
mov
mov
push
push
mov
test
jg
cmp
xchg
sub
push
xor
adc
shrl
push
ficoms
and
mov
cmp
push
mov
outsb
xor
iret
in
inc
push
ss
xlat
cltd
outsl
aaa
jbe
sbb
orl
sbb
adc
insl
mov
and
mov
out
mov
outsl
push
mov
pop
xchg
scas
mov
pop
mov
jb
es
adc
pop
sub
and
push
filds
ds
pusha
mov
adc
fcomp
cmpsb
push
inc
cs
jne
nop
fiadds
add
fdivp
adc
in
mov
push
mov
mov
sahf
clc
or
jmp
cmp
or
pop
jecxz
mov
pop
div
mov
cld
or
mov
xor
dec
aam
mov
mov
loop
shlb
cmp
call
fwait
in
stos
mov
pop
scas
mov
movsl
fsub
call
mov
aad
push
out
stos
decl
jns
incb
cmp
pop
xchg
xchg
clc
outsb
or
mov
test
cs
cmp
in
jne
jae
andb
aas
jno
int3
shlb
cli
add
repz
sbb
mov
cmc
inc
roll
dec
inc
cmpsb
jp
xchg
fnsave
push
fnstenv
aad
inc
inc
sub
sub
jmp
pop
out
push
or
adc
js
mov
fcmovnb
or
mov
outsl
mov
sbb
scas
pop
sub
std
inc
xor
push
pop
fcomps
faddl
scas
mov
mov
cmpsb
push
daa
mov
outsl
mov
mov
mov
cltd
cmpsl
cmp
aaa
mov
imul
bound
ret
mov
pop
pop
sbb
es
xor
cmp
fiadds
nop
jmp
xchg
je
loopne
xchg
fidivs
sti
sarb
rcrl
inc
add
sbb
push
cmp
pushf
notl
jg
scas
cmp
cmp
scas
idiv
daa
cmp
fadds
push
pop
jne
stc
jl
add
std
fwait
push
bound
xchg
xor
nop
adc
icebp
inc
xlat
lock
mov
in
lock
xchg
inc
sub
js
inc
pusha
cwtl
jp
push
push
js
cli
sti
sarl
imul
and
mov
je
fcomi
aaa
addr16
pusha
pop
and
add
dec
dec
fisubrl
je,pn
pop
dec
aaa
loopne
movsb
cmp
inc
stc
inc
fdivl
inc
shlb
test
mov
cmp
xorl
stos
pop
outsb
push
arpl
jns
data16
pop
mov
pop
call
sbb
inc
lcall
pop
mov
outsb
or
dec
jo
adc
int3
out
into
xor
movsb
les
scas
push
jbe
fwait
adc
int3
mov
jmp
xlat
mov
popf
push
and
push
and
jecxz
in
sub
adc
push
dec
xor
shrb
cmc
fisubl
loop
lods
add
ret
sub
jecxz
fdivrs
mov
adcl
je
test
xor
or
xorb
adc
rol
mov
in
inc
mov
push
or
mov
or
mov
jne
popf
lahf
xchg
adc
xchg
jns
int
push
mov
outsl
jo
cmp
sbb
push
xlat
hlt
test
pop
adc
or
cli
mov
mov
ljmp
push
jle
out
adc
sbb
lcall
mov
sar
mov
push
sbb
fnsave
mov
jbe
fstpl
sar
or
or
es
pop
fcmovne
mov
mov
popa
lcall
shll
push
mull
inc
push
adc
outsl
scas
or
push
push
push
xor
aam
cs
dec
stc
push
push
ret
orl
push
ljmp
xchg
or
ds
sti
mov
shll
pmaxub
push
mov
inc
test
scas
jae
push
bound
cmp
jp
out
aas
mov
or
mov
adc
and
mov
in
jne
mov
pop
xlat
les
imul
in
cmp
movsl
adc
jns
movsb
insl
cmovge
push
repz
loope
sub
ds
mov
mov
mov
test
int
push
sbb
out
jns
sbb
mov
sbbl
scas
fadds
iret
xor
leave
in
jmp
jle
or
dec
sbb
insl
test
push
mov
mov
lods
mov
int
and
aaa
pushf
enter
scas
mov
mov
punpcklbw
xor
pop
pop
sarl
add
addr16
aaa
mov
cmovge
shlb
jb
jl
mov
push
dec
sbb
sub
shlb
xor
push
jmp
js
sbb
les
mov
push
rcll
inc
ret
pop
cmovg
sbb
xchg
data16
rol
bound
cmc
ret
out
repnz
add
add
mov
push
pop
fisttps
cmp
jae
outsb
out
in
adc
adc
pminub
js
popa
insb
lea
arpl
sub
pop
clc
jge
ja
push
mov
ret
ret
sub
xchg
cmp
aad
jge
pop
sbb
adc
data16
es
or
cmp
cmp
push
loop
andb
dec
jge
inc
ja
mov
inc
out
mov
fcmovnbe
ja
out
cmp
jo
in
and
fldt
xor
shlb
push
es
or
inc
imull
xchg
mov
dec
pop
mov
outsb
or
sub
sub
mov
inc
call
rorb
sbb
cmc
add
cmpsl
pop
sub
mov
push
lods
jnp
or
mov
mov
mov
jb
jne
fs
pop
loopne
or
repz
xchg
mov
shll
push
mov
push
add
out
jbe
mov
jb
adc
nop
fstps
xor
adc
jle
cli
jne
clc
jbe
dec
shrl
ss
es
push
push
sbb
xor
lea
push
ja
cmp
scas
sahf
fisttps
in
mov
pop
pop
imul
data16
sbb
xchg
jmp
aam
repz
push
icebp
sarl
mov
mov
movsb
add
scas
mov
mov
loopne
int3
jnp
mov
pusha
ja
sahf
sub
addr16
push
adc
mov
pop
mov
gs
and
pop
push
jl
mov
inc
jae
jg
push
out
sub
clc
mov
xor
ss
xchg
fwait
cmpsl
pop
pop
out
test
push
xchg
push
js
ss
outsb
inc
pushf
mov
neg
ja
and
stos
or
cmpsb
and
std
pop
in
mov
jp
adc
repz
std
ret
jae
in
mov
inc
pop
int
inc
fsts
aam
adc
sub
push
enter
mov
dec
fdivrl
inc
adc
pusha
sti
pop
add
mov
pop
xlat
scas
loope
pushf
add
ss
addl
xor
loope
mov
add
fsubp
inc
sbb
out
cld
mov
mov
mov
mov
jno
push
or
pop
jle
insl
mov
mov
std
mov
jmp
push
scas
loopne
sbb
or
push
andl
stos
push
jne
das
jbe,pt
scas
jecxz
test
jmp
clc
mov
in
jp
inc
push
clc
cmp
jae
fisttpll
pop
ficomps
repz
fwait
dec
aas
cmpsb
mov
lods
clc
adc
xchg
mov
insl
dec
push
xchg
xor
or
sbb
stos
mov
loopne
mov
pop
in
cmp
sub
sub
lock
mov
shlb
jo
and
pop
icebp
jl
jns
fnstcw
jge
lods
dec
fldl
jno
popf
lret
and
mov
subb
flds
insb
outsl
mov
fwait
test
insl
mov
jge
dec
pop
inc
subl
loop,pt
pminsw
dec
rcl
fsubrl
pop
test
pop
rorl
push
cwtl
push
xor
sti
pop
pop
mov
mov
mov
stos
mov
mov
dec
mov
mov
pop
leave
jae
dec
xchg
gs
sbb
push
jl
push
push
or
into
jge
jl
pushf
out
sub
fucomip
movsl
push
adc
mov
call
and
ret
clc
sub
mov
add
or
jl
loope
imul
cmpsl
cmp
jae
in
jg
inc
jne
jne
aad
xchg
inc
sbb
aam
pop
addr16
aaa
jge
std
out
ds
jge
push
mov
dec
jb
in
jp
mov
test
cmpsl
adc
insb
mov
in
push
out
push
dec
xor
aaa
push
pop
pop
sub
xchg
push
aas
test
fsubrs
das
xor
mov
je
jecxz
and
test
mov
jp
lds
xchg
xor
out
pop
cmp
cmp
icebp
inc
jo
repnz
sarb
insb
shrb
mov
insb
mov
sbb
or
pop
xchg
sti
sbb
stc
stc
ficoml
push
mov
or
mov
or
fnsave
jbe
lods
push
push
shll
ljmp
scas
aaa
xchg
test
and
pop
ret
pop
sarb
dec
xchg
sbb
aam
fisubs
lahf
mull
daa
mov
call
cmp
arpl
loopne
or
xor
push
xor
mov
mov
rorb
jnp
insl
push
xchg
filds
xor
pop
sub
aam
mov
ss
cmp
mov
scas
lea
push
loopne
push
cmp
push
push
cmp
xor
mov
cmpsb
xchg
xchg
push
pop
push
mov
int3
lret
clc
sbbl
into
outsb
or
push
mov
imul
push
xchg
mov
mov
jo
mov
cmp
gs
sub
lock
inc
aam
cmp
loopne
in
dec
dec
cmp
je
sbb
or
mov
sub
movsb
pop
popa
push
xor
iret
mov
stc
aam
sub
inc
jl
mov
icebp
repz
jg
pusha
ds
pop
scas
in
cmc
loope
leave
cmp
pop
out
jne
sub
inc
js
jne
movsb
xchg
adc
outsl
popf
jl
sub
add
lret
mov
out
ss
xor
cwtl
push
and
sub
loope
cmp
push
sbb
cmpsb
out
call
jle,pt
call
mov
xor
mov
enter
aaa
lcall
push
mov
cmp
dec
icebp
fmul
pop
insl
testl
pop
sub
ss
add
mov
ss
rcll
pop
xchg
dec
aaa
mov
inc
call
es
sbb
scas
or
les
jbe
jae
aam
add
xchg
test
shl
jns
pop
jecxz
mov
ss
js
xchg
insb
out
es
mov
lock
jmp
and
scas
in
xchg
mov
lahf
mov
pop
pop
sbb
shll
test
mov
outsl
outsl
cmp
adc
cmp
cs
out
lahf
ljmp
push
ljmp
insl
dec
mov
popa
ds
pop
call
je
push
stc
loope
mov
mov
mov
pusha
add
fisubl
add
push
inc
mov
inc
push
pop
pushl
ss
xlat
jmp
add
push
cmp
sbb
out
mov
cmpl
pushf
test
fcompl
fs
nop
popa
movsl
sti
in
mov
out
lret
fdivrl
hlt
inc
insb
jns
mov
adc
fists
stos
mov
mov
xchg
pop
pop
in
push
push
mov
push
hlt
rorb
movsb
mov
inc
rcll
fstpl
or
loopne
push
test
mov
arpl
jge
testl
jmp
int
data16
cmp
imul
outsb
flds
ja
push
xor
push
cmp
loop
adc
sub
add
cli
jle
add
push
or
xorl
das
ljmp
ficoms
cli
ja
movl
lods
xchg
pmaxub
fistpll
ret
rorl
fstl
jae
add
mov
imul
cld
sbb
shlb
loopne
lahf
rcrb
loope
inc
pop
inc
lret
or
das
push
inc
jl
shll
imul
subl
jnp
sub
inc
adc
xchg
push
jae
std
out
outsb
xor
test
jp
out
hlt
cwtl
or
shlb
std
andl
fcmovnu
cmp
sbb
lcall
and
aas
inc
sbb
jg
push
sbb
fisubs
lock
jo
mov
pop
sbb
and
mov
loopne
or
scas
imul
push
sbb
jae
push
mov
push
xchg
int3
sti
out
out
dec
sbb
adc
sbb
jmp
fdivs
fwait
xchg
movlps
outsb
and
hlt
aad
je
subl
iret
fucomi
cmpsl
mov
xchg
inc
push
lahf
rcrb
mov
mov
out
fwait
push
mov
dec
test
jns
mov
xor
lcall
call
shll
jmp
nop
test
jl
aad
sbb
hlt
les
mov
xor
pusha
mov
out
popa
movsb
sbb
in
mov
mov
jno
scas
xor
push
and
or
fnstsw
xchg
js
push
jns
shll
mov
outsb
ficomps
cmp
fcmovu
imul
push
test
or
insl
push
lea
negl
adc
jmp
sbb
roll
inc
and
test
out
aas
inc
rcl
dec
nop
push
or
mov
cli
pop
shl
xor
mov
xchg
jl
paddusw
sub
xor
dec
mov
lds
test
adc
cmp
mov
mov
ljmp
sbb
mov
jge
cmp
rorb
arpl
fwait
movsl
shlb
mov
mov
push
pop
fiadds
je
pop
repz
jne
in
scas
lock
sub
out
shll
cmp
loopne
mov
loopne
loopne
lods
les
cmpsl
sbb
mov
dec
sarl
int
sub
mov
mov
dec
pop
aam
daa
inc
lahf
mov
jle
dec
inc
jl
bound
insb
sarl
or
xchg
jbe
in
lods
cs
fisttpll
dec
les
and
xchg
dec
loope
and
xchg
adc
cmc
int
outsb
ret
mov
test
popf
push
jbe
pop
cs
pop
adcb
dec
mov
outsb
pop
xor
dec
sahf
stos
pop
cli
jmp
lcall
test
push
mov
push
inc
test
lock
iret
sbb
mov
sub
push
hlt
aaa
mov
arpl
pop
jecxz
mov
shll
sub
jno
jo
pop
insb
pop
pop
movnti
push
jne
pop
aas
push
inc
sti
out
push
lds
aam
test
ds
mov
pop
push
hlt
adc
clc
inc
mov
jmp
cwtl
rclb
jl
jo
mov
scas
repz
getsec
inc
divb
dec
xchg
cs
xor
cli
dec
push
and
addl
jb
insl
inc
jg
dec
icebp
out
testl
ficoms
xor
and
add
fdivp
lea
sbbl
xor
lods
arpl
xor
pop
enter
movsl
xor
sub
daa
clc
sti
cltd
sahf
mov
add
cmp
shr
subb
add
adcl
sbb
sbb
or
sub
jmp
push
sub
pop
cmp
jecxz
sub
sub
orb
test
shrl
call
mov
sub
pop
clc
sub
popf
das
scas
dec
pop
push
adc
rorl
cmp
push
pop
outsl
insb
fcmove
loop
ja
mov
adc
sub
sub
sbb
jne
test
imul
fildll
ss
neg
push
jb
push
mov
jne
shl
lret
mov
outsl
js
mov
not
cld
inc
jmp
in
shll
cmp
sbb
push
dec
pop
loop
insl
jg
jno
inc
mov
sbb
pop
xlat
add
or
aam
test
push
fcmovb
jge
in
sbb
roll
adc
cmpsl
pop
stos
pushf
div
cmpsb
idivl
jge
and
push
lret
mov
mov
jne
mov
mov
push
fisttpll
pop
stos
cmp
rorl
out
or
mov
mov
lret
sub
roll
mov
jae
adc
lea
cmp
jb
xchg
shld
xchg
ljmp
cmp
sbb
sbb
pop
ljmp
and
insb
out
out
push
push
or
repz
lods
fiaddl
in
add
fldcw
pop
xchg
loopne
mov
mov
loope
fsub
sub
pcmpgtw
mov
mov
ss
mov
fsqrt
lret
mov
sub
inc
in
pusha
jns
xchg
lahf
jae
rcll
mov
loop
imul
push
aaa
bound
fnstcw
inc
ret
scas
pop
leave
mov
lahf
shll
jl
xor
mov
lock
fistpl
pop
mov
stos
scas
sub
mov
dec
cmp
in
call
mov
or
fxtract
mov
cmp
xor
int
pusha
mov
pop
pop
dec
xchg
xor
ficoml
cmp
sub
arpl
inc
sarl
and
stos
std
cmc
lods
and
jge
add
out
test
and
leave
pop
sub
cmp
mov
cltd
xchg
cli
pop
pop
cmp
insb
or
push
dec
inc
xchg
test
pop
std
arpl
lret
jecxz
or
rcl
loope
dec
pop
sub
jle
inc
and
mov
ss
iret
lcall
enter
sub
sbb
out
inc
outsl
das
cli
test
rcrl
cmpsb
das
adc
push
enter
push
xor
ljmp
mov
lods
jle
and
pop
movsl
and
jo
mov
js
xchg
jge
jae
repz
sarl
cmp
out
add
lds
or
test
out
adc
call
mov
lods
push
fwait
fwait
mov
jne
scas
lret
dec
mov
fstpt
mov
mov
push
xchg
jmp
lcall
sbb
and
jno
lds
scas
popa
fwait
lds
or
js
icebp
rclb
rcrb
sbb
das
loop
in
mov
inc
push
aaa
sbb
arpl
xchg
jecxz
shr
cmp
mov
dec
jne
mov
push
adc
jne
mov
in
fcmovne
addb
jae
outsb
loope
and
dec
or
inc
scas
adc
lods
ljmp
insb
pop
cmpsl
pop
mov
mov
pop
fisubrl
sti
lock
pushf
and
nopl
jbe
ljmp
imul
mov
mov
out
mov
jp
outsl
stos
ss
lret
test
mov
icebp
roll
or
shlb
dec
es
dec
mov
add
movsl
nop
and
add
fnsave
cmpsl
shrb
sbb
les
pop
xchg
and
mov
or
dec
sub
arpl
sbb
jg
cmp
inc
cmp
mov
testl
fdivp
push
ljmp
inc
pusha
fs
pop
cld
les
sbb
ret
jl
js
jmp
and
sarb
push
inc
pop
roll
or
add
push
or
lahf
mov
cmp
lods
jge
mov
xor
lods
es
mov
mov
fildll
push
sub
sbb
or
lahf
sbb
jb,pt
fnstsw
mov
jnp
lret
jl
jno
xchg
add
fsubp
mov
stos
fdivrl
xchg
mov
rorl
mov
or
jl
mov
add
js
ret
mov
sub
add
rorb
addr16
dec
lea
dec
push
xor
mov
fisttpl
je
jb
jno
fmulp
sti
mov
cmp
add
and
mov
inc
ja
jae
mov
mov
and
pop
add
adc
out
jp
push
aaa
jnp
pop
dec
inc
test
imul
out
loope
aam
adc
pop
pop
in
jbe
or
inc
setle
dec
cmp
inc
fcompl
fldl
inc
sub
call
lahf
or
xchg
mov
sbb
aam
inc
inc
int
ss
data16
or
sub
test
cmc
popw
loop
add
mov
jmp
sbb
outsb
test
fwait
ss
outsb
xchg
movsl
sub
or
call
stos
imul
cmc
mov
xchg
cmc
popf
fdivr
sub
inc
mov
sub
sbb
xlat
ret
cs
jo
push
dec
fcmovnb
mov
jns
int3
popa
movsb
ljmp
sub
in
loop
cmpsl
mov
call
add
out
pusha
jb
fcmovnu
push
rorb
into
adc
je
sbb
push
inc
pop
sub
push
mov
bndldx
mov
and
cmc
inc
scas
fdivrl
mov
mov
xor
jmp
push
repnz
int
cwtl
insb
jecxz
into
or
adc
mov
mov
dec
pop
in
gs
pop
movsb
mov
xchg
xchg
aam
std
ss
xchg
bound
or
xor
fdiv
into
pushf
xor
mov
std
cwtl
mov
sbb
scas
dec
cmp
bound
jle
dec
shrb
xor
das
or
das
jl
ds
add
lahf
imul
xor
lock
pop
outsb
push
sbb
icebp
test
sbb
ds
xlat
push
in
lcall
js
ds
aas
cmp
sub
push
fmull
fnsave
inc
loop
or
outsl
mov
test
xchg
cwtl
scas
popa
sub
sub
mov
mov
je
mov
push
enter
xchg
les
mov
mov
xchg
push
inc
das
icebp
push
sbb
je
sbb
cmc
pop
or
mov
push
adc
dec
add
mov
int3
enter
ds
bound
dec
push
insl
mov
xor
repnz
pushf
or
imul
repz
aad
add
test
cs
lock
cmp
or
or
adc
mov
rcl
inc
cmp
sbb
icebp
inc
mov
lock
pop
cs
sbb
mov
mov
clc
xor
das
and
out
mov
ficomps
mov
loope
cmpsl
in
xchg
xor
cmp
outsl
jecxz
je
add
es
bound
sbb
xchg
fdivs
inc
fwait
dec
pop
lahf
fwait
movsb
cmp
mov
lret
movl
mov
push
xor
into
in
cmp
mov
xor
rcr
in
loopne
push
int3
imul
aaa
rolb
mov
insb
mov
cmp
cmpsl
negb
add
orl
adc
cmc
iret
inc
adc
int
pop
pop
sbb
stos
jbe
ret
ja
sarb
mov
adc
fnsave
test
xor
adc
and
dec
andb
push
outsb
inc
dec
dec
push
hlt
push
out
movsl
mov
sbb
gs
cmp
cmpsb
fdivr
popf
cmp
popa
jo
mov
addr16
sarb
or
scas
and
out
jecxz
imul
push
cmpsb
and
into
cli
scas
ret
xor
jge
loop
in
ret
add
inc
xlat
icebp
in
in
push
mov
cmp
sti
push
sbb
out
add
mov
push
push
lods
lock
jo
jle
cmp
clc
add
jns
jo
sbb
rorb
loope
mov
jne
fisttpll
lcall
or
sbb
jo
mov
dec
cmp
out
sahf
xor
jmp
push
push
dec
test
cmc
movsl
fs
mov
aas
sbb
xor
mov
xor
sub
jne
push
push
sub
ss
in
mov
sub
sbb
mov
aam
push
mov
gs
lods
js
mov
and
ljmp
mov
jno
lods
aaa
inc
inc
push
mov
mov
icebp
and
jne
test
icebp
jno
ficompl
in
pop
mov
mov
popf
mov
call
pop
jno
xor
xchg
nop
mov
les
negl
push
jbe
sbb
add
lcall
push
jle
jns
icebp
sbb
pop
inc
testb
and
aad
popa
into
cmp
repnz
sub
loopne
xchg
pop
dec
cmp
adc
mov
jg
dec
push
push
jecxz
stos
in
aam
push
int3
popf
lahf
jo
ret
mov
add
aaa
mov
lcall
adc
ret
int
jge
cli
ret
pop
fdivs
xorb
jg
or
les
cmp
xlat
test
popa
mov
xchg
stc
push
cmc
ja
fidivl
or
cmp
jae
mov
xlat
add
stos
lret
dec
sbb
je
cmpsl
outsb
imulb
imul
ret
out
ds
mov
leave
lock
out
jnp
mov
or
xor
pop
adc
dec
pop
xor
les
pop
jge
scas
inc
daa
pusha
addr16
inc
mov
in
insl
xchg
mov
fimuls
out
lcall
mov
into
mov
or
mov
jne
pusha
pop
pusha
push
js
sub
cmpsb
dec
fnstsw
repnz
xchg
mov
push
pop
orl
out
inc
inc
mov
data16
and
push
dec
fisttpl
in
loopne
pop
movb
xchg
mov
xor
outsl
or
ljmp
mov
add
mov
cmp
mov
cmc
pop
fildll
push
cld
sub
jl,pn
lret
mov
mov
mov
mov
andb
cmp
imul
addl
fcoms
jge
insl
jo
insb
adc
fcomi
rcrb
bound
xchg
mov
fdivl
push
adc
dec
lea
xchg
stc
or
mov
lds
gs
lods
js
fdivr
dec
dec
push
arpl
fidivl
pop
ljmp
div
and
into
clc
jmp
xchg
push
imul
sub
pop
cmpsb
out
or
loopne
dec
sub
push
int
jmp
mov
pop
repz
jecxz
imul
dec
sbb
lock
mov
xor
sub
lock
mov
push
sarb
je
xlat
inc
rcrl
enter
push
inc
and
xchg
mov
scas
sarl
cmp
orb
rolb
jne
sub
ljmp
sbb
fadd
jmp
dec
fsubrs
xchg
pusha
pop
fldt
stc
jns
test
xchg
in
xorb
pop
imul
mov
mov
xchg
mov
loop
or
add
dec
jge
inc
or
std
xchg
insb
cmp
or
cltd
pop
mov
sbb
rclb
jns
mov
or
shll
out
popw
test
in
jns
cmp
or
imul
sahf
ljmp
jp
imul
movsl
iret
adc
in
push
cmp
ret
jne
push
das
idivl
pop
push
push
pushf
imul
popf
cs
sbb
mov
mov
pop
jl
push
fwait
sbb
jecxz
inc
fldcw
xor
push
shl
aad
ss
sub
xchg
sbb
fdivs
jo
pop
and
stos
dec
xor
dec
sub
sarl
loope
test
jge
jmp
mov
loope
mov
or
jmp
fstpt
jne
in
mov
sub
or
lods
or
insl
scas
pop
jl
fistpll
push
and
test
sbbb
loop
repnz
les
shlb
cmc
mov
lcall
push
test
jge
cmp
mov
test
jne
pop
out
mov
sbb
mov
add
ret
push
ds
fcmovnbe
fdiv
repz
add
ja
add
adc
stos
and
fcmovu
sub
mov
outsl
loope
add
jl
mov
jnp
ret
hlt
and
in
or
stos
and
cli
call
bound
xchg
push
cs
aaa
dec
fisubrl
mov
jne
inc
mov
mov
push
sbb
ss
xor
in
fiaddl
fcompl
fiaddl
std
icebp
cmp
xor
not
lahf
pop
push
enter
cmp
insl
scas
popa
adc
lock
sbb
ja
jb
sub
jns
fwait
nop
mov
cmp
cmp
icebp
shl
and
mov
push
les
lods
scas
push
and
aam
sub
aam
ret
out
outsb
jg
cmp
mov
out
stc
xchg
jnp
push
out
and
ret
push
xchg
data16
incl
push
and
pop
clc
xorl
insb
es
jmp
mov
inc
imulb
jbe
aas
adc
in
fisttpl
cwtl
push
test
push
mov
ret
lea
pop
sub
rcll
mov
stos
push
xchg
mov
cmp
int3
inc
jp
fcmovu
je
fs
jge
mov
cmc
scas
mov
push
mov
loopne
pop
fucomp
or
jp
shl
xor
cli
test
sar
shrl
mov
divb
ret
add
xor
add
xchg
mov
lcall
ds
push
aad
negl
pop
ljmp
movsb
xor
cs
add
mov
push
jb
inc
or
sbb
and
or
int3
lret
mov
mov
pop
jp
cmp
daa
mov
add
je
sahf
xor
add
sbb
cmp
push
fldl
scas
sti
add
push
sahf
mov
sub
xchg
dec
shll
lods
sahf
xchg
test
adc
mov
ret
xchg
mov
jmp
inc
out
int3
or
das
cmp
push
mov
jge
add
jno
pop
call
pop
mov
and
adc
pop
mov
jae
getsec
lock
mov
sub
sub
mov
or
outsl
xor
mov
mov
jge
jmp
outsb
add
rcrb
push
repz
rolb
add
aas
push
pop
imul
sub
ss
jp
in
movsl
sub
push
shl
mov
sti
xor
arpl
inc
test
movsl
inc
mov
and
movsl
in
sbb
sar
pusha
sub
inc
insl
lock
fs
insb
lahf
xchg
jmp
js
or
adc
or
enter
sbb
aas
scas
lcall
daa
xor
loope
test
lcall
dec
mov
pop
mov
inc
loope
mov
aas
cmpl
cmpsb
mov
mov
or
jmp
push
data16
insb
ret
jecxz
divb
imul
bound
pop
fnstsw
xor
add
dec
aaa
or
js
sbb
jecxz
mov
test
test
push
ds
ljmp
adcb
in
lahf
mov
jge
mov
enter
sbb
repz
out
into
lock
xchg
in
and
inc
mov
fsubrl
and
mov
aam
lock
jl
cmp
addr16
pop
ret
roll
mov
shll
xor
mov
lcall
enter
andl
cmp
daa
cli
je
inc
mov
mov
loope
inc
loopne
aad
mov
and
in
adc
push
jge
icebp
divl
xlat
inc
cmp
insb
xchg
sbb
addb
cltd
inc
mov
imul
inc
outsb
jg
rol
pop
dec
or
popa
jmp
clc
adc
mov
in
jns
test
xor
mov
push
jle
jl
cmpsb
cli
sbb
cmp
aam
idivl
mov
gs
js
adc
hlt
ror
adc
loop
popf
out
or
cmp
je
mov
dec
sbb
add
cld
andl
mov
or
mov
sbb
cmp
jno
les
mov
lret
insb
xchg
inc
and
dec
xor
or
cld
fs
inc
imul
sbb
pop
or
ret
push
lods
add
insl
cmpsl
addb
jle
mov
pop
sub
mov
pop
loopne
cmc
push
stc
cmp
mov
fimuls
outsb
js
jb
mov
orl
inc
cmp
mov
jecxz
xor
add
mov
or
inc
jae
mov
mov
xlat
rolb
inc
adc
pop
pop
xchg
mov
lods
test
xchg
or
inc
out
lcall
imul
cmpsl
pop
xchg
insl
sbb
stos
aas
cli
js
push
lret
outsl
aaa
or
nop
sbb
icebp
add
scas
stos
adc
in
sub
cmp
dec
inc
pop
ds
shll
jb
shrl
pop
inc
mov
int3
or
xor
fsubs
je
cld
nop
fs
inc
and
addr16
cli
pop
jge
push
scas
dec
mov
lock
push
nop
mov
sahf
bound
pop
in
dec
or
add
adc
or
adc
out
or
aam
test
loop
test
insl
mov
fs
cmp
or
cmpsl
ja
imul
or
mov
cmp
std
jb
mov
in
add
push
xor
xchg
stos
dec
fs
adc
xlat
inc
pop
arpl
hlt
and
movsl
fsubp
test
cli
lahf
sub
push
xor
mov
push
mov
mov
fisubs
clc
pop
inc
pop
outsb
pop
iret
push
testl
mov
jnp
daa
in
mov
std
cli
pop
sbb
add
clc
and
cmp
out
jo
cli
stos
cli
mov
xor
cmp
lock
sub
and
or
jl
out
in
out
inc
jp
dec
mov
cwtl
add
mov
and
icebp
mov
xchg
jns
test
sbb
jecxz
sti
outsb
add
movsb
push
mov
leave
jp,pt
sti
push
movsl
aaa
mov
mov
inc
lds
andl
mov
and
ror
std
xchg
pop
sti
adc
loopne
stos
test
adc
push
jge
inc
jmp
inc
outsl
std
cmp
push
ss
pop
enter
mov
jae
aaa
fwait
add
add
sbb
loopne
imul
jnp
add
xchg
cmp
mov
fcmovnbe
je
outsl
jb
xchg
adc
mov
aaa
jnp
outsl
rcll
pop
insl
adc
mov
adc
and
jge
movsl
in
jbe
xchg
push
push
xchg
insb
mov
lods
and
xchg
jge
cmpsb
cmp
xchg
pop
sbb
jmp
sbb
push
push
dec
and
ds
pop
cltd
or
rolb
jl
mov
push
aas
dec
outsb
ljmp
add
ss
cmp
push
shlb
loope
sub
gs
adc
jbe
cmp
or
cmp
je
sahf
jmp
push
je
out
inc
or
sub
mov
push
adc
outsl
mov
pop
mov
inc
xor
enter
fdiv
pop
push
stos
mov
out
cld
outsb
sti
mov
push
jecxz
mov
data16
in
dec
pop
inc
jg
loopne,pt
mov
and
imul
sbb
lcall
fstl
clc
xorl
pop
sbb
jae
xchg
out
iret
clc
icebp
std
mov
push
ja
subl
into
lods
push
daa
xor
push
cmpb
mov
or
push
out
loopne
xchg
in
shlb
lret
push
xchg
pop
test
fucom
leave
sub
sbb
or
xchg
or
ss
sbb
dec
inc
dec
jnp
ss
push
push
jecxz
pop
jg
loope
scas
mov
fidivrl
or
xchg
jo
hlt
fucomi
sahf
push
mov
in
lods
dec
leave
sti
sbb
popf
sahf
inc
jno
xchg
sti
imul
sub
fldl
fmull
mov
pusha
cld
xchg
inc
inc
cmp
sbb
sub
xor
cmc
jne
or
lret
and
mov
inc
or
mov
mov
or
push
jns
je
test
cmp
daa
xlat
sub
mov
mov
pushf
test
pop
out
std
mov
sbb
or
pusha
out
sbb
repnz
xlat
add
or
out
mov
pop
dec
add
pop
jl
fistpl
shlb
dec
cmpsb
adc
imul
push
aaa
sbbb
imul
or
pusha
cltd
and
xchg
lods
xchg
adc
rolb
shrb
insb
neg
sub
out
sbb
mov
xchg
popa
insl
arpl
test
adc
add
pop
cmpsl
sbb
xchg
fisubl
mov
imul
cltd
icebp
inc
cmp
xor
mov
aaa
js
cmp
lcall
push
xlat
add
inc
dec
mov
ret
cli
add
pop
negl
mov
gs
or
jns
mov
sub
dec
dec
or
add
fwait
mov
pop
jne
xchg
cmp
or
cmp
movsl
lahf
mov
adc
xchg
jbe
pushf
pop
mov
fwait
rcl
movsl
les
mov
mov
js
lea
add
insb
mov
pop
fwait
jmp
imul
inc
sbb
movsl
cmc
les
insb
gs
inc
push
mov
lock
jle
dec
jbe
aam
or
arpl
xchg
pop
fldenv
push
ja
inc
idivl
jp
inc
mov
adc
in
cmp
sahf
movsl
mov
fisttps
out
cs
sub
pop
mov
xchg
outsl
loopne
ret
test
jl
rorb
cmpsb
ljmp
xor
mov
fs
ljmp
push
pop
jae
out
xchg
push
mov
xor
mov
pop
mov
lcall
mov
and
mov
insb
es
pop
sbb
xor
outsb
mov
push
lret
mov
mov
mov
jnp
push
ret
movb
int
je
jo
sbb
jmp
test
xor
dec
jg
lock
push
and
aam
unpcklps
das
inc
stos
sub
out
push
mov
mov
pusha
loopne
mov
aam
je
shr
jle
roll
mov
inc
fwait
scas
test
dec
pushf
push
mov
jecxz
sbb
lock
aad
sub
imul
mov
loope
push
jbe
je
jb
adc
dec
pop
mov
sub
jb
mov
fwait
insl
imul
bound
pop
cmp
mov
mov
repnz
mov
push
int3
lods
push
in
data16
clc
cmp
cmpsb
and
sub
fdivrl
cmp
or
mov
pop
mov
mov
movsb
pop
jae
jne
mov
mov
stc
add
daa
sbb
mov
fmuls
mov
xchg
dec
lea
mov
pop
js
or
rorl
sbb
mov
dec
or
fildl
add
arpl
fsubrl
adc
test
in
aam
adcl
fcmove
mov
call
pop
stc
mov
sahf
lods
pop
adc
jo
pop
xlat
xchg
out
xlat
je
cmp
lea
cld
pop
lcall
loope
pop
mov
hlt
scas
push
je
push
xchg
xlat
pop
xor
rorb
sahf
fadd
jmp
sti
mov
and
xchg
mov
jmp
mov
xor
push
mov
add
fisubrs
xlat
inc
aas
or
cmpsb
mov
lock
sbb
lea
xchg
hlt
ret
add
jge
clc
cmpsl
ja
popa
in
fisubl
push
loop
push
flds
sbb
stos
test
xchg
inc
inc
fs
xor
lahf
int3
pusha
dec
hlt
jmp
in
cli
push
xchg
pop
mul
mov
xor
lods
push
sub
scas
cmpsb
nop
lret
movsl
lahf
rorb
add
dec
mov
pop
incl
mov
testl
pop
sub
mov
imul
sbb
lcall
insl
imul
pop
mov
pop
jno
mov
adc
mov
arpl
jnp
jne
mov
pop
or
stos
lds
scas
std
mov
adc
in
jnp
jns
mov
sub
outsb
adc
fcmovnbe
push
add
fcomi
xchg
lods
pop
mov
or
int3
mov
andl
ss
inc
adc
in
xor
mov
imul
pop
cmp
bound
mov
cmp
xlat
shll
ret
ljmp
dec
xorl
push
cli
scas
pop
push
test
inc
mov
sti
clc
ds
push
das
inc
mov
and
mov
mov
insl
sbb
sub
lcall
cli
mov
out
test
pop
jo
pop
imul
rcl
jae
xor
test
aam
icebp
mov
jmp
mov
jecxz
push
rcrb
pop
xorb
mov
or
loop
jnp
aam
pop
insb
insb
lock
fs
scas
or
lahf
jmp
lods
add
mov
fldenv
xchg
std
xorl
loope
jae
rorl
sub
ja
enter
rol
add
lahf
or
push
leave
inc
fcmove
sbb
push
mov
out
inc
bsf
sbb
xor
pop
sbb
pop
pop
mov
sub
fucomp
inc
pop
or
mov
push
loopne
jg,pt
mov
cmpsl
fsin
icebp
les
fdivrs
popf
inc
push
in
or
fnsave
inc
rcrb
fldt
xchg
push
sbb
inc
push
fidivrs
mov
push
fisttpll
inc
insl
mov
or
icebp
out
ds
leave
push
mov
adc
dec
nop
fidivrs
scas
pop
push
mov
adc
jge
or
pop
enter
push
adc
push
insl
testb
ficompl
dec
dec
cmp
out
cmp
mov
lahf
pop
aad
out
adc
shrb
mov
add
adc
das
pusha
arpl
jb
sub
fdivs
cld
adc
mov
loopne
jo
cmp
insb
push
add
fsubrl
cmp
das
imul
and
push
adc
or
daa
out
cli
clc
mov
psubusw
neg
ss
cmp
or
sbb
lea
jle
jb
dec
stc
gs
mov
or
xor
lods
mov
jmp
push
call
je
fiaddl
push
jmp
ret
testl
and
mov
rorl
mov
xlat
cs
pop
xchg
sbb
xchg
cmp
mov
add
or
mov
adc
dec
ret
loopne
and
dec
ljmp
fimull
mov
sub
aad
jmp
push
notl
jge
jp
sbb
das
nop
mov
sbbl
mov
cmp
mov
fbstp
mov
mov
cli
push
and
mov
sub
test
fistps
mov
rolb
ja
fisubrs
clc
xchg
popf
pop
mov
arpl
int
add
sub
mov
mov
popf
aad
and
xor
adc
cmp
popf
daa
mov
int3
lock
xor
loop
dec
rol
movsb
cmp
ja
jecxz
pop
cmp
inc
insb
mov
and
fyl2xp1
dec
jg
sub
pop
aam
outsb
out
inc
and
xor
xchg
fidivrl
jle
fnstcw
xor
jl
or
mov
lcall
in
xlat
mov
add
push
xchg
push
cs
jecxz
aas
push
dec
mov
jb
icebp
adc
jo
insb
in
lds
xlat
lods
ror
mov
sub
aaa
xor
cmp
out
lods
test
sahf
jg
mov
xor
cmp
stos
mov
sbb
orb
cmc
jo
add
pop
test
dec
les
mov
sub
jbe
call
std
outsl
pop
push
mov
movsl
mov
jo
pop
in
or
mov
std
mov
xchg
cmp
xchg
jmp
in
divb
lods
int3
adc
mov
xor
out
adc
in
pushf
xchg
shll
mov
out
rcr
dec
pop
jecxz
fwait
push
je
mov
mov
mov
dec
lock
popf
and
adc
push
lock
xchg
fisttpll
jl
add
roll
lods
cwtl
mov
pop
add
jno
call
push
aaa
pop
mov
pop
jge
shlb
cs
adc
pop
mov
xor
repz
out
mov
pop
pusha
push
in
pop
mov
pop
push
xchg
cmp
sti
sbb
xorl
jno
pop
scas
cmp
outsb
add
sar
fsubs
faddl
fdiv
inc
jae
hlt
push
and
sti
push
lea
pop
dec
int
lahf
or
mov
mov
mov
inc
cmp
dec
xchg
xchg
push
mov
scas
gs
imull
lds
pusha
adc
xchg
gs
outsb
mov
cli
es
cmc
inc
jecxz
aad
or
mov
les
loope
push
sbbb
sbbl
subl
aas
loop
xchg
xchg
push
mov
test
ret
stos
aas
sub
psubsb
cwtl
int
mov
adc
and
cs
sbb
adc
jae
popa
popa
shlb
xor
mov
push
xor
clc
movl
mov
push
loope
lock
mov
xor
mov
dec
cmp
xchg
daa
jns
bound
mov
fdivrs
sarl
lods
loopne
loop
imul
js
cmp
pop
fs
mov
lock
push
das
and
add
and
add
dec
mov
clc
loope
stos
mov
and
mov
lea
mov
xor
mov
loopne
pop
lock
sub
popa
insb
mov
js
and
mov
pop
testl
mov
inc
fnstenv
adc
inc
fs
mov
dec
mov
gs
push
clc
add
cmpsl
adc
push
sbb
pop
into
enter
mov
and
jnp
mov
sahf
out
rorb
mov
in
out
jl
xor
addr16
pop
dec
inc
shll
stos
loopne
mov
jbe
and
fldcw
mov
push
and
push
inc
mov
jge
push
adc
aaa
rcrl
and
add
pop
inc
jecxz
or
xor
idiv
xchg
push
icebp
adc
out
fsubl
push
ret
xchg
enter
test
lahf
push
lcall
lldt
addr16
xor
movhps
lea
imul
pop
rcr
mov
push
sub
lea
cmp
mov
add
or
movsl
pop
xchg
int3
lret
js
push
popa
mov
dec
nop
loop
and
cltd
movq
jle
js
lcall
jmp
mov
push
std
rorl
mov
cmp
cli
testl
pop
sti
lock
sti
add
pop
xlat
add
jecxz
fnsave
mov
push
ds
icebp
roll
push
fstps
outsl
sbb
xchg
jbe
dec
add
cmpsb
xlat
inc
je
loop
mov
movsb
mov
loope
adc
repnz
popa
aad
push
mov
int
and
mov
mov
std
mov
mov
pop
dec
inc
pop
imull
cmp
pop
jno
push
push
call
lds
jb
push
hlt
jb
aas
fisttpll
les
dec
aam
in
jb
and
xchg
mov
mov
pop
js
cld
in
xor
insl
fcmovu
xor
pop
sbb
dec
lods
mov
scas
pop
or
add
ret
pop
or
or
out
das
add
xor
aaa
sti
mov
xchg
jnp
cmc
les
jae
filds
out
lods
xor
mov
pop
packuswb
push
std
lret
dec
cmc
mov
jle
cmpsl
mov
lock
cmp
inc
aad
push
fisttpll
out
pop
jno
sbb
std
inc
lods
xor
fildl
adc
out
ficoml
lods
mov
mov
mov
sub
mov
cmp
inc
push
mov
adc
subl
fimuls
std
adc
push
stos
cld
adc
aas
inc
mov
int
dec
sub
sbb
jecxz
pop
and
adc
xor
xor
test
mov
jl
sbb
or
xchg
xlat
imul
push
icebp
imulb
push
pop
pop
cs
rcll
loop
test
out
aam
cmpsl
xchg
push
dec
inc
mov
pop
or
imul
mov
imul
push
jecxz
push
sarb
mov
jmp
leave
loop
hlt
sbb
fiaddl
lahf
adc
pushf
shll
movsl
mov
std
cmp
inc
loopne
adc
or
xchg
xor
rclb
jg
and
fisubl
mov
aaa
in
stos
loope
xchg
fidivs
sub
cmp
jmp
mov
aas
inc
mov
or
cmp
pop
hlt
ja
and
cmp
adc
dec
nop
push
xlat
mov
fwait
mov
ss
push
mov
sbb
cmp
add
pop
sbb
adc
popa
popa
loope
push
fiadds
mov
jmp
outsb
int
aam
cld
leave
aad
clc
sub
xchg
or
call
cmp
add
adcl
cmp
cld
or
cld
xor
inc
sbb
inc
fisttpl
xlat
outsl
cmpsl
int3
loopne
decl
xorb
inc
cmp
nop
sbb
sub
sub
ret
stos
jae
mov
cmpsl
iret
cld
rorb
mov
rcrb
adc
sahf
clc
cmp
push
jmp
jns
pop
lret
or
dec
lea
popf
mov
mov
xchg
mov
out
shll
addr16
pop
xlat
mov
jns
lret
cld
aam
shl
into
and
cmp
jg
jo
mov
cmp
pop
paddsb
pop
or
sahf
pusha
imull
push
sbb
in
daa
mov
jo
dec
inc
lock
ret
out
insl
xorb
arpl
fisttps
aad
pop
sub
lcall
sub
and
imulb
pusha
test
int3
out
mov
pop
lea
lds
fldt
je
nop
pop
test
pop
jmp
and
fnstsw
sbbb
add
fcmovnbe
fnstsw
ds
lret
rcrb
mov
or
sti
sub
cmp
jecxz
dec
ja
leave
inc
and
push
sbb
mov
jmp
cmc
sub
xchg
cmp
ficompl
cmp
pusha
dec
mov
pop
in
hlt
test
jge
or
cmp
or
lock
leave
push
dec
dec
cld
and
jnp
fwait
negl
sbb
fildl
fsubrs
std
call
or
jg
sub
inc
cmp
popf
jno
xor
loope
stos
cmp
imul
ds
fimuls
movsb
in
xor
jae
pop
lcall
cwtl
in
mov
xor
jg
mov
xchg
adc
jae
sbbl
fldl
mov
loope
insb
dec
ret
ret
lods
jge
xchg
int3
push
and
mov
js
or
cltd
push
push
popf
push
dec
jno
add
mov
loop
add
mov
js
shl
and
shr
repz
nop
push
scas
sub
inc
sbb
mov
jecxz
sub
mov
pusha
notl
xchg
cld
inc
testb
push
les
pusha
adc
sbb
js
fcomi
lods
mov
and
inc
lods
fdivrl
dec
add
hlt
and
in
test
mov
rcrl
in
lock
mov
xlat
aad
aaa
je
adc
pop
fwait
adc
push
mov
popa
shl
mov
insb
in
dec
xchg
aad
pop
mov
std
cwtl
dec
lret
adc
cwtl
cmp
jmp
cld
stos
cmp
pop
mov
call
adc
rolb
hlt
inc
jl
or
mov
xchg
ret
fsubs
addr16
dec
aas
into
ds
xchg
pop
jp
or
push
adc
mov
adc
xor
cli
clc
xor
popa
sti
lea
cmpb
push
std
in
repz
cmp
out
inc
inc
cld
sub
loope
mov
imul
mov
pop
adc
mov
push
decb
jge
clc
jle
xchg
sub
mov
sub
sub
cmc
pop
dec
in
pop
mov
pop
or
or
push
xchg
mov
test
lock
cmpsb
or
push
mov
add
fwait
dec
js
out
xor
mov
loope
inc
push
mov
aad
mov
lds
cltd
data16
lock
inc
push
adc
lahf
sub
call
aas
in
mov
adc
sub
aam
jp
mov
sarb
or
pop
std
test
mov
add
je
hlt
or
ja
adc
and
push
xchg
fdivs
mov
dec
sbb
dec
jmp
mov
xlat
sub
aad
in
inc
jl
mov
sub
clc
stc
into
mov
sub
call
jnp
inc
pop
ja
rcrl
outsb
pop
add
add
les
aaa
sub
hlt
xchg
sarl
arpl
xlat
shrb
or
xor
pop
lds
cmpsb
pop
outsb
js
pop
jge
movsb
jl
mov
dec
daa
es
push
dec
jl
sbb
pop
insl
dec
loope
lds
lds
dec
dec
arpl
repnz
inc
aaa
icebp
cld
ja
jb
sub
lock
cld
adcb
inc
rorb
in
clc
add
pop
mov
cli
stos
dec
mov
mov
fnstcw
mov
in
mov
pop
jge
clc
orl
divb
cmp
aas
jno
inc
call
fidivs
jo
mov
push
push
jecxz
pop
in
and
mov
ja
jo
lea
lret
insl
scas
arpl
out
pop
icebp
pop
pop
movsb
fisubrs
sbb
mov
es
outsl
shrl
popf
jecxz
sub
dec
iret
jmp
in
test
loopne
mov
xchg
push
out
int
outsl
jnp
lock
cmc
cmp
out
dec
push
scas
and
push
es
add
or
adc
pop
sub
fnstsw
or
mov
decb
mov
daa
adc
jb
pop
sbb
adc
or
scas
mov
mov
xchg
lds
mov
clc
clc
jmp
dec
jmp
inc
stos
sbb
shrb
mov
lahf
mov
lahf
enter
std
bound
mov
in
dec
daa
fwait
in
hlt
adc
push
push
fcmovnbe
addr16
cmp
inc
mov
sub
sarb
jecxz
test
mov
movsl
mov
and
fdivrs
shlb
js
add
sbb
mov
mov
imul
jmp
pop
std
or
xlat
push
loopne
cli
out
push
pop
je
sub
int3
xor
jmp
cmp
inc
mov
push
jnp
aas
pusha
outsb
jns
mov
xchg
das
push
adc
jns
sbb
mov
es
sbb
pop
mov
scas
mov
sbb
fistpl
adc
xlat
into
jg
orl
xor
add
lds
jbe
add
daa
in
push
popa
mov
fnstsw
test
and
jb
push
sahf
pop
je
xchg
daa
insb
mov
jne
mov
or
aaa
icebp
aad
std
dec
hlt
out
jge
gs
push
xlat
addr16
mull
cmpsl
jge
xchg
or
scas
ljmp
xor
xchg
into
sbbb
shlb
test
or
sbb
cmp
movsb
hlt
pop
pop
pop
bswap
test
test
jo
ficoms
mov
mov
in
mov
xor
inc
mov
mov
jae
std
xor
cwtl
sub
push
add
xor
insb
insb
xor
loopne
jbe
adc
cmp
xchg
or
int3
pusha
xor
jle
push
sti
inc
jns
rclb
push
adc
add
dec
pop
mov
sahf
mov
inc
dec
sub
and
imul
out
insl
sbb
jb
test
hlt
ret
add
imul
mov
mov
sbb
nop
int3
mov
mov
daa
jae
mov
or
dec
dec
pop
imul
hlt
cmc
jno
gs
mov
das
call
nop
dec
mov
add
add
pop
imul
lcall
mov
fwait
xchg
je
mov
es
dec
out
lock
jge
test
es
aad
sti
cmpsb
xchg
or
sarl
aad
sbb
pop
sub
jo
jb
frstor
jnp
or
xor
cs
adc
mov
cld
jns
pusha
inc
mov
dec
cmpsb
aad
inc
cmp
pop
loope
mov
ret
lret
jle
call
aad
aaa
push
add
daa
xor
mov
fs
fucomi
push
mov
push
les
mov
mov
xor
jle
inc
fstps
test
cmpsl
mov
andb
sbb
dec
or
loopne
sbbl
pop
mov
pop
xchg
outsb
mov
add
or
inc
iret
stos
fwait
push
inc
mov
push
sti
loope
xor
cmp
mov
mov
in
jbe
dec
ret
das
insb
and
push
mov
sbb
jmp
lods
push
stos
cs
dec
scas
sbb
add
jmp
ds
out
jp
bound
xchg
and
push
aam
dec
or
mov
jle
adc
ret
imul
xchg
mov
in
mov
pop
fcoml
sbb
imul
loope
push
outsl
xchg
scas
jmp
and
jno
outsl
fldcw
xlat
or
inc
rcrl
or
sub
mov
shlb
outsl
inc
sarl
sub
add
test
adc
cwtl
jl
fmul
dec
push
sbb
outsb
adc
mov
mov
xchg
jl
and
fadds
cmpsb
xorb
inc
lret
push
mov
bound
ror
jo
dec
cld
push
fsubrl
das
fidivrs
out
outsb
sbb
fprem1
test
fidivl
lea
xchg
mov
jnp
cmp
add
push
sub
push
fucomp
xchg
sahf
and
sub
jp
test
repnz
mov
pop
out
sbb
mov
icebp
mov
into
sbb
in
lods
into
jge
fldl
push
sub
pop
iret
fwait
mov
add
xor
pop
add
inc
arpl
idivb
scas
insl
shl
test
in
fwait
mov
or
cmp
stos
arpl
fstpl
cmpsl
dec
jns
or
mov
fiaddl
les
sbb
outsb
orl
or
add
add
outsb
test
test
adc
into
pop
in
into
test
xchg
aas
aam
scas
add
pop
dec
fnsave
or
fstpl
stos
stos
lea
loope
pushf
stos
and
ds
push
ja
sbb
aas
dec
arpl
and
ljmp
jp
cmp
and
mov
cmc
or
dec
cli
push
ds
pusha
movsb
ret
xchg
pop
cmc
push
jb
popf
fisubl
std
ljmp
fdiv
scas
psubusw
icebp
aam
daa
pop
loop
mov
sub
addl
arpl
test
sbb
arpl
dec
gs
lcall
jb
xor
imul
loop
fstl
into
and
or
je
jo
popa
inc
or
outsb
movsb
cmp
addr16
mov
xchg
sti
push
sarb
addr16
push
and
push
femms
jl
sbb
mov
sbbb
pop
jmp
mov
jnp
mov
push
out
lock
mov
lds
mov
movsl
xchg
xor
mov
scas
cmc
sbb
repz
outsl
or
in
es
daa
jb
imul
inc
ret
push
cmpsb
sub
mov
adc
rolb
and
cld
jmp
inc
cmp
push
pop
jge
scas
stos
leave
pusha
dec
aad
mov
js
daa
sub
ljmp
pop
push
xlat
sarb
jne
movl
push
ds
loop
cs
jle
les
mov
mov
arpl
inc
fldt
mov
sbb
xchg
lods
mov
sbb
sbb
lods
jns
jmp
pop
jle
push
daa
ljmp
pop
fnstenv
outsb
sub
mov
jbe
mov
adc
in
push
add
fs
fisttpll
xlat
adc
jl
in
loop
shl
push
es
cmp
cmp
add
ja
pusha
retw
mov
inc
add
cld
add
fnstsw
pushf
sbb
cmc
cltd
into
mov
mov
jbe
out
dec
ret
arpl
mov
js
xor
test
push
jno
xor
jecxz
mov
adc
push
pop
ret
bndldx
inc
shll
ljmp
xlat
outsb
in
fcmovnbe
test
xchg
jl
jo
add
sbb
mov
mov
in
mov
jbe
test
jle
ror
mov
push
aad
ljmp
shlb
je
mov
test
nop
sub
adc
fsubrl
les
mov
stos
insl
ret
imulb
mov
les
mov
push
pop
lods
mov
jle
daa
pop
inc
pop
pop
xchg
xchg
dec
out
sbb
adc
cli
mov
pop
mov
mov
pop
fdivrs
rol
xor
xchg
test
iret
subl
mov
in
ss
inc
pop
test
fsubrl
cmp
and
lods
insb
lock
cmp
mov
lock
out
popf
sub
inc
pop
jg
xchg
movsb
jns
sub
mov
pop
pop
mov
test
cmp
scas
pop
shlb
or
into
lcall
or
jne
fs
jne
jmp
xchg
pop
rcll
jge
hlt
ret
jbe
insb
mov
sbb
aaa
je
int3
mov
xchg
mov
xchg
les
jbe
mov
fs
push
pop
arpl
call
mov
add
xor
out
jle
ljmp
pop
mov
fwait
cli
test
xchg
dec
js
jl
sub
jle
mov
lods
mov
push
add
mov
mov
test
icebp
lret
xchg
negl
mov
xchg
add
mov
jne
pop
out
pop
xchg
cld
and
and
pop
pop
or
stos
dec
aaa
sub
testb
inc
call
aas
mov
cmpsl
push
jp
pushf
ljmp
mov
addr16
sub
sub
ds
mov
push
ds
mov
in
mov
sahf
mov
and
add
sbb
insl
hlt
int3
ret
jle
cltd
jp
push
fwait
ret
fdivs
fstp
stos
cmpsl
pop
cmp
in
bound
fwait
insb
jecxz
mov
iret
pop
scas
push
loop
xchg
pop
and
mov
xor
cmp
jae,pt
mov
jecxz
push
aam
das
jl
pop
in
pop
push
mov
cmc
nopl
inc
push
out
pop
out
outsl
mov
push
ror
mov
adc
xor
mov
jg
ljmp
add
add
lock
stos
rclb
add
fwait
inc
int
pop
jo
mov
insb
pop
js
dec
pop
out
inc
push
dec
jge
hlt
jmp
cli
lahf
outsb
sahf
aaa
adc
les
cmp
pop
mov
sbb
adc
sbb
jne
lret
dec
cmpsb
adc
daa
xor
imul
add
push
outsb
popa
jecxz
lds
mov
outsb
scas
shrb
decl
test
xor
xor
mov
movsb
mov
or
in
jnp
xchg
bound
adc
fisttpl
scas
jo
lock
aad
sbb
mov
xlat
jmp
xchg
sub
push
cmp
adc
cli
mov
cmp
lret
in
inc
pcmpeqb
mov
clc
push
pop
imul
pusha
push
daa
adc
fcmovnbe
inc
aaa
gs
out
cmpsb
sbbb
idivl
push
adc
cli
popa
or
out
mov
push
add
into
cmp
mov
mov
cli
mov
pop
jp
add
nop
jl
adc
fisubs
mov
fildl
arpl
repz
cmp
inc
arpl
xchg
sbb
jmp
push
and
cmpsl
ret
xor
or
shr
inc
shrb
loope
add
insl
mov
pop
cli
push
push
mov
mov
sub
cmp
clc
loope
push
fisttps
inc
push
xor
mov
xchg
cmp
push
sub
rorl
dec
sub
mov
and
aas
cmp
jmp
icebp
cmpsl
sbb
ja
out
insb
jge
outsb
test
roll
mov
cld
popf
stos
fdivr
cltd
cmpsb
pushf
xchg
jle
ret
or
sub
mov
arpl
push
jne
sub
dec
pop
mov
and
adc
pop
mov
sbb
sahf
pop
mov
sub
in
cmp
cmc
sti
pusha
jae
push
pop
fwait
hlt
add
push
imulb
cmc
mov
pop
xlat
sbb
aas
pop
loopne
movsb
mov
mov
jp
mov
adc
aad
cmp
dec
ror
or
mov
fldl
cmc
cmp
dec
cmp
mov
or
cmp
test
xchg
hlt
not
add
movsl
ficompl
std
mov
jne
lods
inc
or
mov
and
insb
test
adc
jge
rcrb
adc
test
mov
testl
inc
rcll
xchg
subb
scas
aas
mov
cmc
ja
js
mov
loope
fnsave
mov
mov
rclb
xchg
mov
loopne
xchg
mov
jne
cmp
jmp
push
push
xlat
nop
jmp
xor
xchg
test
clc
insb
jne
mov
sbb
aas
jb
aam
mov
sbb
mov
jl
das
inc
add
pop
andb
stos
push
push
test
test
or
out
fldt
pop
lock
aam
gs
call
jne
and
mov
cli
pop
push
orl
push
inc
imul
jmp
and
sub
push
inc
xlat
jns
xor
xchg
std
dec
test
and
cmovs
pop
jl
mov
push
call
out
out
in
clc
jbe
sbbb
push
jno
cmpsb
lret
jb
imul
out
sbb
out
sti
mov
popf
xchg
cmc
roll
and
fisttpll
shrl
aad
push
mov
or
jmp
xchg
cmp
sar
pop
mov
rcll
mov
and
fldl
sbb
or
aas
add
fld1
hlt
shl
jg
mov
ret
in
sub
notb
dec
inc
mov
inc
jns
test
aam
in
pop
cld
pop
jl
loope
fsubrp
sahf
ds
push
adc
cmp
pop
dec
mov
dec
xor
in
cmp
aam
js
aas
clc
imul
mov
jne
loop
cmp
iret
mov
pop
pop
pop
aam
xchg
add
jge
jnp
sbb
ja
push
or
pop
pop
adc
mov
jbe
sbb
out
mov
cmpsb
arpl
jae
test
call
addr16
cmp
dec
bnd
pop
pop
push
pop
mov
rorb
mov
pop
fwait
fsts
rcl
repz
addr16
fcmovnbe
cli
dec
notl
fstl
pop
iret
stc
xchg
jns
loop
insb
jo
ss
lods
cli
xor
out
out
push
or
popa
in
inc
or
or
js
sbb
pop
iret
into
lods
stos
call
fidivrs
daa
pop
adc
cmc
push
pop
adc
dec
bound
push
imul
pop
jp
enter
ss
mov
push
add
sbb
cmc
aam
sbb
stos
lods
mov
xorl
clc
cmp
xchg
sub
xchg
push
push
ficoml
mov
stos
cmp
xchg
push
lfs
jbe
mov
int3
sub
jbe
icebp
hlt
jecxz
sbb
aad
pop
mov
dec
xchg
test
into
inc
ret
push
movsl
cmp
mov
or
and
imul
into
pop
js
dec
iret
inc
mov
push
loopne
xchg
std
rcrl
adc
push
cmp
idivb
mov
rcl
push
pop
push
xor
ffree
pop
pop
pop
sbb
cltd
stos
sti
fmulp
push
adc
jo
xchg
mov
rcrb
fadds
and
idivb
mov
cmp
in
and
scas
add
xchg
cmp
pusha
ret
out
or
xor
jmp
popa
lods
adcl
jbe
hlt
stos
xchg
pop
pop
out
push
lahf
push
add
shrb
jp
jmp
icebp
fldl
ret
fucomip
popa
sti
pop
add
xchg
es
push
sar
mov
mov
mov
or
cs
cmp
mov
dec
subb
push
enter
loop
ds
pop
jne
and
test
dec
adc
pop
mov
data16
pop
jns
test
clc
out
jg
push
ret
bound
scas
andl
add
add
je
mov
rol
fstpt
jns
stos
pop
inc
loop
jp
scas
mul
lahf
xchg
xchg
and
scas
fiadds
sbb
mov
cmpsl
leave
lret
jecxz
mov
cmp
lds
add
pop
fwait
test
xor
int
cmp
and
mov
cmpsl
mov
push
or
sbb
int
xor
stos
mov
or
repnz
sarl
and
jl
repz
ja
mov
cli
jbe
cmp
popa
mov
inc
pop
pop
push
cmp
sbb
xlat
test
roll
fldl
in
mov
jmp
das
loope
xchg
ret
push
mov
push
and
push
xlat
xchg
cmc
pop
push
sub
jmp
mov
mov
ljmp
inc
ret
pop
and
mov
mov
outsb
daa
aas
mov
int3
xchg
jmp
fidivrs
jg
dec
je
pop
js
jnp
arpl
sbb
mov
mov
js
int3
ds
outsb
jae
fstpt
mov
jl
and
int
mov
mov
cmp
jne,pn
cmpsb
inc
pop
loop
stos
inc
inc
jp
cltd
add
jno
push
jne
jg
jmp
in
mov
cmp
cmp
addr16
orb
std
cmc
mov
fisttpll
insl
mov
aaa
dec
xlat
icebp
add
mov
mov
incb
call
and
mov
into
jl
cmp
fstl
fisttps
ja
mov
insl
lret
mov
lods
bound
sti
aam
push
scas
scas
xchg
lds
ret
sub
fndisi(8087
sbb
and
nop
xor
cmp
notb
sub
cmp
ror
lds
sub
jno
pop
sbb
shlb
ficomps
inc
dec
xor
xchg
ret
and
lods
xchg
push
cmp
loopne
cmpsb
loop
or
cli
pop
lods
sti
inc
fdivrl
adc
cmc
pop
iret
xchg
sbb
insl
test
mov
fstl
pushl
push
pop
icebp
lods
ficomps
inc
lahf
inc
add
movl
int
cmp
xchg
rclb
dec
aas
ficomps
push
test
mov
notb
jecxz
inc
fiaddl
sbb
sbb
cli
js
mov
jmp
mov
je
pop
add
jge
outsl
push
clc
ficoms
ss
subb
cltd
push
pop
sbb
out
mov
pop
add
add
mov
ret
push
lock
jno
test
cli
iret
scas
ret
shlb
pusha
and
jno
mov
cmpsl
mov
test
nop
subl
lea
xorl
adc
mov
jo
adc
mov
cmp
mov
cmp
enter
insl
test
fdivrl
adc
dec
fwait
test
push
mov
sub
dec
lock
cmp
stos
sub
aam
insl
iret
rol
scas
stos
jecxz
in
mov
jecxz
jnp
stos
mov
jbe
sti
xchg
mov
adc
mov
or
jno
lret
and
mov
out
inc
pop
dec
lret
inc
mov
aas
jne
mov
or
lcall
or
loopne
fcmovb
sub
aam
xor
xchg
mov
jae
sbb
jl
push
mov
cmpsb
pop
pop
ds
cwtl
fimuls
xchg
xchg
test
les
sbb
jb
push
shll
loop
cmp
add
popa
cli
jmp
dec
aad
mov
stos
imul
xchg
push
adc
cmp
mov
pop
dec
jle
cmp
push
or
cmc
push
jmp
or
push
push
shl
inc
xlat
xchg
mov
dec
cmpsl
sbb
sbb
das
js
pop
lock
sar
clc
sbb
cmc
push
testl
cld
sub
rcrl
pop
aaa
mov
jno
xchg
orb
fstpl
jge
sbb
stc
sbb
xchg
push
scas
jle
sbb
jl
emms
rcr
xor
jne
or
fdivl
fnstsw
mov
or
loopne
sbb
addr16
das
jb
ret
loope
divl
and
insl
rorl
popa
push
sbb
mov
mov
jecxz
dec
mov
xor
sub
push
pop
cmp
sub
push
dec
mov
or
mov
inc
cli
or
add
lods
mov
fisubrl
adc
inc
or
fadd
and
fwait
cmpsb
mov
arpl
cld
mov
js
bswap
icebp
xchg
xchg
sbb
test
shr
and
shl
ds
sbb
pop
scas
xorl
inc
or
pop
xor
cmc
pop
sbb
sub
lock
mov
loope
in
push
inc
ret
repz
push
sbb
lods
cmp
jge
and
sbb
pop
cld
mov
in
into
loopne
loop
test
push
mov
pop
sbb
aaa
loopne
sarb
xchg
loopne
in
faddl
sbb
test
and
lock
das
push
lret
pop
pop
fdivl
sub
xor
or
jae
fisttps
adc
xor
in
mov
sbb
je
push
pusha
mov
dec
sbb
ret
adc
lods
xchg
test
cld
call
outsl
jns
push
pop
jae
xchg
mov
jae
das
scas
std
clc
xchg
cmp
aad
rorb
ds
shr
push
jge
imul
inc
jge
xchg
mov
stos
loope
popa
addr16
sub
cmp
mov
jecxz
rcl
arpl
out
lods
sbb
xchg
mov
stc
jb
ds
js
xchg
mov
mov
adc
jo
inc
mov
clc
js
imul
pop
sbb
jecxz
mov
lahf
mov
or
pop
je
cmp
cmp
lds
loopne
sarb
btcl
pop
das
shll
in
lea
cmp
or
adc
push
aad
loopne
int
xorl
pop
jg
sbb
dec
xor
jno
neg
icebp
test
in
mov
and
leave
adc
icebp
nop
sahf
lret
pop
dec
movsl
xchg
jle
adc
in
sbb
icebp
in
mov
cltd
popa
aas
dec
sub
cs
iret
pop
xor
cld
push
cmp
cmp
jle
dec
ss
in
inc
call
mov
sbb
ud1
vpsraw
or
jmp
outsb
ret
mov
fisubrs
inc
dec
ljmp
rolb
fcmovb
xchg
dec
test
out
loopne
das
cld
call
shrb
repz
popa
lods
fdivl
cmpsl
movsl
sbb
push
push
clc
scas
mov
jb
dec
scas
pop
cmpsl
push
clc
jg,pt
pop
add
movsb
pop
orb
and
and
jge
testb
mov
pop
movsb
jo
call
lock
mov
lock
or
mov
ret
lock
xor
ficoml
roll
xchg
and
icebp
jns
je
sbb
test
insb
mov
ljmp
mov
into
testb
pop
stos
adc
xchg
packsswb
in
rep
cmp
test
push
dec
out
arpl
mov
je
dec
sarl
jo
cmp
or
xchg
sbb
js
push
push
mov
jl
leave
lcall
enter
cmp
fisubl
insb
paddw
lcall
insl
sbb
pop
das
jl
cmc
sahf
stos
das
mov
mov
cmp
aad
sbb
mov
jo
out
in
stos
ret
ficoml
dec
xor
int3
divb
or
cmp
mov
mov
mov
xlat
mov
stos
xor
add
xor
mov
sbb
js
daa
loop
fcomi
cmpl
inc
xchg
js
scas
loope
mov
add
pop
sub
mov
loopne
mov
std
pushf
mov
popa
xchg
lahf
pusha
mov
mov
mull
pop
inc
add
pop
dec
pop
mov
mov
pop
add
pop
in
sub
outsl
test
clc
cli
pop
mov
push
jl
and
fistl
fistl
rolb
xchg
cmp
lcall
fisttpll
orl
push
xchg
xor
pop
xor
addl
mov
mov
cmp
aad
sub
mov
outsb
fiaddl
gs
cmpsl
dec
inc
test
lock
ds
std
push
in
fisubrs
adc
dec
orl
mov
jecxz
cmp
or
dec
ja
mov
add
pop
dec
add
or
pop
stos
hlt
loopne
daa
gs
cmp
les
cmpb
frstor
ret
sbb
jle
jge
lds
inc
sti
aad
push
sub
frstor
js
stos
pop
xchg
mov
pop
push
push
push
pop
mov
push
push
mov
mov
insl
out
ja
mov
and
jp
out
sbb
imul
cwtl
push
ffreep
jle
test
out
fimuls
ss
or
dec
fnop
push
ds
inc
cwtl
mov
test
sbb
and
mov
jb
xor
stos
jl
or
int
mov
divb
js
xlat
cmp
sti
ret
aaa
test
mov
movups
iret
add
jmp
shll
add
adc
fadd
fildl
mov
fiaddl
movlps
push
pop
dec
sti
jnp
mov
cli
movsb
cwtl
xor
lea
push
leave
inc
push
loopne
inc
rol
adc
pop
fst
jns
mov
jmp
repnz
ljmp
or
test
pop
loopne
hlt
mov
mov
sarb
iret
mov
sahf
push
mov
or
add
add
cmpsl
leave
fimuls
stos
push
jmp
aam
mov
xchg
fisubrs
adc
enter
xor
fst
and
fcoms
sub
dec
decb
dec
push
std
pop
mov
cs
leave
mov
or
call
repnz
add
scas
fsubrp
repnz
mov
inc
inc
mov
mov
cs
push
ret
mov
arpl
xchg
aam
fisttpl
mov
scas
mov
push
jl
idiv
mov
xor
sub
mov
cmc
scas
push
jb
mov
inc
leave
movsl
cmp
mov
shll
pop
sbb
dec
xor
inc
ja
cmp
sti
pop
adc
aad
out
mov
fsubrs
or
push
push
xchg
jp
ficoms
add
pop
int
adc
aam
sbb
hlt
movsl
je
push
test
fdivrl
or
add
pop
push
addr16
aas
pop
inc
lret
xchg
imul
xchg
adc
loope
mov
cmc
les
lahf
add
in
or
jmp
push
jo
xlat
lock
or
mov
sbb
mov
inc
jl
jg
sbb
jbe
fsubl
jl
loope
mov
in
mov
push
jl
fists
mov
iret
mov
frstor
mov
xchg
mov
pop
iret
pop
xor
jecxz
popf
jg
scas
mov
shl
adcl
test
adc
ds
push
fidivl
cmpsl
in
jl,pn
insl
jae
push
mov
call
cmp
cmpsl
xor
sbb
sbb
mov
xchg
cmc
aaa
pop
jb
pop
test
das
ss
sti
mov
int3
or
ja
cli
xor
and
mov
in
sbb
clc
mov
ss
ja
add
stos
pop
or
sub
push
inc
lock
jl
pop
xor
subl
fildl
mov
repnz
pop
ret
jno
repz
mov
mov
push
inc
mov
cmp
pop
popl
scas
stos
mov
jbe
arpl
out
and
fsubs
sub
das
outsb
xchg
ret
aaa
sbb
cmpsb
ffree
or
jnp
shr
adc
repz
push
call
movsb
cmpsl
inc
jne
dec
sub
adc
cwtl
pushf
jmp
jne
jne
xchg
cltd
ds
xchg
xor
xor
jl
sbb
mov
pop
inc
dec
jl
mov
shl
xor
int
sbbb
out
les
pop
cmp
mov
xchg
test
jmp
add
jb
outsl
cld
loop
lea
enter
mov
mov
jne
int
ja
adc
mov
or
cmp
mov
in
pop
decb
sbb
loop
mov
adc
push
inc
mov
pop
bound
lahf
subl
mov
dec
fbstp
xchg
sahf
mov
popf
mov
fildl
sbb
mov
mov
rol
mov
fwait
xchg
outsb
fstpl
inc
pop
add
push
or
or
ret
xor
cmp
push
and
test
shrl
test
hlt
fs
pop
cmp
mov
in
daa
nop
xchg
add
pop
rcrl
pop
xchg
mov
or
movsl
adc
rorb
lock
and
insb
mov
cmpsl
rolb
mov
jnp
xor
stos
pop
icebp
shl
cmp
in
pusha
insb
aad
aas
jp
retw
pop
cld
push
xor
dec
or
push
xor
sbb
mov
or
push
jnp
mov
adc
loope
dec
stos
mov
out
jne
sub
mov
daa
xlat
mov
adc
fildl
orb
sub
xchg
cmpb
mov
push
mov
loopne
mov
cmpsl
xor
std
mov
rorl
xchg
insb
sbb
pop
mov
mov
aad
sub
inc
cmpsl
lea
arpl
mov
fstpt
sbb
lds
rep
jnp
aam
mov
insl
mov
add
jmp
loop
std
dec
pop
mov
cmp
adc
pop
sti
ss
push
out
mov
lea
sub
ja
jne
test
je
dec
scas
rol
pusha
adc
jo
out
pushf
cltd
fnop
push
pop
push
ja
or
adc
out
call
aaa
xor
adc
jnp
ja
bound
adc
inc
testb
adc
mov
shrl
mov
mov
fmul
out
or
pop
adc
and
dec
jle
lock
and
mov
mov
push
out
mov
idivl
sbb
pop
mov
xchg
lea
dec
and
das
sarl
add
mov
xchg
lock
hlt
cmpsb
scas
movsl
mov
lcall
lods
xchg
pop
or
mov
mov
and
lret
cmp
cmpsl
outsb
mov
rolb
loopne
cli
loope
mov
lcall
shrb
test
mov
dec
fcmove
mov
test
mov
xor
pop
stos
cmpsl
and
test
dec
out
dec
ds
mov
int3
mov
push
adc
push
aas
fimull
xchg
int3
test
pop
data16
sub
push
add
clc
inc
push
fnsave
xchg
or
mov
jecxz
add
rolb
into
icebp
addr16
dec
cmp
xchg
sbb
rorb
xchg
mov
fidivl
movsl
gs
ret
mov
out
leave
lds
xor
aad
das
add
test
or
rclb
jecxz
pushf
mov
xor
xchg
cmp
shlb
jb
sub
cltd
jb
mov
sahf
lea
mov
sbb
sti
adc
out
cmp
aam
fmul
inc
mov
jmp
nop
aaa
insl
dec
pop
pop
fwait
xor
xchg
es
pop
pop
rcl
jno
aad
or
mov
mov
or
in
sahf
mov
loope
or
out
mov
int
pop
mov
arpl
lea
fbstp
paddusb
jmp
jge
jge
cmp
aaa
popl
and
jg
mov
pop
push
rcl
sub
xadd
daa
mov
push
xor
test
inc
sbb
pop
inc
mov
loop
or
push
pop
pop
cld
cli
loopne
cmpsb
repz
or
cmp
mov
mov
test
cmpsl
js
mov
mov
jne
cwtl
mov
js
jae
sbb
pop
je
adc
dec
roll
jmp
mov
cmp
jbe,pn
outsb
ss
movsl
push
add
ret
roll
pop
mov
mov
or
sbb
or
in
fmuls
adc
in
int3
cli
jb
adc
cld
data16
sbb
mov
inc
mov
outsb
jg
aas
sarb
imulb
jnp
scas
sbb
pop
dec
pop
repnz
popl
inc
movsb
stos
lods
lcall
push
mov
lahf
adc
sti
call
cltd
imul
add
lods
adc
lock
roll
clc
cmp
call
xchg
dec
test
pop
js
fwait
pop
pop
mov
and
ss
incb
or
jle
pushf
sub
mov
aam
cmp
ds
push
xchg
pop
and
xchg
sbb
add
xchg
mov
add
mov
adc
lock
push
ja
cmp
adc
jns
inc
add
mov
js
inc
xor
lcall
jo
mov
fisttpl
push
push
sbb
stos
inc
sbb
jl
in
lret
inc
scas
dec
std
lret
sahf
cmp
mov
cmp
and
lret
sbb
lcall
out
daa
jle
mov
xchg
fldcw
pop
and
arpl
push
xchg
cltd
jp
movl
rol
pop
pop
inc
xlat
rcll
cwtl
loopne
xlat
loope
stc
pushf
xorb
rorl
jl
mov
hlt
cmc
sbb
pop
jns
sub
cmp
xchg
push
and
and
fmulp
jecxz
test
stos
jno
loope
jl
popf
inc
fs
fildl
call
cmp
sbb
out
pusha
fdivs
shrb
push
dec
or
and
mov
addl
push
mov
cld
mov
lret
add
cmp
mov
je
cmp
or
inc
daa
jb
mov
add
pop
sbb
pop
inc
fisttps
loop
push
cmp
xchg
aam
pop
xchg
aaa
cmp
mov
stos
icebp
leave
inc
sahf
mov
or
cmp
xor
hlt
cmp
jbe
fwait
lods
mov
sbb
aaa
into
mov
jb
xchg
stos
inc
xchg
js
inc
mov
jno
xor
jmp
jnp
mov
cmp
mov
and
lret
xchg
fcoml
imull
test
addr16
stc
insl
mov
mov
vpandn
imull
imul
sarl
lods
cmp
add
rorl
imul
sub
push
mov
jg
ljmp
sbb
cmp
cmp
jbe
je
das
pop
jbe
mov
fucomp
xchg
xchg
inc
push
mov
or
scas
sub
inc
mov
jge
icebp
leave
fmuls
daa
adc
les
mov
vfrczsd
call
xor
shl
inc
and
jo
in
out
adcl
add
mov
addr16
jmp
jge
fcoml
and
push
sti
cmp
loop
inc
sbb
mov
inc
dec
and
add
lahf
cwtl
jae
fadds
negb
or
xchg
test
jnp,pt
push
sub
scas
mov
mov
fmull
sub
enter
mov
jae
jno
xorb
in
add
xchg
push
andb
cmp
jge
scas
sahf
pop
or
pop
push
mov
cmc
rclb
test
mov
sub
inc
fwait
mov
test
dec
xchg
sti
mov
mov
push
ds
orb
aas
add
fdivrp
test
pop
push
div
stos
int
es
aaa
inc
rorb
aad
test
add
icebp
subl
jnp
and
repz
fstl
sbb
setge
sub
sbb
adc
adc
cmp
imulb
sbb
push
ja
enter
rcr
cmp
je
jne
sbb
sub
mov
cmp
stc
movsb
sarl
scas
add
push
loop
sub
daa
xor
jge
insb
sbb
insb
rcr
adc
add
mov
mov
sub
fcomp
popf
adc
lock
ja
lret
push
out
scas
mov
push
je
mov
in
movsb
int
or
push
add
fstp
mov
jl
into
in
nop
out
clc
adc
scas
aas
mov
decl
push
pop
jne
and
jecxz
divb
addr16
cmp
xchg
addl
jne
jge
aaa
subl
xor
adc
xor
sbb
insl
cmp
fbstp
shlb
jno
imul
add
mov
loop
shll
mov
mov
out
subl
sbbl
jne
pop
xor
in
jmp
mov
jmp
aam
adc
xchg
jg
push
dec
jns
std
mov
add
icebp
test
imul
sbb
push
or
mov
out
cmp
lret
call
sbb
cmp
aam
into
stos
mov
mov
div
jge
movsb
out
frstor
jno
pop
sbb
rcrb
je
enter
xchg
cwtl
lret
adc
in
mov
mov
imulb
inc
notb
ret
jno
loop
mov
cltd
imul
shrb
pop
sbb
mov
mov
scas
jae
loopne
in
sahf
ljmp
cmpsb
mov
inc
jg
push
lea
aad
push
or
sbb
sbb
out
aas
xor
sub
push
cmpsl
out
fcmovu
mov
jmp
test
movsb
xlat
xor
shll
add
mov
js
jnp
dec
cmc
mov
mov
jbe
xchg
or
sub
mov
add
adc
lea
or
and
mov
lret
xor
pop
adcl
push
dec
es
inc
xchg
mov
inc
jecxz
sbb
mov
jle
icebp
rolb
loope
rorb
iret
rclb
loope
inc
cmpl
and
imul
inc
stos
pop
rcrb
lods
jbe
mov
enter
insb
daa
xorb
push
push
or
rorl
mov
dec
push
mov
jmp
and
jp
movsb
push
sub
gs
inc
adc
je
add
add
dec
iret
in
sbb
fimuls
jmp
out
mov
mov
ds
adc
mov
rolb
cli
test
cmp
fisttps
add
xchg
xor
adc
shlb
mov
lea
jns
xchg
push
repz
dec
addr16
mov
pop
inc
addr16
out
jl
test
idivl
pop
test
imul
jae
out
pop
das
sbb
pop
pop
push
in
mov
sbb
mov
fwait
popf
std
pushf
outsb
insl
push
fnop
fldcw
add
lock
je
aas
lcall
popf
dec
or
mov
adc
push
xchg
mov
ljmp
je
call
mov
popa
insb
and
fstpt
stos
cmp
fistl
jb
fadds
sbb
std
adc
sbb
es
cli
data16
xchg
nop
xor
bound
ljmp
imul
ds
mov
jmp
sbb
xor
adc
xchg
pop
push
sub
in
js
in
leave
or
sub
pop
lcall
ds
je
out
test
cltd
inc
aad
xor
pmulhw
aam
repnz
mov
loop
adc
cmpb
out
andb
add
popf
add
cmp
fsubr
jo
fidivl
pop
push
push
cltd
mov
aas
roll
adc
or
xchg
mov
jmp
outsb
pop
iret
lea
clc
pop
adc
jmp
fsubl
jns
xchg
lods
xchg
mov
insl
mov
lea
cmp
jbe
lds
jns
iret
je
xor
pop
dec
lock
xor
inc
fwait
pusha
test
ljmp
mov
aad
push
stos
shl
jge
or
clc
bound
sar
xchg
jb
rcll
cmc
mov
cmp
imul
pop
lods
bound
stos
in
rcl
outsb
int3
mov
mov
push
ljmp
ja
in
and
jbe
and
mov
bound
int
push
mov
pop
jb
imul
inc
mov
or
jge
lods
in
jle
inc
sbb
xchg
pop
inc
xchg
fcmovu
fcompl
pop
push
push
lahf
xor
cltd
sbb
pop
push
or
jo
repz
jecxz
aas
and
test
adc
cmpb
out
mov
cmp
jb
pop
cmp
push
ret
or
cmpsb
bound
mov
xlat
mov
fcmovnbe
pop
pushf
data16
jp
jne
out
lcall
gs
popa
pop
outsl
pop
push
aas
in
notl
and
sub
ja
xchg
mov
jno
inc
mov
sbb
ss
jns
mov
gs
mov
fsubl
adc
shl
jecxz
ds
outsl
js
sbb
xchg
sahf
test
xchg
push
sbb
inc
in
adc
and
lock
es
xchg
aas
iret
ret
push
add
mov
mov
int
clc
arpl
pop
sbb
or
clc
add
sub
xchg
in
pop
jne
mov
jecxz
push
popa
scas
leave
add
in
inc
xor
mov
mov
add
aam
or
stc
push
int
iret
orl
dec
movhps
ljmp
xchg
lret
cld
pop
jle
shl
add
push
push
jp
das
lds
scas
lret
pop
neg
in
push
lods
push
inc
cli
inc
pop
jno
lds
testl
mov
inc
pop
mov
pop
fs
push
iret
mov
pop
xor
xor
fdiv
stos
negl
lea
outsl
negl
jno
jg
pop
mov
fildll
push
add
notb
es
and
cwtl
into
data16
inc
icebp
jnp
cli
das
in
fcmove
inc
movsl
jb
out
popf
cmp
lea
ss
add
mov
pop
ja
sub
test
ljmp
adc
or
xlat
or
and
jmp
push
cmpsl
mov
prefetch
jne
lret
mov
jmp
inc
icebp
mov
je
inc
mov
mov
out
xor
cli
pusha
out
mov
int
incl
add
jo
mov
mov
flds
insb
jge
fisubs
jp
adc
loop
adcb
ja
or
in
xchg
out
scas
pop
sti
add
push
adc
add
pop
jge
je
aaa
and
dec
je
mov
nop
dec
repnz
inc
inc
ret
orl
or
icebp
popa
adc
inc
nop
loope
cli
fstps
pop
int3
mov
int3
fisubl
xchg
pop
pusha
ret
jbe
les
push
inc
inc
dec
cmp
pop
je
subl
cs
repnz
mov
inc
or
or
dec
jmp
divb
clc
cs
add
add
adc
fnstcw
test
mov
dec
pop
sahf
test
outsb
loopne
mov
lds
and
mov
adc
cmp
loope
into
lret
or
dec
sbb
or
xchg
mov
or
dec
outsb
xchg
into
in
add
jne
add
inc
mov
cmp
in
mov
pop
inc
test
clc
adc
inc
mov
inc
pop
inc
sahf
mov
or
shl
inc
add
ret
imul
inc
add
push
lods
popf
cwtl
adc
rcl
cmc
mov
stos
enter
or
inc
sbb
cmpsb
jno
add
in
mov
jne
xchg
mov
sub
cmp
and
popa
mov
push
arpl
out
das
test
adc
imul
xor
fwait
and
imul
pop
pop
shll
fists
mov
sub
je
imul
dec
add
sub
push
ja
rolb
or
stos
enter
add
pop
cmp
sarl
imul
and
mov
inc
add
push
loop
sbbb
mov
and
or
xor
add
and
test
sti
ss
jne
dec
xchg
push
std
dec
in
imul
mov
push
cmp
fcmovu
popa
mov
inc
pop
ret
inc
xor
arpl
dec
fidivrl
rorl
mov
ret
adc
add
dec
adc
sub
mov
add
inc
sub
adc
mov
push
push
sbb
cmc
shrb
mov
jbe
rolb
cmpsb
push
cmp
test
nop
jbe
ljmp
scas
mov
sub
adc
in
js
cmp
outsb
push
cmp
pop
pusha
mov
xor
cmp
jns
xchg
scas
or
icebp
mov
xchg
dec
jl
sbb
mov
mov
popa
jae
leave
fdivrs
mov
xchg
and
rcl
loopne
roll
cmpsb
divps
sbb
addr16
pop
cld
call
popf
inc
data16
xor
mov
sub
mov
leave
test
scas
push
push
clc
into
or
dec
jg
mov
scas
lods
test
add
xorb
mov
repnz
cmp
jb
xchg
xchg
jae
sub
mov
sub
lock
push
xor
mov
jl
jle,pt
jge
push
xlat
aaa
pop
je
and
hlt
lock
test
pop
fnstenv
add
pop
fisttpll
cmp
ljmp
push
mov
xchg
mov
fwait
dec
das
fdivrl
push
xor
das
jmp
jge
pop
add
subl
mov
cmp
test
add
outsb
add
jp
std
mov
inc
mov
mov
mov
push
scas
jl
loope
lods
mov
test
xor
rolb
pop
test
jle
jge
sbb
jnp
xor
mov
inc
inc
cmp
cmp
dec
icebp
jl
mov
sbb
fwait
into
mov
into
sub
clc
inc
pop
jle
cli
or
xor
and
lods
pop
rorb
push
pushl
and
inc
jnp
pop
jnp
xor
sub
insb
push
cli
ja
xchg
ret
andnps
test
cltd
mov
jmp
into
dec
aas
mov
test
or
lret
notb
fisubrs
push
push
jp
inc
inc
cld
outsl
or
or
push
test
movsb
subl
pop
pop
cwtl
sub
bound
aam
or
sbb
lock
add
scas
mov
bound
xlat
lret
or
xor
fmull
mov
fisttps
push
cmp
shrl
enter
ljmp
mov
out
movsb
sbb
arpl
pop
jl
cs
inc
out
es
out
jne
les
jl
std
inc
popfw
pushf
hlt
cwtl
movb
aad
setge
stos
sbb
mov
sti
loopne
icebp
sub
cltd
jmp
sub
mov
lret
hlt
jo
shlb
mov
shlb
sarl
lock
mov
dec
push
xor
push
lret
in
xor
test
inc
inc
addr16
mov
adc
inc
jb
mov
test
fcmovb
pop
insl
pop
push
clc
add
hlt
js
xor
lcall
setle
fistps
in
fcoms
pushl
fdivrs
punpckhbw
pop
mov
rolb
popf
mov
jae
push
mov
fcoml
dec
into
test
scas
mov
sar
cmp
loopne
and
sub
lods
mov
jge
adc
xor
psrlw
sub
and
clc
aam
or
push
out
cmpsl
jns
mov
mov
aam
xchg
inc
pusha
jg
mov
arpl
sbb
jo
xor
aam
aas
jbe
jae
ret
mov
pop
or
mov
fldt
fisubl
fs
mov
xchg
adc
sbbb
mov
shl
adc
adc
ret
repz
test
inc
push
inc
imul
insb
mov
adc
cltd
lahf
xchg
fdivl
mov
imul
jmp
sbb
inc
mov
sub
push
sbb
dec
xchg
rol
push
testl
mov
jo
jae
pop
add
cld
lock
xorl
inc
lock
stc
in
inc
hlt
inc
test
pop
xchg
mov
xchg
jmp
pop
push
outsl
sahf
repnz
inc
mov
pop
mov
clc
lock
mov
dec
cmp
cmp
jl
clc
hlt
mov
loopne
pop
jecxz
add
xlat
dec
cwtl
mov
or
sbb
ss
pop
sbb
das
repnz
insl
sbb
mov
or
jge
outsb
adc
pop
xor
shrl
push
and
mov
add
into
jnp
mov
in
sub
lret
mov
testl
icebp
push
mov
icebp
mov
cmp
jns
mov
add
or
imul
ret
and
stos
xor
cld
mov
fnsave
outsb
xchg
int
loope
jmp
orl
shrb
dec
scas
call
shll
mov
xchg
push
aaa
push
sbb
xchg
xor
sahf
fdiv
xchg
insl
sbb
push
dec
cmp
loop
in
and
mov
nop
adc
aad
jnp
cmp
cmp
mov
mov
sub
popa
mov
sbbb
push
adc
loopne
or
add
sti
repz
sbb
ds
xchg
call
xchg
push
add
ret
jge
fdivrl
sub
mov
dec
ljmp
add
mov
pushl
rorl
cmp
shrl
dec
outsl
addr16
int
fldl
aaa
std
ret
inc
leave
popf
outsb
stos
call
int3
es
inc
fildl
xlat
and
xchg
stos
loope
jne
aas
push
inc
ret
in
dec
lret
mov
jne
and
or
sbb
std
pop
and
pop
lret
adc
xchg
imul
fisubrl
loop
mov
shlb
dec
sbb
xor
jle
sbb
mov
pop
ret
jmp
lock
lea
mov
dec
mov
jge
bound
out
imul
mov
mov
mov
hlt
inc
out
fiaddl
lcall
sahf
cmc
clc
adc
push
cmc
mov
inc
adc
sbb
fprem
stc
mov
hlt
and
dec
cmc
ja
mov
xchg
divb
mov
dec
xchg
jo
ja
lock
filds
mov
sahf
loopne
mov
and
std
mov
pop
push
push
aas
pop
out
mov
lahf
jecxz
sbb
or
arpl
cltd
imul
movsl
into
in
sbbb
out
dec
pandn
mov
pop
or
jno
ss
stos
jl
clc
stc
leave
sbb
jg
mov
push
fwait
dec
push
jbe
loope
jge
pop
jl
into
testl
pop
ss
js
mov
outsl
ja
add
mov
dec
xchg
mov
loop
dec
jmp
add
hlt
addl
loopne
inc
xlat
mov
jg
cmp
cli
mov
rcll
mov
xlat
call
jl
out
mov
mov
loop
cmp
clc
in
cmc
pushf
cmp
mov
shrl
in
icebp
inc
xor
inc
scas
pop
add
int3
push
pop
lds
sti
adc
pop
pusha
lcall
ret
cmpl
das
imul
mov
dec
push
imul
jae
inc
loop
push
nop
int
testl
sub
cmp
cvtdq2ps
pop
cmpsl
xchg
fildll
jbe
jl
cmp
push
lods
clc
adc
jne
movsb
and
push
fidivs
xor
mov
push
xor
mov
outsl
in
and
push
sbb
push
lea
mov
minps
sub
inc
and
clc
push
mov
xor
lock
adc
sbb
push
ss
loopne
outsl
push
mov
insb
jge
js
adc
mov
mov
mov
push
shrl
or
enter
lret
push
shr
push
push
cwtl
int3
sub
lcall
mov
imul
pop
daa
mov
mov
cmp
or
lret
das
ficompl
bndstx
ret
addb
int
cmp
sub
pop
and
dec
jg
mov
ljmp
mov
aad
sbb
sti
in
insb
cmp
jmp
inc
pusha
push
mov
pop
aas
cmp
xor
cli
test
fsubrl
leave
xor
and
dec
jae
out
lds
sti
inc
and
inc
cwtl
fwait
call
xor
adc
xor
or
popa
inc
and
fst
pop
and
enter
pop
out
mov
mov
xor
sub
pusha
in
insl
dec
dec
stos
test
sbb
add
adcb
sbb
mov
xchg
out
sahf
xorl
mov
add
roll
lods
dec
sbb
loopne
dec
jo
mov
sub
xchg
mov
add
fwait
insl
pop
stos
dec
outsb
hlt
shrl
shll
xor
and
sbb
rclb
add
bound
or
add
sub
cmp
cli
mov
dec
inc
aam
push
and
out
pop
movsl
iret
aas
repz
push
fisttpl
cltd
movsb
pop
inc
sub
cmp
in
imul
mov
xchg
loopne
pushf
add
insl
cli
loopne
std
add
jne
pop
or
xor
js
cmpl
repnz
outsl
inc
jl
fisubs
jbe
cmpb
xchg
jle
pushl
aam
cs
pop
mov
inc
mov
mov
insb
mov
loopne
rcl
rolb
mov
scas
mov
inc
je
repz
fidivrl
cmp
sbb
lea
jns
mov
sbb
fs
mov
jmp
mov
hlt
or
mov
dec
clc
mov
cmp
mov
xor
push
lods
xor
ret
loope
add
insl
js
inc
or
pop
mov
adcl
sub
cwtl
xchg
jo
jl
ja
cmpl
out
test
xchg
mov
loopne
cmp
lahf
mov
adc
fistl
hlt
cmpsl
call
push
push
xor
pop
testl
stos
adc
rolb
push
in
lahf
mov
add
mov
dec
xchg
and
mov
cwtl
xlat
ja
push
ljmp
scas
add
ds
cmp
lret
pop
mov
das
test
syscall
stc
pusha
lea
rcl
gs
les
jmp
rcrl
test
in
pop
daa
fdiv
push
pop
jmp
jae
push
arpl
fcompl
pop
insl
or
push
ljmp
hlt
mov
jns
xlat
fucom
rorb
frstpm(287
ret
stos
iret
xorl
lahf
jb
cmp
out
or
mov
cmpl
jg
divl
and
lods
add
xchg
mov
sbb
loopne
das
sub
lcall
push
hlt
cmp
sub
mov
shrb
popf
cmp
or
dec
cmc
sub
push
movsl
fldl
sbb
adc
push
and
int3
mov
xchg
mov
jae
lock
mov
shl
loope
outsl
add
jle
adc
cmp
mov
ret
pop
pop
addr16
sbb
shll
clc
inc
mov
scas
lods
inc
pushf
push
cmp
push
cmpb
sbb
rorl
or
xchg
xchg
test
mov
xorl
push
push
js
jg
push
shlb
add
es
xor
add
stos
ljmp
icebp
test
sub
jp
repz
testl
cs
dec
rorb
movsl
pop
dec
mov
mov
jnp
push
aad
xor
sahf
outsb
cmova
add
rcrb
xchg
les
xchg
ret
shlb
hlt
es
xchg
sti
add
loope
das
popf
pop
rcll
xchg
loope
out
jg
scas
xchg
adc
cld
push
adc
mov
pop
xor
and
in
sub
mov
aad
sub
cli
mov
int3
push
mov
fs
ffreep
fsubl
or
pop
in
aad
loope
stos
vpshlw
or
fisubrs
push
loop
in
push
pop
or
ret
mov
outsl
shl
add
pop
jmp
mov
cmp
mov
inc
stos
push
not
mov
lods
mov
push
sub
icebp
notb
jbe
dec
rclb
mov
jecxz
fadds
jnp
addb
icebp
ror
push
movsb
fwait
xchg
sub
and
lock
cmp
out
mov
cmpsl
daa
or
fistpl
addr16
adc
sbb
fildll
leave
mov
xchg
dec
stos
insb
mov
dec
testb
pop
push
rcrl
cmc
fsub
mov
aas
sbb
repz
mov
inc
ret
or
lock
push
mov
push
xchg
sbb
insl
ljmp
adc
aam
inc
lods
lea
into
inc
push
dec
out
pop
and
dec
aas
imul
bound
add
push
mov
jecxz
fsubl
mov
sbb
lock
jns
sahf
loopne
fadds
push
mov
dec
xor
out
ja
jle
leave
cmpl
repz
pop
dec
pop
inc
es
dec
mov
sub
xor
popf
xor
jl
push
adc
bound
aam
mov
in
add
cmp
sbb
ja
mov
lret
and
packsswb
testb
cli
push
or
inc
push
xchg
cwtl
dec
ja
mov
mov
add
cmp
lahf
js
in
jg
xor
dec
pop
das
mov
jecxz
adc
push
xor
stos
mov
push
dec
and
jo
ljmp
inc
adc
data16
inc
xchg
sub
movsl
add
and
cld
jmp
and
push
mov
popf
inc
sar
dec
xchg
or
mov
mov
xor
outsb
inc
mov
adc
sub
dec
dec
fdiv
dec
add
xchg
ljmp
push
jnp
cwtl
xor
cmp
inc
mov
cmc
mov
push
xchg
in
and
sarl
insb
pop
xchg
or
lds
iret
sbb
repnz
pop
hlt
xchg
hlt
out
ret
dec
xchg
push
int
cmp
out
cmpsl
fs
jnp
lea
clc
mov
pop
hlt
jp
divl
mov
stos
push
mov
jle
jo
jmp
dec
cmp
outsl
and
clc
ja
cmc
mov
repnz
adc
mov
add
outsb
mov
outsl
xor
xchg
add
sub
push
insl
add
int
or
jle
test
aam
scas
out
popa
insl
pop
cwtl
mov
ret
iret
fsubrl
xor
fsub
pusha
andl
movsb
mov
ret
push
xor
aaa
shlb
mov
adc
popf
roll
call
dec
inc
xchg
pusha
xchg
mov
jg
xor
inc
sbbb
push
lahf
add
test
ret
push
ja
mul
in
and
adcl
je
insl
xchg
mov
int3
fbld
sahf
stos
in
jle
into
cmpsb
in
in
outsl
insl
repz
sbb
jmp
mov
mov
xor
pop
jge
push
mov
lock
jno
push
pop
imul
jge
sbb
sbbl
push
jmp
pop
mov
call
cmpsl
push
icebp
cmc
aaa
andb
ret
add
xor
cli
js
fmul
push
cwtl
lcall
mov
lcall
or
xorl
out
sub
rcl
rolb
mov
dec
inc
js,pt
les
xchg
xchg
xchg
in
jbe
out
inc
hlt
and
insl
std
stc
jnp
sahf
jbe
sbb
insl
or
mov
outsb
add
scas
push
ret
ss
into
aad
out
sbb
lea
jge
mov
jbe
in
inc
xlat
dec
stc
mov
aad
jne
scas
imul
cli
stc
fucomip
popl
or
stos
shll
loopne
mov
loopne
mov
cmc
mov
mov
sub
dec
fwait
add
sub
shlb
mov
scas
jge
or
imul
fistps
test
xor
out
das
fcompl
mov
sbb
ret
or
pop
fcmovne
mov
add
adc
fcomps
and
xor
and
ja
mov
mov
mov
jne
scas
scas
push
shlb
fmull
scas
mov
jge
mov
xor
int3
ret
in
xchg
cmp
pop
dec
mov
sub
sub
int3
and
inc
icebp
shll
addl
cmp
sbbl
insl
pushf
pop
ror
test
cmp
pop
inc
addr16
mov
inc
iret
test
add
mov
push
mov
sti
push
or
or
fdivl
add
sub
stos
or
sahf
inc
data16
pop
inc
add
js
jne
jecxz
push
cmp
shlb
cmp
xlat
popa
fmuls
into
imul
inc
jle
fistpl
je
daa
cmp
add
scas
and
lahf
xor
dec
fidivrl
loope
xor
xchg
in
cmp
mov
mov
ret
xor
lock
hlt
lods
sbb
sbb
repnz
mov
clc
icebp
push
jle
jne
outsb
jl
icebp
outsl
xchg
ja
js
jg
xchg
xlat
testl
push
neg
arpl
sbb
pop
xlat
add
loopne
push
sahf
xlat
jp
outsb
loop
xchg
addr16
dec
imul
sbbb
shll
mov
inc
in
out
lods
mov
shrb
imul
jbe
ljmp
es
mov
mov
lea
aas
cmp
imul
pop
sbb
and
pop
jge
mov
out
cmp
outsl
xor
jo
fidivrs
adc
in
xchg
fistpl
mov
mov
mov
xchg
out
or
inc
lea
push
xor
add
mov
fldcw
pop
fsubrs
cmc
jne
xor
daa
push
lock
arpl
xchg
movsb
inc
js
imul
outsb
jno
inc
pop
in
cmc
out
shrl
or
or
mov
ret
aam
xchg
sarb
or
sbb
jbe
jne
rcl
punpckhdq
mov
mov
rcrb
inc
mov
or
call
or
xor
popa
fs
cmpsl
cmp
shrl
inc
or
loope
jl
movsb
inc
lcall
jmp
insb
enter
mov
pop
jnp
cli
mov
jo
aad
adc
cmpsb
int
xlat
jge
xchg
jae
xor
cmpsl
xchg
mov
ljmp
sbb
push
mov
cmp
hlt
mov
test
pop
adc
pop
stos
int3
xchg
imul
sub
insl
mov
jnp
ret
test
xchg
cmp
insl
test
fdivrs
div
add
cli
xor
aam
lcall
jmp
cmp
pop
fistps
mov
xor
cmp
cmp
ljmp
push
lcall
and
push
into
mov
adc
mov
int3
add
cs
add
mov
sbb
mov
test
or
push
pop
pop
push
adc
addb
pop
das
mov
cmp
bsr
sahf
or
jecxz
jg
cmp
test
mov
mov
inc
ret
push
decb
dec
fcmovnb
sti
in
mov
addr16
and
adc
fstl
enter
xchg
cmp
or
dec
mov
or
es
lock
lds
ds
enter
push
pop
jecxz
cmc
shll
and
mov
xchg
sub
xchg
into
dec
jle
popf
cmp
adc
icebp
jmp
mov
push
mov
xchg
psraw
add
adc
sbb
inc
xorb
cmp
push
cld
xor
fstpt
cltd
add
cmp
ljmp
aad
out
mov
imul
jne
jmp
shll
movsb
sahf
dec
cld
mov
sub
mov
push
lock
lret
cmp
loopne
adcl
in
leave
stos
mov
fucomi
xorl
into
adc
addl
fs
test
jbe
insl
mov
cmp
pop
test
jb
ss
jge
insb
aas
cmp
loopne
jbe
fucom
xchg
jp
xlat
insb
jg
cwtl
lds
loopne
cmp
pop
iret
push
and
lods
push
sarb
ja
in
xor
mov
inc
jecxz
rorl
adc
mov
pop
int
sbb
push
scas
in
sub
xor
xchg
pop
xchg
shl
ja
arpl
add
aam
bound
add
xor
pop
adc
jle
and
dec
inc
shll
mov
mov
cmc
outsb
sub
cmc
jmp
mov
aam
pop
insl
ret
ret
add
and
jge
mov
fwait
push
das
adc
rcr
push
xlat
inc
jl
xchg
dec
jb
ss
mov
jmp
mov
and
insl
mov
call
add
jp
inc
leave
sbb
mov
test
or
push
push
sbb
pop
mov
xor
fadds
call
mov
xorl
jg
nop
sbb
inc
sbb
std
bound
rcl
mov
ret
lods
lret
push
insl
jnp
mov
lock
or
insb
mov
aaa
push
pop
cmp
cmp
insl
aaa
fs
or
fsubs
and
adc
inc
stos
dec
add
loopne
cmpsl
or
push
call
xchg
mov
outsb
test
lds
xchg
mov
xchg
call
and
pop
push
push
cmp
mov
mov
push
push
push
fld
enter
pop
cmp
imul
pop
jecxz
pop
lock
sub
mov
mov
outsl
std
mov
lahf
imul
mov
mov
test
push
push
ljmp
push
push
sbb
incb
pop
jo
xor
ljmp
inc
in
cwtl
insl
add
dec
push
cmpb
adc
sahf
adc
sub
xchg
icebp
mov
inc
clc
sub
and
rorl
pop
popf
jnp
lock
pop
stos
fwait
xor
pop
adc
xchg
pop
mov
roll
nop
jbe
cmp
jbe
outsl
ja
mov
cli
xchg
cmp
or
dec
aas
fs
divl
push
scas
ret
cmpsb
insl
pop
aas
fadd
jmp
out
bound
out
adc
jne
hlt
and
scas
jp
mov
popa
ret
test
jg
push
test
jne
in
sub
cltd
adc
shrl
fildl
pop
cmpsl
iret
push
out
xchg
push
fdivrs
js
mov
stos
rorl
dec
jp
cmp
enter
jne
stos
lahf
pop
int
arpl
cmp
jmp
out
enter
divl
fs
cmp
mov
xchg
push
roll
push
mov
adc
mov
rcll
jnp
or
addl
mov
cmc
inc
mov
out
sub
cmp
call
mov
adc
sub
or
push
fdivl
push
pop
std
movq
xor
loop
mov
lods
jecxz
pushf
sbb
mov
mov
sub
xor
inc
jge
jge
mov
pop
push
scas
outsb
add
lods
ja
hlt
and
dec
dec
jmp
mov
out
xor
test
push
aas
in
js
cmp
nop
pop
out
jge
sarl
push
jb
aaa
push
mov
xchg
lods
bts
lahf
mov
fsubp
sbb
inc
out
jns
addr16
ret
mov
mov
xor
inc
fildl
push
sbb
mov
pop
mov
jno
xchg
fcomps
iret
mov
add
imul
enter
cld
clc
mov
cltd
mov
fiaddl
cmp
fsubp
test
cmp
jp
push
cltd
enter
sub
clc
sbb
movsb
pop
aaa
mov
pop
jne
push
test
roll
pop
fbld
mov
in
cld
cmp
jne
pop
xchg
clc
jne
cmpsb
jae
nop
popa
testb
dec
sbb
mov
push
arpl
sbb
add
add
push
push
test
push
push
inc
outsb
sub
adc
fnstenv
out
pusha
sub
fnstcw
push
subl
addb
call
adc
cld
pop
lods
mov
loope
mov
dec
sbb
xchg
inc
xor
inc
xchg
adc
mov
and
mov
xchg
test
test
adc
xchg
fsubr
pop
push
insb
mov
imul
ret
jmp
pop
pxor
jge
ret
push
mov
les
push
test
aas
iret
in
jge
jne
stos
mov
sbb
pop
test
in
dec
mov
mov
clc
rcl
jae
fiadds
lds
out
stos
subb
cltd
es
std
push
mov
popa
out
loope
ret
xchg
pmovmskb
add
std
and
shll
mov
shll
mov
loope
push
mov
jp
pop
inc
xchg
sti
in
cmpl
dec
xchg
inc
jne
ret
sti
loop
pop
ds
fistpl
or
cmp
push
cmp
push
xchg
jnp
jne
xor
and
roll
popa
jp
jg
cmpsl
mov
adc
and
and
pandn
out
js
lcallw
lock
mov
test
adc
dec
and
cltd
inc
into
enter
cmp
js
lcall
out
cmpsl
std
push
fwait
pop
js
aad
mov
movsb
fldenv
leave
inc
shll
push
push
and
enter
jne
mov
enter
sti
daa
mov
fldl
xchg
test
jae
dec
cmp
repnz
lcall
pushf
or
lods
fisttpll
mov
in
ret
mov
push
dec
mov
fdivrl
mov
popa
push
repz
mov
das
cmp
fwait
xor
les
mov
fsubs
insl
aas
cmp
dec
add
test
js
lds
ja
jo
cmp
ret
lock
aam
fistl
in
dec
outsl
cmpsl
test
pop
out
mov
ja
lods
fnstcw
insl
js
aam
loop
jb
jae
fidivrl
mov
dec
xchg
scas
push
mov
in
cmpsl
test
mov
push
lods
lods
pop
adc
cmc
loope
inc
cwtl
ffree
movsl
mov
insl
loopne
dec
cmp
mov
jge,pt
adc
iret
or
shlb
sbb
inc
out
push
cmp
and
mov
aas
mov
ljmp
jns
or
jnp
fadd
xor
xchg
ret
popa
in
xchg
in
fildl
cmp
outsb
mov
dec
cltd
pop
pop
jne
pop
pusha
push
addb
push
mov
lock
idivb
mov
int
shl
outsb
xchg
gs
rcll
jmp
lcall
mov
hlt
int
push
inc
mov
pop
xchg
adc
ds
loopne
push
movsl
fdivl
test
andb
jge
lods
mov
dec
in
or
mov
divb
ds
outsb
xchg
adc
in
mov
add
test
mov
mov
aas
add
mov
mov
jp
adc
fiaddl
sbb
jb
mov
in
pop
int
pop
mov
lcall
inc
sub
mov
mov
pop
sub
jge
mov
outsl
out
inc
daa
mov
and
push
ljmp
adc
cwtl
sahf
xor
push
push
aaa
bound
call
push
lods
pop
aad
mov
out
out
popf
mov
popa
aad
jo
lock
out
mov
pop
jg
popf
and
andb
cmp
jbe
mov
out
loop
je
cmp
and
enter
je
cmp
lock
mov
fcoms
jp
mov
fwait
jnp
mov
out
cmpsb
roll
push
push
ja
mov
test
out
cltd
jg
cli
inc
cmp
fildl
xor
fs
outsb
jnp
iret
ds
fsubrs
clc
cmpsl
fisttps
ljmp
das
stos
fcmovnb
pop
shl
or
mov
mov
test
shl
out
sub
js
mov
mov
add
ret
inc
aam
mov
fildl
cli
xor
pop
imul
mov
imulb
mov
lahf
xor
sbb
pusha
mov
in
jbe
std
mov
jg
ja
icebp
movsl
adcl
adc
pop
push
dec
mov
dec
repnz
stos
cmpsb
sysret
sahf
add
call
jle
in
orl
pop
lods
fdivrs
mov
mov
mov
sub
movl
js
rcrb
inc
mov
out
out
sub
jae
jns
rcrl
or
insl
clc
imul
jne
inc
sahf
arpl
scas
lods
ret
je
and
jecxz
aad
ja
insl
dec
jae
mov
ljmp
and
icebp
inc
xchg
mov
pop
mov
cld
xor
test
xchg
inc
or
pop
mov
data16
inc
test
test
out
test
stos
adc
jnp
arpl
stos
sti
fstp
in
cmpsl
mov
das
popa
sub
call
push
adc
jae
mov
call
fwait
dec
ret
add
push
out
movsb
jge
pop
ja
jge
fidivrl
dec
cs
inc
adc
or
imull
insb
stc
sub
add
cmp
mov
lods
mov
lret
mov
sbb
test
sub
out
mov
lock
test
jle
jl
push
jl
pop
movsl
add
mov
or
or
fcompl
outsl
inc
cltd
call
cmpsb
or
cmpsl
daa
and
call
mov
jge
mov
push
xlat
jmp
ret
enter
mov
in
xchg
inc
subl
jg
xor
dec
inc
shrb
push
es
test
pop
or
jnp
sbb
mov
sbb
inc
inc
push
and
inc
pop
mov
call
call
inc
or
mov
ljmp
xchg
add
adc
xchg
jno
mov
sub
and
dec
repnz
sbb
sarb
dec
jb,pt
dec
lcall
cli
loopne
cmp
cwtl
fimull
add
clc
push
xor
gs
cli
jp
push
out
jnp
stos
jae
loopne
movsl
and
pop
ret
test
cmpsl
fdivrs
fisubl
add
adc
clc
loop
pop
pop
movsl
js
in
ss
lcall
push
fidivrl
xchg
ss
ret
jge
stos
cmp
push
arpl
cmpsb
pop
jns
push
jp
jl
add
pop
loope
xchg
lcall
fistpl
lahf
pop
in
adc
and
jp
pop
fs
add
sbb
iret
inc
xchg
pop
xlat
and
lahf
lock
sbb
mov
stos
push
jb
test
mov
push
and
daa
jmp
sub
push
or
or
mov
jae
sbb
add
xchg
and
test
pop
jmp
fmull
mov
sub
sbb
popf
add
cmp
and
jo
stos
dec
pop
sbb
mov
outsb
lea
dec
je
ret
outsl
leave
hlt
push
adc
jne
and
cmp
fcmovnu
mov
fwait
xor
and
jp
lock
int
pop
clc
xchg
and
ds
xlat
adc
cmp
out
fstpt
push
jle
fwait
dec
sub
and
push
cmc
aad
test
lods
xchg
popf
xor
arpl
stos
dec
sub
test
pop
outsl
lods
push
add
mov
outsl
sti
mov
insb
iret
mov
cmc
jp
dec
out
clc
sarb
xor
mov
stos
sub
xor
cmp
add
fucomp
push
dec
mov
scas
mov
aaa
fiaddl
inc
insl
mov
aam
add
lock
xlat
out
lret
cmp
push
pop
mov
cmp
mov
or
push
add
adc
jne
roll
jbe
mov
pusha
rclb
hlt
push
in
mov
mov
scas
into
jb
div
mov
or
dec
cmp
enter
sub
push
cwtl
test
cmp
sub
rcr
xor
into
sbb
in
mov
or
or
sbb
sub
int
hlt
imul
fisttps
popa
subb
jp
popa
testl
mov
sub
cmp
jmp
cmp
scas
xchg
and
mov
cli
jbe
fcmovb
into
fcom
mov
adc
xchg
xchg
add
fmuls
outsl
mov
sti
test
jnp
and
aaa
xor
mov
mov
lret
xchg
mov
add
and
jmp
lea
add
test
test
add
imul
pop
inc
jnp
ja
test
sbb
xchg
adc
imul
loope
adc
mov
les
push
inc
pop
sub
rcl
xchg
mov
stos
dec
iret
xor
scas
and
arpl
pop
push
xchg
es
sub
mov
call
imul
pop
mov
pop
add
ljmp
xchg
addb
push
inc
or
movsb
push
or
jg
xchg
repnz
sbb
inc
rclb
adc
ss
test
jo
shl
aaa
pop
dec
jb
sub
test
pop
frstor
inc
repz
jmp
cld
jg
cmp
jge
or
mov
mov
aaa
push
nop
xor
js
std
sbb
dec
jbe
pop
pop
aam
mov
and
cmp
pop
inc
mov
ret
cmpsl
or
jle
sbb
mov
dec
mov
adc
incb
das
out
jb
jmp
push
das
push
xchg
imul
dec
ficoml
jne
fcmovbe
test
jnp
pop
jns
sbb
mov
addb
jnp
push
and
lcall
xchg
push
sub
jge
test
pop
mov
mov
stos
inc
and
jp
push
pop
add
jmp
es
inc
xlat
sti
and
add
out
mov
loop
jno
neg
mov
inc
inc
ds
sbb
sbb
jl
sbb
out
push
xor
pushf
cmc
mov
mov
pusha
inc
mov
sub
das
dec
fwait
das
xor
inc
xor
adc
inc
adc
sub
aas
pop
inc
cmp
inc
pop
jo
xor
pop
sbb
lret
mov
cmp
aam
xlat
insb
out
testb
pop
ljmp
pop
pop
dec
sub
jle
and
jae
push
pop
lods
scas
aas
sahf
pop
ljmp
js
lahf
sti
repz
pop
pop
cwtl
xchg
ret
loopne
in
dec
and
jnp
jge
mov
out
sbb
jle
nop
mov
repnz
mov
add
jmp
push
cmp
ljmp
test
js
mov
mov
bnd
push
inc
cld
mov
adc
add
aad
ficompl
or
dec
or
nop
out
pusha
imul
test
or
add
xor
pop
ljmp
xorl
sbb
mov
movsb
popa
addr16
call
mov
cmp
pop
adc
push
hlt
cmc
jecxz
das
cltd
xor
dec
iret
ja
test
sbb
cmpxchg
dec
or
dec
xor
add
cwtl
xor
imul
jl
inc
incb
nop
mov
daa
jbe
cmpsl
add
cmpsl
insb
dec
scas
sbb
clc
jbe
push
and
mov
xor
inc
pop
scas
adc
or
test
and
test
pop
xchg
repz
and
fwait
mov
cmp
inc
fists
ds
sub
lahf
pop
lods
les
fldt
loope
or
inc
sbb
mov
xchg
lcall
push
add
out
imul
adc
fdivs
inc
testl
or
push
int
out
xchg
pop
stos
add
push
out
fcom
mov
clc
lods
roll
arpl
or
rorb
ja
cmc
cmp
into
mov
mov
fiaddl
push
out
mov
mov
add
aas
push
push
fdivrl
and
inc
in
pusha
push
addl
add
or
mov
push
inc
mov
call
xor
sub
push
push
iret
jmp
lock
lahf
xchg
cld
adc
jmp
push
cmpsl
dec
add
ret
dec
mov
xlat
inc
insb
cmpb
pop
dec
jns
lods
fmuls
std
clc
add
cmp
test
ljmp
les
push
insb
out
xchg
jne
icebp
movsb
out
adc
je
add
lcall
gs
stos
roll
mov
ret
jo
pop
or
mov
mov
sbb
bound
inc
cmp
xchg
insb
mov
not
xor
dec
cmpsb
xchg
stos
jno
sbb
pop
inc
dec
xor
leave
xor
inc
into
in
ja
lea
js
sub
aaa
sbb
inc
out
add
xlat
orb
sub
add
add
aam
jb
pop
jns
xor
sbb
xchg
jecxz
out
sarb
cmc
xor
mov
add
sub
adc
rol
dec
das
or
or
divl
leave
stos
cmp
lods
mov
das
adc
jmp
or
es
imul
call
shrb
pop
xchg
or
mov
dec
loop
not
and
inc
stos
inc
in
jmp
sub
pop
pop
aam
shr
push
jb
cmp
xor
popf
in
hlt
icebp
mov
cmp
fisttps
movzwl
gs
addl
outsb
movsl
cmpsl
pop
and
mov
cwtl
arpl
dec
fcmovb
inc
cmpsl
scas
fisttpll
fdivl
xor
outsb
les
mov
sbb
test
dec
imul
jecxz
stc
xchg
and
out
mov
mov
push
aam
fwait
jmp
mov
cwtl
sbbb
out
cld
mov
inc
inc
and
or
and
pop
rclb
aad
mov
popa
xlat
mov
xlat
pop
xlat
fiaddl
mov
lret
into
xchg
xchg
int
ljmp
add
mov
jl
inc
movsl
sub
mov
jecxz
pop
push
dec
icebp
mov
fs
outsb
jns
jmp
loopne
cmp
mov
xor
fadds
fdivs
cmp
adc
or
into
and
outsb
imul
sub
add
jl
inc
ret
shll
mov
clc
testb
xchg
mov
int
fdivrl
jnp
mov
std
jmp
inc
fdivs
or
sub
daa
in
push
dec
push
icebp
jp
sti
addr16
divl
xlat
jno
ja
test
subl
test
je
loope
xchg
and
sbb
pop
cmpsl
adc
iret
je
pop
mov
push
aam
stos
out
add
popf
push
mov
mov
inc
scas
push
sbb
daa
outsb
fs
fimuls
xchg
cmpsl
out
das
dec
ficoms
sarb
test
inc
mov
add
adc
jmp
push
test
pop
inc
ret
mov
rcrl
lds
push
cli
orl
loope
xchg
dec
pop
lret
test
push
jnp
push
inc
fldenv
push
loopne
jmp
mov
scas
pop
cmc
pop
loop
xchg
mov
xlat
mov
inc
movsl
xchg
pop
daa
sub
mov
or
movsb
loopne
inc
cmpb
jns
pop
in
jp
imulb
inc
cmpsb
ljmp
inc
js
andb
xchg
jbe
ret
mov
or
xor
jmp
pop
enter
jno
addb
out
int
into
in
int
xchg
inc
cmc
sub
adc
inc
ret
adc
lods
jns
sti
jmp
mov
movsb
imul
sbb
mov
pop
adc
fisttpl
pop
ret
cmp
or
pop
loop
add
lret
xchg
gs
mov
jnp
pop
sub
jmp
in
push
xor
pop
insb
stos
cmp
aaa
mov
movsb
or
xor
aas
sub
in
inc
jb
clc
add
mov
scas
push
sbb
stos
and
fcomp
jb
repz
out
jo
add
push
mov
add
and
imul
dec
sbb
sbb
jp
dec
inc
ljmp
lea
xlat
jae
jne
out
aad
shlb
mov
fldcw
aad
sahf
ss
jmp
je
stc
pusha
jae
mov
icebp
fs
pop
mov
dec
lock
out
sub
imul
mov
xor
jle
aas
ds
or
add
outsb
das
out
xlat
mov
lret
add
push
dec
xor
jecxz
ja
adc
out
xchg
xor
and
jmp
push
and
and
inc
fstl
mov
mov
pop
outsb
push
push
mov
in
mov
sub
fimull
lods
test
fcmove
xor
lahf
fcmovb
idivl
mov
cld
add
dec
rolb
popa
inc
lods
clc
dec
pop
lods
ficoms
mov
cmp
fildl
add
xor
xchg
fadds
add
scas
imul
pop
std
push
xlat
push
sbb
add
adc
jecxz
cmpsl
pop
sbb
and
fldpi
jns
out
shr
aad
xor
jge
test
push
and
xchg
aad
rcll
adc
rolb
mov
inc
rol
cli
bound
movsb
hlt
sub
pop
lcall
mov
mov
sbb
pop
loopne
andl
xchg
int3
insb
ss
push
mov
nop
mov
sbb
loope
sbb
jp
sub
int
xchg
dec
add
movsl
jl
jmp
lret
iret
das
jne
xchg
jge
lock
lods
jb
push
or
push
popf
fsubrs
popa
or
mov
cmc
add
push
outsb
dec
or
push
xor
mov
sti
adc
lcall
clc
fs
push
mov
test
ficoml
adc
mov
mov
test
mov
cmp
test
ret
push
std
out
mov
or
jae
into
mov
lss
mov
sub
dec
cmp
test
mov
cmc
orl
aas
mov
mov
sub
aas
es
add
add
lock
mov
dec
notb
jne
dec
pop
xor
mov
stos
imul
xor
cs
cld
xorl
lcall
fidivl
rcl
adc
lods
cld
sti
or
pop
ss
push
imul
push
mov
je
sbb
cmp
mov
out
fistpl
ja
inc
sbb
or
add
inc
push
push
jecxz
push
dec
cmp
adc
jae
addl
push
cwtl
jnp
lock
pop
cwtl
test
push
iret
gs
call
repnz
shlb
mov
sub
xor
jp
rcll
cmp
mov
loop
jo
pop
and
fnstcw
xor
aaa
xchg
mov
es
repnz
test
jecxz
mov
sahf
pop
pop
fisttpl
or
pop
imul
push
aad
xor
adc
jg
or
les
sarb
mov
lret
mov
ss
dec
push
scas
in
test
stc
std
mov
or
xchg
out
inc
into
and
mov
mov
icebp
stos
dec
pop
xchg
sahf
push
daa
push
rol
daa
mov
mov
mov
sbb
ds
sub
out
sti
push
test
add
in
jb
out
push
ljmp
jne
xor
sbb
stos
add
xchg
push
push
xor
push
or
mov
inc
inc
jb
in
out
addr16
xchg
iret
xor
imul
xchg
fsubl
test
inc
adc
add
jle
jo
sbb
mov
shl
dec
loope
insb
hlt
jg
or
cwtl
xchg
mov
ss
hlt
mov
pop
scas
insb
jmp
lea
jmp
fsubrl
das
or
adc
lcall
lock
inc
and
cmp
ret
mov
icebp
popa
mov
add
icebp
mov
in
ja
hlt
cs
pushf
outsb
daa
sub
test
clc
movsb
aaa
xor
cld
xlat
stos
lods
fdivl
mov
test
bound
insb
ret
jmp
and
arpl
inc
dec
mov
mul
cmpsb
rorl
movsl
gs
add
jp
hlt
sbb
out
in
add
fbld
repnz
jecxz
subl
xor
push
or
xchg
lahf
and
xor
jo
push
jl
outsb
sbb
adc
clc
popa
cmp
add
xchg
mov
push
fdivrl
mov
dec
repz
mov
xchg
add
pop
xor
fldenv
mov
int3
mov
mov
pushf
pop
xlat
mov
xor
movsl
pop
xorb
lods
pop
lock
cmp
jbe
jns
popf
push
aam
jns
data16
nop
ret
mov
cmpsb
mov
sub
mov
jmp
cmc
xchg
push
ja
or
popa
lods
test
or
push
pop
and
clc
icebp
push
add
adc
sahf
fstps
lods
fs
inc
pop
aad
in
pop
movsb
pushf
xchg
sub
cmp
mov
mov
pop
cmp
call
pop
xchg
jle
xchg
rorl
lock
cmpsb
dec
dec
and
sbb
jne
pop
mov
cmp
ds
mov
jne
adc
xchg
pop
in
adc
mov
inc
jp
sub
sbb
and
aam
mov
clc
stos
xor
mov
jge
movsb
outsl
mov
imul
jnp
adc
pop
outsb
cmp
outsb
xchg
sbb
pop
js
pop
xor
je
inc
aas
das
sub
push
je
cmp
push
jb
orb
mov
pop
divl
lret
pop
nop
mov
rcr
imul
sub
negl
or
pop
jae
inc
xlat
daa
push
sbb
loope
ret
in
dec
cmp
scas
sbb
fcoml
mov
pop
cltd
push
jecxz
mov
insb
cmp
mov
out
test
pop
cmpsb
pop
xor
push
cli
jecxz
xor
xchg
dec
notb
sbb
popf
iret
mov
sbb
call
and
xchg
jl
sub
sbb
jl
xor
pop
out
fucomp
xchg
sbb
add
lret
sub
and
and
pushf
leave
push
jmp
pop
out
iret
sbb
jmp
pop
push
ds
inc
mov
loope
mov
out
ret
scas
scas
mov
and
pop
and
setl
xorl
add
loopne
lahf
daa
fcmovnu
int
cmpsl
xchg
sub
mov
pop
mov
addr16
loop
mov
pop
lea
call
stos
nop
out
cs
decl
cmpsl
push
loop
fdivl
pop
dec
je
lret
ja
imul
jge
and
jge
add
mov
inc
fs
outsb
fcmovnbe
mov
push
gs
gs
sbb
sti
hlt
arpl
lock
jl
roll
sub
lods
mul
out
loope
xchg
inc
mov
dec
lcall
bound
sub
mov
test
jnp
out
inc
push
push
sub
xchg
shlb
les
out
jecxz
outsl
inc
movsl
cld
stos
cmp
test
aaa
jbe
cmp
mov
subb
inc
sub
jne
pop
faddp
sahf
js
aam
or
orb
roll
and
int
add
mov
jb
pop
shrb
push
scas
jb
sub
ret
jmp
push
dec
add
jmp
dec
mov
sub
push
ljmp
adc
fadd
ds
pop
je
roll
dec
push
and
shrl
cli
in
pusha
arpl
loopne
inc
shr
cmp
xor
jbe
or
adc
sar
jmp
xor
xchg
dec
mov
mov
adc
inc
xlat
test
cmp
xorl
cmpsb
ja
jne
movsb
jbe
push
add
rcl
loope
pop
fdivl
push
fwait
cmc
cmc
mov
lret
sbb
push
and
jl
push
pop
int
bound
push
in
push
push
cmp
in
repz
jp
jne
inc
mov
jne
cmp
js,pt
xor
jg
inc
pop
cld
mov
pop
lock
mov
insb
adc
frstor
pop
aas
xchg
lods
dec
or
mov
out
jbe
jle
dec
cmc
in
fnstenv
inc
sbb
cmp
gs
jne
inc
mov
push
ret
mov
stos
loopne
inc
enter
shll
lret
adc
xor
bnd
std
cltd
jb
scas
jmp
stc
or
pop
faddl
sahf
shlb
inc
mov
divl
sarb
mov
aam
xchg
loope
test
or
lods
aas
sbb
jne
cs
mov
out
jmp
gs
jecxz
fstpl
clc
cli
adc
imul
push
mov
movsl
cmp
lret
push
lcall
xchg
xor
lods
addl
jno
add
cli
rcrl
and
scas
out
and
xchg
xchg
fidivrl
fcoms
jbe
ljmp
shll
mov
sbb
ja
loop
push
adc
xchg
pop
orb
insl
subb
pop
imul
scas
imul
xchg
fcoml
mov
xor
mov
fldenv
mov
inc
or
out
sub
and
cmp
repnz
pop
cmc
mov
push
call
inc
xchg
popa
inc
out
imul
inc
sbb
dec
jge
sbbb
pop
push
lock
stos
xchg
jnp
cs
test
cmpsl
cmp
lods
popf
gs
xlat
mov
mov
std
xchg
sbb
cmp
clc
out
test
xchg
jge
xor
push
push
jecxz
sahf
add
dec
mov
jl
push
xorl
adc
jno
stos
call
sahf
adc
popf
test
sbb
jp
enter
fsubr
add
xor
sub
pop
mov
loopne
pop
movsb
xchg
cmp
push
das
je
bound
loopne
shl
push
orb
popa
cmp
push
loope
mov
aaa
shr
imul
inc
sbbl
movsl
mov
push
cmpsl
inc
rcrl
inc
cs
mov
cmp
aaa
push
setno
js
gs
mov
cltd
cmp
dec
jb
and
cmp
dec
je
mov
iret
lret
add
dec
pop
dec
stc
mov
cmpsb
sub
mov
test
dec
insb
jmp
dec
mov
rcrl
sarb
ja
mov
ret
xlat
in
sarl
notl
push
mov
fdivs
dec
mov
push
mov
sbb
je
icebp
xchg
jbe
push
arpl
xchg
dec
addr16
addl
mov
dec
fstp
pop
dec
adc
jno
addr16
arpl
sub
movsl
mov
int
addr16
fwait
test
ja
jne
inc
add
ficoms
test
inc
mov
das
cmp
pop
pop
mov
dec
es
ljmp
cmp
xor
sub
sbb
cltd
pop
inc
out
loope
xchg
shl
movsl
and
cmpsb
and
jno
mov
clc
outsl
jp
cmp
mov
je
push
jl
std
ficoml
jg
adc
add
test
xchg
xchg
icebp
outsb
jle
mov
inc
or
jecxz
xor
mov
idivb
jmp
sbb
decl
sbb
add
idiv
fstpl
sub
mov
fdivrl
cli
inc
and
mov
loop
push
jecxz
outsb
mov
jno
repnz
jb
lret
push
aad
std
jge
inc
test
enter
stos
xor
sbb
insb
es
ljmp
mov
push
in
add
rolb
inc
xlat
imul
dec
jnp
push
jbe
mov
jl
dec
scas
aaa
test
sbb
pop
sub
icebp
adc
rorl
loopne
daa
inc
icebp
sti
xchg
or
pop
inc
jmp
sbb
loopne
cld
jmp
mov
fiaddl
mov
fldl
ljmp
jge
or
gs
and
icebp
mov
call
jle
lret
jge
std
out
jge
cmpsl
adc
mov
or
xlat
mov
movsb
out
rcrl
faddl
and
jl
adc
daa
loope
push
push
mov
addr16
std
pop
fiadds
fwait
mov
test
jmp
mov
ror
mov
mov
or
mov
flds
test
push
test
fadd
and
pushf
pusha
shr
lock
scas
into
add
push
sbb
scas
pop
subb
decb
xchg
or
jmp
cmpsb
lahf
cmp
push
fmul
mov
in
jno
jae
cmpsb
test
cmp
mov
cmp
adc
mov
fisttpl
cmp
jl
rolb
jne
pop
mov
jp
pop
fmul
push
test
mov
inc
mov
ljmp
adc
outsl
mov
pop
inc
xor
mov
paddusw
xor
inc
outsl
filds
mov
aad
sahf
and
or
or
dec
mov
shr
pop
lods
pop
fcmovu
cld
loopne
mov
xlat
cs
adc
pop
or
and
dec
pop
pop
add
mov
into
cmpsb
add
cld
inc
lods
scas
mov
rcll
adc
xchg
mov
das
les
jle
xor
add
mov
and
out
mov
dec
jp
data16
mov
mov
je
jmp
sub
mov
add
dec
cmp
adc
aaa
std
inc
cmp
test
ret
das
pop
cmp
cmp
cwtl
mov
int
dec
bnd
out
mov
into
cmp
popa
rol
rep
jns
or
dec
lret
mov
icebp
adc
roll
sbb
fidivs
jbe
xchg
mov
rolb
push
std
pop
fbstp
dec
leave
pop
xor
jmp
int3
mov
jecxz
fwait
jnp
inc
and
cmp
jmp
mov
scas
stc
cmpsb
iret
xor
xchg
sub
or
js
lock
hlt
enter
loopne
das
or
in
pop
sbb
mov
ds
xor
cmp
jno
js
aam
push
xchg
jmp
inc
stos
xor
fimull
push
xchg
in
sub
xchg
out
mov
or
or
pop
sbb
xor
mov
pop
jbe
lock
inc
loopne
stos
mov
add
adc
insl
sbb
sub
push
jecxz
push
lahf
or
mov
dec
fwait
sbb
inc
repz
push
mov
call
popf
jns
rcrb
scas
sub
mov
pop
xchg
jns
jle
test
xor
testb
outsl
adc
xchg
push
add
les
inc
scas
mov
cli
xor
sub
add
and
inc
or
dec
xlat
mov
test
stos
push
push
jl
cmc
mov
insb
mov
shl
stos
or
pop
sbb
cmp
rcrl
stos
mov
je
aaa
mov
add
dec
ret
push
mov
mov
push
pop
push
add
mov
jl
iret
jae
or
test
adc
and
mov
and
and
jle
lea
testl
cwtl
mov
movsb
pushf
or
lds
jo
nop
dec
or
orb
push
push
mov
cmp
scas
mov
push
and
popf
jae
mov
jp
sub
fbld
aam
clc
jp
cs
jns
xchg
lcall
call
loope
dec
mov
cmp
mov
test
ret
scas
jmp
int3
xchg
loopne
lret
addb
out
sbb
push
dec
push
or
sbbl
and
pusha
leave
in
lret
dec
xchg
movl
dec
adc
mov
mov
call
cmc
adc
outsl
lods
divb
push
outsl
pop
jb
jge
jnp
subl
decb
ror
fwait
outsb
lods
ja
int
and
sbb
or
shlb
and
rcrb
pop
fldl
dec
or
test
add
ds
in
shl
stc
arpl
mov
push
sub
rcrl
inc
stos
adc
xchg
push
jp
lods
pop
ljmp
mov
bound
sub
std
loopne
xor
adc
jle
and
push
inc
sub
fstpl
fwait
mov
mov
je
pop
sub
shll
or
sbb
jnp
std
pop
popa
xor
mov
or
sub
xorb
or
xchg
les
sub
pop
dec
mov
loopne
sub
addr16
cmp
jno
aas
mov
mov
lock
push
push
cmpsl
and
jno
scas
xchg
push
in
push
mov
lcall
push
imul
mov
incl
jle
stos
hlt
inc
cmpsl
cmc
push
rcl
pop
and
sahf
jns
dec
inc
roll
jnp
outsl
sti
clc
jp
imul
mov
xor
pop
mov
jbe
and
lret
fisttpl
popf
insl
dec
dec
inc
mov
sahf
push
adc
mov
xor
in
cmp
push
and
insl
push
mov
jno
or
xchg
fcomip
add
push
hlt
mov
jns
or
pusha
mov
clc
in
sahf
cltd
sbbl
fldt
cmp
je,pt
push
and
inc
jb
dec
or
adc
sub
xor
mov
int3
add
push
hlt
jecxz
push
fnstcw
mov
mov
data16
fs
dec
mov
lods
imul
fimuls
mov
xchg
sbb
dec
subl
mov
jmp
xor
shl
nop
ret
aas
cmp
fs
push
or
call
pop
jecxz
imul
jmp
je
sbb
out
rcrb
xchg
xchg
mov
popa
jns
push
aad
dec
add
out
es
xor
jo
cmp
mull
mov
cmpsl
jbe
movsl
sbb
pusha
cs
js
xchg
mov
mov
or
cmpsb
int
cld
mov
hlt
icebp
mov
or
ret
fst
in
idivl
xchg
fucom
or
pop
xchg
or
jnp
pop
adc
cmpsb
lret
icebp
rcrl
cs
addr16
fs
cmp
xor
sub
mov
cmpsb
dec
sbb
cmpsl
add
loope
add
adc
dec
daa
adc
icebp
jecxz
mov
lahf
dec
sbb
mov
int
pop
jo
imul
addl
icebp
es
sbb
jge
stos
into
pop
adc
loope
jbe
push
pop
add
repnz
repnz
shlb
rorl
pop
ja
mov
add
aad
dec
pop
or
cmp
loopne
jo
test
cwtl
pop
dec
sbb
xchg
push
fwait
sub
aad
adc
jae
adc
push
pop
ljmp
push
clc
jle
sbb
out
xchg
int3
add
mov
jle
mov
jg
out
sarb
aam
cmp
enter
mov
inc
jle
push
test
rorl
daa
dec
pop
cmp
adc
dec
jl
aas
jecxz
push
sbb
jns
sbb
pop
lea
xchg
test
nop
jno
xchg
lea
xor
adc
inc
ss
lret
fisubs
call
push
popf
imul
sub
test
bound
add
repnz
fiaddl
ffree
lahf
ss
dec
lock
jge
iret
add
or
lea
repnz
repnz
jl
into
aaa
shrl
pusha
add
pop
inc
lock
or
and
push
dec
inc
bound
jbe
pop
push
mov
mov
rcr
push
outsb
fsubl
mov
mov
jnp
data16
ss
or
jno
push
leave
xchg
lock
pop
dec
inc
ret
shlb
lea
pop
mov
inc
push
jne
inc
pop
jmp
leave
loope
jle
push
inc
out
mulb
jp
std
ffreep
dec
cmp
or
or
rcl
adc
cltd
sahf
call
adc
pop
pcmpeqw
jno
or
cmp
negl
imul
xor
lret
hlt
aam
daa
in
push
rcll
pop
mov
insl
lcall
adc
or
dec
jmp
dec
test
xor
ja
sti
push
inc
ja
icebp
jg
xor
test
or
sub
fs
cmpb
div
fdivl
mov
cmpsl
cmpl
sbb
mov
lock
stos
ds
adc
ffreep
push
cs
cltd
test
push
mov
mov
pop
push
hlt
mov
cmp
andb
add
dec
inc
je
decb
pop
jae
push
xlat
pop
adc
lods
mov
bound
mov
cmpsb
jge,pn
jp
jb
fstpl
pop
subl
lcall
sbb
cli
pop
in
xchg
sbb
sti
shrl
adc
mov
ljmp
nop
stos
xor
mov
cli
pop
pop
mov
xchg
int3
popf
add
pop
pop
cmpb
mov
jo
add
mov
jecxz
sub
arpl
loopne
cmp
xor
and
inc
incb
popa
mov
add
push
inc
mov
add
push
pop
aad
jnp
push
or
cmpsl
ljmp
dec
fwait
push
mov
ljmp
add
jg
mov
mov
idiv
cwtl
cmpsb
cmp
nop
std
adc
pop
and
cli
out
xor
mov
mov
push
push
pusha
testb
mov
xor
mov
jl
cmp
mov
popf
sub
cmp
movsb
jp
or
ja
movsb
pop
jle
inc
insl
outsb
enter
add
hlt
lock
dec
sbb
xor
xchg
stc
push
jae
fldl
mov
mov
and
incb
mov
xor
lea
mov
pusha
push
iret
lret
jecxz
sub
cmp
add
pop
lods
clc
sub
jge
pop
pop
jmp
jne
ljmp
fdivl
loope
popf
sbb
dec
dec
jl
push
xor
fsubrl
in
in
addr16
jnp
inc
and
out
rcrl
or
mov
push
notl
popf
leave
sbb
js
push
adc
pop
das
imul
pop
pop
in
stos
sub
es
add
icebp
popa
divl
ja
daa
aad
mov
hlt
xlat
cmp
mov
adc
push
mov
inc
fadds
aad
xor
or
jge
fiadds
loope
out
in
add
dec
mov
jl
in
jo
jmp
outsb
dec
lret
mov
pop
cld
ljmp
mov
xor
dec
sar
or
dec
pop
mov
scas
lret
and
je
or
pop
jmp
test
sub
popf
dec
inc
ret
xchg
add
inc
bound
sbb
dec
cli
dec
inc
imull
clc
sahf
jnp
sti
in
outsl
add
cli
pop
sbb
mov
mov
shl
pushl
and
jle
pop
cmp
push
adc
loop
cmp
mov
cwtl
repz
mov
fwait
jmp
das
stos
mov
prefetch
mov
jl
push
add
sub
insb
add
subb
pop
or
fidivrl
sbb
push
ljmp
jge
jo
scas
and
not
add
jecxz
fcoms
lock
push
lahf
sub
or
int
pop
mov
rcll
mov
popf
push
mov
fdiv
mov
pop
roll
cmp
jle
fdiv
fdivrl
out
and
xchg
movsl
and
sbb
scas
clc
aad
jo
or
jbe
jp
lahf
stos
pop
movsl
mov
rcll
jmp
stc
lds
cmovge
hlt
dec
shl
fst
xor
sbb
rolb
int3
in
jmp
mov
ret
xchg
lret
cltd
or
jo
mov
je
mov
dec
out
mov
add
push
inc
xchg
sub
aam
cld
insb
loop
shlb
cmpsl
mov
sub
push
mov
loope
pop
jle
fstpt
and
mov
mov
xor
xchg
push
cwtl
sbb
cmp
in
mov
lahf
addr16
sub
lds
fsubrl
aad
dec
fnstsw
adc
out
cmp
pop
inc
call
mov
ds
mov
es
loopne
ret
mov
sbb
jns
adc
sti
mov
cmp
and
sbb
xlat
xor
loopne
jl
std
nop
adc
ret
push
adc
sti
psllw
insb
aas
cmp
lea
dec
rcl
pusha
mov
mov
or
movsb
sbb
jl
fildll
fsubr
imul
stos
sbb
xchg
es
lret
add
inc
call
ja
lahf
popa
pop
cmp
push
xchg
push
fdiv
sti
add
cmp
push
outsb
outsb
jne
jge
repz
lods
adc
js
jmp
pop
jnp
xchg
xor
cmp
mov
inc
mov
and
cwtl
sub
pop
lods
div
shlb
push
faddl
or
in
clc
xor
je
fcom
sub
fwait
sub
xchg
fidivs
push
jne
add
push
movsb
mov
aam
loop
mov
pop
push
loopne
or
outsl
stos
cmp
xlat
dec
sbb
adc
dec
jnp
rcrl
ljmp
rorb
lock
clc
jle
int
rorb
jp
cs
dec
xchg
ret
cld
es
orl
mov
cmc
divl
dec
and
jge
xor
clc
test
push
fcmovnbe
pop
or
cli
sbb
outsb
insb
and
jp
jbe
loope
out
adcb
pop
xor
adc
mov
xor
mov
and
out
xor
loope
orb
nop
sbb
jl
in
mov
fcmovnu
sub
fmull
mov
mov
and
jae
fisttpll
cmp
popf
loope
scas
jecxz
adc
push
call
and
leave
or
ret
pop
add
jg
mov
mov
and
and
mov
test
xchg
fnop
cmp
adc
cmp
in
mov
sbb
sbb
ucomiss
push
dec
shl
push
xor
pop
mov
outsb
push
sbb
xor
in
je
das
pop
push
test
sub
mov
loopne
aaa
aas
out
fbld
xor
jne
cmp
sbbb
test
ljmp
mov
xlat
cmpsb
xchg
or
and
mov
xchg
cld
loop
into
mov
popa
add
dec
ds
xor
popa
lcall
call
inc
adc
cmpsl
xchg
hlt
adcb
dec
repz
sti
stc
dec
mov
shr
mov
fwait
push
rol
xchg
js
push
pusha
push
push
stos
outsl
or
fcmovnb
mov
lcall
insl
subb
add
insb
fdivr
aam
jge
mov
mov
dec
int
jno
rcrl
sbb
mov
jo
test
stos
stos
adc
xor
mov
out
mov
lcall
cmpsb
xchg
stos
cmp
xor
les
pop
aaa
lret
dec
sub
lcall
jb
nop
ss
pop
test
lods
add
mov
popa
sarl
aam
add
call
lds
fimull
shrl
test
add
inc
and
ret
inc
jns
inc
mov
cmc
pop
clc
out
and
sbbl
fsubr
fadds
fwait
lahf
fidivrs
or
mov
jle
pop
in
adc
into
pop
arpl
jne
xorl
jmp
cmp
and
sbb
pop
adc
xchg
test
popa
or
xchg
icebp
addl
mov
ss
imul
cmp
aaa
ret
shll
pop
cld
cs
notl
cmc
dec
out
pop
inc
add
into
bound
in
push
rol
inc
addb
testb
mov
data16
movsl
icebp
jno
jo
fcoml
cmp
pop
mov
mov
clc
mov
gs
pusha
sahf
testl
jge
mov
jecxz
add
sbb
out
stos
jo
lods
add
iret
mov
jns
mov
lds
cmp
into
adc
fiaddl
sub
leave
popa
xor
pusha
call
jne
stos
pop
pop
sbb
mov
push
xchg
dec
pop
push
test
push
outsb
je
push
dec
xchg
outsb
roll
inc
jae
jbe
xchg
push
cli
jbe
mov
pop
lahf
xor
pop
inc
pushf
stc
clc
jns
ret
rolb
das
push
mov
or
aad
aaa
cmpsb
xor
ret
test
imul
jecxz
xchg
jno
scas
addl
ret
test
shll
lret
inc
adc
mov
pop
pop
stc
cmp
jnp
xchg
pop
jle
lret
or
out
jle
int3
mov
xor
cmp
loop
orb
jne
xchg
mov
orl
dec
cmp
dec
xchg
sti
outsl
cltd
pop
ds
xor
andl
ret
push
shrl
scas
add
ljmp
shr
and
bound
sbb
sbb
lea
cmp
jecxz
arpl
out
icebp
outsb
cwtl
or
icebp
imul
jo
xchg
xor
xchg
and
cmpsb
xor
pop
pop
hlt
inc
mov
jo
sub
lret
mov
or
ljmp
dec
adc
xlat
lds
dec
add
pop
jo
hlt
dec
sbb
mov
outsl
mov
xor
mov
lock
fsubs
add
inc
cmc
adc
in
xchg
loopne
xor
mov
daa
add
cmp
mov
or
xlat
jo
push
and
imul
cs
shll
xor
cmp
roll
scas
xchg
pop
push
add
loopne
sub
loop
mov
jle
arpl
mov
pop
les
imul
lds
or
inc
shll
mov
outsb
and
jbe
mov
hlt
xchg
push
aam
js
xor
bound
or
mov
and
lock
dec
in
add
or
cmc
adcl
mov
sub
mov
test
sub
mov
fimull
mov
adcl
mov
pop
xchg
shll
mov
sub
test
testb
xlat
adc
fbld
pop
add
xchg
dec
push
adc
popa
test
pop
xchg
ljmp
cmp
inc
and
lret
mov
cmc
clc
incb
xchg
lret
xlat
aas
lds
pusha
daa
stos
rcrb
fsubp
sbb
rolb
scas
clc
mov
cli
pop
mov
shll
dec
lock
test
dec
push
fnsave
mov
pusha
pushf
movsl
jne
sbb
add
dec
add
sbb
icebp
lock
stc
xchg
mov
jo
inc
bound
movsl
push
jmp
push
testl
pusha
jg
pandn
lret
push
out
xchg
sbb
in
rcll
and
aad
frstor
xlat
cld
mov
or
jg
lock
insl
stos
or
fbld
push
pop
movl
test
scas
and
push
cmpsb
out
dec
in
mov
hlt
pop
cltd
sbb
or
orb
addr16
test
loop
sar
hlt
rcrb
inc
adc
push
jno
xchg
push
mov
add
aad
fimull
sbb
adc
jle
cld
xchg
push
dec
push
das
clc
mov
cmpb
dec
push
adcl
or
mov
scas
sbb
push
out
mov
xchg
or
adcl
loope
lds
rorl
xlat
adc
rol
xchg
cmc
xchg
or
push
pusha
fidivl
xchg
inc
imul
frstor
pop
stos
popf
int3
lds
sbb
movsb
or
cmpsl
jge
xchg
push
outsl
cli
stos
cmp
push
outsb
addr16
push
adc
cld
nop
or
mov
hlt
std
adc
jo
pop
outsl
arpl
pop
xor
sub
inc
lds
inc
inc
add
daa
imul
popl
ret
fsubs
jns
pop
add
ljmp
push
call
mov
cmp
mov
cmp
xor
pop
mov
jne
xlat
sub
inc
loopne
push
sahf
pop
sbb
and
int
mov
loope
lock
mov
sub
dec
inc
iret
ret
lods
cmp
mov
and
cmp
jno
inc
je
icebp
inc
cwtl
loop
pop
sahf
pop
mov
mov
jmp
pop
mov
and
fs
nop
fcompl
lcall
imul
movd
push
pop
sbb
call
dec
lret
cmp
iret
hlt
mov
fisttpl
lds
and
sub
or
xor
rcl
pop
pop
inc
add
jnp
mov
or
imul
data16
xor
lock
gs
xchg
xchg
jp
lea
call
adc
mov
xorb
inc
outsb
aaa
sbb
push
jbe
dec
repnz
fisubs
cld
leave
loope
push
das
testl
loope
mov
scas
jo
push
mov
fcompl
inc
ja
test
xor
pusha
dec
push
bound
stos
jecxz
cmpsl
xchg
test
or
jno,pt
mov
rorl
pop
dec
insb
js
out
bound
fdivrl
sbb
xor
mov
sti
jle
aam
fisttpll
pop
test
cmpsl
test
clc
cmp
adc
dec
fwait
cmc
jge
xchg
xlat
out
pop
or
mov
repnz
mov
cmp
insl
pop
adc
scas
jnp
cmp
adc
lock
add
jle
xchg
sub
insb
in
iret
dec
lret
arpl
mov
imul
xlat
push
inc
cmp
mov
mov
dec
dec
mov
loop
das
push
cmpb
popf
pop
sub
cmp
and
lcall
int3
lea
jae
daa
sbb
jae
ret
imul
jge
loopne
and
xorl
cltd
push
jne
adc
jnp
push
jle
mov
jmp
fwait
pop
je
and
add
adc
mov
jge
mov
xchg
push
or
mov
mov
mov
sbb
push
icebp
cli
popf
mov
jmp
fnsave
cli
aad
int3
sub
pop
lock
xlat
mov
dec
outsl
jg
or
lret
std
sub
decb
test
mov
insl
push
push
xlat
sbb
call
sbb
cmovle
mov
xchg
push
mov
pop
add
addl
bound
mov
inc
lock
cld
sti
push
fstpt
mov
mov
or
jl
adc
jle
xchg
out
push
lret
jbe
sub
inc
bound
mulb
adc
dec
pop
lret
mov
pop
imul
dec
insl
sub
orl
dec
in
push
push
jl
xor
pop
shlb
rclb
mov
mov
out
adc
arpl
in
and
in
mov
orl
lock
aaa
or
jmp
clc
dec
popf
mov
xor
into
insl
hlt
xchg
call
mov
insb
in
stos
inc
xchg
add
add
jno
test
ss
xchg
mov
or
mov
fcoml
je
sbb
daa
lcall
and
rorb
clc
jle
popa
add
jae
jo
test
mov
lods
sbb
add
scas
lods
inc
inc
pop
mov
out
inc
das
inc
mov
inc
adc
sbb
lcall
xchg
mov
ds
or
xor
icebp
stos
lret
mov
dec
jge
mov
les
mov
scas
idivl
jnp
lret
test
imul
jg
fnsave
sahf
incl
jp
mov
mov
lahf
ds
inc
mov
test
xchg
pop
xor
push
mov
add
sbb
bound
cli
movsl
cld
daa
aaa
shrl
imul
imul
ret
popf
lea
imul
pop
into
or
add
shrl
xorb
scas
mov
aam
pop
mov
mov
jns
movsb
push
or
jbe
fisttps
or
mov
cmp
ja
cli
fincstp
imul
xor
fwait
pop
mov
cltd
fldl
cwtl
insb
dec
in
mov
jecxz
mov
das
mov
pop
mov
dec
adc
icebp
icebp
not
and
outsb
shrl
outsb
mov
and
nop
pop
lods
add
hlt
aaa
jo
adc
gs
fbld
insl
jp
or
jbe
xor
stos
sti
fsubp
int
loop
cmpsb
cmpsb
pop
cmp
fs
stos
and
insl
mov
ret
scas
fcomps
sub
in
pop
or
adc
cld
lds
inc
pop
dec
xchg
fsts
push
outsl
cli
xor
fsubr
std
cmpsb
loopne
jg
mov
sub
bound
andb
pop
and
pushf
add
push
icebp
inc
xchg
lret
hlt
shll
mov
pop
mov
pop
mov
mov
jl
xlat
jge
lret
inc
rclb
pop
lods
mov
arpl
test
mov
cmp
fwait
jnp
pop
adc
inc
pusha
xor
xchg
cmpsb
out
sub
test
stos
insb
inc
fidivrl
pusha
push
xchg
test
jp
sbb
into
in
shll
mulb
jmp
pop
mov
int3
popf
mov
jp
jle
stos
push
out
xchg
jp
rcll
cmp
dec
sahf
push
mov
pop
sahf
sbb
stos
sub
cmpsb
add
xchg
push
inc
cmp
push
loopne
jne
add
jp
test
sub
mov
clc
and
ficoms
orps
cwtl
add
fnsave
cmp
fwait
stos
dec
popf
cwtl
pushf
push
cmc
addl
push
mov
pop
jo
jle
inc
lret
lods
jne
cmp
aam
xchg
xor
cmp
adc
pop
mov
inc
pop
in
mov
push
ficoms
sbb
cmpsl
lcall
ss
shlb
je
xlat
sub
mov
jbe
fs
outsl
sbb
jle
shl
dec
push
cmpsl
dec
rcl
icebp
jno
push
dec
adc
pop
js
pop
pop
bound
hlt
xor
loop
jo
testl
lcall
xchg
ficoms
and
movsl
xchg
or
pop
adc
loopne
shrl
icebp
xchg
js
push
int
imul
dec
and
and
loope
fdivp
sbb
mov
ds
xchg
dec
push
fcmovb
out
je
xchg
imul
pop
inc
mov
mov
icebp
adc
movsb
sbb
ret
lock
push
arpl
jo
jns
loopne
movd
ficomps
and
push
lret
xor
scas
and
adc
pop
and
jl
jbe
mov
push
hlt
popf
or
sbb
cmp
aaa
sub
andb
push
out
wbinvd
repz
scas
pop
pinsrw
popa
sbb
imul
pusha
mov
push
inc
cmc
push
sub
sub
mov
pop
adc
push
ja
sub
and
adc
sarl
xchg
out
dec
push
jne
push
push
jbe
sub
jp
jne
cmp
insl
fiaddl
mov
jp
enter
or
and
fsubr
inc
cmp
sbb
movsb
adc
sbb
inc
mov
lock
dec
mov
and
mov
outsl
test
ss
cli
ljmp
sbb
imul
mov
xor
aas
aam
xor
psllw
iret
ret
mov
es
pushl
pop
xchg
aaa
push
mov
movsb
cli
js
cmp
in
sbb
sub
pop
ljmp
cli
adc
dec
les
ljmp
or
sbb
out
cmp
inc
les
or
mov
mov
iret
inc
pusha
movsl
jbe
cmp
mov
or
lods
stos
nop
cmc
mov
insb
lds
fisubs
sub
sub
inc
aaa
sbb
add
adc
mov
mov
dec
cld
pop
arpl
ljmp
sti
lret
lock
repz
mov
mov
lods
sbb
mov
xchg
arpl
mov
xchg
mov
xchg
das
jg
mov
mov
ljmp
pop
testb
scas
sub
ds
mov
fdivrs
popa
mov
and
fwait
scas
sti
call
aam
jg
cmpsl
movb
stos
inc
jmp
paddb
ja
inc
mov
das
dec
fstpt
adc
iret
xor
mov
ret
add
mov
bound
mov
cmpsl
scas
pushf
sti
fcom
mov
jne
dec
cmp
add
pop
movsb
xor
stos
filds
ljmp
xor
xchg
bound
sbb
mov
jo
adc
sahf
cli
das
mov
add
pusha
and
sub
scas
fcoml
mov
jmp
mov
adc
cli
clc
mov
xor
add
mov
test
or
pop
ja
outsl
fldl
std
pushf
shll
icebp
scas
jnp
jg
push
test
mov
mov
test
sti
adc
mov
in
xchg
xor
icebp
ja
out
mov
fstl
sbbl
xorl
ja
fimull
add
sbbb
das
loop
int3
add
jge
sti
fimuls
lcall
pop
lods
pop
and
inc
frstor
cs
pop
cmp
cmp
insl
mov
lcall
pop
dec
sbb
cwtl
les
stos
arpl
xorl
imul
mov
inc
lret
or
dec
es
fmul
or
andl
out
xlat
xchg
mov
xlat
js
adc
dec
into
dec
ja
mov
jbe
jb
pushf
negb
js
xchg
xchg
imul
js
pop
adc
jae
push
xchg
call
push
pushf
xchg
cmp
lcall
sub
add
xorb
sti
addr16
frstor
js
xlat
sub
loopne
fs
pop
dec
dec
sbb
mov
mov
mov
inc
mov
fcomi
es
fldenv
xor
sbb
shlb
mov
push
ljmp
xchg
add
and
xchg
rcr
pop
pop
and
xchg
mov
loopne
test
lods
adc
add
or
jne
mov
and
cmp
icebp
sub
xchg
out
sbb
add
mov
and
jl
fwait
loop
nop
sbb
xorb
stos
mov
mov
pop
jge
orl
les
ret
ljmp
sub
sub
and
mov
adc
or
or
dec
jle
cmp
inc
imul
or
repnz
daa
push
aam
jg
pop
leave
xchg
adc
push
adc
pop
mul
fxch
push
pop
fwait
sbb
sbb
je
dec
notl
and
mov
jae
das
mov
adc
adc
sub
rcll
sub
repz
xor
cwtl
xor
test
aaa
mov
cmp
cmp
jnp
adc
pop
jle
cwtl
inc
inc
jbe
dec
add
and
fdivrl
push
jg
push
xchg
mov
hlt
push
inc
dec
cs
pop
pop
psrad
xor
in
pop
mov
pop
cmp
add
out
popa
adc
pop
dec
jo
jnp
sub
imul
jne
fldt
jns
add
ja
nop
scas
in
xchg
js
jns
jge
jg
repnz
pop
push
andb
sbbl
test
xchg
in
and
mov
dec
mov
popa
psubw
xchg
ret
dec
fsts
mov
repnz
jb
popa
mov
fldcw
and
test
push
stos
loopne
and
cwtl
bound
or
mov
push
mov
movzbl
pop
enter
mov
lret
in
aad
sbb
lret
rorb
sbb
fwait
adc
aam
flds
mov
cmp
pushf
or
jmp
pop
sti
mov
fcompl
movsl
fstl
fiadds
lods
pop
jb
fiadds
mov
dec
pop
test
dec
loop
shl
or
inc
testb
in
in
xchg
enter
repz
or
clc
mov
and
incl
add
pop
adc
and
in
test
jle
pop
jbe
and
daa
ret
mov
adc
or
sbb
and
repnz
test
sbb
and
push
jns
inc
sub
pop
and
sub
mov
jnp
adc
mov
mov
gs
movnti
int3
or
in
repnz
lods
ss
add
or
xchg
cmp
jge
fxtract
and
rcrb
aaa
dec
loopne
cld
add
out
xor
mov
add
mov
add
mov
inc
add
mov
incl
add
jb
outsb
inc
xor
js
push
inc
add
add
inc
inc
xchg
inc
jle
fwait
sbb
or
push
push
adc
decl
dec
outsl
fs
dec
popa
outsb
fs
mov
push
push
imul
sub
push
push
mov
dec
adc
mov
pop
jae
pushf
or
ficomps
rorb
cmp
mov
addr16
xor
flds
jbe
stos
fdivs
jo
imul
inc
adc
push
arpl
outsb
push
outsl
sbb
mov
imul
pop
inc
push
outsl
pop
cs
scas
add
call
adc
adc
or
or
or
push
or
or
pop
or
out
mov
ja
adc
pop
add
mov
push
xchg
add
pop
add
or
add
or
movups
xlat
idiv
push
sbb
or
or
or
add
add
fcomi
jbe
add
es
sbb
cmp
add
test
or
test
add
add
push
and
add
pop
inc
inc
sar
mov
or
add
dec
inc
inc
lret
out
add
out
sbb
jmp
or
add
arpl
xchg
push
xor
adc
insl
xchg
int
add
aaa
nop
mov
add
sub
aaa
fstpt
dec
inc
inc
in
das
nop
jmp
jle
mov
and
pusha
inc
inc
push
inc
mov
jmp
dec
pop
xor
inc
mov
jle
push
add
mov
shrb
mov
daa
in
aam
push
inc
popa
and
gs
lcall
gs
lock
es
inc
test
jo
mov
dec
rcrl
push
add
add
add
and
incl
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
