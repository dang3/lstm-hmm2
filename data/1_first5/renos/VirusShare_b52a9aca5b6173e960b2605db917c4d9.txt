jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
cmp
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
cmp
ja
mov
lea
lea
lea
mov
xchg
mov
inc
mov
mov
dec
mov
mov
mov
mov
mov
mov
cmp
je
jmp
xchg
cmp
jne
mov
xchg
mov
mov
xchg
dec
dec
inc
mov
mov
lea
mov
mov
xchg
dec
lea
mov
dec
inc
inc
mov
xor
divl
test
jne
xchg
cmp
jnp
xchg
mov
lea
mov
mov
lea
inc
mov
mov
mov
lea
lea
mov
dec
lea
mov
mov
inc
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
cmp
jae
lea
xchg
inc
dec
mov
cmp
jl
mov
mov
mov
mov
dec
inc
dec
jne
lea
xchg
mov
mov
lea
dec
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
lea
cmp
jne
mov
mov
lea
mov
mov
dec
jne
xchg
mov
lea
mov
inc
inc
dec
lea
lea
mov
dec
mov
cmp
je
jmp
mov
cmp
jns
xchg
lea
lea
xchg
mov
mov
xchg
mov
xchg
mov
lea
mov
xchg
lea
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jp
lea
mov
lea
lea
xchg
xchg
mov
dec
inc
xchg
lea
xchg
mov
lea
mov
mov
lea
mov
cmp
je
jmp
mov
cmp
jns
xchg
lea
lea
xchg
mov
mov
xchg
mov
xchg
mov
lea
mov
xchg
lea
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
jmp
mov
cmp
jae
lea
xchg
inc
dec
mov
cmp
jl
mov
mov
mov
mov
dec
inc
dec
jne
lea
xchg
mov
mov
lea
dec
mov
sub
mov
cmp
jp
mov
lea
lea
mov
lea
mov
mov
xchg
xchg
lea
xchg
lea
mov
lea
mov
xchg
push
mov
mov
xor
call
mov
xchg
cmp
jnp
xchg
mov
lea
mov
mov
lea
inc
mov
mov
mov
lea
lea
mov
dec
lea
mov
mov
inc
inc
mov
mov
mov
call
lea
cmp
jne
mov
mov
lea
mov
mov
dec
jne
xchg
mov
lea
mov
inc
inc
dec
lea
lea
mov
dec
push
mov
mov
xor
call
mov
xchg
cmp
jne
mov
xchg
mov
mov
xchg
dec
dec
inc
mov
mov
lea
mov
mov
xchg
dec
lea
mov
dec
inc
inc
cmp
ja
mov
lea
lea
lea
mov
xchg
mov
inc
mov
mov
dec
mov
mov
mov
mov
mov
lea
mov
push
jmp
cmp
jp
mov
lea
lea
mov
lea
mov
mov
xchg
xchg
lea
xchg
lea
mov
lea
mov
xchg
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
mov
cmp
jns
xchg
lea
lea
xchg
mov
mov
xchg
mov
xchg
mov
lea
mov
xchg
lea
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jp
lea
mov
lea
lea
xchg
xchg
mov
dec
inc
xchg
lea
xchg
mov
lea
mov
mov
lea
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
mov
xchg
mov
lea
lea
lea
xchg
mov
mov
inc
inc
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
xchg
cmp
jne
mov
xchg
mov
mov
xchg
dec
dec
inc
mov
mov
lea
mov
mov
xchg
dec
lea
mov
dec
inc
inc
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
lea
push
mov
add
movl
mov
mov
mov
push
mov
push
call
test
je
movl
movl
mov
push
mov
push
call
xchg
cmp
jnp
xchg
mov
lea
mov
mov
lea
inc
mov
mov
mov
lea
lea
mov
dec
lea
mov
mov
inc
inc
movl
movl
mov
push
mov
push
call
xchg
cmp
jne
mov
xchg
mov
mov
xchg
dec
dec
inc
mov
mov
lea
mov
mov
xchg
dec
lea
mov
dec
inc
inc
movl
movl
mov
push
mov
push
call
mov
pop
ret
add
add
xor
xor
xor
add
push
mov
add
mov
mov
lea
cmp
jne
mov
mov
lea
mov
mov
dec
jne
xchg
mov
lea
mov
inc
inc
dec
lea
lea
mov
dec
push
push
push
call
mov
push
mov
push
call
mov
mov
mov
xchg
cmp
jnp
xchg
mov
lea
mov
mov
lea
inc
mov
mov
mov
lea
lea
mov
dec
lea
mov
mov
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jp
mov
lea
lea
mov
lea
mov
mov
xchg
xchg
lea
xchg
lea
mov
lea
mov
xchg
mov
mov
movl
mov
mov
xchg
mov
lea
lea
lea
xchg
mov
mov
inc
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
cmp
jne
mov
xchg
mov
mov
xchg
dec
dec
inc
mov
mov
lea
mov
mov
xchg
dec
lea
mov
dec
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
xchg
mov
lea
lea
lea
xchg
mov
mov
inc
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jae
lea
xchg
inc
dec
mov
cmp
jl
mov
mov
mov
mov
dec
inc
dec
jne
lea
xchg
mov
mov
lea
dec
mov
pop
ret
imul
add
outsb
add
insb
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
xchg
mov
cwtl
mov
xchg
cwtl
rcrb
mov
cmpsb
popf
orb
lahf
mov
cmpsb
popf
orb
cltd
cltd
hlt
mov
xchg
orb
mov
cwtl
sbbb
cltd
sbbb
cwtl
mov
hlt
fwait
hlt
cltd
hlt
xor
hlt
cltd
hlt
mov
hlt
fdivp
cwtl
hlt
mov
hlt
hlt
hlt
test
or
mov
mov
xchg
out
mov
xchg
aam
hlt
out
mov
aam
mov
fcmovbe
mov
enter
into
aam
hlt
mov
aam
hlt
mov
mov
push
loopne
mov
jge
or
mov
hlt
jge
or
mov
enter
jge
or
push
int3
mov
hlt
jge
or
loope
shlb
or
rcll
mov
hlt
jge
or
in
push
mov
mov
mov
mov
xor
mov
lods
lods
mov
jnp
cmpsb
cmpsl
jge
jge
jge
add
scas
xor
jnp
xor
mov
test
cmp
mov
cmpl
mov
movsb
jnp
cmp
mov
movsb
jnp
cmp
movsb
sarb
jnp
cld
jge
and
cmp
mov
movsb
jnp
cmp
mov
movsb
jnp
and
lods
jnp
and
adc
hlt
hlt
jnp
adc
cld
jnp
and
shl
mov
jnp
add
je
hlt
hlt
jge
sub
mov
hlt
js
hlt
hlt
hlt
jnp
sub
hlt
repz
sbb
lcall
jnp
add
mov
cmp
movsb
enter
jae
sbb
js
hlt
hlt
hlt
jnp
sub
hlt
mov
jnp
sub
repz
jnp
sub
in
mov
sbb
in
mov
jnp
sub
in
mov
sbb
mov
je
lock
sbb
pmuludq
movsb
jnp
sbb
jnp
cmp
movsb
int3
jnp
adc
repnz
jnp
and
sbb
bnd
and
mov
movsb
jnp
sbb
jnp
cmp
movsb
int3
jnp
adc
bnd
adc
jae
sbb
jnp
sbb
hlt
mov
mov
sub
add
jns
mov
repz
jnp
cmp
mov
jge
or
mov
hlt
lcall
add
mov
pushf
hlt
je
hlt
lcall
aam
jnp
cmp
movsb
test
hlt
je
hlt
lcall
mov
jnp
or
cltd
or
setp
int
mov
jne
hlt
adc
pextrw
xor
adc
mov
clc
hlt
xor
and
add
inc
je
sub
repnz
hlt
hlt
hlt
addl
cmp
hlt
xor
xor
stos
hlt
hlt
hlt
adc
repnz
in
mov
xor
pop
mov
pop
sbb
sbb
hlt
hlt
hlt
hlt
hlt
hlt
sbb
pusha
and
cmp
xor
loopne
hlt
hlt
shl
xchg
hlt
hlt
cmp
adc
xor
or
xchg
mov
imul
push
fnsave
add
sbb
and
in
xor
cmp
pmulhw
jb
xor
hlt
xorl
cmpps
dec
push
paddusw
jnp
jne
or
mov
xchg
mov
hlt
ss
std
xchg
mov
hlt
ss
jp
or
or
xchg
mov
push
mov
hlt
mov
jnp
adc
pi2fd
hlt
js
hlt
hlt
hlt
ss
jp
or
adc
bnd
and
or
or
mov
lret
mov
ss
or
hlt
mov
ss
jp
or
and
or
inc
push
psllq
ret
and
or
inc
bound
xchg
mov
repz
pmuludq
hlt
jl
or
xor
mov
xchg
mov
jl
or
or
or
mov
push
mov
hlt
mov
sbb
test
mov
cld
xchg
mov
mov
pmuludq
hlt
push
cld
xchg
mov
ret
xor
std
xchg
mov
ret
and
cld
xchg
mov
incl
add
pmuludq
hlt
push
std
xchg
mov
ret
xor
cld
xchg
mov
jp
add
ret
xor
std
xchg
mov
jp
add
jmp
jl
add
std
xchg
mov
jp
adc
xchg
mov
ret
xor
cld
xchg
mov
incl
add
jmp
incl
add
pmuludq
hlt
jl
adc
xor
mov
xchg
mov
ret
jl
push
jp
push
lods
mov
sbb
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jp
lea
mov
lea
lea
xchg
xchg
mov
dec
inc
xchg
lea
xchg
mov
lea
mov
mov
lea
movl
cmp
jp
mov
lea
lea
mov
lea
mov
mov
xchg
xchg
lea
xchg
lea
mov
lea
mov
xchg
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
mov
cmp
jae
lea
xchg
inc
dec
mov
cmp
jl
mov
mov
mov
mov
dec
inc
dec
jne
lea
xchg
mov
mov
lea
dec
mov
mov
call
mov
cmpl
je
mov
mov
xchg
mov
lea
lea
lea
xchg
mov
mov
inc
inc
dec
mov
cmp
je
mov
subb
mov
mov
xchg
cmp
jne
mov
xchg
mov
mov
xchg
dec
dec
inc
mov
mov
lea
mov
mov
xchg
dec
lea
mov
dec
inc
inc
mov
nop
xorb
nop
mov
cmp
jae
lea
xchg
inc
dec
mov
cmp
jl
mov
mov
mov
mov
dec
inc
dec
jne
lea
xchg
mov
mov
lea
dec
incl
mov
cmp
jne
mov
cmp
jns
xchg
lea
lea
xchg
mov
mov
xchg
mov
xchg
mov
lea
mov
xchg
lea
mov
call
mov
mov
xchg
mov
lea
lea
lea
xchg
mov
mov
inc
inc
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
mov
mov
xchg
mov
lea
lea
lea
xchg
mov
mov
inc
inc
dec
xchg
cmp
jne
mov
xchg
mov
mov
xchg
dec
dec
inc
mov
mov
lea
mov
mov
xchg
dec
lea
mov
dec
inc
inc
cmp
ja
mov
lea
lea
lea
mov
xchg
mov
inc
mov
mov
dec
mov
mov
mov
mov
mov
push
mov
push
call
mov
pop
ret
push
mov
add
cmp
ja
mov
lea
lea
lea
mov
xchg
mov
inc
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
mov
add
xor
add
mov
dec
cmp
je
xor
add
inc
and
cmp
jmp
jmp
ret
jne
xchg
cmp
jnp
xchg
mov
lea
mov
mov
lea
inc
mov
mov
mov
lea
lea
mov
dec
lea
mov
mov
inc
inc
movb
xchg
cmp
jne
mov
xchg
mov
mov
xchg
dec
dec
inc
mov
mov
lea
mov
mov
xchg
dec
lea
mov
dec
inc
inc
mov
mov
pop
ret
push
mov
add
call
mov
mov
xchg
mov
lea
lea
lea
xchg
mov
mov
inc
inc
dec
call
call
call
test
jne
mov
jmp
movw
lea
cmp
jne
mov
mov
lea
mov
mov
dec
jne
xchg
mov
lea
mov
inc
inc
dec
lea
lea
mov
dec
call
lea
mov
pop
ret
push
mov
add
mov
mov
xchg
mov
lea
lea
lea
xchg
mov
mov
inc
inc
dec
push
call
cmp
je
xchg
cmp
jnp
xchg
mov
lea
mov
mov
lea
inc
mov
mov
mov
lea
lea
mov
dec
lea
mov
mov
inc
inc
push
call
mov
pushl
call
cmp
jp
mov
lea
lea
mov
lea
mov
mov
xchg
xchg
lea
xchg
lea
mov
lea
mov
xchg
mov
pop
ret
jne
je
jae
add
sbbl
jne
movl
mov
cmp
jns
xchg
lea
lea
xchg
mov
mov
xchg
mov
xchg
mov
lea
mov
xchg
lea
mov
mov
mov
lea
call
mov
cmp
jae
lea
xchg
inc
dec
mov
cmp
jl
mov
mov
mov
mov
dec
inc
dec
jne
lea
xchg
mov
mov
lea
dec
ret
mov
ret
lea
add
roll
addr16
roll
mov
xchg
add
jns
std
lds
andnps
ds
add
add
jl
aad
add
add
sub
add
mov
jp
stc
mov
add
cmp
pop
rclb
daa
fisttpl
add
add
add
add
mov
lods
mov
mov
dec
les
add
lcall
cmp
lock
imul
add
or
push
add
fucomip
jg
mov
inc
add
xchg
push
add
mov
fs
imulb
mov
pop
sub
into
adc
add
in
add
mov
add
aam
or
or
es
loop
add
int3
add
adc
lea
ljmp
jge
add
arpl
scas
sub
push
popa
out
fisubs
iret
subl
fs
popa
add
add
loopne
cs
imul
add
testl
inc
icebp
adc
icebp
addr16
test
xchg
imul
dec
add
cmc
add
dec
or
add
sub
add
aad
out
sbb
clc
add
mov
add
add
jmp
mov
out
lods
add
sub
add
and
dec
add
iret
jp
pushf
xchg
add
xor
mov
push
test
push
in
fldt
xchg
mov
xor
mov
shll
add
adc
nop
add
add
data16
jb
mov
test
enter
mov
push
adc
mov
gs
adc
add
add
sub
xchg
aad
add
cmp
add
leave
roll
or
add
decb
add
lahf
xchg
sahf
or
fdivr
push
out
add
dec
addb
out
mov
test
lret
mov
scas
cmpsb
xor
add
or
test
xchg
add
xchg
and
add
xlat
add
mov
and
mov
call
cmc
add
sbb
pop
xchg
sub
sbb
stos
ja
jb
fldcw
add
jecxz
add
je
adc
scas
inc
add
enter
fimull
add
add
test
inc
pop
xchg
aad
or
aas
cmp
hlt
push
out
inc
and
pusha
xor
mov
add
mov
and
call
inc
pop
loopne
add
add
mov
push
add
cmp
push
dec
jbe
sub
add
add
add
add
or
add
add
add
add
add
popf
inc
add
hlt
aaa
mul
addl
or
leave
add
movl
and
mov
cli
xchg
add
lret
mov
addr16
mov
inc
jmp
add
add
mov
or
xor
mov
add
mov
add
mov
add
and
mov
xor
push
dec
inc
data16
rol
add
or
sub
movsl
xor
lcall
mov
mov
daa
dec
cltd
pop
add
cmp
mov
xlat
push
add
sarl
test
add
add
push
iret
sub
jno
dec
popa
mov
or
das
ret
adc
mov
les
xchg
pop
shrl
add
add
std
jle
out
mov
fldl
add
jne
test
bound
ja
dec
fidivrl
aam
test
xchg
shlb
jg
add
pop
push
push
in
xchg
cmp
add
int
inc
push
mov
sahf
test
push
xchg
xchg
in
stos
lods
add
cmp
dec
imul
je
out
jecxz
adc
rorb
cwtl
fs
sub
in
pop
or
mov
lret
fwait
xchg
dec
sahf
sbb
pop
and
inc
push
add
jl
inc
jbe
mov
pusha
test
xor
or
mov
cwtl
bound
inc
mov
push
mov
mov
bswap
cmpsl
sbb
jle
repnz
insb
das
jp
inc
mov
and
ret
mov
in
cmpsl
insl
lods
imul
mov
out
cwtl
lods
and
stc
mov
std
xchg
jnp
loope
push
xchg
loop
pop
push
adc
repnz
cltd
repz
adc
popf
xor
popf
clc
add
push
pop
push
mov
stos
std
mov
xchg
xor
or
pop
cltd
dec
add
sub
xor
cmp
jne
xchg
inc
or
adc
mov
sbb
insb
dec
inc
xchg
and
or
test
xor
add
scas
jae
call
add
xor
cwtl
loop
notl
std
into
mov
icebp
cmp
ja
push
mov
mov
lods
pop
mov
arpl
dec
out
insb
or
add
pop
mov
sti
pop
out
push
jb
bound
jmp
adc
add
out
lods
insl
sub
inc
mov
fstpt
mov
cmp
jnp
add
in
repz
pusha
sbb
mov
mov
jmp
fwait
push
cs
cmpsl
popf
push
sti
lods
mov
ret
repnz
test
xchg
lahf
xor
sbb
int3
shrb
data16
push
mov
push
gs
test
in
outsl
sub
push
and
ret
lret
leave
cmpsb
fsubrs
clc
das
arpl
add
cmp
or
scas
xchg
arpl
fwait
dec
fisubl
cmp
xchg
fisttps
int3
xchg
jae
pop
cmp
fidivs
ljmp
adc
mov
imul
dec
push
inc
pop
dec
jbe
out
cmc
jge
outsl
inc
sbb
jmp
aaa
xchg
inc
adc
sti
dec
jno,pt
pop
mov
pop
dec
pop
roll
push
xchg
xor
shlb
and
subl
clc
fadds
sbb
cmpsb
faddl
es
daa
sarl
loope
fwait
sub
or
cmp
sbb
js
movsl
lods
sbb
loopne
lods
lahf
jns
rclb
dec
sbb
jle
xor
dec
or
mov
push
js
xor
push
aam
push
push
fidivl
sub
rep
mov
adc
add
push
in
sti
xorb
mov
sub
das
and
es
int
mov
insl
cwtl
pusha
pop
test
rcr
rcr
adc
mov
sahf
jnp
mov
lods
out
cmpb
pop
jg
inc
nop
mov
sub
stc
pop
mov
fs
push
adc
loopne
lahf
ss
out
loop
fmul
jecxz
mull
push
xor
into
orl
in
into
pop
add
cmc
out
adc
xchg
inc
outsl
shl
loop
lret
cmp
out
adc
xrelease
ljmp
jp
dec
mov
outsl
or
mov
fisubrs
push
push
in
rcrl
sti
xchg
or
aaa
jo
gs
inc
loopne
popa
mov
loope
sahf
adc
push
je
mov
dec
mov
xchg
pextrw
inc
sbb
dec
xlat
inc
xlat
bound
insl
sub
push
adc
outsl
pushf
inc
in
jmp
ret
add
inc
aad
xor
add
cmp
loop
sub
jecxz
loope
jne
arpl
imul
test
sti
pop
mov
in
cmpsl
dec
mov
sbb
popa
ljmp
in
aas
sub
sub
push
and
fidivrs
testb
std
ja
ret
in
mov
int3
loop
hlt
js
icebp
popf
pushf
repz
mov
jbe
mov
iret
mov
icebp
push
lock
xor
pop
sub
sbb
sbb
ret
xor
shlb
sahf
jnp
insl
xchg
adc
arpl
cmpsl
sarb
fisttpll
add
lret
mov
or
and
push
and
sub
test
repz
sub
mov
push
mov
das
jp
xchg
mov
clc
cmp
mov
jp
dec
roll
lds
out
mov
or
dec
xchg
bsr
add
mov
xor
or
xchg
popa
jle
stos
imul
call
fs
sub
mov
push
dec
test
add
leave
xchg
xlat
push
jae
xor
jns
in
and
mov
cmp
inc
adc
pop
lods
scas
dec
ja
out
fimuls
mov
mov
mov
mov
rolb
dec
rcll
xor
mov
fwait
out
xor
dec
bound
shll
ss
push
xchg
loopne
nop
xor
outsb
out
sbb
or
xor
jp
lods
call
insb
mov
jnp
mov
in
mov
pusha
mov
dec
fbstp
insl
xchg
mov
loopne
inc
cmpsl
jle
jae
sub
push
icebp
mov
xlat
mov
add
lea
negb
sbb
xor
imul
jle
mov
push
lods
out
es
aas
mov
mov
in
mov
lock
rcr
arpl
aaa
inc
divl
or
sub
jle
sbb
add
ret
jle
sbbb
pop
ficoms
adc
shr
mov
mov
fwait
repnz
xor
push
xchg
xchg
movsl
jbe
js
jge
push
sbbl
push
stc
cld
or
xchg
das
jno
addr16
jl
cli
jae
into
or
push
inc
xor
sub
dec
scas
dec
das
aam
or
mov
xchg
mov
icebp
inc
cli
adc
cmpsb
pop
dec
stos
in
xchg
or
pusha
push
test
rcrb
loope
inc
xchg
sub
lock
cmp
sbb
pop
movsl
imul
and
int3
lahf
cwtl
pop
push
xchg
enter
and
imul
pop
test
push
js
cmp
pop
mov
mov
repz
push
lods
mov
fsubl
pop
outsb
out
jmp
mov
fidivs
in
cwtl
or
fwait
out
mov
rcr
and
mov
lods
xor
pop
sub
pop
lcall
mov
rcrb
xchg
mov
sahf
push
arpl
test
mov
jg
callw
or
stc
adc
jmp
xor
mov
cmp
mov
sbb
dec
pop
xor
push
cmp
arpl
xchg
pusha
into
inc
and
cmc
scas
or
outsl
mov
and
imul
adc
mov
mov
iret
inc
mov
sub
mov
xor
sub
lea
loopne
ror
pop
add
mov
movsb
pop
test
repz
xlat
repz
dec
mov
sbb
mov
leave
xlat
mov
pop
xchg
adc
mov
jmp
inc
les
addr16
jbe
xor
in
inc
sub
mov
je
stos
pop
jecxz
icebp
sbb
js
scas
lea
in
daa
cmp
jb
xchg
cmp
xor
fildl
cli
push
pop
addr16
cmc
inc
jbe
inc
std
xlat
push
int3
out
jb
sbb
and
push
and
xchg
sub
push
fadds
mov
pop
mov
fwait
inc
icebp
je
cmpsb
cld
int3
cmp
lret
test
push
mov
mov
das
cmp
push
sub
or
aam
ljmp
and
insl
jnp
or
test
mov
adc
enter
pop
mov
inc
mov
mov
test
pushf
sar
loope
cltd
popa
cmp
test
push
lds
mov
into
clc
ja
push
xchg
roll
ljmp
lret
dec
xchg
stos
fucomi
push
out
pop
data16
shrl
nop
out
push
push
loopne
push
add
mov
cltd
hlt
nop
dec
loopne
mov
addr16
testb
orl
mov
lock
popf
add
in
sbb
xor
dec
in
jns
std
inc
in
jg
xchg
out
sub
mov
sbb
mov
addr16
ja
or
dec
les
pusha
mov
fdivs
mov
inc
dec
mov
sahf
jne
mov
mov
push
out
jp
jmp
stos
lds
test
sub
cmp
sbb
and
jg
insb
hlt
iret
fnstcw
inc
fnstsw
fisubrs
in
xor
pusha
dec
jb
fisttps
out
or
sbb
inc
mov
push
jae
add
popf
movsl
stos
jmp
cmpsb
xchg
lea
pop
add
dec
test
sbb
insb
shrb
mov
scas
sbb
sub
iret
adc
mov
lods
leave
xchg
stos
mov
or
xchg
arpl
sti
inc
cli
mov
mov
movsb
jne
inc
out
in
fcmove
fcoms
int3
imul
fidivrs
jo
rorb
lock
punpckldq
cmp
lods
int
loop
cli
jbe
jne
jge
sbb
sbb
scas
cmp
adc
add
loope
cld
jno
cwtl
push
jl
cs
push
dec
xchg
cmp
xchg
or
lahf
push
test
mov
dec
push
cmpsb
loop
scas
in
outsb
scas
sub
pop
popf
daa
mov
inc
mov
sub
stos
push
cmp
pusha
jns
jb
sbb
push
cmp
lahf
mov
mov
sbb
inc
clc
add
cmpsl
xor
test
outsb
js
pop
icebp
mov
add
fmul
sub
push
imulb
pop
adc
mov
dec
stc
sbbb
mov
or
mov
sbb
push
fwait
dec
xchg
int
mov
sub
cmpsl
pusha
clc
lcall
mov
sbb
pushf
sub
mov
adc
mov
sbb
stc
lret
mov
push
adc
mov
inc
cmp
inc
icebp
mul
or
lret
dec
xor
mov
imul
add
into
and
lock
outsl
jg
dec
loop
mov
imul
mov
and
dec
mov
mov
imul
test
in
test
or
jge
mov
lahf
push
loopne
push
aas
pop
pop
aad
adc
js
sub
mov
dec
xrelease
sbb
leave
inc
xlat
loopne
push
sub
je
stc
pop
dec
pushf
lcall
cs
aad
and
nop
adc
adc
sub
mov
jecxz
inc
jge
jnp
rorb
popa
push
cmpsb
or
pop
and
stc
dec
dec
pop
jl
fldt
xchg
cmp
inc
loope
std
in
inc
sbb
sarb
imul
cmp
xchg
add
rorl
pop
mov
lds
dec
cwtl
xchg
cmp
mov
inc
jmp
fidivl
icebp
dec
pop
cld
not
ror
hlt
jb
mov
pop
cmp
inc
mov
lock
or
mov
pop
out
adc
cmc
rol
push
mov
test
bound
dec
pop
fwait
dec
cmpsl
mov
mov
popa
sub
lods
fs
mov
data16
div
lods
mov
divl
cltd
cwtl
jo
test
pop
adc
xchg
loop
lret
and
xchg
adc
inc
ljmp
mov
stos
lret
out
adc
xchg
or
push
cmpsl
sbb
mov
fisttpll
into
sti
mov
mov
pushf
jns
dec
inc
je
test
stos
mov
sbb
jb
inc
push
pop
add
addr16
push
xchg
add
add
sbb
xor
js
jns
es
xorl
xchg
cmp
outsl
inc
mov
and
ja
stos
outsl
dec
mov
jmp
mov
mov
decl
mov
bound
out
sbb
sub
enter
sub
fs
addr16
cmp
addr16
sbb
jp
cmpsb
andb
cmpsb
in
insb
pop
push
idivb
andl
xchg
punpcklbw
andb
pusha
inc
sbb
test
jae
sbb
push
ja
pop
popf
int3
pop
pop
mov
adcb
frstor
fsts
lock
imul
adc
adc
adc
jp
jb
dec
ret
pusha
leave
or
push
push
fwait
arpl
test
push
rolw
pop
repz
push
nop
loope
sub
mov
shlb
or
bound
hlt
movsb
inc
xor
push
xor
cmp
out
jge
ret
adc
icebp
out
call
or
inc
aad
aaa
in
sub
icebp
dec
lods
int3
mov
xor
loope
daa
scas
push
push
push
and
inc
in
cmpb
lcall
cmp
enter
daa
mov
enter
std
lea
aaa
mov
push
inc
jno
clc
inc
movsl
jns
scas
and
lods
inc
push
xor
enter
cmp
xor
call
pop
testb
pop
xor
sbb
fdivrl
lds
ret
outsb
mov
add
xchg
pop
xor
insb
xchg
push
mov
mov
cld
push
sahf
xchg
fidivs
pop
es
mov
shll
xchg
sbb
dec
lret
mov
test
jo
mov
mov
cmpb
stc
cmpb
fs
or
bsf
push
loope
fdivr
aad
negl
loop
xor
or
call
cmp
sbb
outsl
pop
cmpsb
movsb
loop
jae
imul
push
sbb
pop
lea
das
jg
mov
sub
cli
or
push
mov
adc
sar
mov
mov
xchg
loopne
out
lds
shrl
adc
popa
mov
scas
repz
andb
lahf
pop
sbb
jmp
imul
xchg
xchg
adc
push
fidivrs
pushf
inc
shlb
jmp
lcall
pop
sbb
jmp
jecxz
and
inc
push
jne
dec
inc
sbb
je
mov
jle
cli
lea
call
and
xor
andl
cltd
xchg
fistpl
mov
push
fiadds
pop
cs
xor
cmpl
mov
aaa
and
ja
rcr
into
fdivp
sbb
out
std
insb
and
scas
dec
jnp
int
icebp
and
cld
and
lret
arpl
mov
fnstsw
lock
mov
jae
aam
push
cmp
ffreep
imul
fildll
insl
dec
sbb
sahf
cmpsl
mov
mov
inc
loop
lods
iret
lods
je
sub
popa
mov
std
mov
mov
out
sbb
sahf
mov
sub
insb
pop
push
test
xchg
repz
in
popf
inc
xchg
dec
sub
test
push
iret
fsubrs
in
in
dec
out
push
andb
add
cmpsb
or
sbb
push
mov
lahf
jb
dec
scas
shr
test
test
xchg
es
xchg
in
bound
movsl
stc
mov
ss
jno
push
fstpl
call
jo
xor
repz
in
cmp
mov
cmp
ss
ja
int
dec
stos
push
loop
js
jno
int
stos
mov
aaa
sub
jne
inc
push
mov
sub
out
int
inc
rolb
sbb
fs
inc
pop
mov
out
pop
sub
xor
pop
jp
mov
and
lock
in
jnp
nop
dec
jle
sbb
in
pushl
test
cmp
jge
jbe
enter
jns
push
cmp
cld
popf
repz
mov
mov
jb
xchg
sti
lods
cmp
imul
and
adc
sbb
shl
imul
orb
hlt
mov
mov
rorb
cmpsb
jmp
fidivl
test
add
inc
jae
aas
xchg
imul
call
adc
inc
das
mov
repnz
stc
cmp
icebp
movsb
rorl
add
sbb
jbe
int3
mov
inc
push
inc
sbb
pop
or
cmpsb
jmp
jl
adc
push
adc
pop
jo
jbe
scas
in
mov
test
push
and
cmpsl
into
cmpsb
call
xor
enter
daa
mov
add
dec
adc
sub
cltd
mov
add
out
sbb
mov
and
lahf
cmc
faddl
push
or
fistps
imul
add
pop
xor
insb
xchg
or
add
js
shll
push
mov
push
mov
cltd
fsubl
dec
pusha
outsb
pop
es
shrb
cs
cmpb
mov
inc
es
scas
xchg
and
fs
push
mov
js
sub
inc
pop
movsl
xchg
lcall
test
sbb
push
sbb
mov
xchg
test
mov
jg
jmp
xchg
stc
cmp
fs
add
mov
cmc
ss
xchg
cmp
mov
push
jg
and
cmp
sbb
or
sbb
jmp
enter
adc
repz
outsl
cmp
imul
adc
jb
add
mov
mov
mov
cli
out
jno
cli
cmp
shlb
mov
popf
inc
add
mov
pushf
or
adc
jbe
int
mov
add
rorb
xchg
push
cmp
or
xlat
pop
inc
inc
sub
mov
and
jmp
push
cs
jmp
aad
jb
nop
mov
dec
addl
lcall
mov
pop
fisttpl
ss
movsb
xor
pop
mov
mov
mov
pop
push
lock
xor
aas
test
adc
mov
pop
std
and
daa
test
std
adc
dec
cwtl
or
pop
mov
iret
std
mov
cmp
icebp
stc
out
hlt
cld
dec
nop
or
sarb
mov
stc
mov
mov
lock
je
mov
cmc
popf
lock
pop
rol
sub
es
cmp
sub
test
mov
and
popa
pop
xchg
lods
cmp
popf
mov
lods
lahf
inc
and
cltd
push
sbb
add
iret
push
cltd
push
mov
mov
cld
lahf
push
insb
scas
ljmp
scas
lds
inc
lret
rcl
fcoml
xchg
dec
nop
push
xchg
xchg
fsubs
adc
add
aam
xor
xchg
mov
mov
pop
sbb
in
xchg
cwtl
dec
cli
inc
test
fwait
cmp
lods
push
fldcw
testl
jo
cmp
aam
xchg
jns
fs
in
xchg
cmp
dec
je
mov
cwtl
inc
dec
ja
jne
dec
popf
add
dec
sub
mov
mov
mov
jne
and
and
xlat
out
lods
dec
xchg
bound
sub
adc
xchg
or
xor
push
xchg
sub
cs
addr16
sarl
daa
and
pop
insb
insb
xor
pop
aad
aad
in
in
cld
cmpsl
pusha
and
mov
xchg
push
adcl
rcrl
and
int
pop
push
std
xchg
dec
popf
sbb
mov
incb
mov
sbb
adc
imul
push
enter
xor
ror
xor
mov
leave
stc
mov
hlt
in
stos
scas
arpl
dec
or
adc
outsb
sbb
arpl
sub
pop
and
xor
lds
das
rcrb
mov
or
andl
and
std
sbb
shll
dec
add
or
add
jl
ret
mov
mov
cmp
mov
js
scas
les
or
pop
add
ss
into
cmpsb
imul
in
and
pusha
enter
daa
mov
in
inc
loope
inc
std
sub
into
xchg
mov
push
ds
movsl
xchg
xor
lahf
adc
notb
jns
sbb
pop
aam
loope
cmpsb
int
add
inc
add
js
sub
loopne
cmpb
or
iret
sub
ja
adc
dec
xchg
lods
adcb
sbb
mov
push
movsb
popa
dec
int
scas
mov
pop
and
ja
jno
mov
iret
into
dec
mov
testb
push
imul
shll
jg
sbb
mov
mov
fs
rcl
add
sarb
jne
or
lret
mov
cmp
add
or
out
into
into
sub
lret
xor
mov
sbb
xchg
outsl
imul
in
add
mov
lods
clc
stc
lods
std
mov
stos
out
cmp
cli
outsl
push
aaa
mov
ljmp
out
sbb
addb
pop
pop
jl
sbb
lock
fxch
in
xchg
fmul
add
xor
out
fidivs
scas
repnz
cmp
arpl
popf
loope
sub
dec
adc
dec
imul
fildll
repz
aad
das
or
loopne
jbe
ja
loopne
xor
and
jecxz
fisubrl
movb
call
and
adcl
repnz
lret
imul
dec
mov
scas
mov
mov
arpl
negb
adc
cwtl
les
bound
rcrb
mov
mov
ret
pushf
ficompl
inc
roll
mov
repz
in
imul
std
shlb
insl
pop
dec
dec
dec
pop
and
mov
ds
jo
and
movsl
sbb
mov
iret
jecxz
and
xor
push
pop
and
jge
inc
xor
cltd
cmp
xor
ret
lock
fstl
mov
arpl
xchg
int
movsb
ljmp
jle
cmpsb
movsb
jg
xchg
imul
push
cmp
jecxz
cwtl
int
add
loope
xabort
mov
movsl
rol
jl
fsubrs
arpl
filds
fidivl
fwait
push
lods
jns
adc
add
push
js
decl
fcomps
jns
js
in
inc
outsl
xchg
sub
sahf
mov
push
cltd
pop
ja
mov
jecxz
es
mov
std
lods
cwtl
dec
inc
pushf
xorb
pop
mov
aaa
shr
mov
dec
out
insl
jmp
xlat
cmp
add
ja
in
incb
jno
mov
sbb
sub
in
and
gs
mov
lock
clc
sub
in
pop
fsubs
and
fisttps
add
xchg
fnstenv
pop
jmp
mov
ficoms
jae
add
push
shlb
inc
mov
lods
push
cmp
sub
sbb
lcall
movsb
sbb
push
repnz
jnp
iret
pop
ss
leave
jo
adc
cmp
repnz
jecxz
or
nop
daa
cmpsb
inc
jecxz
mov
add
dec
and
adc
sar
inc
je
pop
shlb
mov
pop
jg
cmp
ret
push
mov
jbe
repnz
jge
sbb
aaa
or
mov
jl
inc
dec
stc
stos
cld
push
fnstenv
add
jo
mov
scas
mov
pop
outsb
test
ljmp
cmpsb
out
test
in
or
enter
daa
mov
lea
sub
xlat
scas
cmp
cltd
ds
mov
pop
and
inc
or
cmc
test
add
out
xor
mov
popf
js
sbb
pop
in
imul
pop
push
movsb
fdivrl
insl
sub
mov
inc
shlb
sub
lahf
mov
add
fisubs
filds
push
cmpsl
cld
int
mov
dec
mov
pop
mov
dec
push
mov
movsl
jmp
xor
sahf
dec
lret
xlat
mov
sbb
clc
jg
push
mov
shrb
cmpsl
addb
sbb
ss
dec
cmp
xor
xor
fsubrl
movsb
xor
mov
nop
into
mov
data16
xchg
imul
sti
jns
loop
lock
imul
xchg
inc
data16
cld
lods
in
mov
out
mov
cli
mov
es
push
jecxz
sti
lods
inc
movsb
decb
pop
mov
loopne
xor
adc
jl
flds
or
repz
adc
aad
and
mov
lcall
sub
cmp
addr16
push
lods
cs
jl
aad
push
mov
dec
aas
cmp
test
je
aam
jecxz
ds
xchg
orl
inc
fadd
mov
lahf
pop
sub
call
mov
inc
sbb
jnp
test
sbb
out
add
mov
adc
adc
loope
std
popa
faddl
jg
inc
mov
push
lods
icebp
cmpsl
jno
cld
mov
pushf
fisttps
arpl
lock
loope
das
xchg
mov
mov
jecxz
jecxz
iret
push
and
mov
icebp
insl
mov
mov
mov
xchg
lcall
sbb
adc
mov
inc
les
pop
movl
insl
jmp
xchg
ljmp
jle
sahf
mov
or
and
sub
into
rorl
dec
jo
xchg
xchg
xchg
and
out
adc
adc
scas
mov
xor
mov
sbb
test
mov
jecxz
pushf
test
sbb
xchg
into
xor
inc
mov
and
cmpsl
movsb
fwait
xchg
mov
sub
imul
scas
xchg
pop
xor
dec
jns
xor
jns
ss
dec
fistpll
push
test
dec
xorl
mov
inc
mov
dec
and
jne
or
mov
pop
mov
push
pop
bound
xor
add
mov
sbb
sub
and
xchg
sbb
jp
or
insl
cmpsb
jo
or
adc
inc
das
jle
mov
ss
push
add
sub
xchg
lods
xchg
and
inc
jmp
sub
push
add
popf
push
lahf
and
sarb
test
inc
lods
sbb
clc
and
sub
scas
pop
pop
cmpsb
push
push
pop
jg
ljmp
ret
test
orl
lret
inc
or
pop
push
bound
fimull
incl
mov
movsb
mov
fsubp
cmpsl
in
lds
rclb
fptan
scas
mov
movsb
jb
icebp
push
insl
test
jbe
xor
jge
push
lds
fnsave
orb
or
icebp
jl
lahf
insl
dec
push
iret
out
xor
dec
mov
out
and
mov
push
mov
and
insl
add
icebp
stos
mov
daa
mov
loope
loope
and
inc
mov
cmp
lret
test
movsl
xchg
lret
and
sbb
subb
andl
sbb
jg
int3
push
lods
jmp
xchg
or
ret
pop
sub
fisubrs
je
push
mov
inc
fsubl
icebp
pop
sub
sub
mulb
adc
add
jmp
es
xchg
cmpb
mov
sbb
xor
push
vmovaps
or
pop
and
lcall
jle
fistpl
and
lock
mov
clc
or
decb
out
pop
mov
jne
out
adc
inc
popa
cmp
jmp
inc
negl
popa
xor
push
cmp
inc
decl
movsb
test
dec
cmc
pop
inc
ljmp
sbb
inc
imul
les
cwtl
jae
data16
shrb
gs
out
pop
lcall
outsb
out
in
shlb
sub
out
gs
sbb
and
dec
pop
mov
mov
dec
out
out
repz
ret
sbb
cld
outsb
dec
cmp
inc
cmp
sbb
mov
pushf
icebp
divb
cs
aas
nop
push
outsb
add
sahf
inc
or
popf
lea
inc
arpl
dec
jecxz
out
mov
stos
lea
inc
mov
enter
and
dec
pop
movsb
xlat
cmp
notb
sbb
cld
pop
cmp
out
lahf
lds
xchg
test
mov
or
mulb
mov
cwtl
cmp
xchg
mov
push
mov
pop
push
sbb
sub
lock
adc
push
mov
xchg
lcall
xor
lea
adc
dec
inc
mov
aad
inc
sysexit
popa
sahf
dec
push
lods
jnp
int3
mov
adc
mov
sbb
bound
test
sar
shlb
mov
arpl
movsl
ficoms
clc
fsts
xchg
dec
pop
out
lahf
inc
and
loope
and
or
jno
rcll
test
push
push
repz
mov
cmpsb
xor
xlat
imul
dec
cmp
test
mov
xchg
sbb
loope
or
mov
fwait
fnstenv
add
xchg
stos
decl
fidivs
int
dec
jns
mov
xchg
enter
adc
cmpsl
rcrl
jae
sti
test
mov
mov
lea
push
dec
aam
cmp
cmc
mov
xchg
scas
out
dec
xor
jmp
insl
jo
sbb
stc
out
mov
fwait
or
mov
addr16
lods
jp
out
and
dec
jnp
pop
loop
or
in
dec
xor
cmc
cmc
fisttps
cmp
pop
in
inc
hlt
rorl
cmp
sbb
or
push
stos
sbb
arpl
inc
sub
push
sub
push
popf
mov
dec
iret
dec
out
ret
dec
pop
test
hlt
into
cmp
arpl
xor
or
xchg
or
dec
jmp
add
iret
int3
jmp
xchg
mov
enter
or
lods
mov
add
cmp
or
jmp
fwait
es
jmp
mov
cwtl
fldenv
jbe
or
mov
jl
lret
mov
push
lahf
push
xchg
xor
test
sbb
popa
imul
push
pushf
lds
xchg
aas
adc
fsubr
or
jecxz
mov
jmp
cmpsb
sub
data16
adc
cmpsl
stc
out
pushf
int
and
rcll
mov
inc
add
add
ljmp
push
adc
ja
cmp
imul
push
jg
push
or
xlat
dec
sub
imul
mov
or
lret
mov
mov
ret
loopne
std
cmp
push
lods
mov
int
cmpsb
mov
pop
mov
pop
adc
xchg
fyl2x
mov
imul
sahf
xchg
lahf
int
in
fldl
popf
iret
xor
stc
adc
xchg
adc
stos
mov
mov
inc
cmp
cmpsb
stc
cld
negl
dec
out
add
cmp
cmpsl
or
mov
into
ja
and
pop
cmp
outsl
mov
inc
add
ja
adc
xor
xor
lods
mov
pusha
mov
xor
or
mov
in
sub
or
decb
fldenv
in
loopne
push
ja
fstps
stos
fnstenv
stc
jno
repz
sbb
cmp
sub
sub
data16
add
mov
enter
sbb
test
sarb
dec
std
mov
inc
mov
repnz
lcall
jecxz
rol
lea
lret
lcall
mov
ret
adc
dec
loope
xchg
dec
push
adc
fdivrl
xor
mov
sbb
mov
inc
pop
loop
arpl
mulb
gs
scas
sbb
mov
adc
mov
icebp
push
sbb
stc
lock
lret
mov
mov
mov
scas
adc
das
push
add
mov
shrl
loop
stos
bound
insl
int3
inc
fmull
dec
cmpsl
mov
jno
popa
mov
shrd
or
mov
and
add
inc
and
mov
sbb
inc
mov
call
sub
xchg
mov
xlat
ljmp
int
cmpsl
sbb
stos
fs
add
aam
cmp
leave
jo
lgs
or
cwtl
shlb
dec
mov
scas
sbb
dec
mov
lock
inc
mov
fs
inc
loopne
bound
aas
out
cmc
mov
into
add
mov
adc
jns
mov
in
inc
push
xchg
pop
sbb
pop
in
mov
jns
dec
pop
test
decb
mov
bsf
jo
jmp
test
out
sub
cmp
sbb
mov
cmp
pushf
subl
out
lds
sub
sbb
sbb
lods
jp
jbe
and
pop
cmp
cmp
and
rcr
pusha
mov
push
jbe
pop
nop
lcall
or
push
or
negb
inc
push
jbe
cli
or
stos
popl
adc
imul
scas
int
xchg
push
in
adc
mov
xor
ret
push
leave
aad
cs
sbb
mov
push
gs
add
cmp
mov
addb
out
int3
and
pop
fisubrs
out
repz
fs
push
aaa
ret
clc
cmp
mulb
jge
ja
sbb
push
aaa
dec
dec
aad
xchg
pop
jno
fidivrs
lret
insb
dec
inc
outsl
sbb
andb
push
shrb
inc
push
or
movsb
inc
cs
dec
mov
pop
cmpsb
ja
and
mov
call
loop
xsha256
cmpsb
xchg
loope
mov
sub
in
or
outsl
and
ds
movsl
mov
test
insl
push
daa
mov
jecxz
bound
fcmovnbe
hlt
pop
loopne
jecxz
mov
mov
stos
sti
mov
push
fs
fdivrl
sub
outsb
push
inc
mov
shlb
add
fidivrs
mov
pop
mov
push
mov
enter
mov
ror
pop
and
or
sub
cld
sbb
js
test
subb
lods
jg
adc
mov
dec
stc
int3
mov
mov
sub
ss
pop
sub
popa
push
add
sbb
cmpsb
lret
stc
xor
aas
jl
mov
jl
into
pop
jo
cmc
out
daa
xor
jno
loop
inc
cmp
in
mov
add
push
dec
lods
cltd
out
mov
out
mov
imul
dec
sti
mov
mov
lds
loopne
daa
aam
clc
popf
push
adc
fldcw
push
and
jo
jne
ljmp
cmp
xlat
cltd
jb
sub
loopne
pop
loopne
pushf
inc
add
jg,pn
movsb
aad
or
cmp
inc
ret
imul
je
nop
insl
adc
mov
push
call
xorl
dec
icebp
pop
jg
scas
inc
scas
inc
inc
aad
icebp
aas
les
mov
into
test
mov
std
imulb
mov
cwtl
mov
sub
jg
push
icebp
sub
mov
lret
std
add
inc
mov
imul
das
xor
insb
sub
or
xor
ret
cmp
inc
es
in
insl
mov
decl
insb
or
test
popa
int3
lods
push
fimuls
mov
pop
jl
and
mov
pop
out
rclb
into
push
test
or
in
cmp
pop
pop
clc
dec
stos
dec
xchg
leave
xor
ljmp
cmc
pop
push
aas
imull
aaa
xchg
sub
movsb
outsl
xchg
unpcklps
or
call
test
push
mov
mov
sub
test
mov
and
pop
xchg
inc
ja
sbb
leave
mov
or
add
mov
jp
jae
test
xor
push
inc
scas
xchg
imul
out
pop
aas
mov
repz
pop
call
and
lret
in
dec
int3
lret
gs
push
insb
mov
inc
push
out
pop
mov
bound
mov
jmp
add
adc
std
imul
inc
xchg
sub
adc
mov
push
mov
push
insb
dec
ret
xchg
jnp
filds
test
mov
filds
xor
ljmp
inc
or
popf
fisttpll
mov
cmp
and
add
or
imul
push
scas
xor
cld
push
sub
adc
sahf
iret
or
ret
push
leave
dec
xchg
and
arpl
xchg
jbe
adc
or
jl
xchg
inc
fbld
fisubl
flds
jge
stc
int3
shll
adc
stc
vpunpcklqdq
loop
cmpl
fdivl
jbe
movsb
adc
out
pop
xchg
xchg
jbe
scas
idivl
pop
aam
push
fucomp
aaa
or
jno
das
iret
jl
lahf
and
mov
into
push
gs
jmp
sbb
mov
scas
pop
lds
and
cmpsb
call
push
push
cmp
inc
add
adc
cmpsb
and
jmp
cmp
test
xlat
jbe
sub
inc
imul
in
and
movsl
stos
std
mov
out
or
scas
dec
gs
cli
in
rcrl
arpl
add
cmp
in
cwtl
adc
pushf
xor
pop
dec
sbb
pushf
gs
jmp
mov
push
mov
and
sub
or
pop
and
xchg
divb
xor
fimull
pop
inc
sbb
sbb
mov
mov
jmp
dec
adc
cmpsb
pop
lahf
pop
and
ret
mov
fs
flds
repz
orb
jg
pop
jne
sbb
cld
stc
addl
adc
sbb
cmp
sbb
or
fadds
jp
out
cwtl
sub
in
sbb
icebp
or
lods
es
adc
and
jnp
sbb
add
scas
add
mov
lods
xor
mov
jmp
mov
in
add
cmp
jnp
gs
xor
hlt
dec
adc
cmpsb
lock
test
fisttpll
je
pop
xchg
lods
js
sbb
pushf
mov
xlat
fsubs
out
adc
inc
outsl
jmp
pop
sbb
loop
loop
dec
mov
mov
daa
and
sbb
or
or
and
jbe
xchg
xor
sbb
cmp
sahf
or
pop
mov
into
outsl
dec
mov
mov
pop
and
bound
jno
inc
lock
aas
arpl
sahf
mov
pop
add
roll
jge
imul
imul
cwtl
imul
mov
loopne
add
jnp
insb
push
loope
push
das
lgs
dec
lock
xlat
das
divps
mov
sbb
es
popa
sbb
and
mov
jecxz
or
call
shlb
cmp
nop
shlb
ss
push
and
test
xchg
lea
incb
fstpl
jb
clc
mov
into
xchg
or
or
shl
mov
stos
stos
inc
jle
out
lcall
push
jg
add
jae
and
or
sbb
mov
mov
mov
pop
xchg
test
cmp
fdivp
lea
lret
inc
push
jp
or
daa
ja
push
aad
push
stos
xchg
mov
push
add
dec
xor
sub
pop
jns
jl
in
xchg
or
fisubs
mov
cli
not
ja
cmp
dec
int3
test
pop
xchg
int3
mov
sub
mov
mov
mov
mov
lds
jmp
into
xor
orl
sub
adc
leave
addr16
stos
sarl
mov
and
out
insb
mov
add
roll
cld
xchg
in
push
xor
lds
mov
pop
lock
inc
adc
jp
push
cwtl
mov
mov
js
inc
stos
jne
jnp
pop
stos
ficomps
mov
imul
scas
scas
xchg
rcrb
adc
cmp
push
jnp
pop
stos
add
ret
push
js
scas
mov
popa
inc
adc
add
inc
pop
aad
ficoml
movsb
sub
adc
push
int3
lods
negl
scas
cmp
jae
scas
lds
fcmovb
std
loop
mov
cli
mov
cmp
inc
push
test
rorl
shrl
out
leave
mov
xchg
or
jno
mov
xchg
dec
and
inc
push
dec
ret
divl
mov
ja
and
cmp
test
loope
roll
imul
push
fs
daa
mov
pop
cmp
sbb
out
test
sub
jb
cmp
mov
movsl
mov
sub
mov
into
xchg
cs
int
rcrb
in
or
xor
repz
pop
cs
js
outsl
jnp
sub
mov
adc
add
cmp
inc
outsb
int3
arpl
add
shrb
mov
mov
lret
test
push
mov
mov
mov
mov
pop
push
outsb
loope
mov
sub
mov
push
or
jp
push
fs
jg
cmpsb
xor
cmp
push
mov
cmp
addb
sbb
imul
lret
shl
mov
xor
push
das
cmp
ret
or
pusha
pop
mov
and
arpl
je
popf
xor
adc
loop
rcl
imul
jae
add
cltd
cwtl
mov
lods
addr16
mov
lret
fs
mov
idiv
in
insb
inc
sbb
fsubl
into
dec
loopne
test
pop
ss
adc
mov
fstps
sub
in
repz
icebp
adcl
xlat
stos
jo
pop
push
cmp
das
mov
or
jno
popf
pop
adc
xchg
mov
cs
adc
aad
sar
nop
ret
jge
dec
sbb
jmp
mov
je
xor
xchg
jno
lea
push
sbb
mov
push
dec
mov
xchg
inc
mov
mov
pop
jb
jbe
mov
in
rcl
push
cmp
std
movsb
and
cwtl
es
mov
out
aad
movsl
into
icebp
fisubrl
dec
lret
fcmovne
dec
mov
push
jmp
inc
or
lock
and
out
adc
xchg
clc
inc
sub
sbb
es
add
addl
mov
sarl
cli
cli
sub
loope
mov
xor
popf
inc
pop
ficomps
mov
xchg
cmpsl
test
jno
mov
bound
fldl
or
lds
xchg
inc
push
xor
imul
sarl
add
stos
xor
cmp
push
pop
test
xchg
push
inc
decb
std
jns
xor
test
xchg
fdivrp
test
arpl
sbb
mov
or
pop
push
fwait
addb
push
dec
ror
ds
daa
add
dec
sub
xor
sub
jns
imul
or
xchg
mov
mov
ja
jnp
dec
inc
fbstp
and
jb
dec
xchg
sbb
mov
inc
push
out
bound
and
sarl
sti
sbbl
je
lcall
cmp
or
jbe
adc
pop
lds
loopne
imull
inc
jnp
outsb
bound
xor
add
mov
ffreep
sbb
pop
xor
mov
clc
fwait
push
push
das
cld
popf
sub
rclb
pop
stos
call
pop
lahf
sbb
cmp
imul
sahf
push
mov
push
mov
ret
inc
leave
cmp
xchg
hlt
cli
cmp
arpl
push
fisttpll
dec
fcmove
add
push
int3
xchg
sahf
mov
ficoms
testb
call
aas
mov
dec
ret
sbb
in
cmp
pushf
mov
jge
xlat
nop
sbb
xor
pop
push
jb
cmp
jl
les
push
pop
push
sub
das
xor
adc
jbe
and
xor
push
lods
cmp
cmpsb
add
je
dec
sub
daa
mov
sub
test
pop
loope
mov
sub
jl
fwait
xor
sbb
and
cwtl
lahf
in
in
push
mov
push
xchg
pop
into
xor
daa
ljmp
aad
pop
addr16
popf
push
mov
push
imul
sub
rorl
outsb
das
popa
cltd
adc
inc
inc
out
add
lods
adcb
ljmp
sbb
and
dec
adc
mov
adc
sub
dec
sbb
lcall
in
mov
push
sbb
mov
adc
sbb
lock
cli
stc
icebp
pop
jne
sub
mov
sub
stos
ss
jmp
jnp
xchg
in
notl
in
mov
mov
or
into
add
cmc
cmp
lret
iret
mov
lea
imul
xor
add
mov
lods
dec
lods
pop
mov
xor
mov
xlat
cmp
pop
fucomi
xchg
fidivrl
repnz
shl
pop
push
ret
mov
imul
and
nop
loope
xor
pop
cmp
ss
xlat
push
mov
sub
xchg
pushf
dec
dec
and
test
cs
jbe
fmull
sahf
xor
dec
jns
mov
dec
jbe
and
mov
sub
cltd
and
call
pushf
jne
pop
and
xorl
add
int
inc
inc
cld
cmovo
jb
aas
mov
popf
sbb
outsl
stc
not
lahf
leave
inc
divb
sub
cwtl
loope
pop
mov
xchg
lods
mov
adc
mov
sahf
cld
movsl
xchg
loop
dec
push
fmuls
or
inc
fisubrs
int
pop
mov
lods
std
in
xchg
insl
or
out
sub
ret
insl
push
dec
and
inc
add
popa
adc
fwait
lods
xchg
and
mov
les
and
jno
lret
outsb
and
or
inc
test
mov
ss
test
push
add
ljmp
mov
push
movsl
std
stos
and
pusha
fwait
mov
push
xor
imul
and
and
inc
xor
mov
inc
push
test
xchg
movsl
xchg
pop
aaa
sbb
in
inc
cmp
int3
or
pop
xlat
fwait
mov
xchg
icebp
out
jne
lds
or
xor
jns
stc
sub
icebp
aaa
test
cmpsb
in
mov
jo
icebp
ja
inc
ljmp
xlat
mov
push
fsubr
mov
insb
and
mov
jne
sub
mov
loopne
out
movsb
stos
inc
jmp
fucomi
lret
xchg
fs
leave
subl
cmp
push
adc
addr16
jo
out
mov
cwtl
insb
call
pop
jle
bound
pusha
clc
pop
stc
stos
or
insb
xlat
fwait
inc
sub
or
mov
insb
popf
push
and
mov
not
je
pop
fdivrs
sahf
mov
imul
sub
add
jne
or
iret
sub
push
leave
mov
lock
inc
push
mov
mov
jb
fwait
push
pop
ret
jl
jae
inc
pop
enter
cmp
aaa
fidivrs
cmp
cmp
mov
pop
sbb
push
inc
pop
lds
aas
jmp
pop
push
sbb
cmp
or
popf
stc
push
jl
adc
dec
add
ret
xor
outsl
pop
mov
lock
test
ja
addl
or
in
pop
movsb
test
daa
mov
sarl
sahf
aam
sbb
dec
sub
dec
ljmp
test
and
cmp
push
jae
scas
sbb
roll
stc
mov
pop
inc
mov
in
insb
pop
jl
cmp
iret
push
pop
cmpsb
dec
and
inc
scas
push
rcl
fsubrl
lds
sub
xchg
push
outsb
xchg
push
lock
and
sbb
das
in
mov
decl
and
addl
jmp
insb
sub
push
lcall
sub
aas
rcrl
mov
fnstcw
dec
popf
mov
dec
jmp
test
mov
pop
adc
out
ss
add
imul
add
adc
mov
ljmp
push
push
into
out
xor
int
es
outsl
adc
sti
loop
das
xchg
imul
inc
aam
repnz
push
data16
hlt
mov
xor
or
mov
pop
outsb
icebp
mov
inc
or
sti
jbe
mov
xchg
hlt
gs
mov
pop
je
pop
adc
mov
les
adc
addr16
imul
ret
sbb
dec
push
aam
xchg
inc
dec
sub
mov
pushf
repz
sub
sub
and
xchg
fdivs
imul
inc
data16
jmp
pushf
inc
je
jp
add
stos
inc
sbb
sbb
or
jmp
add
sbb
xor
aam
or
mov
inc
inc
push
fidivrs
inc
xlat
pop
jb
clc
cmp
cli
jb
shr
push
push
divb
dec
mov
mov
shl
dec
pop
icebp
mov
ljmp
jns
mov
cmp
lock
mov
mov
movsb
jmp
aam
adc
ret
jne
sbb
inc
hlt
lea
mov
dec
and
imul
call
shrl
pop
or
out
imul
sbb
out
rcr
popl
cmc
negb
adc
mov
push
inc
dec
xchg
fisttpll
inc
test
push
xor
pop
sbb
stos
mov
out
ret
xchg
adc
xor
seto
add
fs
xor
push
mov
dec
insl
icebp
xchg
mov
xchg
push
sbb
add
or
cmp
push
xchg
adc
add
mov
xor
jle,pn
jl
add
mov
negb
mov
sub
add
jne
mov
mov
scas
lret
mov
jne
cmp
jne
mov
mov
xchg
sbb
subl
jle
addr16
das
jmp
cmpl
insl
out
lret
ja
test
in
cld
adc
cmpl
stos
and
xchg
pop
insb
clc
pushf
fnstcw
or
xchg
in
jne
pusha
xchg
dec
xchg
filds
inc
scas
xchg
jno
jecxz
mov
in
shlb
jecxz
fdivrs
push
mov
xor
cs
xchg
popa
xor
sbb
mov
imulb
inc
ds
adc
jmp
mov
cwtl
int
leave
sub
hlt
nop
xor
arpl
test
push
and
push
incb
add
xadd
insl
push
cmp
pop
roll
dec
out
ss
repz
cmp
test
mov
jbe
lods
push
jge
loopne
sbb
shll
or
leave
jno
fisubl
jl
cmp
dec
jno
pop
push
icebp
sti
jecxz
cmp
jo
adc
and
sbbb
inc
xchg
cmpsb
push
cmp
inc
ror
pop
push
icebp
daa
mov
sarl
push
filds
sub
repz
call
scas
movsl
or
lahf
sub
fstpl
xchg
aam
add
daa
icebp
xor
pop
mov
test
push
pop
mov
pop
cld
pop
in
subl
pop
je
shll
cld
outsb
cmc
aaa
cltd
adc
std
loope
mov
enter
mov
aas
and
incl
mov
mov
push
fwait
mov
add
mov
scas
sbb
pop
aam
pushl
test
idivb
jg
mov
adc
pop
stc
fs
lods
loope
lret
ss
mov
cmp
or
jmp
aam
jg
mov
push
sbb
lods
icebp
and
leave
jnp
cmc
leave
and
xor
or
sub
imul
add
sbb
mul
xchg
mov
cli
cmp
cmp
lods
cmpsb
lock
and
xor
gs
cmpsb
xchg
pop
xchg
out
lret
adc
fnstcw
cwtl
inc
repz
add
or
or
sub
shl
sahf
pushf
inc
jmp
movsl
out
outsb
ffreep
aad
imul
push
fistpl
dec
aaa
xchg
int
and
icebp
dec
orb
ss
dec
jecxz
out
or
lahf
fisttpll
loope
mov
and
out
sbb
or
scas
dec
arpl
cltd
pop
scas
mov
inc
pop
dec
sti
aas
fildll
jb
mov
mov
test
sarl
dec
nop
std
cltd
xor
push
in
jno
ds
dec
icebp
pop
sbb
lret
sub
xlat
mov
out
lock
insl
das
mov
mov
fwait
jge
aam
ret
add
outsl
es
ss
xlat
dec
sbb
loope
mov
aas
mov
lods
push
arpl
dec
rcl
cmpsl
push
lcall
lds
test
in
cmovno
or
clc
jbe
jb
add
std
ljmp
push
pop
test
mov
data16
xchg
pop
lret
cmp
xchg
xor
add
dec
or
repz
mov
dec
xchg
or
enter
inc
xchg
pop
ficomps
xchg
rorb
mov
xor
aaa
sub
shrl
add
jmp
fdivrs
pop
jmp
xchg
icebp
add
arpl
add
test
xlat
dec
sbb
mov
aas
mov
in
sbb
mov
into
mov
push
test
bound
push
adc
lcall
xchg
pusha
out
mov
sub
cld
push
xor
jp
xchg
andl
arpl
gs
cltd
nop
in
pop
push
pusha
cs
stos
fbld
fsubrl
inc
sti
add
inc
inc
sbb
jecxz
in
fwait
stos
xchg
popf
mov
pop
push
push
je
adc
xchg
mov
mov
imul
pop
scas
pop
mov
push
mov
jg
out
jne
stos
jmp
leave
lahf
jl
hlt
fldt
mov
and
or
jecxz
sub
mov
filds
jo
js
pop
mov
pop
sti
iret
rcr
call
shrb
mov
inc
and
cmp
fisubs
loopne
in
xorb
push
jge
cmp
mov
cmp
les
push
or
gs
jno
fbld
dec
loopne
sbb
xor
and
imul
push
in
push
or
jno
cmpsb
mov
pop
in
sub
out
sbb
or
mov
dec
cmp
dec
loope
sub
sahf
jo
cmp
xor
movsl
int
enter
fstpl
sbb
enter
movsb
test
jg
imul
lret
js
sbb
and
test
push
outsb
add
fdivrl
mov
mulb
outsb
pop
adc
adc
fmuls
push
pushf
dec
adcb
mov
lret
data16
ret
int
rorb
clc
pop
pop
sbb
sub
mov
jl
daa
cmp
or
cltd
adc
mov
idiv
xorb
icebp
cmp
les
sbb
fdivrl
ret
cmpsb
inc
notl
and
xor
jbe
cmp
jg
or
std
cmc
nop
sbb
xor
add
outsl
ror
je
pop
pop
stc
imul
inc
lretw
lods
add
mov
sub
xchg
jnp
cli
insl
cld
push
mov
mov
sti
aam
sbb
inc
mov
into
loopne
mov
or
lock
cmc
shrl
inc
outsl
jl
dec
or
sbb
ret
dec
adc
adc
sti
loope
adc
pushf
dec
add
jmp
loope
shll
adcb
cmc
mov
dec
je
lret
jecxz
mov
mov
add
mov
jno
pop
cmp
in
cmpl
mov
xchg
xor
pop
push
fisubl
inc
fdivrs
clc
inc
ja
lahf
aas
jle
or
jo
xor
and
bound
idivb
imul
adc
mov
mov
lods
icebp
ss
jg
es
lret
xchg
test
mov
clc
into
lock
loopne
fistpll
arpl
repnz
mov
xchg
add
es
xor
dec
dec
sbb
cmpsl
mov
jmp
popa
push
out
lods
rcr
adc
pusha
insb
movsbl
xor
mov
pop
cli
inc
rolb
arpl
mov
mov
movsl
fstp
aaa
lret
clc
mov
xor
aaa
pop
stos
rcrl
jg
stos
in
mov
out
mov
pop
xchg
mov
or
cmovle
lcall
lret
stos
xor
jno
mov
ret
jbe
dec
add
test
mov
leave
sbb
and
sahf
or
fwait
jae,pt
push
fidivl
sub
pop
adc
js
gs
jns
sbb
xchg
pop
notl
sub
in
pop
mov
mov
dec
push
int3
mov
lret
shll
mov
jne
jl
mov
xor
out
inc
lock
bound
add
adcl
out
mov
or
push
push
adc
xchg
cmp
add
into
sbb
jle
mov
lods
pusha
leave
pop
call
xchg
pop
repnz
pop
adc
inc
dec
lcall
pop
adc
mov
mov
mov
setns
imul
push
scas
sbbb
mov
iret
inc
test
add
push
xor
hlt
es
arpl
mov
or
pop
pop
adc
add
xchg
xchg
fiaddl
pop
jmp
mov
fisubs
xchg
sbb
test
mov
cltd
add
movsb
push
repnz
ficoms
jbe
jecxz
jge
jp
sbb
repnz
subl
and
push
jl
cld
dec
dec
pop
dec
push
mov
xchg
cmpb
and
in
xlat
push
fsubs
inc
pop
fs
or
fsubrp
adc
pop
enter
daa
mov
sbb
loope
in
insb
sub
ret
cmp
je
mov
in
daa
and
dec
sub
in
imull
add
jg
xor
push
add
jle,pn
pop
icebp
rorl
dec
ss
arpl
push
vsqrtsd
sub
imul
mov
dec
adc
mov
ret
jge
call
mov
and
rolb
vpshufhw
rorl
mov
pop
cltd
cmpl
mov
cltd
jne
push
ffree
sahf
stos
adc
test
in
jg
pop
pushf
mov
jo
stc
int
mov
adc
dec
ss
cli
hlt
cmp
jle
shl
dec
xor
xchg
xor
cmpsl
pop
cmp
add
mov
pop
pop
cmc
push
ja
xor
in
outsl
mov
push
loop
ret
shrl
or
jo
add
insl
xchg
lods
ljmp
out
icebp
cli
mov
dec
sub
pop
and
addr16
sti
gs
loopne
lret
jge
shrl
adc
add
fldcw
xchg
repz
pop
sbb
sub
xlat
push
mov
adc
aas
pop
jmp
loope
cs
inc
aad
sbb
nop
or
jo
cmc
pop
sub
lcall
int3
ret
or
fadd
and
movsl
imul
cwtl
ja
pop
out
jo
adc
insl
stos
fcmovnb
test
hlt
sbb
xchg
jbe
aas
sbb
inc
insl
mov
fwait
xlat
pusha
rcr
xchg
outsb
idivb
pushf
std
out
jb
int
stos
mov
pop
inc
mov
sbb
cld
push
jb
lret
push
sbb
repz
outsb
outsb
lock
xlat
mov
mov
ss
and
adc
add
pop
dec
adc
arpl
insl
cmp
lods
sbb
push
mov
mov
fnstsw
scas
rclb
mov
lcall
mov
jle
push
nop
stos
fldl
movsl
or
in
mov
xorb
shl
ret
pusha
pop
ljmp
stos
fsubl
loope
ljmp
shrd
jb
insl
push
popa
or
xorl
cmp
push
push
dec
jmp
and
sbb
popl
inc
cwtl
ja
or
mov
xchg
jge
in
add
jns
sub
in
stos
xor
movsb
ret
push
xchg
repz
mov
lahf
lea
pop
jnp
ja
mov
mov
push
idivb
stc
into
dec
add
outsl
mov
push
shr
and
shr
cmpsb
and
mov
out
jno
sub
bnd
adc
mov
jg
insb
cmp
cmpsb
jle
lahf
and
stc
push
loopne
fs
xchg
ljmp
inc
push
outsl
scas
jae
imul
out
arpl
push
repnz
xchg
add
dec
sub
enter
cmp
sbb
sbb
js
mov
ret
or
lea
xor
ret
daa
jne
or
fld
xchg
int3
aam
dec
jp
add
dec
jb
pop
js
fiadds
pusha
lds
lods
add
in
adc
movsb
loopne
rcll
lods
jbe
lods
jge
pushf
or
sub
xchg
aaa
inc
movsl
dec
or
ret
jnp
stc
push
nop
jl
pushf
sbb
rcl
push
lcall
jo
lods
xchg
scas
cmp
mov
test
mov
lcall
imull
enter
daa
mov
cmp
cmpsl
xlat
std
loope
aam
sub
out
cmp
sub
loop,pt
mov
and
jns
mov
stos
sbb
arpl
add
test
xor
icebp
cmc
imul
loope
mov
adc
mov
push
sbb
out
aaa
push
sub
dec
fldcw
mov
dec
rorb
outsb
ja
jbe
stos
mov
mov
in
and
in
sbb
loopne
cwtl
sti
cmp
sbb
scas
shl
and
inc
mov
movsb
sbbl
mov
mov
fs
xchg
adc
loope
cmp
cmp
notl
push
sbb
iret
std
jp
adc
or
addr16
jb
pop
cmc
push
cmp
xchg
fmull
nop
pusha
out
sbbb
mov
rcl
add
lret
andb
lods
rorl
ja
jmp
cli
rcrl
mov
out
jns
sti
xor
decb
sub
loopne
jl
pop
lock
das
adc
inc
fldenv
les
repz
xchg
cmp
lcall
loope
lcall
dec
fucomi
das
movsl
pop
cs
ds
aad
xchg
in
orl
add
mov
mov
pop
adc
jecxz
adc
test
dec
lea
fsubr
call
pop
add
mov
lret
and
push
lock
add
xchg
push
cmpsb
inc
out
push
inc
lods
test
movsb
jb
outsb
mov
sar
shll
mov
jmp
ret
std
mov
cwtl
mov
popf
mov
xchg
arpl
in
pop
cld
jl
inc
lret
jne
test
lock
enter
dec
das
sub
sub
div
ret
mov
and
push
inc
push
insl
jmp
insb
dec
push
push
inc
cmpsl
scas
out
mov
test
xor
jae
pop
and
js
xchg
pop
cwtl
rolb
rcrl
test
jle
mov
adcl
sub
cwtl
clc
daa
sbb
mov
inc
sub
mov
dec
mov
or
out
add
dec
call
mov
leave
movsb
cmpsl
dec
push
cmp
push
xchg
jge
scas
jl
inc
das
jne
or
call
mov
and
xor
xchg
icebp
lret
incl
jno
jns
imul
xchg
fisubs
sti
mov
mov
push
pop
pop
ret
jno
addr16
hlt
mov
mov
jbe
mov
xor
mov
ljmp
mov
xchg
lret
jmp
pop
and
xorl
out
xchg
repz
in
adc
psubd
in
and
and
jno
movsb
mov
jnp
jl
jle
nop
push
in
bound
pusha
mov
ja
mov
int
inc
bound
sahf
push
in
popf
adc
leave
adcl
arpl
mov
cmpsb
add
cmpsl
xor
push
arpl
adc
add
ret
enter
jg
mov
mov
inc
sub
push
or
push
mov
jl
sti
adc
xor
in
out
mov
mov
call
imul
mov
aas
push
cmpb
inc
cld
movsb
imul
jbe
jmp
imul
or
aaa
add
jge
adc
test
adc
jmp
push
jge
fwait
xor
ss
scas
pop
int3
xchg
and
cli
push
test
outsb
adc
inc
jns
xor
ficomps
daa
scas
in
cmp
out
loope
fbld
sub
loopne
cmp
jecxz
movsl
loop
push
and
aad
lahf
cmpsl
adc
push
xchg
fwait
sti
sbb
sub
xor
mov
fcomps
je
js
pop
cmp
loope
xor
sahf
jle
jae
aas
fdivrl
sbb
ret
loopne
outsb
adcl
shrb
jae
cmp
orb
test
jecxz
push
lret
cwtl
and
xorl
adc
mov
xchg
pop
sub
sarl
mov
in
sub
mov
rcrb
sub
andb
and
daa
int3
mov
loopne
stc
cmp
outsb
xlat
out
push
rorl
ss
cmp
cmp
hlt
pushf
not
add
cwtl
xor
incl
into
push
adc
xor
out
outsl
outsl
xor
adc
outsb
imul
xchg
add
lods
stos
lods
mov
in
out
imul
cmc
iret
sub
pop
push
xchg
lods
and
gs
stos
loopne
inc
sub
ja
adc
inc
sbb
addr16
sub
mov
adc
test
popf
adc
shlb
xlat
adc
xor
sub
adc
pop
xchg
nop
rcrb
dec
mov
aaa
inc
outsb
push
or
inc
fiadds
mov
jecxz
cmpsb
mov
stos
lds
jge
ja
adc
xchg
adc
addl
stos
inc
fistpl
jns
pop
cmp
inc
insl
std
pop
inc
enter
pop
cli
and
int
mov
mov
mov
jns
fdiv
add
mov
cld
mov
push
cltd
mov
cmp
mov
pop
fcmovne
in
cwtl
mov
fbstp
jecxz
and
mov
ja
mov
ret
inc
mov
cld
aad
shrb
dec
or
or
fwait
push
enter
int3
mov
xchg
adc
push
adc
stos
sar
movsb
mov
test
icebp
mov
int3
test
orl
sub
clc
bound
xchg
add
imul
nop
lret
insb
rcrl
int
stos
mov
imul
js
das
push
push
jmp
int3
add
orl
xchg
lds
int3
imul
test
loop
xchg
add
sbb
imul
stos
or
out
fwait
lret
into
lret
or
out
mov
outsb
jmp
jge
xor
je
pop
shlb
in
sti
xchg
xchg
sub
push
and
decl
pop
rcrb
dec
out
push
mov
add
push
jecxz
mov
cmp
jne
push
imul
pop
add
pop
xchg
es
addl
out
and
sub
call
cmp
jp
mov
push
jg
arpl
jne
in
xlat
scas
pusha
lcall
xchg
nop
push
fistpl
ljmp
pop
fnstcw
push
cmpsl
xor
xchg
push
inc
push
jo
lods
stos
or
ds
pop
imul
mov
adc
cmp
hlt
scas
ret
outsl
leave
jnp
outsl
hlt
pop
loopne
arpl
xlat
inc
sub
mov
push
push
jmp
and
int3
mov
int
mov
aaa
fimuls
push
rcl
and
xchg
shlb
cmp
aad
movsb
testb
sbb
jbe
fwait
les
mov
mov
and
jno
pop
xchg
jl
pop
repnz
pushf
adc
xor
xchg
int
scas
negb
enter
in
cmp
pop
cmpsb
xchg
jecxz
in
lds
imul
or
push
enter
or
inc
rclb
sub
std
and
ljmp
mov
scas
add
stc
or
xor
dec
ja
sahf
pop
sbb
js
shl
pop
and
push
lret
fsubrl
imul
in
inc
adc
inc
lret
lcall
mov
jnp
mov
dec
add
push
into
pop
pop
int
sbb
scas
pop
push
mov
lcall
jecxz
pop
sbb
pop
jge
xchg
pop
mov
cmpb
jg
xchg
ret
addr16
stc
repnz
adc
xor
cmp
scas
rcl
daa
cmp
pusha
popa
out
xor
push
cmp
jl
or
mov
lods
in
xor
cmp
dec
add
loop
sub
imul
cmpsb
pop
data16
stc
pop
lods
lahf
cmp
xor
lea
cli
cmp
xlat
in
les
jb
nop
dec
dec
rolb
stos
loopne
sbb
mov
push
mov
les
add
xchg
xchg
mov
jae
shrb
cmp
jne
sub
jnp
adc
and
jmp
jns
cs
xchg
cmp
int
int3
nop
fwait
pop
out
dec
adc
cwtl
dec
mov
insb
je
movsb
jl
add
mov
push
call
adc
dec
push
adcl
sbb
pop
fstpl
push
inc
jecxz
ss
cli
cmpsb
test
mov
sbb
and
xor
testb
std
fcompl
sbb
incb
js
lahf
xchg
rorl
xchg
repnz
rorb
lret
push
jle
mov
sbb
mov
pop
mov
outsb
repz
push
loope
ret
iret
in
mov
insl
mov
xchg
pop
cmpsl
lods
sub
mov
mov
iret
lods
jg
add
sbb
idivl
insl
fsubrs
pop
xchg
pop
ror
fisubs
test
shll
sbb
fnstsw
pop
clc
popf
add
xchg
aas
jle
ljmp
jo
add
in
stos
test
unpcklps
xor
sub
or
sahf
sbb
test
mov
add
push
hlt
out
sbb
fsubrl
push
mov
push
data16
add
lret
inc
push
xor
fisubs
xchg
jl
xorb
jecxz
pop
lea
or
sub
dec
fidivl
mov
mov
mov
xrstor
stos
jp
jne
cmovo
mov
mov
lcall
addr16
out
sub
sub
jecxz
gs
add
and
or
call
dec
dec
in
mov
pusha
xor
sbb
xchg
arpl
adc
stos
jne
js
mov
push
push
sbb
int3
testl
xchg
imul
sbb
push
inc
imul
xchg
push
icebp
int
adc
test
shrl
or
stos
hlt
push
cmpsl
arpl
fldt
cwtl
int
push
aad
cmp
add
xchg
int3
out
movsl
rcrb
xor
lds
shlb
shl
mov
in
lret
cmp
ss
jo
sub
push
jge,pn
pop
xchg
sbb
aaa
jg
jmp
jno
adc
jl
jne
dec
or
repnz
inc
sub
jo
sti
or
and
xchg
jbe
jmp
push
repnz
xchg
push
cmpsb
sbb
xchg
in
lods
mov
outsl
daa
lods
stos
cmpsb
cmp
lahf
loope
popa
mov
dec
cli
ds
sbb
lock
mov
lahf
in
scas
push
cmp
dec
sbb
mov
add
pop
stos
xor
jns
cmp
mov
xlat
sti
pop
pop
imul
push
and
aas
or
mov
pushf
adc
pop
fwait
mov
subb
or
add
xor
int
scas
lods
sub
push
pop
pop
xchg
aas
mov
shrl
push
sbb
adc
test
xchg
loop
push
adc
cmp
test
rcll
cmp
fisttpl
cmp
push
scas
testl
dec
xor
cmp
int
or
cmp
sbb
adc
mov
fmull
loop
bound
xchg
xor
out
inc
add
stc
jle
pop
mov
and
mov
mov
mov
das
shl
aas
cli
lret
repz
adc
mov
sbb
rcrl
dec
dec
xor
or
jmp
repz
pop
add
imull
ljmp
sub
in
adc
or
pushf
mov
mov
shlb
aad
daa
jle
jbe
movsl
dec
jno
je
xchg
push
aam
cs
je
in
lret
jecxz
fwait
iret
mov
loope
dec
dec
cmp
xchg
mov
fildl
in
clc
fstpt
dec
pop
subb
inc
mov
sub
sub
mov
cmc
pop
rcll
pushf
mov
mov
mov
pop
cld
mov
lret
fs
imul
int3
mov
sbb
cltd
fimull
lds
mov
sub
inc
aam
shll
pop
xchg
adc
fcmovb
int
mov
adc
cmpsl
lods
aaa
mov
leave
clc
stos
lods
ljmp
mov
je
jne
dec
or
pop
cmc
xchg
shlb
test
test
pop
mov
sub
pushf
sub
frstor
push
push
xchg
jle
xor
rorl
pop
stos
jp
stos
cwtl
adc
js
mov
push
or
movb
inc
sbb
sub
fnstenv
cld
sub
rorb
dec
test
test
icebp
addr16
imul
enter
hlt
inc
cmp
pop
jno
sub
xor
in
jl
pusha
pop
pop
xor
js
test
and
lret
inc
es
fcoms
dec
push
mov
dec
int
fnsave
test
lea
lea
cmp
out
pushf
or
xorl
sbbb
andl
movsl
out
cmpsl
cmp
fiadds
inc
addr16
cmpb
shll
scas
pop
push
insb
in
push
jnp
pop
sbb
sbb
in
in
hlt
pusha
shl
xchg
int3
add
and
adc
jae
pop
sbb
sub
in
mov
out
daa
mov
xchg
ret
sbb
or
je
inc
scas
jno
sahf
push
cmp
fmulp
and
mov
leave
imul
arpl
jno
dec
push
push
push
aaa
ficoml
cmc
add
std
cmc
int3
fcmovb
cmpsl
pop
adc
mov
lds
sbb
repnz
cmp
popa
movsb
or
loop
mov
pop
lret
jge
sbb
inc
mov
or
out
mov
jl
gs
jp
dec
push
es
xor
inc
ds
mov
dec
and
scas
push
push
iret
insb
roll
sbb
loope
xchg
jnp
enter
daa
lods
aam
cmp
adc
aam
fldt
mov
and
mov
xchg
dec
mov
add
xor
xchg
lods
sbb
roll
cltd
insb
xor
imul
pop
repnz
mov
js
jno
pop
sahf
mov
rclb
out
lret
faddl
cmp
out
adc
cli
jg
pop
inc
roll
out
sti
mov
or
les
aam
test
mov
icebp
cmp
adc
xchg
lcall
rorb
mov
sahf
xlat
test
mov
xorb
jg
jbe
mov
bswap
stc
pusha
gs
lods
adc
push
mov
cmp
and
testl
cmp
repnz
into
inc
mov
cmp
int
incb
mov
int3
lret
add
adc
mov
push
data16
into
lods
insl
std
inc
mov
fsub
mov
cmp
xchg
cmp
in
lcall
push
push
mov
xchg
pop
loopne
push
gs
insb
pop
adc
popa
cmp
aas
and
repz
js
push
popa
cmpsb
sbb
and
movsl
fildll
lods
add
adc
fistpl
pop
jmp
aad
and
nop
push
sbb
dec
shlb
out
dec
movsl
push
ss
mov
and
mov
mov
mov
call
adc
outsb
mov
add
cmp
sbbb
mov
inc
sbb
or
cmp
jb
and
scas
iret
or
unpckhps
dec
enter
jnp
sub
cwtl
je
test
jecxz
pop
icebp
inc
lods
jle
sub
int
xor
push
mov
xchg
aaa
lock
es
das
movsb
decl
push
testb
mov
inc
ret
in
jns
es
fcoms
xchg
cwtl
cmpsl
stos
jp
mov
loopne
int3
lods
push
scas
btc
fstpt
jnp
loop
in
dec
pop
adc
mov
cltd
lods
or
imul
mov
ds
pop
lods
jmp
clc
adc
je
mov
lret
push
shll
lods
stos
xchg
scas
out
in
xchg
dec
mov
push
call
ret
pop
add
jle
or
lods
popf
mov
aad
mov
in
aam
test
push
inc
xchg
mov
inc
mov
jae
sub
movsl
fwait
pop
push
pop
push
lods
ja
add
add
xor
push
pop
vmwrite
push
in
lret
sbb
mov
enter
mov
shlb
jge
dec
sar
mov
jge
mov
in
movsb
rorb
fimull
jne
mov
mov
in
in
out
jnp
or
je
jmp
xchg
xor
sbb
fwait
mov
or
aas
jp
mov
and
xor
jnp
sub
sub
in
mov
imul
sti
adcb
pop
sbb
mov
push
lock
sbb
mov
inc
mov
sub
xor
xchg
sbb
negb
aad
imul
scas
aam
out
push
jg
adc
arpl
ret
scas
leave
loopne
ret
hlt
call
and
inc
ss
or
inc
outsl
in
inc
shll
fcmovb
adcb
daa
int3
lds
test
je
push
lds
mov
mov
mov
or
movsb
xchg
fwait
dec
push
push
mov
lret
movsl
fcompl
rolb
add
stc
jno
icebp
in
jl
sub
jmp
adcl
jo
jp
mov
das
or
sbb
cli
push
lcall
cmpsb
push
in
mov
jp
inc
enter
daa
stos
and
loope
jae
sub
push
enter
std
ds
and
movsl
in
xchg
and
pushf
dec
lahf
and
xlat
push
ficoms
sbb
push
add
add
mov
sbb
pop
fldt
js
lahf
and
push
hlt
add
xchg
dec
fsubrl
imul
outsb
or
and
mov
and
pop
insl
repnz
in
and
xchg
stos
push
xlat
dec
ror
pop
jle
sub
and
pop
xchg
ss
iret
mov
les
jge
jp
inc
cmp
orb
pop
mov
xor
pop
or
fs
ss
sub
cmp
loopne
lret
movsb
out
lret
fbstp
add
xchg
cmp
jmp
or
ljmp
pop
ffree
outsl
jmp
mov
pop
imul
in
cmpsb
dec
add
insb
xlat
pop
lcall
push
popf
out
mov
cli
rclb
in
add
popf
stos
cmp
gs
call
pop
mov
lock
test
sub
repz
xchg
sarl
idivl
pusha
jb
xlat
int3
add
adc
inc
jae
testb
jmp
hlt
xchg
xchg
aad
test
nop
sub
mov
and
inc
mov
jl
je
jns
jecxz
lahf
gs
mov
clc
lea
adc
call
xchg
jb
pop
and
sbbl
fcmovnu
xchg
stos
pop
test
ret
aad
aas
xlat
push
lret
mov
fnstsw
mov
ljmp
xchg
mov
je
mov
in
icebp
pop
mov
iret
lret
mov
shll
lock
xchg
das
and
mov
push
sbb
mov
es
jnp
outsb
int3
outsl
dec
cmc
into
daa
cmpsl
stos
jmp
sub
lods
shl
mov
and
and
mov
xor
rolb
sbb
jbe
mov
xchg
out
out
clc
dec
scas
xor
ljmp
sub
add
stos
jbe
ja
ds
xchg
xchg
lods
test
ret
jl
movntq
out
pusha
add
out
mov
xor
mov
mov
fadds
out
test
push
loopne
shl
sbb
inc
and
pop
fwait
xchg
add
sbb
lcall
xchg
hlt
jns
fsubr
in
or
fidivs
fwait
cld
fcompl
iret
add
insl
push
dec
mov
movsb
mov
cltd
or
ja
mov
dec
push
clc
inc
jne
xchg
push
xchg
out
pop
leave
clc
bound
sub
xchg
push
leave
cli
addl
out
cli
jp
enter
aam
mov
jp
push
pop
and
daa
aaa
insb
mov
rorb
sbb
and
sbb
repz
xchg
movl
push
mov
cltd
popf
fdivr
cmpb
in
stos
lcall
jae
imul
scas
aaa
mov
sbb
lcall
ret
ror
push
or
arpl
push
sub
int
jo
mov
push
or
add
iret
cwtl
int3
mov
sbbl
adcb
pop
std
rolb
mov
fidivrs
dec
movsb
and
fnstenv
call
loop
lea
aaa
mov
mov
jecxz
jmp
lds
in
sbb
daa
jo
movsb
scas
jb
pushf
and
adc
push
mov
in
mov
flds
daa
stos
mov
cmp
les
xor
sub
sub
cmp
push
aaa
ds
jl
add
decl
inc
push
lea
inc
into
sbb
mov
xor
orl
add
lcall
mov
push
es
mov
mov
dec
outsb
jo
loope
cmp
shlb
inc
add
aad
popa
mov
adc
and
scas
test
int
mov
pop
pop
adc
lcall
push
mov
sahf
and
test
and
subb
repnz
mov
stc
into
push
lret
cs
adc
lret
out
mov
fcomps
and
sub
je
fxtract
xchg
cmp
mov
jl
les
mov
enter
mov
loope
lret
loop
cmp
imul
add
mov
lods
cmp
mov
out
out
fwait
aad
add
adc
sti
dec
xchg
in
pop
mov
loopne
inc
or
stos
jnp
adc
es
fldcw
idivl
ret
xchg
xchg
xchg
cmp
out
sub
xchg
dec
pushf
mov
push
shrb
jmp
dec
fstl
mov
orb
mov
xlat
jecxz
xchg
mov
movb
aam
adc
int3
xor
ret
in
fisttpl
inc
mov
inc
adc
inc
dec
cmpb
jbe
cmc
jb
mov
mov
push
insl
xor
push
xchg
stos
std
js
scas
cwtl
ljmp
mov
sbbb
out
cmc
cld
jle
and
inc
mov
xchg
mov
xchg
lods
lock
sti
add
ja
fildll
dec
jae
aam
movsb
xor
or
nop
arpl
insl
push
pop
aad
lock
cmpsl
test
xchg
scas
popa
push
sbbb
fadds
mov
mov
pop
mov
push
jae
rcrb
into
pop
cltd
sbb
shlb
in
add
adc
mov
inc
ljmp
push
pop
lods
xor
stos
gs
xchg
out
mov
or
push
sahf
xchg
inc
cmovbe
inc
add
xchg
ret
das
cwtl
xor
or
mov
fisttpl
aam
mov
fucomp
xchg
push
sbb
int3
dec
inc
mov
dec
dec
fwait
mov
cmp
repnz
xchg
fildll
cmp
push
pop
jns
jns
in
mov
shll
inc
and
pop
jns
stc
ja
loopne
dec
cmpsb
pop
mov
inc
fstps
sub
xor
jne
loop
mov
lret
out
cmp
or
addr16
xchg
sbb
aad
out
ror
sub
iret
daa
mov
or
jne
pop
cmp
insb
es
insb
jle
cmp
in
cld
andb
pop
fistpll
sti
pop
xchg
scas
clc
fwait
pop
leave
sbb
inc
movsb
jb
jae
xchg
mov
popf
lcall
mov
stos
or
stos
dec
cmp
lret
add
in
imul
scas
lcall
adc
popf
iret
cmp
push
into
leave
into
fisttpl
jle
das
arpl
hlt
call
or
rolb
sub
in
mov
pop
mov
jmp
add
pop
jge
mov
xor
cwtl
cmp
fbld
and
jbe
scas
jge
jg
sbb
movsl
aaa
jnp
inc
or
xor
jno
pop
jle
adc
mov
push
iret
lods
jne
xchg
data16
jge
scas
push
stc
out
and
push
test
xor
sub
dec
pop
test
daa
test
or
jl
popa
sbb
sub
xlat
sti
push
movsl
or
mov
push
roll
test
sbb
add
ds
inc
in
aaa
pop
sub
cmp
pop
data16
push
xlat
mov
jge
insl
faddl
jle
outsb
rcrl
push
rorb
dec
pusha
cmp
sbb
xor
adc
fstpl
int
fmul
sub
cmp
pop
xchg
cmp
add
mov
ljmp
mov
add
lods
jg
jmp
js
test
fs
cmpsb
adc
inc
sbb
cmp
push
and
or
pop
ret
shll
mov
xchg
cmp
pop
outsb
or
dec
test
insl
xchg
xor
rolb
test
inc
shrb
cmpsl
mov
subl
gs
adc
dec
iret
jp
mov
dec
cli
cmp
pop
mov
sti
sti
push
cmpsb
jg
fldenv
mov
loopne
or
leave
mov
cmp
in
les
and
sbb
aam
xlat
dec
dec
shrb
mov
jae
aam
dec
in
cmp
mov
and
nop
loop
fwait
dec
in
xor
loopne
pop
dec
or
sub
xor
push
mov
mov
pusha
call
nop
cmp
pop
xchg
xor
mov
ret
fstpt
mov
pop
or
clc
inc
xchg
push
call
aas
adc
dec
jl
shrl
adc
push
xor
push
in
notb
inc
loopne
movsl
sahf
lahf
mov
sahf
loopne
mov
push
cmp
lret
jle
mov
mov
sub
lock
scas
frstor
inc
insl
cwtl
aam
out
ret
lcall
insl
cmp
push
dec
jmp
pop
cmpsl
test
and
movsl
xor
popa
and
lds
xchg
ja
push
mov
mov
jno
jp
in
or
test
daa
push
test
mov
cmp
lahf
clc
les
xchg
jp
mov
shrl
lds
push
mov
add
push
jns
iret
shld
lcall
ds
push
mov
fadds
and
test
decl
xchg
jno
sbb
cmp
cmp
stos
push
xchg
ja
add
push
push
fmull
xor
imul
mov
mov
mov
xor
push
stos
fcomps
dec
cltd
pop
sub
push
mov
push
dec
sbb
xorl
jno
cmp
xor
sbb
repz
call
fistpl
cmpsb
sbb
movsb
or
pop
mov
jp
or
and
andb
ljmp
fcomp
in
leave
fbld
xchg
xchg
add
pop
add
roll
jae
xchg
push
cmp
js
movsl
or
ljmp
xchg
push
push
in
sbb
sub
scas
std
xchg
pusha
push
push
scas
cmp
push
sub
iret
pushf
idivb
leave
inc
push
xchg
hlt
leave
sub
inc
aas
xchg
fs
mov
add
mov
xchg
push
xor
int3
xchg
sarl
inc
and
ja
addr16
test
inc
cmp
mov
movsb
cmp
fsts
mov
idivb
shl
add
push
jno
lret
das
jl
outsb
jge
ss
mov
stc
xor
mov
jl
xor
cmc
and
scas
add
mov
daa
roll
lods
cmpsb
cmpsl
or
enter
daa
test
lock
or
loope
sbb
mov
ds
aad
movsl
adc
lahf
adcb
push
mov
loopne
adc
xchg
xor
add
pop
push
mov
mov
lcall
push
aam
jmp
sub
jmp
outsb
ss
fwait
adc
data16
aam
das
orb
lods
mov
and
jl
inc
and
test
push
loopne
push
loop
sub
xchg
pop
adc
and
fwait
das
mov
cs
or
mov
sbb
test
insl
les
cmp
pusha
cmp
push
adc
insb
in
sub
cmp
adc
aaa
testl
pop
xor
iret
sub
jb
or
mov
mov
push
dec
xor
cwtl
outsl
mov
loop
jp
imul
scas
add
dec
jle
or
repnz
dec
cmp
hlt
or
xchg
mov
in
inc
sbb
ret
xor
shll
adc
fstps
xor
mov
xor
pusha
ficoml
sbb
adc
xchg
xlat
mov
adc
jns
ret
movsl
jl
negl
cs
addl
nop
mov
mov
rorl
insb
cmc
je
inc
and
and
rorb
dec
filds
outsb
loope
mov
andl
cltd
sbb
scas
dec
fiaddl
sbb
test
dec
aas
mov
jb,pt
sbb
mov
jle
sahf
shll
inc
std
xabort
cwtl
pusha
loopne
mov
stc
xlat
mov
iret
cmp
popf
or
in
dec
mov
es
lock
and
das
and
mov
cmp
stos
aam
jge
ret
sub
into
imul
cmpsl
cmpsl
dec
stos
mov
cmp
ret
lods
add
mov
mov
and
push
mov
pop
nop
jns
rol
jge
cltd
mov
mov
xchg
out
pop
mov
cmp
push
imul
frstor
push
clc
decl
push
ljmp
pop
add
pop
stos
inc
xchg
jnp
addr16
xchg
imul
jno
add
pop
add
jnp
or
iret
xor
mov
mov
dec
mov
test
mov
xchg
mov
inc
out
mov
fwait
adc
lcall
inc
js
insb
xor
jnp
push
xor
lahf
jbe
add
adcl
adc
mov
out
movl
mov
cwtl
mov
test
or
jne
movsb
mov
out
testl
push
xchg
mov
mov
in
and
out
fnsave
or
and
jp
mov
insb
cld
test
addr16
imul
fbstp
stc
xchg
push
ret
aaa
cmpsl
cmpsl
inc
mov
mov
cmp
cs
push
sub
stos
xor
xchg
jne
mov
dec
inc
outsb
imul
cmpsb
scas
pusha
in
cmpsl
push
fwait
insl
jmp
sub
jo
sti
test
ret
or
mov
cwtl
add
aam
inc
inc
jecxz
or
sub
ds
iret
or
ficoml
xchg
int3
jno
push
pop
add
add
into
rclb
push
repnz
rcrl
cmp
shrl
icebp
sbb
cltd
add
jge
call
shlb
xchg
sub
test
pop
addr16
andb
xchg
jo
xchg
cmpsb
dec
xor
push
mov
scas
psrlq
test
call
pop
cmpsb
sub
dec
enter
daa
cmpsl
pop
sarb
jb
mov
inc
dec
add
jl
cmp
inc
add
movsl
sbb
xchg
sub
sbb
call
ja
int3
jo
ja
sbb
pop
fnstcw
out
mov
xlat
stos
js
cmp
subb
mov
rolb
xor
and
fidivl
mov
push
jecxz
cmp
mov
cmpsb
rolb
push
sbb
xor
pop
sbb
insl
sahf
or
aam
stc
mov
jg
hlt
jecxz
dec
ret
mov
fs
jmp
adc
arpl
insl
pop
add
in
dec
fmul
repnz
test
mov
push
cmp
sbb
into
insl
add
cmc
sbb
adc
loop
out
imul
or
imul
lods
lock
mov
push
out
jmp
mov
lods
addb
pop
sti
pop
adc
inc
int
gs
jl
movsb
xor
cmp
aas
aad
fsts
or
repz
xor
frstor
cmp
xlat
enter
in
sbb
pushf
mov
cld
jb
adc
pushf
aad
repnz
nop
cwtl
pop
pop
dec
stos
dec
dec
inc
push
lcall
dec
clc
pop
data16
addb
ret
push
add
jmp
adc
pop
in
xchg
les
addr16
xchg
ljmp
movsl
mov
mov
iret
push
jb
sbb
inc
inc
cmp
jnp
shl
mov
dec
std
insl
xchg
xor
fcom
popa
mov
jb
cld
lcall
lock
pop
sub
stos
mov
and
mov
mov
sub
dec
dec
aam
push
jmp
in
add
insl
or
dec
loope
repnz
cmpsb
int
mov
push
dec
into
lods
insb
clc
xchg
mov
scas
cmpsb
je
sahf
enter
flds
pop
scas
addb
xchg
and
cltd
rolb
mov
mov
ja
mov
inc
clc
cmp
xchg
clc
adc
ljmp
mov
stos
xor
rclb
das
push
fmull
arpl
je
sub
xor
pxor
in
adc
xor
jae
into
or
sbb
jb
inc
jle
lods
or
movsl
and
push
fistl
jbe
xchg
cmp
testb
in
pop
je
movsl
lods
push
mov
inc
add
stos
inc
ja
sub
jg
out
mov
jo
mov
sbb
fcomip
ret
sbb
mov
scas
cwtl
out
js
cmc
xchg
sub
dec
jmp
jle
fiaddl
lods
adc
or
jg
addr16
lret
mov
push
icebp
jnp
mov
cmpsl
in
popl
fists
cmc
dec
pop
outsb
in
inc
jae
aaa
lea
mov
fnsave
mov
push
mov
xchg
int3
sarb
imul
xchg
scas
ret
cmp
adc
enter
pop
jecxz
sub
leave
xor
dec
hlt
pop
add
arpl
sub
or
cmpsl
loop
dec
std
sbb
pop
inc
add
xor
mov
fisubs
xchg
lods
xchg
ja
and
repnz
dec
cmp
pop
test
mov
sbb
repz
aaa
mov
enter
adc
dec
adc
push
push
js
xchg
xor
imul
and
and
push
xchg
std
push
sbbb
lods
mov
in
std
inc
movsb
enter
daa
cmpsb
sahf
pop
cmp
xchg
shrb
jmp
lret
shlw
cmp
lahf
mov
or
sbb
add
pop
popa
xor
mov
js
xor
pop
sbb
push
icebp
xor
ljmp
sub
sahf
adc
sbb
mov
xorb
mov
sbb
and
mov
push
out
push
int
cltd
subl
mov
rcrb
leave
andl
sahf
lods
scas
outsl
test
mov
adcb
jg
adcb
lahf
jmp
jno
push
sub
mov
cmp
xchg
outsl
lret
jbe
xor
xor
mov
push
ljmp
and
out
inc
xor
loop
mov
imul
das
add
mov
data16
mov
lods
xlat
pushf
jecxz
cmp
or
cli
shll
mov
sbb
jp
or
call
pop
data16
scas
out
es
jbe
adc
mov
mov
lret
repz
imul
cmp
xchg
jmp
adc
out
pushf
dec
js
jmp
push
xchg
add
cmp
dec
or
jmp
sbb
pusha
dec
outsl
jmp
je
pop
fsub
jge
sub
rcrl
fs
or
dec
xchg
in
dec
push
mov
test
inc
sub
stos
inc
mov
fwait
bnd
dec
mov
xchg
mov
mulb
std
adc
das
cwtl
pop
xchg
hlt
test
dec
cmp
cld
sub
lret
lret
xor
imul
lock
xchg
in
fiadds
push
sub
xor
aam
cmpsl
or
inc
sbbl
dec
fdivrl
mov
popa
push
mov
mov
shl
sub
xchg
sub
into
popl
cltd
idivl
xchg
mov
dec
ficoms
cmp
fnsave
mov
xchg
aaa
test
ljmp
outsl
pop
pop
outsl
inc
stos
and
addr16
imull
or
add
xor
xor
mov
gs
mov
add
dec
and
sbb
sbb
or
pop
rcrl
or
add
mov
sub
dec
rclb
in
inc
push
xchg
hlt
subl
mov
gs
jb
out
rorl
andl
aad
loop
xchg
clc
dec
ret
jne
cmc
sbb
mov
jge
mov
aam
inc
into
push
xchg
dec
movsb
and
das
mov
or
scas
add
scas
pop
and
cltd
insb
shrb
jnp
sub
in
mov
mov
in
xchg
sti
pop
push
inc
sarb
aam
data16
pop
push
cmpb
popf
fwait
iret
jle
movsb
shl
push
cmpsl
rcrl
lds
mov
dec
scas
es
push
sub
mov
iret
mov
out
loope
stos
xchg
cmpsl
hlt
stos
rcr
add
fisttpl
and
inc
int
push
rol
sbb
ror
inc
lods
negb
aam
fiadds
rol
or
ror
xchg
mov
jge
or
push
leave
shlb
mov
cmpb
jge
loope
sbb
in
aaa
ja
inc
or
ljmp
sbbl
xor
les
sub
lea
push
pop
data16
hlt
cmpsb
xor
in
in
sahf
enter
daa
movsl
arpl
loope
or
sub
sub
insb
mov
arpl
movsl
sub
pop
and
sbb
out
sar
xchg
sbb
and
jp
cmp
push
add
pop
lds
idivb
fldenv
pop
push
mov
pop
push
fldenv
fsubrl
loop
outsb
pop
xlat
jb
fwait
or
shl
icebp
arpl
inc
pop
cmp
pop
in
and
push
nop
push
jmp
dec
lods
sub
popa
cli
pop
lea
lcall
aam
and
sbb
movsb
jg
jno
mov
or
inc
mov
inc
push
fdivrl
dec
rep
inc
cmp
inc
adc
lret
shlb
or
pusha
cmp
imul
xor
popa
cmc
stos
dec
clc
xor
inc
outsl
and
pop
mov
aas
push
nop
adc
lods
movb
pcmpgtd
jno
mov
aas
shl
mov
cli
add
mov
fcmovnbe
movsl
in
xchg
mov
in
decb
rorb
or
loopne
cmp
adc
mov
test
repz
scas
xchg
arpl
sbb
ret
xlat
inc
or
jmp
iret
dec
xchg
pushf
clc
mov
movsl
fcoms
dec
add
nop
dec
xor
imul
dec
out
repz
cmp
mov
es
leave
shl
xorl
mov
push
and
nop
or
cmc
cs
pop
cwtl
xchg
inc
add
aas
xchg
insb
or
mov
pop
repnz
rorl
or
std
mov
sbb
in
mov
and
cld
push
xchg
mov
cmp
mov
dec
fwait
es
imul
jno
inc
das
mov
and
sub
cmp
ret
inc
int
repnz
insl
fcomps
cmpsl
movsb
push
sub
xorl
xor
hlt
adc
and
and
pop
in
mov
call
test
inc
adc
fstp
cmp
xchg
jbe
inc
ljmp
out
pop
add
stos
adc
push
xchg
ds
leave
mov
outsl
add
movsl
or
fistpll
xorl
xchg
pop
and
cwtl
int
push
dec
popl
pusha
adc
inc
lods
mov
add
and
add
mov
jns
xor
or
mov
fwait
movzbl
jmp
ja
fildll
ja
nop
mov
mulb
rorl
xorb
or
test
mov
xchg
push
and
cmp
xchg
adc
xor
lcall
sub
mov
jb
add
icebp
jp
dec
sub
loopnew
insb
cmp
push
jle
aad
in
in
pusha
test
jns
aam
cmp
into
notb
inc
fildl
pop
jae
notl
inc
xchg
popf
ret
mov
out
repnz
mov
push
imul
enter
adcl
mov
iret
sbb
ret
loopne
and
add
inc
dec
test
aaa
mov
daa
inc
dec
push
fisubrl
in
int3
xor
pop
lea
pop
jne
jecxz
add
sarb
dec
movsb
fs
push
aaa
int3
pushl
jae
jge
mov
sbb
push
loop
xchg
addb
jno
out
jl
mov
dec
repnz
outsb
push
ds
fidivs
pop
and
lods
mov
and
imul
daa
and
inc
sahf
loope
cmpsb
mov
shr
push
cmpsb
enter
daa
movsb
lods
xor
or
std
loope
mov
adc
sbb
mov
xchg
aad
das
xor
and
adc
mov
inc
stc
add
cmp
xor
xchg
adc
sahf
test
pop
xchg
cld
or
fcompl
xor
dec
cmovp
or
sbb
ret
adc
shlb
push
scas
mov
lahf
or
mov
adc
and
int
push
in
stc
in
int
fbstp
pop
or
cmc
lcall
inc
mov
rolb
sahf
repnz
test
xlat
and
test
pop
mov
sarb
stc
sbb
xchg
adc
xchg
ss
cmp
std
cld
pop
testl
sti
stc
cmp
in
and
sub
push
xchg
jecxz
jb
gs
mov
add
jmp
imul
incl
data16
in
inc
lods
movsl
pushf
xchg
mov
out
fcmovnbe
cli
aaa
mov
mov
sti
data16
cmpsl
loopne
push
sbb
jne
sbb
cmp
testl
repz
rcrl
xchg
xlat
movsl
sbb
std
call
xchg
sub
lahf
adc
ja
pushf
mov
mov
cmp
lret
cmp
dec
enter
aas
adc
je
cmp
fwait
mov
int3
and
scas
call
or
rolb
sub
pop
pop
cmp
mov
aas
xor
jb
dec
std
mov
stos
stos
jge
fidivrs
dec
mul
jnp
std
bound
mov
adc
out
icebp
clc
xor
orb
mov
call
or
int3
pop
ret
jbe
mov
adc
add
or
sti
ret
gs
jae
jne
jp
mov
bound
mov
cwtl
pop
or
mov
pop
aaa
fldenv
mov
mov
rorb
test
ret
push
sti
mov
jne
push
ja
pop
cmp
clc
jmp
or
andl
pop
scas
add
stos
decl
fists
rol
jo
mov
or
mov
mov
in
enter
and
xchg
into
sbb
insl
push
inc
inc
push
add
ja
fwait
shlb
push
fsubl
add
stos
aad
testl
dec
in
ucomiss
xlat
lcall
fldt
ret
imul
pop
dec
xchg
mov
dec
int3
mov
and
mov
jne
xlat
adc
jae
test
jmp
filds
subl
lret
arpl
sub
mov
xor
add
mov
and
sbb
jle
ss
pusha
inc
xchg
es
ret
mov
mov
je
inc
out
add
cmp
push
popf
jmp
nop
lea
mov
stos
xor
in
sbb
repnz
imul
out
scas
in
aad
push
mov
push
adc
out
ret
xlat
leave
cwtl
inc
jnp
inc
cmp
and
lods
inc
dec
mov
scas
push
lret
out
ficompl
or
dec
cltd
push
int3
sbb
fs
fimuls
scas
sar
jo
decl
and
cmp
pusha
popa
movsb
out
xchg
jbe
and
jge
imul
stos
das
lods
aaa
cmc
xor
or
pop
jno
pop
inc
jl
sbb
dec
popa
mov
push
and
ds
jp
xchg
scas
mov
lods
test
repnz
sub
mov
sub
iret
ror
mov
adcb
pop
scas
sub
sub
test
into
in
or
adc
jbe
push
add
roll
call
fadds
pop
adc
and
loope
pop
aad
jno
mov
into
das
faddl
stos
in
and
jbe
shrb
into
lcall
and
and
cmpsb
push
out
je
int
pop
add
xlat
insb
cli
pop
mov
aaa
rorl
adc
call
imul
andb
jg
cmp
cwtl
xchg
inc
stc
iret
push
pop
fs
adc
into
js
orb
les
loopne
mov
test
popf
or
into
stc
pop
jge
cmp
les
es
loop
movsl
cmp
adc
movsl
adc
jno
sub
outsl
sub
orb
mov
pop
sub
cmp
push
orb
gs
nop
dec
pop
adcl
fldcw
mov
jmp
sahf
repz
xchg
jmp
adc
cmp
fdivrl
xlat
les
and
jge
stc
pushf
dec
ja
jmp
inc
scas
cs
movsl
stc
aad
lahf
addr16
add
testl
xlat
or
je
lret
fsub
stos
dec
adc
iret
std
jle
push
mov
call
mov
xchg
call
sbb
fistl
out
pop
faddp
mov
shrl
inc
or
or
jb
sbb
push
and
mov
shl
sub
std
or
ret
cwtl
pop
aad
mov
jp
mov
pop
icebp
iret
gs
cld
stos
pop
ds
sbb
outsl
mov
sub
or
test
das
jnp
cmp
or
sbb
hlt
lcall
cmpsb
push
orl
icebp
je
xlat
scas
cmpsl
dec
lods
sbb
mov
cmp
and
push
dec
jo
sub
or
cltd
pushf
xor
in
cltd
push
cmp
sub
es
sahf
xchg
hlt
jns
ljmp
subps
sbb
push
cld
and
fwait
arpl
pandn
add
clc
or
or
mov
lock
cld
dec
mov
loopne
lret
sbb
jge
inc
fisubl
stc
or
sub
addr16
add
repz
xor
popf
jns
mov
in
icebp
add
sbb
outsl
pop
xchg
cmc
jbe
and
push
dec
inc
xor
and
popa
ljmp
aaa
inc
jne
ficomps
out
push
push
pusha
jmp
stos
pop
addb
data16
add
and
jb
jp
test
and
dec
cmc
jnp
in
arpl
mov
dec
fists
sahf
cmp
pop
dec
inc
outsb
inc
icebp
mov
push
lret
ja
popf
adc
je
push
int
push
fs
stos
jno
int
sub
sbb
xor
lret
scas
dec
repnz
push
incb
sbb
mov
ret
hlt
leave
sete
hlt
mov
arpl
sub
push
xor
xchg
push
dec
out
ficoml
fisubs
add
mov
int3
or
pop
jmp
sub
lds
mov
jbe
push
cmp
movsb
jp
mov
jbe
inc
add
add
cli
aaa
mov
or
pop
jno
dec
test
dec
shr
in
push
add
pop
xor
aad
jae
push
xor
inc
jle
test
mov
jp
cmpsb
mov
lock
enter
daa
mov
mov
loope
cmp
cmp
or
int3
notb
and
mov
fstpl
cmp
fdivl
out
cltd
fwait
push
adc
imul
pop
adc
mov
push
fidivs
ljmp
out
push
outsb
mov
adc
mov
addb
sub
imull
push
repnz
int
mov
sub
ret
adc
lcall
lea
dec
les
push
mov
addb
and
xchg
adc
add
ss
pusha
fdivs
mov
xor
lret
repz
repnz
or
outsl
into
fcoml
pop
cmc
add
fwait
xor
and
mov
push
imul
and
data16
repz
lods
jae
stos
mov
in
out
mov
cmp
and
in
enter
je
ret
gs
arpl
stos
pop
aam
mov
pop
dec
fldenv
popa
idivb
repz
and
movsb
and
jae
mov
add
lahf
adc
aaa
xchg
pushf
stc
push
popa
jmp
rcrb
sti
aad
test
fisttps
es
gs
xor
cltd
xorl
ffree
rorb
lea
call
mov
insb
add
subl
push
in
adcl
daa
test
lahf
jb
and
and
sbb
imulb
std
mov
popf
cwtl
ret
mov
in
js
popa
test
icebp
cmpsb
mov
call
mov
pop
cmp
shlb
das
pop
jl
mov
add
push
aam
ljmp
jnp
push
lea
dec
enter
mov
push
lock
sbb
lods
xor
mov
pop
pop
and
rcll
repnz
pop
dec
in
or
cltd
roll
aad
push
std
test
fdivr
popa
in
push
xchg
xor
rorl
mov
lds
mov
push
jge
jbe
mov
add
xchg
outsb
xor
cmpsb
pop
mov
repz
rorb
fisubl
sbb
xchg
xor
inc
jno
les
daa
jne
cmpsb
dec
push
or
add
push
mov
pushl
fnstenv
in
sub
xor
mov
pop
pop
mov
push
push
je
jecxz
das
dec
ds
mov
out
mov
inc
addr16
jne
dec
and
xor
aam
mov
pop
jb
xchg
jne
sbb
cmp
dec
sub
cmpsl
div
add
jp
arpl
and
push
jnp
js
jle
aam
in
push
scas
pusha
jns
pushf
fbstp
jl
xchg
inc
pushl
xorl
jno
mov
sbb
nop
sahf
jo
mov
jle
xchg
jg
jp
dec
inc
enter
push
scas
mov
push
push
inc
sbb
int
xor
push
hlt
add
inc
push
cmp
or
push
and
inc
leave
imul
lds
add
fcmove
pause
add
sbb
rol
mov
shlb
mov
leave
jne
cmp
mov
movsb
add
arpl
jbe
xlat
daa
jge
test
and
call
jno
mov
jl
pop
and
aas
fists
out
pusha
xor
xor
scas
dec
rclb
push
mov
mov
inc
dec
lods
jno
cmp
xchg
jno
lds
daa
mov
sahf
iret
loope
ds
mov
lds
movsl
inc
cs
and
jns
pop
pop
pushf
push
sbb
aas
sbb
loop
pop
addb
pop
pop
gs
popa
movsb
and
cmp
push
subb
xor
out
sub
test
jmp
notl
arpl
insl
sbb
adcb
jl
mov
mov
int
clc
dec
sub
push
pop
mov
add
sarl
sbb
adc
testl
jg
jbe
mov
mov
stc
cmp
inc
xor
pop
or
ss
mov
dec
fsubrs
cmp
lret
dec
xor
push
cmp
xor
or
jmp
cmc
arpl
mov
gs
mov
adc
in
insl
add
and
jne
and
mov
cli
rol
mov
aaa
sub
sar
jae
lahf
xchg
adc
gs
jp
inc
xor
repnz
scas
cltd
fstps
or
popf
xchg
outsl
sbb
jno
scas
jle
xlat
inc
push
push
sub
into
pop
pushf
movsb
lcall
fs
cmp
push
ror
dec
in
roll
sti
inc
dec
ret
je
call
iret
aad
sub
lret
les
mov
xor
pop
int3
push
addl
rcr
mov
cs
and
and
pop
xchg
or
or
push
sbb
dec
rcrb
aaa
mov
std
push
flds
cwtl
jge
mov
mov
icebp
jge
mov
lret
test
mov
xchg
mov
ljmp
cmp
in
sub
dec
xchg
aam
int
ret
adc
jns
decb
rorb
in
mov
xchg
into
popa
sarb
sbbb
enter
lea
pop
imul
add
stos
daa
push
shlb
fnsave
clc
pushf
sub
xchg
jb
fucomp
ficompl
mov
stos
int3
out
sbb
cmpsl
xchg
pop
lock
setge
js
rol
xor
repz
mov
test
dec
pop
push
sbb
enter
sub
aad
or
rorb
mov
push
lods
mov
cmp
sub
call
out
xor
sbb
dec
in
mov
xchg
jg
or
and
push
mov
inc
mov
shrl
mov
mov
pop
dec
xor
or
out
adc
bound
fs
inc
mov
adc
lahf
out
leave
scas
sub
mov
fsubrp
jp
rcrb
insb
jmp
mov
jle
adc
imul
fists
push
xchg
sbb
pop
mov
pusha
shlb
cmpsb
ret
push
push
cmp
out
mov
loop
inc
stos
push
xor
xchg
cmpsb
data16
daa
shrb
leave
scas
adc
cwtl
je
sub
iret
xchg
fnstenv
leave
std
push
mov
arpl
popa
inc
push
mov
or
mov
in
dec
je
fidivrl
dec
add
push
ror
ficomps
jle
jne
pop
lds
test
dec
fists
repnz
pop
cmp
adc
movsb
nop
stos
inc
push
jae
stc
jbe
loopne
jge
out
sbb
cmp
aaa
xor
or
jnp
imul
dec
scas
cltd
sbb
lret
xor
mov
scas
sub
lods
and
test
push
pop
xor
and
in
addr16
adc
shrb
cmp
cmp
loope
gs
and
ret
xor
adc
adc
fldt
cmp
out
int3
ret
data16
push
lea
test
mov
mov
mov
les
push
and
mov
lock
push
outsb
dec
push
push
adc
ds
out
int3
inc
call
mov
cmpsl
mov
stc
out
je
out
push
clc
popf
mov
mov
push
pop
or
lcall
add
sbb
ljmp
lret
mov
sbb
sbb
mov
adc
fs
ja
adc
in
cmp
jmp
and
lret
and
aas
jnp
cmp
dec
test
ljmp
cmc
mov
inc
repnz
cmpb
loop
xchg
add
adc
adc
mov
data16
and
pop
lea
jg
xchg
add
icebp
in
sahf
rorb
pop
mov
mov
cmp
xchg
pop
loopne
stos
adc
push
cvttps2pi
or
cld
repz
add
repnz
pop
cmp
sub
push
sub
cs
adc
ljmp
mov
lret
sub
dec
inc
mov
inc
mov
dec
cmp
and
into
jecxz
xor
fdivrs
xchg
call
pop
lret
rorb
sbb
adc
pop
dec
dec
inc
push
xchg
inc
pop
jnp
aas
lods
mov
add
and
fnstenv
div
ror
std
lods
outsb
cwtl
cmp
in
mov
psllw
cld
sub
jbe
gs
or
pusha
add
lock
das
sbb
nop
sub
or
cmp
ret
mov
push
push
insl
pop
sbb
cmpsl
lahf
mov
mov
hlt
test
rcr
scas
hlt
fidivrs
iret
fsubl
sub
imul
inc
andl
pop
dec
mov
lock
fstpl
add
xchg
mov
cmp
dec
adc
lods
pop
pop
pop
pop
stos
mov
adc
mov
les
cld
fildl
aaa
xchg
mov
mov
stc
push
xor
and
or
jle
lahf
outsb
xchg
or
daa
out
mov
mov
push
out
sub
inc
adc
pushl
fidivs
cmp
test
pop
xchg
in
xchg
into
adc
gs
int
ja
ret
and
cmc
mov
adc
mov
mov
test
mov
aad
out
out
test
jmp
or
andl
out
sub
sub
popf
xor
jp
divb
and
add
jnp
mov
jle
inc
mul
jo
mov
fildll
mov
pop
out
addb
leave
clc
jae
cld
jae
adc
leave
popf
test
mov
push
and
dec
stos
lret
xchg
sub
loope
imul
cmp
ja
adc
iret
xrelease
leave
je
out
hlt
insb
sbb
inc
pop
mov
pop
push
movl
mov
movsl
fcmovnu
int3
leave
jp
pop
js
lret
bound
shrb
mov
outsl
dec
inc
cmp
pop
xor
sbb
jbe
pop
jge
sub
loope
icebp
or
mov
jl
pause
dec
sbb
lods
repnz
out
out
pop
fisubl
test
push
mov
push
cmpsb
inc
mov
enter
daa
lahf
aad
cmp
mov
sub
pop
outsb
cmp
gs
movsl
push
push
out
and
repnz
xchg
cmpsb
fcoml
clc
xchg
sbb
enter
test
xor
in
and
js
loop
pop
shll
push
jne
push
jecxz
add
das
icebp
or
mov
in
mov
lds
sbb
clc
sub
mov
ficompl
mov
lds
xor
push
sti
call
add
ret
jb
pop
xchg
lcall
sub
inc
cmp
fwait
add
adc
mov
ret
sarl
aam
fs
add
adc
in
test
cmp
movsb
dec
fdivp
rolb
lret
lcall
xor
pop
cs
test
xchg
cmc
push
leave
loopne
popf
cmp
jecxz
inc
movsb
imul
test
lods
outsl
or
and
lods
sub
add
jle
loope
or
in
or
mov
rol
mov
gs
movsl
loopne
sub
pop
lcall
inc
adc
jmp
sbb
pop
mov
cmp
sbb
outsl
xlat
shlb
adc
inc
pushf
cli
or
inc
sub
cmp
mov
out
hlt
dec
mov
jo
adc
jecxz
pop
in
frstpm(287
je
in
fs
sarl
movl
dec
xchg
dec
mov
pop
sbbb
push
inc
fstl
insl
aas
dec
movsb
inc
jb
bound
and
aaa
pop
shrl
scas
divb
inc
cwtl
repz
mov
xchg
repnz
sub
mov
mov
adcb
mull
test
out
aam
pop
ret
xor
es
ja
inc
ja
dec
mov
push
push
mov
or
pop
mov
mov
mov
mov
cmpsl
pop
movsb
shrb
mov
mov
cli
cmp
inc
jg
ffree
popf
adc
xchg
lock
sub
rolb
push
test
add
test
out
loop
adc
pop
mov
cvtdq2ps
movsl
or
mov
xchg
pop
and
and
add
daa
xchg
sbb
sbb
shlb
sbb
fwait
mov
adc
dec
add
cmp
adc
aas
xor
jge
in
ret
test
sbb
cmp
outsl
mov
ja
loop
dec
pop
sbb
sbb
outsb
mov
mov
jne
loope
mov
sub
into
xchg
mov
jmp
sahf
ljmp
cld
shrb
cwtl
das
lods
addr16
pop
popf
jp
int
and
test
insb
mov
jge
jle
addr16
in
inc
mov
dec
xchg
pusha
fisttps
fcmovne
pop
es
inc
sbb
xchg
jb
xlat
lret
lods
pop
inc
mov
pusha
lahf
fldt
test
sbb
outsl
imul
and
adc
push
mov
ret
mov
jmp
sbb
mov
lea
imul
mov
rcrl
adc
add
popa
int3
mov
lea
xor
fidivrs
mov
xchg
mov
ret
cmp
mov
cmpsb
gs
lahf
jbe
dec
or
sbb
and
mov
fmull
xor
push
jno
enter
jnp
dec
mov
push
nop
mov
std
jo
adc
in
scas
and
cmp
clc
fdivl
in
xor
frstor
cmp
and
sub
and
cmp
dec
movsl
pop
lods
scas
and
ret
dec
lahf
mov
jle
xchg
pop
jmp
add
mov
cli
cmpsl
pop
lods
push
js
xchg
lods
pop
adc
repz
jl
push
cmp
cmp
fidivl
repz
xor
shl
aaa
sub
int3
cmp
mov
in
and
cmpsl
fwait
int
adc
sub
es
push
ret
imul
sub
jno
sahf
les
test
fwait
jno
in
in
sub
insl
and
iret
jg
test
mov
pop
cmp
pop
lods
arpl
jg
inc
lret
jmp
in
adc
or
loope
into
push
xchg
mov
clc
pushf
sbb
jmp
in
imul
into
pusha
add
pop
pushw
jb
lods
paddb
mov
stos
pusha
cli
imul
sti
sub
incb
push
int3
gs
jp
pop
inc
rcrb
test
flds
sub
and
repz
cmp
inc
dec
or
xlat
mov
inc
adc
imul
jmp
push
lods
lea
mov
dec
sbb
inc
mov
hlt
dec
daa
xchg
pop
mov
jecxz
pop
out
fiadds
lea
cmp
rol
add
addr16
pop
mov
dec
stos
jbe
fstpt
cmp
pop
or
or
inc
xchg
popf
aas
ljmp
mov
in
call
idivb
repnz
dec
add
cwtl
scas
cmp
stos
mov
or
or
lret
inc
in
mov
arpl
out
xchg
mov
fidivs
aam
insl
rol
mov
outsl
stos
insl
sub
xor
popf
js
mov
and
lods
das
fldt
or
push
mov
push
mov
mov
sar
sbb
test
inc
aad
or
fucomp
mulb
das
rcrb
shll
js
mov
shrl
inc
in
xchg
das
out
mov
mov
jg
sub
or
shr
mov
call
and
add
test
xchg
xacquire
cmp
inc
int
out
or
ja
fwait
ljmp
add
jp
inc
pushl
and
in
dec
xchg
xchg
insb
mov
xchg
cmp
test
or
jmp
mov
and
dec
fidivrl
clc
jne
fcoml
out
lods
lods
cmp
jmp
mov
mov
lock
xchg
mov
test
and
jae
insb
sub
les
orl
fildll
loop
pop
pop
fistps
inc
sub
scas
push
lcall
mov
lahf
repz
xchg
sbb
shl
imul
scas
ds
clc
push
popa
bound
adc
lock
leave
bound
cmpsb
arpl
push
inc
pusha
fisttpl
push
lds
push
add
push
xlat
int3
lahf
mov
pop
jne
ficomps
je
cmpsl
dec
mov
mov
test
repnz
xchg
movsb
xor
mov
jbe
mov
jge
addr16
sbb
push
aaa
outsl
adc
or
test
jl
fsubr
dec
sti
pusha
out
push
jae
je
push
mov
lret
scas
lds
cmp
and
adc
inc
xchg
mov
in
sbb
and
mov
and
popf
sbb
loope
mov
sub
push
inc
cmp
pop
lret
sbb
push
lods
sub
lahf
aad
popa
push
push
jns
add
and
xor
test
push
inc
pop
std
js
js
pop
dec
fstpl
push
xchg
bound
faddl
imul
adc
iret
dec
sub
push
mov
setbe
push
dec
push
add
cmp
shl
sub
mov
lcall
jne
jp
and
sahf
addr16
icebp
test
push
jg,pn
sbb
jb
sbb
fs
aad
xchg
shlb
or
stc
cmp
sbb
fmul
xorl
xor
adc
cmp
andb
dec
cmc
mov
jecxz
jbe
push
adc
sbb
pop
ss
insb
pop
add
push
jo
mov
lods
imulb
and
jl
cmc
cli
pushf
and
xchg
lds
sti
das
aad
and
gs
outsl
cmp
cmp
stc
in
fnstcw
xchg
les
cmp
xchg
jnp
jg
addr16
lods
cmp
dec
cmp
push
mov
xchg
mov
in
cmpsl
lock
aad
fldt
popa
int
inc
les
aaa
je
adc
loope
fmull
mov
dec
movl
fimuls
adc
insl
loopne
pop
mov
int
jmp
test
scas
dec
xchg
mov
sbb
ja
jo
pop
inc
xor
std
repz
imul
jle
and
icebp
test
mov
xchg
mov
test
das
mov
std
mov
aad
cmp
cltd
mov
pop
or
insl
adc
add
cmpsl
pushf
pop
jl
or
movsb
lods
lcall
mov
in
push
pop
in
in
ror
out
cltd
out
les
push
pop
push
int3
cmpsb
jae
adc
clc
mov
js
outsb
or
cmpsb
mov
pop
pop
pop
and
mov
test
out
jbe
jae
mov
jl
add
jb
or
fsubl
add
dec
cmc
ret
cmpsb
test
test
xchg
add
inc
ljmp
lock
test
cmp
pusha
add
xchg
mov
call
xchg
xor
xchg
jns
mov
arpl
lods
cmp
mov
clc
fnstenv
dec
std
mov
int3
mov
outsb
jle
dec
mov
cmp
adc
mov
push
bound
call
or
lret
sub
mov
xchg
in
jp
xchg
xor
pop
popa
aam
xchg
bound
xchg
xor
frstor
push
mov
pop
xchg
test
jae
xchg
sbb
pop
sub
popf
cli
and
fmulp
bound
xor
loopne
fs
shrb
insl
jp
xchg
cmp
adc
pop
leave
ftst
mov
arpl
or
jne
cmp
mov
addb
inc
lods
int3
mov
bound
jl
fiadds
jmp
aas
sarb
mov
cmp
mov
mov
jbe
lea
pop
bound
popa
xor
cs
jle
sbb
nop
jno
fnstsw
inc
or
push
push
stos
out
sbb
mov
scas
movsb
push
mov
test
jg
scas
inc
push
cmpsb
or
add
pop
enter
daa
pushf
test
mov
push
sub
mov
mov
sahf
addr16
and
mov
hlt
mov
push
cmp
add
ficompl
sarl
pop
and
mov
es
pop
mov
push
cmpsl
pop
push
call
xor
lods
outsb
pusha
adc
stos
insl
stos
xor
xor
add
xchg
and
xorb
sub
mov
lcall
jnp
gs
popa
sahf
or
dec
test
cld
sbb
and
imul
pop
mov
xchg
aaa
stc
shlb
aad
jecxz
jg
dec
push
sarl
aad
shl
mov
lret
xor
in
or
gs
stos
dec
xchg
xor
xchg
mov
imul
pop
clc
add
cmp
lods
fnstsw
pop
mov
int
out
mov
sub
in
dec
jb
sti
fiadds
mov
pop
pop
pop
imul
les
out
shl
adc
dec
xchg
ds
ret
aaa
mov
xlat
jge
arpl
frstor
adc
fldcw
sti
jo
jmp
mov
lods
aad
sbb
dec
rorb
dec
adc
in
jmp
adc
in
xchg
lea
inc
cld
call
add
pop
sahf
push
add
subb
pushf
dec
imul
lcall
movzwl
sub
jb
js
mov
add
rcll
out
gs
lcall
mov
jb
mov
into
xor
mov
loopne
fsubrs
mov
and
mov
loop
jl
jae
movsb
mov
xchg
in
scas
mov
int3
push
aam
daa
mov
and
lea
insl
dec
stos
negl
mov
push
mov
lods
add
fisttps
and
xchg
lret
pop
pop
add
lret
shlb
sub
stos
leave
push
aaa
push
jbe
ret
sbb
lods
les
rcll
xchg
jae
push
jp
stos
ja
mov
or
fs
cwtl
pop
mov
add
out
push
or
inc
xorb
xor
xchg
imul
jno
push
xchg
ficomps
stos
mov
push
or
push
jbe
dec
rcll
addl
out
lret
dec
xor
dec
sub
test
xchg
or
mov
insb
inc
mov
mov
fdivs
pop
imul
push
mov
sbb
mov
fstpl
xchg
std
in
mov
mov
leave
bound
and
jmp
idivb
andl
cmp
mov
fnstcw
mov
and
jae
insb
add
outsb
jnp
mov
in
mov
push
fucomip
add
xchg
cmp
inc
ds
jae
sti
mov
popf
and
mov
sbb
cmp
xchg
mov
sbb
adc
imul
scas
add
adc
fdivr
adc
cld
iret
outsl
imul
hlt
cwtl
cmp
arpl
jecxz
or
lock
inc
ret
pop
and
idivl
push
int3
jne
xor
xor
sbb
movsb
test
lds
cwtl
xor
notl
dec
cmp
int
inc
je
push
mov
or
xor
sbb
sub
jno
push
and
lods
dec
fnstcw
xor
jmp
scas
cmpl
test
dec
mov
dec
push
movsb
in
ljmp
daa
fwait
jno
cmp
shl
loope
inc
jle
cmp
cmp
and
movsl
outsb
scas
mov
loop
and
push
mov
sbb
call
call
lock
pop
dec
mov
addr16
int
fwait
push
lret
sub
or
repz
test
rolb
pop
adc
add
aam
mov
cmp
and
popf
mov
xor
sub
add
inc
loope
mov
mov
pusha
xchg
hlt
sahf
lods
sahf
mov
cmpb
adc
xchg
mov
ss
jo
cmp
nop
push
div
mov
repnz
xor
pop
cmp
push
cli
or
leave
sub
jno
xchg
or
inc
outsl
push
imul
mov
mov
rorb
les
xor
out
mov
cli
add
mov
mov
lret
sti
clc
jbe
imul
adc
jnp
std
adc
xlat
out
push
inc
push
or
jecxz
aas
xchg
add
stc
sbb
adc
xlat
mov
js
adc
in
jmp
xchg
cmp
mov
push
aad
mov
imul
mov
inc
iret
dec
mov
je
push
test
and
or
out
loop
mov
call
cmpb
push
push
and
imul
lret
je
pop
mul
or
cmp
in
cmp
jb
out
mov
cmc
sbb
movsl
pop
int
inc
in
out
std
inc
xor
mov
cmpb
or
cld
add
orl
ljmp
das
jae
cmp
ret
pop
xchg
aam
add
adc
insl
or
fisubrs
cmpsl
lcall
popa
and
jo
mov
mov
repnz
pop
and
lret
shlb
and
es
iret
mov
inc
pop
push
push
sahf
imul
pop
clc
shrl
ljmp
sti
pop
mov
mov
out
outsb
inc
mov
push
jae
push
pmovmskb
mov
pop
add
mov
jno
movsb
mov
or
jp
ret
mulb
test
xchg
ret
sbb
stos
inc
xchg
mov
jmp
ja
push
push
jg
iret
add
lret
xlat
decl
xor
sti
sarl
mov
in
bound
xor
push
mov
outsb
sbb
ja
mov
mov
jbe
mov
dec
jge
dec
xorl
push
and
mov
dec
xchg
out
dec
pop
cltd
fld
or
loopne
fsts
or
sub
test
jo
cli
sbb
and
and
aad
in
jle,pn
test
xchg
add
fisttps
decl
xchg
or
cmc
pop
add
pusha
jae
movsl
cmp
jecxz
add
sub
or
and
xchg
loopne
ja
cld
in
imul
scas
addr16
pop
adc
insb
iret
into
sub
leave
pop
adc
jecxz
add
jmp
inc
imul
incl
jnp
fisubrl
cwtl
xor
pusha
inc
ss
arpl
and
inc
pop
stos
lds
and
icebp
stc
mov
push
repz
cmp
shlb
ror
test
jbe
pushf
inc
jge
jmp
sbb
jns
or
insb
xorb
clc
jl
in
dec
dec
or
push
sbb
and
lods
inc
scas
bound
and
repnz
jae,pt
push
adc
jg
cmpsb
rcl
add
roll
xor
mov
loop
cmp
test
loope
inc
mov
mov
mov
in
insb
movsl
jne
shll
jge
repnz
xor
out
push
loope
clc
sbb
dec
inc
add
dec
jb
pop
ljmp
jb
sub
and
into
push
mov
inc
faddl
push
xor
bound
shlb
in
popl
popf
jae
sbb
fnstenv
aas
pop
push
or
sub
mov
mov
aaa
outsl
daa
rcr
jns
cmp
outsb
sbb
pcmpeqd
pop
or
adc
orl
fs
inc
adc
dec
cld
cmp
dec
or
idivl
lret
lret
pop
xor
stc
cmp
sub
test
into
hlt
and
cmc
cmp
inc
outsl
mov
hlt
out
imul
cmp
mov
lods
stos
or
out
fistl
fdivs
loope
cmp
movsl
decb
push
loopne
insl
loope
lcall
fstps
or
repz
mov
repnz
sbb
dec
insl
jle
sti
sub
adc
test
mov
mov
ficoms
jle
faddl
fildll
je
mov
inc
ljmp
call
add
pop
add
adc
arpl
cmovl
add
cli
fs
cltd
adc
cmpb
aas
imul
cmp
adc
idivl
testb
cwtl
lcall
mov
iret
mov
cld
loopne,pn
lret
lcall
xor
mov
shll
das
push
xor
sub
xor
xchg
mov
dec
dec
mov
sub
mov
jle
or
mov
jne
addr16
lret
pop
inc
gs
dec
or
mov
test
mov
pop
push
adc
inc
cmp
cmp
imul
shll
push
popf
cmpsb
out
sar
push
xchg
dec
adc
push
dec
mov
xchg
add
xchg
add
sub
mov
or
stos
dec
sub
test
push
test
inc
inc
cmp
inc
sub
dec
or
push
xchg
fwait
cmpsb
aas
mov
and
jp
add
roll
out
sbb
sub
lods
lcall
lods
hlt
xchg
test
inc
mov
sub
mov
sub
adc
fstpt
dec
jp
mov
divb
mov
enter
scas
fs
add
bound
jmp
int
push
cmpl
sub
jg
and
xchg
sarb
jmp
insb
fwait
inc
jnp
aad
jle
insl
push
in
lods
xor
push
mov
sub
adcb
dec
sti
inc
push
and
sbb
add
push
insb
mov
xchg
aaa
xor
sbb
lahf
dec
imul
or
jge
xor
and
repnz
leave
xor
hlt
cs
ret
arpl
mov
pusha
push
rcrl
ficompl
lcall
sbb
pop
xchg
es
fsubrp
add
rorb
mov
popa
mov
cmp
lds
pop
ja
push
pushf
movsl
xor
jge
mov
aaa
imul
repz
jno
or
jl
nop
pop
dec
mov
inc
push
cmp
outsb
icebp
and
add
and
or
loopne
push
inc
ret
rorl
in
mov
outsb
jge
cltd
xlat
inc
cmp
mov
mov
sub
aam
cmp
mov
jl
aam
sbb
xor
sbb
mov
xor
jmp
scas
pop
cltd
lea
xlat
mov
cmp
cs
fdivl
in
sub
stos
outsb
add
pop
adc
cmp
gs
subb
rorl
loope
jbe
fstp
addl
das
and
pop
adc
sub
mov
lcall
push
mov
daa
mov
mov
jae
test
jnp
xorb
jg
add
push
mov
cmc
push
test
rcl
out
ss
mov
dec
fadds
push
out
cmp
popf
lret
mov
and
or
fmulp
into
xlat
insb
in
lcall
xor
add
imul
sub
xchg
add
lods
xchg
leave
outsb
mov
push
call
cli
push
popf
in
in
mov
sti
jmp
dec
scas
jge
gs
xchg
pop
mov
test
fsts
les
inc
repz
push
sbb
xchg
add
sub
mov
adc
nop
out
pushf
cld
inc
lcall
imul
xchg
iret
add
sub
lods
testl
jp
jecxz
xchg
pop
in
pop
add
call
add
pop
mov
push
cmp
repz
sub
out
pop
cmp
mov
cmpsl
incl
rcll
aas
add
bound
inc
or
dec
fcmovbe
inc
mov
test
repnz
outsb
out
push
sbb
mov
sub
in
pop
inc
icebp
xor
mulb
outsb
pop
dec
mov
sbb
push
lock
stos
das
xor
cmp
not
lds
insl
es
push
or
fs
cmpsl
cwtl
jecxz
mov
xchg
data16
inc
sbb
mov
cwtl
lods
push
and
gs
cli
pop
popa
cmpsb
aam
sbb
in
test
pushl
fsubs
sub
jb
rcl
sbb
dec
pop
pop
jo
stos
inc
out
sahf
out
xor
lds
sub
add
inc
cmp
pop
xchg
push
cld
fmull
mov
daa
xchg
or
rolb
or
cmp
fwait
aad
test
lds
mov
mov
testl
int3
test
adcb
in
xlat
daa
xchg
testl
fstps
lods
mov
je
dec
leave
jbe
mov
lcall
sub
jne
popf
inc
mov
into
xchg
or
decl
jmp
cwtl
inc
pushf
orl
out
jne
sub
jp
call
jp
pushf
mulb
jnp
jae
inc
lods
outsl
jnp
xor
rorl
mov
push
fisttps
insl
xchg
mov
and
adcl
jmp
pop
insl
popf
xchg
daa
inc
mov
ficoml
out
adc
xchg
mov
call
imul
xchg
les
push
mov
leave
mov
xchg
hlt
jns
sub
ret
testb
xlat
or
popa
into
sub
dec
out
ficoml
repz
jns
int3
ss
mov
cmp
fimuls
pusha
mov
daa
clc
jle
aam
mov
mov
sti
cmp
jbe
push
jmp
cmp
jp
jge
or
sbb
cmpsl
orb
mov
and
bound
std
cmpsl
push
loop
or
arpl
fildll
add
pop
sub
xor
mov
push
push
popf
in
lahf
jne
enter
daa
cwtl
push
cmpb
insb
inc
loope
scas
lods
sub
fnstcw
cmp
js
sub
pop
movsl
xorl
mov
sbbl
fndisi(8087
sbb
addl
sub
pop
ror
js
out
pop
mov
push
insl
adcl
daa
mov
outsb
data16
adc
push
leave
jo
les
mov
mov
dec
shlb
mov
data16
pop
xor
pop
add
mov
or
mov
sbb
mov
jno
dec
outsb
int3
orb
mov
push
dec
stc
lods
and
jmp
aam
pop
inc
mov
cmp
shrl
lret
pop
xor
cmp
or
fcmovne
mov
jp
xor
jge
outsl
js
into
loop
mov
imul
insb
fwait
add
inc
and
jns
mov
testl
fwait
daa
mov
mulb
sti
lcall
movsl
inc
mov
mov
popa
dec
adc
dec
les
repz
aaa
cld
xchg
dec
push
sub
xlat
jns
mov
adc
imul
cmpsl
aaa
or
filds
push
aad
cmc
sbb
dec
cmp
popa
inc
and
je
cmpsl
scas
jecxz
inc
xchg
lock
fucomip
push
mov
ljmp
sub
sub
fistpl
fs
fisttps
inc
mov
or
aas
movsb
jo
jb
insl
cmpb
negb
rcll
cmp
std
arpl
mov
lds
icebp
or
outsb
cld
test
push
lret
fst
mov
rcr
cmc
mov
loop
lock
push
mov
test
mov
ret
sbb
es
jb
insl
xchg
decl
cmpsl
xchg
push
jmp
popa
lods
aas
fsubrs
or
mov
lods
test
sub
shl
cmp
cltd
stc
adc
test
pop
mov
cmpsb
or
fst
shll
jb
xchg
test
xor
pop
mov
xchg
stos
xor
leave
out
xchg
cmp
cmp
mov
hlt
scas
add
sbb
out
aaa
pop
xor
outsl
pop
mov
adc
pop
test
lods
je
aas
push
ficompl
ja
roll
imul
inc
inc
fwait
add
add
push
lods
mov
sbb
lcall
test
jns
or
mov
lods
xchg
inc
adc
mov
mov
mov
lahf
shll
ja
xor
mov
bound
das
sub
mov
dec
fs
lock
inc
mov
out
out
push
xchg
arpl
xchg
arpl
aad
pop
jne
sub
jne
jno
testl
and
nop
add
push
lea
sbb
in
sub
xchg
rclb
pop
or
inc
jae
cmp
popf
mov
xchg
lret
shr
bound
inc
xchg
in
lods
sbb
jle
imul
repz
nop
adc
or
push
iret
jmp
xchg
ret
repnz
sub
add
les
inc
jb
mov
jb
mov
fsubrl
imul
pop
and
pop
lock
xor
xor
adc
rcrl
rolb
mov
pop
cmc
cmp
inc
movsb
jae
sahf
push
cmp
cmp
jae
sbb
daa
aaa
jmp
cmpsb
inc
jno
mov
jl
gs
xchg
fwait
push
lds
jo
mov
and
xchg
mov
inc
loope
pop
cmpsb
pop
in
xchg
push
enter
daa
xchg
dec
jl
mov
sbb
cmp
mov
ds
mov
dec
cmp
lahf
outsl
xchg
cmpsl
negb
xchg
ljmp
int3
mov
cld
jmp
pop
out
add
dec
movsb
sahf
pop
leave
jo
push
popa
aaa
push
fwait
push
je
xchg
sub
mov
outsb
leave
inc
dec
adc
icebp
push
ret
jg
adcb
mov
out
inc
and
fdivrl
adc
xor
pop
jg
xchg
lcall
loope
cld
cmp
sahf
cmp
pop
test
ja
jg
mov
jl
jle
arpl
inc
adc
ds
mov
out
jl
sbb
mov
loop
xor
adc
or
cmp
popf
loopne
cmc
call
xor
lcall
pusha
cmp
sbb
add
data16
add
pusha
icebp
dec
mov
push
out
jbe
mov
into
inc
bound
popa
xor
dec
outsl
mov
lods
push
adc
jmp
fcomp
ret
les
mov
pop
iret
cmpsl
xchg
or
pushf
add
cld
pop
push
xlat
mov
ret
xchg
imul
jmp
fwait
lea
inc
lcall
dec
xlat
inc
dec
fwait
jae
inc
ss
dec
push
daa
shl
pop
cmp
lea
sub
imul
and
dec
pop
icebp
loop
xchg
mov
push
lret
inc
adc
or
jb
lods
cmpl
loope
xor
dec
xchg
push
std
fnstsw
adc
enter
rcrb
push
cld
scas
sahf
cmp
dec
push
mov
sbb
imul
out
mov
bound
lahf
mov
aam
mov
ret
test
push
sbb
push
insl
jp
pop
dec
xchg
inc
fsubs
cmp
dec
popa
ret
cmp
lods
sbb
test
fmulp
or
fwait
adc
rol
and
cltd
xor
dec
test
sbb
pop
std
and
cli
push
mov
ljmp
ljmp
xchg
pop
pop
lea
and
adc
cli
int3
rclb
fistps
enter
pop
or
divl
call
or
pop
or
test
xor
cmp
sub
dec
inc
out
in
or
and
fwait
xor
mov
aaa
adc
decl
adc
xor
cmc
ret
jns
rol
in
sub
xchg
xchg
loope
mov
sub
pop
pop
mov
dec
scas
mov
mov
dec
and
pop
pop
aas
mov
stos
jnp
pcmpeqd
mov
movsl
scas
out
mov
bound
into
mov
cs
jae
fsubr
push
sub
jo
insl
addr16
idivl
push
insb
pop
dec
mov
mov
loope
in
cmp
fnstcw
filds
ret
jge
jne
jle
xchg
call
popf
in
lea
pop
mov
stos
aad
inc
xchg
cmp
mov
imul
cmp
push
push
in
adc
pop
dec
ret
xchg
mov
inc
cltd
arpl
stos
and
gs
or
push
pop
cmp
ds
adc
hlt
ljmp
pop
mov
mov
lds
je
pop
inc
jno
adc
xchg
repnz
and
or
jno
push
mov
mov
jge
mov
dec
aaa
test
loopne
int3
ja
jno
jle
jl
lea
add
rorb
pop
and
ret
xor
jo
mov
scas
ficoms
or
sub
mov
push
cmpsb
fstpl
in
insl
jae
enter
daa
xchg
into
pop
cmp
add
into
test
sub
pusha
cmp
lods
mov
jg
xchg
sub
and
das
call
push
sub
adc
xor
sub
push
testl
add
push
or
repnz
mov
xor
add
sbb
outsb
sub
int3
adc
int3
out
mov
adc
andb
and
mov
scas
pushf
and
inc
roll
push
lock
sub
xchg
cli
pop
fldl
add
jp
out
stos
sbb
stc
sahf
fcompl
test
rolb
pop
pop
cmc
mov
out
pop
stc
sbb
or
mov
dec
cmpb
mov
mov
xor
test
or
or
push
call
into
outsl
ss
pop
loop
inc
sbb
mov
cmpsb
add
push
lods
inc
pop
mov
in
test
jne
and
add
pusha
mov
int3
aam
sti
clc
mov
sbb
gs
out
out
xlat
add
jbe
adc
sbb
stc
push
adc
repz
stos
cltd
xchg
shrb
ljmp
ficompl
sub
mov
jmp
inc
pusha
movsl
and
nop
and
and
inc
push
inc
dec
dec
push
dec
fbld
mov
jecxz
jo
divb
fimull
adc
leave
std
push
pusha
pop
shl
roll
jle,pn
mov
pop
pop
and
mov
inc
imul
loop
leave
jb
and
push
inc
leave
shll
dec
sub
nop
pop
mov
cwtl
xchg
mov
xchg
icebp
mov
xor
mov
xor
lock
jp
das
into
out
xchg
xchg
mov
aam
xor
ret
aaa
stos
into
es
adc
dec
mov
sub
outsb
jne
ficompl
lods
xchg
mov
add
and
ss
pop
pop
mov
cmp
test
mov
push
and
frstor
rcrb
xchg
daa
cld
stos
ljmp
mov
xchg
stos
adc
out
pop
push
test
mov
jge
add
pusha
or
or
mov
pop
jmp
dec
or
test
push
aaa
xchg
push
and
or
add
scas
push
xchg
push
nop
ljmp
jne
jns
aas
or
dec
imul
dec
sbb
pop
adc
xor
mov
pop
push
mov
ja
loopne
repnz
mov
cmp
sahf
mov
scas
das
out
movsl
in
jle
mov
xchg
stc
sbbb
pop
sar
sub
imul
addr16
or
cs
rcrl
adc
jnp
in
jle
lcall
mov
sbb
cmp
stc
daa
inc
sub
jae
repnz
push
mov
push
popf
or
out
push
test
stos
dec
inc
sbb
push
scas
add
scas
push
pop
push
cltd
lods
xchg
adc
xor
ret
mov
sbb
pop
hlt
pop
inc
add
inc
js
in
inc
inc
mov
sbb
inc
mov
jl
add
mov
mov
jbe
gs
mov
mov
lods
lods
sub
les
mov
push
fsubs
cmpb
cld
sbb
out
aaa
addr16
rorb
mov
xchg
test
dec
jae
push
push
mov
fidivl
je
icebp
scas
mov
push
or
or
xlat
inc
inc
and
push
enter
dec
shlb
xchg
rcrl
pop
inc
loope
pop
subl
push
popa
movsl
cwtl
ds
test
add
add
push
sbb
jecxz
cmp
push
sub
pop
xor
fcompl
inc
pop
loopne
add
pop
mov
sub
icebp
xor
dec
inc
adc
cmpsl
lahf
cmc
loope
nop
xorb
mov
ret
sbb
push
push
sbb
mov
sub
repz
rclb
fisttps
mov
test
popf
gs
push
jg
sub
stc
shll
mov
adc
das
and
cmp
repnz
divl
pop
lret
movsl
xor
cmp
fstps
into
arpl
cmc
sbb
or
leave
mov
imul
jg
mov
test
adc
je
and
xor
mov
in
aaa
dec
sti
cmpsl
ret
cmp
cmp
pop
xor
push
fstp
xor
mov
repz
aam
lahf
add
jb
rcl
xchg
dec
sub
lahf
xchg
adc
sarb
jmp
mov
or
imul
pop
in
dec
push
cwtl
gs
and
jecxz
in
popa
movsl
repz
call
jl
ljmp
lcall
xchg
rcrl
push
inc
and
or
adcl
mov
iret
ljmp
rcrl
cwtl
inc
cltd
mov
lods
mov
mov
icebp
popf
cld
add
mov
xor
lock
fbld
lea
icebp
push
add
scas
mov
and
stos
dec
xchg
xchg
out
mov
icebp
mov
fdivrl
and
pop
and
shll
inc
pop
fst
push
shrb
add
sahf
jge
test
movsl
mov
insl
cmp
fs
dec
sub
add
ds
shll
pop
mov
out
add
shr
rol
xchg
scas
add
movups
ret
or
push
out
xor
sub
xchg
js
dec
sub
add
xchg
mov
pop
xor
pop
std
fwait
xchg
loope
push
push
add
add
insl
and
decl
mov
jns
push
mov
push
leave
add
les
mov
sarb
repz
xchg
outsb
bound
mov
cmpsl
mov
fldenv
aad
jns
incl
mov
int3
mov
test
add
pushf
jmp
call
xor
loop
jae
mov
roll
jp
loope
and
loope
insb
in
xor
xor
inc
push
pusha
pop
jb
ffreep
das
je
incb
pop
dec
mov
clc
jae
xor
push
jne
sbb
xor
stc
mov
sbb
hlt
xchg
ljmp
imul
sub
loopne
pop
adc
iret
or
add
in
mov
hlt
movsl
xchg
shll
movsb
incl
lds
push
cmp
mov
add
in
xor
loop
scas
pop
jge
ficomps
xchg
mov
rclb
mov
cmp
movsb
adc
sub
xchg
jle
cmc
cmpsl
sbb
decb
aaa
xor
or
aam
jl
pop
int3
dec
loop
mov
outsb
xchg
in
xor
iret
out
scas
pushf
test
and
mov
push
xlat
ds
mov
cmpsb
jecxz
xchg
in
cmp
xchg
test
daa
xchg
pop
and
cmp
loope
xor
sub
or
or
ds
bound
pop
push
mov
push
roll
sbb
dec
ret
add
jp
xor
fistps
pop
pop
mov
js
push
inc
pop
xchg
ret
push
mov
pop
dec
sub
xor
adc
andb
test
orb
lahf
mov
sub
push
sbb
push
int
push
or
xchg
pop
cld
mov
imul
mov
gs
and
repnz
es
std
pop
mov
push
sar
push
fs
xchg
pop
xchg
jnp
data16
cmp
lods
push
cmp
push
mov
sub
or
add
into
inc
xor
cmc
loop
popa
xor
add
loop
mov
xchg
adc
mov
jmp
lods
adc
or
out
fwait
test
addr16
mov
mov
xchg
dec
pop
mov
cltd
loopne
test
push
lcall
fimuls
ss
repz
adc
mov
xlat
jne
push
sub
mov
pushf
push
ds
push
jmp
imul
aad
adc
fnstcw
dec
mov
mov
dec
int
sbb
push
jecxz
lods
in
cld
add
inc
call
sti
jg
pop
and
in
mov
dec
fistl
stos
pop
imul
inc
stos
or
mov
stos
lret
mov
cmp
ror
pop
nop
notb
push
idiv
rcrb
jns
add
mov
icebp
push
shll
mov
dec
mov
mov
lock
fldt
mov
sbb
sub
cmpsb
ret
push
testl
insl
das
push
add
pop
jnp
xchg
xor
popa
or
lods
pop
adc
loop
jo
inc
sbb
mov
cld
daa
inc
sarb
dec
cltd
aad
xlat
test
mov
cmpsl
popf
aas
clc
fwait
or
xchg
movsl
cs
mov
sahf
ror
cmp
pop
pop
out
ljmp
and
cmp
cmc
stc
cwtl
push
jo
lahf
pshufw
xchg
sub
xor
mov
scas
xchg
mov
test
dec
jo
cmp
stos
inc
mov
ja
xor
mov
add
mov
notrack
or
pop
adc
in
xchg
stos
xchg
sub
mov
aas
xor
pop
mov
adc
push
inc
xchg
dec
mov
mov
jmp
xor
mov
and
mov
jnp
arpl
fidivrs
jmp
sbbl
insb
out
sti
loopne
mov
mov
popa
sub
repz
jp
je
and
adc
pop
push
jnp
andl
call
mov
fmul
inc
mov
pop
andl
inc
xchg
dec
cltd
jae
mov
ja
pop
and
lret
push
adc
cmp
repnz
sub
lods
scas
sbb
fcoml
rclb
movsl
hlt
iret
addr16
fadd
clc
dec
leave
or
arpl
push
sub
and
push
in
push
mov
pop
stc
add
test
pop
lods
daa
sbb
mov
cmp
scas
sarl
repnz
fs
cmp
pop
loop
lahf
pusha
xchg
push
jbe
dec
jbe
xchg
xchg
jge
cmc
lea
pop
mov
aaa
in
loopne
movsl
and
jno
xor
jmp
push
push
sbb
sub
arpl
jecxz
push
test
mov
push
adc
and
imul
xor
daa
xchg
imul
adc
xchg
sub
pusha
pop
cmp
out
movsl
cmpsb
mov
or
sbb
adc
xor
jbe
or
inc
js
gs
vpmulhw
ss
push
testl
sub
cmp
adc
pop
cmp
mov
xchg
xchg
and
adc
int
sub
stos
lahf
lcall
enter
dec
sbb
add
test
push
out
adc
aad
mov
pop
lods
stc
aas
fstpl
pop
adc
adc
lock
ret
sub
mov
add
add
stos
xor
jecxz
cmp
mov
or
cmp
cmc
test
fisttpll
roll
daa
pop
mov
popf
xor
adc
mov
push
cmpsw
outsb
les
fisubrs
in
out
mov
jns
in
or
data16
fsubrl
sarb
jae
out
mov
cltd
inc
les
je
sbb
xchg
sbb
call
mov
sub
dec
jg
in
lret
push
int3
jmp
jecxz
cs
imul
mov
jecxz
pop
frstor
inc
cmpb
je
jo
jecxz
mov
lcall
xchg
pop
jmp
imul
inc
popw
pop
push
add
inc
mov
ret
mov
mov
in
cwtl
rcrl
ja
std
jns
pop
cwtl
mov
fdivs
sahf
jl
icebp
aas
mov
cld
pop
fistpll
lret
or
test
jnp
cmp
das
imul
sub
inc
aam
test
ret
in
int
sub
add
bound
dec
jge
add
pop
or
lods
enter
xchg
cmp
push
xchg
pop
sbbb
or
cltd
or
imul
add
fstl
arpl
in
test
shll
push
lock
or
push
out
xchg
test
xor
bswap
xchg
pop
add
nop
sub
mov
xor
sti
popa
xor
les
adc
imulb
mov
or
in
fwait
out
pop
leave
push
xchg
cmp
dec
add
bound
xor
xchg
jns
pop
mul
addr16
fidivl
inc
push
mov
ja
xchg
orl
gs
mov
sbb
jne
push
mov
inc
cmpsl
out
inc
cmpsb
stos
bound
add
cwtl
loop
xchg
pop
mov
subl
js
jo
push
addr16
jmp
and
jb
jnp
jns
jle
jge
in
cmp
pusha
mov
filds
pusha
adc
pop
mov
cli
adc
cmpl
inc
pop
popf
addb
mov
push
lcall
cwtl
lahf
sbbb
mov
scas
jg
icebp
push
outsb
pop
cmp
and
dec
ret
popf
leave
jg
cmp
cmp
push
arpl
lods
adc
cmc
ds
inc
cltd
adc
pop
fiaddl
and
push
jge
int3
mov
aad
ficomps
mov
je
jl
leave
rorb
mov
repnz
loope
jmp
pop
in
push
lds
dec
jbe
negb
jge
sarb
adc
fisttps
cwtl
ret
xchg
jno
mov
orb
orb
xchg
out
fistps
jo
addr16
scas
pop
pop
out
jbe
pop
test
insl
test
cmpsb
jmp
pop
cmp
daa
xchg
cli
or
mov
dec
int3
sub
pop
xor
imul
fisubs
push
cs
sub
and
test
enter
fnsave
xlat
push
not
lret
mov
pop
stos
sti
mov
pop
add
sbb
push
dec
insl
sbb
fsubrp
push
sub
add
es
cmp
jnp
incb
xorb
jae
out
repz
mov
push
and
int
lods
mov
pop
cli
dec
dec
lcall
mov
pusha
into
sahf
push
push
mov
xor
les
mov
mov
nop
add
testb
adc
pop
insl
ss
nop
jmp
xchg
mov
mov
jae
adc
hlt
pop
mov
cmp
gs
or
add
into
or
mov
jo
xor
aad
mov
std
jo
rcr
add
xor
data16
jecxz
testl
int
ret
add
js
or
movsb
jecxz
gs
repz
loopne
xorb
xchg
into
add
clc
cmp
cmpsb
nop
je
sub
fists
adc
out
cmp
ja
xlat
repz
loopne
pop
mov
adc
pushf
test
lahf
les
xor
xchg
xchg
stc
test
jbe
xchg
inc
xchg
lock
mov
xchg
mov
test
stos
xor
add
push
stc
add
pushf
sbb
sbb
dec
scas
imul
mov
and
jmp
inc
xlat
cli
mov
jb
cmc
js
inc
sbb
and
shll
shrl
negb
cmpsl
cwtl
jb
xchg
mov
cmp
mov
dec
int3
cld
xchg
xchg
lret
ja
xchg
mov
jno
lock
dec
ljmp
jb
in
aam
ja
ret
jae
fisubs
stos
lds
std
push
inc
dec
js
jle
xchg
push
add
cmp
js
ss
xor
ret
lea
jbe
mov
fcompp
shl
test
sbb
xchg
xlat
push
sub
pushf
sar
adc
xchg
and
ljmp
mov
mov
dec
stos
int
pop
out
jmp
adc
push
sub
add
pop
xor
fucomi
mov
and
pusha
dec
xchg
lahf
xchg
out
and
inc
loope
sahf
or
out
fwait
push
fyl2xp1
push
cmp
arpl
mov
shrb
vmwrite
pop
mov
xchg
and
adc
mov
add
fdivs
push
dec
outsb
or
mov
add
arpl
jle
mov
adc
shr
in
scas
bound
mov
stos
mov
imul
sub
push
xchg
xor
lds
out
popf
and
std
insb
cs
test
jle
push
test
rolb
pusha
sub
arpl
and
xchg
ja
push
pop
icebp
in
inc
lods
sti
xchg
xchg
ret
sub
popf
cmpsl
ret
inc
push
mov
stos
adc
test
cld
or
cmpsb
jl
loop
sub
mov
adc
mov
iret
and
rolb
xchg
test
or
mov
shll
or
out
jns
mov
dec
pop
fiadds
xchg
mov
sti
adc
in
ss
stc
ljmp
mov
loopne
adc
arpl
lret
out
jge
mov
aaa
arpl
jno
arpl
jl
ret
das
and
add
jo
cmp
and
sbb
in
sub
push
cmp
inc
cmp
jo
insb
mov
insl
enter
daa
xchg
movups
aam
in
loope
nop
pop
sub
das
aas
cmp
nop
jbe
pop
jg
movsl
mov
push
lock
adc
mov
sbb
imul
cmpl
mov
pop
pop
shll
js
cmp
or
push
movsl
mov
out
sub
xchg
push
outsb
sbb
inc
adc
adc
fisttpll
ret
hlt
loopne
je
shll
mov
and
xor
jge
es
jns
push
lcall
pop
mov
or
subl
or
out
test
inc
orb
jg
nop
shlb
les
inc
adc
repnz
adc
ds
fcomp
divw
inc
push
lret
or
cmp
out
or
lahf
into
out
sbb
xor
shlb
dec
mov
imul
cmc
imul
enter
cs
jo
mov
mov
jecxz
push
sti
arpl
loop
outsb
sub
negb
and
popa
pop
jp
or
fcmovnb
mov
jns
stc
icebp
inc
xchg
lahf
leave
ljmp
shl
xlat
xor
popa
adc
cmc
sbb
and
push
cs
or
aad
xorb
into
cmp
test
jns
xor
push
je
or
rol
stos
mov
call
js
xchg
pop
dec
daa
xor
cltd
lret
mov
nop
sub
repz
inc
repnz
ja
std
add
jb
insl
idivl
sti
enter
faddl
fbld
sahf
std
movl
pop
mov
jo
mov
pop
cld
mov
outsb
lret
out
mov
or
lock
mov
imul
ret
add
es
insl
in
or
mov
cmpsl
nop
sub
popa
dec
pop
ljmp
push
xchg
mov
cmp
dec
mov
pop
aas
arpl
mov
rcrl
xchg
jmp
mov
fcomp
push
lock
scas
clc
dec
rolb
fadds
rcl
out
push
pop
pop
mov
sub
pop
push
add
cmp
lea
int
ret
or
leave
mov
mov
es
dec
leave
fs
xchg
out
inc
js
pop
or
mov
cmp
fldl
add
fnstcw
inc
and
jns
sti
js
jge
lock
outsl
pop
and
xchg
inc
mov
adc
ja
ret
popa
cmpsb
xchg
mov
leave
call
mov
lea
sbb
mov
or
add
imul
sub
xchg
mov
add
sahf
out
and
sub
push
stos
push
addr16
jp
data16
xor
popa
jnp
mov
jle
cmpl
xor
pusha
les
xchg
dec
mov
pop
sub
loopne
mov
inc
jae
jecxz
push
addl
fs
shlb
imul
stos
and
imul
mov
adc
sbb
ret
hlt
leave
insl
mov
hlt
shrl
movsb
arpl
faddl
cmc
pop
or
cmp
aad
cmp
fisubrl
sahf
in
mov
rcrb
jle
fisubs
cmp
sar
xor
dec
jl
cmp
test
loop
jbe
adc
ret
sbb
std
jge
jle
xor
das
inc
jl
loop
dec
sahf
pusha
es
cli
fs
xor
cmp
pop
scas
sbb
pop
test
add
dec
inc
lret
cmpsb
out
in
xlat
int3
push
jo
jp
nop
test
cmp
sahf
pop
loope
idivl
cmp
ds
ds
cmp
mov
mov
lahf
push
ljmp
sbb
stc
xor
cmp
push
cs
clc
aad
js
pop
pop
cmpb
push
cld
sub
fdivl
pop
outsb
jle
aas
adc
out
aas
decl
inc
orl
fs
push
push
sub
inc
sub
stos
add
clc
sbb
rol
or
push
sahf
scas
loope
test
lea
je
mov
cwtl
cltd
stc
fs
fs
pusha
xchg
adc
jmp
std
fcomps
ffreep
lret
scas
clc
iret
cmp
cmp
ficoml
or
xor
pop
xchg
outsl
jo
enter
mov
addb
add
std
in
data16
subb
or
out
imul
mov
pop
sub
adc
ljmp
loopne
iret
adc
adc
xor
js
inc
mov
or
xchg
bound
sbb
cltd
shrl
jno
cmp
inc
xchg
adc
dec
jne
incl
testl
nop
inc
push
fadds
cld
sbb
je
fldenv
jecxz
push
pushf
or
in
imul
and
neg
mov
pop
add
fwait
orl
test
shl
cmp
inc
in
pop
mov
aas
pushf
and
mov
xchg
xlat
rorl
stc
dec
mulb
movsl
stos
std
outsb
sbb
call
sub
mov
add
faddl
jl
push
inc
push
mov
adc
mov
shlb
cmp
or
jle
pusha
or
ret
xchg
sarl
lret
out
dec
outsb
repz
cmpsl
popl
and
sbb
or
mov
shll
lods
and
fsubs
cmp
js
push
rorb
cmpsb
jl
lahf
aas
mov
pop
pop
add
aad
fisttpll
pop
fprem
xchg
lret
xchg
mov
dec
push
shll
jb
pop
or
cld
stos
stos
cmp
xchg
adc
pop
paddsb
flds
loopne
mov
xor
dec
into
mov
sub
or
aaa
inc
mov
inc
punpckhbw
or
gs
fwait
jl
jge
cmpb
add
xor
jmp
cmp
imul
in
sbb
xchg
mov
or
cmp
jg
push
sahf
orl
dec
mov
mov
mov
adc
sbb
loop
mov
pop
mov
filds
add
jge
arpl
mov
push
sub
dec
push
mov
jp
leave
inc
and
mov
add
add
push
sub
hlt
lret
in
ret
pop
dec
pusha
fistps
add
sbb
xor
inc
ret
jae
jns
push
inc
push
inc
popf
cmc
bnd
mov
sub
adc
sbb
popf
pop
mov
imul
rclb
mov
iret
jecxz
push
leave
in
add
sbb
scas
arpl
popf
inc
mov
repz
mov
mov
mov
and
add
or
push
cld
mov
or
rcrb
in
mov
lahf
inc
cmp
cmp
mov
stos
jbe
rclb
jge
mov
xchg
aaa
loope
cld
or
scas
jno
and
jb
or
or
mov
int
xchg
mov
mov
test
into
imul
pop
cmpsl
mov
in
mov
in
add
pop
loop
cmp
jp
outsl
sbbb
dec
mov
ds
movsl
ret
and
or
push
repnz
sbb
test
jns
adc
in
pop
sbb
js
or
shrl
mov
movsb
push
push
shr
fistpll
sub
inc
dec
adc
leave
push
int3
sub
and
bound
mov
sbb
and
aas
push
sub
movsb
int
frstor
jae
push
pop
ja
and
pop
push
bound
adc
mov
or
pop
jg
pop
mov
adc
aas
stc
sbb
fs
sub
ss
dec
cmp
push
hlt
jns
mov
inc
lret
push
xor
fs
into
mov
out
lds
outsl
dec
insb
mov
jae
ret
imul
aaa
add
sbb
lods
cwtl
xor
lret
out
imul
mov
mov
sbb
decb
nop
add
sub
cmp
out
mov
adc
jp
jecxz
loopne
xchg
sbb
push
sbb
aam
xlat
mov
shrl
mov
mov
pushf
stos
call
inc
cs
jge
aad
sarl
and
inc
dec
xchg
xchg
dec
and
inc
je
stc
pop
jecxz
push
cmc
lea
movsl
call
jbe
ret
pop
mov
in
loopne
repz
outsl
or
ds
pop
lcall
inc
sub
aas
cmp
jb
negl
imul
rcrl
mulb
jno
adc
das
aam
shrb
push
lahf
icebp
fwait
out
cld
pop
pusha
insb
lret
out
mov
bound
mov
jle
lock
leave
nop
das
out
insb
mov
push
lods
aam
xor
mov
test
dec
imul
mov
sarl
popa
jnp
xchg
lods
je
lods
mov
negb
and
jae
loopne
xchg
or
int3
cltd
call
out
mov
cmp
jnp
fnsave
adc
clc
ret
xchg
loopne
in
lock
push
pop
mov
push
stos
lcall
xchg
pop
movsl
stos
push
mov
lret
cmovnp
add
lds
push
xchg
push
xor
jle
mov
sub
dec
xchg
negl
xchg
jae
inc
cmpsb
or
lret
fwait
stos
mov
push
and
imul
add
mov
mov
sub
xchg
or
sbb
mov
xor
ja
decb
dec
inc
cli
dec
mov
mov
les
daa
xor
mov
out
mov
aaa
lcall
cmp
in
mov
hlt
aam
sub
dec
adc
jns
jp
loopne
and
shrl
inc
jnp
clc
xchg
pop
shl
out
sbb
cli
sbb
adc
xchg
rcll
int
sbb
push
lock
pop
xchg
cmp
icebp
std
rcll
mov
hlt
mov
sbb
ljmp
or
push
mov
mov
iret
inc
addb
pop
push
gs
imul
inc
lds
adc
addb
imul
lods
dec
push
int3
fs
and
ss
jmp
push
lds
lahf
adc
repnz
lds
push
jle
push
add
lret
and
sbb
ret
mov
dec
cmp
xor
jo
jl
sti
push
rolb
xor
icebp
pop
cld
scas
cmp
and
add
test
cltd
pusha
xchg
in
cmpsb
cmc
xor
in
movsl
or
daa
mov
cmp
jbe
xchg
test
stos
fwait
mov
and
mov
leave
lods
lds
rcrl
sbb
bound
adc
xlat
jns
pop
inc
inc
jge
pusha
pop
push
pop
add
push
xchg
sbb
jp
fmull
flds
outsb
inc
imul
movsb
movsl
inc
jp
or
fxch
ja
sbb
and
cmp
lret
sub
std
fldl
idiv
into
lcall
xchg
mov
adc
ret
test
sahf
hlt
scas
inc
test
out
add
inc
mov
rcrb
pusha
adc
adc
cmp
setns
lret
popf
xor
cs
popa
jmp
mov
xchg
cmc
mov
push
xor
shlb
push
lahf
sub
adc
or
add
fwait
ss
mov
test
insl
jmp
cli
cltd
out
iret
mov
and
dec
sti
jo
pop
xor
scas
loopne
insb
jbe
push
addr16
adc
inc
js
mov
sub
shlb
repz
sbb
subps
out
cld
ljmp
scas
in
pushf
push
and
mov
jbe
nop
sti
xlat
aas
dec
bnd
inc
loope
test
mov
push
push
bound
in
stc
and
cmc
xor
xorl
icebp
fldt
pop
sbbl
popa
movl
jp
jb
or
and
mov
mov
std
mov
jns
mov
sub
mov
loope
jb
nop
cld
xor
and
pop
mov
out
das
and
stc
sub
rcl
jle
fwait
ret
scas
and
mov
pop
insl
cltd
or
fs
hlt
mov
xchg
jbe
lods
fcomip
mov
mov
dec
sbb
mov
mov
xor
cltd
pop
xor
mov
xor
cmp
sar
std
enter
es
arpl
or
pop
pusha
jg
out
jne
dec
xchg
lahf
repz
lret
das
rsm
mov
mov
xor
or
mov
das
add
test
psraw
jne
jo
cmp
xor
les
jp
add
sub
jmp
enter
mov
in
push
xchg
xchg
pop
xor
mov
in
and
dec
cmp
fstpt
fwait
cmp
jne
test
mov
leave
xor
popf
sub
push
push
and
imul
push
out
ja
jae
mov
sub
inc
pop
adc
mov
cmp
js
scas
insb
fimull
jnp
shll
mov
in
adc
xchg
add
popf
push
call
pop
int
pusha
inc
fadds
jae
jo
push
lret
popf
inc
mov
mov
push
in
loopne
dec
xchg
dec
fisttpll
sbb
mov
movb
shl
sub
imul
ret
int
rclb
arpl
test
fistpl
push
mov
enter
push
add
aas
int3
dec
ret
and
mov
xchg
lds
rcrl
test
push
andl
test
jge
jno
sbb
or
push
je
jno
outsb
aaa
jl
cmp
push
mov
push
shlb
popf
scas
mov
mov
ljmp
fs
jae
js
xchg
in
mov
enter
daa
lea
and
adc
loop
ds
pop
mov
pop
inc
dec
lahf
lds
push
push
cwtl
leave
rcrl
cmp
add
and
xchg
call
lcall
js
fisubrs
aas
push
ret
push
mov
add
fdivl
js
outsb
cmpsl
mov
inc
inc
jle
jg
lds
vmwrite
mov
sub
and
stos
and
xor
pop
jne
xchg
lcall
adc
mov
sahf
xchg
orl
cwtl
aaa
jg
fidivs
mov
fs
cmp
test
ss
ds
lret
imull
lds
mov
icebp
xor
or
xor
daa
lock
into
jnp
loopne
push
stos
xor
out
outsl
or
push
and
lcall
mov
sub
mov
push
xchg
out
icebp
scas
cli
int3
adc
mov
into
cld
sti
pop
mov
push
jnp
gs
outsl
loopne
fnstenv
sub
cmpsb
fcmovu
call
das
add
xchg
stos
aam
sbb
dec
pop
ja
sarl
lcall
pushf
add
jmp
mov
and
aas
nop
lods
jns
push
jae
inc
hlt
adc
dec
push
push
jl
pop
ss
hlt
pop
shufps
dec
lea
fsubl
data16
je
jl
sbb
orl
xchg
add
pop
inc
dec
pop
loopne
adc
pop
stc
dec
inc
pop
ficoms
stos
cmp
push
xchg
daa
out
shl
in
imul
out
std
arpl
mov
mov
div
dec
pop
hlt
cld
pop
cwtl
mov
mov
loopne
mov
es
stc
and
inc
mov
inc
aam
insl
mov
ds
es
loopne
subb
pop
xor
cmpsl
mov
sub
fcmovnb
lods
dec
std
loope
stos
jmp
xor
test
jmp
rolb
inc
es
push
outsl
cmp
andl
andb
clc
cmp
inc
ljmp
test
gs
js
mov
fcom
sbb
push
insl
es
or
out
add
movsb
push
or
lret
xor
in
mov
xor
mov
sbb
pusha
arpl
sub
cli
inc
aam
mov
fwait
or
test
add
inc
xchg
in
incl
mov
fs
jns
out
in
insl
cmc
xchg
stos
stos
xor
sub
movsl
dec
ja
dec
or
push
mov
mov
pop
xor
jo
aaa
inc
cmpxchg
xchg
jl
xor
jecxz
int
bound
mov
sbb
repnz
add
cli
push
ljmp
ret
pusha
addr16
test
and
or
ja
lock
add
pusha
xor
mov
xchg
xchg
push
pop
add
xchg
inc
jecxz
or
shlb
lea
popf
push
or
into
outsl
cmpsb
stos
push
lret
mov
add
push
cmp
roll
push
adc
iret
add
ret
mov
hlt
std
stc
cltd
arpl
inc
xchg
adc
and
data16
je
mov
int3
cmp
pop
cmc
fidivs
inc
jno
sahf
or
imul
dec
gs
leave
cmp
pop
shld
lahf
jae
jbe
ret
aaa
movsb
push
ja
ds
push
or
dec
dec
xor
lret
hlt
jl
stos
test
pop
bnd
xchg
xor
cmpsl
leave
pop
scas
xchg
in
sub
test
das
inc
loop
push
das
adc
jae
sub
pop
mov
cmp
push
lret
loope
sti
add
xorb
ds
test
shll
idiv
rcrb
imul
sbb
lret
inc
sbb
pop
xchg
sub
cmp
clc
out
pop
jle
pop
push
aas
cltd
push
pop
pop
push
fsub
jg
sub
push
outsb
or
arpl
pop
pop
enter
mov
mov
cmpsl
mov
xor
and
xchg
push
int
adc
in
into
pop
hlt
call
add
pop
dec
mov
scas
mov
cmp
mov
push
cmpsb
jg
sub
stc
inc
cld
pusha
outsl
jp
adc
add
cmp
test
mov
cmpsb
aaa
jle
or
fisttpl
xchg
imul
pop
add
sbb
pop
lods
xchg
outsl
in
jae
loop
ds
imul
and
dec
ret
data16
aam
dec
jp
mov
jnp
cli
in
mov
sbb
in
cli
mov
jb
jbe
dec
gs
mov
loopne
pop
ficomps
lret
push
adc
test
call
frstor
cmp
fxch
cmp
sub
adc
es
stos
or
jmp
sbb
or
aad
or
lahf
dec
mov
xor
pop
test
je
push
jecxz
cmp
stc
lea
pushw
repz
pop
into
in
in
movsl
xlat
and
cmp
pop
andl
jns
jne
sbb
pop
jb
int
mov
mov
mov
inc
adc
cmp
cwtl
aam
adc
std
cmp
adc
and
data16
mov
lret
adc
mov
stos
mov
lock
repnz
das
test
adc
cmp
xor
adc
fwait
ret
int
xchg
es
mov
cmp
insb
jo
popa
shlb
fsubl
mov
pop
mov
mov
hlt
pusha
stc
rcl
push
lods
test
xlat
xchg
mov
sbb
frstor
std
mov
ljmp
and
test
cmp
movsl
xchg
sub
xchg
mov
add
lahf
or
push
and
xor
add
test
inc
xrelease
pop
mov
inc
imul
or
push
sbb
or
repz
pusha
fstpl
filds
xor
mov
jmp
mov
adc
mov
arpl
dec
and
cwtl
mov
mov
pop
mov
xchg
xchg
dec
rclb
jne
dec
outsl
mov
pop
pusha
out
pop
jecxz
bound
leave
jmp
out
push
xchg
or
jge
jecxz
rcrl
cmp
clc
jp
pop
mulb
cmpsb
mov
insb
mov
jo
mov
mul
cld
out
in
pusha
lret
add
xchg
imul
pop
inc
out
in
jae
js
push
push
pop
rcrb
mov
or
stos
movb
stc
icebp
add
dec
loope
inc
outsb
mov
xor
es
pop
icebp
lcall
outsl
xor
nop
lock
rolb
arpl
arpl
push
mov
cwtl
fisubl
stc
xor
jno
pushf
int3
and
or
aam
fadd
and
or
out
loop
jmp
lret
cmp
pop
mov
push
out
ror
push
dec
mov
sbb
cmp
aaa
fstl
or
dec
js
push
out
fmull
rcrb
lahf
scas
xor
add
and
mov
push
cli
ss
inc
xchg
cmp
cmpsb
jle
or
pop
adc
enter
cli
cmp
ja
loope
push
imull
jnp
cmp
and
ds
daa
lret
movsl
fisubrs
and
std
jle
ds
cld
add
imul
pop
mov
cmpsl
cmp
mov
mov
or
mov
sub
adc
lahf
adc
xor
outsl
or
ds
mov
mov
and
in
or
ljmp
jae
pop
lcall
lods
mov
inc
fcomps
push
push
sahf
fisttpll
stc
test
dec
popl
das
and
mov
mov
pop
fs
xchg
push
adc
loopne
shll
inc
pushl
lret
jb
loop
inc
cmp
push
outsb
or
cmpsl
jns
loope
sbb
mov
rcrl
mov
mov
adc
mov
iret
mov
lods
xor
push
mov
mov
mov
gs
sti
jge
push
cltd
std
jle
add
imul
movlps
push
fsts
dec
repz
shll
sbb
rcrb
xlat
lods
or
adc
mov
stos
cs
jbe
sub
nop
mov
mov
dec
cld
push
je
ret
adc
pop
cs
stc
pushf
add
pop
sti
outsl
jb
inc
pop
xorl
test
sbb
mov
push
outsb
inc
imul
mov
mov
adc
cld
and
outsb
push
xchg
xor
jno
xchg
std
mov
ret
into
cwtl
mov
mov
mov
add
icebp
negl
cld
mov
lret
adc
pop
cs
mov
pop
in
lock
shlb
arpl
mov
xor
ret
pop
js
es
outsl
jmp
dec
jmp
mov
mov
xlat
adc
lods
and
push
mov
add
adc
or
cmpsl
mov
inc
test
iret
aas
mov
icebp
xchg
push
sbbb
clc
scas
cmc
mov
fcoml
daa
ljmp
out
pop
popa
int
stos
push
mov
pop
xchg
je
push
push
and
or
add
push
orl
sarl
and
xchg
out
dec
xor
cmp
xchg
cmc
inc
add
loop
jbe
dec
fwait
addr16
movsb
push
scas
inc
nop
add
jnp
or
jle
ja
or
jns
xor
xchg
dec
imul
mov
push
addr16
or
jle
adc
jb
dec
push
lcall
mov
dec
mov
sub
mov
cmp
cmp
jmp
mov
mov
add
dec
or
mov
jp
inc
jns
mov
xchg
jnp
mov
jle
jbe
in
je
pusha
data16
cli
shlb
cld
sub
scas
sub
xchg
jae
bound
adc
fistpl
ljmp
imul
push
mov
sbb
push
test
cmpsb
add
adc
sbb
mov
cs
aaa
aaa
dec
hlt
xchg
fiaddl
lcall
or
sbb
inc
xor
jecxz
or
int3
adc
mov
fidivs
clc
lds
sarl
ds
cmp
in
push
cmp
push
fwait
jge
mov
sbb
mov
aaa
pushf
movsl
aad
xor
cwtl
jno
lock
or
cmp
push
dec
mov
mov
pop
mov
scas
push
scas
add
push
fmul
test
lds
inc
and
jnp
add
in
inc
ss
fsts
cmp
mov
loope
push
push
sub
sbb
loope
movsb
ds
push
movsl
in
inc
and
clc
push
push
adc
sbb
je
pop
or
jecxz
cmp
js
jmp
lea
mov
neg
ss
jle
dec
in
fsubrl
cwtl
aaa
adc
adc
div
jmp
mov
notrack
mov
mov
add
ficoml
enter
mov
dec
mov
into
sbb
sbb
cmpb
orb
cmc
jg
sbb
jns
scas
in
movsl
fs
jmp
ss
ja
iret
addr16
imul
mov
std
xor
sahf
cmpsl
or
into
and
pop
cmc
test
scas
xor
mov
loop
lods
adc
jne
adc
jp
add
into
inc
test
lods
sbb
push
mov
sbb
cli
gs
push
rorb
scas
sti
sub
and
mov
mov
lret
aas
push
adc
add
sbb
repz
pop
je
dec
and
sti
cmp
jmp
cmp
adc
pop
mov
jmp
push
mov
aad
xor
cmpsl
outsl
dec
outsb
je
inc
sub
in
shlb
in
jecxz
leave
add
sbb
lea
pop
call
icebp
movsb
add
adc
mov
test
mov
scas
and
push
push
and
mov
enter
in
ret
divb
ret
push
push
mov
pop
adc
into
adc
cld
fisubs
call
mov
mov
or
mov
mov
sub
aam
mov
lcall
cld
lods
dec
push
test
std
mov
out
loop
lods
mov
pop
mov
movsl
outsb
and
jp
sub
sarb
stos
cltd
sti
sti
ja
loope
mov
push
cmp
test
clc
jmp
sbb
shll
jp
pop
or
pop
stos
inc
mov
add
mov
push
scas
xor
es
add
repnz
addr16
jne
mov
cmp
dec
lcall
xchg
lcall
cltd
dec
mov
fwait
xchg
jb
push
push
insl
mov
xchg
test
int3
xor
adc
push
pop
in
mov
xchg
cwtl
scas
clc
mov
dec
push
pop
fldenv
pop
dec
push
lcall
mov
jns
stos
cltd
out
xchg
xchg
jnp
mov
aaa
xchg
sbb
jae
inc
mov
xchg
jge
push
subl
add
das
addr16
addr16
loopne
and
les
xchg
cmpb
lret
jle
lahf
in
pop
dec
pusha
add
fistps
ljmp
pop
test
aam
jae
nop
inc
push
mov
popf
mov
mov
xlat
stos
lods
dec
insb
xchg
cmpsl
xchg
sbb
pop
cli
imul
popa
scas
cli
jnp
push
in
jnp
adc
aaa
jp
sbb
mov
mov
fmulp
stos
arpl
mov
add
dec
xor
xchg
fimull
add
int3
sti
es
pop
subb
sbb
add
xor
pop
sarb
repnz
and
mov
sub
jge
xchg
sbbb
insb
jecxz
pop
mov
sub
jl
repz
cmpsl
test
push
xor
mov
adc
imulb
nop
adc
inc
mov
sub
sub
mov
daa
mov
cmp
loope
mov
mov
nop
jne
ds
add
movsl
in
mov
enter
inc
imull
push
in
jg
xchg
dec
cmp
xor
neg
cmpsb
movsb
fwait
pop
or
js
mov
add
test
fsub
notl
outsb
xor
push
shr
add
sbbb
mov
inc
mov
inc
aas
and
stos
cmp
cmp
dec
cwtl
sub
test
lcall
mov
test
scas
sub
sahf
and
test
or
mov
popf
aam
gs
scas
fs
lret
adc
push
ss
gs
cmp
mov
mov
lret
push
xor
mov
fs
pop
lret
xor
outsl
inc
lock
fldt
lahf
ret
xor
inc
push
js
jecxz
pop
add
mov
mov
mov
sti
cli
cwtl
mov
mov
cmp
sti
fildl
mov
fisttps
gs
push
or
into
push
stos
pop
test
xor
fld
and
xchg
jno
insb
xchg
mov
in
sbb
ss
xlat
sub
data16
pushf
lods
mov
pop
lods
scas
push
aad
fst
nop
inc
int
dec
int
xlat
inc
inc
or
fbstp
nop
jecxz
jne
sbb
in
add
push
loopne
jo
lcall
std
or
fistpl
jl
pop
insb
in
or
aas
jnp
lret
aas
cmc
xchg
push
jb
ja
mov
push
inc
aam
xor
cmpsb
div
jmp
std
lcall
out
cmp
push
icebp
movsl
jmp
cld
or
sub
pop
mov
cltd
mov
and
mov
and
arpl
and
stc
aam
adcb
popf
enter
sub
repz
dec
clc
fsubs
add
fcom
lods
divb
mov
enter
jo
dec
mov
push
fdivs
rorb
cld
cltd
xor
mov
in
mov
push
or
xor
sbb
daa
clc
and
test
mov
stc
pop
mov
jns
xor
adc
fs
pop
push
fstps
jne
rcrb
call
mov
push
xchg
insb
fimuls
adc
test
outsb
aam
mov
push
sbb
sti
arpl
push
or
cmp
fwait
lds
and
cmc
mov
add
mov
clc
mov
jne
jns
adc
xchg
out
inc
mov
sbb
mov
xchg
js
ja
adc
dec
stc
aad
mov
idivl
mov
mov
sbb
dec
jns
imul
jne
pushf
inc
out
out
clc
adc
bound
jmp
lea
int
out
into
mov
sub
cmpsb
addr16
das
mov
jmp
cmpsb
insb
icebp
push
leave
jnp
cs
icebp
mov
push
pusha
pushf
cltd
jno
cmp
xchg
loop
fstpl
hlt
xchg
inc
bswap
inc
jae
add
popf
push
stos
addr16
lret
stos
pop
fsubrl
xchg
sahf
or
and
scas
pop
pusha
aam
xor
mov
mov
movsb
iret
jl
xchg
ret
lock
and
or
inc
lahf
adc
mov
adc
in
xor
push
fiaddl
stos
add
ret
sbb
out
or
fidivrs
sbb
les
repnz
out
ret
movsb
cwtl
jg
jbe
scas
sarb
push
sbbb
in
aaa
sbb
or
mov
pop
jl
mov
dec
push
les
xor
adc
xor
dec
test
pop
add
inc
inc
icebp
adc
mov
enter
daa
mov
cwtl
cmp
inc
sbb
sub
cwtl
cmp
inc
jmp
movsl
repz
and
loop
pusha
cli
repz
mov
inc
sbb
imul
jb
outsb
xor
js
imul
js
sub
pop
jp
sahf
push
add
push
mov
aaa
fmull
ret
outsl
adc
mov
mov
sbb
mov
cwtl
dec
and
lret
inc
mov
int
iret
dec
sub
repnz
lock
sarl
mov
in
sbb
xor
sahf
negb
test
jo
or
int
pop
sbb
in
fwait
aam
adc
push
mov
cmp
jno
pop
imul
cmp
pushf
xor
jnp
lret
or
jo
ljmp
xor
xchg
hlt
outsl
push
in
jge
cmp
jecxz
scas
sub
add
aas
lods
jmp
int3
shl
addr16
jecxz
lret
pop
lds
cmpsb
stos
jmp
incb
out
gs
and
pop
enter
int3
xchg
sbb
les
push
repz
xchg
movsl
xchg
jp
call
cmp
cmpsb
xlat
imul
ficompl
adc
jle,pn
seto
mov
push
dec
es
popa
je
or
jecxz
gs
and
jge
cs
pop
call
out
jne
pop
lcall
dec
fdivl
fisttpl
inc
pop
cmovae
in
inc
aas
xchg
fisubrl
jb
ret
sbb
push
shll
cs
idivb
sysret
std
cmpsb
int
cwtl
rclb
stc
nop
repz
jno
icebp
jl
jge
xor
mov
int
loop
add
mov
lahf
pop
lock
das
add
mov
sbb
inc
aam
xchg
sbb
es
cmp
insl
add
mov
cmpsl
xchg
stos
mov
sbb
adc
xor
fsubs
mov
xchg
pop
jo
sub
cltd
imul
daa
mov
adc
fldl
ja
pop
push
mov
ljmp
mov
lcall
out
xchg
leave
xchg
dec
std
push
mov
arpl
in
add
or
mov
and
mov
inc
dec
push
movsb
jp
das
sub
incb
fs
or
test
fwait
hlt
subb
cwtl
sahf
push
add
int3
lds
pop
inc
or
add
lahf
jns
jne
in
fisubrs
xchg
ss
cmpsb
mov
dec
fcomip
ja
or
dec
in
sar
repz
mov
shll
cmp
and
xlat
subb
xor
or
or
ljmp
push
sbb
and
sub
in
shlb
add
insb
pop
ja
jnp
ja
adc
push
in
pop
loopne
aaa
hlt
cmp
push
xchg
pop
pop
push
or
jae
mov
push
pop
sbb
popf
sub
lret
or
pop
xchg
push
lret
iret
sbb
mov
add
jnp
icebp
adc
nop
inc
ret
adc
pushf
sbb
adc
push
incb
jecxz
or
mov
push
inc
scas
fadd
cmpsl
and
int
int
rcl
cmp
fstps
lds
shl
sbb
repnz
mov
mov
push
sub
mov
std
sbb
lock
fldcw
or
push
or
mov
jl
inc
pop
dec
test
fidivs
outsb
roll
out
ret
and
mov
ret
inc
popl
or
cmpsb
mov
in
div
mov
inc
and
daa
xchg
ja
daa
jmp
sub
jmp
jnp
jge
mov
and
aad
lahf
jg
popf
push
mov
sbb
jmp
or
sub
icebp
pop
push
inc
sarb
daa
sbb
mov
cmp
or
aaa
roll
sbb
outsb
stc
cmp
adc
mov
xchg
dec
addb
dec
mov
inc
fisubl
jmp
push
push
inc
loope
int
cmp
pop
outsl
inc
xchg
lcall
stos
mov
lret
orl
pop
cmp
stos
sub
mov
dec
stc
shll
sub
pop
add
repnz
sub
push
test
or
and
xor
rcll
cmp
jge
or
push
add
int
mov
std
imul
and
jnp
loop
ficompl
adc
inc
add
cmp
mov
jmp
ret
mov
adc
clc
and
mov
lods
pop
out
fcoml
lahf
das
pop
fnstenv
pop
jge
pop
mul
xor
sbb
lods
cs
xlat
test
fisubrl
dec
imul
pushf
add
pop
jmp
cmp
pusha
out
aad
pop
push
dec
mov
push
dec
fmuls
je
int3
jne
dec
cltd
ret
and
fucomip
dec
adc
pop
dec
dec
dec
sbbl
mov
pop
mov
insl
inc
test
cmc
aas
xor
movsb
jb
inc
sarl
insb
rcl
shr
push
std
dec
out
cwtl
jnp
es
out
int
add
cld
pop
and
cmp
dec
mov
cmp
mov
jl
lock
das
scas
mov
bswap
pop
aam
add
cwtl
shrb
es
adc
insl
ljmp
cmpsl
xchg
adc
xor
shrb
mov
jle
sbb
dec
dec
pop
pop
out
shl
sbb
add
cld
adc
stc
add
xchg
fdivrs
ljmp
nop
pop
or
mov
out
sub
xchg
nop
pop
mov
jmp
cmovae
add
push
mov
mov
inc
ret
iret
loop
test
insl
sahf
xchg
leave
les
es
or
mov
movsb
push
cmp
in
add
jno
cli
int
xor
fs
jle
in
lock
xchg
test
xchg
mov
push
xchg
mov
or
ja
or
mov
sub
mov
clc
loope
dec
aas
hlt
cmpsl
jne
xor
push
fsubr
mov
push
bound
add
sub
stos
xchg
fimuls
cwtl
sbbl
or
jo
inc
or
or
aas
sahf
addr16
sarb
ljmp
outsl
inc
jnp
mov
jle
shrl
pusha
shlb
fbstp
add
dec
lret
dec
inc
and
mov
push
pop
std
inc
popf
push
loop
mov
dec
aad
stos
add
sbb
sbb
daa
cld
imul
test
push
ret
adc
xor
ret
xchg
leave
adc
hlt
mov
sub
inc
movsl
and
push
push
cs
and
cmpsb
adc
jg
mov
mov
jno
enter
or
jmp
jnp
jge
in
movsb
scas
mov
jbe
fstl
sbb
adc
cwtl
adc
or
es
aas
in
cmc
jl
scas
push
dec
hlt
inc
daa
push
fsubrs
mov
leave
sti
fwait
scas
into
popa
and
inc
test
icebp
mov
cmpsb
or
mov
lods
daa
xchg
cmp
mov
dec
cmp
ljmp
cltd
or
lahf
sahf
or
push
pop
inc
ja
cmp
fiaddl
fisttpl
mov
out
dec
pop
jle
out
cmp
adc
pop
inc
push
bound
fsub
jecxz
sub
inc
dec
outsb
pop
push
out
adc
jl
fmuls
xchg
mov
mov
inc
xchg
and
aam
push
inc
xorb
xchg
sub
imul
lcall
ja
xchg
and
sbb
mov
test
inc
sbb
dec
xor
mov
repz
stc
mov
or
lods
cmp
cmp
out
push
mull
mov
pop
lahf
fnstenv
adc
sbb
or
fs
into
mov
insb
cmc
les
outsl
es
loop
sti
mov
xchg
dec
adc
sub
movsb
in
dec
cmpsb
fwait
lods
mov
outsl
mov
mov
cli
xor
in
mov
jl
sub
call
icebp
pusha
and
xor
pop
mov
fldcw
imul
fiadds
cs
out
xlat
out
fsubrs
mov
rcll
lods
jecxz
gs
aad
xchg
aad
xor
shll
movb
orb
pushl
pop
jecxz
adc
es
or
les
lods
pop
add
ljmp
pushf
pop
lret
or
addl
jo
shrb
jb
cmc
push
mov
hlt
std
inc
shll
mov
test
es
hlt
loop
cwtl
ss
fnstenv
cmc
xchg
jns
sub
mov
cs
stos
jmp
leave
push
jbe
cmpsb
das
mov
xchg
aaa
sub
xor
aam
shlb
iret
pop
fldcw
das
jno
cmp
or
sahf
pop
add
lods
aaa
jge
mov
xor
scas
mov
scas
jae
rol
ja
cltd
xlat
add
test
sub
push
push
mov
fstl
jp
xchg
pop
push
cs
pop
mov
push
xchg
xchg
xlat
jne
push
push
mov
mov
adc
or
cmpsl
xor
and
add
xchg
dec
ss
test
lret
out
xchg
ds
or
xchg
adc
push
lahf
jle
ficomps
daa
add
xor
cltd
pop
movsb
xor
sub
jbe
adc
mov
mov
lds
ja
adc
rol
ds
jnp
mov
xlat
mov
push
push
jne
mov
out
xchg
push
call
in
dec
xchg
test
cmc
lahf
out
call
rorb
scas
ja
in
loopne
dec
push
lock
xchg
dec
insb
xor
jnp
lahf
pop
jle
int3
jo
es
scas
fists
jbe
pop
test
inc
xor
fistl
loop
pop
popf
jnp
xor
xchg
call
sbb
imul
scas
xchg
mov
or
adc
sti
iret
cltd
mov
mov
mov
hlt
or
andl
or
and
inc
lods
inc
sbb
add
loop
int3
cmpsl
lret
ds
mov
cmpsb
inc
inc
dec
std
push
shrb
jg
mov
and
xor
mov
push
enter
loop
and
testb
push
xor
adc
jl
in
mov
push
mov
call
scas
lods
fdivrs
and
jle
test
mov
or
cmpsb
nop
or
in
les
xchg
cmp
loop
test
cmp
jl
loope
lods
out
insl
cwtl
jg
dec
dec
xor
ret
and
or
and
aad
mov
mov
inc
add
and
pop
cltd
mov
test
movsl
mov
js
loopne
pop
aaa
mov
push
mov
cmp
fidivrl
stc
ljmp
mov
push
xor
push
dec
fwait
sarl
js
or
mov
xchg
and
rcrb
xchg
popa
int
mov
sub
jo
insl
imul
mov
or
sbb
cmp
push
cmpsb
movsb
orb
ljmp
jg
fs
lock
scas
push
ss
ss
adc
outsb
fsubs
cmpl
sub
in
jo
cmp
mov
xchg
addb
push
in
add
push
mov
mov
adc
cmpsl
xchg
add
fdivrs
roll
mov
mov
cli
mov
mov
push
cmpsl
sti
xchg
popf
pop
imul
stos
stc
loopne
push
hlt
pop
and
std
in
mov
fdivr
rep
out
xchg
ret
stos
xlat
sbb
and
rcl
es
out
adc
pop
push
ucomiss
loope
aad
push
nop
scas
sub
dec
dec
mov
dec
je
dec
test
lea
sbb
insb
or
dec
add
in
ljmp
sti
adc
ss
arpl
jno
pop
jb
fstl
mov
jg
out
outsl
mov
xchg
fwait
ret
pop
cwtl
icebp
adc
mov
cmp
mov
xor
icebp
add
lret
lret
sbb
mov
mov
and
mov
push
sub
cmp
mov
pop
loop
push
sbb
mov
cld
test
mov
popa
adc
lods
mov
pop
jbe
push
push
ret
and
sbb
repz
popa
mov
sbb
push
adc
or
mov
jmp
xchg
push
out
ljmp
lret
movsl
sbb
lock
dec
push
push
inc
int
sidtl
or
out
push
xor
lahf
lds
dec
call
or
lods
out
sbb
cbtw
inc
mov
into
fwait
adcl
adc
push
xor
xor
push
fdivrs
jl
in
adc
xchg
and
or
orb
dec
mov
out
mov
mov
nop
dec
dec
add
dec
inc
mov
inc
jnp
je
out
jnp
dec
jmp
je
pop
cmpl
out
test
or
mov
addr16
jle
jle
push
and
mov
jnp
dec
pusha
jle
mov
lret
jl
fbstp
hlt
pop
mov
in
jae
jno
push
movsl
push
mov
mov
mov
stos
jmp
sahf
xchg
pop
sub
imul
dec
scas
jmp
lods
pusha
adc
push
iret
clc
shl
ret
lcall
pop
cmc
arpl
movsb
insl
inc
stos
add
xor
std
mov
inc
sub
mov
add
add
and
dec
lock
data16
inc
push
sarb
xor
cmp
cmp
push
pop
push
inc
jbe
fcompl
outsl
dec
add
dec
mov
aaa
push
fisubs
loop
gs
sarl
cmp
aad
push
sahf
pop
lock
jg
dec
scas
mov
and
pop
pop
push
xchg
lcall
test
in
stos
scas
dec
enter
daa
test
cmp
imul
fsubrs
xor
out
loop
sysexit
clc
and
lods
inc
lahf
fsubrl
ds
add
sbb
mov
cmc
jne
inc
pop
int3
ret
xor
lcall
test
fcoml
je
fdivrl
movsl
sub
call
jne
adc
xor
xor
cmpb
cltd
mov
ds
and
out
or
dec
sbb
sub
inc
lcall
fisttps
clc
cmpsl
sahf
push
loope
test
push
jmp
mov
mov
fdivrl
clc
and
outsb
nop
adc
cmpsl
ss
or
cmp
pop
aam
mul
dec
xlat
lret
xor
cmp
shrl
or
xlat
dec
into
jbe
test
push
adc
xor
mov
shl
fcmovb
imul
js
add
lgs
fnstsw
mov
pop
std
cli
xchg
pop
jg
shlb
in
push
fdiv
sti
inc
lods
dec
decb
cmp
loopne
cs
adc
xor
les
call
xchg
xchg
sub
pop
adc
xlat
gs
mov
adc
add
jmp
dec
cmp
fwait
xchg
aad
pop
jl
mov
sub
lahf
push
xchg
dec
cmp
add
jecxz
int
sub
ja
lret
call
jmp
mov
mov
pop
or
dec
mov
and
add
mov
inc
sbb
push
inc
push
lret
adc
sbb
or
adc
std
inc
mov
lods
es
cmc
and
fildl
cld
loopne
fcmovne
mov
pop
or
sub
or
jl
push
mov
hlt
jmp
movsl
ret
inc
mov
mov
lahf
and
cmpsl
addl
mov
js
in
lods
or
lahf
dec
mov
xchg
xchg
push
mov
in
cltd
icebp
shrb
cltd
inc
popa
stos
test
enter
dec
adcl
mov
leave
xchg
xchg
add
loope
and
cmp
aas
stos
fildll
out
push
mov
and
cmpsb
punpcklbw
faddl
les
inc
xor
jno
mov
dec
sub
stc
inc
fildl
jae
add
or
hlt
fistpl
and
xchg
cmp
mov
xor
out
aam
leave
in
and
jb
dec
mov
jecxz
mov
cmp
ja
and
dec
mov
xchg
mov
inc
push
fisttpll
cmc
stos
jne
jo
mov
mov
out
push
bound
bound
xchg
nop
jmp
aas
add
orl
push
out
xchg
inc
sub
adc
jcxz
cltd
jp
inc
fldenv
pop
push
sbb
and
mov
frstpm(287
xor
test
mov
pop
repz
inc
inc
jle
jae
ss
push
in
mov
add
inc
mov
pop
push
cs
dec
and
push
xchg
jnp
adc
xor
push
repnz
sub
jb
mov
inc
in
inc
scas
mov
cmc
push
stos
mov
fidivrl
lods
lock
jge
xor
fsubrp
rol
pop
xor
rcrb
mov
sbbl
mov
cmp
push
les
push
xor
or
pop
aaa
aad
inc
or
xchg
shlb
test
les
andl
or
and
and
sub
test
push
lea
cmpsb
xchg
jno
in
xchg
or
enter
daa
sbbl
sahf
enter
jmp
cmp
imul
lahf
sti
inc
lret
push
cmp
sbb
sahf
or
xor
add
cmp
inc
pop
repz
js
call
push
adc
addr16
xor
outsb
test
mov
rorb
cli
xchg
imul
xorl
adc
mov
pop
imul
shrl
mov
pop
sbb
ror
sahf
cmc
cmp
adc
daa
outsl
ret
mov
push
dec
stc
scas
push
lcall
push
mov
fcomps
aad
mull
daa
xor
ljmp
pop
push
sbb
xor
bound
push
cwtl
pusha
imul
mov
data16
cmpsb
shrb
mov
inc
out
mov
cli
lret
mov
mov
adcb
es
cmp
lcall
aam
adc
lcall
dec
or
jae
xchg
dec
sub
sbb
cwtl
subl
lea
sbb
xchg
adc
insl
pushf
scas
sub
jmp
orb
mov
push
in
pop
add
mov
loope
mov
shlb
jecxz
adc
das
cmp
xor
push
lock
sbb
imul
in
cmp
pusha
dec
inc
insb
subl
lods
inc
test
and
stos
xchg
rorl
mov
std
jmp
int3
jge
mov
mov
into
mov
cld
or
lret
clc
and
mov
xorb
movsl
popf
das
pop
roll
fcoml
out
aaa
cmc
iret
ret
aam
bound
pop
repz
insl
xchg
dec
sub
adc
aaa
dec
out
js
fs
lcall
mov
or
mov
aas
mov
dec
test
pusha
aaa
mov
inc
mov
lcall
clc
xchg
vandps
hlt
pop
mov
xchg
je
mov
push
xchg
lods
sbb
sti
adc
mov
sub
or
xchg
mov
xchg
and
cmp
je
aad
stos
mov
pop
inc
mov
in
fisttps
mov
movl
add
test
jbe
mov
jns
or
in
cmpl
add
mov
testb
stos
add
mov
mov
sub
jne
imulb
mov
in
bound
mov
xchg
or
sbbl
repnz
or
mov
jp
into
mov
jne
and
jae
xor
hlt
das
jle
outsl
in
cmp
fcomip
and
xchg
aam
pop
pop
sub
mov
jae
inc
stos
push
sub
je
lock
mov
clc
push
inc
mov
ficoml
add
add
stos
scas
scas
mov
rclb
shrb
xchg
mov
mov
leave
out
ret
jmp
ret
arpl
sub
icebp
or
repz
aaa
adc
jb
roll
rolb
push
fsubrs
fimuls
gs
mov
ret
pop
sbb
fidivl
push
mov
xchg
jbe
stos
mov
mov
cmp
xchg
mov
xchg
daa
sbb
mov
jbe
push
fs
xor
xor
push
pushf
and
add
push
sbb
mov
cmpsb
sbb
jmp
enter
daa
subb
cmp
jl
loope
pop
sub
aam
cmp
cmp
sub
fbld
add
popa
jmp
sbb
xchg
dec
add
jmp
xor
sbb
fistpl
mov
pop
hlt
mov
jge
mov
mov
sub
aam
outsb
call
mov
call
popf
cmpsb
and
out
insl
sub
sahf
mov
and
sbb
push
test
int
mov
push
pop
ljmp
roll
out
sbb
jb
sahf
cwtl
mov
test
sbb
and
jmp
mov
dec
xchg
jg
push
andl
adc
lods
mov
cmp
shrl
mull
or
lahf
xor
jno
xchg
cmp
xlat
addr16
pop
test
cmp
std
cmc
loopne
xchg
xor
ret
mov
mov
adc
sbb
pop
in
lods
push
test
and
cli
std
adc
shr
sub
sti
movsb
sbb
aam
xor
aas
test
or
adc
or
les
out
repz
das
sbb
rorl
mov
adc
sub
and
cs
enter
outsb
sbb
aas
push
adc
daa
add
adc
dec
sub
push
jecxz
cltd
pop
xor
inc
lea
aaa
jmp
pop
int3
rolb
pop
fmuls
bound
xchg
inc
sub
xchg
dec
lret
add
call
and
mov
rcrl
test
and
nop
mov
xorl
inc
push
icebp
xchg
sub
test
lret
addr16
lret
lods
std
lock
mov
cmp
mov
loop
daa
aam
add
ret
arpl
fisttpl
xchg
dec
sub
cmpsl
andl
lods
jecxz
pop
mov
mov
xchg
inc
mov
sub
test
cltd
mov
add
test
push
pop
and
clc
shll
ljmp
cld
pop
fs
adc
xchg
repz
fwait
push
xor
xchg
add
out
jle
sub
loop
les
lret
mov
push
pop
gs
rolb
adc
sub
sbb
sbb
inc
push
or
fwait
push
or
push
push
out
add
outsb
cli
inc
call
and
in
cmp
xchg
adc
mov
pop
sti
mov
mov
shll
mov
sahf
sub
mov
and
mov
push
sub
jne
loope
mov
rcl
out
adc
bound
dec
jmp
aad
mov
fwait
push
cli
sub
pop
aaa
add
and
or
insb
fidivs
fnstsw
cmp
in
mov
pusha
fnstenv
and
popa
sbb
pop
lods
in
orb
popf
pop
add
pushf
push
addl
xchg
pop
leave
mov
scas
mov
imul
cli
push
and
out
iret
adc
adc
hlt
or
and
inc
mov
mov
dec
mov
push
test
out
add
cmp
pop
cli
mov
lds
inc
rclb
repnz
cmp
jg
movsb
gs
mov
jbe
mov
lcall
sbbb
push
lock
or
adc
int3
and
dec
pop
in
mov
xor
nop
dec
push
scas
sub
add
cmp
loop
call
aas
mov
pushf
cmpsb
out
in
pusha
jb
enter
daa
cmpl
loope
loope
sub
out
cmp
pop
sbb
movsl
and
mov
lahf
cmp
add
dec
das
pop
add
addl
mov
dec
jg
pop
inc
add
xor
push
push
xor
adc
std
jo
mov
ljmp
inc
adcb
fadds
xor
mov
add
mov
sub
and
push
push
push
addr16
int
gs
sub
jmp
jns
pushf
repnz
mov
mov
sbb
add
insl
or
cmp
inc
jg
stos
fdivs
sbb
xchg
test
ss
inc
out
cmp
mov
scas
lret
xorl
negl
sbb
pop
jp
cmc
cmpsl
cmp
xor
dec
outsl
subl
imul
out
add
adc
xchg
out
lods
cmp
das
mov
lcall
lock
sti
push
je
idivl
inc
loopne
or
mov
or
les
push
xchg
iret
jne
sbb
push
es
xlat
and
fildll
out
sub
or
fstps
ds
les
aad
aaa
dec
nop
sbb
mov
inc
fdivrs
push
je
xor
xor
shlb
push
adcb
and
lcall
dec
sub
mov
mov
sub
mov
stos
rcll
adcl
std
aaa
fistpl
xor
jo
mov
shl
rclb
cld
popa
jp
lret
adc
mov
jecxz
mov
jecxz
lock
loope
mov
fxch
cwtl
aam
data16
repnz
es
pushf
inc
insl
push
mov
hlt
cmpsl
cmpb
popa
mov
push
in
outsl
mov
test
stos
mov
dec
jno
shl
inc
xor
inc
mov
push
and
call
clc
cld
jae
xchg
push
insb
mov
cmp
nop
pop
pshufw
xor
out
jl
setne
jns
push
mov
inc
sbb
std
call
daa
xor
mov
push
movsb
sub
mov
inc
xchg
adc
or
mov
cmp
or
inc
add
pop
lock
test
in
inc
adcb
int3
cmpb
fcompp
ja
pop
jne
xchg
add
cwtl
mov
xchg
push
int
xchg
mov
mov
jne
je
jmp
xor
int3
xchg
mov
mov
out
jp
sub
add
cmp
and
cmpsb
movsl
jnp
stos
cli
jle
notb
pusha
je
mov
xor
inc
xchg
jp
dec
pop
cwtl
scas
insb
inc
addr16
adc
and
mov
ss
ds
mov
ret
stos
mov
insb
xchg
mov
movsl
sbb
sbb
aas
scas
jne
imul
mov
iret
je
nop
ret
mov
hlt
sub
fwait
inc
mov
decb
jmp
lock
imul
out
int3
cmp
pop
sub
mov
aad
xor
repnz
insb
shrb
out
bnd
das
cmp
mov
push
push
cmpsl
pop
jbe
dec
adc
jl
sbb
jb
aaa
adc
cwtl
jno
sbb
push
dec
mov
testb
xor
jo
std
fisubrl
int3
xor
mov
mov
mov
cmpsb
pop
out
mov
inc
jnp
enter
daa
sbbb
aaa
add
sub
lret
je
mov
sub
jb
cwtl
movsl
sub
in
and
jecxz
lahf
pop
mov
lea
xchg
add
imul
orl
js
dec
bound
jb
mov
je
cmpsb
push
insb
popa
popa
fsub
pop
add
movsb
ret
fimuls
rcrb
lock
push
sbb
mov
and
push
addb
mov
dec
sub
shlb
gs
adc
mov
mov
sbb
repz
fimuls
enter
pushf
adcb
pop
jg
into
icebp
mov
sbb
lods
fs
movlps
in
mov
fmuls
inc
mul
fwait
add
or
xor
jbe
cmp
cs
or
in
mov
cmc
outsb
mov
fsubrs
cli
loop,pt
or
adc
or
xchg
mov
mov
mov
out
sub
arpl
jecxz
cs
sub
decb
sti
add
gs
pop
out
inc
jns
pop
shlb
or
stos
les
repz
dec
ljmp
push
xlat
popa
mov
jmp
bound
dec
pushf
scas
pop
sbb
inc
mov
aad
fs
nop
cmc
movsl
xchg
dec
and
leave
inc
jmp
sti
dec
sbb
bnd
ds
mov
movsl
cmp
jmp
call
out
mov
xor
ja
xor
push
fcmovnb
test
daa
inc
jno
ss
sahf
inc
mov
lea
insl
ds
ss
push
sar
fucom
notb
add
fiadds
arpl
cmpsl
fsubs
cld
mov
inc
bound
inc
jge
lock
sahf
daa
das
clc
insl
jo
xchg
outsl
mov
aam
sbb
imul
sahf
aas
insl
cmp
imul
aam
sbb
dec
sub
and
mov
sub
sarb
lret
dec
and
dec
lret
jecxz
push
fnstsw
dec
clc
aaa
enter
xchg
and
lods
orl
pop
pop
mov
test
out
xchg
cmpl
imul
xor
adc
jb
pop
and
xor
js
pop
in
mov
dec
mov
pop
adc
sbb
mov
xor
fwait
insb
pop
or
mov
mov
movsb
push
push
call
fwait
xor
stos
push
in
mov
lret
mov
lods
mov
pop
daa
in
ja
jp
dec
test
and
lods
cld
dec
je
xorl
add
iret
adcl
jmp
imul
addl
out
pop
sub
std
jb
fistps
jge
or
mov
push
jnp
sub
xchg
in
repz
pusha
setns
dec
dec
push
xchg
dec
and
pop
iret
out
inc
jb
and
imul
push
je
sub
data16
xchg
movsb
stos
sub
out
sbb
push
cltd
imul
scas
fmuls
push
mov
jno
arpl
sbb
je
push
leave
push
or
arpl
ja
inc
mov
hlt
xchg
push
cmpsl
rolb
mov
mov
int3
sub
xchg
fidivrs
cmpsb
lds
mov
mov
iret
ss
cmp
jp
jnp
in
mov
inc
popf
jge
inc
and
negb
add
mov
dec
inc
jl
mov
jg
or
scas
imul
sbb
pop
idivb
push
jle
push
inc
dec
jo
cmpsb
mov
push
in
daa
jg
sarb
push
and
fists
sub
test
cmp
push
ds
imul
mov
or
mov
sbb
test
pop
inc
negb
pop
imul
aad
int
mov
lock
and
push
ret
ss
fmull
in
adc
lret
adc
jns
ds
or
adc
jg
andl
mov
int
xchg
test
and
in
sbb
ror
mov
sbb
movsb
test
test
mov
xor
mov
aaa
fs
sahf
adc
sysret
ss
aaa
cmp
add
test
lret
mov
cmp
xchg
rorb
pop
xor
cmc
xor
call
loop
xchg
mov
adc
jge
add
push
nop
lods
or
jmp
pop
imul
inc
hlt
add
imul
and
cmp
loope
loopne
std
bound
pop
out
aaa
inc
lods
fldl2e
sarl
ja
mov
xchg
push
xchg
sbb
test
jmp
sub
mov
pushf
pop
ret
por
or
aad
cmc
test
dec
subl
nop
les
leave
pop
cmp
jmp
call
data16
pop
in
faddl
pop
aaa
and
out
and
pop
lret
inc
mov
and
lcall
mov
shrl
rorl
push
notb
mov
sahf
mov
jne
mov
xor
cld
mov
repnz
mov
stos
mov
adc
pop
jnp
lock
in
xlat
jae
sub
pop
sub
jmp
aam
sub
ret
adc
es
or
cmpsl
jle
sarb
jmp
xor
pop
jge
es
and
and
pop
xchg
xor
pop
or
mov
sarl
cmpsb
ja
frstor
mov
xchg
rolb
ljmp
sbb
shrl
inc
cs
xchg
enter
addr16
cmp
add
ja
or
jae
mov
pop
cmp
dec
pop
into
sahf
test
mov
xchg
push
les
inc
jle
jp
sbb
push
sub
add
mov
stos
fdivl
out
or
jns
aam
in
push
int3
xchg
std
xor
mov
add
pop
loop
xchg
ja
sbb
ja
shlb
bound
mov
stos
dec
push
mov
jne
cli
aam
sub
mov
scas
adc
in
push
mov
xchg
ss
adc
and
or
clc
out
or
jp
repz
and
stos
mov
jnp
jae
jle
dec
dec
in
sub
pusha
stos
cmpsl
imul
mov
xchg
and
pop
push
lds
jge
int
out
lss
aaa
arpl
mov
mov
inc
out
stos
popf
inc
xchg
fs
sbb
fs
imul
scas
cmp
adc
xchg
sbb
xor
test
out
ror
lret
push
cmp
insl
inc
inc
mov
call
aaa
inc
es
mov
add
jno
adc
mov
cmp
ficomps
cli
adc
add
shl
lods
mov
and
cmp
xchg
es
icebp
out
jbe
mov
jge
in
clc
sbb
cmpsb
mov
xchg
pop
jno
mov
in
dec
insb
call
out
imul
jo
sahf
shrb
ljmp
dec
dec
add
out
xor
adc
cmp
lcall
inc
dec
sub
adc
ds
lods
aas
and
push
lahf
xchg
cmc
lret
push
cmc
xchg
rcrb
aad
add
cmp
pop
push
cmc
pop
mov
mov
sbb
pop
lock
mov
pop
stos
aad
sbb
mov
cmp
jo
subb
adc
push
adc
push
test
dec
jb
mov
or
mov
pop
enter
add
pop
out
mov
popa
loope
mov
xor
sahf
and
add
orb
inc
and
mov
jbe
stc
inc
push
or
cmp
sub
sbb
pop
fneni(8087
lret
add
int
push
cmp
aam
or
mov
cmc
cld
ljmp
push
push
push
ss
cmp
mov
pushf
inc
testl
data16
lret
lods
out
js
mov
pop
sub
mov
aam
jl
pusha
pop
scas
pusha
cmp
loopne
xchg
cs
decb
adc
mov
fldenv
icebp
rol
addb
push
negb
sbb
mov
inc
out
push
xor
adc
les
adc
push
aad
jmp
nop
stos
xchg
xchg
loopne
inc
adc
dec
dec
pop
testb
mov
popa
add
lea
lods
call
in
movsl
pop
cwtl
popf
roll
push
mov
pop
insl
pop
aam
inc
mov
lret
aas
lret
jb
loopne
mov
dec
pop
call
cwtl
shl
pop
std
sub
fs
push
mov
mov
js
mov
lcall
and
clc
mov
fsubl
push
jecxz
mov
andl
xchg
es
imull
push
adc
test
cmpsl
jge
test
popa
add
lods
mov
dec
fadds
mov
cmpsb
insb
inc
rcrb
cmp
xchg
test
xor
imul
out
lods
sub
xchg
mov
roll
repz
adc
stos
jns
mov
movsl
xchg
pop
xchg
psubb
push
inc
fnstcw
setp
add
or
or
cmp
mov
pop
xor
outsb
sub
arpl
movsl
xor
or
hlt
lea
test
add
fiaddl
jbe
xchg
pop
movsl
xor
mov
in
pop
jecxz
dec
cmpsb
insb
mov
enter
push
std
pop
popf
scas
cmpsb
ja
cmp
mov
cmp
repnz
fists
lret
dec
cmp
pop
mov
inc
out
lea
fsubr
add
outsl
andl
out
je
sub
repz
fstpl
or
push
and
cmc
sub
bound
jl
jle
in
in
shll
lret
lea
aad
repz
pop
cmp
clc
mov
push
cli
pop
sub
fcoml
pop
push
jg
arpl
mov
inc
cmpsb
imul
scas
sahf
sbb
sbb
pop
ret
push
inc
insb
inc
hlt
bound
inc
rcr
or
pop
lds
icebp
xchg
cmp
mov
lret
int3
call
add
fidivrs
cmp
rolb
mov
fdivp
jne
jp
in
jge
movsb
xchg
jb
push
inc
out
inc
jbe
pushf
pop
jge
jl
sbb
aaa
dec
jmp
or
sbb
jl
popf
imul
sar
xor
cld
mov
and
push
push
push
adc
jns
addr16
cmpsb
test
mov
enter
daa
jge
jnp
rorb
or
lods
mov
push
movsl
inc
pop
daa
and
cmpsb
lahf
mov
iret
push
enter
sub
jne
jmp
dec
xor
lahf
push
lret
pop
fstpl
test
das
int
pop
push
jno
add
sub
xor
sbb
shrb
movsb
jne
leave
or
mov
ficoms
and
jnp
int
push
inc
sub
popf
or
cmpsl
inc
lcall
rorb
or
insl
sbb
ficoml
loope
mov
ljmp
fs
pop
clc
adc
imul
fdivrs
mov
lret
push
xor
lods
or
xchg
into
stos
mov
cmc
ret
xchg
push
mov
sbb
mov
loop
dec
inc
imul
gs
stos
add
jmpw
lods
es
mov
inc
out
jno
cli
cld
pop
shlb
aas
aad
sti
jnp
xchg
bound
fucom
adc
pop
sbb
push
cld
fstps
into
les
jbe
xchg
fildl
xchg
cmp
pop
rcl
push
push
cmp
lret
adc
mov
mov
pop
jmp
in
cs
add
aad
inc
ss
xchg
jge
and
fimuls
lret
fs
pop
sbb
in
xchg
movb
lea
into
mov
fs
inc
pop
dec
mov
test
fisttpl
icebp
pop
adc
dec
inc
lret
xchg
push
inc
push
jo
aas
imul
daa
mov
xlat
fisttps
shl
mov
std
rcr
inc
cwtl
leave
rcrb
mov
decl
mov
and
xchg
lret
xchg
sbb
les
ss
mov
aam
xchg
sub
mov
mov
paddq
cmp
cs
mov
push
sbb
std
jo
pinsrw
imul
dec
mov
insb
sub
and
pop
cmp
pop
lds
nop
cltd
push
push
test
insb
mov
mov
push
sub
int3
sbb
clc
call
xor
rcrl
add
or
dec
xchg
push
ljmp
stc
out
add
bound
jl
cmp
pop
cmp
xchg
and
jo
test
sbb
xchg
bound
jb
or
pop
es
stc
ficompl
cltd
push
cltd
add
cmc
jbe
pushl
or
xor
dec
in
mov
xchg
fwait
pop
popf
mov
add
xor
jno
ja
in
dec
pop
jge
mov
sahf
sbb
in
dec
dec
sbb
push
push
mov
cld
cmp
insb
inc
sbb
adc
jmp
int3
adc
xor
adc
sub
mov
fsubl
aam
push
mov
int3
insb
cmc
scas
jnp
dec
cmpl
mov
icebp
fildll
in
pop
je
dec
inc
xchg
frstor
push
mov
imul
pop
dec
pop
push
mov
xchg
xchg
xchg
adc
aaa
sbb
cld
cmp
ja
scas
add
push
mov
mov
hlt
mov
insl
ret
dec
leave
mov
mov
sahf
inc
ret
movsl
nop
or
aad
jnp
and
neg
movsb
or
int3
ljmp
fisubs
xchg
lds
ret
faddp
sbb
sub
enter
mov
mov
cmp
cmp
out
push
sbb
cltd
fbstp
push
mov
or
xchg
mov
orb
inc
push
mov
in
xor
push
push
scas
test
test
jmp
inc
divb
mov
jecxz
jecxz
or
repz
jl
data16
jp
loope
lea
xor
into
ds
jmp
movsl
inc
cmc
ja
cmpsl
pop
lcall
fwait
out
mov
into
and
xor
mov
pop
add
and
cmp
pop
outsb
mov
mov
mov
nop
lret
pusha
sub
cmp
adc
or
adcb
mov
out
jae
pusha
dec
pop
and
mov
push
pop
in
push
lcall
cmp
sbb
inc
int3
sahf
push
push
test
lea
jg
test
mov
lahf
test
mov
lock
arpl
adc
aad
ss
push
lahf
cmp
xor
sub
xor
cmp
lret
xchg
into
mov
push
xor
ret
pop
outsl
fcoml
loop
ja
imul
xlat
mov
data16
flds
mov
fsub
pop
cmp
cli
das
and
mov
stos
jmp
mov
push
lcall
add
adc
cmp
repz
cmp
xchg
sahf
and
ret
xlat
pop
icebp
imulb
cmp
add
jns
cs
cs
add
dec
mov
es
dec
cmc
inc
xor
adc
repz
cli
movb
add
call
jecxz
out
decb
js
loopne
fstpt
pop
mov
cmp
int
inc
sub
lds
and
bound
lock
clc
std
jp
in
test
mov
movsb
icebp
nop
aam
cld
cmp
jl
cmpsl
jnp
mov
int3
push
lock
addr16
je
jp
loope
cmp
lods
imul
ret
mov
xor
dec
or
jp
pushf
jae
popa
xor
fwait
lods
gs
mov
insb
pop
and
hlt
mov
sub
add
pop
cltd
std
jb
test
and
out
loopne
fstl
mov
xchg
xchg
lea
jns
or
repz
pop
dec
das
stos
push
and
lock
popf
inc
int
clc
and
add
or
aam
xor
lret
pusha
mov
orl
sarl
in
or
inc
fstpt
xchg
fwait
sub
or
cmp
pop
add
adc
and
iret
mov
pop
jns
es
in
fs
ljmp
mov
adc
movsb
ja
adc
dec
push
fstl
mov
mov
xchg
pop
jne
xchg
push
mov
push
mov
bound
mov
sar
lods
pop
add
jmp
mov
jp
xor
push
testb
pusha
les
push
jle
repz
insb
pop
mov
or
pop
stos
xor
inc
sahf
push
cmp
cmc
cmp
andb
mov
std
out
aam
testb
imul
imul
sbb
iret
add
sti
iret
dec
jne
ret
mov
hlt
clc
inc
mov
inc
jecxz
or
push
inc
cmp
sub
loope
or
pop
adc
inc
fiadds
lahf
shlb
idivl
sbb
pop
push
pop
movsb
cmpsl
and
bnd
ret
loope
dec
inc
rcrb
xchg
mov
or
jno
jns
jl
shl
dec
mov
lods
ljmp
movsl
adc
arpl
and
out
fstl
jg
test
xchg
cmpsb
scas
and
aad
pop
pop
xchg
daa
jnp
dec
cmp
sbb
loope
call
or
and
and
mov
lahf
repz
outsb
push
sbb
ljmp
push
sub
push
js
sub
push
jns
push
pop
hlt
and
cmp
mov
outsb
popf
xchg
clc
adc
in
lods
popl
add
mov
jecxz
and
cmp
push
sub
call
rcrl
adc
mov
cmp
test
ljmp
nop
sub
fs
mov
and
icebp
clc
mov
cwtl
dec
mov
lock
or
pushf
cwtl
mov
xor
dec
cmp
xorl
jno
mov
xor
subl
mov
out
aam
imul
pushf
and
leave
divl
out
inc
lods
movsb
cs
mov
dec
out
mov
out
push
mov
adc
scas
pop
dec
dec
cld
gs
or
dec
fcom
pop
pop
and
cld
fld
push
rol
mov
inc
jl
popa
ds
xchg
dec
sarl
jo
rcl
pushf
clts
sub
push
and
rcr
cs
xchg
nop
aad
and
adc
xchg
jmp
dec
or
dec
insb
clc
jecxz
ret
inc
dec
adc
or
mov
or
subl
sbb
push
pop
movl
or
jb
adc
mov
in
out
roll
adc
mov
aas
lret
lods
cwtl
out
mov
lods
icebp
cmpsl
arpl
arpl
xor
mov
mov
lock
js
das
push
push
mov
mov
fwait
mov
dec
popa
data16
shrl
imul
dec
add
sbb
iret
insl
adc
add
lods
shlb
mov
mov
mov
pop
mov
rcl
mov
jne
xchg
add
mov
loope
ds
jns
pop
sbb
sub
rorl
add
adc
push
stos
inc
outsb
sub
xchg
in
inc
push
shl
pop
movzwl
add
or
loop
rcll
jb
push
mov
into
xchg
test
rorl
sbbb
dec
inc
add
sub
mov
cmp
jns,pn
fucomip
in
xor
outsl
mov
fsts
pop
into
mov
ja
rcrb
icebp
out
mov
lock
mov
es
jecxz
adc
cmp
cmc
out
sub
mov
rcrb
adcl
or
xor
orb
cmpsb
addr16
push
jp
pop
xchg
and
lods
out
lds
cmp
in
in
pusha
push
stos
lcall
leave
xchg
pop
loop
jae
test
pop
popf
push
inc
imulb
popf
sub
mov
cmp
mov
rcl
sbb
jecxz
imul
inc
scas
icebp
xchg
push
push
pop
inc
adc
mov
ret
popf
leave
cmpsl
dec
and
inc
pop
fldenv
in
cs
leave
xchg
push
or
lret
in
inc
and
sbb
add
aad
rcr
pop
inc
fisubs
add
jbe
pop
repnz
pop
sarb
adc
lds
cltd
push
jbe
add
jge
jg
sbb
shll
push
pop
jl
sub
dec
sub
and
xchg
inc
scas
inc
cld
mov
test
jne
outsl
inc
adc
sub
xor
icebp
in
mov
xor
add
sbb
imul
sub
nop
scas
cmp
cmc
cmpb
pop
sub
fisttpll
push
inc
sbb
sbb
push
dec
add
int3
sbb
aas
test
adc
iret
js
lods
xchg
pop
in
cmp
push
rorl
jbe
into
fsub
sbb
sub
mov
rclb
ror
out
cmpb
mov
shlb
push
push
xchg
sahf
jle
mov
pop
loop
arpl
mov
sbb
sbb
dec
sahf
mov
jnp
push
jle
cmpb
arpl
push
mov
in
popa
pop
push
ss
addr16
stos
filds
pop
mov
xor
in
xor
adc
or
into
push
pop
popf
cmc
sbb
or
les
sub
andb
mov
mov
add
and
jb
xchg
popa
fs
out
pop
lahf
cli
xchg
outsl
sbb
mov
rclb
sbb
pusha
in
ds
loopne
rol
jp
mov
fscale
adc
jmp
xchg
lea
sbb
stos
xchg
adc
mov
pushf
mov
and
cltd
in
scas
jns,pn
adc
test
nop
pop
gs
inc
pop
and
je
imul
push
dec
mov
ret
call
loope
cmc
pop
fs
mov
dec
mov
mov
pop
stc
add
xor
jne
aas
inc
aas
inc
jb
xor
lcall
fwait
repnz
nop
adc
enter
cli
mov
mov
ds
movsb
cld
mov
lret
fucomip
pop
mov
data16
dec
jb
mov
paddusb
lcall
ret
fistl
lret
dec
lock
add
fldenv
add
popa
pop
adc
lods
cmp
fnstcw
aad
shll
sub
pop
pop
and
shrb
lahf
mov
xchg
jl
mov
sti
scas
push
jne
pushf
frstor
out
clc
cltd
in
xchg
or
ljmp
lods
pop
mov
jnp
out
xor
mov
movhps
or
test
sbb
lcall
lahf
mov
or
jecxz
and
and
inc
or
dec
or
test
push
xorb
add
or
idivb
in
mov
icebp
mov
jno
mov
mov
add
dec
ss
int
cmp
lds
movb
inc
fs
insb
mov
int3
and
mov
mov
sbbl
dec
sub
filds
shlb
jecxz
scas
xor
and
insb
imul
in
or
adc
xchg
aas
and
inc
mov
push
jae
mov
push
push
mov
cmpb
xor
stos
adcl
adc
popf
push
pop
adc
adc
incb
out
jb
push
loop
hlt
mov
arpl
mov
test
pop
push
fidivrl
or
xor
jmp
dec
cmp
mov
push
inc
mov
rcrl
movsb
mov
scas
push
jbe
mov
aaa
sbb
loopne
dec
es
or
xor
sarl
push
inc
dec
xchg
xor
push
leave
xor
push
mov
adc
push
inc
inc
out
mov
lcall
std
dec
addr16
jns
sarb
jbe
loope
or
sub
inc
pop
cmp
add
pop
iret
inc
and
or
adc
xchg
sbb
adc
push
add
cmp
jns
movsl
js
ret
mov
sub
dec
push
fsub
push
int
iret
fcoml
stos
std
outsb
arpl
ficoml
fwait
scas
popl
inc
orb
sti
mov
push
pop
and
iret
pop
int
adcb
sbb
popa
movsl
fcompl
push
aas
inc
mov
jg
sahf
push
dec
inc
test
dec
pop
jg
aaa
xchg
aad
jl
shrb
mov
pusha
ss
jmp
fsubs
and
sbb
dec
lret
lahf
xor
call
cmp
jb
or
or
into
aaa
sub
fbstp
mov
pop
push
inc
outsl
jns
fnclex
adc
xor
xlat
add
cli
lahf
data16
jno
lods
jb
or
pop
mov
pop
mov
cli
enter
iret
pusha
and
sti
lret
loope
decb
and
loopne
mov
rclb
sub
sub
xor
les
sbb
inc
sbb
out
insl
xlat
sbb
loope
xchg
add
adc
fwait
pushf
pop
std
shr
mov
or
fdiv
cs
xchg
jecxz
repnz
mov
outsb
int3
dec
pop
mov
jecxz
push
mov
dec
lcall
add
pusha
roll
pop
xor
sbb
push
jno
or
fstps
cmpsl
addl
pop
inc
jp
dec
aas
in
mov
mov
add
and
and
cltd
mulb
orb
ret
sahf
cwtl
mov
push
mov
icebp
adc
sti
mov
mov
xchg
mov
mov
int3
das
adc
repnz
dec
int
push
push
insl
mov
hlt
cmpsl
js
mov
popa
jne
popa
lods
cmpsb
leave
mov
clc
lock
and
pop
inc
or
cltd
mov
pop
or
cmp
fisttpll
jbe
dec
ss
rolb
bound
dec
stos
and
dec
out
xchg
into
and
mov
sahf
add
push
dec
xor
pop
adc
outsb
fcoml
jno
subl
and
stc
inc
mov
cmp
push
and
pop
pop
add
adc
lods
clc
dec
xor
pop
idivl
cmp
in
push
ret
jle
mov
inc
inc
xchg
ja
lods
pushf
dec
sub
cmp
mov
cli
ret
or
ret
mov
mov
mov
bound
sbb
scas
cmp
clc
jp
subl
cmp
ss
out
dec
or
cli
mull
insl
inc
jp
ret
pop
test
insb
mov
sub
jle
das
mov
pusha
dec
mov
xchg
adc
jo
mov
ds
push
leave
divl
mov
mov
mov
dec
sbb
sbb
imul
mov
lea
push
movsb
sub
adc
repnz
insb
dec
mov
stc
inc
dec
leave
xchg
sbb
arpl
push
sbb
rcr
inc
and
lret
or
int3
xchg
pusha
fs
mov
push
add
roll
rolb
xchg
repnz
add
movsb
dec
test
push
lret
or
jbe
jecxz
jge
mov
mov
or
das
jno
xchg
sub
cmpsl
dec
push
mov
inc
lcall
ret
pusha
jecxz
add
and
test
or
inc
xor
cmpsb
aaa
sub
jg
cld
enter
daa
js
xor
iret
xor
fadd
lds
das
dec
push
mov
and
adc
push
dec
jle
out
loopne
outsl
scas
add
mov
xor
lds
pop
fstps
icebp
vmread
cmpsl
pop
push
lock
pushf
mov
cld
xchg
fdivrl
imul
add
shlb
enter
xchg
sbbb
cwtl
mov
lods
iret
and
push
jo
aam
movsb
inc
inc
sub
scas
sbb
shr
testl
and
out
cwtl
cmpl
xlat
mov
pusha
aad
mov
int3
adc
ljmp
lea
fsubs
add
xchg
lret
in
xlat
xor
cmp
cmpsl
fimuls
inc
fmul
into
sbb
je
cmpsb
sarl
jp
inc
outsl
pop
jmp
std
imul
bound
lods
pop
call
mov
cli
sti
lea
in
push
icebp
and
xor
and
data16
loopne
into
ficompl
and
fldcw
jno
les
xchg
xchg
stos
inc
or
and
mov
or
mov
jmp
jno
cs
adc
aad
fisubs
int
decb
outsl
inc
inc
sub
dec
rcll
add
das
xchg
lea
fadd
fistpll
add
mov
fstpt
xlat
out
aas
cmp
aad
xchg
xchg
aas
test
ds
mov
mov
shll
inc
imulb
xchg
std
push
cmp
mov
pop
mov
inc
in
divl
lret
mov
mov
mov
pop
div
jo
enter
and
sub
mov
std
es
add
insl
jae
mov
cmpsl
ja
lock
mov
add
sbb
jbe
pusha
popf
or
rclb
add
cmpsl
nop
mov
sti
outsl
fnsave
cmp
xchg
mov
rorl
xchg
pop
adc
jp
adc
scas
out
imul
nop
xchg
mov
cmpsb
jns
aam
pusha
add
pop
xor
fsubrs
xchg
sub
sbb
adc
pop
add
fiadds
pop
adc
out
dec
fwait
in
sbb
enter
lock
add
decl
in
xor
repz
loope
in
addr16
xchg
es
aam
pop
aaa
mov
ljmp
sbb
les
push
jp
jns
xor
les
jne
mov
out
movl
and
cmpl
shrl
xor
xlat
or
adc
cmpsb
and
or
lds
lret
inc
adcb
cmp
pop
xchg
in
cwtl
pop
xchg
mov
lret
jae
xor
push
mov
sarl
mov
stos
ret
xchg
lds
inc
imul
fsubrs
jmp
or
cmp
repz
popa
leave
or
jo
and
xchg
arpl
arpl
or
cmp
mov
fisubl
jecxz
add
pop
adc
pushf
ret
ficoms
dec
push
shlb
lods
repnz
cmp
mov
movsb
sarl
push
sbb
dec
jge
xchg
sbb
dec
mov
leave
pop
ja
cmp
pop
jl
sub
jne
out
push
and
sbb
mov
pop
and
dec
test
out
das
inc
rcl
cmpsb
mov
filds
repz
aaa
daa
ja
pop
cmp
mov
dec
sub
and
lods
sub
movsl
push
mov
scas
outsl
sbb
mov
jno
add
push
xor
pop
pop
xchg
jg
lods
stos
daa
pop
test
vmwrite
icebp
mov
out
or
outsb
sub
inc
adc
push
lods
sbb
add
mov
mov
cwtl
shll
jle
push
jae
aad
or
shrb
insl
enter
push
lcall
cltd
mov
sbb
rcrl
sahf
cltd
in
testl
fwait
ret
fcoml
sar
inc
mov
fs
adc
shll
sub
cmp
fdiv
js
cwtl
ja
lret
push
xor
mov
or
pushf
int3
cmc
insl
fcom
xor
adc
outsl
aaa
cltd
mov
imul
push
in
data16
jo
lods
inc
out
data16
popa
out
jmp
fldenv
sarl
sti
sub
shll
or
pop
xlat
sub
push
fldenv
repz
pop
xchg
insl
sub
cmp
xlat
cwtl
mov
sub
adc
jle
mov
cli
jmp
mov
nop
add
test
push
dec
jnp
fadds
mov
dec
je
jo
jecxz
cli
inc
push
mov
lea
cld
mov
pop
sub
pop
jge
fwait
orl
dec
jne
addr16
stos
pop
loop
add
rclb
inc
mov
jle
and
push
jb
xlat
xor
xchg
cwtl
or
rol
adc
imulb
nop
test
test
dec
mov
mov
icebp
ret
pop
pop
cld
shld
mov
cmp
lret
rcl
iret
adc
dec
sub
repz
dec
sub
mov
gs
pop
fwait
xor
icebp
popa
pusha
cmpsl
jbe
icebp
mov
mov
jl
mov
ds
pop
mov
jg
adc
sbb
cltd
adc
cli
mov
test
rcr
fidivrl
cmp
dec
ret
enter
mov
stc
scas
pop
mov
cmp
pop
stc
test
push
aas
mov
jp
mov
fucomp
xor
in
and
je
pusha
dec
aas
mov
xchg
xchg
je
inc
into
pop
ss
and
fwait
adc
js
ja
aas
add
xchg
jns
sub
fwait
mov
pop
mov
xchg
ja
cmpsl
push
dec
cmovns
mov
or
mov
sbb
jne
rcl
add
inc
bound
insl
inc
xchg
mov
sub
cmp
add
rcrb
sub
dec
std
dec
and
xchg
lods
jnp
xor
jle
lds
pusha
sub
fbld
mov
pop
mov
pop
out
outsb
insb
push
dec
leave
scas
popf
in
mov
cmp
adc
sbb
daa
sbb
mov
fisubrl
xor
add
ret
fcmovne
xorl
rcrb
inc
aad
sbb
mov
stos
inc
push
jne
fcmovbe
nop
lret
add
jge
int3
insb
xor
xor
lds
xor
mov
mov
and
adc
mov
iret
xchg
jge
push
xchg
sbb
cmp
or
push
scas
pop
fdivrl
cmp
mov
or
and
jns
push
mov
fistps
cli
test
pusha
inc
push
jae
cmpsb
cmp
sarb
jbe
xor
xor
lret
push
sub
dec
xor
lea
mov
jno
andb
jecxz
lahf
mov
rcll
push
sbb
loopne
jnp
pop
fs
js
jge
pop
call
xlat
push
rorb
sub
xchg
scas
push
sub
ucomiss
cmp
adc
sub
adc
les
sahf
mov
cwtl
mov
fsub
and
gs
push
jbe
push
int
jl
sub
out
fimuls
lcall
xchg
mov
sub
sub
inc
test
adc
andb
jg
push
mov
stc
jo
cli
dec
lods
fs
bound
popf
cmc
ss
pop
and
fcoms
jns
lret
sbb
test
cmp
lea
into
loopne
lods
cmc
xor
and
xor
loop
mov
imul
std
pushf
data16
pop
lods
daa
fmuls
mov
insb
out
lret
in
cli
popa
jl
mov
sub
inc
sti
fsubr
jle
js
lret
adc
loopne
sub
idivb
pop
adc
jp
fimull
repz
rcll
mov
loopne
xlat
bound
adc
push
ds
pop
enter
add
aad
movsl
das
nop
xorl
adc
inc
test
xchg
pushl
xor
push
repnz
insb
sbb
je
xchg
fstpl
movb
or
fistl
inc
test
test
jmp
xorl
outsb
mov
movsb
mov
rcll
adc
add
cwtl
out
ss
push
dec
mov
loope
cld
cmp
push
mov
or
mov
sti
and
das
scas
lret
push
sbb
data16
dec
jmp
jmp
sub
in
lods
adc
into
fmull
mov
xchg
loop
fs
lret
or
mov
sahf
gs
divb
test
push
daa
push
sub
ficomps
sub
out
sar
and
pop
push
push
lret
cld
pushf
xchg
inc
jp
push
sbb
int
xchg
imul
or
push
sbb
ja
sub
cmpsb
cmp
mov
cmp
sbb
sub
test
mov
rolb
add
mov
outsl
decl
mov
sub
es
or
loope
pop
mov
jne
in
ja
jmp
dec
add
sbb
in
push
push
dec
sti
dec
push
adc
jne
pop
shlb
test
lea
fldenv
jmp
pop
cmp
out
add
sub
lret
dec
cmc
addr16
xchg
jp
test
and
mov
in
mov
adc
xchg
cltd
pusha
sbb
and
pop
cmc
pop
incb
shll
in
and
adc
popf
jmp
arpl
ja
push
stos
test
imul
and
scas
mov
std
push
jns
jl
icebp
int3
mov
mov
xor
xor
in
leave
cli
xchg
mov
mov
pop
sbb
fcomi
or
xor
push
mov
jo
imul
int3
push
pop
cs
dec
pop
mov
mov
out
adc
or
cmp
movsb
jmp
mov
jbe
pop
xor
add
sbb
aaa
inc
mov
or
repnz
jl
dec
into
dec
push
xor
jmp
push
xor
aam
mov
and
and
insb
in
flds
push
dec
cmpsb
shl
in
xor
ror
jmp
mov
cmp
inc
loope
jno
sbb
adc
repz
js
hlt
and
push
lahf
lods
sub
bound
jecxz
int
inc
and
xor
fcmovnbe
loop
and
js
in
pop
daa
pushl
push
adc
push
sub
fdivrl
push
outsb
out
cmp
rolb
sti
push
pop
push
addl
push
fdivl
nop
movsb
push
jns
js
fldln2
sbb
pop
pop
jecxz
lcall
pusha
mov
pop
clc
sbb
test
fbld
test
scas
inc
cmpb
mov
pop
inc
mov
adc
stc
mov
jns
in
mov
adc
inc
ret
cli
sarb
xchg
xchg
notl
pushl
xor
cmp
je,pt
ror
into
ret
loopne
cmc
sti
or
aam
cmc
add
loop
dec
inc
imul
xor
lods
push
cmpsb
call
out
xor
mov
xchg
pop
pop
sti
xchg
fwait
ss
pop
adc
stos
and
adc
in
imul
add
xchg
repz
dec
sbb
rolb
sub
call
pop
or
cs
push
push
nop
pop
sub
dec
cmp
mov
xchg
je
insl
pop
jecxz
scas
rol
pop
mov
jns
out
add
pop
jecxz
mov
ss
gs
dec
pushf
cwtl
fcmovnb
push
push
pop
sub
lcall
ljmp
inc
fbld
fmull
divb
lds
cwtl
mov
sbb
sahf
icebp
jno
sub
lret
or
rorb
int
aam
sbb
outsb
mov
insl
sti
dec
aam
mov
push
andb
dec
out
stos
cmpsl
je
leave
mov
roll
scas
mov
test
pop
and
xor
xchg
ror
sbb
jle
and
dec
push
inc
pop
stos
adc
rorb
ljmp
outsb
pop
adc
stos
loopne
out
and
cltd
xchg
mov
psllw
add
insl
mov
xor
adc
mov
jp
mov
test
je
xchg
pop
inc
cld
into
and
pop
jae
jno
cmp
mov
add
int
adc
sub
pop
xor
jb
lea
into
xchg
adc
push
mov
xor
ja
mov
dec
cmc
sub
mov
dec
add
inc
cmp
stos
inc
jne
pop
jae
mov
mov
cs
and
outsb
subl
out
fdivrl
addb
xchg
pop
addr16
mov
pop
jne
mov
inc
insb
dec
orl
lods
sub
pusha
mov
mov
xchg
pop
fdivp
pop
sub
loope
jmp
ss
scas
mov
aad
popf
popf
adc
jne
mov
subl
int
sbb
jns
imul
push
rolb
iret
call
call
div
add
movsl
pop
inc
fildl
or
lods
mov
sub
cmp
outsl
add
jg
int3
inc
push
jae
pop
inc
das
fidivrs
add
inc
pop
in
repz
aam
xor
sub
cmp
mov
push
pop
sbb
push
adc
jge
xchg
bound
jmp
sub
adc
jl
sahf
jnp
ret
push
into
sub
mov
scas
jl
and
mov
in
test
aaa
imul
inc
lods
fwait
in
sbb
enter
daa
je
xchg
cmp
push
loop
mov
cmp
xor
ds
lea
jg
push
and
lahf
int3
orb
xor
sbb
push
inc
add
cld
mov
sbb
movsl
aas
lds
dec
js
faddp
pop
data16
push
mov
adc
call
rcrl
outsb
push
sub
shl
aas
cltd
and
repz
ds
xorb
mov
add
jl
jnp
inc
inc
fisubrs
insb
movsb
loop
fdivr
lods
lcall
mov
mov
sahf
orb
test
rolb
mov
mov
popa
gs
push
push
or
cmp
ss
adc
cmp
or
or
lret
imul
je
cmp
repz
lods
xchg
into
cmpsb
jo
cmc
ret
xor
int
outsl
aam
lret
adc
adc
xor
les
aad
lods
cmc
push
jo
inc
or
out
sbb
cli
cmp
mov
add
inc
sti
ss
fstpl
dec
and
test
or
adc
adc
inc
add
int3
rep
call
add
or
push
outsb
sub
imul
pushf
mov
jbe
xor
inc
aad
sti
ljmp
enter
neg
dec
lods
and
stos
imul
lea
aam
call
fisttpl
clc
pop
xchg
push
mov
cmp
into
fcomi
pop
pop
lret
sbb
inc
mov
fnstcw
add
jb
dec
jns
mov
shlb
ljmp
clc
fdivr
mov
cmp
pop
loop
mov
out
mov
icebp
dec
pop
xor
nop
push
ror
jns
mov
sub
fmull
jo
jns
sub
aam
inc
clc
ret
xor
adc
or
cmpsl
jae
jle
xor
jmp
lods
mov
lret
cmpsl
fucom
and
int3
mov
movsl
rcrb
and
mov
jns
dec
rcrl
xchg
test
jg
adc
out
pop
mov
fsubr
out
sbb
xchg
aad
push
shrb
and
add
or
xor
and
jle
jge
cmp
test
cmp
xchg
pop
pop
sbb
cmp
or
xor
fwait
mov
cmp
or
cld
add
cmovge
cld
mov
jns
fdivrl
cmp
mov
mov
xchg
mov
jmp
je
xor
sub
mov
and
mov
xor
xor
jne
mov
sub
inc
pusha
sti
bound
insb
push
jmp
out
pop
int
stc
sbb
sbb
shrl
shll
cmpsb
and
xchg
dec
insb
mov
stc
pop
jle
dec
frstpm(287
movsb
aaa
sub
jo
ffreep
dec
aad
xor
pop
arpl
shll
lea
cwtl
jmp
jmp
push
cmc
popa
mov
and
insb
sbb
mov
je
jl
icebp
push
pop
nop
rclb
pusha
or
inc
clc
inc
ret
xchg
leave
call
inc
xchg
arpl
xchg
inc
fisubs
inc
or
sub
inc
fwait
sahf
arpl
out
shl
add
mov
or
sbb
jle
int
rol
mov
mov
mov
scas
cmp
push
shlb
leave
mov
jge
or
mov
imulb
jno
nop
jle
es
repz
xor
inc
push
mov
add
clc
mov
jo
sub
scas
pop
loopne
and
dec
test
add
gs
std
out
cmpsb
in
add
xchg
enter
daa
jae
add
loope
ror
sub
int
cmp
jmp
movsl
xchg
push
and
mov
lahf
jmp
es
push
cltd
dec
sbb
test
xor
and
push
or
js
insb
push
pop
movsl
mov
push
in
push
xlat
cs
xchg
into
outsl
sub
pop
outsb
mov
mov
jns
cld
sarb
adc
mov
sbb
mov
push
jg
mov
cmpsl
jl
sub
xor
pop
pop
lcall
fisubs
adc
cmpsb
push
sahf
and
pop
mov
jg
or
mov
in
stc
pop
hlt
dec
add
adc
fwait
arpl
enter
xchg
xchg
xchg
lret
pop
xor
pop
and
sbb
movsb
into
mov
pop
cmc
mov
je
inc
mov
loop
adc
jge
push
adc
fwait
bound
inc
sbb
fists
in
adc
push
mov
mov
insl
shll
loope
push
gs
sahf
loopne
dec
cmc
pop
push
jbe
adc
enter
inc
push
sti
fisubrl
jns
sub
cmp
xchg
xchg
loope
dec
lcall
pop
pop
movsb
jmp
and
aad
cmp
clc
dec
imull
xchg
jp
dec
and
out
je
mov
mov
pop
pop
les
in
xrstors
ljmp
mov
pop
sub
pop
outsb
jne
inc
adc
inc
sbb
mov
jb
fsubrl
and
and
sar
mov
sub
pop
fildl
pop
enter
sahf
int
lcall
mov
dec
sti
mov
fcoms
das
dec
add
mov
pop
jnp
aam
inc
test
les
es
iret
insl
idivb
dec
fldl
cmpsb
mov
jnp
lods
sub
jb
jno
ss
or
mov
sti
in
shrb
popf
cltd
in
push
movsl
mov
hlt
test
lret
fnsave
int
ss
lcall
sub
add
pop
imul
jno
sbb
pop
push
stos
int3
xor
scas
add
add
faddl
and
or
push
xchg
xchg
push
xor
lcall
inc
sub
fisttpll
loope
fwait
iret
std
pop
push
notl
add
add
data16
xor
sar
and
in
dec
cmp
stos
dec
lock
cmpsb
fadds
into
cmp
loopne
mov
and
mov
jne
subl
sbb
and
sti
add
jmp
mov
jnp
out
out
fildll
mov
rcr
jp
loop
and
insb
jmp
jnp
outsl
sti
jle
popa
xchg
in
sbb
pusha
out
outsb
lods
jecxz
xchg
add
fstpl
sbb
add
and
std
pop
push
pop
fdivr
popf
pusha
add
add
loop
stos
add
xchg
js
sbb
mov
dec
scas
fbld
push
dec
add
adc
pop
cs
mov
pop
hlt
fwait
roll
loope
sbb
mov
pop
or
mov
adc
cmp
fcmovnbe
fidivrs
sahf
pop
shrb
add
outsb
add
xchg
cmp
push
shll
mov
mov
sbb
mov
test
jge
clc
and
jl
mov
repnz
xchg
das
fnsave
in
xor
cmp
test
int
xlat
inc
mov
push
in
jmp
loopne
daa
jb
fistpll
add
loope
jo
sub
dec
pop
cmp
js
pop
cmp
test
mov
rcrb
fld1
inc
sbb
lods
fidivl
mov
jle
sub
insl
pop
mov
inc
js
mov
pop
in
mov
push
cs
fdivrl
sbb
outsb
sbb
pop
adc
cwtl
add
and
hlt
mov
sbb
cli
push
adcb
push
lcall
fidivrl
popa
shll
mov
cmpsl
or
out
cs
enter
push
loop
adcb
sbb
push
cmp
bound
flds
sbb
dec
cltd
lret
outsl
and
adcl
push
test
lret
pop
xor
imul
dec
pop
or
mov
into
insb
insb
cmp
push
int3
and
pushf
pop
into
outsl
xchg
inc
inc
loop
inc
mov
fsubrl
push
movb
arpl
lods
ret
addr16
out
jnp
cli
sub
inc
sub
xchg
mov
incb
pop
gs
adc
loopne
aad
pop
jb
rcll
out
movsb
mov
les
mov
repz
cmp
sti
sbb
sbbl
sub
or
pushf
or
jmp
pop
loopne
xchg
into
js
jno
pop
nop
out
ret
push
inc
cmc
xor
dec
fwait
aas
push
je
pop
lcall
push
lea
sbb
cld
fsts
flds
push
inc
lock
fistps
ret
hlt
inc
cwtl
pushf
or
aas
ds
jb
mov
mov
rorl
idiv
mov
addr16
rolb
mov
sarl
icebp
xchg
add
mulb
out
gs
push
and
mov
ljmp
sub
jno
lahf
filds
sub
add
ret
push
cmpsb
mov
or
insl
dec
fsubs
cs
push
lods
mov
mov
in
add
mov
sbb
jge
inc
and
cltd
and
mov
jno
push
lea
fstpl
pop
call
idiv
xor
pop
cmp
adc
aad
lods
jb
out
dec
xchg
lods
xchg
arpl
rclb
xlat
femms
out
add
loope
or
inc
jmp
xorl
dec
inc
push
shrb
sahf
xchg
sbb
add
inc
roll
fwait
cmpsb
push
lcall
add
pushf
incl
leave
fs
xor
in
inc
aas
xchg
add
push
mov
cmp
lret
pop
popa
negl
mov
cmp
dec
mov
inc
push
xchg
jo
mov
int3
lea
and
scas
mov
out
add
shlb
ljmp
rol
adcl
xchg
out
ljmp
mov
arpl
test
jp
pop
xor
cld
xchg
lret
test
jle
imul
or
subl
xchg
xlat
es
rorl
or
or
push
push
inc
das
popf
xchg
mov
jae
stc
stos
je
mov
iret
or
jb
imul
mov
adc
push
iret
add
inc
fcmovne
lea
adc
ret
inc
in
dec
or
push
jnp
inc
cltd
mov
pop
add
push
and
add
jge
lds
jae
rolb
or
aad
cmp
push
out
hlt
icebp
jbe
mov
jge
mov
xchg
aaa
inc
pop
or
jmp
lcall
xchg
pcmpeqb
push
ja
mov
jo
ror
scas
sbb
and
sbb
cwtl
xlat
push
inc
sbb
xor
shl
bswap
aad
sahf
daa
jno
adc
xor
inc
loope
xor
sub
pushf
fidivrs
clc
and
mov
push
push
rcrl
insb
xor
mov
andb
out
out
pop
mov
add
cmovne
pop
and
xor
sub
jmp
mov
outsb
jnp
mov
pop
loopne
shlb
inc
cmp
pop
and
cltd
add
xor
aaa
mov
jne
cmpsb
sub
push
popl
pop
popa
ja
loop
jecxz
or
xor
sub
test
adc
stos
jmp
jg
hlt
mov
test
stc
in
pusha
sbb
cmpsl
ss
or
fdivrs
mov
mov
inc
pusha
test
cmp
dec
sti
or
pop
into
dec
fcoms
xor
cmp
outsl
jno
test
imul
pop
add
or
lods
stos
lds
xor
and
push
icebp
sti
cli
pusha
sahf
jecxz
xchg
test
sti
inc
dec
std
daa
mov
loopne
jb
pop
xchg
mov
adc
mov
fldlg2
mov
stos
repz
push
xchg
jmp
sahf
sbb
mov
lcall
jnp
dec
pushf
mov
and
cs
cwtl
aad
jmp
nop
lret
dec
mov
in
or
orb
divb
jne
cwtl
inc
outsb
gs
lcall
frstor
dec
stc
daa
cmp
pop
mov
sbb
and
inc
push
mov
imul
push
mov
pop
mov
sub
std
cmpsl
pop
sbb
and
pop
icebp
int
stc
cld
adc
lret
mov
or
jmp
pop
and
or
fisubrl
dec
mov
aam
xor
ret
loop
jno
mov
insl
les
dec
ror
fldenv
int
inc
popa
sub
je
mov
adc
and
popf
movsb
mov
rclb
sbb
pop
mov
xor
push
push
pushf
movsl
ffree
outsb
jecxz
lods
pop
out
inc
add
push
shll
sbb
out
lods
pop
mov
stos
mov
gs
ror
add
fcoms
mov
cld
ret
xchg
adc
cwtl
add
xchg
pop
in
push
mov
add
cmp
insl
push
add
add
movsb
xchg
xor
sarl
push
mov
xchg
dec
sbb
jno
pop
sbb
outsl
ja
cli
fs
shll
test
mov
aad
dec
rorl
mov
cmc
outsb
out
loopne
cmp
test
adcl
addr16
shlb
or
mov
jmp
insb
stc
dec
mov
jle
push
cwtl
pusha
and
mov
and
xchg
stos
push
pop
pop
or
popf
inc
pop
xor
jae
pop
scas
push
loope
dec
popf
scas
insl
inc
mov
mov
cmp
es
sti
sbb
sbb
js
cltd
scas
movsl
mov
xlat
adc
push
mov
ret
mov
dec
in
hlt
xor
sahf
inc
out
adc
cltd
loope
inc
sbb
or
add
jae
out
xchg
sbb
lds
jns
pop
je
mov
lods
out
cmp
inc
jno
mov
insb
je
popa
jge
jge
or
aaa
add
or
jg
jno
or
dec
jle
mov
pop
add
jo
ret
jo
clc
xor
and
sahf
in
test
arpl
cmpsb
dec
pop
movsl
in
mov
lret
ds
jo
nop
cmp
mov
cmp
out
xor
mov
cmpsl
push
ret
mov
sahf
and
cmp
lahf
dec
cmc
movsb
push
jg
inc
sbb
jo
add
lods
lret
xor
push
mov
cmp
cli
aad
dec
xchg
pop
bound
fists
xchg
iret
fcoml
data16
fidivrs
adc
dec
sbb
pushf
push
xorb
es
lods
push
mov
aaa
lock
push
mov
fmul
faddl
push
pop
fmuls
dec
shll
test
inc
nop
sahf
sahf
push
fldl
fnstenv
and
aaa
mov
aad
ss
mov
lds
fdivr
mov
lret
insl
xor
and
mov
cmp
xor
outsl
push
fdivrs
imul
fiaddl
out
imul
sahf
lods
xchg
pop
repnz
or
out
jmp
cli
xchg
daa
sub
scas
xchg
jecxz
repnz
xlat
decb
inc
gs
and
mov
cmp
xchg
cli
pop
fldenv
lret
sbb
sub
test
arpl
inc
mov
stc
call
xchg
sub
fdivrs
pushf
pop
mov
cs
push
mov
nop
movsl
jecxz
dec
adc
mov
dec
mov
dec
je
mov
repnz
push
cmc
jecxz
push
sub
xlat
and
pop
bound
sub
icebp
cmp
inc
cmpsb
inc
insl
lock
aas
jl
lea
ret
xchg
out
and
sbbl
orb
dec
in
int
dec
icebp
ja
loope
mov
icebp
movsb
xchg
cld
cmp
add
xor
out
dec
mov
cmp
das
call
js
sub
mov
ret
jno
popa
adc
insl
stos
adc
into
xchg
dec
cmpsl
outsl
es
popa
inc
jnp
lods
imul
and
cmp
xor
pop
mov
shr
xchg
rcrl
incl
jge
cmp
jg
adc
fucomp
mov
call
fnstsw
subps
mov
out
unpckhps
push
cmp
mov
int3
mov
pop
or
mov
mov
mov
dec
adc
jnp
xchg
pop
jns
pop
icebp
or
outsl
sub
inc
out
pop
mov
fwait
pop
or
movsl
add
push
js
incl
pushl
lret
add
mov
push
hlt
out
mov
push
insb
mov
xlat
lock
push
scas
dec
mov
sbb
out
popf
mov
mov
fidivs
das
mov
jg
ss
mov
add
lret
sbb
test
sub
lods
xchg
shlb
jns
jp
outsl
test
sub
xchg
lcall
pop
push
in
and
pusha
mov
lret
jge
add
inc
and
jae
jae
push
movsb
insb
mov
push
cwtl
and
icebp
jp
stos
pop
lods
mov
jge
inc
sbb
xchg
sbb
scas
or
push
and
lock
ret
cltd
into
ret
cmp
hlt
jl
mov
inc
ljmp
push
xchg
mov
sub
cmc
ja
int3
fldenv
ljmp
xor
sarb
mov
ljmp
mov
movsb
sub
mov
jbe
mov
sub
cmpsb
jns
aaa
rcl
or
mov
push
jl
fwait
orb
dec
push
cmp
mov
test
scas
xlat
add
and
gs
lds
inc
cmp
push
cmpsb
rclb
fucomp
sahf
push
ret
lret
addr16
outsl
movsl
inc
cmp
and
into
cmp
pop
vmovlps
xchg
lahf
addr16
cmpsb
push
push
adc
add
sub
xor
scas
je
ret
mov
es
mov
sti
cltd
push
xor
sub
cs
xchg
in
cli
shrb
decl
dec
icebp
xor
das
ret
xchg
and
test
mov
hlt
int
dec
shrb
sarl
roll
push
cmp
lcall
mov
adc
jmp
in
and
in
xchg
cmpsb
mov
cmc
stc
sti
jbe
fs
adc
and
ss
sbbb
nop
cmc
sbb
sub
insl
mov
or
jae
into
adc
push
pushl
lods
ds
loop
psubsb
fwait
je
cmpl
adc
pop
mov
mov
cli
fs
mov
out
sbb
mov
insl
insl
mov
xor
loopne
out
pop
iret
mov
fstps
aas
les
das
call
xchg
test
dec
cmp
add
nop
mov
sub
outsb
adc
ja
pushf
or
mov
mov
sub
adcb
dec
jae
repz
cs
out
add
jecxz
sub
inc
push
lea
lock
push
xor
pop
adc
dec
sbb
mov
pop
cli
arpl
inc
mov
push
sbb
inc
mov
jno
inc
sarl
mov
cmc
gs
cwtl
add
cld
mov
cmpl
jnp
hlt
cld
addr16
lret
movsb
xor
icebp
mov
ja
lock
sub
mov
aaa
sub
adc
ret
add
je
xchg
sbb
fmuls
jmp
jb
xor
cli
popa
pop
sbb
lods
aam
fistpll
push
sahf
insl
and
shll
cmpsb
sarb
popa
les
addb
jae
fstl
cmc
sub
and
sti
xchg
rcrb
push
test
rcrl
dec
pop
adc
xchg
xchg
out
jb
fcoms
pop
and
movntps
push
or
mov
pop
mov
mov
sahf
dec
ja
xchg
xchg
pusha
xchg
sbb
lret
xchg
sub
sub
push
xorl
outsl
add
jmp
xor
push
jb
jns
jg
in
sbb
jae
mov
aaa
mov
xchg
lret
cmp
lock
or
shll
mov
pusha
xor
dec
xchg
je
mov
std
out
sahf
push
push
bound
aad
xchg
out
add
push
test
in
jne
or
mov
xor
inc
sub
adc
in
mov
in
cwtl
sbb
xor
xchg
push
inc
out
jbe
ss
sub
int3
mov
addr16
adc
push
in
push
xor
subl
pusha
fbld
scas
imul
push
push
jbe
out
scas
hlt
iret
and
ret
mov
cmp
nop
arpl
out
in
inc
in
inc
or
icebp
dec
inc
push
push
mov
add
les
cmp
fimuls
or
jo
enter
pop
mov
push
movsl
out
movsl
ret
sbb
sub
jbe
imul
popa
stc
dec
aaa
adc
or
lods
stos
jno
adc
dec
pop
das
push
push
and
leave
jo
in
scas
mov
push
and
aam
test
stc
cmp
inc
enter
push
test
in
test
enter
daa
outsb
es
cmp
push
sbb
mov
add
or
sbb
lahf
xchg
clc
push
and
pop
adc
nop
cld
or
repz
xchg
aaa
mov
pop
es
rcr
pop
loopne
push
push
ret
mov
cmpsl
fsubr
xchg
insl
sub
outsb
movsb
xlat
lret
adc
add
mov
pop
test
outsb
mov
mov
popl
mov
int
imul
sub
pop
pop
imul
rcl
aad
lahf
dec
lods
sbb
add
cmp
out
jg
sti
pop
mov
jnp
stc
mov
mov
mov
mov
push
cmp
outsl
jo
testl
sbb
cmp
inc
rorb
out
into
clc
roll
insb
xchg
add
outsl
push
jl
loop
adc
push
js
adc
test
or
ljmp
aaa
push
mov
imul
int3
dec
test
sti
push
mov
lcall
sar
out
sub
cmp
imul
xor
repz
shl
xchg
dec
mov
xchg
cmp
mov
iret
test
xchg
adc
push
cwtl
jmp
hlt
subb
mov
aad
pop
nop
pop
push
loope
rolb
inc
inc
sbb
ja
fnsave
movsb
jecxz
add
outsb
and
movsb
pop
cld
call
aad
cmp
mov
inc
dec
mov
movsl
stc
pop
popf
xorl
mov
dec
adc
jl
int
add
ja
mov
and
or
out
cwtl
mov
les
mov
sub
xchg
pop
sub
adc
repnz
test
mov
sbb
das
cmpsb
add
sub
icebp
mov
ret
nop
lcall
movsl
mov
cmpsl
insl
push
outsb
popa
jb
inc
lods
aas
pop
lea
jns
push
mov
xchg
pop
pop
rorb
jns
test
or
push
cltd
or
pop
nop
mov
ret
dec
adc
pop
shl
stos
imul
pop
xchg
jg
sbb
out
jp
std
push
or
scas
xor
jno
mov
arpl
dec
fiadds
test
jns
adc
push
pop
inc
sbb
mov
fwait
mov
setb
mov
xor
push
jns
mov
xchg
cmp
cwtl
mov
in
stc
mov
dec
cmp
scas
cltd
pop
dec
lcall
mov
iret
mov
push
sub
inc
jge
push
bound
test
xchg
mov
mov
out
mov
or
jge
jp
push
and
insb
cmp
sarl
aaa
xor
pop
in
jno
pusha
cmc
xchg
xchg
fistpll
xchg
and
sub
jns
inc
cmp
and
sub
popf
and
sarl
outsl
pop
stos
inc
push
push
xchg
sub
lds
les
push
mov
jne
leave
sti
pop
iret
addl
pmuludq
adc
inc
lock
push
xchg
frstor
and
add
jno
int3
scas
loopne
pop
cmpsb
jns,pt
out
imul
mov
cmpl
push
sbb
movsb
inc
lret
inc
push
xor
jbe
xchg
cmpsb
jge
xchg
sbb
cmp
mov
out
ds
enter
call
push
add
xor
lods
adc
lods
ret
cmp
test
les
dec
inc
push
cli
fbld
insb
pop
sub
shll
cmp
mov
loope
cmpsl
and
jne
cmp
xchg
movsl
mov
sbb
mov
mov
addl
fwait
ret
dec
add
and
ret
cli
test
pop
dec
lock
in
pop
pop
cmp
push
loope
mov
sub
push
outsb
pop
jne
adc
fists
mov
fwait
push
mov
or
jns
push
xchg
dec
dec
int
mov
sub
mov
pop
push
pop
jns
scas
or
shrl
mov
pop
sub
stc
mov
adcb
xchg
push
mov
ss
stc
imul
adc
fwait
pop
es
sub
nop
testl
jo
xor
out
or
push
pop
into
fisttpl
pop
cmc
xor
outsl
in
push
pusha
loop
inc
xchg
imul
mov
fwait
pop
fsubl
pushf
inc
lods
inc
and
xchg
dec
icebp
mov
sub
xchg
mov
out
gs
mov
cmpsb
gs
scas
loopne
lods
sbb
pop
and
fxch
pop
arpl
cmp
xchg
pop
xchg
or
fnstsw
stos
scas
mov
sub
subb
xlat
pop
xor
add
orb
aam
nop
nop
ss
xor
xlat
dec
dec
out
inc
icebp
je
jg
jecxz
push
pop
jno
test
xor
pop
jnp
test
dec
movsl
repz
fstpt
xchg
jge
cmp
mov
aas
pop
call
iret
jl
mov
xchg
pop
rcl
das
dec
psubd
inc
add
cwtl
jns
or
mov
pop
icebp
sub
cmpsl
cld
mov
ret
hlt
cmp
mov
pop
inc
lock
jno
das
test
aam
jle
lret
pop
icebp
aam
push
dec
ret
push
xor
ret
insl
pusha
mov
dec
mov
iret
popa
mov
mov
mov
pushf
lret
xor
lcall
dec
dec
shlb
das
cltd
ss
mov
push
pop
sbb
clc
cwtl
loopne
xchg
lds
ss
movsl
rorl
int
imul
out
cmp
addr16
cs
int
jo
jmp
push
jecxz
in
stc
dec
xor
into
jmp
js
dec
xchg
sub
xchg
lret
negb
mov
jg
mov
xlat
or
pop
mov
jmp
frstor
add
inc
sbb
out
jns
cmp
adc
mov
imul
pop
or
movsl
dec
fsubrl
jg
jne
push
mov
jne,pn
pusha
jno
nop
jb
out
pop
add
bound
xchg
jmp
jl
roll
or
mov
or
int3
lds
and
insb
movsl
push
mov
inc
jle
in
in
scas
adc
or
fistps
add
in
mov
jae
dec
mov
popf
dec
out
xchg
scas
mov
stos
mov
into
xchg
andb
imul
scas
xor
push
clc
ljmp
loopne
leave
sub
test
es
repz
or
test
inc
adc
cmp
add
sti
mov
add
ficoms
jnp
ror
jge
sub
repnz
xor
movsb
int3
cmp
jg
fs
sub
jge
cmp
sbb
mov
aaa
pop
cli
or
cmpsb
dec
jl
lock
add
out
fidivs
pop
push
sub
dec
fnstcw
push
pop
inc
inc
out
in
pop
roll
mov
xchg
and
xor
push
loope
push
mov
cmp
push
ds
mov
andb
mov
lahf
les
jne
rcl
mov
pushf
adc
mov
pop
scas
js
addb
jb
push
insl
xor
rcr
inc
adc
dec
outsb
push
jno
push
int
mov
pushf
mov
cmpb
mov
pop
pop
and
mov
int
decb
push
mov
aam
xor
popa
outsl
xchg
sar
push
mov
add
add
cmpsl
sahf
lcall
xorb
push
jg
fidivrs
mov
and
stc
and
dec
adc
adc
in
and
int
cld
lret
ljmp
mov
movsb
into
mov
aam
xor
das
mov
mov
dec
adc
xchg
ja
sub
test
shrl
mov
dec
push
out
sti
sar
pop
push
in
cli
test
sahf
sti
scas
aad
data16
shlb
pop
sub
jecxz
loopne
addr16
into
xchg
dec
mov
popa
xchg
into
adc
sbb
in
int3
xlat
dec
mov
sub
sahf
adc
sub
pushf
or
jmp
fdivs
aad
testb
adc
nop
cmp
addr16
xor
cld
js
add
jecxz
jle
je
and
inc
mov
shll
pop
cs
addl
xor
pop
jecxz
clc
inc
ret
inc
flds
jb
js
mov
adc
movsl
shll
testb
dec
cwtl
xor
hlt
mov
aad
mov
loop
cld
call
cs
mov
jmp
jle
mov
mov
fs
mov
sbb
test
je
inc
ret
lods
sbb
test
inc
push
decl
data16
cmpsl
imul
popa
mov
or
mov
cmp
lcall
aam
pusha
shlb
cltd
insl
xchg
lcall
repnz
push
pop
popf
mov
clc
rol
pop
xchg
jge
cmp
shll
lock
push
cmp
out
fwait
mov
xchg
or
mov
cmovs
rorb
arpl
xor
xor
xchg
xchg
mov
xchg
scas
sbb
in
inc
dec
mov
ficomps
insb
mov
sbb
shlb
mov
out
aaa
jns
xchg
pop
in
in
xor
ficoml
mov
pop
and
ret
shrl
sub
jl
mov
repz
andb
shll
mov
ret
and
cmp
and
fdivs
inc
or
xorl
out
notl
or
xchg
ret
add
and
stos
lock
pop
cltd
jle
movsl
mul
fmull
pusha
sub
mov
pop
sbb
incl
and
jb
push
mov
push
popf
jno
in
add
push
in
shrl
es
add
popa
sarb
insb
inc
scas
xchg
fldt
push
aas
sbb
adc
sbb
aas
jnp
ret
pop
leave
mov
dec
add
sub
inc
mulb
or
add
adc
xchg
add
mov
pop
add
add
xor
das
lds
in
idivb
dec
dec
imul
push
incb
push
into
lret
pop
jbe
aaa
jl
mov
lock
aaa
mov
mov
xchg
jl
mov
dec
test
mov
lea
stos
push
scas
push
bound
fldt
push
pop
nop
pop
inc
jne
push
cmpsb
fimuls
int
mov
cmc
daa
imul
mov
stos
mov
je
adc
xchg
movsl
mov
add
lahf
jecxz
ss
sahf
repnz
test
xor
fst
orb
js
scas
mov
push
push
rcll
imul
aas
and
int
out
mov
call
xchg
das
jae
ja
add
push
or
mov
cmp
and
lea
int
push
js
mov
push
out
adc
inc
rcll
cltd
sbb
adc
cmp
pop
scas
orb
jg
push
ds
inc
aam
xlat
cmp
fs
in
adc
or
cmp
mov
xchg
or
stc
scas
aam
ret
cmp
mov
or
fdivs
cmc
rorl
outsl
stos
movups
pop
dec
and
out
adc
cltd
mov
popw
jnp
lods
adc
inc
mov
mov
out
mov
cli
xchg
popa
outsl
mov
lds
stc
mov
mov
clc
rcll
adc
sub
les
sbb
mov
add
add
rcll
loopne
pop
adc
je
jmp
jo
cs
pop
sahf
aad
push
pop
nop
in
nop
mov
mov
sub
pop
in
dec
or
jecxz
and
fldcw
mov
mov
xchg
cmp
out
sbbl
sahf
fistpl
xchg
adc
dec
test
inc
hlt
sbb
jb
cmpsl
std
mov
popf
pop
add
not
sub
std
xchg
xor
mov
movsb
dec
mov
hlt
xchg
cld
adc
adc
mov
push
movsl
lock
das
inc
cwtl
shlb
adc
jmp
aas
call
loope
mov
push
cmp
or
push
mov
mov
icebp
lods
cmpb
mov
inc
mov
mov
repz
jbe
movsb
lcall
inc
dec
jl
loop
lret
mov
clc
push
cmp
addr16
aas
pop
shll
stos
ss
fists
xorl
add
loop
xor
test
mov
cwtl
dec
adc
test
cs
xchg
push
cmpsl
inc
loop
ret
or
and
xorps
add
nop
lcall
lahf
xor
stos
jns
mov
in
xor
mov
mov
test
ja
fdivrl
sub
ret
sbb
in
dec
adc
call
mov
sub
out
sbb
xchg
bound
pop
jmp
adc
addl
dec
out
pop
bound
xchg
push
packuswb
loope
jp
imul
sub
scas
jnp
lods
push
or
in
push
std
pusha
xor
inc
and
push
xchg
popa
inc
pop
adc
jae
fdivl
push
jae
in
popf
cwtl
push
pop
mov
sub
fs
cltd
stc
sbb
or
jl
adc
scas
notl
push
xchg
into
iret
sahf
std
jmp
leave
pop
data16
arpl
sub
push
testl
adc
aad
cmp
fcmovne
jo
dec
pop
xor
repz
ljmp
add
lahf
mov
sahf
xchg
fidivrs
xorl
push
sbb
mov
cmp
aaa
jl
testl
ret
lret
adc
inc
dec
sbb
imul
mull
mov
and
cwtl
test
and
lcall
and
mov
push
push
cmp
js
sub
push
cmc
cmp
andb
je
mull
lea
lahf
add
sbb
roll
outsb
xor
push
dec
inc
mov
idivl
jo
pop
fdivl
push
call
lret
out
sub
mov
xor
loope
jo
mov
test
and
cmpsb
addr16
repnz
lcall
sub
inc
lahf
pop
rclb
lcall
jg
dec
aaa
or
pop
cmovno
mov
subb
jg
rcll
stc
mov
adc
out
ss
cmp
pop
lret
mov
lret
push
xor
and
push
pop
jne
test
cmc
mov
fildll
repz
mov
stc
imul
incl
dec
lock
lods
sti
inc
jge
adc
dec
fwait
ljmp
xchg
xchg
sti
or
fs
sbb
mov
loopne
ljmp
xchg
aad
insl
sub
les
arpl
subb
push
aaa
or
cmp
mov
sub
popf
adc
stos
test
int3
subl
test
and
dec
dec
inc
xor
inc
pop
dec
push
pop
mov
jecxz
or
jp
push
lea
or
cmp
shll
pop
xchg
pop
and
data16
fcmovne
int
pop
sub
rolb
jmp
sub
enter
faddl
sub
les
data16
cbtw
stos
mov
notl
icebp
scas
sub
cld
sub
lret
iret
push
fwait
mov
mov
lock
shrl
jge
mov
or
aam
xlat
push
ret
lret
mov
jnp
adc
dec
nop
cmpsl
imul
popa
into
inc
lods
jmp
cs
add
inc
nop
mov
adc
leave
rcr
ret
fildl
test
or
push
movsl
cld
or
aad
push
clc
dec
dec
aas
xchg
sti
ret
xlat
nop
rcll
and
mov
out
popa
jge
xchg
fwait
sbb
insl
clts
mov
repnz
xor
fdivrp
mov
fwait
iret
in
jp
or
ja
pop
xchg
dec
loopne
mov
inc
decb
inc
insl
fwait
jbe
or
mov
xchg
imul
push
std
xor
xor
daa
jno
stos
out
js
sub
mov
cmp
outsb
dec
data16
mov
dec
nop
mov
mov
jne
adc
mov
mov
inc
cld
jnp
jmp
fnstsw
out
xor
or
mov
jp
xchg
mov
and
jbe
fs
cmp
add
in
mov
mov
stc
add
xchg
outsl
sub
aaa
inc
fs
notb
ss
ret
push
rcll
pushf
stos
or
dec
xchg
xchg
sbb
iret
int
add
push
int
ficoml
xor
cmpl
push
and
leave
mov
push
hlt
shlb
mov
xchg
inc
cld
mov
jmp
neg
xor
push
jae
in
pop
fadds
jg
vcvtdq2ps
out
inc
fidivrs
xchg
lds
xor
rcrb
mov
icebp
nopl
cmp
lds
xor
jbe
scas
fwait
jge
test
jno
cmp
out
jno
adc
jl
mov
movsl
push
in
xor
sbb
and
out
test
lock
roll
lods
cmp
or
daa
enter
daa
imul
or
fstps
sub
clc
sub
jo
ds
add
movsl
int3
seto
sub
mov
push
inc
fcmovnu
sbb
sahf
add
add
push
pop
iret
pop
jmp
movb
sbb
sbb
xor
cmp
or
dec
outsb
xchg
jb
adc
dec
pop
sub
cmpb
pop
mov
ljmp
popf
lahf
int
lods
mov
sub
sbb
fcmovnb
fsubr
mov
inc
or
mov
cmp
adc
mov
mov
daa
add
inc
jae
fs
inc
adc
in
mov
push
mov
fcoms
aam
testl
mov
mov
and
or
mov
stos
cmc
dec
pop
fidivs
iret
lds
fcomi
loop
and
int3
adc
mov
cs
lods
loop
xor
dec
xor
mov
fwait
jge
sti
mov
hlt
pusha
gs
idiv
loopne
daa
fistpl
inc
mov
pop
mov
les
or
xchg
pop
js
sbb
xchg
and
xlat
or
sub
pushf
or
lods
jmp
in
mov
or
sti
aad
inc
push
nop
mov
enter
iret
add
lret
je
call
movsb
jge
inc
lea
scas
or
push
pop
outsl
pop
inc
mov
dec
push
std
inc
jne
int3
popa
out
inc
push
jo
inc
sub
hlt
jb
mov
lret
ss
rcll
jns
notb
sub
fucomip
push
cwtl
lea
sbb
xchg
test
sub
ds
mov
push
jb
lds
cld
das
add
mov
add
aam
sbb
ret
pop
outsl
dec
cmpsb
call
or
pop
movsb
cmpsl
push
inc
aaa
popa
in
shrd
mov
sub
fisubl
xor
shrb
fiadds
enter
fisubrl
clc
test
cli
xchg
cmp
insb
ljmp
and
lock
adc
dec
out
in
xchg
loop
mov
cmp
cld
pcmpgtw
orl
pop
inc
xor
mov
je
xchg
mov
jmp
sbb
inc
adc
cld
or
cmp
fwait
movsl
std
stos
push
push
mov
add
icebp
inc
lcall
cmp
push
fsts
dec
loop
mov
hlt
ja
dec
into
dec
pop
xchg
outsl
mov
mov
mov
cli
mov
dec
and
ret
or
fcoms
loop
push
mov
xchg
test
xchg
sbbl
arpl
data16
sub
mov
frstor
or
push
and
test
push
mov
cli
jle
mov
pop
pusha
cld
lods
jae
sbb
push
pop
rcr
inc
outsl
stos
jl
mov
inc
add
mov
stos
inc
add
fsubrp
mov
bound
lock
mov
add
iret
pop
push
add
add
xchg
lret
sbb
xchg
jmp
push
adc
fisubl
push
int
inc
scas
pop
xchg
sbb
mov
shlb
cmp
movsb
jmp
repnz
rcll
mov
xchg
push
mov
pop
jg
mov
scas
sbb
sbb
aaa
cli
stos
fisttps
jbe
es
subl
notb
push
jb
clc
xor
jae
subl
push
test
in
push
mov
add
in
out
adcb
test
ret
daa
push
xchg
pop
loope
bound
mov
pop
ds
mov
and
imul
push
pop
xor
add
int3
xchg
xor
adc
leave
je
pop
adc
pop
pop
jg
push
xor
fsubr
pop
and
or
aam
not
adc
es
adc
into
rclb
mov
ret
mov
mov
sub
xchg
lcall
xlat
mov
and
mov
dec
inc
test
stos
jg
aam
mov
in
stc
cld
add
inc
adc
mov
fwait
cmp
shll
test
push
loop
inc
mov
cmp
lcall
dec
xchg
xor
mov
cmp
fcomps
imul
mov
adc
test
into
lods
leave
rorb
inc
dec
push
cli
sub
dec
mov
push
cmp
push
sahf
bound
and
jbe
loopne
ja
pop
test
pop
adc
xor
les
repz
xchg
fisubrl
sbb
shll
or
dec
inc
mov
adc
pop
or
shlb
outsl
lcall
jge
loopne
or
cmp
dec
fdivl
sub
pop
cmpsl
xchg
movb
add
cs
iret
add
jp
loope
xor
mov
sub
pop
outsl
aaa
push
inc
fidivrs
inc
inc
pop
test
je
das
jb
insl
icebp
mov
mov
inc
negb
mov
cmp
outsl
movups
pop
add
call
mov
and
and
adc
clc
or
mov
addr16
es
inc
insl
jecxz
test
jp
cmpsl
mov
xchg
arpl
push
out
lods
ror
mov
dec
out
and
adc
push
rolb
jg
test
inc
mov
in
dec
push
sub
frstor
pop
sub
mov
push
sub
jne
call
pop
ret
stos
add
out
daa
inc
dec
xchg
sub
cmp
xor
pinsrw
or
push
shll
mov
mov
mov
test
xchg
inc
xchg
fisttpll
pop
fbstp
cmpsl
push
sub
fwait
aam
int3
push
clc
xor
add
cmp
shll
arpl
mov
fmuls
shr
xchg
push
out
sbb
push
add
scas
divb
ja
int3
dec
dec
add
mov
cmp
mov
imul
out
mov
shl
out
mov
inc
bound
out
sub
adc
ret
subl
scas
sub
test
call
and
out
insb
mov
add
lret
in
mov
popa
fbstp
mov
xchg
adc
je
inc
jp
jg
mov
in
or
xor
stos
repnz
sbb
das
das
imul
jo
and
xchg
jmp
test
mov
mov
popf
hlt
aam
jno
cmpsl
fsubrs
ret
push
lods
add
push
push
add
out
mov
faddp
std
pop
lds
inc
dec
rclb
mov
xchg
cmpsb
mov
movsb
adcl
lods
gs
hlt
test
adc
jle
aad
mov
hlt
mov
jl
or
mov
xor
into
int3
jb
iret
or
and
hlt
shrb
fwait
and
mov
or
int
enter
daa
addr16
xor
pop
mov
notl
cmp
insb
add
and
jno
pop
and
dec
sbb
mov
add
ljmp
mov
inc
pop
aaa
out
js
das
lret
dec
lea
out
push
jmp
iret
fcoml
arpl
outsb
pop
sub
rolb
repz
jns
mov
inc
push
mov
in
cld
and
iret
filds
mov
movsl
fsubrl
stos
add
sbb
shl
lods
mov
gs
movsb
cmp
and
cmpb
mov
fadds
mov
movsb
xchg
push
cmp
mov
lret
dec
xor
dec
pusha
cmp
jecxz
or
jnp
cmc
fldl
test
outsl
daa
mov
loop
int3
icebp
imul
clc
int3
add
out
sub
enter
std
out
jmp
mov
in
jno
cwtl
sti
sbb
add
pop
and
iret
lea
decl
jl
jg
ds
movsl
sbb
popf
push
fstpl
or
mov
mov
adc
jns
pushf
bound
jne
shr
pmullw
add
pop
push
jne
imul
inc
movb
je
adc
push
movb
sub
in
dec
xor
pop
lods
lahf
cmpl
cld
fistl
ficomps
add
inc
pusha
inc
sbb
adc
jb
insb
fdivrl
leave
pop
sbb
mov
movsl
neg
into
inc
std
sub
movsb
loop
cwtl
pop
dec
mov
xor
test
cld
mov
leave
imul
jnp
inc
das
mov
aaa
adc
out
dec
jb
imul
lods
and
mov
or
push
popa
adc
inc
lods
sub
push
mov
outsb
das
test
stos
rorb
push
sbb
test
out
adcl
out
icebp
fisttpll
push
clc
cli
in
xchg
mov
arpl
rcll
repz
insl
or
imul
jo
notl
xchg
mov
flds
jmp
xchg
or
loop
mov
movsb
mov
icebp
test
fcompl
xchg
pop
rolb
cltd
add
mov
pop
push
fwait
mov
hlt
add
aas
fiaddl
xor
aad
in
andb
and
into
cld
mov
push
enter
pop
dec
aas
sub
mov
out
mov
fmuls
dec
lahf
lock
jne
dec
pushf
mov
xchg
xchg
jo
bound
cmp
movsl
cmpl
out
jno
sub
cmp
addr16
dec
or
js
lret
insl
mov
jnp
stos
add
xchg
mov
in
push
mov
xor
fists
inc
xchg
call
mov
inc
test
xchg
push
jg
popf
xor
repz
sub
cmp
mov
jne
scas
adc
push
mov
ds
ret
push
leave
repz
hlt
pop
adc
cmp
or
scas
rolb
rcr
push
or
add
int3
sbb
rcrb
mov
popa
lds
pop
mov
ljmp
movsb
push
mov
sbb
jge
sbb
push
aaa
js
xor
pop
test
jno
out
push
cmc
testb
aas
push
cmp
xor
sub
mov
mov
or
push
push
mov
inc
inc
jl
cmpsb
insl
pop
jp
mov
les
cmp
mov
sub
out
cmp
js
add
movsl
loope
adc
stc
mov
jo
mov
fwait
jns
call
in
dec
add
js
inc
scas
pop
fcomps
and
shrb
inc
jns
sub
outsb
mov
jnp
rcr
aaa
pop
push
aam
xor
or
shrb
je
cmpsb
mov
xchg
sub
sbb
pop
into
test
rorl
sbb
mov
sahf
insb
pop
outsb
test
jb
jg
call
lret
pop
pop
fs
std
adc
fsubl
fadds
in
testl
or
cmc
or
or
adc
adc
cmc
movsb
in
jg
loopne
cli
outsl
push
stos
add
insl
or
or
adc
mov
or
xchg
mov
std
addl
or
mov
fsubrl
sub
test
sub
mov
enter
or
rcl
add
les
inc
mov
sbb
inc
or
sub
or
adc
pop
dec
pushf
or
in
cs
sbb
xor
push
dec
lret
inc
fldcw
mov
jecxz
push
out
movb
cltd
call
int
rcrl
inc
push
orl
jp
fildl
mov
jmp
jnp
jns
mov
data16
mov
sub
push
outsl
xor
add
mulb
pop
push
std
aam
lret
push
sub
push
xor
icebp
or
cld
ljmp
mov
sti
ds
aaa
jae
sub
mov
out
adc
fiaddl
es
in
subl
cld
lods
cmpsl
adc
popa
sub
jp
xchg
stos
lods
mov
xchg
imul
gs
mov
mov
shlb
repnz
insl
push
es
add
mov
mov
clc
xor
test
shrl
scas
pop
sbb
subl
rclb
push
lret
jb
cmc
js
sub
mov
xchg
dec
adc
or
adc
inc
aad
call
fwait
xor
dec
add
bound
jns
xor
or
add
xchg
mov
mov
jg
mov
and
inc
gs
xor
lods
mov
mov
mov
inc
lds
dec
adc
jne
daa
jg
or
data16
bound
stos
jmp
or
add
out
sbb
sub
jnp
push
lds
int
stos
sti
nop
and
sbb
jnp
adc
cmpsl
in
dec
aaa
pusha
int
sbb
jne
mov
pop
gs
filds
jnp
es
aaa
popf
pop
fnstenv
mov
lcall
pop
pop
sbb
fisubs
imul
aaa
push
jmp
sub
iret
jns
imul
push
push
hlt
push
jbe
inc
or
sub
loop
jecxz
lea
cmp
mov
cmc
add
pop
call
aam
push
jns
lds
out
mov
mov
mov
repnz
mov
movsb
cltd
ja
push
test
xor
or
sbb
jp
aaa
aaa
or
mov
negb
mov
inc
mov
add
test
scas
hlt
icebp
and
dec
test
sbb
flds
sahf
inc
cmpsb
lock
enter
daa
and
cwtl
ret
xor
add
push
movsl
call
test
push
nop
jb
sbb
stc
add
and
xor
mov
adc
test
js
out
pop
pop
jae
push
imul
fstps
pusha
adc
mov
and
pop
test
sbb
popa
xor
test
and
sub
pop
in
inc
rorb
and
mov
mov
fstps
xor
inc
jg
ja
mov
pop
and
fs
pop
jno
mov
sub
add
jne
stos
dec
push
xor
jmp
cmp
icebp
pop
or
loopne
repz
imul
xor
cld
xlat
outsl
in
outsl
loop
inc
xor
adc
outsl
mov
hlt
xor
xlat
lods
jle
xchg
inc
mov
cli
les
fwait
pop
cmp
inc
pop
jecxz
ja
fdivr
lret
or
or
lcall
adc
shrl
jns
repz
nop
xchg
and
cmp
sbb
xlat
push
sbb
les
std
pushf
mov
adc
cs
insl
pop
aad
shl
nop
push
sub
sub
cmovb
pop
mov
cmpsb
xchg
je
xchg
sahf
jecxz
cmp
lea
mov
dec
sbb
int
cmpsb
jp
dec
std
dec
sbb
mov
ficompl
jo
inc
jae
mov
xchg
dec
dec
aas
push
adc
jb
pop
mov
and
aam
rorl
or
arpl
std
jnp
push
cwtl
push
or
mov
push
pop
mov
add
loope
stos
cld
adc
xchg
mov
mov
pop
dec
lock
das
jge
mov
sub
mov
push
xchg
jmp
movsl
insl
cwtl
shll
xchg
sbb
cmpsl
fs
pop
mov
inc
testl
mov
mov
jo
insb
out
das
mov
lods
push
xchg
cltd
out
daa
xor
hlt
cmp
fnstcw
clc
jo
ret
xchg
ss
into
lcall
ret
cli
cli
stos
shlb
out
push
or
push
movsl
push
aad
adc
xor
inc
mov
mov
stos
enter
repnz
mov
jno
and
push
or
pop
in
fwait
popa
cmp
cmc
imul
jge
or
sbb
xor
jns
shl
in
mov
mov
mov
loopne
inc
ja
dec
fisttps
mov
aaa
stos
jno
sarb
mov
out
gs
jne
data16
push
pusha
mov
jmp
aam
sub
jb
mov
repnz
mov
les
ficomps
add
std
sub
jnp
inc
or
popf
pop
in
cmpsl
test
popl
xchg
cmc
xor
pushf
sbb
jae
ljmp
subb
push
cmpsb
or
stos
dec
mov
push
sbb
je
imul
push
xor
adc
iret
fcomps
ret
and
loope
shl
mov
xor
aam
adc
or
pop
iret
inc
or
xor
insb
add
jb
in
repnz
add
test
xlat
jl
mov
push
jns
nop
mov
cmp
mov
movsb
and
mov
neg
xchg
jbe
inc
inc
jge
fisubs
divb
ja
int
idivb
xchg
dec
mov
jno
sti
shll
fbstp
jle
insb
out
mov
test
out
dec
inc
pop
add
int3
in
mov
enter
daa
fs
adc
lret
mov
sub
sbb
cmp
cmp
ds
iret
mov
and
pusha
lret
rcr
push
arpl
stc
add
cmp
xor
jae
aad
mov
js
and
pop
push
int3
shrl
cmp
push
lock
sub
and
outsb
and
adc
xchg
sub
jae
sbb
jns
push
adc
push
lods
cmp
sub
call
lcall
or
int
cmp
jns
pop
sahf
mov
insl
test
sbb
mov
out
stc
fdivrs
ficoml
sub
ljmp
stos
mov
lret
push
xor
mov
or
test
cmc
xor
xor
sahf
enter
lea
push
jecxz
cmp
addb
inc
sbb
int
lods
gs
sub
repz
cli
imull
mov
mov
imul
jecxz
out
out
sbb
pop
jnp
xor
shrb
mov
xor
mov
inc
mov
push
jo
cmp
pop
shrb
shl
adc
mov
jmp
or
sti
fwait
out
aad
lock
dec
mov
push
dec
sbb
into
dec
jecxz
psraw
mov
dec
call
lret
xlat
mov
cmpl
add
pop
sti
adc
xchg
inc
mov
dec
aas
lock
or
push
mov
sahf
into
ljmp
pop
push
cwtl
or
dec
mov
mov
jb
mov
cltd
lahf
lret
imul
imul
lock
das
pop
fisubs
aam
pusha
aam
push
lahf
ret
and
fnsave
dec
xchg
into
push
mov
pop
and
aad
mov
xlat
mov
shlb
jge
ror
inc
jecxz
and
mov
mov
sub
sti
adc
mov
mov
xchg
jne
sbb
inc
inc
dec
rcrl
cmp
cmp
mov
or
xor
cmovo
cwtl
add
fisttps
sbb
xor
ficompl
xchg
jns
test
xor
or
out
rcrl
aam
add
mov
inc
jb
fwait
nop
xor
push
test
adc
pushl
adcl
in
xor
push
int3
mov
xchg
sub
mov
fwait
pop
xorb
mov
sbb
jns
push
ret
jmp
les
dec
jb
jne
or
out
xor
bound
mov
icebp
xchg
jecxz
lahf
mov
jmp
sub
jno
leave
addr16
and
and
fsubs
jnp
xor
jle
dec
in
push
xor
mov
call
pop
roll
inc
cmpsb
fists
les
loop
enter
test
pop
ljmp
push
scas
xchg
xchg
scas
fistps
imul
jmp
adc
xor
aaa
clc
ret
call
hlt
add
jecxz
cmp
or
fdivs
movsl
ficompl
or
sbb
fnsave
pushf
pop
jl
sub
dec
les
sarb
das
repnz
mov
orb
scas
ljmp
enter
notb
aaa
mov
lcall
mov
ss
and
jecxz
loope
cs
cmp
ss
dec
out
mov
jae
pop
push
mov
outsb
inc
in
scas
outsl
cmpsb
testb
jb
jg
jg
daa
arpl
pushf
cmp
push
imul
mov
fnstcw
mov
imul
and
dec
adc
mulb
add
stos
push
xor
sbb
cwtl
mov
pop
rcrl
js
lock
pop
xchg
test
xchg
push
inc
movsb
test
inc
pop
jle
mov
outsb
in
cltd
adc
insl
pop
outsl
addl
mov
or
pop
add
push
scas
mov
int
xor
sub
xchg
lret
lcall
out
mov
jns
sahf
push
adc
and
mov
sbb
jg
fs
push
adc
pushf
ss
cltd
cmp
js
and
test
cmp
cmp
push
jo
pop
fs
into
mov
aas
add
icebp
fisubs
mov
mov
in
ds
adc
cwtl
and
data16
pop
dec
lods
dec
insb
in
mov
insl
mov
inc
mov
mov
sbb
ss
adc
inc
gs
into
loopne
lcall
sbb
fldz
adc
les
lods
pushf
xchg
test
pushf
aas
cmp
sub
xlat
test
rcll
cmp
loop
jmp
shlb
mov
je
les
dec
out
mov
dec
xchg
push
ret
pop
imul
ror
jle
lea
int
call
dec
push
push
adc
push
ljmp
xchg
testl
shrl
or
lcall
in
fidivrs
jmp
test
mov
stos
outsb
mov
stos
xchg
icebp
fwait
jns
imul
fdivs
mov
loope
mov
aam
lock
jbe
cmp
pop
mov
lret
mov
aam
mov
pop
es
lea
dec
lea
imul
fsubrs
inc
mov
jp
jecxz
pop
das
xchg
pop
jmp
adc
lahf
mov
cltd
pop
int3
out
test
mov
ljmp
into
push
xchg
mov
mov
mov
outsb
shll
push
sbb
cmc
stos
scas
hlt
std
out
push
push
leave
xchg
mov
popa
setg
jb
aaa
ret
or
jg
mov
mov
sbb
in
test
lret
mov
lret
sub
inc
lcall
fwait
mov
pop
sahf
add
mov
push
call
lret
xor
pop
mov
in
adc
xchg
mov
das
jp
xchg
add
push
and
ja
ljmp
in
push
mov
xchg
mov
shlb
bswap
mov
and
out
adc
bound
sbb
je
push
sahf
cmpl
out
movl
insb
mov
jp
cmc
push
and
shrl
sarl
mov
push
aaa
in
lea
sahf
clc
sahf
movsl
mov
xor
xchg
pop
or
xchg
inc
mov
stos
jae
mov
stc
popf
rolb
sbb
and
test
call
sbb
imul
fwait
push
mov
inc
iret
xchg
mov
ror
iret
icebp
ds
dec
push
cwtl
arpl
and
ss
lds
test
push
xor
inc
or
dec
add
xchg
push
pop
stos
fiadds
out
xlat
jecxz
pop
rcr
mov
ss
ljmp
add
jbe
adc
jge
das
sub
and
adc
or
roll
jl
ficoms
nop
add
push
les
xor
xchg
cmp
and
and
jge
out
jl
aad
jns
xor
enter
daa
bound
dec
loope
orl
cmp
ds
js
std
int
and
aas
lahf
cli
add
push
or
cmp
insl
xlat
xor
xchg
mov
js
push
dec
pop
aam
stos
push
repz
push
sahf
aad
out
dec
jbe
cmpsb
jb
outsb
dec
and
adc
dec
jae
into
dec
mov
mov
sub
cmp
push
mov
add
jle
add
pop
lret
lcall
ljmp
cwtl
test
stos
inc
addb
jg
ds
lahf
sbb
inc
ljmp
leave
push
ss
push
fdivs
inc
sub
inc
in
lret
cmp
cmp
mov
icebp
into
pushf
mov
sarb
dec
out
jne
andb
imul
xchg
dec
add
jl
mov
lods
xor
ss
jecxz
out
mov
mov
mov
mov
test
xor
jne
pop
movsl
pop
loopne
dec
pop
bound
push
adc
fldenv
ret
cli
pop
mov
insb
in
cmp
xor
sti
sub
gs
pushf
mov
cmp
cs
aad
push
ja
lahf
adc
inc
and
ja
je
inc
mov
xchg
lret
js
movsl
call
leave
fdivs
sub
xchg
subl
imul
inc
cmp
dec
inc
out
ja
cs
pop
jb
jne
mov
cmp
sarl
mov
std
jo
sbb
mov
sbb
cwtl
icebp
repnz
cld
xchg
or
mov
sub
inc
add
and
ret
aam
sbb
test
cmp
fisttps
lock
cmpsl
popa
inc
mov
xchg
adc
ret
add
adc
rcrb
or
cltd
xchg
xchg
mov
mov
pop
lahf
push
mov
mov
clc
and
xchg
rep
mov
ror
psadbw
xlat
stos
popf
popa
xlat
out
jns
and
ss
or
pop
push
add
mov
or
xchg
mov
leave
dec
mov
push
test
clc
mov
or
push
sbb
out
rolb
std
add
fwait
out
jno
push
lret
add
into
cmp
clc
xor
pop
jns
sbb
jecxz
lock
gs
test
mov
adc
inc
dec
addr16
mov
pop
aas
mov
add
dec
push
loop
jne
jp
mov
cmp
dec
bound
mov
addl
ljmp
mov
pop
addr16
jp
mov
and
insb
sbbl
inc
popf
ret
push
popf
pusha
cmp
fcomip
addl
inc
adc
mov
mov
dec
dec
jae
testl
pusha
stos
movsb
fwait
push
xchg
aas
xchg
sbbb
imul
scas
jb
jae
add
mov
fadd
scas
add
inc
in
hlt
xchg
adc
arpl
fnstenv
or
into
inc
cs
mov
mov
add
sbb
int3
mov
insb
pop
ficoml
xor
lds
push
shl
ds
mov
cmp
jne
movsb
lds
fidivs
test
jge
scas
xor
aaa
xor
lds
sbb
das
jno
imul
ljmp
cmpsl
lods
dec
xor
lock
push
scas
or
mov
test
dec
add
inc
or
push
cmpsb
cld
jbe
in
inc
dec
mov
test
fidivrl
sub
sub
push
in
cmp
lock
scas
test
xor
add
lahf
sbb
sbb
mov
add
adcl
xchg
loop
push
lret
in
and
insb
js
dec
mov
push
fistpll
push
cmc
lcall
xchg
rcrl
ja
pop
shlb
xor
sub
test
mov
shll
dec
aad
and
pop
lock
shll
sub
adc
jb
mov
sbb
jl
sahf
fwait
cmpsl
rolb
sub
adc
dec
lods
stc
std
clc
and
enter
sbb
ss
xorl
add
test
sub
xchg
cmp
pop
or
outsl
pop
into
jg
ret
adc
dec
outsl
popa
stos
loop
mov
daa
adc
fildll
cmp
lods
sbb
jns
in
adc
inc
jno
cli
nop
xchg
mov
divl
into
sti
xor
dec
push
pop
in
es
loopne
fcoml
adc
bound
negb
repz
dec
ret
into
movsl
sbb
outsb
int
xlat
add
mov
pop
fsts
jmp
out
fs
mov
aad
mov
decl
fwait
popf
inc
cmp
je,pt
jnp
jecxz
daa
sub
xchg
mov
fistps
call
dec
pop
xlat
pop
fistpll
lock
mov
jno
mov
mov
add
aas
int
aas
jb
lods
int3
mov
or
xchg
outsl
fiadds
cwtl
cmp
adc
mov
mov
cmp
jg
lret
mov
int3
mov
fadd
lock
sub
and
mov
add
ret
shlb
pop
insl
xor
inc
dec
sbbl
pusha
mov
popf
jae
lods
scas
lret
dec
mov
inc
in
and
dec
pop
sbbl
inc
aas
mov
movsb
int
mov
pop
nop
push
sbbb
fnsave
sar
pop
mov
xchg
ljmp
push
pop
outsl
lds
out
fsubrl
xchg
sbb
mov
sbb
minps
fisttpll
sbb
xor
push
mov
mov
std
dec
sbb
test
mov
mov
inc
enter
add
jecxz
sbb
in
add
jmp
iret
fdivl
test
sub
in
aad
xchg
aas
jl
mov
xchg
mov
pop
int3
jne
ja
xchg
fmuls
ret
bound
insb
cs
jb
dec
dec
icebp
xchg
jne
dec
insl
mov
push
out
shrb
bound
push
ficoms
jnp
out
sub
sub
bound
rcrb
stos
pop
insb
and
repz
mov
mov
pusha
aam
mov
xchg
ficompl
jno
and
push
adc
popf
push
lock
push
mov
dec
mov
xchg
cmp
sbb
adc
push
lahf
mov
adc
icebp
or
push
icebp
jge
ror
leave
mov
jbe
arpl
in
pop
mov
or
dec
jmp
inc
fidivrl
int3
add
jp
int3
sahf
xchg
pop
or
cmc
fidivs
gs
nop
add
fcompl
fsubl
xor
jbe
mov
jge
adc
sbb
add
jno
clc
fistpll
dec
outsb
mov
push
mov
push
mov
mov
scas
call
or
push
adc
sahf
inc
lcall
in
daa
fmul
enter
daa
pusha
mov
xor
test
xor
mov
sbb
movsl
or
mov
fwait
xchg
or
scas
inc
daa
sbb
rolb
xor
inc
mov
dec
pop
dec
or
push
pop
push
pop
fs
jle
push
dec
int3
popa
faddl
sub
mov
mov
or
andb
mov
aam
mov
dec
lock
ja
dec
testl
lcall
hlt
mov
icebp
sbb
pusha
out
aam
in
jbe
data16
orl
stc
mov
gs
sbb
adc
inc
ss
pop
cmp
test
adc
lret
inc
xor
jo
cmp
adc
or
shl
push
cmp
add
outsl
inc
mov
loop
jnp
imul
sub
data16
mov
mov
cli
ret
pop
and
pop
fstpt
loop
adc
gs
int3
maxps
out
fsts
in
ss
jl
xchg
repnz
test
sub
sub
lret
inc
sahf
pop
pushf
andnps
fistpll
cs
aad
dec
and
add
mov
dec
loopne
dec
stc
movsl
push
je
pop
sbb
xchg
mov
cwtl
mov
sbb
push
aam
mov
mov
decl
xor
inc
push
call
cmpl
push
sbb
add
and
mov
fdiv
mov
or
mov
lods
and
pop
ja
icebp
adc
add
in
leave
or
cld
leave
mov
hlt
mov
neg
lock
imul
mov
mov
jbe
clc
ss
ret
popa
mov
ljmp
push
lods
dec
jle
mov
mov
mov
sbb
sbb
leave
mov
arpl
and
call
cli
xor
sbb
cltd
add
pop
test
movsb
mov
fstpl
out
xchg
ja
jno
pop
ljmp
and
stos
jnp
mov
xchg
popa
dec
adc
cli
rorb
mov
add
jb
divl
lret
dec
mov
mov
jg
test
xchg
leave
jne
lahf
xchg
add
push
addr16
and
push
adc
mov
cwtl
sbb
add
push
pushl
cmc
addr16
sub
cmpb
mov
push
mov
hlt
stos
mov
xchg
pop
ja
xor
mov
mov
mov
loope
jb
aam
jne,pn
jl
mov
lods
xor
scas
jge
bound
pop
cwtl
xchg
lret
icebp
cli
andl
mov
jne
dec
or
cmp
pop
mov
and
cmp
jle
or
in
push
pusha
pusha
outsl
sub
fildll
dec
notb
scas
dec
out
rorb
jno
aam
pop
popf
inc
cmp
mov
loope
push
stos
mov
sbb
int3
jne
push
stos
data16
cmp
imul
push
sbb
ret
pop
leave
xor
adc
sub
mov
inc
sbb
push
xchg
popa
add
ror
mov
pop
cmp
jno
fmul
imul
inc
mov
sub
cmpsb
repnz
and
pop
sub
call
jbe
cs
xchg
push
adc
push
aad
aaa
mov
lcall
test
js
fnsave
jecxz
insl
out
xor
cmpsb
iret
lcall
dec
xor
fidivs
inc
sub
mov
push
inc
es
daa
pop
xchg
ds
pop
nop
loope
test
dec
repnz
cmp
sahf
ds
insl
test
adc
inc
and
add
push
out
inc
push
subb
popf
roll
and
movsb
scas
ficomps
adc
js
icebp
adc
xchg
inc
scas
push
shlb
push
mov
sbb
sub
rep
jno
mov
rcr
icebp
aam
jmp
ret
cmpb
mov
pop
cli
and
mov
mov
add
sub
xor
lcall
loop
fs
xor
sahf
loope
popa
test
mov
jg
sub
stc
imul
fisubs
push
ss
nop
imul
xor
lret
stos
xor
sub
or
mov
inc
push
cmc
adc
xchg
or
movb
mov
leave
dec
ja
xor
add
xlat
inc
call
mov
and
not
or
leave
or
xchg
sub
xor
xorb
shr
pop
mov
mov
jecxz
xlat
ljmp
addr16
adcb
xor
cmp
mov
imulb
inc
or
cltd
jl
pushf
mov
inc
shrb
ljmp
nop
xor
sub
pop
je
dec
jo
mov
shl
mov
fwait
sub
jle
call
inc
cmp
in
in
xor
loope
jg
das
fcmovne
out
pop
sub
popa
inc
cmp
aas
or
pop
mov
mov
and
shrl
enter
fadds
adc
cwtl
mov
out
mov
lea
icebp
jmp
mov
lret
xchg
pop
mov
out
and
push
mov
mov
cmpsl
push
aam
shrl
bound
les
mov
stc
sub
arpl
popa
lret
or
lods
test
ss
xchg
pop
and
sbb
pop
and
xchg
xchg
cltd
cmp
adc
sub
push
push
jo
fldl
negl
mov
daa
ljmp
mov
stos
push
scas
out
mov
repnz
push
in
xor
sbb
mov
sbb
or
mov
add
repz
xchg
push
test
clc
xrelease
jne
inc
divb
push
fwait
jnp
inc
push
mov
lods
add
pop
data16
call
push
mov
dec
xlat
sbb
sub
mov
lcall
das
jb
pop
inc
pop
jns
loopne
dec
dec
xlat
xchg
cld
mov
push
sbb
imul
mov
inc
jne
adc
mov
pop
out
mov
pushf
jmp
xchg
adc
mov
std
out
pop
adc
pop
adc
or
mov
jp
sbb
insb
jg
aaa
jnp
push
push
in
or
fisttps
jbe
adcb
pop
out
lahf
inc
fisttpll
jae
mov
push
xchg
sti
sub
add
push
and
shrb
stc
sbb
pop
int3
imul
scas
fwait
test
adc
push
in
out
ret
leave
stos
xchg
and
ja
cmp
outsl
fldl
push
test
aas
repnz
mov
ficompl
stos
adc
je
aam
addr16
fidivrs
cmc
movsl
rolb
mov
sbb
cmp
enter
jno
jbe
and
sbb
xchg
test
jo
pushf
or
pop
icebp
jno
jge
jl
push
fs
dec
jbe
push
push
icebp
mov
jo
sub
and
inc
test
test
add
in
cmc
xchg
sub
jbe
dec
daa
pop
divb
cmp
sbb
loope
gs
sub
cld
cmp
mov
ds
mov
and
sub
push
push
int
sbb
faddl
add
mov
dec
addr16
enter
dec
js
mov
subb
imul
pop
sub
dec
outsb
aam
rclb
mov
or
mov
mov
shr
sub
mov
push
mov
sbb
sbb
xor
pop
mov
add
inc
xchg
stos
mov
xchg
sbb
lods
pusha
test
mov
add
aad
mov
or
and
mov
imul
mov
je
pop
pop
outsl
idivl
push
lret
jmp
cmp
mov
jmp
cmc
faddl
xor
ftst
loop
lret
shlb
cld
rcr
cld
and
data16
push
sub
iret
cmc
jg
aad
and
stos
add
sub
mov
in
xor
push
sti
inc
push
pop
inc
pop
jb
cmp
mov
pop
fimuls
adc
scas
flds
sbb
repz
xchg
js
mov
cmp
xchg
dec
xlat
mov
lcall
adc
jle
pushf
gs
jmp
shll
aad
sarl
nop
or
push
dec
ret
inc
jno
insl
dec
out
push
je
sbb
jecxz
mov
and
cld
jo
mov
shl
add
xor
pop
pop
int
push
inc
and
in
push
in
aas
stos
cmp
lods
mov
mov
lods
lret
inc
sarl
leave
idivb
add
std
or
pop
cwtl
outsb
sub
mov
adc
icebp
ret
cld
inc
fiaddl
lret
add
push
mov
push
push
scas
push
or
xchg
outsl
fsubl
sahf
jo
aam
mov
cmp
inc
nop
adc
jmp
and
cmpsl
pop
mov
mov
lods
out
xor
pop
mov
popf
jp
mov
xchg
sarb
sbb
ja
lret
push
leave
dec
sub
clc
or
and
shll
dec
mov
out
add
add
sbb
add
inc
in
xor
cmpsb
mov
mov
pop
shrb
add
or
inc
lea
push
or
jno
fwait
stos
push
add
push
pop
inc
add
cmp
pushl
xor
mov
ja
in
insl
adcl
inc
ficomps
lds
dec
lret
mov
inc
mov
add
dec
lcall
mov
push
out
insl
movsl
arpl
pop
fucomip
mov
test
inc
test
pop
movsl
nop
sub
push
ds
mov
movsl
test
insb
ljmp
jle
dec
or
pusha
movsl
pop
insl
and
xchg
push
pop
mov
sbb
pop
push
jae
addr16
push
pop
jb
popf
xchg
jp
mov
pop
sub
jo
pusha
xchg
fwait
or
mov
xor
andnps
mov
adc
or
jno
xchg
cli
push
inc
leave
and
xor
xchg
call
inc
and
mov
mov
inc
neg
push
or
int3
pop
out
dec
pop
xchg
andl
sub
fnstenv
aad
repz
je
movsb
icebp
and
push
and
dec
jbe
test
loopne
mov
int3
call
cltd
or
inc
imul
bound
dec
mov
lock
xor
pop
cwtl
mov
in
xchg
test
je
js
inc
inc
jl
or
in
fmul
dec
enter
daa
pop
fisttpl
xor
sbb
in
clc
fs
loope
cmp
or
insb
xchg
pushf
lahf
xchg
dec
dec
push
sub
sbb
xchg
add
and
sub
pop
mov
jmp
lret
push
xchg
rclb
cmp
sub
mov
aaa
jmp
adc
call
sbbb
and
and
je
rcrl
int
mov
fs
inc
xchg
xor
fsubrs
mov
sahf
daa
inc
adc
add
lret
jg
test
dec
jnp
stc
fstps
imul
and
ss
and
cmp
ficoml
cmp
lret
xor
test
lret
dec
add
into
or
cmc
mov
and
icebp
jmp
sub
imul
mov
dec
push
lods
mov
or
cmp
idiv
pop
out
pop
push
dec
je
lahf
loop
sti
out
inc
xor
jecxz
lods
gs
mov
loopne
push
mov
jl
adc
imul
add
fstps
daa
pop
or
pop
add
xlat
pop
dec
sub
test
adc
rcrb
and
mov
mov
nop
out
dec
dec
and
inc
test
jmp
je
movsb
dec
jecxz
ljmp
adc
jnp
dec
call
inc
popa
pop
pop
stos
outsl
push
sbbl
lret
insb
mov
dec
mov
inc
outsb
xchg
xor
jb
xchg
add
aaa
sar
rol
aam
idivb
lods
std
mov
sbb
sub
mov
loopne
lcall
mov
sbb
jne
out
or
and
scas
lods
into
sub
rcrl
es
insl
rcrb
insb
dec
outsl
jecxz
cmpsl
pop
pop
mov
leave
mov
popa
stc
das
repnz
pop
add
mov
movsb
push
push
mov
movsl
xorl
cmpsb
sbb
rclb
or
xchg
cmc
fst
std
push
clc
dec
test
xchg
cs
mov
sarl
pop
sbb
mov
dec
xor
push
jae
push
jge
test
add
add
mov
ret
dec
mov
je
mov
mov
test
sbb
in
or
push
sbb
stc
addr16
add
call
jle
xor
lret
cld
jns
push
movsb
xchg
jnp
inc
mov
int
mov
mov
sbb
push
mov
pop
idivb
pop
test
jne
insb
cmp
dec
mov
inc
jmp
sub
cmpsb
adc
push
out
pusha
push
sub
dec
bound
mov
in
and
push
insb
push
std
in
jnp
inc
out
jle
push
pop
in
lahf
push
pusha
inc
adc
fisttps
dec
pop
push
push
mov
jae
mov
push
sbb
jo
mov
sahf
pop
mov
repnz
sbb
icebp
out
and
gs
popa
cmp
push
stc
dec
iret
rol
pop
ret
pop
leave
cltd
inc
popf
hlt
or
daa
mov
es
push
add
or
add
mov
sub
int3
dec
dec
xchg
pop
lds
mov
out
xor
sarb
mov
sub
xchg
orl
push
outsl
ret
popf
pop
inc
jge
sbb
xchg
fnsave
out
or
jno
xchg
sub
stos
dec
sub
push
push
jecxz
xor
mov
pop
scas
fs
mov
test
aas
mov
leave
mov
mov
lock
ret
jecxz
enter
daa
pop
inc
cmp
cmpsb
loope
mov
sub
xchg
pop
cmp
and
pop
jo
movsl
daa
div
and
or
mov
sbb
xchg
add
fstl
sub
fs
in
push
js
ret
insb
pop
dec
es
mov
stc
imul
pop
out
inc
enter
mov
cltd
shrb
xchg
xorb
clc
mov
jno
and
push
call
cmpsl
addl
adc
lcall
mov
addr16
sahf
lret
test
sbb
int
pusha
cmp
stc
nop
fdivrp
fs
rcll
jg
ss
pop
cmp
fcoms
mov
scas
xor
cmp
or
xchg
into
out
fisttpll
cmc
push
test
outsb
out
and
loop
jmp
loopne
xchg
push
lahf
add
mov
int3
leave
ret
lods
popf
xor
addr16
mov
mov
or
repz
jns
gs
jecxz
loopne
push
stos
pop
sbb
mov
adc
xor
outsl
bound
clc
xor
aam
inc
xchg
std
mov
cmp
jns
sub
out
and
jmp
aaa
xchg
adc
aad
ljmp
andb
inc
xchg
push
arpl
jecxz
lahf
jp
movsb
push
jecxz
loop
fs
ret
cmp
pop
mov
xchg
dec
inc
out
fistpl
pop
adc
les
push
sub
call
int
mov
ret
rcll
rorl
mov
xchg
cwtl
cwtl
in
shll
or
icebp
jo
sar
cwtl
cmp
mov
pop
mov
lock
das
push
movsl
push
mov
mov
aam
pop
adc
popf
jmp
dec
rcrl
mov
dec
dec
push
xchg
cld
jns
popa
adc
lods
lds
mov
stos
es
push
mov
pop
les
aam
fnstsw
cmp
push
pop
mov
negl
sti
clc
subl
ljmp
or
and
stos
aaa
add
xchg
jge
push
pop
adc
cmp
mov
xor
xor
mov
dec
sbb
test
xchg
lahf
std
sbb
clc
inc
mov
adc
fwait
or
add
jo
insb
ljmp
adc
jns
std
add
inc
jbe
xchg
lret
mov
std
std
mov
jae
shlb
inc
dec
mov
mov
mov
popf
ja
dec
pusha
adc
jne
das
dec
mov
jns
out
sub
icebp
bound
mov
jmp
imull
andl
out
nop
xchg
sub
dec
sbb
addr16
xlat
push
idivb
insb
rclb
jle
pop
fs
addb
stos
or
xchg
stc
shrb
ja
jae
out
in
loopne
inc
popf
loope
mov
fnsave
leave
xchg
dec
mov
or
adc
sub
scas
cs
adc
lods
dec
iret
das
adcl
adc
jecxz
pop
dec
pushf
arpl
faddl
in
or
mov
std
inc
cmp
fidivl
sbbl
jns
pop
hlt
push
test
adc
jne
cmp
xchg
pop
or
jnp
xchg
cmp
pop
xlat
mov
rclb
jbe
stos
mov
pop
and
inc
dec
xor
lods
fadds
int
int3
jno
aam
jl
xchg
addr16
cltd
aad
push
stc
leave
ds
adc
andb
push
cmpsb
test
or
pop
cmpsb
push
div
in
stos
loopne
enter
daa
pop
xor
xchg
pusha
mov
sub
pop
mov
add
jecxz
cs
and
mov
push
into
and
sbb
movl
arpl
pop
or
xor
push
sub
push
fidivrs
sub
scas
push
outsb
std
or
rolb
dec
addr16
add
pop
mov
shlb
jg
roll
int
push
jg
outsl
pop
mov
inc
push
xchg
lcall
mov
jecxz
sahf
insl
inc
pop
test
push
cmp
mov
mov
or
stc
inc
lds
or
xchg
ss
andl
fcoms
jb
jl
fcmovne
sub
xchg
xor
jp
cmp
jmp
pushf
into
roll
cmc
xor
das
xor
mov
outsl
fwait
sub
shrb
xchg
pop
adc
xchg
cmpsb
add
mov
lods
test
js
cmp
aas
mov
jne
xchg
dec
fs
sub
shlb
jbe
loopne
stos
jmp
cmp
adc
mov
fldenv
xchg
outsl
repz
xchg
push
sbb
rclb
sub
adc
dec
pushf
dec
jb
mov
mov
jbe
mov
nop
pushf
push
mov
inc
stos
int3
scas
dec
dec
push
mov
mov
cmpsl
mov
lea
loop
insl
mov
movl
sbb
sub
add
pop
mov
push
inc
mov
sub
xchg
cmp
mov
dec
fcoms
gs
add
add
inc
std
add
inc
cwtl
lahf
shll
mov
gs
inc
inc
call
lret
push
xchg
mov
cmp
lock
bound
sbbl
out
xor
ret
sub
mov
insl
sahf
adc
dec
gs
fdivrl
daa
out
lods
xor
mov
mov
out
out
lret
or
jecxz
aaa
mov
cltd
adc
mov
mov
clc
aad
adc
and
mov
push
int
dec
fstl
pop
jno
aas
stos
es
jp
mov
dec
push
xor
and
iret
gs
or
xchg
xor
jp
mov
enter
adcl
lods
cmpsw
xchg
add
inc
push
movsb
jmp
fwait
aaa
push
push
aas
popa
mov
mov
decl
mov
jns
ss
iret
clc
dec
xchg
sbb
and
repnz
pop
pop
cs
pop
ja
clc
mov
mov
in
jl
outsb
xchg
add
inc
outsl
mov
adc
push
mov
bound
cmp
xchg
ret
xor
int3
out
xor
clc
pop
xchg
or
addr16
jle
and
cli
dec
jnp
daa
pop
jle
dec
and
push
jbe
jg
lret
xchg
int3
arpl
ret
inc
or
push
push
mov
or
mov
sbb
les
mov
fcom
imul
xsave
mov
stc
adc
jne
iret
mov
ret
sub
xchg
hlt
mov
out
imul
dec
or
sub
cltd
inc
add
adc
push
sbb
pop
mov
push
pop
and
rcr
lds
shlb
mov
into
push
cmp
lods
rep
xchg
or
and
jbe
insl
pusha
jge
adc
sbb
pop
mov
insb
sub
or
sub
jno
cmp
dec
or
sub
fsubl
jo
pop
adc
sahf
xchg
int3
test
aad
lea
mov
mov
xchg
rol
call
ja
leave
xor
loope
mov
cmp
loopne
movsl
xor
inc
pop
lahf
repnz
sahf
push
mov
pop
fiadds
dec
adc
jae
mov
js
xor
pop
int3
movsb
fildll
pushl
faddl
adc
push
pop
jne
pusha
cmp
adc
and
fs
testl
mov
out
mov
and
ljmp
lcall
push
mov
push
out
dec
and
sahf
adc
jge
sbb
jg
stos
ret
mov
mov
mov
adc
into
ss
pop
mov
fmuls
mov
idivl
add
xor
call
ret
or
into
mov
push
clc
dec
divb
and
xchg
outsl
jp
movsl
loop
fdivrs
adc
xor
data16
mov
mov
arpl
cli
cmc
aad
mov
loopne
adc
cld
fwait
sub
dec
arpl
gs
insl
nop
loopne
adc
pop
pop
in
adc
cmp
les
dec
das
repz
rcll
pushf
cmp
cli
xlat
mov
dec
lock
pushf
adc
pop
cs
dec
aad
xchg
int3
nop
ja
mov
cmpsb
lods
inc
mov
xchg
add
test
icebp
stos
aad
stos
jp
lea
lcall
les
andl
in
xchg
fstpt
cli
roll
and
aas
adc
mov
fcomp
dec
shll
icebp
std
test
mov
dec
inc
sbb
mov
mov
scas
lret
mov
or
lock
das
adc
cmp
jp
out
mov
jecxz
es
ret
test
and
cwtl
fisubl
bound
mov
lods
fwait
pop
push
mov
xor
mov
add
mov
test
cmp
push
aad
icebp
fldl
xor
stc
lods
scas
xchg
jmp
shr
mov
pop
sbb
sub
xchg
push
sbb
push
fsubrs
add
dec
inc
or
adc
xor
adc
xchg
decl
test
xor
xchg
mov
rolb
or
add
fwait
or
loop
jae
ret
add
sub
xor
inc
lods
jns
adc
in
iret
xor
push
mov
or
dec
inc
ja
lods
mov
mov
insb
ja
cltd
or
mov
lods
dec
rorl
loopne
mov
fcoms
out
jmp
aad
jmp
lea
out
dec
inc
sub
aas
inc
lods
addr16
fidivl
and
sub
jnp
rcrl
pop
outsb
jmp
adc
inc
xchg
lahf
cmp
stc
sbb
fiaddl
inc
popf
das
stos
sbb
sub
adc
cld
inc
stos
cmp
enter
dec
sbb
mov
imul
add
cmp
push
pop
iret
in
or
inc
in
leave
nop
mov
out
push
pop
arpl
sub
mov
aaa
push
cmpl
int3
or
pop
push
xor
stos
insb
int
subl
mov
and
fsubs
mov
clc
jge
mov
sbb
adc
jno
ret
test
orb
mov
xor
enter
add
lock
mov
cmc
movsl
cmpsb
adc
push
in
js
ror
sub
dec
cmp
mov
ret
scas
and
pusha
push
movl
inc
and
testl
sbb
xchg
inc
add
add
xor
sbb
cmp
pop
pop
xlat
jbe
xchg
lret
or
xchg
adc
push
sub
call
inc
sar
or
and
lock
jl
pop
mov
mov
repz
int
out
int
in
jne
gs
pop
inc
xchg
lea
xor
mov
sbb
lcall
test
pop
jg
imul
xchg
insb
in
mov
add
and
loop
xlat
mov
cmp
ljmp
lret
push
xor
jns
cmp
xlat
sbb
mov
into
xchg
in
cmc
mov
cld
push
outsl
pop
jns
loop
push
in
imul
lods
add
loop
lods
push
ret
cmp
cmp
sbb
dec
test
sti
stos
xchg
cmp
pop
enter
nop
xchg
pop
jns
dec
adc
and
les
push
dec
repz
push
push
xchg
inc
and
sbb
inc
ja
xlat
cli
fbstp
sub
push
xchg
adc
mov
jmp
or
cs
mov
nop
push
pop
dec
popf
outsb
sti
inc
shlb
jno
cmp
je
or
add
lods
lea
inc
call
inc
jecxz
pop
ja
push
cmpl
movsb
aam
cld
sbb
or
ficoml
sarl
lds
dec
jb
mov
mov
arpl
mov
testb
out
adc
pop
mov
icebp
cmc
push
push
cld
sbb
push
mov
lcall
icebp
adc
mov
jno
fcmovbe
test
cmp
dec
fdivs
jo
insl
insb
sahf
repz
pop
cmpsl
out
pop
and
popa
push
sub
lods
push
ja
mov
pop
xor
mov
and
outsb
gs
jge
cltd
xorb
cld
popf
popa
mov
cmc
test
clc
xor
adc
xor
add
fdivrs
add
sbb
add
or
hlt
cli
dec
xchg
push
and
push
jmp
popa
pusha
add
arpl
cmp
xor
add
mov
into
mov
and
subb
test
inc
xor
or
aaa
mov
test
call
add
rolb
inc
and
loop
in
mov
mov
inc
push
mov
movsb
frstpm(287
ja
in
dec
mov
inc
mov
adc
les
mov
addr16
or
in
jne
iret
imul
mov
fisubrl
xchg
pop
mov
orl
shl
xchg
or
cmp
es
jmp
pop
insb
add
jnp
pop
les
adc
pusha
lods
mov
fisttps
pop
outsl
xchg
jb
dec
pop
xor
inc
pop
fwait
cwtl
jae
mov
lret
xor
arpl
sub
in
stos
scas
xor
xchg
dec
aas
sbb
adc
imul
lock
in
adc
adc
inc
leave
iret
dec
aam
ret
cmpsb
leave
jne
sbb
cmp
arpl
sub
lret
and
and
mov
call
add
std
mov
dec
inc
fimuls
sbb
shl
mov
bnd
fidivrs
pop
pop
adc
xchg
xchg
jbe
dec
cmpl
sbb
jae
pop
aaa
ljmp
jno
outsb
fnstcw
cmp
out
testl
cmc
push
jo
in
ss
loopne
shll
les
push
imul
adc
in
pop
das
or
pop
push
and
pop
adc
cmp
stc
push
ret
lea
