jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
aaa
xor
aaa
xor
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
cmp
je
mov
mov
mov
lea
mov
xchg
mov
xchg
inc
inc
dec
dec
inc
cmp
jg
mov
xchg
mov
mov
xchg
lea
inc
inc
mov
xchg
mov
lea
xchg
mov
mov
dec
mov
mov
lea
push
mov
push
call
mov
cmp
jno
mov
xchg
mov
mov
xchg
xchg
lea
inc
dec
inc
jmp
lea
dec
xchg
mov
mov
mov
lea
dec
inc
xchg
mov
lea
mov
jmp
lea
lea
dec
dec
inc
inc
inc
movl
lea
push
mov
push
call
cmp
jnp
lea
xchg
dec
xchg
mov
inc
cmp
jg
xchg
xchg
mov
mov
dec
inc
cmp
je
lea
mov
mov
mov
mov
lea
xchg
mov
mov
mov
lea
xchg
inc
dec
inc
movl
lea
push
mov
push
call
mov
cmp
jb
xchg
mov
dec
dec
dec
mov
lea
inc
jmp
mov
mov
mov
xchg
mov
lea
lea
xchg
lea
dec
lea
mov
mov
mov
jmp
mov
lea
mov
inc
movl
movl
mov
push
mov
push
mov
push
call
cmp
ja
mov
lea
mov
xchg
xchg
mov
dec
inc
lea
inc
dec
inc
cmp
jb
jmp
mov
mov
mov
lea
xchg
xchg
lea
lea
mov
inc
inc
mov
mov
lea
mov
mov
dec
inc
movl
movl
mov
push
mov
push
mov
push
call
cmp
jne
lea
xchg
mov
jmp
xchg
xchg
dec
dec
mov
mov
mov
xchg
mov
inc
xchg
cmp
jge
mov
mov
mov
lea
xchg
dec
dec
mov
mov
xchg
lea
mov
inc
inc
cmp
ja
mov
lea
mov
xchg
xchg
mov
dec
inc
lea
inc
dec
inc
cmp
jb
jmp
mov
mov
mov
lea
xchg
xchg
lea
lea
mov
inc
inc
mov
mov
lea
mov
mov
dec
inc
push
call
cmp
jns
mov
xchg
xchg
lea
mov
dec
inc
mov
inc
cmp
jo
inc
inc
dec
inc
cmp
ja
mov
mov
xchg
lea
mov
lea
mov
xchg
mov
inc
mov
xchg
dec
inc
mov
inc
push
call
mov
pop
ret
add
cmp
xor
xor
cmp
xor
xor
xor
cmp
add
push
mov
add
mov
mov
mov
mov
cmp
jl
xchg
dec
inc
mov
inc
xchg
cmp
jle
mov
xchg
mov
xchg
inc
dec
mov
lea
xchg
inc
dec
dec
lea
lea
xchg
lea
mov
mov
lea
lea
mov
cmp
je
jmp
cmp
ja
dec
dec
inc
dec
cmp
jp
lea
mov
xchg
mov
mov
lea
mov
inc
xchg
inc
mov
cmp
jns
dec
dec
dec
inc
mov
lea
mov
mov
lea
xchg
xchg
lea
lea
inc
mov
xor
divl
test
jne
cmp
je
mov
mov
mov
lea
mov
xchg
mov
xchg
inc
inc
dec
dec
inc
cmp
jg
mov
xchg
mov
mov
xchg
lea
inc
inc
mov
xchg
mov
lea
xchg
mov
mov
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
ja
mov
lea
mov
xchg
xchg
mov
dec
inc
lea
inc
dec
inc
cmp
jb
jmp
mov
mov
mov
lea
xchg
xchg
lea
lea
mov
inc
inc
mov
mov
lea
mov
mov
dec
inc
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
cmp
jb
xchg
mov
dec
dec
dec
mov
lea
inc
jmp
mov
mov
mov
xchg
mov
lea
lea
xchg
lea
dec
lea
mov
mov
mov
jmp
mov
lea
mov
inc
mov
cmp
je
jmp
cmp
jnp
lea
xchg
dec
xchg
mov
inc
cmp
jg
xchg
xchg
mov
mov
dec
inc
cmp
je
lea
mov
mov
mov
mov
lea
xchg
mov
mov
mov
lea
xchg
inc
dec
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
lea
push
mov
add
mov
mov
push
mov
push
call
mov
mov
pop
pop
pop
ret
add
je
jb
arpl
fs
jae
add
push
mov
add
mov
lea
mov
call
mov
mov
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jne
lea
xchg
mov
jmp
xchg
xchg
dec
dec
mov
mov
mov
xchg
mov
inc
xchg
cmp
jge
mov
mov
mov
lea
xchg
dec
dec
mov
mov
xchg
lea
mov
inc
inc
mov
cmp
je
jmp
cmp
jnp
lea
xchg
dec
xchg
mov
inc
cmp
jg
xchg
xchg
mov
mov
dec
inc
cmp
je
lea
mov
mov
mov
mov
lea
xchg
mov
mov
mov
lea
xchg
inc
dec
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
cmp
je
jmp
cmp
ja
mov
lea
mov
xchg
xchg
mov
dec
inc
lea
inc
dec
inc
cmp
jb
jmp
mov
mov
mov
lea
xchg
xchg
lea
lea
mov
inc
inc
mov
mov
lea
mov
mov
dec
inc
mov
sub
mov
mov
cmp
jno
mov
xchg
mov
mov
xchg
xchg
lea
inc
dec
inc
jmp
lea
dec
xchg
mov
mov
mov
lea
dec
inc
xchg
mov
lea
mov
jmp
lea
lea
dec
dec
inc
inc
inc
push
mov
mov
xor
call
mov
cmp
je
mov
mov
mov
lea
mov
xchg
mov
xchg
inc
inc
dec
dec
inc
cmp
jg
mov
xchg
mov
mov
xchg
lea
inc
inc
mov
xchg
mov
lea
xchg
mov
mov
dec
mov
mov
mov
call
mov
cmp
jb
xchg
mov
dec
dec
dec
mov
lea
inc
jmp
mov
mov
mov
xchg
mov
lea
lea
xchg
lea
dec
lea
mov
mov
mov
jmp
mov
lea
mov
inc
push
mov
mov
xor
call
mov
cmp
ja
dec
dec
inc
dec
cmp
jp
lea
mov
xchg
mov
mov
lea
mov
inc
xchg
inc
mov
cmp
jns
dec
dec
dec
inc
mov
lea
mov
mov
lea
xchg
xchg
lea
lea
inc
mov
mov
cmp
jl
xchg
dec
inc
mov
inc
xchg
cmp
jle
mov
xchg
mov
xchg
inc
dec
mov
lea
xchg
inc
dec
dec
lea
lea
xchg
lea
mov
mov
lea
lea
lea
mov
call
mov
cmp
jno
mov
xchg
mov
mov
xchg
xchg
lea
inc
dec
inc
jmp
lea
dec
xchg
mov
mov
mov
lea
dec
inc
xchg
mov
lea
mov
jmp
lea
lea
dec
dec
inc
inc
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jnp
lea
xchg
dec
xchg
mov
inc
cmp
jg
xchg
xchg
mov
mov
dec
inc
cmp
je
lea
mov
mov
mov
mov
lea
xchg
mov
mov
mov
lea
xchg
inc
dec
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jne
lea
xchg
mov
jmp
xchg
xchg
dec
dec
mov
mov
mov
xchg
mov
inc
xchg
cmp
jge
mov
mov
mov
lea
xchg
dec
dec
mov
mov
xchg
lea
mov
inc
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jns
mov
xchg
xchg
lea
mov
dec
inc
mov
inc
cmp
jo
inc
inc
dec
inc
cmp
ja
mov
mov
xchg
lea
mov
lea
mov
xchg
mov
inc
mov
xchg
dec
inc
mov
inc
mov
mov
mov
mov
xor
push
push
mov
mov
cltd
add
adc
add
mov
mov
mov
cmp
ja
dec
dec
inc
dec
cmp
jp
lea
mov
xchg
mov
mov
lea
mov
inc
xchg
inc
mov
cmp
jns
dec
dec
dec
inc
mov
lea
mov
mov
lea
xchg
xchg
lea
lea
inc
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jb
xchg
mov
dec
dec
dec
mov
lea
inc
jmp
mov
mov
mov
xchg
mov
lea
lea
xchg
lea
dec
lea
mov
mov
mov
jmp
mov
lea
mov
inc
push
call
mov
mov
call
mov
mov
mov
cmp
je
mov
mov
mov
lea
mov
xchg
mov
xchg
inc
inc
dec
dec
inc
cmp
jg
mov
xchg
mov
mov
xchg
lea
inc
inc
mov
xchg
mov
lea
xchg
mov
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jno
mov
xchg
mov
mov
xchg
xchg
lea
inc
dec
inc
jmp
lea
dec
xchg
mov
mov
mov
lea
dec
inc
xchg
mov
lea
mov
jmp
lea
lea
dec
dec
inc
inc
inc
mov
mov
movl
cmp
jns
mov
xchg
xchg
lea
mov
dec
inc
mov
inc
cmp
jo
inc
inc
dec
inc
cmp
ja
mov
mov
xchg
lea
mov
lea
mov
xchg
mov
inc
mov
xchg
dec
inc
mov
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
ja
dec
dec
inc
dec
cmp
jp
lea
mov
xchg
mov
mov
lea
mov
inc
xchg
inc
mov
cmp
jns
dec
dec
dec
inc
mov
lea
mov
mov
lea
xchg
xchg
lea
lea
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jns
mov
xchg
xchg
lea
mov
dec
inc
mov
inc
cmp
jo
inc
inc
dec
inc
cmp
ja
mov
mov
xchg
lea
mov
lea
mov
xchg
mov
inc
mov
xchg
dec
inc
mov
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
ja
mov
lea
mov
xchg
xchg
mov
dec
inc
lea
inc
dec
inc
cmp
jb
jmp
mov
mov
mov
lea
xchg
xchg
lea
lea
mov
inc
inc
mov
mov
lea
mov
mov
dec
inc
mov
pop
ret
add
add
outsb
add
insb
add
add
add
add
add
add
add
outsb
imul
insb
add
fs
imul
js
add
push
imul
jb
je
arpl
push
imul
jb
add
insb
dec
outsl
jbe
dec
gs
outsl
jb
add
add
je
jb
arpl
fs
jae
add
imul
gs
xor
cs
insb
add
add
imul
add
outsb
add
insb
add
add
add
add
add
add
add
in
add
mov
xor
mov
cmp
ja
jmp
stos
sub
pop
sub
sub
outsb
sub
js
inc
add
sub
xchg
sub
mov
lods
xchg
inc
add
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
xor
mov
mov
pop
pop
pop
ret
mov
push
cmp
testb
mov
cmpsb
cmpsl
jge
jge
jge
add
scas
xor
jnp
xor
mov
test
cmp
mov
cmpl
mov
movsb
jnp
cmp
mov
movsb
jnp
cmp
movsb
sarb
jnp
cld
jge
and
cmp
mov
movsb
jnp
cmp
mov
movsb
jnp
and
lods
jnp
and
adc
hlt
hlt
jnp
adc
cld
jnp
and
shl
mov
jnp
add
je
hlt
hlt
jge
sub
mov
hlt
js
hlt
hlt
hlt
jnp
sub
hlt
repz
sbb
lcall
jnp
add
mov
cmp
movsb
enter
jae
sbb
js
hlt
hlt
hlt
jnp
sub
hlt
mov
jnp
sub
repz
jnp
sub
in
mov
sbb
in
mov
jnp
sub
in
mov
sbb
mov
je
lock
sbb
pmuludq
movsb
jnp
sbb
jnp
cmp
movsb
int3
jnp
adc
repnz
jnp
and
sbb
bnd
and
mov
movsb
jnp
sbb
jnp
cmp
movsb
int3
jnp
adc
bnd
adc
jae
sbb
jnp
sbb
hlt
mov
mov
sub
add
jns
mov
repz
jnp
cmp
mov
jge
or
mov
hlt
lcall
add
mov
pushf
hlt
je
hlt
lcall
aam
jnp
cmp
movsb
test
hlt
je
hlt
lcall
mov
jnp
or
cltd
or
setp
int
mov
jne
hlt
adc
pextrw
xor
adc
mov
clc
hlt
xor
and
add
inc
je
sub
repnz
hlt
hlt
hlt
addl
cmp
hlt
xor
xor
stos
hlt
hlt
hlt
adc
repnz
in
mov
xor
pop
mov
pop
sbb
sbb
hlt
hlt
hlt
hlt
hlt
hlt
sbb
pusha
and
cmp
xor
loopne
hlt
hlt
shl
xchg
hlt
hlt
cmp
adc
xor
or
xchg
mov
imul
push
fnsave
add
sbb
and
in
xor
cmp
pmulhw
jb
xor
hlt
xorl
cmpps
dec
push
paddusw
jnp
jne
or
mov
push
mov
hlt
ss
std
push
mov
hlt
ss
jp
or
or
push
mov
push
mov
hlt
mov
jnp
adc
pi2fd
hlt
js
hlt
hlt
hlt
ss
jp
or
adc
bnd
and
or
or
mov
lret
mov
ss
or
hlt
mov
ss
jp
or
and
or
inc
push
psllq
ret
and
or
inc
bound
push
mov
repz
pmuludq
hlt
jl
or
xor
mov
push
mov
jl
or
or
or
mov
push
mov
hlt
mov
sbb
test
mov
cld
push
mov
mov
pmuludq
hlt
push
cld
push
mov
ret
xor
std
push
mov
ret
and
cld
push
mov
incl
add
repz
pmuludq
hlt
push
std
push
mov
ret
xor
cld
push
mov
jp
add
jl
adc
xor
std
push
mov
jp
add
ret
and
cld
push
mov
jl
add
ret
xor
std
push
mov
jp
adc
push
mov
ret
xor
cld
push
mov
incl
add
ret
and
std
push
mov
incl
add
repz
pmuludq
hlt
jl
adc
xor
mov
push
mov
ret
jl
push
jp
push
lods
mov
sbb
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jne
lea
xchg
mov
jmp
xchg
xchg
dec
dec
mov
mov
mov
xchg
mov
inc
xchg
cmp
jge
mov
mov
mov
lea
xchg
dec
dec
mov
mov
xchg
lea
mov
inc
inc
movl
mov
cmp
jno
mov
xchg
mov
mov
xchg
xchg
lea
inc
dec
inc
jmp
lea
dec
xchg
mov
mov
mov
lea
dec
inc
xchg
mov
lea
mov
jmp
lea
lea
dec
dec
inc
inc
inc
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
ja
mov
lea
mov
xchg
xchg
mov
dec
inc
lea
inc
dec
inc
cmp
jb
jmp
mov
mov
mov
lea
xchg
xchg
lea
lea
mov
inc
inc
mov
mov
lea
mov
mov
dec
inc
mov
mov
call
mov
cmpl
je
cmp
jns
mov
xchg
xchg
lea
mov
dec
inc
mov
inc
cmp
jo
inc
inc
dec
inc
cmp
ja
mov
mov
xchg
lea
mov
lea
mov
xchg
mov
inc
mov
xchg
dec
inc
mov
inc
mov
cmp
je
mov
subb
mov
mov
cmp
ja
dec
dec
inc
dec
cmp
jp
lea
mov
xchg
mov
mov
lea
mov
inc
xchg
inc
mov
cmp
jns
dec
dec
dec
inc
mov
lea
mov
mov
lea
xchg
xchg
lea
lea
inc
mov
xorb
cmp
ja
mov
lea
mov
xchg
xchg
mov
dec
inc
lea
inc
dec
inc
cmp
jb
jmp
mov
mov
mov
lea
xchg
xchg
lea
lea
mov
inc
inc
mov
mov
lea
mov
mov
dec
inc
incl
mov
cmp
jne
cmp
jnp
lea
xchg
dec
xchg
mov
inc
cmp
jg
xchg
xchg
mov
mov
dec
inc
cmp
je
lea
mov
mov
mov
mov
lea
xchg
mov
mov
mov
lea
xchg
inc
dec
inc
mov
call
cmp
jns
mov
xchg
xchg
lea
mov
dec
inc
mov
inc
cmp
jo
inc
inc
dec
inc
cmp
ja
mov
mov
xchg
lea
mov
lea
mov
xchg
mov
inc
mov
xchg
dec
inc
mov
inc
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jns
mov
xchg
xchg
lea
mov
dec
inc
mov
inc
cmp
jo
inc
inc
dec
inc
cmp
ja
mov
mov
xchg
lea
mov
lea
mov
xchg
mov
inc
mov
xchg
dec
inc
mov
inc
cmp
ja
dec
dec
inc
dec
cmp
jp
lea
mov
xchg
mov
mov
lea
mov
inc
xchg
inc
mov
cmp
jns
dec
dec
dec
inc
mov
lea
mov
mov
lea
xchg
xchg
lea
lea
inc
mov
mov
cmp
jl
xchg
dec
inc
mov
inc
xchg
cmp
jle
mov
xchg
mov
xchg
inc
dec
mov
lea
xchg
inc
dec
dec
lea
lea
xchg
lea
mov
mov
lea
lea
push
mov
push
call
mov
pop
ret
nop
push
mov
add
call
mov
mov
cmp
jl
xchg
dec
inc
mov
inc
xchg
cmp
jle
mov
xchg
mov
xchg
inc
dec
mov
lea
xchg
inc
dec
dec
lea
lea
xchg
lea
mov
mov
lea
lea
mov
mov
mov
add
mov
mov
dec
cmp
je
xor
add
inc
and
cmp
jmp
jmp
ret
jne
cmp
je
mov
mov
mov
lea
mov
xchg
mov
xchg
inc
inc
dec
dec
inc
cmp
jg
mov
xchg
mov
mov
xchg
lea
inc
inc
mov
xchg
mov
lea
xchg
mov
mov
dec
movb
cmp
ja
dec
dec
inc
dec
cmp
jp
lea
mov
xchg
mov
mov
lea
mov
inc
xchg
inc
mov
cmp
jns
dec
dec
dec
inc
mov
lea
mov
mov
lea
xchg
xchg
lea
lea
inc
mov
mov
pop
ret
nop
push
mov
add
call
cmp
jns
mov
xchg
xchg
lea
mov
dec
inc
mov
inc
cmp
jo
inc
inc
dec
inc
cmp
ja
mov
mov
xchg
lea
mov
lea
mov
xchg
mov
inc
mov
xchg
dec
inc
mov
inc
call
call
call
test
jne
call
jmp
movw
mov
cmp
jb
xchg
mov
dec
dec
dec
mov
lea
inc
jmp
mov
mov
mov
xchg
mov
lea
lea
xchg
lea
dec
lea
mov
mov
mov
jmp
mov
lea
mov
inc
call
lea
mov
pop
ret
push
mov
add
cmp
jns
mov
xchg
xchg
lea
mov
dec
inc
mov
inc
cmp
jo
inc
inc
dec
inc
cmp
ja
mov
mov
xchg
lea
mov
lea
mov
xchg
mov
inc
mov
xchg
dec
inc
mov
inc
push
call
cmp
je
push
call
test
jne
cmp
je
mov
mov
mov
lea
mov
xchg
mov
xchg
inc
inc
dec
dec
inc
cmp
jg
mov
xchg
mov
mov
xchg
lea
inc
inc
mov
xchg
mov
lea
xchg
mov
mov
dec
push
push
push
call
mov
cmpl
jne
push
call
call
mov
cmp
jno
mov
xchg
mov
mov
xchg
xchg
lea
inc
dec
inc
jmp
lea
dec
xchg
mov
mov
mov
lea
dec
inc
xchg
mov
lea
mov
jmp
lea
lea
dec
dec
inc
inc
inc
mov
pop
ret
add
ss
push
pop
jb
addr16
add
push
add
jb
gs
xor
cs
insb
add
add
subl
je
mov
cmp
jnp
lea
xchg
dec
xchg
mov
inc
cmp
jg
xchg
xchg
mov
mov
dec
inc
cmp
je
lea
mov
mov
mov
mov
lea
xchg
mov
mov
mov
lea
xchg
inc
dec
inc
mov
mov
mov
lea
call
cmp
ja
mov
lea
mov
xchg
xchg
mov
dec
inc
lea
inc
dec
inc
cmp
jb
jmp
mov
mov
mov
lea
xchg
xchg
lea
lea
mov
inc
inc
mov
mov
lea
mov
mov
dec
inc
ret
lea
ret
lea
push
add
test
pop
push
movsb
leave
cmp
add
mov
je
mov
cwtl
sbb
in
add
pop
xchg
arpl
mov
jno
adc
xchg
je
loope
add
aam
ss
pop
add
add
imul
test
mov
nop
add
rcrl
xchg
add
ret
pushf
push
out
rcrl
sbb
pop
add
movsl
mov
hlt
add
add
lret
dec
cmp
sub
push
and
cmpsl
arpl
mov
cmp
vpcomw
jecxz
sub
add
add
add
sbb
adc
push
cmp
add
in
in
jo
pop
sbb
sahf
loop
xchg
jecxz
jg
xchg
testb
nop
add
hlt
adc
aam
ret
mov
pop
cli
ret
push
mov
add
add
push
iret
inc
cmp
mov
enter
sbb
xchg
mov
jg
jae
aas
inc
jg
fs
insl
jne
mov
lds
pop
add
rolb
inc
sub
and
cwtl
popf
add
add
jle
je
jecxz
enter
add
test
sbb
cwtl
add
add
fs
pop
or
cmp
cmp
fcoms
cli
addb
add
scas
xlat
add
pop
inc
add
push
add
add
in
fiadds
in
clc
adc
mov
xchg
mov
and
push
es
pusha
push
popl
mov
add
neg
popf
add
mov
aas
outsb
pop
sti
add
cmpsl
jmp
sub
jno
scas
fcmovne
movsb
add
add
incb
jnp
mov
pop
stos
fstpl
adc
mov
std
adc
jnp
mov
pop
add
incb
add
adc
testb
pop
add
add
pop
cwtl
test
out
inc
add
lcall
add
add
dec
xor
dec
out
repnz
loope
add
mov
cmpsl
mov
add
fisttpl
xor
add
add
cld
push
cli
adc
testb
popa
add
jl
mov
xchg
aaa
in
mov
add
add
jg
dec
pop
add
adc
xor
testb
dec
dec
fiaddl
add
xchg
add
dec
je
inc
add
inc
add
pop
add
pop
add
add
jo
subb
add
adc
lds
into
push
cltd
pop
mov
add
add
push
lods
cmp
add
in
sub
in
add
xchg
add
dec
leave
inc
and
aad
add
stos
pusha
outsl
push
test
aam
lods
nop
jg
and
lahf
sbb
xchg
add
dec
addb
and
add
cltd
mov
adc
add
add
clc
or
mov
xchg
inc
dec
add
fiadds
add
add
sbb
add
subb
test
xor
iret
sahf
flds
fadds
cwtl
rolb
jg
mov
ja
imul
add
xchg
add
push
mov
cmp
std
lds
outsb
mov
push
or
sbb
xchg
xchg
and
add
into
lcall
mov
add
fmuls
loopne
sahf
cmp
add
movsl
dec
lcall
adc
mov
adc
roll
push
dec
nop
sub
cltd
dec
mov
add
jl
push
xchg
sti
cld
pop
xchg
in
pop
les
subb
lahf
imul
ja
aas
or
divb
jg
mov
cmc
xchg
mov
sub
loope
popf
ja
and
dec
loopne
roll
xchg
or
es
clc
popf
jbe
int3
jp
add
and
cwtl
bound
mov
jns
lods
in
adc
xchg
mov
daa
lret
out
pop
and
stos
dec
imul
imul
mov
adc
mov
fistps
hlt
cli
jmp
cmpsl
pop
xchg
cmp
mov
enter
int3
stos
xchg
and
jp
jo
insb
jnp
ljmp
mov
pop
ror
pop
inc
test
push
sbb
mov
xorl
into
popf
push
pop
loop
bound
jne
jae
pminub
dec
les
rorl
scas
hlt
in
rclb
rcll
adc
inc
insb
mov
stos
fldcw
adc
hlt
or
clc
arpl
xlat
inc
push
push
or
pusha
adc
aaa
popf
inc
xchg
std
jl
add
cmp
in
push
pop
in
ficoms
jns
inc
pop
jg
xor
and
and
cmp
lds
push
scas
jae
jbe
cmpsb
ret
xor
sbb
sbb
out
imul
jl
iret
xor
mov
fbstp
ret
lahf
ret
addb
daa
cmp
mov
jnp
cmpsb
ds
enter
pop
jge
inc
push
in
loope
mov
cmp
lods
xlat
ds
mov
and
push
test
sbb
js
add
xor
inc
mov
loopne
mov
jnp
push
js
sub
pop
xor
lcall
aam
dec
jmp
pop
sbb
outsb
sub
mov
cmc
inc
and
mov
inc
fdivl
fwait
lret
push
divl
add
mov
movsl
mov
insb
or
shll
mov
xchg
negb
adc
sahf
popf
neg
test
jp
subb
stos
loop
pop
stc
mov
push
fs
shll
orl
fadds
and
out
xchg
xor
jb
or
in
into
add
ret
cmc
mov
xchg
push
pop
sub
adc
pop
imul
sub
cltd
mov
mov
mov
rcl
cltd
dec
sub
test
icebp
ljmp
sbb
sbb
loopne
lret
outsl
dec
iret
lds
inc
fcmovbe
fsts
aas
sbb
mov
add
xchg
mov
xchg
icebp
dec
add
sbb
xor
insb
adc
mov
jmp
mov
cmpsb
lods
push
aad
dec
xlat
nop
dec
inc
repnz
ja
jb
ja
dec
mov
jmp
jecxz
add
xlat
mov
lea
nop
arpl
mulb
push
dec
fildl
fstpt
xor
dec
jns
sub
pop
inc
push
jne
das
and
jmp
add
data16
rcll
and
xor
jno
adc
dec
inc
cli
mov
mov
push
cld
jae
iret
lret
inc
mov
mov
ffree
lock
pop
sbbb
fbstp
addr16
mov
xrelease
lahf
pop
dec
ret
sbb
inc
add
xor
and
xchg
pushf
in
ljmp
fldt
clc
mov
inc
push
repz
lahf
cmp
ja
cmp
cltd
test
adc
inc
lods
push
inc
adc
fisttpll
cli
jmp
sbb
xchg
rcrl
into
xchg
pop
cld
das
xchg
xor
adc
jecxz
leave
ds
xor
fwait
loopne
mov
add
mov
clc
lods
dec
repz
add
int3
xchg
loope
shll
ret
or
hlt
cmp
outsl
mov
add
cmp
push
out
cli
cli
shlb
push
push
in
xlat
add
and
mov
fimuls
cmp
jp
clc
add
push
mov
das
dec
jae
ljmp
lret
mov
jp
adc
es
jb
addr16
xlat
out
adc
or
mov
pusha
stos
stc
insl
mov
jge
int
fcomi
or
xchg
add
ret
inc
lds
jge
iret
jle
jle
arpl
pop
xor
mov
mov
xrelease
shl
push
popf
js
ds
repnz
dec
ficompl
divb
sbb
test
mov
push
ljmp
mov
cmp
repnz
mov
pop
hlt
push
subl
pop
fcoml
insl
mov
ret
roll
lock
fxch
shlb
xor
inc
aad
aaa
in
lds
shlb
scas
adc
cmp
rep
inc
pop
xchg
add
daa
jge
sub
jmp
dec
rolb
jno
push
cwtl
jl
call
cld
push
or
mov
jo
push
loopne
loop
popa
push
rcll
dec
push
test
push
inc
in
mov
in
add
adc
mov
cld
jne
mov
lret
mov
call
and
in
dec
in
mov
mov
and
add
and
xor
mov
pop
mov
outsb
sahf
pop
mov
sbbl
dec
paddusb
rcl
sub
pop
lods
outsb
nop
aaa
add
ror
pop
jg
ret
mov
dec
in
mov
jo
push
daa
pop
and
int3
push
cli
add
int
push
cmpsl
sub
mov
cmpsb
rorl
mov
aas
xchg
pop
sahf
inc
test
test
push
or
xor
insl
dec
loop
mov
push
fs
mov
cmp
cmp
mov
sbb
and
xchg
ds
mov
aaa
into
in
mov
push
test
adc
pop
push
imul
iret
add
inc
inc
data16
leave
mov
xchg
xlat
stos
sti
add
mov
add
in
nop
cli
push
sti
in
xchg
or
gs
or
dec
cs
in
stos
and
dec
mov
loopne
bound
or
cmp
mov
ret
hlt
sti
jge
mov
pop
cwtl
jmp
push
dec
aad
xchg
or
push
cmp
dec
xor
je
loope
cmp
fmuls
cwtl
mov
enter
outsb
adcl
jno
pop
mov
lea
mov
into
mov
mov
test
shll
mov
cwtl
or
pop
cmpsl
dec
mov
cmp
mov
add
sahf
add
lret
scas
ljmp
std
shll
cmp
jne
repnz
rcl
cmp
jno
ljmp
ret
stos
sub
adcl
insl
cmc
add
fucomi
scas
ljmp
or
mov
lock
cmp
push
add
negl
mov
pop
imul
or
sbb
sbb
mov
shl
jge
pop
int3
or
out
shr
xchg
jnp
dec
push
mov
bound
or
lret
sub
inc
mov
sti
xor
ss
mov
imul
dec
inc
pop
popa
or
fwait
push
pushf
xor
add
push
data16
bound
jns
insb
jmp
or
es
pop
and
gs
loop
hlt
pop
cltd
dec
xchg
addr16
xchg
popf
mov
aaa
sarl
push
push
push
inc
out
dec
cmp
inc
dec
xchg
iret
in
push
jmp
cmp
dec
aad
inc
imul
out
fistl
fidivs
stos
insb
dec
add
xchg
clc
mov
jnp
fcmovbe
jle
scas
adc
lret
pusha
shrl
ret
mov
inc
les
push
xchg
addr16
popf
lahf
cmp
mov
jno
pusha
fimull
mov
fimull
fwait
pop
imul
mov
lods
pop
xchg
adc
cli
or
push
mov
hlt
sahf
jno
arpl
faddl
ret
aam
xchg
push
sbb
mov
add
out
int3
mov
roll
fcmove
ret
repz
icebp
or
and
xchg
sbb
and
fdivl
in
or
daa
dec
add
test
sbb
testb
cmp
out
or
js
jbe
add
push
movsb
cmp
test
push
pop
ss
jae
ret
cmpsb
inc
pop
jns
call
adc
pop
sti
fwait
inc
push
enter
sub
sub
cmp
cmp
sub
testl
and
nop
icebp
sbbb
fcompl
push
leave
mov
daa
sbb
xor
sbb
data16
xor
js
inc
pop
pop
xor
out
lcall
sahf
fsubl
mov
outsb
repz
adc
stos
outsb
das
jg
ret
inc
mov
push
cmp
mov
sub
std
inc
data16
icebp
sub
icebp
xchg
lret
dec
shll
sbb
hlt
sahf
jecxz
movsl
test
mov
and
pop
outsl
dec
aad
loop
cmp
dec
sarb
adc
cld
fs
jbe
mov
sub
hlt
cli
pop
in
xor
push
cmp
loopne
or
or
das
xchg
imul
std
imul
xor
add
mov
orb
loope
sub
pop
adc
sti
pusha
xchg
fwait
rcl
lahf
ficomps
loopne
xor
inc
add
pop
leave
mov
dec
xchg
ja
cmpsl
sbb
testb
xor
pop
cmpsl
cmpsl
nop
adc
fcmove
pushf
insb
arpl
jmp
or
insb
mov
aad
cmp
nop
add
aas
mov
std
jb
jb
dec
stos
fnsave
jecxz
push
andb
adc
mov
arpl
mov
adc
subl
xor
fcmovnu
gs
pop
sub
popa
inc
aaa
scas
lahf
inc
mov
data16
loope
xchg
jae
pop
and
ds
shl
pusha
add
mov
cmp
mov
cli
xchg
cmpsl
dec
mov
mov
gs
adc
leave
pop
jmp
mov
lret
add
sbb
adc
sub
or
xlat
dec
aam
dec
fadd
cmp
es
in
insl
fdivr
or
or
arpl
lret
shrl
push
jge
mov
pop
mov
inc
aad
add
ret
popa
test
fcoms
pop
rcr
fcompl
mov
xchg
out
sbb
pop
pop
ja
sbb
hlt
mov
out
and
pop
xchg
ret
push
cltd
inc
aam
jl
adc
jo
int3
or
or
xchg
xor
dec
shll
test
inc
and
dec
mov
fidivl
fwait
test
push
mov
dec
add
jno
push
out
mov
jae
jns
sub
in
xchg
cmpsl
test
xchg
mov
push
sbb
inc
jp
loop
mov
sbb
mov
les
lret
icebp
jne
push
mov
shl
xchg
cmp
jmp
or
cmp
shl
xor
sub
ljmp
stos
xchg
and
ret
sbb
ja
jle
lret
loope
sarl
pusha
pop
testb
mov
pop
mov
mov
pushf
push
pop
bound
adc
pop
inc
lock
add
xchg
mov
pusha
mov
rolb
scas
push
hlt
ss
adc
movsl
mov
movsb
shll
leave
in
mov
jmp
out
inc
pop
sbb
or
shr
cmp
fiaddl
dec
add
push
and
cmpsb
and
fidivrs
or
jp
and
xchg
es
shlb
and
dec
xchg
cmp
xchg
movsb
pop
mov
jbe
add
adc
and
dec
daa
dec
mov
mov
jl
xchg
mov
mov
lock
shll
lahf
and
ds
sbb
inc
add
push
cmpsb
movl
adc
or
push
inc
sub
sub
adc
dec
pop
sbb
mov
je
lret
fwait
or
mov
lods
add
fs
xor
xor
pop
lock
js
scas
testb
aam
lcall
repnz
sub
sub
mov
xchg
aas
jg
in
mov
xchg
rorl
pushf
sbb
push
add
test
hlt
jbe
sub
stos
pushf
lret
out
sarl
test
sbb
in
test
cmp
test
inc
sub
stc
fmull
jae
pop
lea
ss
add
cmp
xor
inc
cli
mov
fdivrs
aad
or
cmp
cmc
mul
push
xor
mov
mov
xchg
imul
mov
add
jl
or
adc
test
rcll
lret
clc
mov
data16
lret
rorb
inc
jne
gs
push
loopne
add
dec
in
fsubp
inc
adc
cmpsl
fnstcw
pop
push
xchg
cmp
nop
cmp
shrb
pop
pop
pop
aam
push
enter
jne
inc
insb
xor
iret
insb
mov
nop
fnsave
mov
dec
and
das
jecxz
push
in
loopne
xchg
out
rcll
mov
in
mov
xchg
gs
pop
outsb
fisttpl
push
ret
jno
inc
mov
xor
das
shr
mov
sub
and
daa
roll
test
cli
in
std
lds
cwtl
cmpb
clc
add
cmp
out
cld
hlt
subl
ret
lea
cmpb
pop
xor
shl
xchg
aaa
sub
cmc
inc
aam
pusha
sahf
ret
leave
xlat
enter
ljmp
aad
dec
push
adc
pop
jnp
ljmp
pushf
lods
and
push
mov
stos
icebp
out
and
jo
xlat
shld
cmp
cltd
sub
test
gs
or
clc
pop
pop
cmp
out
mov
sbb
pop
rcrl
add
jecxz
sbb
xchg
cmp
add
mov
ret
or
pop
mov
ret
mov
add
test
js
ja
cli
jp
lods
sub
xchg
or
push
mov
push
pop
or
nop
add
fisubs
nop
jns
xchg
sub
and
add
jmp
sarb
test
cmpsl
cmpsl
jae
movsl
in
mov
and
mov
dec
push
dec
sbb
cmp
mov
repnz
fists
int
xchg
jne
xchg
jmp
rcll
repz
inc
sub
in
das
push
leave
mov
stos
push
and
mov
jmp
jle
fdivl
pusha
notl
iret
data16
pushf
dec
sub
xlat
dec
jmp
jae
dec
jl
sbb
imul
outsl
jp
fidivl
packuswb
and
cmp
adc
cmpb
ss
pop
imul
inc
ljmp
dec
add
xchg
or
mov
out
xchg
loope
pop
mov
js
lds
inc
fcmovb
mov
inc
scas
scas
in
and
adc
movsb
jecxz
jb
ljmp
jge
jne
sbb
aam
daa
inc
sti
cmp
xchg
repnz
jl
sub
push
mov
mov
jo
mov
lahf
aas
xchg
push
and
push
out
out
inc
xchg
dec
je
dec
push
test
mov
inc
enter
pop
jns
call
loope
pop
aaa
sub
lcall
cmp
dec
mov
mov
stos
add
lds
in
xor
in
ds
pop
pop
fimull
mov
and
lcall
jns
testl
outsb
mov
xchg
mov
popa
in
jg,pt
into
mov
insb
or
mov
add
out
test
push
add
aaa
int
loopne
sub
sub
lret
mov
shlb
insb
push
sbb
test
sahf
sub
test
jge
sbbb
pop
outsl
pop
mov
loop
in
stc
xchg
sarl
out
add
push
mull
lea
test
cmp
out
out
cli
mov
je
cmp
sahf
pop
or
std
imul
in
stos
pop
cmpsl
push
adc
inc
imul
mov
add
mov
mov
inc
lods
nop
aaa
and
push
in
out
mov
shrl
nop
in
lret
or
dec
dec
out
inc
inc
es
or
repnz
fisttps
repz
jge
xchg
std
xor
adcl
cs
mov
sbb
shll
pushf
ret
jmp
xchg
test
xor
popa
aad
mov
xchg
repz
jb
cmp
inc
je
hlt
mov
push
cmp
lea
pop
call
js
mov
pop
sahf
jb
xchg
jno
jb
or
inc
sub
inc
rcrb
mov
loope
adc
gs
rcll
jge
std
or
adc
inc
sub
mov
adc
or
pop
or
cld
hlt
cmp
mov
cld
pushf
lock
pop
dec
in
mov
mov
sahf
sub
mov
aam
lret
pop
xchg
cmpsb
es
outsb
insl
stos
xchg
add
xchg
xchg
cwtl
or
dec
cmp
repz
lods
mov
scas
mov
into
mov
outsl
mov
add
pop
add
pop
cltd
pusha
dec
xchg
test
nop
lock
dec
mov
jo
loope
clc
pop
mov
mov
shl
les
mov
cli
out
ljmp
push
dec
fdivrs
mov
xchg
xor
xchg
popa
xor
aam
mov
xchg
xchg
jmp
test
inc
or
jns
dec
lahf
int3
push
or
jae
fwait
jecxz
imul
or
sub
jbe
into
bound
lcall
inc
mov
cs
jb
lret
cmpsb
xchg
fcomps
mov
mov
mov
jne
repz
ss
adcb
leave
das
xchg
sahf
adc
sbb
mov
int3
daa
scas
sub
loopne
repnz
or
insl
stos
lds
dec
and
sahf
subb
jnp
mov
in
aas
push
pusha
xchg
mov
pop
ret
call
inc
in
xlat
jae
inc
sub
fbstp
addr16
out
ljmp
insb
pop
sbb
push
mov
push
sbbb
adc
xor
repnz
shlb
hlt
jg
int
xchg
dec
pop
inc
gs
or
mov
aaa
pop
fimuls
mov
or
pop
iret
and
faddp
cmp
ror
xchg
scas
mov
and
shl
cmp
add
jbe
xor
jge
jmp
daa
inc
mov
in
jno
dec
mov
dec
mov
aam
cwtl
lods
push
xor
mov
xor
pop
xchg
inc
push
sbb
mov
push
mov
xlat
inc
and
in
popf
sub
pop
mov
jmp
sub
sarb
mov
ds
cmp
movsl
sarl
pop
cmpsb
rorl
push
sbb
movsb
add
hlt
fidivl
dec
sbb
scas
mov
bound
jns,pt
scas
repz
lcall
movsl
fsubl
pop
add
movsl
dec
adc
cmp
fidivrs
fimull
mov
sub
and
movl
xchg
arpl
sbb
push
mov
das
sbb
aaa
mov
test
lods
xchg
and
loop
push
or
dec
sbb
fs
ficoms
insl
sub
shrb
cmp
cmpsl
mov
out
mov
cli
icebp
sti
push
xor
mov
cmp
cmp
lock
cmp
jo
das
cmc
test
repz
insl
pop
sbb
aas
imul
mov
add
pushw
sti
lods
ja
call
xlat
cmpsl
lods
inc
sub
and
cmp
inc
sti
test
pop
decb
cmpb
jecxz
pop
loopne
ficoms
add
adc
fldcw
and
ljmp
xchg
rclb
test
imul
stos
dec
lods
je
pop
shl
adc
xchg
in
insl
outsb
xchg
and
add
cwtl
nop
xchg
arpl
aas
xchg
push
test
je
jl
push
and
mov
out
lods
lea
cwtl
mov
adcb
out
cmp
dec
jb
xchg
lds
stc
and
jge
inc
fistl
das
jle
imul
fcoml
shl
loope
testb
mov
inc
scas
dec
mov
ljmp
lret
imul
mov
cld
lock
adc
rolb
sbb
fwait
ret
out
pop
popl
pop
dec
cld
xchg
enter
add
mov
addl
imull
add
and
cmpsb
daa
dec
punpckldq
mov
xchg
add
test
sub
mov
jnp
push
adc
rcr
lcall
in
sub
jo
dec
push
dec
pop
js
imulb
dec
inc
test
xchg
adc
push
lcall
mov
or
mov
xchg
loop
dec
testb
ret
lahf
out
xchg
dec
xchg
and
inc
mov
stos
or
adc
sahf
push
addb
out
es
push
and
bound
inc
mov
ss
in
xchg
fstp
mov
dec
and
test
enter
jecxz
inc
lahf
or
xchg
repz
loop
push
jne
dec
std
mov
jno
fists
test
jecxz
test
mull
out
dec
mov
jmp
fimull
fsts
xchg
nop
stos
cmp
shlb
lock
lods
cmpl
dec
jle
fistpl
in
mov
mov
pop
vprotd
cmp
push
dec
jae
adcl
mov
insl
fisttps
ficompl
mov
ret
rcr
sbb
test
sub
inc
and
push
leave
and
mov
popf
popf
pushf
leave
dec
mov
arpl
loop
or
inc
notb
pop
arpl
add
fistpl
fisubs
push
lds
in
scas
shr
subb
dec
cmpsb
cmp
sbb
movsb
stc
ja,pt
mov
fidivs
jns
jge
outsb
popf
sbb
daa
inc
add
cmp
outsb
inc
jno
test
jl
int3
ds
and
sub
jo
push
adc
lock
push
jl
or
dec
xchg
cmpsb
push
mov
in
test
cmpsb
pop
neg
scas
push
std
and
adc
dec
adc
or
dec
subl
enter
hlt
in
sub
lods
imul
sbb
xor
imul
jb
push
pop
gs
pop
js
gs
dec
ret
dec
outsb
push
jns
in
dec
pop
in
mov
lds
pop
mov
fs
mov
mov
mulb
and
and
int
pop
aam
add
cs
lock
or
mov
pop
sbb
mov
test
inc
orb
outsl
lds
stc
add
arpl
ret
mov
mov
sarb
fsubs
xor
and
cmp
and
in
xor
cwtl
or
and
cmc
dec
popa
mov
fwait
pop
xor
adc
pop
xor
iret
das
jl
repz
lods
xchg
outsb
popa
lods
pop
outsl
jmp
xlat
out
pop
sub
dec
les
cmpsl
inc
push
addr16
sub
and
cli
movsl
loopne
ljmp
dec
lock
fldenv
mov
rep
stc
pop
xchg
and
sbb
loop
mov
pop
jae
mov
pushf
sbb
pop
jmp
xor
cs
mov
pop
nop
outsb
aas
xor
sub
fistl
je
jno
jecxz
outsl
and
jmp
daa
sbb
ljmp
test
test
hlt
addl
fisubrs
inc
push
xor
fisubrl
pop
dec
insb
mov
dec
add
and
fcompl
das
ljmp
pop
mov
mov
mov
shll
lret
fcmovb
nop
mov
mov
in
lock
add
adc
pop
mov
push
aam
pushf
xor
jbe
or
adc
insl
js
mov
xor
push
mov
ljmp
jge
bound
mov
adc
leave
and
inc
stc
xadd
imul
daa
in
into
pop
daa
test
sbb
mov
in
dec
push
aam
mov
clc
shr
add
sbb
bound
stos
mov
loope
mov
ljmp
mov
dec
xor
xchg
xor
or
xchg
scas
pop
dec
pop
insl
push
test
xchg
mov
dec
test
addl
rorl
imul
aad
nop
add
ret
xor
mov
cmp
push
jns
xchg
pmulhuw
dec
setae
jbe
mov
jmp
inc
pop
inc
xor
movsb
ror
jp
daa
pop
mov
adc
and
mov
push
jne
or
and
je
mov
jmp
xor
dec
cmpl
and
shrb
or
daa
xchg
push
xchg
lahf
stos
stos
xor
pop
pop
movsb
insb
pop
dec
scas
jnp
xchg
xchg
enter
xchg
pop
pusha
enter
mov
adc
jl
or
ss
add
popf
bound
icebp
mov
in
push
jp
int3
pop
les
outsb
mov
push
scas
test
mov
adc
sbb
mov
lock
dec
leave
rcll
hlt
adc
push
inc
imul
xlat
icebp
pop
aaa
or
or
mov
int3
push
push
dec
pop
sub
lahf
ffreep
xchg
push
stos
rolb
mov
and
inc
cmp
into
cmc
push
xlat
pop
push
jbe
xor
jge
rcrl
inc
lret
sub
leave
jl
fstpl
dec
xchg
iret
push
push
pop
pop
fs
aas
jns
lahf
pushf
mov
push
ret
jp
test
inc
inc
xor
xor
push
in
imul
enter
pop
ss
push
dec
xor
sub
lea
fiadds
cmpsb
cltd
cmp
lock
cmpb
sbb
faddl
aam
xor
std
scas
xor
pop
scas
js
pop
cmpsb
pop
lods
and
pop
shrl
push
shl
test
sub
adc
xorb
repnz
sub
aas
out
mov
fsubl
fcoms
push
or
xchg
nop
je
sub
mull
cltd
fadd
xchg
fistl
sbb
cmp
cwtl
cwtl
push
outsl
movsb
sbb
loop
in
stc
mov
daa
pusha
adc
pop
jl
push
mov
sbb
stc
inc
out
pop
add
push
cmp
xor
xacquire
into
adc
adc
cmc
adc
xor
les
adc
mov
imul
add
adcb
lods
inc
loope
mov
data16
and
test
mov
adc
dec
sti
push
ja
decb
mov
icebp
mov
loopne
or
inc
pop
add
fsts
and
repz
stos
xchg
inc
out
sbb
sbb
add
mov
pushf
ret
cltd
dec
jmp
movsb
ds
outsb
xor
xor
nop
dec
arpl
sar
fwait
jb
repz
xor
je
sub
hlt
in
insb
mov
call
mov
jecxz
fwait
cmpsl
inc
sbbl
cmpsb
sbb
pop
push
lds
push
popf
inc
adc
das
cmp
mov
push
rcrb
and
adc
jo
push
sti
pushf
std
add
add
les
cwtl
xor
mov
into
fisttps
in
leave
lock
jno
pop
lods
lahf
pop
shrb
and
aam
add
ret
add
jae
insl
pop
sub
dec
repnz
ljmp
mov
mov
aaa
lret
push
and
jo
and
xor
cltd
add
pusha
ja
shlb
push
fstpl
hlt
cwtl
xchg
loopne
sbb
push
mov
sti
xchg
xor
xor
adc
xor
enter
test
xor
jb
or
mov
sbb
or
je
test
push
in
ja
adc
dec
js
out
inc
jecxz
lret
or
lds
fwait
jo
add
in
jle
pop
aas
pop
add
stos
jnp
adc
test
sbb
adc
dec
pop
dec
xchg
xor
idiv
sbb
pop
sti
out
addr16
jp
cli
cmc
mov
stos
ret
and
mov
mov
jne
das
dec
mov
inc
push
fists
mov
test
mov
push
cli
dec
sub
sarl
mov
push
mov
jnp
or
pusha
test
push
pusha
arpl
dec
ret
addr16
mov
test
push
push
dec
jae
enter
adc
popf
mov
mov
imul
jmp
stc
sbb
test
das
scas
or
rcll
or
mov
mov
inc
aam
leave
cmp
fdiv
pusha
jmp
arpl
push
lahf
or
cmp
sbb
xchg
cmp
xchg
xor
add
decl
cmp
push
lock
icebp
rcrb
cli
scas
sub
push
and
testb
mov
movsb
lss
jbe
pusha
scas
jge
testl
inc
pop
daa
cmp
pop
jno
push
jl
rol
add
daa
xor
lcall
push
xchg
push
popa
test
adc
add
pop
popf
cmpsb
push
sbb
in
push
xchg
sbb
out
push
sbb
jne
pop
push
push
cmp
sub
dec
sarl
push
pop
ds
mov
movsl
pop
pop
and
mov
orb
sub
ret
mov
cmc
stc
pop
mov
lds
insl
aam
sub
ds
daa
cmp
xchg
sub
mov
push
ror
xlat
pop
jg
adc
mov
fldcw
mov
push
mov
and
out
roll
subps
int
insl
cmpsb
sub
lock
mull
lret
and
cs
push
mov
sbbb
jge
sahf
mov
jnp
pop
mov
adc
cwtl
fsubp
pop
mov
inc
fs
adc
fidivs
cltd
in
xchg
cmp
fdivr
push
out
xchg
mov
xor
jbe
popa
or
or
push
cmc
fldenv
cwtl
pop
and
fisubrs
mov
adc
daa
push
add
or
add
dec
jecxz
xlat
sbb
sub
jne
mov
jge
ss
mov
sar
jno
and
loopne
inc
imul
adc
inc
insb
fxch
sub
les
arpl
repz
add
pop
dec
repnz
sub
pop
fnstenv
adc
in
pop
jmp
fildl
aad
push
fnstsw
outsl
push
cmpsb
jb
inc
lods
dec
je
mov
jecxz
mov
out
les
icebp
daa
mov
cmc
add
mov
inc
adc
mov
dec
dec
xor
pop
imul
das
sbb
mov
mov
mov
adc
std
test
xor
cmpsl
inc
dec
sarb
outsl
in
cld
lret
ret
mov
add
mov
pop
sbb
inc
repnz
lret
cmp
sar
push
or
aam
mov
ds
nop
insl
inc
js
dec
in
sub
xchg
outsl
adc
adc
mov
lods
cmp
mov
pop
bound
mov
jg
sbb
xchg
adc
sahf
test
clc
mov
push
pop
psrlq
sbb
dec
xchg
push
sbb
out
rcll
insb
pop
jns
scas
stos
mov
nop
out
jbe
dec
xchg
insb
mov
aaa
pushl
inc
adc
into
or
cmpsb
xor
lcall
mov
adc
or
ja
mov
faddl
test
or
xor
fwait
lahf
xor
push
xchg
ret
add
cmpsl
xor
repnz
sub
popa
jne
jns
and
dec
xchg
xorl
mov
mov
scas
addr16
jp
and
mov
je
add
repnz
mov
lds
mov
xchg
xchg
xchg
cmp
adc
test
fdivrs
sub
int3
jmp
push
add
inc
stos
xchg
adc
xor
or
or
jle
in
jnp
pusha
incb
iret
jbe
jle
sti
cltd
mov
inc
adc
jae
mov
jmp
iret
popf
mov
push
mov
ljmp
xchg
enter
les
imul
scas
outsl
sbb
das
adc
mov
sahf
leave
scas
push
fxtract
stos
and
mov
or
mov
push
aaa
push
jmp
jecxz
sbbb
pop
mov
fimuls
aas
lds
in
or
and
adc
sbb
movsb
lcall
jbe
add
jge
sbb
daa
inc
call
jnp
pop
mov
jl
jns
dec
jo
push
xor
cmc
jns
lahf
cmp
test
fnstsw
repz
fnstcw
in
cmp
mov
ljmp
push
or
rcl
sub
test
ds
leave
andl
scas
mov
andb
fadds
add
xor
inc
cwtl
pop
fisubl
std
pop
stos
popa
sub
jle
jle
dec
aaa
push
sub
push
mov
shrb
xor
push
fwait
mov
jno
and
jp
push
adc
stc
int
dec
icebp
sub
mov
and
dec
in
add
add
xchg
sbb
jge
test
dec
mov
sbb
loop
xchg
ljmp
in
xchg
test
stos
push
cmp
xchg
mov
and
jecxz
mov
adc
cmp
clc
jp
lods
xchg
mov
cld
mov
pop
fdivl
lods
iret
xchg
pop
inc
jbe
adc
in
imul
mov
iret
data16
fwait
lods
adc
mov
xor
mov
sbb
mov
call
loop
xchg
add
gs
insl
loopne
mov
es
inc
test
les
cli
out
repz
or
cmp
data16
pop
mov
out
je
loopne
sbb
out
and
jmp
pushl
sti
jb
jmp
xchg
je
mov
pop
repnz
testb
int3
shll
subl
dec
push
imul
pop
mov
mov
inc
inc
leave
and
cli
int
mov
je
mov
test
sbb
pop
testb
cwtl
loop
dec
cmpsl
inc
loop
mov
inc
mov
pop
lret
daa
xor
adc
sub
xlat
pop
ljmp
sub
int3
cltd
ret
and
pop
es
xor
insl
sub
test
xchg
rcll
sub
lods
mov
jbe
mov
popa
and
mov
fiadds
add
stos
fisubrl
cltd
jae
movb
and
cltd
dec
fucomp
data16
cmpl
mov
test
rclb
sub
into
xchg
mov
inc
push
xchg
and
call
fbld
xor
sub
imul
xchg
das
mov
ja
mov
dec
pop
mov
adc
jns
jns
and
into
xor
das
add
cs
out
rcrl
fwait
hlt
add
add
in
jb
xchg
rcr
mov
mov
jno
or
mov
mov
in
mov
push
jns
outsb
and
jne
mov
jg
rol
or
addr16
jmp
xchg
std
pop
and
insb
out
jne
sub
stos
xchg
push
inc
nop
mov
and
insb
sahf
es
jnp
aaa
scas
jle
inc
push
in
test
cltd
adc
iret
aad
cmp
push
lods
xor
push
jecxz
sbb
movsb
jae
and
scas
in
mov
mov
imul
push
xchg
pop
or
and
pop
jg
scas
shrb
xlat
adc
cli
mov
jmp
andb
mov
arpl
js
inc
je
inc
or
cs
push
sub
add
pop
mov
pop
mov
pop
jne
sub
and
push
das
scas
jmp
jae
cmp
movsb
and
push
int
scas
push
arpl
adc
sbb
mov
cmp
xlat
jmp
xor
mov
ret
adc
push
sbb
stc
add
sub
push
test
pop
inc
jmp
adc
in
and
pop
enter
pop
repz
mov
loope
push
dec
sub
xchg
test
ds
adc
pusha
aam
or
lock
add
lcall
jle
lcall
loope
js
rolb
sub
push
lcall
outsl
fdivr
jge
sub
nop
outsb
or
xlat
adc
addl
and
cli
pop
mov
inc
and
scas
cmp
lds
sub
dec
xor
das
xlat
lret
daa
rcrl
out
add
ret
rcll
out
outsl
inc
movsb
aaa
loop
mov
gs
adc
es
ss
fsubrp
cmp
dec
mov
out
outsl
lock
cmp
mov
mov
cmc
addr16
xor
jae
pop
popa
push
data16
imul
shrb
lods
cli
mov
mov
xlat
loop
adc
mov
mov
push
sti
adc
pop
mov
push
gs
jo
in
dec
test
fcomp
cmp
faddp
and
out
test
lods
in
sbb
into
ljmp
aas
push
mov
pushf
les
test
test
aad
or
adc
lods
adc
bound
mov
pushf
pop
dec
jecxz
pop
rol
cmc
sarb
lea
sub
test
sbb
or
loop
push
xchg
loop
inc
jns
inc
outsl
sti
stos
inc
bound
repnz
sub
xor
mov
cmp
std
mull
test
mov
sbb
fildl
xchg
mov
mov
arpl
or
shlb
mov
aam
das
xchg
ret
mov
mov
insl
adc
push
xchg
adc
push
ljmp
jp
push
dec
clc
mov
mov
mov
mov
cmp
shll
stos
xor
add
cmp
xchg
lods
fstl
pop
clc
mov
lret
sbb
roll
or
stos
insb
into
test
cmp
sbb
jno
pushl
xor
and
xor
inc
stos
mov
push
imul
sub
sti
ja
dec
jb
push
push
cld
or
mov
fwait
std
cli
push
push
int
add
dec
fldt
out
mov
mov
jns
inc
addr16
jl
xchg
pop
test
mov
loop
mov
sub
popa
addr16
jp
lods
jbe
jae
xchg
mov
push
fcoms
jne
lock
lock
jnp
cmp
xor
mov
jbe
pusha
cmc
jae
jbe
and
fsubp
sub
mov
ret
push
sbb
stos
ja
jg
arpl
loopne
imul
jle
add
in
repnz
xor
xchg
xor
addr16
inc
pop
pop
ljmp
adc
pushf
popf
incb
mov
call
mov
je
sbb
imul
scas
xor
and
dec
jecxz
mov
cmp
pop
leave
popf
cltd
in
hlt
inc
xchg
and
inc
ja
pop
or
test
bound
outsb
repz
add
dec
aam
jmp
aad
lds
aas
mov
mov
into
cmp
push
xor
jbe
lahf
sarb
repz
sbb
push
add
inc
push
movsb
cmp
repz
and
dec
dec
and
ljmp
jo
lret
sbb
jg
mov
test
jae
dec
inc
jp
repnz
fists
clc
enter
pop
xor
imul
dec
loope
cld
mov
jl
cmp
arpl
xor
test
sti
jg
insb
push
iret
add
mov
inc
jmp
je
and
inc
pop
pop
sub
incb
test
cmp
and
in
fsubl
outsb
outsb
popa
fsts
pop
lcall
mov
in
sbb
cs
or
push
sbb
jp
push
or
lret
inc
shl
sub
cmpsl
imul
mov
xchg
xchg
outsl
and
jno
rclb
push
stc
xchg
mov
fs
rcll
inc
repnz
cmp
or
pop
sub
cli
and
lret
sbb
or
fdivs
cs
xor
mov
cmp
adc
in
imul
pop
jnp
and
mov
xlat
and
push
sub
jg
mov
mov
pop
test
fidivrl
gs
push
pop
dec
in
movsb
inc
stos
dec
and
les
insl
repz
pop
xchg
push
adc
cmp
sbb
pop
repnz
dec
adc
xlat
mov
jmp
sbb
aad
les
nop
mov
adc
dec
jne
jb
push
xorl
jecxz
pop
pop
xabort
sub
sbb
mov
call
cmpl
fildl
outsb
adc
cmpsb
imul
inc
das
mov
mov
fs
inc
mov
mov
push
add
sahf
jp
cwtl
pop
lcall
nop
add
dec
cld
dec
movsl
pop
lret
add
xchg
mov
std
loope
pop
jmp
pop
sub
sarb
xchg
sub
out
ret
inc
sub
mov
mov
jne
push
gs
mov
fidivrl
ret
loop
and
dec
cmp
mov
rolb
mov
ud1
or
leave
push
mov
movsl
sar
test
jmp
rcll
mov
fsubrs
lahf
fstpl
inc
fbstp
call
daa
xor
xchg
or
jp,pn
sbb
mov
sbb
pusha
jp
test
hlt
pop
ja
push
jg
aas
jne
or
jne
fwait
sub
ficomps
jo
adc
fs
out
aaa
mov
mov
jns
gs
fldt
mov
ret
loop
push
mov
lahf
pop
or
mov
jb
mov
shll
xor
pop
jne
mov
pop
fisttps
mov
xchg
or
data16
sub
addl
imulb
mov
movsb
xchg
stos
ljmp
insb
je
mov
jle
mov
in
ret
sub
cmc
iret
xchg
imul
pop
and
jae
xchg
push
xor
xchg
popf
and
test
movsb
fimull
cs
int
or
imul
sbb
jae
jae
and
insl
mov
mov
leave
adc
loope
mov
adc
cwtl
rolb
stos
sub
ficompl
push
xchg
adc
add
test
jmp
movsl
mov
lds
inc
mov
scas
cmpsl
jmp
and
shl
ds
and
cmp
int
xor
loopne
jb
sbb
jae
cmp
les
loopne
mov
dec
mov
enter
scas
mov
lahf
aaa
push
cmp
int
test
ds
pushf
inc
or
mov
enter
pop
jno
int
cmpsl
inc
loope
or
cmp
xchg
ds
mov
fwait
and
mov
sbb
inc
sbb
test
xlat
xchg
add
in
dec
add
pop
daa
push
mov
push
cmpl
sub
outsb
rcl
in
adc
cmp
cmpb
fidivl
xchg
xor
cmp
and
ss
sbb
int
cmp
mull
jmp
rorl
das
sbb
sahf
inc
daa
inc
test
inc
ljmp
mov
sub
dec
xchg
fs
xchg
add
movsl
sahf
cmp
les
push
and
xor
mov
scas
into
movsl
in
xor
cmc
loope
xor
and
imul
mov
shrl
cmp
and
pusha
cmp
sub
mov
sti
jno
cmp
test
ss
fiaddl
inc
mov
jge
les
mov
repz
int3
xor
mov
frstor
pop
movsl
or
pushf
sbb
cs
and
aad
push
sbb
nop
inc
hlt
aas
jmp
sbb
dec
push
nop
jbe
xor
dec
jecxz
imul
sti
lods
in
lea
popf
pop
mov
and
mov
add
dec
ffreep
mov
pop
mov
inc
jge
outsl
inc
cwtl
mov
icebp
mov
cltd
xchg
and
and
notb
je
inc
mov
cwtl
adc
fistpll
lret
pop
pop
cld
ja
push
lret
je
arpl
cli
cmp
mov
push
pop
inc
lds
dec
aaa
ljmp
xchg
adc
and
arpl
rorb
or
and
mov
fwait
mov
xchg
nop
adc
ljmp
fsubrs
push
pop
and
jecxz
psubq
push
add
popa
mov
sbb
mov
frstor
pop
clc
xor
in
mov
pop
shrl
dec
sbb
add
xchg
mov
leave
push
daa
aas
mov
mov
jno
scas
inc
jge
dec
and
into
mov
sbb
xchg
dec
cmc
outsl
test
pop
mov
dec
aaa
cmp
inc
push
lea
xor
pop
rcll
adc
pusha
add
insl
out
outsb
leave
ljmp
lock
add
push
inc
pop
dec
mov
mov
pop
adc
mov
mov
inc
mov
mov
dec
pop
jb
jne
mov
push
cs
notb
movsb
xor
xchg
mul
mov
xchg
mov
jo
cmp
or
push
add
loope
pop
inc
xchg
and
jae
jnp
mov
ja
pop
clc
jmp
push
inc
iret
repnz
inc
sbb
pop
movb
inc
cmp
mov
fistpl
popa
mov
inc
out
or
and
outsb
sbb
movsl
icebp
imul
scas
sti
push
fcoms
inc
dec
adc
mov
out
repnz
cmp
mov
arpl
cmp
mov
or
lahf
testl
add
insb
and
aam
pop
pop
inc
mov
imul
add
shlb
pop
and
jecxz
movsb
syscall
push
mov
mov
jge
gs
sbb
add
ds
fdivrl
pop
dec
cmc
jno
push
xlat
jl
mov
mov
xor
popa
imul
push
jnp
push
mov
dec
test
or
sahf
cmpsb
in
pop
in
aad
pop
enter
pop
mov
mov
loope
mov
sub
ret
loope
aad
xor
js
ret
movsl
stc
mov
movsb
sub
add
mov
push
add
push
inc
xor
add
or
pop
jbe
or
shlb
das
lcall
cltd
fdivr
dec
and
inc
ret
xor
inc
adc
adc
loopne
add
ljmp
adc
and
incl
int
test
sub
insl
negl
dec
add
mov
cmpsl
shll
cmp
inc
sbb
ret
orb
loop
bound
add
dec
fs
les
in
movsb
ss
add
fdivrs
mov
sbb
aad
xor
cmc
repnz
mov
mov
clc
cmc
mov
aad
pop
mov
or
cs
rorb
add
jb
es
push
lods
scas
inc
add
lahf
into
xchg
sub
mov
mov
xchg
outsl
jg
and
inc
and
mov
sbb
fchs
aaa
jae
dec
mov
movsb
loope
pop
les
out
push
or
fadds
sti
cmp
cmp
movsl
cwtl
pop
pop
jo
adc
mov
pushf
jmp
outsl
cld
lods
mov
fisttpll
nop
imul
mov
jb
fldt
mov
mov
decb
hlt
mov
and
das
es
das
in
lret
fcmovnu
imul
sub
sub
inc
mov
mov
mov
push
or
and
push
pop
rcrl
mov
cwtl
xor
std
in
iret
inc
cwtl
into
sbb
cmpsl
cmp
or
adc
mov
sub
mov
pop
sub
push
mov
arpl
push
xor
aam
dec
popf
ret
pop
sub
cmpsl
es
leave
pop
add
aam
inc
xchg
iret
inc
mov
popa
ret
lods
dec
cmp
mov
or
push
cvtps2pd
mov
cltd
dec
rcrb
mov
jno
push
sub
fisttpll
xor
xchg
pop
lcall
gs
mov
pop
sarb
stos
cmp
out
gs
xchg
iret
xchg
push
push
add
inc
call
add
add
cmc
xor
movsl
adc
pop
cli
leave
dec
cs
xor
jg
das
dec
sub
inc
insl
pop
jp
and
loop
push
mov
lods
add
lcall
bound
fdivrs
mov
lahf
xchg
or
movsb
mov
fildll
pop
pop
push
adc
jp
mov
mov
sub
les
cli
jae
jne
xor
mov
mov
fisttps
in
mov
pop
jmp
rcl
andl
cmpsl
out
fildl
sub
mov
lea
leave
test
rclb
and
jnp
jle
hlt
mov
push
xchg
mov
daa
movsl
iret
push
rorb
ret
cwtl
pop
std
adcl
push
mov
dec
sarl
adc
xchg
jnp
or
xchg
imul
into
push
add
adc
lret
pop
and
repnz
mov
and
leave
adc
loop
or
sbb
pop
aaa
nopl
inc
push
push
add
int3
mov
gs
lds
dec
rol
iret
scas
gs
pop
cmp
mov
jbe
repz
jge
repz
sub
adc
cmp
jg
jl
jle
dec
fwait
push
mov
bnd
jo
pop
xor
mov
enter
push
push
aam
cmp
repz
cmpsb
push
jne
enter
pop
out
adc
lea
das
loope
leave
xchg
aaa
cltd
ds
jo
movsl
add
mov
int3
cli
fs
cmp
and
jmp
aaa
add
cmp
xchg
jno
mov
out
js
mov
and
adc
push
xor
cmp
movsl
loopne
sub
mov
or
out
adc
jg
idivb
stos
stos
add
aad
in
and
jg
and
cmp
popa
cli
mov
neg
scas
adc
sarl
sbb
pop
add
daa
pop
cltd
outsl
mov
pop
sbb
mov
pop
mov
xor
xchg
sub
pop
cmp
cmp
dec
out
outsl
sar
mov
xor
cmp
push
xchg
or
rcrb
adc
xor
rcrb
fists
popf
scas
ja
xchg
jne
adc
out
dec
add
sbb
lret
xchg
out
xchg
mov
push
xchg
xlat
fsubp
adc
mov
inc
out
iret
push
ret
fdivl
and
loopne
pop
mov
add
inc
in
cmpsl
fstps
or
dec
fnstcw
repz
stos
xchg
fwait
mov
sbb
mov
outsl
out
pop
or
pushf
jo
aas
fsubrs
adc
mov
and
push
inc
pop
or
sub
jmp
je
cmpl
add
lea
shr
xlat
bound
out
lods
data16
jle
ds
dec
mov
sbb
nop
bound
pop
pusha
inc
mov
add
in
adc
mov
pop
push
fwait
and
fsubrs
cmpsl
mov
dec
std
xchg
shlb
cmpsl
cmp
jo
sub
test
int
mov
push
xchg
repnz
sub
imul
dec
sub
mov
mov
lea
insl
mov
movsb
dec
iret
clc
ljmp
push
popa
flds
lods
mov
ficoms
and
sbb
ud1
add
rcrb
xchg
test
insl
fidivs
in
adc
push
test
out
fs
sub
sbb
sub
pop
in
jne
jnp
add
enter
push
mov
push
frstor
push
das
or
push
cmp
or
dec
xor
ret
dec
or
xchg
addr16
dec
xchg
cwtl
sbb
shll
inc
add
push
adc
test
push
pop
ret
or
xor
sub
sub
jns
sub
xchg
xchg
pop
shrl
int3
sbb
mov
sbb
sub
jp
jo
mov
rcrl
push
xor
jne
adc
mov
mov
insb
fadds
jmp
mov
xorl
fildll
scas
pop
movsb
push
jle
fsubrl
mov
and
jle
addl
iret
mov
push
pop
xor
add
fdivs
mov
or
xlat
mov
stos
adc
fs
cld
xchg
sarb
dec
sbb
cmp
imul
scas
ror
push
dec
imulb
adc
and
mov
test
jns
mov
arpl
dec
inc
subl
xchg
push
imul
loope
or
pop
loopne
or
pop
int3
stos
mov
pop
fisubs
dec
aaa
ffreep
fldt
stc
and
cmp
cmp
pop
movsb
fcompl
dec
push
dec
ljmp
addr16
sbb
jge
daa
cmp
jp
ret
insb
dec
jno
sbb
jl
cs
dec
or
mov
pop
pop
imul
lock
out
mov
jbe
jmp
das
in
mov
outsl
sub
push
sbb
sub
pop
add
xor
jmp
mov
add
sub
adc
fcomps
and
add
je
xor
jge
dec
test
pop
in
js
roll
movsb
jle
lcall
loopne
push
dec
push
sub
inc
ret
outsb
cli
out
jb
mov
mov
jg
sub
std
pop
orb
xor
push
and
data16
das
pushf
sub
negl
sbb
rorl
mov
jmp
sahf
sub
test
mov
outsl
pushf
xchg
loop
orb
fistps
fistl
add
outsb
movsl
xor
cmc
movsl
out
cmp
xor
fldenv
cmp
jmp
or
pop
into
dec
loopne
cmc
dec
call
rcrl
xchg
adc
mov
adc
pop
xor
cli
data16
pop
lods
jge
dec
mov
shll
std
mov
in
push
lahf
sti
jle
in
data16
sub
iret
loopne
loopne
dec
pusha
stos
and
sbb
pop
push
jmp
sbb
cmc
sahf
sbb
mov
pop
adc
jle
mov
jmp
shrl
jae
clc
aad
popa
mov
aas
enter
mov
cmp
adc
jecxz
call
movb
call
lods
mov
mov
adc
dec
mov
js
pop
jae
jo
adc
adc
mov
mov
mov
shl
sub
push
in
std
cmp
dec
cmpsl
cmp
ret
mov
push
mov
jne
rol
mov
cmc
mov
dec
mov
pop
movsb
fcomp
rol
rorb
test
and
jge
gs
push
jmp
dec
lret
xchg
dec
cmp
cmp
popa
lock
lods
and
aas
idivl
mov
mov
sbb
stos
add
cmp
mov
xlat
outsb
push
scas
push
xor
xlat
shll
jecxz
int
jecxz
push
sbb
mov
shll
push
or
sub
xchg
pop
loopne
push
mov
in
xor
loopne
xor
xor
mov
and
mov
mov
dec
adc
inc
fwait
ror
or
fs
call
inc
js
xchg
repz
add
mov
lock
push
jns
inc
and
movsb
popf
sbb
bswap
push
mov
shrl
fwait
das
sahf
jp
in
mov
jns
mov
jge
cmp
push
xorl
xchg
mov
lcall
pop
xor
xchg
push
mov
jmp
insl
xor
icebp
pop
or
std
imul
sub
insb
and
jle
add
pusha
cmp
ljmp
jo
inc
pop
out
in
sbb
icebp
push
inc
pop
push
popf
rcrl
inc
arpl
ficoml
xchg
xchg
sub
movsb
sbb
stc
imul
loope
and
sub
adc
or
repnz
xor
lock
movsb
hlt
mov
or
inc
xchg
mov
jbe
pop
push
lea
mov
add
insb
pop
aam
dec
faddp
mov
lds
inc
shl
cmp
imul
cmp
mov
movsb
addr16
mov
sahf
js
jbe
sbb
jge
mov
fsubl
cmp
enter
xorl
cwtl
jl
mov
dec
jns
cmp
pop
lods
imul
jb
lahf
mov
lods
push
test
push
push
mov
cmpsb
outsb
int3
lret
mov
or
pop
insl
mov
jae
sti
pop
xor
pop
arpl
loope,pt
pop
movsl
push
aas
jo
add
cmpsb
popl
sub
pop
mov
adc
xor
xchg
adc
pop
jmp
movsb
js
scas
inc
pop
and
and
fbstp
fdivr
mov
sub
stos
lret
xor
adc
movsl
outsb
mov
mov
cmp
mov
mov
imul
and
sub
daa
test
int
dec
dec
sub
cmp
negl
lret
insl
shl
sbb
sbb
out
sahf
int
pop
test
push
sbbb
outsl
jnp
xchg
loop
fucomip
stc
daa
dec
and
in
adc
out
ss
int3
cmp
mov
cmp
sbb
mov
cmp
movsb
push
or
les
adc
xor
jmp
pop
sbb
ljmp
jecxz
adc
and
fisubs
sub
es
mov
pop
popf
xor
jo
in
popa
pusha
add
aad
pop
sti
sub
fsubrp
xor
stos
dec
mov
mov
flds
dec
xor
push
mov
sbb
xor
clc
pop
jno
fists
aad
sub
jmp
sub
aad
subb
mov
inc
jb
or
imul
adc
lea
lret
out
call
insb
inc
xchg
mov
ss
subl
fldt
lcall
xchg
inc
cltd
fsub
inc
add
imul
loopne
mov
jne
iret
and
fbld
inc
fstps
mulb
dec
std
loope
adc
cmp
mov
daa
mov
and
lret
xor
xor
pop
lds
pop
ret
xchg
inc
rclb
fcom
dec
fs
ret
or
or
xor
movsb
dec
lds
xor
mov
sbb
lods
mov
popa
pop
not
lods
nop
xchg
repnz
jb
add
xchg
popa
lret
jne
emms
cld
or
cltd
hlt
xor
inc
mov
pop
lock
push
add
push
push
pop
xchg
insb
sbb
jecxz
or
or
out
mov
adc
shrb
xor
add
sub
xor
stc
jecxz
data16
cmp
arpl
adc
mov
push
mov
xor
or
jb
fwait
pop
scas
pop
push
lahf
mov
repz
push
ljmp
jns
sti
mov
das
mov
jb
push
lock
stos
jecxz
pop
mov
addr16
mov
push
stc
mov
in
movsb
rorl
push
jne
cld
inc
mov
rcrb
enter
movsb
xor
add
xchg
and
arpl
lock
or
dec
stos
sub
mov
popf
jle
ja
in
mov
pusha
push
and
ret
push
mov
jl
jae
mov
push
add
aaa
mov
loop
push
fcmove
fs
xchg
sbbb
sbb
and
imul
push
scas
xchg
push
cmp
mov
fdivrs
addr16
dec
jl
or
mov
scas
aaa
dec
jmp
add
jg
int3
sub
pop
add
addr16
faddp
adc
scas
add
push
and
pop
cmp
xchg
and
bnd
push
in
dec
pop
jbe
pop
inc
jge
imull
sbb
out
daa
cmp
cmp
popa
pop
jno
ret
mov
xchg
lds
cmp
mov
int
stc
lahf
rorb
push
add
mov
inc
aam
cld
cmpsb
icebp
int3
sbb
jno
or
ret
pop
lods
mov
out
out
loope
movb
xchg
jg
ds
hlt
movsl
adc
sub
cmpb
mov
add
in
xor
push
not
rcll
jnp
adc
push
js
xor
pop
mov
cwtl
mov
ss
fsubl
aad
outsb
shrb
dec
sbb
arpl
popf
xorl
mov
sahf
and
inc
push
sub
xor
dec
sarb
clc
jo
jl
dec
sarl
mov
mov
das
cmpsb
sbb
fisubrs
mov
pop
lret
nop
loop
jno
stc
ficoms
cmc
and
ss
in
add
jns
fsubrs
ret
out
pop
mov
xor
nop
cld
cmp
xor
or
sub
adc
sbb
fdivs
add
out
adc
leave
nop
imul
add
pop
sub
pop
and
and
xlat
fwait
aas
scas
sub
lea
in
inc
rol
fsubrl
lods
int
gs
pushf
lcall
xor
inc
sbb
roll
repz
lahf
pop
xchg
in
or
cmp
rol
mov
pop
jge
sub
fstpl
inc
outsb
cmp
in
xlat
adc
push
and
adc
je
xchg
int
rorl
into
or
lea
loopne
mov
pop
fisttpl
add
xor
pop
mov
loopne
inc
pop
repnz
push
mov
sub
jb
cmp
rcll
xor
mov
add
cmp
sub
icebp
incb
xchg
lret
lahf
data16
sub
lret
mov
pop
loop
mov
push
sub
xchg
aam
adc
es
xchg
insl
gs
out
shrb
ljmp
aam
sti
pop
mov
push
lahf
lock
ljmp
add
sub
test
test
push
xor
shlb
ljmp
xor
pop
jl
mov
out
icebp
jmp
push
push
outsb
test
push
xor
cli
or
adc
mov
sub
dec
lret
test
sbb
jnp
inc
dec
negb
popl
fisubrl
fwait
inc
iret
fwait
push
inc
es
add
push
or
out
leave
fisubs
mov
dec
in
negb
xchg
mov
pop
dec
cmpsl
addr16
shll
mov
push
cmpb
js
xchg
cltd
jne
pop
push
inc
or
cli
fwait
jmp
in
jmp
sbbl
out
orl
cmp
stos
pushf
shll
add
jne
neg
xchg
jnp
xchg
cmp
loopne
in
jno
or
int
sbb
cmpsb
mov
out
mov
mov
mov
jae
popf
movd
mov
popa
lea
negb
xchg
xlat
aas
pusha
sbb
push
addr16
aaa
scas
ljmp
adc
stos
mov
adcl
pop
arpl
jns
mov
dec
or
push
sub
aaa
or
adc
push
int3
imul
xor
fimuls
out
lds
daa
shrb
scas
loope
fsubl
xchg
mov
cmp
mov
divb
adc
sbb
imul
jl
ss
push
sub
push
pop
push
adc
push
stos
inc
jo
push
aam
addr16
add
cmp
pop
xor
pop
jmp
pop
push
pop
pop
loope
jle
sub
repnz
sarl
push
mov
and
popa
jnp
add
cmp
mov
add
sbb
xchg
ja
pop
cmp
sub
pop
and
push
lea
add
outsb
and
mov
pop
sbb
jg
pushf
or
add
andb
fidivrs
int
daa
lret
xlat
aaa
neg
insl
mov
rcll
mov
jmp
pop
sub
sahf
adc
roll
xchg
outsl
cmp
loop
ss
xchg
add
andb
adc
enter
or
es
out
scas
and
mov
stc
xor
mov
mov
xchg
inc
adc
mull
cmc
lahf
jb
xor
pop
mov
pop
out
adc
cmp
loope
adc
lods
fwait
add
pop
jns
xor
add
fisubl
sub
add
stos
addr16
sti
mov
leave
gs
loopne
lcall
xor
imul
jns
xchg
and
call
sbb
cmpsb
xchg
clc
and
nop
pop
xlat
add
adc
mov
shrl
aam
aad
icebp
fwait
nop
mov
sarl
movsl
xchg
dec
sbb
je
in
shl
loopne
sub
or
fwait
imul
fsubrl
ljmp
sbbl
enter
sub
inc
popl
jno
das
shrl
sub
and
ss
jecxz
mov
out
repz
das
mov
in
cmp
mov
aad
repz
jns
dec
lret
push
fistpll
adc
shlb
aad
add
sarb
xchg
push
aam
adc
mov
insl
dec
mov
xchg
or
ljmp
insb
lods
data16
mov
mov
andb
mov
push
in
mov
test
mov
in
adcb
movsb
fisttpll
clc
xchg
dec
adc
pusha
xchg
sub
sarl
mov
out
push
in
push
xchg
xor
call
ljmp
xor
pusha
sbb
daa
adc
test
xchg
mov
fsubrs
cmp
enter
or
or
push
in
repz
and
add
test
cld
bound
or
push
in
mov
divl
stc
xchg
lcall
jmp
jp
jne
mov
jns
mov
lret
dec
imul
jb
or
sub
xchg
rolb
movsl
xchg
mov
inc
inc
out
mov
sub
lcall
stos
xsha256
cmpsb
and
mov
sbb
jb
jle
cmp
repnz
or
dec
iret
sub
test
pop
adc
jae
rolb
mov
push
mov
loopne
jbe
xor
xchg
mov
imul
scas
dec
movsl
cmpsl
push
or
adc
xor
mov
aam
xchg
leave
push
gs
cltd
js
arpl
addl
sahf
or
xor
mov
push
mov
add
sti
int3
push
jno
pop
popa
lods
push
lods
add
rolb
scas
rolb
and
push
cmp
inc
jp
or
xor
mov
aad
add
sbb
in
daa
cmp
cmp
testl
movb
aad
jo
sub
lods
push
cmpsl
xor
test
lret
mov
inc
repnz
sahf
in
aas
pop
push
enter
pop
sub
in
push
loope
inc
add
ja
cmp
fcomps
ds
jmp
movsl
and
and
lods
xor
sbbb
sbb
ljmp
popf
xchg
pop
pop
dec
enter
cltd
js
repnz
pop
mov
leave
jl
in
pop
fdivr
cmp
mov
adc
adc
mov
sbb
mov
xchg
xor
mov
push
fs
jnp
inc
and
cltd
scas
lret
mov
stos
push
jne
xor
sbbl
jo
sahf
mov
push
test
cs
scas
aad
outsl
sbb
ss
xor
dec
push
mov
adc
push
adc
loope
arpl
pop
mov
mov
fcomp
cmp
enter
adc
cmc
adc
pop
js
hlt
adc
mov
add
in
data16
repnz
sbb
xor
sbb
xor
mov
push
loop
sti
cmp
mov
xacquire
gs
mov
loopne
stos
cmc
dec
fadd
inc
inc
cltd
outsl
fldcw
cmp
les
pop
xchg
push
sbb
loope
in
lahf
pop
mov
mov
mov
jmp
lret
mov
push
sub
xchg
call
inc
sub
dec
xchg
pop
lds
shl
out
daa
pop
adc
lea
test
ds
xor
jmp
xorl
div
shl
ljmp
inc
adc
das
mov
popa
mov
lcall
shll
or
sub
jl
xor
cmpsl
aaa
cld
fdivrl
lods
cld
movsb
mov
mov
xor
add
xor
jb
adc
sub
xchg
aam
insb
lods
ret
mov
sub
insl
xor
xchg
dec
dec
mov
popa
dec
xchg
or
imul
and
and
add
cmp
test
outsb
mov
sarb
push
mov
ds
bound
rorl
testb
sarl
out
mov
sub
and
mov
or
add
repz
pop
xor
inc
scas
mov
xor
cwtl
inc
add
stc
aad
dec
fadd
xchg
inc
divl
or
xchg
fstpl
mov
stos
add
cmp
cli
out
xchg
mov
mov
or
std
dec
in
lahf
mov
mov
adc
js
mov
xchg
jp
mov
sub
dec
repnz
mov
popa
ss
dec
sub
dec
dec
shll
pop
dec
push
xchg
movsl
inc
xchg
jmp
subl
jge
test
jns
or
xchg
testl
stos
subb
xor
test
add
xchg
adc
jle
popl
pop
repnz
cmpsl
lcall
int3
mov
pop
inc
std
mov
jae
mov
dec
pop
ficomps
incb
inc
pop
bound
jecxz
adcb
xor
test
stos
mov
sti
mov
mov
daa
sub
leave
int3
inc
and
in
xchg
mov
sub
adc
cli
push
mov
mov
std
xchg
int3
inc
jo
pop
nop
push
scas
ficoms
pop
lds
jnp
bound
scas
lahf
repnz
and
movups
pop
mov
jge
in
sbb
jmp
cmp
xchg
js
cwtl
dec
icebp
jl
or
push
in
sub
pushf
sbb
insl
lahf
das
sbb
push
jp
mov
ret
inc
loopne
xchg
aaa
pop
inc
adcl
das
in
es
mov
mov
imul
sub
cmp
jns
movsl
sub
outsb
or
pop
rorb
xor
sbb
insb
sahf
cmp
sbb
push
pop
xchg
js
xor
pop
pop
sbb
jo
daa
push
cmp
fsubl
out
leave
outsb
jmp
cmp
adc
jg
push
jb
dec
imul
and
js
int
xchg
mov
negl
ss
dec
roll
mov
or
mov
fdivrl
or
insl
outsl
test
inc
stc
add
fs
push
movlps
or
ss
sub
fcomps
sub
out
pop
jl
outsb
xor
cmp
shrl
or
lcall
sbb
xchg
and
adc
outsl
dec
adc
test
lds
mov
mov
xchg
call
pop
ds
sub
cwtl
mov
xorl
and
adc
pop
and
je
in
cmp
inc
fldenv
iret
les
sbb
icebp
cmp
cmp
dec
push
dec
aaa
pop
cmp
cmp
pushf
jb
nop
jmp
xor
aad
out
jle
push
mov
jb
shlb
mov
xchg
adc
call
push
flds
enter
aaa
jge
pop
mov
inc
mov
stos
jmp
mov
cmpb
mov
adc
addl
std
jge
out
jmp
push
cmpsl
cmp
pop
rcll
cmpl
cld
iret
add
lret
in
sbb
inc
mov
clc
outsl
lock
push
shl
mov
sub
idivl
ret
dec
jge
es
add
mov
loope
mov
sub
js
mov
arpl
sbb
cmp
sbb
fistpl
and
mov
sub
jnp
cltd
shrb
pop
mov
sti
adcb
fstpl
lcall
xchg
shll
repz
jge
nop
stos
ret
out
sbb
cmpsb
xchg
shrb
jmp
xorl
cli
push
or
jmp
pop
mov
xor
sbb
test
jns
ja
xchg
out
dec
iret
stos
sbb
jae
or
repnz
fwait
ror
je
sub
push
add
push
nop
jbe
callw
inc
push
xchg
in
repnz
xchg
xor
or
mov
jp
pop
addr16
cmpsl
cmp
mov
mov
sub
mov
test
sbb
das
xor
jne
cmp
ret
fbld
fldcw
jmp
dec
scas
adc
cld
decl
or
push
ja
cmc
inc
and
push
insb
aaa
pop
or
jp
jle
aam
in
mov
pusha
inc
dec
cltd
iret
ljmp
pop
jle
sbb
xchg
clc
add
push
jo
cltd
mov
ficoms
int3
ficoml
test
sbb
loop
imul
jno
repnz
dec
adc
dec
xor
jp
pop
leave
inc
rorb
xchg
mov
xchg
in
sub
ja
jmp
or
js
add
fs
mov
adc
data16
scas
jle
add
dec
stos
pop
cmp
sbb
push
sub
jbe
call
cmp
dec
adc
daa
ss
mov
jno
mov
xor
test
xor
cmp
rcrl
dec
cld
inc
test
popa
or
inc
adc
ss
or
leave
pop
pop
test
ret
jns
loope
aas
test
ja
dec
inc
cltd
ds
sti
adc
xor
mov
addb
add
mov
xor
jmp
mov
scas
mov
js
add
lcall
xchg
fcoml
lock
shr
ss
cli
mov
mov
mov
mov
push
out
loop
mov
push
ss
jo
xor
sub
xchg
out
pop
out
lret
rcr
aaa
mov
xchg
sub
jmp
test
test
aas
aad
in
int3
outsl
adcb
mov
sub
call
pop
jg
ss
cmp
push
lahf
add
cli
and
inc
cmp
scas
sub
loopne
sbb
mov
cmp
lock
dec
pop
mov
xchg
adc
xchg
sub
adc
out
mov
push
jg
ds
out
xchg
mov
lock
mov
in
push
sub
cmp
repnz
pusha
mov
invd
addr16
lcall
fstps
cmpsb
mov
mov
xchg
lock
les
push
mov
xchg
std
fcoms
mov
ficomps
pop
cmp
lds
mov
adc
and
aas
cmpb
jb
jg
jp
aad
and
push
test
push
jns
lea
mov
mov
int3
inc
mov
add
sbbl
adc
push
std
xchg
pop
inc
jae
inc
cmp
pushf
inc
mov
das
outsb
inc
and
mov
fs
push
rcl
inc
and
mov
aaa
std
and
mov
cmpsb
aaa
lcall
dec
data16
pop
cli
push
jae
pop
loopne
mov
jp
lock
in
pop
imul
ss
inc
push
mov
xlat
mov
push
insl
add
lahf
xchg
jno
ljmp
adc
xchg
fnstcw
mov
or
push
pushl
cltd
pop
movsb
imul
dec
push
inc
sub
rorl
jecxz
xchg
test
sbb
cmp
sarl
mov
stos
mov
mov
jge
xchg
pop
sbb
push
fcmove
cmp
dec
jnp
xor
mov
xchg
mov
aaa
adc
test
pop
add
ja
cmp
inc
xchg
inc
and
and
fwait
add
xchg
push
into
pop
adc
jb
and
fsubs
jns
xor
test
mov
jno
mov
xor
dec
or
mov
mov
pop
mov
or
dec
adc
add
sbb
sbb
test
arpl
push
sub
sbbl
lods
sub
mov
es
aaa
sti
loope
push
mov
insb
mov
mov
or
push
imul
iret
dec
adc
ret
pop
mov
int3
inc
mov
jge
push
rclb
lods
popf
stos
out
je
insl
inc
pop
inc
call
xchg
xor
cmp
fs
imul
push
push
cmp
in
push
daa
add
int
jne
mov
idivl
inc
cwtl
loop
or
repnz
or
jge
add
inc
or
pop
ljmp
xchg
or
mov
scas
pop
pop
daa
and
jb
cmp
movsb
test
bound
jbe
insl
cmpsl
jge
js
sbb
mov
cmp
xchg
imul
mov
dec
adc
push
stos
sbb
jo
pushf
rcrb
and
add
inc
lahf
xchg
fsubs
hlt
sub
enter
pop
out
stos
push
push
cmpsb
loope
jb
sub
jmp
mov
jp
cmp
mov
movsb
pop
jecxz
subl
sbb
cmp
mov
push
mov
pop
sbb
fsqrt
push
jmp
gs
test
fmul
adc
addr16
jg
add
inc
into
je
cmp
pop
mov
push
stc
and
stos
pop
int
xchg
cwtl
sub
insb
lret
lret
or
jo
adc
ficoms
sahf
lahf
push
into
test
aaa
aaa
outsl
mov
out
and
stc
jno
ljmp
mov
inc
xchg
idivl
adc
int3
cli
push
mov
xor
pusha
cmp
pop
inc
or
add
sbbl
cmc
mov
xor
pop
aad
inc
adc
lea
add
mov
shlw
lods
into
insl
mov
or
sub
es
sub
jo
mov
push
dec
arpl
inc
inc
sar
pop
lds
gs
lret
aad
stos
push
sub
rcll
shrb
or
movsl
add
xchg
mov
insl
sbb
xchg
dec
xor
sbb
imul
pop
adc
mov
gs
dec
push
sub
mov
nop
push
xlat
cmp
and
mov
in
xor
notb
je
xchg
jecxz
push
fadd
sbb
and
scas
xchg
fwait
mov
jb
mov
jecxz
xor
sub
inc
pop
call
int
inc
cmpsb
xor
inc
mov
mov
aam
rcrl
adc
repz
inc
std
lret
in
cwtl
popa
cmc
das
cmpsl
xor
lock
xor
cld
and
push
add
inc
sub
pop
jge
inc
rorb
out
aam
imul
es
leave
gs
call
rolb
dec
imul
pop
data16
xchg
jns
lods
adc
scas
mov
mov
mov
cmpxchg
push
add
inc
movsb
test
sbb
fucomp
sub
clc
adcb
sbb
js
pop
rcll
stos
mov
adc
dec
sub
push
mov
jbe
call
jp,pn
hlt
add
xor
jge
mov
cmp
add
ret
test
dec
sbb
mov
sub
loop
or
sub
fwait
xor
add
jno
and
lea
bound
mov
ret
jmp
jno
outsl
xchg
shrl
test
xchg
mov
pop
addr16
jae
jp
mov
lret
mov
xchg
test
jne
sbb
inc
repz
xchg
push
mov
test
push
out
inc
xchg
sub
xchg
lcall
testl
insb
or
xchg
or
cmp
js
mov
test
sub
add
loopne
inc
stos
scas
dec
jae
aas
in
push
xchg
and
popf
rolb
inc
fdivr
pop
popa
xchg
mov
jge
push
mov
shrb
andb
mov
outsl
repnz
xor
adc
xchg
inc
fwait
dec
xor
insl
aam
aaa
mov
or
ss
add
rorb
pop
sbb
stc
lret
lds
pmaxsw
mov
xchg
scas
cmp
mov
cmp
push
lds
int3
out
adc
or
sbb
jp
cmp
jmp
sbb
jg
dec
adcb
xor
out
ds
mov
pop
push
repz
sub
divl
pushf
cmpsb
add
frstpm(287
dec
enter
pop
es
cwtl
in
loope
leave
jns
dec
aad
cmp
movsl
aas
lds
loopne
pop
subb
incb
adc
gs
fnstcw
arpl
pop
pushf
fisubrl
mov
fsubrl
jmp
outsb
adc
add
mov
push
xchg
scas
push
call
and
popa
xor
cmp
and
add
sbb
sub
std
notl
cltd
mov
pushf
cld
sbb
inc
sahf
inc
cli
aad
or
adc
xchg
imulb
mov
stc
sub
xchg
fs
adc
xchg
add
int
sub
adc
insb
cli
xchg
xor
pop
mov
out
sbb
mov
scas
mov
xor
and
adc
jp
imul
clc
add
loope
inc
mov
jl
add
ljmp
in
mov
in
ret
sti
notb
into
gs
lcall
pop
push
push
flds
sar
mov
mov
xchg
jbe
daa
sbb
int
sbb
fwait
sub
lret
adc
mov
pushf
jae
mov
cs
cmp
mov
mov
imul
fmuls
in
cmp
jecxz
nop
add
dec
xchg
sub
mov
popf
call
orl
dec
sbbl
sub
rcrl
das
sub
shlb
jbe
ds
dec
sub
outsb
sbb
divb
iret
sbb
jb
and
xor
btr
xor
or
clc
cld
push
mov
lret
cmp
ja
push
stos
pushf
xlat
jecxz
pushf
adc
and
in
aam
ret
cmc
or
lds
fs
iret
testl
ljmp
jb
jge
xchg
lods
mov
add
adc
and
jne
adc
mov
or
jle
por
clc
mov
mov
adc
imul
pop
jle
pop
stos
jbe
out
inc
sti
xchg
xchg
mov
mov
xchg
divb
aas
xchg
loope
imul
sahf
mov
adc
cmp
or
ja
in
push
dec
test
adc
push
cltd
or
add
fwait
pusha
stos
mov
adc
scas
add
test
fsubr
add
fisubs
notb
jns
clc
ftst
cld
loope
xchg
and
mov
sahf
pushf
mov
stos
repnz
xchg
pop
dec
jp
int
mov
dec
aas
mov
cmc
mov
pop
jne
jl
mov
cmc
dec
filds
inc
sub
xor
xchg
scas
mov
out
xchg
jbe
sub
arpl
sbb
insl
stos
dec
dec
cmpsb
and
test
jnp
inc
dec
jle
pop
pop
in
pop
cwtl
pusha
adc
xlat
iret
pop
into
mov
sbb
aad
and
mov
push
jae
inc
or
pop
mov
xchg
mov
pop
cmp
fisubrl
or
and
push
add
push
outsl
dec
adc
mov
bnd
pop
leave
test
pop
hlt
adc
jns
mov
aas
inc
sahf
sub
push
test
or
mov
popa
int3
in
mov
pop
dec
pop
fcmovnu
outsb
lds
mov
scas
sbb
mov
cmp
scas
movsb
mov
jnp
jbe
aam
jge
subb
daa
mov
xor
lret
pop
pop
jno
rep
jl
mov
call
xor
dec
cmc
pop
lahf
stos
pop
ret
mov
test
ret
inc
mov
sub
ret
enter
pop
add
push
sub
loope
inc
clc
sub
jle
cmp
sarl
cmp
movsl
inc
pop
fsubl
ficoml
aas
es
cmpb
add
inc
fdivl
test
xchg
sub
pop
and
push
pop
sbb
lcall
cltd
fcoml
mov
outsb
jne
mov
jge
jmp
xlat
scas
fwait
mov
sahf
vphsubdq
mov
jbe
and
adc
push
aas
lods
test
cmpsl
mov
notl
lret
movsb
rcrl
adc
js
xor
popl
xorb
enter
sub
fisttps
adc
loop
leave
xor
mov
cmp
lret
cmp
jo,pt
sub
xor
xor
xchg
sbb
cmp
adc
and
imul
out
mov
pushf
mov
mov
mov
push
sub
sbb
jle
sub
movsl
sbb
mov
int
loopne
sub
dec
mov
inc
mov
cld
mov
repz
and
xchg
cmp
xchg
cmp
sbb
sbb
pop
or
adc
enter
jp
cs
scas
aad
pushf
pop
nop
aam
sarl
std
movsl
jb
xlat
std
dec
in
std
je
loop
jecxz
adc
pop
in
lea
pop
call
fs
mov
andl
cmp
jecxz
xor
movsb
rolb
call
or
mov
sub
sbb
sarl
jbe
std
sbb
test
cmpsl
xor
mov
fbstp
int
jnp
jo
test
pop
mov
xchg
mov
pop
test
notl
mov
das
push
call
aam
or
es
and
dec
popf
cmp
xchg
test
dec
popa
mov
add
xor
lock
lret
mov
outsl
xchg
add
mov
das
test
inc
sbb
or
fnsave
nop
pop
clc
imulb
sbb
xchg
dec
rol
andb
jle
add
cmpsb
fldl
xchg
fdivrl
imul
xor
stos
jmp
jmp
addr16
dec
fwait
ss
ja
mov
jnp
ljmp
fwait
daa
xchg
push
mov
out
push
sar
ret
or
loop
bound
rcr
in
test
xchg
jno
lea
jecxz
mov
data16
addr16
dec
xchg
jp
xchg
stos
mov
inc
or
mov
dec
mov
inc
pop
mov
mov
add
cmp
jmp
out
push
subl
hlt
out
insl
stos
rcrl
movsl
mov
loope
std
mov
jge
imul
pusha
scas
lret
sahf
iret
data16
pop
pop
push
ja
shll
sbb
mov
inc
fisubl
push
xchg
cmp
cmp
loope
imul
scas
lahf
orl
jecxz
adc
cmp
jb
leave
pop
es
hlt
pop
push
arpl
iret
test
or
arpl
ret
or
arpl
int3
fcom
gs
jnp
pop
fidivrs
dec
lds
mov
scas
cli
cwtl
add
xchg
add
cmp
add
push
gs
divb
mov
jge
fdivl
daa
xor
or
jno
clc
mov
push
dec
pusha
mov
push
push
imul
mov
mov
test
lea
cmpsb
or
test
test
xchg
mov
movsb
and
push
pop
iret
loope
jecxz
sub
cld
into
cmp
inc
iret
ds
and
dec
fnstsw
jne
ds
sahf
or
sbb
push
add
lds
mov
jp
dec
mov
stos
pop
lcall
push
out
pop
js
incb
ljmp
mov
rcrb
insb
jg
or
mov
push
ret
or
inc
pop
push
int
inc
jo
and
lret
inc
xor
clc
jg
cmpsl
das
les
push
adc
adcb
outsl
push
jp
loop
dec
sub
fs
push
cld
adc
xor
fadds
push
out
jns
cli
in
sti
cmc
xor
imul
pushf
ljmp
adc
pop
xor
adc
mov
add
inc
add
mov
fsubrs
xlat
xchg
loope
sub
lea
cwtl
and
sti
push
jge
inc
xchg
push
outsl
fs
jnp
dec
push
jecxz
inc
mov
and
or
xchg
cld
mov
sbb
inc
arpl
cltd
scas
in
pop
mov
lret
loop
leave
das
xor
cs
lods
xor
xor
nop
scas
jo
aas
cltd
sub
lcall
add
nop
and
enter
mov
mov
jg
mov
ss
into
xlat
push
adc
pushf
inc
pop
or
inc
negl
xor
ljmp
mov
nop
cmp
inc
idivb
dec
cwtl
xchg
cmpsb
pushf
cmpsl
xor
xchg
mov
mov
adc
cmpsb
cmpsl
jg
pop
lcall
loop
shl
push
insb
sub
fcmovb
push
rolb
mov
inc
aam
pop
mov
lret
jl
insl
popf
stc
les
aad
xchg
ret
out
ljmp
movsl
lods
push
push
mov
lods
push
or
roll
mov
into
jl
add
lret
sti
cltd
jecxz
popa
test
ret
dec
push
dec
aad
fstpl
cli
clc
xor
xchg
sti
sbb
leave
push
movsl
rcrl
ds
pop
aam
push
stos
insl
or
out
or
ja
inc
xor
inc
fnstcw
xor
add
pop
cmc
mov
mov
inc
jb
add
test
push
push
jae
sbb
inc
adcl
cwtl
push
pop
lret
std
add
ficomps
out
rcrl
jns
dec
push
adc
xchg
rorb
lods
lcall
and
jp
adc
mov
movsl
mov
roll
insl
jne
insl
scas
mov
xchg
jae
rol
xchg
xchg
add
das
int3
stos
xchg
inc
fimull
adc
mov
fmuls
ja
leave
push
xor
sub
mov
lea
jle
jns
in
xor
mov
lds
test
mov
int3
xor
fists
fdivrp
fistps
pusha
sbb
inc
sub
adc
jb
sbb
mov
imul
scas
add
push
mov
pusha
mov
sbb
leave
xchg
fstps
cmpsb
cmp
sarl
roll
xor
push
add
fwait
add
int
pop
stos
aaa
mov
lds
enter
pop
xchg
and
popf
mov
movsb
aad
sahf
push
mov
xor
or
xchg
sbb
lock
daa
xor
shll
mov
int
iret
insl
stos
push
aaa
sbb
out
jo
sahf
xchg
lahf
jmp
xchg
push
pop
and
inc
fcmovne
sub
mov
cs
pop
jecxz
mov
loope
cmpsb
sub
mov
cmp
shlb
and
out
fwait
std
lock
and
aaa
sbb
pop
add
fwait
mov
inc
pop
sub
scas
in
pop
jno
xchg
js
leave
cmpsb
pop
sbb
repz
sub
test
int3
lea
push
pop
adc
xor
std
jg
push
mov
aas
inc
mov
jp
pop
jmp
incb
inc
jle
int
inc
and
not
stos
inc
lret
lahf
ror
daa
mov
shl
sahf
sub
subb
outsl
xor
loop
mov
stc
dec
mov
adc
mov
lret
sahf
fdivr
loop
out
out
int3
cli
and
add
js
xor
insb
cmp
or
jno
movhps
cmc
xlat
push
cwtl
pop
push
js
adc
jns
adc
jmp
add
sub
data16
test
push
xor
shlb
lret
sub
cltd
and
add
sti
add
jnp
out
sti
gs
stc
loopne
dec
jge
jne
inc
inc
enter
lods
pop
pop
shll
mov
fistl
xlat
sbb
mov
pushf
je
jmp
cs
not
js
push
nop
mov
aas
popf
cmp
jb
xchg
vprotb
dec
jg
jecxz
call
add
call
loop
and
push
sbb
push
fildl
stos
pop
je
call
inc
adc
shrb
add
mov
fwait
cmpsb
aam
sbb
jecxz
jmp
cmp
addr16
test
xor
int3
icebp
lea
adc
xchg
dec
mov
nop
jno
test
push
ret
test
rcl
pop
imull
or
aam
cld
inc
ret
mov
dec
shrb
push
mov
add
xchg
add
xchg
ljmp
cmpsb
lods
mov
out
cmp
rclb
aaa
and
pop
ror
sub
add
cltd
sbb
sbb
mov
test
fldl
in
xchg
push
sbb
shll
addr16
jg
fisubrs
insb
js
xchg
push
xchg
push
and
divl
cmp
lods
or
jecxz
xor
mov
add
inc
fcmovbe
aad
xor
icebp
dec
add
loope
adc
push
fwait
in
insl
stos
push
std
leave
and
stc
mov
mov
jns
outsb
in
in
pop
mov
inc
je
xor
cmp
dec
addr16
cmp
jp
aas
xchg
mov
cmpsl
ja
jl
dec
mov
decb
dec
cmp
cld
stos
mov
sbbl
jmp
adc
rolb
cmp
sub
jb
push
jb
xchg
stos
cmpsl
mov
insb
mov
lock
jbe
in
loop
pusha
in
pop
iret
and
in
ret
pop
enter
xlat
or
jae
out
jbe
mov
fwait
and
or
enter
out
fstps
pop
sub
pusha
adc
push
pushf
cmc
pop
adc
sbb
insb
lods
pop
repnz
popa
mov
hlt
icebp
pop
add
out
inc
cmpsl
jl
or
pop
idiv
aaa
ret
or
test
scas
cwtl
in
fldln2
ljmp
popf
push
rcrb
and
mov
lahf
cmp
push
ja
and
jbe
cmp
mov
stos
jb
daa
xor
cmp
push
sbb
jns
sub
and
call
pop
nop
out
or
push
aas
aas
das
test
and
fiadds
add
cmpsb
movsbl
enter
pop
and
fsub
clc
ret
jb
cmp
mov
bound
movsl
pop
test
and
xor
jae
mov
pusha
add
lds
adc
pop
dec
pop
cwtl
xchg
addr16
adc
pop
cwtl
push
aad
pushf
sbb
fcoml
sub
outsb
sahf
pop
sti
adc
push
mov
mov
jne
loope
scas
mov
and
and
pop
push
dec
adc
jbe
sbb
sub
cli
cmp
mov
cmp
test
jecxz
xchg
add
push
jl
add
stc
add
pop
fs
jb
aaa
movl
test
fcomp
mov
jmp
pop
xor
test
or
outsl
into
bnd
cmc
sahf
sub
jo
and
push
push
enter
lahf
adc
dec
inc
add
lcall
out
add
adc
test
popa
out
mov
outsb
test
js
decb
xchg
dec
gs
xchg
loopne
call
dec
aam
sub
jmp
sbb
fdivl
xchg
subb
add
mov
pop
and
mov
xchg
pushf
lds
jp
cs
ss
mov
nop
mov
jb
mov
lock
lret
and
cmp
sub
lea
shrl
jo
mov
inc
push
dec
movsb
insl
cmpsb
pop
pop
pop
imul
inc
sub
rcr
mov
push
inc
xor
jl
shrl
and
std
push
in
cwtl
or
cmpsl
das
fs
mov
fs
cld
cld
out
lret
cmc
mov
mov
insl
xchg
mov
mov
cmp
sbb
jnp
add
pop
aam
repz
xor
xlat
rorl
push
dec
mov
and
inc
cmp
popa
add
sub
mov
repz
fisttps
mov
mov
add
jb
cltd
push
jmp
inc
mov
mov
push
rol
scas
mov
xchg
dec
bound
das
cmp
rol
and
stos
dec
mov
out
iret
xor
mov
cmc
push
cld
pop
pop
incl
mov
insl
or
cs
sbb
or
lods
xchg
stos
dec
rclb
pushf
test
in
mov
inc
in
je
nop
inc
scas
outsb
lret
mov
fwait
sbb
mov
add
adc
lock
jg
bound
cmp
xor
in
fs
pop
data16
fdivrs
into
addr16
mull
insl
and
mov
mov
and
mov
jg
aas
orl
decl
scas
xchg
cmp
testb
popf
lods
xor
out
pop
jp
lds
push
push
mov
lcall
cli
outsb
insb
and
sarl
pop
jle
push
adc
aas
stos
iret
subl
lods
push
pop
call
mov
jae
add
push
and
iret
push
mov
push
push
rcr
jnp
add
jne
lods
imul
popa
scas
enter
jecxz
into
adc
movsb
push
mov
mov
sub
hlt
cmp
xchg
arpl
fnstenv
or
aam
lahf
aaa
cmp
push
add
aaa
in
pop
or
fisubrs
adc
test
lods
scas
xchg
stc
xor
dec
push
cmp
pusha
outsb
push
push
fdivrl
jge
inc
push
sbb
mov
das
arpl
jno
jl
jl
dec
lods
fisttpl
std
in
xor
mov
repz
daa
loop
push
adc
add
out
or
cli
cmpsb
xchg
mov
enter
pop
popa
mov
loopew
cltd
xchg
sub
insb
fnstsw
push
rcrl
test
cmc
movsl
bound
and
mov
pop
mov
in
push
pop
add
inc
adc
in
jne
xor
ficomps
push
mov
pop
pop
push
ja
or
in
repz
int
call
xchg
inc
ss
outsb
add
lods
adc
jmp
xor
jns
out
stos
sbb
adc
ja
add
shrb
xchg
mov
lret
js
cli
sbb
je
aad
xor
aam
jno
jbe
stos
leave
bound
out
fnsave
stc
mov
xor
xchg
out
ss
ljmp
jo
out
addr16
xchg
test
lods
jbe
aad
mov
xor
out
pop
pop
icebp
adc
into
pop
imul
add
add
jae
lods
cmp
stos
mov
bnd
inc
shrl
aam
nop
mov
fnstenv
sti
popa
pushf
js
sub
subl
xor
push
fstps
push
insb
out
xor
aaa
imul
cmp
mov
push
dec
pop
pop
aad
lods
adc
cmp
pushf
lret
jmp
add
jp,pn
not
push
mov
nop
inc
mov
fidivs
sbb
dec
rolb
jecxz
int3
cwtl
sub
movsb
std
pop
cmc
call
pusha
das
push
mov
sbb
dec
testb
lahf
out
cmp
xchg
roll
jge
dec
mov
das
xchg
aad
or
ja
stc
aam
testb
pop
cwtl
ret
mov
cs
btr
stos
icebp
cmp
cld
daa
jle
fs
orl
arpl
pop
aaa
ja
sarb
out
notl
into
aam
cmp
inc
es
inc
insl
push
stos
cltd
dec
mov
test
subb
ljmp
test
mov
push
insl
mov
mov
jmp
inc
add
adc
cltd
mov
test
rorl
rcl
push
xchg
ljmp
loop
fwait
xchg
aad
loop
xor
push
dec
sbb
ds
cmp
es
xor
cld
xchg
clc
int
push
xlat
or
jmp
lods
mov
xor
roll
xchg
dec
aaa
int3
push
ja
and
dec
addr16
inc
inc
nop
or
mov
fwait
dec
mov
je
das
roll
cmpsb
lods
jns
fwait
xchg
in
push
imul
sti
dec
mov
push
jo
mov
ret
jp
mov
mov
out
dec
inc
lock
dec
inc
lcall
mov
add
adc
dec
xchg
cmpsb
jge
addl
sub
push
sbb
and
popa
inc
insb
lcall
aas
dec
xor
xchg
pusha
sbb
in
ja
cli
pop
ss
sbb
fdivl
pop
mov
daa
out
popf
mov
sub
inc
es
mov
fstps
and
imul
or
sub
xchg
adc
or
sti
lret
push
hlt
xchg
ja
lods
dec
inc
or
dec
jg
aaa
inc
add
test
add
int3
test
push
or
xchg
rclb
scas
jbe
daa
and
sahf
add
gs
lds
fsubrp
jbe
ret
mov
cwtl
sbb
fidivs
cs
cmp
je
jl
les
dec
sbb
push
push
loopne
jp
fwait
sti
jo
adc
add
dec
push
test
mov
cmp
adc
out
dec
enter
pop
mov
add
adc
cmp
xchg
movsl
imul
popf
sbbb
sbb
nop
xor
test
pop
out
or
fs
xchg
inc
cld
lcall
pushf
fsubrl
xchg
shrl
jbe
adc
in
bnd
mov
xchg
mov
mov
and
nop
outsb
push
dec
lahf
push
int
lahf
stos
sub
add
testl
inc
adc
xchg
into
cld
mov
xchg
sbb
imul
and
cmpb
loop
sbb
stc
jb
mov
jns
mov
aad
mov
cmp
das
xchg
cmpsb
out
imul
cmp
addr16
or
jne
mov
xlat
in
enter
scas
lock
cli
jp
imul
or
sbb
push
rcrl
pop
lcall
xlat
adc
mov
inc
ss
sti
adc
mov
push
dec
xchg
pushf
repnz
add
and
push
sarb
push
in
xchg
or
mov
cmp
dec
xchg
loopne
pop
mov
call
jmp
dec
in
fisttpll
sub
jp
lock
mov
dec
aaa
stc
fbstp
xlat
jecxz
movsb
lock
cs
dec
call
pop
jb
mov
js
pop
sbb
into
mov
pop
mov
inc
je
jmp
arpl
xchg
das
data16
mov
shlb
mov
stc
mov
std
pop
mov
push
mov
adc
cld
push
js
lret
rcll
aas
mov
cwtl
push
lock
fs
dec
outsb
imul
fdivrl
ret
dec
push
ret
xlat
outsb
push
insl
cmp
jecxz
mov
or
popa
xor
mov
in
int3
mov
in
jmp
xchg
cmovp
stos
add
call
loop
aad
outsl
mov
pop
jo
pop
test
clc
sbb
mov
sbb
xchg
test
jae
sub
out
xchg
xchg
xchg
aas
pushf
push
push
mov
incl
fdivs
xor
or
fisubrl
xchg
outsl
dec
sahf
imul
dec
shrl
dec
pop
push
lea
aad
or
adcl
out
mov
notb
add
dec
popa
dec
out
cmp
nop
adc
test
in
popf
adc
cld
mov
mov
add
xchg
addr16
sti
inc
jp
add
mov
dec
stos
mov
popl
dec
sub
xlat
jne
add
cmc
shll
jecxz
mov
xchg
jno
std
adcl
sbb
xchg
repz
xchg
mov
movsl
push
das
sub
xor
sbb
aam
cli
inc
xor
xorl
mov
pusha
mov
test
ret
mov
inc
clc
addl
ljmp
mov
push
jnp
mov
je
lret
inc
push
imul
pop
push
jno
dec
adc
sub
repnz
leave
jb
stos
hlt
sarb
mov
or
lret
aaa
incl
add
les
outsl
icebp
sti
pop
data16
fisubrs
mov
mov
and
mov
sbb
push
movsb
add
lock
jbe
out
jge
repnz
icebp
push
daa
sub
mov
fdivrl
and
mov
cli
push
ret
pusha
mov
iret
add
lahf
gs
push
test
test
inc
pop
cmp
cmpsb
cwtl
wbinvd
in
sub
dec
enter
pop
filds
mov
cmp
fistpl
cmp
ds
jb
movsl
jo
mov
jl
cmpsb
jns
cmpsb
subb
cli
sbb
and
cmp
mov
mov
pop
adc
lahf
add
mov
jmp
sub
mov
outsb
adc
adc
lahf
mov
out
je
lock
adc
push
push
xchg
pop
int
xor
mov
fs
push
mov
sub
pop
sbb
inc
test
pop
lcall
push
mov
fs
xchg
adc
movsl
ss
repz
ljmp
cli
in
sub
and
mov
pop
into
fwait
dec
jg
repz
cmp
and
jmp
imul
push
add
data16
push
in
dec
mov
xchg
cmpsl
xlat
into
push
clc
mov
scas
int3
push
sti
mov
scas
lcall
mov
dec
icebp
adc
inc
adc
sub
aad
notl
ja
adc
push
in
adc
leave
pop
cmp
clc
adc
mov
movsl
cs
sub
aad
pop
aad
notb
aas
sbb
cld
jb
ja
dec
scas
push
and
jecxz
shrb
lret
push
das
call
fidivrs
add
subl
repnz
pop
add
fiadds
cltd
jl
jle
fldt
inc
push
hlt
mov
ja
out
inc
roll
testb
fscale
add
stos
cwtl
cmp
sarl
jmp
ss
inc
cmp
mov
jp
sbb
aas
shlb
fdivl
sub
inc
mov
ret
fdivp
inc
es
or
aas
dec
jg
test
mulb
popa
dec
mov
lods
push
fistpll
pop
cltd
addr16
leave
psadbw
test
icebp
call
test
or
call
xchg
iret
frstor
and
xchg
sbb
xchg
ror
add
sub
inc
stos
sbb
out
clc
sbb
xor
scas
jb
loopne
shll
test
ret
or
mov
push
xlat
sahf
dec
add
movsb
imul
dec
dec
aas
jecxz
je
sbb
sub
fwait
test
dec
out
add
gs
test
jns
pop
push
in
aaa
lahf
xchg
dec
xchg
mov
enter
mov
jp
add
mov
pop
mov
pop
push
dec
or
pop
bound
pop
sbb
xchg
mov
or
add
rcll
inc
mov
sub
pop
divl
lds
and
cltd
cltd
insb
gs
or
push
jle
repz
in
jle
pusha
push
addr16
mov
adc
pop
movsb
sbb
add
in
lods
popf
or
mov
aam
in
ficoml
mov
imul
ss
icebp
mov
push
mov
mov
mov
mov
idivb
arpl
sub
or
inc
pop
mov
or
cmp
jp
mov
pop
or
pop
xchg
outsb
pop
ficoms
popf
lds
imul
mov
mov
and
movsb
sarl
shrl
fisubl
scas
lret
jbe
addl
sbb
push
cmp
iret
cmp
or
jl
rol
dec
cli
jns
push
cmpsb
adc
xor
and
das
jmp
mov
cmp
dec
push
xchg
cmpsb
sbb
in
adc
in
push
shrb
push
xchg
push
pusha
cmp
inc
ret
ds
jl
movsl
ja
aas
and
push
cmp
addb
sbb
mov
xor
int3
jge
pop
pop
xor
inc
js
add
pop
xchg
ss
push
clc
inc
faddl
xchg
cmp
adc
adc
jp
jg
test
sub
mov
xchg
and
and
push
stc
mov
sub
add
sbb
mov
jle
sahf
pop
pop
test
sub
repnz
pop
outsl
mov
loop
mov
or
adc
xchg
ss
test
fcmovnu
movsl
lcall
pop
xchg
stos
push
les
fidivs
ss
sbb
jle
jecxz
mov
in
pop
in
push
lock
leave
movsl
adc
sbb
add
jbe
pop
mov
and
xlat
or
and
mov
aaa
stos
sti
outsb
lahf
lahf
xchg
cmc
jne
cltd
and
dec
push
xchg
stos
inc
daa
jb
fnstcw
stc
cmp
movsb
test
xchg
mov
sbb
movsl
xor
xchg
xchg
or
adc
in
int3
pushf
lret
add
jmp
xor
mov
push
insl
nop
sarl
hlt
jb
jb
dec
and
inc
push
jecxz
and
xor
ret
lea
aas
or
add
mov
sbbl
aas
addl
mov
pop
mov
adc
int3
das
and
mov
cs
and
ljmp
dec
mov
cmp
sub
mov
icebp
rol
cld
test
cmpsl
lret
mov
repnz
or
lock
mov
xchg
dec
lahf
shl
jge
sub
push
call
ret
insl
fistpll
insl
pop
pop
orl
aas
xchg
cmp
imul
pusha
mov
idivb
jg
inc
and
fs
invd
xor
cltd
sub
xor
mov
inc
jo
fists
out
inc
add
clc
xchg
leave
es
and
sbb
testb
cmp
pop
cs
pop
test
adc
jg
xor
xlat
sub
or
sub
mov
push
clc
inc
dec
insb
push
test
or
ja
fisubl
inc
or
sub
fadds
push
sub
and
sbb
out
sti
xchg
dec
bound
lods
cmp
push
es
mov
jo
mov
cmpl
mov
push
jp
mov
mov
pop
dec
mov
insl
cmp
lock
sub
mov
mov
jnp
out
xchg
mov
sbb
stc
stc
aaa
xchg
pop
adc
pop
out
pop
adc
or
dec
push
lods
loope
stos
out
mov
inc
imul
rcrb
mov
pusha
push
jle
mov
in
pop
pushaw
jmp
or
ret
inc
pop
cmp
sahf
jae
add
push
jo
and
ret
inc
push
mov
fiaddl
adc
cltd
add
imul
cltd
scas
push
cmp
stc
xchg
adc
cld
xor
or
push
pusha
cmp
push
dec
add
mov
push
out
aam
shlb
or
rolb
adc
int3
inc
sti
dec
pop
clc
cltd
fdivp
and
insl
shlb
iret
and
lods
mov
pop
ja
push
mov
jbe
mov
jge
inc
lods
sbb
stos
daa
sub
sub
es
jno
or
ds
mov
imul
jmp
lock
sub
pop
loop
test
sbb
push
xor
xor
in
cli
jns
enter
pop
pop
jge
push
xchg
hlt
loope
sub
idivl
rolb
adc
movsl
jle
mov
aaa
mov
adcb
sbb
jmp
xor
test
inc
subb
dec
vmread
xor
pop
adc
fcomps
dec
in
inc
fsubrl
cmp
lea
in
adc
push
pushf
cmp
sti
and
ficoms
push
and
rolb
push
aam
int
jl
jg
out
testl
rcll
mov
push
pop
sbb
mov
leave
test
mov
outsl
imul
fistps
stc
xchg
aad
sbb
jge
loope
sbb
pusha
jnp
out
xchg
cli
push
xchg
push
xor
xlat
inc
or
mov
jno
flds
pop
or
lea
xchg
cmc
adc
and
add
adc
fbld
lods
aam
xchg
mov
cmpb
dec
mov
aad
rol
inc
in
test
sti
sbb
xor
mov
adc
fdecstp
in
les
sbb
repz
rcll
lds
outsb
cmp
test
adc
pop
adc
mov
jmp
lret
push
cmp
nop
lods
cmp
jb
mov
jp
push
xor
pop
aaa
cmc
mov
call
pop
push
xchg
fsub
fimuls
fistpl
xchg
pop
inc
sarl
mov
adc
add
add
rolb
in
outsl
and
pop
sub
xor
add
std
push
sub
cwtl
scas
sub
mov
xchg
fdivs
lret
and
fisttps
push
lahf
lock
push
pop
mov
sbb
push
imul
pushl
adc
insl
out
or
rcll
sub
popa
ja
ljmp
into
gs
add
mov
addr16
add
mov
imulb
mov
mov
leave
icebp
clc
into
inc
pop
xchg
sbb
dec
dec
pop
andl
gs
mov
pop
jb
inc
mov
call
or
out
sub
push
mov
mov
mov
enter
aas
dec
xor
cs
mov
icebp
sbb
iret
lds
add
jbe
bound
fwait
jns
cmpsb
mov
fildll
xchg
jmp
aam
mov
mov
lret
jp
push
xchg
mov
xor
mov
fistl
dec
shrl
xorl
mov
lock
dec
xchg
rolb
sar
out
ret
dec
add
iret
push
in
xorl
cmp
jne
pop
jle
imul
pusha
xchg
xchg
ret
pop
pop
adc
or
divl
insl
xchg
push
xor
popf
pop
pop
adc
std
cmpsl
inc
rclb
outsb
xchg
lock
stc
sbb
sahf
pop
imul
sbb
inc
loope
sbb
repnz
or
shl
mov
int3
arpl
nop
sbb
pop
inc
or
cmp
test
push
sbb
add
mov
inc
ficoms
sub
rorl
scas
repnz
imul
jns
cmp
stc
movsb
mov
lahf
jbe
jge
ret
or
xor
inc
pop
jno
das
xchg
jl
sub
push
push
insb
push
dec
xor
jge
es
ret
push
xor
pop
test
in
sbb
fildl
in
loope
jno
jb
rcll
pushf
mov
sbb
sub
sub
mov
cmp
insl
adc
dec
add
xchg
mov
subb
sbb
push
out
jl
call
add
js
cmc
testl
xchg
std
push
cmpsb
mov
fcoml
add
outsb
lock
mov
xor
aas
mov
push
xrelease
mov
push
jp
pop
push
sti
push
pop
and
push
cmp
cmp
or
lret
lahf
shr
jmp
or
sahf
sahf
mov
jbe
subb
inc
outsl
dec
sub
loop
sub
dec
and
movsl
mov
ss
mov
fcomps
lock
or
sbb
pop
mov
cmp
movsb
mov
adc
fmul
inc
mov
xor
xor
outsl
pop
sub
lds
inc
add
ljmp
add
jb
bound
lods
mov
pop
jge
mov
jmp
in
lock
fcompl
cmpsl
sub
loopne
jmp
inc
dec
out
push
fldcw
xchg
sbb
inc
jl
xchg
adc
arpl
sbb
xchg
push
pop
pop
push
xor
adc
jle
dec
shrb
imul
js
testb
jb
add
push
pop
jns
jecxz
lods
movsb
cmp
popa
call
sbb
aam
jae
push
dec
es
mov
roll
cmp
inc
bound
loop
inc
mov
pushf
pop
cmp
call
xor
aam
ss
clc
adc
cwtl
push
std
cmpsl
sub
mov
outsb
mov
decb
inc
mov
cmp
lock
sbb
rolb
rcrb
pop
push
aam
lahf
std
ret
mov
jecxz
cwtl
insl
aad
sbb
jo
mov
ljmp
shrb
mov
or
lahf
mov
aaa
out
jb
xchg
cltd
fwait
ds
test
jbe
mov
cmp
fstl
dec
loopne
shll
loop
shrl
mov
and
and
push
push
mov
mov
sub
adc
xor
inc
dec
mov
pop
xchg
mov
test
xchg
ret
ds
push
jb
adcl
push
jb
inc
add
mov
sub
mov
push
sarb
inc
xor
xchg
cmp
pop
mov
lods
adc
stc
popa
dec
mov
pop
jp
cmp
test
inc
dec
dec
mov
aas
jne
aam
mov
das
mov
mov
or
out
jle
popf
enter
mov
sbb
dec
sbb
stos
int3
pop
andl
cmpsb
inc
dec
jnp
push
fs
adc
stos
lea
and
iret
mov
dec
arpl
and
and
pop
jae
sbb
idivb
popf
jg
adc
inc
push
cmc
lods
mov
xchg
inc
movsl
aad
ja
mov
std
cmpsl
scas
sbb
jo
lea
mov
mov
or
dec
test
dec
sbb
mov
sbb
aaa
sti
mov
xchg
add
addr16
sbb
pop
and
fidivrs
add
rol
inc
adc
shll
movsb
sub
out
jbe
add
jge
and
sbb
or
daa
sub
movsb
cmp
mov
sub
mov
push
dec
in
xor
fsubs
lahf
loope
cltd
push
add
add
mov
push
inc
push
out
icebp
cmpsb
movsb
sub
enter
pop
fildl
and
sub
test
cmp
xchg
push
ds
push
dec
movsl
mov
mov
call
mov
out
sbb
push
xor
xor
push
or
pushf
xor
cmpsl
dec
or
adc
mov
cmp
push
std
mov
xchg
sub
shll
adc
or
dec
jg
negl
mov
imul
mov
shll
scas
lea
pop
out
int
pop
jns
jne
iret
test
mov
push
notb
push
sahf
inc
and
test
les
addb
outsl
sub
jns
add
bts
mov
test
insb
pop
fcom
clc
mov
or
xlat
cli
mov
loopne
cmp
inc
jns
sbb
into
daa
pop
cmc
maxps
pop
dec
or
out
imul
sub
in
xor
mov
ret
lret
sub
cmc
in
pop
outsb
jns
jnp
adc
incl
inc
loopne
add
insl
push
jmp
pusha
jp
fldenv
les
pop
inc
repz
xlat
scas
outsb
sbb
push
call
dec
pop
pop
pop
pop
adc
in
pushf
int3
sbb
cmp
cs
sbb
movsl
pop
nop
bound
aas
xchg
iret
mov
dec
mov
sbb
jecxz
fcom
cmp
call
fidivrl
mov
in
or
dec
adc
pop
pop
mov
loop
ljmp
mov
push
je
and
das
loop
shrl
pop
std
lahf
in
cwtl
and
shl
mov
inc
push
cld
sub
lret
incb
loope
lock
pop
icebp
inc
adc
sub
push
popa
aam
loop
ret
sbb
xor
movntpd
pop
push
dec
imul
xchg
in
ret
popa
movsl
scas
sub
in
mov
adc
or
and
sbb
lods
test
shlb
push
in
fnstsw
push
sbb
rcrl
xor
test
inc
xchg
mov
loope
lcall
xor
jp
or
hlt
out
je
jmp
dec
mov
mov
ja
mov
inc
rorb
or
or
fwait
gs
pop
push
adc
xor
add
lods
add
cwtl
inc
stc
bound
mov
in
jmp
dec
mov
stc
stc
mov
mov
xor
mov
rorb
test
fwait
mov
aam
push
mov
dec
jne
cmpb
mov
jne
add
lret
jmp
push
sar
es
sub
dec
dec
mov
stos
aas
insl
lret
and
adc
jnp
insl
pop
jle
mov
in
pop
cmp
or
ret
addr16
adcb
inc
das
xorl
or
loop
cmpsb
push
adc
rcr
fisubl
lea
and
imul
xchg
push
aam
notl
ror
hlt
mov
add
cmp
hlt
dec
cmp
mov
or
xor
or
mov
mov
test
rcr
push
das
pushf
pop
pop
lds
pop
shl
push
scas
mov
fldenv
push
push
dec
cmp
mov
in
cmp
jge
arpl
addl
daa
sub
xchg
cmp
in
jl
fsts
push
xor
xor
xor
popa
lahf
add
push
xlat
dec
inc
test
jnp
leave
inc
loop
popf
cmpsb
daa
push
ret
or
push
int
push
jne
loope
lret
outsb
mov
jp,pt
loop
xchg
lds
push
jecxz
mov
inc
add
in
xor
imul
rcrb
cmc
pop
nop
inc
fstps
push
mov
fsubrl
mov
mov
inc
adc
out
pop
jg
jp
mov
mov
out
mov
stos
xlat
and
push
pusha
sbb
imul
mov
inc
lret
aad
sbb
fs
jae
sbb
or
test
sbbb
outsl
or
inc
loop
imul
mov
mov
ss
or
fcoms
dec
fsqrt
jmp
sub
pop
push
add
mov
ds
or
inc
cmc
aas
xor
ljmp
adc
lret
dec
imul
sub
pushw
lods
mov
out
mov
cmc
sub
cltd
dec
mov
sub
sti
sub
sbb
gs
int3
loopne
push
stc
dec
int3
stos
in
inc
jae
imul
iret
mov
repz
loopne
lcall
cmp
and
pop
mov
jg
pushf
ja
nop
jmp
sub
divl
leave
nop
cmp
xchg
shll
int3
dec
add
add
jecxz
dec
sahf
movb
into
loopne
call
cltd
push
mov
xor
dec
cld
in
fucomi
arpl
pop
das
data16
jmp
inc
add
enter
dec
push
mov
cwtl
sahf
shll
addr16
negb
adc
inc
lcall
daa
int3
ss
sbb
cwtl
cld
push
or
mov
movsb
xchg
mov
xchg
adc
pop
adc
rolb
add
mov
jns
ret
test
icebp
ljmp
scas
rcll
xor
inc
lcall
xchg
push
mov
pop
push
xlat
mov
test
add
jnp
test
or
mov
aas
lret
push
jmp
and
jecxz
xabort
and
icebp
jo
jg
xchg
pop
adc
stos
ret
jmp
xor
aam
xchg
sti
pop
ja
and
or
sbb
xor
mulb
xchg
adc
fsubrl
test
push
dec
dec
or
jl
addr16
push
shr
fwait
xchg
adc
push
mov
xchg
lret
add
lds
jns
jns
push
cwtl
xchg
pusha
ja
dec
mov
pushf
pop
outsl
fwait
cmp
jp
mov
mov
pop
inc
mov
sub
dec
jl
xchg
jne
xchg
lds
not
adcb
cmp
adc
out
movsb
inc
sub
inc
pop
jp
test
xor
insb
jl
repz
dec
xor
inc
lret
in
mov
iret
jnp
pop
mov
incb
icebp
jae
inc
fists
jl
popf
int
jae
scas
jbe
inc
dec
dec
cmp
adc
xchg
cmc
fnstenv
sbb
outsl
cmpsb
imul
mov
adc
cwtl
pop
repnz
and
hlt
xchg
push
xor
cli
and
ret
or
lods
xchg
cmp
jns
lret
or
xchg
or
insl
adc
pop
or
fiadds
ss
out
scas
popl
mov
out
pop
cmp
in
inc
int
push
lret
jbe
dec
inc
jge
mov
mov
cmp
cmp
or
jl
in
or
and
fisubrs
jo
cltd
lahf
pop
stos
fstl
fsts
xor
push
inc
in
inc
jno
jae
stos
out
sub
xchg
push
pusha
enter
pop
pop
lcall
movl
outsl
cmp
sti
or
push
cmpsb
lea
mov
xor
xor
dec
testl
pop
movlps
push
stos
ljmp
mov
enter
fidivrs
inc
popa
jg
add
mov
xchg
cmp
inc
imul
xor
int
dec
in
imul
dec
loope
lret
xchg
shll
cwtl
sbb
insb
test
lea
stc
xchg
outsl
out
sub
sub
pop
stc
jae
inc
fs
inc
outsb
adc
and
cmp
dec
mov
cli
push
rcll
cmp
add
or
inc
into
in
mov
dec
xor
mov
adc
push
lea
sbb
data16
movsl
lods
jo
and
dec
inc
test
insb
cmp
mov
xor
jge
inc
movsl
shlb
test
jp
sub
int3
inc
xchg
mov
sarb
outsb
repz
mov
xchg
pop
mov
popa
sbb
int3
lcall
insl
shrl
mov
dec
aad
push
shrb
aad
and
nop
sbb
pop
aas
rcrl
andl
je
ds
jecxz
cld
ljmp
inc
sbb
imul
mov
jmp
fisttpl
fistl
pusha
xor
inc
and
mov
sbb
rorl
shll
push
negb
xor
cmpsl
es
cmp
repz
jg
and
faddl
mov
adc
cmpsb
lock
rclb
mov
sub
fs
ret
cmp
es
dec
or
mov
dec
popa
cmpsb
push
xchg
js
mov
popa
roll
lods
in
adcl
or
mov
push
fidivl
frstor
jecxz
cmp
stos
imul
inc
invd
test
rclb
mov
test
push
scas
push
icebp
clc
mov
lret
jp
arpl
xchg
inc
pop
sub
add
dec
scas
rclb
scas
jae
lcall
pop
scas
or
and
sbb
xchg
dec
outsl
mov
test
mov
ja
mov
dec
decl
test
inc
jno
fwait
ret
mov
xchg
pop
repnz
out
push
es
bound
repz
icebp
ds
mov
mov
in
cmp
sub
and
stos
jp
ret
inc
mov
or
cmp
mov
scas
dec
jne
or
mov
adc
push
fwait
loope
test
xchg
int3
push
adc
sub
jecxz
in
and
inc
jae
push
call
scas
lock
sub
fdivrs
sub
mov
rclb
iret
fiaddl
ret
inc
pop
out
in
inc
inc
inc
imul
popf
hlt
ds
mov
into
cmp
fcmovb
pop
into
xchg
dec
stos
fwait
sbb
pop
repz
sbb
imul
mov
cmp
xlat
add
arpl
mov
lods
aaa
or
daa
ret
into
aaa
cmp
jg
add
inc
int3
fcoml
pop
pop
scas
daa
call
lds
mov
scas
outsb
repz
and
clc
cmp
xor
push
sbb
sbb
sbb
stos
jecxz
es
cmp
sub
dec
xchg
int3
or
clc
dec
xlat
xor
jmp
rcll
imul
stc
push
inc
add
or
jge
jbe
pop
jns
pop
cwtl
jmp
push
nop
imul
push
lock
jne
cmp
mov
xchg
and
ljmp
fcoml
arpl
jne
xor
mov
maskmovq
pop
push
inc
popa
js
sbb
mov
lcall
stos
faddl
cli
sub
adc
adc
pushf
movsb
add
lea
mov
stc
inc
mov
push
and
out
int
sbb
out
or
pop
and
dec
jnp
mov
pop
pop
sahf
sub
test
adcb
loop
js
stc
sub
jae
dec
aam
xor
cmp
pop
mov
or
cli
push
bound
xor
and
into
shlb
xor
pop
cmpsb
loope
adc
sbb
adc
sub
add
data16
jge
lods
push
pop
and
mov
xor
sub
mov
mov
pushf
sbb
sti
mov
push
lock
loopne
xor
inc
cltd
push
cld
dec
and
dec
mov
repz
or
mov
lock
lea
adc
pop
cld
pushf
int
jmp
ds
adc
aad
jns
nop
repz
aas
jb
mov
lcall
test
ret
hlt
lods
movb
lea
sub
adc
or
data16
and
in
add
adc
mov
loop
inc
icebp
fidivrl
adc
inc
rol
stos
ss
xor
std
xchg
scas
mov
cmpsl
and
shrb
cld
stos
fnstenv
jmp
mov
lock
js
pop
dec
pop
mov
sub
mov
repz
adc
dec
pop
xor
xchg
mov
mov
sbb
popa
ljmp
mov
push
cmp
and
push
sbb
cmovb
add
inc
addb
es
jno
push
fnsave
dec
clc
cmc
inc
repnz
fucomp
sbb
push
pop
fcomps
pop
stos
mov
icebp
inc
xchg
ja
mov
cmp
xor
lahf
insb
or
push
xor
hlt
push
mov
addr16
or
test
mov
addr16
je
xchg
adc
fwait
repnz
push
mov
or
and
cmp
xor
mov
cmp
xchg
mov
push
mov
xchg
idivb
in
test
imul
mov
pop
jg
dec
inc
xchg
cmpsl
jne
out
mov
fsubl
xchg
jnp
and
ret
aaa
xor
imul
or
arpl
push
daa
pop
mov
cwtl
fsubrl
and
dec
sbb
add
pop
cmp
in
sbb
aad
iret
cmp
jg
and
jae
jp
push
add
and
sbb
xor
and
lahf
inc
dec
scas
dec
fidivrl
adc
mov
pop
push
imul
scas
cmpsb
jo
push
test
push
pop
mov
std
xchg
hlt
sub
test
in
enter
push
mov
jle
idivl
je
scas
add
clc
scas
pop
fimuls
faddp
daa
add
out
scas
dec
ljmp
aam
outsl
movsb
pop
lock
out
jbe
bound
push
pop
es
and
mov
jno
add
dec
add
xor
inc
and
push
push
lea
push
fsubl
inc
loopne
cmpsb
mov
mov
fs
sub
pop
into
and
xlat
shrb
push
lods
fndisi(8087
cmc
ret
ss
mov
cmp
movsb
jecxz,pt
ret
movsl
test
aas
and
jno
outsl
add
sbb
adc
ret
test
shrb
pop
inc
icebp
stc
js
insb
mov
lcall
outsl
fsubrl
aaa
hlt
outsb
fisttps
adc
ja
idivb
sbb
add
iret
and
jp
int
int3
inc
sub
xchg
test
xor
loopne
xchg
mov
xor
sahf
iret
cmp
test
out
subb
adc
push
dec
add
loope
adc
adc
scas
cmp
ret
out
scas
loopne
test
insl
cmp
adc
mov
mov
xor
or
pop
lds
iret
adc
add
mov
cmp
rorl
dec
data16
ficomps
mov
stos
or
push
xchg
cmp
pop
push
mov
decb
fwait
imul
jmp
mov
flds
add
push
rclb
dec
xor
xchg
jecxz
test
scas
call
inc
popf
cmp
or
or
adc
adc
lcall
insl
mov
pop
dec
cmp
int3
xor
nop
into
aam
aas
adc
jb,pn
add
lretw
sarb
aam
dec
leave
orb
incb
incb
or
andl
mov
inc
xor
inc
push
gs
cmp
xchg
add
and
int
rorl
xor
mulb
xor
cwtl
adc
cmpsl
and
adc
mov
decl
lret
mov
sarb
icebp
push
push
pop
insl
outsb
jnp
mov
cmpsb
cmp
shll
es
sbb
fcmovnb
dec
push
push
stos
xchg
neg
cltd
ljmp
lods
ret
mov
je
push
and
mov
mov
rorl
lds
inc
pop
push
xor
adc
pop
sbb
clc
xor
xchg
sbb
iret
roll
mov
nop
add
out
adc
leave
xchg
mov
push
je
fadds
cltd
or
xor
repnz
xchg
sbb
sbb
test
add
ja
cmp
xchg
pushf
sbb
sbb
daa
fwait
and
mov
sbb
out
adc
test
jns
out
imul
fsubl
xchg
ret
loopne
mov
mov
mov
mov
adc
mov
int
mov
jbe
call
jne
add
push
cmp
dec
push
shr
mov
inc
adc
xor
cmp
ss
push
popw
push
stos
or
sub
push
jle
lods
dec
in
jbe
pusha
sub
sub
cwtl
xor
sbbb
faddl
mov
push
lds
popf
inc
pop
jb
pop
cli
mov
int3
cmpsl
sub
sub
mov
cli
mov
sbb
mov
imul
or
pop
adc
fs
push
or
mov
mov
inc
lret
mov
or
sbb
arpl
or
leavew
add
sbb
int3
mov
push
pop
or
push
lods
lds
xchg
shlb
scas
sub
int3
and
or
movsb
in
inc
push
mov
shll
jge
push
pop
sbb
lea
and
cmp
add
imul
dec
jb
xor
mov
aad
jo
add
lahf
jl
mov
test
cmpsl
push
xchg
inc
pop
cmpsb
xor
dec
xchg
in
enter
pop
push
sbb
push
jnp
loope
pop
mov
lret
cmp
ds
push
mov
scas
inc
shlb
out
cld
sub
sbb
fistpl
dec
iret
les
push
mov
leave
xchg
dec
xchg
push
adc
and
into
cmpsb
out
pop
mov
push
mov
mov
sub
sbbb
lcall
lds
cmp
jb
push
insb
xorl
sub
push
aam
test
out
lret
pushf
shll
mov
enter
and
test
pop
or
sbb
aam
loop
push
adc
cwtl
push
sub
out
dec
adc
push
shlb
stos
cmc
cmp
jge
mov
cli
mov
xchg
xor
pusha
cmp
xlat
test
scas
mov
and
repnz
push
xor
or
test
adc
scas
imul
ret
les
mov
lods
and
addb
add
push
mov
jb
pusha
sti
out
push
scas
jle
shrl
and
inc
mov
push
cmp
pusha
inc
stos
repz
or
inc
sbb
jge
or
mov
sub
push
loop
and
iret
jmp
popa
xchg
cs
push
jmp
test
into
jb,pt
popf
mov
je
mul
jecxz
mov
dec
sub
sub
ficompl
pop
mov
imul
std
mov
dec
test
pop
loope
mov
ljmp
imul
and
xchg
rcrl
data16
or
loop
or
int3
add
cmpsl
and
leave
mov
js
call
lret
sub
mov
mov
cmp
jecxz
mov
or
xchg
aam
aam
sbb
ret
in
and
cmc
add
aas
cmc
dec
push
add
xchg
xor
pop
lods
popa
sbb
lods
sub
call
xchg
mov
xor
mov
add
cltd
in
inc
test
fnsave
divl
fnstsw
inc
clc
imul
sbb
inc
inc
pop
cs
stos
jg
cmp
jae
test
inc
in
pushl
sub
or
dec
cmp
inc
loop
mov
push
pop
dec
movsb
mov
pop
ja
enter
cs
ret
dec
mov
inc
dec
fwait
push
pop
sub
inc
je
add
pop
out
push
out
repz
rclb
jns
arpl
push
xchg
adc
ja
push
inc
mov
pop
inc
addr16
jp
mov
fistpll
mov
dec
or
sti
jne
enter
stos
xchg
fbstp
bound
mov
lcall
fadds
mov
adc
xor
in
movsl
push
shrl
decb
push
insb
sub
add
or
lea
push
mov
not
aam
dec
js,pt
xchg
jge
inc
mov
test
out
push
mov
popf
imul
sub
dec
and
fcmovu
pop
fsts
jns
pop
imul
scas
insb
int
push
aaa
test
adc
imul
mov
out
jg
shl
arpl
stos
adc
cwtl
ljmp
adc
add
adc
pop
cmp
mov
or
pop
vunpcklpd
jle
cltd
scas
or
data16
dec
cmp
inc
movsb
outsl
arpl
jbe
dec
test
or
sbb
or
and
lock
and
xchg
xchg
push
mov
xchg
adc
cli
jne
fwait
out
mov
notb
mov
jb
bound
icebp
cmpsb
mov
inc
in
xor
enter
pop
push
divl
loope
push
pop
sub
mov
cmp
daa
sub
and
cmp
sub
loopne
andl
sbb
pop
scas
and
xchg
repz
js
jne
pop
or
lcall
cmc
faddl
fiaddl
outsb
movsl
movsl
adc
sub
dec
imul
dec
dec
mov
lret
imul
gs
push
outsl
cld
inc
int
fimull
sub
jns
inc
add
lret
fld
push
into
rorb
and
sahf
adc
iret
xchg
and
fldt
aam
loop
xchg
stc
dec
sbb
adc
xchg
ss
jne
cmp
cmp
out
xchg
ljmp
cmp
jo
or
adc
xor
fimuls
or
imul
mov
sbb
scas
bound
inc
and
sub
icebp
mov
fnstsw
xchg
xchg
add
rcrl
fcomps
or
movsb
sahf
inc
rolb
mov
scas
iret
inc
les
jle
jmp
xor
sbb
mov
xor
pop
cmp
fists
std
sahf
adc
jmp
sbb
aad
roll
aas
dec
cmpsl
test
dec
push
and
je
xchg
dec
add
imul
rcrl
mov
pop
out
mov
int3
in
xchg
cmp
xchg
stc
test
sar
and
pop
fsubrp
inc
inc
add
inc
mov
comiss
movsb
shll
popf
jbe
and
xchg
mov
lods
adc
mov
cwtl
xchg
sahf
cmpsl
and
mov
dec
jg
cld
sub
mov
mov
push
push
lock
cmp
in
pop
push
imull
mov
cmpsb
ret
je
push
es
in
es
fimuls
dec
pop
xchg
je
imul
je
mov
lods
cwtl
fxch
mov
mov
mov
mov
pop
int
add
ja
cltd
sbb
test
mov
mov
add
clc
cmpsb
rcll
dec
xor
sbb
stos
shll
sbb
pop
fnstcw
stos
outsb
mov
out
jae
xchg
dec
inc
enter
and
xor
cwtl
cld
or
aad
cltd
call
test
dec
or
pop
ja
fsubrs
inc
pop
sbb
out
xor
jg
xchg
push
out
pop
add
jae
imul
adc
xor
jl
in
dec
mov
popa
fcomip
mov
inc
int
push
cmp
subb
add
daa
mov
and
mov
push
ja
dec
jmp
push
jne
iret
mov
xchg
jmp
xchg
hlt
xlat
sub
test
fcoml
jbe
out
xor
sub
enter
sbb
icebp
lahf
mov
insb
xchg
push
bound
xor
jecxz
jo
fistpl
pop
push
popa
iret
push
jbe
ret
xchg
pop
lret
inc
jno
mov
dec
push
dec
pop
cmc
popf
nop
pop
fdivrs
lret
ficoml
push
rcrb
xlat
imul
scas
iret
jmp
movsb
adc
xchg
hlt
mov
mulb
cmc
hlt
or
fadds
cmp
or
adc
aaa
xor
call
add
pushf
int3
mov
pop
fisubrs
mov
cltd
in
scas
ljmp
cmp
jmp
movsb
cli
sbb
push
push
mov
jbe
imul
daa
and
cmp
xor
sub
dec
push
incb
xor
push
add
cmp
mov
repz
cmp
loopne
cmpsb
cmp
xlat
in
sbb
pop
enter
pop
xchg
pop
sub
scas
ss
loope
cmc
sbb
jb
cmp
iret
popa
ds
dec
mov
and
pop
stos
addb
pop
sbb
test
xor
mov
sbb
pop
mov
xlat
ljmp
mov
pop
adc
sub
jns
or
sbb
or
lea
in
mov
pop
aad
or
lcall
jb
xchg
ds
sub
xorl
add
lret
shll
inc
sbb
rorl
addb
mov
loop
pop
movsb
stc
push
xchg
fs
mov
std
ss
jge
cmpsl
orl
add
out
adc
sub
into
pop
leave
cmc
cmpb
pop
and
movsb
adc
insb
lret
imul
and
mov
rorl
andl
mov
dec
jmp
sti
inc
sbb
sub
loopne
faddl
push
dec
flds
aam
in
xchg
jbe
xor
push
xchg
sub
mov
cmp
jbe
mov
mov
in
aas
dec
adc
pushf
jns
cld
jmp
xchg
stos
xorl
cwtl
aas
out
sbbl
jo
dec
lret
inc
sub
jecxz
jge
push
push
jge
rcrb
sub
adc
scas
mov
pop
aas
subl
inc
mov
add
add
add
enter
cmpsl
insb
push
das
fisubrl
fs
inc
negb
imul
in
std
xor
andb
rorl
icebp
es
cld
push
push
lret
pop
add
mov
clc
mov
cmpsb
leave
lock
pop
lret
shlb
cld
cmp
aam
out
ret
add
movsb
insl
or
and
dec
ljmp
and
int3
test
inc
bound
mov
mov
mov
mov
mov
mov
push
jge
rcr
int
stos
clc
loope
sub
sbb
add
mov
fistps
and
out
cmp
adc
cmp
push
xor
mov
lds
jae
scas
dec
jb
add
arpl
mov
adc
or
repnz
fwait
scas
fwait
and
mov
add
mov
ja
mov
aam
push
mov
jns
cmp
xchg
mov
pop
mov
mov
cwtl
pop
shll
pop
andl
mov
orl
dec
into
mov
push
mov
lret
mov
nop
xchg
push
cmp
lahf
fstpt
add
cmc
out
movsl
scas
sub
daa
jmp
push
and
stos
fs
xor
sub
fsubrs
push
jnp
lods
add
lods
mov
pusha
stc
cmpsl
iret
mov
mov
cs
pop
add
jae
sbb
mov
loopne
adc
outsb
fiaddl
adcl
cmp
scas
xor
mov
lds
adc
into
fidivrl
dec
lds
push
mov
inc
inc
aam
xchg
or
mov
aaa
repz
inc
or
mov
int3
jae
add
ficoms
popf
lds
fcoml
mov
xchg
scas
leave
in
andb
fidivrs
mov
loop
test
lock
movsb
sub
jbe
call
jge
outsb
sbb
sbb
dec
jno
iret
adc
cmp
hlt
push
push
stos
or
jo
and
lahf
fldcw
inc
push
pushf
fs
test
or
inc
lret
adc
in
add
in
inc
ljmp
and
lods
loope
clc
xor
add
cmp
aam
movsl
les
fs
pop
lods
in
xchg
adcb
jne
out
xor
fwait
xor
ss
inc
pop
loope
or
pop
or
inc
push
mov
or
pop
xchg
stos
sub
dec
outsb
imul
adc
jecxz
mov
mov
test
test
mov
mov
outsb
push
jne
cmp
movsl
jns
sub
mov
ret
lret
lret
sarl
mov
cli
sbb
and
mov
or
push
outsl
and
nop
loop
lods
cmp
mov
sub
jg
pop
cmp
scas
push
push
out
outsl
inc
cli
push
les
xor
jle
cmp
pop
insb
or
test
into
aas
jne
cmc
inc
push
and
addr16
icebp
pop
inc
lcall
fwait
test
adc
push
out
std
in
sbb
fimull
iret
xlat
ret
sub
shll
mov
sbb
repz
pop
in
xchg
gs
out
mov
popl
sub
fstps
js
addl
sub
cs
add
cmp
cmp
stos
cmpsl
sub
and
std
jmp
aad
cs
or
nop
cmp
lea
jae
pop
dec
inc
or
jecxz
leave
and
lea
clc
lock
shll
ret
dec
imul
pop
movsb
in
sbb
inc
ret
das
mov
les
lret
stos
lcall
mov
std
xlat
jp
cwtl
std
das
je
and
pop
mov
std
push
dec
cld
and
mov
pop
mov
mov
pop
jp
pop
jmp
fimull
jns
sub
in
enter
movsb
es
loop
hlt
ficoms
xchg
repnz
push
ljmp
imull
fnstenv
mov
dec
jbe
mov
sbb
ss
cltd
mov
data16
mov
mov
push
inc
cmp
hlt
js
clc
sbb
mov
lods
jp
shl
xor
das
mov
out
pushf
mov
xchg
fisubl
mov
push
cmc
pushl
push
jmp
xor
das
shll
jbe
test
inc
ja
test
dec
mov
roll
sub
or
mov
push
sub
inc
in
test
and
cmp
cltd
adc
xchg
in
mov
mov
sbb
addr16
jp
shlb
push
add
adc
mov
pop
jne
or
mov
testl
xchg
lcall
xchg
shrb
adcl
out
xchg
mov
dec
nop
jnp
and
shrl
inc
mov
cmpl
xor
jmp
pusha
pusha
xchg
push
cmp
ret
or
roll
icebp
sub
popf
fiadds
mov
enter
clc
mov
xchg
push
andb
push
xchg
lahf
ret
scas
xchg
incb
lret
test
adc
repnz
push
pop
leave
jge
repnz
mov
call
cwtl
or
or
jl
mov
lret
push
sub
mov
mov
pop
leave
jo
fdivp
mov
ror
iret
scas
test
loopne
in
sarb
movsb
adc
bound
or
sbb
pop
daa
and
cmp
adc
pop
nop
jl
stos
mov
push
dec
into
adc
or
lahf
clc
int3
mov
test
rcrl
inc
pop
mov
cmpsb
aas
out
in
out
aas
enter
pop
adc
adc
sub
imul
ds
dec
jnp
lret
add
and
es
lock
add
add
add
mov
movsl
scas
js
push
xchg
pop
mov
jp
test
push
or
faddl
xor
inc
out
pop
outsb
into
int
adc
mov
daa
xchg
mov
jecxz
mov
pop
add
jecxz
js
test
or
push
sub
push
test
lret
ffreep
shll
cmp
sbb
int3
movsb
sahf
decb
test
subl
mov
xor
fwait
fs
adc
pushf
fwait
ss
cmp
imul
cli
orl
cmp
xor
or
dec
and
gs
push
ljmp
inc
fsubrs
jge
adc
or
add
xchg
clc
lods
rorl
xlat
add
out
mov
push
int3
out
mov
mov
pop
loopne
.byte
.byte
ret
nop
