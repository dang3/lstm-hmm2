push
mov
add
mov
mov
mov
mov
mov
mov
push
mov
push
push
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
push
mov
mov
mov
mov
and
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
orl
mov
mov
push
pushl
lea
push
call
adc
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
subl
sub
add
mov
mov
mov
mov
pop
ret
int3
int3
push
mov
mov
call
mov
call
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
call
call
call
add
mov
push
mov
push
push
push
push
call
call
and
mov
call
mov
adc
mov
push
call
mov
mov
mov
sub
cmp
jbe
mov
mov
add
sub
mov
mov
inc
cmp
jne
or
mov
call
mov
call
mov
mov
mov
ret
int3
push
mov
add
sbb
call
mov
add
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
mov
andl
mov
push
push
push
push
mov
push
call
call
mov
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pushl
push
push
call
or
mov
xorl
mov
pop
ret
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
call
mov
mov
mov
mov
call
movl
mov
call
call
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
sbb
mov
call
mov
mov
call
mov
mov
mov
mov
call
leave
ret
int3
int3
int3
int3
push
mov
add
mov
sbb
and
mov
mov
mov
mov
mov
mov
push
mov
push
mov
pushl
call
mov
mov
mov
mov
orl
leave
ret
int3
int3
int3
int3
int3
int3
mov
orl
call
mov
mov
call
call
sub
push
push
mov
push
push
push
call
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
call
call
adc
mov
call
mov
mov
mov
call
mov
mov
mov
push
push
push
push
push
call
mov
mov
call
mov
mov
mov
push
push
mov
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
je
mov
sub
mov
inc
mov
xor
cmp
jne
sbb
add
mov
cmpl
jle
mov
and
or
add
mov
mov
mov
call
call
mov
mov
inc
mov
mov
mov
push
mov
push
mov
push
mov
push
push
call
mov
call
mov
mov
mov
push
push
push
push
push
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
push
push
push
push
push
call
mov
mov
mov
add
sub
mov
mov
mov
mov
mov
mov
sub
or
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
add
mov
mov
cmp
je
mov
mov
mov
mov
add
add
mov
sub
mov
mov
dec
jne
mov
mov
call
call
mov
mov
push
push
mov
push
push
push
call
mov
mov
call
ret
int3
int3
int3
int3
int3
int3
push
mov
add
mov
lea
mov
mov
mov
mov
pop
ret
int3
int3
mov
sbb
mov
mov
push
push
mov
push
push
push
call
mov
mov
push
push
mov
push
mov
push
push
call
addl
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
push
mov
add
mov
mov
mov
mov
lea
push
call
mov
mov
add
mov
call
mov
mov
lea
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
mov
mov
push
mov
push
pushl
mov
lea
push
call
mov
mov
mov
mov
lea
push
mov
lea
mov
push
call
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
mov
addl
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
adc
push
call
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
subl
mov
mov
mov
mov
mov
mov
mov
andl
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
push
push
push
push
push
call
mov
mov
push
push
mov
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
push
push
movl
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
push
mov
push
push
push
or
mov
push
call
mov
mov
call
push
mov
push
mov
push
push
push
call
mov
mov
mov
mov
mov
push
push
mov
push
push
push
call
mov
call
mov
mov
mov
mov
mov
push
push
push
mov
push
mov
push
call
mov
mov
mov
mov
push
push
mov
push
push
push
call
mov
mov
mov
call
mov
mov
xor
mov
mov
call
mov
mov
mov
call
mov
mov
push
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
call
mov
xor
mov
mov
mov
mov
mov
push
push
push
mov
push
push
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
movl
push
mov
push
mov
push
push
push
call
mov
mov
mov
mov
push
mov
push
push
mov
push
push
call
call
mov
mov
mov
mov
call
mov
mov
adc
call
mov
mov
mov
mov
call
mov
add
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
xor
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
sbb
push
push
mov
push
push
call
mov
call
mov
mov
call
mov
mov
mov
push
push
sub
push
push
push
call
mov
mov
push
push
push
push
push
call
mov
mov
call
mov
call
mov
mov
call
xor
mov
call
mov
mov
call
mov
mov
call
xor
mov
mov
mov
mov
call
mov
mov
mov
call
movl
andl
sub
call
mov
mov
mov
push
push
mov
push
push
push
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
or
mov
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
call
mov
or
mov
mov
call
mov
mov
mov
push
mov
push
push
push
mov
push
call
mov
call
mov
mov
call
mov
call
mov
mov
mov
push
mov
mov
push
mov
mov
push
push
push
call
mov
mov
mov
mov
call
xorl
mov
mov
mov
push
mov
push
push
push
mov
push
call
mov
mov
mov
incl
call
mov
mov
sbb
mov
call
lea
mov
mov
mov
call
mov
mov
mov
adc
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
push
mov
mov
push
push
push
push
call
mov
mov
mov
call
mov
subl
mov
mov
call
add
call
mov
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
mov
push
push
mov
push
mov
push
mov
push
call
mov
mov
mov
push
mov
push
mov
mov
push
mov
mov
push
push
call
mov
mov
mov
call
mov
sbb
call
mov
mov
mov
mov
call
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
push
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
push
push
push
mov
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
push
mov
push
push
mov
mov
push
mov
push
call
call
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
push
mov
push
mov
push
call
mov
call
mov
mov
call
mov
mov
call
mov
movl
mov
call
mov
mov
mov
call
mov
mov
mov
call
andl
mov
push
push
push
push
mov
push
call
mov
mov
call
mov
mov
call
mov
mov
mov
orl
call
and
call
mov
mov
mov
mov
mov
push
mov
push
push
mov
push
push
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
push
push
push
mov
push
push
call
mov
mov
mov
mov
call
mov
adc
mov
add
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
push
push
push
push
mov
push
call
mov
mov
call
xor
mov
mov
push
push
push
push
push
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
subl
mov
push
mov
push
incl
mov
push
mov
push
push
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
push
push
push
push
mov
push
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
push
mov
push
push
push
mov
push
call
mov
call
mov
mov
mov
movl
push
push
push
mov
or
push
adc
mov
push
call
mov
mov
orl
mov
mov
mov
push
push
push
push
mov
push
call
mov
call
mov
mov
mov
push
push
push
push
push
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
mov
push
push
mov
mov
push
mov
push
push
call
mov
mov
push
mov
mov
push
mov
push
push
mov
push
call
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
mov
push
push
push
mov
push
mov
push
call
mov
mov
mov
push
push
push
push
push
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
push
push
push
push
push
call
mov
mov
mov
push
push
push
mov
push
push
call
mov
mov
push
push
push
push
mov
push
call
mov
xor
mov
mov
mov
push
mov
push
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
push
push
push
push
call
mov
mov
decl
mov
add
call
mov
mov
mov
call
mov
mov
mov
call
call
mov
mov
mov
call
mov
mov
mov
adc
mov
push
mov
mov
push
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
xor
xor
call
mov
mov
mov
mov
call
mov
mov
mov
mov
push
mov
push
push
push
push
call
mov
and
call
mov
mov
call
mov
mov
mov
mov
push
push
push
mov
mov
push
push
call
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
push
push
push
mov
push
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
mov
push
mov
push
push
mov
push
call
mov
mov
mov
call
mov
mov
mov
call
mov
push
push
push
mov
mov
push
push
call
mov
mov
push
mov
push
push
push
push
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
call
mov
mov
mov
mov
mov
call
mov
mov
mov
incl
mov
call
mov
mov
mov
push
push
mov
push
push
push
call
mov
mov
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
push
push
mov
push
mov
push
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
push
push
mov
push
mov
or
push
mov
push
call
mov
mov
mov
mov
call
lea
mov
mov
call
mov
sbb
call
mov
mov
call
mov
mov
call
xor
mov
mov
push
push
mov
push
mov
mov
push
push
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
addl
call
mov
mov
call
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
push
mov
mov
push
call
mov
sbb
mov
call
mov
mov
mov
mov
mov
mov
push
push
mov
push
push
mov
push
call
and
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
push
push
mov
push
call
mov
mov
call
decl
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
push
push
mov
push
push
mov
push
call
mov
mov
push
push
andl
push
mov
push
sbb
mov
push
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
or
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
push
push
push
mov
mov
push
push
call
mov
call
mov
mov
mov
push
push
mov
push
mov
push
push
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
push
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
call
mov
mov
call
mov
sbb
mov
call
mov
mov
mov
mov
call
mov
andl
call
mov
mov
mov
push
push
mov
push
push
push
call
mov
mov
mov
call
mov
mov
mov
subl
call
mov
mov
mov
call
mov
mov
mov
andl
call
mov
mov
mov
push
push
push
push
adc
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
push
push
push
push
push
call
mov
mov
mov
mov
call
call
mov
mov
mov
mov
call
mov
mov
push
push
push
push
addl
push
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
call
mov
mov
mov
addl
mov
push
mov
push
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
subl
call
movl
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
push
push
push
mov
push
push
call
adc
call
mov
push
push
push
mov
push
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
and
call
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
mov
mov
call
andl
mov
call
mov
mov
or
call
mov
mov
mov
add
mov
push
mov
push
subl
push
mov
push
push
call
mov
mov
sub
call
mov
mov
mov
call
mov
mov
mov
mov
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
push
push
push
mov
push
push
call
mov
mov
call
mov
mov
mov
xor
mov
call
mov
mov
mov
push
push
mov
push
push
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
movl
mov
mov
call
mov
mov
mov
call
mov
mov
mov
push
push
mov
push
push
mov
push
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
orl
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
adc
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
push
push
push
push
mov
mov
push
call
mov
orl
mov
call
mov
mov
push
mov
push
push
push
mov
mov
push
call
mov
mov
mov
andl
push
mov
push
push
mov
mov
push
mov
mov
push
call
mov
mov
adc
call
mov
mov
call
mov
mov
mov
call
mov
call
mov
mov
mov
push
andl
push
push
push
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
mov
push
push
mov
push
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
subl
mov
mov
mov
call
mov
mov
call
mov
sbb
mov
mov
push
mov
push
push
mov
push
mov
push
call
sub
mov
mov
call
or
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
xorl
mov
mov
push
push
push
push
mov
push
call
mov
mov
andl
call
sub
mov
mov
mov
call
mov
mov
call
mov
mov
push
mov
push
push
mov
mov
push
mov
push
call
mov
mov
call
mov
andl
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
call
call
mov
mov
call
mov
call
mov
mov
call
mov
mov
mov
adc
call
mov
mov
mov
call
mov
mov
mov
mov
push
push
mov
push
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
and
mov
call
mov
mov
mov
mov
push
push
push
push
mov
push
call
mov
mov
mov
addl
mov
push
mov
push
push
mov
push
push
call
mov
sbb
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
call
mov
call
incl
mov
call
mov
mov
mov
mov
call
mov
mov
sub
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
sbb
mov
call
mov
mov
subl
mov
mov
call
mov
mov
call
mov
incl
mov
mov
call
movl
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
call
mov
or
mov
mov
mov
push
mov
push
push
andl
mov
push
mov
push
call
mov
mov
push
push
push
push
push
call
mov
mov
call
mov
mov
mov
call
mov
or
mov
mov
mov
mov
mov
push
push
mov
mov
push
push
push
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
xorl
mov
push
mov
push
push
mov
mov
push
push
call
mov
mov
call
add
mov
mov
call
mov
incl
mov
or
call
mov
mov
or
mov
mov
call
sub
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
mov
push
mov
push
mov
push
push
mov
push
call
mov
add
mov
mov
call
mov
mov
mov
mov
push
push
push
mov
push
push
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
push
push
push
push
push
call
mov
mov
mov
push
push
push
push
adc
push
call
mov
subl
movl
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
push
xor
push
push
movl
push
push
call
mov
mov
push
mov
mov
push
push
mov
push
push
call
mov
mov
call
mov
mov
mov
mov
push
mov
push
mov
push
push
mov
push
call
mov
mov
mov
mov
push
push
mov
push
push
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
subl
mov
incl
call
mov
mov
add
or
call
mov
mov
mov
push
mov
push
push
push
mov
push
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
push
mov
push
push
push
push
call
mov
mov
mov
call
mov
mov
mov
call
and
mov
mov
andl
call
mov
mov
call
mov
mov
mov
subl
call
mov
mov
mov
mov
call
mov
xorl
mov
mov
mov
push
mov
push
mov
push
mov
push
push
call
mov
mov
mov
push
mov
push
mov
push
push
push
call
mov
mov
mov
mov
push
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
call
mov
mov
adc
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
mov
push
mov
push
push
mov
push
push
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
orl
push
push
push
mov
push
mov
push
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
and
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
subl
mov
mov
push
push
mov
push
push
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
push
push
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
push
mov
mov
push
push
call
lea
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
push
push
mov
push
mov
push
mov
mov
push
call
mov
call
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
call
mov
mov
mov
mov
call
mov
mov
sub
call
mov
mov
call
mov
mov
mov
call
lea
mov
mov
mov
push
push
push
mov
mov
push
push
call
sub
mov
mov
mov
mov
push
push
mov
push
mov
push
push
call
mov
mov
mov
movl
call
mov
mov
call
incl
mov
mov
mov
mov
push
push
mov
mov
push
push
push
call
mov
mov
mov
push
add
push
mov
push
mov
push
mov
push
call
mov
push
push
xorl
push
push
push
call
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
andl
mov
mov
mov
xorl
call
subl
mov
addl
call
mov
call
and
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
push
mov
mov
push
incl
push
mov
subl
push
push
call
add
mov
mov
call
mov
mov
mov
push
mov
mov
push
push
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
call
mov
push
mov
push
push
mov
push
sub
mov
push
call
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
push
mov
mov
push
call
mov
mov
mov
mov
push
push
mov
mov
push
push
mov
mov
push
call
mov
mov
mov
mov
mov
push
push
push
push
push
call
mov
mov
mov
push
mov
push
push
push
push
call
mov
andl
mov
mov
call
mov
mov
subl
mov
call
mov
mov
andl
call
mov
mov
mov
call
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
add
mov
call
mov
mov
mov
mov
mov
call
mov
mov
push
mov
push
push
push
mov
push
call
mov
call
mov
mov
mov
mov
mov
mov
push
push
push
mov
mov
push
push
call
mov
mov
mov
mov
push
push
mov
mov
push
push
mov
push
call
mov
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
push
mov
push
mov
push
mov
push
mov
mov
push
call
mov
mov
call
mov
mov
call
mov
andl
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
push
push
mov
push
push
push
call
xor
mov
call
mov
mov
push
mov
push
push
mov
push
mov
push
call
xor
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
push
push
push
mov
push
mov
push
call
mov
mov
mov
mov
call
mov
mov
and
call
mov
mov
mov
mov
call
mov
mov
mov
add
mov
push
mov
push
push
push
push
call
mov
mov
mov
call
mov
mov
mov
push
push
push
push
sbb
push
call
mov
push
mov
push
push
push
push
call
mov
call
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
push
mov
push
mov
mov
push
push
mov
push
call
mov
mov
mov
sbb
call
mov
mov
mov
mov
call
mov
mov
call
mov
andl
mov
mov
mov
push
mov
push
push
push
mov
push
call
mov
push
push
push
mov
push
mov
push
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
andl
push
mov
push
mov
push
push
push
call
mov
mov
push
push
mov
push
mov
push
push
call
mov
or
mov
push
mov
push
sbb
push
mov
mov
push
mov
push
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
push
mov
push
push
push
push
call
mov
movl
mov
mov
call
mov
mov
mov
mov
push
mov
push
push
push
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
sbb
call
mov
mov
mov
mov
mov
call
mov
mov
push
push
push
push
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
push
push
mov
push
call
mov
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
push
push
push
push
push
call
mov
mov
push
push
push
mov
mov
push
mov
push
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
add
mov
mov
push
mov
push
mov
push
push
push
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
mov
push
push
mov
push
call
mov
mov
mov
push
mov
push
mov
mov
push
push
push
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
push
mov
push
push
call
mov
mov
mov
call
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
push
push
push
push
mov
push
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
call
mov
mov
mov
push
push
push
push
mov
push
call
mov
mov
call
mov
mov
mov
call
mov
mov
or
mov
call
mov
call
mov
mov
push
push
mov
mov
push
push
mov
push
call
mov
mov
mov
mov
push
push
push
push
push
call
mov
mov
mov
mov
mov
mov
push
mov
push
push
mov
push
mov
push
call
mov
mov
mov
mov
push
push
mov
push
add
push
mov
push
call
mov
mov
call
mov
mov
mov
call
mov
call
mov
mov
mov
mov
push
mov
push
mov
mov
push
push
push
call
mov
add
call
mov
call
call
lea
mov
mov
call
mov
mov
mov
mov
mov
mov
push
push
push
mov
push
push
call
mov
mov
mov
call
mov
mov
push
push
push
movl
mov
push
push
call
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
push
push
push
call
mov
mov
call
call
mov
mov
mov
mov
call
mov
movl
mov
mov
mov
push
mov
push
push
push
mov
push
call
orl
movl
call
mov
mov
mov
push
push
mov
mov
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
push
mov
push
push
call
mov
mov
xor
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
push
push
push
mov
push
push
call
mov
mov
mov
mov
mov
push
push
push
push
push
call
mov
mov
mov
mov
mov
push
push
push
push
mov
push
call
and
mov
or
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
push
push
mov
push
mov
push
mov
push
call
mov
mov
mov
push
mov
push
orl
push
push
push
call
mov
mov
call
mov
mov
mov
mov
push
mov
push
push
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
call
mov
subl
mov
mov
call
mov
call
mov
mov
add
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
push
push
mov
push
push
mov
push
call
mov
mov
call
mov
mov
mov
mov
mov
push
mov
mov
push
push
push
mov
push
call
mov
mov
mov
mov
push
mov
push
mov
mov
push
push
push
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
push
push
push
mov
push
push
call
mov
mov
call
mov
mov
call
mov
mov
call
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
decl
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
push
mov
push
push
push
mov
push
call
mov
mov
push
mov
push
mov
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
add
push
mov
push
push
push
push
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
addl
mov
mov
mov
mov
mov
mov
push
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
mov
push
push
push
mov
push
call
mov
orl
mov
push
push
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
push
push
mov
push
push
push
call
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
push
push
push
push
push
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
push
mov
mov
push
mov
push
mov
push
push
call
mov
andl
mov
call
mov
mov
mov
mov
push
mov
mov
push
push
push
push
call
xor
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
push
call
mov
mov
mov
mov
mov
call
mov
mov
or
mov
push
push
push
mov
push
mov
push
call
mov
push
push
push
push
mov
push
call
mov
mov
mov
push
push
mov
mov
push
push
push
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
push
push
push
mov
push
push
call
mov
mov
mov
call
mov
mov
mov
push
push
mov
push
push
push
call
mov
mov
push
mov
push
push
push
mov
push
call
mov
mov
mov
mov
xorl
call
decl
mov
push
push
mov
orl
push
push
push
call
mov
mov
call
mov
mov
mov
mov
push
push
mov
push
mov
mov
push
push
call
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
call
lea
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
push
mov
mov
push
push
mov
push
mov
push
call
push
push
push
mov
push
mov
push
call
mov
mov
mov
push
push
add
mov
push
xor
push
push
call
mov
mov
mov
and
mov
call
mov
mov
and
call
mov
mov
mov
mov
mov
push
push
push
mov
mov
push
decl
push
call
mov
mov
mov
lea
mov
push
mov
push
push
push
push
call
decl
mov
call
mov
mov
addl
mov
call
mov
mov
mov
call
mov
call
mov
mov
mov
mov
push
mov
mov
push
mov
push
push
push
call
mov
movl
call
mov
call
mov
mov
mov
mov
call
mov
adc
call
mov
mov
mov
mov
push
mov
push
push
push
push
call
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
xor
mov
mov
mov
push
mov
push
push
push
mov
push
call
mov
andl
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
push
mov
push
push
push
push
call
mov
mov
mov
mov
push
mov
push
sub
push
push
push
call
mov
addl
mov
mov
mov
push
mov
push
mov
mov
push
mov
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
push
push
mov
push
push
push
call
mov
mov
mov
mov
call
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
add
cmp
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
dec
jne
mov
mov
add
call
mov
mov
mov
mov
andl
call
mov
mov
mov
push
push
mov
push
mov
push
push
call
mov
mov
addl
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
or
push
push
mov
push
push
call
mov
subl
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
call
mov
mov
mov
push
push
mov
push
push
mov
push
call
mov
sbb
call
mov
subl
call
xor
mov
mov
push
push
mov
mov
push
mov
push
and
push
call
mov
mov
call
adc
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
xor
push
mov
push
call
mov
call
mov
mov
mov
mov
call
mov
addl
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
push
push
push
mov
push
andl
push
call
mov
mov
mov
sbb
push
mov
push
push
mov
push
mov
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
orl
call
mov
mov
mov
call
mov
mov
call
decl
mov
call
mov
call
mov
mov
mov
mov
push
push
push
mov
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
add
call
add
mov
call
mov
mov
mov
or
push
mov
or
push
push
push
push
call
mov
mov
mov
call
mov
andl
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
push
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
push
mov
push
adc
mov
push
push
mov
push
call
mov
mov
mov
mov
push
push
mov
mov
push
mov
push
mov
push
call
mov
mov
add
mov
mov
call
mov
and
mov
mov
mov
mov
call
mov
call
sbb
mov
mov
call
mov
mov
mov
call
mov
mov
mov
push
push
mov
push
push
push
call
mov
mov
mov
call
mov
mov
push
mov
push
push
mov
push
mov
push
call
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
push
mov
xorl
push
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
push
push
mov
push
call
mov
call
mov
mov
call
call
mov
mov
mov
mov
call
mov
mov
call
subl
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
push
push
push
push
push
call
mov
mov
mov
xor
call
mov
mov
lea
call
mov
mov
mov
push
push
mov
push
mov
push
mov
push
call
mov
mov
mov
sbb
call
mov
mov
mov
push
mov
push
adc
push
push
mov
push
call
mov
mov
sub
call
mov
mov
mov
push
mov
mov
push
push
push
push
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
mov
mov
push
push
push
push
push
call
call
mov
mov
mov
call
mov
decl
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
push
mov
push
push
call
adc
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
xorl
mov
mov
call
mov
mov
mov
mov
mov
push
push
push
mov
push
push
call
mov
mov
push
mov
push
push
mov
push
push
call
mov
mov
push
push
push
push
mov
mov
push
call
mov
mov
push
mov
push
mov
push
push
push
call
mov
call
mov
mov
xor
call
andl
mov
and
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
addl
mov
mov
call
mov
mov
mov
push
mov
push
push
push
push
call
mov
mov
mov
mov
push
push
mov
push
mov
push
mov
push
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
push
push
mov
push
andl
push
mov
push
call
mov
mov
mov
mov
and
mov
push
mov
push
push
push
mov
push
call
mov
mov
mov
push
mov
push
mov
push
push
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
andl
mov
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
mov
mov
xorl
mov
mov
mov
inc
mov
cmp
jne
add
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
call
mov
push
push
mov
push
push
push
call
mov
mov
mov
call
call
call
mov
mov
mov
call
push
push
mov
mov
push
push
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
push
push
mov
push
push
call
mov
mov
subl
call
or
mov
mov
call
call
call
mov
mov
mov
call
mov
mov
mov
mov
call
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
push
call
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
sub
leave
ret
inc
push
add
inc
add
add
sub
aaa
dec
push
rolb
pop
mov
mov
fidivrs
add
popa
cmpb
loop
je
fmulp
or
xchg
inc
and
mov
mov
test
addl
sub
jg
mov
mov
pop
jg
mov
call
ds
push
mov
inc
and
fiadds
inc
mov
aaa
inc
out
inc
clc
ret
sub
mov
sub
aam
pop
xchg
stos
xchg
adc
in
dec
push
test
push
mov
mov
sub
fisttps
mov
incl
ret
rclb
adc
mov
mov
jmp
xchg
inc
imul
int3
outsb
dec
stc
xchg
mov
fdivrl
push
xchg
mov
cmp
popa
cmpsb
sti
mov
pop
jl
imul
clc
fdiv
mov
nop
mov
dec
xor
xchg
ja
mov
xor
outsb
fdivrl
cltd
inc
fidivrs
ss
push
cwtl
sub
repnz
pop
mov
mov
insb
xchg
add
loopne
stc
xchg
test
out
ss
cmc
loop
xchg
aaa
mov
push
stc
xchg
xchg
mov
push
cwtl
pop
mov
mul
fwait
mov
dec
outsb
aaa
jo
mov
ss
stc
xchg
xchg
mov
push
rcll
dec
push
jb
fnstsw
xchg
int3
dec
stc
xchg
fisttpll
test
and
mov
fdivrl
fsubp
sahf
mov
dec
stc
xchg
xchg
mov
pop
jge
shlb
ss
fidivrs
inc
sub
mov
aaa
das
dec
cwtl
cs
fidivrs
ss
aad
and
test
ficomps
push
and
mov
jbe
dec
ds
mov
aaa
xor
jp
imul
mov
sbb
je
fnstsw
cmp
sti
xchg
pop
ja
sbb
aam
mov
fisttps
cmp
mov
xor
adc
fdivrs
xor
stos
movsl
inc
xchg
mov
int
ret
push
imul
int3
outsb
dec
stc
xchg
mov
fdivrl
xchg
xchg
mov
cmp
dec
rcrb
xchg
scas
mov
loopne
pop
mov
dec
sub
xchg
inc
and
cmp
mov
lock
mov
aad
repnz
mov
hlt
outsb
dec
stc
xchg
adc
shrl
sarb
or
ds
and
call
pop
in
mov
and
adc
mov
xchg
ss
stc
stc
xchg
xchg
mov
addr16
popa
cmpb
mov
loop
mov
out
mov
jg
ss
dec
mov
push
jg
cld
sbb
add
inc
sbb
lret
or
out
faddl
xchg
mov
xlat
dec
lods
cmpsb
inc
rcrl
cmp
ss
shl
xchg
xchg
idivb
adc
mov
mov
iret
xchg
repz
fistpll
test
sti
adcl
ds
aad
xchg
js
test
mov
fwait
dec
and
xchg
push
xor
adc
xchg
test
mov
addr16
xor
mov
jecxz
dec
faddl
mov
pop
jns
cwtl
dec
sbb
mov
lahf
orb
in
outsb
daa
cmp
mov
or
imul
aaa
mov
ret
fidivrs
aaa
adc
fdivrp
cmp
aaa
mov
lds
pop
in
dec
stc
xchg
xor
push
int
mov
cmp
aaa
mov
call
mov
outsl
xchg
adc
rcl
stc
mov
stos
xor
mov
in
mov
push
xchg
sbb
or
ret
dec
cli
cmpb
mov
in
mov
pop
inc
mov
jb
data16
lret
jecxz
xchg
int
push
push
mov
stos
test
mov
push
jge
fsts
cli
inc
mov
push
pop
or
mov
nop
jae
sbb
inc
fwait
outsb
xor
adc
inc
das
out
sbb
ret
es
stc
jl
stc
xchg
xchg
mov
push
jl
imul
iret
push
mov
cmp
cmpb
jl
xchg
dec
xor
add
loopne
xchg
mov
sbb
aaa
mov
dec
stc
xchg
xchg
xchg
cmp
sahf
leave
mov
fidivrs
xor
fidivrs
cmpb
rolb
jg
aas
cmp
lret
jbe,pt
push
subb
dec
mov
ss
dec
push
nop
jge
mov
sbb
fidivrs
fistpll
fidivrs
ss
or
ss
cmp
ss
push
xchg
xchg
mov
xor
fstpt
inc
ja
stc
mov
shlb
incl
ficoms
cmpsl
nop
clc
xchg
xchg
jle
mov
inc
dec
cmp
rorb
movhps
xchg
jmp
xchg
xchg
incb
xchg
inc
push
inc
int
ret
icebp
sbb
scas
xor
das
mov
fstpt
xor
adc
into
ss
mov
xchg
outsb
xor
mov
mov
montmul
cmpsb
inc
aas
loope
cmp
pushf
je
add
cli
fucomp
cmpsl
jns
loopne
clc
dec
out
pop
mov
out
lods
ds
out
in
jge
testl
jge
xchg
out
jp
adc
jnp
in
mov
sub
inc
fs
ljmp
inc
ljmp
js
das
inc
fstps
adc
fs
pop
lret
xchg
add
jg
xchg
adc
imul
inc
mov
pop
xchg
adc
inc
xchg
ficomps
dec
sbb
and
cmpsl
jb
loopne
or
xor
sub
out
xlat
or
jbe
mov
stos
imul
xor
daa
scas
ss
ficoms
and
jb
mov
jb
inc
cmp
jmp
or
imul
std
aam
popa
loop
add
jbe
xchg
popa
jbe
fidivl
cmc
movsb
or
fimull
sbb
cmp
xchg
movsl
test
leave
insl
sbb
and
in
scas
pop
mov
call
dec
adc
inc
cmp
inc
mov
pop
xchg
push
mov
jmp
sarb
push
in
mov
dec
stc
mov
mov
mov
lea
mov
adc
mov
ss
fidivrs
xor
fnstsw
imul
pop
sbb
dec
arpl
xor
adc
mov
aaa
int
inc
xchg
xchg
inc
or
mov
daa
jbe
mov
add
jmp
testb
lds
cli
jmp
daa
xlat
jg
mov
outsb
cwtl
cmpsl
mov
inc
cmp
int3
mov
rcrb
xor
fimull
repnz
push
fnstsw
icebp
adc
out
dec
pop
adc
ds
jno
loope
xchg
mov
ss
fidivrs
ss
test
insb
mov
pop
outsb
inc
cmpsb
je
ss
sarl
mov
dec
stc
cmp
mov
aaa
mov
arpl
ss
dec
stc
jp
fnstsw
cmp
int
xchg
xchg
into
jmp
rol
fiaddl
loop
cmp
xchg
neg
mov
ss
fidivrs
ss
popa
xlat
ss
int
adc
fnstsw
xchg
xchg
mov
ja
xor
sarb
int
fnstsw
cmp
dec
stc
sbb
xchg
xor
xchg
xchg
xchg
mov
lret
out
xchg
sbbl
jbe
mov
cmp
popa
mov
xor
cmp
adc
out
ds
xlat
jp
sbb
out
dec
decl
hlt
fdivrl
adc
fnstsw
stos
test
mov
test
lcall
mov
xchg
mov
stc
mov
xchg
mov
sarb
sbb
idivb
aad
inc
xchg
or
mov
push
int3
fnstsw
clc
mov
jecxz
paddusb
mov
jle
mov
test
bound
aam
stos
test
mov
ss
stc
xchg
push
imul
into
int3
out
imul
lahf
xchg
xchg
pop
xchg
dec
xchg
xor
xor
add
fmuls
lret
fmulp
mov
fsubrs
dec
stos
mov
cmp
inc
fnsave
cmp
or
mov
dec
lock
mov
aaa
sub
sbb
inc
arpl
xor
out
fdivrl
or
int
xchg
xchg
jne
mov
sbb
jae
arpl
xor
xchg
mov
in
dec
stc
xchg
mov
adc
inc
push
mov
cmovp
xchg
rolb
stc
sbb
mov
aam
push
test
mov
les
dec
stc
xchg
adc
ss
roll
and
mov
in
or
mov
stos
test
mov
cmp
loop
xchg
mov
push
rorb
mov
mov
inc
lds
mov
popa
lods
cmp
dec
jl
adcl
movsb
fisttps
int
frstor
mov
in
pusha
mov
adc
cmp
inc
ss
stos
mov
adc
add
add
jns
js
add
popa
add
loope
mov
xor
or
mov
xor
push
call
sub
mov
ret
pop
je
push
mov
add
xorl
xor
push
xor
add
inc
ror
xchg
dec
mov
movsl
mov
adc
or
push
or
cmpsl
or
xchg
nop
int
sbb
adc
and
or
cmp
push
mov
cmpsb
dec
sbb
stc
rorb
or
xchg
inc
inc
test
rcll
ja
test
mov
lcall
push
jle
pop
or
sbb
jl
or
adc
nop
arpl
call
sbb
mov
inc
dec
cmp
push
dec
sbbl
cli
cmp
mov
push
ds
add
or
jno
or
enter
fwait
cltd
fucomp
lret
dec
fadd
dec
ret
in
add
in
pop
cmc
add
addl
dec
gs
pusha
dec
xor
dec
je
xor
int3
xor
mov
push
push
add
or
adc
or
push
sbb
ret
or
popa
jle
push
jmp
add
lock
cmpsb
lods
mov
mov
cmp
sub
xchg
cmp
cmp
cmp
in
inc
in
jle
sarl
cld
sbb
add
adc
push
sub
idivl
cltd
jge
jg
int
sub
pop
cmp
aaa
ds
xlat
mov
xchg
fdivrl
clc
push
sbb
inc
add
or
adc
shll
cli
hlt
data16
xchg
test
js
mov
sbb
shlb
arpl
mov
or
pop
mov
ss
ficomps
xchg
and
mov
sahf
adc
fisttpll
mov
mov
jno
not
sti
xor
add
rcll
lret
mov
fidivs
jge
js
push
popf
xchg
push
idivb
insl
jns
sti
mov
je
lret
jle
push
push
loop
dec
cmp
mov
dec
insb
push
and
dec
sbb
add
or
ret
jne
sti
insb
or
lcall
or
addr16
jns
push
sbb
add
or
fsubs
and
adc
mov
test
loop
stos
cmp
pop
dec
je
pop
dec
aas
fwait
cmp
xor
scas
aaa
pop
popa
fistpll
push
pop
adc
int3
push
dec
dec
inc
pop
rorl
sbb
loop
mov
fisubrs
ljmp
cmp
sub
jl
or
out
inc
hlt
sbbl
lods
loop
je
les
div
or
jge
xchg
and
inc
sbbl
cmp
xlat
decb
dec
fimull
or
sub
fsubr
in
cmp
mov
mov
xchg
mov
xchg
pushf
imul
mov
or
call
call
cmp
leave
sarl
fwait
lea
inc
pop
mov
push
into
pop
ds
fstpt
fistpl
push
test
adc
fsts
insl
xchg
dec
fildl
lock
clc
and
sub
cmpsl
xor
mov
pop
aad
mov
and
test
je
adc
cmp
adc
add
dec
es
daa
enter
pop
call
test
insb
add
pop
out
popf
pop
rorl
push
xchg
lea
and
add
dec
das
pop
and
push
lods
pop
mov
cmpsl
xchg
lea
fldl
mov
iret
or
sub
pop
js
fldl2e
pop
mov
call
push
iret
jmp
clc
psubusw
jmp
inc
cmp
pop
xlat
insb
jmp
push
push
aas
xchg
push
std
dec
push
mov
arpl
xor
adc
sbb
nop
pop
sbb
and
or
pop
mov
aam
pop
sbb
ja
fcomip
cmp
out
xchg
mov
mov
xchg
subl
jno
test
nop
pushf
push
jno
insl
lea
lods
lcall
mov
fmull
sub
xlat
pop
rcll
push
push
push
leave
inc
push
inc
cmp
mov
or
ficomps
mov
inc
jle
push
pop
into
lea
pop
movsl
rcrb
mov
push
stos
add
stos
lahf
or
in
cmp
aad
cmp
mov
pushf
je
sub
add
sahf
mov
sbb
sub
add
arpl
addsubpd
test
hlt
push
xor
ror
insl
xchg
in
pop
or
xor
xor
sbb
dec
pop
mov
mov
pop
cld
lret
xchg
inc
mov
sbb
stc
out
ss
pop
out
inc
sub
inc
shl
fistl
notl
add
or
mov
lcall
test
mov
stos
popa
pop
inc
cmp
jne
mov
xchg
jmp
pop
xchg
xor
sbb
loopne
ss
test
dec
aas
mov
out
js
call
js
negl
push
or
or
insb
jmp
jno
xchg
adc
sbb
and
inc
aad
mov
push
ss
push
inc
sub
pop
std
add
ficoms
call
out
stos
repz
xchg
cmp
out
dec
dec
mov
sub
pusha
adc
jnp
fcmovbe
popf
sti
cmp
cmp
insb
cmp
xor
xchg
push
cmp
push
pop
cmp
jne
aaa
pop
xchg
add
add
mov
or
jne
or
mov
xor
jbe
rclb
push
sbb
add
inc
or
test
shlb
jne
adc
mov
push
ss
aam
mov
jno
jae
lea
jge
incb
sarb
repz
filds
scas
jns
or
dec
jmp
push
xchg
daa
call
jmp
cmp
in
repz
mov
repz
cmp
jmp
popf
jae
cmp
sbb
sub
loopne
ficomps
nop
orb
sti
iret
insb
add
stc
cmp
int
fcmovu
das
bound
sbb
or
jmp
mov
popf
mov
jge
cmp
divl
mov
adcb
stos
jl
xchg
push
cmp
daa
sti
jle
pop
jmp
fidivrs
inc
xor
mov
add
dec
aaa
cmp
mov
mov
pop
nop
dec
add
inc
sbb
cwtl
rorb
jno
addr16
add
jg
or
pop
data16
dec
arpl
setne
cmp
sti
js
repnz
test
sub
insl
fdiv
inc
fdivrl
repnz
push
je
pushf
jecxz
call
or
loop
cmp
xchg
adc
aam
movsl
dec
and
push
int3
shl
testl
jle
aas
add
and
xor
mov
add
add
dec
nopl
sbb
mov
jno
sub
pop
inc
push
stc
andl
add
inc
adc
xchg
pop
mov
or
testb
push
mov
sub
xchg
inc
aaa
cmp
push
iret
aaa
rorb
fcmovbe
call
and
pop
push
add
mov
fmulp
mov
lds
popf
push
push
stos
jns
fadds
jo
jns
pop
int
or
ljmp
ret
stos
jns
repz
add
cltd
inc
pop
loope
pop
adc
mov
out
jnp
add
push
inc
cmp
push
dec
pop
add
aas
stc
fisubrl
rcrl
mov
pop
xor
daa
xchg
push
sub
add
push
xor
push
cmp
mov
je
push
lar
or
ja
leave
pop
or
xchg
sbb
and
adc
loopne
fisubs
lds
lea
push
out
stos
inc
sub
outsl
add
inc
add
sbb
je
add
mov
or
insb
cmpsb
lahf
xchg
push
cmp
aad
stos
mov
adcl
std
or
mov
or
flds
in
in
daa
repz
xor
dec
fnstenv
stos
popa
and
inc
or
mov
sahf
adc
popa
pop
mov
add
jmp
out
mov
imul
aam
or
test
xor
and
adc
push
in
inc
or
dec
call
add
mov
push
inc
std
test
fidivrs
xor
cmp
in
test
call
mov
add
pusha
and
outsb
inc
popf
jo
das
addr16
sub
mov
sbb
jne
daa
repz
daa
cmpsb
dec
out
cmp
pcmpgtd
jae
cmovp
or
pop
or
cmpsl
mov
add
aas
mov
add
adc
adc
cmp
jecxz
js
orb
xor
or
mov
out
jne
mov
cmp
or
adc
inc
add
mov
push
jl
xor
and
aas
jge
out
cmp
cmpsb
pop
add
mov
adc
movsb
ja
bound
dec
sbb
mov
cmp
fisubrl
sarb
push
dec
call
leave
mov
pusha
cmp
add
add
mov
aad
and
clc
sbb
mov
cmp
mov
rorl
jb
dec
xchg
rcrb
or
ret
cmp
dec
cmp
xchg
or
lods
js
and
jle
leave
mov
pop
xor
aas
lea
rcl
push
push
push
xor
mov
lcall
dec
dec
mov
push
cmp
mov
data16
test
nop
shll
inc
adc
cmp
dec
dec
cmp
nop
and
jl
mov
fistpl
mov
ret
mov
test
or
dec
sbb
cmp
mov
test
sbb
aas
fdivl
jmp
xchg
push
mov
push
mull
mov
mov
pushl
test
and
push
adc
xor
and
cmp
adc
jns
xchg
mov
push
adc
add
or
sbb
adc
or
cmp
add
movsl
cmp
push
enter
std
mov
call
xor
mov
test
sbb
ja
mov
adc
cmpsb
mov
sub
cmp
jg
dec
inc
sub
jo
or
adc
les
sbb
mov
cmp
scas
cmp
jne
iret
sub
sbb
popf
loop
xchg
stc
lods
or
or
fsubs
int
stc
outsl
les
xchg
mov
pop
cmp
mov
mov
xor
jmp
inc
cltd
cmp
mov
adc
je
adc
jg
sub
stc
inc
test
insb
or
call
dec
and
shll
and
rorl
ret
xchg
and
xchg
ja
and
push
enter
shrl
jbe
imul
pop
lret
movsb
inc
dec
cmp
sqrtps
mov
and
push
notl
and
mov
xlat
movsb
add
pop
or
dec
or
mov
adc
push
mov
dec
repnz
stos
lods
rclb
cmp
jmp
add
enter
cmpsb
jmp
and
jnp
jb
push
push
out
inc
sbb
or
mov
je
cmp
cmp
or
and
sar
repnz
xchg
adc
pop
xchg
mov
mov
or
jecxz
jbe
lock
icebp
dec
add
mov
dec
pusha
jno
mov
mov
add
and
add
or
push
inc
add
mov
repz
pop
inc
mov
inc
std
subl
xor
lret
into
sub
sub
and
jecxz,pn
js
aas
nop
stc
xchg
push
sarb
lock
cmp
sbb
arpl
call
ljmp
mov
into
cld
add
pop
add
jmp
xor
push
push
xchg
or
pop
mov
cmp
cwtl
pop
inc
mov
inc
pop
xchg
fisttpll
test
ss
lret
imul
cltd
push
pop
xchg
or
cmp
repnz
out
lret
or
mov
inc
xor
jb
out
aas
outsl
mov
ret
push
adc
xlat
push
adc
jb
sub
testb
push
sarl
pop
cmp
jae
dec
fneni(8087
sbb
xor
xor
pop
inc
sbb
pushw
test
jns
xchg
pop
push
jbe
leave
mul
data16
cmp
bound
inc
xor
pop
adc
jmp
je
subb
xor
dec
aam
mov
in
push
ss
sbb
stos
push
std
jecxz
or
into
rclb
push
inc
pop
mov
xchg
out
pop
xchg
fbstp
stos
in
test
mov
mov
sbbl
xchg
adc
and
sbb
dec
daa
sbb
adc
or
adc
aad
jo
sbb
sub
aam
call
ss
test
lret
sti
or
notl
mul
into
jge
aas
psllq
pop
mov
adc
or
inc
and
jb
in
mov
or
imulb
test
cmp
bound
jb
push
scas
in
gs
xchg
cmpsl
mov
scas
jl
push
cltd
adc
lods
and
pop
xor
pop
out
jge
das
xchg
mov
daa
cmpsb
cmp
jmp
pop
test
lret
dec
add
adc
pop
shll
adc
test
jne
dec
add
mov
mov
jg
scas
push
adc
sub
je
adc
sbb
test
or
daa
ss
lds
fmulp
inc
cltd
and
mov
inc
js
or
cmp
fimull
mov
sub
rclb
lock
test
lcall
dec
jne
push
or
mov
xor
pop
or
pop
or
mov
sub
pop
ud2
sbb
xor
mov
cmp
fdivrl
fdivrs
sub
push
cs
mov
fmul
test
dec
add
inc
lret
jnp
clc
sub
repnz
aad
or
lret
psraw
and
xchg
dec
jae
je
das
adc
fsubrs
push
push
push
pop
mov
sbb
js
ds
dec
mov
pop
dec
inc
sub
sbb
push
lock
push
fwait
sub
call
subb
lea
adc
mov
test
or
inc
xchg
sbb
test
inc
fld1
leave
pop
incb
cmp
xchg
mov
cmc
and
or
sub
mov
push
push
aas
cltd
add
mov
mov
imul
dec
and
xor
popf
adc
push
sub
popf
sbb
lea
xchg
lahf
pop
adcb
fmul
int
cmpsl
inc
pop
add
cli
cmp
lret
call
cmp
inc
aaa
jle
push
rcrl
out
push
fbstp
movsb
jecxz
and
fadds
sub
imul
inc
xor
pop
icebp
pushf
cmp
cmpsb
sub
orl
dec
insl
fs
cmp
cwtl
mov
or
sub
add
or
xor
push
inc
pop
and
or
cmp
dec
pop
cmp
push
aas
or
sub
inc
mov
call
jo
push
mov
hlt
or
call
lahf
or
sub
andl
jne
or
cmp
subl
push
or
xor
psubsb
mov
mov
fcompl
adc
and
mov
push
lret
cli
mov
mov
mov
js
mov
push
push
push
scas
push
je
dec
push
xor
jge
pop
mov
vphsubbw
imul
mov
cmpsl
rclb
pusha
call
sub
add
fwait
bsr
push
movsb
lds
adc
jbe
inc
dec
push
pop
mov
mov
cmp
insb
mov
into
xchg
je
adc
jge
js
push
pop
cmp
js
and
cmp
test
adc
mov
jns
mov
jbe
jne
mov
loopne
push
subb
dec
cmp
xor
or
jg
add
lret
cmp
mov
xchg
lret
inc
or
call
inc
jg
insb
mov
pop
lea
fsubs
push
pushf
push
push
mov
sub
jecxz
inc
cmp
xchg
cmpsl
cmp
cmp
push
call
pop
jmp
xor
or
enter
xchg
or
out
push
mov
cmp
ret
jmp
pop
dec
ss
jl
push
inc
mov
and
mov
mov
xchg
xor
add
rcl
imul
rolb
dec
mov
push
f2xm1
call
imul
fcomip
mov
cwtl
sbb
inc
cmp
or
and
dec
sub
repz
push
idivb
cmc
add
add
movsl
push
test
cli
dec
add
fwait
test
and
lret
push
mov
cmp
lea
sbb
push
popf
add
fnsave
push
sbb
cmp
sbb
inc
hlt
dec
inc
and
xor
inc
fisttpll
push
lea
stc
aam
orl
mov
xchg
rep
mov
inc
data16
inc
pop
inc
sarl
test
sarl
adc
insb
add
dec
cld
cmp
mov
xor
sbb
in
push
mov
arpl
inc
push
push
cmp
push
in
inc
dec
repz
insb
popa
add
dec
or
pop
movsl
fdivrl
insb
push
mov
call
movsb
xchg
push
ret
fs
sub
mov
popa
mov
fldt
test
push
pop
mov
dec
cld
ja
mov
arpl
add
xchg
jg
fcomp
cld
push
pop
cmp
lret
sbb
pop
jo
ja
lea
adc
inc
or
pop
adcl
and
mov
cmp
roll
call
test
lock
dec
inc
out
mov
jnp
mov
push
jno
lods
test
sub
cmp
aaa
pusha
outsl
movsb
xchg
fcmovne
stos
or
cvtpi2ps
cmpsb
pop
dec
dec
aas
push
lret
adc
or
call
mov
sbb
adc
mov
mov
lds
push
dec
jae
sbb
push
lea
sub
or
es
mov
cmc
insb
cwtl
mov
sub
mov
mov
ror
fdivl
xor
outsl
icebp
dec
int3
pop
sbb
push
stc
lret
je
xchg
dec
pop
push
or
inc
jne
or
pop
pop
mov
push
mov
add
cmp
and
jmp
sub
xchg
mov
cmc
bound
jo
lds
push
imulb
inc
rol
push
in
mov
mov
dec
ss
call
sbb
es
or
sbb
mov
jl
mov
mov
or
add
insl
pop
mov
loopne
leave
inc
or
push
dec
or
pop
dec
dec
cmpsb
cs
and
ds
out
clc
mov
lods
jl
push
add
fistl
mov
out
mov
mov
lock
sub
jbe
mov
inc
mov
dec
or
xor
das
jmp
mov
mov
clc
inc
es
mov
cmp
call
and
xchg
es
stos
mov
sub
jae
jmp
pop
adc
shl
cmc
inc
rcll
cmc
sbb
dec
xor
test
gs
ffree
mov
mov
cmpsb
jo
jge
mov
in
fs
lret
jecxz
mov
jo
outsl
add
fcmovb
lods
lret
popf
fldl
movsl
add
mov
push
and
sub
call
fldenv
lods
testl
or
cli
pop
push
mov
dec
ret
mov
add
inc
dec
ss
dec
loope
in
mov
jmp
enter
mov
mov
and
and
and
mov
add
in
pop
push
insb
lock
lods
cmp
ret
xor
mov
dec
dec
jl
pop
pop
push
pop
les
or
rclb
mov
xchg
nop
mov
xorb
xor
pop
xlat
jge
xor
sub
mov
and
rcll
add
and
je
loope
test
std
pusha
mov
mov
adc
lret
mov
mov
jmp
fwait
dec
cmp
jmp
cli
jmp
adc
dec
fildll
out
cmpb
test
or
ret
jns
adc
pop
inc
push
xor
mov
push
test
pop
lock
iret
fwait
inc
or
addl
mov
in
icebp
xor
sbb
test
cli
sub
mov
call
dec
loopne
push
jo
sbb
dec
adc
push
xchg
stos
xchg
insb
inc
jp
test
in
lahf
mov
push
into
ret
jnp
jl
dec
ss
mov
fs
in
rolb
mov
jge
jno
mov
mov
call
outsl
sbb
shl
fnstsw
cmpsl
xchg
mov
mov
or
push
shll
mov
jmp
pop
xor
lea
fdivl
leave
xchg
inc
mov
push
lods
mov
xchg
sarl
xchg
sub
jmp
shlb
mov
mov
es
cmp
rcrl
mov
movsb
dec
ljmp
pop
sbb
dec
dec
rclb
jno
dec
jno
sbb
lods
pop
and
mov
out
or
add
aas
data16
pusha
add
popf
cs
sub
mov
inc
rorb
cmc
pop
mov
das
cwtl
cmp
push
rcll
int
lds
mov
push
xor
mov
and
out
mov
jg
push
stos
lods
adc
pop
push
adc
cmp
out
aaa
out
xor
jecxz
sbbl
dec
add
jecxz
push
or
push
push
push
mov
testb
cmpsb
xor
sbb
push
cmpsb
mov
sub
int
out
or
adc
mov
sti
movsb
lret
add
lret
cmp
xor
dec
movsl
not
call
mov
pop
pop
push
ret
hlt
fldcw
push
cmp
out
les
test
adc
push
push
pop
mov
mov
sar
ds
lods
hlt
adc
mov
push
enter
testb
testl
fwait
mov
jle,pt
sbb
mov
fnstsw
out
fcmovne
mov
js
mov
ja
add
lahf
mov
sbb
push
call
lods
ds
pop
mov
or
mov
inc
loop
xor
add
and
inc
push
fstl
ret
vpshufd
inc
inc
popa
call
fmuls
sub
jmp
sub
andb
scas
addb
and
lods
or
inc
mov
movsb
cmpsl
xchg
push
xorb
jmp
or
xor
or
test
adc
xchg
rol
fistl
dec
ret
stc
inc
mov
sub
add
dec
aaa
lods
cmp
gs
mov
shlb
jno
push
movb
lods
ds
cld
push
enter
mov
cmp
cmc
je
push
test
enter
testl
push
jmp
test
xchg
xor
or
out
cmp
int
push
ret
insl
loop
sbb
sub
cmp
daa
adc
cmp
lds
pop
push
outsb
adc
mov
bound
or
lds
mov
jl
leave
inc
jecxz
pop
dec
pop
pop
leave
mov
test
es
sub
xchg
icebp
mov
sbb
cmpsb
xchg
and
cmp
pop
fstl
adc
sbb
jp
hlt
adc
int3
mov
xchg
sub
dec
mov
aaa
mov
test
inc
or
arpl
loop
mov
bound
das
add
mov
mov
stos
fs
into
mov
jecxz
mov
xchg
dec
push
mov
pop
mov
movsl
ja
fdivs
jae
jb
enter
ss
lahf
inc
xor
in
inc
in
shr
in
sbb
dec
cmp
dec
jp
cmc
mov
cmp
mov
pop
jne
movsb
aam
jnp
inc
push
adc
enter
pushf
data16
jno
call
inc
fisubrs
fdivs
aad
lods
rorl
loopne
sbb
push
jbe
inc
cmp
pop
into
jl
mov
mov
push
lock
mov
push
inc
xor
pop
add
inc
movsl
sub
enter
mov
mov
jbe
sbb
pop
imul
scas
loopne
pusha
push
jbe
sub
mov
stos
dec
adc
xchg
or
adc
mov
add
aaa
sub
adc
pop
scas
ret
mov
inc
mov
mov
mov
mov
or
std
aad
clc
mov
cmc
pop
popf
aas
les
inc
lret
push
mov
inc
outsb
fildl
mov
loop
push
outsb
stos
adc
xor
jae
inc
sbbl
leave
fbstp
push
rclb
push
xchg
sbbb
fbstp
xchg
xchg
popf
cltd
fisubs
in
add
mov
sti
aaa
dec
mov
sub
in
mov
and
mov
mov
bound
fidivs
mov
cld
and
push
pop
dec
imul
adc
jnp
cmp
mov
scas
call
cwtl
mov
sub
sub
xor
fwait
xor
mov
inc
jne
stos
outsb
adc
inc
mov
dec
sahf
scas
mov
sub
cmp
roll
sbb
inc
mov
stc
dec
mov
mov
xor
xchg
into
jnp
dec
dec
cmp
stos
das
mov
pop
cmpsl
insl
or
cmp
sub
jl
jecxz
adc
int
frstor
lahf
shlb
inc
or
dec
adc
push
enter
call
jmp
cmp
sbb
mov
inc
enter
cwtl
xorl
push
js
cli
shl
and
or
sbb
divl
mov
sti
outsb
or
cltd
sbbb
ret
add
cmp
fisttpll
add
jne
pushf
leave
in
in
pop
fstpl
add
mov
fstpt
xor
sbb
leave
test
mov
xchg
cmp
adc
push
xor
sub
xor
mov
dec
push
stc
fisubl
fstpt
scas
push
movsb
pop
sub
iret
divb
out
mov
xor
sub
cmpsl
cmp
cmp
pop
add
sub
mov
jge
xchg
mov
sub
jl
add
and
mov
dec
mov
and
subb
rorb
cmp
cmp
gs
mov
mov
mov
or
stos
sti
sub
out
dec
cmc
in
or
xor
push
lret
mov
mov
jb
adc
cltd
jae
cltd
mov
jo
sbb
rorl
sub
lods
inc
push
mov
xor
add
pop
into
mov
cmp
inc
stos
rclb
sbb
icebp
xchg
xchg
and
inc
shl
push
and
mov
sub
clc
shlb
pushf
sbb
sahf
cli
push
xchg
adc
mov
rcrl
pop
mov
dec
pop
out
or
ret
adc
in
jbe
into
add
pop
clc
pusha
aaa
xorb
movsl
or
fsubr
aaa
jecxz
xor
loope
push
pop
or
jmp
cmp
mov
xsaves
sar
xor
imul
xor
push
dec
dec
imul
inc
xlat
sbb
add
pop
mov
call
cmp
pop
scas
jl
adc
pop
test
cli
repz
or
pop
cwtl
repnz
cmp
or
or
add
cmp
inc
test
xor
scas
lock
sarl
jb
xor
imul
sub
enter
stc
ja
out
das
cwtl
mov
push
sub
ds
push
xchg
in
and
pop
sbbb
iret
push
nop
mov
shrl
jge
lret
or
bnd
jbe
pushf
push
pop
jb
ret
cmc
or
addr16
xchg
push
rorb
or
jne
loopne
dec
add
hlt
repz
dec
stc
lock
mov
or
inc
sbb
jne
jmp
xchg
ret
icebp
adc
xor
jbe
shll
mov
pop
test
stos
and
and
push
mov
adc
jbe
jae
clc
dec
sbb
popf
jne
shlb
clc
and
sub
jmp
fnstcw
push
cwtl
cmp
loop
pop
jg
xchg
mov
mov
leave
lock
mov
das
jge
outsl
sub
jnp
in
add
xchg
mov
sbb
dec
mov
mov
pop
inc
dec
sub
inc
push
lahf
lods
add
jmp
xor
adc
icebp
push
xor
mov
xor
dec
shlb
pop
jns
adc
xchg
into
xchg
and
mov
sar
je
inc
fimuls
into
notb
es
mov
mov
mov
push
dec
cmpsb
lret
hlt
sbb
inc
mov
pop
lret
into
cmpsl
or
call
push
and
dec
into
arpl
fsub
mov
push
jbe
push
mov
cmp
cmp
mov
mov
test
pop
cmp
aaa
xor
jns
movsb
add
mov
xor
or
cmp
pop
or
adc
wbinvd
loope
pop
pop
inc
mov
jmp
cmpsb
jmp
cmp
sbb
cmp
out
add
psubsw
push
cli
dec
shrl
mov
js
sub
mov
out
aaa
jmp
int
ds
arpl
es
adc
pop
cmp
inc
sbb
push
mov
add
pushf
mov
nop
adc
addr16
enter
and
or
xor
fildll
call
in
mov
or
stos
jo
xor
pushf
ret
xchg
fwait
shl
into
mov
inc
mov
jno
or
ljmp
clc
lea
mov
aad
add
cld
push
dec
ret
push
pcmpeqd
mov
adc
or
push
mov
add
or
push
call
je
mov
fs
add
call
test
arpl
ljmp
aas
and
xchg
mov
cmc
push
adc
push
push
es
inc
mov
and
mov
and
ljmp
test
sub
nop
or
cmp
mov
add
sub
pop
jmp
push
jae
or
xchg
sub
dec
sbb
dec
cld
push
xchg
call
jmp
addr16
out
arpl
dec
cmc
lock
cli
insb
or
xor
fiaddl
imul
js
pusha
xor
dec
add
cmp
push
out
mov
jne
arpl
jmp
xorb
mov
mov
add
jae
int
ror
cmp
call
mov
test
and
mov
outsb
adc
sub
add
aaa
andb
imul
push
sub
dec
cli
jae
push
xchg
inc
sahf
pusha
pop
negl
cli
pop
jg
nop
leave
shll
popa
mov
adcl
or
adc
rcrl
loop
pop
mov
cmp
cld
inc
jo
icebp
adc
inc
loop
sahf
dec
aad
jmp
cli
leave
shlb
lahf
push
adc
cmp
call
and
mov
push
cmp
adc
pop
call
out
shr
imul
and
cmc
add
pusha
call
inc
in
inc
mov
inc
or
mov
lret
pop
shl
into
lret
divl
popa
in
movb
push
mov
call
shlb
pop
jo
jb
imul
cmp
test
push
mov
sahf
arpl
jne
mov
jg
add
call
cmp
mov
insb
add
mov
lds
enter
nop
subl
adc
cli
mov
push
call
cmc
enter
adc
push
call
xchg
add
inc
shl
movsl
or
push
enter
inc
mov
dec
cmpsb
mov
mov
js
push
mov
loop
mov
in
lret
lea
xchg
add
cmpsb
movsb
sub
into
add
and
add
mov
cli
pop
inc
lcall
out
add
adc
call
mov
out
mov
push
mov
clc
lds
fdivl
inc
imul
push
xchg
sbb
fnstenv
jbe
movsb
jmp
jl
cmpsl
rcl
out
fldl
pushf
add
cmp
jne
lcall
test
push
pushw
push
add
cs
and
lock
mov
or
xor
jl
jecxz
lods
dec
sbb
ret
add
add
mov
arpl
ljmp
rcrb
test
sbb
sub
adcl
mov
or
pushf
fnstcw
pusha
in
xor
jl
in
adc
cmp
cmp
dec
fstl
cmp
jmp
ret
fdivrs
cld
cmp
sub
pop
mov
fs
add
pop
cwtl
cmp
out
aas
push
outsb
mov
adc
mov
xchg
pop
xor
pushf
xor
add
sub
mov
call
xchg
rclb
sarb
xchg
cmp
jl
popa
sub
pop
add
hlt
cmp
test
pusha
je
mov
mov
inc
fwait
mov
xor
inc
lret
jg
xor
cwtl
jmp
cmp
pusha
adc
cmp
cmp
lret
dec
leave
insl
daa
ss
push
aad
cmp
xchg
out
aad
enter
dec
in
lret
aaa
cmp
leave
or
mov
and
sbb
popa
test
enter
or
inc
lods
sub
cmp
out
mov
call
push
popf
add
cmp
mov
add
out
push
xchg
pop
push
xchg
push
out
or
mov
adc
dec
mov
andb
cmp
call
sbb
pop
enter
jo
cli
in
aaa
aam
lds
pusha
cmpsl
push
je
mov
aas
or
aaa
inc
mov
push
mov
addl
jge
cmp
inc
mov
mov
xchg
popfw
or
pop
adc
xchg
leave
pushf
jmp
pop
pusha
sbb
in
mov
cmp
xchg
in
lret
cmp
adc
xor
adc
inc
imul
pusha
push
imul
popa
or
xor
pushf
mov
sub
cs
pusha
inc
fcompl
aaa
dec
push
jb
inc
pop
pop
add
jo
mov
push
sbb
or
xor
adc
into
adc
pop
push
xchg
xchg
xchg
pusha
dec
pop
clc
in
pop
adc
fidivs
mov
or
loop
mov
aad
cmp
xchg
pop
xor
dec
push
movsb
jmp
jp
out
std
adc
fbld
xor
ret
or
popf
iret
fmull
lahf
pop
inc
cmp
xor
and
mov
fcomp
xchg
or
inc
push
add
pop
pop
jnp
aas
inc
cld
clc
imul
mov
fcoml
jbe
jno
jmp
ja
mov
jne
sti
loopne
jns
fdivl
jno
or
pop
ror
mov
aaa
or
call
xor
pop
push
mov
dec
jmp
jl
xchg
jmp
xor
dec
pop
insl
pushf
mov
int3
adc
and
adc
pop
popa
ret
pop
pop
call
and
lock
xchg
mov
cmp
test
je
cmp
test
or
and
mov
sub
test
test
jl
lock
mov
loopne
leave
mov
cmp
mov
xor
fwait
popf
loope
dec
dec
mov
sbb
xchg
shl
mov
and
add
enter
std
loopne
mov
xor
add
ja
pushf
pop
or
pop
dec
rolb
dec
pusha
cmp
push
jl
fmull
out
rol
call
pop
add
daa
ds
cs
mov
loopne
pusha
xchg
fldt
cmp
cmp
inc
jae
jp
rcrb
jae
pop
leave
jnp
scas
and
xchg
cmp
inc
cwtl
loope
mov
sub
sbb
pop
cmp
cltd
roll
sub
add
cmp
mov
jns
shrl
xor
xchg
add
jmp
xchg
sub
xchg
mov
cmp
call
clc
popf
push
dec
insl
sub
in
inc
inc
push
xor
cld
and
movsb
inc
lahf
movsl
push
nop
pushf
fimuls
fmull
cmp
enter
cmovno
std
pop
jle
nop
sub
cmp
aas
sahf
sub
xor
in
out
xchg
test
adc
cltd
jo
cmp
ficoms
or
jnp
hlt
cmp
adc
imul
sbbb
jne
or
jmp
sti
cmp
xor
lock
cltd
cmp
or
adc
icebp
mov
xor
adc
fildl
sub
inc
adc
sub
xchg
cmp
mov
cwtl
popf
xor
cmp
shrb
popa
mov
xor
sub
je
or
or
cmp
xor
cmp
lea
dec
dec
cmp
ficoml
mov
jle
nop
cmpl
mov
sub
mov
push
inc
insl
lcall
js
xor
push
add
fcmovbe
lods
sbb
clc
pop
or
dec
jns
les
inc
dec
cmp
or
jecxz
test
jl
cld
xchg
xchg
and
test
addr16
sbb
mov
inc
xchg
push
adc
aaa
mov
mov
fsts
jmp
sbb
das
scas
decl
or
fadds
and
sahf
add
push
add
rorb
push
pusha
inc
dec
add
jae
iret
subl
test
cmp
in
push
xchg
adc
and
pop
inc
push
jb
pop
adc
or
adcb
pusha
or
jg
mov
add
add
inc
imul
pop
cmp
cmovg
sahf
and
mov
cmp
cmp
jbe
clc
lods
incb
jo
not
dec
std
data16
cmp
fwait
add
add
xor
xchg
mov
test
sub
aad
mov
dec
lds
pop
xchg
xchg
dec
pop
push
jno
cli
iret
cmp
sub
push
jno
cmp
mov
pop
and
test
shll
fistl
inc
pop
scas
enter
mov
jns
jbe
outsb
ss
aad
cwtl
cltd
mov
or
jb
clc
xor
cmp
cmpsl
or
or
or
push
or
xor
lahf
or
shrb
mov
shrb
adc
mov
and
xchg
test
aam
call
iret
push
mov
sub
inc
sub
xchg
mov
dec
rorb
xchg
xor
inc
std
ja
mov
xor
sbb
cmp
pop
cmp
or
frstor
inc
sub
and
pop
pop
add
bnd
imul
adc
loope
add
js
cmp
adc
fs
jbe
aaa
xchg
fcmovne
xchg
dec
jge
cwtl
icebp
xlat
mov
mov
mov
inc
cmpsb
xchg
pop
push
or
shll
fcoms
pop
push
adc
shll
cltd
dec
push
into
xchg
push
or
or
dec
or
repz
stos
loop
or
mov
mov
imul
mov
pusha
mov
sub
dec
lock
push
fs
mov
cmp
dec
dec
cmp
pop
sbb
int3
loopne
adc
cmp
lods
sub
rclb
push
cmp
adc
inc
shl
rclb
cmp
cmpb
aas
sbb
pop
cld
push
or
pop
out
xchg
fdivs
mov
shrb
leave
fdiv
mov
xchg
fsubrs
das
xchg
jge
test
es
xor
inc
rolb
cmp
pushf
bound
pushf
inc
xor
aam
enter
xchg
sti
loop
xor
jle
or
jae
mov
push
loopne
lret
daa
jle
xor
js
jbe
xor
pop
push
xor
mov
mov
dec
and
inc
adc
rorb
or
adc
lock
mov
outsl
stc
call
pop
cmp
into
dec
imul
xor
and
dec
clc
ds
popf
sahf
cltd
pop
js
cmp
cltd
xchg
pop
jno
bswap
ljmp
rcrl
cmp
mov
in
or
adc
mov
int
out
pop
fcom
std
or
inc
jns
call
mov
lea
mov
add
adc
pop
mov
sub
or
add
or
xchg
jp
sbb
nop
sbb
adc
dec
pop
xor
nop
push
or
outsb
sbb
cmp
mov
jp
or
pop
sbb
adc
sbb
cmp
stos
loopne
stos
fcoms
jp
sahf
push
clc
adcl
cmp
das
dec
push
adc
or
scas
rclb
xchg
dec
insb
or
nop
pop
mov
xchg
or
xor
push
cmp
scas
cmp
pop
cld
sbb
jbe
sub
cmpb
pop
and
pop
arpl
sbb
into
bound
int3
popa
jge
adc
pop
les
jp
cmp
mov
jae
adc
push
pop
je
pop
jb
nop
adc
jbe
or
adc
jne
ret
adcb
js
data16
jb
and
dec
ja
shlb
fcoms
loop
repnz
push
jno
adc
sbb
sub
push
push
jb
mov
mov
rorb
fdivrs
adc
sub
shlb
cmp
fsubrs
push
cmp
cwtl
or
adc
or
cmp
cli
outsl
or
cmp
pop
rol
nop
lods
or
adcb
push
dec
mov
je
adc
cmp
pop
xor
nop
push
push
sarb
and
or
dec
aad
adc
adc
nop
orb
xor
flds
cmpsl
and
call
sbb
scas
cmp
outsl
pop
movsl
and
fs
cltd
ficomps
add
cmp
xor
inc
jl
idiv
rol
dec
cmp
add
orl
icebp
xchg
in
cwtl
jl
or
mov
popf
sar
outsl
test
mov
movsl
out
mov
pop
push
xor
leave
xchg
les
insl
jns
add
shl
push
mov
mov
push
repz
jmp
test
dec
fidivrl
aaa
jns
and
jmp
cmpsb
cmp
pop
jns
inc
into
mov
cmp
lcall
pop
testl
push
rcpps
add
dec
fbld
and
sbb
leave
js
sbbb
int
xor
mov
adc
in
adc
stc
fsts
sbb
in
pop
nop
cld
lahf
jns
or
mov
mov
adcb
or
push
arpl
cmp
scas
pop
xor
outsl
insb
add
sbb
sbb
or
pop
add
pop
push
jle
inc
sbb
xchg
cmpsl
icebp
add
cmp
cld
test
sub
sub
idivb
sub
cmpl
div
adc
and
movsb
test
pop
hlt
outsb
xchg
pop
sbb
dec
add
roll
cmp
cmp
mov
pop
imul
mov
test
mov
push
stos
push
popl
movsb
lahf
jmp
test
fcomps
lds
add
xor
mov
into
add
subb
mov
rcrb
push
faddl
fisubl
mov
mov
pusha
jmp
fcmovnbe
mov
or
xchg
imul
push
repnz
mov
cmp
faddl
es
pusha
icebp
add
mov
dec
pop
or
out
ret
into
inc
cmp
call
ja
mov
mov
pop
jne
test
jmp
repz
out
jecxz
gs
xor
and
push
mov
sub
pop
nop
adc
stc
jb
xlat
sahf
add
inc
add
or
pop
imul
jl
dec
push
iret
lea
aam
mov
jge
add
dec
push
inc
fwait
sbb
jb
add
in
movsb
pop
out
sub
mov
lret
leave
xlat
add
cmp
or
enter
dec
xor
and
add
fistpl
adc
pop
out
mov
repz
add
jb
scas
mov
sbb
or
adc
ret
pushl
fiaddl
dec
dec
mov
pop
stos
push
shlb
stc
add
fnstsw
mov
sbb
adc
addr16
ja
out
adc
fstps
jecxz
sbb
int3
cmp
xlat
or
xor
add
aam
mov
or
jo
pop
and
xchg
in
aaa
or
xchg
rcl
mov
das
cmp
add
lret
sahf
sbb
pop
and
push
push
mov
add
lods
xchg
ds
add
cmp
and
ret
dec
push
cltd
mov
popf
push
sahf
imul
dec
adcl
mov
mov
sbb
push
cmp
xchg
mov
adc
push
xchg
sbb
repnz
xchg
xchg
fnop
in
mov
shl
sbb
or
ljmp
xor
lret
mov
xchg
push
cmc
jo
in
mov
or
fildl
ja
gs
cmp
nop
pop
repnz
aaa
push
and
cwtl
lcall
fldl
xlat
or
cltd
pop
mov
add
fs
dec
sbb
inc
sbb
pop
cltd
xchg
cmp
xor
insb
test
mov
xchg
aam
in
cltd
lcall
adc
push
sbb
pusha
fiadds
inc
mov
or
in
mov
jp
sbb
sub
adc
fnstcw
cmc
push
dec
mov
adc
out
cmp
pop
fmuls
fwait
push
in
loop
fstp
push
add
fcomip
cwtl
mov
xchg
jns
sub
add
fimull
cltd
ja
sub
in
xor
lods
pop
push
cmp
lock
daa
jmp
add
cmpsl
ret
pop
cmp
aas
mov
jle
add
in
int3
daa
mov
sub
add
jl
push
aad
pop
add
jle
xlat
clc
push
hlt
addb
lea
sti
sbb
mov
xchg
or
sbb
cmp
call
dec
stc
inc
add
xchg
and
push
mov
sbb
cmp
div
cmp
push
pop
add
and
add
test
inc
push
cmp
lea
pop
out
les
jmp
in
insb
sub
lahf
dec
dec
scas
jp
add
test
sub
jl
popa
popl
sbb
rorb
xlat
arpl
sub
pop
lds
aam
fidivrl
xchg
pop
xchg
dec
daa
cmc
dec
pop
shr
lea
and
in
add
aad
cltd
push
out
jo
jno
popf
push
shl
pusha
jp
sar
jbe
jns
sbb
xchg
stos
adc
mov
rcl
repnz
xor
icebp
inc
shrl
shlb
cltd
imull
cmp
test
cmp
shr
jo
jmp
adc
cmp
mov
fs
fwait
add
out
test
jl
rcll
mov
or
add
fcoms
sub
stc
loope
push
sbb
sbbb
sub
or
imulb
les
jns
fcompl
sub
fwait
test
add
divb
mov
or
ljmp
push
xlat
pop
fldcw
and
jmp
mov
add
mov
xlat
adc
cmp
mov
lods
adc
lods
push
or
popa
cmp
cli
cmpsb
loope
add
jno
add
pop
rcrb
xlat
push
leave
cltd
dec
dec
xchg
jle
or
sbb
push
sub
adc
loopne
js
and
std
shll
pop
fadd
push
cmpl
jnp
cmp
outsl
add
adc
adc
mov
sbb
iret
js
orb
cmp
es
xor
and
push
jmp
mov
mov
or
pusha
arpl
inc
scas
add
add
stos
add
jae
pop
add
mov
mov
nop
xchg
push
popa
add
push
notl
test
dec
ficompl
dec
fucomp
xchg
add
xchg
and
fmulp
fimuls
insb
imul
ret
xchg
jno
xlat
sbb
jmp
inc
js
add
call
insl
enter
add
outsl
adc
or
add
stc
pop
flds
dec
sub
push
in
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
pop
add
add
add
add
add
add
add
xor
jbe
add
add
inc
add
add
add
add
data16
add
add
ja
inc
add
add
add
add
add
add
add
add
add
add
add
add
jae
add
add
dec
add
add
add
add
add
add
dec
jo
add
add
add
add
aaa
add
add
aaa
add
add
add
push
add
add
add
add
add
xor
add
add
add
add
add
push
add
add
inc
push
add
add
add
xor
add
add
add
add
jns
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
jno
add
add
add
bound
add
add
add
add
add
add
add
push
add
add
add
jbe
add
push
add
insl
xor
add
add
je
cmp
add
data16
add
add
add
outsl
add
xor
add
add
add
ja
add
add
dec
add
xor
add
add
js
add
push
add
add
add
add
add
push
outsb
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
insb
add
insb
jno
add
dec
add
add
add
dec
add
add
xor
add
add
addr16
push
addr16
jae
dec
push
lea
xchg
fistl
or
mov
pop
push
mov
out
fwait
pushf
adcl
in
mov
and
pop
loope
in
in
in
mov
xchg
lods
mov
clc
pop
ss
cmp
push
push
xchg
iret
mov
nop
in
in
in
in
in
in
in
mov
inc
movsl
lret
pop
mov
ljmp
adc
sbb
cmp
cmp
mov
std
lds
in
xor
cmp
inc
dec
add
sahf
and
jbe
mov
mov
test
mov
mov
mov
xor
es
cmp
fistl
scas
jge
mov
in
in
in
lods
stc
mov
xor
test
movsl
insl
push
cmp
outsb
xchg
scas
sbb
out
fildl
push
inc
push
pop
push
push
pop
xchg
je
lcall
shl
fadds
loopne
jge
sub
cmp
ds
add
bound
ljmp
iret
add
sub
popa
push
ja
cmp
in
mov
cmp
sbb
add
in
pop
push
outsb
jg
lcall
ds
pop
fnstsw
icebp
loope
xor
cmp
and
mov
xchg
push
xorl
adc
sahf
or
std
out
stc
addr16
test
mov
es
lock
aas
add
jns
imul
sbb
jp
sbb
addr16
add
sbb
mov
lcall
jmp
dec
sub
aam
jmp
cli
push
push
cmp
icebp
jle
sar
mov
lret
inc
mov
xor
jne
xchg
lahf
mov
add
and
push
imul
rorb
int
call
mov
pop
dec
das
or
test
pop
mov
lret
lods
xor
out
pop
push
sbb
mov
cld
repz
jle
cmc
mov
nop
ljmp
ret
repz
or
push
dec
fcmovb
lcall
ljmp
clc
pop
fstpl
sub
add
nop
sbb
or
cmp
push
fcmovnb
loopne
loopne
loopne
loopne
loope
xor
cmpsl
and
jle
inc
mov
mov
rorl
enter
movsl
cltd
push
mov
imul
cmp
sti
stos
xchg
mov
test
lret
scas
out
cmp
sti
xor
out
mov
pop
jo,pt
jne
cmp
decb
jo
loopne
loopne
loopne
daa
push
cmp
shlb
pop
or
dec
clc
push
lock
cmp
roll
fisttps
sti
out
or
pushf
push
test
fcmovne
or
mov
add
mov
loopne
loopne
loopne
xor
xlat
sbb
test
aas
addr16
mov
insb
jmp
outsl
out
seto
mov
outsl
out
push
rolb
fmull
mov
dec
gs
addr16
mov
adc
movsb
dec
pop
addr16
addr16
add
sub
xchg
or
test
in
in
in
in
in
in
in
test
ljmp
cmp
shlb
or
inc
mov
inc
or
es
xchg
add
xlat
cmpsl
xor
mov
test
or
and
sbb
xor
cmp
inc
es
cmp
mov
jno
jp
and
loopne
loopne
loopne
gs
es
mov
fdivrp
out
leave
or
icebp
and
sub
aaa
in
inc
xchg
sbb
std
mov
add
repz
out
icebp
stc
inc
jmp
add
cmc
sub
cmp
push
loope
cmp
add
std
in
fldenv
addr16
stc
rcrb
outsl
xor
jmp
fdivrs
jno
es
es
test
mov
addr16
aam
loop
popf
or
jnp
icebp
sub
popa
jo
mov
in
in
in
in
lods
add
jecxz
cmc
pop
jmp
nop
in
out
in
in
lods
add
jecxz
or
adc
mov
inc
lcall
call
xor
adc
inc
gs
addr16
cmpsl
inc
fldln2
es
xor
sbb
sbb
cmp
jge
mov
or
ret
in
stos
jmp
loop
jmp
add
or
pop
addb
xchg
push
cmp
jne
sbb
pop
add
or
lock
rcrb
enter
cmp
frstor
imul
jge
mov
shll
ds
push
sbb
clc
pop
cmp
rcrb
popa
dec
xor
adc
outsb
in
movsl
push
push
rolb
insl
lock
nop
add
sub
adc
dec
jge
imul
loopne
sub
lods
sbb
cltd
sbb
paddw
xorl
inc
cmp
dec
dec
pop
insb
sarb
in
loopne
loopne
jae
jnp
jmp
lds
cmp
push
and
dec
pop
fisttpl
daa
jae
jns
dec
xor
pop
inc
push
lahf
popa
es
es
jmp
repnz
loope
cmp
dec
insl
cmc
outsl
cld
add
push
add
xchg
pop
mov
pop
ja
adc
mov
xchg
sti
fildl
ds
and
cmp
outsb
inc
jl
es
or
adc
and
mov
mov
sub
pop
popf
sbb
popa
jns
jmp
xor
adc
mov
std
or
out
adc
cmpsb
cmp
test
push
icebp
test
mov
jmp
addl
dec
cmp
push
inc
push
sub
inc
cld
fcomps
enter
and
pop
and
adcl
inc
xchg
outsl
mov
arpl
push
adc
not
cld
or
imul
xchg
sbb
push
js
rorl
add
xor
sbb
pop
movsl
stos
and
xor
pop
lea
pop
rcl
ljmp
sub
or
push
popf
lea
mov
xchg
in
popa
jns
iret
inc
rcll
jmp
jge
cmp
movsl
es
fwait
mov
ret
popa
mov
ljmp
push
lahf
out
jmp
mov
jl
test
mov
into
jmp
xlat
sbb
inc
adc
addr16
jle
cmc
lea
fmul
mov
fstpt
ljmp
arpl
pop
xor
cltd
pop
int
loopne
or
lret
push
adc
sbb
lret
ficoml
pop
sti
pusha
inc
movsl
push
mov
lock
pop
cmp
push
or
lcall
enter
xchg
mov
leave
jno
cli
or
cmp
imul
lds
test
addr16
fwait
xchg
fildl
push
in
repnz
sbb
cmp
sub
inc
loopne
loopne
xor
rol
leave
pop
inc
aad
xlat
out
hlt
ljmp
push
int
jo
rorl
aaa
cmpsl
stc
xchg
cmp
sbb
lea
scas
sbbl
pop
sbb
dec
clc
push
lock
xor
test
or
jmp
jae
js
lret
mov
std
cld
cmp
adc
enter
xor
sar
xchg
jmp
mov
div
rcll
pop
shrb
pop
jmp
pop
out
test
test
lahf
in
jecxz
clc
fmuls
pop
push
mov
loope
cmp
pop
mov
adc
pop
test
xchg
scas
mov
rcll
jmp
lret
cmp
pop
jno
daa
addr16
pop
xchg
leave
and
cltd
cli
rolb
fwait
ss
pop
out
or
popf
push
out
xor
push
popa
cltd
ss
mov
lret
shrl
int
dec
push
push
mov
repz
push
and
lods
sbb
addr16
addr16
addr16
jnp
xchg
cmp
frstor
addr16
in
addr16
add
adc
ret
addr16
pop
data16
jnp
lea
jmp
popa
dec
inc
jge
inc
xchg
jg
xchg
xchg
lock
mov
mov
adc
cmp
cmp
and
daa
je
jle
fstpl
ret
lret
dec
xlat
inc
fstl
adc
clc
xor
call
call
push
mov
jge
clc
fnstenv
adc
cmp
inc
lcall
lret
mov
mov
sub
push
sarl
lcall
or
icebp
jmp
inc
jns
popa
and
mov
sbb
sub
inc
cmp
shll
imul
xchg
pop
fnsave
inc
xor
pushf
dec
sti
mov
pop
out
pop
sub
xchg
push
cmp
pusha
icebp
insl
jno,pt
repz
in
in
scas
jnp
or
insl
dec
icebp
push
cmc
addr16
xchg
xchg
leave
imul
les
lcall
icebp
jno
inc
ss
add
adc
push
push
insl
and
inc
cs
jg
xchg
outsl
jbe
test
mov
push
stos
lcall
sbb
jnp
in
setg
dec
mov
jae
in
mov
lds
ss
inc
mov
js
jns
adc
js
xchg
and
daa
add
leave
pop
cmp
lock
loop
fildll
or
sbb
jns
enter
cmp
fcomps
aad
inc
push
imul
loope
dec
cmp
js
push
enter
xor
pop
and
sub
xor
xchg
pop
popf
in
movsbl
int3
aam
fistps
ljmp
xchg
and
sub
jg
popa
in
scas
ss
pop
loopne
loopne
xor
sub
sbb
arpl
pop
push
add
imul
loopne
and
add
and
adc
ds
dec
jmp
add
jae
jns
xchg
mov
cmp
pop
aaa
sub
adc
cmp
movsl
cmp
pop
aas
mov
mov
loope
cmp
dec
jae
or
shll
shrb
js
cmp
dec
jge
push
sub
test
stos
dec
inc
lods
adc
vpcmpeqw
cli
jmp
addr16
sub
dec
and
xor
fsubs
mov
push
int
std
scas
mov
push
sti
sahf
adc
sub
in
cmp
mov
shlb
aam
fld1
icebp
or
fwait
sti
daa
imul
pop
loope
in
in
mov
std
scas
movsl
repz
popf
subl
xchg
dec
pop
xchg
dec
sahf
movsb
shrb
test
sbb
sbb
push
daa
fdivr
push
xlat
inc
rorb
out
addr16
adcl
aam
loope
fwait
dec
repnz
in
push
adc
movsb
or
loopne
ss
movsb
ljmp
push
jmp
push
cmp
cmpsl
aaa
or
jmp
scas
sbb
jno
jge
jae
nop
mov
les
lret
jmp
or
sbb
and
xchg
and
dec
or
or
orl
xor
pushf
ja
mov
jmp
mov
insl
rolb
gs
add
xchg
or
es
js
out
jle
and
xor
popf
das
and
and
dec
mov
sub
xchg
push
mov
es
jmp
sahf
xor
sub
lret
lret
lods
dec
add
mov
push
js
mov
imul
xchg
jge
mov
pcmpeqw
mov
dec
xchg
pop
cmpsl
es
cmp
push
push
adc
jbe
gs
pop
or
jnp
and
adc
sbb
xor
popf
or
jb
mov
xor
add
mov
pop
push
inc
imul
push
ss
xor
aas
inc
test
add
arpl
jne
imul
cmp
push
imul
addr16
push
xchg
add
cli
loope
cmc
in
adc
lahf
sub
ljmp
cwtl
outsl
in
fadds
sbb
ss
cmp
inc
sbbl
push
xchg
ljmp
adc
fcomps
or
adc
pop
mov
cmp
imul
shrb
in
and
dec
mov
adc
aaa
sub
cmp
jecxz
ljmp
ficompl
ljmp
adc
and
insb
push
mov
in
cli
lds
cmp
and
sbb
push
fcoml
xchg
daa
push
cmp
push
ds
shrb
sub
cltd
mov
sbb
repz
inc
add
xchg
dec
mov
movsl
push
insl
mov
in
nop
les
adc
fucompp
cltd
mov
bt
insl
sub
pop
in
pop
lea
popa
adc
fwait
das
out
dec
push
or
pop
add
shl
loope
xor
fwait
insl
and
cmc
adc
jo
xchg
es
fmuls
sarb
daa
adc
push
fiaddl
sahf
ljmp
jmp
dec
cmpl
in
scas
mov
adc
add
pop
or
push
lds
mov
pop
std
jg
sub
push
pop
mov
jg
mov
push
les
and
test
pop
fwait
arpl
scas
mov
cmp
imul
test
fwait
mov
inc
mov
sbb
inc
movsl
stc
push
jno
arpl
lds
cmp
loope
xchg
pop
push
popa
fsubrs
jno
ss
adc
leave
fwait
das
outsl
shrb
jecxz
test
jle
lods
mov
mov
mull
ret
es
or
popa
cmp
aad
jo
xchg
mov
fwait
inc
or
aas
sub
push
dec
sahf
shll
addr16
sbbb
loopne
popa
aas
es
cmp
sbb
inc
icebp
xor
xor
mov
xchg
mov
xor
adc
mov
push
mov
mov
add
aam
aaa
inc
jmp
rcll
orl
outsl
push
pop
test
xchg
stos
mov
repnz
addr16
mov
push
adc
push
mov
push
xorl
xor
fucomp
out
or
std
iret
icebp
fimull
push
push
fistl
and
xchg
cmp
cmp
pusha
xchg
push
cmp
add
jno
mov
fsubrl
sbb
in
stos
ds
loope
pop
test
push
cltd
fwait
xor
mov
xchg
or
pop
and
fidivrl
xchg
pop
loopne
mov
push
cmp
sbb
loop
push
cmp
cmp
pop
jb,pt
xor
aaa
in
push
and
and
xor
std
jge
push
lcall
push
test
ja
sarl
es
ds
fdivrs
adc
push
xchg
cs
cmp
inc
push
popa
xchg
jnp
mov
ret
loopne
loopne
and
addr16
sub
push
or
fwait
pop
rorl
jge
gs
xor
loope
mov
pop
gs
jno
ja
xor
cmpsb
ss
mov
dec
xor
sub
push
data16
xchg
mov
loop
pop
out
mov
push
jmp
scas
pushf
das
inc
cmc
mov
pop
cwtl
mov
xor
pusha
jge
jne
andb
cmp
test
stos
adc
fistl
mov
aam
popf
arpl
mov
dec
pop
push
sub
pop
push
jle
test
popf
cmp
mov
pop
xor
cltd
or
sbb
and
fidivs
xorl
aaa
imul
jg
add
daa
fildl
jnp
addr16
in
test
mov
icebp
imul
mov
inc
xchg
jmp
mov
sarl
jnp
js
rclb
lock
andl
pop
pushf
shrb
repz
lock
bound
xor
insl
push
mov
addr16
rclb
push
leave
cld
fistl
pop
lock
jb
xor
push
mov
add
pushf
lahf
gs
cmc
in
jmp
sbb
es
cmp
clc
in
jl
sub
test
lret
leave
int
roll
fwait
icebp
inc
loope
inc
push
adc
inc
das
addr16
mov
inc
leave
inc
mov
sub
push
mov
fs
in
mov
xchg
mov
inc
or
addb
mov
enter
xlat
arpl
mov
movsb
sbb
outsb
pusha
mov
into
je
icebp
xor
jle
mov
cwtl
adcl
fldl2t
add
out
mov
inc
add
jns
roll
cld
and
xor
mov
cmp
sub
mov
fcomps
xor
push
dec
push
mov
xor
pop
push
adc
rorl
pop
js
pop
into
ret
mov
gs
ret
jae
scas
dec
cmpsb
pop
xchg
iret
add
call
outsl
or
xor
sub
sub
mov
push
dec
imul
aas
in
out
adc
xor
mov
push
subl
into
loop
movsb
fcoms
stos
ljmp
fstps
ds
arpl
stc
test
sub
stos
jg
add
in
xor
pop
pop
jle
mov
mov
pop
cmp
and
jge
cmpsl
cltd
inc
je
cmp
add
or
mov
loopne
popa
adc
inc
add
daa
cltd
pop
out
mov
fucomi
fcomi
mov
xchg
insb
sub
repnz
mov
cmp
xor
mov
movsb
sub
push
inc
cwtl
push
xchg
hlt
xchg
stc
or
lret
stc
cld
bnd
dec
ja
push
jne
and
xor
xor
and
sahf
mov
mov
and
push
es
ds
mov
ds
jbe
out
mov
push
pop
and
or
fldenv
inc
scas
dec
mov
scas
cmp
ffreep
popa
xchg
iret
out
ljmp
jns
mov
or
mov
inc
or
push
sub
sub
push
sbb
pop
ja
xchg
mov
jmp
aas
adc
ret
inc
mov
push
and
and
add
daa
jns
pop
xor
cmp
pop
or
mov
pop
mov
stos
mov
cmp
mov
je
mov
jo
lcall
inc
pop
push
lret
std
enter
or
in
roll
add
or
inc
and
imul
mov
inc
xor
inc
jl
xor
js
ja
push
mov
cmp
repz
rcrl
jbe
sub
insb
adc
and
cmp
jge
arpl
push
iret
cmp
or
jmp
dec
rorb
mov
push
mov
pop
pusha
pop
mov
adc
add
mov
and
inc
inc
outsb
adc
inc
or
jne
mov
adc
or
jae
add
or
or
jecxz
push
xor
or
insb
sub
push
testl
test
or
lahf
leave
repz
add
mov
mov
cmp
into
adc
mov
jl
jno
mov
mov
fsubrs
mov
lds
adc
push
pushf
movsb
cmp
push
add
loop
dec
mov
pushf
mov
or
mov
lods
je
bnd
int3
repnz
sbb
mov
mov
iret
insb
push
adc
stc
pop
mov
jg
inc
or
adc
sar
ja
popf
repnz
fwait
mov
fstl
out
sbb
mov
or
cmp
or
out
imul
push
or
pop
and
imul
scas
xchg
scas
in
cmpsb
jnp
cmp
inc
bound
sbb
add
call
adc
addr16
aaa
cmpsl
imul
imul
mov
repnz
stc
or
cmp
ljmp
imul
cmp
mov
adc
mov
dec
dec
loop
mov
adc
call
test
dec
cmp
or
jge
jnp
into
daa
jno
add
mov
cmp
add
mov
cmp
and
call
sbb
adcl
test
clc
or
adcb
inc
and
push
mov
decl
mov
lret
cwtl
or
rorl
cmp
pusha
mov
rol
mov
into
sub
mov
sub
xor
data16
lock
jge
jmp
sub
cwtl
push
aad
outsl
outsb
mov
jmp
dec
pop
cmp
and
mov
push
test
mov
dec
lods
push
cmp
cmpsl
stc
add
push
fnstsw
and
stc
lods
outsb
jns
xor
pop
sub
sub
mov
xor
mov
ret
notl
adc
xor
test
add
or
jmp
nop
xchg
insb
lahf
insb
popf
dec
mov
call
mov
scas
out
and
add
shr
cltd
ds
lea
std
imul
push
jmp
sub
or
dec
jg
lds
iret
inc
cmp
push
popf
push
fiaddl
mov
jg
cmp
cli
and
nop
inc
jne
fdivs
ds
mov
imul
sub
xchg
mov
mov
idivl
add
pop
sahf
mov
popf
adc
and
ret
adc
or
lods
test
xor
test
ds
and
xor
cld
int3
jnp
mov
push
xchg
or
sub
sub
xchg
fmuls
or
mov
cmp
je
xor
stc
or
or
or
sub
jne
sub
clc
cwtl
pop
add
pop
outsl
lea
mov
adc
adc
repnz
pop
popf
sub
je
sub
adc
cmp
rorl
pop
wbinvd
or
sahf
or
arpl
fmull
int
lock
adc
inc
sbb
push
or
cmp
add
inc
rclb
push
inc
mov
inc
dec
gs
xor
clc
movsl
jne
pop
addr16
jmp
xchg
ss
mov
sub
loopne
jp
and
out
xor
push
mov
add
test
test
jge
aad
mov
insl
in
fildl
xchg
adc
mov
cmp
jnp
mov
sbb
mov
adc
push
fisubs
sbbb
add
test
and
xor
inc
enter
stc
or
sub
mov
inc
mov
lahf
cmp
insb
mov
pop
lods
push
or
xor
and
inc
cmp
int
or
into
sbb
sub
lahf
mov
xlat
xor
loope
dec
dec
or
mov
fiadds
es
imul
jo
mov
pop
sub
jo
xor
or
js
push
xor
sbb
inc
lock
jle
int
call
push
and
dec
mov
jb
or
test
pop
icebp
rorb
stos
sub
pop
mov
push
sub
add
jne
push
or
adc
add
xor
adc
and
jne
pop
test
aad
lds
or
xchg
lcall
pushl
cmp
scas
adc
xor
or
mov
mov
iret
pop
inc
xor
movsb
or
inc
fldenv
add
push
push
add
inc
sub
mov
or
jne
xor
sbb
pop
cmp
sub
dec
xchg
xor
pop
cmp
ljmp
or
push
adc
sbb
cli
mov
repnz
push
cmc
pop
mov
pop
adc
mov
push
out
fwait
push
fwait
cmc
jecxz
xor
or
xor
pusha
test
aas
je
xor
insb
daa
jp
push
push
mov
mov
mov
insl
shll
mov
or
or
jo
push
xchg
xor
sub
shl
sub
inc
jne
sar
and
inc
add
je
rcrb
lea
mov
je
lods
inc
lods
pop
mov
cmp
sub
cmp
inc
inc
push
lret
dec
cs
enter
cmpsb
fisubl
mov
pop
das
mov
adc
movsb
movsl
mov
sti
cmp
ja
sub
xor
popf
xor
bound
pop
out
dec
or
ret
cmp
or
push
push
jg
adc
jl
sti
mov
push
fistpll
mov
shrb
sub
xor
je
sbb
clc
sahf
pop
sbb
lret
mov
pop
lret
mov
inc
add
cmpsb
dec
inc
stc
inc
push
mov
dec
cmp
and
mov
fs
ja
jns
je
pop
mov
movsb
ljmp
ret
adc
inc
or
xor
jb
sub
sbb
dec
pop
fstpl
dec
std
sub
push
enter
adc
call
xchg
outsb
inc
adc
adc
or
mov
push
lahf
push
psrld
push
mov
std
dec
insl
add
ljmp
xchg
mov
mov
adc
idivb
rep
das
cmp
sbb
stos
adc
pop
adc
cmp
inc
cs
loope
fdivs
ljmp
pop
mov
push
sarb
cmpb
sahf
adc
pop
mov
push
and
push
std
mov
mov
aaa
dec
das
xor
mov
test
out
mull
cli
lea
xchg
cmp
mov
jo
fisttpl
data16
scas
xor
enter
fnstsw
popf
jl
push
cmp
jge
mov
cmp
push
cmp
dec
sarl
arpl
ret
mov
jge
mov
xor
aaa
lret
icebp
push
dec
cmp
lahf
lea
jmp
insl
push
std
mov
push
add
gs
and
cmp
in
push
xchg
rorl
stos
xchg
sub
adc
mov
or
out
cmpsb
test
and
or
icebp
adc
adc
inc
jmp
cmpsb
pop
or
repz
lods
cmpsl
mov
decl
fadd
cmpsb
pop
pop
and
push
lods
cmpsb
xchg
mov
in
pop
xor
adc
cmpsb
sub
rolb
fisttps
push
jmp
xor
shll
ds
inc
or
xor
call
cltd
mov
add
and
lea
subl
mov
and
ds
add
mov
mov
lcall
dec
jo
pop
mov
in
nop
or
inc
add
fistl
pop
in
mov
push
jmp
or
push
cmp
jns
push
std
add
pop
mov
dec
int3
pop
push
push
clc
push
pop
jo
leave
icebp
add
cmp
sbb
ss
xchg
js
dec
xchg
jo
mov
sarb
xchg
or
mov
push
adc
or
movl
jg
sub
jae
sti
cwtl
stos
int
jg
inc
pusha
cwtl
mov
sbb
fstl
das
push
out
cmp
cmp
mov
push
dec
test
sbbb
dec
cmp
popa
pop
xor
lret
push
push
sbb
orb
call
cwtl
mov
insl
pop
mov
or
in
xlat
ds
out
inc
aas
test
xchg
in
cwtl
push
fdivr
leave
pop
ss
pushf
pop
add
push
xor
push
pop
xchg
push
cld
popf
lcall
mov
aaa
add
sbb
fisttps
popl
mov
inc
hlt
jp
push
xor
or
icebp
cmc
sub
inc
fxch
jmp
inc
dec
int3
inc
lods
push
inc
cmp
or
lock
cmpl
mov
cmp
cmp
js
jnp
sbb
inc
mov
mov
pop
xchg
xchg
pop
or
pop
or
std
pop
jnp
or
dec
cmpsb
pop
cmp
and
add
pop
sbb
xchg
mov
rorl
pop
cmp
or
rcll
clc
or
aaa
fnstcw
mov
es
ds
fs
xchg
rolb
xor
mov
call
out
movsl
mov
fmull
mov
fsubrs
add
sub
lcall
sub
inc
pop
add
movsl
dec
loop,pt
push
cmp
dec
das
cltd
jmp
lea
inc
add
scas
add
and
jne
adc
xor
fists
dec
add
xchg
jmp
out
adc
test
stc
fstpl
cmpsb
std
add
loopne
pop
lock
incl
not
adc
fnstcw
or
cmp
pop
and
sub
addr16
or
adc
add
or
mov
scas
push
mov
adcl
nop
je
fwait
out
cmp
rcll
cmp
stc
fadds
scas
fsts
ret
mov
mov
scas
or
stos
or
sub
mov
outsb
pop
dec
add
jle
inc
repnz
cld
mov
jmp
and
movsb
adcb
sbb
sub
pop
pop
adc
or
add
lea
fnstenv
hlt
and
add
pop
fsubrl
nop
and
or
or
sub
add
sbb
call
sub
mov
mov
test
push
add
push
jnp
mov
fs
pop
pusha
push
paddq
das
cwtl
movsl
mov
or
inc
ljmp
push
push
or
addr16
push
mov
js
sub
push
dec
subl
cmc
sbb
das
iret
sub
xor
rorl
and
lds
mov
inc
add
or
pop
push
call
dec
inc
jo
add
xor
cmp
push
pop
lds
fcmovb
jmp
pop
pop
jge
cmp
pop
stos
pop
cmp
andl
or
arpl
outsb
sahf
orl
lods
enter
stc
adc
daa
adc
insb
cmp
add
cs
insb
xchg
push
or
sbbb
jns
or
loopne
adc
in
popf
or
inc
fsub
mov
mov
and
mov
add
or
inc
jmp
adc
mov
or
adc
jne
pop
imul
push
push
adc
dec
cmp
clc
inc
mov
mov
cmp
dec
adc
pop
mov
sbb
pop
xlat
sub
call
andl
sarb
cli
hlt
ja
mov
imul
add
out
cmp
enter
push
test
or
inc
xchg
or
add
jecxz
mov
call
push
outsb
adc
cmp
adc
js
sti
xchg
xor
mov
decl
inc
push
mov
push
dec
imul
pop
push
out
daa
dec
loope
or
repz
xchg
and
pop
dec
mov
int
test
add
adc
sub
inc
test
sub
pop
sub
out
sbb
jnp
aam
ds
sub
cmp
test
add
inc
loopne
sub
dec
mov
dec
xor
test
pop
jo
xchg
and
push
enter
push
add
mov
sbb
xlat
push
icebp
dec
popf
int
test
mov
add
push
mov
pcmpeqw
outsb
xlat
sub
jo
dec
xor
lods
sub
cli
insb
addb
inc
jle
or
in
push
push
loop
adcl
inc
pop
adc
inc
mov
push
sub
pop
inc
mov
pop
lods
pop
mov
push
adc
dec
ds
inc
call
jo
mov
shrl
aas
popf
push
loop
sahf
xchg
aas
cmc
adc
aas
loop
mov
iret
popf
push
test
mov
sub
mov
pop
popa
add
jle
pop
mov
imul
inc
lret
fcomp
ret
sub
shrl
pop
xor
cmp
jae
pop
js
jge
dec
subb
rorb
sbb
dec
jne
scas
xor
or
push
imul
cwtl
or
or
in
jns
jmp
popf
cmc
adc
or
lret
lds
push
sub
or
or
incb
add
add
xor
insb
add
add
add
dec
add
add
add
add
jno
ja
bound
add
add
inc
js
add
add
add
dec
add
insl
insb
xor
add
add
add
add
add
add
add
add
jo
add
aaa
add
pop
add
add
outsb
add
add
push
add
add
add
push
add
add
add
add
ja
add
add
add
add
add
add
add
inc
add
add
add
add
add
jp
add
add
push
add
add
js
add
jne
add
add
add
add
add
add
add
add
add
push
push
inc
add
ja
add
add
cmp
add
dec
outsb
add
add
add
add
add
add
add
jp
add
popa
add
add
pop
add
add
popa
xor
add
jo
add
add
add
add
inc
push
push
dec
dec
add
add
pop
dec
add
pop
xor
dec
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
add
push
add
add
add
dec
push
inc
add
add
add
add
add
add
dec
add
dec
add
outsb
push
cmpb
call
outsb
out
pop
fbstp
mov
scas
push
outsl
dec
push
push
cmp
rorl
loopne
xchg
lods
xchg
or
sahf
popf
adc
aam
inc
dec
sub
js
add
and
mov
mov
mov
xchg
mov
cmp
sti
jbe
rclb
push
in
sub
hlt
dec
mov
idivb
sbb
pushf
ljmp
int
dec
jge
sub
xchg
data16
push
mov
and
jbe
mov
fisttpl
pop
inc
xorb
push
mov
sub
test
inc
jae
xor
push
adc
add
mov
insb
xor
mov
push
mov
sbbb
xchg
int3
inc
pop
mov
and
add
or
push
ret
fmuls
test
mov
push
and
test
push
mov
lods
loope
or
push
lods
sbb
fstp
sahf
fisubrl
cwtl
cmp
sub
stc
popa
ret
negl
pop
sbb
int3
cmpb
xor
mov
cmpsl
test
sti
adc
popa
push
jmp
cmp
sbb
push
clc
movsl
adc
lret
out
int
aam
push
out
xchg
or
aaa
push
push
or
inc
xor
add
cmp
jecxz
stc
les
ss
loop
push
jmp
or
mov
cmp
outsb
xchg
das
adc
xchg
fadds
call
jmp
cmp
jnp
push
inc
stos
mov
cwtl
and
adc
or
and
scas
cmp
sub
jl
jne
push
into
in
cmpsl
mov
cmp
divb
xchg
and
xchg
pop
mov
adc
sbb
or
adc
push
repz
add
icebp
daa
sub
sbb
popf
dec
je
in
aas
pushl
test
test
xor
lods
pop
push
mov
hlt
push
mov
mov
sbb
loop
mov
or
mov
pop
out
push
cmpsb
mov
popa
jns
rolb
mov
orl
fsub
ror
mov
int3
sub
loope
cld
mov
aaa
xchg
jg
jbe
addr16
dec
sbb
pop
cmp
and
jne
cmpsb
popa
pusha
lods
push
or
les
mov
and
add
sub
aas
inc
rorl
push
push
cmp
mov
lock
and
or
mov
or
and
xor
je
test
in
je
es
push
push
aaa
aaa
jne
push
push
fcoms
jnp
or
out
and
dec
add
ss
mov
sbb
pop
mov
pusha
cmp
push
test
aas
jns
push
dec
dec
cmc
xor
ss
dec
dec
out
push
pop
jecxz
inc
ret
outsl
pop
pop
fisubrs
mov
sub
idivl
pop
mov
aad
cmc
jae
inc
call
cmp
movsb
pop
dec
pop
std
mov
rcrl
adc
movsb
les
xor
jo
dec
cmp
ret
ljmp
mov
sti
push
lods
dec
cmp
inc
push
out
in
push
or
sbb
mov
jmp
int
push
int3
int3
add
push
sbb
add
movsl
les
cmp
jmp
xor
sub
mov
sbb
adc
aad
and
in
cs
mov
or
out
bnd
cmp
add
negb
pop
cs
ret
call
js
pop
pop
adc
sub
pop
fbld
cmp
push
aas
imul
jb
cli
cmp
add
push
inc
sbb
cmp
inc
ss
or
or
mov
jecxz
pushf
dec
mov
xor
inc
jnp
or
pop
or
pop
cmp
add
mov
add
jg
iret
cltd
mov
cmp
jne
daa
pop
push
nop
dec
add
adc
popf
mov
adc
shlb
push
or
sarb
push
inc
ds
mov
test
jo
je
out
jmp
jae
cli
lods
cmp
pop
pop
repz
cmp
jb,pn
cmp
lret
dec
pop
insl
lret
mov
repz
jl
mov
out
popf
pop
adc
push
pop
sbb
cmp
adc
push
cmp
mov
and
movaps
inc
sbb
xchg
cmp
jmp
mov
xor
cmp
out
mov
and
mov
or
stos
add
or
rcll
pop
lea
xchg
mov
cmp
mov
call
add
leave
roll
sub
or
push
lock
gs
fs
mov
add
mov
sbb
xchg
mov
cmpsb
and
lea
xchg
icebp
xor
aam
xchg
scas
pop
cmp
mov
mov
adc
inc
jne
sbb
sub
sar
add
lea
lea
or
push
cmp
mov
push
jno
push
call
pand
cmpsl
fiaddl
dec
aam
lahf
adc
mov
jne
cmc
jmp
push
and
cld
and
mov
inc
mov
push
imul
cltd
lcall
pop
mov
mov
mov
add
push
gs
pop
aam
mov
sbb
pop
mov
mov
mov
insb
mov
add
icebp
icebp
xchg
jl
and
outsl
fwait
mov
test
jne
or
mov
in
adc
das
push
or
ja
sarb
lea
jmp
inc
mov
pusha
cwtl
es
bound
mov
inc
ror
inc
shl
lea
cmp
or
mov
ljmp
add
sub
cwtl
scas
call
mov
test
mov
enter
add
xchg
xor
outsl
push
inc
xor
in
lret
popf
cmp
push
add
or
mov
xor
leave
sbb
jno
mov
cmp
test
pop
adc
add
jae
insl
sub
andb
std
pop
fxch
test
ss
pushf
ficoms
mov
fsubp
adc
cmp
adc
fadd
cltd
xor
cmc
fisttpll
cmp
adc
adc
es
leave
jmp
sub
cltd
mov
rorl
je
idivb
dec
dec
add
pop
jge
lret
stc
push
ret
mov
pop
out
cmp
and
and
inc
subl
repz
cmpb
pop
bound
push
cwtl
sbb
cmp
out
fisubrs
enter
lcall
cmp
mov
jae
sbb
stos
fnsave
dec
push
sbb
call
ret
pop
setp
adc
xorl
sbb
sub
adc
mov
mov
jno
imul
jns
and
cmp
je
push
push
std
jb
out
sub
pop
cld
jno
bound
sub
mov
ret
out
pop
mov
or
cmc
push
fmull
cmp
xchg
int
mov
add
mov
or
int
and
inc
int
icebp
adc
xchg
mov
inc
imulb
mov
xchg
in
aad
rorb
shrb
sbb
jbe
enter
aad
push
jns
nop
lods
mov
mov
dec
mov
stc
mov
js
mov
ret
pop
roll
pop
mov
or
push
dec
mov
sub
bound
dec
xor
orb
push
pop
push
stos
adc
imulb
or
add
mov
mov
xor
mov
dec
int
daa
outsb
iret
lea
rolb
sub
jae
cmp
mov
enter
or
leave
and
push
xlat
enter
jne
fs
cmp
je
sbb
mov
mov
shl
mov
mov
pop
idivb
jo
xchg
push
mov
adc
jo
push
or
mov
or
sub
movhps
imul
jnp
out
jns
push
inc
dec
mov
or
aaa
jg
adc
cmp
mov
cmpsl
pop
xor
jg
mov
dec
out
pushf
adc
cld
pop
stos
push
in
inc
sbb
in
dec
add
adc
insl
and
shlb
add
loop
sbb
movsb
xor
fnstsw
insb
aam
idivl
arpl
push
push
or
inc
pop
inc
cmp
xchg
aas
jo
outsl
aad
jo
adc
adc
push
xchg
jne
dec
aad
inc
or
inc
jmp
mov
or
pusha
xor
jo
inc
idivb
dec
cmp
sub
sub
sub
sbb
cmp
sbb
into
rcr
cmp
add
clc
mov
nop
xor
mov
jge
jp
cld
stos
xor
leave
cmp
ds
enter
orl
fisubl
notl
repz
cmpl
xor
in
ret
fiaddl
fidivrs
aaa
dec
ds
add
add
jne
fs
lods
adc
dec
test
divl
xor
repz
loop
push
aam
cmpsl
xchg
cmp
aas
int3
add
or
inc
push
mov
and
pop
adc
or
sbb
or
inc
jg
insl
adc
xchg
jb
int3
or
scas
add
outsb
inc
shll
sti
mov
adc
inc
inc
add
xchg
xchg
cmp
push
add
movswl
lods
push
cwtd
enter
push
orl
jno
call
xchg
or
fsubrl
lods
cmp
mov
dec
dec
lea
int3
test
imul
addr16
test
dec
xchg
sbb
inc
or
dec
cld
cmpsl
and
pslld
cltd
pushf
or
orl
cmp
adc
je
mov
lret
xchg
gs
xchg
ss
adc
or
lock
jne
fcomip
sarb
cmp
sbb
les
inc
cmpsl
es
movl
xchg
xchg
push
or
icebp
fnstsw
inc
push
aas
adc
and
cmp
dec
adc
inc
sub
addr16
les
scas
inc
or
repz
add
or
dec
or
and
mov
cs
sub
or
add
push
xor
cmpsb
xor
adc
sub
imul
ja
jns
mov
push
sbb
push
fwait
lret
jp
pop
mov
in
aam
sub
jp
xor
mov
mov
xor
pop
mov
idivb
movl
jbe
adc
adc
xor
jno
jb
jae
cwtl
or
xor
pushf
das
movsb
aas
out
adc
or
push
lods
push
adc
mov
testb
xor
jmp
add
nop
shlb
or
pop
sar
xchg
sub
or
iret
push
push
push
or
or
inc
add
fwait
sahf
cmp
xor
insb
mov
in
loop
out
jns
jp
insl
and
xor
xor
rol
js
rcrb
jne
dec
sub
mov
les
mov
scas
jne
add
adc
cmp
enter
xor
fsts
cmp
add
sbb
popa
lds
sbb
or
stos
sahf
in
pop
and
roll
call
pop
push
inc
pop
popa
js
xchg
xor
in
sahf
or
jmp
or
mov
sub
popf
xor
ret
add
add
je
sub
daa
xchg
lea
adc
adc
call
rol
mov
in
jne
sub
add
cli
add
sbbb
aas
mov
jbe
dec
cmp
dec
jne
xchg
cwtl
cmp
je
and
push
fisubs
push
sub
pop
push
pop
adc
mov
rcrb
add
sbb
pop
fwait
sub
jo
shl
jmp
sub
jmp
pushf
jne
adc
into
and
adc
pushf
or
push
ss
push
mov
push
sbb
push
pop
pop
lret
shlb
pop
mov
aad
jbe
sbb
stos
pop
xor
ds
pop
jnp
pop
fs
lret
xor
cmp
add
or
cmp
test
pop
stos
lcall
rclb
cmc
fcomp
rorb
stc
ficoms
xor
adc
or
cmc
divps
pop
adc
pop
aam
sbb
leave
jno
jae
dec
xchg
or
adc
fiadds
mov
popa
mov
adc
xor
scas
lods
fs
daa
scas
sub
jle
mov
lea
mov
dec
call
mov
cmp
not
ja
lret
lahf
cs
sub
in
xor
push
mov
inc
fsubr
sbb
dec
inc
jl
pop
lods
lcall
jne
dec
cmp
sub
push
dec
add
mov
test
test
push
sbb
cmp
sbb
movb
mov
pusha
inc
jmp
cmc
sub
jmp
and
sbb
xlat
into
add
dec
mov
xchg
movsl
inc
popf
mov
mov
fsubs
jmp
popf
je
mov
xor
mov
nop
add
mov
test
push
mov
jo
adc
nop
cmp
sti
in
inc
push
call
cmp
mov
shl
shrl
imul
mov
pop
cwtl
xlat
lahf
pop
xchg
daa
lods
fsubl
rcrb
jns
or
stc
cmp
lret
dec
dec
mov
pop
mov
ja
xchg
popa
mov
outsl
cmc
xor
inc
out
mov
inc
frstor
inc
inc
jnp
out
push
sub
or
pop
orb
ret
adc
call
repnz
add
imul
adc
xchg
addl
lds
int
jecxz
int3
lea
cwtl
push
and
call
add
or
sub
or
xor
sbb
or
cmp
add
sub
xor
xor
mov
pushf
inc
mov
gs
and
fmull
fdivs
mov
sbb
sbb
movsb
mov
xlat
sar
dec
aaa
rcll
pop
or
sbb
loop
jmp
mov
mov
jge
jns
jl
lea
int3
push
loop
mov
push
rorl
adc
jle
lock
add
pop
in
xchg
jae
adc
pop
add
ljmp
fstl
mov
addr16
fistl
mov
inc
pushf
outsb
icebp
inc
jmp
enter
es
cmp
lea
lret
call
ja
imul
pop
int3
loope
mov
push
sub
push
data16
mov
cmp
jmp
sub
insl
mov
inc
out
sti
sbb
dec
push
stc
sub
add
push
movl
dec
jae
pop
pinsrw
nop
or
data16
adc
imul
leave
iret
je
inc
pop
repz
push
ret
call
lsl
or
subl
inc
pop
pop
shrl
sub
arpl
ja
daa
adc
push
andl
ja
xchg
iret
jge
std
or
sbb
pop
cmp
mov
js
out
add
pop
adc
cltd
outsb
add
jo
dec
push
dec
pop
jp
cld
add
js
add
or
fcompl
shrl
add
int
insl
in
or
cli
sub
pop
es
roll
inc
inc
add
mov
push
push
loopne
mov
xchg
fucom
dec
push
add
in
pop
test
inc
imul
fldcw
add
je
popf
lret
add
mov
ljmp
jge
gs
lea
faddl
inc
adc
nop
into
sarl
push
scas
xchg
and
and
or
push
test
mov
add
out
sub
or
or
inc
cmp
orb
xor
dec
mov
aad
inc
fwait
mov
filds
hlt
pop
sub
push
xor
push
aaa
call
inc
ljmp
inc
psubsw
rcrb
push
push
call
movsl
cmp
js
push
ja
jl
adc
data16
pop
or
and
mov
out
std
mov
push
lds
bound
daa
xchg
lea
push
cmp
movsl
imul
add
je
shll
fbld
outsl
and
cltd
push
out
or
push
bound
movsl
inc
in
mov
into
mov
je
popf
xor
add
imul
roll
inc
repz
add
add
push
push
sbb
enter
je
std
push
sbb
into
mov
call
jne
push
rcr
or
dec
push
push
xchg
insb
adc
dec
jmp
mov
jp
dec
in
dec
gs
jmp
xchg
push
int3
hlt
pop
mov
mov
pop
dec
ret
orb
xchg
or
out
mov
xchg
mov
enter
mov
sarb
aam
sbbb
int3
nop
rcll
imul
sbb
stos
outsl
xchg
add
std
mov
jnp
cmp
jns
icebp
sub
mov
jo
mov
sbb
push
inc
cmp
jmp
jge
lock
addr16
jecxz
arpl
lea
test
push
subl
push
add
movsl
in
ror
push
movsb
pop
or
popf
xchg
jno
mov
add
push
movsb
inc
xor
or
add
mov
mov
inc
ds
fidivrs
test
inc
nop
mov
fsubrl
sbb
push
cmp
adc
mov
push
sub
add
inc
call
je
mov
and
lds
xor
jb
adc
dec
mov
mov
mov
jo
adc
mov
call
lods
mov
pop
add
ss
scas
popa
call
xor
jle
cmp
in
jnp
sub
cwtl
xchg
movsl
fwait
pusha
mov
imul
dec
xor
das
outsl
xchg
cwtl
xchg
int
pop
lea
popf
xor
out
adc
in
test
or
sub
sbb
pop
or
imul
mov
mov
loope
dec
fcomp
jne
and
rorl
testb
jge
je
sub
shlb
enter
lods
loopne
add
push
lods
pop
hlt
clc
fstpt
pop
jb
testb
add
in
rclb
pop
jge
or
mov
ret
cmpl
cmc
cwtl
ret
out
shrl
or
rorl
xchg
prefetcht2
mov
pop
or
jmp
lods
fildl
movsb
lcall
aaa
cmp
mov
popf
push
in
mov
mov
xor
ds
mov
in
ret
mov
filds
or
mov
test
cmp
mov
repnz
or
fidivl
cld
pop
xchg
dec
sahf
pop
mov
mov
fisttpl
lds
mov
push
call
in
paddsb
cmp
cwtl
insb
mov
xchg
sbb
mov
push
fstpl
add
xchg
and
lea
mov
and
pop
loopne
jo
push
dec
push
xchg
xor
inc
xorl
adc
mov
test
jnp
icebp
pop
fcoms
subl
sub
into
test
sub
jno
repnz
lock
pop
push
sbb
lret
inc
or
push
xor
xor
mov
or
fnsave
call
jbe
push
aas
lcall
mov
mov
jns
lea
mov
mov
xor
lret
ljmp
mov
in
in
in
fcompl
pop
fcoml
mov
xchg
test
popa
mov
icebp
ds
jnp
fsubrl
pop
loopne
xchg
sbb
sahf
shll
dec
aam
mov
pop
jo
les
jmp
add
cwtl
push
and
call
test
pop
push
call
add
pop
push
mov
clc
pop
xchg
pop
push
xor
push
cmpsl
sub
jo
inc
cmpsb
dec
push
insl
lahf
sub
lods
inc
int3
mov
push
jae
mov
push
adc
mov
push
mov
ficoms
mov
lret
jge
or
mov
push
ja
mov
xchg
stos
add
mov
or
xor
pop
jo
fdivrl
das
ljmpw
repnz
mov
sub
fsubrl
adc
add
inc
push
repnz
popa
sub
xorb
push
jbe
aad
dec
sub
popa
push
dec
in
jmp
dec
sub
imul
jbe
scas
mov
in
jecxz
insl
stc
mov
add
inc
pop
popf
adc
aaa
cmp
clc
add
ficomps
call
cld
clc
out
mov
imul
cmp
xchg
outsb
add
cmp
lea
je
repnz
lods
stos
iret
inc
jle
testb
outsl
add
loop
xrelease
insl
add
inc
jle
subb
or
push
cmpsl
dec
push
sbb
pushf
xchg
mov
das
ljmp
dec
push
push
pop
cltd
add
aaa
scas
aaa
push
test
int3
dec
mov
jne
test
cmp
imul
inc
mov
jl
sahf
sub
adc
jle
insl
cmc
lret
ja
adc
cmp
pop
or
dec
jle
push
mov
iret
clc
sub
push
push
mov
push
fistps
or
push
test
mov
xor
cmp
cmp
mov
out
cmpsl
jno
test
lret
jl
in
fs
sbb
nop
movsb
adc
dec
lock
jge
mov
mov
push
add
je
call
push
mov
sbb
and
shrl
push
mov
dec
jno
sarb
adc
push
test
xor
mov
inc
add
mov
push
outsl
xlat
cmp
sbb
nop
in
sbbl
jl
jmp
mov
in
pop
adc
jmp
test
shll
cmp
pop
push
sbb
test
cmp
testl
inc
repnz
cmp
jae
xor
pop
adc
data16
xchg
push
call
out
inc
push
inc
into
out
inc
pusha
nop
or
lret
xchg
cmp
push
cmp
jnp
addb
cmp
cmp
adc
nop
mov
adc
dec
lahf
dec
mov
ret
int
rcrb
fsubl
out
cld
test
jbe
rcll
push
call
repnz
xor
lods
push
adc
les
pop
pop
jge
insl
inc
iret
and
js
dec
imul
sarb
popf
mov
rcl
test
rclb
pop
leave
stos
subl
outsb
out
fsubr
lcall
lock
inc
adcb
out
xchg
push
pop
cmp
xor
lea
or
int3
add
xor
or
icebp
or
mov
fcoml
scas
jge
loopne
in
fmulp
adc
cltd
xor
inc
sti
out
negl
xor
aad
je
dec
cltd
arpl
inc
ja
adc
jae
fsts
aas
daa
mov
andb
sbb
cli
fucomip
xlat
or
data16
nop
push
xchg
jg
setae
adc
test
mov
test
inc
cmc
xchg
rcl
cli
cmpsb
xchg
dec
out
stc
xchg
call
add
rol
xchg
lock
mov
push
cmp
xor
sbb
mov
insl
jmp
ret
jne
clc
dec
xchg
add
cmc
push
pop
shll
lds
push
fmul
pop
ss
jecxz
pop
es
in
lret
test
dec
pop
mov
das
fwait
iret
fldcw
insb
sub
out
aaa
arpl
scas
call
jns
lea
add
fsubs
call
movb
sub
lret
mov
in
ds
ds
out
cmp
mov
adc
add
sub
int
pop
mov
and
call
mov
in
push
push
out
push
fisttpll
lea
mov
inc
daa
movsl
movsbl
subl
cmp
mov
cmp
lods
enter
cmp
popf
cmp
leave
sti
push
push
xchg
pusha
mov
inc
push
jecxz
push
push
in
jnp
xor
cmp
xchg
push
inc
in
mov
fisttpll
repnz
cmp
sti
lock
cmp
notl
lock
das
adc
call
xchg
dec
mov
repnz
popf
in
and
jne
cmp
adc
jo
daa
cmp
or
inc
cmp
adc
out
xchg
pop
insb
divl
push
jge
pop
lret
xor
mov
lds
xor
mov
mov
adc
cmp
push
dec
mov
loopne
push
outsb
cmp
mov
aam
popl
inc
xchg
pop
inc
test
out
movsb
add
pop
and
ds
andb
push
add
fwait
out
fs
sti
cmpsb
ljmp
bound
mov
dec
or
xchg
sbb
and
call
sarb
xor
out
in
xchg
lret
adc
xchg
dec
dec
sub
add
dec
cmc
test
test
cmp
outsl
jnp
push
mov
rolb
xor
mov
xor
jl
fnsave
lods
dec
cmp
orl
xor
xchg
xor
out
scas
mov
loop
mov
cmp
xchg
mov
pop
call
xor
inc
mov
cmp
xor
leave
test
orl
push
adc
out
xchg
mov
daa
jne
or
popa
mov
sub
rcll
sub
jmp
inc
into
stos
mov
cwtl
popa
nop
xchg
push
push
mov
enter
jle
pop
call
mov
push
push
imull
mov
mov
push
movb
mov
sub
in
pop
lock
mov
daa
adc
mull
xchg
cmp
pusha
leave
rcrb
add
xchg
jecxz
es
cli
fdivs
cmp
cwtl
js
jp
imul
rorb
mov
mov
adc
cli
nop
aam
mov
cmpsl
cmp
adc
dec
lods
inc
mov
mov
adc
pop
add
insb
pushf
push
fdiv
jae
fnstsw
gs
adc
fcmovnb
fwait
inc
lds
sbb
push
sti
ja
daa
cmp
mov
imul
call
lods
jp
in
jbe,pt
mov
jecxz
dec
or
fcomps
or
les
cmp
xchg
xor
cmc
ret
cmp
daa
jo
mov
pop
cmp
xchg
sti
cwtl
ret
sub
inc
les
bound
cmp
fs
or
or
std
dec
xor
push
lcall
ret
dec
xlat
jecxz
or
or
mov
lahf
hlt
add
fldl
ret
test
cmp
pop
sbb
pop
ret
into
mov
pop
popf
lods
rcll
adc
sahf
xchg
stc
cwtl
loope
rclb
jno,pn
cmp
call
cmp
jg
mov
lock
sbb
loopne
mov
fs
mov
leave
and
push
sbb
add
and
mov
mov
adc
or
imul
mov
or
call
pop
ja
rcrl
movsl
push
pop
mov
stc
inc
sub
mov
call
sub
cmp
movsw
movsl
pop
ret
mov
jbe
inc
inc
pop
mov
rcr
lea
pop
imul
dec
inc
js
sub
push
push
cmp
inc
xor
lock
lea
iret
inc
pop
add
sbb
scas
pusha
push
inc
xor
cmp
icebp
dec
pop
jo
dec
adc
pop
push
test
stc
mov
je
mov
icebp
inc
adc
or
xchg
dec
push
shlb
mov
repnz
test
std
push
sahf
sub
arpl
in
fcmovnb
push
jbe
ljmp
test
in
cmp
dec
mov
cmp
sub
mov
call
mov
cwtl
jo
es
jbe
sbb
lods
mov
shlb
mov
push
jo
rcr
cltd
mov
fdivs
pushf
repnz
cmp
or
pop
and
je
push
cmp
push
loop
add
pushf
jl
xor
push
pop
fisttpll
and
pop
add
mov
popf
addl
lock
in
scas
pop
in
push
jl
cmp
leave
adc
mov
dec
jne
xor
add
cmp
cmp
rorl
fwait
popa
push
addr16
lahf
mov
pop
pop
pop
pop
roll
lds
xchg
inc
or
dec
pop
xor
or
and
fisubl
std
daa
xor
sub
ja
mov
loop
add
and
loop
adc
ljmp
popa
fdivrs
or
push
push
sbb
add
push
movsb
add
push
push
imul
mov
loope
inc
mov
mov
push
xchg
not
popf
sti
mov
out
cld
popf
sti
cs
into
or
lods
je
sub
sub
iret
call
bnd
cmp
jp
lea
sub
mov
jecxz
push
mov
adc
sti
fldt
in
inc
call
out
rorl
jae
fildl
rolb
or
in
ds
clc
add
inc
push
std
add
jne
push
pop
cld
nop
adc
push
lods
out
movsb
jmp
jae
mov
jb
ja
jae
adc
rcrl
loopne
push
in
push
lea
xchg
nop
mov
xlat
scas
push
push
dec
movsl
or
dec
fdivrl
aad
rolb
or
mov
add
inc
incl
mov
and
dec
loop
lock
sarb
cmpsb
popa
and
push
add
mov
call
hlt
pop
mov
scas
ja
jbe
loope
mov
insl
por
test
stos
sub
or
cmpsb
and
mov
and
roll
out
inc
adc
call
dec
cmp
push
bound
jno
flds
push
ds
sub
or
loopne
push
call
pop
dec
jae
mov
mov
xor
bound
nop
jns
faddl
push
or
sub
aad
dec
and
xor
or
cmpsb
movsb
push
jns
sbb
xor
mov
adc
mov
pop
and
into
subb
jbe
mov
mov
xor
mov
pop
movsl
rcrb
cltd
xchg
xor
inc
xor
insb
nop
and
push
add
scas
and
push
loopne
xchg
add
and
push
xor
xchg
fistps
mov
inc
sbb
aaa
loope
cli
pop
test
ljmp
mov
loopne
pop
push
call
jbe
ret
add
sbb
xor
and
and
sub
fldenv
movl
and
subb
cmpsb
outsl
or
rcrb
mov
movsb
push
cmp
mov
add
push
sbb
fnstenv
leave
mov
add
xor
icebp
push
movsl
lods
inc
dec
sarb
imul
sub
and
mov
cwtl
xor
pop
insb
mov
lods
mov
ss
xchg
mov
lret
mov
mov
inc
mov
push
movsl
jmp
data16
imulb
mov
hlt
xor
icebp
notb
sbb
sbb
mov
sahf
adc
incb
push
dec
and
and
adc
mov
data16
lahf
call
dec
scas
inc
xchg
dec
add
jmp
test
xchg
sbb
dec
or
in
mov
and
jbe
lea
dec
xbegin
nop
or
inc
pop
mov
bound
cmp
les
repnz
push
cltd
test
fdivrs
sbb
data16
sbb
push
pop
hlt
mov
cld
movsb
repz
and
mov
and
mov
and
test
sub
lods
or
in
cmc
imul
dec
pop
sahf
fidivrl
stos
ss
cmp
clc
dec
fdiv
je
popf
imul
add
sub
mov
call
test
or
dec
inc
ljmp
jge
lea
stos
push
mov
mov
mov
andb
and
mov
cmpb
mov
pop
mov
ds
in
cmp
dec
pop
xor
nop
mov
roll
dec
or
test
rcr
push
dec
les
xor
push
cmpl
pop
dec
lods
push
mov
cmp
cmc
pop
or
in
cltd
cmp
fisubrs
rcrl
roll
sub
mov
mov
into
lahf
dec
les
sub
inc
cmp
mov
sbbb
push
int3
push
push
mov
push
push
sbb
into
call
lret
adcb
add
add
push
add
jp
add
add
add
add
add
add
add
je
add
add
add
add
add
js
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
inc
add
dec
add
add
add
add
pop
add
add
jne
xor
add
add
add
push
add
add
add
add
add
add
add
add
add
jns
add
add
add
push
add
add
add
add
add
add
jbe
add
add
add
jns
add
add
add
add
add
add
add
add
add
add
inc
add
push
add
dec
add
add
add
add
xor
add
add
xor
add
add
add
add
add
add
add
push
add
pop
add
xor
add
add
add
add
dec
add
add
xor
add
dec
push
add
add
add
pop
add
dec
add
add
jbe
add
cmp
add
add
add
dec
add
inc
add
add
add
add
add
add
push
dec
add
add
inc
push
add
ja
add
xor
add
inc
dec
add
add
add
insl
add
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
add
add
add
popa
add
add
add
add
jb
add
add
pop
inc
add
add
add
add
dec
add
add
add
add
jae
add
popa
add
add
add
add
add
add
add
add
add
add
jae
add
add
add
push
add
jb
je
add
add
jns
add
add
add
add
add
add
add
push
add
pop
inc
add
add
add
jae
cmpb
and
cmp
cmp
pop
push
shrb
inc
push
rcll
mov
ja
rcrb
xchg
sbb
ret
pop
pop
in
push
lock
jge
cmp
push
mov
adc
cmp
xchg
in
lret
adc
jb
add
scas
aam
sub
inc
add
test
inc
inc
sbb
add
ja
cmpsb
jp
loop
pop
mov
stos
mov
and
add
loop
jmp
fcomi
insb
lret
sbb
sub
and
shl
insl
add
out
into
incl
sub
ret
and
and
sub
xor
in
lret
inc
adc
js
cmp
scas
hlt
inc
movsb
and
sbb
or
sub
jne
sub
sbb
and
mov
adc
rcrl
outsl
outsb
push
pop
pop
sbbb
mov
dec
in
movsl
out
ret
inc
sbb
lret
mov
lea
mov
rorl
fs
lods
cld
in
cmp
cmp
push
mov
call
sbb
test
into
movsb
out
xchg
data16
incb
fs
jecxz
xor
cmp
repz
xchg
sahf
or
or
mov
leave
mov
mov
adc
push
and
negb
mov
adc
add
push
cld
adc
call
or
sbb
into
inc
dec
sbb
dec
in
xchg
iret
pop
sbb
push
xlat
adc
jno
ds
lret
call
lret
mov
mov
lock
xor
ja
subl
add
cmp
xchg
push
shr
adc
mov
pop
lret
sahf
lahf
jl
lea
pop
or
and
mov
cmp
xchg
mov
cmp
xchg
enter
mov
pop
xchg
icebp
mov
or
lea
pop
sti
pushf
jge
jecxz
or
sbb
or
pop
pop
call
push
nop
or
sbb
dec
int3
fstpl
aam
sbb
adc
imul
add
or
loopne
imul
mov
mov
and
aad
fwait
mov
insl
mov
movsl
decb
cmp
aas
or
stos
dec
add
cmpsl
sbb
out
std
adc
loopne
add
dec
push
mov
jne
xchg
mov
cmpsb
mov
pop
pop
or
jmp
popf
mov
es
xchg
and
es
shr
mov
mov
xor
clc
mov
jo
sub
adc
icebp
bound
daa
lret
in
sub
and
push
test
les
cwtl
and
or
jge
not
sub
popa
jnp
xchg
ret
or
in
or
or
add
insb
fistpl
mov
jno
jnp
pshufw
insl
lods
mov
inc
mov
or
inc
ds
jb
shlb
iret
scas
loope
mov
cmc
xor
adc
out
popf
cmc
cmp
cld
mov
adc
sbb
enter
clc
lcall
in
mov
iret
xor
dec
adc
mov
mov
repnz
xlat
mov
jne
add
nop
divl
daa
xchg
add
mov
int
loop
sbb
sbb
mov
jae
cmp
lahf
jb,pt
int
cmp
cwtl
sbb
cmp
mov
aaa
clc
jl
loope
movsl
insl
cmp
adc
ss
mov
push
sub
and
shl
pop
xchg
cmp
repz
cmp
pop
cld
mov
movsb
adc
mov
int3
lods
mov
pop
push
adcl
movsl
rorl
cmc
mov
dec
aaa
int
jle
pushf
adc
xchg
pop
les
test
mov
add
clc
mov
hlt
out
mov
jecxz
mov
mov
cmp
add
mov
jle
jge
push
jb
adc
xor
pop
js
sarb
mov
mov
lock
and
fimull
sub
sbb
leave
out
loope
push
mov
gs
adc
inc
adc
jne
fdivrs
lds
add
es
push
rcll
pop
adc
xor
inc
push
push
dec
lret
cli
xor
call
loope
xor
mov
xor
and
sub
add
mov
repz
sub
adc
insl
fbstp
or
push
das
xchg
test
iret
mov
pusha
lret
and
jle
loope
mov
inc
adc
mov
adc
shll
mov
adc
xchg
jae
xchg
jno
mov
call
lea
and
loope
mov
adc
data16
sub
push
dec
shlb
movsl
pop
imul
nop
jno
dec
pop
iret
ss
stos
bound
cmp
and
ror
fcompl
inc
xor
shl
add
and
or
insl
mov
push
call
add
cmp
lret
and
test
imul
mov
iret
not
xor
xor
cmpsl
dec
pop
mov
das
rolb
cmp
out
adc
out
xchg
mov
subl
inc
inc
adc
or
mov
out
pop
test
sbb
xchg
mov
sub
mov
inc
add
cld
ret
rcll
cmp
mov
mov
pop
jne
mov
into
mov
jp
cmp
cmp
mov
xchg
jne
je
and
and
ret
cmp
xor
lds
xchg
mov
mov
push
mov
dec
or
sbb
inc
push
push
sbb
dec
in
mov
fildl
jecxz
sbb
adc
outsb
imul
inc
jne
push
out
pop
push
xor
ljmp
jge
jle
push
jecxz
cmp
mov
cmp
pop
fidivrs
sbb
ret
nop
and
cmp
in
popf
outsl
cwtl
sbb
mov
jge
xchg
dec
loop
mov
xor
xor
cltd
mov
das
ds
cmc
repz
or
jmp
mov
lock
or
or
cmpsb
push
push
mov
jo
call
mov
add
shl
or
sub
inc
loop
movsb
cmc
add
adc
mov
shll
sub
or
sub
js
sbb
in
in
xor
test
mov
mov
leave
or
in
inc
ljmp
and
cmpsb
inc
add
xor
mov
mov
mov
gs
movsb
je
mov
pop
push
sti
shlb
add
or
fs
in
xor
fs
dec
push
jo
pop
adc
jmp
push
and
lods
sub
xchg
ret
cmp
push
loopne
pusha
xchg
pop
jmp
insb
sahf
mov
mov
data16
sub
xchg
fadds
xor
ljmp
push
push
sti
js
repz
test
gs
add
sub
mov
or
jg
clc
mov
js
aaa
sub
xchg
add
loopne,pt
faddl
sub
add
in
jl
jne
imul
sti
je
mov
movsl
mov
jno
mov
or
mov
push
notb
add
or
jmp
adc
rcr
into
clc
pop
dec
cmovle
jge
cwtl
pop
std
incb
inc
jge
xor
jl
in
push
mov
rcr
js
dec
mov
imul
in
jp
dec
lahf
or
shl
or
faddl
jno
rolb
inc
addr16
sti
mov
fs
add
sub
mov
aad
push
jbe
inc
dec
pop
jae
add
xor
pop
stos
sub
mov
outsb
mov
xor
jnp
jno
push
aam
enter
mov
push
xor
dec
mov
sub
inc
or
mov
sbb
stc
fwait
out
clc
lret
push
repnz
ss
loopne
xchg
and
jmp
inc
rcrb
pop
jo
pop
fimuls
xchg
push
fmuls
ffree
sti
sub
stc
mov
inc
mov
mov
xchg
xor
cmp
mov
fs
mov
pop
or
outsl
jne
xchg
or
sti
or
inc
cltd
fcoms
or
xor
stos
pop
clc
mov
sub
fisubs
mov
mov
xor
pusha
sub
mov
bound
call
loopne
faddl
sub
cmpsb
insl
bound
cmp
icebp
push
mov
mov
dec
sub
cmpsb
mov
in
cmpsb
sbb
enter
shlb
out
or
loop
mov
sub
lods
inc
fsubl
mov
insl
mov
push
push
jp
call
icebp
dec
mov
sub
addr16
sbb
inc
pop
jecxz
inc
call
push
bound
mov
mov
jae
pop
les
mov
lea
xor
xor
mov
xor
out
aad
xchg
sti
adc
lods
lret
call
xor
into
push
sbb
fsubl
xor
js
test
jnp
fcoml
mull
jg,pt
mov
sahf
in
adc
jbe
mov
xchg
lret
xor
test
inc
int
imul
or
xlat
int3
in
in
xchg
dec
pop
xor
mov
mov
dec
addb
mov
les
jo
stc
into
fistps
cmp
in
push
jbe
cld
adc
outsl
insb
add
push
push
push
lock
cld
cmp
rcrb
adc
mov
out
or
mov
add
cmc
outsl
test
hlt
mov
or
test
mov
hlt
or
bound
sub
fnstsw
mov
rolb
cwtl
mov
insl
test
shlb
fistl
add
cld
out
mov
in
mov
js
pop
frstor
push
jns
stos
adc
adc
jg
inc
adc
stc
push
cmp
cmc
inc
push
cld
es
inc
fwait
or
jo
int3
pop
repz
mov
daa
or
xlat
imul
stos
mov
mov
sub
sti
or
adc
test
jae
mov
lea
cmp
cli
in
pop
mov
fcoml
dec
mov
pushf
aad
cmp
js
dec
pusha
adc
test
sbb
xchg
xor
sbb
add
imul
inc
lret
mov
mov
and
sti
mov
push
xchg
mov
popa
jge
aaa
or
fcompl
mov
push
pop
daa
xor
shlb
shlb
xor
fldpi
xchg
cmp
nop
sti
xor
aam
sti
mov
outsl
mov
and
and
pushf
fstpl
inc
xchg
jo
mov
ljmp
pop
mov
imul
and
outsl
jb
movl
sbb
inc
pop
cwtl
stos
cwtl
or
jno
cwtl
cwtl
sbb
das
pop
lock
ss
cmp
cmp
mov
clc
int3
sarb
sahf
repz
adc
cmpsb
mov
adc
cwtl
xchg
sbb
or
xor
pop
mov
inc
and
add
in
push
push
sub
or
pop
lret
lcall
ss
xchg
inc
mov
xor
add
hlt
sub
push
stos
pop
xchg
xchg
pop
sbb
and
test
jg
adc
cmp
xchg
push
xor
call
pop
inc
rolb
or
sub
adc
push
or
sbb
pop
es
jo
dec
sbb
pop
test
cmc
dec
iret
pusha
and
je
push
dec
adcb
in
push
mov
push
not
movsb
dec
xor
cmp
lods
push
movsl
sahf
jo
loopne
mov
faddl
mul
pop
enter
call
dec
sbb
inc
cmp
arpl
fwait
push
mov
test
into
andl
call
mov
std
mov
fwait
dec
out
jo
dec
inc
fisttpl
daa
inc
sub
jmp
add
fcoml
mov
cli
xor
cmp
rcll
mov
loopne
std
inc
hlt
mov
not
push
inc
jl
orl
dec
cmp
fdivrs
push
dec
mov
arpl
cmp
icebp
xor
inc
mov
inc
mov
pop
arpl
push
out
mov
jae
adc
movsl
jo
notl
mov
push
loopne
rolb
pandn
test
or
stos
mov
xchg
jl
adc
loop
adc
inc
movsb
fwait
jnp
pushaw
adc
test
sbb
push
mov
push
pop
lret
sahf
ret
or
pop
movsl
inc
dec
pop
ret
scas
outsl
sub
cli
sbb
xchg
adc
and
nop
adc
push
inc
fbld
pop
adc
dec
test
call
cmc
in
int3
jecxz
xchg
add
cli
jecxz
push
shrb
mov
dec
fnstenv
mov
sub
push
mov
dec
inc
data16
test
jmp
test
aad
roll
add
sbb
and
add
mov
movsb
out
adc
jecxz
mov
inc
js
xchg
pop
push
mov
xchg
lcall
adc
leave
add
and
mov
pusha
or
pop
and
jae
imul
pop
dec
neg
pop
cld
pop
pop
sub
iret
shll
jo
inc
je
mov
lcall
sahf
call
pop
pop
cmp
ja
mov
jmp
cli
fdivp
jbe
and
clc
and
notb
fistl
xchg
repnz
popa
add
sbb
mov
mov
inc
sbb
mov
sub
inc
mov
cmp
pop
xor
test
jg
adc
inc
mov
pushf
call
js
inc
divl
dec
xchg
push
push
pop
rcl
xchg
movb
add
daa
mov
fimull
push
loope
xor
lods
push
cmpsb
add
adc
addr16
sub
jb
call
dec
pushf
add
pop
insb
mov
or
sub
mov
xchg
cs
ds
inc
adc
adc
dec
add
fcomi
dec
mov
sbb
or
sub
cld
cmpsb
mov
adc
sbb
pop
pop
pusha
testl
and
cmp
jge
xchg
or
inc
sti
popf
pop
push
or
inc
and
outsb
xchg
push
xchg
xchg
inc
ds
call
pushf
dec
jecxz
popf
lret
or
sti
jns
inc
xchg
insl
fnsave
xchg
testb
dec
sub
rorl
pop
add
test
sub
push
movsl
pop
popa
sahf
or
clc
pusha
push
adc
push
cmp
test
xchg
aaa
jge
sub
pop
pop
popa
xchg
call
fucomi
pop
add
sub
pop
sahf
dec
inc
mov
pop
mov
ja
fcmove
xor
dec
out
out
std
pop
and
nop
jno
int3
addr16
sub
loope
add
xor
push
ret
pop
xor
icebp
out
lea
mov
into
or
xchg
push
adc
nop
pop
ret
iret
fldenv
in
xor
mov
or
inc
xchg
jnp
lock
mov
and
push
nop
cmp
pop
dec
or
or
movsl
push
cld
cmp
or
or
jg
jae
push
orl
dec
call
test
dec
insl
test
sbb
or
shlb
pop
inc
adc
mov
sub
out
jg
xor
outsb
inc
jle
and
pop
rorb
inc
dec
push
push
lea
adc
fcoml
push
imul
pop
in
sbb
mov
mov
imul
or
ds
pop
pop
int3
fimuls
leave
or
mov
movsb
insb
inc
lcall
cmp
mov
adc
test
sub
imul
into
mov
dec
cwtl
or
fwait
and
dec
stc
xchg
sub
cmp
into
adc
frstor
xor
into
xchg
icebp
pop
inc
and
sbb
push
inc
jnp
pop
in
std
or
and
mov
sar
dec
cmp
dec
and
xchg
push
repnz
popf
dec
sbb
jbe
mov
push
aas
mov
sahf
mov
outsb
fsubl
or
daa
adc
test
fnstsw
outsb
sub
push
and
push
pusha
inc
and
cmc
or
cmp
int3
ds
jl
and
inc
push
push
mov
xor
add
insl
add
push
add
add
add
add
push
add
push
push
inc
add
add
add
outsl
add
inc
add
add
add
add
add
add
add
push
add
jb
add
add
add
add
xor
add
add
add
inc
add
add
add
xor
add
add
add
add
add
push
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
js
add
jns
add
add
add
add
add
dec
add
push
add
add
add
add
add
add
ja
add
add
jp
add
add
add
add
add
add
add
add
add
insl
add
jbe
add
add
inc
add
jno
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
inc
add
add
add
jns
add
push
push
add
add
add
add
add
add
add
outsb
add
aaa
add
add
ja
add
add
add
add
pop
add
add
add
jbe
add
jae
jae
add
add
add
add
add
add
jae
add
add
add
jno
jb
add
add
add
jb
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
inc
add
add
add
add
add
xor
je
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
inc
popa
add
imul
add
add
add
add
add
ja
pop
xor
inc
cmp
push
lret
inc
std
xchg
mov
or
in
push
orl
arpl
cwtl
js
or
jno
cmp
adc
adc
inc
ds
gs
push
push
xor
les
adc
jle
mov
mov
nop
sub
xor
sbb
pop
aas
pop
mov
mov
scas
jnp
mov
mov
mov
sbb
pop
dec
insl
mov
mov
xor
scas
or
std
addr16
mov
std
xor
in
adcb
cwtl
xchg
jo
loopne
lea
mov
pushf
push
data16
adc
cmp
push
jecxz
stos
push
cmp
or
push
lods
push
fs
push
nop
cmc
mov
and
mov
or
mov
jo
jp
xchg
sti
test
xorl
pushf
pop
cmp
call
xor
enter
es
adc
shrl
sub
clc
call
mov
xor
or
or
hlt
or
bound
sbb
repz
cmp
push
test
out
cwtl
call
add
mov
addr16
or
or
in
sub
rclb
sbb
pop
pop
inc
aad
test
jl
mov
cmp
incb
cmp
mov
stc
hlt
cmp
cld
mov
in
mov
cmp
push
sbb
push
push
out
xchg
and
call
sub
sub
mov
shl
cmp
mov
xlat
cmp
add
pusha
or
rorl
out
rclb
out
cmp
je
push
test
push
mov
jecxz
hlt
sbb
repnz
jg
cmc
out
and
jo
fistpll
lock
hlt
cmp
mull
cmp
pop
add
push
lea
mov
push
fs
test
xor
into
add
push
pop
fnstenv
cmp
cmovo
and
adc
mov
dec
push
push
imull
out
pop
inc
into
mov
mov
inc
mov
lcall
sub
dec
dec
cmp
in
call
and
nop
mov
popf
mov
adc
cmp
inc
push
xor
or
mull
in
movsl
outsb
movsl
adc
add
push
add
mov
push
popf
mov
xor
and
dec
mov
push
adc
sub
add
rcll
pusha
out
movsb
jns
daa
test
pushf
cmp
movsb
insl
mov
addr16
push
jl
adc
je
je
test
addr16
mov
mov
jnp
sti
and
sbb
inc
cmp
push
dec
cmp
fwait
sbb
jge
pop
stos
cmp
imul
inc
mov
cwtl
push
jnp
rcrb
aaa
xchg
fdivrl
and
pop
pop
sbb
pop
mov
and
fsubs
cli
je
push
stc
add
push
pop
add
lds
lea
sbb
jne
repz
stc
cmp
push
pusha
mov
push
aam
outsb
jne
pop
adc
push
adc
lea
iret
mov
mov
into
inc
loop
cmc
dec
cmp
pop
push
and
pop
xchg
push
dec
push
and
add
xor
mov
mov
pop
ss
test
or
add
lock
cmpsl
dec
andb
test
push
push
mov
inc
xor
push
or
xchg
cld
nop
and
dec
cs
pop
or
or
call
or
fdivrl
fsubrs
pop
add
mov
incb
stos
push
pop
cmp
bound
cmp
sti
add
rcr
cmp
dec
dec
cltd
or
mov
jne
pop
xor
sbb
jl
mov
movsb
adc
dec
pop
cltd
ror
lock
push
cltd
inc
inc
adc
xor
ss
push
push
lods
push
loopne
jp
jne
xor
or
adc
insb
or
sub
popf
mov
ret
sub
push
jnp
cmc
rcrb
rorb
jo
movb
mov
pop
jl
lret
inc
jmp
cmp
pop
add
push
dec
scas
jb
test
or
add
je
sbb
push
push
nop
addl
jbe
jg
mov
cmp
push
mov
lret
popf
mov
rcrl
mov
mov
inc
inc
sbb
adc
push
add
and
xor
xlat
push
and
xor
add
push
lret
inc
inc
aaa
stc
popf
add
pop
aad
mov
push
cmp
dec
xor
sub
xlat
fwait
inc
int
mov
pop
mov
pop
jmp
or
leave
rorb
roll
movsl
mov
test
push
push
inc
sub
mov
call
roll
cmpsb
rcrl
push
in
pop
stc
jae
cwtl
sbb
cmp
cmpsb
pop
outsl
xchg
jmp
sbb
jl
call
lret
pushl
adc
pop
jns
in
jbe
subl
addl
mov
inc
mov
icebp
ja
shrb
jae
xchg
dec
orl
sub
pop
xchg
lds
outsb
jbe
mov
mov
notb
fsubrl
test
cltd
ds
push
mov
in
xor
adc
ljmp
ja
loope
dec
push
jne
test
sarb
push
test
loopne
imulb
dec
add
add
negl
add
je
push
or
add
jl
mov
dec
test
jne
mov
jle
es
iret
and
cmp
cmp
lea
push
mov
mov
jl
jmp
xor
push
not
and
das
fs
leave
inc
add
push
mov
pop
pop
enter
ret
insb
push
fsts
movl
adcl
xchg
inc
mov
aam
pop
mov
aad
adc
fcoml
push
sbb
pop
push
or
inc
sbb
mov
add
xor
cwtl
ja
fisttpll
adc
pop
add
mov
mov
daa
jge
mov
hlt
in
fcoml
push
xor
rorb
adc
in
or
enter
cmp
or
dec
pop
sarl
ljmp
sbb
sub
fcoms
in
je
cmp
insl
cs
push
cmp
out
jge
fcoms
insl
lods
mov
adc
mov
or
bound
shrb
sub
ja
test
mov
cwtl
push
pop
sbb
and
xor
dec
es
push
scas
ja
mov
mov
sbb
lahf
add
jle
or
sbb
sbb
arpl
inc
inc
mov
rorl
rol
dec
xor
call
loop
mov
cmp
dec
mov
or
push
add
scas
sub
mov
or
dec
lea
xor
mov
cmpsb
mov
orb
xchg
mov
ds
testl
push
jae
jp
mov
sarb
add
pop
cwtl
test
push
sub
inc
dec
push
mov
pop
dec
or
jecxz
cmpsb
pop
jnp
jno
jns
inc
adc
or
sub
idiv
or
sbb
jg
popa
push
xchg
cmp
mov
rcll
inc
and
inc
not
outsb
xchg
sar
add
xorb
xchg
sbb
sti
je
lea
push
iret
dec
pop
in
add
pop
pop
les
dec
push
jo
imul
insb
add
adc
cmp
pop
inc
mov
rolb
jns
call
jns
push
mov
arpl
xor
xchg
xor
pop
das
pop
not
mov
or
mov
ret
pop
ds
call
mov
pop
push
jbe
add
jne
sbb
xor
or
adc
inc
popf
or
pop
pop
js
push
xor
or
xor
add
sub
mov
xchg
xchg
push
fdivrl
push
push
xsha256
cmpsb
push
xchg
pusha
jo
or
dec
cmp
push
xchg
fs
jl
or
xchg
stos
cmpsb
mov
test
add
or
and
add
ror
loop
repnz
test
mov
loop
test
mov
push
mov
adc
mov
out
jbe
loop
sbb
inc
pop
jne
out
scas
mov
aas
and
call
xchg
test
and
push
jmp
fs
jne
aas
xchg
dec
aaa
xor
das
fsts
into
fdivs
xor
push
push
push
xor
xor
lock
xor
push
shlb
inc
pusha
mov
jmp
inc
xor
jno
xchg
pop
xor
in
rorl
cmp
mov
add
push
push
out
es
xchg
push
fwait
call
fs
dec
or
in
iret
mov
repnz
or
mov
mov
pop
add
inc
jle
jmp
dec
cmp
add
dec
or
jne
sub
jnp
pop
or
pop
sub
hlt
mov
or
push
cmp
add
xchg
dec
sub
jp
push
cmp
sahf
test
loopne
or
lods
jne
cmp
push
lahf
addr16
fisubrl
and
rorb
xor
fidivl
mov
jnp
add
test
jg
cld
adc
pop
mov
mov
popa
xor
dec
fldl
push
out
push
xchg
ss
cmp
movl
sub
or
jo
test
cmp
jl
or
add
arpl
fisttpll
inc
adc
sbb
mov
cmpsb
testb
push
add
packsswb
inc
mov
mov
stc
or
xchg
loop
sub
jnp
or
mov
mov
push
pop
push
fsubrs
cmpsb
pop
xor
int3
rorl
push
jne
pop
or
pop
mov
ja
jbe
dec
ljmp
and
in
cmp
adc
xor
xlat
or
mov
adc
push
jg
cmp
pop
xchg
sub
push
push
and
push
cmp
ds
inc
adc
mov
jne
cmp
mov
adc
dec
dec
clc
lret
imul
or
push
xchg
popf
cmp
cmc
xor
aad
xor
or
hlt
fiadds
mov
das
jns
sbb
xor
push
push
xor
popf
mov
mov
mov
xchg
negb
and
test
movsb
out
cmp
aas
pop
adc
stos
jge
sub
mov
cmp
std
xchg
pusha
sub
mov
pop
mov
call
in
xchg
cmc
inc
shll
clc
fprem1
xor
push
mov
inc
daa
cmc
dec
aas
or
pop
fsts
mov
inc
nop
fisttpll
xor
fisubrl
das
and
xor
fisubl
test
call
mov
mov
int
cmpsb
mov
dec
push
mov
dec
movsl
daa
mov
push
cmc
xor
mov
mov
push
out
dec
in
mov
mov
in
aam
loop
sbb
push
xor
dec
lret
xchg
out
clc
push
test
leave
jecxz
ds
adc
into
call
ret
lock
or
test
and
sbb
call
or
mov
in
imul
pop
ret
mov
out
scas
fstps
mov
mov
push
pushf
mov
or
jle
mov
inc
cs
hlt
mov
rorl
popf
add
stos
mov
push
jecxz
inc
mov
rorb
sbb
fsin
shrl
xchg
push
cli
pop
jo
push
dec
add
jl
sub
je
popa
jp
mov
xchg
dec
xor
pop
push
pop
pop
mov
icebp
fisttpll
xor
push
push
push
lea
cmpsb
out
shr
adc
inc
sbb
in
push
cmp
movsb
das
lea
sbb
cmp
mov
test
js
pop
aaa
jl
mov
nop
push
xchg
or
or
cmp
and
fcoms
push
pusha
fbstp
cmp
inc
mov
cld
fxch
sub
hlt
and
pop
in
jmp
mov
mov
test
and
dec
and
icebp
pop
xchg
clts
jbe
mov
iret
test
test
in
in
mov
or
sahf
push
push
adc
push
and
cmp
or
std
push
sub
decl
inc
add
cmpsb
pop
dec
dec
xchg
push
iret
jnp
inc
sub
adc
loopne
jb
lds
xor
push
sub
inc
mov
xor
mov
jle
inc
es
mov
mov
mov
push
sbb
cmp
or
dec
xchg
in
and
lea
sub
sbb
push
call
cltd
sbb
push
and
jle
mov
adc
dec
jp
jecxz
push
jo
push
and
jle
or
sub
push
pop
outsb
cmp
movl
push
ljmp
aam
sbb
and
dec
int
fldl
into
mov
push
call
mov
imul
subl
lret
jle
addr16
mov
daa
inc
cmp
call
mov
in
or
cli
pop
rcrb
test
das
inc
jbe
jp
adc
xor
xor
data16
xchg
cmp
fwait
or
xor
loope
fwait
or
fdivr
inc
or
adc
fs
push
fimull
mov
cwtl
iret
inc
sbb
xor
or
aaa
lret
lds
data16
std
sub
rcl
dec
pop
movl
cmp
dec
dec
and
mov
das
sbb
push
xor
call
jns
lds
stos
loope
dec
outsb
mov
jl
lahf
aaa
adc
inc
mov
or
into
movsl
pop
cmp
dec
test
inc
xor
call
push
stc
push
cmpsl
mov
or
or
push
cmp
inc
mov
ds
or
andl
sbb
push
sbb
dec
xor
xchg
cmp
xchg
sub
cmc
add
and
jmp
add
or
cmpsl
cmp
or
sub
rclb
cmc
push
or
in
push
sbb
or
inc
fistl
or
arpl
iret
stos
cmpl
dec
push
mov
xchg
shlb
mov
dec
and
add
sub
inc
xor
and
ret
mov
nop
jp
or
aaa
je
xor
jne
adc
ret
scas
je
or
sti
push
push
sbb
sub
gs
fwait
insb
add
jb
divl
jmp
pop
xchg
stos
ds
pusha
fcmove
outsb
or
mov
pop
ret
imul
ret
cmp
call
les
pop
xchg
and
ss
dec
xchg
xor
or
or
test
fsub
push
mov
and
call
jns
test
call
xchg
add
cmc
dec
clc
adc
repnz
mov
ljmp
cmp
or
setne
mov
mov
and
neg
sahf
jbe
mov
mov
sub
je
sub
cmp
xor
out
cld
sbb
xchg
inc
and
jb
mov
mov
and
sti
pop
mov
cmpsb
lea
and
sbb
push
dec
mov
lods
cmpsb
aas
adc
adc
addl
adc
xchg
stc
pop
pop
mov
cmp
ds
subl
dec
add
mov
lret
jnp
inc
push
insb
inc
push
cmp
repz
jecxz
test
add
push
push
in
jmp
lods
dec
imul
repnz
cld
or
push
push
xlat
pop
cmp
ja
imul
mov
je
in
mov
int
cwtl
enter
es
lock
insb
fsubrs
jo
ret
or
scas
lahf
in
or
cld
push
adc
cmp
icebp
cmovbe
mov
xchg
xor
imull
imul
idivl
clc
clc
cmpsl
scas
imul
mov
sti
inc
inc
jg
inc
or
pop
jg
inc
cli
lcall
pop
or
pop
in
ret
roll
in
push
mov
in
insl
mov
daa
inc
dec
aaa
inc
add
push
jbe
mov
and
fwait
sar
adc
jo
mov
shl
mov
inc
pop
hlt
ds
ljmp
mov
in
stos
jae
xor
jno
ds
add
pop
mov
pushf
fcmovne
fbld
jb
push
in
es
or
push
push
sbb
dec
mov
loopne
lret
mov
call
movsb
movsl
push
adc
decb
arpl
iret
or
add
mov
cli
pop
rolb
add
add
add
add
add
xor
add
add
add
insl
add
xor
push
add
add
add
add
add
add
add
add
add
add
outsb
add
add
add
add
jo
add
add
add
add
jns
inc
add
add
add
add
add
add
add
add
outsl
add
add
add
add
je
aaa
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
pop
pop
add
add
add
xor
add
add
add
add
add
add
add
add
add
dec
add
add
cmp
add
add
push
add
inc
add
add
add
add
add
add
add
add
pop
jbe
add
dec
add
jae
add
data16
add
add
add
cmp
xor
add
add
dec
add
add
add
imul
add
add
jb
add
jb
add
push
ja
add
add
add
dec
inc
cmp
inc
add
add
add
add
jne
add
add
add
inc
jb
add
add
add
cmp
add
add
jbe
inc
add
add
add
add
add
add
add
add
jb
add
jp
jns
data16
add
add
add
inc
add
arpl
add
add
add
push
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
or
mov
arpl
mov
mov
cmp
pop
inc
fnstcw
mov
inc
leave
and
leave
cmp
xchg
or
jp
std
mul
cmp
sub
pop
xchg
cmpsl
cmp
popa
jns
iret
push
lahf
repz
loope
rcrb
inc
clc
fwait
pop
insl
ret
in
pop
lods
sbb
out
dec
jmp
imul
arpl
mov
xchg
cwtl
in
xchg
iret
mov
std
or
adc
movsb
std
push
inc
ret
inc
cmp
fstpl
cmpl
push
test
sbb
xchg
inc
jo
aaa
jl
orb
lcall
popa
mov
sub
lret
pop
sbb
pop
push
cwtl
sbb
rcrl
xchg
mov
xchg
push
lret
mov
test
loopne
adc
mov
cwtl
adc
loop
or
adc
xor
pop
jbe
push
xor
dec
adc
pop
icebp
cli
js
daa
adc
jns
ret
ss
mov
mov
jnp
fstps
iret
cmp
cmp
mov
and
ds
sbb
dec
outsl
jno
repz
lock
mov
ds
and
adc
in
sub
adc
stc
fldcw
arpl
gs
push
stc
repnz
xchg
mov
pop
nop
aad
jmp
test
inc
xor
js
sbb
pop
dec
jbe
jge
inc
lfs
int
pop
cmp
xor
lret
loope
aas
std
sti
adc
icebp
sti
outsl
and
xor
lods
cmp
ds
std
out
mov
cmp
sbb
pop
push
loope
addr16
xchg
fistpl
shr
enter
xor
and
stos
jae
mov
out
ror
adc
fmull
loopne
xor
in
lea
hlt
cmc
pop
ds
pop
cmp
fsubrs
or
adc
lds
dec
push
push
and
push
fs
icebp
daa
dec
or
insl
getsec
pop
loope
dec
hlt
cmp
cwtl
mov
and
movsb
shll
lods
inc
mov
pop
mov
jg
jge
jns
or
insl
sbb
and
sub
dec
movsl
push
mov
cld
or
xor
gs
jl
popf
mov
mov
mov
or
lcall
arpl
push
in
sti
in
inc
pop
push
hlt
mov
add
test
push
lods
jl
cmp
mov
fucomi
nop
inc
mov
adc
lock
xor
movsl
mov
aaa
adc
leave
xchg
pop
mov
mov
adc
xor
clc
mov
sub
jl
scas
outsl
or
negl
loope
aas
lock
inc
mov
js
in
adc
mov
aad
inc
inc
and
sbb
xor
pop
jl
jmp
push
test
wrmsr
stos
cmp
gs
push
pop
push
dec
leave
fisttpl
stc
aaa
xchg
jno
cwtl
cmp
push
mov
movsl
ss
mov
mov
in
cmp
rcl
mov
push
movsl
lea
cmp
mov
sub
dec
and
test
pop
stc
xor
aaa
adc
test
jge
pusha
decb
xchg
ror
std
int3
icebp
rolb
fdivl
lods
add
dec
dec
mov
xor
pop
pushf
pop
mov
cltd
xor
adc
mov
and
and
mov
mov
push
flds
mull
cmp
sbb
mov
icebp
stc
xchg
nop
fistl
movsb
rorb
xor
mov
shrb
pop
cltd
xchg
xor
push
inc
fcmovnb
mov
push
in
jge
into
mov
and
test
and
loop
inc
cwtl
cltd
test
das
adc
jl
mov
cld
pop
mov
mov
hlt
jno
add
push
or
scas
jl
jmp
repz
or
mov
call
test
rcrb
fidivl
lock
add
jne
and
push
test
orb
aas
jo
lret
mov
jge
shll
xor
mov
xor
ss
push
shlb
mov
inc
add
mov
inc
dec
outsl
pop
jg
pop
insl
int3
sbb
sar
sub
add
ss
sbb
fnstsw
xor
jns
xor
cmp
mov
popa
sarl
cmpl
jecxz
mov
mov
mov
inc
mov
lea
cmp
leave
and
dec
push
inc
mov
xorb
sbb
pop
cmpsb
adc
loopne
and
and
and
fwait
sub
adc
xor
jns
popa
repz
adcl
mov
imul
testb
jmp
add
xor
xor
stc
sub
xlat
jg
sbb
sbb
push
test
shl
fdivs
iret
lods
shrl
ds
adc
mov
mov
es
xor
mov
adc
lods
or
ja
xchg
mov
movsl
arpl
cmp
pop
dec
jae
jnp
cmp
lds
push
adc
inc
imul
pop
iret
movsl
xor
or
sarb
mov
jge
or
push
loop
call
sti
cltd
inc
iret
add
or
xlat
push
mov
pushf
xor
mov
ds
push
lcall
loope
xchg
and
ds
xor
loope
mov
shlb
lock
jns
in
popf
cmpl
fsubs
fsubrs
sub
inc
stos
xchg
sar
add
xchg
gs
push
sti
sbb
pop
and
xor
movsb
mov
mov
xor
pushf
aad
xor
rcrb
mov
jge
inc
lea
pushf
add
testl
lahf
ja
cltd
jne
ds
or
xor
pop
adc
popf
inc
cltd
cmp
pushf
mov
jecxz
insl
iret
jge
push
out
cmp
arpl
mov
sub
jo
mov
mov
push
clc
lahf
dec
and
mov
mov
lret
add
adc
ret
pop
stc
std
sub
adc
xchg
sahf
mov
out
enter
push
adc
bound
xlat
and
xor
push
pop
dec
mov
js
in
sub
je,pt
ja
adc
shrl
ret
inc
mov
cmp
xchg
mov
mov
inc
push
fidivrl
cli
xchg
mov
or
mov
mov
fsubp
out
mov
imul
inc
and
scas
clc
test
push
jno
imul
stc
cmpsb
mov
popf
inc
or
dec
orl
inc
inc
sbb
fistl
cmc
addr16
xchg
stos
addr16
aad
xchg
and
xchg
cli
in
popf
jno
push
xor
js
fildll
icebp
and
xor
dec
jmp
xchg
jmp
outsl
sub
cmp
xchg
sub
mov
icebp
sti
cmp
imul
das
lcall
in
imul
test
mov
js
mull
adc
cmp
imul
xor
pop
mov
push
das
mov
push
adc
cmc
in
or
cmp
sub
mov
xchg
call
cmp
stos
and
adc
cmp
icebp
push
inc
movsl
push
lds
pop
cmc
std
adc
sbb
inc
scas
pop
mov
icebp
daa
mov
clc
lret
mov
jno
aad
jmp
mov
imul
cmp
push
stc
jne
stos
out
inc
icebp
sbb
xor
in
leave
or
mov
dec
pop
inc
repnz
lds
dec
fidivl
fwait
or
das
push
lds
outsl
cmp
push
cs
xchg
inc
insb
push
popa
pusha
std
insl
push
jnp
into
inc
test
in
call
es
xchg
pop
arpl
pop
jae
loopne
aaa
adc
rcr
aad
and
add
cmp
fiaddl
test
mov
insl
fwait
lret
mov
xor
xchg
xchg
and
sbb
lods
sbb
test
shrl
lret
ljmp
or
push
ret
inc
lret
dec
out
pushf
popa
pusha
jmp
addr16
mov
fsub
pop
aas
clc
icebp
mov
stc
pop
xchg
pop
dec
mov
shr
test
jmp
or
jmp
shl
sbb
and
es
adc
jl
inc
push
popf
mov
xchg
lds
push
in
adc
std
scas
mov
arpl
movsl
es
cmp
push
or
mov
dec
mov
push
test
xchg
cmp
addr16
negl
push
daa
push
and
rol
int
cmp
add
mulb
jecxz
roll
ficompl
xor
dec
int
or
jae
in
mov
das
xlat
pop
cmc
jmp
dec
std
lods
out
or
pop
and
test
xchg
ds
push
fstpt
rcll
rclb
imul
int
jns
adc
icebp
lahf
fnstsw
rol
outsl
fisubrl
xchg
imul
sub
in
daa
push
std
sahf
or
lods
xor
popf
roll
jp
gs
int
push
mov
sbb
mov
mov
cmpsb
sahf
or
jmp
lahf
arpl
jnp
xchg
fwait
sbb
push
mov
jne
adcl
xchg
sbb
scas
push
mov
mov
mov
push
add
test
mov
cmc
in
pop
pop
mov
lret
shl
insl
loope
lods
push
add
in
ss
xor
out
sbb
pop
int
mov
gs
jmp
dec
lret
push
mov
and
xchg
add
push
mov
jmp
jne
xrelease
scas
xor
jmp
inc
cmc
mov
clc
outsb
and
mov
rolb
cmpsl
clc
pop
aaa
std
arpl
in
lret
lret
and
sarl
pushl
sbb
lcall
push
push
jbe
xchg
pop
cmp
mov
js
or
notl
aaa
nop
std
packuswb
js
mov
mov
cmp
push
fsubr
push
loopne
sahf
and
std
in
jmp
mov
cmp
jmp
sbb
fwait
jmp
aad
sub
xor
push
inc
push
stos
dec
rorb
addr16
push
pop
fildl
and
push
mov
mov
sub
mov
les
push
mov
fmull
enter
adc
inc
sbb
cltd
sub
jg
jmp
int
push
repz
js
dec
loopne
arpl
dec
pop
imul
je
xchg
jl
xchg
test
scas
inc
push
shlb
in
dec
mov
sahf
jnp
cmp
adc
je
rclb
pop
mov
mov
mov
cwtl
ds
leave
push
cmp
fwait
cmpsl
pop
lock
and
es
jo,pt
jecxz
and
xor
mov
iret
pushf
mov
adc
ja
jmp
lock
pop
pop
clc
nop
imul
js
gs
mov
stc
jo,pt
push
js
in
in
stos
test
pop
or
inc
insl
push
sti
fnstenv
sarb
fsub
fsub
loopne
xchg
ds
jmp
and
push
adc
push
mov
lds
xor
jno
mov
adc
add
icebp
mov
aaa
cwtl
adc
fcomp
push
clc
loopne
aaa
cmp
popa
xchg
inc
pop
or
push
movsb
dec
xor
xlat
or
adc
sub
rcll
push
mov
lret
mov
sub
push
xor
aas
inc
popa
mov
xchg
mov
int3
jo
fsubrl
addr16
push
add
aas
adc
mov
nop
cmp
xor
pop
jo
insb
sub
inc
pop
xchg
movsb
orl
mov
cmp
dec
loope
cmp
push
imull
cmp
pop
push
iret
insb
cmp
push
movsb
adc
mov
fildl
les
in
int
cmp
adc
inc
cmp
push
push
stos
sahf
test
adc
and
adc
mov
lods
mov
xchg
loopne
and
es
int3
js
hlt
xor
scas
sbb
jg
inc
fisttpl
cmp
jb
test
mov
cmp
push
xchg
sub
icebp
pop
mov
dec
movsb
les
fnstsw
leave
jge
cmp
xor
out
dec
mov
xchg
js
xchg
rcrb
aad
mov
es
cmp
pop
mov
adc
inc
js
push
loopne
ja
lret
je
jl
dec
push
mov
sub
fcmovnu
movsb
pop
push
cld
xor
outsl
sbb
and
and
cmp
push
data16
xor
mov
test
sub
xchg
xchg
xchg
les
in
in
int
cli
inc
add
nop
in
sbb
or
cmp
cmpsl
or
ss
je
push
mov
xor
mov
mov
xchg
add
adc
pop
and
sub
xor
iret
addr16
inc
fildl
test
inc
sahf
or
in
in
mov
xchg
add
adc
mov
cmp
icebp
ds
sahf
sbbl
insb
test
lods
sbb
xchg
mov
pop
movsb
shrb
lahf
xchg
aam
test
adc
adc
mov
arpl
adc
test
lods
sbb
adc
adc
repnz
push
test
repnz
inc
in
sub
or
adc
push
adc
loopne
cs
call
fnsave
nop
mov
pop
push
mov
nop
test
push
push
mov
test
sbb
addr16
dec
ja
addr16
mov
mov
cmc
pop
xchg
push
mov
xchg
aaa
in
mov
and
cmp
inc
push
push
cmc
sub
jnp
lret
adc
jns
in
in
imul
test
jl
lret
dec
mov
pop
aam
daa
in
and
ds
jnp
xor
push
mov
pop
loopne
loopne
and
imul
js
aam
push
cmp
in
shl
mov
sub
inc
jno
and
nop
lods
leave
xchg
push
mov
mov
cmpsl
push
dec
mov
push
loopne
rcrb
mov
push
sub
pop
mov
add
push
adc
lds
andl
lea
push
pop
popa
rorb
xlat
loopne
insl
or
cmp
pusha
sub
fadds
push
or
xor
add
iret
test
jno
mov
xchg
mov
nop
cld
mov
mov
pop
push
mov
adc
aaa
mov
push
test
sbbb
lahf
sbb
and
lahf
rcrb
insb
and
pop
xchg
and
movsb
cmp
and
sti
cld
rorb
fmul
sub
xchg
movsl
or
mov
push
mov
push
fmuls
or
sbbl
push
and
les
push
sbb
js
xchg
cmp
sbb
imul
xor
cmp
stos
loope
mov
das
push
fdivl
push
pusha
mov
inc
mov
cld
rolb
loope
adc
push
pop
cmpl
test
add
and
push
jmp
iret
adc
into
xchg
loopne
decl
inc
push
add
addr16
enter
rol
cltd
pop
fmul
sbb
lock
es
sbb
or
adc
push
dec
jo
je
dec
cwtl
mov
aaa
mov
enter
fstl
fcoml
idivl
push
jmp
aaa
in
adc
adc
mov
in
xchg
pop
lret
rclb
xor
xor
mov
mov
push
sub
lret
and
jo
call
hlt
xchg
clc
push
nop
push
cmp
bound
es
mov
fldt
add
jns
add
add
add
cmp
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
add
add
add
add
add
add
add
arpl
add
inc
add
add
add
add
xor
add
add
add
add
add
add
add
jbe
xor
add
add
add
add
add
dec
add
add
add
push
add
jbe
xor
add
inc
add
inc
add
add
add
dec
add
add
push
add
add
add
add
add
add
popa
add
add
add
ja
add
add
add
add
add
add
add
add
add
add
outsl
inc
jbe
dec
add
add
inc
add
add
imul
add
push
add
add
add
push
add
add
add
add
add
add
add
add
pop
add
add
add
js
inc
pop
add
add
outsl
add
jns
add
add
add
add
add
ja
add
dec
add
add
add
xor
add
add
add
add
je
jae
add
add
insb
add
add
je
jne
add
add
add
add
add
js
add
add
add
dec
add
add
dec
imul
add
add
add
push
jns
add
add
add
add
add
add
dec
add
add
add
add
add
add
jbe
add
imul
add
add
add
add
pop
add
add
add
adc
push
mov
fwait
xor
call
or
leave
add
xchg
pop
dec
push
bound
cmpsb
cmp
mov
inc
lret
hlt
add
jl
mov
push
mov
dec
add
movsl
test
pop
lds
clc
lods
mov
pop
mov
xchg
push
sub
cmp
adc
pop
dec
cmp
lods
js
pop
movsb
mov
push
out
inc
dec
push
push
xchg
and
sbb
call
pop
lcall
mov
aad
dec
hlt
and
rclb
insl
push
jno
inc
push
xor
jge
call
mov
xor
pop
pop
cmp
jne
and
pop
sub
sub
adc
xchg
orb
sbb
sub
adc
mov
pop
dec
mov
lods
ljmp
ss
xchg
mov
jle
test
fstl
cmp
lret
loopne
jne
mov
lods
cmp
push
je
jle
lret
fstps
jne
sub
lea
mov
cmp
je
gs
repz
push
mov
dec
inc
lods
mov
xor
in
out
jge
inc
push
cmp
push
push
adc
cli
xor
adc
push
push
rorl
sahf
loop
jae
dec
fwait
stos
or
inc
push
or
jmp
mov
inc
sbbb
cmp
pop
jo
fwait
push
xchg
and
sub
sub
sbb
push
cmp
push
into
mov
jge
ret
mov
and
xor
int
dec
mov
push
dec
fadds
jge
dec
pop
mov
inc
mov
xchg
xchg
jmp
cli
add
arpl
jo
pusha
mull
pop
push
orb
xchg
add
js
xor
test
push
inc
push
push
mov
es
test
sbb
pop
dec
xor
int3
add
shl
outsb
fs
lods
dec
clc
dec
sub
divl
insl
pop
inc
sahf
sbb
loope,pt
cmp
ds
push
orb
cmpb
mov
std
mov
cmp
inc
dec
xor
pop
inc
xorb
xchg
call
or
dec
jne
push
aam
adc
add
orps
ja
sti
in
scas
pop
je
fisttpl
adc
leave
mov
int
xchg
jbe
sub
inc
jmp
aaa
sbb
dec
mov
jecxz
push
cltd
out
hlt
dec
push
push
js
push
pop
or
mov
pop
cmpsl
cmp
mov
mov
push
or
dec
jbe
mov
dec
dec
rorl
jae
out
mov
adc
dec
sub
adc
inc
mov
jne
rcrl
adc
xor
pop
or
sbbl
dec
dec
fwait
jle
and
add
sub
jb
push
in
aam
cmp
mov
add
adcb
sbb
fnstcw
rclb
mov
xor
or
dec
pop
test
inc
sar
gs
push
or
call
push
xor
pop
inc
cmp
je
dec
shlb
into
int3
rorb
adc
pushf
mov
pop
ret
insb
or
or
pop
xchg
adc
cmp
adc
add
sbb
mov
inc
mov
xor
lret
adc
loope
rclb
lea
push
inc
dec
xchg
mov
test
inc
xlat
or
cmpsb
fs
mov
inc
or
call
js
add
pop
xor
sub
jbe
mov
jl
xchg
divl
sub
pop
pop
mov
sub
std
xor
mov
push
mov
cmp
lea
pop
jo
addr16
lea
inc
mov
cmc
out
js
cmp
repnz
movsb
lahf
mov
xchg
loop
mov
mov
sub
mov
popf
imul
test
add
cmp
loopne
aas
push
pop
scas
ljmp
stos
outsb
xchg
leave
hlt
add
scas
pop
movsb
imul
sub
or
mov
scas
mov
jne
xchg
imul
push
xor
inc
adc
pop
addr16
es
outsb
pop
mov
mov
mov
mov
add
or
movsl
inc
ror
fcoms
jl
adc
cmp
aaa
fucom
test
cwtl
pop
outsl
sbb
aad
clc
cmp
jnp
data16
mov
add
adc
insl
adc
stc
pop
mov
or
lret
dec
arpl
cmp
aas
lcall
or
roll
lcall
out
xor
or
push
fwait
push
or
adcb
adc
shll
or
cmp
mov
pop
add
fidivs
adc
adc
js
lret
jp
sub
shlb
bnd
in
pop
sbb
es
xchg
roll
ret
sbb
std
or
mov
in
test
in
mov
push
xor
idivb
cwtl
in
test
xchg
pop
fstpl
out
mov
dec
xor
mov
cmp
rcrl
daa
cli
xor
imul
ss
aaa
xor
addr16
dec
fcoml
pop
sti
mov
or
xor
outsb
loopne
xchg
fdivl
dec
mov
fcompl
inc
lret
into
clc
repz
push
push
ret
movsb
pop
or
inc
mov
lret
fpatan
xor
out
pusha
ds
pop
jo
dec
stos
int
adc
xchg
xor
es
jae
sbb
pop
bound
pop
mov
or
push
sub
mov
mov
imul
and
shr
mov
push
push
popf
pop
cmpsl
sub
mov
mov
xor
xchg
ds
sti
scas
rcr
dec
pop
or
les
inc
loope
mov
cmp
dec
in
push
jl
cmp
loope
lods
jge
loop
mov
loope
and
rcll
fcoml
orl
imul
call
push
call
loopne
daa
lock
aas
stos
sub
push
add
mov
mov
test
mov
jo
mov
push
rorb
cmp
cmpsb
jmp
mov
xchg
iret
cmp
es
mov
pop
pop
shl
and
adc
pop
mov
jbe
dec
mov
mov
scas
or
and
insb
mov
dec
add
test
pop
push
mov
pop
adc
adc
data16
lds
sarb
pop
and
sbb
imul
add
and
incb
scas
xchg
inc
stos
scas
sub
mov
mov
cwtl
call
mov
dec
inc
sahf
jge
mov
ljmp
mov
pushf
jb
into
xor
fcoms
mov
call
or
dec
or
inc
lds
cmp
lods
inc
jecxz
and
in
and
fistl
imul
jl
xchg
sti
sbb
mov
sbb
dec
add
rolb
fisttpll
add
fldenv
call
push
movsl
mov
mov
movb
mov
jmp
sub
add
loope
add
ja
push
out
mov
sub
pop
push
adc
mov
add
cmpsl
sti
insb
or
sbb
adc
lahf
mov
xor
mov
dec
xor
mov
popf
ficoml
xor
xor
xchg
push
popa
sbb
loope
scas
jb
nop
pop
dec
push
fistl
xchg
jg
dec
insl
fstpt
mov
in
jnp
and
sbb
push
add
aaa
cmp
push
and
pop
jo
mov
sarb
inc
inc
in
lahf
push
cmp
cmp
push
fiadds
scas
or
mov
mov
push
mov
cmp
adc
out
mov
icebp
sub
dec
and
or
add
daa
and
pushf
mov
rol
sub
inc
js
mov
xchg
mov
inc
add
lock
insl
adc
xchg
xlat
insb
mov
sub
adc
xor
jb
loope
dec
sub
push
stc
mov
push
push
mov
pop
cmp
cmp
adc
xchg
push
push
sti
fbld
stos
sahf
nop
movsl
add
fstps
sbb
push
and
push
fs
mov
jl
pcmpgtd
push
mov
lret
jne
jl
loop
ret
aaa
push
mov
jne
xchg
cs
sahf
es
lret
cmpsb
into
jge
cmc
xchg
push
rcrl
popf
mov
test
and
in
inc
xor
mov
cs
rclb
mov
ficompl
mov
or
xchg
and
mov
mov
adc
mov
sbb
lret
fwait
sub
out
js
leave
add
ficomps
notb
repz
push
push
pop
inc
xchg
mov
cmp
fisubs
cmp
es
ljmp
sbb
rorl
cmp
jge
add
mov
cmp
js
lds
ljmp
rclb
out
fsubrs
pop
ljmpw
shr
dec
or
adc
push
jmp
in
out
lods
jne
and
loopne
push
in
and
sti
cmp
inc
cld
inc
xor
fstl
mov
mov
popa
pusha
inc
daa
xor
or
or
jne
xor
faddl
cmc
xchg
mov
push
sub
inc
stos
ret
mov
lods
fistpl
add
roll
nop
or
mov
cmp
adc
mov
outsb
xchg
push
imul
jmp
fstpt
adc
sbb
daa
roll
cli
lret
mov
add
std
xor
sbb
sub
mov
push
sub
xor
xchg
rorl
cmpsl
cmp
out
mov
push
jg
mov
fidivrs
call
sbb
aam
imull
incb
test
xor
in
rcl
dec
mov
call
add
xchg
cwtl
clc
cmp
jmp
fucomip
sbb
popf
mov
stos
std
cld
mov
cmp
push
call
xlat
mov
fldt
mov
repz
inc
ss
lret
and
arpl
call
popa
mov
lds
mov
shr
ss
cltd
mov
or
or
rcrb
adc
dec
int
push
cmp
pop
mov
popf
popa
push
das
sbb
and
jo
push
or
sub
push
and
or
sbb
pop
lahf
hlt
adc
lahf
sbb
inc
in
and
add
cmpsb
int
mov
jg
rolb
mov
pop
out
jbe
stos
or
or
ja
test
cmp
xchg
lret
mov
sbb
jno
or
add
dec
xrelease
mov
pop
call
mov
dec
and
fildl
xor
add
add
mov
outsl
sub
dec
xor
push
adc
dec
inc
jnp
and
mov
push
adc
rcr
loope
cmp
jg
cmp
fstpl
adc
test
dec
xchg
or
idivl
adc
adc
das
call
pop
mov
xchg
inc
xor
mov
and
add
add
or
js
int
xchg
das
dec
pop
and
xor
ja
icebp
sbb
push
or
mov
xchg
pushf
and
mov
stos
pop
dec
inc
push
and
fnstsw
xorl
pop
and
add
gs
pop
sub
and
loope
shufps
ret
cmp
nop
inc
cmp
mov
cmpsl
in
mov
and
cmp
dec
mov
cmp
out
roll
add
mov
and
push
cmpsl
cmp
leave
call
add
mov
pushf
mov
rorb
mov
lcall
subps
das
aad
pop
mov
lret
xchg
cmpsb
stos
push
popf
in
cmpsb
mov
jne
push
mov
xchg
cld
pop
fldt
xor
ss
push
xchg
sub
enter
frstor
cmpsb
xchg
xor
xor
xlat
push
inc
sub
loopne
and
std
scas
mov
sbb
xor
add
mov
pop
movsl
stos
mov
sbb
jle
hlt
jne
xchg
pushf
or
out
dec
and
pop
push
push
in
mov
xor
push
mov
ds
inc
xchg
or
mov
mov
pop
adc
inc
or
add
adc
or
pop
push
jmp
nop
rep
dec
or
in
jne
int
xchg
mov
mov
push
cmp
push
lea
inc
gs
ss
outsl
mov
lahf
sbb
divl
dec
iret
adc
mov
shrl
mov
xorl
movsb
sbb
cmp
call
push
dec
mov
fstp
jl
mov
ljmp
popa
fst
in
fucomi
dec
lods
insb
push
icebp
push
ljmp
test
jbe
aam
aas
lods
in
mov
and
push
es
mov
movsb
imul
inc
inc
test
test
dec
cmpl
mov
pop
ljmp
push
or
dec
mov
inc
dec
jno
inc
or
js
jbe
cwtl
push
divb
add
stos
in
mov
push
xchg
push
sbb
cmc
dec
clc
jl
pop
ret
xchg
sahf
pop
sbb
add
nop
mov
dec
cmc
mov
add
pop
shl
test
call
xor
inc
mov
sbb
lea
lods
mov
test
fsubr
add
xchg
sahf
stos
ss
stos
mov
xchg
xor
and
int3
cmpsb
pop
push
inc
call
loope
pop
stos
addr16
aaa
xor
in
jge
adc
inc
pop
int
movb
or
push
mov
mov
push
pop
or
out
adc
jp
fists
mov
or
ljmp
in
mov
pushf
stc
lea
mov
jb
lea
sub
ss
stos
pusha
test
cmpsl
stos
test
mov
cmpsl
test
fs
jo
pop
fistl
inc
test
in
mulb
or
pushf
dec
popf
mov
fcmovnb
xchg
js
inc
aaa
sub
ds
dec
mov
push
test
push
sarb
push
fildl
mov
lahf
call
cmp
inc
imul
out
xor
cld
out
inc
adc
mov
jmp
dec
adc
test
shll
inc
aaa
dec
fadds
lret
pop
jg
push
loope
push
loope
lods
adc
and
inc
lock
sub
inc
xchg
std
mov
int3
int3
mov
aaa
fwait
ds
push
ljmp
add
cmp
cmp
sbb
cmp
insl
fldl
insl
test
xor
lret
adc
jge
dec
mov
insb
push
or
sbb
fwait
cmpsl
xlat
std
cmp
push
aas
ja
test
out
or
mov
mov
add
fldl
int3
jp
pushf
mov
test
push
sub
hlt
xchg
cmp
test
xor
xlat
ret
lcall
loopne
or
jo
mov
push
aaa
movsb
hlt
push
mov
or
js
push
test
test
ret
lock
add
inc
in
inc
inc
jge
mov
dec
call
mov
inc
in
inc
pop
xchg
rcll
pop
nop
shl
mov
or
add
loopne
in
lods
inc
aas
js
inc
mov
call
les
push
out
insb
dec
pop
xor
outsb
inc
ja
rcr
sub
int
cmpsb
test
inc
repnz
dec
ret
or
cmp
jle
lock
fdivrl
lret
fsubs
jle
cmp
mov
or
jle
lock
push
mov
push
loop
ret
xchg
jp
mov
push
cld
jg
addb
sti
movsb
xchg
imul
in
push
out
out
dec
jbe
push
imul
inc
mov
inc
push
lea
loop
push
push
push
push
pop
daa
call
xchg
push
or
call
mov
lret
bound
shr
mov
push
push
sub
push
dec
mov
and
popf
loopne
leave
push
mov
pop
or
dec
dec
or
fmulp
mov
dec
shlb
xor
dec
dec
out
aad
ret
mov
mov
repz
inc
imul
dec
rolb
aas
cmpsb
lret
cld
xchg
int
and
mov
out
enter
out
jp
inc
fwait
mov
push
jo
jae
js
mov
inc
filds
mov
mov
mov
mov
call
mov
fs
sarl
xor
into
pop
popa
ljmp
cmp
cmp
lcall
adc
sbb
push
adc
out
roll
sbb
lret
mov
into
mov
jno
js
adc
mov
mov
shlb
xor
push
mov
popa
cmp
repnz
add
pop
push
call
out
lea
push
push
xor
sti
or
in
cmp
pop
pop
or
jge
fnstcw
bound
push
xor
xor
stos
sbb
movsb
sahf
pop
int
cmpsb
loope
mov
cmc
or
sbb
je
lret
sub
lea
dec
or
out
add
prefetch
or
xlat
xchg
mov
sub
je
cmp
cmc
sbb
mov
cltd
cmpsl
add
dec
mov
pop
push
sub
dec
add
lds
push
test
pushf
cmc
jo
mov
shl
out
jmp
push
lret
mul
cli
and
inc
sub
stos
pop
lahf
add
stc
sbb
sub
jmp
add
out
cmp
cmp
imul
inc
dec
cmp
movsl
add
add
leave
daa
mov
out
pop
pop
sub
out
sbb
mov
je
adc
ljmp
lcall
mov
loopne
sti
inc
sub
out
aam
insl
mov
sar
cmp
daa
rcr
mov
mov
addl
jno
insl
rcr
xorb
nopl
icebp
pop
sub
sti
adc
sbb
or
ljmp
aam
cmp
std
cmpsb
hlt
int3
std
cmpsb
icebp
ret
mov
iret
and
int
dec
adc
mov
sub
cltd
fistpl
jmp
cmp
in
mov
jmp
cmpsb
movsb
sub
aad
ja
mov
fwait
mov
jl
pop
jle
add
shr
sahf
push
jb
flds
mov
outsb
inc
fcomi
fwait
imul
adc
mov
cmp
das
mov
xchg
xchg
dec
cmp
ror
sub
lods
push
out
insl
jge
out
sub
mov
inc
or
xchg
sbb
push
fstpt
std
inc
out
inc
std
fdiv
scas
leave
fwait
aaa
pop
cmp
and
fisttpll
jb
push
xlat
sbb
inc
lods
pop
call
test
inc
mov
sbb
pop
pop
mov
push
out
pop
push
shll
in
pop
push
call
mov
or
jmp
dec
jle
andb
movsl
cmpsl
or
xchg
stos
adc
push
jns
cmp
pop
minps
cmpsb
icebp
push
les
aas
mov
cmp
ret
not
push
or
dec
adc
mov
xchg
push
cld
pop
xchg
adc
lret
or
loop
sub
ficoml
loope
adc
mov
jno
fwait
cmpsb
lock
pop
cmp
mov
js
incl
cli
jl
lea
nop
roll
or
or
xor
xor
push
xor
lret
add
add
rclb
fisttps
dec
mov
leave
aaa
xor
xor
movsl
push
pop
push
mov
xchg
or
or
and
hlt
out
in
push
cmp
ss
daa
pop
push
enter
mov
movsb
jns
or
mov
sti
xor
inc
in
dec
sbb
rcrl
test
loopne
pop
xor
pop
testl
rcll
push
mov
fwait
out
or
dec
or
outsl
mov
and
das
pusha
jl
sub
loopne
sub
or
adc
push
mov
jbe
pop
pop
add
aas
rorb
sub
fdivl
mov
mov
push
mov
and
rcrb
xor
adc
or
add
mul
and
rol
adc
xor
loop
aas
jbe
dec
sub
xchg
push
loope
in
aam
or
dec
shrb
cwtl
out
and
stos
push
pop
in
mov
xor
sbb
fstps
jmp
adc
cmp
sub
scas
xchg
xchg
ja
jmp
nop
cmp
lret
lds
sub
xchg
sarl
inc
and
mov
xchg
cmp
mov
jne
mov
push
inc
xchg
xchg
jmp
or
dec
test
add
ror
xchg
cli
push
std
loop
insl
xor
push
rcrl
dec
cmpsb
movsl
gs
fdivr
cmp
cmp
push
inc
in
std
call
push
aam
aaa
aad
dec
mov
jo
daa
push
xor
insb
sub
xchg
lea
mov
inc
jo
inc
inc
sbb
or
in
sub
xchg
cmp
stos
push
movsb
jp
or
jecxz
inc
jge
mov
lret
cltd
inc
add
ja
or
jbe
pop
movsb
or
or
mov
mov
test
pop
mov
or
inc
roll
call
xchg
adcl
mov
mov
add
push
cmpsb
popf
dec
cmpsb
mov
mov
push
add
out
lea
cmp
jb
sahf
pop
pop
or
cmpsb
mov
addr16
sbb
push
lea
mov
call
cs
or
or
sub
fucomp
into
popf
add
clc
mov
push
inc
sub
add
xchg
push
mov
adc
add
add
cmpsb
xchg
lcall
hlt
call
xchg
xor
popf
ds
mov
adc
push
iret
pop
push
shl
or
shl
es
rorl
lcall
jno
sbb
pop
mov
loopne
add
mov
shlb
sbb
je
jmp
adc
jle
lock
pop
jns
push
negb
lret
or
push
cmp
dec
jbe
jp
pop
popf
xor
testl
pop
pop
lea
sub
xlat
sub
sbb
pop
fadds
icebp
mov
jecxz
lcall
mov
jo
dec
in
pusha
fisubrl
mov
push
sarb
and
push
adc
add
mov
mov
mov
dec
mov
and
dec
sub
aam
popf
mov
dec
pop
jl
out
movsb
or
nop
test
sti
sbb
test
iret
inc
fsubs
js
repz
daa
mov
push
push
sub
cld
iret
fisubrs
test
push
inc
mov
adcl
xlat
shl
mov
sub
and
jg
lock
daa
mov
ljmp
jae
mov
add
cmp
xchg
rclb
jns
xchg
test
mov
pop
sti
and
mov
ljmp
push
cld
ljmp
add
xor
mov
leave
push
mov
mov
or
cmp
jbe
rcl
pop
cmp
rclb
push
mov
cld
dec
sbb
push
mov
jecxz
mov
mov
hlt
daa
push
in
out
test
push
js
sub
xor
dec
jge
fwait
cmpsb
push
fs
jo
lds
fsubs
mov
arpl
clc
mov
in
loopne
popf
adc
dec
bound
lock
mov
test
rorl
mov
sub
pand
cltd
and
call
out
cmpb
and
sub
out
fcmovne
push
push
call
xor
mov
adc
fbld
mov
popf
repz
std
xchg
lock
mov
dec
push
xor
jo
cmpb
pop
mov
les
arpl
xchg
loope
repnz
std
mov
stos
sti
lods
jg
fnstsw
idivb
test
push
push
sbb
dec
push
sub
pop
popf
inc
stos
mov
or
cmpw
fmull
pop
sub
cmp
push
jbe
insl
xchg
jge
roll
and
or
test
dec
push
add
xor
push
push
jle
jnp
inc
out
je
dec
jns
sub
and
fucomi
ret
mov
sbb
scas
sbbl
dec
mov
or
andb
xor
push
sahf
popf
int3
repz
insb
loopne
orl
and
dec
std
jno
jbe
sbb
add
xchg
dec
mov
outsl
pop
mov
repnz
inc
div
mov
stos
fidivrl
adc
mov
out
popl
xor
std
dec
or
lock
rep
test
mov
in
arpl
sbb
and
lock
jne
inc
xor
sub
cmp
push
jmp
dec
sub
push
and
and
adc
xchg
into
xchg
push
fildl
jle
jge
out
cld
sub
repz
std
fwait
xchg
xchg
or
sub
cmp
jbe
add
dec
sbb
dec
sbb
mov
sbb
push
call
push
lea
mov
pop
xor
dec
push
push
test
jmp
cmp
fcomps
adc
pop
into
lea
cmp
in
cmpsl
rcrb
sub
dec
mov
xchg
mov
xlat
or
or
repz
jnp
rclb
aaa
push
lock
lea
jb
loopne
nop
test
sti
lods
inc
insl
dec
pop
jge
aam
pop
int3
je
mov
adc
dec
aas
sub
pop
xor
push
mov
cmc
std
fwait
inc
push
ds
push
adc
orl
in
push
std
add
test
daa
mov
dec
or
pop
mov
mov
xchg
push
rclb
fistpl
jb
test
pop
push
mov
daa
mov
jl
stos
sub
xchg
outsb
cmp
xor
fs
pop
fcomps
dec
cmp
daa
in
rcll
cmp
negb
in
lea
jmp
ffreep
test
jecxz
in
push
fdivrs
jne
adc
aam
or
in
and
nop
push
mov
int
mov
push
pop
push
shrb
arpl
fidivrs
fcompp
mov
mov
mov
push
xchg
xchg
jnp
or
sbb
pop
adc
in
sub
int3
add
inc
cltd
pop
xchg
mov
dec
and
adc
or
mulb
and
inc
adc
push
sub
push
lea
mov
gs
test
mov
xor
lea
cmpsb
sbb
or
pop
lret
mov
mov
dec
pop
cmp
std
mov
or
push
mov
or
lret
and
sti
sub
call
mov
test
mov
mov
sub
xor
shr
in
sbb
shlb
nop
adc
into
test
jl
cltd
in
scas
and
xor
nop
cs
cld
push
pushw
push
push
push
push
push
call
data16
sarb
stos
mov
test
mov
jmp
push
insl
cmp
aam
jmp
mov
mull
cmove
sahf
push
cmp
push
mov
test
rol
pop
mov
xlat
inc
cmp
push
or
cwtl
faddp
jae
out
imul
push
adc
push
pop
push
or
xchg
idivl
mov
fcomp
cwtl
xor
dec
inc
adc
push
cmp
mov
mov
cmpsl
lods
push
inc
pop
and
and
cmp
in
xchg
xchg
jecxz
popf
mov
int
jnp
add
pop
inc
popa
fistpll
jbe
data16
jns
add
mov
or
in
cltd
jmp
mov
stos
xor
nop
mov
stos
call
test
xchg
pop
aam
mov
or
add
ljmp
je
dec
cmp
add
sub
dec
mov
xor
add
loope
adc
icebp
test
lods
mov
pop
xchg
lods
dec
mov
ljmp
adc
pop
dec
inc
pop
mov
push
or
gs
sub
jo
pusha
sti
dec
add
dec
jmp
pop
sahf
mov
adc
outsl
rcr
jmp
shr
pop
rol
arpl
int
xchg
inc
fisttpll
cmp
add
cmp
push
mov
les
mov
test
fisttps
les
dec
pop
les
mov
stos
jbe
mov
xor
out
cmp
pop
dec
mov
cmp
in
std
arpl
hlt
loop
sub
dec
or
jb
lock
pop
out
inc
imul
push
mov
cmpl
push
pop
cmp
pop
dec
mov
lock
cmpsl
xor
subl
mov
add
das
daa
jnp
dec
xchg
cmp
decb
das
inc
pop
in
cwtl
test
jbe
and
pop
inc
add
repnz
adc
enter
lea
lret
mov
repz
dec
ds
push
in
xor
jb
xor
pop
push
jo
mulb
xchg
or
call
or
daa
cmpsb
popa
jne
cmp
std
mov
mov
xor
icebp
or
pop
push
xchg
cmp
jnp
andl
or
sub
idivb
ror
sahf
adc
in
out
dec
or
pop
mov
push
fisttpll
xchg
mov
sbb
outsb
ret
mov
dec
in
jae
in
xor
dec
push
cmovl
shrl
inc
jne
mov
shlb
xchg
out
dec
sub
xor
cmpsl
sbb
push
mov
cmp
push
sti
mov
xor
lret
xor
repnz
cmpsl
or
xor
push
dec
or
incl
push
mov
sti
inc
in
inc
out
pop
push
cwtl
test
push
mov
mov
in
std
cmpsl
and
cmpb
mov
inc
mov
stos
in
add
sarb
mov
dec
cmp
mov
mov
xchg
sbb
lret
fdivl
jo
call
insb
xchg
mov
mov
je
xchg
pop
sti
push
pop
ds
les
int3
shlb
cmp
cmp
add
mov
addr16
push
pop
or
call
les
orb
lock
pop
out
xor
mov
clc
es
lock
push
call
inc
popa
std
xchg
clc
pop
adc
pop
mov
or
daa
xchg
or
dec
lret
dec
cmpl
imul
std
idivl
std
pushf
or
js
test
iret
pusha
push
mov
cmp
push
push
dec
test
out
sarb
ljmp
push
push
mov
mov
dec
hlt
fcomps
inc
popf
sub
pushf
pusha
add
into
ljmp
pop
push
jne
or
mov
mov
sub
outsl
clc
dec
fndisi(8087
ljmp
mov
rclb
pop
lock
cmp
pop
xchg
cmp
or
pop
fsub
sahf
std
test
hlt
lea
inc
leave
iret
or
add
mov
adc
jmp
mov
pop
loopne
adc
dec
ja
mov
call
insb
movsl
imul
push
pop
mov
adc
xchg
or
cli
dec
xchg
xor
shr
fstpt
adc
add
cld
insb
test
cmp
xlat
popf
icebp
repz
and
mov
mov
xchg
aad
loopne
push
neg
push
popf
or
leave
mov
push
popa
lea
call
xchg
sub
pusha
xchg
xchg
and
mov
cli
xor
out
je
in
mov
call
cld
mov
mov
ret
int
jp
jmp
nop
aad
mov
arpl
push
push
les
jns
xor
mov
push
mov
mov
pop
xchg
push
push
ja
inc
enter
outsl
repz
dec
mov
sbb
gs
sti
mov
fsubp
mov
mov
sub
and
inc
gs
pop
out
cmp
cmp
add
push
inc
push
mov
call
insb
push
pop
call
and
in
dec
test
adc
add
add
add
add
add
jp
add
push
add
add
add
add
dec
add
add
add
aaa
add
add
add
add
add
add
imul
add
dec
add
pop
add
add
add
add
xor
add
jbe
add
add
add
add
dec
add
add
add
add
add
add
dec
add
push
add
aaa
inc
add
add
add
pop
add
add
add
add
add
add
add
add
arpl
add
add
add
add
add
dec
add
add
add
add
add
add
outsb
add
add
jo
dec
add
add
xor
add
add
add
add
add
add
add
add
push
add
inc
xor
add
dec
push
add
add
add
data16
add
add
inc
add
add
add
push
pop
add
add
inc
add
add
add
add
jp
add
add
add
add
outsb
add
inc
add
add
add
add
push
add
dec
add
jae
add
add
add
add
push
add
push
add
add
add
add
add
jno
add
add
add
add
add
ja
xor
add
dec
add
js
add
insb
add
add
push
dec
add
push
add
add
add
add
jns
push
add
jp
add
xor
add
inc
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
jbe
add
outsl
dec
ljmp
clc
stc
jo
movsb
cmp
insl
and
fildl
inc
incl
dec
xchg
and
test
lcall
mov
clc
icebp
mov
loope
cmp
mov
ss
pop
stos
out
sub
mov
pop
imul
mov
cmpsl
sbb
inc
loopne
or
aas
cmc
jge
mov
dec
sti
push
popa
mov
lahf
fwait
out
lock
jmp
leave
jae
loopne
imul
push
push
fildl
mov
pmovmskb
sub
insb
push
std
jno
jg
scas
inc
xchg
push
jmp
mov
cmp
std
or
leave
sub
outsl
push
ljmp
mov
fnstenv
frstor
mov
fwait
arpl
lods
sarb
test
mov
mov
andl
dec
stc
aaa
pop
icebp
pusha
xchg
and
xchg
or
fsubs
cld
call
rclb
cmp
add
mov
ret
pop
dec
icebp
xor
sub
fmuls
popa
pop
and
adc
or
addr16
and
and
pop
inc
movsl
push
insb
popf
mov
add
cmp
cmp
jns
pop
cmp
outsb
fldln2
adc
and
cmp
pop
mov
xor
mov
ds
out
pop
cld
in
cmp
pop
jno
mov
lret
jge
add
sub
adc
nop
push
dec
sbb
jmp
or
add
push
jnp
std
std
push
clc
aaa
cmpb
inc
mov
adc
mov
push
leave
imul
rclb
dec
js
pushf
test
jae
flds
sbb
inc
push
adc
mov
adc
pop
pop
sbb
lock
dec
xor
push
inc
and
lret
xchg
in
pop
popa
in
push
jb
jge
js
fxch
adc
scas
clc
and
sbb
cmp
popf
shlb
sbb
cmp
rcrb
sbb
pop
jecxz
into
cmp
xor
sbb
jno
leave
cmp
setae
lahf
mov
or
inc
lea
std
packsswb
xor
addr16
and
jmp
sub
push
or
loope
sbb
repz
call
std
jns
popf
icebp
mov
mov
cmovge
sbb
mov
cmp
aam
add
cmp
lret
popa
imul
lret
jmp
jnp
xchg
std
mov
call
bound
dec
insl
pop
js
xchg
stc
inc
ret
movsl
jae
adc
icebp
add
repz
push
xchg
shrb
inc
mov
daa
mov
mov
stos
imul
cmp
mov
mov
dec
dec
mov
test
push
mov
xchg
loopne
and
jecxz
int
repz
pop
jne
fwait
les
adc
fidivrl
mov
lock
xor
orl
add
inc
mov
and
mov
cmp
xor
pop
lea
add
cltd
addb
adc
mov
xchg
push
push
or
dec
push
in
icebp
pop
and
sub
push
ss
and
pushf
or
adc
sbb
cmp
cmp
mov
icebp
add
in
cmp
das
pop
daa
fwait
cmp
insl
push
push
sub
mov
xchg
loopne
nop
mov
fisttpl
ja
loope
rorb
clc
sbb
cmp
shrl
notb
not
rcr
dec
ret
push
jmp
sub
lcall
pop
dec
int
mov
rcl
imul
sub
add
push
push
fwait
mov
mov
repz
ljmp
fcoms
fucomip
sub
xor
shr
push
nop
ds
rcll
in
mov
add
mov
fwait
dec
roll
frstor
pop
dec
sub
xor
mov
mov
ficoml
movsl
scas
sahf
pop
mov
mov
into
rcl
inc
adc
mov
jae
lret
and
out
cmc
lret
ja
rcrb
or
pop
sbb
sub
adc
jmp
pop
add
mov
or
mov
mov
popf
rcr
insl
sti
xor
in
inc
out
xchg
clc
mov
ficompl
mov
inc
stos
adc
mov
cmp
xchg
cmp
leave
sbb
inc
jecxz
leave
pop
cmp
outsl
fisttpl
ds
in
push
mov
push
popa
push
lahf
imul
dec
push
or
mov
pop
sbb
rcrb
mov
filds
mov
jge
loopne
jge
jmp
xor
mull
jg
xor
cmp
fdivs
or
adc
arpl
add
lods
jmp
pop
insb
mov
xor
clc
mov
adc
fadds
loopne
jae
inc
test
sub
xchg
xchg
adc
mov
scas
jb
xor
std
push
enter
test
shlb
pop
mov
cltd
xor
aas
inc
andl
or
pop
mov
adc
jnp
xor
or
push
mov
pop
repz
and
push
sbb
rorl
or
test
sub
jl
orb
nop
ss
sbb
call
mov
aaa
lret
insl
inc
push
mov
movsl
or
inc
sbb
dec
jmp
shlb
insl
mov
bound
imul
scas
aad
xor
inc
cmp
std
jmp
loopne
popf
mov
xchg
xor
push
mov
fldl
fcomi
adc
popl
adcb
inc
imul
push
mov
pop
loopne
loopne
loopne
loopne
ss
je
sub
fcmovnbe
mov
and
nop
test
and
ss
sarl
enter
int
fcomps
subl
adc
fcoms
jb
jae
rclb
fcomps
jmp
or
fbstp
out
int3
inc
adc
dec
popa
std
push
inc
push
fisubrl
sbb
push
je
popf
jmp
lret
add
sbb
add
int
and
and
jnp
jecxz
or
jns
adc
clc
sbb
xor
jge
shrl
lock
adc
sar
dec
jmp
add
in
or
adc
out
or
push
xor
cmp
ds
push
in
inc
clc
xor
clc
sub
dec
adc
popa
xor
push
pushf
sbb
insl
fs
outsb
rcrl
loop
lret
add
push
test
inc
rclb
cmp
popa
mov
iret
adc
xor
lea
push
fldt
mov
or
cmc
inc
xorps
fldt
xor
sbb
pop
shrl
scas
popf
cmp
mov
es
pusha
add
push
shll
loope,pt
scas
inc
or
dec
daa
movsb
popf
or
mov
pop
mov
and
mov
movsb
pushf
add
test
sbb
loope
sti
push
imul
mov
insl
es
ss
imul
adc
inc
xchg
or
fsts
cmc
inc
les
shl
fildll
repz
scas
sbb
or
pop
daa
scas
sbb
gs
push
dec
addr16
cmp
mov
cmpsb
in
in
cmpsl
sbb
mov
shlb
jae
sub
mov
cwtl
aaa
fwait
push
mov
sbb
in
es
jmp
mov
cmp
push
sub
push
mov
sbb
iret
lret
jne
int3
sbb
aaa
cmp
lcall
or
pop
mov
iret
in
cmpsb
popf
mov
sbb
and
iret
ds
dec
xchg
push
push
stc
and
or
xchg
and
mov
aas
shl
lahf
pmaxsw
lods
push
push
jmp
shll
xor
fcomp
mov
loopne
and
push
or
adc
dec
ss
ss
sbb
repz
add
stos
dec
out
xor
push
jbe
aas
and
adc
pop
sarl
arpl
fwait
mov
loopne
loopne
loopne
data16
mov
jo
sahf
push
xchg
cld
mov
popa
test
adc
xor
inc
and
xor
mov
xor
pop
sti
sti
loopne
and
mov
int3
or
sub
cltd
mov
sub
fsubr
or
jmp
xor
fsubrs
jge
lea
or
popf
sbb
and
mov
les
jno
movsb
aas
scas
or
in
mov
pop
aas
jl
mov
xchg
jnp
fistl
test
cmp
call
xor
lock
insl
popf
jo
xchg
movsb
or
shrb
mov
cmc
aas
cmp
jmp
inc
xchg
mov
xor
dec
dec
or
xor
aas
push
dec
push
pop
loope
push
jge
mov
in
lods
sbb
es
sub
imul
inc
push
aam
fwait
jecxz
dec
push
cli
mov
loope
xor
popf
shrl
test
mov
mov
fsubs
pop
cmp
fs
mov
jge
jge
std
cmp
fnstsw
lret
fs
cwtl
roll
aad
lcall
add
jae
mov
xchg
loopne
es
lods
and
out
xorps
roll
sarb
aam
adc
negb
pop
push
cmp
push
sti
pop
dec
decl
jae
inc
and
push
test
sti
idivl
inc
inc
insl
adc
push
dec
outsb
imul
ljmp
repnz
or
xor
sbb
xchg
mov
stos
icebp
cmp
inc
sub
push
lahf
pusha
adc
add
inc
test
inc
pop
aad
in
idivb
pop
and
xchg
adc
sarb
sbb
leave
mov
mov
aas
xchg
loope
push
leave
push
pop
out
jecxz
std
adc
cmp
fwait
add
cltd
xor
jmp
cmp
and
outsl
cmp
jmp
outsl
xor
fst
push
scas
test
addr16
in
push
push
rorb
js
and
js
inc
call
or
pop
movsl
in
xchg
mov
jmp
xor
mov
aaa
cmp
cmp
inc
cmpsl
fldt
and
xlat
stc
sti
out
std
mov
sti
sbb
inc
dec
fwait
leave
in
or
and
inc
fnsave
repz
jmp
and
ss
cmpsb
lods
push
mov
pop
leave
cmpsb
sbb
add
sarb
inc
addr16
xlat
pop
shlb
jg
jo
ss
adc
aaa
push
rcrb
addr16
or
mov
aaa
dec
or
mov
stos
and
sub
das
and
push
push
mov
nop
js
stos
loopne
aaa
push
dec
in
in
stc
sub
popa
sub
push
pop
and
mov
cwtl
adc
in
test
push
mov
and
and
sbb
aad
push
shr
mov
push
push
js
add
mov
mov
mov
loopne
daa
lcall
push
push
adc
aas
ret
mov
sbb
and
imul
cmpsl
mov
mov
cmp
sub
gs
xor
mov
xchg
cmpsl
aas
sbb
or
xor
imul
loop
adc
lods
xchg
orl
sub
jbe
test
ret
mov
mov
nopl
pop
sahf
pop
js
jle
xor
stos
test
mov
sbbb
sub
lret
cltd
repnz
xor
popf
cmp
adc
jnp
repz
movsl
adc
fwait
gs
test
imul
mov
in
xor
sbb
cmovb
stc
or
icebp
inc
insb
mov
xchg
in
nop
mov
lds
js
call
inc
popf
pop
and
adc
imul
jle
sbb
cmpsl
cmp
in
cmpsb
sbb
pop
cmpsl
adc
jns
shll
inc
test
pop
pop
xchg
movsl
mov
cmp
scas
push
loope
jl
mov
mov
xchg
rcrb
mov
adc
pop
inc
test
scas
mov
mov
cmc
xlat
shlb
out
adc
lcall
out
adc
imul
push
and
pop
push
fldt
popf
mov
shlb
push
mulb
imul
int3
popf
jno
stc
xlat
test
icebp
pop
xor
sbb
cmc
mov
lds
push
rol
and
push
sarl
js
mov
loope
xor
scas
jle
aas
sahf
dec
mov
insb
inc
popa
push
subl
scas
mov
or
xor
cmova
inc
mov
pop
stos
dec
jne
stc
out
or
adc
fucomp
test
pop
test
jne
inc
mov
xchg
ret
idivb
out
roll
fisttpl
leave
das
arpl
jle
insl
xchg
imul
inc
and
arpl
icebp
inc
scas
push
rcl
in
mov
cmp
push
pop
sti
pop
xor
test
mov
mov
aaa
sbb
jae
addr16
pop
jmp
out
incl
mov
ret
jecxz
lock
aad
aaa
fwait
lds
xchg
mov
xchg
jmp
in
jmp
fnstcw
add
pop
sbb
and
addr16
push
pop
stc
jne
stos
mov
xchg
mov
mov
pop
shlb
in
inc
orb
adc
mov
rol
shr
out
push
and
mov
push
adc
test
mov
das
push
jge
xor
test
ja
mov
rcll
and
inc
mov
cmp
dec
push
inc
mov
insl
lock
or
adc
mov
xor
nop
mov
test
imul
xchg
dec
cmp
lcall
popa
jnp
pop
push
inc
push
dec
jl
mov
pop
push
xor
je
xchg
icebp
push
jmp
lret
or
mov
jmp
pop
insl
mov
sahf
mov
bswap
mov
xchg
dec
ret
mov
mov
pushf
xor
mov
inc
int
xchg
xchg
sbb
aad
mov
push
in
and
push
pop
pop
jg
xchg
arpl
icebp
int3
call
xchg
movsl
push
or
pop
cmpsl
and
sub
sub
sarb
sbbl
scas
lds
jmp
push
std
pop
mov
mov
addl
sbb
clc
jae
and
shll
lret
mov
cmp
jo
ja
gs
in
ds
inc
ret
inc
or
and
arpl
fbstp
enter
or
cmp
mov
xchg
push
or
test
fimull
mov
insl
jns
xchg
push
popa
xor
clc
mov
xchg
xor
pushf
xchg
shlb
fisubs
adc
or
imul
imul
bound
mov
lahf
inc
xlat
fisubrl
es
sub
dec
adc
outsl
and
subl
rcrl
pop
ret
push
nop
cmp
int
shufps
sarb
test
in
bound
jg
sti
es
es
movsb
clc
xlat
shll
push
popa
loopne
out
test
adc
xor
mov
aaa
addr16
in
push
sti
cmp
loope
push
fldl2t
es
out
loopne
cmp
rcll
jl
sub
mov
loopne
loopne
xor
hlt
cmp
inc
pop
test
nop
cwtl
xor
insl
mov
or
xor
scas
or
scas
add
add
dec
ficompl
fwait
lods
push
mov
or
lea
insl
push
pop
fstl
sbb
adc
lock
mov
loope
cmp
int3
jno
and
ss
clc
mov
or
add
cvtps2pi
add
mov
addr16
or
cmpsl
adc
or
mov
sti
ret
aaa
pop
rorl
inc
mov
test
in
xlat
add
adc
test
test
push
lret
mov
mov
inc
loopne
insb
fildll
sub
mov
outsb
icebp
xlat
jl,pt
sbbl
clc
scas
ljmp
or
fidivrl
lahf
inc
lea
cmpsl
fxch
add
add
add
add
add
add
add
add
inc
add
add
add
add
push
add
add
add
data16
add
xor
add
add
add
add
add
add
inc
inc
add
inc
add
add
add
add
jp
add
add
xor
add
add
je
add
dec
outsb
add
insb
add
add
data16
add
add
add
add
add
add
add
add
push
add
add
add
push
add
xor
add
add
add
push
xor
add
aaa
jns
add
add
push
add
add
add
add
add
add
inc
jno
insl
add
add
push
ja
add
add
imul
add
add
add
xor
add
add
add
add
add
je
add
add
add
add
add
add
add
add
add
add
push
add
xor
popa
add
add
arpl
add
add
add
add
push
add
dec
add
xor
add
add
add
add
xor
add
add
add
pop
add
inc
add
add
add
jno
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
xor
add
inc
pop
add
add
add
dec
add
add
dec
add
add
add
outsb
add
push
ja
add
popa
add
dec
add
add
add
add
outsb
add
add
add
add
add
jp
dec
xchg
daa
push
clc
mov
loopne
repnz
jbe
mov
mov
add
lret
push
call
mov
push
pusha
sarl
call
add
and
push
clc
call
add
pushf
ret
loope
nop
ss
or
lock
mov
test
je
and
cwtl
push
cwtl
cmpsb
call
cli
mov
out
inc
push
mov
jmp
mov
dec
inc
xor
add
push
ds
pop
out
xor
push
test
xchg
inc
loopne
jecxz
xchg
dec
cmp
cld
mov
jmp
and
in
mov
cli
ret
dec
xchg
test
fnstenv
adc
outsl
dec
les
or
pop
in
out
aas
movsb
push
or
fsubr
ss
mov
aaa
mull
shr
cmp
cmp
push
fdecstp
je
lea
add
jge
pop
lea
repz
loop
pop
pop
jg
sub
jecxz
inc
movsb
dec
test
add
popa
add
cmp
test
xor
dec
out
imul
mov
mov
or
sbb
xor
sub
sub
sbb
rorl
push
sub
mov
add
out
or
adc
mov
or
or
and
test
xchg
cmp
call
hlt
inc
sbb
lea
cmp
dec
fisttpl
or
sub
lods
adc
add
call
cmc
inc
mov
mov
fsubrs
imul
icebp
insb
mov
mov
pop
mov
out
cmp
int
pop
jmp
addr16
mov
fisttpll
mov
fnstcw
test
lcall
rcll
movb
pop
cmp
cmp
nop
pop
inc
out
je
in
jge
xchg
test
bound
xor
jb
mov
loope
jbe
test
xor
xchg
pushf
dec
mov
leave
cwtl
lret
jmp
aad
imul
test
into
cmp
ret
push
mull
cmp
mov
rcll
xchg
xor
add
xor
xchg
or
mov
sbb
fsubs
xchg
add
stos
mov
nop
push
pop
inc
sbbb
in
fmulp
mov
jl
push
test
push
jecxz
xor
pop
add
xor
pusha
or
push
js
mov
cmp
xchg
es
pop
aam
and
xchg
jg
inc
sti
and
les
and
xchg
xchg
cmc
popf
scas
lock
adc
fs
cmp
scas
cmp
cwtl
clc
nop
pinsrw
xchg
stos
add
ds
mov
pop
dec
loopne
sub
fimull
sbb
lret
nop
rclb
jge
or
lret
inc
loopne
mov
filds
cmp
divl
sub
insb
lods
jecxz
adc
xor
mov
test
outsl
inc
enter
iret
mov
and
adc
jbe
sbb
pop
cltd
lea
add
std
iret
mov
in
push
dec
dec
sub
pop
push
insb
push
ds
and
lcall
daa
shl
call
notb
pusha
popf
mov
cltd
jmp
ja
add
push
loope
test
push
mov
pop
call
or
gs
dec
xchg
daa
adc
pop
inc
dec
pop
dec
cmc
add
daa
inc
xchg
mov
imul
or
cmp
pop
jecxz
rolb
mov
add
ja
push
mov
clc
xchg
pop
cmp
shll
push
cmp
daa
mov
shlb
cwtl
mov
aaa
mov
jno,pt
mov
test
ret
xor
ficomps
mov
xchg
cld
pop
and
dec
add
cmp
cmp
and
xor
mov
xchg
push
or
or
mov
nop
push
xchg
rcll
bound
or
insl
mov
je
mov
dec
mov
loopne
adc
or
ds
add
jns
pop
call
add
ret
mov
lret
adc
mov
outsl
iret
inc
cmp
cmpsl
xchg
sbb
mov
stc
mov
xchg
icebp
inc
inc
nop
mov
push
shll
lret
sbb
push
enter
pop
pop
stos
inc
insb
jo
inc
mov
dec
or
shl
or
in
mov
int3
or
inc
pop
movsl
loopne
mov
dec
inc
xor
mov
cld
mov
aam
jmp
xor
xor
pop
or
nop
lock
pop
cmpsb
pop
in
iret
in
mov
pop
in
call
mov
fcoml
or
lret
pop
dec
and
stc
movsb
insl
pop
ja,pt
scas
gs
pop
test
fucomip
push
or
pop
xor
fcompl
mov
sub
mov
ss
daa
or
movsl
adc
push
dec
mov
sti
lds
data16
push
mov
mov
imul
inc
loope
mov
ds
lock
sbb
inc
cmp
pop
or
dec
mov
in
and
or
push
mov
cmc
push
test
ds
and
fists
lods
cmpsb
mov
jbe
pop
popf
mov
inc
mov
inc
add
sub
mov
loopne
fdiv
mov
add
cmpsl
rol
sti
or
jae
pop
jb
dec
stos
arpl
adc
jno
and
fwait
xchg
mov
mov
stos
push
and
out
pop
jne
adc
pop
movsl
xor
push
add
outsb
aad
jae
jns
xor
insl
mov
and
jnp
pop
sbb
mov
mov
clc
pushf
cmp
sarl
or
mov
cmp
dec
rcl
xchg
cmp
lock
jno
adc
cld
mov
push
mov
push
lods
xchg
pop
outsb
fldl
inc
iret
mov
lods
jno
sbb
js
fdivrs
mov
cmpsl
or
jge
lock
test
jl
mov
and
and
cmc
test
xor
xor
std
sub
cmpsl
sti
pushf
inc
in
xchg
push
push
xchg
cmp
xor
insl
push
push
sub
xlat
push
imul
jge
cmp
int3
test
loope
sub
neg
movsb
pop
fmuls
or
xchg
inc
xchg
jl
mov
mov
mov
add
dec
push
cmp
lret
int3
and
xchg
inc
cmp
aaa
pushf
cmp
adc
lds
pushf
or
repnz
mov
pop
or
shlb
push
dec
pop
jo
inc
lret
mulb
test
xor
test
pop
xchg
je
out
pushf
notl
in
jmp
scas
inc
mov
jne
repz
jecxz
cmpl
xor
push
xchg
cmp
inc
arpl
mov
mov
and
clc
lods
push
outsb
push
clc
mov
fsubl
ret
sub
mov
mov
add
addb
fistpll
cwtl
push
cmp
aaa
icebp
ljmp
adc
xchg
xchg
dec
pop
nop
std
or
cwtl
enter
push
mov
popa
xor
pop
pusha
or
xor
or
xorb
in
mov
add
stos
mov
mov
mov
xor
das
push
mov
jne
cmpsb
sbb
add
jno
and
ss
xchg
cwtl
ljmp
pushf
test
idiv
stos
hlt
mov
adc
cltd
sti
loop
push
sub
dec
repnz
cmpsl
lret
fs
jo
inc
or
loopne
pop
mov
popf
lods
push
lret
rorb
push
and
or
dec
xor
dec
out
imul
sub
pminsw
sar
mov
jle
lret
test
push
pop
loopne
scas
inc
push
dec
adc
sbb
add
sub
inc
or
jnp
add
rolb
mov
in
xorl
mov
mov
fucom
adc
adc
sub
mov
jmp
jno
push
xchg
dec
movsb
decb
add
cwtl
adc
and
adc
xchg
xchg
pop
xor
sarl
lea
insb
inc
xchg
push
push
or
pop
xchg
loop
dec
sub
push
shrl
popa
into
into
cmp
mov
adc
pop
stc
bound
mov
cmp
xorb
cmpsb
sub
jge
jo
or
or
hlt
add
cwtl
bound
jb
imul
cmpsb
sub
sbb
in
rorl
pop
mov
repz
aam
xchg
inc
jmp
cmp
and
push
fists
mov
cmp
shrl
add
mov
call
push
mov
push
call
jb
mov
push
cwtl
sbb
mov
lds
js
dec
les
or
push
mov
mov
adc
dec
xor
mov
and
sub
in
xor
cmpsb
jns
dec
call
pop
into
lret
shll
outsl
orb
sbb
repnz
sbb
leave
imul
ret
add
mov
cmpb
in
outsl
cld
mov
in
push
inc
cmpsb
and
in
loopne
add
push
or
test
pop
fdivrp
repnz
insb
lock
adc
add
adc
and
mov
add
aam
sbb
push
lea
pop
sbb
mov
dec
cmp
xchg
xchg
fadds
mov
adc
stos
and
fmuls
fcoml
dec
test
cmp
sbb
push
ljmp
cld
stos
sbb
dec
mov
sbb
ret
stc
call
jae
inc
sub
mov
scas
xor
cmp
maskmovq
divl
cmp
sbb
mov
or
cmp
mov
stos
push
outsl
ja
popa
cmp
aas
inc
test
inc
mov
mov
add
mov
cmp
in
notl
in
pop
sub
or
inc
clc
mov
mov
pop
xchg
and
push
rep
cmp
out
in
or
or
cmp
inc
lds
push
cmp
and
es
lea
clc
mov
pushf
leave
fwait
mov
imul
inc
frstor
dec
ljmp
push
pop
mov
movsb
jecxz,pt
add
cwtl
dec
jnp
adc
jb
xor
jae
add
nop
clc
xor
scas
push
adc
pop
mov
dec
sbb
sti
mov
out
call
loopne
cmp
xor
or
pop
out
and
inc
fwait
shl
fs
pop
pushl
jmp
in
repz
jo
pop
outsb
push
es
out
mov
aam
and
test
mov
loope
mov
push
inc
repz
aaa
cmp
and
push
xor
js
imulb
imul
icebp
xchg
arpl
pop
add
cmp
shrb
ficoms
in
sti
cmp
mov
fldl
shll
inc
ljmp
jecxz
or
or
lods
cs
push
das
hlt
or
push
dec
mov
add
sbb
xor
push
sub
testl
popf
je
push
sbb
xchg
add
xchg
call
fwait
mov
neg
movsb
and
ss
xor
loop
xor
and
sub
and
push
cmp
and
es
mov
cwtl
imul
dec
ret
mov
cli
lret
insl
mov
push
dec
mov
call
out
lahf
daa
mov
fsubs
loopne
js
add
xor
dec
and
push
adc
dec
inc
mov
mov
fwait
movsb
call
cmp
jnp
sbb
lret
pcmpgtd
fcoms
pop
fisttpl
cmpsl
jle
push
xor
aaa
mov
inc
xor
popf
cmpsb
add
push
push
fldcw
call
cs
out
pushf
adc
or
daa
decb
lea
mov
iret
mov
sub
mov
orb
mov
xor
movsb
ret
mov
unpckhps
sub
dec
js
pop
sbb
sub
das
jmp
lods
addr16
add
add
cld
aad
mov
fwait
pop
clc
out
outsb
inc
data16
fmulp
mov
leave
in
mov
push
mov
stc
sbb
stos
adc
add
pop
sub
push
push
push
jg
or
inc
adc
je
push
repz
in
mov
fadd
push
lock
test
jbe
xchg
rorl
ret
jbe
inc
insl
or
or
divl
cmp
and
fsubs
cwtl
rorb
xchg
push
or
push
mov
jmp
push
xor
lds
xor
lods
and
and
clc
sub
sahf
fbstp
sub
stos
test
sbb
push
lock
or
orps
cmc
xor
xchg
inc
les
aam
call
fdivr
push
rorb
xor
leave
cmp
push
les
xor
out
dec
pop
jle
inc
test
sub
inc
push
mov
adc
dec
dec
cwtl
inc
sbbb
inc
test
and
cli
dec
data16
sub
push
jmp
adcb
dec
dec
push
enter
sub
dec
in
rolb
add
movsl
jmp
addr16
cmp
in
jge
jns
loope
call
inc
add
movsl
xchg
aaa
push
sbb
mov
mov
jg
dec
sbb
lea
roll
jno
push
mov
mov
jmp
mov
push
fstpt
or
push
das
inc
and
loopne
xchg
push
add
mov
dec
jno
or
jo
aam
adc
test
or
push
into
add
inc
sbb
je
inc
por
cs
mov
test
xor
push
xchg
int
repnz
jmp
movsl
fsubl
xlat
insb
adc
call
loopne
mov
in
call
xor
call
aas
jno
inc
xor
xor
cmp
or
mov
mov
push
xlat
mov
push
bound
popf
jne
enter
xor
sub
push
cwtl
cld
repnz
sbb
push
pop
sub
push
fildll
push
cmp
jbe
pop
fstps
mov
leave
add
aam
lret
jns
push
movsb
loope
scas
int
dec
cmp
pushf
mov
sbb
divl
mov
inc
mov
js
hlt
jle
enter
mov
addr16
push
popf
mov
pusha
into
mull
mull
pop
and
or
shr
lret
fsubrs
sti
in
movsb
adc
out
xlat
sub
mov
sbb
xchg
mov
xlat
imull
mov
fistl
cli
notl
call
repz
call
scas
fisttpll
mov
stc
mov
scas
fsubl
into
add
nop
adc
sbb
lea
adcl
rclb
inc
nop
dec
add
std
and
in
divl
loop
clc
adc
lret
fadd
xchg
ret
popf
adcl
imull
mov
int
inc
cmc
jg
push
mov
cmp
cmpb
adc
or
cmpb
adcb
xchg
or
jns
fwait
mov
push
mov
dec
leave
xor
push
push
xchg
lea
mov
sub
or
push
cmpsl
ja
fs
pop
sub
sbb
cmp
orl
sub
mov
insb
dec
pop
jo
std
mov
cmp
mov
popf
pop
lock
xchg
mov
aaa
je
sbb
push
push
lods
push
or
sub
mov
push
cld
adc
xlat
jne
dec
push
lcall
sti
filds
stos
cmp
cmp
cmp
loop
mov
lahf
shll
fs
adc
shl
cwtl
pop
sbb
call
xchg
mov
shrb
add
rorl
shlb
psubusw
clc
sub
cld
addl
lret
cmp
push
arpl
das
arpl
xor
ss
in
cmpsl
pop
mov
fdivs
mov
scas
adc
or
cs
inc
push
mov
stc
sbb
loopne
push
jl
sti
ja
push
push
sub
dec
arpl
lea
movb
push
dec
mov
icebp
pop
xor
adc
cmp
mov
jae
cmc
dec
mov
shl
jne
sbb
rep
repnz
jbe
cltd
ret
mov
into
jbe
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
inc
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
pop
add
add
add
jne
add
add
add
add
je
add
add
add
add
add
xor
add
add
add
add
push
add
add
jo
add
dec
add
je
add
add
add
jo
add
add
add
add
xor
add
add
add
outsl
add
add
xor
add
add
add
add
cmp
add
dec
add
add
ja
insb
cmp
add
add
add
add
add
add
jbe
add
add
xor
dec
outsl
add
add
add
add
add
jne
add
add
add
data16
add
push
jb
xor
add
add
add
push
add
add
add
js
dec
jno
xor
add
add
add
add
add
js
add
add
add
add
add
add
add
add
add
add
add
add
jbe
aaa
add
add
add
add
inc
add
add
add
pop
add
je
add
push
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
insb
add
add
je
add
add
add
add
add
bound
imul
add
inc
add
add
add
inc
add
insl
add
add
add
arpl
imul
add
add
add
ja
jbe
add
add
add
add
add
imul
add
inc
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
ja
add
add
ja
add
dec
add
push
je
add
add
arpl
pop
add
add
add
bound
add
add
imul
add
add
add
add
add
dec
add
add
add
add
jo
add
add
add
push
add
xor
add
pop
mov
fistpl
mov
ss
sbb
inc
movsl
xor
sysenter
out
xor
cmp
jge
pop
call
inc
inc
inc
and
mov
ret
movsb
ss
pabsw
pop
adc
pop
add
ds
adc
daa
cmp
shrl
push
lret
push
rolb
sub
and
in
xor
lea
jb
repz
mov
je
les
and
testl
xor
ret
xlat
push
test
push
insb
or
pop
shrl
call
test
pop
lcall
lcall
je
jmp
cmp
xchg
jne
mov
out
xor
mov
pop
mov
pop
stos
sub
mov
and
pop
je
in
adc
inc
cmp
inc
jmp
xchg
push
xchg
mov
pop
in
push
insb
mov
bound
or
pushf
aas
mov
mov
test
imul
lret
cmp
mov
mov
popf
xor
ret
xchg
push
mov
bound
dec
fists
cmp
push
sub
movsb
sub
push
inc
push
xchg
sub
dec
xchg
movsb
dec
adc
jmp
add
jmp
cmp
push
pop
or
mov
pop
inc
ds
jecxz
or
mov
xor
rcll
mov
lds
movsb
sbb
adc
lea
and
subl
add
add
dec
inc
cltd
loope
cmp
aaa
mov
jnp
sbb
add
loopne
fstpl
rolb
and
push
call
lock
pushf
xor
sti
push
xor
out
mov
xchg
cmp
jg
outsl
sti
xchg
out
pop
mov
outsb
mov
out
sti
sub
add
les
jg
push
jmp
and
pop
cld
push
cmc
push
imul
cmp
cmp
fadds
int3
pop
sub
xchg
shl
movb
sub
xchg
aam
pause
aam
inc
sti
mov
or
sub
dec
xor
xchg
or
fidivrs
push
call
sti
add
out
and
pop
push
or
out
cmp
mov
stos
adcl
pop
and
adc
push
inc
or
fwait
dec
rcrb
cmp
js
jge
mov
lods
xor
orl
push
push
icebp
aaa
lock
add
push
push
or
mov
mov
adc
lret
fldt
mov
ret
lods
popf
andl
inc
stos
lods
subb
mov
mov
and
cmp
inc
and
loope
inc
xor
leave
jl
adc
mov
std
sbb
mov
lea
sbbb
lret
mov
call
inc
lea
ss
stc
and
sahf
mov
fmull
push
pop
and
pop
clc
mov
inc
xor
lret
push
sbb
test
cmpsb
add
fcoms
mov
or
add
cmp
and
stc
xchg
cld
test
cmp
sbb
and
dec
jno
mov
pop
jecxz
aas
shrb
jb
rolb
jae,pn
sub
shll
ret
and
into
shl
add
negb
mov
cmp
cli
pop
cmp
or
cmp
pushf
add
add
sub
cmpsb
push
push
jne
pop
cmp
test
or
xchg
fwait
aad
pop
cmp
mov
sbb
dec
sub
xchg
rcrb
and
sub
mov
popl
mov
adc
leave
pop
xchg
nop
mov
push
mov
jne
sub
lcall
push
mov
xor
cltd
outsb
push
or
aad
push
data16
mov
call
push
jmp
or
pop
and
jne
cmp
inc
lods
movsb
popf
mov
push
arpl
pop
cld
mov
push
fmuls
test
out
aas
iret
or
xor
add
add
push
inc
movsl
xchg
cmp
icebp
or
xor
push
or
add
mov
add
les
xlat
loope
xor
pop
ja
or
sub
pop
outsl
add
pop
das
imul
cwtl
addr16
pop
sbbw
test
or
ret
jnp
fs
pop
fdivrl
imul
xchg
push
stos
inc
int3
push
les
or
mov
call
cmp
cmp
and
enter
lahf
pop
push
clc
inc
push
adc
popf
cmp
mov
inc
mov
add
fsubp
adc
add
in
mov
call
jo
orb
lahf
jmp
clc
adc
loopne
popf
ret
leave
stos
dec
loope
xchg
mov
addw
into
jnp
add
mov
in
pop
add
rolb
pop
call
xor
repz
dec
or
cmp
push
es
loopne
jmp
add
clc
pop
lea
pop
or
repz
mov
daa
sbb
add
ss
ljmp
lods
xchg
or
adc
push
jge
fidivs
pop
fbstp
xor
pop
test
dec
mov
jae
ss
int
pop
lar
jge
jge
dec
or
pop
pop
jmp
mov
push
aaa
jne
cmpsl
cmp
lock
cmp
dec
pop
xor
hlt
clc
je
mov
inc
xchg
dec
push
call
insb
pop
lds
in
arpl
adc
outsl
mov
inc
add
cmp
sahf
sbb
mov
or
or
pop
ret
aaa
cmp
dec
movsb
push
xor
mov
xor
push
mov
dec
sar
xor
cmpb
sub
icebp
xor
addb
jmp
dec
cmp
xchg
xor
movsl
push
dec
push
xchg
insl
jmp
shl
rolb
pop
mov
lret
fldt
or
cmp
fistl
mov
enter
lock
fwait
jmp
call
mov
inc
or
popf
push
cmp
popa
outsl
cmp
push
push
aaa
dec
xchg
xor
sub
pushf
jl
lods
clc
push
test
and
rolb
fwait
call
js
aaa
es
xor
stos
sbbl
mov
call
cmp
movsb
mov
cmp
je
dec
adc
sbb
sbb
lahf
jge
sub
ficompl
push
rorl
leave
pushf
repz
je
add
clc
sub
or
dec
xor
or
pop
lds
jne
xor
stos
lock
popf
jb
mov
cmp
ror
jp
dec
mov
mov
or
dec
in
insl
fisubl
jae
pop
or
leave
and
dec
pop
je
xchg
jge
push
sbb
pop
fsubrs
mov
jl
dec
daa
sti
cmp
pop
jo
pushf
xchg
pop
insl
pop
xor
xor
fsts
rorl
push
xor
and
aaa
sbb
xor
fnsave
subl
fs
xchg
mov
test
jne
mov
fwait
imul
dec
xlat
or
mov
xchg
dec
rorb
int
add
jl
inc
lock
aad
scas
fwait
adc
ret
in
sahf
mov
jnp
mov
iret
fstpl
out
sub
sarb
lock
mov
xor
inc
add
mov
sbb
cmp
jge
stc
xor
fs
mov
ret
and
adc
stc
inc
sbb
xor
xlat
data16
pusha
jp
push
mov
jbe
adc
cmp
mov
adc
lock
jge
mov
aaa
or
xor
insl
out
mov
add
push
xor
fcmovbe
push
out
xor
mov
dec
push
push
rclb
test
clc
inc
std
or
mov
sub
lock
push
sbb
push
lret
cwtl
or
add
mov
sub
or
addr16
adc
in
in
int
fildl
rcll
enter
mov
imul
push
jge
js
shl
sbb
add
addb
push
sub
mov
jns
mov
mov
rcrl
or
into
rcrb
dec
cwtl
cmp
je
js
xor
cmp
sbb
adc
and
cltd
or
stos
xor
in
repnz
add
sbb
xor
jnp
lahf
mov
inc
js
xor
dec
pop
enter
push
int3
cmp
pop
jns
jne
cmp
or
mov
and
inc
jns
ret
sub
pop
lock
pushf
mov
ficoml
out
add
pop
pop
cmpsb
cmpsl
mov
mov
fidivrs
clc
arpl
pop
mov
dec
cmpsb
fstl
test
xor
nop
jb
mov
cmp
mov
cmp
scas
or
xchg
lret
pop
es
in
dec
dec
ret
aas
push
or
fwait
inc
jnp
adc
cmp
jle
fistpll
push
sub
test
xor
lret
lret
dec
mov
push
sbb
and
lret
dec
cmp
jmp
push
pop
out
ja
jp
pop
lret
ret
mov
mov
mov
call
stos
gs
nop
sub
jnp
loopne
mov
ds
inc
or
dec
push
adc
je
into
jno
adc
daa
mov
add
neg
aad
aaa
test
mov
mov
pop
in
cmpsb
jl
xor
dec
pushf
lods
or
mov
or
cmp
and
xchg
mov
add
mov
adc
cmp
mov
sub
or
or
xor
xchg
cmp
push
fwait
mov
push
in
or
pop
dec
xor
push
adc
int
mov
jmp
push
adc
jg
stc
pop
addr16
push
pop
push
sbb
and
pop
jno
mov
mov
gs
cmpl
das
ss
fucomp
xor
jecxz
call
or
mov
in
push
or
bound
iret
lret
in
sarl
push
adcl
cli
push
pop
or
jne
push
ja
and
sub
sbb
push
and
lds
shrl
test
jle
jne
int
and
xorb
dec
rolb
sbbb
and
cmp
push
and
jne
mov
and
fwait
pop
repnz
jbe
xchg
add
mov
mov
jp
pop
pop
push
push
push
xor
or
lea
pop
dec
cli
sbb
pop
or
loop
cmp
inc
or
mov
mov
and
ds
lods
sub
fsubl
and
mov
sbb
ret
push
mov
add
enter
icebp
lret
and
mov
dec
or
shl
adc
push
xor
xor
inc
mov
fisttpll
imul
or
xlat
pop
and
or
cltd
popf
pop
or
xchg
out
mov
cmp
test
pop
lods
ds
sub
sub
inc
xchg
int
dec
test
cwtl
inc
lahf
sbb
or
pop
rcl
cmc
cli
mov
push
and
and
adc
stc
lods
lcall
lcall
adc
and
xchg
and
adc
and
or
push
pop
cwtl
pop
cltd
dec
adc
sub
dec
xorb
xlat
dec
adc
inc
jnp
imul
push
call
mov
cmp
push
insb
lods
ljmp
shrb
test
lret
mov
ficomps
sbb
adc
mov
mov
sub
adc
movsb
and
iret
ds
test
test
cmc
inc
scas
testl
jnp
pusha
mov
adc
out
lock
or
dec
and
pop
adc
sbb
icebp
mov
ljmp
cmpsb
dec
cmp
dec
add
mov
fcoms
push
push
mov
popf
call
stc
mov
mov
mov
and
jle
rclb
pop
and
xchg
xchg
mov
sub
inc
push
sbb
jnp
lret
sbb
adc
lods
jecxz
test
repz
pop
or
push
lahf
aas
and
cmpsb
out
mov
add
xchg
sub
mov
jbe
inc
push
and
add
or
lea
shl
dec
pusha
imul
cmc
mov
pop
lods
iret
mov
sub
test
sbb
xor
mov
fisttpll
imul
pop
add
push
and
loope
pop
xchg
pop
js
cmp
or
and
lock
rorb
mov
fbld
sbb
stc
and
rcrl
jnp
and
mov
pushf
imul
cmp
mov
xor
outsb
inc
outsl
push
inc
cmp
sub
jnp
and
adc
pop
std
sbb
push
inc
xchg
out
sbb
sbb
addr16
or
sbb
rorb
adc
sub
jne
mov
lahf
test
lods
cmc
mov
lods
jecxz
pop
bound
mov
cmc
cltd
nop
fldenv
rorl
or
xchg
dec
cwtl
cmp
sbb
ds
jge
rcr
mov
rcll
sbb
loopne
sbbb
fnstsw
cmp
fdivs
sbb
ja
or
mov
push
adc
mov
lea
xchg
ja
pop
clc
push
aam
fmull
or
fadds
or
stos
or
add
fldenv
jne
adc
pushl
mov
in
dec
sub
fwait
xchg
mov
sbb
or
imul
adc
add
into
mov
and
mov
mov
loop
popf
push
pop
pop
call
aam
and
sbb
fwait
adc
inc
mov
cmp
je
std
or
jbe
pop
mov
insl
movsl
fwait
inc
test
repnz
push
and
movnti
mov
lock
aaa
push
pop
leave
fs
mov
pushf
cmc
xchg
les
inc
push
in
les
push
sub
push
xor
and
std
sbb
push
fwait
cmp
lods
sbb
sub
sti
dec
and
shrb
mov
mov
nop
out
mov
loope
hlt
leave
xchg
outsb
clc
rcrl
lock
popf
jne
out
pop
call
mov
mov
mov
cli
sbb
add
shlb
sub
ljmp
cmp
mov
or
sbb
cmp
jb
loope
adc
jge
xchg
mov
adc
push
pop
mov
sbb
std
rcrl
dec
out
pop
into
sub
orl
enter
adc
xchg
inc
stos
or
clc
xchg
shl
sub
jbe
xor
test
cmp
es
mov
jnp
mov
dec
mov
sub
out
ret
je
jnp
test
out
jb
int3
loop
je
lahf
xor
out
add
popf
fmuls
inc
push
pushf
mov
lods
imul
xchg
or
test
loop
sub
fimull
mov
adc
stos
xchg
int3
test
mov
lretw
pop
es
aas
inc
add
cmp
cmp
add
fnstsw
lea
sub
rol
in
seta
inc
aaa
or
scas
inc
out
scas
xchg
xor
mov
push
repz
push
jle
and
lret
jle
mov
rcrb
or
xlat
pushf
dec
test
pop
jl
cmc
lods
push
mov
mov
jne
xor
sbb
xor
pop
mov
push
lea
jne
xchg
scas
outsl
test
out
sub
int3
push
popf
sbb
mov
call
fmul
push
or
adcb
xchg
test
js
mov
call
jae
jo
popa
dec
cmpsl
cmp
dec
mov
enter
inc
adc
addl
sub
push
adc
mov
dec
outsl
xchg
adc
adc
xor
fidivrs
or
jecxz
pop
aas
lock
dec
push
lea
es
je
fsubrs
insl
lds
and
loopne
sbb
xor
inc
push
xlat
nop
test
add
js
add
add
add
js
add
inc
add
add
add
add
add
dec
add
ja
je
add
add
add
add
cmp
outsl
add
add
jne
data16
add
dec
data16
push
add
jbe
add
add
jp
data16
data16
add
add
xor
add
inc
add
add
add
add
push
add
add
add
inc
add
xor
add
add
add
outsl
add
add
add
add
add
add
xor
add
add
add
inc
add
push
add
push
add
add
add
add
dec
add
add
add
add
add
push
add
add
insb
add
add
add
add
add
dec
push
add
add
add
ja
pop
add
insl
add
add
add
add
add
jae
add
add
add
add
add
add
add
jno
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
inc
data16
jne
add
add
add
inc
add
add
add
bound
add
pop
cmp
add
inc
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
dec
add
xor
ja
add
add
xor
add
xor
add
inc
add
add
add
add
add
outsb
js
add
bound
add
add
add
add
add
dec
add
add
adc
pop
push
jne
add
dec
add
cmp
fiadds
addb
mov
xchg
dec
add
outsl
pop
loope
add
int
push
es
subl
cmp
rcrb
and
ja
jle
xlat
mov
xor
pop
lret
repnz
or
push
call
pop
pop
in
lcall
mov
push
fildl
cmp
sti
mov
shlb
inc
fiaddl
cli
or
rorl
adc
mov
int3
push
push
call
movsb
jp
pushf
fcompl
sub
mov
std
cmp
das
arpl
jp
push
sbb
inc
movsl
aam
adc
adc
or
jl
push
push
rcll
jne
inc
dec
jno
mov
or
loop
xor
pop
xchg
shrl
xchg
or
cwtl
jb
push
cmp
lahf
ficomps
or
xor
push
ljmp
ds
jb
sub
cwtl
or
popf
int3
pushf
out
push
sti
push
push
jmp
mov
push
add
les
xchg
rcrb
cld
dec
call
movsb
test
jo
push
or
add
jmp
xor
cmpb
sub
push
pop
test
lds
sub
pop
or
or
jle
xchg
ljmp
call
or
loopne
or
call
or
inc
or
push
push
or
inc
xor
cmp
inc
sbb
es
adc
sbb
movsb
call
mov
cmp
mov
cwtl
out
xor
sti
push
in
mov
test
mov
in
aaa
mov
and
sbb
pop
aas
and
pop
pop
mov
pop
sti
jmp
pop
repnz
insb
jle
adc
je
lods
shl
mov
or
inc
mov
scas
orl
in
scas
dec
inc
imul
sbb
les
add
or
lea
push
mov
sbb
sbb
inc
sub
shl
hlt
minps
cld
stos
nop
outsb
inc
cltd
dec
mov
adc
outsb
dec
iret
outsl
push
inc
stc
popa
cmp
adc
call
popf
sbb
rcrl
or
inc
sahf
sub
mov
gs
xor
add
mov
sub
insb
call
in
adc
aas
fnstsw
ret
mov
fcos
sub
xchg
sub
sbb
data16
xchg
mov
mov
mov
push
jp
mov
add
sbb
mov
clc
nop
adc
stc
bswap
pop
pop
xchg
fisttps
adc
mov
cmp
or
lret
jg
xor
xchg
in
jmp
addr16
jbe
push
lock
sbb
incl
jmp
adc
or
pop
cmp
dec
jae
push
std
sub
push
mov
ret
lds
inc
add
mov
sbb
lea
sarl
stc
sbb
pop
pop
xchg
or
and
add
ret
lahf
cmp
fcomps
imul
nop
mov
cmp
add
jmp
xchg
xlat
add
adc
mov
sbb
inc
lock
mov
push
xlat
or
dec
and
out
add
xchg
cmp
mov
xor
push
icebp
push
push
push
aas
adc
cmpsb
pop
fnstsw
mov
pop
xchg
push
push
push
call
cmc
jge
adc
push
push
mov
shl
mov
mov
pop
mov
inc
imul
popf
add
add
mov
mov
out
xor
mov
test
cmp
ret
scas
aas
dec
adc
xchg
push
iret
fimull
sbb
jne
jne
mov
das
mov
pop
and
das
cwtl
dec
mov
les
test
test
loopne
ds
cmp
add
aam
adc
cmp
dec
mov
clc
rcll
xchg
cmp
xor
sbb
and
fbld
jmp
or
mov
inc
inc
out
add
or
add
jmp
movsl
daa
cmp
jl
cmp
pop
or
adc
push
mov
lcall
and
and
mov
or
jecxz
lret
or
mov
jmp
inc
push
lock
shll
lods
mov
popf
xor
in
adc
data16
push
push
lret
cmp
pushf
lcall
fsub
scas
push
jb
cmc
sub
mov
adc
rep
sarb
pop
bound
aaa
cmp
incl
les
push
and
test
ss
scas
cli
jp
jae
mov
xchg
push
loope
xchg
or
jne
out
es
cmp
sub
enter
push
add
lods
cmc
arpl
inc
mov
cmp
jle
addr16
cltd
clc
out
call
fwait
out
jns
push
mov
cmp
rol
rcll
jmp
mov
fstps
lret
test
mov
inc
xchg
shr
in
imul
clc
bound
cli
push
movsl
sbb
cld
loopne
push
fstps
shr
adc
loope
and
or
mov
icebp
pop
ror
mov
test
dec
adc
dec
nop
xchg
xor
mov
add
fimull
clc
fbld
cli
push
lea
pop
test
imul
fisttpl
rcrl
adc
xchg
movl
movsb
push
fsubrs
mov
shr
pop
xchg
jo
fcompl
pop
lcall
int3
sub
sub
sub
dec
int3
or
mov
mov
test
out
in
js
sbb
cld
in
enter
iret
sbb
cmp
lds
adc
psubsw
call
int
in
mov
addr16
test
lods
lret
fwait
mov
lea
or
or
pop
mov
scas
cltd
inc
gs
or
test
stc
sub
insl
pop
sbb
or
sub
add
sbb
add
mov
xchg
andb
cmp
mov
add
xor
cmp
call
arpl
popf
int3
or
popf
test
pusha
cltd
push
xchg
add
ds
lret
jge
sbb
into
sub
in
pop
push
or
xchg
call
dec
cmp
call
xchg
xor
push
add
inc
mov
mov
insl
cmpsb
movsb
or
mov
aad
sub
mov
in
cmp
pop
sub
rclb
testb
cmp
mov
repz
pop
xchg
adc
ret
ja
loop
and
mov
cmp
push
jmp
inc
and
test
scas
push
pop
les
jmp
sub
dec
mov
pop
test
mov
sbb
adc
or
xor
data16
repz
test
and
pop
bound
sbb
sub
cmp
ss
or
roll
out
sbb
pop
sbb
push
inc
and
sub
dec
sbb
jge
xor
or
sub
or
rcll
mov
mov
and
xchg
sbb
adc
rcrl
pop
adc
mov
sub
and
cmp
mov
xchg
pop
insl
pop
and
divps
or
and
sbb
es
jbe,pt
and
add
fistps
jmp
or
sub
fisttps
adc
nop
ror
sub
sbb
add
xchg
sub
sub
stc
and
repz
and
lahf
cmp
or
mov
or
stos
push
and
and
ret
cltd
or
jmp
cmp
sarl
stos
cmp
popf
pop
sub
stc
sbb
pop
mov
xchg
push
push
ds
js
sbb
and
pop
add
mov
mov
or
test
pusha
pushf
jle
pop
pop
add
call
sub
orb
adc
jae
and
jmp
sub
or
sbb
or
jbe
js
cmp
popf
pop
or
out
arpl
scas
cltd
or
pop
add
and
int3
jmp
notb
add
idivb
xchg
mov
mov
sub
mov
mov
insl
rcll
inc
xchg
jmp
adc
cmpb
adc
sbbb
lret
mov
lods
sbb
add
ljmp
adc
insl
cmp
and
inc
push
or
data16
add
fs
sub
je
jne
push
nop
sub
push
or
mov
je
xchg
imul
ds
lods
add
xor
rorb
push
mov
out
pop
js
ja
mov
adc
in
adc
in
shl
mov
adc
pushf
aad
or
push
out
pop
cmp
pop
ss
push
push
or
data16
push
add
subl
pop
pushf
adc
push
stos
inc
mov
jmp
cvtps2pd
es
fisubs
mov
js
sarl
leave
pusha
pusha
push
dec
jecxz
pop
add
jecxz
or
and
in
pop
or
inc
mov
incb
ss
xor
sbb
push
fwait
mov
push
insl
sbb
fnstcw
das
ss
or
mov
push
sub
fs
aaa
or
cli
gs
shlb
sub
cmpsb
or
inc
shl
fwait
sub
daa
xor
add
xchg
inc
add
lret
cmp
dec
cmpsl
arpl
gs
xor
xchg
add
enter
mov
inc
sbb
or
push
in
mov
cwtl
rorl
loop
xor
frstor
addr16
data16
mov
add
fidivl
adc
push
sbb
jmp
jge
outsb
adc
dec
push
add
loop
xor
andb
int
cwtl
popa
ficoms
sti
mov
and
negb
fisttpll
or
fucom
negl
xchg
adc
cmp
pusha
ficoms
not
pop
andl
sbb
cmp
adc
push
repz
dec
movsb
les
or
inc
cmp
dec
mov
cmp
mov
push
push
xor
cmp
adc
xor
push
mov
jmp
or
cmp
xchg
aas
pop
or
shll
shlb
dec
ss
and
jecxz
cmpsb
sbb
fcompl
and
daa
ds
xor
cli
inc
cltd
add
xchg
xchg
and
mov
dec
inc
cmpsl
and
xor
mov
pushf
cmp
mov
mov
or
xor
ja
dec
int3
mov
hlt
jle
lret
jle
in
out
cwtl
pop
cmp
sti
xchg
and
xchg
call
inc
adc
leave
loop
xchg
dec
arpl
inc
pop
mov
push
add
sbb
call
xchg
and
cmpsb
mov
cmp
loop
jl
insl
mov
jp
andl
mov
ja
ss
adc
test
push
js
or
adc
xchg
mov
sahf
ds
jne
dec
pop
mov
adc
fsts
popa
push
mov
clc
lret
or
mov
mov
pop
jmp
pop
pushl
in
jne
outsb
pop
call
stc
mov
gs
push
adc
mov
push
sub
push
sar
cmp
adc
mov
cmp
lock
mov
xor
xorb
rclb
rcll
cmp
sarb
dec
and
push
adc
in
aas
cs
adc
cmp
lea
sub
add
adc
mov
or
inc
loope
ss
int
mov
pop
cli
sub
pop
clc
cmp
jmp
dec
pop
jecxz
xchg
lock
inc
sbb
cmp
jne
adc
dec
mov
lret
lds
push
clc
mov
sub
ds
xchg
shlb
ror
jmp
fimuls
xor
fwait
and
pop
and
push
popa
orl
out
cmp
xor
sub
aas
std
cmpsl
xchg
cmp
or
ret
clc
popf
dec
pop
sub
add
mov
ret
aaa
movsl
imul
jecxz
test
mov
js
pop
and
push
and
push
sti
dec
sbb
inc
cmc
push
pushf
es
lea
or
sbb
pop
mov
pop
fwait
xor
loop
jle
pop
xchg
cmc
out
pusha
outsb
or
imul
lock
test
mov
mov
push
sub
mov
or
xor
xchg
js
int3
jo
jae
inc
je
mov
xchg
sub
ss
pop
dec
andl
negb
inc
jecxz
xchg
aad
mov
lods
iret
cli
push
or
sub
imul
pop
mov
xchg
pop
lods
outsl
sahf
pop
pop
sarl
cmpsb
push
jle
lock
or
sub
jmp
mov
lahf
hlt
add
xchg
pop
int
dec
mov
pop
mov
loopne
sarb
add
mov
fs
stos
fsincos
and
dec
pop
pushf
frstor
jno
xchg
call
mov
pushf
sti
ss
and
and
call
dec
xor
sub
ss
cmpsb
cmp
xchg
mov
in
xor
xor
or
push
sub
mov
int
inc
stos
popf
mov
push
out
cmp
push
or
mov
rcrl
shrb
insb
aam
pop
popa
push
test
inc
dec
gs
test
je
dec
mov
pop
and
lea
sub
pop
lea
dec
ficompl
sarb
xor
cs
or
sub
adc
cmp
lea
add
mov
inc
fisttpl
in
xchg
call
mov
sahf
pop
push
imul
aaa
inc
push
insb
sub
std
mov
push
shlb
adc
mov
inc
insb
out
cmp
mov
pop
gs
or
popa
cmp
xor
cs
dec
popf
test
and
outsb
sbb
addr16
subb
pop
into
sbb
cmp
mov
les
add
and
movsl
dec
mov
mov
enter
and
and
cmpsb
push
imul
mov
push
mov
inc
mov
sub
push
test
aam
push
jo
mov
jns
lret
sbb
clc
insb
push
inc
mov
fimull
notb
adc
int
into
push
push
sbb
xlat
and
inc
pop
sbb
mov
xchg
and
mov
push
mov
imul
sub
adc
fs
jmp
jns
sbb
cmpsl
insl
ds
cmp
push
shl
ds
jae
notb
sbb
imul
mov
pop
cmp
movsb
lock
add
repz
push
out
movsb
ja
pop
inc
ret
jmp
sub
or
repz
ss
add
jo
pop
lret
pop
or
nop
xchg
pop
adc
mov
addr16
test
push
cmc
mov
mov
push
and
sub
in
mov
jp
inc
test
paddd
loope
add
in
cmp
jno
adc
rorl
lock
fucom
pop
pop
fsubr
add
cmp
ret
in
mov
inc
jns
das
nop
pusha
xchg
adc
sbb
lret
or
hlt
fsub
pop
outsl
push
je
ljmp
xchg
fs
pop
pop
jb
mov
std
fwait
mov
std
sbb
or
inc
adc
inc
push
out
icebp
pop
mov
test
mov
out
cmp
imul
push
push
push
inc
pop
mov
xchg
dec
push
rorl
push
cmp
push
aas
int
adc
rcrb
push
lods
pop
mov
lock
lret
push
movb
icebp
cmp
dec
xor
int
adc
mov
push
push
lret
sbb
cmp
or
or
xor
push
push
pop
or
push
scas
lea
rcll
andl
jne
jge
sbbl
add
movsl
aad
fwait
sbb
sub
push
test
aas
test
sbb
mov
add
jmp
je
push
mov
push
call
inc
fs
adc
mov
mov
pop
inc
in
aad
dec
mov
push
sub
pusha
std
mov
inc
mov
push
orl
xor
sub
call
pop
int
sahf
aad
lock
dec
dec
movsl
notl
aad
call
mov
dec
fldt
jg
imul
lea
push
jne
and
xor
fnstcw
orl
jge
mov
push
or
int3
mov
pop
push
pop
loope
lret
mov
stc
orl
cmp
daa
out
push
or
pop
mov
out
and
inc
or
ficoml
sub
orb
mov
pop
ja
sub
lret
aam
add
inc
inc
cmp
mov
loope
int3
cmp
pop
iret
mov
stos
inc
or
inc
mov
mov
pushf
mov
mov
add
sub
sbb
jne
stos
aas
insb
movl
jle
adc
repnz
aas
stos
inc
adc
inc
mov
mov
andb
sti
stos
mov
sbb
xor
add
inc
dec
jne
lods
cwtl
mov
enter
pop
sbb
push
mov
call
mov
jno
push
mov
xchg
cmc
repnz
xchg
rorb
sbb
push
push
cmp
push
jne
mov
mov
xor
push
dec
fldenv
in
popf
out
gs
push
imul
enter
jmp
sbb
or
test
test
mov
sub
mov
push
mov
nop
mov
insb
lock
xor
inc
and
mov
or
jecxz
scas
add
out
xchg
add
pop
loope
jg
add
enter
mov
cmp
mov
or
sub
xor
insl
pop
pop
lahf
ss
in
inc
std
push
jp
pop
xor
addr16
xor
sbb
sbb
mov
mov
cmp
pop
pop
jnp
icebp
loop
iret
push
psubsb
lahf
movsl
xor
sub
push
or
xor
sarb
dec
stos
ds
add
mov
and
pop
mov
in
sbb
jo
push
mov
rclb
xor
dec
sarl
sahf
sbb
push
xor
in
jb
push
enter
addr16
aaa
or
cmp
cmp
test
outsb
pop
in
cmp
sbb
add
add
add
rcl
inc
adcl
adc
orb
jne
divb
lds
js
popa
lds
sub
adc
loopne
cmpsb
pop
mov
push
sub
xchg
push
out
mov
fistps
mov
outsl
add
popa
xor
push
jg
lret
rorl
mov
sar
nop/reserved
add
sbb
and
inc
inc
test
or
adc
push
in
push
inc
sbb
mov
jnp
mov
pusha
lods
jmp
fs
mov
push
push
sti
rorl
sbb
push
jg
adc
cmp
jne
dec
xchg
nop
cs
xchg
pop
xor
jo
push
cmp
addr16
jnp
inc
or
cmp
xchg
add
cmp
inc
ret
sbb
repz
pop
cs
dec
push
adc
and
jnp
fmuls
or
fwait
jne
mov
loop
jmp
or
mov
or
push
cmp
data16
imul
push
insl
jae
or
cli
fdivrl
or
xchg
mov
call
mov
nop
addr16
xchg
iret
imul
enter
jnp
pushf
in
lods
bound
lea
ljmp
movsb
call
and
addr16
fucom
pushf
stos
jge
movsl
jmp
in
xchg
push
out
lea
cmp
push
xor
mov
rolb
mov
aam
inc
jb
shll
shlb
shrb
ds
xor
iret
mov
in
lea
test
pop
mov
cmp
add
mov
xor
and
xchg
mov
mov
mov
mov
pushf
call
or
int
push
and
jns
sbb
sub
scas
ss
mov
or
adc
loop
pop
fwait
and
pop
lcall
nop
sub
or
div
outsb
rcr
add
repz
push
fwait
stos
imul
stos
cmpsb
add
push
push
sbb
mov
mov
lret
jo
xchg
repz
mov
xchg
adc
mov
jge
in
shlb
sub
mov
cmp
iret
mov
xor
xchg
jmp
push
cmp
stc
cltd
jge
adc
fucomp
add
scas
mov
adc
test
fs
stos
popa
push
mov
fcomps
fcompl
loopne
iret
ljmp
cmp
test
inc
jmp
cmp
lcall
iret
inc
call
dec
inc
faddl
rcrb
xor
nop
loope
cmovne
mov
jge
sbb
push
call
out
iret
cwtl
cmp
mov
cwtl
xor
add
stos
mov
pop
call
leave
mov
in
pop
cltd
push
push
push
sbb
sub
cwtl
mov
ljmp
rorb
inc
xchg
nop
ljmp
sub
iret
dec
filds
mov
lret
push
pop
mov
or
shrb
ret
ret
push
cmpsl
mov
push
dec
mov
push
popf
imul
nop
xor
call
orl
sub
mov
and
shr
mov
jmp
repnz
add
adc
popa
dec
pop
adc
cmp
lret
iret
add
std
add
cmp
add
daa
mov
dec
mov
cmpsb
pop
or
scas
cld
add
lea
popf
leave
pop
or
lret
insl
loop
add
inc
stos
pop
into
mov
cmp
add
or
mov
dec
repz
cmp
cmp
push
jns
dec
xchg
sub
test
cwtl
push
push
repz
lahf
test
push
cmp
std
repz
or
fwait
jnp
sti
scas
repz
out
lret
aaa
adc
lret
sbb
insl
or
notl
loopne
sahf
addl
cld
sarl
js
mov
dec
mov
mov
dec
push
or
fsubrs
xor
push
or
sub
pushf
dec
inc
fisttpl
xlat
out
cltd
push
cmp
add
jne
mov
sbb
roll
pop
jbe
sahf
inc
movl
enter
cmp
jns
idivb
xchg
adc
add
cmp
or
add
fdivrs
and
stos
jb
pushf
mov
mov
inc
cld
orl
mov
int3
icebp
mov
stc
ljmp
cmc
sbb
shlb
les
imul
sarb
pop
dec
xchg
inc
adc
push
jge
out
out
or
mov
push
pop
adcb
nop
dec
repz
pop
cs
or
lock
and
or
jne
mov
pop
shll
insb
outsb
outsb
or
push
test
jne
jo
push
xchg
iret
dec
xor
or
ss
dec
lret
arpl
into
jmp
out
out
mov
cld
add
xor
mov
inc
mov
int3
enter
fistpll
push
push
faddl
and
cmp
pop
ljmp
outsb
fwait
or
loop
dec
divb
jb
jmp
xor
popf
jmp
fadds
movl
jl
pop
cs
mov
jmp
dec
cmp
cmp
gs
jmp
mov
dec
pop
dec
outsb
cwtl
inc
sbb
data16
jo
xor
or
cmpsl
xor
lods
push
stos
pop
leave
sub
push
sub
ljmp
cmp
je
cmp
jne
push
inc
push
push
adcl
inc
adc
lret
aam
sub
repz
lahf
ret
je
xchg
mov
add
push
adc
pop
or
insb
addr16
addr16
pop
cmova
dec
shlb
pop
adc
xchg
pause
inc
sbb
sbb
adc
fwait
xchg
pop
clc
pop
mov
dec
lahf
pop
inc
xlat
or
mov
or
cltd
push
lret
and
imul
stos
cmp
es
hlt
jmp
pop
dec
dec
fcoml
idivb
inc
repz
pop
pop
les
or
or
add
jne
mov
jge
or
cltd
movsb
cmp
into
shr
dec
inc
mov
push
sti
jns
and
fs
sbb
jae
push
test
mov
stos
sbb
or
push
int
cwtl
icebp
sub
fwait
sbb
ficoml
xor
ret
sbb
mov
dec
dec
lock
fwait
movsb
js
push
mov
sbb
je
mov
cmp
dec
rol
dec
aad
into
cmp
lds
push
dec
or
test
repnz
outsl
pop
pop
cmp
insb
gs
enter
adc
lods
pop
jnp
cmc
pop
xchg
enter
cmp
inc
out
mov
cmp
xchg
xor
push
cmp
in
movsl
adc
pop
pop
mov
sahf
cmpsl
pop
xchg
cmp
out
push
push
stos
adc
jge
jle
push
mov
cmp
adc
add
insb
or
cmp
mov
nop
dec
mov
push
adc
mov
inc
adc
jo
repnz
nop
orl
sub
sbb
call
int3
add
xor
inc
bound
adc
outsl
je
push
xor
xor
cli
subb
incl
xor
push
mov
inc
icebp
test
mov
mov
mov
cld
mov
xor
pushf
add
fwait
fwait
pop
inc
dec
xor
or
insb
test
inc
loope
mov
xchg
xchg
jmp
incb
push
mov
mov
mov
je
xchg
cmp
mov
inc
jbe
pop
or
lea
test
cmc
mov
push
scas
psubsb
call
ret
arpl
mov
sbb
daa
enter
mov
sbb
test
or
push
push
pop
subl
mov
mov
scas
jg
in
out
nop
mov
and
cmp
add
clc
or
jnp
sbb
mov
or
push
or
jns
adc
loop
popa
sub
inc
icebp
cmp
pop
push
rcrw
inc
xchg
jns
jbe
adc
adc
xor
pop
xchg
adcb
push
lods
pusha
xchg
jmp
aas
lds
inc
pop
ret
push
adc
mov
and
inc
xchg
pop
jmp
add
rclb
icebp
push
pushf
dec
shrb
xchg
xor
enter
add
push
stos
push
push
push
mov
dec
cwtl
inc
insb
mov
sbb
cmp
jae
fisttpl
jo
cwtl
push
cmp
dec
mov
push
mov
loopne
in
mov
pushf
lds
cmp
pop
dec
sbb
dec
cmp
sub
xor
dec
das
xchg
push
fidivrs
jmp
ret
sbb
cmp
jae
jmp
cmp
or
inc
pop
mov
mov
adc
mov
outsb
fwait
lods
test
cs
fidivrl
push
adc
add
mov
xchg
adc
jns
add
fwait
mov
leave
adc
or
js
cmp
lods
movb
jge
mov
jne
popf
or
push
mov
js
pop
xchg
lret
adc
jge
stc
mov
pop
or
adc
cmp
or
cmp
aaa
or
adc
mov
leave
shl
in
dec
mov
loopne
adc
test
xor
loopne
adc
popa
sahf
cmp
mov
cmp
movsl
mov
pop
je
and
ja
mov
dec
dec
push
mov
movb
mov
pop
adc
dec
push
add
push
ja
add
jae
add
push
cs
int
cli
mov
pop
mov
mov
mov
sbb
lret
rcrb
add
xor
mov
popf
mov
xchg
add
dec
jns
pushf
fstl
dec
push
call
scas
add
jae
xor
out
stos
sahf
pop
and
daa
lods
or
imul
inc
rep
sbb
jge
xor
fmuls
loopne
mov
movsl
loopne
xchg
imul
mov
lret
aam
xchg
popf
mov
leave
psubusb
pop
and
pop
add
in
xor
jle
sarl
adc
insl
or
cmp
scas
call
popa
mov
ss
sbbl
insl
or
stos
dec
adc
or
xchg
or
mov
fucomip
adc
add
cli
aas
inc
out
push
inc
subl
inc
inc
out
push
mov
sbb
dec
stos
mov
std
mov
push
cli
fsubr
call
jne
or
mov
shrb
out
loopne
mov
jne
pop
stos
jmp
into
inc
mov
push
mov
dec
mov
sub
pop
cmpsb
ljmp
mov
push
pop
adc
aaa
stos
push
movsl
inc
cmp
scas
out
shlb
xchg
mov
or
ret
mov
or
sub
lock
dec
cld
mov
js
lcall
mov
sti
lods
les
sub
pop
fcompl
xor
iret
jae
and
cmc
mov
into
popa
pop
fsubrs
aam
jb
test
mov
aaa
cmp
jl
jp
rcl
adc
int3
ja
pop
aam
sub
aam
fmuls
or
cmp
or
out
and
dec
xor
cmp
cmp
or
add
mov
dec
or
and
add
inc
scas
ljmp
jo
cltd
or
sub
les
cld
mov
rcl
lret
not
aam
dec
inc
enter
out
mov
xchg
inc
and
jo
fmull
gs
adcb
stos
pop
clc
pop
in
mov
negb
dec
or
filds
mov
mov
push
pop
jg
test
cmp
mov
xor
repnz
leave
cmc
mov
stc
xabort
cmp
inc
sti
and
dec
sub
not
mov
or
xchg
and
repz
mov
popf
push
jne
test
pop
or
jns
xor
push
mov
sub
out
roll
fistps
pop
mov
jne
gs
fwait
pop
mov
pop
divl
sub
arpl
cmp
xor
dec
sbb
add
sarl
nop
clc
dec
cmp
insb
sub
push
mov
outsb
and
jge
fldt
ficompl
mov
xor
iret
repnz
fcompl
xor
sub
shl
stos
pop
shlb
xor
insb
push
imulb
push
call
sahf
pop
minps
xor
cmp
ret
sti
mov
out
or
sub
xchg
cmp
test
loop
lret
sbbb
jb
stc
fisttpll
frstor
cmpsl
aam
cltd
mov
mov
arpl
mov
inc
ljmp
subb
mov
lret
or
push
mov
add
jae
js
sarb
pop
lret
mov
dec
mov
call
xor
call
fstpl
pop
push
rcrl
mov
repnz
or
xchg
mov
jo
in
pop
mov
sbb
jge
sub
xchg
mov
adc
mov
jo
std
jge
rorl
rorb
enter
jo
or
loopne
mov
xchg
mov
imul
mov
repz
hlt
rclb
jns
mov
sti
adc
sarl
jnp
and
int3
call
xchg
pop
xor
imul
lahf
push
adc
fbld
jbe
cmpb
cmp
mov
in
or
in
cwtl
sub
add
push
sbb
cli
adc
lahf
cmpsb
push
mov
add
out
cltd
cmc
sub
mov
lock
das
mov
call
hlt
cmpsl
inc
push
mov
jecxz
add
loope
into
jecxz
inc
lret
inc
jp
adc
mov
mov
sub
out
data16
sbb
push
lahf
xor
xor
pop
add
insl
add
outsb
add
push
add
add
add
add
add
add
aaa
add
push
add
add
add
add
push
add
add
add
add
push
pop
insb
push
add
add
add
outsl
add
xor
dec
add
add
add
add
add
add
add
add
add
xor
add
push
add
add
xor
xor
add
add
jno
add
js
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
push
insb
imul
add
add
push
inc
add
add
add
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
imul
add
inc
add
add
add
add
inc
add
add
add
js
add
add
pop
add
add
add
add
push
inc
add
data16
add
inc
add
cmp
add
dec
add
inc
add
add
add
add
add
dec
add
add
pop
add
dec
add
add
add
push
add
jns
xor
add
push
add
jp
pop
add
data16
add
push
add
add
pop
add
inc
add
jp
add
add
add
add
ja
add
add
add
dec
add
add
inc
add
pop
xor
xchg
call
insb
or
cmpl
insl
lahf
pop
dec
dec
out
stos
or
add
sbb
loope
inc
outsb
sub
getsec
mov
or
in
sub
inc
push
mov
dec
jo
adc
inc
ds
add
pop
mov
imul
cmp
in
jno
lock
add
lret
loope
xchg
jne
cmpsl
xchg
rorb
dec
mov
pushf
and
jbe
or
jbe
xchg
lods
popa
inc
add
dec
pop
mov
ss
mov
insb
lods
inc
xchg
stc
call
pop
mov
pop
aam
out
dec
pusha
xchg
sarl
mov
aam
ss
mov
mov
and
mov
faddl
ret
imul
cmp
insb
lods
mov
dec
sar
xor
pop
xchg
call
xchg
cmp
imul
mov
xchg
or
pop
aam
lea
push
fstps
push
dec
aam
sub
fsubr
sbb
out
mov
out
imul
pushf
je
cmp
mov
inc
shlb
adc
or
sub
out
into
mov
add
loopew
nop
or
call
dec
stos
popa
and
aaa
pop
cmp
clc
fldt
dec
mov
cmp
cs
cmp
fcoml
fwait
shrl
cmpsl
mov
out
add
inc
push
lea
or
inc
jecxz
ficoml
pushf
lea
push
mov
adc
mov
mov
movsl
sub
jno
pop
jle
ljmp
sti
add
mov
sbb
mov
mov
sahf
add
icebp
fdivl
and
jmp
sub
cmp
jne
ds
pop
mov
lret
test
test
cmc
into
cmpsl
adc
mov
popa
add
dec
cmp
roll
sbb
adc
out
xor
inc
adc
cld
jns
mov
dec
pop
jle
pop
adc
push
mov
sti
sar
xchg
push
popa
adc
stc
call
out
xorb
cmp
insl
mov
or
ss
pop
cmp
add
fs
or
sarl
dec
ret
lods
xchg
xor
inc
stos
ret
je
pop
xor
cmp
or
sbb
cmp
and
mov
lods
pop
cmpsl
cmp
push
add
xor
es
xorl
push
stos
and
jmp
into
xorb
mov
cmp
or
sbb
and
daa
shll
inc
cmp
jle
dec
jns
inc
lock
inc
xor
xor
lret
mov
pop
mov
dec
js
pop
push
and
push
add
xor
mov
and
aad
pushf
mov
push
dec
test
sbb
cmp
jb
dec
mov
and
mov
xchg
add
lret
inc
mov
jb
sub
nop
pop
sbb
test
jl
in
lds
xor
jne
sarl
pusha
push
xor
mov
jle
and
lea
mov
test
lahf
shll
push
push
nop
nop
inc
sub
push
jp
add
dec
in
mov
test
dec
or
mov
adc
test
mov
xor
popf
nop
mov
data16
pop
popa
jl
imul
push
ret
testb
repz
push
jge
push
cmp
mov
push
push
cli
in
sahf
loopne
movsl
add
lods
mov
jns
ss
pop
inc
adcl
adc
inc
cld
adc
fwait
jb
and
pusha
in
cli
hlt
popf
mov
jae
push
test
mov
cltd
test
push
adc
xchg
sbb
fs
lcall
adc
mov
pop
nop
mov
jecxz
hlt
push
mov
adc
xor
mov
sbb
push
mov
fdivs
je
cmp
push
jb
adc
inc
and
aas
pop
daa
xor
test
test
push
and
sub
xchg
insb
mov
pop
or
ds
test
shlb
mov
push
jge
test
lock
in
and
cmp
pop
mov
add
movsb
orb
mov
daa
inc
dec
dec
xchg
lock
repz
fcomps
mov
mov
leave
mov
mov
or
pusha
leave
icebp
test
outsb
fistl
mov
popf
or
sub
xchg
adc
call
gs
sub
push
mov
sub
mov
cmp
mov
loop
aam
leave
or
stos
bnd
or
repz
fstl
sbb
inc
pop
pop
xchg
xor
or
mov
add
das
inc
pushf
jae
push
mov
icebp
push
fisttpl
cmp
repz
sub
jle
loopne
xchg
cmp
mov
inc
mov
or
mov
daa
dec
sbb
mov
add
pop
filds
jecxz
arpl
xchg
or
stos
sti
sbb
xchg
and
and
adcl
dec
mov
or
fsts
inc
pop
cmp
jns
sub
push
push
push
mov
mov
adc
into
pop
insl
mov
jb
cld
icebp
jns
jmp
xchg
call
lock
and
sti
lret
and
lds
pop
dec
cmp
or
push
push
shrl
out
jge
nop
mov
fisubs
pop
cmpl
or
das
inc
enter
or
inc
rorl
push
mov
fcmovbe
mov
sub
sbb
push
xor
mov
pop
mov
mov
adc
inc
imul
and
aaa
mov
or
mov
push
mov
nop
inc
dec
out
and
iret
add
or
adc
sbb
mov
in
xchg
mov
add
and
stos
pop
imul
pop
cwtl
or
in
inc
scas
mov
repz
cmp
test
mov
pop
or
cmp
mov
ljmp
mov
repz
jno
mov
cli
sbb
data16
jl
ds
mov
fisttpll
shlb
mov
not
repnz
cmp
mov
mov
add
jle
insb
mov
mov
inc
mov
rolb
cld
adc
ss
push
jp
cmp
aad
jno
mov
xchg
arpl
add
sub
add
push
push
xor
mov
data16
mov
gs
mov
call
add
xchg
jle
dec
lock
cmp
repnz
mov
leave
cmp
sete
loop
add
jmp
lahf
sub
cmc
loop
push
push
xlat
pop
fwait
push
call
movswl
xlat
push
mov
push
mov
push
adc
test
jl
mov
jnp
push
shll
push
mov
decb
pop
mov
and
std
popf
testb
std
pop
push
push
mov
pushf
adc
popf
jnp
push
outsl
test
pop
dec
sbb
idivb
jl
dec
loopne
test
adc
push
nop
call
xchg
in
push
cmp
incl
push
mov
cmp
jmp
fistl
add
add
xor
scas
adc
stos
fsts
inc
mov
in
push
neg
test
sub
and
sub
mov
push
xchg
shrl
pop
inc
mov
adc
das
push
mov
cs
push
jns
stos
sbb
pop
jne
xor
mov
or
pop
mov
push
push
push
mov
imul
mov
fwait
sti
arpl
or
movb
int
mov
sub
pop
or
insb
pusha
stos
lock
aas
xchg
ljmp
ljmp
add
or
add
cmp
sub
int
inc
cmpsb
add
mov
push
pop
inc
push
mov
pop
dec
movl
mov
lods
cmpsl
xor
in
mov
stc
cmp
test
sbb
adcb
pop
jl
pop
js
adc
cmpb
mov
sbb
mov
xor
sub
pusha
sub
pop
xchg
cmp
adc
push
fstpt
sub
xchg
in
ljmp
dec
rcrb
adc
jnp
cmp
add
or
or
pushf
xor
adc
sbbb
jo
push
pop
je
mov
js
xchg
cmp
dec
aam
mov
xchg
add
nop
int3
add
xchg
or
xor
pop
mov
add
or
jecxz
jnp
mov
push
cmp
dec
pop
adc
les
cmp
pop
xchg
cmp
pop
cmp
shl
add
xchg
mov
mov
cmp
jnp
fdivrl
cmp
loopne
push
loop
or
in
or
mov
stc
cmc
jg
pop
or
mov
mov
insb
mov
dec
mov
out
fwait
test
push
cli
pop
aam
sub
aaa
or
mov
push
jne
clc
mov
mov
repz
cli
and
test
cmp
ret
add
dec
jmp
adc
push
rorl
pop
or
and
cmp
mov
push
test
jae
sbb
test
jl
cli
ret
sbb
xor
mov
dec
xchg
jl
data16
cmp
fbstp
dec
sub
dec
xchg
dec
mov
inc
xchg
dec
sub
add
dec
clc
stos
cs
or
dec
sarb
add
add
aas
mov
stos
push
dec
cmc
sbb
rorl
pop
xchg
rep
mov
xor
mov
jns
dec
push
call
adc
jbe
sub
inc
push
inc
mov
sarb
sahf
fimuls
jge
xor
call
xor
call
cmp
jne
adcb
and
mov
cmp
loope
sarl
push
and
insl
push
push
insb
add
cmp
call
rcll
clc
lock
lcall
adcb
cwtl
sub
sub
mov
xchg
push
mov
std
pushf
pop
push
jo
mov
mov
cs
movsb
or
push
cmc
aad
pop
mov
xor
add
jbe
insl
in
repnz
aas
mov
ret
dec
ds
scas
sub
pop
push
lret
call
or
out
inc
dec
pop
cmp
dec
inc
outsl
dec
jmp
pop
push
push
in
lock
cli
mov
adc
sub
cmp
out
std
or
jae
or
stos
or
popf
dec
and
movsl
int
dec
mov
push
jb
iret
sbb
lcall
sbb
adc
mov
movsb
mov
imul
sahf
adc
leave
inc
addr16
pop
cmp
jnp
ja
or
fisubs
mov
movsb
movsl
fwait
ret
inc
cmp
dec
mov
aad
lsl
sbb
daa
mov
pop
inc
stc
fwait
imul
leave
inc
pop
jmp
add
in
popf
fcomps
jns
inc
ret
jmp
sti
pop
in
mov
lahf
push
mov
test
ss
mov
push
xor
adc
outsb
or
adc
inc
mov
sbb
mov
push
inc
add
jae
or
jle
mov
or
push
mov
rcl
sub
fwait
cmp
pop
push
cs
popf
xchg
pop
add
jl
rcll
cmpsb
ja
push
popa
sbb
rclb
mov
pop
notb
dec
adc
push
pop
enter
aas
inc
push
mov
sub
loopne
lods
mov
enter
or
jo
and
call
cmpsb
popf
xlat
mov
jns
std
cmp
fs
push
fsts
inc
xchg
jmp
sub
int
dec
cmp
dec
in
jns
push
push
push
repnz
dec
inc
dec
shrb
jbe
pop
call
adcb
or
lcall
jecxz
lcall
inc
cmp
mov
xor
dec
mov
pop
orl
insb
popa
sbb
lods
cmp
mov
sub
or
xor
js
or
pusha
adc
outsb
mov
mov
aad
xchg
and
push
lret
lds
mov
sub
jbe
push
fwait
mov
repz
rcrl
pop
mov
mov
mov
mov
cli
mov
jge
repz
mul
insb
lods
stos
shll
std
lea
cmpsb
push
fistps
jmp
cltd
loope
setl
sbb
fwait
xchg
cmp
sbb
out
push
sbb
jecxz
push
cmp
sbb
inc
dec
fwait
cli
mov
popf
jnp
stc
loope
mov
or
mov
outsb
push
mov
push
pop
inc
fidivs
push
push
popf
or
dec
xlat
adc
sti
fists
inc
cmp
inc
xor
dec
dec
adc
push
adc
divb
into
data16
jmp
sbb
mov
jle
dec
mov
rcll
xchg
jl
out
out
sti
jmp
lea
dec
lret
or
ss
sbb
adc
xor
mov
and
mov
or
cmc
pop
adc
mov
inc
or
sub
xor
jns
mov
adc
cmpsb
cmpl
jne
call
insl
xchg
jge
cltd
sarl
inc
aad
cmp
aas
sbb
mov
push
mov
std
mov
test
divb
mov
dec
and
lods
inc
cld
lods
adc
lods
dec
inc
mov
push
xor
dec
mov
inc
leave
fildl
inc
ffree
lock
mov
mov
or
add
xor
fs
or
jns
push
dec
push
cmp
fistl
pop
ret
nop
sub
fs
dec
add
or
adc
push
rcll
inc
cmpsb
inc
sub
movsb
dec
mov
pop
int3
rorl
test
push
sbbb
xor
ss
hlt
jmp
stos
lock
imul
mov
push
adc
or
sbb
call
xchg
or
loop
roll
lods
repnz
push
into
xchg
push
adc
ds
psubw
adc
dec
adc
push
pop
lea
in
xchg
movl
mov
push
mov
xchg
dec
add
mov
adc
jmp
mov
data16
rcr
jb
mov
adc
push
sbb
call
jae
pop
xchg
dec
clc
incb
orl
decl
orl
rcrl
js
movsl
mov
inc
lds
arpl
sbb
ljmp
ljmp
cltd
jge
cmp
sbb
push
pop
push
ja
push
inc
int
lcall
xor
jns
inc
or
mov
fucomi
xchg
push
push
repnz
or
addl
addl
xor
xchg
mov
push
dec
out
lea
mov
sbb
rorl
add
add
pop
test
adc
setnp
cwtl
lahf
js
outsl
addr16
and
xchg
add
sub
out
ror
mov
cmp
inc
jae
adc
cmp
shl
ret
mov
jbe
ret
loope
lock
arpl
data16
inc
pop
sub
mov
cmp
cmp
pop
push
cmp
or
mov
pop
push
cmpsb
cwtl
or
cli
in
aad
ret
ja
xchg
rorl
enter
fwait
pop
shr
cs
sarl
aaa
movsl
xor
xchg
fcomps
in
lods
test
pop
aam
mov
xor
dec
or
dec
dec
aam
pop
xor
pusha
or
enter
sub
mov
xchg
pop
adc
or
mov
imul
mov
xchg
ss
dec
mov
stc
inc
jo
cmp
push
pushf
jmp
in
fildl
stc
adc
adc
call
pop
jge
jmp
or
xor
cmp
call
testl
roll
or
fneni(8087
jmp
out
xor
push
or
or
ljmp
mov
jecxz
xor
mov
pop
mov
sbb
mov
xchg
mov
xor
lea
dec
pop
add
mov
mov
jmp
lea
pushf
mov
adc
mov
adc
mov
ljmp
jge
and
rcrl
clc
pop
int
or
ds
or
mov
inc
mov
add
push
out
movsb
push
xchg
cmovge
mov
sbb
and
bnd
jl
jl
jg
mov
sub
sub
or
or
sub
push
test
push
mov
mov
adc
popa
xchg
pop
mov
mov
push
push
and
or
and
jge
dec
push
pop
pop
dec
mov
mov
lea
fwait
pop
orl
jbe
repz
xchg
mov
mov
rcll
mov
add
lods
rolb
call
cmp
xor
lahf
lods
adc
call
cmp
flds
mov
inc
mov
xor
mov
sub
sub
inc
add
xchg
cmp
xrelease
sub
jge
and
push
sub
push
xlat
js
jp
mov
out
call
orl
rcrb
cmp
test
movl
aam
push
push
jbe
stos
dec
or
push
call
aaa
mov
sarl
inc
dec
or
mov
xchg
mov
fimull
insb
or
popfw
xor
inc
pop
mov
out
mov
rolb
push
movl
cmp
and
push
jb
aas
sub
pop
mov
sbb
imul
sub
mov
gs
push
push
mov
jge
and
or
je
mov
loop
jecxz
test
ficoml
jo
push
inc
sbb
lret
add
mov
sub
or
mov
xor
inc
test
jl
xor
sti
cld
inc
loop
mov
push
push
mov
push
cmp
add
imul
aad
or
imul
cmp
push
icebp
call
cmp
in
pop
iret
lahf
pop
dec
pop
repz
inc
adc
adc
into
adc
mov
add
out
cmp
pop
dec
push
xchg
pop
push
lock
mov
jno
iret
jmp
cmp
into
aam
pop
inc
and
and
cmp
rcll
mov
push
mov
aam
mov
adc
int
push
lret
in
dec
lods
jge
adc
jle
inc
pusha
pop
xor
clc
inc
or
pop
arpl
sub
insb
les
hlt
cmp
popf
inc
xchg
cli
jp
sbb
popf
je
aas
dec
hlt
imul
inc
xor
cmp
or
stos
jp
push
aad
jo
into
jb
je
jecxz
push
cltd
in
repz
lods
sarl
jp
push
std
repnz
cmp
jns
dec
and
inc
xchg
adc
push
jbe
jge
dec
sub
ret
mov
or
lret
cmc
sbb
icebp
dec
cli
call
push
cmp
dec
fisubrl
adc
call
rcr
and
mov
push
lods
sbb
sarl
cmp
dec
xchg
and
xor
mov
sbb
dec
pop
or
xor
jbe
pusha
das
adc
gs
nop
mov
scas
jl
incb
popf
push
mov
sub
cmp
cmp
je
mov
or
popf
pushf
dec
sub
imul
aaa
push
bound
xor
cmp
addl
push
or
inc
inc
mov
out
cmpsb
inc
ss
lock
lea
push
data16
dec
aaa
je
add
shr
inc
cmp
cmp
jae
je
push
pop
inc
adcl
or
push
aaa
inc
jne
mov
and
push
jecxz
orb
mov
xchg
testl
adc
pop
sub
inc
jg
sub
je
mov
or
jmp
enter
xor
outsl
leave
pushf
jp
js
sbb
push
lea
jnp
mov
jle
pushf
jmp
and
xchg
and
push
or
mov
stos
jb
mov
push
loopne
pop
push
mov
mov
outsb
popa
mov
pop
xchg
insl
add
sbb
ret
xchg
push
ret
lret
in
arpl
cmp
js
cmp
adc
and
mov
or
insl
push
cli
sub
sub
js
xchg
push
jae
mov
notb
and
dec
pop
fs
inc
push
ds
jo
or
divb
sbb
xchg
stos
movsb
inc
xchg
or
adc
and
mov
sub
mov
mov
cmp
jae
in
ficoml
mov
cmp
int
mov
loope
orb
push
mov
out
xchg
xor
adc
dec
sahf
into
sub
sar
add
or
mov
mov
sbb
std
mov
mov
cmp
xchg
inc
sub
xor
dec
add
push
jge
pop
add
mov
xor
jge
dec
fimull
popf
xor
mov
adc
inc
add
bound
fdivrl
sahf
dec
and
jmp
mov
pushf
fildl
dec
fadd
sub
add
push
pop
aaa
mov
aaa
cmp
ljmp
ds
or
add
call
push
or
out
cmp
outsl
iret
pop
paddd
sbb
cli
cmp
mov
fs
push
sbb
xchg
into
hlt
std
mov
mov
jecxz
je
and
push
pop
cld
sbb
test
pusha
stos
es
pop
mov
ss
jo
adc
xor
pop
push
sbb
xor
sub
cmp
es
fimull
cmp
adc
push
sahf
add
jae
clc
sahf
das
add
mov
stos
xor
popa
flds
call
unpckhps
in
out
dec
ret
mov
les
inc
adc
jo
jmp
test
pusha
adc
push
cmp
rolb
and
push
aas
call
cmp
mov
stos
sub
shl
ret
mov
dec
lods
xchg
or
daa
xor
xor
test
es
jne
pop
jmp
cmovbe
adc
sub
pop
push
sub
test
jmp
int3
repz
pop
jns
dec
dec
add
cmp
cwtl
mov
mov
inc
inc
aaa
push
orl
jge
sbb
je
loop
sbb
call
loope
push
push
daa
push
jo
imull
sbb
xor
in
mov
pop
pop
into
daa
loope
iret
popf
mov
pop
cmp
or
je
or
cmp
or
adc
adc
push
sbb
cmp
sbb
lods
les
mov
xchg
movsl
bswap
int3
inc
stc
sti
xchg
std
xor
mov
sbb
test
or
fisttpll
fcoms
cmp
aam
icebp
push
push
inc
push
outsl
mov
pop
inc
ds
dec
into
push
loopne
adc
jns
dec
stc
hlt
addr16
adc
inc
and
mov
dec
xor
mov
push
push
loopne
push
out
icebp
jae
cmpsl
cli
and
cld
test
pop
pop
loop
pop
les
pop
not
pop
pop
pop
data16
push
push
sahf
gs
pop
mov
xor
cmp
clc
div
fbld
mov
or
nop
sub
fcmovnbe
xor
in
inc
pushf
pop
fiaddl
dec
pop
adc
cltd
mov
inc
push
xor
dec
add
xor
mov
push
push
movsl
subb
jmp
or
mov
ds
push
frstor
mulb
push
jae
pop
push
lods
push
leave
mov
repnz
push
out
or
xor
and
mov
cmp
stos
lods
push
lds
add
fisubrs
dec
aad
pop
stos
jae
out
push
fwait
push
mov
pop
pop
jbe
mov
push
jae
mov
mov
sub
test
movsl
mov
orps
out
outsb
pop
imul
movsl
data16
pop
sbb
and
les
cmp
pop
sbb
scas
test
push
movsl
dec
push
or
pop
xor
je
xor
paddsb
cmp
cmp
and
inc
popa
das
iret
popf
mov
jnp
cmp
fbstp
cmpsb
ds
ss
ljmp
out
xchg
push
movsb
lock
inc
jle
ss
mov
mov
cltd
cs
mov
shll
pop
repnz
rcrl
sahf
pushf
xor
add
jmp
jmp
push
into
jne
jbe
pusha
movsb
pop
push
adc
inc
or
shlb
js
pop
ret
xor
jns
xor
ss
lock
cmp
sub
adc
inc
cmp
pop
jnp
cs
insb
cs
inc
cmp
and
cs
dec
lock
lock
out
sub
int3
cmp
sub
xor
dec
cmp
cmp
jns
xor
mov
rorl
fwait
adc
cli
mov
mov
fwait
jp
loopne
mov
xor
addr16
mov
repz
cltd
imul
cmc
push
push
xor
lods
mov
in
inc
rcll
jne
fmull
xor
lcall
gs
xchg
sti
xor
cs
cmp
xchg
jnp
pusha
jne
mov
insl
pop
dec
mov
fldt
and
sahf
adc
or
mov
sbb
fstpt
and
sahf
add
pop
lea
inc
cld
fcom
sbb
xor
movb
sbb
jmp
jae
lock
xchg
push
fldl
call
xchg
and
nop
push
dec
frstor
aaa
xor
xor
mov
jmp
and
mov
std
xor
daa
dec
test
frstor
loopne
jb
incb
shr
imulb
xchg
cmp
data16
push
ret
dec
pop
sarl
xor
mov
scas
push
inc
push
pop
push
lret
inc
push
leave
pusha
mov
push
outsl
iret
nopl
sbb
fstpt
xor
jl
cmp
setge
inc
in
cmp
fldl
stos
push
cmp
or
repz
int
pop
add
jnp
cltd
je
inc
shll
xor
dec
push
mov
imul
pop
arpl
dec
out
fs
lods
and
push
cmp
inc
mov
cli
rolb
js
jne
arpl
insb
pop
in
and
jmp
inc
icebp
bound
std
mov
adc
ficoms
leave
pop
cmpsb
das
sti
cmp
sub
jnp
cmp
rorl
xor
xchg
and
adc
jge
pop
cmp
cmp
jmp
xchg
adc
dec
xchg
push
dec
fadd
subl
icebp
lea
mov
js
cmp
call
inc
popa
inc
pop
lds
dec
and
mov
mov
push
sub
mov
sbb
inc
xor
daa
pop
movb
mov
xor
xchg
pop
sub
mov
sti
jmp
xchg
sbb
adc
push
mov
mov
dec
faddp
sub
addr16
shrb
rcrb
sbb
xor
or
fwait
ja
inc
imul
push
ret
jns
sbb
ja
aas
scas
or
dec
sti
push
fldl
lea
mov
out
push
pop
ss
lock
fcoml
and
pop
jno
leave
and
ret
or
es
cmpsb
pop
negl
pop
cmp
dec
mov
push
mov
add
cmp
clc
lea
leave
add
scas
and
mov
pop
mov
xor
sub
shll
add
mov
iret
adc
jge
mov
clc
out
add
cmp
xor
xchg
sbb
fldcw
dec
scas
mov
ud1
mov
push
clc
add
mov
pusha
mov
jge
rcrl
pop
pop
lods
jbe
cmp
xchg
jns
jnp
ljmp
or
dec
xor
and
and
pushf
inc
xrelease
xchg
add
cmpsl
gs
or
cmc
inc
cmp
icebp
inc
pushf
movsb
pop
out
or
sbb
lret
fistpl
cmp
dec
mov
or
cmc
and
pop
sbb
bound
and
push
call
xchg
or
mov
outsl
lcall
inc
and
xchg
pop
in
xchg
jns
jle
arpl
gs
adcb
ret
inc
in
cmpsb
jge
in
xor
mov
jo
imul
in
repnz
imul
cltd
in
loopne
test
in
adc
add
int
inc
popa
lahf
in
test
fisttpl
dec
loop
dec
daa
and
je
dec
ljmp
cmpsl
sub
xor
test
lcall
dec
in
cmp
sub
cltd
nop
adc
push
cmp
xchg
loopne
idivb
dec
insl
loop
in
xchg
lds
out
dec
out
or
dec
outsb
fisttpll
hlt
sub
call
lcall
rorl
addr16
xor
inc
shrb
stc
push
xor
fstl
ret
push
sub
in
rcll
push
repnz
adc
xchg
adc
test
arpl
testl
cld
push
stc
sti
adc
out
adc
jge
jle
push
mov
adc
fisubl
mov
inc
adc
sti
add
xchg
adc
push
cmp
test
bound
clc
and
movsl
push
pushf
popa
xlat
lods
cmp
lods
jb
mov
add
call
adc
push
bound
add
pop
sbb
sub
push
xchg
pop
add
push
lea
iret
or
lret
shrd
scas
dec
dec
in
pop
dec
imul
adc
int
je
sub
dec
test
inc
adc
fs
ficoml
data16
loopne
mov
icebp
push
cmp
jb
pop
dec
xchg
push
xchg
jmp
scas
dec
or
jns
dec
or
lret
test
stos
add
cmp
sbb
pop
loop
mov
pop
or
lds
movsb
add
pop
pop
es
push
jmp
add
leave
mov
jae
inc
xchg
hlt
pop
mov
sbb
sbb
sbb
and
and
sub
dec
aaa
jecxz
sbb
mov
rorl
adc
cmp
and
test
inc
mov
dec
xchg
pop
dec
xor
push
test
cmp
add
cmp
mov
jmp
rorl
cmp
ret
add
mov
mov
jae
sbb
adc
inc
and
xchg
sbb
sbb
or
test
or
loope
cltd
sub
loopne
jns
mov
inc
inc
and
jno
push
notl
or
mov
lea
outsl
xor
dec
cmp
shr
push
lea
scas
clc
cmp
rclb
stc
call
push
jle
std
ss
xor
fs
xor
fwait
inc
call
inc
roll
xor
adc
jmp
pushf
out
pop
inc
mov
rorl
xor
inc
mov
mov
ror
outsb
pop
shr
pop
inc
hlt
pop
ror
and
cli
jbe
jmp
inc
push
loopne
sbb
jl
cmpsl
sti
dec
in
mov
jmp
push
dec
pop
mov
inc
push
mov
or
push
xchg
add
dec
inc
cmp
push
sub
pop
out
rorl
sub
pop
repnz
pop
add
pop
pop
icebp
pop
sahf
outsl
pop
pop
cmpsl
fs
inc
mov
pop
push
dec
sub
push
icebp
imul
pop
pop
jnp
add
push
shlb
dec
repnz
rcr
cmp
xlat
xlat
cli
push
jmp
mov
or
dec
popf
sub
mov
cmpsl
cs
incl
movsl
mov
mov
xor
mov
add
nop
mov
mov
inc
or
loop
subb
push
clc
pop
mov
pop
jge
scas
xor
js
adc
shll
inc
xchg
jmp
rcr
cmpsl
in
mov
add
pop
int
arpl
mov
pop
mov
movb
inc
dec
push
push
das
push
mov
popf
mov
dec
mov
mov
mov
sbb
lcall
pop
sub
mov
inc
nop
fs
and
jmp
leave
add
dec
or
pop
mov
mov
inc
repnz
push
sarl
sarl
mov
or
mov
or
add
stc
leave
stc
xchg
inc
addr16
inc
cmpsb
cmp
dec
pop
dec
notb
test
movlps
outsb
push
mov
sub
mov
dec
mov
call
pushf
lds
in
or
cmp
jecxz
das
mov
mov
jge
and
xor
or
sub
pop
dec
mov
adc
sbb
sbb
and
lea
xor
adc
sub
mov
dec
dec
jns
dec
inc
popa
movsb
mull
or
test
je
outsb
or
jecxz
xchg
inc
test
sub
je
nop
sub
cmp
xor
sub
mov
jb
icebp
cmp
add
cmp
test
daa
inc
std
sub
stos
fstpt
mov
pop
in
inc
outsb
jge
loopne
out
cmp
or
out
addr16
xchg
jb
xor
or
dec
in
mov
adc
pop
push
ret
hlt
jmp
std
not
idivl
les
xchg
outsb
mov
ds
dec
outsl
icebp
insl
bound
pop
icebp
jae
sub
add
insl
icebp
jnp
sbb
add
test
inc
push
adc
icebp
icebp
sti
push
inc
test
sbb
stos
cld
rcrl
mov
out
inc
jnp
sbb
sub
and
dec
fnsave
add
lds
dec
bound
or
aaa
in
push
mov
push
scas
in
mov
outsb
push
mov
push
test
add
sbb
shl
mov
stc
jmp
cmp
sub
push
popl
lahf
or
call
cltd
dec
mov
dec
or
mov
add
dec
dec
repnz
or
call
stos
xchg
jne
loope
or
jl
lods
xor
call
testb
rorl
nop
or
ljmp
or
jmp
das
xor
mov
mov
jmp
dec
pop
xor
fstpt
pop
and
test
inc
push
cmp
mov
push
outsb
dec
and
ljmp
out
mov
or
call
adc
add
mov
dec
pop
das
bound
jmp
dec
or
addb
dec
sub
jl
das
mov
dec
pop
stos
outsb
cwtl
inc
sbb
data16
jo
xor
adc
inc
int
jge
cmpsl
test
and
add
dec
repz
mov
pop
and
cltd
je
cmp
jne
test
mov
mov
sbbl
sub
inc
sbb
mov
pop
pop
call
andb
cmp
jge
xchg
cmp
or
pop
push
mov
pop
pusha
jecxz
and
fadd
push
sub
cmp
pop
pusha
mov
pop
mov
push
sbb
push
and
insb
fcomps
iret
or
mov
jns
pop
daa
jp
ror
add
dec
sti
pusha
insb
negb
jns
pushf
xchg
xchg
dec
push
inc
mov
jecxz
cltd
out
inc
pop
frstor
add
call
into
push
pop
sti
jns
sub
or
stos
test
and
mov
jg
ds
pop
push
ss
or
inc
fistl
pop
pop
jne
pop
sbb
call
je
sbb
dec
sub
push
lea
pop
testl
inc
pop
pop
ds
popa
mov
in
cmpsb
loopne
mov
in
fnstcw
ja
outsb
jge
adc
lea
mov
push
insl
fucom
sbb
mov
in
or
adc
lods
testb
cs
jl
mov
sti
and
inc
inc
sbb
xchg
notb
adc
cmp
or
sub
rcrl
push
or
daa
mov
push
loopne
cmp
ret
push
push
fildl
shufps
xor
fistpl
sbb
fstpt
adc
lods
xor
cmpsl
sti
lods
cs
lods
jmp
cs
sahf
lds
cmpsl
cmp
cli
imul
lret
adc
leave
pop
lods
xor
mov
cld
cmp
aas
in
imul
ficomps
mov
test
ljmp
and
sub
pop
sub
sub
mov
mov
sub
loopne
bound
pusha
mov
sahf
and
xchg
sub
or
cwtd
iret
imul
mov
gs
iret
pop
sub
lahf
in
test
fisttpl
dec
test
and
adc
rcrb
sub
cmp
insl
fcompl
mov
xchg
xor
popf
or
ja
push
movsl
sub
shl
daa
in
sbb
pop
or
xor
in
std
adc
pop
push
cmp
xor
adc
push
mov
add
sbb
xor
push
fldl
adc
pop
je
push
pop
pop
sbb
mov
sbb
or
sbb
push
dec
movsb
add
inc
enter
lret
push
movsl
sbb
outsl
push
inc
mov
lea
rcrl
nop
scas
cmp
add
shll
idivb
mov
push
ja
xchg
jmp
scas
cmp
pop
or
jne
outsl
push
repnz
or
push
movsl
sbb
xlat
mov
xchg
lock
dec
push
testb
sbb
mov
push
lret
jo
or
cmp
lods
lret
adc
xor
divl
out
inc
mov
cwtl
and
xchg
cmp
xchg
pusha
out
rorl
sub
dec
pop
and
rorl
cmp
pop
and
mov
roll
or
lods
and
inc
mov
sti
pusha
or
and
mov
dec
leave
test
xor
cwtl
jb
jo
dec
adc
insl
mov
icebp
xor
out
mov
mov
and
enter
daa
jns
add
dec
testl
cmp
adc
sbb
jno
add
jno
imul
jne
lea
nop
push
and
jbe
adc
int
lods
cmp
sub
or
xchg
lods
stc
lret
mov
lods
pop
cmc
lods
sahf
orb
push
in
pushf
in
loop
mov
adc
dec
inc
pop
pop
xor
popf
loop
lret
test
sbb
push
push
lock
mov
push
mov
ret
mov
cmc
lods
pushf
addr16
lods
out
xor
in
cmp
push
jb
dec
dec
sub
adc
mov
pop
lea
mov
rol
cmpsl
ds
mov
adc
repz
je
test
add
out
inc
mov
sbb
call
fwait
je
adcl
pop
add
mov
test
nop
inc
sbb
je
and
push
mov
loope
inc
jg
jne
movaps
push
jb
inc
inc
mov
ss
cmp
cmovp
movsb
jns
push
or
lods
mov
jne
and
add
push
aas
xor
jbe
push
cmp
mov
out
cld
xchg
lock
add
jp
sub
pusha
pusha
adc
jo
xlat
add
lahf
or
pop
fistpl
pop
inc
arpl
test
xchg
into
and
or
enter
adc
add
stos
pop
xchg
push
xor
pop
js
and
out
cli
mov
cmp
mov
sbb
push
adc
in
push
in
dec
in
inc
in
inc
in
or
xor
mov
or
cmp
sbb
jne
sub
aas
ss
push
fcoms
call
push
std
push
cmpsb
cld
fwait
pop
pop
idivl
dec
sub
call
stc
mov
mov
sbb
lock
sbbl
push
adc
pop
adc
rcl
pop
push
and
jle
adc
mov
or
test
xor
or
lea
cmpsb
inc
sub
pop
or
dec
sub
mov
push
lcall
dec
test
icebp
dec
or
add
insb
loopne
cmp
push
das
cld
les
jnp
xor
sti
mov
cmp
int
fbstp
push
push
push
in
cmp
das
jne
xor
push
xchg
imul
push
mov
insb
cmp
push
call
jmp
mov
add
lock
push
mov
js
add
add
mov
in
arpl
and
xor
mov
jmp
add
rcrb
adc
add
or
pop
dec
mov
mov
pop
mov
xchg
or
inc
fbstp
mov
fisubrs
xchg
add
lea
rcrl
inc
cmp
and
hlt
cltd
cmp
je
or
adc
sub
in
xor
and
fstpt
pop
dec
inc
das
pop
in
xor
lea
enter
sbb
es
jbe
sub
mov
mov
add
xchg
in
js
mov
xchg
mov
int3
push
mov
cmp
imul
cmp
outsl
dec
aas
mov
in
cli
and
and
ds
test
xchg
test
push
sub
xchg
mov
je
fsubr
sbb
push
daa
xchg
inc
jmp
pop
out
or
cmp
jg
ja
push
jns
sub
cmp
fs
enter
push
scas
pop
inc
repnz
adc
iret
nop
or
cmp
sbb
stc
or
cmp
sbb
mov
ljmp
movsl
sbb
dec
fs
ds
jecxz
call
das
mov
loop
dec
test
shlb
imul
sbb
aam
adc
loopne
mov
sbb
cmp
cwtl
jecxz
arpl
mov
in
repnz
jno
mov
jbe
xor
cmp
fnstcw
xor
hlt
inc
add
aaa
fdivrs
adc
test
test
fs
data16
xor
js
popf
pop
xchg
and
push
pop
testb
or
cmp
insb
test
pop
mov
or
out
js
int3
sub
outsb
fwait
mov
xor
push
pop
adc
inc
ds
lods
rep
sub
cmp
stc
outsb
sbb
je
xchg
sbb
int3
cmp
and
fs
ret
stos
and
dec
mov
and
out
sbb
shll
dec
sub
jnp
jb
push
inc
sbb
xchg
sti
mov
lods
lahf
xor
call
dec
cmpsb
cmp
or
dec
fadds
push
or
repz
add
fisttpl
aaa
cmp
mov
mov
push
add
dec
inc
stos
push
pop
sub
mov
out
xor
ret
cmpsl
dec
push
fsubrs
fs
push
xor
cmp
cmpsb
decb
add
repz
or
push
popf
pusha
push
push
mov
out
xor
xor
loopne
adc
dec
out
pop
dec
push
mov
xor
pusha
push
push
push
pop
add
call
and
push
dec
lds
jno
jl
shll
add
cli
jnp
inc
mov
jl
add
jnp
xchg
mov
dec
add
sahf
add
inc
cmp
jb
push
jl
and
test
sbb
lret
cmp
or
or
mov
popf
test
jb
adc
inc
lea
mov
dec
je
sahf
icebp
xor
stc
and
cmp
dec
mov
jne
jmp
push
or
xor
mov
push
ja
lahf
pop
pop
stc
push
stc
mov
sahf
adc
mov
mov
test
or
push
pop
dec
sbb
push
add
pushw
cld
dec
aas
sti
pop
fs
cltd
shlb
and
cmp
adc
je
in
sub
add
inc
roll
shll
add
mov
jnp
mov
imull
fldl
rcr
cmp
add
and
ja
xor
cmp
adc
push
sbb
push
orb
adc
or
sbb
xor
add
add
mov
pop
xor
pop
out
jmp
call
dec
or
push
and
cmpl
mov
scas
aas
push
mov
sub
xor
adc
clc
mov
ljmp
inc
jne
aad
dec
adc
ds
jge
push
xor
add
mov
shll
and
test
push
jecxz
data16
sub
mov
lds
into
cmpb
add
adc
adc
add
add
jno
insb
xor
cmp
or
lods
and
add
out
cmp
in
mov
push
mov
movsb
adc
xor
aaa
cltd
iret
sbbl
dec
pop
pop
push
pushf
sahf
btl
inc
pop
pop
and
lret
or
push
daa
ljmp
lret
test
dec
sbb
adc
mov
add
cmp
xor
add
adc
dec
sub
inc
orl
and
out
cmp
adc
fcomip
mov
jp
and
std
inc
stc
xchg
adc
cwtl
lret
sbb
sbb
adc
inc
push
inc
sbb
add
mov
push
and
push
shll
xchg
fs
pop
pop
cmpb
dec
mov
push
setne
subb
enter
adc
gs
in
fwait
shr
divb
insb
loopne
scas
and
mov
jno
incl
repnz
xor
stc
sahf
mov
push
or
push
or
filds
out
xor
inc
cmp
jmp
mov
pushf
jmp
out
jmp
cwtl
mov
mov
dec
scas
ret
dec
push
dec
xchg
aam
adc
sbb
cwtl
add
add
fwait
xor
mov
int3
dec
cmp
ds
mov
stos
lret
outsl
mov
pop
cmp
or
rcrb
sub
sbb
push
aad
inc
lcall
push
test
sbb
leave
mov
inc
cmp
ss
jae
sub
pop
cmp
insb
adc
mov
add
push
or
lcall
sub
or
and
push
jp
shlb
dec
ficoms
mov
cmp
sahf
or
push
mov
pop
xor
andb
stos
shll
mov
mov
push
loope
fmul
call
pusha
add
out
dec
clc
inc
stos
pushf
or
mov
pop
leave
push
pop
lds
xchg
shll
pop
bound
call
lods
gs
xor
xchg
dec
pusha
shrb
lea
jo
dec
shrb
add
aaa
mov
jmp
mov
test
mov
inc
dec
mov
lods
adc
aas
jmp
xor
or
push
lret
pop
push
int
sub
mov
int3
or
mov
dec
pop
in
jl
pop
jnp
cmp
dec
gs
ja
push
js
rolb
fs
fnstsw
aad
xor
inc
test
movsl
mov
adc
cmp
sub
mov
mov
push
cmp
mov
sbb
adc
sub
or
popf
cmp
mov
repnz
adc
push
mov
out
std
aaa
push
dec
fdivl
mov
insb
adc
dec
dec
stos
out
pop
dec
dec
pop
rorl
mov
jbe
jmp
dec
cmpsl
rcrl
nop
sub
in
les
repz
je
xor
xchg
add
or
cmp
and
insb
sbb
push
icebp
in
sub
int
mov
popf
mov
inc
pop
mov
cmp
mov
and
xchg
adc
adc
pop
subl
ds
inc
xor
pop
cmp
push
dec
loope
into
sbb
and
inc
fstpt
dec
filds
adc
mov
inc
test
push
jns
pop
push
add
sbb
call
ds
pushf
test
sub
dec
xchg
adc
lcall
roll
jl
shrb
jmp
std
cli
push
adc
imul
mov
cld
or
imul
ss
or
sub
dec
push
sub
clc
subl
jl
orl
test
pushf
mov
stos
inc
jae
out
das
or
and
adc
je
and
pushf
movsl
out
push
lret
sbb
sti
call
leave
pusha
stc
mov
test
adc
enter
push
adc
pop
fsubrs
xor
lds
jbe
lock
mov
movsb
cmp
or
adcb
jmp
jb
cltd
call
sub
into
ret
xor
push
mov
call
xchg
cmp
inc
ja
cmp
sub
repz
lea
cmp
subl
cmp
mov
and
sbb
push
in
iret
mov
loope
sahf
testl
pop
dec
push
lea
cmp
sbb
scas
pop
sbb
sbb
adc
cs
rol
loopne
and
lods
add
in
outsl
in
pop
cmp
inc
adc
or
push
dec
fcoml
popa
clc
or
push
sbb
call
cmp
popf
fcoms
sub
iret
mov
push
fmulp
fsts
dec
and
in
loope
imul
stc
loope
xchg
insb
mov
add
add
sub
pop
ficoml
push
inc
mov
in
rorl
scas
mov
mov
pushl
cltd
cmp
inc
jae
loope
pop
push
add
push
push
mov
push
mov
mov
mov
xchg
lock
mov
pop
lret
or
ret
push
cmp
push
adc
or
and
xchg
ret
test
dec
or
pushf
xor
jne
xor
std
fildl
inc
sub
mov
shlb
stos
test
sub
jne
cmp
inc
and
dec
cmc
add
pop
mov
cwtl
mov
je
xor
adc
xor
push
fdivs
loopne
arpl
pop
add
in
aad
inc
in
inc
push
jb
push
pop
inc
lods
shlb
cmp
push
stos
jne
or
dec
inc
pop
xchg
daa
inc
out
ret
jmp
daa
fcomp
sub
mov
pop
and
fisttpll
ret
sub
mov
cmc
lods
cmp
cmp
enter
dec
dec
or
cmp
aaa
arpl
mov
mov
ja
mov
inc
mov
jbe
sub
movsbl
mov
dec
adc
std
sti
mov
out
push
fistpl
mov
repz
push
mov
mov
icebp
mov
jae
ds
pop
jne
mov
adc
lret
adc
test
lock
in
clc
and
ja
mov
xor
push
mov
sub
sarl
enter
and
mov
add
jecxz
push
sub
mov
pushf
outsl
mov
sbb
call
mov
adc
xchg
push
cmc
es
or
ljmp
ss
adc
and
adc
and
or
sbb
or
pop
aam
jge
aam
aaa
out
cli
iret
cmpsb
jl
dec
mov
xor
cmpb
decb
xchg
stos
inc
fildl
int
push
and
pop
xor
ret
mov
movsb
mov
adc
sub
adc
call
stos
je
hlt
scas
mov
int
outsl
push
cmp
in
int3
sub
scas
inc
int3
mov
or
xor
lea
lahf
push
mov
lret
adc
push
jle
adc
enter
rorl
mov
lods
repz
push
sbb
addl
inc
cmp
sbb
nop
jbe
sub
xor
push
jns
call
xchg
pop
or
mov
cs
or
mov
sub
jl
popf
jmp
or
leave
add
mov
cmp
aam
aad
or
or
fwait
inc
adc
pop
inc
lea
push
xor
in
sub
add
mov
pop
lods
mov
xchg
inc
jno
push
movsb
or
or
psrld
cmp
xor
inc
cmp
cmp
pushf
or
xchg
je
mov
push
sbb
data16
mov
cmp
xor
in
movb
cmpb
ror
dec
outsl
mov
xchg
insl
lods
and
mov
mov
cwtl
dec
adc
std
or
mov
call
cld
or
push
or
clc
mov
inc
pop
divb
lahf
push
xor
and
sbb
dec
inc
adc
push
pop
add
inc
hlt
je
add
test
adc
and
mov
insl
mov
push
adc
adc
adc
push
or
movsb
pop
flds
mov
ja
fsubl
cmp
inc
mov
jl
dec
jo
stos
cmp
sub
sub
cmp
pop
js
sub
sub
mov
lock
push
sbb
aaa
dec
outsl
pop
fwait
int3
xchg
data16
sub
in
sti
xor
xchg
cmp
aas
jbe
out
popf
test
call
dec
mov
xchg
test
xchg
or
adc
out
or
adc
nop
sub
fidivrs
out
mov
inc
xlat
call
lds
shrl
sbb
mov
ja
bound
push
lea
or
insb
gs
inc
or
jns
mov
daa
mov
scas
mov
or
xchg
mov
pop
ret
pop
addr16
shlb
icebp
push
sub
mov
icebp
or
inc
scas
or
rorb
xchg
lret
xor
mov
fsubrl
shlb
lods
cmpsb
ret
in
ds
inc
push
or
int
lods
imul
leave
cmp
pusha
and
adc
cmp
call
cmp
sbb
movsb
pusha
mov
mov
inc
arpl
mov
inc
hlt
xor
mov
jnp
test
push
pop
out
movsb
notl
negl
cmpl
xor
iret
inc
pop
dec
add
or
ja
sub
xor
pop
sub
cmp
fnstcw
xor
sub
mov
push
sbb
add
add
push
aad
sub
sbb
sub
sbb
mov
aam
rorb
int
lret
sbb
shr
pop
mov
add
mov
push
andl
adc
imul
arpl
adc
es
nop
sbb
xchg
test
test
cmpsb
xchg
mov
mov
call
jge
ret
mov
out
in
pop
ljmp
lret
push
loopne
ss
sahf
insl
push
push
mov
adc
or
sub
adc
adc
sub
sbb
xor
in
mov
scas
fsubl
mov
test
sbb
push
lret
test
or
cmpsb
je
add
jmp
adc
mov
mov
push
xchg
sbb
imul
test
ret
nop
pextrw
or
into
jae
movsl
inc
dec
or
ret
push
mov
in
fwait
push
fcmovnbe
cmp
sub
dec
mov
daa
or
mov
push
or
mov
push
xchg
dec
rcl
add
movsb
call
adcb
in
mov
lea
mov
jbe
jae
inc
adc
mov
data16
xchg
decb
lret
orl
nop
mov
lret
testb
out
sbbb
mov
idivl
push
shl
xor
dec
fisttpll
mov
call
adc
popa
pop
movsb
xchg
adc
mov
leave
fadds
lea
test
pop
jl
cmp
mov
jmp
adc
call
or
mov
rclb
jl
bswap
jle
xor
leave
out
rcrb
rcrl
aaa
mov
testb
out
mov
out
fs
xchg
jmp
cs
mov
sbb
adc
in
jno
push
mov
push
mov
pop
loopne
xlat
out
rorb
rclb
test
pop
jge
jl
mov
lahf
push
int3
flds
mov
mov
push
daa
xor
or
decb
lea
cld
and
or
in
adc
inc
lock
call
jmp
cmc
mov
in
or
fisttps
jle
xor
xchg
cmp
cmp
and
mov
cmpsb
ficompl
loopne
nop
pop
mov
insb
xchg
loopne
in
cld
data16
jns
inc
imul
sub
rolb
jno
ljmp
in
idivb
pusha
cli
mov
or
sub
cmp
jge
cmpsb
mov
gs
xlat
dec
call
jle
push
jbe
add
daa
fsubrl
dec
push
adc
stos
cmpsb
xorb
xor
push
repnz
cmp
in
movsl
push
aaa
jo
or
cmp
aaa
cmpsl
or
sahf
loopne
mov
sahf
cmp
cmp
mov
or
je
sbb
fxch
lret
mov
mov
mov
call
mov
push
cmpsl
inc
loopne
add
iret
push
mov
push
lea
iret
push
push
lret
dec
aam
sub
adc
add
ret
push
adc
lods
mov
push
sahf
jb
adc
dec
int
xchg
fsubr
or
pop
add
push
pushf
pop
push
mull
jge
sub
xor
andb
mov
pop
sub
mov
divl
inc
jne
or
pop
adc
sbb
push
insb
add
mov
jg
add
shlb
push
inc
dec
or
xor
lahf
or
lds
sbb
mov
inc
stc
jbe,pt
or
dec
ja
testl
and
mov
push
fldt
pop
sbb
movl
adc
mov
and
push
in
arpl
pusha
clc
inc
cmp
les
mov
daa
test
cmp
idivb
push
mov
mov
lahf
jge
mov
mov
fucomp
out
xor
mov
push
mov
inc
mov
mov
add
cmpsb
mov
call
cmp
fs
test
stc
into
pop
add
and
xchg
adc
je
js
cmp
enter
xchg
out
std
popf
sub
mov
out
cld
fmull
inc
jo
sub
xor
jge
popl
repnz
aam
cmp
test
cld
insl
pop
jnp
pushf
out
sbb
insl
push
jb
push
movsl
mov
in
sbb
jno
xchg
mov
xor
and
xor
push
pop
sub
std
add
inc
push
push
or
jo
ss
jae
mov
or
cmpsl
push
int3
and
jle
pop
pop
lds
push
rcrb
sbb
mov
pop
xor
lret
aaa
add
mov
mov
rorl
into
call
test
add
pop
std
repnz
jg
inc
mov
stc
xor
out
mul
cs
cmp
push
test
test
fwait
jl
int3
sub
push
adcb
stos
jge
sbb
mov
fsubrl
pop
sub
pop
test
aas
int
xchg
dec
pop
or
stos
stc
mov
stc
jecxz
dec
mov
pop
inc
inc
mov
jno
lahf
jge
push
lods
add
loop
push
jns
lods
push
push
jl
dec
mov
add
mov
je
lea
push
mov
es
pop
cmp
mov
jge
jne
jecxz
push
lcall
test
ret
out
pop
pop
and
and
push
cli
dec
mov
call
int3
jmp
cmp
test
int3
sub
sbb
adc
cmp
mov
adc
jne
mov
adc
push
sbb
popf
cmp
movsl
xor
arpl
cmc
sbb
fcomps
rcrb
dec
cwtl
ficomps
push
cmp
push
jb
adc
jmp
xor
in
loope
ja
add
xchg
pop
mov
adc
xchg
jp
sub
cld
xchg
fiadds
mov
or
add
in
sbb
into
sbb
scas
inc
fdivr
mov
add
dec
pop
js
sub
mov
out
push
sbb
lock
cld
jmp
adc
test
stos
stos
fmul
ret
cmpl
jne
repz
pop
jmp
xchg
ret
cltd
fst
daa
and
out
gs
sub
in
xchg
in
cmp
sbb
bound
test
cmpl
push
je
cmp
push
stos
or
xchg
loopne
int
adc
pop
cld
and
loope
jge
xor
jl
call
and
popf
out
loopne
cmp
loopne
sbb
cmp
mov
rol
or
inc
pop
out
xor
pop
fmuls
fisttpl
shr
inc
mov
pop
sub
and
mov
shr
and
and
add
or
jne
div
mov
gs
inc
push
stc
out
shll
push
cmp
js
pop
cli
adc
jbe
dec
cmpl
xchg
pop
adc
mov
xor
jnp
pop
sbb
std
popf
lea
repz
enter
jne
adc
lcall
cld
pop
sbb
rorl
rorb
cmp
andl
adc
or
inc
pop
push
dec
or
push
aas
push
mov
jns
mov
mov
xor
adcb
push
mov
xchg
dec
decl
sti
jmp
cmp
push
mov
push
lea
cld
icebp
sbb
adc
jns
pop
decl
push
subl
jmp
incl
nop
or
xor
add
ret
pop
push
cmpsb
adc
mov
pop
mov
mov
icebp
sub
es
pop
or
sub
jne
mov
push
push
sbb
rorb
or
call
scas
sbb
or
lret
mov
xchg
fnsave
icebp
jl
push
testb
adc
cmp
loopne
sub
and
push
or
cltd
or
adc
or
mov
pop
mov
pop
test
hlt
pop
mov
clc
pop
fcoms
adc
sbb
or
add
push
push
push
mov
jle
and
clc
loopne
adc
add
pop
in
dec
adc
movsb
pop
popf
inc
add
or
pop
mov
cs
inc
cmp
sbb
pop
push
lea
daa
lret
inc
sbb
imul
mov
push
aad
sub
lea
gs
or
dec
sbb
jmp
outsl
pop
scas
push
or
or
in
imul
repz
push
pushf
and
cwtl
push
fists
mov
test
bound
cmp
dec
gs
cmp
inc
mov
incl
je
mov
rorb
fsub
push
adc
leave
inc
jne
and
push
push
loope
sbb
xorl
pop
push
inc
or
imul
out
add
inc
ret
pop
out
dec
call
dec
cmp
push
orl
subl
adc
push
repz
inc
les
jbe
push
and
push
pop
jne
lea
loop
mov
je
aad
jne
imul
push
xchg
stos
mov
lea
icebp
lock
ret
in
lcall
cld
std
mov
jo
inc
int3
enter
scas
clc
dec
sub
scas
je
orb
nop
lret
test
inc
call
xchg
and
lret
adc
rolb
dec
mov
dec
mov
icebp
push
jecxz
sub
or
lods
divb
pop
ret
dec
int3
sbb
push
xchg
and
je
test
test
in
adc
xorl
je
push
pop
pop
nop
loope
or
scas
test
cld
mov
nop
adc
push
xchg
lea
in
pop
scas
cli
dec
lea
adc
mov
insb
add
lret
and
inc
test
nop
test
clc
cmp
pusha
jp
notb
jp
mov
inc
push
jns
xchg
adc
push
mov
es
xchg
push
adc
test
add
jmp
mov
test
jmp
mov
mov
hlt
inc
or
lcall
xchg
xor
or
bound
jge
lock
dec
add
push
xchg
sub
hlt
clc
add
fstl
push
dec
sub
jl
sub
xor
std
lods
aaa
loopne
test
xchg
repz
push
in
push
xchg
cmp
add
push
jno
clc
call
xchg
adc
paddsb
ss
ja
mov
int3
pushf
insb
push
loope
nop
sub
rclb
pop
int3
mov
pop
inc
jecxz
clc
xchg
mov
ss
jge
mov
push
repz
inc
mov
push
ret
dec
in
jns
jle
dec
shlb
ret
fists
push
push
add
mov
add
popf
nop
xor
cmp
sub
sub
aaa
push
out
lods
push
fwait
sub
mov
ss
call
push
int
cmc
push
adc
out
jge
scas
xchg
or
cmp
cltd
std
call
and
in
repz
stos
les
loop
scas
adcb
inc
mov
arpl
leave
xchg
xchg
or
push
shr
popf
inc
mov
add
mov
inc
pop
outsl
dec
adc
jne
js
adc
cmpsb
sub
pop
inc
and
jb
lcall
add
add
jmp
or
shr
out
cwtl
push
push
out
aaa
cmp
int
scas
loope
lods
xchg
xor
push
jmp
mov
mov
pop
sbb
lret
jne
push
mov
mov
jno
mov
mov
push
xor
js
jle
add
cmp
pushf
sbb
enter
imul
add
sbb
mov
dec
js
loope
out
cmpb
test
or
out
pop
mul
add
sbb
sub
push
jp
and
ret
rcl
bndstx
cwtl
and
fwait
dec
pop
gs
add
insl
add
sbb
outsl
test
adc
sbbb
gs
cmp
aas
jge
add
push
repnz
into
mov
sarl
test
pop
daa
loopne
adc
es
add
dec
divl
roll
or
cmp
cltd
fwait
mov
shlb
add
pop
mov
adc
lods
cmpsl
mov
fwait
xchg
sub
mov
fucomp
xor
mov
int3
std
add
or
fistps
dec
push
add
jb
xor
add
xchg
adc
xor
and
or
xor
mov
adc
push
mov
aas
lock
mov
cmp
sahf
cwtl
std
jns
xchg
pop
xchg
popa
jmp
dec
fstl
jb
lret
inc
pop
push
in
xlat
push
push
sbb
leave
aaa
lock
pop
insl
mov
adc
es
add
cmc
int3
push
mov
popa
dec
pop
js
sub
bound
pop
jo
mov
fidivrl
test
add
dec
add
out
orl
dec
xor
stos
add
cltd
gs
pop
in
in
add
push
pop
sbb
cmp
xor
stc
add
push
ja
test
xchg
out
and
jo
sbb
shl
fisttpl
cmp
pop
dec
push
fsts
fs
add
mov
mov
and
int
xchg
adc
jns
dec
mov
mov
repnz
inc
or
lock
addl
adc
in
sbb
aas
push
mov
mov
imul
rorl
push
sahf
pop
fwait
adc
cli
mov
pop
inc
pusha
cmp
cwtl
jno
out
sahf
loop
sbb
add
jmp
mov
loopne
jae
popa
stc
int
inc
mov
imul
fldenv
and
or
inc
jle
xor
mov
aad
add
push
popa
xchg
lahf
xor
out
push
dec
push
inc
adc
add
mov
cld
adc
push
gs
insb
sbb
fs
xchg
push
pusha
lock
xchg
adc
cltd
pop
insb
jae
sbb
add
mov
mov
fsubs
movsl
push
orb
mov
push
adc
jmp
insl
ret
add
test
mov
pushf
or
aaa
add
ret
xor
sti
add
lcall
push
rclb
add
mov
das
and
loope
and
jmp
jmp
fwait
out
sbb
sbb
xor
pop
push
fisubrs
hlt
mov
lods
push
movsl
adc
inc
add
push
hlt
sbb
jge
pop
add
mov
sub
mov
push
add
sbb
int
pusha
clc
popa
dec
shll
bound
sbb
jle
or
add
and
jbe
jne
xchg
adc
jmp
js
repnz
mov
popf
adc
lret
rol
or
jl
jns
sbbb
lds
jno
xlat
test
pop
in
add
adc
pop
mov
push
lahf
adc
jne
mov
add
and
sbb
shll
cltd
dec
and
or
push
mov
mov
test
sub
add
inc
sbb
shr
adc
mov
mov
ja
bound
mov
mov
cmp
prefetcht1
cltd
aaa
fiaddl
cwtl
hlt
adc
cmp
cmc
push
mov
andl
lea
stos
push
icebp
mov
add
xor
dec
jle
int3
add
arpl
cmpsb
jns
sub
bound
imul
dec
pop
cs
arpl
rclb
mov
lods
jne
and
out
and
addb
jnp
popa
mov
jb
repz
mov
pop
jmp
ss
popf
sub
cmp
int3
push
inc
mov
dec
jg
or
xor
sarl
iret
cmp
push
jns
cltd
mov
push
adc
movsl
mov
sub
pop
sub
ror
add
fistl
add
subl
inc
sbb
mov
add
jnp
jecxz
xchg
ficompl
xor
imul
popa
dec
sbb
mov
rorl
enter
sbb
mov
add
imul
adc
cli
mov
lods
loope
adc
mov
js
add
inc
dec
inc
scas
mov
pop
frstor
or
in
aaa
lret
pop
pop
repz
nop
fs
jne
add
int
faddp
mov
inc
cmpsl
lock
int
or
dec
add
pusha
xchg
and
cld
add
jecxz
push
fldl
dec
add
inc
xchg
pop
sbb
in
mov
cld
inc
enter
add
mov
cmp
pop
out
sarb
aaa
jns
test
mov
sbb
add
jecxz
cltd
jns
push
push
popf
sbb
sub
dec
sbb
test
sub
stos
xchg
add
adc
mov
rol
fidivrs
push
sbb
mov
cmpsl
mov
jnp
jp
jmp
popl
jbe
mov
es
outsl
sbb
test
xor
cmp
jmp
push
sbb
sbb
add
repnz
sahf
dec
sbb
adc
aad
sbb
pop
pop
mov
repz
and
shll
inc
mov
jp
sub
std
lret
fdivrl
inc
pop
insb
add
xchg
xor
sbb
iret
xchg
pop
fidivrs
push
mov
daa
rorl
fidivrl
int3
cmp
add
incl
jns
jno
dec
mov
sbb
xor
stc
stos
dec
cli
sub
mov
adc
repz
or
imul
loop
and
bound
nop
adc
and
add
xchg
jbe
pop
fiaddl
sbb
cmp
add
dec
ret
jg
inc
add
jbe
lock
pop
test
mov
jmp
sbb
and
mov
pop
jb
movsl
fldcw
push
pop
sbb
mov
iret
rcrl
lods
and
pop
push
adc
adc
cmc
adc
imul
mov
add
and
sub
dec
sbb
mov
push
inc
int3
add
ret
jp
es
rol
icebp
pop
adc
mov
das
lods
out
add
lcall
pop
les
xor
jg
daa
mov
add
out
shrb
fstps
push
imul
sbb
bound
les
sub
lret
ret
mov
add
mov
cld
xchg
aaa
sbb
pop
sar
invd
fistps
push
add
loop
cltd
mov
out
decl
leave
push
fndisi(8087
xor
addr16
cwtl
movsb
popa
sbb
js
lret
add
popf
xchg
mov
jecxz
mov
xor
xor
lock
scas
add
test
sbb
stc
mov
add
jp
mov
es
pop
xchg
call
xchg
adc
leave
mov
jbe
fwait
and
add
leave
push
repz
loope
push
push
lods
out
jmp
iret
add
roll
das
add
jno
sub
sbb
mov
call
test
leave
movsb
mov
sbb
sub
in
jnp
mov
scas
add
mov
add
sbb
jno
lds
cmp
sub
or
cs
ss
test
outsb
mov
push
mov
ret
add
fcoms
icebp
inc
push
push
and
testb
add
cmp
or
sbb
ss
jne
pop
cmpsl
int
sub
dec
leave
push
pop
out
incb
std
pop
jae
cltd
pop
rclb
jb
add
les
clc
add
insl
push
stos
and
inc
add
call
add
inc
stc
mov
sbb
or
add
jecxz
xchg
jle
mov
sbb
loope
sbb
scas
andb
add
test
xlat
add
mov
cltd
insl
push
push
ret
pop
stos
jne
decb
add
mov
cmc
imul
jae
dec
fcoml
mov
sarl
aaa
sahf
or
sub
sub
pop
mov
shlb
cltd
dec
add
lea
sbb
lods
test
xchg
lcall
cltd
into
je
adc
adc
rorb
repnz
jnp
frstor
shrl
or
sahf
push
pop
outsb
filds
out
push
cmp
pop
add
xor
inc
xlat
add
dec
ds
loopne
push
xchg
addl
dec
insb
jecxz
sahf
pop
add
xor
jl
jae
and
sbb
popf
adc
add
xchg
nop
xor
sbb
lret
cmpb
sbb
xor
mov
adc
sbb
sub
cmp
dec
pop
pop
fs
je
cmpb
cmp
fmuls
loopne
call
cmp
in
shlb
push
push
mov
mov
mov
cmp
cmp
or
mov
nop
in
or
push
sbb
cmp
push
cmp
test
mov
mov
pop
lock
mov
inc
cmp
insb
jl
mov
pushf
cmp
sarb
in
sbb
clc
adc
or
je
nop
pop
test
nop
int3
or
cmp
cmp
or
push
jo
jl
mov
test
mov
push
hlt
mov
out
cmp
xor
cmp
inc
push
nop
pusha
or
adcb
test
lods
pop
mov
aam
rcrl
or
and
xor
nop
je
cwtl
cmp
call
shr
cmp
inc
cmp
cmpb
pop
nop
cwtl
nop
mov
push
mov
pop
hlt
adc
sbb
inc
or
push
pusha
mov
xchg
pop
mov
dec
push
stos
pop
adc
push
mov
pop
ror
rorb
in
clc
pop
or
rcl
adc
mov
cmp
loopne
sbb
push
pushf
mov
and
sbb
pop
pop
je
nop
mov
mov
mov
cmp
stc
and
mov
cmc
push
sbb
and
push
pop
pop
or
mov
inc
int3
cmc
movsb
das
xor
int
js
jns
jae
sbb
jg
jge
jnp
add
testl
inc
inc
dec
dec
add
dec
dec
dec
push
push
add
push
push
push
pop
pop
mov
pop
pop
pop
pop
data16
bound
popa
outsb
outsl
inc
insb
movl
ja
jne
push
int
cld
add
cld
lahf
jnp
add
inc
notl
loopne
add
das
cmp
sub
std
adc
push
popa
cmp
fists
cmp
jecxz
fwait
sbb
add
aad
or
cli
cwtl
mov
adc
adc
sbb
loopne
sbb
cmp
popf
pushf
mov
xor
sbb
mov
mov
xor
mov
jecxz
arpl
enter
and
fistps
sbb
add
adc
ret
or
adc
icebp
popa
insb
jo
xchg
test
add
or
outsl
ja
jae
adc
cli
fiaddl
xchg
outsl
andl
arpl
gs
test
data16
jns
arpl
sub
adc
insb
mov
popf
arpl
bound
imul
imul
icebp
fisttpll
fnstenv
xlat
add
xorb
cmp
xor
popa
sub
test
or
jae
jle
cmp
je
shrl
lcall
insl
rol
stos
imul
jb
mov
shlb
cs
dec
fisubl
jne
arpl
sub
mov
or
ja
lock
and
cmp
mov
das
mov
xor
sbb
adc
sbb
lea
rcll
pop
xor
jno
or
pop
adc
sbb
test
push
inc
xor
filds
mov
adc
push
mov
mov
mov
push
inc
pop
xor
xlat
pop
insl
imul
mov
jo
mov
imul
add
jmp
push
dec
pop
dec
dec
push
arpl
in
addr16
push
sub
lcall
dec
jne
outsl
data16
pop
outsb
pop
jge
jg
fwait
int3
jg
ja
add
push
daa
push
outsl
push
push
xor
pusha
xlat
adc
pop
cmp
fmuls
pop
push
xchg
inc
pop
nop
jp
cmp
xor
push
sub
and
dec
adc
nop
push
inc
cmp
and
push
cmpsl
mov
in
daa
addr16
outsw
jns
bound
pop
es
inc
pop
insb
sub
sbb
movsw
cmp
dec
lcall
inc
push
gs
je
xor
jo
outsl
push
outsb
mov
insb
pop
imul
or
addr16
mov
adc
bound
xchg
sub
outsb
mov
xchg
scas
adc
xchg
addb
insl
adc
jns
popa
fwait
add
jae
jl
push
lret
in
test
adc
push
cmp
push
push
nop
push
or
push
push
push
mov
dec
pop
dec
dec
nop
dec
or
dec
push
dec
mov
inc
pop
inc
inc
nop
inc
or
inc
dec
stos
xor
push
imul
xchg
jmp
adcl
andb
pop
xorl
shrl
xchg
mov
insb
mov
push
add
orl
xor
adc
xorb
in
and
add
cmp
cld
inc
add
adc
mov
popa
test
jbe
loope
add
xor
xor
xchg
fnstenv
popa
add
mov
jecxz
cmp
inc
outsb
leave
scas
mov
xor
fbstp
outsl
jne
iret
mov
sbb
test
cli
mov
or
int
add
inc
mov
int
xor
lock
dec
testl
push
xor
xor
xor
push
mov
push
and
inc
dec
or
push
pop
or
rcrb
roll
mov
xor
xor
dec
jae
and
mov
test
sub
outsb
pop
cmpsb
cmpsl
insl
insb
out
mov
test
push
push
emms
das
das
push
mov
xchg
scas
pop
dec
fisttps
inc
inc
roll
dec
push
adc
lcall
jns
dec
push
orl
adc
xor
fdivrs
cmpb
pop
pop
inc
nop
and
rcll
mov
xchg
adcb
push
and
xor
imul
ja
or
sbb
aaa
test
xorb
sbb
jns
xchg
mov
lea
call
shlb
jns
arpl
pop
and
inc
mov
and
push
mov
inc
mulb
push
call
jge
and
aaa
adc
lods
aam
cmp
je
cmp
dec
bound
decl
mov
pop
test
sbb
jge
or
push
pop
outsl
pop
jo
popa
cmp
lahf
hlt
inc
sarl
mov
push
mov
inc
inc
mov
push
mov
push
out
arpl
push
add
je
ljmp
pop
leave
movsl
inc
mov
or
jp
pop
lods
les
mov
rorb
jle
pop
push
jne
imul
adc
jp
daa
inc
pop
pusha
ds
cmp
xor
xor
xor
cmp
jge
popf
in
sub
mov
pop
pop
aas
nop
sub
sub
sub
sub
cltd
shr
ja
or
mov
pop
adc
pop
jbe
rorl
or
cmp
pusha
clc
push
pop
and
and
dec
or
sbb
inc
shr
xor
std
lock
jno
cwtl
movsl
adc
sbb
xor
push
jns
shlb
push
xor
clc
pusha
addb
adc
cmp
lods
and
mov
dec
stc
sub
pop
pop
mov
adc
sbb
and
and
add
add
pop
gs
push
mov
scas
or
in
xor
push
ret
add
ds
in
xchg
xorb
lods
scas
inc
push
ss
lcall
push
sarb
add
push
in
pop
in
dec
mov
mov
push
push
adc
jg
lock
cmp
shrb
add
sbb
or
loop
inc
clc
sub
xor
adc
jle
mov
aas
dec
push
xor
push
pushf
pop
add
sete
roll
push
imul
jne
mov
dec
int3
rcll
push
adc
inc
call
testl
sbb
pop
jg
add
xchg
adc
adcl
jnp
adc
xchg
mov
inc
outsl
cltd
mov
push
call
in
notl
xchg
movsb
lea
aam
sbb
xor
pushf
fstpt
pop
jno
pop
or
jmp
cltd
sub
cmpb
pop
adc
testb
xchg
js
dec
mov
dec
cmp
push
or
pop
push
shlb
mov
pop
push
jae
ds
jne
adc
in
cmp
lds
nop
es
push
jae
xor
dec
inc
add
scas
pop
sahf
test
dec
or
cmpsl
jg
mov
lods
das
jae
cmp
imul
jbe
adc
addr16
pushf
je
xchg
xchg
and
ss
ror
bound
fcom
jmp
out
inc
adc
in
add
mov
cmpsl
cld
adc
fcompl
pop
dec
xor
sbb
subps
sti
cmpsb
cmp
sbb
and
fucomp
lods
cld
xchg
fdivs
shr
pop
cmp
mov
test
jo
sbb
imul
lret
add
sar
icebp
jl
std
or
cli
cli
enter
push
xchg
leave
jnp
push
je
mov
sub
iret
or
es
inc
inc
jp
pusha
fiaddl
iret
adc
stos
push
repz
inc
mov
add
dec
into
sbb
push
xchg
or
sub
xchg
push
dec
xor
add
fistl
arpl
dec
aas
or
adc
xchg
clc
aas
pop
or
enter
cmp
cmp
imulb
loope
jbe
adc
cmc
xchg
adc
add
aas
ret
in
ds
dec
push
fstl
add
cmp
fmul
call
clc
mov
cmpsl
inc
sbb
or
mov
sbb
nop
subl
adc
sub
mov
dec
scas
lcall
add
nop
cmp
push
jb
mov
push
push
fwait
adc
je
ret
adc
aaa
mov
outsb
sub
mov
cltd
jne
notb
inc
add
into
add
cli
xor
neg
imul
jb
pushf
cmp
pop
adc
ret
adc
mov
out
pop
pushf
mov
add
mov
cli
popa
es
cmp
dec
dec
push
jne
or
sub
js
xchg
add
testb
jne
sbb
and
leave
mov
pop
jbe
out
jne
jmp
or
lods
mov
loop
popa
sub
orb
lea
sub
pop
inc
mov
jmp
test
cmp
mov
inc
imul
aaa
add
add
iret
roll
addr16
sbbb
mov
cmp
sbb
inc
dec
leave
cmp
js
sbb
jns
mov
push
push
out
pushf
add
fidivl
mov
ja
adc
adc
mov
test
inc
adc
xchg
int
std
daa
mov
xchg
cwtl
xor
xor
movsl
push
lcall
jae
mov
mov
inc
int
jns
xchg
cmp
adc
je
cli
adc
inc
scas
pop
and
ds
dec
pusha
sbb
adc
testb
xor
mov
sub
push
aaa
pop
add
jp
pop
nop
rcr
insl
test
and
add
test
clc
jbe
sar
rcll
push
lret
add
xor
leave
icebp
and
cmpb
gs
lcall
adc
or
sub
imul
std
mov
cmpsb
sbb
jl
push
mov
nop
outsb
sbb
add
and
mov
inc
outsb
push
cmp
adc
mov
and
movsl
sub
dec
mov
call
push
lahf
aas
vphaddbq
dec
dec
xchg
xchg
jmp
cs
sbb
sub
jnp
ljmp
and
sbb
mov
xlat
outsb
pop
and
shrl
jne
gs
in
adcl
out
arpl
pop
lahf
out
dec
nop
outsl
inc
int3
mov
or
test
xor
and
jge
xor
test
nop
adc
imul
out
cmp
or
stos
mov
adc
jae
jnp
jg
orb
in
or
pushf
arpl
cmp
lret
pop
loopne
arpl
jecxz
pop
shll
cmpsl
fsubs
add
clc
jg
jbe
cvtps2pi
jmp
out
test
mov
xchg
and
lret
stc
push
adc
dec
idivb
jnp
push
sub
mov
adc
cmp
pop
cmpsb
or
sub
lds
sar
sar
scas
or
inc
xchg
mov
pop
dec
fwait
mov
push
jge
imul
rcrl
lretw
push
out
jl
mov
fcomi
jge
pop
adc
or
fldl
mov
xchg
mov
scas
add
push
int3
and
inc
stc
xor
ds
xor
cmp
inc
mov
sbb
cmpsl
dec
repz
repnz
stos
sti
aad
push
das
mov
adc
dec
popf
fcmove
out
std
adc
sbb
dec
pop
out
jmp
out
stos
push
in
adc
jle
push
sbb
ds
pmulhuw
std
fidivrl
popf
outsb
pusha
fstl
cltd
icebp
xorb
xchg
jno
or
fcoms
jae
shrb
in
pop
cwtl
cmp
popf
fwait
sbb
push
call
in
push
cmp
cmp
adc
cmp
outsb
and
mov
scas
aaa
jle
ja
sbb
xor
loopne
shll
cmp
std
pop
sarl
enter
sub
shlb
aam
mov
nop
push
outsb
inc
gs
or
add
adc
sub
jmp
loopne
xor
or
xor
inc
bound
dec
push
test
inc
enter
sub
loope
incl
cltd
popf
cmp
cmpsl
jne
popa
pop
aaa
push
adc
sbb
daa
jo
insl
xlat
cmp
lahf
and
stos
push
xorl
sub
pop
pushf
cli
or
out
les
sub
ja
push
mov
add
lret
push
xchg
nop
adc
adc
sub
popa
pop
call
pop
inc
iret
mov
or
shl
ret
sub
bnd
mov
xchg
dec
xchg
fwait
outsl
push
decb
test
in
adc
pop
nop
mov
pop
in
loopne
popf
js
data16
rcrl
xchg
sbb
ds
popf
mov
cmp
or
ror
adc
shlb
mov
add
inc
jmp
xor
jnp
push
inc
cltd
mov
push
lds
jae
mov
inc
adc
loope
adc
mov
insb
mov
pop
fcmovnu
or
mov
daa
pop
pop
sub
pop
enter
pop
or
out
sbb
cmp
cmc
lret
sub
sub
pop
ds
push
int
xor
pop
jl
add
dec
xor
fiaddl
out
addb
push
sti
fadds
or
test
xchg
and
test
cmp
pop
jge
adc
cmpsl
les
sbb
dec
xor
ficoml
test
les
test
jbe
xlat
leave
bnd
sbb
jbe
push
cmp
push
jmp
pop
mov
mov
adc
lods
jl
loop
ljmp
nop
scas
bound
adc
std
adc
mov
jp
or
adc
cmpsb
rcrl
sub
push
push
xor
call
xchg
orb
retw
iret
pop
push
hlt
push
xchg
cmovs
mov
jmp
lods
lods
xchg
pop
or
xor
add
iret
and
movsl
pop
jo
data16
in
cld
test
call
pushf
jno
cmc
push
sub
mov
dec
daa
push
or
movsb
mov
cmc
pop
lock
pop
hlt
shrl
or
or
push
ret
mov
es
rorb
les
adc
xlat
nop
inc
push
lds
mov
out
imul
data16
or
mov
xchg
mov
les
ss
inc
adc
sahf
jb
imul
xor
push
pushf
lcall
int3
sub
inc
in
outsl
dec
aaa
call
add
in
push
popa
jl
push
push
jmp
sbb
jl
je
push
or
push
jno
mov
inc
mov
mov
shrb
in
mov
aam
sti
xor
popl
fnstsw
xchg
xchg
dec
xor
js
shlb
js
mov
into
cmpsl
clc
movsb
out
mov
push
jle
je
rcr
push
pop
push
adc
aas
adc
mov
fsubs
push
and
mov
mov
jge
jge
outsl
xchg
xchg
test
jo
fs
cmpsb
out
in
mov
pop
andb
and
jo
push
cmpsl
jge
enter
dec
pop
out
shr
fs
push
lods
xchg
cli
pop
mov
or
int
jb
hlt
cmp
mov
out
jbe
stc
inc
testb
iret
in
cmpsl
fidivrl
and
sub
ss
adc
fsubs
xchg
inc
scas
xchg
mov
jp
dec
xor
push
xchg
sub
add
jmp
iret
hlt
cs
je
iret
pop
cmpl
pusha
lahf
and
pop
lahf
scas
test
stos
lea
pop
daa
clc
dec
shll
jmp
loop
sarb
cmp
push
mov
pop
and
cs
jnp
pop
sar
pusha
movsb
push
fimuls
ljmp
sahf
es
mov
pop
xor
iret
mov
inc
add
je
outsb
ret
pushf
ljmp
loop
mov
inc
pusha
dec
in
clc
ss
dec
sbb
das
adcb
and
sbb
mov
push
fldt
js
xchg
pop
and
and
ret
or
aaa
cmpb
mov
pop
pop
and
lret
mov
or
xchg
inc
inc
sub
mov
inc
cmp
mov
dec
or
xchg
add
aaa
or
test
or
sub
movups
inc
mov
int
mov
insl
xchg
in
xchg
push
pop
adc
push
xchg
inc
or
or
stos
dec
subps
sbb
or
pop
addl
jne
jp
push
ss
sub
out
ss
jge
rcl
xor
xchg
movb
jmp
push
movsb
inc
sbb
xchg
mov
bnd
sub
push
sub
imul
jl
add
in
xor
pusha
push
test
int
mov
insl
cltd
call
sub
push
in
ja
mov
xor
sbb
es
ljmp
shll
mov
sbb
xor
test
jbe
loopne
xor
fs
xchg
cwtl
jge
fnstenv
mov
or
or
mov
jb
fcmovnu
adc
or
test
xor
or
or
mov
sarl
ret
push
in
inc
repz
jle
jmp
inc
inc
cmp
mov
mov
jnp
or
mov
jmp
mov
xchg
sbb
cwtl
push
jbe
movsl
mov
dec
lds
inc
ret
xor
dec
sbb
test
push
and
mov
jno
pushf
imul
xor
mov
cmp
pop
jbe
xchg
test
sub
mov
popf
sbb
pop
fsubl
jge
inc
add
mov
je
push
and
sub
or
aas
sub
mov
in
dec
imul
test
shlb
mov
std
lea
jo
inc
and
in
push
or
mov
jmp
push
call
imul
sarb
sbb
dec
mov
mov
popf
je
out
hlt
icebp
insb
add
test
sbb
test
das
add
decl
orl
rolb
sbb
rorl
test
inc
js
add
push
ss
push
push
jmp
sub
lahf
mov
or
gs
jns
dec
cmp
add
addr16
and
push
inc
js
push
push
fwait
adc
pop
sbb
mov
sbb
inc
iret
push
mov
call
rclb
jb
es
jo
adc
aaa
aaa
test
call
jmp
xor
jmp
loope
dec
mov
rorl
insl
mov
mov
adc
or
pop
cmpsb
pop
push
and
into
fwait
xorb
adcl
cmp
lock
inc
sub
adc
push
pop
push
xor
sbb
jle
jae
push
or
mov
lret
push
mov
mov
pushf
cmp
rcll
dec
mov
adc
mov
ret
dec
adc
ret
stos
test
loope
cmpl
mov
pop
roll
dec
out
ja
cmp
cmp
dec
mov
int
clc
sbbl
add
or
insb
dec
ja
sub
mov
inc
jmp
push
sub
pop
cmpsl
jge
push
mov
test
xchg
inc
gs
adc
imul
std
cmp
xchg
sahf
xor
mov
xchg
mov
mov
test
mov
add
pop
or
loope
inc
mov
pop
cli
into
push
aas
call
out
hlt
out
stos
outsl
mov
lahf
scas
call
fsubrs
or
add
pop
or
jge
nop
push
pop
cmp
and
push
das
fildl
lret
xor
add
or
push
push
mov
dec
mov
mov
pusha
imul
lods
enter
dec
sub
mov
lret
leave
mov
inc
push
int
dec
repnz
rcr
push
and
in
dec
xchg
aaa
xchg
xchg
lea
fisttpll
push
popf
pop
and
pop
stos
sbbl
push
out
cmp
or
popf
adc
add
push
jmp
test
xchg
lret
jo
or
aad
pop
clc
cmp
lea
pop
pop
cmp
sub
cltd
adc
fidivrs
loope
call
loope
or
jecxz
sbb
pop
xchg
mov
lods
adc
mov
rorb
mov
mov
leave
pop
inc
pop
nop
xchg
or
pop
inc
pop
or
sbb
loop
mov
or
sub
cli
jno
cmp
in
jmp
icebp
cmpsb
jno
cmp
mov
push
loope
xor
mov
dec
in
jmp
push
or
imul
dec
sarb
inc
movsb
add
mov
lret
xchg
insl
adc
inc
dec
cmc
cmp
adc
jl
jae
stos
mov
mov
mov
pop
push
or
push
lret
sbb
sub
std
mov
sub
jne
pop
pop
daa
loope
mov
or
popa
adc
push
jmp
jne
adc
fwait
ljmp
or
dec
rorb
or
xchg
pusha
mov
cmp
pop
sbb
mov
cmp
push
mov
push
bound
and
pop
incl
dec
push
add
mov
jl
push
cmp
or
or
sub
mov
jne
xor
push
push
sub
mov
xchg
ss
jmp
cmc
xor
in
subl
outsb
popf
and
jge
addr16
sub
cmp
test
push
cltd
xorb
sub
sbb
jp
pop
pop
or
sub
hlt
test
cltd
daa
fcompl
or
jo
daa
dec
test
add
and
xchg
je
add
pop
mov
push
cmp
fstpl
cmp
ja
mov
pop
mov
or
or
push
dec
pushf
adc
lds
pop
or
sub
push
jnp
bound
nop
cwtl
add
pand
xor
or
xor
or
or
mov
std
inc
inc
cmp
pop
js
lods
xchg
or
pop
lahf
mov
lahf
movsb
hlt
pushf
cmpb
fimull
push
jl
push
push
daa
sub
add
add
jl
mov
lock
cmpsb
ret
popf
pop
mov
std
and
jne
mov
lods
and
mov
xlat
pop
mov
ds
push
sub
push
mov
shlb
fstl
stc
inc
push
or
cmp
sub
adc
cmp
sbb
dec
cltd
orb
pop
sbb
nop
sbb
sbb
adc
xor
jo
nop
pop
pop
loopne
and
and
sub
subb
and
adc
adc
and
jae
or
pop
aas
and
rorb
dec
inc
inc
popa
bound
arpl
and
push
ret
insl
imul
mov
adc
xor
pop
dec
xlat
mov
cmp
push
sbb
mov
lcall
jo
adc
into
imull
mov
sub
stc
or
aas
xlat
bound
into
mov
xor
pop
mov
or
mov
mov
pop
push
pop
mov
pop
dec
dec
nop
inc
or
cmp
cmp
or
cmp
sbb
sbb
or
clc
das
cwtl
call
push
rorb
adcb
push
pop
mov
dec
pop
inc
cmp
cmp
xor
sbb
adc
or
cmp
cs
aam
rcrb
nop
pushf
or
mov
nop
jl
js
je
jo
insb
cmp
fs
nop
pop
or
push
push
push
mov
pop
inc
inc
nop
cmp
cmp
pop
hlt
pop
sub
aam
rclb
mov
cmp
pop
sarb
push
lods
mov
pushf
nop
cwtl
or
mov
test
jl
js
je
jo
pop
mov
pop
xor
fisttpl
and
and
mov
cmp
or
or
sub
clc
cmp
in
cmp
pop
in
nop
fmull
fdivs
inc
aas
fiadds
sbb
add
sbb
add
adc
adc
pop
das
push
xor
sbb
xchg
xor
and
sbb
and
es
out
ss
out
in
out
out
add
dec
test
cmp
xor
push
mov
push
add
xchg
sub
sbb
or
add
jbe
mov
push
ss
insl
pop
lret
pop
clc
push
add
mov
clc
outsl
bound
sbb
xor
inc
push
push
xchg
pop
pop
adc
xchg
xchg
popf
mov
mov
mov
lret
rcl
fcmovnbe
loope
out
in
repz
clc
std
fiaddl
xor
mov
mov
pop
lret
sub
sbb
addr16
inc
addr16
addr16
addr16
pop
addr16
arpl
outsl
addr16
jnp
andb
mov
addr16
addr16
addr16
lods
addr16
mov
addr16
addr16
addr16
addr16
jmp
icebp
mull
add
or
pop
pop
xchg
xchg
xchg
dec
xchg
pop
xchg
xchg
jo
jbe
jl
addb
xchg
xchg
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
or
adc
and
sub
cmp
inc
xchg
dec
xchg
xchg
data16
xchg
jle
test
xchg
xchg
stos
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sahf
add
divps
sbb
sub
xor
ss
push
push
popa
insl
jae
jle
xchg
mov
inc
dec
sar
call
std
clc
adc
sub
xor
inc
lock
call
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loope
imul
and
popa
arpl
gs
addr16
mov
addr16
addr16
out
addr16
addr16
add
and
xchg
pop
cmp
pop
xchg
jo
jp
addb
xchg
xchg
xchg
xchg
xchg
sahf
or
es
sahf
push
mov
insb
nop
movsl
mov
mov
sar
out
clc
or
push
rcrb
enter
clc
das
repnz
dec
pop
pop
jbe
jnp
test
mov
xchg
sahf
test
mov
in
stc
clc
add
or
adc
sbb
lock
call
and
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loope
cmp
insl
sbb
arpl
gs
addr16
addr16
addr16
addr16
addr16
jp
andb
xchg
addr16
addr16
addr16
addr16
add
sub
pop
pop
xchg
jae
jns
mov
roll
xchg
xchg
xchg
sahf
or
adc
sbb
jle
sahf
inc
mov
gs
push
je
mov
mov
dec
sar
jecxz
ljmp
enter
clc
dec
lock
call
jns
mov
xchg
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loope
aas
imul
sbb
popa
sub
cmp
addr16
addr16
addr16
addr16
andb
mov
addr16
addr16
decl
or
fcoml
push
xor
stos
push
fisubrl
cli
jle
mov
dec
adcl
out
addr16
add
sbb
xchg
data16
imul
rcrb
sar
xlat
cld
fmull
jmp
in
ss
and
daa
mov
xchg
es
es
mov
fisubl
loope
repnz
xlat
and
and
xchg
dec
xchg
pop
push
fistl
shl
nop
icebp
sbb
pop
lock
call
and
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loope
xor
outsl
sbb
gs
mov
cmpsb
addr16
ss
test
pop
xchg
insl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
push
jne
xchg
sub
cs
cmp
xchg
dec
pop
jne
mov
mov
neg
push
cmp
bound
or
cli
mov
mov
loopne
loopne
loopne
loopne
loope
cmp
insl
movq
sbb
gs
addr16
push
popa
inc
push
inc
es
es
dec
xchg
xchg
xchg
mov
adc
xchg
pop
sub
xchg
pop
mov
inc
xchg
int
add
paddw
icebp
es
xor
out
pop
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
xchg
and
xchg
pop
jb
movsl
push
stos
xchg
mov
mov
fimull
push
mov
fs
outsl
fiaddl
ljmp
in
xor
pop
enter
clc
xchg
lock
loopne
loopne
loopne
sub
aas
sub
xchg
dec
push
push
xchg
push
jnp
addl
stos
xchg
xchg
xchg
xchg
xchg
mov
jle
adc
xchg
movl
in
cmc
fiaddl
xor
mov
mov
push
lret
jno
jecxz
loope
std
mov
and
adc
sbb
sbb
imul
push
loope
rcrb
idiv
jmp
repz
fsubrs
in
in
popf
addr16
addr16
or
xor
push
lds
mov
mov
lahf
ljmp
jnp
xchg
dec
and
xchg
in
test
test
or
aas
xchg
dec
imul
rorl
mov
xlat
clc
or
dec
rclb
cmpsl
shlb
lock
jl
loopne
loopne
insl
xor
cmp
adc
sbb
imul
cmp
rcr
xlat
clc
lock
push
rclb
lock
call
loopne
loopne
loope
cmp
inc
sub
and
push
es
es
cmpsb
es
es
cmp
mov
dec
mov
es
out
pop
sbb
push
arpl
xchg
push
fwait
xchg
ret
in
fildl
mov
mov
fdivr
repz
sti
clc
add
or
adc
push
shlb
lock
pop
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loope
aas
imul
dec
outsl
pop
popa
arpl
jne
jle
xchg
inc
cwtl
nop
or
xor
stos
mov
and
dec
es
es
cmpsl
lods
es
mov
mov
jecxz
call
xor
test
sbb
xor
cmp
dec
js
pusha
loopne
loopne
loopne
xor
enter
shlb
loop
call
cmp
push
sub
sbb
mov
xchg
loopne
loopne
xor
int3
sahf
xchg
jecxz
icebp
lods
jno
mov
inc
shlb
ljmp
sub
sahf
fxch
loope
jmp
andl
sub
test
loope
in
in
in
in
in
in
in
and
and
push
xor
xchg
xchg
xchg
sahf
add
adc
inc
pop
dec
jle
sahf
bound
das
rolb
dec
rorb
lock
xchg
loope
cmp
imul
and
xchg
mov
push
mov
dec
mov
mov
addr16
addr16
push
call
mov
xchg
push
pop
xchg
jg
clc
push
cmpsl
cmp
ds
test
test
pop
scas
sbb
das
stos
pusha
fimull
ljmp
inc
icebp
push
stos
push
arpl
jnp
dec
out
pop
and
stos
push
gs
inc
cli
mov
sub
pusha
pop
mov
insl
outsl
mov
or
scas
mov
dec
or
adc
repz
push
inc
das
clc
pop
jge
lahf
in
in
in
in
mov
fisubl
push
out
ds
push
stc
push
cmp
push
ficoml
push
mov
jmp
shlb
jecxz
test
fdivs
lods
daa
cmc
adc
mov
in
jmp
imul
imul
jbe
addl
test
mov
adc
iret
sbb
aaa
pop
enter
jg
aad
jmp
push
cmp
adc
cmp
ficomps
popf
pop
lret
ljmp
out
lea
insl
test
rcll
xchg
neg
and
mov
dec
stos
push
ficoml
ljmp
fsubs
add
fisubrl
cli
mov
inc
aaa
roll
add
jp
lods
arpl
jns
cmp
add
and
es
dec
dec
push
push
xchg
push
pop
push
rorb
clc
popf
sbb
xor
dec
mov
jg
call
fcoml
sbb
mov
arpl
push
addr16
push
gs
xchg
jge
mov
xchg
lahf
shlb
xchg
or
or
sub
pop
bound
cwtl
sahf
push
xor
and
js
xor
rorb
jne
xor
jnp
loopne
loopne
cmp
test
es
shll
jecxz
out
imul
mov
inc
daa
push
andl
xchg
push
fdivrl
rorb
pop
cmp
aaa
scas
jns
push
adc
pop
into
jle
sahf
out
mov
jb
add
jge
enter
clc
cli
repz
pop
jae
mov
iret
rcl
stc
imul
add
dec
xchg
jo
add
inc
pop
and
xor
bound
xchg
xor
pushf
lds
ret
repnz
cld
clc
xor
and
js
xorb
jecxz
mov
sarl
or
pop
dec
push
loope
in
mov
mov
xor
popf
inc
out
arpl
xor
cld
out
andl
insl
push
test
adc
ret
idiv
std
xchg
cmp
mov
popa
dec
arpl
pop
pop
lea
xchg
xor
popf
add
in
in
gs
pushl
sahf
pop
inc
mov
jl
xchg
xchg
lock
xchg
rorb
addr16
addr16
addr16
add
adc
sbb
fildl
dec
mov
add
mov
decb
cld
lahf
test
in
mov
push
aaa
inc
movlhps
or
mov
test
jae
cmpl
xchg
mov
shr
ljmp
sbb
or
and
push
xchg
dec
loopne
loopne
xor
es
ds
sbb
shl
in
in
scas
add
cmp
ds
sahf
dec
mov
pop
stc
cmpsl
and
in
in
in
in
in
nop
mul
add
push
adc
inc
mov
movsl
pop
ljmp
stos
ljmp
jnp
cmp
insl
pop
outsl
daa
push
xor
push
adc
dec
js
gs
loopne
loopne
loopne
or
add
and
xor
jmp
rcrl
fwait
jp
pop
fwait
mov
dec
std
loop
vpmulhw
xorl
pop
insl
push
outsl
imul
adcl
push
test
shll
shlb
loopne
jmp
icebp
pop
push
ds
arpl
test
addr16
movsl
stos
shlb
fsubs
jcxz
call
stc
aas
imul
sbb
and
push
jle
mov
movsb
mov
sar
mov
and
sbb
mov
inc
inc
push
notl
pop
js
data16
jno
andl
hlt
cmp
sahf
pop
or
sub
int
inc
addr16
ds
push
dec
pop
xorl
jl
mov
popf
out
inc
pop
mov
sub
arpl
push
dec
imul
es
es
xlat
sahf
fcomip
std
std
pop
jmp
pop
sub
fisubrl
test
lods
ljmp
in
in
popa
syscall
adc
lcall
rorb
mov
mov
loopne
gs
adc
xor
xor
inc
cmp
mov
ja
int
fcmovbe
ljmp
dec
sbb
cmp
addr16
inc
shlb
sti
aad
and
sub
xor
cmp
inc
jae
push
xchg
xchg
xchg
push
inc
mov
shl
fucom
in
loopne
loopne
loope
cmp
insl
adc
arpl
dec
adc
js
jne
xchg
loopne
loopne
loopne
sub
in
popf
pop
adc
pop
and
sub
jae
jge
test
xchg
shlb
addr16
lock
clc
inc
and
sub
jne
cmp
arpl
jl
mov
mov
in
clc
rolb
sti
dec
pop
push
shrb
lock
nop
loopne
loopne
xor
sbb
cmp
outsl
mov
xchg
ds
pop
bound
sahf
mov
loope
sub
xor
fnclex
leave
in
out
addr16
addr16
add
push
add
mov
fcmovu
cmp
inc
loope
addr16
inc
pop
jne
orb
movsl
mov
rcrl
shlb
addr16
stc
nop
scas
sbb
and
js
xchg
push
test
jg
js
imull
mov
or
aas
imul
xchg
in
in
cmpsl
sbb
xor
test
or
popa
data16
dec
testl
mov
or
cmc
inc
jmp
frstor
jge
cltd
addr16
les
fidivrl
push
mov
mov
lock
loopne,pt
xor
ja
mov
sahf
cmp
ds
pop
jne
inc
in
jnp
ja
test
shl
out
xor
dec
imul
mov
adc
sub
cmpsl
add
imulb
or
pop
inc
xchg
push
xchg
data16
xchg
lock
mov
mov
std
cli
mov
ds
sbb
xor
inc
dec
sbbl
es
cmp
jge
movl
dec
clc
mov
xchg
sbb
xor
mov
push
xchg
jp
inc
xchg
jmp
dec
insl
fidivrl
ljmp
dec
std
pop
sbbl
dec
cmpsl
in
in
in
in
in
and
or
sbb
jbe
addr16
mov
fbstp
push
scas
jne
pushf
cli
lcall
or
push
std
adc
sbb
push
sbb
add
xchg
or
clc
shll
xor
jmp
push
mov
test
push
xchg
jmp
sti
or
xor
jmp
fiaddl
push
cli
arpl
addb
mov
ficoml
mov
mov
add
pop
test
sbb
mov
pushf
pusha
add
sub
sub
adc
out
int
dec
dec
or
and
add
push
cmovnp
or
adc
les
or
adc
xchg
adc
sub
or
adc
push
adc
xchg
rcrb
or
pop
pushf
push
lods
shl
xchg
les
push
int
je,pn
js
adc
lods
mov
pop
pusha
push
jb,pn
popa
je
or
dec
push
xchg
xor
inc
push
cs
fnstenv
adc
mov
ljmp
arpl
push
lds
enter
incb
sbb
in
shr
fstl
jmp
cltd
push
mov
mov
adc
shlb
sbb
lods
sub
pop
push
call
sarl
cmp
push
mov
call
fiaddl
sbb
js
mov
pushf
push
mov
mov
add
mov
enter
push
fistl
les
enter
int3
sub
sbb
adc
popf
pop
aam
loopne
fcom
in
fdivrl
call
lahf
pop
in
lock
xchg
hlt
pop
in
sub
sbb
adc
imul
mov
in
sbb
mov
pop
cmp
or
sbb
rcrl
sbb
and
pop
sbb
sub
and
xor
sub
cmp
mov
xchg
cmp
xor
inc
sbb
adc
cmp
inc
rorl
sub
dec
adc
dec
cmp
push
rcrl
pusha
mov
mov
push
jo
pusha
sub
adc
cmp
roll
sbb
lahf
pop
js
mov
subb
sbb
cmp
nop
sub
lahf
pop
cwtl
cmp
mov
adc
cmp
mov
fcomps
mov
fcompl
mov
push
pop
insb
test
movsb
sbb
mov
mov
stos
imul
cmp
hlt
ret
test
jmp
enter
xchg
clc
mov
sbb
push
xchg
fmuls
out
push
mov
fstpt
loopne
or
mov
or
add
cmp
push
test
test
je
mov
mov
movb
dec
pop
adc
push
adc
jp
push
sbb
sub
add
cmc
mov
pushf
movsbl
or
push
push
push
or
push
insl
js
mov
fistl
pop
pop
test
jmp
push
setne
mov
call
pop
fsubp
lock
rcr
repz
add
mov
lret
stos
dec
mov
cli
jle
push
add
stos
call
push
mov
inc
imul
aaa
mov
mov
add
and
add
ljmp
and
xchg
mov
pop
adc
out
pushf
stc
xor
sub
bound
push
pop
enter
lret
add
sbbl
mov
adc
add
test
pop
aad
loopne
aam
jae
lahf
pop
pop
ret
push
js
mov
push
push
adc
mov
sub
rcll
xchg
call
enter
jle
fistl
pop
add
call
adc
cld
addr16
push
and
pop
sarl
cmp
or
xchg
sub
lret
adc
mov
adc
xchg
std
or
pop
mov
mov
cltd
and
scas
not
jp
in
mov
sbb
call
test
leave
push
fwait
aad
fstpt
dec
or
cmp
ret
xchg
mov
mov
dec
out
xor
jle
xor
add
mov
cmp
lock
cmp
push
xor
dec
pop
jno
pop
data16
mov
mov
je
in
dec
push
jne
xor
mov
arpl
pop
jae
jl
mov
mov
and
sbb
mov
mov
jecxz
or
das
cmp
or
shr
fsubl
adc
cmp
in
xchg
xchg
or
aas
movw
mov
jg
xor
nop
repnz
call
adc
jecxz
pop
xchg
inc
and
lcall
jae
lret
pushf
lods
in
push
sbb
push
add
push
cwtl
pop
xor
call
cld
stos
sbb
fcompl
mov
or
fwait
addb
mov
push
sub
ud0
inc
xchg
test
jg
ljmp
call
cmp
icebp
leave
jg
or
pop
pop
or
and
call
mov
xor
mov
mov
clc
push
sub
pop
leave
test
add
and
call
mov
ds
mov
jne
mov
mov
sbb
aad
loope
and
movsl
call
xchg
mov
mov
in
dec
mov
out
leave
lret
mov
in
xor
cmp
aaa
rolb
sarl
aaa
mov
mov
xchg
call
sbb
pop
loope
xchg
pop
rclb
std
or
das
inc
aas
imul
adc
push
jns
push
ljmp
sub
leave
jo
lods
cmp
mov
mov
mov
lcall
mov
inc
mov
test
rcrl
push
mov
cmp
decl
dec
fdiv
nop
mov
add
enter
mov
mov
popf
shrl
mov
cmp
or
in
lea
sbb
or
pop
pop
pop
rclb
cmp
pop
xchg
inc
inc
and
inc
call
adc
xchg
es
xor
sbb
and
or
ss
test
pop
fucomp
dec
cmp
push
aaa
loope
sbb
mov
out
xor
pop
call
mov
in
mov
test
pop
std
inc
dec
shl
stos
sub
dec
inc
or
push
call
test
cld
mov
jp
test
xor
inc
or
mov
pop
pop
adc
mov
jl
enter
aad
sbb
mov
cld
mov
inc
push
loop
fisttps
or
enter
lret
subb
xchg
je
js
pop
mov
jne
mov
mov
mov
mov
mov
mov
push
loope
fwait
aad
lds
xor
xorb
sub
sub
mov
cmp
out
dec
cld
sarb
or
cmpsl
mov
pop
ret
nop
sbb
mov
mov
push
mov
push
outsb
pop
loope
ljmp
or
xchg
je
fsubr
xor
jmp
cmp
cltd
pop
sub
sub
pop
in
cmp
push
inc
add
jg
outsl
push
mov
xor
add
mov
jmp
lahf
popf
std
inc
adc
pop
dec
cld
rcrb
cltd
xor
jns
xorps
xor
inc
dec
cmp
or
test
xor
inc
or
cmpsl
loope
pop
mov
push
fcomip
gs
rolb
adc
add
cltd
jl
clc
mov
dec
mov
dec
adc
push
iret
push
push
out
test
pop
mov
pop
mov
es
or
push
mov
xchg
dec
xchg
mov
stc
xor
iret
xor
mov
shl
push
or
push
adc
push
cmp
and
mov
shrl
leave
fmull
sbb
je
cmpsb
sbb
or
lret
lock
lea
and
cmp
incl
xchg
cmp
ds
jbe
cld
push
jmp
xchg
mov
div
popf
mov
sub
push
cmp
sbb
cmc
jne
faddl
adcl
cmp
repz
stos
and
inc
shlb
xchg
repz
jmp
mov
cmp
icebp
pop
gs
cld
cli
push
adc
cmp
adc
sub
fists
mov
data16
or
add
xchg
cmp
or
ficoms
xor
mov
or
call
xor
hlt
add
sbb
fidivrs
pop
mov
push
scas
xor
lods
shlb
aam
adc
jge
dec
mov
cmc
push
xor
mov
jno
add
mov
and
scas
imul
fldpi
sbb
sub
pop
dec
or
sbbl
cmp
adcl
pop
push
sub
mov
mov
or
call
and
rorl
shr
rep
in
dec
loope
lds
xchg
sub
cmp
fsubs
test
xor
xchg
add
sub
cmp
mov
lods
fstl
cmp
call
pop
pop
fs
or
add
or
add
adc
push
push
mov
xor
xor
loop
test
pop
xor
rclb
mov
sbb
cmp
outsb
sbb
add
dec
mov
mov
ljmp
jne
sub
adc
cmc
data16
pop
stos
pop
mov
cli
add
orb
lret
inc
pop
test
adc
bnd
or
in
repnz
sbb
stos
mul
adc
push
or
sbb
dec
mov
mov
and
mov
arpl
sub
sbb
push
lds
nop
incl
rorb
sub
fcompl
xor
xor
pop
mov
add
call
sbb
pop
int3
push
add
jl
enter
sub
das
int3
scas
push
cmpsl
in
mov
sub
stc
xor
xor
add
cwtl
sar
adc
adc
aas
adcl
cmp
stos
in
fwait
iret
lea
sbb
out
cmc
andl
push
loope
and
pop
sub
pop
mov
cmp
inc
xor
jl
stc
cmp
aas
mov
sbb
lahf
cmp
jp
xchg
pop
sub
das
adc
and
push
push
inc
xor
adc
call
inc
pop
mov
add
sub
or
mov
mov
cmp
pop
sbb
sbb
push
mov
adc
aam
sub
out
out
gs
das
push
daa
shll
pop
mov
mov
ret
push
test
sbb
sti
jae
mov
xchg
jl
jp
xor
dec
orl
stos
insl
add
scas
shrb
sub
cmp
out
imul
sbb
lret
addl
lcall
jne
pop
mov
or
lock
jmp
inc
ss
and
pop
pop
test
or
or
mov
xor
mov
push
push
cs
mov
adc
jae
pop
lcall
ficompl
adc
and
rcrb
stos
test
jne
mov
test
leave
je
aam
jle
inc
pop
cltd
pop
call
orb
mov
out
and
cmpl
test
add
sbb
aad
add
inc
leave
xlat
push
push
push
push
jge
ret
fidivrs
icebp
cmpsl
test
clc
push
or
mov
movsb
shrl
cmpl
call
add
ds
int
jae
add
sub
and
inc
lcall
mov
ficoms
add
cmpsl
push
push
cmpl
scas
sub
mov
cmp
cld
push
dec
fiaddl
divb
cmp
lahf
mov
jge
sub
pcmpeqb
push
pop
sbb
cmc
lea
rorl
movsb
sub
movb
push
call
lret
popa
hlt
inc
mov
fsubrl
popf
gs
cmp
inc
sbb
mov
pop
pop
or
mov
inc
sbb
or
push
stos
shr
pop
xor
dec
cmp
sbb
sbb
inc
lcall
or
js
dec
mov
pop
jno
jb
push
xchg
mov
jo
sbb
xlat
sub
stc
rolb
push
and
pop
mov
mov
repz
or
push
adc
call
sub
and
call
pop
xor
add
call
addb
cltd
mov
dec
movsb
cmp
mov
mov
lock
push
dec
pop
fisttps
xchg
push
dec
hlt
push
int3
mov
aas
adc
scas
dec
sub
cmp
popf
mov
push
mov
dec
cli
inc
sbb
fistpll
roll
loope
fisubrs
or
mov
add
add
out
sbb
ret
cmp
je
dec
and
xor
xchg
cmp
sub
imul
mov
shlb
xchg
jmp
sti
or
jns
or
mov
stc
xchg
in
nop
jge
shll
xor
sbb
lods
sub
cmc
dec
test
adc
scas
add
sub
push
mov
cmp
je
mov
int3
into
adc
sbb
movsl
mov
mov
pop
mov
fmull
or
out
mov
xchg
or
mov
in
cwtl
mov
cmc
pushf
xchg
mov
adc
and
mov
jmp
pusha
mov
fldt
sub
popf
cmp
dec
aas
jp
cmp
inc
adc
pop
adc
xor
or
and
insb
sub
push
aas
mov
or
sub
inc
cld
xchg
xor
mov
mov
dec
xchg
cmp
mov
into
sbb
shlb
psubsb
dec
pop
pop
rclb
std
pop
add
ss
lea
stos
and
js
adc
shl
push
fsubrl
jl
mov
mov
ljmp
jne
lret
stos
add
push
insl
out
and
call
xor
cmp
fildll
cwtl
into
in
cmp
in
std
cmp
pop
ljmp
add
mov
inc
xlat
mov
dec
adc
lods
push
movsb
cmpsl
jge
push
sahf
sbb
fcomps
mov
ror
enter
daa
enter
jge
fcoms
pop
add
fld
out
scas
popf
stc
lret
dec
lock
ret
cmp
stc
ss
andb
jae
mov
xor
and
xor
mov
add
out
sub
outsl
mov
pop
and
mov
fcompl
loopne
jne
or
push
lea
xorb
dec
and
add
adc
sti
inc
arpl
ret
jae
ficomps
push
mov
pop
inc
and
outsb
inc
clc
xor
mov
dec
or
xchg
int
stos
sbb
sbb
fimull
lahf
popf
mov
push
mov
xlat
mov
fstl
stos
push
or
lcall
xor
cwtl
xchg
inc
or
push
mov
aad
sub
orl
roll
pop
int
mov
pop
pop
fsubs
mov
jecxz
push
roll
xchg
or
cwtl
dec
pop
ret
shrl
push
cmpsl
inc
push
imul
lea
mov
jg
pop
push
pop
and
dec
shl
mov
les
push
outsb
sub
add
rolb
pushf
int3
jbe
add
xor
lea
mov
cmp
add
or
push
scas
push
add
mov
stos
hlt
rol
sbb
dec
jecxz
lods
test
jecxz
stos
lds
xor
sbb
iret
call
push
or
dec
rolb
cmp
pop
lds
clc
add
lods
or
mov
xchg
xor
pop
xchg
addb
pop
or
pushf
popa
inc
or
mov
stos
or
inc
andb
mov
add
hlt
lea
rol
push
cmc
mov
ret
rorb
out
pushf
pop
push
int3
lods
mov
repz
outsl
imul
mov
sbb
out
ja,pt
shl
adc
roll
hlt
mov
mov
pop
push
mov
push
mov
lcall
call
stos
cmp
pop
lea
scas
ja
add
add
cmp
js
xor
add
dec
add
add
add
add
inc
add
add
jo
add
inc
add
add
add
add
add
xor
add
add
add
add
add
add
inc
add
add
add
dec
inc
add
add
push
push
add
jns
dec
add
add
add
add
jns
add
add
add
pop
add
add
add
add
add
add
push
add
add
inc
add
add
inc
add
inc
add
inc
add
add
add
add
add
je
add
add
pop
add
js
jo
add
add
push
pop
add
add
add
add
push
dec
add
add
add
dec
add
jb
add
add
jne
add
push
add
add
add
add
add
jp
push
insl
add
bound
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
push
inc
add
add
add
add
add
jne
add
ja
add
add
add
add
add
add
add
add
add
add
add
insl
dec
add
add
jp
dec
add
jb
add
add
add
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
push
add
add
add
bound
add
jmp
push
xchg
cmp
xor
xor
ds
pop
pop
aas
stos
push
ret
in
popf
add
mov
clc
dec
sarb
push
into
cli
add
dec
push
mov
jne
adc
rcrl
fdivs
mov
sbb
pop
cmp
push
mov
hlt
pop
mov
flds
scas
jmp
gs
aaa
fidivl
or
push
adc
push
add
mov
push
cmc
mov
ljmp
or
les
add
in
jno
and
cmp
or
inc
int3
pop
repz
outsl
sbb
or
lock
sbb
add
sbb
sub
test
dec
lock
into
add
or
stos
sbb
sbb
cld
std
fstpt
and
jno
pop
adc
lock
lret
pusha
std
adc
bswap
js
adc
ss
notb
loope
iret
fldt
adc
test
sbb
and
mov
add
mov
adc
cmp
loop
adc
ljmp
in
mov
add
xchg
pop
add
orb
fldt
adc
push
shlb
xor
sbb
mov
cmp
push
adc
jg
sahf
mov
aad
stos
andl
push
jnp
lock
inc
fisttpll
fcompl
add
loopne
movsl
xchg
add
push
aas
loopne
mov
jle
shlb
or
in
lret
fdivl
rolb
daa
repz
fdivs
adc
stos
jge
movsl
in
or
and
ret
pusha
xchg
xor
adc
add
fcoms
loope
adcl
pop
add
mov
push
adc
xchg
in
test
jo
cs
push
addb
push
push
or
or
hlt
xor
mov
mov
inc
shlb
mov
rorl
or
add
test
mov
imul
in
jmp
jb
push
jnp
sbb
sbb
xor
cltd
in
xchg
jecxz
or
dec
mov
or
cwtl
andb
push
cmp
dec
sbb
pop
add
fnstsw
xor
jbe
mov
clc
cmp
push
push
in
push
push
mov
cmc
mov
and
push
mov
fisttps
adc
mov
jle
adc
mov
repz
iret
sbb
mov
lods
sub
test
neg
ds
and
cmp
jg
lahf
test
jecxz
mov
cmp
xor
pop
or
adc
pop
mov
cld
push
mov
cmp
xchg
jp
test
aam
cmpsb
cld
shlb
xor
adc
mov
push
mov
mov
inc
in
mov
fldt
fwait
lahf
hlt
pop
pushl
mov
xchg
repz
push
lea
lock
pop
sub
stos
xchg
push
cli
adc
push
adc
leave
adc
inc
outsl
and
ljmp
cmp
or
push
mov
and
mov
xor
roll
or
xchg
sahf
jle
and
and
call
fistpl
pop
cmpsl
lret
jns
push
mov
out
out
stos
cmp
cmp
mov
or
shlb
pop
adc
inc
or
lods
fwait
inc
pushf
insl
gs
push
xchg
pop
inc
jns
repnz
gs
jne
and
pop
test
fdivl
lret
sbb
cmpsb
mov
inc
lea
popf
jns
stos
or
push
sub
aad
iret
mov
mov
xchg
mov
inc
mov
adc
jge
mov
adc
inc
jg
mov
fisubrl
daa
popf
lods
cmpb
int
pop
popf
add
jno
mov
sbb
push
push
or
fistpl
imul
and
loopne
cmp
pop
jl
pop
or
or
mov
bound
jbe
xchg
int
lret
push
adc
js
cmpsl
push
or
mov
xor
fmull
aam
pushf
std
lods
or
mov
cmp
dec
mov
add
sub
push
mov
jge
jmp
ljmp
jne
sti
push
xchg
push
pop
push
mov
aas
dec
push
jle
movsb
call
out
dec
popf
sbb
pop
adc
xchg
shlb
adc
mov
mov
jnp
inc
pop
xor
mov
hlt
push
call
push
push
pusha
sub
xor
jbe
cmp
lea
enter
mov
outsb
adc
scas
nop
dec
pop
call
ret
cmp
or
adc
sub
popf
jno
xchg
test
aam
push
pop
jmp
mov
mov
das
mov
push
mov
stos
rolb
rorb
inc
in
add
adc
outsl
push
mov
test
jecxz
push
in
push
adc
or
sub
jg
and
clc
sub
pop
jns
in
test
je
push
repz
shr
outsl
pop
or
imul
insb
call
daa
xor
fistpll
cwtl
or
xchg
int3
or
mov
pushf
fstps
xchg
pop
test
sub
inc
aad
mov
nop
movsl
push
shlb
mov
jnp
pop
xor
arpl
push
mov
push
xor
cmp
lock
xchg
sub
test
fildl
fisubl
sti
mov
std
dec
adc
and
lea
lret
jle
shll
or
test
push
xchg
shlb
push
push
add
fldl
fcompl
mov
push
adc
hlt
mov
test
xchg
xchg
cmp
add
mov
xchg
inc
js
mov
mov
mov
pusha
sbb
incl
pushf
pop
or
cmp
subl
pusha
adc
mov
xor
ss
push
add
lea
sbb
adc
push
cmp
inc
test
cmp
jl
je
pop
fs
ljmp
inc
subb
mov
xor
push
sbb
mov
je
xor
rcrl
shlb
ss
push
mov
or
pop
xor
pop
jbe
loop
jnp
or
sahf
sarl
and
sbb
in
push
mov
cld
sarl
push
or
xchg
nop
mov
movq
lret
lcall
lea
stc
ret
cmp
add
mov
sbb
movsl
aam
or
dec
jne
and
inc
and
pop
mov
mov
lret
pop
addl
icebp
in
inc
push
cld
scas
dec
divb
bnd
ficoml
push
mov
xlat
idivb
inc
jp
inc
sahf
pop
pop
add
push
push
adc
or
push
loope
out
cmp
mov
dec
in
jmp
inc
mov
jae
mov
dec
ljmp
dec
out
dec
mov
cmp
nop
pop
mull
xor
push
pop
ret
pop
in
add
ds
je
mov
or
push
mov
or
pop
dec
leave
sub
in
fisttps
jne
or
inc
push
xor
and
shrb
cmp
push
or
dec
ret
mov
jmp
inc
cltd
adcb
or
pop
pop
pop
mov
push
es
scas
push
dec
test
push
or
and
push
sub
push
dec
lret
sub
mov
dec
adc
push
mov
inc
or
out
or
cmpsb
cmovp
cmp
xchg
mov
icebp
push
outsl
mov
outsl
pop
jno
mov
sub
push
imul
mov
or
cli
add
ret
outsl
pop
sbb
xor
sbb
pop
sbb
into
mov
testl
sbb
cmp
out
jb
inc
pop
add
repz
imul
mov
or
jb
icebp
or
roll
cmp
jae
pop
mov
jecxz
movsb
xchg
jae
arpl
push
push
call
xor
xor
lds
decl
mov
mov
arpl
pop
sub
cmp
cmpsl
orb
in
movsl
ljmp
jecxz
fsubs
imul
cmc
stos
pop
sub
data16
mov
dec
xor
mull
mov
mov
mov
call
push
les
cmp
inc
jl
scas
sbb
mov
xchg
inc
aam
into
dec
cmp
sbb
call
xor
cltd
jb
or
jge
cld
xchg
call
or
insl
dec
pop
mov
xor
shll
or
popa
nop
mov
sbb
shl
mov
cmp
je
mov
ss
repz
ret
add
or
aaa
sub
dec
repz
addr16
insb
out
fidivl
loop
je
fidivl
push
add
mov
jne
jo
jno
cmp
je
incb
jp
push
push
push
sub
aad
inc
hlt
xor
call
pop
fsts
pop
orl
or
int
adc
xchg
sub
push
cmp
cmp
je
push
mov
sub
cli
sbb
jne
das
mov
jmp
imull
lock
xor
jmp
sub
shlb
push
popf
ds
leave
inc
and
fsubrl
popf
lea
mov
je
arpl
popf
and
push
rolb
jne
or
das
pushf
add
scas
pop
or
adc
aaa
push
lret
sub
mov
pushf
movl
cmpl
hlt
xchg
call
nop
or
jae
sbb
xchg
inc
stc
iret
push
and
or
inc
das
add
pop
test
xchg
xor
add
jmp
xor
or
pushf
shr
aas
xchg
sub
cmp
mov
push
push
into
push
idivl
mov
mov
ja
add
loop
add
or
icebp
fnstenv
push
fisttpll
fstps
adc
push
jae
mov
adc
cmp
sub
ret
and
out
repz
aas
xchg
xor
xchg
push
push
in
idiv
push
negb
lods
push
mov
and
push
mov
bound
or
ret
divl
test
cmp
push
inc
pop
inc
xor
pop
insb
mov
fnstcw
lock
mov
pop
imul
mov
roll
dec
or
dec
pop
push
cmp
shlb
dec
icebp
insl
pushf
or
cvtps2pd
xchg
pop
pop
cmp
fs
jno
subb
pop
leave
pop
pop
shll
fs
stos
push
popf
pop
je
loopne
lock
pop
insb
mov
shll
je
stos
cwtl
sub
fnsave
push
pusha
pusha
pushf
pop
popf
mov
pop
mov
test
lods
pop
mov
mov
stc
jae
shrb
or
stos
mov
pop
mov
mov
popf
pop
les
or
mov
std
mov
repnz
or
xchg
rcrb
xor
notb
cmp
enter
int3
jge
xor
add
cmpb
jge
cmp
pop
pop
jl
jge
add
stos
test
nop
adc
mov
or
rorw
arpl
cmc
pop
fidivl
or
add
dec
arpl
or
xor
dec
sub
cmp
pop
push
dec
fwait
mov
sub
pop
add
push
mov
mov
jne
mov
xchg
jmp
jnp
je
fnstsw
mov
lock
and
icebp
jp
add
cmp
mov
pop
push
pop
xchg
lret
or
hlt
adc
pop
es
aad
test
jmp
jne,pt
scas
movb
mov
add
out
xor
push
rcl
dec
push
adc
add
sbb
mov
sbb
sub
sub
mov
jns
mov
hlt
xchg
sbb
push
or
mov
xchg
fistl
pop
shrl
ret
fldl2e
popf
push
mov
sbb
jg
bound
mov
or
jmp
repnz
push
pop
in
pushf
ficoml
sti
pushf
jne
ds
mov
test
sarl
cld
jb
ror
pop
jmp
addr16
insl
push
jo
add
lock
cmp
shll
or
das
dec
push
arpl
enter
mov
out
fidivl
pop
dec
into
mov
xor
dec
loopne
xor
stos
add
or
sub
enter
add
mov
int3
arpl
jmp
test
fidivrl
in
sbb
mov
push
pop
sti
cmpsb
shlb
js
mov
insb
add
xchg
jle
push
mov
mov
cmp
dec
in
jae
fisubrs
call
dec
mov
xor
adc
es
sub
inc
adcl
jecxz
fwait
xor
pop
jb
ret
sahf
mov
and
xchg
lods
test
pop
mov
ret
sbb
in
mov
cmp
test
cmp
popa
and
fstpt
testb
cmp
cmc
xor
aaa
loopne
xchg
mov
pop
shl
cmpsb
shr
dec
mov
mov
push
xor
or
or
mov
call
addr16
xlat
test
add
lds
push
add
dec
mov
xor
pop
add
mov
mov
fstpt
test
stc
sub
fwait
iret
push
inc
xchg
or
xchg
push
movsl
fsubl
mov
inc
call
movsb
add
sbb
lcall
inc
popa
or
test
dec
adc
das
sbb
out
sub
adc
in
ficompl
in
add
adc
shrl
push
imul
sbb
mov
adc
pop
pop
or
out
mov
mov
imul
pop
mov
addr16
sub
test
and
in
add
int3
ficompl
ss
xor
and
jmp
mov
data16
subb
inc
lret
mov
add
cwtl
lds
sbb
xchg
nop
push
popa
cli
inc
cmp
je
aas
mov
rclb
inc
sub
movb
mov
out
xchg
imul
adc
mov
push
or
mov
sbb
push
xchg
add
orb
fistl
cmc
mov
mov
xchg
inc
push
inc
mov
add
test
xor
xchg
mov
movsb
addb
daa
popf
push
out
in
dec
das
nop
jmp
and
jnp
aam
and
cmp
inc
add
imul
sub
mov
push
cmpsl
or
loop
mov
jl
mov
and
call
ret
jmp
out
sahf
pop
fildll
sub
ret
test
inc
push
push
jge
cmpsl
movl
mov
push
push
les
icebp
adc
sub
mov
adc
push
inc
cmc
inc
orl
pop
icebp
fwait
aaa
push
dec
push
mov
leave
into
repnz
xor
cmpsl
mov
nop
add
in
vpmacswd
fdivl
nop
add
fs
test
xor
repz
mov
fs
movsb
aam
cwtl
jb
in
mov
jl
lods
xchg
daa
stos
lret
popf
xlat
mov
mov
mov
push
sub
popf
and
sbb
test
or
ret
dec
xchg
lods
xlat
inc
not
lods
mov
fs
roll
or
jmp
cmp
jae
dec
sahf
icebp
mov
push
fidivl
push
push
mov
or
int3
adc
xor
in
jbe
cmp
sbb
lret
xchg
sahf
add
jg
stos
and
cmp
cld
je
cmp
push
adcl
std
xchg
movl
sub
mov
shll
stos
aam
adc
mov
aad
mov
jb
lea
mov
hlt
sub
in
lea
xor
test
sub
pop
xchg
cmpb
sbb
lahf
cmpsb
hlt
jge
cli
xor
push
mov
add
test
add
sub
mov
es
rcr
inc
adc
inc
test
adc
ja
mov
les
lea
fstl
add
lds
xor
aaa
decb
sbb
decl
mov
pop
sub
inc
out
clc
mov
mov
mov
loope
in
fdiv
mov
cmp
sub
push
out
mov
lea
add
or
adc
and
cmc
ror
xor
and
inc
cmp
outsl
std
inc
cltd
cmp
jnp
std
xchg
lcall
and
cmp
je
push
push
mov
xor
arpl
jl
cmp
aas
jne
inc
movsb
sti
jle
push
cmp
je
or
xor
adc
cmp
sub
sbb
mov
jo
les
fistpll
les
into
pop
xor
fildll
push
xchg
dec
push
mov
sbb
inc
das
in
pop
inc
push
scas
sub
int
jecxz
adc
incl
cmp
dec
mov
imul
dec
jne
test
shll
cmpsl
or
int3
inc
cli
es
xor
cmp
idivb
shrl
fldcw
lods
mov
addb
push
mov
les
stc
nop
xchg
je
jge
cmp
and
inc
xchg
lret
js
jg
fdiv
ret
lea
dec
dec
ds
loopne
add
pushf
fdivl
sbb
push
xor
push
cmp
ja
jmp
lret
jns
push
outsb
in
xor
fstpl
or
push
fwait
push
aaa
loope
les
mov
jecxz
push
sbb
divl
sti
popf
cmp
xor
inc
or
mov
test
daa
cmp
sub
hlt
dec
mov
inc
and
fdivrl
cmp
mov
dec
movsl
mov
loop
lcall
jb
xchg
arpl
fwait
lcall
les
sub
sbb
call
lock
setnp
lock
cmp
movswl
and
or
test
les
lret
int
sbb
inc
cmp
mov
testl
out
mov
add
adcb
in
movsb
fbstp
push
push
mov
fwait
mov
shlb
mov
push
mov
mov
jb
jmp
mov
fnstcw
jge
adc
dec
dec
push
cmp
sbb
push
insb
mov
sarb
jbe
mov
or
pop
cmp
sbb
cmc
adc
jecxz
adc
notb
hlt
movsb
loopne
xchg
and
cmp
jb
mov
shrl
push
push
lretw
and
push
das
mov
adc
loopne
jmp
js
mov
jmp
sub
clc
ret
pop
pusha
loopne
pop
cmp
imulb
rcll
mov
fmuls
mov
and
call
aad
inc
push
or
xchg
clc
mov
sub
movsl
add
cmp
data16
ja
jmp
aas
inc
or
mov
jns
mov
inc
pop
jb
xor
sub
dec
sub
cli
fsubrl
push
sub
cmp
dec
movsb
sbb
add
push
pop
cmc
aam
aad
dec
cmp
pop
and
lock
jo
inc
cmp
push
sub
fs
mov
std
pop
sbbl
xchg
or
std
lock
mov
push
stos
pop
into
ds
in
popf
sbb
sbb
push
push
lea
jecxz
ja
push
lds
sbb
sub
fists
lods
mov
push
jge
mov
xchg
sub
jmp
xchg
fsubr
test
mov
lcall
or
stc
jge
jmp
in
push
test
iret
xor
cmp
daa
mov
rclb
repnz
push
mov
xorb
iret
mov
shlb
push
movsl
push
sub
fistl
add
inc
and
inc
mov
aam
addl
fsubrl
jbe
sub
add
mov
mov
movsb
adc
sub
imul
push
or
out
sti
push
scas
xor
addl
push
hlt
ljmp
mov
repnz
inc
or
xor
mov
pop
call
enter
js
mov
cld
jne
and
cmp
lds
je
icebp
iret
sub
and
stc
pop
jne
cmp
test
je
adc
push
rcrb
or
cmp
inc
xor
ljmp
xchg
aam
insb
add
mov
add
xor
push
cmp
push
mov
rorb
push
or
push
in
sub
sar
adc
cltd
and
lret
rorl
add
pop
dec
push
lock
inc
jle
or
lods
test
testb
mov
lret
mov
mov
adc
mov
cmpb
aam
test
cwtl
cmp
and
in
xor
inc
test
icebp
pop
mov
or
xor
sar
ret
inc
in
mov
aaa
mov
pop
mov
insb
out
inc
inc
imul
push
push
sar
out
les
jp
dec
cltd
in
pop
rolb
add
push
push
shlb
jmp
dec
je
mov
out
pop
in
outsb
dec
pop
popa
mov
inc
sar
sahf
fstpt
dec
nopl
mov
push
mov
pop
push
lret
jmp
xchg
add
jge
dec
mov
ja
out
xor
fsts
add
xor
xor
mov
xor
cmp
jmp
mov
sub
aaa
xchg
out
adc
into
or
repz
sub
rcr
mov
cmp
xor
xlat
hlt
add
xchg
pop
outsl
test
iret
test
ds
insb
pop
inc
nop
inc
shl
call
dec
ficoms
sub
or
call
cmpsl
xor
out
addr16
ss
in
popf
lea
mov
shl
dec
add
int
lods
or
lods
dec
inc
cld
jge
pop
dec
repz
mov
cmp
lahf
adc
mov
pop
jge
add
jnp
lods
sbb
insl
jnp
adc
add
cmp
fistpll
cld
shll
aad
xchg
out
pop
sbb
and
nop
pushf
in
mov
in
sub
ret
and
xchg
adc
enter
ja
mov
add
fiaddl
cmp
jge
xchg
loope
mov
data16
out
mov
jecxz
jb
fs
mov
push
fsubl
clc
cmp
stos
enter
es
js
inc
inc
dec
push
cmp
cmpsb
cmp
or
pop
lea
push
pop
call
pop
mov
movswl
push
call
pop
sbb
popf
fcoms
xlat
lret
popf
xor
movsb
mov
mov
test
loope
rcll
aad
mov
jno
push
xor
gs
cmp
mov
dec
cmp
push
aam
sub
mov
aaa
loope
push
adc
lret
fldl
jb
push
out
or
jmp
negb
add
js
or
push
outsb
stos
imul
test
ret
or
ror
pop
push
rorl
or
or
mov
and
call
movb
push
push
shlb
sub
test
push
inc
ret
push
mov
cmp
addr16
pop
and
cmp
jge
dec
jmp
push
mov
or
adc
push
push
mov
dec
inc
rcr
fcoms
stc
loop
xor
rcrl
cmp
call
clc
pop
and
cmp
js
add
mov
mov
roll
repnz
mov
mov
or
mov
jb
sub
mov
push
xor
nop
or
push
arpl
mov
pushf
dec
mov
cmpsb
xchg
add
movsb
pop
lea
int
pop
push
or
sub
sbb
in
lahf
lods
jecxz
jl
add
fwait
dec
cmp
lock
dec
out
mov
push
push
dec
push
mov
lcall
cwtl
rclb
nop
xchg
int
and
xchg
orb
cmp
pop
cmp
pop
sti
push
insb
out
jmp
rep
adc
loope
xchg
adc
mov
gs
add
cmp
mov
lock
mov
test
mov
sub
daa
xlat
call
lret
add
in
jmp
outsb
push
push
stos
pusha
xchg
adc
into
enter
jo
je
sti
inc
jl
rcrb
xor
push
add
call
lret
sbb
les
lahf
push
int3
stos
sbb
divb
test
lock
sbb
inc
fs
mov
add
sbb
push
adc
fdivl
stos
fldcw
inc
movsb
push
push
lret
xchg
mov
cwtl
mov
xor
stc
mov
mov
jbe
add
mov
xchg
sub
mov
sti
test
sarb
int3
pusha
lods
sub
jo
or
xchg
cmp
loop
jns
je
repz
xor
outsb
or
pop
sub
int3
pusha
mov
in
sbb
js
pop
jl
movsb
insb
inc
dec
inc
fmul
cld
or
pop
sar
rcll
rcl
cmp
ffree
mov
xor
dec
fwait
mov
pop
pop
sbb
or
xor
xor
pushf
bound
mov
xchg
push
loopne
push
dec
repz
jle
push
inc
cmc
or
adc
dec
cmp
lods
das
xchg
mov
xchg
ss
shll
in
push
gs
sbb
outsb
inc
pushf
out
mov
and
pop
jge
fsubrl
push
push
lret
ret
jo
xor
dec
mov
push
fsubrl
dec
mov
repz
xchg
popa
pop
add
inc
loopne
push
dec
icebp
mov
or
fdivs
jno
mov
mov
jge
ds
mov
out
adc
mov
push
mov
push
mov
mov
or
psubsb
int3
sub
leave
popf
call
mov
cmp
call
inc
cmp
pop
cmp
call
add
push
mov
in
or
or
adc
adc
ss
ss
dec
sarb
push
and
leave
int
xor
jo
jle
cmpsb
mov
mov
test
sar
out
mov
gs
imul
lret
les
mov
mov
enter
stos
loope
push
shll
je
jp
popf
lret
insb
das
xor
or
out
cmp
call
mov
push
xor
mov
fs
fsubs
push
push
loop
jne
sbb
stos
icebp
stos
mov
xor
cli
pushf
sub
loope
mov
mov
dec
outsl
xchg
pop
inc
lock
xchg
or
inc
sub
push
push
and
jle
ds
iret
pop
add
in
sbb
and
jge
repz
mov
pushf
adc
xor
xor
dec
sub
or
mov
dec
cmpsb
mov
push
adc
test
clc
pop
add
or
test
inc
pop
lock
fwait
cmp
loopne
or
cmp
js
test
cmp
test
mov
pop
and
pop
mov
test
add
into
and
lea
sub
das
push
dec
nop
pop
push
or
mov
dec
pop
pop
test
sbb
je
ss
mov
sarb
fsubrp
mov
sub
movsl
pushf
call
loopne
leave
sbb
inc
jo
adc
cmp
jns
int
add
jb
and
jbe
ficoml
push
loope
int
mov
push
mov
cmp
pop
inc
test
repnz
call
push
xchg
mov
cs
pop
xor
mov
sub
rol
inc
lods
add
jb
cmpsb
cmc
pop
or
ficompl
call
mov
into
andb
pop
mov
lret
ja
mov
ja
sub
imul
pop
or
ds
out
pop
fildll
movsb
xchg
rclb
decl
mov
adc
enter
cmp
pop
push
push
shrl
dec
mov
into
inc
push
icebp
call
in
jb
inc
and
dec
cmp
lea
mov
mov
cmp
xor
ret
inc
pop
xor
xor
mov
adc
or
cwtl
jae
lea
les
ljmp
dec
mov
push
cmc
sarl
add
adc
cmp
sub
outsl
and
lcall
xor
scas
mov
mov
das
jl
or
enter
mov
add
mov
inc
mov
je
mov
push
shll
cmp
push
xor
mov
icebp
push
pop
daa
stos
pop
inc
dec
jmp
into
call
popf
pop
adc
jp
in
cld
or
daa
add
pop
lods
mov
or
loope
sub
or
mov
mov
add
pop
sub
sar
mov
lahf
mov
sub
daa
or
lcall
call
xchg
lahf
mov
lcall
pop
add
and
xlat
xor
lods
jnp
adc
out
popf
lock
inc
ffree
adc
out
cmpsb
enter
inc
adc
fidivl
call
mov
mov
popa
ret
cmpsl
sbb
jne
add
push
mov
pop
aas
out
jne
cmovp
xor
push
imul
xchg
sar
xlat
mov
test
cmpsb
dec
mov
scas
xor
sub
call
mov
adc
cmpsb
pop
out
inc
jnp
inc
out
ret
pop
dec
sub
push
scas
adc
jne
inc
xor
repz
jae
daa
push
mov
pushf
push
aaa
mov
out
xor
add
add
rcrb
pop
data16
pop
xchg
pop
shl
jecxz
sub
jp
cmp
std
or
mov
mov
dec
push
popa
adc
sub
stc
adc
pop
sub
mov
adcl
sub
mov
daa
mov
sub
pop
mov
in
add
dec
mov
data16
leave
movb
or
out
cmp
inc
fsubl
pop
cmp
sbb
aas
cmp
xor
inc
fadds
ljmp
cmp
mov
hlt
dec
cmp
fldenv
mov
sarl
jge
fisttps
jle
mov
cmpsl
sub
xor
push
fs
lea
or
push
movsb
iret
push
out
addr16
and
mov
sub
out
lret
les
pop
ja
test
inc
aas
pop
mov
xor
test
dec
cmp
pop
fs
jns
push
dec
jl
sbb
inc
mov
sti
out
and
in
push
dec
add
iret
icebp
and
push
mov
inc
in
test
sti
cs
mov
inc
cmp
push
adc
cmp
scas
pop
es
adc
into
mov
loop
jns
inc
lods
cmpsb
xchg
mov
jl
int3
pop
cmpsl
stos
or
test
loop
or
jns
inc
pop
repz
jb
imul
std
loope
sub
out
popf
call
loopne
cltd
mov
lea
mov
jne
xor
and
xorb
xor
add
add
rorl
push
int3
add
aam
rorb
cmp
mov
lret
movsb
dec
dec
xchg
pop
pop
arpl
dec
ret
dec
and
xor
add
je
push
and
or
inc
nop
fstpl
xchg
inc
or
inc
mov
push
int
push
push
in
shl
mov
fbstp
xchg
fidivrs
outsl
lods
inc
jmp
and
sti
cwtl
cmp
inc
jmp
cmp
push
pushf
leave
shll
add
leave
xor
lods
dec
cmp
sbb
pop
or
push
inc
inc
sarb
adc
repz
mov
out
adc
push
mov
scas
mov
test
nop
scas
repz
dec
xor
jae
push
dec
fmull
and
adc
stos
inc
fs
fs
mov
inc
dec
test
mov
or
ficompl
decb
jbe
orl
lods
cmc
push
mov
movsb
lods
cmc
pop
pop
ds
into
pop
add
xor
jl
mov
mov
filds
movsb
cmc
pop
ss
ret
mov
dec
das
adc
dec
adc
xor
or
and
into
xor
loopne
dec
test
inc
test
mov
mov
movsl
fincstp
push
mov
aad
add
push
dec
sbb
dec
or
mov
stos
enter
stos
mov
call
je
or
mov
call
mov
fbstp
sub
push
mov
jecxz
mov
in
pop
ljmp
push
mov
icebp
push
into
scas
adc
push
xchg
jmp
sub
es
lds
fisttpl
in
adc
jb
insb
mov
iret
cmp
sub
push
cmp
scas
jge
in
aaa
or
dec
pop
push
push
daa
cmp
inc
pop
xlat
je
push
add
add
add
add
add
inc
add
bound
add
inc
add
add
arpl
add
data16
add
jbe
add
dec
inc
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
inc
add
add
add
jns
xor
dec
jae
add
add
add
pop
jbe
add
add
add
jne
add
add
add
add
add
add
je
add
add
add
add
add
push
add
add
add
add
bound
add
add
add
add
add
add
add
add
add
add
jne
add
add
data16
add
xor
add
add
add
imul
push
add
add
push
add
add
add
add
add
add
add
add
jae
add
add
add
add
add
add
add
add
add
add
jo
add
push
add
add
arpl
add
add
add
dec
add
inc
add
add
add
jo
add
pop
add
dec
add
add
add
add
add
add
add
xor
add
add
inc
add
push
add
add
bound
add
add
inc
add
inc
add
add
jb
push
imul
jo
add
push
add
add
add
cmp
add
dec
add
bound
add
add
add
insl
push
add
add
push
add
push
add
jo
rol
cmp
push
or
xor
jnp
push
aam
sti
jg
pop
ss
jnp
lahf
pushf
cmp
sbb
aad
jnp
jp
cmp
mov
push
cmp
mov
cmpb
in
ljmp
pop
mov
push
cmp
jne
xchg
jle
inc
addr16
adc
loopne
test
call
push
mov
loope
sahf
mov
and
sub
or
adc
popf
in
inc
mov
negl
cli
inc
or
push
jmp
inc
pushf
mov
lret
push
jl
adc
mov
add
jl
adc
pop
mov
popa
test
aad
xchg
mov
mov
xchg
xor
dec
in
and
fistps
add
or
inc
sub
push
pop
xor
mov
inc
das
sbb
mov
add
lea
cmp
xor
cltd
lea
pushf
xchg
cld
push
stos
icebp
inc
fsubrl
sub
or
xlat
mov
inc
cmp
xor
mov
add
cmp
inc
not
mov
inc
xchg
lds
adc
jg
adc
out
dec
mov
outsb
cmp
popf
push
push
adc
or
or
cwtl
add
adc
sti
or
insl
push
mov
push
inc
pop
xor
sub
cmp
pop
xchg
push
cmpsl
cmp
mov
rcll
cmp
jg
aad
dec
fisttpll
je
adc
dec
cmp
clc
dec
test
adc
sbb
aas
int3
and
or
in
repnz
sbb
adc
decl
in
cwtl
in
jo
adc
or
mov
adc
in
jg
mov
adc
xor
cmpsl
pop
sbb
aas
or
jge
adc
dec
or
cmp
jge
push
xchg
adc
aad
orl
cmp
add
cwtl
sbb
sbb
lret
or
or
cmp
push
jmp
adc
es
stos
add
push
xor
hlt
mov
xor
jno
sti
inc
pop
test
pop
adc
lock
gs
mov
leave
or
cmpsl
fildl
inc
pop
mov
mov
dec
push
mov
push
jmp
and
push
hlt
inc
xchg
sbb
inc
pushf
jne
adc
rclb
rcrb
sbb
cmp
in
lret
mov
and
mov
or
cmp
lds
cmp
jbe
adc
push
inc
divl
inc
push
pop
fldl
pop
popf
cmc
repz
push
lds
jg
add
cmp
hlt
dec
ds
add
je
mov
inc
mov
call
mov
je
and
jne
xchg
push
call
sub
fwait
push
arpl
lcall
cmpb
cmp
cmp
jle
mov
je
jae
pop
sub
popf
sub
loop
fwait
jnp
xchg
mov
mov
mov
popf
inc
out
sbb
jl
adc
inc
test
clc
aas
and
setb
divl
jl
jge
adc
push
adc
or
xchg
pop
or
adc
xorb
pop
mov
mov
pop
sub
and
divl
dec
insb
push
or
ds
test
out
or
lea
decl
adc
js
mov
insb
idivb
jecxz
push
popa
out
sub
outsb
outsl
fs
pop
jb
mov
lds
xsha256
cmpsb
aam
mov
push
mov
xchg
or
jmp
mov
add
sbb
and
fwait
xchg
enter
insb
and
xchg
dec
cmp
xchg
jmp
mov
loope
lret
sbb
xor
cmpsl
pop
inc
sbb
popl
ucomiss
sub
stc
sub
xor
xlat
jmp
and
js
je
lea
inc
adc
ss
push
xor
test
out
push
mov
adc
cmp
pop
adc
cmp
adc
sbb
xor
xchg
sub
push
in
push
adc
outsl
adcb
lock
and
lret
push
popf
mov
xor
cmp
pushf
cs
popa
or
ror
sub
sbbb
dec
inc
xorb
arpl
rcll
xchg
or
leave
mov
sbb
imul
push
cmp
xor
loope
inc
xchg
cmp
xchg
sbb
push
addr16
fstpl
adc
mov
aas
pop
xor
pushf
adc
lret
dec
and
jne
adcl
in
ljmp
sub
mov
test
xchg
xor
pop
push
out
push
jg
push
sbb
inc
call
lea
nop
adc
sub
adc
xor
lock
adc
pop
pop
or
loope
cld
insl
cmpsb
out
mov
je
aaa
lea
ficomps
xchg
pop
pop
adc
cmp
and
dec
idivl
fdivl
adc
jo
and
inc
pop
fs
dec
jnp
jno
sahf
inc
xchg
lea
stos
addr16
fsts
mov
pushf
or
std
xor
test
sub
ret
or
add
cmp
iret
lds
push
inc
adc
mov
lods
xor
add
jmp
test
enter
outsb
mov
iret
test
insl
mov
push
and
aas
mov
mov
or
int3
xor
std
cmp
jne
nop
dec
aaa
adc
jbe
out
ret
outsl
daa
lds
pop
push
mov
or
mov
and
icebp
test
idiv
test
pop
sub
push
ljmp
push
cmp
jle
sbb
push
cmpsb
aad
mov
adc
pop
xchg
bound
add
sbb
or
mov
test
inc
adc
pop
adc
mov
aaa
ss
clc
push
pop
and
jmp
sub
cmc
rorl
insb
scas
int
xchg
pop
add
adc
add
rcrb
jo
dec
mov
jl
insb
testl
adc
push
cli
fwait
xor
xor
imul
push
std
gs
sbb
jns
mov
sbb
lea
jmp
mov
dec
mov
jb
mov
in
pop
mov
inc
cmc
or
and
inc
inc
ja
push
cmp
mov
mov
jno
push
out
movsb
mov
push
out
dec
add
adc
xor
in
add
sbbb
das
dec
cmp
mov
cmp
shrl
shll
mov
bound
cmp
mov
and
mov
mov
test
dec
xchg
js
sub
rol
cmp
cmp
add
inc
jnp
cwtl
xor
sub
jge
into
lcall
shr
outsb
stos
addl
cmp
add
lret
cmp
popf
push
xor
sahf
adc
into
cmp
rcr
out
xor
xor
sub
jg
jbe
adc
jmp
adc
test
imul
movsb
test
or
icebp
insb
cmp
jg
cmp
mov
mov
cmp
adc
out
mov
cmpsl
xchg
jo
inc
ret
mov
sbb
xor
rclb
fstp
mov
xchg
adc
fstl
sbb
sbb
btr
lcall
test
call
inc
jg
enter
sub
adc
cmp
jg
xor
or
pop
lcall
jl
adc
jnp
je
dec
jb
pop
aas
jge
xchg
pop
pop
mov
cmp
jno
adc
leave
sub
daa
add
push
or
stos
or
pop
inc
lock
fdivrl
jns
jl
push
imul
fcmovb
lea
and
mov
pop
ret
rclb
push
stc
aas
sub
jbe
cmp
hlt
sbb
repz
out
sub
ds
jle
xchg
test
inc
inc
out
jo
ret
daa
adc
call
push
adc
xchg
and
jl
or
lock
ja
mov
or
rep
test
xor
outsb
or
add
lret
stos
or
push
xchg
adc
mov
xchg
pop
jbe
fucomi
jge
cmp
sub
movsw
or
pop
mov
mov
sbb
ret
loope
outsb
jp
add
inc
jns
sbb
shll
sbb
push
push
call
movsb
rorl
push
cmp
aad
insb
insl
mov
js
cmp
jl
test
or
jge
lods
mov
sbb
cli
into
mov
sbb
sub
sar
or
dec
inc
out
pop
leave
push
call
mov
arpl
mov
icebp
div
jno
dec
adc
mov
test
and
jge
mov
test
mov
repz
and
push
cmp
call
inc
add
mov
mov
scas
pop
stc
imul
fcomip
sti
test
or
call
jo
lods
sub
out
cmpsb
inc
sub
adc
leave
pop
add
mov
push
jl
cld
pop
xor
adc
or
stos
fcoml
insb
inc
add
inc
call
and
sub
in
mov
fistl
xchg
add
add
adc
mov
loopne
or
movsl
mov
stc
cmp
ds
fwait
in
dec
xlat
loop
dec
or
outsb
jg
mov
lea
or
lret
mov
dec
mov
fwait
mov
jbe
xor
movsl
inc
decl
rolb
mov
or
inc
dec
mov
insb
dec
ja
and
pop
xor
sub
loop
or
mov
pop
in
push
or
in
jmp
loop
fcoms
mov
adcb
ja
mov
fwait
in
dec
fcmovnb
out
stc
inc
out
sub
mov
cli
or
movsb
in
push
adc
jae
mov
mov
lea
or
out
decl
repz
cmpsl
test
sub
lcall
shr
shll
add
add
adc
push
or
stos
lcall
sarl
or
push
mov
lods
adc
incb
dec
adc
jnp
jmp
xorb
int3
inc
mov
popf
adc
xor
mov
decb
or
das
sbb
shr
pop
stc
push
mov
inc
sbb
ret
add
inc
push
cmp
or
xchg
roll
enter
push
rcll
adc
mov
int3
inc
cmpsb
sti
jae
in
lret
repz
xor
push
mov
inc
xlat
divl
mov
sub
mov
sub
push
mov
mov
xor
mov
mov
sub
mov
into
cmp
ret
jl
leave
into
sub
cwtl
rorl
sbb
mov
add
mov
into
mov
pop
in
repnz
or
mov
adc
sub
mov
ret
inc
push
ds
jne
push
push
mov
mov
mov
mov
fwait
insb
dec
in
inc
mov
pop
aas
pop
inc
cmp
inc
clc
cmp
mov
repz
fsubr
pop
inc
bswap
lods
jns
push
push
iret
mov
xor
shrb
shll
xor
popa
out
push
mov
lea
push
mov
jne
jmpw
xchg
and
mov
scas
cltd
fcoms
adc
inc
push
inc
shufps
ljmp
mov
sbb
pop
imul
test
adc
inc
outsb
rcrb
or
or
pop
or
mov
fs
inc
jle
repz
cld
movsb
aaa
out
adc
loopne
leave
test
mov
loopne
popf
inc
lret
lods
or
std
loope
cmp
fs
adc
cmpsl
or
lret
mov
xor
xchg
insb
dec
call
sub
fcmove
jmp
outsb
jbe
js
mov
sbb
add
inc
fwait
mov
xchg
or
ss
pop
fcoml
subb
or
push
inc
pop
movsb
lret
shlb
adc
imul
sbbb
not
and
rol
or
add
lea
xlat
mov
hlt
f2xm1
push
shr
jmp
and
add
mov
out
addr16
inc
rcr
mov
shlb
imul
into
or
mov
or
lea
push
mov
cmp
adc
or
jmp
rcll
jmp
icebp
inc
mov
xlat
not
and
cmp
cmp
shrb
lret
jmp
mov
ret
sub
xor
call
ret
adc
push
movsb
out
jg
or
pop
int
into
sub
xor
ret
dec
pop
push
out
rorb
mov
inc
push
popf
daa
or
mov
add
xor
dec
sub
sarl
xor
push
scas
femms
jl
out
mov
xor
sub
addr16
add
add
xchg
inc
leave
sbb
sub
xchg
or
inc
rcl
sbb
mov
stos
and
xchg
and
push
jb
inc
pushf
sub
jecxz
dec
aam
pop
cld
push
ret
and
add
mov
test
stc
cmp
test
jns
test
or
shrl
int
and
xchg
pop
mov
adc
ljmp
subl
call
cmp
mov
sbbb
adc
cwtl
subb
xor
ret
adc
rol
cmp
rcrl
pop
scas
mull
scas
or
outsl
or
fnstcw
popf
push
mov
adc
pusha
insl
movsl
sbb
adc
repnz
mov
cmp
or
sbb
mov
out
hlt
mov
call
lock
arpl
push
cmp
lret
sub
test
and
rorl
js
fidivs
fnstenv
imul
xlat
rcl
fs
mov
and
cmpb
sbb
xchg
jno
std
sahf
xor
mov
int
pushf
call
adc
lock
cmp
or
out
aam
add
inc
mov
inc
cmp
mov
cmp
or
iret
pop
aas
sbb
push
or
sbb
mov
dec
xor
pop
sbb
or
push
push
call
subl
mov
lret
mov
or
pushf
dec
jbe
test
jmp
push
adc
push
testb
sbb
add
outsb
cmp
sti
mov
pop
push
ss
xchg
pop
cs
mov
sarb
sbb
sub
cmpl
adc
xor
xchg
mov
or
push
call
xchg
cmp
jl
test
rorl
sub
pop
pop
cmp
sbb
push
leave
and
into
mov
push
push
adc
stos
ss
out
or
mov
or
jno
pop
push
pop
lods
fnstsw
dec
mov
outsl
imul
cli
insb
jnp
out
shlb
cmc
das
mov
jnp
push
adc
mov
push
test
mov
std
mov
inc
lds
adc
mov
mov
mov
push
cwtl
ret
push
cmpsl
push
sub
incl
dec
rcll
inc
dec
add
push
push
dec
pop
sbb
imul
dec
movsb
imulb
cmp
mov
cmp
push
jo
ret
and
dec
cld
sub
pop
jo
addr16
push
sub
shl
adc
cmp
sub
icebp
ds
xchg
cmp
pop
xor
push
sbb
jo
in
call
jle
mov
shlb
adc
dec
push
cli
js
mov
add
mov
imul
aaa
ret
inc
cmp
lret
inc
and
fwait
xchg
cmp
and
adc
push
loop
ljmp
mov
adc
lret
push
aad
daa
movsl
js
cvtps2pd
sbb
xlat
and
fwait
daa
in
and
inc
sbbl
mov
sbb
iret
push
add
inc
inc
push
push
push
aad
call
rclb
mov
mov
jecxz
test
xchg
daa
cmp
mov
inc
dec
int
fistpll
insb
fistpll
push
repnz
add
mov
clc
mov
sbb
mov
xor
stos
cmc
add
add
clc
push
inc
adc
xor
mov
inc
cmp
ss
sbb
lods
xchg
sbb
insl
inc
sti
mov
push
add
xchg
punpckhdq
dec
xchg
ds
sarl
xchg
sub
push
add
addr16
adc
or
into
insb
fcom
jle
std
jnp
cmpsl
cmp
mov
iret
push
sbb
jo
dec
addr16
mov
adc
sti
inc
or
push
inc
fs
inc
rcrl
push
and
cmp
mov
cmovle
negl
scas
int3
std
dec
mov
xlat
in
arpl
push
ret
call
sbb
jae
push
pop
push
addr16
add
add
push
mov
mov
rorl
push
outsl
push
jl
dec
lea
mov
addl
fmull
xor
jge
ja
mov
push
push
push
sarl
dec
out
fildl
outsl
inc
add
in
loop
mov
data16
and
dec
icebp
cwtl
movl
xchg
push
aad
data16
inc
or
sar
lcall
sub
jmp
sub
fwait
mov
enter
inc
mulb
mov
leave
mov
mov
icebp
cmp
pop
adc
cmp
sbb
jg
shl
adc
dec
iret
ss
dec
icebp
lret
test
fsubs
pop
in
pop
xchg
clc
pop
out
dec
adc
or
hlt
pop
jecxz
sub
mov
jnp
jg
xchg
leave
pop
call
stc
jnp
in
cmp
test
cmpsb
jno
sbb
push
push
int
jl
cmpb
push
add
mov
std
jnp
cmp
jb
dec
mov
pop
repz
movlps
add
test
add
push
or
mov
mov
push
cli
in
cmp
test
cmp
sbb
adc
sub
fnstsw
cmc
jbe
or
sub
cmp
sub
cmp
movb
xlat
jg
inc
test
mov
in
jnp
shl
adc
and
inc
cmp
dec
cmc
call
sbb
pop
adc
jecxz
fldcw
pop
adc
xchg
es
xchg
push
push
out
cmc
jae
cli
lret
sub
pop
sub
outsb
insl
xchg
push
inc
jae
imul
das
ds
int3
push
adc
xor
pop
dec
mov
jl
shrl
fdivs
mov
imul
sub
pop
out
cmp
pop
out
insb
dec
movsl
enter
insb
lret
pop
ret
fbld
push
adc
arpl
mov
sub
dec
test
ret
mov
aas
imul
lcall
xchg
sub
push
sub
mov
cmp
sub
negb
mov
push
cmp
lahf
pop
ret
mov
in
fsubrs
push
sbb
sub
out
insl
sahf
mov
push
in
out
pop
sbb
out
pop
push
mov
jp
daa
js
pop
pop
mov
jmp
xor
gs
cmc
xchg
xor
ds
jo
shlb
nop
push
test
fdivs
push
jecxz
lcall
add
cld
mov
pop
mov
mov
jecxz
xor
aas
push
mov
stos
pop
movb
xchg
or
xor
cmp
adc
outsb
mov
popa
pop
pop
dec
pop
mov
testb
pop
inc
lods
pop
jnp
and
inc
mov
cmp
inc
lods
inc
ss
adcb
es
jns
cmp
inc
adc
or
xor
subl
inc
cs
inc
xchg
xor
int
pop
adc
inc
adc
jnp
push
dec
and
cld
stos
adc
les
fnstcw
ret
jne
dec
or
movl
mov
or
jge
and
sub
and
nop
and
xor
or
or
adc
outsb
add
inc
cmp
jb
sbb
or
mov
inc
pop
jl
push
pop
or
push
sbb
xchg
icebp
inc
and
and
inc
push
jne
cmpl
mov
or
adc
rolb
lods
dec
leave
sbb
xor
sarl
push
leave
arpl
adc
mov
jg
inc
inc
sub
inc
popf
cmp
stos
push
sub
and
jne
sbb
adc
inc
iret
cwtl
adc
arpl
pop
fsts
cmp
mov
mov
int
cmp
and
and
push
inc
loopne
push
loope
cld
push
test
push
into
mov
mov
add
outsl
mull
sbb
add
add
xor
add
xchg
lret
dec
cmpsl
and
adc
out
pop
addb
ss
test
xchg
jmp
fnstsw
daa
or
or
xchg
and
mov
test
mov
add
or
cmp
or
add
mov
inc
pop
mov
jno
xor
inc
popf
jge
lahf
aaa
inc
popf
icebp
lret
lds
shll
mov
imul
xchg
push
pusha
pop
adc
cmp
clc
or
cmp
inc
sarb
or
repnz
or
or
add
mov
testl
shr
or
mov
or
dec
out
push
add
sahf
pop
push
andl
nop
cmpb
cmp
call
into
mov
repz
aad
or
ret
or
or
ret
incl
int3
pop
push
inc
jmp
fs
and
jb
adc
ret
mov
lret
xor
fdivrs
jecxz
mov
ss
pop
in
cltd
jno
fincstp
ret
mov
testl
pop
push
or
cmp
jp
adc
pusha
iret
ja
push
fisubrs
fimull
add
cmp
outsb
or
out
sti
inc
out
test
bound
sahf
outsl
incl
dec
arpl
push
pop
mov
mov
decl
sub
lea
dec
and
fcmovbe
aad
xchg
sub
xor
cmp
out
push
or
mov
cmp
jmp
icebp
or
call
aas
mov
in
xor
imul
add
ret
in
popa
xchg
in
sti
roll
sti
cwtl
push
daa
imul
mov
jmp
and
sbb
dec
cmp
clc
cwtl
mov
orb
cmp
push
sti
mov
das
mov
inc
or
sbb
push
idivb
lods
xor
leave
xchg
push
in
push
push
or
adc
test
popaw
cmp
pop
pop
pop
mov
pop
jnp
outsb
movsl
dec
into
cmp
add
pusha
or
inc
sbb
inc
imull
adc
pop
inc
cmpsb
nop
fdivs
mov
inc
loopne
dec
push
mov
notl
sub
cmp
jl
or
jge
sbb
ss
push
adc
movsbl
add
mov
jo
jbe
in
imul
xchg
or
mov
xchg
inc
push
ret
add
ror
jl
inc
aaa
repnz
sub
adc
icebp
xor
xchg
and
in
daa
xor
insb
dec
or
push
sbb
imul
faddl
movsl
pop
xor
or
cld
mov
adc
inc
adc
and
call
clc
add
mulb
mov
aam
jmp
pop
std
or
call
inc
inc
xor
in
jmp
inc
push
xor
adc
and
xchg
and
pushf
inc
push
inc
dec
js
je
dec
inc
or
xor
push
enter
jle
psrld
sub
adc
dec
lcall
sub
dec
call
sbb
cmp
repz
jl
enter
int3
sub
inc
dec
dec
nop
mov
movsb
test
add
mov
sbb
mov
jnp
mov
adc
es
add
int3
xlat
sub
pop
add
push
inc
mov
stc
lock
fldt
pusha
push
sbb
aam
ret
mov
iret
imul
lock
or
sub
hlt
fstpt
fs
jmp
dec
scas
pop
push
pop
je
or
outsb
sbb
ret
pop
outsb
mov
add
inc
inc
loop
cmpsl
rcr
iret
or
mov
cmc
call
adc
add
xlat
push
daa
cmpsl
and
push
xchg
sti
jb
jmp
mov
jo
cmpsb
jge
loope
xchg
adc
xlat
lret
xchg
push
popf
cmc
rorl
pop
or
movaps
jo
hlt
andl
cmpsl
shll
in
sub
popf
xchg
add
ret
lcall
jbe
js
lds
pop
push
repz
adc
aaa
sub
adc
flds
addr16
pop
mov
pop
inc
cld
shl
add
stos
mov
cmp
mov
mov
sete
cmc
adc
int
outsl
out
xor
fs
aaa
xchg
lods
lret
dec
xchg
jne
jno
or
clc
add
stos
shll
jl
mov
imul
push
push
cmp
push
test
into
dec
ss
inc
sbb
sub
enter
xchg
jmp
mov
xchg
pop
add
jmp
inc
mov
mov
or
xlat
mov
les
sbb
xor
jecxz
jmp
stc
data16
cmpb
test
sbb
ret
scas
scas
int
loope
mov
aaa
shlb
mov
jmp
in
mov
cltd
xchg
fwait
jge
adc
cmc
pop
or
in
lea
loope
nop
ja
pop
mov
adc
outsb
adc
add
pop
xchg
mov
lret
cs
pushf
sub
clc
add
ds
mov
mov
std
stmxcsr
sbb
je
in
shll
pop
out
add
add
sbb
ficoms
pushf
mov
xchg
add
adc
cmp
jmp
mov
cmp
pop
and
sub
ja
dec
jb
or
push
fcompl
cmp
or
rclb
cmp
push
call
cvtps2pi
dec
xor
dec
cmp
into
cmp
and
call
xor
fldt
pop
dec
or
sbb
mov
add
imul
push
jmp
out
mov
fs
or
xchg
push
push
add
mov
lahf
xor
mov
orb
mov
mov
pop
jbe
xor
outsl
push
mov
sub
adc
inc
ds
and
mov
push
nop
out
es
xchg
push
adc
sub
fstpt
jo
xor
pop
jnp
mov
sub
mov
mov
adc
adc
mov
popf
mov
inc
dec
cli
mov
fsubr
inc
fsubs
cmp
sub
loope
inc
into
mov
mov
adc
mov
push
fdiv
xor
addr16
vmwrite
lods
cmp
push
adc
fisubrl
cmp
push
mov
or
ja
jo
movsb
loopne
jg
pushf
adc
lds
nop
lea
and
adc
sbb
lds
jecxz
mov
aam
movsb
xchg
imul
es
jg
cmp
push
push
push
call
outsl
sub
ret
xlat
add
push
roll
mov
cmp
mov
test
test
sarb
imull
mov
lea
push
shl
push
sub
or
jg
cmpsl
pop
xchg
leave
jo
push
cmp
aad
push
pop
js
sub
mov
push
jnp
jge
fnstcw
cld
je
ljmp
xor
push
pop
sbbb
pop
xor
imul
aas
mov
cmpb
test
sub
adcl
mov
push
push
or
pop
cmp
jne
sub
inc
and
adc
js
les
pop
jo
pop
dec
mov
mov
shrb
cmp
inc
push
fildl
jne
or
mov
cmp
test
pop
mov
cmp
cld
scas
adc
in
mov
fnstsw
aaa
cltd
cmp
pop
push
je
test
add
add
aas
cmp
mov
or
pushl
push
mov
sti
aaa
or
and
cmpsb
pop
jns
not
adc
jne
or
mov
ss
aas
add
add
imul
fisttpl
or
mov
hlt
mov
xorb
inc
orb
mov
fyl2xp1
fldt
xor
lds
or
sub
adc
push
jge
repz
and
dec
std
or
lret
test
ret
mov
push
cmp
dec
add
insb
inc
sbb
pop
and
dec
sar
jge
mov
xlat
add
xor
dec
xor
call
cmp
dec
int
add
cmp
sbb
push
adc
call
or
inc
pop
rcrb
into
icebp
clc
call
inc
popa
out
push
insl
stc
lock
and
jmp
jne
push
pop
lret
call
dec
dec
sub
sbb
insl
adc
inc
testb
and
sbb
fisttpl
jl
adc
mov
call
and
mov
cmp
and
add
bts
pushf
add
rclb
fldenv
aam
popf
cmp
inc
or
pusha
jl
cmp
incl
aam
test
inc
movsb
mov
push
jmp
mov
sbb
or
ret
jp
jge
fdiv
pop
jae
jg
pop
ret
sub
and
push
ss
fwait
inc
push
cmpsb
adc
enter
mov
pop
xchg
cmp
adc
and
pop
cltd
movsb
mov
gs
adc
movsb
jg
dec
push
shr
cmp
data16
or
adc
ljmp
pop
xchg
jge
movsb
xor
push
jmp
insb
jg
subl
ja
adc
aam
xor
pop
in
daa
mov
cvttps2pi
adc
add
pop
lods
and
inc
or
gs
jns
inc
jmp
mov
cmp
in
push
fstp
pusha
in
rcrb
mov
cwtl
int3
inc
mov
or
sub
cmp
inc
or
lods
inc
mov
dec
sub
iret
in
xchg
dec
xor
ja
or
mulb
jp
mov
rep
or
mov
sarl
movsl
ret
outsl
xor
enter
sub
test
cmp
call
aas
or
or
into
int
je
lea
mov
mov
je
xchg
jno
mov
add
pop
fwait
loope
cmp
out
mov
inc
jnp
mov
push
je
mov
xchg
fstpt
fistps
inc
or
xor
test
ljmp
inc
pop
cmp
xorb
jnp
jle
adc
repnz
inc
push
lea
pop
inc
xor
pusha
mov
ss
movl
gs
adc
ljmp
cmp
inc
pop
mov
jns
pop
cmp
or
lods
adc
sbb
push
into
adcb
mov
test
mov
fstpt
jno
cld
or
fdivrs
popa
dec
dec
aam
dec
push
aam
cli
invd
inc
cmp
addr16
adc
xchg
pop
test
lret
add
cmp
push
lret
gs
xor
aaa
add
adc
je
in
popa
mov
pop
test
jne
pusha
add
xchg
adc
pop
or
cmp
mov
mov
jns
insl
mov
mov
or
pop
js
sbb
xor
imul
and
aaa
push
stc
jl
jo
mov
adc
mov
je
inc
push
fsubs
es
movsl
jne
das
aam
roll
push
dec
mov
push
mov
mov
jecxz
insl
pop
pop
push
jno
push
jecxz
push
add
scas
test
sbb
test
jl
fwait
jp
clc
stos
xchg
and
jle
das
sub
add
pop
inc
js
cmp
out
je
cmc
pusha
lret
pop
lock
push
push
test
shrb
stos
sbb
jae
std
pop
sub
adc
in
out
sub
mov
shlb
inc
inc
push
mov
push
mov
cmpsb
movsb
inc
orl
xor
and
cli
cmp
or
jne
lods
and
jmp
mov
xor
push
jne
mov
fnstenv
std
fs
push
xchg
std
and
mov
and
pop
adc
test
imul
xor
push
pop
rorl
jl
jecxz
cltd
jle
jg
inc
sub
lock
cmpl
xor
mov
mov
cmc
rol
cmp
call
loopne
push
cmc
sub
loop
add
dec
ja
jnp
dec
jge
fisttpl
add
xchg
pop
inc
adc
pusha
push
lock
xor
mov
shrl
dec
mov
rcll
and
jmp
mov
lea
icebp
adc
or
adc
push
imul
push
push
mov
xor
or
xchg
pop
dec
cmp
or
xchg
pop
bound
insl
mov
nop
jge
or
adc
and
adc
cmp
pop
lds
int
fcom
loopne
call
or
xor
cmp
aaa
adc
repnz
xchg
fbld
or
sub
pop
add
dec
cmp
xor
mov
adcb
mov
and
pop
or
adc
lret
mov
adc
jecxz
pop
add
mov
pop
cmc
push
nop
push
adc
repz
cmp
cmp
xchg
std
pusha
and
and
mov
shr
cs
jmp
mov
cmp
pop
and
add
dec
jmp
xor
call
add
pop
mov
jns
lea
mov
enter
xor
lock
rclb
sbb
mov
inc
xchg
sti
dec
cmc
stos
mov
xchg
mov
fcoml
add
sub
mov
cmp
dec
inc
xor
gs
or
dec
and
dec
pushf
sub
call
leave
mov
or
cmp
loopne
inc
mov
mov
push
testb
xor
pop
jo
cmp
lea
add
push
jns
pop
imul
shlb
jo
rcl
xor
xor
inc
xchg
cltd
mov
fnsave
cmp
leave
sub
shr
pusha
nop
add
or
mov
pop
shr
testl
or
xchg
xor
mov
cmp
dec
xor
invd
sub
mov
push
popf
imul
dec
inc
xor
pop
pop
xchg
or
nop
or
int3
cmp
or
in
or
xchg
rolb
or
cmp
ss
cwtl
adc
inc
sti
test
push
push
or
cmp
add
je
pop
or
fstl
mov
adc
sahf
pop
or
nop
or
mov
imul
adc
adc
push
adc
mov
xchg
pop
cmp
and
adcb
or
cmp
dec
add
push
mov
xor
mov
pop
insl
cmp
and
and
xchg
or
stos
adcb
inc
cltd
mov
sub
fsubrl
or
cmp
cs
xchg
or
or
and
pop
xor
xchg
mov
cmp
add
ja
pusha
cli
jp
imul
sub
pop
cmpb
mov
cmp
dec
lods
or
push
or
or
imul
pop
loopne
jmp
notb
inc
push
frstor
sti
jp
fdivr
cmp
fsubrs
iret
pop
inc
xor
push
rcrl
pop
imul
pop
cmp
pop
stos
cmp
or
push
int
ljmp
std
repnz
add
xchg
pop
or
cmp
dec
sub
cmp
pop
sbb
adcb
or
mov
pop
pop
je
popa
lds
inc
mov
cwtl
adc
shrb
inc
pop
inc
rclb
push
cmp
std
cltd
and
sub
sbb
dec
cmp
xchg
imul
stc
inc
xchg
frstor
add
xchg
lea
lea
rcrb
shr
sub
add
or
xchg
sbb
clc
or
xchg
inc
std
dec
imul
push
jg
popa
js
loope
dec
pop
stos
nop
xor
jmp
and
rorb
ljmp
adc
test
xchg
sub
imul
pop
dec
cmp
push
jno
fildl
add
mov
push
filds
pop
rcrl
rcrb
fcoml
cmp
cwtl
fldl
adc
xchg
cwtl
xor
js
xchg
pusha
faddl
test
inc
sti
nop
and
or
scas
push
or
adc
dec
mov
enter
nop
pop
lock
fwait
or
adc
cmp
leave
add
imul
and
cmp
lods
or
add
rolb
dec
ja
pusha
push
subl
xor
sbb
mov
and
cltd
add
add
or
dec
adc
or
in
jo
sbb
sti
cmp
or
or
test
dec
add
inc
xor
mov
xor
pop
xor
adc
or
jno
mov
or
mov
xchg
pop
add
sti
in
subb
or
adc
add
test
mov
or
add
jns
inc
subb
dec
aas
mov
push
or
or
or
adc
pop
or
or
add
or
cmp
dec
xchg
fadd
imul
mov
popa
mov
iret
pop
lock
cmpsb
mov
add
pop
xchg
and
jno
enter
add
cmpb
adc
pop
pop
or
pop
dec
sti
jo
jnp
adc
push
lahf
xor
or
pop
nop
rorb
cmp
fsubs
adc
dec
stc
test
or
add
mov
and
das
shll
mov
cmp
push
cmp
pop
pop
or
bound
or
xchg
pop
jno
cmp
xchg
fildl
adc
movsb
scas
lea
xchg
push
jnp
add
adc
xor
jmp
add
add
mov
sbb
lds
mov
cmp
mov
roll
dec
imul
push
adc
jnp
fsubrl
lods
inc
cmp
sub
js
shll
add
cltd
gs
xchg
fdivl
jno
fdivrl
sbb
xor
cwtl
and
add
movsl
rclb
and
clc
pusha
loopne
jmp
xor
sub
lods
xor
sub
xor
or
std
arpl
dec
imul
addb
in
rcll
xor
loope
imul
sbbb
or
popf
xor
cmp
mov
shrl
xlat
push
test
lock
xchg
test
mov
popa
mov
sbb
insl
cmc
xor
outsb
ljmp
and
add
push
cmpl
out
add
dec
push
sti
outsb
and
push
mov
jo
imul
add
stos
rorl
pusha
mov
or
call
mov
add
fstpl
push
ja
mov
mov
popa
mov
add
and
mov
mov
mov
sti
jno
add
addl
and
and
sub
pop
nop
inc
add
push
arpl
lock
add
or
push
popa
mov
xor
xchg
imul
enter
shll
jge
push
add
add
sar
adc
or
popa
sub
xor
fldenv
push
adc
sub
cmpb
xor
popf
pop
push
cmpsb
nop
ud2
mov
add
or
mov
push
roll
cmp
or
xor
pushf
pop
add
xchg
dec
or
push
orb
push
mov
shrw
push
cmp
nop
cmp
pop
cltd
cmp
or
cmp
push
push
cmp
inc
dec
sarl
mov
mov
pop
push
dec
pop
loopne
jmp
cli
notb
pop
adc
sbb
shll
or
sub
pop
cmp
or
xchg
pop
push
push
nop
pusha
add
jno
jns
adc
adc
xchg
lods
ds
pushf
nop
add
std
or
adc
fnstsw
iret
pop
loopne
jmp
lods
sub
dec
mov
stos
and
mov
adcb
sti
test
pop
lock
sbbb
stos
frstor
mov
fcoml
mov
sbb
mov
adc
js
mov
rcr
cld
in
adc
and
add
or
and
xchg
sub
sbb
and
lea
xor
push
xor
cmp
inc
or
xor
and
mov
xor
sti
jo
mov
inc
mov
mov
pop
xor
shll
and
lock
lock
pop
add
pop
pop
std
fldl
push
fdivl
inc
dec
mov
jge
imul
frstor
adcl
pop
sti
push
fmuls
sub
inc
and
stos
xchg
bound
nop
pop
inc
mov
cmp
imul
call
nop
test
aas
sbb
pop
push
pop
adc
mov
push
cwtl
adc
fistpl
cmp
sahf
sub
std
jbe
xor
mov
inc
loopne
xor
loopne
jmp
and
add
add
mov
out
dec
popa
lea
adc
add
fnsave
dec
sub
ds
or
or
or
xchg
fsubrs
add
pusha
call
sub
nop
inc
inc
cwtl
or
loopne
push
jns
movsb
and
pop
add
or
add
adc
dec
pop
or
je
adc
sahf
outsl
rcrb
mov
jo
xor
and
mov
mov
sbb
push
or
lods
adc
out
inc
fisubrs
enter
push
sbb
outsl
arpl
add
push
gs
jbe
cmp
daa
inc
mov
pop
xor
cs
insb
pop
add
push
dec
pop
fsubrp
push
aas
push
xor
and
popa
jae
imul
pop
addr16
inc
push
cmp
into
icebp
pop
jae
cld
test
mov
jg
shl
icebp
jb
xor
lea
lcall
daa
push
adc
ret
repz
out
push
push
xor
pushf
inc
pop
pop
dec
daa
imul
ja
inc
xchg
inc
pop
pop
dec
dec
pop
cltd
dec
add
mov
inc
dec
fisubl
push
aas
outsb
movsl
int3
pop
jl
stc
dec
inc
shll
mov
jne
mov
dec
mov
jecxz
mov
clc
fwait
mov
pop
adc
xchg
or
cmp
sti
add
inc
inc
inc
cld
cmp
mov
sbb
xchg
add
mov
jge
dec
mov
mov
add
gs
mov
mov
jae
mov
inc
aas
dec
mov
xchg
rcrl
mov
inc
out
dec
test
inc
or
pop
dec
push
jo
dec
jne
mov
inc
aaa
push
adc
adc
aaa
xor
lods
jo
out
inc
mov
gs
out
dec
dec
jg
dec
cmp
adc
jns
inc
jmp
adc
into
jno
shll
inc
jnp
mov
xor
std
rclb
jecxz
lahf
inc
xor
aas
dec
and
loopne
loope
leave
sbb
sub
je
cli
repz
mov
adc
cld
inc
mov
mov
xlat
std
rclb
jb
cld
loopne
sub
data16
cld
push
push
mov
in
icebp
je
imul
mov
or
mov
fadd
ja
pop
mov
or
imul
inc
xchg
cmc
push
andb
sbb
xchg
in
jb
jne
adc
gs
or
leave
cmp
or
push
imul
sbb
std
push
cmp
bound
or
xor
repnz
mov
ja,pt
mov
inc
jp
mov
lret
aam
movsl
mov
mov
mov
shll
in
xlat
adc
push
gs
cmp
gs
stc
addr16
sub
cmp
xor
xor
lcall
enter
bound
jns
cltd
dec
dec
pop
hlt
or
dec
icebp
mov
xchg
mov
iret
dec
idivb
lods
and
mov
hlt
xchg
scas
rclb
or
sub
stos
and
inc
daa
jae
mov
arpl
push
inc
pop
push
dec
scas
rol
ss
cmp
pusha
pop
pop
mov
jnp
inc
cmp
jge
fistl
mov
mov
mov
cmp
dec
dec
push
mov
adc
mov
repz
leave
cmp
xchg
xlat
add
push
inc
push
xor
lea
jle
sbb
jne
insb
aaa
dec
inc
aaa
sub
scas
pxor
dec
call
loopne
fists
push
orl
jnp
decl
aas
add
aad
dec
lea
and
call
out
xlat
jbe
add
bound
or
sbb
fdivl
add
imul
outsl
push
fwait
stos
inc
jae
inc
adc
mov
lea
insb
je
inc
add
jmp
and
das
sub
pop
int3
cmpsl
push
and
or
insl
pop
sbb
outsl
sahf
rcrl
jb
xchg
jns
mov
fs
ret
cmp
popa
mov
je
xor
jge
mov
and
inc
sbb
push
dec
xchg
bound
lea
sub
jae
jns
jo
mov
xor
push
dec
mov
inc
aad
jne
pushf
mov
fimull
sbb
jl
adc
xchg
addr16
rorl
std
jae
cmp
pop
cwtl
jno
cmpsl
dec
dec
mov
rorl
or
add
xchg
jno
inc
int
lahf
dec
jne
ret
mov
pop
cmp
test
pop
inc
js
cmp
aad
std
adc
jle
jmp
cmp
xor
movsl
mov
out
fnsave
dec
push
pushf
clc
sbb
pop
cmp
or
imul
dec
dec
inc
inc
push
push
mov
and
shr
and
cmp
cmpl
inc
cs
inc
pop
pop
ds
js
lea
mov
lods
jno
mov
cwtl
inc
div
outsl
lret
cmp
lahf
jae
push
cmpsb
pop
imul
mov
cmp
cmpsl
js,pn
push
and
sub
inc
arpl
sub
xor
xchg
and
jnp
clc
pop
dec
jmp
push
loope
stos
or
lea
pop
push
out
jb
sub
outsb
sti
movsl
or
mov
data16
mov
push
sarb
lea
test
push
sbbl
xor
mov
loop
lea
xchg
mov
enter
outsw
xchg
clc
lods
cmp
mov
jb,pt
push
dec
dec
push
test
inc
dec
ds
inc
rcrb
in
rorb
popl
mov
pop
xor
int3
addr16
lret
cmp
add
aaa
sar
rcr
dec
push
dec
mov
nop
dec
adc
jecxz
jbe
sti
xor
inc
pop
imul
inc
xlat
or
in
outsl
push
inc
popf
pop
xchg
pop
fmull
stos
and
push
xor
std
sbb
dec
gs
mov
cmpl
mov
aas
inc
push
adc
je
add
xchg
icebp
enter
cmp
cmp
mov
xlat
pusha
ds
outsl
or
add
rcrl
fldenv
sub
jne
mov
mov
orl
cmp
mov
push
lret
sbb
ljmp
cmpsb
or
or
aaa
push
int
aaa
pushf
adc
dec
popa
lret
cmp
ret
jo
es
ret
push
inc
aam
mov
push
mov
pop
imul
lret
add
mov
jne
out
add
jmp
outsb
xchg
mov
mov
lea
icebp
sbb
or
xor
or
ja
mov
jge
adc
rcll
aam
nop
enter
or
cmp
jg
cmp
std
adc
vmread
or
push
add
push
and
cmp
or
and
nop
jp
cmpsb
dec
loope
or
dec
jae
push
rcrl
jbe
or
push
outsb
iret
or
out
sub
out
inc
and
push
cmc
gs
sbb
sarl
xor
cltd
lock
cltd
xorb
jno
mov
rclb
jo
je
adcb
dec
roll
aam
pop
adc
sbb
pusha
sbb
mov
mov
sbb
jle
dec
leave
xchg
adc
loopne
xchg
dec
pop
das
mov
xor
ss
adc
mov
sbb
dec
cwtl
ds
addb
xor
popf
inc
cs
add
xor
cmp
xor
ja
lea
dec
jne
and
cmp
jns
cmp
dec
push
add
push
push
bound
ss
pop
xlat
adc
dec
dec
inc
mov
pop
xor
sbb
adc
add
outsl
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
