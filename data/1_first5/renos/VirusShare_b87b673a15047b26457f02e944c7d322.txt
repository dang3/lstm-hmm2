jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
bound
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
cmp
jne
lea
xchg
mov
xchg
xchg
inc
inc
mov
mov
lea
mov
lea
xchg
xchg
xchg
mov
movb
xchg
mov
mov
xchg
xchg
xchg
mov
mov
mov
xchg
xchg
dec
inc
dec
dec
je
mov
mov
mov
xchg
lea
inc
movw
call
cmp
jb
mov
lea
mov
mov
dec
dec
je
mov
dec
inc
mov
mov
mov
mov
lea
xchg
xchg
dec
inc
push
call
cmp
jp
xchg
lea
mov
inc
lea
lea
mov
inc
dec
inc
lea
lea
xchg
xchg
xchg
xchg
mov
movw
push
call
cmp
jno
mov
inc
mov
dec
cmp
je
lea
mov
xchg
lea
mov
lea
lea
dec
dec
dec
lea
mov
inc
lea
dec
call
cmp
jb
xchg
lea
mov
lea
lea
mov
mov
xchg
mov
xchg
lea
xchg
mov
dec
dec
je
inc
dec
inc
call
mov
cmp
jp
lea
xchg
lea
mov
xchg
lea
mov
mov
mov
mov
mov
mov
dec
inc
incb
cmpb
jne
pop
pop
pop
ret
nop
push
mov
add
movb
cmp
jno
mov
inc
mov
dec
cmp
je
lea
mov
xchg
lea
mov
lea
lea
dec
dec
dec
lea
mov
inc
lea
dec
movw
call
cmp
jb
xchg
lea
mov
lea
lea
mov
mov
xchg
mov
xchg
lea
xchg
mov
dec
dec
je
inc
dec
inc
movw
push
call
mov
cmp
jp
lea
xchg
lea
mov
xchg
lea
mov
mov
mov
mov
mov
mov
dec
inc
push
call
incb
cmpb
jne
pop
pop
pop
ret
lea
push
mov
add
mov
mov
xchg
mov
mov
xchg
xchg
xchg
mov
mov
mov
xchg
xchg
dec
inc
dec
dec
je
mov
mov
mov
xchg
lea
inc
mov
mov
add
mov
mov
mov
mov
cmp
jb
xchg
lea
mov
lea
lea
mov
mov
xchg
mov
xchg
lea
xchg
mov
dec
dec
je
inc
dec
inc
mov
add
add
mov
mov
mov
mov
cmp
jbe
lea
xchg
lea
lea
lea
mov
mov
xchg
dec
dec
inc
mov
mov
lea
mov
xchg
xchg
dec
inc
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
xor
mov
cmpl
jbe
cmp
jle
xchg
mov
xchg
lea
xchg
lea
xchg
mov
mov
inc
inc
inc
xchg
lea
lea
mov
mov
dec
dec
inc
mov
test
jbe
mov
movl
mov
add
mov
dec
shl
add
mov
mov
mov
add
push
mov
push
call
test
jne
cmp
jno
mov
inc
mov
dec
cmp
je
lea
mov
xchg
lea
mov
lea
lea
dec
dec
dec
lea
mov
inc
lea
dec
mov
add
mov
dec
add
add
mov
mov
movzwl
mov
jmp
incl
decl
jne
jmp
mov
sub
mov
mov
add
mov
shl
add
mov
mov
mov
add
mov
mov
mov
pop
ret
lea
push
mov
add
mov
mov
xchg
mov
mov
xchg
xchg
xchg
mov
mov
mov
xchg
xchg
dec
inc
dec
dec
je
mov
mov
mov
xchg
lea
inc
mov
cmp
je
jmp
cmp
jb
xchg
lea
mov
lea
lea
mov
mov
xchg
mov
xchg
lea
xchg
mov
dec
dec
je
inc
dec
inc
mov
xor
divl
test
jne
mov
cmp
jp
lea
xchg
lea
mov
xchg
lea
mov
mov
mov
mov
mov
mov
dec
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jp
xchg
lea
mov
inc
lea
lea
mov
inc
dec
inc
lea
lea
xchg
xchg
xchg
xchg
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jb
mov
lea
mov
mov
dec
dec
je
mov
dec
inc
mov
mov
mov
mov
lea
xchg
xchg
dec
inc
mov
cmp
je
jmp
cmp
jne
lea
xchg
mov
xchg
xchg
inc
inc
mov
mov
lea
mov
lea
xchg
xchg
xchg
mov
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jle
xchg
mov
xchg
lea
xchg
lea
xchg
mov
mov
inc
inc
inc
xchg
lea
lea
mov
mov
dec
dec
inc
mov
cmp
je
jmp
cmp
jne
lea
xchg
mov
xchg
xchg
inc
inc
mov
mov
lea
mov
lea
xchg
xchg
xchg
mov
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
call
cmp
jp
xchg
lea
mov
inc
lea
lea
mov
inc
dec
inc
lea
lea
xchg
xchg
xchg
xchg
mov
mov
sub
mov
cmp
jbe
lea
xchg
lea
lea
lea
mov
mov
xchg
dec
dec
inc
mov
mov
lea
mov
xchg
xchg
dec
inc
push
mov
mov
xor
call
mov
mov
cmp
jp
lea
xchg
lea
mov
xchg
lea
mov
mov
mov
mov
mov
mov
dec
inc
mov
mov
mov
call
cmp
jb
mov
lea
mov
mov
dec
dec
je
mov
dec
inc
mov
mov
mov
mov
lea
xchg
xchg
dec
inc
push
mov
mov
xor
call
mov
cmp
jb
xchg
lea
mov
lea
lea
mov
mov
xchg
mov
xchg
lea
xchg
mov
dec
dec
je
inc
dec
inc
xchg
mov
mov
xchg
xchg
xchg
mov
mov
mov
xchg
xchg
dec
inc
dec
dec
je
mov
mov
mov
xchg
lea
inc
lea
mov
push
mov
jmp
cmp
jbe
lea
xchg
lea
lea
lea
mov
mov
xchg
dec
dec
inc
mov
mov
lea
mov
xchg
xchg
dec
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jne
lea
xchg
mov
xchg
xchg
inc
inc
mov
mov
lea
mov
lea
xchg
xchg
xchg
mov
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jle
xchg
mov
xchg
lea
xchg
lea
xchg
mov
mov
inc
inc
inc
xchg
lea
lea
mov
mov
dec
dec
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jno
mov
inc
mov
dec
cmp
je
lea
mov
xchg
lea
mov
lea
lea
dec
dec
dec
lea
mov
inc
lea
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jb
xchg
lea
mov
lea
lea
mov
mov
xchg
mov
xchg
lea
xchg
mov
dec
dec
je
inc
dec
inc
mov
sub
add
add
mov
xchg
mov
mov
xchg
xchg
xchg
mov
mov
mov
xchg
xchg
dec
inc
dec
dec
je
mov
mov
mov
xchg
lea
inc
lea
pushl
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
call
push
call
mov
cmp
jb
mov
lea
mov
mov
dec
dec
je
mov
dec
inc
mov
mov
mov
mov
lea
xchg
xchg
dec
inc
mov
mov
call
mov
mov
mov
mov
cmp
jp
lea
xchg
lea
mov
xchg
lea
mov
mov
mov
mov
mov
mov
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jbe
lea
xchg
lea
lea
lea
mov
mov
xchg
dec
dec
inc
mov
mov
lea
mov
xchg
xchg
dec
inc
mov
mov
movl
cmp
jno
mov
inc
mov
dec
cmp
je
lea
mov
xchg
lea
mov
lea
lea
dec
dec
dec
lea
mov
inc
lea
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jb
xchg
lea
mov
lea
lea
mov
mov
xchg
mov
xchg
lea
xchg
mov
dec
dec
je
inc
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jno
mov
inc
mov
dec
cmp
je
lea
mov
xchg
lea
mov
lea
lea
dec
dec
dec
lea
mov
inc
lea
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jp
xchg
lea
mov
inc
lea
lea
mov
inc
dec
inc
lea
lea
xchg
xchg
xchg
xchg
mov
mov
pop
ret
add
inc
gs
jb
arpl
fs
jae
add
push
cmp
testb
mov
shll
ljmp
stos
mov
mov
mov
mov
int3
int3
mov
stos
test
mov
ror
mov
stos
test
mov
shrb
scas
cmpsl
test
int3
xchg
scas
rcrb
mov
int3
movsl
scas
mov
ljmp
int3
movsl
int3
scas
int3
mov
int3
test
std
int3
dec
ljmp
int3
int3
int3
int3
int3
lahf
inc
sub
xor
cmp
or
cmp
lock
sub
int3
out
mov
push
out
mov
xor
mov
sub
mov
xor
mov
into
repnz
enter
loop
mov
in
repnz
imul
mov
inc
xor
test
outsb
mov
inc
xor
mov
outsb
mov
inc
xor
add
outsb
mov
inc
xor
out
and
int3
inc
xor
in
imul
int3
inc
xor
shrl
outsb
mov
inc
xor
leave
imul
int3
inc
xor
iret
std
or
xor
xor
xchg
xchg
or
inc
add
inc
adc
or
mov
or
inc
sub
add
pop
inc
popl
sbb
inc
mov
pushf
inc
popl
popl
pushf
mov
add
mov
inc
vpmacssdqh
add
mov
pushf
inc
popl
pushf
xchg
inc
vpmacssdqh
inc
iret
cld
int3
int3
int3
inc
xchg
inc
test
inc
clc
int
sub
cmp
cmp
dec
int3
int3
int3
inc
adc
adc
mov
int3
leave
push
sbb
adc
int3
int
sub
and
or
int3
cmpsb
int3
cmpsb
int3
inc
and
enter
pushf
inc
popl
pushf
add
and
mov
cmp
push
pop
int3
int3
int3
inc
and
int3
rcl
and
int
sub
xor
and
fmul
vpmacssdqh
mov
int
sub
xor
and
fmul
vpmacssdqh
mov
dec
rcr
xor
out
cmp
int3
int3
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
and
inc
lahf
xor
into
inc
sbb
sbb
or
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
dec
sub
dec
xor
inc
xor
int3
mov
loopne
and
enter
idivl
cmp
inc
cmp
mov
int
sub
xor
popl
inc
adc
int3
cmpsb
faddl
add
or
pushf
inc
popl
pushf
xchg
movsb
int3
dec
int3
int3
cmpsb
int3
inc
popl
popl
pushf
mov
int3
cmpsb
int3
inc
pop
pushf
inc
popl
pushf
mov
scas
inc
inc
push
lock
cmp
cmp
ss
sub
cmp
cmp
or
cs
das
xchg
push
ror
or
inc
sub
enter
sti
adc
cmpsl
int3
int3
int3
mov
mov
int3
int3
mov
xchg
int3
int3
int3
mov
jl
and
int3
int3
int3
fmull
and
int3
int3
jecxz
mov
int3
int3
and
rolb
test
sub
push
int3
test
dec
cmp
mov
ror
mov
and
lret
mov
cmp
int3
push
mov
fcompl
or
sub
cmp
fildl
and
cmp
cmp
push
int3
inc
mov
inc
ss
adc
cmp
cmp
or
push
cmp
cmp
jecxz
inc
and
dec
adc
cmp
inc
cmp
iret
les
int3
adc
ret
jl
int3
int3
adc
inc
xor
pop
enter
cmp
int3
mov
int3
inc
cmp
cmp
cmp
xor
leave
push
inc
int3
int3
int3
adc
inc
ss
lahf
cmp
into
std
push
inc
lahf
xor
cmp
cmp
ss
testb
ss
cmp
int3
mov
int3
adc
inc
ss
push
inc
lahf
xor
xor
cmp
int
std
push
inc
lahf
xor
jl
int3
int
out
cmp
int3
int3
inc
ss
or
xor
mov
inc
xor
or
ss
lahf
xor
jl
int3
cmp
int3
mov
or
inc
sub
or
les
mov
cmp
int3
int3
outsb
les
std
or
ret
jl
int3
std
push
inc
ffreep
jl
int3
leave
sbbb
mov
int
out
cmp
int3
int3
outsb
ret
jl
int3
std
or
les
inc
dec
enter
inc
aaa
std
or
ret
jl
int3
inc
dec
enter
std
push
inc
ffreep
jl
int3
inc
dec
enter
std
or
ret
jl
int3
inc
lahf
aaa
inc
pop
enter
std
or
les
leave
orb
int3
std
push
inc
ffreep
jl
int3
leave
sbbb
mov
int
out
cmp
int3
int3
inc
aaa
std
or
aaa
inc
dec
enter
decb
inc
cmp
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jle
xchg
mov
xchg
lea
xchg
lea
xchg
mov
mov
inc
inc
inc
xchg
lea
lea
mov
mov
dec
dec
inc
movl
cmp
jbe
lea
xchg
lea
lea
lea
mov
mov
xchg
dec
dec
inc
mov
mov
lea
mov
xchg
xchg
dec
inc
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jp
xchg
lea
mov
inc
lea
lea
mov
inc
dec
inc
lea
lea
xchg
xchg
xchg
xchg
mov
mov
mov
call
mov
cmpl
je
cmp
jno
mov
inc
mov
dec
cmp
je
lea
mov
xchg
lea
mov
lea
lea
dec
dec
dec
lea
mov
inc
lea
dec
mov
cmp
je
mov
subb
cmp
jb
xchg
lea
mov
lea
lea
mov
mov
xchg
mov
xchg
lea
xchg
mov
dec
dec
je
inc
dec
inc
mov
xorb
cmp
jp
xchg
lea
mov
inc
lea
lea
mov
inc
dec
inc
lea
lea
xchg
xchg
xchg
xchg
mov
incl
mov
cmp
jne
cmp
jne
lea
xchg
mov
xchg
xchg
inc
inc
mov
mov
lea
mov
lea
xchg
xchg
xchg
mov
mov
call
cmp
jno
mov
inc
mov
dec
cmp
je
lea
mov
xchg
lea
mov
lea
lea
dec
dec
dec
lea
mov
inc
lea
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jno
mov
inc
mov
dec
cmp
je
lea
mov
xchg
lea
mov
lea
lea
dec
dec
dec
lea
mov
inc
lea
dec
cmp
jb
xchg
lea
mov
lea
lea
mov
mov
xchg
mov
xchg
lea
xchg
mov
dec
dec
je
inc
dec
inc
xchg
mov
mov
xchg
xchg
xchg
mov
mov
mov
xchg
xchg
dec
inc
dec
dec
je
mov
mov
mov
xchg
lea
inc
push
mov
push
call
mov
pop
ret
mov
push
mov
add
xchg
mov
mov
xchg
xchg
xchg
mov
mov
mov
xchg
xchg
dec
inc
dec
dec
je
mov
mov
mov
xchg
lea
inc
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
mov
cmp
jp
lea
xchg
lea
mov
xchg
lea
mov
mov
mov
mov
mov
mov
dec
inc
movb
cmp
jb
xchg
lea
mov
lea
lea
mov
mov
xchg
mov
xchg
lea
xchg
mov
dec
dec
je
inc
dec
inc
mov
mov
pop
ret
mov
push
mov
add
cmp
jno
mov
inc
mov
dec
cmp
je
lea
mov
xchg
lea
mov
lea
lea
dec
dec
dec
lea
mov
inc
lea
dec
call
call
cmp
jbe
lea
xchg
lea
lea
lea
mov
mov
xchg
dec
dec
inc
mov
mov
lea
mov
xchg
xchg
dec
inc
call
test
jne
mov
jmp
movw
cmp
jb
mov
lea
mov
mov
dec
dec
je
mov
dec
inc
mov
mov
mov
mov
lea
xchg
xchg
dec
inc
call
lea
mov
pop
ret
mov
push
mov
add
cmp
jno
mov
inc
mov
dec
cmp
je
lea
mov
xchg
lea
mov
lea
lea
dec
dec
dec
lea
mov
inc
lea
dec
mov
cmp
jp
lea
xchg
lea
mov
xchg
lea
mov
mov
mov
mov
mov
mov
dec
inc
push
call
mov
call
cmp
jbe
lea
xchg
lea
lea
lea
mov
mov
xchg
dec
dec
inc
mov
mov
lea
mov
xchg
xchg
dec
inc
mov
pop
ret
add
cs
jae
jae
gs
xor
pop
jne
je
jae
fs
insb
and
add
add
jae
mov
cmp
jne
lea
xchg
mov
xchg
xchg
inc
inc
mov
mov
lea
mov
lea
xchg
xchg
xchg
mov
mov
mov
mov
lea
call
cmp
jp
xchg
lea
mov
inc
lea
lea
mov
inc
dec
inc
lea
lea
xchg
xchg
xchg
xchg
mov
ret
mov
ret
lea
mov
add
adc
add
mov
xchg
add
pop
out
add
jbe
pop
jecxz
xchg
pop
sar
dec
je
add
add
lret
add
in
clc
lahf
add
dec
or
add
add
add
push
out
in
pop
push
push
js
add
xchg
mov
in
loope
push
dec
cmp
outsb
ss
jmp
mov
cmpl
enter
lock
loop
add
aas
ss
add
cmc
lret
add
mov
or
add
add
pop
mov
iret
add
push
or
pop
shl
ret
add
cmpsb
and
add
popa
mov
mov
add
add
gs
add
cmpsl
add
leave
jne
adc
add
je
add
stos
push
in
repnz
add
jns
ret
into
lret
pop
push
add
add
test
inc
stc
xchg
mov
add
mov
outsl
xchg
in
sbb
ljmp
add
add
add
dec
sbb
add
sbb
or
add
push
scas
jbe
mov
mov
leave
mov
add
imul
add
sub
xorl
popa
aas
je
add
jnp
add
add
add
outsb
mov
xlat
add
mov
add
jge
jmp
lcall
jae
jae
and
rcll
add
mov
fiadds
or
push
add
sbb
mov
jae
call
js
mov
fcmovnu
fildl
insl
jg
sbb
mov
add
cmc
lods
test
cmpsl
out
cwtl
fnstenv
push
add
add
ret
mov
test
out
lret
push
add
adc
add
test
add
mov
out
mov
inc
aas
add
in
stc
mull
mov
add
add
mov
repz
lret
xchg
adc
popa
iret
aaa
popl
dec
adc
sub
add
dec
add
addb
add
int
mov
dec
cmp
xor
fiaddl
jge
mov
stos
movaps
xchg
roll
add
fiaddl
fcmovu
dec
push
add
add
or
in
hlt
add
aam
cmpsl
add
add
jae
mov
add
add
aad
sahf
sub
sub
inc
hlt
add
mov
es
add
fwait
call
xor
add
add
std
int3
xchg
pop
popl
inc
mov
push
add
outsl
pop
pop
cmp
sbb
adc
std
xchg
cmp
inc
inc
loope
add
add
add
jns
aaa
pop
add
inc
add
add
in
fadds
sbb
flds
test
rcrb
pop
add
clc
lahf
mov
bound
jo
add
add
xchg
out
or
add
mov
jb
add
xor
push
xor
add
add
out
hlt
pop
or
mov
enter
push
movsl
or
xchg
add
and
mov
int3
add
out
stc
addb
gs
es
xchg
push
add
add
mov
xchg
add
add
fs
cmp
in
pop
cld
test
nop
push
inc
add
mov
dec
or
add
outsb
add
mov
cmp
add
add
in
jmp
add
aas
lret
add
jmp
fwait
pusha
nop
fbstp
inc
inc
jle
in
dec
cmp
lcall
cmp
inc
sbb
ds
shl
dec
jecxz
xor
stos
sub
out
inc
xor
add
in
xchg
sub
enter
dec
fadd
or
xlat
mov
mov
push
mov
lcall
pop
push
pop
mov
dec
adc
cmp
or
and
fwait
adc
pop
push
ror
xchg
jne
dec
or
add
xor
call
scas
in
mov
inc
mov
jmp
lds
sub
into
mov
arpl
scas
insl
dec
push
fdivrs
pusha
fsubs
in
jle
aas
jmp
inc
aas
cmp
or
out
push
pop
popf
mov
popa
mov
push
lret
cmp
popf
insb
insl
mov
fnstsw
rcr
push
pusha
mov
es
mov
jge
gs
inc
or
in
push
cmc
or
or
int
rolb
sahf
sub
pop
xchg
xchg
xchg
push
xchg
sbb
push
imul
cmp
vorps
rclb
cmpl
mov
push
hlt
and
test
inc
sti
pop
mov
jg
cmp
aaa
cmpsb
sahf
test
xor
push
add
std
das
pop
std
mov
ficomps
mov
scas
sbb
push
and
cmpb
into
add
push
cmpsl
jne
jbe
mov
lods
enter
daa
adc
pop
cmp
adc
jl
add
dec
bound
push
out
cmp
movsl
pop
sbb
es
insb
cltd
mov
test
push
data16
and
fmull
sbb
xor
xor
loope
push
mov
test
inc
cmp
adc
adc
add
pop
and
xchg
mov
mov
xor
shrl
mov
mov
inc
pop
jl
gs
mov
sub
jg
jb
add
call
add
jg
jp
mov
or
mov
mov
add
pushf
and
cmp
sub
jge
lret
vmovntdq
mov
pop
xlat
sahf
mov
out
test
push
jno
outsl
je
icebp
loop
mov
stc
or
push
test
out
shrb
arpl
mov
cli
out
mov
sarl
sbb
or
pop
dec
gs
adc
movsl
mov
pop
aam
push
push
mov
aas
add
xor
mov
add
sub
ja
sub
mov
aam
and
sti
inc
sub
fiadds
aad
fildl
pop
pop
aad
cmp
sbb
outsb
std
les
in
ss
fists
fidivrl
call
jnp
or
mov
lea
jg
cs
gs
sub
sbb
mov
aad
dec
dec
and
jecxz
mov
jl
push
std
push
mov
cwtl
jl
shll
cwtl
stos
subl
pusha
fistl
mov
lock
or
push
cltd
xchg
pop
mov
ficompl
rorl
inc
notb
lret
dec
add
xor
push
xor
call
ja
lret
sbb
loop
filds
jmp
in
jbe
pop
jl
lods
sarb
test
cmp
pop
ret
aad
and
and
dec
clc
sbb
das
xchg
and
inc
inc
popa
mov
lods
fstl
mov
bound
add
lock
jae
lock
adc
cmp
repz
xor
addl
xchg
fisubl
rorl
push
pop
ficoms
stos
outsl
adc
popf
mov
lods
dec
pop
add
cmp
xor
pop
lock
push
andb
xchg
sarl
or
lea
xor
or
inc
xor
data16
jl
fwait
inc
andnps
je
jb
inc
sub
mov
int3
and
jecxz
push
jns
aad
in
mov
xchg
add
mov
mov
js
loope
andl
mov
mov
stos
mov
aad
outsl
dec
cmp
sbb
inc
mov
mov
arpl
ljmp
sti
testb
aad
popf
fsqrt
jns
dec
and
stos
scas
pop
xlat
and
inc
insb
fdiv
jnp
cmp
lock
push
cmpsl
das
cmpsb
adc
xor
iret
out
and
js
mov
add
sub
push
mov
pushf
xchg
cltd
xor
pop
add
pmaxub
xchg
sarl
sub
imul
scas
pushf
out
lds
sbb
cs
outsl
shl
repnz
push
hlt
jo
packsswb
mov
pop
sbb
test
jmp
and
xorl
sub
rcr
cmp
divl
stos
imul
sti
mov
sub
mov
mov
push
mulb
or
enter
daa
adc
cmc
jno
jne
jl
movsb
mov
rcll
mov
movsl
idivl
lahf
mov
push
rcll
test
and
cmpsb
out
fcompl
mov
repz
inc
cli
xor
fchs
loope
dec
mov
cmp
mov
ds
icebp
adcb
dec
add
sbb
imul
jns
pop
xor
pop
mov
sub
inc
adc
sti
mov
lcall
test
mov
and
addr16
push
outsb
aad
addl
mov
aaa
mov
or
mov
jns
mov
jnp
and
fists
cmp
call
mov
sarl
mov
sbb
sbb
pop
sahf
inc
sahf
pop
cmc
sub
lds
popa
lods
jbe
push
mov
stc
mov
cmc
les
sub
mov
mov
lcall
test
stos
mov
rorb
or
bound
dec
inc
test
pop
rep
lret
adc
loopne
imul
test
daa
dec
in
sbb
push
ss
push
mov
dec
sti
test
mov
add
aad
pushf
dec
nop
xor
cld
dec
xchg
stc
iret
inc
add
mov
sbb
xchg
repz
icebp
xchg
cltd
ss
lea
sbb
add
mov
adc
daa
pushf
jle
or
ret
cs
push
dec
inc
mov
mov
aas
aas
rcrb
std
in
dec
fists
push
xchg
jecxz
mov
jg
cmc
std
stc
push
pusha
cwtl
aaa
out
out
inc
repz
addl
sbb
ret
fidivl
mov
mov
addr16
lock
dec
js
jmp
push
mov
or
test
rcrl
jno
insl
xchg
fiaddl
std
jmp
xchg
icebp
mov
test
lret
mov
mov
orl
xchg
sub
fwait
cmp
fisubrs
sti
sub
aam
jg
ret
fs
test
and
push
in
mov
xchg
fs
leave
popa
lahf
mov
lcall
jnp
xchg
mov
aas
in
dec
xor
add
int3
jnp
mov
cli
mov
aas
outsb
push
ljmp
test
bound
sbb
shll
push
aaa
stos
pop
cld
mov
push
std
lods
add
and
and
xor
loopne
or
subb
cmp
mov
or
mov
fists
ja
xor
sti
test
or
stos
in
outsl
or
push
pop
or
jne
jae
mov
adc
ret
jecxz
jns
cs
out
mov
push
xor
lret
sub
fcoml
cld
jp
jle
mov
idivb
in
xor
loopne
in
and
pusha
push
mov
sbbb
sbb
fiadds
push
fldcw
mov
aam
sub
and
stc
loop
lret
and
mov
jmp
ret
mov
inc
and
dec
push
jnp
mov
cmc
rolb
push
mov
fcmovb
fistpl
sbb
xchg
dec
imul
add
hlt
aad
rorb
mov
rolb
sbb
hlt
mov
mov
inc
add
call
aaa
and
js
sbb
or
cmp
pop
pop
dec
jb
fists
xorl
lret
jecxz
and
stc
and
imul
fists
push
test
lock
in
mov
data16
adc
cmp
fmul
jno
cli
in
jl
sbb
dec
inc
test
push
mov
movsl
sub
je
lahf
stos
dec
loope
stc
mov
dec
push
in
pop
ret
inc
sub
xor
pop
sub
hlt
in
pop
test
gs
insl
mov
jle
mov
jmp
ret
gs
mov
in
xorb
sub
add
popa
insl
xor
mov
dec
insl
cmpsl
int
in
sub
pop
jne
dec
pop
lahf
push
into
insl
int3
fcompl
pop
sub
jge
cmp
addb
jl
jg
sub
std
mov
jb
outsb
mov
and
or
push
mov
ror
fsubs
sbb
lret
xor
mov
xor
xchg
call
jnp
xor
xchg
cmp
loop
jbe
mov
cmp
jns
shlb
insb
or
mov
xchg
icebp
pop
cli
dec
and
data16
mov
into
mov
gs
fcoml
cmp
push
cmp
scas
adc
xor
add
andl
sbb
xchg
xlat
jae
lahf
sub
sarb
in
clc
sub
sti
xor
dec
and
lods
aad
ret
pmovmskb
dec
neg
push
inc
adc
mov
rep
out
xchg
pop
jecxz
lea
into
mov
jns
mov
sahf
push
adc
std
sbbb
outsb
cs
inc
inc
cmp
aas
les
sub
je
stos
mov
movb
xchg
add
flds
cs
fcomi
ljmp
ret
lock
repz
lret
mov
les
lock
dec
shr
call
pop
insl
jge
rorb
jg
cmpsl
adc
jecxz
xchg
mov
cld
push
push
in
mov
fsts
mov
mov
pushf
sbb
repnz
aam
dec
and
repz
sub
outsb
fnstsw
cs
ljmp
jbe
mov
pop
mov
or
pop
mov
cmpsb
ss
ldmxcsr
cltd
ret
mov
dec
mov
cmp
push
lods
mov
aam
mov
cli
aam
sub
sar
mov
jg
imul
add
mov
movsl
cmp
xor
or
dec
xchg
xor
jno
mov
mov
repnz
cmpl
dec
out
insb
mov
or
lods
adc
mov
sbb
jno
mov
das
jmp
in
daa
repz
mov
mov
sub
xlat
xchg
dec
addr16
cwtl
jp
jns
mov
lds
mov
rcll
pusha
test
mov
int
rdmsr
or
out
outsb
out
rcl
popf
daa
fwait
out
shlb
stos
xchg
sub
and
xchg
out
jle
xchg
pop
push
xor
pop
pop
iret
movsl
rcrl
pop
jno
mov
insb
jae
mov
push
ds
or
ds
sbb
fidivl
loop
outsl
in
sbb
jecxz
imul
popf
scas
bound
fcmovb
fs
insb
mov
jns
sahf
leave
jbe
mov
arpl
sbb
daa
or
push
popf
push
aaa
jecxz
inc
or
sti
rolb
addr16
xchg
int3
and
adc
mov
mov
jo
adc
scas
mov
adc
movsb
xor
int3
dec
jbe
adc
jo
lods
enter
daa
adc
push
add
jno
mov
pop
dec
scas
mov
fisubl
jo
xchg
lahf
leave
sub
push
int3
movsb
fldt
mov
mov
sbbb
xchg
js
sbb
pop
ret
shlb
jl
loope
mov
sub
xor
ds
mov
adc
xchg
cmp
fisttpll
addb
sbb
xor
mov
xor
adc
push
icebp
push
int
addr16
std
sbb
mov
and
pop
mov
inc
test
xor
lret
cmpb
or
hlt
or
jo
aad
push
push
movsl
mov
cmp
pop
add
and
addr16
inc
shrl
sbb
mov
cmc
mov
lock
pop
and
sub
stc
sub
loop
adc
add
ss
std
int
dec
shll
push
sub
in
cmpb
pop
jecxz
cmp
or
or
jle
into
outsl
inc
loopne
push
push
mov
pop
xor
sub
pop
out
or
sub
cmp
sub
push
stos
cmp
xor
mov
mov
dec
jmp
mov
arpl
inc
sti
jecxz
sar
inc
jno
aad
dec
mov
dec
push
leave
inc
sub
push
mov
jns
sbb
movnti
sti
ljmp
iret
test
or
mov
cs
jnp
mov
mov
aas
jge
test
dec
mov
jo
lods
and
jecxz
mov
movb
cmp
ret
mov
ja
xor
popf
dec
sbb
push
mov
mov
lock
pmuludq
jnp
fisubl
aas
cmp
cmp
add
pop
sbb
insl
movsb
stc
dec
repz
mov
insl
inc
sar
xor
pop
lret
mov
mov
and
mov
sti
mov
xor
cmp
aam
jo
ret
subb
frstor
clc
int3
scas
addr16
loop
ss
add
inc
sbb
dec
jge
push
addl
add
dec
cltd
cli
data16
adc
stos
mov
jge
push
jo
mov
popf
test
xchg
loop
sbb
call
xchg
pop
fildll
shrl
int3
xchg
pushf
add
pop
stos
in
incl
xor
mov
pop
mov
cmpsb
dec
and
adc
cmp
mov
dec
loope
and
lret
je
movsl
fwait
int
and
pop
adc
jne
sub
mov
fsubrs
out
adcb
jns
int3
nop
in
icebp
push
xchg
out
rorl
push
loop
sub
shrb
cmpb
cs
mov
mov
cmp
dec
loope
adc
pop
sbb
inc
ret
sbb
rcr
xchg
lret
jmp
jo
icebp
addl
out
cld
and
sti
push
cmp
sar
stos
pop
sbb
mov
pop
insb
sbb
jle
pop
push
inc
push
jl
jno
pop
cmpsl
sub
add
push
ret
cld
pop
test
movl
test
or
mov
test
fisubrl
repz
xchg
int3
xchg
sbb
or
scas
vsubsd
add
imul
dec
scas
insl
repnz
scas
jne
in
es
hlt
push
aas
mov
ror
inc
pop
nop
jge
lret
or
aaa
mov
add
mov
pop
mov
pop
insl
xor
mov
jne
and
mov
movsb
sarb
jbe
shrd
inc
or
lock
sub
adc
into
cmp
jo
jl
mov
push
jp
shll
or
lods
lahf
call
fcoml
fs
push
andl
cmpsb
outsl
and
pop
js
stos
js
out
pop
add
push
pop
ret
loope
pop
and
cmp
pop
ds
adc
outsb
dec
call
adcb
sbb
popa
push
xor
jbe
shr
add
jl
pop
sub
leave
pop
js
jecxz
mov
push
jl
inc
fdivl
mov
test
sbb
xchg
lock
mov
dec
orb
movsl
xor
in
loopne
test
xchg
cmp
sbb
sbb
pop
mov
adc
pop
stos
sahf
lods
dec
cmc
jle
mov
outsl
lock
loop
loop
stc
in
frstor
sub
pop
nop
xorl
xor
inc
out
aaa
out
cli
mov
sbb
das
mov
mov
into
push
es
pop
ss
pop
push
dec
sti
adc
loop
mov
out
data16
sub
cmp
and
icebp
mov
sub
mov
mov
into
lea
xchg
sub
add
nop
dec
mov
lock
cmp
mov
les
xor
mov
xchg
loop
scas
lea
xchg
call
ja
pop
pop
subb
jb
xor
jg
pusha
jmp
negl
ja
pop
inc
inc
pop
scas
inc
lea
sbb
sbb
mov
dec
sub
shlb
and
inc
pop
repnz
mov
out
cwtl
push
xchg
ja
imul
push
or
inc
xor
push
push
hlt
pop
ja
lea
push
pop
mov
xor
lock
mov
rorl
lahf
push
insl
dec
pop
es
out
jno
cmpsl
psrlq
mov
inc
and
cld
pop
test
lret
aad
xchg
mov
aad
pop
clc
pusha
clc
rorb
or
sub
cmp
push
xchg
fisttpll
ret
hlt
xchg
and
stos
ljmp
shrd
lcall
add
outsb
in
pusha
idivl
cltd
xor
les
xor
push
test
data16
xchg
push
sahf
shll
jo
stos
sub
out
das
shl
add
je
je
jecxz
ja
jmp
pop
or
int3
mov
sub
pop
mov
test
test
adc
mov
inc
pop
sub
fwait
cld
fwait
rcrl
add
mov
pop
cmp
pop
loopne
bound
adc
xchg
outsl
test
movsl
cltd
stos
or
push
pop
outsl
xchg
mov
jno
mov
xchg
mov
les
shll
jge
add
xchg
popf
or
jmp
cmp
jge
aad
push
out
fwait
sub
jne
ss
xchg
pop
xlat
stos
jp
and
in
insb
test
das
jnp
cmpsb
sti
jle
jg
push
ret
push
call
iret
arpl
cwtl
pop
ffreep
fildl
mov
popf
imul
mov
push
aaa
jne
fcmovu
or
xchg
sbb
add
pop
ret
aas
scas
sub
or
mov
add
mov
pop
je
leave
mov
mov
inc
or
or
loopne
aaa
popa
inc
or
shlb
stc
dec
sbbb
cmp
xor
push
or
mov
cmp
lods
xchg
add
in
repnz
daa
movlps
mov
popa
and
dec
lea
push
pop
popw
movsl
inc
inc
xchg
and
cmc
cmp
dec
and
pop
push
bound
sahf
inc
fldcw
cmpsb
repnz
jns
lahf
jno
js
inc
xchg
pop
inc
xchg
pop
push
out
cld
loope
mov
scas
cmp
in
ds
in
adc
dec
ja
fwait
es
subb
sbb
sbb
add
pop
mov
les
ror
jecxz
fisubrl
repz
adc
notl
push
rcrl
loop
sub
adc
popa
lods
push
mov
jg
fcoms
loop
int3
mov
mov
and
or
push
stos
push
sbb
aam
out
divl
ljmp
fidivl
mov
jo
sbb
jne
rcrl
xchg
xor
popa
movsb
outsl
iret
enter
das
lods
stc
fwait
xor
fs
pop
or
pop
xor
lods
sbb
jae
dec
jge
out
xor
mov
cmp
mov
leave
sbb
gs
loopne
inc
add
imull
adc
in
adc
xlat
jo
sbb
mull
cmp
xlat
xor
sub
inc
mov
cmp
cmp
lea
aad
mov
adc
mov
cli
jle
les
mov
xchg
movsl
mov
je
icebp
fbld
pop
xor
in
outsb
pushf
sub
lods
jmp
pushl
inc
int
stc
inc
test
fnstsw
mov
sub
dec
mov
adc
jecxz
insl
add
mov
adc
inc
mov
pusha
push
imul
repnz
sbb
cmp
lock
pop
push
das
lods
cmp
js
adc
xchg
es
rcr
cmp
outsb
insl
xor
enter
mov
mov
sbb
mov
lret
inc
cmp
mov
movsl
and
repz
pop
pop
lret
fistl
pop
aam
mov
ret
mov
addr16
mov
and
inc
imul
mov
jo
mov
lods
hlt
shlb
mov
push
aaa
xchg
mov
add
int
push
push
dec
mov
lret
divb
inc
test
nop
imul
jbe
sar
sbb
pop
xor
dec
mov
add
scas
incl
pop
or
xor
adc
lcall
ja
ljmp
es
sub
lods
jne
jbe
mov
out
inc
out
ds
bound
stc
test
xchg
lea
mov
xchg
sbb
enter
outsb
inc
jp
mov
adc
mov
fwait
ja
cmpsl
pop
jge
addr16
jp
jecxz
sub
xchg
jo
shr
hlt
out
xchg
push
xchg
cmc
andl
je
pop
popf
pushf
cmp
shrb
stos
in
sbb
loope
mov
jnp
lods
jle
in
push
or
xor
push
add
ret
sbb
push
bound
dec
lods
cmpsl
jae
ja
push
xchg
out
xchg
cmp
scas
sbb
mov
inc
fimull
or
adc
imul
and
lds
test
shlb
inc
bnd
push
leave
fcmovnb
cmp
out
adc
lock
inc
or
mov
movsl
aaa
and
push
or
xor
int3
in
xchg
stos
lock
pop
xor
jno
inc
scas
push
pop
lcall
popf
pop
movsb
hlt
fcoms
xchg
in
and
or
cmp
mov
jno
jbe
jl
inc
jl
cld
cmc
adc
inc
mov
movsl
dec
adc
outsl
lahf
es
push
inc
call
mov
inc
push
mov
pop
cwtl
sarb
ss
pop
orb
stos
ss
push
push
test
mov
idivl
or
shlb
cmp
jl
in
sbb
cld
add
mov
xor
xor
int
inc
shrl
outsb
cmp
pop
jbe
das
lcall
xchg
fmull
fsubrs
adc
insl
outsb
aad
test
mov
sbbb
mov
and
mov
outsb
mov
punpcklwd
add
cltd
cmp
aaa
ret
imul
mov
inc
ret
jno
sbb
jns
sahf
je
adc
xor
add
scas
sbb
loop
mov
stc
push
imul
mov
adc
js
cmp
inc
subl
mov
cli
sbb
xchg
cmp
mov
into
sbb
pop
imul
loopne
fwait
rcrb
xor
pop
mov
jmp
insb
popa
and
lods
sbb
data16
pop
sbb
mov
loope
cmpsl
insb
test
insb
stos
pop
in
movsb
ds
lock
aad
aas
mov
jb
inc
inc
popa
stos
repz
outsb
les
in
out
insl
xchg
push
or
insb
mov
stc
pop
call
das
sub
lret
out
cmp
or
inc
ret
fucom
aas
pop
ja
jb
cmp
jae
lea
mov
add
cwtl
ficoms
mov
xor
sub
fldt
xlat
std
mov
sub
push
mov
clc
mov
mov
sbb
imulb
add
sbb
cmp
xchg
icebp
repnz
ret
cld
mov
into
lret
mov
xor
int
fsubl
ss
je
scas
dec
inc
sub
and
aam
shlb
aaa
adc
add
clc
jge
xchg
lahf
push
ss
jl
pop
clc
int
jl
inc
mov
pop
cmp
push
adc
daa
cvtpi2ps
add
inc
in
xor
xlat
inc
push
mov
dec
loope
stos
dec
xchg
dec
sub
push
in
pop
loopne
jb
or
dec
add
stos
iret
cmp
xor
fst
xor
sahf
adc
scas
sbb
xor
shll
mov
scas
cmc
or
cld
xchg
fwait
pop
jp
push
inc
inc
push
lock
mov
cwtl
sti
out
sbb
gs
jns
xchg
in
dec
sub
sbb
bound
ret
pop
ds
mov
xor
mov
lods
pop
mov
outsl
jo
dec
mov
lret
stc
andb
dec
fistps
bound
xchg
roll
xor
sub
divl
sub
ret
mov
mov
and
clc
aam
insb
pop
cmp
jle
cmp
ret
adc
into
jae
and
mov
dec
mov
or
xchg
lret
push
dec
mov
push
xor
pop
fcoms
sub
imul
pop
scas
out
pop
mov
xchg
imul
repnz
push
xor
mov
inc
adc
jge
or
fucomip
imul
ret
mov
lods
pop
inc
sub
repz
int3
push
out
xor
jl
cmp
push
push
movsb
popa
nop
mov
dec
inc
jbe
mov
dec
enter
daa
or
lods
pop
jno
scas
mov
jo
imul
and
inc
movsl
push
inc
jp
fdiv
ja
inc
iret
jnp
sbb
push
in
test
sub
cmpsb
clc
repnz
pop
in
mov
test
mov
xor
sbb
ret
mov
push
pop
sub
ficoms
incl
pop
adc
orb
and
push
cli
xor
and
int
push
mov
pop
cmc
cmp
lcall
pop
fdivl
lea
daa
rep
test
pop
out
jno
pop
mov
pop
js
shl
cmp
pop
add
mov
inc
cmp
dec
jo
imull
push
std
rorl
push
mov
lods
xor
pop
dec
jb
shll
jg
lea
sbb
stc
or
fs
pop
adc
add
lods
out
mov
in
in
mov
sub
mov
stos
cmp
pop
fwait
or
jge
gs
jp
loop
inc
pop
lods
push
lock
dec
fcoms
aas
movb
lock
cmp
lret
sbb
lret
xlat
scas
jg
sub
push
std
mov
andnps
roll
call
dec
rorl
or
push
out
repz
mov
sub
testb
and
hlt
push
out
pop
fwait
loopne
adc
rcrl
pop
fldt
mov
mov
in
stc
cmpsl
dec
jb
test
dec
mov
nop
je
dec
mov
je
out
xchg
int3
and
jecxz
gs
cltd
jne
mov
fildll
orl
mov
pop
pusha
imul
lock
or
and
in
mov
cmpsl
pop
cmp
ja
dec
imulb
xchg
insl
add
das
dec
fbstp
out
mov
cwtl
gs
fnstsw
cmp
and
add
aam
jb
sub
inc
pop
push
test
rolb
or
aam
inc
mov
mov
xor
fldl
jg
clc
mov
leave
sub
push
push
pop
popa
sub
mov
mov
mov
out
pop
push
in
xor
jns
idivb
jg
test
push
mov
sub
push
jl
test
test
lahf
sahf
xchg
int3
sbb
aam
pop
mov
out
stos
clc
test
pop
cmp
jl
lds
rorb
into
jecxz
mov
pushl
jl
mov
mov
cwtl
mov
sub
push
rorb
andb
cltd
loopne
and
xchg
fwait
mov
inc
push
jmp
dec
xchg
mov
push
adc
cld
loope
bound
sahf
jns
mov
in
fs
sub
aam
pop
sbb
sub
mov
push
lock
in
dec
mov
add
mov
or
dec
insl
xlat
in
mov
pusha
mov
push
fistpll
int
loop
test
addl
sbbb
mov
push
dec
sbb
stos
shr
fbld
lsl
insb
lds
or
in
fistl
or
adc
scas
jae
orb
pop
test
arpl
testl
pop
dec
out
movsl
repnz
repnz
hlt
xchg
jnp
and
adc
imul
lret
jno
lds
mov
shr
dec
mov
sbb
pop
leave
leave
in
push
hlt
jge
aas
arpl
sub
jge
cmp
sbb
fwait
shll
sahf
je
or
das
add
int3
mov
jae
fidivs
push
lock
sbb
adc
andb
cltd
iret
cmp
jg
push
pop
pop
movsl
jbe
mov
inc
enter
daa
or
fdivrs
push
pop
fidivs
or
dec
fiaddl
push
push
and
ja
test
jmp
dec
test
scas
sbb
inc
xchg
jl
jnp
sbb
xchg
mov
xlat
int
lea
loope
loope
sbb
sub
mov
sarl
mov
adc
fisubrl
mov
out
fistps
jb
inc
add
push
lea
xor
sbb
sbb
sub
pop
je
fcomps
fcomps
fsubl
jge
lock
pusha
outsb
mov
test
insl
movsl
adcb
jg
cmpsl
jo
int3
xchg
mov
lcall
imul
lods
dec
cmp
add
pop
dec
lret
aas
rcrl
js
mov
push
mov
lcall
outsl
insb
rcrb
loop
push
lcall
jo
adc
add
incb
mov
dec
xchg
jmp
nop
cli
jg
push
xor
fmull
push
inc
ror
sub
pop
loopne
mov
int3
pop
pop
adc
scas
push
adc
jno
add
pop
pop
mov
sbb
add
fnstcw
icebp
outsl
mov
jp
stos
sti
dec
push
int3
jp
mov
es
xor
fstps
xor
movsb
xchg
out
jae
lea
add
bound
out
dec
jo
adc
pop
ficomps
scas
test
add
into
inc
stc
iret
mov
cwtl
fsubrl
inc
add
dec
add
imul
xchg
adc
cwtl
push
out
mov
stos
xchg
mov
jg
andl
pusha
mov
out
jno
insb
cwtl
lods
lock
add
add
dec
mov
push
xlat
outsb
and
idivl
rol
imulb
scas
xor
insl
out
aam
fiaddl
cmpsl
or
mov
mov
sbb
mov
mov
and
les
pop
je
aam
push
pop
dec
sub
add
nop
sbb
cmp
loopne
clc
repz
xchg
sbb
faddl
popa
inc
test
lods
xor
ds
fists
push
enter
call
mov
cltd
or
push
cmp
aas
filds
dec
dec
cmp
test
test
and
roll
call
mov
out
in
mov
add
add
dec
xchg
lcall
fidivs
aaa
push
mov
add
xor
lods
repnz
mov
fnstsw
jecxz
push
ja
and
jmp
ds
sbb
fwait
mov
jns
jle
adc
fstpt
sti
idivb
nop
jns
mov
in
rorb
jp
scas
mov
mov
or
sahf
insl
jp
and
mov
js
mov
dec
cmp
addl
fistps
int
jmp
pop
sub
dec
inc
out
mov
cmpl
inc
arpl
and
push
xchg
insb
xor
cmpsb
push
fs
int3
xor
mov
aaa
iret
fisttps
icebp
pop
mov
pushf
fs
pushf
in
rclb
or
and
sahf
fisubl
jb
sbb
xor
imul
push
mov
mov
movsl
pusha
mov
mov
imul
hlt
enter
or
push
jge
push
sbb
aaa
pop
cmpl
int3
movsl
adc
pop
movsb
jge
ficoms
xor
sub
scas
repz
dec
and
jmp
insl
movsb
ja
mov
jbe
dec
in
fimull
aam
or
int3
jno
mov
sahf
xchg
fimull
adc
loopne
pop
xlat
add
adc
lahf
cmpl
test
jp
dec
inc
adc
pop
outsb
pop
cmp
js
test
pop
cmp
inc
xor
dec
aaa
or
cmp
xor
push
mov
shlb
or
xorb
fiaddl
lahf
repz
popa
mov
and
sub
mov
repz
push
das
jg
fmull
in
sub
push
inc
outsb
in
or
cmpsl
jae
subb
jg
sahf
loop
loopne
imul
and
xor
mov
fstpt
rcrb
lret
jmp
mov
pop
pop
sahf
pop
rorl
cmc
popa
mov
xor
xor
stc
ja
push
adc
das
sub
ss
push
cli
mov
shll
add
leave
ja
or
rcl
subb
sbb
fs
jbe
imul
imulb
aas
in
sbb
inc
js
xlat
sub
push
sub
inc
xor
in
sar
std
pop
sbb
aad
or
stos
dec
mov
inc
lcall
les
push
leave
sub
jns
dec
call
repnz
rcrb
mov
adc
movsl
push
jmp
aad
mov
jmp
out
aas
aaa
adc
push
dec
jl
xchg
je
fsts
jecxz
gs
xchg
enter
je
cwtl
paddsw
mov
stc
push
mov
and
dec
fwait
mov
mov
mov
out
lock
and
jecxz
mov
lds
leave
and
in
rcll
sti
ljmp
insb
in
cmpsl
or
mov
ja
inc
cld
xor
lcall
fdivrs
mov
xchg
xchg
xor
daa
mov
sub
and
loope
ror
fisttpll
pop
clc
cs
xchg
pop
inc
sub
cmp
adc
push
xor
mov
and
add
add
es
cmova
sbb
mov
in
test
dec
mov
xchg
insl
push
add
dec
mov
pop
test
incb
xchg
and
push
add
pop
pop
repz
loope
jae
rcl
out
push
dec
xlat
add
sti
cmpsl
or
cmp
xor
les
mov
mov
mov
sahf
add
fs
xchg
je
inc
sbb
or
jmp
push
push
das
or
xchg
mov
or
out
mov
lock
add
in
xchg
jmp
mov
outsl
in
sub
or
fdivrs
pop
jmp
int
xlat
mov
mov
pop
push
in
pop
fs
out
in
jp
ficoms
sarb
xchg
xor
andl
lret
fidivrl
push
int3
fcoms
stos
mov
lret
adc
fwait
or
jnp
imul
sub
stc
push
es
adc
outsl
iret
mov
pop
repnz
jae
xchg
or
fwait
sbb
mov
ficompl
or
shlb
daa
sbb
dec
add
cld
es
pop
jbe
lds
pop
shlb
mov
push
rorl
leave
mov
sbb
adc
mov
sbb
inc
sbb
jge
dec
daa
sbb
push
aaa
sbb
fisttps
mov
xlat
add
push
mov
fdivp
sbbb
fstp
push
scas
rorb
inc
cmp
dec
outsl
movsb
add
push
mov
dec
sbb
shrl
daa
or
cmp
xor
jl
lods
scas
dec
mov
fs
gs
jo
mov
outsl
gs
inc
push
sbb
movsb
dec
inc
cmpsb
sbb
push
js
insl
pop
jl
fsubrs
pop
push
loope
jbe
sub
pop
out
cmp
idivl
xchg
movsb
out
cwtl
popa
sbb
nop
outsl
sbb
enter
loopne
dec
add
inc
fnsave
iret
pop
scas
arpl
fmul
out
dec
sub
mov
lcall
lcall
add
outsb
push
add
ficoms
orb
mov
mov
aam
and
push
xchg
mov
sbb
jnp
mov
lret
sub
int
sub
fisttpll
add
xor
xchg
loop
mov
mov
add
addr16
test
lods
fwait
ret
xor
out
out
cli
in
xchg
xor
mov
cmp
hlt
or
cmpb
inc
xchg
pop
or
cmpsb
jae
imul
rorb
call
adc
int3
scas
and
jnp
fcmovbe
imul
sub
outsb
mov
push
nop
stos
sti
lods
jg
cmp
xchg
aad
cld
inc
nop
out
mov
inc
lods
rorl
or
iret
mov
xchg
je
and
loopne
add
pop
loop
jno
mov
adc
pushf
subl
ja
jo
mov
das
adc
jb
xchg
mov
repz
pop
je
popf
push
jecxz
int
lcall
cwtl
lret
mov
lret
mov
sub
ja
push
rcrl
imul
ret
mov
jl
dec
and
es
sbb
aaa
jl
mov
cs
shlb
sub
or
lret
fcmovnu
icebp
dec
push
popa
cld
pop
dec
out
lret
outsl
fisubrl
and
cli
cmp
sar
cmp
sub
xchg
dec
ret
imul
fnsave
pop
clc
imul
ljmp
aad
or
sbb
mov
cmp
push
jle
inc
xsha256
cmpsb
push
lret
leave
ss
jnp
rolb
mov
push
lds
out
sbb
or
shll
pop
mov
stos
lds
stc
add
push
sbb
lcall
add
icebp
scas
adc
mov
mov
das
stos
pop
pop
inc
clc
ja
test
dec
xchg
add
cs
loope
dec
fwait
push
sbbl
jne
test
out
cltd
pop
cmp
sbb
es
and
lret
xchg
sbb
movsl
mov
enter
test
scas
gs
addr16
cmpsb
mov
aam
mov
sub
dec
push
mov
in
inc
add
adc
xchg
popl
mov
subl
fucom
add
sbb
pop
mov
sbb
jge
stos
sub
pop
and
insb
push
mov
jle
sub
inc
outsl
adc
lret
iret
popf
xchg
and
pop
sub
inc
inc
test
ss
push
jmp
or
push
push
push
inc
xor
fimull
pop
in
sbb
inc
pop
imul
pop
mov
push
sarb
mov
adc
leave
cs
aad
pop
filds
arpl
jnp
inc
sbb
icebp
jge
sub
sbb
mov
aaa
cmp
mov
popa
add
jnp
inc
pop
add
pop
ficomps
cmpsb
jo
xlat
inc
scas
mov
push
and
daa
addr16
xchg
push
movsb
lea
push
or
sti
jbe
rclb
test
iret
enter
daa
or
jno
cli
fstpt
das
dec
daa
mov
scas
jae
movsl
insb
divl
shll
test
adc
je
xor
and
mov
and
push
daa
mov
sub
xchg
cmp
stos
mov
mov
mov
fbstp
shrb
ret
aad
nop
sbb
jl
pop
pop
push
add
aaa
cli
xor
pop
mov
dec
addb
test
lock
pop
fsubl
in
mov
lock
test
ja
jg
cltd
mov
mov
iret
and
inc
push
mov
xchg
cmpsb
fdivs
sbb
imull
mov
lock
jle
and
cmc
out
dec
pop
xor
dec
aas
outsl
or
mov
gs
mov
fs
mov
adc
mov
fistpll
mov
xchg
cli
sbb
adc
sub
arpl
into
xchg
mov
mov
mov
dec
adcb
jns
pop
imul
movsb
add
xchg
inc
xchg
es
mov
adc
stos
add
mov
mov
mov
and
nop
ret
dec
dec
cltd
xchg
inc
rcr
flds
les
and
xchg
aaa
pop
repnz
add
rcrl
inc
pop
addr16
push
adc
xchg
sahf
pushf
sub
test
sbb
cs
pop
inc
mul
roll
dec
aas
jne
lahf
jb
stos
jp
push
jmp
add
mov
dec
popf
xchg
cmp
xor
test
mov
testl
mov
mov
lods
adc
das
mov
divb
mov
and
mov
aad
ja
out
pushf
imul
lret
jbe
cmpsl
or
into
mov
and
lahf
inc
lret
ficoms
jno
mov
fnsave
xchg
mov
not
int
mov
aam
push
stos
ret
cli
popa
es
xor
clc
movsb
sbbb
fcmove
sub
and
lods
jbe
fwait
mov
dec
pop
js
sbbb
syscall
fdiv
add
and
mov
or
adc
push
mov
test
lods
daa
xchg
scas
sbbl
sub
or
inc
pop
aaa
sbbl
add
xor
xor
sub
or
sbb
aaa
cmp
xchg
mov
inc
ja
std
lock
jns
and
cmpsl
imul
mov
push
jne
fidivl
mov
mov
adc
out
js
xor
jns
loope
in
push
movsl
xchg
addr16
mov
sub
stos
sbb
addr16
repnz
mov
mov
jge
lcall
in
xchg
test
fistpll
sarb
mov
mov
cmpl
js
xchg
mov
stos
lahf
dec
and
pop
insb
jno
std
jnp
loop
jle
inc
mov
adc
idiv
iret
cld
sahf
mov
pop
pusha
test
jg
jae
es
sbb
xchg
xchg
xchg
dec
inc
mov
aas
fcmovb
jo
xchg
jle
sbb
push
shrl
mov
lds
roll
sbb
repnz
leave
movsl
repnz
arpl
leave
inc
inc
pop
mov
jge
out
fwait
sbb
add
or
and
int3
pop
push
pop
xor
xor
xchg
jmp
data16
mov
sub
jbe
test
pop
enter
daa
or
cmp
adc
jno
out
jl
pop
or
sbb
xchg
jbe
movsl
jae
xchg
and
fs
lahf
loopne
fists
jmp
test
fcmovnbe
add
cmpsb
xchg
mov
inc
or
push
cmpsl
jg
nop
pusha
insb
sub
xchg
cmp
fcoml
inc
lds
sub
insb
sbb
popf
add
cmp
jmp
pop
push
sub
jmp
lcall
push
fmull
shrb
lods
and
cmp
movsl
cmpb
shlb
and
mov
das
les
pop
dec
pop
push
rcl
cmp
icebp
aaa
cmp
imul
xor
mov
bound
pop
sub
sahf
inc
shrl
dec
popa
pop
outsl
call
and
pushf
aas
in
fs
outsl
adc
out
lods
imul
mov
dec
sbb
push
cmp
rcl
xlat
into
push
dec
gs
ds
jmp
add
imul
push
les
sbb
cmp
imul
mov
xor
sti
or
lahf
aad
mov
nop
popf
xchg
mov
movsl
fadds
pop
pop
fnstcw
les
pushf
xchg
cli
mov
movsb
mov
outsl
add
adc
mov
pushf
xlat
mov
or
js
inc
jle
and
movsb
outsl
aas
adc
jb
cmc
rorb
dec
stos
je
and
mov
test
std
es
jbe
mov
std
fisttps
xorl
insb
pop
lea
mov
insl
lock
cmp
das
adcb
jge
lret
in
xchg
and
movsl
or
add
idivb
inc
loopne
pop
shlb
mov
sub
lret
dec
jbe
and
xor
pop
lock
mov
cmp
shrb
mov
in
dec
xchg
dec
ffree
dec
out
clc
fbstp
xchg
sbb
fs
shrb
idivb
leave
inc
fstl
daa
jg
imul
test
data16
mov
dec
dec
call
loop
xchg
or
rcrl
je
loop
arpl
inc
decb
add
iret
add
fcmovnb
mov
addl
xor
mov
push
xchg
divl
mov
iret
jge
ja
clc
lods
dec
insb
sub
inc
inc
inc
testb
ret
jne
push
sbb
jne
inc
test
out
push
fists
dec
inc
jns
inc
stos
in
aam
xchg
mov
fdivl
fisttpll
or
testb
gs
in
push
shr
pop
in
mov
test
dec
fdivl
shlb
and
xlat
ret
lock
xor
mov
flds
or
or
mov
mov
stos
adc
and
std
aam
bound
xchg
pop
jecxz
sti
pop
aas
adc
cmp
ret
mov
inc
lcall
push
fcoml
bound
loop
or
std
inc
das
imul
xchg
aad
push
sbb
mov
jo
inc
and
vpaddd
shlb
mov
mov
je
sbb
xor
hlt
mov
arpl
pop
inc
and
jge
xchg
xor
sahf
push
xchg
aaa
pop
fsub
or
or
pop
stos
pop
pusha
dec
jns
loopne
jb
in
leave
jno
out
scas
outsl
lret
sbb
inc
xor
cmp
test
xchg
faddl
or
jbe
mov
daa
pop
mov
jno
test
dec
add
insl
push
and
es
mov
dec
test
cmpsb
sbb
push
sarb
or
mov
js
push
aad
cmp
xchg
cmpsl
or
pop
lock
outsb
or
ds
mov
adc
and
sub
test
push
add
pop
mov
cmp
inc
lods
add
sub
adc
pop
out
push
push
lcall
int3
fdivl
pop
mov
test
jne
sbb
sub
movsl
and
lcall
and
mov
cmp
lods
call
popa
lret
pop
rcll
xor
mov
inc
sahf
jmp
je
xor
xlat
insl
loop
in
xor
push
idivb
adc
imul
mov
fisttpll
out
xor
xor
movsb
pop
or
pop
into
dec
jmp
cmc
loopne
aaa
mov
adc
mov
lods
adc
push
add
adc
inc
push
ja
sub
adc
pop
mov
int3
mov
mov
xchg
aas
aas
sti
mov
cld
xor
push
and
nop
js
mov
inc
out
jl
mov
rol
lahf
lods
out
repz
nop
ficoml
adc
rol
out
mov
pop
int
das
adc
mov
dec
cs
and
arpl
orb
aas
mov
mov
je
dec
pop
mov
mov
into
popf
mov
mov
jle
cwtl
sti
lret
jl
cmp
orb
dec
inc
data16
fcomi
and
pop
xor
fdivl
fwait
push
das
pop
out
mov
mov
loop
rcll
repz
mov
repnz
rcl
cmpsl
push
cmp
mov
rorl
cld
ffreep
mov
mov
adc
mov
bt
jae
and
cld
lahf
aam
fmul
ret
sbb
dec
fucomp
and
sbb
xchg
pop
imul
lods
dec
lods
cmpl
adc
push
psubd
cli
push
cltd
and
test
mov
xchg
sbb
xchg
dec
pushf
sbb
lret
not
mov
lea
in
xchg
lahf
and
stos
int
add
loopnew
jp
into
xor
or
or
enter
mov
jb
testb
js
pop
mov
ja
js
dec
pop
int3
inc
inc
fiadds
and
mov
mov
jnp
popa
cmp
mov
imul
aad
cltd
jns
dec
sbb
imul
xchg
add
mov
sub
mov
mov
lods
leave
mov
in
cmp
mov
dec
mov
pop
in
push
xchg
js
testb
jmp
pop
pusha
je
fsubr
adc
mov
push
mov
enter
test
dec
and
test
adc
jle
pop
push
push
inc
add
adc
xchg
cwtl
iret
mov
add
pop
into
pop
and
inc
jae
aad
push
lahf
aaa
mov
push
scas
fldcw
es
xchg
xchg
sub
imul
push
imul
scas
mov
mov
jbe
and
repnz
mov
aas
mov
jno
and
and
sbb
dec
aaa
sbb
or
add
adc
int3
cmp
out
pop
sub
fiadds
fnstenv
dec
dec
adc
fimull
mov
add
stc
sub
jbe
fsubrs
pop
sbb
enter
daa
push
dec
cmp
sub
jl
push
nop
dec
je
scas
push
pop
pop
enter
mov
sbb
sahf
push
fnsave
pop
test
jno
nop
inc
loopne
fisubl
loope
js
cwtl
sub
js
xchg
push
ret
mov
fstl
ds
or
sar
push
repnz
adc
push
sbb
xor
out
mov
int
mov
test
outsb
and
lcall
in
bound
sub
jo
test
rolb
lret
mov
cmpsb
iret
mov
mov
and
pop
push
lcall
addr16
insl
lret
ffreep
sub
sahf
sbb
into
xchg
inc
popf
repz
int3
outsl
cmpsb
dec
call
stc
or
fs
popf
adc
dec
inc
lods
aaa
adc
mov
push
xchg
mov
shll
xchg
iret
dec
cmp
inc
mov
mov
push
into
xor
mov
xor
adc
outsb
movsb
imul
sub
into
andb
addr16
sbb
addr16
sub
pusha
pop
and
xchg
in
cld
and
dec
jnp
aad
stc
nop
push
inc
dec
push
ljmp
idivl
repz
lods
pop
xchg
adcb
dec
pop
call
insl
jecxz
pop
adcb
pushf
sub
mov
pop
inc
mov
stos
aas
push
insb
fnstenv
sub
dec
iret
lret
in
adc
fstl
mov
cwtl
mov
cmc
mov
xor
scas
scas
dec
xor
sbb
ficompl
adc
mov
inc
mov
imulb
mov
mov
je
xor
mov
lods
sub
test
dec
mov
mov
div
stos
xchg
loope
or
imul
xchg
mov
mov
xor
push
sub
xchg
jmp
es
mov
fstl
push
pop
xchg
xchg
xchg
jl
ljmp
jg
mov
dec
mov
mov
and
ljmp
add
data16
cltd
push
adc
inc
mov
int
push
shrl
dec
mov
mov
orl
xchg
inc
push
rorl
stos
iret
stos
cmpl
push
xor
add
fsubr
xor
int
or
rorb
mov
mov
ds
rcrl
pop
shll
jl
dec
push
and
inc
jne
fs
pop
inc
fwait
rclb
fbstp
xchg
adc
xchg
bound
sti
dec
in
dec
fcoms
xor
rorb
fwait
lods
aad
cmp
mov
cmp
mov
out
dec
mov
rcll
in
adc
fists
call
mov
sub
out
ret
movsb
popf
sti
sub
mov
pop
ss
stos
clc
in
scas
and
ret
rclb
ficoml
push
mov
popa
adc
std
fs
sbb
mov
addb
add
push
movsb
jae
adc
or
add
ja
fnstcw
jno
orl
pop
pop
data16
push
mov
mov
jmp
mov
pop
push
fcmove
or
jo
gs
je
sub
jge
sbb
jae
xlat
mov
jecxz
jnp
mov
pop
mov
push
xor
movsb
cwtl
inc
scas
sub
adc
movsb
mov
adc
bound
cs
daa
add
mov
nop
jl
xchg
fwait
dec
jecxz
outsl
push
cmp
push
movsl
mov
test
mov
xor
mov
fwait
test
cmp
ljmp
loopnew
and
mov
fsubrs
pop
sbb
aad
jno
in
sahf
out
cmp
jl
ds
sub
sti
lcall
push
pop
push
andb
nop
scas
push
add
pop
das
xor
cmp
icebp
int
out
mov
ror
pop
in
ja
lcall
adc
or
adc
outsb
aas
cs
test
into
sti
orb
ret
jg
rcr
rolb
popf
mov
sub
push
push
leave
lods
xor
and
aaa
mull
xor
rol
aas
mov
les
ljmp
cmc
or
insl
xor
pusha
outsl
test
pusha
loop
arpl
stc
rorl
mov
adc
shll
in
mov
mov
outsb
cli
in
mov
insb
xor
cmp
mov
or
adc
gs
xchg
hlt
loopne
cmp
pop
movsl
fs
adc
outsl
push
imul
sbb
push
bound
cmp
sarl
cmp
and
fsubs
pop
push
scas
jmp
insl
aad
xor
nop
cs
xchg
inc
or
icebp
fldenv
stos
xchg
les
or
xchg
inc
in
jecxz
xchg
call
in
cltd
rcrl
push
pushf
adc
fsubrs
fdivrs
sub
aam
iret
cs
outsb
mov
aas
icebp
mov
sub
addb
in
sar
test
pop
sbbl
movsl
nop
mov
push
addl
cmp
push
imul
fucomp
xor
push
pop
inc
das
sbb
dec
dec
mov
lcall
shr
pushf
mov
insl
cmp
mov
mov
jl
add
int
push
mov
cmp
or
pushf
sbb
or
xchg
mov
dec
shr
sbb
jmp
jge
rcl
stos
test
shlb
cmp
clc
nop
leave
scas
xchg
adc
ljmp
daa
lods
and
fistpll
aam
rcll
jno
vpmacssdd
cwtl
mov
mov
fwait
decb
jle
test
cli
mov
inc
imul
pop
jecxz
shrl
jo
mov
add
imul
or
xor
ss
nop
mov
xchg
add
mov
add
fbstp
add
dec
inc
xor
or
and
fwait
add
push
add
jne
push
mov
mov
jp
hlt
inc
mull
or
in
or
imul
xchg
sbb
or
and
or
loopne
lahf
mov
jne
test
or
lods
scas
xchg
pusha
mov
call
lcall
cmp
mov
xchg
pop
push
popf
and
pop
push
inc
outsb
mov
imul
movl
in
jle
inc
cwtl
push
shlb
pushf
jge
iret
js
dec
ret
sub
ret
mov
xchg
xor
or
jge
push
inc
lods
inc
or
mov
sahf
sbb
cmp
in
test
push
movswl
ret
add
mov
mov
or
cmpl
lret
test
aad
out
loope
sbb
test
lds
bound
add
xchg
popa
int3
adc
in
xor
fmulp
cmp
jo
cli
enter
insb
and
into
imul
mov
inc
int3
mov
cmp
jbe
loop
sub
push
enter
daa
add
mov
jmp
sub
jl
mov
int3
push
push
or
dec
pop
sub
adcl
clc
mov
push
pop
sarl
mov
cmpsb
xchg
fistps
pop
dec
sbb
js
jns
pop
notb
push
loope
in
sub
xor
cmp
sbb
push
sti
adc
mov
mov
ret
cmpb
sub
sub
add
repnz
xor
fstp
int
add
jle
insb
push
sub
push
nop
je
fdivrl
xchg
mov
mov
xchg
sbb
sub
and
and
dec
jl
mov
and
xor
cmp
fnsave
mull
fmul
mov
sub
mov
jae
sbb
in
insb
sahf
shrb
lds
mov
aaa
outsl
fs
loop
in
cmp
js
push
fs
gs
adc
iret
nop
ss
xchg
lods
add
mov
out
daa
pop
lret
inc
mov
cmp
negl
mov
cmc
gs
loopne
pop
das
pop
les
mov
cwtl
movsb
inc
imul
push
frstor
mov
sbb
xlat
in
and
and
sbb
in
shlb
sti
popa
adc
push
push
jae
repz
xor
sub
in
inc
pop
sub
sarb
cld
scas
stc
xchg
push
ljmp
cmp
imul
pop
out
and
xchg
jecxz
ret
fsubp
sbb
inc
lcall
aas
nop
adc
jb
sub
je
sbb
jecxz
shll
lods
adc
ret
cwtl
sub
jge
jne
push
mov
ret
sbb
pop
xchg
fildl
push
lock
jae
das
cld
cs
leave
lahf
xchg
mov
mov
test
insl
pop
lcall
add
mov
pop
mov
cld
pusha
mov
fisttps
adc
xchg
mov
insb
push
cmp
in
mov
imul
adc
es
cmpsl
pop
fstpl
push
lret
int
xchg
adc
js
popa
clc
fstl
mov
testl
fimull
loopne
popl
inc
in
sbbb
incb
nop
repz
cmp
adc
stos
pop
sbb
inc
fcmovbe
mov
inc
lahf
stos
pop
or
shl
gs
mov
xor
jmp
out
scas
pop
clc
mov
int
mov
mov
jle
inc
mov
mov
nop
push
movsb
cmp
mov
or
bound
inc
in
pop
adc
mov
je
jns
sti
or
mov
xor
lds
or
repz
push
out
adc
push
into
fists
fs
adcl
xchg
mov
test
popa
popf
dec
mov
notb
sub
stos
fisubs
and
cmc
xor
adc
jae
jle
and
push
adc
push
xlat
push
mov
test
std
pop
jae
aad
xor
jae
pop
adcl
xchg
movsb
or
clc
loopne
inc
sub
fidivrl
sbb
xor
sbb
dec
add
inc
push
scas
int3
or
vpaddusb
rcr
test
repnz
hlt
and
arpl
fstpt
sbb
mov
xor
push
je
add
pop
cmp
sbb
dec
fisubrs
xor
pop
jno
scas
jmp
or
xchg
mov
les
test
jbe
add
adc
js
add
push
jno
mov
mov
rcrl
push
add
scas
movsl
xchg
mov
and
lret
jnp
cmp
test
shlb
inc
loop
cmpsb
push
int3
pop
pop
jae
and
imul
or
mov
loope
and
cmp
out
mov
adc
lea
seta
sbb
fiaddl
loopne
xor
push
mov
cwtl
sub
scas
jns
int3
ja
push
out
push
sub
mov
test
mov
addb
jg
jmp
mov
shrl
mov
loop
ror
mov
cmpsl
out
push
iret
das
cmpb
jae
mull
pop
lret
dec
shr
or
enter
or
cmc
cltd
outsl
imul
add
inc
mov
sar
das
cmp
rcrb
pop
ss
rcll
in
addr16
mov
in
push
out
push
mov
xor
popa
adc
adc
or
or
inc
and
mov
xchg
or
adc
adc
inc
imul
iret
insl
push
sbbl
sbb
scas
xlat
and
pop
sub
sbb
in
cmp
xor
push
aad
sarl
in
pop
dec
xchg
loopne
xor
mov
shl
lret
xchg
lock
leave
bound
lea
sub
in
pop
cltd
and
adc
push
push
pushf
adc
mov
es
iret
inc
and
inc
inc
in
outsl
cmp
das
push
jb
jp
dec
xor
shlb
jecxz
push
xchg
scas
fsubrs
leave
mov
mov
jmp
dec
outsb
and
je
dec
repz
dec
test
imul
hlt
cmpsb
das
fldt
xchg
mov
adc
jns
testb
fldcw
jmp
mov
mov
das
inc
idiv
mov
push
lret
js
cmpsl
mov
das
sub
mov
mov
and
mov
insb
addr16
lret
lret
xor
xchg
clc
push
jmpw
into
cmp
aam
lret
popa
bts
mov
sbb
fcoml
or
aaa
add
hlt
cltd
cld
adc
je
pop
in
std
push
sbb
dec
jmp
dec
test
cltd
int3
xchg
scas
sbb
ljmp
dec
stos
mov
ss
jge
mov
pop
mov
negb
or
or
xor
sub
mov
sar
mov
jbe
popa
ja
lahf
jb
sub
cmp
or
sub
push
inc
adc
mov
pop
popa
out
mov
cld
bound
std
inc
jns
in
jns
xchg
inc
push
mov
pusha
enter
jne
bound
jp
xchg
shll
ss
xor
pop
repz
xchg
cmp
adc
xchg
push
aad
jmp
mov
cwtl
icebp
in
jo
cmpb
push
stos
push
xor
and
mov
insb
repz
dec
jnp
test
jle
cli
in
pop
ja
adc
add
xor
pop
stos
mov
inc
jae
gs
push
stos
dec
sub
jae
insb
inc
stos
ret
xchg
push
stos
xchg
mov
sbb
or
imul
mov
lds
sar
sub
repnz
cmc
pop
leave
outsl
xor
hlt
imul
inc
xor
jge
xor
sbb
mov
adc
out
dec
push
ja
inc
cmpsl
cmp
call
dec
xor
xor
mov
imul
fldcw
movsb
pop
out
push
xor
movsl
jecxz
stc
lds
stos
scas
inc
daa
add
cmp
xchg
jno
push
push
dec
xor
pop
push
in
fbld
test
lahf
lcall
test
popf
dec
mov
push
and
cltd
sub
pop
lcall
pop
je
fsubrs
push
in
sub
fistpl
lods
test
push
cmp
sbb
and
xor
cmp
jnp
es
faddl
pop
push
sub
push
and
push
sbb
jmp
test
add
pusha
jle
jg
pop
dec
mov
inc
fmull
push
pop
jmp
mov
roll
sahf
push
xchg
enter
popf
lret
push
roll
and
sahf
sbb
cmc
pusha
sub
xor
outsl
and
loop
pushf
add
out
jle
pop
sub
adc
out
pushf
cmpsb
lods
shll
js
loope
add
xor
loop,pn
dec
in
insb
movsb
into
mov
insb
xor
mov
cmp
in
cld
adc
stos
push
imul
adc
sbb
push
jmp
pop
sub
mov
pop
in
test
lock
and
push
push
add
aad
seto
inc
pop
inc
inc
in
fld
pushf
add
push
clc
repz
lea
dec
test
imul
ret
adc
das
pushf
fnstcw
insl
jmp
adc
loope
and
inc
pop
cmp
aas
into
movb
std
bound
js
je
nop
jnp
sbb
dec
std
adc
cwtl
mov
icebp
mov
inc
sub
or
or
loop
das
pop
popa
xchg
outsl
mov
ss
lock
or
mov
mov
dec
ret
testb
in
sbb
dec
test
jp
add
xchg
mov
push
sbb
sub
mov
in
and
shlb
pop
stos
mov
sub
and
ret
jecxz
ja
pop
push
push
clc
inc
xchg
push
xchg
icebp
in
inc
out
popa
es
jl
arpl
push
mov
cmp
pop
push
push
push
inc
stc
setle
jae
xor
test
sub
push
fstp
test
inc
jle
outsl
inc
cli
xchg
sbb
shrl
das
pop
in
push
stos
cmp
es
add
out
push
insl
xor
mov
test
cmpsb
cwtl
mov
shll
movsb
mov
xor
aaa
ja
mov
dec
push
mov
or
imul
push
ljmp
mov
mov
scas
bound
popf
in
xor
nop
int
mov
fisubrl
sub
xchg
or
int3
fs
jecxz
mov
mov
nop
pop
in
popf
andl
mov
inc
jmp
push
dec
in
cmpsl
sub
popf
xchg
fisttpll
jo
or
das
std
stos
les
ret
insb
pop
cmp
jnp
mov
daa
push
movsl
push
cltd
adc
push
cs
dec
pop
loope
sub
mov
push
outsb
jno
or
out
jno
inc
sub
outsb
fisubl
dec
js
das
sahf
mov
sbb
mov
xchg
cmp
jmp
sub
adc
adc
test
cmpsb
fcomi
mov
add
inc
xor
movsb
jge
xor
aaa
rcrl
cmp
pop
add
gs
int3
shl
arpl
std
fidivs
add
jo
lcall
mov
iret
aam
in
jae
test
jbe
mov
imul
aam
daa
add
adc
test
and
jl
lret
mov
lahf
inc
out
cmp
movsl
movsb
pop
in
and
out
lahf
mov
xorl
push
push
add
cmpsb
sbb
scas
pop
shll
pop
mov
pop
push
rcll
sub
in
lods
cmp
mov
adc
inc
out
int
jl
jae
aad
iret
aas
and
mov
fcom
ds
int
popf
xchg
sub
cmc
cmp
xchg
mov
fdivrl
mov
rolb
jnp
cmp
add
fs
push
mov
ret
lds
mov
fmuls
xor
xchg
add
mov
lret
mov
inc
arpl
xor
outsl
add
out
loop
sar
popf
mov
fs
cltd
push
ss
dec
lods
mov
insl
pop
out
cmp
mov
cmp
mov
add
lahf
movsb
mov
daa
mov
es
addr16
and
mov
adc
imul
xor
out
xchg
les
jo
sbb
mov
sub
movsl
mov
adc
stc
sti
shrl
jl
ja
gs
lcall
lcall
inc
pop
nop
rcr
cld
fucomip
repz
rorb
push
loopne
call
add
adc
ss
jmp
rcl
cs
cmp
mov
and
insl
aas
insl
daa
push
jb
mov
dec
and
pop
jecxz
push
mov
mov
cwtl
pop
repnz
xor
roll
mov
sbbb
sbb
stc
imul
mov
mov
jb
jmp
test
shrl
data16
mov
insl
aam
or
mov
in
sbb
adc
loope
out
push
data16
sub
cmp
shlb
mov
aam
cmp
lods
es
jno
aam
pop
clc
jl
outsb
xchg
rcrb
lcall
and
mov
pusha
stos
cltd
xchg
mov
mov
std
mov
add
sub
test
ret
std
test
xor
repz
sub
sbb
psrlw
add
pop
cwtl
stos
sub
imul
lods
stos
add
or
mov
or
roll
jae
mov
mov
mov
in
jl
ja
dec
out
adc
inc
push
or
push
lea
popa
mov
dec
add
jo
sbb
dec
cmpb
inc
in
cmp
fbstp
mov
inc
or
orb
jp
mov
inc
mov
adc
lods
dec
adc
push
pusha
hlt
int3
fbstp
jbe
jmp
and
xorl
test
popf
mov
dec
loop
inc
ja
stos
aaa
loop
and
and
insb
leave
sub
jnp
pusha
jle,pt
cmpb
or
iret
hlt
andl
pop
sbb
xor
out
xor
inc
adcb
or
or
imul
push
sbb
add
imul
sub
lds
repnz
add
cld
arpl
leave
pop
mov
enter
cmp
ror
jge
adc
sbb
adc
hlt
add
ror
mov
jne
ficoms
mov
pop
insb
mov
dec
jae
mov
and
cmp
pusha
movsb
jo
jo
rorl
out
in
repz
daa
add
xor
jl
sub
dec
push
jl
push
stos
fnsave
movsl
stos
pop
and
pop
hlt
push
iret
stc
ss
xor
stc
inc
cmp
int3
cmpsb
lahf
dec
and
inc
cli
js
sub
push
repnz
dec
test
mov
repnz
adc
push
cmp
sub
pop
addb
insl
add
mov
and
add
inc
sub
inc
insl
pop
push
push
cmpsl
push
in
popa
jno
fs
sub
inc
outsb
cs
or
test
mov
shlb
mov
jne
mov
mov
sub
fcomp
lods
cmp
leave
in
push
mull
cmp
mov
sbb
cltd
jnp
sbb
icebp
jo
pop
lret
cmc
out
lds
loopne
insl
loop
sbb
stc
push
in
fs
or
pop
gs
and
lods
mov
mov
cli
jecxz
or
lahf
ss
mov
sarl
les
gs
clc
loopne
cmpsl
inc
pop
inc
mov
adc
jg
imul
iret
add
push
loopne
popa
sbb
leave
mov
xlat
loope
bound
icebp
push
sbb
scas
add
in
jle
xchg
sti
orb
lcall
nop
jne
pop
dec
movsb
cwtl
roll
fcompp
xor
icebp
in
addl
adc
loope
es
addr16
pop
mov
addr16
xchg
out
das
push
stos
jmp
push
and
cmpsl
mov
jb
cmp
mov
dec
cltd
cmpsl
insb
je
push
sub
mov
sbb
mov
arpl
mov
mov
push
dec
mov
pop
fildl
adc
mov
add
inc
das
js
push
mov
mov
shll
shlb
insl
mov
inc
lcall
aad
icebp
mov
ljmp
xorb
sub
and
or
in
pop
call
leave
and
push
cmp
ret
add
pop
es
stc
aas
in
clc
mov
movsb
xchg
adc
aas
ljmp
mov
mov
sbbl
xchg
add
mov
pop
fs
add
fidivrl
mov
outsb
icebp
push
arpl
and
fiadds
mov
enter
pop
push
out
pop
sub
add
and
push
call
jge
xor
xchg
adc
xor
xchg
adc
fxch
mov
cmpsl
cmpl
push
dec
add
incb
inc
cld
or
imul
in
dec
ds
xor
jne
jmp
mov
out
dec
fisubrs
fidivrl
loopne
xor
cmp
inc
mov
es
adc
jno
addr16
lretw
jp
pop
iret
mov
invd
mov
addl
daa
pusha
pop
mov
xchg
int
cli
jmp
jmp
dec
add
movsl
out
xor
popf
in
mov
push
addl
and
sbb
out
jnp
loope
jle
xor
push
xor
adc
sub
push
mov
ret
mov
dec
js
inc
repnz
jae
sbb
or
in
das
inc
daa
pop
out
fimull
dec
sbb
sbb
cmp
adc
stc
cli
ret
rorb
mov
dec
imul
dec
cmp
mov
lods
jge
fisttpl
aaa
push
push
or
xor
dec
jl
test
scas
in
clc
loopne
xor
adc
and
mov
incb
push
and
out
hlt
inc
iret
in
scas
loopne
enter
daa
incl
xor
ljmp
jl
pop
and
jp
push
lea
mov
fldenv
push
push
lahf
testl
push
push
out
je
leave
xor
cmpsb
and
push
pop
pinsrw
enter
mov
addr16
jge
pop
je
sub
mov
cmp
xor
adc
nop
sub
stc
movsb
lea
cltd
xor
pusha
push
push
loopne
xor
data16
int3
ljmp
mov
dec
push
lcall
inc
fmull
insl
mov
outsb
xchg
mov
popl
and
mov
loop
mov
mov
pop
cwtl
push
mov
mull
out
lret
mov
mov
inc
sahf
add
mov
xor
daa
outsl
mov
test
sub
incb
adc
push
ss
mov
adc
fidivs
xor
push
cmp
mov
sti
into
fmuls
pop
sub
pop
pop
cltd
in
mov
stos
imul
add
or
das
jno
jns
test
add
inc
xlat
and
sub
mov
jmp
sub
mov
mov
fmuls
leave
test
test
fldcw
test
notl
repz
fildll
aad
pusha
lea
shr
dec
out
dec
pop
gs
mov
jmp
sahf
pop
or
pop
inc
cmp
adc
aas
stos
hlt
icebp
jb
mov
lods
je
mov
jecxz
into
mov
std
add
dec
and
xor
movsl
mov
xchg
insl
adc
jge
fldt
loopne
dec
je
mov
add
lock
add
mov
pop
and
lahf
pop
ror
bound
notb
or
dec
cltd
pop
pop
cmpsl
inc
cmp
mov
aaa
mov
mov
andl
sbb
pop
jl
rorb
mov
inc
sbb
aam
rol
nop
or
and
enter
mov
ljmp
nop
lods
movsb
xchg
ret
mov
cmpsb
xchg
xchg
dec
mov
push
out
sub
mov
leave
adc
fidivrl
cwtl
mov
ja
push
es
dec
xchg
and
xchg
push
jmp
jb
cmpsl
shrl
or
jo
or
adc
ret
add
aas
adc
jb
inc
xor
orl
and
xchg
movsb
xchg
push
sarl
push
dec
ja
push
dec
idivl
sub
and
or
sub
sbb
jne
add
mov
in
out
jo,pn
bound
add
movsb
das
in
dec
pop
xchg
jge
repnz
jnp
sub
js
push
addr16
data16
xor
jmp
mov
shrl
xlat
ffree
in
adc
sub
push
fucomip
out
push
xchg
mov
mov
xchg
mov
or
movsb
xchg
or
cmp
and
popf
push
rclb
and
xchg
outsl
jnp
daa
pusha
jle
mov
adc
loop
ret
es
xchg
inc
std
sbb
push
push
mov
js
add
pop
inc
cmpsb
in
js
mov
jnp,pn
xor
imul
push
scas
mov
mov
aad
jp
test
mov
arpl
jno
inc
cmp
test
sbb
jl
aaa
adc
data16
filds
pushf
jns
int3
xchg
adc
pop
scas
in
fwait
inc
mov
jo
in
fs
inc
gs
jb
stos
cmp
or
in
aaa
mov
in
xchg
mov
enter
daa
loop
cmp
jecxz
jl
addr16
dec
in
cmp
push
jo
mov
mov
and
lahf
push
mov
push
jne
push
test
leave
and
inc
pop
mov
cmpsb
movsl
sbbl
mov
pop
jo
movsl
push
dec
inc
loope
arpl
sub
sbb
cmp
push
sub
aam
subb
add
jb
xor
rclb
sub
adc
pop
ds
mov
fdivrl
mov
into
test
pop
jns
ret
mov
sub
bound
mov
movsb
jecxz
repnz
cmp
aas
and
neg
xor
shl
xchg
mov
cmc
jl
xchg
xor
xchg
mov
sahf
jp
loop
push
stc
ret
mov
ss
out
lods
outsl
jno
mov
addb
dec
gs
xor
xchg
cmp
cli
orb
fs
dec
loopne
fcomps
test
adc
cmp
sbb
jbe
pushf
xor
sbbb
into
aam
pop
in
mov
mov
push
add
add
loopne
sbb
popf
mov
nop
sub
inc
xchg
int3
pop
fldenv
cld
xchg
repz
sbb
xchg
cwtl
mov
lea
lret
gs
jmp
adc
and
jmp
stos
arpl
insl
xchg
lret
inc
les
inc
jae
ss
dec
popa
pop
jb
adc
dec
xchg
je
imul
std
lods
jo
cwtl
mov
inc
mov
in
mov
mov
adc
sahf
test
in
push
or
into
mov
jmp
adc
and
rcrb
negb
jp
mov
cli
dec
xchg
add
cmpsl
std
fs
mov
fisttpl
lret
mov
inc
xchg
and
jbe,pt
pop
sub
fimuls
insl
aam
pop
xor
pop
sub
es
movsb
fisttpll
or
sub
cmpsb
fucomi
adc
lret
lods
pswapd
insb
insb
add
popl
push
ret
nop
mov
mov
sahf
cltd
movntq
out
test
jp
mov
les
push
jmp
test
movsl
or
sbb
mov
popa
stos
stc
repz
out
and
cmpsl
xchg
add
inc
call
aad
xor
pop
lods
or
shl
mov
fisttps
mov
sbb
sub
ljmp
or
mov
jns
jbe
xchg
jne
jge
mov
into
lock
or
mov
pop
in
push
fistl
dec
inc
call
or
push
addr16
ljmp
mov
sub
mov
jne
mov
test
into
fisttps
outsl
test
pop
and
bound
daa
dec
jp
xor
mov
jmp
stos
nop
mov
and
mov
or
cmp
xor
jle
outsl
push
push
rcll
cltd
sub
iret
adc
adc
sbb
inc
or
rcll
jp
mov
fiaddl
push
fidivl
and
fldt
imul
in
push
add
pop
loop
rolb
sub
cmc
js
hlt
loop
mov
inc
inc
jbe
jge
adc
sbb
dec
mov
or
inc
xchg
add
enter
sbb
pop
ss
fidivrs
pushf
xor
ja
jl
sub
and
cmpsb
dec
cmp
movsb
adc
push
push
rcl
jbe
xchg
cmp
jl
xchg
xchg
xor
daa
std
inc
clc
cmp
cmp
jl
inc
jnp
pop
ret
sbb
push
jle
movsl
rolb
lahf
xor
cltd
test
xchg
lods
gs
out
cmpsb
cmpsb
sub
aam
pop
jbe
js
sar
scas
icebp
insl
push
mov
lea
sub
jp
cmp
ds
sub
adc
scas
mov
cmpb
ss
pop
cmp
push
inc
pop
dec
fs
int
mov
cltd
fildl
pop
in
xchg
lcall
iret
fsubl
dec
sub
fwait
outsb
push
imul
and
fs
int
mov
mov
ljmp
sub
add
cli
fwait
sbb
sahf
sub
mov
mov
aas
sbb
pop
sahf
inc
cmp
inc
mov
lds
adc
dec
pusha
jbe
jns
pop
fs
and
hlt
pop
das
ss
lods
lods
push
pop
jle
lock
hlt
out
cmp
lcall
or
or
fdivl
loopne
jno
pop
popf
jne
adc
in
push
jp
adc
mov
mov
mov
fnstsw
jp
mov
sub
xchg
mov
mov
aas
mov
add
or
in
mov
dec
shll
push
pinsrw
or
lea
pop
cmp
xchg
mov
pop
lret
cmp
adc
sbb
jmp
jp
cs
aaa
inc
dec
cmp
inc
mov
aas
jmp
lcall
mov
jecxz
inc
push
mov
gs
push
jno
cwtl
dec
icebp
sub
add
pushf
push
dec
jne
inc
fcmovne
sbb
pop
nop
and
lock
aad
into
lods
out
mov
push
push
xchg
shll
or
insl
jo
mov
popl
cmpsl
cld
mov
jmp
data16
cld
lea
lret
adc
mov
and
mov
inc
ficoml
sub
adc
es
clc
push
pop
pop
ljmp
fsubrl
or
xchg
xor
push
popf
subb
leave
daa
and
test
or
mov
push
mov
pop
jo
push
test
fiaddl
fdivr
mov
sbb
sbbb
stos
call
push
cmp
int
call
pushl
mov
or
loop
xor
lock
loop
nop
mov
fmuls
mov
sarl
inc
les
or
and
push
sbb
push
daa
pop
jb
pusha
lret
addr16
in
lahf
fwait
bound
loop
in
lods
cmp
mov
sub
outsb
mov
sbb
xorb
pop
mov
mov
shl
popf
aad
in
cmpsb
in
pusha
pusha
das
in
sub
out
xchg
inc
sub
jmp
dec
push
xorl
out
mov
popf
pop
inc
push
mov
rcrb
add
insb
jne
cld
jnp
jl
adc
fbld
adc
iret
jo
ss
mov
sti
or
bound
xor
push
cmp
xor
daa
inc
movsb
lcall
xchg
jnp
sbb
loop
imul
mov
adcl
rcrb
ret
repnz
mov
leave
cmp
arpl
sub
inc
inc
inc
mov
daa
xchg
sbb
and
or
pop
mov
int3
push
arpl
imulb
xor
xlat
fnstsw
and
push
sub
sbb
and
arpl
fmul
mov
sbb
cld
xor
cmp
stc
std
jl
hlt
aaa
dec
lret
push
ss
call
and
or
push
adc
push
sbb
ss
pop
mov
inc
jbe
movsl
cmpsb
stos
repz
test
outsb
pop
out
ljmp
movsb
lods
xchg
scas
xor
repz
jle,pt
push
adc
mov
adc
inc
sbb
fsubp
add
xchg
xorl
or
rcr
adc
mov
lods
bound
dec
popa
fcoml
xor
sub
ja,pt
mov
mov
addb
mov
add
mov
ficoms
adc
in
cmp
fdivs
pop
or
push
cltd
sti
rorl
sbb
sbb
inc
jb
or
or
loop
mov
xor
fbld
mov
inc
cmp
ss
mov
lret
fildl
xchg
scas
jecxz
xor
cmc
mov
or
pop
or
push
int3
gs
xor
mov
fwait
sub
adc
sub
insb
data16
mov
sbb
mov
movsl
xlat
fstpl
popa
mov
sub
or
fildll
aad
lret
loope
or
jb
inc
mov
or
les
pop
repz
loopne
push
pusha
mov
call
arpl
inc
pop
jle
mov
ds
pushf
fisttpl
xor
imul
mov
jb
push
ret
mov
je
int
jecxz
call
std
cli
push
fcomps
insl
jbe
mov
dec
xor
pusha
push
mov
pop
xor
fwait
mov
push
xchg
lock
xchg
mov
jle
adc
das
outsb
shll
or
push
add
dec
mov
or
sbb
adc
adc
xchg
sbbl
mov
fs
in
test
sbb
sub
sti
aam
pop
or
cmp
mov
fstl
mov
cmp
stc
adc
popa
mov
xor
imul
xchg
sbb
xor
psubusb
add
and
cltd
jge
je
or
jmp
outsl
fwait
push
dec
mov
jl
xchg
jnp
shll
lahf
pop
out
mov
out
jmp
jns
push
insb
ljmp
cmp
xor
sti
or
inc
xor
bound
xchg
fwait
lea
xchg
data16
ja
std
or
aas
push
inc
pop
mov
inc
fwait
test
clc
push
mov
sahf
mov
fsubr
out
lret
cmp
int3
jns
idivl
xchg
push
jle
iret
das
in
sub
imul
lock
repz
pushw
mov
pop
lahf
dec
cmpb
pusha
sti
jns
fisttps
cmp
dec
out
fists
push
scas
out
cmp
popf
sbbl
push
stos
jbe
shlb
xchg
xchg
adc
jnp
nop
inc
jle
jle
push
dec
into
push
adc
mov
ret
pop
sub
cltd
inc
push
int
jae
sbb
or
rolb
inc
and
test
xor
mov
lods
scas
in
pop
lds
push
mov
fwait
xchg
mov
call
arpl
jmp
inc
inc
jle
jge
frstor
sbb
pop
aaa
dec
insl
les
in
sub
popa
sarl
push
mov
dec
fiadds
cld
jo
hlt
lret
xor
std
cmp
movsl
les
stos
into
jbe
mov
sub
xchg
add
sti
popf
jecxz
mov
xorb
mov
dec
cmp
push
sbb
movsl
into
xchg
mov
lahf
jae
cmp
pop
cmpsl
test
sub
subb
inc
or
push
sbb
loope
or
cmp
mov
adc
adc
pop
and
sbb
push
add
andl
pop
shl
sbb
sub
sub
lcall
fdivrl
sub
movsl
jae
sbb
cld
out
sbbb
jl
adc
mov
xchg
stos
mov
jp
and
pavgw
out
push
cmp
jo
stc
negl
mov
mov
out
sbb
xor
sahf
lea
and
jmp
dec
call
stc
out
inc
sub
sub
jno
adc
out
xchg
ficoml
cli
loop
mov
sarb
mov
into
icebp
scas
je
lock
adc
adc
movsb
shrl
call
push
add
mull
sbb
cmp
dec
inc
xlat
sbb
xchg
xor
jl
and
in
xchg
test
sti
in
cli
decb
mov
nop
mov
mov
inc
lret
flds
or
and
dec
xchg
loope
jmp
mov
ljmp
shl
pushf
xchg
out
xchg
jg
inc
pop
adc
scas
aas
daa
mov
xchg
dec
in
rcl
je
jle
jecxz
movb
call
test
sub
adc
sub
aas
dec
dec
jmp
ficompl
mov
scas
lock
test
roll
mov
xor
pop
pop
roll
adc
jo,pt
dec
test
cli
gs
mov
out
xor
jecxz
ss
lock
mov
xchg
and
sysret
sbb
rclb
add
and
ret
int3
and
fnstsw
idivl
ljmp
cmp
mov
xor
iret
push
push
hlt
mov
aaa
add
out
push
in
mov
mov
push
daa
jno
xlat
inc
pop
push
xor
dec
and
cmp
and
pop
sbb
lods
scas
ror
mov
pop
xchg
pop
mov
dec
fisubs
add
cmc
sub
mov
dec
repnz
daa
mov
rcrb
mov
dec
push
shlb
and
push
sbb
adc
or
push
dec
push
pop
pop
inc
jne
inc
inc
mov
add
out
stos
filds
bound
scas
out
pop
pop
xchg
mov
push
and
movsl
sti
addr16
mov
mov
repnz
mov
xchg
in
int3
imul
mov
movsl
jmp
loop
stc
adcl
pop
popf
test
cmpl
cld
dec
stos
jmp
dec
daa
insb
dec
xor
jnp
out
jle
repz
and
sub
lcall
or
bound
das
inc
sub
jae
inc
rcll
xor
push
mov
xchg
jne
inc
pop
inc
sbb
leave
adc
mov
fcompl
lds
outsb
mov
out
popl
daa
mov
stos
arpl
repnz
dec
xor
jge
sbb
sbb
mov
loopne
add
clc
mov
int3
inc
and
pusha
fisubs
pop
cmp
lea
add
mov
xchg
mov
xor
jbe
decl
xor
in
addb
daa
cli
mov
jno
sahf
jnp
jns
inc
dec
test
sbb
cld
mov
movsl
aad
mov
pop
cmp
push
rorl
sahf
bound
push
cmc
ds
cmpsb
mov
mov
scas
jp
jl
pusha
pop
insb
imul
loope
xchg
sub
xchg
sarb
sub
or
rolb
lods
in
cmp
lods
sbb
add
mov
cmp
mov
xlat
nop
int
xlat
stos
sub
stos
jp
bound
lcall
push
fsubl
sub
cmp
test
jg
jg
je
mov
dec
pop
mov
imul
push
ljmp
fsubrs
jle
neg
jbe
lret
ffree
cmp
fildll
out
lock
sahf
xor
add
cwtl
cmp
inc
fdivr
outsl
sbb
sub
add
stc
sahf
mov
fs
inc
adc
mov
sbb
or
leave
out
daa
or
adc
lods
insl
cmp
aaa
mov
in
mov
divl
loopne
out
mov
pop
inc
adc
loopne
imul
sbb
cli
xchg
sbb
sub
dec
xlat
pop
pop
push
mov
add
sti
pushf
sbb
insb
leave
mov
nop
xchg
repz
hlt
inc
fnstcw
out
les
loopne
repz
pop
lea
dec
call
popa
jns
pop
in
popa
adc
in
pushf
xor
jmp
subb
loopne
mov
aas
cmp
jb
push
push
je
cmpb
xchg
outsb
dec
lret
std
dec
lret
rcrb
jmp
cmp
ret
push
outsl
dec
ss
xchg
fistpl
mov
mov
aam
lock
jb
mov
xchg
mov
in
jne
and
ficoms
rcll
mulb
insl
and
ja
cmpsl
stc
sbb
mov
mov
or
lret
pop
inc
pop
mov
fistpl
pop
mov
mov
mov
js
sub
and
aam
and
ret
pop
push
inc
es
into
fucom
add
xchg
mov
addr16
fidivs
mov
push
fcmovnbe
xchg
stos
popa
dec
push
cs
mov
xchg
enter
mov
jmp
adc
adc
dec
mov
enter
push
xchg
nop
add
and
pop
cmp
stos
mov
xchg
out
mov
loop
mov
decl
test
shll
inc
cwtl
mov
jmp
mov
pop
or
lcall
sbb
cmpsl
test
dec
mov
push
add
and
mov
mov
or
in
mov
xchg
or
or
pop
add
push
jp
test
adc
daa
mov
sbb
dec
inc
outsl
mov
pusha
xor
fisttps
xchg
or
xchg
lods
cmp
out
cmc
popf
iret
push
mov
sti
loopne
stos
pop
repz
les
mov
jnp
jmp
jle
pop
test
fstp
fistl
add
sbb
ret
xchg
pop
cltd
inc
cmp
sti
jae
mov
push
xchg
jae
add
aaa
push
and
cmp
jl
sbb
sti
imul
mov
shr
or
inc
int
leave
sahf
push
lret
fs
arpl
cmp
inc
dec
push
xor
sbb
data16
aaa
lret
xchg
adc
shl
mov
sub
repnz
fmulp
subb
xor
jo
pop
adc
push
push
out
dec
or
push
cld
xchg
mov
mov
in
sbb
or
stc
add
sbb
inc
jno
cmpsl
sti
jl
cld
out
dec
pop
test
push
filds
xchg
clc
jb
lahf
mov
mov
test
rclb
inc
and
out
xor
push
pop
stc
mov
js
mov
add
sbb
loope
sub
icebp
inc
aas
cmp
jne
ds
pop
adc
sbb
push
or
cld
sbb
cmp
xor
cmp
mov
in
pop
loope
bound
dec
sub
sub
data16
push
mov
sbb
mov
dec
mov
lods
dec
and
jmp
xchg
fsub
inc
lcall
arpl
rcl
pop
mov
stos
dec
sbb
je
sahf
rcll
jecxz
pop
cmp
xor
cltd
stos
loop
ds
push
cmp
inc
pop
lahf
adc
les
mull
xor
fdivrs
cli
dec
and
cmpb
or
sbb
mov
pop
decb
xor
jmp
pop
sbb
adc
out
adc
jnp
add
ret
dec
jge
arpl
cmp
outsl
xlat
lcall
mov
imul
sti
dec
xchg
pop
decb
pop
in
jb
mov
inc
lock
imul
cmp
repz
sahf
xchg
addr16
lods
lea
push
mov
loopne
int3
pop
xchg
mov
adc
loope
fsub
ljmp
loopne
inc
addb
push
aas
gs
pop
dec
pushf
je
jecxz
pop
add
int
mov
cwtl
xor
scas
adc
sbbl
xchg
mov
pop
sbb
es
sub
inc
adc
xchg
xchg
scas
mov
mov
mov
shll
jp
insl
or
les
push
clc
dec
pop
mov
xchg
stc
mov
cmp
test
pusha
ds
mov
rol
sar
jne
sub
fmull
movsl
and
ret
ljmp
fisttpll
cmp
push
and
xchg
lret
ljmp
xor
and
mov
repnz
push
or
sub
adc
mov
inc
mov
inc
mov
dec
icebp
sahf
cmp
and
sbb
ret
pop
out
int3
stos
movsb
pusha
mov
adc
insl
add
loope
jge
sub
mov
pusha
or
push
xor
lods
hlt
mov
out
negb
mov
cli
cwtl
jle
test
popa
mov
add
fwait
xor
loopne
jne
mov
mov
push
xchg
and
or
inc
xchg
push
push
std
mov
clc
fsubrl
pop
stc
jecxz
pop
cmp
jp
test
jmp
mov
mov
adc
xor
pop
pusha
int3
shl
fildll
sbb
ds
js
pop
subl
cmp
addl
cmp
stos
iret
lds
and
and
insb
and
cmpsl
jle
mov
pop
adc
xchg
test
ret
pop
sar
daa
inc
aas
jo
jae
arpl
push
dec
xor
or
inc
pushf
stc
inc
mov
imul
xor
outsb
imul
sub
rolb
xor
repnz
ds
leave
adc
out
arpl
lret
dec
lock
jge
cmp
sbb
imul
lret
es
mov
push
cmpsl
or
fisubrs
mov
xchg
mov
stos
scas
subb
and
jl
cmp
ss
enter
dec
out
lds
fnstsw
decl
enter
daa
clc
cld
repz
pop
jno
aam
jl
cld
testb
rorl
ret
movsl
jecxz
jb
xchg
mov
dec
push
or
test
mov
mov
xor
and
js
dec
std
pop
ljmp
loope
repnz
int
cmp
cmpsl
repz
divb
mov
mov
ret
pop
push
sbb
or
jle
sub
insl
push
pop
pusha
mov
fistl
cld
xchg
fdivrl
inc
outsb
inc
mov
test
xor
idivl
xchg
mov
or
cmpsb
and
push
lock
cmp
mov
out
lret
faddp
imul
icebp
dec
jno
dec
mov
addr16
es
xor
jbe
outsl
fadds
loop
cmp
stc
or
add
lret
mov
adc
inc
ss
lret
loopne
mov
dec
mov
xlat
push
loope
jnp
mov
push
cmc
and
or
lods
adc
lcall
loopne
cld
test
cmp
adc
imul
cmp
add
cmpsb
loop
clc
adc
cmp
cs
mov
ja
sti
cli
aad
mov
or
inc
cmpsl
test
pushf
mov
fldpi
adc
repz
push
sub
lea
stos
call
pop
lret
dec
push
adc
lcall
jmp
add
movb
lcall
inc
es
dec
add
add
je
xchg
rorb
add
lock
mov
leave
xchg
mov
sbb
or
arpl
mov
xchg
mov
jecxz
lock
adc
jo
ja
lods
xchg
mov
push
fimuls
imul
fisttpll
repz
dec
jbe
inc
cmpsl
testl
sub
insb
cmp
cld
fs
lret
cmp
popa
xchg
and
loopne
std
pop
loopne
xchg
rcl
cmpsl
xchg
sub
cmp
jo
cmp
jns
sbb
jns
xchg
fnsave
jg
clc
sbb
xchg
or
cmc
popa
or
cld
lods
xchg
aas
jae
xchg
xchg
cmp
mov
andps
add
and
cltd
pop
insb
ljmp
and
mov
pop
push
add
lahf
adc
ror
repnz
mov
out
ja
jb
jo
mov
cld
push
ud0
cmp
mov
les
dec
mov
xor
outsl
ja
push
or
xchg
cmpsl
ret
mov
jg
imul
sbb
ds
or
mov
push
dec
xor
jne
xchg
pop
mov
ljmp
jb
lret
jns
mov
in
pop
push
xchg
cmpsb
pop
mov
sub
push
andl
mov
pop
scas
mov
stc
jnp
dec
or
jbe
or
insb
push
ffreep
inc
lahf
xchg
fmull
jmp
inc
mov
stos
out
and
sbb
pop
pop
push
jns
aas
stos
inc
dec
out
repnz
and
jg
push
jg
jle
or
adc
mov
ret
outsl
pop
pop
push
imul
jae
pop
mov
or
mov
push
mov
xchg
inc
xor
ficoml
outsl
add
lds
imull
and
mov
out
push
leave
mov
hlt
movsb
mov
lock
push
xor
and
dec
enter
addr16
add
cmpsb
fistps
adc
xor
sahf
adc
xchg
and
cmpl
add
movsb
push
repnz
push
lcall
in
out
adc
jae
mov
cmp
and
or
std
push
movsl
ljmp
lahf
out
dec
rcll
push
lret
test
push
lds
inc
cltd
test
pop
inc
in
les
mov
sub
loope
pop
fnsave
sub
es
cmp
pop
ds
stc
rcl
mov
push
xorb
lds
cmc
subl
fcompl
int
daa
or
jnp
fs
fisttps
lcall
lret
mov
sub
popf
jno
xor
movb
aas
jnp
pop
lds
mov
into
inc
mov
das
jle
pop
add
push
repz
pop
cmp
pop
xchg
jge
sbb
adc
fldt
mov
mov
jp
sbb
pop
xor
mov
mov
es
gs
fs
pop
cmc
adc
jle
ss
iret
lods
shl
mov
pushf
mov
mov
cli
scas
in
out
cs
popf
cmp
xlat
mov
into
jge
repnz
loopne
and
adc
mov
adc
push
call
data16
loop
mov
adc
fsubl
xlat
sbb
sub
xor
inc
sbb
test
dec
into
aad
pop
inc
nop
sub
dec
sti
fisttpl
inc
push
jne
fldenv
mov
shl
jg
mov
test
fucomp
jns
cmp
fidivrs
loopne
icebp
hlt
dec
pushf
xor
shrb
and
pop
inc
jne
jbe
xor
sbb
or
dec
enter
dec
xchg
jecxz
push
rcll
std
cmp
lock
push
mov
mov
daa
dec
notl
pop
bound
shll
dec
adc
das
dec
repnz
adc
mov
cltd
pop
mov
inc
cmc
dec
imulb
adc
cmpsl
testb
sbb
and
lods
imulb
xchg
xchg
out
and
jnp
mov
shlb
cmp
cmp
andb
jae
fstpl
jo
lret
xchg
dec
jge
ljmp
cmp
cld
cmpb
leave
aad
mov
adc
push
mov
xor
nop
rorb
adc
push
ds
dec
mov
jecxz
xchg
popa
sbb
or
shll
cli
mov
xor
fisubl
add
pop
inc
and
push
xorl
int
xor
test
mov
hlt
int3
sarl
cmp
mov
dec
stos
add
inc
stos
or
call
xor
jmp
int
ror
jmp
sbbb
es
xchg
bound
cli
out
in
mov
xchg
cmc
scas
lods
mov
insl
repnz
push
popf
fisubl
test
enter
cltd
leave
and
in
lret
pushf
in
leave
inc
pusha
add
jb
out
xor
cmp
jmp
push
std
mov
int3
loope
out
jae
popf
inc
mov
push
push
mov
xchg
or
mov
in
jle
dec
test
adc
add
fistps
dec
jae
push
add
push
iret
add
cmp
aaa
in
inc
sahf
add
adc
pushf
rcll
pop
dec
adc
lds
cwtl
clc
mov
cmp
push
hlt
out
out
arpl
pop
inc
push
addb
jmp
sbb
dec
add
or
loop
push
fimuls
in
js
pop
jg
test
mov
dec
xor
stc
ds
mov
or
cmp
pop
movsb
ficomps
cs
jmp
mov
in
int
out
outsb
xchg
mov
cmp
lcall
fs
push
mov
xchg
and
xchg
cmp
or
ficompl
and
cmp
mov
je
js
pop
les
push
fprem1
loope
in
mov
cmp
mov
adc
lods
fcoms
addb
sub
mov
rcrb
lahf
push
adc
repnz
sub
jg
pop
pop
pop
lcallw
push
or
sub
in
or
movl
mov
stos
push
mov
outsb
test
push
jo
imulb
lods
cmp
pop
sbb
not
gs
lret
jle
cltd
outsb
jmp
movl
rcrb
dec
lret
xor
test
and
jp
fs
dec
adc
shlb
lods
cmpsl
rorb
int
pop
out
xchg
cli
loope
jb
add
mov
or
outsl
push
gs
push
loopne
pop
dec
pop
jbe
sbb
and
cld
imul
mov
dec
data16
clc
mov
cmp
pop
xor
push
subps
outsl
inc
and
xchg
sbb
xor
clc
or
mov
pop
xor
inc
sub
fstps
xchg
les
stos
repz
mov
xchg
mov
inc
in
rcll
jae
pop
sub
pop
mov
inc
adc
dec
pushf
dec
test
mov
cld
push
xchg
fadds
jb
std
jo
aas
add
xchg
fistl
mov
std
in
hlt
cwtl
data16
mov
out
aaa
mov
mov
dec
loop
xchg
fistl
mov
pop
add
adcl
cld
das
cmpsl
les
enter
and
pop
rcll
add
shl
dec
insb
sub
cmpsl
cmc
or
mov
sbb
mov
lret
sbb
pop
and
push
xor
and
sub
loope
aam
and
ret
xchg
sarb
dec
fldl
mov
fucomip
stos
nop
jmp
lods
addr16
loope
out
xchg
mov
push
movlps
aam
dec
push
push
cltd
mov
outsl
mov
mov
sub
jno
test
add
sbb
and
sub
cmp
sbb
add
inc
insb
decl
rorb
or
in
scas
mov
mull
mov
cmc
xchg
lcall
inc
faddl
gs
or
sbb
push
mov
mov
call
scas
bound
out
in
push
xor
popa
aad
sub
dec
dec
mov
push
lcall
jo
popf
mov
xlat
and
dec
sarb
out
in
orb
popf
filds
neg
jmp
fsts
movsb
out
fldt
xor
dec
push
negl
xchg
and
not
insb
bound
data16
push
jecxz
or
out
jno
push
iret
or
mov
out
jne
scas
inc
pusha
pop
pop
jae
adc
or
mov
dec
inc
sbb
jne
xchg
repz
sbb
or
imul
scas
ss
jo
aas
push
movsb
rcrb
mov
lret
jp
fxtract
cmp
arpl
mov
pop
jbe
jge
cltd
mov
les
sub
add
dec
mov
pop
scas
adc
ficoms
sti
xor
push
push
xchg
scas
sbb
cmp
and
shll
xchg
sbb
adc
in
mov
pop
enter
daa
cmc
decl
jno
xor
jl
cmc
cmovnp
xchg
movsl
clc
daa
test
sbb
sub
xchg
test
in
ret
pop
sbb
cmpsb
inc
dec
es
xchg
fildll
js
ret
cmpsl
sub
in
stos
loope
pop
fsubrl
inc
inc
jae,pt
ficoml
xchg
loopne
inc
repnz
push
and
jle
ret
pop
sbb
lret
bound
int
and
jno
xor
fucomp
stos
lcall
xchg
fdivrl
and
outsb
outsl
movsb
jne
mov
ficoml
add
inc
mov
inc
and
adc
stos
cmp
shlb
and
xchg
jmp
lret
add
mov
sbb
sahf
pop
sub
stos
xor
cmc
scas
outsl
jne
loope
sub
xor
fs
test
fnsave
add
lods
mov
push
out
std
dec
cli
adc
push
xor
outsb
repnz
gs
or
cmpsl
loopne
inc
or
sbb
push
daa
pop
xchg
xchg
adc
sbb
imul
jp
add
sbb
lcall
xlat
xchg
inc
movsb
sub
lar
pop
fbstp
sub
data16
out
nop
fidivrs
sub
jns
fsts
fbld
xchg
jae
or
push
mov
ret
fsubl
cmp
imul
mov
or
call
push
cmp
cmpsl
out
aas
loope
xchg
jb
and
dec
mov
sbb
dec
jecxz
mov
fnstcw
std
mov
shll
mov
es
int
inc
fildl
pusha
pop
test
ret
mov
imul
das
or
adc
mov
scas
push
aas
rcr
inc
mov
mov
inc
insl
test
xor
or
cmpsl
hlt
push
mov
icebp
icebp
int3
outsb
cld
in
sub
mov
mov
and
mov
xchg
pop
cmp
jne
sub
sub
ret
es
clc
es
jno
test
pop
clc
inc
insl
movsb
xchg
cmpsl
mov
popa
push
cmpsb
fisubrl
jle
mov
push
aad
push
jne
push
jno
cmp
popa
shrb
push
push
test
sub
les
decl
aam
test
mov
xchg
mov
rcl
je
pop
xchg
mov
stos
pusha
dec
jge
mov
insb
in
dec
push
xchg
ljmp
cmpsb
mov
mov
push
xor
stos
lds
cli
jb
mov
mov
scas
ja
lahf
es
jne
aad
jl
adc
sub
sub
xor
xorb
mov
xchg
out
in
shlb
vmwrite
push
pop
xchg
xchg
push
fbstp
add
or
pop
addr16
ret
cs
inc
or
outsb
mov
inc
dec
mov
dec
in
lahf
lahf
pusha
cmp
xchg
ficoms
jmp
movsb
js
sub
dec
out
mov
popf
xchg
add
repnz
adc
and
test
int
mov
jle
mov
push
inc
dec
push
adc
iret
push
mov
xchg
inc
imul
push
movsl
push
or
sub
out
jno
mov
dec
lret
sbb
pop
sbb
sub
cltd
dec
sbb
shlb
mov
loopne
sbb
icebp
iret
cltd
hlt
test
mov
inc
pop
loopne
jge
sub
sbb
or
xchg
or
int3
ret
pop
fnsave
xchg
scas
sarb
cld
std
lds
xor
mov
fildl
movsb
hlt
sbb
jmp
jbe
or
in
fwait
fxch
fs
dec
daa
hlt
or
jno
out
xchg
arpl
icebp
dec
push
dec
fcoms
and
mov
lahf
dec
cmp
inc
test
mov
dec
inc
out
inc
jae
ret
pop
cmp
sub
mov
pop
push
inc
xor
pop
jbe
sub
sub
imul
xchg
xchg
iret
adc
bound
mov
sub
lcall
xor
cli
ret
int
jnp
sub
loop
pop
pop
or
dec
or
push
add
inc
sub
stos
outsb
rclb
xchg
sbb
mov
sub
mov
cli
mov
jmp
cmp
cld
inc
cmpl
fidivs
notl
fcmove
out
sbb
mov
add
add
lods
cmc
inc
inc
imul
push
sbb
imul
testl
ss
mov
lods
jne
insl
mov
or
out
cli
inc
std
xor
ljmp
es
xchg
and
lcall
lcall
push
xchg
es
mov
add
in
int3
data16
mov
cmp
call
sub
jge
ret
in
subb
ds
adcl
dec
leave
inc
fld
xchg
xor
jo
push
in
or
xchg
ss
pop
lea
mov
pop
push
fnstenv
testb
xor
jmp
cmp
fwait
inc
or
inc
orl
addr16
sub
cmpb
fsubl
std
xor
int
gs
movsl
mov
push
dec
mov
aam
pop
dec
data16
adc
call
das
in
sbb
mov
and
cmp
add
cs
push
div
bnd
bound
cmpsl
repz
cmpb
fwait
mov
adc
lret
stc
mov
and
dec
push
pop
pop
enter
ja
sub
sbb
aam
sbb
jmp
sub
mov
xchg
add
scas
les
sbb
jmp
mov
push
dec
les
js
mov
cli
cltd
xor
fnstsw
mov
pusha
dec
push
xchg
and
sbb
sub
xchg
mov
shrl
call
adc
add
add
push
jns
xor
push
jno
sub
xorb
shll
repz
imul
ja
jmp
dec
push
sbb
sbb
aam
jne
lds
out
ret
mov
fnstsw
lods
pop
in
lahf
xchg
xchg
loop
add
jmp
imul
mov
in
mov
mov
cmp
pop
movsl
in
and
rcrl
push
xchg
mov
imul
add
mov
out
push
cwtl
popf
mov
mov
push
jne
cmp
dec
aaa
inc
insb
cmp
cmp
xlat
and
xchg
adc
out
adc
ret
jnp
jecxz
xchg
adc
fdivs
sbb
or
test
testl
push
clc
xchg
mov
mov
scas
cld
xor
rorb
mov
xor
push
hlt
rcrb
arpl
call
jge
mov
clc
aaa
inc
arpl
or
xchg
push
int3
lods
jmp
test
pushf
je
xor
or
scas
fstpt
cmp
mov
sbb
in
xorb
pop
mov
repz
or
jno
rcrb
cmpsb
imul
movsl
push
js
and
xchg
js
xchg
mov
inc
jge
mull
jecxz
in
js
dec
xchg
and
xchg
jae
mov
ds
stos
imul
ljmp
sbb
repnz
add
pusha
mov
push
adc
test
pop
in
push
das
jo
adc
mov
xor
inc
adc
cmc
mov
push
test
pop
mov
inc
pop
mov
and
and
jg
cmp
dec
pop
or
adc
add
loope
ffreep
pop
add
sbb
fwait
data16
movsl
jb
cmc
or
jne
rcll
xor
inc
loop
and
stc
lahf
les
addb
or
pop
mov
insb
mov
push
dec
cli
jp
icebp
xor
inc
and
in
and
sub
loopne
jnp
pop
shll
imul
icebp
ret
add
test
xchg
pop
cmp
mov
xlat
adc
shrb
enter
fnstcw
in
in
inc
sbb
gs
sbb
aad
add
rorl
inc
hlt
inc
bound
fsin
sarb
xchg
mov
mov
mov
call
ficompl
test
dec
push
mov
jmp
mov
cs
loop
inc
xchg
and
pushf
sub
jb
femms
dec
movsb
into
iret
je
rclb
push
std
fnstenv
cwtl
xchg
out
mov
or
jle
lods
and
adcb
mov
jbe
lock
jmp
mov
in
iret
js
lds
shl
cmp
leave
dec
pop
test
cmpsl
repnz
mov
out
loopne
lahf
mov
cld
cmp
and
and
add
out
clc
pop
jnp
lods
subb
stos
mov
sbb
ret
inc
sbb
sarb
mov
xor
add
andb
lea
inc
mov
xchg
pushf
and
lret
sahf
jae
xchg
mov
test
inc
mov
cltd
rcll
dec
dec
pop
inc
push
test
roll
andl
pop
jmp
pop
dec
out
sub
adc
std
add
push
inc
xor
daa
or
and
or
xchg
jmp
rcrb
inc
ja
mov
out
stos
scas
dec
or
cmpsl
adc
ja
sub
mov
mov
cld
sub
jle
bound
lods
jns
test
inc
inc
xchg
xchg
xor
sub
cmp
repnz
sahf
mov
xchg
movsb
stos
mov
loopne
mov
and
testb
xor
sub
fcmovnu
bound
popf
xchg
test
lea
rorb
loopne
mov
push
mov
popf
stos
cmpl
insb
mov
and
jae
repz
into
lret
mov
add
aaa
iret
es
ret
push
inc
adcl
adc
and
inc
lcall
xchg
clc
push
sbb
xchg
sbb
inc
scas
pop
psubw
aam
add
and
mov
xchg
mov
fisttps
hlt
sbb
test
mov
inc
popa
adc
sbb
nop
push
or
jge
mov
nop
int3
cwtl
or
pop
cmp
fidivrs
dec
out
aas
sbb
sbb
and
jl
dec
movsl
outsb
movsb
or
cld
push
and
pop
dec
in
imul
mov
repnz
cmc
cmp
aad
jl
popa
sbb
adc
push
adc
mov
or
sub
lahf
mov
je
pop
xchg
enter
movsl
inc
or
push
cmpsb
leave
aam
pop
or
js
insl
rcll
add
loope
nop
dec
sub
push
pop
cmp
out
sbb
faddl
adc
sbb
pop
nop
jmp
nop
lret
or
sbb
in
sub
aaa
stos
movsl
sbb
mov
iret
sub
xchg
outsl
pop
pop
enter
lods
out
scas
fdivrs
fdivrl
mov
jae
or
adc
shll
pop
shlb
cmpsb
sub
add
xchg
add
dec
not
xchg
jo
aam
lcall
outsb
mov
sahf
dec
add
xor
mov
loop
push
push
stc
push
out
adc
out
adc
aas
ss
adc
lods
inc
pusha
testb
inc
outsb
cli
lods
mov
xor
cmpb
in
pop
test
into
in
xchg
aaa
gs
std
mov
cmp
pop
repnz
les
outsb
pop
mov
adc
stos
or
data16
add
add
adc
cmp
xchg
in
pop
mov
mov
test
ljmp
test
insl
fnstenv
push
adc
mov
aad
call
pop
sbb
sub
movsb
mov
pushf
mov
jmp
icebp
dec
adc
xchg
mov
aas
mov
shlb
sbb
mov
or
mov
std
addb
push
pusha
cltd
mov
cmp
lods
cmpl
adc
shlb
jl
xchg
or
lock
das
stos
mov
mov
push
mov
hlt
idivb
insl
pop
push
dec
pop
pop
cmpsl
icebp
inc
dec
mov
jbe
movsb
cld
in
imul
je
mov
sbb
mov
lcall
sub
loope
aam
addr16
ret
shrl
mov
hlt
clc
icebp
cmc
pop
xchg
addl
ja
push
popa
xchg
int
lods
adc
mov
insl
mov
jecxz
pop
push
push
push
ja
mov
push
cltd
mov
jecxz
mov
push
lcall
push
or
pop
mov
add
mov
sbb
fnstcw
jp
xchg
nop
loopne
sub
cld
adc
sahf
or
test
shll
movsl
jnp
or
fimull
xor
fisubrl
lods
mov
jl
dec
out
pop
loope
and
paddw
stos
pop
inc
inc
fs
xor
push
sbb
das
jne
mov
mov
gs
addl
xor
or
sarb
call
insl
decb
or
aad
addr16
push
jp
pop
call
mov
xchg
mov
sbb
xor
pusha
or
jmp
push
cltd
out
out
push
fists
popa
dec
add
popf
pop
and
push
repz
mov
and
insb
push
mov
lret
jle
cmc
in
adc
shlb
ret
lods
pop
push
fnsave
mov
sub
scas
jb
sahf
jge
or
sahf
cmp
sbb
jge
aad
int3
xchg
dec
scas
stos
sbb
pop
imul
xchg
scas
ret
lds
jecxz
les
sbb
leave
push
mov
arpl
mov
sbb
enter
fldenv
int3
addl
pop
push
rcr
loop
sbb
jo
pop
mov
and
fs
cmp
dec
shlb
outsb
jbe
scas
mov
enter
daa
icebp
cmp
cmp
fdivrs
fimuls
enter
enter
pop
push
lahf
test
pop
test
sbb
andb
je
js
and
pop
mov
sub
dec
mov
cltd
decl
test
repz
jmp
andb
mov
out
mov
ret
test
and
pop
dec
iret
pop
fldcw
lcall
fcmovnu
imul
outsb
sti
and
pop
cmp
subb
pop
jg
inc
cld
mov
aaa
adc
mov
xchg
push
mov
push
push
add
lcall
fdivrs
sub
rorl
sbb
xchg
cmc
xchg
xor
xor
mov
icebp
push
pop
stc
or
xor
test
jnp
jbe
jns
mov
sbb
sarb
xor
pop
jbe
daa
jb
or
lods
and
iret
add
loopne
mov
iret
adc
dec
imul
mov
nop
lea
xor
fwait
push
cmpsl
cmp
fcoms
sub
jb
in
ret
add
cmpsl
adc
adcl
mov
into
fldcw
les
push
in
xchg
jg
mov
out
dec
fsubrp
pop
mov
loop
das
pusha
xor
sti
fimuls
jmp
icebp
jg
je
in
inc
lahf
int3
es
shrb
push
jb
lret
xchg
xor
dec
jecxz
dec
push
in
jnp
daa
icebp
xchg
cwtl
or
hlt
mov
adc
dec
jns
sbb
test
mov
call
xchg
das
mov
mov
pop
sbb
xchg
rcrl
or
inc
sar
push
dec
and
lock
xor
dec
and
cld
xchg
and
inc
or
inc
and
sbb
pop
cmp
xchg
mov
sub
mov
lock
dec
es
jg
fldl
clc
sub
or
ljmp
lods
jle
sub
nop
dec
adc
loope
or
in
insb
lret
add
sub
enter
xchg
push
rclb
dec
sub
test
inc
xor
cmp
pop
shll
sbb
stos
sbb
data16
sub
lods
add
mov
adc
xor
jg
or
call
mov
push
das
iret
mov
pushf
dec
sti
ja
out
dec
inc
mov
fdivrs
lds
mov
inc
or
pusha
push
bound
vmwrite
and
xchg
iret
sub
mov
stos
dec
sub
xor
addr16
mov
mov
inc
hlt
mov
add
xchg
in
sti
mov
fbld
les
xchg
rcrb
andl
adc
into
lods
cmpsl
popf
cs
in
pop
cmp
mov
xchg
and
cmpl
repnz
adc
inc
test
fwait
js
mov
mov
roll
or
sbb
xlat
fimull
pop
fcompl
adc
sbb
and
push
ffreep
fbld
mov
sub
jae
int
mov
mov
xor
lret
adc
pop
stc
sbb
xchg
aaa
add
or
jo
ficoms
pop
pop
cltd
clc
mov
test
jmp
int
jo
adc
js
insl
and
cmp
jmp
push
ret
push
lret
ja
in
aaa
mov
pop
daa
lock
ret
cmpsb
xchg
dec
loopne
daa
into
jl
incb
push
fisubrl
and
push
lahf
enter
call
dec
test
jecxz
push
inc
sub
lcall
insl
pop
pop
loop
add
mov
mov
enter
mov
and
lcall
sub
sbb
mov
mov
in
sbb
mov
loop
xor
adc
xor
int
mov
movsb
pop
pop
xchg
mov
push
pop
xchg
mov
sub
mov
pop
jecxz
test
lret
pop
addb
jg
movsb
shll
dec
popf
or
call
cmp
jns
jmp
push
inc
loopne
mov
fmuls
dec
sbb
lds
cmc
pop
repnz
rolb
sub
xor
loop
push
fs
les
push
and
cmp
idivl
pushl
push
insb
lds
scas
or
cli
adc
mov
lfs
inc
lahf
or
cwtl
xchg
into
mov
mov
loopne
push
push
pop
xor
enter
inc
imul
sbb
add
sub
mov
sbb
jns
lock
rcll
xor
and
mov
sbb
dec
mov
aad
and
and
jle
inc
fwait
adc
mov
adc
sub
inc
jno
lea
adc
ljmp
loop
out
push
pop
mov
jmp
mov
xlat
inc
dec
inc
es
or
cld
cmc
jbe
push
cmc
out
dec
or
je
mov
or
call
test
cwtl
enter
popa
das
fisttps
test
and
xor
pop
mov
ret
enter
push
or
adc
iret
shrl
out
add
insl
sub
jecxz
dec
adc
cmpsl
out
jb
mov
and
paddb
daa
mov
cwtl
sbb
mov
inc
popf
shrb
push
sub
cmp
ret
icebp
xlat
in
es
roll
sbb
clc
addr16
xchg
add
das
popa
les
jo
test
cmpsb
xchg
jno
push
push
mov
pop
pop
add
fstps
test
dec
mov
dec
nop
and
xchg
std
xchg
sbb
sub
roll
inc
adc
jg
add
aam
int3
inc
idiv
xor
add
pop
pop
sbb
dec
jno
lret
mov
aad
cwtl
sahf
aad
push
jnp
mov
pop
inc
outsl
cmp
mov
add
pusha
sbb
inc
mov
aas
fcoml
or
mov
call
pop
inc
mov
lret
test
or
inc
jno
sub
lods
fnstsw
ja
dec
and
shl
inc
or
pusha
aas
adc
fistpll
and
jmp
fwait
jmp
xorl
fistps
xchg
idivb
jno
stc
stos
fcmove
pop
and
xlat
test
sbb
jle
jecxz
push
mov
push
fmulp
inc
mov
ret
sti
pop
mov
adc
jae
xchg
sub
and
mov
push
pop
inc
outsb
fidivrl
addl
std
mov
pop
imul
test
mov
imul
dec
mov
jg
cmp
inc
push
sub
cld
ds
arpl
mov
repz
cwtl
mov
inc
ds
or
sbb
jne
daa
int3
pop
insl
jmp
fisubrs
jnp
xor
jbe
into
scas
push
loopne
and
xor
cmp
andl
mov
in
push
iret
jge
dec
dec
sbb
out
icebp
xchg
sbb
in
jl
inc
cmpsb
dec
insl
cmpl
movsl
and
andb
jmp
lahf
out
xor
add
push
scas
fwait
lahf
inc
mov
outsb
test
jg
bound
dec
jb
and
push
popf
mov
iret
inc
pop
sub
ret
jnp
ds
idiv
adc
test
push
cmc
or
in
sbb
popa
mov
movsb
aaa
cmp
hlt
or
int
orb
push
js
pop
xlat
inc
cmp
mov
push
fdivrl
xor
outsb
rcrl
andb
jg
or
mov
cmpsl
jecxz
ret
mov
pop
andl
or
sub
xor
mov
lret
cmp
mov
cs
sbb
scas
ficomps
and
or
inc
loop
and
fs
jo
adc
mov
lods
clc
and
inc
out
xor
cmpsb
xor
sub
testb
inc
adc
xchg
mov
gs
sbb
or
and
cmp
imul
shl
add
lods
xchg
addr16
jmp
dec
rcl
pop
in
xchg
xchg
cltd
or
in
divl
aad
repnz
nop
add
cltd
inc
scas
gs
fisubl
xor
jnp
xchg
add
lock
mov
jl
test
test
cs
dec
inc
lods
pop
push
inc
or
scas
aas
fwait
sahf
add
push
jle
subb
ss
rol
loopne
std
jne
daa
cwtl
addl
and
inc
mov
loop
inc
test
push
fistpl
xchg
pop
jp
sub
and
das
inc
or
mov
leave
imul
and
pop
pusha
sarl
mov
inc
dec
dec
push
mov
icebp
sti
shrl
and
sbb
cmpsb
ret
push
push
and
imull
subl
pop
aam
dec
push
ret
xor
es
dec
fstl
mov
xchg
inc
xchg
rorb
popa
fstpt
xor
lcall
jbe
push
xchg
lods
bts
add
jp
cltd
dec
jb
test
and
push
push
cs
test
call
xchg
insl
sub
mov
inc
sbb
es
cli
movsl
inc
out
repnz
out
jb
jmp
jnp
sahf
and
or
call
mov
or
mov
pop
adc
ja
and
daa
sbb
inc
push
pop
sbb
stos
cmpsl
leave
fwait
or
push
jne
jae
pop
fidivrl
push
scas
fldenv
jl
jns
push
pop
in
adc
xchg
insl
lret
ss
lret
outsb
cmpsb
or
dec
inc
addr16
xchg
pusha
leave
lea
xchg
push
mov
pop
pop
in
xorl
fidivs
jle
aam
out
lretw
outsb
addl
aam
add
roll
push
mov
lock
dec
stos
js
ror
insb
dec
mov
jnp
mov
insl
push
ljmp
iret
mov
inc
gs
testb
lods
mov
pop
icebp
add
out
jle
jno
add
movaps
xchg
adc
cmp
loopne
lea
sub
jmp
clc
imul
push
int
rcl
mov
or
arpl
loopne
jge
push
xchg
sbb
pop
pop
aaa
add
clc
or
add
ret
int3
inc
loopne
pop
divl
adc
pop
test
shll
popf
scas
ss
and
adc
movsb
ss
push
popa
adc
addr16
add
imul
dec
jnp
jno
push
jno
jge
or
subl
mov
push
and
mov
test
push
movsl
and
xor
cmp
mov
stos
pop
cmpsb
mov
xchg
pusha
mov
push
gs
out
mov
mov
sarb
push
sarl
fiaddl
sbb
pop
sbb
imul
mov
cmpsl
int
xor
into
jmp
pop
push
jbe
lcall
adc
push
mov
outsb
and
ds
sbb
cmpb
mov
dec
mov
cs
mov
or
and
mov
push
push
jae
cmp
out
push
mov
iret
add
rcll
mov
push
fcompl
and
dec
cmc
in
lahf
pushf
xor
fmuls
out
sbb
xor
andl
adc
xchg
adc
fildll
aas
mov
aaa
movsl
cli
jns
inc
xor
insl
xor
into
js
pushf
gs
inc
outsb
loopne
out
add
outsb
addr16
adc
sub
int3
ficompl
add
pop
sbb
out
loope
xlat
dec
xor
pop
cmp
mov
add
mov
adc
aad
sub
nop
fndisi(8087
xlat
dec
push
arpl
inc
shr
fsts
xchg
cmp
repz
negl
lea
jmp
push
dec
pop
pop
dec
cmp
adc
mov
shr
dec
mov
xor
mov
aas
cmp
jb
out
dec
negl
xor
inc
pop
insl
out
mov
push
cwtl
cmovns
cmp
movsl
xor
or
mov
dec
pop
sbb
mov
jae
fimuls
mov
sbb
and
mov
rorl
lods
stos
testb
mov
push
or
out
jo
shrb
cld
adc
rorl
ret
out
out
push
push
sbb
push
or
scas
and
ret
andnps
fnstsw
outsb
call
inc
in
mov
lods
mov
pop
mov
incl
jb
sbb
or
add
dec
dec
cltd
jg
push
xchg
fildl
pop
mov
push
sbb
adc
jl
test
cmp
in
push
and
shll
dec
and
out
push
rcrb
add
or
pop
incl
iret
xorb
les
cmc
imul
jmp
jle
mov
int
xor
dec
sbb
inc
popf
mov
and
cmpsb
fldcw
mov
cli
out
std
and
xor
pop
jns
pop
insb
in
pop
loopne
mov
loopw
push
push
or
popf
stc
addr16
dec
cltd
jp
adc
mov
call
ret
pop
cmpsl
dec
ljmp
pusha
jne
arpl
std
pop
sbb
lret
xor
xchg
xor
or
out
addr16
mov
and
fs
sarb
and
push
xor
jnp
in
lahf
jle
mov
into
adc
push
iret
add
out
sub
pop
jno
cs
sbb
stos
mov
lock
adc
rcrb
xchg
stos
sub
sbb
out
imul
xor
ja
fadd
xor
xchg
mov
and
xor
hlt
xchg
daa
sbb
insb
dec
inc
jo
dec
jge
push
dec
sbb
pop
or
xor
dec
int3
das
daa
or
mov
fisubrs
int
and
jo
popa
xchg
xor
dec
sti
movsb
roll
mov
xchg
mov
in
in
aam
enter
daa
in
mov
cmp
or
jl
cmpsb
pop
dec
dec
dec
inc
push
orl
xor
mov
lahf
and
jbe
test
inc
fstps
cmpsb
pop
ret
aam
int
sbb
les
pop
lahf
gs
push
loopne
loope
jle
cmc
xor
cmp
test
mov
pusha
hlt
cmp
mov
sbb
out
add
pop
int3
xor
xlat
jp
push
sub
lds
aad
cmpsl
lcall
fcoml
stos
and
test
add
jg
out
mov
call
inc
mov
insb
push
and
std
push
push
adc
cmp
stos
push
testl
repnz
sbb
iret
sahf
ja
inc
cmc
mov
scas
xor
pop
pop
outsl
insl
mov
loop
pop
sub
jmp
std
xchg
adc
repz
ss
cmp
mov
mov
shlb
lea
sarl
loopne
pop
cmp
push
int3
jns
inc
fldt
adc
test
dec
add
mov
xor
sub
enter
frstor
outsl
bound
xor
stc
nop
mov
lcall
test
add
xchg
xchg
mov
xchg
mov
lea
hlt
cs
aam
rcrl
or
push
mov
loop
cmp
push
add
dec
inc
lock
fsincos
sub
scas
and
mov
je
xchg
cli
jecxz
and
icebp
or
std
ret
fwait
xor
sahf
testl
outsb
mov
fstpt
mov
cmpsl
jle
fnstcw
add
aaa
bound
pop
dec
inc
rcll
adc
lret
or
loopne
and
shl
cmpsl
in
sbb
mov
test
inc
nop
lret
add
or
je
mov
mov
or
pop
xor
xor
sub
fisttpll
sbb
fucom
arpl
clc
sbb
or
mov
add
lods
sub
out
sbb
pop
xchg
inc
ja
push
dec
shrb
punpckhwd
fildl
stc
pop
add
test
xorb
stos
dec
test
push
stos
xchg
stos
sbb
sub
rorl
mov
out
mov
add
jmp
cltd
insb
ljmp
clc
pushf
xrelease
sub
mov
mov
iret
ja
insl
das
dec
or
or
or
pop
popf
fwait
imul
aam
xchg
push
shr
fcompl
lds
rcll
mov
dec
fmuls
push
addl
jp
adc
mov
in
mov
shl
in
xchg
stos
pusha
adc
mov
sbb
nop
xchg
jbe
mov
ret
xchg
cld
xchg
andl
out
loop
popf
lret
mov
cs
stos
xor
and
add
call
jle
outsl
cmp
js
lahf
adc
fmul
pusha
sbb
pop
mov
inc
inc
ret
test
push
insl
dec
fisttps
add
inc
neg
push
mov
xchg
add
outsl
sbb
fstpl
mov
pop
scas
mov
sbb
and
mov
js
jno
test
cltd
ljmp
addb
push
shrl
jle
cmpsl
or
mov
add
test
int3
sbb
pop
push
jns
ficoms
inc
loopne
jmp
mov
xor
enter
xchg
and
movsb
dec
mov
push
jmp
jb
in
and
in
shrl
pusha
daa
in
loopne
cmp
out
jl
xchg
inc
dec
mov
mov
ret
and
popa
mov
inc
les
push
test
psadbw
add
push
pop
hlt
mov
js
pop
mov
push
loope
aas
sub
cmpsb
and
jecxz
dec
ds
cmp
ljmp
cwtl
cmp
add
sub
ror
xor
inc
dec
cmp
ss
sub
mov
push
gs
loope
pop
push
mov
jnp
sub
lea
ljmp
xorb
mov
das
mov
pop
xchg
mov
repz
add
movsl
cmp
gs
testl
imul
out
adc
leave
mov
cmc
jp
and
cmpsl
dec
outsl
dec
mov
loop
ret
repnz
mov
inc
cmp
xor
mov
lods
lods
out
decb
lret
movl
xor
sub
jecxz
or
in
adc
ds
gs
mov
mov
adc
imul
cmp
data16
insl
sbb
gs
fcmovnbe
int
fldcw
in
mov
and
sti
mov
push
icebp
lret
mov
dec
dec
adc
inc
out
dec
fnstcw
cmpsb
enter
fs
xchg
repnz
call
push
add
pop
scas
cmpsb
bound
scas
stos
jns
mov
nop
jmp
insl
mov
arpl
loopne
inc
dec
insb
inc
pop
jae
aas
js
cmpsl
jb
stos
cltd
dec
in
lret
je
xor
jecxz
andl
rorb
cwtl
mov
sub
pop
inc
inc
mov
push
fiaddl
adc
xchg
fucomi
movsl
repz
arpl
mov
lock
inc
das
in
loopne
xchg
lods
and
and
push
shl
fstpl
dec
cmp
xlat
cmpsl
jmp
push
mov
andb
cld
push
sub
push
xchg
ds
and
aaa
pop
push
add
shlb
push
aam
and
ret
sub
push
popa
fldl
inc
inc
clc
push
mov
jae
sub
popa
and
dec
lods
xchg
adc
mov
lea
fwait
bswap
aaa
imul
xchg
ljmp
iret
insb
mov
xchg
cmp
lahf
push
adc
and
xor
mov
xchg
ja
xchg
mov
xor
sbb
pop
add
inc
jne
aas
mov
xor
or
xor
push
xchg
adc
mov
shlb
fabs
dec
add
sbb
cltd
jp
imul
push
in
push
jne
jmp
mov
xchg
mov
bound
cmp
bound
in
in
xchg
pop
mov
mov
shll
or
stc
push
addr16
pop
idivl
mov
adc
leave
dec
mov
jmp
pop
cmp
pusha
stos
ret
stc
fistpll
lods
xchg
dec
cmpsb
fwait
jmp
xor
pop
out
sarb
mov
insl
addb
push
fdivrs
jnp
lret
loop
push
loop
adc
pop
pop
iret
mov
inc
out
pop
fwait
js
inc
into
std
mov
push
xor
or
orb
lahf
fcmovu
pop
repnz
xchg
pop
cmp
pop
imul
jge
test
shlb
mov
lret
jnp
leave
and
dec
arpl
sub
inc
jbe
cmp
sbb
btrl
pop
iret
or
pop
lock
add
add
fidivs
ja
loop
scas
roll
and
or
dec
mov
test
mov
jbe
xor
mov
inc
shll
lea
jno
out
jl
pop
js
sub
mov
movsl
ds
mov
lahf
arpl
notl
mov
fcoms
ja
cmc
mov
pop
call
es
mov
pop
sbb
repz
loope
fisubrl
sub
out
sarb
out
fstpt
shll
rcll
adc
aaa
insl
adcb
rolb
mov
pop
add
pop
nop
daa
sub
mov
xor
punpckhdq
sub
negb
test
sbb
mov
stc
lret
sti
hlt
mov
into
pop
and
pusha
fadds
pop
test
cmp
and
inc
testl
or
push
push
lcall
add
sahf
mov
xchg
pusha
xor
insb
and
lahf
pusha
movsl
stc
push
or
fs
enter
lahf
mov
movsl
lea
lret
cli
adc
xor
pop
cmp
fnstsw
or
push
into
and
xchg
loopne
lock
lret
add
rorl
adc
lock
add
adc
cmp
mov
sarb
pusha
nop
jge
xchg
scas
xchg
in
inc
or
fnstsw
jb
loop
add
outsl
fdivr
inc
cli
mov
adc
repz
scas
xchg
adc
mov
rcrb
xchg
push
adc
pop
mov
sbb
cmp
sub
out
pop
imul
dec
pop
lret
into
and
jecxz
daa
xchg
testl
cmp
sbb
push
mov
add
lea
leave
fistpl
xchg
mov
mov
fistps
das
ret
je
mov
movsl
pop
add
shl
mov
notb
push
insl
scas
jle
dec
xor
jne
mov
push
xor
movsl
lret
loopne
dec
mov
xor
out
mov
cli
js
xchg
cmp
mov
push
push
es
mov
clc
mov
dec
xchg
cmp
sub
pushf
or
aaa
adc
mov
mov
add
adc
daa
cmp
cltd
and
test
out
adc
bound
dec
xchg
mov
test
insl
js
adc
sbb
ret
dec
add
inc
mov
mov
pop
out
jle
pop
add
pop
imul
scas
and
ljmp
xor
sbb
mov
sbb
or
pushf
in
ja
leave
bound
xor
or
out
fwait
imul
and
and
negl
sbb
aad
xor
in
es
xchg
test
cmp
sub
adc
iret
addr16
scas
adc
cs
mov
iret
mov
ds
inc
dec
xchg
sbb
in
cmp
fistps
pop
xchg
sbb
mov
xchg
xchg
xchg
jne
cmpb
loopne
popfw
sbb
xor
lods
and
sbb
insb
sti
pop
push
jnp
popa
and
in
push
push
jbe
adc
in
iret
push
sbb
ret
aad
shlb
jecxz
fwait
add
push
repz
mov
or
sub
inc
xchg
jg
fidivrl
jge
sbb
inc
sti
imul
push
lds
pop
rolb
cwtl
repnz
lds
hlt
jae
hlt
arpl
jb
inc
jns
and
sbb
fimuls
aaa
cld
imul
add
call
pop
mov
dec
ficoms
shlb
cmp
es
out
inc
sarl
add
adc
push
popf
ret
jae
ljmp
mov
daa
ljmp
jno
or
jl
repz
dec
cwtl
xor
sbb
or
pop
cmp
icebp
test
out
push
movsl
sub
test
cmpsb
loope
adc
inc
cmpl
out
pop
popf
mov
loope
cltd
in
sub
or
xor
hlt
sub
sub
lock
push
push
cmp
subb
lods
sbb
ljmp
scas
cmc
cmp
ret
jae
int
int
sub
fstps
xor
fcoml
dec
imulb
scas
lahf
pop
outsb
mov
sub
call
dec
mov
mov
sub
push
ja
push
sbb
pusha
cmp
fldt
test
inc
inc
shrl
rcrl
filds
xor
or
std
outsl
or
loop
xor
push
push
fsubl
icebp
adc
adc
lods
jnp
mov
addr16
inc
in
xor
stos
pop
cmp
stos
repz
xor
into
add
andl
sbb
pop
ljmp
imul
xchg
data16
sbb
fildl
pop
xlat
dec
mov
jb
test
leave
in
mov
cmp
mov
pushf
pop
movsb
aad
in
nop
inc
mov
dec
into
pop
filds
push
data16
mov
cld
repz
jge
rcrb
push
rol
adc
and
pop
sub
loope
sub
sub
inc
mov
aas
mov
and
cmp
icebp
je
addr16
orl
push
mov
inc
mov
arpl
mov
mov
scas
dec
out
sbb
inc
insb
pop
test
adc
das
mov
mov
mov
test
inc
roll
notb
push
dec
xor
les
mov
jnp
cs
and
mov
test
mov
stos
fsubl
xchg
idiv
rcrb
iret
sub
lods
mov
mov
mov
clc
leave
daa
int3
xchg
jnp
and
adc
sub
and
mov
sbb
push
cmp
add
lods
negb
rcll
mov
mov
dec
cli
loope
test
cli
sub
and
xchg
and
imull
loope
mov
add
pushf
jge
movsb
xor
cmp
push
mov
sbb
xor
mov
cmp
pop
inc
stc
and
or
or
fwait
test
push
xor
stc
jne
sbb
mov
jno
out
jns
adc
mov
jns
idivl
in
mov
cltd
mov
adc
or
movsl
repnz
orb
pop
dec
lods
mov
bswap
mov
or
jbe
jbe
push
sbb
adc
fistpll
xchg
xchg
out
lahf
into
jmp
pop
push
orw
shl
or
clc
jno
push
jmp
shrb
xor
subb
jnp
mov
loopne
dec
insl
lods
adc
mov
xchg
pop
or
inc
in
sub
push
mov
fimuls
jbe
adc
in
fisubrl
notb
aaa
mov
imul
aam
xchg
fadds
mov
jno
arpl
push
stos
hlt
mov
std
push
inc
jl
in
jge
inc
rcrb
mov
aaa
mov
shll
fisttpl
add
cli
pushf
or
jo
loop
scas
xchg
or
cltd
cmp
test
jbe
test
in
mov
adc
jmp
faddl
jl
pop
orb
and
seto
and
xlat
adcl
ljmp
adc
cmpsb
js
movsl
icebp
pop
fwait
bound
loope
jl
sub
inc
cmp
aas
dec
ds
psadbw
lret
imul
mov
dec
cmpb
scas
sbb
in
add
cmp
jle
nop
xchg
or
out
pop
sub
sub
cli
roll
mov
jae
sub
frstor
xchg
mov
xchg
jg
int
mov
mov
sbb
push
sbb
int3
pop
fcoms
push
inc
roll
mov
cmc
sbb
cltd
sahf
add
add
iret
daa
or
dec
cmc
call
loop
aaa
xchg
lds
fs
adc
stc
inc
ss
push
cmp
enter
js
divb
lock
in
jg
add
inc
js
into
out
out
outsb
loopne
loopne
push
sbbl
cmp
imul
cwtl
xor
add
sbb
push
andb
or
sub
adc
mov
add
sti
cmp
mov
push
cmp
sub
mov
lcall
pop
lret
xchg
xchg
mov
lea
xor
xor
shl
fcomps
or
inc
pushf
mov
and
mov
roll
movsl
inc
stos
je
aas
push
out
jb
aam
dec
dec
jno
je
decl
nop
cmp
std
aam
std
pop
xchg
mov
cmp
or
inc
je
jns
out
pop
dec
lods
repnz
cmpsb
es
imul
mov
xor
shl
push
in
insl
jl
test
cmpsl
call
addl
popa
cld
jmp
pusha
pop
mov
push
push
rcrb
inc
pop
mov
jg
sub
fwait
aaa
aam
lock
fidivl
sbb
es
add
jl
xchg
clc
add
dec
xchg
mov
lahf
pop
popa
gs
lods
es
mov
test
imul
add
pmulhw
add
jge
xchg
lahf
testb
cld
push
call
cmc
jns
jb
std
xchg
fisubs
aam
leave
shr
and
pop
xchg
shrl
inc
dec
imul
sbb
pop
xor
dec
xor
and
xchg
bound
inc
pop
je
sub
dec
fdecstp
insl
inc
nop
sbb
or
pushl
push
aad
xor
mov
lahf
out
pop
in
lret
cs
jns
cmp
in
cmpsl
das
xchg
inc
push
sahf
mov
pop
pop
sub
or
sub
fcmovbe
jp
sbb
mov
jae
mov
jp
mov
pop
xor
in
jae
pusha
jl
cwtl
add
ret
jmp
sub
bound
out
jno
xchg
mov
sub
les
dec
es
insb
shll
in
jnp
fmuls
push
xchg
enter
xor
fsubrl
test
insb
mov
das
jae
mov
jbe
fcomi
mov
mov
int3
fisubl
addr16
pop
push
sbb
sti
out
imul
scas
cmp
xor
shlb
iret
repnz
repz
test
pmuludq
stos
arpl
lret
or
xor
jge
test
aaa
jp
lds
idiv
xchg
add
cmc
cwtl
pop
adc
or
popf
clc
arpl
repz
scas
jo
sbb
adc
mov
outsl
repnz
mov
jbe
adc
outsl
stc
pop
enter
daa
call
fdivs
jl
lahf
mov
jbe
sub
repnz
inc
sbb
rcrb
xchg
and
js
cmp
outsl
cmpsb
out
arpl
pop
sbb
mov
stos
out
push
aad
loope
xorl
les
cmp
adc
cmpsb
mov
out
dec
and
roll
add
xor
adc
dec
das
mov
sub
jae
lcall
hlt
fsubrl
sub
or
push
mov
mov
cwtl
rorl
pop
fsubl
cmp
jle
and
leave
cmp
push
pshufw
mov
cmp
fildl
mov
dec
or
xchg
or
stos
mov
outsl
enter
pop
jno
stc
jl
shlb
adc
leave
ss
pop
lods
dec
pop
xor
out
pop
mov
xor
jb
cmp
rcrb
mov
or
gs
inc
loopne
cmpsb
cmp
sub
pop
adc
adc
stc
pushf
add
aas
inc
data16
jmp
cmp
xor
leave
repnz
sub
mov
in
xchg
push
aad
fwait
push
nop
std
adc
dec
mov
inc
xor
fstps
pop
hlt
fisubrl
repz
addr16
call
dec
xchg
scas
pop
jp
jmp
pushf
aaa
out
and
cs
test
pop
and
inc
lds
aas
hlt
stos
mov
lahf
addr16
sarl
jecxz
stos
sbb
add
std
push
cmp
mov
xchg
lret
mov
icebp
xlat
andl
dec
fldt
andl
lock
das
inc
mov
lret
and
push
shl
sbb
negb
mov
insl
arpl
orl
fisubl
sbb
test
cld
adc
imul
fucomp
mov
iret
mov
mov
sar
call
sub
xor
and
xchg
es
mov
clc
aas
cld
adcl
jl
pop
lods
inc
loop
jbe
push
mov
test
inc
orb
push
sti
add
out
cltd
leave
mov
mov
xchg
jmp
stos
out
dec
enter
in
rcrl
sbb
dec
adc
mov
andl
stos
lea
lods
ja
mov
lret
mov
and
mov
and
mov
das
xchg
mov
test
adc
cmp
or
leave
xor
js
sub
mov
lahf
sahf
out
aaa
fldt
jns
sbb
fsts
or
or
mov
jp
fwait
cltd
mov
sti
xchg
mov
jmp
sub
inc
pusha
pop
mov
fbstp
imul
repz
sub
sbb
mov
imul
and
adc
jnp
mov
sbb
fildl
mov
ret
push
pop
ja
cwtl
inc
cli
sub
push
cmp
stos
or
insb
and
cmp
fcmovbe
mov
mov
sbbb
mov
fadd
mov
pop
fldlg2
leave
cld
cmp
hlt
push
rcll
leave
inc
cmpb
fisubrl
or
cmp
add
xor
pop
inc
aam
fiadds
add
dec
sbb
and
add
movsb
add
cmp
jbe
out
in
push
inc
arpl
and
inc
cmp
push
mov
stos
mov
dec
in
sti
push
aad
mov
fidivs
iret
push
push
jnp
repz
aam
xor
cmpsb
push
pop
pop
mov
cmp
or
inc
push
mov
loope
scas
and
pop
pop
cmp
pop
ds
mov
adc
sub
in
popa
int3
fistps
lds
xor
stos
or
sahf
int
fldl
sub
inc
aas
pop
iret
inc
lahf
lcall
in
fcoml
cmp
scas
outsb
fsts
roll
mov
mov
mov
test
and
or
and
fmuls
jmp
or
lret
pop
shll
mov
jae
dec
and
xor
adc
loop
fimuls
xor
in
mov
call
mov
mov
cli
fisubs
xor
or
or
push
xchg
lods
movsl
jo
jl
add
in
xlat
pop
inc
or
adc
add
xchg
and
adc
dec
testb
sub
stos
sbb
and
cmp
loope
sub
and
icebp
dec
sti
cltd
xor
incb
mov
nop
fcomp
xchg
dec
jmp
es
inc
push
inc
fsts
dec
or
outsl
lret
sbb
adc
call
into
sarb
sub
cli
mov
loop
xor
or
cs
xlat
add
xchg
push
inc
loopne
nop
aas
xchg
jae
jb
lahf
enter
je
sub
movb
insb
std
lods
sarl
cwtl
pop
ret
clc
mov
je
mov
test
cmp
ret
mov
pop
xchg
dec
mov
lock
mov
das
aas
and
mov
addl
shll
sbb
negb
mov
dec
and
and
or
dec
in
icebp
mov
mov
lret
pushf
sbb
mov
mov
out
push
sub
rorl
adc
outsl
jnp
aam
jno
ret
clc
push
add
lret
clc
jp
sbb
push
xor
lods
pop
inc
mov
out
cmp
xchg
lock
push
outsl
xchg
cmc
bt
add
jl
add
test
outsl
dec
mov
sti
insb
push
outsb
lods
faddp
lea
