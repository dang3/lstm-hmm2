jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
arpl
xor
gs
ss
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
cmp
jge
lea
mov
mov
dec
xchg
lea
xchg
dec
mov
mov
lea
mov
lea
lea
inc
inc
dec
jne
mov
mov
dec
dec
movl
mov
mov
mov
push
mov
push
call
mov
lea
mov
xchg
mov
mov
dec
je
mov
mov
lea
mov
mov
lea
mov
inc
dec
inc
dec
je
mov
inc
dec
movl
mov
mov
mov
push
mov
push
call
cmp
jp
mov
lea
mov
dec
mov
lea
mov
inc
lea
xchg
lea
lea
mov
mov
xchg
lea
mov
dec
inc
mov
pop
ret
add
xor
xor
aaa
xor
xor
add
xor
xor
xor
add
add
in
add
cmp
js
mov
xchg
lea
mov
lea
inc
dec
inc
xchg
lea
lea
mov
xchg
mov
lea
lea
dec
dec
jne
mov
dec
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jnp
xchg
mov
mov
mov
mov
xchg
xchg
mov
inc
dec
jne
dec
lea
dec
inc
dec
lea
lea
mov
lea
inc
inc
inc
movl
mov
mov
mov
push
mov
push
call
cmp
jge
lea
mov
mov
dec
xchg
lea
xchg
dec
mov
mov
lea
mov
lea
lea
inc
inc
dec
jne
mov
mov
dec
dec
mov
pop
ret
add
add
xor
xor
xor
add
push
mov
add
mov
mov
mov
lea
mov
xchg
mov
mov
dec
je
mov
mov
lea
mov
mov
lea
mov
inc
dec
inc
dec
je
mov
inc
dec
mov
cmp
je
jmp
cmp
jle
dec
inc
dec
dec
mov
mov
mov
mov
mov
lea
mov
mov
dec
dec
je
lea
mov
mov
xchg
mov
inc
inc
inc
mov
xor
divl
test
jne
cmp
js
mov
xchg
lea
mov
lea
inc
dec
inc
xchg
lea
lea
mov
xchg
mov
lea
lea
dec
dec
jne
mov
dec
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jnp
mov
mov
mov
mov
inc
inc
dec
jne
mov
dec
mov
xchg
mov
lea
xchg
lea
mov
dec
dec
je
inc
dec
inc
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jp
mov
lea
mov
dec
mov
lea
mov
inc
lea
xchg
lea
lea
mov
mov
xchg
lea
mov
dec
inc
mov
cmp
je
jmp
cmp
jge
lea
mov
mov
dec
xchg
lea
xchg
dec
mov
mov
lea
mov
lea
lea
inc
inc
dec
jne
mov
mov
dec
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jp
mov
mov
lea
mov
mov
lea
mov
lea
xchg
dec
jne
inc
inc
mov
lea
xchg
mov
dec
inc
inc
dec
je
mov
cmp
je
jmp
cmp
jge
lea
mov
mov
dec
xchg
lea
xchg
dec
mov
mov
lea
mov
lea
lea
inc
inc
dec
jne
mov
mov
dec
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
jmp
cmp
jnp
mov
mov
mov
mov
inc
inc
dec
jne
mov
dec
mov
xchg
mov
lea
xchg
lea
mov
dec
dec
je
inc
dec
inc
mov
sub
mov
cmp
jnp
xchg
mov
mov
mov
mov
xchg
xchg
mov
inc
dec
jne
dec
lea
dec
inc
dec
lea
lea
mov
lea
inc
inc
inc
push
mov
mov
xor
call
mov
cmp
js
mov
xchg
lea
mov
lea
inc
dec
inc
xchg
lea
lea
mov
xchg
mov
lea
lea
dec
dec
jne
mov
dec
inc
mov
mov
mov
call
cmp
jp
mov
lea
mov
dec
mov
lea
mov
inc
lea
xchg
lea
lea
mov
mov
xchg
lea
mov
dec
inc
push
mov
mov
xor
call
mov
cmp
jle
dec
inc
dec
dec
mov
mov
mov
mov
mov
lea
mov
mov
dec
dec
je
lea
mov
mov
xchg
mov
inc
inc
inc
mov
lea
mov
xchg
mov
mov
dec
je
mov
mov
lea
mov
mov
lea
mov
inc
dec
inc
dec
je
mov
inc
dec
lea
mov
push
jmp
cmp
jnp
xchg
mov
mov
mov
mov
xchg
xchg
mov
inc
dec
jne
dec
lea
dec
inc
dec
lea
lea
mov
lea
inc
inc
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jge
lea
mov
mov
dec
xchg
lea
xchg
dec
mov
mov
lea
mov
lea
lea
inc
inc
dec
jne
mov
mov
dec
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jp
mov
mov
lea
mov
mov
lea
mov
lea
xchg
dec
jne
inc
inc
mov
lea
xchg
mov
dec
inc
inc
dec
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
cmp
jb
mov
mov
lea
xchg
lea
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
dec
jne
mov
inc
dec
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jle
dec
inc
dec
dec
mov
mov
mov
mov
mov
lea
mov
mov
dec
dec
je
lea
mov
mov
xchg
mov
inc
inc
inc
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
jp
mov
lea
mov
dec
mov
lea
mov
inc
lea
xchg
lea
lea
mov
mov
xchg
lea
mov
dec
inc
push
call
mov
push
mov
push
call
mov
mov
mov
cmp
js
mov
xchg
lea
mov
lea
inc
dec
inc
xchg
lea
lea
mov
xchg
mov
lea
lea
dec
dec
jne
mov
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jnp
xchg
mov
mov
mov
mov
xchg
xchg
mov
inc
dec
jne
dec
lea
dec
inc
dec
lea
lea
mov
lea
inc
inc
inc
mov
mov
movl
mov
cmp
jb
mov
mov
lea
xchg
lea
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
dec
jne
mov
inc
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jle
dec
inc
dec
dec
mov
mov
mov
mov
mov
lea
mov
mov
dec
dec
je
lea
mov
mov
xchg
mov
inc
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jb
mov
mov
lea
xchg
lea
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
dec
jne
mov
inc
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jnp
mov
mov
mov
mov
inc
inc
dec
jne
mov
dec
mov
xchg
mov
lea
xchg
lea
mov
dec
dec
je
inc
dec
inc
mov
pop
ret
imul
add
outsb
add
insb
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
xchg
lcall
cld
mov
xchg
sahf
mov
mov
mov
mov
cld
cld
mov
mov
mov
cwtl
mov
xchg
lahf
mov
xchg
cltd
mov
lahf
nop
lods
mov
mov
xchg
lahf
mov
fisubl
cld
cld
xchg
cld
lahf
cld
mov
lcall
cld
into
cld
mov
cld
cld
cld
cld
cld
scas
jne
jge
add
mov
mov
xchg
test
loopne
push
fstpt
fstpt
sbb
mov
cld
fidivrs
repnz
pop
pusha
xchg
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
mov
cmp
mov
xor
jae
or
cmp
mov
cld
scas
jne
jge
xor
mov
ja
sub
jne
aam
jne
xor
mov
xor
lods
mov
mov
jne
xor
mov
xor
mov
sbb
movsb
jne
sbb
or
cld
cld
jne
or
hlt
jne
sbb
enter
jae
or
mov
cld
cld
jae
and
mov
cld
stc
subb
and
cld
std
mov
adc
cld
cld
xchg
cld
xchg
cld
jne
xor
clc
std
mov
xor
lods
shlb
adc
xchg
stc
subb
cld
jne
xor
cld
nop
jecxz
mov
mov
jne
xor
in
std
mov
adc
jne
in
std
mov
jne
xor
in
std
mov
adc
adc
mov
or
cld
cld
lods
jne
adc
jne
xor
lods
les
sbb
adc
jne
and
jae
sub
mov
lods
jne
adc
jne
xor
lods
les
sbb
jge
sbb
jge
and
jne
and
cld
push
jge
xor
jne
xor
clc
cld
stc
jg
or
or
or
mov
jae
add
mov
jae
adc
cmp
pop
mov
mov
lods
jne
cmp
movsb
xchg
cld
jl
cld
xchg
cld
jne
xor
mov
xor
lods
mov
cld
jl
cld
xchg
cld
jne
hlt
lods
jne
xor
lods
mov
scas
add
lahf
adc
loopne
or
or
push
jnp
cld
or
or
cmp
push
jne
cmpsl
ds
cmp
jne
pushf
jne
hlt
jne
clc
or
lret
and
xchg
cld
cld
cld
lea
lret
xor
cld
cld
cld
call
cld
cld
cld
fisttpll
mov
cld
cld
cld
in
cmp
adc
adc
cld
cld
cld
shll
in
adc
cld
cld
cld
adc
nop
mov
xor
sbb
pop
adc
cld
cld
cld
cld
xchg
cld
idivb
lea
jge
mov
jae
dec
sti
mov
or
inc
or
cld
cs
pushl
ret
cmp
sbb
or
jmp
adc
or
or
ds
cld
ja
cld
jae
jae
inc
or
or
into
cmp
pop
inc
or
or
shll
xor
jnp
add
or
jae
or
hlt
jl
cld
cld
inc
push
jl
cld
cld
inc
mov
jbe
add
insb
clc
jl
cld
or
cld
adc
push
cld
jne
or
or
or
add
stc
xorb
cld
inc
mov
jbe
push
jne
or
dec
jbe,pn
add
or
or
mov
mov
mov
add
sub
push
cld
inc
mov
jbe
push
int
jbe
add
add
or
std
ds
jbe
add
jl
cld
std
fisttps
cld
cld
cld
je
push
int
jbe
add
mov
int
jbe
push
jbe
add
jl
cld
or
cld
dec
jne
cmpsl
cmp
jne
stos
je
or
cmp
hlt
jl
cld
mov
cld
pop
hlt
jl
cld
int
pop
repz
cld
int
jbe
hlt
jl
cld
stc
push
outsb
clc
jl
cld
std
fisttps
cld
cld
cld
pop
repz
cld
int
pop
hlt
jl
cld
jbe
clc
jl
cld
je
pop
int
pop
repz
cld
jbe
clc
jl
cld
int
jbe
hlt
jl
cld
je
clc
jl
cld
int
pop
repz
cld
jbe
pop
je
clc
jl
cld
int
pop
hlt
jl
cld
stc
push
jl
jl
cld
int
jbe
repz
cld
stc
push
outsb
clc
jl
cld
std
fisttps
cld
cld
cld
je
pop
int
jbe
pop
jbe
clc
jl
cld
into
mov
jbe
or
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jp
mov
mov
lea
mov
mov
lea
mov
lea
xchg
dec
jne
inc
inc
mov
lea
xchg
mov
dec
inc
inc
dec
je
movl
cmp
jnp
xchg
mov
mov
mov
mov
xchg
xchg
mov
inc
dec
jne
dec
lea
dec
inc
dec
lea
lea
mov
lea
inc
inc
inc
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jnp
mov
mov
mov
mov
inc
inc
dec
jne
mov
dec
mov
xchg
mov
lea
xchg
lea
mov
dec
dec
je
inc
dec
inc
mov
mov
call
mov
cmpl
je
mov
cmp
jb
mov
mov
lea
xchg
lea
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
dec
jne
mov
inc
dec
dec
mov
cmp
je
mov
subb
cmp
jle
dec
inc
dec
dec
mov
mov
mov
mov
mov
lea
mov
mov
dec
dec
je
lea
mov
mov
xchg
mov
inc
inc
inc
mov
xorb
cmp
jnp
mov
mov
mov
mov
inc
inc
dec
jne
mov
dec
mov
xchg
mov
lea
xchg
lea
mov
dec
dec
je
inc
dec
inc
incl
mov
cmp
jne
cmp
jge
lea
mov
mov
dec
xchg
lea
xchg
dec
mov
mov
lea
mov
lea
lea
inc
inc
dec
jne
mov
mov
dec
dec
mov
call
mov
cmp
jb
mov
mov
lea
xchg
lea
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
dec
jne
mov
inc
dec
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
mov
cmp
jb
mov
mov
lea
xchg
lea
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
dec
jne
mov
inc
dec
dec
cmp
jle
dec
inc
dec
dec
mov
mov
mov
mov
mov
lea
mov
mov
dec
dec
je
lea
mov
mov
xchg
mov
inc
inc
inc
mov
lea
mov
xchg
mov
mov
dec
je
mov
mov
lea
mov
mov
lea
mov
inc
dec
inc
dec
je
mov
inc
dec
push
mov
push
call
mov
pop
ret
mov
push
mov
add
mov
lea
mov
xchg
mov
mov
dec
je
mov
mov
lea
mov
mov
lea
mov
inc
dec
inc
dec
je
mov
inc
dec
mov
mov
mov
add
xor
add
mov
cmp
jne
ret
add
xor
cmp
jne
cmp
js
mov
xchg
lea
mov
lea
inc
dec
inc
xchg
lea
lea
mov
xchg
mov
lea
lea
dec
dec
jne
mov
dec
inc
movb
cmp
jle
dec
inc
dec
dec
mov
mov
mov
mov
mov
lea
mov
mov
dec
dec
je
lea
mov
mov
xchg
mov
inc
inc
inc
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
jb
mov
mov
lea
xchg
lea
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
dec
jne
mov
inc
dec
dec
call
call
call
call
test
jne
mov
jmp
movw
cmp
jp
mov
lea
mov
dec
mov
lea
mov
inc
lea
xchg
lea
lea
mov
mov
xchg
lea
mov
dec
inc
call
lea
mov
pop
ret
nop
push
mov
add
mov
cmp
jb
mov
mov
lea
xchg
lea
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
dec
jne
mov
inc
dec
dec
cmp
js
mov
xchg
lea
mov
lea
inc
dec
inc
xchg
lea
lea
mov
xchg
mov
lea
lea
dec
dec
jne
mov
dec
inc
push
push
push
call
mov
call
cmp
jnp
xchg
mov
mov
mov
mov
xchg
xchg
mov
inc
dec
jne
dec
lea
dec
inc
dec
lea
lea
mov
lea
inc
inc
inc
mov
pop
ret
add
push
outsb
je
jae
inc
dec
insb
and
and
add
add
add
jae
movl
cmp
jge
lea
mov
mov
dec
xchg
lea
xchg
dec
mov
mov
lea
mov
lea
lea
inc
inc
dec
jne
mov
mov
dec
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jle
dec
inc
dec
dec
mov
mov
mov
mov
mov
lea
mov
mov
dec
dec
je
lea
mov
mov
xchg
mov
inc
inc
inc
call
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
js
mov
xchg
lea
mov
lea
inc
dec
inc
xchg
lea
lea
mov
xchg
mov
lea
lea
dec
dec
jne
mov
dec
inc
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jnp
xchg
mov
mov
mov
mov
xchg
xchg
mov
inc
dec
jne
dec
lea
dec
inc
dec
lea
lea
mov
lea
inc
inc
inc
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jge
lea
mov
mov
dec
xchg
lea
xchg
dec
mov
mov
lea
mov
lea
lea
inc
inc
dec
jne
mov
mov
dec
dec
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
lea
mov
xchg
mov
mov
dec
je
mov
mov
lea
mov
mov
lea
mov
inc
dec
inc
dec
je
mov
inc
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jp
mov
lea
mov
dec
mov
lea
mov
inc
lea
xchg
lea
lea
mov
mov
xchg
lea
mov
dec
inc
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jnp
mov
mov
mov
mov
inc
inc
dec
jne
mov
dec
mov
xchg
mov
lea
xchg
lea
mov
dec
dec
je
inc
dec
inc
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jp
mov
mov
lea
mov
mov
lea
mov
lea
xchg
dec
jne
inc
inc
mov
lea
xchg
mov
dec
inc
inc
dec
je
movl
mov
mov
mov
push
mov
push
call
cmp
jle
dec
inc
dec
dec
mov
mov
mov
mov
mov
lea
mov
mov
dec
dec
je
lea
mov
mov
xchg
mov
inc
inc
inc
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
js
mov
xchg
lea
mov
lea
inc
dec
inc
xchg
lea
lea
mov
xchg
mov
lea
lea
dec
dec
jne
mov
dec
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jnp
xchg
mov
mov
mov
mov
xchg
xchg
mov
inc
dec
jne
dec
lea
dec
inc
dec
lea
lea
mov
lea
inc
inc
inc
movl
mov
mov
mov
push
mov
push
call
cmp
jge
lea
mov
mov
dec
xchg
lea
xchg
dec
mov
mov
lea
mov
lea
lea
inc
inc
dec
jne
mov
mov
dec
dec
mov
mov
mov
lea
call
cmp
jnp
mov
mov
mov
mov
inc
inc
dec
jne
mov
dec
mov
xchg
mov
lea
xchg
lea
mov
dec
dec
je
inc
dec
inc
ret
add
xor
xor
xor
add
aaa
cmp
xor
cmp
add
add
xor
xor
xor
cmp
add
aaa
cmp
xor
add
add
xor
xor
xor
add
xor
cmp
cmp
aaa
xor
xor
add
xor
xor
xor
ret
lea
mov
lret
jne
add
pop
mov
add
xor
hlt
xchg
jae
lret
or
add
sub
imul
or
xchg
stos
mov
outsl
add
pop
add
add
aas
dec
scas
mov
int3
pop
stos
rolb
dec
clc
and
xchg
add
loope
push
mov
icebp
pop
sbb
add
xchg
movsl
xor
outsb
add
stos
mov
ljmp
adc
test
mov
mov
dec
dec
push
add
adc
xor
imul
lret
jecxz
adc
push
scas
add
addl
cmp
orl
out
roll
ret
cmp
add
or
stos
dec
add
push
js
sub
hlt
fcmovu
sbb
std
pop
jb
jp
lock
pop
insl
repnz
add
cmpsb
add
add
or
inc
addb
xchg
jecxz
js
fistl
xor
dec
lods
xchg
cmp
pusha
out
aaa
push
icebp
cmp
fidivrs
add
add
mov
and
add
add
xchg
add
add
add
iret
adc
push
jbe
mov
leave
dec
add
pop
add
das
add
add
add
roll
push
outsb
push
add
js
and
cmp
add
add
leave
pop
mov
nop
mov
sbb
hlt
fsubs
add
xchg
add
pop
inc
mov
fdiv
add
cltd
xor
mov
lcall
mov
cwtl
push
add
filds
and
jecxz
incb
add
js
adc
inc
or
sbb
push
xchg
add
add
scas
bound
jbe
mov
pusha
add
add
sub
fstpt
add
rolb
and
dec
xor
cwtl
add
int3
ret
iret
repz
test
adc
push
push
add
insb
adc
stos
add
add
add
add
insl
inc
add
ja
mov
std
pop
add
mov
dec
add
and
cmp
add
lret
mov
add
movsb
xchg
fimuls
push
stos
add
jne
icebp
add
mov
pop
inc
lea
sti
add
daa
cmpsb
add
jmp
add
add
sbb
sarb
jno
push
add
lods
cltd
push
cli
sub
mov
loopne
orb
scas
adc
aad
out
fsubs
divl
rolb
mov
jb
add
jae
dec
cltd
adcb
scas
cmp
jmp
add
ret
and
xchg
fxch
cmp
add
xchg
and
test
add
inc
lcall
add
push
pmaxub
sbb
pop
inc
sbb
hlt
push
add
add
push
add
pop
add
pop
inc
push
int
leave
outsl
xchg
dec
add
and
add
add
add
add
mov
add
int
addb
add
xor
add
adc
add
add
xchg
xor
jb
lret
add
stc
cli
pop
dec
push
andb
call
lret
and
push
push
les
add
sub
rorb
add
mov
add
leave
outsb
addb
push
jge
pop
popa
add
ret
adc
mov
jo
xlat
add
dec
xchg
jns
cli
mov
adc
add
loope
or
fdivl
in
sbb
mov
push
ret
sbb
pop
es
sbb
cmc
aad
roll
xchg
pop
fsts
popa
mov
lods
lods
dec
fsubl
mov
loope
mov
ret
push
add
and
test
adc
push
push
fs
fucomp
adc
sbb
and
shll
dec
jg
xchg
nop
stos
jge
xchg
adc
push
cvtpi2ps
jp
leave
xor
mov
int
int
sub
les
test
fsubr
ja
call
and
imulb
or
cltd
sbb
mov
jbe
add
lock
shrl
das
aas
loope
imul
xchg
add
cmp
pop
mov
pop
jp
pop
add
mov
mov
mov
jne
sub
mov
cltd
sub
idivb
xchg
or
and
pop
gs
dec
nop
sub
mov
icebp
cs
test
aam
cltd
sti
or
inc
es
jle
or
cli
pusha
push
rorl
outsl
mov
pop
into
dec
jno
movsl
xchg
xchg
jae
inc
cmp
lahf
out
popf
aam
dec
mov
scas
dec
mov
es
je
sub
ds
cmp
mov
inc
xacquire
out
pop
mov
or
mov
xchg
mov
mov
inc
and
fnstsw
xchg
lret
or
add
add
int3
cmp
int
pushf
mov
lds
mov
dec
scas
adc
fidivrl
xchg
cmp
sub
push
stc
cltd
mov
jge
adc
sbb
mov
cmp
sbb
jl
xchg
dec
je
add
pop
or
jo
jp
lahf
push
cmp
fucom
sub
push
jno
mov
cmpsb
lea
dec
in
pop
or
enter
pop
js
cltd
push
jb
loope
lret
orb
and
mov
sbb
mov
adcb
add
inc
test
or
outsl
xor
pop
shll
js
enter
xchg
mov
mov
xchg
push
loop
enter
mov
outsb
fsubl
arpl
cld
lcall
jg
dec
mov
cli
mov
or
and
add
dec
imul
inc
fdivs
lret
popa
shrl
adc
bnd
mov
test
add
cmpsb
mov
imul
xor
cmpsb
adc
push
cmp
addr16
add
in
js
mov
test
xchg
mov
fmuls
mov
xor
xor
jmp
inc
lea
pop
xchg
adc
push
lds
xor
adc
scas
mov
data16
xor
lods
aaa
add
mov
cmp
sub
adc
mov
cld
push
push
sti
push
sub
mov
pusha
pop
dec
push
jb
stc
jmp
fldl2t
out
les
sbb
xchg
addb
push
je
insl
push
mov
adc
inc
jae
sub
sub
aad
jmp
sub
push
faddl
iret
mov
clc
jecxz
test
cmpsb
fmull
lea
call
imull
mov
dec
xor
add
es
pop
aad
fiaddl
cmpsb
loope
fwait
mov
das
ds
and
je
or
mov
pop
mov
je
sbb
add
dec
push
icebp
stos
test
lret
sub
fisttpl
push
aaa
dec
lock
push
mov
xchg
sub
mov
cmpsl
pop
loope
dec
dec
insl
push
cwtl
lea
or
xchg
xchg
in
sbb
popa
lret
lods
mov
scas
mov
mov
ds
jmpw
and
mov
push
push
inc
cltd
push
add
add
rcrl
lcall
dec
jmp
rorl
fldt
out
or
scas
in
push
ljmp
xor
jge
or
mov
xor
jmp
push
xchg
in
dec
mov
loop
cmpl
ja
in
sub
inc
jne
stos
or
mov
pop
sbb
add
aaa
and
jns
jmp
in
jge
xchg
push
inc
add
ds
add
aaa
mov
gs
mov
mov
sub
mov
out
dec
mov
xchg
fists
cwtl
jmp
sub
movl
stos
mov
fucomp
push
pop
cmpsb
imulb
mov
mov
mov
mov
rol
jle
push
pushf
in
shrl
sbb
ret
jecxz
add
xchg
movb
popf
sti
sbb
mov
sub
imul
pop
lret
push
pusha
int3
push
mov
cmp
shrl
repnz
add
push
hlt
mov
cmc
arpl
into
inc
sub
mov
push
xlat
adc
add
cli
int3
daa
inc
repnz
mov
aas
movsb
and
test
mov
sub
rol
mov
cwtl
movsb
mov
xorb
int
jge
jg
sbb
daa
daa
add
outsb
mov
jl
ret
jecxz
add
cmp
jge
jp
test
movsb
enter
dec
cmp
pop
lods
test
cmp
push
inc
outsl
inc
data16
adc
hlt
in
inc
lahf
jb
mov
daa
push
push
or
push
sub
into
cmc
cmp
in
push
ds
movsl
mov
jmp
mov
push
push
int3
cmp
sbb
sahf
mov
adc
jle
xor
sbb
std
dec
js
out
mov
in
out
lcall
xor
sub
xchg
fimuls
sti
mov
xlat
mov
mov
xor
mov
pop
stos
and
pop
outsl
int
sub
incl
lret
test
mov
hlt
inc
sbb
inc
into
sahf
das
repz
addps
xor
loop
adc
fs
test
shll
cmp
and
mov
cli
in
mov
cmp
loop
or
adc
adc
cmc
or
pop
xor
popf
pop
movsl
aam
adc
pop
jg
lahf
push
mov
add
adc
lods
push
nop
inc
mov
in
xor
cmpsb
xor
cmp
adc
or
sti
pop
ret
jmp
jnp
stos
subl
insb
in
leave
push
pop
inc
or
and
les
jl
xchg
inc
xchg
lods
sbb
mov
or
xor
sahf
pushf
fsubrs
jmp
fidivl
aad
and
nop
cs
aas
icebp
sub
jb
mov
cmc
je
inc
je
test
out
call
mov
scas
mov
sub
sbb
flds
mul
inc
adc
inc
mov
jge
sbb
stc
es
decl
xor
fstpt
sbb
jno
push
cmpsl
add
mov
sub
mov
lcall
mov
fdivl
lock
aaa
push
pop
dec
xor
rcrb
test
sub
mov
ret
ss
ljmp
pop
sbb
stos
add
out
frstor
and
lods
and
mov
aam
das
and
add
push
add
aas
insl
cltd
mov
test
scas
xor
dec
fnstsw
push
imul
fs
xchg
in
stos
jo
imul
clc
test
push
lds
gs
mov
jno
or
xor
data16
nop
and
xchg
mov
dec
sbb
sub
push
je
dec
inc
loopne
inc
or
scas
or
push
mov
add
push
add
popf
movsb
sub
mov
sti
xor
jns
cmp
in
cmp
mov
std
sub
add
addr16
cmpsb
jp
out
mov
lahf
xor
loopne
mov
dec
test
enter
push
fbstp
ret
xchg
scas
mov
jmp
hlt
mov
out
push
or
xchg
loope
push
inc
fisubrs
and
jae
insb
sbb
jno
jle
repz
in
sahf
sub
fimull
iret
js
xor
xchg
imul
inc
mov
add
les
mov
mov
fimull
icebp
sbb
xchg
and
pop
mov
shlb
pushf
lods
or
mov
mov
subl
mov
sbb
inc
sub
or
jge
getsec
xchg
mov
fwait
add
xchg
int3
adc
in
movsb
ss
ljmp
ret
xor
scas
or
fwait
and
jle
cmp
mov
push
xchg
stos
std
jbe
xchg
jge
rcll
sbb
fnstenv
jmp
xor
repnz
jl
rclb
push
push
mov
jo
sub
pop
pop
mov
addl
test
pop
add
inc
daa
or
sub
aad
mov
hlt
pop
testb
push
pop
popa
loope
aam
sub
fs
jnp
iret
ds
lea
and
mov
cmp
push
sbb
dec
loope
push
and
cmc
lea
dec
or
js
test
push
lcall
fdivrl
pop
dec
outsb
mov
icebp
shlb
inc
shlb
cmp
mov
add
and
in
int
cmc
clc
sub
or
lret
test
mov
mov
jmp
test
lret
mov
outsl
fs
xchg
inc
popf
or
js
mov
adc
aas
pop
ss
aaa
test
fcomp
mov
dec
cli
pop
jp
xor
aas
cmp
daa
add
mov
int3
into
imulb
xor
test
adc
pop
pop
adc
pushl
inc
iret
data16
adc
mov
mov
cmp
and
or
rclb
push
decb
push
shll
jp
push
lea
sub
inc
pop
fcoms
fsts
mov
shrb
xchg
push
lcall
fstpl
pop
pop
out
and
xchg
pushf
sub
jmp
dec
adc
sbb
push
nop
or
aas
nop
addl
dec
mov
dec
push
jecxz
inc
ffree
lods
xor
call
jne
scas
mov
push
sbb
mov
pop
sbb
inc
lcall
das
cld
sahf
jmp
xor
and
ret
test
ds
enter
ds
ret
cwtl
sub
adc
test
aam
pop
jle
cld
pusha
ljmp
nopl
mov
out
lock
mov
scas
shr
imul
ret
es
push
dec
insl
pop
mov
dec
mov
rclb
sub
lods
mov
divl
pop
mov
loopne
daa
add
cltd
lds
test
arpl
push
push
in
mov
clc
lret
std
xor
sbb
cmc
sub
mov
jo
stos
pop
repnz
shll
adc
call
mov
or
aaa
sub
lahf
hlt
enter
loop
test
test
mov
ja
jg
dec
cmp
cmpsl
or
jmp
fwait
xor
sub
add
mov
cs
bound
xor
or
cmp
mov
movsb
mov
mov
decb
jp
mov
xor
push
je
push
push
jmp
push
je
xchg
addl
popf
xchg
mov
sbb
jns
scas
or
lcall
fsubp
jg
mov
lret
jecxz
jle
aad
in
pusha
and
fcmovnb
test
adc
pop
out
test
lret
stc
push
call
lods
jp
cli
test
inc
sub
ficoms
fnstcw
imul
fwait
scas
int3
mov
scas
adc
out
mov
add
leave
clc
push
mov
and
faddl
out
inc
or
clc
adc
aaa
push
out
or
std
add
mov
pop
sbb
jne
insb
mov
fisubs
scas
jmp
jp
xchg
outsb
daa
cmp
cwtl
pop
movsb
iret
fildll
jbe
mov
jge
or
sbb
push
cmp
push
mov
lret
mov
dec
rorl
xor
pop
mov
rclb
fdivrp
test
rclb
fwait
cmpsb
push
jl
in
adc
enter
pop
xor
pusha
loope
adc
sub
int
cmp
outsb
fstpt
mov
push
movsl
xchg
cmpsl
mov
ljmp
orb
sbb
sti
add
adc
xor
pop
mov
jmp
imul
jecxz
int3
daa
mov
fsubl
loope
push
dec
jp
add
divl
rorb
pop
sub
jbe
mov
incl
iret
fistpll
sub
mull
mov
xchg
shr
lock
daa
fcomps
dec
cmp
test
cmpsl
xchg
addb
outsl
inc
das
or
xlat
pop
das
sub
adc
aas
ss
andl
fcomps
lds
dec
cmpsl
xor
push
cmp
or
jp
into
f2xm1
sbb
xor
xor
pop
jecxz
bound
imul
adc
and
mov
lods
in
push
push
push
sbb
mov
cwtl
lds
in
cmp
movsl
or
xor
gs
sarl
daa
inc
xor
lock
repz
pop
xchg
fstpl
sbb
ljmp
adc
inc
push
pushf
cs
xor
mov
mov
jle
lock
shl
in
cmpb
fcmovbe
jb
sub
dec
xor
mov
pop
dec
jecxz
xchg
lea
pop
lcall
push
mov
je
mov
xor
inc
inc
in
lahf
adc
fistpl
dec
mov
jge
adc
jmp
stc
std
imul
xlat
mov
das
xor
cld
mov
ror
jmp
jbe
imul
and
pop
mov
sarb
pop
in
mov
push
ret
push
mov
loope
push
fnstenv
lods
movsb
lds
aam
push
popa
setnp
add
mov
sbb
fmuls
add
stc
cltd
cld
add
hlt
mov
pop
and
sbb
add
xchg
clc
push
xchg
and
sub
push
sbb
fisubrl
dec
sbb
sub
push
jnp
inc
push
or
xor
idivb
or
clc
loopne
stc
pop
sbb
shrb
cmp
test
mov
inc
cmp
or
pop
lahf
fwait
pop
outsl
ja
inc
ret
mov
mov
mov
sbb
lods
lock
lret
xchg
test
mov
xor
add
out
out
fs
or
ss
sub
xor
repnz
dec
push
lea
out
mov
ds
mov
xchg
push
test
jmp
mov
aaa
sbbl
out
mov
or
cwtl
stos
push
loope
and
jnp
insb
repz
inc
jnp
sbb
inc
stos
adc
mov
inc
scas
iret
mov
dec
pop
stos
test
inc
rcll
jae
aad
push
stos
cli
rcrb
inc
lods
inc
stos
xor
xchg
mov
pop
imul
inc
scas
das
pop
ja
pop
addr16
adc
mov
push
movsl
xchg
outsl
and
hlt
imul
arpl
add
jae
lods
aaa
adc
mov
add
push
int3
call
mov
and
fs
pop
sar
cmpsb
scas
lret
and
xchg
mov
fstps
movsb
pop
pop
cld
push
xor
push
mov
sbb
daa
add
dec
cmp
sbb
pop
jae
and
dec
xor
push
xor
mov
xchg
lahf
lcall
test
popf
js
inc
sbb
push
cmpsb
cltd
fsubl
enter
pop
je
fisubrs
sbb
loope
outsl
mov
or
xor
lods
xor
shll
test
outsb
stos
xchg
cwtl
xchg
jbe
xor
inc
xor
jg
jnp
or
js
fldcw
push
xlat
lcall
push
fmull
dec
movsl
sub
add
into
xchg
adc
push
ja
mov
notl
or
push
dec
jmp
mov
insb
push
rorb
int
int3
mov
xor
stc
mul
enter
mov
roll
rcrl
ja
cmp
data16
andb
outsl
and
dec
stc
out
addr16
pop
repnz
cmc
ss
aas
mov
xchg
or
loope
idiv
jge
xor
push
dec
cmp
cs
or
into
mov
sbb
pop
add
adc
pop
jbe
test
jne
pusha
incl
lods
rcll
lock
arpl
sub
push
mov
test
xchg
and
lret
push
mov
gs
or
dec
out
out
inc
xchg
fld
mov
xchg
repz
sbb
push
sbb
imul
adc
and
andb
loope
xchg
andl
idivb
into
ss
jb
lods
sub
push
pop
jecxz
push
outsl
mov
xchg
lea
aas
es
repz
xchg
mov
cmp
fimuls
fnclex
jge
pop
popa
inc
gs
test
or
imul
movsb
fsubl
xor
in
and
xor
fdivrl
fdivrp
adc
cwtl
mov
popa
push
mov
push
or
lret
out
rorl
xor
xchg
bound
adc
mov
bound
aam
or
jecxz
jns
pop
sbb
insl
in
or
dec
test
rcll
xchg
mov
mov
lods
arpl
mov
cmp
ljmp
sahf
jge
add
mov
xor
test
cltd
mov
mov
clc
inc
ret
test
lret
in
imul
stos
cmp
loopne
jae
pop
push
push
je
call
xchg
or
dec
mov
rcl
aas
dec
push
xor
ja
and
dec
push
cmp
inc
rcr
cs
fwait
lret
jo
push
ljmp
add
cwtl
loopne
xchg
punpckldq
cmpsb
in
pusha
notl
cmp
pop
xlat
pop
xor
sbb
bound
jp
jl
mov
shrl
mov
inc
cmp
ficompl
cltd
sarb
xchg
sub
xchg
daa
cmp
jmp
push
jnp
andl
xchg
xchg
push
add
sub
or
xchg
insb
pop
insb
inc
jnp
adc
in
xlat
pusha
pop
push
out
xchg
aad
into
add
pop
loope
mov
jae
and
popf
xchg
int
mov
sub
enter
sbb
das
into
pop
imul
jg
xchg
jmp
jb
sub
xchg
leave
out
xor
mov
mov
lret
filds
xchg
push
ror
rorl
cmp
mov
shll
pop
jp
stos
fidivs
xchg
mov
adc
leave
scas
test
jmp
cmp
mov
jns
outsb
push
jge
and
add
mov
test
jmp
repnz
inc
jl
sti
inc
dec
lahf
mov
push
ljmp
adc
push
lahf
mov
xor
fucomp
cld
push
push
jae
cmpsb
sbb
ret
fisubrl
pop
mov
movsb
push
xorl
cltd
sbb
cmp
cmp
movsl
movsb
pop
push
and
push
sub
xorb
sbb
das
ret
call
pop
jge,pt
pop
rcll
pop
jmp
mov
push
xchg
mov
jmp
outsb
lret
pop
and
inc
pop
mov
mov
mov
imul
jne
aad
cli
int
loopne
lods
gs
push
out
xchg
mov
rcrl
mov
cmp
mov
and
cmpb
outsl
add
outsb
loop
jno
stc
popf
mov
test
mov
jno
cmp
push
popa
daa
out
lods
sar
mov
aam
enter
ja
repz
test
lahf
push
add
daa
xor
pop
pop
and
add
ds
add
add
pop
and
mov
loope
jle
pop
xchg
or
adc
sar
rcrl
jb
pop
sub
es
dec
inc
fsubl
inc
pop
inc
add
repz
push
cmp
or
pop
pushl
pushf
test
jmp
inc
mov
aad
out
pop
nop
lcall
jb
add
scas
les
cmp
sub
ja
mov
sub
call
mov
pop
mov
aam
mov
out
fistl
xchg
dec
pop
add
push
inc
das
and
inc
and
das
cltd
sub
dec
mov
sub
shrl
xchg
testb
xlat
cwtl
pop
and
cmpsl
add
mov
fldl
sub
loope
sbb
push
mov
mov
pop
div
mov
popf
stos
shlb
push
sub
adc
dec
insl
mov
fisubs
insb
dec
mov
or
popa
cmp
push
cmpsb
mov
pusha
pop
mull
insl
leave
decb
std
es
jge
mov
push
dec
test
repnz
mov
sbb
push
mov
xbegin
sub
jecxz
or
sbb
pop
popl
mov
sub
jecxz
cld
pop
pushf
xchg
mov
mov
cmp
enter
and
jbe
int3
lcall
dec
mov
mov
xchg
dec
adc
jne
push
mov
fwait
mov
dec
fwait
add
or
mov
jns
out
in
push
xchg
mov
xor
mov
in
lods
sub
pop
popf
jp
imul
xlat
or
arpl
dec
adc
jne
sub
hlt
jge
fbstp
es
jmp
and
xorl
jl
sahf
add
sub
cmpb
stos
aaa
xchg
int3
and
adc
insb
leave
pop
cmpb
bound
xor
leave
cli
jmp
hlt
cld
test
icebp
or
loope
cmc
pop
sbb
add
jae
mov
push
xor
mov
test
sub
pop
sahf
xchg
ss
stc
sbb
xor
imul
ss
cmc
insl
lods
push
in
stc
mov
or
mov
cld
adc
hlt
add
arpl
xor
xor
aaa
xchg
test
or
jecxz
add
imul
test
and
shrb
cld
scas
mov
jae
inc
leave
mov
push
sar
shlb
repz
sbb
adc
cmp
dec
cmpsl
jl
pop
clc
dec
push
in
loop
stos
lea
imul
iret
inc
push
iret
test
push
xor
movsl
inc
cmp
cmpsb
lahf
stc
jae
jecxz
enter
pop
repnz
push
mov
and
add
cmp
out
jle
repnz
jl
mov
std
roll
push
outsb
dec
add
rclb
in
call
pop
call
pop
jecxz
push
add
in
push
aam
fs
pop
sub
fildll
fstl
push
insb
mov
mov
and
mov
jle
aam
push
push
fmuls
shrb
sub
mull
or
mov
shll
popf
sbb
popa
in
sahf
pop
xchg
test
adcb
sub
nop
lret
mov
push
aad
fs
nop
adc
aad
and
std
cmp
leave
sbb
idiv
jecxz
arpl
lahf
arpl
test
dec
xor
into
xorb
mov
xor
sbb
pop
inc
and
in
clc
imul
dec
add
pop
data16
add
mov
mov
ja
icebp
into
mov
jle
stos
sti
cmpb
gs
scas
loopne
xlat
ja
movsb
or
inc
imul
fnstenv
mov
in
mov
repz
xchg
adc
ss
jecxz
addr16
xchg
pop
mov
gs
sbbl
ss
jg
dec
cmpsl
imul
jne
add
or
shll
in
dec
cltd
xchg
and
xchg
jecxz
ljmp
out
jge
es
mov
roll
daa
imul
mov
pop
fildl
and
cmp
inc
mov
xor
cmp
mov
mov
mov
cli
sarl
dec
not
and
std
pop
or
cwtl
sbb
mov
mov
in
or
mov
mov
cmc
and
sbb
cmp
cmp
sub
jecxz
sbb
ret
add
xor
sbb
popa
xchg
adc
popa
push
lods
cmp
mov
or
and
or
in
subps
mov
nop
sbb
cltd
mov
xchg
mov
push
arpl
stc
aad
clc
mov
lahf
xchg
jo
rcll
mov
ret
cs
pop
fsts
add
push
or
insl
call
in
jb
sbb
or
les
fneni(8087
inc
xchg
jg
dec
and
test
mov
dec
add
mov
or
fwait
cld
fwait
in
mov
faddl
and
jg
dec
dec
or
jmp
jns
insb
in
leave
cmp
ret
lods
mov
cmpsl
mov
addr16
pop
jp
push
mov
call
mov
xor
jno
rcr
pop
mov
aas
mov
iret
hlt
sub
insl
jmp
add
mov
sub
jge
xchg
push
xorl
imul
mov
loope
in
lret
std
pusha
notl
ret
les
push
mov
push
hlt
lret
in
jo
out
mov
fimull
clc
mov
sbb
insl
movsb
imul
pop
scas
pop
out
push
xor
adc
pop
ljmp
sbb
aam
hlt
dec
push
arpl
out
pop
or
in
cs
push
ret
and
push
add
push
imul
nop
push
vpminsw
scas
addr16
mov
fistpll
pop
cmp
jbe
movsb
sti
mov
push
and
jbe
lock
jge
lret
int
jbe
scas
daa
pushl
cmp
ret
cmp
jle
jl
xor
jge
cltd
push
lea
xor
movb
div
inc
push
mov
data16
push
popa
inc
leave
movsb
int3
cmpsb
and
loope
fwait
or
push
jbe
loope
fs
sub
mov
push
ds
idivl
mov
sbb
adc
mov
or
les
pop
lfs
js
clc
push
pop
out
jg
cwtl
or
daa
ljmp
adc
adc
stc
aam
jg
loop
mov
xchg
pop
mov
outsb
mov
xor
and
lret
fistl
int
mov
pop
mull
push
inc
lret
cld
rorl
mov
add
add
jge
mov
and
push
mov
and
stc
or
adc
and
xor
cmp
test
out
movsl
dec
cli
push
fs
xor
dec
cmp
in
adc
mov
mov
xor
in
pop
or
adc
mov
adc
add
add
fists
xchg
mov
cli
insb
inc
xlat
and
mov
mov
jmp
pushf
mov
mov
clc
dec
add
int3
inc
jle
lock
mov
testl
aad
pop
sbb
add
mov
out
dec
pop
gs
push
pushf
fcmovu
or
cs
jle
push
scas
jo
push
push
std
aas
stos
fs
jb
outsl
sbb
and
adc
inc
ds
lea
popf
call
xor
mov
inc
add
lahf
lods
xchg
fldt
sub
inc
cmp
inc
adc
mov
pop
lret
iret
cmc
ror
shlb
adc
inc
or
xor
subl
cld
aaa
mov
fmull
xchg
jne
jae
xchg
pop
pop
in
and
sub
aam
cs
ret
nop
jnp
es
pop
insl
mov
mov
jecxz
ljmp
shrd
mov
ss
mov
mov
jns
cltd
fdivr
sahf
test
outsb
sbb
es
frstor
lret
mov
repnz
je
jb
xor
pop
in
or
ret
xchg
dec
mov
and
jb
inc
xor
pop
or
cli
out
xor
cmp
ljmp
dec
xchg
adc
xorb
imul
or
or
pop
arpl
shll
add
inc
cld
out
loopne,pn
bound
scas
jns
xchg
clc
in
jnp
xchg
jge
loope
push
sub
mov
bound
addr16
dec
jp
data16
mov
dec
xor
loop
mov
lock
sub
lea
cltd
repnz
out
pop
cwtl
xchg
mov
cmpsb
sub
push
push
out
aaa
fisubrl
js
sub
stos
sbb
cmp
insb
lahf
mov
add
iret
xchg
in
add
sub
fs
mov
mov
pop
jb
pop
xchg
inc
std
dec
or
outsl
movsb
aam
mov
adc
and
test
fidivrl
push
dec
sbb
jnp
imul
fsubrl
jp
pop
adc
cmp
repnz
leave
and
xchg
hlt
mov
inc
cmp
xchg
das
push
adc
adc
pushf
imul
fwait
hlt
adc
subb
inc
aad
and
test
mov
mov
cmp
jbe
bound
fnstenv
sbb
lods
xchg
push
push
sbb
shl
jl
xchg
stos
dec
in
lods
mov
jo
lahf
xor
and
xchg
push
jne
daa
test
leave
push
xor
cmpsb
movsl
out
in
xchg
mov
movhps
stos
push
std
push
loope
push
test
cmp
push
test
mov
push
cmp
ljmp
sbb
add
mov
mov
pop
ss
js
sub
lcall
and
mov
sub
fists
aam
pop
jg
or
les
dec
aam
and
xchg
addr16
ficoms
inc
sub
inc
xchg
neg
aaa
or
icebp
cmp
loope
lods
mov
pop
sbb
cld
sbbl
inc
fiaddl
sahf
ljmp
ret
fs
rcll
movsl
aaa
inc
ss
std
cmp
aas
push
pop
out
addr16
cli
dec
adc
add
sub
into
dec
nop
cmp
jl
inc
xor
mov
jle
cltd
adc
sub
add
movsl
lods
outsl
popa
in
cmc
mov
xlat
pop
pop
push
sub
add
mov
push
xor
leave
loopne
out
mov
insl
sbb
jl
fldenv
sub
repz
mov
sbb
aas
jg
gs
pop
sbb
or
nop
rcrl
sbb
insl
inc
sub
nop
sub
dec
roll
jb
ret
xchg
je
cltd
insb
jecxz
rol
mov
adc
sbb
stos
mov
push
inc
mov
lods
repz
mov
mov
sahf
pop
pop
in
add
inc
les
inc
jae
dec
das
ss
mov
adc
and
add
rcrl
mov
negb
lods
pusha
mov
cmpsl
std
aam
mov
lret
add
bound
push
lret
mov
lock
dec
push
gs
rcl
pop
es
pop
rcr
cmp
ds
sub
scas
inc
pop
pushf
inc
or
insl
mov
pop
xchg
push
add
adc
sti
popa
cmpb
mov
leave
xchg
inc
and
cmpsb
jecxz
sbb
int
mov
jecxz
push
test
stos
sub
push
jmp
movsb
xor
sub
js
sbb
stos
and
cmp
stc
arpl
xchg
xor
push
ret
call
inc
cltd
xor
iret
les
test
mov
mov
test
cmc
addr16
lcall
sub
ljmp
jbe
xlat
add
pop
mov
pop
bound
outsl
add
popa
popa
in
addb
dec
repz
mov
sbb
pop
push
jp
jno
mov
mov
mov
dec
mov
insl
jbe
add
int
xchg
jae
inc
jmp
adcl
out
cmp
or
imul
popa
xor
insb
or
outsl
jnp
mov
mov
pusha
lds
and
adc
dec
pop
mov
fbld
push
jp
arpl
pop
mov
ja
jno
ds
cmp
jge
aad
lods
scas
push
mov
push
roll
cltd
pop
pusha
mov
cmc
mov
lret
rolb
fstpl
lds
es
or
fidivl
popf
or
testb
xor
cvtdq2ps
loopne
fidivrs
dec
cld
lds
shlb
scas
and
push
xchg
insb
mov
push
rolb
jp
cmp
add
sbb
jg
daa
std
mov
cmp
add
dec
dec
mov
dec
pop
xor
xor
jl
lcall
dec
out
mov
inc
out
enter
call
enter
pop
scas
popa
mov
dec
cmp
lea
sub
stos
int
inc
push
adc
pop
faddl
and
sub
stos
add
add
mov
dec
adc
pop
pop
les
lock
pop
in
jnp
xor
push
icebp
cmp
ret
or
adc
scas
loop
jg
cmp
orb
imul
loope
cmp
and
sub
popf
mov
sarl
mov
sub
sahf
inc
call
ds
in
outsl
jge
fsub
dec
adc
stc
jns
andl
adc
into
jge
jmp
sti
cmp
cli
lret
popf
out
lods
pop
cli
jl
mov
and
cld
cmp
cmp
or
mov
cmc
inc
nop
xor
xor
call
imul
sbb
sub
sub
lock
sub
mov
mov
scas
mov
gs
cmp
dec
shll
inc
rol
addr16
movsl
or
pop
imul
pop
xor
in
cvtps2pd
jmp
adc
or
xor
sbb
rcrb
mov
aas
jmp
dec
clc
dec
sub
je
mov
iret
mov
icebp
lea
dec
xchg
call
scas
mov
or
cmp
mov
mov
inc
dec
sub
mov
in
into
pop
lret
mov
push
xchg
negb
popa
mov
cmpsl
cld
sti
aad
jmp
push
dec
cld
lea
lret
adc
aad
inc
imul
lock
push
pop
inc
dec
shlb
mov
ret
add
es
dec
jb
xchg
into
int
ljmp
fldt
jns
mov
inc
mov
mov
jns
hlt
add
xlat
test
test
cmp
mov
lds
push
lods
or
fnsave
dec
clc
push
mov
sbb
scas
rcl
fcmovb
pop
cmp
push
stos
call
add
xchg
and
push
popf
mov
pushl
fs
xor
and
or
xchg
push
dec
push
cltd
jae
xchg
ja
inc
insb
dec
fisttpll
rorl
cmp
jns
mov
sbb
out
add
jne
mov
bound
rolb
xchg
sbb
mov
das
das
mov
fdivrs
fsubs
bound
xor
mov
dec
test
xor
dec
popf
test
jne
dec
test
sub
mov
inc
ficoml
jmp
dec
lcall
stos
cmp
sub
outsb
sar
push
xor
stos
add
jg
and
jb
out
mov
in
xchg
andl
jne
jo
sbb
pop
hlt
jmp
inc
adc
xor
movsb
jmp
popf
pop
xor
mov
movsb
or
and
sub
sbb
adc
imul
mov
push
or
cmp
je
popa
mov
dec
popa
hlt
leave
cmp
sub
cltd
popl
lock
push
sub
aaa
mov
insl
add
sub
int3
push
ret
xchg
fsubp
xchg
aas
lds
int
scas
add
or
cwtl
mov
cmp
pop
in
pushf
dec
loope
jge
pusha
jge
ja
sbb
mov
das
jno
jmp
or
jge
push
mov
xorb
insb
lahf
push
test
push
sbb
mov
inc
jbe
pop
cmpsb
stos
mov
pop
enter
pop
out
pop
and
shrb
loope
popf
cmpsb
sub
fistpll
repz
fidivrl
jle
add
dec
jg
daa
cmp
test
push
sbb
into
lds
ret
and
or
xchg
cltd
js
dec
leave
pop
fs
dec
push
dec
jg
fcoml
popa
fldt
loopne
movd
shr
mov
xor
mov
push
ljmp
insb
mov
sub
inc
negl
lret
inc
syscall
les
cmpsb
jge
ljmp
addb
push
outsl
pop
push
mov
fdivrl
stc
stc
xor
dec
fs
mov
inc
stos
mov
cmp
mov
lods
out
ja
cli
scas
xchg
dec
xor
in
cmp
and
or
xchg
push
jl
cmc
or
mov
ftst
adc
dec
into
imul
imul
adc
in
arpl
jmp
xlat
fisttpll
or
or
pop
in
sub
push
es
jbe
jmp
bound
inc
mov
sbb
mov
int
je
ss
push
adc
out
inc
cmpl
arpl
mov
ds
pushf
fstpt
cs
mov
sub
lock
mov
or
movsl
pop
je
std
jo
jae
mov
lea
std
das
mov
out
mov
incb
dec
pusha
andb
xor
sub
rcrl
hlt
adc
aas
mov
loop
shll
mov
js
add
and
mov
adc
stc
lret
orl
mov
inc
shl
test
out
lcall
test
or
sub
cmp
inc
inc
push
ret
cmp
cmp
insl
push
icebp
fisttpll
inc
jnp
or
ret
mov
lods
in
cmpsb
mov
into
and
je
lea
fdivs
fwait
cltd
jge
adc
lcall
xchg
add
mov
imul
mov
dec
shll
and
sbb
jmp
stos
xchg
sbb
popa
lret
decl
fwait
xor
xchg
or
add
mov
in
test
test
lods
cmp
insl
testb
mov
pop
nop
adc
mov
fwait
test
xchg
push
mov
pop
mov
out
lret
lods
andb
cmp
out
in
mov
push
sub
mov
xchg
xchg
adc
out
cmpl
push
xchg
mov
cmp
outsl
mov
mov
or
fisttps
ds
sbb
mov
xchg
pop
movl
mov
or
mov
or
stos
jbe
sbb
insb
loopne
pop
jnp
add
in
imul
pusha
sti
test
movsl
ret
ljmp
std
push
push
add
hlt
mov
and
push
fcmovbe
data16
jmp
pushf
imul
dec
mov
adc
es
fwait
ss
leave
mov
mov
arpl
pop
cmpsl
inc
inc
loopne,pn
ss
call
aaa
dec
fldl
in
fldt
popa
rcll
shl
pop
xchg
mov
fiadds
sbb
mov
ljmp
inc
mov
movsb
daa
int3
lock
pop
sbb
jge
int
sbb
mov
sti
or
leave
jno
test
push
dec
cmp
xor
xor
lahf
jae
int
out
or
test
sub
and
aaa
mov
xor
xchg
push
push
int3
mov
sub
jmp
jl
mov
xchg
popl
xchg
inc
and
in
sbb
add
push
jge
lock
rclb
mov
inc
cmp
jecxz
xchg
lcall
or
mov
adc
sahf
adc
gs
imul
in
mov
test
and
jg
push
out
ret
leave
lock
cmc
leave
lret
jecxz
cmpsb
in
mov
pop
jle
shlb
test
in
fldl
cmp
fdivr
out
jmp
sub
notb
xchg
leave
divl
jno
jecxz
sbb
fdivs
cld
out
lds
xor
scas
ja
jns
lahf
or
cmpsl
into
icebp
pop
outsb
cmc
rcll
clc
pop
fcmovnbe
jge
add
inc
fsubs
adc
and
add
sub
int
lods
and
cltd
mov
cld
mov
sub
cltd
addr16
hlt
in
xchg
mov
sti
in
sarb
dec
mov
lock
sub
enter
jg
xor
mov
inc
xlat
cmp
repz
fists
adc
jnp
loop
jecxz
xor
bound
xchg
ret
test
jmp
dec
cs
das
in
aad
aas
daa
das
cltd
jb
hlt
pop
dec
in
ret
push
scas
jp
xorb
mov
decl
rcll
jne
mov
movsl
test
dec
sbb
pop
push
hlt
inc
pop
add
mov
shll
call
and
not
add
rolb
sbb
cmpsl
cli
aad
mov
out
imul
jns
lret
lock
sbb
mov
shlb
lock
adc
cmpl
sub
cld
rcl
mov
mov
insl
ds
dec
test
ljmp
mov
mov
xor
and
getsec
pop
getsec
jae
add
add
repnz
push
icebp
mov
mov
push
xor
jns
mov
daa
testb
pop
ds
movsb
lods
pop
xchg
mov
repnz
out
dec
mov
xchg
xor
push
and
out
gs
xor
cmp
xor
push
mov
call
int3
and
ja
sbb
cld
inc
repnz
cmpsb
cwtl
fs
xlat
call
inc
add
stos
cmp
out
stos
dec
and
mov
mov
xchg
mov
add
mov
dec
andl
cld
lret
cmp
inc
mov
sub
mov
xor
xchg
in
jmp
jmp
loop
push
adcl
loop
cwtl
pop
mov
fs
push
mov
test
lods
cmp
insb
dec
arpl
jnp
push
mov
in
mov
stos
iret
cs
inc
ret
push
pop
bound
addb
jae
mov
push
ret
loopne
popf
test
jnp
or
sub
mov
inc
dec
sbb
stc
jle
mov
mov
push
xchg
adc
mov
out
aas
push
daa
scas
call
arpl
cld
inc
dec
loopne
or
dec
rcrl
or
dec
or
pop
ss
jnp
int3
inc
push
push
pop
ret
mov
xchg
lds
out
ret
and
ja
movsb
mov
insl
push
lods
in
pop
jbe
scas
or
or
sbb
and
jmp
mov
jl
add
cld
bound
jo
dec
cs
xchg
test
sarl
cmc
outsb
cmp
lds
in
xor
jmp
pop
insb
fcos
push
and
shlb
sub
movb
les
popf
movsl
aad
fldenv
pop
imul
clc
rcll
push
push
gs
xor
cwtl
cltd
xchg
xchg
rcrb
cmp
bound
push
imulb
fsubl
sahf
sub
jmp
mov
inc
or
enter
xchg
mov
cltd
aad
cs
testl
push
mov
or
mov
or
jno
sarl
sbb
out
pusha
pop
sahf
xor
test
sahf
xchg
clc
cmpb
nop
outsl
sbb
loop
sub
stc
sahf
jns
fs
dec
adc
sub
ss
sub
mov
scas
cmp
fsts
pop
xor
lods
or
dec
popf
into
aam
and
cwtl
out
in
xor
pop
cli
int
adc
nop
and
add
mov
fmuls
mov
mov
xchg
inc
xlat
pop
into
std
sub
test
add
xor
insb
jns
mull
loopne
pop
cmp
data16
movsb
xor
les
adc
xchg
movsb
mov
sbb
sub
sti
popa
jmp
loopne
in
aad
pushf
xor
jmp
repnz
cs
gs
mov
and
aas
stos
lret
jb
sbb
arpl
jecxz
fimuls
lea
fs
jmp
pop
mov
add
add
xchg
fistpl
dec
pop
jns
test
loopne
cli
inc
fists
popa
mov
in
gs
rcll
mulb
std
dec
mov
test
stc
mov
orb
icebp
mov
cmp
lret
pop
mov
mov
mov
mov
ljmp
jne
shrb
sub
sub
adc
ret
pop
movb
cmp
insl
and
cmpsl
cmc
xchg
mov
ljmp
sub
mov
out
mov
pop
jp
mov
xchg
cmp
add
cltd
jmp
insb
test
jecxz
mov
push
cmc
sub
fucom
lock
sbb
or
icebp
inc
rcl
and
pop
cmp
fldcw
mov
xchg
xchg
stos
push
adc
decl
pop
pushf
or
sbb
jo
mov
jmp
cmp
test
mov
ja
push
dec
mov
jbe
mov
out
fwait
push
or
add
out
bound
cmpsl
out
mov
add
in
jns
cld
xchg
jp
and
or
stos
mov
pushf
mov
pop
or
jle
pop
xchg
gs
cmpsb
inc
mov
loop
mov
sbb
dec
inc
pop
cltd
jne
inc
hlt
mov
imul
lods
push
xchg
mov
cmp
xchg
lods
imul
xor
aaa
or
jge
sti
push
subl
push
mov
aaa
jnp
outsl
lret
jle
or
in
in
pusha
xor
iret
lea
sub
xor
inc
xor
mov
and
push
xchg
mov
and
cmp
insb
and
sub
imul
mov
adc
or
jge
leave
sahf
inc
pop
hlt
push
xchg
and
lods
jle
dec
push
and
movb
or
xchg
cld
add
lods
cltd
pop
repnz
jnp
lret
lds
push
jns
in
jo
scas
mov
add
cmp
pop
movsb
cmp
add
xchg
sbb
xchg
sbb
xchg
fisubl
stc
jae
cmp
or
xchg
xchg
jl
sub
dec
pop
cmc
lcall
and
jo
mov
mov
mov
xchg
mov
ficoms
xlat
inc
and
gs
sbb
cld
inc
pop
stos
pop
dec
push
das
stc
loope
sbb
cmp
in
ds
pop
movsl
fsubl
in
clc
mov
mov
sbb
push
or
push
jmp
pop
stc
jp
js
rcrl
and
notb
fcoml
cltd
test
outsb
jecxz
sub
rcrb
out
lods
jg
and
mov
mov
rcr
and
cltd
xor
sub
pop
hlt
lret
movsl
rcl
rorl
cmc
sahf
rol
enter
fiaddl
stc
or
loop
out
adc
push
sub
adc
aam
notl
cmp
out
sbb
cli
dec
pop
cmp
subb
or
cmp
mov
shl
pop
sub
xor
into
inc
adc
leave
adc
stos
adc
scas
je
jne
loopne
repnz
xchg
lcall
mov
imul
decb
ljmp
dec
cmp
lock
fnstenv
out
repz
mov
addr16
sbb
pop
pop
loopne
inc
pop
xchg
bound
inc
or
pushf
fcoml
xor
cs
nop
ss
dec
ficoms
gs
jb
outsl
adc
jmp
or
int
sub
xorl
mov
push
xor
pop
ja
dec
and
inc
fisttpl
mov
incl
adc
sbb
mov
and
shll
sub
out
dec
mov
clc
mov
sbb
xchg
jmp
outsb
lret
into
sub
mov
sbb
xchg
jae
pop
shll
sar
and
or
movsl
push
rol
ljmp
insl
or
sub
ss
xchg
lret
ljmp
xor
xchg
push
mov
pusha
repnz
cmc
add
and
mov
mov
push
mov
mov
xchg
mov
sbb
add
stos
movsb
shrb
out
adc
pop
xchg
repnz
push
or
mov
xor
lea
fdivs
xor
fucomp
mov
out
cmpsb
hlt
dec
icebp
mov
ja
or
test
push
adc
fwait
xor
nop
adc
loope
cmpsb
out
push
inc
dec
jns
std
loopne
add
shrl
test
mov
les
adc
stos
adc
xor
mov
mov
in
jne
scas
sti
mov
mov
and
fmull
js
cmp
mov
ds
pop
sub
push
cmp
sub
fistl
jnp
dec
int3
jle
imul
int3
add
ret
cmp
call
xlat
jae
sar
push
dec
loop
popf
div
xchg
mov
mov
sbb
xchg
out
mov
sbb
xor
sub
scas
or
in
adc
ret
out
mov
xchg
out
or
adc
push
mull
cmp
inc
dec
mov
inc
push
mov
jle
jp
add
pop
and
push
xlat
imul
ja
insl
dec
xchg
stos
imul
scas
sbbb
cmp
cmp
pop
les
lea
sbb
insb
aad
dec
and
insb
jl
sub
dec
xchg
push
ret
xor
inc
fistps
sarb
push
addr16
jge
mov
mov
xchg
cmpsb
mov
sub
cmp
enter
pop
ljmp
loope
loop
sub
std
imul
or
movsl
jecxz
sbb
xchg
out
jecxz
and
incl
mov
repnz
pop
fisubl
pop
and
js
jnp
pop
pusha
sub
lcall
neg
mov
loop
outsb
inc
cmp
xchg
cmp
shl
loop
jg
addr16
mov
ret
mov
je
and
push
lock
add
and
mov
negl
or
and
shrl
mov
jp
sbb
lcall
pop
hlt
subb
outsl
fdivs
int
or
insl
fs
jecxz
adc
aam
cmp
sbb
rorl
xlat
push
cli
jnp
fbstp
push
in
cmp
std
jns
ret
into
lcall
xor
cmpsb
xchg
rclb
jl
imul
insb
rolb
notb
aad
clc
shrl
fnop
movsl
mov
jp
xlat
fstps
sub
cmpw
cmp
inc
icebp
mov
pop
gs
sub
dec
pushf
sti
mov
add
fldpi
add
repz
rclb
int
cmp
cmp
lcall
jmp
jne
cs
xchg
mov
aas
add
push
jb
cli
dec
dec
push
repz
je
mov
jecxz
cli
add
sarb
lea
fwait
lcall
cmp
mov
or
dec
or
popa
fstpt
aaa
inc
inc
out
cmp
adc
mov
mov
pop
mov
out
repnz
and
ljmp
cwtl
lock
pop
cmpsl
idivl
mov
insb
sub
cld
fs
lret
cmp
adc
lock
pusha
pop
loopne
add
sub
sub
ret
jns
fwait
es
mov
add
dec
jbe
push
xchg
or
loope
vpxor
mov
lods
xchg
outsl
pop
mov
fwait
mov
in
loopne
decb
push
iret
push
add
rcl
cltd
pop
pop
jmp
daa
imull
inc
xchg
out
push
jnp
mov
clc
vpmacssdql
mov
iret
loop
pop
xchg
cmp
xchg
gs
xchg
cmp
stos
dec
stos
xor
mov
pop
or
test
mov
icebp
push
fisttps
inc
scas
test
or
dec
pushf
ja
inc
mov
xchg
or
mov
pop
push
dec
jecxz
add
cld
test
inc
dec
pop
bound
aaa
jns
mov
jge
cmpsb
into
imul
adc
jg
int3
addr16
inc
jg
xchg
js
mov
dec
mov
mov
jmp
dec
or
shlb
sbbb
sbb
mov
xchg
mov
and
in
in
cmpl
sub
push
mov
push
jns
je
inc
cld
xor
bnd
mov
jnp
out
stos
jle
mov
scas
pusha
addr16
daa
iret
dec
and
ret
sbbl
jl
dec
sub
push
or
or
mov
rcll
inc
and
sbb
or
jno
scas
jo
sub
arpl
mov
out
dec
mov
hlt
movsb
in
push
arpl
or
inc
push
scas
lahf
or
mov
cmp
add
jge
push
subl
shlb
fsubrs
ja
inc
cmp
and
cld
mov
jge
adc
lcall
adcb
jl
add
cmc
insl
jns
movsl
sub
jo
inc
insl
lahf
out
mov
pop
test
push
cmc
imul
dec
cmpsb
cmp
in
out
aad
jae
and
sub
dec
push
popa
jl
pop
int
sub
push
movsb
cmp
dec
ds
push
out
cs
insb
popl
imul
cmc
jno
add
shr
xor
pop
fmull
add
inc
fisttpll
fistpll
adc
fsubl
subl
test
push
arpl
shr
lock
scas
push
mov
jne
mov
mov
push
and
sub
repz
push
int
pop
aam
jnp
xor
sbb
mov
roll
push
mov
out
in
sbb
sahf
sbb
test
out
mov
mov
es
adc
jmp
push
mov
ss
lahf
cmp
pop
les
cli
scas
popf
jle
cs
enter
fwait
or
lods
cs
jge
aad
in
ror
xor
outsb
pop
push
fcmovb
adc
pushf
imul
andb
sti
lds
ror
in
xlat
sbb
pop
sub
loop
mov
inc
imulb
test
pop
gs
loopne,pt
push
and
dec
push
inc
push
and
nop
les
xor
popf
and
mov
ljmp
sub
adc
in
pushf
xor
sub
out
cmp
and
cmp
mov
nop
sub
test
mov
sub
mov
mov
add
lea
jmp
mov
fadds
mov
inc
orl
ja
pop
mov
imul
insb
das
dec
bound
inc
xor
adc
push
cltd
mov
gs
imulb
sbb
cmpsl
idivb
dec
icebp
inc
mov
jp
lret
lods
data16
mov
icebp
xchg
lock
inc
mov
inc
ja
mov
sub
aam
push
jns
or
inc
es
and
insl
fiaddl
xchg
dec
jno
push
xchg
dec
in
repnz
mov
mov
mov
ret
jnp
jecxz
mov
jnp
cmp
insl
cltd
nop
mov
test
jg
mov
mov
rcr
test
lret
xchg
shll
es
cmpb
xchg
addb
mov
je
xor
and
or
mov
inc
mov
hlt
jl
dec
mov
adc
js
orl
in
dec
xor
fwait
xchg
add
roll
pop
jb
out
pushl
jns
ljmp
cmc
pop
pushf
mov
sbb
insl
pop
cmp
pusha
addr16
cbtw
jp
outsl
sub
cmp
xchg
out
dec
cld
jne
mov
aas
js
cmp
jmp
push
sub
adc
mov
push
or
mov
mov
fsubl
or
insb
testl
out
in
mov
or
jne
ret
xor
ds
les
push
jae
add
push
iret
mov
popf
inc
lods
push
mov
sahf
jno
ficoml
or
mov
popf
scas
roll
inc
adc
pop
push
repnz
leave
add
push
arpl
jne
push
xor
or
aaa
adc
sbb
lods
push
data16
in
test
pop
jg
adc
mov
lahf
lds
enter
cld
sub
cmp
xor
ficomps
jbe
cmp
jge
fisttpl
or
daa
imul
outsl
cmp
mov
jl
test
or
mov
xor
stc
mov
std
push
or
lret
and
ret
cmpsl
push
cmpsb
mov
cmp
enter
pop
push
mov
loope
fcompl
xor
ds
andl
sbb
inc
push
inc
sbb
in
add
add
lahf
into
clc
pop
outsb
fs
js
mov
lcall
mov
adc
sub
cld
outsb
or
fsts
lods
or
jg
cli
arpl
andl
sbb
neg
test
repnz
ljmp
aad
lret
add
cltd
pop
adc
add
movb
movups
sbb
dec
ja
stc
jp
js
loope
push
adc
addb
andl
out
pop
cmp
add
in
or
pop
mov
mov
jge
mov
stos
pop
jbe
jge
and
adc
in
cmp
adc
mov
lods
cmpsl
rcrb
mov
xlat
push
jg
sub
dec
mov
lods
sbb
sti
pop
adc
clc
mov
mov
iret
mov
dec
pop
mov
push
fstps
add
pop
xor
repz
stc
lret
jo
sbb
pop
mov
pop
fwait
imul
rclb
xchg
fstp
in
aad
hlt
cs
push
aad
pop
inc
nop
add
fnstsw
inc
movb
lods
cmp
repnz
es
cmp
in
ret
jo
hlt
mov
adc
movsl
je
sbbl
adcl
pop
add
inc
inc
dec
or
mov
enter
and
aaa
rcll
mov
std
in
adc
and
cmpsl
cmc
jl
mov
sbb
xor
mov
sub
jns
out
xchg
lock
leave
pop
push
xchg
mov
jbe
jne
not
or
push
push
pop
ret
xchg
xor
jg
inc
insl
shl
dec
insb
pop
inc
xchg
xchg
ljmp
pop
lods
addr16
in
inc
mov
jne
scas
mov
adc
add
push
cltd
test
test
sub
cmpl
xchg
fcomi
sarl
inc
pop
call
fldt
out
cmp
mov
push
lcall
xor
push
or
sbb
xchg
xchg
adc
ja
xor
hlt
dec
xor
inc
in
in
cmp
and
mov
jle
and
out
add
fwait
jns
xlat
push
in
xchg
xchg
inc
mov
mov
test
scas
sbb
cmc
ret
push
or
sti
sbb
mov
xlat
xchg
push
dec
shr
jne
push
fdivs
add
cmpsb
cltd
jmp
fld
dec
sbbl
out
mov
sbb
or
lret
or
and
out
insb
bound
jnp
jle
jle
cmp
pusha
popf
or
inc
ret
jnp
jne
inc
inc
pusha
aaa
call
push
xchg
dec
sti
popf
imul
xor
xchg
inc
sbb
and
scas
sbb
cmp
scas
ss
jb
stc
rclb
mov
adc
adc
lea
leave
jp
sub
arpl
or
pop
fmull
mov
lret
jge
or
cmp
int3
xlat
dec
and
adcl
rcrb
scas
sbb
ljmp
imul
fidivl
sarl
in
test
cmc
outsl
sub
call
and
jl
and
inc
push
imul
ljmp
lahf
sub
aaa
das
test
in
repnz
inc
pop
mov
cmpsb
inc
cmp
mov
popf
enter
pop
cmpsl
fwait
imul
btc
mov
jae,pt
xchg
movsl
clc
pop
push
and
popl
sbb
arpl
add
mov
lret
bound
negb
iret
jbe
mov
pop
xchg
lcall
mov
sub
arpl
push
popa
adc
xchg
mov
pop
dec
jo
add
mov
xor
and
xor
stc
sub
insl
sub
xor
sti
mov
cwtl
sbb
inc
in
cmpb
pop
loop
or
stc
xor
fs
fprem
adc
add
psubusb
popa
cmpsb
out
insl
cmp
hlt
insl
xor
pop
popf
cmp
xchg
rorl
pop
add
inc
mov
popf
xor
and
je
cmc
int3
sbb
sbb
aas
stos
dec
add
lret
mov
or
xchg
mov
sub
mov
addr16
pop
cmovnp
pop
popf
jo
sbb
sbb
push
sbb
clc
lock
cmp
push
fsts
psrlq
sbb
inc
test
push
adc
fcoml
and
lahf
dec
ljmp
stc
bnd
xlat
leave
nop
fsubrp
ds
loope
jge
mov
dec
dec
mov
je
mov
jecxz
and
in
fisttpll
outsl
lock
cmpsb
mov
cmp
int
add
pop
test
clc
inc
xor
inc
data16
dec
das
or
ret
jg
mov
rcr
mov
divb
jbe
cwtl
and
adc
hlt
ret
jge
addl
sub
in
pop
lret
mov
fidivl
add
pop
cmp
and
lods
aam
cmpsb
jecxz
es
add
xchg
dec
cmp
pop
or
push
negb
xchg
fldcw
out
mov
jl
data16
jno
xchg
add
mov
incb
dec
mov
mov
fstpt
popf
pop
xchg
stos
sbb
push
pop
xchg
out
stos
pusha
mov
das
xchg
push
lds
ljmp
push
loope
mov
fdivs
fstpt
xchg
and
scas
loop
ja
paddq
aas
cmp
lahf
fwait
or
push
mov
push
xor
jb
dec
xchg
out
in
pusha
bound
lret
cmp
push
inc
xchg
xchg
mov
movsb
popa
sarl
mov
shll
xor
mov
std
pop
mov
inc
mov
jne
push
fnstenv
and
loop
fiadds
jmp
movsb
test
sub
sbb
ret
sub
inc
shll
fwait
jecxz
aaa
jne
insb
int
jnp,pn
insb
jecxz
sub
xor
iret
push
push
pop
lods
and
icebp
jae
inc
clc
push
push
push
push
popf
xchg
cmc
xor
pushf
pop
or
mov
ds
sbb
popl
cmp
push
scas
cltd
cli
pop
push
inc
cmp
dec
dec
mov
repnz
ror
mov
arpl
inc
pop
nop
cltd
or
sub
mov
add
lret
frstor
and
jo
jae
xor
xor
pop
cmp
xor
rclb
outsl
in
aad
cmp
sbb
sbb
jmp
hlt
js
cmp
push
fdivs
fbld
jnp
xor
push
dec
mov
xor
scas
lock
dec
lods
pusha
push
mov
xchg
test
mov
stc
inc
out
mov
cmpsb
ret
mov
in
fwait
pop
enter
pop
out
fisubrs
hlt
loope
sub
pop
mov
imul
ds
inc
int
decl
mov
subb
sbb
cltd
lea
stos
sub
push
mov
fsubrp
nop
pop
pop
jns
lcall
imul
xchg
sub
inc
outsb
rolb
adc
bound
jg
popf
imul
arpl
and
hlt
dec
shrb
in
adc
notl
test
out
enter
icebp
fimull
lock
sahf
add
inc
sbb
push
outsl
push
lea
je
xor
idivl
adc
cmp
xor
fmuls
push
add
xor
sbb
or
cmc
into
es
dec
cmc
inc
aaa
fwait
xor
in
mov
cltd
adc
inc
les
xchg
or
data16
pusha
lods
jne
add
aad
out
push
cmp
mov
sbb
sti
mov
std
ds
and
push
loopne
aaa
and
inc
dec
jns
fld
test
les
in
jl
xchg
ss
sbb
lea
cltd
pop
or
pop
push
mov
aaa
js
xor
daa
cs
mov
aad
mov
nop
mov
jmp
jb
xor
je
mov
jecxz
bound
lea
rolb
mov
int3
add
dec
movb
mov
inc
pop
pop
dec
push
addb
mov
das
in
mov
stc
pop
sbb
cmp
pop
shrl
jno,pt
mulb
mov
cmpsl
repz
icebp
enter
adc
nop
mov
lea
adc
sub
pop
or
pop
pop
cmp
sbb
test
in
xor
pushf
dec
mov
test
cmc
insl
pop
inc
dec
bound
jmp
xchg
pop
mov
lods
cmp
outsl
mov
daa
cwtl
add
dec
lcall
je
mov
test
and
xchg
adc
jnp
aam
fwait
xlat
negb
and
shrl
fmuls
pop
ds
insl
stos
dec
popa
lods
out
add
cmp
push
test
incl
cmp
or
flds
pop
in
cmc
mov
std
mov
shrb
mov
adc
aas
roll
inc
or
sub
fwait
and
sub
aam
ret
add
push
sub
bound
pushf
out
mov
stos
scas
mov
mov
mov
imul
push
ficoms
call
mov
mov
mov
jne
mov
mov
lods
filds
push
xchg
mov
cmp
add
xlat
cmpl
out
mov
sub
inc
cltd
es
jne
insl
stos
push
push
mov
insb
cmp
jmp
jle
xchg
in
adc
ror
int3
iret
movl
inc
jbe
and
dec
ljmp
outsl
cmpsl
mov
sbb
xchg
xchg
mov
mov
shrl
dec
rclb
pop
arpl
xor
inc
leave
push
lea
inc
pop
outsb
push
or
test
divb
inc
shll
test
sub
lods
sbb
or
mov
pushf
and
lds
sub
mov
mov
fldt
and
pop
lcall
mov
sub
sub
sbb
xchg
sub
repz
cmpsl
jno
shlb
cmpsb
cltd
xchg
dec
mov
orl
out
xor
or
or
xchg
subl
inc
cmp
sbb
in
andb
pop
mov
sub
lret
aaa
push
loope
loope
sub
add
cmp
mov
push
movsl
push
push
loopne
lcall
sbb
loop
add
nop
xchg
xor
sti
call
push
mov
sbb
pop
fistl
daa
lcall
adc
adc
sub
mov
sub
adc
cmp
cmc
inc
mov
inc
cwtl
mov
aaa
inc
mov
push
popa
and
das
and
daa
movsl
jne
addr16
adc
bswap
loope
and
pop
icebp
xchg
or
sahf
movsl
and
xor
mov
loop
aam
stc
lahf
mov
xorb
or
mov
inc
cmp
dec
dec
push
out
jp
mov
mov
cmp
jae
or
xchg
xor
or
mov
xor
xchg
and
adc
das
inc
adc
and
xchg
lods
pop
inc
mov
scas
daa
sub
insb
mov
fldcw
in
in
ja
sti
add
sub
loopne
stos
rorb
mov
inc
std
scas
fsin
shrb
mov
ds
sbb
enter
fimull
rcrl
out
dec
inc
push
pushf
ficomps
subb
xchg
fs
cmc
mov
pop
test
jb
mov
les
cmp
cli
out
fildll
test
gs
je
and
std
mov
aas
and
mov
outsl
sub
xchg
adc
pushf
mov
das
lret
dec
mov
mov
sub
and
leave
not
jge
xor
cmp
std
fldenv
cwtl
xchg
push
pop
cmpsl
repnz
mov
lahf
jle
cld
cmp
push
mov
mov
push
pushf
lock
jbe
jnp
jns
out
pop
mov
fistpl
pop
inc
mov
or
loop
jbe
lods
dec
pop
mov
xchg
inc
push
lahf
ljmp
or
test
enter
mov
dec
jo
and
out
cmp
das
push
dec
add
imul
mov
or
push
dec
decl
shlb
mov
mov
xor
pop
jmp
lret
fnstenvs
push
sub
sar
ret
push
pop
add
mov
push
enter
dec
xchg
cltd
or
aaa
or
je
lahf
dec
pop
repz
inc
stos
sahf
push
or
xlat
push
fwait
dec
bound
push
ja
sub
add
out
movsl
bound
pop
jns
jne
in
jb
xchg
xor
lcall
cmpsl
out
push
push
test
push
loop
cmc
sar
mov
and
mov
jnp
lret
jnp
mov
sub
fbld
loopne
test
jmp
cmp
or
loopne
enter
rclb
or
adc
gs
sub
mov
xchg
out
jae
and
sub
pop
pusha
outsb
int
iret
es
ret
mov
inc
add
push
fcmovnb
test
mov
lcall
xchg
clc
pop
ss
mov
imul
enter
mov
adc
pop
std
mov
xchg
fxch
fistpll
mov
arpl
rolb
jge
push
add
xchg
or
scas
add
cmp
pop
cmp
sub
aas
clc
cmp
aam
mov
scas
mov
jl
cmp
inc
movsb
or
xor
and
or
jge
in
cmp
cmc
rcr
repnz
push
cmp
rcll
arpl
adc
sahf
xor
gs
lahf
mov
push
pop
mov
push
dec
roll
lret
leave
test
imul
pop
pop
fs
push
das
push
loope
sub
fiadds
push
ds
push
movsl
or
pop
add
nop
jp
sbb
sbb
in
dec
xor
incl
push
add
imul
pop
pop
cmp
lcall
push
fdivrl
sub
outsb
cwtl
add
adc
sbb
ss
out
mov
cld
mov
fdivs
sahf
roll
add
or
ret
loop
jle
roll
lret
sbb
mov
push
sbb
stos
sahf
dec
mov
test
cli
xchg
adcb
inc
outsl
adc
clc
loop
add
cld
fs
xlat
dec
ss
ret
aas
cmp
add
out
mov
cli
lods
cmp
xor
in
cmp
mov
cmpsb
into
in
inc
jno
rol
repnz
mov
adc
fldt
jl
adc
fisttpl
add
pusha
data16
and
mov
jo
sub
push
cmp
pop
ljmp
test
gs
in
jmp
cmp
dec
sbb
inc
jne
popa
fnstenv
cwtl
push
repz
jmp
mov
push
stc
cmp
sub
fs
jl
stos
adc
cli
jmp
popa
repnz
aad
lcall
mov
subb
sbb
jb
or
jns
mov
sti
call
jecxz
cmp
jnp
popa
dec
mov
or
mov
les
mov
addr16
and
and
jmp
ror
and
std
xorb
cwtl
push
nop
lods
cmpsl
icebp
mov
mov
jbe
pop
cld
sbb
xlat
in
mov
call
pop
lcall
sub
shll
ret
rcr
out
mov
insl
pop
pop
cmp
dec
push
xchg
xorl
popa
xchg
mov
test
insl
cmp
and
andb
jle
jecxz
cltd
mov
adc
mov
xchg
push
or
dec
sbb
icebp
and
lret
sbb
sub
xchg
sarb
leave
lods
ret
xchg
jecxz
and
push
subb
sub
or
lret
hlt
or
mov
add
sbb
inc
cmp
xor
dec
dec
pop
addb
xor
pop
pop
fwait
jle
cli
push
sbb
je
lcall
out
xorl
in
push
xor
dec
xlat
cld
pop
loope
push
addr16
ret
iret
pop
mov
lock
mov
xchg
adc
pop
cmc
jne
cmpsb
and
subl
test
out
inc
lods
xchg
add
shll
sub
aaa
add
jne
hlt
out
and
insb
push
rcrl
jle
movsl
push
in
ds
or
xor
ret
inc
pop
push
int
inc
mov
jae
pop
imul
pop
adc
mov
sbb
ljmp
mov
scas
ret
push
adc
add
mov
fnstenv
div
data16
dec
arpl
xchg
push
ret
cmp
or
adc
inc
pop
push
int3
xorl
pop
push
jge
loop
mov
pop
or
rol
subl
add
jmp
xchg
sti
js
je
sub
jge
sub
sbb
stos
fdivrs
mov
shll
out
jae
cld
pop
jo
cmp
xor
rorb
test
psubusb
sbb
jno
fwait
mov
gs
push
dec
push
enter
pop
mov
fisubrl
sub
rorl
lret
cmp
into
and
das
mov
andb
push
add
call
dec
outsb
pop
lcall
lds
push
loop
push
lcall
fsubrl
sahf
sub
shll
repz
mov
out
mov
int3
fdivs
f2xm1
push
add
ret
insl
sub
push
notl
jb
rorl
sbb
aaa
mov
subb
nop
outsl
icebp
fsubrs
sub
scas
bound
lahf
adc
mov
mov
sub
dec
xor
dec
and
mov
inc
into
iret
mov
cmc
xchg
and
ja
hlt
pop
adc
adc
test
adc
jmp
inc
data16
fcoms
mov
out
scas
jmp
push
ret
xor
ret
jae
cmpsl
lds
gs
rorb
xorb
insb
and
les
rolb
jg
sub
fwait
push
cmp
or
fcoms
lock
into
ret
shll
je
mov
cmp
aas
pop
shl
add
dec
xchg
and
jae
sbb
pop
out
aas
cmp
pop
ljmp
xlat
rolb
jns
inc
fildl
cmc
gs
xor
mov
inc
rcr
push
das
mov
push
mov
pop
or
rcrl
jnp
idivb
loope
cwtl
or
pop
idivb
dec
shr
cld
xchg
push
jns
inc
jge
mov
imul
imul
movsb
pop
mov
fs
sub
stos
push
std
cmp
ret
bound
es
das
aam
inc
mov
dec
push
jle
xchg
ret
ljmp
aam
jle
into
mov
nop
cld
jo
cwtl
fdivp
mov
in
fsubl
add
sbb
enter
cmp
push
sbb
inc
mov
clc
sub
les
cmp
insb
shll
or
pop
aas
mov
stos
sbb
fsubrp
sub
sahf
xchg
sub
mov
jmp
mov
clc
das
sbb
nop
mov
lock
push
fildll
test
jo
ja
push
fs
inc
ja
inc
fsubrs
push
fwait
lods
test
push
mov
xchg
add
jle
bound
cmp
jmp
mov
xchg
iret
fwait
xor
icebp
shlb
js
addr16
cli
ljmp
xor
mov
add
stos
dec
inc
fs
jnp
sbb
fbld
je
jmp
rorb
loop
into
pop
stos
sub
xor
subl
adc
clc
jnp
lret
out
mov
jmp
pusha
movsb
push
pop
iret
in
ffree
adc
pop
mov
xorl
or
popf
cs
mov
cwtl
push
mov
sbb
cs
imul
jo
and
into
lock
mov
repnz
sbb
int
inc
hlt
mov
mulb
cmp
or
sbb
daa
aaa
xorb
or
and
fiadds
mov
cltd
push
rol
inc
jge
fists
pushf
and
cmp
sbb
push
ret
ror
loope
in
sti
dec
jns
imul
daa
lock
jno
cmp
dec
mov
push
ficompl
xor
sbb
lahf
enter
inc
lcall
stos
lret
repz
and
in
aaa
xchg
stos
enter
pop
loop
mov
cmp
sub
clc
pop
cmp
stc
cmc
and
movsl
sbb
or
sbb
xorb
imul
xor
xor
negb
inc
mov
lret
pop
pop
pop
loop
adc
xchg
fcoml
mov
outsb
pop
xchg
adc
into
pop
sub
adc
mov
add
mov
decb
push
or
fwait
sub
enter
mov
lret
sbb
and
icebp
mov
xchg
sbb
hlt
ja
mov
or
shlb
stc
les
ja
and
adc
test
push
cmp
jns
scas
out
daa
adc
adc
inc
cmp
ja
or
or
into
mov
je
pop
loop
xor
xor
adc
xor
ss
push
outsb
jecxz
data16
lods
lods
adc
cli
mov
addb
jmp
cs
sar
jb
jbe
lret
gs
addl
fldenv
inc
shl
sub
sbb
jns
sbb
push
push
xchg
pop
loop
in
push
dec
xor
and
das
aad
adc
and
mov
dec
or
je
jmp
ret
call
sahf
mov
sbb
mov
push
test
push
pop
or
roll
test
inc
in
push
movsb
das
push
mov
and
sub
shrl
push
testb
adc
into
jne
cwtl
enter
out
loop
mov
and
or
mov
fsts
mov
dec
and
lock
fdivs
sub
sub
aam
xor
ret
icebp
inc
outsl
es
jno
insl
sub
xchg
inc
mov
ljmp
lods
jmp
sbb
and
mov
lret
rorb
test
mov
xchg
mov
cwtl
clc
addr16
fstpl
out
fldt
xchg
imul
das
jae
jno
fwait
push
mov
addr16
dec
push
loopne
mov
mov
or
icebp
dec
nop
adc
test
xchg
ja
mov
dec
xor
ret
sub
or
fnstenv
push
pusha
enter
lret
aam
ss
aas
dec
xor
lds
mov
push
adc
mov
jp
mov
push
mov
add
loop
mov
pushf
call
mov
test
mov
out
mov
hlt
rcr
mov
shrb
xchg
fwait
sbb
out
jl
sub
sub
xchg
cs
fidivrl
and
pop
cmp
mov
xchg
loopne
inc
cld
mov
aas
inc
add
inc
es
pop
mov
inc
das
jae
pop
mov
popf
push
inc
mov
pop
mov
fidivrl
xor
sbb
test
imul
icebp
scas
mov
push
mov
arpl
jg
and
inc
inc
add
cld
outsb
jno
scas
sub
inc
push
add
or
and
lret
inc
scas
or
add
dec
pop
popf
xchg
loop
fisubrs
sub
sar
mov
psrad
cmp
sbb
jg
jbe
lods
jge
push
mov
es
popa
test
sbb
jno
lods
or
mov
push
mov
add
jo
dec
mov
push
shlb
fistl
mov
insl
pushf
cmpsb
push
push
cmp
push
mov
adcb
out
xchg
push
dec
dec
loope
xor
or
jmp
ds
cmpsb
cmp
push
sbb
or
push
sbb
xchg
imul
cmpsl
ds
hlt
mov
sub
jl
pop
xlat
mov
lcall
cli
fdivrl
mov
ljmp
add
adc
hlt
push
sbb
ret
mov
mov
rcrl
cmpsl
push
or
sub
outsb
notl
push
iret
lret
jnp
mov
pop
add
hlt
pop
fwait
sahf
xor
lds
scas
je
loop
rcrb
fs
mov
mov
xchg
jbe
cmp
xor
movsl
out
movsl
inc
cli
inc
xlat
cmp
out
sarb
mov
into
xchg
and
and
cmp
rclb
xchg
mov
adc
add
xchg
pop
xchg
lods
clc
adc
jns
adc
cmp
xchg
ss
mov
cltd
cmp
in
cmpsl
les
or
or
xchg
dec
repz
loope
scas
adc
xchg
les
jmp
xchg
add
sbb
sub
pop
xchg
inc
mov
pushf
mov
cmp
nop
add
jbe
fwait
push
outsb
jb
add
dec
sbbb
mov
lahf
mov
lea
fildll
mov
pop
loope
dec
push
jne
inc
cltd
inc
dec
dec
fmull
pop
jp
filds
testl
inc
jns
mov
leave
out
and
inc
clc
sarl
outsl
mov
cwtl
xorl
out
inc
sti
mov
sti
mov
cld
out
clc
lret
and
dec
mov
out
dec
lock
or
cmp
sub
jnp
ret
andb
sub
or
dec
dec
cwtl
pushf
xchg
inc
notl
sar
insb
popa
fldt
mov
push
sahf
int3
mov
pop
cmp
mov
stos
mov
xchg
cltd
dec
bound
test
xchg
pop
push
push
fisubs
cmp
in
push
fnsave
rcr
xor
pop
xchg
push
shrl
fidivs
mov
pop
mov
xor
sub
mov
or
sbb
int3
fldcw
jo
mov
inc
push
dec
and
xlat
xlat
fwait
or
add
add
jne
out
mov
stc
bound
inc
and
jae
ss
insl
cmp
ss
aas
inc
mov
addr16
testb
jns
mov
sub
xchg
test
mov
js
dec
pop
or
jne
jg
mov
or
and
jmp
data16
lret
dec
mov
sub
sub
push
mov
data16
dec
pop
add
sarl
jnp
adc
js
in
jno
pusha
fimull
loopne
aaa
repz
inc
lods
mov
mov
popf
jl
test
shll
inc
xchg
test
out
sbbb
push
inc
mov
cmc
imull
lcall
ljmp
mov
rolb
xchg
hlt
inc
cmp
mov
nop
mov
mulps
add
add
int3
inc
adc
pop
mull
or
lret
into
imul
adc
and
push
mov
movsb
ss
xlat
push
popa
and
jge
inc
xchg
sbb
inc
mov
out
adc
dec
sub
out
int3
jl
mov
js
mov
je
jo
lret
hlt
mov
test
jns
gs
dec
sub
cmpsb
aad
jg
add
fwait
fs
pusha
and
push
adc
push
sub
mov
push
ds
push
dec
and
mov
sbb
les
in
sbb
arpl
xor
adc
mov
pop
cmpsb
lods
xchg
js
out
bound
push
out
lcall
neg
push
clc
sub
sti
add
adc
test
push
inc
fisubs
cli
cmpsb
mov
push
and
push
and
into
sbb
iret
jae
lret
mov
push
or
pop
inc
mov
and
daa
sahf
aam
out
test
or
cmpb
mov
loop
shll
xor
imul
adc
inc
and
xchg
scas
mov
out
ds
out
cmpsl
xchg
cli
jns
sbb
mov
popf
push
or
sub
js
cmc
in
dec
xor
xlat
mov
imul
or
mov
jl
fistps
push
mov
mov
cld
mov
add
ss
rcr
sti
adc
sub
xor
push
shll
rcrl
les
outsl
xchg
enter
adc
cmp
adc
push
mov
mov
pushf
xor
stc
dec
cs
dec
jge
or
adc
jb
xchg
dec
dec
testl
cmpsl
out
insb
pop
lea
add
mov
mov
and
xlat
xchg
push
cmp
mov
mov
incb
stos
cli
inc
and
fisubl
or
and
mov
dec
testb
es
ds
pop
cmpsl
in
and
mov
rcrb
cld
adc
mov
mov
xchg
pusha
lock
inc
pop
push
mov
push
jbe
sub
sbb
ret
pextrw
test
xchg
push
int3
insl
stc
or
push
xchg
jg
sub
inc
pushf
cmp
jmp
loopne
pop
xchg
mov
lods
mov
mov
or
cltd
jg
jmp
xchg
or
mov
and
sbb
fnstsw
sahf
jp
xchg
shrb
shll
jnp
stos
jmp
or
pushl
incl
aas
mov
or
pop
push
and
ret
mov
ucomiss
pop
insb
aaa
test
insl
fidivs
test
sbb
add
xchg
scas
or
test
fistps
cmpsb
mov
add
or
out
std
repz
bound
enter
dec
jne
decb
jp
jns
xchg
mov
int
sbb
mov
sub
mov
into
cmpsl
dec
ljmp
mov
xor
xchg
mov
and
xchg
xor
stos
adc
add
push
pop
add
and
adc
cmp
stos
shr
and
inc
add
mov
pop
test
push
cmp
dec
dec
inc
pusha
jne
mov
add
rol
dec
adc
or
mov
call
push
stos
push
mov
mov
push
movsl
inc
adc
cmpb
stos
sbb
mov
cld
imul
sti
scas
dec
pop
add
fsubrs
mov
and
and
hlt
xchg
push
popf
arpl
fsubl
fmuls
sub
mov
aaa
mov
in
add
push
sub
and
fisubrs
arpl
ja
shlb
dec
scas
adc
jg
cmp
cmp
shll
mov
inc
jbe
cmp
jge
push
mov
pushf
pop
and
in
daa
push
cmp
stc
jne
test
jmp
dec
mov
pushf
xor
sub
repz
and
test
inc
or
inc
xlat
add
in
out
inc
push
pop
lahf
aad
push
nop
mov
std
mov
sub
pusha
fdivrl
xor
mov
movsl
xor
daa
cmp
lcall
mov
inc
rcrl
lock
pop
int
bound
hlt
and
aad
nop
lcall
xchg
adc
sbb
xchg
out
pop
nop
leave
jg
push
das
mov
cwtl
add
inc
pushf
movsl
and
insl
inc
push
adc
insl
int
mov
sub
adc
lret
cmc
shr
pop
mov
add
sbb
or
jns
jae
xchg
mov
pop
loop
or
les
jmp
sbb
neg
stos
not
out
sub
xlat
xor
insb
or
ljmp
jecxz
pop
pop
lea
inc
adc
cltd
pop
adc
push
fldenv
es
lods
or
dec
xlat
mov
popf
sub
dec
mov
outsl
xchg
test
jg
fdivr
xor
gs
mov
lcall
pop
mov
les
daa
rclb
mov
repnz
aam
cmp
inc
leave
adc
popf
pushf
loopne
sub
cmp
cmp
add
mov
push
mov
nop
mov
aas
aas
fldcw
jb
pop
sub
outsb
mov
push
jecxz
xchg
jns
icebp
mov
ret
call
sahf
and
cmpsb
subl
sti
fstpt
lea
mov
and
das
add
es
mov
pop
jg
rcll
repnz
add
ret
mov
cmpsl
in
mov
icebp
test
je
lret
add
xorl
xor
jecxz
sub
or
sbb
sbb
pop
insl
loopne
xchg
add
popa
jno
mov
mov
lods
sub
inc
mov
sbb
gs
mov
mov
add
or
test
repnz
test
loopne
jb
sbb
push
xchg
mov
or
cmp
mov
pop
pop
jmp
stos
fcoms
out
mov
addr16
push
dec
add
inc
dec
xor
insb
fcmovb
xor
xchg
mov
adc
fmuls
out
mov
ja
fstp
dec
or
cld
ds
dec
sub
dec
pop
pop
add
and
int
vmovd
mov
sbb
mov
mov
repz
add
jp
ret
add
mov
mov
cmp
xchg
pop
mov
jno
fistps
push
xchg
jbe
mov
ret
xchg
cld
mov
andl
out
xchg
les
push
mov
push
cs
stos
xor
and
cmc
xor
jnp
imul
in
xchg
adc
iret
pusha
mov
ret
sbbl
adc
test
loopne
push
insl
sti
negb
inc
lret
xchg
mov
ficoml
xchg
add
ret
or
gs
mov
pop
push
js
mov
mov
js
sbb
test
leave
scas
arpl
lcall
aas
or
push
jle
in
sub
add
je
int3
sbb
pop
push
jmp
mov
adc
dec
decl
scas
hlt
aam
and
sbb
movsb
dec
loope
push
call
jbe
aam
jge
rorl
push
add
in
push
outsl
cmp
jne
rol
adc
push
outsw
mov
jo
shl
lahf
inc
pop
push
dec
scas
cmpsl
test
and
jne
cmpsb
fcmovne
cmpsb
in
rcrl
xchg
fimuls
mov
loope
das
cmc
sub
cmp
pop
add
scas
call
imul
cwtl
test
addb
add
push
rorb
add
add
adc
pop
hlt
cmpsl
add
pop
push
aad
lcall
sbb
shrb
outsb
ljmp
sarb
jne
jg
lret
in
xchg
mov
idivl
mov
and
push
adc
and
clc
sub
les
sbb
xchg
sarl
mov
xchg
lods
sbb
sbb
add
inc
xorb
mov
or
mov
fs
jb
adc
jg
ss
cmp
pop
fsubs
insb
out
aaa
jae
ffreep
pushf
xor
push
cmp
adc
or
pop
je
sbb
cmc
jp
push
xor
xlat
lds
cmp
imul
test
adc
fwait
jp
xlat
int
out
sub
outsl
mov
jp
push
in
and
cs
pop
push
mov
shl
or
dec
adc
xor
dec
rcr
dec
xchg
enter
sub
sbb
gs
push
push
jo
pop
scas
push
popa
adc
push
sbb
sub
fsubrl
arpl
aad
scas
or
js
shll
pop
loop
in
xorb
jecxz
repz
hlt
sbbb
js
ret
mov
mov
mov
into
sub
add
outsl
xchg
fucomi
adc
das
inc
inc
sub
mov
xor
out
jge
and
cwtl
dec
shll
std
std
push
mov
cmpsl
jmp
push
mov
adcb
cld
push
repz
dec
add
lock
xchg
pop
push
jno
shlb
xchg
aam
push
xor
sub
add
mov
lahf
xchg
std
fcompl
ljmp
mov
add
mov
mov
xchg
cmp
enter
or
scas
cltd
in
xchg
mov
mov
push
and
pop
sbb
pop
xor
sbb
mov
cmp
xchg
shl
stos
sbb
out
sbb
scas
push
sub
push
aas
mov
or
cld
jb
mov
mov
xchg
push
into
test
movsb
popa
ja
dec
iret
dec
add
inc
or
leave
mov
push
in
sbb
add
fsubrp
mov
fwait
test
jl
scas
in
adc
xchg
pop
es
mov
and
xor
cltd
pop
inc
mov
mov
jbe
mov
mov
call
dec
mov
pop
jne
fistl
imul
fistpll
aaa
mov
dec
push
fsubr
mov
xchg
std
xor
insb
out
addb
and
jg
sbb
cmpsb
push
insl
lock
cmpsb
and
insb
nop
popa
sub
cmp
push
sub
pusha
stos
repz
pop
cmp
jo
add
push
mov
int3
push
cmp
xor
sbb
adc
inc
adc
mov
pop
mov
dec
sbb
subb
std
scas
adc
call
shr
adc
lea
lret
sub
hlt
sub
das
inc
jbe
test
push
cmp
dec
adc
rorl
int3
add
jae
fidivs
adc
scas
shll
cmp
pop
movsb
xlat
movsb
jge
dec
and
xor
in
ds
sbbb
aas
in
daa
jmp
mov
jno
xlat
cmp
mov
xchg
int3
push
dec
push
mov
mov
fnstenv
sub
dec
mov
push
test
ficoml
push
cmpsb
pop
cwtl
ljmp
jbe
pop
sbb
mov
mov
pop
inc
cmp
out
movsl
ds
mov
jb
mov
adcb
repz
sarl
loopne
and
pop
sbb
in
js
mov
lcall
pop
and
imul
sub
cmpsb
in
adc
adc
inc
cmc
mov
test
fnstenv
rolb
pop
pop
popa
int
xor
aas
out
xchg
testl
dec
rcll
orb
lahf
sahf
mov
je
or
cwtl
outsl
sub
and
lahf
adc
fimull
xchg
adc
addr16
cmp
and
fsqrt
adc
pushf
xor
xchg
or
scas
into
and
push
cmc
inc
adc
cltd
xor
adc
sub
adc
and
add
test
lods
xchg
xchg
popa
mov
xor
xchg
sahf
add
inc
cmp
sti
jmp
incb
dec
outsl
dec
inc
inc
cli
insl
out
fnstenv
test
inc
xchg
adc
sbb
mov
mov
popa
sbb
pushf
mov
jne
cs
cmc
pop
aad
nop
insb
dec
mov
jb
mov
je
push
xchg
jecxz
xchg
idivl
xchg
call
sbb
in
mov
mov
sbbl
or
lea
inc
je
shrb
in
mov
movsl
dec
mov
shl
and
notb
jb
adc
fsubl
jg
std
icebp
push
and
push
lret
loopne
jge
cmp
xor
pushf
pop
pop
jae
sub
xchg
sub
out
lret
jle
and
decb
mov
adc
pushf
mov
cmpsb
lods
add
imul
and
mov
test
das
cltd
and
movsl
test
pop
cmp
std
rcr
cli
fdivrp
mov
xchg
ret
mov
outsb
pop
push
sarl
cmp
pop
inc
mov
push
out
jle
rclb
add
add
xor
lea
pop
ret
fidivs
dec
jmp
sbb
out
jl
out
insb
cmp
inc
bound
daa
or
pop
into
fwait
fistl
push
rcll
dec
std
aad
pop
fwait
clc
out
lcall
jns
dec
jbe
lahf
push
xchg
inc
call
inc
pop
dec
nop
addr16
push
in
sub
shll
sbb
mov
fs
ret
daa
mov
xchg
sbb
and
mov
test
addl
jmp
or
subl
sti
mov
xor
xchg
inc
in
sub
jae
push
mov
pop
rclb
xor
jo
push
rep
dec
popf
sbb
sub
xchg
out
ret
fidivrl
insl
pop
sbb
je
imul
pop
push
push
mov
adc
and
push
jne
leave
xchg
movb
stos
cmp
loop
inc
jns
rorl
sti
pop
sub
or
or
add
dec
lock
pop
mov
mov
push
in
lds
and
scas
mov
shll
out
lock
cmp
mov
movsb
bound
jbe
arpl
sbb
push
andb
cs
cmp
inc
jno
cld
aaa
jl
and
dec
cwtl
movsl
dec
push
sub
add
ja
jge
cmp
enter
pop
dec
test
movsl
pop
jle
test
mov
mov
out
pop
pop
or
cmpsl
loope
mov
cmp
imul
inc
lock
stos
adc
rcr
add
repz
xor
and
js
jg
pop
push
aam
lcall
adc
push
jge
sub
pop
cmp
lock
jg
mov
les
es
and
out
push
sbb
clc
sub
and
shrl
sbbb
jae
sahf
pusha
mov
test
pop
adc
or
push
loop
loop
stc
push
inc
lds
stc
adc
adcl
fcomp
cltd
push
out
xlat
and
xor
fwait
mov
ficoml
into
add
mov
xor
mov
in
adc
mov
adc
jns
add
movsb
add
lods
jnp
cmp
dec
adc
rol
pushf
mov
mov
sbb
mov
jb
addr16
loopne
dec
lods
dec
into
int3
inc
or
test
in
repz
push
xchg
aam
mov
lods
jecxz
cmp
ss
push
xor
pop
adc
mov
pushf
loope
mov
or
add
sub
sub
mov
inc
loope
aas
mov
int
dec
in
test
mov
pop
jecxz
jg
cli
fs
rorb
mov
sar
mov
push
add
xor
in
out
add
dec
mov
pop
test
popa
addr16
in
das
mov
data16
and
sbb
inc
push
inc
notb
adc
sub
aad
jmp
xchg
mov
cld
mov
sbb
mov
add
ljmp
rcrb
inc
sub
fstl
mov
add
xor
or
cvtpi2ps
lods
imul
sbb
cmc
and
pop
pop
mov
add
pop
cmp
roll
xchg
cld
adc
fstl
sar
push
inc
xchg
sub
rcll
jne
stos
movsl
out
or
loope
jo
sbb
push
fimuls
jae
jge
loopne
cmp
sub
or
sbb
je
imull
lods
cmovp
ljmp
inc
cmp
push
xor
rcrb
test
jns
jo
jl
or
ljmp
xchg
clc
insb
enter
push
mov
mov
repnz
pop
stc
and
imul
dec
jbe
dec
jne
or
mov
mov
sbb
cmpsl
dec
call
orl
push
out
mov
int
pmullw
push
jmp
xchg
xor
push
insb
data16
in
inc
jle
ds
in
xchg
jno
loope
vhsubps
test
movsl
daa
pop
or
inc
in
mov
push
mov
mov
aas
xor
clc
mov
scas
fisubrl
adc
sbb
out
imul
push
dec
pop
xchg
mov
mov
bnd
lret
leave
push
lcall
or
inc
jl
jbe
aaa
mov
adcl
int3
fstpt
mov
cli
dec
mov
rcrb
and
js
movsb
in
daa
aas
push
in
mov
jbe
pop
xor
xor
sbb
jecxz
cmp
jno
inc
fidivrl
adc
pop
jl
push
cmovo
jo
adc
mov
jge
test
jo
and
loope
cmpsb
fs
ret
sbbb
in
clc
pop
fwait
sar
push
xchg
loope
insb
push
mov
scas
mov
movsl
dec
push
out
mov
addb
aam
add
imul
xchg
cmpsl
pop
imul
pop
rcrl
mov
mov
mov
jno
adc
addr16
fwait
aad
int
divl
mov
in
mov
mov
and
push
int
fildll
testl
test
jecxz
push
aaa
sahf
add
call
outsl
jmp
out
stc
lds
loopne
lock
lods
adc
imul
fcoms
insl
inc
cli
js
or
cmp
jnp
or
cmp
out
push
xor
es
or
loopne
fldcw
es
daa
xchg
add
jecxz
movsl
mov
lods
bound
xchg
mov
sub
jle
mov
xor
sti
cmp
cs
mov
shlb
dec
sub
push
fldenv
cmp
ror
loope
xchg
bound
shll
dec
rclb
pop
mov
jp
mov
jmp
lock
aad
xor
push
push
jmp
fwait
test
dec
dec
popa
addr16
das
outsl
jecxz
stos
jbe
std
test
call
lcall
or
jne
fstpt
mov
inc
xlat
or
inc
stos
movsb
das
xorl
mov
fstpl
xchg
int
not
mov
sbb
cmpsl
call
xor
cld
jmp
rorb
add
xor
mov
cltd
scas
pop
mov
mov
sub
mov
push
and
es
jl
or
xchg
mov
dec
fisubl
lret
mov
mov
test
leave
and
cmc
pop
add
add
add
int3
arpl
frstor
fnstsw
clc
add
or
aam
fcom
call
push
in
stos
xchg
incl
xchg
bound
addr16
mov
pop
fidivl
nop
mov
mov
xchg
push
mov
push
pop
ds
popa
in
test
dec
in
ja
movsb
cmp
inc
nop
or
das
inc
fwait
and
sbb
add
pop
push
pmaxub
mov
xlat
pop
xchg
inc
jbe
mov
or
mov
je
push
addr16
dec
and
enter
arpl
xchg
pop
xchg
pop
jecxz
jne
mov
jge
cwtl
jno
xchg
ret
jmp
sub
aas
sbbl
jne
mov
adcl
cmp
and
test
rcll
jnp
dec
mov
rcr
sub
jno
pop
pusha
jl
jo
fcompl
sub
inc
pop
pop
inc
out
nop
pushl
adc
push
jns
mov
xor
inc
nop
cmp
fisubl
pop
push
xchg
pop
pop
xlat
sbb
sub
imul
scas
cmp
mov
mov
and
fcomi
les
movsb
hlt
or
mov
cmp
or
icebp
sar
aaa
jp
add
imulb
in
int3
and
clc
ficomps
and
scas
jo
dec
and
or
outsl
loop
movsb
js
sti
push
cmp
fidivs
shrl
inc
push
daa
call
mov
jl
iret
mov
push
cli
push
bnd
add
movsb
pop
lahf
ror
push
xchg
aad
test
cmp
cld
inc
mov
mov
in
outsl
jmp
mov
ficompl
je
mov
jae
sub
hlt
lret
mov
movsl
push
push
pop
and
lret
adc
pop
orb
sbb
jae
add
xor
dec
fbld
pop
nop
dec
movsb
js
mov
leave
lcall
push
fsubrl
sub
lcall
rolb
jg
roll
dec
mov
mov
mov
cmp
test
and
jbe
mov
out
dec
adc
lret
ds
mov
mov
jl
sbb
clc
sbbb
subl
and
stc
jl
sub
push
adc
push
ss
in
cmp
push
aas
xor
movl
pop
cmp
lock
into
lret
cmc
xchg
clc
xchg
stos
mov
inc
adc
add
sub
add
scas
aaa
data16
leave
mov
fildll
mov
mov
xchg
sti
ljmp
gs
cli
loopne
insl
dec
mov
mov
adc
hlt
or
pop
pop
jb
cli
outsl
lret
rcrl
add
jp
call
pushf
aaa
push
mov
out
inc
cs
xor
aad
mov
std
inc
loopne
hlt
sbb
shrl
jecxz
sbb
movb
lock
outsb
cld
mov
add
sub
mov
pop
inc
pop
out
xor
inc
lds
das
pusha
lahf
xchg
mov
lret
and
inc
mov
negb
bound
cwtl
mov
dec
gs
fdivl
sub
jg
mov
nop
or
mov
insl
pop
rolb
adc
insl
aam
mov
ret
imul
dec
sub
xchg
stc
icebp
cmp
cmc
sub
popa
jl
pushf
lods
inc
push
leave
mov
lret
mov
shll
inc
lds
cltd
leave
jg
test
xlat
xorb
xchg
pushf
frstor
sub
xchg
xchg
jle
aas
cmp
stos
adc
out
cmpsl
pop
mov
push
xchg
jb
mov
jp
or
push
xor
inc
stos
aad
and
loopne
enter
in
add
ja
and
dec
int3
push
mov
daa
sub
fwait
push
dec
in
push
js
repz
lods
cmpsl
mov
bound
or
add
or
pop
mov
das
lds
jp
dec
nop
mov
jmp
mov
jmp
fldl
mov
iret
mov
xchg
xchg
sbb
xchg
repz
cmp
imul
loope
add
mov
stos
jb
adc
bound
insb
cmp
mov
inc
sub
jle
insb
or
js
sbb
out
iret
cmp
add
ja
test
cli
pop
test
or
push
cmp
add
outsb
rclb
test
push
xchg
mov
and
lock
mov
ja
adc
daa
mov
pop
mov
leave
cld
sub
hlt
push
icebp
pop
arpl
dec
movsb
inc
subb
or
insb
outsb
and
cmp
or
xchg
add
xchg
inc
jge
inc
clc
sbb
mov
or
scas
dec
push
andb
ss
sti
xor
jbe
lahf
inc
jge
lcall
out
arpl
mov
pop
jno
inc
sarl
or
je
push
aad
cmp
dec
dec
mov
push
or
repz
rolb
mov
in
push
ss
enter
pop
sbb
pop
push
cmp
sub
loop
dec
adc
addr16
pop
sbb
fsubp
and
jae
pushf
andb
sbb
rolb
mov
or
inc
pop
mov
add
cmp
or
imul
pop
insl
mov
outsb
flds
adc
sbbl
mov
mov
dec
mov
pop
mov
mov
and
jb
and
sti
int
sub
je
testl
mov
shll
mov
xor
mov
pop
nop
outsl
cmpsl
and
jmp
pop
stc
xor
adc
lods
adc
cwtl
cwtl
cmp
or
out
out
and
test
sahf
cld
pusha
cmp
cmp
or
ret
daa
into
lods
push
push
pop
cmp
maxps
adc
in
xchg
adc
add
rep
xor
mov
shll
sub
or
in
xchg
repnz
icebp
jl
sti
cltd
movsb
cmp
push
ljmp
cmp
jmp
insl
inc
inc
push
sti
fsts
jge
rep
cmp
xchg
sbb
or
cmp
xor
xor
loop
std
jmp
jl
cs
xchg
aad
jl
nop
fmuls
mov
jb
dec
push
dec
cmp
xor
movb
js
cmc
add
call
sbb
and
clc
insl
xor
fcmovnbe
pop
sbbl
addl
pop
imul
jo
test
dec
add
shll
mov
pop
jns
std
lods
ret
sbb
out
dec
mov
mov
cmc
cld
aas
std
in
pushf
jmp
lock
das
out
lcall
jbe
rcl
mov
aaa
aam
mov
outsb
es
ss
dec
adc
and
adc
push
and
lods
lods
mov
and
jmp
mov
mov
addl
loop
int3
mov
imul
lret
clc
jp
push
xchg
jmp
push
rcll
mov
sub
lock
pop
xor
xchg
xor
test
push
xchg
xor
push
cmp
mov
xchg
add
sbb
add
sarl
bound
xchg
xor
lret
test
xchg
in
inc
mov
add
pop
ljmp
jp
orb
or
dec
mov
and
lret
xor
inc
es
test
add
xchg
push
fnsave
cmpl
sub
add
gs
in
xchg
and
out
cmpsl
jae
jnp
iret
sbb
repnz
jg
sbb
aam
iret
lcall
pop
scas
xor
jae
mov
inc
popf
mov
aaa
mov
mov
push
xchg
or
mov
cmp
and
jp
scas
add
and
sarl
push
dec
leave
jae
scas
hlt
lahf
pop
sub
mov
or
out
mov
clc
inc
lock
pop
loop
les
add
fsubp
cmp
sub
jp
in
jns
scas
cs
dec
and
or
movsb
mov
push
fldenv
mov
jge
movsl
xchg
sbb
sbb
jno
testl
push
mov
add
lahf
fmull
test
shll
les
cmp
jae
pop
pop
cmp
sahf
in
xchg
sub
cli
mov
subb
movsl
popa
xchg
shl
sub
pushf
fwait
insl
add
ret
inc
xor
clc
xchg
iret
push
pop
fdivp
sarb
push
lret
pop
dec
add
lcall
insl
fadd
pcmpeqd
push
subb
inc
adc
pop
jbe
jg
aam
mov
pusha
mov
push
xor
push
imul
and
cmpsb
xchg
lret
push
rorl
mov
xor
fwait
sbb
sahf
in
rclb
sub
jge
push
adc
outsl
xchg
loop
xor
fs
icebp
pop
adc
push
mov
fadd
xor
out
inc
or
xor
or
add
or
cmp
mov
pop
enterw
stc
test
adc
sub
add
push
and
pop
jg
mov
mov
inc
ret
xchg
sub
scas
in
in
pop
fists
sti
dec
lods
sahf
sub
cmpl
jg
mov
dec
push
sbb
fxch
push
add
ds
movsb
xchg
loopne
add
fwait
dec
jecxz
pop
loopne
mov
mov
stc
pop
jmp
call
pusha
aad
shrb
mov
mov
jb
and
scas
sub
je
lock
jecxz
or
push
popf
xchg
movsb
lret
push
mov
inc
popf
mov
ret
pop
orl
sbb
xor
push
or
pop
lea
push
test
mov
aam
mov
mulb
inc
icebp
cwtl
push
pop
pop
cmpsl
in
aad
jle
sbb
mov
dec
or
jae
imulb
cmp
push
test
shlb
push
add
mov
pop
ret
xchg
es
divb
dec
sbb
inc
xchg
ja
jo
fcomi
jnp
stos
add
mov
adc
int
in
lret
fcoml
add
sub
jle
cltd
cltd
aaa
dec
repz
mov
xlat
push
xor
dec
clc
mov
cmp
sbb
movb
cwtl
mov
stos
popa
lret
insl
in
mov
aaa
mov
push
dec
sub
stc
cmp
mov
and
lods
aas
test
push
mov
popa
clc
pop
xchg
inc
jle
xchg
ja
test
sub
dec
mov
lock
push
iret
inc
or
or
fwait
mov
int
mov
repz
loop
clc
out
cmc
xor
enter
mov
in
sub
mov
test
mov
addr16
push
jp
outsb
inc
mov
push
mov
or
dec
add
addr16
dec
arpl
cmc
iret
in
cmp
int
mov
pushf
out
mov
ds
sbb
push
out
mov
and
rclb
cmp
jle
imul
dec
xlat
iretw
stc
push
pop
ret
inc
pop
in
add
out
jae
jge
push
ret
popf
pop
inc
or
loopne
xchg
arpl
cld
sbb
hlt
mov
enter
lods
or
and
mov
mov
dec
scas
hlt
ljmp
inc
mov
jno
adc
dec
push
mov
es
pop
mov
pop
inc
sbb
xchg
pop
sahf
cld
fiadds
xchg
or
mov
or
adc
movsb
sbb
loop
sub
movsl
jge
xchg
add
je
mov
cmp
mov
jno
shlb
dec
ret
jge
push
fwait
add
jo
aam
lahf
sbb
adc
pushf
push
pushf
pop
roll
cmpsb
jo
repz
and
stos
enter
pop
xchg
push
mov
dec
sub
cmp
cmp
lock
push
arpl
xor
clc
addb
sub
mov
xchg
fiadds
add
negb
lcall
pop
fsubrl
icebp
sub
add
lret
fcmovnbe
in
shlb
out
jg
fs
mov
mov
scas
mov
push
and
imul
int
dec
in
and
push
testl
scas
das
mov
movsl
sbb
jmp
sahf
pop
testb
fldt
outsl
xlat
loop
push
add
mov
adcb
pop
scas
mov
cmp
orb
cli
inc
out
xor
cmp
dec
int
ljmp
mov
jmp
xor
sbb
and
mov
adc
es
xchg
ds
data16
fsubrs
js
jns
xchg
jecxz
adc
nop
mov
adc
icebp
decb
popa
mov
loopne
inc
pusha
dec
test
mov
adc
mov
xchg
mov
lock
cmp
addr16
int3
sbb
adc
rcrl
cmp
repnz
sbb
mov
inc
aas
roll
cltd
dec
es
into
je
fsubs
add
or
dec
call
xchg
sub
incl
jge
out
xor
push
inc
repz
das
std
jge
mov
out
lahf
es
jnp
ror
push
mul
add
cwtl
rcrl
cmpsl
in
lock
popa
mov
lret
jp
cltd
mov
jbe
mov
gs
sub
mov
inc
aam
jae
ret
push
push
iret
xor
repnz
pop
lret
mov
sti
ljmp
mov
orb
sbb
mov
in
inc
sbb
popa
add
sub
test
sub
mov
or
fstpl
dec
pop
clc
lock
jmp
sbb
jp
pop
inc
xchg
mov
shlb
xchg
jle
push
push
and
dec
test
fdivrl
adc
and
popf
xor
dec
repnz
sub
push
test
lcall
movsl
sahf
movsb
inc
in
pop
stos
or
dec
xchg
fwait
loope
mov
add
std
addr16
aam
bound
mov
jge
sti
in
leave
mov
aam
in
mov
pusha
icebp
aaa
addr16
rolb
jp
or
lods
mov
ss
adc
adcb
call
mov
pop
jmp
push
lds
fidivl
hlt
out
mov
pop
or
mov
add
cmpsl
jbe
insb
jge
add
dec
addr16
pop
fcomps
pusha
call
in
ffreep
cmc
imul
cltd
in
inc
sbb
enter
in
popf
add
mov
mov
cmc
xor
outsb
sbb
mov
scas
leave
loopne
push
mov
push
adc
call
outsb
repnz
leave
popa
push
ljmp
sbb
mov
movsl
or
fnsave
enter
outsb
add
sbb
int3
jb
xchg
pop
int
xlat
fisubrs
lahf
dec
lds
jo
shlb
test
and
pop
cmp
pop
movsb
movsb
sub
pcmpeqd
data16
das
adc
daa
in
iret
cmp
xor
int
jl
sbb
push
jle
inc
xor
pop
mov
lahf
cmp
rsqrtps
cmp
test
fcompl
fidivrs
in
repz
enter
pop
push
outsb
loope
testl
cmp
pop
ds
mov
and
adc
sbbb
imul
fidivrl
pop
sub
xchg
js
xor
pop
dec
xor
jns
xor
iret
aam
sbb
dec
movsl
add
cld
mov
and
rclb
insb
out
jg
negl
mov
dec
scas
mov
mov
mov
sub
call
int
loop
sub
das
lret
mov
aaa
lret
arpl
andb
mov
test
adc
orb
loop,pt
setbe
pop
jns
cmpsl
adcw
jmp
xchg
cmp
cmp
pop
inc
cli
ja
enter
sbb
or
jecxz
push
jmp
mov
pop
movsb
insb
les
clc
xlat
imul
fadds
and
repnz
pop
lods
in
popf
mov
ljmp
mov
aas
in
xor
and
cmpsb
pop
imul
sub
loopne
loopne
dec
or
mov
fnstenv
sbb
and
jno
push
xchg
data16
sbb
cmp
aam
pop
inc
and
adc
imul
ss
shrl
push
aas
jo
inc
jb
test
je
adc
jecxz
sbb
or
cld
lea
addl
cwtl
fisttpl
mov
data16
fs
pop
jnp
sbb
sub
xor
mov
cmpsb
jmp
and
xor
rcrl
and
es
std
mov
in
inc
cmpsl
jecxz
mov
cmp
sub
jmp
sti
dec
mov
pop
movsb
lock
mov
dec
stos
fcmovbe
dec
in
sub
aam
pop
rol
es
mov
adc
orb
or
rcll
lods
in
or
mov
push
jp
and
cld
xchg
jne
shlb
add
dec
test
lock
push
mov
fnstsw
dec
stc
clc
sub
pop
xchg
int3
mov
fwait
sub
mov
aas
rclb
xchg
lds
fwait
pushl
arpl
xor
in
or
mov
filds
mov
or
dec
cwtl
fisubrs
or
push
lock
add
testl
mov
inc
out
pop
push
jns
or
in
pop
cwtl
xchg
shlb
xor
pop
sbb
jg
inc
mov
leave
mov
jb
mov
movsl
inc
enter
mov
xchg
add
sbb
dec
xchg
loope
jmp
pop
inc
cmp
jne
xchg
icebp
mov
and
mov
aam
jnp
pop
mov
in
inc
or
iret
mov
pop
ret
inc
pop
push
ret
es
adc
inc
lds
push
dec
pusha
mov
sub
mov
inc
or
add
cmp
pop
imul
stos
scas
sub
push
negl
xlat
cld
ljmp
mov
hlt
adcb
inc
mov
pop
mov
ret
or
comiss
pop
test
pop
cld
push
scas
fmulp
mov
fadd
ds
mov
and
rolb
push
movsb
das
xchg
ret
push
and
jge
sbb
shll
jecxz
movsl
cmp
imul
enter
ss
mov
popf
jns
call
lods
imul
iret
cmp
mov
cmpsb
jbe
dec
in
repnz
addr16
pop
adc
push
shl
jecxz
inc
sub
cmp
cmp
add
ds
sub
out
xor
sbb
cwtl
add
adc
xor
loope
sbb
sub
movsb
pusha
js
dec
pop
lret
push
out
lcall
ds
out
ljmp
and
imul
jg
gs
or
mov
pop
mov
test
ss
das
cmpb
push
pop
cmp
testl
addr16
inc
mov
in
sbb
fimuls
mov
andb
and
dec
xchg
stc
cmovo
adc
push
fnstcw
clc
cli
mov
cli
stos
lea
cli
lret
pop
cmp
cmpsb
jmp
into
cmp
push
xor
push
ret
les
lret
pop
mov
adc
push
mov
data16
ja
int3
push
sti
mov
mov
add
and
clc
adc
popf
nop
sti
push
pop
sti
xchg
add
mov
dec
fistl
xchg
fdivrp
fldcw
or
sub
push
xchg
sub
sbb
js
pop
lret
pop
stc
xchg
mov
clc
jae
xchg
les
ficomps
aad
sub
aas
ucomiss
lea
adc
ja
movsl
jge
ljmp
lea
sub
jle
scas
cmp
adcl
fistl
stos
push
inc
add
mov
dec
ret
subl
jnp
mov
pop
fcomi
and
inc
stc
shrl
loope
imul
cwtl
inc
adc
mov
bswap
push
cld
jmp
lahf
lret
pop
aaa
xchg
mov
push
mov
dec
cmp
outsl
int
imul
rcrb
pop
shrb
dec
fcmovnbe
aam
xchg
sbb
xor
cld
cmp
push
insl
out
dec
or
mov
popa
out
jge
lods
pop
fisttps
mov
jp
cli
jp
mov
pop
inc
mov
mov
xchg
push
or
mov
mov
push
jp
xchg
frstor
xchg
clc
data16
or
sbb
fstpl
pop
cltd
into
push
stos
jns,pn
out
xchg
outsl
push
or
push
fcmovnu
push
call
jl
xor
pop
mov
pop
inc
lret
mov
xor
mov
ja
inc
and
shrb
sbb
lds
push
jb
aas
push
push
push
cmpsl
mov
adc
add
dec
mov
xchg
sub
bound
and
idivl
imul
adc
pop
repnz
addr16
movsl
jp
outsb
mov
scas
lea
add
dec
stos
or
jne
or
mov
and
fists
movsb
xchg
mov
ss
ljmp
out
push
jns
inc
cmc
mov
in
fs
movsb
and
stos
mov
ljmp
popf
nop
jnp
push
push
jle
mov
push
push
aas
iret
push
sub
bound
jb
xor
adc
dec
add
or
aam
xchg
sub
ficoml
ret
xchg
push
xor
imul
push
scas
and
arpl
mov
inc
mov
mov
pusha
leave
dec
push
shl
lret
dec
cmp
inc
xchg
cmpb
rcrl
int
hlt
out
or
test
imul
dec
or
pop
sub
jae
outsl
rorb
inc
outsl
test
pop
push
dec
scas
stos
cmp
jae
mov
dec
rclb
push
jbe
mov
cmp
movsl
pop
dec
daa
loop
out
mov
les
xor
jl
mov
dec
adc
and
inc
fsubs
scas
sub
jo
mov
lahf
jp
sbb
sub
loope
push
std
push
inc
inc
cld
shlb
in
fsts
repnz
pop
push
cmpsl
sub
inc
imul
mov
scas
cmp
mov
add
in
rorl
ror
sbb
daa
add
shll
fcomi
pop
jp
fs
popa
jge
dec
jo
lcall
or
outsb
loop
sub
mull
outsb
enter
mov
push
ror
mov
jg
sub
sub
scas
mov
push
out
mov
js
and
outsl
adc
mov
xchg
test
mov
shll
mov
mov
loope
js
std
test
popa
add
out
outsl
add
loop
mov
ss
sub
ss
inc
cmp
fdivs
testl
sbb
or
into
sbb
add
inc
jno
xor
in
rcrb
hlt
adc
insb
insb
adc
sbb
add
jl
cmp
lods
mov
jecxz
imul
out
sub
outsb
mov
or
xchg
mov
or
loopne
pop
int3
dec
jg
inc
movsl
and
movsl
mov
les
test
push
xchg
in
xlat
xchg
sbb
mov
add
aad
pop
lods
lahf
enter
ljmp
inc
xchg
inc
outsl
and
popa
pmulhuw
scas
or
jb
push
addr16
mov
push
je
mov
jecxz
dec
mov
clc
dec
push
call
sar
arpl
jmp
xor
push
pop
shll
inc
mov
movsb
das
lcall
mov
add
imulb
mov
cmpsl
loope
or
out
movsb
cld
push
loopne
lret
dec
or
adc
insb
pop
mov
out
shl
add
inc
push
add
loop
daa
ret
ret
add
insl
int
xor
lahf
out
xchg
jae
mov
popa
push
out
mov
ret
xchg
mov
popf
sahf
adc
xor
jnp
lret
cltd
adc
pop
mov
jae
push
cmp
cld
popf
clc
mov
jb
sbb
add
pop
inc
sub
out
stc
sbbb
mov
pushl
je
aad
dec
or
aas
leave
mov
xor
fs
xor
test
pushaw
ja
fistl
jle
pusha
inc
mov
push
or
sbb
fwait
outsb
push
dec
and
or
fwait
out
jno
call
jns
fstpl
in
jno
xchg
jo
jo
popf
rorb
mov
xchg
push
xchg
and
mov
push
cmc
mov
addl
jne
jae
mov
cmp
xchg
xchg
jmp
mov
add
jnp
lds
out
cmpsl
push
jecxz
mov
and
mov
int
pop
mov
in
out
push
pusha
mov
roll
ret
ficompl
add
inc
cmp
xchg
jae
sbb
push
into
cmp
popf
ja
cli
mov
or
imul
mov
inc
imul
ljmp
test
adc
lea
mov
or
popa
hlt
push
pop
push
inc
xchg
xchg
or
dec
xor
fwait
js
add
inc
sahf
pop
pop
cmc
adc
adc
rol
lret
test
je
dec
scas
mov
sbb
and
jo
mov
lret
and
into
push
inc
jge
arpl
pusha
pusha
sti
daa
loope
cmpb
sbb
leave
jl
shrb
mov
inc
xor
jo
adc
pop
in
fwait
test
enter
mov
jl
shlb
pop
xchg
mov
push
xor
adc
mov
ds
inc
sbb
and
jge
adc
and
scas
mov
add
jmp
jbe
sahf
xor
push
js
push
faddl
leave
push
setp
mov
sub
dec
cmp
mov
lret
jle
clc
mov
mov
fwait
mov
push
xor
cli
fisubrs
or
push
loop
divl
fwait
sar
ret
imul
test
xor
outsl
loope
loopw
fs
jge
push
fs
or
adc
cli
out
cmp
outsb
mov
adc
xor
push
mov
into
call
das
cmc
pop
push
xor
adc
pop
add
xchg
popf
jno
sbb
add
mov
mov
lods
lcall
xlat
cmpb
sub
adc
ja
cs
jae
mov
mov
and
xlat
xchg
shlb
mov
pop
dec
and
add
jbe
les
mov
xchg
scas
mov
sarl
out
pop
cmp
pop
pop
imul
in
pop
jmp
sbb
movsb
jns
aad
pop
add
dec
jmp
jb
popl
je
sar
or
lea
push
call
xchg
lock
xchg
test
sub
fcomi
push
inc
pop
fs
jp
subb
jns
add
lret
cmpsb
imul
pop
rorl
and
imul
mov
cwtl
mov
xchg
leave
mov
mov
push
lods
lret
ss
mov
lcall
sbb
add
rol
loope
sub
imul
push
xchg
ret
push
fdivs
ds
insl
mov
xor
xchg
mov
dec
ljmp
hlt
lods
cs
mov
rcrb
mov
fstl
or
dec
add
test
push
mov
jae
push
add
cmp
leave
xacquire
sbb
sbb
shll
pop
mov
out
pop
mov
xchg
pop
adc
adc
out
sub
xorb
mov
xchg
dec
scas
dec
cltd
nop
cli
test
sub
ja
repnz
jno
jae
dec
out
or
scas
and
in
pop
ljmp
andb
cmp
bound
ds
or
push
divb
popa
jnp
pop
dec
inc
test
inc
lcall
adc
mov
jno
loope
jmp
sub
nop
adc
pop
shll
lods
popa
adcl
out
mov
sub
loop
jnp
and
adc
add
ret
insb
sub
jle,pn
adc
in
fistl
pusha
push
adc
iret
aam
mov
inc
dec
fstps
adc
push
jae
cs
push
xchg
push
adc
or
inc
mov
cmp
mov
lods
mov
sub
imul
outsb
scas
push
cmp
push
std
xor
pop
jle
leave
cmp
mov
filds
add
adc
push
jb
xor
add
dec
push
dec
sub
mov
sbb
aad
lds
int
pop
bound
lods
dec
cmpb
inc
lods
movsb
shlb
add
adc
imul
daa
loopne
arpl
pop
mov
repz
mov
mov
or
cmp
lret
pop
and
das
in
test
xchg
pop
inc
inc
sbb
decl
in
cmpsl
inc
xchg
enter
pop
shl
subb
ljmp
out
stos
cmp
add
ds
mov
add
sbb
or
popl
out
sub
push
dec
xor
int
popa
in
imul
int3
js
loope
pop
dec
mov
xor
mov
mov
add
jbe
mov
adc
jle
fnstsw
outsb
fbstp
mov
adc
and
mov
int3
pop
dec
sub
jo
lret
push
rcll
bound
mov
sahf
mov
add
xor
insb
outsl
rolb
stc
xor
test
inc
adc
jle
andb
cmp
sub
fsub
mov
int
xor
push
cmp
push
or
into
loop
add
into
push
movsl
xor
in
adc
imul
fldl
pop
jl
inc
ss
lods
subl
and
roll
popf
jmp
mov
nop
in
ficoms
xchg
cli
dec
add
push
jo
and
lahf
dec
test
jbe
lret
bound
adc
mov
dec
sarl
sbb
xor
jb
cwtl
sbb
sub
inc
movl
sbb
ret
pushf
imul
test
cs
js
aad
add
mov
in
iret
xchg
cli
mov
jns
inc
je
dec
mov
sbb
orl
push
imul
sbb
push
dec
adc
xor
and
cmpsb
inc
xchg
and
popf
loopne
das
pop
xchg
cmp
addb
rcrl
add
xor
scas
std
loopne,pt
cwtl
js
xor
mov
adc
xchg
cmp
cld
insb
mov
lea
mov
call
jmp
sub
sub
js
loope
mov
sarl
insl
fwait
mov
jae
icebp
fistpl
popa
xor
mov
mov
jecxz
mov
mov
cmp
xor
lock
xlat
cltd
adcl
dec
mov
mov
mov
fstpt
mov
pop
sahf
mov
sbb
inc
mov
pop
lcall
out
mov
adcb
insb
cmp
xor
mov
xor
cs
mov
cmp
stos
dec
add
sub
mov
dec
fs
inc
fbld
fwait
int3
and
push
nop
xchg
lret
xor
test
add
das
dec
bound
sahf
jns
inc
stc
in
fiaddl
push
mov
js
or
jno
aas
xchg
sub
pop
mov
mov
cmp
mov
popa
fiadds
jne
je
mov
stos
sub
scas
clc
xchg
sub
cli
xchg
dec
js
andl
sub
fucom
xchg
push
popa
jnp
stos
or
inc
insb
xchg
out
mov
jle
inc
icebp
in
sub
pusha
out
mov
ret
pop
das
iret
jl
push
jb
jae
test
push
jecxz
popf
lds
and
pop
popf
dec
fisubrl
cmp
in
inc
imul
dec
scas
mov
add
inc
adc
mov
scas
add
mov
loopne
lods
jae
arpl
out
fs
inc
adc
aaa
xor
jns
in
into
int3
or
pop
mov
dec
shrb
andb
mov
movsb
pop
addr16
add
jge
loopne
sbb
and
cmp
push
jl
push
adc
clc
mov
xor
es
out
xlat
sbb
adc
stos
movsl
fists
or
ss
addb
enter
pop
adc
cwtl
push
and
loope
pop
loop
iret
sub
cmp
ss
jne,pt
sub
and
fmuls
sbb
adc
xor
xchg
pop
out
pop
vmread
lods
dec
lcall
das
fsubrl
daa
sub
das
in
icebp
ds
adc
pop
xor
jg
push
push
mov
sbb
aad
pop
ficomps
and
insb
popl
cmp
sbb
xor
ret
sub
inc
adc
add
lret
lods
shrl
das
mov
cmp
sbb
repnz
sahf
popa
xchg
adcb
xchg
outsl
lahf
xchg
add
orl
jmp
and
mov
lds
enter
pop
out
movsl
mov
jbe
shlb
fstpt
sub
into
into
lds
xchg
jae
xor
xchg
daa
pop
aas
dec
jge
pop
ret
sbb
adc
std
fadds
in
xchg
retw
dec
inc
lods
push
in
xlat
add
push
sub
fucom
mov
dec
shlb
adc
sbb
pop
xlat
loopne
das
inc
dec
jecxz
cli
inc
fdivp
in
sbb
push
out
repz
in
xchg
xor
std
jge
fs
cmp
xor
pop
lds
jp
sbb
sub
cmp
dec
cs
push
aad
pop
xor
mov
sub
adc
je
cs
add
sbb
in
add
cld
mov
push
mov
sahf
xorl
int3
push
pop
stos
cwtl
inc
inc
sbb
comiss
cmpsl
lea
cmp
push
and
rorb
sbb
divb
cmp
xor
cmpsl
ficoms
mov
imul
cld
xchg
mov
jge
faddp
data16
in
xor
cmp
pop
out
repz
loopne
daa
mov
jo
mov
insl
sbbb
dec
stc
cmpsl
push
ljmp
jne
add
cmpl
jnp
and
add
add
fdivrl
cltd
mov
mov
mov
inc
mov
xchg
add
add
xchg
sbb
daa
mov
dec
lret
inc
cmp
ljmp
xchg
sub
mov
inc
sub
call
mov
into
cmp
or
or
mov
cmp
mov
mov
xor
scas
dec
push
stos
stc
inc
jbe
pusha
or
push
and
xor
mov
out
push
pop
or
inc
dec
jns
jmp
in
or
xor
scas
jp
pop
ret
addr16
lret
mov
mov
add
inc
mov
scas
push
dec
aaa
mov
jne
or
mov
add
xchg
add
and
inc
inc
fs
push
cwtl
test
add
mov
or
fcompl
stos
jge
cwtl
and
aas
adc
jnp
lea
in
loope
pusha
mov
jg
xchg
fidivrs
ret
sub
data16
inc
pop
das
xor
push
in
pop
out
popf
in
xor
mov
xchg
mov
sbb
jo
imul
xchg
pop
lds
mov
add
mov
idivl
arpl
push
or
mov
mov
fcmove
or
add
int3
hlt
fidivs
pop
out
test
sti
test
lds
inc
rol
jns
es
and
incl
cmp
outsb
mov
jbe
lret
mov
jecxz
daa
fidivs
sbb
push
scas
enter
loope
int3
cmp
push
rorb
xor
subl
mov
sub
push
cmpsb
add
daa
enter
pop
push
push
cmp
sub
loope
jbe
sub
ss
cmp
lcall
push
imul
or
lret
orb
sbb
add
and
fildll
pop
push
inc
inc
js
mov
pop
inc
push
xor
jp
in
fcompl
cmc
sub
loop
imul
mov
int3
movsl
pop
shlb
mov
mov
std
clc
and
mov
push
ds
int
push
mov
jle
cld
idivl
out
loope
shll
rcrl
adc
mov
aad
subb
outsl
jle
scas
loop
lea
stc
mov
movsl
fcoml
test
pop
ss
mov
fcomps
out
cli
test
mov
loopne
or
fs
pop
cmp
xor
repnz
pop
mov
add
or
adc
inc
sbb
jl
gs
ffree
lods
dec
fisubs
aas
in
sub
rcrb
in
mov
imul
jns
incb
bound
shl
push
dec
testb
lret
mov
jl
bound
repz
imul
popf
je
lahf
and
lea
push
in
adc
lods
pushf
in
push
cs
rcl
mov
nop
mov
or
sub
or
je
bound
jecxz
sbb
push
int
lea
out
mov
in
push
mov
or
ljmp
pop
dec
div
inc
movsb
add
inc
roll
sub
push
mov
dec
mov
sub
stc
sar
adc
mov
xor
mull
push
xchg
dec
icebp
inc
out
cld
ret
lret
addl
ror
mov
into
mov
pop
push
jge
sarb
mov
sub
xchg
sbb
ret
in
push
es
lcall
hlt
rclb
ljmp
xchg
lods
outsl
insb
hlt
mov
sub
and
sahf
cltd
or
cli
es
add
icebp
jo
out
sbb
xor
dec
mov
or
clc
lea
movsl
xchg
mov
in
pop
lock
stos
flds
out
test
xchg
outsl
cmp
and
out
icebp
cmp
xor
sbb
and
mov
aas
pop
orl
in
ja
push
push
dec
dec
and
inc
or
push
in
push
roll
add
mov
jno
bound
jns
cmp
xchg
lods
fs
cmp
mov
jge
mov
jp
pop
adc
insl
jle
mov
inc
popf
dec
sbb
jne
push
xchg
mov
imul
cmp
xchg
loope
stos
add
or
xchg
ss
shrl
fistps
bound
dec
or
jnp
pop
adc
test
pusha
and
xchg
jmp
pop
popf
sub
mov
push
cld
lahf
push
ficompl
adc
mov
add
cmp
mov
cmp
dec
imul
xchg
push
mov
pop
imul
stos
sub
mov
fmull
mov
xchg
cmp
aaa
scas
lahf
xchg
or
sbb
adc
pop
int3
fbld
pop
push
data16
ficomps
ret
loopne
fldt
gs
cmp
movsb
jno
cmpsl
push
mov
das
add
pusha
sbb
sbb
daa
fstl
fidivs
cmpsl
push
jl
cmp
push
mov
mov
jo
push
popa
lahf
adc
add
cltd
mov
push
hlt
xor
jge
mov
in
pop
xor
enter
pop
lods
out
loope
or
movsl
pop
mov
ds
clc
pop
and
outsl
or
sub
sbbb
mov
mov
adc
xor
sbb
stos
int3
sbb
or
js
clc
roll
adc
lcall
inc
fadd
or
shrl
std
outsb
mov
sub
add
jno
mov
fnstsw
mov
jo
and
ds
push
inc
out
int
call
insb
idivl
test
inc
push
rcrl
mov
adc
add
inc
cld
and
mov
popf
stc
pop
pop
jns
je
sahf
adc
clc
pushf
ss
dec
mov
pop
and
cli
fsubl
xor
mov
andl
into
mov
cmc
and
xor
sub
imul
in
add
imul
ss
mov
mov
jle
dec
sub
fisttpl
pop
cltd
push
sti
outsl
gs
gs
loopne
je
dec
mov
mov
dec
les
inc
repz
mov
and
nop
rol
les
pop
sub
pop
pushf
nop
push
push
jmp
sub
xor
sub
les
nop
gs
aas
leave
xchg
mov
je
dec
ficomps
dec
je
ljmp
and
sti
xlat
aam
testl
inc
sbb
sbb
fldt
inc
loope
sub
inc
out
mov
das
cmc
aam
mov
cmpsl
in
pop
and
ja
roll
cmp
std
xor
mov
fcompl
mov
icebp
sbb
add
in
jbe
lret
repnz
mov
adc
lock
rcl
adc
sub
fld
ret
mov
push
es
jns
insl
push
adc
out
xchg
sub
out
int3
popa
jns
mov
dec
jb
dec
daa
nop
and
cmp
je
sub
sahf
cltd
sbb
test
jge
sbb
into
push
or
and
push
inc
jnp
enter
add
push
cmp
adc
fwait
data16
enter
call
stos
push
std
dec
cmp
nop
push
xor
or
loope
xor
or
mov
inc
dec
mov
test
idiv
ja
jns
dec
cmp
mov
or
dec
out
fwait
pop
fsubs
push
jns
mov
add
fsubs
int3
mov
xor
xor
outsb
stos
xchg
sti
popf
icebp
mov
mull
std
or
addr16
dec
jp
push
xchg
mov
or
mov
scas
sahf
inc
dec
std
subl
mov
out
fisttps
clc
xchg
cmpsb
je
jmp
lods
rcrl
adcl
out
jmp
sub
into
nop
dec
push
push
js
stos
arpl
mov
pop
imull
aad
pop
jnp
fs
jle
xchg
or
lds
pusha
shlb
push
dec
int
lea
aam
lock
jae
sub
in
sbb
lcall
idivl
cmp
test
out
xchg
jb
and
out
imul
push
call
mov
mov
test
jae
sbb
add
fwait
cmp
jo
or
mov
aaa
aaa
outsb
call
repz
rol
inc
insb
cli
fiadds
and
outsb
int3
imul
in
ret
and
test
add
sub
push
mov
jge
or
sbb
pop
xchg
faddl
nop
cmp
xor
jno
les
jl
imul
push
xchg
cmp
nop
jo
cltd
jne
xor
dec
push
jnp
sti
test
mov
and
or
icebp
in
inc
dec
ss
pop
into
ret
and
loope
shlb
int
cmp
data16
fisubrs
xchg
movsl
cmpsl
dec
mov
xorb
rcrb
ret
add
inc
push
xor
add
insl
push
fistpl
mov
lds
inc
lea
lcall
xchg
fdivl
popf
sub
dec
mov
xlat
inc
adc
ljmp
mov
or
mov
cmp
push
inc
std
int
popf
shrb
je
adc
cmp
inc
xchg
shr
aad
movsl
xor
jno
mov
test
aad
bound
outsl
cmp
outsb
loop
lods
mov
lcall
adc
push
out
mov
cmp
adc
divl
psubd
cmp
push
sub
out
inc
into
outsb
mov
mov
out
in
adc
pushf
popf
cmp
nop
and
loopne
adc
add
push
mov
dec
cli
adc
sub
pop
jae
mov
sti
push
adc
scas
gs
mov
push
dec
add
xor
out
loop
les
std
repz
mov
jle
xchg
sbb
adc
cmp
fdivp
rcll
pusha
lock
cmp
inc
jmp
cmp
cs
stc
aad
mov
jg
push
scas
in
dec
push
adc
je
test
and
jl
bound
mov
jb
fnstenv
push
popf
xchg
rcrb
fdivrl
inc
inc
mov
popl
jne
das
aam
jg
shll
pop
pop
mov
rcll
popa
cmp
ficompl
jmp
fs
in
cmpsl
fildl
mov
lock
sbb
sbb
push
lret
popa
fiaddl
xchg
lock
push
pop
inc
jecxz
shl
inc
inc
sub
xchg
aam
pusha
arpl
sbb
lret
sub
mov
ljmp
ljmp
les
das
and
sub
mov
mov
mov
cltd
pop
mov
inc
mov
jae
push
iret
ret
dec
fnsave
inc
clc
add
ljmp
fdiv
pop
inc
mov
mov
dec
sti
fistl
fdivrs
das
mov
mov
xor
sti
add
inc
lods
fs
pushf
in
mov
mov
push
ja
and
addb
xchg
or
or
fwait
mov
sbb
sbb
insb
add
lock
out
stos
test
dec
jns
mov
add
dec
sbb
mov
rep
in
cmp
sub
mov
inc
jbe
ret
dec
bound
loopne
add
mov
js
fildll
mov
dec
jmp
ja
xchg
lea
addr16
leave
dec
push
push
pop
aam
stos
sub
insb
inc
dec
pop
jnp
jbe
jle
xchg
stos
in
pop
jne
pop
cmp
aad
mov
sbb
inc
jle
dec
jae
adcl
popa
adc
mov
add
xchg
fidivl
xchg
leave
adc
imul
push
push
das
out
adc
es
repnz
and
leave
nop
outsb
test
arpl
inc
cmpsb
cs
push
adc
xor
scas
aaa
sub
mov
pop
int3
mov
out
pop
je
js
in
or
cmc
cmp
push
jle
scas
ret
shll
mov
jge
push
ds
push
jge
loop
sbb
lcall
push
push
push
jno
add
jl
insl
xchg
dec
sbb
cmp
xchg
das
add
push
fisttps
mov
xchg
push
mov
inc
in
aaa
cmpsb
mov
or
enter
pop
or
jp
loope
fwait
dec
sub
push
in
subb
movsl
scas
or
and
jnp
out
push
addb
sbb
gs
push
int3
xor
ja
xor
pop
mov
js
inc
xchg
pop
ret
mov
les
push
jg
popa
fcompl
mov
sub
pushf
cs
lds
xchg
mov
outsb
orl
jmp
jl
inc
test
int
fisubrl
out
test
lret
outsb
roll
cmpsl
sbb
shl
idiv
test
sbb
arpl
iret
mov
mov
jg
jb
daa
shrl
mov
out
lds
xor
aas
insb
or
jnp
push
sbb
cmc
mov
jb
dec
mov
mov
scas
pop
imul
pop
jns
iret
cmp
push
mov
jg
cld
xor
sub
add
in
cmc
rcl
int
xor
test
dec
dec
loopne
or
pop
outsb
popa
inc
sub
fldenv
jle
les
adc
xchg
inc
addl
mov
cmc
test
jne
xchg
pushf
out
enter
mov
aad
inc
movsl
nop
sbb
dec
aas
pop
addl
pop
dec
dec
int3
mov
je
idiv
jecxz
clc
and
daa
fnstcw
call
or
mov
inc
cld
orl
mov
movl
and
or
mov
lcall
imul
shl
inc
shl
sub
mov
pop
adc
jl
scas
out
icebp
jb
cld
inc
jg
lret
rorb
mov
divb
aas
inc
rcrb
sbb
shlb
jnp
aam
cmp
es
xchg
sbb
jge
dec
in
dec
xchg
sub
push
ljmp
mov
mov
fidivrl
xchg
mov
jnp
outsl
stos
push
pop
fildll
xchg
cld
test
xor
push
xchg
stc
jle
sahf
insb
test
outsl
scas
xchg
fistpl
sahf
mov
shrl
jecxz
stos
cmpsb
push
mov
xchg
inc
mov
mov
xor
repz
or
dec
push
mov
sub
push
and
xchg
mov
add
test
aad
ja
push
push
dec
and
roll
sub
fwait
mov
les
mov
movsl
testb
std
cmp
mov
cmp
sbb
mov
in
pop
mov
mov
int3
fs
scas
sbb
cmp
jp
icebp
mov
sbb
jmp
mov
nop
jne
dec
push
mov
sbb
out
dec
xchg
and
add
movsl
mov
sub
les
stos
dec
adc
insb
stos
mov
jnp
dec
cwtl
jle
xchg
in
popf
mov
negb
push
iret
push
shl
ret
imul
imul
mov
loopne
mov
mov
inc
adcb
cmp
and
pop
imul
dec
push
jbe
adc
mov
jbe
pop
fimuls
and
arpl
arpl
inc
test
pop
popf
push
in
add
test
int3
mov
les
xchg
mov
scas
mov
fisubl
jno
aaa
movsb
adc
test
ja
jbe
pop
sarb
int
jge
cmp
cmp
pop
jno
imul
push
pop
inc
xor
in
fnstcw
and
test
push
push
dec
pop
inc
je
movsl
cmpsb
adc
cmp
loop
ss
dec
inc
shrb
push
cwtl
loope
lcall
xor
ljmp
push
and
pop
je
sbb
pop
mov
xor
mov
ja
faddl
pop
inc
or
lcall
adc
movb
sahf
fimuls
loopne
sbb
mov
cwtl
call
mov
ret
push
js
push
dec
aaa
cmpsl
int
mov
sub
mov
lret
loope
sbb
dec
mov
sahf
nop
xor
test
mov
cli
sbb
fdivrp
jle
push
fs
push
ss
daa
cmp
mov
aad
jne
arpl
mov
push
or
imull
xor
inc
cmc
js
xchg
xor
cmp
imul
in
adc
mov
add
fwait
xchg
lods
jmp
add
inc
xchg
je
cmp
sub
lods
lods
mov
pusha
adc
sti
jl
mov
xlat
inc
dec
loopne
jb
dec
mov
out
fstps
test
repz
xchg
add
sbb
mov
movl
sbb
int3
pusha
jae
xchg
lods
dec
jmp
scas
jns
pop
jb
aad
dec
sub
cmpsb
jg
jb
ret
inc
repz
jnp
jecxz
and
sub
lea
setns
push
pop
push
cmp
dec
dec
xchg
arpl
fstpt
aad
pop
fxtract
adc
sarb
das
xchg
aaa
jle
out
jge
int3
sbb
and
sbbb
sub
xchg
cmpsl
fldcw
mov
icebp
sahf
jmp
aaa
lret
aas
jg
mov
hlt
mov
cmp
das
pop
sbbb
mov
push
aam
push
ret
cmp
stos
es
fsubrs
push
gs
loopne
mov
imul
popa
mov
xchg
mov
mov
cmp
sbb
jbe
popf
add
jmp
test
add
push
mov
mov
jns
push
xchg
pop
inc
roll
jmp
pop
pushf
loopne
stos
xchg
fisttpll
out
adc
xchg
mov
push
mov
ud0
lret
mov
jg
cld
fstps
adc
lret
push
fsubrs
sbb
cmp
inc
imul
push
push
mov
es
loopne
lods
xchg
jns
shll
call
in
mov
imul
pop
jp
dec
mov
hlt
sbb
mov
sti
inc
rorl
fwait
cli
jne
flds
rcl
scas
fildll
cs
pop
pop
test
pop
pop
fwait
xchg
or
cmpsb
sub
xchg
aad
sub
mov
sbb
stos
mov
cltd
ds
push
in
xchg
jnp
in
jle
jo
in
inc
xchg
pusha
xchg
push
mov
insl
xchg
adc
pop
pop
jns
sahf
inc
xchg
int3
inc
jae
sbb
popf
scas
jae
mov
add
xchg
ja
iret
sbb
mov
cli
scas
or
out
mov
psrld
mov
icebp
repz
outsb
popf
push
arpl
sub
add
push
stos
fimull
xor
add
arpl
mov
mov
push
stos
fisubrs
addr16
add
rorb
orl
mov
movsb
popf
or
fmull
out
jge
cmp
cmp
daa
fsts
cmp
jno
repnz
jl
bnd
testl
shll
cwtl
dec
lahf
xchg
pop
ja
hlt
pop
adc
and
pop
cmpsb
xchg
jne
in
clc
out
ror
fstp
aas
pop
mov
push
fstpl
leave
mov
and
loopne
sub
movsl
mov
adc
imul
sbb
pop
add
imul
pop
fstps
or
fsts
rcll
lcall
adc
jno
mov
outsb
inc
add
adc
jnp
adc
push
jns
push
iret
loopne
cld
cmpsl
iret
mov
xchg
push
dec
cmp
int
adc
and
jp
jae
xchg
sbb
mov
add
mov
xor
pop
xorb
sub
cmc
loopne
stc
xor
loopne
adc
push
ss
fmull
fadds
addr16
in
into
cli
test
xchg
xor
or
cs
or
jg
into
pop
shl
aas
add
xor
cli
sbb
adc
or
adc
imul
popa
xchg
data16
ljmp
cmp
xlat
jp
push
mov
lret
cmp
sub
fisubs
mov
sti
sbb
push
mov
fsts
fdivp
shr
xchg
push
repz
movb
pop
negl
mov
and
add
jmp
btsl
sbb
aad
mov
nop
rolb
jb
cltd
dec
mov
push
and
sub
jmp
adc
mov
mov
inc
cmpl
and
fldt
sti
pop
jl
call
inc
pop
ss
das
jno
sbb
jp
enter
hlt
and
aad
roll
push
cmp
cwtl
xchg
push
cmpsl
fcomp
les
jne
adc
lret
scas
ja
mov
xor
adc
inc
lock
mov
std
rcrb
mov
icebp
dec
add
add
or
es
jnp
insl
in
push
dec
fistl
xchg
stos
cli
or
mov
push
popa
aad
jb
xchg
fidivrs
inc
out
push
mov
aad
add
cltd
add
test
mov
or
fucomp
and
mov
addl
pop
sub
inc
mov
stos
test
cmpsl
out
je
dec
xchg
rcrb
imul
add
xor
movl
dec
sarl
or
fiaddl
dec
or
add
add
or
sub
call
add
inc
jno
out
dec
sbb
jns
push
shl
and
aaa
sub
mov
jo
mov
and
and
cmp
mov
ret
mov
rorb
scas
inc
mov
push
dec
mov
je
and
pop
mov
movsb
sbb
mov
xchg
repnz
jmp
fdivrs
cltd
orl
pop
sub
mov
add
and
std
cwtl
jnp
inc
pop
jle
dec
push
in
push
andl
pusha
and
fxch
push
pop
mov
popa
inc
lahf
cmpl
test
stc
or
and
ficoml
cmp
xchg
es
scas
insl
lods
pop
push
add
ret
adc
test
hlt
pop
mov
hlt
mov
cmp
inc
scas
and
push
push
or
push
lock
jbe
push
pop
add
loope
mov
mov
scas
pusha
ss
inc
incl
fistps
fcoml
call
push
jge
mov
daa
fmul
push
cmp
lahf
fdivrl
push
dec
data16
push
and
mov
lahf
mov
jle
repnz
jmp
mov
cmpsb
pop
ficomps
fists
dec
pop
lret
push
sbb
loope
add
sub
ljmp
push
sti
movsl
ret
mov
and
mov
roll
jbe
add
je
xor
sti
rcrl
pop
sub
pop
inc
fwait
cmp
fnstsw
push
test
fcompl
xchg
sub
outsb
cmpsb
movsb
mov
rclb
mov
mov
int
mov
push
mov
popf
cli
and
push
push
push
mov
int
pop
sbb
pusha
dec
jl
cmp
pop
lret
dec
rorl
mov
cmp
sub
out
pop
test
sbb
loop
pop
sub
in
adc
adc
push
ss
fadds
stos
stos
out
inc
mov
xor
loopne
cmp
jecxz
or
inc
cmc
push
and
sbb
xchg
das
adc
andb
ds
add
dec
fisubs
mov
lods
mov
jp
xlat
mov
push
add
in
ss
sub
gs
aas
loopne
jg
dec
jl
fs
arpl
or
movsb
fwait
mov
nop
aas
daa
xchg
mov
fistpl
add
aas
lret
stos
cmp
jp
mov
out
or
xlat
xor
pop
mov
push
nop
lods
jle
aas
in
sbb
movsl
dec
dec
xor
je
sbbb
cmp
xor
out
cmpsl
enter
add
pop
jno
adc
mov
push
pop
pop
sub
inc
into
in
outsl
inc
jne
sub
push
lea
dec
xlat
mov
outsb
jg
rcl
outsb
sbb
dec
ss
push
fldcw
xlat
sbb
icebp
dec
inc
shrl
sbb
out
stos
mov
dec
push
lock
fwait
aad
rcr
shlb
rcl
sub
sub
aam
ret
mov
fstps
int3
dec
clc
mov
jmp
pusha
popaw
in
adc
or
pop
js
sti
sub
inc
xchg
mov
xor
aad
mov
xor
outsl
clc
push
fistl
fstl
aam
clc
out
setg
mov
shrl
push
imulb
xlat
mov
xchg
sbb
icebp
push
inc
add
ljmp
mov
cli
xor
or
mov
push
mov
mov
cltd
cld
pop
dec
cld
mov
inc
xchg
and
fwait
inc
incb
test
fiadds
pop
leave
or
daa
dec
mov
jns
js
in
sahf
ficoml
cmp
mov
repnz
push
sarl
push
js
mov
int
mov
fldl2t
dec
insb
sbb
jne
sbb
xchg
or
add
cmpsb
xlat
sbbl
cmp
mov
dec
push
pop
insl
and
sarb
pop
jnp
gs
and
xchg
in
ljmp
das
sbb
in
data16
jns
stos
mov
jae
ret
insb
test
lcall
nop
popf
fiaddl
mov
and
sub
dec
outsl
and
dec
mov
mov
inc
jle
leave
insb
add
hlt
add
out
pop
mov
inc
mov
pusha
or
sbb
adc
sub
or
notb
add
repz
pop
pmaxub
iret
lds
fcoms
jp
scas
aas
add
xlat
fbld
cmp
shrl
jp
mov
jge
and
push
daa
xlat
leave
std
cmp
jno
jo
jl
lret
dec
aad
popa
push
add
dec
pshufw
ret
lahf
iret
jecxz
push
lcall
push
mov
imul
mov
pop
enter
pop
or
dec
push
adc
imull
sub
hlt
cmp
pop
sbb
movsl
lret
and
jecxz
adcb
pop
add
shl
xor
dec
cmp
cld
pop
daa
adcb
shll
test
lcall
fadd
test
outsb
or
int
mov
inc
pop
jg
loop
mov
lcall
ljmp
and
adc
or
test
idiv
lret
fmul
jne
test
mov
add
pop
fsubr
sahf
jns
cwtl
test
decl
outsl
xchg
mov
mov
mov
fucomp
adc
faddl
fdivrs
add
push
test
cmp
insb
rorl
adc
in
fnsave
repz
int
fidivl
mov
les
push
cmp
imul
jl
add
mov
imul
dec
jns
clc
aam
sub
mov
mov
out
xor
adcb
xchg
and
dec
fistl
lods
flds
push
cwtl
les
xlat
push
xchg
dec
insb
ja
xchg
out
lret
cmp
cmp
mov
or
adc
out
clc
pushf
xchg
jl
jmp
sbb
outsb
mov
nop
mov
jb
in
dec
test
popa
je
add
jecxz
xor
gs
in
fnstcw
test
push
and
pop
ret
inc
push
pushf
clc
inc
nop
jo
das
das
mov
fstpt
stc
jl
shll
scas
xor
lea
outsb
cwtl
or
cmpsl
fsts
mov
and
mov
out
jg
lret
mov
mov
ljmp
fildll
dec
rolb
mov
cmp
fwait
out
mov
es
xor
insl
mov
das
cmpsb
xchg
sub
push
popa
add
inc
lods
pop
pusha
push
mov
push
or
and
fcmovnu
jns
xchg
or
add
ja
test
pop
pop
push
sahf
pop
add
cmp
clc
sub
pop
xchg
add
sbb
inc
roll
adc
fildll
cmp
xchg
pusha
lea
push
pop
xchg
mov
dec
call
aas
or
popf
je
inc
mov
adc
mov
test
andl
out
sbb
or
adc
nopl
push
add
ja
out
push
jnp
bound
ss
inc
push
in
jno
xchg
aad
xor
out
xchg
pop
lcall
jp
xchg
popf
mov
je
mov
dec
lret
jge
dec
dec
pop
jne
shll
mov
jp
ffreep
ret
adcl
outsb
data16
aam
sub
mov
mov
cwtl
pop
stos
adc
jg
insb
push
lcall
inc
in
in
cltd
inc
pusha
bound
iret
mov
call
pop
push
es
inc
mov
into
jae
jl
push
das
dec
clc
popf
and
add
jle
repz
cld
and
lods
packssdw
cmp
scas
xor
adcl
icebp
adc
sbb
mov
lcall
hlt
dec
mov
adc
mov
popf
or
xchg
and
aaa
call
bound
xor
ljmp
movsl
or
adc
aaa
lds
sub
and
cwtl
cmp
jae
jnp,pt
push
leave
push
out
icebp
outsl
mov
daa
dec
push
cmp
gs
test
xor
fisubrs
call
pop
inc
jo
dec
add
out
scas
push
push
insl
mov
notb
lret
mov
imul
lods
xchg
cs
pop
dec
outsb
out
push
mov
loope
push
sub
jno
cmp
jb
ds
dec
movsl
roll
inc
pop
mov
or
xchg
add
test
fcmovnb
push
incl
add
mov
js
adc
lcall
jbe
jb
adc
pop
xor
outsb
insb
ret
mov
rorb
xchg
jg
scas
add
mov
xorl
adc
push
sti
or
xchg
inc
sub
shl
mov
push
adc
daa
je
sbb
jge
test
adc
outsl
jbe
jg
scas
jmp
cmp
adc
or
and
mov
out
xchg
xor
mov
cmp
leave
xor
subb
cmc
xchg
xchg
pop
xor
mov
xchg
adc
ficoms
gs
add
jecxz
pop
cltd
ja
xchg
jl
aaa
pop
mov
mov
or
xor
pop
loop
repz
loopne
fnstsw
cmp
mov
fnstcw
and
repz
xchg
adc
sbb
ja
iret
cmp
xchg
push
adc
adc
pushf
cmp
std
cs
sahf
aad
inc
cmc
nop
arpl
int
les
dec
pop
popa
inc
je
aam
jecxz
push
je
int3
rclb
mov
xchg
test
cmp
pop
scas
fcomi
cmp
inc
inc
fsubrl
das
push
repz
xor
mov
test
mov
jo
sub
std
les
mov
cwtl
cld
cmpsl
aad
xor
scas
aad
icebp
cli
sub
cld
sbb
movsl
lret
sti
clc
add
data16
aam
push
nop
ret
pop
jne
rcl
rcl
sub
shlb
ret
ja
andl
mov
cli
iret
xchg
addr16
inc
popa
sbb
lods
imull
mov
push
jecxz
mov
repnz
outsb
add
out
jge
popf
sbb
mov
add
push
popa
rolb
frstor
je
gs
xchg
pop
sbb
shlb
dec
sbb
stos
push
mov
add
cli
cmp
xor
pop
jae
sub
loopne
push
jbe
dec
push
mov
xchg
mov
or
inc
lds
or
out
mov
clc
in
pop
fsubl
out
in
in
clc
dec
stc
jns
scas
xchg
push
cwtl
lea
ror
mov
push
fcmove
addr16
roll
lds
add
imul
js
pop
mov
test
xchg
imul
jmp
cmp
cmpl
inc
out
mov
xor
stos
mov
data16
mov
and
push
insb
ret
jnp
hlt
loopne
push
jnp
not
cmc
pusha
std
mov
ja
adc
inc
pop
push
inc
addr16
rcrb
push
repnz
dec
in
mov
std
jne
fisubrl
test
xchg
scas
inc
imul
cltd
push
fnstenv
jp
icebp
inc
or
in
fs
leave
pop
cmpsl
aam
lcall
inc
mov
mov
adc
jl
cmpsl
push
cmpsl
or
dec
outsb
add
dec
pusha
int3
aaa
insl
sti
pop
mov
daa
fidivs
call
scas
std
into
push
and
cmp
cmp
andl
test
sbb
and
push
cmp
test
jge
jl
ljmp
lret
xchg
mov
jo
pop
fistps
inc
repnz
dec
dec
je
aas
sbb
cmpsb
mov
ljmp
xchg
add
sub
repnz
pushf
dec
cmp
shl
cmp
and
jl
and
jne
inc
jmp
inc
xor
mov
jp
add
mov
mov
lldt
and
fcompl
mov
outsb
iret
inc
push
shl
xchg
and
cmp
mov
add
fadds
jp
dec
fcmovnu
and
push
push
pop
into
das
int
addl
inc
das
divl
pop
lret
xchg
rcll
stos
mov
adc
mov
mov
test
fcomps
sbbb
sahf
outsl
push
or
cmp
bound
adc
arpl
add
xor
int
je
and
mov
cli
lods
or
inc
test
mov
filds
ror
pop
jne
das
adc
out
imul
mov
in
loope
je
outsb
mov
xlat
jbe
shrb
inc
push
imul
out
ss
jnp
inc
gs
hlt
xchg
loopne
test
and
pushf
jmp
fnstenv
xchg
lds
imul
mov
cmp
mov
iret
int3
adc
in
pushf
call
aaa
mov
dec
dec
mov
nop
ds
aas
shrl
dec
xchg
mov
inc
std
scas
jecxz
in
cmp
push
call
xchg
jns
xchg
hlt
mov
sub
add
or
adc
cli
sbb
in
sub
mov
pcmpeqb
mov
cwtl
or
imul
cwtl
adc
out
loope
xchg
icebp
rcll
cld
inc
js
lret
push
mov
cs
test
pop
sbb
pop
out
int
js
xor
ret
push
xchg
insl
mov
xor
pop
loope
cmpsb
aas
jae
jle
jbe
xor
lods
xor
mov
fs
inc
and
adc
das
sqrtps
fistpl
test
in
mov
xor
and
mov
aad
mov
sub
sbb
lcall
repz
out
add
adc
push
aad
ud0
and
xchg
in
xor
les
pusha
testb
pop
add
insl
jno
test
push
inc
ja
inc
mov
inc
pop
adc
or
dec
aas
fwait
rcll
mov
add
lods
dec
jl
ljmp
in
mov
and
add
jl
xor
mov
clc
jp
mov
pop
mov
es
fs
adc
imul
cwtl
mov
sub
ds
sbb
xchg
add
faddl
and
les
cmpsb
andb
sti
push
jnp
pop
js
insb
sub
aad
lea
in
outsl
ja
cwtl
negl
ret
cmp
mov
jae
mov
cs
jb
sbb
jl
ficompl
adc
test
sbb
scas
stc
movb
xor
lods
xchg
nop
aam
repnz
es
shr
dec
hlt
in
or
sbb
inc
mov
in
push
mov
repnz
bound
int3
and
pop
mov
stc
xor
cmpsb
sub
rcl
xor
and
lods
mov
push
addr16
jge
xor
mov
sbb
sub
daa
aam
mov
jnp
cmp
mov
mov
jo
scas
and
xor
add
sub
ret
push
adc
test
pop
dec
push
inc
into
ret
and
and
jnp
sbb
loopne
pop
sbb
push
and
loope
mov
sub
dec
cmp
insl
ds
movsl
fisttps
in
pop
cwtl
adc
lret
sbb
mov
xor
inc
test
dec
pop
pushf
inc
push
js
je
pop
cmp
lds
loopne
fmul
sbb
outsb
xor
pop
rol
pop
mov
fcoms
mov
into
arpl
cwtl
inc
pop
and
scas
push
pop
adc
sbb
dec
ret
xor
movl
sbb
adc
push
test
cmp
outsl
xor
and
aam
sub
enter
push
dec
push
adc
inc
ss
in
in
out
xlat
add
cmpsl
adc
xor
add
or
xchg
into
xchg
wrmsr
testl
imul
xor
push
fs
push
lods
push
mov
xlat
mov
int
mov
loop
jp
xchg
and
add
gs
dec
clc
and
mov
call
repz
ss
xchg
xchg
pop
addr16
in
pop
cs
cmp
adc
ret
xchg
mov
mov
aad
popf
test
pusha
mov
dec
or
jns
jecxz
movsb
cmp
lea
and
inc
cmp
sub
push
xor
push
mov
pop
stos
or
inc
loope
iret
das
int3
push
mov
lcall
notb
inc
std
adc
cwtl
cmp
mov
mov
test
push
cld
jo
sub
fxch
pop
mov
sbb
pop
cmp
jbe
jl
lock
or
aam
sbb
xchg
iret
inc
es
mov
dec
ret
xchg
in
addr16
iret
lods
popf
mov
sti
mov
arpl
xor
mov
out
aam
dec
cltd
adc
rorb
pusha
stos
pop
push
out
xchg
test
xchg
push
sbb
addl
sahf
xor
stos
das
aas
inc
out
arpl
sub
ret
notrack
fstl
pop
or
or
xor
push
test
pop
add
dec
aam
lahf
test
xchg
xchg
ja
adc
dec
enter
repz
in
or
cmpsl
ljmp
dec
pop
add
enter
mov
loope
jns
jae
in
loope
xchg
ret
mov
cli
stos
mov
lret
xor
jp
xor
decb
test
aaa
cwtl
dec
clc
mov
push
dec
or
and
inc
xchg
adc
and
inc
out
out
sub
mov
inc
pop
stos
outsb
sub
and
stos
and
movsl
jnp
xchg
push
in
jno
pusha
xor
iret
cmpsl
nop
mov
pop
ret
jne
inc
negb
xor
xchg
push
js
cmp
cltd
hlt
lods
mov
sti
push
fcmove
jp
xchg
addl
pop
scas
pop
das
mov
addr16
adc
imul
dec
fisubrl
xor
pop
inc
mov
es
or
or
and
jno
add
cwtl
pop
int3
or
pop
jb
cld
pop
and
sub
mov
scas
mov
push
cmp
inc
movsb
fildll
push
mov
dec
jbe
adc
out
pop
sbb
in
cmp
sbb
push
pop
lods
dec
xchg
popf
dec
push
xchg
stos
divl
push
and
out
xor
loop
pusha
inc
pop
lods
arpl
bound
enter
pop
add
out
loope
test
cmp
dec
sbb
movsb
and
out
fisttps
sbb
cmpsb
sbb
xchg
xor
dec
mov
cld
pop
ret
div
js
addb
push
cmp
aaa
or
sub
sti
add
pop
mov
popf
xor
jg
sub
mov
push
sbb
and
adc
pop
rorb
pop
adc
shll
lret
popa
sarl
and
mov
sahf
add
inc
or
outsl
adc
cmp
jg
sbb
cmc
adc
jge
ss
sbb
fsubrs
lds
xor
mov
or
mov
shl
jmp
xor
adc
inc
sub
mov
adc
sbb
add
flds
cmp
cltd
mov
pop
sub
hlt
mov
sub
mov
cmp
dec
test
inc
push
ret
gs
das
loopne
jg
dec
push
add
ret
addr16
repz
xchg
pop
xchg
mov
sub
lea
mov
arpl
pushf
rcll
andb
push
pop
sub
mov
nop
hlt
mov
aas
call
int3
jb
jmp
into
je
dec
adc
fisubrl
xchg
lea
mov
in
add
orl
popa
pop
dec
add
and
adc
pop
dec
in
inc
jno
jge
cld
aam
das
stos
test
inc
mov
and
pop
negb
mov
inc
cmpsl
sar
sarb
sbb
lret
dec
pop
fwait
mov
dec
inc
lock
adc
int3
rorb
and
mov
loope
ret
and
cmp
insl
push
add
dec
mov
jp
ljmp
sub
mov
stos
mov
and
inc
inc
pop
iret
add
inc
fwait
cltd
dec
xor
test
arpl
stos
testl
xchg
data16
sbb
mov
shll
xor
jge
push
sub
out
movb
push
mov
xor
or
cmp
mov
pusha
jns
dec
cmp
push
test
jno
ja
arpl
dec
mov
adc
pop
aad
fwait
das
dec
addr16
xlat
loopne
add
jecxz
sub
push
bound
int3
and
xchg
adc
mov
loop,pt
addl
xchg
push
xor
jp
jp
mov
mov
aad
mov
mov
mov
jne
xchg
jne
dec
sbb
inc
adc
xchg
in
sub
lcall
out
sub
or
xchg
stos
loope
and
loop
add
jne
popf
mov
in
mov
iret
push
jae
ret
cmp
cli
xorb
loope
dec
jae
or
push
cmp
popf
rcl
mov
jp
mov
xchg
fsubs
dec
imul
sbb
scas
add
bound
mov
out
sbb
mov
xchg
add
inc
roll
mov
imul
sbb
or
adc
add
fldcw
sbb
sbb
lods
dec
lds
mov
lcall
cmp
or
movsb
push
mov
jbe
jno
jge
sbbb
push
clc
push
daa
shlb
cmp
sbb
jl
xlat
loopne
add
cmpsb
push
je
and
jo
cld
in
lahf
push
in
push
mov
inc
je
lods
add
fldt
sub
gs
dec
inc
dec
mov
fistl
loope
mov
adc
test
jl
movsl
in
es
lods
cmpsl
xor
rcrl
call
xchg
pop
xor
cltd
pushf
or
ret
js
and
pop
cmp
cs
mov
push
fcompl
lods
cwtl
sub
loopne
clc
jo
adc
js
mov
add
sub
cs
outsb
push
call
int
scas
and
divl
das
push
rcl
dec
mov
fcmovne
sbb
fcompl
mov
popl
repnz
cmp
cli
ja
stc
ss
fs
xchg
adc
or
cmp
arpl
pop
out
aaa
mov
xor
cltd
cmp
xchg
into
dec
addl
jl
fcompl
add
adc
mov
fs
push
add
dec
fsubl
xlat
jb
and
lahf
mov
adc
xlat
xor
xor
mov
mov
or
jl
femms
sbb
dec
mov
out
inc
aad
adc
adc
mov
add
sbb
test
push
xchg
imul
cmp
cltd
adc
jl
jno
fisubrs
jno
roll
push
aas
sahf
hlt
ja
adc
arpl
xchg
jecxz
lock
lcall
popf
mov
rol
and
out
lcall
icebp
mov
inc
clc
in
inc
pop
pusha
imul
out
xchg
test
mov
mov
lods
in
shl
or
ss
mov
sub
mov
push
mov
cld
mov
lret
mov
xor
jb
js
jp
stos
shlb
inc
scas
sub
mov
ret
mov
lea
jmp
es
cmp
out
bound
xlat
mov
lods
jae
xchg
mov
int
xchg
loop
mov
outsb
fistpll
cltd
cmpl
test
aam
mov
pop
mov
scas
add
push
in
jne
jns
pop
sbb
mov
mov
xchg
push
stos
or
pop
gs
ret
pop
pop
push
popfw
in
gs
loopne
add
pop
pusha
xor
je
mov
arpl
dec
mov
ficomps
dec
scas
cltd
repnz
and
or
xlat
cld
fwait
pop
or
jp
or
add
jge
out
popa
mov
bound
jns
leave
shl
xor
xchg
pusha
pushf
repnz
testb
int3
repz
inc
fstpl
jp
jbe
mov
sub
mov
jae
sub
jne
aas
mov
jno
fbld
fwait
xchg
mov
xchg
jmp
adc
ja
push
out
loope
sub
xchg
inc
xchg
push
ror
test
pop
jp
insb
outsb
mov
sub
or
imul
ret
cmpsl
pop
xor
inc
in
movsb
jae
sbb
popf
out
or
stc
outsl
jg
xor
push
sbb
mov
jmp
fsubrl
adc
movsb
repnz
outsl
hlt
arpl
pop
inc
les
repnz
mov
addr16
daa
jb
int3
jecxz
push
dec
cmp
inc
hlt
loop
cmp
fld
and
sub
and
movsb
cmp
xor
movsb
cmc
lods
push
push
push
pusha
jbe
inc
cmp
inc
xor
adc
daa
rorl
mov
jl
and
dec
outsl
inc
push
push
xchg
ds
and
lahf
mov
leave
push
mov
xchg
test
js
scas
inc
jnp
aas
cmpsb
lods
imul
enter
pop
addl
push
mov
loope
out
sub
inc
cld
cmp
out
ds
inc
daa
movsl
hlt
enter
arpl
addb
mov
add
ljmp
into
adc
adc
cmp
pop
push
mov
push
mov
fmul
mov
sub
mov
ljmp
in
mov
jno
mov
or
xchg
jnp
push
mov
xor
mov
xchg
movsl
lret
mov
insb
popl
mov
xor
sahf
dec
or
test
or
push
lea
stc
in
les
clc
mov
adc
mov
rcr
push
in
out
sub
pop
xor
leave
adc
pop
or
outsl
mov
ja
add
pop
icebp
mov
xchg
imul
loop
add
dec
adc
mov
or
jb
subb
cmp
mov
and
out
mov
push
gs
mov
movsb
std
dec
adc
arpl
icebp
fs
repz
in
fbld
jnp
mov
sahf
scas
or
pop
pop
hlt
adc
pushf
xchg
jbe
jmp
lahf
or
aam
into
aad
or
or
cmp
movsb
xchg
dec
jb
cmp
clc
jl
movb
iret
int3
dec
call
cmpb
cmc
jmp
repnz
fisttpll
ret
mov
and
in
mov
xor
mov
imul
xchg
mov
cmp
sar
les
pop
sbb
in
insl
xchg
and
lods
pop
mov
cld
icebp
pop
mov
es
fisttps
dec
sarl
pop
cltd
xor
cmc
pop
shrl
sub
aam
sarl
inc
inc
and
outsb
aas
lea
into
out
dec
mov
repnz
mov
ret
cmc
cmp
pop
cmp
js
push
jge
js
int
test
or
in
test
aam
mov
mov
scas
frstor
aaa
clc
mov
xchg
mov
sbb
push
pop
lahf
push
add
mov
push
inc
test
incl
inc
xor
ret
or
shlb
add
mov
mov
or
push
test
fbstp
dec
mov
mov
ret
fwait
lea
incl
sbb
out
inc
cli
movsb
xlat
ret
idivl
imul
scas
add
and
cld
shufps
adc
and
xchg
mov
loop
jo
mov
dec
popf
mov
filds
push
ja
mov
in
push
test
add
xchg
pop
pop
push
adc
and
out
and
aam
fsts
jnp
sarb
sbb
inc
pusha
add
push
iret
les
ret
cltd
pop
push
stc
js
mov
mov
mov
inc
js
mov
call
push
push
sbb
and
scas
test
mov
ja
adc
dec
js
or
and
mov
jmp
hlt
adc
dec
inc
movl
push
bound
aaa
add
fwait
jne
jns
sub
in
adc
ret
sarb
mov
pop
sbb
push
cmp
dec
int3
push
mov
nop
lods
jge
jecxz
sbb
adc
daa
shlb
cmp
dec
jno
push
dec
jl
inc
js
fiadds
push
cmp
jae
lods
xor
test
sbb
add
and
dec
push
inc
test
inc
or
ds
pop
out
pop
enter
pop
ret
push
push
popf
sub
out
cmp
wrmsr
ds
movsl
sti
into
pop
and
into
stos
cld
jle
adcb
inc
sbb
mov
xchg
push
mov
xchg
or
cmp
js
and
lcall
sub
je
mov
outsb
mov
mov
shrb
xor
push
mov
adc
sub
push
les
lahf
and
es
xchg
fisubrs
cmp
divl
sub
lret
cmp
add
mov
sbb
sahf
out
add
test
dec
fiaddl
mov
dec
loop
ja
stc
movsb
mov
subl
adc
push
sbb
mov
popa
cmp
fldenv
out
cmpsl
iret
cli
jae
insb
xor
sahf
jl
mov
jno
sbb
xchg
cmp
pop
adc
adc
imul
les
data16
pop
lods
icebp
insb
or
mov
jo
addl
in
mov
cltd
sti
push
or
sub
gs
aam
dec
je
push
inc
sti
add
jno
cld
arpl
repz
xchg
mov
jecxz
cmp
sahf
cli
aaa
scas
daa
pop
inc
xchg
adc
aam
pushf
aas
push
or
dec
jecxz
cs
cs
cli
jp
test
outsl
jb
dec
push
je
mov
jecxz
dec
jmp
lea
stos
ret
push
mov
aaa
mov
mov
stc
orl
push
pop
pop
aaa
sub
push
pop
aam
dec
mov
das
dec
test
mov
repnz
and
fwait
jle
dec
loope
mulb
sar
dec
xchg
cwtl
sub
mov
icebp
add
sar
jecxz
lret
xchg
cmpsl
mov
and
pop
lock
pop
mov
mov
sub
dec
jg
rcrl
mov
dec
scas
loopne
xchg
loope
mov
popa
movsb
out
shrb
outsl
stos
mov
jg
push
mov
sub
js
and
icebp
xor
test
sub
and
inc
fisttpll
mov
xchg
sti
sbb
mov
pop
dec
dec
cmp
out
fistl
push
sbb
sub
mov
mov
or
xor
loop
mov
imul
adc
dec
xchg
test
inc
dec
push
fs
push
sahf
fwait
mov
pop
das
add
xor
fsubrp
pop
dec
xchg
bound
push
jns
scas
and
arpl
xchg
mov
mov
ret
mov
mov
cwtl
addr16
jbe
jp
mov
pop
xlat
mov
push
aad
dec
test
jg
and
cmp
lahf
jp
xchg
pop
in
pop
jmp
sti
aam
adcl
cmpsb
sub
lea
lock
push
pop
pusha
stos
cmp
out
inc
aad
jnp
add
in
pop
pop
pusha
lahf
aam
iret
and
imul
xchg
lahf
sbbb
jo
jo
test
popf
xor
lea
testl
sbb
sbb
push
call
xchg
mov
repz
nop
mov
aaa
leave
and
hlt
pop
js
arpl
outsb
cmp
hlt
pop
mov
or
fcmovnb
int3
mov
push
push
lds
rcrb
scas
aaa
insb
add
cmp
stos
movsb
or
push
repnz
subb
xchg
daa
iret
inc
fdivrl
jp
mov
push
popa
jl
aaa
cmp
dec
push
push
sbb
mov
and
push
xor
test
push
and
pop
cmpsb
mov
cmp
fwait
lods
enter
pop
add
sbb
loope
fadds
cmp
stos
adc
and
aas
pop
out
jb
sub
in
sbb
xchg
mov
push
jne
pop
pop
stos
fdivrs
cmpl
mov
jp
sub
push
xchg
xchg
sub
mov
push
rorb
pop
cmpb
ljmp
sarb
xor
mov
mov
int
fists
lock
jae
or
mov
mov
adc
xchg
icebp
int3
test
addb
mov
loop
les
pop
dec
aas
fs
repnz
adc
and
ss
cmpsl
cmp
xchg
jno
out
movsl
mov
cmpsb
mov
dec
cmp
test
or
and
cmc
add
call
cmp
imul
pusha
adc
lods
fcoms
dec
mov
lods
cwtl
xlat
lock
repz
test
mov
stc
inc
mov
add
leave
gs
movsb
loopne
sbb
inc
push
fdivrs
fnstcw
mov
repz
and
cmp
adc
faddp
mov
push
pop
cmc
stc
in
adc
imul
cs
nop
pusha
lret
movsl
aas
jnp
fwait
jb
das
jle
pusha
or
add
xchg
jecxz
popa
mov
dec
shll
mov
arpl
stos
outsl
jnp
and
mov
fstpt
scas
mov
rcrb
inc
push
aad
mov
test
cmp
rcrl
xchg
mov
cwtl
jecxz
in
cmpsl
into
popa
xchg
fisttpl
inc
inc
jmp
mov
jbe
mov
call
and
rcrb
lret
repz
ret
pusha
shlb
je
xchg
insl
repnz
xor
mov
xchg
and
and
xor
int
mov
dec
push
mov
ss
leave
and
mov
or
mov
and
xor
sub
out
pushf
push
mov
sbb
jb
idiv
add
jl
testb
add
add
mov
arpl
out
push
or
xchg
cwtl
out
push
idiv
loope
inc
sahf
loope
pop
nop
xor
sbb
xchg
dec
xlat
jns
test
sahf
ja
push
lret
xchg
rorl
cmp
jmp
lret
ret
lret
add
dec
data16
out
cltd
sbb
pop
insb
jns
xchg
popa
in
aad
xchg
dec
movsb
inc
mov
xlat
mov
pop
jb
les
sarb
lahf
ljmp
sub
shl
dec
addr16
jne
xchg
push
mov
cmc
push
xchg
xor
jge
mov
clc
xchg
xor
andl
out
shlb
dec
fwait
inc
or
outsl
sub
mov
sub
data16
pop
pmulhw
push
fisubl
mov
xchg
ret
rcrb
pop
popa
inc
or
fistl
inc
mov
popf
pop
xor
xor
inc
jbe
inc
fimull
push
xchg
xor
push
imul
push
push
lret
adc
test
div
xor
pusha
leave
fwait
movd
cmpsl
ret
sahf
movb
mov
push
les
push
data16
or
xlat
vmovntps
data16
scas
push
mov
jl
add
xchg
push
inc
or
jge
aad
sbb
dec
daa
into
loop
cmp
sbb
jl
cmp
sbbl
jo
out
jbe
out
leave
push
add
cmp
sub
frstor
in
scas
enter
pop
inc
mov
push
inc
stos
loope
xchg
sub
lods
cmp
icebp
ds
or
icebp
and
loop
mov
rol
sbb
pusha
arpl
in
xor
mov
pop
push
or
rcr
js
jne
pop
ss
push
lcall
or
lret
sub
cltd
xchg
outsb
test
adc
in
jg
xchg
fwait
adc
sbb
mov
xchg
ja
ret
push
outsb
inc
arpl
or
push
imull
outsl
ret
shll
rorb
xor
icebp
test
popf
ret
xchg
push
outsl
outsb
add
loop
inc
inc
stc
adc
fists
jne
dec
cmp
cmp
dec
push
loop
lods
daa
mov
fldcw
xor
cmpl
fcomp
into
fsubr
out
int3
call
push
pop
dec
fwait
rclb
sbb
inc
adc
test
insb
lock
data16
test
add
sub
sub
mulb
mov
adc
jo
mov
push
xchg
pop
jb
dec
xor
mov
icebp
stos
out
les
pop
mov
cmpsb
and
sbb
dec
cmp
xor
and
adc
xor
pushf
xchg
mov
sbb
std
push
stc
aad
add
nop
cmp
shlb
inc
push
dec
xlat
cld
mov
jecxz
mov
aaa
lea
adc
sub
out
mov
cmp
xorl
iret
and
jo
inc
adc
dec
inc
adcl
sub
mov
pusha
addl
imul
add
cwtl
sahf
mov
cmpsl
int
je
inc
pop
scas
icebp
mov
sub
jb
pop
lret
jae
rorb
sahf
or
pop
imulb
shrb
or
mov
aam
xor
out
push
int
mul
nop
insl
fldcw
outsl
xchg
pop
adc
ljmp
push
lods
pop
sbb
cmp
xor
repz
ljmp
cltd
pop
roll
cmc
int3
mov
cmp
push
push
jns
pop
fstpl
data16
mov
and
adc
push
add
mov
xchg
fistpll
xchg
jmp
xor
push
mov
inc
xor
mov
mov
dec
ds
icebp
test
pop
xchg
scas
gs
jp
dec
inc
jge
mov
cmc
es
fwait
sbb
add
add
mov
fucomp
daa
bound
and
xchg
pushf
fstps
fstps
mov
sub
jp
jp
push
mov
adc
mov
mov
jb
mov
mov
rorb
add
jmp
xchg
call
push
out
inc
loopne
xor
pusha
or
add
and
xchg
mov
pop
pop
jnp
shlb
xorb
pusha
aad
sbb
loope
pop
ret
jp
or
icebp
mov
push
or
popf
addl
inc
cmc
test
dec
xchg
mov
xor
imul
sbb
add
jne
mov
test
xchg
leave
adc
hlt
repnz
dec
arpl
es
or
ljmp
or
aam
int3
je
pop
push
test
or
rclb
jp
xchg
rcll
xor
and
xor
rcrl
jge
and
int
mov
loopne
fnstenv
push
push
jl
pushf
and
sub
jo
jecxz
fwait
xor
mov
push
fsub
pop
test
movsb
bound
mov
cmp
in
int3
mov
cs
jg
out
fnstsw
movsl
loope
pop
ret
into
jne
adc
push
ds
jmp
pushf
mov
orb
sbb
dec
lock
mov
and
pop
fisubrl
dec
js
sti
hlt
pop
mov
inc
lcall
sbb
sub
cmp
out
and
mov
mov
mov
inc
sbb
rorl
test
jno
sub
jno
in
test
adc
repz
ror
adc
sbb
push
lret
test
or
dec
pop
pop
loop
sti
mov
leave
addr16
and
mov
les
add
or
out
sub
aas
xor
cmp
push
sub
addr16
insb
into
mov
push
lods
xor
dec
pop
insl
dec
add
in
jge
imul
ret
fbld
xchg
int
cmpsb
or
mov
dec
push
xlat
outsb
js
fisubl
cmp
sti
pop
inc
xchg
decb
xor
loopne
ficoms
xchg
xchg
jae
xor
fldcw
aas
or
sbb
popa
les
pop
test
mov
dec
mov
sbb
adc
fwait
les
inc
shrb
jno
aad
sbb
aas
mov
mov
dec
dec
xchg
pushl
mov
xor
cltd
push
std
jo
imul
mov
jg
mov
or
test
data16
add
fwait
xrelease
inc
mov
mov
pop
mov
shll
into
lret
imulb
loop
std
mov
xchg
sub
int3
stos
jae
jns
adc
cld
popf
jns
lret
loop
aad
aam
pushl
cmp
imul
inc
ficomps
sub
cmpsb
cmp
es
int
rclb
dec
lahf
and
sahf
mov
push
loopne
popa
jmp
mov
mov
jl
scas
and
jmp
push
mov
cltd
xchg
std
pop
test
sbb
add
jle
ffree
cmp
js
lea
push
sbb
pop
dec
adc
stos
mov
inc
xchg
lods
fwait
call
xor
cwtl
xor
jle
mov
jb
or
test
lods
hlt
ja
adc
cmp
outsl
cmpsb
or
dec
test
test
inc
adc
test
stos
bound
lret
movsl
push
addr16
mov
xchg
jmp
or
insl
les
addr16
add
es
dec
int3
rorl
sub
jno
mov
pop
rcr
add
xchg
rcll
mov
lock
inc
out
out
inc
shrl
jle
xlat
push
push
sbb
stos
xchg
mov
lds
mov
mov
mov
add
in
push
mov
ret
imul
xchg
daa
jae
pop
rclb
xchg
jnp
stos
mov
inc
inc
je
imul
cs
xchg
loop
stos
sbb
add
xchg
cmp
scas
adc
loope
test
mov
fadds
xlat
hlt
cmp
pushf
testl
fstps
gs
cmp
or
pop
aas
int3
jp
add
out
rcr
jno
jle
fiadds
scas
aam
daa
and
out
cltd
cmp
ret
adc
dec
cmp
pop
sbb
mov
cmp
xchg
inc
jno
mov
jl
or
dec
lcall
xor
out
sbb
stos
call
mov
outsl
call
cmpsb
cmp
in
mov
js
pushf
clc
rcll
mov
out
lock
push
sub
ret
mov
ds
insl
lret
movsl
pop
iret
push
aaa
inc
cwtl
js
mov
xor
jge
xchg
popf
jo
pop
aam
mov
push
and
xor
inc
lcall
fsubl
inc
mov
outsb
dec
ficoml
lcall
mov
xchg
xchg
mov
inc
enter
leave
and
push
mov
je
dec
int
adc
and
aad
sub
inc
push
pop
xchg
adc
push
iret
add
popa
pop
cld
sahf
jp
mov
adc
outsl
sub
push
loop
in
stc
sub
fs
inc
adc
sub
ss
push
mov
lds
cmpsl
out
mov
cli
aas
sub
pop
cmp
stc
bound
or
into
sahf
push
es
pop
sub
sahf
add
mov
in
adc
adc
sahf
popf
cmc
adc
xchg
add
mov
fbld
dec
ja
lea
sti
jns
xlat
lods
pop
pop
sub
sbb
cmp
mov
gs
cld
loopne
pop
enter
jmp
inc
mov
fstps
add
sub
adcl
sub
cmp
and
xor
aaa
pop
push
adc
mov
jmp
fwait
sbb
ret
jg
aad
xchg
ss
icebp
dec
in
pop
hlt
and
add
mov
jecxz
xor
adc
and
or
subl
int
dec
jo
sti
fcmovne
pop
jns
ret
xchg
and
push
inc
mov
mov
into
xor
and
or
xchg
inc
imulb
out
dec
test
cwtl
adc
scas
cmpsl
lret
push
je
lods
outsl
push
icebp
pusha
sub
mov
mov
jp
lock
pop
es
xor
movsl
rclb
lods
sub
aam
insl
call
es
xchg
jbe
cmpsl
pop
addr16
lcall
ljmp
and
cmc
insl
adc
lahf
int
and
test
mov
insb
sub
int
testl
jg
fucom
cltd
jl
mov
test
sbb
insl
mov
pop
mulb
inc
out
jnp
bound
mov
cwtl
lcall
sbb
or
mov
xor
mov
mov
jne
jo
or
subl
pusha
int
inc
stos
jl
or
inc
fwait
js
add
add
mov
cmpsl
xchg
bound
sub
and
xor
mov
mov
mov
jp
sbb
sbb
jae
scas
mov
sub
mov
sub
lahf
xchg
test
lea
xchg
daa
dec
adc
out
mov
sub
jns
xchg
push
dec
mov
xchg
and
dec
mov
jnp
mov
jle
inc
insl
in
mov
or
jae
shlb
pop
jnp
mov
jae
add
popf
rcl
jl
loop
or
fisubl
ja
cmp
cmp
dec
xor
outsb
pop
scas
je
xchg
push
lahf
sti
mov
mov
sub
fxch
add
hlt
mov
or
scas
cwtl
or
loopne
iret
aaa
sbb
sub
mov
sbb
gs
pop
fs
pushf
ficoms
js
xor
rol
inc
scas
mov
mov
mov
mov
movsb
aaa
push
xchg
push
cs
jbe
lret
push
insl
imul
lret
jno
xor
dec
or
mov
nop
aam
jo
xor
adc
and
test
cmp
fiadds
xchg
pusha
cmpsb
mov
aaa
and
xchg
push
gs
std
mov
push
push
mov
sub
lea
jb
les
xor
movsl
push
leave
mov
rclb
xlat
shr
xorb
sbb
jl
xchg
shlb
rolb
pusha
lods
xchg
pop
sti
lahf
push
js
les
pop
mov
xor
out
inc
ret
fmul
aas
push
sub
xchg
fs
jne
pop
jg
jbe
mov
xor
mov
pop
mov
test
and
jno
push
ja
sti
int
in
movsb
sub
call
inc
shl
aas
mov
jp
nop
sbb
sbb
test
sub
sbb
stc
aaa
adc
cmp
bound
es
push
cmp
cmpb
lds
cli
jb
mov
and
adc
jb
or
or
cmp
ja
stc
fisttpll
adc
out
adc
sbb
add
aaa
xchg
jne
lods
je
sahf
mov
cmp
sub
mov
in
movsl
dec
mov
mov
cmpb
lahf
outsl
loopne
repz
dec
dec
xchg
jg
pop
xor
fsts
dec
mov
xchg
jno
pop
sbb
add
int
mov
inc
pop
rcl
adc
sarl
pushf
xchg
inc
adc
cli
mov
cs
ret
nop
int3
dec
icebp
aas
imull
jb
mov
dec
cmp
push
je
pushf
mov
push
stc
dec
lea
pop
xchg
call
cld
cwtl
testl
pop
movsl
addr16
sbb
add
inc
test
pop
insb
das
mov
pop
pop
mov
jge
clc
rcl
push
divb
or
pop
cmpsl
lret
mov
aaa
rorb
repz
mov
cmpsl
lock
out
pop
push
into
adc
push
loopne
jae
nop
aam
mov
sbbb
dec
xchg
fisttpl
ljmp
in
pusha
and
mov
ret
and
pop
in
sysret
adc
pop
cltd
add
clc
test
mov
repnz
ret
fisttpll
fisttps
xchg
repnz
pop
xchg
rcrl
gs
stos
xchg
jmp
out
ficoms
xchg
mov
pop
push
arpl
adc
dec
pop
xchg
cmp
cltd
xor
xor
into
xchg
jbe
jae
pop
test
or
ja
jno
dec
push
mov
push
or
adc
fwait
cmpsl
sarl
out
in
add
mov
or
bound
and
adc
or
mov
shll
mov
cmpsl
sub
jp
add
mov
jp
mov
jl
lcall
fldt
fistpll
jne
xchg
jl
mov
xchg
repnz
les
inc
xchg
push
sub
je
or
fadds
and
rol
pop
xlat
pop
jnp
sub
in
push
call
iret
adc
fcompl
cld
aad
cmp
stos
jae
ljmp
clc
shrl
mov
jb
sbb
mov
xchg
nop
mov
scas
imul
scas
xlat
mov
stc
adc
push
pop
mov
jle
dec
leave
ja
out
hlt
shll
leave
arpl
in
inc
fldenv
scas
or
pop
push
aaa
fdivl
jno
jo
icebp
add
cmp
push
roll
mov
sub
in
inc
mov
loope
xchg
scas
xchg
xor
and
sub
loope
and
push
jge
fnsave
lret
dec
jge
and
sub
mov
jns
pushf
jno
xlat
data16
push
push
push
mov
xor
popf
pop
mov
push
push
xchg
cmp
add
loopne
cmpsb
inc
sub
sbbl
pop
cmp
jle
imul
cmp
cmp
movsl
and
clc
mov
mov
in
sbb
je
xor
pop
pop
pop
and
js
push
mov
xor
cmpsl
cltd
and
fdivl
shrb
mov
lock
push
push
jne
push
jb
mov
or
mov
push
adc
decb
loopne
jp
gs
stos
sub
popa
xor
stos
lcall
hlt
add
sub
sbb
fdivl
out
out
imul
jnp
loop
push
xor
out
fildl
adc
push
sarl
cmp
out
push
or
movsl
sti
jb
stc
xchg
pop
cmp
mov
test
xchg
vpsubsb
add
push
int
pop
lret
adc
cmp
mov
jge
pop
repz
test
lds
adc
mov
xchg
in
xlat
sub
jo
mov
in
adc
aas
sti
insb
pop
sub
cld
das
dec
gs
inc
loopne
pushf
lret
cwtl
pop
inc
insl
or
int
inc
les
inc
cltd
repz
mov
xor
fstpl
cmp
xor
xor
enter
cmpsb
lahf
pushf
inc
enter
mov
aad
mov
dec
aas
xchg
imul
dec
mov
dec
je
pusha
shl
popa
ror
pop
and
mov
sbb
pop
mov
pop
adcl
rcrb
sub
mov
inc
xor
outsb
inc
out
mov
andb
mov
or
outsb
shll
mov
std
cwtl
jp
cwtl
mov
cmp
push
ja
cld
push
test
lret
das
out
mov
imul
faddl
jb
imul
fucomip
sub
sub
ljmp
add
xor
xchg
hlt
xchg
pop
pop
push
outsl
cwtl
popa
cs
mov
in
fisubl
mov
lcall
cmp
pop
mov
adc
fnsave
pop
jp
jno
dec
sbb
rclb
dec
ds
test
fsubr
inc
inc
push
xchg
sti
pop
out
ds
lcall
mov
or
push
andl
cli
dec
dec
and
or
dec
inc
sub
or
mov
fwait
mov
int3
add
into
jl
pop
outsl
push
fdiv
aam
lret
in
cs
fcoms
mov
or
mov
sbb
pop
jp
lahf
cli
mov
cmp
mov
jmp
jnp
pop
cltd
jne
movsl
add
pop
mov
xchg
dec
push
jmp
mov
fisttps
ret
in
inc
sub
outsl
adc
push
lret
jl
stos
in
cmp
adc
dec
insb
push
cmpb
test
mov
sbb
inc
fdivs
mulb
rcrl
jle
inc
jge
jae
sbb
push
push
int3
in
pop
mov
mov
icebp
and
fcmove
pop
adcl
pop
subb
inc
scas
cmp
push
adc
sub
leave
out
dec
aam
push
and
arpl
out
faddl
push
movsl
or
pop
lahf
aaa
fwait
inc
scas
or
imul
cmp
aas
pop
ret
ficomps
mov
cld
inc
lds
loope
fdivrs
cwtl
outsl
repnz
dec
fldcw
jbe
inc
pop
jge
inc
mov
call
ret
push
cmp
int
mov
mov
out
xor
outsl
pop
mov
jo
sbb
pop
push
and
and
ror
mov
repz
cmpsb
les
in
push
lret
sbb
jnp
loope
test
punpcklwd
pushf
dec
cmp
inc
bound
ja
movsl
sub
xchg
and
lock
xchg
fimuls
fwait
test
add
push
xor
sti
out
imul
cmpsb
js
fsubrl
pop
mov
mov
push
popf
sti
stc
fsubl
mov
sbb
jns
adc
sub
bound
jno
mov
adc
mov
mov
pop
mov
in
push
jge
mov
sub
sarb
mov
mov
imull
sahf
arpl
xor
leave
jecxz
loop
fisubrl
fs
mov
adc
xchg
pop
xchg
clc
fdiv
stc
ljmp
lock
xor
movsb
cmp
loopne
or
push
mov
inc
push
jno
scas
lock
scas
rcrb
pop
jmp
or
imul
mov
popf
lods
inc
stos
inc
mov
jnp
xlat
push
mov
mov
jnp
das
sti
sbb
fisubl
jno
loopne
pop
mov
or
adc
flds
jno
dec
shl
mov
or
mov
cmp
mov
negl
je
adc
and
fsubrs
shrb
in
bound
nop
addb
jb
scas
out
dec
sub
je
js
jecxz
insl
cmp
pop
lds
pop
mov
call
jp
insl
mov
subl
in
pop
lods
rcrb
inc
or
aaa
das
popa
push
shll
repz
into
pop
shll
lcall
lret
in
cwtl
inc
roll
cmpsl
enter
inc
mov
xor
dec
fimull
sahf
push
or
orl
dec
rorb
or
mov
adc
mov
add
insl
pop
xchg
orb
adcb
cmp
dec
lods
ss
mov
or
daa
mov
lds
dec
add
push
xor
aaa
jmp
dec
cmp
addr16
fs
mov
xor
inc
ror
aas
dec
pop
negl
stos
je
or
movsb
sub
xchg
inc
mov
xchg
cld
xchg
xchg
xor
insb
wbinvd
sub
xor
cmp
mov
jle
sub
inc
xchg
push
test
mov
in
dec
cmp
inc
jo
push
or
sub
fwait
add
das
out
cmp
and
icebp
push
out
cmp
punpckldq
addr16
jg
in
imul
mov
aad
mov
aam
mov
mov
jp
out
aad
cmp
pop
mov
pop
arpl
fists
mov
sbb
xchg
and
jae
mov
cmpl
out
mov
fimull
push
enter
fildll
sub
lret
movsb
mov
jle
rcl
push
inc
pop
pusha
fcompl
or
es
or
lods
pop
and
inc
dec
jb
jae
mov
popf
inc
jl
mov
jo
add
orb
sbb
and
push
test
scas
popf
xchg
ds
je
and
lock
outsl
mov
and
mov
hlt
imul
fbld
or
push
jecxz
aaa
pop
fists
add
out
int3
es
mov
scas
inc
fdivrp
pop
jl
cli
xchg
and
pop
je
and
cmp
adc
lods
fnsave
sub
jge
or
daa
enter
fisttps
jno
mov
fists
dec
push
movsb
icebp
push
push
pop
lea
push
xor
testl
mov
fwait
mov
sbb
dec
inc
jne
mov
pushf
pop
mov
mov
loope
xchg
xor
loope
cmp
mov
movsl
xor
mov
sti
aad
hlt
imul
sbb
jp
add
mov
xor
pop
cmc
pop
jo
lcall
push
xor
hlt
mov
sub
outsb
pop
into
adc
push
lods
nop
jg
jne
mov
push
cmp
mov
mov
and
flds
add
int
rcrl
imull
mov
mov
adc
mov
push
ret
sbb
sbb
test
lock
jle
int3
outsl
test
cmp
mov
pop
mov
pop
adc
sub
lret
cmp
mov
mov
cli
or
pusha
cmp
rorl
mov
inc
cmc
jbe
xchg
xor
call
and
or
adc
adc
mov
enter
lods
lods
sub
xlat
test
mov
je
out
xor
lret
incb
push
gs
jo
loopne
sub
dec
insb
lods
inc
inc
xchg
push
fnstcw
mov
sbb
xchg
mov
mov
cmp
xchg
jle
fcmovbe
mov
ljmp
jmp
xchg
bound
dec
inc
daa
aad
je
nop
pop
mov
test
cli
adc
mov
in
jecxz
pop
cmp
lea
mov
push
mov
and
dec
inc
outsb
addl
fisttpl
es
inc
lds
inc
and
jnp
mov
stos
dec
adc
push
mov
xor
or
cwtl
add
inc
mov
mov
add
lret
or
pop
mov
lock
cs
mov
adc
sub
jecxz
adc
ret
dec
out
into
or
insl
inc
jo
dec
xchg
in
fstps
scas
popa
pop
leave
lods
mov
test
and
lock
sbb
mov
dec
test
cltd
scas
mov
fsubl
or
mov
addl
clc
lahf
repz
xchg
xor
rcrl
jecxz
pop
mov
mov
out
pop
pop
rclb
hlt
lea
xor
or
lahf
jge
xor
mov
pop
xchg
or
dec
icebp
mov
dec
sub
movl
jbe
fwait
xor
pop
push
fadds
add
or
je
pop
inc
lock
or
in
in
daa
pop
xchg
jbe
cmpsb
mov
adc
lock
fsubl
daa
out
jp
repnz
pop
pusha
adc
leave
rorb
pop
addr16
mov
cmp
xchg
cmc
xor
xchg
push
add
orl
outsl
sub
adc
dec
push
mov
and
movsl
insb
pushf
enter
mov
adc
pop
cmc
push
pusha
ja
pop
iret
sbb
iret
pop
push
pop
out
inc
pop
mov
into
push
pushf
xor
cmp
out
js
fidivl
icebp
xchg
xchg
shll
sbb
mov
and
mov
loopne
mov
ja
sbb
hlt
mov
enter
and
cs
or
int3
std
xchg
aaa
sbb
pop
or
or
or
adcb
and
fisubs
shl
shlb
subl
push
out
movsb
arpl
jbe
xchg
jge
scas
push
sbb
daa
mov
mov
jl
test
jnp
xor
sub
jo
push
or
mov
sbb
test
data16
gs
adc
lret
in
adc
adcl
push
out
loope
inc
mov
cmp
cmpsl
stos
ds
cltd
pop
and
sbb
push
stc
data16
adc
inc
cmp
add
push
pusha
xor
xchg
insb
and
pop
xchg
aam
js
inc
mov
lcall
inc
fdivl
stos
sub
mov
adc
loope
scas
jg
jl
mov
les
mov
pop
and
sub
push
sub
int
cmp
mov
scas
lret
push
push
pop
pop
mov
mov
sbb
sahf
test
xchg
sbbb
imul
adc
fs
xchg
sahf
sub
out
add
lahf
fsubrs
out
and
push
xor
cmp
lahf
stos
or
icebp
gs
or
push
js
adc
adc
push
adc
jno
movsb
adc
js
add
insl
or
mov
or
sub
or
push
mov
sti
jns
pop
gs
loop
pop
rcll
dec
lret
mov
xchg
fnstenv
adc
pop
pop
es
je
xchg
jge
sbb
in
or
scas
inc
mov
adc
stos
pushf
inc
push
and
mov
pop
cs
aad
fsubp
xchg
jae
dec
jb
jns
dec
sbb
mov
mov
fmuls
mov
insl
mov
dec
sbb
push
inc
outsl
and
mov
inc
inc
sbbb
rorb
mov
test
aam
idivb
sbb
cmpsl
jmp
scas
icebp
xchg
jae
cld
lahf
add
mov
dec
jp
movntq
out
lock
xor
iret
fidivl
sub
loope
dec
cmp
ret
fsubrs
shrb
and
aas
rclb
enter
jae
shrb
call
and
mov
jecxz
addl
lret
in
cltd
loopne
push
test
bound
into
push
dec
cmp
out
sbb
sbb
stos
es
dec
stc
cmpsl
stos
push
lret
clc
out
push
push
xchg
rclb
push
iret
pusha
ds
cmp
adc
push
push
push
xor
xchg
mov
test
dec
pcmpgtw
enter
dec
pop
mov
pop
stc
bound
fcompl
or
xchg
cmp
jnp
addl
idivb
out
jns
in
pop
in
cmp
mov
leave
movsb
mov
dec
xlat
adc
fs
test
cmc
mov
cmp
popf
dec
jg
jne
and
mov
jo
fbstp
out
jmp
push
add
out
lods
or
pusha
in
xchg
push
mov
sub
pop
add
pop
rcl
rol
loope
ja
test
pop
or
pusha
adc
out
jp
inc
ret
pop
pop
mov
xchg
inc
gs
mov
cmp
push
pop
sbb
popf
xchg
mov
mov
outsb
jmp
push
xchg
in
and
imul
scas
arpl
es
add
cmpsb
cmp
repnz
leave
push
sbb
hlt
jmp
loop
push
movsl
leave
inc
in
mov
push
fcomps
add
lea
test
fiadds
lock
jb
rorb
scas
push
out
and
sbb
movsb
out
xchg
pop
push
mov
pop
push
jge
cmp
sbb
dec
sbb
jp
cmp
ja
jg
inc
jl
adc
dec
xor
rorl
inc
lret
xor
or
mov
popf
pop
fs
xor
fsubl
sbb
rcrb
cmp
ljmp
call
es
sbb
mov
cmc
adc
inc
sbb
add
inc
dec
xor
xchg
push
das
mov
add
xlat
fiadds
jb,pn
lcall
mov
sub
aam
pushf
stc
repz
mov
mov
mov
imul
mov
xchg
and
or
pop
int
mov
aaa
scas
mull
scas
pop
shr
jmp
xlat
xchg
imul
dec
daa
dec
test
orb
xor
stc
lret
fs
ret
in
pusha
fbstp
push
xadd
daa
or
out
mov
jno
arpl
push
mov
cmp
cmp
or
nop
into
lock
cmc
add
pop
xor
push
outsb
pop
inc
mov
adc
out
adc
mov
push
lods
idiv
sub
daa
dec
popa
sub
lods
lds
mov
loop
decb
lcall
sub
xlat
inc
mov
xor
sahf
repz
nop
and
inc
mov
sbb
daa
ret
movsl
sub
scas
lods
adc
cs
test
adc
mov
addr16
adc
dec
cwtl
adc
out
popf
or
pop
lea
sub
mov
cmp
outsl
pop
push
dec
repnz
pusha
outsl
pop
xchg
lods
test
dec
or
inc
pop
std
movsl
das
pusha
enter
arpl
xor
mov
testb
cmp
xor
push
cwtl
jbe
jne
lds
ficomps
icebp
push
xchg
cld
lret
lret
jmp
xchg
mov
xor
sub
lock
pop
pop
out
addr16
push
sqrtps
inc
push
loop
push
cli
dec
ret
stos
jmp
insl
adc
push
dec
jl
repz
push
cmp
ljmp
fwait
lods
ja
add
jno
sub
sarb
add
fcmovb
cltd
pop
xchg
lods
test
mov
mov
clc
push
xchg
push
xlat
fst
xchg
test
adc
lods
ficomps
dec
popf
mov
int
in
clc
test
stos
inc
test
out
int
inc
xchg
pop
shl
stos
inc
outsb
fldcw
int3
xor
adc
into
add
mov
xchg
mov
pop
pop
pop
dec
adc
inc
xor
xchg
push
push
inc
bound
inc
push
jns
aad
jecxz
sub
xor
mov
in
adc
inc
mov
icebp
ds
add
sub
mov
mov
mov
pop
mov
sub
mov
mov
xchg
xchg
fwait
int
jmp
jmp
mov
out
roll
imul
or
fistl
xor
cmp
jo
inc
insb
jb
inc
jnp
scas
xchg
jle
iret
pop
in
adc
lods
push
iret
fstps
ret
jp
lds
inc
jo
sti
jae
ja
push
and
popf
mov
xchg
lcall
push
inc
xchg
inc
xchg
add
imul
sbb
dec
test
mov
sbb
popf
hlt
dec
and
inc
call
das
jbe
ret
aaa
xchg
shrl
cmp
int3
out
cmpsb
pop
jle
adc
lds
loop
scas
in
pop
sbb
cmp
movsb
jns
notb
xchg
pop
jbe
sahf
int
or
cmpsb
daa
lds
fidivl
sub
dec
mov
pop
xchg
xor
fildll
std
mov
test
cld
js
inc
das
gs
cmpsb
shlb
je
jns
add
ja
arpl
push
loope
add
sub
test
push
ds
jle
dec
fxch
and
adc
and
pop
sbb
mov
xor
xchg
inc
pop
in
push
js
std
add
lcall
sbb
int
adc
outsb
pushl
add
xchg
inc
jp
sub
outsl
mov
jmp
and
dec
push
mov
subl
iretw
dec
mov
dec
roll
push
sbb
fwait
mov
iret
pop
loope
inc
stos
fsubp
jno
cmp
subl
adc
cmpsb
ss
jno
cmp
loop
loop
movsb
in
cmp
movsb
int
xor
mov
or
into
rcl
mov
lret
lret
scas
xor
cmpsb
push
pop
gs
adc
test
and
adc
and
add
stos
adc
subl
jmp
xlat
inc
inc
sub
cmc
mov
daa
and
xlat
sub
push
gs
shl
adc
dec
mov
ret
inc
int3
dec
and
loopne
movsb
les
ss
out
scas
xchg
add
sbb
bound
sti
lods
sub
pop
repz
pushf
cwtl
fcmovu
jmp
push
cmp
js
dec
aad
hlt
cmp
mov
bound
adc
dec
push
dec
aaa
je
and
lods
lds
imul
cmp
jg
push
mov
inc
js
sub
cmpsl
addl
push
fistl
fucomip
inc
sarl
and
fstp
into
mov
iret
in
and
insb
pop
shrl
sub
std
fcomi
xlat
cwtl
xor
cmpsl
les
mov
inc
and
push
lret
pop
test
mov
or
lock
leave
pop
or
pushf
sub
or
ret
imul
ret
es
inc
shrb
pop
pop
dec
ja
std
xchg
xchg
shrl
scas
fistl
popa
mov
mov
xchg
mov
int3
pop
cmpsl
mov
inc
jno
add
add
test
dec
mov
notl
cmp
xor
push
mov
sbb
movb
and
outsb
pop
mov
dec
sub
xor
xchg
pop
xchg
ficoms
inc
js
loop
cmp
or
add
adc
cmp
push
out
xchg
imul
jecxz
dec
add
lret
ss
dec
rcrb
xor
add
clc
out
mov
aad
mov
ljmp
arpl
jg
movsl
mov
mov
jp
xor
mov
adc
rorl
inc
jg
jne
ja
mov
pop
push
fcomip
and
push
jmp
mov
lahf
cmpl
aas
sub
push
pusha
repz
push
outsb
imul
hlt
jle
mov
scas
pusha
dec
add
iret
cmp
ret
arpl
jg
inc
jnp
in
push
stc
xor
in
in
loop
in
jg
mov
fimull
xchg
lcall
imul
scas
sub
test
mov
jo
sbb
inc
xchg
xchg
mov
arpl
sbb
cmp
push
or
mov
add
stos
xchg
int3
shlb
mov
mov
lds
loope
rolb
sbb
shlb
cmp
push
jae
push
mov
aas
jge
sti
push
daa
les
std
jno
test
jl
pop
adc
mov
push
fdivp
mov
jo
inc
mov
sbb
jp
inc
ja
test
mov
inc
mov
xor
je
popa
pop
mov
icebp
push
mov
aaa
sub
aas
mov
cmp
jg
es
add
pslld
mov
mov
ljmp
xor
mov
mov
pop
or
stc
js
mov
pop
sub
popf
lcall
adc
js
sbb
sub
outsb
bound
adc
jb
mov
stos
test
mov
push
int
pop
daa
mov
int
iret
lcall
cltd
enter
cmp
pop
jle
mov
test
sahf
xchg
add
test
mov
jae
and
push
loop
xor
cmp
cltd
fs
cmp
adc
inc
dec
cmp
popf
push
shl
mov
inc
cmp
add
lea
dec
ja
into
mov
loop
xchg
mov
icebp
pop
test
daa
adc
cltd
imul
popl
add
es
dec
stc
lods
mov
mov
pop
sub
jno
mov
xchg
lods
cmpsl
sti
xchg
sbb
push
sub
adc
push
pop
inc
fistps
pop
inc
inc
les
xchg
popa
xchg
dec
popa
sbb
popf
in
sub
cmpsb
pop
movsb
adc
mov
jmp
lret
fildl
aad
xchg
add
push
sub
dec
jge
dec
je
fidivs
mov
mov
lea
nop
insb
call
xor
push
addl
inc
sub
es
pop
fildl
inc
xchg
das
enter
aas
mov
xchg
fst
in
add
xchg
sub
cmpb
cmpsl
ret
sub
icebp
sbb
lret
leave
mov
mov
xlat
cmp
fs
lock
cmp
sub
adc
sub
test
lods
jae
ret
test
es
ret
movsl
dec
jb
mov
ljmp
shrl
ret
mov
shrl
mov
mov
popa
arpl
arpl
pop
push
pop
fidivrs
pop
mov
clc
mov
sbb
fdivs
dec
sbb
stos
pop
scas
mov
xchg
movsl
enter
push
idiv
pop
push
loopne
cs
or
icebp
xor
or
pop
mov
inc
dec
inc
iret
pop
test
scas
ja
out
out
dec
clc
sbb
inc
arpl
testb
sub
fs
add
js
or
xchg
es
bound
add
filds
xchg
mov
sbb
ja
xchg
mov
jnp
pop
and
jp
push
cmpsl
mov
lods
cmp
mov
leave
icebp
jne
lcall
adc
inc
aaa
shr
push
push
xchg
xchg
jg
hlt
orl
out
jle
sub
push
clc
mov
sub
stos
sahf
xor
insb
dec
mov
repz
popf
jmp
pusha
jecxz
int3
iret
xchg
xchg
inc
ret
inc
pop
xor
test
cmc
jae
mov
cmp
mov
push
test
pushl
mov
imul
scas
mov
push
xlat
test
aaa
mov
jne
ret
adc
hlt
loopne
push
arpl
or
or
mov
xchg
jmp
add
test
mov
fisubrs
or
popf
scas
pusha
rcrb
jp
push
adc
cmp
test
movsb
popl
push
cmpsb
sub
jbe
test
sbb
loopne
ret
aad
cmp
inc
push
jno
dec
push
jl
inc
clc
dec
andl
jo
mov
push
push
push
push
test
xchg
inc
jb
dec
jbe
cmpsb
sbb
in
shrb
test
pop
cmc
sub
out
ret
push
sbb
test
cmp
cltd
cmp
dec
sub
movsl
push
test
adc
orb
les
adc
js
inc
pop
xor
js
push
aam
stos
decb
lcall
add
and
outsb
lds
rorb
inc
jg
ret
mov
cmp
xorl
and
sub
pop
mul
out
lret
push
shrl
rcrl
or
test
das
jno
add
adc
fs
lock
ficoml
popa
cmp
pop
push
and
or
fiaddl
cmp
or
or
imul
rorl
pop
adc
jb
imul
in
xchg
mov
subb
sbb
sub
pop
mov
std
or
xor
test
or
mov
dec
dec
inc
daa
nop
inc
repnz
stos
les
jnp
xchg
mov
jbe
popf
sub
cmp
pusha
jmp
pop
pop
ds
pushf
out
lods
add
jb
cmc
cs
aad
xchg
mov
aas
out
subl
dec
hlt
movsb
leave
je
out
cld
jecxz
or
outsl
or
lea
xchg
jne
jns
hlt
sahf
or
push
pop
jno
mov
movsb
sbb
push
jle
loope
scas
inc
lods
out
das
fwait
xlat
or
cmp
xor
rorl
psadbw
xchg
cwtl
cmpsl
or
mov
out
data16
dec
inc
into
lret
cmp
test
mov
jl
jg
stos
sub
pop
dec
aam
cs
adc
ret
push
lcall
jecxz
xchg
adc
aaa
ljmp
in
lods
mov
hlt
mov
fidivrl
outsl
mov
ljmp
jecxz
mov
dec
and
push
repz
test
and
xchg
jle
sbb
adc
shrb
cmpsl
pop
stc
and
push
xlat
es
negb
mov
pushl
mov
adc
int
outsb
int
xchg
mov
xchg
ja
jg
dec
jmp
push
inc
cli
dec
sbb
push
xchg
fwait
pop
cmp
push
pop
jmp
add
xchg
maxps
jb
pop
adc
jns
ja
in
int3
inc
xchg
add
mov
mov
and
jp
mov
mov
hlt
outsl
fwait
dec
or
cmp
and
decb
aaa
xchg
adc
add
dec
nop
lcall
sbb
out
add
and
or
push
test
stos
adc
push
and
ljmp
add
in
inc
xchg
push
iret
idivb
dec
pop
push
sahf
inc
xchg
adc
jae
enter
sub
cmc
adc
inc
push
and
mov
into
xchg
dec
lret
mov
imul
in
out
icebp
cmp
push
mov
adc
mov
jp
leave
das
sbbl
arpl
or
add
push
aam
orb
ret
add
xchg
pop
or
push
fmulp
xchg
and
js
mov
fldcw
and
aaa
add
cltd
inc
sbb
fiadds
jge
dec
loop
add
cmpsb
nop
cmp
cld
cmp
jl
stc
pop
dec
lock
in
push
movsb
je
xor
jne
fcompl
jmp
mov
sbb
in
cmpsb
pop
jge
in
mov
sahf
and
xor
xchg
je
loope
mov
sub
in
cmp
ds
and
stos
add
andb
aad
pop
mov
pop
xor
data16
cmp
nop
pop
pop
and
js
call
fistps
call
cmp
push
xchg
pop
outsb
sub
mov
sub
stos
mov
or
mov
mov
mov
int
movsl
and
repnz
test
mov
scas
cli
roll
mov
and
test
push
and
loop
sub
sar
cmpsb
inc
xchg
fs
out
ss
push
xchg
cmp
adc
mov
cli
cmp
adc
cmp
stc
cld
or
movsl
into
jl
add
and
pushf
xor
or
ret
adc
push
inc
imul
add
arpl
lods
xchg
mov
leave
adc
sub
push
mulb
push
test
adc
fisubs
sahf
lret
loopne
mov
dec
cmpsb
dec
push
inc
add
fimull
xchg
lret
pop
cmpsl
notl
les
loop
sub
pop
or
push
adc
dec
inc
pushf
cltd
aad
jmp
stc
mov
clc
mov
mov
add
add
imul
rcll
jecxz
xchg
sbb
jb
fmuls
lock
mov
push
addl
mov
sub
inc
push
mov
das
jp
push
mov
hlt
and
pop
rcrl
add
shr
xchg
cwtl
bound
cmpsl
shll
icebp
cmp
outsb
lret
cmpsl
sbb
xchg
dec
mov
lock
pop
push
imul
jle
sub
push
mov
inc
cmp
sbb
fisubrl
inc
rorb
imul
je
popa
out
mov
mov
std
in
and
xchg
mov
add
mov
cltd
repz
jns
ret
dec
add
jge
dec
clc
add
xchg
insb
sbb
js
shrl
stos
xor
stos
std
ret
data16
pop
das
and
xor
push
push
stos
sahf
call
push
xor
and
xor
test
and
adc
addr16
xchg
mov
inc
xchg
rclb
stc
xchg
mov
dec
cmp
push
stos
mov
add
scas
pop
cmpsl
out
push
shll
popf
jns
mov
in
subb
std
sbb
mov
icebp
push
or
leave
and
and
cmpsl
mov
mov
jne
or
mov
cmpsl
pop
fists
aaa
xchg
out
aad
aas
outsl
cmp
jl
out
stc
shrl
inc
in
push
ret
cs
test
int3
cmp
push
pop
cmpsb
jnp
decb
in
dec
pushaw
sbb
aas
ret
test
mov
push
dec
jae
push
sub
cs
mov
mov
jmp
in
xchg
lahf
iret
xor
mov
scas
push
subb
in
sbb
repnz
and
jbe
xchg
arpl
mov
hlt
xchg
mov
repz
xchg
jl
or
push
push
add
pop
or
jnp
fidivs
jmp
rcl
and
jns
pop
cmp
mov
push
inc
aad
jbe
cmp
sbb
pop
sub
cmp
jno
mul
jl
xchg
dec
pop
int
push
xchg
das
xor
shl
and
mov
push
lret
xchg
jb
fcoml
in
mov
ret
fists
jae
outsb
push
loopne
loope
aaa
adc
cmp
xchg
popl
or
lea
pop
sbb
ljmp
in
movsb
pop
sbb
mov
test
frstor
fdivrl
mov
cmc
arpl
adc
add
xchg
jg
arpl
and
divl
dec
cld
push
xchg
jb
int
insl
sub
mov
bound
in
lret
cs
outsb
mov
rcrb
xchg
sahf
jnp
arpl
cmp
outsl
shll
stc
pop
sarb
fs
out
js
ja
lahf
adcb
into
pmulhuw
mov
ljmp
aaa
mov
ss
pop
int
cmc
out
or
xchg
rcll
rcr
fldt
cld
mov
add
add
mov
fwait
xchg
bound
sub
pop
mov
in
roll
xchg
add
aaa
cmp
xchg
loopne
or
mov
lds
fnstcw
repz
mov
sbb
dec
add
test
push
pop
mov
pop
cwtl
pushf
inc
shll
jmp
mov
fst
mov
cmp
sub
mov
stos
je
or
call
adc
xor
imul
mov
or
andl
inc
fcmovnbe
sbb
push
inc
out
test
loop
subb
in
mov
stos
fldl
jmp
add
dec
mov
std
ja
mov
sbb
mov
mov
popf
cmp
cld
mov
jb
mov
ret
dec
jo
jge
stos
pop
mov
shlb
ljmp
xor
xchg
insl
xchg
pop
mov
sub
add
jp
cmp
std
mov
mov
and
xchg
and
sub
lock
enter
jne
mov
int
push
pusha
jnp
fstl
or
call
jo
roll
mov
stos
in
je
out
mov
ret
xor
push
das
mov
or
into
enter
push
mov
xchg
das
adc
cmp
xlat
ja
sub
dec
rcll
or
stos
cmp
dec
je
add
leave
inc
xchg
out
xor
and
xchg
mov
insl
lea
mov
xchg
mov
lods
and
jmp
mov
mov
dec
sub
dec
rcrl
jne
pop
jae
mov
jmp
jo
sub
ss
xor
scas
out
fsubrs
inc
cmp
add
stos
imull
or
push
jnp
mov
fsub
mov
iret
mov
je
mov
cld
push
inc
cmpsl
ljmp
icebp
in
inc
popf
jle
mov
inc
push
mov
div
cmpsl
sbb
push
cmp
inc
mov
mov
insb
push
lods
dec
ja
enter
cld
nop
push
repnz
or
hlt
roll
jo
stc
inc
testl
or
push
xor
iret
add
pop
es
jle
xchg
pop
imul
and
shr
sbb
or
pop
cmp
mov
movsb
xor
stos
push
xchg
cmovs
les
sbb
push
daa
rcl
cmp
mov
jl
out
dec
into
pop
dec
push
push
mov
jo
xchg
outsl
lahf
cwtl
pop
adc
push
or
xchg
aam
push
repz
lea
in
xchg
push
pop
mov
push
jmp
sub
fdivrl
mov
add
imul
jnp
inc
in
push
pop
addb
sbb
jnp
add
aad
xor
and
cmpsb
js
push
sbbb
daa
in
and
pop
sub
negb
out
mov
adc
fisubs
cmpl
xchg
mov
mov
cmp
and
or
sub
iret
push
mull
call
fcmovb
jae
push
mov
js
xchg
lods
scas
sahf
push
das
jle
xor
pop
adcb
outsl
mov
mov
stc
adc
mov
dec
adc
sub
loop
adc
fmuls
addr16
mov
sbb
cmp
dec
or
inc
in
cmc
scas
adc
loop
aas
pop
add
fildll
push
cmp
cmpl
lods
popa
stos
out
mov
int3
lret
imul
outsb
jbe
in
ds
cmp
inc
and
pop
jae
lea
loopne
jle
dec
mov
push
fpatan
add
les
xchg
shl
push
sbb
mov
dec
daa
jbe
pop
jb
pushf
adc
mov
add
aad
out
push
nop
xor
mov
dec
dec
pop
jne
je
pop
jmp
imull
js
lea
adc
mov
add
mov
cmpsl
iret
cmp
pop
push
fildl
notb
and
inc
jbe
sub
andl
aad
fidivrs
jbe
cmpsl
sarl
lret
notb
mov
cwtl
fdivs
cmpsl
mov
xchg
out
je
push
cld
int3
and
lds
and
lock
cmpsb
sar
insl
sbb
aam
push
inc
ret
roll
and
add
push
push
dec
pop
mov
xchg
roll
ja
adc
or
lcall
out
idivl
nopl
cltd
popa
pop
cwtl
test
xchg
jno
and
inc
fnstsw
gs
xchg
dec
sbb
jne
xlat
or
pop
stos
fucomi
sbb
pop
xor
push
int3
push
out
xchg
aad
xor
xlat
xchg
or
inc
xor
xchg
mov
xchg
aam
test
insl
xchg
ja
inc
cmp
les
inc
mov
xchg
rcrl
lock
in
shr
cmovbe
bound
sbb
out
cmpsl
xchg
mov
adc
arpl
loop
addr16
push
or
mov
je
mov
inc
int3
dec
mov
push
jne
or
sbb
xchg
lea
jmp
stos
xor
addl
xchg
sub
cmp
inc
aas
stos
push
mov
cli
sbb
jnp
cmp
out
in
lea
pusha
dec
push
ror
adc
or
mov
sub
ss
mov
xorb
mov
popf
movsl
xchg
cmpsb
shll
in
xchg
dec
inc
ja
inc
pop
sub
scas
sbb
push
rep
or
mov
pmaxsw
hlt
or
cltd
arpl
int3
inc
cli
out
orl
adc
or
pushf
insb
add
fs
imul
fidivrs
int3
test
or
mov
lahf
fnstsw
movsb
mov
lea
repnz
mov
daa
mov
push
gs
xor
jl
sbb
cmp
pop
fs
xchg
lahf
mov
push
push
lret
mov
rcll
add
enter
push
call
enter
pop
icebp
lret
daa
shll
loope
stos
inc
sub
xchg
std
cmp
sub
movsl
jb
mov
push
call
pop
sbbb
sbb
pop
clc
add
adc
xor
test
out
iret
std
test
pop
scas
pop
cmpsl
pushf
sub
add
add
iret
ljmp
sub
sarb
dec
shll
adc
int3
mov
xchg
push
fwait
xchg
in
adc
sbb
loopne
mov
cmp
movsb
mov
sbb
cwtl
negl
mov
mov
loop
cmp
jmp
rclb
push
cmp
and
fisubrl
out
movsl
cs
xor
xor
push
cmp
lea
into
and
dec
sub
cmp
xchg
add
ja
subb
out
adc
testl
rorb
dec
xchg
dec
mov
ficoml
sub
xchg
mov
test
pop
inc
jge
mov
loopne
add
dec
ret
sarb
inc
ds
or
mov
aad
mov
sbb
cmc
adc
cmpsb
inc
dec
pop
and
notl
jmp
mov
cs
aad
addb
imul
cmp
pop
dec
rolb
pop
je
ja
jecxz
ret
jnp
pop
lea
xchg
pop
mov
adc
adcl
xchg
mov
or
inc
inc
sbb
js
push
cmp
and
mov
rorl
stos
addr16
vandnpd
mov
mov
push
cld
test
sub
mov
in
lock
ror
xor
sub
or
aam
popa
mov
push
pop
es
inc
dec
insl
bound
mov
mov
ljmp
push
and
jge
sarl
notb
mov
jnp
push
arpl
ss
cwtl
mov
mov
fwait
int
out
mov
clc
mov
and
sbb
jle
shrl
cmc
jmp
stos
lret
out
andb
push
cmpsl
lahf
pushl
jg
xor
add
or
pop
shll
add
inc
push
mov
inc
out
dec
mov
mov
push
stc
inc
or
push
sub
push
xchg
int
add
inc
adc
out
xlat
xor
js
jns
inc
ja
sbbl
mov
mov
or
jge
addr16
push
pop
jp
mov
mov
shr
mov
sbb
pushl
and
mov
jmp
fildll
int
jmp
jbe
testb
cwtl
cmp
or
pushf
pop
push
adcb
and
inc
movsb
insb
pop
push
es
orl
dec
mov
xchg
ret
ljmp
ret
lods
pop
inc
adc
inc
mov
cwtl
add
ja
fistps
loope
pop
inc
data16
xchg
jle
and
lock
cmpsb
xlat
aas
scas
jnp
mov
cmp
adc
sarl
bound
fmul
or
iret
hlt
push
pop
xchg
in
inc
std
shlb
shrl
push
shlb
test
aam
adc
int3
push
jl
pop
sub
ficomps
sub
inc
mov
shlb
out
xor
sub
jne
push
movsb
inc
mov
std
jbe
xor
sbb
sbb
daa
mov
aam
jno
mov
dec
lods
enter
call
jmp
loope
jmp
imul
test
mov
in
inc
sbb
cmpsb
xchg
enter
pop
xor
loope
cltd
sub
and
clc
push
pop
movsl
jns
mov
mov
stos
mov
subb
xor
jle
and
lods
inc
icebp
jne
mulb
push
cmp
lcall
inc
fdivrl
push
sub
push
pop
adc
xchg
or
xorb
xlat
in
jl
mov
xchg
mov
daa
dec
and
sarl
sub
mov
insb
lret
pop
shll
fistpl
repz
test
fs
test
sub
outsl
pop
stc
loop
jl
adcb
ja
adc
xorb
rorl
jecxz
inc
fdivr
add
popf
addr16
xor
cmc
insb
or
das
cmp
or
pop
cmc
cmp
ret
xor
jge
adc
in
imul
rorb
pop
or
cmpsb
int
lods
das
pop
hlt
mov
insl
out
xchg
mov
lock
adc
push
sti
mov
mov
mov
mov
mov
and
movsl
fldenv
add
ret
repz
cs
pop
jmp
sbb
decl
and
cmp
adc
sbb
xchg
cmpsl
cs
jne
nop
jmp
in
or
jb
pop
xor
xor
je
sub
adc
lea
je
jmp
fsubrl
jae
int
in
andl
test
pop
repnz
pop
lods
ljmp
xor
adc
sti
mov
pop
and
jecxz
rcr
dec
test
std
insb
or
cmpsl
mov
lcall
and
jmp
arpl
dec
mov
test
stos
lock
pop
out
inc
rcrb
mov
ret
fistpll
xlat
es
sub
dec
push
jb
xchg
dec
mov
shrl
inc
jle
lods
iret
cltd
cwtl
mov
mov
sbb
std
adc
decb
add
into
cltd
iret
addl
sub
fisttpll
outsb
jecxz
in
leave
mov
gs
sbb
xchg
jo
test
dec
pop
push
mov
pop
out
in
mov
push
orb
shrl
or
lods
xor
mov
lahf
mov
and
sbb
mov
dec
stos
pusha
jle
in
jmp
fwait
or
push
push
ss
movsb
add
sub
out
int
pop
rcl
jns
jns
xchg
mov
mov
test
mov
lds
mov
and
xor
dec
jp
or
lahf
inc
mov
aam
aam
xchg
xor
sbb
xchg
inc
lds
out
pop
sub
xor
stos
push
jle
and
mov
lret
jnp
mov
mov
in
pop
int3
pusha
test
iret
shll
dec
pop
jge
xor
adc
cmc
xchg
cmp
popf
repz
and
in
dec
fidivl
mov
xchg
sti
dec
ficomps
inc
jo
xchg
lds
push
adcl
repnz
xor
subb
hlt
mov
pop
faddl
daa
orl
ja
or
mov
add
aas
subl
jmp
fdivrp
mov
cmp
inc
fstpt
scas
in
inc
and
cli
push
cmp
fbld
push
sub
sbb
sbb
ret
cmp
or
jle
mov
dec
in
adc
xor
cmp
js
cmc
cwtl
mov
or
dec
push
push
sahf
inc
cmpsl
or
call
adc
pop
outsl
xor
push
xchg
sub
dec
lods
sub
jle
ds
mov
and
cmpb
sbb
xchg
add
mov
xor
call
mov
mov
js
mov
lcall
push
fsubl
inc
dec
outsb
pop
repnz
shrb
lods
jg
movsl
jle
sub
mov
pop
jg
push
sbb
shl
push
mov
push
pop
sub
negl
inc
lret
mov
cmp
out
and
mov
cmpsl
jg
outsl
cmp
cmc
push
stc
cmp
fs
and
mov
int3
ss
shr
cmp
mov
lods
add
cmp
xorl
jecxz
dec
or
enter
dec
cmc
add
xor
adc
pop
pop
insl
adc
sub
add
sbb
sub
lods
push
or
mov
mov
pop
subl
leave
pop
mov
jg
jbe
dec
sbb
inc
rcrb
push
dec
dec
dec
cmpl
imul
gs
xchg
sbb
cmp
cmp
movsb
insl
aad
mov
adc
pop
xor
cs
mov
aad
into
sti
nop
pusha
stos
aas
test
sahf
add
or
dec
xor
jecxz
shufps
movsb
call
outsb
or
mov
dec
mov
dec
xor
push
bound
mov
add
aad
das
aad
stos
mov
xchg
and
imul
pop
jbe
std
adc
ja
or
cmp
test
mov
dec
jl
lret
sarb
mov
sub
lock
adc
shlb
mov
aam
jae
ret
outsb
movsb
mov
stos
mov
dec
mov
xchg
mov
add
and
lods
cmp
adc
lods
imul
add
jmp
int3
add
mov
test
js
push
insb
cli
xor
cmp
sub
mov
cwtl
pop
jmp
pop
sti
mov
shr
pop
loop
xchg
xor
push
pop
jmp
shll
aam
test
mov
repz
mov
mov
repz
xchg
xorb
inc
dec
popf
or
inc
test
nop
or
dec
lock
cmp
push
add
xor
pop
andb
push
jns
adcb
incl
mov
shrb
cmp
outsb
mov
jp
jge
mov
les
clc
push
mov
pop
jle
jne
jge
mov
shlb
in
inc
dec
xchg
push
jmp
or
mov
out
fwait
or
cs
hlt
push
mov
and
cli
inc
insb
xor
pop
or
in
pop
iret
pusha
and
mov
in
outsb
sub
mov
jbe
int
cmp
std
fildll
sbb
and
fs
push
sub
sbb
std
and
ja
scas
inc
mov
mov
xor
lret
mov
or
ret
leave
stc
shrl
lods
popf
testl
mov
xlat
aaa
dec
inc
movsl
or
push
lods
int3
sub
pop
and
add
lds
jmp
scas
les
and
out
cmp
inc
jmp
mov
gs
mov
xchg
daa
mov
stc
pusha
jno
sahf
and
jecxz
xor
cltd
adc
neg
dec
xor
xchg
and
lahf
adc
mov
fildl
dec
push
pop
insb
enter
push
cmpsb
imul
test
aad
scas
sub
loope
jecxz
sub
mov
adc
ds
cmc
movsl
xchg
and
sahf
jbe
push
mov
sbb
lds
xor
lcall
inc
fbld
pop
and
ficompl
or
mov
outsb
jp
gs
dec
jnp,pt
rcr
mov
push
xchg
mov
add
mov
das
cmp
movsb
lods
adc
dec
mov
sub
lds
lret
test
push
mov
repnz
push
pop
add
aad
sbb
cmp
pushf
push
dec
stc
lock
dec
adc
sbb
cmp
jne
and
fwait
ja
cli
outsl
pusha
enter
ss
in
insl
or
loop
into
into
hlt
lcall
sbb
pop
jl
mov
imul
push
xor
jp
cmp
lods
std
lcall
popf
sbb
fldenv
ljmp
out
mov
test
or
loopne
int
ja
mov
iret
or
repz
rclb
scas
into
mov
jne
and
and
cmpsb
pop
sub
pushf
fwait
daa
or
sti
stc
pusha
cs
jecxz
mov
pop
iret
jb
pop
mov
je
nop
xor
xor
movb
call
sub
cmp
push
aaa
add
and
insb
fstpt
inc
inc
xchg
movl
and
mov
mov
negb
out
in
cwtl
mov
jb
icebp
sarb
sub
js
cli
lret
inc
test
mov
mov
mov
ss
lock
insl
or
rolb
sub
xchg
ret
std
dec
xor
sub
sub
dec
test
ljmp
cmpsl
lods
movsl
add
mov
iret
scas
sbb
mov
cwtl
mov
add
lea
dec
scas
push
das
cmp
fstl
fwait
clc
arpl
xchg
rcrl
dec
fcomps
pop
cmpsb
nop
mov
stos
cmpsl
fcoml
cmp
leave
xor
shrl
lea
movsl
or
dec
jl
xor
jge
jno
nop
insb
pop
inc
sbb
or
test
push
jl
movsb
add
push
and
out
mov
xor
xchg
inc
in
scas
pop
xchg
sub
idivl
push
lds
sbb
jp
lock
mov
jl
mov
std
test
cmp
shlb
or
ret
jmp
xlat
test
add
pop
out
dec
mov
sub
sub
push
mov
insb
mov
in
ret
mulb
in
mov
push
ret
sbbl
xchg
inc
fidivrs
or
sarb
mov
jecxz
jmp
xchg
push
movsl
xchg
test
xchg
imul
scas
movsb
call
adc
xchg
mov
pop
or
hlt
cmp
pusha
inc
push
das
mov
push
or
cwtl
xor
int3
adc
mov
fcmovb
aad
popa
shlb
scas
mov
out
cmp
cs
push
das
fnstenv
lea
divl
daa
mov
cltd
cmpsl
jno
pop
xchg
jl
xor
push
flds
xor
repnz
push
scas
cmp
push
ljmp
cmpsb
out
shrb
enter
pop
in
cmpsl
jge
repz
ds
sub
ret
lcall
insl
jmp
subb
andb
ss
push
imul
xchg
or
nop
or
pop
imul
js
dec
xor
mov
pop
sqrtps
dec
fdivrl
sahf
sub
mov
shlb
adc
mov
clc
sbb
jmp
cmp
ffreep
mov
int
mov
push
fsub
xchg
lret
enter
aam
lock
and
sub
sahf
dec
xchg
mov
sbb
jmp
sti
xor
jbe
cmpsl
pushf
mov
adc
push
cmp
xor
xchg
out
mov
movsl
mov
movsl
mov
xor
fadds
xor
pop
jl
ret
or
imul
adc
data16
scas
stos
lods
in
adc
fdivrl
aam
lock
add
push
iret
data16
lods
ds
decb
shrl
gs
stc
loopne
fnstsw
mov
cmp
push
and
sbb
xchg
mov
lcall
mov
stos
jns
push
pushf
inc
sbb
ljmp
aad
lods
daa
nop
jl
stos
aas
out
divl
dec
inc
dec
lods
mov
shl
inc
mov
dec
lea
jo
mov
movsb
ret
loop
sub
aam
fucomi
stos
dec
pop
xchg
cmp
sbb
inc
test
das
xchg
outsb
xchg
cmc
lahf
out
sub
popl
loope
cmc
std
popa
mov
std
cmpsl
mov
insl
jae
cmpsl
or
sahf
lret
mov
xor
arpl
inc
lock
lea
rclb
push
subl
iret
aam
ret
mov
mov
insl
cltd
into
dec
inc
jmp
xchg
or
outsl
ljmp
cmp
stos
or
adc
maskmovq
testl
cltd
je
xchg
test
fxch
mov
data16
repnz
push
fnstsw
jnp
sahf
mov
xchg
or
sbb
or
rorl
cmp
stos
xchg
rclb
pop
adc
scas
dec
push
xor
decb
stos
pop
insl
xor
sub
xchg
and
out
cmp
imul
push
inc
mov
movsl
or
xchg
add
pop
lock
imul
out
push
imul
dec
in
mov
xchg
jns
xor
mov
push
mov
sbb
jp
pop
mov
mov
insb
or
jne
imul
jg
lods
and
add
xchg
mov
xchg
push
out
outsb
mov
or
cwtl
push
jl
int
test
inc
push
jnp
inc
xchg
insb
xchg
in
jle
pusha
push
das
inc
iret
out
pop
mov
adc
test
lock
in
imul
popf
push
lret
fadds
movsb
fimull
add
pushf
in
imul
scas
pop
and
das
adc
outsb
aam
mov
pop
repnz
adc
leave
out
cmp
cmpl
lret
inc
or
dec
or
or
aaa
int3
pop
xor
mov
mov
xchg
pop
or
fsubp
jae
lds
rclb
shlb
lods
daa
cmp
mov
jb
out
push
insl
add
jbe
addb
xor
fucom
jo
mov
in
mov
inc
xor
cmp
jp
mov
jo
jo
gs
lahf
push
adc
xor
test
mov
inc
inc
push
jmp
sub
icebp
xchg
enter
pop
sub
mov
data16
inc
mov
cmpb
pop
or
sbb
lods
inc
cmpb
lahf
add
xor
rcl
push
clc
loop
xchg
jmp
into
pop
and
xlat
in
push
mov
jl
es
sub
inc
outsb
inc
ret
enter
add
pop
jg
dec
sbb
gs
mov
in
jnp
out
cltd
mov
stos
push
cwtl
int
mov
cmp
lret
xor
std
dec
int3
mov
mov
sahf
lock
cmp
pushf
outsl
fcmovu
repz
or
push
fs
add
mov
xchg
repnz
jmp
cld
out
xchg
mov
xor
js
xor
movsb
movsl
inc
into
xchg
mov
cmc
pop
mov
imul
jecxz
xchg
inc
pop
imul
xor
data16
lods
lret
push
mov
ficoms
sub
call
in
shlb
sub
sub
data16
and
ja
sahf
incb
fnstcw
push
insl
repz
mov
cmp
jno
and
adc
movsb
jecxz
adc
dec
jmp
insl
mov
mov
xor
nop
push
sbb
xchg
jb
insb
push
dec
and
je
inc
or
push
bound
lea
sbb
call
stos
mov
mov
lods
jge
testb
sbb
sahf
pop
cmp
push
inc
mov
fcmovu
das
jb
stos
mov
lods
sarl
mov
test
mulb
mov
or
cwtl
cmp
shll
inc
sbb
icebp
jle
int
into
inc
xchg
lret
pop
dec
jge
lods
inc
mov
mov
lock
shrl
cmp
xchg
sub
xcrypt-cbc
cmpsl
aam
addl
push
xor
insl
in
in
inc
out
xchg
dec
pop
inc
ljmp
hlt
lods
jnp
xor
adc
cld
shlb
adc
add
das
loope
stos
sub
add
mov
ret
frstor
xorb
into
outsl
sbb
xchg
push
pop
cld
mov
stos
jne
gs
jno
mov
push
out
xor
xor
in
into
or
test
pop
inc
cmp
xchg
adc
in
sti
shlb
jbe
mov
or
jne
fwait
aad
push
ret
add
xchg
out
dec
in
int
or
pop
jns
stos
push
in
pop
test
adc
addl
shlb
adc
out
repnz
push
pop
mov
ljmp
jb
mov
inc
das
fisttps
xchg
jg
or
divl
xchg
insl
fdivrl
fistps
test
sub
pop
mov
push
mov
sarb
sbb
insb
jbe
inc
jnp
pop
dec
jle
aad
in
cmpsl
or
mov
push
ret
pop
pop
pop
add
inc
hlt
sub
enter
stos
popf
clc
sarb
loope
cmp
std
ret
push
add
sbb
push
mov
push
and
in
popf
sbb
mov
add
leave
pop
mov
xlat
arpl
scas
flds
pop
mov
push
mov
mov
int3
jmp
leave
pop
mov
call
jae
lods
aaa
inc
scas
popa
daa
test
adc
sub
push
mov
xor
fstps
cwtl
add
les
fdiv
inc
jno
dec
jge
fs
dec
xlat
adc
xor
test
jo
jno
inc
push
push
adc
lods
push
cmp
inc
jecxz
lds
fmul
jb
cmp
cs
adc
push
dec
cmp
adc
cmpsl
lds
movsl
pushf
sub
and
je
or
out
inc
pop
pop
add
imul
dec
dec
rcl
push
pop
sti
pop
mov
loopne
pop
mov
and
or
ret
sbb
outsb
mov
sbb
mov
pop
add
mov
das
fsubl
std
mov
push
lods
fisubl
inc
push
push
negl
add
out
pcmpgtb
xchg
jne
mov
push
lret
sbb
das
setle
push
adc
cwtl
outsl
mov
rorl
adc
xor
adc
daa
movsl
ss
cmpsl
cmp
cmpsb
and
imul
inc
movsl
fs
xchg
bound
adc
jecxz
pop
pop
cmpsb
cmp
push
adc
xchg
imul
popf
push
add
adc
xor
lods
mov
xrelease
mov
jb
mov
sub
sti
or
decb
out
mov
ret
std
inc
pop
inc
mov
aaa
fnstenv
stc
fstpl
mov
addr16
sbb
lods
fwait
mov
iret
rclb
add
xchg
dec
stos
cs
lahf
aad
sbb
aas
and
les
aas
je
popf
jecxz
dec
inc
lea
lea
xchg
call
push
mov
sbb
lock
pop
fmull
in
mov
mov
lds
inc
push
shll
jge
addr16
std
scas
cmc
sub
mov
jge
icebp
push
pop
jae
stc
fmull
mov
or
pop
cmp
test
aam
xchg
stos
fidivrs
insl
int3
and
dec
cmp
xchg
mov
inc
ljmp
inc
lods
out
sarl
xor
and
add
fsts
cltd
loop
out
faddl
mov
fs
push
js
xchg
pop
jno
adc
cs
adc
or
cmp
pop
cmpsl
push
cmc
stos
mov
xchg
mov
jbe
leave
sbb
in
int3
je
and
or
mov
mov
scas
rorb
call
add
js
dec
imul
or
sub
fwait
cmc
mov
imul
sub
sub
icebp
stos
push
in
mov
xchg
pop
xchg
xchg
jns
pop
pop
test
sbb
push
and
mov
sbb
jmp
loope
mov
pop
fildll
ret
xchg
push
add
out
sbb
xchg
cmp
outsb
fiadds
out
adc
sub
sbb
mov
and
dec
cmpb
cld
jle
xor
pusha
mov
test
ret
cmp
mov
inc
jmp
jae
xchg
push
or
pop
popf
mov
adc
pusha
xor
fidivl
dec
xchg
sbb
out
scas
int
push
push
in
in
mov
xor
or
aad
repz
sbb
inc
arpl
cmp
xor
push
dec
mov
add
andb
adc
fisubrs
dec
in
rol
jae
inc
sar
and
clc
movsb
mov
ret
jbe
pop
xor
push
sahf
sbb
pop
daa
mov
mov
jno
jp
jl
mov
dec
inc
imul
push
sbb
jo
test
nop
shrb
sub
mov
dec
daa
jecxz
jb
and
mov
adc
pop
stos
aaa
mov
dec
dec
mov
sub
fsub
cmp
fidivrs
lret
movsl
mov
push
stc
in
xchg
sbb
xchg
sbb
roll
cmc
shlb
sbb
xor
mov
xor
lcall
dec
fdivrl
sub
outsb
push
adc
adc
mov
jbe
cmp
sub
push
pop
lds
adc
push
mov
int3
int
inc
pop
sub
sti
negl
inc
mov
shrl
dec
mov
ja
sahf
ss
add
cs
outsl
cwtl
sub
push
stc
int3
test
mov
js
cli
stos
pop
cmp
popa
sbbb
fsqrt
cmp
rdtsc
pop
fcmovnb
cmp
enter
js
into
pop
cmp
cmc
out
sub
pop
clc
pop
sbb
cmp
mov
ljmp
add
mov
mov
cltd
scas
sub
dec
pop
scas
mov
xchg
ret
mov
jl
lds
mov
inc
ret
cmc
or
stos
dec
pinsrw
xchg
ljmp
cmp
data16
pop
pop
iret
pop
or
adc
cmp
inc
out
ds
icebp
sbb
jg
mov
pop
imul
les
jb
dec
adc
je
dec
or
outsl
jle
nop
mov
xchg
mov
imul
xorl
inc
mov
jg
inc
scas
popf
pop
inc
aad
cmpsl
das
xor
mov
sbb
out
and
lock
mov
sub
stos
fidivs
push
cwtl
mov
shll
test
or
sub
out
and
cmp
std
add
mov
mov
mov
lcall
dec
stc
sub
daa
xchg
aam
fldl
xchg
adc
cmp
aas
insl
mov
dec
ss
test
ljmp
xchg
lods
push
lret
inc
mov
mov
daa
enter
bound
unpcklps
lea
out
ret
dec
adc
lret
lock
cmp
dec
xlat
sahf
xchg
dec
sbb
rcll
pop
push
sub
push
and
out
aaa
pop
leave
xchg
stc
lret
insb
push
movsb
sbb
mov
test
xor
jno
mov
mov
lcall
call
fldl
adc
or
mov
fwait
and
cmp
add
mov
inc
sub
cmp
aas
in
mov
xchg
data16
inc
mov
aas
call
ss
lds
add
mov
mov
xchg
pop
jne
mov
mov
lock
xchg
and
pusha
mov
cmp
inc
out
nop
sbb
adc
xor
jmp
insb
dec
scas
sub
fisttpl
enter
daa
ret
nop
iret
or
pop
ret
push
pop
sysret
inc
or
divl
mov
movsb
popf
fucomp
mov
inc
fbld
fisubl
dec
xchg
add
cmc
lods
imul
out
xor
pop
adc
daa
mov
cmpsl
push
jp
fs
arpl
bswap
inc
adc
pushw
scas
aaa
or
dec
or
mov
int3
rcll
pop
adc
sbb
icebp
enter
pop
loop
pop
adcl
cmp
test
adc
jbe
sti
les
cmp
sbb
or
daa
mov
mov
jno
lret
sarl
dec
mov
pop
push
gs
xor
pop
pop
imul
inc
je
push
push
test
inc
add
lret
add
xor
xor
jmp
mov
adc
cmp
repnz
ds
in
sti
movsl
stos
pop
movsl
and
mov
popl
push
xor
lret
jg
add
shrl
xor
adc
pushf
jg
pop
pop
daa
mov
in
enter
cwtl
aad
lock
iret
fsubl
or
push
outsb
imul
push
rclb
push
jmp
mov
pop
shlb
mov
push
mov
ror
icebp
sbb
cmp
push
neg
ret
or
aad
faddp
ret
mov
mov
fsts
flds
dec
mov
xor
jnp
add
sbbl
adc
gs
je
jbe
sbb
scas
out
and
pop
xor
xor
cmp
rcll
icebp
pop
stos
into
cmp
cmpb
imul
sysenter
stc
imul
jne
add
nop
cmp
bound
xchg
lret
push
xlat
fcomp
fldcw
mov
mov
sbb
xchg
inc
dec
gs
and
imull
dec
mov
test
das
les
lock
repz
adc
sbb
pushf
fbld
pop
mov
cli
sbbb
in
loop,pn
fwait
aad
sbb
arpl
out
rorl
mov
je
dec
xor
jle
ss
xchg
xorl
mov
pop
fimull
dec
push
dec
mov
stos
stos
jmp
inc
lock
fsubrs
bndldx
mov
pop
outsb
not
add
imul
mov
std
std
ret
imul
cmpsl
mov
sub
add
cltd
cld
dec
test
insb
add
sti
and
or
jb
mov
mov
sub
xchg
enter
mov
cmp
mov
clc
sbb
popa
jecxz
pop
lods
mov
in
mov
cs
adc
js
add
xchg
hlt
cltd
push
sbb
jno
push
push
adc
sbb
clc
mov
xchg
xor
sbb
rorl
out
mov
std
and
jp
out
lcall
push
jg
push
ljmp
pop
outsl
xor
mov
or
xchg
mov
mov
lds
cmp
cmp
dec
fdiv
inc
push
push
aaa
or
adc
push
stos
push
mov
add
clc
or
out
jmp
add
jns
cwtl
jg
fildl
xor
fisubrs
dec
pop
cli
and
addr16
out
jp
mov
imul
orb
xchg
ljmp
cmpsb
inc
fwait
xchg
clc
mov
jmp
into
lahf
inc
orl
sub
adc
js
adc
jne
add
leave
cmpb
mov
in
jnp
inc
in
jle
enter
jp
pusha
ret
iret
push
stos
ret
into
pop
decb
inc
adc
divb
popf
add
inc
mov
pop
adc
push
mov
xchg
pop
inc
outsl
sbb
mov
mov
jb
sub
push
push
push
mov
cli
inc
insl
leave
ret
xor
scas
sub
inc
adc
fnstsw
xor
or
add
std
int3
lods
jecxz
pop
aas
stos
adc
jae
sahf
lds
repz
inc
scas
xor
cmp
lods
cmp
repnz
prefetch
sbb
call
inc
cmp
adc
jl
xor
push
dec
jae
jecxz
stos
jo
in
lahf
into
push
push
push
int
xor
loope
and
lret
dec
cmpsb
jge
in
repnz
cmpb
sub
adc
out
loope
and
sub
pop
or
int
movsb
adc
movsl
mov
aad
mov
mov
addb
sbb
and
shlb
mov
aas
xlat
pop
cs
in
js
fwait
movb
stos
movsb
lcall
repz
outsl
ret
shlb
adc
insb
mov
mov
outsl
jo
mov
adc
sahf
sbb
int
jle
sub
enter
pop
les
xchg
imul
fs
xor
xchg
into
loop
pop
mov
cmp
xchg
mov
mov
adcb
fcom
divl
cli
mov
mov
cmp
scas
xchg
or
ror
and
ret
xor
sub
outsb
rcll
inc
xchg
fsubrp
adc
filds
mov
lods
addr16
lret
mov
das
xchg
stos
mov
insb
xor
sti
sbb
mov
sub
loopne
xor
sbb
cmp
xchg
push
fstps
dec
int
sbb
repz
insl
lret
and
cwtl
repz
cmp
xrstors
lret
or
data16
test
cs
loopne
aad
das
ss
ret
sub
add
jb
add
je
sahf
mov
lea
stos
lea
gs
sub
gs
sbb
cmp
fcmovnbe
sbbl
mov
dec
shrb
out
into
loope
xchg
test
mov
in
rcll
dec
divb
add
movsb
fistps
mov
jl
push
fcoml
fiaddl
cld
jp
insb
lret
fcmovnb
in
mov
and
mov
gs
pop
or
shlb
dec
add
mov
aam
xchg
push
aam
es
iret
mov
andl
stos
xchg
inc
nop
lret
sbb
or
daa
and
ja
mov
and
mov
rorb
add
int3
cmpsb
cltd
xchg
jg
std
fnsave
mov
fsubrp
push
rorl
inc
inc
jp
lds
xchg
out
jge
pop
sarl
lock
xor
jnp
xchg
jno
pop
push
aaa
dec
sub
sbb
cmp
mov
test
xor
xchg
mov
ljmp
jo
inc
movsl
cmp
or
inc
inc
fwait
addb
push
dec
roll
repnz
push
out
lds
jns
test
xchg
add
cmp
outsb
add
pop
mov
arpl
mov
jp
addr16
mov
mov
adc
xchg
out
jne
test
popf
out
adc
vpsadbw
rcr
or
sbbl
arpl
jmp
sub
or
or
cltd
inc
stos
call
in
mov
jnp
push
jle
add
in
xor
pusha
pop
xor
iret
leave
jecxz
ret
loop
xor
cli
jae
je
push
push
jnp
popf
sub
mov
fldl
fcmove
adc
sbb
and
imul
nop
push
mov
add
mov
dec
dec
aad
cmp
hlt
cli
cmpsl
das
arpl
daa
call
push
xchg
add
stos
bound
xchg
mov
ficoms
ret
out
pop
rcrb
cmp
and
lret
cmp
imul
jbe
xchg
js
negb
test
mov
pop
cmp
fcomp
jl
mov
dec
xchg
adc
push
sub
jle
adc
or
mov
shrb
pop
scas
std
cmpsb
add
cs
pop
imul
adc
add
pusha
cmc
cmp
ds
mov
mov
mov
popl
mov
jnp
and
add
mov
out
jecxz
and
pop
push
sbb
js
add
pop
popf
aas
or
imul
in
sub
jnp
das
sub
pop
rolb
jecxz
sbb
test
mov
test
leave
xchg
mov
lock
sub
jbe
notl
sub
mov
jnp
mov
insb
sbb
xchg
test
jmp
cmp
dec
push
stc
icebp
js
fs
push
adc
dec
cmp
xchg
adc
out
insl
sub
aam
movsl
xor
call
into
add
cmc
cmp
hlt
pop
push
jle
adc
aas
adc
pushf
mov
inc
stos
pop
lods
dec
mov
mov
lds
sub
sub
sti
or
fstpt
push
loopne
jge
dec
jns
addr16
cld
lods
and
push
cmp
les
or
xchg
xor
sbb
jae
adc
pushf
mov
pop
and
sbbb
xchg
test
iret
aad
test
nop
sahf
aas
mov
sub
mov
cmpsb
inc
cltd
insl
pop
lea
enter
shll
pop
nop
mov
int
fildl
cltd
roll
pop
add
push
aas
das
int
or
aas
jb
and
gs
rcrl
rolb
dec
and
cwtl
loope
mulb
inc
push
mov
cld
movsl
jge
lret
dec
dec
mov
or
repz
std
sub
rorb
sbb
sub
ret
out
and
ret
insl
push
jns
xchg
xchg
ljmp
shrd
jb
les
and
jno
pop
rdtsc
daa
stos
add
xor
lods
test
push
add
test
ja
add
xchg
pop
xchg
sbb
icebp
clc
rcll
ss
and
out
pusha
addr16
xchg
into
pusha
push
xor
sti
test
insb
jmp
or
xor
lods
xchg
mov
mov
push
dec
test
rcrl
jg
dec
xor
test
fwait
mov
cld
push
icebp
mov
rolb
or
scas
jmp
dec
jns
adc
dec
xchg
push
bound
adc
push
fisubs
mov
jp
dec
mov
jae
mov
push
push
out
pop
test
xchg
inc
jmp
sbb
out
cs
push
inc
ficoml
adc
pop
in
and
jp
insb
aam
jnp
pop
xlat
jle
cs
in
push
dec
pusha
clc
or
sub
jg
test
pop
insb
repz
sub
jae
rcll
adc
call
inc
pop
dec
fidivrl
xchg
or
cmp
jp
imul
and
pop
xchg
cli
push
add
dec
mov
mov
sbb
add
push
jno
sbb
mov
int3
cmp
inc
push
dec
or
outsl
add
xchg
int3
addb
fidivrs
cltd
cmpsl
shlb
mov
lock
movsb
mov
push
push
inc
andl
xchg
mov
jge
inc
aaa
sbb
fs
daa
mov
add
fldt
idivb
add
add
push
push
rcr
jno
adc
pop
jb
or
xor
test
ja
addl
cmpsl
cmpsb
sbbl
pop
subb
inc
cs
cmpsb
test
sbb
loope
lods
subl
push
cmp
add
push
push
cmpsb
movsl
mov
dec
int
pusha
xchg
subb
pop
sbb
add
gs
xor
sbb
in
inc
pop
jl
cmpl
add
sbb
stc
lcall
call
sub
xchg
int
xchg
push
adc
inc
shlb
xor
inc
mov
fldcw
das
add
mov
imul
xor
std
sub
fcmovne
scas
lds
mov
xchg
sbb
cmp
ret
test
ds
outsl
adc
lock
mov
ljmp
push
fdivrs
dec
mov
adc
pop
jp
xor
jno
in
or
dec
inc
into
out
push
cmc
add
adc
and
je
pop
adc
inc
test
add
shlb
xor
cmp
xchg
jg
sub
scas
mov
sti
jbe
dec
pusha
adc
fs
loopne
dec
fsubr
aas
inc
paddd
xchg
cmp
rep
lock
xchg
divb
iret
sbb
dec
adcl
pop
cmc
adc
hlt
inc
jmp
sub
aad
xchg
nop
jns
mov
jb
test
je
inc
mov
stos
out
pushf
xchg
in
lea
ss
and
and
orl
rcl
pop
or
cltd
inc
lret
inc
inc
add
das
lods
inc
cltd
mov
idivb
and
fiadds
divb
and
cwtl
pushf
pop
cmpsl
mov
les
mov
test
shlb
test
mov
inc
and
sbb
dec
pop
sbb
mov
sub
int
jne
es
inc
and
xchg
lea
in
dec
xchg
ljmp
xlat
lods
std
iret
jae
add
push
mov
inc
adc
seto
add
lods
cltd
cmc
adc
mov
test
fisttpll
jo
xchg
mov
shr
sub
test
ret
push
push
xchg
adc
ffreep
incl
shll
mov
negb
push
mov
jle
mov
gs
test
xchg
jne
xchg
dec
sub
or
and
fwait
loopne
rcrl
xchg
fimuls
dec
mov
add
xor
push
jns
dec
test
jl
sbb
mov
inc
cmc
mov
sub
adc
jp
fisubl
mov
jne
test
pop
xorb
mov
push
jl,pt
add
cmp
jno
ret
in
xchg
das
push
push
cmpl
jl
add
dec
pushf
or
sbb
push
xor
cmp
push
sub
mov
into
or
adc
in
shll
xchg
pop
mov
pop
jecxz
adc
push
push
fadds
popf
jns
inc
mov
fstpt
xor
das
icebp
jg
popa
rorb
dec
movsb
loopne
jmp
ljmp
inc
lcall
movq
repz
mov
nop
mov
add
push
outsl
sbb
jae,pn
push
add
push
stc
add
stos
sbb
insl
push
repnz
int3
popf
inc
ficomps
lds
lcall
cmpl
aas
sbb
xchg
xor
fdivr
and
mov
inc
daa
mov
and
push
jmp
jno
jbe
jl
and
dec
jno
daa
push
icebp
iret
xor
lret
lahf
sub
inc
mov
test
inc
repz
inc
cmp
test
in
inc
sbb
ja
in
les
xchg
jle
xor
mov
cmp
in
jns,pt
out
imul
mov
push
js
xchg
lock
xchg
daa
xor
fsubrs
test
lcall
fwait
mov
pop
fwait
negb
mov
cmc
cwtl
sub
sbb
adc
std
lea
mov
pop
pop
mov
cmpsl
sbb
push
jmp
push
mov
jle
sub
add
not
loop
lret
outsl
rcrl
dec
mov
fs
push
bound
rsqrtps
outsl
repz
mov
jmp
inc
sbb
adc
cmpsl
and
dec
push
cmp
or
shl
xchg
lds
cmp
sbb
dec
add
cmp
ds
or
inc
mov
xor
stos
loopne
pop
lahf
fisubrl
in
add
jl
inc
dec
xor
jle
rcl
aam
daa
sub
repz
lods
xchg
lock
and
cld
sbb
loopne
push
repnz
aaa
dec
mov
and
icebp
les
add
repz
jl
mov
or
cmp
sub
mov
adc
pop
pushf
sahf
mov
outsb
stos
mov
nop
push
xchg
jb
adc
dec
fs
push
jecxz
push
lahf
sub
call
in
sbb
movsb
mov
dec
arpl
stos
pop
scas
pop
addl
clc
inc
das
mov
es
test
idiv
lcall
push
add
fwait
mov
pop
mov
cld
sti
lds
lret
sub
mov
inc
je
ja
dec
pop
cmp
das
shrb
cltd
add
daa
jnp
ret
add
mov
enter
and
sbb
mov
cltd
popa
aas
push
aam
push
pop
add
dec
sbb
mov
out
in
add
pusha
cltd
sub
and
push
push
mov
mov
rcr
mov
xchg
jbe
push
xchg
xchg
pop
sbb
lds
pop
test
test
out
xor
pop
daa
dec
push
jmp
jnp
cmpsb
stos
cmp
adc
or
xor
and
mov
rcrb
sbb
pushf
ja
fwait
ret
dec
sbb
inc
push
cli
or
shlb
fistpl
aaa
cmc
icebp
add
inc
jno
out
out
bound
sub
jns
and
xchg
icebp
loopne
mov
push
cli
mov
out
cmp
adc
dec
mov
inc
push
mov
in
outsl
dec
cmp
in
mov
add
xchg
inc
xchg
xchg
cli
out
or
and
fidivl
nop
ror
or
xorl
inc
inc
fwait
and
adc
xor
in
mov
pusha
cs
scas
iret
out
jecxz
stos
ja
pop
fisubrl
inc
inc
test
jae
test
fwait
not
popf
mov
test
outsb
bound
hlt
mov
ja
pop
pop
push
push
mov
cltd
mov
inc
scas
sub
lahf
cwtl
cmp
fistpl
xchg
arpl
push
inc
and
in
xchg
pop
push
push
les
or
jno
add
int3
pop
ja
pop
sti
lret
in
fdivrp
pusha
xor
xchg
sbb
scas
jp
and
and
movsb
lret
push
in
add
fidivl
jge
pop
lea
mov
sbb
mov
stos
cmp
mov
jnp
jl
sbb
dec
loopne
clc
push
aam
jnp
jle
jo
mov
lahf
dec
cmpsl
lahf
push
sbb
jo
push
add
push
or
in
lods
cmpsb
mov
dec
loopne
and
sti
push
mov
loope
fldcw
pop
pop
cmp
add
and
mov
jl
push
mov
incl
adc
add
imul
pop
lret
js
lods
addr16
sbb
sub
outsl
mov
push
outsb
sahf
lods
fdivrl
mov
mulb
outsb
pop
fstp
adc
fdivr
push
jg
mov
mov
mov
ss
and
sbb
ret
int
pushf
ljmp
mov
hlt
xor
xchg
sub
fisttpll
ss
or
xchg
sbb
adc
je
rorb
repz
push
or
push
adc
sub
mov
in
cmp
ret
sarb
xchg
mov
cli
insl
or
and
aad
mov
push
fmul
lods
mov
popf
xor
lods
dec
pop
mov
outsl
adc
jl
imul
push
lods
add
mov
push
xlat
adc
inc
mov
sbb
sti
incb
gs
cs
sti
fidivl
inc
xor
in
loopne
inc
fistl
repz
test
xchg
jl
sub
cmp
jnp
sbb
push
adc
pushf
dec
lock
jmp
fstp
roll
cli
nop
das
jns
aas
jle
xchg
jb
xlat
inc
dec
fstpt
je
aaa
push
jecxz
xor
lea
mov
mov
mov
gs
cmpl
js
fistl
cmpsb
mov
inc
ja
ss
push
mov
mov
adc
sub
mov
scas
std
inc
fcmovbe
cwtl
adc
cmpsl
mov
sarb
ss
or
sub
xchg
sbbb
bound
shlb
pop
pop
mov
rolb
iret
add
repnz
push
ret
xchg
jle
es
addl
dec
sbb
pop
ljmp
jbe
ror
clc
mov
sub
mov
cmovle
push
add
pop
cltd
arpl
test
xchg
adc
push
int
test
fstl
jnp
mov
xchg
push
sbb
add
cltd
adcb
push
imul
mov
out
mov
and
mov
les
rorb
mov
jns
insl
xlat
les
andb
ja
out
das
dec
push
fdivs
inc
add
mov
fwait
outsl
add
jne
pop
inc
and
pop
rorl
lods
dec
bound
and
xchg
mov
mov
aas
xor
pop
mov
inc
push
jp
sbb
mov
data16
mov
push
in
or
divl
je
sbb
inc
xlat
xchg
pop
jle
jmp
adcl
out
adc
sub
testl
shlb
std
or
push
jnp
mov
aam
repnz
pusha
leave
push
cmp
ret
fcompl
fwait
addb
jae
adc
push
pop
pop
mov
mov
fnstcw
cmp
xchg
mov
hlt
sbb
jae
imul
jge
subb
push
aad
jae
popf
jns
mov
cltd
mov
hlt
es
push
inc
and
push
or
pop
mov
aaa
sub
or
inc
pop
add
test
int3
inc
outsb
jle
sub
jecxz
sbb
add
test
imul
shrb
movsb
push
pop
notb
pop
mov
jge
push
sbbb
repz
mov
mov
je
jb
and
dec
dec
push
xor
xor
andb
imul
pop
test
fcoms
jmp
in
adc
leave
enter
pop
arpl
ljmp
mov
or
loopne
mov
dec
mov
jge
sub
incl
incb
jmp
xor
rcrl
pop
icebp
lods
inc
js
bound
cltd
mov
cmp
lds
fsubrl
leave
mov
outsb
mov
stos
not
mov
add
sbb
push
cld
scas
mov
mov
push
lds
int
popf
mov
sbb
mov
rorl
push
test
sbb
outsb
sahf
stos
loopne
test
nop
mov
push
jnp
in
dec
mov
int
lret
push
push
adc
jecxz
iret
inc
cmp
jle
inc
out
sub
cmp
clc
inc
xchg
cmp
insb
fisttpl
mov
into
sub
xor
xchg
maxps
out
adc
lea
sub
adc
fdivl
lahf
mov
bound
je
xchg
xlat
push
sub
outsb
xchg
out
in
orl
sbb
addr16
mov
sub
loopne
ja
dec
cmc
sbb
inc
dec
es
les
xor
aas
mov
test
push
push
cwtl
mov
pop
out
jl
adc
sub
inc
ffree
cs
clc
jne
nop
or
aas
sbb
into
dec
dec
push
add
jecxz
ds
movsl
mov
lea
mov
mov
aad
shlb
xchg
fcmovnb
xorb
out
inc
pop
push
push
inc
xchg
and
dec
xchg
daa
mov
sbb
and
inc
push
rcr
push
or
jg
mov
out
pusha
cwtl
int
andl
filds
icebp
or
pop
inc
lret
push
sbb
mov
lret
sub
xchg
test
push
pop
adc
mov
dec
ret
and
aas
es
dec
push
insl
add
adc
mov
mov
popa
insl
fsubrs
mov
push
test
and
shrd
cltd
lcall
mov
cli
push
push
nop
notl
fldl
dec
clc
in
mov
xchg
loope
sbb
fwait
mov
lock
insl
pop
lcall
stos
fsubl
cs
ljmp
jmp
imul
or
bound
ljmp
lahf
jo
jmp
dec
xchg
ja
lret
hlt
mov
cwtl
adc
fwait
insl
je
push
jge
push
add
jns
out
and
bound
testb
sbb
outsl
mov
jmp
mov
pop
cmpsl
mov
jp
dec
push
mov
stos
hlt
mov
ret
dec
add
jne
lods
mov
lret
pusha
fcomps
jmp
nop
add
and
and
mov
loopne
repnz
and
sbb
stos
daa
jbe
and
bound
push
jnp
mov
jle
imul
stc
lods
pusha
fs
pop
ret
mov
dec
jo
inc
push
fcmovnb
jae
in
push
and
mov
sbb
inc
pop
or
popfw
insl
sbb
sbb
scas
in
cmp
adc
jae
in
fimull
repnz
popf
xchg
lea
ljmp
rol
arpl
push
inc
loope
or
iret
sbb
sahf
cmpsl
out
int3
cmp
inc
in
lds
pop
xchg
scas
cmp
cltd
cmp
push
push
adc
jbe
clc
inc
jge
js
sbb
dec
adc
mov
mov
jno
lock
out
icebp
dec
mov
xchg
xor
fistpl
lahf
mov
push
mov
mov
push
mov
push
loope
pop
pop
in
testl
pop
mov
xchg
or
js
movsb
sub
roll
loop,pt
movsl
fcmovne
cmp
sub
lret
xor
jg
add
adc
xlat
icebp
inc
sbbl
imul
out
lcall
ret
and
sub
inc
xchg
outsb
push
insb
adc
rorb
jl
mov
sbb
or
mov
and
add
test
int
xorl
adc
shl
adc
inc
dec
sahf
dec
pop
ret
test
sbb
sbb
loop
jmp
mov
adc
sub
cmc
fdivrs
cmp
out
daa
lahf
cli
shll
xor
cltd
inc
cmp
inc
icebp
or
arpl
into
jb
push
push
xchg
loopne
xchg
mov
lock
aam
fwait
imul
inc
enter
aad
shr
cmpsl
mov
inc
xlat
xchg
nop
test
mov
out
gs
xor
xchg
mov
and
push
xchg
inc
pop
inc
xchg
fldenv
les
repz
rcr
sbb
cmp
sub
pop
ds
pop
mov
pop
hlt
pushf
lahf
cmp
jmp
mov
aad
jecxz
nop
in
in
mov
cli
push
je
jl
jecxz
mov
test
pop
lea
mov
lock
iret
cmp
imul
fcomi
cwtl
inc
pop
xchg
sbb
loopne
lods
push
jae
sub
mov
rclb
and
or
xchg
test
inc
std
mov
ljmp
and
mov
in
push
cld
jl
inc
lret
jne
xchg
lock
sbb
cwtl
jl
shrb
sub
sub
arpl
mov
insl
es
xchg
fsubrs
and
arpl
sbb
push
push
test
lds
jae
outsl
and
js
mov
or
push
add
jnp
test
ljmp
push
test
push
xchg
sub
scas
mov
roll
pop
stos
and
lret
pop
ret
out
dec
mov
push
jl
mov
orl
or
dec
or
push
push
xchg
lock
dec
push
imul
fs
dec
hlt
ret
dec
inc
das
adc
or
aam
fwait
pushf
cmp
aam
push
popf
out
incl
lret
jns
test
test
xchg
ficomps
mov
pop
out
mov
jp
cmpxchg
adc
mov
ret
adc
mov
jne
pop
pop
mov
lret
mov
jg
inc
xchg
mov
test
xchg
pop
mov
jne
movsl
out
sub
in
aas
push
xor
mov
and
cltd
insb
movsb
mov
in
pushf
pop
frstpm(287
add
xchg
iret
add
mov
in
inc
pop
jg
rolb
inc
jae
sti
dec
push
in
jp
adc
cmc
stos
inc
xlat
push
imul
pop
ds
mov
xchg
popa
imul
gs
arpl
push
mov
aas
jecxz
leave
add
push
hlt
mov
xor
sub
or
push
jmp
fisttpll
adc
add
fmuls
mov
aam
call
lds
sarb
pop
and
xchg
cmp
pusha
lret
icebp
rcll
clc
jbe
xor
xor
out
xchg
daa
scas
and
cmp
repz
jno
popa
dec
jl
std
cmovnp
imul
push
jbe
jo
pop
fistps
xchg
daa
pop
sti
add
push
outsb
jle
inc
jns
andl
js
enter
pop
loope
mov
push
stos
sub
jnp
sub
int3
mov
ds
mov
sub
mov
pop
sbb
sub
xor
mov
rcrb
pop
js
mov
lcall
movsb
fdivrl
or
ret
fcompl
andl
add
imul
pop
mov
fsubl
xchg
pop
loopne
lret
in
int
dec
in
adc
jns
rolb
lret
jl
jp
xchg
mov
fsubs
sbb
add
and
pop
loop
mov
stc
cmp
outsb
inc
adc
ss
xchg
lods
hlt
neg
hlt
enter
movsl
xor
push
movsb
xorb
adc
cmp
adc
cmc
in
pop
xor
xchg
mov
adc
stc
mov
add
clc
sbb
push
or
rcr
mov
mov
pop
push
loope
loope
xchg
lods
lock
gs
imul
in
dec
mov
pop
inc
outsb
lcall
addr16
mov
mov
lret
xchg
lds
sbb
je
ffreep
xchg
dec
sbb
mov
adc
jnp
dec
pop
insb
jmp
sub
cli
mov
mov
aas
pop
mov
jb
pop
lds
cli
loope
bound
jecxz
and
stos
adc
lea
jnp
adc
mov
lea
addl
xchg
lret
fistpl
jne
pop
cmp
inc
insl
pop
mov
enter
pop
xor
cwtl
jp
mov
mov
dec
sarl
xchg
testb
loop
inc
fs
scas
andl
icebp
mov
inc
sub
in
stos
mov
jb
mov
xchg
jecxz
inc
pop
mov
xor
push
scas
daa
ret
inc
or
es
js
rolb
or
inc
xchg
add
ljmp
fwait
lods
adc
lahf
mov
xchg
loope
and
adc
packssdw
jg
or
mov
mov
dec
inc
push
push
iret
pushf
fstl
inc
clc
bound
xchg
cmp
sbb
mov
pop
push
mov
mov
mov
cld
xchg
js
jnp
push
xchg
jno
and
jb
pop
imul
xor
add
mov
int3
mov
dec
mov
in
push
push
mov
dec
out
and
xor
or
shl
fwait
lret
lret
ret
xlat
syscall
out
adc
add
adc
inc
jns
out
xor
xor
xchg
sub
lahf
or
pop
ror
loopne
push
jbe
jp
loopne
adc
iret
mov
add
jne
mov
mov
loope
fistps
lcall
outsb
lods
addl
out
jo
sub
call
mov
stos
or
ret
and
sub
jp
mov
xor
iret
bound
mov
inc
insl
sbbl
cmpsl
dec
mov
cmp
pusha
mov
push
and
jecxz
adc
fcomps
loopne
imul
inc
push
stos
ret
cs
mov
xchg
pop
mov
jnp
aam
pop
dec
mov
mov
xchg
movsl
or
iret
ja
aaa
rcrb
add
xlat
add
pop
mov
pop
mov
xchg
fimuls
aam
aad
push
scas
negb
and
push
cmp
icebp
fisubs
xchg
lea
out
jge
push
sbb
inc
scas
cmp
notb
dec
pushf
psrld
pusha
ss
xor
xchg
jns
lahf
cmp
push
gs
scas
test
cmp
insb
inc
or
cmpsb
xchg
das
stos
in
lds
jg
and
insb
push
jno
loope
stos
arpl
lcall
sub
pop
movsl
jmp
xchg
add
pushf
jae
sbb
shll
xor
ja
push
pop
idivw
pop
push
sub
lret
fsubrl
push
mov
mov
xor
adc
inc
jbe
jg
dec
mov
repz
mov
xchg
jge
mov
data16
push
into
arpl
sub
arpl
lret
mov
mov
rcrb
xchg
lds
cmp
push
dec
shlb
mov
iret
fs
adc
sti
ss
push
inc
cmp
scas
in
inc
out
cmpsl
out
cmp
ss
push
pop
into
cmp
cmc
lods
inc
pop
xor
rcrl
pop
out
adc
imul
and
data16
inc
pop
lods
lahf
sbb
mov
lcall
xchg
mov
les
add
nop
dec
outsb
rorb
or
loopne
lds
dec
adc
inc
andl
mov
repz
notb
rolb
cmp
fisttps
adc
mov
add
or
arpl
int
test
cli
bound
mov
imul
add
in
loope
in
stos
call
lahf
ror
mov
pop
in
adcl
adc
test
or
inc
jecxz
or
out
xor
inc
cmp
and
pushf
je
enter
dec
stos
mov
cwtl
sub
inc
mov
xchg
mov
cld
sar
mov
mov
jle
jle
xor
pop
push
dec
ror
push
sub
pop
aam
dec
fs
iret
push
and
dec
add
fstl
add
popa
mov
xor
xor
and
scas
push
bswap
mov
add
or
mov
aad
push
fldcw
fnstsw
dec
clc
popf
sub
mov
shl
aad
pop
add
push
stos
test
fcmovnbe
xchg
mov
pop
and
shll
xor
jns
xor
or
xchg
out
mov
push
cmp
out
adc
jg
inc
pop
js
or
movsb
jle
cli
sbb
jbe
mov
lret
out
mov
sub
jns
cli
sub
mov
ret
push
mov
test
mov
lea
daa
addr16
adc
mov
dec
lret
mov
mov
stos
adc
jne
imul
jne
test
mov
popa
shr
mov
xchg
icebp
mov
mov
pop
js
sub
jecxz
ja
scas
lret
iret
stos
addb
insb
jp
les
inc
dec
jle
sbb
pusha
xor
es
ret
dec
pop
in
xor
shlb
loope
push
insb
popf
arpl
xor
int3
and
aad
dec
fisubl
xor
dec
add
imul
push
push
icebp
sub
or
adc
in
add
hlt
push
push
arpl
daa
sub
cwtl
test
cmp
jg
imul
arpl
dec
int3
out
xchg
aam
out
ljmp
sub
shl
push
scas
aad
or
cmp
inc
push
jo
jbe
or
jge
cmp
lret
lods
out
cmp
in
jno
scas
enter
lods
dec
or
sbb
xor
in
cmpsl
and
cmp
outsl
push
add
and
push
mov
lods
jle
enter
pop
pop
movsl
sahf
push
in
loopew
std
mov
mov
pop
cmp
dec
cmpsb
ds
out
movsl
lock
xor
scas
loop
sbb
rcr
add
mov
xor
cmc
icebp
cmp
pop
lea
pop
pop
xchg
jnp
lcall
inc
sub
outsb
inc
push
aam
pop
inc
and
mov
sbb
add
mov
push
rcll
int
mov
testl
rol
test
lcall
push
jno
aaa
jnp
test
in
das
adcb
outsl
sub
out
mov
test
shl
adc
dec
cmp
push
je
mov
ja
push
jae
cmp
mov
out
sbb
cmc
jae
dec
xor
into
adc
fisubrl
push
cmp
push
pop
lea
pop
pop
aad
xchg
jbe
pusha
lret
test
dec
pop
sub
lock
and
sti
aas
idiv
repz
sahf
loopne
mov
dec
jno
mov
out
les
mov
xchg
dec
enter
dec
in
cmp
mov
xchg
cmc
adc
mov
adc
cmpsb
jnp
mov
test
sar
aad
add
jbe
idivl
cltd
adc
jb
mov
dec
adcl
pop
leave
mov
or
pop
ret
lock
pop
subl
and
fstpt
mov
inc
jnp
fildl
data16
das
vcvtdq2pd
idivl
push
rcll
sbb
std
xorl
cmpsl
lods
lret
jo
shl
imul
lret
ret
mov
dec
mov
mov
lock
xchg
pop
cmc
inc
push
shlb
jns
aam
aas
rol
or
adc
cs
xchg
jle
pop
ljmp
sahf
lods
ljmp
mov
je
js
dec
mov
push
add
flds
movsl
cmp
jbe
frstor
jge
xchg
cmpsl
mov
rorl
pop
stos
popaw
stos
cwtl
out
js
xor
or
sbb
xor
lea
sub
cli
xor
push
addl
inc
sbb
dec
int
dec
inc
hlt
loope
or
dec
das
fwait
sub
mov
or
outsl
add
jge
out
pushf
lds
cmp
jns
stos
dec
dec
insl
xchg
lret
mov
push
mov
dec
cmp
addr16
std
jp
adc
and
mov
jle
das
dec
lea
push
mov
mov
xchg
ss
outsb
jmp
mov
fldenv
lcall
or
das
movsl
push
out
arpl
stos
repz
int
scas
sti
in
in
pop
jnp
push
push
jle
call
sbb
rorb
jb
sbb
sub
sbb
aam
push
sub
rolb
cltd
adc
push
push
ficoml
and
div
mov
scas
jno
loopne
cmp
cwtl
adc
nop
fdivrs
cmp
mov
hlt
popf
fdiv
arpl
add
lds
aaa
ds
xchg
or
cli
addb
cltd
aas
int3
fisubrl
pop
pop
lds
mov
mov
js
push
add
movsb
or
aas
push
mov
movsl
mov
jmp
sbb
jb
daa
lods
adc
cmp
das
jno
mov
xchg
push
mov
pusha
test
es
xor
inc
ljmp
or
xor
iret
fcoms
es
into
cmpsb
fwait
insb
mov
xchg
push
stos
enter
pop
sahf
fidivrs
push
sbb
loope
je
sub
mov
cmp
icebp
adc
xchg
clc
push
add
jae
adc
addl
out
std
test
pop
mov
popf
js
popf
xchg
pop
adc
clc
lcall
loopne
adc
sub
stc
jecxz
stos
mov
sar
sub
mov
inc
mov
fwait
lret
xchg
in
push
jbe
and
inc
sub
aam
dec
int
add
test
push
lret
sarl
decb
test
sahf
fcmovb
lcall
jmp
outsl
or
es
push
loopne
pusha
adcl
adc
rcrb
cmp
and
aaa
xchg
lahf
xchg
jmp
cmp
fimuls
mov
add
cmp
xor
sub
pop
adc
in
mov
jle
or
and
fbld
cmp
lods
insl
fldenv
mov
loop
loope
sub
shrb
out
gs
push
ljmp
popf
mov
dec
rcrb
inc
cmpsl
into
ret
fnstcw
popf
stc
les
lahf
pusha
xchg
push
lods
xor
and
nop
lcall
mov
pushf
dec
ret
jmp
push
and
nop
push
enter
enter
scas
inc
dec
movsl
cmp
jecxz
ja
mov
lcall
inc
sub
mov
or
add
sub
pop
and
add
subb
mov
push
mov
push
jnp
shll
mov
into
frstor
cwtl
je
out
cmpsl
stos
mov
mov
inc
dec
imul
xor
adc
hlt
rorb
pop
adc
in
shlb
sub
aam
xchg
ret
in
cmc
jmp
insl
xchg
ss
cli
push
notb
jmp
popf
dec
lods
push
fwait
sarl
call
jne
in
lods
js
or
test
add
pop
clc
test
sahf
clc
adc
xchg
mov
jnp
shll
jnp
stos
xchg
mov
dec
xchg
dec
cmovb
and
fbstp
push
out
or
sbb
mov
aad
jecxz
in
mov
test
or
insl
mov
std
inc
mov
or
les
push
lods
inc
cs
add
out
jnp
push
bound
add
cmp
mov
xchg
sbb
cmp
hlt
xchg
insl
pop
add
lea
dec
int3
jp
ret
movsl
mov
sbb
mov
in
mov
ret
or
int3
ds
xchg
or
pop
xchg
xchg
ret
out
jecxz
sub
fldenv
scas
stos
ds
int
insb
push
cld
cwtl
jnp
daa
je
sub
xor
sbb
jg
mov
pop
pop
ss
jae
cli
sub
popf
mov
idivb
shrl
xchg
mov
insb
ret
scas
aam
add
and
adc
les
mov
xlat
leave
loopne
fdiv
call
mov
push
or
inc
fwait
leave
aaa
std
js
or
pop
stos
add
fwait
sahf
pop
inc
jg
fidivs
lds
in
shlb
scas
xchg
jmp
and
xchg
add
or
movsb
xchg
pop
stc
push
push
xor
jbe
mov
jge
and
daa
stos
mov
loope
sub
mov
dec
jmp
dec
jle
jo
lods
jo
inc
mov
jo
xlat
stos
rcll
inc
mov
jle
push
cmp
divl
pop
fstpl
out
loope
pcmpeqw
cli
mov
push
mov
ds
out
mov
xor
mov
les
dec
xchg
xchg
add
sarl
shlb
inc
mov
pop
xchg
jb
lcall
repnz
push
repz
les
jg
adc
aad
lock
stos
xchg
mov
mov
imul
rolb
cwtl
data16
pop
out
decl
int3
loopne
lret
add
arpl
sbb
data16
jge
or
orb
cmp
pop
cmc
pop
stc
pop
sub
fs
ss
js
cmp
loopne
das
out
lds
shlb
cs
xlat
push
or
mov
cmc
add
xor
dec
pop
mov
test
repz
rclb
call
push
lods
push
imul
aas
pushf
sub
fnsave
push
and
in
add
cltd
sti
cmp
call
dec
das
loopne
inc
mov
clc
rol
xchg
in
iret
repz
xchg
roll
repz
sbb
xchg
scas
pop
pop
and
sti
pushf
div
sbb
and
xchg
cltd
aad
loope
nop
sub
jp
xlat
sbb
mov
mov
cwtl
xchg
je
in
jecxz
sbb
mov
rorl
push
push
mov
mov
mov
icebp
jbe
pop
or
dec
mov
lea
inc
mov
inc
xor
push
mov
gs
repz
and
fstps
stos
and
add
pop
pop
and
lret
mov
popf
stc
mov
sarb
dec
xor
xor
jmp
inc
push
push
sub
stc
aam
and
loopne
pop
insl
outsb
test
dec
cmc
cli
aad
cld
sub
pop
xchg
jmp
lret
ror
mov
and
inc
and
jg
adc
out
mov
fistpll
cltd
in
fildl
adc
fucomp
ret
int3
clc
dec
ficompl
sbb
mov
sar
cltd
pop
add
jbe
mov
jge,pt
xchg
xchg
or
lcall
and
xor
push
stos
mov
fcoms
dec
push
cld
test
jl
ja
test
mov
and
sbb
adc
dec
cli
cld
add
sbb
jb
pop
test
jns
clc
sub
pop
jns
xchg
imul
mov
mov
sahf
mov
sub
mov
pop
inc
inc
dec
push
lret
repz
sbb
rclb
jo
in
push
xor
and
inc
xchg
sub
aam
mov
stos
fld1
loopne
ffree
cs
mov
mov
lock
out
jbe
push
mov
pop
ret
pop
pop
xchg
jecxz
inc
cltd
mov
jno
mov
pop
popf
fcomp
les
push
dec
fidivrl
out
xchg
jo
rcrl
pop
inc
imul
scas
aaa
mov
adc
jb
fimuls
leave
push
and
hlt
xor
repnz
cmp
std
push
mov
enter
imul
mov
jae
jae
add
pop
dec
add
int3
mov
rolb
scas
jb
insb
and
mov
and
inc
fdivl
xor
jge
cld
ja
lea
daa
stos
out
dec
cmp
shlb
jno
mov
jl
lods
fimull
shll
jmp
jmp
lahf
inc
adc
mov
icebp
test
gs
fiaddl
repnz
popa
mov
enter
pop
sbb
pushw
xchg
mov
sub
pop
add
ds
add
add
stos
mov
sub
pop
sbb
cmc
and
outsl
cltd
enter
fistps
jl
js
lea
lcall
out
cmpsl
mov
outsb
jo
jbe
cmp
jg
and
orl
fisubrs
iret
push
ds
xchg
in
jp
fdiv
mov
push
lret
push
mov
mov
les
test
adc
aaa
mov
stc
into
jb
fs
aad
movsb
push
xchg
fwait
dec
push
out
xlat
cli
cli
add
nop
mov
or
lahf
cmc
enter
mov
mov
adc
mov
imul
add
add
cmp
mov
xlat
or
cmpsl
sub
lods
pop
in
jo
mov
dec
xchg
dec
pop
push
cld
gs
imull
out
cmp
fs
fldcw
arpl
xchg
xchg
rcl
sbb
fwait
test
adc
pop
aam
mov
sbb
fs
mov
dec
jae
jmp
cmpsb
aad
pop
fcoms
jbe
std
jb
inc
add
xchg
cltd
sti
je
sub
mov
mov
cmc
mov
add
mov
mov
dec
cmpsb
scas
push
fisttpl
ds
pop
imul
inc
dec
sub
das
bound
dec
mov
push
jmp
outsl
std
js
mov
test
sahf
push
icebp
out
xchg
iret
cld
jle
add
lfs
mov
repnz
stos
cmpsl
lods
pop
push
das
repz
pop
imul
dec
adc
or
and
cmp
xor
lcall
sbb
lods
sub
xor
mov
mov
mov
inc
xchg
and
cltd
sbb
mov
mov
push
in
arpl
adc
out
xchg
sbb
loope
lods
rcll
or
sti
stos
gs
mov
mov
adc
aas
pop
cmp
xchg
fisttpll
xchg
dec
imul
das
jbe
mov
or
ja
sbb
dec
cmpsb
addr16
inc
mov
xor
fwait
mov
popa
push
repnz
sub
ss
out
cmp
bound
insl
jns
xchg
lahf
in
comiss
inc
push
aaa
mov
jns
push
or
jp
inc
mov
mov
lret
cmpsl
sbb
ss
mov
lods
ds
fistpll
mov
xchg
scas
test
xchg
sbb
push
dec
out
push
scas
sub
iret
push
add
stos
inc
shrl
fstp
insb
es
jnp
push
aam
outsb
pop
mov
sub
pusha
mov
sub
push
stos
sub
xor
inc
movsb
jae
adc
popf
cmp
mov
repz
sub
jcxz
not
mov
inc
and
scas
lcall
adc
xchg
xor
adc
into
testl
inc
cmp
inc
or
ss
aaa
jnp
add
ret
cmp
mov
fwait
cmc
daa
pop
mov
mov
lds
imul
sub
scas
push
mov
and
stos
cmp
or
push
lods
pushf
push
jbe
sub
jge
pop
in
dec
loope
daa
test
sbb
push
jl
sbb
push
iret
js
xor
pop
sub
push
test
loop
lds
push
xor
xchg
inc
roll
cmpsb
and
mov
enter
pop
pop
mov
cmp
sbb
and
mov
pop
xlat
stos
movsl
or
scas
and
pop
jne
and
mov
lret
add
insb
mov
inc
cmp
pop
sub
xchg
pop
xchg
jns
lcall
xor
or
aad
shll
adc
mov
jg
movsl
pop
mov
sahf
in
dec
pop
push
mov
add
and
test
mov
cmc
addr16
dec
enter
iret
xchg
roll
mov
rcrb
cmp
ret
push
lock
or
test
int3
sbb
test
fs
push
adc
mov
mov
fcoms
lods
out
insl
jge
cmp
pusha
xor
inc
or
add
cmpsl
fimull
imul
arpl
arpl
adc
sbb
add
insb
inc
gs
pop
lods
and
je
dec
mov
sub
lcall
fisttpl
sti
sti
dec
push
jg
out
cs
loopne
sub
dec
in
in
add
loopne
lahf
ftst
lcall
xchg
inc
ds
push
adc
cmp
add
nop
ja
pop
xchg
out
adc
jl
dec
fldenv
cs
out
fwait
aad
shrb
loop
sub
jb
dec
or
and
jecxz
das
or
mov
cmp
call
pop
fisubrl
mov
fisttps
sub
pop
or
filds
push
inc
push
clc
das
inc
push
mov
roll
and
mov
movsl
notb
and
movsl
lret
test
popf
mov
cld
test
insb
adc
popa
mov
lock
xor
shr
xchg
test
inc
mov
adc
inc
adc
out
loope
cmp
xchg
add
xchg
jp
and
inc
sub
popa
and
mov
mov
push
adc
movsl
in
add
sbb
divb
test
mov
clc
les
mov
shrl
mov
stos
push
mov
rcll
jns
xor
xor
mov
xor
and
push
xchg
xlat
jmp
and
test
sub
dec
cltd
and
inc
push
lock
sub
fwait
in
loopne
xchg
inc
loope
sbb
add
cmp
sbb
iret
inc
es
mov
jne
sbb
pop
dec
aaa
mov
popf
int3
mov
xor
sbb
lret
push
adc
jecxz
push
cmpsb
orl
fsubrl
mov
add
mov
orb
pop
imul
sbbl
out
imul
or
xchg
ljmp
and
sbb
insb
xchg
icebp
xor
xor
jle
movsb
push
in
and
in
pushf
mov
ret
cld
pop
add
dec
inc
scas
push
out
stc
add
push
cmp
popf
subl
fdivl
xchg
push
lock
sbb
push
and
scas
std
pop
loop
push
or
push
fdivrs
in
lods
repnz
leave
inc
outsl
push
hlt
leave
in
es
ds
inc
aas
loope
or
mov
iret
aaa
cmp
cmp
mov
movsl
add
or
shll
pop
fiaddl
sbb
ja
jbe
xor
sub
das
rolb
push
sti
ss
jbe
xchg
repz
popf
xchg
sbb
fldcw
daa
test
icebp
cmp
adc
xchg
jl
pop
aam
ss
push
mov
aam
lds
pop
lahf
adcb
push
push
dec
je
mov
xchg
addb
jo
cmpsl
push
paddsw
mov
add
lcall
loope
mov
xchg
cmp
ds
mov
push
and
scas
xor
push
sbb
sbb
adc
adc
xor
push
xchg
pop
push
xchg
and
into
pop
pop
adc
lods
lcall
aas
fsubrl
or
dec
insl
cld
outsb
ss
rcll
xchg
sub
sub
ret
mov
and
push
loopne
loope
push
mov
mov
or
mov
adc
rcrl
push
sbb
or
sahf
data16
roll
mov
adc
sbb
ss
cmp
andb
adc
call
mov
fcoms
out
mov
xchg
fidivs
xchg
cmp
mov
or
mov
sbb
push
stos
sub
push
adc
mov
lea
js
adc
sbb
add
lcall
inc
stc
cmp
mov
sub
nop
mov
inc
or
mov
xchg
data16
jge
dec
dec
jns
inc
repz
out
sbb
xchg
mov
out
repz
push
mov
sbb
adc
xchg
mov
pop
cmp
push
adc
inc
mov
testl
ljmp
aaa
mov
mov
gs
movsb
dec
dec
orl
mov
rcrb
call
sbb
addl
push
sbb
inc
test
out
mov
mov
outsb
and
sub
mov
mov
std
aam
cwtl
pusha
or
cmpsl
cmpsl
mov
fcoms
scas
cld
aam
add
in
call
push
lock
int3
sbb
nop
xor
fsubrs
cmp
jmp
ret
sub
es
sbb
add
iret
ljmp
xchg
fisttpl
mov
xchg
push
jbe
add
mov
sbb
ds
mov
sub
imul
clc
mov
out
inc
ds
sar
lea
stos
inc
nop
shr
mov
xchg
imul
jnp
cmp
or
shll
lahf
mov
loope
push
mov
test
imul
xlat
or
repz
fwait
adc
loopne
cmp
push
add
insb
cs
bound
lock
mov
pop
xchg
push
xchg
int3
mov
pop
js
nop
cmc
adc
repz
cmpsb
scas
jp
cwtl
addr16
pusha
cmpsl
mov
test
aad
jne
add
fbstp
inc
xchg
push
dec
mov
xchg
mov
lods
sub
aam
sub
aaa
sub
lds
push
sub
test
and
insb
cld
xchg
clc
jnp
push
out
jle
xor
mov
xlat
or
iret
sti
inc
add
pop
aaa
ret
ret
inc
mov
cmp
push
cld
dec
insl
popf
dec
stos
and
inc
iret
dec
add
xchg
cmp
mov
dec
xor
pop
in
outsl
scas
pusha
mov
dec
adc
pushf
cli
mov
xlat
pop
xor
hlt
adc
mov
push
mov
inc
das
push
push
stc
rorl
or
xor
int3
jno
lock
add
fiadds
popa
stos
lds
push
rclb
sahf
and
or
out
mov
push
dec
adc
sub
lcall
daa
cmpsl
cltd
jecxz
jb
mov
jl
outsb
or
nop
sti
push
xchg
jb
xor
push
ficompl
sub
aad
mov
pop
push
push
pop
inc
icebp
cmc
sub
sub
movsl
in
push
lock
enter
pop
fnstcw
into
loope
in
sub
push
adc
sbb
sbb
xor
mov
and
push
push
xor
mov
xlat
pop
ja
mov
popf
dec
mov
nop
int3
lcall
sbb
xchg
jmp
outsb
cltd
sbb
adc
inc
rclb
mov
dec
mov
cmp
xchg
mov
push
mov
push
jecxz
or
mov
rolb
enter
add
dec
cmp
push
mov
test
addl
stos
jae
stc
repz
push
mov
jle
lcall
add
fmul
push
insl
out
and
push
xor
sub
push
mov
insl
into
inc
cmc
sbb
mov
adc
aas
popa
adc
roll
sbb
add
adc
lods
lock
dec
mov
mov
sub
es
mov
mov
sbb
pop
adc
inc
cltd
stos
gs
mov
dec
stos
or
inc
push
mov
fsts
icebp
les
scas
xchg
xchg
mov
cmp
mov
pop
in
popf
pop
adc
add
mov
clc
inc
adc
add
cwtl
add
mov
movsb
ja
clc
jne
je
out
das
jecxz
push
ljmp
sbb
int3
mov
adc
mov
adc
dec
scas
loope
xchg
out
pop
push
in
inc
movsl
in
inc
mov
inc
xor
inc
bound
or
repnz
sbb
test
insl
insl
mov
cmpsl
cmpsb
or
or
ret
cld
incl
mov
mov
fistps
pop
scas
mov
sub
imul
mov
dec
sbb
dec
mov
xchg
clc
push
mov
sub
and
dec
mov
and
jmp
icebp
packsswb
fcomps
mov
push
push
push
cs
inc
fisttpll
cmp
into
dec
fcompl
cli
jle
rcll
imul
sub
add
mov
je
das
cld
loope
sbb
ss
sbb
mulb
xor
jnp
mov
in
dec
dec
out
adc
test
sub
jg
cmp
dec
jb
ret
fwait
inc
les
fistpl
daa
imul
xor
cmc
sbb
mov
mov
pushf
xchg
movsl
sub
mov
stos
outsb
les
push
cmpl
or
mov
sbb
dec
ffreep
mov
ja
mov
pop
or
xchg
or
xchg
sub
xchg
xchg
jle
sub
lods
pop
add
shrb
stos
movsl
lcall
addr16
fnstcw
mov
mov
pusha
jb
mov
pop
rcll
ret
jbe
outsb
add
inc
lds
cli
jae
mov
push
mov
mov
in
dec
cmp
fiaddl
xchg
clc
sbb
insl
scas
ret
add
push
loop
fists
push
je
mov
sub
leave
xor
hlt
pop
outsb
in
arpl
cmpsb
add
icebp
or
cmpsl
mov
push
add
fs
das
scas
fisubs
loop
shrb
call
cmp
cltd
aaa
out
jbe
shll
jns
mov
cmp
lods
pop
jl
push
stc
dec
adc
mov
xor
imul
push
std
xchg
aaa
test
xchg
imul
cmpsb
lods
add
enter
pop
sbb
jmp
loope
xor
sub
aad
cmp
xor
and
add
xorb
sbb
add
cmpsl
xor
fcomi
pop
sahf
inc
mov
pop
push
loop
lcall
push
sub
lahf
aaa
outsb
cld
gs
push
inc
inc
rcrb
xchg
mov
jne
mov
xchg
and
das
mov
out
mov
and
sub
and
xchg
movsb
lret
stos
ror
xor
fs
lods
jnp
test
adc
adcb
outsl
inc
out
sti
loop
adc
mov
push
xchg
mov
int
shlb
mov
lods
cmp
xchg
std
out
inc
data16
shrl
xor
and
or
into
push
mov
cmc
in
xor
jle
pop
es
pop
adc
scas
jecxz
dec
into
arpl
sbb
data16
add
mov
sarl
sub
inc
mov
sbb
mov
or
cltd
call
mov
push
dec
or
adc
mov
lret
repz
xchg
mov
push
xor
or
in
adc
inc
pushf
dec
fs
test
jne
adc
add
out
aas
repnz
cmp
xlat
xchg
dec
outsl
pop
cwtl
je
adc
jge
xchg
mov
cmc
lea
add
fs
mov
jbe
mov
xor
push
stos
iret
fcmovnb
cmpsb
mov
mov
or
mov
jmp
clc
gs
roll
mov
std
adc
dec
cwtl
dec
and
movsl
or
mov
dec
aad
cld
sub
lret
lret
sub
sub
push
inc
rcrb
into
dec
sub
sub
dec
push
aam
adc
outsl
pop
rep
icebp
outsb
lea
jmp
inc
ljmp
mov
mov
shrl
pop
mov
ret
add
mov
cmc
test
lret
sub
xchg
fnsave
filds
sbb
inc
lods
pop
pop
pop
cs
and
movsl
xchg
test
adc
mov
pop
pop
or
pop
xor
and
rolb
push
sarl
out
nop
dec
jb
mov
or
add
push
jle
cmp
mov
sub
bound
jo
in
mov
xchg
hlt
std
ja
push
cmp
mov
gs
addr16
mov
insb
mov
xchg
pop
dec
ret
jne
push
mov
mov
pop
xchg
sti
out
jmp
dec
adc
out
add
sub
mov
std
jp
sbb
push
and
pusha
insb
rcrb
jnp
and
out
in
in
pusha
or
imul
pop
movsl
loope
inc
shrb
push
popf
fwait
stos
xchg
mov
int
popf
int3
ficoml
mov
ret
cmp
sub
loope
ds
jge
ror
lods
sbb
stos
sub
arpl
daa
dec
or
and
aaa
ja
inc
or
insb
or
inc
cltd
js
pop
sarb
lds
xor
enter
int
mov
lea
movsb
flds
add
xchg
jge
mov
fisubs
movsl
lahf
mov
fadds
jno
xchg
jl
adc
cltd
and
pop
cmp
xor
ljmp
rorb
lahf
push
pop
rolb
cmpsb
xor
int
flds
sahf
push
sbb
loope
cmpsb
ljmp
scas
xor
movsl
sub
and
leave
sub
inc
stos
lret
sbb
mov
xor
nop
push
dec
adc
jmp
js
add
repnz
arpl
sub
fisubrs
outsb
pop
mov
mov
jg
int3
shll
sub
add
sub
add
mov
scas
sub
lea
testl
shll
mov
sub
sbb
jo
test
push
subb
mov
loop
ljmp
fsubl
adc
mov
cmp
inc
cmp
out
in
sahf
cli
add
cmc
xor
push
cmp
adc
or
xor
scas
xor
test
inc
mov
xor
outsl
sbb
sbb
jno
ljmp
cmp
xlat
inc
dec
mov
rolb
xor
sti
mov
pushf
decb
mov
inc
dec
imul
pop
fld
lods
aad
repz
or
das
jp
cmp
mov
mov
sbbb
xchg
adc
call
test
je
xchg
fsubs
dec
aad
pop
rcll
xchg
sub
cmpsl
fimull
cmp
je
imul
leave
or
mov
fcomip
shll
mov
push
and
jl
fcomi
sub
pop
cwtl
push
lods
inc
mov
lea
scas
outsb
das
mov
mov
mov
pop
pop
push
rorl
push
lods
std
mov
dec
loope
movsb
xchg
loop
jno
mov
and
data16
push
andb
cmp
arpl
jge
lods
lock
jle
in
pop
jb
cmp
not
inc
cmpsb
mov
ror
repnz
mov
jne
dec
xlat
or
xchg
jbe
icebp
ljmp
jbe
inc
addr16
mov
lods
enter
adc
stc
add
push
cltd
cs
test
mov
xchg
fstp
push
sahf
clc
mov
xlat
xchg
repz
sbb
lahf
roll
mov
stos
adc
adc
sbb
in
outsb
lcall
sub
or
sti
sbb
and
xor
mov
dec
mov
jns
ja
sbb
sbb
lods
ds
or
dec
ds
mov
inc
add
add
and
bound
leave
xchg
jns
inc
movsb
in
in
loope
inc
pop
outsb
mov
push
loop
test
cmp
and
jp
pop
push
mov
rorb
add
in
negb
clc
dec
movsl
jnp
jne
nop
or
aam
mov
jmp
adc
and
mov
xchg
sub
mov
push
push
out
loopne
mov
and
cmp
push
jle
sbb
inc
dec
pusha
test
fmulp
sbb
ret
dec
pop
fsubl
inc
fldt
jae
jae
push
inc
shrb
mov
dec
cmpsb
ret
fisubrl
sbb
jne
imul
shrl
pop
lds
mov
mov
repnz
leave
and
jge
adc
push
inc
dec
rcrl
aaa
cltd
xlat
push
ss
adcb
add
push
fcompl
mov
fsubrp
pop
xchg
vsqrtss
scas
lods
jae
and
cmc
mov
or
dec
movsb
fs
adcb
bound
mov
jmp
daa
movsb
call
lcall
mov
sub
ds
cli
xor
pop
int
lahf
cld
inc
cmc
push
mov
mov
aaa
inc
sahf
pop
cmpsb
mov
ljmp
outsl
pop
xchg
cmp
loope
cmp
sub
sbb
movsl
das
nop
and
dec
push
imul
lret
add
cmpsb
fidivs
dec
push
jmp
adc
jp
js
aas
rolb
or
fstps
xor
stos
sub
loope
outsb
ret
adc
shlb
jb
test
add
lahf
sub
and
dec
pushf
push
in
inc
xor
lock
cmpsl
testl
xor
mov
into
jle
repnz
aaa
test
xor
dec
rcrb
fs
push
stc
sbb
xchg
imul
cmp
std
sub
out
pop
pop
cli
aaa
lods
jge
jecxz
cmpb
dec
or
and
mov
jb
lods
xor
cmp
pop
fs
cltd
adc
mov
adc
imul
hlt
cmp
mov
mov
pop
sub
lods
mov
repnz
data16
jae,pn
gs
jne
loopne
xchg
dec
enter
aas
lahf
fincstp
data16
loopne
sbb
pushf
dec
adcb
ret
std
adc
or
in
push
xchg
popf
adc
adc
jmp
mov
cmp
aad
jp
nop
sub
cmp
xor
cli
jb
fldcw
pop
push
mov
jecxz
pop
add
int3
jno
ljmp
mov
enter
repnz
cmpl
inc
pop
pop
cmp
add
mov
inc
icebp
shl
das
pushf
xor
mov
pop
aaa
and
pop
adc
mov
mul
push
std
bound
lcall
idivl
clc
into
aad
cmpb
test
mov
mov
push
jae
int3
add
pusha
rorb
pop
sub
adc
lea
gs
jne
or
dec
sarb
jle
xorl
lods
lods
data16
repnz
mov
and
mov
cli
lret
inc
sub
ret
jb
mov
icebp
sbb
push
popf
pop
jbe
jmp
fwait
xchg
cmp
adc
rcrl
add
stos
decl
mov
push
shrb
dec
or
out
js
or
in
xor
jae
mov
in
adc
dec
and
subl
cmpsl
rorb
dec
inc
inc
in
jbe
andl
shlb
push
les
mov
fcoms
out
jae
bound
mov
in
jnp
xchg
xchg
je
mov
out
mov
fistl
add
push
lods
push
mov
call
push
mov
mov
jne
xor
fcomip
jg
xchg
mov
je
xchg
fbstp
xor
cmpsl
ja
mov
arpl
repnz
jle
or
cmc
jnp
inc
push
jle
add
pusha
inc
aas
fcmovne
ja
pop
enter
adc
and
push
or
jecxz
sbb
ficompl
mov
sbb
fidivs
scas
in
mov
notb
xchg
jae
mov
and
ss
cwtl
pusha
adc
inc
movsl
or
inc
ds
dec
out
outsl
or
sbb
pop
or
inc
add
mov
sbb
pusha
push
fimuls
js
decb
imul
gs
ret
movsb
out
repz
xchg
jbe
insl
sub
inc
sbb
mov
cmp
mov
jl
pop
or
mov
push
and
sub
jp
leave
lahf
sbb
jno
jbe
ds
repnz
xchg
inc
sub
in
jbe
mov
jnp
iret
in
push
pop
aad
mov
mov
clc
jp
jecxz
lock
das
add
movsl
sub
or
mov
sbb
xor
add
adc
xor
gs
fcoms
stc
js
or
ss
push
faddl
cmpsl
jno
and
sarb
jg
testl
mov
cmp
lcall
shrb
xor
stos
test
fiadds
clc
pop
leave
sbb
sub
jg
or
jecxz
mov
stc
iret
insl
dec
fs
mov
mov
sbb
fdivrs
lds
xor
jno
or
and
divl
xor
pop
orl
int3
add
popf
or
push
repz
pop
lods
mov
mov
fwait
add
mov
push
pop
in
pop
sbb
adc
dec
cmp
call
lods
dec
daa
jae
inc
push
arpl
fldcw
loop
jmp
call
xchg
jmp
out
mov
cmp
leave
mov
mov
adc
add
inc
shrb
jno
aad
sti
dec
nop
add
imul
dec
test
stos
je
aaa
int3
jecxz
lret
test
lea
cli
call
aam
stos
mov
jae
adc
aas
dec
adc
add
xchg
js
rorl
das
jnp
add
sbb
and
dec
imulb
scas
std
std
or
add
xlat
rorl
iret
add
stos
dec
dec
lret
sbb
inc
mov
cmc
les
daa
push
lock
sub
push
sub
fstps
xlat
xchg
ret
hlt
push
cwtl
es
cs
insl
cmpsb
das
sbb
add
mov
ljmp
loopne
sbb
pop
mov
cmp
aam
mov
hlt
mov
add
adc
into
mov
push
cmp
and
clc
es
addl
mov
cld
pop
pop
jns
stos
out
xor
out
push
enter
jmp
push
fwait
subps
xchg
shlb
push
rorl
shlb
xor
sbb
mov
lock
jns
mov
test
sbb
ja
mov
dec
dec
dec
rolb
decb
push
or
incl
inc
jae
add
rclb
push
and
bound
jae
stos
into
push
in
pop
insb
xchg
loope
dec
mov
jmp
mov
xchg
and
add
cmpsb
mov
and
mov
aam
pop
dec
imul
jne
cmp
fists
pop
fistl
sub
and
stos
orl
mov
outsl
inc
or
xor
xchg
test
adc
sbb
jle
push
mov
pusha
fidivrs
iret
inc
dec
ret
add
pop
pop
inc
icebp
cmc
divl
inc
push
push
lret
ret
add
push
stc
inc
dec
and
adc
test
sbb
sbb
imul
int
dec
mov
cmp
jb
xor
jbe
or
mov
hlt
mov
arpl
cmpsl
loop
push
xorl
aaa
mov
push
or
pop
add
dec
imul
inc
push
pop
jmp
inc
fisubrs
cmp
lds
std
rcrb
jp
push
test
inc
or
jns
andl
jbe
mov
jge
loope
sbb
mov
ret
mov
aas
lds
in
push
add
adc
jo
int
lahf
cmp
push
dec
popf
subb
add
inc
mov
int
in
cltd
int3
jle
lret
pop
adc
repz
mov
out
sub
sarl
cmp
gs
ret
cmp
cwtl
aam
push
scas
in
addb
cmp
bound
out
sbb
pop
cmp
js
outsl
mov
or
lcall
sub
cs
mov
adc
mov
jg
xchg
out
jmp
rorl
ds
je
push
jae
push
repnz
mov
cld
ret
xor
shll
xor
pop
dec
bound
push
in
addb
aaa
loop
mov
test
adc
addb
mov
cmp
fdivs
out
xor
in
xor
fisubrs
or
into
into
into
cmc
add
add
mov
pop
mov
jmp
and
adc
fildl
add
dec
lods
jae
mov
adc
xlat
add
and
sub
dec
mov
enter
ficoms
je
andb
push
loopne
add
dec
xchg
sbb
fldenv
push
imul
call
xchg
lods
mov
cmp
xchg
or
sti
pop
insb
or
adc
shrl
pushf
stc
or
jmp
mov
loope
nop
fbstp
gs
outsb
mov
jb
lods
dec
dec
dec
mov
je
sbb
jecxz
roll
lea
adc
mov
sub
mov
pop
subl
dec
push
pop
andl
dec
inc
daa
push
cmp
pop
cmp
jle
aam
cmp
xchg
jl
xchg
insb
or
std
mov
sti
cwtl
ret
cmpsl
mov
pusha
adc
cld
ljmp
cmc
sub
rclb
adc
dec
test
shlb
dec
cmc
aam
push
mov
andl
insl
loop
dec
enter
xor
ljmp
push
lods
and
mov
pop
daa
xchg
and
repnz
add
and
test
idivb
std
cmc
pop
fisttpll
mov
popa
sbb
xchg
rcrb
dec
mov
or
pop
add
out
stos
frstor
jge
adc
push
jbe
dec
pushl
gs
xor
adc
xchg
repnz
repnz
test
inc
mov
dec
ds
inc
jno
pop
or
adc
push
or
add
push
arpl
out
xor
lret
dec
xchg
jns
mov
in
xchg
add
pop
arpl
mov
push
adcb
mov
jnp
cld
xorl
andl
dec
dec
mov
jne
movsb
shll
xor
jnp
inc
mov
jmp
jne
cmc
addl
out
sub
or
idiv
stos
in
xchg
and
into
jnp
je
jle
mov
add
iret
xor
mov
or
push
jae
adc
push
mov
popf
aaa
pop
xchg
mov
leave
cmpsl
fcmovu
lds
xchg
jg
fistpl
test
mov
adcb
push
adc
ss
leave
add
hlt
insl
push
arpl
xor
push
xchg
insb
inc
mov
aaa
jae
sub
pop
xor
push
int3
repz
pop
sbb
sbb
rolb
lds
mov
mov
cmp
movsb
jp
add
fildll
jge
pusha
lcall
and
scas
daa
mov
stos
fdivl
push
mov
stos
dec
aas
fildl
out
in
xor
xor
jge
pop
sbb
push
sbb
mov
jge
sahf
push
mov
movsl
cmpsb
cmp
pusha
in
xorb
lds
jmp
mov
fidivrl
cmp
sar
out
dec
std
movsl
inc
mov
and
mov
adcb
ret
in
pop
xor
cmpsb
lods
pop
popa
sbbb
jmp
pop
mov
mov
popa
rcll
outsb
jmp
fstl
arpl
test
xor
mov
xchg
mov
out
in
and
push
push
cmc
adc
sub
repz
lret
xchg
sarl
sbb
rcrl
push
sbb
outsl
mov
dec
idiv
cmp
scas
adc
pop
xchg
into
repz
fsubrs
addr16
subb
xor
mov
pop
in
or
pop
into
mov
mov
dec
pop
rorl
adc
cmp
imul
pop
jae
sbb
lods
pop
cmpsb
mov
inc
dec
les
sahf
lods
lret
leave
movsl
in
xor
sti
jae
xchg
loopne
gs
sbb
inc
loope
dec
in
flds
xchg
fstps
enter
ss
outsl
imul
mov
mov
fadds
sub
pushf
movsb
xchg
cs
aad
push
jl
aas
or
jecxz
dec
ret
je
push
js
enter
aad
adc
lret
lock
mov
and
mov
addl
mov
pop
and
mov
mov
inc
inc
mov
das
cmp
mov
mov
and
cmp
ror
mov
imulb
mov
cwtl
jge
xchg
cmpsl
mov
mov
xlat
cld
add
lret
idivb
pushl
fldl
pop
imul
add
aam
cmp
ret
adc
xlat
or
jns
dec
ret
dec
mov
jb
ljmp
fisubrs
pop
out
mov
enter
lea
cmpsl
setge
add
mov
mov
daa
les
jae
fnsave
clc
pushf
pop
jne
enter
sub
test
pusha
jne
pop
scas
push
lds
sbb
hlt
xchg
pop
dec
rclb
xchg
sub
aam
outsl
xor
test
mov
mov
testb
dec
pop
ljmp
mov
push
loope
or
testl
out
push
lods
mov
add
sub
push
out
adc
jns
in
and
xchg
jg
test
mov
or
xchg
add
sub
fiadds
mov
pop
pop
mov
mov
dec
xor
jne
jae
mov
inc
push
push
sbb
xchg
sbb
and
xchg
inc
pop
push
adc
out
adc
xchg
or
mov
pop
and
sbb
insb
jmp
mov
jle
fldl
imul
inc
ret
adc
jecxz
inc
pop
int3
loop
jno
fs
push
test
pop
ret
lret
das
xchg
mov
fidivrl
outsl
xchg
inc
push
sbb
adc
imul
add
hlt
les
sub
mov
sbb
and
std
cmp
hlt
and
clc
arpl
and
add
push
xor
sbb
push
icebp
fmul
fiadds
mov
lds
loopne
rorb
scas
sub
or
out
inc
movsb
nop
push
fs
jae
fwait
jbe
sub
jge
ret
test
daa
mov
inc
mov
imul
insb
dec
scas
xchg
adc
xor
mov
setg
or
test
push
lret
ficompl
sbb
addr16
bswap
rcr
pop
xchg
lds
loope
add
and
push
cmp
das
lds
adc
mov
and
andb
mov
push
mov
test
cmp
and
pop
mov
ljmp
pop
push
mov
pop
sub
xchg
shrl
and
adc
ds
je
and
enter
inc
mov
push
mov
gs
je
mov
clc
jmp
lock
hlt
testl
fs
push
pop
repz
shrl
test
addl
mov
fwait
stc
hlt
cltd
es
jecxz
adc
xor
cmp
jmp
out
cli
add
fidivrl
xor
or
cmp
into
mov
rclb
inc
sahf
pop
pop
loopne
icebp
adc
mov
xor
adc
cli
out
add
loopne
data16
shrl
mov
or
adc
movsl
mov
sahf
lods
cld
sti
and
mov
cltd
movsb
loopne
rcr
dec
inc
insb
add
out
sub
les
aaa
repz
sbb
jmp
push
pusha
pop
rclb
adc
push
jmp
add
cs
nop
push
aad
xlat
bound
lods
ja
jb
dec
mov
cmp
das
je
loopne
jecxz
scas
mov
lea
popa
jp
adc
xchg
sbb
cld
fneni(8087
cmp
pop
pop
addb
sti
inc
pop
daa
pop
das
sbb
mov
inc
lock
and
inc
not
sbb
scas
std
decb
push
cmpsl
lahf
repnz
icebp
push
jb
cld
sub
jne
gs
or
mov
pusha
adc
pop
mov
jb
pop
call
xor
cmp
ret
mov
pop
and
hlt
testl
sub
ljmp
in
lods
pop
lods
pop
mov
mov
cmp
paddb
leave
cltd
inc
lahf
pop
test
lret
insb
insb
push
push
andl
fwait
add
clc
xlat
sub
xchg
test
fcomip
std
shll
or
mov
fisubs
mov
jo
pushl
dec
xor
and
xor
add
jnp
sahf
xchg
mov
shrl
decb
and
icebp
inc
lahf
or
das
adc
push
mov
jp
inc
mov
inc
cli
add
jns
lock
in
std
inc
xchg
into
xchg
add
enter
stc
test
adc
insl
mov
scas
xor
mov
and
cmpsb
fwait
mov
sbbl
in
xchg
pop
jmp
or
sbb
inc
jne
sub
popf
pop
jg
and
mov
ficompl
jnp
mov
jle
push
mov
pusha
scas
mov
iret
repz
pop
ret
xchg
pop
out
pushf
filds
pop
jae
js
push
adc
jge
test
mov
cmp
fisubrl
pop
cmpsl
xchg
sub
int
imul
or
shl
adc
mov
mov
outsl
fcomp
leave
je
ret
hlt
insb
xchg
inc
pop
out
outsb
or
add
dec
aaa
icebp
dec
fisttpl
inc
jnp
add
data16
mov
ficomps
cs
lds
mov
and
das
xchg
cmp
lret
ret
jbe
stos
dec
jge
or
daa
lahf
adc
cmp
xchg
xor
repz
fbstp
push
lods
jns
xor
out
pop
lahf
xchg
bound
ret
test
push
sub
imul
in
dec
addr16
mov
mov
push
and
sub
add
cmp
xor
and
mov
cmpb
push
add
adc
xor
in
or
scas
mov
push
pop
xchg
push
jecxz
push
sub
pop
dec
adc
sbb
aad
ret
jge
mov
xor
mov
notb
pop
xor
xorl
int
add
ret
sahf
insl
test
dec
jle
ljmp
sbb
or
roll
outsl
pop
or
loop
xor
stos
lock
fs
insb
push
adc
popa
jg
test
push
cmp
movsb
je
out
movsl
mov
ss
xor
rorl
or
mov
cmc
push
and
pushf
pop
call
xchg
adc
ja
imul
lock
lods
jmp
xorw
lods
sub
sbb
sub
xchg
in
or
enter
mov
fldl
gs
fs
lds
sbb
inc
sahf
jnp
aaa
nop
les
sub
repz
cld
repnz
cmc
xchg
sbb
and
movl
add
jmp
enter
subl
call
add
dec
pusha
std
jb
out
mov
mov
or
jecxz
cmpl
in
inc
and
shll
rcrb
dec
xorl
in
fisttpl
pop
aam
push
pop
inc
fnsave
inc
js
repz
negl
mov
stc
outsl
and
mov
push
std
movsl
inc
push
cwtl
repz
pop
cmpsl
sahf
xchg
aaa
mov
sub
or
aam
in
mov
fimuls
xchg
iret
insb
pop
cmpsl
pop
mov
sub
mov
ret
xor
popf
es
sbb
push
out
dec
mov
pop
xor
popa
or
lock
iret
cmpsb
mov
movb
and
ret
mov
or
ret
mov
jns
cli
xor
mov
cmc
cli
push
inc
lret
or
ret
clc
adc
mov
xchg
aam
rorl
and
add
cmpb
cmp
push
pop
arpl
adc
mov
or
div
mov
cld
movsl
fmull
std
and
and
orb
inc
inc
ss
mov
fwait
mov
loope
add
pop
mov
lea
mov
jecxz
push
xchg
sbb
test
outsl
pop
adcb
push
fldl2t
mov
jnp
mov
nop
mov
dec
testl
push
fisttps
addr16
xchg
or
out
dec
cmpsl
sub
cwtl
pop
outsl
push
pusha
fldt
stos
cmp
inc
ret
insb
mov
jns
jle
xor
in
mov
movsl
iret
push
test
daa
jns
pop
es
incl
push
movlps
push
xlat
push
lcall
inc
mov
inc
inc
dec
cltd
fcmovu
call
sbb
pop
fldt
push
or
sbb
fists
fiadds
cld
mov
ret
leave
jmp
jge
mov
in
outsb
out
inc
pop
push
dec
or
jg
dec
aaa
mov
dec
or
dec
add
mov
mov
aas
pop
cmpsl
das
sbb
lds
jmp
rolb
inc
and
sub
test
fisubl
push
fwait
sub
xor
sbb
inc
daa
sahf
jb
cmp
and
ds
mov
push
nop
test
xor
inc
mov
and
in
test
jmp
pop
sbb
xor
or
push
mov
sub
adc
xor
xchg
xchg
movsl
pop
or
and
outsl
addr16
or
rcrb
adc
mov
xor
adc
pop
mov
js
shlb
fcompl
cmp
pop
xor
mov
add
adc
hlt
jecxz
jg
sub
mov
clc
nop
mov
or
and
repz
sub
push
mov
lret
lahf
roll
xor
sahf
rcrb
in
cwtl
outsl
ds
push
loop
jno
stc
jmp
fs
xor
mov
ret
jb
fcomps
fsub
jge
inc
cli
imul
cmp
fisttpl
enter
push
out
pop
xor
dec
mov
push
inc
or
stos
movsl
imul
cmp
cmp
ret
mov
rorl
push
dec
sub
outsb
xor
je
xchg
and
incb
loop
gs
lret
out
mov
inc
mov
sub
inc
out
les
nop
xor
mov
jmp
inc
daa
pop
cmp
test
add
jae
adc
add
loopne
std
push
or
aad
pop
insl
nop
dec
push
aas
ljmp
dec
daa
mov
inc
jecxz
fwait
iret
fimuls
lea
call
sbb
mov
and
ds
pop
or
gs
das
jae
mov
mov
add
in
push
lock
pushl
dec
fistps
cmpsl
popf
mov
mov
add
cld
cmpb
mov
mov
jns
movb
cmpsl
insl
sub
mov
ret
mov
mov
lret
adc
xchg
das
push
mov
xor
cli
popa
and
pop
lods
das
mov
jmp
push
jp
pop
addb
jns
mov
cltd
scas
stos
outsb
test
ret
or
xchg
clc
dec
xchg
push
xchg
or
inc
imul
pop
mov
cmp
cltd
std
fucomi
inc
mov
xchg
das
dec
addr16
loop
or
mov
mov
loope
cli
or
aas
jge
cltd
xchg
xchg
xchg
push
scas
dec
mov
ss
ret
fidivl
shrl
int
les
dec
leave
push
xchg
cld
movb
imul
lods
imul
jns
out
in
mov
xchg
insb
cmp
mov
cmp
cltd
push
jp
fs
mov
jmp
sbb
add
jne
cmp
and
fsubr
xchg
xchg
outsb
mov
sti
jno
xchg
mov
sbb
out
nop
xchg
sub
xchg
jmp
push
lahf
das
inc
stos
mov
sub
or
lahf
insb
sub
in
jle
dec
in
in
mov
enter
ja
cmp
jg
pop
sti
aam
sub
ret
out
jg
lcall
mov
ficoml
adc
imul
scas
ds
push
popa
mov
jo
mov
jg
leave
flds
arpl
incl
daa
dec
or
cli
popa
jecxz
outsl
dec
mov
add
lock
int3
lahf
mov
ret
jmp
ffreep
mov
mov
idivl
or
lock
xor
pop
jbe
add
or
enter
jo
jo
add
pop
aaa
jl
les
push
jae
inc
xor
pushf
sub
adc
js
test
mov
cld
inc
xchg
mov
sbb
ror
mov
xchg
dec
sbb
push
inc
push
loope
dec
addr16
repnz
cmp
adc
jnp
or
pusha
cli
and
vpshab
dec
xchg
int
mov
push
into
pop
std
push
sarl
push
push
pop
test
mov
push
ja
push
xchg
decb
sub
faddp
adc
iret
hlt
cmpsl
jg
fstps
mov
lahf
mov
sub
mov
ret
mov
push
add
sub
sub
test
rcrl
adc
popa
hlt
sahf
addr16
test
add
