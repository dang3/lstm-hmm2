push
mov
mov
add
mov
mov
mov
sub
mov
sub
push
call
mov
mov
sbb
mov
push
or
add
push
call
mov
mov
mov
sub
mov
call
mov
add
mov
mov
mov
call
mov
mov
mov
mov
sub
push
push
call
mov
sub
sub
mov
add
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
sub
mov
mov
mov
mov
add
lea
mov
push
call
mov
mov
mov
mov
mov
mov
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
mov
add
mov
add
mov
mov
sub
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
add
mov
add
mov
mov
mov
mov
sub
push
pushl
call
mov
mov
or
sub
mov
push
mov
push
call
sbb
mov
add
mov
mov
lea
push
call
mov
mov
mov
mov
mov
or
mov
mov
call
mov
mov
mov
xor
mov
mov
push
push
call
mov
mov
sub
mov
mov
add
mov
mov
add
push
call
mov
mov
sub
mov
add
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
mov
mov
push
call
mov
mov
sub
lea
push
call
mov
mov
and
mov
mov
mov
call
mov
mov
sub
mov
mov
add
call
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
add
call
mov
mov
sub
mov
mov
mov
push
mov
push
call
mov
mov
add
add
mov
pushl
mov
mov
push
call
mov
mov
add
add
mov
call
mov
mov
mov
mov
adc
sub
call
mov
mov
add
mov
mov
mov
mov
push
orl
push
call
mov
mov
mov
add
mov
mov
mov
push
push
call
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
lea
mov
mov
push
call
mov
xor
sub
mov
add
mov
mov
mov
push
call
mov
add
mov
sub
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
incl
lea
mov
push
call
mov
mov
mov
mov
sub
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
sub
pushl
mov
pushl
call
mov
mov
mov
mov
mov
mov
or
lea
push
mov
pushl
call
mov
mov
sub
mov
mov
mov
mov
mov
lea
push
call
mov
mov
sub
mov
mov
call
mov
mov
mov
mov
mov
add
pushl
mov
mov
push
call
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
push
push
call
mov
and
add
mov
adc
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
push
push
call
mov
mov
or
mov
mov
mov
sub
call
mov
sbb
xor
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
add
call
mov
mov
sub
mov
mov
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
add
mov
mov
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
add
call
mov
mov
mov
mov
or
mov
mov
call
mov
mov
mov
mov
sbb
add
mov
mov
mov
push
push
call
mov
mov
sub
mov
call
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
sub
mov
mov
sub
mov
mov
xor
push
mov
push
call
mov
mov
and
sub
mov
sub
call
mov
mov
add
mov
mov
sub
mov
mov
push
mov
push
call
mov
or
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
or
mov
mov
add
lea
push
call
mov
mov
add
sub
mov
mov
lea
push
call
mov
mov
sub
mov
mov
call
mov
mov
sub
mov
mov
sub
mov
mov
call
mov
mov
add
mov
mov
add
call
mov
mov
mov
mov
mov
mov
push
mov
mov
push
call
mov
mov
sub
mov
call
sub
mov
mov
mov
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
sub
call
mov
mov
add
mov
sub
or
call
mov
mov
mov
mov
sub
call
mov
mov
mov
mov
mov
mov
call
mov
xor
add
mov
mov
mov
lea
push
call
mov
mov
add
mov
mov
lea
push
mov
push
call
mov
mov
mov
mov
sub
call
mov
sbb
mov
mov
mov
add
mov
mov
mov
mov
lea
push
call
mov
mov
sub
mov
mov
mov
mov
lea
mov
push
call
mov
mov
and
mov
mov
mov
mov
mov
pushl
lea
push
call
mov
mov
mov
mov
add
mov
sub
call
mov
mov
add
mov
mov
mov
mov
lea
mov
push
call
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
sbb
mov
call
mov
mov
mov
mov
mov
add
mov
sub
push
call
mov
mov
mov
mov
mov
mov
or
push
mov
pushl
call
mov
mov
mov
and
add
mov
push
push
call
mov
mov
add
mov
add
call
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
sub
mov
push
push
call
mov
mov
mov
mov
sub
mov
call
mov
mov
sub
mov
mov
mov
mov
push
mov
mov
push
call
mov
mov
mov
sub
mov
mov
call
mov
or
add
mov
mov
mov
add
mov
push
push
call
mov
mov
sub
mov
mov
mov
mov
push
push
call
mov
mov
and
mov
mov
mov
call
mov
mov
add
sbb
add
mov
sub
adc
push
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
call
mov
mov
mov
mov
mov
add
push
call
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
sub
mov
mov
mov
push
mov
pushl
call
mov
mov
xor
mov
mov
sub
mov
mov
sub
mov
mov
lea
mov
push
push
call
mov
mov
add
mov
push
mov
push
call
mov
mov
add
mov
or
push
push
call
mov
mov
sub
mov
lea
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
sub
sub
push
call
mov
mov
mov
mov
mov
mov
adc
mov
call
sub
mov
mov
mov
mov
lea
push
mov
lea
push
call
mov
mov
mov
mov
mov
sub
pushl
pushl
call
mov
and
mov
mov
mov
add
add
mov
lea
mov
push
call
mov
mov
mov
mov
push
mov
mov
sub
push
call
mov
mov
add
mov
mov
sub
push
mov
pushl
call
mov
xor
sub
mov
add
pushl
pushl
call
mov
mov
sub
mov
mov
add
pushl
pushl
call
mov
mov
mov
mov
mov
lea
push
mov
push
call
and
mov
mov
mov
mov
mov
call
mov
mov
add
add
mov
mov
mov
mov
mov
push
pushl
call
mov
mov
mov
mov
sbb
call
mov
mov
sub
mov
mov
push
call
and
mov
mov
mov
mov
mov
mov
mov
mov
pushl
mov
mov
push
call
mov
adc
mov
mov
call
mov
mov
xor
mov
mov
pushl
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
sub
push
pushl
call
mov
mov
mov
mov
mov
add
mov
push
push
call
mov
mov
mov
mov
sub
mov
sub
call
mov
or
sub
add
mov
mov
mov
pushl
incl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
pushl
mov
lea
push
call
mov
mov
add
mov
push
call
xor
mov
and
mov
mov
mov
mov
lea
mov
push
mov
pushl
call
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
mov
push
call
mov
mov
sub
mov
add
mov
mov
sub
call
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
sub
mov
pushl
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
lea
push
pushl
call
mov
mov
mov
mov
mov
add
push
push
call
sbb
mov
mov
mov
mov
mov
mov
lea
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
or
call
mov
mov
mov
mov
mov
mov
lea
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
add
mov
sub
call
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
push
lea
push
call
mov
mov
add
mov
mov
mov
mov
add
push
pushl
call
mov
mov
add
call
mov
mov
mov
mov
mov
or
pushl
mov
push
call
mov
mov
mov
mov
add
mov
mov
mov
push
pushl
call
xor
mov
sub
adc
mov
mov
call
mov
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
or
mov
sub
add
xorl
lea
push
call
mov
mov
mov
mov
mov
add
push
call
mov
mov
add
mov
mov
add
push
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
sub
lea
mov
push
call
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
and
xor
mov
mov
add
mov
mov
mov
call
mov
mov
sub
sub
mov
mov
push
mov
sub
push
call
mov
mov
add
mov
add
mov
mov
push
push
call
mov
mov
mov
sub
mov
mov
sub
push
mov
sub
push
call
mov
mov
sub
mov
add
mov
lea
push
lea
push
call
mov
mov
add
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
pushl
mov
pushl
call
mov
mov
add
and
mov
lea
push
call
mov
mov
sub
mov
mov
mov
add
lea
push
call
mov
mov
sub
mov
mov
mov
push
push
call
mov
mov
add
add
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
add
mov
and
mov
mov
call
sub
mov
mov
mov
mov
sub
mov
push
mov
push
call
mov
xor
sub
mov
mov
call
mov
mov
mov
mov
mov
add
mov
add
orl
push
mov
push
call
mov
mov
mov
sub
mov
call
mov
mov
add
mov
mov
mov
mov
add
push
mov
mov
push
call
mov
sub
add
mov
call
mov
mov
sub
mov
add
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
lea
mov
push
call
mov
mov
sub
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
lea
push
mov
push
call
mov
mov
mov
mov
mov
mov
lea
push
mov
push
call
mov
mov
add
mov
sub
mov
push
mov
lea
push
call
mov
mov
sub
mov
mov
mov
xor
call
mov
mov
add
or
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
add
mov
add
mov
mov
lea
push
call
mov
mov
mov
mov
add
mov
sub
push
sub
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
add
mov
push
push
call
mov
mov
add
mov
mov
mov
mov
sub
andl
pushl
pushl
call
mov
mov
mov
mov
add
mov
call
mov
mov
mov
mov
or
mov
mov
push
mov
pushl
call
mov
mov
mov
mov
sub
mov
push
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
or
add
mov
push
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
lea
mov
push
call
mov
mov
sub
mov
mov
add
mov
mov
mov
pushl
mov
lea
mov
push
call
mov
mov
mov
mov
mov
mov
mov
sub
call
mov
mov
mov
mov
mov
mov
add
push
call
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
and
mov
push
mov
lea
mov
push
call
mov
add
mov
mov
mov
mov
mov
sbb
add
call
mov
mov
add
mov
mov
mov
add
push
pushl
call
mov
mov
mov
mov
add
mov
pushl
push
call
mov
mov
mov
mov
sub
mov
mov
call
mov
or
mov
mov
mov
lea
push
call
mov
mov
sub
mov
sub
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
push
pushl
call
mov
mov
add
mov
mov
mov
add
mov
push
mov
add
push
call
mov
mov
add
mov
mov
call
mov
mov
xor
mov
xor
sub
push
mov
push
call
mov
mov
sub
mov
mov
sub
push
mov
push
call
mov
mov
add
mov
add
mov
push
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
add
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
push
push
call
mov
mov
sub
mov
mov
sub
mov
call
mov
mov
mov
mov
mov
mov
push
subl
push
call
mov
mov
add
mov
mov
add
mov
push
call
mov
mov
add
mov
call
mov
mov
mov
mov
add
mov
mov
push
and
push
call
mov
or
add
mov
call
mov
mov
sub
mov
mov
mov
mov
push
push
call
xor
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
and
mov
or
mov
sub
push
push
call
or
mov
add
mov
mov
add
add
mov
push
push
call
mov
mov
sub
mov
mov
mov
mov
mov
lea
push
push
call
mov
mov
add
mov
or
mov
call
mov
mov
add
mov
sub
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
sub
mov
call
mov
mov
add
mov
sub
mov
mov
push
call
mov
mov
add
mov
mov
mov
push
push
call
mov
mov
add
mov
sub
mov
mov
push
andl
push
call
mov
mov
sub
mov
mov
push
push
call
add
mov
sub
mov
mov
mov
add
mov
mov
push
mov
push
call
mov
mov
add
mov
add
call
mov
mov
xor
mov
mov
mov
mov
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
pushl
push
call
mov
mov
mov
mov
add
mov
mov
mov
push
push
call
mov
mov
mov
mov
add
mov
sub
mov
push
mov
push
call
mov
mov
mov
sub
mov
lea
subl
push
call
mov
mov
mov
mov
xor
call
mov
mov
sub
mov
mov
mov
pushl
mov
push
call
mov
mov
add
mov
mov
mov
mov
lea
mov
mov
push
push
call
mov
mov
mov
mov
add
pushl
mov
lea
mov
push
call
or
mov
sub
mov
mov
mov
mov
mov
push
mov
add
push
call
mov
mov
sub
sub
mov
call
mov
mov
add
mov
add
push
mov
push
call
mov
mov
sub
mov
mov
mov
push
push
call
mov
mov
add
mov
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
push
mov
mov
push
call
mov
mov
sub
mov
mov
add
push
call
mov
mov
sub
mov
mov
mov
adc
push
push
call
mov
mov
add
mov
add
add
sub
mov
lea
push
call
and
mov
mov
mov
mov
mov
pushl
mov
pushl
call
mov
mov
mov
mov
mov
mov
sub
push
call
mov
mov
mov
mov
add
mov
mov
and
pushl
lea
mov
mov
push
call
mov
mov
sub
mov
mov
sub
pushl
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
sub
mov
mov
mov
add
call
mov
mov
mov
sub
mov
sub
call
mov
mov
add
mov
pushl
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
add
call
mov
mov
sub
sbb
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
and
xor
call
and
mov
mov
mov
add
mov
push
push
call
mov
mov
sub
mov
mov
mov
push
call
mov
mov
mov
mov
mov
lea
push
call
mov
add
add
mov
push
call
mov
mov
add
mov
mov
sub
adc
push
mov
push
call
mov
mov
mov
mov
add
mov
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
mov
or
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
mov
lea
push
call
mov
mov
mov
mov
mov
call
mov
or
mov
mov
mov
push
call
mov
mov
add
mov
and
addl
lea
push
mov
push
call
mov
mov
sub
mov
mov
call
mov
mov
add
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
push
incl
push
call
mov
mov
mov
mov
sub
mov
mov
pushl
push
call
mov
mov
add
mov
add
sbb
mov
mov
push
mov
mov
sub
push
call
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
push
xor
push
call
mov
mov
sub
mov
mov
xor
mov
mov
push
mov
push
call
mov
xor
mov
mov
mov
mov
call
mov
mov
mov
adc
sub
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
xor
sub
call
mov
mov
add
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
push
mov
pushl
call
sub
mov
mov
sub
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
lea
push
subl
mov
pushl
call
mov
mov
add
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
add
push
push
call
mov
adc
add
mov
mov
push
mov
push
call
mov
mov
xor
mov
mov
call
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
sub
mov
mov
mov
pushl
push
call
mov
mov
sub
mov
mov
mov
mov
mov
or
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
call
mov
mov
add
mov
mov
mov
mov
xor
push
mov
mov
push
call
mov
mov
mov
mov
mov
sub
push
push
call
mov
mov
mov
mov
add
mov
mov
call
mov
mov
add
sub
sub
lea
push
call
mov
mov
mov
mov
mov
sub
push
mov
push
call
mov
mov
mov
mov
sub
mov
mov
mov
sub
call
mov
mov
sub
mov
mov
mov
mov
mov
sub
push
lea
push
call
mov
mov
sub
sub
mov
mov
mov
push
call
mov
mov
add
mov
sub
mov
pushl
push
call
mov
mov
add
mov
mov
mov
push
mov
lea
mov
push
call
mov
mov
sub
mov
mov
mov
sub
mov
lea
push
call
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
call
mov
mov
add
mov
mov
mov
add
mov
push
mov
push
call
sub
mov
sub
mov
mov
push
mov
push
call
mov
mov
add
mov
mov
mov
mov
pushl
pushl
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
lea
push
call
mov
adc
sub
mov
add
add
call
mov
mov
sub
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
add
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
call
mov
mov
add
mov
mov
mov
push
pushl
call
mov
mov
mov
mov
add
call
mov
mov
sub
mov
mov
sub
add
lea
push
call
mov
mov
mov
mov
mov
add
call
mov
mov
sub
mov
mov
mov
add
incl
push
push
call
mov
mov
mov
mov
mov
mov
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
push
push
call
mov
mov
add
add
mov
mov
push
mov
push
call
mov
mov
add
sub
add
mov
mov
push
call
mov
mov
add
mov
add
mov
mov
push
mov
push
call
mov
add
add
sbb
mov
and
add
push
push
call
mov
mov
add
mov
mov
mov
add
lea
mov
push
call
mov
mov
add
mov
mov
mov
mov
lea
push
call
mov
mov
add
mov
sub
mov
push
call
mov
mov
or
mov
mov
mov
pushl
mov
push
call
mov
mov
mov
mov
and
mov
mov
lea
mov
push
call
mov
mov
mov
and
add
mov
mov
mov
mov
pushl
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
push
mov
pushl
call
sbb
mov
mov
mov
add
mov
mov
pushl
push
call
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
call
mov
mov
add
push
lea
mov
push
call
mov
mov
mov
mov
add
push
call
mov
mov
or
mov
mov
push
push
call
mov
mov
mov
mov
mov
push
push
call
mov
mov
add
mov
sub
mov
mov
push
call
mov
mov
sub
mov
mov
mov
push
call
mov
mov
mov
mov
add
mov
or
call
mov
xor
sub
mov
mov
sub
pushl
mov
push
call
mov
mov
add
mov
mov
call
mov
mov
mov
mov
mov
add
push
mov
mov
push
call
mov
mov
mov
sub
mov
sub
call
mov
mov
add
mov
add
mov
push
mov
mov
push
call
mov
mov
mov
add
call
mov
mov
xor
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
push
call
mov
mov
mov
mov
xor
mov
mov
push
lea
push
call
xor
mov
sub
mov
add
push
mov
push
call
mov
adc
mov
mov
mov
call
mov
mov
sub
mov
add
mov
mov
push
call
mov
add
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
sub
mov
call
mov
mov
sub
mov
mov
call
mov
mov
add
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
lea
mov
push
call
mov
mov
mov
and
add
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
sub
lea
push
pushl
call
or
and
add
mov
mov
pushl
pushl
call
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
or
mov
mov
mov
and
pushl
push
call
mov
mov
sub
mov
sub
lea
push
call
mov
mov
add
add
mov
mov
add
push
push
call
mov
mov
sub
mov
mov
mov
sub
mov
lea
push
call
mov
mov
sub
mov
mov
mov
sub
mov
push
mov
push
call
mov
mov
add
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
push
mov
push
call
mov
mov
add
mov
mov
push
call
mov
mov
sub
or
mov
mov
call
mov
adc
sub
mov
mov
add
mov
mov
mov
mov
lea
push
lea
push
call
mov
mov
mov
xor
add
mov
mov
mov
mov
lea
push
mov
mov
push
call
mov
mov
mov
sub
or
mov
mov
mov
push
mov
mov
pushl
call
mov
mov
mov
mov
sub
lea
push
call
sbb
mov
add
mov
mov
mov
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
add
mov
mov
mov
mov
or
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
add
mov
add
call
mov
mov
sub
mov
call
mov
mov
mov
sub
mov
push
call
mov
mov
add
mov
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
add
mov
mov
call
mov
mov
add
mov
mov
push
call
mov
mov
sub
mov
mov
add
call
mov
mov
mov
mov
mov
add
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
pushl
mov
lea
mov
push
call
mov
sbb
sub
mov
mov
call
mov
mov
xor
mov
add
mov
lea
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
addl
pushl
call
mov
mov
mov
mov
mov
mov
call
mov
or
sub
mov
mov
call
mov
mov
mov
mov
add
mov
mov
and
mov
lea
push
mov
mov
mov
push
call
mov
mov
sub
mov
add
mov
call
mov
mov
add
mov
mov
sub
mov
push
mov
pushl
call
mov
mov
mov
sbb
mov
pushl
mov
lea
push
call
mov
mov
sub
mov
mov
mov
mov
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
or
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
cmp
ja
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
dec
jne
mov
mov
sub
mov
mov
mov
mov
mov
push
push
call
mov
mov
sub
mov
mov
xor
lea
push
lea
mov
push
call
mov
mov
sub
mov
mov
add
call
mov
mov
sub
mov
mov
push
call
adc
mov
mov
mov
mov
push
call
mov
mov
mov
mov
xor
push
call
mov
mov
mov
mov
pushl
lea
push
call
mov
mov
add
mov
sub
mov
push
lea
mov
push
call
mov
mov
mov
add
mov
pushl
mov
mov
push
call
mov
mov
mov
mov
add
mov
mov
lea
push
call
mov
mov
sub
mov
mov
mov
pushl
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
pushl
mov
push
call
mov
mov
add
mov
mov
mov
mov
andl
lea
push
call
mov
mov
mov
mov
add
sub
push
push
call
mov
xor
mov
mov
add
mov
mov
call
mov
sbb
sub
mov
mov
mov
mov
add
mov
mov
sub
push
pushl
call
mov
mov
add
mov
sub
mov
mov
pushl
mov
push
call
mov
mov
or
mov
mov
push
mov
lea
push
call
mov
mov
sub
mov
mov
lea
mov
push
push
call
mov
mov
mov
mov
or
mov
add
push
pushl
call
mov
mov
add
mov
mov
mov
add
call
mov
mov
mov
mov
mov
sub
add
call
mov
sbb
add
sub
or
mov
mov
lea
mov
push
call
mov
mov
mov
mov
mov
pushl
pushl
call
mov
mov
add
mov
mov
mov
mov
sub
lea
push
lea
push
call
mov
mov
xor
and
sub
mov
add
mov
push
call
mov
mov
mov
mov
mov
mov
call
mov
and
add
mov
sub
mov
mov
or
push
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
add
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
pushl
mov
lea
push
call
mov
mov
add
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
add
mov
push
sub
push
call
mov
mov
sub
mov
mov
mov
lea
push
call
add
mov
mov
mov
call
mov
mov
add
mov
mov
call
mov
mov
sub
mov
mov
mov
add
call
mov
mov
mov
sub
add
mov
mov
mov
push
push
call
adc
mov
sub
mov
sub
mov
mov
mov
push
sub
push
call
sbb
mov
sub
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
pushl
pushl
call
mov
mov
sub
mov
sub
adc
add
mov
push
call
mov
mov
mov
sub
lea
push
lea
push
call
mov
mov
xor
mov
mov
mov
call
mov
mov
mov
mov
add
mov
call
mov
mov
xor
mov
sub
mov
mov
mov
call
adc
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
lea
mov
push
sub
push
call
adc
sbb
sub
mov
add
lea
push
call
mov
mov
sub
mov
mov
sub
call
mov
mov
mov
mov
mov
push
push
call
mov
mov
add
xor
mov
mov
lea
push
call
mov
mov
sub
mov
mov
mov
mov
mov
pushl
push
call
mov
mov
xor
mov
mov
mov
mov
add
call
xor
mov
add
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
add
mov
sub
mov
push
lea
push
call
mov
mov
mov
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
sub
mov
mov
add
mov
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
push
pushl
call
mov
mov
mov
call
mov
mov
and
mov
sub
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
lea
push
call
and
mov
add
mov
mov
add
call
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
adc
mov
add
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
xor
push
push
call
mov
mov
mov
mov
mov
mov
add
push
push
call
mov
adc
add
mov
sub
mov
push
push
call
mov
mov
mov
mov
add
call
mov
mov
sub
mov
mov
sub
push
mov
push
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
adc
add
push
push
call
mov
mov
add
mov
mov
sub
call
mov
mov
mov
mov
mov
mov
push
pushl
call
mov
mov
sub
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
sub
mov
lea
push
call
mov
mov
mov
sub
call
mov
mov
add
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
pushl
call
mov
mov
mov
mov
mov
call
mov
adc
mov
add
mov
mov
mov
push
push
call
mov
mov
add
mov
mov
mov
push
push
call
mov
mov
mov
add
mov
mov
mov
push
lea
push
call
mov
mov
mov
mov
mov
add
push
call
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
mov
pushl
pushl
call
mov
mov
mov
mov
mov
mov
call
add
mov
mov
and
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
push
call
add
add
add
add
add
add
push
add
pop
jo
add
arpl
add
add
add
add
add
inc
add
add
dec
push
cmp
add
push
add
insb
arpl
add
add
add
add
jb
jbe
add
add
ja
add
popa
dec
xor
mov
mov
mov
mov
adc
mov
sub
mov
mov
pushl
lea
lea
push
call
mov
mov
mov
mov
mov
mov
mov
add
sub
mov
add
call
mov
mov
add
mov
sub
mov
mov
add
mov
sub
mov
mov
mov
call
mov
xor
mov
mov
mov
mov
mov
mov
sub
call
mov
mov
sub
mov
adc
mov
push
push
call
mov
mov
sub
mov
mov
or
call
call
mov
mov
sub
mov
sub
pushl
mov
sub
sub
push
call
call
push
push
call
mov
mov
mov
mov
mov
mov
add
call
mov
pushl
sub
push
call
mov
mov
mov
mov
add
or
mov
call
mov
mov
sub
mov
and
mov
mov
mov
mov
push
mov
mov
pushl
call
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
adc
mov
mov
mov
call
call
mov
push
call
mov
mov
sub
mov
sub
mov
mov
call
mov
mov
mov
mov
sub
mov
call
mov
mov
mov
mov
xor
xor
push
call
push
mov
mov
mov
mov
call
mov
add
sub
mov
mov
push
pushl
call
mov
xor
mov
mov
mov
mov
push
push
call
mov
mov
mov
add
mov
add
call
mov
mov
mov
mov
sub
call
mov
add
mov
add
call
mov
add
add
mov
mov
add
mov
mov
mov
mov
add
mov
mov
inc
mov
cmp
jne
mov
mov
mov
mov
mov
mov
push
push
call
mov
add
call
mov
mov
mov
inc
mov
mov
mov
sub
mov
mov
add
sub
push
mov
add
push
call
and
mov
mov
mov
push
push
push
push
push
call
mov
mov
add
mov
add
xor
push
push
call
mov
mov
mov
add
mov
mov
push
push
call
mov
mov
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
add
sub
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
xor
mov
sub
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
sub
sub
mov
sbb
and
add
mov
mov
mov
dec
test
jne
mov
xor
mov
mov
call
mov
mov
mov
sub
push
mov
push
call
mov
sub
mov
add
mov
mov
call
mov
sub
sub
mov
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
mov
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
call
mov
mov
mov
add
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
mov
sub
add
mov
mov
sub
mov
sub
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
add
mov
add
sub
mov
push
push
push
push
call
mov
sub
mov
push
call
sub
sub
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
sub
mov
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
sub
push
mov
push
call
mov
mov
sub
mov
mov
call
mov
mov
add
mov
mov
mov
pop
ret
push
mov
sbb
sub
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
sub
mov
mov
sub
mov
mov
mov
mov
push
pushl
call
mov
mov
sub
mov
mov
mov
mov
pushl
push
call
mov
mov
add
mov
xor
add
mov
mov
lea
mov
push
call
mov
mov
mov
mov
mov
mov
add
push
push
call
mov
mov
mov
add
mov
mov
push
call
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
inc
cmp
jne
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
add
call
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
add
call
mov
mov
mov
mov
mov
mov
call
call
call
mov
mov
add
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
add
mov
mov
mov
add
or
add
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
add
mov
mov
push
call
mov
add
mov
mov
mov
push
call
mov
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
sub
sub
mov
mov
ret
int3
int3
int3
int3
push
mov
mov
mov
add
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
mov
mov
add
push
add
push
push
call
mov
add
mov
add
sub
mov
xor
mov
pop
ret
int3
mov
add
mov
add
add
push
sub
pushl
mov
push
mov
push
call
mov
add
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
add
call
mov
mov
mov
mov
mov
push
push
call
and
mov
mov
mov
mov
sub
mov
call
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
add
mov
mov
add
mov
mov
xor
mov
mov
mov
xor
lea
push
mov
push
mov
push
call
mov
mov
or
mov
mov
add
mov
mov
sub
push
mov
lea
mov
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
pop
ret
push
mov
mov
add
mov
sub
push
mov
push
push
call
mov
sub
push
mov
push
push
push
call
mov
sub
xor
mov
sub
add
pop
ret
int3
push
mov
add
mov
mov
sub
mov
mov
push
push
call
mov
mov
mov
mov
add
mov
pop
ret
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
add
or
call
mov
and
mov
mov
mov
sub
or
sub
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
xor
mov
mov
mov
add
mov
add
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
add
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
add
inc
push
xchg
or
xchg
dec
and
and
and
mov
sbb
push
dec
cmpsb
les
in
lret
fistpl
and
in
mov
and
jge
sbb
sub
jecxz
ss
call
fisubl
leave
out
in
mov
lcall
pop
dec
push
mov
push
dec
xchg
mov
inc
leave
xchg
and
jle
and
xchg
test
and
dec
ss
xchg
aad
dec
push
and
xor
scas
fcomps
cmp
movsl
int
int
pop
cmpsb
mov
shll
dec
pop
dec
cmpsb
mov
int
lret
and
sbb
inc
add
mov
movsl
lea
xor
xchg
repz
leave
xchg
dec
imul
test
fimuls
shrl
pop
ds
push
shrb
rorb
scas
fcoms
xor
leave
xchg
scas
popa
xor
mov
adc
push
ret
pop
pop
clc
mov
pop
clc
xchg
dec
lods
jne
mov
xchg
int
clc
xchg
adc
push
sbb
pusha
lret
ljmp
cmp
mov
cwtl
dec
adc
dec
and
sbb
stos
out
lcall
inc
rorl
push
lcall
adc
dec
dec
and
xchg
dec
sub
jle
iret
and
lret
das
out
stos
pop
cmpl
leave
mov
dec
and
xchg
dec
and
mov
dec
cmp
outsb
loope
leave
add
pop
imul
les
cltd
or
or
mov
add
repz
dec
and
mov
dec
and
sahf
dec
and
mov
dec
and
aas
dec
rorb
and
xchg
push
and
mov
dec
and
xchg
dec
and
and
das
adc
add
xchg
mull
leave
mov
int
lret
jnp
or
and
dec
dec
and
mov
dec
adcb
mov
or
int3
sbb
push
hlt
aad
sub
loopne
push
fwait
dec
and
lcallw
mov
xchg
sbb
leave
mov
jp
out
dec
and
mov
xchg
sbb
fdivrs
aam
inc
cli
push
sbb
and
mov
or
leave
xchg
shll
sbb
mov
sbb
inc
int3
test
pop
cmp
adc
lret
ret
adc
dec
scas
sarl
dec
push
and
mov
lea
jnp
mov
pushf
scas
xchg
and
adc
push
dec
and
xchg
dec
cmp
xchg
dec
and
xchg
dec
sti
leave
mov
dec
popf
push
mov
shlb
mov
leave
xchg
add
sar
leave
xchg
dec
push
lods
jmp
leave
or
mov
xchg
dec
xchg
xchg
mov
leave
mov
lods
and
inc
dec
and
sbb
jae
out
push
and
out
dec
and
jecxz
stos
popa
jg
and
xchg
scas
and
mov
dec
aad
pushf
dec
inc
movsb
cmp
and
xchg
dec
and
xchg
xchg
leave
xchg
dec
mov
mov
and
xchg
cmp
repnz
xchg
leave
sbb
add
in
int3
dec
and
stos
ds
decl
les
inc
mov
xchg
daa
and
push
add
lret
cmp
xor
xchg
dec
and
arpl
mov
or
xchg
dec
and
mov
dec
and
dec
addr16
mov
lods
mov
aad
lret
cmc
loopne
sbb
mov
dec
and
inc
push
xlat
xchg
push
xor
xor
je
cwtl
aad
in
xchg
dec
sbb
nop
push
dec
or
nop
addb
flds
es
fimuls
inc
push
sbb
and
mov
cs
xchg
shr
cli
addl
xchg
and
mov
xchg
int
inc
xchg
inc
and
jns
dec
adc
sub
push
and
mov
and
dec
mov
jnp
sbb
iret
pop
enter
push
cltd
push
xchg
dec
and
lret
push
cwtl
lret
adc
dec
repz
jle
je
lahf
pop
fbld
leave
mov
dec
and
dec
iret
push
add
mov
frstor
sti
inc
mov
xchg
dec
and
xchg
dec
and
mov
pushf
mov
dec
and
mov
mov
xchg
xchg
and
loopne
outsb
leave
mov
dec
cmp
xchg
dec
and
mov
cmp
notl
pushf
mov
xchg
dec
and
movsl
or
sbb
ds
aaa
mov
mov
xor
push
dec
ret
leave
mov
lods
pop
leave
mov
fwait
das
adc
and
xchg
in
rcrb
and
mov
data16
xchg
dec
mov
cltd
xchg
and
jle
repz
mov
lea
lods
inc
dec
add
mov
dec
arpl
jecxz
test
xchg
and
push
mov
and
mov
add
mov
out
lods
clc
mov
jecxz
and
mov
jmp
xchg
dec
lods
mov
xchg
int
fcompl
mov
dec
xchg
dec
and
sbb
call
sbb
mov
inc
cmp
cmpsb
dec
in
dec
jnp
ds
pop
and
mov
sbb
push
dec
or
leave
mov
add
leave
xchg
dec
push
jmp
add
xchg
shl
xchg
dec
and
mov
dec
stc
leave
std
mov
lret
mov
xchg
and
xchg
dec
cmp
jl
mov
mov
out
je
lret
das
int3
pushf
scas
xchg
dec
and
xchg
dec
xor
sbb
xchg
imul
xchg
popa
aas
lds
leave
mov
dec
in
mov
dec
and
in
mov
add
mov
pop
mov
icebp
scas
leave
xchg
dec
and
dec
adc
rorl
ja
dec
and
mov
sbb
fwait
or
mov
pop
movsb
sbb
and
mov
dec
jle
loop
daa
mov
inc
mov
or
inc
dec
xlat
mov
movsb
and
mov
inc
sbb
dec
and
out
arpl
mov
xchg
shl
dec
jg
scas
cli
mov
lcall
dec
mov
scas
jle
dec
and
cmp
push
notl
dec
and
dec
and
add
sub
add
ds
mov
xchg
pushf
cli
mov
xchg
pushf
daa
sub
aad
cmp
fwait
cmc
and
aad
ljmp
stos
out
ljmp
fsubl
pop
pop
shrb
mov
lds
mov
lret
pop
test
in
mov
jg
jns
inc
in
mov
loop
xor
shll
inc
out
xor
shll
outsl
rcl
mov
pop
dec
mov
in
pushf
dec
mov
jle
in
inc
rorb
popf
inc
lds
inc
push
cmpl
movsb
jge
lahf
pop
in
cmp
add
movsb
pop
pop
xchg
xor
cmpsb
arpl
ja
cwtl
in
filds
and
insl
rcll
xchg
pusha
orb
pop
orb
push
jmp
pop
mov
jge
dec
xlat
or
lods
or
cmp
imul
xor
std
and
add
or
lods
or
dec
cmp
dec
lods
or
add
mov
add
dec
mov
lahf
test
cmp
dec
add
xor
cmp
ds
add
cmp
or
sub
ds
pushw
mov
out
push
rcll
sub
xchg
lret
sub
lods
insl
sub
pop
xchg
dec
and
mov
dec
and
xchg
sub
dec
mov
dec
and
and
sub
mov
and
mov
jnp
dec
mov
dec
or
mov
pop
or
leave
inc
test
nop
xchg
adc
mov
sbb
mov
ds
mov
movsb
lret
fmulp
sbb
jbe
cmp
ljmp
cli
jo
jae
push
lcall
xchg
mov
dec
jge
inc
mov
lea
pop
inc
enter
inc
push
jnp
insl
dec
dec
or
sbb
leave
xchg
jnp
mov
add
leave
xchg
dec
push
mov
pop
cmpsb
call
inc
arpl
xchg
pop
jecxz
cmp
pop
test
xchg
dec
and
mov
mov
xchg
dec
dec
mov
xchg
dec
or
dec
and
pop
mov
xchg
mul
mov
pop
cmpsl
push
mov
xor
xchg
dec
stos
xchg
add
xchg
xchg
inc
xor
mov
int3
sub
xchg
dec
xor
mov
movsl
int
leave
xchg
dec
mov
lods
xchg
dec
and
dec
dec
and
mov
adc
dec
sahf
dec
and
mov
dec
and
xchg
sbb
cld
xchg
pop
pop
dec
dec
scas
movsl
adc
dec
and
cwtl
sbb
dec
rolb
mov
pusha
imul
cld
call
xor
leave
mov
dec
and
mov
fldenv
leave
lea
push
fwait
mov
xor
dec
lods
addr16
mov
push
sbb
sbb
sub
rcll
and
data16
mov
dec
and
lods
movsl
ds
dec
and
push
dec
and
mov
lcall
mov
xchg
enter
cmpb
and
inc
xor
sbb
and
xchg
mov
add
mov
sub
sbb
push
sub
into
in
xchg
dec
jne
inc
ss
aad
push
sbb
and
mov
fisubrl
cltd
ds
sahf
aad
in
dec
and
mov
dec
and
out
and
push
in
mov
test
mov
mov
leave
xchg
aad
dec
mov
ret
dec
and
mov
leave
mov
xor
aas
movsl
or
sti
and
mov
rolb
iret
lea
aad
sbb
fcmovne
insl
lcall
xchg
aad
in
dec
and
jl
in
sub
and
xchg
int
movb
xchg
dec
scas
pop
decb
leave
ds
xchg
xor
jmp
leave
dec
and
sbb
push
int
outsb
in
rorb
or
lcall
nop
adc
repz
lret
adc
add
rclb
shrb
orl
dec
mov
inc
movsb
mov
add
add
xor
add
add
and
jmp
stos
mov
int
imul
jb
dec
addr16
mov
add
cmp
ja
aad
lcall
mov
cmc
inc
push
xor
or
mov
jge
nop
js
cs
sahf
js
bound
xor
sbb
movq
dec
sahf
out
sub
cli
mov
sti
and
sbb
sbb
cvttps2pi
mul
call
shl
loop
mov
hlt
adc
sbb
in
mov
push
sub
dec
call
fiaddl
mov
data16
test
sub
inc
xchg
lcall
fwait
or
ja
adc
lret
jmp
lahf
dec
mov
das
sub
bound
xchg
out
insb
fs
dec
inc
push
ljmp
mov
outsl
sub
lcall
inc
call
clc
xchg
into
inc
lahf
daa
aaa
sbb
add
test
ja
cmp
std
sbb
mov
out
iret
cmp
xchg
lahf
aaa
inc
sahf
sub
leave
clc
in
sbb
cmp
push
jp
test
inc
arpl
sbb
dec
mov
es
xor
je
nop
push
xchg
xchg
adc
or
lret
xor
rorb
dec
inc
mov
insl
neg
xchg
lods
and
sub
mov
das
xchg
and
add
and
cmp
cld
pop
outsl
mov
jo
or
push
and
lret
pop
bound
xor
and
pushf
adc
cmp
cmpsb
cmc
nop
test
mov
dec
xchg
movsl
xor
shll
stos
adc
insl
cli
outsl
inc
pcmpeqw
jns
and
popa
inc
mov
dec
test
and
icebp
push
outsl
pop
in
aaa
test
push
dec
nop
cmpl
fcom
pop
lea
sub
mov
stos
push
lock
push
maxps
dec
inc
mov
mov
outsl
mov
aaa
lods
outsb
lods
loop
xchg
and
inc
push
cmp
or
fsubl
aam
cmp
push
ret
rorl
cli
jo
jmp
or
or
lds
pop
stc
int3
adc
pop
adc
scas
inc
or
in
add
out
push
popa
mov
cmp
iret
add
andl
adc
call
push
pop
icebp
sub
call
and
ja
mov
push
adc
adc
aaa
cmp
mov
int3
inc
sub
xor
sub
add
add
mov
inc
in
je
in
hlt
sub
xchg
push
push
adc
mov
es
adc
jb
cmp
jno
mov
sub
adc
das
add
cmp
outsl
inc
ja
in
fs
lods
mov
push
fdivrs
add
adc
mov
clc
ss
in
inc
mov
shlb
xor
rorb
mov
mov
adc
pop
sub
je
ds
jns
repnz
sbb
out
jl
cs
daa
sbb
cmp
sbbl
sbb
hlt
sbb
insl
pop
mov
enter
cwtl
stos
in
sti
daa
push
dec
jae
movsl
cmc
cs
sub
pop
mov
fldl
cld
adc
sahf
pop
pop
shrb
sub
xor
jle
cmp
je
es
xchg
xor
ret
jmp
mov
sub
sbb
mov
push
xorl
sbb
lret
call
orl
ret
cmp
jne
mov
sahf
mov
adc
cmp
pop
jge
out
ljmp
out
pop
lods
jl
push
mov
jl
iret
xor
adc
mov
stos
pusha
push
jl
loopne
push
and
fsubs
je
rolb
push
lahf
fidivl
push
fwait
testb
ror
frstor
loope
and
sub
pop
cltd
testl
add
filds
or
jae
jmp
xchg
and
jb
inc
negb
cmp
aaa
mov
sbbl
xor
dec
inc
leave
add
jmp
pop
addr16
cmp
xchg
fdivs
add
fisttps
out
inc
je
jge
push
add
rcll
addr16
stc
loope
xor
aas
aaa
inc
daa
ss
pop
fdivs
inc
xor
add
hlt
jae
and
js
mov
insl
add
sub
dec
mov
fists
or
adc
mov
or
add
lret
call
mov
mov
mov
dec
or
mov
in
sbb
mov
sbb
or
jecxz
jmp
add
or
test
inc
cld
push
ljmp
es
and
out
sub
push
dec
je
push
xor
mov
adc
inc
xchg
and
and
inc
shlb
in
mov
cli
dec
call
in
or
sbb
sbb
xor
cmp
inc
pusha
add
inc
jbe
adc
es
dec
je
cwtl
xchg
ret
lock
dec
testb
and
cmpsl
inc
mov
add
ret
in
jb
xchg
and
in
loopne
aaa
add
pop
mov
test
rorb
jge
sbb
mov
in
jne
xlat
pop
inc
sahf
and
sub
cmp
out
xor
xor
pushl
and
mov
push
push
and
adc
push
mov
andb
adc
jne
cmp
pop
add
enter
ja
scas
popf
mov
fs
pop
and
out
dec
andb
jne
jnp
inc
sub
and
dec
test
mov
xchg
hlt
add
or
mov
and
xor
pop
jbe
nop
nop
iret
pop
rcrb
xor
mov
jecxz
mov
lods
push
lret
subb
test
push
jp
call
fimuls
mov
int3
mov
sbb
sub
pop
inc
mov
mov
jmp
aaa
and
test
mov
lret
shrb
test
loope
out
sub
lret
sub
cmp
push
push
inc
shr
mov
scas
testl
pxor
jo
mov
and
mov
incl
inc
jbe
rcl
or
inc
fcom
lds
inc
inc
ljmp
inc
ljmp
add
int
jge
es
xor
fsubs
sti
jo
stos
cmp
inc
addr16
inc
gs
pop
push
jne
test
std
int3
lds
test
dec
mov
pop
sbb
push
mov
add
rorb
cwtl
cmp
add
cmpsb
mov
sti
xor
in
les
call
out
add
mov
jp
es
clc
cmp
inc
xchg
cltd
cmovno
pop
lock
sbb
jecxz
sarl
daa
ret
mov
mov
and
or
mov
xchg
mov
ret
cmp
add
das
add
xchg
outsl
mov
es
stc
test
dec
jp
push
clc
rcl
cs
fcomi
pop
inc
xlat
and
int
inc
loope
sub
cmp
xor
call
and
adc
mov
shrb
inc
xor
insb
lock
inc
fsubrl
push
fdivrl
mov
push
nop
and
inc
insl
push
in
icebp
movsl
movsl
inc
adc
mov
outsb
inc
add
jg
inc
bnd
outsl
xor
int3
jns
sub
jno
lcall
test
mov
clc
cwtl
push
cmp
testb
data16
mov
scas
cmp
inc
cmp
jmp
push
fldcw
inc
or
ds
fistps
loop
test
pop
mov
sub
or
adc
push
pop
add
fidivl
sub
sbb
push
add
sbbb
cmp
mov
add
mov
xchg
shl
inc
mov
push
mov
cmp
push
push
dec
test
inc
push
xor
cmp
xorb
int
pusha
pop
xchg
xor
in
push
loope
push
call
int
sub
test
and
mulb
sub
roll
xchg
or
xor
or
xor
test
push
sbbb
or
cmp
je
xor
sub
movb
xor
jp
in
test
adc
sub
incb
pop
lods
sub
call
pop
mov
sub
test
mov
nop
out
jbe
add
mov
fstp
cmp
fsubrs
inc
je
adc
shll
sub
outsl
fs
setle
inc
jle
dec
dec
call
xor
jne
add
add
add
add
add
data16
add
jbe
add
add
add
add
popa
add
inc
add
add
outsl
jae
add
data16
add
push
add
add
add
pop
push
add
add
pop
jo
je
add
add
cmp
add
jae
add
add
pop
add
add
add
add
add
jne
xor
add
add
push
add
add
add
popa
add
dec
aaa
add
push
jbe
add
add
xor
push
add
add
add
add
add
add
outsb
inc
add
insb
add
add
add
add
add
add
push
add
add
add
pop
add
add
add
add
add
jno
jb
add
arpl
dec
aaa
add
add
js
add
add
add
push
add
push
add
add
add
inc
add
add
add
add
add
add
add
add
pop
add
add
add
add
inc
add
xor
add
cmp
add
add
add
add
dec
dec
add
add
add
add
xor
add
add
add
add
add
add
pop
add
add
xor
add
dec
add
add
add
add
add
add
cmp
dec
add
pop
add
add
add
add
bound
add
pop
add
insl
add
add
dec
add
add
push
add
add
add
add
add
add
adc
mov
hlt
lret
int3
loop
push
fstps
dec
sbb
sti
push
test
cmp
test
mov
pop
cmp
lods
sbb
adc
stos
inc
add
xchg
dec
in
adc
cmp
aas
aam
sbb
out
jmp
roll
xor
outsl
xor
test
in
mov
hlt
xlat
rcll
loop
xor
fidivs
stc
sub
lds
leave
lods
mov
jo
fs
call
mov
les
push
rcrl
sbb
adc
xchg
mov
psubw
insb
ss
push
sbb
sti
fbstp
insl
outsb
or
or
loopne
sbb
mov
mov
add
fimull
insb
test
aas
int
cmp
mov
loop
sbb
int3
jb
out
in
call
lea
std
cmp
pushf
inc
dec
sbbb
lcall
in
shrb
sbb
mov
dec
mov
sub
lret
adc
lds
rclb
or
divl
test
xchg
stos
movsb
or
jne
cmpsl
js
dec
dec
jns
daa
dec
dec
mov
cli
loopne
out
int3
adc
adc
xlat
jne
pusha
sub
stos
mov
inc
mov
or
leave
stc
fisttps
mov
xchg
and
fistps
ja
xor
jg
sbb
pop
adc
call
add
fstp
add
lahf
add
neg
inc
sbb
movsb
adc
pop
lret
jge
jne
sub
hlt
ret
int
push
sbb
add
call
clc
shll
mov
pop
hlt
push
mulb
xchg
pop
sub
out
sbb
dec
xchg
jne
jns
mov
sti
sbb
leave
inc
iret
loop
shlb
sub
dec
mov
lods
jmp
rol
xchg
icebp
add
sti
cmp
cmp
lods
inc
jb
inc
inc
sarb
push
xchg
sarb
sbb
cs
mov
jns
mov
xor
and
mov
ret
inc
stos
sbb
je
in
hlt
xor
mov
mov
or
cmp
inc
xor
add
lret
mov
lcall
mov
sub
jg
or
pop
mov
int
fwait
mov
mov
loope
jmp
xor
and
or
jo
dec
sub
adc
xor
notl
shlb
sub
lret
rcrb
lret
dec
pop
in
scas
loopne
outsl
rdpmc
mov
fsubr
dec
cmp
sub
push
cmp
in
stc
mov
and
or
ja
sbb
stos
dec
push
cmp
pop
leave
add
stc
mov
xor
aam
out
sbb
pop
pmulhuw
jge
sbb
in
lahf
mov
aad
xor
jmp
icebp
xor
cltd
dec
subl
mov
sub
inc
mov
inc
mov
shl
inc
add
and
sbb
clc
les
sbb
and
sub
mov
lcall
or
sar
jne
xor
jmp
dec
mov
adc
sub
fnstcw
add
or
sar
out
jbe
jle
ds
or
pop
cwtl
je
push
lock
test
push
popf
inc
jp
call
push
sub
jg
es
jge
mov
into
sub
jle
push
clc
into
add
and
xor
test
shrl
push
les
push
push
dec
loope
fwait
push
sbb
ljmp
call
sbb
les
outsb
mov
inc
lret
clc
les
jno
fisubl
inc
xor
shl
or
nop
inc
or
pop
les
dec
lret
lret
int
sahf
xor
adc
mov
les
sbb
and
mov
push
jne
dec
sub
call
das
jmp
dec
inc
cwtl
or
loop
push
dec
jo
push
adc
movups
mov
inc
sub
mov
dec
in
lcall
iret
test
pop
jl
sbbl
cmp
loope
cmpsl
decb
inc
cmc
xchg
adc
cmp
add
add
pop
out
and
inc
addr16
push
rcrl
ja
popa
mov
pop
pop
outsb
mov
push
mov
stc
pop
insb
call
imul
pushf
hlt
repnz
std
and
add
cmp
xor
mov
pop
repz
fs
or
pop
add
jne
push
mov
je
sub
mov
or
pop
cmp
pop
or
bound
push
push
movsl
mov
add
out
dec
pop
insb
movsb
pop
inc
imul
dec
add
mov
hlt
mulb
fdivrs
push
daa
cmp
aaa
insb
cmp
pop
push
dec
or
jbe
inc
imul
rcr
push
dec
add
or
daa
clc
and
lods
push
shlb
ljmp
push
sbb
out
testb
jne
xor
es
add
jge
mov
fidivs
sbb
addr16
negb
push
pop
repnz
push
decl
add
cmc
pop
sub
mov
dec
mov
cmp
hlt
add
mov
add
aas
cmp
pop
orb
xor
jle
jmp
push
dec
push
pop
mov
mov
ljmp
flds
scas
mov
pop
jo
push
repnz
lods
and
loop
rcll
ss
addr16
mov
aaa
and
hlt
es
lods
pusha
add
push
bound
jl
cli
bound
add
sbb
ret
mov
push
jmp
cmp
test
out
cmp
inc
cmc
lods
jnp
jle
outsb
push
mov
mov
and
xor
cmc
or
sub
shlb
mov
outsb
cli
in
dec
cld
and
in
pop
stc
xor
inc
in
dec
xchg
bound
test
enter
loopne
jbe
scas
mov
mov
es
addr16
cmp
or
push
cmpsb
sub
ficomps
jb
in
push
jmp
adc
mov
test
xor
jp
mov
mov
push
mov
das
or
and
add
push
shlb
ss
sbb
push
mov
jle
repz
test
outsb
scas
imul
rorb
cli
push
cmpsb
pop
push
push
xorb
loope
in
daa
outsb
cmp
gs
jmp
sbb
mov
and
arpl
mov
push
sbb
bound
push
adc
xor
push
push
out
lds
push
mov
add
jp
out
cld
mov
mov
cmpsl
push
inc
or
ja
mov
mov
push
jb
mov
imul
add
inc
stos
subl
mov
add
dec
jb
aam
mov
push
in
add
sub
into
jbe
call
subb
xor
or
jp
push
mov
test
jno
daa
pop
movl
mov
hlt
add
mov
xchg
push
pop
mov
push
in
arpl
test
add
leave
in
jb
xchg
hlt
sub
dec
adc
imul
and
adc
pop
sbb
pop
jnp
jns
pop
xchg
repnz
or
adc
mov
outsb
add
cmp
add
inc
in
add
cld
jns
mov
jbe
xor
add
in
mov
inc
outsl
andb
test
sbb
add
insb
orl
pop
shlb
xor
inc
jb
or
jle
frstor
aad
in
adc
fcoms
add
xor
xchg
jg
jo
or
cmp
mull
test
imul
int
je
mov
enter
ss
push
jbe
mov
xchg
and
mov
mov
pop
xchg
int3
inc
cs
pop
jb
adc
xchg
jg
addr16
mov
pop
xchg
icebp
addr16
push
mov
ret
sbb
push
jl
lret
aas
or
jge
xlat
shlb
out
mov
lods
cmpsl
fldl
imul
movsb
sbb
shrl
inc
fsubrl
dec
cli
imul
mov
push
mov
dec
push
jns
push
adc
ljmp
aaa
inc
sub
add
cmp
add
pop
add
add
inc
aaa
add
add
add
add
add
add
push
add
pop
xor
add
dec
add
xor
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
jo
add
add
cmp
add
add
add
add
add
add
bound
add
add
add
add
jb
add
add
popa
add
add
add
add
add
dec
add
insb
pop
add
add
bound
add
dec
add
add
add
outsb
add
add
add
add
add
add
add
add
add
add
je
data16
add
push
add
add
add
push
add
jns
add
arpl
add
add
popa
add
add
pop
add
add
add
data16
add
add
imul
add
data16
add
push
add
add
add
add
add
xor
add
add
dec
add
add
add
inc
add
jbe
add
add
xor
dec
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
cmp
inc
add
add
push
add
add
add
bound
add
add
add
add
imul
push
add
add
aaa
outsl
add
add
dec
dec
add
add
add
add
add
add
inc
add
add
add
xor
add
xor
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
dec
add
arpl
add
add
pop
xor
add
add
add
add
add
add
add
add
push
inc
add
add
add
add
add
add
ret
cmp
jecxz
int
repz
lret
dec
push
push
insl
pop
mov
dec
mov
imul
ficompl
or
pop
inc
stc
xchg
add
pop
dec
pop
paddsb
pop
push
jecxz
jge
xor
ss
adc
sbb
imul
adc
xor
mov
out
and
testb
mov
cltd
xor
push
cltd
das
xor
mov
scas
ret
gs
in
mov
adc
jmp
cltd
dec
jae,pn
cmc
cmp
inc
or
cmpsl
adc
and
push
mov
jmp
imul
mov
pop
cld
ret
mov
ret
adc
add
adc
pop
clc
push
ljmp
fldcw
xchg
sbb
adcb
imul
xor
fldl
push
push
fadd
pop
fs
cmp
push
sub
ds
dec
mov
dec
pop
push
jmp
pop
add
cmc
jo
test
push
cld
and
shrl
lea
pop
jmp
cld
pusha
mov
decb
loopne
sub
pop
out
sarl
sub
sar
add
inc
jae
xchg
int3
xchg
scas
sub
and
lret
gs
je
add
mov
jmp
paddusw
test
jl
sub
sbb
push
imul
jo
test
ja
notl
mov
cmp
and
and
sub
data16
xor
cmp
dec
jecxz
dec
daa
neg
lea
repz
sbb
fucomi
sub
inc
adc
es
add
inc
adc
jmp
mov
jne
inc
cmp
dec
cmc
and
pop
lcall
adc
adc
pop
out
inc
popa
adc
jne
icebp
setle
jns
js
in
and
jns
lahf
inc
lcall
out
rcrb
in
test
in
xor
adc
jmp
in
loopne
pop
sahf
mov
push
xor
sub
hlt
imul
and
lods
push
sbb
sbb
rol
maxps
jle
in
movsl
inc
jbe
setb
and
adc
lcall
cmpsb
lock
je
je
jnp
sub
push
lods
add
cmp
and
aam
les
jo
das
add
repz
dec
adc
pop
fstpt
icebp
ror
pop
enter
sub
fdiv
inc
and
les
or
shl
hlt
lret
mov
rorl
aad
mov
fs
mov
or
imul
add
fnstsw
fistpll
jecxz
inc
mov
cmp
dec
xor
mov
xor
dec
dec
jmp
mov
stos
adc
std
pop
inc
mov
addb
xchg
div
icebp
out
adc
lcall
test
mov
mov
mov
aam
push
adc
pop
dec
movsb
ret
aas
cs
mov
xlat
icebp
sub
add
stos
add
push
cmp
ss
sbb
and
cwtl
popf
cmc
push
push
fsubr
fildll
ljmp
pop
inc
xor
cmp
inc
fwait
pusha
cmp
inc
dec
and
push
xchg
adc
imul
shll
mov
roll
lock
gs
fs
call
sarl
sub
je
lret
pop
cmpsl
cmp
outsb
mov
test
jns
push
mov
jo
pushf
push
fs
xor
push
je
aam
inc
rcrb
push
inc
fwait
push
nop
test
les
int3
sbb
popf
jb
push
mov
in
sub
fildl
addr16
pop
add
call
or
ljmp
fsubr
jae
movsb
add
test
and
in
je
and
lret
notl
sub
lock
mov
rorb
in
mov
aaa
sub
jecxz
mov
addr16
mov
mull
inc
jno
lret
inc
and
sbb
dec
outsb
les
pushl
xchg
xchg
testb
clc
lods
pusha
in
xor
cli
push
or
dec
cmp
int3
mov
int
repz
call
dec
mov
adc
std
push
repz
and
or
mov
mov
rcrl
loope
das
cmp
sub
add
add
add
arpl
add
push
add
add
add
add
add
xor
add
add
add
add
dec
add
dec
add
add
add
jns
add
add
add
add
popa
add
add
jne
dec
add
xor
add
add
add
add
add
add
add
add
add
je
jbe
add
add
add
add
add
add
add
dec
add
add
add
add
jno
add
add
add
add
data16
popa
add
jne
imul
push
add
add
add
add
add
add
add
add
je
push
add
je
add
add
add
jp
add
add
pop
add
add
dec
push
add
push
add
push
jo
push
add
add
arpl
add
add
add
add
add
push
add
add
add
add
add
outsl
add
add
add
add
add
add
dec
add
add
add
add
pop
dec
add
add
add
arpl
add
add
add
add
insb
add
add
add
add
add
add
push
add
jbe
add
add
add
add
jb
add
add
add
inc
add
cmp
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
jno
jbe
add
add
add
add
add
inc
add
add
add
add
data16
add
add
cmp
jb
add
add
add
add
inc
add
add
add
dec
add
add
add
add
add
add
add
add
add
push
push
add
add
add
push
add
add
add
add
add
add
add
dec
add
pop
add
add
js
addr16
dec
mov
xchg
jnp
pop
jo
andl
in
cmp
sbb
jp
jns
cld
dec
movsb
ljmp
insl
sbb
xchg
mov
lret
xchg
mov
scas
add
mov
dec
in
pop
and
arpl
adc
pop
or
push
cmc
test
jle
nop
in
jb
dec
jb
add
stos
lcall
xchg
dec
out
add
adc
pop
jae
xor
ret
push
gs
rorl
incl
and
pop
inc
add
ds
sub
nop
pop
mov
mov
andl
call
scas
mov
lahf
jno
inc
pop
outsl
pop
mov
sbb
push
mov
mov
fimull
fnstcw
jb
clc
jge
sbb
sti
add
jmp
jb
jg
jle
repz
push
or
sti
pmuludq
jns
das
and
and
lock
gs
and
cmpsl
cmp
sbbl
pop
pop
stc
out
pop
xchg
das
es
loopne
add
mov
sbb
int3
sbb
dec
call
sti
sbb
roll
das
ret
stc
addr16
push
pusha
cltd
jbe
bound
cmc
andb
popf
add
out
sub
push
sbb
dec
hlt
push
push
inc
mov
mov
kmovb
xlat
or
and
mov
sbb
push
inc
fwait
test
clc
xchg
pushf
xchg
inc
movsl
shll
cld
xchg
lcall
and
aaa
sub
add
jb
dec
popa
jbe
jne
cmp
add
lahf
mov
movsl
and
cwtl
xchg
cli
adc
pop
pop
pop
adc
movsb
js
lock
loopne
pop
pop
pop
mov
out
les
xlat
cmp
or
popa
add
addr16
jno
inc
inc
addr16
push
sbb
add
int3
js
test
mov
ds
pop
ja
xor
dec
push
aas
in
add
int3
pop
test
mov
cmpsb
xorb
lods
dec
cmp
or
hlt
jbe
cli
jo
add
ljmp
mov
sbb
les
enter
scas
push
testl
imul
push
idivl
inc
fldt
jns
jo
inc
gs
mov
sub
arpl
push
incb
cmp
adc
mov
add
repz
adc
outsb
jne
pusha
jb
add
pop
cmp
aam
jo
xchg
xchg
adc
sub
jecxz
cli
mov
jp
cwtl
xchg
mulb
repnz
mov
cltd
lods
popa
aaa
sbb
xorb
xchg
out
jle
sub
rorb
sub
xor
xchg
loop
adc
fwait
and
imul
mov
dec
add
inc
jmp
daa
gs
mov
les
icebp
out
nop
jae
sbb
bnd
push
out
mov
inc
sahf
fwait
testb
or
push
sbb
lcall
cmp
mov
push
mov
out
dec
push
xor
sti
pop
shrb
jno
and
int3
or
fbld
mov
arpl
out
xor
push
sbb
cltd
mov
scas
out
cmpsl
subb
fcmovbe
push
push
sahf
scas
cltd
mov
cmpb
pusha
mov
shlb
or
add
test
jl
scas
dec
add
ret
sub
xchg
push
arpl
xor
testb
push
aas
jno
dec
lods
push
pop
push
in
outsb
icebp
add
movsl
aas
jb
jmp
inc
popa
roll
cmp
dec
je
push
add
jp
lcall
push
cmpsb
pop
adc
jbe
test
fs
jae
cmp
cmpb
cs
add
popa
cld
jp
mov
popf
cmp
or
mov
dec
jae
jg
insb
mov
cmp
jp
or
int
ret
jge
dec
push
mov
out
or
sbb
clc
scas
jns
cli
push
mov
pop
add
not
push
sub
mov
roll
mov
sbb
mov
jbe
jp
mov
sahf
add
cmpsl
cmp
jge
mov
jns
loopne
out
jmp
cmpsb
mov
dec
add
sti
add
test
fimuls
popf
in
hlt
or
lods
incl
inc
and
repz
add
pop
mov
pop
and
cmp
loop
cmpsb
or
jmp
imul
stos
cmp
push
cmpl
push
rolb
inc
sbb
add
xchg
jge
js
f2xm1
mov
add
cmpsl
cld
dec
xchg
ss
jne
and
insl
ficoms
mov
scas
adc
jns
and
pop
xchg
mov
jecxz
adc
push
hlt
fdivp
sbb
shl
mov
into
lret
jge
add
gs
hlt
into
fisubs
loope
lds
mov
inc
dec
idivb
ss
jecxz
popf
pop
addr16
mov
fs
subb
xchg
dec
loop
lret
xchg
sub
lds
jg
and
cli
inc
sbb
mov
insb
pop
mov
dec
mov
fldcw
xchg
mov
pop
xchg
push
insb
leave
dec
addr16
jmp
pop
in
xchg
mov
ja
xchg
out
mov
xchg
xchg
jecxz
popf
jecxz
jo
jo
mov
loop
fiaddl
mov
sahf
leave
adcb
lds
hlt
fcoms
leave
pop
fs
inc
sub
cmp
scas
cmovs
add
clc
or
adc
mov
dec
dec
or
lcall
push
jecxz
mov
mov
mov
or
pop
jno
cmpl
jmp
aas
mov
inc
enter
mov
mov
scas
nop
add
test
xchg
jecxz
popf
aaa
dec
mov
push
jmp
push
jno
movl
xchg
push
jecxz
inc
fisttpl
cmp
vsubps
ds
xor
mov
movl
loop
pop
lods
mov
push
in
and
push
pushf
scas
outsl
aaa
test
xchg
movsb
jnp
push
xorl
inc
mov
sub
test
and
out
daa
cmp
mov
sbbb
jmp
xchg
test
mov
and
addl
inc
pop
les
mov
sbb
sub
add
movsb
xchg
mov
xlat
jge
insb
das
mov
lds
inc
push
aaa
mov
pushf
inc
mov
mov
lret
sbbb
jecxz
sbb
jp
jmp
es
mov
call
sub
int3
xchg
jae
jb
xor
int
dec
and
incb
divb
insl
mov
dec
xor
jmp
cmp
int3
cmc
push
mov
test
mov
mov
ljmp
adc
divl
lods
add
xchg
loope
xor
push
test
in
cld
sub
fimuls
fisttpll
cli
decb
loopne
xchg
or
je
jmp
xrelease
repz
out
mov
jecxz
cmp
push
or
jecxz
sahf
xchg
sub
aad
mov
cs
lret
or
mov
aad
cmc
je
push
inc
adc
stos
jg
scas
jle
loopne
sbb
mov
pop
jl
inc
sbb
mov
fisttpl
jbe
ret
ror
je
mov
xor
mov
jle
loopne
sarl
mov
xrelease
pop
notb
out
ja
fdivs
push
call
and
sub
and
lret
in
shlb
dec
cmpw
or
dec
loop
push
ror
inc
mov
aad
jle
loopne
in
out
cli
mov
and
inc
jmp
inc
out
push
mov
ss
xchg
inc
and
loop
mov
sbb
cld
push
xor
dec
adc
jecxz
outsb
dec
and
out
add
xor
pop
outsb
fistpll
push
call
inc
mov
insl
mov
insb
je
aam
pop
pop
xchg
and
out
movsl
jge
mov
aas
das
and
shlb
sbb
in
cmpl
pop
pop
lods
mov
dec
lahf
and
adc
loopne
xor
dec
cmp
div
in
dec
jmp
jne
enter
int3
xchg
div
mov
mov
jl
fisttpl
test
push
or
sub
fwait
pop
data16
mov
hlt
test
fstp
mov
fdivrs
loopne
push
les
pop
mov
push
push
mov
mov
mov
jecxz
jbe
hlt
fiadds
add
add
add
add
add
add
pop
add
inc
add
popa
add
push
add
xor
add
add
add
add
imul
add
jbe
add
push
dec
push
jbe
add
add
xor
add
dec
add
jb
add
add
add
add
add
xor
add
add
add
jae
add
add
add
add
fs
add
add
ja
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
push
add
add
dec
add
cmp
add
push
add
add
add
cmp
dec
add
add
add
push
add
inc
add
cmp
add
push
add
add
add
add
push
add
add
add
add
xor
add
arpl
dec
add
dec
add
push
add
dec
add
add
dec
je
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
push
add
insl
add
add
add
add
add
add
add
dec
xor
add
add
add
add
add
add
add
xor
add
js
add
add
inc
add
add
dec
add
add
add
add
add
aaa
add
add
add
jo
pop
add
add
add
add
add
add
xor
add
add
jne
inc
add
add
add
add
add
add
push
add
add
inc
push
imul
add
add
add
inc
add
add
add
add
push
add
jo
add
add
add
add
add
add
add
add
add
add
dec
inc
add
add
add
add
add
add
arpl
dec
cmp
add
in
call
inc
push
push
jg
pop
imul
jne
call
sarb
shll
repnz
xor
insl
sti
mov
push
xor
mov
divb
push
sbb
adcl
gs
push
add
jne
insl
xor
mov
dec
or
and
mov
mov
mov
shl
fldcw
push
and
push
mov
inc
nop
push
adc
push
jne
ret
sbb
push
fisubrs
insb
repz
mov
inc
je
in
xchg
sub
pop
jae
cli
push
test
mov
shr
pop
cld
aaa
out
ss
sbb
cmp
add
jb
lock
test
cmc
jbe
nop
adc
ret
je
aad
sub
add
rolb
jecxz
jp
pop
pop
or
mov
fs
jmp
mov
faddp
movb
add
insb
lock
icebp
mov
into
jmp
test
mov
pop
hlt
mov
push
or
pop
pop
dec
in
push
push
pop
adc
hlt
push
out
push
outsl
ljmp
xchg
push
pusha
shll
mov
fs
mov
loop
push
outsb
pushf
fiaddl
jo
jbe
push
insl
inc
je
movsb
inc
add
idivl
xchg
enter
rorl
fsts
out
and
loop
ret
repz
cs
lods
push
in
loopne
adc
stos
imul
sub
xchg
and
pusha
cs
mov
das
fs
ret
or
and
jecxz,pn
sub
std
dec
aas
int
in
inc
or
movsl
mov
lea
mov
or
cmp
sub
shrl
sub
xor
and
pop
ret
push
push
test
xchg
out
push
cmpsb
arpl
or
dec
mov
not
jb
lock
jl
push
push
scas
cs
lea
int3
orl
mov
mov
dec
call
xchg
aad
stos
incb
jl
adcb
inc
mov
enter
and
add
cmpb
inc
jne
in
push
jno
leave
out
ja
inc
dec
xchg
push
and
mov
lods
outsl
insb
dec
call
mov
pop
adc
pop
adc
and
mov
mov
cmp
mov
icebp
int
dec
jbe
push
pop
into
xor
dec
push
mov
jmp
add
cmpsl
fiaddl
jg
push
cmpsl
mov
clc
decl
shlb
inc
mov
push
push
push
cmp
add
mov
or
xchg
add
pop
or
imulb
mov
or
inc
dec
jno
jne
mov
sub
pop
mov
arpl
call
or
or
dec
sub
shll
shlb
add
or
cmpsl
lods
clc
mov
pop
lock
popl
jns
lret
rcr
add
jbe
cmpb
ds
cmp
or
adcl
push
mov
ss
clc
xchg
cmp
std
clc
sahf
adc
inc
cld
ret
insl
bound
mov
nop
mov
js
add
adc
inc
je
leave
jns
gs
jmp
mov
adc
clc
xchg
or
add
aam
sbb
inc
ret
sub
jbe
cmc
and
jne
in
movsb
fcmovnb
xchg
jecxz
rcl
test
ja
jmp
push
xor
cli
dec
inc
xchg
ds
push
inc
cmpsb
cmpb
rsqrtps
decl
jne
sub
pop
mov
and
mov
xchg
push
clc
subb
jb
adc
shl
jp
cmpb
daa
arpl
pop
cwtl
mov
test
push
mov
pop
mov
stos
sub
and
or
jmp
sbb
or
jmp
push
mul
sub
sbb
cltd
or
inc
mov
sub
or
mov
or
in
mov
clc
or
jecxz
std
fbld
push
jmp
dec
push
xchg
cpuid
dec
cmc
mov
clc
jmp
lea
sbb
sub
jmp
jo
and
cwtl
dec
insb
add
fisttps
shl
jge
pop
or
dec
pusha
add
jns
das
mov
xor
fildl
pop
push
xlat
mov
push
leave
call
shll
inc
mov
push
sub
add
ret
leave
add
add
enter
jg
add
outsl
incl
push
mov
jecxz
add
outsb
dec
add
cwtl
sbb
sbb
dec
jb
loopne
sidtl
sub
je
lods
jge
jb
sub
dec
insl
adc
add
push
add
push
lds
jae
add
pop
jne
sti
pop
outsb
imul
push
mov
pusha
jbe
add
mov
std
cmpsl
je,pn
js
inc
lret
idiv
cmp
and
dec
and
popa
jb,pn
popa
je
insb
pop
aaa
lcall
popa
cs
loopne
in
push
add
shrb
daa
mov
je
cmp
ss
xor
enter
insl
inc
jmp
inc
and
mov
xor
push
mov
outsb
arpl
ret
push
ds
daa
inc
jmp
fxch
subb
xor
push
mov
addb
push
mov
or
pop
aam
and
roll
mov
pop
adc
dec
mov
mov
clc
sbb
inc
mov
push
push
nop
jg
push
loopne
xor
idivb
scas
pushf
add
mov
loopne
push
inc
test
pop
scas
lods
add
mov
push
jo
mov
add
push
loopne
test
enter
int3
add
push
loopne
enter
shrb
loopne
mov
xchg
in
pop
mov
sbb
jbe
out
sub
xor
cmp
inc
outsb
dec
loop
push
inc
pop
jbe
out
insb
and
es
jl
pushf
test
ja
nop
outsb
xchg
in
pushf
pushf
dec
mov
lods
out
mov
mov
outsb
aam
and
dec
in
imul
mov
ja
lock
mov
clc
dec
lock
push
loop
hlt
inc
or
clc
scas
adc
cld
push
sbb
daa
ja
push
loopne
sub
divb
scas
or
cmp
inc
push
loopne
dec
inc
sbb
push
scas
sbb
pop
push
and
push
loopne
push
scas
sub
adcb
push
loopne
cwtl
inc
cmp
mov
push
inc
jg
push
loopne
mov
hlt
pop
and
cmp
add
pushf
or
arpl
sbb
and
sub
and
inc
cmp
inc
out
dec
sub
inc
insb
ja
jae
mov
loop
outsl
cwtl
jne
inc
outsb
arpl
mov
insl
in
mov
inc
int3
ret
jge
sub
push
flds
fcoms
push
loopne
pop
add
push
pop
jg
push
loopne
clc
inc
fiadds
jbe
scas
or
insb
push
adc
push
loopne
je
and
js
sub
jl
xor
push
loopne
test
testb
push
jg
push
loopne
xchg
inc
pusha
negb
push
jo
mov
movsb
inc
xor
scas
mov
es
push
std
imul
loop
outsl
fs
ja
outsb
cld
loop
add
and
inc
adc
sbb
and
sub
xor
cmp
inc
loop
dec
inc
push
jbe
out
and
ja
outsb
test
and
inc
xchg
ja
das
mull
movsb
ja
test
mov
mov
jge
push
les
imul
loopne
shl
call
push
fdivrs
push
loopne
or
loopne
adc
in
sbb
push
loopne
in
inc
sub
lock
xor
hlt
push
cmp
push
loopne
cld
inc
dec
fiadds
jbe
scas
add
xorl
pop
inc
arpl
inc
int3
ja
ja
fdivs
cwtl
jne
inc
sahf
sub
push
add
arpl
adc
and
inc
and
sub
xor
cmp
inc
ja
outsb
push
in
sub
bound
and
ret
jle
mov
push
insb
inc
insb
jbe
out
jo
adc
je
sbb
loop
sbb
jl
and
andb
inc
test
inc
mov
push
mov
adc
cwtl
push
nop
push
push
xor
mov
mov
mov
jb
push
pop
das
inc
es
inc
fsubr
inc
outsb
fsubr
out
outsb
loopne
loopne
push
in
sub
call
jbe
test
hlt
loop
and
jo
les
push
je
lock
aad
neg
mov
adc
jb
add
addr16
call
les
pusha
jle
dec
lea
fmuls
add
push
add
movzbl
adc
add
call
mov
push
add
daa
aad
cmpsl
xor
lock
in
dec
and
out
adc
push
jne
mov
dec
mov
testl
jbe
fmull
aaa
sbb
aad
out
and
dec
in
adc
andl
or
add
and
inc
popa
inc
movsl
sub
icebp
inc
xchg
add
cmpsb
and
add
cmp
and
and
pop
call
test
xchg
outsl
add
std
adc
rcrb
sbb
notl
int3
loope,pt
lock
jmp
push
stc
add
jmp
lods
push
jmp
cli
mov
or
shll
and
clc
jns
sbb
push
pop
test
adc
sahf
jae
test
les
adc
mov
movl
push
and
je
out
loopne
mov
shlb
test
mov
hlt
mov
xor
scas
daa
adc
dec
push
cmc
loop
arpl
cmp
je
movsl
test
sub
fsts
cwtl
cli
imul
or
jne
jge
jb
jl
in
rcll
pop
int3
xor
jg
sbb
pop
xor
jb
jmp
or
ret
ss
cmp
cmp
mulb
movsb
cmp
not
pop
popa
adc
and
push
xor
xchg
and
sbb
or
jmp
aaa
repnz
std
and
out
push
cmp
std
inc
imul
mov
pop
xchg
ret
cmpsb
divb
jmp
hlt
push
out
adc
fsubr
repz
fs
in
or
push
cmp
sub
inc
inc
push
or
mov
mov
add
cmp
fisubrs
push
cmp
ja
lock
imul
pop
jg
das
dec
addr16
mov
sub
lret
lods
pop
repz
cmp
cwtl
pop
ds
push
incb
gs
mov
xchg
movsl
shrb
jnp
hlt
dec
push
int
rcrb
aaa
sbb
sub
sub
jbe
movsb
inc
int3
jp
test
shlb
mov
mov
dec
sub
pop
xor
inc
sbb
shll
in
sub
mov
push
adc
jo
mov
loope
sub
add
add
cmp
mov
pusha
adc
push
test
jne
adc
les
add
jo
les
jo
loop
sar
insl
call
ss
and
dec
cltd
sarl
inc
sub
mov
je
insb
adc
mov
ret
outsb
insb
inc
pop
xchg
pop
icebp
je
lcall
inc
add
cmp
cmp
xchg
sub
lahf
das
and
sbb
stos
or
test
xor
in
outsl
mov
lahf
jnp
add
inc
icebp
pop
mov
mov
pop
lcall
stos
mov
jg
adc
and
sbb
shr
js
and
dec
jp
sbb
jge
and
clc
push
std
inc
dec
push
hlt
dec
roll
jae
inc
dec
inc
push
inc
and
std
cmp
test
push
xchg
fldenv
nop
sbb
pop
lea
inc
cs
fldenv
cmp
sahf
cmp
inc
xor
call
shl
pusha
or
sub
dec
xchg
sub
sbb
xchg
push
call
cltd
shl
or
ss
imull
add
cmp
lock
push
xchg
call
mov
insl
mov
cmp
fistl
enter
dec
jl
or
nop
dec
mov
leave
inc
cli
adc
and
lock
sbb
adc
mov
les
ja
push
inc
rorl
out
push
or
push
jg
lock
call
mov
dec
call
xorl
insl
mov
insb
dec
bnd
jb,pn
mov
dec
inc
jno
mov
aad
mov
aaa
adc
les
xchg
or
in
call
scas
fiadds
scas
loop
cmp
jno
mov
filds
pop
xor
mov
mov
or
out
mov
mov
daa
mov
adc
mov
jae
jl
popf
mov
scas
jmp
jbe
push
cmp
out
add
dec
shlb
sub
mov
gs
mov
ljmp
mov
test
insb
mov
add
sar
xor
pop
jp
cmp
ljmp
add
inc
push
dec
call
addl
inc
decb
ds
sti
sbb
divb
mov
inc
mov
repnz
divl
xchg
or
mov
push
les
push
lret
andl
into
sbb
sub
push
sbb
adc
clc
fcmovnbe
outsb
cld
loop
out
insb
push
daa
or
inc
movsl
insl
cmp
mov
add
inc
cld
jle
lea
movb
jb
adc
daa
pop
fiadds
jo
pop
inc
xlat
mov
pop
lods
fwait
scas
and
pop
and
shlb
not
jbe
adc
lds
or
jb
std
callw
jo
dec
cmp
pop
shr
fimuls
or
leave
and
test
mov
enter
scas
pop
ret
mov
or
dec
inc
push
jne
dec
push
outsb
test
xor
add
adc
and
mov
jno
xchg
mov
stos
jle
ret
pop
jb
dec
mov
push
mov
into
ljmp
fcmove
mov
ds
jne
push
ds
out
mov
pop
movl
pusha
xor
pop
div
das
outsl
add
push
pop
inc
test
pop
dec
out
insl
xchg
add
stc
cli
lds
or
pop
sti
loopne
jle
cld
adc
inc
jg
das
and
addl
call
rorl
cmp
data16
jle
or
aam
sti
sbb
add
shl
fstps
addr16
and
cmp
je
mull
nop
xor
cwtl
pavgw
xchg
or
sbb
repnz
imul
clc
inc
inc
jg
xchg
test
add
inc
jmp
mov
repnz
mov
in
ret
pop
sbb
or
pop
mov
ficomps
lods
sub
dec
repnz
lret
sbb
in
inc
xchg
jbe
outsl
out
pusha
or
fadd
das
push
ret
push
out
sub
pop
ret
orb
pop
outsl
jne
addr16
adc
pusha
aam
jns
jmp
and
call
fistl
outsb
insl
xor
loope
jno
and
mov
xchg
popa
add
inc
fdiv
cmp
inc
mov
or
and
cmp
and
cli
mov
fsubrs
xor
daa
cmc
jne
les
je
cmp
movsb
pop
dec
mov
jnp
push
sbbb
into
lods
inc
out
call
imul
push
jle
add
cld
aaa
jne
jo
xor
cs
dec
popf
push
test
out
mov
dec
adc
andb
and
cld
xor
dec
imul
push
psubw
xor
inc
or
mov
jmp
inc
repnz
insl
adc
cmp
mov
dec
add
or
aas
in
shlb
pop
mov
xchg
sub
mull
sbb
cmp
icebp
fisubl
dec
jo
call
or
or
jbe
neg
adc
mov
mov
popf
pop
xlat
dec
adc
mov
dec
mov
cmp
inc
mov
je
test
push
bound
movsb
in
dec
dec
jecxz
movsb
loop
es
aam
add
inc
fldcw
in
pop
ds
mov
pop
ss
mov
loop
inc
ss
dec
in
call
lret
or
icebp
divl
cli
cmp
fwait
lock
xchg
out
cwtl
jbe
push
cmp
insl
xchg
cs
adc
xchg
mov
call
push
repz
add
lock
loope
pop
rcl
int3
movsl
mov
sub
or
add
call
jo
inc
jnp
inc
cld
sahf
add
repz
push
and
push
int3
jae
repnz
inc
jg
in
pop
or
cmp
mov
mov
mov
or
in
imul
movsb
in
test
in
jno
sahf
mov
in
pop
mov
cmp
daa
out
adc
mov
je
jmp
pop
mov
inc
jmp
xchg
mov
divb
test
cmc
mov
jecxz
insl
push
das
stos
dec
mov
test
inc
xchg
call
inc
pop
test
jmp
adc
dec
jo
lods
push
dec
push
ds
dec
inc
xor
dec
or
inc
xor
add
jg
dec
sub
adc
xor
add
lea
in
xor
sub
int3
mov
inc
xor
dec
into
shl
outsl
lods
lret
aas
enter
dec
cmp
movb
xor
int3
es
add
sbb
jb
outsb
fists
push
fs
dec
and
add
or
imul
jb
inc
pop
push
mov
call
inc
inc
inc
jno
dec
hlt
adc
inc
adc
push
inc
roll
popa
jne
stos
jo
pop
popa
sar
cltd
sbbb
push
es
fldcw
outsb
jp
add
sbb
in
push
bound
push
pop
sub
aaa
jmp
dec
mov
pop
mov
push
push
add
xor
cld
filds
push
pop
jae
imul
push
ja
lods
add
lret
pop
inc
inc
loopnew
jne
loopne
add
jns
push
mov
call
push
mov
cmpsl
pushf
sub
pop
jo
xor
insb
jo
inc
das
or
jae
cli
jmp
jg
arpl
lods
repz
inc
jnp
push
and
sahf
cmpsl
pop
dec
xchg
or
cwtl
push
push
and
dec
fiadds
inc
push
repz
dec
push
outsl
cwtl
or
out
rcrl
fwait
out
dec
dec
in
push
push
xlat
dec
lret
gs
js
mov
xchg
loope
mov
jb
xor
add
jns
jb
xor
cmp
test
js
inc
filds
pop
dec
inc
dec
arpl
and
les
jnp
jb
pop
aas
pmaxsw
aam
push
jo
push
cmp
mov
sub
jp
data16
int3
ja
outsb
inc
cmp
xor
jne
add
or
jbe
movsb
data16
dec
in
rclb
mov
pop
xchg
xor
push
push
sti
xor
add
outsl
insl
repz
pop
pushf
rol
push
dec
or
xchg
sti
aaa
fmuls
dec
add
jae
arpl
mov
pop
scas
popa
cmp
test
push
pusha
jmp
and
pop
mov
jne
jge
push
push
jge
fs
cltd
adc
cmc
sbb
das
pshufw
pop
mov
inc
adc
imull
das
and
data16
jne
inc
inc
mov
ds
es
insb
sbb
jp
mull
ret
dec
add
jb
and
dec
mov
inc
inc
mov
jns
addb
out
and
int
sete
push
aas
pop
sbb
lds
mov
xor
and
add
inc
cmp
adc
dec
pop
mov
sbb
and
test
sub
sub
pop
inc
xchg
cs
adc
inc
enter
inc
dec
pop
inc
lret
fwait
and
jmp
sti
ja
std
xchg
fmuls
push
outsl
push
dec
dec
push
jnp
push
push
sbb
aaa
ss
xor
cmp
push
jne
and
xor
mov
movb
cltd
inc
cmpl
ds
in
sub
mov
or
push
sbb
mov
or
repnz
push
add
mov
dec
cmp
add
icebp
movsl
mov
leave
jle
and
jecxz
or
dec
jae
pusha
test
into
cmp
aas
js
insb
and
cmp
adc
fwait
xchg
lods
arpl
push
push
inc
sub
je
ret
pop
mov
stc
fsubl
or
lea
and
jne
mov
mov
push
imul
repnz
inc
in
jbe
pop
call
in
sbb
push
and
sub
call
dec
repnz
fs
out
push
into
arpl
enter
shll
inc
loopne
pop
cmp
pop
jle
popa
insl
jno
inc
daa
inc
dec
jg
jno
daa
cmpsl
xor
xchg
das
ds
cmp
jb
fmuls
aas
jno
test
and
pop
out
arpl
cmp
call
sahf
jno
test
push
fs
push
jbe
insb
xchg
addr16
xchg
inc
js
jecxz
mov
mov
in
mov
xchg
popa
fistps
mov
mov
leave
and
cwtl
roll
movl
aaa
sub
dec
sbb
add
jnp
push
and
icebp
cmp
pop
orl
ficomps
lret
fsubrl
pusha
push
lcall
aas
mov
or
pop
outsl
pop
jne
mov
adc
call
lock
xor
push
sub
in
dec
test
mov
xor
mov
out
pop
sub
in
inc
xchg
sti
mov
push
mov
call
pop
insl
adcb
mov
in
push
cltd
pop
std
adc
sbb
xchg
pop
mov
hlt
push
inc
repz
and
jl
pop
movsl
mov
inc
sub
mov
movl
outsb
rcrl
movsl
mov
bound
mov
dec
or
adc
and
mov
dec
inc
enter
imull
sub
and
mov
shlb
cli
testl
xor
xchg
sbb
add
pop
bnd
and
cwtl
negl
cmc
mov
imul
adc
inc
mov
test
pop
out
push
call
xchg
fldenv
jae
ja
andb
lock
test
in
mov
mov
cmc
dec
aas
fistps
out
clc
mov
out
orl
add
pop
pushf
or
sbb
push
out
call
and
test
sub
adc
inc
pop
aas
pop
shll
out
and
fists
adc
xchg
push
call
add
dec
mov
xor
xchg
sub
rcr
es
mov
out
dec
push
cli
push
or
std
xor
and
inc
mov
std
add
pop
loop
in
sbb
inc
push
add
pop
aam
pop
cmpsb
inc
adc
js
dec
dec
jbe
test
sub
mov
sbb
jle
and
jbe
sbb
scas
in
mov
fs
mov
mov
pop
repz
in
xlat
and
sbb
les
dec
add
rcrb
xchg
mov
pop
ds
adc
jmp
aam
mov
xchg
push
mov
mov
fdivrl
cmp
ja
sbb
cwtl
or
xor
aad
loop
pop
dec
mov
adc
adc
aas
cmp
and
out
xor
fiadds
sub
inc
xor
leave
and
jbe
and
pop
mov
repnz
xchg
rclb
add
dec
add
aas
xor
loopne
insb
inc
push
xchg
adc
ljmp
fdivrs
adc
ljmp
jbe
and
pop
test
mov
ja
mov
aaa
test
mov
sub
inc
lret
pop
xchg
mov
push
pop
adc
imul
xor
cmp
xor
and
or
adc
and
push
insb
add
shl
aam
outsl
push
push
inc
mov
sbb
fdivrl
cmp
jl
dec
adc
sar
mov
sub
aaa
lcall
sub
jecxz
adc
insl
in
mov
sub
push
loopne
mov
and
lea
insb
mov
push
and
xchg
xor
mov
lods
fwait
jo
sti
add
fstl
xchg
push
pop
dec
and
fnsave
inc
out
mov
mov
sahf
xchg
ljmp
repnz
and
xor
mov
ret
pop
aad
cmp
inc
mov
ffreep
outsl
mov
stos
cmpl
mov
aam
jge
jne
adc
and
movsb
aas
and
push
sub
cwtl
cs
fsubl
sub
pop
nop
jg
pop
push
repz
or
push
xchg
jne
add
stos
dec
fildll
or
incb
or
xor
cmp
or
idivb
enter
pop
popf
lods
sbb
push
sti
stos
js
cli
push
adc
daa
mov
mov
out
test
push
mov
push
cmpxchg
xchg
aam
aad
xchg
aam
add
iret
in
in
mov
jnp
pushf
dec
mov
jnp
int3
or
push
repz
adc
test
mov
cmp
rcll
cwtl
adc
cmp
push
loope
pminub
andps
mov
in
call
inc
pop
pop
cmp
mov
inc
aas
push
or
push
jne
xchg
push
lods
addr16
or
dec
inc
repz
push
or
and
negb
test
int3
add
add
add
add
data16
add
add
add
add
add
arpl
add
add
add
xor
add
pop
add
add
add
push
add
add
add
add
add
add
add
imul
add
add
add
jo
add
add
push
add
add
add
add
jbe
add
add
add
add
add
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
push
add
jbe
add
add
add
add
add
add
add
add
add
push
add
add
add
add
inc
add
dec
add
cmp
add
dec
add
outsl
add
add
add
add
add
add
add
add
add
add
js
add
inc
add
add
jbe
add
dec
xor
add
add
add
cmp
add
add
add
insl
dec
add
add
add
add
add
add
add
add
add
add
inc
add
push
add
add
add
add
inc
cmp
add
add
add
add
push
xor
add
add
add
add
outsl
add
add
add
insb
add
je
add
add
add
jb
add
cmp
add
add
add
add
insb
inc
xor
add
add
imul
add
add
add
add
add
insb
add
dec
add
add
dec
add
add
add
imul
add
add
xor
add
add
add
add
add
add
add
xor
add
add
xor
add
add
add
dec
jp
dec
add
add
add
add
add
add
add
add
xor
dec
add
insb
je
add
inc
push
je
add
add
add
pop
push
add
add
add
add
rclb
or
adcl
in
lret
mov
aam
das
call
popa
les
mov
mov
leave
jg
sub
or
push
lods
mov
push
lahf
iret
ljmp
xchg
sub
sarb
add
pusha
outsl
ja
aaa
pop
outsl
xchg
int
add
les
jb
fdivp
dec
fcompl
add
inc
movsb
roll
mov
and
or
or
pop
lahf
insl
mov
aam
lock
xor
in
pop
mov
adc
xchg
inc
fsub
add
sub
mov
mov
fsub
inc
cmpsl
fmuls
push
push
ret
inc
sti
call
cltd
rorb
repnz
mov
in
sub
adc
pop
pop
dec
inc
sub
add
jg
cld
cld
xchg
outsl
push
mov
push
hlt
xchg
andl
outsl
or
adc
add
adc
dec
or
adc
ja
and
inc
push
inc
test
mov
addr16
dec
insl
add
adc
xor
mov
inc
or
jmp
xchg
xor
das
mov
adc
push
enter
cmp
sub
outsl
dec
aam
mov
sub
lahf
iret
jae
pop
push
testb
int
add
out
or
jle
out
cmp
cmp
jne
push
pushl
notl
add
testb
dec
mov
sub
jae
dec
inc
or
jmp
and
and
pusha
mov
imul
fstpl
loop
push
jne
adc
mov
scas
call
jbe
inc
sub
je
sbb
syscall
push
je
ja
jb
fimuls
push
adc
or
jmp
jmp
int
sub
in
pop
and
add
stc
pop
sti
mov
popl
jmp
popf
jo
or
je
ljmp
push
cli
shll
sub
ja
push
push
lcall
shrb
sub
out
cmpb
je
and
jmp
mov
mov
lret
test
cmpsb
cld
je
insb
cmp
jne
jnp
sub
imul
out
inc
out
adc
shlb
jb
or
jge
sbb
ja
mov
and
xlat
popa
stos
or
pop
pusha
xchg
bound
and
adc
lock
and
test
mov
cmp
dec
jne
arpl
call
jmp
cmpsb
or
adc
jmp
ret
addb
dec
and
or
xchg
mov
jge
repnz
into
arpl
xor
call
scas
aam
jmp
add
dec
sbb
push
or
imul
jns
sub
mov
add
imulb
jmp
push
and
test
dec
je
jmp
aaa
lock
sub
jno
divl
inc
jno
push
in
cmp
jne
sub
xchg
or
jmp
adc
test
inc
xchg
je
push
sbb
lahf
xor
dec
loopne
sbb
push
fs
jmp
xchg
xchg
ja
mov
cmp
add
rcrb
jbe
mov
pop
ja
cmp
jne
inc
mov
insb
sbb
cld
bswap
jle
dec
repz
scas
push
cmp
jne
fdivp
push
or
inc
push
inc
mov
sub
mov
mov
jne
mov
outsb
ds
xchg
movsb
ret
dec
inc
jg
xor
jb
inc
sbb
jmp
pop
pusha
push
mov
jl
call
push
inc
dec
sub
or
je
es
jmp
cmp
pop
xor
add
pop
or
fistps
jno
lcall
scas
mov
cld
inc
fisubl
mov
sbb
xchg
ds
aas
pop
iret
sub
inc
cmp
rorl
outsb
bound
fsts
rol
rcr
inc
mov
int
out
cli
jb
mov
ja
pop
inc
std
jne
fildl
cmpsb
ret
call
lock
icebp
clc
lcall
pusha
mov
xor
mov
mov
add
movb
jle
dec
je
xchg
loopne
call
xlat
aam
jbe
mov
xchg
push
imul
pop
or
ret
add
push
idivb
call
sarl
mov
sti
sub
jg
mov
pop
in
push
mov
sbb
pop
add
loop
and
shlb
outsb
lahf
inc
adc
scas
int3
jne
and
fsubrs
pmuludq
sub
ret
in
jne
nop
and
mov
hlt
outsb
test
cmpsb
sub
sub
outsb
mov
jnp
inc
inc
jmp
sarb
and
pop
and
dec
jae
iret
mov
inc
das
cmp
cld
je
xchg
mov
les
cmp
mov
ret
sti
into
in
sub
cs
push
call
xor
bound
inc
out
push
jl
push
inc
stos
dec
std
out
stos
jmp
dec
mov
leave
jmp
jg
bound
lea
inc
out
ds
lret
cmp
adcl
inc
mov
aaa
scas
cmp
outsb
xor
or
insl
and
movsb
xchg
fbstp
in
test
inc
aaa
dec
adc
outsb
movb
xor
add
xor
inc
jnp
xchg
add
add
mov
jae
pusha
clc
pop
inc
sbb
mov
jecxz
aas
cmc
movsb
push
orl
jnp
mov
sahf
in
mov
out
lock
and
dec
hlt
pop
mov
je
loop,pt
and
repz
and
and
xor
shrb
cmpsl
leave
mov
or
mov
and
and
pop
jnp
dec
add
sarb
pop
push
stos
popf
in
mov
ljmp
mov
inc
outsl
ljmp
mov
fdivrl
pop
mov
cli
inc
cltd
cmp
add
and
pop
mov
cmp
push
pop
dec
push
jb
jge
out
push
cmp
out
jo
lods
sysenter
insb
jbe
out
cmp
js
cmp
jl
inc
loop
addb
test
dec
and
outsb
push
loop
nop
inc
push
jbe
out
pop
and
inc
pusha
ja
outsb
fs
movsb
inc
push
and
addl
jb
adcl
jbe
pop
push
dec
add
pop
inc
jecxz
jne
xchg
loop
fwait
inc
push
xchg
push
in
mov
mov
add
lea
pushf
pusha
in
push
pop
xor
out
push
enter
aaa
dec
dec
out
iret
add
in
insb
ret
icebp
xchg
testb
ret
mov
insb
orb
addr16
adc
push
sbb
sbb
das
ret
cmpsb
mov
fwait
movsb
push
push
dec
jmp
mov
pop
sar
lea
es
fcmovnu
mov
lds
int
pop
loop
rorb
xor
lock
sti
int3
or
pushf
cmp
imul
dec
cmc
and
pushf
xor
push
pop
and
xchg
dec
cs
rorb
add
in
data16
fcomi
jbe
pop
into
movsb
inc
rolb
jb
out
cmp
aam
jae
add
add
sbbb
and
and
mov
mov
dec
ret
mov
inc
scas
ror
arpl
loopne
and
mov
in
dec
std
mov
mov
jbe
pop
mov
out
sub
mov
inc
inc
nop
sysret
ret
push
mov
push
mov
adc
mov
cmp
inc
int
mov
iret
mov
push
push
xor
lds
cltd
push
aam
lret
jne
push
dec
inc
mov
mov
test
add
add
or
je
icebp
mulb
jnp
push
pop
add
sbb
es
call
aaa
cmpsb
leave
jbe
pop
cmp
dec
push
jp
mov
fsubrp
pop
gs
std
push
xchg
jecxz
push
add
and
mov
xchg
sub
int3
sbb
pop
xor
fcompl
adc
dec
lock
sub
in
inc
sbb
add
mov
jle
jne
jmp
adc
mov
ficoml
mov
negb
xchg
in
xchg
and
xlat
jp
inc
mov
jmp
and
inc
xchg
mov
cld
mov
cmp
lods
mov
jbe
push
push
dec
mov
lods
add
stos
adc
loope
mov
sbbl
pop
test
dec
call
jne
lahf
data16
cmpsl
outsl
and
xor
add
add
add
add
push
add
add
add
xor
push
add
dec
add
add
add
add
push
imul
add
add
add
add
js
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
aaa
add
add
push
add
add
jns
add
add
add
pop
dec
push
add
dec
add
imul
add
add
add
jb
add
add
add
add
data16
add
push
ja
add
add
add
add
inc
add
add
add
pop
add
inc
add
add
add
add
add
add
add
add
add
add
add
cmp
add
push
add
add
add
add
add
add
inc
add
add
add
add
add
add
pop
add
add
insl
inc
add
xor
add
cmp
add
add
outsb
pop
add
add
add
cmp
add
dec
add
add
add
add
push
add
add
add
ja
add
add
add
add
push
add
add
add
add
insb
add
outsb
add
add
add
add
add
add
add
xor
add
outsl
jb
add
jne
add
push
add
add
xor
add
add
add
jb
jbe
add
push
add
add
jno
add
inc
add
outsb
add
add
add
inc
push
add
js
jne
add
add
add
add
inc
add
add
dec
add
add
add
add
add
add
inc
add
add
add
add
add
and
out
or
bnd
scas
pop
loopne
and
lahf
mov
mov
mov
mov
sarl
hlt
cmp
lret
movsl
aaa
mov
jle
adc
int3
and
inc
inc
cltd
imul
xor
test
les
loop
inc
mov
shlb
outsl
in
jne
in
ss
jo
jmp
pop
cmp
loope
nop
inc
mov
dec
in
sub
nopl
je,pt
or
mov
ss
pop
repnz
das
mov
and
inc
mov
daa
jae
icebp
inc
jle
in
inc
dec
les
push
mov
es
shl
repnz
pushf
aaa
out
mov
xlat
sbb
jb
mov
dec
pop
push
inc
outsb
icebp
dec
mov
test
mov
mov
mov
inc
das
nop
icebp
cmc
sbb
or
jl
xorb
data16
cmp
xchg
insb
les
loopne
sahf
push
lock
call
ret
movsl
ja
cmp
movsb
add
sub
push
pop
sbb
scas
push
add
pop
cltd
adc
mov
pop
xchg
fidivrl
stos
pop
ja
cmp
clc
push
adc
aam
push
pushf
lret
mov
stos
cwtl
jecxz
out
inc
push
cmpsb
loop
rolb
dec
xchg
outsb
or
divb
jle
xor
jecxz
push
pop
sub
push
lods
push
jb
sub
mov
push
inc
push
add
ljmp
push
divl
ss
inc
adc
push
ljmp
mov
push
ja
ss
mov
inc
push
sbb
add
outsl
lods
inc
bound
incb
scas
outsl
xchg
idivl
jge
aas
jg
outsl
clc
cmp
ja
ds
inc
outsl
inc
jbe
inc
xchg
and
inc
or
arpl
sub
cwtl
outsl
test
mov
push
rol
outsl
add
sub
pop
scas
outsl
dec
sbb
bound
push
and
mov
mov
inc
in
in
hlt
out
add
out
dec
loop
cmpsb
sub
testl
fs
das
jbe
imull
inc
shlb
ret
mov
cs
hlt
jo
pop
and
outsb
call
out
dec
in
and
jmp
bound
dec
scas
leave
mov
mov
mov
in
push
lock
push
inc
mov
pop
out
and
ljmp
pop
pop
out
xor
jbe
inc
adc
in
mov
xchg
test
xor
std
xor
repnz
mov
popf
ss
jge
dec
mov
cmp
lock
cmp
pop
in
je
aad
mov
jg
lock
lods
leave
aam
sahf
shl
adc
movsb
and
cs
stos
scas
add
cli
ljmp
dec
push
ror
nop
rorl
inc
xchg
jo
add
cmp
xchg
scas
add
fwait
sbb
push
enter
leave
lret
jns
inc
xorb
out
add
sub
aad
je
ret
dec
push
push
dec
add
shll
add
sar
jge
sub
push
adc
xor
fs
out
sbb
hlt
dec
jbe
pop
adc
add
lods
je
bound
pop
sub
inc
into
sbb
rclb
lret
sub
les
mov
out
and
mov
pop
and
pop
ret
je
and
fmulp
popf
add
movl
push
xchg
add
sar
pop
ss
adc
sbb
dec
aad
cmp
int
lock
rcll
xchg
sqrtps
add
pusha
mov
cmpsl
pop
adc
cmp
dec
mov
adc
cmp
mov
std
adc
add
das
jbe
cmp
add
ror
sbb
cmc
inc
pop
or
inc
lret
add
adc
pop
push
cmp
daa
cltd
xor
jp
adc
fisubrs
cmpsb
jecxz
mov
out
xor
add
xchg
and
iret
mov
xor
addl
jns
js
add
cmp
pop
inc
sub
out
in
outsb
add
movsb
test
xor
lret
ficoml
dec
or
cmp
enter
add
push
jns
add
setno
adc
jbe
cmpsl
push
push
adc
adc
mov
add
mov
xor
dec
push
bound
inc
cmc
add
dec
stc
adc
clc
lock
jbe
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
add
add
dec
popa
add
add
xor
add
data16
jns
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
dec
add
add
push
add
add
add
xor
inc
push
add
add
add
add
add
add
add
add
inc
add
ja
add
cmp
add
add
add
popa
add
cmp
add
add
add
add
add
add
add
add
inc
add
add
jbe
add
add
add
add
je
add
add
add
jns
add
add
add
add
add
outsb
add
add
pop
add
add
bound
add
data16
xor
add
add
add
dec
add
add
add
add
add
add
jb
pop
add
add
add
add
add
add
add
xor
add
add
add
push
insl
add
jno
popa
bound
add
ja
ja
add
add
add
add
push
bound
add
push
add
add
xor
add
add
inc
add
add
add
popa
add
add
add
add
cmp
add
xor
xor
jne
dec
add
add
add
inc
add
add
inc
add
add
add
add
add
add
mov
mov
adc
test
add
enter
ret
xor
movsb
data16
sbb
lods
or
mov
call
inc
mov
pop
shrb
movsb
je
mov
enter
mov
int3
xchg
push
and
jne
pop
scas
inc
adc
int
call
aad
aas
add
in
mov
imul
sub
mov
xor
jl
ret
mov
pop
call
lret
jl
in
mov
insb
mov
add
xor
jle
push
aam
adc
add
jae
aam
daa
pop
sahf
call
out
mov
cmp
leave
in
loopne
dec
loop
xchg
jb
iret
jnp
test
stc
mulb
test
jbe
jno
imul
dec
push
mov
shll
inc
lock
sarb
out
add
cmp
xchg
jmp
arpl
fisubl
scas
mov
xchg
gs
cmp
push
jecxz
mov
add
and
dec
testb
mov
fs
or
add
cmp
mov
outsl
jle
test
inc
je
lret
cmp
roll
roll
and
test
mov
lahf
add
inc
sbb
andl
sub
cmp
pop
ret
out
call
mov
in
jmp
add
fs
scas
sub
mov
fistl
incl
and
mov
cld
mov
cmp
icebp
scas
ret
les
je
test
out
push
adc
imul
out
push
jae
xchg
xchg
jg
out
push
and
movsb
test
mov
iret
xchg
das
pop
inc
pop
lock
add
aam
jb
xor
ds
add
add
stc
mov
dec
cli
adc
mov
add
xor
sub
add
dec
sti
jb
sbb
loopne
sbb
pop
jl
sarb
xchg
imul
ja
cmp
sub
push
pop
addb
insb
and
shlb
je
mov
inc
pop
rclb
testl
sub
and
jmp
cwtl
mov
test
sbb
jne
aaa
inc
add
dec
mov
or
subb
push
jae
inc
out
imull
les
rcrl
dec
pop
inc
xchg
pop
mov
mov
outsl
cmp
mov
je
or
lcall
and
mov
je
sahf
add
ret
orb
jne
popa
test
das
push
add
cmp
or
mov
mov
push
sub
cmp
movl
js
push
adc
sub
stc
test
adc
hlt
sahf
rolb
mov
mov
incl
movsb
roll
jae
out
fisttps
icebp
jmp
imul
push
repz
repnz
add
mov
sbb
loop
stos
int3
ret
xchg
roll
inc
add
adc
sbb
mov
call
frstor
sbb
cmp
ljmp
out
mov
xchg
shl
fxch
cmpsl
and
sbb
mov
test
jg
xor
xor
push
lahf
cmp
add
dec
dec
mov
jo
aas
push
outsb
and
jne
and
pusha
test
loop
push
jecxz
dec
fisttpl
movsb
mov
and
mov
stos
lahf
negb
push
nop
icebp
mov
outsb
loopne
add
fnstenv
dec
sub
hlt
insl
adc
call
and
jecxz
cmpb
sub
xchg
sub
cmc
mov
clc
inc
sbb
sbb
xor
mov
fsts
pushf
jg
cwtl
pop
or
in
addl
xchg
jl
fmull
test
hlt
push
int3
pop
mov
movsl
or
mov
cwtl
test
inc
jge
push
sahf
pusha
outsb
add
imul
ret
mov
lock
push
xor
aad
jno
les
rcrb
and
loop
mov
sub
cmp
mov
ret
fisttpl
stos
neg
push
outsl
call
inc
sub
add
notl
xchg
fldt
or
add
add
add
add
add
cmp
add
ja
add
jns
add
add
push
add
jbe
add
add
add
add
add
add
add
xor
cmp
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
ss
add
add
add
add
cmp
add
add
add
pop
je
add
add
add
add
push
add
add
jb
inc
add
add
aaa
add
add
add
add
add
add
xor
add
aaa
add
dec
push
add
jp
inc
add
outsl
add
inc
jo
add
add
add
add
add
pop
add
data16
add
jbe
jae
add
add
add
add
imul
add
inc
add
add
add
add
add
add
add
add
add
add
outsb
add
add
add
add
add
dec
xor
add
add
add
add
insl
add
add
arpl
pop
add
add
add
add
add
add
add
add
pop
push
add
data16
add
jb
add
add
add
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
push
add
add
add
add
add
add
add
add
add
dec
ja
push
add
xor
add
dec
add
add
add
add
add
add
add
pop
add
jb
add
add
add
add
pop
add
push
add
add
add
add
add
aam
divb
fadds
mov
dec
push
into
mov
pop
aam
xor
dec
mov
dec
inc
outsl
sub
and
pop
and
fs
cmp
xor
out
nop
dec
xor
sub
push
push
std
dec
dec
ficoml
adc
adc
or
and
inc
mov
xchg
gs
jmp
push
sub
mov
movsb
pop
out
mov
dec
inc
mov
mov
mov
ret
xor
lret
cmp
arpl
iret
popf
out
lea
sub
fdivp
sbb
outsb
push
shl
and
add
add
push
mov
ljmp
xchg
push
add
add
aaa
stc
xchg
jl
shll
xchg
loopne
jno
lock
leave
dec
jo
pop
call
cs
dec
inc
out
lock
pop
hlt
sub
mov
inc
sarb
daa
call
xor
imul
outsb
lea
imul
sahf
sub
sbb
adc
sbb
scas
jl
fstps
lea
adc
push
mov
inc
jbe
rolb
movl
addr16
jno
int
shl
loop
jbe
push
gs
insb
fdivrl
xchg
adc
jb
jbe
push
xor
aam
outsb
pop
dec
or
das
xor
out
push
push
add
add
shr
and
fcmovnu
and
rol
loope
add
adc
cmp
jae
incl
fcomi
and
call
pop
and
les
ljmp
or
sub
cmp
sbb
mov
inc
inc
lea
aaa
sbb
mov
sahf
imul
adc
dec
sbb
dec
lret
inc
push
aas
cmp
fisubrl
clc
dec
gs
into
int3
cmp
gs
push
or
or
out
add
adc
fwait
adc
fisttpl
ret
sub
fdiv
repz
xor
inc
hlt
cmc
mov
cmp
add
fidivl
lods
call
mov
les
orb
cmpsb
cmp
je
mov
lods
cmp
or
xor
insl
push
jne
and
clc
jb
add
js
sub
and
push
push
sub
cmp
lcall
xchg
cwtl
imul
jp
je
das
inc
mov
inc
loopne
push
call
in
push
push
xchg
aas
movsb
adc
cmp
dec
daa
aas
pop
test
sbb
jb
xchg
mov
les
out
pop
push
pop
cmp
dec
dec
and
push
sbb
and
lds
roll
lret
mov
push
loope
mov
inc
jo
hlt
pop
rcrb
shrb
inc
daa
inc
mov
cld
and
repz
jno
loopne
lock
ret
and
not
sub
pop
dec
in
push
roll
lea
xlat
in
push
in
sbb
js
addr16
call
cld
mov
and
cmp
or
scas
push
mov
call
jmp
imul
mov
mov
ret
pop
pop
cld
ror
stos
fwait
scas
or
in
jo
and
xor
jmp
or
lret
mov
es
jb
mov
inc
mov
sbb
jmp
and
out
pop
into
mov
sbb
and
add
sub
xchg
add
mov
shll
movsl
or
or
mov
or
out
scas
jb
jl
test
add
and
mov
movsb
inc
push
cli
xchg
mov
pushf
mov
dec
xchg
mov
addl
nop
shlb
pushf
add
push
inc
not
mov
js
or
repnz
andl
out
inc
xor
out
loop
in
mov
testb
mov
adc
cmpsb
push
rorb
xchg
inc
std
mov
shl
mov
imul
int3
xchg
cwtl
and
not
int
pop
dec
repnz
aam
fdivrl
fcomps
mov
lods
inc
loop
and
cld
adc
test
mov
fildl
imul
lcall
adc
cld
test
cmp
and
iret
loop
or
mov
iret
pop
cltd
dec
lods
int3
cltd
stc
shlb
popf
add
add
fsubrs
movsl
outsb
mov
and
pop
cld
dec
inc
outsl
adc
mov
inc
add
dec
in
gs
or
in
ja
nop
imul
or
les
jo
mov
dec
ret
popf
and
xlat
call
jno
std
xchg
dec
or
imul
das
sbb
and
mov
and
pop
jecxz
inc
jns
pop
xchg
pop
ds
adc
rcrb
repnz
imull
ret
les
popa
jp
lock
fbld
xchg
mov
rcrl
outsb
and
or
xchg
movsb
out
outsb
or
in
push
adc
bound
push
mulb
dec
adc
rcl
or
fs
lahf
dec
fadd
in
clc
pop
int3
add
inc
mov
shrb
pop
out
cli
nop
add
adc
je
mov
push
xor
push
cli
repnz
adc
sub
inc
pushf
loopne
lret
pop
es
jmp
lret
adc
lret
lret
call
or
cltd
sub
in
mov
mov
add
aaa
jmp
lock
and
scas
jnp
mov
sub
add
call
sub
cmp
or
pop
adc
jb
mov
push
add
mov
and
ret
push
mov
shrb
jmp
pop
xchg
or
data16
inc
xchg
jbe
mov
dec
mov
in
cmp
pop
add
or
cs
les
mov
jmp
sti
shl
sub
test
xor
loop
insb
arpl
mov
test
in
and
jo
fsubs
out
loope
inc
mov
cmp
sbb
jb
aaa
ret
mov
iret
sbb
bound
mov
imul
mov
subb
inc
shlb
or
or
iret
and
cmp
or
in
adc
inc
pop
mov
adcl
push
xor
cmpb
in
jp
out
xor
mov
stc
mov
lea
test
inc
out
inc
mov
sub
xor
lds
mov
std
out
jmp
inc
stos
sti
inc
jns
lcall
xorl
jbe
dec
outsl
rorb
shll
and
add
mov
outsb
inc
xchg
sbb
pushfw
jp
sbb
enter
cwtl
iret
pop
lret
fnstcw
cs
or
xchg
mov
cmpb
shl
shll
jb
inc
cmp
addr16
aad
ljmp
sbb
pop
add
or
pop
pop
imul
fisttps
jl
not
fs
xor
es
push
sti
jg
outsb
ljmp
pop
and
popf
insl
aam
aaa
das
add
lds
pop
add
ss
xor
sbb
inc
ret
addr16
je
daa
jnp
popa
in
fnstenv
inc
dec
xor
mov
inc
ljmp
iret
xchg
loopne
lahf
push
cmp
xlat
cmp
push
push
out
dec
test
roll
push
xor
xchg
insb
fistpl
dec
pop
cmp
out
inc
push
sarb
divb
daa
aad
iret
or
mov
in
xorl
or
out
mov
movsb
call
cmpsb
cmp
lods
sub
sti
mov
xor
test
jle
sub
sarb
rcr
add
shll
imul
hlt
enter
jnp
int
aaa
xor
mov
loop
iret
je
imul
adc
sti
repnz
add
aam
lods
aaa
adc
add
mov
or
sub
dec
jbe
xor
enter
add
xorl
adc
mov
push
adc
fadd
cmpb
mov
flds
call
adc
scas
lahf
or
jno
cltd
dec
scas
lods
sub
hlt
sbb
lods
aaa
negb
ret
cltd
imul
scas
loope
mov
fstps
jp
xor
repnz
mov
gs
lods
les
jmp
mov
aaa
shl
add
push
outsb
push
mov
pop
inc
and
ds
ret
ja
fs
andw
aad
xor
lahf
shrl
flds
inc
dec
xchg
pop
sbb
inc
push
bound
arpl
shl
iret
cmp
mov
sub
xchg
push
mov
cmc
addr16
dec
add
add
add
add
add
add
add
bound
add
add
add
add
push
add
add
add
push
add
add
add
add
dec
add
add
jns
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ja
add
add
add
insb
add
add
add
bound
popa
add
add
add
add
add
add
add
dec
dec
push
js
add
add
add
outsb
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
pop
data16
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
pop
pop
add
add
add
add
add
insl
add
add
add
add
add
xor
add
add
add
add
add
add
pop
add
add
add
add
add
imul
add
add
add
add
xor
add
add
imul
add
dec
jno
add
je
add
add
add
add
add
add
add
inc
add
add
add
xor
push
add
add
add
add
add
add
push
xor
insb
add
push
push
add
add
inc
add
add
dec
add
add
add
add
add
add
add
add
inc
push
add
add
add
add
add
add
add
data16
add
add
add
add
add
add
add
add
add
add
xor
add
arpl
dec
add
add
add
push
add
je
add
add
add
add
add
add
add
cmp
add
add
dec
jns
add
add
add
add
add
ja
xor
add
add
add
add
add
imul
pop
xlat
sub
xor
push
cwtl
ss
lock
adc
out
mov
cs
adc
pop
inc
int3
out
mov
movsl
mov
aam
dec
pop
pop
jmp
out
add
mov
fnstenv
mov
push
mov
icebp
icebp
and
in
repnz
jmp
add
and
push
ss
jne
mov
lcall
xor
inc
out
fs
arpl
push
and
add
sub
and
add
in
push
jl
xchg
fistps
mov
int3
ret
int
fcoml
clc
ret
dec
inc
stc
arpl
xchg
cwtl
pop
mov
mov
sub
jb
call
xorb
mov
in
push
inc
mov
push
xor
and
push
push
es
out
call
xchg
insl
add
insl
inc
push
cmp
and
inc
mov
je
mov
movsl
movsl
lea
daa
std
mov
enter
ret
icebp
xor
call
call
jge
pop
shlb
inc
and
aad
dec
mov
cmp
scas
aas
inc
nop
cmpl
loop,pt
dec
pop
mov
daa
push
lea
inc
add
dec
add
jbe
out
nop
adc
out
or
push
pop
adc
mov
pop
ficoml
push
pop
rolb
and
rcrb
dec
sti
icebp
stos
loop
inc
call
pop
xor
push
loop
fisubs
add
push
xchg
je
push
insb
xchg
movsb
pop
add
imul
or
sub
jecxz
push
shr
push
aam
data16
sarb
testb
mov
jge
outsb
bound
test
fmuls
pop
cld
jecxz
pop
push
lea
in
into
out
ret
shl
pop
loopne
inc
std
dec
or
ss
jl
sarl
push
lret
lock
out
cmpb
add
out
dec
incl
shr
test
pop
pop
mov
inc
jmp
pop
dec
incl
jb
sbb
movsb
pusha
test
lods
add
mov
out
into
cmp
inc
mov
in
or
into
out
rcl
aaa
fnstcw
scas
xor
out
pusha
push
cmpb
or
jecxz
in
stc
mov
mov
cli
xor
mov
xor
adc
pop
in
or
dec
mov
cmp
imul
xlat
xor
adc
mov
call
jg
aaa
shlb
cmpxchg
call
fstl
sub
pop
pushw
notb
int3
or
aas
mov
sub
into
add
call
add
jp
push
fs
jecxz
inc
mov
inc
test
inc
in
mov
jecxz
add
mov
add
inc
add
call
ret
negl
or
inc
sub
rep
das
sti
shll
cmpl
adc
mov
pop
cmp
adc
test
jb
jo
adc
in
or
pop
inc
add
cmpsb
push
add
mov
sub
pop
test
lods
mov
pop
push
ret
adc
rcl
movsl
in
sbb
jl
ljmp
add
decb
cmpsl
push
popa
movsl
cmp
or
push
cmp
test
inc
push
lods
in
dec
jbe
out
sub
lods
jmp
xchg
mov
push
xor
mov
cmp
icebp
mov
cmp
aas
jns
add
fwait
repnz
sbb
ret
sub
shll
in
call
imul
dec
jmp
std
cs
mov
loopne
lret
mov
mov
jo
jecxz
cld
and
and
lea
out
or
cmpl
mov
fiaddl
dec
jge
enter
sub
scas
sbb
pop
in
test
in
dec
jb
fdivs
sbb
sbb
fsubrl
xchg
push
mov
xchg
out
and
fsub
das
cwtl
imul
les
jg
and
fwait
mov
cmpsb
or
call
add
icebp
mov
or
or
arpl
data16
push
loopne
loopne
fxtract
xor
repz
out
or
pop
das
push
mov
movl
add
add
cmp
xor
imul
push
jns
push
pop
sbb
push
mov
es
aas
and
inc
xor
inc
test
jne
sub
shll
shrb
xchg
and
add
insl
pop
fcompl
call
adc
mov
shrb
and
out
fs
cmp
fs
add
push
popa
jns
testl
or
sbb
jo
fsubrl
or
xor
mov
das
insl
push
popf
jne
ja
inc
inc
push
in
xor
in
outsb
in
call
adc
enter
add
rcl
jle
mov
les
insl
popa
call
sti
xor
jle
fstp
sbbb
sarb
cmpsl
loop
hlt
aaa
subb
movsb
outsb
lret
je
cmp
inc
inc
xchg
inc
cmp
mov
fidivs
mov
cmp
je
inc
mov
adc
mov
add
loop
aaa
sahf
cmpsb
mov
fidivs
mov
add
loop
dec
call
adc
push
popa
jne
xor
jmp
sbb
xchg
das
icebp
dec
out
stos
add
push
dec
cmp
jno
inc
add
into
dec
xchg
loopne
mov
test
sub
mov
mov
pop
or
inc
inc
out
cmp
jb
jmp
xor
test
add
ss
mov
inc
xor
mov
scas
inc
or
dec
test
jne
adc
or
filds
cmp
dec
out
mov
sbb
rorb
mov
push
sub
lcall
pusha
cmpsl
sub
insl
add
push
dec
mov
mov
xchg
je
fs
aad
pmulhuw
lahf
jns
and
xor
mov
dec
rcrb
lods
push
gs
push
jne
sahf
cld
add
xor
sarb
stc
inc
mov
or
outsb
icebp
js
add
mov
and
xchg
xchg
add
data16
ja
int3
imul
js
and
dec
out
lods
fdivrl
sti
ja
or
inc
dec
mov
loopne
das
xchg
push
add
adc
sub
inc
dec
mov
scas
fdivrl
shrl
ja
and
add
jle
fninit
mov
and
xchg
mov
nop
jo
inc
pop
jnp
stos
in
fwait
pop
scas
xor
repz
loop
push
loope
pop
add
jg
insl
mov
ficomps
pop
stos
push
daa
inc
fldt
mov
xor
sub
lds
lret
and
add
jle
scas
and
repnz
ret
jae
inc
enter
jmp
mov
inc
xor
call
jno
and
movsb
inc
or
in
inc
scas
clc
sub
push
call
insb
sub
push
or
mov
popf
adc
jne
call
mov
subb
and
fimull
pop
test
ret
sarb
inc
dec
outsb
stos
jne
sbb
pop
mov
out
popa
or
test
sub
lahf
jno
fsubs
and
stos
jns
mov
call
js,pt
das
cmpl
mov
call
pushf
sbb
es
push
call
cli
push
inc
ds
pop
pop
cmp
inc
test
aaa
and
jmp
movsl
sbb
pop
inc
mov
je
mov
cmp
out
cs
test
in
out
or
mov
sub
mov
ljmp
mov
stos
jp
ret
scas
imul
inc
inc
xor
fstl
fdivrl
fadd
lea
push
lds
xor
adc
out
movsl
inc
hlt
sti
rol
xchg
adc
test
push
jnp
outsl
sub
jle
call
cmp
jns
je
cmp
loop
jmp
je
mov
and
jo
xor
out
jo
and
push
inc
das
jl
dec
lcall
ss
jae
adc
mov
push
and
dec
inc
xor
ja
push
and
add
in
mov
jb
test
xchg
stos
jl
mov
shlb
pop
outsl
add
insl
sub
ret
cmpsb
cmc
lret
fisttpl
mov
add
dec
add
jbe
add
xor
add
add
add
add
insb
add
add
add
add
add
data16
add
add
add
add
add
add
add
add
add
add
pop
push
add
jb
add
add
jp
add
push
add
add
add
add
add
add
add
pop
push
inc
add
add
add
outsl
push
add
add
add
add
jns
dec
add
xor
arpl
add
add
add
add
add
add
add
add
jp
add
add
add
add
add
je
add
add
add
add
add
add
add
push
add
add
add
add
cmp
add
add
add
add
add
ja
add
add
add
dec
add
add
inc
jno
jp
outsb
push
dec
add
add
add
add
add
add
add
add
js
dec
add
add
add
add
add
add
je
imul
add
add
add
add
add
xor
bound
add
add
add
add
add
add
js
add
add
add
add
add
cmp
add
data16
add
add
add
add
dec
add
jno
add
add
add
add
add
push
jbe
add
add
add
add
add
add
add
dec
aaa
add
add
add
jne
add
add
add
add
add
add
add
add
xor
add
jae
imul
add
add
add
add
add
add
add
add
add
add
inc
outsb
push
add
xchg
add
xor
rorb
pop
imul
jne
pop
cmp
aad
dec
outsl
or
push
push
push
adc
aam
popa
pop
adc
push
aam
shll
pop
push
adc
dec
mov
movsb
arpl
or
lret
dec
sub
and
jle
mov
sub
out
clc
add
mov
fisttpll
movsb
jecxz
add
jg
cmp
or
pushw
jl
out
cwtl
mov
add
adc
int3
push
outsb
or
pop
cmp
push
jb
jmp
dec
mov
or
sub
push
sbbb
push
push
repz
push
call
push
nop
test
sub
mov
xchg
inc
sbb
jbe
mov
scas
je
xchg
push
xlat
clc
les
shrl
and
shl
cmp
adc
jns
repnz
into
not
xor
cmpsl
cmp
jae
sbb
xchg
add
cmp
adc
je
sbb
mov
pop
or
xchg
xor
mov
mov
jl
in
jle
movsl
inc
pop
ja
pop
push
inc
popa
push
jp
dec
jns
je
jnp
jns
js
je
sti
shl
and
jbe
add
and
inc
pop
sub
scas
cmp
sarl
and
add
xchg
push
iret
xor
add
xchg
inc
fcompl
adc
sbb
mov
sub
lods
add
enter
push
dec
in
hlt
les
sub
add
clc
jbe
sbb
movsl
les
cmpb
mov
add
push
add
clc
daa
call
sbb
push
mov
insb
adc
sub
popa
into
lock
inc
mov
pop
inc
sbbb
and
sub
nop
inc
ds
outsb
out
int
nop
mov
outsl
mov
and
inc
stos
and
mov
insl
aaa
sarb
loopne
xlat
les
xor
mov
outsl
mov
and
ja
int3
scas
lock
xchg
loope
pop
mov
inc
pop
pop
mov
sbb
mov
outsb
jns
ja
mov
lds
push
xor
cs
jbe
xchg
enter
dec
shr
leave
mov
sub
cmc
stos
mov
aam
fiadds
std
dec
loopne
or
cmp
fsubs
add
adc
mov
lock
insl
sbb
xor
mov
das
ljmp
leave
cmp
add
push
mov
and
push
add
adc
les
push
adc
xchg
jnp
test
pop
push
shll
mov
cld
in
rcrl
sub
inc
xorb
sbb
inc
mov
mov
int3
lea
sub
pop
cmp
je
adc
hlt
call
je
mov
insb
cmp
jl
push
mov
cmpsl
push
mov
enter
rorb
adc
cmp
or
divb
outsb
add
cmpsb
hlt
ret
add
imull
cmc
dec
mov
leave
sbb
jmp
in
jns
adc
les
jb
cmpb
jne
test
mov
data16
inc
iret
jmp
je
cmpb
xchg
ds
push
je
push
dec
add
shl
lds
cld
add
je
imul
push
add
fidivrl
rorl
and
cmp
inc
dec
sbb
loopne
ret
lds
push
rolb
into
icebp
add
cmp
xor
fs
or
das
cmp
xor
push
jecxz
leave
add
mov
and
inc
pop
test
add
mov
out
icebp
or
rcll
scas
jne
aas
cmp
mov
movl
add
test
rcll
add
shl
cmp
mov
cmp
out
or
arpl
and
xorb
cmovae
push
cmp
orl
add
inc
pop
add
es
cwtl
aaa
out
fwait
xor
pushf
sub
xchg
call
dec
add
pusha
adc
inc
jne
dec
cs
add
or
sbb
fimuls
leave
call
psllq
test
clc
inc
add
mov
add
xor
lds
mov
inc
or
jb
pop
pop
je
mov
addl
add
add
mov
shrb
out
mov
test
mov
fldcw
fnstcw
fsubs
es
xchg
lea
jge
jb
movsl
out
nop
push
outsl
mov
adc
and
cmpsb
out
and
rorb
xor
jne
cmpb
iret
cmp
jne
pop
mov
jp
and
push
and
repnz
scas
clc
movsb
fldenv
notb
movups
ds
pop
fmuls
cmc
jne
or
adc
loop,pn
ret
xor
sbb
jg
paddq
rclb
dec
mov
call
fistl
pop
hlt
jne
lret
fsubr
loop
sbb
or
iret
push
xor
enter
dec
add
je
sahf
je
and
and
cmp
sub
lock
push
mov
inc
inc
push
inc
push
cmc
inc
adc
xor
adc
push
stos
iret
mov
ljmp
xchg
test
jl
adc
add
and
xlat
out
fisubrl
scas
adc
xchg
push
push
call
cs
push
std
inc
jo
fadds
repnz
push
icebp
ds
push
enter
jo
xor
pop
aad
inc
or
out
inc
lea
ss
aas
jmp
adc
pop
push
andl
arpl
jne
mov
ret
call
movb
push
leave
xor
sub
out
stos
out
incb
loopne
rorl
rorb
cmp
xor
push
call
jl
pop
pushf
cmp
inc
sbbb
orl
daa
scas
push
push
and
mov
cli
adc
sbb
adc
and
inc
sub
aam
scas
mov
out
cmp
push
inc
imul
or
dec
push
ja
cmp
jne
adc
xchg
aaa
sbb
xchg
adc
sbb
mov
js
push
sbbl
mov
adcb
out
inc
lock
cmpsb
xchg
cmp
sbb
inc
cld
inc
mov
lea
inc
xchg
inc
int3
es
imulb
sub
mov
cmpb
inc
xchg
adc
or
outsb
pop
inc
and
imul
xchg
adc
cmp
inc
xor
nop
scas
add
jbe
adc
jmp
dec
pop
mulb
mov
xchg
js
mov
mov
divl
mov
push
and
sub
out
cli
add
dec
aam
ss
jnp
in
pop
push
sbb
jp
jo
movb
dec
jp
shr
in
outsl
and
xchg
je
jno,pn
ret
mov
dec
lret
in
ljmp
aas
and
xor
mov
cmp
insl
inc
mov
push
out
loopne
and
jnp
pop
loop
push
outsl
xchg
test
shll
push
pop
jbe
inc
into
pop
iret
jo
sub
divl
dec
pop
push
xchg
lods
inc
push
fcoml
and
mov
jno
mov
int3
insl
insb
mov
push
jne
jp
pushf
es
in
ret
dec
xorb
add
daa
sub
dec
es
inc
inc
xor
les
jmp
cs
int3
insl
cmp
mov
mov
pop
lods
inc
lock
in
inc
push
loopne
xchg
and
les
and
imul
xor
pop
and
inc
cmp
loopne
repz
mov
jmp
int3
sub
dec
mov
call
mov
mov
dec
ret
jle
add
dec
xchg
loopne
add
fsubrl
cmpsl
cli
sbb
jns
xor
clc
das
icebp
adc
and
lods
pusha
and
testb
or
outsb
cwtl
mulb
jns
les
and
and
js
lods
inc
dec
jbe
fadds
jbe
repz
inc
sub
mov
and
xor
stos
mov
adc
call
push
adc
sbb
in
js
adc
mov
xchg
lods
jmp
pop
mov
xor
mov
loop
dec
xor
push
dec
mov
xchg
pop
and
and
sub
mov
hlt
push
testb
mov
and
fs
insl
sbb
shlb
inc
mov
test
call
jo
lahf
add
hlt
clc
repz
lock
js
xor
call
xchg
jmp
movsb
ret
in
jecxz
sub
bound
test
mov
add
outsb
sub
fwait
dec
mov
mov
dec
pop
and
pmulhw
sub
ss
roll
fisubrs
pop
mov
sbb
xchg
xchg
outsl
cltd
out
popf
je
inc
cmpsl
lods
divl
mov
adc
outsb
sub
ror
popa
mov
inc
pop
sti
inc
movsl
mov
inc
cmc
in
pushl
inc
cmpsb
sbb
pxor
pop
aam
xor
es
lock
fisubl
outsl
sti
push
popf
mov
jnp
out
lea
mov
sbb
push
jmp
testl
push
jle
push
arpl
push
push
or
nop
pusha
add
xor
sub
movsl
adc
pop
mov
test
add
add
movsl
pop
pop
xchg
pop
add
fmuls
jns
sbb
in
pop
test
stos
repz
push
dec
add
stos
mov
inc
or
inc
int
fldt
jns
mov
sub
mov
scas
arpl
lds
cmpl
sub
mov
mov
xor
push
call
mov
jg
lret
add
outsb
mov
dec
cmp
pushf
outsl
mov
push
and
inc
sarb
push
bound
call
jns
mov
je
push
cmpsl
ja
push
mov
enter
sub
pminsw
jmp
and
fisubrl
xchg
mov
mov
lret
or
push
ffreep
inc
fisubs
test
out
jbe
das
mov
outsl
les
div
ficomps
clc
push
or
mov
mov
sub
ret
push
dec
pop
out
sbb
popf
jg
jb
cwtl
dec
int3
lret
mov
dec
push
inc
dec
push
jo
loop
mov
push
movsl
lret
inc
or
mov
push
mov
or
out
adc
adc
icebp
repz
sbb
movb
push
xor
push
outsb
loopne
mov
les
dec
inc
fnstenv
push
andb
enter
jle
andl
js
clc
sbb
jbe
adc
add
fidivrs
jmp
push
sub
adc
jp
inc
mov
rclb
xchg
inc
cmpb
cmp
lea
lret
and
stc
nop
pop
lret
outsb
push
ljmp
push
sub
nop
cmpsb
and
sub
mov
mov
push
and
push
stc
mov
daa
sub
dec
push
cmp
adc
dec
push
lock
add
ljmp
into
or
dec
mov
adc
or
pop
inc
add
and
jle
push
adc
push
push
and
add
dec
ret
mov
sub
mov
divl
out
daa
adc
push
les
jae
insl
mov
popf
pop
inc
ret
mov
stc
fdivrl
std
xchg
push
inc
stc
scas
mov
mov
mov
mov
push
mov
sbb
lret
and
call
mov
fcmovnu
cmp
aaa
shl
push
dec
idivb
mov
ljmp
cs
in
pop
je
push
pop
int3
call
cmp
xchg
call
daa
lcall
insl
orb
outsl
mov
xor
jecxz
int
in
inc
pop
xchg
and
addb
sub
xor
push
out
jno
pop
xor
inc
and
jno
xor
lock
sub
push
sbb
mov
dec
push
jl
dec
frstor
push
cmc
dec
push
jmp
inc
inc
xchg
scas
push
push
and
jle
rcr
outsl
imulb
in
ret
repnz
shll
enter
fistl
add
call
add
lcall
and
inc
clc
testb
jl
in
cmc
nop
test
xchg
sub
cld
jne
or
dec
sub
enter
push
outsl
push
push
push
fs
push
out
fdivl
clc
hlt
cmp
cmc
cmp
cmpsb
scas
pop
jne
jmp
ljmp
push
les
cld
lret
push
das
xor
das
out
fucomip
dec
push
out
sub
pop
sbb
push
and
mov
add
adc
je
dec
notb
push
imul
pop
insb
cmp
and
out
add
add
inc
data16
outsl
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
jb
add
add
add
add
push
add
inc
add
add
push
add
add
add
add
add
inc
add
add
add
add
push
cmp
add
add
add
jae
arpl
arpl
add
add
add
popa
add
dec
add
add
add
add
add
inc
dec
add
add
add
add
add
inc
add
add
add
add
add
add
xor
add
add
add
add
push
add
dec
add
push
add
add
dec
je
add
add
arpl
add
push
push
add
add
add
add
cmp
add
add
add
add
push
add
pop
imul
add
add
add
dec
add
add
xor
add
add
add
add
add
add
add
add
data16
add
add
add
dec
add
add
add
add
add
add
add
add
jp
add
add
dec
add
add
add
push
add
push
add
add
add
inc
add
add
add
add
add
add
dec
add
arpl
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
cmp
add
add
add
add
add
dec
add
add
add
add
push
add
add
lds
scas
add
add
add
addr16
incl
add
sti
add
or
addl
rorb
pop
leave
ret
mov
mov
add
call
ljmp
sub
push
mov
mov
or
gs
jb
imul
xor
in
es
es
sub
pop
call
test
xor
lcall
ret
mov
lock
push
mov
jle
push
xor
or
pop
pop
jmp
xchg
push
out
rorl
call
stos
in
adc
push
xor
inc
ror
bound
xor
push
lock
sub
in
pop
mov
mov
xor
incb
adc
pop
mov
addr16
pop
add
sbb
jmp
pop
push
jb
mov
adc
ja
add
pop
sbb
orl
mov
test
or
hlt
das
mov
call
es
push
lcall
xor
pusha
or
sub
popf
add
inc
ret
mov
aaa
or
out
sub
movl
call
push
insb
std
bound
cmpsl
call
mov
push
mov
arpl
jp
jnp
test
addl
bound
flds
jbe
xchg
jg
or
outsl
outsb
push
faddl
push
cli
ret
in
js
xor
fs
cmp
cs
dec
movq
inc
bound
add
cmp
and
ret
jle
cs
dec
inc
sub
fistps
push
lcall
jmp
and
data16
push
xor
jl
repz
mov
hlt
jbe
outsl
setne
pop
push
cld
mov
xchg
sbb
insl
cmp
call
add
es
mov
pusha
jmp
jae
daa
je
add
clc
inc
push
out
pop
mov
lock
and
ret
mov
push
push
outsb
mov
jbe
daa
sub
mov
push
and
es
stc
adcl
aam
inc
jne
jnp
iret
mov
push
lock
sbb
inc
adc
aas
hlt
jmp
aas
xchg
hlt
bound
jmp
add
jnp
and
jnp
call
jmp
out
jne
push
call
sub
xlat
lahf
inc
inc
hlt
cs
mov
adc
xchg
mov
fdivrl
sbb
mov
mov
jl
arpl
call
arpl
dec
sti
iret
inc
push
adc
xlat
jge
xor
mov
inc
mov
shrb
mov
into
loopne
sbb
popf
add
and
mov
enter
jle
mov
xchg
push
jno
shl
sub
inc
pusha
cltd
jne
add
fistpl
shll
addl
shrl
std
pop
out
lcall
add
mov
pop
sub
dec
stos
inc
push
adc
mov
cli
push
icebp
fs
call
cmp
push
cli
fs
mov
push
insl
outsb
mov
or
add
inc
push
inc
ljmp
call
inc
pop
mov
push
adc
js
das
fcompl
add
ret
dec
iret
lock
cmp
je
cmpsl
pop
push
inc
push
hlt
mov
jns
mov
fdivl
mov
push
or
dec
loop
les
repnz
cld
pop
pop
scas
idivb
call
add
cmp
add
shlb
jmp
xor
jl
ja
xchg
and
aas
sub
inc
push
call
mov
inc
or
addr16
xor
inc
add
aaa
out
call
popa
mov
std
ljmp
ja
incb
neg
sbb
fwait
lods
add
repz
imul
mov
movsb
mov
jne
lea
test
loope
jae
call
nop
mov
fs
jno
inc
lsl
lds
fdivr
and
loop
add
dec
push
jmp
jno
adc
and
lds
push
popa
test
movmskps
cltd
inc
and
mulb
out
add
sbb
ja
imull
ds
add
fists
shrl
adc
xor
inc
add
jno
add
add
add
add
imul
add
add
add
add
add
add
add
outsl
add
add
cmp
js
add
add
add
add
add
add
add
add
add
add
add
add
data16
add
add
jbe
add
add
add
add
add
jno
pop
add
add
jns
add
add
add
add
outsl
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
inc
jne
add
add
add
add
jns
add
add
bound
add
add
xor
add
add
add
add
add
add
add
add
data16
add
add
add
add
add
add
push
add
add
add
push
add
add
add
add
aaa
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
inc
inc
add
add
add
add
jns
add
add
dec
add
add
add
dec
add
push
add
add
add
data16
add
add
add
add
add
add
jns
add
jae
add
jns
add
ja
add
add
add
xor
add
add
push
add
add
add
add
add
data16
inc
add
jne
add
add
add
add
jne
add
add
add
add
add
jp
add
add
add
outsb
add
inc
add
dec
add
add
add
add
add
add
add
ja
add
add
add
popa
ja
add
add
jns
xor
dec
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
jne
add
add
add
add
add
add
xor
add
add
add
add
add
js
add
jp
add
push
add
add
add
cmp
add
dec
add
add
add
add
add
aaa
add
lahf
pusha
hlt
int3
pop
adc
mov
stos
inc
lods
mov
testb
enter
test
movsb
aam
ret
pop
mov
test
pop
je
dec
mov
mov
scas
sbb
jp
inc
into
andb
xchg
cltd
dec
xor
repnz
mov
and
imul
inc
repz
adc
fsts
sbb
push
cltd
cmpl
and
and
jle
call
mov
inc
test
pop
ficomps
xor
andl
inc
mov
sarl
and
dec
sbb
push
call
and
mov
cmpsb
push
data16
pop
scas
repz
pop
stc
cmpsb
jbe
insb
jno
sbb
mov
inc
loopne
push
nop
jg
insb
cmp
dec
insb
push
call
dec
push
test
or
aaa
sbb
int3
sbb
sbb
cmp
jo
jge
aam
je
cmp
jne
sbb
mov
mov
xlat
mov
insb
push
test
cmp
bnd
int3
lods
pop
mov
push
test
cmp
cmp
fiaddl
cmp
xor
bound
mov
jne
jbe
clc
pusha
push
test
cmp
leave
inc
mov
pop
ja
in
je
enter
cmp
sahf
sub
sbb
dec
xchg
repz
cmp
push
push
sbb
cmp
jp
pop
jge
and
sub
cmp
jecxz
pop
push
lock
dec
lock
push
ds
adc
test
hlt
std
les
nop
outsl
push
lock
sub
push
xchg
lock
shrb
insb
loopne
arpl
je
inc
aaa
repnz
pop
sub
jne
mov
push
lods
loop
addr16
push
pushf
test
out
pop
xchg
fwait
jg
insb
in
lahf
andl
inc
call
cmp
in
add
push
or
push
jle
aaa
sti
inc
or
adc
iret
adc
fbld
sbb
cmp
pop
cmp
add
sub
stos
test
cmp
jo
dec
jno
int3
mov
out
jmp
mov
cmp
icebp
rclb
pop
ret
lret
cwtl
sub
xchg
jle
int3
pop
lea
pop
in
mov
iret
push
and
xchg
fdivs
int
rcll
out
adc
xchg
xchg
loopne
xchg
mov
loope
dec
xor
ja
dec
lods
in
mov
mov
insl
sbb
inc
xor
out
mov
lret
repz
pushf
mov
adc
loop
dec
adc
aas
mov
das
jle
es
movsb
pop
repz
dec
out
jbe
adc
sub
cwtl
adc
int3
lahf
subl
sarb
ss
rorb
ret
inc
ja
cmp
lods
push
and
ret
mov
adc
pop
testl
out
inc
shlb
in
mov
shr
daa
mov
inc
rolb
in
enter
and
mov
dec
les
ror
jmp
ret
mov
mov
sbb
pop
fldl
push
ret
outsb
pushf
mov
mov
mov
xor
jle
lods
adc
loope
mov
je
leave
or
lods
and
hlt
out
rcrl
addl
dec
sub
inc
in
fs
xor
push
sbb
insl
inc
pushf
add
dec
int3
ljmp
stos
cmp
lods
jnp
popl
movsl
loop
lods
add
gs
dec
mov
adc
mov
dec
mov
hlt
inc
add
jge
mov
test
xchg
out
mov
adc
rep
xchg
cmp
lock
dec
or
adc
sbb
and
or
mov
and
pop
loopne
cld
pop
and
pop
mov
xchg
pop
mov
push
arpl
cmp
je
pop
inc
xchg
shlb
push
int3
xchg
inc
pushf
inc
incl
add
inc
push
int
enter
or
cmp
lret
ds
rol
mov
push
push
pop
lret
inc
decl
add
es
ret
cld
negl
test
cmp
loope
jbe
xor
inc
cmp
and
je
sub
and
outsl
adc
ja
xor
shlb
push
pop
inc
pop
mov
aam
cmp
xor
out
divb
movsl
adc
sub
in
inc
arpl
rolb
pop
and
cmpl
jne
pushl
call
add
add
add
add
add
add
dec
add
add
add
add
xor
jae
jne
add
jbe
push
add
js
add
ja
add
add
dec
add
add
dec
outsb
add
jne
add
jbe
push
add
add
add
add
add
add
add
add
add
dec
add
jp
add
add
add
add
add
add
add
add
inc
insl
add
imul
add
add
add
add
jne
add
add
add
xor
add
add
add
add
outsl
add
add
jne
add
inc
jae
pop
add
add
add
dec
add
inc
jns
add
popa
add
add
add
add
add
add
add
add
add
add
add
push
add
pop
add
cmp
add
xor
add
cmp
xor
add
jo
add
imul
add
dec
add
add
xor
dec
add
add
add
add
add
xor
add
add
add
add
add
jne
jbe
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
popa
jo
add
jbe
add
add
add
add
add
outsb
add
add
add
add
add
add
push
add
cmp
dec
add
imul
add
add
inc
add
inc
add
add
add
add
insb
add
add
add
dec
add
jae
add
jb
add
add
add
add
add
testl
fmuls
cmp
stc
cmc
int
das
pop
pop
test
jle
shll
fs
sahf
call
test
insb
idivb
mulb
imul
cmpsb
cld
outsb
imul
inc
test
das
imul
xchg
or
cmp
xor
cmp
outsl
iret
ret
jbe
ret
push
mov
mov
cmp
aaa
pop
out
mov
jbe
movsl
loop
aas
xor
mov
pop
cld
inc
mov
pop
sub
bound
push
stos
aaa
add
idiv
popf
mov
mov
inc
mov
lret
lds
sqrtps
dec
inc
repnz
lea
jmp
add
iret
mov
fiadds
or
cwtl
test
test
inc
outsl
cmp
outsl
ss
adc
lods
int3
mov
dec
mov
das
pop
ja
push
call
cs
fs
or
fisubl
jle
fnstcw
repnz
add
mov
adc
lods
push
lods
ljmp
xchg
in
add
mov
add
mov
popf
stos
sbb
add
pushf
xor
sub
push
es
xchg
add
mov
aaa
push
lock
push
jle
xchg
add
xchg
mov
fdivp
addr16
fs
test
mull
out
rcrb
insb
lea
or
cmp
in
roll
out
add
fidivrl
shlb
inc
scas
shr
add
stc
or
ss
jmp
or
out
jle
add
inc
mov
xchg
add
insb
pusha
xor
jo
fadds
mov
xchg
int3
mov
cmp
loope
pop
cmpsb
jle
cmc
loop
jno
push
sbb
in
pop
push
adc
jmp
loop
inc
movsb
fbstp
add
and
push
pop
push
inc
add
xor
adc
test
sahf
or
inc
and
aaa
incl
jl
xor
push
and
shrb
xchg
cltd
lahf
inc
in
sarb
pop
add
add
scas
cld
ss
jno
add
outsb
xor
aam
push
mov
add
xor
in
ljmp
add
inc
or
add
adc
jb
inc
orl
test
out
add
gs
ret
ret
xchg
or
popa
mov
clc
dec
mov
sub
imul
dec
jge
and
mov
mov
mov
insb
in
rolb
dec
jbe
jecxz
in
pop
in
add
jle
jle
clc
inc
and
push
out
push
dec
jmp
and
and
in
movsl
mov
outsb
arpl
call
pop
arpl
in
jbe
inc
add
lods
gs
jne
mov
xchg
popa
into
push
data16
mov
mov
movsb
add
sub
add
cli
jne
or
mov
adc
push
call
mov
xchg
add
rolb
fistps
jle
psraw
cmpsl
add
in
jae
test
jo
pop
mov
out
loope
mov
inc
popa
mov
dec
and
inc
out
jae
add
xor
mov
scas
sbbb
mov
pushf
js
lret
aaa
mov
out
jp
add
push
test
adc
imul
in
dec
mov
push
xchg
lcall
add
ficoms
mov
add
mov
cmpsb
add
orl
insb
fwait
enter
xchg
imul
xor
mov
repz
adc
jmp
daa
mov
jnp
jg
jmp
inc
sbb
andl
aad
lods
idivb
fs
fists
lds
out
sub
sahf
sbb
dec
dec
mov
or
mov
es
adc
mov
push
xor
outsb
add
nop
adc
xor
and
pop
outsl
adc
add
jle
xchg
loop
daa
add
inc
cli
ds
sbb
sub
outsl
mov
in
cmp
into
insl
adc
xor
in
mov
xchg
std
imul
fisttps
stc
and
lock
imul
out
testb
cli
mov
pop
fdivrl
mov
add
mov
mov
call
lret
add
out
dec
hlt
test
jne
inc
lfs
push
roll
in
mov
dec
pop
push
dec
outsb
and
add
test
adc
or
icebp
sbb
ja
aam
inc
pop
orb
add
das
sub
xlat
ds
out
aam
add
movsl
sahf
xchg
repnz
jo
call
pop
js
lods
push
xchg
jbe
mov
or
xor
pop
cmp
pushl
aam
xor
sub
aam
adc
push
or
adc
mov
mov
dec
pop
pop
adc
jp
cmp
lods
lea
je
fadds
call
pop
sbb
je
adc
cs
xor
cmp
add
add
and
jns
addl
jmp
scas
mov
jne
add
cmp
cmp
ljmp
aam
mov
push
lret
add
xor
dec
test
bndstx
sub
mov
sub
fsub
push
sub
je
mov
push
jmp
adc
js
fcmovb
outsl
loope
adcl
jne
out
fstl
pop
push
add
inc
push
std
or
cli
inc
inc
push
icebp
and
and
and
xor
les
mov
test
into
mov
iret
add
mov
xor
loopne
mov
icebp
sub
sbb
push
orb
pop
stos
dec
push
adc
dec
pop
xor
aas
fst
pop
leave
ror
mov
popl
add
lods
cmp
movsb
ret
sbb
clc
push
adc
jle
rcl
mov
rolb
outsb
rol
adc
shr
lock
ja
cmp
pushf
ljmp
lock
pop
nop
pop
ljmp
jns
in
cmp
pop
jo
sbb
int3
mov
aad
cmp
fidivs
push
ds
in
sbb
in
adc
jb
cld
enter
pop
icebp
push
mov
sbb
mov
js
mov
push
je
pop
in
lock
subb
ljmp
xor
jne
mov
loop
fldt
in
or
ja
inc
add
ret
js
and
and
hlt
call
sub
xlat
dec
mov
mov
out
adc
out
push
inc
push
xor
mov
stos
sub
adc
inc
push
add
push
cmp
and
cmp
push
pop
mov
and
xor
stos
lods
lock
mov
scas
insb
call
andl
call
add
cld
mov
mov
cmp
dec
mov
xchg
daa
es
out
dec
mov
outsb
mov
shlb
aas
mov
inc
stos
inc
jae
mov
cmp
das
movsb
icebp
push
movsb
jno
loopne
push
push
push
or
fmuls
inc
adc
in
sbb
outsb
jne
mov
inc
shl
add
ds
je
pop
pop
and
jl
je
fs
stos
sub
xor
and
sub
pop
add
fcomps
insl
call
lahf
hlt
cmp
sbb
jno
cmp
addr16
pop
call
jns
or
inc
mov
cltd
pop
cmpsb
cld
imull
stc
jns
outsl
cmp
jae
add
cmp
icebp
adc
cltd
imull
enter
xor
push
insb
jmp
or
add
mov
jge
dec
jb
add
xchg
jecxz
sub
int
hlt
cld
pusha
cld
mov
sub
mov
movsl
fldenv
or
mov
jmp
test
jbe
lods
cld
ja
or
clc
mov
dec
sub
repz
iret
aam
jbe
lds
fists
cmp
push
aas
push
add
xchg
pop
dec
cli
push
push
movsb
adc
lods
jns
ds
push
mov
call
ljmp
ret
or
insb
xorl
fimull
pop
incl
mov
les
in
ss
mov
jae
jnp
push
out
das
dec
sbb
mov
pop
mov
sub
xor
imul
daa
or
das
cmpsl
sub
loop
mov
push
daa
shr
jnp
adc
jb
je
jge
stc
in
scas
adc
icebp
cmpsb
and
jae
jmp
pusha
test
jbe
lea
out
roll
add
add
add
add
add
add
add
add
inc
add
add
inc
dec
add
add
add
add
add
push
add
js
jb
add
add
add
add
add
add
inc
bound
add
add
add
add
add
add
popa
add
bound
add
jb
add
jp
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
add
add
add
push
popa
add
add
add
add
pop
add
add
push
add
pop
add
jb
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
insl
add
add
add
je
add
add
add
add
add
add
add
add
push
add
dec
add
add
add
push
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
bound
add
xor
add
arpl
add
add
add
add
add
add
add
pop
add
push
add
add
add
add
add
xor
add
add
add
add
add
add
dec
push
jne
add
pop
add
add
add
imul
js
add
add
add
jns
add
dec
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
data16
add
add
add
add
add
add
add
add
jp
add
popa
add
add
push
add
add
outsl
add
add
add
add
add
jo
add
add
cmp
add
push
add
xor
imul
add
add
add
add
add
jo
jno
insb
dec
add
add
add
add
inc
add
add
add
fisubrs
sbb
cmp
pop
inc
push
dec
shlb
mov
mov
out
dec
push
cmp
mov
mov
icebp
add
into
sbb
out
push
sbb
popa
pusha
in
push
ds
pusha
xchg
mov
mov
add
and
inc
insb
outsl
out
sbb
outsb
stos
push
addr16
aam
sub
mov
dec
outsl
aad
cld
out
and
push
loope
divl
mov
sti
cmpsl
inc
outsb
xchg
pop
sbb
add
pop
xchg
mov
jns
in
cld
scas
or
or
mov
xor
out
mov
scas
test
jl
jbe
dec
push
popl
shll
repnz
push
inc
inc
jb
clc
outsb
icebp
pop
cltd
pop
scas
mov
movsl
sub
lahf
sahf
push
sbb
sbb
jo
jbe
icebp
pop
jne
cld
jns
add
sarb
push
mov
mov
cs
decb
mov
out
outsl
mov
add
push
jmp
arpl
xor
fisttpll
insl
les
and
add
test
imul
dec
adc
dec
pop
sbb
sub
in
add
sbb
stc
add
jbe
mov
jnp
out
cmpsb
dec
xchg
sbb
xor
add
aaa
and
mov
leave
outsl
jge
sahf
imul
in
popa
cli
push
pop
rcrb
daa
gs
cmp
fldl
jo
pop
and
mov
jg
add
std
stos
je
pop
jge
push
lret
ficoms
cli
add
add
sub
mov
sub
cld
push
jmp
push
xchg
sbb
jno
out
incb
jo
daa
sub
ss
bound
xor
inc
sbbb
add
mull
mov
inc
shrb
fdiv
clc
jbe
adc
and
out
cmp
nop
cs
adc
inc
outsl
les
in
lock
in
push
inc
pop
out
jo
test
lods
idivl
adc
outsl
cmp
dec
and
out
xorb
cs
inc
in
clc
or
push
sbb
sub
inc
inc
push
jo,pn
mov
mov
hlt
inc
or
bound
cs
push
inc
insb
and
mov
mul
inc
clc
inc
or
and
xor
inc
je
inc
pusha
jo,pn
addb
mov
enter
in
and
sbb
and
xor
inc
je
inc
fs
mov
rcl
loopne
clc
inc
or
adc
in
mov
pop
inc
push
inc
nop
and
mov
neg
inc
in
hlt
add
sbb
and
xor
inc
cs
negl
and
out
xorb
cs
negl
out
int3
je
inc
in
in
div
push
es
out
sbb
xor
cmp
pop
inc
push
lods
je
inc
aam
call
sbb
js
test
rolb
cld
out
and
ja
inc
inc
and
out
mov
int3
cs
adc
ja
inc
inc
and
mov
test
mov
and
clc
out
cld
ja
and
adc
adc
sbb
out
sub
cmp
cmp
inc
inc
dec
and
out
pusha
je
inc
jo
js
addb
mov
inc
lock
jmp
and
xor
dec
push
out
je
nop
inc
lods
cs
fiadds
and
or
adc
sbb
and
sub
sub
xor
cmp
out
dec
je
inc
pop
cs
mull
aaa
outsl
and
shlb
cs
in
lock
add
mull
and
mov
cs
call
out
sub
xor
xor
cmp
inc
and
out
insb
je
inc
subb
idivl
clc
out
add
out
jae
arpl
fcmovnbe
jmp
fistps
inc
pusha
jecxz
call
adc
jnp
inc
lods
push
jle
jbe,pn
add
rclb
mov
push
rorl
cwtl
ds
xorl
sti
inc
les
cld
pusha
jp
add
and
mov
pop
imul
push
mov
ret
fstpt
pop
jb
jb
dec
cs
pushf
arpl
push
jb
add
or
mov
cmp
add
sub
xchg
cmp
lods
cmp
xor
ds
pusha
mov
jb
add
add
js
data16
add
add
add
add
add
add
xor
add
add
add
insb
add
pop
add
add
add
add
add
add
add
jp
add
add
add
add
push
add
dec
add
add
add
push
add
add
add
jae
add
add
push
push
add
add
imul
add
dec
add
add
push
inc
xor
add
jp
cmp
add
add
xor
add
add
add
add
add
dec
add
add
imul
add
add
add
add
add
add
insl
add
add
insl
add
add
add
add
push
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
jp
add
add
pop
add
add
add
inc
add
push
add
cmp
popa
add
cmp
push
add
jns
dec
dec
add
inc
add
add
add
add
add
add
ja
data16
add
jb
add
inc
add
push
add
add
add
push
xor
add
add
add
add
dec
add
add
je
add
dec
add
add
add
add
add
inc
add
add
add
push
add
add
xor
add
aaa
add
add
add
add
add
cmp
add
add
add
add
push
push
add
add
add
add
add
add
add
add
add
jae
add
add
add
add
add
add
dec
add
add
add
inc
add
add
add
imul
add
jo
push
add
inc
adc
mulps
jo
mov
cld
in
fwait
psrld
mov
ja
xchg
cld
inc
loopne
jbe
push
add
leave
add
cmp
cld
out
dec
adc
jae
je
inc
xor
lret
insl
loop
movntq
inc
sbb
mov
stc
mov
out
in
cmpsb
xchg
int3
or
inc
call
dec
mov
dec
inc
aam
idiv
mov
faddl
scas
loop
out
in
fincstp
fsub
arpl
fdivs
popf
out
mov
mov
test
inc
loopne
lods
sbb
scas
add
aam
dec
jle
outsl
loope
adc
aaa
clc
mov
sub
outsl
or
outsl
test
jge
lock
loopne
out
incb
bound
push
sbb
das
jne
les
cmp
or
pop
push
test
mov
xor
push
enter
pop
divl
imul
sub
mov
call
and
sub
in
iret
bound
cld
and
std
xorb
imul
sbb
outsb
mov
lahf
and
pop
out
leave
cld
mov
adc
jae
xor
xchg
lock
jns
gs
stos
mov
sti
dec
cld
fwait
dec
adc
xchg
loop
and
xchg
shlb
mov
fsubs
xchg
roll
out
add
or
pop
outsb
and
repz
add
enter
dec
push
add
hlt
or
rcrb
or
jnp
sub
nop
subb
adc
lret
dec
test
icebp
xor
mov
mov
fwait
push
roll
gs
inc
cmpsl
cmpl
add
dec
xchg
bound
inc
adc
xchg
fcomps
das
loop
fs
mov
in
stos
movsl
mov
or
jno
push
gs
mov
and
push
cmpb
lahf
into
push
push
aam
lods
incb
nop
xor
xor
sti
lahf
mov
stc
fs
xor
out
sbb
xorb
dec
push
lock
xchg
movsb
test
or
mov
es
incb
arpl
mov
iret
xlat
push
jbe
xor
or
ss
popf
add
adc
lds
ja
pop
or
jne
push
mov
pop
nop
lahf
daa
ret
sbb
pop
and
jecxz
mov
xchg
mov
mov
and
mov
mov
mov
add
ljmp
or
mov
sub
jae
mov
mov
cmp
adc
cmp
in
adc
leave
lret
bound
push
call
fmull
pop
mov
jge
in
jne
xor
je
fldln2
mov
and
lock
jo
cmp
ficomps
je
shrb
sbb
mov
adc
test
push
scas
add
stos
jmp
dec
fdivrs
ss
mov
cltd
push
push
js
sbb
push
xor
outsl
pop
in
lea
push
in
xchg
ds
mov
daa
pop
call
adc
and
pushf
daa
dec
xchg
inc
push
dec
inc
ljmp
popa
push
add
out
gs
rolb
jecxz
ret
mov
push
push
adc
loope
nop
adc
add
dec
and
not
sbb
icebp
xor
into
push
loopne
pop
call
clc
test
fwait
push
sub
daa
fcomip
sbb
cmpl
and
mov
aas
xor
les
out
call
jne
stc
push
cmpb
cmp
dec
inc
cmpsl
gs
mov
repz
push
stc
mov
movsb
popa
aas
jl
inc
or
cmp
jbe
aam
and
adc
les
xor
pop
call
and
cmp
xchg
pop
pusha
mov
clc
inc
outsl
xchg
pusha
xchg
add
xor
ret
xor
roll
pop
dec
test
inc
test
add
cmp
pop
push
das
mov
daa
jle
add
test
lods
icebp
mov
adc
cli
adc
mull
sub
call
xor
xor
sub
pop
enter
sub
push
mov
cmp
mov
orb
sbb
cmp
mov
bound
xchg
out
jne
dec
fstl
bound
mov
fmul
push
xchg
das
std
cmpsl
ret
inc
ja
or
add
stos
mov
cmp
jbe
cld
sub
dec
xchg
add
and
les
and
xchg
inc
cld
out
pusha
adc
jp
repz
call
cwtl
or
dec
jno
movsl
scas
outsl
repz
sbb
or
shll
mov
and
or
jge
out
push
outsl
cwtl
jp
pushf
mov
sti
jne
or
pop
repnz
fwait
sub
pop
test
es
popf
cltd
xor
int3
in
pop
loopne
cmp
nop
mov
es
notb
les
inc
pop
mov
cmp
add
repz
push
push
in
xchg
jnp
jb
inc
inc
pusha
outsb
aad
lret
xor
push
popf
fs
call
and
das
cmp
lods
push
jae
xchg
pop
mov
rorb
inc
dec
mov
test
js
inc
jb
call
xor
mov
nop
adc
sbb
and
fcompl
std
dec
call
fsubrp
inc
dec
cmp
sub
add
sbb
cmp
inc
mov
mov
xorl
push
lcall
sub
ljmp
testl
pop
stc
sub
roll
shll
scas
add
cmp
or
cmp
add
push
das
xor
or
stos
lods
lock
dec
shl
in
or
ja
dec
sahf
stc
xchg
gs
dec
test
lods
icebp
add
sbb
sbb
out
pop
loop
aad
test
dec
loop
or
mov
call
aad
dec
adc
dec
mov
int3
out
es
and
xor
inc
mov
sub
pop
sub
and
aam
cli
lcall
xor
push
fs
pop
int3
add
ficompl
outsl
into
cmp
fdiv
sub
cmp
out
cmpsl
add
enter
add
int3
cli
cli
inc
xchg
add
enter
pop
imull
push
cmpsb
daa
pop
popf
add
mov
hlt
sbb
sbb
or
lods
data16
adc
icebp
jo
adc
add
lods
sbb
fsts
cmpl
ja
or
in
pop
add
add
push
cmp
cmp
jle
xchg
jge
enter
popf
jnp
inc
test
sub
es
and
inc
in
mov
cmp
add
test
cs
mov
sahf
inc
in
sbb
dec
xchg
mov
mov
xor
mov
fadds
push
test
xor
and
adc
test
lods
jo
xor
aaa
imul
aaa
pop
jecxz
jmp
mov
fs
sbb
pop
sti
pop
movsb
lock
push
shll
repnz
ja
adc
xchg
sahf
stc
sahf
fsubr
xchg
xor
push
and
xlat
nop
sbb
dec
sub
test
add
dec
dec
mov
adc
mov
fisttpll
ret
sub
push
iret
mov
sub
jbe
daa
enter
lock
fsubrs
lahf
dec
pop
mov
xchg
cmp
fiaddl
insl
test
cmp
lods
and
jecxz
sbb
add
inc
add
aam
mov
loop
push
inc
or
mov
loope
sub
pop
adc
jb
mov
ret
dec
inc
hlt
adc
test
call
jo
hlt
mov
cmp
or
repnz
adc
push
push
xor
arpl
mov
mov
out
lret
mov
shl
dec
ret
push
sbb
out
lea
insb
jb
sub
jae
add
jae
jo
repnz
bnd
ret
int3
mov
jo
and
lock
push
dec
fwait
ljmp
idivb
outsl
inc
pop
hlt
push
clc
jg
imul
test
dec
negb
or
test
and
aam
sbb
add
in
in
push
jecxz
push
clc
mov
pop
orl
outsb
mov
loopne
dec
cltd
add
push
fdivrl
test
imul
clc
lret
jnp
out
cmp
add
add
add
add
add
add
xor
add
add
dec
add
add
add
add
add
add
add
add
add
add
xor
add
add
dec
add
add
add
add
add
add
add
arpl
add
jp
pop
add
add
dec
add
add
inc
add
xor
add
pop
add
jo
add
insb
add
add
add
push
add
add
add
add
add
xor
add
push
add
xor
dec
add
add
add
inc
add
add
add
jno
add
add
add
xor
add
jb
add
add
add
push
add
add
outsl
add
dec
add
xor
jne
add
add
pop
add
add
add
add
add
data16
add
pop
add
add
add
insl
add
add
add
add
add
dec
add
xor
add
add
add
jb
add
add
add
aaa
insb
add
add
add
pop
push
add
add
add
add
add
dec
add
add
jb
add
add
add
add
add
dec
add
push
add
add
add
add
add
xor
add
add
add
add
add
add
add
dec
add
inc
add
add
add
push
add
jo
add
add
add
pop
add
push
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
add
imul
add
insl
add
add
add
aaa
add
add
add
add
add
add
add
add
jns
imul
add
add
inc
add
add
add
add
push
add
arpl
dec
add
add
add
push
add
jmp
ficoml
xchg
jp
mov
push
stos
add
loop
es
ja
test
js
notl
pop
leave
ret
cmp
adc
or
testl
ljmp
je
inc
mov
cs
or
or
out
or
sti
jp
xor
inc
push
adc
inc
push
adc
pop
sub
in
repnz
xchg
jmp
pop
add
jp
sub
js
and
call
mov
testl
loope
sub
scas
xchg
jmp
sbb
repnz
and
xchg
xor
cs
mov
push
lock
and
jp
out
mov
scas
mov
test
jne
push
mov
mov
push
and
dec
fdivl
mul
scas
out
addl
jae
cs
push
inc
ljmp
ficompl
subl
add
cs
add
shrb
ljmp
jp
call
add
test
jl
scas
popa
sbbb
jmp
lea
pop
cli
sarb
scas
push
shl
cmpsb
js
inc
jb
push
xlat
or
jge
clc
test
add
xchg
adc
jle
loope
push
dec
inc
add
cwtl
xchg
fs
and
xchg
js
fisubrl
call
inc
cltd
out
movsb
test
dec
xor
cs
xor
int3
scas
aad
loope
in
inc
add
ficomps
js
mov
out
mull
push
xchg
cs
xor
jle
shrb
inc
push
and
testl
jb
jbe
je
inc
jle
or
xchg
nop
or
xchg
inc
mov
dec
mov
sahf
mov
aam
add
rorb
cld
testl
pop
in
outsb
sbb
dec
push
test
cmp
mov
pop
out
dec
test
into
push
push
lock
pop
testl
jp
rorb
mov
add
scas
ja
not
scas
fincstp
push
inc
loop
je
std
jle
or
add
ss
inc
or
ljmp
jp
in
push
js,pn
scas
mov
add
outsb
add
cs
or
dec
add
or
test
fimuls
sub
aaa
test
lock
and
or
push
push
in
js
mov
xor
mov
sub
pop
divl
pop
outsb
inc
data16
outsl
in
dec
adc
andl
cmp
dec
mov
lods
test
add
cmp
lods
fmull
aas
jo
mov
pop
clc
jnp
or
mov
sub
xor
push
test
rcll
dec
scas
push
push
xor
and
push
cmp
dec
mov
nop
scas
js
and
inc
mov
sub
adc
inc
repz
xor
jb
enter
mov
xchg
sbb
adc
outsb
insb
jb
dec
inc
xlat
jg
mov
push
dec
adc
xorb
js
cwtl
xchg
cmp
sub
adc
or
out
mov
or
bound
insb
push
pop
jmp
out
bound
imul
pusha
outsb
addr16
inc
push
inc
pushf
push
js
imul
push
adc
push
dec
sahf
add
lea
xor
cs
inc
jo
pop
fadds
aas
pop
push
imul
inc
out
pop
sbb
push
add
arpl
insl
jo
fnstenv
push
inc
inc
dec
pop
dec
adc
inc
xor
outsb
mov
xchg
int3
test
push
xor
inc
jecxz
dec
cmp
aas
outsb
jo
outsl
jae
xchg
xchg
dec
fldenv
and
rcl
outsb
sub
fwait
insb
cwtl
inc
sub
ljmp
int
pop
movl
xor
and
sbb
rcrb
aas
bnd
dec
jb
cmp
popa
data16
into
inc
imul
cmp
rcrb
inc
dec
test
add
enter
adc
lds
mov
push
or
out
xor
shlb
iret
stos
pop
aas
jae
fs
xor
pop
ret
inc
push
inc
cs
pop
insb
jb
pop
sbb
aaa
adc
lret
bound
rol
and
jne
pusha
into
pop
pop
push
sbb
cmp
or
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
.byte
.byte
.byte
sahf
