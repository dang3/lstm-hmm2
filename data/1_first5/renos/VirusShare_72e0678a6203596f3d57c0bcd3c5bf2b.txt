jmp
nop
add
in
cmp
dec
cmp
js
data16
mov
and
lea
inc
inc
mov
mov
mov
mov
dec
mov
mov
mov
sbb
inc
dec
mov
inc
mov
mov
mov
in
xor
xchg
cld
dec
dec
inc
cmp
je
mov
mov
fldt
mov
in
xchg
cmp
adc
js
lea
pop
sbb
out
lret
push
cld
lea
xor
dec
mov
in
fwait
popf
mov
sbb
mov
sbb
pusha
frstor
jle
mov
push
dec
xchg
cmp
jne
outsb
mov
push
sbb
cld
mov
lock
jp
lea
mov
or
mov
sbb
mov
xchg
hlt
mov
and
mov
dec
cmp
jle
inc
inc
mov
scas
mov
hlt
and
in
jle
mov
sbb
mov
and
or
dec
mov
lea
inc
mov
jmp
xabort
cmp
xor
dec
dec
mov
push
pop
clc
mov
or
faddl
and
mov
das
je
or
inc
outsl
into
hlt
nop
pop
hlt
addr16
push
loope
xchg
sbb
mov
xchg
inc
out
fdivl
jl
fisttpll
jge
lret
inc
mov
decl
push
pop
scas
neg
dec
mov
push
in
adc
in
sbb
lea
fld
mov
and
roll
in
or
sbb
mov
mov
mov
and
mov
pop
dec
mov
imul
and
mov
neg
pop
push
call
ret
pop
sub
xor
and
sub
enter
sbb
adc
orl
or
dec
push
xor
add
cld
jo
sbb
hlt
lock
fs
inc
push
call
push
sbb
fdivs
orl
cmp
inc
mov
pushf
cwtl
xchg
xor
and
and
and
jo
or
enter
pusha
or
enter
push
xor
push
mov
add
mov
clc
mov
mov
xchg
mov
clc
clc
pop
pop
pop
popf
jmp
push
push
push
and
mov
cld
das
add
cmpl
je
fiadds
push
xor
dec
test
mov
inc
mov
mov
push
in
mov
popf
ljmp
cmp
je
xor
mov
cmp
je
xor
dec
adc
and
mov
xchg
in
std
cs
xor
sbb
push
lock
rorb
pop
mov
and
cltd
push
mov
inc
decb
mov
pop
pop
push
jbe
fistps
test
lret
pop
stc
pop
out
or
enter
mov
in
mov
popl
cmpl
mov
fcmovne
cmp
or
addl
push
lea
incb
js
or
jge
add
xlat
mov
aaa
jmp
or
mov
clc
lcall
pop
add
sub
cmp
loop
clc
imull
imul
push
outsl
mov
cmc
sub
pop
sub
pop
sub
and
add
aas
arpl
or
aad
xchg
bound
adc
jg
mov
add
stc
std
xor
in
push
sub
cmp
push
divl
sub
push
mov
xchg
adc
fisttpll
scas
es
ds
sub
rcll
and
mov
inc
or
loop
and
jno
and
jle
in
mov
xor
sub
enter
aad
sub
sti
idivb
pop
pop
mov
and
scas
pop
je
cmovle
into
std
jbe
pop
aaa
pop
in
jle
cmp
jge
outsb
fistps
dec
mov
xor
inc
std
mov
add
pop
in
cmpsb
cmpsl
and
pop
mov
xlat
jbe
adc
add
and
test
scas
sbb
add
test
psubusw
dec
nop
adc
dec
mov
dec
mov
pop
repz
pop
aaa
xchg
gs
sub
adc
insl
pop
repnz
mov
sbb
in
sbb
mov
repnz
or
int3
icebp
int3
loop
cli
bound
pop
jmp
bound
sub
pop
out
into
daa
idiv
scas
and
push
mov
ss
addb
daa
sbb
xchg
insl
pop
orb
push
jnp
pop
into
lcall
dec
cmp
outsl
in
mov
sbb
aad
sub
loop
bound
pop
fcom
lcall
mov
mov
xorb
mov
lret
sahf
popa
pop
lods
movsb
outsb
xor
outsl
rorb
adc
sub
std
in
pop
sub
stos
adc
mov
clc
jbe
mov
push
and
dec
push
movsl
scas
sti
mov
fwait
or
and
cmpsb
pusha
outsl
cmp
jne
mov
punpckhdq
mov
push
inc
pop
xor
jnp
lcall
or
mov
or
lret
lock
push
mov
idivb
fistpl
dec
popa
inc
gs
test
sub
mov
popf
mov
pop
data16
and
push
and
sub
fwait
pop
out
mov
or
mov
into
scas
and
fistl
sub
test
dec
aam
loop
pop
mov
or
jb
into
sub
sub
cmpsb
and
sub
xchg
insb
adc
xchg
adc
pusha
push
pusha
in
push
sbb
jecxz
aad
add
lahf
pop
and
cmpsb
push
movsl
adc
repnz
pop
mov
or
mov
mov
mov
and
and
push
pop
xchg
cmp
inc
int3
jo
out
stos
dec
rcll
sub
pop
inc
movsb
cmpsb
add
dec
inc
and
add
ret
lea
aas
shrb
nop
fs
js
jne
test
cli
popa
pop
scas
sahf
or
movlps
insl
clc
add
add
cmc
dec
call
filds
cmp
call
inc
push
xor
or
inc
push
dec
test
jb
cmp
inc
pop
jnp
jo
add
sahf
inc
ret
or
add
or
inc
rcll
cmp
or
lahf
in
or
sub
fs
mov
or
dec
or
and
push
cmp
jle
add
xchg
sub
push
insb
fsubs
or
jae
out
gs
dec
rcll
add
sbb
mov
adc
dec
in
jne
jg
adc
dec
outsl
popa
fs
imul
std
fwait
decl
dec
jo
outsb
push
push
outsb
insl
popa
jo
imul
sub
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
rorl
ret
mov
pop
bound
mov
popf
cld
cmpl
das
pop
dec
sub
lods
jns
outsl
mov
clc
int
push
lock
fnstenv
pushf
hlt
push
add
hlt
clc
xlat
mov
cmp
jp
inc
mov
popa
mov
xchg
mov
cmp
and
jmp
mov
jo
inc
dec
rcl
adc
outsb
and
mov
mov
mov
push
daa
sti
push
out
hlt
dec
inc
or
and
adc
lea
mov
ret
jg
in
mov
mov
inc
dec
inc
inc
pop
cld
jns
lock
je
in
int3
adc
xor
in
sub
mov
jo
inc
fwait
call
sub
dec
dec
loope
ljmp
xchg
out
in
call
inc
mov
or
xchg
lock
cmp
xchg
sbb
add
mov
inc
in
dec
or
decl
incl
lea
lea
adc
fs
in
inc
mov
pop
xorl
jb
addr16
ljmp
mov
dec
mov
or
push
inc
mov
inc
dec
cmp
js
sbb
jge
mov
int
adc
mov
stos
jo
sbb
dec
mov
sbb
lret
jg
jno
rolb
xor
mov
sahf
mov
ja
in
inc
inc
int3
dec
aad
aas
iret
loopne
mov
rcll
sub
xchg
inc
jae
xchg
or
loope
pop
sti
imul
mov
cmp
jne
xchg
mov
cltd
pop
sbb
imul
or
test
mov
dec
adc
add
cltd
and
and
adc
sbb
popf
outsl
or
imul
sbb
fdivrl
int
jmp
xchg
inc
add
sti
shll
xchg
and
out
bnd
add
mov
rcll
push
mov
mov
loop
lcall
push
add
fsubr
mov
fcomip
aaa
ret
mov
add
cltd
clc
cmp
jl
dec
cwtl
jb
ja
sbb
mov
lahf
mov
cmp
adc
or
or
cmp
sbb
add
cmp
jae
mov
lret
mov
sbb
mov
ja
mov
dec
cmp
xchg
int3
into
or
xchg
adc
pop
cli
adc
xchg
popf
mov
xchg
jle
jae
pop
clc
lea
daa
dec
lock
xor
aad
cmp
pop
dec
mov
add
insl
lahf
add
outsl
mov
or
fmul
mov
jo
mov
add
mov
lea
aam
rclb
push
mov
ds
mov
xor
jne
mov
lea
sahf
mov
adc
enter
outsl
mov
addb
cmp
xor
lods
aad
fcmovne
or
xor
cmp
or
xor
gs
jb
cmp
fs
jae
add
pushf
xchg
xor
insl
das
fsubp
xor
data16
or
lods
sbb
jle
adc
add
pop
test
mov
jp
adc
sub
mov
cmp
xchg
test
inc
mov
add
add
popa
rcll
mov
in
movsl
es
mov
dec
sbb
cmp
test
and
hlt
insb
push
insb
add
inc
scas
push
push
pushf
in
das
lahf
iret
rol
jge
add
jmp
sbb
adc
dec
movsl
into
lret
fmuls
outsl
adc
mov
dec
test
inc
xor
sub
test
icebp
repnz
mov
jb
leave
fnstcw
loope
and
mov
aaa
or
call
lds
adc
xor
call
mov
cld
cmp
adc
rcrb
push
inc
mov
lret
nop
popf
mov
inc
mov
cmp
insb
jle
mov
push
mov
sbbb
adc
jno
inc
out
outsl
push
or
hlt
add
mov
call
cmp
add
jo
add
add
mov
lods
hlt
pop
mov
or
int
fsubrs
and
jo
inc
or
aas
testl
imul
je
pop
mov
add
out
insl
ss
lock
or
subb
jmp
pop
mov
add
and
andb
ss
and
decl
decl
jne
popa
test
sub
and
or
jae
rcrb
call
xchg
lea
add
cmp
pextrw
and
lcall
and
mov
adc
pushf
add
in
enter
and
pop
lock
fwait
sub
cmp
lahf
mov
mov
push
jne
adc
adc
lret
cmc
push
or
ss
stos
lea
push
push
mov
sbb
push
int3
pop
popa
mov
xchg
mov
popa
aam
fcomps
push
adc
in
or
dec
jge
adc
dec
pop
pusha
fadds
cltd
js
mov
hlt
incl
pop
add
cs
insb
bts
mov
jb
gs
and
mov
add
cs
in
mov
push
imul
arpl
jo
jbe
popa
jbe
bswap
aas
inc
jo
add
jo
imul
jbe
jns
insl
jo
gs
shlb
arpl
rcpps
gs
addr16
pusha
icebp
jbe
cmp
insl
jae
dec
data16
aaa
push
inc
arpl
fldt
or
je
outsl
insl
jb
imul
add
fldl
out
gs
ja
les
push
xchg
ss
cld
sub
push
pushf
cmp
mov
mov
jp
sbb
sub
adcb
mov
add
pushf
mov
out
push
icebp
mov
push
pop
dec
dec
and
pop
movsb
cmp
out
xchg
aam
int
sarb
push
int3
sbb
push
add
outsb
filds
andb
push
xchg
mov
lret
lea
xor
cmp
fnstsw
pop
push
mov
test
mov
jo
mov
adc
adc
outsl
and
sub
push
xchg
leave
dec
dec
inc
cmp
mov
push
and
jg
dec
and
mov
sub
popa
sarl
jecxz
inc
xchg
aaa
icebp
pop
clc
pushl
sub
xor
adc
in
mov
xor
mov
adc
push
mov
mov
mov
jne
mov
mov
xchg
js
mov
dec
inc
pop
or
jo
ja
sti
sbb
sbb
ljmp
cmp
enter
and
dec
dec
and
outsl
mov
jl
mov
cmp
mov
out
adc
cmp
or
xor
xor
xor
push
mov
add
cmp
xor
sbb
dec
rcrb
add
das
movb
adc
mov
push
mov
sub
aaa
pop
push
mov
pop
push
mov
push
sub
jmp
ljmp
popa
scas
shll
jne
mov
mov
inc
and
nop
push
jg
adc
clc
add
push
and
call
ret
loopne
cmp
cwtl
ss
jo,pt
mul
loopne
repz
inc
xor
daa
inc
jmp
jecxz
add
or
cmp
enter
fsubrl
cmp
andnps
fimuls
inc
adc
mov
insb
jb
lahf
mov
jle
incb
mov
das
mov
subl
dec
test
test
adc
imul
add
js
xor
mov
out
in
mov
and
add
cwtl
push
imul
out
fists
imul
decl
inc
int3
xor
xor
aaa
jbe
fidivl
xor
aaa
aaa
xor
xor
mov
add
cmp
mov
xor
sbb
hlt
loopne
loopne
stos
or
add
mov
incl
jne
sub
mov
addl
cs
xor
and
sbb
sbb
imul
sbb
xchg
mov
cli
push
or
hlt
mov
data16
std
pop
stc
or
test
std
push
xor
adc
push
in
sbb
imul
mov
add
call
inc
cmc
pop
test
scas
enter
add
add
test
mov
sub
in
inc
mov
les
lods
dec
inc
adc
add
sub
add
dec
sarl
adc
hlt
inc
add
xchg
mov
clc
cld
adc
mov
dec
add
lcall
mov
adc
test
xchg
add
push
push
aaa
jne
xchg
cltd
decb
pop
cmp
and
xor
sbb
sbb
shll
and
pop
add
and
xor
jnp
in
and
rorl
outsl
xor
lock
pop
ja
popa
push
or
jno
push
dec
add
sahf
jne
adc
pop
jbe,pt
add
add
push
jl
cmp
ja
dec
hlt
push
lock
lds
js
hlt
inc
and
in
je
shr
mov
int
jae
in
jl
jns
push
dec
mov
in
leave
mov
jmp
test
loopne
xchg
xchg
test
push
fdivr
outsb
lds
movsb
nop
aam
sarb
dec
xor
loopne
push
test
and
test
repz
push
enter
mov
push
rclb
mov
test
dec
mov
rep
fiaddl
test
mov
adc
mov
cmp
add
add
mov
add
out
add
loope
cmp
aaa
xor
xor
aaa
xor
or
xor
xor
push
test
mov
and
push
pop
pop
dec
inc
adc
cmp
fs
xor
add
cmp
mov
mov
or
cmp
jnp
and
sbb
lock
dec
mov
xchg
fdivs
js
add
loope
dec
cmp
sub
cld
dec
out
and
rorb
out
and
mov
mov
fcomip
push
jmp
dec
dec
dec
sbb
cmp
ja
lock
dec
inc
cmp
std
mov
sub
call
fistpll
pop
cmp
mov
dec
ffreep
sarb
mov
outsl
jge
pop
clc
paddd
jnp
push
lods
loopne
rolb
inc
mov
es
mov
jne
cwtl
inc
mov
sub
push
cmp
xchg
pop
sub
out
jnp
mov
icebp
imul
ljmp
cmpsl
jb
cld
pop
fnstenv
mov
jae
sti
mov
dec
rcll
dec
outsb
sub
je
mov
out
cmpsb
mov
pop
stos
dec
mov
hlt
add
lods
hlt
in
mov
int
xlat
push
mov
mov
movsl
adc
fdivp
decl
push
cmpb
hlt
jge
mov
jg
stc
push
dec
mov
or
test
movsl
cmp
pusha
scas
mov
jbe
or
xor
mov
pop
mov
loop
push
add
push
jne
jmp
and
push
es
mov
inc
cld
cmp
fcoml
into
test
and
lea
push
clc
ret
jo
call
sti
sti
xor
dec
cmpsb
push
and
outsl
inc
xor
daa
inc
inc
xchg
lea
or
mov
mov
movsl
shl
aam
jp
fisubrl
clc
mov
das
pop
inc
inc
movl
dec
adc
cmp
in
std
sbb
mov
nop
jle
gs
js
inc
mov
lea
xchg
js
mov
dec
jb
dec
mov
mov
jl
jmp
sub
pop
loop
iret
das
loop
arpl
shr
mov
lret
inc
inc
jecxz
inc
popa
or
je
or
addl
add
inc
adc
sub
or
add
repnz
ficoml
je
and
dec
pop
jl
mov
add
mov
aad
cmp
sub
inc
mov
or
dec
mov
dec
cmp
or
fstpl
inc
cld
inc
cmpsl
shll
fldl
outsb
sbb
sub
sub
rcl
and
ret
pushl
lock
je
mov
sbb
outsb
pop
rol
and
int3
cmp
mov
pop
mov
mov
outsl
jg
sub
mov
cld
icebp
sbb
cmp
xorb
mov
jmp
xchg
stos
mov
push
adc
ss
add
dec
lods
push
unpckhps
rcl
and
test
nop
sub
or
and
aaa
hlt
dec
cs
lods
inc
aam
pushf
inc
add
nop
pop
push
mov
inc
and
xor
adc
test
mov
jmp
add
dec
push
jne
sbb
inc
pop
dec
cmp
add
test
cmp
lods
div
mov
test
stos
adc
dec
cld
push
xchg
imul
test
imul
hlt
add
add
enter
jl
out
aam
cmc
nop
mov
sub
data16
adc
pop
cs
movb
jo
adc
fsubrs
xchg
pop
or
adc
sbb
jnp
or
mov
push
test
push
or
or
inc
shrl
call
addr16
inc
pop
in
sbb
or
adcb
nop
inc
nop
rorb
jg
mov
ret
arpl
mov
pop
inc
inc
mov
adc
xchg
push
sbb
mov
push
cmp
xor
imul
add
jge
mov
and
daa
daa
fsub
lods
insb
add
push
fadds
fcomps
jbe
adc
addr16
adc
or
add
lret
ljmp
or
push
sub
add
xchg
cs
mov
dec
add
pop
add
add
pop
mov
add
inc
add
fstp
fistl
sbb
inc
add
dec
add
pop
xlat
jge
add
je
dec
and
or
add
sub
add
pop
sbb
mov
jle
ltr
add
insl
adc
cmc
add
xchg
std
and
push
and
and
jb
mov
scas
or
xchg
fdivs
pop
adc
jae
je
pop
cmp
ljmp
mov
sbb
pop
jg
divb
mov
or
add
shll
sti
lods
jnp
or
push
repz
sbb
hlt
fstps
lods
sbb
inc
add
stc
aas
repnz
bound
add
daa
add
cld
push
push
cld
mulb
add
add
or
fistps
insl
daa
dec
addl
mov
push
add
sbb
sub
cmp
es
adc
and
dec
aaa
and
fwait
sbb
lret
es
and
inc
test
inc
rclb
add
ud2
ja
lret
pop
jnp
ret
adc
in
add
or
jle
push
inc
test
push
sbb
sub
pusha
cmp
imul
jbe
testb
or
inc
push
add
pop
pop
fbstp
data16
push
jno
imul
addr16
cmp
sbb
daa
imul
xor
sbb
inc
jne
addl
aaa
push
push
add
roll
add
dec
add
ret
mov
or
push
ret
adc
inc
dec
sbb
inc
mov
pop
lret
inc
adc
daa
leave
push
notb
and
pop
insb
and
jle
pop
ss
adc
rdpmc
xchg
mov
sub
mov
call
push
adc
insb
sub
fadds
push
sub
fldenv
wbinvd
nop
xchg
insb
and
decb
test
jb
lret
movsb
add
or
lods
lods
mov
push
clc
in
fildl
adc
scas
push
ljmp
lds
or
add
push
fucomip
fdivrp
das
mov
push
sbb
xlat
lds
addl
push
lret
or
sar
movsb
sub
je
push
xor
aas
mov
mov
jno
adc
addl
mov
or
push
pop
repz
pop
jp
xchg
scas
or
iret
fidivl
cmp
xchg
jg
fcoms
inc
and
or
outsb
aaa
pop
cmpsb
adc
cmp
data16
cmp
pusha
mov
inc
cld
add
pushw
or
int
sti
cmp
or
or
inc
add
cmp
add
es
lods
pop
imul
jae
jno
xchg
div
out
mov
and
cmp
add
cmp
ja
inc
clc
ss
xor
fdivs
out
jb,pn
ss
movsb
jecxz
mov
movsb
loopne
cmp
mov
out
cs
popl
and
mov
loope
push
add
xor
ret
daa
std
push
outsl
fnstsw
adc
jns,pt
out
in
adc
pop
xor
int3
mov
hlt
xor
ja
mov
jle
es
cli
jb
scas
fst
jge
add
in
loope
xlat
roll
push
in
outsb
movb
push
scas
add
movsb
lret
sub
jno
inc
iret
xor
dec
dec
insl
fistpl
lahf
cltd
push
ja
out
daa
loop
jo
mov
and
ret
daa
out
add
xor
aaa
insb
arpl
add
jg
mov
mov
sbb
popa
popa
fldcw
mov
pop
enter
push
inc
add
ffree
jne
mov
cld
aad
hlt
mov
mov
inc
jl
inc
inc
pop
cmpsb
xchg
lds
pop
loop
xor
jbe
mov
cmpsb
es
or
jg
int3
or
out
insb
lock
fiaddl
insl
mov
add
fnsave
fdivs
in
or
lock
fwait
ja
sub
jg
and
pop
jmp
add
add
mov
insl
xchg
out
adc
fwait
cmpsb
aad
xchg
insb
sbb
jge
cmp
jg
inc
pop
arpl
cmp
xor
xor
fdivrs
rcrw
mov
ret
lods
add
mov
and
add
pop
out
inc
lret
sub
or
jnp
xchg
xchg
push
xchg
or
jae,pt
fistpll
push
stos
xchg
in
add
jbe
cld
and
dec
cmp
data16
cld
jno
je
out
ljmp
or
addb
adc
adc
adc
push
jnp
lods
je
inc
dec
cmp
jp
call
add
mov
jno
sti
push
mov
sub
xchg
jnp
cld
mov
sub
rcrl
xor
ret
lock
mov
sub
lock
pop
jle
pop
jbe
out
jae
faddl
rorl
add
rolb
test
jae
jp
sahf
icebp
lret
je
fcoms
pushf
adc
popa
imul
movsb
in
lods
jge
jp
jne
insb
mov
in
int3
sbb
fwait
imul
cmp
mov
and
inc
lea
sbbb
fldt
pop
sbb
add
arpl
mov
sbb
xchg
push
pop
ja
pop
mov
dec
arpl
pop
iret
iret
scas
ret
fcompl
mov
aaa
sti
int3
adc
insl
in
shl
push
jne
pop
and
inc
add
or
add
push
imul
pop
pop
cmp
movsb
arpl
push
daa
data16
inc
adc
mov
loope
adc
jno
adc
ficoml
pusha
jmp
sub
int3
and
push
pop
jecxz
xor
add
mov
dec
and
lods
adc
jecxz
imul
or
frstor
jne,pn
xor
lds
add
cmpsl
xchg
adc
cltd
iret
or
fwait
inc
adc
lcall
inc
xlat
jmpw
xor
sbbl
or
add
lret
sbb
cld
xor
daa
ljmp
push
push
inc
sahf
in
push
xor
add
lods
mov
dec
mov
push
loopne
push
out
push
cmp
jecxz
push
je
xor
imul
aas
movsl
push
mov
fisttps
jno
xchg
inc
xor
cwtl
lods
pusha
ja
xchg
pop
mov
xchg
iret
xor
ljmp
stos
xor
inc
je
or
add
cmpsl
addr16
xchg
test
or
add
outsl
scas
loope
fistpl
jb
out
mov
pop
fisttpl
lea
sub
ja
ss
andb
add
push
out
xchg
insl
lods
adc
add
mov
out
dec
outsl
ffree
xor
jno
iret
jl
jb
and
mov
cwtl
cli
xchg
into
pop
adc
xchg
add
iret
loopne
movl
cli
sub
and
scas
or
fisttpl
mov
mov
stos
mov
out
cmpb
or
negb
out
std
xchg
fldenv
push
sub
add
pop
insl
cli
addb
xlat
ret
xorb
or
xchg
shl
push
push
or
aad
leave
sub
out
lods
lahf
ds
ss
out
xor
imul
out
xor
mov
iret
inc
xor
jae
inc
dec
fnsave
or
sbb
and
cmp
aas
int
pop
xlat
jbe
aas
idivb
loopne
pop
xorl
stos
mov
add
loopne
cmp
sub
js
jle
mov
xchg
or
mov
scas
jno
inc
jmp
out
mov
fistl
push
mov
sbb
jmp
jnp
mov
pop
sub
dec
xchg
adc
jno
or
mov
insb
popf
ss
sbb
pop
out
add
inc
mov
sbb
enter
fdivrs
push
test
sub
or
xchg
insb
cmp
push
lcall
cmc
mov
dec
insb
push
push
shll
stos
ret
fldt
aaa
inc
mov
jnp
mov
and
test
iret
pop
frstor
mov
lods
sub
and
and
out
xchg
fdivrs
idivl
push
push
dec
sub
outsb
adc
cwtl
jbe
inc
imul
addb
jle
aam
out
fdivrl
cmp
jg
icebp
fsubs
cmp
xor
mov
mov
and
jae
mov
popa
in
popa
out
iret
push
ficoml
test
adc
cwtl
cmp
xchg
and
loopne
pop
inc
jp
cwtl
ja
out
daa
in
mov
pop
cmpsb
daa
aas
add
shlb
icebp
cmp
ret
stos
or
pop
xlat
in
adc
mov
dec
xchg
lock
je
sar
test
fidivl
cmp
and
ret
add
add
das
lods
fisttpl
dec
mov
and
pop
adc
inc
data16
sbb
mov
jo,pt
movsl
xchg
movsl
add
in
jnp
cs
test
pusha
sti
nop
fwait
jmp
out
iret
lcall
sti
and
outsb
cmpsb
scas
lods
fldcw
pop
shl
jne
jecxz
and
or
cwtl
cmp
aas
inc
pop
jae
jae
bound
pop
sbb
dec
movsb
aam
sub
out
orl
sub
jecxz
xchg
add
iret
jnp
test
ret
jnp
cmp
or
call
jle
lods
xlat
xchg
adc
cmp
and
mov
subl
adc
inc
add
lahf
mov
xor
lret
ficoml
mov
and
and
mov
cmp
jle
fdivl
iret
sbb
das
push
adc
mov
loope
loope
loop
xor
cmp
fsqrt
cld
push
xor
jns
sbb
cmp
cmp
xor
sbb
ja
aam
loopne
int3
inc
in
das
lahf
test
popf
fcmovnbe
or
fdivs
fiaddl
cltd
sbb
push
sub
adc
push
xor
cmp
mov
cmp
loopne
cmp
and
and
cmp
daa
and
lods
cmpsb
mov
jbe
sbb
jl
lods
and
insl
pop
cmc
test
sub
scas
in
and
push
lods
or
sbb
enter
sti
shlb
shr
call
scas
mov
xchg
and
stos
inc
out
shrb
rorl
inc
aaa
dec
clc
shlb
push
sbb
inc
mov
and
sub
cmp
add
shlb
dec
imul
clc
sbb
aaa
push
cmp
ljmp
clc
pop
xchg
mov
aaa
es
rcrl
xchg
aam
roll
icebp
test
or
cmp
nop
std
and
loope
mov
xchg
or
insl
in
inc
rcll
mov
fildl
inc
add
lods
mov
xchg
loopne
repz
pusha
bound
faddl
jns
add
ss
dec
cmp
inc
inc
bound
fsubr
lds
cmpsl
ss
xchg
push
jne
test
mov
into
and
seta
fldt
fiadds
je
rep
adc
out
insl
jle
incl
test
or
loope
das
cmpsl
or
sti
insb
push
movl
ret
pop
scas
ds
xor
add
add
push
add
or
cmp
jecxz
sbb
xchg
or
insb
pop
mov
cld
fsubrs
loopne
push
andl
sub
rolb
dec
xor
add
iret
xchg
xchg
fcom
mov
sub
mov
incl
xor
hlt
push
fldcw
jp
add
adc
iret
xor
icebp
add
orb
mov
sahf
and
out
cwtl
add
sbb
push
stos
adc
pop
mov
test
push
ds
iret
inc
sbb
xchg
es
cmp
int3
jp
push
sub
ja
mov
mov
or
push
stos
scas
cmp
xor
insl
ret
jae
pop
push
hlt
or
push
pop
dec
outsl
add
fiaddl
stc
pop
std
jl
fdivrs
test
loopne
jbe
pushf
fdiv
cmp
inc
arpl
lret
jbe
fadd
jecxz
add
xchg
out
fstpl
push
xor
sbbb
add
insb
inc
jg
jne
repnz
inc
and
stos
and
arpl
mov
lret
jbe
push
cmp
inc
push
adc
std
pushf
inc
sub
jp
pop
pop
adc
mov
cmp
fidivl
fisttps
and
iret
dec
fldcw
sub
aaa
xchg
mov
addl
or
mov
fmull
mov
js
in
xor
aaa
and
repz
sbb
int
dec
add
jl
ljmp
ret
push
lea
jle
int3
shr
inc
fisubrl
ljmp
insb
loopne
adc
or
push
ds
push
ss
pop
fnstcw
xor
jmp
loope
ficomps
daa
jp
mov
jae
mov
push
or
ljmp
iret
cs
and
js
mov
xchg
adc
push
cmpsb
mov
dec
sbb
aaa
rcl
insl
stos
push
xor
sbb
rorb
sbbb
fcompl
js
cwtl
sarb
loopne
es
test
fs
in
cwtl
jno
inc
daa
sbb
es
aas
dec
enter
sbb
fistps
sarl
outsl
aaa
mov
sub
xor
lds
fdivl
dec
mov
inc
stos
add
mov
lret
into
ret
repnz
idivb
rcll
cmp
cltd
enter
push
cmpsb
imul
rcrb
dec
add
or
mov
add
push
add
mov
add
xor
addr16
push
add
pop
inc
imul
jns
iret
mov
add
fsub
sbb
cltd
cmp
out
sub
mov
xor
jmp
scas
mov
xchg
aaa
jb
aam
andb
rcl
mov
std
or
mov
cmp
sbb
ljmp
add
adcl
xchg
daa
lods
cmp
push
or
jbe
les
test
stos
jo
cmc
iret
cmp
jo
addr16
subb
mov
xchg
fsubs
sub
rcll
adc
popl
or
inc
ret
add
adc
ret
sti
xchg
inc
cltd
add
lods
popa
wrmsr
fiaddl
int
mov
sub
cli
ret
push
add
jnp
scas
and
xor
ljmp
xor
push
bound
aaa
loopne
xchg
cmp
mov
das
xor
jmp
add
push
pop
loopne
push
jl
fstpt
movsl
cvtps2pd
or
scas
imul
lret
jne
mov
mov
sub
fmull
sbb
aaa
and
adc
dec
pop
insl
test
and
test
jmp
cltd
sbb
inc
daa
orb
pop
ss
daa
test
jl
mov
adc
repnz
xchg
and
int3
mov
icebp
mov
das
xchg
jno
mov
sbb
stos
mov
rorl
aaa
inc
pusha
dec
cmp
adc
insb
cmp
ficomps
into
shrl
mov
sahf
test
mov
mov
or
pop
and
stos
rcl
pop
push
fwait
sbb
outsl
psubsw
sub
fidivl
jo
and
test
push
js
mov
mov
pop
lock
fwait
mov
sbb
mov
or
and
xchg
cwtl
les
les
sbb
mov
cwtl
pop
mov
jno
test
jne
roll
add
pop
test
or
bound
xchg
dec
out
cltd
and
paddsb
pop
imul
mov
or
cmpsb
jnp
lds
sbb
das
adc
sahf
loopne
loop
popa
out
gs
loope
push
das
scas
push
inc
lods
jp
push
mov
addb
in
lock
jo
jns
jmp
rclb
cmp
inc
xchg
outsb
cmpsl
or
movsl
xor
pushf
int
bound
popa
jbe
jbe
out
pop
cmpsl
mov
and
add
push
inc
loop
movsb
or
popa
and
cmc
xchg
mov
clc
xlat
pushf
lret
jne
cmpsl
inc
std
cld
or
sbb
shlb
fwait
ret
xchg
js
fwait
push
dec
sbb
gs
ficompl
loop
icebp
xor
mov
je
inc
in
jbe
sbb
add
adc
jmp
scas
pusha
roll
pop
shufps
rcll
or
pop
sub
sub
push
sub
mov
scas
jmp
jne
shrl
push
pop
mov
das
mov
and
sbb
and
lea
mov
stc
xchg
js
cmpl
mov
dec
add
or
ret
loopne
add
sbb
push
fdivrl
prefetcht2
sub
xchg
imul
cwtl
mov
mov
sbb
sbb
pop
and
push
dec
loopne
aad
sub
loope
lcall
in
xchg
sbb
push
inc
hlt
in
pop
sbb
jl
and
pand
es
and
mov
pop
dec
mov
fcompl
pop
pop
and
pop
xchg
mov
rcrl
mov
sbb
sub
int3
adc
mov
and
cmp
mov
dec
aam
mov
or
out
std
jle
js
mov
push
adc
pop
or
in
fnstenv
popf
xor
mov
mov
or
fmuls
and
scas
adc
pop
ljmp
xor
push
mov
mov
adc
loop
fildll
add
jg
xor
mov
pop
mov
mov
sub
cld
idivb
push
adc
fstpt
sub
xchg
adc
or
lods
fstpt
stos
arpl
loope
lods
insl
rcl
scas
rclb
in
iret
loopne
aaa
inc
pop
push
pop
push
pop
push
testb
inc
pop
pop
lds
sbb
insb
idiv
scas
mov
sbb
push
adc
aas
outsb
xchg
xorb
icebp
xor
or
jb
cltd
aaa
push
xor
imul
pushw
mov
jle
sub
jle
jo
mov
pop
xor
dec
mov
icebp
mov
and
and
lea
lods
int3
mov
mov
out
push
inc
pusha
loopne
xor
and
minps
sub
sbb
inc
mov
and
or
add
int3
lcall
rorl
push
push
mov
add
sub
data16
rcll
jns
sub
add
push
fistpl
jl
loop
push
xor
xor
shr
shll
iret
loope
into
ds
mov
mov
adc
data16
jg
push
ljmp
and
cmc
out
add
cmc
enter
push
jmp
pop
sub
push
sub
pusha
or
ds
insb
jnp
sub
test
test
in
dec
cmp
pop
pop
and
add
leave
insl
cmp
jb
es
xor
fldenv
add
pop
cmp
sub
sarb
sbb
xchg
sub
push
pop
cmp
fsubs
fstpl
xor
in
jnp
das
add
mov
adcb
add
scas
pop
or
fcom
inc
mov
sbb
adc
testb
scas
mov
frstor
pop
sti
rcrl
pop
add
inc
js
pop
jb
adc
jno
cmp
mov
add
mov
adc
push
imul
fcmovnu
out
scas
out
popf
mov
scas
fstl
xchg
popf
int
xor
pop
mov
xchg
jnp
mov
push
and
pop
lcall
add
in
mov
mov
scas
ret
ret
sub
dec
or
fwait
lock
loop
pop
data16
ficoms
mov
mov
cmp
test
inc
mov
pop
adc
cmpl
pop
xor
mov
mov
cmp
not
mov
sub
jle
insb
in
and
add
es
push
fcmovne
popa
mov
dec
lds
cmp
jecxz
push
in
cmp
sbb
jo
or
sbb
pusha
push
jl
sub
sbb
and
inc
mov
sbb
out
pop
int3
test
jo
push
add
xchg
lret
mov
sub
subl
cmp
insb
imul
lock
inc
subl
out
add
fwait
xor
rcrl
mov
scas
sbb
push
xlat
scas
ror
fsubp
inc
push
mov
mov
push
shlb
sub
sub
movups
pop
mov
pop
das
and
out
js
inc
in
inc
or
in
dec
xchg
mov
ret
jnp
movb
push
and
out
mov
push
js
push
mov
int
cmpsb
mov
sub
jnp
es
subb
or
cltd
andb
push
sbb
loope
xchg
aad
fisubs
jae
fs
or
adc
imul
or
icebp
inc
sub
ret
pop
mov
test
push
jb
xor
es
fs
cmp
push
adc
frstor
fs
out
push
das
sbb
pop
aam
sub
mov
js,pt
push
pop
fucom
adc
cmp
mov
mul
in
fisttpl
adc
mov
ss
pop
adc
loop
ficomps
sbb
in
fcomps
cmp
or
xor
adc
imul
sbb
stos
inc
es
pop
pop
adc
xor
xor
pusha
mov
stos
fs
add
sbb
into
sub
xor
pop
ss
cmp
lods
jo
jecxz
or
scas
clc
icebp
js
adc
out
pusha
cmp
call
adc
push
xor
repz
loopne
cmpsl
sbb
loop
in
add
cmp
add
pop
sti
sahf
jo
scas
mov
ljmp
addr16
mov
and
push
jecxz
rcl
pusha
xor
xor
test
out
or
loopne
scas
xlat
aaa
stos
pop
adc
and
lods
ret
outsl
mov
ds
and
data16
sub
scas
push
ljmp
in
test
adc
and
sub
les
movsb
xor
push
outsl
pop
insb
push
movsb
out
aaa
fdivrs
int
mov
or
aas
fs
fmul
pop
pop
insb
movsb
add
int3
popa
or
outsl
iret
and
movsb
in
adc
int3
adc
sub
int3
or
sub
push
sub
outsl
gs
add
outsl
add
outsl
jbe
xchg
int
inc
sub
sub
int3
das
or
jne
sub
and
sub
fisubs
test
inc
outsb
cmp
mov
xchg
int
insb
fistl
cmp
or
push
sbb
xchg
sub
imull
into
sub
cmpsl
inc
outsb
cmp
out
sahf
lret
jb
xchg
add
xorl
nop
imul
mov
push
les
jnp
cwtl
adc
dec
shlb
sbb
pop
loop
iret
rol
jo
int
dec
js
adc
mov
sub
dec
or
jne
jmp
xor
or
adc
add
syscall
or
adc
mov
pop
add
repnz
and
fldt
cmpsb
mov
or
pushf
or
pop
push
iret
mov
and
stos
jo
lds
mov
push
xchg
inc
nopl
dec
cmp
pop
fcoms
sbb
xlat
fistl
adc
adc
sbb
or
rolb
inc
fdivs
mov
out
cwtl
adc
rorb
xchg
in
mov
shlb
lahf
add
aam
je
loope
cmp
call
iret
adc
es
and
push
scas
add
mov
out
movsb
fisttpl
jle
dec
sub
mov
and
decl
dec
adc
jbe
jns
jp
jno
in
rolb
aad
sub
sbb
out
aam
sbb
stos
push
es
xchg
push
adc
or
fwait
push
inc
lret
mov
mov
inc
cltd
aas
iret
fisttpll
sub
xor
imul
jnp
push
pushf
xorb
shlb
sbb
xor
es
daa
ret
or
dec
xor
jmp
push
inc
or
test
jecxz
lret
jecxz
pop
xchg
in
aas
je
cs
xchg
mov
push
lods
add
inc
push
data16
std
mov
adc
pop
addl
and
adc
ss
movsb
push
roll
add
pop
sbb
add
cmpsl
xor
js
inc
add
dec
lock
addr16
loope
ja
and
jno
dec
and
sub
xor
ljmp
xor
ja
popa
popa
or
or
stos
jbe
and
mov
jb
jo
inc
stos
je
je
pop
fnsave
rcr
push
lret
push
inc
iret
in
out
fisttpll
inc
sub
mov
xchg
jl
mov
popf
mov
je
mov
data16
jmp
pop
cmp
arpl
popa
sub
adc
inc
sbb
or
xor
add
add
loopne
ret
mov
push
add
sub
or
pop
mov
int
shr
iret
or
rcrb
push
loopne
jle
xor
iret
dec
adc
pushf
hlt
data16
pop
fs
jg
and
cmc
or
in
lahf
push
and
sub
xor
pop
out
test
xor
fcoms
cmpsb
lret
pop
or
fdivs
clc
mov
pop
sbb
push
fildll
into
adc
fisttpl
ljmp
in
clc
pop
xchg
lret
jo
mov
movsb
inc
sbb
mov
mov
add
dec
testl
aaa
lcall
fnstcw
push
mov
es
shll
rcll
cmp
ds
imul
and
mov
test
or
cmp
cs
push
or
or
jp
shll
adc
pop
jo
vrsqrtss
lods
sbb
mov
fsubrl
fcomps
sbb
add
push
sub
sti
sbb
mov
mov
cmp
adc
push
pushf
in
loop
fisttpl
and
mov
xorb
call
cs
add
push
inc
insl
adc
loopne
or
dec
es
and
add
mov
xchg
sbb
fimuls
out
mov
movsl
mov
adcb
imul
dec
lcall
icebp
popw
stos
shlb
mov
add
fdivr
jne
lret
fldenv
aaa
lods
push
push
jo
dec
jo
test
les
rcl
into
adc
adc
test
push
xor
xchg
mov
sahf
ja
sbb
xchg
add
fisttpl
xor
mov
lahf
pusha
add
add
outsl
pop
xchg
xlat
fs
out
das
mov
xor
dec
cld
mov
adc
xor
adc
outsb
xor
es
inc
mov
pop
add
pop
je
call
out
cld
imul
push
stc
mov
sub
mov
aad
test
xor
cmpsl
mov
and
rol
fldenv
add
xlat
inc
cmpsb
pop
jbe
outsl
shrb
sbb
xor
sub
dec
iret
jp
loope
or
mov
push
xchg
arpl
adc
dec
dec
cmpsl
fsubs
and
jnp
int
dec
pop
push
ja
dec
xchg
stc
add
push
push
cmpsl
mov
and
mov
mov
iret
daa
sarl
cmp
int
stos
gs
std
shrl
shll
jbe
int3
rcrb
enter
movsl
or
pop
repnz
lea
inc
add
filds
imul
into
push
lods
lcall
stos
jns
orb
and
mov
testl
rorl
push
icebp
xor
pop
lods
adc
das
movsl
out
shrb
inc
push
sbb
adc
daa
and
xchg
arpl
adc
inc
stc
hlt
fs
loopne
outsb
icebp
inc
or
mov
addr16
stos
xor
xor
iret
pop
sbb
xchg
iret
loopne
mov
push
sub
cmp
xor
sbb
push
or
mul
loope
sub
out
and
xlat
iret
xor
and
cmc
dec
sub
loop
add
les
cmp
adc
inc
mov
iret
mov
mov
or
es
popa
push
jae
and
dec
jne
mov
sbb
add
lret
push
inc
pushf
pop
add
pop
cmp
ficompl
hlt
pop
lea
mov
pusha
push
add
in
scas
loop
and
inc
sub
jle
dec
rorb
xor
fildl
mov
or
pop
or
mov
cltd
inc
pusha
adc
stos
cmpsl
cmp
adc
loop
je
popa
mov
imul
xor
jb
jne
movb
jbe
imul
inc
pushl
mov
popa
cmp
arpl
cmp
movsl
pop
iret
out
daa
or
js
rolb
dec
movsl
pusha
adc
test
loopne
cmp
shrl
jo,pt
mov
and
mov
dec
dec
inc
cpuid
aam
inc
xchg
mov
js
or
or
addl
and
push
sub
mov
fcmovnb
lahf
jno
insl
les
jmp
fisubl
inc
add
mov
pop
sbb
sbb
jns
jo
mov
imul
xchg
mov
popa
sub
sub
xchg
jg
sti
fisubs
lds
sbb
data16
inc
inc
jnp
cmp
push
xor
cltd
pusha
pop
mov
sub
movsb
cmpsb
pop
push
add
xchg
xchg
and
add
ja
test
xchg
js
push
inc
jp
xor
adc
mov
scas
jg
add
call
in
ds
xorl
shll
mov
notb
mov
cli
addl
in
jns
or
or
jno
push
mov
jnp
divb
fsub
sbb
sub
inc
scas
popa
mov
stos
out
push
mov
repz
fisubl
ret
mov
call
js
mov
arpl
add
popa
cltd
test
xchg
clc
in
jno
mov
addr16
cmp
clc
paddq
add
fisubrs
les
push
aad
xor
xor
orb
popf
cmp
cmpsl
pop
adc
loope
cli
lret
leave
and
inc
mov
push
pop
or
sub
cmp
xor
pop
call
into
mov
xchg
jmp
pop
scas
dec
pop
iret
xor
mov
pusha
xor
aam
std
inc
sbb
dec
jmp
ret
mull
insb
outsl
out
lret
pop
imul
insl
shlb
fstps
fldpi
sub
dec
adc
insl
jne
jecxz
mov
jmp
sarl
adc
aaa
popf
addb
sub
xor
divb
movsb
pop
lret
iret
push
shlb
js
mov
adc
stos
adc
int3
xchg
iret
jne
pop
jae
call
xor
xor
xor
mov
repz
cwtl
add
ljmp
lret
xor
ret
mov
jb
inc
pop
test
mov
adc
outsl
pop
and
int3
sbb
daa
adc
cs
mul
outsl
adc
scas
das
lods
adc
cmp
outsb
into
fimuls
data16
xor
adc
push
cmp
fsubrs
pop
pop
sub
in
sub
mov
cwtl
xor
adc
dec
and
xlat
pop
push
xor
div
sub
data16
andb
fdivrl
lret
sub
xchg
xor
divl
jbe
mov
mov
add
fildl
xor
mov
inc
cmp
test
sbb
mov
and
sbb
pop
loopne
dec
ss
mov
mov
ljmp
add
jecxz
aam
sub
scas
inc
bound
sub
cmp
scas
inc
les
pop
adc
loop
ja
push
outsb
add
sbb
les
enter
mov
xchg
lds
in
inc
inc
or
cwtl
adc
enter
stos
pop
dec
scas
and
sbb
and
test
mov
adc
add
bound
js
xchg
mov
enter
mov
sar
mov
jb
imul
push
scas
pop
cmp
imul
add
pop
testb
inc
jl
and
or
mov
in
inc
xchg
daa
in
add
or
add
adc
es
pop
mov
mov
push
loopne
cmpb
and
faddl
cmp
mov
xchg
cmp
lea
aas
leave
sbb
mov
daa
jno
rcll
xlat
xlat
mov
xlat
pop
add
lock
mov
leave
mov
add
out
pop
sbb
inc
adc
xchg
jp
mov
incb
aaa
sub
lahf
shll
xchg
add
cwtl
push
adc
sub
sbb
sbb
cli
popa
push
mov
orb
mov
mov
push
sbb
cmpsb
jle
loop
into
or
push
aad
add
or
rcrl
mov
mov
inc
mov
jo
jmp
cmp
repz
pop
or
sbb
push
push
lea
xor
xor
pop
test
hlt
dec
sbb
pop
add
aas
into
dec
loopne
or
scas
dec
jae
rcrl
data16
arpl
rcrl
or
xor
into
cli
pushf
sbb
outsb
sub
and
das
jle
pop
xor
cmp
sbb
or
aaa
ret
sahf
sbb
jle
arpl
sbb
mov
add
test
pop
mull
jns
pop
pop
mov
or
add
in
mov
adc
cmp
lods
jne
add
insl
ss
movsb
mov
and
and
js
add
add
mov
or
jecxz
xchg
iret
dec
iret
jge
adc
xlat
and
jg
xchg
or
pop
aam
dec
sbb
jmp
sbb
mov
mov
push
out
or
fadds
mov
repz
out
jle
mov
jg
xor
outsl
sbb
lahf
sti
pusha
cwtl
cmp
arpl
and
dec
cmp
sbb
cmpsl
in
jo
fadd
lds
insb
jae
outsl
enter
mov
add
daa
scas
inc
lret
xchg
adc
mov
in
xlat
cmp
test
loop
movsb
arpl
push
inc
or
inc
aaa
ja
arpl
dec
push
jnp
mov
mov
sbb
xchg
leave
pop
and
aad
test
push
pop
mov
in
xor
lret
stc
xchg
imul
xchg
cmp
cs
pop
mov
fwait
mov
sbb
mov
xchg
popa
sbbl
and
xchg
xor
xchg
sbb
ja
insl
repz
popa
nop
xchg
lcall
lahf
xchg
sbb
xor
ret
out
ret
imul
inc
out
out
mov
mov
dec
jmp
xlat
fwait
dec
xchg
xchg
mov
and
ret
push
stc
sahf
cmp
adc
dec
cmp
pop
fwait
movsb
xor
mov
adc
dec
lcall
mov
sbb
and
shlb
idivl
pop
xor
fcom
jl
adc
fbld
in
sbb
cmp
mov
add
fldenv
mov
add
lock
nop
or
cmp
mov
pand
jge
or
in
fdiv
dec
adc
dec
sub
movsb
divb
cmp
ss
pop
inc
aas
jg
pop
mov
aaa
pop
dec
sahf
dec
push
cmp
mov
int
and
pop
int
arpl
jo
insb
xor
jo
jnp
imul
pop
out
pop
ja
sbb
mov
xor
pusha
ret
mov
push
xorl
adc
ja
pusha
xor
ja
adc
jae
dec
push
mov
mov
jg
xorps
and
and
xor
lods
jnp
jno
and
test
and
or
pop
cmp
pusha
push
add
dec
mov
es
cmpsl
lret
imul
jo
push
jge
imul
into
pop
sbb
mov
repz
ja
cmpsl
dec
mov
add
sbb
mov
mov
aaa
sbb
in
cmp
fstps
mov
push
mov
xchg
cmp
add
enter
daa
arpl
xor
jp
push
push
push
jle
mov
and
mov
inc
add
je
push
std
lods
pusha
fistpll
pop
sahf
outsb
adc
sub
orb
and
xlat
adc
cli
pop
pop
cld
xor
fldt
andb
mov
or
or
js
jo
daa
hlt
sbb
fidivs
mov
adc
out
mov
sbb
nop
leave
enter
ja
mov
out
mov
aaa
fsubs
and
and
sbb
push
mov
and
sbb
test
mov
push
mov
imul
sbb
sti
jle
cli
add
add
daa
and
into
stos
pop
add
ss
flds
loopne
scas
mov
push
cltd
lock
or
mov
int
rol
sahf
jge
add
hlt
dec
into
divb
iret
cmpsl
call
lods
loope
in
aam
jno
push
add
sbb
nop
ret
cmp
jbe
dec
cmpsl
inc
jo
push
jo
mov
jns
stos
imul
jb,pt
fwait
add
ss
xchg
imul
mov
pop
add
out
or
sub
arpl
mov
or
imul
ja
mov
and
cmpsb
or
mov
movsl
inc
dec
in
addb
jmp
les
xchg
lret
dec
and
and
in
fidivrl
jo
in
divb
loop
testb
sbb
dec
push
mov
aam
data16
lcall
test
push
mov
dec
stos
inc
xor
rolb
fdivr
icebp
pop
add
or
iret
in
aad
insl
shrw
test
rorb
pop
jp
cmc
dec
jg
inc
inc
mov
lock
mov
fwait
pop
mov
add
sti
shr
ret
shrl
lods
popa
pop
lods
repnz
mov
jae
push
mov
and
sahf
into
enter
rcrl
xchg
inc
outsl
lods
jno
repnz
shll
addr16
add
cltd
arpl
ss
cli
add
dec
push
ret
xor
clc
iret
pop
rclb
mov
adc
stos
aas
add
xor
push
add
pop
ret
mov
mov
inc
dec
pushw
sbb
and
mov
jecxz
push
pop
cmpsb
sbb
aam
pop
fldz
jecxz
sub
fwait
adc
fcmovne
pop
sub
mov
daa
dec
xchg
mov
push
mov
arpl
sbb
stos
mov
jmp
das
xchg
push
add
jnp
jl
and
add
mov
push
aaa
dec
js
lahf
adc
add
mov
mov
int
inc
lret
add
aaa
jge
movl
iret
push
xchg
and
ret
push
pusha
shll
scas
mov
pushf
mov
cli
test
fmuls
and
js
lcall
int
ss
mov
and
out
dec
outsb
and
or
mov
imul
add
mov
and
test
clc
xchg
jo
adc
rclb
mov
into
push
mov
and
push
and
movb
and
push
xor
repz
jmp
push
repz
mov
stos
lods
mov
je
daa
bndstx
cli
stos
and
jge
iret
and
and
aam
mov
sub
cmpsl
or
pop
adc
leave
cmp
add
fcoms
mov
mov
or
and
lods
aam
loope
je
mov
cs
faddp
cmp
push
out
scas
push
xor
out
push
femms
out
xchg
add
outsb
mov
shll
add
in
in
inc
imul
test
mov
or
lods
add
adc
pop
push
arpl
pop
icebp
mov
popf
jnp
mov
xor
add
lahf
adc
pop
mov
in
and
and
inc
je
cmpsl
insl
mov
movsb
inc
fsubrs
sub
int
xor
sbb
inc
or
out
ficoml
or
pop
ret
ljmp
dec
cwtl
in
mov
pavgb
and
sbb
mov
test
sub
push
pop
and
mov
inc
iret
lock
les
repz
lods
clc
jae
scas
xchg
arpl
or
add
xor
cmp
sub
jle
xor
pavgb
pop
mov
add
xor
lahf
fwait
insl
xor
test
jmp
out
icebp
imul
add
jnp
adc
push
and
rcrb
jl
mov
cs
mov
enter
or
mov
fwait
daa
lcall
xchg
sbb
pop
lock
andl
in
adcl
mov
ja
lret
or
pop
das
lds
inc
mov
nop
lret
inc
out
or
xorb
inc
bound
mov
aad
les
jle
lcall
inc
das
icebp
jbe
xchg
sbbb
xchg
dec
out
movb
and
mov
ret
jp,pt
inc
fs
sub
sub
add
les
fists
and
fmull
dec
jb
mov
imul
fists
add
jae
outsl
mov
xchg
sub
into
and
mov
or
jge
pop
cmp
jnp
push
push
leave
imull
stos
jle
jle
cmpsb
lods
jmp
daa
repnz
sahf
add
or
test
iret
lret
clc
cmc
mov
dec
sub
and
pop
fucomi
mov
or
xchg
cmp
or
adc
pop
sub
aas
xor
pop
insb
sub
popa
add
je
mov
lds
adc
test
add
add
lods
into
lods
sub
sarb
lret
pop
dec
xchg
add
fwait
popw
aaa
idivl
inc
or
cs
cmp
lcall
inc
xor
cmp
sub
lods
inc
stos
dec
gs
sub
inc
fistps
in
jmp
pop
pop
and
push
xor
pusha
aam
mov
or
es
dec
xchg
std
or
cmp
mov
pop
mov
loop
inc
cmp
test
test
into
loop
or
adc
push
rolb
outsl
xor
sub
lcall
adc
test
scas
lds
outsb
sub
test
and
and
add
xchg
or
adc
mov
dec
mov
jne
stos
repz
arpl
pushf
fidivs
imul
mov
push
xor
cwtl
push
inc
pop
add
popa
jo
adc
stc
mov
dec
lahf
mov
add
xor
sbb
es
jg
pushf
je
jge
jp
lret
xchg
dec
add
sbb
lds
iret
push
hlt
ret
and
repnz
ljmp
les
addr16
inc
subb
adc
and
subl
cmp
das
loopne
adc
dec
frstor
sarb
ljmp
xchg
xor
cli
lods
sub
adc
mov
les
and
arpl
test
pop
sbb
push
adc
push
les
jmp
mov
roll
xor
leave
pop
mov
in
and
int
in
add
push
addr16
in
pusha
popa
int3
dec
or
cmp
adc
mov
xor
fnstsw
or
mov
fadd
xor
ja
adc
mov
mov
sub
mov
cmpsl
sbb
sub
inc
and
and
xor
xchg
jb
fidivl
pcmpeqb
mov
adc
adc
and
jns
dec
xor
cmp
addr16
mov
cs
bound
mov
cmp
rorb
add
mov
popl
adc
mov
fxch
andb
cs
in
sbb
dec
ret
mov
test
sbbb
mov
adc
loop
nop
loopne
add
fstpl
mov
or
add
add
cwtl
je
sub
mov
rorb
lds
imul
mov
enter
gs
dec
outsb
sub
inc
insb
adc
gs
xchg
xchg
repz
mov
cmp
sbb
out
data16
and
cmp
sub
fwait
adc
adc
add
dec
roll
adc
pusha
test
aad
sub
jnp
xor
cmp
clc
sbb
pop
aad
xor
fwait
out
mov
mov
dec
xor
dec
test
mov
cwtl
or
sub
dec
jp
dec
aaa
jae
std
adc
movsb
add
out
scas
lods
cltd
loopne
mov
out
dec
sub
int
xchg
and
out
and
dec
out
inc
cs
mov
adc
aam
xchg
shrb
xchg
sti
leave
and
add
push
imul
stc
bound
aam
add
xor
nop
and
mov
das
test
jge
pop
add
lcall
mov
scas
dec
add
push
into
jp
cs
stos
fs
add
xchg
mov
cmp
fsts
out
inc
cs
add
xchg
sub
mov
fimull
ja
xlat
popa
sbb
mov
sub
lods
sahf
pop
mov
lret
test
orb
xchg
pop
jle
aaa
inc
dec
out
mov
push
or
xor
cltd
es
cs
push
and
in
or
loope
xorb
shrl
ret
add
sbb
ficoml
sbb
push
fisubrs
sbb
popf
je
sub
xor
xchg
les
push
xchg
mov
xchg
add
sub
repnz
test
push
pop
dec
mov
add
pop
xor
jge
jne
add
and
mov
inc
push
jecxz
pop
pop
mov
dec
dec
pop
aas
hlt
sub
dec
testb
test
jb
mov
xchg
sbb
call
lcall
test
mov
andl
cld
push
int3
and
mov
add
fadds
pop
and
inc
or
stos
lock
mov
les
fldl2e
stos
inc
call
test
pop
lods
inc
add
mov
inc
out
push
jo
cmp
mov
mov
cmp
sar
pop
cmpsl
ja
pop
push
in
sahf
mov
arpl
add
add
test
cmp
mov
das
js
rcll
mov
push
jo
cmp
jmp
stos
rcr
inc
shll
roll
pop
add
fcoms
push
fistpl
lock
inc
sbb
push
fdivrs
lcall
insb
inc
xchg
bound
les
mov
adc
and
mov
loopne
adc
fidivs
imul
add
and
je
orb
mov
cmpsb
adc
mov
inc
sbbb
add
sub
inc
xor
push
std
mov
adc
in
scas
cmp
andb
push
mov
adc
aaa
shlb
push
sbbl
call
fcmovb
mov
pop
mov
jno
dec
test
jo
daa
lods
bound
sbb
fucomi
pop
lds
scas
es
lds
pop
das
addb
imul
cmp
add
add
fxch
add
add
dec
insl
jbe
adc
rcl
jo
xlat
popa
add
adcb
js
cs
cmp
movsb
ret
mov
jle
xchg
fwait
int
pushf
imul
jb
sbbl
bound
jne
add
cmp
aad
or
jo
shl
repz
mov
and
add
call
cmc
jl
or
jae
mov
cwtl
imul
cmc
mov
add
ljmp
div
jbe
outsl
imul
add
jbe
cmp
adc
cli
test
xchg
mov
cs
into
mov
lods
jae
movsb
mov
mov
je
inc
je
aad
aas
test
lods
dec
push
cmc
mov
push
loope
andb
inc
pop
loopne
in
and
notb
lret
jecxz
mov
mov
es
mov
add
imul
add
mov
jno
dec
iret
adcb
pop
adc
jmp
xor
add
mov
jmp
xlat
dec
push
inc
pusha
lock
shlb
mov
andl
jecxz
dec
shlb
adc
push
add
les
or
mov
jo
sub
and
les
mov
arpl
add
dec
add
jno
test
push
cmpb
sbb
xor
or
push
jge
xlat
adc
xlat
iret
add
lock
inc
shrl
ret
xor
sub
inc
je
test
enter
cmc
add
pop
sub
inc
mov
mov
mov
rep
and
rcrb
mov
fdivrs
loop
xchg
popa
es
xchg
push
dec
or
jecxz
mov
sub
or
sub
mov
dec
xor
sbbl
bound
or
push
pusha
mov
or
sub
sbb
mov
mov
mov
sub
sbb
iret
stos
repnz
add
pushf
sbb
xor
inc
ret
mov
loop
fcomps
xor
loop
arpl
add
repnz
inc
cmpsl
shrb
add
or
mov
in
pop
outsl
outsb
mov
test
ficoms
sahf
push
add
out
jo
add
xorl
inc
mov
sbb
or
or
loopne
mov
loopne
mov
and
inc
mov
out
or
dec
cli
inc
xlat
out
fisubl
insl
push
xchg
les
jb
mov
fcoml
pop
into
mov
or
aam
adc
adc
daa
mov
mov
sub
loope
jmp
arpl
adcb
mov
add
sbb
push
mov
lods
aas
iret
jo
adc
cmp
pop
xor
jle
sbb
xchg
sbb
push
testl
sub
movsb
dec
int3
lea
pop
push
pop
and
or
xchg
jnp
in
repz
lcall
jbe
inc
out
ret
fldt
cmp
pop
int3
enter
imul
leave
test
jle
jae
loop
add
popa
sub
mov
das
ret
or
cltd
pop
ret
lds
inc
pop
sub
das
sbb
dec
enter
xorb
pop
add
int3
dec
jbe
out
into
xor
add
pop
cmpb
mov
and
jne
push
jbe
adcb
add
lods
push
mov
add
or
popf
clc
insl
pop
sub
sub
sub
sub
adc
lods
add
jae
aaa
mov
add
add
iret
insl
lods
lds
int
sub
pop
fdivrs
addb
rcr
js
and
shlb
and
jns
filds
inc
inc
inc
sbb
adc
inc
pop
cmp
out
add
inc
add
popa
pop
sti
dec
addr16
inc
dec
mov
jo
mov
pop
lods
ljmp
mov
jp
loopne
outsb
arpl
movsb
sbb
push
test
scas
out
daa
fdivl
lods
dec
test
mov
insb
add
fmulp
sbbl
and
mov
add
lcall
jp
int3
lods
jns
pop
jne
xchg
pop
movsb
sbb
push
add
push
or
xlat
stos
imul
in
rorb
or
xor
fistpl
jge
dec
xor
push
and
add
pop
jnp
shrb
aas
push
push
cmp
mov
lea
xor
loop
cmp
push
sbb
push
push
jae
xchg
shrl
test
pusha
rcl
andb
enter
or
fidivl
inc
add
loopne
out
call
inc
mov
out
xor
ret
push
inc
jge
pop
push
mov
insl
sub
stos
xor
xor
into
xor
sbb
jle
jae
xchg
loop
outsb
jmp
inc
jne
cmp
xchg
fistpl
adc
leave
sbb
imul
inc
add
jle
sbb
scas
mov
les
mov
mov
xor
jo
sub
jmp
das
push
push
jae
cmp
dec
inc
jg
mov
adc
test
xor
push
es
into
movsb
sub
mov
jg
sub
inc
mov
inc
mov
call
jmp
int3
and
jns
scas
shll
add
stos
movb
sbb
daa
push
pop
mov
pop
shrl
inc
cmp
dec
std
fisubl
in
iret
sbb
and
dec
push
jp
ret
add
jge
idivl
adc
loope
mov
fwait
ja
sbb
push
leave
lret
ja
mov
daa
pop
xchg
pop
adc
xchg
andl
xchg
cmp
mov
imul
push
and
jno
aam
xor
sbbl
call
pop
addb
ds
and
ds
frstor
into
or
test
dec
add
push
fwait
andl
xchg
test
rcr
sub
sbb
and
push
jg
cltd
and
aad
jg
add
cmp
mov
nop
cmp
out
mov
pop
mov
push
sbb
push
dec
in
or
xchg
xchg
dec
xchg
nop
dec
in
jnp
ja
pop
jle
push
movsb
fsubs
mov
imul
mov
xorl
out
out
mov
push
scas
pop
or
in
subb
mov
ret
xchg
mov
pop
xlat
jecxz
push
scas
mov
es
jl
pushf
add
dec
popf
fistl
add
add
movntps
out
mov
sbb
pop
rcrl
xchg
mov
adc
testl
sub
xchg
inc
lcall
inc
mov
out
rorl
movsb
xor
jecxz
aad
or
test
mov
push
in
mov
dec
aaa
jg
test
ret
pop
dec
dec
rorb
pop
or
mov
xor
jmp
xchg
inc
xor
sub
mov
xor
nop
cmp
jp
aad
push
xor
sub
dec
daa
aad
sub
xchg
add
cmpsb
pop
add
jl
pcmpgtd
fst
cmp
adc
mov
and
xchg
in
enter
inc
cltd
mov
add
lds
dec
ja
dec
aam
cmp
xchg
adc
inc
jbe
fcomp
call
mov
push
push
test
pop
mov
sbbb
int
fldcw
shll
adc
lahf
xor
inc
push
jo
or
add
jbe
jp
mov
mov
popa
out
das
imul
and
fcoml
movsb
call
je
je
jno
mov
daa
push
mov
out
jns
fucomp
aaa
and
in
insl
ret
xchg
mov
dec
mov
cmp
sahf
jmp
imul
fiadds
push
adc
ja
std
dec
fstps
or
fnstsw
pusha
sub
jmp
fiaddl
xor
mov
dec
or
lock
mov
mov
adcb
cs
mov
into
mov
in
sbb
fwait
mov
rcr
out
xor
out
ret
fiaddl
in
adc
xchg
inc
les
shll
in
sub
outsl
movsb
jb
loop
test
mov
inc
mov
lahf
jns
shufps
ret
add
out
insb
aaa
out
mov
test
sub
xchg
dec
cmp
xchg
out
push
cmp
jl
push
cmp
fwait
pop
rep
mov
ret
lcall
xor
add
vmptrst
and
test
adc
cmp
dec
repz
mov
orb
outsb
sti
mov
leave
sahf
xor
dec
pandn
jo
push
aas
addr16
jo
adc
push
cwtl
cmc
xchg
sub
pop
inc
pop
ret
add
cmpsb
add
xchg
sub
adc
mov
lahf
je
inc
mov
mov
cmp
ja
mov
test
out
adc
pop
movsb
int3
adc
movsb
outsb
add
fiaddl
sbb
jp
push
ds
mov
icebp
push
shll
mov
push
pop
orb
loop
add
mov
mov
mov
es
call
dec
movsl
addr16
dec
testl
cmp
push
rorl
mov
or
xchg
and
or
loop
add
add
mov
outsb
xor
stos
bound
call
inc
lods
add
pop
add
iret
pop
add
loop
pop
ret
inc
or
xor
daa
xor
add
mov
adc
mov
push
add
or
add
xchg
ret
lock
jmp
movsb
fmuls
shlb
lock
and
xchg
outsl
in
iret
test
add
bound
out
push
push
lock
inc
sar
jo
add
fadds
xchg
adc
cmp
popf
add
and
lret
xchg
and
inc
jl
std
pop
sti
sbbl
clc
insb
and
add
sbbb
ret
je
lods
dec
inc
xor
mov
mov
xor
test
or
in
xor
ds
mov
pop
cmp
or
cltd
cmp
das
jle
pop
jg
stos
or
add
and
popa
xchg
adc
jno
adc
cmp
sbb
sbb
fsubp
mov
test
add
aaa
adcb
cltd
or
sbb
rclb
sbb
xchg
adc
ret
or
ds
scas
xchg
push
fcmove
add
and
popa
ret
adc
mov
sub
xor
scas
add
iret
push
int
rolb
sub
int3
jp
or
lea
and
lcall
pop
in
xchg
mov
stos
pusha
mov
sbb
sub
fcoms
cmp
xlat
add
xor
jno
or
cmp
cwtl
push
sbb
xchg
in
push
jo
adc
and
sub
int
xchg
mov
inc
sti
push
mov
ja
flds
das
stc
mov
sbb
shrb
jne
pop
ja
pop
sbb
cmpsl
ja
addb
mov
or
loope
cmp
xlat
loop,pt
ds
and
mov
pop
nop
and
sahf
xlat
and
testl
add
xor
fisubrl
add
sub
xlat
fidivl
pusha
jge
jo
aaa
mov
ds
and
sub
or
ret
add
lods
xchg
adc
into
push
sarb
int3
lret
shrl
out
mov
push
lahf
aas
rcll
ljmp
lock
dec
jp
pusha
shll
in
jo
mov
lret
or
sbb
out
int3
push
pop
sti
adc
rolb
add
mov
pop
pop
pop
and
adc
pop
push
insl
shll
rclb
insb
test
pop
mov
cmp
bound
adc
xor
mov
jbe
jle
pop
mov
inc
add
mov
cs
sti
ja
xor
xchg
sub
mov
lcall
dec
add
cmpsl
sbb
xchg
pop
mov
inc
sub
rcrb
mov
inc
adc
cmp
cmpsl
add
outsb
inc
jp
sub
ja
rorb
pop
mov
pop
cld
out
and
dec
inc
adc
add
mov
push
cmpsb
or
cld
push
pop
lods
sbb
push
inc
pop
test
push
mov
in
pop
jge
stc
sbb
or
loop
cs
mov
fisubrl
pop
add
cmp
adc
rsqrtps
or
sub
cld
repnz
and
mov
call
ret
hlt
jle,pt
loope
insl
out
shll
fistl
outsb
arpl
and
cwtl
dec
inc
mov
add
fildl
jae
mov
and
sub
mov
fimull
jne
push
xor
outsb
or
hlt
xor
cmp
mov
and
pop
sbb
les
push
adcb
jle
fldenv
push
sbb
dec
xchg
mov
adc
popf
inc
jmp
ja
insl
les
push
pop
cmp
loop
jle
shrb
orl
fidivs
scas
adc
ljmp
out
lcall
or
test
pop
mov
inc
add
les
int3
pop
xchg
rcrb
sarl
out
and
int
cwtl
xlat
xchg
mov
xchg
add
or
or
mov
cwtl
and
test
loope
mov
ret
inc
fwait
test
jp
pop
dec
dec
xor
jmp
jo
fbld
mov
hlt
sub
out
mov
jmp
movsl
iret
and
inc
add
mov
pushf
add
mov
addr16
and
push
sbb
out
mull
add
cs
lcall
mov
shlb
mov
insb
mov
mov
shlb
inc
int3
imul
xor
add
and
loope
jae
add
adc
lods
and
rcll
add
and
push
adc
stos
lds
das
lods
or
mov
jb
ljmp
out
and
push
cld
xor
add
hlt
xor
cmpl
into
popf
jle
push
fs
push
mov
les
lahf
mov
sub
add
mov
or
inc
outsl
adc
xlat
adc
pop
inc
sbb
jne
or
rcl
inc
and
jg
call
movsb
aaa
sub
mov
push
les
adc
popf
clc
add
testb
jp
add
mov
xlat
xchg
mov
mov
jmp
lds
jo
lods
cmp
outsl
addr16
pop
fs
outsb
mov
roll
add
jmp
inc
iret
ds
mov
leave
cmp
sbb
lock
sbb
pop
int
mov
xchg
das
mov
mov
fcomi
div
mov
orl
adc
sub
and
mov
push
lcall
popl
xor
sbb
adc
adc
ja
pop
dec
mov
adc
push
push
dec
push
mov
nop
into
lea
sbb
jle
xorb
cmpsl
ss
sbb
pop
and
mov
add
mov
clc
jne
or
jne
pop
mov
int3
cmp
and
pop
xchg
les
sti
mov
mov
add
mov
dec
mov
fsub
push
sub
pusha
out
out
ja
iret
ret
mov
jns
sbb
mulb
shll
pushf
je
xor
out
int3
lcall
jnp
sbb
cwtl
add
call
sbb
out
sbb
test
pusha
nop
sub
fsts
sbb
push
jle
ja
jae
lods
stos
mov
addr16
xchg
test
push
or
fidivrl
mov
in
cli
rolb
aad
addl
mov
aas
flds
lods
pop
iret
pop
add
mov
mov
and
sbb
sub
or
js
and
insb
add
mov
or
fmuls
inc
out
mov
bound
sub
movsb
add
adc
or
sahf
iret
xchg
cmp
cwtl
icebp
xchg
dec
xor
jne
xor
or
loope
mov
mov
mov
adc
adc
iret
lret
arpl
mov
fwait
lahf
or
xchg
mov
xchg
push
sub
inc
into
adc
clc
add
cmpl
pop
popl
push
sbb
rorb
ret
movsb
scas
mov
mov
inc
ret
imul
ret
scas
sub
fnstenv
loop
mov
adc
mov
lret
and
mov
das
dec
rorb
and
cmpsb
call
frstor
cmp
ds
cs
adc
inc
dec
or
out
cwtl
or
std
jle
xor
fcmovnb
ljmp
mov
push
sub
or
insl
cwtl
test
iret
sub
insl
outsl
loop
push
loopne
arpl
push
dec
outsl
mov
or
bound
or
pop
pop
inc
fs
pop
aaa
push
sbb
js
imul
pop
push
test
cwtl
cmc
pop
push
mov
mov
or
adc
in
mov
jecxz
pushf
je
add
je
cmp
or
fldt
fs
cmpsl
icebp
sar
test
int3
ret
add
sbb
sbb
push
int
sbb
and
adc
mov
push
cwtl
cwtl
cmp
lods
cwtl
sbb
addr16
sub
adc
add
lcall
jp,pn
cmp
fadds
cmc
mov
dec
pop
xchg
lods
inc
mov
adc
sbb
in
mov
decb
push
loope
adc
lods
clc
xorb
dec
lods
xor
mov
and
push
addl
mov
xchg
push
jmp
cmpsl
dec
lcall
mov
sub
cmovne
add
and
jl
xchg
jae
dec
push
cmp
and
push
mov
mov
push
lds
xor
add
sbb
mov
out
stos
cmpsl
and
push
insl
icebp
jecxz
pop
cmpsl
and
in
stos
ss
inc
sub
mov
push
cmp
into
into
loopne
inc
pop
lea
mov
dec
cmpb
movsb
jno
and
add
or
adc
or
dec
xor
fiadds
dec
jle
xor
std
sub
cltd
mov
leave
cmp
dec
bswap
jg
repnz
xor
xor
psubw
cli
xor
adc
pop
daa
imul
bound
dec
mov
mov
dec
mov
or
adc
adc
nop
bound
pop
sbb
xchg
shrb
popf
and
push
stos
add
int
rcll
xor
mov
subl
inc
push
xor
and
sub
cs
aad
mov
cmp
insb
movsb
imul
aam
sbb
test
or
xchg
pop
test
dec
mov
sbb
pop
and
ljmp
cmpsl
dec
or
popa
push
pushf
push
insb
addr16
mov
xor
pop
jnp
ljmp
fwait
adc
les
test
add
xchg
xchg
jle
enter
mov
lods
test
xchg
add
cmpsb
pop
or
sahf
lods
adc
and
stc
pushf
mov
sub
and
xor
into
or
stc
mov
sbb
fcompl
fildl
cmp
inc
call
adc
jp
outsb
xor
or
mov
add
lcall
hlt
fldcw
pop
sar
rolb
add
aad
and
mov
push
shll
inc
sti
or
adc
xor
loopne
lods
jle
mov
push
jecxz
sbb
push
aam
dec
int3
out
xchg
xchg
xor
pop
pop
push
arpl
hlt
test
sbb
pop
adc
dec
fld
mov
or
cmp
sub
pop
sbb
mov
push
mov
loopne
xor
out
xchg
or
inc
xchg
lods
fs
hlt
pushf
outsl
cwtl
mov
mov
pushf
cmp
adc
pop
mov
lods
imul
cmpsl
adc
add
inc
add
pop
sub
xchg
roll
adc
sub
adc
pop
mov
add
pop
mov
pushf
cmp
dec
imul
pop
xor
lods
or
into
add
push
aas
dec
or
or
divb
and
sbb
mov
push
in
push
jb
pushf
push
test
arpl
add
andb
sbbb
ja
jb
data16
push
mov
inc
adc
ja
lcall
mov
dec
pusha
dec
test
push
fdivp
lea
mov
iret
lds
sahf
orb
lret
inc
lods
mov
mov
pop
add
bound
shlb
lcall
dec
mov
mov
in
pop
mov
scas
xchg
ds
mov
jl
iret
push
mov
repz
sbbb
lret
xor
mov
mov
xchg
push
loop
test
dec
or
push
and
inc
push
pop
pop
or
scas
rorl
xchg
lds
mov
les
mov
xor
sbb
ret
mov
popf
or
inc
mov
xchg
jnp
sub
cld
mov
scas
dec
jg
adc
in
scas
xor
shlb
rolb
xor
xor
lahf
addl
inc
shll
push
jnp
add
flds
cwtl
ljmp
xchg
into
add
and
xchg
aam
pop
adc
or
test
mov
lods
sbb
pop
xor
lahf
sub
mov
mov
bound
pop
cmp
sbb
jle
xor
and
pusha
jle
mov
rolb
rorb
jnp
pop
es
xor
pusha
lds
jnp
ret
or
dec
andb
les
add
push
mov
pop
sub
shl
add
and
outsb
pop
jo
push
mov
push
xor
push
lock
and
jg
into
mov
mov
inc
mov
movsb
adcb
sub
xchg
fsts
inc
pop
sub
or
adc
adcl
add
cmp
mov
push
add
push
xchg
add
ret
sti
test
jp
ljmp
pop
inc
push
lods
mov
sbb
inc
jb
loopne
mov
push
cmp
dec
cltd
mov
arpl
fstl
sarl
lods
lods
adc
lods
adc
rcrb
push
pop
rclb
fildl
fadds
and
dec
adc
jecxz
push
push
mov
sbbb
lcall
add
inc
inc
mov
incb
xor
iret
fisubl
movsb
mov
xchg
dec
add
pop
sub
xor
mov
cmp
xor
inc
mov
insb
xchg
stos
fs
cmp
push
cltd
shrb
inc
lods
aas
sbb
imul
xlat
xchg
fsubs
pop
pop
aaa
iret
xchg
fwait
orb
daa
ljmp
cmc
movsb
lret
or
inc
mov
push
jne
fldenv
xchg
or
mov
mov
das
push
cwtl
inc
lds
arpl
add
cmp
outsl
xchg
nop
test
insb
mov
aas
cmp
pop
and
outsl
nop
call
test
in
xor
jecxz
data16
jo
inc
push
dec
sbb
mov
clc
out
jo
test
xor
loop
add
mov
dec
loop
mov
pop
jo
lret
enter
daa
movsl
or
jbe
pusha
mov
clc
es
lret
and
inc
subb
add
loope
add
sar
nop
sahf
and
mov
sub
mov
sahf
inc
sub
adc
inc
std
pop
arpl
dec
or
data16
sbb
inc
enter
xchg
pusha
hlt
int
xchg
test
mov
or
clc
xchg
inc
daa
aas
inc
mov
and
sbb
mov
cmpsl
out
xchg
xor
test
push
test
popf
xor
mov
push
hlt
in
mov
inc
mov
loop
jp
and
dec
test
insl
or
movsb
cwtl
sbb
sub
sbb
out
fstpl
or
shll
xchg
xor
xchg
inc
in
adc
push
and
and
mov
push
sbb
nop
mov
pop
mov
and
or
inc
test
hlt
lcall
mov
ljmp
xchg
cmpsb
pop
adc
mov
dec
enter
movl
sbb
and
sub
and
mov
sahf
lcall
inc
leave
xchg
xchg
fcoml
cli
add
cmp
jbe
mov
xchg
sub
or
mov
inc
aad
push
sub
int3
cmpsl
jp
add
cmp
pop
add
and
nop
push
cmp
pop
je
pop
xor
and
push
addr16
add
jb
aad
inc
sbb
mov
push
nop
push
daa
je
jge
jb
and
mov
xchg
or
inc
add
cmp
arpl
idiv
or
add
stos
and
call
xor
pop
popf
loope
shll
jl
xor
jne
pop
loop
push
js
mov
or
jp
jmp
inc
add
mov
cmp
xchg
movsl
xor
xor
outsb
xchg
jns
sub
mov
dec
fildl
mull
xor
cmpsl
and
adc
jmp
lods
adc
mov
test
sar
mov
iret
movsb
pop
mov
mov
daa
rcll
dec
sahf
sbb
mov
and
add
mov
or
leave
adc
push
lods
pop
sar
xchg
loop
rolb
ljmp
aam
add
mov
repnz
je
dec
mov
push
mov
xchg
xor
push
jno
cmpsl
test
inc
push
divl
pop
mov
xchg
sub
jl
cwtl
adc
mov
adc
or
mov
sbb
or
aas
ficomps
out
xor
xchg
mov
bnd
push
sbb
or
or
je
or
mov
add
cmpsl
nop
add
mov
addl
or
fwait
mov
add
xchg
aad
movsb
stos
sub
jb
in
fistps
sbb
or
aad
add
enter
cwtl
sub
and
cs
mov
xchg
or
add
lock
sbb
or
dec
andl
das
mov
xchg
mov
loopne
ja
movsb
and
xor
or
and
nop
pop
push
jne
push
testl
and
and
mov
loope
dec
popa
push
loopne
mov
inc
mov
das
int
adcb
iret
lcall
pop
les
and
je
mov
pusha
daa
push
stos
cmp
rcrl
es
js
sbb
push
push
adc
add
popf
add
mov
add
js
or
insl
cmp
or
mov
push
mov
mov
faddp
and
xchg
xchg
iret
cwtl
clc
je
cmc
cs
adc
or
addr16
adc
mov
mov
inc
mov
sahf
or
pop
push
adc
inc
adc
and
clc
sub
movd
stos
xchg
mov
int
push
jg
cwtl
xchg
add
icebp
add
sar
push
jno
ss
sub
aaa
cs
sub
xchg
gs
sub
push
mov
andb
fwait
mov
out
in
pop
dec
jne
inc
jge
ds
lods
push
daa
lahf
adc
pop
xor
loop
add
push
jb
cmp
jo
pop
inc
ret
lods
add
and
jl
cmp
pop
mov
lds
pop
jno
jnp
test
and
add
nop
mov
push
dec
add
add
mov
jo
lods
ret
fbstp
adc
cwtl
xor
mov
fimull
xor
inc
xor
adc
xchg
jne
sbb
mull
push
bound
adc
inc
popa
mov
dec
jl
idiv
scas
mov
stos
subb
inc
movsb
cltd
scas
xor
gs
sub
es
pop
xchg
cmc
lods
mov
xchg
pop
les
jp
pop
jbe
add
dec
xchg
inc
sbbb
sar
add
out
daa
idiv
inc
in
adc
push
cld
sub
orb
xor
inc
scas
push
cmp
xor
nop
mov
pop
xor
js
stos
add
cli
ficoms
sarb
scas
mov
jmp
inc
int3
add
pop
cltd
insl
jmp
or
add
add
test
lret
les
rorl
mov
adc
lds
add
adcb
jo
inc
test
fdivrs
sbb
inc
sti
add
sbb
fsubl
enter
add
loop
push
js
mov
pop
dec
push
pop
jg
lcall
push
or
add
int3
lods
add
psubb
loopne
mov
xor
notl
les
mov
add
sub
jae
mov
mov
les
shrl
aam
daa
orl
mov
ret
lcall
sarb
lret
orb
test
jb
pop
lock
pop
js
mov
mov
sbb
push
dec
aas
out
lock
ja
inc
mov
sahf
fbld
and
dec
mov
cmp
mov
xchg
add
xor
push
pop
mov
cmp
xlat
je
icebp
jle
hlt
dec
pop
adc
inc
sbb
fsubl
mov
inc
into
cwtl
lock
dec
insb
test
push
cmp
sub
inc
rcrb
mov
add
mov
jle
mov
into
shlb
popa
pop
push
stos
ret
dec
sub
push
loope
xlat
mov
sub
mov
push
lds
and
sbb
int3
or
lock
cmp
and
add
or
inc
dec
scas
adc
jo
mov
mov
add
inc
mov
ds
fbstp
jg
es
add
add
sub
out
loopne
sbbb
xchg
or
rolb
cwtl
mov
push
push
or
sbb
adc
push
and
sbbb
lret
mov
add
loope
out
sub
movsb
push
xlat
add
aas
push
jle
sub
pop
scas
outsb
pop
xor
iret
ja
xchg
jecxz
dec
inc
pusha
pop
jle
cmp
cmp
or
stc
add
fldt
xchg
dec
inc
push
je
add
movsl
jecxz
adcw
dec
fcmovnb
lret
jne
add
push
add
pop
in
dec
push
aad
push
faddl
inc
lods
dec
mov
fisttpll
iret
add
adc
test
adc
lods
cmpsl
test
int3
lds
jo
mov
fldcw
cwtl
lods
pushf
enter
arpl
popl
mov
push
pop
xor
jno
mov
add
hlt
iret
in
les
orb
test
leave
sub
enter
mov
jae
mov
inc
scas
enter
push
pop
pop
and
movsb
fucompp
les
call
jno
sbb
gs
lcall
lea
test
aam
sub
inc
jo
jns
mov
mov
fdivrl
and
mov
cs
push
adc
popa
adc
sbb
add
push
daa
test
in
icebp
and
push
pop
out
xor
mov
sbb
lcall
xor
jecxz
rcr
pop
ret
mov
or
and
jecxz
out
jl
and
sub
add
add
and
mov
jl
inc
sbb
mov
es
push
push
or
mov
aaa
push
mov
jae
rorl
sub
ljmp
notb
cmp
subb
jp
sbb
popf
xor
add
mov
pushl
jmp
dec
popl
fwait
pushf
insb
add
add
fisttps
enter
test
sbb
dec
and
mov
push
jo
push
mov
jle
xor
mov
movsl
scas
test
fsubp
lds
sbb
sbb
pop
adc
js
dec
divl
inc
stos
and
movsl
loopw
call
dec
dec
add
ret
andb
mov
xor
push
adc
push
mov
push
jb
sbb
or
addb
pushf
jns
and
jge
or
xlat
xchg
rcll
mov
and
test
sbb
ret
xchg
int
mov
push
sub
dec
inc
fisttps
cwtl
testb
imul
cmp
xor
cmp
lods
adc
adc
mov
lods
call
mov
pusha
enter
cmp
sqrtps
and
adc
push
xchg
es
inc
andb
mov
inc
cmp
das
insb
mov
inc
pop
sub
xchg
and
call
lock
xor
lret
aas
add
arpl
mov
pop
sti
sti
shrl
mov
lret
sub
cld
and
mov
das
and
dec
mov
mov
insb
fwait
orb
scas
push
xchg
jno
pop
and
xor
xor
pop
dec
daa
das
and
pop
dec
js
or
push
pop
inc
bound
mov
xorb
lock
push
cwtl
add
or
push
cld
int3
inc
out
add
dec
sub
inc
sarl
sub
inc
outsb
lock
push
addl
sbb
or
aam
inc
loopne
fcmovnbe
scas
adc
mov
mov
mov
insb
adcb
stos
jo
push
sbb
xlat
sbb
dec
mov
push
test
andb
sbb
pusha
mul
movsl
test
roll
push
je
cli
inc
int
sub
sti
add
mov
mov
xor
cwtl
aad
inc
adc
test
inc
enter
mov
gs
rcll
mov
lods
sahf
mov
cmp
or
add
addl
add
cmp
hlt
inc
adc
jae
into
xchg
call
pop
add
fwait
inc
sarb
popf
cwtl
in
cld
pushf
push
cwtl
xlat
or
mov
andl
xor
push
cmc
add
fldcw
push
push
pop
ljmp
mov
cs
in
dec
hlt
cwtl
call
mov
push
mov
add
aad
outsb
adc
sbb
xor
gs
in
mov
pop
imul
jl
pop
fnsave
rol
dec
stos
aaa
add
fbld
int3
and
popa
xchg
mov
rcrb
pop
add
adc
and
or
cmp
mov
push
testb
stos
mov
popa
lods
push
dec
icebp
push
lds
iret
cmp
push
in
inc
jae
sbbb
insl
xor
jle
cld
jle
sbb
fdivrl
add
mov
push
xchg
mov
shll
aas
push
push
in
and
mov
xchg
adc
lock
cmp
sub
adc
adc
adc
push
in
inc
mov
pop
cmp
fnop
adc
and
and
stc
js
cmp
fmulp
ds
jle
aam
mov
add
mov
les
cltd
jle
rorl
addr16
and
mov
movaps
mov
pop
adc
mov
jne
iret
sub
jle
inc
stos
jl
fisubs
jbe
mov
jg
push
nop
or
add
push
inc
aad
aam
and
push
adc
cmp
jo,pt
pop
add
test
cmp
iret
mov
inc
push
push
and
push
or
pop
sub
iret
add
and
jne
xor
test
testl
add
cmpsl
adc
out
fdivs
add
adc
inc
movsb
out
xor
inc
insl
and
pop
mov
push
cmpsl
enter
call
lahf
test
out
push
pop
push
xor
push
cltd
bound
imul
push
xlat
xchg
and
inc
mov
mov
es
push
rcrb
loope
inc
adc
push
cwtl
subb
lret
xchg
sub
scas
insl
or
or
mov
sbb
jno
leave
in
scas
jmp
inc
jmp
pusha
cmc
or
pop
lds
pop
jo
outsl
dec
add
add
push
ds
stc
push
loop
stos
dec
int
arpl
bswap
jmp
ljmp
push
add
dec
cs
insl
enter
out
mov
sub
push
adc
cwtl
jne
adc
jle
pop
outsb
jnp
stos
jne
pop
and
loopne
aad
sbb
cmc
jle
and
push
sub
lret
xcrypt-ecb
cmpsl
dec
int
shlb
in
sub
int3
xor
jle
xor
std
rclb
and
cmc
push
out
xor
stos
add
andb
idivl
pop
xchg
push
test
or
daa
movzwl
jo
sahf
push
sub
lcall
xchg
pop
movsl
mov
push
add
jp
adc
popf
sub
and
or
adc
incb
aaa
add
stos
ficomps
push
mov
sbb
dec
sbb
mul
pop
and
insl
jmp
cs
cmp
jne
sub
sub
lock
jo
adc
es
pop
fcomps
fldt
out
push
xchg
ficompl
addb
adc
mov
or
mov
jno
xor
icebp
andb
inc
xlat
iret
jg
call
pusha
gs
sbb
ljmp
stos
add
dec
es
sbb
popf
mov
sub
repz
test
xchg
cmpsb
jb
push
and
sbb
push
shll
mov
das
fadds
cmc
pop
mov
xorb
jge
pop
imul
mov
jge
jo
mov
add
push
xor
adc
pop
loopne
and
mov
xchg
push
jno
or
and
lods
adc
inc
and
mov
jge
movb
cwtl
sub
or
test
icebp
je
out
sub
rep
dec
push
out
push
xor
cmc
icebp
test
movsb
aas
inc
cs
stos
mov
aaa
jp
sub
test
scas
jne
cwtl
add
mov
mov
inc
fiaddl
movd
insb
in
ds
in
xor
mov
xchg
inc
push
imul
mov
mov
push
mov
mov
pmuludq
sub
insl
mov
mov
in
notl
pop
jns
jbe
ret
pop
mov
inc
ret
adc
inc
fmul
aaa
mov
icebp
aaa
xchg
lcall
je
jecxz
mov
inc
push
test
out
and
daa
sub
lcall
jp
stos
xchg
mov
and
sbb
xchg
dec
and
test
dec
add
push
mov
and
sbb
call
or
xchg
push
ds
scas
int3
sub
cwtl
sbb
pop
out
adc
lret
cmp
sti
jle
mov
add
lock
add
mov
inc
pop
cmpsb
adc
pusha
lahf
sbb
or
popa
mov
lcall
add
dec
cltd
lret
pushf
push
or
repz
movsb
js
insl
push
mov
adcl
mov
and
dec
inc
pop
movb
dec
adc
and
sbb
and
andl
rcrl
and
jbe
mov
mov
fisubl
jb
shrl
leave
fadds
fdivp
mov
fidivs
mov
jmp
xchg
mov
cmc
and
xchg
and
and
and
inc
test
push
pop
popf
jnp
xchg
xchg
lds
out
jo
jne
push
int
jge
xchg
pushf
lock
sbb
mov
ret
mov
and
adc
mov
jle
push
pop
mov
push
adc
fldt
mov
jne
xor
gs
cmp
mov
push
call
cmpsl
jo
inc
adc
and
imul
rolb
daa
aas
sbb
push
mov
and
adc
hlt
push
rolb
lret
into
add
subb
add
das
xor
fcoms
and
hlt
push
sbb
cmp
adc
fisubl
push
inc
jmp
or
mov
xorb
add
mov
mov
and
adc
daa
xor
add
nop
adc
mov
jnp
push
cmpsb
mov
lcall
pop
data16
jnp
push
mov
mov
aaa
mov
xchg
add
cmp
jne
mov
pop
mov
sbbb
push
push
ret
js
mov
xchg
addl
and
mov
test
aam
or
js
pop
daa
into
outsb
leave
cmp
ficoml
sub
fwait
cmp
mov
mov
aad
cmpsb
fwait
pop
pushf
or
insl
jb
sbbb
and
mov
add
xor
popa
popf
and
orb
jne
cmpb
mov
dec
xor
mov
mov
lcall
lds
mov
mov
inc
lahf
aam
add
or
mov
or
jle
push
push
mov
inc
sahf
cmp
and
data16
js
mov
and
int
jbe
sbb
bsf
stc
sahf
xchg
adc
enter
cmpsb
xor
adc
push
outsb
dec
gs
adc
push
and
mov
push
std
push
jno
les
inc
inc
sub
inc
or
dec
adc
scas
and
mov
add
add
ret
pop
fwait
test
inc
mov
dec
fs
push
pop
int
xchg
push
icebp
mov
icebp
dec
rorb
push
xchg
sbb
popa
in
jmp
inc
and
add
add
enter
sbb
mov
lock
mov
pop
in
mov
test
jp
bound
addb
sub
scas
lcall
scas
xchg
push
cmp
fwait
adc
or
mov
out
iret
push
nop
and
sub
lret
ja
arpl
push
sbb
xor
xchg
sub
mov
xor
push
sarb
xchg
or
les
data16
imul
add
ja
insb
out
out
lods
das
jns
jbe
test
jecxz
jecxz
mov
sbb
sbb
int
les
push
add
push
cwtl
insl
dec
jmp
mov
inc
das
push
xlat
fisubs
or
add
sbbb
mov
fisttpl
add
out
idivl
insb
mov
das
mov
lahf
jl
push
out
mov
dec
add
ljmp
mov
or
pop
dec
mov
rorl
pop
xor
test
sbb
pushf
dec
and
pop
sub
mov
cltd
daa
aas
jl
pop
sbb
popf
std
add
add
mov
rcll
aad
push
lret
jmp
mov
add
add
mov
lret
call
sub
out
inc
push
cmpl
add
movsb
pop
sub
cmpl
pop
imul
sub
pop
or
push
and
andb
rcl
lea
sub
ret
xor
loope
pop
scas
addr16
int3
into
push
call
pop
jo
ficoms
or
and
mov
ret
es
push
fdivs
mov
mov
out
pop
adc
xor
jno
leave
xor
jo
dec
sub
pop
lds
sub
ja
test
mov
push
mov
cs
and
and
jnp
arpl
icebp
addr16
jmp
jne
inc
cmp
pusha
sar
pop
push
push
mov
push
out
lods
sub
mov
hlt
fwait
sub
add
xchg
shrd
mov
xor
aaa
pop
cmp
hlt
cmc
sub
sbb
push
lods
xchg
pop
jo
fsubl
mov
shl
mov
jno
outsb
daa
adc
jmp
pop
sub
mov
ds
mov
push
sub
shr
mov
or
sub
push
lods
jae
mov
insl
pop
sub
push
data16
gs
cmp
jb
in
insl
aas
fldl
test
jne
add
sub
or
int
movsl
inc
pop
and
mov
push
shll
pop
sub
and
jo
jo
sub
outsb
arpl
mov
sbb
sbb
or
and
mov
insl
push
adc
cmp
mov
cmp
sbb
int3
popf
push
xchg
add
movsb
add
pop
shlb
stos
iret
stos
jp
call
testl
sub
add
das
dec
and
scas
movsb
mov
xabort
xor
pop
outsl
outsb
jmp
call
sub
insl
fdivl
jp
adc
pop
or
stos
jbe
addr16
sub
push
adc
cmp
sbb
pop
xchg
sbb
scas
jo
push
add
push
pop
or
add
scas
jge
and
insl
xor
push
jne
pop
push
pop
add
pop
xlat
mov
int3
pop
repz
mov
push
sbb
push
scas
push
and
je
mov
cmp
xor
stc
xor
push
push
pop
popl
push
pop
xor
fs
xor
xor
fildl
fstpl
xchg
rorl
imul
cmp
jb
mov
frstor
faddl
mov
rcrb
sbb
add
xchg
mov
outsb
lahf
pop
inc
dec
xor
sub
mov
push
mov
popf
clc
popa
and
push
cltd
dec
aam
xor
cmp
insb
je
push
movsb
popa
add
cmpl
mov
shrd
add
inc
pop
push
cli
mov
cld
pop
jnp
mov
dec
dec
ds
dec
aaa
xor
pop
dec
test
outsl
jl
sub
insl
xchg
inc
sub
fsub
gs
mov
scas
or
sahf
xor
pop
jmp
bound
imul
out
fldt
or
pop
sbb
add
adc
out
pop
mov
jle
push
and
sbb
fs
in
arpl
scas
jnp
repz
add
data16
out
pop
adc
das
sbb
pop
xor
ret
mov
push
or
pop
adc
cmp
inc
cmp
jne
mov
cltd
ret
js
jns
pop
adc
xorb
adc
je
out
and
iret
lods
pop
xor
xor
rclb
fcomip
mov
bound
lds
les
ret
mov
cmp
gs
cld
adc
mov
les
movsb
pop
mov
addr16
dec
adc
xlat
pop
jns
dec
cmp
add
mov
mov
jnp
inc
orb
ss
xor
fs
mov
pushf
pushf
adc
jbe
push
mov
out
sbb
dec
xchg
pop
pop
filds
pop
sbb
cs
fmull
jae
inc
adc
xchg
mov
push
in
jg
pusha
out
sub
scas
push
or
stos
sbb
rclb
cmp
cmp
popa
push
std
cs
pop
data16
sahf
inc
add
add
sub
in
pusha
cmpsl
mov
add
data16
add
insl
cwtl
xor
stos
mov
shl
inc
aam
sbb
xlat
dec
dec
add
scas
pop
cwtl
movsl
aam
js
sbb
std
cmp
push
pop
sub
and
inc
cli
mov
stos
and
add
and
mov
dec
dec
xchg
jecxz
jae
xchg
lods
icebp
lds
sbb
lcall
je
cmp
cmpl
aam
jmp
out
cmp
insb
or
insl
inc
aaa
xchg
pop
sbb
into
nop
popf
aas
fdivrs
lahf
lods
in
loopne
add
cmp
hlt
es
push
mov
orl
das
shlb
mov
xor
imul
loopne
mov
xchg
subl
inc
lods
add
rclb
pusha
jp
lea
subl
and
aaa
mov
ss
jno
les
shl
outsl
jmp
pop
sbb
ret
sbb
cwtl
fisttpll
notl
and
xchg
je
xor
cmp
out
add
sub
jns
pushf
rorl
push
pop
scas
aad
cmp
and
inc
lea
iret
lock
cmp
sbb
jns
jbe
xor
push
xchg
ss
je
pop
addr16
in
mov
sbb
xchg
mov
push
sbb
adc
mov
and
outsb
or
add
jl
out
mov
subb
adc
dec
jne
ja
and
call
rolb
in
push
sub
je
jnp
push
cs
in
aaa
lea
mov
icebp
push
pop
cmp
popf
xorl
ror
ret
ss
ret
push
inc
pushf
aam
mov
scas
push
mov
push
lcall
mov
jo
jo
pop
test
pop
loopne
push
insb
xchg
int3
aad
ret
rorb
push
scas
jns
add
rolb
jp
sub
mov
push
add
cmp
rorl
scas
adc
and
pop
ss
push
stos
lods
insl
cpuid
insl
xchg
and
mulb
dec
notb
and
mov
xchg
lock
dec
lret
fimuls
mov
inc
stos
shrb
or
ljmp
stos
pop
adc
inc
xchg
cs
adc
insl
es
push
pop
ret
pop
loope
rcrl
add
into
jno
cmp
push
or
mov
stos
dec
sbb
pop
or
adc
and
sahf
pop
or
sub
jl
sbb
sub
jb
dec
adc
js
in
sub
inc
mov
xchg
cli
movsb
pushf
je
out
push
test
sub
dec
cmp
addb
and
sub
adc
jp
es
push
incb
pusha
mov
iret
es
dec
ret
adc
call
scas
in
mov
mov
movsl
lcall
movsl
sbb
lods
inc
mov
or
adc
enter
jmp
xor
xchg
add
addb
sub
es
out
les
pop
mov
mov
sub
push
push
rclb
pop
xor
test
sbbb
sbb
ret
jnp
divl
add
in
xlat
int3
sbb
mov
and
pop
out
push
jbe
push
or
sub
and
add
mov
leave
cmp
push
pop
inc
xor
or
jno
mov
test
push
jg
inc
xor
call
bound
add
sbb
aas
jb
pushf
pop
and
mov
out
push
mov
mov
icebp
inc
divl
jnp
fcoms
xchg
mov
adc
sbb
aas
add
mov
rcll
lret
cld
popa
das
js
mov
cmp
insb
insb
and
inc
loop
xchg
rcll
mov
sub
pop
mov
pop
jno
orl
ss
pop
add
and
add
mov
sbb
enter
add
ret
xor
inc
or
or
mov
cmp
pop
jns
dec
xchg
iret
add
pop
lahf
jo
mov
pop
je
cld
inc
shlb
test
shrb
inc
cmp
add
and
shll
jmp
sub
pop
xor
inc
fiaddl
and
pop
cmp
movsb
or
mov
in
int3
inc
loopne
pop
iret
xchg
or
add
and
pusha
fcomp
or
or
dec
das
sahf
jb
subb
dec
mov
mov
cmp
or
rol
xchg
daa
cmpsb
push
sbb
dec
dec
push
jne
loopne
mov
inc
jb
movswl
outsl
xor
xchg
fstps
add
or
pusha
lret
push
jbe
or
je
test
push
fs
into
std
loopne
xchg
jae
cmp
adc
or
cmpsl
adc
jg
in
push
pop
adc
push
in
data16
jl
arpl
inc
out
jecxz
mov
dec
lret
or
or
pop
mov
xor
mov
jle
out
adc
jo
xor
lds
outsl
adc
shlb
mov
fisubrs
add
xor
orl
add
test
jno
push
lds
aad
mov
mov
push
push
add
add
in
or
lods
adc
cmp
xor
inc
out
xlat
xor
xchg
xor
mov
dec
cmp
sti
jbe
iret
stos
dec
and
mov
out
shl
mov
add
dec
addb
fwait
aas
fsubs
xor
aaa
pop
icebp
shlb
pop
sti
movsbl
into
mov
out
dec
lret
mov
mull
test
int3
call
lods
or
mov
aam
mov
rcll
xchg
xor
mov
fcmovu
clc
test
cmp
adc
fsubrl
inc
shr
je
mov
mov
ljmp
pop
inc
pop
cli
adc
popa
mov
add
scas
cmp
mov
inc
ficoms
push
cs
lock
arpl
testl
or
pop
jbe
jmp
jmp
iret
clc
orb
xor
mov
jae
ja
sub
fcoms
iret
lret
fisttpl
outsb
pop
pop
sub
xor
adc
inc
sub
imul
pop
stos
mov
jae
push
pop
or
adc
sub
push
adc
loopne
fcmovb
push
and
les
nop
add
xchg
and
or
in
push
inc
add
mov
imul
mov
sub
inc
sbb
sub
jno
pop
push
in
mov
xchg
or
arpl
data16
fdivl
xchg
mov
test
xchg
mov
inc
cltd
pop
cwtl
sub
pop
testb
leave
arpl
push
sub
mov
addr16
sub
icebp
cmpl
pusha
daa
fmuls
jmp
pop
je
lock
dec
test
inc
or
daa
jo
adcl
push
and
pop
imul
iret
sub
insl
mov
mov
ja
sbb
mov
pushl
sbb
int
popa
not
push
stos
movsl
dec
aam
pop
orl
test
cmc
outsl
xchg
iret
cmp
lea
mov
mov
sarb
inc
push
jge
std
addb
mov
ja
mov
push
xor
push
lods
in
push
and
fwait
adc
test
outsl
xchg
xchg
add
iret
out
sbb
xchg
jmp
bound
test
cmpsb
into
add
jge
pop
sti
jno
push
mov
cmp
cmpsb
push
lods
xchg
inc
push
andl
sub
ret
sub
ret
jne
push
es
push
sub
jge
sub
mov
mov
and
or
or
lea
cmp
jne
add
xchg
add
daa
xchg
pusha
sbb
add
ss
jnp
xor
scas
add
push
cs
flds
shrb
and
or
add
push
inc
scas
lea
int3
stos
lret
mov
push
aaa
or
fcomi
lea
mov
jle
data16
sub
cmpsl
daa
sbb
into
mov
sbb
popa
xchg
and
sub
sbb
fwait
pop
aad
and
insb
sbb
jo
push
stc
push
divl
and
ret
das
movsb
add
push
or
add
sti
sbb
adc
dec
inc
js
xor
mov
loopne
fwait
jno
movsb
ljmp
rorb
push
lock
cltd
repnz
mov
lcall
mov
mov
dec
arpl
int
pop
jno
bound
lds
std
jecxz
test
arpl
inc
sbb
add
sbb
add
leave
fdivl
mov
sbb
mov
push
in
add
rcll
push
mov
sub
pop
ja
invlpg
dec
lea
andb
cmp
stos
or
aas
pop
mov
insb
or
scas
mov
xchg
arpl
and
or
aam
sbb
xchg
cmp
jle
ljmp
xor
fisttpl
shrb
or
ja
imul
jmp
inc
les
icebp
cwtl
adc
aad
xor
iret
jmp
cli
mov
push
jb
jnp
xor
push
loopne
jne
les
push
stc
lods
outsl
sbb
sub
pop
pop
adcl
push
cltd
mov
je
adc
xor
cmp
and
inc
adc
inc
lret
lea
jno
fdiv
sub
stos
sub
loope
and
sub
mov
arpl
jle
pop
mov
fimull
outsb
mov
je
or
fcoml
lret
mov
push
ds
jmp
xchg
stc
nop
mov
xor
adc
cmc
xchg
mov
fdivrl
mov
rolb
popf
pop
xchg
push
jae
mov
xor
or
adc
jnp
shl
adc
cli
xlat
shrl
cmpsb
rcrb
push
out
iret
push
das
mov
dec
lock
sub
pop
mov
rcrb
xlat
and
bound
div
out
imul
mov
out
and
insl
push
adc
bound
sub
les
popa
push
pusha
rolb
jp
xor
mov
sub
sub
cmpsl
pusha
fisttps
mov
mov
pop
dec
and
js
lods
insb
adc
sti
add
dec
add
sub
xchg
push
fmuls
out
mov
je
add
pop
mov
inc
sub
jns
push
jb
inc
loopne
push
mov
mov
adc
add
rorl
dec
and
cwtl
rcll
push
jae
adc
and
lods
jbe
or
sbb
shll
add
xor
sub
jle
and
mov
outsl
add
popa
sarb
mov
mov
inc
mov
jno
jmp
and
jge
and
iret
cmp
add
add
lods
dec
jne
dec
ficompl
sbb
xchg
shr
in
push
sti
sbb
mov
fnstsw
and
fwait
jle
jnp
cmpb
jo
insb
idivb
andb
sbbb
int
or
lea
mov
lcall
jecxz
sub
push
push
and
shll
enter
sub
in
sbbb
enter
addr16
xor
add
jns
inc
sbb
rcr
xor
adcl
mov
test
lock
or
cmpsb
push
lret
mov
jno
jb
inc
insb
cmpsb
xchg
sbb
test
sub
orl
shll
add
adc
pop
movsb
xorl
iret
lret
movsb
or
sbb
mov
inc
push
lahf
inc
cmp
loop
push
sub
dec
add
iret
inc
inc
mov
cs
xchg
test
jge
iret
dec
pop
or
or
les
sbb
iret
adc
sub
sbb
xlat
jns
call
sbb
mov
jae
add
lret
add
add
mov
add
mov
add
adc
add
bound
lahf
push
int3
inc
shlb
dec
sub
repnz
jo
rolb
les
jne
insl
adc
push
add
insl
xor
pop
cmp
mov
movsb
and
add
xchg
jo
inc
subb
push
sub
rorl
sbb
sub
push
roll
das
jns
inc
je
push
or
jge
and
ljmp
inc
movsb
loopne
sub
push
loope
mov
pop
xor
sub
cmp
or
pushf
movsl
shl
mov
test
xchg
mov
cmp
out
push
aad
stc
shlw
dec
inc
sbb
xor
adc
add
xlat
scas
push
or
js
daa
repz
xlat
pusha
xor
xchg
inc
pop
push
add
test
pop
das
sub
cmp
push
jecxz
add
xchg
ljmp
mov
pusha
lock
add
add
test
dec
sbb
scas
pop
cmp
scas
cmpsl
sub
adc
inc
cmp
pop
jle
hlt
das
jb
pop
pop
in
js
sarl
orb
and
into
cmpsb
push
fbld
cld
test
bound
pop
ss
insl
ret
sbb
ss
cmp
jp
pop
adc
sub
fmull
ret
sub
push
es
adc
or
mov
cmp
adc
mov
out
pushf
and
addr16
jno
jbe
pop
jnp
push
arpl
fists
ret
adc
sbb
push
dec
andl
rcl
jbe
inc
addl
cmpsl
or
mov
je
mov
xor
popa
adc
jmp
in
es
pop
les
push
inc
insb
add
sub
sbb
lods
jl
jmp
cmp
in
cmp
mov
push
pop
dec
rcrl
in
xchg
jno
ret
cmp
adc
or
mov
sub
js
jle
sti
adc
out
lcall
jo
adc
into
das
pop
aam
rclb
inc
add
lret
xor
sub
popa
imul
push
pop
and
cmp
xor
lock
push
adc
ficomps
dec
enter
mov
stos
jg
xchg
push
cmp
xor
mov
popa
mov
ret
lret
mov
ja
jp
push
leave
pusha
gs
xchg
or
sub
movaps
push
scas
test
sbb
mov
push
mov
test
pop
jl
add
and
xchg
adc
addb
hlt
adc
pop
or
adc
mov
push
sbb
jo
sbb
sub
sbbb
pusha
pusha
add
gs
rorb
and
sbb
cmp
ja
int
addl
rcll
adc
lret
xchg
loopne
xchg
lret
int
inc
inc
mov
out
inc
jae
repnz
sahf
mov
testb
sub
adc
es
jl
out
inc
test
lcall
icebp
cltd
lahf
mov
fcmovu
cmp
in
add
fldl
pop
add
andb
in
xor
rsm
sub
call
stos
adc
adc
mov
xor
out
jle
arpl
ret
addb
pop
mov
mov
jg
adc
jl
push
push
fcmovnb
rclb
les
dec
orb
and
inc
int
and
xor
test
rorb
rol
in
mov
into
or
and
ss
and
pop
into
mov
add
and
mov
xchg
stc
sub
inc
loop
hlt
inc
xchg
stos
push
or
add
mov
or
inc
shrb
insb
es
push
jo
addb
jbe
fmull
jo
jo
mov
sbb
inc
dec
es
or
mov
pop
insb
andb
daa
sub
sbb
mov
or
sub
out
jno
mov
push
jbe
pop
mov
xlat
or
push
sbb
xchg
loope
stos
filds
cmp
jno
and
pop
adc
jae
xlat
push
adc
or
mov
insb
add
mov
pop
rol
jg
repz
popa
pop
sbb
pusha
pop
xor
adc
testb
and
and
mov
lds
sbb
popf
add
mov
mov
iret
or
inc
in
pop
mov
adc
inc
and
mov
mov
fmuls
popf
dec
shrl
mov
xor
inc
int3
add
push
push
stos
xchg
and
mov
adc
add
and
adc
stos
aad
arpl
pop
rcrb
test
fisubrl
mov
stos
clc
cwtl
adc
jae
jmp
pop
mov
xor
cmpsl
inc
dec
pusha
sub
ja
mov
and
xor
jp
test
adc
push
fimuls
pop
pop
jmp
xorl
movsl
adc
stos
and
inc
mov
or
icebp
add
xchg
sbb
loope
fisttpll
or
lods
and
aas
jno
sbb
iret
sbb
xchg
inc
mov
cmpsl
jmp
and
sub
fimuls
pushf
mov
add
pop
or
negb
stos
lock
sbbb
sahf
xor
js
pop
subl
mov
notb
ljmp
adc
xchg
les
sbb
adc
dec
add
pushf
sbb
sub
lcall
xchg
scas
add
loopne
mov
push
adc
mov
or
and
push
insl
movsl
jecxz
data16
lahf
je
lods
push
mov
fstl
inc
xchg
lods
cmp
adc
pop
movsl
adc
push
cmc
fisubs
incl
je
ret
incl
pop
pop
push
add
mov
xchg
ss
xor
jg
or
sahf
test
movsb
xor
jg
sub
cmp
push
adc
adc
mov
outsl
ljmp
sbb
bound
or
mov
or
push
and
sbb
ror
das
fldenv
add
fs
pop
push
jp
mov
inc
or
lods
push
hlt
xchg
adc
mov
sbb
jmp
lea
aas
pop
js
arpl
stos
and
sbb
cmp
mov
cmc
ret
fwait
xchg
insb
and
test
sbb
push
mov
and
mov
iret
cmc
pop
out
mov
cltd
sbb
jecxz
cmpb
ret
shl
fwait
push
xor
imul
jp
cmp
inc
cs
negb
int3
cmp
sti
dec
lock
xchg
icebp
xchg
rolb
sbb
pop
mov
pop
shlb
mov
adc
adc
out
pop
cmc
cmp
inc
and
or
mov
stos
out
adc
lret
outsl
inc
fwait
adc
andb
xor
jg
insl
push
push
pusha
add
xchg
mov
jnp
daa
mov
xorb
cmp
mov
or
stc
cmpsl
pop
roll
dec
aaa
sub
sti
cmpl
xchg
fimull
xchg
jo
sbb
fsubrs
jg
les
fmuls
stos
addr16
dec
push
cmp
pop
inc
xchg
movsb
iret
mov
or
cmp
ret
outsl
cmp
inc
es
scas
pop
push
and
fincstp
xor
or
inc
les
stos
inc
sub
jbe
ret
sbbb
push
pushf
jl
push
shl
enter
fsubs
xchg
sbb
push
clc
ja
das
jb
adc
pop
pop
cmpsl
loop
add
push
push
aas
or
lahf
sti
jb
mov
mov
push
sub
pop
add
add
cwtl
mov
xchg
xchg
test
sub
test
jae
dec
fldt
jp
imul
mov
push
inc
xor
add
and
or
push
ljmp
bound
mov
js
bound
jnp
mov
push
xor
sahf
loop
mov
xchg
and
adc
das
pop
adc
mov
shlb
fstps
pop
inc
mov
add
xchg
bound
js
sub
popa
and
sub
push
out
inc
sbb
je
sub
orl
sbb
insb
mov
sub
pop
aad
js
xlat
loop
mov
dec
adc
xor
daa
inc
in
sub
dec
inc
jnp
loop
imul
xchg
inc
subb
sbb
das
lods
inc
sbb
inc
xchg
cmp
xchg
insl
cld
xor
xor
das
lea
mov
mov
lea
xchg
out
add
ljmp
aam
movsb
lret
push
aam
or
cmp
push
roll
sbb
in
movsb
pop
outsl
mov
adc
sbb
aam
mov
push
pop
xlat
add
or
and
and
lret
out
jl
mov
ja
jg
xchg
mov
push
fs
add
fwait
push
das
or
pop
xor
ds
push
mov
sub
and
pop
testl
or
push
jl
push
incb
mov
dec
xchg
push
je
inc
mov
pop
xchg
add
stc
inc
rcr
jbe
add
mov
sub
mov
push
and
js
xchg
insl
mov
mov
xchg
dec
test
xor
int
loopne
add
rcr
daa
in
sub
and
pop
pusha
lahf
dec
or
inc
xor
cmp
int
fildll
inc
movsb
pusha
add
push
pop
cmp
add
shll
add
push
das
out
out
adc
pop
femms
and
das
sbb
sub
xor
adc
lret
jnp
jg
dec
push
xor
orb
adc
orl
cmp
sbb
adc
daa
popa
inc
addr16
xor
jp
dec
orb
or
xor
push
nop
jecxz
and
stos
inc
push
mov
inc
mov
inc
mov
mov
stos
inc
inc
inc
rcll
xchg
shll
stos
xor
or
insl
xchg
push
lea
push
inc
inc
mov
repz
adc
lds
add
cwtl
push
cs
mov
es
inc
jne
xchg
scas
add
adc
jns
push
leave
pop
dec
shlb
sub
cmc
add
movb
push
iret
mov
stos
cmp
add
mov
inc
and
jecxz
icebp
xor
push
daa
test
push
shll
jge
mov
jge
out
adc
les
xchg
mov
outsl
fistl
mov
bound
mov
add
je
cmc
fldl
leave
mov
enter
inc
xchg
add
push
jns
shlb
in
loopne
fsts
mov
popf
mov
push
insl
scas
or
adc
mov
call
xor
cmp
leave
fadds
mov
add
in
stos
add
add
add
imul
loopne
jae
push
rcrb
in
shlb
int3
and
pop
les
xchg
dec
push
and
push
mov
and
ds
loopne
sub
sub
aaa
scas
out
ss
pop
sub
popa
sub
addb
mov
cld
mov
daa
mov
cs
mov
adc
lret
lret
hlt
or
add
jbe
xchg
sbb
add
js
or
in
dec
adc
or
sbb
fmulp
or
jbe
outsl
push
addr16
inc
sbb
arpl
or
push
xchg
rclb
mov
aas
dec
ret
hlt
in
andb
iret
xchg
add
jp
setp
ficompl
pop
scas
sbb
cmp
mov
sbb
rolb
xchg
cmp
adcl
cmp
out
es
sbbb
movsb
clc
sub
or
cli
iret
test
sbb
aad
add
js
popl
cmp
inc
push
fisubs
insb
xlat
mov
pop
mov
les
movsb
ja
adc
out
push
fmuls
daa
add
inc
jbe
fsubrl
mov
adc
outsb
jns
loopne
xor
or
stos
xor
push
loopne
add
out
dec
lock
mov
ret
xor
dec
inc
xchg
sbb
inc
mov
andl
insb
or
add
out
xchg
int
data16
cld
xchg
and
or
gs
test
loopne
and
pop
jge
fdivl
push
test
pop
popf
mov
dec
addr16
dec
outsb
adc
cmc
pop
xor
jnp
loop
push
dec
in
loope
cmp
jno
call
ds
shrb
int3
wrmsr
lock
cld
push
add
xor
sbb
fwait
mov
jmp
rorl
add
addb
push
mov
gs
add
add
sub
jae
push
mov
pushf
add
push
shlb
sub
mov
and
ljmp
adc
ficoml
aam
sbb
fisubl
test
out
xchg
add
rcl
xchg
mov
scas
pop
ret
subb
or
and
mov
les
add
mov
jecxz
roll
mov
out
and
loope
xor
adcl
aad
in
xchg
das
and
lret
xlat
stos
pop
lahf
imulb
js
mov
dec
push
sub
and
lahf
scas
add
push
jno
jmp
and
scas
xor
sub
iret
cmp
sbb
add
mov
push
icebp
inc
or
mov
xor
lods
jb
and
add
inc
in
lods
test
jecxz
mov
and
mov
ja
mov
vcvtsd2si
lock
dec
adc
neg
test
int
popf
scas
jmp
in
out
and
lock
or
lea
pop
or
aam
leave
jmp
adc
xor
sub
in
movsl
imulb
out
rolb
fcomi
push
stos
push
add
in
inc
cmp
repz
mov
push
pop
popa
sub
leave
aas
dec
xlat
inc
popa
jbe
jne
call
adc
pop
fmul
stos
insl
adc
fabs
push
jmp
lahf
fistpl
out
pop
and
adc
adc
push
pop
mov
pop
scas
cwtl
add
lret
les
jne
ret
scas
push
fbstp
jmp
mov
sbb
mov
xor
adc
push
inc
cmovne
ss
sub
xor
mov
and
pop
rcrl
call
fs
mov
aad
stos
inc
mov
ficoml
out
xor
sub
mov
and
inc
jno
js
dec
out
inc
not
negb
loope
in
add
shlb
ret
cmp
lcall
push
dec
insl
lods
add
dec
ret
push
repnz
fidivl
out
and
add
adc
push
xor
push
inc
add
push
push
add
ss
rcll
pop
dec
fistpl
dec
inc
sar
mov
es
inc
xor
mov
or
push
add
adc
cmp
enter
sahf
ficoms
push
push
add
test
push
push
movsb
lock
repnz
scas
push
frstor
push
frstpm(287
pop
popf
mov
add
pop
inc
xor
call
fnsave
sbb
add
push
movsl
dec
mov
mov
jecxz
pop
mov
popa
mov
pop
imul
mov
or
mov
push
mov
mov
push
cmpsb
or
scas
push
aam
mov
lods
mov
mov
and
rcrb
cmpsl
xlat
aad
shrl
and
push
xor
and
sbb
rolb
insl
pusha
test
insl
cmpl
sbb
cmc
sub
stos
inc
lahf
popa
lods
in
mull
fcmovu
das
push
or
xlat
inc
hlt
xchg
in
push
shl
orb
int
mov
push
das
xchg
outsb
jbe
xor
int
mov
xchg
add
lds
es
inc
adc
adc
les
jecxz
test
loop
flds
pop
iret
add
enter
jg
push
cmpsl
lret
sbb
mov
fld
mov
pop
pop
inc
or
xchg
xchg
add
lcall
sub
add
mov
daa
icebp
xor
sub
scas
es
push
dec
aaa
into
jge
add
inc
xor
cmp
and
adcl
sub
jecxz
sbb
ret
mov
clc
mov
outsb
push
int3
lock
mov
ss
into
lret
movb
cs
cmp
and
or
mov
arpl
push
add
mov
jl
mull
out
iret
xor
push
mov
cltd
cmp
lods
pop
sbb
rcl
dec
stos
fstpt
lods
out
notb
sub
pushf
sti
lahf
and
pop
or
test
clc
wrmsr
aaa
cs
xchg
add
xor
push
mov
dec
push
dec
mov
jno
jb
sbb
sbb
add
cmpsb
roll
push
xor
jne
jbe
outsb
orb
test
cmpl
inc
pop
push
test
xchg
call
inc
hlt
ror
xor
jp
lods
lds
jecxz
sub
push
cmpsl
je
cwtl
jno
mov
jmp
cmp
adc
mov
inc
ljmp
mov
lea
mov
jns
mov
mov
popa
icebp
vmwrite
sbb
sub
lret
pop
icebp
dec
adc
jno
xchg
xor
add
sahf
jb
inc
sub
fsubrs
dec
pushf
xor
push
aaa
lods
stos
mov
mov
xor
negb
outsl
clc
or
xor
jmp
jno
loope
inc
lret
daa
pop
xor
mov
and
sub
rcr
test
inc
jge
gs
add
sub
or
xchg
cli
pop
sbb
movsb
loopne
hlt
ret
push
push
stos
nopl
jb
and
push
clc
popa
push
mov
dec
cmp
out
filds
and
les
mov
push
icebp
bound
fmulp
and
or
push
or
xchg
sbb
inc
pop
mov
or
lret
pop
jae
mov
sub
xor
fwait
movsb
sbb
fisttpl
mov
fmuls
pop
test
push
xchg
sbb
sub
dec
loope
inc
nop
xchg
es
lcall
push
pop
cmc
push
popa
and
xor
aam
imul
ss
and
pop
lods
fisubrs
mov
cmpsl
sub
push
jmp
mov
jmp
lds
push
in
gs
int3
and
in
hlt
sahf
add
add
mov
shl
sub
add
adc
test
imulb
out
push
mov
inc
test
sti
xor
fldl
or
aad
cmp
loopne
aad
cmp
adc
fsts
icebp
es
loopne
cmp
das
jg
cmpsb
imul
xor
insb
dec
and
rol
jmp
dec
and
sbb
jbe
ds
xor
pop
out
jae
push
sbb
int3
mov
repnz
in
push
xchg
fwait
mov
inc
mov
iret
aaa
test
data16
cmp
adc
mov
or
dec
scas
xorl
out
lods
mov
mov
data16
into
add
fbstp
pop
mov
push
pop
push
int
addr16
stos
mov
sub
roll
add
add
lea
loope
and
or
arpl
lds
jo
cmp
and
and
adc
adc
fcomip
mov
mov
add
shl
loope
xor
sub
xor
stos
or
push
aad
xchg
xor
dec
jecxz
or
cli
xlat
xor
rcll
and
aaa
pop
or
and
and
xorl
mov
rolb
push
push
jbe
pop
xor
mov
sbb
lds
mull
js
pushf
fbld
push
add
incb
ret
cmp
push
pusha
sub
lock
mov
sbb
sub
push
push
inc
adc
push
and
xor
xor
lock
jo
push
dec
push
xor
addb
push
xor
call
mov
mov
shll
xor
jo
sbb
sub
cmp
xchg
pop
and
xor
push
dec
pop
scas
add
shrb
and
call
xor
rcrl
insl
or
lods
imul
jno
movsl
out
mov
adc
arpl
aaa
add
lods
inc
lods
xor
in
pop
push
inc
sub
sub
pop
pop
inc
dec
adc
lods
cmpsb
cmpsl
pop
cmp
adc
sub
subb
and
push
cmp
mov
or
ljmp
inc
inc
pop
stos
incl
jns
push
testl
jp
push
dec
push
mov
add
and
sti
add
or
cld
rcl
aad
xchg
push
fadds
addb
cmp
pop
sub
ds
loope
xlat
nop
lods
pop
rcll
test
cld
outsl
inc
or
add
and
mov
mov
imul
andl
xchg
pop
xor
dec
jbe
push
sub
addb
jecxz
xchg
add
push
leave
xchg
xchg
add
aam
xchg
jne
sub
lock
das
aam
add
lock
jle
xchg
fwait
or
orb
pop
pop
push
sbb
cld
mov
or
mov
and
fisubl
jmp
dec
sub
addl
sub
sub
dec
test
inc
cmc
movsl
push
lahf
movb
or
rcrl
mov
mov
sub
fbstp
add
imul
fsubrs
xor
pop
and
outsb
out
xor
push
or
loope
xchg
push
jne
cli
xor
sub
xorl
adc
stos
test
push
test
push
xor
inc
adc
xchg
jecxz
sbb
inc
fildl
cmp
mov
clc
add
jge
inc
addr16
add
mov
sbb
scas
mov
dec
add
and
hlt
icebp
mov
out
fsubl
subl
sub
ja
scas
enter
fnstenv
neg
xchg
mov
cmp
maskmovq
fsub
test
mov
sub
int
testl
pop
lea
leave
xor
jo
and
out
dec
lock
xor
mov
stos
mov
cmpsl
sbb
sub
adc
or
sub
xchg
sub
sbbl
in
aam
push
repnz
sub
cmp
push
add
lods
mov
xchg
inc
sahf
mull
cmc
xor
mull
or
lds
shll
xor
push
adc
dec
in
lock
mov
inc
xor
iret
xor
out
and
xchg
dec
pop
inc
rcl
or
add
mov
mov
and
int3
in
adc
xchg
mov
cmp
jge
push
addb
mov
xchg
loop
rorl
push
pop
ret
je
sbb
and
lods
stos
lds
xchg
imul
adc
lcall
push
fisubl
inc
jo
cmpsl
jnp
pop
movsb
inc
pop
sub
fisttpll
inc
mov
adc
ret
mov
xchg
xchg
dec
xchg
or
sub
loope
push
mov
cltd
popa
lods
inc
cmp
add
jbe
inc
and
adc
xlat
mov
jmp
push
jo
jb
mov
sbb
inc
ret
mov
and
lcall
jo
pop
inc
mov
clc
inc
cmc
mov
xorl
loopne
testl
int
loop
mov
andb
mov
sbb
xor
mov
jno
lret
test
or
mov
inc
testl
addb
push
sub
xor
lea
mov
sub
and
fidivrs
addl
iret
sbb
pop
add
adc
js
popa
sbb
addb
loopne
lods
inc
lock
mov
inc
sti
sub
mov
push
mov
ljmp
sub
in
out
lods
int
popa
fcoms
push
lods
and
adc
or
mov
fsts
inc
hlt
push
cmp
ds
inc
loopne
add
push
nop
mov
add
in
dec
lock
dec
cmpb
repnz
fidivs
mulb
add
mov
je
arpl
inc
mov
xchg
mov
add
rol
and
and
push
fsubl
sti
data16
es
test
sarb
hlt
add
jns
das
popa
adc
fnstcw
sahf
xorb
inc
pop
push
aad
push
dec
pop
jecxz
lods
ss
and
imul
mov
hlt
inc
pop
test
push
jecxz
and
pop
and
or
sub
mov
jo
add
sub
sub
sub
fsubs
lods
stos
loopne
add
and
push
cmp
cmpsb
add
stos
and
inc
cmp
repnz
cmc
adc
fildl
mov
sub
adc
inc
aaa
adc
loopne
sbb
add
cwtl
adc
jmp
pop
lock
cli
push
push
inc
adc
cmp
cmovg
data16
lea
fsubs
push
insl
mov
add
js
add
clc
pop
mov
inc
or
xor
mov
sub
data16
in
mov
sub
jle
inc
mov
rorl
in
mov
sbb
dec
aaa
test
int
sub
sub
cmp
lods
aas
pusha
dec
aam
loope
jno
sub
daa
aaa
adc
mov
and
push
int
loopne
js
sbb
push
xor
clc
jle
or
in
inc
int
sub
int3
xor
jnp
rol
fs
shll
fstps
dec
mov
add
aas
push
je
cmpsw
xor
sbb
inc
mov
and
mov
and
and
sbb
push
add
jae
jno
pop
jecxz
push
xor
cwtl
stos
jo
or
cmp
sti
mov
jecxz
pop
pop
jg
push
aam
add
pop
jo
and
mov
lret
aas
sub
movsb
sub
add
outsb
dec
mov
adc
add
lock
adc
or
inc
popa
adc
loopne
xor
into
inc
loopne
and
adc
adc
repz
fsubrl
or
mov
push
adc
mov
sub
in
shlb
mov
sbb
sbbb
out
jns
cmp
pop
cmc
mov
ljmp
shl
and
pop
mov
inc
in
or
jbe
cwtl
cmc
pop
push
jns
mov
add
jb
loop
outsl
sub
out
aas
or
jns
movsl
dec
js
jne
push
aaa
or
and
xchg
pop
adc
loope
loopne
xor
push
inc
add
rorl
jmp
cld
cmp
push
and
cmp
mov
icebp
pop
cwtl
dec
push
popf
cmp
in
push
add
sub
mov
adc
in
icebp
sbb
push
lods
adc
ret
aaa
test
jno
sarb
xchg
cwtl
scas
movsl
mov
xor
push
cmp
frstor
lods
or
adc
in
push
jg
push
out
cli
ss
xorb
add
shrb
inc
test
cltd
add
jg
lret
adc
leave
xorb
iret
mov
mov
mov
adc
push
test
aas
cld
sbb
lods
mov
movsl
jae
push
add
fwait
xor
adc
inc
sbbb
push
push
and
fcmovnb
addr16
dec
cmpl
add
jecxz
shll
add
push
xchg
loopne
jnp
fwait
scas
call
xchg
mov
push
sbbb
hlt
lcall
pusha
add
test
insb
xchg
add
push
sbb
push
push
aam
dec
in
and
daa
jg
inc
jle
push
xchg
insb
add
fidivs
or
or
mov
mov
mov
adc
sub
hlt
js
js
push
mov
push
cmp
subb
fstl
addb
filds
repnz
xor
or
popf
adc
add
push
or
pop
mov
mov
lods
outsl
push
xor
inc
cmp
dec
arpl
sub
test
inc
xor
scas
ljmp
push
ret
mov
push
mov
jnp
es
jle
push
sbb
es
cs
pusha
or
sbb
mov
cld
and
dec
enter
sub
out
sub
cmp
out
push
xchg
xchg
testb
arpl
das
pop
movswl
insb
mov
adc
adc
adc
mov
pop
je
or
out
dec
pop
add
jne
call
xchg
lods
and
adcb
adc
insb
ret
lock
mov
xchg
or
stos
xchg
adc
or
ss
push
adc
dec
subl
shll
sarl
ja
jmp
cmp
push
das
mov
popf
test
movsb
idivl
xchg
adc
enter
mov
or
leave
and
imul
jle
add
push
mov
add
lods
gs
add
adc
mov
roll
testl
loop
inc
inc
fs
mov
addl
test
data16
add
add
neg
pushf
movsb
out
sbb
mov
lahf
xor
rcl
add
mov
pop
cmp
jle
sbb
ret
icebp
xor
aas
inc
add
pop
das
jbe
fnstenv
or
pop
or
cmpb
daa
push
xor
pop
mov
movsl
lods
push
aam
mov
pop
mov
aam
repnz
inc
inc
xchg
lret
arpl
jnp
movsb
lcall
fs
andb
pop
pop
pop
pusha
xor
mov
je
xchg
jo
or
pushf
lcall
ja
cmp
negl
dec
pop
xchg
xor
sub
xchg
lods
inc
jl
test
push
sub
push
cmpsl
adc
cmp
loopne
nop
es
popf
or
add
mov
outsb
and
adc
xchg
roll
jno
push
and
fimull
popf
add
mov
sub
pop
out
fistpll
jo
outsb
scas
ss
jmp
fstps
xlat
lds
adc
or
addr16
mov
loop
ja
les
and
dec
sbb
xor
cmp
push
test
fwait
hlt
mov
inc
mov
adc
ljmp
push
xor
or
pop
pop
idivl
push
jae
or
ret
xchg
pop
xchg
insb
lods
mov
jge
stos
jb
adc
stos
cltd
iret
push
lret
pop
aaa
mov
xor
sahf
add
hlt
inc
pushf
test
jp
scas
or
and
stos
test
and
and
ror
sub
js
cmpsb
daa
inc
jle
push
mov
push
sarb
xchg
jle
je
lods
mov
or
mov
mov
add
ds
sub
pushf
adc
jo
ret
rcrl
in
je
int3
sbb
xchg
add
bound
sbb
and
je
iret
pop
adc
fbld
adc
jo
pop
jae
mov
jo
dec
movsl
aam
inc
add
out
imul
mov
mov
jo
dec
inc
ret
stos
jl
pop
xchg
int3
add
dec
adc
and
pop
add
push
ret
dec
pop
aam
cmpsl
push
sub
mov
pop
add
mov
dec
aas
mov
fbld
add
adc
mov
lret
jl
pusha
xchg
or
cwtl
mov
mov
pop
xchg
addl
das
xor
xchg
inc
shlb
pop
cwtl
stos
addb
mov
xor
xchg
pop
or
inc
add
mov
xor
inc
aad
sub
les
add
pop
push
add
jo
sub
lock
sahf
adc
cmp
notb
data16
xlat
sub
dec
ret
jge
fs
aam
mov
popa
int3
or
add
nop
js
outsl
fwait
add
inc
leave
out
pop
fisubrs
jae
out
insb
sub
insl
jno
cmp
and
mov
inc
subb
loope
int
jnp
add
mov
sbb
pusha
xchg
sub
inc
ret
test
dec
scas
ss
inc
sarb
inc
into
xchg
mov
aas
push
cmp
pop
jae
push
adc
jecxz
adc
lock
jnp
push
inc
cmp
add
xor
cs
add
push
loope
or
or
adc
fisubs
addb
cmc
xor
adc
ret
mov
mov
sbb
sarb
add
andb
and
adc
movsb
and
adc
ret
xchg
fwait
xor
pop
xor
mov
fisubrs
add
mov
add
movsl
mulb
xchg
out
insl
inc
ss
push
dec
or
lds
cmp
add
insl
and
mov
sub
adc
cld
inc
cmp
mov
aas
mov
pop
lods
mov
xchg
add
sub
adc
test
fwait
lods
daa
icebp
dec
and
mov
mov
stos
adc
inc
je
xchg
cmpsl
push
test
mov
jp
xchg
mov
popa
loope
imul
int3
ss
popf
adc
getsec
mov
sub
into
jne
jo
mov
mov
and
popf
out
les
add
dec
stos
in
xor
lods
and
sbb
jmp
push
dec
sub
or
fsub
mov
add
and
lcall
imul
movsb
inc
mov
add
jmp
lret
pop
rcrb
add
jmp
sahf
jnp
in
xor
mov
sbb
add
sbb
repnz
je
dec
lret
imull
bound
dec
xlat
test
enter
mov
idiv
xor
js
add
xor
xor
js
pop
rep
sub
std
adc
mov
jg
and
jae
xchg
lret
jbe
stos
sub
mov
mov
jb
sbb
iret
out
jns
cmp
loope
es
inc
fsts
push
or
adc
iret
inc
pushf
sbb
and
adc
dec
cwtl
sub
sub
lahf
inc
int
dec
dec
mov
movsb
dec
xor
nop
sbb
sub
inc
aaa
cmp
ljmp
adc
shrl
lcall
pop
push
add
push
outsb
mov
shrl
arpl
idiv
dec
clc
jo
adc
dec
inc
and
sbb
or
loopne
insl
scas
ret
leave
sub
pushf
daa
dec
fdivrs
lods
adc
shll
lods
pop
jmp
test
ss
and
addl
adc
mov
fsubrs
jo
mov
and
pop
test
push
pop
mov
jp
imul
and
mov
push
sbb
int
sub
or
dec
cmp
jbe
mov
clc
cmp
and
xor
inc
jo
negb
sbb
dec
adc
test
repz
pop
aad
adc
xchg
push
sbb
aaa
jmp
push
ltr
cwtl
adc
jmp
push
xchg
mov
push
sub
or
cwtl
add
jo
mov
jo
pop
xchg
mov
cld
cli
xor
xor
add
aas
test
xor
or
in
lock
outsl
mul
or
push
add
pushf
jl
cs
fidivl
scas
pop
jmp
sbb
sub
dec
xchg
sbb
and
push
inc
xchg
jb
in
addb
pop
pushf
dec
add
xchg
cmp
andb
stos
add
loope
sbb
add
add
cmc
fwait
js
cmp
mov
adc
cld
out
bnd
jne
roll
push
popa
and
ret
lcall
inc
nop
loop
into
add
pop
aaa
jl
aam
cmp
jo
ror
shll
aaa
add
stos
cmp
ds
push
mov
stos
fmuls
andb
addr16
js
and
inc
shrb
sub
notl
add
mov
loope
or
adc
xor
ja
inc
jne
mov
mov
nop
inc
or
adc
pextrw
add
pop
and
sbb
scas
sbb
pusha
adc
jns
push
jle
andb
pusha
aad
sbb
inc
xor
pop
mov
add
adc
add
daa
cmp
das
ss
mov
inc
and
mov
mov
cmp
out
and
pop
jns
mov
cwtl
adc
imul
loopne
sbb
jg
dec
add
iret
sub
mov
xor
ja
sbb
adc
sbb
jp
orl
or
outsl
push
push
jmp
mov
ret
fcmovb
xor
orb
pop
adc
mov
or
adc
stos
inc
mov
cmp
mov
and
lds
sub
les
insl
je
lds
xlat
int
mov
stc
and
sbb
sub
and
sbb
sub
jl
inc
mov
ljmp
lcall
cmpsb
aad
xor
xchg
mov
loope
inc
outsb
sbb
mov
pop
sub
pusha
jo
cmp
inc
scas
lcall
adc
push
push
adc
add
add
lds
adc
aam
andb
arpl
mov
or
and
sub
scas
mov
int3
sbb
cmp
pop
loopne
mov
rorl
mov
nop
test
xchg
lds
adcb
jno
add
xchg
das
fdivrl
aas
cmpb
inc
data16
shll
das
sti
ja
pop
pop
adc
fidivrs
das
pop
push
lds
testb
and
adc
out
pop
mov
mov
test
lods
addl
out
adc
push
dec
jno
dec
xlat
jp
pop
push
xchg
cmp
push
push
inc
add
add
leave
or
add
xchg
stos
int3
int3
adc
add
xor
jp
mov
push
mov
pop
and
sub
das
sbb
lock
test
sub
cmp
xchg
add
clc
cwtl
and
sti
push
and
push
push
xor
push
addr16
mov
aad
add
sbb
adc
sbb
jp
dec
out
mov
mov
mov
cmp
jecxz
das
jecxz
insb
inc
mov
repnz
ret
jns
jmp
mov
addb
shrl
adc
sub
cmp
mov
mov
and
clc
push
push
mov
xchg
pop
or
cmpl
jno
push
rorb
cmp
dec
push
ftst
mov
test
jbe
adc
out
add
xchg
iret
iret
insl
outsb
cmp
mov
lahf
cld
outsl
and
xor
enter
int
sbb
mov
xor
and
sub
faddl
dec
and
dec
pop
xlat
dec
pop
and
jp
orb
cltd
and
roll
stos
sbb
inc
sarb
xchg
addb
adc
jne
mov
in
insb
ret
mov
or
add
aam
cmp
outsb
dec
inc
xchg
xor
or
xchg
inc
adc
out
andb
mov
mov
nop
cmp
mov
test
mov
push
movsl
or
xchg
inc
bound
subl
cld
dec
call
jo
shrl
push
imul
rorb
es
xchg
adc
or
test
pop
jo
bound
or
push
add
sub
in
scas
sbb
fiaddl
push
loope
jg
adc
roll
outsb
adc
jp
out
cmp
fucomi
aam
push
mov
jle
ja
mov
es
push
loopne
cmc
popf
adc
jbe
aam
push
cli
movsb
jo
out
punpckldq
push
rcr
loope
or
dec
out
sub
inc
js
iret
cltd
xor
or
push
rcll
iret
pop
jae
and
imul
mov
in
loope
sbbb
or
xorb
dec
insb
ds
add
fadds
aas
lock
ret
mov
sarl
inc
or
jecxz
jae
flds
pop
fldl
outsl
and
mov
pop
jns
mov
in
cwtl
jne
mov
xor
push
add
add
int3
or
test
and
dec
lods
cmpsb
xchg
movsl
mov
lods
xor
mov
rorl
sti
or
jle
sbb
dec
add
adc
sahf
movsl
mov
cmpsb
int3
xchg
arpl
sbb
dec
shrl
add
xor
repnz
nop
mov
sbb
sub
push
fstp
aad
push
xor
sbb
ljmp
inc
fmuls
sub
out
sahf
jl
jle
lret
pop
lret
adc
and
inc
sahf
out
fwait
rcrb
xorb
popa
lods
sub
cvtpi2ps
mov
lret
inc
or
or
addr16
inc
jne
je
decb
mov
adc
adc
repnz
call
add
fldl
rcll
or
pop
dec
pusha
xor
mov
and
push
inc
pop
push
je
push
sub
ret
jle
stos
addl
aaa
jl
or
out
mov
movsb
and
adc
into
xchg
jg
sub
xor
insb
cmpsl
mov
inc
push
rcl
fildl
or
test
adc
cs
sub
aad
jne
mov
dec
cli
imul
add
mov
and
adc
fldcw
xchg
add
cmp
mov
rcl
filds
sub
sbb
pusha
fdivs
sub
ljmp
cmp
sahf
mov
aaa
jmp
shl
dec
and
and
add
cmpsl
push
adc
sbb
push
and
das
mov
pop
jmp
xor
and
inc
jb
mov
xlat
sub
movsb
and
ljmp
sbb
mov
adc
lds
mov
popa
in
es
mov
rolb
aad
jp
push
je
hlt
adc
jne
syscall
dec
test
test
mov
push
insb
lods
lret
xchg
iret
int3
cmp
imull
sbb
imul
mov
add
fucomip
int3
ficoms
outsb
sbbb
pop
fisttps
hlt
insb
daa
push
mov
cmc
fisttpll
inc
cltd
jo
or
cli
shlb
jmp
jno
imul
in
inc
sub
inc
rorb
cmp
je
add
or
mov
loop
jecxz
stos
and
es
adc
inc
inc
pop
adc
add
adc
or
int
cmpsl
sbb
or
mov
cmp
dec
cmpsl
idivb
xor
dec
adc
mov
pop
repz
jecxz
loop
sarl
das
and
adc
call
rclb
and
mov
or
std
pop
iret
mov
mov
fldenv
stos
fucomi
adc
outsl
mov
rorl
or
sbbl
pop
andl
ret
daa
outsl
cmp
test
mov
out
in
aad
or
and
mov
push
jo
push
outsb
sub
push
stos
and
iret
or
sarl
lea
xchg
daa
add
mov
cli
or
push
pop
scas
xor
xor
push
sbb
das
shl
xchg
or
and
add
add
scas
loope
push
in
ficoms
jle
pop
push
push
icebp
sbb
gs
popa
subb
lcall
scas
mov
cmpsl
movsb
loope
sbb
mov
sub
jp
dec
pop
pop
sub
imul
xlat
loope
rcl
push
lret
lahf
inc
insl
cmpsl
add
daa
add
sub
and
or
in
cmp
and
push
nop
movsb
orb
and
push
and
or
push
dec
lods
pop
mov
sti
das
mov
stos
and
sub
and
sbb
push
and
lea
cld
int3
and
faddl
adc
and
cmp
xor
loope
sub
inc
sbb
nop
and
or
cld
outsb
or
ret
ret
aaa
ss
int3
rolb
cwtl
fwait
and
add
pop
add
push
dec
shll
mov
mov
mov
shlb
add
das
insb
in
scas
add
sbb
pushl
jecxz
mov
and
ficompl
jl
aaa
push
jo
dec
adc
pop
movsl
mov
mov
jle
xlat
push
aad
xchg
leave
mov
push
in
sub
sub
push
pop
movsl
adc
mov
adc
out
xor
dec
nop
jno
sub
mov
inc
and
mov
stos
js
enter
mov
sbb
xor
adc
mov
or
mov
add
jo
mov
sub
pop
int3
loope
jecxz
popf
leave
push
mov
ja
mov
mov
decb
mov
and
rolb
outsl
filds
push
pop
sbb
xor
push
xor
repnz
lods
fimuls
rolb
add
cs
ret
out
inc
sbb
daa
out
outsb
mov
fcompl
ret
jp
scas
push
push
inc
jne
push
mov
aaa
or
imul
mov
aaa
ds
sbb
xchg
xor
in
push
enter
orl
inc
mov
das
pop
add
clc
add
cmpsb
lock
adc
in
inc
cmp
ret
or
cmp
js
inc
es
inc
outsl
das
and
sbb
mov
inc
addr16
and
sub
cli
push
inc
fisubl
push
xlat
jo,pn
je
jp
dec
ficomps
sub
movsb
push
pop
mov
mov
addb
jns
cmc
or
inc
negl
fbstp
ss
lods
mov
dec
shll
stos
addl
aaa
inc
iret
addb
insb
sbbl
ret
mov
inc
adc
add
cwtl
add
mov
int
fs
mov
add
xlat
dec
iret
mov
and
jno
hlt
adc
rcll
cmc
pop
pop
sbb
movsl
aaa
cmp
repz
xor
or
pop
push
cwtl
daa
jns
pop
rorb
xchg
push
lock
es
sbb
mov
loope
nop
or
or
mov
sub
push
lds
and
inc
movsb
pop
inc
adc
adc
inc
add
xor
xlat
or
push
or
enter
jl
push
das
sarl
sub
stos
or
sbbb
inc
sbb
push
pop
mov
leave
and
lods
fcmovb
push
and
ret
jbe
add
mov
ret
pop
mov
jmp
mov
mov
cmp
jg
int
inc
or
inc
push
mov
jne
or
lock
and
xchg
movsb
loopne
outsb
add
adc
inc
and
icebp
test
cmpl
mov
je
and
push
test
or
dec
add
xchg
test
mov
pop
push
push
shll
xchg
mov
sbb
jge
mov
sub
push
popf
push
push
aaa
or
cmp
cltd
mov
jno
and
sub
mov
xchg
pop
subb
push
dec
xchg
xlat
out
sar
push
push
mov
mov
or
add
daa
lods
aad
xchg
dec
sub
xchg
sbb
sbb
iret
inc
addr16
cmc
test
das
mov
mov
fistl
push
cmc
clc
add
mov
dec
mov
stos
lods
and
add
inc
daa
cmp
pop
fidivl
fcoms
pusha
xor
push
and
sub
pop
out
and
dec
subb
xor
scas
xor
das
adc
shlb
inc
aaa
divl
dec
dec
adc
jns
mov
je
aas
and
xchg
xchg
and
push
add
notb
cwtl
js
out
or
and
repnz
loopne
pushf
mov
pusha
mov
lret
in
rolb
movsl
lods
cmp
mov
sbb
pop
dec
jbe
xor
sbb
fldenv
mov
fsubs
scas
pop
scas
and
mov
ds
sbb
add
mov
cltd
icebp
adc
adc
lods
ljmp
js
inc
and
jbe
add
pop
adc
mov
subl
gs
sub
dec
loop
out
add
iret
sbb
stos
inc
add
inc
sbb
das
pop
aam
pushl
outsb
insb
push
cs
cmp
sub
xchg
push
in
orb
push
gs
push
inc
cmp
jnp
adc
add
xor
jae
sbb
xor
adc
mov
xor
mov
fcoml
mov
movb
pop
push
xchg
inc
sbb
inc
cmpsl
jb
xchg
ss
fsubs
add
xor
add
dec
add
mov
or
adc
sub
and
add
orb
sbb
inc
mov
daa
inc
adc
pop
inc
ljmp
icebp
test
push
xchg
lret
shlb
xchg
push
aam
lds
add
mov
lret
mov
xor
es
dec
adc
or
aam
push
mov
sub
sub
sbb
and
in
add
adc
xchg
test
mov
adc
inc
cwtl
mov
push
adc
add
and
js
add
push
rorl
adc
into
stos
sbb
repz
mov
shlb
sub
movsb
adc
push
inc
adc
lock
ljmp
dec
push
and
sysexit
jl
imul
inc
negl
andb
lea
into
mov
add
pop
pusha
push
lock
out
adc
jl
bound
in
mov
jb
aas
jle
test
sub
xchg
mov
lret
fiadds
xchg
sub
add
jo
lret
lret
adc
or
ds
sub
test
push
out
enter
shrl
sub
add
add
cld
stos
js
lret
mov
push
jne
and
les
scas
arpl
adc
into
movsl
lret
js
mov
and
mov
push
je
dec
cwtl
xchg
fdivl
ljmpw
inc
pop
fildl
dec
fwait
or
mov
imul
sbb
inc
shll
dec
xor
push
lcall
std
das
mov
fadds
mov
mov
clc
stos
in
xor
add
sbbb
xchg
pop
push
clc
mov
iret
push
or
push
sbb
test
mov
xchg
push
sbb
imul
testb
jecxz
int
iret
cld
cs
and
loop
add
into
cwtl
push
ret
orb
stos
inc
adc
sbb
xchg
pushf
mov
and
int3
into
mov
push
jnp
into
push
fistl
mov
adc
mov
adc
push
pop
jnp
add
outsl
jbe
cmpsl
int3
inc
in
adc
push
ret
or
sbb
adc
leave
mov
pop
xlat
add
adcb
iret
inc
cs
addl
xchg
adc
repz
push
xchg
mov
or
add
dec
xorb
xchg
inc
rcrb
arpl
ja
ret
sbb
stos
and
push
movsb
and
mov
mov
adc
inc
xor
mov
inc
sub
and
aaa
in
das
and
and
aaa
mov
and
adc
and
aas
mov
imul
mov
mov
movsl
pop
push
add
push
jnp
mov
sti
adc
add
push
add
rclb
dec
inc
jb
sub
imul
add
mov
pop
add
and
fisubrs
cld
xchg
push
push
lcall
stos
into
or
push
test
or
and
or
push
roll
push
add
mov
fdivs
adc
es
mov
push
sbbl
adc
push
sbb
outsl
push
jge
or
addb
inc
or
inc
clc
addr16
jp
inc
xchg
sar
xchg
rclb
cmpsl
inc
sbb
aad
push
jl
mov
push
cmp
cwtl
pop
mov
inc
into
add
dec
lea
mov
out
fildll
push
scas
mov
out
inc
movl
adc
push
inc
xor
fs
out
inc
adc
rclb
aad
adc
and
xor
stos
sub
aam
cmpsl
mov
sahf
mull
cwtl
add
or
cwtl
and
mov
adc
insl
jo
sbb
adc
lret
lcall
jno
shlb
test
mov
das
test
push
popa
sbb
push
or
insl
jbe
sub
imul
dec
stos
xor
gs
push
bound
inc
pop
xor
mov
fcomps
inc
mov
push
mull
pop
test
mov
inc
lret
add
push
pfmax
xchg
sbbb
jne
pushf
in
push
mov
jb
and
pushf
pusha
xlat
xor
sbb
cmp
and
adc
rcl
dec
cltd
mov
push
xorb
xor
fidivl
push
roll
and
fcompl
add
rclb
sbb
enter
sbb
add
cmpsl
xchg
cmp
pop
lods
cmpb
ret
scas
adc
cmp
jge
stos
mov
addb
push
popf
mov
and
push
adc
pop
pop
add
daa
jb
int3
sub
jp
adc
xor
aad
test
push
add
xchg
xlat
add
mov
adc
mov
test
mov
add
jg
add
loope
daa
pop
cmp
pushf
scas
or
lret
and
data16
lret
cmp
pusha
sub
lods
mov
add
push
test
xchg
fildl
and
xor
mov
mov
aaa
mov
inc
push
aaa
cmp
stos
push
lea
push
fucomi
jbe
out
leave
cmp
mov
les
or
test
mov
inc
inc
hlt
adc
pop
push
and
lea
or
mov
ljmp
sub
inc
cmp
add
sbb
and
cmp
ret
lods
loope
xchg
js
sbb
sbb
icebp
pop
adc
mov
and
testb
adc
ficompl
jmp
push
fsubrs
movsl
pop
les
das
sub
inc
lods
mov
iret
je
xor
mov
and
in
pop
push
out
leave
or
es
pop
push
ds
inc
sbb
add
inc
mov
pop
or
sub
adc
pop
popa
mov
inc
jecxz
insl
mov
js
ss
ficoms
xor
push
shlb
or
fidivl
je
pop
pop
add
popa
add
insb
cmp
jno
dec
fisubrl
cmc
or
add
js
inc
sub
add
push
stc
push
les
lock
loopne
and
add
xchg
dec
adc
inc
cmc
push
les
mov
mov
pop
jae
mov
test
mov
sbb
add
pushf
shll
jb
xor
push
jg
and
push
xchg
cmp
aaa
inc
rcrb
test
inc
fwait
loopne,pn
add
mov
jnp
bound
idiv
xor
adc
notb
shll
dec
jb
jno
fsubl
dec
pop
negl
rcll
in
stc
scas
aas
movsl
sub
sti
jb
add
sarl
sbb
and
hlt
mov
jecxz
add
or
sti
bound
mov
repnz
add
mov
sub
and
loopne
xchg
adc
mov
loopne
cmp
pop
loopne
out
adc
mov
add
inc
popf
orl
adc
mov
or
jno
bound
mov
push
das
iret
mov
fildll
fidivrs
push
mov
xor
inc
adc
add
adc
cmp
xchg
sub
outsl
jmp
lods
mov
clc
bound
pop
cwtl
aad
pop
ds
inc
cmp
push
inc
gs
and
adc
sub
and
int3
or
mov
pop
lods
push
mov
push
adc
jne
ficomps
pop
ret
sbb
mov
cs
notb
mov
xchg
mov
or
lods
add
jae
or
or
dec
mulb
mov
ret
in
iret
or
xchg
inc
insl
xor
fwait
les
ret
cmp
mov
jp
popf
clc
sahf
sahf
lods
fmuls
xchg
cmp
test
jo
inc
xor
mov
and
mov
jle
or
or
or
adc
subl
xor
jo
adc
sbb
stos
pushf
mov
mov
nop
and
mov
into
and
sbb
add
mov
nop
add
xlat
push
leave
int3
ss
js
mov
or
jbe
pop
dec
mov
adc
sub
push
mov
xor
add
into
lods
and
outsb
jae
inc
jbe
jp
es
test
cmpsb
movb
ret
pusha
push
or
mov
add
rclb
adc
or
sub
cmp
sub
add
scas
stos
adc
mov
mov
push
and
sbb
xlat
inc
push
loopne
push
push
ss
js
stos
mov
dec
arpl
inc
sbbb
jb
mov
pop
xor
add
rcr
pop
adc
add
testl
aaa
gs
sub
xchg
iret
mov
add
mov
mov
cmc
fwait
sub
std
cmp
dec
sub
jl
and
inc
adc
push
clc
ret
xor
lea
mov
addl
xchg
or
stos
leave
push
push
repz
dec
out
lock
test
sub
xchg
pop
fidivrs
pop
jo
es
pusha
mov
scas
inc
inc
lods
xchg
jg
mov
cmp
enter
add
orb
cmp
testl
jl
adc
ljmp
pop
and
bound
ret
out
cmpsl
es
ja
mov
push
mov
add
sub
cmpsl
sbb
sbb
and
pop
test
es
cltd
fucomip
sbb
popa
add
add
pop
js
push
aad
divl
cmp
sub
std
scas
ss
nop
pop
int3
sub
mov
lcall
rorb
jg
inc
in
adcl
aaa
pop
lock
bound
add
adc
in
sub
rorl
jno
sbb
aaa
ljmp
adc
push
pop
ret
lods
adc
jecxz
or
or
add
lcall
sti
push
mov
add
jl
push
push
pop
lret
das
int3
add
or
rol
and
lcall
dec
addr16
ss
testl
sub
shlb
mov
mov
adc
or
cmp
or
add
mov
ds
and
mov
addl
stc
inc
and
adc
add
add
in
push
fs
pop
and
inc
lds
jl
bound
lock
mov
push
adc
adc
push
cmpsl
arpl
sahf
push
mov
pusha
add
outsb
stc
push
out
cmp
jp
aas
mov
xlat
popa
mov
adc
daa
sbb
mov
dec
mov
jne
pop
xor
loope
mov
add
icebp
inc
sub
hlt
inc
pop
sub
sbbl
loopne
data16
leave
repnz
outsl
mov
fucomip
lock
hlt
aaa
xlat
je
into
mov
sbb
mov
int3
js
outsb
jmp
pop
xor
mov
jge
loope
cmpsb
and
addb
sti
mov
mov
dec
or
fwait
jl
jb
cmp
daa
mov
or
sbb
adc
fldcw
adc
ret
pop
mov
loope
mov
mov
insb
sbb
jl
stos
ss
sub
dec
jae
add
inc
mov
adc
fucom
sahf
sbbl
loopne
sub
adc
mov
mov
add
and
push
adc
lea
in
int3
adc
and
subl
repz
leave
and
movsb
lret
aaa
xor
xlat
add
iret
in
jp,pt
lret
mov
shlb
xor
ret
cmp
gs
es
push
and
insb
jae
and
insl
addr16
mov
sub
loopne
jge
fsub
sarl
iret
or
or
xchg
cmp
out
add
repnz
add
jnp
pusha
add
js
mov
data16
in
stos
jno
addr16
and
pop
mov
test
lods
das
test
nop
imul
jne
ret
rdtsc
negl
push
sub
jg
pop
or
mov
scas
dec
jmp
fmuls
push
dec
and
or
aas
ss
cmpsl
or
cmc
sub
arpl
sbb
scas
sbb
fistpl
inc
inc
aaa
ret
addl
repz
scas
addr16
je
jae
dec
cmp
xchg
pusha
ds
sub
xlat
sbb
mov
sub
fxch
sub
test
adc
call
sub
cmpsl
sbb
jnp
and
adc
mov
mov
or
outsb
fcoms
andb
lea
fidivs
xor
scas
in
pop
xchg
pop
into
outsb
cmp
or
loopne
jb
into
or
loope
imul
or
add
loope
xor
fdivs
adc
dec
sbb
add
push
jp
push
jno
out
dec
pop
xchg
mov
mov
xchg
out
fs
sub
mov
jnp
test
cmp
rcr
addb
fcoms
xchg
and
fcoms
and
ficoms
push
lret
and
inc
mov
and
add
jbe
mov
push
xchg
lahf
cmc
or
bound
ret
lods
ficoms
nop
test
xchg
aaa
add
pusha
mov
das
xlat
inc
cmp
shlb
adc
jmp
cs
aaa
cmpsw
das
or
fistps
push
in
pop
inc
divl
aaa
hlt
xchg
or
in
add
cmp
dec
sub
pop
in
or
push
mul
dec
rorb
ret
out
aad
xor
mov
jge
mov
inc
inc
and
fs
pusha
fdivr
cmp
into
sub
xchg
dec
nop
repz
into
and
data16
xlat
lret
pop
aaa
push
adc
ja
out
jne
les
in
mull
mov
cmp
pop
and
loopne
cmp
notb
es
jnp
or
fistl
cmp
jg
sub
xchg
inc
xor
inc
mov
mov
into
mov
inc
sahf
je
out
popf
xchg
or
xchg
mov
or
sbb
jo
test
test
int
inc
inc
push
and
sbb
add
lods
mov
shll
int3
sbb
dec
or
daa
scas
xchg
fucom
rclb
mov
mov
mov
insb
in
sub
and
and
cmp
xchg
ja
cwtl
cmp
rcrb
test
gs
and
add
inc
in
pusha
in
ret
ds
cmp
pop
sub
pushf
lock
push
in
jnp
jnp
push
jne
or
fs
testl
add
mov
in
mul
jecxz
pop
xchg
sbb
fcoml
or
add
sbb
pop
mov
cwtl
push
pop
push
ret
xchg
sbbl
add
pop
aas
ret
int3
in
mov
into
xchg
or
insl
and
insb
ss
frstor
cmp
test
inc
das
sbb
insl
push
mov
lods
inc
xchg
mov
fwait
lds
and
movl
leave
movsb
add
jle
adc
mov
dec
add
dec
or
cmpl
imul
jecxz
adc
fwait
nop
test
mov
mov
sbb
sub
or
cmpsb
out
adc
xchg
adcl
add
cwtl
mov
cwtl
mov
xlat
cmpsb
add
nop
jbe
add
cmp
lahf
add
test
iret
adc
adc
or
push
cmp
add
aaa
adc
aad
rcll
leave
ret
pop
lock
insl
scas
pop
sub
mov
pop
jl
push
in
jecxz
or
leave
lea
pop
adc
lret
ficoms
lret
xchg
int
push
sbb
push
push
push
adc
mov
xchg
addr16
shll
orb
push
int3
idivb
and
js
ss
into
fmuls
or
xlat
into
push
push
pop
add
or
xchg
lahf
adc
mov
xchg
and
add
iret
mov
fidivrs
sbb
adc
mov
aad
dec
test
movb
int3
mov
test
gs
jo
mov
xlat
fldt
shlb
add
mov
mov
pop
aaa
mov
xchg
aam
jnp
mov
inc
push
add
mov
push
mov
call
cmp
mov
jnp
ds
int
xchg
popa
push
sbb
dec
mov
jmp
sub
loopne
sbb
lods
imul
cs
dec
dec
dec
loopne
in
gs
or
imul
sahf
xlat
mov
inc
pop
xchg
adc
sub
inc
pop
sub
add
and
pop
pop
mov
into
insl
aas
out
test
aad
jge
sbb
jae
scas
and
stos
into
ret
shll
push
out
mov
mov
or
xchg
mov
push
cld
xchg
jl
setb
mov
andl
add
orb
dec
dec
push
lods
pop
inc
mov
fs
push
push
bound
mov
jb
and
leave
in
lret
pop
das
mov
adc
push
sbb
shl
inc
cld
pop
lds
inc
js
imul
int3
and
dec
pusha
and
fcomps
sbb
dec
fbstp
adc
sti
lahf
sub
lds
lcall
ret
into
lcall
les
pusha
jecxz
lods
inc
js
js
into
add
add
cmc
cltd
lret
fwait
sub
in
push
daa
movsl
mov
push
mov
inc
imul
and
jno
insb
push
mov
cltd
icebp
mov
fisubs
sub
cmpsl
aas
ds
adc
sbb
xor
ficoml
pop
ret
jno
cmp
insl
icebp
shl
adc
into
xchg
mov
repz
push
ss
push
fisttpl
adc
jno
int
arpl
or
sbb
ja
pop
xchg
pop
jmp
mov
push
mov
push
cs
addr16
pop
pop
loopne
aas
jns
subb
mov
jmp
and
das
jmp
mov
push
addr16
pushf
adc
fldenv
stos
push
shr
xchg
cmpsl
pop
pushf
sub
sti
sub
fadd
xchg
or
outsl
xlat
inc
inc
add
cmc
jnp
xor
mov
mov
xchg
lret
imul
in
pop
lahf
nop
mov
out
sbb
mov
sbb
out
fstps
scas
push
and
xchg
mov
lret
mov
lea
pop
out
add
push
fcos
pop
outsl
mov
mov
push
icebp
cmp
pop
xchg
fldcw
or
or
mov
mov
sub
add
sub
or
adc
or
or
pop
fldcw
add
mov
lods
in
aaa
test
or
cltd
es
sub
cs
pusha
push
in
add
or
mov
mov
inc
mov
jne
prefetch
push
pop
imul
pushf
sub
stc
push
or
dec
mull
bound
andl
imul
stos
frstor
imul
mov
mov
inc
aam
jbe
flds
push
jae
es
add
add
mov
jne
dec
mov
sbb
add
push
daa
orl
daa
sbb
and
inc
add
jge
sbb
adc
ja
dec
jl
inc
js
ret
adc
cmp
sahf
in
jge
add
jno
into
sahf
scas
inc
or
and
outsb
mov
adc
arpl
shll
jge
adc
pusha
arpl
xchg
arpl
mov
mov
add
push
sbb
pop
or
jae
ret
pop
and
lds
into
mov
aas
sbb
dec
popf
ss
sub
divb
mov
stos
dec
xor
fwait
lea
cmpsl
and
dec
les
cmpsl
pusha
insl
dec
add
push
cmp
dec
rorl
push
or
adc
and
inc
shll
movsb
jne
je
fistps
loope
mov
xor
jbe
push
jl
loopne
xchg
pop
sbb
jge
mov
imulb
sub
add
cmp
jp
xor
out
in
insb
inc
sbb
mov
lcall
mov
imul
loop
fucomp
sbb
push
pop
dec
add
stos
cwtl
jle
mov
lods
sbb
test
jbe
loope
cli
lods
sti
jecxz
mov
cmpsl
jp
fistl
fisubrs
testl
mov
sub
loop
dec
jmp
add
pop
fcomps
mov
sbb
fdivr
outsw
push
cmc
test
in
inc
lea
subb
fstpt
cmp
icebp
mov
ljmp
and
mov
aad
add
add
mov
or
fildl
dec
mov
mov
les
sub
pop
mov
aaa
add
xchg
lret
or
test
aas
fdivl
add
pop
add
fnstenv
jbe
push
add
dec
add
inc
mov
pop
fnstsw
movb
test
or
ljmp
sub
jne
push
add
lds
gs
push
lods
xor
lods
sbb
mov
pop
mov
add
dec
mov
and
aam
pop
mov
sbb
xchg
push
or
mov
lea
ficoms
dec
jmp
or
xchg
sub
sub
push
cs
shll
outsb
lahf
pushl
movsl
or
jle
sbb
gs
mov
test
mov
sbb
mov
dec
jle
jnp
std
mov
xor
insb
ret
xor
pop
add
add
pop
mov
lret
jnp
adc
ficoml
es
movsb
xchg
mov
add
lcall
test
cmp
cmp
pop
cmp
xchg
xchg
mov
fiaddl
add
adcl
mov
inc
out
sti
inc
outsl
mov
or
inc
push
jge
je
cmp
push
cs
sbb
nop
push
xor
outsl
lods
in
cmp
inc
outsb
xor
sbb
fidivrs
movsl
loope
mov
lea
popa
xlat
out
aaa
jno
bound
cmp
cld
aam
dec
mov
push
add
dec
lret
fistpl
repnz
inc
outsl
int3
add
int
add
dec
dec
cmp
notb
sub
cmpsb
cmp
in
mov
xor
push
xchg
sub
fcmovnb
popl
or
cmpsb
push
jp
add
insb
addb
push
mov
sub
dec
xor
cmpb
mov
pop
pop
mov
aad
adc
pushf
fcoms
ljmp
pop
mov
lcall
push
inc
in
cmp
pushf
xchg
jns
xchg
add
inc
sub
cmp
out
adc
cmp
mov
outsb
mov
add
out
add
les
ss
popa
jl
inc
or
jecxz
lods
aas
rol
mov
shlb
sbb
aas
call
sbb
dec
enter
fs
ficomps
jp
fldenv
adc
jns
gs
adcl
add
addr16
outsb
mov
movsb
mov
add
fildl
mov
scas
cmp
enter
xor
inc
addl
sbb
add
test
stos
jle
mov
pop
inc
add
fistpl
sbb
pop
and
je
mov
adc
mov
nop
mov
in
mov
loop
popf
push
sbb
test
call
cmp
sbb
test
inc
shll
shlb
push
add
daa
lock
es
jmp
mov
jecxz
jmp
insl
insb
loopne
roll
fcoms
inc
pop
sti
dec
jae
inc
out
mov
push
lahf
mov
jns
iret
dec
or
sahf
jne
fisttpl
lods
aam
pop
mov
mov
lods
xchg
jne
std
shrb
jae
mov
fwait
js
test
sbb
ss
jo
fcoml
pop
pop
and
out
inc
mov
or
push
inc
xchg
xchg
mov
or
pop
lods
push
sub
loope
add
popa
lahf
sbb
jnp
add
shl
xchg
pop
sub
jbe
stos
insl
mov
pop
in
fimull
ret
dec
adc
sbb
sbb
pop
add
arpl
ja
jo
and
mov
mov
les
xor
adc
jmp
movsl
test
imulb
cmpsb
inc
decb
dec
rcrl
mov
or
dec
shrb
mov
out
and
adc
arpl
mov
inc
and
test
popf
arpl
fildll
push
stc
sbb
pop
insb
das
fstpl
out
add
jle
popf
mov
int3
jne
mov
push
inc
sub
int
and
das
xorl
insl
sbb
dec
adc
leave
mov
add
es
test
je
out
push
pop
sub
cmp
outsb
jmp
mov
mov
sbb
add
mov
adc
push
sbb
xor
or
mov
jo
cmpsb
xor
jo,pt
xchg
out
mov
vorps
lea
mov
ret
fisubs
pop
pop
popa
jo
outsl
aad
push
jle
adcl
clc
mov
xor
fildll
loopne
jno
push
push
cmpsb
unpcklps
movsl
sbb
int
lods
mov
add
mov
mov
xor
into
leave
scas
xchg
dec
mov
test
notl
data16
dec
mov
mov
pop
ret
mov
mov
psubb
adc
jns
pop
xchg
xorb
js
fsin
mov
inc
adc
aam
mov
stos
insb
pusha
cmp
js
jp
mov
pop
int3
lret
out
mov
dec
push
je
add
xor
cltd
sti
divb
mov
jl
dec
pusha
xorl
xor
into
mov
push
repz
push
fisubrl
push
push
loope
inc
imul
mov
fldenv
lods
test
in
and
and
push
popa
bound
int
repz
mov
mov
dec
fcoml
pop
in
int
xchg
jge
ficoml
mov
data16
inc
cs
arpl
push
mov
sub
pop
dec
ds
dec
pop
data16
jb
hlt
or
mov
mov
push
sahf
adc
cwtl
jnp
cmp
add
jnp
shll
xor
mov
js
rcr
and
dec
push
jnp
aad
cmp
js
testb
push
loope
movsl
xor
push
mov
and
add
insl
mov
push
mov
test
push
cltd
jne
pop
jno
ficompl
sti
movsb
scas
sub
add
xor
or
xor
mov
xor
subl
in
mov
mov
shrl
mov
mov
inc
adc
outsl
fwait
icebp
insb
jecxz
xor
cmp
xchg
insl
data16
into
loop
fucomi
mov
adc
fcmovnu
fcmovnb
insl
and
inc
lock
fsubr
lds
fcmovnbe
mov
fcoml
pop
pop
ds
mov
loop
jne
xchg
pop
mull
int
adc
into
sub
cmpsb
rolb
insb
out
pop
addr16
add
adc
shl
loop
xlat
mov
inc
jnp
shlb
cmp
loope
pop
and
mov
iret
test
mov
ret
jbe
call
mov
outsb
shl
clc
adcl
rcrl
popa
mov
out
mov
fmulp
and
xor
loope
rorl
mov
je
add
rorb
lcall
sbb
sub
xchg
aam
rcrl
sbb
aam
xchg
sbb
inc
mov
inc
dec
shrb
rolb
jne
lea
jnp
divb
outsl
je
in
lcall
xor
addr16
jns
inc
push
in
add
shrl
mov
lds
inc
sub
in
sub
sbb
rol
mov
shlb
lods
adc
sub
test
mov
pop
sbb
ret
jbe
inc
pop
cwtl
dec
ja
cmp
sbb
xor
jo
test
inc
cmc
mov
lods
jge
loopne
xor
or
andl
movsl
adc
sub
push
ffree
ret
ds
int3
xor
sbb
fadds
xchg
aaa
subl
insb
inc
jg
and
dec
add
cli
rcl
jo
sbb
sahf
mull
push
pop
lods
int3
add
adc
mov
sub
adc
test
and
mov
mov
frstor
out
sbb
sub
mov
popf
lods
jbe
inc
scas
and
mov
xor
push
mov
cmp
shl
popf
sub
or
pop
push
ja
mov
sub
mov
sbb
outsb
jnp
js
jmp
mov
lea
cmp
mov
dec
adc
xchg
xor
xor
or
jl
mov
pop
fcom
ficompl
and
flds
lock
sbb
nop
cli
mov
inc
loope
pop
adc
loope
shlb
xchg
xchg
pop
mov
mov
mov
out
jae
sbb
add
in
pop
loopne
jl
inc
jae
or
jle
in
frstor
lea
jnp
test
hlt
insl
iret
ss
adc
push
push
add
enter
mov
mov
jle
mov
mov
inc
ljmp
sub
fsubrs
out
sbb
mov
fcomps
sbb
shlb
jecxz
inc
fstps
loope
inc
mov
outsl
mov
fucomi
loopne
std
push
std
xor
mov
out
inc
mov
shl
sbb
into
push
clc
dec
mov
xchg
and
mov
loop
dec
cmp
shl
sbb
ror
mov
insb
pop
push
outsl
adc
push
rcrb
sahf
lret
adc
pop
int3
mov
inc
adc
js
sub
shl
vmulps
xor
push
jp
and
insl
bswap
jne
xchg
decl
shrl
fimull
sub
sub
jp
jge
add
movsl
out
and
adc
inc
jmp
loope
jne
mov
push
adc
mov
call
push
movsb
test
lret
cwtl
lcall
mov
adc
fmull
and
cmp
test
pop
loope
out
popa
les
jnp
icebp
out
jle
mov
bound
inc
jge
xor
data16
sub
adc
outsl
loope
int
into
sub
daa
xchg
and
fiaddl
xchg
insl
jp
cld
fwait
insb
and
rorb
out
xor
jge
cld
js
ret
or
xchg
jb
xchg
ss
in
pop
call
mov
xlat
adc
shl
aad
jmp
mov
adc
insb
les
push
lea
outsl
addr16
pop
imul
fisttpl
add
rcl
rorb
cmp
lods
push
fstpt
mov
sbb
cmp
cs
mov
cmp
cmpsb
mov
push
std
inc
jg,pn
out
popa
scas
mov
fdivrl
jge
xorb
mov
sbb
pop
rcrb
inc
inc
adc
js
mov
scas
cltd
bound
dec
cmp
pop
xor
sbb
fmul
pushf
mov
inc
fldt
lds
dec
sbb
xor
les
lret
sub
jl
jge
jle
push
sbb
xor
jb
aad
mov
mov
sub
jno
pop
mov
jp
lea
xor
mov
dec
sub
aaa
insl
mov
adc
std
sub
aam
popa
pop
loop
outsb
mov
fisubrl
shll
testl
addr16
insb
addr16
ficoms
mov
fnstsw
jmp
sbb
test
out
icebp
stos
mov
mov
pop
mov
shlb
sbb
outsb
out
cmp
jns
addr16
cltd
movsb
cld
mov
flds
add
push
bound
aas
pop
inc
add
push
pop
pop
roll
jnp
xlat
mov
je
xor
shrl
inc
mov
mov
fidivrl
inc
pop
cltd
stos
adc
dec
lds
addr16
pop
test
sti
xchg
mov
pop
jle
orb
movsl
rcr
je
inc
out
lock
dec
outsl
imul
sub
push
jecxz
mov
mov
and
cltd
push
imul
arpl
test
imul
aam
shlb
icebp
mov
or
dec
or
test
push
outsb
test
jae
mov
add
test
mov
adc
cs
or
loop
sbb
and
and
iret
leave
je
jo
sbb
push
jp
and
hlt
loopne
fistps
popf
mov
rorl
pop
jbe
mov
cli
push
sbb
mov
xor
xchg
mov
add
push
shll
fistpl
xchg
add
subl
stc
and
outsl
jbe
jbe
out
jns
orb
loop
out
sub
mov
and
outsl
push
jp
cmp
outsl
bound
cltd
push
and
lods
insl
in
inc
mov
xor
roll
mov
insb
insl
loope
pop
dec
test
push
or
jnp
push
sub
jmp
pop
mov
xor
ss
mov
jmp
jns
lret
cld
jecxz
xor
push
int
hlt
jg
repz
or
sbb
gs
dec
aad
ss
and
sub
dec
xchg
dec
shlb
mov
mov
leave
out
xor
leave
mov
xchg
mov
mov
xchg
ret
jne
push
or
inc
cltd
sub
lcall
sub
jmp
sub
dec
or
sub
aas
orl
in
sbb
insl
xor
push
sub
rep
xchg
lret
repz
loop
xor
cltd
xor
mov
jbe
insl
jo
cld
ljmp
pop
pop
sub
add
sbb
orl
mov
inc
aad
jbe
cld
cmpb
ds
lret
jo
mov
sti
sbbb
push
push
fyl2xp1
cld
mov
pop
enter
inc
cmp
or
pop
stc
mov
add
mov
or
addr16
pcmpgtd
mulb
inc
sub
pop
xor
push
dec
frstor
mov
jp
push
mov
pop
sbb
stos
stc
pop
add
aas
and
sbb
jecxz
enter
fmuls
dec
lods
ja
pop
mov
xchg
ficoms
insl
std
jl
lock
pushf
insl
inc
sbb
rclb
in
dec
out
shlb
sbb
and
cmp
daa
jo
add
or
fsubrs
roll
subl
sbb
js
push
sbb
or
cmpsl
lret
jo
cmp
mov
js
mov
push
cmp
sub
fimuls
jae
jge
pusha
xor
outsl
pop
xchg
sub
jge
gs
add
push
xor
cs
jne
jle
adc
out
adc
jnp
lock
add
jl
insb
data16
dec
push
ja
sbbl
loope
or
and
test
dec
cltd
sbb
mov
dec
or
out
push
xchg
pop
add
cmp
mov
fst
add
loop
cwtl
cmc
std
xor
pop
popa
daa
in
fdivrl
mov
imul
mov
fcmovnb
lahf
jge
outsl
inc
outsl
push
sbb
js
rcrb
adc
fwait
js
nop
add
cmpsb
jg
stos
repnz
xchg
jmp
jmp
bound
sbb
outsb
mov
sbb
push
lds
mov
cmp
outsb
mov
cmp
mov
outsb
aam
fdivs
add
mov
dec
addr16
popa
sarb
cld
adc
xor
fs
or
aaa
jl
push
dec
cmp
pop
bound
movsb
or
ret
push
sub
adc
into
aas
or
or
data16
imul
pop
int
icebp
mov
jno
mov
mov
dec
adc
push
sarl
mov
mov
mov
in
jmp
mov
das
insb
and
cltd
dec
aas
shll
mov
inc
movsl
rcll
xchg
call
faddp
divb
sub
push
push
es
int3
mov
fistl
fiaddl
sub
add
mov
fimuls
dec
dec
xchg
pop
lea
adc
ljmp
and
xchg
in
push
and
ja
inc
out
sbb
data16
cmp
out
test
mov
or
adc
std
out
test
dec
lds
ret
xor
pop
insl
dec
loopne
xchg
mov
sbb
cli
lods
lods
or
dec
sbb
dec
xor
jae
xor
cmpsl
jne
jbe
xor
mov
pop
sti
mov
mov
xchg
add
test
xor
sbb
mov
out
sbb
scas
mov
mov
aas
add
ficoms
je
arpl
jnp
into
mov
xor
jo
lods
mov
rcl
mov
jne
in
cwtl
cmpsb
mov
test
xor
lret
sbb
clc
mov
decb
pushf
push
pusha
enter
push
xchg
subl
pop
jecxz
insl
xor
repz
es
arpl
jle
sbb
lds
call
sbb
cmp
sub
mov
rolw
or
nop
in
jge
pop
cli
push
jmp
mov
and
or
popa
dec
gs
fisttpll
mov
mov
je
in
lahf
sub
pop
mov
jmp
into
hlt
es
loope
div
add
js
push
mov
hlt
xchg
popa
jnp
cmp
push
cmp
mov
aaa
fs
aad
add
xchg
or
xchg
mov
cltd
scas
sub
out
jp
xor
ds
and
imul
pop
stos
test
mov
daa
test
xchg
iret
dec
testl
jne
mov
call
mull
inc
mov
fstpt
adc
push
test
jg
fistl
cli
loope
fwait
lea
dec
test
xor
fstpl
or
shlb
add
cld
jns
xchg
mov
jle
sbb
mov
pop
test
mov
pop
nop
jmp
rorb
es
sbb
mov
mov
jmp
imul
je
lods
aad
jnp
sbb
xor
push
imul
fsubrl
sub
jb
or
xor
div
fwait
leave
cmp
rorl
inc
inc
adc
and
mov
sbb
cmp
pop
movsb
mov
fcomp
mov
fidivrs
ja
push
mov
push
adc
pop
pop
mov
inc
daa
das
lods
outsb
push
ljmp
fisubrs
inc
add
adc
adc
int3
xchg
xchg
mov
out
mov
out
cs
sub
icebp
cmp
cs
and
mov
mov
add
xchg
xor
dec
xchg
test
pop
ss
inc
cmp
push
lds
inc
outsl
sbb
das
lahf
fcompl
ret
outsb
xor
adc
jmp
mov
in
rol
out
dec
outsb
mov
es
sub
fbstp
fsub
call
jg
arpl
fdivs
shll
mov
ret
icebp
out
call
mov
xchg
dec
fisttpl
and
outsb
jmp
and
or
dec
add
jns
xchg
sub
iret
mov
ret
or
aam
inc
jne
outsl
jp
data16
mov
out
pop
jle
fmuls
cmp
sbb
jb
xchg
dec
push
add
pushf
jge
cmpsb
dec
movsb
xchg
mov
pop
cmp
push
jo
mov
sbb
push
and
js
je
arpl
aas
mov
call
mov
lds
pop
sbb
jbe
ret
mov
add
rcrb
std
xor
lds
lds
movsl
lods
sub
aad
pop
jge
pop
popf
xchg
loopne
sub
std
or
xchg
test
mov
xchg
jbe
rorl
lret
push
inc
fildl
fs
insl
in
loope
dec
and
mov
fdivs
mov
xchg
push
jge
lods
aam
clc
jbe
push
movsb
pop
lahf
out
mov
je
mov
sbb
pop
mov
jp
popf
mov
lret
outsb
xor
or
cwtl
shl
push
rorl
and
gs
pusha
cmp
xchg
sub
or
ss
loop
jle
mov
mov
call
dec
cmp
mov
jle
je
cs
or
or
lcall
xor
sbb
orl
ss
in
insb
dec
mov
test
jge
in
pusha
sub
ret
popf
je
sub
das
mov
sub
inc
mov
push
fistpll
mov
push
sub
aaa
dec
pop
push
pop
jae
cs
sbb
cmpsb
xchg
bound
in
xchg
adcl
pop
xor
and
push
fidivrl
xor
test
mov
pop
xchg
outsl
pop
jp
sub
mov
jge
adc
or
js
or
insl
cmc
jg
sti
andl
push
xchg
jmp
stos
xchg
sbbb
repz
cmp
push
inc
xor
add
xchg
shrl
push
or
or
push
adc
cmpsb
idivl
or
daa
sar
enter
push
out
fldt
daa
and
adc
sbb
add
xor
iret
shr
dec
add
or
mov
repz
cs
xor
dec
mov
or
xor
sti
inc
mov
cmpsl
stos
pop
mov
out
xchg
xor
add
push
iret
aas
mov
adc
xor
pop
or
in
fs
or
sub
add
inc
sti
xchg
es
inc
xor
add
stos
add
add
and
mov
and
push
fidivrl
ret
adc
inc
mov
aaa
fldl
pop
aas
pop
outsl
cmp
and
xchg
aas
pop
divl
lea
adcl
das
fstps
fsubrp
push
enter
sti
jge
mov
ds
pop
ds
iret
icebp
lcall
stc
inc
sbb
add
sbb
or
es
aaa
fbstp
cmp
pop
mov
pop
add
pop
sti
jle
inc
cmp
cmpsl
sub
sbb
fisubrs
xchg
add
insb
fs
fwait
adc
repz
sti
aaa
jp
mov
ret
or
xor
sub
sbb
sbb
cld
scas
add
mov
jge
cmpsl
add
das
lret
fincstp
adc
xor
sbb
inc
out
jmp
or
adc
cmp
xlat
sub
or
cmp
lret
push
aas
cmp
cmp
sbb
data16
or
lret
push
push
aaa
idivb
ja
divl
mov
jecxz
rcrb
dec
lret
daa
cmp
sti
into
fdivs
jbe
sub
out
out
cmp
push
xor
sub
push
fwait
cmp
jnp
arpl
mov
ja
bound
int3
cmp
aaa
aam
fsubs
mov
push
mov
or
add
sbb
negl
mov
add
push
mov
pop
sysret
add
jge
ret
pop
test
xor
push
pop
jge
or
ja
jae
test
notl
jnp
inc
and
sbb
and
negb
cmpsl
lret
pop
arpl
addr16
mov
dec
repz
cli
xor
adc
xor
pop
mov
pop
imul
push
dec
adc
jnp
push
adc
jnp
pusha
aas
jl
push
syscall
xchg
out
jmp
jb
adc
add
sbb
fdiv
movl
push
fcomp
fincstp
sub
dec
inc
push
push
pop
sub
push
fiadds
add
into
lcall
add
outsl
in
ret
and
sbb
add
lret
sub
or
or
add
or
add
popf
jge
notl
jecxz
push
push
repz
xor
xor
ret
sarl
divl
add
arpl
add
mov
scas
jnp
outsl
or
add
mov
dec
sub
out
dec
add
ss
lea
sub
lock
lahf
popf
mov
add
inc
xchg
cmp
adc
dec
push
adc
xor
jae
loope
and
adc
clc
pop
sub
mov
into
add
das
repnz
int3
daa
mov
cwtl
jne
inc
das
scas
push
adc
jb
mov
insl
mov
inc
cmpsb
adc
xchg
adc
adc
push
adc
pop
rolb
ret
add
or
push
aas
sub
out
adc
jbe
andl
test
in
in
pop
sbb
outsl
cmpsl
aaa
mov
inc
and
push
jae
pop
ja
add
add
imul
push
inc
add
mov
mov
pop
inc
mov
pop
jle
mov
mov
or
jmp
xor
add
and
in
pop
push
fistpll
lahf
iret
data16
xor
cmp
outsl
lods
andb
popl
sub
adc
jmp
xchg
push
ss
xchg
divl
add
xorl
daa
push
push
inc
add
xor
lret
jle
lret
inc
add
dec
or
cmp
cwtl
dec
sbb
sarl
push
mov
push
lcall
adc
or
test
mov
sub
ss
loop
and
repz
shrb
pop
sub
and
and
mov
mov
adc
adcb
aaa
jmp
fcmovnb
fiaddl
sbb
fisubrs
gs
rcr
scas
or
sbb
add
lea
mov
in
or
dec
das
or
add
repnz
sbb
sub
sbb
pop
sub
ficoml
mov
in
adc
add
add
pusha
adc
fcoms
lcall
gs
orl
mov
sbb
enter
sahf
icebp
into
lock
out
lret
dec
jge
sbb
stc
add
fsubrs
inc
fsubl
out
insb
push
or
stos
mov
inc
pop
cmp
and
inc
cli
stc
sbb
add
xor
jge
mov
les
jg
es
cmp
mov
fstps
xchg
movsl
ds
push
mov
push
jl
mov
sub
fidivrs
add
mov
xchg
xchg
rcrl
and
mov
fisubrl
out
fsts
mov
jle
lock
inc
xorl
fmulp
mov
in
fadds
pop
or
out
push
ret
addl
ror
lea
fdivr
and
fdiv
dec
data16
pop
or
xchg
sbb
fsubrs
push
fs
sub
jne
xor
data16
add
xchg
jne
xor
push
sbb
outsl
xchg
jo
or
cmp
addr16
and
sbb
sub
inc
jnp
and
imul
jmp
dec
jb
insb
ss
and
xlat
les
xchg
test
and
sbb
push
in
shll
enter
inc
in
and
loop
cs
stos
test
sbb
push
push
inc
mov
ja
inc
sbb
test
int3
jmp
xor
push
cmp
inc
cmpb
push
in
pop
popa
popf
ljmp
xchg
lods
or
lret
xchg
or
fcompl
mov
ret
xchg
mov
aaa
testl
mov
inc
ud0
mov
sub
inc
ds
xchg
xchg
daa
sub
cmp
or
adc
adc
andl
pop
pop
daa
mov
cmp
xor
int
sbb
ja
and
pop
xor
adc
mov
pop
scas
pop
mov
cmpsb
mov
sub
xchg
ror
mov
cmp
test
adc
sbb
fwait
xchg
inc
loopne
ret
or
sub
mov
fsubl
ret
fiadds
sti
cwtl
cs
ret
and
and
and
addb
aaa
aaa
outsl
dec
outsb
push
lock
mov
or
cmc
adc
ret
adc
pop
out
int3
or
pop
jb
sbb
inc
subb
adc
add
testb
mov
adcl
lods
push
test
sbb
push
dec
push
pushf
pop
xor
fwait
popf
in
in
mov
dec
xchg
sbb
mov
mov
cmc
popf
scas
sti
into
aas
and
lds
and
comiss
aad
jbe
mov
aad
sub
mov
and
sub
fcompl
leave
and
sub
in
insb
adc
add
imul
mov
pop
dec
inc
addr16
hlt
dec
sub
add
test
pusha
insb
xchg
jae
mov
aam
addb
dec
mov
dec
push
pop
aaa
xor
shlb
in
add
sbb
inc
add
ss
mov
sub
insb
ret
mov
and
scas
dec
dec
fwait
jbe
sbb
adc
xchg
mov
ja
les
into
bound
sahf
test
daa
aaa
sbb
xchg
pushf
test
pusha
adc
or
and
pop
leave
push
scas
roll
and
pop
test
xor
adc
sbb
dec
dec
dec
push
and
in
and
dec
fcoml
jbe
jne
xchg
or
and
push
push
leave
lret
and
jno
xchg
fldenv
arpl
cs
or
add
insb
inc
add
sbb
jle
cmp
or
clc
mov
movsb
filds
mov
icebp
into
mov
xchg
adc
dec
ljmp
sub
fildll
sbb
push
adc
and
ret
leave
jo
std
bound
shrb
adc
adc
test
insl
dec
adc
sub
mov
ja
dec
dec
sub
pop
and
inc
add
xor
push
outsb
or
sbb
sbb
test
add
mov
push
jnp
test
mov
adc
daa
lahf
cmp
xchg
xchg
sub
add
cmpsl
fnstenv
and
fdivs
fsubs
leave
and
fistps
mov
pop
aas
jmp
sub
jg
popa
in
pop
out
sbb
pop
cwtl
dec
std
push
out
les
or
sti
rol
dec
loopne
js
lret
int3
add
stos
and
fs
push
cltd
xor
pop
and
out
cmp
mov
add
add
fadd
mov
mov
ja
popf
sub
adc
xchg
inc
jb
inc
pop
pop
inc
add
loop
xor
cmp
dec
mov
add
xor
pop
xchg
scas
and
call
outsl
push
mov
sti
out
pop
ret
fwait
push
adc
cmp
or
or
cwtl
bound
push
cvtps2pd
push
xchg
push
mov
dec
movsl
ja
xlat
pusha
fnstenv
push
cmc
adc
add
dec
adc
mov
mov
shr
jp
inc
push
xor
pop
jae
cmp
rorb
add
fidivs
or
ja
scas
push
push
adc
and
fisubrs
testl
fsubr
cmc
ja
lea
addb
sbb
xorb
jae
cmp
xchg
jo
inc
sbb
divb
fwait
push
add
repz
cmp
stc
int
sbb
sbb
xchg
pusha
push
cmp
ss
and
xor
in
add
inc
xor
arpl
fisttpll
and
adc
add
sbb
popa
adc
pop
push
mov
add
mov
pop
add
pop
sub
add
pop
add
out
es
add
popa
or
add
bound
in
in
and
jae
cmp
add
scas
jmp
clc
push
mov
xlat
sbb
jns
pop
jae
fsts
add
or
add
testl
in
or
sub
or
scas
mov
leave
fiadds
ret
add
push
sub
xor
or
or
push
and
xor
xor
and
insb
pop
add
pop
aaa
push
rcll
xchg
and
mov
stos
add
arpl
add
xor
xorb
lds
int
aas
sbb
push
sti
into
xor
sti
push
int
out
add
and
sbbb
add
sub
add
fs
add
xchg
clc
inc
mov
add
fidivrs
mov
add
add
bound
or
add
mov
inc
dec
mov
push
sbb
inc
leave
push
dec
push
je
sbb
push
push
mov
jbe
add
inc
sbb
push
add
lods
lock
dec
push
push
push
roll
push
inc
sub
mov
aas
add
dec
dec
and
adc
adc
insl
test
mov
and
bound
sbb
pop
inc
jbe
jge
divl
push
jbe
je
push
jne
jne
jae
jae
push
push
and
fsubrs
add
jo
jae
cmp
addr16
jb
outsb
mov
outsb
jmp
jge
jae
dec
inc
sub
fistpl
inc
adc
and
int
pushf
popa
out
add
dec
add
xchg
jg
sbb
scas
cmp
jnp
and
push
inc
negl
das
fsubs
adc
fcomps
stos
sbb
in
repnz
add
inc
push
inc
dec
and
shl
cli
stc
outsb
insl
add
or
jns
imul
or
mov
dec
pop
fwait
mov
lock
jp
pop
jmp
push
adc
outsb
jp
fisubrl
cmpsb
and
inc
rcrb
dec
mov
pop
dec
sbb
data16
stc
clc
out
pop
cmc
pop
loope
rorb
in
popa
cmp
fs
dec
jb
jb
dec
cmp
call
js
jo
outsb
addr16
sbbb
add
push
test
decb
jbe
or
or
and
aaa
ret
out
je
negb
sbb
adc
mov
or
testb
and
lea
movb
ret
addb
xchg
mov
inc
insl
jnp
xchg
lcall
ss
or
or
mov
jbe
xchg
adc
jne
mov
arpl
adc
jns
cmp
xchg
push
addr16
push
out
add
gs
add
fiaddl
add
push
inc
imul
data16
ss
mov
data16
mov
adc
add
push
rorb
mov
cs
adc
arpl
inc
sub
mull
testl
movsb
aaa
repz
and
outsb
imul
outsl
lcall
outsb
icebp
sti
jg
pop
mov
cmpsb
popa
repz
pop
inc
icebp
jne
jns
or
add
repz
mov
jne
out
pop
cmp
xor
jg
data16
cmp
xor
sbb
add
mov
ret
icebp
jae
jp
xor
add
hlt
stc
mov
pop
clc
hlt
outsb
add
out
arpl
pop
jne
out
pop
or
jae
mov
mov
push
cmpsb
in
xor
in
jecxz
inc
sarb
ljmp
fdivl
out
add
add
cmpsb
rcrb
outsl
pop
xchg
insl
lea
lods
jne
cwtl
add
js
push
dec
bound
inc
insb
add
mov
outsb
pop
in
imul
nop
pop
ret
repnz
mov
scas
rorl
cmp
outsb
pusha
adcb
pop
xor
push
inc
bound
and
add
sub
jo
in
insb
xchg
add
rorl
int3
jo
pop
subl
pop
push
in
sub
push
fwait
ss
inc
push
push
inc
and
sbb
scas
xor
add
test
inc
adc
pop
or
test
ret
das
jbe
cmp
add
sub
int
ja
jge
inc
jle
ss
test
xchg
movsb
or
ljmp
test
pop
mov
std
adc
add
and
lods
jbe
insl
andb
adc
lcall
pop
sbbb
add
xchg
mov
hlt
or
jmp
imul
lock
iret
aaa
cmpsl
xor
sub
dec
inc
shlb
mov
daa
loopne
mov
xchg
les
push
and
xchg
mov
shlb
popa
aam
dec
outsl
test
les
sahf
pushf
sarb
outsb
push
push
xorl
cmpsl
mov
adc
dec
sbb
xlat
fsubs
push
add
gs
bound
pusha
sbbl
mov
push
imul
sub
int
pop
dec
js
dec
js,pt
inc
test
dec
stc
fisttpl
push
mov
out
icebp
pop
push
xor
xor
pusha
sbb
mov
cmp
add
adc
inc
or
xor
popa
mov
push
adc
loope
pop
arpl
data16
jp
jp
rorl
fldcw
pcmpgtb
pop
scas
add
dec
push
inc
daa
loop
ja
fimull
daa
outsb
xchg
pop
inc
int
scas
mov
push
pop
jle
adc
adc
mov
dec
or
cltd
push
pop
and
out
ficomps
push
imul
fs
pop
popa
mov
outsl
aas
jne,pt
insl
jnp
sbb
add
outsl
cmp
sbb
push
popf
dec
cmp
or
inc
push
lock
sarl
lahf
jg
cld
pusha
imul
xchg
daa
es
and
push
add
shrb
leave
sti
testb
jae
dec
push
xlat
push
arpl
sbb
sbb
shll
inc
jns
inc
push
lcall
shrb
cmp
add
xor
imul
mov
inc
lods
inc
adc
push
lods
mov
inc
push
insb
xchg
sbb
jle
xchg
xchg
cwtl
hlt
loope
sbb
inc
or
jg
ret
imul
push
and
mov
xor
faddl
jg
js
dec
dec
inc
popa
dec
add
popf
sub
cltd
mov
dec
cs
dec
mov
or
cmp
jno
dec
dec
scas
add
or
pop
mov
fiaddl
sbb
inc
imul
cmp
pop
xor
dec
adc
adc
cmpsl
cmp
inc
cwtl
stos
sbb
mov
ss
pop
xchg
xchg
nop
dec
iret
mov
fstpt
dec
xor
ret
mov
jg
call
inc
dec
push
jb
imul
push
inc
inc
inc
iret
enter
sbb
ja
push
neg
int3
shlb
fs
ja
sbb
pop
fs
push
enter
sarl
loope
inc
in
les
mov
push
arpl
jl
std
inc
mov
fs
push
fs
inc
add
push
js
jo
xchg
insl
push
push
and
and
int3
mov
sub
ret
into
jb
jge
divb
pop
into
imul
jnp
daa
add
bound
lds
lret
dec
int
insb
pop
mov
ja
pop
xchg
mov
mov
push
test
jne
mov
adc
imul
lcall
jne
jae
dec
iret
dec
xchg
scas
sbb
ds
cmp
data16
test
inc
fisttps
jge
pop
cmp
push
inc
fnstsw
mov
imul
sbb
push
mov
outsl
jb
pusha
insb
bound
shrl
mov
pop
push
add
xor
ds
push
push
pop
push
fmul
dec
jge
dec
sub
sbb
xor
pop
xor
push
or
mov
xor
xchg
push
xchg
push
xor
xor
mov
xlat
pusha
mov
out
sub
out
imul
aam
cmp
push
std
xor
push
xchg
lock
mov
insb
sub
inc
push
dec
push
sbb
mov
into
ret
fadd
mov
push
pusha
sub
push
or
dec
imul
bound
popa
dec
inc
outsl
int3
mov
push
aas
inc
add
push
shll
aaa
cmp
andb
jle
add
dec
push
jb
bound
inc
pop
add
push
mov
add
and
sbb
pop
pop
push
adc
mov
in
es
push
rcll
fldt
aas
rcll
shrb
in
rsqrtps
mov
gs
and
dec
out
icebp
inc
mov
jmp
sub
inc
fadds
mov
mov
xor
cmp
cmp
rol
mov
pushf
inc
xchg
popa
push
enter
outsb
and
xchg
adc
orl
test
push
pop
adcl
ret
add
mov
sub
nop
inc
xchg
mov
push
andl
leave
add
lods
sub
int
inc
adc
insb
repz
or
sub
ret
dec
outsl
add
sub
adc
scas
or
push
sub
adc
lds
int
ret
mov
cmp
mov
mov
xor
add
add
or
fidivl
add
bound
frstor
fisttpl
ltr
pop
cld
jne
mov
add
data16
mov
lods
cmpsl
imul
xchg
dec
sbb
xchg
pusha
cmp
add
and
pop
pop
in
cmp
jae
outsb
jge
icebp
pusha
fildll
adc
sub
imul
sbb
imul
adc
aas
push
push
lret
out
adc
adc
push
movsl
rcll
adc
enter
iret
cmpsl
push
lret
add
lods
mov
pop
movsb
xor
into
jge
dec
xchg
cmpsb
sbb
inc
outsl
xchg
sbb
aad
sub
mov
push
test
cmp
outsb
push
insb
out
push
cmp
imul
inc
insb
sub
cltd
test
cmp
test
push
xchg
test
or
subl
cmp
jl
lock
pushf
add
movb
addl
test
push
ret
ret
sub
or
hlt
mov
fistl
lret
jbe
push
adc
pop
test
or
push
pop
and
pop
repnz
fldlg2
or
mov
inc
mov
les
inc
ficompl
lea
call
mov
ja
pusha
std
lds
pop
add
sbb
popf
inc
sub
add
movsl
jae
or
pop
bnd
sbb
scas
jg
das
add
pop
cmp
mov
or
adc
loope
inc
push
pop
pop
mov
pop
dec
adc
xor
sbb
inc
dec
movsl
or
jle
rorb
pop
dec
adc
pop
insl
fwait
mov
ds
and
xor
mov
dec
jno
inc
lahf
mov
mov
sub
in
ja
int3
push
sub
mov
pop
mov
fnstenv
cmp
rcrl
fabs
push
jl
pop
add
push
pushf
xor
lods
fs
xor
pop
jp
add
push
test
jbe
push
sbb
adc
xlat
mov
pop
mov
aad
in
outsb
xchg
pop
or
push
push
add
mov
mov
or
jg
inc
adc
inc
cs
dec
or
or
pop
sbb
ss
add
jno
js
or
jp
outsl
push
push
mov
idivb
loopne
sahf
ja
push
dec
adc
fildll
sub
add
xor
cs
pop
or
imul
imul
dec
mov
dec
jle
dec
sub
push
inc
pop
in
jne
rolb
add
mov
test
inc
push
sbb
xchg
add
cmp
mov
add
push
and
sbb
dec
push
inc
push
or
adc
push
dec
add
pop
js
sbb
lods
xchg
adc
cmovle
andb
cli
push
enter
cltd
sub
inc
push
push
test
movsb
bound
imul
stos
cwtl
mov
adc
pusha
pop
mov
mov
and
and
and
mov
pop
or
inc
adc
xor
rorl
dec
sub
push
inc
fwait
icebp
pusha
sub
int
les
sar
stos
aaa
add
inc
add
cmp
lds
aad
daa
jae
sub
sti
or
pop
sbb
jb
pop
das
or
inc
inc
push
dec
es
adc
push
jbe
sbb
mov
dec
shl
inc
outsl
jb
inc
enter
adc
sbb
ret
dec
inc
xor
fsts
jb
jo
subb
or
sbb
scas
in
dec
adc
inc
outsb
or
inc
out
clc
pop
mov
pop
enter
psubq
arpl
jne
aaa
and
xchg
mov
mov
or
imul
add
adc
out
cmp
dec
inc
and
adc
jecxz
ss
sbb
mov
add
or
fsubs
xchg
dec
sbb
and
and
pop
sarb
jb
and
mov
sahf
leave
sub
sbb
imul
adc
lods
add
sub
and
and
and
and
push
imul
cs
mov
leave
mov
arpl
ficoml
and
sahf
mov
test
mov
mov
mov
mov
mov
arpl
in
inc
xchg
pop
xor
push
and
xchg
repz
in
leave
xor
cltd
mov
add
cli
add
dec
cmpsb
cmp
inc
mov
add
mov
jb
mov
daa
and
mov
pop
adc
rolb
add
sbb
fmuls
inc
lea
sbbb
sub
xor
fs
or
push
or
fsubs
add
insb
jae
jb
outsb
inc
icebp
mov
scas
push
jb
je
arpl
pop
push
push
mov
daa
subl
push
cmova
test
mov
add
jg
cmovle
bound
dec
inc
outsl
outsb
jae
jp
aas
push
jae
outsl
jne
gs
jne
je
pop
imul
std
mov
andps
gs
outsb
je
inc
and
jae
adc
fwait
jns
inc
fs
ret
imul
sbb
ja
outsb
jne
jns
pop
ja
gs
pop
jae
inc
daa
adc
jae
cmp
addr16
imul
pusha
lods
jbe
dec
push
outsl
inc
imul
popa
outsb
fs
or
insb
xor
enter
inc
enterw
cmp
pushw
gs
jne
jns
xor
test
in
add
push
popa
pop
mov
inc
push
jne
inc
jb
and
sahf
data16
ja
fstl
lds
jne
je
mov
or
sub
mov
insl
fistl
inc
insl
mov
mov
in
imul
mov
push
inc
arpl
push
outsb
xor
addr16
jae
adc
and
in
insb
arpl
je
outsl
ja
sbb
dec
mov
jo
push
ljmp
or
or
fldl
mov
sbb
dec
jae
std
data16
gs
loopne
jnp
jae
inc
insl
jo
jns
divb
or
sbb
cmp
sbb
mov
imul
dec
packuswb
push
paddsw
jne
xchg
dec
pmulhw
push
inc
sub
sub
clc
insl
jp
jnp
insb
jae
jae
daa
jo
and
lods
sbb
pop
sub
push
in
insl
mov
stos
imul
or
out
je
test
jae
jb
inc
adc
ja
sub
push
idiv
xor
jae
pushf
push
imul
in
push
inc
add
add
pop
inc
sub
add
sbb
pop
push
add
fwait
jge
adc
jo
inc
or
add
pop
xchg
outsl
push
pop
or
cmp
in
int
adc
pop
xor
add
lcall
sub
decb
addb
dec
add
pop
insb
repz
dec
inc
inc
fcompl
jmp
and
mov
inc
inc
push
inc
cmp
add
loop
lret
test
pop
jbe
rolb
in
or
inc
add
cs
out
in
ret
int3
popa
add
jo
push
scas
ret
in
sar
subb
inc
push
jae
xchg
jo
test
inc
dec
daa
add
ja
add
adc
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
