jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
cmp
popa
xor
cmp
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
movl
mov
push
push
call
cmp
jg
mov
mov
lea
jmp
dec
inc
dec
jmp
mov
xchg
inc
dec
mov
dec
cmp
jne
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
xchg
mov
xchg
mov
lea
dec
mov
push
push
call
cmp
jns
xchg
lea
xchg
mov
xchg
mov
mov
inc
mov
xchg
mov
mov
mov
mov
lea
inc
xchg
lea
lea
mov
xchg
xchg
lea
movl
mov
push
push
call
cmp
jle
mov
jmp
mov
inc
mov
mov
lea
mov
lea
mov
xchg
inc
mov
xchg
mov
dec
cmp
je
lea
jmp
mov
inc
mov
lea
xchg
lea
lea
lea
lea
dec
inc
inc
movl
mov
push
push
call
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
xor
mov
cmpl
jbe
mov
test
jbe
mov
movl
mov
add
mov
dec
shl
add
mov
mov
mov
add
push
mov
push
call
test
jne
mov
add
mov
dec
add
add
mov
mov
movzwl
mov
jmp
incl
decl
jne
jmp
mov
sub
mov
mov
add
mov
shl
add
mov
mov
mov
add
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
jle
mov
jmp
mov
inc
mov
mov
lea
mov
lea
mov
xchg
inc
mov
xchg
mov
dec
cmp
je
lea
jmp
mov
inc
mov
lea
xchg
lea
lea
lea
lea
dec
inc
inc
mov
cmp
je
call
ret
cmp
jg
mov
mov
lea
jmp
dec
inc
dec
jmp
mov
xchg
inc
dec
mov
dec
cmp
jne
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
xchg
mov
xchg
mov
lea
dec
mov
xor
divl
test
jne
cmp
jns
xchg
lea
xchg
mov
xchg
mov
mov
inc
mov
xchg
mov
mov
mov
mov
lea
inc
xchg
lea
lea
mov
xchg
xchg
lea
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
cmp
jne
jmp
mov
mov
mov
lea
mov
dec
dec
lea
mov
xchg
mov
mov
mov
xchg
xchg
mov
mov
xchg
mov
xchg
mov
mov
lea
lea
dec
inc
inc
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jp
mov
mov
mov
lea
dec
mov
cmp
jns
xchg
mov
mov
mov
mov
mov
mov
inc
inc
dec
dec
inc
inc
lea
xchg
lea
mov
mov
mov
xchg
jmp
xchg
mov
inc
xchg
inc
mov
cmp
je
ret
cmp
jo
xchg
mov
lea
lea
xchg
mov
lea
dec
inc
mov
mov
cmp
jno
mov
mov
mov
mov
mov
mov
mov
lea
mov
dec
dec
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jl
mov
mov
mov
mov
xchg
inc
dec
cmp
jbe
mov
mov
lea
mov
lea
xchg
dec
inc
mov
dec
dec
mov
mov
lea
xchg
mov
lea
mov
mov
xchg
mov
xchg
mov
cmp
je
add
cmp
jo
xchg
mov
lea
lea
xchg
mov
lea
dec
inc
mov
mov
cmp
jno
mov
mov
mov
mov
mov
mov
mov
lea
mov
dec
dec
mov
lea
mov
mov
lea
lea
mov
push
mov
push
mov
push
mov
push
push
call
mov
mov
mov
pop
ret
push
mov
add
mov
cmp
je
mov
movl
mov
cmp
jne
jmp
mov
mov
mov
lea
mov
dec
dec
lea
mov
xchg
mov
mov
mov
xchg
xchg
mov
mov
xchg
mov
xchg
mov
mov
lea
lea
dec
inc
inc
mov
sub
mov
cmp
jl
mov
lea
mov
lea
xchg
mov
cmp
ja
mov
mov
lea
dec
mov
mov
lea
xchg
inc
lea
lea
mov
jmp
mov
lea
xchg
xchg
mov
lea
inc
dec
inc
push
mov
mov
xor
call
mov
cmp
jns
xchg
lea
xchg
mov
xchg
mov
mov
inc
mov
xchg
mov
mov
mov
mov
lea
inc
xchg
lea
lea
mov
xchg
xchg
lea
mov
mov
mov
call
cmp
jp
mov
mov
mov
lea
dec
mov
cmp
jns
xchg
mov
mov
mov
mov
mov
mov
inc
inc
dec
dec
inc
inc
lea
xchg
lea
mov
mov
mov
xchg
jmp
xchg
mov
inc
xchg
inc
push
mov
mov
xor
call
mov
cmp
jg
mov
mov
lea
jmp
dec
inc
dec
jmp
mov
xchg
inc
dec
mov
dec
cmp
jne
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
xchg
mov
xchg
mov
lea
dec
cmp
jle
mov
jmp
mov
inc
mov
mov
lea
mov
lea
mov
xchg
inc
mov
xchg
mov
dec
cmp
je
lea
jmp
mov
inc
mov
lea
xchg
lea
lea
lea
lea
dec
inc
inc
lea
mov
call
cmp
jl
mov
lea
mov
lea
xchg
mov
cmp
ja
mov
mov
lea
dec
mov
mov
lea
xchg
inc
lea
lea
mov
jmp
mov
lea
xchg
xchg
mov
lea
inc
dec
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jo
xchg
mov
lea
lea
xchg
mov
lea
dec
inc
mov
mov
cmp
jno
mov
mov
mov
mov
mov
mov
mov
lea
mov
dec
dec
mov
lea
mov
mov
lea
lea
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jl
mov
mov
mov
mov
xchg
inc
dec
cmp
jbe
mov
mov
lea
mov
lea
xchg
dec
inc
mov
dec
dec
mov
mov
lea
xchg
mov
lea
mov
mov
xchg
mov
xchg
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
mov
mov
mov
mov
xor
push
push
mov
mov
cltd
add
adc
add
mov
mov
mov
cmp
jg
mov
mov
lea
jmp
dec
inc
dec
jmp
mov
xchg
inc
dec
mov
dec
cmp
jne
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
xchg
mov
xchg
mov
lea
dec
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
push
mov
add
mov
mov
cmp
jp
mov
mov
mov
lea
dec
mov
cmp
jns
xchg
mov
mov
mov
mov
mov
mov
inc
inc
dec
dec
inc
inc
lea
xchg
lea
mov
mov
mov
xchg
jmp
xchg
mov
inc
xchg
inc
push
call
mov
mov
mov
call
mov
mov
mov
cmp
jns
xchg
lea
xchg
mov
xchg
mov
mov
inc
mov
xchg
mov
mov
mov
mov
lea
inc
xchg
lea
lea
mov
xchg
xchg
lea
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jl
mov
lea
mov
lea
xchg
mov
cmp
ja
mov
mov
lea
dec
mov
mov
lea
xchg
inc
lea
lea
mov
jmp
mov
lea
xchg
xchg
mov
lea
inc
dec
inc
mov
mov
movl
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jg
mov
mov
lea
jmp
dec
inc
dec
jmp
mov
xchg
inc
dec
mov
dec
cmp
jne
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
xchg
mov
xchg
mov
lea
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jne
jmp
mov
mov
mov
lea
mov
dec
dec
lea
mov
xchg
mov
mov
mov
xchg
xchg
mov
mov
xchg
mov
xchg
mov
mov
lea
lea
dec
inc
inc
mov
pop
ret
add
imul
add
outsb
add
insb
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
mov
xchg
xchg
lahf
lahf
repz
lcall
mov
test
test
repz
xchg
lahf
mov
movsl
xchg
mov
mov
repz
mov
test
pushf
xchg
test
loope
lahf
lahf
repz
repz
repz
mov
repz
repz
repz
repz
repz
repz
jl
je
or
adc
xor
adc
mov
mov
int
mov
sbb
mov
adc
mov
sti
fnstenv
repz
fnstenv
repz
fnstenv
mov
jp
or
push
jnp
mov
jp
or
push
jg
mov
jp
or
push
arpl
or
push
lods
mov
jp
or
push
imul
sbb
push
outsl
lods
mov
jp
or
push
push
lods
mov
jp
or
les
jp
or
stos
stos
scas
xor
xor
sub
add
mov
xor
jl
xor
mov
xor
mov
cmpsb
jl
je
cmp
jp
cmp
das
mov
cmp
mov
mov
mov
mov
jl
sti
jp
pop
jl
cmp
mov
mov
mov
jl
cmp
mov
jp
seta
repz
mov
jl
iret
hlt
mov
jp
add
divb
repz
sub
je
div
add
repz
sub
mov
jp
daa
sbb
repz
repz
repz
daa
jl
push
mov
mov
mov
je
sbb
add
repz
daa
je
repz
jl
daa
jl
hlt
mov
jp
pop
jl
daa
jl
jecxz
mov
jp
adc
jl
daa
jl
jecxz
mov
jp
pop
jl
daa
jl
jecxz
mov
jp
adc
jl
pop
or
jl
pop
jl
adc
repz
jl
cmp
mov
jp
sbb
jl
pop
jl
pop
hlt
cmc
jp
and
je
cmc
mov
jl
cmp
mov
jp
je
adc
je
pop
idivl
je
xrelease
mov
out
mov
je
push
add
adc
adc
jl
fcomi
mov
jp
or
jl
fistpll
pop
cmp
repz
jecxz
mov
je
jmp
jl
cmp
mov
repz
repz
cmp
mov
mov
repz
repz
sti
mov
mov
jl
pop
jle
xlat
movss
popf
repz
or
adc
ret
adc
div
xor
mov
cmpsb
jl
xchg
jl
sti
jl
decl
inc
jae
sub
inc
cmc
sbb
or
cmp
xchg
repz
ret
lods
repz
inc
cmc
mov
jecxz
shl
repz
test
xchg
pop
sbb
sbb
sub
repz
pop
and
xchg
bound
sbb
repz
repz
repz
jae
testb
mov
data16
inc
repnz
add
mov
xor
jmp
ret
sbb
adc
adc
cmp
sbb
adc
test
sti
repz
repz
jp
dec
adc
adc
lds
add
adc
fidivrl
jp
xor
cmpsb
jl
jb
or
adc
jp
idiv
xchg
mov
repz
cli
xchg
mov
repz
jge
or
cmpsb
or
arpl
xchg
mov
adc
xrelease
cmp
bndstx
adc
mov
mov
repz
repz
jge
or
div
les
ja
or
adc
adc
int
or
repz
xrelease
cmp
or
les
jge
or
or
dec
addr16
adc
adc
xor
or
dec
call
adc
repz
or
or
jae
xchg
mov
jnp
or
xor
or
arpl
xchg
mov
adc
xrelease
push
scas
xor
mov
cmpsb
jl
mov
xor
xchg
mov
mov
adc
repz
sti
xchg
mov
les
push
cli
xchg
mov
les
mov
add
call
adc
repz
cli
xchg
mov
les
push
sti
xchg
mov
jge
call
push
les
push
cli
xchg
mov
jge
call
jge
sti
xchg
mov
jnp
call
push
cli
xchg
mov
jge
push
jnp
call
push
sti
xchg
mov
add
call
jge
cli
xchg
mov
add
call
adc
repz
push
les
jge
push
jge
call
adc
adc
adc
xor
add
lea
push
mov
add
mov
mov
cmp
jne
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
lea
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
call
ret
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
lea
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jl
mov
mov
mov
mov
xchg
inc
dec
cmp
jbe
mov
mov
lea
mov
lea
xchg
dec
inc
mov
dec
dec
mov
mov
lea
xchg
mov
lea
mov
mov
xchg
mov
xchg
movl
cmp
jl
mov
lea
mov
lea
xchg
mov
cmp
ja
mov
mov
lea
dec
mov
mov
lea
xchg
inc
lea
lea
mov
jmp
mov
lea
xchg
xchg
mov
lea
inc
dec
inc
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
mov
cmp
jne
jmp
mov
mov
mov
lea
mov
dec
dec
lea
mov
xchg
mov
mov
mov
xchg
xchg
mov
mov
xchg
mov
xchg
mov
mov
lea
lea
dec
inc
inc
mov
mov
call
mov
cmpl
je
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
mov
cmp
je
mov
subb
mov
mov
cmp
jg
mov
mov
lea
jmp
dec
inc
dec
jmp
mov
xchg
inc
dec
mov
dec
cmp
jne
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
xchg
mov
xchg
mov
lea
dec
mov
xorb
mov
cmp
jne
jmp
mov
mov
mov
lea
mov
dec
dec
lea
mov
xchg
mov
mov
mov
xchg
xchg
mov
mov
xchg
mov
xchg
mov
mov
lea
lea
dec
inc
inc
incl
mov
cmp
jne
cmp
jo
xchg
mov
lea
lea
xchg
mov
lea
dec
inc
mov
mov
cmp
jno
mov
mov
mov
mov
mov
mov
mov
lea
mov
dec
dec
mov
lea
mov
mov
lea
lea
mov
call
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
mov
push
mov
push
call
cmpl
je
mov
push
call
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
cmp
jg
mov
mov
lea
jmp
dec
inc
dec
jmp
mov
xchg
inc
dec
mov
dec
cmp
jne
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
xchg
mov
xchg
mov
lea
dec
cmp
jle
mov
jmp
mov
inc
mov
mov
lea
mov
lea
mov
xchg
inc
mov
xchg
mov
dec
cmp
je
lea
jmp
mov
inc
mov
lea
xchg
lea
lea
lea
lea
dec
inc
inc
push
mov
push
call
mov
pop
ret
nop
push
mov
add
cmpb
jne
call
cmp
jle
mov
jmp
mov
inc
mov
mov
lea
mov
lea
mov
xchg
inc
mov
xchg
mov
dec
cmp
je
lea
jmp
mov
inc
mov
lea
xchg
lea
lea
lea
lea
dec
inc
inc
mov
mov
mov
mov
mov
and
jmp
and
add
inc
xor
cmp
jmp
call
ret
jne
cmp
jns
xchg
lea
xchg
mov
xchg
mov
mov
inc
mov
xchg
mov
mov
mov
mov
lea
inc
xchg
lea
lea
mov
xchg
xchg
lea
movb
cmp
jg
mov
mov
lea
jmp
dec
inc
dec
jmp
mov
xchg
inc
dec
mov
dec
cmp
jne
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
xchg
mov
xchg
mov
lea
dec
mov
mov
pop
ret
lea
push
mov
add
call
call
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
call
call
call
test
jne
jmp
jmp
movw
movb
cmp
jp
mov
mov
mov
lea
dec
mov
cmp
jns
xchg
mov
mov
mov
mov
mov
mov
inc
inc
dec
dec
inc
inc
lea
xchg
lea
mov
mov
mov
xchg
jmp
xchg
mov
inc
xchg
inc
call
lea
mov
pop
ret
push
mov
add
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
push
call
cmp
jne
push
call
test
jne
push
call
mov
cmpl
je
push
call
call
cmp
jl
mov
lea
mov
lea
xchg
mov
cmp
ja
mov
mov
lea
dec
mov
mov
lea
xchg
inc
lea
lea
mov
jmp
mov
lea
xchg
xchg
mov
lea
inc
dec
inc
mov
pop
ret
add
push
add
add
outsl
add
add
add
add
jae
jae
add
insl
add
push
add
add
add
add
add
jb
gs
xor
cs
insb
add
add
sbb
jne
mov
cmp
jo
xchg
mov
lea
lea
xchg
mov
lea
dec
inc
mov
mov
cmp
jno
mov
mov
mov
mov
mov
mov
mov
lea
mov
dec
dec
mov
lea
mov
mov
lea
lea
mov
mov
mov
lea
call
mov
cmp
jne
jmp
mov
mov
mov
lea
mov
dec
dec
lea
mov
xchg
mov
mov
mov
xchg
xchg
mov
mov
xchg
mov
xchg
mov
mov
lea
lea
dec
inc
inc
ret
ret
lea
sub
mov
mov
pop
out
xchg
jno
push
jo
xchg
adc
add
mov
daa
inc
push
jbe
aaa
in
mov
lods
sub
adc
xchg
add
enter
add
pop
lods
add
xchg
xor
fsubrs
insl
lcall
inc
add
movsl
and
stc
dec
xchg
add
dec
add
add
cld
insl
adc
and
jp
outsb
insl
sub
lods
add
fsubs
mov
mov
mov
pop
add
lret
mov
cmpsl
add
mov
cmp
out
arpl
add
add
int
pop
jg
add
xchg
add
add
jp
add
lods
lds
add
ret
add
addl
cmp
insb
inc
and
popf
fidivs
mov
adc
bound
bound
add
mov
lret
push
add
mov
inc
or
add
pushf
add
sub
mov
jno
or
mov
scas
add
mov
test
add
add
add
add
xor
mov
push
orb
fiadds
bound
sbb
aaa
jae
dec
jo
add
ja
add
add
je
aad
fwait
hlt
add
adc
jbe
push
add
mov
and
data16
push
jnp
dec
add
push
pushf
rol
pop
mov
add
add
stos
int
pop
enter
xchg
pop
add
add
repnz
lods
repz
rclb
lods
xor
sub
fiaddl
aam
imul
pop
stos
jno
fwait
cmc
add
in
mov
insl
add
xor
les
stc
cld
dec
out
adc
add
ret
pop
dec
xor
add
add
mov
jnp
mov
ret
lds
call
jl
add
cmpsb
sbb
popf
test
daa
dec
add
adc
jge
cld
add
pop
sbb
sub
jg
popf
xchg
add
add
adc
jecxz
add
add
jae
inc
mov
add
add
sub
add
cmpsl
inc
mov
jle
mov
jb
push
mov
add
add
imulb
fwait
sbb
mov
sub
or
stc
rcr
adc
mov
xchg
dec
inc
movsb
clc
cmp
add
add
dec
add
add
cli
fmuls
mov
xor
pop
add
fisubrl
insb
mov
jmp
cmp
add
cmpsl
out
push
add
add
lret
mov
cltd
clc
dec
ret
mov
mov
cs
loopne
pop
pop
lcall
sahf
add
rcrl
sar
test
add
pop
pop
mov
add
push
cmp
add
call
add
sbb
fsubr
out
mov
fiaddl
pop
test
add
sti
int3
add
add
add
aad
jne
mov
incb
scas
add
bound
mov
add
sub
movsb
add
xor
add
leave
add
cld
data16
cld
add
inc
ljmp
add
pop
dec
add
pop
sti
xchg
xor
and
add
dec
add
add
cmc
es
adc
test
repnz
mov
arpl
andb
cmp
mov
xchg
repz
adc
in
add
cld
add
xchg
xlat
out
add
sbb
pushf
and
fucomp
jecxz
daa
cs
cwtl
xchg
nop
test
mov
mov
imul
mov
movsl
lea
sbb
fcmovb
push
mov
pop
xchg
dec
test
popa
stos
inc
mov
xchg
fnstcw
mov
xchg
test
mov
sub
sub
or
loop
call
mov
icebp
pop
mov
sub
jmp
add
dec
lret
sub
mov
scas
cmp
dec
in
das
sbb
jne
imul
aam
inc
pop
ret
in
mov
insl
aas
push
inc
dec
push
stos
pushf
cmpsl
and
mov
sbb
sbb
sub
pop
mov
andl
mov
push
cltd
in
sub
orb
neg
mov
clc
imul
xor
out
fisttpl
pusha
pop
fdivs
out
jae
adcb
mov
add
dec
imul
dec
imul
dec
push
xchg
jbe
movsb
jmp
xchg
xchg
adc
inc
ret
adc
add
fwait
push
gs
inc
fdivl
pop
xchg
xor
ja
out
xor
sarb
sub
in
xchg
push
xchg
adc
mov
stos
xchg
mov
pop
cmpsb
shlb
cmp
push
stos
mov
lods
sbb
mov
inc
jne
adc
out
repz
pop
bound
mov
lods
xchg
pop
jmp
subl
cmp
cltd
aam
or
cmpsl
clc
addl
mov
and
rcrl
sub
or
jne
in
jg
pusha
ret
mov
pop
xchg
and
das
inc
data16
jae
lret
mov
mov
movsl
fucomi
stos
jle
das
xchg
push
mov
aad
pop
lea
insb
xor
or
pop
adc
ret
aaa
leave
sbb
and
repnz
adc
or
cwtl
outsb
stos
inc
dec
lods
ds
inc
stos
add
fidivrl
cmp
or
vsubpd
sarb
mov
mov
jb
movsb
outsl
mov
push
mov
jge
push
negb
sub
pop
aaa
jne
sahf
or
cli
xlat
jno
jmp
aas
dec
loope
sbb
xor
cli
mov
std
and
xor
test
jb
mov
lods
stc
scas
cmpsb
mov
pop
in
xor
out
and
cmp
ficomps
cmp
daa
sub
movsl
mov
pusha
and
ja
push
idiv
sbb
subl
xor
push
mov
cmp
or
inc
push
out
push
pop
lock
add
sub
insb
outsb
movsl
or
loope
sub
les
in
jo
mov
rep
and
insl
mov
outsl
fs
xlat
and
sub
nop
pop
or
ss
sub
sbb
xchg
call
adc
in
insl
jg
rcrb
mov
dec
cmp
jecxz
fs
repnz
mov
ss
fstpl
add
sbb
testl
xor
xchg
or
jns
cmc
mov
xchg
sbb
pop
jge
imul
shll
gs
or
mov
out
sysenter
cli
ljmp
in
frstor
sti
xchg
or
rol
xchg
gs
mov
aaa
adc
cmp
fldcw
sub
repz
fcoml
std
mov
imul
stos
or
cmp
pushf
into
lret
shlb
or
push
add
or
cmpsl
sub
inc
shr
sahf
dec
push
jmp
push
jecxz
jge
dec
insl
jp
sar
cmp
push
jnp
or
adcl
cltd
pop
pop
inc
adc
inc
dec
aaa
inc
mov
stc
aas
dec
das
shlb
push
aaa
mov
mov
fcmovnbe
lods
sbb
imulb
lds
mov
loopne
mov
mov
icebp
dec
inc
add
sub
xchg
lret
cwtl
hlt
inc
mov
pushf
mov
cmpsl
in
das
sti
sub
mov
mov
aam
jg
ret
je
mov
js
xlat
insl
fisttpll
dec
dec
bnd
and
push
mov
das
sub
lods
cwtl
add
mov
cmp
ljmp
and
rcrb
mov
test
mov
sti
jle
mov
dec
fdivr
cmpsb
jnp
xchg
je
jnp
je
shll
loopne
pop
fldenv
stos
outsb
xchg
cmpsl
out
fildl
push
sbb
adc
pop
push
mov
negl
or
sub
adc
xchg
clc
dec
or
test
inc
and
inc
and
sub
pop
mov
jg
add
out
sbb
add
scas
call
ds
xor
or
sub
aaa
jne
xchg
popa
out
mov
scas
xor
push
jno
ja
pusha
jmp
mov
jmp
pushf
mov
dec
jmp
std
jne
pop
movsb
mov
pop
stos
out
rcrb
inc
jmp
sub
sub
sub
sub
cmp
xor
jp
nop
int
adc
jg
jnp
cmp
jle
lret
fists
mov
movl
xchg
push
dec
es
nop
cmpsl
test
aad
mov
stos
icebp
xchg
test
negl
test
imul
scas
iret
push
imul
cmp
iret
push
inc
ret
mov
popl
push
arpl
movsb
jl
test
jecxz
adc
es
lret
ficoml
cmc
mov
pop
imul
scas
out
mov
rcrb
mov
testb
movsb
cli
inc
push
push
mov
mov
out
or
in
aas
aaa
xor
lahf
or
pop
mov
jl
out
dec
push
push
gs
test
fs
push
lods
cmc
scas
ljmp
test
cmp
call
sti
in
sbb
enter
daa
and
mov
loope
mov
dec
cmp
xlat
inc
ds
mov
movsl
mov
cwtl
inc
lahf
mov
mov
mov
lods
and
addr16
inc
sbb
lcall
jg
pop
xchg
loopne
push
push
lcall
hlt
dec
sub
xlat
outsb
or
call
or
pop
addb
nop
mov
ret
movsb
push
push
jb
jbe
ds
shrb
stos
pop
mov
lcall
sbb
dec
push
sahf
mov
and
add
stos
jg
insb
push
mov
inc
sar
push
dec
mov
adc
sbb
cmp
repz
mov
xor
aad
cmp
add
cli
into
pop
xor
cmc
addb
xor
outsl
inc
pusha
xor
or
out
movsb
aas
adcl
fwait
add
and
mov
inc
addr16
sbb
bound
sti
inc
and
hlt
nop
mov
loopne
test
and
jo
ficoms
in
test
mov
mov
sbb
repz
mov
sub
fldcw
jmp
popf
add
sbbl
int
pop
mov
roll
inc
in
and
or
je
xchg
sub
cmp
xchg
lea
shll
mov
pop
in
daa
scas
subl
outsb
js
add
pop
pop
add
int
enter
cmpsl
adc
aas
out
or
and
mov
inc
push
dec
sar
insb
jmp
std
xor
mov
inc
mov
mov
push
push
mov
out
cmpsb
icebp
es
xchg
push
xchg
mov
pop
or
mov
push
lock
mov
fidivl
mov
and
aam
push
scas
ret
add
clc
insl
or
int
cmpsl
and
ret
mov
mov
add
push
mov
inc
stos
push
jb
mov
shlb
in
cltd
push
pop
dec
test
das
mov
mov
leave
adc
mov
mov
out
push
rorl
mov
pop
out
cmp
and
xchg
pop
xor
in
movsbl
add
movsl
or
test
in
pop
mov
jae
into
dec
jb
data16
jne
xchg
sbb
jmp
scas
or
sbb
fwait
scas
mov
loop
dec
insl
into
add
pop
shll
adc
add
in
stos
rclb
frstor
pop
mov
ror
push
ja
hlt
xlat
dec
mov
dec
test
add
dec
into
or
jne
addb
cmp
out
mov
mov
push
fwait
stc
jmp
cmc
fisubs
out
or
push
or
xchg
arpl
jmp
jp
dec
hlt
and
mov
jnp
mov
jle
adc
in
sub
xor
mov
dec
xchg
divb
add
jae
and
push
push
outsb
add
mov
and
cld
stos
xchg
sbb
xchg
ljmp
bound
push
lds
jg
mov
loopne
outsb
push
leave
push
stc
arpl
push
in
arpl
add
aam
dec
or
mov
jl
dec
xor
fiaddl
adc
divl
mov
jae
jp
lcall
lds
and
shlb
repnz
lods
loope
mov
pop
movsb
test
push
movsb
xor
push
xor
outsb
jp
mov
jge
or
jo
jno
xchg
inc
jl
repnz
mov
adc
jo
lret
mov
and
imul
lret
sbb
in
add
pusha
enter
daa
and
push
push
shlb
sub
cmp
cmp
movsl
les
rcrb
pushf
dec
mov
out
stc
xchg
add
ret
jge
ss
fisubrs
jo
loope
jne
jg
rclb
rol
mov
and
rcll
out
fcompl
add
push
jecxz
outsb
imul
jecxz
popf
in
push
data16
or
or
ret
pop
fwait
push
jne
xchg
movsl
rcrl
aas
dec
lcall
xchg
mov
inc
sbb
sub
push
test
adc
mov
insb
mov
fs
adc
fcomps
ss
adc
dec
xorl
ret
lret
jp
call
inc
cs
mov
into
aas
fst
cmc
inc
popf
xor
sbb
push
and
fwait
jo
adc
nop
adc
data16
push
cmp
movsb
mov
add
out
cli
push
lods
push
mov
mov
sar
repz
adc
pop
push
xor
ja
loopne
pusha
clc
pop
inc
and
fstps
enter
test
mov
xchg
out
insb
ljmp
cmp
sub
test
mov
and
sub
mov
std
cs
xchg
aad
inc
dec
nop
cmp
dec
gs
inc
clc
adc
je
lret
jecxz
rorl
push
jns
lea
mov
pop
lahf
repz
add
mov
pop
movsb
push
or
je
inc
ret
aas
in
cmp
iret
mov
lret
shrl
imulb
sbb
xor
std
xlat
cmp
aam
je
std
sbb
cld
orl
mov
jp
sbb
das
mov
push
jg
jns
movsl
aam
lock
xchg
insl
lds
jle
xchg
insl
hlt
es
inc
cmp
cmpsl
and
stc
popa
pop
das
push
mov
add
lret
and
or
bound
cltd
mov
out
test
mov
mov
xchg
rorb
cld
xchg
bnd
jo
loopne
push
pop
das
out
ret
stos
dec
xor
out
pushf
testb
shll
inc
add
mov
xor
push
andb
mov
dec
mov
xchg
test
lods
bound
or
mov
fucomp
out
push
sub
lea
call
xor
in
cltd
popa
cmp
dec
ss
xchg
push
in
and
inc
mov
mov
fidivs
or
dec
mov
mov
push
int
mov
xor
dec
mov
shlb
lds
nop
lods
ja
out
or
xchg
rclb
push
test
sub
and
andb
push
int
inc
xorb
dec
repz
push
repnz
sbb
pusha
xchg
mov
xor
lcall
inc
xchg
push
jae
xor
push
rorl
repnz
bound
aad
push
dec
pop
sbb
jnp
imul
jmp
push
or
mov
iret
adc
outsl
ret
ljmp
inc
mov
inc
xlat
and
or
or
ss
pushf
push
add
setg
js
fdivp
icebp
movsb
lds
dec
sub
pushf
incb
cmp
adc
ljmp
stos
shrb
aaa
mov
inc
or
cmp
jno
and
dec
cs
push
dec
adc
or
xchg
scas
test
pop
and
mov
addr16
roll
fisubs
out
cltd
enter
daa
and
adc
push
mov
cld
sub
xchg
js
push
icebp
adc
movsl
lret
dec
and
cmpsb
lahf
clc
push
rclb
inc
pop
sbb
mov
cmp
add
loope
pop
or
idivb
pushl
push
test
repz
call
outsb
into
xor
in
mov
cmp
es
pop
mov
daa
xchg
fdivp
push
js
xor
or
or
enter
mov
sbb
shrl
mov
imul
cmc
aam
sahf
mov
test
ss
scas
out
adc
push
fs
std
adc
movsb
out
ret
cmp
imul
lock
out
xor
pop
push
or
cwtl
into
and
cmc
push
sahf
mov
ret
outsl
add
xor
imul
push
test
lods
rcll
lahf
sub
out
xor
mov
push
hlt
sti
mov
or
gs
push
push
loopne
push
inc
pop
pusha
xchg
adc
mov
mov
repz
xchg
loope
mov
mov
cmp
xlat
add
xor
xchg
xor
push
pushf
iret
cmp
lock
and
aad
cmc
cli
nop
adc
and
sub
cmp
je
pop
fsubp
push
popa
pop
pop
lods
lea
sub
call
xchg
std
sbbl
outsb
pop
inc
lret
repz
lahf
push
inc
fucom
inc
aas
sub
xor
cli
sahf
mov
push
fnsave
divb
xchg
std
jle
mov
mov
les
mov
addl
lret
in
mov
mov
mov
das
cwtl
inc
test
jo
jle
mov
xchg
insl
mov
mov
je
mov
mov
and
cmp
dec
ss
pop
or
je
rcl
test
aam
in
std
sub
add
jo
sbb
clc
push
cmp
xchg
xor
mov
aaa
ds
pop
inc
stos
cmp
hlt
out
push
lock
and
jp
lods
sbb
jl
lock
lret
push
or
clc
xchg
mov
jns
xor
inc
out
loopne
add
scas
and
pop
loopne
pop
xor
or
sbb
or
outsl
push
shr
ret
add
decb
mov
data16
in
adc
xchg
dec
arpl
mov
inc
dec
dec
ja
cmpsl
xor
push
xchg
mov
jne
mov
mov
dec
sub
sbbl
loopne
out
outsl
mov
mov
lea
xchg
mov
nop
and
popf
out
pop
sbb
or
pop
mov
and
cmpsl
insb
aam
bound
hlt
inc
jle
sbbb
imul
das
xor
fucomip
sbb
xchg
insl
add
pop
outsl
push
or
sub
mov
push
xchg
pop
mov
mov
mov
lahf
bound
and
lea
clc
pop
jb
push
icebp
and
subl
iret
jae
popa
ret
dec
hlt
lret
mov
in
std
dec
arpl
and
inc
ficoml
rorl
test
jne
inc
mov
add
out
sbbl
mov
lds
jnp
shr
test
out
or
push
push
or
jmp
or
push
pop
sbb
push
bound
shll
jl
xchg
popf
xor
les
inc
pop
scas
xchg
mov
push
sahf
loop
inc
jmp
mov
in
into
adc
enter
daa
pop
fldt
mov
arpl
jg
add
lret
adc
ds
mov
and
sbb
pop
cld
mov
jo
sbb
lods
add
jmp
xor
stc
lret
or
cld
js
sbb
mov
push
arpl
fsubrl
int
outsb
xor
unpckhps
clc
cld
rcrb
imul
mov
repnz
sub
and
loop
push
jnp
lods
int
lock
inc
into
pop
pop
pop
xchg
sbbl
and
pop
sbb
fistpl
sbb
in
inc
push
sub
sub
fs
adcl
xor
add
pushf
fsubs
testl
or
xchg
xchg
mov
lret
jnp
add
add
xor
xorl
mov
add
pop
sub
adc
lods
test
add
out
sar
repnz
mov
mov
insl
sti
push
ljmp
gs
sbb
loopne
push
jmp
jg
lret
jecxz
andb
push
movsl
xchg
jne
lds
movsb
sub
xlat
inc
int3
sub
add
les
pop
or
pushf
jp
xor
cs
push
adc
jbe
inc
nop
lock
dec
and
sti
inc
push
pop
push
dec
xor
je
cmp
jecxz
xor
js
insl
scas
mov
inc
adc
jne
add
lea
aas
dec
xor
pop
ljmp
inc
clc
insl
mov
jb
lcall
loope
or
divb
push
cmpsl
cwtl
jae
ret
ret
daa
mov
jp
cld
xlat
jo
lret
push
mov
push
push
lock
xor
addr16
imul
mov
mov
insl
ret
dec
cmp
jg
push
pop
test
popa
mov
into
lods
inc
xchg
jae
fldl
mov
push
adc
mov
daa
mov
shrb
mov
mov
xchg
dec
fldl
hlt
clc
xchg
movsb
mov
ljmp
std
pop
test
stos
sub
mov
xchg
push
adcb
inc
lods
push
or
cld
push
xor
in
sti
mov
jl
and
cmpsl
ljmp
inc
pop
in
sbb
jo
inc
mov
nop
or
pop
mov
push
jae
inc
add
bnd
cli
jp
pop
pcmpeqd
arpl
xchg
popf
adc
mov
inc
stos
mov
add
mov
loop
mov
inc
jno
or
mov
sub
xorl
inc
mov
ss
out
dec
int
bound
cwtl
fstl
pushf
in
out
sub
sub
sbb
push
addr16
push
jp
mov
and
jmp
aas
jmp
add
cmpsl
jno
mull
sbb
mov
mov
pop
cmpsb
scas
adc
popf
dec
pushf
jae
and
popf
sub
loopne
roll
loopne
ja
mov
add
cmpsb
imul
push
scas
pop
dec
mov
adc
or
shrb
cld
leave
imul
arpl
cwtl
lret
inc
fnsave
and
push
je
pop
add
add
fcomps
mov
fidivrs
vpextrw
lds
pop
dec
mov
inc
cmp
mov
es
jbe
ficomps
sbb
and
or
fidivrs
push
dec
or
pop
push
adc
xor
rcrl
and
jo
test
imul
mov
enter
daa
push
cmp
cmp
mov
clc
cmp
xchg
and
cmpsl
xchg
push
adc
and
add
pushf
xor
lods
sbbb
idivl
rolb
nop
lea
push
mov
pop
or
and
outsb
xchg
adc
adc
je
ss
orb
jmp
inc
and
sub
push
jle
and
fcmovu
jge
mov
pop
fistps
add
lahf
mov
out
sbb
pop
sahf
inc
add
test
fsubrs
loop
stc
mov
and
stc
loop
push
sub
adc
push
es
popf
sarb
fildll
in
decl
lret
xor
mov
or
push
into
call
lret
lea
js
inc
outsl
mov
mov
inc
adc
jno
add
lods
popl
or
std
xor
cli
jmp
push
in
hlt
and
sti
add
sub
adcb
sti
orb
sahf
pop
cwtl
adc
rcr
fld
fwait
cmpsb
les
leave
cs
cmp
xor
filds
mov
jg
movsb
sub
mov
pushf
and
xor
imul
jnp
nop
lret
gs
orb
dec
cmpsl
clc
jecxz
jne
jg
pop
jno
aam
shr
lods
cwtl
movl
lret
sub
ret
fstpt
xchg
popf
inc
in
test
aas
push
insl
jb
insl
xor
xor
outsb
sarl
data16
clc
inc
std
int3
in
jbe
cmp
cmovbe
mov
popa
stos
cld
add
lret
ret
add
outsb
sbb
and
push
insl
jmp
sub
aad
dec
xchg
pop
ret
aas
xorl
test
add
sbb
cld
inc
popa
mov
mov
mov
imul
jo
fidivrs
pop
inc
fidivs
jle
sub
test
es
push
insb
push
mov
sbb
imul
and
mov
ja
in
mov
mov
out
xchg
scas
call
or
cmp
mov
or
aaa
push
sbb
inc
xchg
daa
dec
push
lret
sti
repnz
xchg
xchg
xlat
sbb
add
inc
dec
pop
ret
push
fwait
push
xor
push
xor
inc
cmp
cli
stos
or
xor
mov
popa
fimull
mov
int
xchg
in
or
jmp
out
pop
mov
imul
mov
mov
xor
jg
lret
dec
pop
pop
std
jne
adc
sub
sub
shll
jnp
jae
and
mov
jae
sub
adc
addr16
or
inc
push
mov
stos
aad
jnp
inc
cld
jle
shrb
cmp
bound
fildll
fimull
mov
inc
test
push
jae
add
sbb
dec
mov
pop
sbb
xchg
pop
sbb
cmc
movsb
mov
loope
jmp
cmp
ror
xor
mov
cs
andb
std
push
sub
loopne
adc
jp
adc
ficoml
inc
mov
push
xchg
cwtl
int3
pop
sub
push
repz
ficomps
shlb
cmp
xchg
sub
cmp
js
loopne
lahf
jbe
inc
xor
push
push
sbb
rorl
cmpsl
int3
and
jl
imul
repz
lret
jae
jo
or
arpl
movsl
sbb
fld
push
push
xor
outsb
inc
pop
lea
cmpsb
enter
pushf
lcall
sbb
scas
fsub
lods
xor
sub
mov
hlt
ds
fmull
movsl
loopne
add
sub
mov
push
call
lret
or
jb
dec
ljmp
js
push
push
pop
iret
sub
in
mov
mov
add
movl
adc
dec
adc
sbbb
mov
arpl
mov
push
or
pusha
sub
leave
addb
std
push
lcall
movsl
mov
loop
sbb
cwtl
outsl
test
xor
jg
mov
mov
push
stc
stc
cltd
jge
adc
repnz
in
cmp
lcall
lret
stc
xor
cmp
xchg
lret
or
adc
cmc
arpl
sub
rcrl
and
scas
cmp
jmp
pushf
aam
xchg
lret
inc
mov
lods
jbe
mov
out
imulb
cli
sbb
mov
pop
sti
into
sti
scas
adc
call
push
loopne
fwait
and
lret
std
lock
clc
out
mov
lods
mov
outsb
xchg
sti
ja
sbb
sbb
xlat
mov
adc
pushf
shlb
jmp
test
jo,pn
push
imul
inc
lea
lret
orb
ret
je
cmc
loop
test
in
cmp
call
add
adc
sub
sbbl
pop
lret
pop
iret
pop
xor
mov
inc
cs
mov
je
mov
div
test
xchg
aad
cmp
ljmp
mov
mov
insb
out
sub
jmp
mov
push
cmpsb
mov
arpl
lock
mov
xor
loopne
sub
xor
sbb
pop
ret
into
addr16
mov
mov
nop
push
dec
das
rorb
sbb
pop
mov
mov
pop
sarl
mov
sub
gs
push
inc
pop
cltd
data16
mov
fs
dec
jbe
fstl
xor
xchg
out
scas
loopne
es
pop
sarl
fs
fsubrl
sub
push
cmp
jno
add
xor
sbb
lret
aam
mov
subb
test
add
xchg
sbb
push
inc
in
testb
mov
cltd
movsl
push
push
mov
negl
lahf
xchg
shrb
jnp
mov
or
dec
int
jns
fs
cmp
mov
dec
out
mov
js
je
push
xchg
cli
dec
jge
jns
scas
inc
mov
fsubr
inc
mov
sbb
inc
je
mov
sbb
bound
loope
jmp
in
jge
adcl
mov
ljmp
addr16
int3
jp
jg
and
xchg
and
xchg
and
in
mov
pusha
add
nop
fisttps
xchg
out
mov
inc
mov
add
push
fnstsw
popf
jp
icebp
mov
pop
icebp
push
stos
mov
push
ret
pop
cmp
in
sti
scas
and
loope
sub
and
iret
nop
and
ret
imul
int
loope
or
ljmp
stc
hlt
push
les
adc
ljmp
pop
test
push
adc
cmp
xor
call
mov
movsb
cmp
sub
das
jl
jbe
sbb
add
aaa
scas
roll
gs
jl
fisttps
dec
mov
dec
jg
cltd
jmp
jo
popl
scas
and
lret
and
cmc
sbb
cld
test
adc
in
xorl
daa
sbb
sub
loope
jmp
sub
outsl
push
cmp
push
jg
push
daa
adc
and
push
push
je
popa
push
mov
sbb
push
push
int
inc
cs
lods
dec
jmp
js
lock
push
cld
stos
push
das
sub
fdivl
ljmp
lcall
xorb
mov
xchg
inc
mov
sbb
xor
mov
sub
rcrb
das
inc
gs
mov
sbb
and
andb
pop
mov
dec
mov
fs
adc
ss
adc
xlat
fcoms
in
jge
ljmp
pushf
push
cmp
clc
jmp
xor
cmc
sub
xor
jl
sub
imul
lcall
sbb
pop
inc
jbe
mov
out
inc
outsb
cli
dec
mov
jmp
sti
pop
ret
outsl
jp
or
loopne
fisttpl
pop
fdivrl
pop
adc
inc
or
les
or
negl
push
outsb
hlt
xlat
std
mov
sub
movsl
adc
out
jnp
ret
jmp
cltd
push
shll
sub
inc
lcall
dec
xchg
inc
push
je
rol
jecxz
dec
aaa
fs
ss
and
pop
push
jp
xorl
fwait
pop
shrl
dec
inc
repnz
and
test
xchg
jb
mov
mov
orb
cli
adc
jle
pop
std
sbb
jb
movsb
or
mov
fwait
xor
pop
ret
daa
lret
mov
ds
mov
or
lock
inc
das
adc
xor
sub
aam
dec
mov
pop
nop
xlat
es
jne
dec
sub
and
mov
xor
lods
test
movsb
mov
scas
addr16
adc
pop
pop
test
and
add
fwait
cmp
push
fnsave
push
gs
sub
mov
rcll
dec
popa
stos
mull
xchg
cmp
rcrl
jl
jmp
xchg
aaa
inc
xor
lds
mov
test
sub
xor
test
test
int3
sbb
dec
lods
inc
jnp
sahf
or
or
push
pop
inc
and
xor
stos
xor
aaa
in
sub
jp
add
jne
mov
ds
jl
mov
xor
ja
adc
data16
xchg
add
mov
jne
aaa
call
out
jmp
lret
and
jmp
mov
testb
pop
xchg
sub
or
jp
jnp
lea
jb
and
sub
jnp
mov
into
in
cwtl
mulb
jecxz
fildll
adc
dec
lahf
das
inc
mov
mov
mov
ljmp
popf
dec
push
stos
push
inc
icebp
xchg
or
sahf
imul
lcall
push
test
out
sbbl
ret
cmp
shlb
sahf
hlt
sbb
mov
inc
out
or
jo
fiaddl
and
fidivl
pushf
add
mov
pop
mov
fisubs
lods
lds
add
mov
cmp
cmp
mov
mov
sbb
insl
mov
jno
add
dec
pop
xlat
mov
xor
shlb
adc
test
lret
inc
and
add
in
push
sbb
daa
xchg
cmp
sbb
cmp
dec
loope
cmp
clc
and
ret
ds
gs
movsl
out
pop
xlat
and
out
xchg
sar
mov
sbbl
or
add
sub
xor
cmp
popa
pop
lret
in
js
pop
je
dec
stc
mov
push
mov
push
sub
rcrb
mov
rcrl
add
dec
sbb
mov
xor
xchg
sub
xchg
sub
adc
pop
add
add
rol
mov
push
sbb
xchg
mov
test
pop
fildl
mov
scas
std
stc
pop
sub
fs
adc
orb
cmp
out
idivl
imul
repnz
cmp
xor
or
call
in
xor
jmp
loop
mov
repz
inc
mov
lar
xchg
sbb
cli
push
test
sub
mov
xor
ss
jmp
push
fsub
push
mov
adc
adcl
arpl
mov
xor
add
xlat
cmp
xchg
sub
jg
adc
cmp
cs
inc
nop
pop
arpl
lahf
mov
jo
or
dec
je
add
addr16
lea
mov
push
movl
jge
orl
fisttpl
pop
pop
jbe
jnp
jns
dec
inc
fs
mov
jb
pop
dec
mov
or
sub
std
rcrl
cwtl
pop
into
test
mov
out
clc
cld
xorl
lret
adc
movsl
mov
sbb
das
repz
stos
mov
inc
push
adc
and
les
nop
push
adc
dec
and
call
mov
out
fldcw
inc
push
mov
jb
mull
mov
cmp
aam
test
push
cmp
shrb
fstp
sbb
jle
mov
ljmp
mov
stos
out
in
out
out
es
xchg
test
push
repz
mov
cmp
or
jge,pt
icebp
or
xchg
rcrb
jecxz
xchg
mov
fdivrp
mov
adc
add
pushl
xor
dec
ret
push
xor
vmwrite
sbb
xchg
flds
mov
out
xchg
jb
pushf
outsb
hlt
dec
arpl
jp
pop
fcomps
mov
sbb
add
inc
mov
push
cmp
bound
add
pusha
sub
xchg
orb
xorl
and
add
sbb
pop
cmp
pushf
sbb
and
stos
jmp
jnp
jns
jle
ret
xchg
in
fstpl
ss
mov
outsb
xchg
mov
sbb
inc
leave
test
lret
xor
popf
enter
lods
inc
imul
sub
xchg
pusha
cs
sbb
inc
movsl
imul
push
scas
out
cmp
sub
lret
iret
dec
mov
mov
inc
xchg
nop
hlt
arpl
arpl
sbb
inc
jmp
push
iret
push
ret
fisubrl
inc
bound
sbb
and
loopne
dec
pop
jecxz
add
fstpt
mov
mov
mov
dec
cmp
iret
jnp
int
mov
jecxz
fidivrl
aam
sbb
fbld
jno
fs
jl
js
dec
enter
pushf
or
jo
rcr
scas
loop
xor
pop
dec
ret
test
xchg
mov
inc
mov
fwait
cmpsb
push
test
enter
daa
sbb
sarb
mov
push
loope
lds
sub
push
cmp
adc
fs
enter
js
std
test
lahf
mov
scas
push
popa
push
cltd
sbb
dec
add
mov
fcomip
stc
xor
js
popa
in
mov
push
sub
push
push
xor
faddl
pop
shrl
fidivrs
outsb
and
adc
loopne
inc
popl
les
mov
sahf
xchg
mov
or
inc
push
mov
or
jnp
sub
cmc
lahf
lcall
xlat
mov
aam
sahf
rorb
cmp
fdivr
loope
pop
fsts
stc
mov
sbb
adc
cld
inc
ss
pop
jne
fbstp
fmul
sub
sti
imull
xor
push
outsl
cmp
aas
rorl
cmc
cs
je
div
mov
in
mov
loop
lret
xchg
imul
add
xchg
or
xchg
pop
cwtl
lods
sub
cmc
out
pusha
cli
mov
cmp
mov
insl
mov
gs
add
std
pop
sbb
nop
adc
lods
fstps
lret
jnp
xor
xchg
inc
inc
sbb
lret
sub
xlat
jnp
jle
inc
inc
lds
or
rcrb
or
cmpsl
aad
cmp
nop
aaa
xor
or
imull
je
xchg
jecxz
push
add
push
add
call
andl
stc
and
movsl
mov
jp
add
xchg
jl
add
jp
jg
pop
aas
out
and
ret
or
mov
cwtl
cli
ljmp
js
std
push
sub
mov
icebp
fisubs
scas
jae
lret
jg
mov
mov
mov
lock
shr
jmp
sub
movsb
push
aam
push
push
ret
jnp
test
adc
insl
inc
aaa
inc
dec
and
cmpsl
sbb
dec
mov
xor
pop
mov
mov
cmc
lret
mov
mov
ret
ror
cmpb
stos
test
cs
push
xchg
pop
jb
add
pop
xor
jg
xor
inc
sbb
add
aad
in
out
push
fiaddl
lret
or
movzbl
pushf
or
movsb
and
mov
mov
test
mov
xchg
xchg
xchg
pop
pop
inc
test
cli
popf
fwait
es
lahf
add
repz
fadds
xor
testb
sbb
or
sub
sarl
test
and
mov
pop
inc
mov
cmp
stos
dec
out
loop
pushf
call
inc
out
test
inc
std
jmp
dec
int
cmpl
rcrl
mov
jmp
addr16
enter
or
in
push
insb
push
iret
fdivrl
adc
jle
lods
sti
in
xchg
mov
fildll
std
push
mov
out
jae
and
popf
out
dec
xchg
mov
sbb
pop
xchg
mov
test
repz
add
scas
dec
xor
outsb
adc
addr16
testl
scas
daa
cwtl
arpl
jecxz
inc
in
sub
or
data16
inc
in
fcmovu
push
nop
add
mov
fisubrs
cmp
inc
loopne
rorb
repnz
add
push
jp
push
sbb
mov
jge
jae
sbb
and
jmp
jae
jae
out
jno
in
push
jl
and
dec
aaa
inc
push
push
jg
movsl
xor
mov
adc
icebp
ret
mov
ljmp
aas
and
cmp
enter
daa
sbb
repz
movsl
sub
xchg
xchg
shlb
cwtl
cmp
lahf
sarl
pusha
push
xor
pop
sbb
inc
xor
xchg
lret
mov
js
idivl
lret
jg
push
mov
push
insl
popa
push
fdivl
ljmp
outsl
xchg
sarb
fldcw
subb
fbstp
mov
push
lea
scas
int
fsub
sub
sti
rcrb
hlt
int
mov
xlat
loope
jae
daa
test
testl
push
setnp
jne
test
jg
push
and
ss
mov
cmp
xchg
xor
in
stos
lret
hlt
xor
and
or
lock
push
mov
cmc
jg
stos
xor
mov
outsl
sbb
clc
loop
adc
imul
ret
add
xor
adc
push
mov
out
ss
mov
or
paddd
mov
sti
loopne
adc
outsb
adc
jle
aam
adc
repz
xchg
pop
ret
rcrl
in
xlat
mov
mov
adc
jmp
insl
aaa
cs
enter
mov
or
pop
dec
inc
inc
nop
ret
pop
dec
cli
or
jecxz
shr
insl
leave
adc
xlat
jo
call
add
or
dec
shll
test
mov
inc
xchg
popl
cmp
aas
test
or
and
rol
push
mov
std
addps
cwtl
aad
or
insb
cmpsb
sub
mov
ret
cld
add
push
bound
das
mov
jecxz
mov
fcompp
aam
xlat
xor
or
stos
insl
sub
xor
sbb
mov
adc
iret
repnz
sbb
subb
in
in
pop
loope
xor
popf
add
mov
dec
add
xor
and
hlt
cmp
xchg
ljmp
rcrl
inc
subl
cmpl
adc
ss
or
ss
xor
xchg
add
mov
in
dec
adc
fwait
xchg
sbb
inc
js
inc
inc
iret
test
sbb
sbb
push
inc
add
add
sbb
xor
dec
vmwrite
lret
in
pop
icebp
xchg
ja
aaa
mov
lds
mov
sub
dec
dec
cmp
test
clc
mov
sub
leave
mov
fcmovu
out
mov
jmp
sbb
in
or
adc
sub
cli
xor
jp
test
and
subb
ret
jo
jle
mov
in
xchg
imul
inc
aam
xchg
xor
or
inc
fistps
rcll
scas
jmp
mov
pop
jp
stos
outsl
sbb
xchg
push
fwait
lods
sbb
js
imul
daa
push
inc
cld
fsts
adcb
ret
pop
leave
xor
sub
arpl
inc
inc
out
inc
push
push
rorb
add
fcmove
mov
sbbl
pop
pextrw
repnz
ret
fnstenv
movsb
push
dec
inc
jbe
or
jge
cmc
leave
sbb
les
aaa
stos
or
or
adc
jl
movsb
fs
cmpsb
sbb
bound
or
pusha
push
scas
mov
outsl
popa
test
sub
fbld
pop
fxch
sbb
daa
sbb
cmp
rorl
sub
mov
ds
xlat
aaa
movsl
add
jg
lock
add
push
inc
sbb
mov
xchg
xor
scas
mov
imulb
xchg
and
pop
or
jb
sub
fistl
mov
fcompl
sub
mov
rclb
and
push
mov
out
and
push
nop
xchg
test
mov
test
lcall
jne
xchg
cmp
sahf
push
int3
mov
orb
push
jg
pop
sbb
sub
lret
imul
lahf
mov
fidivl
cmp
inc
test
dec
lret
out
ja
xchg
cmp
aad
or
dec
into
cmp
push
cmc
inc
mov
xor
bound
loop
mov
adc
adc
cbtw
jbe
lods
stc
je
mov
movntq
out
nop
jbe
sbb
mov
jbe
arpl
sbb
in
push
adc
gs
cmpsb
out
pop
pop
aaa
mov
sub
repz
sub
lret
sbb
inc
xor
sub
jmp
jp
daa
mov
jmp
xchg
cwtl
cs
addr16
aad
outsl
push
nop
in
adc
dec
mov
ret
test
je
mov
iret
jno
jo
dec
lea
das
sub
fs
jg
inc
pop
ljmp
dec
lods
sti
fcmovnu
push
mov
inc
push
or
inc
mov
outsl
aas
and
mov
mov
scas
stc
test
adc
mov
enter
sbb
mov
sub
mov
sbb
mov
pop
lret
pop
icebp
mov
push
jp
mov
pushf
lock
adc
das
nop
xchg
sub
ret
cltd
fiaddl
sbb
and
mov
cmpsl
pop
and
mov
sub
lahf
lods
xor
ljmp
push
or
add
shlb
adc
jns
hlt
test
adc
push
sbb
and
push
jmp
clc
das
scas
pop
xchg
sub
ljmp
imul
stos
mov
mov
xchg
pop
jb
push
test
pcmpeqb
push
enter
outsl
sub
xor
rolb
jae
sub
js
gs
pop
cmp
testl
pop
cmp
fwait
test
or
call
inc
or
pushf
sar
jmp
xor
push
pusha
inc
jns
pushf
jae
xor
daa
xchg
pop
lret
mov
lds
cmpb
pop
dec
or
adc
pop
mov
ret
cmp
push
sbb
addr16
jne
sub
mov
mov
adc
cmp
jmp
jecxz
and
fldenv
or
ficoms
addr16
cmp
inc
int3
and
and
jle
jb
cmpl
add
pusha
pop
adc
out
arpl
daa
sub
inc
ljmp
push
lods
fnsave
cmp
mov
cltd
out
stos
loop
fistl
jge
jbe
dec
mov
push
mov
sub
pop
sbb
ret
ljmp
sbbb
push
inc
out
repnz
andl
aas
mov
out
frstor
int3
mov
xchg
jno
mov
sub
push
ja
rol
mov
repnz
cmp
into
cwtl
movsb
repz
push
mov
daa
pop
jge
pop
lods
sbb
jb
imul
cwtl
jno
imul
clc
call
push
inc
push
jnp
jl
cmp
scas
jg
shlb
pop
push
and
mov
mov
lret
mov
add
adc
pop
daa
pop
push
cmpb
les
loope
fwait
inc
sub
xchg
cmp
lds
int
sub
and
out
lahf
pextrw
test
push
cmp
add
lods
mov
jl
adc
js
fcomip
pop
dec
push
dec
push
call
sbb
or
sub
movsl
adc
jno
int
mov
fnsave
mov
add
mov
push
mov
jnp
aad
xchg
orb
sbb
jg
shrb
shll
insl
mov
sbb
and
sub
jg
and
mov
aas
push
stc
jecxz
mov
notb
cmp
sbb
test
pop
idivl
gs
mov
pushl
dec
jne
cmp
pop
les
push
xlat
sub
sbb
cmp
xor
jae
outsl
xlat
xchg
sub
pop
cmp
imul
pop
add
xor
lods
loopne
push
out
outsb
out
dec
sub
mov
loope
mov
jne
mov
loopne
dec
bound
mov
push
flds
inc
out
call
bound
roll
cmp
xlat
cmp
inc
sub
outsl
pushf
rorb
jmp
jns
cs
aad
mov
jbe
sbb
popa
inc
mov
lds
ret
ljmp
jae
sbb
clc
loope
pop
popf
xchg
clc
subl
dec
mov
add
inc
inc
xchg
mov
inc
aas
ret
mov
mov
or
xor
and
imull
popa
xchg
or
int
jle
pop
and
pop
mov
dec
orb
mov
out
int3
jno
mov
sub
mov
cmp
das
outsl
outsl
ret
mov
pop
ds
fcmovnu
ffreep
sub
es
mov
push
dec
adc
cmpsl
push
jecxz
mov
inc
mov
mov
push
jl
mov
mov
pop
mov
pop
mov
cltd
mov
add
pop
push
push
fmulp
add
jp
cwtl
clc
push
scas
xchg
push
test
inc
lock
stos
mov
lods
lret
xchg
mov
jmp
outsb
add
add
or
mov
fbld
xchg
shll
scas
test
xchg
push
xchg
push
sbb
scas
hlt
or
pop
xchg
mov
fiaddl
mov
ud0
lods
xchg
fs
mov
das
mov
cmp
mov
fimull
push
ja
push
push
dec
das
push
cmp
fidivl
dec
mov
xchg
mov
loopne
mov
mov
out
inc
in
test
cmp
cmp
mov
cwtl
inc
out
sbb
or
jp
addr16
std
jp
mov
stc
insb
xchg
jl
jnp
js
jle
and
in
fnstenv
mov
in
xchg
fdivrs
mov
bnd
subb
or
fs
mov
fcom
nop
stos
push
fnstsw
mov
add
imul
scas
jae
cs
rcrb
adc
xor
lret
ret
loopne
and
add
data16
pop
sbb
push
mov
shrl
sub
int3
mov
mov
ficoms
ret
gs
mov
repnz
cmp
jne
push
or
ret
jbe
mov
mov
test
dec
mov
jno
pusha
ret
and
dec
test
mov
sub
inc
xor
cltd
inc
cmp
pop
leave
xchg
and
pushf
fcoml
push
lock
shlb
in
cld
push
enter
daa
push
aam
cmp
and
sub
sub
adc
sub
out
movsl
adc
pop
lahf
cs
fcoms
push
xor
dec
bound
pop
pop
sub
aas
sti
out
mov
mov
pop
mov
std
push
jb
rcr
mov
cmpsl
sub
scas
push
rorb
popl
enter
clc
adc
inc
adc
mov
aaa
push
xchg
fistps
sub
and
lcall
rorb
mov
pop
pop
lea
inc
pop
pop
jg
out
sbb
lcall
adc
pop
add
mov
cmc
div
out
lret
jo
and
mov
or
sub
push
jae
outsl
mov
pusha
loop
sbb
cmp
fsts
nop
je
xor
or
pop
mov
mov
cltd
out
sar
cli
cmp
mov
sti
js
test
cwtl
sahf
jmp
leave
dec
loopne
add
xchg
dec
pop
adc
xchg
cli
out
xchg
outsb
cmp
xchg
push
std
xor
mov
ja
mov
adc
fs
jge
mov
cmc
and
cs
xor
in
jp
sub
leave
pop
loope
pop
xchg
add
xor
popf
ffree
jbe
out
lea
push
call
jge
fistps
sbb
cmpl
mov
dec
pop
movsl
iret
push
sbb
addb
loopne
bound
loop
call
dec
mov
notb
in
popf
std
add
lret
cwtl
push
push
xchg
mov
in
pusha
mov
add
cmp
test
cmp
inc
push
pop
das
dec
movsb
mov
push
fs
push
mov
pop
mov
pop
ret
pop
insl
loope
repz
or
push
cmpsl
adc
cmp
mov
pop
sbb
mov
addl
mov
xlat
stos
rclb
mov
cltd
out
fs
jbe
mov
dec
inc
push
mov
stc
sahf
clc
movsl
push
push
ljmp
insb
pop
mov
loopne
ret
push
push
cmp
mov
or
and
push
sahf
sub
inc
aad
test
scas
mov
sbb
fiaddl
push
jg
rcrl
cs
mov
sahf
mov
cmp
stc
sub
jns
shll
in
rorb
fs
jae
add
aam
into
test
pop
xchg
pop
sub
push
sbb
and
mov
mov
mov
idiv
xchg
mov
jne
sti
mov
jge
aaa
out
and
fwait
jmp
jns
addb
jmp
iret
jmp
shll
xchg
pop
jp
jmp
enter
mov
and
stos
fnstcw
pusha
cmp
repz
pusha
int3
pop
xchg
lret
add
loope
xor
insb
mov
pop
dec
insb
stos
enter
adc
icebp
sbb
add
scas
jle
push
sbb
aaa
adc
pop
or
sub
insl
leave
lcall
arpl
cmovbe
dec
jl
rclb
inc
cmp
mov
cmp
ja
jmp
into
xchg
pop
fdivp
test
or
clc
jbe
mov
sub
push
aaa
movsb
or
push
pop
je
jbe
mov
push
sbb
aaa
out
mov
jno
jns
jl
sbb
dec
repz
xchg
push
or
mov
scas
cmp
lods
subl
jg
loop
loopne
lods
in
aam
inc
enter
daa
adc
shlb
fstpl
cmp
cmp
movsl
sbb
xor
adcb
subl
arpl
ljmp
pop
mov
push
js
sbb
mov
push
fcompl
pop
sub
sub
mov
popa
pop
adc
mov
jne
mov
and
ret
push
cltd
mov
int
dec
and
adc
jge
std
cmp
lcall
fimuls
mov
test
inc
sbbb
jg
mov
mov
fs
push
adc
push
cmp
jb
icebp
divl
fldcw
cld
xchg
mov
in
dec
or
inc
inc
into
jecxz
out
cmc
fwait
outsb
adc
stos
xchg
xchg
xchg
loop
das
xchg
imul
int
add
insb
and
and
inc
lods
scas
mov
mov
jg
hlt
mov
cli
mov
repz
mov
pop
sti
daa
add
mov
mov
loopne
shrb
adc
cwtl
imul
dec
loope
cmp
dec
cwtl
sbb
repnz
outsl
xlat
mov
repz
jae
pushf
sub
jmp
xchg
fisubrs
mov
lret
das
clc
nop
jle
adc
xchg
mov
fdivr
sub
or
je
pop
or
cld
sbb
lea
adc
cld
dec
adc
add
adc
mov
js
dec
rcll
inc
test
add
aas
add
mov
dec
out
cmp
notb
pop
std
stos
andb
rcll
cmp
pop
icebp
adc
cmp
sub
lret
stos
mov
mov
lock
mov
or
sub
inc
sbb
mov
mov
dec
pop
mov
cmpsl
adc
pop
mov
jno
test
xor
mov
pushf
es
push
into
sbbb
sub
jmp
iret
xchg
test
shll
fs
push
ret
and
out
test
mov
push
pop
xor
mov
xorb
out
inc
cmpsl
ret
std
imul
int3
cmp
add
or
mov
mov
lcall
test
pusha
enter
push
sbb
jecxz
inc
pushf
sbb
rcrb
add
add
in
dec
dec
add
dec
loope
jns
loop
in
dec
xchg
xchg
mov
addr16
jle
mov
push
cmp
ja
popa
mov
mov
repz
mov
data16
dec
push
int
jne
jp
mov
xlat
sub
add
imul
ret
inc
mov
or
mov
bound
sub
out
pop
addr16
dec
jp
enter
jecxz
insb
insl
imul
int
pop
in
scas
in
pusha
fcomps
push
xchg
jle
lahf
pop
int3
jnp
or
or
cmc
and
mov
push
inc
xor
cmp
xchg
push
sbb
xlat
shrl
divb
pusha
push
aam
in
pushf
xor
mov
ror
mov
mov
inc
sti
xor
or
int
add
xlat
and
pop
cmp
add
sub
std
mov
sbb
out
xchg
adc
mov
andb
movsb
xchg
shrb
cmpsl
pop
mov
jne
mov
sbb
imul
xchg
inc
or
jge
jno
mov
jl
in
xchg
dec
bound
xor
dec
jb
scas
sbb
xchg
and
sub
xor
push
push
mov
inc
push
fsubr
cmpsb
arpl
in
mov
cmp
adc
daa
cmp
mov
sub
ljmp
ss
push
les
lahf
in
insb
xor
sbb
mov
rcl
pop
mov
pop
push
push
shrl
movsl
push
and
fmull
fsubrs
js
mov
sahf
cmc
adc
add
clc
pop
jp
orb
test
mov
mov
test
push
int
pop
add
mov
pop
jl
inc
lcall
cmp
arpl
mov
mov
sbb
sbb
cmp
or
fs
or
jecxz
ss
pop
cmp
sub
jbe
lret
sbb
rcr
cmp
repnz
push
mov
bound
mov
outsl
je
mov
adc
sbb
cmp
adc
pop
mov
push
fs
movsb
adc
lods
xchg
in
mov
adc
repz
cli
out
clc
mov
and
sar
iret
fdivrp
pop
gs
add
pop
aam
ljmp
scas
rol
adc
or
or
push
sbb
sub
lock
cmc
mov
push
pushf
rcll
jbe
jmp
adc
mov
nop
pop
les
inc
out
lret
aad
dec
and
lret
cmpl
fucompp
jl
jno
ficoml
dec
call
jnp
int3
pop
mov
push
subl
test
xchg
xchg
sub
cmpsb
daa
inc
sub
fwait
inc
and
mov
fisubl
mov
movsb
rorl
or
xchg
std
push
pop
mov
jl
mov
mov
std
cmp
call
fs
mov
cmc
adc
cld
dec
mov
mov
add
daa
aam
push
and
aad
fisubs
and
fmull
cmpsl
adc
mov
mov
jae
bound
sbb
mov
jae
pop
jl
mov
mov
testl
xchg
add
out
xchg
jb
sbb
xchg
and
es
dec
pop
sahf
pop
faddp
inc
stos
outsl
pop
and
xchg
jne
aaa
push
lock
sub
add
cmp
dec
pop
ret
pop
push
mov
popf
push
test
mov
jg
inc
xor
mov
test
in
push
je
dec
add
or
sub
lahf
leave
xchg
xchg
in
sbb
xchg
add
pop
mov
dec
sti
mov
or
mov
mov
mov
dec
fistpll
mov
dec
cmp
fnstenv
pop
sub
xor
test
jecxz
mov
jmp
cmovs
sbbl
dec
sub
loope
loopne
jae
mov
and
ljmp
roll
inc
mov
pusha
jae
pop
fbld
push
xchg
push
dec
mov
add
pop
inc
push
adc
jae
inc
into
push
mov
lret
in
mov
xchg
mov
and
sub
subb
loopne
adc
lock
ret
or
hlt
jo
mov
xchg
xor
or
dec
mov
inc
cmp
add
fs
int3
dec
stc
lock
sub
sbb
jne
lds
push
shrb
inc
mov
rcrl
and
mov
jge
fistps
sbb
xchg
aaa
test
or
push
lds
es
rcr
adc
shll
inc
jo
test
scas
sti
jns
and
xchg
test
and
cmpsb
out
shr
mov
dec
jbe
adc
cmp
mov
loope
scas
and
adc
cmp
cmp
ds
cmpsb
pop
movsl
es
lret
lahf
mov
sbb
push
cli
sbb
lods
jb
jns
ljmp
jb
pop
add
sbb
inc
jae
push
mov
add
mov
leave
sub
mov
adc
fisttpll
jl
pop
sbbb
push
mov
dec
mov
push
lahf
mov
int
fldcw
sub
pusha
aam
sti
out
xor
jle
cmp
sub
sbb
and
outsl
mov
outsl
jg
push
mov
adc
stc
mov
cmp
sub
pop
cmp
call
test
lret
mov
stos
inc
push
cmp
lret
repnz
push
cmc
sub
xor
ret
outsl
push
jp
loop
testb
sbb
inc
cmp
loope
in
data16
sahf
das
lods
jl
mov
repnz
jge
sbb
mov
sti
test
incb
adc
gs
mov
loopne
movsl
mov
repz
adc
gs
fstps
imul
sbb
mov
xchg
cltd
dec
pop
sbb
push
scas
cmp
push
insb
movsb
pushf
jle
jecxz
ret
cs
lret
pop
aad
dec
xchg
nop
xor
pop
dec
xchg
push
mov
add
push
dec
loopne
je
push
pop
jecxz
ficomps
jg
cmp
call
cli
ret
negl
jmp
addl
push
pop
mov
xor
cmp
aas
aas
aas
jb
jmp
jmp
cmp
pop
std
stc
outsl
stc
cwtl
aaa
int3
aam
inc
in
imul
xchg
js
lret
mov
clc
mov
jbe
mov
cwtl
jmp
push
mov
das
jmp
jl
sub
test
aam
int3
sti
ret
fs
movsl
es
scas
insl
xchg
jmp
dec
std
add
adc
das
mov
lahf
sbb
lods
dec
fsubs
mov
ljmp
mov
fwait
movsb
rorb
repz
mov
test
push
ljmp
clc
push
lahf
in
xor
shll
mov
pop
inc
mov
xchg
mov
cld
cmovg
out
ret
xor
add
cmp
mov
sub
test
jg
xchg
shlb
sbb
aad
lret
or
xlat
dec
fwait
outsl
adc
test
and
push
clc
sub
repnz
jns
out
in
cmp
inc
mov
xchg
cmpb
mov
mov
mov
sarl
mov
dec
sbb
adc
movsb
jns
mov
out
ret
test
jmp
ficoml
subl
jecxz
push
cmp
addr16
xchg
jp
mov
sbb
inc
cmpsb
pop
jnp
mov
jle
mov
pop
pusha
push
xchg
xchg
and
inc
pop
cmp
mov
jae
adc
push
jnp
out
add
mov
stos
and
aaa
xchg
sbb
sbb
decb
scas
pushl
imul
pop
push
iret
inc
inc
rol
mov
xchg
mov
fstps
or
ret
je
inc
mov
addb
sarb
and
push
jl
xchg
kxnorw
rorb
mov
es
imul
dec
push
inc
call
jge
mov
mov
and
dec
or
or
jno
fwait
inc
jl
or
dec
inc
dec
cwtl
push
mov
adc
add
mov
clc
test
in
test
inc
sub
mov
in
mov
shll
adc
cmp
add
sub
adc
jmp
js
movsl
sub
jno
lahf
stos
in
push
stc
and
lahf
add
outsb
inc
xor
inc
dec
andb
and
and
test
push
xor
inc
fcompl
mov
push
arpl
cmp
adc
mov
cmp
dec
mov
mov
push
ret
xor
push
scas
jbe
sub
xchg
mov
adc
pop
les
xchg
sahf
call
ljmp
push
inc
xchg
mov
inc
cmp
lods
dec
mov
ss
mov
fsubs
adc
bound
adc
cmpsl
or
into
mov
cmc
lock
jne
mov
mov
xchg
imul
inc
add
jge
stos
fwait
out
lods
arpl
adc
icebp
orb
adc
in
clc
fnstcw
sti
xor
aad
and
push
gs
int
loopne
lods
fistps
movsb
lock
ret
push
lret
es
mov
stos
dec
dec
xchg
pop
clc
pop
sbb
mov
icebp
or
cli
pushf
sub
or
mov
mov
nop
sete
dec
divb
adc
or
dec
cmp
je
js
jecxz
es
sbbb
lea
jmp
jns
xchg
inc
jo
fwait
cltd
rorl
xchg
fcomi
repz
dec
push
inc
push
data16
fdivp
lahf
jb
sub
jmp
lock
loop
in
rcll
sbb
add
cwtl
repnz
add
inc
icebp
xchg
sub
push
push
jnp
imull
mov
sub
mov
das
das
lret
mov
repnz
ret
repz
sub
insl
jge
add
sbb
cmpsl
adc
mov
mov
push
lods
mov
mov
sarb
or
lret
and
sbb
mov
and
test
das
dec
mov
movsl
out
lods
mov
fnstsw
mov
xchg
mov
adc
sbbb
stos
dec
repnz
imul
sub
mfence
jbe
cmp
pop
xor
ds
mov
mov
mov
push
xchg
aad
inc
popa
push
sub
flds
sahf
rcrb
cwtl
add
ds
push
jmp
ss
in
mov
xchg
mov
dec
cmp
push
or
pop
fwait
ja
push
testl
data16
jnp
dec
inc
stos
jne
dec
mov
out
mov
hlt
dec
jmp
movsl
mov
pop
out
and
out
or
xor
jp
sahf
iret
and
sarb
jo
jle
inc
movsl
in
fimuls
pusha
test
push
xchg
xchg
testl
adc
std
jae
pop
hlt
push
jp,pt
popf
daa
insb
sarb
adc
xchg
or
loopne
jg
dec
imul
in
bound
add
sub
jge
or
ret
dec
leave
jbe
mov
arpl
stos
and
pop
pop
aas
push
cmp
cmp
addr16
mov
mov
push
fiadds
pushf
test
fs
fidivrs
jns
scas
cmp
adc
hlt
push
xchg
mov
jbe
pop
sbb
js
sbb
shll
jecxz
lods
or
pusha
mov
addb
push
dec
scas
addl
fstps
pusha
push
sub
mov
fisubrl
mov
arpl
in
insl
iret
in
jo
sti
enter
daa
adc
test
rcll
sub
loop
cmp
ds
xor
cmp
jo
negb
int3
sub
add
les
es
push
push
inc
pop
push
mov
rclb
ret
cmp
push
popa
daa
push
and
into
sub
adc
stos
daa
adc
xchg
notb
frstor
mov
push
inc
mov
mov
dec
push
movsl
xchg
sub
cmp
lcall
pop
mov
dec
sbb
mov
aad
mov
test
lret
push
pop
jg
and
or
sub
outsl
inc
adc
in
daa
ss
xchg
fnstsw
pop
loop
divl
test
jmp
stc
xor
jmp
adc
outsl
cmp
mov
pop
xor
pushf
xchg
push
adc
int
loop
or
xchg
jmp
adc
or
xchg
mov
out
jbe
cli
sbbb
in
arpl
mov
gs
dec
push
loopne
lret
xor
loope
add
les
aas
repz
aaa
xchg
pop
sbb
cmp
fst
mov
adc
sbb
jg
aam
adc
mov
insb
pushf
aad
cld
addr16
ljmp
inc
sub
mov
xchg
je
lock
jecxz
mov
movb
push
call
clc
dec
imul
stos
jp
sbb
fcmovu
and
mov
inc
mov
add
mov
mov
jnp
sbb
cmp
or
inc
in
dec
cwtl
lods
push
std
mov
aad
mov
lret
icebp
insl
out
cld
xor
enter
xchg
mov
and
das
test
xlat
mov
aam
mov
push
es
ret
sbb
fs
dec
repz
stos
cmpsl
adc
test
int
fsubrl
int3
lcall
push
inc
mov
fsts
cltd
cli
cmpsl
faddl
out
push
jo
mov
fs
clc
int3
or
xchg
loop
jecxz
mov
mov
push
adc
fistps
add
int3
or
xchg
dec
cs
cmp
cmp
dec
dec
xchg
or
lret
adc
cmpsb
and
test
out
into
xchg
sbb
inc
clc
stos
mov
fwait
int
int3
push
pop
inc
mov
add
incl
xor
lea
in
jle
xchg
out
stos
fwait
mov
ja
mov
cmp
insb
ja
test
dec
loope
mov
ret
sub
mov
add
aam
fwait
pop
addr16
adc
jp
pop
je
jmp
jo
icebp
addl
out
push
push
sub
rolb
addr16
push
jp
dec
push
and
xor
cmp
xchg
jle
ret
aaa
in
or
inc
shlb
push
xchg
lret
pop
test
int
aaa
adc
jae
jo
push
add
pop
popf
dec
adc
sti
mov
push
push
dec
push
stos
pop
add
in
pop
sbb
jbe
imul
pop
scas
lds
jl
adc
pop
fs
mov
lcall
or
arpl
icebp
jl
pop
gs
or
mov
loope
fisubrl
cwtl
xchg
fists
int3
push
pop
pop
pop
mov
dec
mov
add
sarb
mov
int3
mov
cmp
fidivs
movsb
rolb
jecxz
in
andl
aaa
mov
push
das
jl
jne
dec
push
jle
push
jp
aas
xor
mov
dec
stos
and
push
or
inc
dec
sbb
in
push
push
xchg
enter
daa
adc
cmp
fdivrs
sub
mov
cmp
les
ret
movsl
cmp
and
xor
je
lahf
popa
sbbb
mov
lds
cmc
fistps
pop
js
and
inc
ficoml
add
cwtl
push
inc
mov
dec
mov
sub
adc
or
outsb
or
cmp
je
push
fistpll
imul
add
and
out
mov
int
pop
iret
sub
mov
js
xor
inc
push
lods
mov
or
in
sbbl
lods
xor
xchg
or
mov
push
lcall
jecxz
adc
jns
ss
les
sbb
divl
dec
lret
lret
pop
mov
dec
inc
or
jmp
push
sbb
xor
shrl
dec
loop
cmpsl
sub
add
stos
add
repnz
xor
out
lock
cli
mov
cmp
into
cmp
push
iret
gs
daa
jnp
adc
loop
push
call
in
ret
je
les
test
dec
repz
loop
lret
jge
xlat
icebp
add
adc
movsl
pushf
jg
lahf
jmp
inc
mov
ja
jmp
lahf
jmp
std
dec
mov
sub
adc
dec
sub
jne
idivl
mov
xchg
call
ja
pop
orb
or
jae
fistl
in
ja
lods
inc
inc
js
inc
lea
int
testb
xor
andb
not
mov
in
mulb
add
mov
nop
int
notl
icebp
inc
lds
cld
pop
xchg
inc
lret
aad
movsl
mov
stos
mov
jp
lock
xor
xchg
sub
mov
fs
adc
mov
xor
iret
dec
out
push
jp
jl
popa
in
out
mov
daa
mov
push
icebp
jl
mov
ror
pop
clc
stc
outsb
rorb
xchg
rcrl
sbbl
push
push
xor
je
pop
and
xchg
and
ljmp
xchg
pop
mov
add
out
das
dec
ljmp
sbb
in
pusha
cmp
or
int
xor
lods
or
test
test
test
sbbl
cli
rolb
sub
or
pop
adc
add
stos
add
jmp
sbb
xor
jb
jns
shll
xchg
ds
icebp
mov
pop
pop
mov
notl
roll
or
mov
xchg
push
lret
dec
les
out
lahf
xchg
icebp
out
pop
mov
cs
cmp
adc
mov
icebp
lock
int
jmp
jp
mov
and
inc
jp
test
outsb
jle
xor
in
pushf
jge
fistpll
fwait
clc
xchg
popf
lea
add
mov
mov
rcll
les
lcall
fadd
stos
jp
rclb
outsl
packssdw
or
scas
sub
dec
adc
or
iret
arpl
scas
ret
mov
hlt
pushf
add
iret
arpl
or
push
aaa
scas
neg
dec
int3
stc
jl
pop
call
jnp
lds
mov
outsb
repnz
jns
cmp
cmp
push
xor
nop
jbe
popa
inc
jge
mov
insl
aaa
popa
pop
in
icebp
and
je
repnz
push
pop
pop
das
xor
push
dec
into
scas
ja
lods
and
fdivs
push
dec
cmp
cmpsb
repnz
add
jmp
mov
bswap
cmp
mov
add
sub
add
ds
js
inc
cmp
cmpsb
mov
lahf
pop
mov
sbb
pop
leave
add
insb
dec
xor
xchg
pop
lahf
inc
idivb
mov
hlt
push
aam
push
shl
enter
xchg
sub
pop
push
outsb
popa
and
rorb
sub
fwait
jg
subb
mov
xor
mov
jge
and
xor
push
stos
sub
jecxz
mov
repz
testl
mov
sbb
stos
sahf
ror
int
mov
jge
add
xor
mov
stc
fwait
icebp
stos
fs
lods
jno
dec
xor
mov
fcom
outsl
dec
divl
jecxz
lret
loope
push
push
mov
loop
into
xor
outsl
jnp
int
and
mov
lahf
imul
and
add
dec
cwtl
lods
sbb
dec
mov
push
out
out
imul
gs
mov
cmp
sub
lea
js
fs
loopne
aas
push
pop
outsl
nop
cmp
xchg
popa
fsqrt
mov
or
pop
stos
mov
movsl
mov
sbb
push
add
xlat
xor
js
xor
mov
leave
or
mov
cs
fcom
out
ljmp
cld
enter
dec
dec
mov
fnstsw
mov
mov
icebp
cld
adc
pop
xor
aaa
ds
out
jnp
fstpt
ds
sbb
inc
int
jnp
test
lods
aas
mov
das
idivb
xchg
mov
rcr
es
sub
std
xchg
cli
fwait
cwtl
and
sbb
ljmp
cld
xchg
test
mov
adc
ret
push
xor
addr16
mov
xlat
pop
outsb
aam
lcall
mov
mov
scas
dec
jmp
imul
push
loope
popa
sti
mov
lods
hlt
insl
outsb
mov
jbe
add
repnz
repz
rcr
push
xchg
cltd
push
sub
mov
xor
push
testb
mov
jne
inc
enter
fcoms
sar
cmp
stos
sbb
push
xchg
fcomps
das
bswap
cmp
jae
call
xor
loop
mov
lods
cmp
dec
pop
rorl
lods
arpl
inc
sbb
or
xlat
inc
fwait
sub
in
dec
mov
repnz
pop
and
mov
into
xchg
lea
mov
sub
pop
mov
mov
dec
mov
loope
xor
dec
cmpsl
push
xchg
jne
cmpsl
scas
mov
sub
bound
addr16
fisttps
out
add
sub
enter
outsb
decl
jp
enter
sub
out
jnp
xor
adc
pusha
jp
inc
lds
jo
mov
inc
dec
mov
mov
popf
pushf
or
mov
lret
add
je
rcrb
cmp
subl
push
rcr
ret
ret
xchg
leave
fcmovnb
cltd
hlt
out
xor
inc
or
lret
mov
inc
mov
jecxz
mov
add
dec
in
mov
mov
fisubrs
stc
lds
cmc
cli
shlb
jge
jb
test
inc
pop
and
push
xorl
jge
or
sbb
loopne
or
xchg
inc
jno
pop
das
jl
xor
dec
cld
mov
fwait
xor
jno
out
push
lock
pop
push
test
sbb
cmpsb
jne
mov
enter
daa
push
insb
xchg
cmp
fsts
sub
dec
inc
cmp
dec
in
dec
push
mov
lahf
es
push
inc
insl
jae
add
fadds
mov
pop
push
dec
push
imul
push
sbb
push
sub
sub
aaa
mov
adc
and
jo
cli
repnz
mov
push
and
mov
repnz
aam
sub
cs
jbe
mov
sbb
shll
mov
cmpb
je
and
sbb
gs
fdivr
mov
sub
stc
push
sub
fs
jbe
mov
ss
iret
cmp
adc
imul
test
fnsave
cmp
jne
or
mov
cmc
or
xor
ds
outsl
scas
cmc
mov
xchg
imul
scas
pop
add
lods
inc
pop
mov
or
cli
sbb
clc
mov
movsb
jmp
sti
lock
imul
loopne
cwtl
push
mov
adc
test
les
jg
out
push
xchg
push
pop
leave
cmp
and
and
pushf
aad
or
cs
lock
jb
mov
popa
lock
dec
pop
xor
je
push
cld
jecxz
out
mov
mov
sub
insb
aad
jne
gs
call
mov
dec
ficompl
fldt
or
inc
push
jnp
inc
ret
pop
inc
aas
pop
nop
data16
inc
sbb
and
movsl
pop
shrl
lret
push
imulb
xchg
adc
cmp
fstps
call
mov
cld
mov
lahf
lret
mov
push
mov
inc
ficomps
lock
stc
and
inc
fldt
into
mov
inc
ret
das
lods
sub
aaa
addr16
sbb
frstor
xchg
popa
adc
dec
lods
pop
movsl
push
mov
cltd
xor
shll
shlb
shrb
test
xor
inc
lods
push
mov
shlb
xchg
lahf
lret
mov
jecxz
or
pop
loopne
jl
or
out
cmc
lcall
adc
mov
xchg
xchg
xor
imul
scas
repnz
jle
jmp
xchg
out
xor
or
sub
fwait
pop
xorl
das
lea
stos
dec
mov
xor
inc
shl
sahf
add
sbb
pop
insl
sahf
xchg
ja
movl
mov
outsl
cmp
jne
loope
mov
aad
out
sbb
sub
jmp
rcll
test
testl
jecxz
insl
inc
pop
jp
xchg
repnz
xor
mov
dec
cld
jle
repnz
ljmp
sbb
out
pop
dec
in
inc
pop
or
jae
ljmp
pop
mov
dec
stos
pusha
rdpmc
xchg
lret
jle
sbb
fbld
in
adc
push
jo
adc
mov
in
add
ljmp
hlt
xor
and
inc
adc
or
sub
jno
xor
add
add
lahf
mov
pop
inc
ss
fimuls
mov
lds
outsl
dec
mov
lds
fwait
movsb
popa
sbb
pushf
jbe
cmp
sbb
sbb
inc
or
mov
sarb
cmpsl
dec
imul
xor
int3
xchg
sbb
aad
pop
test
in
mov
cmpsb
clc
inc
dec
in
or
mov
loope
daa
or
rol
loope
xchg
sub
jo
cmp
ds
shlb
out
or
sbb
sbb
mov
mov
mov
dec
pop
in
je
js
sbb
pop
mov
pop
add
jns
fdivl
stc
outsb
daa
push
es
roll
adc
shr
xor
test
mov
enter
fisubrs
jmp
je
lcall
loope
stos
inc
test
jb
and
cltd
cmp
aaa
test
mov
arpl
stc
or
std
fs
ss
loop
fmuls
jmp
scas
stos
push
lret
xor
test
cmpsl
lea
sti
jb
cmc
shl
xchg
xor
dec
outsl
loop
sub
imul
mov
cmp
adc
mov
out
jbe
cli
dec
cld
or
lar
sti
lahf
in
mov
sarl
cld
loopne
add
pop
lods
in
xor
sub
inc
jbe
pop
repz
repz
inc
xchg
sub
sbb
lret
xlat
scas
clc
jae
sbb
inc
adc
cmp
movsb
inc
mov
or
dec
shr
fiaddl
sub
dec
mov
cmpsl
je
sbb
jecxz
mov
xchg
mov
movsl
call
hlt
mov
pop
fwait
test
mov
lds
fcmovu
ffree
push
pop
pusha
sahf
and
adc
inc
fimuls
aas
stc
shlb
push
in
aad
cmpsl
ljmp
imul
jecxz
cbtw
cltd
push
movsl
mov
fcom
mov
xor
leave
cmp
lret
and
iret
mov
fucomip
lock
add
and
test
insb
aam
nop
pop
mov
test
dec
fisttps
cmpsl
or
ret
mov
sub
lods
lret
mov
mov
push
and
push
inc
pop
rolb
shlb
dec
xchg
fs
jl
pop
fldl
push
insl
clc
mov
inc
dec
ljmp
jb
mov
xchg
out
pop
mov
xchg
data16
test
icebp
ret
jns
cmp
fdivl
mov
mov
mov
in
ljmp
loope
sbb
jp
or
dec
mov
push
jmp
and
inc
gs
xor
shll
in
inc
in
icebp
push
xchg
sub
shll
lods
cmp
pop
sub
daa
ja
das
and
in
mov
mov
cwtl
mov
rolb
jne
or
mov
insb
out
cld
mov
pop
jmp
pushf
lcall
jp
bound
mov
or
jp
adc
and
fs
lds
jnp
mov
in
cmpsl
je
mov
into
fistpll
mov
pop
test
push
jae
pusha
inc
push
or
xchg
jns
out
inc
push
dec
xchg
ss
rcl
pushf
xchg
and
js
push
mov
scas
push
out
push
cwtl
mov
loopne
and
ret
out
leave
in
test
jge
clc
arpl
push
push
inc
adc
mov
push
mov
add
hlt
outsl
add
mov
pop
jne
dec
fidivs
and
shr
jbe
enter
sbb
xchg
mov
mov
push
pop
inc
fdivl
push
and
lea
aaa
sahf
insl
fimuls
lret
jno
lods
jl
add
andps
push
sbb
jo
push
push
scas
adc
fbld
push
and
push
scas
imul
cmpsb
jnp
inc
in
repz
mov
daa
or
cmpb
jle
loope
jge
sub
push
cmp
pop
fistpll
dec
imul
and
movsb
lahf
fs
inc
push
jmp
and
add
pop
sub
frstor
adc
lock
xor
pop
scas
clc
push
mov
jp
fsubl
mov
outsb
mov
adc
fisubl
sbb
mov
mov
xchg
and
xchg
popf
push
mov
cli
int
fistpl
fs
ret
cs
lcall
aam
xchg
push
mov
mov
dec
sbb
push
inc
sub
adc
in
mov
rcrl
rorb
adc
jo
sbb
cmp
add
push
out
es
xor
jmp
or
or
into
fisubs
jmp
xor
mov
shl
adc
cs
mov
inc
mov
lods
int
sbb
jmp
mov
mov
jp
aad
dec
fnstsw
testb
loopne
test
pop
int3
mov
pop
fstps
inc
div
test
xchg
out
mov
cmp
push
nop
sub
inc
aas
pushf
sub
jmp
clc
inc
add
aad
xchg
dec
xor
sub
dec
add
ss
jecxz
push
xchg
in
lea
xchg
pop
call
jae
mov
adc
cltd
dec
mov
add
pop
add
inc
bound
test
dec
add
cwtl
cmc
jmp
inc
add
icebp
and
test
scas
leave
cli
std
mov
cwtl
push
into
mov
mov
xor
mov
push
add
xchg
jle
mov
lods
xorl
jge
das
add
cmp
mov
push
test
es
inc
insl
dec
fisubs
in
xlat
cmp
out
lods
xor
std
mov
fistpl
pop
pop
je
mov
cltd
or
sbb
mov
es
push
aas
hlt
daa
mov
clc
repz
xchg
sbb
shr
add
dec
pop
cmp
out
jle
mov
mov
push
enter
call
clc
push
or
jg
xor
jp
mov
mov
and
dec
lret
jg
mov
pop
sbb
lret
inc
jmp
inc
or
dec
pop
fwait
mov
or
loopne
sub
pop
fldt
aaa
pop
mov
pushf
dec
fnsetpm(287
mov
mov
mov
and
pop
jecxz
and
sbb
mov
sbb
mov
dec
xor
dec
push
jbe
jne
orl
or
fistpl
das
idiv
jl
fchs
dec
xchg
testb
notb
std
negb
inc
bound
imul
cltd
inc
hlt
and
mov
insb
xor
inc
jnp
fiadds
or
add
sub
cmp
mov
test
mov
popf
adc
xor
xor
inc
dec
mov
sbb
sahf
iret
imul
fisubrl
fildll
adc
in
ret
lods
leave
inc
stc
cmp
enter
or
mov
push
shll
or
and
imul
and
add
sub
movsl
inc
sbbl
ret
movsl
shll
mov
imul
movsb
ja
inc
push
outsb
fdivs
fdivp
jge
movsb
inc
sbb
jp
or
sub
test
push
jmp
mov
lea
sti
scas
in
test
jp
sbb
cmpsl
cmp
ficompl
xchg
daa
or
cmp
cwtl
push
sub
das
push
cmp
out
movsl
pop
enter
jnp
lahf
adcl
mov
dec
sub
lods
fbstp
add
push
mov
aaa
cmp
loop
pop
cmp
sub
fmull
push
jb
fistps
outsb
in
jle
adc
mov
fisttpll
mov
jnp
mov
bnd
das
out
push
mov
mov
jg
movsb
sub
stos
lea
repz
xor
mov
ss
xchg
sbb
addr16
test
adc
jg
mov
mov
jae
stc
ja
or
jle
mov
les
test
daa
fadd
jp
imull
dec
lret
mov
bound
xchg
or
movb
ljmp
dec
or
aas
xor
imul
inc
iret
add
mov
aas
cmp
lods
mov
cmpsb
mov
stos
out
push
mov
mov
jns
mov
mov
sti
std
nop
xlat
sbb
xor
sbb
xchg
pop
jmp
loopne
sar
sub
push
xlat
les
pop
repz
xor
mov
sub
inc
aad
xlat
sub
add
add
dec
adc
adc
cmp
hlt
cs
add
nop
or
push
inc
lcall
je
cmpsb
mov
xchg
popf
push
jns
ja
fst
dec
repnz
adc
pop
jne
mov
out
fstpt
aad
pop
cmpsb
popf
add
insl
clc
inc
adc
mov
aaa
pushl
mov
mov
mov
push
dec
div
nop
or
cwtl
bswap
and
cmp
mov
mov
and
ja
cmp
add
cmp
fcmove
pop
mov
pop
imul
pop
pop
das
jecxz
into
mov
mov
icebp
aam
jb
ret
fsub
push
rcrb
insl
into
jb
dec
aad
mov
or
lods
mov
push
xchg
cmp
lods
push
mov
loop
sbb
xchg
das
xor
daa
ss
inc
and
pop
mov
imul
negb
xchg
pop
mov
in
rcrl
dec
pop
loope
loope
sbb
out
push
mov
lahf
push
mov
cmpsl
add
mov
mov
mov
xchg
sbb
xor
push
cmpsb
and
mov
test
das
inc
adc
sti
and
push
loopne
mov
inc
jns
lds
in
and
mov
add
mov
sahf
loop
ja
mov
dec
xchg
fstps
int
xchg
mov
mov
adc
jne
ljmp
mov
mov
jmp
xor
mul
sbb
sub
mov
test
daa
push
jp
sub
and
mov
or
mov
in
dec
mov
fistpll
push
pop
bnd
inc
jns
popa
jae
out
inc
push
xchg
jns
popf
cmp
mov
int3
push
adc
mov
push
sbbb
mov
scas
pop
jmp
push
es
adc
hlt
iret
ds
ret
sbb
mov
data16
adc
push
inc
sbb
or
fwait
cmp
mov
or
pop
mov
or
rcll
divl
shlb
idivl
mov
or
jne
mov
loopne
jge
lahf
sbb
daa
aaa
sbb
sub
sarb
leave
lcall
int3
pop
in
xchg
and
scas
shlb
and
test
push
inc
lahf
aaa
inc
movsb
cmc
test
subl
scas
daa
or
pop
cmp
xlat
insb
sub
int3
mov
ds
pop
int
gs
lods
pop
cmpsl
lahf
mov
hlt
pop
sbb
and
add
dec
adc
arpl
pop
out
xor
int3
and
pop
jl
jnp
jbe
push
push
xchg
hlt
fdivl
dec
sahf
outsb
push
js
adc
nop
sub
jbe
jl
enter
xor
mov
xchg
mov
jno
sub
in
pop
jb
push
lcall
stos
mov
jle
jmp
dec
sahf
add
xchg
orb
push
mov
dec
stc
jg,pn
fs
push
cli
ss
adc
jnp
push
imul
xor
cmpsl
mov
cmp
mov
or
dec
imul
pop
data16
sub
dec
outsl
sub
loop
test
imul
sbb
mov
lods
fwait
sarl
mov
add
out
mov
cmp
push
cmp
mov
xchg
push
pop
or
sbb
aam
les
imul
ds
xchg
je
int
int3
jg
cmp
mov
imul
adc
pushf
sbbl
dec
aad
lods
xor
out
jmp
sub
repz
ljmp
mulb
lcall
call
jno
jge
mov
adc
push
push
adc
xchg
fldt
ljmp
xor
inc
das
sbb
push
jb
xchg
out
mov
dec
mov
shll
divb
lret
xor
lret
mov
aam
test
repnz
cld
pop
ss
outsl
mov
xchg
mov
das
ret
mov
stos
and
sub
or
es
cltd
dec
insl
mov
aas
dec
rol
cmpsl
or
cli
popa
outsb
fs
lods
or
sarb
and
pop
mov
pop
mov
mov
cli
mov
pop
test
cwtl
mov
sbb
fnsave
imul
shll
fstl
vpcmpgtw
xorl
outsl
stos
jb
rorb
outsb
or
scas
mov
mov
mov
inc
and
xchg
dec
adc
sbb
adc
loope
fcompl
shrb
repnz
leave
add
xchg
mov
xor
or
or
ds
cmp
sbb
cmp
mov
and
dec
xchg
mov
jne
mov
sub
push
dec
push
cmpsb
jno
or
add
cltd
loopne
bound
jmp
mov
dec
subl
cmpsl
out
xor
or
jnp
jp
movl
push
cmp
into
lret
jle
fisttps
in
ss
cmpl
xchg
sub
inc
test
push
push
add
mov
or
in
sub
fcoml
xlat
lods
int3
imul
mov
adc
fmul
popf
in
xchg
ret
pop
leave
cs
sahf
hlt
pop
lods
lahf
arpl
movsb
sbb
sbb
pop
or
push
sub
inc
xor
fimull
inc
inc
int3
jnp
inc
pop
add
mov
lds
int3
lods
mov
adc
cmp
push
mov
clc
lds
push
js
lods
jge
sbb
push
xchg
mov
fwait
adc
xchg
dec
daa
test
scas
push
push
jo
adc
scas
mov
add
and
push
test
adc
faddl
mov
add
sbb
test
dec
int
sbb
or
cmp
mov
arpl
sub
adc
in
mov
inc
movsl
insb
call
jo
rorl
cwtl
and
pop
lahf
pop
add
inc
jle
sahf
add
es
pop
mov
pop
mov
or
push
fstl
fsubl
test
mov
gs
adc
imul
aad
movb
add
and
and
mov
adc
aad
xchg
pop
icebp
jb
lcall
outsb
mov
repz
sub
sahf
mov
sbb
lock
mov
mov
push
add
in
dec
fs
inc
pop
adc
mov
je
cmp
ss
jne
stos
imul
adc
push
cmp
roll
adc
into
xchg
xor
jg
xor
xchg
or
lods
loop
or
adc
dec
pop
add
dec
inc
jmp
push
mov
sub
cli
sbb
imul
mov
inc
pop
pop
mov
loopne
jg
pop
sub
rclb
sub
les
lea
sbb
mov
cmc
xlat
stos
jns
sub
jecxz
adc
mov
pushf
sub
push
jmp
mov
cs
fst
nop
push
lcall
repnz
and
dec
push
bnd
sbbl
mov
sbb
lea
stos
call
lock
ljmp
fistpl
insb
and
pop
stos
inc
dec
into
arpl
jne
jbe
cmp
fs
dec
rcl
mov
or
std
jg
outsb
cwtl
test
movsb
mov
adc
mov
mov
ficoms
in
mov
mov
mov
mov
add
insl
pushf
jl
dec
lret
adc
or
mov
test
lods
jbe
sbb
mov
lock
sbb
shrl
setns
lcall
jl
push
mov
js
movsb
fnstsw
xchg
fiaddl
ljmp
pushf
pop
aaa
out
mov
out
in
adc
pop
and
mov
in
cli
or
inc
xor
push
mov
xchg
fsts
xchg
out
sbb
inc
mov
addr16
sbb
jne
sbb
xor
cmp
xor
sub
ljmp
test
mov
sub
dec
or
hlt
push
or
mov
jns
adc
xor
std
mov
sub
jne
jecxz
mov
push
pusha
out
js
mov
jmp
enter
mov
std
or
stos
mov
addr16
pop
sbb
imul
mov
jl
jno
cmc
in
cmpl
mov
push
jmp
inc
mov
pop
cmp
sbb
jb
xchg
mov
dec
push
in
lahf
jecxz
xchg
jle
insb
sbb
jae
imul
sti
push
mov
push
iret
cld
testl
movsl
repz
hlt
test
repnz
test
sti
mov
or
fcmovb
adc
push
int3
test
xor
lcall
xchg
repz
mov
movsb
sbb
in
pop
adc
jge
inc
sub
jecxz
xchg
aaa
lcall
jno
mov
jl
inc
cmp
push
xchg
imul
and
es
scas
nop
xor
mov
push
inc
ret
cmpsb
xchg
dec
in
lods
xchg
andl
pop
aaa
adc
nop
shll
mov
sbb
movsl
jae
xchg
and
popa
lahf
loopne
sub
jo
sbb
popa
add
mov
xor
push
jmp
or
pop
cli
mov
cmpsl
push
xor
test
sub
cmpsl
adc
inc
subb
xor
jg
out
mov
mov
cld
andb
js
push
shlb
sub
das
pop
jo
je
dec
adc
sar
lods
mov
mov
sahf
inc
testb
mov
mov
mov
xchg
xchg
pushf
add
sbb
adc
jnp
cmp
icebp
adc
imull
jmp
repnz
fwait
xor
sbb
or
sahf
jle
push
ret
cmc
mov
in
dec
sahf
scas
outsl
call
ret
or
insb
loope
cs
add
mov
enterw
imul
or
dec
inc
mov
in
fimuls
incb
das
adc
jmp
cltd
pop
adc
fnstcw
pop
les
jbe
cli
mov
fstpt
icebp
std
xlat
jmp
push
push
adc
rcr
pushf
xlat
and
cmp
in
pop
aad
arpl
dec
lods
icebp
inc
shll
loope
je,pn
out
in
jecxz
xchg
insl
mov
xor
sbb
outsl
cmp
addl
mov
pop
pop
in
jle
leave
inc
and
aas
adc
mov
mov
pop
xor
idivb
mov
cwtl
inc
push
adc
mov
push
cld
mov
jmp
mov
pop
lock
ja
das
subb
jge
mov
cwtl
mov
repz
mov
mov
dec
idivb
mov
jb
lods
loope
and
mov
mull
mov
lock
shlb
mov
test
pop
mov
and
push
dec
adc
ret
sbb
sub
ljmp
les
xor
out
inc
jae
xchg
leave
imulb
pcmpgtb
popa
add
hlt
jno
fbstp
xor
xchg
xchg
int3
sub
test
lcall
scas
jb
sbb
mov
inc
inc
es
or
js
fwait
je
push
sbb
and
dec
mov
fcmovnu
mov
addl
in
popa
les
stos
imul
leave
icebp
or
lea
mov
or
dec
fsubl
xchg
mov
jno
out
push
mov
fucomip
mov
popa
xchg
xchg
lods
test
or
add
addr16
pop
jp
sbb
andb
fsubrl
or
or
pop
pusha
mov
cmpsb
pop
into
xchg
xor
filds
lcall
push
fsubrl
popf
lods
std
sahf
mov
mov
stos
adc
adc
sub
lret
push
scas
inc
cwtl
inc
push
sti
movq
or
fmul
pop
push
xlat
ret
sub
sbb
repnz
hlt
test
inc
test
inc
and
or
or
int3
inc
das
mov
jge
dec
jmp
int3
push
inc
inc
pop
pusha
push
ja
loopne
mov
jb
js
jecxz
mov
cmp
mov
mov
jo
jbe
fwait
enter
sti
sbb
aad
or
cwtl
clc
jl
fucomi
dec
add
loopne
in
cli
dec
jo
dec
in
scas
outsl
movsb
pop
and
aad
adc
push
cmpsb
gs
push
jns
cmpsb
or
shr
jp
enter
daa
pop
inc
push
cmp
xchg
cmpsl
insb
cmpsl
sub
popf
out
outsb
xchg
add
std
andb
and
add
or
test
add
sub
xor
xor
imul
jge
mov
cmp
shrb
lcall
xchg
pop
sub
sbb
adc
and
xchg
mov
mov
cmpsl
aas
and
push
push
ret
rcr
int
add
lret
xor
out
mov
lcall
xlat
mov
pop
sahf
jmp
out
sbb
ss
mov
cmp
mov
cmpsb
rcrb
ficoms
ss
cmc
adc
lods
lds
sub
lret
scas
xor
xchg
or
into
dec
ficomps
jge
scas
xor
mov
loop
mov
imul
and
dec
push
mov
out
outsb
push
cli
jle
fisubl
xchg
in
gs
mov
mov
gs
xchg
fnstsw
test
pop
addr16
push
adc
daa
mov
les
stc
xchg
mov
sub
sub
jl
sub
shrl
int3
jo
adc
sub
jmp
pop
fisubrs
repnz
loop
js
xchg
dec
or
xor
fcomps
lcall
mov
sbb
out
jmp
mov
sbb
dec
inc
xchg
inc
fcomi
sub
or
aam
inc
orb
jb
jns
mov
jmp
mov
loope
int
stos
cwtl
sti
test
mov
push
sbb
shr
fdivr
fbstp
mov
jecxz
dec
ss
fwait
cmpsl
test
mov
jge
aam
and
jg
int3
shl
push
mov
shrl
push
repz
mov
loope
dec
pop
fwait
mov
mov
fwait
mov
aam
jae
dec
cltd
and
dec
mov
or
push
push
leave
ds
repnz
sbb
jge
pop
loop
ljmp
fstps
subl
inc
ficoms
movzwl
movnti
add
mov
or
out
int
mov
les
bound
xorb
fidivl
inc
fsubp
pop
or
xchg
std
fwait
mov
movsb
adc
addr16
cltd
jp
in
adc
das
adc
imul
fs
out
sbb
ja
mov
ja
jno
dec
pop
xor
mov
out
mov
test
mov
insl
dec
mov
cmpsb
outsb
out
sub
aad
mov
xchg
pop
lods
insb
sbb
jo
mov
hlt
sub
mov
jne
cwtl
shll
and
mov
imul
dec
sub
push
mov
mulb
jo
into
pushf
std
inc
movsl
jb
jae
ds
lahf
dec
in
aam
xlat
mov
enter
test
xchg
sub
mov
fdivrs
imul
scas
mov
mov
adc
dec
dec
iret
mov
inc
adc
xchg
into
in
hlt
aas
outsl
sti
arpl
ljmp
jle
push
scas
adc
fisubl
cmp
test
xlat
push
pop
xor
insl
lds
imul
cmp
repnz
pop
movsb
mov
stc
adc
jge
jno
sbb
dec
aaa
sbb
or
jno
int
jl
inc
pop
dec
je
mov
pop
dec
in
xor
dec
xchg
scas
dec
pop
insb
and
dec
jns
or
mov
inc
loopne
scas
cmpsb
lea
std
enter
daa
push
add
cmp
cmp
sub
mov
and
add
sbb
pop
push
fnstsw
imul
pop
jl
outsl
xchg
or
mov
js
cmc
icebp
pop
js
cmpsl
push
cmpsl
call
jbe
fsubl
xchg
mov
stos
adc
cld
daa
xchg
repnz
aaa
mov
adc
mov
cmpsb
sub
jp
lret
outsl
es
dec
push
sub
push
pop
outsb
pop
jo
mov
fadd
sub
pop
mov
adc
lock
mov
repz
inc
xor
mov
leave
mov
stc
or
scas
xor
adc
jecxz
cmp
or
and
xchg
jo
cmp
cs
mov
mov
xor
cmc
inc
into
jne
add
test
cmpsb
and
loop
rcr
imul
rorb
lods
aaa
and
mov
adc
mov
and
in
cld
into
mov
push
xor
loopne
sub
fwait
adc
repz
jmp
add
pop
adc
sbb
addr16
addr16
stc
sub
inc
lret
jb
pushf
sub
add
cs
xchg
aad
stos
mov
dec
push
cmp
stc
subb
iret
lret
add
cmp
fnstsw
cmpsb
add
jl
jo
inc
imul
xorb
subl
outsb
bound
dec
mov
inc
fwait
add
push
test
xor
in
pop
adc
and
add
mov
inc
sub
je
mov
mov
aaa
mov
icebp
stos
xor
outsb
lret
sub
aas
mov
js
lock
imul
mov
jecxz
aam
in
ret
cmpsl
inc
mov
insl
push
mov
cltd
cmpsl
add
rol
lret
lods
mov
das
mov
mov
lea
data16
pop
cs
fcmovbe
inc
out
mov
test
cmpsl
push
roll
push
mov
xchg
xchg
cmc
pop
ljmp
dec
pop
cmp
cmp
or
outsl
insb
push
ljmp
add
stos
loop
int
out
sbb
out
or
dec
mov
sahf
test
es
lods
adc
mov
or
mov
push
pop
lahf
and
sbbb
xor
shrb
out
adc
xchg
push
mov
loopne
incl
inc
in
ja
jne
dec
push
mov
add
cmp
mov
add
dec
mov
enter
lock
adc
push
xlat
jmp
sub
jo
imul
out
sbb
or
repz
jp
cmp
and
outsl
pop
jnp
faddl
in
ret
in
adc
adc
insl
repnz
add
arpl
jae
jl
push
bound
pop
mov
pop
scas
dec
stos
clc
shl
xchg
xorl
sbb
mov
scas
push
and
sbb
sarl
ret
xchg
leave
or
arpl
leave
inc
sub
or
add
xchg
fcmovu
pop
int
jnp
ror
daa
ds
pop
mov
les
shrb
or
pop
pop
sti
cmp
out
push
dec
stc
mov
bound
sbbl
xlat
lcall
xchg
es
mov
enter
sub
xor
movsb
aad
scas
sub
fldcw
cmp
addl
mov
dec
enter
daa
add
jecxz
loope
mov
cmp
add
mov
mov
mov
lahf
cmp
das
push
repz
dec
add
gs
fisubl
jmp
and
sbb
mov
mov
inc
push
push
cmp
or
pop
sahf
outsb
aas
mov
test
xlat
sbb
push
mov
andb
lods
mov
cli
mull
mov
push
leave
sbbb
jmp
in
mov
lcall
lods
mov
icebp
sti
sbb
ficomps
das
js
test
aas
orb
out
imul
xchg
stc
rcll
fs
std
add
roll
cmp
and
or
cmpsb
push
adc
insb
rcr
cmp
lahf
jno
pop
fldcw
adc
stos
xor
push
outsl
test
imul
lds
lods
push
mov
mov
pop
test
in
ret
cli
in
lret
mov
test
sti
pop
jmp
fwait
gs
test
mov
std
sbb
fldenv
in
test
repz
cli
mov
cmp
cmp
adc
stc
mov
fsubrs
cs
jecxz
nop
js,pn
dec
leave
cmp
inc
or
jmp
je
sub
jecxz
cli
cmp
test
mov
in
sarb
addl
push
fistl
pop
pop
js
xor
fistpll
mov
imul
aad
jb
adc
mov
jmp
lods
shr
test
rorb
sbb
push
mov
sahf
lcall
mov
jge
lcall
mov
sbb
pushf
das
sbb
push
push
sub
cmpsb
aam
mul
ret
test
ror
adc
dec
mov
mov
push
mov
popa
loope
shrl
sbb
mov
or
and
add
lcall
mov
test
cmpsl
mov
xchg
mov
fnstsw
dec
push
clc
nop
es
xchg
mov
ljmp
xchg
or
jo
adc
lds
xor
xor
cmp
inc
loopne
xor
add
mov
lret
dec
sbb
pop
cli
xchg
nop
inc
or
adc
js
mov
add
push
add
dec
add
adcb
jg
popf
or
out
xchg
mov
loop
mov
add
cmp
std
sub
xchg
mov
mov
push
fimuls
lret
xchg
mov
dec
xor
sti
inc
lods
jmp
hlt
test
cmp
enter
inc
sub
xchg
dec
fisubl
pop
aas
and
in
insb
sbb
mov
std
clc
fwait
in
lahf
push
pusha
mov
xor
cmp
jg
mov
adc
and
push
xchg
mov
inc
out
stos
imul
sbb
shlb
scas
imul
jl
pushf
cmp
ret
fmul
cmpl
in
je
test
jne
or
jge
inc
inc
lods
jg
fimull
mov
adc
pop
in
cmp
jecxz
push
xor
ret
andl
mov
cltd
cmp
add
push
xchg
and
jbe
imul
out
xor
sbb
xchg
aaa
xchg
inc
sbb
jno
mov
and
push
repz
push
pushl
jo
aaa
out
or
stos
and
xchg
daa
test
pop
and
inc
pusha
xor
in
sub
lods
enter
daa
add
ds
das
fsubp
in
inc
js
pop
loope
cmp
sbb
data16
movsl
mov
dec
pop
test
push
adc
sbb
sahf
mov
push
lcall
cmc
repnz
js
sub
testb
push
xchg
ficoms
xchg
add
sub
jle
mov
push
stos
shlb
push
xchg
decl
mov
and
int3
or
int
xchg
scas
sub
hlt
pop
insb
mov
lcall
cmp
notb
test
add
or
xorb
mov
fs
repnz
sbb
cmp
fisttpll
mull
push
lret
mov
cmp
in
or
icebp
sbb
rorb
xor
sbb
inc
mov
imul
std
loopne
aam
dec
lods
add
sub
jecxz
lret
cli
pop
out
sti
mov
rorb
pop
sti
ljmp
mov
loop
push
pop
push
pop
ror
adc
inc
pop
rorb
xchg
push
ljmp
sbb
mov
sub
mov
mov
ret
daa
mov
sbb
aad
addb
pop
jbe
pop
insl
push
dec
mov
call
inc
lods
push
mov
dec
pop
call
imul
sbb
xchg
test
fistpl
mov
inc
inc
shll
cmp
das
insl
mov
mov
jmp
test
mov
ret
cwtl
sub
pop
mov
mov
mov
adc
pop
das
aaa
cld
pusha
cmpsl
dec
or
mov
fs
daa
mov
das
cld
pop
jge
leave
fs
sub
aam
pop
inc
ret
lds
jns
pop
stos
ret
dec
mov
adc
add
push
mov
clc
ds
lea
mov
idivl
loop
pushf
insl
jecxz
insb
out
add
in
ds
test
pop
sbb
push
push
xlat
fstpl
dec
clc
lret
sub
ljmp
add
mov
out
shrl
xchg
in
mov
cmpsl
push
pavgb
loopne
inc
xor
mov
aam
mov
int
outsb
dec
test
jae
jns
or
repz
arpl
mov
xor
out
movsb
jo
add
mov
sbb
iret
out
jo
push
add
xchg
repnz
lret
repnz
mov
xchg
pop
mov
or
cmp
mov
call
mov
dec
push
test
adc
bound
test
xchg
mov
push
and
ret
int
jns
orl
out
arpl
jp
das
out
ficoms
insb
mov
jle
fidivl
loopne
pusha
and
fists
mov
adc
es
movb
les
push
call
mov
mov
test
lds
fnstcw
mov
push
pop
cmc
adcl
into
ret
addr16
ret
pop
leave
clc
fs
and
pushf
arpl
adc
push
in
push
sub
aas
mov
xchg
int3
std
xchg
pop
sbb
mov
insb
unpcklps
fisttpll
rcr
ret
jbe
repnz
in
iret
cmp
push
out
mov
call
imul
aaa
push
jo
or
shlb
inc
into
jl
jae
dec
shl
push
add
xlat
xor
pop
scas
out
scas
jmp
and
mov
inc
lea
adc
adc
cwtl
daa
add
cmp
xor
loope
or
cmp
xchg
mov
imul
pusha
lahf
jnp
adc
mov
sbb
or
in
test
mov
loopne
js
and
pop
xor
xchg
mov
fsubl
push
sub
leave
outsb
add
mov
inc
jg
dec
xchg
add
rcrl
push
iret
add
int
pop
sub
out
lcall
outsl
mov
and
sbb
test
fildll
inc
addb
jg
add
mov
ret
stc
das
cli
andb
adc
mov
enter
repnz
xorb
mov
push
xor
add
or
rcr
into
fnstenv
and
adc
subb
lods
loop
outsl
aad
lea
inc
adc
inc
ja
sarl
push
pop
lods
in
js
mov
mov
loop
dec
cli
dec
sbb
mov
cmp
mov
fldenv
push
jecxz
lock
adc
or
mov
aad
lret
int
repz
add
xchg
leave
ja
sbb
sbb
fcmovnbe
and
ljmp
jno
pushf
addb
jle
push
aad
orb
xchg
inc
xor
scas
je
clc
mov
or
mov
scas
lods
je
mov
jle
mov
add
ljmp
xorl
mov
xchg
inc
in
in
cltd
aas
das
and
sub
jne
and
scas
mov
testb
pop
std
imul
cltd
mov
clc
movsb
mov
pusha
icebp
das
loop
cld
mov
mov
mov
and
mov
xchg
xor
xor
das
fisttpl
jno
imul
aam
sbb
fsubs
dec
dec
lods
adc
cmpsl
add
mov
fisubrl
bound
mov
sbb
xlat
pop
mov
jb
cld
push
addl
ficoml
push
dec
clc
push
ret
pop
xchg
push
inc
outsl
ljmp
es
cmp
pusha
out
or
xchg
sub
pop
push
jnp
dec
shll
xor
ljmp
ret
ror
pop
dec
jmp
jmp
hlt
mov
xchg
call
lcall
push
mov
pop
or
inc
inc
filds
rcl
ss
mov
xor
dec
xor
fwait
sub
xchg
push
xchg
xchg
inc
push
xor
xor
icebp
pop
jbe
shlb
cwtl
fisttpl
leave
scas
mov
movsb
fdivrl
in
push
dec
dec
push
sbb
jge
mov
ds
xor
mov
sub
and
cld
jmp
mov
add
cwtl
inc
jle
pusha
fsts
bound
jo
fs
and
in
pop
insb
repz
mov
xor
in
test
mov
testl
stos
stc
push
inc
shrl
dec
jae
into
repnz
stos
pop
sbb
jo
repnz
push
push
mov
sbb
jns
imul
push
das
push
xchg
push
pop
sub
iret
ss
ret
jge
outsl
xor
hlt
imul
xchg
pop
push
inc
xor
pushw
ja
stos
cld
test
repnz
aad
inc
mov
call
push
fimuls
mov
mov
stc
out
sarb
push
cli
ret
cmp
sub
push
xor
cmp
test
sbb
mov
or
sub
or
jl
sub
dec
xor
xor
mov
mov
and
test
test
popf
xchg
add
cmpsb
cltd
xorl
daa
add
lods
cmp
sbb
sbb
cvttps2pi
mov
cmp
in
mov
lods
cmp
popf
es
test
lahf
lcall
sbb
das
mov
jnp
movsb
pop
lcall
pop
je
pop
push
dec
les
inc
lods
fmull
mov
outsb
push
test
push
xchg
mov
in
sbb
and
jae
int
insl
cmp
xor
js
push
add
test
sbb
push
sahf
sbb
bound
inc
and
mov
dec
fdivr
out
jns
pop
mov
adc
in
ss
and
cmp
push
in
mul
push
push
lret
sti
xor
iret
jnp
dec
jmp
or
into
mov
pop
inc
xor
outsl
and
loop
popa
jo
test
ja
lock
shll
adc
mov
subb
jge
mov
in
test
adc
and
push
push
mov
gs
xlat
jb
add
sbb
fisttpll
repz
sbb
push
inc
sti
xlat
arpl
notb
xor
push
jmp
pop
aam
loope
pop
aad
out
nop
mov
pushf
and
sub
dec
stos
jns
je
pop
shl
sbb
or
mov
jg
sbb
bnd
imul
in
or
xchg
loop
daa
pop
popa
enter
pop
fadds
mov
add
mov
mov
ss
dec
imulb
mov
ljmp
push
mov
sbb
out
mov
xor
lock
lds
mov
daa
lods
ret
jecxz
test
insl
in
sub
dec
test
lods
cmpsl
add
popa
es
sbb
arpl
push
mov
and
andl
and
pop
cltd
xor
mov
push
sbb
lods
js
clc
inc
out
in
xchg
push
ljmp
addr16
in
in
stos
cmp
fwait
mov
push
add
add
or
test
jae
mov
shl
mov
test
mov
pop
shlb
ror
or
cwtl
imul
adc
sub
and
out
in
call
fucomi
jns
xlat
push
in
mov
jl
cmp
mov
mov
inc
lods
lcall
test
mov
test
cltd
fldl
xchg
lahf
sti
bound
fwait
xchg
push
cwtl
pop
andl
mov
xchg
lods
addr16
stos
add
icebp
pop
and
and
push
jnp
sub
jle
js
in
mov
pop
jecxz
fists
adc
fsubrl
jae
sbb
push
outsb
xchg
mov
add
inc
xchg
fildll
sbb
or
scas
xchg
scas
out
push
movsl
mov
mov
xchg
mov
ret
cmp
out
test
mov
add
test
xor
outsb
or
out
mov
inc
sub
stc
fisubl
inc
push
int3
shll
pop
jp
and
mov
push
vunpcklps
mov
test
nop
in
movsb
in
in
push
test
data16
dec
je
in
pusha
sbb
push
cmpsb
aaa
rcll
or
dec
jno
icebp
mov
dec
lahf
or
xor
adc
stos
scas
test
add
push
push
lods
cmp
loopne
jp
movsl
jno
daa
add
lcall
cltd
test
mov
pusha
ds
inc
sbb
and
cs
mov
push
mov
iret
orb
lds
push
mov
loop,pt
pop
shll
fistpll
mov
jle
cmpl
outsl
sub
and
rolb
push
int
xchg
xorb
mov
mov
xchg
and
roll
push
push
int
mov
lods
push
or
jmp
cmpsb
call
mov
rorl
mov
mov
jg
aas
mov
push
testl
adc
push
sbb
push
push
cmpsl
mull
push
leave
cmp
lods
or
fcmovnu
cs
lahf
cltd
mov
daa
jbe
xor
jno
outsl
add
imul
dec
add
cmp
lds
mov
or
cli
mov
lods
mov
adc
and
ja
inc
gs
sbb
pop
and
adc
add
frndint
and
repz
cmp
cmp
sub
sti
adc
mov
mov
inc
mov
aad
mov
nop
lcall
inc
pop
aad
dec
and
mov
mov
add
stos
outsl
std
call
test
mov
leave
in
enter
aam
add
dec
inc
das
movsl
jle
and
or
mov
sub
fst
sub
testb
dec
cwtl
pop
iret
push
mov
popa
mov
icebp
fnsave
adc
push
das
test
stc
pushf
adc
mov
xchg
mov
sub
jmp
dec
mov
ret
jb
mov
insl
aam
xor
cmpsl
add
adc
cmp
shl
mov
pusha
pop
bound
insl
xchg
cmpsb
pop
leave
xchg
shlb
push
cltd
push
outsb
test
iret
cltd
mov
adc
fst
movsl
clc
clc
jl
cmc
xchg
rclb
mov
mov
and
ljmp
cld
and
push
xor
std
rdpmc
add
xor
and
dec
xor
inc
stc
mov
xchg
push
mov
movsl
xchg
mov
sbb
pop
inc
push
scas
xchg
shlb
add
or
xor
jl
enter
jns
ja
lods
sti
xchg
fistps
mov
fucomi
mov
in
pop
mov
inc
mov
int
mov
mov
mov
adc
jne
push
mov
mov
out
jo
andl
inc
sbb
xorl
das
out
test
jbe
andb
addr16
mov
mov
and
fidivrs
jmp
jno
leave
sti
add
fbstp
sti
push
sbb
shlb
lods
int
xor
jecxz
mov
cmpsb
lods
push
inc
lock
stos
aaa
mov
fidivl
imul
xchg
scas
cmc
xor
adc
add
iret
hlt
fimull
pop
mov
adc
repnz
movsl
mov
push
test
mov
pop
xchg
insb
add
in
int3
mov
jle
ficoms
mov
shrb
sarb
push
cmc
movsb
jo
ss
shll
mov
fidivrs
gs
mov
push
mov
jno
fidivrs
mov
push
stos
rcrb
pop
popf
xchg
mov
scas
mov
and
test
xor
inc
cmp
pop
in
movl
daa
add
cmp
or
add
push
aaa
pop
cmp
repnz
and
clc
sbb
iret
jle
sbb
mov
movsb
xor
sub
add
fs
call
xchg
push
xlat
xor
andb
and
subb
fs
push
stc
push
sub
mov
mov
xchg
and
add
push
fsubrs
jbe
sub
pop
push
clc
movsl
shll
adc
aad
or
je
filds
test
mov
aad
stc
push
cmpsb
xchg
fs
loope
pop
dec
pop
ss
push
fmul
lret
popa
subl
xor
inc
or
dec
mov
into
cmpb
xor
sub
outsl
loopne
arpl
nop
loopne
imul
xor
data16
out
mov
daa
out
out
mov
cli
jecxz
call
in
jle
dec
sti
adc
lcall
loopne
movsb
cwtl
pop
inc
dec
movhlps
add
fnstenv
or
in
mov
repz
xchg
adc
and
leave
adc
sub
add
loop
sbb
lahf
xor
aad
ficomps
nop
jne
loope
movsb
icebp
mov
dec
cltd
test
je
and
mov
cmp
addr16
into
pop
mov
pusha
cmpl
popa
jb
inc
add
pop
cmpsl
mov
clc
inc
cmp
movsl
imul
pushf
cmp
dec
sarl
and
rorb
push
std
pop
insb
cmpsl
cwtl
sbb
cmc
mov
pop
decl
mov
cli
cld
or
inc
lret
lds
mov
ss
das
js
mov
push
mov
cwtl
ret
add
add
popa
dec
adc
jl,pt
sahf
fsubp
cmpsl
lcall
mov
push
dec
push
lods
cmp
lahf
mov
das
ja
mov
call
dec
inc
cltd
mov
arpl
int3
xlat
popa
push
arpl
mov
clc
mov
cmp
sub
jmp
lcall
sahf
xlat
xchg
add
icebp
push
or
pop
subps
rorl
adc
xor
popa
aad
fistpl
in
and
test
jnp
xchg
gs
jmp
aam
sets
push
xor
je
and
cmp
xor
cwtl
and
cmp
adc
ret
mov
das
pop
cmpsl
pusha
adc
pop
xchg
dec
add
cmp
mov
push
mov
les
sbb
mov
dec
in
dec
mov
fiaddl
fucomp
insl
insb
sbb
jmp
push
add
pop
out
mov
adc
push
dec
addr16
pop
cli
jp
andl
xor
nop
jnp
push
jle
out
in
int3
xchg
pusha
pop
push
sbb
ss
dec
mov
xchg
jae
adc
hlt
das
pop
popf
in
fdivrl
cmpl
sbb
stos
fildll
mov
scas
pop
stos
fcoms
sbb
adc
in
iret
push
or
ret
jp
aam
xchg
hlt
dec
pop
repz
adc
or
in
pop
inc
daa
xchg
mov
or
or
add
or
pop
fdivrs
lock
mov
dec
outsb
sub
incb
movsb
sti
adc
and
dec
jbe
aad
jge
sub
sbb
shll
push
dec
mov
and
push
jl
dec
orl
imul
scas
stos
jecxz
fisttps
test
cmp
inc
leave
fldl
cmpsb
and
in
scas
icebp
movsb
enter
daa
mov
inc
loope
aad
sub
cmp
cmp
mov
inc
movsl
mov
jae
push
dec
adc
mov
mov
fidivs
mov
in
lds
setne
js
and
lods
push
stos
icebp
push
inc
pop
jne
pminub
adc
shrl
pop
push
adc
stc
popa
stc
mov
xchg
mov
dec
mov
sarl
jecxz
or
fstpt
int
pop
outsb
sub
test
rorl
mov
cmp
add
fiadds
mov
xchg
mov
out
stc
or
fs
aam
adc
lock
cmp
sbb
test
cltd
mull
ffreep
lret
imul
adc
mov
int
cmc
mov
jp
jge
outsl
mov
outsb
mov
adc
and
data16
mov
fldenv
fsubrp
cltd
cli
push
fstps
in
jmp
mov
mov
mov
gs
pop
xor
fldcw
add
and
xchg
aad
in
sbb
add
mov
sub
adc
adc
pushf
ficoml
por
or
hlt
nop
push
fbld
dec
add
lcall
mov
test
mov
cmp
out
fistps
pop
push
adc
stos
xor
outsl
lahf
in
pop
dec
test
mov
pop
xchg
lret
aas
stos
or
outsl
mov
inc
sub
ror
dec
ljmp
movsl
je
shll
add
sbb
pop
icebp
mov
push
lret
xor
out
jle
mov
xchg
lock
movsl
das
push
mov
mov
inc
popf
pop
aam
dec
ret
nop
mov
es
call
dec
cltd
cmc
mov
jp
mov
imul
mov
cmpsb
cmp
and
mov
adc
sbb
fimull
mov
loopne
push
es
or
and
xchg
push
in
jb
mov
shlb
in
outsl
stos
or
out
ret
xchg
dec
arpl
push
out
pop
btc
add
or
xor
xlat
pop
mov
fsubrl
inc
dec
xchg
lods
xchg
mov
jb
xchg
add
or
push
test
sbb
jl
mov
mov
xor
sti
jns
gs
in
fsubrs
mov
adc
mov
sti
in
ja
ljmp
mov
sti
je
loop
test
lock
cltd
xor
out
cs
outsb
bound
push
fs
or
mov
out
fcompl
or
scas
addr16
pop
inc
jp
fcmovnb
and
fisubrl
fdivrl
mov
jle
mov
pusha
sub
jbe
out
xchg
xchg
mov
xchg
repnz
std
sub
jae
popf
and
mov
sbb
and
mov
xchg
in
cmpsb
sbb
mov
jo
mov
fstpl
mov
mov
dec
fisubrl
hlt
xchg
xchg
push
arpl
lcall
add
dec
push
cmpsb
xlat
fidivrl
pop
mov
pop
pop
mov
ficomps
sub
stos
mov
mov
cltd
cmp
push
jno
and
aaa
inc
lret
jge
cmpsl
sbb
pop
js
adc
or
inc
jno
test
dec
in
add
cmp
and
lret
scas
inc
ds
and
out
test
leave
jo
inc
pop
pop
xlat
cmpsb
movsl
mov
in
xchg
ret
xchg
pop
lds
fwait
cmp
sbb
les
fcmovb
pop
cmp
or
movsl
mov
and
lahf
push
dec
and
jne
sbb
je
and
pusha
jg
xor
in
pop
ss
push
nop
push
lret
pop
jo
cwtl
push
xor
mov
push
aas
outsb
hlt
addb
aam
mov
subb
mov
jno
and
dec
or
int
lret
push
xor
ja
lcall
fmuls
xchg
fcomps
add
or
jno
ret
mov
cs
stc
ret
mov
cmp
ss
inc
cmp
aas
add
neg
rcrb
push
xor
and
out
or
sub
xor
jl
cmc
xor
sarl
push
imul
je
pushf
fimuls
lods
outsl
andb
fnsave
jmp
push
mov
sti
loopne
sar
jns
inc
pop
jle
push
adc
ret
add
out
repz
adcl
lahf
call
cmp
sub
sub
cmp
adc
mov
cs
or
nop
sub
testl
adc
xchg
je
ss
push
faddp
mov
and
call
gs
adc
andl
mov
pop
in
xchg
shll
aas
dec
jp
jb
pop
cmp
int3
pop
mov
negb
fdivr
lods
shll
mov
mov
or
jl
cld
call
sub
popa
xor
hlt
lock
fidivs
das
ss
je
cmp
mov
ret
pop
aad
es
int
mov
fisttpl
mov
push
mov
subb
lods
bsf
insb
cmc
push
mov
cmp
jae
pop
es
fimuls
xor
sub
movsb
fisttpll
push
clc
sub
pop
sbb
rol
fildl
nop
dec
sub
stc
cmp
out
and
icebp
xor
bndldx
add
movsl
es
mov
mov
dec
out
testb
jl
movsl
inc
sbb
or
in
push
fwait
dec
mov
push
jbe
xor
pop
out
cmp
out
outsl
xor
and
jns
xor
in
fbstp
int3
repz
dec
fcoms
jbe
jg
sbb
and
dec
ljmp
mov
pop
mov
dec
mov
scas
in
add
fbstp
jmp
subl
out
movsb
out
sub
jae
mov
pop
mov
and
add
or
sarl
or
ficomps
jle
or
hlt
cwtl
pop
mov
mov
mov
jp
pop
popf
xor
iret
push
jmp
imul
fistpl
pop
scas
push
js
push
roll
cltd
jmp
rol
sbb
push
leave
ret
hlt
loop
in
arpl
aam
inc
inc
dec
jmp
push
mov
sbb
jno
out
xor
sbbl
push
fidivrs
shll
pop
push
movsb
rolb
inc
repnz
adc
cmp
movsb
adc
push
sarb
jge
lods
sbb
sub
aaa
iret
push
cmp
pop
stos
in
dec
std
es
xor
pop
mov
push
jae
xor
jl
pop
scas
and
imul
mov
stc
pop
inc
out
aaa
cmpsb
sub
xchg
in
jl
xchg
xchg
int
daa
std
add
cmp
sub
daa
repz
ds
loope
movsl
sarb
mov
mov
dec
push
add
add
gs
xor
repnz
dec
jns
pop
pop
inc
addr16
sbb
std
push
outsb
js
icebp
outsb
cmc
fsubl
jns
icebp
in
outsb
push
fisubrs
adc
scas
outsl
push
cmpb
mov
and
push
mov
loope
inc
int
sbb
sub
in
jb
sub
sarl
mov
inc
sbb
int
inc
insl
flds
out
call
mov
test
stc
jns
ret
loop
adc
inc
xorl
lret
fdivr
js
negl
js
xor
cmp
stc
adc
xchg
and
into
sub
mov
inc
rcrl
xor
sbb
jmp
loop
and
dec
adc
or
add
repnz
imul
push
xor
fdiv
cli
jl
cmp
mov
enter
lea
loopne
outsb
loope
popf
push
dec
adc
das
xchg
push
les
add
pop
shlb
cmp
xlat
sahf
jl
sub
lcall
fiaddl
dec
ret
pop
shlb
aad
mov
add
rorl
dec
cmp
je
ds
imul
inc
jne
sbb
scas
call
in
pop
pop
lret
loopne
cmp
mov
cwtl
pop
nop
pop
jge
dec
stos
mov
aas
jmp
lahf
cmpsb
mov
push
jecxz
shll
xchg
negb
ret
dec
into
and
add
insb
icebp
cmp
xchg
cld
lea
fmul
adc
pop
mov
mov
pop
push
sub
mov
mov
xor
pop
push
ret
scas
cmp
ljmp
dec
fildll
cmpsl
cld
inc
mov
jmp
into
push
mov
in
out
and
ftst
and
inc
jae
shlb
movsb
insb
test
pop
dec
mov
mov
loopne
jo
outsb
clc
push
aaa
ljmp
movsl
pop
cmp
stos
call
enter
jecxz
push
popf
aas
hlt
vmwrite
mov
leave
insb
fmuls
cld
jecxz
xor
mov
xchg
xchg
imul
or
jae
xchg
sub
fsubs
push
or
dec
cltd
fwait
jns
xor
sbb
add
jne
pop
pushl
mov
pop
in
cmp
mov
adc
mov
fsubr
insl
ja
lret
fldl
cmp
mov
mov
dec
popf
lret
daa
lea
pusha
or
bound
mov
clc
xorl
out
filds
or
adc
stos
sbb
and
pusha
insb
jne
add
xchg
jle
mov
in
xchg
lea
sub
fildll
add
hlt
cmp
inc
adc
outsb
push
cmp
adc
dec
push
cmp
xchg
xchg
pushf
push
sbb
dec
fsubrs
push
xchg
or
dec
iret
jo
adc
sub
test
arpl
push
push
inc
inc
adc
bound
pop
jnp
movsb
shll
xor
int3
push
ret
lcall
lds
sbb
mov
dec
mov
cmp
sub
movsb
pushf
movsl
pop
push
clts
popa
jbe
test
jge
fdivrs
sbb
sbb
or
ret
hlt
jno
lcall
lret
push
ss
xor
xlat
sbb
and
jmp
inc
jbe
adc
arpl
adc
mov
lea
cld
jmp
cmp
movsb
push
xchg
sub
pop
sub
repz
movsl
dec
test
daa
add
das
push
sbb
sbb
pop
jns
jbe
loope
and
or
jbe
js
js
pop
out
arpl
push
pop
sahf
push
dec
mov
fcoml
sahf
sbb
outsb
mov
orb
test
xchg
adc
scas
mov
stos
mov
push
in
scas
int
push
cld
sub
mov
fs
lcall
data16
bound
xchg
aas
or
nop
xor
add
mov
push
push
stc
xor
ret
out
adc
pop
ss
push
cmp
mov
sub
pop
adc
push
jo
sti
xchg
aas
cmp
fimuls
into
push
rorl
loop
xor
xchg
fmull
imul
test
mov
or
mov
addr16
out
rclb
or
in
sub
pop
sti
ds
cmp
xchg
bound
fwait
and
das
icebp
pop
mov
and
or
push
repz
or
out
and
and
sub
push
mov
jmp
push
cmp
aad
jnp
nop
loope
decb
lret
mov
dec
jne
divl
sub
jae
out
lds
adc
sub
arpl
pop
jle
pop
adcl
or
pop
xor
sub
out
inc
test
pop
dec
jb
pop
in
jle
push
and
mov
pop
neg
popf
or
cwtl
add
xchg
mov
outsl
xor
adc
mov
andl
mov
test
test
fisubrs
hlt
jle
mov
sub
ds
fs
cmp
loopne
insl
push
adc
cmpsl
sti
out
inc
mov
mov
mov
mov
cvttps2pi
dec
aas
or
sub
jge
popa
test
sti
scas
mov
xchg
lret
push
outsl
mov
fstl
sbb
xchg
or
clc
outsb
shll
mov
stos
xlat
addb
sbb
out
jmp
fcomps
testb
mov
push
das
test
in
xchg
dec
mov
cltd
in
mov
and
or
xchg
fwait
test
das
push
mov
fisttpll
add
push
sub
cmpl
call
sbb
les
jnp
xchg
inc
jae
mov
movsb
stc
mov
mov
mov
cmp
mov
jne
iret
mov
lret
push
xchg
bound
xlat
js
dec
jo
xchg
pop
push
out
add
lcall
jbe
addr16
aaa
jp
sbb
insb
loopne
cmp
sbb
jle
xor
in
clc
jo
sti
jbe
fisttps
push
pop
sub
lret
inc
push
fidivl
faddl
or
mov
jge
das
stos
jbe
cmp
xor
aam
mov
dec
jg
adc
pop
iret
iret
ljmp
mov
jns
js
outsl
arpl
adc
inc
inc
push
inc
or
shlb
lea
lock
fcmovbe
pop
and
int3
push
iret
sbbb
pushf
fiadds
push
shlb
nop
repnz
mov
cmp
lds
xchg
mov
jge
cs
aaa
dec
cbtw
or
nop
lahf
jno
pop
mov
dec
cmp
push
push
sbb
xor
xor
aad
jecxz
andb
pop
test
sub
movl
aad
in
dec
lea
daa
sti
push
jmp
loope
imul
mov
mov
ret
lahf
jae
out
push
out
loope
sbb
xchg
adc
subl
iret
pop
stos
mov
inc
repz
sub
add
lahf
adc
bound
iret
out
jp
sbb
or
shlb
scas
popl
jnp
and
push
mov
xchg
pop
mov
inc
in
and
cmp
push
out
mov
sub
arpl
and
cmpsb
aad
mov
adc
sbb
cmp
test
insl
jb
sbb
push
aam
adc
jne
out
mov
adc
or
cmp
jo
inc
negl
mov
dec
cmp
xor
pusha
lret
xchg
decl
jne
pop
into
icebp
movsb
cmpsl
cmc
rcll
xor
jmp
push
outsl
lods
imul
xor
dec
in
outsw
jb
lods
and
dec
mov
imul
cli
loop
add
xchg
xor
sti
in
jmp
decb
xchg
scas
in
loopne
add
pop
xchg
adc
sub
flds
cld
les
mov
repz
iret
dec
xchg
loope
adc
lock
xlat
sbb
cmc
sub
into
pop
adc
in
in
sub
mov
jb
es
mov
or
lret
dec
in
shll
jecxz
out
sbb
mov
jle
lea
ljmp
stos
les
out
sub
jns
pop
xchg
inc
les
aas
daa
fmuls
xor
ljmp
and
mov
mov
xor
out
sub
lret
lock
xchg
mov
jl
mov
adc
das
rcrl
mull
and
adc
int3
into
cs
insl
addl
mov
movl
mov
push
sub
pop
and
rclb
inc
cltd
mov
jg
push
xor
mov
stos
fistl
data16
fnstsw
push
mov
insb
jbe
ror
aad
pop
xchg
lret
mov
out
dec
push
mov
fs
sub
mov
getsec
pop
mov
or
dec
loopne
push
hlt
lock
call
insl
mov
int3
push
fiadds
ds
inc
inc
repnz
xchg
fstps
pop
dec
call
add
push
xchg
xor
jo
in
ljmp
adc
push
mov
dec
cs
ja
cmpsb
push
ret
mov
scas
mov
lods
mov
mov
mov
push
aas
arpl
stos
mov
ljmp
inc
addb
mov
sub
fs
test
inc
out
jp
aas
xlat
and
loopne
jnp
outsl
adc
test
in
mov
in
fildll
xchg
in
sar
bound
inc
sub
jae
lods
xor
ret
inc
loop
test
sarl
mov
mov
popa
sbb
ss
mov
push
push
push
xchg
rcr
adc
test
iret
cs
scas
leave
daa
shl
ret
add
dec
add
xor
inc
mov
cmp
add
insb
add
inc
push
outsl
pop
ret
push
or
daa
nop
dec
lds
jae
divb
push
cmp
add
push
lods
data16
xchg
inc
jge
imul
or
adc
jno
aas
jbe
jns
pushf
dec
test
je
cld
cmpsl
jg
pop
inc
sbb
scas
ret
and
jecxz
push
cmc
mov
inc
xchg
stc
cmpsb
mov
int
xor
cwtl
enter
daa
cli
inc
popa
cmp
aad
loope
call
push
cmp
dec
les
movsl
aad
cli
and
cwtl
lahf
xchg
pop
mov
sbb
nop
add
sysenter
xor
in
outsb
pop
rolb
mov
insb
loop
push
pop
lahf
push
negb
clc
sub
scas
movsb
adc
inc
lcall
clc
in
mov
cmpsb
and
prefetch
ljmp
sub
push
lcall
mov
sbb
stc
push
sahf
xor
test
cld
outsl
jg
lea
mov
dec
jg
sahf
dec
shlb
jecxz
loope
lock
and
sub
neg
outsl
int
cmp
sub
test
and
or
mov
leave
cmc
cwtl
das
mov
inc
sbb
outsl
sbb
enter
push
imul
out
fadd
mov
repnz
and
loope
pop
out
loopne
cli
adc
imulb
add
sti
pushf
mov
xor
loopne
in
and
notb
fnstcw
pop
les
in
scas
repz
sbb
cmp
add
sub
xlat
pop
xlat
jb
mov
push
lods
pushf
xor
jecxz
stc
sub
aad
and
dec
fimuls
inc
fnstsw
fisttpll
xchg
mov
jecxz
xchg
add
lea
jno
or
popa
mov
pop
in
jecxz
ret
imul
dec
subl
sub
inc
loopne
test
aas
push
fwait
jb
insl
cltd
mov
clc
imul
push
imul
dec
sbb
cwtl
jp
scas
mov
adc
mov
mov
icebp
mov
stc
clc
lret
pop
or
mov
add
iret
das
mov
jbe
xchg
add
sbb
popa
ret
pop
call
jae
cmpsl
insl
and
adc
cmpsl
stc
shrl
mov
ficoms
jae
sub
movsl
mov
pop
jnp
mov
mov
std
outsl
cltd
jmp
xor
mov
or
fucom
rol
clc
sbb
insb
xchg
mov
ljmp
call
stos
mov
mov
xchg
stos
adc
mov
add
add
ja
xor
or
dec
xchg
mov
dec
mov
inc
mov
test
icebp
xor
inc
or
ja
fwait
push
mov
repz
ss
xor
int
in
inc
inc
xchg
or
mov
andl
ja
fcmovu
dec
mov
pop
mov
xchg
lahf
mov
sbb
hlt
jne
adcl
mov
bound
jmp
lods
xchg
pop
outsb
mov
xor
sub
pop
mov
sub
sbb
and
xchg
insb
mov
imul
adc
in
out
pusha
xor
fisttps
pop
rcrl
test
xor
lods
jae
sbb
popf
iret
iret
fistpll
sti
pop
es
pop
fcoms
xchg
xchg
popf
and
xchg
imul
mov
adc
jae
ret
out
sahf
push
push
hlt
push
xor
arpl
gs
inc
dec
sub
add
jg
repnz
inc
and
inc
add
test
aad
lret
lds
shll
in
mov
sub
inc
rolb
dec
into
mull
jl
jbe
dec
or
sbb
inc
aaa
lret
mov
or
inc
mov
dec
bnd
jmp
mov
xor
call
pop
std
and
inc
test
shlb
shl
cmpsb
xor
shr
xor
jge
mull
stc
mov
push
loope
mov
hlt
lcall
shrl
outsl
xor
xchg
jne
sbb
inc
push
xor
push
push
pop
stc
pop
or
mov
push
ficoml
dec
cmpsl
fcoml
sub
fcomi
adc
sbb
pop
add
test
mov
jns
and
mov
mov
test
out
loope
mov
lret
rcl
cwtl
mov
fadds
roll
test
ss
int3
lods
mov
cltd
lahf
stc
push
stc
mov
adc
dec
xchg
idivl
and
xorw
and
negl
enter
pusha
push
cmp
test
into
mov
jecxz
pop
insb
adc
lahf
pop
outsl
stc
jb
loop
add
imul
enter
call
aaa
lods
repnz
xor
fdivs
mov
dec
mov
dec
in
imul
decb
add
call
push
adc
dec
in
cmp
repz
pop
xchg
sbb
arpl
cmp
mov
xlat
lcall
adc
negb
stos
xchg
pop
push
aad
add
dec
nop
jb
push
dec
cmp
test
arpl
in
jecxz
adcl
std
lods
call
loopne
add
xchg
push
push
sbbl
das
fisttpl
daa
mov
inc
cli
pop
sub
gs
jb
les
mov
inc
aas
shll
por
out
lods
fcompl
stos
cmpsl
outsl
mov
les
icebp
xchg
lcall
into
and
rcrb
push
mov
pop
imul
xchg
insl
mov
sbb
ret
aam
jo
ret
ljmp
insl
or
rorb
mov
push
popa
cmc
lret
es
mov
js
mov
mov
rcrl
std
cli
cmpsb
cltd
and
hlt
test
stos
mov
test
aam
or
mov
push
adcl
push
lret
sarl
xlat
pop
out
xchg
stos
movsb
test
fcoms
or
pmaddwd
mov
adc
inc
cmp
jp
mov
out
lret
mov
test
or
sbb
dec
or
sub
push
push
movsl
adc
ret
add
cli
ja
sub
xor
aaa
jns
into
lods
in
in
push
xchg
push
cmp
mov
les
decl
cld
popf
mov
mov
mov
mov
fdivl
lock
int3
push
pop
adc
cs
xchg
xchg
js
jge
scas
xor
out
push
mov
pop
xchg
test
repz
bound
jns
and
pop
jle
outsb
test
pusha
int3
into
pop
fildll
mov
int
aas
jge
jae
int3
repz
dec
inc
jo
not
in
andl
stos
iret
stos
dec
xchg
out
in
sbb
outsb
imul
or
movsl
pop
adc
push
push
iret
in
mov
and
adc
mov
arpl
repz
dec
imul
inc
mov
adc
add
dec
test
push
aam
pop
and
in
fisubrs
sbb
stos
ljmp
xor
or
xchg
inc
std
cmp
notl
stos
fstl
xlat
sub
leave
jb
jge
mov
xchg
sti
ja
mov
das
es
jne
jl
jmp
jecxz
ret
xor
inc
in
pop
scas
addb
and
inc
push
test
mov
push
cmpsb
mov
lret
pop
xchg
enter
daa
clc
mov
cmp
enter
fisubrl
jp
cmp
pop
repnz
jecxz
xor
xchg
mov
push
push
lea
shr
mov
rol
sbb
mov
and
mov
test
pop
ljmp
push
movsb
sbb
xlat
sub
sahf
adc
imulb
and
lcall
mov
and
push
lock
int
cmovo
add
sahf
lcall
or
les
test
jno
jl
imul
lret
inc
das
adc
in
cmp
cmp
mov
fisttps
and
add
push
xchg
xchg
cmp
mov
ja
lcall
xor
mov
outsl
fcomps
xor
sub
cmpsl
imul
mov
add
dec
ss
insw
lods
fyl2x
dec
mov
out
out
adc
cli
jnp
les
and
sti
cli
pop
xchg
mov
hlt
gs
stc
pop
pop
cmp
add
jl
sub
jmp
or
inc
push
mov
mov
add
mov
add
sub
xchg
pop
pushf
xchg
std
jmp
dec
mov
aad
pop
cmpsb
nop
dec
nop
fisttpl
in
inc
add
movsl
dec
push
add
je
push
loope
scas
mov
rcrb
lea
cmp
call
pop
add
xor
fstpt
mov
incl
repz
pop
fnstenv
dec
mov
push
imul
repnz
mov
xchg
and
cwtl
lock
std
mov
ret
mov
fldcw
cld
fs
dec
lret
cmp
push
jne
clc
adc
lock
mov
or
push
ret
jns
in
jns
lds
and
icebp
cmpsl
test
fbld
and
lods
xchg
in
cmpb
les
addr16
cmp
loopne
push
pop
loopne
test
cltd
pop
lods
sub
daa
aam
mov
mov
jnp
add
xor
clc
jne
xchg
or
and
ror
adc
xchg
mov
lret
leave
mov
in
sti
andps
fimuls
dec
mov
lcall
jl
dec
pop
out
test
negl
xchg
sbb
or
mov
fwait
xor
dec
push
lahf
add
rclb
xor
jb
in
ljmp
fisttpl
je
jg
pop
ja
int
dec
pushf
sub
mov
sbb
mov
inc
test
in
jne
ret
scas
mov
daa
and
bound
daa
jmp
inc
or
out
aad
sub
push
push
shll
cld
jp
in
xchg
and
cmpsl
pop
insb
mov
pop
jle
mov
and
imul
gs
cmpsb
pop
pop
xchg
mov
les
ret
or
mov
mov
scas
iret
stos
inc
xor
xchg
inc
push
push
sbb
inc
pop
imul
scas
jo
ljmp
aam
iret
dec
or
ret
cltd
leave
mov
hlt
movsb
mov
arpl
lds
push
shll
push
pop
mov
mov
je
int3
add
cmp
sbb
adc
push
lds
push
dec
mov
out
pop
cmp
jg
push
lcall
jge
jno
sbb
cmp
or
pushf
jl
mov
aam
movsl
jo
xor
sahf
push
mov
and
mov
push
push
adc
inc
inc
inc
bound
out
js
jae
imul
xor
loope
ds
cmp
add
sub
pop
jnp
sbb
out
call
sbbl
lods
lods
call
fdivl
pop
inc
mov
mov
push
xchg
mov
sti
adc
fsubl
subb
xor
adc
sarl
popl
add
or
in
push
cld
inc
and
push
push
repz
sub
jbe
filds
jno
add
sbb
sahf
sbb
inc
test
outsl
cmp
sbb
mov
lret
ret
inc
xchg
fs
jmp
cli
ss
push
cmp
pop
jno
negl
pop
push
lret
adc
lock
add
mov
xor
dec
outsl
mov
sbb
mov
cmc
sub
lahf
cli
add
mov
mov
out
outsb
inc
cli
scas
adc
mov
inc
jae
sti
test
add
jecxz
loopne
push
lock
push
add
push
fldenv
std
les
inc
repz
add
mov
mov
fdivrl
out
cld
pop
inc
adc
adc
mov
out
and
and
pop
nop
sub
rorl
add
push
mov
repz
push
and
daa
shll
mov
fdivp
sub
std
dec
orl
adc
inc
jne
xchg
inc
xor
call
mov
cltd
call
add
sub
jp
cwtl
stos
movsb
cs
popa
mov
cmp
cld
aaa
xor
lods
mov
jl
mov
dec
daa
das
dec
lret
adc
mov
push
ret
or
daa
es
enter
and
dec
jno
mov
mov
and
push
mov
mov
ret
jl
jnp
sbbl
in
not
mov
add
xor
adc
lock
popa
clc
lret
xchg
dec
notb
shll
sbb
stos
adcb
xchg
add
push
mov
mov
cmp
or
into
shlb
ja
xchg
mov
stc
test
add
xchg
lcall
dec
and
push
adc
xor
jmp
and
pop
mov
push
xor
ja
jns
mov
pop
xchg
cmc
cwtl
xchg
mov
add
pop
cmp
push
dec
adc
mov
push
xchg
fwait
jne
stc
dec
mov
pushf
int3
out
es
jle
sbb
pop
xchg
push
dec
imul
xor
mov
addr16
scas
jno
enter
or
or
test
and
out
adc
pusha
add
neg
out
out
xchg
cmp
ds
adc
lcall
sbb
inc
mov
push
mov
imul
loop
sbb
cmc
sub
xchg
adc
mov
imul
stos
pop
push
ret
jne
add
push
hlt
out
mov
arpl
xchg
inc
push
push
lock
aaa
add
ficoml
add
inc
int3
in
movsl
pop
jg
ret
out
lds
adc
movsl
repnz
pushf
cmp
movsb
fisubs
mov
jge
cmp
sbb
daa
aaa
or
movsl
jno
cmp
dec
fs
test
stc
int3
add
ds
and
aaa
mov
jp
or
mov
cmpsb
mov
pop
mov
outsb
xor
divb
and
mov
call
sub
add
ds
insb
pop
movsl
icebp
xchg
and
mov
push
xor
push
or
imul
xor
and
lahf
xor
js
mov
stos
push
mov
mov
adc
mov
or
loope
and
mov
loop
push
addb
xorl
mov
int
inc
imul
pop
xchg
mov
cltd
dec
sbb
sbb
lods
dec
test
pop
pop
jg
mov
gs
jp
pop
fs
pop
adc
addr16
pop
loop
fcoms
mulb
lret
jnp
add
mov
mov
cmc
mov
or
outsl
xchg
orb
dec
mov
adc
or
data16
lods
cmpsl
loope
mov
pop
out
push
or
loope
xchg
lods
xchg
call
clc
ret
adc
mov
pop
jbe
loop
and
fstps
out
les
repz
repnz
xchg
mov
pop
sbb
pop
mov
xlat
push
mov
sub
lahf
adc
push
pushf
fstpl
shr
aad
cmc
test
nop
add
mov
pop
mov
sub
mov
jecxz
filds
in
outsb
call
pop
fs
mov
jae
pop
xchg
add
loop
lahf
fistl
xchg
ds
add
jg
inc
dec
push
add
inc
outsl
xorl
sbb
enter
and
inc
rcll
xchg
es
in
pop
cwtl
data16
cld
mov
andl
sub
sbb
mov
lret
sbb
mov
mov
lock
rorl
mov
mulb
aam
jno
ret
xchg
imul
insl
roll
dec
insb
enter
lds
dec
inc
sub
inc
shrl
dec
and
jne
mov
push
mov
pop
cltd
stc
lds
and
add
add
add
dec
add
stos
jne
sarl
dec
pop
call
mov
out
cmp
jae
push
lcall
add
mov
cmp
mov
out
idivl
orb
hlt
test
sahf
in
popf
insl
or
mov
inc
dec
or
inc
or
push
mov
addb
mov
xorl
push
test
in
jecxz
xchg
inc
xorb
jns
pop
cmc
outsl
cmpsl
ja
rcr
dec
subb
mov
xlat
jmp
dec
shlb
shll
xchg
es
and
dec
bound
cs
xchg
mov
pop
sbb
out
xor
or
js
push
push
test
push
and
pop
add
jnp
xchg
lods
jle
ds
in
jae
pusha
popf
fiaddl
filds
jnp
pop
jne
leave
inc
pusha
adc
jae
jns
push
xchg
scas
push
popf
imul
xor
cltd
push
notl
stos
stos
sub
xchg
repz
mov
imul
scas
ss
or
dec
pop
adc
push
iret
or
jmp
hlt
cmp
das
arpl
movl
fldl
push
sbb
sbb
add
sub
cmc
pop
scas
sbb
push
fisubrs
aas
ffreep
pop
pop
mov
adc
aas
repnz
iret
mov
movsb
imul
push
jbe
cmpsb
xchg
jge
ljmp
movl
out
push
aam
jl
loop
dec
rorl
push
imul
jo
pop
jmp
and
rol
push
in
cmovge
ret
dec
cmpsb
inc
movsb
inc
in
mov
cmp
imul
cmp
push
mov
inc
or
popf
add
jae,pt
fsubl
fs
cs
sub
or
sbb
jbe
ret
mov
lret
bound
pop
xchg
mov
js
pop
rcll
movsb
xchg
push
cltd
push
push
test
mov
cmp
sbb
adc
xchg
ret
popl
dec
adcb
mov
inc
mov
and
push
push
stc
push
dec
int
mov
sub
pop
pop
insl
lcall
mov
sbb
xor
bound
mov
repz
add
mov
fs
ss
adc
add
add
add
xchg
fcom
push
mov
xchg
in
lret
imul
addps
push
imul
inc
add
xor
xor
jne
add
loope
adc
hlt
adc
mov
mov
outsl
mov
mov
pop
out
mov
cli
adc
push
mov
pop
mov
sti
pop
mov
sbb
sbb
loopne
mov
mov
cmc
mov
mov
gs
test
xchg
jae
push
sbb
push
inc
xlat
xchg
mov
push
pushf
mov
mov
rclb
cs
cwtl
and
dec
mov
mov
shll
jge
add
fsts
ret
dec
sub
outsl
fnsave
fcompl
pop
arpl
addl
inc
aad
pop
test
push
inc
xorl
data16
aas
loope
cwtl
jb
sub
jg
es
fildll
fildll
icebp
divb
xlat
mov
cmpsb
sub
mov
insl
push
cld
in
call
mov
mov
lcall
or
xlat
movsl
sub
lods
push
aam
ret
aam
es
push
add
insl
test
sub
cmpsl
hlt
or
mov
push
pop
inc
lods
shlb
add
xchg
pop
xchg
jl
xor
cmp
cli
xchg
cltd
xchg
pop
test
les
les
lret
and
push
sub
rcl
xchg
lret
pop
xchg
and
stos
pusha
xchg
pop
out
mov
xchg
jne
adc
jno
xor
popa
add
sub
js
mov
cli
inc
adc
gs
test
iret
mov
sbb
jb
jl
rorb
jbe
icebp
in
xor
das
add
dec
rol
ljmp
stos
cmp
cmp
xor
lahf
xchg
xchg
pop
jg
movsb
inc
xlat
mov
mov
enter
pop
dec
jne
xor
inc
scas
idivl
in
dec
mov
fidivl
xchg
mov
out
in
js
sub
scas
jmp
movsb
ljmp
sub
inc
xor
jnp
jp
out
andb
out
insb
int
sbb
pop
test
jle
imul
mov
fbld
adc
lods
jbe
inc
imul
push
push
mov
jno
outsl
jge
push
mov
stos
fwait
cld
mov
dec
outsl
into
sbb
int3
inc
imul
scas
cltd
mov
xchg
dec
fadds
push
jmp
leave
icebp
rorb
arpl
inc
pop
mov
or
sub
daa
call
add
jb
ffree
or
stc
leave
lahf
lret
mov
mov
loopne
gs
push
les
call
cld
jge
jge
sbb
call
or
nop
push
jnp
xchg
mov
into
xor
scas
std
pop
scas
cld
les
xor
push
test
mov
lock
out
jmp
test
fwait
out
enter
daa
hlt
rcr
sbb
hlt
sub
fadd
cmp
sahf
ds
dec
jle
decl
push
and
mov
lahf
dec
test
hlt
cmp
lcall
xor
rsm
pop
mov
sbb
pop
out
fs
sub
push
add
or
push
das
aaa
outsb
rorb
jmp
mov
jg
bound
lcall
insl
cmc
mov
push
mov
mov
and
sbb
or
sub
incl
lcall
pop
mov
mov
test
dec
cmp
fiaddl
mov
sbb
stc
call
fidivl
ss
and
cmp
lea
sbb
out
jge
xor
xlat
pop
or
insb
into
es
jnp
inc
js
xor
test
loop
jmp
imul
fxtract
add
xchg
nop
data16
push
lods
jne
xchg
mov
cmpsl
and
shll
mov
ret
in
adcb
mov
push
ds
js
add
xor
fld
test
jo
mov
xchg
ss
sbb
lea
xlat
aad
subl
jno
adc
push
pop
jmp
xchg
dec
jne
aad
jne
nop
mov
or
push
imul
divb
cmp
jmp
faddp
fdivl
pop
call
pop
aad
pop
push
jle
orl
inc
pop
dec
fwait
sti
inc
or
push
inc
addl
sbb
test
mov
cmp
shrl
mov
div
xchg
std
xor
cld
cwtl
cs
push
or
enter
adc
push
lret
stc
pop
into
mov
ror
mov
in
lock
push
push
das
in
cmc
xchg
in
pop
aam
push
ret
mov
and
test
loop
jns
dec
bound
cmpsl
repz
xchg
mov
push
repnz
mov
daa
popf
jmp
mov
pop
popa
push
rcrb
les
push
in
mov
leave
or
push
pop
cld
adc
jnp
std
xchg
add
xchg
rcl
sub
xchg
aad
dec
cmp
out
add
inc
push
push
xor
faddl
je
jns
sub
aam
pop
mov
fidivrs
dec
hlt
lods
inc
test
xchg
daa
xchg
push
dec
inc
adc
and
fwait
and
push
aam
pop
add
push
xchg
lods
xor
adc
in
sub
xchg
loop
jl
out
and
cld
adc
imul
ja
in
dec
push
xchg
mov
mov
rorb
loop
divb
mov
je
out
ret
xchg
mov
inc
ljmp
add
jns
dec
out
pop
les
inc
push
insl
addr16
daa
inc
jp
add
and
push
cmp
jnp
aaa
mov
in
adc
filds
popa
xchg
mov
inc
pop
jecxz
cwtl
inc
jbe
mov
inc
jmp
sbb
int
mov
out
push
jne
cmp
mov
mulb
scas
cld
cmpsl
adcb
push
adc
lods
test
insl
pop
ret
push
leave
push
sub
arpl
mov
pop
xchg
sbb
outsb
jp
push
sbb
outsl
stc
testl
lods
push
lock
or
mov
pushf
test
add
mov
pop
mov
xor
dec
movsb
jg
aaa
push
xchg
lahf
jbe
or
nop/reserved
loopne,pt
inc
pop
lods
or
jno
jl
push
jo
mov
dec
push
xor
sub
jo
mov
scas
fistl
lds
sbbb
jge
and
addb
repz
repz
mov
sub
add
ds
imul
imul
sbb
xor
fldcw
xor
and
call
xor
js
test
pop
and
insb
inc
push
push
push
outsb
fcoml
mov
popf
outsb
xor
pop
enter
and
jge
je
out
jmp
xor
and
push
fs
inc
call
pop
fcmovnu
mov
cld
daa
ffreep
pop
loop
mov
movsb
stos
sahf
movsl
cmpsl
push
dec
mov
xor
scas
jg
sahf
mov
stc
lahf
test
roll
adc
int
mov
mov
dec
cld
mov
adc
loope
mov
cmp
xor
or
ljmp
or
push
outsl
xor
aam
std
rcl
aad
push
add
push
icebp
xchg
add
mov
push
fwait
cli
jp
leave
mov
in
hlt
cs
gs
popa
mov
dec
loopne
js
pop
rorl
adc
adc
sahf
dec
repz
mov
out
cmp
adc
adc
and
enter
dec
ja
pushf
ficomps
jmp
xlat
cs
push
mov
stos
mov
nop
xchg
sbb
pop
inc
bound
jle
jbe
arpl
cli
lahf
cld
pop
lea
shlb
xor
pop
leave
mov
out
mov
test
adc
xchg
pop
inc
pushf
incb
aas
pop
sub
std
mov
lds
sub
jge
repnz
das
sar
fld
sbb
xchg
ret
repnz
add
mov
test
lahf
das
sar
cmp
lret
push
roll
fistl
sbb
lret
mov
mov
fldt
aam
gs
ret
inc
ret
push
or
aas
dec
pop
and
cmpsl
repnz
test
stos
mov
dec
jne
and
out
or
jnp
push
cltd
insb
mov
je
dec
add
dec
fs
mov
pusha
xchg
inc
pop
scas
ljmp
out
pop
jmp
mov
mov
pushf
pop
push
sub
lahf
add
nop
mov
mov
add
jp
movsb
out
int3
xchg
add
sbb
adc
out
or
aam
fwait
dec
sti
cltd
push
ja
cs
xorl
jmp
imul
inc
insl
in
iret
insl
xchg
xor
js
mov
push
jne
je
lcall
orl
mov
xlat
dec
jnp
sbb
mov
pop
out
mov
xchg
cmp
sbb
enter
shlb
or
fsubl
push
int
xchg
leave
jns
outsb
shrl
jnp
lods
and
mov
jmp
fbld
xchg
test
push
pop
sbb
mov
lahf
jae
mov
push
fldt
lds
in
jge
mov
cmp
clc
mov
xor
imul
lods
scas
pop
test
adc
xchg
fmul
es
ret
scas
leave
fisttps
hlt
sbb
push
inc
popa
in
or
and
fisubl
ja
add
cmp
fidivrs
jge
icebp
shrb
xor
das
cmp
lret
movsb
or
scas
jbe
out
mov
sbb
insl
pop
aaa
add
daa
or
out
jno
jbe
jl
dec
aad
and
dec
push
adc
dec
xor
gs
scas
mov
xchg
shrb
dec
and
or
pop
cmpsb
leave
sub
imul
ja
add
xor
decb
leave
js
ds
frstor
xor
mov
sbb
push
add
out
xorb
clc
or
stos
mov
popa
js
lret
fs
push
fs
scas
stc
xor
sub
add
cwtl
leave
cmp
inc
imul
pop
jmp
mov
mov
and
add
int
arpl
loop
mov
lcall
dec
mov
insb
sbb
push
sahf
dec
cmp
jnp
adcb
jg
ss
daa
mov
push
scas
stc
push
mov
fs
push
add
cmp
add
push
not
out
aam
inc
xor
fstpt
pop
push
or
into
in
mov
rolb
adc
loop
sbb
adc
clc
fwait
add
imul
jno
mov
add
lods
mov
mov
pop
addr16
incb
or
cmp
sbb
addr16
adc
test
xor
jne
repz
xchg
mov
xor
xlat
push
jns
sub
xchg
adc
pop
jmp
cmp
cs
aad
pop
je
outsl
lss
add
dec
sbb
cmpsb
jecxz
push
and
loopne
fld
pop
push
cmpsl
pop
jl
push
cmpl
dec
fcmovnbe
cmp
xchg
inc
jns
sbb
cmpl
leave
sbb
xlat
sarl
dec
adc
int3
fwait
icebp
idivb
std
adcb
mov
ss
mov
xchg
icebp
jbe
jge
data16
add
mov
arpl
stos
jnp
mov
shlb
aam
mov
ret
rcll
xlat
mov
enter
mov
mov
xchg
cs
lods
adc
repz
insl
inc
push
and
sub
pop
lcall
cltd
mov
lock
push
jg
push
or
sub
clc
icebp
push
xchg
xchg
cmpl
rcr
pop
jb
xchg
std
cmp
leave
jno
xchg
jecxz
push
push
push
pextrw
jle
js
or
fistpl
hlt
cmpsl
pop
mov
add
cmp
out
test
fcompl
cltd
jecxz
sbb
inc
mov
push
push
push
sbb
lcall
incl
adc
xor
and
subb
mov
xchg
add
loope
pusha
ja
or
dec
dec
adc
mov
xchg
imul
mov
adc
in
xchg
jmp
add
or
dec
push
lods
sub
aaa
jb
addr16
or
and
insb
push
push
xor
out
jle
stos
lods
in
aas
inc
pusha
or
xor
push
push
jp
mov
cmp
sbb
popf
pop
icebp
add
repz
stos
hlt
sbb
dec
shlb
imul
pop
scas
ret
push
adc
iretw
test
push
ret
pop
leave
push
decl
hlt
data16
arpl
stos
sub
cmp
xchg
push
and
imul
add
xorl
pop
push
mov
loop
cmp
pop
lea
rol
mov
repnz
cmp
or
movsb
xchg
pop
cmp
mov
inc
jge
lea
sbb
rcr
imul
jno
lahf
scas
jl
sbb
xchg
mov
idivl
mov
scas
cltd
pop
mov
test
sbb
mov
cmc
bound
push
push
enter
daa
icebp
hlt
push
cmp
and
push
add
js
push
incl
movsl
adc
dec
and
cld
jp
test
in
sbb
inc
lcall
xchg
test
outsb
mov
cmp
orb
mov
lock
add
fnsetpm(287
sub
xchg
fcoms
repz
std
mov
scas
cld
mov
mov
fs
and
daa
addr16
fsubrs
pop
push
pop
fldenv
jb
mov
mov
cmp
sahf
jmp
pop
test
loope
sub
sbb
pop
insb
mov
cmp
stc
or
shlb
sbb
cmp
mov
and
lret
xor
dec
cmp
pop
mov
into
iret
testl
xor
pushf
outsl
icebp
inc
and
cmp
jmp
dec
adc
push
add
xchg
call
lods
sub
push
mov
push
mov
ret
lods
xor
ret
mov
cmpsl
lret
ss
gs
adc
mov
les
mov
test
cmp
xor
cwtl
sub
incl
cmpb
je,pn
mov
cmp
nop
dec
adc
mov
ss
dec
xchg
ss
or
mov
sbb
in
fwait
out
loopne
call
fcomps
das
add
push
dec
jns
mov
add
popa
inc
lahf
cmp
xor
jb
iret
push
and
mov
test
mov
inc
sub
mov
mov
xchg
adc
inc
cmp
imul
fildll
mov
mov
lret
sub
cmp
aam
push
sbb
es
aam
insl
inc
shl
dec
push
jmp
cmpsl
lock
and
lods
xorl
jle
lret
mov
pushf
and
sbb
clc
push
rclb
outsb
movsb
test
mov
aas
jmp
fldl
clc
sub
push
xchg
ret
ljmp
sbbb
stos
sbb
mov
sub
js
sub
in
in
lds
add
leave
adc
mov
mov
push
add
dec
sub
xor
sbb
sbb
es
fcomps
imul
inc
rcrl
mov
pop
mov
mov
sub
jns
jecxz
in
adc
xchg
iret
adc
mov
aas
repz
pushf
and
pop
dec
inc
sub
mov
in
mov
add
dec
inc
test
xlat
mov
add
bound
pusha
jmp
shrb
out
add
sahf
xor
xor
push
addr16
inc
in
jp
jae
and
adcb
sbb
pop
jle
cmpsl
sahf
in
in
sub
rcll
xchg
sub
pop
mov
leave
inc
xchg
cmc
or
push
popa
insl
sbb
pop
lcall
mov
cmpsb
cmp
sbb
imul
arpl
pop
cli
adc
mov
xchg
leave
int
xchg
hlt
mov
cmp
mov
in
or
sbb
mov
add
jb
int3
outsb
sti
inc
pop
cltd
add
fiadds
mov
test
repnz
jo
mov
pop
movsb
and
push
ret
cmp
jbe
or
jge
scas
sub
imul
or
mov
jl
mov
jbe
fisubl
xorb
ja
js
jl
mov
jecxz
icebp
inc
sub
in
aaa
mov
enter
daa
lock
cmpsl
loope
fwait
loope
mov
mov
and
movsl
sbb
push
and
ret
dec
leave
push
lcall
in
add
out
xlat
xor
jns
xor
and
js
lret
loop
jle
and
mov
mov
jae
adc
stos
outsb
pop
pop
push
adc
into
out
sbb
test
mov
lfs
and
adc
int
dec
add
fdivs
test
and
leave
sbb
lea
xor
repnz
jg
mov
cltd
stc
icebp
shll
adc
and
push
add
fdivrs
mov
lret
pushf
xor
push
scas
cmp
xor
or
popa
mov
push
cmc
pop
and
ds
outsl
rorb
imul
jp
ss
pop
data16
dec
lods
adc
orl
adc
dec
mov
cs
in
idiv
lret
gs
dec
bound
lods
aaa
adc
or
mov
pop
jecxz
sub
rcrb
jns
add
rorl
push
adc
scas
pushf
fisttps
jge
xlat
mov
aad
rolb
and
xlat
dec
inc
fwait
push
and
or
je
xchg
jecxz
les
call
aas
xchg
call
push
out
pop
loop
mov
dec
fs
xor
xor
cli
inc
es
inc
in
pop
into
aas
cld
push
or
cli
and
xchg
nop
pushf
testb
idiv
into
cmc
cwtl
enter
popa
sub
icebp
and
mov
xor
mov
lea
xor
es
push
rorb
sarb
ret
icebp
adcb
sub
jecxz
out
sub
mov
cld
loopne
jmp
xor
lahf
pop
out
mov
fstl
cltd
adc
popa
test
bound
xchg
sbb
test
addr16
xchg
add
and
pop
inc
in
roll
mov
stos
or
out
hlt
mov
push
mov
mov
add
push
enter
pop
xor
push
hlt
mov
or
dec
nop
mov
test
jae
xchg
rcl
inc
outsl
sbb
or
sub
fmull
negb
pusha
dec
sahf
add
aam
mov
ret
adc
jns
test
in
scas
lods
xchg
push
inc
xor
cwtl
out
jno
push
insb
shlb
cmp
jp
sub
mov
stc
dec
and
shlb
and
incl
jmp
aas
mov
bound
fidivrl
xchg
fwait
cmp
xorl
mov
or
lcall
sub
enter
test
jnp
movsl
or
cwtl
adc
inc
std
or
fistpll
cmpsl
and
insb
out
inc
mov
add
push
and
xlat
popf
push
and
mov
jno
imul
xor
or
scas
mov
jns
mov
ret
es
inc
andnps
and
test
inc
push
hlt
cld
or
arpl
xchg
jp
or
xchg
mov
inc
pop
jle
fidivrl
sub
int3
pop
lcall
sub
mov
cli
pushf
pop
mov
jg
movsb
cmp
push
movsb
stos
jmp
push
adc
inc
jbe
dec
or
mov
sbb
jne
aaa
inc
aaa
mov
push
add
jno
pop
mov
dec
insl
dec
test
mov
inc
push
jo
push
push
and
mull
push
scas
call
xchg
cmpsb
push
ret
iret
in
push
loopne
enter
daa
out
stos
fdivrl
sbb
mov
sub
outsl
cmp
add
ds
stos
add
and
call
xor
rolb
out
add
outsb
xor
xor
out
js
test
jmp
push
mov
inc
fdivrl
jp
outsb
rorl
shrb
stos
add
ret
mov
es
and
aam
push
or
xlat
int
adc
sub
adc
xlat
jge
lcall
fimull
mov
loop
imul
andb
jg
and
out
jnp
xor
daa
adc
adc
cmp
xor
jl
adc
or
lods
test
cmp
or
stos
push
and
dec
mov
loop
out
imul
push
push
add
out
xchg
mov
test
into
out
dec
cli
inc
dec
mov
cltd
mov
sti
and
jb
in
lods
sub
inc
or
loopne
adc
pop
dec
aam
adc
push
and
cmpsl
repnz
repz
xchg
xchg
add
sti
cmp
mov
adc
icebp
cmp
pop
xchg
cmp
aad
mov
pusha
dec
repz
outsl
inc
scas
stos
pusha
dec
subb
jecxz
pop
jmp
jmp
mov
mov
int3
jg
cmc
pop
pop
xchg
cmp
addl
lock
pop
pop
jp
je
lods
js
inc
or
mov
test
mov
and
movsb
pop
sarl
push
std
jne
xor
and
mov
dec
push
icebp
sti
bound
out
lret
push
adc
scas
pop
inc
mov
xor
lock
daa
mov
mov
fs
cwtl
jecxz
sbbb
insl
adc
dec
dec
add
fnstsw
fistpl
loopne
lods
xchg
pop
inc
and
push
dec
popa
pop
test
rcrb
mov
mov
cmc
fstl
xchg
inc
add
ljmp
push
pop
xchg
dec
in
cli
out
dec
out
repnz
xlat
push
xchg
jmp
bts
or
cmpsb
xor
lret
or
or
add
insl
cmp
push
cmpsb
arpl
mov
ds
stos
aam
fwait
or
or
out
out
sub
cli
xor
sahf
sub
jns
adc
jae
fsts
ss
mov
adc
ja
sbb
dec
daa
subb
xchg
inc
mov
shrl
pop
push
xchg
jne
shlb
push
xchg
bound
push
adc
addl
aam
or
sub
pop
addr16
aas
add
out
or
shrl
insb
dec
pop
dec
jnp
sub
jle
jge
in
jb
pusha
ficompl
fimuls
xchg
sarb
out
testb
jae
pop
push
out
loope
jl
sarb
mov
std
stos
dec
fstl
loopne
jg
jae
scas
jmp
inc
push
ljmp
iret
mov
mov
mov
lret
arpl
mov
or
cmovbe
inc
xchg
dec
dec
jne
add
xchg
int3
inc
or
xchg
fmulp
push
xor
rclb
mov
rcr
mov
and
mov
push
popa
cli
fs
sti
jge
mov
cmp
add
mov
jno
icebp
cmp
cmc
dec
fmull
mov
mov
jo
outsl
ret
scas
mov
mov
or
push
jns
movsb
inc
dec
gs
cmpsb
aad
in
add
or
daa
out
lret
data16
mov
out
xchg
cmp
cmp
int
movsl
sub
cmp
mov
sbb
repnz
stos
adc
inc
jp
jae
inc
mov
xchg
pop
cmpsb
mov
js
sbb
pusha
sub
push
dec
xor
or
fsubrl
loop
repnz
outsb
and
mov
pop
or
test
ficompl
jo
cmp
jle
cli
add
test
push
dec
icebp
int
shr
into
or
pop
push
scas
ljmp
cld
sub
test
sahf
aam
aad
repnz
stc
cmpb
mov
adc
xor
cs
fsubrs
sub
out
jmp
test
and
or
pop
rorl
sbb
cmc
in
sarb
outsl
mov
imull
test
fiadds
mov
icebp
pushw
or
lods
filds
mov
lock
cli
jns
mov
in
add
mov
shl
mov
adc
gs
xor
outsb
add
adc
js
mov
mov
pusha
lret
or
sbb
out
ds
xlat
dec
stos
jbe
pop
and
pushf
xor
shrb
cs
xadd
or
sahf
jb
push
mov
sbb
negl
js
inc
xor
xchg
mov
and
loop
int3
and
push
mov
dec
loopne
adc
ss
mov
jbe
sbb
sub
inc
and
jne
cmp
cld
in
mov
jl
cmp
or
adc
sbb
dec
cwtl
ds
repnz
sub
icebp
rorb
cmp
adc
pop
mov
shrb
das
es
mov
scas
mov
pop
ret
paddd
es
testl
inc
lock
out
pop
popa
repnz
lods
mov
mov
cld
and
out
in
aaa
pop
push
mov
rorb
dec
rcrl
call
sti
push
sbb
pop
fnstsw
lret
push
jg
push
ljmp
pop
pop
inc
mov
jns
push
inc
call
push
jb
xchg
lcall
cmc
insb
pop
xor
aad
mov
rcpps
dec
pop
or
mov
xchg
cltd
mov
push
arpl
cmp
xchg
cmpsb
add
cmpsb
push
syscall
mov
pop
add
nop
pop
incl
call
add
push
in
out
xchg
mov
cld
or
int
mov
dec
sbb
mov
mov
daa
push
dec
ljmp
mov
inc
dec
out
std
pop
popa
bound
jmp
xor
sarl
dec
out
mov
testb
cmp
addr16
add
jp
cmp
and
mov
add
jne
jle
push
inc
in
dec
mov
mov
int
mov
dec
jne
mov
clc
mov
popf
mov
orb
out
inc
or
xchg
stos
dec
and
imul
imul
cltd
adc
mov
add
cmpsl
ret
dec
leave
xor
push
arpl
xchg
aas
inc
jo
xchg
mov
inc
adc
ja
add
push
pop
pop
es
lcall
push
mov
or
cld
repnz
or
movsb
ror
push
mov
popa
jbe
and
jge
outsl
das
sbb
mov
aaa
lcall
test
adc
adc
addl
xor
sub
cmp
xor
mov
push
inc
xlat
addr16
cmpsb
pop
sbb
in
enter
daa
in
jo
cmp
sub
cmc
ffree
cmp
fdivrl
mov
or
cmp
sbb
js
popa
sbb
adc
mov
jp
sbbb
lds
and
pop
lahf
fimuls
jge
mov
fcoml
repz
push
sti
adc
pop
sbb
pop
sub
jae
mov
mov
and
es
push
adc
ss
push
xchg
dec
adc
aad
dec
lcall
mov
pushl
ja
jl
jns
rolb
push
add
jmp
mov
adc
fsubrl
cmp
stos
movsb
inc
testl
bound
stos
je
xchg
in
mov
lea
jecxz
xor
insl
mov
loop
push
je
sub
adc
test
sbb
cwtd
lret
cld
lods
fmuls
int3
jbe
cli
lods
loop
mov
outsl
jge
xor
gs
mov
pop
pop
lea
bound
clc
movsb
cmp
mov
and
sbb
sub
xlat
mov
mov
adc
dec
pushf
loopne
push
jmp
loop
add
das
nop
mov
rorb
addb
xchg
mov
je
arpl
icebp
loope
lea
adc
aam
dec
pop
sti
cmp
dec
and
xchg
inc
mov
insl
in
fsts
jb
mov
mov
pop
rcll
pop
test
lods
std
ret
in
mov
stc
dec
xor
xor
icebp
test
xor
mov
mov
fmuls
frndint
subl
nop
push
mov
movsl
or
aam
sub
sahf
mov
mov
dec
aas
outsl
adc
sbb
popa
or
lods
sub
mov
sbb
inc
and
mov
loopne
loope
cli
cltd
mov
lret
test
jmp
push
fsubr
fcmovu
loopne
push
clc
sbb
xchg
mov
es
mov
sti
pop
jmp
adc
mov
sub
push
dec
lea
punpckhwd
js
insb
jmp
xor
xor
mov
adc
cwtl
dec
lds
cmp
or
cmpsb
inc
xor
inc
or
dec
dec
fwait
imul
loop
cmp
inc
jmp
xor
jns
into
sbb
mov
das
mov
js
mov
mov
add
movsb
push
mov
pop
cmp
inc
cltd
dec
int
aad
xchg
cltd
jno
adc
out
fdivl
jmp
lods
and
ret
xchg
cld
shrl
out
aaa
and
push
push
xor
dec
dec
mov
cmp
insb
and
cmpb
push
mov
pusha
adc
xchg
sbb
popa
xchg
jbe
pop
fs
inc
ret
xchg
inc
jae
push
insl
pusha
lcall
imul
push
fisttpll
xchg
add
sbb
dec
in
mov
icebp
scas
mov
rcll
mov
and
jb
ret
jge
test
data16
fcoml
inc
jae
imul
pop
sbb
jnp
ficoml
add
gs
sbb
pop
push
subb
xchg
jns
dec
dec
mov
bnd
push
cmp
ds
push
dec
sub
mov
stos
sbb
movsl
aaa
jle
lahf
or
repz
jl
add
mov
mov
xor
xchg
ja
hlt
cmp
ljmp
inc
js
data16
cmpsb
in
sarl
xchg
daa
in
cltd
mov
mov
clc
loope
mov
fdivrs
jecxz
jmp
scas
in
arpl
xlat
pop
push
lahf
inc
lcall
dec
xorl
es
xor
lods
adc
popf
daa
pop
hlt
mov
mov
and
hlt
fs
mov
call
mov
adc
cmp
iret
cwtl
xchg
mov
add
or
nop
rolb
add
int
movl
lcall
sbb
sbb
mov
push
xorb
ret
mov
mov
iret
add
xor
ss
and
cmp
gs
cmpsl
testl
mov
cmp
rcrb
mov
into
ds
cmpsb
cmc
jp
mov
outsl
dec
gs
loop
mov
adc
aaa
jns
stos
loop
data16
lods
lods
add
mov
adcb
jp
scas
in
fidivrl
sti
adc
cmpsb
les
lods
enter
lcall
mov
pusha
or
fld
enter
fs
xchg
dec
popa
arpl
sub
int
imul
movsb
mov
pushf
mov
arpl
fst
fwait
outsl
rclb
mov
inc
out
rorb
insl
fidivs
fsubp
arpl
repnz
hlt
push
cmp
scas
dec
int3
addl
scas
rcrl
sbb
inc
inc
mov
stc
aas
js
stos
jb
scas
jl
out
dec
pop
and
cmc
int3
shll
jb
std
push
fstpl
pop
cmp
icebp
add
cld
push
dec
clc
mov
xor
xor
dec
das
in
dec
mov
pushf
sbb
hlt
jo
ret
sub
test
insl
loopne
dec
cmp
dec
mov
and
lods
xchg
mov
jbe
aas
push
cmp
and
sbb
push
lcall
in
out
test
fcoml
insb
outsb
fldl
push
xbegin
std
in
ljmp
push
pop
xchg
or
dec
out
sbb
xchg
lea
xor
enter
or
leave
or
or
cmp
adc
clc
and
xchg
or
sbb
jp
or
arpl
in
lahf
mov
les
add
mov
aas
iret
out
xor
and
xchg
pop
lahf
out
mov
push
jbe
inc
dec
push
ja
rorb
add
push
sub
push
cs
mov
pushf
jne
sbb
mov
iret
pop
out
mov
mov
jmp
scas
fldl
pop
daa
dec
sub
sbb
push
jp
jmp
and
cmp
insb
nop
fiadds
jnp
push
inc
jle
in
in
sub
rolb
dec
sub
fwait
mov
jp
int3
lcall
xor
popf
icebp
xor
push
insl
stc
bound
pop
pop
xchg
sbb
adc
scas
adc
rclb
xchg
fs
sbb
ret
sub
and
aam
jmp
add
ror
or
subb
adc
int3
fiaddl
xchg
testl
add
or
fidivs
lret
pop
dec
mov
lret
sbb
dec
bound
push
dec
cltd
scas
jbe
bnd
mov
add
cmp
add
insb
mov
jl
inc
dec
sub
ja
dec
pop
push
xor
loop
xor
pop
add
pop
mov
movb
mov
in
mov
jecxz
daa
jmp
pop
cmp
and
loope
cmp
sub
pushf
inc
cmp
jmp
movsl
ds
in
and
inc
lahf
arpl
push
push
aas
adc
mov
mov
xor
jecxz
add
pop
sbb
dec
js
jmp
dec
push
fsubs
fsubrl
daa
sub
imul
adc
nop
jmp
adc
cld
fs
fwait
mov
jns
add
pop
and
aas
pop
or
push
out
lahf
mov
repnz
sbb
fsubrl
or
jmp
jmp
mov
jle
push
lret
fbld
ficoms
adcb
mov
shlb
testl
sub
cmp
lret
gs
into
and
mov
cltd
aas
test
inc
data16
and
ds
cmp
cld
data16
stos
pop
lods
xchg
mov
mov
push
push
cli
adc
mov
inc
mov
cmp
loope
gs
decl
loopne
in
rcrl
dec
adc
push
out
fnstenv
xchg
xor
adc
lea
mov
cmp
pusha
jne
adc
enter
dec
pop
cs
mov
lods
nop
insb
dec
outsl
xor
cli
add
dec
pop
lret
inc
je
out
sbb
jb
cs
neg
rorb
cmpsb
jle
rclb
pop
popa
cmpxchg
sti
inc
cltd
fistpl
fwait
stc
pop
push
adc
inc
leave
sahf
addb
data16
pop
sbbb
cmc
fisubs
movsl
push
test
cltd
mov
std
adc
xor
outsl
rcl
sbb
xor
push
std
cld
xchg
mov
mov
cmp
xchg
ret
dec
and
xchg
int3
mov
ret
mov
das
daa
insl
scas
outsl
dec
xor
cs
jg
lret
jbe
lods
add
icebp
mov
bound
mov
jae
sti
rolb
in
repnz
pop
xchg
push
bound
xchg
cmp
add
pushf
in
fcom
cmp
pop
inc
mulb
mov
into
out
jle
xor
add
xchg
lahf
add
dec
jbe
pop
aam
xor
jmp
lret
xchg
mov
dec
xchg
inc
cmp
adc
inc
bound
or
adc
fwait
je
push
push
mov
dec
jle
add
icebp
fmulp
inc
xor
loop
jns
sbb
in
mov
xchg
test
int
mov
jns
ja
ret
repz
cmp
ds
push
mov
adc
and
xor
out
lcall
jmp
xchg
fistpll
out
mov
sub
adc
sbb
addr16
and
push
mov
xor
lcall
inc
pop
jbe
pop
sbb
sbb
mov
inc
or
imul
sbb
or
cltd
mov
mov
fs
mov
imul
push
push
push
daa
stos
adc
mov
add
orl
xchg
xlat
hlt
jae
arpl
fwait
inc
inc
jns
jecxz
or
inc
sbb
mov
fiadds
push
and
pop
mov
mov
push
push
lds
push
rolb
lret
add
push
popf
stos
fbstp
dec
mov
sbb
mov
icebp
or
shll
sub
ret
adc
sub
push
xor
cmp
cmp
out
add
stos
push
movsl
js
inc
test
cmpsb
loope
adc
mov
push
push
daa
ljmp
loope
cli
scas
sub
mov
mov
hlt
fnsave
and
icebp
int3
push
icebp
cs
shrb
add
shlb
ret
mov
inc
adc
js
lods
cld
pop
pop
push
les
outsl
pushf
push
push
or
push
mov
jg
mov
push
adc
lock
cmp
subb
lods
mov
lret
shll
push
mov
jmp
sub
popf
dec
lcall
mov
sbb
or
sahf
pusha
or
loopne
call
addr16
mov
push
insb
stc
push
push
js
gs
push
adc
cli
sub
in
mov
fcomp
inc
loop
lret
stos
mov
xor
dec
pop
cmp
xchg
rorl
stc
das
into
add
and
or
lock
scas
mov
or
and
imul
out
data16
push
lods
jnp
test
xchg
ljmp
leave
and
cli
inc
or
test
dec
in
mov
sti
mov
aas
pushf
adc
gs
loopne
push
push
pop
ljmp
fldln2
cli
insb
fdivrp
inc
repz
and
lods
les
xlat
dec
sbb
adc
pushf
loope
or
or
jb
sub
hlt
dec
into
mov
inc
or
int3
cld
je
xor
jecxz
cmp
cli
mov
call
push
cli
and
xchg
xor
out
dec
out
push
fisttpl
add
test
loop
inc
xor
aas
mov
pop
jb
inc
ja
pop
xchg
fldenv
and
roll
notb
sub
fistpl
or
mov
jno
mov
inc
mov
das
mov
jnp
sub
cli
or
dec
sub
mov
and
dec
xor
jmp
push
sbb
imul
repnz
leave
fwait
inc
mov
xchg
nop
sahf
rcrb
cmp
shll
mov
cmc
pop
push
and
test
xchg
jnp
xchg
ljmp
add
stos
movsl
mov
xchg
sbb
pop
push
ficoms
imul
icebp
lods
or
ds
xor
inc
mov
xchg
mov
shrl
popl
sbb
and
inc
ss
fwait
not
bound
xor
or
rcrb
dec
add
lret
out
cmp
mov
pop
xchg
clc
in
mov
movsl
jl
xorb
mov
ss
dec
out
imul
imul
or
jns
cld
bound
jmp
pop
arpl
orl
or
arpl
sub
cmovb
dec
cmp
and
subb
jnp
inc
jnp
scas
inc
or
push
scas
pusha
loope
adc
jns
mov
pop
or
sahf
jae
pop
mov
popf
aas
adc
clc
into
popf
push
jmp
ljmp
add
sbb
and
imul
jg
dec
push
hlt
adc
stc
cmp
leave
push
stos
stos
hlt
mov
es
or
jbe
inc
inc
adc
cs
push
dec
int3
lret
rorl
rcrb
bnd
push
cmp
test
in
add
jge
xchg
mov
aaa
mov
arpl
div
jl
dec
imul
test
jo
pop
shrb
cmpl
aaa
push
jo
pushf
inc
adc
mov
fs
in
mov
push
jmp
add
loope
fisttpll
mov
enter
les
movsl
dec
imul
mov
push
rcrl
and
jp
jle
push
xchg
pop
imul
adc
dec
mov
add
sub
push
cmp
ror
sub
fwait
incl
mov
out
mov
dec
push
and
mov
sub
bound
cli
jbe
roll
mov
ljmp
xor
test
js
jg
out
mov
fisubrs
lds
fs
adc
and
les
daa
std
push
cmp
xchg
dec
sbb
mov
lret
cmp
cmp
cmp
into
out
cmp
iret
pop
fnstenv
dec
xor
outsl
jmp
cld
subb
adc
inc
xchg
add
push
lods
into
testb
mov
cli
js
push
mov
sbb
jb
mov
shrl
loopne
push
imul
subl
sahf
inc
jmp
dec
xchg
xchg
cs
push
ffreep
xlat
mov
mov
mov
sbb
mov
aad
mov
pop
nop
and
dec
sub
out
dec
dec
jb
je
int3
push
jecxz
fs
std
test
xchg
call
shlb
rcrl
mov
or
jb
fstpt
jecxz
dec
loope
inc
xlat
mov
inc
stos
icebp
add
push
call
mov
xor
add
xchg
inc
jns
xlat
mov
cs
in
in
mov
xor
icebp
add
xchg
push
lret
mov
dec
pusha
mov
xlat
jecxz
inc
cmpsb
dec
das
sbbl
adc
sbbl
ret
fcmovu
es
enter
jbe
sub
jge
call
test
popa
gs
lods
shr
mov
test
push
and
cmc
sub
pop
mov
cmp
sub
loopne
test
inc
dec
mov
xor
test
sar
add
cmc
xchg
mov
test
call
inc
pop
stos
xchg
fdivrs
xchg
fyl2x
push
mov
mov
mov
xor
out
mov
push
cmp
dec
popa
xchg
test
cmp
sbb
stc
icebp
inc
nop
sti
push
or
sub
fwait
and
lahf
repz
xchg
fadd
lcall
mov
jns
stc
adc
mov
add
enter
sub
pop
je
ja
sub
fnsave
xchg
sbb
pop
sub
jne
cld
jno
jl
stos
out
pop
shlb
repz
jmp
sub
inc
sbbl
subl
dec
xchg
add
xchg
cmp
xchg
insb
rcl
loope
xchg
popa
add
shl
push
in
shll
or
cwtl
lcall
inc
lods
out
inc
out
insl
in
jae
or
push
jns
loope
pop
outsb
mov
sub
stos
pushl
xchg
pop
mov
loop
test
jo
xor
xchg
jns
adc
subl
pusha
leave
test
aam
or
arpl
hlt
dec
inc
jg
fimull
icebp
sarb
add
pop
add
and
pop
adc
ficomps
mov
lds
clc
outsl
cmp
push
movsb
js
sub
pushf
push
jbe
cmpsb
jnp
xor
cltd
sbb
repnz
jp
sub
jno
bound
jg
push
jbe
stc
push
repnz
clc
xor
repz
scas
jo
push
adc
sbb
cmp
addl
or
out
mov
enter
daa
call
std
xor
jo
xor
jno
cmp
sahf
mov
and
cmp
xchg
stos
jno
les
add
adc
xor
mov
dec
inc
mov
nop
sub
add
fisubl
push
mov
fsubrl
sub
mov
cmpsb
pop
jmp
adc
mov
mov
mov
mov
and
mov
and
stos
int
test
pop
push
lods
dec
lcall
mov
push
inc
sahf
cmpsb
dec
jmp
sbb
rolb
push
mov
popf
mov
fs
leave
adc
daa
ss
js
jge
dec
fcoms
sahf
testl
and
adc
stos
lods
orl
lret
cmc
xchg
cmp
xor
cld
dec
loop
ss
lcall
add
call
lods
dec
xor
mov
sarb
mov
xchg
sti
ljmp
gs
repnz
mov
lods
adc
mov
hlt
out
repz
jl
sbb
push
out
mov
sub
pop
or
lods
lret
cs
stc
aad
dec
add
mov
sbb
cmpsl
jo
sarl
jecxz
aam
movb
rorb
scas
pop
out
dec
lret
inc
pop
jp
add
mov
testl
inc
aas
hlt
ret
sti
jb
movsb
cli
mov
mov
add
sbb
std
push
mov
mov
mov
icebp
fsub
pop
cld
adc
test
sub
les
push
inc
js
pusha
or
mov
js
and
and
add
imul
inc
insl
arpl
mov
xchg
mov
mov
jl
xchg
lods
inc
xorl
lret
cmpsb
or
nop
inc
add
rclb
in
leave
sarb
mov
sti
sti
push
stos
sti
mov
clc
aas
pop
xor
ljmp
jecxz
inc
test
stos
subl
xchg
test
incl
inc
scas
pop
add
jle
mov
lock
inc
arpl
dec
enter
in
out
xchg
sbb
sbb
pop
not
fwait
push
in
push
js
cwtl
add
lods
hlt
xchg
mov
iret
idivl
fidivrs
inc
jae
xchg
xchg
cmp
mov
mov
mov
das
jb
ja
test
outsb
mov
pushf
lds
cmp
cmp
jns
jp
xor
aaa
mov
bound
inc
les
imulb
out
insl
jno
mov
ds
addr16
outsl
and
and
pop
insb
cmp
mov
jle
jno
in
xchg
push
pusha
pop
mov
fbstp
out
lods
pop
ja
jns
cli
mov
push
cmp
inc
popf
lea
aas
push
imul
pop
sbb
andb
mov
cmp
imul
ret
ds
cld
cmp
or
push
out
adcb
inc
testl
fcmovbe
inc
enter
popa
int3
mov
add
fiadds
fadd
mov
push
sub
repnz
fidivs
movsb
add
push
mov
jbe
test
jge
sti
inc
sbb
mov
mov
jno
repz
mov
es
aad
xchg
dec
pop
fwait
scas
dec
sarb
dec
aad
repz
cld
push
push
mov
xchg
cmpsb
push
jecxz
push
push
mov
and
shll
out
js
mov
jg
xchg
xlat
sub
or
cmp
leave
ds
insb
add
fidivs
push
push
repnz
pusha
add
jnp,pn
sbb
sub
or
rcrb
dec
js
push
pop
sbb
cmp
outsb
test
mov
sub
in
push
dec
mov
push
jae
roll
jp
fnstenv
jge
push
and
int
outsb
adc
sub
pop
iret
jns
lcall
pop
mov
or
mov
test
jg
repnz
mov
jns
xor
js
push
adc
adc
jge
cmp
or
testl
addr16
sahf
lods
arpl
sbb
into
lods
lcall
add
in
xchg
loop
mov
stc
adc
pushf
enter
mov
stos
fsubrs
mov
outsb
mov
fiadds
stc
in
icebp
stc
insb
sti
cltd
mov
mov
jl
push
in
aad
inc
movsl
inc
adc
xchg
fsts
pop
cmp
outsl
xor
sbb
mov
jg
sub
jo
popa
sbb
push
daa
cs
dec
pop
aad
cmp
add
jmp
fildl
fwait
out
cmp
in
jecxz
mov
movb
inc
cmc
movsb
sahf
call
into
stc
imul
pop
jae
cmpsl
lock
pop
xchg
subb
add
inc
loopne
aas
aas
xchg
mov
jb
movsb
mov
dec
popa
mov
negb
add
lods
and
cwtl
pop
mov
mov
or
addr16
aas
mov
xchg
mov
xor
dec
lock
repnz
mov
outsl
cld
sub
jmp
mov
clc
adc
es
pop
insl
dec
xor
cmpsl
out
dec
or
popa
xchg
xchg
mov
mov
out
out
addr16
sub
out
lahf
sbb
cltd
add
test
jl
mov
fs
push
outsb
rcll
lret
clc
jp
fcoms
push
mov
pop
in
loopne
stos
jb
outsb
out
or
xchg
lock
push
outsl
push
inc
bt
js
ss
arpl
call
sub
das
pop
je
push
mov
sbb
mov
or
xchg
data16
adcl
add
and
lcall
int
fsubl
addr16
lret
add
mov
out
mov
ljmp
dec
mov
dec
push
mov
pop
in
xchg
dec
pop
adc
mov
xchg
ds
push
cmpsb
loopne
xor
outsb
cmp
orl
movsb
dec
out
or
lcall
clc
divl
insb
cmpsl
lock
icebp
call
sbb
jg
int
mov
ret
sub
xchg
push
add
add
mov
outsl
popf
mov
aas
mov
test
fsubrl
or
stos
sbb
jo
imul
scas
add
ret
pop
dec
adc
inc
iret
lcall
leave
jae
push
hlt
lahf
clc
in
ss
addl
dec
popf
push
mov
fiaddl
mov
pop
outsl
cmp
sub
cmpl
notl
fnsave
movsb
mov
push
jbe
aad
jge
push
sbb
mov
int
or
int3
xor
test
jl
mov
push
mov
inc
xchg
jo
adc
scas
cs
and
and
test
rcl
mov
cmpsb
in
pop
jg
cmp
loopne
daa
out
push
cmp
adc
loope
pop
test
cmp
add
subb
movsl
popa
xchg
and
test
push
cmp
in
dec
add
mov
test
pop
pop
js
jge
pop
pop
inc
xor
aad
push
ret
fadd
dec
shrb
cmp
outsb
cmp
or
pop
add
ror
cmp
mov
pop
imul
nop
cltd
int
cmp
sub
lret
sub
or
ficomps
fwait
mov
sahf
in
push
lcall
pop
leave
jg
jge
mov
mov
stc
ljmp
adc
jmp
cmp
loope
test
gs
xor
lret
cmp
adc
or
xorb
xor
outsl
xchg
in
loop
inc
fwait
imul
add
data16
dec
lods
pop
mov
mov
cli
adc
fwait
mov
pop
pop
repz
dec
lds
sub
cmpl
jg
mov
icebp
sub
push
into
xchg
leave
pop
sub
or
shl
ds
fists
dec
insl
sahf
cmp
enter
int3
aaa
sub
std
lcall
rcr
mov
add
inc
xchg
or
dec
out
inc
pop
ret
pop
dec
scas
cmp
je
lea
jecxz
cmpb
pop
jmp
call
dec
lods
xor
insl
and
xchg
in
inc
fildl
mov
pop
xor
fsubrs
sti
cmpsb
scas
aas
xor
jb
xlat
xchg
aam
test
addb
mov
mov
push
mov
iret
lods
mov
js
icebp
mov
cld
push
mov
mov
lock
push
mov
das
push
out
out
add
push
sub
xor
mov
inc
xchg
xchg
push
add
cmpsl
in
hlt
mov
stos
jae
lods
pop
pop
das
mov
adc
pushf
and
test
inc
shlb
popf
insb
test
cwtl
pushl
xor
jl
icebp
adc
xchg
ja
sub
fldt
shr
sbb
cwtl
in
inc
stos
popa
mov
xor
dec
mov
stos
add
mov
xor
out
jge
popa
mov
xchg
imul
jecxz
out
lds
in
mov
imul
rcrb
mov
je
add
pusha
insl
stc
in
xor
xchg
mov
xchg
xor
outsl
mov
mov
hlt
sbbb
ret
sub
add
adc
bound
jne
popa
jne
lea
out
cmc
fwait
clc
enter
cmpl
orl
out
dec
mov
or
mov
jp
jecxz
and
cmp
cwtl
jle
jo
in
and
fcomip
clc
notl
in
dec
inc
adc
add
jbe
push
ret
popf
fildl
sbb
out
nop
stos
pop
loope
xchg
arpl
mov
jecxz
imul
fs
imul
sbb
stc
cmp
loop
jne
ljmp
arpl
or
dec
pop
or
bound
or
aad
add
jb
xchg
pop
sahf
pop
xchg
xchg
or
scas
pop
loope
or
add
jp
mov
enter
jnp
push
sub
mov
jge
cmc
test
je
fwait
aaa
mov
gs
adc
jl
inc
outsl
dec
ret
movsb
push
fwait
dec
xor
add
or
or
sub
test
pushf
cmp
inc
dec
or
cmpsb
jo
mov
enter
daa
in
cmp
sub
mov
sbb
fwait
ret
mov
pop
loope
adc
dec
lahf
sbb
ljmp
jae
mov
mov
inc
cltd
pop
add
and
pop
xchg
sbb
push
icebp
pop
push
sbb
fsubrl
sub
lcall
xchg
stos
shlb
je
xor
out
xchg
stc
mov
mov
and
test
sub
cli
int
in
pop
sub
sbb
pop
int
add
jns
shll
fcompl
lret
sahf
dec
test
subb
jg
or
sbb
mov
fbld
ss
mov
cmpb
testl
dec
cmc
cmp
add
or
cmc
jmp
or
mov
fadds
adc
and
inc
jns
out
inc
adc
xchg
ja
data16
lahf
lods
lods
mov
js
dec
out
ss
inc
pop
xchg
mov
xchg
fwait
sti
notl
add
and
test
inc
push
adc
xchg
adc
adc
scas
ds
mov
ror
cmp
xchg
mov
sub
sbb
adc
add
pushf
cmp
jmp
icebp
iret
cs
sub
mov
mov
dec
test
pop
add
jo
je
jne
jecxz
mov
repnz
ret
adc
insb
int3
loop
pop
xchg
imul
xor
out
into
inc
repz
aas
shrl
dec
jb
ds
and
fadds
mul
call
xchg
cwtl
roll
jb
xchg
mov
mov
xchg
shl
popa
cmp
xchg
xor
lret
jp
jp
mov
add
mov
xor
std
out
mov
pop
insb
stos
aam
nop
push
ret
push
push
stos
es
lods
insl
sbb
dec
pop
aaa
pusha
cmpsl
in
push
mov
je
sarl
orb
mov
in
inc
mov
pop
sub
ja
cltd
outsb
jns
test
or
mov
test
fstpl
cs
lock
add
ljmp
xor
sub
shr
xchg
xchg
jle
adcb
bound
popa
out
das
add
out
scas
xor
in
les
sub
mov
or
in
mov
dec
nop
or
dec
setnp
aaa
fstpl
popa
mov
outsl
add
mov
lcall
nop
sub
fs
loope
movsb
xchg
cmpl
lds
in
ja
xor
dec
movsl
push
popa
mov
or
mov
ss
mov
jne
lahf
fdivs
aam
push
bound
out
jp
sub
push
out
arpl
jb
mov
testb
jp
xorb
out
insb
jge
mov
dec
cmpb
fnsave
lea
and
adc
repz
push
and
pop
sbb
jno
sbb
in
push
test
lock
add
mov
es
xor
mov
mov
scas
leave
movsl
pushf
push
mov
notl
cld
jne
iret
pop
aad
ret
mov
hlt
xor
aam
inc
mov
aas
or
frstor
xchg
sub
repnz
int3
jb
mov
int
jge
sub
lds
icebp
add
and
mov
repnz
cmp
movsb
movsb
mov
push
ja
cmpsl
jbe
aam
jge
negl
das
mov
bound
ret
jno
jle
jl
aad
dec
xor
fnstenv
pop
ret
pop
scas
in
movsb
loop
pusha
sbb
addr16
adc
fidivs
cmpsb
repz
in
or
lock
in
idivl
dec
negb
int3
push
pop
cmp
call
movsl
outsl
lods
and
sub
push
jecxz
xor
add
subb
push
sub
pop
sub
sarb
pop
adc
jno
push
shrb
add
sbb
inc
sub
mov
add
push
adc
adc
or
lcall
mov
lret
js
gs
sub
ss
cmpl
dec
cli
gs
cmpsb
mov
sbb
sbb
test
xchg
flds
call
sahf
pop
stc
pop
dec
std
cmpsl
ret
and
stos
bound
jbe
iret
cmp
cmp
stos
pusha
lret
sbb
and
cmp
lret
outsb
and
into
push
cs
cmc
mov
jmp
push
out
scas
outsl
inc
aam
loop
and
imul
adc
and
test
std
shrl
jae
mov
ret
pusha
inc
cli
ja
push
mov
xor
cmp
outsb
das
adc
xor
loopne
lods
outsb
pop
movsb
xchg
mov
fnstenv
push
les
lods
adc
ret
xchg
data16
pop
sbb
cmp
cmp
sub
cs
jmp
in
jnp,pn
call
shrl
nop
imul
inc
jg
add
dec
scas
je
mov
jecxz
cmp
or
lea
lcall
pop
inc
sbb
mov
arpl
pop
jnp
push
inc
jp
movl
cld
jb
ficompl
and
xchg
insl
rcrl
pushf
inc
mulb
pop
ret
std
mov
cltd
shlb
mov
dec
adc
shrb
jmp
inc
xchg
mov
mov
das
fsub
xchg
mov
push
lcall
movsl
pop
sub
mov
mov
dec
adc
in
std
popa
fsubs
in
xor
dec
and
cld
pusha
mov
rorb
cltd
movsl
stc
cmp
add
jae
jo
aas
push
mov
fcmovu
aas
das
mov
sub
out
xchg
cmc
dec
fucomi
ror
rcrl
sbb
aas
test
sub
add
fisttpl
rorb
add
aam
push
repnz
sub
inc
cli
test
mov
xchg
shrl
ret
mov
add
dec
add
sbb
hlt
xor
cmp
jns
in
mov
xchg
rcrb
jb
pop
cmp
mov
sbb
add
rorb
and
mov
xchg
push
jne
inc
push
mov
sub
out
sbb
jmp
pop
pop
js
imul
cs
icebp
and
lret
jp
aad
and
push
sbb
jno
jle
ds
xchg
inc
xor
in
fbstp
mov
push
pop
push
adc
jae
mov
mov
mov
imul
adc
sbb
xor
imul
xor
negl
ds
mov
ja
or
enter
sub
arpl
lahf
inc
mov
pusha
or
pop
lea
inc
or
lahf
xor
add
movsl
lods
pop
cld
in
jo
int3
inc
lahf
lds
xchg
add
arpl
cmp
pusha
pop
movsb
das
out
sub
jbe
cmpl
sbb
cltd
dec
aaa
xor
mov
jno
lahf
dec
jl
cmp
dec
mov
loop
xor
mov
mov
sub
xor
inc
insl
sbb
lock
bnd
enter
daa
jecxz
sub
jle
inc
loope
and
cmp
sbb
movsw
jbe
shll
dec
sti
lahf
pop
mov
sbb
daa
add
out
and
pop
sub
sbb
fwait
js
sub
push
inc
jl
mov
fldcw
aaa
inc
outsb
gs
adc
in
xchg
adc
lods
mov
mov
mov
inc
jbe
xchg
jge
xchg
cld
pushf
sub
daa
pop
pop
lret
xlat
ds
inc
mov
loop
sbb
ja
sahf
aad
test
clc
in
jg
cmp
stc
movups
fs
or
cli
loope
ss
pop
push
fdivr
cmpsl
or
add
or
adc
dec
cmp
arpl
fldl
outsl
into
cmp
cmpsb
cmc
jns
sbb
jno
cmp
aam
loop
bound
imul
jmp
data16
push
lods
int3
jne
mov
and
ret
cli
stos
add
dec
inc
insb
in
popf
jnp
sti
push
je
xchg
or
gs
cmpsl
pop
loopne
stc
pop
ret
in
or
fldcw
les
outsl
sbb
stos
cmp
sub
int
mov
out
xlat
add
fisubrl
clc
dec
mov
pushf
mov
dec
ficomps
xchg
nop
inc
fwait
clc
dec
les
inc
xchg
jae
dec
adc
icebp
je
inc
gs
add
lea
sbb
lret
pop
stc
jl
adcl
fistl
das
stc
inc
add
mov
or
test
cltd
and
lahf
jmp
imulb
mov
cwtl
inc
mov
mov
icebp
mov
jmp
add
pop
nop
scas
mov
lret
mov
lock
das
mov
sbbl
ret
xor
adc
cmp
sbb
xor
mov
out
out
sub
mov
jp
and
xchg
fimull
imul
rcrb
das
cld
cltd
fcompl
push
mov
scas
inc
push
jp
xor
data16
clc
data16
xchg
xor
jae
xor
movsb
shl
xor
or
xchg
xor
xchg
or
cmp
fisttpll
pop
sub
sub
xor
jecxz
mov
xor
out
test
flds
push
sarb
inc
sbb
and
push
pop
fwait
aas
out
test
add
xor
les
adcb
in
xchg
pushf
xchg
and
and
lahf
lods
ja
rcr
dec
mov
pop
mov
adc
pop
dec
stos
dec
or
dec
push
mov
das
push
out
xchg
xchg
les
hlt
sub
adcb
ljmp
out
testb
in
sarl
addr16
ja
jp
fadd
and
out
dec
insb
push
sbb
lods
daa
push
jle
xchg
shl
fwait
lds
and
fists
dec
xchg
mov
sub
mov
outsb
inc
xor
inc
jae
dec
pusha
push
or
loope
push
mov
mov
movsb
sub
stos
mov
aam
push
outsb
aas
imul
mov
shll
mov
in
push
push
cmpps
adc
dec
arpl
lret
jmp
popl
movsl
scas
or
rorl
sbb
dec
ficoml
nop
add
sbb
sub
outsl
push
daa
lds
rcrb
mov
mov
sbb
mov
movsl
ss
adc
mov
mov
movsl
or
or
jecxz
jl
jno
dec
adc
lret
sbb
push
jo
les
and
jb
push
std
outsb
cmovae
or
in
fnstenv
inc
enter
daa
loop
cmp
add
mov
cmp
mov
ret
incb
lahf
jp
mov
mov
aaa
sbb
repnz
mov
xor
fistl
pop
jp
fwait
js
mov
pop
push
mov
push
jnp
push
push
scas
jecxz
outsb
pop
inc
sub
rclb
outsb
enter
mov
xchg
enter
dec
aas
movb
push
and
xchg
add
pop
cmp
pop
dec
cmp
fistps
clc
mov
mov
inc
sahf
js
repz
adc
es
mov
push
mov
jnp
fs
movsl
popa
ss
sub
cmp
mov
loop
ret
leave
dec
add
dec
xor
lret
lods
shl
or
into
sbb
cmc
inc
mov
xor
stc
fsubrl
fcoms
fs
cli
adc
xor
inc
data16
lods
mov
xor
roll
frstor
mov
or
aas
sti
add
lcall
jle
loopne
sub
pop
loop
mov
sahf
or
fldenv
xchg
jp
add
in
mov
mov
xlat
inc
mov
adc
mov
cmp
cs
sbb
aad
shlb
pop
int
dec
push
call
je
es
stc
or
adc
cmp
nop
bound
pop
lods
xchg
jmp
jmp
sbb
fcmovnb
pop
add
inc
mov
xor
pop
idivb
scas
mov
jb
lods
mov
and
add
imulb
mov
add
mov
and
mov
rol
cld
push
popf
ror
movsb
aas
mov
loopne
lock
das
lcall
sub
and
loop
cld
ret
ret
cmp
es
leave
orb
pop
cmpsl
loope
xchg
mov
push
pusha
adc
mov
popf
mov
mov
mov
jnp
repnz
test
push
xchg
mov
insb
mov
push
fisttpll
mov
xchg
jae
int3
ljmp
mov
stos
sbb
inc
enter
jl
mov
pop
movd
add
imul
movsb
fdivrl
xchg
push
inc
dec
xor
test
push
lds
mov
mov
cmp
dec
cmpsb
jae
or
or
dec
sub
jne
pop
xor
and
push
in
into
ljmp
mov
mov
xchg
mov
dec
jle
and
rcll
dec
mov
and
mov
mov
dec
fucomp
jno
push
bound
sub
loope
xchg
mov
pop
addl
inc
sub
out
inc
addr16
imul
notl
xor
mov
mov
pop
in
out
je
mov
pop
test
rcll
cmp
xlat
jae
adc
fstpl
shrb
test
outsl
stos
and
adc
popl
mov
push
test
popa
adc
mov
mov
hlt
push
clc
popa
arpl
stos
pop
or
dec
push
aam
or
sbb
add
pop
mov
xor
bound
mov
ficoms
pop
sbb
lret
add
inc
mov
or
or
inc
mov
push
fs
xchg
jbe
aaa
xchg
xchg
sbb
or
mov
cmp
fwait
sub
lds
and
sbb
daa
dec
sbb
jo
call
and
push
test
xor
roll
into
cmpsb
jl
clc
in
rcr
enter
daa
loope
mov
loope
push
mov
cmp
cmp
das
inc
shlb
adcb
lahf
cltd
stc
ficoms
rorl
lahf
int
mulb
outsl
pop
mov
test
xchg
xchg
pop
push
bound
mov
sub
outsb
sub
shlb
data16
inc
leave
cmp
push
xor
fwait
or
or
push
pop
lcall
cmp
jns
sahf
sbb
popa
sbb
mov
mov
subl
fs
imul
ss
fucomip
cmp
outsb
gs
sbbb
xor
adc
or
push
pusha
cmc
pop
dec
and
daa
sbb
inc
loop
jns
imul
roll
iret
in
mov
lods
lcall
out
imul
cli
adc
mov
jae
dec
sti
mov
inc
xlat
pushf
and
mov
mov
add
aas
lods
les
imul
scas
sbb
inc
cmp
mov
xlat
addb
fiadds
adc
mov
jmp
pop
es
jae,pt
test
or
dec
and
xchg
sub
scas
popa
je
pop
jmp
or
adc
cmpsl
cld
call
enter
pop
pusha
addl
fcomi
lock
pop
fs
inc
inc
cmpb
jb
in
mov
mov
jle
out
insl
push
std
xchg
insb
in
cwtl
mov
jns
mov
scas
cld
inc
adc
lret
ss
mov
mov
xchg
push
lock
repnz
mov
cmp
rcl
and
adc
es
push
dec
add
cmpsl
loopne
mov
jge
andl
jg
mov
shlb
mov
test
mov
cltd
dec
push
jle
and
fbstp
add
and
mov
xor
fdiv
ds
mov
aad
sbb
mov
pop
out
cwtl
mov
pop
dec
cs
lcall
paddusw
add
loop
or
roll
mov
ss
dec
cltd
xor
test
adc
mov
inc
dec
fadds
or
stos
into
fwait
popf
mov
push
in
in
add
imul
test
jns
cmovbe
or
leave
push
mov
mov
pop
pop
dec
icebp
lea
jnp
dec
jno
loopne
adc
mov
repnz
cmpsl
enter
movsl
mov
jbe
out
push
movsl
lcall
in
xchg
or
adcl
shl
pop
or
loop
in
inc
jecxz
jp
pop
and
add
and
fbld
jmp
fdivl
fists
xchg
repz
clc
ds
inc
out
jae
daa
int3
push
xchg
mov
mov
and
mov
xchg
push
sbb
cmp
imul
dec
scas
push
lcall
push
int3
arpl
iret
aam
mov
leave
cmp
pop
mov
inc
xchg
and
xchg
les
inc
mov
dec
fidivrl
mov
jl
mov
lds
xlat
rorb
imul
sar
cmp
adc
rclb
rclb
decb
adc
jge
cli
ret
sbb
movsl
data16
jb
inc
or
fldcw
dec
out
shrb
or
xor
lret
adc
scas
push
pop
out
test
xchg
xor
inc
sbb
inc
in
cmpsl
popa
fmul
add
sti
cmp
das
insl
loope
sub
lods
cmp
sbb
movsl
mov
and
inc
hlt
lahf
mov
mov
imul
pop
xor
movb
push
pop
pop
enter
jp
enter
ss
push
cwtl
push
int3
in
jecxz
les
cltd
outsb
mov
cmp
ds
sarb
daa
or
lret
push
mov
mov
and
js
int3
shlb
or
negb
xchg
xchg
jbe
stc
in
sbb
pop
sahf
test
xor
add
fs
nop
mov
fbld
xor
nop
rcrl
loope
addb
fsubrs
mov
jbe
ljmp
cmp
daa
adc
sub
jl
loop
mov
xor
jmp
loop
push
fsubrs
add
out
inc
add
and
fldt
lods
orl
out
xor
mov
fimuls
lock
bound
aad
cli
push
mov
loopne
clc
aas
pop
and
adc
fsts
das
les
repz
pop
xchg
jb
rcrl
cmp
xlat
rorl
push
rolb
adc
aas
push
pop
pop
mov
pop
cmp
rclb
test
mov
pop
outsl
je
jmp
jecxz
in
sbb
rorl
scas
adc
pop
adc
xchg
sbbl
aas
dec
aad
pop
mov
inc
xchg
add
popf
sub
scas
jb
dec
pusha
mov
push
sarb
xor
sub
push
hlt
out
mov
in
call
lret
movsl
sbb
mov
sti
and
mov
cmc
aaa
das
pop
ljmp
sub
mov
cld
ret
loope
jno
rcr
insl
fildl
cmpsl
adc
xor
xchg
lods
cltd
into
idivl
jecxz
mull
push
dec
sub
cwtl
enter
bound
das
and
cmpsb
push
ret
fstps
fstp
sbb
pop
lret
rcll
lea
shl
xchg
inc
pop
lcall
out
mov
inc
clc
push
insb
repnz
test
add
ja
inc
xor
lret
mov
cmp
inc
test
push
xchg
cmp
inc
fists
js
int3
mov
iret
add
test
sahf
xor
lods
jns
adc
in
aaa
fwait
xchg
push
aaa
cmp
or
xchg
pop
pop
js
ja
pop
or
fwait
scas
mov
ljmp
popa
aaa
mov
push
inc
das
jne
mov
mov
mov
out
das
mov
bound
mov
jmp
dec
xchg
insl
andl
subl
dec
leave
addr16
fisttps
pop
sub
insb
xchg
imul
mov
dec
jecxz
mov
in
pusha
out
push
rcr
scas
and
xchg
sub
and
jae
jge
push
push
dec
lret
jecxz
mov
popa
test
stos
or
sbb
pop
cld
imul
inc
scas
mov
inc
or
inc
mov
scas
ret
leave
mov
sub
lods
adc
arpl
adc
push
pop
data16
imul
in
mov
or
push
pop
mov
dec
cmc
vsubpd
shrb
js
scas
pop
push
cmp
or
std
test
mov
call
aaa
xor
bound
xorl
jl
adc
dec
pop
push
mov
xor
es
push
scas
inc
pop
and
mov
xchg
push
pop
xchg
std
inc
test
sub
mov
enter
pop
daa
fistps
out
loope
js
sub
movsl
mov
jne,pt
mov
and
inc
jne
add
mov
add
out
add
xchg
sub
insl
pop
out
cmp
js
sub
pop
adc
stos
push
pop
push
and
fsubrl
inc
sub
or
outsb
icebp
add
test
iret
imul
cmp
inc
mov
push
mov
jnp
and
and
into
int
lret
add
or
shrl
push
mov
cmp
sahf
popa
or
test
mov
ja
add
cwtl
stc
jmp
imul
jle
lds
repz
jb
testl
push
pushf
xor
pop
cmp
adc
cltd
daa
push
into
lds
movsl
xor
lahf
daa
outsl
lahf
sti
xchg
loop
pusha
test
jl
adc
sbb
in
shlb
hlt
xchg
lods
push
pop
mov
mov
jno
dec
cmp
cmp
sbb
pop
sub
mov
jbe
adc
cwtl
les
hlt
repz
imul
fsubp
cmp
xlat
add
jge
les
stos
adc
push
daa
pushf
cmp
cmp
dec
and
jmp
fdivs
mov
lods
dec
jecxz
dec
inc
fimuls
mov
jecxz
mov
mov
sub
mov
mov
adc
dec
incl
sbb
gs
pop
stos
sbb
push
inc
mov
popa
xchg
out
mov
mov
xchg
stos
divb
adc
in
rcrl
adc
xchg
mov
js
imul
lret
adc
push
mov
or
mov
sub
leave
das
aaa
adc
mov
daa
sbb
aam
in
ret
jo
inc
es
aad
insl
cmpb
dec
stc
adc
cmpsl
ficomps
dec
popa
dec
mov
lods
add
push
mov
push
orb
imul
imul
cltd
mov
lea
cmp
xchg
push
fldl
xchg
dec
clc
push
xor
xor
ljmp
sti
pop
inc
jbe
stos
ljmp
xchg
sub
adc
mov
pusha
add
jno
or
sbb
xor
shlb
mov
xor
addr16
cmpsl
test
push
sti
xchg
mov
xchg
ja
or
push
in
sti
mov
mov
lahf
push
push
xor
mov
mov
pop
xchg
pop
call
push
mov
ret
ja
aaa
repz
push
pop
mov
mov
rorb
test
aaa
iret
test
dec
push
mov
or
or
pop
mov
inc
les
andb
fcompl
mov
jp
add
insb
incl
jmp
das
jo
in
loop
pusha
mov
adc
into
or
data16
inc
pop
or
jae
pop
mov
pop
dec
sbb
adcl
stos
jge
xor
nop
lods
les
xor
push
pop
xchg
push
sbb
iret
xchg
cmc
ret
mov
sub
cmp
negl
xchg
arpl
jne
or
mov
jbe
ficompl
icebp
cmp
jl
xchg
int3
hlt
fistpl
fdivrp
sub
inc
rol
push
mov
add
xchg
xchg
adc
out
pop
push
push
aas
jmp
jge
imul
lock
jno
pop
clc
jl
lcall
rclb
cmp
mov
scas
ficoml
rclb
test
sub
inc
cmp
cmpsb
add
pop
addr16
daa
fdivrp
push
cmp
dec
loope
out
sub
mov
cmp
or
cwtl
je
cltd
pop
sbb
push
aad
lahf
imul
rcll
add
push
cmpsl
add
add
fcomps
pop
push
and
lock
push
popa
js
jp
mov
sbb
shrl
loop
outsb
push
in
fistl
xor
xchg
orb
mov
lcall
fcomps
int
mov
sub
sub
inc
out
lcall
mov
sbb
mov
pushf
test
pop
subb
jg
push
mov
cmp
stc
mov
add
adc
scas
cmpb
xlat
jo
mov
movsb
jl
sub
int
or
fistpl
into
test
pop
jge
xor
incl
outsl
jle
sbb
imul
fwait
add
inc
addb
dec
jmp
mov
mov
mov
lock
mov
test
rclb
gs
adc
mov
ljmp
les
leave
repz
xchg
cmpb
lahf
push
sbb
aas
out
sbb
aaa
pop
adc
jo
fs
in
jne
cmp
adc
mov
dec
inc
and
inc
icebp
push
push
je
pushl
jecxz
rorl
push
repnz
lea
rol
inc
sar
pop
js
mov
dec
ljmp
pop
dec
jnp
inc
movsb
test
inc
rorl
aas
sub
jb
ret
lock
and
iret
and
idivb
xchg
pop
cwtl
out
daa
dec
mov
jne
mov
mov
inc
xchg
or
ret
lret
sbbl
mov
bswap
lock
pushf
das
push
and
sub
and
aam
std
ret
jmp
daa
es
aas
sub
jge
dec
hlt
aas
mov
fnstsw
shll
mov
lods
outsl
jmp
movsl
mov
sbb
data16
push
cmpsb
inc
sarb
mov
test
loopne
dec
pop
or
sbb
ljmp
outsl
jae
jae
push
shll
and
stos
fstps
int
test
push
push
and
out
psubd
lods
add
xchg
or
cmp
rorb
addr16
inc
xchg
adcl
sarl
test
mov
test
cmpsl
or
gs
fwait
sub
push
pop
fiadds
mov
loope
xor
outsl
test
in
lock
xchg
lods
mov
and
mov
jge
or
fcmovnu
dec
dec
xlat
cmp
cwtl
cmpsb
mov
insl
cmp
dec
sbb
jne
inc
xorb
ficoml
bound
das
jmp
loope
xor
xchg
sub
mov
rcr
sbb
arpl
ret
mov
and
test
push
fs
xor
in
sti
sbb
mov
in
stc
bound
popf
jle
inc
push
cmc
or
fcmovb
call
mov
fildll
test
sbb
and
mov
dec
push
mov
movsb
xchg
icebp
jge
ret
outsb
leave
mov
jns
arpl
dec
xchg
or
cmp
add
or
fcmovbe
xor
add
mov
or
jmp
sahf
add
cmpsl
shl
add
stc
in
repnz
inc
cmp
movsb
jno
pop
push
mov
adc
jge
jp
sbb
aaa
scas
sub
jno
pop
inc
jl
testb
mov
sub
fsubl
scas
add
mov
sbb
fwait
inc
mov
cmpsb
mov
mov
pop
push
and
icebp
lods
cmp
fucom
sarb
mov
mov
sub
xchg
cmp
pop
ds
stc
mov
in
cmp
lahf
adc
fdiv
sbb
inc
xor
lods
stos
xor
pop
cmp
and
sbb
lods
sbb
push
rcrl
fadd
dec
mov
outsb
mov
mov
rorb
lret
das
sbbb
dec
mov
lahf
jb
cmc
or
adc
inc
or
sub
daa
addr16
lcall
outsl
mov
scas
outsl
sahf
cmpsl
inc
adc
inc
dec
lahf
jg
sbb
stc
pop
sub
xchg
adc
jno
ss
xor
cmp
pop
ror
idivl
lods
lret
xor
adc
pop
stos
or
iret
into
mov
and
xchg
jb
outsl
pop
daa
and
test
pop
pop
adc
add
add
movsb
leavew
sbbl
push
jns
out
imulb
mov
pop
push
pop
sti
outsl
jle
arpl
repz
loopne
inc
lock
jge
jg
mov
cmp
les
cmp
test
lea
fidivrl
sub
stos
scas
bound
movl
jmp
add
cs
lcall
repnz
dec
mov
push
inc
dec
fisubrs
sub
jecxz
sub
sti
js
call
les
mov
sbb
adc
jo
lock
push
inc
sub
xor
decb
jb
leave
ret
mov
xchg
roll
addr16
xor
cwtl
test
jl
mov
ja
sbb
push
lret
xacquire
mov
xchg
lock
bound
cmc
cmp
push
aam
not
ret
mov
dec
push
sti
insl
push
movsb
cmovs
xchg
cmpsl
fsubl
dec
sbb
popa
jns
xchg
lods
fidivl
mov
and
popa
mov
and
ss
cltd
es
push
pop
aaa
mov
sbb
push
daa
sbb
enter
scas
sahf
ljmp
jne
fwait
mov
sbb
call
insb
xor
ficoml
add
iret
dec
or
repnz
xor
cmpsl
and
inc
jo
dec
xor
jecxz
xchg
nop
sbb
cli
xchg
inc
movsb
cmpsb
movsl
or
dec
lret
fwait
pop
jno
push
jns
add
aad
xchg
nop
adc
xor
jns
cli
jge
cmp
and
mov
fmull
pop
cmp
dec
cmp
mov
orl
pop
cmpsb
fdivs
int3
hlt
mov
inc
cmc
jmp
lods
lock
adcl
out
nop
cs
into
std
call
jp
lret
hlt
and
sub
jnp,pn
jge
jle
xchg
ds
js
pusha
sarb
fisttps
xchg
cmpsb
dec
xor
and
jae
test
push
popf
lods
bound
imul
and
stos
arpl
movsb
xchg
jb
je
out
les
shlb
scas
loope
hlt
push
call
inc
push
iret
push
cmp
lea
xchg
leave
sbb
arpl
push
xor
xchg
icebp
or
mov
dec
inc
test
mov
add
mov
sbb
roll
sar
cmpl
add
bound
ss
out
pop
jge
insl
sbb
int3
mov
outsb
jno
or
sti
jno
jne
jl
es
stos
fs
sbb
pop
pop
fnstenv
cmpsb
scas
in
xor
clc
cltd
xchg
test
mov
aaa
scas
cmpsb
or
insl
enter
daa
fmull
cmp
cmpsl
push
test
shrl
dec
pop
cmp
jg
fisubrs
movsw
cmpsl
dec
popa
and
push
push
push
jnp
lds
ret
add
and
add
and
insl
mov
je
jmpw
pop
into
lret
stc
push
mov
push
sub
fdivl
pusha
sub
and
inc
adc
ljmp
xorb
xchg
mov
aad
and
movb
push
add
pop
inc
push
lcall
out
test
mov
lds
jo
insl
andb
jg
int
mov
popa
sar
adc
pushl
add
cmp
adc
mov
lret
test
fistl
jg
out
pop
into
outsb
std
repnz
ljmp
outsl
cmp
xchg
loop
shll
mov
rolb
jnp
dec
stc
pushf
lods
sbb
addr16
out
inc
push
cli
movq
ljmp
sti
push
cs
xchg
je
lea
notl
nop
cli
mov
out
xor
les
push
push
or
sbb
adc
sahf
lahf
sub
xchg
push
pushf
cmp
data16
adc
lahf
aad
fs
inc
pushf
or
add
add
and
in
push
int
and
insb
lea
push
call
inc
add
fsubp
in
xorl
and
fcoml
pop
xchg
adc
inc
mov
movb
adc
push
add
mov
inc
cs
xchg
mov
fidivrl
cwtl
fs
mov
pop
bound
lock
lret
popa
xor
mov
dec
lock
leave
das
aam
pop
mov
or
sbb
movsb
jge
ret
sbb
jo
insl
aaa
scas
mov
push
mov
jl
mull
cli
lea
dec
fdivrs
sub
fwait
pop
inc
or
shl
pop
mov
test
or
iret
sub
dec
fdivrp
add
loopne
in
mov
mov
push
or
inc
clc
xor
dec
rclb
fmuls
mov
mov
dec
rorl
push
push
mov
cbtw
inc
mov
inc
ror
dec
pushf
mov
test
mov
and
sbb
mulb
cmp
sbb
ss
sbb
and
lock
mov
jns
mov
in
stc
mov
das
or
push
pop
repz
iret
ja
scas
imul
dec
mov
repnz
ret
add
fmull
xor
jne
push
mov
bound
lcall
and
sub
leave
mov
addr16
mov
and
dec
insb
inc
lds
jle
xchg
dec
in
pop
jnp
pop
or
xchg
jns
jne
or
inc
jle
jae
jl
push
pusha
or
mov
pop
fstpl
stos
pop
push
xchg
leave
inc
mov
imul
loop
das
test
adc
mulb
mov
jg
hlt
fdivs
lea
xchg
mov
push
int
push
mov
push
add
jo
aaa
sarb
inc
lds
int3
mov
sti
pop
je
sbb
in
fcmovb
cmc
mov
jge
aaa
iret
repnz
jne
cmp
fisubrl
push
ds
pushl
cmp
jge
inc
pop
sbb
inc
mov
sub
outsl
sbb
fdivl
xchg
dec
sbb
pushf
push
jns
cwtl
xor
xchg
cmp
scas
ret
sub
and
fiadds
mov
inc
in
pop
cmpsb
mov
mov
out
push
daa
push
cmp
enter
or
sub
shll
add
movsl
scas
or
and
dec
mov
dec
pushf
test
stc
sbb
add
sbb
shlb
xor
daa
js
insl
ret
leave
das
push
scas
mov
fcompl
repnz
outsb
jge
lcall
sub
addb
mov
adc
fnstenv
inc
int
int
xlat
in
sub
jb
pop
ret
push
push
lcall
lods
mov
loopne
sahf
in
inc
filds
jge
mov
jg
xchg
mov
ret
mov
mov
jecxz
rcll
mov
idiv
jne
lret
or
mov
lea
cld
dec
or
lods
into
push
popa
dec
cmc
mov
pop
xor
jne
sbb
loop
sahf
xchg
imul
xchg
xchg
loop
lods
add
inc
mov
dec
out
push
in
cli
inc
mov
or
cmc
ds
int
std
test
dec
loopne
xlat
jne
mov
sbbl
es
xor
adcl
and
fcoml
cmc
mov
cmp
daa
xlat
cld
cmp
sub
jnp
out
jns
or
mov
testb
nop
sbb
and
pop
push
pop
inc
sub
iret
dec
int3
ret
jle
inc
jecxz
mov
daa
cltd
leave
mov
jbe
ret
pop
xchg
ljmp
stos
jae
fisttpl
jle
pop
ss
dec
inc
cmp
jb
pop
sub
jb
je
mov
int
dec
shl
mov
pop
std
add
or
mov
xchg
and
cld
inc
cmp
lret
shlb
or
aas
dec
subl
jnp
mov
add
aam
pop
stos
ret
lods
mov
adc
dec
in
dec
cmpsl
fidivrl
mov
cmpsl
cmp
fnstsw
xchg
test
and
outsl
ja
pop
arpl
shlb
dec
or
add
jg
sahf
dec
sbb
xchg
sub
push
ljmp
fistps
jecxz
cmpsb
sub
out
scas
jg
xchg
inc
jge
push
mov
lea
pop
enter
std
mov
lret
xor
fnsave
push
dec
cmpsb
or
sbb
xchg
movsb
sbb
gs
push
xchg
add
mov
es
add
dec
repnz
addb
sbb
jns
mov
xchg
cltd
push
mov
mov
scas
pop
fdivp
dec
and
mov
dec
push
mov
mov
sub
ret
mov
jne
mov
out
mov
jmp
inc
jl
xorl
out
arpl
js
xchg
or
add
cmp
outsl
and
sub
jb
mov
sahf
cmp
call
insl
xchg
dec
pop
lods
pop
inc
pop
pushf
inc
mov
jae
es
and
sbb
insl
adc
push
pushf
mov
in
xchg
and
mov
sub
imul
inc
push
jbe
fcoms
mov
icebp
iret
push
mov
jp
pop
out
shl
mov
ljmp
or
stos
iret
jge
and
das
jo
fdivr
jne
mov
pop
and
xchg
jl
lods
shlb
test
repnz
call
movsb
adc
pop
push
lock
mov
and
jge
fidivs
in
mov
inc
jo
jno
sbb
jl
add
push
pop
inc
xchg
xor
in
out
scas
mov
out
fisubrl
push
gs
inc
je
push
in
adc
enter
daa
fisubl
inc
loope
or
cmp
leave
mov
and
xchg
movsl
mov
or
mov
ret
ficoms
int3
lret
sbb
scas
gs
nop
insl
xor
and
pop
mov
mov
outsl
xlat
pop
dec
dec
scas
push
xchg
or
fadd
test
sahf
mov
outsb
loopne
repz
mov
ljmp
test
mov
pop
push
and
xor
push
dec
pop
hlt
int
push
sub
push
sbb
inc
aad
lcall
cld
mov
negl
iret
pop
or
jle
sbb
cwtl
decl
push
inc
shll
loope
fs
dec
test
cmp
mov
or
mov
and
xor
or
into
xor
imul
mov
outsl
cli
xchg
imul
insb
push
inc
jle
jmp
xor
mov
mov
dec
in
pusha
xchg
cs
jl
cmpsb
dec
mov
or
ret
aas
lcall
inc
inc
fstps
and
mov
xor
repnz
xchg
add
inc
sbb
mov
xlat
cmp
sub
loope
adc
xchg
sbb
mov
aad
or
dec
mov
jl
dec
inc
add
je
sbb
jno
push
sub
mov
push
inc
mov
andl
outsb
aaa
pop
fnstcw
inc
sarb
inc
aas
test
aas
cmpsb
sub
jb
pop
mov
pop
shll
fcomi
enter
icebp
icebp
cwtl
ficoml
sbb
lret
test
mov
push
or
sahf
lcall
aas
fadds
mov
jle
lock
mov
cli
mov
add
cmp
shll
insl
add
mov
cmpsl
fnstenv
mov
mov
rdmsr
mov
mov
int
cmp
pop
addb
cltd
lret
aaa
aad
jno
loopne
xchg
movsl
push
push
or
ffree
ss
clc
jns
notb
aas
push
ja
add
pop
pushf
sbb
push
xchg
mov
mov
mov
outsb
add
sbb
inc
push
and
mov
dec
out
sbb
mov
test
ja
push
or
inc
imul
fwait
out
popa
push
bound
add
es
ljmp
nop
xor
dec
jns
movsb
mov
ficoml
xchg
call
leave
inc
mov
imul
xor
push
mov
mov
fwait
lods
dec
cmpsb
loopne
jne
sbb
mov
jecxz
out
imul
jmp
or
fbld
sub
mov
fwait
popf
jp
rcrl
movsb
or
insb
push
push
jnp
js
fidivs
in
inc
xchg
pusha
xchg
fcmovnb
fildll
nop
xchg
pop
xor
pop
jns
mov
xchg
test
xchg
push
out
mov
mov
xor
ja
push
sbb
frstor
imul
scas
or
dec
push
mov
pushf
sbb
ret
xchg
leave
jle
test
outsb
cmp
inc
lods
sub
or
es
add
lret
add
mov
mov
lods
pop
shrb
loop
add
sbb
dec
mov
and
mov
lds
push
faddl
xchg
jge
pushf
ret
sti
mov
or
and
sbb
dec
negl
push
aas
adc
xor
dec
movsl
test
mov
pusha
test
and
mov
in
clc
ud0
fisttpll
daa
fstps
loope
jae,pn
push
idivb
loopne
sub
inc
pop
movsl
mov
mov
rclb
das
pop
sbb
inc
add
inc
divb
outsb
sub
mov
mov
flds
sbb
push
pop
pop
mov
push
adc
fdivl
and
lea
dec
outsb
inc
enter
nop
xor
jnp
jo
movsl
xor
mov
mov
repz
pop
dec
popf
mov
sub
or
movsb
lcall
push
mov
and
and
sahf
xor
test
mov
cs
and
stc
xor
cmp
inc
ss
shrl
mov
idivl
cwtl
lret
adc
pusha
fistl
das
jmp
or
fsubrs
pop
add
push
xor
pop
loope
fldcw
je
adc
rclb
shrl
inc
lcall
ror
lahf
mov
or
mov
jb
mov
lret
mov
sti
sub
out
add
pop
loopne
mov
iret
adc
xor
fsts
add
xchg
jae
sbb
xor
jp
mov
adc
dec
addr16
cmp
inc
jmp
call
mov
nop
rclb
call
inc
push
dec
push
dec
mov
icebp
test
addb
sub
mov
jecxz
icebp
mov
or
mov
pop
fldt
jecxz
jl
lds
and
pop
xor
inc
sub
lret
out
movsb
mov
jecxz
pop
roll
cmp
iret
add
xchg
add
mov
mov
and
jne
iret
cld
cltd
xchg
mov
scas
rcr
mov
jbe
mov
push
ret
lret
lods
das
jno
lea
icebp
fstpt
add
inc
es
and
in
daa
decl
ret
fsubrs
mov
aad
outsl
lods
xchg
xchg
mov
fdiv
sti
and
movsl
out
pop
mov
cmc
jno
add
test
jl
inc
mov
add
sbb
ja
in
add
clc
mov
sub
ljmp
mov
stos
test
sbb
je
inc
xchg
rcrb
push
aad
mov
jne
inc
or
fs
and
pop
xchg
sub
fcoml
test
icebp
inc
xchg
scas
pop
sbb
jnp
fsubrl
add
push
add
inc
cli
add
sub
or
push
xor
fsubrl
jns
and
push
xchg
aaa
movsb
xor
cltd
cmp
pop
and
push
fcmove
es
or
js
inc
imul
mov
mov
mov
mov
out
dec
test
bound
mov
jmp
fcoms
orl
in
sub
mov
xor
ret
and
jp
jnp
pop
outsb
jle
push
in
in
push
sti
pusha
sub
leave
fisttps
cmp
pop
mov
mov
lahf
pop
sub
inc
ss
test
fcmovu
mov
sbb
or
into
xor
imul
scas
insl
jb
push
add
insl
adc
sbb
ret
mov
hlt
mov
cmc
rolb
inc
cmp
push
subb
add
loope
int3
jbe
push
pop
add
xor
int
hlt
lds
sub
adc
arpl
hlt
lods
push
cmp
outsb
insb
movsb
sub
lret
popa
and
sub
lahf
jge
pop
cmpsl
sbb
xor
aaa
push
hlt
or
mov
jno
push
je
das
das
mov
push
and
stc
xor
mov
lahf
or
inc
adc
test
jmp
out
xchg
stc
dec
cmpsb
pop
andl
fistpll
inc
daa
fcoms
push
loope
jne
sub
addr16
cmp
loopne
movsl
ret
pushf
and
outsb
hlt
lahf
mov
mov
mov
call
xor
pusha
and
inc
cmp
push
xor
pop
lret
push
push
inc
push
test
test
jl
cmp
imul
push
dec
imul
jae
sbb
and
in
push
push
and
add
push
sub
jae
inc
sbbb
ljmp
push
mov
sbb
je
test
adc
pop
leave
mov
and
sub
mov
pop
loop
ss
fadds
pop
xlat
idivl
push
fmul
sbbb
aaa
xchg
sub
mov
mov
cli
inc
cmc
push
data16
pop
fildll
outsl
mov
outsl
subb
les
add
pop
push
and
mov
out
out
nop
fcmovnu
hlt
mov
ss
sti
ficoml
gs
mul
stc
dec
push
pop
sbb
in
fxch
js
les
ljmp
repz
cmp
adc
mov
test
jp
aad
out
pusha
jmp
or
cs
cmpb
daa
inc
mov
dec
jl
mov
arpl
dec
xor
je
sbb
sbb
xor
decb
call
aas
xchg
dec
pop
stos
sub
fmuls
fistpl
mov
inc
into
insl
xchg
inc
jne
jbe
in
and
cli
push
mov
outsb
fcompl
shl
push
testb
std
jbe
push
cwtl
push
xchg
mov
es
dec
hlt
cmp
les
lret
sbb
xor
push
test
das
push
divb
sub
mov
or
pop
jle
flds
insl
rol
icebp
dec
gs
cmpsl
xlat
arpl
popa
in
xchg
lods
icebp
sbb
sti
mov
mov
rorb
shlb
cmpsl
out
cmp
hlt
test
push
mov
adc
pop
xchg
jmp
xchg
dec
shrl
xchg
scas
stos
jae
add
xlat
jne
xchg
sbb
sysenter
movsb
pop
add
inc
pop
xor
movsl
jg
xor
dec
cmp
test
out
xchg
xchg
sbb
adc
or
xor
fwait
inc
xchg
into
push
test
inc
add
pop
push
stos
ljmp
cmc
lock
dec
jno
lock
xchg
xchg
xchg
xlat
mov
push
cmc
mov
fistpll
ja
test
mov
cmp
mov
xor
dec
insb
pusha
loop
ljmp
out
daa
mov
add
ret
cmpsl
sbbl
repz
mov
in
aaa
dec
sarb
xchg
xor
shrb
fldcw
sarb
jle
jle
and
in
cld
fcmovu
cmpsl
loop
xchg
lds
pop
out
or
shlb
mov
outsl
popf
std
inc
mov
test
jbe
stos
mov
sbb
pop
imul
scas
rorb
adc
adc
nop
mov
ret
pop
leave
insb
adc
pop
arpl
inc
les
shl
or
sbb
and
pop
out
add
or
lock
pop
xor
dec
lds
pop
mov
mov
inc
sarl
xchg
mov
push
jp
jbe,pt
clc
into
jge
xchg
scas
push
aaa
sub
jbe
cmp
push
jl
cmp
aad
cmp
add
nop
les
pop
nop
scas
aas
into
mov
test
mov
mov
cmpsb
lcall
enter
daa
xlat
adc
cmp
push
or
mul
movsb
sub
inc
loop
jne,pt
ds
out
das
movsl
lret
and
or
push
lcall
add
scas
popa
xor
adc
daa
arpl
out
aad
or
cmp
pop
inc
pop
push
rcr
xor
sub
shrl
call
shlb
aam
arpl
jbe
xchg
and
mov
popf
jo
mov
push
and
into
pushw
push
rcll
clc
aas
pop
mov
fwait
sbb
loop
in
mov
fistps
pop
jne
sahf
jns
xor
jmp
mov
mov
cmp
ss
cmp
fdivrs
mov
jne
clc
xor
imul
test
loope
adc
xchg
fnstsw
cmc
int
outsb
xor
or
loop
sbb
outsb
adc
cltd
ljmp
adc
lods
mov
mov
scas
cli
push
stc
xchg
mov
mov
sbb
xor
addl
icebp
int
aaa
inc
inc
adc
movsb
mov
sub
xchg
dec
shr
sbb
cmp
or
clc
fstpl
shll
rcrl
hlt
icebp
adcb
aad
jb
nop
mov
pop
dec
fildl
pop
dec
test
stos
je
popf
lods
jecxz
jmp
cli
lea
gs
mov
add
push
pop
cmp
js
ret
inc
push
sbb
adc
xorl
jb
cmp
mov
stc
fnstcw
and
add
std
sbb
pushf
push
mov
jns
mov
sbb
in
out
cmp
lret
mov
mov
stos
cwtl
pop
das
das
daa
jo
mov
cmp
aam
or
es
fldcw
mov
pushf
aad
and
popa
add
mov
push
adc
and
dec
rolb
lds
xchg
popf
outsl
mov
adc
push
sahf
mov
mov
xchg
sub
pop
ljmp
test
and
cmc
pop
out
cmp
push
push
pop
and
add
fstl
mov
push
sbbb
lahf
das
shrl
dec
jl
push
ja
cs
pop
or
adc
jae
mov
dec
ret
and
ja
lods
decl
dec
xor
sarl
sbb
jnp
push
xchg
aad
lods
mov
lret
out
push
pop
lcall
dec
out
into
test
mov
dec
and
dec
dec
mov
mov
test
push
in
bound
shr
cld
cmp
pop
subl
sub
mov
sbb
out
cmc
jp
or
insb
push
pop
out
loope
in
inc
jmp
mov
bound
movsl
ffreep
in
ja
cwtl
out
rcrb
ja
inc
mov
xchg
jae
jne
push
das
mov
popf
and
leave
mov
cwtl
data16
stos
adc
sub
mov
ds
scas
xor
xchg
adc
cmpsl
pop
iret
mov
add
leave
fcmove
jecxz
add
dec
cmp
mov
mov
pop
or
xchg
adc
fidivl
push
inc
int3
dec
inc
daa
pop
pop
ds
adc
lret
js
mov
lcall
movsb
fsubrs
push
leave
loope
jbe
mov
icebp
rolb
imul
or
jb
movhps
test
bound
call
pusha
je
pop
pop
sbb
and
shrb
shrb
mov
loopne
sbb
mov
enter
daa
xchg
cmpb
cmc
pop
loope
jo
sub
out
sub
in
mov
movsl
roll
pop
lahf
out
xlat
or
xchg
lcall
popa
movsb
xor
mov
es
dec
push
js
inc
mov
dec
ja
push
in
cmp
fdivl
sbb
pop
or
outsb
insb
mov
adc
or
fimull
movsb
cmp
sti
mov
outsb
and
sbb
push
and
sub
bound
add
inc
jbe
sarl
mov
jno
sbb
add
test
pusha
xchg
push
dec
mov
mov
mov
adc
test
cmp
ja
test
mov
push
lret
push
xor
push
iret
or
mov
push
outsl
jbe
into
loop
dec
imul
sbbb
hlt
sbb
pop
adc
sub
shlb
inc
lret
je
cld
in
or
sar
cmp
pop
out
repz
pop
push
sarl
cmpb
fnstcw
jae
les
lods
mov
sbb
ja
insb
xlat
aaa
adc
adc
inc
rcrl
mov
add
mov
push
nop
arpl
rorb
push
addb
inc
dec
pop
jb
je
jno
jecxz
and
ss
int3
jno
call
cmp
mov
dec
inc
pop
mov
pop
gs
aam
stos
clc
jno
and
jb
lods
and
and
sub
shll
fwait
not
cmp
ja
movb
sbb
add
fnstsw
sbb
and
sti
push
xchg
sub
push
popf
add
push
pop
mov
sub
popa
mov
data16
ret
ja
andl
mov
addr16
cmpsl
aad
adc
sbb
in
mov
inc
lea
and
jbe
push
sahf
jg
cmpsb
cmp
popf
stc
xchg
mov
std
addr16
popa
aaa
sahf
frstor
stc
clc
gs
xchg
addr16
fucomi
or
adc
icebp
mov
stos
push
xchg
and
popf
mov
cmpsl
jl
push
cli
and
repnz
scas
add
sbb
xor
and
mov
push
fwait
push
dec
push
das
dec
test
lea
jge
add
inc
lds
lods
or
les
push
out
jge
add
xchg
add
jmp
ror
ss
in
cmc
pop
xchg
and
mov
mov
push
xchg
pop
mov
out
mov
xor
in
mov
dec
dec
xor
sub
in
stos
clc
jmp
cmp
sub
lahf
pusha
insl
sub
stos
sub
xor
ss
and
fcmovnb
insb
ret
jnp
or
movsl
in
shl
pusha
std
insl
fcomp
in
push
xchg
imul
inc
shlb
xchg
jae
push
repnz
push
popf
dec
lds
xchg
rdpmc
push
xlat
stos
mov
xchg
shll
sbb
in
jp
sub
pop
mov
fnstenv
adc
shl
iret
jmp
int3
xor
pop
mov
or
xor
dec
call
push
std
ds
imul
dec
pop
mov
lahf
lds
addb
cmp
mov
cmp
shll
mov
jge
lcall
and
add
or
add
jno
cs
jl
cmpsl
dec
dec
mov
xor
lret
xchg
mov
inc
scas
std
aaa
lret
and
push
sbb
dec
imul
cmpsb
mov
or
daa
aad
enter
mov
movsw
ds
add
les
lahf
or
into
sbb
mov
and
xor
pop
push
pop
jne
jge
add
jg
xchg
push
mov
sbb
mov
adc
out
mov
and
xorb
sub
and
testb
repz
cmp
sub
xor
lcall
icebp
mov
or
rcrb
and
sbbb
jns
cmp
pop
mov
push
lods
stc
adc
mov
adc
arpl
add
xor
divl
in
lret
cmp
mov
mov
or
popf
or
mov
shll
imul
outsl
push
jbe
loop
adc
imul
sarb
lods
outsb
lods
aad
sub
adc
mov
xor
je
mov
ja
pop
sti
out
stos
jnp
mov
loopne
jbe
pop
jne
out
adc
mov
jo
cmp
lds
add
fbstp
or
mov
movsb
xlat
jbe
xchg
sub
in
jg
aas
pushf
call
adc
dec
adc
nop
jno,pt
dec
cltd
sub
pop
dec
xchg
out
je
lcall
cmp
lea
fmul
call
mov
les
dec
sub
fwait
mov
inc
arpl
dec
aas
rcll
pop
push
stos
mov
psrlw
sarl
jge
std
imul
addl
or
rorl
mov
inc
xor
mov
cltd
lock
mov
das
in
xchg
jp
imul
aam
pop
lods
ret
push
rolb
bound
dec
mov
and
xor
cltd
lods
xor
mov
icebp
mov
pop
test
mov
sbb
hlt
jns
ficomps
test
pop
mov
cs
push
and
lods
fisttpll
adc
xchg
cmpsb
dec
dec
ljmp
mov
stos
inc
repz
add
mov
push
aad
les
push
movsb
xor
shll
xchg
not
xor
popa
adc
pop
sub
adc
push
aas
pop
xchg
hlt
sbb
rorb
test
dec
jl
shrl
insb
add
lods
xchg
std
decl
jbe
jns
sub
xchg
outsl
cld
xchg
jae
cmpsb
mov
lar
adc
ja
rolb
mov
imul
mov
push
int
adc
lods
jno
cwtl
scas
shr
les
bound
lcall
add
rolb
and
or
mov
and
pop
jmp
push
jnp
jnp
jle
dec
leave
in
jo
pusha
cwtl
les
add
fistl
mov
inc
lret
jp
jae
mov
push
mov
repnz
jb
fidivrl
push
shl
stos
sti
mov
xchg
sub
add
repnz
scas
stc
mov
push
and
es
dec
fwait
cmpps
sub
in
mov
inc
mov
xchg
push
jl
mov
add
mov
and
pop
mov
jle
lds
push
or
inc
jnp
cmp
and
push
addr16
jbe
or
jge
adc
aaa
inc
lret
or
cmp
jno
imul
lds
dec
mov
xor
jns
add
nop
into
popa
test
pop
lea
sti
mov
in
jnp
xor
les
daa
aam
lcall
cli
pop
sub
dec
add
andb
outsb
lahf
sub
push
sbb
mov
shll
test
pop
pushf
and
js
mov
sbb
push
rclb
sbb
cmp
rep
xor
adc
ret
popl
movups
cwtl
fcomip
and
in
push
pop
cmp
dec
scas
addr16
cmp
jns
test
xchg
adc
scas
cs
bound
test
mov
jg
cli
into
mov
and
stc
enter
push
lods
adc
cmpsb
sub
cmp
in
xchg
cld
divl
jl
xor
mov
mov
xchg
adc
and
pop
xor
add
outsl
xor
es
pop
xor
out
or
push
test
adc
mov
lods
push
fidivs
mov
cmpsl
xchg
mov
ret
mov
in
loop
cs
xchg
cmp
sahf
inc
loope
add
loopne
push
sbb
testl
sarb
repz
das
push
xchg
ret
mov
cmp
xchg
mov
jmp
mov
add
repz
inc
pop
cs
cmpl
clc
or
inc
scas
push
rorb
add
mov
dec
jecxz
pop
loop
cmp
sub
dec
or
pop
pop
jbe
rolb
push
pop
fistl
pop
stos
lahf
inc
ljmp
aas
pusha
push
cmpl
push
xorl
cwtl
cmp
or
jmp
icebp
test
mov
jo
ret
lret
fldenv
sbb
lahf
scas
push
mov
pop
imul
int3
shll
sub
cltd
xchg
aam
sbbl
in
adc
push
mov
ret
cmpsl
shll
mov
dec
push
jns
popf
pop
pop
mov
xchg
and
lods
pop
ret
inc
or
jl
mov
adc
lods
je
pusha
mov
or
scas
popa
aas
clc
fcmovnbe
jbe
in
fwait
ljmp
lcall
mov
out
arpl
xchg
xor
push
aas
cmpxchg
loopne
aam
mov
or
xor
repnz
pop
sub
aam
xchg
test
test
xchg
mov
subl
repz
or
movsb
mov
add
jb
xor
xor
enter
daa
xchg
xor
addr16
inc
js
sbb
lods
xchg
ret
mov
fistps
pop
lret
loopne
ja
pushf
jmp
enter
inc
pop
mov
xchg
nop
sbb
clc
iret
mov
mov
out
mov
divb
xchg
iret
mov
lods
out
mov
or
out
jp
test
and
sbb
cwtl
cmp
jle
lock
in
jb
pusha
xor
cmp
and
int3
xchg
adc
pop
ret
addr16
roll
xor
sbb
js
in
popf
cltd
aad
mov
push
dec
test
outsb
popa
in
xchg
xorl
add
or
push
xor
addr16
insb
outsb
leave
dec
jmp
hlt
xor
arpl
into
inc
mov
jecxz
or
dec
inc
sti
xor
iret
outsl
add
stc
mov
int3
or
mov
fdivrp
fstl
sub
add
repnz
jo
cmp
or
ffreep
js
mov
inc
jbe
cmc
mov
sbb
xor
or
mov
int3
sarl
dec
xchg
negb
xor
push
and
and
test
loop
jecxz
pop
out
cmpsb
cmpsb
pop
in
bound
enter
daa
shrl
in
scas
sbb
push
cmc
movsl
sub
out
jg
cli
addr16
scas
push
movsl
out
test
lahf
dec
push
adc
lret
mov
stos
add
outsl
loopne
dec
mov
dec
jecxz
pop
ret
xlat
jmp
jns
xchg
pop
add
sbb
cmp
jae
fldt
daa
aam
outsb
xchg
fcoml
fldenv
adc
fbstp
pusha
sbb
testb
lcall
pop
cmc
or
pop
mov
sub
mov
dec
lcall
loope
call
dec
inc
sahf
add
ret
push
mov
gs
es
stc
jg
das
fs
arpl
ljmp
cmp
test
out
div
jae
lret
pop
xor
push
cmp
xchg
jecxz
int
imul
lods
xor
inc
xor
loop
fldt
fstpl
in
adc
cmp
add
jle
lods
cmp
stos
mov
leave
pop
out
push
leave
cli
fidivl
mov
dec
add
sti
inc
iret
inc
pop
sti
gs
push
loopne
dec
aaa
pop
mov
dec
adc
sbb
fidivrs
cmp
xchg
pop
cld
ficompl
sub
sbb
sub
out
adc
adc
cmpb
push
in
aad
pop
mov
hlt
sbb
push
ljmp
test
mov
aas
push
rorb
lds
mov
mov
pop
testb
or
fildl
imul
inc
cld
and
aas
incl
fidivrl
and
rcrl
negb
sbb
cwtl
idivl
push
icebp
jg
mov
lret
dec
mov
mov
mov
das
stos
adc
sub
incb
push
and
fisubl
inc
jge
popa
pop
loopne
lods
or
cmpl
mov
or
inc
adc
pop
pop
sahf
cmp
dec
sub
cltd
dec
adc
mov
pop
popa
push
stos
pop
jmp
clc
push
cs
ljmp
jmp
dec
ss
push
add
xchg
jl
rcll
inc
packsswb
sbbb
mov
pusha
sahf
pop
dec
cmp
jns
cli
das
mov
inc
mov
jnp
pop
shr
fwait
das
loope
push
xlat
gs
repz
jle
jecxz
cltd
inc
xor
popf
cmpsl
pusha
pop
xchg
adc
mov
mov
xchg
ja
push
in
movsb
dec
mov
cmp
mov
add
sub
int
jne
aad
mov
and
push
bound
push
cld
xchg
lcall
out
iret
add
pushf
xor
xor
hlt
out
lds
inc
jno
insb
add
jnp
mov
mov
or
add
into
lods
enter
rclb
cli
shl
inc
loope
inc
jae
add
jb
shlb
push
xchg
dec
cmp
fcom
lods
sbb
jmp
jnp
mov
and
add
push
pop
sub
dec
or
hlt
jnp
mov
fstl
inc
shll
mov
fsubrs
xchg
inc
inc
jp
aam
subb
nop
in
int3
clc
pop
sbb
ficomps
sub
mov
out
xchg
cmp
fstp
movsb
push
push
add
push
dec
jge
jecxz
sbb
push
aaa
in
adc
jno
push
int
xor
push
je
dec
xor
lds
ss
lcall
test
lods
pop
xchg
inc
in
adc
cmpsb
sub
in
dec
bound
enter
daa
sarb
jmp
sub
in
mov
ds
lahf
movsl
in
daa
scas
and
sub
push
mov
jo
add
jno
xor
xchg
loopne
or
pop
pop
ljmp
pop
inc
in
push
xchg
dec
push
mov
push
ljmp
clc
xor
xor
js
std
ds
ljmp
adc
mov
stos
jo
xchg
push
bound
sub
add
cmp
lcall
leave
mov
fsubs
test
jb
mov
add
push
scas
lret
mov
pop
icebp
stc
ss
fs
icebp
ja
cmp
add
sub
cmpb
test
divl
in
xor
pop
cmp
inc
dec
or
gs
dec
enter
pop
add
jl
mov
loop
mov
in
mov
add
add
andl
jl
lods
and
lods
mov
jg
out
xorb
rorb
xchg
sti
hlt
es
in
and
bsr
fwait
push
movsb
pop
shrb
sbb
into
jbe
fsts
xchg
jmp
xchg
sbb
mov
cmp
xor
xor
or
fwait
push
fcoms
test
pushf
jmp
clc
iret
jno,pn
out
aad
inc
xlat
nop
iret
mov
dec
mov
imul
pop
fnstenv
dec
jecxz
test
ret
jae
call
cmp
xlat
pop
fsubrl
rorl
push
ss
inc
clc
data16
pop
lods
jge
sahf
popf
cmpsl
jb
and
test
xchg
shrl
pop
std
pusha
data16
mov
adc
sarl
icebp
push
popa
sub
pop
out
lret
mov
rorl
sbb
lock
out
mov
mov
mov
out
xchg
int
ret
mov
std
es
insb
insl
cmp
pop
mov
jp
dec
popa
jbe
inc
lods
jae
xchg
int
lds
loop
dec
pop
jp
not
and
cltd
orl
mov
pop
dec
push
insl
cmpsb
js
std
js
push
sbb
ljmp
hlt
pop
hlt
rclb
or
push
push
xchg
ret
sbb
jge
outsb
enter
pop
xchg
stc
imul
mov
arpl
in
test
lret
mov
sbb
sbbl
fwait
pop
mov
stc
add
dec
jl
gs
aaa
jns
lcall
pusha
adc
cwtl
mov
inc
mov
adc
pushf
dec
scas
dec
jae
lods
fcompl
mov
jae
ljmp
adcb
sbb
jmp
gs
xorl
out
xchg
xchg
mov
lock
lods
jp
jmp
and
insb
outsb
sbb
add
push
xchg
adc
sbb
pop
fstl
xor
enter
pusha
push
stos
mov
out
mov
push
rcl
mov
das
fwait
cmc
sbb
cmp
imul
in
and
mov
cmp
inc
pop
ret
inc
leave
ss
add
jl
arpl
add
stos
add
sbb
pop
push
stc
cmp
fidivl
arpl
jecxz
out
pop
dec
shrl
fiadds
ljmp
sbb
mov
cmp
in
cmp
add
movsb
cmc
or
push
push
leave
mov
sub
sbb
jmp
sbb
lret
sbb
jno
cli
jl
loopne
dec
outsl
lahf
in
push
push
fcmovbe
xor
and
scas
jns
mov
test
js
dec
inc
jnp
jge
lods
push
inc
in
xor
enter
daa
rcl
cmpsl
cmp
test
adcl
cmp
int3
ds
inc
pushf
movsl
hlt
leave
in
and
xor
mov
add
sahf
inc
sbb
lret
daa
add
repz
mov
into
jbe
pop
adc
sub
pop
orl
push
mov
aad
leave
lock
sub
sbbl
and
push
lods
testb
rorl
mov
inc
mov
or
movb
ljmp
cltd
and
mov
inc
mov
mov
int3
push
sahf
dec
xchg
add
cmp
pop
jo
mov
lock
dec
stc
in
xchg
frstor
push
adc
mov
ret
fcomps
xchg
divl
stos
lret
loope
sbb
cmp
les
into
das
mov
cmc
ja
xorb
repnz
jge
loop
jb
imul
call
in
in
dec
lods
or
test
out
jbe
cli
inc
insb
je
out
inc
in
and
cli
incb
outsl
andb
jnp
ss
pop
icebp
lret
fists
mov
sbb
icebp
inc
jne
cmp
jmp
insb
sbb
sahf
fsubl
sub
insl
out
adc
or
pushf
xchg
mov
jmp
js
cs
dec
aad
into
mov
stos
adc
dec
adc
clc
dec
dec
jb
in
je
sbbl
inc
lcall
mov
insb
fwait
pop
mov
inc
dec
fprem
mov
loope
lods
pop
xchg
clc
pusha
inc
jg
aas
inc
xor
cmp
stc
sarb
cmp
mov
std
pop
xchg
xchg
cwtl
insl
inc
shll
les
jns
icebp
adc
icebp
mov
fbstp
int
movsl
das
imul
and
pop
lock
ret
inc
jp
outsb
in
insl
and
clc
dec
mov
ljmp
int
popa
lea
lods
push
mov
lock
jmp
js
movsl
mov
cltd
pop
sub
cmc
xor
test
mov
mov
cltd
insl
push
xor
and
test
mov
sub
rcll
data16
mov
mov
xchg
or
push
inc
xor
xor
or
xchg
xor
sahf
mov
xchg
mov
or
mov
sbb
mov
fwait
lea
out
sbb
pop
add
scas
add
add
lds
pop
dec
dec
jns
cmp
xchg
scas
jle
mov
or
rcll
imul
ret
dec
mov
mov
aad
loop
dec
dec
mov
xlat
mov
in
pop
out
inc
arpl
jmp
xor
or
cs
sub
xchg
lds
xor
jbe
jae
pusha
insb
fxch
add
fldcw
sbb
pusha
add
adc
cmpb
mov
test
ficoml
not
test
xor
roll
mov
adc
subl
andl
ljmp
scas
test
ret
cmp
sbb
outsl
iret
les
ret
leave
lods
test
hlt
adc
mov
cmc
nop
inc
gs
push
js
push
test
mov
cwtl
test
pop
add
in
add
aaa
dec
sarb
mov
repnz
sbb
ret
dec
jbe
jne
jge
inc
inc
sbb
sarb
mov
mov
dec
ficomps
jbe
lods
jb
jo
ficompl
scas
pop
xchg
test
inc
mov
test
das
pop
in
pop
adc
mov
pop
daa
shrb
cmp
out
cwtl
mov
mov
pop
sub
addb
movsl
sti
iret
aad
lret
fwait
cmp
pop
sbb
mov
jno
xor
outsb
add
dec
mov
sub
pop
ret
push
popf
pop
push
cmp
cmp
je
repz
orb
les
shrb
ret
cld
addr16
adcb
sbb
les
movsb
xor
int
aaa
lds
cmp
pop
cmp
lcall
lods
mov
mov
sahf
out
mov
andb
les
movsb
mov
addl
ss
or
fcomp
or
loop
sbb
xor
dec
arpl
sbb
sbb
adc
xor
push
outsl
mov
mov
imul
loope
add
sub
jo
jnp
icebp
lea
mov
cmpsl
aam
scas
lock
cli
jae
xor
mov
sti
push
and
sub
gs
mov
xchg
adc
flds
inc
nop
repz
xchg
mov
les
mov
std
sub
add
mov
cs
ret
sbb
pop
mov
push
dec
je
test
cwtl
and
into
mov
mov
jno
pop
push
inc
dec
push
cmp
ss
mov
pop
inc
jnp
orl
in
add
scas
sbb
fcmovu
inc
dec
decl
jb
movsb
sarb
xabort
rorl
pop
mulb
daa
std
scas
stos
ds
sub
inc
shrb
sti
adc
lret
xchg
add
mov
push
mov
insb
xor
sub
das
dec
in
cmp
mov
addr16
rcl
mov
icebp
cmpsb
mov
dec
scas
dec
popf
cmpsl
iret
lret
sarl
pop
push
dec
gs
fimuls
or
sbb
enter
cld
cltd
icebp
test
test
add
scas
push
repz
push
clc
scas
call
mov
jmp
push
stos
jmp
test
xchg
push
xchg
push
sbb
pop
cvttps2pi
jno
out
shll
jg
mov
imul
rolb
dec
cmpsl
movsb
inc
dec
lgs
push
xchg
fwait
mov
loope
add
xor
mov
pop
sarl
jmp
xchg
sub
mov
mov
or
repz
dec
xchg
cmp
mov
mov
mov
push
cs
dec
test
jne
add
mov
insl
xor
pop
mov
bound
and
mov
icebp
testb
push
mov
or
mov
mov
mov
insb
inc
push
or
sbb
in
pop
cs
lahf
mov
ret
ret
lahf
rorl
inc
add
pusha
push
test
xor
idivb
sbb
fisttpll
dec
imul
and
adcl
repz
iret
and
or
test
leave
and
outsl
hlt
pop
adc
lods
inc
lret
or
hlt
inc
adc
dec
cli
ficompl
int3
inc
int3
mov
add
lds
jl
pop
orb
xchg
fdiv
fisttps
cmp
bound
add
jbe
xor
sbb
sete
mov
pop
jno
mov
jl
hlt
enter
mov
sbb
inc
jo
pusha
push
scas
aaa
aad
and
cmp
push
push
inc
nop
inc
cltd
cmp
mov
dec
in
mov
push
daa
iret
mov
loope
dec
jns
jg
jp
mov
mov
movsl
add
xlat
and
sbb
xor
sbb
outsl
xchg
xor
sbb
js
mov
pop
add
out
push
xor
push
xchg
mov
jge
jecxz
lock
and
jecxz
cmc
cs
rorb
jmp
pop
xlat
dec
subb
in
mov
rorb
and
imul
sub
insl
cli
lcall
xchg
pop
lea
dec
inc
addr16
mov
pop
aaa
mov
aaa
jge
pop
pop
inc
fs
dec
adc
pushf
sub
cmc
jecxz
cmp
xchg
push
add
lock
lret
inc
xor
dec
in
cmp
inc
push
or
addr16
cmc
add
cmc
cmpsb
outsl
sbb
loop
fnstcw
imul
cltd
jb
repz
lods
fdivs
dec
mov
sbb
out
out
cmp
cmpsb
xor
adc
ret
sti
add
lret
push
mov
and
mov
pop
das
sbb
adc
test
mov
xchg
ljmp
adc
leave
sarb
pmovmskb
sub
mov
mov
les
aad
or
nop
pusha
pop
cmovg
xchg
and
dec
pusha
sbb
je
jo
jecxz
sbb
dec
mulb
lea
fwait
cmp
mov
fstpl
out
roll
scas
ss
aas
dec
mov
push
mov
lea
mov
jb
test
test
xchg
cltd
mov
or
cwtl
jecxz
cmp
stos
and
icebp
jo
inc
cmp
add
mov
mov
sub
jmp
das
daa
mov
xchg
pop
jmp
repz
ret
pusha
outsl
adc
je
fwait
insl
repnz
xor
and
cmpsl
into
stos
jmp
popa
mov
enter
pop
sarl
xchg
mov
mov
xlat
sub
cltd
sub
test
lods
pop
mov
out
push
mov
sub
jb
pop
clc
add
xchg
and
and
xor
mov
pop
cmc
mov
jle
push
rolb
xchg
cwtl
mov
push
testl
aaa
or
sysenter
xor
adc
xchg
dec
xlat
sbb
test
mov
xchg
aad
sbb
enter
mov
or
rol
fwait
jmp
push
push
arpl
add
dec
mov
incl
daa
xor
repz
push
xor
mov
mov
pop
pop
jb
add
push
pop
dec
xchg
xorb
out
mov
aas
movsl
dec
addr16
push
mov
add
incb
fsubl
jae
jmp
push
rolb
xor
cmp
mov
or
adc
and
stos
scas
jnp
and
in
push
sub
cmp
fistpll
aad
pop
jo
inc
or
aam
push
inc
pop
leave
popf
pop
adc
mov
nop
js
stos
lods
sbb
add
sub
imul
and
fcmovu
adc
ss
iret
orb
leave
fwait
and
arpl
xor
lods
push
jbe
enter
push
add
mov
int3
movsb
stos
mov
fisubrs
or
rcl
daa
shlb
mov
xor
cmp
in
push
inc
test
jge
prefetchnta
jl
loopne
call
jno
int3
fdivrs
push
dec
mov
xor
xor
out
scas
push
sub
and
incb
test
fnstenv
addb
out
cmpsb
xor
dec
lods
enter
daa
into
sub
lods
data16
loope
clc
sub
sub
ds
or
bound
add
xchg
push
add
mov
add
shll
pop
mov
lds
mov
hlt
push
js
push
ljmp
sub
jb
outsb
test
hlt
adc
in
and
cmp
xrelease
pop
mov
and
std
inc
push
outsb
push
movsl
sub
mov
xor
xor
mov
add
dec
sahf
xor
pop
test
push
and
xchg
inc
cmp
adc
fs
imul
cmp
push
cmp
dec
ret
add
lret
push
xor
inc
cmp
clc
xor
fsubrs
sbb
int3
sub
call
insl
add
inc
pop
push
imul
sub
lods
mov
pop
loope
lods
jo
cli
fldenv
adc
fs
jno
mov
in
jo
loop
sub
loopne
aas
inc
pop
dec
les
icebp
cld
cmp
adc
xor
cmpsb
sbb
sbb
dec
data16
das
xor
addr16
es
gs
pushf
xchg
ficoms
cs
sbb
cmp
movsb
dec
xor
call
je
in
jecxz
jb
dec
push
jge
sub
xchg
xor
push
jge
mov
pop
dec
lcall
pop
jge
pop
inc
adc
dec
inc
andl
jb
xchg
enter
adc
xchg
call
out
std
cld
orb
arpl
mov
and
cld
jb
out
jae
cmp
sahf
dec
push
lock
loop
lret
dec
stos
sub
push
cmp
out
dec
lods
testl
lret
or
mulb
mov
cld
mov
pop
mov
cmp
pop
notb
rcrl
cmc
test
pop
push
jns
pop
fstpl
xchg
rcll
mov
pop
out
pop
mov
or
out
mov
add
ror
pop
pminsw
enter
mov
mov
outsl
mov
dec
ds
test
dec
faddl
mov
popa
inc
jge
jnp
cmc
and
sbb
push
push
mov
mov
jmp
fldt
xor
cmpl
imul
pushf
push
push
mov
inc
fdivrl
sub
aaa
lods
dec
jp
jnp
or
mov
das
adc
pop
jne
adc
adc
pop
les
mov
xchg
xchg
add
sbb
mov
shrb
cmpl
sub
fistps
and
xlat
fwait
jnp
jmp
jle
mov
pop
pusha
aad
mov
xchg
add
pop
or
into
jmp
push
or
fstpl
insb
jmp
loopne
and
sbb
leave
or
lahf
aad
scas
push
push
adc
inc
adc
add
stos
sub
leave
adc
dec
hlt
repnz
aaa
arpl
dec
sbb
ljmp
fiaddl
out
add
jno
pop
push
inc
scas
fmulp
pop
vxorpd
mov
test
mov
andb
or
rolb
aaa
lahf
xchg
aaa
or
add
leave
dec
sub
fs
jecxz
loop
add
jo
test
int
xchg
out
test
movsb
jg
inc
mov
jmp
mov
ret
mov
push
pop
cmp
pop
js
xor
int3
lahf
ds
and
adc
out
pushf
push
ja
add
mov
sbb
fwait
cmpsl
add
addr16
xor
aam
fimull
sub
fldt
dec
pop
jg
jno
fnsave
push
inc
dec
pusha
fdivl
repz
adc
out
jbe
or
sarb
ret
dec
push
pop
mov
loop
and
enter
jno
mov
pop
mov
jg
mov
pop
ror
cmp
push
adc
xor
addr16
xlat
sub
xor
sbb
xor
mov
ja
stc
leave
cmp
fs
imul
push
ss
jo
sbb
or
jmp
outsb
lcall
je
in
xor
mov
addr16
jae
xchg
xchg
sbb
inc
dec
movsb
outsl
dec
lds
fsts
imulb
mov
jle
add
cld
je
stc
cmp
add
push
cli
or
or
iret
sbb
sti
pop
pop
mov
xchg
add
xor
loopne
stos
xchg
pop
insl
je
adc
push
sub
sub
sbb
xchg
jmp
inc
sbb
mov
adc
outsb
or
sub
aam
aaa
int3
negb
and
cs
ss
fistl
push
lock
xchg
cmpb
xor
cmp
mov
movsb
jecxz
push
add
and
call
mov
lods
pop
pop
repnz
test
pusha
fistpl
xchg
fwait
je
inc
sahf
nop
dec
aas
mov
ficomps
mov
addr16
shll
inc
mov
sub
enter
xchg
cwtl
pop
inc
movzwl
cwtl
mov
outsl
and
popf
ss
loop
push
mov
cmp
mov
sarl
lock
das
in
xor
pop
into
mov
aam
ret
xchg
ret
jle
dec
es
scas
insl
shlb
dec
lahf
mov
jns
or
and
lods
mov
movsb
mov
jl
or
jmp
or
inc
mov
cltd
xchg
dec
jne
add
lods
mov
inc
mov
ffree
sbb
clc
js
leave
xchg
sahf
xchg
sbb
push
adc
adc
mov
mov
or
push
lods
sub
cmovns
mov
pop
add
dec
cli
dec
xor
sbb
xchg
dec
dec
movsl
cmp
adc
sbb
cmp
pusha
sub
dec
and
test
ret
test
cmp
orb
movsb
push
test
jmp
lret
lcall
and
mov
dec
insl
bound
mov
sahf
scas
rorb
mov
mov
imul
bound
jmp
pop
or
cmp
sub
jle
xor
mov
jp
pop
clc
and
imul
mov
out
jle
or
in
imul
sub
rcrb
xchg
xchg
inc
and
jae
push
test
int
sahf
popf
stos
pushf
cmpl
and
arpl
xchg
aas
js
xchg
adc
adc
push
pop
or
cli
iret
inc
faddp
mov
dec
xchg
hlt
cmp
push
scas
inc
rcl
jmp
pop
jp
push
je
cmpsl
fidivl
repnz
jp
inc
pop
xor
sub
shrb
inc
repnz
test
jae
movsb
lods
outsl
add
push
xchg
and
ja
sbb
sbb
mov
bound
dec
lcall
xor
out
sub
sub
jns
add
imul
rorl
pushf
gs
daa
int3
stc
cld
cmp
or
sub
inc
lods
cmp
mov
ds
jb
movsl
pop
rcl
and
adc
and
add
mov
jno
xchg
xor
inc
or
popf
aad
pop
aam
push
pop
mov
and
push
cwtl
push
xor
sub
push
lcall
fst
js
stc
andb
mov
push
xchg
mov
jmp
test
int
mov
sub
pop
pop
xor
aad
inc
lods
jmp
pop
xor
push
int3
out
popa
clc
enter
enter
and
shlb
stos
mov
out
stc
cmpb
adc
mov
iret
cmp
imull
sti
sbb
dec
sysenter
cmp
mov
or
fs
into
sahf
fwait
xor
pop
adc
sahf
nopl
and
loop
cli
push
imul
adc
data16
dec
lods
lea
mov
out
out
add
pop
out
nop
in
cmp
jmp
push
dec
cs
mov
fs
test
cmp
sub
shl
fstps
ret
test
inc
ficoms
sbb
lds
xlat
lods
bound
dec
jae
adc
leave
and
or
ret
inc
push
aad
pop
outsb
nop
icebp
fnstenv
dec
lock
inc
inc
and
je
enter
out
insl
push
retw
lods
shr
and
inc
xor
and
add
in
dec
dec
jo
sbb
ret
or
inc
and
inc
mov
popf
jns
add
mov
repnz
roll
sbb
std
dec
out
cwtl
adc
pop
mov
rol
mov
ficoms
enter
push
sbb
mov
mov
pop
das
les
mov
jl
jle
push
mov
ret
or
cmp
jge
dec
lcall
mov
add
mov
lahf
shl
and
test
pop
xor
sbb
adc
lret
cltd
int
mov
fxch
push
jmp
int
out
fprem
mov
mov
fisttpll
daa
rol
pop
hlt
pop
mul
jbe
cmpsl
iret
daa
out
jnp
fcoms
mov
arpl
insb
mov
es
dec
pushf
mov
jne
fwait
dec
or
push
test
sbbb
fstpl
sbb
inc
stos
insl
dec
or
inc
mov
push
dec
xor
add
mov
ret
xchg
div
std
jns
cli
in
andb
cmp
movsb
mov
mov
mov
pusha
cmpb
sarl
or
dec
adc
jne
mov
mov
cmp
fwait
adc
bound
push
std
xchg
daa
imul
out
push
or
jns
mov
jp
xchg
ja
out
cmc
insb
lock
adc
lret
enter
cmp
push
pusha
or
sbb
test
and
inc
cs
xchg
stc
lea
nop
xchg
cmp
shll
mov
rcll
gs
cmp
add
imul
call
adc
dec
iret
lahf
cld
add
or
leave
add
hlt
mov
lcall
sarl
or
loopne
outsb
inc
repz
cwtl
fisubl
mov
int3
gs
pop
fs
ficoms
or
gs
rol
lds
sub
cmp
pop
loop
aaa
mov
push
mov
ret
jge
into
test
jb
cli
aaa
sbb
fsubrp
jno
jecxz
jl
or
test
test
adc
and
and
std
push
push
cmp
inc
cmpsb
mov
pop
push
enter
daa
lret
es
inc
imul
or
push
sub
or
cmp
dec
ds
bound
shl
jmp
push
jle
jae
imul
sar
pusha
adc
pop
sti
sub
push
icebp
pop
pop
std
mov
xchg
jne
fmul
jl
sub
push
nop
adc
jne
sahf
xlat
mov
pop
mov
gs
inc
cmp
out
sub
int
mov
lahf
or
hlt
inc
push
shl
fimuls
mov
sahf
sbb
push
inc
subb
stc
mov
mov
stc
aaa
loop
cmp
mov
cmp
subb
imul
jno
lret
lahf
xor
cltd
movsl
cmp
das
xor
inc
movsb
std
into
cmpl
stc
ljmp
call
xchg
imul
jo
lcallw
jno
je
nop
mov
test
out
push
pop
cli
jb
shll
movsl
lds
mov
test
gs
mov
cmp
adc
mov
repz
lea
add
xlat
in
inc
jmp
adc
add
pushf
xchg
jge
jmp
mov
cs
sbb
ret
nop
int3
xlat
mov
jge
inc
pop
lds
je
cmp
jecxz
adc
push
push
out
cmp
jmp
mov
mov
lds
pop
mov
mov
xchg
inc
aam
xchg
aas
not
dec
jb
or
test
and
push
or
aad
or
mov
lods
std
icebp
outsb
lret
cwtl
iret
mov
mov
icebp
aaa
jno
cld
repz
inc
mov
or
lock
hlt
mov
mov
outsl
sub
jae
adc
pop
movsl
je
pushf
mov
cmpb
insl
mov
cmpsl
lret
mov
pop
pop
sub
pop
enter
mov
mov
push
not
shl
sub
add
lds
mov
push
ret
fisttpll
shlb
mov
xchg
ljmp
add
ss
xchg
fsub
out
ficoms
sub
sbb
sysret
cmpsl
add
pop
or
jecxz
xor
shlb
xchg
lea
lock
fdivr
pusha
xchg
mov
aam
inc
lahf
push
or
adc
fwait
cmpsl
pop
xor
out
push
add
mov
cmp
xor
sbb
jae
in
inc
pusha
xchg
mov
mov
pop
pop
adc
dec
push
push
out
lea
fidivrs
sub
fbstp
sbb
mov
and
jp
add
sbb
jmp
repnz
andl
out
cmp
sub
je
sti
sub
mov
and
xor
jnp
loopne
jle
jle
in
cvtpi2ps
jb
fistpll
sahf
ja
jl
rcrb
dec
jb
cmp
movsb
push
push
stos
out
clc
mov
mov
mov
or
jns
bound
in
cmpsb
in
jb
or
out
push
cmp
sbb
cmp
jecxz
scas
leave
ja
daa
hlt
rcl
arpl
popf
dec
inc
flds
or
pop
push
jbe
jb
jne
sbb
fs
push
mov
push
fidivs
les
loope
popa
mov
jle
daa
cmp
cli
or
xor
ret
enter
repz
aaa
fdivrl
adc
mov
mov
cwtl
push
mov
in
jo
sub
scas
xchg
fwait
jmp
dec
fsubs
out
add
push
add
sbb
in
cmpl
daa
lret
cmp
loope,pt
sbb
cmp
push
push
ds
bound
and
bound
sbb
mov
push
mov
clc
inc
and
nop
pop
and
pop
js
xor
cmp
sbb
ss
mov
inc
mov
push
mov
mov
push
jecxz
ss
incb
cmc
jecxz
mov
hlt
and
inc
xor
int
dec
cmc
sub
dec
push
pop
xor
mov
mov
push
daa
sahf
shlb
out
jo
orb
jg
sbb
stc
out
lods
mov
lds
imul
repz
cmp
cmp
ret
and
lret
mov
cmp
jl
or
stos
cmc
call
fisubrl
ljmp
imul
das
data16
mov
incb
mov
inc
mov
adc
sti
insb
je
cld
xor
gs
xlat
loopne
imul
adc
jmp
les
pop
je
loop
add
mov
push
cmp
mov
adc
add
jmp
test
push
nop
cmpsl
jmp
jns
insl
popf
sub
cmp
jecxz
jp
pop
dec
rorl
sbb
pop
je
mov
inc
iret
stc
fldt
xchg
cs
or
push
xor
call
jb
in
into
mov
or
jbe
hlt
sbb
std
cwtl
fistpl
mov
hlt
jns
imul
or
das
aas
jmp
jge
stos
mov
mov
adc
orb
mov
push
call
ret
sub
add
and
add
mov
cs
lods
lret
and
aad
in
jns
test
push
mov
jb
xchg
sarb
fistpl
mov
iret
xchg
inc
inc
fnsave
dec
sbb
outsl
int
shll
stos
pop
dec
mov
out
inc
or
pop
jne
ds
pcmpgtd
mov
xor
stos
cltd
mov
jnp
push
dec
ficompl
roll
xor
lods
or
mov
fwait
cmp
push
xchg
xchg
sbb
sbb
pop
mov
mov
lret
in
pop
mov
in
xchg
sbb
ja
out
movsl
dec
inc
fidivrs
fs
mov
jmp
sbb
sahf
xor
int3
out
mov
sbb
out
pop
fsubs
faddl
ds
mov
sbb
sub
outsl
sbbl
and
ljmp
bnd
mov
aam
dec
clc
fisubl
movsl
sbb
fsubrl
dec
aas
lock
jmp
pop
xorb
mov
popf
pop
xchg
std
mov
lret
test
stos
in
insl
ljmp
cwtl
inc
imul
scas
cmp
sub
cli
add
ret
mov
hlt
push
mov
addr16
fsubrl
and
dec
xlat
inc
icebp
in
sub
int
sbb
fbld
int3
cmp
and
repnz
pop
push
das
lds
or
cld
xchg
fnstsw
shll
cmp
ss
push
int3
or
insb
cmpsl
lds
call
iret
cld
or
xor
jl
adc
outsl
mov
jmp
clc
sub
jno
jmp
loope
cmp
shr
lods
inc
rep
push
cmpsb
les
je
push
cmp
leave
or
cmp
shrb
loop
rcrb
ja,pt
pushf
movsl
sub
je
or
jbe
and
xor
xlat
lods
xor
inc
xor
mov
pop
dec
sarl
or
push
imul
sub
ret
ds
lahf
mov
shrb
test
sbbb
fnstenv
popf
and
jge
mov
or
and
arpl
and
in
mov
hlt
xor
out
jne
sahf
arpl
xchg
arpl
jno
lods
sbb
imul
add
xchg
lret
fdiv
cmpsb
or
push
pop
lret
popf
xor
sbb
or
outsl
mov
inc
arpl
cmc
scas
xor
outsl
leave
dec
cmpsl
loop
out
pushf
imul
pause
add
lods
inc
lret
sub
in
call
cli
fsubs
mov
jnp
out
sbb
dec
gs
jb
loopne
sub
pop
xor
cmp
or
add
call
repz
out
xchg
negl
sbb
dec
cmp
out
push
lret
adcb
in
pusha
jmp
cs
daa
jbe
push
sub
dec
or
test
nop
je
adc
xchg
pop
ljmp
xchg
pop
mov
mov
negb
imul
xor
mov
pop
test
inc
mov
add
adc
inc
jb
add
and
sub
divb
int3
cmp
aas
sub
cwtl
inc
adcb
dec
ljmp
add
sahf
ja
mov
pop
mov
rolb
movsl
icebp
and
popa
ja
mov
popa
fwait
outsl
aam
adc
mov
test
insl
pop
mov
dec
mov
cmpsl
enter
inc
das
lcall
orl
mov
mov
inc
mov
xchg
cmc
push
rorb
cmpsl
js
sub
mov
xor
push
dec
mov
mov
fs
cli
xchg
lcall
ror
jo
pop
negl
inc
out
movsb
lock
push
sbb
lds
add
pop
cli
xor
fdiv
mov
jle
sbb
inc
xor
test
test
xchg
inc
xor
inc
jo
lret
sub
add
mov
add
icebp
lahf
mov
xor
sar
adcl
xchg
daa
pop
sbb
or
cmp
and
dec
cmp
js
cmp
inc
mov
pop
mov
lcall
es
out
cmp
bound
imul
pop
cld
xchg
mov
jle
jmp
inc
pop
lret
inc
or
push
addr16
das
jp
arpl
insb
xor
mov
jle
lds
push
inc
cltd
pusha
fsubr
pushf
fistpll
rcll
and
jae
cmpl
inc
pop
sub
push
or
mov
sbb
pop
cmpsb
imul
scas
popf
pop
rcll
and
mov
arpl
leave
gs
in
imul
lahf
inc
filds
xchg
rolb
jo
mov
addb
add
xchg
int3
es
icebp
dec
std
fdivrp
loope
int3
rclb
call
repnz
icebp
cmp
outsb
movsb
fdivs
push
sbb
xchg
adc
sbb
push
test
cmp
out
push
std
jo
push
movsb
out
xor
push
cmp
mov
je
inc
test
fwait
xlat
sahf
inc
addb
in
dec
addr16
enter
daa
enter
ffreep
es
pop
dec
sub
pop
sub
jg
xchg
ds
and
xchg
jmp
sbb
lret
pop
add
xchg
out
sub
jl
pop
jo
imul
mov
push
jmp
jb
int3
jo
sub
outsb
pop
ds
push
cmp
hlt
push
add
jecxz
pop
mov
dec
add
sbb
pushw
and
int
jb
sub
xchg
pop
pop
xor
lcall
hlt
mov
push
sbb
lahf
and
cmpb
jg
push
xorb
cmp
clc
adc
js
lret
cmp
mov
mov
lret
ja
cmpsl
push
daa
cmp
xchg
add
into
sub
add
jbe
push
or
xlat
outsl
test
xchg
loop
test
imul
xor
sbb
mov
lods
sub
pushf
out
push
cmp
mov
aas
in
out
je
lret
incb
sub
loopne
notb
adc
sbb
cmp
les
repz
sbb
mov
xchg
xlat
test
in
mov
ljmp
jmp
imul
jb
xchg
xor
push
dec
insb
xchg
push
inc
xchg
jmp
mov
jb
xor
pusha
inc
lea
sti
call
das
pop
fstps
enter
cmp
fisttpl
stos
cmp
inc
stc
inc
and
xchg
dec
jb
dec
fistpll
push
adc
jbe
jp
jnp
out
fistps
cmp
std
mov
mov
cld
je
outsb
lret
or
mov
mov
add
xchg
das
inc
in
mov
pop
mov
arpl
dec
daa
push
or
mov
dec
xchg
sub
pop
cmp
mov
sahf
jbe
sub
and
lock
clc
shlb
push
cltd
test
jbe
mov
aad
push
or
and
clc
lahf
and
ljmp
xchg
pop
mov
mov
out
pop
int3
notl
hlt
sbb
lcall
lahf
mov
inc
pop
jo
and
mov
orl
mov
sbb
pop
leave
inc
pop
or
or
jae
fwait
xor
test
add
or
sar
fwait
rcl
inc
sbb
jns
mov
in
test
jbe
inc
mov
cli
add
mov
dec
sub
add
pop
sbb
popa
dec
pushf
sahf
aas
jne
test
mov
dec
xchg
out
pop
mov
bound
jns
jmp
push
and
or
popf
call
or
int3
addr16
das
add
addr16
and
into
insb
pushf
inc
mov
jle
and
pusha
ja
mov
xchg
cmc
or
push
lods
ds
pop
cwtl
push
jae
cmp
popf
insl
pop
mov
dec
pop
pop
stos
rolb
xchg
xchg
add
sbb
idivl
scas
add
cwtl
push
mov
insl
or
sbb
cmp
sbb
and
hlt
mov
cli
arpl
mov
inc
loop
inc
or
int3
ljmp
xor
int3
adc
pop
and
fisubs
push
pop
shlb
xor
ja
jge
push
mov
mov
push
in
pushf
insb
push
jge
adc
sbb
ret
aaa
sbb
xor
dec
popa
jl
dec
dec
push
xor
insb
pusha
jo
arpl
and
sahf
movsb
test
data16
adc
in
ss
enter
daa
movl
dec
loope
mov
sub
ja
cmp
rcrb
cmp
or
lret
sbb
mov
xor
sbbb
insb
mov
pop
xchg
mov
js
jb
pop
stc
fld
push
sbb
push
dec
jae
fdivl
call
outsb
cmp
pop
adc
loope
gs
push
loop
add
jne
pop
add
push
and
pop
cmc
push
adcl
int
pop
scas
imul
rcll
mov
xchg
dec
dec
sahf
test
or
jg
and
inc
stc
adc
xor
test
sahf
cmpsb
fwait
ss
cs
insb
je
imul
push
dec
lret
js
jle
cmpl
push
cltd
cmc
cmp
and
loop
xchg
xchg
add
add
stos
or
lods
adc
mov
js
out
outsb
sub
ds
call
in
push
pop
sti
jns
sbb
gs
sub
aam
loopne
fcmovnu
pop
daa
jmp
inc
fnstenv
add
pop
cld
and
dec
insl
out
xchg
jge
push
sbb
in
cmp
sub
inc
pushf
inc
xchg
jmp
xchg
subb
fmuls
nop
cmp
xchg
inc
cmpsb
pop
add
cwtl
jge
pop
inc
ret
dec
pop
arpl
adc
mov
jo
fdivl
dec
pop
dec
mov
mov
aam
repnz
cwtl
inc
lds
cmc
aas
jae
in
jb
into
repnz
test
dec
in
idivb
jns
cwtl
mov
test
icebp
xchg
and
cld
lahf
mov
add
movaps
lock
sbb
pop
push
and
sub
push
aam
pop
hlt
ret
fsub
mov
mov
sub
push
add
lods
mov
mov
jae
cmc
lods
or
jbe
add
xor
mov
ffreep
pop
iret
add
xor
push
test
and
jecxz
mov
into
mov
cmp
fisubrl
xchg
sbb
or
enter
jbe
scas
pop
dec
lods
stos
push
movsb
gs
push
mov
rclb
sub
in
sbb
subl
add
jp
or
gs
lea
lds
test
dec
clts
push
test
cmpsl
lcall
sbb
or
bound
sbb
add
daa
in
cmp
xor
mov
mov
mov
scas
adc
dec
test
dec
pop
scas
inc
mov
add
dec
push
lock
pop
lea
or
jne
lahf
mov
xchg
jge
out
mulb
xchg
add
insb
or
push
sbbl
sub
pusha
pop
mov
jp
push
or
pop
jb
insb
pop
ds
rcr
jmp
ja
add
pop
or
pusha
adc
ret
mov
and
push
jae
xor
pop
jge
popf
xchg
xchg
aaa
mov
mov
in
in
push
das
sbb
cmp
rcrl
scas
arpl
xchg
push
add
test
jp
mov
leave
push
sub
hlt
incl
sub
xchg
in
mov
dec
push
outsb
mov
sub
int3
cld
adc
fiadds
pushf
lds
repz
rorb
mov
lret
cmp
lock
mov
cmp
rcrb
sbb
test
fsubs
addr16
adcl
xor
jle
push
sbb
mov
or
jmp
test
xor
into
cmpsb
dec
pop
and
sbb
aas
mov
mov
cmp
leave
loope
orl
loopne,pt
xor
fstps
jns
fisubrs
negb
jl
mov
enter
lret
mov
das
or
pop
mov
add
pop
cmp
adc
dec
or
and
dec
sub
into
outsb
pushf
mov
jb
mov
jne
adc
aam
shrl
and
mov
int
sub
sub
and
pop
cs
lcall
ss
xchg
sbb
mov
or
int3
xorb
mov
shrb
aas
cmp
imul
push
hlt
mov
fsubs
mov
xchg
lret
shlb
push
sub
stc
push
or
push
into
lock
sub
rcrb
pushfw
mov
fidivs
xor
mov
inc
data16
or
movsl
adc
jno
loopne
in
insl
in
mov
sti
sub
mov
arpl
mov
inc
mov
adc
xchg
repz
mov
xchg
inc
sbb
cmp
lock
daa
push
xchg
jmp
push
adc
imul
movsl
jg
cs
jl
nop
adc
jl
sub
pop
dec
movsl
push
sub
popf
ret
data16
cmp
mov
sub
movsb
lahf
subl
or
out
push
xchg
xor
inc
pop
dec
dec
aas
adc
clc
mov
xor
add
pusha
adc
add
fcompl
mov
lret
pop
div
push
inc
cld
lret
lret
jmp
fimull
imul
dec
lea
inc
loope
aam
pop
jne
addr16
cvttps2pi
adc
das
dec
jl
scas
cmpsl
lds
mov
mov
dec
arpl
lds
mov
out
nop
mov
cltd
pop
in
test
xorb
jae
fst
jne
clc
adc
inc
pminsw
fwait
ret
sub
xchg
stos
inc
sbbl
xchg
pop
xorl
shlb
fistps
fcomps
mov
xchg
imul
dec
test
add
dec
sbb
push
inc
xor
sbbl
push
pop
add
inc
movsb
outsb
ret
retw
jns
push
in
std
jae
adc
push
mov
cwtl
mov
add
in
dec
adc
jg
rclb
jne
orl
call
push
out
aad
pop
bound
mov
out
jmp
iret
js
sub
pop
leave
leave
addr16
mov
jo
loope
jb
out
or
jle
aam
in
test
aad
sub
inc
jo
mov
jo
push
and
sbbl
ret
fstl
ds
mov
cmp
cmpsl
lret
imul
repz
dec
or
adc
inc
iret
ret
sub
lret
hlt
dec
sar
and
dec
and
push
in
cmpsb
pop
ficompl
dec
mov
pop
jle
push
fsubp
sub
lds
das
inc
mov
sbb
mov
leave
push
or
loop
or
sbb
aam
add
xchg
dec
push
das
lock
jno
fdivl
jl
or
dec
mov
cmp
fs
scas
in
lds
sub
mov
push
cld
xchg
cmpsb
inc
das
sahf
in
rcrb
add
dec
enter
daa
lds
xlat
cmp
fabs
xchg
je
sub
es
cmp
add
je
mov
push
jo
lods
sbb
addr16
lcall
pop
in
adc
pop
ja
into
push
lahf
adcl
cmp
int
imul
cltd
cmpsb
outsb
jnp
adc
xchg
iret
enter
xor
dec
cli
pop
mov
dec
aaa
and
lods
push
mov
stos
int
pop
cmp
orl
lcall
dec
mov
imul
out
and
or
jl
sub
mov
lcall
jl
push
adc
lret
push
idivl
loop
xor
pop
push
lret
mov
sub
fwait
cmp
push
or
xor
into
rcrl
nop
cmc
lret
or
xor
mov
outsl
inc
adc
loop
or
outsl
adc
cmp
and
cwtl
lret
stos
fisttpl
movsb
ss
cli
movsb
inc
xor
daa
mov
jae
stos
in
ss
lods
loopne
loopne
pop
test
fchs
cmp
les
dec
repz
call
int
dec
xchg
sub
xlat
dec
ret
sub
xor
out
push
mov
cwtl
pop
xchg
jmp
das
lcall
mov
nop
out
outsb
out
dec
mov
imul
pop
mov
jecxz
jle
imul
je
jg
pop
lods
bnd
repz
dec
addl
sbb
pop
cmp
roll
inc
jbe
adc
mov
mov
mov
mov
sbb
inc
adc
fistl
cwtl
xor
loop
jbe
mov
mov
icebp
inc
sbb
cmc
aaa
and
pop
add
mov
dec
hlt
mov
pcmpeqw
adc
adc
fldl
mov
cmp
sub
es
ljmp
ja
test
adc
xchg
popa
mov
ss
mov
xchg
lahf
xchg
and
shrl
or
jno
cltd
dec
inc
push
test
daa
mov
pop
jne
push
mov
jne
push
mov
xchg
xchg
faddl
ljmp
outsl
pop
mov
and
out
xor
loopne
pop
push
fsts
iret
cmp
inc
pop
cmp
icebp
cwtl
mov
add
movsb
xor
mov
push
mov
and
push
mov
add
fwait
or
dec
mov
push
shll
add
cmp
js
mov
cmp
mov
in
mov
mov
mov
shlb
dec
add
mov
or
jne
mov
das
out
mov
bound
dec
cmp
pop
mov
push
adc
sub
push
int
addr16
inc
jp
test
and
stos
pop
jnp
jbe
jle
rcll
dec
into
cmp
hlt
dec
xchg
outsb
mov
hlt
inc
jnp
xorl
sahf
push
mov
push
ja
stos
sub
xchg
lcall
imul
scas
sub
push
nop
ja
adc
iret
cmp
ret
cmp
hlt
xchg
push
xor
gs
jmp
xor
push
insl
push
push
insb
pop
jno
dec
and
add
pushf
and
pop
lods
dec
scas
fimuls
bound
mov
jo
add
sub
fsubs
aaa
dec
jbe
cmp
jge
pop
push
aaa
push
repz
and
jno
pop
and
mov
push
fidivs
lret
xor
mov
inc
sub
shlb
test
rcrb
mov
aad
in
jmp
es
daa
rol
cmp
mov
sbb
ds
movsl
dec
nop
xchg
and
mov
fists
dec
lds
ljmp
xor
pop
mov
dec
pop
or
mov
pop
mov
mov
call
imul
js
sub
sbb
outsb
bound
push
shlb
and
cli
loopne
mov
hlt
and
push
mov
int
jo
sub
push
mov
sub
adc
pop
outsl
movsb
mov
inc
xchg
sahf
xchg
mov
test
and
sub
pop
jg
push
inc
mov
test
stc
cmp
xor
adc
sub
cmp
popf
in
mull
jnp
xor
dec
cmp
mov
add
dec
rol
into
mov
dec
cmc
xchg
std
cmpsl
xor
cmc
outsl
and
int3
loop
xchg
mov
adc
cmovp
add
xchg
in
sub
shll
push
out
loopne
cli
xlat
mov
jg
xchg
sub
xchg
dec
push
movsl
gs
xchg
loopne
add
pop
test
adc
dec
fsts
xchg
jecxz
or
repz
scas
pop
sbb
popf
sbb
xlat
movsl
in
in
stos
adc
xchg
mov
insl
aad
push
sbb
call
icebp
rorb
mov
int3
jecxz
jle
insb
cmp
cli
mov
sub
out
sbbl
movb
mov
inc
pop
pop
flds
jl
aas
push
ror
jb
test
and
add
gs
xchg
std
sbbb
cwtl
in
adc
mov
mov
jg
sbb
cld
and
jmp
mov
sbb
insb
inc
out
das
mov
mov
sub
int
lods
nop
pop
ret
test
aad
jp
jb
repz
ret
inc
test
mov
mov
mov
mov
in
shll
mov
sub
push
cltd
test
test
leave
mov
adc
pop
inc
scas
fstpl
xchg
lods
clc
mov
fsubrp
and
sbb
jnp
repnz
dec
pop
imul
movsl
mov
push
pusha
fidivs
add
pop
or
mov
mov
fxch
dec
inc
jo
test
jl
xchg
call
inc
arpl
pop
or
jecxz
fwait
lock
jle
fs
syscall
fmul
jp
js
xchg
call
add
jns
mov
in
out
xchg
mov
sub
dec
add
pop
jnp
sbb
js
dec
clc
sarl
pop
sarb
xchg
sub
adc
mov
xchg
xchg
out
xchg
loop
dec
iret
jecxz
push
out
xchg
jg
mov
dec
ss
out
and
cmp
jns
push
gs
jp
jnp
and
pop
cld
jnp
out
jle
mov
imul
movsl
xchg
xor
inc
xchg
jae
mov
test
mov
inc
xor
stos
sahf
push
aaa
sbb
cmpsb
in
imul
shrl
xlat
inc
and
aaa
inc
or
xchg
jg
ret
dec
leave
mov
cmp
inc
out
adc
mov
sbb
inc
jmp
stos
cwtl
add
clc
int3
mov
jae
fisubrs
cli
lds
jne
mov
ret
gs
movsb
lahf
pop
push
cmpsb
movsl
clc
jbe
imul
aaa
adc
xchg
xor
cli
pop
jl
adc
cmp
out
enter
sbb
scas
scas
stos
mov
xchg
test
xchg
arpl
cmpsb
rcrl
outsl
jp
daa
ret
push
and
fidivrs
sub
and
mov
movsl
push
stos
in
stos
jg,pn
cmp
pop
push
push
sub
and
roll
out
out
xor
inc
loopne
js
out
pop
xor
and
xor
pop
cmc
ss
pop
sqrtsd
inc
mov
pop
arpl
adc
dec
in
sub
iret
inc
or
ss
mov
out
push
and
lret
push
popl
int
imul
lcall
movsb
mov
sbb
js
lahf
dec
pop
addb
dec
mov
jmp
stc
out
daa
pop
fs
dec
fimull
sbb
sbb
cmp
pop
ljmp
in
test
adc
jle
loope
xor
mov
scas
es
pop
push
mov
outsl
add
scas
loop
push
or
iret
outsb
adc
xor
add
mov
lods
lods
jb
mov
mov
out
push
cmpsb
cli
or
test
sub
xchg
in
std
mov
xor
scas
out
gs
in
loopne
xor
xchg
adc
inc
leave
mov
mov
mov
mov
mov
pop
sbb
fmuls
fisubrl
pop
xchg
icebp
adc
ljmp
ds
cli
push
xor
dec
inc
adc
inc
repnz
ret
je
mov
ret
outsl
jne
ffreep
stos
jmp
pop
pop
xor
dec
mov
push
push
jle
mov
inc
lods
xor
aas
out
sub
in
rcll
and
nop
push
test
in
sub
jg
cmpsl
mov
mov
daa
mov
push
adc
cld
dec
add
mov
xchg
lock
arpl
sub
scas
aam
dec
jns
adc
push
es
ret
mov
xor
insl
push
test
mov
iret
rcll
lods
mov
or
pushf
and
testl
sarb
push
cltd
mov
es
mov
or
push
ficompl
fldl
loopne
push
icebp
xchg
adc
xchg
xchg
pop
adc
shlb
pop
stc
pusha
scas
stos
push
mov
out
mulb
xchg
in
and
lcall
or
repnz
int3
aaa
mov
nop
mov
test
xchg
lods
xchg
inc
sbb
mov
cli
cmp
or
push
stos
fwait
pop
aam
push
pop
jo
add
xchg
pop
cmp
mov
aas
xor
fildll
lret
dec
pop
in
sub
xchg
add
sarb
ss
xlat
ja
or
dec
jmp
mov
mov
hlt
enter
dec
lret
bound
out
jb
insl
dec
and
sbb
insl
out
cmpsl
insl
sub
dec
xchg
mov
and
jp
mov
insb
mov
jne
lea
xor
jnp
test
jle
add
xor
pop
xchg
adc
js
push
sbb
xchg
jae
rcr
imul
mov
test
stos
adc
rcll
fsubrl
mov
pop
push
push
jp
adc
in
xor
mulb
jnp
das
xchg
aaa
hlt
sub
arpl
fadds
and
sbb
xor
or
pushf
neg
mov
sbb
add
dec
pop
or
fmulp
or
sarb
outsl
repnz
iret
inc
cmp
xlat
lret
push
aam
jmp
sarl
lods
fstps
add
rclb
or
jno
mov
add
scas
adc
movsb
mov
cmpsb
jo
dec
in
mov
and
dec
lcall
dec
imul
and
enter
daa
ret
cmp
jno
loope
and
mov
cltd
sbb
ds
inc
out
movsl
pop
sub
and
pusha
lahf
pop
loopne
jmp
hlt
mov
hlt
xor
xor
pop
xor
cmp
mov
pop
xor
add
push
sbb
sub
outsb
enter
push
adc
sub
xchg
cs
andb
adc
fidivrs
outsb
and
fadds
xchg
mov
int
inc
iret
sub
cmp
sub
inc
roll
mov
mov
in
es
andb
or
mov
mov
popa
pusha
stc
cmpsb
adc
adc
dec
out
pop
xor
jno
adc
lret
xor
mov
or
xchg
into
jl
inc
cmc
and
pop
xor
pop
loop
inc
repz
add
pushf
leave
lcallw
lods
push
mov
jle
out
shr
cmp
sub
in
push
shl
adc
inc
gs
sub
dec
jle
pop
ret
adc
jecxz
flds
cmpsl
shl
pop
mov
add
adc
xchg
sub
cmp
adc
jns
pushf
cltd
adc
jmp
xlat
stos
mov
mov
mov
xor
inc
add
push
dec
je
out
push
jecxz
dec
mov
jb
rorb
mov
sub
mov
or
roll
push
xchg
mov
inc
push
sbb
mov
inc
mov
pusha
jb
rcrl
push
std
rclb
cwtl
lock
mov
inc
mov
lret
icebp
out
mov
jbe
cmpsl
jb
mov
pop
push
lock
jp
push
mov
and
push
aam
pop
fwait
ret
mov
insl
lods
popfw
dec
push
jmp
js
out
popf
lods
and
lea
std
addr16
loope
sbb
xchg
pop
push
pop
push
jbe
push
push
adc
jns
shlb
loop
cmp
jle
xchg
push
mov
shrl
fsubrl
movsb
cmp
pop
out
pop
hlt
rcll
push
cmp
divps
jns
sub
imul
or
jge
xchg
sub
test
inc
dec
xchg
inc
sbb
insl
jp
xchg
mov
or
xchg
push
fwait
dec
aad
push
stos
cmp
fistpll
scas
insb
int3
call
mov
xor
test
in
fildll
push
mov
mov
call
mov
icebp
adc
push
dec
fisubrs
mov
cli
xlat
mov
arpl
ss
out
jge
jne
dec
inc
mov
mov
out
push
xchg
mov
jmp
adc
mov
out
sahf
aam
pop
jg
or
das
and
out
jp
movsb
and
lods
aad
push
test
cmp
and
in
push
add
sbb
int3
fists
cmp
mov
xor
push
cs
popf
push
mov
push
ret
aaa
xchg
stos
test
push
sbb
cmc
mov
scas
push
inc
xor
adc
adc
test
iret
push
enter
popf
add
hlt
jbe
adc
mov
or
scas
lods
testl
fiaddl
int3
xchg
pop
dec
pop
cmp
fidivs
mov
stos
test
aam
lcall
insb
mov
movsb
movsl
bound
push
inc
dec
int3
jbe
and
movsb
lods
fcompl
rol
aaa
xchg
add
cmp
cmpsl
pop
jl
inc
sbb
xor
xchg
xor
shr
jne
imul
sbb
popf
stc
ds
sub
jo
fdiv
add
mov
xor
daa
roll
fldcw
icebp
test
sub
je
cmp
and
or
loopne
xlat
lahf
jns
sub
jnp
sbb
insl
xor
mov
daa
pop
cmpl
push
adc
fdivrl
cmp
cmc
cmp
outsb
mov
xchg
add
lea
rorl
loop
and
xchg
pop
int
or
sub
sti
pop
test
rolb
fcompl
mov
cmpsl
sbb
loope
jnp
inc
test
pushf
cmp
cmpsl
mov
stc
pop
mov
sub
js
or
lahf
addr16
cmp
into
mov
mov
push
gs
xor
ja
or
adc
cmc
out
inc
xor
sbb
loop
imul
jl
add
cmpsb
js
jp
sub
mov
pop
leave
mov
rol
add
xchg
sbb
shlb
pop
shl
fiaddl
adc
mov
fnstcw
aam
sub
adcl
push
sbb
dec
xor
xlat
bound
sub
xchg
test
dec
nop
lcall
xchg
shrb
add
sbb
mov
int
add
pop
stos
dec
loop
sbb
sbb
xchg
jecxz
push
lods
jne
and
imul
test
xor
push
push
andl
lret
fcmovnbe
mov
pop
les
popf
inc
loop
sahf
aas
sub
push
mov
jmp
xor
testb
std
ja
and
jb
pop
mov
cmp
icebp
popf
jmp
mov
push
lret
repnz
iret
mov
mov
das
pop
dec
jle
inc
vmovaps
jnp
aam
mov
fldenv
sahf
insb
mov
jge
dec
arpl
addr16
std
xlat
lods
mov
mov
and
add
sub
mov
cltd
sub
push
test
adc
fstl
fcoms
jp
xchg
roll
out
gs
in
dec
jge
mov
test
push
icebp
sbbb
mov
inc
mov
loopne
dec
xor
adc
mov
xchg
push
pusha
dec
jns
scas
test
test
sbb
mov
dec
lahf
or
test
fwait
jge
xchg
push
dec
stc
and
leave
nop
add
hlt
fsub
xor
data16
in
ljmp
inc
insb
mov
pop
lods
mov
ja
mov
dec
rorl
mov
std
jns
dec
out
mov
xchg
adc
mov
insl
mov
popa
stc
out
xor
les
jb
jmp
loopne
mov
out
or
sub
inc
movsl
inc
and
sub
and
mov
mov
jmp
mov
in
mov
insl
fbstp
or
fmuls
inc
cmpsl
mov
push
icebp
push
js
jle
sub
add
jno
imulb
mov
pop
ljmp
lret
pusha
push
lods
or
adc
js
iret
mov
test
sbb
jecxz
arpl
incl
movsl
dec
or
sub
outsb
inc
push
orb
dec
stos
int3
jle
bound
mov
ficoms
lock
out
je
mov
mov
mov
inc
mov
jbe
test
cmpsb
sbb
stos
aaa
push
mov
cmpsl
jno
mov
jl
mov
test
xor
sub
les
or
dec
test
repz
iret
cmpsb
pop
aas
cld
in
xchg
cmp
rcrb
loope
push
or
pop
ds
xor
imul
jnp
xchg
lahf
cwtl
inc
out
rep
sbb
int3
push
add
mov
xor
mov
pop
test
push
js
xchg
dec
pop
mov
xor
mov
iret
push
lods
pop
mov
and
jb
in
mov
adc
fisubrs
sbb
fwait
adc
mov
fldcw
and
push
int
lods
cld
sub
mov
arpl
jae
push
mov
jmp
xchg
inc
int3
sahf
push
mov
test
addl
xor
popf
stc
adc
sbb
cltd
adc
mov
cmpl
and
lret
popf
xor
jae
bound
or
out
into
inc
xor
loop
jae
mov
lds
xor
mov
add
out
data16
int3
lods
mov
mov
cli
mov
out
in
ds
loopne
inc
cmp
int3
lea
loopne
dec
aaa
pop
add
enter
inc
fpatan
push
mov
repz
ret
leave
xchg
rorb
sbb
mov
xlat
mov
mov
dec
pushf
out
fstl
jmp
sbb
cs
inc
aad
scas
push
nop
xor
mov
inc
sub
icebp
dec
pop
xchg
jecxz
es
js
lea
inc
daa
aas
icebp
pop
jb
xchg
cmp
sbb
fildl
hlt
pop
addr16
inc
jbe
out
inc
std
rorb
aas
int3
dec
add
stc
js
bound
xchg
xor
cmp
mov
std
push
push
cmp
xor
icebp
je
addr16
int3
loop
lret
test
mov
pop
fmuls
lock
push
mov
adc
mov
sarl
and
insl
jnp
pop
dec
pop
sbb
cmc
mov
adc
lods
stc
sti
cmpsb
mov
inc
pop
or
mov
test
imul
popa
test
jecxz
mov
sub
mov
xchg
mov
ljmp
adc
cli
jb
stos
fcmovnb
dec
out
pop
notl
int3
loope
nopl
adc
push
xor
xor
xor
mov
cltd
gs
test
pop
adc
jg
sbb
or
iret
xchg
mov
lock
or
clc
test
call
sub
jns
ljmp
out
and
orl
fimuls
ja
iret
mov
fxtract
mov
and
push
mov
jl
mov
jmp
mov
and
imul
lcall
xchg
stos
dec
aam
test
loope
outsb
sub
cmp
lahf
test
and
mov
jnp
push
mov
insb
scas
pusha
in
mov
pusha
dec
jmp
fisttps
dec
and
ja
pop
jae
ja
push
mov
or
cmpsb
out
mov
stos
push
and
inc
xchg
push
scas
sbb
repz
mov
and
pop
xchg
fcoms
or
sub
test
inc
cli
adc
or
movsb
mov
inc
out
add
push
sbb
imul
fidivrs
dec
mov
or
fistpll
cmovae
mov
jne
push
loop
shll
cmpsb
sbb
push
cmpsl
sbb
mov
aaa
adc
dec
or
push
lock
in
jl
xlat
mov
pop
insl
push
dec
mov
xchg
jo
gs
daa
jecxz
and
jne
push
mov
add
cmpsb
loop
mov
enter
daa
mov
lds
pop
sbb
sub
adc
cmp
xor
movsl
jb
push
push
mov
lahf
mov
add
lahf
outsb
sbb
scas
testl
ss
pop
iret
fidivs
js
xor
pop
icebp
sarl
push
add
fmul
add
sub
subb
push
adc
mov
in
repnz
mov
cmp
and
mov
in
sub
sti
pop
cmpsl
imul
xchg
adc
xor
sahf
shl
test
or
jg
repnz
lret
stos
fs
mov
ss
cmp
inc
lret
loopne
or
cmp
pop
lahf
cmp
jne
or
ror
and
lea
cmp
aaa
mov
imul
adc
add
jb
and
lods
dec
mov
mov
out
jns
movsl
adc
test
in
test
and
gs
cld
test
pop
pop
mov
adc
sub
fcmovb
mov
xor
mov
scas
sbb
les
push
xlat
loopne
mov
adc
sub
jmp
arpl
cs
aad
inc
add
dec
ret
mov
xchg
adc
adc
jecxz
jnp
jnp
add
call
cmpsb
or
mov
dec
pop
gs
das
sub
xchg
mov
inc
sbb
imul
mov
add
cwtl
rorl
nop
jp
lds
cwtl
xchg
adc
call
icebp
dec
dec
and
testl
mov
inc
es
das
pop
insb
inc
mov
pop
fwait
and
mov
pop
sub
movsb
in
insl
bound
dec
pop
xor
cmpsl
mov
xor
sub
lods
fs
sarb
les
notb
arpl
ds
fsubrl
lret
or
cltd
cwtl
fnstsw
mov
xchg
repz
out
jno
loop
push
clc
mov
mov
pusha
xchg
mov
pop
movsl
lret
aas
stos
lret
out
andb
or
push
cmpsl
push
fmull
jnp
outsl
add
or
into
sub
mov
pushf
ljmp
mov
in
jle
xor
inc
push
ljmp
push
xchg
push
fs
call
pushl
sub
xor
pop
insl
jns
adc
in
sti
pusha
xchg
cmp
mov
xor
sub
dec
mov
cli
mov
jno
mov
mov
dec
xchg
lret
jne,pt
gs
push
repnz
out
inc
mov
sub
jne
xchg
jbe
repnz
out
cmp
or
or
addr16
lahf
push
jp
daa
adc
adc
pushf
jnp
pushf
clc
jle
push
xchg
in
ret
sub
stc
cld
fildll
mov
pop
inc
mov
xchg
push
push
ja
ljmp
sti
xor
stos
frstor
movsb
in
sbb
mov
shrl
cmp
mov
iret
jb
xor
or
hlt
push
movsb
and
sahf
pop
inc
std
cmc
adc
pop
fnstsw
fidivrl
pop
add
int3
push
jns
pop
mov
xor
inc
shlb
mov
cmp
push
movsb
inc
std
pushf
push
xor
mov
jge
add
icebp
cli
aaa
sarb
inc
jno
cmp
jl
filds
lods
and
xor
mov
scas
push
jbe
and
out
test
mov
insb
inc
sbb
jno
push
jl
enter
daa
mov
dec
mov
sub
mov
ds
adc
and
xchg
outsl
push
xor
xor
dec
xor
and
inc
push
mov
js
lretw
vpunpckhdq
daa
mov
jp
xor
ret
outsb
mov
add
xchg
xchg
rorb
mov
mov
ljmp
clc
aad
jp
pop
sub
arpl
es
lcall
or
mov
lahf
sbb
loopne
sahf
add
test
dec
orb
mov
inc
mov
andb
adc
ljmp
push
in
fdivr
scas
negl
mov
pushf
cmp
mov
or
mov
cmc
cmp
jae
cwtl
sub
outsl
pop
lret
out
jbe
dec
imul
fstl
add
data16
jb
lods
das
jl
mov
mov
cli
or
mov
adc
or
mov
jecxz
loopne
push
pop
adc
test
repz
test
sbb
jns
xlat
pop
jbe
sub
stos
dec
pushf
inc
stc
mov
sbb
and
nop
jmp
pop
dec
and
xor
xchg
pushf
dec
inc
inc
jge
std
enter
adc
jle
ljmp
fwait
in
and
xor
andl
sbbb
lods
outsl
testb
iret
inc
xor
pop
aas
or
jg
mov
shrb
stc
rcr
ret
mov
sbb
std
insb
imul
lahf
shlb
mov
paddb
repz
arpl
and
insb
mov
mov
lock
das
testb
mov
and
aam
ffree
ret
fistpll
es
rclb
dec
sbb
push
fbstp
mov
popa
inc
out
add
mov
lret
and
pop
or
out
mov
cltd
iret
mov
test
loope
push
test
dec
or
in
mul
xchg
dec
outsl
shl
test
test
outsb
pop
push
clc
xor
in
call
sbb
pminub
mov
or
loope
xor
mov
lahf
jecxz
dec
scas
push
shrl
mov
outsb
inc
in
out
jb
movsl
loop
fwait
or
pop
add
sbb
call
aad
xor
loopne
in
add
mov
ljmp
cmpsb
push
pop
fstpl
ja
xchg
add
adc
sbb
int
pop
mov
mov
dec
jp
mov
and
scas
mov
loope
out
int
jnp
shr
jmp
inc
loop
andl
scas
sub
xor
into
addr16
xor
and
std
fldt
cmpsl
jnp
movsl
jl
mov
lods
in
pop
pop
pusha
test
std
cwtl
xchg
xor
mov
inc
enter
out
jo
cmp
inc
popf
repz
mov
mov
mov
xchg
sti
jns
sbb
test
imul
rclb
push
in
pop
pusha
popa
iret
rorl
push
leave
cmpb
hlt
mov
fdivs
or
lcall
fidivl
test
in
aas
sbb
testb
xor
rolb
mov
mov
dec
cmp
inc
push
or
jbe
std
adc
inc
or
aaa
popl
ds
addr16
push
mov
jl
mov
cwtl
push
adc
jo
das
std
scas
in
push
and
bswap
test
push
lods
sub
inc
mov
call
xor
push
mov
daa
mov
and
dec
sbb
cmp
cmpsl
ds
lahf
movsl
cmpb
dec
jo
lahf
cmc
rcrl
imul
sub
xor
loope
or
mov
js
sub
pop
outsl
cmp
or
inc
and
and
and
mov
adc
outsl
es
cmpb
mov
outsb
shlb
cltd
addb
stos
ror
cmc
mov
pop
push
push
pop
movsl
int3
loopne
mov
mov
sbb
push
and
leave
gs
andb
inc
mov
mov
ds
xchg
adc
sbb
mov
push
jns
and
xor
out
cmp
ret
xchg
or
inc
into
jmp
test
xor
sbb
lods
loop
or
adc
sti
faddl
jmp
sahf
sub
cmp
mov
testb
mov
jno
jg
mov
inc
aad
mov
adc
lds
sbb
jecxz
int
push
repz
xchg
sbb
adc
cmp
xlat
pop
mov
adc
inc
dec
jmp
aas
addr16
jl
aad
ja
in
insb
dec
andl
popa
dec
mov
shrl
movb
mov
movsb
ss
mov
cmpl
scas
pop
pop
push
inc
jo
or
popf
aas
test
repz
mov
pop
psrlq
in
dec
negb
test
adc
or
rorb
stc
cmp
cld
dec
cmp
rcl
dec
mov
jmp
lock
cltd
sub
mov
sub
cmp
es
cs
insl
xor
fimull
push
dec
cmpsl
mov
mov
push
lods
cmp
mov
lods
jo
and
cltd
lret
add
add
xor
push
xor
test
jno
push
insb
pop
sbb
or
clc
sub
test
inc
or
rcr
pusha
aad
sti
clc
mov
out
dec
and
pop
jbe
mov
add
add
xor
nop
popa
mov
mov
xchg
jns
xchg
push
popa
xchg
fadds
sbb
sbb
or
dec
dec
fwait
cmp
push
fnstcw
add
xor
xchg
jns
push
cs
pop
jle
fildl
adc
cwtl
sbb
mov
roll
clc
fistl
dec
pop
ret
js
out
shlb
lods
jo
bound
xor
adc
inc
xchg
or
mov
xor
movsl
sub
cs
lock
repnz
and
imul
cmpsl
jae
jle
jp
in
pop
fldenv
push
xor
in
outsl
popf
xchg
push
in
pop
mov
jl
shll
jae
nop
mov
popf
sbb
cmpb
enter
mov
xchg
push
xor
sbb
cmp
imul
push
enter
xor
mov
xor
add
add
loop
hlt
in
mov
arpl
pop
or
adc
jae
push
add
pop
adc
or
mov
mov
inc
mov
or
sub
sbb
jge
jge
add
add
aaa
dec
leave
lahf
or
dec
dec
jl
imul
mov
fisttps
negb
shlb
xor
and
mov
pop
mov
ss
pop
cmpsb
imul
in
and
push
enter
daa
mov
outsb
imul
push
movsb
sub
aaa
aam
mov
cmp
ds
movsl
xchg
and
imul
adc
cld
push
fcmovnu
mov
mov
mov
ss
int
jns
inc
rolb
xchg
pop
scas
xor
push
mov
mov
sub
or
adc
dec
lret
jne
push
dec
dec
mov
xchg
mov
push
and
call
push
int
sub
aam
je
and
cs
sbb
mov
test
cmp
rolb
stc
lock
call
adc
ja
ss
loopne,pn
xor
sahf
negl
sti
push
cmp
test
into
into
cmp
lret
xor
push
outsl
sbb
loopne
pushf
xor
sahf
and
add
data16
jmp
lahf
mov
rcrb
aad
mov
ljmp
out
mov
loopne
aad
pop
jl
ficoms
lock
fxch
pop
sub
repz
mov
sbb
jne
ja
popf
es
sub
and
sbb
pushf
fwait
fs
jmp
sarb
aad
dec
fistl
loopne
das
inc
ja
add
xor
sub
js
test
lea
push
rorb
push
pop
ds
dec
and
mov
mov
push
pop
inc
xchg
dec
cmp
imul
jb
scas
jp
loope,pt
and
lahf
mov
jbe
push
negb
push
dec
cwtl
les
mov
lahf
mov
icebp
shr
xor
js
mov
inc
add
mov
ja
lock
jp
das
mov
mov
in
sbb
ret
std
test
es
dec
adc
icebp
xor
mov
jo
icebp
lods
movsl
addl
and
xor
aad
and
stc
rolb
cltd
cmp
jle
mov
inc
test
fstl
mov
xchg
int
mov
mov
mov
pop
cmpsb
int
stos
xchg
ds
stos
insb
adc
cmp
insl
add
aas
xor
add
mov
movsl
xor
dec
jl
lds
arpl
inc
sbb
or
andb
jl
fadds
push
jno
decl
cmp
sarb
gs
in
or
xchg
sub
mov
push
mov
push
jb
ja
xor
and
es
imul
lods
mov
mov
lock
mov
pop
out
jo
or
mov
out
out
adc
jno
cwtl
or
cmc
push
sbb
mov
and
lds
pop
jnp
add
inc
in
mov
pop
fisttps
out
xchg
outsb
pop
jmp
mov
ficomps
push
shlb
popf
inc
jns
mov
cmp
insb
aas
xchg
test
ret
xor
xchg
scas
movsb
lods
loop
psrlw
adc
mov
iret
popl
in
add
leave
jo
loope
cmp
sti
arpl
push
and
testb
push
jecxz
inc
ficoml
fsubrs
adc
push
cmpsl
fiadds
push
shlb
mov
pop
pusha
cmp
mov
push
test
jbe
and
jge
pop
sbb
call
aaa
or
dec
imul
lock
push
flds
out
repnz
mov
and
cld
out
test
ljmp
cmpsb
out
jne
in
or
enter
daa
mov
push
pop
loope
scas
jmp
fildl
cmp
stos
ds
jb
movsl
mov
pop
lahf
xor
sbb
lahf
and
xor
insl
sbb
js
jne
pop
in
mov
push
pop
add
fdivrl
insl
sub
dec
jp
sbbl
andb
pop
mov
cltd
and
jnp
push
cmpsl
insl
fmul
scas
inc
out
dec
mov
je
and
mov
mov
mov
addb
test
mov
fstp
jle
pop
mov
aam
cmpsl
insl
jo
ljmp
xor
adc
fsubs
xchg
fdivs
aad
neg
insl
or
xor
loope
cmp
or
sbb
add
test
sahf
jb
das
xchg
int3
imul
dec
data16
push
sub
cmpsb
push
cmpsb
cli
mov
xor
push
dec
sti
lods
push
inc
decb
fadds
loopne
stos
sbb
adcb
jbe
repz
xchg
mov
jnp
cmp
inc
in
sub
push
adc
je
inc
pop
pop
jmp
sub
xor
nop
jl
add
inc
mov
je
fstpl
movb
jg
dec
pop
and
mov
mov
rorl
cmpsl
fucomi
inc
jp
xchg
shl
sbb
aas
inc
test
jb
sahf
dec
mov
sub
or
mul
cmc
mov
popa
sbb
cwtl
jg
aaa
mov
sub
dec
icebp
cmpsl
mov
loope
mov
stos
mov
xor
mov
add
add
xchg
xlat
mov
sub
mov
mov
es
dec
insl
mov
call
mov
xchg
lods
adc
mov
repnz
push
and
iret
ljmp
pop
sub
test
mov
mov
pop
dec
push
repnz
aad
jle
xchg
clc
sahf
jecxz
xchg
or
lahf
ljmp
dec
pop
push
jbe
stos
xchg
bound
adc
jle
divl
mov
scas
pop
ret
push
xor
dec
mov
test
test
adc
xchg
rorl
inc
mov
bound
nop
ja
xchg
dec
sub
pop
jne
add
imul
xor
push
jns
push
sbb
scas
or
mov
mov
push
pop
mov
dec
xorl
mov
insb
fs
and
dec
mov
adc
pop
bound
das
jmp
mov
shrb
sub
and
dec
addr16
cmpb
xlat
and
sbb
or
jnp
pop
loope
sbb
in
jg
pusha
push
cld
xchg
sub
xchg
lods
cmc
sub
inc
in
inc
jmp
mov
and
mov
jl
adc
xchg
add
inc
sbb
and
imul
scas
pop
ljmp
ljmp
ret
adc
hlt
adcl
inc
or
sahf
or
or
add
xor
dec
es
add
lea
fsubp
clc
push
lds
rclb
cmp
scas
imul
movsb
jb
inc
push
insl
jp
jbe
cmpb
xor
fisttpll
loop
mov
cmc
sarl
sub
push
mov
mov
jo
jb
scas
sub
and
push
test
mov
hlt
inc
push
and
cmpsb
jno
pushf
in
icebp
cmpsl
int
inc
arpl
mov
out
loope
mov
cmp
test
movsl
xchg
sub
lahf
push
addr16
push
addl
lret
adc
xor
mov
push
pop
fstps
lret
cmp
dec
pop
sub
push
push
mov
ret
lea
