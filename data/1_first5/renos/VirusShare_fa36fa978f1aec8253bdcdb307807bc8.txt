cmp
imul
inc
add
jg
cmp
mov
inc
adc
jge
add
rcl
jnp
inc
and
push
sbb
push
call
ret
nop
pop
mov
mov
mov
test
in
in
mov
in
xchg
nop
mov
test
loopne
in
in
aam
push
mov
push
push
fnstsw
clc
or
lea
sahf
push
push
add
jne
lock
sub
or
sbb
ret
lcall
adc
je
xor
mov
lea
pushl
dec
test
jne
call
xor
sti
jg
or
mov
mul
add
mov
push
cld
pop
pop
scas
out
mov
mov
mov
repnz
mov
mov
ret
nop
fiadds
lock
clc
mov
sbb
out
mov
test
add
test
jb
sub
inc
lock
add
rorb
add
lret
or
clc
mov
and
xor
mov
lods
std
outsl
xor
cld
mov
and
xor
jle
pop
aas
lcall
icebp
add
dec
hlt
mov
js
clc
fisttps
pop
sub
cmp
jae
pop
repz
jne
sbb
test
hlt
mov
mov
outsb
gs
xor
cs
shrl
or
adc
in
adcb
mov
jle
sub
add
push
and
mov
scas
add
test
jne
mov
mov
jmp
mov
or
pop
pop
pop
into
in
sbb
fildll
mov
and
jp
adc
leave
inc
incl
je
in
cmp
sbb
shl
jne
inc
mov
inc
mov
pop
mov
dec
mov
not
leave
in
push
sar
mov
ror
jmp
jae
ret
fsubs
add
icebp
or
ljmp
lods
bound
sti
add
or
jo
pop
pop
adc
pusha
or
jle
icebp
insl
call
lcall
pop
pop
cmp
mov
add
mov
testb
not
shrd
mov
sbb
cmc
neg
and
xchg
adc
dec
dec
pop
dec
xor
rcrl
cmp
jmp
call
pop
shl
xor
mov
xor
shr
jge
data16
incl
stc
dec
dec
dec
jne
mov
adc
orl
add
inc
inc
mov
lsl
mov
fimull
sti
mov
mov
bts
dec
dec
test
push
sub
mov
decl
xor
pop
mull
mov
lar
notl
mov
mov
jg
outsl
or
cltd
dec
pop
pop
push
xchg
and
or
and
xchg
data16
addl
bnd
leave
push
xor
dec
xor
pop
inc
pop
outsb
inc
mov
hlt
adc
movswl
and
mov
mov
inc
or
mov
mov
in
ds
movl
into
mov
xor
fcoml
loopne
push
call
lock
ret
cmpsb
out
hlt
clc
enter
mov
rcr
fisttps
mov
mov
rorb
jmp
bound
mov
popf
xlat
cmp
inc
clc
xor
dec
js
and
lcall
outsb
mov
or
leave
lea
imul
dec
adc
fcomip
insb
lret
stos
in
dec
test
jbe
jmp
xchg
mov
xorl
push
movsl
clc
ret
fldt
in
sarl
inc
inc
xchg
mov
not
mov
daa
clc
add
mov
push
outsb
in
sbb
inc
dec
cmp
jo
lea
mov
push
cli
cli
xchg
into
mov
mov
fiaddl
cmp
mov
push
mov
cli
cld
jmp
ljmp
or
push
inc
inc
pop
mov
push
inc
mov
push
and
bsf
cmpsl
retw
push
in
sub
mov
fimull
negb
incl
sbb
mov
fs
jae
mov
ror
inc
push
push
adc
mov
add
loopne
lea
mov
rorl
icebp
jb
mov
loopne
bound
adc
fadds
mov
imul
shl
mov
push
xchg
sti
jmp
and
dec
pop
cmp
js
btr
lea
sub
cwtl
sbb
push
mov
outsb
mov
icebp
mov
xor
mov
push
inc
lea
or
lea
cld
sub
inc
jge
and
shr
xor
lcall
add
ret
dec
test
jae
mov
sti
jmp
test
add
push
or
test
ror
sbb
mov
mov
inc
sub
test
jg
adc
or
inc
rclb
aad
insl
push
fisttpll
ljmp
loopne
fiaddl
cmc
mov
ljmp
rcl
adc
in
orb
add
outsl
cmc
shlb
shr
stos
sbb
push
adc
sbb
inc
or
mov
xlat
outsl
push
push
cmpsb
dec
mov
pop
sbb
jg
jecxz
ret
addl
rorb
xlat
sbb
pushl
adc
rol
adc
dec
xchg
jns
lods
stos
std
add
dec
add
int3
add
sub
add
divb
inc
jmp
add
cli
shl
sub
pop
movzbl
and
xchg
clc
cmp
aad
rorb
adc
out
dec
adc
call
xor
test
clc
into
test
inc
movb
mov
xchg
jno
mov
mov
out
leave
and
xchg
sub
dec
add
sbb
push
lock
add
mov
mov
dec
mov
sub
mov
pop
sub
mov
cmp
ret
lahf
add
rcr
dec
test
sbb
rclb
jae
mov
jne
and
xor
dec
clc
add
xor
sub
push
inc
add
adc
clc
jo
mov
sbb
mov
mov
dec
dec
outsl
xor
or
mov
aam
sbb
jl
cld
dec
bound
shr
cmpl
inc
mov
ret
movsb
dec
jno
data16
mov
shl
outsl
jl
into
mov
in
and
jmp
inc
sbb
push
jo
pushf
dec
rorb
aaa
pop
inc
js
cmp
jb
sub
dec
cmp
lcall
or
push
pop
add
or
mov
mov
dec
pop
mov
inc
mov
add
std
orb
rolb
inc
insl
int
dec
ja
lret
fimull
stos
filds
call
add
rorb
and
loopne
mov
mov
fidivs
ret
inc
int3
add
stos
icebp
or
out
or
clc
outsl
paddd
mov
hlt
addl
cli
or
outsl
out
clc
decl
mov
js
dec
loope
into
divb
clc
mov
mov
sbb
mov
jge
cmp
mov
sub
jne
sub
pop
mov
mov
fdivrl
mov
jmp
adc
sbb
roll
je
cli
pop
sbb
push
lea
mov
repz
stos
mov
jne
mov
lock
mov
stos
in
mov
xchg
ja
leave
inc
ja
insb
out
sbb
mov
mov
mov
inc
add
movsb
push
fidivl
cmp
hlt
ficoms
leave
fdivr
mov
int
mov
lea
pop
or
push
std
lea
pusha
dec
je
dec
and
jmp
jne
xlat
ljmp
adc
adc
push
adc
pop
mov
dec
js
aas
jle
shl
mov
or
int
inc
les
cld
jae
adc
stos
mov
lods
pop
pop
lea
stos
lock
scas
push
fisttpl
cmp
push
mov
inc
cmpsb
mov
pushl
leave
cmp
push
lret
popf
push
shl
mov
adc
dec
loope
mov
pop
js
lcall
leave
and
cwtl
pushl
int
add
jmp
andl
mov
jl
into
sbb
mov
push
dec
xchg
pop
stos
dec
imul
xchg
pop
divb
repnz
jnp
push
lret
pop
push
sbb
sahf
lret
cmpb
lds
mov
sbb
mov
cmp
sub
es
jle
jmp
stc
div
mov
sub
je
cmp
mov
lods
jmp
cmp
sbb
icebp
adc
hlt
clc
jnp
inc
add
inc
dec
jne
mov
jmp
cmpsb
lock
shl
mov
icebp
ljmp
fiaddl
out
or
or
inc
movl
and
inc
dec
rorb
xchg
mov
call
jbe
add
add
cmp
cmp
jle
fucomp
aaa
add
ss
add
sbb
add
jnp
jnp
aaa
add
xor
xor
add
sub
add
stos
add
or
cmp
nop
inc
or
inc
seto
lea
adc
in
leave
push
push
push
xchg
mov
cmp
fsts
mov
movsb
shr
in
cmp
inc
rorl
iret
scas
add
inc
adc
cmpsl
daa
sub
pop
in
loopne
mov
mov
mov
and
pop
and
mov
aam
ljmp
addb
movd
mov
call
or
pop
xor
mov
test
or
jmp
adc
ss
and
jp
mov
lret
shrb
iret
mov
dec
mov
call
in
sbb
mov
icebp
inc
movsb
push
imul
icebp
pop
leave
mov
push
std
or
push
hlt
mov
inc
inc
aam
leave
mov
mov
inc
sub
loop
sbb
shr
cmp
jmp
mov
sbb
jb
loopne
inc
outsb
sub
lods
sbb
xor
sahf
rcrb
hlt
sub
mov
incl
scas
sbb
fsts
mov
js
xor
mov
test
jns
in
jl
mov
mov
inc
inc
pop
repnz
jg
cmp
ljmp
xchg
call
cwtl
outsb
sahf
mov
subb
lods
jecxz
inc
mov
adc
sbb
sbb
dec
je
aam
jmp
adc
roll
int3
and
repnz
ja
lret
add
push
or
ja
pop
sbb
or
adc
dec
pusha
movb
test
xchg
fmull
add
stos
mov
shl
or
lods
jg
icebp
jg
hlt
movsb
push
es
mov
dec
jle
adc
and
adc
pop
jmp
outsb
hlt
mov
ret
add
or
xor
inc
mov
or
aas
inc
mov
dec
pop
xor
outsb
add
inc
incl
inc
inc
dec
sbb
push
cs
rol
incl
shr
mov
shr
mov
dec
call
add
or
push
adc
ja
lods
jp
ljmp
fiaddl
xchg
loopne
add
inc
push
pop
jmp
lea
movzwl
sbb
jecxz
mov
rcr
sbb
mov
or
dec
jmp
cmp
js
push
shl
add
mov
cmp
inc
loope
adc
mov
dec
lea
fmul
or
lea
jb
sbb
scas
repnz
aam
xchg
jl
addb
mov
les
int3
dec
test
in
push
in
adc
xlat
gs
xchg
mov
push
adcl
mov
xor
aaa
xor
lock
pop
ljmp
xor
mov
mov
mov
repz
jo
loopne
pop
pop
ss
lahf
mov
inc
cmpl
mov
or
movsb
jne
xor
fdivl
add
lret
pop
pop
loopnew
dec
hlt
mov
mov
push
hlt
sub
sbb
pop
orb
sub
and
or
adc
mov
sub
shr
test
jle
and
add
add
mov
and
cmp
push
jge
fsubrp
push
cld
adc
loop
mov
add
push
lock
sub
jge
pop
add
outsb
decl
jne
jo
pop
ss
xor
xchg
add
scas
jne
adc
jbe
clc
idivb
add
pop
orl
fucomip
and
inc
je
xor
jmp
or
jmp
scas
cmc
mov
cmpb
adc
sub
out
pop
add
push
add
and
rorl
enter
or
mov
lock
push
push
push
jnp
clc
daa
inc
je
push
inc
sub
adc
xor
pop
cmp
push
push
push
pop
rol
cmpsl
imul
lea
adc
dec
push
loop
movsb
xor
inc
sbb
xor
and
cmp
dec
mov
adc
call
and
push
shll
fisttpl
in
ljmp
pop
pop
sub
shlb
out
mov
adcl
mov
xor
sub
jns
divps
in
loopne
das
pop
adc
mov
sub
cmp
xor
icebp
lds
add
lock
aaa
mov
adc
pop
cmpl
cli
sahf
jnp
iret
ja
add
and
lods
shll
mov
or
shrl
sbb
lcall
enter
sbb
imul
adc
fsubr
push
pop
bound
testb
sbb
jbe
and
hlt
lcall
add
and
arpl
push
sbb
ljmp
mov
add
adc
adcl
sbb
inc
mov
push
add
push
ds
add
int3
mov
rclb
mov
sub
add
mov
inc
ret
sbb
sub
pop
pop
inc
cltd
pop
das
mov
jne
stc
sub
clc
icebp
mov
cmp
cmp
mov
push
and
and
adc
mov
cld
addb
adc
cs
mov
lahf
mov
data16
dec
or
cs
mov
jmp
xor
add
jns
dec
out
xor
divl
test
jne
cs
daa
push
sub
inc
hlt
dec
out
adc
call
mov
or
sbb
jbe
or
add
dec
mov
stos
or
fsub
jl
or
or
inc
nop
insl
scas
in
rcll
cmp
jbe
push
hlt
jmp
insb
aaa
lock
pop
or
push
sub
in
and
push
push
cmp
jle
adc
add
push
or
jae
iret
inc
dec
rcll
cmpsb
idivb
sbb
or
push
mov
sub
ss
hlt
adc
jl
push
clc
push
icebp
or
add
add
je
jb
arpl
fs
jae
add
pop
add
xchg
sbb
mov
clc
lods
cmpsl
mov
sbb
call
fsubrs
shll
jle
mov
add
push
inc
hlt
xor
jl
inc
sbb
jne
pop
movsb
enter
mov
jne
sub
adc
out
mov
sbb
mov
repnz
scas
sub
sub
mov
leave
push
cmp
call
inc
push
xor
xchg
popl
dec
push
jns
push
mov
jne
shrb
push
push
ja
push
icebp
push
or
jle
add
ja
out
add
pop
dec
lock
insb
push
inc
cld
fsubs
add
outsl
adc
aaa
jns
and
loopne
fldenv
sahf
stc
push
lock
mov
shrb
pusha
mov
in
out
in
adc
shll
insb
jae
and
xor
push
cmp
inc
sub
rcll
shl
sar
call
ljmp
push
pop
lods
adc
rorb
sbbl
add
push
cmp
sbb
stos
mov
aam
call
shlb
lock
insl
mov
shr
ja,pt
push
rcll
sbb
pusha
cltd
push
sub
mov
lods
and
push
mov
add
int3
inc
sarl
push
dec
aam
neg
scas
pop
cmp
pop
adc
pop
lea
fists
ljmp
add
outsb
or
mov
add
sub
cmpsl
insl
sbb
dec
outsl
popa
fs
imul
inc
dec
fucomip
cli
jo
outsb
push
push
popa
imul
insb
gs
jg
dec
bound
arpl
insb
outsl
jae
dec
popa
outsb
fs
outsb
insl
popa
imul
jo
imul
push
adc
je
popa
insb
inc
insb
inc
arpl
pop
mov
inc
pminub
mov
je
dec
outsl
jbe
dec
gs
sarb
cmp
arpl
je
jg
fs
imul
cmp
jb
out
jns
ja
pop
ret
add
push
das
shrb
fs
into
sub
mov
and
nop
cld
in
sbb
mov
push
push
add
or
add
outsl
pop
cmpl
scas
inc
mov
push
inc
mov
sbb
lods
mov
ficompl
pop
cld
cmpb
sbb
push
stos
les
push
inc
dec
pop
jb
pop
daa
jne
jne
jmp
ret
into
mov
push
je
mov
aaa
jnp
clc
mov
cli
outsb
cld
cld
pop
mov
mov
add
add
nop
jbe
orb
cld
push
imul
mov
mov
add
xchg
lock
add
cmp
stc
sbb
leave
clc
imul
cmp
xor
add
push
mov
in
daa
fistpll
and
roll
and
loopne
inc
cmp
push
inc
pop
addb
clc
xchg
nop
inc
and
out
and
jb
imull
loop
adc
iret
incb
and
push
sub
cmp
adc
in
loopne
push
movlps
hlt
das
sub
push
push
sbb
lahf
fiaddl
hlt
dec
sbb
clc
pushl
or
jae
lea
mull
cmpl
xor
jns
mov
add
fidivs
and
push
and
xor
dec
loopne
or
sub
lods
lahf
test
or
rol
mov
ss
pop
add
aaa
sub
push
cmp
notb
dec
push
sub
cmp
fdivrl
sbb
std
and
adc
fistps
inc
aas
mov
mov
in
decl
ljmp
mov
add
push
mov
xchg
jg
add
cmpw
jb
push
sbb
cmp
mov
inc
icebp
loope
add
insb
mov
arpl
addr16
add
add
js
add
cmpsl
addr16
pop
arpl
adc
xor
mov
enter
aas
mov
inc
nop
mov
sub
insl
sub
scas
mov
test
nop
add
or
and
dec
dec
addl
xchg
push
jno
jae
cwtl
ds
nop
add
cmpsl
sub
inc
xor
fsubrs
fs
add
sub
dec
mov
pushf
push
jne
mov
pushf
fmuls
bound
sahf
jb
daa
fsts
psrld
testb
add
leave
aaa
and
adc
daa
lea
jb
push
mov
pop
pop
andl
imul
jbe
dec
test
mov
cmpsl
fsubrs
mov
in
jb
pop
lods
mov
sbbb
das
popf
pusha
cmpsl
fcoms
scas
mov
mov
subb
sbb
add
dec
fistpl
adc
lea
jge
inc
ficoms
xchg
xchg
das
aaa
fcoml
bound
pushf
or
cmp
enter
enter
lahf
add
add
mov
mov
rorl
sub
ret
push
add
in
int
aam
dec
pop
pushf
fisubrl
js
daa
incl
call
fwait
andb
mov
dec
mov
in
test
in
push
cmc
cmp
mov
cmp
pop
sbb
fadds
mov
ds
xor
out
cmpsl
mulb
dec
lea
mov
bound
dec
leave
fisttpl
dec
nop
aaa
iret
xchg
test
push
xchg
add
cwtl
adc
mov
cltd
mov
in
pushf
pop
lahf
add
mov
movl
movsb
jbe
dec
in
andl
test
cmpsl
jbe
nop
scas
daa
push
scas
mov
fidivl
mov
mov
out
scas
or
adc
in
jbe
sbb
and
es
sub
pop
shrb
or
push
in
cmp
inc
lds
push
push
inc
pop
pop
in
mov
jbe
aaa
fs
scas
mov
dec
cli
mov
add
fdivl
mov
daa
add
and
daa
daa
add
or
out
add
adc
add
jg
cmpsb
lea
daa
dec
es
sub
add
or
xchg
jle
insb
lahf
imul
add
mov
loope
add
add
add
push
add
or
dec
sbb
inc
dec
inc
jnp
in
dec
dec
push
push
inc
inc
xor
push
dec
pop
dec
add
fldt
lds
push
dec
dec
inc
add
sub
add
fistps
pop
lods
lods
mov
int3
inc
fildl
add
xchg
fldt
dec
or
pop
arpl
dec
or
sbb
inc
or
add
dec
push
dec
sbb
shl
fistl
dec
mov
std
int3
sbb
bound
sbb
sbb
ja
addr16
adc
ret
add
xchg
adc
lods
xchg
mov
jl
sub
stos
js
cmp
js
enter
jg
ss
rorl
push
and
and
cld
incl
aam
xor
and
daa
sub
add
and
cmp
ja
jle
cmpsl
enter
adc
and
and
sub
addr16
mov
lea
adc
cmp
pop
mulb
pop
cltd
scas
sbb
clc
inc
mov
daa
and
daa
outsl
add
adc
mov
mov
inc
fcmovu
bound
xchg
ja
dec
rol
sub
dec
fcmovnbe
xor
push
inc
xor
repnz
push
int
and
pop
in
and
imul
inc
lds
mov
jbe
andb
loop
daa
or
cmpb
or
inc
outsl
rorl
std
stos
mov
pop
pop
push
test
out
out
xchg
mov
xchg
adc
xchg
std
add
sub
fimull
mov
push
xor
mov
dec
inc
daa
add
xor
outsl
fmuls
insl
dec
add
pop
movsl
or
sbb
mov
or
inc
dec
inc
inc
jecxz
pop
lcall
imul
mov
std
dec
pop
dec
jns
iret
and
into
cmp
dec
add
arpl
movsb
fs
add
xlat
add
mov
sarl
in
cmp
andb
imul
lret
jle
add
into
add
mov
xor
rcrl
pop
addl
lods
js
or
mov
add
add
cmp
add
lods
fsubrp
mov
daa
daa
and
sti
push
mov
dec
or
sub
mov
dec
sub
mov
add
fstp
mov
and
mov
out
fucomp
mov
fildll
inc
xor
sbb
fisttpl
and
xlat
testl
mov
and
and
lods
jmp
aas
and
inc
or
daa
fcmovnu
lret
filds
dec
add
pop
sub
mov
or
arpl
aad
sub
fldt
xlat
addr16
ja
fisubrs
jg
inc
jg
jo
jno
inc
inc
les
imul
sub
test
mov
mov
fwait
sub
jmp
repz
jge
imull
cmp
lret
pop
shll
xlat
fnstenv
or
aaa
inc
negb
in
ficompl
xor
test
leave
movl
out
or
xor
sbb
sbb
mov
aas
add
mov
insb
fdivrs
adc
loope
mov
arpl
xlat
sbb
dec
pop
sub
dec
push
lds
and
scas
add
loope
ja
cmpsl
and
xchg
cmpsl
and
out
fcom
repz
stos
call
out
fsubl
les
xor
mov
fsubl
sbb
add
sbbl
sub
imul
shr
stos
fisttps
mov
xlat
or
popa
daa
push
or
cmpsb
out
and
adc
mov
mov
sub
dec
setno
aaa
xchg
ss
dec
aas
sub
divps
push
cmp
andl
sbb
aaa
and
lahf
adc
cwtl
arpl
mov
pop
sti
or
xchg
lret
xor
nop
jno
inc
and
cmpsl
sbb
or
sbb
push
adc
mov
mov
sbb
jae
outsl
sti
pop
mov
mov
ret
jnp
xchg
pop
mov
into
fldt
lret
jg
add
rolb
jp
sub
dec
test
pop
fimuls
daa
fs
inc
sbb
outsb
sbb
dec
adc
clc
ljmp
out
scas
ds
push
sub
mov
das
sbb
mov
jno
arpl
lods
outsl
xlat
xchg
imul
jo
jmp
lahf
int
or
out
jae
inc
out
jg
cmp
jbe
out
pop
jnp
testl
in
mov
inc
push
xchg
push
dec
sub
out
dec
loope
xchg
ss
xlat
push
imul
jnp
mov
fistpl
das
jne
jo
and
pop
sub
dec
mov
stc
aas
dec
dec
mov
daa
pop
xchg
movsb
inc
out
je
xchg
add
add
pop
cmp
pop
and
add
stos
aad
push
xor
mov
loop
or
dec
loope
xchg
add
add
fwait
inc
mov
repz
inc
notb
call
add
cltd
or
push
pop
jbe
adc
mov
leave
loopne
loopne
sahf
sbb
add
and
popl
int
loopne
stos
clc
and
mov
pop
mov
rclb
sbb
pop
mov
mov
orl
mov
cmp
xchg
jg
jbe
ja
andl
adc
inc
mov
mov
dec
pop
xchg
stos
int3
pop
and
xchg
shll
or
jbe
mov
fbstp
mov
pop
rcrb
sbb
out
and
mov
ss
jnp
neg
jbe
and
xchg
ja
fwait
mov
mov
rcl
sti
or
shll
mov
ja
rcll
pop
xor
and
sub
fwait
mov
int
nop
or
sbb
or
shl
enter
jno
jb
inc
mov
scas
cmpsl
adc
outsb
cmp
pop
pinsrw
stos
and
idivb
adcl
xor
sbb
ja
mov
jg
cmp
subb
test
pop
mov
xchg
scas
and
sti
subb
adc
scas
scas
push
in
adc
js
adc
push
in
and
pop
pop
aas
stos
and
mov
imul
cmp
data16
add
scas
inc
fdivrp
fisubs
pop
cvtdq2ps
fmuls
ud0
test
test
sbb
jo
fdivs
pop
aaa
lahf
push
xchg
aaa
cmp
adc
adc
add
or
adc
cmp
addb
xchg
dec
jb
add
pop
hlt
or
add
mov
lods
push
add
movsb
jbe
fwait
inc
push
adc
add
cmpsl
sbb
std
cmpsl
ret
mov
add
or
dec
addb
popf
mov
popf
xchg
inc
xchg
xchg
add
lods
cmp
fbstp
add
faddl
xchg
stos
jl
push
sub
jo
push
out
push
mov
push
add
push
aas
js
or
scas
cmp
movsb
notb
sbb
insl
testb
aas
inc
outsl
dec
pop
and
testb
xor
cmp
mov
sub
lcall
add
iret
xor
int
xlat
xor
imul
add
adc
test
sbb
fisttps
ret
add
mov
mov
cvtdq2ps
mov
add
pop
mov
adc
js
jns
in
adc
clc
ds
jbe
dec
add
lahf
lods
adc
pop
scas
popf
jle
scas
sarb
or
sub
jnp
jmp
dec
es
add
push
outsl
mov
jb
inc
sub
adc
push
lods
push
xor
dec
js
divb
mov
adc
scas
inc
subl
or
faddl
in
stos
test
jae
ret
movl
sbb
lock
fldcw
cmp
dec
outsb
cmp
fs
jno
clc
sub
negl
mov
mov
imul
repnz
icebp
cmp
push
jno
jbe
je
mov
add
fs
jl
jge
subl
mov
cmpsb
mov
loopne
add
sub
pop
out
mov
pop
sub
inc
stos
mov
jge
lret
sbb
pop
mov
insb
std
cmpsb
dec
fiadds
push
xor
push
jo
or
and
insb
jo
std
add
push
dec
paddsw
sub
lret
and
es
es
inc
xor
ss
addb
hlt
test
adc
iret
test
sub
mov
jle
dec
inc
jmp
lock
insl
scas
xchg
cmpb
pop
das
mov
and
mov
mov
jnp
jmp
inc
addr16
inc
pusha
stos
lods
sub
sub
loope
lods
call
pop
and
xchg
push
ds
push
dec
lds
add
pop
jno
add
fdivrs
fisttpl
and
lea
mov
data16
popa
shll
js
cltd
lods
call
xchg
outsb
inc
les
popa
repnz
out
jl
fs
mov
adc
or
les
ficoml
loop
lds
pop
push
pop
and
mov
loopne
pop
pushf
dec
ljmp
xor
rcll
cmc
inc
in
out
lds
push
push
push
inc
loope
repnz
xor
jecxz
xor
push
sub
cmp
mov
mov
jl
mov
lahf
loope
sti
mov
iret
stos
scas
aas
pop
fisubrs
adc
mov
or
dec
lods
cld
cmc
mov
and
dec
jae
mov
push
dec
inc
xchg
scas
pop
outsl
jnp
add
jb
aad
sbb
mov
cltd
cmpsl
rorl
fwait
push
jl
ljmp
dec
loop
fstl
fisttpl
add
mov
push
cmpl
add
cli
and
mov
orl
push
xlat
lods
sub
std
adc
into
out
test
jo
stos
adc
ss
push
adc
loop
mov
pop
cmpsb
push
out
push
dec
test
xlat
and
cwtl
push
sbb
jo
lock
and
pop
rorl
or
or
cld
add
fwait
stos
jle
test
dec
mov
shl
cld
fisubs
sbb
and
scas
push
pop
stos
bound
stos
mov
ja
xor
psrlw
arpl
push
xor
adc
lds
sbb
testl
fs
pop
sbb
xchg
mov
adc
add
pusha
mov
lock
shr
ja
pop
fldt
loopne
sub
sub
int3
sahf
push
sahf
loope
in
iret
subb
adc
inc
cmp
pop
das
add
sub
push
xchg
sbb
xchg
xor
and
iret
imul
out
pop
add
add
pop
xlat
or
into
or
and
out
rorl
pop
pop
sbb
rorb
in
lret
sbb
pushf
stos
out
movsl
jae
loopne
sub
and
out
jle
xchg
push
add
mov
mov
in
sbb
inc
in
inc
call
xlat
inc
popf
adc
pop
xchg
add
jne
lea
call
push
into
adc
mov
fldt
stos
rcrl
lds
sbbb
lcall
jmp
mov
frstor
xchg
add
xchg
add
cmc
ret
shl
sub
out
aas
adc
mov
adc
jne
adc
add
mov
sbb
lcall
pop
pop
sbb
pop
jl
shr
sbb
mov
mov
add
ljmp
mov
sahf
test
aad
pop
scas
jno
cmpsl
cmpsl
je
and
shrl
loopne
jo
cltd
push
jno
cmc
fisubrs
mov
mov
loopne
ja
adc
sbb
mov
shl
adc
fisttps
jmp
and
jo
andb
stos
pop
push
xchg
add
fldl
mov
mov
jmp
mov
xchg
movsb
mov
jp
and
imul
adc
mov
es
xor
sbb
jmp
push
mov
jb
aaa
add
jl,pn
push
dec
ja
cli
mov
adc
cmp
cld
push
stos
adc
bound
lea
cmp
add
inc
add
ss
lret
dec
lcall
and
movsl
test
outsl
mov
stos
sub
sbb
xor
push
cmp
mov
popa
std
cmp
cld
loope
jle
out
adc
mov
push
mov
imul
sub
negl
lahf
inc
jbe,pn
stos
xor
movsl
sti
mov
jno
adc
add
shll
push
jno
mov
jo
xor
sti
subl
mov
mov
jnp
jnp
es
subb
mov
fst
loopne
dec
js
cmpsl
xchg
inc
sub
pop
ja
aas
mov
inc
add
pop
fidivrl
out
inc
sub
clc
mov
out
add
outsl
lea
xchg
xchg
add
cmp
pop
rcll
cmpsb
add
std
xchg
mov
je
aaa
aas
pop
cmpsl
dec
shr
xchg
push
sahf
sbb
jg
aam
in
bound
rorb
sbb
cmp
or
imul
lods
iret
test
fbld
cmc
imul
pop
stos
notb
aas
sbb
adc
test
xor
mov
mov
push
xor
adc
pop
test
test
fwait
sbb
adc
pop
loopne
call
add
sahf
icebp
mov
lea
pop
fildl
jg
sbb
inc
cmp
mov
out
in
mov
loope
adc
mov
inc
add
jge
aaa
loop
add
jge
cld
dec
scas
out
sub
cmc
dec
insl
mov
popf
add
add
sahf
sub
sub
in
movsb
push
sbb
push
mov
adc
ficoml
lock
and
lahf
jo
xchg
adc
or
loopne
xor
les
fdivs
push
negl
sub
sub
notl
aas
sub
jno
ja
mov
dec
adc
in
dec
push
push
inc
cmpb
lds
mov
push
arpl
push
int3
mov
jbe
add
repnz
insl
jl
add
ja
add
cwtl
xchg
ficoms
loope
aaa
dec
jl
js
out
cmc
mov
and
mov
push
dec
setae
sarl
es
sbb
sub
cmp
enter
in
daa
vmovaps
insl
jae
enter
mov
lods
xchg
push
icebp
push
or
cld
push
mov
and
loop
or
dec
pop
pop
adc
pop
lods
lods
add
jb
jnp
inc
xor
jbe
fldt
repnz
mov
rclb
dec
mov
mov
mov
jl
add
and
mov
mov
jbe
icebp
push
cmp
sbb
fldl
push
mov
mov
pop
scas
jnp
std
or
ja
out
pushf
scas
jp
pop
cwtl
lahf
sbb
notl
in
push
out
and
iret
lret
mov
mov
jl
xchg
mov
call
popl
push
mov
dec
adc
dec
sub
pop
pop
lods
adc
adc
repz
lods
and
or
sub
mov
mov
lods
jecxz
cmpsb
jno
and
sarl
mov
in
shlb
dec
add
into
cmp
fadds
sub
adc
bound
adc
aad
outsb
mov
or
xacquire
scas
dec
or
or
cmp
mov
ret
fcoms
iret
cs
jae
sub
std
xlat
std
dec
int
aas
push
pop
xchg
out
cmpsb
in
iret
fs
inc
jne
aad
ljmp
jl
out
add
or
inc
dec
push
int
xor
mull
aam
sub
adc
sub
ss
outsb
imull
and
or
cmp
pop
mov
dec
mov
lahf
lcall
popf
arpl
js
mov
pop
dec
cmp
or
cmc
add
xor
mov
lods
je
or
add
ficompl
add
gs
ss
pushf
jo
mul
cmp
add
xor
call
aad
out
xchg
addb
daa
xchg
mov
xchg
mov
add
loope
push
cld
sbb
aas
dec
inc
xchg
jae
cmovp
inc
dec
jge
adc
daa
mull
or
and
in
lods
dec
jp
xchg
xor
adcl
inc
push
lock
fsubs
in
jecxz
fwait
dec
push
sub
test
sub
and
dec
xor
loopne
inc
push
dec
js
jo
cmovp
jmp
div
cmp
sub
sahf
cmp
and
adcl
push
rcll
push
pushf
es
adc
jge
add
imul
mov
push
les
cmpsl
fidivs
aas
push
mov
or
cmpsl
stos
mov
sub
push
scas
aad
cmp
insb
or
loopne
mov
or
es
sbb
pop
fsubl
call
pop
xor
adc
pop
cmpsl
pop
test
pop
adc
push
divl
sub
cmp
test
fstpl
int
lret
jl
outsb
clc
cmp
sbb
sub
std
in
pop
push
daa
and
cmp
ja
ja
in
loopne
sub
xchg
add
cmp
push
into
or
cmpsb
and
inc
push
ficoms
aas
xor
dec
xchg
cmpb
inc
dec
sub
mov
test
and
aas
adcl
or
fs
nopl
and
push
inc
cmp
jns
imul
pop
jbe
aaa
scas
jmp
add
aad
shrl
test
add
lock
sub
loope
push
inc
pop
push
les
test
mov
mov
adc
cmp
and
iret
dec
in
xor
sub
push
push
lods
push
xor
add
imul
aaa
nop
lahf
jge
add
or
sub
test
add
je
lods
adc
out
sub
sbbl
sbb
loope
sbb
aam
ja
jp
clc
dec
movsb
jne
dec
cmp
cmpb
int3
pusha
mov
jge,pn
divl
xchg
xor
movsb
outsl
or
loopne
shl
out
lods
jecxz
mov
cmp
add
mov
insb
aam
dec
xchg
push
js
add
incb
ss
jno
mov
adc
push
ja
push
nop
pushf
stos
ret
ss
pop
in
cmp
pushf
in
scas
mov
je
loope
not
lods
xlat
mov
add
shlb
outsb
jno
iret
adc
mov
movsl
add
mov
push
call
aam
ds
sub
xchg
je,pn
andb
and
and
mov
mov
mov
in
ja
jecxz
in
mov
add
pop
subl
lods
loopne
sub
inc
pop
jle
mul
fdiv
loopne
out
push
out
jo
ss
mov
sbb
lock
into
fisttpl
and
fcmovnu
dec
lods
dec
test
cmp
sahf
add
or
aas
mov
sbb
ss
mov
fldenv
push
mov
add
or
push
ss
cmp
ss
mov
shrl
inc
dec
adc
mov
cli
sbb
movsb
lahf
xor
ss
jae
movsb
add
out
mov
sub
add
aas
aaa
ss
lret
add
jb
out
fwait
push
cmc
and
push
pop
orl
loopne
rol
adc
jo
ljmp
add
mov
xchg
ljmp
cmp
insb
or
add
sarb
in
mov
cmpsl
pushf
cmp
lea
dec
push
ljmp
xor
sub
mov
cmp
add
lahf
lock
gs
mov
jge
out
pop
jno
in
adc
mov
adc
pop
lret
nop
jecxz
daa
sbb
scas
jmp
push
jb
cli
adcb
dec
out
pusha
xlat
adc
ret
ljmp
daa
inc
pop
jnp
test
pushf
jecxz
ret
adc
cli
and
loopne
leave
cwtl
inc
aas
enter
test
xor
sbb
mov
aaa
addr16
cmp
cmp
push
adc
push
enter
jmp
mov
xor
xchg
add
sahf
repnz
cltd
sbb
shl
lock
dec
out
clc
and
sahf
mov
mov
adc
mov
xor
dec
call
adc
mov
and
xor
lds
mov
sub
lock
xchg
pop
in
mov
scas
cmpsl
sub
das
insb
fcomps
lock
push
add
sbb
jns
arpl
sub
inc
cmp
es
sbbl
loopne
ss
loopne
pop
add
int3
dec
mov
rorb
add
adc
and
cli
cmp
jmp
test
loope
inc
add
xchg
mov
inc
std
add
in
cmc
sbb
mov
test
sub
loope
sub
ret
adcl
or
lods
mov
cmp
test
xchg
out
mov
lea
push
aad
or
jo
jmp
sub
out
pop
adc
jecxz
pop
cmp
jle
fimuls
xchg
or
je
lods
in
lock
daa
lock
xchg
rorb
add
fs
sub
inc
mov
add
or
insl
test
add
jae
mov
test
lcall
pop
ss
xchg
lret
lret
or
popa
lods
xor
inc
pop
nop
mov
pop
xor
add
add
and
jp
mov
stc
cmpsb
mov
xchg
cld
rcl
test
incl
sbb
push
daa
add
loopne
ret
pop
jl
xchg
pop
outsb
jbe
flds
cmp
mov
loopne
pusha
push
je
pop
sbb
pop
addr16
das
les
jg
addr16
sti
stos
push
popa
mov
cld
sub
movsl
cmp
fstpl
or
cmpsb
pop
dec
xorl
mov
orl
sub
jge
sub
ret
xchg
into
xor
push
cwtl
in
jmp
push
pop
lret
flds
test
sub
sub
ja
daa
push
popa
mov
and
inc
lea
ja
mov
cmp
jmp
pop
mov
stos
sbb
jne
mov
fyl2xp1
lret
adcl
ja
xor
jb
sti
cltd
xor
and
xor
nop
pop
jmp
iret
push
sbb
ss
sub
arpl
or
aas
shll
mov
mov
sub
push
push
mov
jns
push
dec
xchg
leave
cs
repnz
lret
fld
adc
lahf
inc
inc
stos
loope
loopne
int
pop
xchg
and
js
imul
xlat
adc
pop
js
cltd
adc
icebp
inc
add
jle
and
push
add
add
lds
cmp
xor
or
imul
mov
fldenv
lods
fistps
mov
pop
pop
jnp,pn
cmpsb
or
leave
bound
add
ret
pop
sub
es
add
pop
out
push
push
sbb
mov
xor
rorl
pop
arpl
add
sub
jns
mov
sbbb
sub
lods
test
out
sbb
stos
pop
jl
pop
add
js
jb
cmp
pop
xchg
adc
jnp
imul
sub
in
fnstenv
loop
fadds
adc
mov
add
mov
out
mov
or
mov
cwtl
mov
movsl
jecxz
add
sti
data16
xchg
rolb
cmp
shll
std
xor
cmp
jnp
aad
xchg
mov
dec
orl
arpl
mov
dec
push
xor
cmpsl
pop
push
sbb
jns
sbb
ds
xlat
sub
pop
dec
or
fstps
cs
loopne
pop
adc
cmp
int3
sbb
cmp
fadd
or
stc
sub
mov
fdivrl
sbb
stos
adc
loope
push
mov
xor
test
in
inc
and
in
xchg
in
adc
mov
data16
out
push
lock
adc
adc
or
inc
mov
je
xor
or
loopne
test
adcl
pushf
cld
pop
movsl
mov
leave
xchg
mov
sub
je
pop
push
mov
loopne
popa
pop
and
pop
cmp
loopne
shrb
pusha
xor
jmp
movsb
cmp
mov
add
add
call
add
mov
jecxz
bound
and
orl
pop
icebp
insb
iret
pop
iret
pop
popf
mov
fadds
add
mov
xchg
arpl
add
pop
cwtl
bound
mov
movsb
sub
jnp
js
sbb
out
xor
arpl
xchg
xlat
mov
popa
adc
xchg
arpl
mov
lcall
insb
rclb
psubsb
daa
cmc
push
das
scas
fwait
cs
adc
iret
dec
jo
lods
mov
sahf
cmp
lock
and
mov
sbb
aam
imul
pop
insb
adcl
xor
cmp
pushf
mov
cmp
add
pop
push
jo
push
and
aam
stc
in
or
lock
xor
ss
xchg
inc
fildll
in
push
movsl
or
fadd
push
js
mov
push
and
cmp
add
in
fcom
clc
sbb
cld
cmp
out
movsl
xchg
rolb
inc
push
and
jb
or
sahf
pop
sbb
xchg
mov
loope
mov
or
in
mov
push
shl
ja
ror
mov
push
adc
fsubrs
jl
pop
outsl
fistpl
and
sub
fcoms
jbe
hlt
mov
pop
add
or
shlb
fsubrp
dec
sub
xchg
jne
clc
cmp
pop
jae
add
dec
cmc
lea
and
dec
mov
mov
ret
inc
jne
cmp
sub
les
add
sbb
pop
ljmp
cmp
inc
popa
test
fldt
loopne
lods
aaa
jle
and
mov
xor
pop
iret
enter
add
fsub
scas
popa
nop
jg
jns
sbb
push
ja
cmp
or
adc
movsb
sbb
push
out
sub
scas
cmp
lcall
repnz
sbb
jno
or
stos
pop
scas
insl
insb
rorb
daa
pop
jns
aas
adc
mov
movsb
je
shlb
jo
ss
pop
pop
pop
lock
xor
int
pop
popa
ja
outsl
enter
ret
pop
insb
mov
xchg
and
shrb
loopne
stos
xchg
sub
insb
pop
jo
cmpsl
pushw
lods
push
push
cli
rorl
sbb
sbb
mov
xor
and
outsl
add
loope
insb
les
cmpps
dec
inc
jae
inc
dec
and
cmc
and
das
mov
adc
outsl
pop
mov
mov
mov
movsb
in
orl
lods
push
das
jle
cmp
mov
adc
push
xchg
call
jg
cmp
rep
neg
push
mov
testb
push
xlat
daa
pop
mov
push
lret
out
loopne
daa
into
cwtl
sbb
mov
call
inc
sub
adc
stos
jecxz
out
jae
add
icebp
pop
push
sar
out
add
and
lahf
add
xchg
cmp
push
cmpsl
rclb
fbstp
or
clc
push
inc
js
jns
cld
out
sub
out
inc
mov
scas
cli
dec
add
mov
cli
inc
add
rorl
xor
imul
mov
pop
sub
mov
into
or
add
lock
and
dec
fs
loopne
orb
dec
add
jnp
testl
fsubl
fwait
std
add
sbb
inc
std
lahf
loope
adcl
pxor
sub
sub
dec
mov
sub
lds
sub
in
pop
cmpsb
push
test
and
pop
push
push
scas
adc
jl
or
stos
pop
xor
sbb
pop
in
scas
cld
call
push
nop
dec
lods
das
inc
cmp
fsubrs
sub
mov
rcrb
pop
dec
dec
jle
sub
rolb
sub
push
adc
fs
dec
cmp
gs
lods
mov
sub
outsl
and
int
into
xor
mov
je
inc
ss
or
daa
hlt
inc
pop
addb
inc
mov
subl
sbb
lahf
popa
push
jno
sbb
sbb
std
add
fistpll
or
sahf
rorl
dec
arpl
sbb
jno
test
outsl
mov
push
testl
in
and
add
lret
mov
in
out
in
and
clc
sub
sub
mov
les
sub
lods
push
add
sub
and
pop
mov
add
add
inc
lods
test
push
jecxz
call
scas
outsl
or
cmp
shl
and
xchg
lahf
push
and
cmp
and
test
xor
jp
iret
or
xor
mov
and
shrb
adcb
pop
jp
das
daa
daa
fwait
or
adc
xor
lcall
movsl
cli
shlb
ret
insb
adc
scas
and
dec
popf
jnp
ret
add
fwait
jle
loopne
fdivrl
xor
dec
in
lods
imul
jl
xor
push
into
enter
add
xor
movsl
movsb
cmp
fsubrp
rorl
fdivr
repnz
lods
cmp
jno
add
fldenv
add
cmp
imul
lods
sbb
push
or
jnp
add
and
dec
mov
mov
fisttps
jecxz
sbb
push
sahf
jecxz
dec
test
mov
cs
xchg
cltd
push
dec
lcall
icebp
or
fs
das
and
or
fsubrs
add
pop
cwtl
push
lahf
mov
jae
inc
mov
addr16
inc
and
sarb
push
push
hlt
sbb
outsb
test
rol
mov
adc
push
sub
rolb
fildl
pop
out
and
std
ret
test
sahf
test
sbb
fmull
inc
out
jnp
add
dec
int3
pop
cltd
push
mov
add
push
imul
jne
or
mov
lock
out
icebp
rorb
add
je
push
xor
ss
arpl
dec
xor
aas
add
cmp
ja
insb
pop
mov
dec
addr16
orb
outsb
jae
push
fwait
ret
jge
pop
dec
xchg
decb
add
or
sbb
push
jo
add
stos
dec
into
clc
inc
xchg
add
cmp
aas
icebp
add
xor
mov
xchg
xchg
lret
movsb
lret
xor
xchg
inc
lret
in
lock
jmp
addl
fisubrs
rclb
ds
xor
mov
pop
ss
adc
dec
stos
fs
aas
dec
push
ljmp
or
inc
fadds
or
adc
movsb
pop
mov
pop
push
lock
rcrb
jecxz
mov
xchg
loope
push
sbb
into
inc
in
inc
push
xlat
mov
out
pop
add
and
add
add
and
xorb
mov
xchg
arpl
mov
lret
out
rclb
fistl
gs
stos
mov
pop
pop
sub
add
or
sbb
pop
push
push
inc
sbb
pop
sbb
or
outsb
or
loopne
mov
sbb
inc
dec
inc
add
push
add
add
push
add
loopne
shlb
sbb
fldl
out
insb
test
pop
pop
sub
dec
jg
test
int3
inc
cmp
xor
movsl
popa
lds
mov
sub
jmp
lock
push
daa
loop
adc
imul
cmpxchg
push
sbb
mov
pop
sbb
or
fsubl
xchg
dec
popf
mov
fstps
stos
js
lods
cmp
shr
mov
sbb
and
mov
addl
sti
roll
je
pop
jge
addb
mov
sbb
shrl
jecxz
cmpsb
nop
adc
cmp
das
mov
lea
sahf
mov
js
and
fidivs
jp
sub
add
xor
out
adc
fadd
sbb
and
outsb
or
sbb
cmp
lds
and
xor
pushf
adc
mov
lods
mov
sub
sub
jnp
add
hlt
cltd
jbe
lods
lahf
add
sbb
mov
and
add
test
data16
sub
lcall
push
or
aas
add
or
nop
push
aam
sbb
or
imul
cmp
bound
es
cmp
je
ja
and
loope
sbb
push
popa
pop
scas
jl
sbb
mov
mov
sbb
dec
fs
xor
sbb
and
shl
hlt
cld
insb
lods
pop
mov
fisubrl
dec
icebp
add
lods
mov
mov
insb
mov
movl
mov
push
jns
xor
int
add
imul
rolb
pop
xor
insb
cmp
mov
jmp
popa
test
add
loop
sbb
inc
mov
mov
popf
jg
test
and
inc
aad
movsb
cs
cs
xchg
lock
nop
jecxz
jae
lock
clc
mov
insb
pop
push
es
or
pop
loope
cwtl
aaa
aaa
push
adc
leave
neg
fcomps
lahf
rcr
in
and
or
lock
xchg
jno
into
popf
mov
or
mov
dec
push
sbb
sbb
mov
inc
fidivrl
add
and
int
xor
pop
add
xor
aad
mov
jmp
push
std
sbb
adc
xchg
movsb
sbb
repz
sub
jne
jmp
int3
push
add
ficomps
stos
sbb
sub
insb
xlat
mov
or
jecxz
push
push
pop
mov
push
push
or
sbb
pop
inc
cmp
inc
lods
fidivrs
aaa
push
scas
pop
sahf
stos
pusha
xor
xchg
sub
adc
dec
das
add
mov
dec
scas
clc
sahf
fistpll
mov
loope
xor
mov
pusha
adc
outsb
adc
es
mov
inc
ja
pop
dec
test
rcrb
outsb
shrb
test
js
sbb
or
iret
stc
mov
aas
adc
lret
sbb
mov
mov
and
aas
push
fstps
add
adc
xchg
fs
add
or
push
movl
ss
sti
je
out
xchg
mov
inc
into
pop
ss
ret
inc
pop
inc
push
movhps
in
or
jae
sub
outsb
jns
xlat
jno
or
cli
lea
test
xor
inc
outsb
push
xlat
inc
mov
xchg
inc
and
add
mov
xchg
insb
in
push
test
lahf
jns
jno
sbb
jmp
jo
add
push
ret
adcl
jp
or
or
pop
xor
or
sub
xor
adc
inc
mov
jge
and
sar
xlat
mov
pop
push
stos
pop
dec
cmp
mov
cmpsl
and
pop
jo
pop
jb
inc
ja
add
xor
scas
mov
cmp
add
sbb
outsl
sub
out
dec
bound
cmp
mov
das
mov
loope
gs
mov
clc
cwtl
push
fs
dec
in
and
gs
sbb
mov
jl
scas
push
xlat
cmp
jns
adc
pop
xorl
add
push
jecxz
or
mov
inc
je
data16
sub
lahf
je
fmull
add
cmp
dec
cmp
jo
xchg
push
pop
pinsrw
adc
xorl
das
add
jno
adcl
sarl
insl
aad
push
movsl
push
js
arpl
lret
pop
cmpsb
adc
inc
and
jmp
mov
jl
js
enter
call
test
dec
popa
aad
loop
and
pop
rol
mov
aaa
and
dec
leave
cmp
loope
sub
sub
sbb
xchg
leave
movsb
sub
jbe
lret
gs
ret
repnz
cmpsb
inc
cli
mov
push
pop
ret
scas
js
sbb
cmp
sub
add
and
arpl
mov
inc
jmp
repz
jp
scas
sti
loope
pusha
push
aad
push
jp
and
lock
pop
scas
repz
mov
inc
sub
pop
mov
fcoms
fcoms
cltd
pop
pop
es
xchg
and
in
clc
add
addr16
fisubs
out
rcll
movsl
mov
addr16
sbb
cli
sbb
add
add
pusha
sub
or
in
mov
jmp
shll
icebp
call
xor
popa
aad
popa
mov
pop
xchg
jno
sbb
imul
jg
pop
cmp
sbb
inc
cmp
mov
mov
xchg
iret
loope
imul
or
push
pop
sub
aaa
hlt
mov
push
fldenv
mov
jg
or
je
and
andb
or
mov
and
outsl
jmp
or
or
out
shr
mov
and
add
cmc
pop
pusha
jecxz
and
test
pop
call
cs
daa
insl
int
mov
shrb
and
mov
and
js
add
jb
pop
jmp
pop
in
cmpsb
je
icebp
dec
dec
xor
int3
frstor
movsb
pop
ror
sub
sbb
out
xor
adc
push
js
push
and
push
stos
ret
mov
mov
cmp
jns
or
inc
add
int
into
push
or
lret
iret
popf
dec
jo
loope,pt
insl
pop
fimuls
sbb
or
cmp
add
cmp
push
movsl
sarb
sub
xor
jno
mov
mov
sub
sub
sti
push
rorl
std
insb
add
popl
dec
loop
stos
mov
xor
cs
imul
push
pop
pushf
shll
jnp
inc
lcall
push
movsb
inc
pop
fsubr
or
and
fimuls
dec
dec
dec
insl
mov
push
pop
out
and
cmpsl
push
loope
adc
inc
add
cmpsb
test
aad
jp
test
pop
mov
mov
mov
icebp
rcrb
adc
stos
dec
loop
or
ret
jge
bswap
loopne
push
cmp
enter
xor
jge
add
mov
jnp
pop
push
push
lret
loopne
push
or
push
and
mov
int3
xor
sub
out
cltd
mov
xchg
or
arpl
ror
lea
imul
in
aad
mov
sbbl
shlb
inc
mov
mov
stos
inc
ret
jae
movsb
jge
push
mov
fsubrl
movsb
jmp
mov
mov
push
lds
pop
adc
loopne
inc
loop
xlat
cmp
sub
add
lods
stos
int3
test
jns
mov
sbb
cmp
mov
scas
dec
enter
iret
in
jmp
xlat
jecxz
filds
je
inc
sbb
sub
push
push
mov
cmp
mov
pop
daa
add
xchg
sub
pop
leave
jno
adc
jge
cmp
pop
push
in
or
or
inc
xor
jp
dec
xchg
sbb
xor
arpl
insb
popf
mov
out
mov
or
push
pop
nop
test
cmp
mov
ret
dec
ret
cmp
dec
daa
push
es
inc
ficompl
jne
loopne
es
shll
arpl
sub
test
cmpsb
push
sbb
outsl
movsb
or
nop
sahf
test
scas
lock
sub
and
insl
jne
mov
inc
mov
inc
jo
xor
sbb
mov
stos
mov
inc
mull
loop
jb
inc
inc
fcomps
in
mov
cmpsl
in
clc
insb
sbbl
jo
cmp
sahf
in
inc
cmp
sub
ret
push
mov
xchg
imul
repnz
mov
pop
and
add
test
lods
test
jecxz
pushf
loopne
imul
and
xchg
cmp
mov
sbb
adc
shl
push
stc
test
test
and
stos
mov
loopne
push
call
jbe
push
pusha
xchg
fcoms
cmc
pop
cmp
cmp
mov
mov
mov
jo
repnz
scas
orl
add
stc
mov
xchg
jmp
and
stos
adc
mov
inc
outsl
sti
shlb
daa
xchg
push
test
sub
ss
fldenv
push
ljmp
xchg
push
or
add
out
call
ucomiss
dec
add
cmp
push
adc
xchg
in
test
stos
and
test
cmp
int
adc
cli
jnp
aam
ds
sub
movsl
call
mov
bound
call
in
es
add
inc
lods
loopne
mov
pop
add
add
sub
lea
repz
popa
add
in
fdiv
or
xor
lods
add
mov
cltd
pusha
and
bound
lock
cmpsb
sub
xor
sbb
and
and
jle
mov
sub
out
test
pop
lcall
push
adc
out
inc
mov
dec
jb
jne
xchg
mov
xchg
mov
fst
ffree
or
lods
gs
lea
iret
movsl
inc
adc
fsubs
imul
sbb
lods
mov
in
cmpb
sbb
xor
cs
dec
xor
push
push
add
add
jno
inc
fsubrl
xchg
xchg
jno
jge
push
pop
clc
inc
dec
mov
mov
jno
add
add
aaa
add
and
mov
mov
ja
inc
xor
in
movsb
xor
jle
cwtl
aaa
movsb
loope
jle
push
aad
js
push
outsb
and
jecxz
and
add
jge
lds
ljmp
mov
js
mov
mov
jmp
add
fildll
jle
inc
dec
test
lret
leave
andb
sbb
jle
fnstenv
add
add
inc
stc
insw
adc
xor
sub
scas
jno
ja
lods
and
xor
ret
or
movsb
fldcw
lea
scas
ljmp
xchg
mov
aam
or
outsl
mov
fs
dec
movsl
insl
jne
add
ds
inc
cld
or
pop
push
shl
in
jnp
mov
xor
iret
add
inc
jmp
iret
or
inc
mov
dec
js
mov
loope
sub
rclb
pop
xchg
cmp
and
and
ret
rcrl
xchg
leave
ja
xor
icebp
adcl
push
lock
or
ror
inc
into
add
xchg
add
xor
xor
ja
add
pop
aaa
test
mov
adc
psubusw
mov
mov
add
rorb
xlat
bound
inc
dec
and
fstpl
mov
sub
xchg
ja
outsl
sbb
add
popf
xor
push
xchg
daa
ret
loope
push
in
jns
js
sbbb
out
and
loope
ss
cmc
lock
dec
repnz
pop
pop
cmp
fbld
sbb
jns
scas
push
fcmovne
sbb
out
xlat
roll
and
int3
dec
mov
dec
sahf
add
pop
fidivrs
xor
lahf
js
nop
leave
mov
in
addl
jo
fnstsw
pop
or
xor
jno
sub
jnp
aam
ffree
sub
mov
and
bnd
shll
sbb
lock
sbb
pop
mov
js
push
sub
adc
push
jle
adcb
and
mov
pop
sub
xchg
das
sahf
mov
xor
mov
mov
call
and
cmc
mov
enter
notb
fiadds
imul
pusha
pusha
int3
mov
fiaddl
add
and
dec
add
sub
mov
in
mov
icebp
add
sbb
js
fdivp
fldt
movd
orl
sub
ret
movsb
xchg
pusha
pop
jecxz
sbb
gs
dec
xchg
and
jle
lock
ret
adc
xchg
imul
es
jnp
out
and
mov
sub
rcr
inc
mov
in
sbb
mov
push
stos
inc
repz
mov
mov
add
mov
lahf
aaa
or
icebp
adc
int3
js
jbe
sbb
dec
lcall
pop
jns
inc
add
cmp
or
or
outsl
add
aad
xchg
push
mov
or
ret
call
es
push
jb
push
xor
push
mov
jl
rclb
out
inc
cmp
push
out
and
lret
adc
jns
dec
sub
rol
sub
mov
push
fsubs
stos
addl
mov
ja
in
sub
jno
dec
sub
inc
cmp
outsl
pop
push
dec
rcll
je
jp
xor
cmp
mov
mov
mov
cltd
jnp
add
cld
ljmp
sbb
cmpsl
out
and
push
add
inc
dec
and
cmp
lds
rcrl
and
jnp
mov
xchg
in
add
imulb
push
in
pop
xorb
push
push
stos
lds
lahf
xchg
pop
addl
mov
xchg
cmp
int3
jo
call
add
sub
xchg
cmpsl
stos
and
divb
mov
imul
pmuludq
inc
add
iret
jne
mov
sbb
jl
faddl
mov
xchg
jb
and
cmp
loop
jb
pop
out
inc
push
add
cmc
mov
mov
cmp
dec
rclb
sub
push
ja
incb
cmpsl
xor
aad
inc
sbb
outsb
jo
popf
push
popf
or
dec
daa
popa
arpl
push
adc
jp
push
cwtl
aaa
mov
and
nop
call
lods
mov
lea
shll
rolb
jle
iret
xchg
jl
add
inc
lea
pop
outsb
mov
push
mov
or
test
scas
xlat
pop
stos
cmp
jnp
pop
cmp
pop
or
andl
test
bound
xchg
or
mov
lea
insl
push
psraw
jnp
add
je
sbb
xchg
add
loopne
jo
lods
inc
push
adcb
sub
mov
icebp
aam
insl
sti
push
mov
cmp
inc
jno
mull
dec
sub
dec
cmp
fwait
jne
and
aam
adc
cmp
sbb
and
popf
fiadds
xlat
nop
imul
mov
jle
push
mov
and
stos
icebp
leave
cmp
movsl
pop
fldl2t
inc
sub
cmp
daa
jns
jg
xor
pop
sub
insl
iret
push
sub
mov
sub
sbb
cmp
das
lds
fisubrl
out
sub
lds
inc
xor
xchg
xchg
pop
sbb
inc
insb
fisubrs
sub
xor
xor
add
lcall
add
mov
cltd
jle
stos
sbb
jle
lods
sub
in
test
aaa
cmp
mov
insl
xchg
or
xor
gs
jb
mov
ja
ja
rcrb
jo
adc
insb
les
inc
jno
inc
pop
arpl
test
mov
ljmp
push
or
or
into
std
fldcw
ss
dec
stos
jbe
in
add
xchg
cmp
sub
int3
pop
or
jle
je
les
pop
add
dec
jge
mov
adc
aaa
push
add
stos
push
jl
cmp
xor
jecxz
out
ret
ja
ret
outsl
in
mov
push
icebp
or
pop
ret
aaa
mov
cltd
xchg
cmp
fdivrl
xor
ret
outsl
mov
jno
jle
out
mov
lods
jmp
add
loope
adc
xlat
and
aad
mov
mov
sbb
jo
adc
jecxz
push
push
mov
pop
sbb
cmpsl
outsb
je
addr16
loope
ret
dec
jmp
int
ret
repz
mov
and
mov
sbb
mov
adc
sbb
jae
arpl
push
pushl
mov
repnz
int3
and
push
inc
testl
xlat
adc
int
and
inc
inc
shrb
sbb
jecxz
aad
mov
xchg
fiadds
add
dec
push
out
inc
jle
xchg
dec
xchg
jecxz
std
sti
add
aaa
jmp
xchg
and
fcmovnu
jmp
pusha
or
mov
ja
push
or
push
imul
popa
test
call
popa
sub
jmp
in
push
push
scas
fcoms
and
mov
pop
push
jl
add
adc
cmp
dec
leave
add
pop
aad
mov
rorl
pop
sub
adc
daa
ret
pop
ret
adc
fdivr
push
cmpb
gs
icebp
sti
popa
mov
mov
xchg
fldl
cmp
pop
dec
sbb
jmp
aam
pop
jmp
mov
das
xchg
or
xor
cltd
lret
pop
sbb
sahf
bound
lods
mov
sbb
outsb
and
or
test
jl
add
push
pop
lods
pop
inc
dec
stos
xor
sub
outsb
pop
jo
lea
mov
mov
lahf
jg
insl
sbb
cs
and
stos
xchg
jge
sar
dec
out
add
sbb
mov
inc
jp
stos
xchg
test
pop
sti
hlt
popa
shr
subl
data16
test
lods
rolb
cmpsl
out
lods
mov
add
or
xor
or
test
out
dec
xchg
les
dec
jecxz
ret
and
sbb
mov
jo
push
js
jne
icebp
sbb
cld
push
xor
xor
jecxz
mov
js
lcall
dec
sub
and
stos
pop
xorl
js
sub
enter
mov
ss
rcl
les
sub
es
push
add
jne
std
xchg
jle
test
bound
rcrb
aam
xor
dec
ja
mov
je
add
mov
hlt
cwtl
or
pop
mov
mov
xchg
clc
inc
push
jmp
dec
jb
adc
mov
xor
int
or
rsqrtps
orl
ljmp
sub
sahf
xchg
jle
adc
movsl
adc
add
mov
mov
bound
mov
lea
jo
fsub
xor
add
dec
or
add
sbb
pop
js
adc
and
xchg
sub
ljmp
loopne
xchg
ret
cmp
or
jge
and
shrb
mov
mov
push
out
and
lret
add
xlat
das
loopne
sub
dec
xchg
pop
sub
push
test
or
sub
cmp
popf
jo
xchg
js
sub
adc
ret
or
out
sub
jmp
cmp
inc
sub
inc
ret
lret
inc
xlat
sub
in
daa
mov
inc
push
sub
add
inc
cmp
inc
lcall
ljmp
jg
pop
aad
jb
and
ret
or
xor
mov
out
loope
adc
negl
add
in
adc
xor
lret
out
test
cmp
sub
xor
sub
pop
pop
sti
shr
cld
pop
ret
xchg
jecxz
outsl
and
lods
push
dec
scas
dec
inc
pop
enter
add
iret
jbe
push
jl
add
mov
add
dec
popf
sub
inc
jecxz
sbb
jge
jo
popf
test
les
fldl
inc
shlb
sub
imul
loope
dec
insb
mov
xor
xchg
dec
es
jo
xchg
scas
mov
lods
sbb
xchg
sbb
aad
add
or
pop
cld
push
push
pop
mull
fstpl
jmp
xor
imul
inc
ret
add
sarb
xor
dec
add
dec
and
mov
int
aad
popf
jl
xchg
outsl
sahf
movsb
adc
jnp
arpl
imul
pusha
pusha
rcl
ud0
mov
movsl
out
mov
pusha
push
mov
mov
mov
adcl
lods
and
insl
jne
dec
xor
mov
rclb
sti
ret
iret
cmp
inc
xor
sbb
cmc
movb
mov
inc
adc
test
pusha
pop
sbb
fisttps
add
inc
sarb
or
xor
dec
in
shlb
or
inc
pop
scas
push
xchg
dec
loope
jae
bound
mov
cmp
std
aas
pop
jne
pop
addr16
sbb
jecxz
xor
or
mov
cmp
aam
mov
pop
sbb
xlat
add
pop
mov
push
enter
in
cmp
sub
mov
lcall
cmp
adc
test
jne
jns
add
xchg
jno
imul
mov
enter
mov
mov
fdivrl
popa
adc
push
xchg
movsb
sbb
mov
arpl
jmp
fcoml
pop
pop
das
jno
sbb
sbb
jns
ret
outsl
sub
clc
jp
add
jbe
rcl
lds
outsl
mov
push
sbb
repnz
jle
mov
jp
sbbl
sbb
sbb
dec
iret
addb
aas
inc
inc
xor
rclb
fimuls
mov
js
outsl
jge
pop
inc
ret
adc
xchg
adc
jo
sub
testb
mov
sbb
pop
cltd
jg
xlat
stos
push
sub
das
sbb
data16
jl
clc
cmpsb
push
jp
leave
and
sbb
jne
push
mov
sub
push
push
jae
into
addb
cmp
mov
adc
shlb
mov
add
inc
and
cs
and
mov
xchg
ja
pop
lock
mov
xor
xor
add
sbb
xchg
icebp
outsb
add
fucomp
test
jge
sbb
or
dec
ja
fisttpl
pop
loopne
mov
aas
pop
sbb
add
loope
inc
loop
fisttpll
lods
and
cs
daa
fdivl
xlat
mov
lret
or
xor
das
adc
out
cmp
add
lods
jmp
or
fdivl
or
mov
das
mov
shll
test
add
ja
lahf
add
stos
popa
das
sahf
je
out
das
pop
xor
addr16
mov
or
inc
sarb
inc
movsl
dec
cmp
lret
jmp
test
and
xchg
loopne
jae
and
shl
aas
mov
cmp
adcl
pop
add
and
jmp
cld
inc
iret
mov
rcl
mov
sbb
mov
ja
and
lea
push
add
out
sbb
mov
bound
cltd
pop
test
sub
mov
or
cmpsb
add
pusha
fdivrs
movsb
test
cmpsb
das
xor
mov
lds
jmp
add
jo
je
xchg
movsl
fmulp
pusha
xchg
add
push
sti
mov
loopne,pt
aad
pop
adc
addr16
in
and
rcrb
jecxz
cltd
mov
and
inc
push
sbb
jecxz
aam
out
in
paddd
loop,pn
add
push
push
test
out
pop
push
dec
outsl
iret
push
xchg
jecxz
pushf
imul
lods
xor
fwait
adc
imul
or
test
int3
sub
pop
addb
inc
daa
sti
pop
lea
and
add
adc
repnz
daa
enter
add
in
and
sbb
daa
fincstp
and
xchg
cmp
push
std
pusha
jno
mov
repz
movsb
mov
or
fadds
pop
and
dec
and
mov
dec
and
mov
test
inc
mov
imul
push
subb
iret
cmp
adc
add
push
repz
mov
xor
push
add
sbb
sub
jge
data16
dec
je
jmp
mov
xor
icebp
lcall
jno
lea
xchg
gs
ret
mov
shr
inc
sub
daa
scas
or
daa
cmp
iret
ret
adc
ds
sbb
cs
shlb
xchg
and
shrb
jbe
es
addl
sub
dec
mov
jb
sub
xchg
mov
pop
arpl
pop
mov
test
push
ret
outsl
andl
pop
sbb
ds
sbbb
cmp
in
xchg
mov
clc
mov
xor
aas
xchg
shlb
ret
fwait
add
ds
lds
xor
fnsave
aam
clc
sub
lock
jno
mov
pop
lret
neg
movsb
pop
lods
jo
sbb
push
cmp
nop
sub
mov
pop
add
xchg
loopne
shll
aam
ret
inc
aaa
addb
mov
and
pop
subl
add
sahf
sub
popa
xchg
out
push
adc
xor
dec
inc
daa
repz
outsl
ss
xchg
sub
sahf
mov
pop
push
das
aaa
movsb
cmpsl
pop
ficompl
add
dec
add
mov
je
and
jno
xchg
fistps
jo
flds
mov
jg
cmp
test
stos
and
adc
sbb
es
test
addb
lods
xchg
les
je
shlb
pop
aas
push
mov
insb
arpl
hlt
mov
cs
mov
and
cmp
mov
mov
iret
push
add
xor
sbb
add
scas
shlb
or
and
push
or
sbb
lods
insb
jge
movsl
xchg
outsb
mov
pop
and
aam
sbb
adc
test
bound
mov
xor
adc
js
jo
fidivrl
push
pop
and
inc
add
inc
adc
jg
arpl
adc
into
pop
dec
mov
mov
dec
xor
shl
adc
lods
scas
bound
push
mov
popf
dec
add
cmpsl
adc
jecxz
je
inc
fcomps
and
jb
xchg
cmp
mov
outsb
push
popf
mov
add
mov
mov
xor
inc
fmuls
pop
cmp
push
push
ljmp
jmp
pop
sub
cmp
or
dec
sbb
les
mov
dec
or
mov
fidivl
cmpsl
push
adc
push
push
lcall
icebp
dec
loopne
shrl
pop
cmp
insb
arpl
sub
aas
movsl
add
aad
lcall
add
cmpl
xchg
cmc
inc
or
or
jno
inc
pop
xor
bound
fcomps
sbb
ficoml
cli
cmp
enter
rcrl
fsts
ret
and
add
jge
xor
mov
cmp
scas
mov
or
adc
pusha
inc
data16
adc
xor
das
inc
adc
inc
call
mov
fdiv
fdivr
aas
push
mov
scas
push
int3
mov
arpl
fs
jge
fadds
push
dec
sbb
mov
mov
add
and
inc
jmp
dec
push
daa
cwtl
icebp
out
pop
sub
sbb
ds
js
ret
movsb
adc
xchg
add
push
mov
and
jmp
xchg
je
or
pmovmskb
xchg
jnp
fnsave
fidivl
insl
sbb
enter
inc
fcoms
xor
sbb
adc
orl
ja
jmp
xchg
fbstp
or
dec
repnz
pop
pop
jmp
push
ret
push
cmp
cmc
sub
add
scas
adc
pop
push
cltd
test
popf
and
aam
mov
lcall
mov
iret
bound
loope
pop
add
sbb
xchg
cmp
hlt
lods
xchg
xorb
mov
sub
ljmp
push
jg
orb
movsl
iret
loopne
loop
aad
xor
sub
add
jae
lret
push
sub
or
mov
and
dec
stc
cmp
jne
cmp
leave
or
xor
jg
sub
xchg
jns
or
push
iret
imul
ja
add
arpl
jae
insb
mov
ret
ja
and
xchg
or
pushf
shrl
push
or
iret
popa
pusha
mov
lret
mov
cmpsl
and
fsubl
cmp
or
or
iret
jmp
icebp
sbb
sarb
pop
cmc
popa
sbb
jecxz
bound
or
jge
adc
test
pusha
punpckhdq
mov
test
xchg
pop
or
dec
adc
mov
ja
hlt
loopne
mov
push
shld
mov
inc
dec
add
rolb
mov
jno
sub
outsl
and
cmpsl
out
das
xchg
ret
mov
pop
shlb
daa
out
xchg
lea
movb
pop
inc
dec
cmp
lea
pusha
sbb
orb
jb
dec
jl
icebp
fsqrt
sub
cmp
test
lock
add
arpl
inc
das
ds
jmp
cltd
xor
icebp
push
jmp
xor
repz
rcr
sti
rclb
add
pop
sbb
mov
or
add
pop
sti
and
cmpsw
cmp
dec
cmp
subb
rcrl
in
orb
add
aad
roll
xchg
lods
inc
test
xor
insl
xchg
ja
fsubrs
orb
dec
xor
add
sbb
add
push
ss
push
xor
xor
sub
dec
and
push
adc
rolb
add
rolb
mov
les
pextrw
jno
in
xchg
pop
xchg
lods
xchg
pop
jmp
sub
and
push
popa
fldt
push
outsb
call
lret
inc
add
fld
mov
stc
orb
cmp
test
add
sarl
cmpsb
or
iret
jno
pop
mov
mov
jp
in
clc
pop
inc
scas
pop
and
cmp
xor
mov
xchg
and
roll
add
lret
rolb
std
xchg
es
jg
movsl
sub
nop
jb
inc
arpl
sbbb
arpl
lahf
jp
outsl
test
add
mov
mov
xchg
push
adc
int3
sub
and
mov
xchg
jo
daa
sbb
xchg
aad
inc
or
xor
cmp
das
push
cmp
lea
jno
cmp
sbb
pop
sub
arpl
mov
inc
das
pop
push
hlt
add
cmp
iret
pop
roll
or
adc
clc
ficompl
push
stos
add
or
mov
bound
arpl
mov
dec
mov
insl
and
sub
sub
cmp
ljmp
sub
hlt
clc
pusha
gs
es
cld
add
mov
je
push
pop
and
or
pop
push
sub
xor
fstp
arpl
cmp
movsl
rolb
add
scas
fsubrl
std
mov
push
mov
fsts
lock
mov
push
add
dec
xor
mov
dec
jle
sbb
add
shll
inc
ror
xchg
mov
shrb
ja
add
mov
imul
loopne
jecxz
push
call
cltd
dec
mov
adc
cli
sub
int
xchg
add
pop
and
pop
repnz
dec
int
jne
mov
push
mov
pop
and
int3
imul
mov
in
sub
shll
jno
add
outsb
test
cmp
into
sub
icebp
add
sbb
jl
add
adcb
mov
cmpsl
add
push
push
sbb
adc
dec
gs
popf
in
or
and
cwtl
jg
push
push
inc
das
or
lahf
sub
sub
or
lea
lret
daa
or
adc
pop
pop
or
ret
jg
adc
lock
data16
pop
in
insl
mov
movsb
jae
rcll
inc
pop
cmc
xchg
in
in
mov
gs
dec
scas
xor
fadd
add
mov
test
mov
pop
in
push
cmp
bound
daa
jmp
and
loope
movsb
pavgw
inc
xor
loope
mov
mov
mov
or
popf
mov
inc
dec
mov
mov
or
jo
jle
xchg
bound
arpl
out
mov
mov
cmp
mov
shll
sbb
mov
and
cmc
notl
lods
mov
sub
pop
lahf
sbb
jp
jns
xchg
cmp
and
push
cmpsb
xlat
sub
xchg
fcomps
inc
pop
flds
xor
shl
js
rcll
daa
jle
fwait
inc
les
push
lahf
mov
test
ret
mov
rolb
dec
pusha
jne
pop
mov
dec
xchg
lahf
sbb
movsb
aad
test
ja
cltd
mov
daa
add
xor
std
xchg
ja
add
pop
or
xor
fmull
and
push
loop
mov
pop
jle
sub
inc
push
xor
mov
adc
rol
cmp
pop
cmp
add
or
cmpsl
lcall
jae
lret
or
push
stos
adc
sahf
test
sahf
fwait
push
movswl
movsb
add
es
xor
add
mov
jmp
xchg
inc
loopne
sahf
stos
adc
ret
jle
jecxz
test
movsb
aad
pop
or
es
out
call
mov
rcrb
loopne
pop
int
pusha
pop
and
test
hlt
push
aaa
jp
loope
loope,pn
or
pop
or
sbb
mov
sbb
das
rol
add
sbb
add
mov
cmp
xor
or
cmpsb
or
cmpsl
addb
adc
lcall
jecxz
das
lock
add
sbb
pusha
jno
mov
and
rolb
mov
xchg
xor
sub
or
push
jo
loopne
out
jle
or
mov
int
xorb
daa
dec
lock
or
imul
ret
and
mov
mov
stc
iret
cmc
pop
mov
pop
rorb
es
jne
fcmovnbe
or
repz
add
imulb
out
jl
adcl
dec
aam
xor
arpl
popa
psadbw
dec
inc
pop
in
or
mov
adc
jg
loopne
pusha
and
adc
sbb
mov
aad
xchg
cmpsl
mov
xchg
mov
pop
iret
std
adc
dec
lahf
inc
es
shrl
aaa
sbb
lock
adc
add
std
lea
test
daa
pushf
das
fcoms
adc
enter
mov
stos
mov
xorl
lret
addl
adc
xorl
sarb
ror
mov
andl
sub
xor
fwait
adc
lods
arpl
jge
fdivl
insl
call
adc
loopew
movsb
out
add
mov
xchg
lahf
jle
add
addps
add
daa
push
pop
adc
xchg
rcrl
repz
add
inc
and
mov
mov
and
and
mov
shrl
pop
fadd
cwtl
add
mov
nop
cmc
sbb
add
sti
outsb
rorb
xchg
clc
test
mov
mov
lock
fistps
mov
cmp
push
loopne
insb
dec
inc
je,pn
and
int
mov
dec
leave
dec
int3
add
in
sub
sbb
jmp
in
xor
dec
call
je
and
mov
mov
jns
push
add
add
aaa
inc
rorb
pusha
cmp
push
lcall
pop
repz
push
scas
jae
add
add
in
mov
je
icebp
mov
pushl
dec
xor
push
fimull
mov
out
imul
icebp
ret
and
xchg
cmpb
and
cs
jbe
mov
xchg
sbb
cmpsl
jg
adc
pop
lods
push
out
sbb
xor
call
shlb
fs
and
rcll
nop
xor
test
inc
xchg
jle
stos
adc
mov
sub
test
rorb
jo
js
lret
lret
lcall
insl
dec
mov
insl
imul
xchg
jp
jle
xchg
push
sub
push
enter
sub
test
cltd
loop
insb
push
stos
iret
dec
arpl
ret
add
push
sub
pop
cmp
ss
sub
sub
fs
and
pop
scas
push
pop
jmp
cmpsl
mov
into
in
mov
sbb
popa
scas
dec
cmpsl
xchg
adc
sbb
cmc
adc
xor
push
iret
lret
mov
and
in
sbb
ret
inc
insl
sub
add
lock
sbb
fiaddl
cmp
je
imul
cmc
dec
xor
push
jge
xlat
add
cwtl
cmpsb
or
and
rcrb
outsb
ret
decl
and
mov
call
cmpsb
add
test
bswap
or
test
cs
and
dec
push
inc
out
xchg
jo
pop
or
xchg
or
pusha
mov
mov
imul
cmp
push
lea
icebp
mov
inc
clc
daa
push
add
push
pop
add
sub
loopne
dec
or
hlt
jmp
or
test
adc
push
sarb
pop
test
or
sub
and
mov
je
cmpsl
mov
add
push
or
push
add
sbb
int3
dec
and
pop
cmp
lcall
shl
mov
inc
mov
scas
lock
imul
pop
push
das
cmpsb
fsts
jbe
push
mov
jmp
push
adc
loopne
std
add
ret
push
xor
iret
call
stc
dec
dec
ror
aas
imul
mov
or
jp
and
fcmovu
jge
and
pop
xchg
pushf
out
adc
xor
xor
dec
push
loop
cs
sbb
sub
mov
xchg
xchg
push
int3
test
daa
mov
lea
adc
ret
fdivs
inc
sbb
xchg
add
jnp
lret
or
push
xchg
fidivs
out
clc
inc
cld
pop
jmp
pop
iret
leave
add
ret
sbb
cmp
test
xor
mov
arpl
test
cmp
scas
push
xchg
dec
xor
pop
adc
je
pop
mov
xchg
xchg
push
push
sub
xchg
das
in
pop
mov
dec
xlat
mov
movsl
ret
int3
out
bound
cmpsl
and
add
fcomp
and
add
push
add
adcl
in
ret
push
inc
push
inc
je
push
mov
mov
push
push
dec
clc
leave
scas
sahf
iret
out
push
sbb
jp
or
jp
adc
popf
mov
sbb
add
and
sbb
ret
xor
lods
lds
lcall
lock
out
in
sbb
iret
or
nop
hlt
push
and
jne
sbb
and
sbb
nop/reserved
test
jne
or
pop
add
movsl
mov
jle
pop
jbe
jle
sub
into
stos
lret
sbb
push
movsl
mov
jo
imul
arpl
popa
sbb
cpuid
loopne
push
out
jmp
add
inc
pusha
sub
ret
or
orb
cmc
mov
mov
lret
movb
lock
jo
or
jnp
push
notl
pop
gs
cmpb
cmp
ret
aad
dec
shlb
cmp
xchg
loopne
lds
xor
ja
push
mov
xor
adc
adc
outsb
incl
dec
sti
movsl
das
scas
mov
cmp
cld
test
push
sub
pop
jmp
repnz
ret
sbb
xor
data16
xchg
xor
mov
lea
jnp
adc
adc
mov
or
mov
je
iret
scas
add
push
movsl
scas
push
add
mov
lods
adc
daa
mov
xchg
rorb
loop
lret
add
rorb
fcom
ret
inc
leave
adc
push
lods
mov
xchg
or
ljmp
push
lret
sbb
adc
xchg
shrb
xor
cmp
mov
test
fsts
sub
mov
cltd
sarl
stos
add
fbstp
cltd
sub
pop
ret
aad
mov
fwait
mov
ja
insb
mov
mov
add
fwait
adc
mov
fwait
push
pushf
in
jecxz
sahf
aaa
fldcw
dec
lods
xchg
xchg
pop
mov
test
scas
xor
pop
mulb
mov
and
aad
ja
fsubr
sbbl
outsl
inc
mov
cmp
pop
in
aaa
jmp
xor
fsubrl
enter
iret
mov
in
scas
stos
mov
mov
inc
add
mov
pusha
and
pop
sbb
fs
subb
pushf
fwait
xchg
and
nop
add
mov
fisttpll
xor
pusha
or
push
iret
dec
aas
or
sub
pop
dec
dec
pushf
movsl
pop
cmp
iret
in
test
and
or
inc
and
hlt
dec
pop
cltd
stos
lods
lods
jg
loop
sbb
xchg
inc
sti
sbb
leave
mov
iret
dec
test
add
inc
sub
fwait
adc
jns
pop
jo
xchg
imul
xchg
mov
int
cmp
inc
insl
outsl
push
in
add
xor
adc
cmc
stos
lock
out
jle
mov
add
aas
fists
mov
lahf
repnz
pusha
add
mov
pop
sub
push
js
adcb
nop
lahf
ret
mov
inc
sbb
inc
xchg
or
or
dec
jo
add
cli
add
and
jle
iret
jo
inc
sbb
cmp
adc
aam
das
hlt
or
lcall
loopne
adc
push
sbb
cmp
test
pop
pop
add
daa
fs
loope
jae
and
xor
xchg
rorl
mov
sahf
sub
push
mov
push
fsubl
sbb
push
cmc
mov
daa
sbb
sbb
jns
push
add
or
xor
xor
ret
incl
mov
ja
mov
insl
dec
pop
imul
push
adc
jnp
add
pop
daa
xchg
xchg
pop
inc
nop
imul
movsb
outsl
jno
lods
dec
and
es
out
repz
pop
mov
add
cmp
add
test
aad
cmp
ficoms
je
mov
mov
shrb
shlb
and
ret
adc
cs
push
inc
js
cmc
sbb
sbb
adcb
rcll
mov
fisubrl
push
ficoms
or
jg
incl
and
ret
test
popa
jae
push
push
jmp
fst
mov
fwait
fwait
xchg
cmpsb
lods
add
adc
lods
pusha
aaa
loopne
adc
xchg
push
cs
repnz
xlat
movsb
dec
nop
dec
jp
add
adc
rcrb
or
add
lock
popa
xor
mov
push
mov
xchg
movsl
stos
test
inc
xlat
andb
or
sub
std
jo
push
popa
mov
pop
pusha
pop
daa
enter
sahf
mov
lea
sahf
ret
push
adc
jnp
int3
add
rcr
xchg
cltd
adc
cs
mov
mov
push
xchg
jg
pushl
lcall
scas
orl
dec
sbb
cltd
test
in
ja
or
fcmovnbe
pop
lret
xor
test
fwait
pop
jp
sahf
cmp
mov
loope
orl
iret
cmp
inc
lcall
push
lods
das
sbb
xchg
dec
cmp
push
iret
push
test
cwtl
cmpsl
ljmp
test
loope
xor
inc
push
bound
sbb
lahf
add
movsb
loopne
xchg
xchg
cmp
shll
adc
hlt
pop
addr16
cmp
stos
xor
mov
gs
mov
jl
sbb
addb
pop
add
pop
jnp
xchg
mov
inc
mov
in
mov
lds
and
push
pop
imul
add
std
adcb
shll
out
jns
sub
ja
lods
lret
das
jecxz
cmp
xor
mov
into
and
inc
push
dec
cmpsl
adc
xchg
mov
ret
test
mov
addr16
mov
pop
fwait
das
insb
pop
xchg
dec
jp
stos
mov
push
xorl
adc
stos
ret
imul
xor
adc
jns
pusha
cmpsb
and
dec
xor
push
mov
adc
ja
stos
sbb
mov
ja
stc
dec
jmp
add
or
add
add
aaa
sbb
add
pop
push
and
jns
add
daa
pop
mov
add
test
pop
adc
and
xchg
sub
and
pop
movsb
dec
clc
add
movsb
mov
je
push
add
xchg
cli
movsbl
mov
jl
cmp
ret
mov
mov
dec
loopne
sbb
inc
jle
cmp
pop
cmp
es
cwtl
xchg
adc
cmp
scas
cmp
int3
cs
and
lcall
jmp
jnp
dec
push
dec
adcl
pop
or
inc
sub
icebp
add
test
xchg
dec
push
test
or
mov
sub
movsl
sub
ret
add
std
cmp
sub
inc
adc
and
add
pop
add
rolb
cmp
ljmp
in
pop
xchg
xchg
adc
in
popf
add
int3
dec
xchg
pop
push
out
cltd
pop
push
aad
outsb
notb
mov
in
addr16
mov
ss
shll
ljmp
cmp
add
adcb
loop
pop
adc
sbb
pop
xchg
jl,pn
daa
mov
push
push
sub
push
jb
mov
imulb
add
ret
push
push
imull
mov
push
sub
iret
loop
int
mov
dec
das
pop
pop
push
cmp
or
push
xchg
loop
cmp
cmp
shlb
invd
in
lods
dec
cli
int3
add
arpl
jno
lea
loop
icebp
out
dec
cmp
shl
xlat
adc
xchg
loopne
sub
jno
push
andl
or
mov
cld
dec
sbb
rclb
mov
xor
add
lock
jmp
ret
clc
sti
stc
repnz
sbb
lods
pop
cmp
and
xor
pop
adc
sbb
jg
dec
sub
insl
and
popa
fdivs
fimull
and
and
stos
stos
rcrl
mov
add
pop
jne
lea
or
mov
jb
mov
mov
xor
clc
push
loop
sbb
add
xchg
mov
cltd
mov
pop
mov
rolb
push
repz
out
lds
jno
mov
pushf
aas
int
stos
push
inc
jbe
cmp
movsb
lock
js
adc
loope
or
pop
dec
and
sub
inc
sbb
je
vunpckhps
and
or
and
sub
lea
stc
sbb
pop
adc
adc
dec
ret
and
rolb
call
mov
pop
jl
dec
fwait
push
popl
mov
push
cmpsl
adc
pop
stos
paddusb
push
lret
in
inc
mov
mov
push
testl
lea
add
push
out
jo
xchg
or
and
mov
ret
movd
subb
inc
cmp
imul
push
jo
jg
dec
aam
sub
lret
or
mov
stos
lods
mov
faddl
dec
loopne
dec
and
and
pushf
jo
inc
jo
mov
iret
add
add
jle
pop
rclb
andb
int3
es
jo
pop
dec
jne
das
push
scas
cwtl
dec
dec
mov
lods
test
jp
mov
loopne
push
and
xchg
add
rolb
cmpsb
repz
jbe
sbb
jnp
cmpsb
mov
mov
push
mov
or
pop
add
push
pop
js
aaa
sbb
in
inc
imul
ret
xor
xchg
sbb
cmp
adc
sbb
and
mov
insl
enter
sti
ja
jmp
ja
lods
ljmp
add
mov
sbb
xchg
jns
movsb
popf
mov
scas
and
cwtl
cmp
mov
adc
xor
test
sbb
les
jmp
dec
adc
loope
jae
call
jno
push
ss
or
loopne
cmp
js
out
add
add
pusha
xor
pop
jo
cmovs
pop
mov
shl
cmp
or
pop
icebp
out
test
mov
insl
pop
rcrb
mov
stos
lret
mov
jle
add
cmp
mov
mov
add
inc
daa
arpl
andl
icebp
push
dec
test
subl
mov
lcall
dec
xor
jmp
divl
lds
loop
ja
nop
cltd
std
sbb
das
fcoms
ljmp
or
sti
or
imul
xchg
test
pop
cmp
jne
outsl
aam
inc
add
add
loop
and
xlat
mov
and
imul
add
mov
cwtl
or
push
clc
scas
jne,pt
imulb
sysenter
mov
cmc
push
xorb
pop
fsubr
clc
in
adc
xchg
mov
push
cwtl
arpl
dec
or
pushf
in
dec
loope
shll
lahf
and
pop
mov
ss
daa
fsubs
adcb
je
int
ja
xchg
ret
mov
fistl
add
push
js
mov
cmc
in
jmp
adc
test
adc
cwtl
jo
or
sub
sbb
inc
pop
sbb
add
les
pop
pop
lahf
insb
cwtl
cmovnp
pop
pusha
jae
add
addr16
jno
ret
fisubl
mov
in
jg
loope
jg
lods
lahf
je
add
inc
pop
ss
dec
sbb
cmp
adc
popa
jns
pop
in
cwtl
sbb
testb
faddl
xchg
test
dec
lods
cmpsb
push
mov
mov
and
scas
pop
insl
mov
loop
add
mov
sbb
sbb
xchg
push
mov
xchg
les
push
daa
and
pop
xor
mov
js
pop
shlb
sbb
sub
mov
dec
pop
push
out
or
loope
arpl
lahf
cld
outsb
ret
movsb
cltd
mov
fwait
mov
mov
sbb
jae
shl
scas
cwtl
sbbb
out
and
xchg
add
inc
addr16
mov
cltd
out
lods
rorl
mov
in
inc
or
cmc
xlat
sbb
sarb
xchg
or
xor
mov
add
mov
lahf
pop
push
cs
push
push
lcall
add
add
stos
push
mov
pop
push
add
cmpsb
cmp
push
dec
push
cmp
orb
lret
pop
or
mov
adcl
roll
sub
jno
xchg
sbb
adc
cmc
scas
daa
jmp
xchg
push
out
loopne
adc
add
jp
out
mov
add
sbb
jmp
push
movsl
or
push
scas
pop
mov
lock
push
pusha
and
mov
lods
loopne
mov
cmpsl
cmp
or
mov
outsl
dec
xor
push
les
add
and
int3
adc
mov
enter
test
inc
dec
and
enter
and
cmpsl
pop
enter
cmp
ja
xlat
xchg
pop
push
push
cltd
int
fdivrs
or
pop
je
pop
jne
xor
xchg
pop
sub
or
loop
lock
lods
and
xchg
xlat
pusha
dec
stos
and
push
pop
clc
aas
insb
loope
add
scas
push
sahf
push
popa
andb
add
loop
cmp
cwtl
rcr
pop
imulb
es
dec
rcrl
mov
stos
movsb
jg
push
pop
movsl
xchg
mov
add
dec
add
xor
pmulhw
testl
testb
adc
mov
daa
loope
xchg
add
lret
jp
enter
sub
push
in
cmp
and
xchg
sub
dec
adc
sub
rorl
pop
inc
sub
stos
pusha
pop
daa
lahf
fistpll
inc
sub
loopne
loopne
das
icebp
pop
aas
out
add
out
jnp
and
in
iret
mov
fdivrp
movsb
movsl
pop
loope
in
ss
push
sub
pushl
cwtl
das
xchg
pop
add
pop
pop
js
daa
xchg
xor
ret
js
add
xchg
enter
dec
pop
iret
out
push
push
loopne
add
pop
mov
insb
lock
decl
aad
or
jmp
out
jge,pn
mov
pop
insb
inc
cmp
popf
in
int3
and
lea
mov
bound
mov
jae
rcll
xor
outsb
pusha
jl
fcom
xchg
cmpsb
or
mov
add
pop
add
add
xchg
sbb
cwtl
push
shlb
cld
add
cs
push
sbb
mov
ss
inc
sbbb
shlb
test
iret
popa
xor
push
out
push
push
aaa
add
jne
lock
pop
setg
hlt
repz
and
xor
mov
mov
mov
out
testl
xor
adc
dec
cmpsl
bound
push
pop
adc
xor
sub
sub
mov
push
dec
sub
fst
sbb
sbb
fdivl
add
shll
sub
clc
out
add
je
push
rclb
ret
mov
mov
mov
rolb
push
sti
out
pushf
adc
sub
pop
jge
adc
iret
mov
or
push
sbb
rorb
ficompl
sub
add
inc
enter
adc
xor
daa
cmc
loope
sub
push
push
lock
fsubrs
aam
pop
shll
ja
sbb
sub
fdivp
push
loopne
fsub
pop
push
jns
xlat
movsb
add
cwtl
shlb
lret
jmp
and
shll
xchg
xor
ror
cmp
out
jo
add
add
push
push
scas
sbb
mov
or
mov
xchg
xlat
cmp
ret
pop
jno
push
xchg
popa
insl
xchg
and
movsb
jae
cmp
xor
imul
mov
sub
sub
or
movsb
int3
cltd
mov
cmc
jmp
xchg
aam
or
cmp
inc
mov
mov
lods
sub
lahf
push
sub
mov
popf
or
cmp
jo
cmpsl
into
or
xor
or
into
lret
das
cwtl
add
push
jmp
lea
xchg
sub
popa
lods
and
outsl
add
das
loopne
lahf
or
test
lahf
iret
insl
add
xchg
out
cltd
andl
test
sbb
adc
push
push
int
sti
scas
xor
pop
cmp
jmp
rolb
fsubrs
jns
decb
add
inc
sub
sub
fst
jge
adc
inc
and
aad
mov
clc
xchg
inc
test
mov
js
and
leave
add
mov
and
and
cmp
sub
push
pop
and
jns
cmp
cmpsl
loope
or
push
and
or
mov
pop
mov
or
sub
or
lea
lret
cmp
sub
jnp
pop
andl
cmp
gs
ja
or
fiadds
jp
shrb
icebp
inc
mov
pusha
cmp
das
inc
push
iret
stc
push
add
ja
xor
pop
pop
jnp
subb
pop
int
jmp
jp
fmuls
les
dec
insl
repz
sbb
inc
rolb
testl
rolb
dec
cmpsl
ret
loope
insl
clc
add
xor
sub
cmp
leave
push
xor
or
and
ljmp
pusha
and
mov
aam
popf
fistl
add
clc
jbe
mov
mov
add
hlt
andl
fisubl
rcrl
pop
cmp
sarb
outsl
ljmp
add
inc
add
hlt
ret
pop
adc
pop
flds
add
mov
mov
mov
test
cmp
sub
push
aas
shlb
daa
lods
movsb
push
fwait
out
inc
pop
jae
popa
dec
inc
sub
or
xchg
xor
popa
mov
mov
add
scas
mov
lods
sbb
std
cs
dec
out
xchg
pop
decl
xor
aam
jno
sbb
push
adc
lret
xor
add
pop
add
push
sub
jge
iret
cli
fcomip
mov
adc
pop
es
xchg
scas
jg
popa
fidivl
rclb
sbb
pusha
dec
xchg
loopne
xorl
xchg
pop
add
mov
mov
jne
sbbl
sbb
pop
sub
sbb
push
cmp
in
in
and
mov
and
insl
pop
push
mov
dec
and
push
and
jo
adc
or
mov
xor
test
cmp
mov
loopne
das
negb
aas
outsb
clc
pushfw
movsb
xchg
jo
inc
fsubrs
adc
xchg
jae
sub
je
daa
add
mov
sub
and
hlt
or
jb
sub
inc
sub
pop
js
mov
inc
pop
movsl
hlt
mov
jnp
sbb
pop
sbb
leave
das
cmp
psubd
or
mov
xchg
lret
xor
add
cvttps2pi
and
mov
adc
cmp
aaa
jmp
scas
xchg
xchg
fldenv
inc
and
movsb
push
mov
aad
test
adc
pop
cmpb
fistpl
adc
jbe
dec
loopne
test
mov
pop
push
sub
adc
iret
daa
add
add
ret
dec
mov
add
loopne
imul
cmp
or
or
rcrb
mov
pop
cmpsl
xlat
arpl
jo
lock
inc
xchg
mov
xor
add
xor
pop
mov
push
and
shr
movsb
dec
mov
sbb
test
cmp
bound
cmp
imul
dec
jl
iret
inc
ret
sbb
pop
repz
mov
sbb
cltd
jo
cmp
mov
pop
jae
js
inc
sub
leave
mov
mov
cs
jne
loopne
test
add
dec
jg
dec
dec
rcr
pop
xchg
sbb
mov
jecxz
push
cmp
sub
lds
adc
cli
or
xchg
adc
and
cmp
xchg
daa
ds
xor
orb
ret
dec
insb
lods
sar
sbb
cli
sub
lea
push
clc
mov
or
dec
add
lea
loope
pop
loop
add
push
push
push
les
pop
jecxz
movsl
xor
jo
icebp
dec
adc
mov
push
adc
jnp
add
pop
sub
add
xor
mov
clc
ljmp
xor
in
xchg
test
jno
cltd
aaa
in
add
pop
mov
imul
loopne
push
lods
and
ds
hlt
and
mov
mov
pop
and
or
sahf
adc
pop
push
mov
test
out
mov
cmpl
jno
test
js
cmpsb
and
add
dec
ret
push
lods
add
data16
scas
addr16
scas
aam
test
mov
lahf
data16
test
fbld
jge
leave
xlat
sub
adc
jmp
and
outsl
mov
dec
cmp
add
push
jne
mov
add
add
add
test
scas
mov
and
lods
call
loopne
das
sub
rolb
xchg
rcrb
lahf
pop
ffreep
out
jo
ss
add
xor
cs
cmp
and
pusha
add
fdivs
dec
sub
cmp
sbb
cmp
jo
in
xorl
adc
mov
cmp
daa
cmpsb
add
xor
lahf
inc
xchg
rol
ret
sbb
into
pusha
and
xchg
es
loopne
add
std
push
dec
or
dec
dec
inc
mov
mov
mov
push
data16
xchg
mov
pop
pusha
jo
or
jp
push
cmp
pop
sarl
adc
xrelease
mov
cmp
add
movsb
mov
mov
aaa
sbb
adc
push
pop
sub
shrl
push
jp
popa
dec
ds
sbb
lods
jnp
lds
inc
pop
out
xor
mov
fiaddl
test
cs
hlt
out
pushf
cmp
push
mov
and
das
add
negl
aas
cmp
pop
and
aas
sub
pop
jge
push
decb
jo
mov
movsl
insb
and
or
scas
insb
fistpl
mov
add
xor
aas
cmp
insb
add
push
or
clts
sbb
sub
not
scas
pop
sbb
stos
inc
scas
jb
jge
push
inc
ja
addr16
stos
pop
cmp
insl
addb
jp
das
loopne
scas
stos
aas
insl
inc
mov
iret
lods
in
iret
cld
ret
jb
mov
add
sbb
call
js
mov
imul
pop
inc
pop
inc
push
ror
jns
pop
cli
addb
imul
aas
out
das
mov
sub
or
or
packuswb
jmp
push
fisttps
addl
lods
je
cmp
or
das
mov
jbe
jmp
popf
pop
aaa
rol
testl
cmp
lods
sbb
xor
push
inc
bound
lock
sub
test
inc
pusha
push
inc
ds
push
sub
out
sahf
std
add
lods
adc
aaa
mov
mov
mov
sbb
pop
lahf
ja
sbb
xchg
into
incb
mov
lds
dec
arpl
insb
repnz
movsl
xchg
cmp
js
fucomip
inc
add
xchg
jnp
scas
push
inc
sti
cmpl
and
sbbb
pop
sub
cmpsb
jb
mov
sub
addl
dec
push
lcall
ret
cmp
rol
call
iret
ja
aad
aaa
popa
push
push
dec
push
movb
out
sbb
into
cld
mov
xor
mov
adc
mov
lret
sbb
js,pt
es
and
jle
cmovbe
rcll
ds
aam
xor
push
push
insl
movsl
xor
mov
jo
out
push
lahf
jbe
pop
arpl
cmp
pop
js
inc
loopne
fs
jl
mov
sub
fsubrs
data16
mov
data16
xchg
into
add
stos
cmpl
push
movsb
or
jbe
ficoml
inc
imul
in
push
or
data16
adc
add
add
sub
pop
inc
cmpsl
dec
mov
lods
insl
xor
fmuls
andb
push
add
int3
or
inc
cmp
jae
aad
mov
add
inc
jl
pop
mov
imul
push
push
dec
imul
cld
scas
jo
cmpsb
or
popa
or
es
pusha
gs
mov
push
cmp
out
add
enter
das
or
out
orl
insb
sbb
push
outsl
adc
xchg
dec
jo
pusha
lcall
push
pop
xchg
add
mov
push
push
jb
sub
add
push
jbe
xor
aaa
stos
xchg
xchg
jo
or
sub
test
cmp
out
add
mov
movsb
dec
pusha
mov
hlt
pop
or
push
imul
call
mov
dec
mov
test
and
xorl
das
in
cs
popa
or
lods
rolb
jnp
sub
mov
scas
push
int3
ficomps
xor
rorb
add
sar
fdivrs
rcl
push
sbb
cmc
lcall
data16
in
mov
incl
push
push
push
into
ja
pop
push
or
add
mov
call
lock
nop
shl
cmp
movsb
push
sub
das
mov
js
fisttpl
bound
dec
or
dec
or
xor
push
loopne
jmp
loope
xchg
mov
int
push
inc
push
push
out
lods
xor
lcall
pop
pop
dec
cmpsl
clc
mov
or
rclb
fidivs
sti
andl
addl
bnd
add
mov
dec
and
addl
push
lret
xchg
cmp
lahf
pop
or
mov
adc
arpl
push
ficoms
pop
or
lcall
or
aaa
sbb
cld
nop
ret
clc
xchg
push
into
into
cli
pop
js
jnp
push
fsubl
hlt
push
xor
arpl
shlb
pop
test
sub
inc
nopl
call
or
out
push
sbb
fimull
dec
mov
mov
lock
mov
sub
pop
xor
jecxz
xor
fadd
push
mov
fiadds
jns
mov
dec
stos
push
jns
daa
or
adc
lahf
js
sub
cmp
mov
scas
sub
or
scas
push
jo
xor
aam
dec
sbb
xor
lds
push
cmpsb
and
or
cs
loope
test
shll
lods
lret
pusha
push
loop
or
fnstsw
adc
les
pop
dec
sbb
add
xchg
ret
dec
shr
inc
lcall
out
popf
xlat
inc
sub
and
rcrb
mov
cwtl
dec
add
arpl
dec
push
adc
lret
pop
bound
jp
sub
xor
inc
push
in
mov
lret
popf
pushf
stos
lahf
xchg
fwait
icebp
cmc
and
mov
pop
das
call
fistl
add
mov
les
adc
and
fisttpll
push
shlb
test
jo
or
or
rorl
fdivr
aaa
pop
cltd
add
loop
fdiv
mov
pop
jg
int3
cmp
cmp
pop
push
inc
lahf
shl
in
aaa
addr16
sub
xor
js
inc
icebp
cmc
and
push
shr
pop
push
cmp
inc
inc
lods
sub
or
popa
inc
cmp
lds
cmpsl
rcr
lret
pop
lock
xchg
push
into
sub
mov
jp
jecxz
add
jo
sub
fsts
mov
testb
push
mov
sbb
mov
push
sbb
cmp
jno
icebp
scas
repnz
mov
stos
adc
push
js
xrelease
aaa
mov
mov
or
mov
lret
xor
test
lea
xchg
ret
add
jb
add
pusha
shl
iret
rorl
inc
insb
mov
and
sub
push
loop
incl
cmpsl
iret
lcall
jns
lahf
ret
dec
and
rcrl
or
in
clc
js
jl
push
subps
pop
inc
cmp
je
add
pop
push
xor
or
jmp
loope
incl
ds
xchg
data16
stos
bound
ret
mov
push
sub
negl
and
das
pcmpeqd
in
sbb
lods
loopne
cs
jne
adc
mov
mov
pop
mov
sub
mov
sub
mov
add
pop
adc
loopne
fucomi
push
outsb
add
pop
pop
ljmp
xor
sti
adc
rcll
mov
dec
xor
out
das
imul
pop
push
mov
pop
push
mov
movb
inc
imul
xor
imul
in
loopne
mov
mov
adc
fldenv
mov
and
lods
rcl
sub
add
cmp
and
xor
jo
adc
cmc
push
pop
xor
ror
scas
sbb
adc
push
lods
cmp
dec
or
test
xor
adc
xchg
and
movsb
out
fbld
and
pushf
pop
xor
int3
cmp
xchg
lahf
int3
pop
into
cltd
in
out
test
imull
mov
or
call
add
xor
lret
les
xor
xchg
aaa
jb
repnz
inc
jbe
cmp
addr16
cld
xchg
jle
mov
daa
adc
andps
rolb
clc
pop
movsb
push
push
push
mov
insl
jecxz
gs
cmpsb
out
cmpsb
loope
pop
jecxz
adc
jle
or
fisubl
sbb
jae
xor
in
add
pop
into
test
je
sub
cmp
pop
cmp
push
push
neg
scas
das
push
pop
lods
push
outsl
fcompl
jb
repnz
jle
cltd
pop
xor
loop
jno
fadds
fs
fcoms
stos
push
ja
call
stos
sub
push
lods
mov
aam
loopne
mov
pop
loope
sti
or
data16
ret
xchg
mov
mov
dec
and
pop
aaa
sbb
les
rorl
sbb
cmc
and
xor
test
jge
mov
push
mov
or
testl
rcr
jecxz
xlat
adc
xchg
xor
cmp
and
dec
enter
sbb
dec
xlat
cmp
cmp
push
push
sbb
ret
out
mov
jbe
mov
sub
jno
rorl
adc
pshufb
mov
xor
pop
adc
ja
test
addr16
out
inc
jl
mov
test
mov
jmp
adc
sub
cmp
lea
push
or
loopne
mov
jnp
nop
or
and
and
pop
pop
loope
outsl
cli
adc
and
mov
jmp
test
sbb
mov
jle
scas
mov
pop
push
sbb
jecxz,pn
aad
jmp
lods
jp
add
mov
arpl
add
loopne
out
and
inc
out
and
jns
or
or
pop
xchg
cmpsl
addb
dec
and
ds
sub
movsb
or
push
aad
fcoms
iret
stos
adc
xchg
adc
add
addl
imul
pop
sbb
lock
clc
xchg
xchg
data16
or
in
mov
ja
int3
add
mov
add
and
cmpb
lock
sub
mov
lods
jbe
ss
inc
in
cmpsl
cmp
inc
scas
lret
sub
fidivs
push
popa
movsb
int3
jle
xor
call
test
js
push
in
insl
inc
pop
cmc
dec
lcall
add
xor
mov
sbb
popa
negb
add
inc
mov
and
and
or
mov
mov
les
sub
xor
addr16
jl
pop
ror
push
sub
jo
ljmp
aaa
je
pop
inc
inc
out
sbb
aas
xor
xchg
sbb
mov
sub
js
xor
jne
out
cmp
aaa
add
shl
push
pop
rcr
out
cmp
ret
mov
rcr
rsm
mov
xorb
in
sbb
pop
sbb
or
and
insb
js
fsubrs
inc
jb
imul
cmp
add
or
mov
mov
mov
loopne
jno
jb
push
cltd
push
jp
add
cmp
dec
or
dec
das
jl
dec
jmp
push
xor
pop
aaa
out
mov
int
push
insb
hlt
scas
push
push
jnp
xor
sub
arpl
xchg
filds
and
fdivrs
rol
xorb
push
outsb
shrl
adc
xor
sbbl
push
fucomip
mov
rcll
out
fisubrl
enter
xchg
or
mov
clc
mov
xchg
push
lea
out
in
and
gs
cmp
addb
sub
mov
adc
fsubr
fdivrl
or
ds
jp
cmp
push
and
pop
sbb
int
jns
addb
sbb
and
movsb
enter
adc
leave
cmp
add
bound
das
mov
std
stos
sbb
or
xchg
sbb
insl
lock
pop
stos
jp
lahf
adc
add
stos
jge
add
lcall
sbb
shll
xor
stos
bound
ja
filds
cmpsl
fs
lea
sub
sub
out
aaa
popf
rclb
add
pop
mov
call
out
pop
xchg
ja
fdivs
cld
sbb
out
mov
xor
movsb
inc
lcall
mov
pop
or
and
xchg
movb
adc
mov
popa
insb
pop
sbb
mov
push
cmp
ds
out
dec
lret
add
in
les
roll
cmp
mov
in
test
push
xlat
outsl
pushf
subb
roll
es
add
andl
pusha
test
mov
mov
test
and
aaa
andb
cmp
push
les
mov
dec
xchg
fsub
es
mov
mov
sub
jge
push
sub
loopne
fdiv
push
and
dec
aad
shll
adc
push
push
lds
ljmp
pop
js
leave
push
dec
lods
ss
and
movsl
sub
rclb
daa
loop
jne
adc
jno
push
or
jno
loop
adc
test
mov
lods
repz
pop
xor
xor
loope
mov
dec
inc
idiv
loop
lret
rorl
pop
and
scas
or
add
jp
mov
or
or
sbb
scas
outsl
jmp
push
add
shlb
mov
and
xor
mov
jo
js
roll
jns
and
dec
add
cmpl
ljmp
and
cli
pop
lods
out
addr16
and
dec
js
enter
adc
and
cmp
ljmp
sahf
loopne
outsb
addr16
push
xor
adc
outsl
out
xchg
sbb
rclb
pop
cmpl
sub
lods
mov
cmp
incb
outsb
and
mov
jne
inc
ss
jnp
add
xchg
jo
shll
jle
mov
dec
ret
push
iret
iret
inc
inc
jcxz
sti
scas
push
or
sbb
jmp
ja
jne
inc
sbb
out
jo
aaa
push
dec
dec
mov
rcrl
cmp
fimull
dec
popf
dec
add
in
cmpb
pop
push
int3
push
ret
cmpsl
mov
mov
mov
adc
fists
loopne
fwait
mov
call
jno
iret
test
mov
cs
mov
aam
fistl
or
add
add
mov
sbb
in
sbb
shlb
roll
dec
lcall
fs
int3
xor
imul
mov
pop
push
inc
xorl
jl
in
xchg
and
and
fstp
push
shlb
rol
xchg
mov
sbb
negl
sahf
lods
push
aas
cmp
mov
shlb
cmpb
pop
insb
loope
xchg
lret
mov
cmp
mov
pop
je
mov
jbe
jns
scas
add
mov
pop
sbb
mov
ds
adc
mov
shrb
fadd
out
popa
fs
mov
shrl
pop
imul
cwtl
repnz
jnp
test
push
pop
sbb
lcall
pop
int
push
xor
push
dec
loope
aas
les
sub
das
fisubrs
nop
pop
inc
sarb
inc
xor
les
sub
push
mov
adc
or
adc
mov
push
aas
dec
sbb
cmp
fwait
mov
popa
xchg
and
pop
not
aaa
xchg
pusha
mov
mov
sub
sub
sbbl
jmp
push
mov
stos
iret
popa
lods
and
adc
rcr
xchg
add
fimull
fdivp
shll
inc
stos
or
cltd
js
sti
push
clc
dec
and
mov
ficoms
outsl
insb
mov
orl
dec
dec
out
outsb
mov
adc
pushf
insl
test
test
sub
inc
test
imul
push
xchg
jo
ror
mov
ret
push
inc
mov
adc
or
mov
add
push
loope
in
add
mov
push
push
mov
add
dec
fldenv
mov
mov
adcl
and
xchg
push
pop
sbb
mov
push
add
jo
sub
sbb
lods
addr16
mov
stos
mov
pop
in
jle
cmp
cltd
aaa
lea
psraw
out
and
push
or
mov
adc
lods
push
adc
fists
adc
sbb
int3
adcb
or
mov
int
mov
add
dec
dec
es
xor
inc
add
jmp
mov
mov
or
jae,pt
dec
cli
rcll
sbb
ds
repnz
inc
movsb
add
int3
and
ss
rorb
mov
pop
test
aaa
not
loope
xchg
loop
mov
sahf
cmc
or
ljmp
loope
out
clc
cmp
dec
mov
inc
popa
nop
or
sub
bound
test
push
jo
movsl
jbe
loopne
pop
dec
lods
not
inc
lret
movsb
xor
jns
stos
pop
push
push
test
mov
add
loop
push
subl
push
lret
add
add
pop
lret
cmc
pop
insb
sbb
clc
fs
add
stos
cmpsl
xchg
push
sahf
pop
adc
inc
jge
cmp
dec
or
adc
sub
ror
lret
ffree
outsb
pusha
push
sbb
ja
je
dec
cmp
xchg
xchg
sub
sub
add
xor
leave
xchg
ret
sbb
or
sbb
dec
cmp
and
sbb
ja
cmp
iret
mov
mov
xchg
loopne
lods
rcll
xchg
pop
mov
ret
jb
dec
vmovmskps
and
mov
cmp
lret
push
sbb
sub
add
call
xchg
cmp
nop
outsl
pop
stos
or
or
inc
adc
xchg
add
jo
cs
es
mov
jnp
iret
icebp
sub
pop
pop
mov
xchg
js
dec
in
mov
scas
dec
test
out
stos
add
andb
data16
push
dec
mov
mov
sbb
dec
test
bound
add
mov
loopne
out
push
mov
arpl
stc
fnstenv
out
sbb
sarb
daa
inc
lea
mov
int3
fdivrp
iret
add
mov
js
ss
mov
lgs
mov
popf
test
adc
sbb
inc
mov
mov
data16
lcall
mov
sbb
xchg
cmpsb
sarl
movsb
or
push
pop
leave
shlb
je
ret
imul
pop
lret
popa
push
in
arpl
ret
xor
das
sub
jnp
test
addr16
mov
dec
popf
fs
cmp
and
or
mov
mov
add
pop
pop
addr16
inc
les
stos
pop
shl
jno
js
jae
mov
inc
test
or
pop
mov
mov
add
data16
adc
and
or
push
in
lods
flds
sbb
adc
jns
loopne
lret
pop
shlb
push
add
fisubl
movsb
arpl
scas
sbb
or
add
enter
dec
enter
test
fcomps
sub
adcb
loop
stos
xchg
scas
aas
rolb
push
repz
or
inc
les
stos
test
sub
add
adc
sbbl
xchg
dec
cmp
mov
cltd
outsb
mov
mov
jle
test
mov
xchg
jo
enter
hlt
xor
in
add
inc
loop
ja
push
sbb
jbe
or
jecxz
add
movsb
and
push
pop
and
pop
mov
inc
xlat
fisubrs
into
add
sub
movsb
sarl
pop
jne
das
leave
cld
adc
cmpsb
push
fisubrs
push
sub
stc
xor
jae
xchg
xchg
xchg
das
sub
ror
jns
dec
sbbb
lock
adc
inc
sub
das
push
sbb
pop
dec
int3
adc
mov
xor
in
insl
in
add
xlat
inc
mov
sub
test
sbb
cmpb
push
or
add
loopne
xchg
add
dec
sub
rclb
in
int3
push
xor
testl
sbb
add
gs
mov
add
inc
adc
clc
in
sub
sub
push
sbb
imul
push
sbb
out
or
inc
and
xchg
inc
jl
out
mov
sub
and
int3
jb
pop
xchg
arpl
out
add
or
pop
pop
dec
arpl
outsl
imul
cmp
and
or
test
xlat
and
fstps
cmp
in
pop
fdivrs
sub
enter
push
int3
add
add
and
sbbb
negb
adc
xchg
mov
mov
stos
mov
call
xor
jns
fimuls
xchg
iret
push
fwait
sbb
fnstsw
mov
mov
rcrb
test
nop
xchg
push
movsl
inc
cmpsl
inc
arpl
mov
or
ja
sub
scas
push
lret
popf
data16
arpl
jbe
jecxz
sub
out
stc
out
dec
add
icebp
sub
mov
adc
loopne
adc
or
mov
not
test
ficoms
scas
je
adc
popa
hlt
out
rcll
inc
sbb
mov
add
test
cmp
or
add
jb
jmp
inc
aaa
and
sbb
mov
test
adcl
mov
js
movsb
sub
and
jle
lods
mov
fwait
push
loopne
imul
fimuls
pop
popa
push
popa
adc
push
ds
mov
jnp
notl
inc
pop
sub
out
mov
and
xor
xor
mov
or
or
adcb
ret
or
inc
jg
and
and
lds
mov
or
push
mov
dec
ss
fstps
pop
mov
add
aaa
repnz
mov
movsb
cmp
fmuls
jp
leave
xchg
jl
mov
push
xchg
push
addb
and
xor
cmpl
sub
lods
add
test
mov
lea
stos
icebp
rol
sarl
popa
movsb
icebp
inc
mov
loopne
xor
insb
adc
lahf
std
out
dec
popa
sub
jo
es
pop
mov
ret
ja
iret
sbb
pop
sbb
sbb
fmuls
sbb
jo
out
push
rolb
jae
add
fbstp
inc
sbb
pop
aas
push
inc
inc
sub
jle
mov
mov
sbb
ss
or
sub
pop
loop
mov
addr16
dec
ret
xor
aam
sti
pushf
pop
xchg
aam
jae
and
lods
or
sbb
add
add
out
test
rcll
mov
dec
cs
inc
ja
and
scas
enter
jne
pop
mov
jo
mov
sub
push
movsb
xchg
leave
ja
pop
iret
sub
mov
xor
frstor
fnsave
push
adc
and
or
iret
sub
mov
movsl
stos
dec
jnp
loopne
outsl
test
leave
pop
sub
daa
push
repnz
jne
and
sbb
xchg
cmpsl
mov
dec
jge
and
add
rcrl
push
shr
cmp
lea
push
aad
sti
dec
pusha
loope
aam
movsb
data16
sub
mov
lods
popa
or
dec
mov
repnz
push
test
push
scas
xor
pop
test
inc
jmp
xor
inc
jecxz
adc
iret
cs
mov
sub
adcb
cmp
lods
push
rolb
jp
sbb
xor
jle
jno
and
add
adc
jb
cmp
push
xchg
inc
inc
push
sbb
cmp
adc
cmpsl
lea
mov
pop
pop
push
mov
or
dec
xchg
je
ds
rolb
jo
ja
or
push
cmp
push
adc
xchg
inc
push
loope
nop
pop
or
xchg
xor
loope
je
repz
fisubrl
pusha
add
scas
push
xor
sub
fstl
jbe
mov
add
lahf
dec
jecxz
ljmp
and
xor
addr16
adc
push
inc
inc
cmpsl
scas
aaa
lods
fsubs
mov
cmpsb
cli
js
push
adc
push
jnp
sub
andb
mov
inc
mov
dec
pop
les
ret
jp
xor
out
mov
inc
test
sub
shlb
ret
dec
arpl
gs
jnp
fistps
ret
push
fs
lahf
or
imul
sbb
js
push
cwtl
xchg
cmp
xorb
lock
dec
add
ss
push
jbe
pop
nopl
dec
sub
pusha
lahf
pushf
arpl
xchg
add
dec
sbb
sbb
xchg
enter
cmp
std
cs
std
mov
mov
inc
xchg
mov
pop
inc
push
divl
push
add
insl
sbb
sbb
jnp
mov
adcb
imul
pop
jl
out
or
and
inc
fcomi
push
ret
fbstp
cmp
sti
add
daa
and
je
and
dec
lea
ret
add
test
test
fdiv
mov
aas
mov
fiadds
rclb
popa
jp
sbb
inc
inc
add
mov
repz
loope
stos
loopne
in
test
test
std
cmpsb
inc
les
sahf
lock
sti
sbb
or
push
push
mov
add
and
inc
iret
fldt
push
cmpsl
mov
sarl
xchg
mov
pusha
push
adc
ja
aas
icebp
mov
xor
mov
inc
xchg
test
sub
push
dec
aaa
pop
je
lahf
adc
fisttpl
inc
pop
or
movsl
mov
popa
xchg
subb
jae
jno
movsb
fistps
mov
das
cmp
inc
pop
jg
js
mov
movsb
clc
add
add
sti
es
icebp
push
mov
in
fmull
lds
aas
xchg
movsl
dec
or
cltd
xchg
data16
mov
loopne,pn
test
sbb
cwtl
push
insb
ds
sub
cmpsl
pop
push
inc
dec
cli
mov
and
jae
pop
daa
mov
leave
jo
sub
jo
cli
mov
jb
fiadds
dec
adc
dec
mov
movsb
jge
add
shl
out
cmpsb
test
xchg
sub
xchg
addb
jmp
repz
inc
xor
xor
add
add
movsb
insb
int
adcb
sbb
cwtl
sbb
add
add
mov
sub
sbb
inc
lock
or
sub
sbb
sub
mov
xchg
sbb
into
adc
loop
out
mov
add
pop
cmp
test
sbb
orb
andl
pop
push
jmp
rorl
mov
fcmovnu
iret
fsubs
lock
in
daa
inc
sbb
push
loope
lret
adc
mov
and
sbb
xchg
mov
adc
sbb
fucom
out
inc
mov
inc
jno
jo
jecxz
dec
mov
and
mov
arpl
cmp
dec
in
rorb
or
mov
push
fldt
xor
sub
movsb
pop
std
push
call
sub
data16
mov
ds
sahf
cmpsb
subl
push
jp
rclb
loope
jecxz
add
add
or
mov
jno
push
xchg
push
aaa
jo
dec
subl
push
stos
leave
sub
jns
sbb
jae
xlat
and
pop
pop
and
ret
jecxz
daa
lea
add
shl
fisttps
stc
add
roll
pusha
jl
adc
loop
and
daa
mov
mov
dec
fdivs
xchg
enter
js
jb
loope
je
notl
test
push
pop
inc
fcoms
je
outsl
cmp
add
mov
pop
sub
ja
dec
fnstcw
sub
mov
or
lret
dec
push
imul
scas
and
add
adc
inc
cmp
sub
test
cmc
sub
add
sbb
xchg
jne
jno
fistps
add
das
add
gs
pusha
lahf
mov
loop
pop
test
sti
pusha
lock
jl
je
sub
xor
ss
xor
sbb
dec
jg
lcall
pusha
and
sahf
cmp
mov
inc
push
and
sbb
sbb
jnp
cltd
cmp
mov
rcrl
es
dec
inc
ret
add
mov
add
inc
add
addb
xlat
rcl
pop
add
shll
adc
or
movsl
je,pt
imul
insl
mov
and
negl
push
push
daa
inc
fs
cwtl
mov
mov
mov
cmp
push
dec
cmp
xchg
orb
mov
add
popa
jo
mov
xor
push
jg
xchg
inc
jl
adc
xchg
sbb
lret
xor
dec
aad
mov
ja
lret
lret
xor
push
xchg
test
or
lret
mov
mov
aaa
xor
mov
cmp
scas
and
cmp
call
test
jmp
lahf
fsubrl
popf
jg
outsb
loope
cltd
rclb
xor
lods
cmpsb
jecxz
jl
std
ret
xchg
sbb
test
cmpb
ficoml
add
cmp
cmp
pop
cmpsl
sub
sbb
icebp
lods
xor
add
mov
je
das
inc
adc
cli
cld
in
and
sub
mov
inc
daa
imul
mov
add
ja
in
scas
fldenv
jne
lret
sbbl
lods
adc
testl
ss
mov
icebp
ss
flds
je
or
popa
adc
cltd
insb
push
pop
rolb
add
and
loope
sti
sub
out
andl
stos
pusha
cmpl
or
cmpsl
and
xor
fsubrs
loopne
dec
pop
out
jp
jp
cmp
fildll
subb
nop
fsub
and
push
outsl
xchg
push
push
mov
add
or
jmp
and
das
pop
sbb
xor
xor
fistl
rolb
adc
shl
cmp
ds
roll
adc
rorb
pop
add
ret
loop
leave
push
mov
subb
pop
aaa
popf
dec
pop
addl
push
sub
add
aas
add
mov
mov
pop
xor
push
mov
add
insb
fs
lcall
or
add
and
addr16
mov
jno
je
or
stos
les
fists
sub
popf
or
iretw
lret
and
clc
movsb
shrl
ja
shll
imul
pushf
sub
or
fldt
pop
out
loopne
jns
lods
fildll
sub
popf
pop
rcrb
outsl
cmpsl
fiadds
sahf
sbb
into
xorb
aam
pop
push
mov
jmp
push
dec
jbe
cs
bound
test
jne
movsb
stos
test
sahf
inc
sub
dec
das
xchg
push
mov
andb
out
sbb
aas
or
xor
test
xchg
jp
push
out
sbb
sub
push
push
faddp
dec
pushf
addr16
cmp
dec
fwait
dec
adcb
pushf
inc
pop
xchg
push
dec
mov
mov
roll
mov
dec
inc
dec
or
outsl
into
das
mov
inc
mov
sbb
and
loope
or
jle
or
subb
pop
sbb
mov
sub
mov
ds
dec
sbb
xor
adc
pop
ja
cltd
push
jo
dec
inc
roll
pop
scas
inc
mov
insl
and
jp
ja
jl
mov
imul
jmp
mov
add
andl
out
mov
xor
xlat
loope
shlb
sbb
inc
addr16
pop
sbb
add
push
adc
pop
pop
dec
or
push
mov
outsb
add
daa
movsb
add
jo
inc
scas
loopne
or
imul
fsub
sub
imul
add
add
dec
jb
stos
adc
faddl
jle
into
mov
push
cmp
aas
and
les
jbe
outsb
jb
ret
into
loope
dec
jle
xorb
aaa
push
je
iret
or
cmp
imul
adc
sbb
xchg
add
add
jno
mov
or
cltd
or
lods
loopne
ss
sahf
xor
jnp
dec
sub
int3
int
test
fsubp
xor
iret
inc
or
js
cmpsl
clc
mov
imul
mov
iret
xor
dec
ret
mov
or
inc
inc
pop
je
je
das
add
inc
mov
ss
mov
stc
mov
xchg
fsubs
add
pop
mov
xchg
adc
fstpl
pusha
arpl
in
add
xor
jmp
fadd
and
shrl
test
add
scas
sub
and
mov
daa
cwtl
mov
lsl
mov
xor
out
aas
rolb
add
ja
mov
arpl
call
pusha
add
adc
scas
popa
adc
in
xor
repz
cli
or
js
arpl
ljmp
jb
push
sbb
rorb
int
das
cltd
addb
loopne
cltd
xlat
out
lods
cmp
iret
movsb
xchg
or
cltd
add
dec
fistpll
xor
lret
jge
add
in
sub
adc
inc
cmp
filds
pslld
pop
sbb
mov
lea
nop
testb
cmp
sbb
pop
add
lret
pop
int
add
insb
test
mull
mov
add
jp
cmp
add
int3
jecxz
xchg
shl
popf
stos
outsl
add
jo
sbb
movsl
pop
cmp
movsb
imul
adc
adc
aaa
je
adc
mov
or
and
movsb
in
sub
sub
addr16
shl
add
jecxz
sub
sbb
and
mov
inc
push
loopne
sub
outsl
push
sbb
ja
repz
pop
push
push
inc
cltd
cli
lret
shr
iret
cwtl
mov
cmp
sti
scas
in
push
and
jb
pusha
push
mov
movsl
xchg
enter
mov
shlb
or
imul
test
push
rclb
jle
sub
add
pop
ret
pop
bndstx
in
push
add
ja
test
repz
mov
dec
mov
dec
push
mov
push
shrl
mov
mov
ret
add
xchg
mov
dec
pop
or
and
sbb
fistl
xor
xchg
or
xchg
or
jb
test
sbb
shll
cmp
sub
push
rolb
push
or
dec
mov
nop
jle
loopne
test
mov
mov
pusha
dec
cmp
inc
addl
dec
xor
mov
daa
xchg
xor
flds
mov
sub
mov
dec
ja
loop
leave
pop
and
and
cltd
push
jnp
xchg
pop
fbstp
shll
pop
es
push
push
inc
inc
sub
jmp
push
lret
and
add
rorl
add
jl
popl
inc
or
jle
sbb
push
mov
mov
lods
ficompl
cvtps2pd
fiaddl
and
pop
sub
scas
aas
mov
add
and
push
cmp
sbb
sahf
push
sbb
mov
mov
dec
sub
jp
mov
or
xchg
sub
push
fidivs
and
arpl
fbstp
das
push
or
xor
mov
jge
loopne
adc
add
femms
pushf
or
add
or
loopne
test
mov
mov
push
out
push
sub
cmp
mov
and
pop
movsl
mov
cltd
addr16
negl
dec
scas
mov
dec
add
bound
cmp
add
aad
ret
push
sbb
int3
ret
cmp
addl
bswap
imul
cli
bound
jno
into
in
test
xchg
into
fisttps
dec
clc
add
or
xchg
xchg
push
loopne
mov
cmp
enter
xor
and
mov
jmp
jl
xor
adc
cmp
push
push
test
xor
pop
push
sbb
mov
enter
sub
sahf
popa
add
mov
ret
dec
ficoms
dec
icebp
sub
enter
jb
dec
push
addl
icebp
jnp
pop
mov
add
movsl
dec
cmp
fdivl
enter
popa
push
or
movsl
in
addl
test
and
pushf
enter
dec
jmp
sbb
pushf
sbb
and
adc
mov
cltd
mov
cwtl
js
adcb
rolb
push
scas
loope
gs
or
enter
xor
hlt
mov
ret
mov
jno
cli
mov
test
inc
lods
cmp
add
hlt
add
sub
mov
and
pusha
xor
push
xor
test
shlb
push
push
mov
or
repz
cmp
ret
lahf
pop
shrb
cmpsb
loop
mov
add
shlb
ret
fcmovnu
les
in
sbb
or
test
mov
jmp
add
repz
popa
jo
enter
inc
add
and
cmpl
xchg
lods
loopne
xor
inc
testb
push
push
mov
dec
or
pop
pop
or
or
rcl
inc
xchg
loop
lods
aam
push
push
add
dec
jno
pop
into
pop
rcr
or
sarb
fwait
cmp
punpckhbw
mov
aaa
aam
scas
mov
divl
outsl
sbb
xchg
add
or
jo
gs
sbb
lock
js
pop
fcompl
or
lods
int
aaa
adc
clc
adc
lret
adc
adc
xchg
bound
mov
cld
dec
enter
or
sub
rclb
adc
divl
sbb
insb
jmp
nop
movsl
adc
movsb
xlat
pusha
xor
cmpsb
orl
add
pushf
fs
loopne
adc
ficoml
in
je
shrl
xchg
ret
sbb
ss
and
fmul
add
not
push
adc
adc
and
jo
push
mov
fwait
sbb
inc
cmp
call
mov
mov
push
push
push
arpl
out
insl
jns
push
iret
lods
call
push
sub
jp
cltd
fdivr
pop
xchg
icebp
loop
rolb
xchg
roll
mov
adc
jp
arpl
dec
lea
sbb
pop
test
inc
mov
loopne
adc
shrb
pop
cs
jge
xchg
lret
in
lret
jns
mov
jle
push
jbe,pt
arpl
cmc
ret
inc
jnp
bswap
jecxz
ljmp
xor
jmp
jl
call
shlb
push
push
clc
mov
subps
sti
js
mov
arpl
loopne
sahf
lahf
push
xchg
add
mov
jle
push
sbb
xchg
bound
into
xchg
xchg
mov
pusha
add
xor
stos
movsl
mov
add
sub
sbb
pusha
fs
pop
dec
ret
pop
test
ret
dec
add
cmp
cmpsl
aas
je
pop
xor
cmp
pop
cld
dec
jo
inc
cmp
mov
mov
mov
fldcw
adc
mov
sbb
add
test
xchg
mov
mov
pop
mov
dec
rcl
xor
mov
sbbl
icebp
bnd
scas
pop
cmp
dec
add
pusha
jb
ja
iret
and
popa
movb
stos
add
sbb
loope
and
js
lds
movb
cwtl
and
add
xchg
mov
xchg
lods
and
andl
mov
loopne
dec
jns
mov
out
mov
add
test
jo
or
arpl
cmp
sbb
xchg
inc
pop
shrb
or
iret
cld
add
into
cmp
xchg
mov
sbb
jecxz
adc
rorb
sbb
pop
mull
push
inc
xor
inc
fisubl
jl
mov
fstpt
fwait
pusha
xchg
in
add
aad
popa
jno
xor
add
add
or
sub
push
jge
push
lods
ja
sahf
jne
repnz
cmp
jl
xor
sbbb
adc
loope
and
or
cmp
push
in
mov
pushf
add
sbb
daa
jo
test
pop
lret
in
lock
js
dec
adc
inc
sbb
mov
mov
lret
aam
inc
lahf
imul
mov
jmp
stos
mov
add
mov
xchg
jnp
push
lret
pop
stos
xchg
aad
ja
fbld
test
xchg
leave
lret
les
insb
xor
cwtl
jcxz
test
cs
pusha
pop
inc
adcl
rcr
jo
jp
pop
pusha
add
adc
mov
add
xchg
inc
and
xchg
lods
and
inc
mov
or
mov
lods
pusha
rolb
mov
push
add
inc
mov
cli
les
int
add
vpsubsb
pop
andb
imul
lock
mov
mov
mov
imull
xchg
xor
in
rorl
ret
sbb
inc
data16
andl
and
and
push
fst
xchg
mov
xor
pop
sub
sub
xchg
jbe
pop
cli
push
in
sub
jbe
sbbb
leave
push
jg
cmp
dec
mov
cmpl
push
movl
nop
test
mov
sub
enter
outsl
xor
adc
sbb
aaa
jecxz
test
icebp
popa
scas
out
cmp
push
pop
sbb
jmp
pop
or
jmp
pop
sub
xor
or
add
cltd
adc
cmp
pushf
mov
pusha
cmp
jns
jmp
cmp
iret
sbb
add
lock
fwait
or
jmp
and
insb
imul
insl
rcll
mov
pop
mov
das
xor
xchg
xor
or
enter
inc
cmp
inc
push
lea
in
imul
sbbl
in
push
add
add
jl
cs
insl
and
push
movsb
mov
inc
inc
daa
pushf
or
adc
jo
lods
std
mov
cmp
inc
and
sarl
lods
xchg
ret
sbb
mov
xchg
mov
ficoms
stc
stos
jno
sbb
ret
pop
mov
push
mov
dec
jmp
iret
push
pushf
add
test
pop
add
or
lods
js
arpl
scas
sub
shlb
movsb
lret
inc
mov
jge
subl
enter
jno
test
push
sbb
in
sub
out
call
in
movsb
pusha
das
cmp
les
loopne
into
into
sti
lahf
xor
xor
dec
xor
rorb
sbb
and
test
imul
xor
add
aas
push
sbb
cld
push
sub
sbb
adc
sub
push
jbe
test
lock
lods
and
push
ret
push
xor
pop
add
rcll
dec
jl
mov
iret
mov
xchg
in
loope
add
and
mov
data16
or
andl
aaa
ret
insb
int3
xor
in
xchg
imul
lcall
int3
inc
jp
dec
mov
aam
and
data16
push
and
dec
out
stos
lods
lods
push
ja
scas
lods
jo
mov
cmp
dec
sbb
sub
je
or
add
out
fimuls
push
and
cmp
ret
subb
sbb
jne
bound
sbb
loope
shl
or
imul
inc
bound
xor
xor
add
xchg
sbb
std
lods
es
jp
fdivrs
sub
pop
and
add
jp
fxtract
lret
xor
xorl
pop
xchg
fstps
jmp
test
rcl
pop
loopne
pop
cmp
sbb
pop
stos
jge
mov
fs
xchg
sub
xchg
fstpt
mov
push
pop
inc
int3
aam
fsubl
jmp
cwtl
sbb
push
adc
addl
cmp
push
divl
lods
addb
iret
pushf
ficompl
addr16
das
cmp
mov
outsl
push
dec
adc
fisubrs
push
ds
addl
lock
cs
addl
imul
aaa
cmovae
push
xor
push
dec
cmovae
push
pop
cld
dec
jns
shlb
push
outsl
push
push
rorb
loopne
ljmp
push
push
dec
or
cmpl
xor
mov
shrl
sahf
fnstcw
dec
mov
scas
pop
fcom
nop
shll
or
adc
ret
outsl
fmul
or
xor
pop
and
mov
ret
ffreep
cmp
sub
jg
mov
nop
jno
std
cmp
add
pop
fucomp
xchg
das
mov
xor
sub
pop
sub
push
pop
add
xlat
call
aaa
push
or
or
loope
arpl
and
jae
sbb
sbbl
push
add
pop
pushf
sub
mov
movsb
rcrl
stos
data16
xor
jge
lock
add
js
imul
inc
and
push
inc
xor
jo
test
sub
loope
mov
or
push
and
rcr
icebp
int3
and
sbb
cmpsl
rolb
fnstcw
test
aas
loopne
stos
sbb
push
ret
add
test
inc
or
dec
lret
shlb
rclb
xchg
pop
xchg
dec
adc
cmp
and
add
popf
pop
cld
mov
mov
inc
notl
in
add
ret
pop
ss
sbb
push
shrb
sbb
mov
push
inc
lcall
add
loope,pn
add
cmp
out
xchg
sbb
sub
lods
and
sbb
pusha
push
loopne
or
and
push
jne
and
sub
mov
jo
jnp
scas
ja
push
or
add
add
sub
jb
sbb
lods
xchg
xchg
insl
push
adc
and
cwtl
mov
add
adc
adc
adc
push
add
push
mov
bound
imul
pop
push
lods
stc
sbb
pop
std
adc
adcl
ss
add
jns
jo
push
jge
pop
shrb
pop
push
pop
sbb
pop
mov
push
mov
or
repnz
push
add
fistpl
pusha
movsb
insb
inc
or
mov
xor
cld
fs
sub
shrb
arpl
mov
out
adc
pop
add
xor
add
jmp
dec
or
daa
pop
sbb
pusha
mov
sti
test
mov
inc
sub
xchg
iret
int
dec
pop
xor
addl
adc
negl
and
sbb
mov
ret
roll
sti
rcrb
movsl
xor
dec
pop
cwtl
and
dec
icebp
outsb
divl
stos
or
pop
clc
cli
add
aam
mov
cld
add
cltd
mov
sysret
mov
or
fwait
push
adc
out
add
add
test
mov
adcl
or
mov
mov
out
push
out
ljmp
push
loopne
lock
push
insb
cs
sub
out
bound
pusha
add
rcr
rolb
in
add
cmp
out
in
dec
push
add
or
mov
in
push
sub
inc
or
scas
pop
icebp
dec
xor
add
add
pop
xchg
cs
loope
mov
mov
roll
or
fstp
std
data16
push
add
test
lea
jecxz
icebp
dec
sbb
xor
cmpsb
mov
push
jp
in
jne
dec
xchg
mov
shl
mov
stos
cs
add
sbb
sbb
je
sbb
mov
lea
fsubrl
xor
call
inc
mov
mov
add
jo
mov
jae
popa
mov
imul
int3
sub
gs
stos
ret
inc
cli
pop
enter
pop
lock
add
popa
mov
imul
adcb
cwtl
lret
sahf
lods
jp
test
int
pusha
pop
iret
dec
and
pop
xchg
sub
bound
cmp
je
lret
out
cld
push
xor
xor
mov
loopne
lahf
loopne
and
or
cmp
mov
pusha
and
rcr
add
ret
push
rorb
xor
xchg
sbb
fs
fdivl
dec
and
scas
mov
mov
adc
movsl
flds
pop
mov
test
push
sysret
pop
jge
push
push
push
ja
adc
or
xor
push
xchg
cmp
movsb
add
dec
add
and
xor
rol
es
xor
jo
and
mov
xor
xor
xor
mov
mov
push
add
add
call
mov
into
push
sub
or
mov
adc
push
jmp
or
jle,pt
sub
iret
inc
and
adc
sahf
cmpsl
cmp
fisttpl
fbstp
mov
xchg
jbe
add
pop
xor
push
jb
push
pop
jmp
or
sti
mov
cmp
loope
lods
movsb
stos
push
mov
mov
inc
cwtl
repz
fisubrs
mov
test
push
pusha
xor
bound
cmp
sbb
jbe
not
xor
sbb
outsb
push
lods
fnstcw
sbb
jp
test
clc
lahf
xchg
pushf
insl
in
adc
iret
xor
ret
inc
mov
dec
sbb
into
jo
nop
dec
xchg
xchg
das
inc
mov
adcl
and
into
aam
sub
inc
add
popa
ficomps
in
xor
cs
or
xor
nop
dec
je
fsubs
daa
xchg
ret
xchg
cli
in
sbb
mov
js
daa
rorb
int
add
xchg
or
dec
lods
jo
lods
aad
jmp
pop
cmp
cmpsl
sub
xchg
inc
sbb
ficoml
test
loopne
icebp
inc
pop
mov
mulb
aad
inc
jmp
mov
xchg
add
mov
and
in
sahf
cmp
ror
mov
add
or
in
sbbb
mov
sub
mov
and
gs
mov
ret
lret
mov
push
in
or
jl
out
sbb
stc
pushf
nop
imul
pop
push
xchg
fs
sub
sahf
cmp
clc
mov
pop
xchg
jb
xchg
add
sbb
push
popl
mov
sub
je
enter
cmpl
jle
mov
adc
inc
ficoms
push
insl
adc
cmp
pop
fistl
inc
push
mov
lods
fcomps
shrl
sti
and
clc
push
cmpsl
inc
test
inc
imul
outsb
hlt
lahf
in
rclb
push
add
push
nop
call
jmp
xor
orb
int
xchg
call
lock
cmp
and
orl
push
add
out
add
add
sbb
lret
sub
pusha
call
leave
cli
lahf
popf
cltd
or
clc
adc
idivl
cmp
aam
push
and
call
ljmp
fdiv
dec
ss
sbbl
add
stc
shrb
js
jb
movsl
jo
inc
std
add
call
and
das
shl
loopne
cld
add
mov
push
sub
into
cmp
and
sahf
mov
test
lds
out
in
in
mov
push
push
inc
call
xor
int
movl
push
sbb
jle
sarl
mov
mov
xor
mov
add
jne
mov
add
sub
xlat
add
adc
pop
inc
jo
pop
cltd
pop
cwtl
and
push
outsl
insl
xlat
add
xchg
push
jl
pop
or
mov
and
xchg
mov
or
jae
add
push
das
mov
pushf
push
enter
pop
test
loop
dec
movsb
loope
iret
and
pop
divl
adc
inc
dec
add
inc
inc
sub
test
test
sub
in
ds
mov
jg
loopne
and
add
dec
cmp
fsts
rolb
sub
and
cmpsb
cmp
add
mov
subb
cs
jecxz
leave
pop
add
add
push
sbb
iret
sub
int
jle
test
ja
mov
mov
fbstp
add
je
xlat
xor
les
insb
loope
daa
sbb
lret
loopne
nop
fnop
mov
test
or
xor
push
xchg
aad
and
sahf
in
add
das
jle
cmp
sar
jp
mov
popf
enter
daa
push
pushf
bnd
dec
mov
inc
inc
and
and
sarb
js
aam
in
sbb
adc
dec
add
adc
rcrl
pop
push
xchg
scas
push
lock
cwtl
das
push
leave
jne
in
push
push
lcall
popa
sbb
add
sub
mov
inc
ss
or
or
movsb
cs
add
mov
pop
scas
fstl
add
and
and
or
add
pop
pop
loope
xchg
in
push
sub
cmp
add
cmp
call
pop
inc
fidivrl
mov
out
adc
dec
mov
orb
andb
sbb
nop
jo,pt
arpl
fs
add
xor
adc
bound
fmull
mov
scas
jns
lock
enter
negl
xchg
sbb
cmp
gs
push
jns
fs
ss
inc
push
push
mov
xor
in
mov
add
add
arpl
ret
flds
jmp
xor
scas
push
lcall
and
aam
das
sahf
sub
cltd
mov
inc
ret
fsubs
and
sbb
sbb
inc
sbb
mov
lock
movsb
movb
repnz
push
into
cmp
cmp
test
fnsave
add
xlat
ficompl
add
int3
int
add
jnp
je,pt
ljmp
daa
sub
pop
push
push
es
ja
sub
inc
push
pop
insl
das
lods
pop
jno
lock
pusha
test
scas
ja
movsb
mov
int3
jbe
icebp
subb
pop
mov
adc
mov
pusha
jnp
rclb
sub
lods
popa
and
loopne
xorb
test
push
dec
jnp
pusha
pop
notb
cmp
sbb
clc
daa
push
mov
jo
jb
add
in
dec
sbb
aam
pop
add
add
loopne
test
rol
ja
jp
pop
dec
push
into
or
in
mov
ret
inc
cmp
xor
push
cmp
filds
sub
mov
pop
push
sub
in
and
imul
mov
notb
inc
jb
aad
add
xchg
pop
cmp
xor
xchg
jge
loope
aaa
bound
and
insb
or
mov
jbe
cmp
test
jbe
rorl
sub
out
xor
icebp
adc
or
cmp
cwtl
popf
sub
loope
icebp
sahf
pushf
scas
cwtl
push
jecxz
dec
xchg
cwtl
sbb
add
xchg
pop
add
sbb
rolb
xchg
push
pop
jp
pop
clc
insl
lcall
pop
jo
cld
jbe
fs
ret
push
inc
xchg
sbb
outsb
xchg
mov
pop
add
jno
iret
mov
repz
add
and
fstpt
push
jne
fcoms
iret
xchg
inc
int3
adc
pop
ret
push
pop
lea
call
inc
das
sahf
in
and
sbb
sub
xchg
jecxz
sbb
cmpsl
dec
lods
jno
jbe
filds
ds
mov
sub
add
mov
jmp
clc
movsl
xchg
add
lods
push
movsl
rolb
test
lods
fsts
fld
outsl
es
pop
ljmp
push
gs
and
scas
es
aaa
dec
imul
icebp
in
xchg
adc
pop
icebp
push
shrb
in
pop
icebp
test
adc
popa
aam
ss
pop
enter
pop
sar
jnp
loope
sub
cmp
loopne
insb
fsubp
mov
jbe
jp
push
addr16
js
sbb
push
andnps
or
xor
ficoms
outsl
test
jns
aaa
fists
jo
cmpl
add
lock
push
mov
add
sbb
push
call
push
push
jo
adc
lods
push
adc
in
mov
add
das
out
je
xor
cltd
pop
push
lcall
pop
or
inc
mov
mov
imul
xor
clc
movsb
out
jne
push
xchg
xchg
mov
add
and
sub
xor
mov
in
daa
iret
subl
sub
xor
dec
inc
pop
push
enter
mov
daa
or
add
push
mov
fiadds
xchg
and
cs
dec
outsb
mov
addr16
adc
popa
pop
icebp
out
and
cs
pop
in
xor
or
data16
jbe
rolb
inc
addr16
shlb
sub
add
adc
dec
push
js
notl
push
ds
loope
adc
add
lcall
mov
das
stc
in
adc
insl
sub
or
rcrl
stc
inc
arpl
sbb
cmp
inc
jl
lods
loope
inc
adcb
add
hlt
neg
aam
insb
nop
roll
mov
sub
xor
jecxz
popa
mov
push
mov
cmp
aaa
push
sbb
hlt
sub
pop
sbb
outsl
mov
or
or
xor
fmuls
adc
mov
dec
dec
and
fmull
xor
xor
scas
lods
add
aad
push
pop
test
out
cmp
xchg
mov
push
dec
lret
std
sub
bnd
les
sahf
or
sbb
sbb
clc
es
mov
dec
xor
mov
pop
sbb
stos
ret
call
cmp
xchg
test
fs
push
lret
fistpll
jno
mov
xor
adc
mov
ja
or
jne
and
pop
sqrtps
jno
cmpb
mov
loope
push
push
lret
out
and
dec
mov
test
or
mov
push
and
loopne
sarl
stos
imul
fdivl
je
adc
dec
jns
les
outsb
mov
ja
out
enter
nop
lret
sub
and
loop
out
pop
adc
adc
xchg
je
cmpsl
sub
cmp
mov
out
movsb
sar
call
decl
data16
cmc
xor
or
fists
mov
jecxz
out
add
sbb
or
andl
sub
ret
mov
pop
adc
outsb
out
lods
int3
adc
je
adc
mov
ljmp
xchg
sub
rclb
pop
sbb
mov
or
push
push
mov
movsb
sar
js
sub
cmp
leave
int3
and
mov
add
xchg
rol
cmp
jo
pop
mov
mov
sub
sarb
xchg
add
ret
ds
sbb
cmpb
aad
push
ja
sub
int
dec
icebp
jp
xchg
sti
ret
cmp
sbb
xchg
mov
cmp
mov
test
mov
fsubp
loopne
fwait
decl
xor
pop
push
dec
xlat
in
xorb
adc
clc
or
mov
adc
add
ret
or
leave
lahf
sub
dec
and
add
add
or
outsb
cmp
shrl
inc
and
movsb
inc
inc
jns
cmp
or
loopne
jne
daa
out
push
xor
loope
sub
jb
jno
and
leave
insl
xchg
inc
push
outsl
in
xchg
shlb
addr16
add
in
push
test
inc
outsl
rorl
dec
inc
loope
pop
add
dec
std
push
push
add
and
je
push
repz
jno
inc
imul
jl
cmpsl
loopne
and
xchg
inc
cltd
add
mov
add
je
sub
push
inc
lea
in
push
mov
nop
shll
loopne
in
adc
or
pop
popf
insb
adc
enter
lods
sub
dec
push
jl
lret
pand
cmp
fwait
add
js
fidivl
ss
ljmp
add
cs
in
adc
sub
inc
and
fwait
sbb
rcrl
push
fmuls
test
out
sbb
sbb
mov
add
call
sub
sbb
ljmp
cmpsb
shrl
movl
push
pop
nop
sub
push
gs
jne
filds
add
jo
lahf
ret
ss
mov
sub
xchg
ds
movsl
mov
lods
mov
loope
xor
sbb
dec
adc
cmpsl
mov
in
aaa
insb
loop
push
push
ret
fdivrs
aas
pop
js
xor
push
push
and
add
test
mov
push
cmp
add
push
aas
push
jp
lods
or
and
jecxz
gs
inc
and
int3
cmp
lods
dec
sbb
shrb
cmp
pop
loop
popa
aas
push
jb
push
notl
sub
leave
outsl
scas
pop
int3
and
add
jge
push
xor
adc
movsb
aaa
jnp
jns
push
orl
adcb
das
imull
mov
aam
adc
add
mov
test
outsl
xchg
sub
add
outsb
and
adc
add
add
add
dec
ret
jno
add
shlb
sub
mov
faddl
and
xor
mov
rep
pop
add
test
xor
xchg
sub
or
or
test
inc
jo
sub
cmp
je
xor
es
and
inc
in
jno
mov
stos
sub
in
cmp
sbb
orl
adc
arpl
adc
out
dec
rolb
push
cmpsl
lcall
das
jne
fwait
gs
fnstcw
adc
idivb
mov
add
inc
adc
sbb
cmpsb
les
pop
sbb
daa
popa
js,pn
or
xchg
out
pop
cmp
dec
shl
xor
push
movsl
mov
shll
mov
jno
xchg
orb
inc
mov
fs
mov
inc
pop
mov
push
insl
mov
adc
sarb
insb
jmp
and
gs
rcrl
mov
jl
jae
cmp
mov
ds
push
fldcw
mov
mov
push
jne
aas
sub
jb
in
xor
mov
inc
inc
sbb
xchg
jnp
rorl
or
jno
adc
mov
jle
jle
rcrb
inc
cmp
mov
xor
and
pop
mov
pop
mov
negl
mov
leave
repnz
dec
mov
iret
add
pop
add
adc
pop
call
pop
cmp
pop
lods
xchg
sbb
arpl
outsl
lea
adc
push
outsl
mov
dec
push
xor
xchg
cmp
push
push
jge
jbe
cli
cmp
addb
cmp
and
int3
icebp
daa
ja
in
dec
dec
repz
cmp
fwait
or
push
mov
dec
push
add
sub
daa
mov
decb
and
adc
movsb
int
or
arpl
pop
fs
cmp
jo
repz
icebp
movsb
lea
sbb
or
pop
in
mov
xlat
call
mov
addr16
jnp
xchg
cmp
and
mov
adc
loopne
add
push
add
jle
inc
xor
mov
xor
mov
aaa
test
ja
out
or
into
pop
push
mov
rcll
mov
pusha
lea
ja
clc
xorb
adc
add
push
popa
lret
pushf
and
cmp
jbe
les
pusha
xor
xorl
jge
ret
js
jg
cmpsb
cltd
add
inc
pop
jge
pop
out
lods
loopne
daa
nop
push
dec
imul
aas
xchg
hlt
mov
and
insb
adc
or
mov
mov
and
xor
imul
adc
sbbl
pusha
sbb
adc
xor
jns
imul
scas
xor
lret
mov
cwtl
dec
in
add
fistps
mov
cltd
int
pusha
xchg
test
cmp
add
push
cwtl
xorl
xchg
pop
ljmp
add
xchg
add
sub
mov
vpcomw
ljmp
dec
cmovg
adc
cmp
mov
sbbl
xor
ret
iret
aad
mov
mov
loope
fadd
pop
sub
and
shrl
and
sub
pop
pusha
push
cmp
ss
iret
xchg
adc
or
lret
mov
xchg
and
pop
inc
pop
out
test
fadds
mov
cmp
sahf
iret
movsb
inc
push
mov
pop
jle
orps
inc
sbbb
insb
out
xchg
jbe
dec
mov
cld
shrb
arpl
pusha
sub
cmp
popf
pop
into
ds
sub
or
and
sbbb
sarl
mov
pusha
dec
dec
in
leave
loop
cmc
sarb
popw
dec
rorb
and
movsb
and
shl
loopne
xchg
movsb
imul
sbb
es
xor
jae
mov
inc
adc
stos
mov
imul
sti
adc
and
negl
sbb
sbb
sbb
mov
adc
cmpsb
movsl
mov
popa
sub
arpl
sbb
lods
add
je
clc
call
push
dec
rcll
mov
push
mulb
inc
xchg
sbb
cmc
adc
push
and
xchg
jne
movsb
sarl
mull
xor
push
mov
bound
cmc
sbb
fnstcw
pusha
out
add
xchg
lods
sub
push
call
fists
xor
mov
repz
movsl
dec
mov
or
sbb
pop
clc
aad
in
sub
xchg
fcoms
and
imull
dec
inc
or
lods
jno
js
add
inc
sbb
cwtl
lods
pop
cmp
sub
scas
mov
jle
data16
and
push
mov
pop
daa
ret
repnz
add
cmc
mov
in
in
lock
or
inc
push
enter
popa
cmc
inc
mov
inc
sbb
in
mov
dec
jo
mov
in
fimuls
pop
pop
push
dec
push
stos
pop
sbbb
data16
add
std
mov
fidivrl
or
lods
lock
adc
or
mov
pusha
nop
call
adc
or
movsb
inc
mov
jo
ret
xor
cmp
push
loopne
aam
cltd
pmaxub
or
dec
sub
pusha
int3
fstp
mov
pop
add
stos
and
dec
lea
fsubrl
mov
jo
pop
rorb
into
js
testl
mov
or
add
dec
push
es
add
hlt
frstor
test
roll
or
xor
sub
es
jne
stc
sub
das
or
test
inc
aaa
sarb
insb
and
or
xchg
mov
mov
jns
cmp
push
pop
test
pop
pop
sbb
inc
sbb
jns
int
fidivl
push
cmp
testl
add
aad
insl
mov
cmpb
mov
pop
bound
enter
shlb
icebp
dec
pop
sbb
add
aaa
jnp
out
jbe
lods
aam
outsb
sarl
cmp
push
xor
ficoms
sub
adcb
mov
push
inc
inc
mov
hlt
sahf
adc
push
rol
and
inc
loope
movsb
jle
fistl
and
jge
fnsave
jmp
int3
shrl
xchg
ljmp
es
je
sbb
enter
jnp
leave
pop
push
aas
mov
fisubs
fnsave
es
cmp
and
sub
test
xchg
or
or
add
movsb
fnsave
or
mov
xchg
jne
adc
inc
fimuls
add
inc
pop
cmpsb
pop
pushf
addl
dec
aaa
fs
clc
loopne
adc
data16
sbb
js
ljmp
and
xchg
lock
lods
outsl
cld
rolb
shll
insl
push
fcoms
cwtl
dec
das
loopne
xor
mov
mov
rcrb
popa
mov
xorl
js
es
arpl
fsubrs
roll
and
add
jo
lods
add
mov
sbb
push
sub
sbb
xchg
dec
jecxz
push
sub
adc
shlb
fstpt
cwtl
into
shll
add
mov
and
push
nop
in
fldl
test
pop
jg
adc
cs
xor
inc
jl
clc
sbb
xchg
sbbb
movsl
sub
ss
mov
or
add
shlb
mov
test
push
dec
adc
push
jp
mov
mov
push
xchg
lods
shrb
lcall
movsl
test
xchg
sti
mov
shlb
daa
into
lods
dec
dec
imul
icebp
sahf
mov
jno
in
shrl
push
sbb
cmpsb
push
rolb
inc
or
into
lahf
inc
cmp
add
aas
icebp
push
rorb
es
push
fs
aam
push
cmp
dec
or
xor
mov
mov
scas
push
or
loopne
frstor
adc
xchg
jno
push
in
mov
and
mov
aam
out
and
or
or
insb
push
movsb
sahf
loop
xchg
jo
fs
mov
ds
push
lods
stos
adc
and
lahf
dec
call
mov
aam
sub
dec
mov
sub
push
xlat
and
mov
fistpl
inc
mov
popa
xchg
cltd
pop
cld
in
mov
xchg
sbb
mov
clc
lahf
dec
and
xchg
lret
pop
fld
ffree
push
dec
int
loopne
mov
xchg
sbb
pop
aaa
das
or
inc
lret
mov
sub
repz
rorl
mov
push
sbb
sbb
aad
push
pushf
xchg
mov
jb
add
ret
sahf
fildll
push
dec
stos
add
adc
and
or
xchg
ret
pop
and
jno
sbb
mov
jns
movd
or
call
rcrb
dec
dec
loopne
mov
mov
das
aas
jnp
inc
filds
jge
mov
sub
gs
shl
or
iret
das
test
arpl
inc
loopne
inc
push
es
adc
cmp
cmp
in
mov
inc
xchg
fistpl
shl
pop
popf
prefetch
mov
inc
xchg
and
dec
push
xlat
adc
pop
lods
push
jo
and
sbb
loopne
in
cltd
mov
jae
and
sbbl
push
out
lods
push
pop
test
push
popf
iret
add
icebp
imul
adc
mov
popa
push
and
add
pop
lock
or
mov
das
pop
inc
pop
and
imull
mov
push
jmp
loop
es
xor
mov
mov
sbb
fs
dec
rcrl
sub
jo
arpl
idiv
sarl
ret
pop
pop
dec
mov
dec
enter
stos
xchg
pusha
mov
scas
push
sbb
sahf
ja
jnp
add
or
cs
or
arpl
ja
xchg
pushf
add
jno
mulb
iret
and
cmp
sub
pusha
sub
inc
fmul
push
loope
lock
sahf
test
sbb
push
push
jns
imul
dec
shlb
in
jne
je
movl
daa
xor
in
push
mov
and
sub
mov
call
cltd
and
ss
adc
and
popf
and
sub
fiadds
adc
clc
mov
mov
pop
les
test
add
mov
insb
sbb
gs
nop
hlt
fisubl
inc
pop
stos
add
add
ret
clc
lea
xchg
lret
sub
push
dec
push
inc
adc
rol
pushf
sarb
jp
xorb
mov
push
fwait
push
push
data16
subl
repnz
jnp
add
in
xor
and
test
stos
push
cmpxchg
std
xor
xchg
ja
ss
xchg
sbb
xchg
adc
fldcw
pop
mov
pop
pop
cmpsb
mov
call
out
xor
dec
fldenv
loopne
rorb
sub
negb
and
mov
cwtl
and
jmp
push
pop
shl
sbb
mov
push
or
jp
push
dec
aaa
iret
xchg
sbb
ret
xchg
cli
push
inc
mov
push
pop
iret
pop
cld
ret
inc
lea
cmp
ss
leave
xor
mov
iret
jle,pn
rclb
fdivl
divl
add
ror
jbe
and
out
jae
cmp
jnp
xchg
rorb
pop
cli
or
and
add
mov
mov
jb
call
aaa
cmpl
cmpsb
inc
aad
cmp
sti
push
sub
inc
cmpb
ja
into
sub
or
adc
jl
push
clc
or
push
mov
andb
xor
sbb
adc
ret
push
ja
aam
loope
out
jnp
es
fsubs
cli
xlat
push
push
andl
mov
xor
push
jge
or
aas
dec
xor
sarb
mov
cmp
aam
fisubl
dec
push
lea
ja
es
jno
fwait
rorb
jge
and
les
cmpsl
jmp
or
repnz
jns
jmp
ss
pop
jle
mov
jge
inc
cmpsb
xchg
fadds
testb
xchg
cmpsb
adc
push
out
lods
out
push
shl
inc
add
or
je
daa
jo
test
pop
cmc
xor
popf
mov
sbb
inc
sbb
xlat
jecxz
jo
jne
stos
es
xchg
lods
jge
jne
xchg
sub
clc
jne
sahf
sbb
cmp
pop
repz
subl
jno
add
mov
lods
mov
adcl
xor
xor
cmp
adc
ds
js
sub
inc
and
enter
add
inc
xchg
push
add
mov
aaa
dec
dec
add
cmp
test
jno
mov
fdivs
mov
rol
lea
adc
xchg
test
stos
jne
clc
movsb
mov
pop
sub
andb
pushf
es
shlb
and
mov
movsl
jle
sbb
mov
rcr
sbb
jmp
dec
push
out
in
sbb
adc
es
fistl
cli
pop
pop
sub
mov
mov
xchg
lahf
mov
int3
es
dec
insl
iret
xchg
dec
push
mov
movsb
les
mov
imul
lcall
arpl
movsb
add
mov
rcrl
pop
je
je
test
adc
xlat
push
add
cmp
xchg
xchg
mov
or
ret
mov
add
inc
lock
sub
iret
pop
sbb
jecxz
loopne
test
inc
mov
stos
addr16
or
mov
aam
sbb
sbb
sub
or
push
out
je
fwait
pop
sbb
push
cltd
scas
pop
scas
push
mov
sub
leave
pop
dec
mov
dec
pop
jecxz
jae
xchg
sbb
jo
mov
xor
add
push
test
mov
outsl
adc
loope
stos
aam
and
call
stos
addb
push
pop
nop
jns
pop
leave
fldl
push
adc
dec
loopnew
int3
dec
mov
sbb
mov
rolb
mov
adcl
shr
sbbl
rorb
or
jo
fsts
pop
mov
add
mov
orl
aam
test
mov
push
sub
fmuls
leave
lods
add
popf
add
push
cld
xor
xchg
popf
adc
mov
xor
loop
insb
scas
test
sub
and
cwtl
jp
scas
dec
les
cld
and
sbb
jle
popf
loope
cltd
mov
push
iret
test
stos
xchg
add
lcall
dec
inc
add
pop
pop
out
das
sub
xlat
or
dec
mov
popa
or
dec
jmp
subb
lock
sub
lret
call
jno
sub
repz
mov
adcb
movswl
loopne
inc
dec
stos
std
sbb
push
popf
add
jmp
or
adc
or
jo
push
push
int3
je
add
aas
sahf
jo
mov
mov
cmp
pusha
cmpsl
dec
fcmovnbe
rolb
jp
mov
lcall
adc
sbb
mov
or
rcrb
lods
jle
cmpsb
pop
adc
bound
adc
xlat
adc
cmpsb
sbb
sahf
add
or
cmpsl
rolb
or
jl
pop
mov
inc
aam
data16
add
int
adc
fidivs
push
into
pop
xchg
shrb
inc
sub
jmp
adc
inc
dec
movlps
push
xchg
cmp
pop
pop
inc
sbb
push
mov
xor
push
bound
inc
xor
sbb
mov
cwtl
push
and
cmp
dec
cmc
push
adc
xlat
jp
insl
dec
push
adc
xchg
ret
data16
and
call
sub
xchg
movsl
push
iret
jle
dec
loop
mov
jg
or
mov
add
sub
and
nop
jg
xor
addr16
mov
sub
push
pop
dec
mov
rcrb
jge
repz
jno
shl
sbb
xor
adc
loope
loopne
mov
cltd
adcb
push
jno
mov
pop
jle
lock
xchg
lret
and
cltd
cmp
out
mov
mov
jo
sub
jl
jnp
in
jnp
mov
rcrl
cmp
xor
test
and
push
sbb
adc
or
test
int3
fidivrl
dec
fdivl
add
js
push
sbb
inc
loope
pushf
inc
or
pop
adc
aaa
mov
xor
ficoml
cmp
mov
and
mov
adc
pop
mov
fildl
add
mov
cmp
sbb
xlat
movsb
mov
xor
into
xchg
add
icebp
mov
paddusb
mov
xor
movsl
dec
and
cmp
dec
popa
xor
shlb
sbb
xor
inc
adc
cmp
adc
xor
add
mov
dec
test
inc
adc
cmp
mov
xchg
mov
loope
dec
add
hlt
adc
imul
add
adc
xchg
and
xor
adc
dec
xor
and
hlt
adc
fidivrl
fnstenv
sub
or
and
ret
in
test
pop
and
or
cmc
movsl
ret
js
js
scas
mov
outsb
sbb
ja
ds
in
mov
stos
xlat
push
and
ds
xchg
jne
adc
mov
aaa
mov
test
fisubrl
pop
mov
setp
mov
inc
and
push
lret
jmp
add
leave
inc
pop
jecxz
daa
or
add
sbb
dec
xor
dec
sbb
mov
ret
ds
mov
popa
sti
sub
mov
inc
pop
stos
ret
les
and
jb
add
and
push
mov
push
mov
or
xor
xchg
add
out
seto
push
stos
sub
jge
lea
js
jno
and
and
or
xor
mov
js
sub
mov
leave
and
sbb
incb
mov
rorb
cmpsb
push
clc
jge
sub
rcll
pusha
addb
inc
imul
dec
lds
mov
and
mov
fs
pushl
sub
in
jns
jge
sub
sahf
add
call
in
push
es
xorb
out
sub
dec
imul
pop
pop
movsb
orl
sub
mov
or
xchg
cwtl
loopne
xor
je
cmp
mov
data16
enter
sub
scas
arpl
xchg
pop
sub
push
sbb
mov
lcall
aaa
or
test
fcmovnbe
scas
pop
insl
lods
or
jae
mov
adc
test
jno
cmpsb
sub
push
lahf
mov
adc
push
sete
add
je
xor
xchg
ds
sbb
loope
insb
js
jns
jbe
push
adc
push
push
jne
mov
cmp
push
or
aad
pop
lahf
int3
les
aas
jo
add
test
xor
loop
push
mov
shlb
pop
jns
mov
xorl
dec
cmp
mov
enter
xor
and
pop
xchg
adc
xchg
jmp
or
aaa
add
sbb
push
test
aam
dec
pop
push
daa
pop
shlb
iret
outsl
js
push
or
sbb
add
shlb
gs
hlt
rcrb
or
cmp
mov
mov
inc
adc
mov
lret
jo
cmc
in
popa
mov
lea
mov
adc
push
repz
insb
mov
jge
enter
or
jp
inc
cmp
test
push
mov
aam
fldenv
mov
mov
and
jl
into
push
add
sbb
andl
mov
pop
jno
dec
cmp
mov
xchg
inc
push
mov
out
or
add
lds
pop
inc
inc
mov
loopne
idivl
dec
jnp
and
jle
inc
inc
ret
repz
cmp
mov
dec
je
les
xchg
jge
add
push
andb
pop
leave
rol
popa
mov
and
cmp
xlat
sub
enter
sarl
ljmp
vpmacsww
xor
cmp
scas
stos
cmpsb
xor
dec
mov
or
cmpb
add
push
sub
push
push
pop
mov
ret
mov
in
fwait
adcb
push
xor
cmp
icebp
pop
jmp
out
pusha
xchg
mov
and
mov
pop
xor
into
fisubl
inc
cmp
and
iret
or
mov
divl
ljmp
cmp
test
fdivl
imul
mov
push
fcoml
pop
add
xchg
push
or
or
jb
jb
or
pop
and
movsb
adc
pop
jp
ja
adc
mov
int
and
add
cwtl
dec
das
jno
orl
dec
arpl
dec
out
dec
in
pop
gs
or
cmp
les
jns
rcll
xorb
mov
and
daa
dec
call
xchg
arpl
push
sbb
xor
add
add
daa
jl
sub
imul
cmpl
cmp
sub
rcll
push
push
data16
std
jns
and
jno
daa
lea
ds
imulb
orb
in
jno
push
fidivrl
add
addb
sbbb
xchg
add
out
jmp
sub
shrb
jnp
sub
lods
addb
jecxz
add
add
dec
dec
out
mov
out
sbb
push
pop
jecxz
mov
pop
sbb
aas
inc
jg
addl
pop
sub
and
loope
fnstcw
sbb
pop
pop
pop
fwait
add
inc
or
jno
push
dec
les
movsb
xor
add
inc
dec
cmp
adc
pop
mov
sub
fwait
addl
es
and
repnz
dec
dec
jae
dec
jl
push
xor
rclb
inc
cmpsb
mov
xchg
xchg
or
sarl
add
adcb
pop
sub
mov
imul
jne
add
adc
jle
pushf
sbb
lds
lcall
sbb
xchg
arpl
daa
test
sbb
pop
adc
inc
push
pop
mov
adc
lock
mov
dec
loopne
mov
imul
faddl
xor
add
add
mov
js
pop
sti
aam
sar
adc
je
or
out
or
or
add
sub
mov
and
orl
pop
sbb
fcom
ja
mov
mov
push
aaa
adc
notl
lcall
popa
arpl
sbb
ret
jg
push
mov
outsl
and
outsl
ss
stos
xor
cmp
cmc
inc
dec
nop
mov
fldl
loopne
pop
xor
popa
mov
es
fcmovbe
sub
sarl
pop
sbb
dec
inc
into
or
les
gs
dec
pop
es
pop
push
pop
push
mov
mov
xchg
and
lds
or
mov
dec
in
daa
test
sub
outsl
pushl
rorl
pop
adc
push
jnp
out
ret
loop
add
dec
les
adc
pop
aas
push
dec
push
adc
or
xor
imul
fisubrs
cmp
arpl
xchg
ds
sbb
jmp
add
fisttpl
xlat
jb
fwait
nop
les
xor
dec
adc
or
je
adc
and
in
sub
jbe
add
or
rcl
jmp
out
movsb
sbb
mov
inc
popa
push
adc
or
js
or
sbb
and
fbstp
orl
cwtl
and
dec
test
sbbl
fisttpl
dec
sbb
push
push
loope
mov
xor
push
je
sub
pop
loopne
lods
add
nop
xor
rol
dec
mov
dec
dec
and
ret
add
sbb
lahf
dec
test
jne
loope
lods
cmpl
and
and
inc
cmp
js
sub
outsb
dec
stos
fwait
movsl
test
mov
mov
pop
icebp
gs
popf
xor
mov
loop
or
jne
sub
shll
sub
add
xchg
sbb
inc
shlb
sub
cmpsl
sub
andl
popw
sahf
jl
or
cmp
adc
mov
adc
jecxz
repz
cli
push
add
mov
or
jl
outsb
out
inc
xor
and
frstor
pop
ss
loop
sbb
notl
or
fidivrs
leave
jo
mov
sub
dec
filds
mov
pop
rol
outsb
cs
imul
mov
out
loopne
adc
mov
test
sub
cmp
test
subb
sbb
pop
sbbl
or
push
sbb
add
xchg
dec
adc
push
sbb
sbb
imul
or
xor
xor
repz
les
lock
xchg
fldenv
loopne
add
pop
ja
sbb
popa
in
add
add
sub
cmc
daa
xchg
ret
inc
sbb
loope
cltd
cmpsb
cld
ljmp
test
pusha
xor
sbb
inc
fisubrl
sti
enter
cwtl
mov
pop
and
jecxz
les
mov
jg
fcoml
jmp
lods
xchg
pusha
mov
inc
arpl
dec
or
test
pushf
mov
test
mov
mov
fwait
xchg
pop
punpckhwd
jmp
sub
icebp
or
jo,pt
cli
out
or
jmp
pop
sbb
repnz
mov
sbbb
fwait
or
enter
jp
push
cmp
clc
push
hlt
jp
jmp
insl
sbb
mov
dec
mov
inc
mov
rolb
or
add
mov
aad
lret
lods
insl
test
dec
aas
mov
push
mov
pop
movsl
xor
mov
sub
add
inc
cmpsl
cmpb
mov
xchg
dec
add
mov
mov
pop
jp
mov
test
mov
adc
mov
dec
sub
jge
dec
pop
lret
loope
jecxz
xor
sbb
pop
popa
lea
fldenv
sbb
aaa
jb
das
je
daa
stos
or
inc
xorps
mov
jmp
stos
das
dec
xchg
xor
xchg
cmp
rorl
xchg
cwtl
dec
rcr
push
sbbb
mov
dec
or
mov
out
adc
inc
lret
pop
or
pop
dec
aas
cmp
jge
sti
mov
ljmp
mov
inc
jno
sbb
mov
test
jbe
pop
ja
loopne
sti
or
push
jns
xor
imul
cmp
and
pop
pop
dec
mov
dec
xchg
adc
pop
jmp
pop
pusha
test
les
movhps
mov
daa
push
inc
dec
test
push
cwtl
mov
and
add
or
sub
xchg
je
fs
add
arpl
movsl
mov
cltd
pop
cli
mov
rclb
xlat
and
rolb
frstor
fldl
ja
and
push
test
cmp
adc
rclb
mov
adc
mov
dec
pop
push
ja
clc
sub
jle
sarb
mov
push
mov
and
lahf
push
gs
outsb
mov
xor
jle
loopne
pop
add
rcl
insl
aaa
lods
mov
dec
das
loopne
mov
lea
inc
mov
test
and
lds
and
xor
out
add
sbb
es
inc
insl
aad
pop
orb
aam
outsb
ja
scas
mov
int
sahf
incb
lods
sub
jbe
inc
test
int
iret
stos
mov
dec
xchg
jge
sbb
imul
push
inc
pop
push
into
inc
aam
std
bound
and
jb
imul
add
fmuls
adc
adc
arpl
push
mov
test
or
std
jb
sbb
jmp
or
cmp
jne
test
xor
dec
lock
ret
xorl
daa
arpl
jne
push
mov
push
stos
mov
das
arpl
scas
inc
movsb
stc
arpl
sub
or
mov
test
mov
xchg
popf
mov
aaa
out
nop
mov
and
sbbl
out
sbb
and
orb
push
push
cmpb
xorl
xor
xchg
insb
xchg
aam
imul
dec
jae
es
imul
pop
pop
or
xor
mov
nop
out
jno
sub
and
jne
xor
loopne
fcomps
mov
shlb
xchg
addb
pop
inc
shlb
cld
dec
mov
roll
mov
cmp
fsubs
gs
add
lret
iret
xor
lahf
daa
xchg
or
dec
push
outsl
add
and
dec
lcall
and
dec
lods
jp
inc
jns
das
dec
lret
clc
mov
sti
xor
cmpsl
push
xchg
jmp
push
imul
jl
fbld
arpl
dec
shlb
sub
xchg
jo
xchg
popa
les
add
sti
fsts
in
jo
push
iret
data16
mov
dec
adc
outsl
jl
les
hlt
jnp
pusha
dec
xchg
mov
xor
adc
jns
add
je
cmp
jne
ret
cld
pop
inc
pop
jmp
addb
es
ficompl
dec
jp
push
sub
movsb
sbb
cmp
inc
add
jne
add
dec
mov
xchg
adcb
cmpsl
out
mov
fwait
xor
add
rclb
xor
dec
mov
pop
xor
inc
dec
dec
or
adc
xchg
mov
jnp
insl
xchg
jno
xchg
jp
mov
shll
inc
xchg
add
mov
test
call
mov
push
xor
sarb
mov
mov
scas
pusha
imul
mov
inc
xchg
sarb
stos
cmpsb
mov
addl
mov
or
je
xchg
mov
gs
or
cmp
or
sbb
movsl
cmp
and
sub
rol
push
nop
fisubl
mov
add
daa
jnp
addl
je
and
popf
ret
add
mov
jl
add
cli
xor
mov
jb
sbb
sbb
jp
icebp
jnp
test
inc
lret
mov
scas
cmpsl
sahf
loope
xchg
dec
add
pop
sbb
mov
xor
or
mov
push
subl
add
mov
inc
leave
stos
or
sbb
aaa
push
inc
push
push
enter
loop
inc
push
sub
inc
in
sbb
add
arpl
cltd
mov
mov
add
loopne
and
push
cmp
add
leave
push
loop
xchg
mov
jle
jle
sahf
andb
pop
jmp
inc
pop
test
mov
push
cwtl
lret
jnp
and
enter
mov
cmp
test
pop
cmc
xor
jg
adc
shlb
ljmp
xchg
gs
xchg
mov
loopne
sub
hlt
jl
push
dec
mov
ret
and
aad
test
std
out
pop
xchg
ret
dec
mov
pusha
xlat
push
jns
mov
jns
mov
xlat
popl
xor
adc
sti
cmp
mull
inc
inc
inc
mov
push
mov
iret
cmpsb
je
loope
push
push
repz
outsb
jl
dec
imul
mov
mov
test
push
xchg
push
sub
in
fstps
fs
pop
test
lret
jmp
pop
or
jno
scas
fistpll
fs
or
arpl
mov
inc
mov
jmp
cmp
mov
aas
cltd
jp
or
aam
mov
stos
test
adc
push
stos
iret
mov
mov
aam
and
xchg
xchg
nop
das
add
add
rolb
test
popa
and
inc
mov
or
xor
push
aas
and
xor
lods
arpl
shr
adc
aad
cmpsl
xchg
cmp
or
aas
or
outsl
push
cmc
sub
sub
lcall
add
mov
bnd
and
xor
xorl
ja
je
cmp
sahf
clc
sbb
sub
inc
imul
cmp
add
call
jnp
push
jno
daa
pop
xlat
jo
sub
lock
or
add
stos
add
adc
dec
cltd
inc
pop
insl
test
ret
adc
or
nop
mov
add
shl
popa
add
subl
mov
iret
jecxz
mov
cmp
jmp
movd
lahf
push
in
gs
cmp
ret
jle
jle
add
push
cmc
lods
iret
cmc
cs
jge
push
mov
cmp
sbb
enter
incb
cs
ret
inc
enter
insl
mov
inc
scas
ss
jge
stos
movsb
rcll
faddl
js
mov
cmpb
or
and
mov
clc
inc
pusha
sub
push
mov
mov
push
mov
ret
mov
adc
mov
outsl
es
push
les
adc
xchg
add
adc
je
cwtl
push
daa
adc
jno
pop
sbb
aad
dec
inc
dec
dec
cmp
xchg
clc
inc
mov
pop
sub
andl
int
movsb
push
es
into
mov
out
iret
sbb
push
or
stos
negl
mov
bound
dec
add
in
or
outsb
fwait
push
inc
jg
popf
icebp
sub
mov
dec
mov
movsb
out
repnz
add
add
dec
ds
fcomps
jno
outsl
inc
add
or
or
adc
ds
imul
mov
test
push
dec
outsl
movsb
call
xor
adc
sub
pusha
sbb
std
les
inc
notl
adc
or
mov
sbb
and
jg
add
cmp
cld
icebp
aam
aaa
inc
inc
ret
lret
dec
xchg
jns
pop
shll
dec
test
sub
inc
js
dec
pusha
add
fs
rclb
pop
push
add
jo
mov
ret
sub
into
outsl
xchg
mov
fs
sbb
fnclex
dec
es
push
ffreep
mov
jns
call
inc
jmp
cmp
bound
in
fdivrs
test
fldt
jl
cmp
ss
out
scas
ret
pop
stos
js
aam
mov
jle
movsb
pop
inc
or
xchg
lret
mov
out
orb
cmc
lock
cmp
int3
popf
or
cli
inc
sbb
leave
shlb
cmp
push
jne
cmp
push
mov
rol
mov
sbb
adc
jae
add
xor
xor
push
adc
sub
add
mov
sti
or
fadd
mov
cmp
mulb
movsl
es
mov
std
shrb
jno
inc
arpl
add
xlat
pop
or
jo
lock
adc
lods
loop
mov
scas
jns
stos
dec
sub
sub
dec
loopne
jmp
outsb
mov
lret
or
pop
xor
jbe
mov
sbb
mov
mov
adc
xchg
sub
sbb
mov
and
push
inc
shld
call
mov
jo
lods
add
push
xor
adc
and
cmpsb
mov
lea
or
sbb
insb
inc
mov
lods
pusha
adc
jns
pop
je
jecxz
pushf
cmp
out
fildll
idivl
add
push
jo
xor
push
jle
push
inc
mov
cmp
idivl
mov
push
pop
out
enter
test
jp
push
cmpsl
dec
push
or
loope
xchg
or
out
push
add
and
imul
xchg
inc
sbb
sub
cli
bound
xor
inc
pop
cmp
loopne
adc
lret
mov
ds
push
bound
push
mov
out
addr16
xchg
push
movsl
cmp
imul
adcl
and
ljmp
and
rcrl
iret
jmp
jo
add
cmpsl
lock
ficoml
daa
pushf
adc
push
cmp
movd
gs
sub
mov
stos
cmp
or
xchg
cli
cmpsb
pusha
pop
mov
test
xchg
push
sarl
aad
cwtl
jmp
jle
inc
es
xor
js
notb
notl
push
andb
add
push
pop
jl
pusha
adc
int3
mov
ret
xor
negb
lds
dec
fucom
adc
jg
sbb
mov
and
push
jb
add
jnp
stos
inc
jmp
ret
cmpsl
lea
popa
mov
sbb
test
filds
daa
pop
xor
ret
add
adc
jmp
in
cmp
adc
adc
sbbb
aaa
jecxz
add
and
or
xor
xor
mov
or
push
and
out
mov
mov
push
and
jo,pt
lock
jno
mov
call
or
or
loopne
out
and
rcrl
popa
hlt
daa
cmp
adc
mov
dec
push
inc
popf
xchg
mov
pop
inc
pop
add
pop
fcoms
cmp
testb
pusha
insl
hlt
pop
ja
xchg
pop
inc
xor
xor
adc
sarb
and
in
pop
adc
push
sbb
adc
sbb
fwait
lock
popa
test
aam
mov
mov
pop
stos
adc
cs
sbbb
lock
lret
cld
add
push
lret
pushf
dec
shrl
adc
ds
and
jmp
add
pop
xor
pop
xor
and
mov
movsb
or
add
test
cmpsl
jo
mov
cmpsb
push
movsl
xor
lea
subb
cld
icebp
popa
sbb
add
jb
sbb
loopne
dec
jecxz
stos
jle
xor
adc
mov
dec
xor
lock
xchg
out
roll
jb
add
adc
dec
ljmp
push
into
cmp
add
daa
mov
fildll
add
leave
adc
jbe
push
insl
adc
cmp
cmpsl
jae
ja
movsl
xchg
popf
or
in
dec
loop
aam
loop
mov
in
add
mov
push
and
gs
adc
and
pop
pop
dec
daa
movl
adc
test
jo
iret
push
mov
movsl
mov
addr16
fstl
jle
in
xchg
push
inc
scas
iret
andl
sti
lock
add
ds
mov
inc
or
sub
in
in
xchg
mov
test
xchg
xor
dec
lahf
xor
jmp
xchg
lcall
cs
icebp
out
imul
rorb
test
add
dec
push
outsb
std
stos
sub
adc
jge
push
mov
mov
movsl
jbe
and
in
push
test
push
mov
dec
test
sbb
sbb
adcb
ljmp
adc
push
push
dec
pushf
push
dec
inc
push
sub
shlb
inc
lds
dec
jmp
and
pop
call
mov
mov
into
cwtl
imul
lods
jg
jbe
push
stos
rcrb
scas
std
fs
add
dec
stos
push
lods
nop
lock
add
push
jb
pop
mov
pop
out
and
push
repz
pusha
repnz
ds
jecxz
push
call
pop
mov
out
cmpsb
push
jecxz
sbb
popa
imul
fsubs
push
dec
inc
ss
add
add
pop
jno
sbb
and
dec
repnz
or
mov
gs
push
je
rcrb
xor
inc
push
push
mov
punpcklbw
je
and
mov
pop
lods
bound
pop
xor
js
pusha
xor
or
xchg
arpl
mov
fsubrl
sahf
jnp
cmpsl
and
ljmp
mov
cmp
push
push
xchg
shrb
insl
push
add
outsl
inc
push
inc
dec
cmp
lret
sbb
or
add
sub
loope
or
push
cmp
out
pusha
sbb
lods
sub
jle
mov
sub
and
pop
adc
lods
addb
dec
and
jns
lock
adc
sti
or
mov
xor
or
mov
jmp
out
mov
add
mov
cmpsb
cmp
ljmp
or
or
xlat
dec
or
xchg
test
sub
add
add
int3
clc
notl
inc
jp
mov
fbstp
mov
jns
inc
cmp
cs
sbbb
lods
sbb
imul
imul
loopne
and
sub
repz
mov
jg
push
xchg
mov
addl
paddq
lahf
fs
pop
or
pshufw
adc
aam
push
repnz
sarl
adc
and
pop
loopw
and
dec
or
fiadds
or
divl
inc
mov
loopne
pop
push
add
rcrb
pop
out
andl
jmp
jno
cmovs
or
ficomps
test
js
test
adc
pusha
jne
and
pusha
sbb
dec
scas
mov
insb
and
push
mov
dec
aad
jmp
cmovns
lods
push
xlat
pusha
movzwl
xchg
dec
call
lds
push
sub
pusha
dec
adc
add
popa
xorl
popa
mov
sub
jns
add
js
insb
adc
in
stos
adc
loope
cmp
enter
push
cwtl
sbb
dec
cmp
ljmp
mov
in
and
addl
test
push
stc
jne
add
sbb
or
push
push
xor
lahf
push
lret
and
clc
jnp
and
jns
xchg
push
mov
sbb
cwtl
loope
aas
sub
adc
inc
movsb
es
cmpsb
dec
test
cmp
and
xor
mov
cwtl
imul
and
ret
dec
add
std
hlt
xchg
ret
stos
lods
testl
scas
xorl
ljmp
ss
addr16
inc
mov
sbb
mov
mov
push
jl
and
mov
cwtl
dec
enter
sti
jp
push
dec
pop
fbstp
movsl
outsl
fwait
enter
jle
mov
push
and
adc
add
fisubrl
pop
lods
dec
or
mov
or
lcall
mov
jne
hlt
mov
aaa
mov
push
loope
push
into
stc
ss
stos
out
std
adc
sbb
xor
loope
xor
fs
mov
inc
and
mov
push
sub
mov
add
lret
mov
adc
sbb
cmpsb
in
mov
or
cmp
daa
test
roll
add
ficoml
jno
std
imul
test
or
jno
lock
sbbl
mov
hlt
shrl
es
loopne
es
int
test
imul
lea
pop
test
push
xchg
mov
fnstsw
addr16
mov
out
ret
lcall
inc
loopne
pop
out
loop
fbld
or
cmp
lds
cs
cli
mov
cmp
cmc
jle
jle
sbb
es
ja
sbb
pop
loope
push
ret
inc
inc
scas
sbb
add
mov
dec
cmp
scas
jne
mov
xchg
sub
xchg
cmp
sbb
jo
mov
add
inc
rolb
push
mov
cmp
sti
in
dec
add
or
push
in
pop
add
rolb
push
push
sbb
pop
cmp
pop
stos
daa
or
xorb
cltd
imulb
or
push
dec
jo
loopne
sbb
or
test
sub
mov
dec
add
popf
pop
movaps
mov
sbb
push
pop
rep
jecxz
ficompl
je
push
test
nop
or
sub
xchg
shrl
inc
jl
rorb
loop
movsb
inc
xor
jb
dec
sub
cwtl
aam
and
push
push
jno
into
sbb
mov
fcmovbe
xor
jge
and
cmp
movsl
sbb
mov
add
mov
fcmovnbe
int3
ret
jb
and
jno
pop
lcall
aam
sub
les
fld
or
stos
shlb
rolb
cmc
aad
fcomps
dec
jp
pop
mov
test
pop
movsb
nop
fucom
add
sbb
pcmpeqb
fisubrs
xor
movsb
jp
dec
pop
xor
in
add
arpl
add
je
xchg
adc
xor
lods
sub
bound
adc
jne
lret
pop
sbb
and
and
out
and
stos
popa
fildl
movsb
fcom
insb
add
pusha
xchg
and
dec
iret
shll
bound
pop
mov
lock
out
cmp
xrstors
iret
push
xchg
xchg
add
and
fiadds
xchg
sbb
sub
adc
pop
adc
or
sbb
mov
loope
xor
hlt
and
add
lret
sub
dec
ret
inc
pop
add
dec
push
test
lea
fnstenv
and
mov
xchg
pop
out
testl
popa
sbb
lret
sbb
ss
cld
dec
dec
add
insl
popa
add
jb
iret
jmp
jo
lea
orl
imul
hlt
imul
imul
mov
sarl
xchg
add
aam
pusha
cmp
mov
push
mov
sub
inc
mov
iret
push
insb
movsl
push
bound
in
mov
nop
pop
mov
cli
shlb
sbb
or
scas
push
xor
push
movsl
testl
outsl
outsb
repz
or
mov
cmp
cmpsl
jnp
in
test
lods
mov
rolb
xlat
push
test
insl
sbb
in
pop
sti
mov
fisttpl
popa
sub
movb
push
mov
icebp
sbb
pop
and
leave
les
mov
push
mov
jo
dec
dec
ljmp
ja
imul
iret
clc
sub
pop
iret
add
dec
or
scas
es
ficoms
or
or
roll
sub
adc
sbb
orl
into
xor
outsl
ret
or
popf
pop
rorb
fdivp
mov
dec
cmpsl
inc
test
filds
xchg
cmp
scas
aad
pop
outsb
pop
cmp
or
inc
aaa
xchg
lods
insl
lods
imul
cmp
and
aaa
xchg
icebp
leave
test
out
mov
out
jl
ret
jl
orb
cld
loopne
cmc
shlb
pop
ret
in
mov
cmpsb
cltd
push
push
sbb
movsl
clc
jne
cmp
sub
add
sbb
je
jnp
rcrl
lret
sub
js
popa
mov
pushf
or
jnp
sub
sbb
lods
xlat
dec
loope
fdivrp
sbb
inc
pusha
addr16
int
sahf
mov
repnz
frstor
or
or
imul
xorb
cmp
cmc
jo
mov
lret
shll
outsl
shll
lock
or
xor
mov
popf
mov
inc
cltd
and
je
ja
or
adcl
int3
pop
or
movsl
cltd
and
ss
aaa
mov
sbbb
jae
out
das
dec
sub
add
stos
lods
movsb
xor
push
aam
and
inc
adc
pop
mov
mov
packuswb
adc
mov
mov
insb
bound
xor
fsubr
lea
add
mov
push
lods
lock
lea
jae
mov
inc
xchg
test
pop
jle
and
imul
int3
popa
and
jae
popf
fsubrs
cmpsl
push
adc
pop
movsl
aad
inc
jae
mov
sub
leave
xchg
and
pop
or
in
push
cltd
mov
push
dec
out
mov
pop
mov
outsb
movsb
loopne
fcomps
pop
fwait
cmp
outsb
subl
add
xor
int3
les
and
mov
mov
pushf
inc
xor
inc
jb
mov
and
xchg
testl
and
out
push
pop
sub
ja
out
and
jge
loopne
cwtl
adcb
sbb
lods
ja
add
sbb
jp
cmc
push
sub
arpl
in
pop
inc
lods
mov
scas
arpl
sbb
test
cs
mov
push
fistpl
stc
or
jl
push
mov
push
fimuls
pop
daa
adc
lea
aaa
or
sarl
dec
add
add
repz
mov
and
sbb
pop
js
pop
sti
jno
add
add
test
popf
dec
push
adcl
mov
or
xor
mov
pop
loope
mov
xchg
je
pop
add
test
rcr
test
into
aam
mov
mov
std
test
push
out
pop
inc
mov
sub
lret
mov
scas
push
xchg
push
mov
adc
add
or
lcall
mov
mov
or
mov
and
daa
dec
hlt
inc
push
xor
std
sub
sub
and
cmc
pop
test
lds
push
popa
lret
lcall
shlb
cld
pop
lods
fistpll
fadds
roll
sbb
sbb
mov
and
xor
or
push
push
mov
xchg
test
mov
lea
scas
jecxz
push
lods
mov
mov
int3
test
rolb
mov
incl
xor
pop
cmc
or
rcl
jecxz
and
adc
pop
test
fdivrl
loopne
aad
dec
add
or
pop
sub
test
xchg
mov
pop
cli
aad
shl
jo
add
and
pop
cmp
popa
enter
repnz
stc
arpl
mov
xchg
adc
es
jbe
sbb
cmp
fwait
loop
aad
fisubl
push
cli
mov
test
cmc
add
cltd
push
scas
dec
push
pop
mov
mov
iret
xor
daa
int
dec
and
push
mov
adc
mov
int
shlb
movsb
sub
lahf
xor
lea
arpl
lods
and
test
cmp
hlt
daa
aad
or
inc
fcoml
cmpsb
pusha
pop
icebp
rclb
lea
movsl
ret
add
aaa
test
cmc
push
ds
mov
xchg
or
inc
jne
push
aam
test
lods
repz
dec
cld
lock
test
inc
test
mov
in
mov
mov
cmp
push
or
xlat
hlt
push
add
je
sub
dec
das
or
inc
push
and
push
add
pop
pop
mov
push
movsb
jns
fsts
rcrb
mov
adc
outsl
insb
jp
jmp
and
xor
pop
adc
mov
test
push
imul
jb
popa
insb
sub
sub
fildl
das
push
orl
test
in
mov
sbb
lods
and
inc
add
push
fisubrl
adc
and
fnstenv
xor
jnp
negl
pop
jb
pop
jmp
add
adc
mov
cmpsl
push
jl
pop
movsb
and
pusha
stos
mov
out
bound
pop
lret
ret
adc
xor
dec
inc
add
aam
adcl
dec
adcb
adc
fisubs
nop
mov
je
popa
sbb
test
loope
icebp
xor
daa
push
sahf
and
orb
ds
or
or
jne
stos
and
sub
adc
jg
cmp
call
jl
test
push
and
pop
cmpsb
jno
loopne
add
test
adc
enter
movsl
sbb
push
mov
punpcklwd
cmp
adc
adc
jns
pusha
cmp
sbb
or
xchg
inc
mov
cmpl
mov
pop
xor
pop
xor
icebp
inc
lock
sub
icebp
push
jmp
sub
orl
mov
test
cmpl
mov
add
sub
mov
fs
ljmp
push
bound
icebp
insl
adc
fadds
dec
jg
sbb
mov
arpl
addl
push
sbb
cmpsl
addr16
test
roll
dec
sub
shlb
test
arpl
or
aaa
test
pop
pop
pop
jle
iret
push
pop
sub
gs
or
cmovne
inc
icebp
push
dec
lcall
ja
mov
jno
cmp
int3
adc
daa
mov
in
add
flds
xlat
or
daa
xchg
shrl
sub
sbb
dec
lret
xor
loope
inc
and
jo,pn
adc
loopne
fwait
sub
add
nop
mov
inc
fidivrs
iret
pop
add
add
and
sbb
das
sbb
cmp
mov
jnp
xchg
sub
push
mov
or
int3
lock
loopne
add
xchg
pop
push
pop
xor
clc
cs
dec
data16
fs
scas
es
mov
and
jmp
and
ret
sbb
xor
loopne
ret
xchg
dec
adc
ja
xchg
sbb
jne
imul
sub
mov
jmp
cmp
sub
call
idivb
adc
xor
pop
pop
sbb
xchg
ret
or
lret
sub
cmpsb
inc
mov
dec
mov
out
or
rclb
push
scas
xchg
or
inc
cs
mov
mov
int
pop
jne
rolb
push
js
leave
xor
cmp
cli
jecxz
cmc
pop
or
iret
and
xchg
loope
add
mov
or
pop
sub
xor
add
sub
pop
je
cmc
fldcw
jmp
test
pop
push
cld
jo
mov
ds
mov
lahf
and
sub
xchg
ror
pop
adc
xor
pop
sbb
aaa
push
repnz
ret
push
cmp
xor
cmp
xor
jge
add
mov
stos
jno
into
or
sbbl
mov
mov
insb
xor
sbb
inc
gs
sub
aad
lea
out
xor
push
xchg
iret
mov
push
mov
xor
inc
add
or
pusha
xchg
loopne
push
jno
ja
mov
lret
cmp
pop
incb
iret
iret
lret
push
sub
xchg
xchg
ljmp
outsl
mov
mov
sar
sub
cmp
xchg
aam
decl
cmp
dec
mov
add
mov
mov
xchg
adc
cmpsb
test
inc
sub
and
mov
adc
rclb
sub
add
lods
and
push
sub
imull
fwait
aam
fisttpl
scas
dec
mov
test
mov
lar
lock
jecxz
add
add
mov
push
xchg
xchg
and
rorb
dec
push
loope
fwait
or
cmp
faddp
dec
dec
fists
ja
inc
js
out
pop
dec
jg
push
pop
popa
or
xchg
mov
and
inc
or
inc
insb
cltd
scas
mov
cmp
jmp
icebp
inc
pop
push
out
dec
inc
das
sbb
cmp
push
movsl
aam
add
mov
xchg
dec
or
fimuls
aaa
loop
rcl
xchg
enter
add
cmp
lods
es
pop
mov
stos
cmp
js
aaa
cwtl
and
add
clc
and
adc
adc
insl
iret
jbe
out
js
mov
insl
cs
push
push
mov
sbb
aam
xchg
enter
out
or
shll
sbb
cmp
fcom
and
stos
sbb
lock
lea
rolb
jbe
sub
mov
jp
sbb
and
lock
add
nop
xor
nop
or
stos
xchg
cmpsl
sub
add
mov
scas
dec
jecxz
test
and
sub
mov
sub
lcall
pop
mov
cmpsl
dec
xlat
push
dec
pop
mov
or
sti
dec
and
rolb
pop
pop
xlat
out
sbb
popa
mov
adc
ret
mov
iret
jo
fcoms
inc
or
test
or
xchg
cmp
dec
add
pop
inc
inc
or
or
out
or
cmc
fstp
ss
pop
dec
sbb
fwait
adc
repnz
aam
jae
adc
push
push
hlt
adc
add
inc
in
sub
js
movups
mov
add
adcl
js
imulb
push
push
sbb
lods
insb
jno
sub
ss
bound
push
and
shr
sub
sbb
mov
pop
xchg
push
jle
pusha
lock
xchg
adc
inc
data16
popa
in
arpl
movsb
mov
dec
pop
push
xchg
or
dec
lods
inc
movsb
inc
rolb
mov
out
adc
insb
pusha
iret
dec
scas
push
pusha
dec
xchg
repz
or
pop
cmp
or
mov
cmp
and
clc
out
outsb
scas
mov
sbb
add
push
jo
ror
cmp
mov
outsl
pushf
lret
inc
dec
addr16
adc
cmp
loopne
mov
arpl
or
rolb
mul
je
leave
sub
adc
adc
dec
dec
scas
cli
popf
or
dec
jecxz
jmp
push
and
inc
pop
sti
adc
fdivrs
mov
cmpsl
stc
mov
cmp
jmp
cmp
imul
imul
mov
adc
dec
out
test
pop
sarl
mov
jle
imul
aad
jb
add
jmp
lock
insb
int
add
fcomp
mov
add
rorl
cmp
push
cmp
dec
xor
pop
mov
mov
dec
pop
mov
imul
inc
das
mov
icebp
mov
sti
cli
int3
sbb
inc
mov
inc
cmp
pop
scas
ja
loope
jmp
loope
lds
cmpb
shr
mov
mov
ret
inc
mov
shl
loop
add
mov
sbb
mov
lahf
addr16
add
mov
sub
ljmp
aam
dec
sbb
jg
mov
nop
xorb
mov
jnp
orb
loopne
xorl
pop
mov
bound
push
inc
lahf
add
xchg
jp
iretw
mov
arpl
or
push
cmp
pusha
ret
add
xchg
jl
test
stos
mov
push
jae
sub
adc
sub
jmp
jne
bound
push
lock
cmpsb
cmp
ret
push
sbb
rcl
in
cmp
jle
xchg
add
mov
jmp
aam
iret
dec
add
add
inc
xor
sarl
addb
or
add
jmp
cltd
and
iret
jae
mov
xor
bound
sub
sti
pop
ret
fwait
add
cmpsb
loop
mov
je
test
out
andl
push
out
pop
add
cltd
mov
call
push
pop
push
lea
push
int
sbb
imul
fcmovnb
nop
ja
sub
popa
cwtl
push
mov
and
mov
or
insl
pop
jmp
cmp
sub
cli
dec
and
insl
rorb
add
pop
lods
popa
lock
mov
mov
ret
add
mov
shlb
push
jns
pop
dec
add
sbb
mov
mov
cmpsl
xchg
jnp
mov
es
adc
sub
add
push
mov
xchg
fbld
out
ja
sbb
stc
data16
fadds
outsl
bound
iret
into
and
adc
cld
sub
cmp
testl
add
mov
dec
loop
sahf
xchg
jmp
mov
cs
es
gs
or
cwtl
js
es
ss
jge
pusha
repz
jg
inc
stos
and
sub
add
in
std
xchg
fdiv
cli
pop
es
inc
pusha
es
daa
aad
jp
jle
and
push
dec
lret
lea
daa
js
cld
leave
jnp
adcl
lods
ds
add
mov
test
push
repnz
leave
iret
pop
add
inc
daa
jp
lret
sbb
jp
push
leave
lret
test
mov
xchg
out
xchg
cmpsb
ja
mov
mov
rclb
decl
imul
mov
test
push
ror
adc
sbb
xchg
ds
cmp
or
aad
iret
push
xlat
shlb
pop
popa
daa
mov
push
mov
pop
test
out
adc
add
imul
inc
pop
test
push
addl
jge
gs
cmc
sub
adc
js
jmp
or
aam
mov
mov
cmp
dec
popf
cmp
nop
dec
fsts
mov
loope
push
jle
dec
inc
outsb
push
adc
dec
xchg
cmc
adc
xchg
pop
pusha
cmp
fld
xor
fwait
push
dec
ja
xchg
pop
adc
inc
add
dec
je
pop
push
mov
add
dec
pusha
or
add
das
fldl
mov
pop
addr16
in
flds
lret
or
fadds
arpl
ret
add
xchg
mov
push
aaa
sub
dec
cmp
int
cmp
inc
jae
xchg
xchg
rolb
cmp
fsts
cmp
xlat
inc
dec
pop
mov
popa
test
repnz
push
jno
inc
loopne
lret
std
jecxz
sub
ss
sbb
xor
dec
int3
sub
clc
pushf
jo
push
mov
xlat
lcall
mov
pop
subb
sub
xchg
imul
arpl
and
cmp
lahf
jmp
aaa
mov
lods
xchg
adc
aas
imul
mov
lahf
testl
push
sahf
and
xchg
repz
ss
inc
and
push
mov
mulb
bound
jmp
fs
mov
inc
fldl
sub
mov
addr16
mov
xchg
aas
sub
rolb
dec
mov
dec
stos
fwait
repz
dec
pushf
push
fwait
test
test
fs
ljmp
pop
mulb
jmp
xchg
jne
xchg
in
sbb
sbb
or
fucomi
push
sub
test
fcoml
xchg
insl
xor
stc
add
mov
xchg
pop
std
arpl
mov
fwait
mov
sub
xor
sub
xor
mov
mov
mov
sbb
lods
mov
or
add
arpl
jmp
sbb
add
mov
iret
adc
jns
lods
cmc
fmuls
pop
add
loope
dec
xchg
ret
xchg
xchg
stos
in
daa
fisubl
mov
inc
ds
inc
sbb
xor
or
xchg
hlt
je
pusha
mov
rcrl
push
or
mov
mov
xchg
mov
js
inc
ds
cltd
add
shll
sub
outsb
daa
ret
xchg
cmp
repz
sub
add
sub
mov
mov
jge
shlb
xlat
icebp
and
clc
mov
xchg
cmp
sub
or
or
inc
or
add
dec
push
mov
je
and
or
add
nop
inc
call
loop
je
mov
jle
cmpsl
push
inc
inc
xchg
decb
jnp
sub
xchg
repz
fcomps
pop
imul
xor
inc
sub
gs
xchg
mov
xchg
add
adc
sbb
pop
pop
cltd
add
adcb
pop
jp
push
adc
je
push
rol
sti
jge
adc
roll
pop
cmp
in
jb
add
sub
sbb
and
dec
add
xchg
xchg
cmp
jb
mov
lock
lea
fucomip
in
jno
mov
fsubs
nop
addr16
xor
adc
rorb
aad
mov
add
in
inc
rclb
or
push
mov
nop
ret
sbb
push
rclb
test
mov
xchg
pushf
cmpsb
imul
loop
inc
dec
cmp
jne
loope
adc
daa
mov
sbbl
jl
mov
fcomi
push
pop
or
push
fmul
pop
mov
inc
dec
sbb
adc
ds
adc
fdivs
mov
icebp
mov
popa
lock
or
ret
mov
inc
loopne
mov
leave
das
or
jecxz
sbb
jbe
cmp
clc
adc
mov
mov
dec
xchg
fdiv
or
sbb
or
push
xor
dec
dec
rorb
xchg
lods
push
cmp
xchg
lods
test
notb
push
pop
cmc
adc
lods
cmp
mov
xor
push
push
std
adc
mov
lods
adc
iret
mov
xor
je
push
lock
js
inc
sbb
inc
and
add
lahf
xlat
pop
jmp
xchg
int
fs
pop
adc
push
jecxz
daa
test
and
xchg
mov
test
scas
je
mov
hlt
sub
sbb
adc
and
loopne
fisubl
pop
out
dec
cld
out
jl
test
cmp
sub
sub
xchg
jne
mov
sti
andb
or
and
sti
loope
out
sub
or
mov
call
outsl
jmp
jno
inc
sub
shlb
dec
repz
jno
mov
fsub
rcll
adc
inc
in
icebp
ret
in
insl
xchg
jo
pop
iret
adc
scas
mov
out
out
repnz
add
cmp
sbb
sbb
sub
pop
sbb
dec
lock
outsb
testl
or
cmpb
pop
ret
sbb
add
out
sub
js
dec
inc
out
and
push
shrd
out
xor
ret
std
fs
hlt
popf
shrl
dec
and
mov
je
adc
aad
push
scas
and
aad
movsb
jg
xor
or
inc
jnp
sbb
jne
or
and
cmp
xor
add
stos
or
and
sbb
push
enter
or
loop
sahf
shrb
mov
push
dec
pop
fnsave
or
fisubl
cmp
xchg
sub
adc
in
je
or
add
xchg
es
aaa
jle
cs
xor
test
sub
mov
test
out
aas
add
dec
adc
cmp
pusha
mov
pop
movsb
xchg
pop
ret
iret
adc
or
push
pop
push
xor
inc
es
jmpw
add
fcoms
add
int3
and
insl
pop
inc
jnp
lret
xchg
dec
xchg
sub
xchg
mov
call
pop
mov
add
push
add
ss
add
lea
mov
rorl
lahf
iret
ret
xor
fstpl
faddp
ds
rclb
repz
add
xchg
in
add
mov
pop
mov
jo
pusha
jb
sub
pop
xchg
dec
cmp
mov
sbb
sub
rolb
jmp
jae
addr16
jae
cmp
sub
cli
jnp
in
mov
lret
ret
sbb
xlat
jg
mov
pop
or
fdivs
shrl
fs
xor
dec
inc
and
add
push
icebp
inc
scas
adc
jge
insl
mov
lods
outsl
rcrl
adc
clc
ds
mul
mov
add
fsubrl
stos
and
loope
mov
imul
test
add
xchg
inc
enter
inc
xchg
addl
pop
ret
cwtl
sub
shll
das
dec
mov
push
lods
icebp
push
fidivs
pop
xchg
ss
pop
fcomp
movsl
shll
loope
cmpsb
cmp
popa
sti
ret
add
iret
addb
pop
arpl
adc
or
loop
and
movsl
rorb
inc
test
icebp
sub
sbbl
jle
push
dec
cmp
lods
es
in
jbe
cmp
add
outsl
ljmp
mov
clc
add
sarl
inc
cmp
js
or
fld
roll
lods
cltd
fsubrl
add
or
adc
test
lret
lods
clc
repnz
cmp
dec
ja
pop
enter
loopne
aas
jg
push
ret
dec
les
in
xor
inc
cltd
rcrl
push
cmp
add
jns
fdivs
test
sbb
inc
and
push
adc
scas
pop
mov
add
add
inc
nop
popf
cwtl
add
adc
add
dec
test
jae
and
add
fwait
aaa
mov
and
ja
lods
jno
mov
and
outsl
movsb
mov
jmp
das
jle
xor
sysexit
xchg
lods
adc
dec
mov
or
push
addr16
imul
dec
das
jecxz
cmp
je
ja
fcomip
jne
pop
mov
jp
stos
enter
cmp
ret
inc
pop
add
adc
dec
aaa
stos
daa
notl
push
cli
and
pop
xorb
mov
or
mov
nop
or
xchg
test
push
sub
lods
sbb
jns
inc
lcall
scas
dec
add
jp
jmp
bound
andl
dec
arpl
ret
into
xlat
rcr
xchg
jge
and
cli
add
jb
cmp
popf
movsl
xchg
lret
xor
mov
pop
add
push
leave
int3
jecxz
push
pop
iret
lahf
mov
mov
or
xlat
lahf
lret
lods
add
xor
int
and
mov
les
xchg
mov
test
cltd
xchg
lret
push
and
inc
fildl
jcxz
jno
push
push
push
cmpsl
or
iret
dec
xchg
test
pop
sub
out
inc
fsubr
test
rcl
loopne
mov
jbe
inc
call
xor
rol
add
pop
cmp
stos
xor
popa
test
je
sbb
sbb
xor
adc
adc
xchg
stos
aam
pushf
lret
fildll
cmc
nop
xchg
push
cmp
jne
mov
insb
xor
adc
leave
ret
inc
stc
or
fcompl
lock
xchg
pop
shll
pop
push
mov
mov
aam
sbb
xor
mov
push
adc
mov
mov
js
gs
rolb
mov
and
cmpsb
jnp
xchg
rorb
outsl
insl
adc
cmp
push
pop
loop
dec
xchg
mov
add
jo
pop
lock
iretw
or
jecxz
fsubl
jmp
adc
dec
mov
daa
test
and
je
std
addl
jl
mov
sbb
stos
mov
inc
sbb
repz
mov
jmp
jne
or
sahf
mov
and
movsl
insb
inc
int
test
inc
fidivs
cmp
sub
push
ret
paddw
push
adc
adc
cmc
xchg
sarb
xchg
lahf
aam
dec
mov
inc
dec
movsb
fwait
in
push
call
rclb
xchg
jne
pop
leave
fstpt
mov
pusha
mov
cltd
cmc
and
push
lretw
pop
push
adc
push
test
and
cmp
mov
xchg
cld
xchg
inc
les
add
or
push
pop
cltd
rol
xchg
adcl
push
and
rcll
lret
dec
pop
add
inc
jmp
insl
and
mov
sarb
movsb
negl
pop
jge
jp
and
sbb
mov
pop
pop
stc
sub
lea
jne
rcr
jno
or
loopne
cmp
cmp
cmp
arpl
sbb
pusha
das
pop
and
dec
das
fcoms
add
pop
xchg
mov
push
rcrl
sub
or
pop
lahf
xchg
push
mov
cmpsl
jle
jmp
mov
lea
add
and
sbb
lcall
pop
xchg
sbb
inc
inc
popa
jnp
jbe
repz
xchg
pop
pop
sub
mov
fmul
clc
aaa
lock
insl
lods
nop
jns
inc
popa
movsl
xchg
push
jb
push
cmc
and
lock
mov
mov
pop
hlt
xor
insl
sbb
out
stos
pop
and
inc
push
or
and
out
cmpsb
sub
test
cli
or
call
inc
pop
ret
aaa
mov
das
clc
push
add
into
mov
jnp
mov
add
pop
aaa
jle
pop
xchg
mov
pop
test
insl
sub
ret
sbb
push
and
pop
iret
aam
xchg
imul
mov
inc
add
aaa
jae
pop
xchg
sbb
insb
imul
xchg
jg
sbb
mov
push
add
insl
push
push
jle
and
decl
push
stc
jge
fwait
mov
mov
inc
ficompl
sbb
rorb
xor
daa
cmc
movsb
ret
xchg
pop
fimull
in
mov
dec
ds
sub
jg
sbb
push
mov
push
mov
jae
sub
out
adc
push
add
aas
ret
shlb
es
gs
mov
or
or
cltd
in
hlt
fcompl
sbb
lret
xchg
mov
adc
xchg
inc
imull
jmp
cmpsl
jb
inc
lods
and
jg
jb
jns
loopne
ljmp
out
stos
xchg
das
fwait
movsb
scas
dec
mov
and
rcl
adc
int3
sbb
pushf
xchg
adc
xchg
mov
sahf
fldcw
xchg
and
out
push
popa
shl
jmp
and
inc
les
lods
xor
mov
sub
or
lret
js
add
mov
icebp
or
adc
xchg
mov
fisubrl
dec
lods
xchg
mov
lret
pop
shl
cmp
sub
test
test
dec
nop
ret
xorb
aaa
in
sub
pop
test
dec
iret
clc
cmpl
repz
mov
or
data16
xchg
xchg
adc
add
mov
mov
push
adc
push
push
push
xchg
push
loope
mov
jo
cmpb
mov
inc
bound
xchg
xorb
add
add
sub
xor
mov
test
jecxz
or
fmull
imul
js
xchg
mov
or
hlt
nop
inc
mov
push
outsb
xor
adc
jecxz
push
movsl
pop
shrl
ljmp
in
stc
cmp
ss
mov
cli
push
popf
sbb
and
push
pusha
xchg
aam
mov
cmp
fiadds
push
push
loope
jae
es
dec
dec
or
inc
loopne
mov
sti
inc
add
aad
out
pop
push
ljmp
sti
push
mov
lahf
xor
cmp
ret
pop
push
iret
mov
jo
hlt
mov
int3
cmp
push
addr16
addr16
push
mov
mov
mov
dec
jecxz
xor
pop
sub
xchg
mov
into
add
movsl
addl
cmp
add
test
daa
jns
dec
cmc
popf
pop
cmp
in
pop
or
dec
or
add
test
inc
aas
xchg
bound
xor
mov
test
ret
jle
scas
push
cld
lret
and
add
sbb
dec
cmp
push
sub
or
sub
and
clc
mov
sbb
shlb
nop
scas
push
push
jnp
push
ja
sbb
movsl
fisubl
dec
adc
mov
js
outsb
sub
xor
add
jl
cmp
jae
mov
or
mov
sub
sbb
int3
dec
imul
inc
and
ret
inc
shrl
dec
ret
call
ret
pop
or
xchg
arpl
cmp
push
mov
add
popa
test
sbb
xor
popf
das
cs
xchg
and
push
adc
dec
popa
mov
ret
into
lahf
or
les
and
mov
in
test
mov
in
xchg
jo
inc
loopne
stos
decb
fsubs
dec
aaa
inc
repz
mov
jb
pop
push
out
and
dec
sbb
rorb
sbb
fnstenv
and
push
sbb
fwait
hlt
mov
arpl
and
jb
sub
bound
andl
mov
sbb
aam
jmp
adc
add
add
rol
dec
aas
push
ss
mov
fstl
rcr
js
aad
pop
repnz
imul
jno
cmp
xchg
iret
ja
movl
in
lea
imul
push
mov
mov
push
adc
xchg
call
pop
movsl
iret
bnd
add
mov
dec
add
jae
mov
shlb
xor
adc
xchg
and
dec
ss
scas
orb
ret
out
dec
fists
cmp
pop
lcall
ja
ljmp
fwait
leave
xor
xor
jg
aas
xor
push
mov
out
xor
jnp
cmpsl
or
mov
daa
sub
lock
imul
bound
mov
xor
jo
pop
mov
jno
cmp
push
adc
mov
jb
icebp
movsb
or
fcomi
inc
pop
les
sbb
ret
and
mov
rclb
mov
add
notl
scas
dec
or
xlat
add
push
mov
push
dec
test
mov
ret
adc
aas
icebp
and
cltd
pcmpeqd
push
xor
xor
loopne
icebp
lods
je
sarb
add
sub
loop
sub
push
sub
xor
add
pop
lock
jne
ds
cmp
data16
or
iretw
jne
inc
push
cmpsl
mov
cld
jge
mov
cmp
ljmp
or
adc
xor
add
dec
enter
pop
ljmp
lret
popa
mov
jo
out
push
mov
push
push
or
cmp
and
lahf
stc
imul
xor
mov
adc
je
add
test
ja
cmp
or
xchg
sbb
lock
push
std
cmp
or
add
fstpt
and
test
icebp
pop
mov
xor
rcll
sbb
add
lds
adc
add
leave
outsb
and
lds
popa
sbb
add
stc
arpl
and
arpl
out
inc
jge
sbb
dec
or
add
add
mov
lods
test
sub
ret
cld
pushf
xlat
mov
mull
xchg
je
hlt
in
les
adc
je
and
orl
fcmove
ret
test
movsb
jecxz
jmp
inc
out
xchg
cmp
add
jg
and
or
xorl
and
sub
add
cmp
das
insb
cmp
mov
es
cmpsl
das
adc
xor
jmp
movsl
mov
mov
xchg
adc
or
call
inc
daa
cmc
mov
mov
and
cmpsb
xchg
fcmovnb
push
or
cwtl
insl
cmp
pop
or
and
out
pop
jb
mov
pop
xor
sbb
imul
add
mov
inc
xor
sub
dec
repz
adc
push
lock
xchg
loopw
xchg
out
and
adc
enter
inc
ret
adc
sbb
pusha
orl
sub
stos
je
cmp
aam
push
cmp
pop
add
nop
cmpl
jp
xor
sbb
pusha
test
lret
pop
jnp
push
add
mov
addps
into
sti
addl
bound
inc
add
sahf
mov
mov
scas
iret
ret
ja
pop
dec
sarl
lahf
sti
mov
mov
sub
pop
das
xchg
add
and
imul
es
mov
mov
or
les
into
mov
jno
addr16
out
mov
cmp
ljmp
loopne
ret
ss
push
push
rcrb
adc
stos
inc
imul
push
or
cmp
mov
popf
dec
xchg
lods
sti
jecxz
adc
jl
clc
dec
rclb
cmpsl
jmp
sub
or
ds
sub
cmp
add
shl
dec
pop
inc
cmp
cmc
mov
ficoms
push
push
adc
cmp
xchg
aaa
test
push
or
add
inc
stos
and
aaa
mov
scas
das
adc
dec
mov
inc
out
inc
jmp
aaa
mov
aam
in
insl
mov
aam
cmp
scas
mov
imul
and
shrb
xlat
pop
or
lock
sub
adc
out
mov
aam
stos
mov
push
vunpckhpd
inc
or
add
or
or
sbb
inc
add
push
cmpl
dec
rolb
push
movsl
xchg
mov
dec
daa
mov
cmpsl
mov
mov
or
push
sbb
add
jno
add
es
adc
adcl
add
pop
pop
test
mov
hlt
jl
js
fbld
adc
xchg
lock
fwait
mov
adc
subl
push
cmp
xchg
popl
scas
scas
xchg
pop
mov
aam
shrl
jb
aaa
cwtl
sub
mov
or
jns
addl
or
and
adc
sub
pop
or
mov
xchg
adc
inc
or
rol
mov
ret
mov
inc
or
add
mov
mov
fsubs
sar
sar
les
adc
adc
push
daa
fdivrs
mull
rcr
call
mov
test
loope
pop
mov
push
push
lret
cld
loopne
mov
cmp
jle
popf
and
cmp
adc
sub
or
add
add
cli
sbb
jle
pop
mov
sub
or
add
test
ret
inc
in
arpl
adcb
mov
sub
add
cltd
sbb
mov
add
adc
sub
dec
or
popf
or
fistpl
xor
xchg
push
ds
aas
ds
pusha
in
imul
cmp
jo
adc
inc
mov
and
je
mov
int
mov
or
adc
jp
pop
in
insl
insl
imul
in
add
scas
mov
xor
ret
xor
xchg
and
xor
test
pop
mov
jne
pop
aaa
jo
push
shl
xchg
inc
fmull
jno
inc
testb
daa
xchg
push
xchg
add
hlt
rolb
inc
and
pop
mov
dec
or
add
sub
popa
cmovp
cmc
fbld
mov
push
test
add
push
mov
mov
or
adc
and
xlat
lret
cmpsb
repnz
mov
arpl
out
sbb
add
push
aaa
inc
frstor
xor
cmpsl
push
and
sbb
xor
scas
pop
pop
add
jmp
adc
popa
insl
xlat
mov
mov
xchg
push
mov
cmp
mov
scas
movsb
punpcklwd
movsb
ror
rclb
push
xchg
pop
ja
mov
sbb
or
inc
dec
or
test
js
lcall
sarb
push
sbb
add
div
js
aam
sub
outsb
loopne
cmp
jmp
addl
lahf
sub
jle
loopne
mov
lret
in
lret
std
add
icebp
movsl
or
stos
fnsave
jb
in
hlt
outsl
and
inc
adc
add
in
mov
imul
pop
je
out
int
lret
outsl
insl
or
bound
mov
sbb
mov
add
push
mov
ret
jl,pn
flds
shlb
dec
mov
sub
inc
sub
loop
dec
nop
test
or
lret
jae
inc
xchg
dec
xchg
add
inc
call
or
lock
sahf
test
inc
js
dec
test
mov
arpl
out
movsl
loopne
mov
xchg
ss
mov
std
nop
and
das
loopne
enter
js
adcb
pop
dec
es
mov
rorl
mov
dec
sahf
mov
xchg
inc
repnz
popf
pusha
ds
incb
jecxz
ljmp
and
mov
ret
dec
or
call
es
add
nop
mov
rclb
inc
or
das
and
jg
push
rcr
push
jp
scas
aaa
dec
or
mov
jle
icebp
cmpb
inc
dec
inc
xor
and
pminub
movsb
loopne
sti
cltd
or
cmp
jg
jl
jno
lcall
inc
push
pop
je
sub
pop
nop/reserved
or
xchg
mov
aam
ret
pop
add
pop
sbb
loop
dec
add
cmp
pusha
call
test
test
xor
adc
sbb
dec
mov
insl
sbb
out
aam
loop
sbb
loopne
mov
shll
daa
dec
push
adc
mov
enter
sti
imul
jns
push
add
push
and
lcall
adc
push
addb
imul
loope
xchg
lock
mov
insb
adc
out
and
dec
mov
mov
test
nop
les
das
inc
pop
push
syscall
sti
incb
xchg
rolb
sub
mov
rcl
div
mov
aam
cmc
shlb
jae
imul
daa
cli
popa
or
jo
das
pop
sbb
or
inc
std
mov
cs
mov
mov
sahf
or
xchg
pop
cmp
cwtl
fdivs
popa
dec
cmp
je
dec
xchg
lods
pusha
jg
nop
loopne
lahf
aaa
cmpsl
mov
mov
xor
popf
ja
std
out
movsb
movl
mov
sahf
ret
jbe
jo
imul
lret
les
ja
out
ljmp
cwtl
xor
fdivs
aas
jl
xor
push
filds
push
adc
sbb
mov
insl
add
popa
or
es
aad
pusha
cmpsl
movsl
inc
adc
insb
fwait
sub
fadds
inc
insl
or
mov
jno
lods
or
and
arpl
arpl
and
dec
push
push
or
push
dec
sbb
js
inc
or
inc
nop
cli
mov
or
push
repz
stos
addb
mov
mov
xor
adc
or
add
int
insb
xor
push
jo
inc
test
xchg
fstl
xchg
pop
jns
pop
xchg
aam
jl
cmc
push
dec
add
add
or
cli
push
pop
cmpsl
inc
orl
jno
inc
sub
loopne
ljmp
insb
xchg
insb
inc
clc
cmp
adc
js
and
pusha
popa
in
dec
lock
and
xor
dec
add
movsl
test
pop
lea
stos
dec
jo
mov
lods
inc
pop
pop
mov
jecxz
xor
and
sbb
iret
out
mov
sbb
movsb
pop
add
loopne
cmp
js
sarb
cltd
int3
pushf
popa
insl
fstpt
dec
pop
sti
cwtl
push
gs
stos
xor
sbb
mov
push
das
mov
int
xor
out
iret
insl
rorl
adc
or
cmp
das
mov
push
rolb
int3
and
mov
jno
inc
into
cmpsl
or
push
rcrl
or
lret
shll
sti
push
test
dec
adc
idivl
cmp
and
cwtl
test
and
jo
sysret
ret
add
adc
ss
daa
or
or
sub
xchg
out
push
jg
adc
jbe
sub
data16
ja
sbb
daa
fisubl
add
mov
std
dec
cmp
jecxz
jmp
inc
aad
lods
add
or
test
dec
add
push
ljmp
add
xchg
dec
pop
dec
add
addr16
adc
inc
mov
jmp
daa
pop
adc
add
cltd
sub
jmp
sub
pop
stos
mov
inc
cmpsb
gs
dec
imul
rorb
ljmp
add
sti
mov
push
stos
jno
insl
ret
adc
cmp
mov
mov
jmp
negl
push
cmp
jnp
jno
push
mov
insl
rolb
add
inc
mov
dec
repz
dec
and
ljmp
inc
mov
test
sub
mov
rolb
std
scas
sub
dec
or
push
sahf
hlt
jnp
out
mov
jg
push
push
xchg
mov
lahf
xchg
or
push
or
pop
lcall
dec
adc
mov
add
addr16
adc
push
ret
or
or
xchg
mov
mov
das
into
mov
shlb
repz
in
sbb
xchg
adc
inc
insb
xchg
lret
shlb
cltd
adc
ret
adc
lahf
dec
xchg
add
jbe
inc
cmpsl
into
sub
and
movsb
out
sarl
xchg
mov
fmul
repnz
in
pop
sarl
repnz
test
sti
inc
arpl
and
pop
cmp
add
test
mov
push
movsb
fisubs
adc
stos
or
cmp
push
and
jle
add
jae
and
adc
jae
jl
movsl
daa
jl
or
ljmp
xor
or
cmp
test
enter
jne
pusha
add
ljmp
sbb
mov
ret
shll
push
inc
mov
inc
dec
inc
sbb
pop
and
cmp
test
cmc
sbbl
sbb
or
or
mov
outsl
gs
ja
je
jl
jl
ret
je
add
mov
mov
sub
fisubs
dec
or
mov
xor
adc
mov
push
ret
mov
mov
loop
sub
imul
iret
jp
pop
mov
dec
sub
inc
cmp
inc
dec
jo
into
sub
or
cmpsb
mov
out
dec
sarb
faddl
sbb
enter
orl
ja
dec
mov
xorb
mov
xor
ret
test
sbb
sbb
scas
cmp
loopne
adc
push
fsubr
pop
dec
popa
xchg
fbstp
add
shlb
repz
into
sbb
sbb
shlb
add
add
loop
add
xchg
cmovle
iret
adc
cltd
cmpsl
call
lds
aam
mov
sar
push
pop
divl
dec
and
sub
stos
icebp
lahf
sar
mov
jne
cmovl
dec
pop
test
pop
jb
jp
xchg
mov
mov
daa
test
add
outsb
arpl
sbb
sbb
inc
fsubs
and
repz
lcall
dec
add
push
push
lock
movsl
or
insl
jae
inc
pop
out
mov
adcl
loopne
sub
arpl
gs
aam
nop
lret
cld
popa
lds
jle
adcl
gs
xchg
push
or
add
aam
jl
cmc
or
fwait
push
addr16
sbb
iret
rol
inc
js
orb
test
lock
add
repz
push
pop
out
adc
sbb
cmp
add
movsb
out
xchg
cmp
sub
hlt
mov
test
sbb
mov
pop
sti
mov
mov
cli
and
push
xchg
cmp
sbb
mov
aad
test
rol
lret
cmp
sbb
add
lahf
xchg
lret
insl
sub
orb
mov
push
or
and
push
mov
gs
lods
pushf
ss
mov
cmc
pusha
cwtl
jno
sub
mov
sbb
mov
fdiv
mov
int3
push
push
jo
push
sbb
adc
lea
add
daa
xchg
mov
add
lods
push
mov
push
mov
pop
mov
pusha
sbbl
mov
xchg
enter
push
lahf
sbb
shlb
test
mov
and
xchg
pusha
adcb
push
adc
jge
jne
xor
sbb
dec
enter
movsl
or
or
pop
sbb
fwait
addr16
add
jl
mov
cli
add
std
xor
xor
out
fsubrl
and
xlat
cmp
cmpsl
xor
adc
fnstenv
jp
lods
sub
mov
mov
lods
add
and
or
out
jnp
add
pushf
test
in
cmpsb
mov
push
xlat
sub
xor
jmp
rol
inc
push
shlb
push
rolb
xor
out
rcll
dec
mov
xor
dec
call
punpcklwd
and
mov
push
add
shll
dec
push
mov
adc
adc
sbb
xchg
mov
nop
aas
mov
cmc
repz
push
or
sbb
cmpsb
mov
cltd
mov
lods
shlb
and
push
and
push
sbb
addl
ret
movsl
nop
faddl
stc
adc
xlat
add
xchg
js
pop
add
fwait
cmp
cmp
or
dec
push
xlat
adc
test
idivl
sub
dec
mov
nop
cmp
jmp
xchg
or
push
push
shlb
dec
pop
mov
inc
enter
addr16
and
ffreep
push
xor
adc
xor
inc
jo
xor
pop
lds
add
orl
dec
sub
and
fldcw
inc
les
push
movsb
sti
push
pop
js
sub
sti
add
lock
pop
je
or
mov
pop
cmpsl
cmp
push
stos
pop
xchg
inc
push
or
pop
pop
inc
push
int
test
test
imul
push
daa
scas
out
inc
jns
fwait
add
add
daa
iret
pop
lods
mov
push
cli
xchg
shll
pop
sub
lods
jecxz
outsb
xorl
sub
xchg
push
enter
mov
cmp
cmp
cmp
xor
cmpsl
loop
scas
cld
pop
add
lds
sub
sub
faddp
int3
or
sbb
daa
pop
jns
or
loope
lds
push
push
dec
scas
inc
push
data16
jl
xor
pop
push
adc
mov
add
es
ljmp
aas
push
call
pop
xlat
stos
push
add
pop
dec
cld
pop
bound
lret
adc
pop
outsb
je
int
sbb
adc
aas
pop
scas
push
cmp
sub
add
cmpsl
sbb
in
push
mov
popf
cs
pop
or
loopne
out
or
mov
lods
or
and
pop
sbb
or
dec
cmp
pop
xlat
push
sub
sbb
stos
cmpsl
repnz
repz
push
movsl
filds
add
pushf
insb
lahf
loop
adc
pop
or
push
iret
in
jnp
add
jmp
in
incb
or
mov
sub
pop
lret
or
out
jbe
pop
pop
xchg
and
jns
pop
movsl
add
mov
mov
inc
jbe
push
jg
xchg
xchg
fldcw
and
inc
sbb
mov
sahf
out
mov
divps
cmpsl
lea
push
xchg
leave
mov
cltd
sbb
sub
popf
lock
leave
mov
add
pop
outsb
add
mov
xchg
int
mov
ds
lock
cs
add
pop
cmp
add
mov
inc
add
push
pop
mov
call
and
addr16
xchg
aas
out
into
jecxz
pop
mov
popa
mov
pop
push
adc
xorb
or
inc
lret
sub
sub
rolb
or
icebp
sbb
ficompl
xlat
cmp
cld
sbb
jp
push
xchg
enter
je
sub
jne
adc
popf
sub
cmc
pop
mov
lret
and
adc
add
push
mov
fcmove
sbb
mov
pop
movsb
cmpsb
add
mov
mov
adc
orb
js
lods
or
sbb
mov
cmp
aad
jno
sub
sbb
popa
pop
dec
sbb
mov
mov
enter
pusha
je
push
arpl
in
lds
rclb
cmp
ja
push
cmpsl
add
mov
filds
lahf
dec
and
mov
or
and
push
xor
pusha
xchg
mov
inc
pop
cmpsb
or
iret
mov
test
add
test
or
pop
mov
iret
jl
mov
or
or
mov
arpl
add
sbb
adc
and
pop
arpl
pushf
sbb
sub
sti
xor
and
lcall
cmp
shr
jo
loop
dec
dec
jle
push
pusha
sub
dec
jno
push
ss
sbb
xor
push
cmc
shr
lods
adc
sbb
lods
cs
and
jnp
scas
mov
pop
add
xor
insl
jecxz
dec
test
loope
jo
mov
mov
or
int
xchg
nop
sub
and
shl
hlt
cwtl
clc
adc
fadds
add
mov
clc
js
adc
test
sub
cmpsl
arpl
lock
cmp
and
jns
dec
cmp
push
pop
ret
or
cmp
in
xor
loop
xor
mov
sub
mov
pusha
dec
fisttps
cmp
loope
pop
pop
ljmp
mov
imul
and
aaa
ret
cmp
daa
adc
and
xlat
xorl
orl
or
mov
inc
adc
ja
sti
and
push
cwtl
loop
add
xorb
stos
imul
shl
jle
adc
jmp
or
adc
pop
inc
ror
lahf
inc
jl
and
ljmp
cmp
sbb
and
or
outsl
xor
mov
mov
sub
int3
test
xchg
mov
push
jp
test
test
xchg
cltd
push
add
jae
xchg
pop
xchg
es
jl
dec
test
dec
insb
mov
inc
stc
jnp
in
mov
es
cmp
inc
adc
push
lock
shrl
dec
dec
int3
enter
imul
bound
mov
rcrl
jmp
jmp
add
aad
inc
bswap
and
sti
mov
fs
cmp
rcrl
and
ds
sub
dec
pop
ss
pop
jl
test
out
aaa
jle
ja
scas
mov
inc
lods
lcall
icebp
and
add
adc
cmpsl
sbb
pop
cmc
xor
mov
xchg
pop
xchg
test
orb
push
push
scas
sbb
cmp
dec
movsb
out
push
push
pop
and
dec
loope
xlat
add
stos
repnz
or
mov
mov
inc
mov
or
pop
or
popf
pushf
roll
popa
mov
popa
dec
xor
in
add
fisttpl
ret
mov
jecxz
sbb
sub
mov
cmp
lcall
and
ret
mov
push
loopne
ja
lods
mov
dec
fistl
ljmp
ja
mov
and
fsubr
or
or
inc
add
xchg
xlat
es
repz
lods
loope
push
lock
mov
jle
inc
cwtl
lea
xchg
fldl
jno
in
sbb
mov
adc
inc
and
jmp
shrl
mov
subl
ret
mov
enter
or
dec
mov
and
push
add
adc
repnz
dec
adc
sub
pop
fwait
mov
daa
in
stos
inc
scas
push
or
inc
cmpsl
add
and
or
mov
mov
cmp
call
push
out
loopne
rcrl
xor
jno
pop
and
addl
cmc
sub
loopne
sub
mov
clc
popa
or
lock
cmpsl
and
add
xchg
ret
xor
in
push
addr16
jo
pop
int
cmpl
xchg
lea
add
rol
dec
sub
sbb
mov
pop
xchg
dec
pop
jae
inc
pop
push
sbb
jecxz
jg
imul
adc
lods
movsb
or
adc
cltd
test
xor
lock
dec
jno
push
cmpsl
iret
mov
leave
adc
notl
aas
roll
xchg
jle
out
cmpb
shll
cmp
insb
out
or
popa
dec
shrl
xor
les
xchg
or
jge
jmp
loopne
inc
in
aam
jecxz
int
movsl
aaa
add
pop
or
and
or
or
dec
or
xchg
mov
dec
pop
das
sbb
inc
xchg
and
mov
jle
mov
sbb
adc
pop
jg
push
aaa
and
test
int3
and
fwait
cmp
in
push
and
lds
sub
fsubs
jns
fsts
mov
aam
dec
jmp
push
or
mov
xor
pushf
andl
or
ljmp
loope
dec
subb
test
iret
mov
stos
shlb
aaa
mov
xchg
inc
popa
mov
sub
cmp
sbb
mov
adc
andl
add
mov
or
sti
and
sbb
call
mov
pop
divl
aam
or
insb
mov
xchg
pop
mov
insl
pusha
mov
pop
adc
and
fadd
cld
cmpsb
es
and
rclb
ds
push
sub
ss
jmp
insl
push
mov
dec
add
sub
ficoml
and
orb
popf
sahf
divl
mov
pop
iret
add
add
subb
and
adc
sbb
or
dec
inc
cmp
dec
push
xchg
sbb
push
fwait
cltd
push
shll
jno
movl
cwtl
xorl
imul
push
cmp
sahf
ds
sub
mov
insl
mov
ret
adc
xchg
es
fs
push
rcrb
pop
iret
dec
repnz
jne
jno
xor
inc
sbb
cmp
addr16
dec
repnz
inc
mov
out
scas
sub
mov
xor
lea
pop
stos
adc
and
adc
add
xchg
mov
stos
pop
imul
rcrb
xchg
jge
pop
and
add
xor
mov
xor
addb
mov
fwait
sahf
icebp
mov
inc
add
xchg
pop
push
inc
push
add
add
fstps
lock
jne
mov
jnp
and
scas
sub
xor
int3
push
cld
and
lock
pop
cltd
inc
jnp
mov
mov
js
imul
dec
roll
pop
les
mov
rorl
aam
icebp
mov
sbb
movsb
sub
les
and
out
lods
push
add
xchg
movsl
jno
scas
nop
or
ror
xchg
test
push
rolb
fwait
sub
fs
cltd
jns
inc
movsb
push
imul
sbb
and
xchg
or
es
xchg
sbb
inc
jb
daa
mov
scas
cmp
pusha
xchg
mov
jmp
sub
dec
xlat
popf
jns
enter
pusha
std
lret
jp
and
dec
cmp
and
stc
add
psrlw
mov
mov
jle
das
lret
mov
insb
nop
xchg
dec
jne
cmp
int
fadds
rdpmc
add
orl
popl
loope
in
adc
rolb
cli
and
sub
ret
ret
xchg
aaa
sbb
aaa
sbb
xchg
dec
sbb
mov
dec
or
mov
int3
imul
daa
dec
cmpsl
adc
sbbb
outsl
pop
ret
pop
adc
sahf
push
and
into
sbb
push
adc
cmp
push
movsb
or
dec
add
call
inc
clc
and
pop
and
mov
repnz
and
inc
ja
imul
cltd
or
inc
jno
mov
loop
dec
aas
mov
es
int3
scas
add
add
adc
aam
ret
dec
frstor
loopne
movsb
in
inc
es
test
add
add
add
lock
push
push
movsl
outsl
popf
and
pop
pop
mov
sub
and
jb
push
or
xchg
mov
sbb
push
es
out
rdmsr
add
add
jo
insb
sub
xor
aas
test
pusha
or
sbb
add
stos
into
pop
sub
push
push
pop
cmp
rorl
orl
or
xchg
int3
call
sub
dec
xchg
ja
iret
fisttpl
xchg
inc
mov
mov
mov
pop
adc
lcall
frstor
push
pop
cmp
lock
xor
jb
push
push
sbb
sbb
inc
cmp
ja
adcb
add
out
adc
xchg
roll
andb
push
add
cmpsl
popa
imul
sbb
jle
sti
xor
dec
or
int3
lret
sbb
scas
jmp
bswap
jecxz
fstps
call
sub
imul
and
shlb
push
lret
xchg
xchg
out
jge
xor
inc
adc
test
xchg
ja
jmp
outsl
test
jge
push
sbb
jne
pop
push
push
sbb
inc
jae
add
subl
popa
icebp
push
in
shl
add
jns
add
mov
mov
mov
mov
mov
andl
popl
pushf
push
sbbl
shlb
js
icebp
add
cmpsl
dec
and
bound
and
stos
test
insl
pop
lock
sbb
and
inc
adc
sub
cmp
and
xchg
pop
dec
daa
and
outsb
mov
jno
ja
jecxz
fiaddl
stos
fwait
xlat
xchg
bound
cmc
jecxz
pop
ss
inc
push
icebp
jns
aam
add
fdivl
shr
push
testl
fbld
push
push
inc
sub
out
jmp
sub
xor
insl
xchg
hlt
and
leave
adc
cld
ret
fisubs
add
add
call
fisubs
and
hlt
leave
out
mov
adc
xchg
xchg
dec
add
xchg
dec
dec
xchg
pop
subb
in
sarb
mov
mov
inc
jmp
mov
push
jmp
cwtl
jge
out
shlb
out
stc
or
dec
mov
xor
cmpsb
sbb
sbb
xor
mov
add
dec
mov
dec
mov
das
iret
std
js,pt
mov
jmp
and
lret
sbb
cmp
loope
xchg
mov
jle
incb
mov
add
xchg
push
aam
stos
mov
and
pop
in
mov
push
pop
in
lods
in
adc
jg
sub
add
cmp
mov
cmp
popf
inc
or
or
filds
daa
dec
sub
or
inc
add
fdivrs
movsb
data16
push
mov
ja
mov
fs
add
add
cmp
pop
add
mov
inc
mov
fistpll
add
sub
popa
add
sarb
dec
sub
xchg
add
add
jo,pt
add
mov
pop
popa
xchg
movsb
popl
mov
adc
push
dec
int3
scas
xor
sbb
jp
les
pop
add
jnp
xor
addr16
aam
loopne
ds
push
ss
in
xchg
push
add
stos
dec
into
aam
stos
in
xor
add
pop
jno
daa
shrl
subb
and
mov
popa
jno
cmc
out
jmp
sbb
dec
lods
jle
push
lods
pop
out
int3
add
sbb
or
cmp
popa
and
jp
outsb
stos
divl
call
pop
sbb
into
dec
hlt
add
or
mov
lods
int3
cmp
psubb
lods
call
push
js
fstpt
aas
sub
test
enter
movsl
dec
mov
cmp
cmp
subb
in
out
and
jae
jo
in
fldcw
sbb
enter
adc
int3
scas
add
add
into
mov
mov
xor
adc
ret
cmpsb
lods
outsl
add
movsb
mov
cmp
call
imul
jne
inc
popa
inc
mov
ds
ss
nop
dec
bound
pushf
enter
add
in
les
add
adc
out
repz
adc
jge
int
imul
lods
xchg
xchg
adc
or
hlt
fcmovu
or
push
add
xlat
aam
mov
cmc
rcrb
jge
sub
add
jbe
xchg
in
aam
xchg
int3
jo
sub
insb
ljmp
cmpb
sbb
mov
inc
loopne
loop
pop
sbb
movsl
loope
jo
mov
mov
pusha
clc
jg
inc
iret
xrstor
in
ds
pop
or
jo
dec
lretw
test
push
das
les
sbb
hlt
xor
sub
add
hlt
add
add
in
add
sub
das
sbb
cmp
dec
mov
push
insb
sbb
dec
call
rcll
mov
inc
fisttpll
or
or
add
fs
jns
push
adc
test
insl
sbb
test
push
mov
xlat
out
sbb
je
push
mov
adc
add
test
xchg
fsubrl
clc
aam
mov
push
cmp
or
mov
add
pop
dec
rcrl
push
mov
add
sbb
and
jne
push
cmp
sub
xor
lods
add
movsb
out
das
scas
lea
leave
into
cwtl
insb
push
and
mov
push
pop
sbb
cwtl
out
bound
pop
lcall
iret
pop
inc
loope
push
test
loope
inc
dec
js
or
fldenv
jmp
shll
jle
push
clc
xlat
add
mov
rolb
adc
or
int
arpl
call
sbb
mov
daa
mov
and
push
add
icebp
xlat
fwait
jno
add
in
dec
jb
xchg
inc
and
mov
lret
test
sub
popf
mov
mov
cmpsl
add
cmpsb
push
pop
aaa
lods
rcl
loope
add
mov
addr16
movsl
pop
dec
dec
mull
mov
push
mov
subl
aas
cmpsb
mov
mov
xchg
sbb
push
loopne
dec
lret
test
jbe
mov
inc
pusha
divl
sahf
mov
inc
push
pop
in
add
fsubr
flds
cmpsl
mov
in
pop
mov
stos
push
sub
ljmp
ds
adc
xchg
mov
iret
into
pop
outsl
cs
or
lods
fsubrs
cmpsl
and
lret
and
push
lahf
jae
outsb
mov
in
or
aas
or
into
int3
fcom
shll
lea
push
sub
jb
dec
pusha
add
inc
pop
jno
rcrb
lds
mov
movzwl
testl
cltd
scas
xchg
aas
stos
pop
outsb
out
outsb
mov
add
insb
cmp
lds
imul
mov
mov
setb
insb
mov
sbb
ja
and
lret
ret
inc
and
cltd
pop
loop
adcb
jge
mov
pusha
or
or
adc
pop
xor
dec
test
sub
out
cmp
sub
cmp
sub
and
push
cs
fcmovb
or
xor
inc
aad
js
mov
jge
sbb
cmc
lods
jmp
lods
add
pop
fbld
inc
sub
add
add
loope
sub
sbb
jmp
call
ret
sbb
sbb
jmp
adc
xchg
hlt
lret
add
pminsw
jmp
pinsrw
aam
and
jp
jmp
jo
out
shll
pop
or
xchg
sbb
sti
mov
inc
rorl
faddl
mov
or
lods
fnstenv
inc
xorb
fldcw
aad
and
or
imulb
test
andb
xor
subb
push
add
mov
shrb
mov
je
add
cwtl
sub
insb
or
add
loope
adc
in
mov
fnsetpm(287
decb
pop
stos
sub
adc
sub
bound
pop
jl
sbb
pop
mov
cwtl
add
lcall
rol
pop
pop
cmp
inc
and
gs
mov
shr
pop
movl
adc
icebp
mov
sbb
ds
cmp
icebp
dec
data16
testl
push
into
insb
ret
mov
inc
inc
add
push
sub
jno
sub
hlt
outsl
cmovno
jno
movsb
das
or
test
fimull
jmp
or
xor
sahf
add
adc
mov
jns
out
dec
pop
lods
pushf
adc
jecxz
sub
jecxz
sub
scas
pop
or
scas
cmpsl
es
cwtl
and
mov
cmp
or
dec
xchg
or
ret
sbb
daa
mov
xor
fcomi
lret
lods
decb
daa
lahf
push
and
sahf
xor
adc
sbbl
pop
pushf
scas
icebp
add
out
in
dec
stos
xchg
pop
xrelease
mov
sarl
pusha
jo
fs
push
mov
pop
xor
push
iret
push
pop
push
mov
push
mov
pusha
jne
mov
iret
arpl
ljmp
add
inc
xor
lods
pop
outsl
or
cld
fists
outsb
jne
mov
push
sbb
sti
les
cmc
cmp
repnz
out
leave
mulb
out
jbe
dec
add
sub
mov
data16
iret
es
jl
cmp
push
lods
jp
jmp
adc
jge
add
adc
jmp
test
bound
xor
mov
xchg
add
push
fcompl
xor
and
mov
inc
rcrl
push
pop
scas
loopne
aad
push
sub
sub
push
sbb
xor
dec
mov
dec
cmp
push
mov
loope
dec
test
scas
cmp
or
xchg
pop
xchg
mov
movsb
dec
inc
dec
sub
pusha
stc
mov
or
daa
loopne
adc
and
icebp
mov
dec
das
sub
les
dec
adc
sub
jo
jmp
mov
pop
fcoml
dec
shll
push
sbb
insl
daa
push
rolb
push
dec
jmp
cmp
int3
push
ljmp
sti
and
cmp
test
sub
mov
lcall
inc
sbb
add
add
nop
cmp
inc
leave
cld
mov
fcoml
adc
cmp
punpcklwd
add
mov
jge
push
jnp
push
or
arpl
cmp
add
jl
rclb
iret
mov
js,pt
insl
movsl
add
cmp
and
cmp
jo
cmp
or
fists
adc
jecxz
test
or
jecxz
push
or
lahf
repz
mov
mov
js
push
sbb
jmp
xchg
cld
fcom
nop
jb
add
inc
push
das
xchg
ret
cmp
into
add
xchg
jo
lods
mov
xchg
cmp
imul
imull
ds
adc
or
and
cmpsl
sub
loope
je
shrb
into
decb
dec
lahf
xchg
jg
inc
gs
cmp
sub
xor
push
mov
test
fmull
imul
jge
and
xor
and
and
or
iret
fs
shrb
mov
outsb
pop
sub
inc
add
aaa
seto
popf
add
sub
push
mov
dec
push
push
bound
iret
add
fsts
jne
ljmp
adc
add
push
or
movb
movsb
adc
adc
aad
dec
dec
out
and
shrb
sub
push
mov
sbb
dec
ret
and
pop
int3
aas
aaa
xor
ret
and
cmp
add
jne
mov
push
or
or
cmp
jo
lock
or
sub
js
cmc
js
add
dec
ja
push
jp
out
add
push
cltd
inc
out
hlt
adc
ss
iret
daa
cmp
in
sub
dec
cmp
mov
insl
jecxz
and
arpl
jmp
insb
add
mov
lea
add
inc
fwait
pop
push
and
jmp
js
push
inc
mov
and
and
pop
or
mov
xchg
adc
pop
shlb
or
and
lcall
push
inc
sbb
cmp
inc
dec
shlb
scas
mov
and
ret
add
je
mov
les
xor
movsl
pop
cmpsl
cmp
int3
jp
ret
imul
ret
testb
sbbl
dec
or
xchg
iret
push
adc
push
mov
add
mov
jo
push
or
addb
add
sub
adc
imul
xchg
mov
lods
out
pop
sbb
pusha
add
adc
push
push
imul
negb
cwtl
lds
xor
jno
inc
das
inc
xchg
stos
jge
push
xlat
loope
stos
rcrb
mov
pop
xchg
mov
les
cmpsl
movsb
rorl
or
adc
movsl
das
test
outsl
je
sarb
stos
popa
stos
test
xchg
add
repz
fs
rcrb
jne
mov
pusha
or
loopne
mov
shll
dec
flds
mov
fildll
loop
je
scas
mov
mov
int
jb
cmp
test
sbb
sbb
mov
lock
and
inc
ret
dec
and
lds
adc
lcall
je
inc
xchg
jo
or
sbb
js
mov
test
inc
mov
ret
dec
inc
and
ja
adc
push
enter
loope
jp
shrl
movsl
mov
inc
int3
or
pushf
rcrl
or
mov
cmp
or
xchg
popa
add
xchg
xor
jno
dec
pop
pandn
stos
jb
imul
dec
jge
push
add
lods
sahf
push
push
inc
outsb
adc
pop
xchg
sbb
add
shrl
push
pop
sub
mov
lods
std
fwait
xor
push
jae
adc
loopne
push
mov
push
and
cmp
push
and
and
mov
add
jecxz
inc
mov
inc
xorl
movl
call
test
or
adc
mov
sub
push
and
mov
icebp
daa
dec
sbb
lret
xchg
hlt
adc
mov
or
daa
inc
xchg
negl
adc
and
enter
pop
xchg
sub
clc
xchg
push
dec
stos
iret
bound
daa
mov
and
add
cs
sbb
pop
out
das
push
adc
jbe
js
or
cmp
aas
xchg
test
or
lea
les
and
fs
cmp
loopne
repz
test
seta
je
lock
or
or
jns
mov
push
cs
out
add
mov
inc
loope
out
outsl
add
std
movsl
rclb
das
xchg
dec
add
sbb
and
lret
fs
xor
fdiv
popa
xor
xlat
and
jl
cmp
jl
push
addr16
cmpsl
xchg
jp
aam
ss
pop
mov
pop
inc
sub
loope,pt
or
fwait
scas
jecxz
test
dec
nop
nop
outsb
dec
outsl
adc
add
fsub
and
jle
insb
or
cmp
je
imull
pushf
add
dec
test
add
mov
inc
mov
rolb
xchg
nop
mov
faddl
add
sahf
or
cmp
movb
xor
mov
fs
scas
mov
repz
cmpsl
into
rorb
ret
mov
das
cmp
jge
arpl
ret
inc
jmp
cmp
lret
xrelease
popf
cmp
nop
stc
or
scas
sbb
fisubl
daa
testl
xchg
outsb
jecxz
dec
lods
fadd
xchg
sub
add
imul
daa
enter
and
xor
adc
jb
adcb
xor
pop
test
pop
sbb
lea
call
sbb
xor
sbb
mov
dec
push
xchg
test
sub
mov
jmp
popf
call
lods
adc
xchg
or
xor
mov
jbe
sub
ss
rolb
pop
fbstp
mov
lock
je
scas
jo
dec
rorb
push
add
loope
mov
push
pop
test
sbb
int3
shrl
or
mov
nop
add
lret
test
loop
xchg
jo
addr16
add
mov
sbb
add
imul
push
stos
shrb
pop
aad
sub
add
orps
push
fwait
jmp
rolb
dec
dec
lods
jmp
sbb
aaa
addl
sbbb
push
test
push
sub
bound
xchg
cmc
inc
mov
data16
push
pop
arpl
sub
adc
mov
xchg
fimuls
inc
add
cmp
push
loopne
inc
dec
fimuls
xor
orb
into
leave
xchg
sbb
lds
xchg
xchg
insb
or
sub
cmc
rorl
inc
push
lahf
stc
mov
subb
pop
shlb
dec
ss
call
adc
clc
loopne
jecxz
dec
idivl
movsb
add
mov
into
fisttps
push
mov
dec
or
in
or
or
or
rolb
mov
xchg
js
dec
jle
cmp
mov
mov
adc
mov
inc
loope
shr
enter
xchg
dec
cmp
xchg
pop
loopne
add
xchg
adc
or
sbb
dec
adc
into
adc
fiaddl
xor
xchg
shlb
dec
adc
push
pop
enter
loop
out
mov
inc
add
in
imul
les
and
rcrb
cmp
inc
call
sub
mov
js
mov
and
sub
inc
movsb
sub
fdivrs
loopne
outsl
push
adc
sub
mov
jmp
jmp
mov
fs
sub
and
ss
jl
dec
pop
adc
xchg
pop
inc
pop
mov
and
dec
sub
pop
dec
inc
roll
push
jo
popa
adc
sahf
or
pop
push
sbbl
fsub
outsb
push
mov
xor
mov
sub
xor
inc
stc
push
fisubs
pusha
sbb
or
daa
int
sbb
dec
or
movsl
fcoms
ret
jecxz
imul
cmp
orb
insl
pop
push
test
test
xor
jmp
subb
xchg
js
ljmp
inc
sub
and
or
adc
add
addr16
push
add
pusha
les
jg
mov
push
mov
inc
outsb
add
cmp
cmp
sbb
insl
stos
cmp
loopne
sub
add
xor
inc
dec
imul
add
fsubrl
and
mov
popf
cli
adc
xor
cld
xchg
adc
addl
bound
jo
lret
das
lods
xchg
lods
gs
sbb
stos
shll
cmp
sbb
mov
loope
ret
scas
xchg
cmp
cmp
sti
or
add
dec
jge
shrb
mov
dec
pushf
in
add
xchg
adc
add
sbb
xor
push
push
mov
lahf
cli
test
imul
in
and
cmc
loopne
or
js
mov
pop
cmpsl
rol
sub
mov
pop
std
push
pop
data16
and
and
test
adcl
sub
push
das
sbb
jle
jo
sub
cwtl
gs
xchg
xrelease
subl
and
pop
es
or
mov
cmpsl
clc
lods
popf
rcl
daa
in
daa
mov
sub
inc
mov
mov
pop
add
mov
xor
divb
jno
popa
and
int3
inc
test
fs
jp
push
and
clc
mov
jmp
adc
or
push
mov
iret
sti
sub
pop
dec
xchg
add
push
push
sub
cmp
or
out
fldenv
adc
or
cmp
sbb
or
loop
stos
xlat
dec
loopne
or
das
fiadds
jmp
jg
jecxz
mov
sbb
cmp
push
and
adc
inc
mov
nop
ret
call
ss
jecxz
stos
cmpsl
out
nop
jge
aad
add
movsl
imul
sub
aaa
pop
das
out
push
cli
adc
push
daa
inc
and
and
xchg
int
jb
loopne
xor
sbb
add
lock
or
sbb
movsl
sub
cs
movsb
xlat
fisttpll
dec
mov
ret
or
leave
add
sti
imul
cs
test
push
cltd
rolb
inc
pop
fsubs
add
push
fldl
sub
xor
push
or
xchg
outsb
inc
sbb
dec
sbb
imul
push
cltd
out
cmpsb
or
cmp
rcll
sub
sub
push
sbb
mov
and
flds
inc
inc
or
and
sub
inc
mov
pop
test
stos
inc
sub
loope
sti
fcoms
mov
scas
xchg
add
add
push
jge
adc
imul
icebp
sahf
lods
mov
sub
add
cltd
mov
sub
outsl
mov
loopne
dec
mov
cvttps2pi
test
cli
rolb
test
js
cmpl
psubq
movsb
and
xor
ret
jmp
bound
scas
popf
dec
movl
xor
jge
shlb
inc
add
adc
mov
adc
or
sbb
pop
cmp
or
inc
jecxz
push
jmp
xchg
cmp
shlb
cmpsl
aad
cmp
rcrl
inc
cltd
or
xchg
push
pop
stos
sbb
pushf
dec
mov
adc
test
stos
push
pop
push
cmp
outsl
clc
push
icebp
pop
aaa
pop
xchg
push
out
add
sbb
jmp
nop
adc
and
popa
xchg
std
fsts
rcr
movsl
lods
mov
push
inc
dec
jecxz
lahf
loopne
pop
movsb
addr16
fld
add
jge
dec
xchg
dec
and
ret
inc
jo
fidivs
mov
and
add
jg
cmp
add
push
mov
and
lea
sub
arpl
sbb
jmp
test
pushl
xor
pop
sub
cmpsl
lods
imul
mov
add
jae
sub
jmp
sbb
sbb
adc
xor
sbb
inc
cmp
pusha
subb
lcall
les
pushf
inc
lds
mov
or
call
fidivl
and
das
sub
jae
xchg
push
test
jae
subl
xlat
push
inc
and
out
dec
add
push
mov
je
push
cmc
sbb
loopne
fcomp
cli
xor
pusha
cmc
push
sbb
bound
push
xor
jbe
je
jb
mov
ret
xchg
adc
or
fcmovnbe
movl
and
test
leave
mov
or
out
iret
or
test
add
xchg
push
rolb
sub
push
push
mov
xor
and
and
sub
cwtl
add
sub
dec
and
cmp
dec
aam
add
out
and
lods
or
cs
inc
mov
jno
mov
movsb
andb
add
call
adc
cmpsb
out
lods
push
hlt
dec
mov
ret
adc
inc
push
pushf
sbb
out
out
sub
cmp
rcrl
xor
or
lahf
icebp
push
rolb
mov
loopne
xchg
rcrb
shll
and
or
and
add
mov
pop
xor
or
int3
push
mov
das
test
mov
je
cmpsl
push
xlat
inc
repz
dec
inc
outsb
pop
push
jbe
push
in
insb
loopne
or
pop
repnz
movb
and
inc
cmp
jns
jae
add
loope
add
enter
out
sub
sub
adc
test
inc
jmp
fcmovb
add
push
add
and
mov
loopne
pop
fwait
lods
mov
inc
lea
xor
mov
lret
insl
cmc
stos
and
dec
andb
and
wrmsr
outsl
jbe
pop
mov
sbb
push
jo
or
push
jo
mov
mov
pop
xor
add
out
insl
add
push
pop
je
or
dec
push
and
or
loope
jns
add
adc
jno
xor
fwait
shll
cmpsb
scas
fstpt
add
mov
pop
or
pop
xchg
push
clc
lock
rolb
push
push
ret
aaa
sub
fdivl
loopne
fwait
or
fisttpl
and
dec
test
repnz
push
push
jg
sbb
mov
fwait
mov
pop
aas
xchg
cmp
daa
sbbl
xchg
or
or
xchg
mov
fstpt
js
push
pop
test
lods
add
jle
dec
js
daa
and
rorb
inc
scas
sbb
jae
add
pminsw
inc
push
add
scas
outsl
xchg
je
or
or
xchg
gs
pop
add
nop
mov
mov
xchg
sbb
inc
leave
rorb
rcr
sbb
test
in
and
mov
fs
pusha
aam
loopne
cltd
sarb
adc
rclb
aad
push
scas
hlt
xchg
mov
push
jg
daa
push
jae
pop
mov
test
shrl
xor
cltd
ss
dec
ja
pusha
or
ja
adc
cmpb
ret
fwait
inc
sub
mov
xor
push
xchg
test
mov
lea
cmp
push
imul
sub
adc
adc
pop
xchg
and
fwait
xor
addl
sbb
lcall
add
lcall
pop
pusha
cmc
xchg
add
subb
inc
test
scas
lock
inc
push
stos
aaa
pop
rolb
add
mov
pop
add
popa
pushf
mov
mov
cmpsl
sbb
cmpsl
scas
add
mov
mov
pushf
add
xor
popa
clc
pop
adc
out
gs
les
inc
mov
test
cmp
push
inc
adc
sbb
adc
test
popf
push
in
inc
mov
cmc
pop
sbb
or
add
filds
sti
inc
mov
js
xchg
adc
shlb
loope
sbb
lds
mov
mov
mov
das
call
out
pop
cmp
jbe
or
insb
inc
out
into
or
adc
ds
inc
lock
pop
dec
ret
aas
and
mov
fildl
loope
sub
xor
or
je
xchg
jo
gs
and
sbb
icebp
aam
lock
mov
xchg
frndint
jb
ljmp
stc
sbb
inc
inc
pop
adc
xchg
cwtl
sahf
out
mov
addr16
iret
mov
js
xchg
daa
mov
icebp
adc
or
lock
out
lret
xor
pop
dec
bound
mov
andb
xchg
or
mov
sbb
imul
in
lret
lret
mov
jge
js
mov
inc
shrb
add
mov
and
dec
clc
addb
es
incl
daa
add
and
lods
pop
jg
in
ja
icebp
imul
stc
jp
add
adc
fcomps
bound
jne
cmp
mov
xchg
fdivrs
js
push
mov
jl
scas
push
rorl
orl
sbb
shll
xor
add
rorl
sub
jbe
ret
jbe
sbb
imul
rolb
rorb
aam
ret
or
cli
pop
mov
fidivrl
add
xorl
pop
loope
pop
enter
add
mov
stos
dec
pop
sub
xchg
inc
jne
xchg
popa
sbb
imul
jg
adc
push
and
imul
push
jno
pop
xor
or
sub
test
add
enter
mov
or
lds
sbb
cmp
ss
int3
stos
add
xor
sbb
cmpb
stos
mov
lcall
sbb
add
lds
jo
loopne
xchg
pop
cmp
jne
imul
enter
js
jp
roll
mov
sarb
gs
dec
jne
mov
add
xchg
gs
jl
sub
xor
sbb
cmp
sub
cmc
xlat
aam
das
cmp
lods
jo
adc
aas
dec
pop
in
dec
in
filds
sub
cmp
sbbb
call
push
insl
add
icebp
fildll
repz
add
sub
dec
xor
fdivr
jnp
cmp
scas
push
dec
out
jp
lret
dec
cmp
mov
dec
xchg
out
addr16
addr16
or
pop
je
adc
or
test
lret
rcll
mov
loope
ficoml
dec
lret
test
push
leave
popa
jecxz
mov
ret
cs
insl
jae
sub
add
sbb
jnp
lea
ret
add
dec
addb
inc
rcr
cmpsl
pop
jl
inc
lods
mov
or
int3
mov
pavgw
or
cmc
pop
fimuls
jns
fwait
pop
jne
push
mov
mov
sbb
jne
cmp
movsb
imul
pop
js
scas
push
inc
aam
addr16
enter
lahf
inc
xor
xchg
add
adc
cli
pop
loop
mov
or
gs
sub
cld
or
sbb
or
andb
push
sub
rorl
mov
sub
pop
ss
repz
jo
dec
outsb
or
jecxz
insl
and
push
insl
sub
cmp
dec
cmc
out
mov
mov
inc
jecxz
inc
pop
roll
add
add
push
mov
adc
pusha
inc
nop
inc
imul
roll
sahf
pop
mov
add
roll
cmp
sti
mov
addb
push
add
inc
outsl
sbbb
sub
js
xlat
push
xor
or
push
ret
fcmovne
sbb
sbb
ret
or
movsb
sarl
int
stos
rorb
aas
jge
and
cltd
mov
add
xchg
movsl
add
sbb
inc
mov
pop
jnp
dec
add
sbb
xchg
mov
xor
sub
add
sbb
fnstcw
pusha
jle
pop
sub
lea
pop
subl
outsb
xchg
pop
adc
add
enter
ja
mov
mov
pop
pop
test
add
in
int3
mov
or
dec
add
or
jno
and
pusha
add
fmuls
pop
pop
jae
decl
lret
xchg
push
mov
mov
lahf
push
jae
hlt
inc
sub
xchg
pop
or
rcr
and
jnp
cmpsl
or
movb
sbb
faddl
mov
dec
ret
push
cmp
les
ror
push
mov
push
sbb
mov
lahf
fadds
pop
pop
push
paddsb
xor
scas
and
and
sub
lock
add
cmpl
fs
xchg
mov
movl
push
jno
and
sub
out
xor
mov
js
test
sbb
mov
inc
jl
add
mov
test
hlt
aas
lcall
add
xchg
jne
pop
mov
movsl
sub
jg
jno
adc
lea
sub
lods
iret
xchg
icebp
cmp
dec
fsubp
add
sbb
mov
cmp
inc
pop
xchg
cmp
mov
push
popa
adc
cmpsl
lods
xchg
adc
jge
enter
or
wbinvd
add
ret
pop
ret
stos
push
add
les
sub
dec
ret
sbbl
or
push
loop
insl
popf
push
stc
xlat
in
sbb
dec
jecxz
out
mov
adc
adc
arpl
jns
enter
mov
or
movzbl
mov
ja
lea
add
popa
or
aaa
jo
sbb
stos
xlat
outsl
insb
movsb
xor
loop
imul
add
push
cmp
cmp
add
in
ret
lea
or
jge
fildl
icebp
add
or
add
das
fcmovnbe
imul
jns
xor
insb
inc
lods
loop
ret
mov
loope
fldl
cmp
cmpl
loope
adc
orb
fisubrs
adc
sub
popf
adc
cmp
sub
movsl
adc
adc
add
imul
add
push
subl
popa
push
mov
sub
or
add
stos
mov
add
sub
adc
dec
sarb
xchg
mov
add
int
inc
mov
loop
imul
push
xor
add
push
sarl
cmp
or
sbbl
xchg
popa
cwtl
loope
cmp
sbb
pop
test
adc
pop
lahf
test
shlb
add
or
adc
add
push
add
push
int3
dec
cmp
rolb
lahf
and
sub
add
dec
dec
test
mov
lahf
popf
sub
adc
imul
xor
pop
jo
dec
loopne
mov
fisubs
lea
lods
nop
test
cli
dec
mov
xchg
shll
shlb
icebp
dec
adc
fstpl
xor
scas
enter
aad
out
dec
jp
mov
les
jns
xlat
or
dec
popa
sbb
cmc
mov
sub
insl
fs
scas
cmp
sub
nop
ret
or
mov
inc
and
push
jo
xor
and
call
pop
adc
mov
imul
and
xchg
inc
out
jbe
daa
mov
and
xlat
mov
xchg
lahf
les
dec
jecxz
es
add
or
inc
mov
ss
es
insl
sub
int3
fidivrs
adc
nop
dec
scas
ja
xor
push
dec
popf
test
add
mov
lss
outsb
loop
xchg
mov
jle
ljmp
cmp
pop
sbb
cmp
push
sub
hlt
test
ret
jae
loope
add
jae
std
adc
sbb
push
dec
add
movl
pop
jne
cmpsl
bound
arpl
addr16
lods
jle
pusha
mov
pop
aaa
fstpt
xchg
xor
mov
loopne
xchg
es
xchg
insl
cmc
add
adcl
push
sbb
mov
adc
xchg
pop
call
jmp
push
repz
add
add
notl
ja
push
xor
adc
ss
imul
mov
sbb
out
aam
adc
sbb
xor
popf
sti
std
cs
and
add
adc
or
adc
add
insb
mov
mov
sbb
pop
cs
sbb
push
pop
lahf
test
out
xchg
es
dec
add
std
out
jbe
pop
inc
pop
push
imul
popf
fwait
fs
rcll
popa
mov
cmp
jo
jg
arpl
adc
lret
jbe
fmuls
jnp
xchg
out
jnp
icebp
xchg
add
cmp
lahf
cmp
add
push
negl
xor
mov
shl
bsr
add
push
mov
lock
je
mov
jmp
xor
jae
push
dec
bound
xor
push
fwait
jg
repz
sub
pop
aas
mov
or
cmp
repnz
mov
adcb
push
dec
jnp
adc
loope
pop
inc
loope
jmp
jnp
mov
and
inc
testl
xor
scas
mov
into
mov
fisubrl
in
inc
xor
cwtl
xor
xchg
insl
dec
cmpb
fldl2e
lahf
pop
fldl
add
ret
aaa
iret
pop
into
xor
sbb
sub
add
cld
mov
mov
jo
mov
jmp
and
jns
aam
add
rclb
push
lods
jmp
daa
jl
pusha
imul
mov
es
je
popf
dec
arpl
push
adc
mov
nop
adc
hlt
pop
jb
add
jmp
into
xor
adc
aam
out
jbe
bound
fdivl
mov
and
andl
add
lock
fildl
fcoms
cmp
cmp
xlat
jb
je
data16
add
iret
inc
pop
fcmovnu
hlt
adc
or
js
push
mov
sub
add
mov
inc
cmpsl
pop
rol
mov
sub
mov
push
cmp
cmc
xchg
add
enter
iret
ja
in
or
rorl
or
xchg
aam
pop
sbb
xchg
xchg
xchg
jnp
adc
out
lea
and
add
or
mov
shl
mov
add
daa
add
add
push
jl
shrb
sbb
lret
push
add
push
lds
xchg
loopne
in
cmp
cmp
int
push
or
aad
pop
xor
cmp
lds
jl
pop
bound
stos
gs
xchg
sbb
addr16
mov
add
adc
xchg
cmp
add
bound
adc
dec
add
loope
push
jo
ffreep
rcrb
incb
dec
int3
shrl
pop
mov
or
inc
ret
or
out
mov
xor
in
add
or
shlb
daa
adc
push
pop
es
aaa
unpcklps
mov
notb
fdivs
jecxz
push
sti
std
sbb
lret
sbb
add
push
mov
aas
jno
insb
sbb
xchg
or
lcall
add
je
pushf
xchg
rol
jb
add
add
inc
adc
loopne
and
sbb
je
cmpsl
or
pop
popa
push
cmc
xchg
ja
sbb
lods
roll
aad
add
scas
push
add
xchg
adc
leave
xor
cmp
add
into
push
sub
adcb
sub
out
pushf
sarb
ret
add
add
cmp
test
loope
and
inc
out
sub
or
add
lock
sbb
xchg
push
sub
rorb
push
cmp
int3
add
addl
out
cmp
sbb
add
clc
aam
push
pop
data16
inc
nop
sbb
popl
add
inc
mov
mov
or
jo
or
stos
outsl
and
adc
push
xchg
jns
shlb
or
addb
dec
pop
add
call
sub
es
or
in
push
sub
inc
mov
scas
ja
cmp
test
sbb
fisttps
and
add
mov
and
pop
stc
outsl
push
mov
jne
into
pop
fiaddl
icebp
cltd
cmpsb
cmp
and
add
testb
xor
or
adc
ds
rcl
push
insb
xor
jbe
pop
stos
add
mov
xor
add
mov
add
dec
pop
add
xorl
pop
mov
xlat
adc
int
aas
or
rcll
insb
sub
or
jnp
subl
push
pusha
inc
sub
push
loopne
inc
xor
sbb
add
sbb
in
pusha
and
xor
nop
mov
rorl
add
pop
test
dec
inc
add
mov
xchg
xchg
jl
xchg
xchg
cmp
shlb
outsl
fadds
lahf
cmc
fcmovne
cs
lahf
cmpsl
add
jg
and
or
outsb
jae
out
popa
xor
adc
in
cs
mov
sub
scas
cmp
aam
aaa
outsl
iret
mov
and
sub
leave
push
cli
xor
insb
sub
movb
xor
add
add
je
es
sub
and
out
sbb
lock
lods
xchg
jl
push
sbb
adc
jns
sbb
addb
adc
add
gs
cmp
sahf
into
add
dec
or
or
mov
xor
movsl
fdivrs
add
dec
mov
mov
push
ljmp
xlat
adc
dec
add
andl
filds
leave
ret
stos
sub
ss
cmpsb
xor
stos
push
add
mov
lock
push
and
inc
adc
jp
mov
or
mov
add
or
sub
adc
jp
sub
pop
scas
mov
std
aam
mov
or
or
mov
daa
loopne
pop
gs
loope
adc
or
xlat
add
add
jae
iret
stc
repnz
or
in
stos
mov
roll
sbb
lock
cltd
mov
pop
add
xor
sub
xchg
shrl
dec
pop
sbb
ficompl
jo
jl
ss
in
sub
sbb
scas
lods
add
cwtl
lret
or
sub
add
jmp
adcb
int3
sub
dec
add
insb
adc
push
es
xor
adc
dec
ja
adc
xchg
daa
cmc
push
sbb
sti
fisubs
and
add
insl
rorb
sbb
sbb
lock
mov
mov
mov
xor
jo
rcr
add
push
rclb
sbb
mov
jnp
lds
and
pop
and
fsubl
add
add
sbb
pop
add
xor
stos
sbb
mov
sbb
inc
ja
inc
add
add
shr
sbb
pop
or
jns
pop
popa
or
cmp
lea
pop
xlat
popa
pop
dec
sbbb
push
psrld
je
jns
pop
inc
movsl
fsts
mov
mov
xor
adc
out
in
mov
mov
mov
out
lret
orb
pop
pop
jbe
loopne
or
cmp
int3
dec
adc
ja
mov
jae
dec
andb
cmp
jo
lods
add
cmp
sbb
xchg
sbb
lea
nop
cltd
add
jne
xchg
testl
dec
mov
adc
adc
add
in
inc
add
je
scas
call
inc
push
pop
add
xor
pop
push
loopne
js
jle
popf
insl
cmp
jl
add
xchg
inc
flds
add
add
mov
loope
fcmovnbe
add
inc
jmp
adcl
les
mov
xchg
mov
and
insl
out
or
push
add
adc
and
adcl
test
jae
shr
addb
fxch
and
or
outsl
dec
cmp
cmp
arpl
xchg
push
or
sbb
ds
sbb
fisttps
mov
lock
inc
test
ss
xchg
les
mov
fidivl
and
js
cmp
add
and
mov
mov
out
cs
sbb
cmp
sbb
cwtl
add
add
push
fwait
aaa
push
outsb
jns
outsb
sub
or
loopne
xchg
mov
sub
movsl
or
add
cmp
add
mov
push
add
push
inc
andl
xor
add
sub
and
es
orl
movl
adc
add
mov
das
add
add
fwait
add
out
fdivs
andb
add
loop
mov
clc
lock
and
cmp
das
push
xlat
and
out
test
lcall
mov
scas
ja
enter
cwtl
add
imul
ret
icebp
sbb
add
mov
cs
das
lds
adc
popf
nop
pusha
mov
add
inc
adc
fsub
daa
add
dec
xor
add
call
fnstenv
add
jnp
shll
mov
popf
add
push
lcall
xchg
das
pop
add
in
push
dec
adc
push
movsb
mov
jg
lea
sbb
push
and
add
adc
add
add
add
loopne
xchg
mov
add
add
jae
enter
into
cltd
or
mulps
add
inc
push
and
or
dec
les
dec
fs
inc
scas
add
out
loop
adc
push
test
pusha
jl
clts
mov
xchg
cmp
pop
xchg
push
push
pop
push
or
add
mov
stc
xor
pusha
push
mov
js
into
insb
adc
loope
in
dec
mov
addl
mov
ret
xor
xchg
add
adc
lret
inc
jmp
or
aad
push
xchg
mov
es
test
adcl
sub
cs
movsl
repnz
pusha
xor
adc
pushf
ss
push
push
inc
mov
inc
sub
pop
ja
dec
dec
pop
pop
cmpsl
imul
mov
push
arpl
mov
aam
or
dec
dec
xchg
mov
add
or
adc
jmp
cmp
jecxz
iret
jns
inc
icebp
mov
jl
mov
out
loopne
cs
insl
or
mov
xor
add
sbb
aam
or
mov
rcll
leave
arpl
addr16
sbb
sbb
mov
ret
add
cmpsl
cli
inc
jl
mov
mov
imul
cmp
jmp
jge
mov
pop
lods
sbbb
mov
shrb
mov
scas
mov
ss
pop
add
inc
and
mov
dec
pop
sbb
mov
mov
fistpll
nop
inc
daa
clc
sti
stc
cmp
sbb
adcl
shl
mov
icebp
mov
inc
shr
aad
sbbb
stos
mov
daa
popa
sub
test
cmpsb
sbb
dec
xlat
cmp
shrb
sub
imul
das
and
jl
cs
out
push
cmp
pop
out
ds
push
mov
pop
xchg
add
jne
cmp
insb
cmp
cltd
les
inc
sub
push
imul
xor
dec
rcll
jle
mov
push
xchg
jl
cli
test
xlat
xor
jp
subb
jle
xor
xchg
xor
add
mov
int
ret
stos
adc
add
aad
xchg
sub
aad
je
add
cmp
movsb
xchg
add
xchg
xor
push
hlt
xor
add
and
and
or
adc
add
les
dec
inc
cmpsl
outsl
outsb
or
adc
cvtdq2ps
xor
xor
mov
xor
mov
sahf
dec
adc
jl
dec
dec
les
fnstcw
adc
ljmp
fsubl
call
dec
or
icebp
jo
scas
stos
insl
adc
test
inc
int
rolb
les
or
mov
test
xchg
aad
pop
adc
adc
lret
ljmp
pop
and
jmp
es
out
call
jl
jle
into
xor
xchg
sub
xor
adc
adc
cmp
cltd
loope
in
sbb
sub
push
dec
xor
sbb
xor
add
or
jmp
out
push
or
cwtl
dec
inc
jg
and
sbb
testb
fsts
jge
outsb
sbb
mov
shlb
xor
ret
mov
enter
inc
pusha
call
test
icebp
out
fimull
jo
ljmp
in
dec
pop
adc
or
jo
xchg
push
push
sbb
mov
or
dec
mov
dec
add
cmpsl
add
and
push
lahf
adc
ror
push
dec
and
add
or
imul
xchg
mov
mov
or
mov
adc
leave
cmovle
adc
into
into
into
dec
je
js
test
xlat
cli
and
xor
popa
push
jne
push
push
push
xor
push
test
adc
arpl
mov
imul
das
fnsave
sbb
mov
lods
mov
into
out
fidivrl
js
shl
add
inc
inc
movsl
lods
sub
push
loope
ret
cmc
fstps
pusha
mov
mov
dec
xor
test
aad
xchg
stc
cmp
mov
test
jmp
or
and
test
test
xchg
add
orl
lock
or
add
dec
dec
lods
sub
xchg
xor
mov
and
xlat
insb
mov
popa
mov
dec
sbbl
xor
xchg
jg
lods
inc
aad
sub
add
pop
lods
fbstp
push
test
cmpsl
or
or
icebp
add
mov
sub
jo
shlb
iret
and
and
push
test
and
or
push
fdiv
fdiv
adc
test
mov
arpl
out
aam
fwait
push
ja
es
pop
ret
arpl
mov
add
mov
mov
mov
xchg
insl
xor
xchg
xor
les
pop
mov
mov
enter
stc
add
push
addr16
js
dec
xor
push
adc
mov
jge
xchg
push
bound
or
cmpsb
movsb
jl
cmp
sub
loope
add
arpl
mov
lret
or
popa
cmp
in
clc
dec
fnstenv
adc
arpl
add
dec
test
adc
push
movsb
add
scas
adc
inc
stc
xchg
sub
ss
mov
test
ja
inc
add
pop
sbb
push
or
push
pop
ljmp
rcrl
lea
jbe
lds
or
repnz
sub
call
iret
sub
test
clc
pop
pop
mov
cltd
add
nop
pop
imul
fwait
cmpsl
adc
es
jns
xchg
pop
leave
addl
shrb
push
add
mov
or
loop
pop
push
arpl
vmread
dec
dec
mov
xchg
lret
add
cltd
test
aaa
jo
xor
pop
or
ret
ret
iret
lock
and
in
cmpsb
test
arpl
lods
push
iret
cmp
and
or
pop
jo
mov
or
mov
mov
cltd
xorl
insl
and
mov
xor
sub
and
jbe
mov
sub
icebp
pop
aaa
pop
fs
add
lret
cmp
xchg
rolb
roll
dec
jno
cmpsl
rcl
add
test
test
jo
shll
and
jmp
or
mov
or
cltd
mov
cmp
out
and
push
xchg
push
sbb
fidivrs
inc
movsb
xor
push
popa
inc
jbe
or
mov
dec
pop
push
out
sub
mov
cmpsl
or
jb
ret
and
sub
imul
push
fildll
push
aaa
push
xor
cltd
aaa
mov
xchg
sbb
sbb
jp
xchg
test
xchg
icebp
mov
xchg
xchg
ror
and
or
sbb
fstpt
cmc
test
sub
or
jmp
andl
dec
push
dec
outsb
dec
lods
jbe
sti
dec
imul
jbe
pusha
ljmp
add
sbb
imul
iret
movsb
inc
call
daa
sbb
mov
dec
popf
fsubl
adc
shlb
hlt
adc
adc
jo
lock
mov
pop
adc
sbb
aaa
xchg
and
or
loopne
lea
adc
aam
fisubrl
mov
scas
push
in
cmp
xchg
inc
or
dec
xor
mov
daa
pop
movsl
sub
xchg
rdtsc
lods
and
sbb
xchg
jecxz
imul
ja
mov
inc
pop
sub
xor
mov
push
ja
and
mov
test
xchg
or
dec
decl
cmp
add
cltd
add
push
add
roll
jno
push
push
arpl
or
insl
push
add
pop
inc
enter
scas
iret
cld
jne
pop
push
push
xor
and
sub
adc
into
xchg
adc
aam
push
inc
leave
and
lock
push
xchg
fadd
aam
and
mov
scas
syscall
mov
xchg
stos
adc
lret
fsts
and
icebp
adc
adc
xor
addr16
inc
push
or
lods
lods
outsl
or
outsb
sub
jge
sbb
xchg
inc
imul
push
and
pushf
cmc
aam
add
jp
xchg
add
sbb
mov
loope
movsb
pop
adcb
movsb
loope
or
scas
inc
insb
jmp
dec
mov
jp
ds
iret
fsubrs
push
shrb
adc
aam
xchg
fwait
mov
std
dec
dec
es
int3
or
notb
xor
insb
sub
jno
insb
pop
adc
and
jae
add
or
jmp
jecxz
mov
dec
dec
jge
xlat
sbb
cmpb
add
xor
stos
sbb
add
std
jo
xchg
inc
inc
pop
lea
sub
or
dec
sbb
cmp
scas
sub
and
cmpsl
lock
addb
push
push
dec
sbb
xchg
adc
ljmp
cwtl
popf
mov
out
mov
mov
dec
sbb
xchg
fisttpll
mov
sbb
arpl
jno
fwait
dec
lods
clc
cwtl
iret
stos
push
cmpxchg
push
out
xchg
sbb
shrb
jno
adc
int
outsl
adc
loopne
sbb
les
adc
test
dec
push
jle
mov
mov
cmp
ffree
sub
cmp
xchg
add
mov
xor
adc
dec
and
call
fsub
je
push
imul
xor
push
leave
ret
cmp
mov
xchg
jle
mov
and
int3
adc
in
mov
fsubs
sbb
fdivr
jo
add
and
movsl
cmp
sbb
pop
out
xchg
push
stos
outsl
outsl
sti
jno
jp
mov
jecxz
adc
daa
andl
mov
mov
xchg
dec
add
outsl
js
mov
or
shlb
adc
inc
mov
cmp
add
mov
lods
pushf
test
ja
mov
sbb
sub
test
test
jne
push
daa
andl
mov
xor
pop
add
sub
xchg
pusha
cmp
outsl
pop
add
mov
ss
add
fstps
sbb
das
js
int3
pushf
repz
xor
or
iret
fs
loope
or
adc
mov
rcll
and
loop
mov
add
mov
or
mov
add
push
pop
push
xchg
dec
fisubs
das
test
dec
into
sarb
or
and
sahf
std
stos
cmc
gs
movsb
cs
xchg
inc
mov
xor
fiaddl
sub
or
daa
inc
das
push
rcr
es
jmp
stos
roll
cmp
enter
and
and
xor
addb
pop
sbb
lret
sub
cmp
hlt
in
push
sbb
or
insl
cld
or
add
add
push
add
sub
aas
xor
imul
clc
scas
cmpsb
sbb
pusha
test
jmp
pop
xor
ja
xor
ret
pop
gs
sbb
enter
gs
leave
adc
icebp
pop
adc
inc
jl
pop
movsl
aam
jge
test
mov
push
fsub
daa
fisubrs
mov
sbb
jp
jno
or
xor
pop
pop
sbb
daa
gs
js
shrb
loope
lds
jb
js
mov
popa
mov
push
test
and
out
mov
cmp
mov
mov
imul
hlt
in
pop
lock
sbb
addr16
dec
cmp
shll
inc
and
outsl
cmp
repz
sbb
mov
mov
adc
inc
stos
and
adc
push
addl
sub
sbb
cmp
add
or
incb
cwtl
mov
adc
or
outsl
aaa
sub
or
out
push
dec
sahf
out
push
movsl
lock
xor
or
sbb
pop
or
xor
rcll
xchg
xchg
sub
adc
sub
inc
ror
xchg
ret
lcall
jns
xor
mov
sarl
dec
dec
or
mov
test
nop
push
add
xor
adc
cmp
mov
in
lods
jmp
dec
int3
cmp
jmp
fsub
inc
sbb
sub
or
insl
call
add
mov
push
adc
mov
inc
mov
fnsave
or
scas
lods
sbb
cmp
inc
data16
in
les
cs
sbb
xchg
xor
sbb
push
inc
mov
rcrl
add
sbb
lods
add
jp
mov
mov
scas
mull
inc
sarb
cmc
popa
inc
fistpll
add
xchg
mov
jbe
jecxz
popa
jp
mov
pop
fsubs
lcall
mov
stos
addr16
popa
jge
xchg
pop
sbb
mov
sub
shll
cmpsb
xor
pop
cmp
and
xor
add
sbb
inc
xor
push
cmp
and
cmp
and
mov
ret
adc
cmp
nop
and
push
xchg
mov
les
loop
and
dec
out
movsb
sbb
pop
popa
sub
int
xor
xchg
adc
push
mov
cld
mov
pop
xchg
add
fcomps
nop
or
mov
xchg
and
push
inc
push
or
jmp
mov
insb
push
pop
pop
daa
loope
sbb
cmp
ret
pop
push
jns
lods
add
xchg
and
test
sub
add
in
dec
adc
dec
and
dec
ljmp
stos
fdiv
cmp
push
scas
int
pop
fisttpl
ljmp
add
push
hlt
movlps
push
imul
cmpsl
cmp
mov
xchg
jmp
rcrl
cmp
and
es
loopne
xchg
mov
sbb
xchg
lret
lret
scas
push
ret
add
loop
cmp
adc
roll
add
lock
dec
in
sub
lock
lods
ret
or
lock
sbb
xor
add
dec
push
add
adc
sbb
push
icebp
and
rorb
iret
lahf
pusha
loopne
ror
loope
adc
mov
cmp
cmp
push
out
nop
add
mov
sarl
pop
push
xor
loopne
add
test
scas
mov
data16
sbbb
imul
in
adc
fcompl
sbb
inc
cmp
je
mov
cmp
jne
pop
and
mov
andb
jno
and
xor
lret
imul
cmpsl
push
clc
dec
add
xlat
out
push
mov
loope
stos
add
out
movsl
xlat
push
cmp
mov
lock
push
mov
push
push
push
add
aas
fdivs
into
xchg
cmc
push
or
jecxz
mov
aaa
int3
pop
xor
jns
add
add
clc
lods
pop
aaa
nop
pop
sbbb
push
jo
aas
dec
jmp
sub
fisttps
xor
incb
loopne
pusha
or
movsb
push
fcomp
jno
pusha
fbld
aaa
add
sbb
jmp
jne
test
jmp
jmp
dec
cli
add
dec
pop
sbb
cltd
rolb
lods
jmp
jle
or
jno
add
sub
mov
fldl
sbb
mov
inc
aaa
pop
in
adc
loopne
jns
stc
sub
xchg
jl
cmp
xchg
or
test
inc
inc
add
inc
cltd
push
or
adc
and
inc
add
adc
roll
dec
jecxz
add
daa
inc
dec
movsl
iret
xchg
scas
ret
mov
mov
jle
cmp
xlat
test
rcl
mov
jmp
fistl
mov
popa
addr16
push
add
fisubrl
push
dec
stc
arpl
jl
fidivrl
jl
gs
inc
inc
stos
movsb
adc
add
cmp
fwait
cmp
mov
or
sbb
mov
call
inc
fsave
jmp
loope
das
mov
or
es
cmp
pop
test
jne
leave
subb
ds
or
inc
push
jecxz
arpl
cmp
outsl
and
sub
subl
lods
sbb
xor
add
enter
sbb
add
lea
sbb
inc
mov
test
aaa
add
jnp
xlat
mov
mov
ja
outsb
push
mov
enter
sub
nop
scas
sbb
pop
punpcklbw
push
xchg
sub
fcoms
cmpb
add
lods
dec
loope
ljmp
push
cmpsb
xchg
and
jmp
popa
pop
rcll
cmp
adc
jmp
jne
and
insl
or
xchg
mov
push
enter
loope
pop
xchg
iret
adc
jne
push
cmpsb
lcall
xor
into
push
add
and
mov
jmp
in
icebp
or
mov
andl
je
pop
syscall
pop
shrb
je
nop
push
xchg
mov
inc
push
mov
nop
out
dec
out
sub
or
mov
dec
ficoml
stc
xor
push
add
jmp
mov
mov
or
inc
pop
addr16
cs
push
add
pop
les
inc
sbb
clc
sub
mov
or
mov
outsb
sub
icebp
cmp
out
iret
cmp
adc
mov
call
mov
cmp
xor
push
cmp
and
ret
sysexit
adc
xlat
inc
dec
xchg
sbb
mov
and
mov
ja
pushl
pop
jp
and
add
aaa
outsl
cmp
xlat
cmp
mov
ljmp
jmp
adcl
popa
loopne
add
or
mov
jno
cwtl
inc
sti
cld
xor
aaa
jno
pop
inc
or
inc
fsts
or
fsubs
add
and
xchg
movsb
rolb
jl
pop
sub
add
loope
inc
jbe
js
cmpl
push
and
dec
in
add
stos
sub
scas
es
ficompl
mov
xchg
lock
mov
mov
pusha
dec
and
dec
pusha
inc
xchg
jle
or
push
sahf
lea
sub
inc
test
or
cmp
xchg
mov
push
or
out
adc
or
or
mov
add
inc
add
or
mov
and
inc
shll
push
mov
int
inc
shll
jp
inc
movsb
loopne
ss
fimuls
sub
push
leave
out
clc
cmp
xchg
pop
imul
mov
mov
lods
mov
in
lcall
sbb
xlat
jo
sub
add
xchg
test
jl
loop
add
loope,pn
mov
pop
rclb
loope
push
add
insl
lods
sbb
adc
inc
pop
ljmp
in
and
inc
mov
fidivrl
push
mov
push
add
adc
and
sbb
movsb
dec
dec
push
mov
sbb
jle
pop
xor
push
mov
push
sbb
nop
hlt
add
fxam
jae
leave
das
in
add
inc
cmc
sbb
repz
push
sbb
ss
into
or
mov
dec
inc
adc
insl
cmp
icebp
sub
add
xchg
add
je
inc
mov
into
mov
addr16
insb
and
add
cmp
fidivl
push
fisubrl
lds
es
cmc
sbb
bnd
cli
sub
add
add
sbb
jb
inc
push
push
inc
mov
mov
and
aaa
dec
pop
sbbl
lret
or
or
xor
pop
pop
addr16
loop
into
lea
xchg
sub
imul
mov
push
sbb
push
mov
mov
sbb
dec
sub
roll
mov
std
or
xchg
sahf
adc
jbe
lcall
push
sub
in
rcll
xorl
or
lods
xor
mov
jmp
mov
inc
test
pushf
loop
mov
insb
mov
lods
loope
push
xchg
ja
iret
adc
adc
fdivl
cli
and
pop
sbb
adc
adc
dec
nopl
mov
imul
mov
adc
movsl
arpl
pop
cmpl
pop
sbb
data16
mov
inc
and
inc
push
sub
mov
out
and
js
aam
repz
fbld
iret
test
add
sbb
xor
mov
aaa
add
pop
push
mov
insl
jb
add
push
pusha
push
jae
pop
popa
adc
adcl
sbb
imul
dec
aas
ljmp
jno
inc
test
push
adcb
and
adc
lods
movsb
mov
dec
or
aad
mov
dec
pusha
add
lea
or
mov
jg
es
icebp
adcl
or
cs
cmp
call
mov
outsl
cmp
push
pop
xchg
subl
repz
sbb
xor
int
aam
xor
frstor
jge
das
and
sub
and
xchg
push
mov
or
imul
movsl
test
aad
hlt
sub
stc
jno
mulb
aaa
mov
sahf
inc
cmpsl
add
call
jnp
push
cmp
das
bound
js
sbb
in
iret
sub
cmpsb
arpl
pop
inc
pop
adc
sahf
lea
inc
push
jg
popa
add
nop
mov
jo
clc
xchg
loope
movl
sarl
mov
out
negl
aam
and
imul
mov
lret
ss
push
lahf
and
scas
loope
pusha
popf
and
scas
leave
push
in
xor
mov
or
movsl
inc
and
popf
movsl
repz
scas
push
pusha
adc
cmc
les
aaa
mov
aas
xcrypt-ecb
cmpsl
or
add
dec
inc
inc
in
ljmp
cmp
xchg
sbb
clc
or
aas
jp
test
or
cmpsl
roll
mov
stos
xchg
int3
mov
pop
shll
ret
xor
icebp
nop
sbb
cmp
rcll
inc
div
bound
mov
ret
cwtl
xchg
xchg
push
dec
push
adc
enter
adc
mov
adc
xchg
jo
sti
dec
pop
movb
jp
pop
test
xchg
mov
mov
das
cmpb
or
add
inc
ror
xor
adc
xchg
loopne
movups
xchg
icebp
push
sbb
popl
pop
notl
sub
push
xchg
int
sbb
fwait
sbb
dec
fisttpl
pop
or
xor
int3
and
sbb
push
pop
lods
xor
out
push
iret
adc
mov
sbb
addr16
jl
int3
mov
inc
sbb
in
dec
dec
movsb
mov
aas
test
adc
lds
test
lea
arpl
add
cmp
sub
inc
mov
bound
test
fwait
shrl
push
lods
fs
test
xor
roll
rclb
mov
fstl
addl
repnz
cmp
je
add
iret
ret
dec
gs
dec
call
sub
sbb
jmp
ja
add
sub
xor
mov
push
jno
sub
pop
std
int3
pop
ficoms
mov
sub
xchg
mov
cmp
and
icebp
out
mov
sub
outsl
fdiv
jbe
sub
xlat
jge
xchg
xchg
push
cmpsl
cmp
arpl
add
dec
icebp
in
mov
xor
sbb
rorb
imul
mov
js
rclb
add
mov
push
dec
lea
mov
sub
and
frstor
push
add
ret
ja
xchg
hlt
repnz
dec
mov
xor
scas
xchg
lcall
and
js
jecxz
sbb
push
sbbb
sub
add
xchg
in
test
hlt
hlt
lds
gs
mov
jno
pop
cmp
mov
fcomps
pop
push
dec
ret
mov
out
shlb
cmpsl
adc
in
inc
sbb
mov
cmp
xor
dec
sbb
and
pop
out
push
lahf
mov
nop
sbb
and
and
jne
dec
addr16
adc
dec
out
pop
add
push
mov
dec
sti
inc
jbe
adc
xchg
add
jp
cmpsl
xchg
inc
add
xchg
xchg
lea
mov
clc
mov
cmp
popf
or
dec
incl
adc
mov
xor
sbb
or
inc
inc
or
imul
and
sub
push
cmp
mov
and
aas
sbb
inc
ret
dec
add
jbe
ds
dec
mov
cmp
fs
sub
imul
lahf
xchg
xchg
scas
cmp
cmpsb
cmp
aam
pop
cmp
aas
mov
inc
cmp
sbb
xchg
roll
int
fimuls
jmp
shll
in
stos
dec
test
sbb
iret
movsb
pop
mov
das
pop
clc
dec
push
mov
mov
xchg
add
test
shrd
mov
jnp
scas
jo
stos
add
push
adc
pusha
test
out
jmp
cltd
dec
in
xchg
aam
push
jp
es
adc
adc
sub
dec
das
push
or
jne
pop
call
fsts
inc
imul
inc
jae
movsb
iret
loopne
and
xor
mov
daa
sub
xchg
mov
sub
jo
test
ret
mov
sbb
xor
fcmovbe
inc
or
inc
or
stc
inc
in
and
test
outsb
mull
inc
push
pop
mov
loop
das
or
fisubs
lock
xor
fs
pop
xchg
mov
popa
neg
cs
sbb
mov
push
sbb
or
aam
insl
ds
jp
adc
rcll
rcl
add
sbb
cltd
aam
je
fsts
add
pop
sahf
mov
xor
sarl
call
jnp
ljmp
sub
add
insb
insl
xchg
sahf
sbb
push
xchg
lahf
adc
bound
scas
pop
add
add
pop
pop
sub
loop
je
jecxz
shll
adc
add
pop
and
push
mov
jne
das
mov
iret
push
fsts
movsl
rol
xlat
dec
or
dec
out
add
mov
adc
in
dec
adc
and
in
bound
imul
add
cmc
and
hlt
ja
out
loope
add
lock
cmp
or
dec
dec
xor
dec
xor
mov
and
in
iret
sbb
mov
or
jp
mov
aam
xlat
or
clc
cmp
or
xorb
inc
test
pop
adc
scas
outsb
loopne
add
jp
cmp
add
cmpsb
cs
sub
add
sub
addb
push
or
mov
sub
pop
fsubl
sub
add
cwtl
xor
icebp
add
inc
sub
pop
or
xchg
mov
enter
sbb
or
push
icebp
roll
out
js
movsl
add
lds
je
and
add
xchg
lods
push
bound
xchg
add
das
sub
out
pop
es
iret
cmp
scas
popa
fstpl
loope
add
arpl
inc
sbb
daa
fwait
std
icebp
dec
ret
mov
mov
add
nopl
jno
sub
lcall
dec
pop
pop
adc
and
repnz
add
mov
fwait
rcl
xor
jno
ja
pop
pop
pop
sbb
lcall
cmp
ret
mov
ss
mov
push
ficoms
dec
dec
xchg
dec
loopne
add
js
and
adc
push
out
mov
or
push
xor
imul
add
fistpll
das
cmpsb
push
inc
pop
xlat
jno
push
inc
dec
fstpl
rolb
sub
dec
insb
mov
pop
push
push
jns
sbb
jbe
test
rcrb
add
xchg
ror
es
int
or
inc
sbb
adcl
ss
fidivl
ss
push
add
scas
xchg
add
fstps
jns
push
dec
lret
ss
lret
jnp
das
dec
shrb
cmp
loop
or
cmpsl
cmp
loopne
mov
add
mov
leave
sub
and
adcb
or
dec
dec
into
sbbb
in
inc
sub
or
adc
arpl
rolb
mov
cmp
mov
arpl
xor
fildll
notb
pop
dec
add
xchg
aam
jecxz
imul
or
ds
xorb
aam
xorb
adc
xor
pop
adc
or
push
push
mov
imul
sub
and
dec
lret
inc
addb
or
into
xchg
or
dec
lret
mov
in
out
ret
ljmp
xor
add
dec
sbb
scas
push
xor
pop
adc
adc
aaa
mov
push
das
test
outsl
xchg
adc
xor
imul
add
lods
icebp
ljmp
mov
mov
nop
sbb
cmc
adc
addr16
inc
frstor
stc
and
mov
inc
push
lret
dec
pop
gs
and
or
jecxz
add
push
nop
lahf
pop
push
shrd
sub
jle
add
push
or
add
aaa
mov
sub
jnp
add
pop
jmp
aaa
faddl
out
leave
inc
shrl
stos
push
test
fs
sub
xchg
aad
add
cltd
adc
inc
add
xchg
shl
shrb
fstl
ss
rolb
dec
xchg
add
mov
aaa
shl
arpl
pop
sbb
dec
loopne
hlt
push
xchg
movsb
jns
mov
add
xchg
pop
lea
jle
add
inc
sbb
rclb
pushf
pop
jb
ror
imul
or
or
xchg
loope
pushf
inc
loopne
aaa
jmp
rclb
add
pop
xchg
ss
inc
out
stc
pop
cmp
inc
add
lahf
mov
or
xorb
lods
add
popa
rorl
add
and
jne
pop
inc
mov
addb
pushaw
aaa
dec
add
xor
test
aaa
dec
daa
jp
dec
add
imul
and
inc
sbb
mov
mov
sbb
scas
xor
sub
and
stos
add
nop
rolb
dec
test
inc
pop
mov
jecxz
insb
dec
or
mov
and
fstl
push
and
lret
or
push
inc
fdivl
and
les
scas
push
add
xchg
sub
inc
lret
jo
imul
scas
inc
sub
fcmovb
pop
dec
mov
jecxz
into
shll
cmp
fists
shll
dec
stc
lcall
int3
and
out
sbb
fbld
xor
inc
negl
rorb
mov
xchg
fists
or
jle
ret
test
add
repz
aas
jle
jg
test
push
mov
or
movb
fdivl
clc
and
push
add
into
gs
or
add
sub
insb
mov
cmpb
stos
mov
popa
cmpsl
push
cmc
bound
das
pop
rol
dec
push
mov
push
daa
stos
dec
out
xchg
scas
scas
ja
mov
mov
and
pop
stos
add
das
into
enter
les
push
nop
cmp
push
sbb
out
fs
push
fs
push
test
or
hlt
add
cmp
jge
and
or
sbb
outsb
icebp
loope
adc
scas
pxor
push
mov
adc
sbb
ret
inc
fcmovnu
popa
sub
stc
xlat
add
mov
outsl
call
dec
mov
adc
dec
packssdw
inc
out
and
mov
pop
les
popa
xor
xlat
iret
sub
pop
scas
sbb
pop
test
sbb
enter
xchg
les
and
mov
ja
xor
jg
ss
xchg
into
in
out
fiaddl
jg
xlat
push
test
mov
mov
scas
xlat
lods
push
inc
cmp
hlt
jge
cmp
cmp
pop
das
das
add
or
dec
stc
ljmp
xor
jmp
stos
popa
xor
mov
sub
pop
adc
add
std
insl
addb
sub
test
cwtl
pop
cmp
and
mov
je
rorb
bound
out
add
mov
dec
push
pusha
pop
sarb
out
out
repz
outsl
add
add
or
sarb
pop
add
or
jne
gs
lods
mov
inc
or
add
add
inc
dec
xchg
imul
dec
sbb
lods
add
xor
dec
loopne
jecxz
stos
jp
add
mulb
out
rcr
push
push
jle
add
and
cld
das
fsubrs
xor
aam
jle
leave
dec
add
pop
stc
outsb
push
jecxz
add
add
adc
push
inc
jne
stos
xor
mov
lret
pop
enter
sarb
inc
fiaddl
popa
xor
insl
pop
outsl
ljmp
pop
imul
shl
sub
loopne
xchg
sub
lcall
js
add
arpl
fwait
jp
in
and
pushf
dec
and
xorl
add
bswap
jno
test
add
xor
xchg
lcall
bound
sub
adc
sbbl
jmp
mov
enter
mov
dec
mov
popa
fnstsw
cmp
xchg
fildll
orl
and
dec
mov
mov
push
and
inc
outsb
imul
pop
mov
mov
add
clc
mov
and
lcall
lods
mov
or
fsubr
or
dec
loopne
push
and
push
jb
add
mov
daa
lock
popa
adc
shll
ds
in
rcrb
pop
or
sbb
mov
test
sbb
ja
roll
pop
push
push
loopne
or
mov
adc
dec
loopne
dec
jbe
xlat
ret
xchg
xor
pop
nop
shl
inc
cmp
inc
les
or
adc
cmp
adc
jns
fisubrs
sub
push
fwait
movsb
pushf
add
sub
pop
adc
imul
in
insb
jae
fldenv
movsl
ret
and
addb
xor
mov
sarb
xor
mov
mov
jo
lock
into
test
xchg
mov
sub
fmuls
cmp
cwtl
add
and
into
jp
sub
mov
addb
lods
add
orb
and
mov
movsb
out
fidivrs
inc
push
and
in
lea
jns
xor
pusha
mov
in
xor
jns
icebp
shl
imul
pop
test
aam
jns
xchg
aad
inc
loop
push
inc
in
add
push
orb
rol
roll
test
mov
stos
dec
out
add
jecxz
jno
and
ficoml
xor
aad
push
or
mov
cmp
push
adc
or
add
sub
dec
inc
rorb
cmpsl
mov
out
and
or
rcll
pop
or
cmpsb
pop
nop
cld
xor
or
and
cwtl
arpl
je
insl
pop
fs
adc
sub
push
ret
add
adc
push
xlat
es
mov
test
mov
and
jns
test
push
dec
jo
cwtl
sarb
mov
lods
add
add
cmpsb
faddl
push
add
xchg
lea
int3
rorw
and
add
xchg
push
out
dec
sbb
test
fs
insl
fcoml
ss
push
mov
pop
or
mov
add
mov
or
popa
add
inc
cwtl
subps
jnp
and
mov
sbb
mov
pop
int3
or
mov
mov
inc
xchg
pop
sub
adc
mov
pop
orl
add
or
jl
lock
add
sbb
test
addl
ja
push
push
or
ss
lds
nop
mov
and
into
fwait
scas
fisubl
jl
add
and
sbb
add
movsl
pop
adc
mov
mov
push
gs
mov
xchg
adc
jno
xor
xchg
iret
adc
mov
xchg
push
sub
mov
cwtl
inc
pop
sub
sbb
pop
aaa
add
jno
jge
lds
sbb
jmp
inc
ret
ret
testl
hlt
add
jmp
xor
adc
pusha
sub
pop
ljmp
cmpsl
xchg
add
bound
rorb
xchg
clc
and
mov
sbb
xor
mov
inc
lahf
ss
rorl
push
mov
xchg
inc
stos
mov
xchg
jp
mov
sbb
scas
or
push
das
cmpsl
test
sub
test
sbb
inc
pop
testb
stc
inc
rcll
inc
popa
add
mov
xchg
jl
out
inc
dec
or
int
enter
mov
cmp
je
xchg
shl
sub
scas
and
shll
push
add
mov
movsl
mov
add
dec
lods
daa
xchg
int
xor
sbb
and
add
xchg
xchg
pop
add
addr16
insb
and
jmp
mov
fcmovnb
dec
dec
sbb
push
enter
pop
jbe
mov
aad
inc
ret
leave
aad
sbb
cwtl
mov
das
or
loopne
ss
push
std
les
push
mov
addr16
and
xchg
imul
push
cmp
cmp
xchg
xchg
xchg
clc
lret
pop
ret
xor
leave
xor
sbb
mov
ds
mov
inc
dec
inc
shlb
fstpt
enter
and
fnstcw
xor
scas
es
pop
mov
test
xor
in
icebp
jo
push
pop
fs
fdivs
xorl
mov
daa
and
imul
dec
cmp
cmpb
fs
push
xchg
jo
test
push
push
bsr
in
mov
movsb
imul
jne
fidivs
sub
or
mov
xchg
adc
mov
mov
mov
imul
push
push
xor
xchg
movsl
and
inc
jno
outsb
mov
xlat
dec
sbb
fiadds
inc
and
and
pop
sub
mov
dec
jae
dec
mov
mov
jbe
jg
rorb
testl
mov
inc
mov
lahf
cwtl
nop
sub
pop
xchg
inc
cli
fidivl
out
adc
jno
pop
push
sub
pop
cmp
js
mov
leave
cmp
arpl
pop
mov
add
adc
mov
fadds
loope
rolb
nop
jmp
push
lock
mov
in
jp
push
adc
daa
jns
mov
xor
fisttps
sbbl
inc
mov
jns
cmp
xchg
cmp
ds
adc
cmp
pop
sub
loop
push
data16
dec
mov
out
or
sub
xor
loope
arpl
shrl
adc
inc
fcmovb
inc
fwait
adc
xor
das
idivl
mov
ror
jmp
sub
inc
add
adc
mov
mov
gs
bound
and
aad
mov
test
mov
rolb
int
add
pop
mov
or
or
orb
mov
sbb
xor
or
mov
pop
sub
dec
adcb
mov
and
nop
lods
jmp
add
add
xchg
sbb
popa
mov
pop
jo
mov
mov
push
jge
push
push
mov
mov
xchg
push
mov
lock
jecxz
mov
icebp
lods
pop
aaa
lcall
popa
mov
aaa
or
cmpsb
mov
push
pop
es
outsl
inc
dec
xlat
add
and
pop
iret
inc
inc
loope
pop
mov
jae
daa
test
inc
jno
or
mov
pop
test
push
fisttpll
push
shlb
push
jmp
insb
adc
xor
std
sbb
add
or
jg
movb
data16
pop
shlb
fbstp
add
inc
dec
sbb
push
sbb
loopne
add
pop
lds
test
sahf
xlat
adc
dec
andb
int
sub
ret
pop
push
xchg
dec
push
xor
sub
xchg
lret
sub
push
pop
daa
insb
lods
inc
call
adc
mov
jb
ror
outsb
orl
lds
adc
loop
cmp
loopne
sub
adc
iret
inc
std
add
iret
add
data16
js
jp
and
or
sub
cmp
in
stos
and
out
hlt
mov
push
lret
pop
mov
cmpsl
sub
jle
xlat
mov
add
mov
fstl
mov
jns
loope
fisttps
jb
jbe
xor
sub
add
push
daa
mov
jg
rorb
mov
pop
rolb
cltd
cmp
dec
je
jo
add
lret
rcrl
sbb
dec
cmpsl
push
push
sbb
test
lock
jae
push
push
not
xorb
data16
leave
mov
fsubl
sbb
das
arpl
sbb
push
nop
jbe
jne
mov
jnp
sub
lock
movsb
test
stc
jo
mov
lock
mov
push
inc
aaa
je
shl
sarl
or
dec
or
jns
test
mov
jge
cmp
xor
iret
hlt
adc
jp
mov
cwtl
pop
pop
cwtl
cwtl
mov
cmp
xlat
inc
lret
into
dec
clc
and
lock
js
xor
rorb
push
push
ds
sbb
xchg
jp
or
and
pop
mov
stos
cltd
pcmpeqb
js
push
int3
add
shll
push
inc
push
mov
push
sbb
push
js
jmp
movsl
and
add
mov
mov
fnsave
fildl
fistpl
fdiv
ret
jns
hlt
test
ja
or
pop
fstl
into
out
xchg
out
xchg
cmp
daa
xor
jb
lret
cmp
add
ds
xchg
cltd
mov
jl
js
mov
cmp
jae
mov
jb
cmp
push
jbe
popw
neg
xlat
insb
das
imul
sti
push
call
mov
and
out
add
out
xchg
xchg
xor
insl
push
fsubrs
lock
ds
pop
push
stc
shl
jg
fcom
jnp
ss
negb
loop
fwait
dec
jno
sbb
hlt
adc
inc
repz
cmc
mov
or
sbb
mov
pusha
pusha
add
push
pop
inc
mov
jo
cld
daa
add
inc
jl
pop
jbe
adc
add
std
orb
jns
add
movsb
daa
cld
jae
hlt
rolb
cmc
jle
aas
xor
loope
inc
movsb
adc
cmp
ret
adcl
ljmp
xor
adc
push
inc
sub
hlt
push
test
push
pop
insl
add
pop
xor
fnstenv
aaa
scas
and
or
daa
xor
fsubl
or
lahf
or
adc
mov
mov
adcl
cmp
adc
cmp
push
movsl
lea
pop
in
cli
insb
repz
lock
mov
in
pop
mov
mov
hlt
and
das
add
push
add
ljmp
fcompl
test
mov
inc
lahf
push
test
or
inc
sub
leave
add
push
cmp
or
loopne
push
test
ret
outsb
jmp
mov
pushf
dec
cmp
repz
add
imul
jnp
or
imul
hlt
and
add
and
pop
lcall
jl
cmp
sbb
int3
jg
test
sti
outsb
jl
sub
and
sub
bnd
add
testb
push
mov
mov
add
add
rcl
les
mov
cmpb
and
add
sub
xchg
mov
jle
push
or
out
and
xor
jmp
sti
jbe
ret
les
shll
xor
xor
sub
in
cmp
loopne
test
push
lahf
sbb
or
jge
adc
sti
lcall
add
out
rclb
add
xchg
add
pop
std
or
test
mov
pop
sbb
clc
nop
push
rorb
je
xlat
sub
pop
jecxz
inc
dec
test
movsb
movb
and
ds
xor
stos
mov
jge
add
stc
sub
mov
cmpb
rclb
sbb
fbld
inc
mov
inc
subb
stos
xchg
sbb
insb
inc
or
mov
movsl
dec
addr16
rorl
int
mov
test
insb
loopne
les
xor
cs
dec
les
scas
inc
cmp
stos
pop
sbb
add
mov
xor
enter
stos
xor
jle
jle
cmp
nop
and
xchg
adc
pop
and
and
push
lret
shrb
scas
mov
xchg
les
leave
filds
cwtl
enter
mov
push
dec
sbb
test
pop
jp
sub
push
jle
pop
pop
jmp
out
xchg
inc
inc
mov
pop
arpl
ret
test
cmp
lock
int3
mov
dec
push
mov
cmpsl
push
movsl
add
loop
jmp
fmuls
add
xor
inc
lods
cmpsb
sub
or
clc
les
sub
inc
mov
or
loope
inc
pop
dec
jmp
add
popa
jge
pushf
in
insb
test
xor
lret
hlt
sarb
xor
shll
shrb
and
push
gs
or
mov
cmp
pushl
dec
adc
in
dec
mov
test
pop
test
cmp
loopne
mov
add
add
mov
push
sub
pusha
cs
mov
dec
cmp
jp
xor
popa
sti
pop
cmp
in
inc
ljmp
adc
pop
sbb
lods
dec
adc
dec
dec
loop
push
and
push
and
mov
jo
push
enter
movsl
int3
aam
push
add
clc
push
push
sbb
add
adc
cwtl
test
pop
daa
cmpsb
movsl
xchg
lcall
cmp
pop
in
mov
mov
add
cltd
iret
or
sub
add
push
mov
in
inc
btcl
pop
xchg
out
xchg
or
pusha
je
pop
cltd
sub
dec
add
cmc
mov
andb
std
ss
push
out
lret
mov
movsb
jb
test
xchg
fsub
rolb
push
sbb
int3
ret
insb
mov
xchg
push
insb
pop
icebp
jg
sub
scas
xchg
sub
add
push
inc
mov
hlt
push
xlat
test
sahf
mov
sbb
inc
pop
jl
jnp
pushf
xor
push
push
jg
in
xchg
add
pop
push
add
jmp
push
dec
xlat
xchg
xor
xchg
jo
popa
mov
pop
xorl
dec
in
and
add
adc
adc
cmc
or
dec
xor
int
add
adc
push
xlat
jne
movsl
add
scas
sbb
inc
jbe
or
dec
dec
dec
jl
and
adc
xor
test
les
add
jo
arpl
lea
lods
lret
jne
add
mov
or
mov
js
jl
nop
jne
and
pop
stc
ret
out
pop
add
shrl
stos
mov
insl
loope
adc
cmp
or
loope
clc
dec
jecxz
mov
dec
cltd
cmp
ja
iret
jnp
inc
clc
jp
je
jae
lret
mov
daa
push
cmpsb
in
movsb
mov
sbb
ret
inc
and
xchg
mov
aas
dec
lret
cmp
inc
mov
add
fiaddl
cmp
popa
or
lods
xlat
pop
loopne
hlt
xchg
mov
insb
and
cli
cs
xor
scas
push
xlat
adc
sbb
or
addr16
icebp
mov
mov
and
and
mov
add
and
outsb
xchg
lods
and
lret
ss
pop
and
sbb
jl
sbb
and
lods
xchg
dec
pop
xchg
jo
addl
lret
or
out
pop
mov
adc
jl
aaa
pop
and
or
xchg
mov
xor
sub
xor
test
or
outsl
inc
xchg
js
mov
outsl
xchg
jecxz
xchg
rorb
xchg
push
popa
out
test
or
adc
lcall
arpl
repz
jmp
jns
mov
imul
movsb
fucomp
cmp
jae
test
cmp
jg
aam
insl
iret
jmp
cmp
call
and
xchg
cli
loope
in
sub
lret
adc
inc
and
mov
xor
push
je
shlb
subb
repnz
insb
cmpl
stos
cmp
subl
inc
xor
ret
cmp
xchg
ret
adc
or
dec
add
dec
or
mov
mov
loope
ja
adc
shll
lret
dec
mov
mov
ss
cli
daa
and
fnstenv
or
xor
and
mov
bound
out
cmovp
xor
ss
mov
sbb
fdivp
addb
cltd
and
add
mov
cmpsb
push
or
out
ja
jae
aaa
dec
cmp
push
mov
pusha
or
hlt
andl
cmp
les
adc
ds
mov
xor
loop
aam
xchg
scas
xchg
pop
mov
and
pop
out
lret
subl
sub
jmp
ljmp
cmp
xor
insl
jne
fisttps
jle
pushf
dec
sbb
aaa
add
lods
adc
sbb
xor
loopne
or
xlat
ljmp
cmp
stos
dec
jno
mull
daa
cmp
cmp
filds
push
xchg
dec
sbb
aad
mov
aad
and
repnz
jmp
lcall
xor
adc
add
scas
fwait
in
cmpsb
fs
icebp
cmp
cmp
test
stos
enter
xchg
or
mov
or
pop
pop
testl
aas
jle
cmp
idivl
and
xor
das
adc
inc
or
movsl
mov
insb
sbb
nop
mov
fcomp
cmc
pop
es
pop
aas
mov
sbb
and
subl
lods
xlat
lods
rcll
je
test
sarb
and
dec
je
xchg
pop
sub
nop
or
cmp
cmpsl
dec
mov
out
lock
push
and
sarl
xor
sub
or
pop
dec
loopne
enter
dec
sbb
xchg
dec
mov
dec
cmp
mov
das
ds
test
ret
cmp
sub
test
inc
pop
mov
pop
dec
fiaddl
push
jo
push
fisttpl
mov
daa
cltd
push
add
jno
sub
std
jnp
push
lods
popa
jecxz
inc
add
mov
fnstcw
adc
sbb
mov
add
sbb
add
enter
in
add
pop
stos
lea
adc
sbb
popa
push
inc
stos
lods
push
out
divl
fs
cmp
jmp
pop
dec
or
test
mov
lea
push
inc
std
test
push
dec
stc
rcrl
cmp
popf
lock
or
xlat
gs
out
jo
lcall
pop
testb
jno
daa
loop
cltd
inc
addb
std
mov
popa
adc
arpl
mov
mov
adc
pusha
test
mov
int
sub
daa
pushf
fnstenv
jno
add
inc
inc
inc
test
leave
stos
jecxz
iret
pop
pop
lahf
lock
adc
pop
pop
inc
mov
fsubrs
pop
iretw
xor
aas
push
add
cmp
ret
sub
jecxz
call
adc
mov
jp
adc
cmp
les
andb
inc
add
insl
iret
sub
mov
mulb
je
cmpb
mov
jge
mov
sbb
mov
sbb
arpl
push
clc
movsl
ret
fs
mov
in
jecxz
arpl
xchg
add
add
xchg
adc
nop
pop
rorb
je
or
outsl
mov
test
out
popa
inc
adc
or
dec
pop
push
or
xlat
repz
sbb
or
and
je
mov
or
push
push
iret
sub
pop
loop
mov
add
test
notl
jecxz
mov
add
repz
pop
add
addr16
fwait
in
push
xchg
ret
les
sbb
iret
add
or
pop
scas
pop
jo
sbb
dec
rol
rep
jbe
jo
push
loope
inc
and
and
mov
cmpb
mov
stos
rclb
mov
ret
js
and
flds
pop
arpl
dec
dec
pop
mov
adc
imulb
sub
or
push
ss
jno
lods
es
and
add
xchg
add
imul
repz
daa
in
sub
push
xchg
mov
sahf
lret
mull
mov
or
out
test
lret
ret
push
pop
test
fldcw
pop
test
add
sbb
out
mov
mov
push
scas
iret
aad
outsl
iret
dec
hlt
jge
sbb
out
shll
call
roll
imul
adc
enter
mov
adc
shll
add
xor
cmp
das
fisttpl
iret
cmp
in
scas
les
add
add
jmp
rorb
adc
lock
add
push
add
mov
cwtl
rcl
push
push
xor
pop
aas
into
out
rorl
pop
stos
lea
arpl
jno
dec
xchg
sub
hlt
mov
pop
add
adc
sbb
adc
test
and
aad
popa
jo
xchg
test
aaa
jecxz
adc
arpl
test
xor
push
xchg
sub
in
loop
stc
pop
out
mov
xchg
mov
das
xor
ljmp
xlat
shll
jo
mov
aam
cmp
and
sub
push
push
jmp
or
daa
add
or
pop
xorl
lret
xchg
add
aaa
dec
jp
push
cmc
jl
mov
sbb
or
mov
jecxz
cli
movaps
xor
or
insb
pusha
and
aad
push
push
mov
inc
sub
inc
adc
xor
and
push
scas
cs
test
repz
shlb
xchg
jmp
jbe
imul
stos
pusha
pushf
or
sbb
inc
imul
or
cmp
inc
add
sub
adc
lcall
adc
jno
adc
cmp
daa
shrl
dec
sarl
cs
dec
cli
outsl
push
mov
mov
iret
in
pop
fadds
mov
test
cmp
lea
test
ds
imull
mov
addr16
pop
sbb
mov
and
test
push
bound
mov
mov
adc
adc
mov
test
and
loop
cmc
hlt
in
jno
out
push
loop
xorb
add
xor
lret
scas
push
fstl
mov
repnz
addl
iret
jbe
mov
and
mov
js
stos
push
pop
or
sbb
add
addr16
imul
and
scas
das
adc
xor
addb
sbb
fwait
enter
xchg
js
mov
sub
fstpl
inc
popa
ret
mov
add
imul
add
ss
sub
movl
add
sub
or
fiadds
imul
adc
pop
imul
movsl
dec
pop
adc
mov
xor
in
jno
imul
cltd
lret
popf
xchg
pop
outsl
int3
mov
movsl
das
popf
or
out
daa
push
sbb
or
or
sub
daa
mov
loope
insb
jge
cltd
sub
test
cltd
int
shlb
pop
imul
pop
jl
in
pop
push
notl
dec
add
push
pusha
or
mov
pop
bound
cmp
mov
inc
movsb
inc
fdivl
adc
dec
inc
sbb
loope
imulb
and
add
stc
add
push
dec
push
mov
add
insl
add
sub
lods
repz
inc
xor
movsl
inc
sub
pop
wrmsr
icebp
mov
daa
mov
cmpsl
lret
lods
jmp
in
add
aad
inc
imul
rorb
mull
scas
pop
fwait
mov
jno
adc
sarl
popa
xor
fsubl
popl
mov
daa
pusha
daa
cld
push
mov
and
daa
mul
popa
fnsave
push
add
hlt
aam
add
loope
fcompl
push
rcl
daa
xorb
inc
and
xchg
jl
dec
pop
movsb
fcoms
xlat
cmc
rolb
or
and
popa
mov
cmpsl
cmp
pushf
mov
pop
dec
es
icebp
cltd
adc
scas
dec
xor
pop
mov
dec
and
jno
inc
loope
lds
and
cmpsl
lcall
add
add
push
adc
add
mov
stos
stos
or
enter
mov
subl
and
sbb
pushf
call
dec
push
push
fimull
mov
cmp
inc
add
imul
movsb
ret
or
mov
fistl
in
es
sub
insl
fadds
pop
mov
adc
test
rorl
dec
cli
call
inc
add
or
push
push
push
push
dec
inc
dec
or
addl
and
aas
mov
add
int
push
loopne
xchg
cmp
or
mov
xchg
add
or
frstor
test
or
inc
and
lds
add
aaa
xor
data16
shlb
jns
add
andb
sarb
pusha
or
shrl
inc
sahf
dec
pop
pop
push
mov
mov
dec
pop
and
jl
push
ret
lcall
gs
cld
test
sub
mov
sbb
orb
pop
inc
je
pop
shrl
repz
test
data16
cmpsl
aam
mov
or
movsb
cmp
jmp
rcr
fsub
inc
sbb
bnd
inc
ss
das
test
sbb
xor
xorl
cmp
xchg
mov
aad
pop
clc
add
out
adcl
aaa
add
inc
pop
cmp
stos
insb
fisubl
std
jle
iret
mov
jl
xchg
dec
sub
add
mov
xchg
fdivl
push
arpl
add
jno
cs
inc
mov
pop
add
lods
sar
adc
sub
pop
aaa
shll
inc
or
mov
es
call
adc
push
test
pop
cmp
mov
xor
test
xor
fwait
jno
jno
rolb
adc
arpl
lea
arpl
cs
test
ds
jl
sbb
aad
xor
xchg
xchg
aas
cmp
imul
mov
pushf
adc
fsubrl
inc
faddp
shr
and
filds
inc
cmp
out
adc
cmc
jge
jle
sbb
mov
lock
inc
in
cmp
inc
repz
xor
test
push
daa
stc
dec
pop
and
lds
repz
jb
sbbb
jl
push
sbb
movsl
scas
fldt
dec
cmp
int3
mov
js
fildll
push
nop
call
shl
inc
mov
test
dec
or
adc
fxch
adc
jb
imul
insl
fisubs
std
aam
sub
jns
in
sub
adc
push
subb
dec
push
or
push
push
push
adc
and
rcll
loope
fdivrs
popf
rep
or
or
daa
xchg
les
nop
jae
sti
inc
pop
adc
pop
jge
dec
into
and
push
outsb
test
movsb
push
inc
fs
es
enter
mov
gs
inc
xchg
int3
sub
cmp
xor
lods
mov
mov
in
ret
out
cmp
xchg
or
xor
arpl
jne
pusha
loop
jmp
inc
addl
negl
xchg
or
pop
push
add
into
mov
rolb
dec
movsl
adcl
xor
push
push
icebp
iret
or
mov
nop
xchg
xor
inc
dec
test
std
dec
pop
sbb
mov
push
test
dec
std
jbe
fbld
shr
sbb
sbb
sbb
adc
lea
jmp
and
scas
pop
ficomps
add
mov
and
push
mov
cli
cmp
xor
shll
pop
loop
xor
jl
pop
jo
rcll
gs
lods
inc
cmp
sub
push
lret
jg
jl
adc
imul
out
fisubrs
or
inc
cmp
inc
inc
lods
rclb
ret
sar
fucomp
cmc
mov
push
je
cmp
push
popa
jg
push
jp
cmp
das
and
mov
pop
rcrl
or
sub
add
sbb
and
and
pop
inc
mov
pop
decl
mov
cmovb
jle
int3
ficoml
and
lea
test
or
cltd
xor
xorl
jg
lods
push
loopne
adcb
push
mov
and
std
lret
adc
out
rorl
out
xor
les
lds
xchg
xchg
orb
out
cmp
cmp
mov
add
fnsave
fidivs
push
add
push
lahf
ret
test
data16
arpl
cmp
fists
dec
push
loopne
or
pushf
sbb
xor
and
mov
aas
push
mov
adc
cwtl
inc
cmp
add
pop
aaa
filds
rorb
jle
sub
pusha
cmp
or
loop
and
fwait
push
dec
clc
icebp
xor
or
or
cmp
jmp
sbb
jo
sub
and
mov
xchg
mov
xor
fcmovbe
aad
imul
inc
mov
adcl
adc
pop
and
xchg
xor
xchg
xchg
inc
cs
adc
sti
push
scas
sub
or
mov
pop
loopne
sub
sub
lock
out
cmp
mov
iret
xor
xchg
dec
lret
push
inc
rolb
jmp
aam
mov
js
dec
pop
sub
jb
insb
lea
inc
loopne
and
jb
fldl
pusha
aam
cmc
adc
and
dec
or
lock
pop
xchg
pop
or
jo
lea
pop
cmp
adc
adc
mov
fsubrl
mov
add
pusha
cmc
or
arpl
dec
mov
fidivl
sbb
mov
sbb
xchg
sub
leave
out
loopne
push
stos
or
sbb
ret
dec
mov
ret
cmp
and
and
loopne
adc
sbb
pop
out
rol
add
sub
adc
mov
sbb
and
sub
push
sbb
or
fimull
mov
and
mov
idiv
push
out
ds
pop
lret
cwtl
pop
rcrl
xchg
sub
pop
adcb
and
hlt
sub
repnz
inc
sbb
add
inc
pop
add
ret
mov
iret
test
test
push
out
adc
adc
xchg
and
pop
outsl
stc
xlat
mov
test
popa
nopl
sbb
push
stos
sbb
jle
das
orb
repnz
ret
dec
daa
test
cmp
cmp
mov
movsb
loope
jae
cmp
sub
push
or
xor
jmp
push
cwtl
adc
ret
pop
ja
rcll
dec
sub
add
inc
cmp
pop
xchg
jae
cmpl
loope
inc
fwait
aaa
mov
jbe
jle
adc
xor
fs
adc
pop
ja
cltd
out
xchg
mov
test
jl
das
jb
jne
stos
sub
or
rolb
adc
adc
jg
shrl
roll
mov
push
mov
push
stos
pop
add
sbb
or
in
jo
xor
insl
cld
loopne
movsl
out
daa
cmp
adc
lret
lock
stos
lret
pop
cwtl
rolb
ret
icebp
and
push
jg
fmuls
add
fwait
xor
add
xchg
test
aaa
mov
sbbb
pushf
rolb
jmp
fwait
or
test
inc
adc
leave
xor
daa
lcall
inc
bound
int
loopne
or
xor
xor
into
movsl
xchg
aam
dec
leave
js
inc
mov
jg
add
xor
pop
pushf
loopne
sbbl
shlb
sub
jo
or
gs
xor
add
mov
cmp
loopne
mov
xrelease
ljmp
push
jp
and
or
pop
pop
rdpmc
inc
lods
xchg
das
ficoml
push
in
adc
loopne
push
ljmp
pushw
adc
jae
je
jae
pop
cmp
pop
fnstcw
jmp
pop
outsb
jmp
inc
loope
subl
and
outsb
and
inc
test
push
out
pop
and
xchg
stc
inc
iret
stos
jne
push
sub
test
push
movsb
inc
bound
add
pop
xchg
sub
stc
js
sub
adc
push
sbb
mov
and
lcall
lret
fs
pushf
mov
inc
popa
loopne
xor
daa
nop
mov
lcall
cmpsb
push
jns
iret
push
push
inc
or
hlt
loop
ret
or
push
fidivs
or
out
xor
cmc
or
or
and
js
pop
cmp
fisubrs
push
or
or
icebp
loop
add
sub
push
add
sbb
cmp
cmp
adc
push
in
mov
add
add
add
addl
mov
sbb
inc
out
adc
ret
mov
das
add
ret
add
mov
and
and
aam
xor
or
sbbl
adc
aas
add
iret
leave
movsb
pop
and
mov
xadd
iret
aaa
jno
fstpt
aas
mov
pop
xchg
adc
mov
and
sar
cmpsl
movsb
fs
xchg
insl
push
sub
lret
adc
out
les
test
xorb
cmp
lcall
hlt
mov
pop
inc
ja
ss
inc
inc
xor
adc
clc
stos
cmpsl
push
and
adc
adc
inc
xor
pop
jle
lds
push
nop
jae
aam
jo
jno
mov
ret
adc
mov
out
imul
inc
adc
xchg
dec
mov
push
iret
mov
mov
xor
dec
nop
ds
mov
mov
lea
cwtl
dec
or
mov
popf
mov
mov
fsubs
pop
cltd
cmp
mov
rcl
sbb
pop
sbb
dec
testb
cmovs
pmulhw
outsl
mov
popa
bound
fadds
cmp
add
pushf
jno
add
out
daa
sub
insl
aam
add
or
test
or
daa
dec
or
inc
and
add
xlat
jge
testl
add
aaa
mov
pop
cld
call
shll
mov
adcl
fdivrs
sub
cmp
mov
in
pop
cmp
jp
push
stos
dec
shll
scas
stos
fimull
and
sub
jbe
push
rcll
xchg
loope
jae
inc
mov
mov
pop
fldt
fnstcw
loop
shrb
cmpsl
mov
pop
subb
mov
push
dec
les
or
sub
xor
or
sbb
inc
add
out
and
repz
scas
das
repnz
addb
inc
mov
and
shrb
inc
pop
mov
or
test
frstor
aam
sbb
je
ficoms
fcmovbe
scas
call
inc
or
xor
mov
cwtl
insl
into
movntq
icebp
sbb
lret
loope
stos
or
enter
xchg
sbb
adcl
pop
sbb
jecxz
scas
in
mov
loop
orb
adc
sbb
inc
pushf
sub
loopne
xor
jl
sbb
add
adc
scas
test
or
or
into
in
mov
fwait
inc
mov
jp
ret
lret
xchg
push
dec
roll
sbb
and
dec
shl
stc
scas
movsl
cs
inc
mov
push
sub
shll
pop
lods
dec
rclb
test
fildll
cmp
scas
push
stos
bound
loope
xchg
sub
cwtl
adc
xor
sub
xor
sbb
and
sbb
jnp
cmp
fiadds
push
xchg
mov
and
add
push
rcl
ret
data16
fisttps
mov
imul
ret
cmpsb
cld
inc
pop
inc
jae
mov
mov
rcrb
hlt
andl
pusha
sbb
cltd
add
or
sar
cmp
cmpsl
mov
xchg
lret
inc
js
adc
jge
loop
add
or
mov
fcomps
mov
pop
fsts
jne
fcomps
xlat
xchg
jno
addr16
fsubrl
adc
push
add
mov
add
fcomip
and
pop
mov
push
inc
or
pop
mov
jmp
mov
lcall
scas
jne
push
lahf
push
mov
cmp
leave
push
jb
mov
push
and
orb
insl
push
divl
push
add
aaa
stos
inc
dec
add
scas
push
out
in
pop
dec
cmp
inc
or
insl
cmp
nop
inc
mov
shrl
jb
sbb
fidivl
jb
push
push
jo
sbb
fs
outsl
test
lods
mov
sbb
cmp
je
sbbl
push
int3
jno
lock
mov
mov
leave
lret
sbb
xchg
mov
push
divb
enter
xor
xor
inc
xchg
add
add
sbb
addr16
and
sarb
je
cmovs
je
jo
je
sbb
dec
test
aaa
jl
push
in
sub
jo
pop
inc
mov
add
das
ret
jo
out
xor
xor
mov
lea
push
add
iret
jmp
into
testl
mov
sbb
bound
lahf
out
xor
ja
jo
xor
test
inc
adc
mov
fisubl
xchg
pop
sub
sbb
or
and
sub
and
pusha
pop
and
sahf
xchg
fists
dec
xor
or
jne
fiadds
ja
pop
cmp
jns
out
mov
lcall
xor
out
shll
scas
or
popf
add
cmpsb
mov
aas
jmp
jb
adc
mov
or
loopne
popa
xor
cmp
loope
stos
int3
jne
cmp
rolb
loope
xchg
lcall
fwait
pop
sbb
bound
add
out
jne
test
mov
test
sbb
lods
sbb
dec
cmp
lcall
xor
dec
test
lods
mov
stos
xchg
jo
movsl
ficoms
xchg
in
iret
mov
or
lods
push
mov
test
mov
out
dec
or
mov
rolb
or
add
movl
xor
and
add
dec
inc
dec
cmp
arpl
pop
bound
js
mov
cwtl
mov
xlat
mov
jbe
xor
addb
std
mov
scas
movsl
test
movsb
out
in
popa
mov
sub
pop
lods
add
cmp
sub
dec
xor
das
mov
loope
scas
add
xor
xor
pop
and
ds
jno
andb
stos
push
and
dec
loop
cmpsb
fisubl
lods
sub
out
push
rorb
mov
or
movsb
divb
mov
out
add
xchg
add
faddp
mov
xlat
add
add
mov
ror
es
cmpsb
cmp
loopne
or
jo
pop
jecxz
and
popa
icebp
test
lcall
loopne
loope
aas
add
add
lods
ja
sbb
sub
add
cmp
sbb
aaa
pop
cltd
pop
xchg
or
mov
cmp
stos
in
add
add
ljmp
or
and
movups
scas
rclb
jb
cmp
dec
call
sub
or
jno
out
cmp
adc
out
ret
rolb
jne
inc
and
sub
mov
into
adc
inc
dec
test
or
ret
cmpsb
fildll
jne
add
or
stos
lahf
dec
inc
or
jmp
movl
xchg
loopne
add
data16
sbb
and
pusha
lock
mov
sbb
adc
sbb
or
and
frstor
pusha
jl
dec
test
adc
popf
push
sahf
daa
dec
loop
mov
add
adc
int3
icebp
mov
mov
inc
pop
add
inc
dec
clc
push
sub
lods
leave
mov
or
xchg
sbb
sbb
and
mov
xchg
pop
add
add
xor
sub
add
sbb
icebp
pop
add
leave
mov
iret
and
in
and
sbb
movb
jb
pop
sbb
pop
pop
and
pop
add
or
repnz
rcl
push
dec
add
cmpsl
add
arpl
in
push
cmp
pop
add
hlt
add
xchg
adcl
xchg
jmp
push
adc
and
ret
je
loop
sbb
insl
inc
int3
inc
and
mov
push
divb
adc
sbb
add
fisttps
add
and
out
or
jns
or
push
pop
jb
inc
in
rclb
adc
pop
aad
or
push
es
mov
loop
add
add
daa
mov
adc
jno
dec
icebp
inc
push
add
mov
dec
es
filds
adc
push
popa
inc
sub
fbstp
add
sub
jno
or
xlat
lods
popf
jg
ss
pop
ja
adc
add
jbe
mov
lods
out
mov
push
dec
push
sub
in
adc
push
mov
jae
mov
push
dec
gs
add
or
popa
lods
mov
and
bound
or
std
xor
inc
add
shrb
adc
enter
and
jns
jno
sbb
sub
shlb
fcomps
js
lock
sbb
mov
test
jnp
push
jne
inc
insb
aas
les
cltd
and
sub
and
lds
pop
xor
sub
mov
lods
dec
push
xor
dec
jecxz
les
adc
testl
stc
adc
lcall
imul
inc
sub
lods
aas
mov
sub
push
test
mov
mov
adc
push
test
jp
les
mov
fstl
rorb
mov
push
add
roll
scas
cmp
test
aaa
and
jno
scas
xchg
stos
xchg
cmp
adc
or
ss
call
cmpsb
pop
lahf
loopne
ljmp
jo
pop
xchg
in
sbb
out
rolb
daa
sub
stos
mov
adc
jne
out
fsub
push
add
push
and
rorb
sbb
pop
addl
repz
pusha
scas
cmpsb
stos
mov
sub
push
or
jno
cmp
scas
inc
movsb
push
add
mov
aaa
es
mov
xchg
xor
imul
pop
addl
or
jo
mov
push
add
and
mov
cmpsl
mov
dec
test
or
or
lods
sub
mov
or
dec
cmp
rcrl
jbe
andb
subb
test
adc
popf
mov
dec
inc
scas
xchg
push
push
mov
test
xchg
push
pop
cli
cmp
push
sbb
cwtl
push
mov
xchg
loopne
popa
movsl
das
sbb
mov
pop
or
gs
out
mov
fs
fs
add
mov
push
mov
test
pop
js
faddl
and
mov
pop
adc
test
xchg
test
jnp
dec
sbb
leave
push
loope
mov
push
sub
scas
mov
sub
out
mov
xchg
mov
add
lods
sub
mov
xor
mov
add
dec
insb
add
mov
movsb
fwait
adc
je
ret
lds
adc
aad
add
dec
sub
imul
mov
fldt
int
and
das
fwait
les
mov
int
rcr
or
add
pop
pushf
and
add
mov
xchg
lock
add
int
xchg
mov
roll
mov
icebp
jnp
xchg
adc
aam
sbb
orl
add
lods
add
movsl
es
ret
sub
jecxz
adc
xor
pusha
out
dec
sub
loop
dec
mov
into
ljmp
dec
std
rcl
fnstsw
imul
add
jp
pop
daa
cs
xchg
pop
adc
lret
dec
pop
mov
pop
addr16
mov
or
sti
jo
or
mov
sbb
mov
or
inc
add
sub
insl
inc
sbb
das
mov
dec
mov
nop
push
or
fisttps
ret
mov
loope
pop
insb
or
pop
fxrstor
inc
or
pop
jbe
cmp
dec
mul
negl
lods
mov
and
pop
les
dec
jmp
test
add
loope
inc
in
enter
dec
es
push
data16
pop
add
xor
sub
enter
in
icebp
adc
sub
loopne
sub
imul
js
push
sub
or
adc
mov
xor
inc
cs
jmp
push
mov
or
add
inc
add
sbb
adc
pusha
sahf
and
push
push
dec
inc
xchg
add
daa
add
mov
sub
and
mov
call
push
pop
lods
push
mov
outsl
or
pusha
scas
ret
jp
mov
test
pop
adc
mov
sbb
adc
ljmp
loopne
ja
ret
sbb
inc
test
xchg
imul
mov
movb
dec
xchg
pop
mov
andl
push
push
pop
lods
pop
cmp
jb
mov
fs
xor
ffree
mov
pop
inc
jg
xchg
adc
shlb
and
mov
inc
pusha
sbb
sbb
push
iret
pop
push
mov
loop
inc
xchg
xor
movl
sbb
in
xor
lret
int3
mov
adc
xor
pop
dec
inc
stos
rcrb
test
ja
pusha
xor
xor
jecxz
aaa
aam
mov
cmp
add
mov
sbb
mov
sbb
mov
mov
xor
lods
pop
outsb
jle
cmp
fnstenv
or
and
fisttps
xchg
aam
mov
pop
or
push
int
lcall
vsqrtss
xor
lcall
lahf
imul
xchg
cmp
inc
inc
pop
movsl
cmpsl
sbb
dec
inc
xchg
lret
sub
adc
leave
push
pop
fwait
dec
mov
outsl
mov
xchg
sbbl
cwtl
cmp
mov
mov
mov
pop
lods
mov
mov
xor
mov
mov
sub
or
cli
mov
jo
xchg
gs
dec
xchg
ret
inc
or
mov
mov
or
arpl
cmp
add
sub
dec
out
ss
jne
add
push
outsb
and
and
stos
ljmp
inc
mov
jo
adc
imul
and
imul
aam
mov
mov
das
pop
adc
imul
jecxz
mov
pop
in
inc
xor
cltd
pop
or
aaa
in
inc
dec
sbb
fs
test
cs
add
dec
sub
popa
jnp
pop
arpl
les
pop
jp
or
rorb
addb
scas
subl
jecxz
lret
jl
pop
or
stos
jo
js
sbb
inc
icebp
inc
adc
push
orl
loop
and
jecxz
sub
adc
add
test
rcl
aaa
dec
and
mov
push
ret
orb
and
das
out
sub
test
pop
inc
jbe
cmp
xlat
xchg
adc
add
orb
cmpsl
aas
mov
in
dec
out
xchg
les
stos
jns
pop
jecxz
ret
inc
mov
cmpsb
add
scas
fdivp
pop
mov
xchg
in
rorb
lods
roll
mov
je
dec
sub
and
push
mov
int
push
mov
es
lahf
add
dec
inc
loope
das
push
inc
sub
or
and
jmp
dec
add
cmp
das
adc
jbe
dec
jb
fnsave
and
or
push
dec
or
das
iret
push
nop
in
add
in
pop
jae
pop
test
lock
or
or
ret
push
out
xchg
mov
lock
pop
mov
and
mov
dec
nop
dec
mov
dec
sbb
stos
pop
dec
jle
xor
ja
lret
cmp
dec
mov
pop
cmpl
pop
mov
mov
sarb
and
loope
push
clc
fmulp
aam
or
inc
jecxz
dec
dec
rcrl
mov
pop
xor
es
movl
insb
mov
andl
inc
or
adc
outsb
enter
out
test
adc
adc
js
cltd
sub
pop
push
fwait
pop
and
dec
inc
mov
inc
call
adc
ds
and
mov
pop
pop
inc
cmp
pop
adc
movb
call
clc
sub
mov
out
or
out
and
mov
adc
out
add
pop
ss
sbb
in
xchg
les
fwait
popa
loope
cmpsb
push
rolb
push
push
jge
js
test
dec
xor
adc
sub
pusha
sub
xchg
and
test
fimuls
inc
adc
and
mov
andb
lret
sti
xor
stos
push
loopne
jp
nop
mov
mov
mov
mov
add
lea
popa
arpl
adc
movsl
xchg
aad
hlt
ret
sbbb
sbb
shr
add
loop
roll
fists
push
mov
add
test
cmp
js
repz
and
mov
pop
dec
popf
xor
adc
popa
gs
test
iret
scas
dec
or
jo
or
inc
shlb
add
dec
gs
add
popa
sbb
pop
inc
or
push
fcomps
add
adc
adc
lock
adc
fdivs
or
add
pop
lcall
in
sub
addb
push
sbb
sbb
cld
in
sub
and
adcb
jo
out
dec
and
inc
rcl
roll
mov
push
or
cmpsl
mov
aaa
aad
data16
jecxz
lret
add
std
movsb
pop
push
and
add
mov
mov
inc
or
js
ss
dec
aad
loopne
aas
mov
lcall
jl
jge
orb
iret
inc
dec
lahf
fcmovnb
add
fsubrl
xorb
push
sahf
mov
mov
mov
movsl
imul
dec
dec
iret
fimuls
ret
push
fucomp
adc
sbbb
dec
mov
cmp
add
adcb
lock
inc
and
js,pt
xor
jle
jle
data16
outsb
jae
mov
es
sub
jle
insb
push
jbe
pop
or
fnstenv
push
adc
and
std
test
arpl
mov
add
cmp
arpl
lcall
push
lods
push
aaa
leave
sub
sbb
push
mov
addl
arpl
icebp
ret
call
nop
or
add
jp
mov
dec
xor
xor
outsb
sbb
out
cmc
addb
push
imul
add
push
sbb
test
mov
repnz
inc
inc
rol
mov
js
sub
enter
jmp
sarb
popaw
cmpb
icebp
jecxz
fmuls
mov
ret
sub
xor
andb
inc
add
xor
sbb
sub
les
mov
pop
loopne
imul
sbb
inc
adcl
xor
and
xchg
outsb
ljmp
cwtl
mov
iret
sub
loop
pop
rclb
push
movb
pop
push
fadds
in
or
mov
hlt
push
inc
mov
mov
xor
ss
push
or
adc
jnp
mov
pop
ret
es
sbb
ret
enter
push
shlb
pop
movsl
aam
insb
cmc
sahf
xchg
and
lret
jp
xlat
fwait
fs
inc
jbe
jecxz
pusha
fsubl
pop
dec
adc
pop
es
ror
push
out
xlat
sbb
les
dec
push
dec
addl
mov
fnstsw
push
js
cmpb
jecxz
cmp
cmp
adc
add
test
xlat
jle
add
cld
jg
cmpsl
jno
in
xchg
je
jno
test
push
mov
xchg
or
cmp
xchg
inc
je
pop
push
dec
sub
xchg
mov
mov
mov
bound
sbb
jle
push
fs
push
jecxz
xchg
int3
adc
cmp
dec
cmp
sahf
popf
out
jo
nop
ljmp
rorb
push
lods
aas
mov
sbb
sbb
dec
pushl
xor
push
mov
jecxz
add
cmp
cmp
mov
std
std
mov
cmpsl
xor
mov
or
sysret
mov
rcr
mov
pop
xchg
cmp
mov
push
sub
icebp
popa
popf
lock
and
loop
dec
dec
pop
fiaddl
push
inc
jno
xchg
xchg
cmp
rclb
adcb
lea
cmp
xchg
add
push
mov
sub
in
add
hlt
inc
cmovs
mov
cmp
add
repz
popa
sub
add
jns
inc
sub
push
cmp
cltd
add
dec
cmp
and
xor
add
push
cs
negl
out
je
xor
jmp
mov
sbb
inc
xchg
shlb
push
cmp
dec
mov
lods
shr
mov
sub
inc
dec
jl
jg
iret
pop
pop
dec
lret
aaa
mov
adc
sbb
dec
stos
push
pop
dec
or
cmp
dec
addr16
inc
push
inc
loope
lea
add
jae
inc
sub
pop
ret
adc
push
in
adc
mov
add
iret
pop
cmp
fbstp
add
sub
fdivl
pop
jns
int3
push
cmp
add
loope
les
xchg
inc
fwait
stc
or
mov
add
jb
or
roll
mov
shl
dec
or
setge
inc
movl
xor
lock
sub
adc
sbb
add
sub
scas
push
lods
lahf
pop
adc
bsf
sub
andl
or
pop
mov
add
test
push
add
ret
mov
cs
mov
dec
enter
lret
lret
jns
push
jl
arpl
js
add
mov
push
les
sub
mov
and
add
or
test
sbb
jl
data16
push
dec
popa
xchg
lock
jecxz
inc
sbb
or
inc
dec
stos
cmp
sub
xor
ret
pop
cmpsb
xor
cs
jecxz
lcall
push
cmpsl
xor
jg
stos
insb
dec
add
add
loope
dec
scas
insb
outsb
jnp
das
rcll
xchg
iret
push
xor
push
mov
test
fisubl
rcll
xor
xchg
rorl
pop
ret
xchg
lret
jg
pop
sahf
lds
js
pop
pop
sub
jns
fsubs
outsb
xchg
mov
in
iret
and
push
pop
inc
shlb
push
push
orl
icebp
and
mov
mov
outsl
in
fwait
or
lock
inc
loope
cmp
xor
xchg
xor
xchg
jge
xor
js
xor
jge
xor
xor
cmpsl
imul
gs
dec
sbb
inc
inc
push
pop
lret
imul
push
xor
aad
xchg
lods
ss
icebp
out
jecxz
jo
push
xor
dec
mov
xchg
mov
pop
test
push
mov
mov
mov
pop
pop
outsb
dec
xor
daa
jnp
movsl
nop
mov
cltd
popa
inc
pop
mov
mov
add
daa
in
xor
dec
stc
inc
sarl
insb
mov
or
loop
jecxz
mov
push
frstpm(287
inc
cmp
dec
xchg
inc
aad
and
cmpl
dec
js
dec
mov
jno
sub
pop
mov
mov
mov
add
rcrl
jecxz
fcomi
cs
je
pop
clc
xchg
jno
cmpsl
mov
enter
imul
iret
movsl
add
mov
cltd
adc
insl
fadd
xchg
data16
inc
adc
mov
jns
sbb
and
loope
sbb
pop
mov
or
sub
das
add
dec
stos
in
add
add
push
add
inc
imul
sbb
int3
mov
adc
add
enter
fstpt
loopne
ret
cmp
rorb
outsl
adc
mov
add
mov
scas
subb
cmp
adc
jb
add
add
add
sbb
add
iret
pop
inc
dec
mov
mov
popf
test
add
mov
lods
mov
ljmp
fst
mov
cli
aas
lret
push
mov
xor
ret
ret
scas
fcoml
sub
sub
cmp
and
cmp
mov
cmp
int3
mov
xor
xchg
push
inc
inc
add
lret
or
cmp
leave
add
mov
rolb
enter
js
scas
sub
dec
ret
sub
fcoms
push
push
icebp
jo,pt
mov
xor
add
subl
mov
xchg
mov
sbb
xor
push
les
add
cs
lods
pusha
movsl
sub
test
ffreep
adc
push
cli
orl
mov
fldenv
push
add
add
pop
sbb
adc
push
mov
fcompl
xor
xlat
ss
add
sbb
sub
sub
aam
cmp
out
nop
in
rolb
and
cmp
shll
push
xor
lds
and
mov
pop
inc
stc
cmpsb
testl
popf
lret
fs
or
inc
add
xor
push
insl
testl
mov
addl
jecxz
sti
add
or
subb
mov
pusha
test
add
les
jecxz
cmpb
std
inc
leave
aaa
mov
dec
cmp
xchg
or
insb
mov
add
sahf
das
stc
addl
add
pop
rolb
outsl
xchg
sti
add
mov
jbe
inc
sub
add
in
mov
jecxz
in
xor
dec
sub
mov
outsb
in
ret
xchg
mov
loopne
xchg
addb
dec
add
cmp
mov
sahf
jg
inc
aam
pop
mov
mov
rclb
inc
push
add
faddl
inc
or
lods
and
scas
les
inc
push
and
and
mov
adc
call
jns
pop
js
in
add
fcmovnb
negb
nop
mov
ja
xchg
add
inc
fnsave
repnz
xchg
push
jno
cmpb
movsb
jnp
aaa
sub
into
inc
add
jmp
add
add
enter
fbstp
add
fbld
and
pusha
add
adc
jecxz
dec
in
cmc
push
adc
adc
adc
inc
loopne
cmpsl
pop
mov
sub
fdivs
ret
or
jecxz
pop
scas
add
fwait
sbb
pop
aad
add
iret
push
add
addps
pop
pop
add
outsb
clc
aaa
push
mov
iret
lcall
xchg
jl
lods
push
dec
or
xor
and
inc
add
pop
sbbb
lods
push
or
sbb
pop
push
xor
es
mov
add
daa
test
add
sub
call
adc
iret
add
and
add
pop
and
xor
jge
xchg
insl
sahf
mov
sbb
insl
test
push
sub
test
jb
pop
lods
inc
movsb
addb
clc
fisubrs
and
lea
loope
bound
adc
pusha
adc
inc
adc
sbb
mov
or
testl
push
and
adc
bound
xor
and
dec
adc
cld
add
aaa
mov
and
sub
lods
inc
jmp
mov
push
bound
dec
adc
cmp
pop
and
pop
push
rol
xchg
cmp
adc
bound
sub
and
push
sub
aad
push
addb
cli
jns
stos
mov
sbb
cwtl
adcl
push
dec
xor
stos
imul
cmc
push
mov
and
fwait
dec
cmpsb
xchg
lds
imul
fcoml
mov
sbb
ret
rcrb
aad
and
adc
lods
imul
xchg
mov
cmp
inc
jo
jmp
inc
and
xor
daa
hlt
add
shlb
add
bound
leave
cmp
add
sub
mov
xchg
jmp
jmp
jns
jmp
pusha
pop
push
lds
bound
bswap
mov
gs
pop
clc
std
test
dec
ret
call
daa
flds
sbb
push
xorb
andb
test
mov
dec
mov
loope
adc
or
popa
gs
sub
sub
push
jl
push
loope
add
inc
dec
pushf
pop
rorl
popa
pop
pop
lods
sub
rorl
add
adc
jo
addr16
push
fwait
scas
and
pop
movsl
int
mov
sarl
push
push
movsl
sbb
pushf
int3
dec
andl
push
mov
add
xchg
mov
pop
gs
or
int3
jno
outsb
enter
jns
loope
add
sbb
dec
mov
arpl
mov
nop
mov
sub
gs
pop
andb
mov
or
test
adc
sub
cmp
push
jge
and
and
and
imulb
push
cltd
test
cwtl
dec
sbb
sbb
sbb
int3
subl
mov
add
add
push
add
xor
xor
faddp
in
les
sub
push
filds
push
xchg
jg
pop
dec
and
test
les
or
xchg
xor
fisttpl
dec
push
js
mov
xor
mov
or
cmp
jge
movsl
sub
xor
test
lret
pushf
daa
test
adc
bound
sub
cmp
je
fwait
aaa
es
test
xcrypt-ctr
cmpsl
pop
insl
mov
dec
push
int3
xor
xchg
in
aas
dec
push
cmp
or
jp
fldcw
add
incb
mov
stc
mov
add
sahf
fs
add
hlt
dec
inc
xacquire
inc
add
or
int
mov
xchg
mov
jecxz
movsb
sub
push
cltd
aaa
test
jne
leave
out
cmp
insl
push
add
pop
outsb
or
pop
outsb
push
sbb
mov
dec
aaa
test
mov
mov
out
jae
insl
add
in
dec
popa
aaa
test
mov
dec
xchg
mov
stos
mov
jbe
jp
es
inc
add
sub
jae
jg
shlb
fwait
jns
js
insb
movd
fidivl
adc
in
ja
sub
iret
and
outsb
das
sbb
mov
lea
insl
push
jbe
mov
lret
jmp
or
lods
push
inc
bound
mov
adcl
mov
sbbb
cmpsl
lcall
aad
lea
lods
adc
leave
repnz
ret
push
lret
rcll
inc
push
xor
ret
aas
cmp
inc
mov
lods
push
xor
ret
xchg
or
xor
push
imul
sti
push
push
insb
fisttpl
scas
and
mov
test
insb
jo
add
push
aas
cmpsl
or
rolb
out
bound
gs
push
mov
add
mov
and
sub
ss
aaa
mov
jno
add
dec
push
cmp
dec
sbb
sub
jo
mov
pop
sub
clc
or
insl
sar
pop
cmp
or
sbb
add
cmp
sub
lds
jp
add
add
test
scas
adc
add
cmpsb
adc
dec
dec
rcrl
hlt
into
jp
loopne
jg
or
mov
or
inc
pop
pop
shrl
stos
jae
and
sbbb
lods
and
adc
jge
sub
mov
jns
into
dec
mov
inc
sub
cs
sub
dec
lods
jno
fisttpl
popa
subb
sahf
jg
imul
cmpsb
pusha
pop
cld
pop
das
daa
xchg
push
mov
xchg
test
sub
or
test
mov
push
xor
shrl
cmpsl
xchg
out
jbe
les
out
test
mov
ss
out
and
ds
push
loope
push
adc
andl
lret
out
shll
and
int
fadds
int
adc
push
ss
cs
sub
ljmp
push
push
cltd
stc
icebp
sub
mov
sub
ss
nop
or
and
xor
pop
lds
mov
mov
pop
cmp
jno
insl
pusha
mov
inc
xchg
in
inc
insl
jle
fsubrs
test
add
push
mov
shrl
jp
jmp
pop
cmpsb
ret
add
shl
icebp
sub
xorb
sub
ret
in
add
scas
icebp
xor
jle
test
test
xchg
add
pusha
xchg
adc
iretw
adc
and
pop
inc
inc
bound
dec
push
mov
gs
or
fs
aad
cld
int
adc
adc
bswap
leave
jno
cli
test
jp
imul
and
jne
adc
pop
lret
je
sub
mov
shll
cltd
pop
add
xchg
je
adc
aas
jnp
mov
sub
dec
in
xor
jno
clc
and
xchg
mov
push
inc
mov
das
loop
mov
push
mov
fnstenv
loope
adc
inc
loope
mov
add
sbb
dec
add
add
test
iret
add
popa
fisubs
push
push
or
imul
rorl
xchg
add
movq
add
fwait
or
insl
jno
adc
shll
mov
pop
add
int
jns
adc
decl
cmp
jecxz
pop
rcl
add
jmp
inc
sbb
ret
mov
in
daa
arpl
cmp
mov
add
mov
pushf
ja
pop
mov
push
xor
push
and
jmp
or
jbe
sbb
xor
mov
shrl
xchg
jge
mov
imul
mov
sub
mov
xchg
xor
je
fsts
es
cmc
lahf
bound
int3
mov
loope
in
cmp
fildl
mov
fs
xchg
dec
push
ja
adc
jae
popa
cmpsl
in
and
aas
push
sub
adc
dec
sbb
daa
mov
cmpsb
insl
cwtl
push
lods
lea
mov
inc
mov
mov
inc
pop
add
xor
or
les
inc
mov
lcall
test
popa
inc
call
ja
and
xor
fldl
sbb
dec
or
xchg
add
mov
adc
imul
xchg
rcrb
popa
dec
sbb
or
pop
jno
or
fstl
icebp
aam
addb
push
add
jbe
or
test
inc
cmc
fistpll
sbb
fs
jmp
loopne
loope
imul
xlat
inc
and
push
push
call
sub
dec
fcoms
test
add
push
xor
out
cmp
sbb
xchg
fwait
sbb
xchg
adc
ret
xor
imul
or
imul
testl
sub
inc
xchg
es
add
out
add
or
xor
inc
adc
mov
dec
fldl2t
mov
stos
loopne
inc
dec
jle
add
or
mov
lea
imul
sub
dec
jbe
add
or
sbb
xor
or
adc
mov
fisttps
les
clc
das
sbb
fcmovbe
sbb
pop
inc
cmp
das
xor
mov
add
and
jge
sbb
and
push
out
adc
nop
push
and
add
loop
mov
xor
fs
or
cs
mov
mov
add
adc
adc
mov
dec
push
dec
push
mov
aaa
hlt
mov
mov
mov
in
mov
push
arpl
test
xor
addps
sbb
scas
cmp
and
add
out
lock
xchg
lret
stos
xchg
popa
push
cmpsb
inc
pop
jle
jne
jb
fcoms
stos
stos
aaa
add
inc
adc
dec
adc
inc
inc
add
or
push
loope
xorb
stos
mov
neg
pusha
rclb
lret
les
sahf
fnstenv
in
push
dec
mov
xchg
inc
out
pop
adc
inc
cmp
mov
popf
xchg
mov
cmp
int
roll
lds
add
popa
mov
loope
cs
jno
ja
pop
in
jno
lea
int3
ja
fisubs
inc
jo
test
xchg
addr16
push
das
decb
xor
out
mov
pop
sub
cmp
sbb
mov
xchg
fwait
add
mov
sub
sub
pop
sub
outsb
loop
dec
hlt
mov
xorl
shlb
add
fwait
loope
das
sbb
mov
or
lods
es
in
pusha
jo
add
add
dec
pop
push
movsl
xchg
jno
sbb
xchg
sub
adc
xor
inc
leave
cmp
das
and
sbb
inc
cmp
pushl
xor
test
ret
fldt
lret
aaa
mov
inc
dec
add
xchg
sbb
push
loope
iret
adc
imul
leave
dec
and
sbb
xchg
inc
dec
sbb
shr
sub
dec
inc
jns
test
ja
rclb
adc
adc
inc
in
mov
sub
mov
jmp
jno
xchg
lods
int3
mov
fadds
pop
add
push
lcall
add
adc
test
repz
leave
push
add
xor
push
jg
inc
fildl
jg
insl
ret
ljmp
mov
push
mov
jp
shlb
shrb
lret
inc
loope
mov
rclb
mov
cmp
push
movsl
pusha
mov
mov
iret
cld
lods
daa
xor
aam
or
cmp
jno
jns
mov
loop
jo
jmp
ret
mov
ds
addl
ss
cmp
cmp
sub
jns
jne
or
mov
xchg
bound
push
pusha
pop
mov
adc
xor
adcb
pop
mov
lret
dec
les
aam
cli
ret
mov
dec
jecxz
rolb
outsb
shl
or
faddl
xor
jecxz
out
ret
inc
les
repnz
jg
cltd
data16
and
add
cmpsb
push
inc
les
out
out
sbb
movsb
sub
and
in
add
ror
popa
push
cmc
xchg
mov
mov
lods
jmp
mov
loope
fwait
loop
or
lret
cmpsl
sub
mov
cmp
lret
cld
dec
lods
mov
hlt
xchg
pop
loop
lods
xchg
hlt
shlb
push
loope
cwtl
in
stos
add
test
mov
dec
xor
dec
aad
sub
dec
pop
leave
nop
sub
movsb
test
inc
aaa
jle
mov
pop
out
mov
jecxz
jnp
ljmp
das
adc
pop
aas
hlt
adc
sub
and
jp
jb
cli
andl
inc
mov
mov
dec
fldl
pop
imul
cmp
push
add
jp
and
inc
mov
and
push
int
pusha
xchg
or
or
jns
adc
mov
int3
add
pop
push
scas
aas
add
push
sub
lea
or
and
mov
or
add
adc
and
sahf
fwait
or
lods
add
inc
popa
ret
test
adc
hlt
sbb
add
mov
inc
jecxz
sbb
sub
imul
push
daa
xlat
xchg
inc
stos
add
add
jno
mov
pop
inc
add
das
lods
nop
or
and
cmpsl
into
or
add
int3
inc
inc
insl
call
mov
push
jle
add
adc
pop
cmp
loope
inc
ljmp
les
jne
or
add
setne
add
pop
cmc
addr16
push
aas
test
sub
or
int3
add
adc
inc
and
in
popa
push
inc
lods
mov
and
popf
add
test
or
sarb
dec
inc
push
adc
or
mov
outsb
outsl
xor
imul
add
popa
push
in
inc
ret
and
sbb
push
sub
pop
inc
and
aaa
add
pop
xchg
mov
add
roll
stos
or
mov
or
fcmovnbe
bsf
sub
fbld
insb
adc
mov
sbb
pop
and
popa
lea
cltd
imul
loop
mov
jno
mov
int3
or
pop
lds
popf
xchg
dec
insl
dec
shlb
leave
mov
pop
xor
or
addr16
adc
test
test
add
adc
dec
sbb
jne
lds
add
dec
rorb
pop
and
sbb
adc
in
mov
cmpsl
mov
or
loop
cmp
xchg
push
add
sbb
popa
loope
subl
xor
faddp
push
push
jbe
sbb
nop
sbb
pop
dec
add
gs
add
sarb
pop
cmp
or
jns
mov
je
les
and
ss
iret
push
or
add
and
das
and
hlt
mov
xchg
cld
addr16
scas
xchg
jmp
add
sub
add
cmp
repnz
mov
mov
add
add
jl
clc
adc
sbb
pop
inc
dec
adc
xchg
movsb
add
and
shrb
sub
loope
jg
data16
push
push
divl
insl
add
xchg
les
popf
adc
daa
cs
xchg
and
or
inc
in
sbb
lods
or
je
lret
repnz
add
add
or
sbb
xchg
sub
xchg
pop
xchg
xchg
push
in
pusha
cmpsl
shrb
add
test
shlb
cmp
sub
cmp
push
cmpl
sub
test
add
jo
xchg
mov
mov
sub
push
ret
xchg
xchg
sub
movsb
addl
aam
orl
xchg
add
imul
sti
xchg
mov
xchg
std
add
add
sbb
add
movsb
pop
mov
pop
xorl
add
xorb
leave
xchg
fnsave
fbld
fidivrs
jge
and
stc
insl
push
add
dec
xchg
pusha
ret
cmp
andb
fnstsw
push
xchg
sub
mov
sub
pop
pop
in
sub
ret
mov
push
arpl
adc
enter
add
add
pop
flds
jne
and
add
dec
adc
movsl
sti
les
sub
xchg
pop
sbb
inc
ret
adc
dec
inc
ret
orl
add
dec
andb
ror
add
sahf
test
stc
add
sarl
or
push
jnp
add
stos
inc
pushf
fwait
xor
xlat
rolb
mov
or
or
and
sbb
xchg
js
rorb
mov
je
dec
popf
and
xchg
or
scas
inc
or
pop
test
inc
stos
mov
add
push
pop
movsl
sub
xchg
xchg
test
add
test
call
push
mov
mov
mov
sub
fld
add
pop
outsb
cmp
mov
cltd
outsl
xor
and
mov
addr16
add
pop
push
lret
sub
and
int
aam
inc
clc
xchg
jns
ljmp
lret
push
add
les
stos
adc
or
cmp
sbb
sub
mov
xorb
jle
push
mov
sub
cmpsb
push
test
mov
aam
inc
add
aad
sbb
jge
stos
dec
loop
and
dec
loop
mov
push
sbb
add
add
jne
and
add
dec
jnp
inc
test
jecxz
add
dec
js
add
add
js
test
add
shrb
and
test
rcrl
jnp
adc
inc
dec
daa
sub
ljmp
insb
ror
lcall
jne
push
mov
shlb
pop
sub
ja
fsts
dec
pop
mov
add
adcl
ja
mov
cmp
leave
adc
sub
sahf
mov
add
fwait
mov
pop
xchg
mov
iret
fnstenv
roll
pop
ss
aad
mov
imul
xchg
sub
add
jno
cmc
jns
sbb
cmp
pop
adcb
aas
out
adc
xchg
sbb
push
mov
pop
adc
test
sub
dec
and
sub
add
loopne
loopne
cmp
inc
add
jnp
cwtl
iret
xor
push
fwait
jecxz
xor
es
popa
shlb
cwtl
addr16
and
sub
cmc
mov
mov
cmp
cmp
sti
sbb
aad
and
fstps
pop
leave
mov
jnp
add
pop
shrb
test
fisubs
test
sub
jns
pop
data16
inc
popa
mov
adc
and
jbe
adc
imul
nopl
fstl
xor
and
sahf
popa
dec
sbb
pop
cmp
jnp
xchg
fdivr
xorl
pop
insb
sbb
stos
cmp
or
insl
pop
loope
movsb
fisubrs
add
dec
dec
inc
dec
rol
daa
inc
push
adc
xchg
pop
or
push
subb
push
fstp
stos
je
or
outsl
inc
fsts
push
sub
ja
dec
lahf
fcompl
cmp
adc
push
fadds
xchg
adc
mov
fcmovnb
roll
xchg
aad
pop
stc
cmpsb
and
mov
sarb
inc
sbb
push
dec
jo
outsb
inc
inc
sub
sbb
pop
pop
pop
mov
add
cmpl
daa
add
aaa
aad
out
mov
xchg
fisubrl
fmul
ficomps
xorb
addl
sub
xchg
add
add
call
sbb
fcmovbe
xorb
fs
dec
cmp
aaa
sbb
sub
enter
cmc
sub
push
cmpsl
mov
mov
int
and
ljmp
cmp
inc
es
jle
lods
dec
pop
lock
and
and
popa
aaa
rolb
in
loop
bound
or
adc
pop
pop
jnp
add
mov
fists
push
lahf
shlb
aas
iret
insl
fdivr
adc
in
jno
out
cmp
mov
xor
or
je
dec
aas
outsb
and
add
fadds
push
sbb
adc
push
sub
adc
test
pop
xchg
adc
lea
xchg
pusha
add
xchg
pop
dec
jle
shlb
paddusw
fisubl
aas
pop
pusha
mov
ret
cmp
dec
pusha
xchg
stos
iret
and
mov
push
or
or
iret
pop
sbb
lahf
or
aas
je
adc
mov
inc
inc
notb
aas
adcl
jbe
aas
mov
mov
pop
mov
xor
xor
or
in
sbb
sub
sbb
aas
jmp
inc
lret
arpl
add
adc
cld
adc
cli
add
shrb
mov
xchg
loope
adcb
test
add
lods
aam
popa
int3
add
adc
outsl
cmp
popa
inc
add
in
mov
mov
xchg
ss
push
dec
into
or
ja
sub
ficoml
jmp
aas
int3
pop
push
xor
dec
pop
jno
mov
loope
loope
scas
mov
mov
xor
xor
xchg
sbb
adc
inc
or
pop
scas
test
inc
psubsw
movntps
popl
test
pusha
and
test
or
pop
push
mov
je
xchg
mov
dec
sbb
or
pop
push
cmp
jl
loopne
shl
cmp
iret
sbb
adc
sbb
or
hlt
fs
adc
mov
xlat
sahf
mov
pop
ss
xor
loopne
loope
fs
and
dec
sbb
push
testl
aaa
adc
inc
inc
cltd
or
dec
xor
jg
jecxz
push
out
call
dec
dec
in
add
shlb
jnp
or
sub
mov
or
inc
or
jno
sbb
addr16
mov
inc
imul
dec
in
sti
aaa
dec
in
jnp
ljmp
loope
pop
jo
dec
cmc
outsb
push
add
popa
gs
iret
xchg
andb
inc
add
fwait
cmp
dec
xor
rcll
es
ja
add
js
sub
mov
adc
sub
mov
sbb
arpl
imul
or
mov
shlb
adc
rcl
ja
push
mov
mov
adc
test
xor
fcompl
sbb
and
jae
mov
adc
or
testl
lock
xchg
sahf
shlb
xor
cli
lods
out
push
into
ds
inc
cmp
push
fnstenv
not
add
sub
xchg
mov
lahf
loop
inc
jecxz
cltd
nop
loopne
negl
xor
cmp
mull
adc
jle
or
jp
add
dec
fldl
sub
notb
add
push
pop
add
int3
add
or
sub
jmp
in
push
xorb
fsubl
sub
jmp
out
cmc
push
js
loopne
mov
pop
shlb
sub
sbb
sbb
mov
fadd
scas
add
fisubs
fisubrl
mov
mov
rcrb
xlat
cmp
sarb
add
out
and
loopne
mov
imul
ret
in
add
stos
mov
or
push
pop
out
lcall
insb
sahf
xor
ret
fildl
push
mov
sbb
addl
and
sub
insl
sbb
xchg
or
add
adcl
sbb
and
jnp
adc
and
jmp
push
lock
mov
jp
insb
sub
ss
and
out
div
add
jge
je
shrb
fwait
xchg
jp
pop
faddp
add
fmul
cmp
test
and
lods
xorb
mov
dec
xor
or
icebp
push
push
out
add
mov
sbb
mov
xor
push
rol
cmp
or
pushf
add
jg
fstl
repnz
ret
mov
add
push
push
negl
cmova
xchg
add
bound
cmp
cld
negb
lock
out
mov
arpl
xor
aam
bound
pop
ret
nop
xor
xchg
lods
add
push
pop
sbb
xlat
mov
loop
xorl
xchg
insb
idiv
pop
test
std
and
aad
push
stos
fwait
pop
dec
push
popa
pop
jnp
inc
pop
and
popa
mov
pusha
cli
popa
adc
sbb
shrb
mov
stos
xorl
lock
andb
ret
dec
mov
push
mov
addb
test
aaa
pusha
inc
in
and
sbb
push
cmc
or
and
lock
cmpb
push
cmp
int
les
cmp
add
pop
push
idivb
fbld
pop
push
xor
adc
jmp
in
daa
xor
incb
sahf
add
shrl
push
lret
stos
stos
subl
test
test
ds
out
aaa
mov
mov
shl
push
repz
push
gs
filds
faddp
xlat
cmp
fcoms
call
iret
repz
and
jns
in
cmp
xor
pushl
js
jl
cmpsl
repnz
or
ret
addr16
add
inc
jnp
cmpb
fcompl
inc
add
mov
add
cmp
cmp
loopne
imull
stos
pop
and
xor
shlb
push
push
movsl
mov
push
push
sbb
inc
sbb
mov
loop
push
addr16
lcall
enter
js
test
cs
and
mov
sbb
pop
out
or
lahf
or
add
add
ret
jge
add
inc
jmp
js
jne
cmp
mov
push
ss
pop
push
and
popa
xor
cmp
jno
out
dec
lcall
scas
dec
push
jb
mov
pop
addl
test
out
mov
lods
lods
in
mov
dec
notb
mov
les
or
fwait
cmp
into
clc
mov
and
push
jge
add
cmpsl
push
sub
loope
xchg
and
cmp
xor
cmp
loop
push
int3
adc
mov
dec
mov
stos
or
sbb
and
cltd
shrl
jbe
sub
aad
sti
fidivs
xchg
dec
mov
loop
mov
cwtl
arpl
cs
push
stos
sbb
out
shrl
mov
rolb
and
push
xchg
neg
xor
lret
lods
push
jecxz
cmp
popa
sub
dec
or
dec
adc
shl
rorb
sub
out
and
sbb
out
fdiv
push
rorb
out
xchg
ret
sub
adc
cltd
cmpsb
js
addb
pop
cmc
imul
add
push
jbe
jmp
testb
cmp
and
testb
xchg
movsb
imull
dec
push
xchg
lret
adc
push
jp
outsb
or
pop
movsl
movsb
imul
pop
cmc
mov
das
push
adc
cwtl
loope
loopne
nop
icebp
add
in
mov
or
test
rclb
push
call
push
pop
add
sub
sbb
xor
inc
incl
mov
sbb
adc
xchg
fadds
lret
call
popa
pop
pop
push
in
or
pusha
subb
push
pop
jl
sub
and
les
lock
adc
push
push
cli
sbb
out
es
sbb
lret
mov
subl
cli
xor
cmp
pop
push
adc
fwait
mov
mov
movl
call
push
cltd
in
pop
push
jb
ljmp
xor
les
out
fwait
dec
rol
fldcw
sbb
getsec
fildll
jmp
and
jns
jno
mov
loopne
add
test
jecxz
je
hlt
xchg
stos
roll
jp
js
add
loop
jecxz
int
ror
sbb
lds
pop
sbb
sbb
into
inc
cmp
mov
ret
push
lods
inc
psadbw
in
add
popf
add
lods
fsubrp
dec
sub
xchg
gs
outsb
loope
loope
cmpl
insl
ret
test
mov
add
and
call
in
fwait
sub
fistl
xor
mov
dec
adc
dec
sub
cmp
imul
pop
mov
dec
mov
xor
push
divl
aad
and
fwait
mov
pop
push
cli
scas
loopne
push
fldl
mov
cs
push
outsb
lret
dec
mov
cmpl
push
xchg
mov
int3
sbb
or
arpl
adc
dec
cmp
jmp
dec
stc
fbld
dec
pusha
insb
bound
push
call
mov
scas
mov
add
sahf
jnp
cmp
mov
sbb
pushf
xchg
in
out
push
mov
xchg
fsubp
mov
fcoms
aad
insb
incl
xor
pop
and
push
ret
pushw
lods
jmp
call
push
pushf
lea
or
push
shrb
adc
xor
xchg
sbb
xlat
pop
adc
or
stos
bound
sbb
push
mov
pop
popa
nop
cli
push
add
jns
js
jp
rolb
in
sub
lds
packssdw
rol
jp
jne
sbb
mov
aaa
fmul
jns
fstpl
addr16
jle
xchg
cs
sbb
iret
in
xchg
xor
jg
addr16
cmp
testl
xor
clc
xchg
xor
dec
and
scas
mov
jp
and
pusha
inc
orb
pop
mov
xor
mov
xchg
xchg
shlb
dec
sbb
add
add
or
sub
mov
mov
aaa
cmp
xchg
outsl
mov
das
and
mov
add
or
sbb
cmp
pop
in
mov
push
cwtl
and
add
xor
fs
mov
or
lahf
lock
ds
div
fdivl
scas
je
jno
sbb
je
cmpsl
or
cmp
or
lcall
das
shll
in
push
push
add
add
int3
clc
jo
negb
cld
shll
add
dec
lret
jp
adc
push
push
mov
xchg
xlat
xchg
sbb
or
mov
jo
testb
cmpsb
mov
icebp
adc
imul
jecxz
jp
loopne
push
and
lcall
push
movsl
inc
sahf
mov
fnstenv
mov
adc
enter
das
aam
imul
in
loopne
fdivrs
adc
dec
clc
mov
jecxz
mov
xor
out
imull
movsl
enter
xchg
arpl
pop
call
push
cmp
hlt
adc
push
sbb
aaa
mull
mov
outsl
pop
test
pop
sub
cmp
scas
mov
sbb
aad
jbe
subb
mov
pop
mov
pop
jb
push
fisubrl
mov
arpl
rolb
push
jle
sbb
shl
ss
sub
and
push
push
push
pop
pushf
repnz
or
sbb
sub
and
sbb
fcomps
loop
sub
add
pusha
and
jp
cmp
imul
sub
das
das
lods
mov
lret
jp
add
mov
inc
gs
add
cmp
dec
ret
jo
sbb
sbb
sbb
pop
nop
out
push
pusha
lods
mov
fwait
or
sbb
cld
out
rcll
mov
cltd
cmc
pop
mov
test
push
adc
out
cmp
jbe
xorb
jg
pushf
rcll
gs
xchg
cld
int
sbbl
nop
xor
jb
mov
jmp
loopne
sub
sbb
in
sti
and
enter
sbb
and
sub
inc
mov
pop
pop
das
adc
scas
xlat
lahf
hlt
int3
push
xchg
jne
xor
nop
or
mov
int
pop
test
or
lds
mov
lahf
pop
loop
inc
dec
push
outsb
test
add
cmp
loope
jle
pop
jge
orl
or
cmp
out
jb
xchg
ds
in
imul
cmp
xor
sbb
rorl
add
xchg
ds
subl
xchg
sub
imul
xchg
add
aas
mov
sbb
les
inc
adc
jno
adc
xor
adc
fildll
push
push
cmp
je
hlt
inc
stos
cmp
and
fcompl
sbb
fisubl
jo
lcall
faddl
pop
xor
test
enter
pop
or
inc
ret
and
sbb
or
adc
aas
lea
inc
and
xor
cli
or
pop
call
xor
and
call
sbbb
mov
sub
call
or
adcb
cs
iret
jecxz
dec
pusha
test
loope
sbb
data16
int
sbb
rcrb
sbb
cmp
loope
or
adc
ret
hlt
ljmp
sbb
pusha
daa
sbb
jecxz
arpl
aaa
inc
push
pusha
insl
popa
test
pushf
dec
and
push
lahf
scas
mov
imul
xor
rcrb
lds
jbe
add
push
xchg
dec
addr16
cltd
xor
mov
js
or
movsb
je
xor
add
daa
xlat
das
or
rorl
mov
or
fucomi
addr16
pop
push
xorb
or
daa
add
ljmp
push
fsub
scas
pop
jae
sub
aad
fsubl
jo
pop
mov
and
push
pop
push
sbb
loopne
add
movb
es
fadds
xor
rol
rcrb
or
jmp
aad
subb
das
sub
add
push
xchg
lds
jne
lods
and
aas
sbb
add
adc
add
loopne
push
adc
and
orl
push
cmpsl
rcrb
bound
xchg
mov
or
scas
mov
mov
or
int3
push
mov
adc
pop
lea
imul
push
cmp
mov
jbe
call
sbb
pop
ljmp
imul
pop
test
mov
test
or
dec
push
test
aaa
in
add
inc
roll
out
jecxz
mov
adc
dec
call
pusha
or
inc
jge
inc
xchg
iret
xchg
pop
insl
inc
loopne
pop
dec
pop
cwtl
es
mov
dec
jo
jno
mov
push
xor
lods
popa
ja
pop
js
or
popf
pop
xchg
and
mov
mov
dec
aas
adc
mov
mov
loopne
fs
imul
iret
ret
dec
daa
jmp
pop
add
add
sub
das
or
dec
mov
popa
pop
cmp
xchg
xor
cwtl
sbb
add
lret
jl
xor
lret
imul
sub
mov
adc
setae
mov
loope
add
or
call
pushf
sbb
cmp
movsl
or
enter
shrl
mov
mov
adc
sbb
xor
movsb
dec
cmp
gs
push
sbb
outsl
mov
xor
js
push
push
or
test
jl
dec
push
pop
movsl
sbb
sbb
outsl
lahf
dec
ret
jecxz
int3
fbstp
or
mov
rcrb
aam
add
and
les
push
dec
xor
in
lods
xchg
pop
inc
scas
testl
std
inc
or
and
and
icebp
inc
sbb
mov
push
rcrl
push
sbbb
dec
ret
sub
inc
andb
mov
ds
and
xchg
cmpsl
into
js
dec
movsl
inc
pop
dec
imul
xor
xchg
xor
push
or
cld
aaa
test
add
jo
inc
jo
repnz
call
sbb
sub
push
xchg
adc
mov
push
popa
lods
inc
stos
and
lods
inc
dec
mov
fcomps
or
sub
scas
iret
mov
or
push
pop
scas
rcl
push
sub
mov
xor
add
movb
xlat
add
imul
jmp
jp
pop
dec
cmova
je
and
addr16
jno
pop
dec
lock
cmp
inc
bndstx
push
popa
dec
mov
and
repz
pop
daa
cmp
jns
xlat
jl
jg
cltd
outsb
jnp
xor
out
je
ret
mov
shr
iret
xchg
or
xor
xor
rclb
ds
or
jns
xor
outsb
pop
filds
cmc
lods
and
fsubrl
inc
int
loope
clc
pop
or
dec
sbb
imul
mov
sbb
je
pop
xor
stc
add
dec
enter
out
xor
cmovg
and
jecxz
add
je
sub
es
or
hlt
jmp
adc
and
sub
sbb
jle
ja
aam
sbb
mov
push
xchg
nop
jne
es
mov
mov
shrb
popf
test
fcoml
pop
dec
xchg
or
sub
fistps
mov
mov
pop
dec
pop
and
cmpsb
inc
lods
mov
shlb
push
jo
xchg
xor
mov
add
fildll
and
sbb
jle
rolb
in
inc
mov
inc
cs
xor
jle
test
cld
das
or
pop
fdiv
roll
adc
sub
adc
xchg
shlb
daa
sahf
and
mov
mov
inc
push
cmp
aad
sub
mov
and
push
inc
xor
inc
outsb
pop
and
add
mov
shll
cs
inc
jns
push
imul
shlb
adc
pusha
mov
xchg
lods
pop
add
jb
mov
dec
test
and
inc
cmp
xor
or
and
cld
popa
popa
mov
and
rcr
or
push
pop
mov
or
cmp
lods
or
mov
ss
ljmp
adc
and
movsb
fcos
or
repnz
add
and
push
rorb
and
jo
jno
and
out
test
pop
jmp
mov
ret
sbb
cmpl
and
shlb
pop
and
into
pop
or
cmove
popa
xor
adc
adc
xchg
mov
inc
mov
pop
mov
inc
jne
rcrl
ret
push
jo
sbb
mov
adcl
or
dec
jo
add
int
lret
cli
clc
lret
mov
leave
iret
jecxz
push
scas
inc
push
jecxz
add
jge
mov
daa
inc
xchg
lcall
stos
js
adc
inc
sbb
add
xchg
movsl
inc
push
mov
sti
sub
mov
mov
pusha
mov
mov
lcall
jb
add
adc
incb
test
testb
xchg
mov
mov
mov
lret
test
mov
xor
cmp
shlb
sbb
jg
lods
push
imul
cmp
add
or
inc
lds
andb
shll
mov
movsl
add
and
int3
dec
xchg
cmp
test
mov
or
lock
dec
sub
or
sub
push
jo
popa
into
or
jnp
les
pop
mov
mov
push
pop
cld
add
mov
rcrl
add
jo
xchg
sub
loope
shrl
outsl
icebp
pop
sahf
add
lcall
outsb
shl
enter
mov
loopne
push
push
imul
les
push
insb
mov
xchg
mov
ss
aad
dec
dec
cmp
or
xchg
test
sbb
loope
addr16
push
ljmp
fcomps
gs
sub
shlb
push
shrb
orb
push
int
dec
add
push
in
jp
xor
movups
and
jne
lods
sbb
flds
sub
or
mov
loope
in
inc
inc
sub
shll
inc
xchg
rorl
pop
mov
xor
xorl
or
dec
inc
fwait
adc
xchg
das
mov
das
or
pop
dec
lret
test
push
jo
jbe
mov
jmp
sar
or
xchg
mov
arpl
dec
adc
or
mov
add
fnsave
mov
cmpsb
xchg
stos
test
or
cli
sbb
insl
jle
sub
push
inc
popf
aaa
mov
hlt
and
pop
idivb
dec
or
xor
test
popa
jl
inc
add
pop
clc
sub
inc
daa
mov
dec
sbb
and
add
xor
dec
cmp
jo
mov
loopne
mov
pop
les
adc
adc
pusha
mov
pop
nop
lock
cmp
rorb
fiaddl
adc
and
lret
lret
jp
sbb
lret
lret
sub
mov
mov
shl
shrb
inc
rorb
and
sub
movsb
and
push
add
pop
arpl
add
popa
push
lret
inc
aaa
aam
jo
inc
push
mov
nop
testl
cli
cli
xor
imul
rolb
add
ss
int
or
movsb
push
lahf
loope
jne
shrb
data16
arpl
add
and
call
loopne
cmp
call
lds
dec
dec
mov
or
sub
cwtl
and
imul
je
or
cmp
call
xchg
stos
lods
cmp
in
imul
sbb
jnp
out
jmp
pop
cmp
cmp
ret
push
add
outsl
je
stc
dec
dec
inc
mov
lods
add
mov
xchg
orb
scas
xchg
int3
and
aas
ljmp
lret
cmp
stos
arpl
js
pop
sub
xor
adc
mov
xchg
hlt
sub
cmpsl
jp
shrb
sub
insl
int
test
push
into
nop
or
inc
fildl
mov
rorl
mov
sub
xor
mov
inc
jg
cwtl
or
mov
and
jge
push
imul
or
lock
movsb
bound
sbb
jl
pop
add
add
jns
leave
push
mov
in
add
jp
adc
jnp
mov
sahf
sbb
add
add
adc
addr16
iret
sbb
popf
or
jg
lock
xchg
scas
cmpb
ljmp
push
lods
and
daa
and
add
add
add
lods
in
pop
push
and
lcall
add
imul
adc
aaa
ss
js
scas
test
xlat
rclb
add
and
lcall
rclb
sbb
or
movsb
sub
mov
adc
loopne
jecxz
popa
stc
into
adcb
xchg
or
inc
lcall
push
or
ss
js
ret
movsb
ficoml
movsb
xchg
push
pop
jmp
mov
andb
rolb
insb
orl
pop
fisttpl
mov
xchg
fisttpll
cs
and
out
jbe
mov
mov
imul
add
je
iret
adc
lods
sub
cwtl
test
jle
xor
subl
test
ret
xchg
cmp
imul
in
pop
test
push
cmp
mov
fmul
adc
jne
push
cmc
ds
scas
aaa
cltd
inc
aad
rcr
js
addr16
mov
popa
leave
adc
mov
push
imul
lretw
xor
js
rcrb
imul
jo
mov
jo
mov
and
or
shll
ret
jns
shr
arpl
addr16
je
pop
jl
mov
es
cmp
jns
popf
inc
ret
pop
jmp
repz
xor
xorl
add
out
inc
add
add
xor
out
shlb
xlat
jno
jl
mov
fisubrs
aas
imulb
loopne
pop
jp
test
aam
mov
dec
imul
adc
subb
xor
add
loope
and
mov
stos
xlat
addr16
add
cmp
mov
xor
test
dec
scas
gs
test
jae
push
adc
inc
adc
add
fwait
sub
adc
push
leave
out
jp
js
popaw
ja
les
cmp
es
xchg
fs
mov
inc
push
sub
pop
mov
leave
add
push
inc
dec
cmp
xchg
dec
and
iret
pop
rcr
dec
or
sarl
push
push
into
add
and
jle
repnz
addr16
mov
test
or
aaa
loopne
pop
mov
mov
lock
add
pop
inc
mov
xchg
mov
jle
mov
pop
cli
add
xchg
mov
adc
lcall
xor
xchg
and
lcall
rorb
mov
inc
loopne
mov
pusha
or
sub
hlt
cmp
out
dec
and
mov
ds
cmp
mov
lahf
dec
xchg
cmp
inc
pop
push
stos
push
adc
dec
and
push
aaa
iret
or
mov
iret
pop
cmp
mov
or
data16
jmp
adc
mov
jae
xor
lock
mov
mov
sbb
ret
mov
je
xorl
jo
shr
xchg
insl
ret
jae
icebp
lcall
cli
cmp
mov
shrl
pusha
mov
or
adc
dec
adc
mov
pop
loopne,pt
adc
lods
mov
nop
fcmovnu
and
pop
mov
lea
jno
inc
fsubrs
das
adc
sub
xchg
fadd
daa
jne
stos
xchg
adc
jae,pt
sti
push
gs
xchg
fsub
pushf
insl
loop
lret
outsl
adc
cs
sub
dec
inc
lahf
xchg
cmp
or
cmpsb
pushf
lods
push
loop
sbb
fadds
and
test
dec
adc
popa
and
dec
jnp
inc
ja
mov
add
dec
mov
das
test
mov
pop
repnz
sbb
pop
xor
inc
or
into
and
and
xchg
pop
dec
xchg
aam
sbb
add
or
mov
dec
pop
lret
dec
xchg
loopne
pushf
es
fimull
and
sbb
dec
mov
daa
jecxz
cmpsb
mov
shrl
mov
inc
ja
pop
mov
sbb
push
push
hlt
pusha
xchg
in
insl
add
pop
xchg
or
xor
jno
into
lret
and
out
xchg
add
adc
xchg
jge
or
inc
and
inc
and
mov
fsubrs
push
aaa
fidivl
sub
jle
dec
loop
xchg
mov
push
pop
mov
xchg
xor
add
dec
sbb
lods
sbb
cltd
lock
lods
xor
cmp
jmp
dec
sub
and
cmp
dec
daa
or
ror
xor
mov
and
call
adc
sub
addl
xchg
int
lock
sub
daa
jns
dec
pop
sbb
jp
lahf
stos
and
and
aas
mov
lahf
mov
addb
sub
addr16
ror
sub
inc
or
pop
ja
test
movl
int3
dec
push
add
pop
inc
push
rorl
imul
pop
arpl
add
jecxz
test
jno
rorl
inc
cmp
ret
pop
fisttpll
pop
ficoml
rcl
push
dec
mov
sub
add
inc
inc
jecxz
inc
shll
mov
imul
pop
test
iret
lret
mov
mov
or
pop
imul
loope
push
pop
test
xchg
ret
mov
push
inc
xchg
lahf
and
lds
fs
pop
fbld
dec
jno
sahf
push
push
dec
jecxz
xchg
jo
pop
adc
inc
jb
fwait
add
mov
push
pop
inc
fmuls
popa
sbbl
sbb
fldl
faddl
xchg
cmpsl
push
cld
hlt
mov
jnp
stos
lcall
sub
int3
add
mov
xchg
cwtl
sbb
lock
outsl
loopne
sbb
nop
repz
loopne
inc
xor
add
sbb
mov
jo
cmp
iret
jle
test
jp
mov
mulb
add
test
frstor
add
and
jbe
aas
adc
in
mov
jno
push
xchg
clc
loope
popf
add
push
and
and
jle
xchg
icebp
fwait
orl
arpl
push
in
cmp
mov
je
sbb
in
loopne
pop
xor
adc
into
add
ds
rcrb
xor
xchg
cmp
jno
aaa
fisubl
sbb
and
mov
jns
or
orb
sub
and
pusha
hlt
xlat
and
push
xor
ret
hlt
scas
insl
add
scas
mov
cwtl
cld
push
add
xchg
or
daa
stos
inc
out
and
ret
nop
pop
jp
push
cmp
test
or
rcrb
add
pop
push
inc
rorb
test
add
adc
mov
icebp
sub
cmp
xor
sbb
and
xor
and
aaa
hlt
sbb
jno
add
mov
cmc
xchg
xor
mov
leave
push
add
imul
push
pop
mov
and
out
stos
or
mov
ret
xchg
add
xchg
mov
decl
cmp
adc
jbe
pop
or
inc
fistps
sbb
aam
das
xor
shlb
lcall
add
push
xchg
lods
add
inc
inc
and
xchg
add
or
add
jnp
pop
push
mov
aaa
dec
add
adc
push
xchg
dec
pop
push
sarb
adc
push
sbb
aas
add
or
adc
iret
and
jg
lcall
pop
inc
inc
mov
sbb
xor
add
push
inc
and
and
or
repnz
inc
cmpl
data16
sbb
cmp
int
call
sti
lea
or
or
mov
sbb
daa
cmpsb
mov
push
out
int
cmp
jb
or
inc
mov
inc
loopne
fwait
repz
sub
scas
outsl
das
inc
and
ret
dec
cmp
loope
lods
ljmp
mov
test
das
test
mov
movsl
dec
data16
into
and
loopne
aaa
rorl
or
fcoms
push
out
push
fcomps
xchg
cwtl
ret
jae
lods
pusha
and
aam
rolb
stc
test
cmp
jmp
lds
jbe
shrb
push
and
out
insb
adc
stos
dec
add
mov
add
push
pop
cmpsb
add
fisttpl
add
addr16
sub
test
sarl
xchg
lds
ret
loopne
loope
roll
add
and
mov
pop
xlat
movsb
into
stos
sbb
adcb
fs
xor
test
add
cmpl
enter
icebp
dec
add
fs
mov
add
push
rorb
adc
xchg
sbb
arpl
mov
lea
shrl
movsl
xor
add
mov
movsb
pushf
shlb
andl
addb
sbb
loopne
dec
clc
add
nop
inc
xor
mov
ja
ja
iret
xor
js
add
stc
out
insl
outsb
dec
mov
xlat
cmpsb
or
ud2
in
cmp
mov
push
enter
mov
stos
ret
sub
add
cs
pusha
pop
cmp
mov
xchg
adc
pop
xchg
movsl
inc
and
and
pop
mov
aas
add
stc
adc
mov
pop
sub
add
xor
mov
sti
inc
je
lret
or
ret
lret
ja
lds
iret
inc
jne
lods
xlat
sbb
mov
mov
add
mov
shrb
xor
cmp
loopne
cmp
outsl
adc
rclb
or
test
cmp
xchg
test
shrl
mov
mov
out
jmp
aad
push
orb
dec
xchg
outsb
and
sti
add
add
popa
movsl
jg
dec
inc
je
in
iret
in
sub
inc
sub
mov
xchg
mov
in
push
out
add
js
sub
mov
and
push
jmp
sub
mov
pop
add
bound
dec
pop
out
mov
ljmp
dec
pop
mov
xchg
mov
mov
sub
loopne
cmc
cmp
sub
jo
test
rcrl
stos
mov
sbb
add
mov
mov
mov
adc
xor
sbb
jmp
test
js
cmp
dec
in
cmp
mov
fidivrs
out
adc
cmp
cmp
push
sar
or
stos
aas
add
bound
icebp
in
test
aaa
push
call
rorb
xor
add
fwait
pop
adc
push
testl
cmpsl
out
pop
rorb
js
add
adc
stos
or
push
xchg
popa
adc
faddl
and
fwait
mov
push
lods
or
and
mov
mov
movb
sub
test
aam
loop
cmp
cmpsl
or
adc
add
add
ret
lods
jbe
inc
or
push
pushf
sub
sub
or
xor
push
lods
aaa
sub
sub
dec
aaa
lahf
xor
cmp
and
test
dec
sbb
testl
inc
and
or
cmpsl
addr16
loope
adc
ret
add
dec
mov
mov
mov
pusha
imul
add
add
stc
jns
inc
adc
lds
adc
pop
xchg
xchg
cmp
roll
or
out
xchg
adc
add
das
adc
popa
imul
mov
adc
dec
xor
insl
stos
test
xchg
or
add
jecxz
jae
inc
mov
sub
sub
mov
push
xor
rcr
add
dec
into
push
add
lret
pinsrw
cmp
and
insl
cmp
int
lcall
adc
add
xchg
je
push
adc
pop
imul
xchg
xchg
pop
sub
push
pop
jnp
sub
rorl
mov
cs
mov
movsl
jnp
or
fisubs
jg
adc
push
adc
sahf
sub
jno
sub
jne
and
mov
jg
cmp
mov
sub
stos
mov
leave
ljmp
cmpsb
movsl
or
xor
mov
int
pop
cmp
leave
enter
push
cmp
push
adc
div
mov
xor
std
std
jnp
mov
test
jp
fldcw
daa
mov
dec
inc
aaa
leave
dec
out
lods
xor
mov
test
mov
pop
pop
push
test
inc
cmp
dec
cs
sti
or
test
adc
popf
pop
pop
scas
cmp
mov
push
add
push
xchg
shrb
adc
xor
jmp
jne
inc
add
aaa
es
sbb
push
lods
jno
ret
inc
xor
jno
out
lea
mov
or
or
clc
adc
jae
icebp
push
jno
xchg
addr16
rcrb
lods
daa
adc
mov
jmp
fsubrs
nop
in
jp
add
lock
rorl
pop
lahf
adc
add
push
cmp
cli
mov
adc
aad
xadd
mov
cmpsl
xor
push
jg
or
add
in
xor
sub
push
mov
inc
mov
cmc
pusha
das
mov
adc
pop
push
cltd
push
cmp
jl
insl
mov
lods
xor
lods
add
fwait
jge
test
mov
push
add
or
les
hlt
mov
test
cltd
ja
mov
sbb
subb
int
bound
sub
pop
jle
jmp
adc
popa
inc
or
mov
inc
push
inc
mov
nop
inc
and
push
xor
jle
sub
cmpsb
add
ret
add
jnp
lods
inc
push
sbb
add
sub
xlat
jbe
inc
jnp
cwtl
orl
xchg
pop
lock
push
iret
test
in
icebp
rolb
and
les
mov
je
push
ljmp
aas
jne
out
popl
mov
pop
cmpsl
add
repz
push
jbe
adc
xor
sbb
and
xor
jmp
jno
daa
sub
mov
cmp
test
mov
or
arpl
rclb
lods
push
or
aaa
or
add
clc
test
sub
out
pop
inc
mov
push
adc
adc
pushf
test
cmp
scas
cmpsb
pop
cmp
mov
pop
fstl
lret
jo
stos
ret
imul
sbb
inc
pop
loopne
addr16
mov
adc
cmp
inc
sub
cs
add
dec
jno
scas
adc
add
rcr
lock
insl
or
je
popa
adc
loopnew
lods
movsb
int3
xchg
pop
jle
mov
dec
mov
rcll
sub
nop
fidivrl
out
inc
sbb
popf
and
mov
xor
mov
movsb
and
outsb
adc
mov
ret
sbb
jo
lret
push
mov
lock
sarb
ss
pusha
jp
pop
mov
xor
repnz
imul
jae
je
les
shll
ljmp
pusha
mov
rcrl
lret
stc
ds
add
jg
xchg
and
aas
aaa
sub
inc
fs
out
sti
fwait
inc
push
mov
jno
cmp
fcoms
jo
mov
jmp
and
pusha
fs
mov
pop
mov
ret
push
cltd
dec
test
cmp
sub
dec
loopne
pop
cmp
and
cmc
cmpl
fadds
sahf
xor
push
sbb
push
addl
test
xor
cmp
or
lods
pop
xchg
and
andb
pop
ss
sub
fnstsw
sbb
push
mov
mov
insl
push
stc
rcrb
and
cmp
adcl
sbb
cmpsl
iret
cmpsb
xor
sub
add
dec
cmp
xchg
inc
lea
dec
out
in
add
sbbb
aaa
inc
leave
pop
mov
mov
ljmp
mov
pusha
mov
nop
in
jecxz
inc
nop
xchg
loope
pushf
lock
sub
pop
rcrl
xorw
popf
adc
mov
jmp
sub
jb
out
adc
add
add
ret
mov
pusha
mov
lods
lahf
sbb
push
sbb
fstps
fdivs
and
xor
cltd
pop
pop
cmp
pop
xchg
insb
das
inc
dec
stos
xor
xchg
inc
push
scas
lods
jbe
xor
sub
cmp
rorl
scas
push
push
test
inc
inc
icebp
outsb
les
dec
cmp
in
iret
or
mov
js
push
jo
mov
push
sub
inc
stos
mov
rcrl
jecxz
or
pop
cmp
fnstcw
fldcw
ljmp
addr16
lods
mov
repnz
jle
inc
cmp
xchg
iret
clc
jge
icebp
sbb
cmp
adc
and
pop
push
xchg
iret
lcall
rcrb
stos
mov
test
fcoml
jno
inc
dec
add
std
ja
daa
sbbb
test
pusha
add
cmpb
xchg
and
add
adc
add
arpl
dec
xchg
daa
xchg
inc
fadds
andl
mov
jo
inc
pop
popa
sub
add
xchg
out
insl
outsl
mov
addr16
add
je
cs
and
jge
xchg
sbb
in
stos
or
jp
jg
out
cs
aam
sub
out
fdivs
pop
shl
push
sbb
sub
xchg
fincstp
mov
jo
fnstcw
das
push
lret
dec
mov
cmp
sbb
dec
push
push
dec
and
or
xchg
jecxz
repz
jge
sbb
js
daa
or
jecxz
mov
daa
xorb
enter
scas
dec
sbb
cmp
test
shlb
lret
xchg
data16
adc
pop
xchg
add
sbb
cld
test
loope
lahf
mov
push
test
enter
clc
xor
inc
add
xchg
add
xor
sbbl
jge
hlt
add
test
ja
outsl
shll
adc
daa
mull
jbe
xchg
dec
pop
gs
xor
inc
xor
fwait
call
dec
xlat
mov
popf
es
xchg
sub
cmpsl
xor
mov
sti
ja
xchg
xlat
cmpsl
adcl
mul
mov
mov
pop
les
xchg
scas
xchg
mov
push
loope
pop
aaa
cmpsl
out
sub
mov
cmp
pop
and
stc
subb
sub
inc
inc
xor
test
add
insl
push
cmp
sub
cmp
mov
and
rolb
mov
mov
andb
das
mov
and
xchg
cmp
add
jge
testl
sbb
mov
cmp
add
or
iret
mov
xchg
push
sbb
popf
loope
jl
or
mov
xchg
jne
shl
inc
inc
add
out
std
xor
test
cs
push
jb
mov
adc
jo
cmpsb
ret
push
shll
dec
lods
mov
sbb
cmp
xchg
inc
mov
fwait
dec
stos
add
daa
xor
add
aad
xchg
sub
loop
sbb
mov
lods
add
cmc
notl
sub
mov
stos
jo
add
dec
add
loopne
test
lcall
push
mov
sahf
inc
pop
aam
push
and
jbe
mov
sub
cmp
add
lock
jle
mov
mull
and
andl
repz
and
adcl
add
inc
sub
jmp
and
dec
popa
add
add
adc
fistps
aam
push
mov
test
aad
into
mov
call
xor
frstor
jge
pop
and
mov
shll
pop
cmc
or
rcll
andb
sti
add
js
movsb
sub
outsb
out
or
sti
jb
sahf
in
mov
ds
fisubrl
andb
dec
sbb
out
js
add
push
rcl
jmp
call
mov
clc
test
in
pusha
and
cs
xor
or
mov
fcoms
fadds
adc
mov
inc
es
test
push
mov
push
sub
xchg
and
pop
movb
out
sub
data16
and
mov
in
into
push
bound
push
pop
add
pop
test
cwtl
and
jno
cmc
and
pop
or
fdivrl
ret
flds
fisubs
rcrb
aas
adc
movsl
mov
jmp
or
sub
sbb
push
sub
xor
mov
add
mov
ret
cmpsl
ds
scas
arpl
orl
and
fmull
push
push
or
test
inc
push
lret
insl
pusha
jnp
pop
mov
fisttpl
xor
shr
mov
popa
jno
shrb
xchg
sub
xor
adc
dec
aaa
or
sub
loopne
or
inc
mov
inc
sbb
push
lods
daa
inc
fwait
dec
inc
adc
sub
mov
and
lcall
mov
push
push
mov
movsb
adc
adc
push
mov
test
mov
mov
rcrb
lea
jne
sub
sarb
es
inc
or
adc
loope
mov
sbb
and
cs
xlat
push
cmp
mov
sub
pop
mov
sahf
sub
dec
inc
nop
sbb
xchg
jb
aad
cmp
push
mov
arpl
add
imul
daa
test
dec
test
mov
dec
inc
mov
mov
add
push
ds
mov
iret
js
or
aam
inc
out
sbbl
lods
cs
inc
pusha
sbb
dec
add
imul
test
mov
aad
pop
mov
movsl
add
cmp
add
sahf
push
inc
xchg
add
sub
add
inc
push
fildl
aad
lods
fsts
jg
sub
jo
mov
cwtl
push
fs
jmp
jns
insb
add
iret
dec
inc
pop
dec
push
fimuls
in
sub
xor
std
mov
and
add
and
or
inc
mov
rolb
mov
and
ficoms
mov
sbb
jp
sub
pop
push
jmp
fucomi
aad
mov
ds
movsb
lods
and
out
add
lods
jmp
inc
push
mov
jne
mov
jb
jne
or
clc
loop
adc
jne
jbe
sub
cli
dec
sub
dec
xchg
jp
dec
sarb
or
faddp
aaa
je
push
or
ret
int
xlat
sbb
mov
xchg
out
push
or
or
or
repz
xor
sub
fcomps
inc
jle
scas
add
add
adc
fnstsw
inc
subb
adc
inc
rolb
nop
rcll
data16
lahf
mov
call
outsl
movsl
jge
rorb
test
pop
or
cmpl
and
ljmp
and
or
js
out
mov
popa
icebp
icebp
inc
and
inc
subb
inc
cltd
nop
jecxz
jo
in
xchg
dec
adc
imul
test
mov
mov
arpl
xchg
es
sbb
cmp
sarl
mov
inc
fsubs
or
mov
in
neg
nopl
cmp
push
sub
lahf
ja
pop
inc
jae
push
mov
adc
out
sbb
xor
imul
rclb
pop
and
pusha
pop
sbb
pop
pop
jno
cmp
pop
lcall
rorb
sbb
lds
xchg
shlb
xor
daa
cmc
fstl
and
sti
mov
pop
lret
xchg
sbb
enter
add
pop
push
imul
push
outsb
mov
pop
dec
mov
pop
fmulp
mov
inc
ficoms
out
and
push
pop
cmp
loopne
and
daa
add
xchg
and
movsl
test
test
bnd
test
or
lods
cs
or
shll
add
xor
cltd
xor
push
sahf
add
sbb
add
push
xor
or
jbe
sub
xchg
call
sti
pop
rorl
rcl
xor
inc
push
or
push
and
call
jge
push
inc
jp
add
notb
add
js
leave
adc
adc
dec
stos
and
xchg
push
xchg
add
shlb
dec
pop
mov
pop
cmc
jmp
push
and
adc
jmp
les
jo
daa
outsl
push
adc
mov
rcrb
movsb
es
push
pop
loop
add
test
and
and
sti
imul
adc
and
rolb
xchg
rorl
fnstenv
add
inc
shlb
ret
les
xchg
pop
ss
jo
scas
jns
and
outsl
and
popa
pop
cltd
jns
stos
jae
aaa
sahf
jo
dec
inc
jae
mov
sarb
jbe
test
cli
add
or
and
iret
sbb
pop
push
test
inc
cmp
into
or
push
jl
mov
cmp
cmpsl
add
pop
pop
or
adc
jp
mov
pop
ja
ds
add
enter
push
xlat
test
cmp
enter
aad
push
lods
lods
lcall
out
push
ret
out
dec
ja
xor
or
inc
lea
stos
sti
jl
inc
jns
add
dec
add
bound
loope
fstpl
nop
arpl
sub
mov
mov
imul
cmp
sbb
loop
clc
mov
dec
das
in
sbb
push
mov
jo
dec
push
sub
je
dec
orb
out
adc
sbb
push
and
add
sbb
dec
mov
xchg
jmp
cmpsl
sub
repz
add
cmpsl
test
lret
sub
rorb
mov
popf
sub
push
enter
jns
ret
jecxz
dec
fisttps
dec
xchg
adc
mov
push
dec
into
nop
es
xchg
aad
loope
iret
dec
push
mov
icebp
pop
call
movsb
imul
movsb
jns
insb
xor
push
loope
loope
outsl
add
cli
adc
test
add
aam
fiaddl
push
orl
inc
scas
add
add
mov
add
fwait
nop
and
cmp
inc
jae
jmp
sbb
out
and
adc
cltd
xchg
repz
sub
stos
add
pop
sbb
das
mov
push
xor
and
popf
xchg
push
test
cli
icebp
mov
rorb
xchg
inc
leave
xor
and
in
xchg
mov
or
and
ret
adc
rclb
das
bound
mov
push
adc
adc
lret
xchg
jmp
xchg
rorl
jecxz
inc
stos
push
push
adc
les
sbb
sub
and
subl
mov
adc
aad
sub
sub
and
mov
push
ds
daa
pop
pushf
sahf
adc
pusha
mov
add
orb
outsl
mov
add
or
add
jge
ljmp
xchg
lods
gs
jo
pop
xchg
or
push
adc
adcl
dec
push
in
add
pushf
cltd
push
aam
jle
push
mov
xchg
arpl
cmp
cmp
sub
adc
pop
clc
push
pop
ss
js
sbb
mov
sub
outsb
int
mov
push
lahf
movsb
xor
sbb
xchg
xor
mov
mov
in
and
mov
jbe
call
push
cld
pop
jne
lods
or
aas
repz
jo
add
or
and
mov
inc
inc
int3
lret
enter
outsl
out
ss
rorb
xchg
adcb
lret
sbb
fadd
cmp
cs
call
iret
vmovupd
ret
adc
sbb
stc
add
cmp
pop
aad
ja
cmpsb
mov
icebp
dec
jnp
es
mov
lock
sub
mov
push
aas
fs
inc
or
test
loope
shlb
mov
pop
cmpsl
jne
ret
mov
repnz
push
and
or
insb
cmp
icebp
mov
dec
and
xchg
fs
lret
pusha
mov
mov
cmpsl
mov
dec
add
mov
in
repz
out
sbb
cli
or
xchg
push
mov
add
popl
add
mov
je
hlt
frstor
lods
es
pop
popa
cmc
stos
adc
xlat
mov
aam
rcrb
sub
cli
inc
inc
lret
sbb
jno
es
sub
lea
addr16
jb
lea
out
aad
or
aam
and
dec
in
xor
push
cld
popa
cmp
sbb
jnp
loopne
rcll
test
cmpsb
cmp
sub
roll
imul
pop
and
stos
lock
lods
sbb
lock
jge
mov
push
popa
or
jmp
add
mov
fldl
inc
mov
xchg
das
arpl
es
push
ret
add
xchg
push
mov
das
mov
ret
xor
insl
cwtl
jae
jmp
pop
shrb
push
push
cmp
lahf
popa
icebp
push
push
sub
pusha
test
mov
cltd
mov
and
imul
adc
xchg
inc
lds
ja
movb
mov
aas
add
cwtl
jecxz
ja
out
mov
or
mov
clc
pmulhw
hlt
or
loopne
test
sub
icebp
or
xor
js
adc
jp,pt
dec
sub
xchg
orb
inc
iret
mov
dec
mov
stos
imul
push
or
inc
in
mov
fildl
sub
scas
xchg
or
xor
jo
or
jmp
adc
cmp
pop
sbb
xor
add
sbb
pop
and
pusha
inc
add
nop
add
jmp
les
dec
add
hlt
pop
xchg
dec
enter
outsb
mov
pinsrw
or
dec
notl
xorl
jns
ret
lds
mov
cmp
jle
fwait
test
add
mov
movsl
and
imul
and
push
adc
test
das
sbb
lret
lds
mov
in
scas
pop
mov
mov
mov
xchg
ret
lea
inc
outsl
rcrl
mov
mov
andl
and
loope
xchg
mov
push
movsb
psubsb
repnz
jno
in
add
sub
or
leave
cmp
mov
mov
ret
adc
mov
in
aam
lods
ret
jle
sbb
sub
mov
cmp
lods
add
mov
lds
andl
pop
daa
fnstsw
sbb
pop
add
mov
rolb
sub
into
adc
mov
or
ss
xlat
ret
punpckhwd
and
aam
jecxz
nop
xor
es
fcompl
add
inc
sbb
xor
ljmp
ljmp
das
inc
ret
or
ja
add
sbb
sub
dec
cmp
inc
pop
cmp
xchg
sbb
stos
mov
mov
mov
mov
rolb
xchg
mov
cmp
sbb
xor
addl
addr16
mov
xchg
push
sbb
and
dec
pop
fildl
xor
cmp
lret
jae
or
mov
sbb
pop
mov
aad
lea
dec
subb
xchg
imul
mov
cmovg
in
xor
sbb
cmc
add
aaa
add
adc
loopne
xor
add
cmp
test
mov
lret
mov
in
mov
mov
and
outsl
pop
outsl
xchg
push
mov
pop
mov
adc
sub
nop
mov
cmp
loopne
xorl
push
mov
and
les
gs
outsl
lret
jle
adc
or
pop
sbb
cld
insl
inc
rorb
fcmovne
mov
in
fwait
ds
ds
jne
cmpsl
test
sub
ffree
sub
pop
jp
or
or
adc
imul
add
add
sahf
xor
sbb
or
iret
pusha
and
sub
dec
and
mov
rolb
bound
or
push
and
sbb
cltd
sub
pop
push
dec
cwtl
sbb
shlb
addb
push
jnp
jae
test
mov
push
mov
or
fadd
dec
or
pop
lcall
es
pop
pop
inc
orl
jae
jno
mov
pop
fsubrl
or
dec
nop
adc
pop
xlat
test
xchg
xor
rolb
imul
dec
or
or
xchg
pop
dec
stc
add
jae
js
iret
rorb
cmp
mov
jne
loopne
pop
sub
stos
dec
sub
or
fnstenv
cmp
dec
jl
rorl
lea
and
mov
push
adc
cmpsb
negl
leave
pushf
sbbl
mov
xor
or
fs
fldenv
and
movsb
jnp
popa
jns
jmp
inc
das
aaa
jo
add
pop
stos
cmc
sub
dec
inc
inc
mov
insl
insl
dec
dec
aaa
mov
sub
add
dec
pop
rcll
add
xor
pop
gs
or
sbb
sbb
outsl
call
push
outsl
xchg
add
out
dec
scas
and
sbb
loopne
aaa
das
stos
addl
cltd
adcb
mov
and
loope
lock
add
daa
bound
or
loope
in
push
inc
roll
sarb
adc
je
adc
push
mov
aad
push
push
xor
fidivs
add
dec
and
mov
mov
int
cmp
lahf
sub
adc
push
lea
int
inc
add
inc
enter
adc
xor
enter
sub
jmp
pop
dec
mov
sub
and
in
mov
out
push
sub
xor
jmp
fldenv
add
js
cmp
mov
mov
rol
addr16
push
jecxz
dec
std
fs
flds
movsb
lds
or
div
or
out
divl
dec
fldcw
mov
in
push
and
sbb
loop
adc
rcrb
cmp
adc
int
loop
test
lods
and
xchg
xchg
xchg
das
sub
lods
insb
pop
sub
or
mov
pop
mov
and
push
into
mov
lret
pop
adc
mov
add
xchg
push
dec
cmp
jmp
push
jo
test
cwtl
enter
scas
inc
imul
cmp
mov
leave
jbe
int
add
jno
ficoml
adc
sub
sarl
lds
xor
loopne
xor
lods
es
clc
movsb
and
lods
call
jecxz
in
cmp
sbb
in
or
xchg
mov
in
mov
jae
sbb
ret
add
or
adc
adc
or
adcb
test
sub
sahf
dec
loopne
or
push
mov
jp
mov
cmpsl
mov
repnz
xchg
out
and
pop
rolb
xchg
add
loopne
fnstsw
cmp
push
in
mov
xchg
addr16
push
arpl
jo
or
jno
repz
inc
dec
nop
ja
xor
push
in
pusha
mov
shll
and
xor
shlb
or
loope
pop
sub
mov
loopne
xlat
dec
push
aad
js
and
sbb
adc
iret
negl
movsb
je
add
addr16
movsb
adc
popa
lahf
imul
stos
and
lods
iret
call
jle
xor
cmp
and
mov
mov
sbb
addr16
adc
sarb
push
jne
mov
and
sbb
or
sbb
xor
push
scas
or
leave
loopne
rol
iret
xchg
daa
add
mov
add
loope
dec
pop
rorb
insl
out
sbb
push
imul
insb
adc
ja
or
lock
add
pop
lods
mov
shl
iret
cwtl
fstpt
lea
pop
js
movl
and
sub
mov
mov
push
sub
mov
and
sbb
or
push
or
mov
cmp
or
flds
add
aad
adc
dec
cmp
test
adc
rolb
addb
sbb
fdivs
cmp
pop
or
pop
mov
jno
mov
dec
jbe
loop
jecxz
inc
sbb
cmp
inc
cwtl
fcmovu
in
xchg
dec
lods
mov
inc
imul
push
xchg
mov
call
test
add
inc
sbb
fwait
pop
push
or
xor
mov
mov
adc
fiadds
test
js
or
pavgb
sub
rolb
inc
lret
or
push
mov
push
jmp
cmp
pop
mov
jge
jmp
insl
xchg
jno
push
popf
popf
out
mov
fcmovnb
mov
lret
int
or
mov
popw
pop
or
pushf
inc
cmp
sub
aam
sub
and
sahf
das
cmpb
and
mov
xchg
push
je
rclb
or
sub
adc
imul
popa
dec
ja
ficompl
adc
shlb
or
loopne
push
lods
xchg
pop
xchg
sub
rorl
xorl
fisubs
or
add
mov
push
add
xlat
aam
and
jmp
inc
and
ret
pop
xor
add
dec
repnz
out
loopne
xor
adc
cmp
mov
or
xchg
mov
aas
out
add
inc
loop
pop
push
loopne
lret
mov
lods
add
inc
stos
das
lcall
subl
dec
js
xlat
dec
hlt
dec
loop
ja
cmp
pop
iret
push
xor
adc
roll
pop
ljmp
paddb
mov
lods
add
ret
add
or
cmp
imul
pop
or
mov
cmp
xor
adc
sti
inc
push
push
in
mov
jge
jecxz
cmc
imul
popa
in
sti
daa
iret
mov
or
mov
insl
or
dec
adc
das
loope
mov
test
xchg
sbb
mov
ret
mov
sbbl
add
cli
mov
push
inc
adc
push
mov
sub
add
roll
mov
push
or
pop
nop
icebp
push
inc
sbb
icebp
or
ret
pop
dec
sbb
dec
lods
popf
sbb
rcrl
imul
movsl
add
int3
leave
enter
and
sbb
sbb
mov
js
enter
fisubl
je
sub
inc
xorl
add
dec
mov
imul
add
add
mov
push
and
mov
push
arpl
andb
out
jecxz
xor
mov
leave
add
inc
imul
xchg
push
mov
sbbl
mov
xor
popf
push
or
fnstenv
push
es
xor
cmp
sbb
xlat
pop
jge
pop
push
push
sbb
pop
and
fsubrs
popa
or
add
adc
cwtl
mov
inc
imul
mov
lea
and
movsl
mov
pop
xor
pop
mov
add
sbb
jns
xor
bound
adc
sub
mov
add
dec
inc
fisttpll
sahf
js
clc
cmp
xor
and
sbb
pop
cmp
cli
sbb
ret
and
stc
shrl
fsubrl
test
pop
leave
add
lcall
pop
popa
pop
pop
and
rcrl
movb
sub
and
subl
push
push
loop
inc
and
add
xor
bound
dec
inc
movl
add
rolb
iret
mov
cmp
push
mov
lret
jmp
push
inc
jl
icebp
lods
test
and
mov
lods
in
mov
sub
lods
sbbl
cmp
pusha
test
cs
xor
sbb
enter
xchg
inc
and
or
dec
and
mov
scas
cmp
push
jecxz
orb
add
pop
out
lods
dec
sbb
sbb
push
gs
pop
jge
sub
mov
fdivs
imul
sarb
fwait
xchg
adc
pop
ret
das
mov
jne
leave
pop
add
sbbb
sub
lock
movsb
orb
aas
sub
inc
and
mov
popa
stos
fs
js
sbb
xchg
arpl
sbb
mov
sbb
mov
pusha
daa
and
push
xor
pusha
out
ja
mov
push
add
push
pop
js
mov
dec
jbe
pop
jno
mov
ja
push
test
sbb
mov
mov
cwtl
dec
mov
add
gs
int
sub
sahf
movsb
clc
nop
or
test
pop
push
lods
cmp
push
add
fbld
sub
dec
mov
sbb
fwait
js
lock
and
xchg
pop
cmp
mov
adc
or
ret
xor
out
mov
mov
dec
add
pop
push
gs
cld
ret
and
add
sub
mov
adc
cmp
mov
jbe
popa
sub
mov
add
gs
or
mull
daa
and
inc
sub
sbb
add
sub
xor
shll
clc
and
lods
nop
mov
adc
inc
pop
mov
or
inc
mov
inc
fldcw
xchg
es
sbb
add
imul
add
push
and
pop
popa
add
fldt
ret
jmp
int
adc
mov
xchg
cmc
sbb
enter
jae
xchg
inc
and
add
jb
ret
cmpsl
mov
ret
test
mov
inc
add
xchg
dec
adc
dec
cmpl
scas
rclb
cmp
adc
cmpl
mov
icebp
and
add
add
stc
pop
mov
sbb
popa
xor
jmp
mov
and
and
xor
roll
dec
sub
nop
cmpsb
inc
ror
and
or
testl
or
cli
mov
fsubrl
insl
fadds
push
jp
lret
les
mov
inc
push
daa
pusha
push
cmp
jae
xchg
es
xlat
mov
xchg
cmp
xor
pop
shlb
adc
inc
jl
icebp
add
push
dec
sub
test
imul
movsl
lcall
out
sbb
add
cmc
or
adc
inc
or
push
in
arpl
or
inc
mov
xchg
or
cld
sbb
xor
call
inc
mov
shr
jo
pop
jb
in
hlt
mov
sub
jne
cmp
push
push
and
in
adc
xor
dec
adc
dec
pop
sub
fsts
setg
mov
pop
sarb
adc
and
das
add
mov
enter
out
loopne
pop
mov
call
mov
inc
add
movsb
push
adc
inc
xlat
mov
inc
sbb
inc
cmp
cmp
jmp
push
add
std
push
and
sub
popf
out
hlt
push
or
add
std
adc
iret
cmp
lods
and
loopne
sbb
sub
add
std
in
cmp
xor
xor
sub
jle
cmpsb
adc
test
aam
mov
loop
popl
pop
and
or
test
mov
shlb
pop
cmp
mov
jno
loope
into
int3
and
add
cmp
leave
sub
add
aas
daa
daa
add
mov
pop
dec
outsb
adc
roll
jmp
rorb
shll
or
mov
out
jno
or
icebp
out
and
mov
leave
push
ss
mov
add
jge
pop
ja
push
sbb
std
inc
cmp
fisttpll
jg
lods
xchg
push
nop
xchg
ljmp
sbb
and
pushf
or
jecxz
push
pop
add
inc
lret
lret
clc
lods
add
jb
push
or
pop
mov
add
nop
jmp
jno
push
jg
test
jne
imul
and
dec
cmp
jl
push
add
pop
in
xor
cmc
icebp
add
xchg
pop
inc
pop
cs
das
add
int3
filds
push
pop
filds
dec
inc
cmp
push
pop
inc
stc
mov
jl
xor
mov
xor
add
mov
ja
sbb
xchg
cmpsl
xor
fnstenv
dec
dec
mov
scas
mov
sbb
cmp
xchg
mov
aam
sub
inc
lret
sbb
lock
fildl
inc
mov
sti
xchg
xor
fldt
pop
imul
xchg
mov
loope
xchg
mov
xchg
pop
lods
xlat
jle
lock
cmp
out
notl
imul
into
sbb
push
pop
lret
or
shlb
pop
xorb
sbb
sbb
jbe
dec
mov
data16
iret
sbb
iretw
cmpsl
cmp
xchg
add
xchg
xchg
adc
mov
mov
repnz
xchg
inc
mov
rcr
test
inc
push
sub
test
mov
sub
jb
loopne
rolb
sub
aam
cli
or
or
inc
jge
cli
rorl
pop
fstpt
add
sbbb
call
les
popl
sub
push
jle
pop
mov
mov
mov
int3
cmp
call
mov
icebp
mov
push
jnp
inc
sbb
popf
adc
cs
ja
add
addr16
outsb
cltd
ja
pop
inc
pop
inc
xor
shll
dec
outsl
cli
addr16
insb
mov
jb
fsubr
mov
xor
hlt
inc
imul
mov
imul
ja
vfrczsd
int3
adcl
imul
sahf
add
shrl
dec
jg
xchg
out
sub
cli
clc
shrl
jne
lods
push
and
or
mov
mov
adc
repz
xchg
aad
add
adc
shll
sub
ja
and
push
mov
jbe
enter
lahf
insb
mov
fmuls
xor
push
stos
dec
aaa
inc
push
sbb
push
sbb
int
shrb
repz
push
into
mov
mov
addr16
aam
jbe
adc
and
mov
jo
test
flds
fsubrl
xchg
ljmp
packuswb
pop
bt
icebp
and
xchg
or
jnp
ds
mov
movhps
mov
pop
aas
ficoml
adc
shl
movsl
xchg
adc
fildll
mov
ljmp
sub
lods
adc
or
adc
dec
js
scas
sbb
mov
lcall
inc
inc
add
or
decl
and
pop
rorb
imul
cltd
and
jmp
and
xor
loope,pt
mov
repnz
or
movsl
test
out
loop
rcll
mov
or
sub
enter
or
dec
pop
dec
mov
test
pop
adc
ror
shl
mov
push
cmp
testl
sub
xor
inc
jg
lahf
or
test
adc
xchg
adc
or
jns
faddp
test
pop
popf
sub
sbb
cmpsl
push
xor
push
ljmp
add
add
or
loop
sub
fldcw
xchg
gs
ret
sub
sahf
and
inc
jns
dec
jmp
add
inc
call
sti
pusha
test
add
or
addl
les
movsl
jne
xor
rclb
xor
dec
addl
pop
cwtl
push
cmp
loope
inc
jecxz
xchg
xchg
add
inc
xchg
mull
push
mov
rolb
xor
mov
ret
sahf
cs
sub
push
fiadds
or
xchg
adc
orb
add
pop
xchg
ret
pop
nop
add
and
leave
cmp
enter
cmpsl
pop
mov
adc
add
mov
add
fcomip
loop,pn
movsl
xchg
out
cmc
pushf
or
and
dec
aaa
xchg
lahf
loopne
mov
xor
cli
nop
add
shlb
add
pop
cwtl
rol
adc
push
fsubs
sub
mov
pop
mov
and
and
inc
shrb
xchg
jo
xchg
mov
add
pop
lret
imul
jns
icebp
pop
jp
inc
popa
cmp
push
lret
jmp
cmpsb
mov
dec
mov
xchg
or
ja
dec
push
adc
mov
push
stos
xchg
mov
push
ret
scas
xchg
xorb
mov
adc
call
sbb
jecxz
adc
pushl
inc
je
fbld
add
sbb
add
cwtl
lea
mull
or
xor
jecxz
dec
xor
add
xchg
inc
adc
out
and
xor
punpckhdq
cmpsl
cmp
adc
adcl
shlb
jecxz
addb
ret
and
xor
movsb
shlb
enter
rol
cmpsb
outsb
dec
cmp
outsl
push
mov
movl
push
les
bsf
sbb
mov
movsb
inc
inc
imul
cmpsb
add
test
repz
loopne
imul
add
negb
pop
mov
pop
adc
sbb
mov
jg
add
arpl
or
fcom
jp
sbb
adc
mov
xchg
fnstsw
rcrl
xor
adc
jne
mov
inc
je
xchg
push
dec
xchg
dec
clc
jge
adc
pop
pop
xor
loop
xor
or
inc
js
int3
cli
xchg
fcmovu
adc
fildl
jno
adc
xor
les
scas
nop
xchg
push
xchg
adc
outsb
mov
mov
pop
enter
out
stos
cmc
and
ja
sub
in
neg
pop
in
xor
sahf
orb
jb
pop
daa
sub
inc
bound
mov
aad
and
loop
ret
jge
jb
xor
pusha
addl
jecxz
mov
adc
mov
dec
push
gs
dec
sub
push
inc
dec
mov
sbb
mov
pop
pop
jp
mov
push
iret
xchg
mov
mov
mov
icebp
orb
or
add
jno
loopne
cmp
or
inc
xchg
and
jge
xchg
dec
test
jnp
mov
cmp
outsb
movsb
push
push
imul
add
adc
jo
popa
and
jg
nop
mov
inc
lret
fidivrs
cmp
int3
and
xchg
daa
dec
xchg
scas
pusha
rcll
lods
add
mov
add
push
addr16
addl
adc
xchg
adc
push
call
or
sbb
adc
lods
hlt
mov
and
sub
lea
add
xchg
testl
lds
enter
pop
jns
add
pop
rorl
or
outsl
and
jmp
loope
les
leave
dec
outsb
mov
jnp
call
jmp
and
stos
ds
movsb
fildll
and
add
mov
xchg
adc
imul
imul
mov
dec
inc
sbb
xchg
aaa
xchg
xor
add
pop
sbb
pop
cmp
xchg
shr
insb
fstl
mov
gs
xorb
adc
mov
xorb
xchg
jmp
xchg
jnp
divb
sbb
scas
add
dec
cmpsl
scas
in
inc
out
jmp
jecxz
pop
xchg
adc
sbb
xor
adc
xor
and
push
nop
aaa
imul
sbb
rolb
addl
xchg
push
in
loop
movsl
adcl
sbbb
jbe
xchg
addl
add
mov
push
mov
and
sbb
cmp
or
mov
cmpb
adc
and
jo
xchg
push
stos
sbbl
mov
push
inc
jge
lock
xor
push
jmp
push
and
outsl
add
roll
sub
faddl
mov
adc
sbb
push
push
xchg
jge
add
dec
mov
add
lods
test
xchg
or
jmp
lods
lret
xchg
mov
pop
aam
pop
lret
iret
xor
lods
adc
les
incl
cmc
dec
loopne
mov
insl
fidivrs
insb
loop
jecxz
shl
sub
sbb
inc
jmp
fwait
jb
ret
shrl
lcall
cmp
sub
test
and
push
xchg
sub
fldl
out
imul
add
lret
and
sub
add
pusha
jno
fs
mov
cmp
cmpsl
pop
aaa
pop
je
loop
dec
repnz
faddl
xchg
xor
dec
lea
xor
dec
mov
mov
and
test
sbb
xchg
sbb
iret
and
subl
repnz
jno
or
test
arpl
xor
iret
subb
les
adc
adc
loop
aam
mov
and
mov
dec
les
adc
test
andl
leave
addr16
in
js
push
mov
imul
adc
or
or
sbb
and
dec
in
dec
clc
jae
xchg
hlt
xor
aas
std
mov
inc
adc
or
fcomi
cltd
mov
dec
cmp
into
cwtl
pop
cltd
lret
mov
pop
fcmovnu
dec
dec
cltd
jo
iret
cmp
xor
sub
jmp
push
adcl
cmp
and
sbb
cmp
jns
push
sbb
mov
repnz
add
mov
mov
mov
xchg
fmull
jecxz
jmp
sub
js
or
in
push
cmp
mov
je
inc
outsl
mov
roll
data16
dec
cli
cmc
mov
pop
fsubs
idivl
mov
test
xchg
cmpl
cmpsl
ficoml
or
out
test
clc
jl
addr16
xlat
aaa
pop
cmp
fmull
adc
pop
test
test
dec
imul
dec
lcall
adcb
call
cli
push
cmp
icebp
outsl
xchg
popa
xchg
add
inc
add
cmp
rcll
cli
gs
jbe
stos
push
int
cmp
dec
je
and
call
mov
fnsave
sbb
and
xchg
xchg
in
push
lahf
jmp
push
inc
arpl
sar
js
pop
jge
add
pop
addl
sub
push
iret
pushf
pop
xorl
dec
inc
js
push
push
cmc
test
iret
repnz
test
insl
pushf
inc
hlt
popf
rorl
cmc
jbe
call
mov
ss
pop
int
push
clc
jmp
insb
lods
aam
inc
ret
popa
inc
stos
xor
add
push
loope
sub
cwtl
xchg
adc
movsl
out
sbb
add
mov
mov
add
jnp
push
push
repz
add
mov
adc
mov
cmp
insb
jmp
loope
adc
xchg
dec
pop
inc
or
jne
orb
call
cmc
sbb
inc
adc
xchg
xor
popf
cmpsb
or
sarb
mov
rclb
push
sti
push
and
pop
loope
into
xor
mov
pop
fisubl
pop
xchg
adc
push
pop
add
xchg
xor
lret
inc
jmp
add
movsb
add
jecxz
and
fisubl
das
cmpsl
sbb
shlb
std
imul
addl
adcl
add
pop
or
inc
dec
popa
adc
jecxz
jl
shlb
push
and
sbb
rcrb
jecxz
daa
push
mov
mov
loopne
orb
test
mov
jns
sub
mov
mov
dec
inc
test
dec
clc
or
push
rcr
and
xor
mulb
inc
pop
xor
outsb
xchg
in
xchg
and
call
arpl
jne
mov
pusha
cmp
jle
mov
inc
push
cmp
imul
xchg
xchg
or
mov
ret
push
into
push
jno
inc
incl
ljmp
push
adc
jge
fwait
pushf
push
loopne
movsb
popf
add
push
ret
add
xchg
pop
popa
subb
sbb
push
xchg
stos
roll
mov
add
inc
lea
and
pop
sbb
mov
push
adc
dec
test
push
inc
pop
cwtl
jmp
adc
push
loope
add
jge
clc
les
adc
aaa
les
or
sub
filds
xor
dec
test
lea
xchg
int3
jae
jmp
movsb
shr
sar
dec
and
sub
jne
aaa
dec
pop
cmp
aad
ja
mov
jbe
cwtl
movsb
rclb
mov
insb
jg
js
inc
movsb
add
push
inc
mov
jno
and
dec
pop
fisubl
mov
cs
dec
andb
xor
sub
dec
adc
jo
xchg
or
jnp
inc
add
ljmp
pusha
mov
jge
pop
push
sbb
push
xchg
adc
lods
jne
out
shlb
aas
add
insl
jecxz
icebp
inc
jecxz
jle
mov
pusha
out
xor
das
shll
leave
in
or
add
sub
pop
ret
xor
xor
xorl
mov
pusha
jmp
subb
xor
lret
mov
push
xor
aas
jmp
sbb
push
jge,pn
ss
aam
stos
aas
and
rol
iret
mov
inc
ret
stos
packssdw
or
add
loope
movl
cmp
or
xor
and
mov
scas
shrl
testl
sub
or
loopne
ret
jmp
push
rcrl
push
and
push
mov
outsb
xor
sub
xor
jne
insb
cltd
sbb
sbbb
or
mov
inc
cs
add
inc
outsb
inc
dec
mov
push
in
mov
fldl
cwtl
xchg
ljmp
sti
jno
dec
pop
repz
pop
cmp
js
sbb
loopne
or
sbb
xor
int
push
std
sub
aad
xor
ss
dec
jmp
or
sub
mov
or
mov
sub
pop
repz
cmpsl
or
sbb
imul
xor
les
dec
iret
inc
cmp
test
adc
or
outsb
imul
or
xor
pop
xchg
scas
cmpsl
fs
nop
add
xor
adc
movsl
mov
addl
icebp
pop
lea
stos
iret
stc
xchg
roll
sub
adc
jno
jl
daa
and
movsl
jecxz
inc
jns
cs
stos
adc
adc
fdivs
xor
inc
mov
insb
or
and
or
cs
mov
inc
cli
movlps
arpl
mov
adc
cmp
inc
inc
add
ss
inc
mov
xorb
add
push
pusha
sub
scas
loopne
iret
insl
and
or
test
and
lcall
add
push
std
mov
cmp
ret
insl
rolb
xchg
stos
adc
push
push
and
aam
sarb
add
repz
mov
out
cmpsl
sub
xchg
jbe
inc
sbb
or
push
std
and
pop
sbb
xchg
mov
nop
push
or
pop
adc
add
movsl
subb
pop
lods
mov
add
ror
cmpsb
push
or
pop
xchg
mov
inc
cwtl
xchg
adc
lahf
dec
sbb
push
xor
pop
sub
xchg
add
jns
sbb
mov
adc
js
and
in
inc
insl
dec
mov
pop
adc
icebp
outsb
nop
or
mov
xchg
ss
divl
xorl
cwtl
mov
mov
fadd
and
ss
mov
adcb
insl
dec
cmc
adc
dec
pop
mov
fs
pop
mov
dec
mov
iret
pop
and
inc
jbe
dec
in
test
mov
stos
mov
push
repnz
outsl
ss
xchg
sbb
js
daa
nop
jmp
push
into
mov
iret
or
push
rcll
arpl
pop
xchg
subb
fstps
dec
jp
mov
icebp
fisubrs
push
in
jbe
push
xor
sahf
sbb
jae
popf
jbe
js
add
sub
clc
jle
in
sbb
push
sbb
adc
and
movb
ja
aaa
xchg
movsl
inc
and
adc
add
mov
xor
adc
int
jo
rclb
popa
inc
jmp
test
insl
xor
or
fmuls
clc
adc
int3
aaa
pop
xor
fdivs
jbe
cmp
inc
and
inc
xchg
cmpsb
xor
sub
jns
iret
ss
mov
dec
adc
pop
pusha
cmpsl
or
dec
lods
je
test
fmul
cmpsb
enter
push
adc
mov
dec
lock
add
and
xorb
add
inc
aaa
and
in
jmp
into
pop
sub
push
jo
jb
pusha
pusha
push
mov
mov
add
test
xor
ja
or
dec
movsb
pop
movsb
pop
xchg
xor
dec
xor
sbb
adc
xchg
in
push
loopne
inc
push
xchg
shl
andb
xchg
jns
lea
push
sub
ret
inc
or
push
pop
pop
cmp
or
loopne
and
push
fsubs
add
adc
inc
or
adc
popa
pop
pop
lea
and
and
daa
cmpsb
pop
add
loopne
ljmp
pop
and
scas
xor
mov
dec
sbb
xor
roll
movsb
fdivs
cmp
repz
and
sbb
neg
mov
lock
test
clc
xorl
out
lods
imul
out
jnp
aaa
adc
js
repz
rcrb
xchg
out
add
ds
lods
jnp
lods
add
fldt
lcall
add
sub
imul
roll
fisttpll
aas
push
loopne
add
xchg
push
lods
jp
jge
pop
inc
cs
and
imul
mov
add
cld
pop
adc
pushl
cmp
ja
cltd
sub
sub
mov
imul
mov
xor
stos
outsl
add
stos
fbstp
cltd
mov
mov
repz
insb
fmulp
push
xor
fiadds
pop
push
jl
xchg
sub
ss
sbb
cmp
mov
je
or
pop
inc
popa
mov
fucom
mov
sub
inc
push
mov
es
flds
decb
dec
and
xor
or
push
push
in
pop
pop
xchg
inc
mov
add
rolb
lret
mov
push
xor
add
pop
jns
aas
dec
addr16
pop
pusha
sbb
sbb
aam
pop
fsubl
orl
dec
repz
lahf
imul
das
push
outsl
lds
pop
aam
push
mov
pushf
xchg
add
mov
jb
jge
sub
jg
je
xor
cmp
add
xchg
inc
sub
cltd
push
cs
add
stos
fisttpll
sbb
sbb
movsl
cmp
adc
popa
pop
add
and
pop
push
cmp
push
clc
pop
lea
movsl
push
sub
add
dec
shl
or
sub
insb
mov
sbb
dec
sub
movsl
enter
cs
insl
xchg
out
scas
mov
fwait
add
xor
jge
ljmp
mov
stos
ja
ja
dec
add
lea
scas
lock
js
pop
cmp
jecxz
xchg
sbb
ss
and
add
and
mov
add
mov
inc
lock
gs
aad
jne
jmp
das
iret
shl
mov
xor
push
add
lahf
icebp
inc
lahf
and
ss
mov
adcb
pop
rolb
dec
into
pop
lret
jns
outsl
push
dec
pop
fiaddl
aam
mov
pusha
ret
ret
rcl
or
push
pop
rcll
xor
incb
adc
ret
sbbl
add
sahf
sub
frstor
inc
pop
loop
add
repz
jb
add
pop
orb
inc
jmp
jo
push
xchg
jge
push
cwtl
sbb
sub
popa
stos
add
fnsave
add
scas
xchg
ror
sti
dec
fldl
adc
cs
jns
pushf
adc
shl
xchg
movsb
and
jns
mov
daa
sbb
daa
and
stos
and
jb
xchg
sarl
adc
orl
cld
sbb
push
push
js
jb
pop
or
daa
and
sub
xor
xchg
mov
cld
mov
xchg
je
lcall
test
and
fstpt
ret
add
lret
cmp
sub
outsb
push
arpl
shlb
add
rcrl
cltd
sbb
loope
movb
or
xor
sub
inc
mov
xchg
enter
push
adc
lahf
orb
bound
or
mov
loopne
ss
addr16
out
adcl
dec
or
push
popa
ljmp
and
fcmovb
inc
inc
lds
or
mov
scas
mov
mov
daa
sub
test
add
js
inc
inc
mov
leave
jmp
xchg
out
jmp
js
add
lret
pop
inc
push
sub
push
lods
cli
aaa
xchg
outsb
nop
add
mov
mov
les
aas
aad
or
push
fistps
inc
fcomi
out
or
and
imul
add
int
add
xlat
add
xor
or
inc
fs
add
in
inc
dec
filds
cmpsb
sub
and
mov
imul
les
adc
push
sbb
and
scas
inc
inc
add
cmpsb
dec
adc
push
mov
cmp
push
imul
pop
into
insl
add
xor
bound
arpl
outsb
cmp
pop
and
and
outsb
fmuls
sbb
imul
sbb
cltd
out
flds
xchg
std
cmp
push
pop
into
movb
fsubl
jmp
mov
add
inc
xor
test
pop
xchg
or
mov
add
push
mov
mov
inc
scas
into
icebp
add
aaa
jbe
sub
push
gs
icebp
rcr
cmp
adc
pop
lahf
push
lret
test
push
sarb
out
in
push
inc
mov
in
ret
cmp
out
push
jle
mov
lahf
stos
xlat
push
in
push
testl
xchg
mov
clc
pusha
adc
add
push
push
inc
cltd
out
mov
out
das
xchg
in
xchg
out
adcl
dec
adc
mov
mov
popa
lds
sbb
mov
add
mov
pop
inc
out
cs
add
mov
jae
fimuls
loopne
inc
inc
add
cmpl
rolb
ljmp
jnp
ret
inc
inc
add
pop
das
cmp
xor
add
cmpsl
out
fnstenv
popa
int3
aas
add
mov
sbb
pop
or
in
inc
jo
mov
jae
outsl
xchg
push
adc
and
dec
roll
out
push
push
mov
xor
or
add
cmpsl
out
pop
rorb
sbb
movsb
mov
add
mov
in
inc
rcll
rorl
mov
inc
mov
mov
jecxz
push
jo
mov
dec
iret
fs
icebp
arpl
dec
out
dec
sti
sbb
andl
xor
outsl
jno
scas
jge
mov
test
sbb
imul
sub
adc
sub
jg
lcall
push
mov
inc
fmul
stos
xchg
cmc
lcall
sub
mov
cltd
jl
or
lods
xchg
mov
add
in
xchg
jmp
adc
into
sbb
mov
and
lods
mov
mov
sbb
fs
nop
pop
ret
mov
dec
inc
gs
add
jae
faddl
xor
stc
aam
sbb
pop
sbb
cmpsl
sti
jge
fiaddl
mov
push
mov
or
xchg
inc
aam
lret
jbe
ljmp
pop
adc
pop
jmp
into
mov
inc
orb
test
sbb
ret
xor
sti
sbb
mov
adc
adc
fimull
mov
add
movsl
add
test
aad
shl
rorw
xlat
lret
jmp
xor
popa
aad
sub
data16
push
addr16
mov
add
rorl
mov
mov
cmp
das
add
jmp
loope
add
cltd
sub
or
mov
movsb
add
arpl
push
add
sbb
orl
cmp
mov
push
push
jnp
adc
imul
in
mov
dec
dec
mov
jp
jo
jle
jo
out
sbb
sub
mov
xchg
subl
mov
dec
mov
stos
shrl
test
sbb
out
das
xchg
xor
cmp
adc
mov
out
fsubr
fsubl
sub
inc
mov
adc
pusha
jns
dec
not
dec
push
jl
mov
sahf
out
mov
push
test
push
push
clc
icebp
cmp
pop
xchg
or
ficoms
dec
add
push
or
je
ja
jne
adc
xchg
ss
into
test
lock
jmp
inc
enter
into
pop
mov
mov
jge
lds
xchg
push
adc
mov
add
jl
sub
repz
add
call
sahf
cmp
or
repz
into
xchg
ret
jnp
xor
ds
jmp
add
mov
fsubs
sbb
fsub
sbb
in
xor
jmp
ja
cmp
ss
insl
jmp
aaa
sbb
inc
fstpt
pop
sbb
cmp
in
fnsave
imul
cwtl
push
sbb
dec
dec
xlat
and
push
cmp
xor
fucom
outsb
iret
in
push
shlb
push
lret
push
cmp
adc
aas
and
cmc
lcall
ja
and
aaa
adc
cmc
test
out
loope
js
and
dec
xchg
lret
add
cmp
adc
push
pop
fisttpll
test
mov
xor
ret
and
mov
push
dec
or
stc
addr16
xor
gs
outsb
xor
xchg
fsubs
mov
les
xchg
imul
add
lret
mov
int
push
cmp
scas
xchg
stos
dec
psubq
sti
std
lock
jnp
cmpsl
iretw
jl
imul
ret
sarl
jbe
out
cmp
jge
pusha
cmp
std
cmp
sbb
adc
out
adc
ffree
test
xor
xor
scas
arpl
enter
inc
out
or
std
out
imul
mov
loope
std
lcall
into
shr
xchg
or
mov
pop
pop
mov
ss
std
sbb
mov
loope
addb
out
xor
mov
das
fidivl
data16
cmp
mov
aad
dec
mov
daa
popw
dec
sub
inc
lea
enter
pop
frstor
fwait
xchg
cmp
mov
xchg
or
movl
in
push
or
add
mov
pop
pop
sub
pop
pop
aad
arpl
sbb
inc
push
fsubrl
imulb
mov
add
leave
int
rolb
bswap
mov
inc
inc
sbb
ret
mov
repnz
andb
cmp
add
aaa
sub
cmp
sti
and
out
arpl
mov
inc
arpl
ljmp
daa
cmp
adc
sbb
xor
inc
or
jle
enter
lahf
dec
into
ja
lret
push
fnstsw
add
imul
mov
mov
mov
lahf
pop
cmp
ss
ret
stos
cs
cmp
icebp
xor
pop
roll
lret
xchg
push
lods
pop
imul
pop
je
lcall
cmp
inc
stos
pop
push
packssdw
jge
daa
push
cmpsl
pop
push
xchg
mov
mov
lret
sub
scas
mov
add
paddb
and
sbb
and
lahf
fbld
lret
fistl
push
test
jle
add
inc
pop
add
jmp
lret
mov
inc
bound
sbb
scas
in
sbb
fisubrl
and
sub
js
mov
into
mov
sub
test
add
adc
push
das
jb
les
insl
mov
std
lret
pop
adc
into
mov
sbb
test
adc
std
shll
shl
or
mov
jl
adc
loopne
jnp
je
sbb
push
insl
cs
rclb
pushf
mov
mov
mov
push
mov
int3
jno
add
pusha
push
ss
mov
jns
popa
testl
fbld
mov
ss
pop
cmp
add
xor
cmpsl
sub
testl
add
jno
push
sbb
fadds
xchg
mov
inc
pop
jge,pt
lret
sub
cs
push
aaa
lret
cmp
in
fiadds
sub
das
pop
dec
lret
into
sub
push
xchg
push
mov
mov
fbstp
insl
xlat
loop
mov
lret
fidivrs
sbb
pop
mov
dec
or
adc
lods
mov
jb
shlb
jns
adc
int3
outsb
loop
int3
mov
jg
imul
inc
int3
idivb
push
cmp
add
xchg
jno
jae
call
pop
rcrb
mov
out
jbe
call
mov
lea
push
mov
inc
pop
ficoms
mov
into
push
pop
mov
xor
cs
outsb
pop
sbb
pop
push
xor
mov
shrl
out
call
pop
lret
ret
popa
push
cs
cmc
popa
aas
nop
cwtl
icebp
xchg
repnz
sub
xor
pop
push
js
stos
mov
xor
cmpsb
test
data16
xchg
data16
test
sbb
xchg
push
lcall
cs
cmp
adc
inc
popf
or
mov
fidivrl
pop
jo
add
je
pop
xchg
jno
fwait
scas
jle
out
jbe
xchg
loopne
insl
or
imul
dec
rcrl
add
push
sbb
mov
cmp
xchg
out
or
fnsave
mov
xchg
andl
test
pop
cltd
pop
inc
sbb
xchg
jbe
dec
sub
das
jmp
push
hlt
sbb
popf
pop
or
gs
add
mov
into
fsubrs
sbb
mov
mov
add
xchg
mov
push
pusha
lret
mov
sbb
insb
aad
add
inc
imul
xor
mov
test
mov
arpl
sti
mov
mov
ret
adc
sbb
aad
cwtl
je
mov
testl
adc
in
sbb
loop
test
insl
pusha
xchg
pop
sbb
cmpl
xlat
cmpb
icebp
pop
div
lock
add
xchg
stos
hlt
adc
adc
ja
adc
verw
ret
iret
cmp
adc
add
add
add
ficompl
rcll
mov
pop
loop
fs
daa
andl
jp
enter
adc
icebp
cs
shrb
mov
sbb
add
test
jl
lahf
ja
outsb
rolb
aam
imul
icebp
cmp
pop
paddusb
add
sbb
push
add
ljmp
and
sbb
xchg
jns
rcl
xorl
cmp
mov
xchg
je
notl
mov
mov
add
dec
mov
pop
movsb
mov
pop
in
sti
xor
push
mov
ljmp
mov
pop
push
sbb
fisubl
daa
cmpsb
pop
add
call
dec
ret
add
sub
cmp
xor
jnp
insl
nop
dec
shll
mov
xchg
lea
pop
mov
popa
mov
shlb
mov
mov
ret
push
loop
ja
bound
test
mov
mov
xor
shrb
pusha
xor
sbbb
jbe
inc
jge
pop
pop
int
push
test
pop
addr16
jg
push
add
frstor
xchg
cmp
rol
pop
jp
dec
pushl
or
scas
shl
sbb
fwait
xor
jbe
mov
aaa
and
mov
pop
fstl
jae
add
ret
negl
mov
aaa
shrb
mov
into
ret
sbb
lahf
outsl
cmp
jmp
or
jbe
cmpsb
jne
inc
out
xlat
mov
cmp
jl
and
std
sbb
or
inc
xchg
aaa
lock
insb
pusha
addr16
jbe
mov
inc
aad
pop
js
and
outsl
ja
sub
into
cmp
pushf
insb
loopne
stos
fwait
into
push
hlt
push
fldl
or
pop
add
push
lock
sbb
inc
inc
daa
jne
xor
mov
jns
push
inc
divb
push
sbb
out
data16
cmp
or
mov
test
shrl
je
mov
into
mov
rcr
inc
pop
lahf
outsl
inc
inc
mov
cmp
pop
cmp
mov
mov
mov
mov
hlt
ja
out
pop
subb
insb
aaa
loope
xor
lods
jne
mov
popa
popa
mov
ret
add
or
mov
xor
sub
and
add
xor
ret
add
or
push
sub
xchg
push
inc
and
jae
int
mov
or
xchg
ss
jmp
hlt
lret
xor
inc
rcr
cmp
add
orb
cmp
xchg
push
dec
adc
dec
push
test
dec
cltd
loope
imul
mov
xor
cltd
mov
jo
mov
test
sbbl
mov
in
imul
test
sbb
fdivs
pusha
push
push
fwait
and
xchg
mov
inc
push
sbb
shlb
pop
pop
push
lcall
inc
test
jb
ret
add
cs
fldenv
inc
cwtl
push
dec
out
xchg
xchg
or
pop
loopne
and
shll
cmp
and
mov
repz
xchg
add
mov
cmc
mov
xchg
cltd
mov
jecxz
push
mov
test
ret
aaa
loope
adc
dec
pop
push
or
in
sub
mov
mov
jmp
movsl
adc
and
shll
test
rol
pushl
add
mov
mov
or
cmp
jno
pop
inc
lods
rcr
pop
pop
mov
xchg
mov
into
mov
push
jno
mov
lret
call
dec
repnz
into
xchg
pop
jo
ja
je
or
sbb
dec
filds
jne
inc
adc
mov
insl
pop
pushf
divl
jo
push
jno
push
pusha
test
shl
xor
mov
add
sarl
mov
jne
icebp
ja
rclb
sub
insb
jecxz
stos
jo
std
test
add
sub
push
cltd
sub
ror
push
dec
dec
rcrb
and
xor
cmp
lock
add
mov
fsubrs
das
inc
outsl
insl
or
sub
das
mov
mov
scas
xchg
jg
sti
popa
xor
mov
outsl
jg
lea
inc
mov
cmp
addb
xorl
outsb
pop
xorl
outsl
sbb
aam
xlat
fistl
push
test
arpl
xor
out
or
push
fisubrs
test
xor
shlb
fucom
in
jae
std
mov
shll
daa
add
daa
hlt
jecxz
or
or
or
jb
movsl
aas
jle
ret
sub
fnstcw
add
mov
pop
je
pop
insb
adc
sti
lods
push
xchg
cmpsl
pop
mov
cmp
cmp
inc
cwtl
test
ss
faddl
mov
test
cmp
and
in
adcl
cmp
bound
paddusw
test
add
outsb
jge
pop
push
xor
adc
mov
out
mov
fisubl
jge
lock
fstps
add
mov
xor
mov
sbb
xchg
mov
cmpsb
cmpsl
repz
xchg
int
inc
aam
push
mov
daa
xchg
push
mov
push
or
xchg
mov
dec
add
out
stc
mov
movsl
adc
inc
scas
rolb
lahf
push
insb
arpl
sti
rcrl
pop
mov
jbe
lods
and
cmp
outsb
lret
sti
jge
mov
loope
incb
cmp
push
mov
push
add
jo
xor
out
push
movsl
sbb
int
jb
jne
cmp
data16
cmp
jnp
add
inc
loopne
adc
inc
idivb
testl
popa
test
sahf
cmp
sarl
cli
adc
sbb
cmp
cmp
negb
out
jg
js
roll
gs
adc
jp
dec
jl
lea
and
repnz
inc
adc
cmp
mov
and
ja
bound
mov
outsb
insl
cmp
add
pop
sbb
jns
mov
sahf
mov
jecxz
add
daa
dec
les
or
test
mov
adc
bound
dec
jp
push
mov
fwait
cmc
add
add
jae
iret
gs
lcall
mov
and
and
add
lea
jns
mov
sarl
lods
daa
push
cmovs
ret
lods
mov
push
pop
in
rorb
add
movsb
imul
inc
dec
inc
movsl
mov
mov
test
xchg
fimull
inc
fistpl
orl
in
xchg
jmp
lahf
test
and
imul
jge
ret
fsubrl
addr16
cmp
jg
or
shrb
cld
movsb
mov
adc
ljmp
mov
lea
jbe
lds
outsb
icebp
inc
cs
xor
dec
hlt
push
sub
mov
mov
pop
mov
mov
mov
push
out
js
cmp
filds
add
xchg
inc
or
push
jg
insb
adc
cltd
pop
loope
sbb
xor
ljmp
out
or
iret
push
filds
std
xor
sbb
pusha
fwait
cli
jbe
push
and
inc
scas
stos
out
inc
jl
pop
sbb
std
std
outsb
out
cmc
xchg
ljmp
lcall
and
push
faddl
inc
xchg
mov
lods
mov
mov
fadds
xchg
pop
mov
mov
fmull
pop
lods
lret
test
fs
fld
inc
dec
testl
add
xchg
movsl
aaa
jnp
mov
add
adc
mov
pop
aaa
and
push
cmp
xor
pop
andb
ret
je
iret
nop
loope
movsl
aas
dec
pop
pop
add
and
mov
xor
push
popl
lahf
or
dec
sbb
mov
pop
jbe
dec
add
inc
and
ja
sti
fisubl
adc
push
sbb
xlat
std
mov
add
or
scas
imul
jl
add
das
and
mov
push
or
jno
daa
inc
in
mov
push
add
sbb
pop
roll
inc
xchg
jnp
pop
lds
mull
jmp
aas
pop
mov
and
xlat
mov
das
mov
mov
repnz
add
fstl
and
outsb
fimuls
sub
push
ret
push
aaa
sbb
pop
sahf
xchg
insl
push
cltd
aad
add
sbb
mov
mov
or
daa
mov
push
or
stos
mov
pushf
stc
sbb
sbb
sahf
sbb
sub
push
je
sahf
or
nop
outsb
addr16
dec
push
hlt
cmp
sti
sbb
or
dec
jmp
or
dec
or
sbb
dec
dec
dec
or
dec
dec
add
packuswb
in
fxam
mov
dec
inc
or
sub
addr16
mov
push
xchg
push
dec
aaa
push
or
sbb
push
and
xchg
jge
pop
jg
sbbl
leave
pop
sub
or
add
repnz
int
mov
stos
daa
pop
or
jge
in
or
push
insl
add
pop
ja
imull
sbb
add
stos
jl
rorl
sti
push
cmc
adc
je
jae
pmulhw
aas
leave
add
pop
in
jae
push
pop
sub
inc
or
popf
cmp
pop
dec
jg
lcall
punpcklwd
xchg
fs
into
sbb
out
jle
push
add
and
sub
mov
sbb
or
mov
dec
stc
je
fucom
mov
rorl
idivb
popa
jge
and
or
pop
or
cmp
adc
addl
aas
dec
mov
int
jae
cltd
cwtl
inc
lret
sbb
shl
push
in
cmp
jle
ljmp
push
mov
sbb
ds
enter
std
add
movsl
sbb
jecxz
xlat
add
adc
jo
adc
mov
xor
lcall
std
adc
mov
ja
iret
sub
pop
mov
ss
mov
jg
rolb
ljmp
sbb
sub
mov
orl
sub
cmc
stos
add
mov
dec
inc
pop
shrb
or
les
xor
mov
or
shlb
scas
mov
mov
imull
and
sbb
insl
adc
adc
add
push
mov
jnp
pop
sub
outsb
and
test
aad
and
mov
sub
mov
push
and
sbb
or
mov
lock
test
adc
mov
call
xor
xchg
mov
jmp
jns
cwtl
and
inc
ret
xchg
jae
jb
sub
fsubrs
mov
rolb
aam
aam
pop
stos
add
mov
adc
test
pop
xor
sub
sub
mov
iret
lret
std
mov
push
fldt
int3
xchg
ds
pop
imul
outsl
test
imul
repz
mov
vmptrst
js
jo
dec
lock
ret
pop
mov
or
ja
pushf
test
push
ret
sub
adc
cmp
xchg
push
sub
call
mov
test
pop
mov
push
dec
push
hlt
dec
lea
aam
mov
adc
mov
jbe
push
stos
xchg
xor
mov
outsb
lret
mov
mov
xor
sarb
add
mov
mov
xchg
in
and
xchg
jo
xchg
data16
movsl
and
cld
stos
loop
and
mov
inc
pushf
idivl
mov
push
cld
ss
push
pop
roll
repnz
mov
out
mov
aaa
cld
loope
mov
cli
add
jns
mov
mov
and
pop
icebp
aaa
push
pop
and
xchg
or
bound
icebp
pop
push
xlat
in
int
xchg
and
es
or
nop
ja
mov
lock
decb
xor
inc
adc
insb
pop
aaa
aam
je
xlat
sbb
mov
frstor
shlb
inc
mov
or
pushf
inc
xchg
inc
shll
imul
leave
mov
rcl
cwtl
pop
pop
lret
daa
cmp
or
ret
mov
xchg
shl
inc
subb
sti
pop
inc
fsubrs
jge
int3
in
ds
mov
jnp
cmp
mov
push
lret
xor
xchg
adc
mov
inc
jno
mov
arpl
inc
xor
push
jmp
movb
jg
xor
pop
je
sub
mov
adc
cmpsl
mov
sbb
je
push
outsl
scas
aad
sub
outsb
clc
jbe
add
sub
pop
rcrl
test
imul
xchg
pop
push
loope
pop
inc
inc
addr16
lret
xlat
repnz
or
mov
mov
cmp
rcl
ret
adc
in
pusha
inc
ret
add
out
cwtl
mov
add
rclb
add
addr16
fsubrl
and
nop
test
rolb
mov
adc
adc
sub
xor
sub
pop
pop
sbbl
ss
push
sbb
jge
adc
jle
or
add
and
and
mov
add
adc
jecxz
sbb
mov
mov
push
push
cmp
mov
loopne
repz
lods
push
cmp
mov
jecxz
dec
lret
mov
jg
sbb
and
mov
push
push
cmp
or
inc
jo
push
out
ss
xor
pop
sub
cld
or
stos
push
mov
call
ret
faddl
dec
scas
jge
shlb
out
dec
imul
cmp
adc
fs
mov
pop
or
and
jg
lcall
mov
push
fcompl
cwtl
int
add
clc
sub
adc
mov
adc
push
cs
mov
mov
jo
cmp
mov
fsubs
pop
out
sahf
sub
mov
faddl
cmc
add
test
into
inc
push
adc
mov
pop
in
fsubrs
adc
data16
pusha
mov
xchg
push
hlt
jg
dec
push
dec
repz
jmp
cmp
js
shl
sbb
fsubl
mov
scas
push
mov
cmp
imul
inc
xor
imul
sub
imul
repnz
aam
mov
jecxz
fstps
dec
into
pop
rcl
and
sub
je
add
add
lds
test
cli
outsb
pop
mov
jnp
in
test
inc
inc
mov
cmp
addr16
xor
or
loop
cmpl
rol
test
icebp
add
imul
adc
fisttpll
adc
movsl
push
inc
cli
sbb
xchg
push
cs
add
jbe
les
adc
mov
outsb
push
mov
sbb
fistpl
icebp
int3
sub
or
aas
mov
pop
inc
int
mov
sbb
ret
aam
daa
fisubrl
mov
pusha
enter
and
stos
mov
add
inc
call
push
cmp
fstl
mov
pop
lds
push
addb
cli
xchg
mov
fadds
mov
fmul
xor
xchg
jne
or
jbe
popa
jbe
call
jmp
xchg
lock
inc
syscall
mov
jno
xor
rorb
add
andb
mov
dec
and
dec
jb
add
and
adcb
cmpsl
jbe
or
or
in
cmp
inc
arpl
xchg
push
roll
outsw
push
addr16
sub
sarb
mov
add
or
fnstsw
scas
xchg
add
add
aam
jp
loopne
inc
fsubl
sub
negb
mov
scas
xchg
loope
xor
mov
fcomps
divb
scas
insl
addb
push
sbb
or
adc
aam
mov
test
stc
fimuls
add
or
pop
imul
cli
and
icebp
std
mov
loop
dec
cmp
faddp
leave
sub
mov
lock
mov
sbbb
scas
cmpsb
aas
push
ret
cwtl
sbb
cld
cmpsb
mov
pop
bound
into
xchg
push
jo
sub
shll
ds
xlat
cli
mov
mov
jecxz
insb
push
nop
fsubs
sar
shlb
sahf
push
mov
aam
shrb
loopne
fdivr
add
push
test
mov
mov
test
ja
imul
and
in
outsb
sub
xchg
scas
mull
push
or
call
sbb
lock
hlt
je
outsl
inc
sahf
scas
push
js
mov
inc
xor
inc
mov
es
pop
fidivrs
iret
or
inc
mov
and
mov
stc
fsts
cmpsb
icebp
xchg
cmp
rol
pop
pushf
call
in
icebp
inc
rolb
ja
ds
shrb
movsb
addr16
popl
mov
sbb
push
scas
mov
push
cmp
sbb
je
clc
xlat
xchg
cltd
push
movb
push
mov
pop
add
add
aas
pop
jb
mov
in
mov
daa
fisttps
sahf
insb
cmp
stos
stc
sub
mov
dec
adc
or
push
adc
cmp
and
out
dec
dec
push
jle
jo
js
imul
pop
ds
add
loopne
cmpsb
push
pop
pusha
add
inc
outsb
leave
sti
pop
mov
pop
pop
test
mov
mov
ret
mov
in
adc
or
aam
xchg
repnz
sub
xor
lret
insl
cmp
lock
jo
rcr
jne
out
cmp
jmp
sbb
ds
out
or
fstl
xor
add
ret
sub
add
cmp
mov
ds
cli
popf
push
mov
inc
fadd
mov
test
cmp
shlb
pusha
pop
pop
rolb
dec
mov
xchg
int
sbb
in
mov
movsl
jnp
daa
mov
insl
popf
xor
or
das
pop
subb
push
cwtl
stc
je
dec
sarl
sbb
test
pop
cmp
fiaddl
jp
pop
rclb
lcall
andb
in
daa
fsubs
ss
add
pop
and
js
js
hlt
cmp
sub
mov
je
add
push
sbb
hlt
adc
xchg
aam
shrb
hlt
mov
test
add
aas
mov
add
imul
and
lret
fsubrl
lods
jbe
xchg
test
enter
jo
add
dec
push
in
jecxz,pt
test
mov
inc
xlat
sub
addps
push
xchg
sub
add
xor
dec
pop
mov
adc
cmp
dec
xchg
cld
js
mov
loopne
sbb
cmp
dec
aam
subb
popl
ficomps
andb
sahf
mov
sbb
outsb
jle
pop
or
cmp
mov
sarb
pop
dec
jno
jg
arpl
lods
insb
aad
and
hlt
je
rorl
in
mov
and
and
cli
jne
mov
xchg
mov
adc
fwait
cld
scas
push
testb
ret
mov
sub
lods
pop
adc
nop
sub
mov
mov
js
add
jbe
fnstsw
fistpl
push
jp
xor
mov
movsb
fistpl
xchg
jno
inc
loope
xor
das
scas
aam
fsubrl
outsb
rcrl
insl
mov
xchg
ljmp
pop
movsl
movl
loope
push
inc
int
cmp
push
jg
dec
je
mov
mov
loope
mov
pop
js
dec
inc
ja
mov
das
xchg
dec
jecxz
mov
xchg
orb
and
pop
sub
cmp
adc
xchg
mov
adc
repnz
or
adc
adc
insb
outsl
shl
call
data16
dec
ljmp
adc
loopne
cmp
push
push
add
push
push
xchg
lret
ja
push
ret
or
adc
test
jbe
insb
mov
movsb
fildl
push
outsl
mov
and
add
je
fisttpll
fldcw
addb
or
rcll
loope
enter
add
out
xchg
outsl
add
adc
add
andl
lahf
inc
push
xchg
pop
hlt
addb
jae
adc
std
js
pusha
stos
fstpl
outsb
mov
inc
push
outsl
push
aad
mov
into
ds
sbb
and
inc
movsb
adc
or
orb
enter
sub
jle
call
pusha
mov
adc
movsb
dec
popl
nop
inc
pop
addr16
mov
sarl
movsb
dec
ljmp
add
xor
add
inc
and
js
push
add
pop
ret
jl
or
xor
in
add
into
and
pop
stos
insb
loop
mov
push
mov
add
push
sub
or
add
and
outsl
in
dec
xchg
bound
fidivrs
xchg
adc
mov
shl
insl
loopne
popf
dec
add
sub
mov
pop
add
adc
out
imul
jp
aaa
movsb
jle
fldenv
into
mov
fiadds
test
test
test
cmpb
fstl
dec
xor
adc
fists
add
jmp
outsb
jbe
or
inc
cmc
fstpl
xor
cli
mov
inc
sub
push
inc
cmp
mov
sbb
pop
cmp
fsubl
jmp
fstpt
ljmp
scas
xchg
jae
xchg
sbb
rolb
fidivl
cli
frstor
sub
adc
push
mov
pop
int
xchg
push
push
add
lods
push
lock
ja
data16
out
xor
fdivp
mov
test
jnp
into
dec
fistl
mov
or
sub
pop
andl
lret
and
lock
lret
and
mov
pop
bound
gs
in
sub
aaa
jmp
pop
popa
and
cmp
add
leave
push
dec
hlt
xchg
mov
pop
rcll
add
es
add
add
out
adc
lods
js
lods
xchg
or
fisubrs
ljmp
pop
insb
push
jno
jl
jp
jne
sbb
push
idivb
in
pusha
mov
inc
adc
cmp
inc
sbb
xor
dec
inc
mov
shr
sub
aaa
push
ss
clc
push
sbbb
in
push
mov
in
xchg
xchg
inc
insb
sub
aam
clc
fwait
or
xor
insb
sbb
push
cmpsb
ret
push
dec
dec
enter
ud2
cmp
bound
movb
sub
dec
enter
hlt
ljmp
sbb
cmpsb
call
sahf
cltd
push
sub
mov
fmuls
add
push
inc
roll
cmc
loopne
xchg
push
mov
subb
or
jmp
test
sbb
adc
adc
cmp
and
jo
add
cmpsl
inc
or
hlt
jae
pop
add
adc
sbb
incb
mov
cmp
int
mov
adc
push
fwait
mov
mov
js
stos
push
push
pop
jp
insb
inc
fistps
icebp
pop
call
add
jo
adc
fs
adc
inc
stos
push
cli
cmc
push
pop
je
stc
test
xor
rcll
pusha
adc
fwait
dec
cld
jbe
pop
negb
inc
push
test
fdivs
sbb
mov
mov
add
testl
xchg
popa
sub
into
repz
enter
cmc
and
inc
gs
lret
push
shl
lds
lcall
cmp
roll
inc
or
frstors
test
jb
rcl
scas
xchg
test
outsb
es
loop
nop
add
push
sub
sahf
popl
stos
nop
jbe
xchg
scas
push
cwtl
les
outsl
mov
cmpsl
push
dec
mov
add
sbb
fdivrs
imul
scas
popa
mov
int3
out
imul
lea
xchg
sbb
push
movsl
scas
sbb
fsubrl
call
add
or
push
popl
add
jmp
xchg
int
push
cs
cli
fsubrl
stc
js
mov
jmp
dec
roll
enter
aas
and
and
inc
jecxz
fsubrl
lcall
in
inc
loope
jae
jle
sbb
mov
add
hlt
sahf
lcall
sbb
jle
enter
adc
or
addr16
cmp
stos
lods
mov
scas
jge
push
mov
inc
mov
xor
ret
ss
loopne
mov
test
mov
xchg
popf
cltd
jbe
dec
add
rcrb
mov
cwtl
stos
mov
xor
sahf
mov
add
sub
or
mov
ret
shrl
fcomps
mov
notrack
or
ja
repnz
lock
shlb
fdivrl
mov
pop
xchg
es
inc
sub
cmp
mov
mov
rclb
mov
mov
pop
jb
ljmp
in
sbb
test
cmpsb
or
pusha
push
fwait
lock
das
loopne
push
js
xor
mov
mov
or
pop
enter
mov
add
xchg
subl
rclb
xchg
std
jbe
imul
sahf
push
mov
xor
sub
xor
hlt
adc
mov
pop
andb
loopne
in
fistpll
dec
mov
push
jae
in
inc
pop
and
mov
push
or
ss
push
insb
movb
mov
ss
pusha
movsb
stos
int3
pop
cmp
mov
xorl
ja
jne
movsl
test
mov
gs
push
in
outsb
cmc
xor
xor
ret
movsl
sti
out
push
fisttpl
ret
fsts
addr16
mov
out
outsb
test
mov
pop
add
or
push
mov
orb
mov
call
jo
into
xor
pop
fcmovnb
dec
popf
or
pop
cmc
and
sahf
inc
cmc
jnp
clc
fistpl
xchg
imul
sbb
adc
insl
add
fsubrs
into
or
scas
inc
add
loopne
pop
push
scas
xor
push
pop
and
and
jb
pop
fstpl
ss
adc
mov
jl
inc
add
and
push
jp
add
jns
cmp
in
enter
lea
inc
pop
js
imul
ja
pop
push
adc
loopne
lock
mov
mov
inc
outsl
or
xchg
or
insb
scas
pop
mov
dec
test
push
lret
and
test
aad
and
jb
inc
jo
xchg
add
mov
test
mov
jp
dec
aaa
loopne
add
pop
push
pusha
in
xor
push
decb
loop
popf
les
mov
sarb
mov
in
test
push
cmp
inc
je
cmp
lahf
jbe
jl
hlt
sti
push
jp
in
jno
lods
fistps
pop
cmp
insb
fcmove
mov
data16
ljmp
push
fidivs
loopne
adc
cmc
inc
sub
push
repnz
dec
in
adc
pop
mov
fildll
sbbb
mov
jne
popf
dec
cmp
push
cld
lcall
aam
push
adc
pushf
adc
jo
push
cmpsb
pop
rol
jle
ss
insl
mov
sbbb
cmp
adc
lcall
iret
jp
or
addl
jle
sarl
enter
pop
xchg
imul
iret
cmp
sub
adc
cmpsl
ret
or
dec
sbb
add
aas
decb
pshufw
pop
jnp
mov
data16
jnp
imul
test
and
inc
insb
ret
inc
in
inc
rcrl
push
pop
es
ret
movsb
in
roll
loop
mov
pusha
shlb
dec
jl
loope
fcomps
adc
and
dec
push
xor
movl
or
je
test
aam
push
pop
and
lea
adc
movsb
stos
inc
cli
fsts
arpl
dec
cmp
lods
out
aas
inc
sub
and
frstor
add
mov
pushf
add
test
pop
iret
lret
enter
push
inc
xchg
mov
cs
call
out
add
push
fwait
pop
fdivs
xchg
xchg
xor
mov
ret
nop
add
popl
jne
fimuls
lock
pop
or
in
dec
mov
add
push
add
cmp
stos
mov
outsl
inc
enter
incb
idivb
cld
std
xchg
imul
push
sbb
ljmp
daa
es
dec
inc
dec
inc
mov
jp
push
or
push
lret
pop
icebp
mov
loopne
mov
push
fbld
dec
addr16
sub
add
call
divl
xchg
das
insb
lds
inc
or
sub
pop
dec
sub
cmpsb
movsl
movsb
xchg
pop
push
mov
jp
shr
fiadds
push
mov
mov
testb
clc
dec
lock
subb
mov
fnstcw
sbb
enter
lcall
xchg
pop
movsb
out
int
pop
test
add
cld
call
call
jb
lea
daa
mov
idivb
mov
aam
test
outsb
add
faddp
and
ss
sbb
scas
out
sbb
lea
loopne
aam
es
mov
stos
ds
inc
insl
pop
mov
add
and
sbb
inc
popf
xchg
mov
adc
jns
loopne
adc
and
out
clc
jg
hlt
inc
xor
pusha
retw
xchg
data16
popf
pop
fistpll
mov
mov
sub
ror
call
sbb
mov
mov
shl
fdivr
mov
lret
mov
pop
xchg
jbe
ss
mov
aas
mov
push
adc
nop
dec
add
sbb
daa
outsb
sub
sub
mov
add
js
mov
jp
orb
jl
daa
enter
loopne
incb
inc
scas
cmp
daa
push
add
les
ja
mov
push
or
dec
mov
xchg
push
fcmovbe
push
pusha
pop
js
lods
mov
out
sub
add
scas
xchg
mov
mov
or
aad
fdiv
mov
enter
imul
xchg
loop
jmp
cmp
and
push
lock
push
push
and
ja
sub
hlt
push
adc
roll
xchg
cmp
add
push
dec
dec
xchg
sbb
shr
js
jg
sar
inc
test
mov
add
inc
inc
mov
or
push
fisttpl
nop
adc
stos
std
push
mov
test
mov
lahf
dec
rcrl
push
aad
push
ret
sub
sbb
lock
stc
pop
in
int
clc
jp
cmp
mov
enter
shrl
pop
imul
int3
jle
mov
clc
stos
push
jno
mov
pop
pop
jo
cmp
pushf
jle
clc
xchg
mov
aad
mov
inc
xor
mov
repnz
imul
negb
pop
add
jge
inc
lds
jae
add
cmp
push
shrl
inc
push
cmp
cmpsb
mov
and
pop
sbb
pushf
inc
or
xor
push
popa
adc
sbb
ja
add
add
adc
aad
test
adc
dec
stc
mov
cmpsl
xor
insb
push
popa
add
outsb
cwtl
stc
lods
cmpsb
pop
cld
mov
mov
mov
mov
out
rolb
sub
xchg
insb
inc
gs
test
push
subb
in
cmp
int3
mov
and
movsb
or
adc
and
jb
pop
push
rcr
inc
rol
ljmp
sti
or
in
ret
cs
ss
xchg
loopne
int3
add
cmp
push
mov
xor
adc
or
mul
lret
push
fwait
or
inc
push
cld
clc
int3
jne
mov
push
iret
into
mov
ficomps
insl
sub
or
sbb
cmp
js
faddl
add
inc
nop
ret
add
jo
rcl
and
push
or
loop
pop
es
or
shrl
das
jnp
mov
pusha
push
mov
mov
loop
jl
sub
js
inc
and
into
out
pop
xor
sbb
negb
popf
pusha
outsl
clc
or
inc
cmp
test
mov
testb
in
shlb
jmp
adc
fs
xor
mov
and
sub
push
fldcw
fildll
lret
push
push
dec
adc
fstpl
adc
cld
ds
push
add
leave
shrb
fistl
fildll
dec
dec
sahf
enter
lods
cltd
sub
hlt
or
push
inc
arpl
push
lahf
dec
ljmp
pop
sub
sbb
cmp
rcrb
cwtl
test
jno
dec
stos
out
jle
leave
jo
cli
adc
mov
jae
icebp
fisubrs
addr16
subb
inc
aaa
lea
sbb
xorb
loopne
push
call
aaa
or
call
and
or
sbb
in
pop
push
lock
and
and
xlat
test
loope
add
sub
arpl
xchg
imul
enter
inc
mov
xchg
bound
in
sarb
scas
daa
xor
cltd
test
loopne
adcb
movsb
test
pusha
mov
add
push
and
mov
or
and
pushw
jg
mov
sbb
push
jle
enter
push
test
cmp
pop
push
std
xchg
push
mov
stos
or
pushf
aad
jg
jo
jo
popf
fidivs
push
jae
les
lret
and
rcr
mov
mov
test
insb
pop
mov
js
push
stc
aam
inc
pop
int3
push
mov
iret
sbb
orb
cmc
add
in
inc
dec
pop
mov
or
inc
sbb
jbe
out
fsub
fiaddl
cmpsb
mov
mov
dec
mov
lret
jmp
out
push
mov
popa
cwtl
sti
mov
inc
mov
ss
rcr
dec
lock
loopne
pop
mov
xchg
das
jp
out
mov
push
sbb
aaa
std
adc
mov
sbb
mov
movsb
or
pusha
mov
or
cmp
cmpsl
add
mov
push
les
loope
add
jg
icebp
daa
sub
add
xchg
or
mov
rcrb
cmpsl
and
push
hlt
pop
jo
mov
xor
addr16
add
pop
inc
fcmovnb
pop
xchg
and
mov
lods
inc
push
xchg
stc
mov
loop
test
stos
add
mov
cmp
push
test
popf
ljmp
testb
mov
mov
push
pop
jle
push
daa
mov
add
aam
arpl
xor
mov
sub
call
sbb
jge
cli
sub
inc
ja
bnd
push
adc
push
push
adc
aas
sub
faddl
jecxz
sarl
lahf
lret
mov
mov
jo
frstor
into
or
pop
jo
fstpt
cmp
lcall
adc
fimuls
int
pop
popf
mov
push
arpl
fistps
cmpl
push
sahf
dec
rcrb
jg
pop
out
push
insb
adcb
fs
add
jge
cmpsl
inc
in
loop
xlat
hlt
xchg
xchg
data16
enter
cwtl
fwait
adc
mov
add
mov
xchg
sbb
pop
mov
pop
jbe
fsubp
or
in
addr16
or
lahf
jb
js
xor
aam
jl
rclb
std
or
out
or
adc
scas
sbb
ljmp
pop
or
push
pop
les
into
inc
mov
shrb
lock
add
aam
sti
jmp
pop
dec
jno
add
adc
adc
out
out
in
testl
daa
repnz
cmp
mov
fildll
das
xor
aaa
add
sbb
ja
mov
movsl
and
or
dec
daa
xor
arpl
out
ret
push
rorb
daa
repz
xor
or
xor
aas
xor
xor
iret
out
pop
sahf
lret
outsl
xor
inc
mov
aas
inc
pop
push
fsubs
jmp
mov
jo
mov
out
fisttps
dec
cs
jbe
out
sti
adc
and
fxch
adc
daa
xor
cmp
fildl
sub
adc
cmp
cmp
xor
bndstx
or
outsl
and
push
jg
insl
idivl
and
pop
mov
xorl
mov
push
xor
enter
les
ja
outsl
in
and
mov
fwait
stc
jge
rorl
xor
aas
fisttpl
aas
aas
in
jge
femms
cli
sbb
jge
or
jge
jp
mov
nop
dec
out
mov
dec
mov
fildl
ds
fimull
imul
mov
pop
ja
and
mov
push
cltd
jmp
xlat
sub
add
clc
sub
push
arpl
out
jno
divl
xor
and
lahf
xor
call
iret
or
jbe
fucom
xor
cmp
aas
cmp
adc
add
int
jl
cmp
or
fsubrp
repz
pop
xchg
xchg
or
adc
sub
inc
iret
aaa
xor
pop
mov
idivb
and
cmp
and
jae
dec
add
pop
adc
cmp
jge
mov
adc
jmp
mov
lret
jno
pop
les
cmp
jmp
addr16
cmp
scas
imul
sub
data16
mov
stos
or
dec
jmp
mov
iret
inc
fistps
cmp
or
sbb
cmp
jg
mov
cmpsl
cmp
mov
out
outsb
gs
sbb
cmp
nop
or
cmp
sbb
cmp
lea
dec
and
push
scas
sti
mov
sub
int
sti
or
pop
pop
cmp
adc
daa
or
xchg
mov
adc
pop
cmpsl
ja
pop
xlat
sbb
cmp
mov
dec
rcrl
add
or
push
pop
rcll
das
push
stc
mov
jg
dec
or
scas
repnz
and
jae
push
outsl
jecxz
outsl
jbe
imull
xchg
or
outsb
filds
lret
sbb
in
movsb
frstor
jae
xor
bts
mov
pop
idivl
lock
orl
sub
xlat
jne
fwait
or
sub
wrmsr
out
jecxz
sbb
aas
add
or
mov
out
adc
add
pop
cwtl
add
add
add
sarb
cmp
cmpsl
pop
std
mov
xchg
es
inc
pop
filds
lock
add
add
imul
xor
cs
add
fisttps
xchg
fwait
incl
mov
int3
inc
or
add
jmp
and
arpl
jnp
pop
xor
or
hlt
int
int3
xchg
cmp
add
pop
cmpsb
js
add
sub
pop
pop
adc
aas
imul
pop
pop
push
xor
sub
mov
fwait
or
rorl
xlat
push
js
xor
movhps
addr16
pop
divl
lret
sub
sub
cmp
sarb
or
and
lret
and
das
fistps
jo
cmp
push
rorb
cmp
ffree
jae
popf
xor
jnp
test
xchg
jnp
mov
xlat
pop
mov
or
jb
or
cmovne
aad
out
or
inc
push
or
fnstsw
xchg
jne
sahf
or
stos
lret
sbb
movsb
or
or
cmp
or
adc
adc
adc
or
in
pusha
and
ss
cmp
jbe
jmp
js
cli
xchg
inc
mov
mov
xor
add
mov
ss
or
adc
xor
jnp
bound
pop
nop
jbe
cmp
ret
mov
ja
std
dec
daa
dec
or
gs
incl
enter
jno
jo
inc
or
pop
sbb
adc
ja
clc
sti
pop
adc
out
inc
and
pop
or
rcrb
jmp
lea
or
add
xchg
ss
in
out
add
mov
add
sub
daa
add
add
insl
loop
jnp
sub
data16
div
cmp
push
pop
push
jmp
data16
sub
cmpsl
sub
cmpsl
add
enter
das
push
pop
jp
rcrl
and
lret
mov
out
and
out
push
inc
jl
ds
testl
cltd
cli
out
sbb
inc
in
das
jne
rolb
dec
insl
push
mov
xor
lahf
push
loope
mov
je
mov
frstor
or
cli
cmpsb
add
les
mov
or
out
or
or
inc
divb
dec
cmp
mov
test
mov
jnp
cmpb
sbb
or
dec
xorps
into
sbb
mov
push
mov
inc
xchg
stos
or
lret
cwtl
or
in
inc
or
mov
testl
mov
mov
push
cli
dec
ret
notl
in
in
mov
hlt
or
sub
fcomps
add
xchg
push
scas
sbb
inc
ficomps
das
add
test
adc
jbe
mov
call
shll
test
lcall
lahf
adc
popa
inc
fidivs
xor
divl
ds
ja
mov
lock
xchg
adcb
inc
sub
adc
mov
mov
jbe
push
sub
push
ljmp
adc
out
inc
dec
test
adc
popf
cmp
scas
jo
lea
mov
mov
in
adc
sub
sbb
sbb
das
add
sub
jnp
cs
aas
sub
inc
push
xchg
loope
pop
pop
dec
mov
add
inc
imull
or
pusha
add
pop
adc
es
mov
adc
add
push
mulb
mov
lret
loope
push
add
test
mov
push
out
push
xchg
add
mov
sti
xchg
in
movsb
cmp
pop
test
jbe
sub
xorl
xor
int3
push
add
xchg
pop
clc
fsubl
scas
das
adc
cld
inc
xlat
pop
cmp
leave
daa
or
adc
pop
xlat
gs
and
fwait
push
add
jbe
imull
gs
sbb
jnp
cmpsl
cmp
and
movsl
mov
xlat
jnp
out
mov
mov
in
or
aas
rcr
out
pop
notb
pop
cmp
testb
xor
and
jmp
cmpsl
sub
and
movsl
jo
add
aad
ds
jbe
lea
pushf
cmc
xchg
ret
adc
in
je
popa
lret
add
ljmp
mov
cmp
cmc
icebp
outsb
and
mov
adc
ja
or
adc
or
test
xchg
loopne
xorl
and
lret
shl
add
add
fisubrs
push
insl
sub
ror
jno
cmp
cmc
outsl
fisubrl
cs
adc
int
outsb
aaa
add
aad
add
xchg
pusha
mov
loop
gs
lea
rcl
movl
pop
or
adc
adc
adc
mov
inc
push
or
sbb
push
sub
call
mov
and
sub
push
outsl
lds
inc
mov
pop
fisttpl
cmpsl
push
sbb
loope
fsubr
loopne
mov
mov
push
sbb
push
jecxz
data16
mov
xchg
fisubrl
push
lock
sub
ret
in
fiadds
out
out
xchg
daa
fldenv
mov
test
xor
mov
push
sub
add
xor
pop
push
nop
sub
jbe
hlt
or
inc
cmp
push
or
flds
mov
xchg
lahf
jo
adc
outsb
push
mov
dec
je
stc
out
cwtl
inc
daa
test
dec
lods
dec
lds
lea
mov
loope
xchg
aam
mov
loope
insb
inc
xchg
pop
imull
scas
or
sarl
adc
shll
lods
and
and
mov
sbb
jae
mov
and
pop
sub
sub
aas
rcl
into
cmp
ja
lret
sbb
mov
jno
rcl
push
jnp
sbb
shll
mov
fidivs
add
dec
imul
jae
pop
jnp
out
jmp
scas
and
xchg
and
dec
ja
pop
in
mov
daa
push
mov
pop
dec
lods
xor
mov
add
mov
mov
shrb
sbb
add
cmpsl
lahf
or
sub
xor
pop
mov
testb
out
popa
jmp
ror
rcrl
pop
aad
adc
mov
dec
and
jne
and
adc
lods
cmp
jo
sub
dec
lret
jno
shlb
notl
jp
add
fwait
loope
lods
int
out
sub
int
imul
mov
lret
dec
ja
dec
jg
rorb
rcrb
dec
inc
and
mov
pop
jo
jge
pop
iret
mov
or
movsl
arpl
and
imul
mov
xchg
xchg
fdivl
cmpsl
sub
in
das
sub
fnsave
mov
cmp
push
iret
test
mov
mov
bswap
pop
adc
dec
mov
roll
nop
shlb
ror
fmuls
jmp
pop
int
xchg
in
scas
inc
pop
test
push
sbb
push
add
jp
arpl
outsb
testb
sbb
sbb
repz
fnsave
add
sarb
jle
int
sub
fnsave
jns
mov
loope
or
outsl
mov
movsl
pop
das
ret
xchg
inc
inc
sbb
and
in
xchg
in
rcl
ljmp
arpl
out
push
jno
adc
fstp
jge
ja
sbb
rcrb
je
fstl
outsb
rclb
daa
pop
adc
lock
outsl
add
and
push
mov
fwait
loope
push
sbb
or
xor
jge
xor
jb
xor
jp
xor
sbb
ds
pop
dec
adc
ja
push
rol
pop
sbb
xor
and
push
mov
in
insl
adc
test
repz
mov
and
xchg
imul
cltd
repnz
loopne
das
pop
negl
sbb
rcll
adc
inc
mov
push
pop
fadds
and
addr16
adc
jo
adc
xchg
mov
outsl
aas
pop
adc
xor
push
mov
push
lcall
inc
jne
pushf
adc
scas
sbb
in
or
dec
arpl
jbe
mov
pop
pop
repz
jae
and
repz
mov
mull
jno
lods
cmp
and
cmpsb
add
lea
adc
addr16
out
icebp
push
dec
pop
pop
pop
xor
ss
sti
mov
dec
mov
cs
jmp
insl
dec
andl
cmp
test
pop
mov
xchg
push
scas
pop
inc
pop
mov
mov
pop
addr16
jecxz
loope
push
mov
or
addr16
adc
xchg
xchg
adc
push
addr16
jbe
mov
daa
notb
cltd
sbb
sbb
out
and
add
stos
push
rcrb
and
addl
push
jb
add
xor
gs
ss
rorl
dec
xchg
fstp
sbb
popf
pop
xchg
and
or
pop
pop
movsl
or
push
loope
enter
movsl
ja
popa
sub
pop
pop
push
outsl
mov
inc
sti
jbe
fiaddl
xchg
add
dec
mov
aaa
cmpsl
lret
and
add
lods
ss
mov
mov
icebp
jmp
lods
sbb
stos
push
mov
xchg
mov
lea
push
outsl
jne
ljmp
sbb
lock
mov
jnp
push
lods
mov
mov
sbb
adc
sub
fidivl
xchg
jns
negl
imul
cmpxchg
add
jecxz
rcrb
lret
push
sbb
gs
xchg
arpl
fwait
push
inc
or
cmc
mov
sub
call
arpl
into
daa
dec
inc
xor
sbb
sbb
lea
imul
fmull
fsubl
xor
js
inc
mov
mov
mov
ja
rcrb
or
out
dec
out
hlt
es
loopne
gs
adc
ret
shrb
arpl
iret
mov
sbb
ficomps
das
das
arpl
and
add
call
arpl
subl
test
arpl
mov
call
rcrl
aam
adc
pusha
mov
dec
jae
jnp
or
lahf
imul
aam
dec
faddl
inc
pushl
and
scas
aaa
adc
cmp
mov
or
adc
cmp
add
pushf
mov
jp
adc
imul
repz
insl
cmp
pop
aaa
push
test
movsl
or
loop
add
data16
xlat
jecxz
in
gs
or
inc
push
mov
sub
push
fiaddl
and
adc
call
movsb
xchg
insb
pop
xor
arpl
sbb
add
sub
mov
popa
dec
fadds
xlat
das
loope
daa
ffree
int
and
lret
fcoml
testl
aas
jo
jo
add
push
xchg
mov
mov
adc
pusha
scas
push
in
sbb
adc
insb
mov
xchg
pop
cltd
mov
jo
cs
out
sbb
negl
incl
mov
imul
jae
into
fildl
fistps
mov
adc
arpl
xchg
dec
mov
xchg
cli
fsubl
fdiv
je
jnp
pusha
xchg
shll
pop
cmp
rcr
sbb
pusha
inc
mov
xchg
and
jp
push
sbb
fisubrl
scas
and
lahf
pop
arpl
jl
arpl
es
imul
jae
std
addb
pusha
fs
imul
or
dec
mov
ljmp
imul
adc
outsl
fs
int
mov
out
jbe
pop
inc
test
shll
mov
orl
nop
add
push
jne
xchg
loop
mov
add
gs
ret
js,pn
push
repz
cmpsl
xchg
mov
in
sbb
jne
data16
cmp
add
jno
sub
cs
sbb
cmc
das
mov
push
dec
ret
push
dec
pop
xchg
cmp
pop
fistpll
add
pop
fldcw
flds
dec
mov
repz
sbb
jno
lds
sub
cwtl
xchg
outsl
jae
dec
stos
jnp
fidivrs
dec
inc
divl
out
scas
stos
sub
inc
sbbl
sbb
mov
sbb
inc
and
xchg
or
stos
out
xor
aaa
mov
adc
out
fwait
dec
and
stc
inc
and
sub
outsl
ss
das
pop
repz
dec
sti
jne
sub
insl
jno
push
aad
adc
pop
fcoms
xor
loope
sbb
gs
inc
inc
mov
mov
sbbb
aas
fsubs
pop
cmp
or
out
fs
cmp
jge
dec
ret
mov
mov
dec
sub
ficompl
aad
sub
jl
shl
inc
arpl
cmp
je
push
push
pusha
iret
push
and
or
fcoml
and
mov
inc
mov
mov
mov
fcoml
cmp
mov
inc
cmp
insb
push
add
and
ja
idiv
outsb
ffreep
adc
das
das
jg
outsl
mov
sub
sbb
sti
sbb
adc
pop
ss
xor
repz
cmp
sti
or
pop
mov
jbe
push
jmp
das
aas
insb
adc
aaa
jmp
addr16
leave
push
or
jg
push
fisubrs
mov
jg
sub
jmp
xchg
xchg
sub
pop
stos
inc
out
sbb
lock
aam
insb
mov
mov
mov
daa
xchg
xchg
pop
loopne
xor
xor
sub
mov
cmc
pop
or
icebp
xor
or
jae
scas
lret
xchg
roll
add
mov
mov
iret
sbb
add
pop
xchg
or
js
lea
xlat
imul
or
arpl
push
cmp
int
out
js
xchg
mov
sbb
test
sbb
and
inc
mov
das
dec
negl
fldcw
test
test
fstpl
or
xor
dec
andb
scas
cmpsl
loopne
mov
mov
fsts
out
pop
xchg
jp
lods
mov
movsl
xor
xchg
mov
imull
push
pusha
xor
fwait
js
push
sbb
lods
sub
imul
xor
xlat
shlb
mov
out
pop
repz
add
inc
into
lods
popa
sbbl
movsl
fs
cmpb
pusha
add
lcall
imul
mov
stc
push
je,pt
mov
imul
jne
and
fildl
jg
lahf
mov
xchg
fnsave
sbb
mov
jns
imul
mov
inc
ja
mov
or
addr16
mov
popa
aaa
add
jb
sub
fldl
jae
add
sub
das
inc
negl
and
lods
push
stos
and
inc
push
cmp
js
push
push
stos
push
dec
mov
add
insl
dec
jne
sbb
add
push
mov
sub
pop
or
sbb
pop
and
leave
cmp
stos
mov
aad
fdivrl
ficoms
mov
pop
lock
repz
xor
sbb
into
or
cmp
dec
and
sbb
adc
inc
filds
sbb
and
push
test
addr16
inc
mov
mov
outsb
out
mov
xchg
das
dec
sbb
jl
sub
push
sbb
pop
push
xor
icebp
andl
scas
and
mov
sub
adc
mov
add
test
xor
jl
pop
mov
inc
add
daa
or
divl
sahf
movsl
pusha
xor
mov
imul
push
push
cmp
mov
jae
add
dec
sub
xlat
loopne
hlt
sti
add
fnstsw
mov
mov
xchg
in
and
in
pop
cld
orb
sub
sub
pop
mov
sbb
pusha
fwait
and
jmp
outsl
insl
push
mov
jae
jg
shll
jg
out
in
sbb
pop
xor
ja
dec
hlt
add
and
push
pop
dec
imul
jb
pop
scas
jg
xor
out
ja
jecxz
andl
adc
ret
mov
lods
and
scas
mov
or
mov
mov
cmpsl
or
sbb
aad
andb
xor
imul
lea
mov
iret
mov
push
das
dec
scas
or
mov
mov
cmp
or
ficompl
adc
pop
les
lea
rcr
xchg
mov
cmp
testl
rcrl
dec
jae
mov
cmp
mov
inc
sbb
fadd
add
adc
arpl
dec
js
sbb
add
jmp
sbb
sbb
ret
adc
jae
aaa
shrl
aam
push
jecxz
xor
jmp
aas
repz
adc
scas
fmull
iret
jl
cli
jo
xlat
leave
cmp
push
aas
insl
push
and
dec
sahf
rolb
and
sahf
push
jae
and
popa
and
mov
in
inc
mov
sbb
sti
sub
mov
and
inc
test
jae
lret
aaa
or
in
dec
jecxz
push
add
rcl
orb
mov
stc
stos
dec
mov
mov
mov
inc
jns
pop
ja
mov
nop
pop
pop
test
adc
and
and
add
mov
aaa
enter
rol
inc
sbb
pop
adc
shl
lea
adc
in
adc
push
icebp
das
and
add
jmp
in
mov
cmp
sub
fwait
icebp
pop
and
mov
outsb
fcomps
adc
add
inc
mov
xor
cmp
stos
jle
mov
int3
ds
and
js
cs
and
sbb
dec
out
push
pop
pop
jno
mov
daa
icebp
sti
sub
cmpsb
loope
lahf
ret
adc
pop
push
cmp
idivl
xchg
fists
jne
or
pop
outsl
call
das
out
fbstp
insl
insl
inc
sub
xchg
daa
insb
loopne
jae
das
cltd
or
or
inc
adc
loopne
add
jae
aam
in
das
movsl
js
dec
das
add
mov
stos
popa
push
outsl
pop
jno
mov
add
ljmp
rcrb
mov
lcall
jne
jmp
outsl
out
xchg
xor
and
cmp
mov
repz
aaa
sti
das
jge
ret
mov
xor
mov
fstpt
arpl
into
xchg
jp
pop
jg
and
cs
cli
mov
cs
lret
xlat
sub
pop
popf
in
cs
sbb
add
pop
fcmovnb
jne
imul
popf
add
or
ds
sbb
sbb
aam
call
orl
aaa
in
push
mov
pop
stos
adc
xchg
lods
shlb
mov
arpl
mov
adc
scas
xchg
jne
arpl
pop
scas
out
insl
inc
sub
and
jle
xorl
clc
mov
aas
mov
adc
xor
mov
cmp
test
xchg
aaa
sub
and
jle
fsubl
pop
ret
jnp
add
jg
jne
fnsave
test
mov
lea
std
arpl
jecxz
jle
test
movsb
cmpsl
or
or
jg
inc
mov
pop
jge
adc
les
xchg
mov
scas
mov
push
or
bound
xor
inc
mov
cmp
and
or
cld
jno
add
jmp
jo
push
sbb
pop
test
sbb
dec
pusha
ret
xor
jnp
sub
out
les
sbb
cmpsl
negl
cmp
mov
add
loop
insl
and
sbb
jne
xlat
sub
jp
loopne
or
mov
push
int
fs
xor
and
cwtl
outsl
outsl
jg
cmp
dec
inc
pop
shll
dec
cmp
and
inc
adc
xor
or
cmp
cmpsb
das
and
xchg
mov
and
sub
jo
mov
loopne
inc
cmp
mov
popa
mov
pop
sbb
mov
sub
cmp
movsl
cmpsb
add
xor
scas
sbb
roll
or
jne
xchg
add
dec
jns
xchg
mov
sub
mov
scas
jnp
mov
inc
dec
sbb
addb
fs
std
xchg
jae
jge
mov
ljmp
insb
add
or
push
or
jp
sbb
push
shll
into
inc
push
jg
or
pop
outsb
arpl
pop
aaa
inc
and
mov
mov
aas
ja
jmp
hlt
test
xcrypt-ofb
cmpsl
sub
lods
pop
mov
jo
jecxz
adc
call
mov
sbb
jns
inc
movlps
lahf
call
popf
rclb
adc
sub
jnp
sub
and
out
pop
sarb
dec
add
or
add
repz
cmp
stos
sub
data16
jg
es
or
pop
adc
and
jge
sub
std
in
arpl
lret
push
test
jns
stc
fwait
mov
ja
inc
nop
clc
add
xchg
cmpsl
pop
sub
lock
mov
sub
adc
scas
je
leave
sti
sub
fsts
xorl
fbstp
rcrl
fwait
jge
arpl
icebp
in
xchg
add
cwtl
lea
jns
push
imul
xor
frstor
mov
js
add
pop
outsl
inc
push
das
sub
jns
sub
mov
popa
test
adc
inc
adc
adc
jmp
xchg
aam
pusha
jns
inc
gs
sarb
pop
adc
pop
push
pop
jg
jp
ja
dec
movsb
fs
push
pop
lret
mov
mov
dec
pop
or
add
add
or
sbb
cmp
pop
lahf
sub
rclb
lods
sub
dec
jecxz
fdivl
push
fisttpll
lock
mov
xchg
jns
scas
inc
adcl
outsl
or
dec
add
sub
out
xchg
xor
inc
pop
addr16
sbb
incl
jnp
lea
jne
adc
in
cmpsl
xchg
roll
mov
test
jmp
sub
popa
sub
sub
cmp
repnz
xor
in
and
test
mov
addr16
cmp
adc
mov
pop
pop
sub
mov
dec
inc
add
mov
lea
dec
push
ja
inc
outsb
cmp
mov
popl
ja
lea
popa
xchg
sub
adc
cmc
cmp
sbb
fwait
daa
dec
jecxz
test
fistpl
inc
fcoms
daa
xchg
fcoml
out
jg
dec
sbb
gs
lods
ret
xlat
xlat
cmp
iret
ss
stos
push
jb
outsb
mov
and
scas
and
cmp
pop
and
cmovge
jg
dec
outsb
or
inc
jne
sti
cmp
adc
gs
aam
or
dec
ja
dec
jo
push
gs
inc
ja
rclb
mov
lock
loopne
mov
lds
sub
stos
ss
sub
dec
mov
pop
dec
xor
gs
mov
or
add
addr16
ja
pop
fnstenv
inc
or
push
lods
add
fstl
jbe
sub
or
jge
sbb
fcmove
push
aaa
cmp
das
daa
pop
push
or
jl
mov
popa
adc
push
inc
inc
aaa
test
sbb
and
xchg
sub
lds
jae
xchg
ret
popf
mov
aaa
mov
or
inc
pop
or
ja
outsl
or
daa
add
xchg
mov
push
arpl
add
mov
mov
adc
sbb
jo
xchg
dec
sti
mov
cmp
or
add
outsl
or
inc
jbe
cmp
in
repnz
push
pop
jne
and
subl
add
mov
dec
cmp
dec
mov
or
sbb
or
dec
je
std
xchg
xor
repz
pop
aaa
add
je
jne
xchg
xor
inc
dec
push
in
in
lock
sub
mov
outsl
or
aaa
push
add
adc
push
push
mov
mov
sbb
pop
or
pop
adc
cmp
mov
mov
push
mov
jmp
add
or
gs
aas
data16
insb
out
pop
cmp
cmp
daa
xlat
or
shrl
cmc
pop
sbb
in
outsb
mov
lahf
or
add
fistpll
inc
or
test
sbb
fstl
adc
dec
dec
cmpsb
xchg
mov
out
shrb
sbbl
into
enter
push
and
mov
rorl
xchg
rol
or
imul
push
popf
inc
aaa
inc
cmp
stos
xlat
mov
and
aas
jle
sub
jmp
mov
es
pop
sbb
pop
push
fs
inc
adc
ja
fisubrl
pushf
inc
push
subb
and
and
cmp
cs
inc
fdivl
dec
stos
inc
pop
inc
imul
aaa
cmp
das
push
mov
and
inc
inc
inc
addb
add
mov
inc
add
inc
aam
push
lock
pop
xor
push
push
push
dec
inc
outsl
lahf
push
jbe
mov
inc
fsubrl
in
fidivrs
dec
inc
fs
push
ja
inc
push
js
push
fisubl
jb
inc
mov
adc
push
jo
out
rcrb
mov
inc
push
pusha
insl
jnp
xor
dec
inc
mov
or
pop
jle
dec
push
stos
je
inc
pop
cmp
mov
dec
dec
pushf
push
push
jbe
test
xchg
movsb
cmpsb
and
push
mov
scas
dec
pusha
gs
jae
jo
rcr
push
adc
dec
push
jns
enter
pusha
push
outsl
xchg
cmp
in
and
dec
fstpt
mov
push
push
dec
inc
push
inc
jne
imul
in
addl
dec
inc
into
adc
nop
clc
pop
fs
dec
lock
cmpsb
movsl
xchg
imul
jbe
or
jns
jae
cmpsb
dec
cmp
pop
inc
xor
pop
add
xchg
cli
and
dec
lods
lahf
scas
vandnpd
xchg
push
pop
gs
daa
inc
rol
fsubl
fs
adc
mov
add
jbe
xor
jae
fdivl
pop
ja
data16
imul
and
je
push
cmpb
inc
mov
lods
lds
push
inc
outsl
jae
lods
mov
push
xlat
inc
and
or
jno
inc
sbb
adc
clc
loope
push
push
push
jno
je
push
pop
or
jne
scas
mov
add
xchg
adc
mov
arpl
sub
je
xchg
mov
cmpsb
push
mov
xchg
lods
xchg
add
pop
cmpsl
xchg
insb
bound
aaa
jp
push
add
inc
dec
dec
mov
pop
lds
lcall
xor
es
push
lock
sbb
or
lock
push
push
adc
jnp
lods
stos
test
movsb
ss
es
out
push
ljmp
aam
mov
push
push
sub
jp
mov
mov
xor
add
add
ja
adc
dec
pop
shl
lahf
jp
xor
shrl
sbb
inc
incl
repz
jo
leave
clc
mov
pushaw
or
jo
pushf
aaa
and
push
pop
and
int
mov
ljmp
ret
ret
jecxz
jne
mov
mov
pop
stc
sub
dec
data16
jno
inc
inc
mulb
pushf
inc
cld
sti
insb
shrl
inc
es
cli
sbb
nop
ljmp
test
pop
lret
pop
add
ss
pop
stc
insb
xor
jne
dec
test
xor
pop
nop
push
push
inc
cmp
dec
ja
mov
jp
pop
and
fdivs
lret
imul
lock
iret
add
popa
fdivrl
xorb
xchg
fcmovnbe
sarl
push
jne
push
xchg
dec
ret
add
cmpl
jae
cmp
js
repz
xor
data16
sub
and
sbb
sbb
test
push
mov
js
adc
addr16
push
and
js
jae
cmp
mov
push
or
add
add
mov
lret
adc
pop
shl
mov
data16
jg
or
and
inc
out
jno
cmp
jns
loopne
in
loopne
jnp
push
xor
cmpsb
orb
in
fsubr
push
lock
addr16
test
jno
fs
out
dec
and
pusha
ja
dec
sub
push
in
mov
or
and
loopne
fisubrs
and
js
pop
pop
fbstp
adcb
addb
ss
mov
jecxz
jo
ss
xor
repnz
xor
xor
dec
data16
cld
jg
imul
fiaddl
dec
repnz
notl
stc
inc
add
mov
mov
in
rorb
shr
out
xor
shr
out
testb
adc
loope
add
lret
inc
and
pusha
cmc
sbb
mov
or
mov
lds
or
clc
mov
clc
mov
ret
add
scas
movsl
jno
in
ret
sar
cmp
sub
dec
jae
mov
mov
push
fnstcw
mov
aad
out
sarb
push
shrl
dec
fcomps
fcompl
in
hlt
inc
loop
add
adc
inc
ja
cmp
jae
add
jnp
mov
js
shlb
filds
loope
mov
add
push
add
fdivs
fcomip
movl
pop
divb
fldenv
and
push
lock
dec
mov
adc
insb
test
cmp
rol
sub
int
jo
icebp
mov
and
or
jg
jge
fimull
imul
sbb
and
ss
inc
cmpsl
lock
push
ja
inc
add
lods
arpl
in
or
or
jmp
mov
adc
jbe
fsubl
sbb
or
or
or
add
je
imul
adc
mov
push
adc
call
out
jg
call
mov
fstps
je
outsb
in
cwtl
js
pop
mov
jo
fstpl
jge
cmp
repz
mov
or
mulb
mov
and
push
divl
pop
xor
pop
mov
repz
addb
in
pop
adc
shrl
jl
add
incl
pusha
sub
clc
or
in
stc
jmp
xorb
sbb
push
push
imul
add
addb
or
addr16
adc
in
adc
stc
and
jnp
and
mov
std
sub
add
cmc
shl
les
push
stos
or
out
arpl
add
bound
rcl
and
jmp
in
jecxz
add
data16
sti
js
int
daa
sbb
push
dec
addr16
outsl
mov
cmp
push
lds
insb
cli
lods
mov
loopne
adcl
fadds
fwait
mov
add
jnp
jne
add
add
stc
xchg
xchg
arpl
jae
popa
push
mov
jae
cld
lcall
push
push
pop
js
inc
pop
pop
test
cltd
jno
loopne
add
and
xchg
push
jnp
sub
adc
rcrb
test
nop
add
push
popf
js
dec
or
adc
test
sahf
cs
lahf
test
inc
andl
movsl
sub
push
rolb
push
loopne
mov
jne
mov
js
imul
pusha
jb
or
pusha
and
lds
pusha
adc
inc
mov
jp
mov
jo
rorl
rcr
in
mov
test
out
mov
test
in
xchg
push
and
and
imul
push
in
in
pop
je
fwait
xchg
mov
mov
out
push
ret
xorb
popf
push
adc
push
add
sti
jae
add
mov
je
cwtl
push
xchg
push
mov
shll
pusha
out
neg
xchg
js
dec
xchg
mov
xchg
imul
push
mov
nop
push
jecxz
jg
mov
pusha
adc
outsb
sub
jbe
push
push
cmp
gs
push
test
push
adc
add
ss
mov
xchg
add
push
mov
cmp
or
mov
fs
outsl
push
sbb
test
rcr
jne
mov
arpl
xlat
aam
push
fwait
loope
xlat
repnz
add
or
in
sarb
dec
scas
subb
js
cmp
ds
push
pop
sbb
lret
enter
test
arpl
add
out
adc
outsl
push
push
fldcw
or
xor
js
ljmp
or
fst
add
test
stos
repz
jp
daa
mov
jno
add
div
insl
xor
add
push
dec
mov
cmc
fmul
jp
xlat
add
js
jmp
pop
sbb
es
push
addr16
mov
fidivl
adcl
or
les
adc
push
dec
test
mov
adc
adc
mov
dec
imul
jbe
adc
popa
addl
and
shrl
outsb
jne
mov
add
inc
stos
xchg
ds
out
xchg
inc
fistps
pushf
xchg
xchg
xchg
jg
pop
pop
sti
dec
andl
inc
inc
inc
or
mov
xchg
imul
repnz
dec
xchg
popa
out
arpl
cmp
mov
dec
fcmovnu
add
adc
pop
es
data16
mov
adc
fdivrl
or
sbb
xchg
add
push
scas
pop
cmp
daa
aam
lock
test
sub
stos
pop
cwtl
sbb
je
mov
lods
cmc
ret
mov
outsb
dec
jl
mov
in
and
xor
jne
sbb
mov
add
lahf
jno
repz
outsl
ja
adc
xchg
mov
jo
xor
or
add
cmp
lods
or
adc
add
cmpsl
vphaddbw
xor
or
mov
ds
movsl
sbb
dec
pop
mov
outsl
mov
ja
sbb
add
outsb
mov
lods
inc
or
in
sub
cmp
jmp
inc
lods
out
fwait
lods
sbb
pop
lds
int
in
inc
adc
psubusw
jbe
lods
loope
mov
or
and
sbb
sbb
pop
add
add
mov
stc
dec
push
int3
fdivs
adc
cmp
movsl
je
xchg
push
sbb
data16
cli
and
or
mov
dec
fndisi(8087
xor
cmp
jg
xor
and
jo
cmp
push
pop
mov
arpl
ljmp
sar
sbb
inc
inc
xchg
xor
xchg
cld
inc
mov
or
iret
movsl
xor
cltd
daa
loop
pop
mov
jnp
push
js
inc
js
dec
add
jae
gs
sets
mov
or
andl
mov
dec
adc
mov
adc
int
rcl
push
andl
add
insl
add
inc
scas
adc
pop
dec
daa
and
aad
test
mov
xor
sarl
outsl
pop
leave
fadds
push
jno
mov
shrb
lods
pop
push
aaa
test
lds
popa
jno
lods
cmp
jp
add
pop
push
inc
loop
and
jb
aad
add
lret
sbb
stos
cltd
loope
mov
movsl
adc
imul
pmullw
sahf
shrb
popf
dec
test
fisttpll
addl
outsl
int
add
xlat
mov
adc
and
cltd
push
out
xor
add
add
pushf
fnsave
rcr
dec
cmp
add
or
je
pop
adc
dec
or
ret
jge
adc
and
inc
inc
dec
push
pop
loop
inc
test
clc
sbb
xorb
ret
sbb
ljmp
in
outsb
in
ret
xchg
xor
pop
mov
sub
sub
cmp
jns
andl
dec
add
outsb
insb
inc
push
push
push
dec
add
jbe
adc
cmp
lret
ljmp
pop
sub
popf
pusha
inc
daa
mov
sbbb
sbb
pop
push
loope
enter
inc
jno
pop
xor
sbb
cs
movsl
aad
push
and
cmp
pop
xchg
and
push
mov
loop
sub
xor
fs
decb
xor
inc
mov
mov
aam
mul
push
daa
cwtl
dec
pop
cli
xchg
inc
inc
jb
js
lds
pop
test
mov
mov
jne
add
mov
xlat
rcrb
xchg
mov
add
cli
xor
out
push
loopne
js
add
lea
dec
fildl
fwait
hlt
xchg
out
mov
jg
sbb
dec
mov
aam
push
inc
add
adc
dec
popa
dec
cmp
inc
cmpsl
dec
aad
inc
mov
and
or
out
fwait
nop
sub
or
fidivrl
daa
movsb
addr16
fs
push
and
and
mov
xchg
xor
cmp
adc
out
inc
test
fs
push
or
int
rclb
pushf
push
dec
sub
cltd
mov
and
ja
jo
add
xchg
ja
mov
or
outsb
or
cmp
incl
push
adc
test
test
outsb
mov
mov
jae
jnp
xor
sub
cwtl
roll
pop
xchg
inc
enter
mov
mov
xor
iret
inc
pop
mov
sbbb
mov
jmp
inc
add
mov
aam
dec
pop
daa
sub
and
pop
imul
pop
push
xor
jns
nop
pusha
cmp
loope
mov
xor
int
bound
ficompl
aaa
mov
xchg
cmp
mov
pop
dec
sub
popa
or
cmc
imul
xchg
cld
addr16
pop
add
addr16
add
scas
jge
test
or
mov
cmp
testl
scas
or
add
push
sbb
adc
out
movsl
pop
daa
xchg
add
aad
xchg
fcomi
mov
dec
mov
mov
dec
or
adcl
xchg
int
aaa
cmp
add
test
inc
lcall
jle
or
inc
inc
cmpl
xor
popa
jno
jecxz
sub
or
leave
push
xchg
fistpl
inc
mov
and
or
call
xchg
rolb
pushf
imul
adc
add
ss
xor
mov
inc
cmpsb
xor
sub
mov
cmp
out
adc
frstor
adc
rorb
pop
mov
push
lea
cmp
bound
xchg
push
sub
mov
arpl
pop
lea
pop
jno
push
lods
insl
sbb
push
xchg
jge
mov
ljmp
daa
inc
sbb
xor
push
jne
mov
shr
adc
clc
and
add
ja
add
clc
clc
call
fldt
push
xor
outsb
mov
add
cmp
aad
arpl
negl
pop
add
mov
mov
movb
inc
popa
loopne
int3
dec
sbb
or
rolb
ljmp
or
cmp
mov
adc
mov
mov
push
rolb
and
or
in
add
jo
xchg
and
add
dec
cmp
lock
mov
xor
fbld
das
mov
or
jnp
cmp
pop
xchg
pop
daa
lea
xor
xchg
repz
push
sub
inc
data16
add
hlt
jg
fistpll
testb
cmp
js
inc
and
push
inc
xchg
or
jnp
stc
add
add
pop
sbb
pop
sbb
push
inc
add
or
add
addb
daa
adc
inc
mov
mov
push
adc
imul
push
inc
pop
pusha
adc
std
lahf
nop
jbe
imul
imul
divl
jb
adc
fdivrl
movsl
or
leave
sub
lea
lods
mov
mov
lods
cs
sbb
add
cltd
stos
imul
aad
arpl
adc
fst
aam
fcmovnbe
addl
add
adc
bound
jae
xor
sbb
aaa
test
rorb
dec
shll
pop
push
adc
ret
jle
into
pusha
mov
and
dec
inc
or
ret
push
hlt
addr16
inc
add
lret
inc
jne
jae
addb
lods
movsl
push
or
mov
lret
dec
push
mov
insb
adc
add
or
inc
mov
cwtl
test
sbb
shlb
add
jg
fdivrs
pop
push
sbb
inc
inc
inc
push
dec
gs
jns
jg
mov
push
inc
bound
gs
jae
jb
gs
jne
sbb
sti
je
inc
dec
inc
daa
pop
insb
add
pop
dec
outsl
fs
mov
mov
and
jb
outsb
je
addr16
fnstcw
insl
jo
les
or
popa
insl
dec
push
imul
mov
mov
sbb
js
flds
fisubs
inc
imul
aas
sbb
mov
push
imul
xor
inc
push
gs
outsl
pusha
es
outsb
mov
addr16
rolb
dec
movsl
js
addr16
push
sbb
jns
sbb
jne
mov
cmpsl
flds
dec
mov
push
jb
jae
mov
inc
dec
push
jns
inc
arpl
sub
dec
outsb
push
sbb
bound
adc
test
mov
push
imul
aaa
ret
xchg
js
dec
pop
jo
cli
push
inc
outsl
js
xor
push
sub
hlt
jns
lret
bound
jb
mov
push
es
pop
adc
mov
lcall
imul
inc
add
dec
add
add
pop
inc
sub
add
decl
sbb
inc
add
adc
inc
pop
add
pand
dec
ficomps
push
cmp
in
fidivl
adc
mov
inc
add
shlb
lahf
mov
sub
rolb
push
inc
dec
inc
inc
nop
inc
and
fbld
in
add
push
pusha
inc
inc
push
inc
pusha
ss
add
addb
inc
cmp
push
or
add
fwait
imul
xchg
sub
add
enter
cmp
xchg
jae
dec
jbe
fbstp
add
es
ficoms
xchg
test
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
