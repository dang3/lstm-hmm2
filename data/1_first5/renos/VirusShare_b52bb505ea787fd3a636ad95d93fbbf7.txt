add
add
rclb
push
push
add
sub
push
mov
push
pop
imul
xor
inc
xor
lea
imul
lea
inc
lea
mov
mov
inc
sub
pop
and
lea
pop
mov
sub
or
movl
mov
movl
sub
mov
sub
lea
add
and
not
mov
movl
lea
add
push
mov
mov
sub
or
push
and
add
add
push
xor
mov
lea
sub
shll
mov
xor
not
push
call
pop
imul
movswl
mov
mov
sub
sub
ss
sub
imul
mov
inc
dec
movzwl
add
sub
mov
dec
not
add
inc
imul
lea
inc
mov
xor
add
add
movsbl
sub
or
add
mov
and
inc
and
mov
mov
add
lea
inc
imul
lea
inc
lea
inc
not
push
push
and
add
push
add
sub
inc
lea
and
mov
sub
and
lea
sub
and
mov
imul
mov
and
add
inc
mov
lea
inc
push
addl
sub
or
lea
inc
mov
and
lea
mov
mov
add
push
inc
push
mov
mov
mov
mov
push
lea
push
push
push
mov
sub
sub
imul
lea
push
and
mov
movzwl
mov
not
and
inc
and
movl
sub
push
lea
sub
push
lea
and
push
add
sub
push
movzbl
and
push
imul
add
push
imul
neg
push
or
and
push
imul
mov
push
and
mov
push
imul
imul
addb
sub
inc
mov
mov
not
push
lea
call
sub
push
and
add
call
or
lea
lea
inc
mov
mov
xor
movzbl
sub
add
lea
and
and
lea
pop
sub
add
lea
not
mov
or
lea
imul
mov
mov
mov
imul
lea
sub
mov
imul
inc
or
add
not
and
movsbl
mov
mov
not
xor
sub
add
movsbl
and
and
inc
add
add
and
inc
add
mov
and
lea
and
mov
or
sub
movzwl
mov
sub
lea
sub
sub
and
imul
add
lea
imul
and
lea
lea
lea
lea
mov
mov
add
lea
or
and
or
not
sub
mov
sub
sub
imul
movsbl
inc
inc
movzbl
sub
and
or
mov
imul
mov
sub
inc
mov
mov
imul
add
neg
lea
mov
inc
lea
cmpb
je
mov
mov
imul
sub
xorl
add
inc
mov
movzwl
movzbl
lea
add
add
and
movswl
mov
xor
imul
shl
sub
and
mov
movswl
lea
push
sub
sub
lea
inc
imul
popl
imul
and
mov
movswl
not
movzbl
mov
lea
mov
mov
add
and
and
pop
mov
jmp
inc
push
and
lea
push
sub
movswl
push
and
mov
push
mov
lea
pushl
inc
add
pushl
movswl
and
mov
mov
add
push
and
movzbl
call
inc
and
lea
mov
add
movzbl
imul
pop
mov
lea
pop
xor
or
pop
mov
sub
sub
lea
add
mov
movsbl
lea
mov
inc
xor
mov
not
and
mov
imul
movzwl
xor
lea
sub
dec
inc
mov
xor
add
lea
mov
inc
inc
mov
lea
mov
add
add
add
add
and
inc
mov
or
add
incb
add
mov
inc
and
not
neg
mov
cmp
jb
and
push
mov
lea
push
add
lea
push
xor
not
lea
or
and
mov
mov
and
mov
not
and
or
sub
add
or
and
or
add
or
mov
and
or
or
movzbl
and
mov
not
lea
lea
inc
mov
mov
and
inc
inc
sub
movswl
mov
mov
lea
and
mov
mov
and
sub
imul
or
and
sub
and
or
and
mov
lea
lea
and
mov
mov
lea
xor
add
mov
xor
not
mov
xor
add
mov
push
imul
and
mov
and
lea
mov
lea
mov
movzbl
sub
and
push
lea
and
movzbl
lea
sub
add
lea
mov
add
not
inc
pop
mov
add
movzbl
mov
and
inc
add
sub
mov
lea
and
cmp
jb
or
xor
or
xor
mov
add
or
inc
and
xor
push
sub
movsbl
lea
add
movswl
mov
imul
lea
lea
sub
and
mov
or
sub
mov
lea
mov
pop
or
or
mov
add
mov
test
jne
sub
xor
sub
add
xor
sub
mov
pop
sub
and
mov
not
lea
mov
inc
and
test
jbe
lea
inc
and
sub
movzbl
mov
mov
pushl
mov
not
pop
and
or
movzbl
mov
or
add
sub
movsbl
movzbl
lea
mov
mov
lea
sub
mov
add
sub
add
xor
and
add
movswl
xor
movb
sub
inc
dec
and
neg
sub
add
or
mov
add
inc
and
sub
mov
lea
add
add
lea
mov
and
movb
inc
not
mov
neg
imul
and
mov
movzwl
sub
and
sub
lea
sub
add
lea
or
inc
neg
add
lea
lea
movzbl
lea
xor
lea
imul
add
movzbl
xor
and
push
mov
neg
xor
add
xor
dec
lea
and
mov
neg
xor
inc
lea
imul
inc
or
sub
or
xor
inc
pop
inc
mov
inc
inc
lea
dec
jne
inc
pop
inc
not
pop
and
lea
pop
sub
sub
add
and
lea
pop
movsbl
mov
add
neg
mov
push
sub
ret
mov
mov
lea
add
pushl
imul
lea
push
lea
lea
movzwl
inc
movzwl
mov
imul
add
neg
xor
inc
mov
xor
inc
add
imul
xor
cmp
je
lea
add
imul
jmp
and
dec
add
sub
dec
imul
or
lea
lea
inc
mov
inc
and
lea
add
mov
mov
add
imul
mov
sub
mov
lea
mov
lea
push
not
add
mov
inc
movzbl
pop
lea
add
push
xor
sub
pop
not
xor
lea
lea
lea
cmpb
je
lea
sub
inc
inc
push
lea
and
call
imul
xor
push
and
inc
call
mov
lea
sub
je
sub
call
inc
inc
call
xor
neg
call
mov
sub
call
lea
inc
call
sub
add
call
lea
and
call
lea
lea
call
sub
mov
call
and
xor
call
inc
and
jne
movswl
pop
and
add
sub
xor
lea
call
lea
and
mov
inc
lea
ret
sub
xor
jmp
nop
lea
sub
jne
add
add
or
out
push
push
es
lods
mov
es
sub
xor
idivb
roll
or
es
cmp
popf
push
cmp
adcl
push
mov
add
add
push
add
test
pusha
cmp
sbb
inc
ret
in
mov
pop
sbb
stc
cli
xor
cmp
jge
pop
xor
mov
mov
fsub
ljmp
mov
xor
sub
mov
inc
cmc
and
sub
enter
stos
repz
jl
mov
mov
jae
cmp
or
addr16
fcmovb
clc
or
pop
lock
scas
cmc
aaa
mov
dec
in
dec
mov
jmp
popa
shll
out
outsl
xor
push
pop
jno
aaa
cmp
