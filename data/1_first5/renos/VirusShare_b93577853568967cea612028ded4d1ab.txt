test
je
ret
add
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
mov
call
push
call
cmp
sbb
inc
pop
ret
jmp
mov
xor
aaa
xor
xor
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
lea
mov
lea
mov
lea
lea
mov
mov
lea
xchg
dec
je
xchg
mov
lea
lea
mov
inc
dec
inc
mov
cmp
je
jmp
cmp
jb
cmp
jae
mov
xchg
dec
mov
mov
dec
mov
lea
lea
lea
lea
lea
mov
mov
mov
mov
mov
xor
divl
test
jne
cmp
jae
mov
mov
mov
mov
lea
mov
inc
dec
jne
mov
inc
xchg
lea
lea
lea
mov
xchg
lea
mov
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
js
mov
lea
lea
inc
dec
dec
mov
mov
dec
dec
dec
mov
xchg
mov
xchg
mov
dec
dec
jne
lea
mov
lea
dec
inc
inc
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
ja
mov
mov
mov
lea
mov
lea
dec
dec
jne
mov
lea
mov
inc
mov
mov
xchg
xchg
mov
dec
inc
mov
cmp
je
jmp
cmp
jo
mov
lea
xchg
lea
mov
lea
lea
mov
inc
inc
lea
xchg
jmp
xchg
mov
lea
dec
mov
inc
inc
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
xchg
lea
dec
jne
mov
mov
mov
lea
mov
mov
inc
inc
dec
mov
cmp
je
jmp
cmp
jo
mov
lea
xchg
lea
mov
lea
lea
mov
inc
inc
lea
xchg
jmp
xchg
mov
lea
dec
mov
inc
inc
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
jmp
cmp
js
mov
lea
lea
inc
dec
dec
mov
mov
dec
dec
dec
mov
xchg
mov
xchg
mov
dec
dec
jne
lea
mov
lea
dec
inc
inc
mov
sub
mov
cmp
jae
lea
mov
mov
xchg
lea
mov
mov
mov
dec
jne
lea
dec
xchg
lea
lea
lea
inc
mov
dec
dec
push
mov
mov
xor
call
mov
cmp
jae
mov
mov
mov
mov
lea
mov
inc
dec
jne
mov
inc
xchg
lea
lea
lea
mov
xchg
lea
mov
mov
mov
mov
call
cmp
ja
mov
mov
mov
lea
mov
lea
dec
dec
jne
mov
lea
mov
inc
mov
mov
xchg
xchg
mov
dec
inc
push
mov
mov
xor
call
mov
cmp
jb
cmp
jae
mov
xchg
dec
mov
mov
dec
mov
lea
lea
lea
lea
lea
mov
mov
mov
mov
lea
mov
lea
mov
lea
lea
mov
mov
lea
xchg
dec
je
xchg
mov
lea
lea
mov
inc
dec
inc
lea
mov
push
jmp
cmp
jae
lea
mov
mov
xchg
lea
mov
mov
mov
dec
jne
lea
dec
xchg
lea
lea
lea
inc
mov
dec
dec
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jo
mov
lea
xchg
lea
mov
lea
lea
mov
inc
inc
lea
xchg
jmp
xchg
mov
lea
dec
mov
inc
inc
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
xchg
lea
dec
jne
mov
mov
mov
lea
mov
mov
inc
inc
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
lea
cmp
je
jmp
mov
xchg
mov
mov
lea
dec
jne
mov
mov
lea
dec
dec
dec
mov
mov
lea
dec
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jb
cmp
jae
mov
xchg
dec
mov
mov
dec
mov
lea
lea
lea
lea
lea
mov
mov
mov
mov
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
lea
push
mov
add
movb
lea
cmp
je
jmp
mov
xchg
mov
mov
lea
dec
jne
mov
mov
lea
dec
dec
dec
mov
mov
lea
dec
dec
mov
call
mov
push
push
push
call
lea
cmp
je
jmp
mov
xchg
mov
mov
lea
dec
jne
mov
mov
lea
dec
dec
dec
mov
mov
lea
dec
dec
mov
call
push
call
cmp
jae
mov
mov
mov
mov
lea
mov
inc
dec
jne
mov
inc
xchg
lea
lea
lea
mov
xchg
lea
mov
mov
call
mov
push
push
push
call
mov
call
lea
cmp
je
jmp
mov
xchg
mov
mov
lea
dec
jne
mov
mov
lea
dec
dec
dec
mov
mov
lea
dec
dec
push
call
incb
cmpb
jne
mov
pop
ret
add
decl
add
add
pop
jae
push
jae
push
jne
fs
push
mov
add
mov
mov
cmp
ja
mov
mov
mov
lea
mov
lea
dec
dec
jne
mov
lea
mov
inc
mov
mov
xchg
xchg
mov
dec
inc
push
call
mov
push
mov
push
call
mov
mov
mov
cmp
jae
mov
mov
mov
mov
lea
mov
inc
dec
jne
mov
inc
xchg
lea
lea
lea
mov
xchg
lea
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jae
lea
mov
mov
xchg
lea
mov
mov
mov
dec
jne
lea
dec
xchg
lea
lea
lea
inc
mov
dec
dec
mov
mov
movl
lea
cmp
je
jmp
mov
xchg
mov
mov
lea
dec
jne
mov
mov
lea
dec
dec
dec
mov
mov
lea
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jb
cmp
jae
mov
xchg
dec
mov
mov
dec
mov
lea
lea
lea
lea
lea
mov
mov
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
cmp
je
jmp
mov
xchg
mov
mov
lea
dec
jne
mov
mov
lea
dec
dec
dec
mov
mov
lea
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
js
mov
lea
lea
inc
dec
dec
mov
mov
dec
dec
dec
mov
xchg
mov
xchg
mov
dec
dec
jne
lea
mov
lea
dec
inc
inc
mov
pop
ret
imul
add
outsb
add
insb
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
xchg
lcall
cld
mov
xchg
sahf
mov
mov
mov
mov
cld
cld
mov
mov
mov
cwtl
mov
xchg
lahf
mov
xchg
cltd
mov
lahf
nop
lods
mov
mov
xchg
lahf
mov
fisubl
cld
cld
xchg
cld
lahf
cld
mov
lcall
cld
into
cld
mov
cld
cld
cld
cld
cld
scas
jne
jge
add
mov
mov
xchg
test
loopne
fstpt
loop
mov
cld
fstpt
mov
fstpt
cwtl
fstpt
cld
jae
add
mov
enter
jae
add
mov
cld
jae
add
rcrl
jo
cld
jae
add
xlat
pop
mov
mov
adc
mov
adc
mov
adc
mov
adc
mov
mov
cmp
mov
xor
jae
or
cmp
mov
cld
scas
jne
jge
xor
mov
ja
sub
jne
aam
jne
xor
mov
xor
lods
mov
mov
jne
xor
mov
xor
mov
sbb
movsb
jne
sbb
or
cld
cld
jne
or
hlt
jne
sbb
enter
jae
or
mov
cld
cld
jae
and
mov
cld
stc
subb
and
cld
std
mov
adc
cld
cld
xchg
cld
xchg
cld
jne
xor
clc
std
mov
xor
lods
shlb
adc
xchg
stc
subb
cld
jne
xor
cld
nop
jecxz
mov
mov
jne
xor
in
std
mov
adc
jne
in
std
mov
jne
xor
in
std
mov
adc
adc
mov
or
cld
cld
lods
jne
adc
jne
xor
lods
les
sbb
adc
jne
and
jae
sub
mov
lods
jne
adc
jne
xor
lods
les
sbb
jge
sbb
jge
and
jne
and
cld
push
jge
xor
jne
xor
clc
cld
stc
jg
or
or
or
mov
jae
add
mov
jae
adc
cmp
in
jne
xor
cmp
lods
jne
cmp
movsb
xchg
cld
jl
cld
xchg
cld
jne
xor
mov
xor
lods
mov
cld
jl
cld
xchg
cld
jne
hlt
lods
jne
xor
lods
mov
scas
add
lahf
adc
loopne
or
or
push
jnp
cld
or
or
cmp
push
jne
cmpsl
ds
cmp
jne
pushf
jne
hlt
jne
clc
or
lret
and
xchg
cld
cld
cld
lea
lret
xor
cld
cld
cld
call
cld
cld
cld
fisttpll
mov
cld
cld
cld
in
cmp
adc
adc
cld
cld
cld
shll
in
adc
cld
cld
cld
adc
nop
mov
xor
sbb
pop
adc
cld
cld
cld
cld
xchg
cld
idivb
lea
jge
mov
jae
dec
sti
mov
or
inc
or
cld
cs
pushl
ret
cmp
sbb
or
jmp
adc
or
or
ds
cld
ja
cld
jae
jae
inc
or
or
into
cmp
pop
inc
or
or
shll
xor
jnp
add
or
jae
or
hlt
pop
mov
repz
mov
add
mov
je
clc
pop
mov
jl
add
mov
or
or
or
add
stc
xorb
cld
inc
mov
jbe
push
jne
or
dec
jbe,pn
add
or
or
mov
mov
mov
add
sub
push
cld
inc
mov
jbe
push
int
jbe
add
add
or
std
ds
jbe
add
pop
mov
or
cld
cld
je
push
int
jbe
add
mov
int
jbe
push
jbe
add
pop
mov
jl
add
pop
cmpsl
cmp
jne
stos
je
or
cmp
hlt
pop
mov
cld
cld
cld
pop
hlt
pop
mov
repz
mov
out
hlt
pop
mov
clc
pop
mov
or
cld
cld
pop
repz
mov
hlt
pop
mov
pop
mov
int
pop
repz
mov
pop
mov
out
hlt
pop
mov
pop
mov
repz
mov
je
clc
pop
mov
hlt
pop
mov
clc
pop
mov
out
repz
mov
clc
pop
mov
or
cld
cld
je
pop
int
jbe
pop
jbe
clc
pop
mov
je
or
or
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
lea
mov
mov
mov
mov
xchg
lea
dec
jne
mov
mov
mov
lea
mov
mov
inc
inc
dec
movl
cmp
jae
lea
mov
mov
xchg
lea
mov
mov
mov
dec
jne
lea
dec
xchg
lea
lea
lea
inc
mov
dec
dec
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
js
mov
lea
lea
inc
dec
dec
mov
mov
dec
dec
dec
mov
xchg
mov
xchg
mov
dec
dec
jne
lea
mov
lea
dec
inc
inc
mov
mov
call
mov
cmpl
je
lea
cmp
je
jmp
mov
xchg
mov
mov
lea
dec
jne
mov
mov
lea
dec
dec
dec
mov
mov
lea
dec
dec
mov
cmp
je
mov
subb
cmp
jb
cmp
jae
mov
xchg
dec
mov
mov
dec
mov
lea
lea
lea
lea
lea
mov
mov
mov
mov
mov
mov
xorb
cmp
js
mov
lea
lea
inc
dec
dec
mov
mov
dec
dec
dec
mov
xchg
mov
xchg
mov
dec
dec
jne
lea
mov
lea
dec
inc
inc
incl
mov
cmp
jne
cmp
jo
mov
lea
xchg
lea
mov
lea
lea
mov
inc
inc
lea
xchg
jmp
xchg
mov
lea
dec
mov
inc
inc
inc
mov
call
lea
cmp
je
jmp
mov
xchg
mov
mov
lea
dec
jne
mov
mov
lea
dec
dec
dec
mov
mov
lea
dec
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
lea
cmp
je
jmp
mov
xchg
mov
mov
lea
dec
jne
mov
mov
lea
dec
dec
dec
mov
mov
lea
dec
dec
cmp
jb
cmp
jae
mov
xchg
dec
mov
mov
dec
mov
lea
lea
lea
lea
lea
mov
mov
mov
mov
lea
mov
lea
mov
lea
lea
mov
mov
lea
xchg
dec
je
xchg
mov
lea
lea
mov
inc
dec
inc
push
mov
push
call
mov
pop
ret
push
mov
add
lea
mov
lea
mov
lea
lea
mov
mov
lea
xchg
dec
je
xchg
mov
lea
lea
mov
inc
dec
inc
mov
mov
mov
add
xor
add
mov
cmp
jne
ret
add
xor
cmp
jne
cmp
jae
mov
mov
mov
mov
lea
mov
inc
dec
jne
mov
inc
xchg
lea
lea
lea
mov
xchg
lea
mov
movb
cmp
jb
cmp
jae
mov
xchg
dec
mov
mov
dec
mov
lea
lea
lea
lea
lea
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
add
lea
cmp
je
jmp
mov
xchg
mov
mov
lea
dec
jne
mov
mov
lea
dec
dec
dec
mov
mov
lea
dec
dec
call
call
call
call
call
test
jne
mov
jmp
movw
cmp
ja
mov
mov
mov
lea
mov
lea
dec
dec
jne
mov
lea
mov
inc
mov
mov
xchg
xchg
mov
dec
inc
call
lea
mov
pop
ret
lea
push
mov
add
lea
cmp
je
jmp
mov
xchg
mov
mov
lea
dec
jne
mov
mov
lea
dec
dec
dec
mov
mov
lea
dec
dec
cmp
jae
mov
mov
mov
mov
lea
mov
inc
dec
jne
mov
inc
xchg
lea
lea
lea
mov
xchg
lea
mov
push
push
push
call
mov
call
cmp
jae
lea
mov
mov
xchg
lea
mov
mov
mov
dec
jne
lea
dec
xchg
lea
lea
lea
inc
mov
dec
dec
mov
pop
ret
add
je
jae
inc
dec
insb
and
and
add
add
add
jae
movl
cmp
jo
mov
lea
xchg
lea
mov
lea
lea
mov
inc
inc
lea
xchg
jmp
xchg
mov
lea
dec
mov
inc
inc
inc
mov
mov
mov
lea
call
cmp
js
mov
lea
lea
inc
dec
dec
mov
mov
dec
dec
dec
mov
xchg
mov
xchg
mov
dec
dec
jne
lea
mov
lea
dec
inc
inc
ret
mov
ret
lea
popa
es
jp
adc
sar
sbb
cltd
sub
add
andb
add
mov
mov
pop
out
add
mov
add
sbbb
decb
add
push
xor
push
sbb
add
aas
testb
xchg
and
mov
add
sub
add
inc
xor
lds
xchg
add
or
call
in
int
add
out
mov
xor
mov
xchg
cmp
or
jae
sti
add
xlat
inc
add
or
dec
add
add
outsl
sub
xlat
add
fadds
jns
adc
stc
imul
push
fadds
out
mov
dec
xor
out
nop
stos
mov
repnz
adc
push
jae
imul
adc
jmp
mov
add
sub
add
scas
add
jne
pop
pop
test
add
out
fwait
pop
dec
arpl
aas
sbb
xchg
test
shr
testb
add
pop
sahf
adc
data16
out
xchg
lock
es
cli
jl
mov
mov
outsb
sub
xor
add
sub
mov
inc
arpl
add
aam
inc
out
mov
movsb
cmpsb
mov
aad
mov
sub
inc
lods
sbb
leave
loopne
and
jns
pop
sti
add
addl
mov
fildl
adc
pushf
xchg
iret
xchg
mov
add
popa
sub
sbb
add
sub
pop
dec
and
add
xor
push
jo
mov
add
popa
add
loop
cmp
orl
sbb
push
cmpsb
mov
outsl
cwtl
jae
rclb
sbb
pop
daa
cmp
cld
fcoms
loopne
add
add
aad
shrb
xchg
pushf
int3
adc
inc
jg
iret
add
dec
outsl
xor
inc
add
mov
es
das
push
inc
dec
lahf
lock
add
es
lods
movsb
jge
add
mov
add
outsl
icebp
xlat
add
push
popf
ret
add
cli
pushf
sti
mov
ret
add
jecxz
cltd
mov
add
and
and
mov
xor
mov
pop
add
pop
push
lods
scas
das
push
add
mov
fbld
repz
mov
out
aam
mov
jge
pop
dec
test
rcll
test
in
ljmp
cmc
add
xchg
cmp
call
jo
ss
adc
add
xor
adc
push
pop
jb
mov
dec
stos
add
dec
adc
add
inc
loop
and
or
or
ret
pop
and
add
add
add
out
xchg
xor
pop
fldl
push
add
dec
mov
jb
add
add
xchg
add
add
mov
in
dec
add
mov
mov
pop
and
add
sbb
add
lds
add
add
mov
lds
jns
add
inc
int3
pop
jo
jne
add
add
cmp
xchg
add
lods
inc
pop
mov
ret
or
test
push
mov
iret
fs
add
pop
and
xchg
leave
push
sub
add
out
cli
test
xor
push
stc
add
std
add
insb
add
loop
add
data16
mov
add
push
push
mov
xchg
loopne
loope
mov
sub
add
dec
hlt
icebp
mov
sti
push
add
lahf
add
mov
mov
jge
sub
mov
js
cmp
scas
lcall
jmp
dec
xor
push
sbb
nop
rolb
sub
mov
fnsave
mov
loopne
and
int
sbb
imull
mov
jecxz
xorl
test
cmp
imul
sbb
cmp
stc
fsubl
jmp
ss
jns
cmp
xor
aam
daa
or
cli
mov
xor
push
add
mov
into
stos
and
xor
insb
jne
mov
and
outsb
xchg
pushf
add
mov
lods
test
adc
sub
jle
in
lcallw
pop
inc
dec
push
gs
ret
jo
dec
in
add
adc
rcr
mov
jp
repz
xchg
cmp
icebp
cmp
pop
call
pop
pop
xlat
adc
out
pop
shlb
inc
filds
aad
mov
nop
frstor
aas
push
and
dec
and
pop
jecxz
sbb
loopne
cmc
out
call
mov
cli
outsb
add
xchg
or
dec
pop
iret
enter
in
inc
movsl
and
das
rorb
mov
sahf
or
inc
lock
idiv
pop
test
data16
cwtl
or
cmpsl
inc
outsl
mov
icebp
cmp
mov
lret
lea
inc
mov
pop
pop
mov
or
xor
shl
pop
pushf
sub
push
xchg
aam
aas
scas
ret
leave
push
mov
push
insl
ret
pusha
xchg
dec
push
pop
add
ljmp
into
lods
and
int3
mov
stos
enter
or
mov
movsb
test
add
dec
movsb
cltd
sub
mov
cmp
fldl
xlat
out
pop
ljmp
addr16
sbb
lahf
fcmovnu
pop
and
stos
stos
jecxz
pop
out
xchg
and
or
addr16
je
or
sbb
xorb
dec
mov
pop
data16
ret
mov
add
scas
dec
sub
shlb
std
and
fldl
repz
or
aam
fwait
mov
imul
fs
add
mov
out
xchg
fildl
orb
mov
mov
xchg
test
mov
out
mov
setae
cmpsl
ljmp
xchg
fisubrs
mov
xchg
fcoml
or
fists
mov
xchg
jne
adc
cmc
jns
xchg
shl
add
dec
sub
sub
in
push
push
leave
xor
and
xchg
and
mov
or
jle
mov
in
push
fsubs
mov
rol
push
or
in
inc
fimull
push
jae
sbb
push
sbb
lret
popf
in
jbe
mov
outsl
cmp
jl
adc
cmp
scas
subb
adc
adc
repnz
leave
pop
inc
jl
xor
bound
mov
inc
bound
mov
push
cltd
mov
mov
int3
xchg
pusha
ss
mov
iret
add
add
mov
mov
cld
scas
scas
xchg
xchg
in
xchg
lods
movsb
jecxz
fwait
push
ljmp
jge
sarb
fsubp
addr16
inc
ds
cltd
pop
jno
idivl
inc
dec
inc
clc
push
mov
add
jo
mov
adc
out
test
out
add
loopne
cmpsb
dec
aad
in
mov
jae
add
loop
jns
mov
loope
pop
xor
cltd
cmp
into
rep
mov
loope
ror
daa
addb
sbb
inc
addr16
and
xor
in
xor
push
mov
in
lcall
pop
fdiv
add
fcmovnbe
nop
outsb
mov
add
shlb
add
imul
mov
dec
and
out
pop
and
pop
xchg
int
jmp
sub
cli
pop
imull
sahf
lret
sub
shr
clc
mov
sbb
pop
rcrl
sub
sbbb
add
push
cmp
lret
imul
out
outsb
adc
dec
and
repz
cmp
in
jge
out
sub
cli
mov
das
add
jge
into
lea
xor
stc
sub
xor
adc
repnz
addr16
add
dec
scas
mov
sbb
bound
push
push
sarl
mov
shrl
xchg
in
sahf
fdivl
sub
les
dec
adc
repnz
gs
fildll
repz
push
stos
xchg
std
sub
cmp
cs
pop
adc
insl
or
pop
lea
xor
aad
es
mov
imul
and
je
push
out
push
dec
add
jecxz
loop
push
shrl
jns
mov
mov
movsb
sbbl
int
aaa
dec
lods
pop
jb
xchg
aad
inc
rorb
mov
loope
imul
jo
idivb
sub
and
sub
insl
cld
pop
inc
xor
cld
out
mov
out
lock
adc
mov
addr16
adc
aam
test
call
insl
stos
pop
fisttpll
xchg
cwtl
lea
popa
repz
lods
mov
icebp
mov
into
nop
cs
or
lds
add
std
add
outsb
cltd
pusha
jecxz
test
scas
pop
mov
and
dec
addr16
sub
xchg
cli
sbb
add
mulb
out
rclb
cmpsl
xchg
push
adc
push
dec
xchg
mov
fsubl
xor
rorl
add
cwtl
dec
adc
lds
jl
dec
lahf
xor
inc
push
mov
or
repnz
sti
push
add
cmpsl
sbb
sub
adc
mov
in
enter
fstpt
mov
pushf
out
xlat
loop
pop
lret
cmpsb
lret
fadds
mov
or
mov
mov
dec
xor
mov
push
push
fbstp
cli
test
in
and
xchg
sahf
icebp
jns
sbb
lcall
loopne
push
push
or
stos
lds
xchg
and
cltd
lods
insb
xchg
hlt
jnp
xor
jle
mov
inc
pusha
xchg
cs
iret
cli
fwait
cmp
scas
pusha
sub
mov
add
aaa
push
movsb
push
fildll
inc
mov
out
lods
add
data16
xchg
insb
lcall
scas
inc
mov
push
addb
ret
repnz
pop
mov
roll
add
popa
sub
gs
or
movl
cltd
add
sub
jl
jne
iret
aam
faddp
xchg
lds
jecxz
scas
mov
push
and
dec
aas
cmp
mov
lcall
dec
icebp
sbb
jmp
jno
or
mov
and
xor
inc
fdivs
mov
lds
sbb
adc
push
mov
in
inc
and
fldenv
popf
mov
enter
pop
mov
dec
daa
loope
sub
sub
xchg
cmp
push
ds
adc
movsl
shll
pop
adc
movsb
adcb
cld
stos
inc
add
adc
xor
dec
scas
mov
pop
ds
aad
clc
int
pop
scas
mov
lcall
fsubl
int
outsb
sbb
pop
adc
cmp
push
mov
cmc
cmp
xor
lods
push
push
incb
ret
sub
scas
cmp
sbb
shrl
mov
ret
sbb
ljmp
mov
jp
xor
hlt
outsl
out
popa
loop
lea
fs
dec
adc
push
ss
jge
sub
add
out
int3
pop
cli
icebp
mov
dec
cmp
cli
xor
lock
push
into
jo
std
cmc
test
scas
pop
movb
adc
push
push
imul
xchg
mov
fs
clc
pushw
inc
jno
ja
inc
mov
mov
cmpsl
das
sub
push
mov
cmp
sub
test
pop
decb
push
xor
cli
mov
pop
dec
pop
dec
stos
es
sbb
sub
pushf
repz
insb
int
rolb
test
je
cmpsl
cmp
pop
rorb
adc
shrb
pushf
insl
lods
jnp
and
sbb
aad
sti
jns
xchg
adc
jb
aaa
mov
je
push
push
out
push
lea
xchg
mov
std
sub
lods
xchg
lea
int3
sub
das
jle
add
cwtl
idiv
and
xchg
addr16
xor
testb
cld
cwtl
testb
cmpsl
inc
icebp
into
mov
ljmp
lret
imul
xor
mov
sub
lock
pop
outsb
pop
out
rolb
js
aam
push
lea
cmp
insl
xchg
ret
cld
loopne
xchg
xlat
mov
cs
or
lods
imull
mov
inc
in
mov
bound
cltd
xchg
fwait
and
mov
dec
aad
adc
sbb
xchg
push
jns
in
lock
sbb
ja
rorl
mov
js
mov
dec
pop
add
xchg
sbb
sub
lcall
xchg
xor
add
or
ljmp
pop
sbb
dec
notb
ret
outsb
out
xchg
mov
mov
or
in
fwait
adc
sahf
gs
dec
gs
fnsave
push
ret
push
bound
bound
ss
aad
xchg
xor
mov
les
jle
xor
sbb
movsl
cs
mov
pop
cmpsl
mov
daa
test
jne
cmp
insl
mov
jle
sbb
pop
jmp
imul
out
push
jge
jmp
loopne
push
inc
sbb
cmp
jns
repnz
sub
sbb
jle
mov
in
jecxz
pusha
sub
mov
ret
fistps
add
lock
jl
push
push
inc
push
mov
ja
mov
insl
mov
jns
ret
push
jo
ret
call
ret
cmp
push
leave
mov
add
mov
popf
in
leave
dec
addr16
lret
arpl
sbb
push
pop
data16
scas
cmc
xor
int3
addr16
push
pop
jbe
fisubs
add
sets
shr
shrl
rclb
hlt
ss
stc
jbe
lock
mov
inc
inc
fidivrl
clc
adc
or
loopne
dec
and
xlat
xor
in
push
push
lock
hlt
test
jl
and
loope
cmpsb
push
push
in
test
enter
pop
negl
push
in
loope
sbb
sub
dec
cwtl
cmp
cmp
hlt
pop
test
addr16
sbb
mov
add
pop
scas
xor
ds
jb
jmp
js
hlt
testl
cmpsb
jne
push
jns
fmull
mov
outsb
jg
mov
cmp
add
pop
imul
adc
es
roll
jge
xor
leave
xor
push
or
fwait
int
push
sub
mov
mul
repz
lret
mov
mov
jbe
sub
or
adc
icebp
outsl
lds
mov
icebp
loop
stc
add
pushf
fs
popa
xor
adc
ror
cmc
fsubs
xor
and
adc
and
loopne
lods
iret
pop
cmp
insb
loope
pop
push
lahf
cmc
dec
dec
or
fwait
mov
pop
in
scas
adc
mov
xchg
add
in
mov
and
cwtl
mov
stos
xlat
out
hlt
sub
das
frstor
cmpsl
inc
dec
sti
push
lcall
ljmp
dec
or
pushf
inc
dec
notl
pusha
jno
cmc
dec
cmp
insl
int3
es
sbb
sbb
loop
inc
sub
fstps
test
outsl
push
mov
jmp
mov
mov
in
xor
nop
outsb
mov
xor
mov
dec
xchg
mov
sub
add
jmp
xor
call
imul
scas
mov
jbe
dec
pop
std
aaa
fistl
cmpl
das
pop
out
hlt
mov
dec
pop
icebp
and
jnp
shrl
cmp
jle
pop
push
jnp
mov
mov
xchg
gs
icebp
rcrl
jne
push
mov
mov
iret
mov
xchg
xor
pop
in
adc
imulb
mov
jnp
ret
jbe
mov
adc
insw
js
adc
jg
xchg
push
cmp
push
iret
popa
and
imul
mov
dec
call
push
roll
jno
adc
fdivrs
push
mov
mov
and
js
pop
clc
sarb
xchg
sbb
popf
lahf
pop
and
dec
stos
mov
ds
mov
imul
imul
xor
inc
xor
imul
push
dec
pop
js
test
pusha
out
inc
or
dec
test
orl
xor
push
inc
push
mov
fnsave
mull
adcl
in
jmp
mov
mov
inc
aas
mov
jp
into
mov
mov
xchg
cmp
add
das
clc
pop
mov
std
mov
je
lods
xchg
out
xor
xor
push
cmp
clc
out
mov
mov
push
xchg
stos
stos
pop
push
insb
pop
dec
fidivrl
leave
dec
jle
lahf
inc
in
shlb
mov
sbb
jl
cmove
fsubrl
aad
xchg
push
gs
inc
popf
int
mov
in
sbb
int3
xchg
xchg
sbb
mov
scas
test
negl
add
repnz
leave
shr
hlt
adc
fxch
inc
imul
xlat
cld
repz
push
sub
mov
add
int3
push
xchg
test
frstor
lds
add
scas
dec
in
mov
inc
lea
stos
mov
movsb
test
push
xlat
pop
cwtl
jbe
test
mov
movq
daa
inc
or
hlt
jno
loopne
jl
pushf
dec
xchg
ret
pop
cmc
xor
aas
test
lahf
pushf
xchg
push
ret
inc
imulb
inc
and
inc
ds
loop
in
imul
enter
pop
ss
xor
sub
inc
sub
fstl
cmpsb
jo
movsl
iret
outsl
insb
and
xchg
dec
cmpb
sbb
cmpsl
add
repz
rcrb
pop
mov
lret
js
scas
pop
pop
lods
in
lcall
repz
or
test
fisubrs
sub
and
shl
insl
sarb
pusha
repz
ficomps
mov
ret
enter
fsubs
push
or
iret
int
jg
sub
mull
add
rcll
and
sahf
adc
or
push
stos
outsl
movsb
mov
adc
fs
adc
mov
ss
sbb
cmp
sbb
pushf
push
cli
push
loope
xor
mov
or
add
cmc
adc
jge
add
xor
fcoms
imul
loopne
add
jnp
lods
inc
insb
xchg
mov
je
and
insb
add
adc
ss
push
stos
mov
dec
xor
gs
mov
loopne
jp
dec
push
pop
cmpsl
fsts
aas
cmpsl
repz
cmpsb
xchg
inc
fnstsw
cmp
sub
pop
es
adc
add
pushf
ret
fadds
add
bound
pop
test
aad
rclb
nop
dec
adc
jb
cmp
dec
std
pslld
pop
jecxz
orb
in
mov
sub
mov
decb
sbb
and
pop
pop
cmpsl
stos
inc
pop
inc
adc
enter
push
mov
push
jmp
and
mov
sarl
shl
push
jb
std
add
cmp
inc
addl
or
icebp
cwtl
in
dec
cld
mov
rcrl
in
insl
lock
mov
mov
sub
cmp
add
sub
dec
repnz
xchg
push
push
jbe
mov
lods
lods
int
sarl
aaa
mov
inc
mov
and
mov
test
loop
jecxz
out
mov
jae
push
xchg
lock
xorl
jge
sar
rol
pop
into
sbb
stos
lahf
jp
out
adc
mov
loopne
adc
xchg
or
or
xchg
mov
mov
or
jg
test
in
ja
adc
dec
js
add
rcrl
or
inc
jb
jo
or
in
in
add
clc
cltd
push
out
adc
jno
xchg
cmpsl
ljmp
cmpsl
pop
mov
jo
mov
sti
cmc
jle
mov
mov
mov
mov
push
jne
sbb
and
fists
cmpl
call
xor
sub
rorl
add
push
push
stos
push
cs
push
test
jnp
cmp
jle
andb
hlt
add
arpl
stos
iret
pop
jmp
ret
rcrl
mov
inc
push
jbe
jae
fwait
jg
sub
mov
cmp
and
pop
fidivrl
ficoml
sbb
inc
imul
scas
or
cs
push
jg
mov
jnp
lahf
sub
inc
sbb
leave
cmp
sbb
pusha
dec
shlb
jnp
inc
outsb
loope
or
cmp
mov
xchg
cmp
or
jp
int3
cmp
pop
mov
lds
das
ret
scas
sub
and
jge
cmp
or
leave
jns
sub
mov
inc
push
sbb
daa
inc
pop
lret
cmp
cmpl
add
sbb
lcall
push
xchg
sbb
dec
push
adc
adc
push
iret
aas
in
push
pop
popf
enter
pop
jne
mov
loope
outsb
add
cmp
ds
mov
movsl
mov
and
sub
dec
xor
lea
sbb
loope
xor
in
aam
mov
xor
pop
sub
lcall
aas
fsubl
push
mov
rolb
ror
xchg
out
mov
mov
sbb
roll
setae
int
js
sub
mov
xchg
lret
daa
shrl
cmp
sbb
cmp
pop
push
addb
xchg
loop
sub
stc
outsl
pop
test
adc
adc
addr16
add
fmuls
popf
out
lret
mov
stos
xor
test
lret
cmp
in
leave
cmc
fsts
es
and
adc
out
adc
push
jns
adc
arpl
dec
xor
sub
pop
icebp
mov
jge
cmpsl
sti
mov
cmpsl
jno
mov
cmpsl
cwtl
loopne
scas
mov
inc
jb
mov
into
ret
jne
or
cmp
or
sbb
pop
xlat
add
sub
xchg
pop
fstps
repz
outsb
sub
jmp
dec
pop
cs
shl
nop
and
jecxz
outsl
mov
jb
mov
dec
je
or
jno
dec
pop
out
sti
mov
call
je
mov
xorl
or
sarb
sub
imul
pushf
imul
ror
sbb
test
inc
dec
cmpsl
inc
xchg
scas
mov
outsl
lahf
push
cld
lret
subl
fwait
dec
mov
inc
nop
lock
and
lret
sbb
sub
pushf
and
es
sbb
add
in
jns
xchg
xchg
bnd
adc
jge
dec
jns
lods
cmp
nop
mov
pop
cmp
mov
jg
xchg
xchg
sbb
cltd
cmp
push
test
pop
aaa
mov
insb
push
push
pop
push
sbb
call
scas
xchg
popa
sbb
or
xchg
pop
jns
shrb
jbe
push
xchg
insb
and
mov
movsl
xor
imul
ja
cmp
mov
adc
loop
sub
test
aas
ja
mov
rolb
and
or
mov
fwait
lahf
out
push
xchg
or
adc
pop
bound
sarb
inc
sbb
xlat
pop
inc
xchg
or
into
mov
mov
xlat
addr16
jp
sub
mov
and
mov
je
fimull
mov
jne
mov
inc
fbstp
add
jmp
lret
sbbl
out
xor
sub
int3
cmp
stos
xchg
clc
adc
insb
xor
addr16
jno
jle
push
cmc
in
cmpsb
cmc
pusha
mov
iret
jbe
sub
sti
mov
clc
inc
adc
jae
movsl
cli
push
jmp
gs
mov
dec
mov
ljmp
xchg
enter
les
push
scas
outsl
xor
push
sahf
stc
jbe
xchg
push
mov
xchg
test
scas
jmp
pop
arpl
popa
movsb
inc
jno
stos
or
mov
jecxz
push
in
push
mov
adcb
pop
mov
mov
dec
sub
movsb
add
sarb
jb
or
movsb
and
in
cmp
nop
movsb
lcall
jbe
js
jge
pop
add
test
push
daa
inc
sub
xchg
push
loope
pop
inc
or
lcall
ja
xor
cmc
test
lahf
fcmove
push
imul
push
inc
pop
popa
lahf
cmpsb
fldcw
leave
in
cmp
enter
pop
mov
xchg
push
out
inc
loope
int
sub
test
ds
mov
pop
and
stos
mov
andb
lret
and
xor
cmp
pop
sarl
fdivrp
pop
stos
and
lcall
out
fmull
mov
xchg
outsb
test
adc
test
clc
jg
xchg
hlt
mov
xchg
rorb
pop
rcl
and
lea
int
push
push
sub
mov
lret
imul
add
sbb
aam
test
cmp
bound
and
or
popf
mov
fsubl
sub
xchg
popf
and
and
mov
int
cmp
mov
or
mov
mov
in
inc
pop
jg
jle
nop
imul
sbb
mov
andb
dec
sub
xlat
mov
add
mov
call
adc
sub
sbb
lret
notl
inc
test
sub
add
sbb
xchg
int3
inc
jne
inc
or
test
xor
je
jbe
sbb
loope
jb
and
sbb
aas
push
adc
dec
jmp
divl
sahf
jecxz
dec
fcmovnb
repnz
xor
jo
shlb
adc
lock
push
call
add
inc
call
mov
push
mov
je
inc
and
and
rcrl
sub
mov
cwtl
loop
in
inc
and
scas
icebp
inc
jbe
cld
mulb
fwait
mov
sbb
pop
ljmp
sub
stos
rol
shlb
insl
sub
aam
xchg
rcll
ljmp
push
sub
jge
and
adc
pmaxub
data16
in
test
add
mov
test
mov
clc
addl
sbb
mov
cli
stos
jge
mov
xchg
mov
imul
inc
shll
mov
lahf
or
or
xor
xlat
xor
adc
stos
test
lods
clc
ja
mov
dec
pop
repz
inc
adc
mov
sub
in
push
push
add
cmpsb
cmp
rol
mov
jns
jge
in
adc
mov
in
sbb
jno
js
mov
arpl
add
mov
jecxz
or
mov
jnp
aad
addr16
push
xchg
xchg
fdivl
and
jg
pop
sub
sub
cli
dec
push
inc
adc
add
mov
dec
aam
insb
sahf
and
xchg
jle
push
jmp
add
iret
aad
fld
push
mov
pop
and
and
sbb
in
inc
repz
scas
in
popf
xlat
daa
lea
imul
sbb
aaa
insb
imul
scas
rol
dec
push
in
repnz
es
jmp
pop
shl
notb
push
arpl
mov
or
cs
ljmp
adc
int3
adc
rcrl
cmpsl
push
fdivp
mov
lds
xchg
icebp
rclb
jmp
cli
fdivrs
shl
daa
movsb
and
jno
jbe
lea
sbb
cli
daa
inc
andb
jle
jno
das
mov
dec
mov
xor
push
inc
mov
stc
call
sbb
sbb
rorb
cmpsb
pop
add
in
and
push
pop
repz
rcrl
jno
mov
cmp
pop
sub
mov
in
hlt
and
or
mov
cmp
cmovbe
jg
test
push
and
pop
add
pop
sub
cmpsb
push
aad
je
stc
mov
jecxz
or
push
adc
xor
jg
mov
mov
inc
clc
mov
or
add
in
int
pop
sbb
mul
xor
lret
repz
out
test
sbb
xor
test
aad
outsl
inc
inc
shl
cmp
cwtl
out
fs
repnz
jns
ss
push
mov
fmuls
lret
mov
cli
lock
xor
mov
aaa
or
outsb
or
fisttps
cmc
addr16
xor
mov
sub
push
sub
imul
arpl
popf
xor
cli
sbb
mov
xlat
loop
jge
mov
sahf
inc
in
push
arpl
sti
adc
mov
add
mov
outsl
dec
test
sbb
cwtl
outsl
mov
les
add
repz
mov
mov
into
jns
sub
fistpl
jl
adc
xlat
sub
or
aad
add
aas
lods
jae
jb
les
hlt
daa
je
mov
add
pop
sbb
jmp
cmpsb
mov
lods
lcall
loopne
dec
or
push
pop
inc
shl
inc
outsl
cmpsb
in
bound
dec
mov
sub
add
pop
jp
imul
test
imul
popf
inc
mov
pop
ss
icebp
sbb
lcall
clc
clc
clc
mov
dec
aam
std
pop
xchg
pop
or
shlb
adc
lea
mov
es
jp
insl
adc
cmp
xchg
adc
push
popa
jge
mov
mov
mov
loopne
mov
cmp
cltd
stos
rolb
test
mov
loopne
mov
clc
mov
mov
sbb
roll
inc
stc
pop
iret
scas
cld
stos
insb
inc
mov
cmp
sub
jno
test
je
xchg
xor
push
or
insl
xor
movsb
jbe
or
das
xchg
mov
cmc
test
out
dec
ja
dec
inc
dec
push
iret
mov
test
or
fwait
std
lods
jbe
int
fldl
dec
lret
mov
aad
xchg
jns
pop
jp
in
sbb
xlat
repz
pop
leave
mov
sub
adc
ficoms
mov
add
repnz
aam
push
loope
jne
xor
mov
xchg
cmp
push
xchg
pusha
aam
xorl
out
xchg
bound
ret
push
sbbb
ja
sbb
arpl
sbb
sub
in
sbb
inc
iret
xor
sti
ret
fistps
test
jae
test
jno
jp
decb
out
inc
call
in
xchg
jbe
call
imul
scas
xor
mov
dec
xchg
mov
repnz
jge
popf
je
hlt
inc
cmc
jb
lock
das
inc
ja
mov
test
fsts
add
enter
sbb
cmpsl
lds
cs
scas
enter
mov
mov
push
adc
jge
rcrl
sti
test
inc
pop
movsb
cmp
lcall
mov
sbb
adc
push
ljmp
jo
stc
stos
lahf
sbb
push
psubsw
adc
into
push
jae
ja
jp
push
cmpsb
fisttps
pop
mov
loopne
jl
xor
push
xor
loop
mov
xchg
sub
jnp
cmp
daa
xor
xor
insb
sub
sbb
xor
mov
adc
cmp
js
pop
mov
test
imul
and
sub
outsb
outsb
js
adc
pop
dec
popa
jg
icebp
mov
pop
in
sbb
xor
enter
cmp
int
mov
cmp
mov
mov
add
sbb
push
sub
adc
lcall
lcall
mov
pop
adc
pop
ss
sti
xchg
cmp
or
ss
and
xor
pusha
cmp
or
ret
outsl
sbb
xor
fs
sbbb
imul
stos
pop
data16
lods
loope
hlt
mov
rorb
xlat
and
jbe
out
push
cmpsb
in
mov
nop
je
ficoml
gs
in
mov
stos
dec
outsl
fnstenv
les
xor
js
jecxz
push
js
sbb
or
insl
pop
bnd
adc
adc
outsl
pop
cli
jmp
mov
aad
das
sbb
dec
fcomp
jb
scas
mov
je
lds
xabort
stos
lea
loop
call
mov
rorl
jns
push
dec
hlt
std
inc
fildl
lds
inc
jge
cmp
mov
inc
aas
mov
mul
jp
mov
mov
cwtl
pop
test
sti
mov
hlt
mov
lret
add
xchg
xorl
sbb
pop
sub
add
js
sbb
nop
push
es
inc
mov
in
sti
inc
jg
fiadds
xchg
push
call
jecxz
xchg
mov
mov
mov
outsl
fdivs
setl
lods
cltd
loope
lds
out
and
pushl
clc
negl
xchg
cmp
push
mov
pop
jp
xchg
lahf
hlt
xchg
xchg
inc
dec
adcb
lcall
or
or
mov
sbb
adc
movsl
ret
bnd
imul
pop
and
lock
or
hlt
xor
jo
adc
add
bound
cmp
jns
loop
in
jp
xchg
outsb
les
mov
cmp
mov
out
push
addr16
pop
fs
notb
sub
es
pop
xor
sti
dec
jne
mov
mov
cld
xchg
fisttps
jno
xchg
or
rcrl
and
add
ja
sub
mov
daa
cs
ljmp
insb
je
jnp
sbb
jmp
adc
out
iret
fs
iret
xchg
mov
pop
mov
es
pop
and
xor
pop
popf
and
cmp
inc
xor
aas
ret
xchg
int
adc
imul
out
cwtl
rol
jae
adc
jbe
mov
clc
add
hlt
mov
arpl
stos
push
inc
jp
add
and
inc
aaa
xchg
push
pop
or
enter
xor
jmp
pop
cmp
cmp
rorb
iret
and
dec
jmp
movsb
cmp
adc
sub
jbe
adc
jge
add
movsl
daa
aas
mov
cmp
imul
loop
dec
dec
mov
pop
jmp
fs
aaa
xor
loop
xor
ds
into
inc
or
cmpsb
bound
xchg
out
jp
enter
pop
jno
inc
push
dec
mov
sub
xor
cmp
mov
lock
repnz
lret
fmuls
jge
mov
xchg
loope
xor
stos
add
pop
dec
into
dec
js
std
add
daa
loope
lcall
mov
sub
and
in
mov
in
cmp
cmp
data16
xor
mov
mov
and
dec
add
sbb
inc
int
inc
imulb
jecxz
call
lret
lahf
rorl
pusha
sbb
sahf
inc
jle
test
in
pop
xor
dec
outsl
jmp
loop
sub
fs
xor
movsl
adc
inc
fadd
sarl
out
stos
sbb
xor
ja
or
mov
cmc
cmc
int3
cld
xor
add
push
imul
ss
mov
add
mov
addb
movsb
es
add
in
cmp
jno
es
std
andb
pushf
dec
in
inc
and
outsl
fldcw
std
repz
lahf
xor
mov
insb
or
pop
movsl
das
mov
pushf
sbb
dec
jmp
lea
dec
cmp
nop
nop
out
or
jmp
cmpsl
jb
into
mov
imul
xor
mov
sti
jecxz
lea
insb
sub
pop
cmp
adcl
inc
xor
scas
mov
cli
inc
jge
push
inc
cwtl
xchg
pop
das
xchg
pop
xor
cltd
addl
notb
fdivr
inc
in
cwtl
adc
lea
lret
rcrb
cld
ja
lret
je
mov
mov
in
lock
pop
pop
inc
test
rorb
out
xchg
adc
and
xchg
ret
rcrb
mov
dec
fstps
xchg
nop
xchg
inc
ljmp
lods
in
or
out
push
and
jecxz
adc
sti
xor
cltd
sbb
mov
testl
bound
clc
xor
imul
pop
pop
shrl
lea
dec
out
out
add
mov
daa
out
clc
pushl
mov
or
mov
mov
sbb
fs
movl
xchg
ja
or
aaa
mov
lds
mov
fwait
pop
test
push
adc
mov
decl
add
sbb
outsb
insb
call
jns
or
add
fnsave
jo
out
addr16
pop
loopne
jo
push
mov
jns
mov
xor
outsl
jne
movsb
xor
fistpl
jmp
idivb
and
lret
cmp
mov
push
add
stos
pop
sub
and
jb
jnp
out
mov
in
and
push
xchg
repnz
sub
fwait
les
push
jae
je
push
notl
add
popa
inc
inc
inc
out
sbb
dec
xor
jo
les
and
scas
sti
sub
fists
insl
push
mov
loop
push
hlt
xlat
mov
arpl
mov
or
xchg
push
push
xlat
or
add
out
int3
aam
lods
pop
inc
push
aaa
call
vstmxcsr
movsl
cmp
scas
xchg
pop
and
sbb
in
cmp
test
jge
mov
sbb
or
ds
les
pop
out
ljmp
popa
rorl
rorb
mov
pop
xor
popa
lcall
mov
fs
or
inc
cwtl
ret
sbb
aad
or
inc
add
mov
mov
loope
mov
sub
ret
aad
pop
js,pt
shll
xor
dec
sub
cmp
mov
pop
add
jae
xor
aad
movl
and
das
cmp
cmpsb
rolb
mov
push
push
pop
fdivr
mov
outsb
xor
sub
sub
sub
adc
mov
sub
push
js
mov
flds
mov
and
adc
push
push
inc
mov
cli
mov
sub
push
pop
dec
jp
mov
and
and
cmp
scas
add
jae
stc
sahf
in
cld
test
push
or
or
aad
fdivp
and
stc
add
push
adc
cmpsl
xor
call
dec
fcmovnu
jg
arpl
sbb
jl
xor
mov
or
ss
mov
shlb
sbb
pop
mov
aam
imul
add
jmp
mov
push
pop
sub
fwait
inc
mov
xchg
outsb
test
and
and
aad
aaa
loop
dec
mov
stos
out
fabs
inc
les
mov
push
fildl
fdivrs
sbb
jg
popf
movsl
pop
sbb
xchg
pop
adc
bnd
pushf
lds
loopne
popf
loop
lods
lahf
push
aad
mov
nop
imul
aas
mov
lret
pushf
scas
je
ficoml
jecxz
push
mov
hlt
lret
pop
test
mov
sub
dec
les
cmpsl
stos
int3
dec
lret
fcmovnu
push
mov
inc
add
fldl
lods
cmp
jbe
mov
mov
or
sub
pop
out
negb
sbb
sub
divb
cld
mov
pop
lret
mov
inc
enter
int
push
jg
push
clc
int3
sub
jnp
out
cs
pop
mov
outsl
insl
leave
jmp
jns
iret
lret
push
cmp
popa
ret
lods
dec
cmp
mov
or
and
jle
mov
pop
out
add
std
cmp
test
inc
js
sub
fisttpll
shlb
insl
popa
roll
mov
lret
out
gs
adc
add
call
jge
add
pop
or
lcall
cmp
xchg
xor
test
sub
ja
cs
dec
sub
inc
or
inc
ljmp
mov
add
lcall
bound
dec
jns
xlat
movsl
in
xor
mov
push
and
pop
bound
jp
pop
nop
mov
call
jmp
lahf
mov
scas
jne
pop
out
mov
mov
jge
mov
jge
fwait
sti
jmp
andl
mov
addr16
ljmp
ret
aas
dec
daa
stos
sarb
and
fistpll
jle
lret
push
mov
lods
iret
push
cmc
jns
pop
add
std
sbb
inc
dec
lock
jae
rolb
popf
jae
cmpsb
mov
gs
jbe
mov
dec
xchg
jnp
cmp
jbe
adc
mov
push
add
int3
adc
jns
mov
xor
xchg
xchg
and
inc
sbbb
or
sbb
lock
add
jae
inc
int3
mov
sbb
fidivrs
hlt
lds
imul
gs
cmp
repnz
add
xor
push
jge
ds
cmpb
daa
pop
jno
cmp
jl
cmp
out
push
xchg
imul
mov
push
mov
jne
aam
je
daa
xchg
cmpsb
push
add
shll
ja
lea
outsl
loope
les
test
dec
cmp
and
and
imul
cmp
rcrb
push
mov
pop
nop
xor
xchg
loope
popf
adcb
neg
pop
and
cmp
xor
fsubl
adc
outsb
xchg
mov
adc
out
mov
out
mov
repnz
addb
aad
enter
mov
and
dec
popa
add
jb
fidivs
test
mov
jl
sbb
mov
test
pop
andb
jmp
mov
filds
mov
mov
adc
dec
sub
and
cmp
insl
out
mov
cli
mov
out
scas
cmp
xlat
mov
into
imul
xor
clc
pop
fucom
jb
popf
jne
imul
sbb
lods
xchg
jns
mov
mov
dec
sub
aaa
sub
inc
outsl
sti
iret
xchg
incb
je
and
lahf
dec
add
sbb
les
push
repz
adc
pop
aaa
mov
mov
xor
pop
or
xchg
pushf
jo
pop
jmp
mov
cs
gs
xadd
sub
dec
jb
test
dec
je
loop
jecxz
repnz
movb
sub
xlat
xor
mov
push
cmpl
push
sbb
or
pop
inc
inc
mov
das
push
inc
inc
mov
pop
insl
mov
shll
enter
sbb
cwtl
mov
cmpsl
cmp
push
mov
jns
aam
int
cmp
push
mov
mov
or
das
pop
test
lcall
loop
aam
loope
ret
out
and
sub
insl
mov
enter
xchg
push
sub
push
jo
fnstcw
pop
lods
mov
adc
sub
xchg
sbb
xchg
mov
addr16
xchg
xor
aad
push
in
or
fnsave
rcr
xchg
sbb
ss
pop
sub
stos
sub
xchg
fisttpll
dec
push
xchg
jp
push
sbbl
cmp
xchg
xor
and
mov
and
test
mov
pop
dec
sbb
add
or
stos
mov
push
pop
sbb
add
mov
mov
sub
adc
dec
cmpsb
jns
dec
mov
sbb
dec
mov
xchg
dec
mov
sbb
and
pop
inc
mov
jl
mov
push
cltd
add
jne
shll
insb
mov
insb
jmp
mov
fwait
xorl
push
or
sbb
scas
data16
jle
into
stos
inc
jnp
and
pop
stc
jnp
aad
push
pop
push
in
mov
insl
iret
mov
int3
ret
aad
xor
cmpsb
inc
push
aad
jae
je
push
jge
jns
lcall
inc
in
jbe
test
sbb
jnp
imul
scas
shl
push
dec
popa
outsb
adc
mov
mov
leave
jns
jno
insl
movb
sub
inc
and
or
xchg
pop
loopne
into
in
or
xchg
int3
stos
cmp
pop
movsl
sahf
stc
fisubs
mov
aam
fistpl
pushf
and
rcrl
add
cmp
inc
jge
mov
sbb
mov
cmp
dec
cmp
adc
jno
xlat
fdivrs
adc
push
jbe
jbe
mov
mov
push
pop
rorb
test
lahf
fisubl
mov
pop
cmpsb
jmp
jecxz
mov
mov
mov
add
lods
loope
sti
mov
lock
xor
xor
ds
xor
call
sbb
in
add
xchg
repz
mov
dec
lahf
cmpsb
pop
les
lcall
pop
mov
fcoml
into
sub
mov
outsb
cli
add
cwtl
ror
fs
loopne
std
mov
lock
nop
arpl
push
insb
sti
push
and
ror
enter
push
sbb
negl
subb
inc
mov
sbb
sahf
jno
sub
addb
outsl
pushf
sub
sbb
sbb
fistpll
imul
mov
fdiv
cmp
je
out
cli
and
cmp
or
dec
into
dec
ja
cmc
dec
shll
pop
cld
aad
adc
mov
adc
jo,pt
cli
jo
data16
cmc
lods
jge
out
mov
adc
add
mov
push
lods
sti
jle
movsb
mov
sub
into
dec
pusha
into
add
xlat
sub
dec
xchg
dec
les
mov
mov
test
cs
cmp
cmc
sub
adc
adc
lret
pushf
sbb
sub
aad
int3
in
and
aas
enter
mov
arpl
jmp
je
aas
push
jecxz
adc
movb
ret
call
lods
mov
popa
adc
sbb
sub
inc
adc
into
inc
jmp
loop
mov
mov
push
mov
idivb
negb
pop
popa
std
cmp
jg
inc
clc
andb
aad
push
jae
cld
clc
aam
lret
shll
sbb
in
shll
pop
movsb
mov
lahf
sub
aam
call
loop
lods
push
lock
xchg
sbb
xchg
dec
mov
mov
add
lods
and
jb
mov
mov
prefetcht2
add
mov
test
jo
mov
stos
xchg
push
scas
dec
pop
fst
pushf
pop
clc
jecxz
or
lret
mov
shll
xor
out
sub
xchg
pop
dec
fsts
mov
fidivs
cmpsl
dec
xor
xor
xchg
dec
mov
and
lret
xchg
loope
ja
add
dec
adc
ret
jecxz
fwait
call
fwait
push
add
shrb
lret
adc
dec
pop
cltd
in
cmp
xchg
stos
and
mov
inc
int3
mov
sarl
addr16
jb
jp
mov
mov
jge
add
ljmp
sti
leave
rcr
xor
pop
dec
pop
jmp
push
xchg
sbb
insl
jge
sub
test
adc
mov
cmp
and
insb
and
jnp
pop
sbb
in
sbb
pusha
cmp
ja
movd
andb
imul
inc
pop
push
aas
jae
pop
cmpsl
push
inc
push
push
mov
arpl
aaa
xchg
sub
sbb
add
jg
and
mov
adc
outsb
jns
fistl
xchg
mov
sbb
inc
xchg
adc
push
lea
xor
sub
aas
int
xchg
jmp
pop
aam
popf
faddp
loop
lds
or
mulb
scas
and
mov
cmp
int3
inc
movsb
addr16
jle
inc
xchg
pop
jge
or
sbb
push
or
divb
mov
dec
jns
insb
push
pop
inc
jge
xorb
lahf
mov
test
test
push
std
inc
inc
xlat
and
mov
mov
pop
mov
push
mov
and
bound
loop
pop
loope,pt
aad
push
push
and
jne
popl
mov
sbb
push
shll
xor
out
xlat
adc
push
pop
jmp
mov
cmpl
xchg
lcall
jbe
sti
enter
push
push
outsb
pop
dec
add
add
jg
les
mov
subl
sub
push
daa
mov
imull
iret
or
negl
lret
xchg
shl
fmull
lcall
push
scas
aam
pop
push
js
jnp
out
scas
data16
daa
and
xchg
sarb
xorl
pop
push
mov
mov
loope
sbb
xchg
cli
and
jl
adc
cmp
arpl
or
pop
mov
adc
xor
sbb
sbb
adc
shrl
push
add
loopne
lods
adcl
sub
out
popa
pop
push
in
aad
jmp
sub
mov
xor
loopne
and
dec
mov
mov
hlt
les
pop
repz
xchg
and
push
jmp
cmp
inc
icebp
and
pop
jno
ja
aad
iret
pushf
cltd
loope
push
sbb
mov
aad
in
addr16
cld
outsb
repz
or
push
sbb
or
pop
out
jne
ret
movb
fimuls
int
mov
mov
popf
mov
dec
mov
test
inc
cltd
xchg
add
ss
adc
enter
adc
roll
push
mulb
inc
std
loope
and
cmp
fcomi
daa
inc
cld
and
insb
lret
xor
shll
pop
hlt
mov
ret
je
rclb
and
aam
inc
movnti
mov
insl
jle
jno
lds
sbb
lods
cwtl
mov
lods
nop
xchg
fs
jb
xchg
and
dec
in
emms
pop
sbb
cltd
hlt
int
test
or
jb
xchg
and
clc
push
lods
xlat
xchg
sbb
jle
xor
or
lret
pop
shll
push
stos
push
jnp
out
mov
add
xchg
addl
xor
inc
popf
or
inc
xor
pop
enter
jno
sub
sbb
arpl
addr16
fwait
shll
fimull
mov
pushf
or
icebp
inc
fwait
pop
popa
mov
lahf
adc
jmp
xchg
out
ljmp
jns
push
cmp
xchg
stc
bound
mov
mov
addr16
mov
adc
mov
in
xchg
cmp
mov
out
mov
out
outsb
fildll
imul
andb
xchg
and
loope
lock
push
or
and
in
fisubrl
insb
mov
jnp
scas
imul
ss
pusha
jne
iret
outsb
mov
ret
pop
pop
mov
fwait
cmpsl
jae
adcl
arpl
dec
inc
push
inc
loop
pop
fcmove
mov
adcb
sbb
jmp
scas
xchg
push
mov
out
mov
cs
aaa
leave
addr16
hlt
add
ja
dec
and
inc
mov
sbb
mov
stos
aaa
dec
add
add
cli
cmp
subb
add
scas
fisubs
jnp
adc
scas
add
sarl
lods
hlt
movsb
repnz
push
in
popf
scas
jbe
rorb
jge
inc
imul
cmp
cmp
or
jno
jge
jl
leave
xchg
dec
call
sahf
mov
jo
lret
mov
push
add
icebp
test
xor
gs
cmpsb
icebp
sbbl
jno
or
mov
lods
or
adc
imulb
aas
mov
xchg
mov
ds
xchg
movsl
adc
cwtl
dec
cmpsb
sbbl
nop
insl
icebp
add
add
xor
sub
rorl
sbb
mov
and
mov
mov
or
cmpsb
fildl
outsb
rolb
sub
jg
add
mov
cltd
sub
mov
sbb
push
sub
inc
int
push
xor
negl
sti
mov
jl
push
sarl
mov
push
sbb
pop
int3
sahf
jo
xchg
test
pop
xchg
pop
outsb
fsub
inc
clc
mov
fs
mov
xorl
inc
mov
imul
out
pushf
xchg
cli
push
dec
aas
xor
dec
inc
cmp
lock
or
jge
adc
fwait
cmc
fsubs
xlat
xor
cmp
push
nop
push
imul
add
in
inc
data16
inc
mov
test
xlat
fwait
ret
jecxz
andb
rcr
fsubl
lods
movsb
and
loopne
or
dec
push
push
xchg
inc
sbb
insb
pop
les
mov
push
jb
xchg
in
xchg
sbb
imul
mov
ds
adc
adc
mov
push
aad
jb
nop
xlat
shlb
push
mov
jb
ja
dec
mov
repz
rcrl
in
or
lea
scas
scas
mov
pop
jle
sbb
dec
addl
pop
pop
fistpl
mov
inc
and
push
das
repnz
or
sub
int3
and
add
mulb
gs
mov
dec
pop
mov
cmp
cld
dec
test
mov
mov
lock
loop
loop
mov
sub
cli
aam
repnz
ret
fwait
out
es
out
fldl
dec
sarb
mov
xor
push
add
lods
sti
pop
lods
mov
xchg
jbe
and
ljmp
add
test
sub
sbb
push
xor
mov
pop
add
cs
frstor
jns
xchg
adc
shll
pop
pop
jl
jg
cmc
xchg
out
icebp
faddl
push
outsb
pop
sbb
int
lcall
insb
outsb
xor
jno
mov
sub
lods
test
call
inc
dec
testb
or
roll
push
inc
jge
add
push
negl
leave
subl
jns
jb
in
xchg
mov
mov
call
pop
dec
in
addr16
push
jp
out
push
adc
mov
pop
mov
test
mov
sub
xchg
inc
xchg
jmp
in
lret
pop
adc
test
lahf
lret
cmp
scas
stos
pushf
mov
and
neg
outsb
jnp
enter
mov
in
or
pusha
jno
and
int
pop
ret
enter
imul
jae
icebp
call
push
popf
cmovns
mov
mov
fidivrl
push
xchg
xlat
jp
sbb
xchg
into
imul
cmp
push
sbb
jno
mov
sbbl
dec
push
lds
insb
xor
stc
sti
or
push
sti
aas
aaa
or
or
or
add
fcoms
imul
pop
xor
sbb
or
ret
lds
cwtl
shrb
scas
loope
pop
and
xor
push
cmp
jp
movb
sbb
cmp
daa
cmp
push
ljmp
dec
push
sbb
insl
xor
sub
ss
icebp
jno
push
aam
jne
aad
dec
push
add
inc
arpl
mov
in
pop
mov
xor
jmp
dec
push
push
sub
sub
icebp
stos
cmp
jo
daa
sub
and
rolb
add
inc
jns
daa
leave
add
cmp
xor
cmpsl
ds
xchg
outsb
sub
xchg
in
not
dec
pop
and
lcall
in
fcoml
or
outsb
and
cmp
pop
lret
xor
inc
mov
mul
les
add
and
lds
sub
xor
sub
cmpsb
mov
fidivl
lret
fld
adc
xchg
mov
xor
pop
fsubl
sahf
adc
incl
cmp
or
aad
xchg
push
push
fs
adc
pop
ss
aaa
jecxz
cmpsb
sbb
fsubs
fcompl
out
repnz
cli
mov
xor
pop
mov
push
sub
xchg
cmp
into
idiv
jnp
lahf
pop
mov
fisttps
adc
add
push
mov
add
cmovae
sbb
cld
xlat
sub
int3
mov
stos
data16
sti
mov
outsl
dec
xchg
loopne
or
dec
jge
pop
inc
xor
outsl
fxtract
iret
repnz
imul
cmpsl
stc
jl
mov
and
pop
xlat
sub
sbbl
jmp
lcall
inc
pop
inc
nop
mov
jo
movsl
or
dec
sbb
lods
je
dec
jecxz,pt
or
or
cmpsb
adc
mov
bnd
sbbl
jnp
pop
pop
sub
imul
rcl
mov
jecxz
sbb
ret
aad
shl
pop
es
int
std
das
push
mov
jne
jecxz
cmp
icebp
aad
jo
jns
jmp
mov
nop
mov
lock
in
pop
add
sarb
bnd
in
lods
ret
sub
es
adc
dec
mov
xchg
xchg
scas
sub
cmp
data16
add
mov
nop
xlat
mov
xor
repz
cltd
bound
test
mov
rolb
lret
mov
clc
xchg
fstps
xchg
ret
pusha
sub
mov
add
out
out
push
add
xchg
xor
cltd
ljmp
xor
cmp
mov
fisubrl
test
lret
cmp
cmpsb
inc
pusha
btc
mov
push
in
in
add
and
mov
pop
xchg
or
jno
or
inc
inc
sbb
xchg
mov
mov
or
pop
add
push
addr16
cs
mov
xor
mov
lret
dec
imul
mov
jbe
fucomip
stos
aas
xchg
rorb
outsb
ret
mov
fisubrl
sub
lcall
stos
jge
popa
imul
adc
in
xchg
jl
or
sub
sub
ffree
mov
aas
loope
jg
jae,pt
mov
aas
popf
ss
lea
loopne
cmpsl
fidivl
arpl
xchg
cs
mov
jb
mov
scas
dec
mov
rclb
loope
mov
aam
sbb
push
inc
xor
cltd
xlat
mov
push
xchg
out
or
add
pop
or
repnz
data16
pop
popa
pop
xlat
fisubrs
imul
inc
inc
sub
and
sbb
aas
pop
jb
or
cltd
push
mov
shll
mov
jge
fs
shl
andb
mov
cmp
mov
jl
test
ja
push
add
mov
jo
pop
cmp
cmpsl
negl
push
lret
xchg
push
inc
repnz
arpl
aas
in
enter
pop
sub
loope
inc
stos
sub
jbe
cmp
or
movsl
and
and
sbb
sbbb
sbb
test
loop
mov
pop
inc
scas
pop
pusha
push
movsl
js
adcl
mov
mov
inc
sub
ljmp
mov
shlb
rolb
dec
bound
mov
cmc
pop
and
arpl
fs
and
inc
push
jge
cltd
push
lret
pop
shrl
push
sbb
popaw
test
fldcw
outsl
sbb
gs
mov
stc
dec
jno
or
sti
ss
mov
loope
aad
pop
int3
or
mov
xchg
inc
cmp
xchg
into
fidivrl
scas
xor
in
pop
js
dec
adc
es
dec
inc
add
ja
data16
pop
lods
sbb
mov
sbb
hlt
mov
push
loope
sti
cmp
inc
repnz
repnz
loope
loopne
sbb
inc
mov
and
test
cs
xchg
push
jmp
cmp
repnz
lahf
push
negb
leave
sub
sbb
ds
aad
test
pop
aas
inc
in
pop
xor
cmp
je
clc
inc
jecxz
cmp
lea
sub
cmp
mov
or
jle
xor
in
dec
dec
jne
jae
pop
inc
jb
cs
outsl
das
mov
dec
mov
lcall
shll
aad
imulb
xor
xor
mov
sub
inc
cld
movsb
test
lret
jge
add
repz
cmpsb
mov
cwtl
lock
pop
pop
and
cmpsl
sub
and
mov
cld
ret
mov
loopne
insl
xor
jecxz
mov
sub
add
xchg
jnp
shrl
mov
fldt
loope
and
push
sete
add
sbbb
dec
push
mov
movsl
xor
fisttpll
fnsave
and
iret
int
xchg
and
mov
rdtsc
or
cltd
stos
shr
out
mov
jl
jns
mov
and
xor
or
xor
je
or
mov
mov
dec
cwtl
push
push
test
aas
jp
stc
fmuls
dec
fsubrl
push
inc
imul
fimuls
adc
adc
push
mov
lret
fcomp
add
add
xchg
pusha
bound
sbb
in
ds
xchg
out
xorl
mov
lret
aad
add
dec
mov
mov
push
int
dec
sbb
dec
xor
mov
xlat
int
pop
xor
movsl
or
or
cmpl
out
ret
leave
sub
xchg
inc
imul
aas
stos
adcb
and
aad
insb
int3
int
jnp
inc
sbb
inc
in
xchg
cmpsl
or
iret
mov
jmp
inc
mov
int
pop
cltd
adc
dec
push
sbbb
rorl
inc
pop
and
aaa
xchg
test
gs
je
imul
push
push
stos
cmc
ja
sti
fs
adc
repnz
jae
leave
int3
sbb
in
clc
arpl
mov
or
cld
sbb
or
mov
add
add
inc
out
sbb
mov
add
jno
xchg
shlb
scas
lahf
xchg
les
mov
cmp
imulb
sbb
push
fisubrl
jge
dec
and
mov
pop
daa
aaa
cs
cmp
cmp
jno
add
lret
xor
data16
xor
faddp
jp
das
cld
cld
push
jp
mov
xchg
push
mov
subl
push
enter
pop
imul
ss
sub
pop
rolb
ds
push
stos
movsl
sub
outsb
and
jbe
ret
jecxz
xorb
sbb
mov
dec
sbb
ficomps
imull
insl
mov
pop
lcall
jne
cmpsl
or
sub
popa
and
jmp
movsl
mov
jg
lret
in
mov
adc
mov
shlb
repz
int
mov
push
negl
fmul
push
stos
inc
inc
or
mov
pop
sbb
out
test
pop
or
push
outsl
divl
loop
in
stc
add
fs
mov
push
ss
ja
fcomps
pop
cli
out
add
xor
in
gs
lods
or
or
mov
add
xor
adc
imul
mov
lds
mov
mov
inc
testl
cmp
sub
subl
imul
dec
test
loopne
ds
inc
push
push
adc
bound
mov
mov
push
or
sbb
xchg
push
or
inc
adc
jae
pushf
jb
inc
jmp
cmpsb
ljmp
bound
aad
pop
int3
nop
push
adc
rorl
out
je
clc
out
jecxz
scas
push
adc
lds
sbb
mov
lods
xchg
mov
inc
outsl
or
pop
nop
xor
pop
mov
in
or
jo
das
cs
mov
push
dec
and
jl
roll
or
jge
inc
cwtl
jmp
fsubs
pop
js
icebp
cmp
cld
iret
ret
xor
in
push
pop
mov
std
je
jmp
xlat
lock
addr16
jl
sub
push
pop
aam
testb
cmp
cmp
or
in
xchg
mov
inc
popa
arpl
and
shrl
mov
and
mov
dec
sub
jnp
jge
rolb
test
add
push
jle
and
lcall
xchg
imul
data16
pop
jge
jecxz
ret
out
sbb
push
xchg
rcl
push
call
stos
adc
or
in
mov
mov
or
jmp
test
dec
enter
dec
dec
iret
adc
inc
mov
movsl
or
jno
fwait
sarl
push
sub
add
push
jg
out
mov
jns
pusha
outsb
in
xchg
jge
xor
xor
inc
sbb
mov
xchg
ljmp
jnp
jp
xchg
mov
enter
imul
ret
fbld
mov
lods
jmp
dec
mov
or
aaa
out
mov
sub
nop
bound
push
clc
mov
stos
cmc
dec
enter
jns
aaa
push
insl
jnp
lods
or
stos
sbb
pusha
inc
mov
jge
cld
pop
jle
cmp
jae
daa
rcll
emms
lea
cmp
inc
in
xchg
or
sbb
and
sahf
add
push
repnz
mov
jp
test
hlt
das
fdivrs
inc
xchg
and
or
ja
divb
dec
insl
xchg
or
add
xlat
pop
mov
insb
cmp
clc
lret
jge
inc
scas
jle
pop
and
call
movsb
push
mov
call
jge
adc
push
daa
ss
inc
cmp
pusha
shlb
test
pop
dec
movsb
js
push
enter
arpl
jo
cmp
inc
push
dec
ret
subb
jmp
inc
adc
cmpsb
std
or
pop
enter
pop
test
dec
push
pusha
dec
loope
cmp
std
mov
ds
rolb
push
mov
test
sbb
add
shrl
fists
pop
scas
jle
js
xchg
mov
sahf
out
pop
lcall
neg
push
outsb
test
mov
repnz
shr
in
jg
push
sub
shrl
loop
mov
stos
fidivl
int
das
inc
sub
gs
lret
inc
fstps
sbb
std
sub
cli
ljmp
and
in
mov
mov
push
add
cmp
push
scas
jmp
adc
push
xor
inc
imul
nop
insl
das
or
out
into
mov
imul
lock
int
mov
rclb
bound
int3
adc
int
add
ds
out
xor
xchg
jae
sub
sub
sti
cwtl
jmp
sub
mov
emms
lods
dec
lcall
fstps
lds
xchg
lock
sbb
push
dec
push
popf
jg
pop
lock
adc
enter
shlb
lds
mov
adc
shr
aas
andb
dec
jg
lret
je
dec
clc
jecxz
addr16
push
mov
lea
dec
call
daa
iret
mov
in
addl
sbb
push
mov
pop
inc
lret
cmp
repz
mov
das
outsb
jecxz
mov
or
and
dec
inc
rcl
cltd
pop
divb
adc
cmpsb
inc
cmpsl
xor
imul
icebp
pop
adcb
cli
aad
lret
pop
rcr
mov
gs
out
pop
pop
pop
dec
push
shlb
clc
xchg
aam
cmc
or
xlat
push
sbb
mov
adc
xchg
hlt
fldl2e
jmp
ret
scas
lods
lods
cmpsl
ret
cmp
and
fisubl
push
and
cltd
pop
aas
fadds
cmp
rcll
clc
inc
jb
xchg
dec
mov
std
sti
sarl
out
xchg
stos
mov
jae
jge
lcall
jnp
decl
daa
xor
jle
xor
pop
lea
aaa
dec
inc
dec
imul
out
ja
fmull
dec
ret
inc
and
mov
outsl
push
into
scas
jns
mov
jg
out
inc
inc
lock
fsubr
gs
dec
xchg
in
aaa
loopne
test
addr16
xor
mov
jp
add
mov
pop
mov
pop
sti
icebp
dec
adc
jne
add
or
inc
dec
mov
jmp
sbb
sbbl
mov
pop
push
jnp
mov
xorps
jle
stos
push
test
insb
mov
mov
dec
in
in
xchg
xor
jp
iret
dec
cmp
arpl
inc
mov
push
pop
push
rorb
cmpb
or
dec
insb
dec
xchg
xor
jae
jae
lea
pop
scas
jbe
mov
adc
mov
repnz
daa
leave
mov
push
xor
inc
cwtl
sbb
or
repnz
aaa
pop
shl
or
in
add
mov
xor
out
mov
and
jg
jge
cwtl
fisubl
pushl
push
cmp
movsb
test
mov
jbe
in
jge
ret
cli
sbb
or
cmp
cmp
inc
adc
dec
adc
orb
mov
xor
xchg
lret
addr16
insl
xchg
dec
push
and
test
sub
fldl
sub
cmpsb
adcb
hlt
mov
enter
pop
out
movsl
push
cmp
loope
insl
fsubrl
iret
adc
movsl
cmp
ret
and
sub
xchg
inc
sbb
pop
inc
xor
dec
xchg
mov
jmp
push
lcall
mov
std
movsb
in
sub
out
clc
adc
push
out
cltd
data16
adc
cmp
add
inc
int
mov
stc
not
outsl
push
lret
test
jo
inc
mov
sub
sbb
xchg
dec
sahf
lahf
test
test
es
loop
fmull
stc
jno
arpl
stos
adc
pop
cmp
adc
int
adc
in
push
pop
fdivl
sbb
mov
push
leave
or
fcmovne
xorl
xor
cmp
bnd
xor
call
mov
jecxz
jne
rcr
lods
into
clc
mov
xlat
test
jge
jmp
mov
push
dec
or
inc
jne
pop
pushf
addr16
testb
ret
xor
in
inc
jl
mov
rol
mov
mov
nop
xchg
mov
sub
xchg
fdivr
sbb
xor
loopne
adc
fstpt
enter
add
mov
sub
mov
and
popf
jb
xor
dec
imulb
or
sbb
sti
sbb
lea
gs
mov
jne
mov
dec
jmp
negb
cmc
fildl
cmp
inc
ret
js
inc
cmpsb
and
das
dec
pushf
push
mov
mov
jae
rcrl
loop
div
adc
popa
add
cmpsl
xor
es
xor
out
cld
and
pop
mov
lea
lock
pop
lret
pop
hlt
rorb
inc
cmp
ret
data16
es
sub
call
psraw
pop
dec
jle
xchg
je
lods
adc
xchg
mov
and
cmpxchg
sbb
cltd
mov
data16
jmp
push
add
push
fucomp
hlt
sub
andb
xchg
sbb
mov
pop
rorl
mov
xchg
dec
xchg
fs
mov
gs
call
jne
or
xor
fdivr
mov
cmp
dec
int
and
ja
movsb
cmp
negb
or
test
xchg
push
jno
lods
add
lea
mov
imul
jns
fsubrp
in
xor
in
test
lock
xchg
mov
jp
popa
jno
xchg
cmp
mov
pushl
lahf
add
mov
jae
fbld
xchg
push
cmpb
dec
mov
xchg
in
loop
sub
inc
sub
xchg
push
jbe
lret
stos
fcmovnu
push
and
out
or
les
jle
adc
in
mov
pusha
js
jbe
test
cs
sbb
jnp
inc
stos
int
jae
adc
push
xchg
sbb
popf
rorb
mov
fadd
xchg
add
sbb
stc
push
imul
pop
push
or
adc
jp
and
test
arpl
adc
insl
mov
mov
add
dec
je
add
loopne
sbb
push
ffreep
push
mov
xlat
scas
cmp
add
jo
stos
cmp
insb
or
push
pop
outsl
jbe
fidivs
mov
mov
enter
lcall
mov
mov
mov
jo
insl
jne
mov
add
test
notl
and
enter
pop
es
nop
loope
les
dec
aam
cmp
mov
movsl
aas
lock
aas
adc
loopne
cltd
subb
or
xor
xor
sbb
aas
pop
cld
cmp
pop
pushf
popf
or
mov
popf
push
inc
push
sub
loope
adc
mov
mov
xchg
mov
lcall
cmp
lods
int
notb
sub
mov
lret
ret
roll
lock
sbb
sbb
cs
inc
push
jb
or
outsl
xchg
cltd
push
stc
sub
fs
scas
popa
adc
test
xchg
loop
jmp
jae
out
pop
stc
cli
xchg
xor
shrb
mov
iret
into
inc
div
subb
cmpsb
or
hlt
push
dec
adc
inc
enter
enter
push
add
xor
jae
lods
mov
mov
xlat
adc
sar
mov
ret
sti
test
jle
dec
gs
lds
inc
and
dec
pop
inc
out
pop
pop
lret
les
int
xchg
jbe
xchg
int
and
fwait
lock
pop
push
push
sahf
adc
outsb
pushf
jae
loopne
repz
mov
push
aad
rcll
rol
jb
and
mov
imul
jecxz
mov
mov
call
movsl
mov
orl
cld
pop
pop
mov
sbb
pop
xor
mov
jbe
adc
in
and
outsb
outsb
imul
inc
mov
jb
jle
sbb
adc
mov
or
pop
cld
push
jbe
lret
cmp
pop
mov
xchg
repz
push
lahf
pop
pushf
hlt
aas
rcrb
sub
leave
aam
out
pushf
ret
cmc
popf
inc
es
insl
iret
andb
inc
daa
pop
ljmp
xor
jge
xchg
mov
andl
lock
mov
adc
faddl
mov
negl
xchg
pusha
cmp
lods
fisttpll
mov
clc
mov
jnp
sbb
mov
pop
jle
imulb
inc
adc
sbb
add
clc
xor
faddp
or
xor
in
push
mov
cmp
push
push
test
fldl
dec
test
gs
push
lret
sub
fwait
pusha
pop
clc
push
adc
pop
add
test
hlt
out
add
ja
add
icebp
in
cmpb
pushf
inc
mov
adc
sub
stos
add
addr16
bound
jp
je
mov
add
sti
jne
mov
mov
dec
fmuls
iret
mov
and
filds
push
into
jmp
scas
inc
add
test
sub
subl
jae
dec
xor
pop
insb
js
cmpl
or
xor
pusha
adc
iret
pop
icebp
test
sbb
pop
and
inc
mov
shlb
sbb
pop
xchg
pop
popf
stc
leave
mov
ljmp
fisubrl
dec
push
sbb
and
scas
cmp
ret
fiaddl
adc
lahf
mov
jae
or
icebp
fdiv
adc
arpl
popa
and
call
daa
fisttps
lds
pop
add
fcmovne
in
xor
das
cmpsb
lds
mov
out
and
daa
and
ror
and
into
xchg
jbe
dec
cmpsb
jge
int
sbb
cmpsb
daa
xor
cmp
scas
push
jl
bound
icebp
mov
push
jno
fidivs
dec
and
lahf
stos
inc
pusha
push
jp
test
ret
inc
mov
aaa
fs
ret
enter
pop
xchg
push
nop
mov
test
jge
cmp
test
stc
adc
inc
dec
mov
aas
dec
cmpb
hlt
add
bound
xor
dec
lock
and
pop
adcb
cmp
push
xchg
in
mov
push
mov
sub
movb
mov
jg
adc
mov
mov
int
xlat
daa
adc
int
das
xor
cmpsl
push
mov
push
pop
insb
lret
call
mov
fbstp
js
into
sahf
in
xor
xor
pop
mov
stc
fildll
adcl
leave
test
cmp
mov
cli
mov
mov
add
sub
lret
dec
mov
add
call
adc
jmp
mov
add
jns
data16
jl
lods
pushf
inc
testb
mov
dec
mov
sub
fsubrs
mov
clc
mov
loopne
ret
dec
mov
dec
inc
mov
xchg
pushf
les
hlt
outsb
xchg
cmp
fstpt
or
pop
pop
or
aam
pushf
push
pop
outsl
jmp
in
inc
cs
in
out
aad
pop
notl
pop
pusha
lahf
jb
push
stos
dec
in
mov
pavgw
daa
stc
pop
sbb
lea
shr
mov
lea
and
jg
jecxz
cli
fninit
enter
sti
sbb
xchg
cmp
inc
das
or
data16
sub
mov
or
jns
add
sbb
pop
cwtl
xlat
cmp
mov
fucomip
sar
add
lret
test
or
mov
inc
cmp
test
and
das
sbb
sub
ret
cmpsl
jmp
clc
es
mov
add
mov
xchg
test
loope
inc
aam
popa
mov
add
mov
lret
mov
outsl
mov
inc
cltd
lods
call
test
sbb
fnsave
pop
ss
idivb
cmpsb
xchg
mov
push
mov
or
sub
stos
jle
pop
out
cmpsb
hlt
or
imul
es
sub
xchg
jp
or
test
xor
push
inc
mov
inc
int3
xor
inc
add
in
test
mov
mov
inc
ljmp
fwait
fimull
add
ret
mull
out
loop
aam
xchg
adc
or
xchg
adc
push
je
jecxz
je
data16
xchg
xchg
into
jp
cmp
mov
jmp
mov
dec
mov
cs
mov
ljmp
rcl
jmp
jp
dec
orl
out
or
decb
jl
outsl
push
hlt
jb
stos
sarl
and
das
push
jnp
jmp
jle
inc
xor
imul
pusha
scas
cmp
iret
push
outsl
ret
adc
repnz
rcl
jae
bound
push
sbb
clc
mov
fidivrl
jp
cmp
sbb
and
imul
scas
lahf
lcall
inc
and
mov
mov
sub
pop
leave
sub
loop
inc
mov
dec
push
push
inc
sbb
sub
int3
fcoms
pop
jnp
add
jg
cmpsb
lds
loopne
jmp
cmp
and
lret
sub
shl
fwait
sub
jge
daa
mov
xor
pop
gs
stc
mov
mov
jl
pop
inc
dec
pusha
stos
fwait
push
push
jg
stos
jo
out
cs
lret
push
cltd
lret
xchg
sub
push
lea
ret
fadd
in
test
in
pop
movsb
cmpsl
jmp
jle
fndisi(8087
lret
sub
sti
and
or
ds
in
dec
or
and
and
shr
mov
dec
das
inc
add
in
xor
adc
jmp
cmp
sbb
xchg
mov
fwait
lcall
sub
incb
sub
mov
fcomps
pop
and
jbe
jo
cmp
mov
gs
call
int
dec
adc
and
notl
sbb
adc
shll
sbb
jle
test
mov
push
outsl
push
sbb
mov
fs
hlt
mov
ss
jecxz
aaa
jb
fadds
pop
out
mov
aam
mov
sub
or
xor
notl
pop
xor
aaa
adc
jecxz
adc
mov
adc
cli
dec
lods
cmpl
xlat
xchg
fs
hlt
add
cwtl
and
sti
push
mov
inc
insl
fbld
or
jnp
sub
inc
mov
out
jne
stos
sub
xchg
cld
scas
rcrl
inc
repnz
cltd
jno
pop
mov
push
mov
jmp
sub
cs
les
nop
scas
pop
imul
lock
dec
pop
out
je
out
jecxz
out
dec
and
inc
enter
and
repz
sbbb
mov
stc
cmpl
pop
inc
pop
rorl
inc
pop
mov
inc
testl
mov
in
cld
and
fcoml
or
dec
idivb
push
cwtl
xchg
mov
cmpsl
xor
mov
mov
cltd
cld
cmpsb
data16
pop
les
loop
pop
lock
fwait
outsb
pop
fisubrl
sub
adc
inc
aam
cmp
ret
adc
es
xor
popf
test
xchg
ret
imul
fwait
lods
push
imul
and
ret
bswap
lahf
xchg
add
rclb
test
xchg
jl
dec
int3
data16
daa
clc
xor
ficompl
leave
cmp
cmp
cmp
or
int
and
ficoms
fbstp
inc
cmp
xor
dec
hlt
or
loop
xor
jbe
in
adc
dec
add
test
and
ja
adc
inc
adcl
ja
mov
and
add
fiadds
out
roll
and
lea
push
sbb
lods
adc
pop
and
ljmp
pop
sarl
js
dec
sahf
jns
jne
pop
scas
mov
ret
addr16
stos
push
xchg
xchg
enter
daa
mov
inc
mov
popa
out
inc
jge
imull
push
xor
stos
xor
xor
mov
mov
jle
push
fxam
jb
adc
dec
iret
lds
stc
pop
xchg
and
inc
int3
push
push
jae
lock
push
fdivp
pop
popf
inc
push
mov
pop
add
ficoml
lods
mov
pop
repnz
scas
add
push
push
and
int
int
lods
repnz
push
hlt
cmpsb
xchg
lret
dec
sbb
jns
or
ficomps
aaa
add
das
add
dec
movsl
pop
stos
ljmp
fwait
push
sbb
add
call
and
and
cmp
xchg
movsb
aad
and
notb
xor
sbb
sub
xor
jne
hlt
mov
pusha
jl
daa
inc
dec
iret
pusha
out
aaa
mov
xor
add
cmp
insb
dec
fsubrl
pop
lcall
fistpl
mov
mov
nop
repz
enter
pop
jecxz
mov
mov
loope
mov
mov
mov
test
loopne
adc
std
adc
jecxz
test
jg
pop
add
mov
je
scas
fmull
jno
in
js
pop
sub
sbb
out
lcall
jo
test
aas
and
insl
sbb
xor
pop
mov
xchg
mov
stos
mov
dec
popa
and
pop
movsb
push
inc
mov
int
dec
sbb
popf
xor
not
scas
pushf
lret
stos
ror
lods
mov
test
sahf
sub
xor
imul
outsl
xor
mov
stc
dec
movsb
pop
fcoms
ss
sbb
cmp
icebp
mov
adc
mov
and
xor
cmpsl
cmp
sub
or
add
loopne
xlat
push
movsb
xor
pop
xor
adc
int
stos
lret
pop
mov
xchg
lods
push
jno
hlt
icebp
xlat
shrb
or
add
sti
add
out
out
jbe
mov
dec
jne
mov
fldcw
std
repz
adc
mov
loopne
cmp
lods
sbb
pop
outsl
xlat
and
cmp
pushf
je
mov
shrb
cs
jle
js
xchg
nop
mov
int
inc
flds
dec
shrb
je
fidivrs
sti
lret
and
mov
pop
arpl
movsb
into
popl
mov
lods
pop
pop
je
jns
fistpll
movl
cmpsl
in
repnz
mov
sbb
rcrl
and
call
fistpl
xor
fidivrl
lea
dec
cld
rcrl
mov
daa
jge
test
or
stc
mov
aad
pop
sub
rclb
aam
es
add
insl
test
lahf
dec
xchg
push
push
xchg
add
ljmp
and
mov
and
mov
fadds
mov
sub
or
cltd
sbb
mov
push
push
push
adc
out
fldl
adc
jl
adc
pop
negb
dec
stos
pop
jo
out
insb
pop
xchg
push
int3
push
and
jmp
xor
dec
mov
xor
sbb
xchg
jl
imul
xor
add
inc
sbb
xor
or
in
and
push
std
and
add
stc
stos
add
mov
loopne
jns
mov
in
fs
xchg
jl
cmp
pop
fcompl
addr16
jle
jp
out
mov
bound
mov
inc
addb
mov
mov
fnstsw
dec
mov
es
xchg
shl
lock
sub
jb
cmpsl
push
jb
imulb
shll
inc
jnp
and
jle
dec
shl
jns
xchg
pusha
in
push
iret
and
rol
cli
addr16
enter
xlat
sub
jae
ret
mov
nop
or
inc
fmul
xor
enter
out
mov
xchg
imul
outsb
scas
gs
js
pushf
pusha
aaa
adc
das
or
insb
test
leave
or
mov
add
mov
or
pop
lds
sahf
mov
int3
scas
pop
jno
fldenv
adc
and
rcrb
ja
mov
lock
cmp
mov
or
jbe
dec
test
sbb
or
cmp
decb
jl
push
dec
fisttpl
or
mov
xchg
push
aas
push
ret
faddl
push
xchg
cmpsb
pcmpeqw
in
ja
call
pop
and
push
adc
hlt
jno
cmp
mov
mov
and
in
xor
and
mov
mov
xor
push
push
pop
cwtl
pop
adc
mov
mov
pushf
push
sti
fcoml
sub
outsb
sahf
fstl
push
aaa
mov
mov
dec
mov
movsb
in
mov
jg
and
cmp
dec
dec
scas
int
xor
notl
lahf
test
arpl
mov
sbb
jnp
test
jge
xchg
dec
loop
aam
stc
add
cmp
cmp
aaa
sbb
test
fdivrs
sub
cli
push
add
cmp
add
or
int3
into
repnz
push
xor
outsl
lret
jg
adc
imul
sub
add
push
jp
push
pop
xchg
mov
dec
mov
sub
fisubs
outsb
test
decb
push
sub
mov
mov
aam
ja
fcomi
adc
jecxz
cmp
cld
repz
fs
sbb
mov
add
and
sbb
xchg
xlat
ret
pushf
pop
mov
adc
pop
dec
rcl
mov
aas
dec
aas
cmp
lods
jb
add
dec
dec
xchg
mov
jecxz
dec
pop
sub
call
mov
xor
jmp
in
repz
mov
inc
data16
inc
sub
je
mov
push
pop
push
and
sbb
stos
inc
jl
inc
fwait
pop
std
push
xor
or
cmpsl
das
cmpsl
sarl
fs
push
cld
cld
cmpsb
adc
cmc
or
mov
movsb
hlt
lock
leave
shrb
push
mov
or
inc
ret
xor
roll
imul
dec
mov
adc
inc
mov
sbb
push
lods
sub
mov
fistpll
mov
mov
add
jns
cltd
push
test
mov
pop
rclb
mov
adc
cmpsl
aas
ds
adc
sbb
arpl
sub
loopne
dec
and
jecxz
mov
add
or
incl
add
xor
push
jl
lret
mov
dec
arpl
test
mov
insl
dec
je
jb
scas
jmp
lcall
adc
add
sbb
jg
scas
bound
sub
dec
cmp
sub
cmp
pop
mov
imul
movsb
add
cmp
jp
leave
pop
mov
lret
cmpsl
jp
mov
cmp
jne
fisubrl
mov
mov
repnz
xchg
cmp
push
jle
fstpt
cmc
rclb
lds
push
or
rclb
or
sbb
in
and
sarb
jecxz
sbb
dec
in
push
adc
scas
push
adcl
pop
pushl
inc
loop
dec
jae
xlat
xchg
push
sbb
popf
xchg
lcall
push
sbb
fidivrl
fcoms
jne
cmp
daa
jns
scas
enter
jecxz
rcll
rcll
mov
mov
pop
pop
hlt
cmp
and
in
js
stos
popa
sbb
push
addl
scas
add
mov
pop
or
xchg
fisubrs
fcmovnb
test
sbb
cmp
dec
icebp
fdivrs
scas
test
movsb
jmp
notl
das
inc
jbe
mov
insw
mov
das
cmpsb
arpl
pop
push
ja
push
lcall
lods
sbb
std
insl
scas
xor
mov
and
adc
imull
out
in
test
stc
or
pop
in
pop
imul
popa
and
loope
xchg
jno
pop
imul
test
and
inc
dec
or
or
sbb
test
pop
xor
aaa
sub
xor
mov
and
pop
pop
fstps
or
cmp
call
sub
xchg
outsb
add
mov
push
ja
shr
fbstp
jg
cwtl
xor
add
mov
or
and
pushf
cwtl
push
dec
push
xor
add
outsl
sub
addr16
dec
sar
add
sbb
jno
movb
pop
sub
xorb
mov
xor
out
rcr
adc
pop
sub
je
push
out
stos
cli
xchg
mov
cmp
test
xchg
aad
leave
cmc
cmp
xor
int3
pop
cmpsl
fcoml
daa
xchg
insl
imul
loop
add
sub
ljmp
sub
int
mov
fnstenv
sti
popa
iret
pop
sub
lods
shl
dec
xor
dec
xor
inc
out
inc
test
sbb
lahf
out
cmp
aaa
cmp
xchg
inc
in
icebp
sbb
hlt
aas
out
push
adc
pop
aad
hlt
adc
jne
pushf
lret
jmp
jne
jp,pn
cmc
out
inc
insl
xor
fucomi
cmpsl
jb
arpl
je
lret
jbe
repz
sub
std
sub
call
pusha
xor
addl
mov
lcall
mov
or
mov
xor
adc
daa
dec
testb
pop
cwtl
ret
lcall
repz
cmp
adc
daa
test
mov
je
aaa
loop
lock
jb
jnp
movaps
jno
aam
sbb
ret
rolb
push
xor
fistl
adc
popa
sbb
dec
lods
xchg
xchg
sahf
mov
push
inc
fbld
xchg
das
jns
jmp
mov
cltd
mov
in
lret
mov
movsb
mov
fst
xlat
jmp
xchg
repnz
add
pop
aad
mov
cmp
xchg
xchg
clc
cmp
push
xlat
mov
sbb
fdivp
nop
or
xor
xchg
dec
aaa
xlat
scas
test
fs
ja
es
sbbb
dec
or
xor
dec
ja
push
inc
cli
scas
add
das
mov
out
pop
stos
jecxz
fnstsw
jns
mov
in
cmc
mov
lods
sub
jbe
pusha
mov
push
jg
mov
jp
pusha
push
mov
push
je
rorb
mov
inc
xchg
jne
xor
mov
mov
xchg
adc
inc
jmp
cmpsb
pop
cld
addl
sub
push
fwait
ja
lea
and
pop
dec
insb
cltd
fdivrs
push
jle
and
in
xchg
pusha
sbb
mov
ret
lcall
iret
imul
fnsave
popf
mov
mov
sub
cs
push
mov
and
imul
lret
scas
sub
adc
pusha
stos
repnz
leave
sti
cmpsb
cmp
xchg
cmp
and
cmp
mov
shrl
dec
push
aaa
inc
add
add
int3
test
clc
pop
aaa
pop
or
sahf
lds
out
rclb
scas
jbe
and
loop
mov
cmp
push
mov
cmp
jge
jp
sbb
in
mov
cmp
das
outsb
jl
andl
sbb
lods
push
loopne
pusha
xor
adc
pop
lahf
inc
xor
in
scas
test
mov
int3
or
in
inc
jp
enter
pop
mov
in
and
ret
test
cmp
cmp
mov
jae
imul
or
sbb
popf
sbb
clc
add
xor
xor
lahf
adc
out
pop
js
repz
xchg
or
mov
movsb
popf
fsubrl
add
outsb
fs
int3
adc
les
mov
jge
mov
or
and
mov
mov
push
pushf
sub
roll
js
leave
rcll
mov
arpl
lea
xor
mov
outsl
into
push
xor
mov
mov
adc
cld
mov
sbb
adc
shrl
shl
lods
in
mov
imul
pop
adc
into
mov
ret
enter
scas
shrl
cli
inc
xor
jg
adc
in
lcall
js
lods
pop
mov
mov
fst
xchg
stos
sub
bound
inc
xor
sar
xor
mov
and
out
mov
inc
add
jbe
push
pop
add
repnz
repz
mov
ficompl
das
xlat
mov
xchg
mov
fstl
inc
cmp
pushf
jne
dec
jmp
rorl
dec
sub
nop
sbb
lods
jb
testl
jecxz
mov
loopne,pn
lea
call
pop
jne
mov
stos
adcl
rclb
pop
pop
pop
lods
inc
je
loop
arpl
push
das
data16
mov
mov
dec
jle
enter
pop
add
push
cmpsl
sub
cmp
icebp
adc
add
push
aaa
dec
roll
mov
incb
out
push
inc
rorb
clc
sub
aaa
adc
sahf
mov
sbb
xlat
and
rorb
pop
pop
xchg
mov
repz
popa
xor
ret
lods
decl
mov
cmp
mov
mov
dec
pop
push
add
out
sbb
aad
aas
mov
xor
pop
jnp
lock
clc
sbb
je
sbb
into
iret
pop
andb
sub
mov
xchg
popf
mov
push
mov
cmp
fistl
or
cmp
mov
dec
popa
and
jbe
test
mov
push
dec
pop
mov
orb
and
out
cmp
add
cld
out
cmp
pop
leave
jns
ret
sub
ds
xchg
cld
filds
mov
push
nop
pop
or
sarb
lock
push
sub
ss
sub
xchg
jne
in
mov
fistpll
stos
popa
jmp
jno
jbe
adc
cmp
xchg
stos
fsubrl
arpl
push
das
mov
stos
add
mov
insb
cli
inc
cmp
mov
jle
std
mov
mov
mov
repnz
inc
jnp
ret
mov
inc
clc
mov
rcll
adc
popf
jecxz
cwtl
mov
push
ds
leave
ja
jmp
in
lret
andb
mov
push
jno
hlt
adc
outsl
repnz
leave
jb
movsl
hlt
rcrb
test
popf
int3
inc
mov
testl
incl
pop
add
aas
inc
int3
outsl
jo
pop
pop
fisubrs
dec
imul
push
inc
or
jne
les
sbb
fisubl
ja
jbe
pop
bound
dec
jo
faddl
fisubs
sub
dec
sbb
jl
lahf
lods
dec
mov
push
push
ret
idivl
jo
push
scas
lahf
gs
xor
gs
imul
and
cwtl
pop
in
sub
or
andl
or
cmp
fiaddl
cmp
ds
dec
xor
jo
xchg
and
jns
xchg
subb
xlat
sbb
mov
pop
pop
shll
adcb
mov
push
gs
stc
cwtl
pop
adc
pop
push
mov
sub
sub
and
sub
jecxz
test
jg
jae
mov
aaa
loopne
lock
mov
sbb
jno
push
leave
pusha
int
cmp
test
mov
mov
xchg
sbb
popf
outsb
test
inc
sub
lods
sub
loop
fsubs
stc
sub
fs
adc
cmpsb
ss
push
cmp
ljmp
cli
in
aam
xor
sub
cmp
js
or
dec
aam
fwait
in
cmc
repz
jne
and
add
add
pop
add
add
and
fnstcw
fsubrl
loopne
rcl
into
jmp
sub
sbb
sti
mov
test
gs
pop
and
clc
or
icebp
aaa
jecxz
adc
sbb
mov
std
dec
aaa
repz
lahf
xchg
lret
pop
pop
sbb
push
lret
adc
xor
push
or
xchg
push
gs
and
adc
jl
hlt
cs
inc
inc
aad
ret
push
testb
sbb
jb
mov
sub
xchg
jecxz
shl
xor
adc
xchg
mov
scas
mov
dec
gs
movsl
fistps
sbb
inc
sti
inc
inc
inc
jle
pop
das
inc
repz
mov
ja
inc
and
jo
rcll
pop
lret
inc
push
cwtl
cmp
push
cmpsl
sub
cmpsl
mov
jmp
mov
outsl
mov
sub
sbb
jmp
shlb
mov
or
imul
mov
and
movsb
dec
jg
inc
xchg
adc
stc
popa
dec
lods
or
mov
pop
jo
and
leave
jle
pop
push
xor
cltd
test
test
sub
mov
add
sbb
xchg
frstor
out
nop
clc
pop
je
xchg
sbb
pop
ror
cmp
mov
out
clc
xor
xchg
xchg
mov
jmp
int3
jg
test
or
cmpsl
mov
push
push
testb
jl
jae
ja
jb
dec
dec
cmpsb
jno
je
mov
fwait
test
mov
dec
add
sub
sbb
iret
bound
out
jns
je
in
repz
dec
fxch
mov
negb
leave
leave
pop
enter
mov
dec
mov
fcmovbe
mov
decb
dec
or
or
fistps
xchg
mov
adc
add
xchg
cmp
cmp
out
es
jp
inc
or
rcll
ljmp
xchg
int3
insb
gs
xchg
jnp
ret
test
scas
in
test
ret
iret
mov
sbb
pop
movsb
mov
inc
add
xor
mov
push
lods
mov
mov
inc
aam
mov
xchg
jg
xchg
inc
pop
mov
imul
pusha
scas
icebp
enter
xor
pop
mov
mov
ror
hlt
sbb
pop
mov
and
jg
fldcw
daa
outsb
aaa
mov
mov
add
adc
pop
mov
pop
xchg
and
ficoms
rol
ds
or
mov
or
or
inc
cmp
dec
ret
push
xchg
add
jbe
clc
les
sti
movsl
sbb
xchg
xlat
cmp
jbe
jno
in
adc
jl
cmpsb
stos
divl
push
int
test
xor
test
dec
inc
cmovae
pop
jmp
adc
enter
pop
push
inc
cmp
loope
lea
mov
je
ds
push
xchg
movsl
ja
out
and
mov
inc
addb
sbb
aam
xor
sbb
jge
hlt
pop
xor
aas
js
xchg
jle
xchg
stc
jnp
and
lods
push
clc
adcb
adc
outsb
sub
sarb
dec
jg
out
mov
es
addr16
mov
movsb
mov
inc
jge
push
push
xor
cmp
cld
testl
sbb
mov
xor
test
adc
outsl
mov
psrad
stc
loopne
cmp
cmpsb
adc
lret
and
and
out
cmp
cli
pop
cmpsb
xor
popf
mov
into
jle
pop
cmc
mov
adc
pop
in
aaa
mov
mov
and
adc
sti
push
add
or
pop
outsl
sub
fisttpl
test
sub
pop
in
sbb
clc
sti
outsb
rcrb
gs
dec
imul
stc
int3
dec
push
mov
inc
daa
jns
fnstcw
sbb
jnp
xchg
mov
lcall
shr
xchg
push
jmp
adc
sub
pushf
lret
inc
jl
imul
aad
rcl
shrl
aas
mov
mov
divb
repz
xor
xor
adc
call
popf
xchg
arpl
cmp
push
or
fldt
mov
mov
sarb
cltd
lock
and
jmp
shr
outsb
mov
rorb
shl
dec
xor
stos
push
cwtl
hlt
mov
cmpsl
sub
push
mov
rolb
lret
mov
mov
mov
fwait
lock
pop
xchg
sub
shrl
fsubrl
in
ret
insl
jb
es
subb
cmp
ljmp
imul
lods
aad
and
cli
pushf
mov
jg
out
and
fs
xchg
invd
push
hlt
add
cltd
sub
push
pushf
mov
pop
fsts
or
inc
iret
aas
clc
xchg
pop
mov
sbb
sbb
and
push
stos
pop
mov
test
push
ret
xlat
jo
or
add
xor
inc
icebp
mov
push
das
cmp
test
fldenv
ja
dec
inc
inc
jnp
or
or
and
push
sub
lock
or
out
sti
aaa
bound
enter
lds
xchg
lcall
mov
addl
jp
pop
dec
mov
shl
mov
insl
sub
xor
sahf
call
fistpll
mov
mov
mov
stc
push
mov
xorl
out
popf
adc
jno
pop
mov
ss
out
frstor
inc
data16
insb
rcrb
fwait
jnp
xchg
stos
jle
mov
pusha
jmp
fmulp
pushl
ret
or
fstpt
aaa
jae
xlat
test
popf
xor
and
push
jae
fiaddl
jns
cltd
cmp
imul
jbe
push
push
dec
push
jmp
aas
stos
cmp
or
add
hlt
push
pop
xchg
inc
mov
push
or
shlb
jge
sub
add
leave
mov
inc
jp
pop
les
lahf
jbe
cmpsb
fnstenv
scas
adc
cmpsb
and
lods
movsb
pop
push
inc
push
mov
mov
jge
xchg
rcrb
push
in
daa
sub
cmp
push
mov
jl
push
inc
dec
imul
lds
cmpsl
gs
mov
test
pop
push
sbb
mov
sahf
jmp
in
cli
add
enter
pop
pop
add
push
jp
loope
sub
sub
cltd
out
shlb
adc
movsl
jle
and
mov
lret
aaa
aam
adcb
sbb
lcall
and
inc
ja
pop
pop
adc
cs
adc
aam
dec
sub
fsubrl
lods
cmp
inc
adcb
dec
outsb
jg
pop
mov
mov
jno
mov
xorb
push
mov
push
or
int
or
jg
clc
testl
rcll
mov
iret
fcomps
lock
inc
sahf
std
and
orb
adc
call
sbb
adc
dec
out
loope
call
fsubs
or
aam
push
cmp
xor
xchg
icebp
or
cmp
xorl
adc
sub
adc
add
jns
cmp
sbb
lods
aam
into
mov
shr
xlat
dec
and
sub
mov
aam
sbb
pop
jno
mov
or
int3
inc
cmp
insl
les
cmp
jae
loope
push
cwtl
rcrb
loopne
rol
jae
pop
mov
push
mov
jmp
cmp
jl
and
lahf
nop
lods
in
and
push
mov
jb
jmp
cmpsl
je
xchg
cmp
aaa
sub
lea
adc
push
lods
xor
dec
cmp
inc
fistpl
jl
inc
sbb
inc
or
push
das
add
into
mov
pop
testl
ja
std
push
jae
cwtl
scas
cmp
stos
push
mov
xchg
xchg
inc
cld
roll
lret
and
sub
mov
shl
iret
cltd
xchg
mov
push
rol
sbb
sub
popa
mov
decl
push
es
pop
out
insl
out
cwtl
or
xchg
add
jl
lret
vmwrite
jecxz
lods
inc
insl
insb
mov
mov
insl
adc
addr16
dec
add
jecxz
xor
test
mov
jo
push
mov
xchg
imul
rcrb
xchg
sub
scas
mov
jp
push
pop
andl
out
mov
lret
inc
dec
cmp
push
mov
test
lcall
mov
pop
les
dec
shrl
ja
int
dec
xor
out
or
jo
fwait
pop
push
xchg
push
iret
sbb
add
fwait
test
out
ficompl
push
bound
and
in
pop
jne
jmp
dec
mov
sbb
pop
ds
mov
insb
lds
mov
in
jecxz
jle
or
fmul
rorb
inc
jb
gs
mov
in
fistps
cmp
jmp
shlb
outsl
add
icebp
out
jns
sub
push
lret
in
add
stos
pop
jecxz
and
shrl
cli
jnp
sub
lret
inc
out
in
dec
mov
xchg
icebp
iret
pop
notb
ret
xchg
pop
adc
sbb
push
xor
popf
pop
sub
mov
rclb
push
mov
sbb
fnstsw
shlb
stos
scas
mov
adc
clc
or
sbb
fidivrs
pop
push
ror
xlat
mov
hlt
mov
jno
cmp
mov
cmp
aaa
cmp
scas
or
push
add
cmp
xchg
xchg
lock
rol
mov
add
inc
jmp
je
fucom
das
jbe
xchg
jge
or
fbld
sub
cmp
in
sub
jl
in
stos
dec
fmul
jp
insb
in
mov
jo
adc
lahf
ret
push
xor
gs
in
mov
cmpsb
and
in
loope
daa
enter
pop
pushf
inc
push
adc
and
sub
mov
cmp
inc
icebp
movsl
test
mov
xchg
xlat
push
push
icebp
mov
xor
cmc
inc
add
xor
test
xchg
clc
sbbb
icebp
push
fcoml
leave
sub
pop
in
outsb
lock
int
xor
jg
fcmove
mov
sahf
mov
scas
mov
push
pop
pop
dec
int
dec
out
cli
data16
or
mov
shr
jge
or
imul
insb
nop
sahf
mov
and
subb
and
dec
int3
fs
mov
stc
dec
cmp
movsl
sub
ss
sub
sbb
cs
fsubrl
xor
bound
arpl
or
jno
inc
push
cmc
dec
int
xor
and
lods
je
inc
std
add
pop
dec
adc
pop
pop
add
add
stos
lods
mov
cmpsl
jae
mov
mov
adc
call
xchg
int3
std
fdivr
fdivl
push
cmpsl
push
mov
push
ss
dec
push
mov
clc
fldcw
mov
repz
dec
push
xchg
adc
sub
sbb
std
xchg
adc
jmp
pushf
test
jecxz
dec
cltd
cmp
imul
xor
divb
jb
dec
push
dec
adc
stos
je
fsubs
jecxz
mov
pop
lea
shl
call
sbb
xchg
xorl
cli
fisttpl
add
stos
inc
iret
xor
das
loop
xchg
pushf
ja
and
mov
cmc
not
xor
std
clc
pop
stc
cwtl
push
clc
cmpsl
sub
repnz
outsb
lret
incb
lret
pop
inc
mov
inc
mov
rep
lock
sbbb
and
rcrb
mov
aam
jle
ret
mov
es
daa
insl
aad
jge
jo
inc
xchg
mov
orl
lods
stos
je
mov
and
lcall
add
push
cltd
add
mov
push
fstl
fucom
xchg
push
sbb
push
rcl
arpl
pop
sub
sub
and
mov
mov
sbb
inc
xor
cmpsb
ja
gs
je
pop
int
dec
cmp
popf
test
pusha
xor
inc
fimull
mov
into
or
xchg
pop
fwait
ss
push
jb
push
add
mov
jmp
bound
adc
push
xchg
cmp
mov
and
ret
pop
stc
jo
mov
jp
loopne
mov
sub
push
mov
mov
jne
mov
leave
fistpll
iret
sub
cs
xchg
popf
cmpsl
cmp
mov
sbb
or
rclb
sub
je
pop
insb
cmpsb
aas
arpl
andl
out
jmp
push
pusha
and
popa
ret
negl
mov
cli
jae
out
lret
jbe
popf
jg
js
cmp
mov
mov
pop
xchg
inc
loopne
sbb
dec
xor
jo
scas
sbb
test
out
sub
mov
mov
imul
pusha
push
fldenv
sub
jecxz
mov
loop
mov
sbb
sti
ret
inc
clc
dec
add
loop
int3
sbb
jle
and
fidivrs
pop
xchg
jo
fsubrl
les
sarl
cmp
scas
dec
movsb
sub
cmp
idivb
jge
imul
enter
sub
adc
mov
fidivl
xor
jl
pop
rorl
jecxz
dec
jnp
xor
fmuls
mov
test
mov
loopne
push
xorl
enter
pop
fildl
jmp
loope
lret
loope
fistpll
xor
or
movsl
mov
and
jmp
movl
xchg
jmp
dec
mov
addr16
cmpsl
fisubrl
lcall
sti
faddl
int
sub
inc
push
adc
or
jg
pop
pop
mov
sub
mov
xor
and
roll
pop
sbb
push
sub
popa
test
or
test
nop
mov
adc
sahf
inc
js
test
outsl
jge
inc
mov
hlt
loop
mov
stc
add
imul
cmp
pop
and
or
cli
mov
fwait
dec
cmp
add
or
pop
inc
cmc
cmovp
pop
dec
in
push
adc
scas
xchg
imul
or
add
cmp
mov
adc
xlat
lret
sub
lock
in
pop
insl
push
sti
jnp
das
lcall
gs
jb
loopne
jb
dec
insl
inc
in
pusha
xorl
les
jge
repz
cmp
sbb
push
ja
adc
adc
pop
ficomps
mov
jmp
mov
add
aas
xchg
xor
jb
jecxz
dec
mov
push
jecxz
jmp
cmp
insl
lods
call
fidivrl
mov
mov
adc
out
mov
out
inc
pop
mov
inc
ljmp
mov
push
push
and
into
add
notb
bound
cwtl
and
adc
mov
inc
and
arpl
js
mov
cmp
test
xor
sub
mov
aam
ror
sbb
mov
data16
pop
insl
mov
fwait
cmpsb
xchg
cli
sbb
ljmp
dec
lods
push
push
mov
call
icebp
lahf
mov
and
and
cltd
shlb
movsb
mov
in
jne
sub
fnstsw
mov
push
repnz
adc
add
sub
pop
xlat
scas
mov
out
test
mov
mov
nop
sar
pop
mov
jmp
xor
push
adc
je
leave
xchg
cmpsl
dec
mov
orl
inc
ror
jno
insb
mov
ficompl
push
adc
faddl
add
pushf
test
cwtl
jmp
data16
sahf
pop
in
mov
mov
jo
mov
mov
inc
addr16
add
scas
cld
mov
xchg
sbb
pop
rorl
mov
mov
jmp
in
adc
ficoms
sti
xchg
push
push
es
pushf
jo
push
mov
push
push
movsl
stos
aas
push
and
adc
jle
xchg
pusha
mov
pop
movsb
ret
pop
pop
xorb
jae
loopne
push
mov
rol
mov
shlb
sahf
xchg
sahf
push
jmp
scas
jge
int3
push
aam
adc
jle
mov
add
dec
hlt
dec
pushf
cli
arpl
in
mov
mov
push
mov
and
int3
push
aas
mov
loop
mov
lds
ffreep
idivl
scas
mov
mov
push
movsl
push
cmp
pop
push
jnp
fdivl
in
jge
scas
sbbl
sub
cmp
mov
xor
sub
xor
xor
jo
and
lahf
add
in
xlat
adc
test
jnp
push
inc
loop
nop
cmpsb
daa
or
scas
xchg
enter
pop
sbb
push
pop
xor
mov
mov
dec
insl
sbb
fists
dec
jp,pt
or
xorl
push
ljmp
outsb
mov
add
add
xor
bound
pop
shlb
js
fiadds
nop
pop
call
push
push
lock
sub
cmp
adc
out
loopne
lods
fstpl
mov
shlb
popa
repz
pusha
push
fmul
aam
push
sub
test
mov
xchg
lahf
in
sbb
mov
repnz
jge
data16
out
addb
inc
outsl
or
sar
mov
test
scas
add
ss
orl
xchg
movsb
imul
jmp
repnz
adc
or
fstpt
into
or
cmc
sub
pop
push
xchg
adc
adc
or
add
adc
pushw
lods
mov
mov
pmulhuw
or
sub
xorb
push
rol
daa
push
sti
sub
in
and
gs
add
mov
testl
inc
adc
les
mov
xchg
lcall
cmp
out
pop
mov
mov
jmp
popf
ja
das
nop
outsl
aad
popf
adcb
divl
jb
scas
les
icebp
insl
je
pop
jns
fistps
movb
into
jmp
call
cltd
fstps
andl
push
hlt
pop
das
mov
mov
das
mov
iret
or
aaa
shll
mov
cmp
inc
in
cwtl
loopne
push
cmpsl
daa
sqrtps
sbb
jmp
lret
insl
cmc
xchg
test
jmp
pop
adc
rolb
in
mov
pop
sahf
ret
test
test
insl
mov
loop
cmp
fldenv
inc
dec
lods
cmp
push
mov
pop
dec
inc
mov
test
add
push
imul
add
jmp
sbb
clc
jg
das
xchg
std
cmp
sbb
pop
adcb
ret
pop
push
xchg
jmp
iret
push
sti
shr
and
shll
push
xlat
mov
popa
cmp
sub
mov
dec
or
jle
addr16
or
push
mov
push
mov
inc
outsl
add
mov
out
ja
jge
loop
jns
adcl
add
xchg
mov
mov
xor
pop
outsl
stos
xchg
xchg
add
sbb
mov
sub
dec
jl
sub
mov
into
fcomip
mov
xchg
aad
int3
jmp
xor
das
out
pop
inc
sub
inc
data16
std
ret
stos
mov
push
mov
mov
jnp
sbbb
sbb
in
mov
pusha
push
push
jecxz
jnp
lret
aam
pop
mov
dec
inc
cmp
jae
push
movsl
push
jl
test
int
jge
scas
add
and
adc
pop
sbb
scas
push
imul
sbb
or
stos
inc
addr16
push
push
shl
xchg
mov
arpl
xchg
and
or
lods
arpl
jns
push
or
incb
int3
icebp
jge
pop
cmpb
add
vpsraw
rclb
xchg
scas
mov
les
xor
mov
jbe
ret
sbb
jmp
daa
daa
push
xchg
cmp
fcomip
jno
xor
jl
lods
lods
dec
and
jne
xor
mov
dec
lahf
pop
mov
push
stos
mov
pop
push
inc
ret
mov
jno
fwait
cmpsb
stos
movsl
push
in
xchg
loopne
enter
pop
pop
sbb
jne
cld
ret
push
outsl
cmp
rclb
cli
aaa
and
adc
roll
lret
xchg
add
and
dec
out
push
pop
testl
pop
pmullw
push
stos
and
lds
mov
fildll
lea
rol
mulb
mov
frndint
mov
xor
pop
push
arpl
js
cmp
sub
mov
lret
xchg
mov
cltd
mov
cmpsb
sub
lods
add
sahf
mov
jb
jns
mov
loop
pop
sbb
jae
shll
pop
adc
jae
ss
jnp
cmp
dec
aad
out
sub
cli
push
js
xor
stos
in
cmp
ret
lea
popa
stos
hlt
into
in
push
stos
cmc
popf
outsl
jg
inc
movsl
mov
xchg
adc
jns
adc
pusha
outsb
add
inc
imull
ret
xlat
dec
insb
and
mov
xor
add
inc
jl
gs
sub
inc
xchg
add
repz
mov
xchg
pop
xor
popa
out
cmp
sub
push
adc
aam
mov
mov
jmp
inc
ss
loop
aad
sbb
sbb
jb
scas
or
fimuls
cmp
out
inc
xchg
rorb
imul
mov
push
out
cmpl
mov
fistl
adc
pop
rolb
or
das
jg
cmp
mov
and
mov
pop
shll
fwait
negb
jge
cwtl
fwait
sbb
mov
repz
pop
cld
jg
add
mov
lods
jno
outsl
loopne
lock
pop
pop
das
xor
sub
inc
mov
cmp
insb
incl
dec
popa
cmc
cmpsb
xchg
js
lret
ljmp
les
cmp
mov
push
add
xchg
pavgw
rcrl
icebp
add
scas
pop
mov
clc
mov
lea
pop
adc
int
pop
sub
cmc
xor
xchg
xor
lret
lcall
cmpsb
mov
xor
stos
jo
xchg
das
xlat
xchg
dec
outsl
ret
test
pop
ja
mov
dec
push
inc
daa
rorl
jp
ret
jo
push
pop
jg
add
pop
loope
out
push
leave
and
or
dec
or
in
pop
inc
xchg
and
fs
mov
sub
push
jp
push
mov
sub
or
dec
pop
inc
or
imul
mov
inc
mov
push
jle
xchg
test
out
int3
ret
or
sub
out
popl
or
xchg
push
call
xchg
mov
mov
sub
jnp
sub
in
dec
inc
pusha
repnz
mov
ret
add
inc
inc
mov
push
aas
inc
std
popf
hlt
or
mov
into
std
dec
fcmovb
test
sbb
pushf
imul
popf
push
bound
mov
repnz
adc
hlt
fistps
inc
or
daa
xchg
sbb
cmp
fiadds
add
inc
int3
fcoml
cld
fisubs
inc
lds
into
shrb
imul
sbb
shrl
jbe
adc
sbb
mov
pusha
cmp
in
jl
xchg
loop
xchg
mov
fdivl
jmp
sbb
push
jge
out
sub
sti
push
adc
lods
inc
add
cmpsb
sub
adc
pop
enter
outsb
add
ja
loope
dec
add
je
cmp
xchg
pop
movsl
mov
enter
or
add
fdivl
in
sub
pop
pop
push
adc
pop
push
mov
mov
sub
add
faddl
cmp
sub
sub
aam
into
rcrb
out
pop
add
mov
aam
mov
mov
and
push
xchg
int
and
imul
js
add
mov
or
fistl
and
push
xlat
adcb
loop
decl
sub
xchg
shll
bound
dec
daa
shll
xor
sub
pop
lcall
push
or
cmp
loopne
or
ds
cmc
sbb
mov
les
xchg
clc
xchg
imul
or
inc
sub
data16
xor
lods
push
jmp
ret
mov
sub
jne
mov
pushf
sbb
mov
gs
sbb
mov
dec
inc
cltd
pop
outsb
in
les
add
jle
sbb
sbb
pop
popa
mov
movl
adc
pop
ret
loop
jmp
mov
cs
sub
aad
in
nop
repz
jb
out
aam
ds
out
outsl
mov
jecxz
pop
fadd
inc
adc
call
pop
sbb
mov
mov
mov
fildl
nop
pop
jne
and
fldcw
das
pop
push
mull
js
ret
pop
ja
sar
mul
cmpsl
inc
std
xchg
cli
mov
push
andb
xchg
fistpll
lret
cld
stos
cwtl
sbb
dec
cmp
mov
adc
mov
mov
cmp
dec
inc
mov
sub
cmpl
insl
jno
xchg
andb
sbb
popa
ljmp
mov
push
adc
and
mov
cmovb
cmp
ja
test
sub
push
jno
inc
fnsave
lret
cmc
aad
xchg
mov
mov
sub
pop
jae
mov
or
mov
mov
or
inc
data16
push
nop
mov
addr16
dec
xor
ja
cmp
repnz
ds
xchg
lea
sub
loope
push
stc
ds
and
or
xor
inc
jns
push
cmp
xchg
inc
aas
xchg
je
fidivs
pop
or
imul
hlt
jp
push
and
and
xor
inc
sub
mov
or
fbstp
xor
jmp
leave
inc
orl
popa
sub
cmp
adc
and
inc
pop
insb
push
jns
jnp
xchg
iret
jle
push
jl
movb
inc
cld
iret
cmp
mov
inc
push
stc
xchg
jae
dec
mov
popf
sbb
out
and
add
dec
jb
fidivrl
rcll
and
imul
scas
cmpsb
xchg
adc
idivl
std
into
jae
sub
adc
sub
imul
sbb
or
mov
cmp
icebp
add
ja
pop
fdivrp
mov
jle
rorb
scas
dec
lea
and
sub
int
push
fnstcw
sbb
ret
cmp
xorb
popa
jl
push
orl
jl
fstpt
pop
xor
inc
push
jnp
pop
test
push
push
push
mov
faddl
inc
jae
cmpsb
mov
std
in
fs
pop
sbb
gs
xchg
jnp
cmc
mov
adc
jecxz,pt
push
movsl
test
mov
jno
cld
add
adc
add
pop
xor
cli
push
adc
shlb
pop
inc
mov
insl
pop
or
mov
fsubrl
stos
imulb
xor
ja
ret
jg
adcb
test
shll
leave
push
imul
ss
cltd
add
loopne
or
sbb
in
sahf
iret
xchg
roll
scas
push
pusha
loop
aad
stc
loope
into
fs
mov
adc
push
cmp
ret
out
repnz
test
xor
test
aas
xchg
mov
cmc
sub
dec
pop
lds
adc
sti
imul
sahf
movsb
data16
xchg
mov
notl
xlat
sub
shll
pop
dec
movsb
sti
aaa
push
out
decb
sbb
pop
sub
cmpsl
inc
lods
mov
std
les
mov
dec
push
aas
xchg
jecxz
movsb
sbb
inc
sub
or
adc
cmp
adc
pop
pushf
js
ds
loopne
cs
arpl
int3
popf
gs
into
xorl
daa
dec
xchg
dec
movsw
cmc
je
sbb
dec
add
add
stc
mov
add
or
loopne
leavew
rorb
pop
sbb
cmp
adc
inc
push
mov
das
cmp
sbb
mov
lahf
insb
rorl
xchg
std
cmp
cwtl
adc
mov
mov
mov
inc
mov
imul
lock
jg
pop
insl
push
imul
popa
push
sub
adc
ret
push
jp,pt
jb
fisubrs
data16
dec
push
lahf
test
mov
add
aad
ret
mov
je
mov
mov
mov
nop
xor
cmp
mov
sbb
push
xor
cmc
fstpl
xor
xor
mov
sbb
divb
test
stos
pop
cmpl
stos
nop
jae
out
adc
xchg
mov
add
fsubr
and
sbb
push
or
xor
push
out
mov
stos
xchg
dec
cmp
iret
out
es
fmull
push
ss
sub
pop
or
test
fwait
and
mov
add
cmp
mov
sub
mov
jnp
xchg
ret
xor
mov
mov
push
and
hlt
mov
mov
mov
jbe
fisttpl
aad
movups
mov
jmp
iret
xchg
dec
int
jmp
xchg
lods
sbbl
inc
out
push
add
mov
adc
ss
stos
or
sti
insb
mov
mov
mul
int
sti
pusha
sub
iret
cwtl
pop
test
sbb
pop
pop
out
popa
inc
pop
mov
iret
push
lds
inc
sarb
pop
mov
int3
push
fisubrl
mov
imul
or
adc
lds
push
push
iret
leave
mov
in
push
inc
lret
ret
dec
or
sbb
rorw
add
lock
xchg
js
mov
adc
jecxz
fisubrs
inc
jbe
push
arpl
scas
sub
dec
and
daa
and
in
jbe
adc
pop
lret
sbb
jle
and
scas
cmp
mov
ds
jb
nop
push
mov
shlb
stos
lahf
jl
movsl
push
and
sbb
pusha
push
cmpsl
std
and
ficompl
cmpsb
xor
cli
in
dec
pop
fwait
enter
pop
push
popf
mov
enter
or
ret
lret
fwait
stc
stos
ds
cmc
outsb
movsl
scas
jo
and
imul
sarb
jmp
sbb
mov
push
xchg
dec
pop
insb
dec
cmpl
call
lcall
sbb
mov
cs
push
dec
jp
sub
mov
call
outsb
mov
scas
cmp
mov
mov
cmp
fcompl
mov
lret
cmp
ja
jmp
sbb
jnp
sahf
jb
into
test
test
lret
outsl
test
loop
fiadds
stc
cwtl
outsl
stc
fs
inc
adc
pop
xchg
ss
inc
cmp
jge
gs
sbb
cli
mov
ljmp
xchg
rorb
scas
mov
into
xchg
in
cmc
repnz
push
xor
push
pop
in
adc
or
pop
fcoms
pop
add
push
data16
shrb
mov
xlat
add
cmp
in
jb
int
out
cmpsb
scas
push
fwait
gs
in
loopne
int
dec
dec
daa
scas
inc
mov
out
dec
les
loop
sbb
xchg
adc
jge
push
mov
aam
cmpsb
mov
pushf
and
dec
jmp
aam
cs
mov
push
mov
test
in
dec
fnstsw
je
push
movsb
jecxz
out
dec
fs
lea
mov
mov
insb
or
sti
lods
xchg
test
fcmovu
movsb
lahf
sbbb
inc
inc
mov
fnstenv
mov
out
sbb
es
rcrl
dec
mulb
mov
cwtl
int3
adc
mov
js
mov
add
mov
mov
push
dec
insb
add
mov
rorb
addr16
sti
push
ret
in
jle
cmc
mov
dec
dec
push
push
add
add
and
cmovle
xor
mov
xor
es
or
in
aad
in
adc
mov
dec
push
push
imull
fnstsw
push
clc
imul
lret
push
inc
sbb
jnp
pop
cs
in
stos
jg
leave
out
jae
test
add
xchg
jl
ja
outsl
xor
test
ja
dec
mov
jne
insl
xchg
dec
movsb
lods
mov
ja
lret
rorl
xchg
jge
ret
les
add
sub
inc
lret
rolb
bound
push
mov
je
fwait
in
or
xchg
adc
lods
mov
pop
or
leave
jp
inc
lods
mov
mov
jnp
in
xchg
dec
or
and
mov
mov
fiaddl
jae
ret
pushf
push
jmp
pop
mov
insl
out
loope
sub
xor
push
movsl
sbb
incb
mov
jnp
mov
jle
in
in
bound
ret
test
div
or
dec
inc
fs
xchg
sbb
jae
xchg
test
mov
movsl
popf
imul
fcmovu
xchg
push
adc
pop
imul
scas
insb
in
push
aaa
out
out
pop
sbb
mov
mov
leave
inc
hlt
rclb
mov
loope
or
cwtl
xchg
add
jne
sbb
cmc
jns
add
lea
popf
sarl
cmp
mov
icebp
sarb
scas
or
idivb
inc
outsl
add
push
shl
jbe
mov
outsl
sbb
xchg
daa
and
adc
jno
fcoml
xchg
inc
lds
mov
cwtl
xor
cli
sub
lahf
fwait
rorb
test
jb
add
lods
test
cmpsb
mov
cld
in
xor
cs
pop
push
jp
push
out
loope
adc
sub
mov
cmp
dec
sub
loop
mov
das
pop
testb
cmp
add
loop
xor
movsl
jg
xchg
mov
lods
pop
or
pop
lcall
push
faddl
sbb
sub
pop
outsb
movsl
mov
cli
shrb
stos
cmpsl
mov
stos
mov
sub
push
outsl
xor
sub
mov
lret
pop
rorl
outsl
mov
xor
sahf
adc
jp
and
adc
loop
sbb
stc
dec
andl
adc
fnstenv
ss
in
sbb
cmp
out
lret
ljmp
cmp
das
xchg
or
test
cmc
mov
sbb
adc
pop
imull
inc
test
add
push
sub
lods
or
and
inc
cmpsb
ljmp
cmp
jle
fnsave
js
xchg
xor
shll
lea
dec
xor
dec
cmpsl
push
inc
rorb
les
mov
xchg
imul
mov
pop
cmp
adc
fsts
jmp
mov
cs
mov
aad
cmp
nop
test
jecxz
int
outsb
dec
push
cld
lods
je
out
jecxz
mov
dec
cmp
sarl
push
mov
pop
decb
xchg
mov
dec
xchg
js
fcmovnbe
stos
scas
pop
pop
xor
adc
mov
cmp
sti
inc
les
popf
xchg
arpl
arpl
std
mov
lock
xchg
jne
and
cmp
xchg
mov
aas
dec
lock
insb
dec
pop
stos
jg
rcrb
shrb
mov
push
ss
ret
je
in
js
out
insl
and
xchg
je
aad
je
cld
popa
das
pop
sti
lods
cwtl
fcomps
mov
cmp
data16
pop
lock
idivl
cltd
sbb
dec
test
xchg
mov
int
clc
cmpsb
bound
xchg
test
inc
fs
shll
push
test
stos
outsb
add
mov
xchg
dec
lods
lcall
sbb
or
daa
xor
inc
cmc
mov
jo
clc
dec
or
sub
movsb
fistl
inc
pop
xchg
lds
scas
xlat
fwait
jg
int
out
insl
add
jae
xchg
sarb
aaa
jns
xchg
sahf
in
in
cs
popa
xor
mov
mov
mov
xorb
dec
aam
movsl
fsubrl
mov
dec
jmp
mov
mov
filds
fists
sahf
push
jmp
sub
cmpl
xor
cmp
sub
push
or
mov
stos
icebp
xchg
and
push
adc
jle
cmp
fildl
adc
ret
out
lret
inc
jno
dec
jae
pop
enter
or
aad
loope
lret
ficoml
mov
dec
xchg
scas
iret
add
adc
inc
fnstsw
imul
je
sbb
hlt
or
dec
arpl
jae
or
adc
aaa
xor
mov
call
test
int3
mov
pop
imul
fisubrs
jno
rcrb
mov
cmp
push
xchg
movsb
cli
mov
mov
loopne
jge
repnz
sbb
add
daa
and
ljmp
jge
dec
push
icebp
dec
push
test
mov
jo
xor
lahf
mov
xchg
sub
cmp
jae
cmpsb
cmp
mov
dec
xchg
test
xchg
fcmovnb
push
sbb
js
into
jno
cmp
add
movsl
mov
pop
mov
addb
sbbb
mov
add
movsb
mov
addr16
or
sbb
pop
mov
data16
pop
mov
push
pop
dec
xchg
scas
or
sub
xchg
outsb
or
dec
adc
or
lock
mov
test
and
scas
addl
and
sub
push
mov
lret
xchg
shll
sbb
sub
addb
mov
inc
jnp
loop
mov
push
mov
les
mov
cmp
repz
out
cld
dec
cli
sbb
enter
pushf
orb
xor
into
pop
pusha
inc
cmc
andb
pop
and
out
imul
sbb
jp
push
mov
test
sub
xchg
and
sti
inc
dec
dec
hlt
decl
loopne
dec
fmuls
insb
jg
in
xlat
fxam
mov
repz
sbb
cmp
add
push
pop
in
data16
push
dec
pop
pushf
jns
sub
or
sbb
out
out
jb
mov
dec
lret
sbb
ja
cmp
leave
lea
xchg
cmp
shr
stos
mov
into
xor
sub
dec
jle
cmp
add
add
lock
enter
cmpsl
pop
inc
das
fimull
cmp
push
and
fcom
cld
mov
imul
pop
and
xor
pop
cwtl
inc
icebp
popf
cmpsl
and
dec
mov
es
cld
push
sub
lret
pop
hlt
mov
jne
and
add
cmp
xor
jp
xorb
and
lock
add
es
jnp
insl
or
je
xchg
mov
mov
popa
inc
int
lods
add
mov
and
jb
dec
movsbl
ficompl
pop
lds
jge
mov
clc
loope
push
xchg
push
daa
sbb
sub
rorl
aam
stos
pop
outsb
add
cmp
mov
imul
jne
mov
jge
adc
xchg
xchg
inc
push
mov
jae
adc
mov
emms
arpl
dec
mov
mov
or
jno
fwait
scas
dec
adc
mov
dec
rcrb
mov
jne
push
cmp
jns
push
sub
ret
xchg
mov
mov
fnsave
lock
shll
inc
andl
jl
clc
mov
ret
out
sub
into
aaa
jg
fs
scas
fbstp
aad
jmp
cmc
xchg
adc
mov
mov
daa
cmp
push
and
dec
stos
test
sub
insb
repnz
loopne
jle
cmpl
stc
push
fcmovne
mov
out
outsb
xor
xor
jae
in
mov
push
std
sub
mov
dec
insb
or
inc
mov
xchg
call
jle
iret
lods
xor
lock
scas
xor
out
lds
xchg
dec
or
leave
push
or
hlt
push
sbb
arpl
or
mov
push
repz
orb
out
push
add
out
int3
jae
dec
pop
lcall
lds
xchg
scas
leave
nop
fbld
pop
dec
lahf
cmp
lds
jbe
jbe
jge
jno
sbb
pusha
or
jno
mov
jl
mov
dec
mov
inc
xor
mov
rcrl
pushf
sub
test
or
cmpsb
mov
bound
pop
rol
imul
repz
sub
add
outsl
stos
dec
movsl
les
and
jbe
in
test
add
out
int3
add
mov
xchg
fidivrs
movsl
js
pop
pop
or
lcall
nop
fcompl
adc
push
dec
and
jecxz
adc
jecxz
jle
add
lret
js
test
sub
sub
test
int
test
sub
gs
imul
mov
mov
sahf
pop
in
cld
test
pop
and
subl
scas
jb
mov
cltd
ss
push
cmp
scas
sbb
imul
imul
cmp
pop
fiadds
fwait
in
into
aas
or
cmc
inc
inc
dec
xor
xchg
jge
adc
add
inc
roll
unpckhps
data16
mov
fmuls
ret
sub
test
mov
mov
adc
repz
pop
ret
shll
out
daa
aam
gs
inc
clc
xor
sbb
les
sub
mov
dec
inc
pop
cmp
and
pop
lahf
xor
adc
add
xchg
in
aam
call
and
aas
jno
jae
push
dec
inc
jecxz
je
add
push
dec
mov
call
rol
cltd
mov
pop
jb
ret
dec
imul
sub
movsb
inc
out
inc
dec
xlat
or
ret
das
mov
lods
ss
lret
dec
dec
push
dec
imulb
sub
std
xlat
lds
std
shll
mov
or
lret
jbe
or
sbb
lock
test
xor
add
xchg
adc
cmpsl
test
jle
xor
dec
inc
jecxz
xchg
repnz
ljmp
mov
outsb
sti
mov
add
or
sbb
cmp
ja
test
push
inc
xchg
clc
sbb
xacquire
pop
sbb
pop
pop
das
add
dec
out
pushf
movsl
adcl
push
pop
push
xor
cmpsb
or
add
mov
jbe
scas
dec
fstps
sbb
xchg
mov
adc
movsl
jp
les
std
fstl
mov
test
enter
jns
jns
mov
in
lods
mov
and
es
mov
icebp
sbbb
jns
mov
rolb
xor
repnz
mov
in
jne
hlt
mov
es
mov
xchg
lcall
xchg
rorb
out
dec
das
sub
and
addr16
bound
test
inc
mov
insb
imul
jle
shlb
std
lret
jge
iret
adc
mov
cmp
pop
inc
xchg
inc
jae
mov
popf
ficoms
mov
inc
enter
clc
fistl
sbb
xchg
shrl
adc
xchg
adc
jo
test
test
pushf
pop
inc
leave
jge
icebp
hlt
mov
sti
sbb
repz
or
or
popa
aaa
mov
jnp
into
mov
pop
int3
pop
xchg
pop
leave
and
fdivp
loopne
lds
xchg
fs
test
xor
in
pop
fistpll
addr16
movsb
adc
sti
jbe
jg
jge
roll
daa
and
mov
jl
push
dec
mov
lock
or
jne
outsl
and
test
sarl
jbe
pop
sbb
cmpsb
aas
popf
add
out
cmp
pop
adc
mov
loope
sbb
push
sbb
ds
and
pushf
and
int
dec
aad
andb
push
sbb
mov
add
and
xor
jo
pop
or
js
out
pop
mov
sub
or
fstp
add
push
sub
outsb
into
in
adc
mov
mov
mov
cmp
hlt
jmp
fmulp
or
fisubrs
enter
addl
mov
ret
cmc
jg
sahf
movsl
imul
xchg
outsl
add
stc
je
mov
adc
out
inc
ss
cmp
imul
cli
xorl
inc
repz
push
fwait
into
and
xor
test
loope
adc
cmp
add
dec
lods
rcrl
xlat
add
in
xchg
xor
mov
push
lret
arpl
mov
jp
gs
stc
loopne,pn
sbb
inc
or
in
mov
pop
popa
out
mov
int3
sbb
imul
pop
push
mov
adc
popf
cs
iret
push
imul
inc
rorl
nop
adc
lods
xorl
dec
or
je
push
insb
mov
lea
out
fsubr
aaa
push
mov
aas
and
pop
sub
push
pusha
push
sahf
inc
add
inc
sub
ret
and
push
mov
lcall
std
jle
inc
cwtl
mov
ja
mov
aam
or
lods
jmp
xor
loopne
ja
mov
jecxz
rcr
mov
sub
nop
aam
fimuls
ret
and
iret
add
in
ds
xchg
xor
add
lods
mov
and
and
test
sub
jl
pop
add
ljmp
outsl
cltd
xorl
sbb
lahf
clc
push
and
xchg
jmp
add
aaa
mov
pop
fimull
or
out
jmp
jmp
push
jge
xor
cwtl
adc
jp
shll
jns
add
mov
test
mov
ja
and
dec
movsb
popf
ja
pop
jecxz
or
jno
fwait
or
mov
rcr
pop
add
les
out
outsl
int
jp
scas
jns
mov
sbb
arpl
inc
pop
inc
mov
addr16
adc
popf
pushf
sbb
sub
mov
mov
ja
jne
lea
out
je
xchg
insl
fistps
jmp
mov
inc
and
lahf
out
cmpsl
xchg
sub
sbb
out
aaa
stos
dec
sahf
xchg
and
aad
aam
fnstcw
pop
mov
icebp
mov
lock
mov
iret
jae
pop
xchg
cmc
cmp
outsl
and
shlb
dec
push
xchg
cmpsb
push
mov
inc
add
stos
mov
xchg
lods
xchg
imul
mov
push
push
adc
adc
mov
adc
hlt
fisubrs
in
xor
arpl
sub
lods
or
test
pop
aaa
jno
dec
add
inc
lahf
pop
clc
fnsave
sbb
rol
mov
scas
xchg
cld
cmp
movsb
mov
push
inc
xor
jbe
cld
add
sbb
leave
or
pop
xchg
sub
mov
dec
jl
push
mov
and
push
sub
push
xchg
lret
sti
lahf
pop
push
inc
push
inc
dec
repnz
sahf
cltd
xlat
inc
jmp
frndint
in
into
push
sub
cmp
jnp
push
pop
lahf
push
cld
aaa
loope
gs
sub
mov
daa
ds
inc
movsl
rcrb
and
loope
stos
add
cmpb
stos
sbb
addb
mov
fs
xor
js
add
pop
pop
shl
lcall
scas
fisttpl
sub
cmp
outsb
xor
test
lds
out
cltd
or
add
fs
and
lahf
pop
mov
push
jnp
lcall
cmc
std
testl
scas
shrl
mov
add
and
mov
sbb
in
adcb
outsl
fistps
cmp
sub
daa
adc
and
add
lahf
jl
and
jbe
test
jo
xchg
mov
cmp
fmull
into
add
movsl
xchg
sbb
dec
mov
push
ret
mov
adc
fisubrs
call
pop
lods
test
mov
outsb
sub
xor
mov
cmc
sti
push
sub
pop
and
lods
loopne
sbb
dec
and
inc
push
es
mov
int
daa
fscale
xchg
jne
sbb
movsb
adc
pop
add
jnp
pushf
jp
pop
jmp
adc
cs
jbe
push
lock
sbb
testl
outsl
pop
jecxz
inc
sub
pop
and
lea
insb
call
push
ds
xor
movsb
fisttpl
and
inc
pop
xchg
push
inc
clc
mov
das
ja
in
mov
jns
cltd
and
mov
shr
dec
std
divb
push
stos
cwtl
jae
and
and
icebp
stos
insl
cs
xlat
pop
jg
push
leave
and
cmpsl
fsubrp
lock
popa
pop
daa
or
shrb
mov
aam
imul
test
xor
inc
pop
dec
cmp
xchg
jo
out
inc
leave
es
mov
subl
mov
inc
pop
and
inc
imul
add
xchg
cltd
clc
pop
test
push
cmp
fnsave
fldl
xabort
mov
cltd
cmpsl
sbb
scas
rorl
loop
stos
sub
out
bound
ficoms
mov
xchg
cmpsl
inc
xor
pop
inc
or
mov
lds
mov
jl
xor
cmpsl
lods
int3
test
pushf
ret
inc
testl
inc
cld
or
scas
jno
cmp
push
jae
mov
add
adc
call
sbb
bound
arpl
adc
out
hlt
inc
pop
add
bnd
inc
jp
jae
mov
xor
mov
adc
sbb
ja
cmp
mov
fisttps
pop
adcl
push
stc
xorw
inc
jnp
sub
sbb
push
loopne
xchg
jno
int
aas
rorb
test
push
push
testl
add
rorb
ret
cmp
inc
popf
inc
jae
out
and
push
test
mov
adc
pop
inc
sub
rcr
pop
imul
jb
pop
cli
int
lcall
mov
inc
pushf
mov
hlt
aaa
aas
hlt
arpl
mov
add
call
inc
aaa
xor
scas
or
or
daa
pop
dec
fidivrs
mov
lds
mov
xor
adc
daa
cmp
jne
movsb
es
push
xchg
jbe
jbe
in
fidivrl
inc
jmp
daa
push
testl
jno
pushf
fidivrl
push
dec
or
dec
push
adc
mov
lahf
add
scas
sub
imul
cmpsb
inc
mov
in
mov
ret
mov
push
push
add
loope
aam
sub
scas
pushf
cmp
cmc
push
movsl
fld1
xor
xchg
xor
call
sbb
mov
daa
cmp
pop
push
pop
cmpl
repz
xchg
lcall
add
pop
push
xchg
and
xlat
outsb
xchg
ret
pusha
adc
je
inc
jg
fucomp
mov
andb
ljmp
push
jle
push
int
mov
xor
inc
lret
daa
roll
mov
sbbb
sbb
sahf
inc
repz
mov
pop
or
mov
loop
pop
idiv
loop
pcmpgtb
xlat
mov
ss
lods
fidivrs
fisttps
and
jmp
and
cwtl
cltd
je
dec
push
into
call
outsb
sub
js
loope
sahf
mov
adc
scas
or
outsb
repnz
sub
mov
lock
jg
jge
ja
xor
in
hlt
sti
jns
add
incb
arpl
loopne
xor
jb
xor
xor
shrl
mov
xchg
fistl
shlb
fucomip
pop
movl
jge
pushf
and
mov
cli
aad
sahf
mov
lret
insb
and
push
loop
insb
int3
jg
cmpsl
or
jecxz
pop
mov
pop
inc
aad
aam
pop
call
xadd
lods
bound
dec
sub
fstpt
adc
inc
adc
das
push
mov
mov
insb
arpl
idiv
push
mov
cwtl
mov
mov
adcb
cli
ljmp
mov
rolb
outsb
lcall
jle
push
sub
dec
aam
dec
cs
aas
push
mov
pop
outsb
lods
insl
test
test
xchg
scas
jb
ljmp
lret
gs
mov
lret
mov
pop
xor
cmp
cmp
dec
add
sub
test
scas
push
mov
sbb
int
lds
lds
shl
mov
mov
sbb
pmaxsw
jae
xchg
scas
or
push
bound
stos
xor
pop
or
outsb
icebp
mov
jg
jnp
push
lea
sti
sbb
ja
out
dec
mov
xor
lret
test
sbbl
data16
flds
cli
icebp
fsubr
sub
jo
jns
scas
push
in
inc
outsb
xchg
in
push
xchg
xchg
lret
mov
sahf
mov
incl
fsubs
xlat
mov
jg
pusha
dec
pop
xchg
cmpb
fildll
mov
mov
addl
xor
mov
out
or
add
stos
xor
xchg
lea
outsl
out
xchg
das
sub
sbb
pusha
sub
xor
mov
mov
addl
pop
int3
aas
push
sbb
aad
push
popf
outsb
mov
inc
cmpsb
mov
xchg
pop
mov
imul
jp
mov
jg
cmp
pop
repnz
mov
loop
imul
std
pop
loopne
loopne
jbe
mov
aaa
out
repz
jno
push
dec
gs
pop
jg
pop
push
sahf
jle
fimuls
int3
shlb
sahf
scas
inc
aam
and
jmp
movsb
mov
imul
loopne
sbb
jge
push
xchg
mov
in
daa
sbb
insl
xchg
jno
xchg
dec
jl
add
dec
jnp
jecxz
repz
xor
sbb
int3
lahf
push
mov
push
call
push
and
xchg
inc
pop
sbb
in
pushf
fnstsw
xor
imulb
mov
inc
sub
nop
cltd
cmp
ds
dec
aaa
movsl
loopne
cmp
sub
hlt
sbbb
sbb
popf
test
pop
push
jb
mov
ljmp
js
std
out
add
push
xor
faddl
xor
outsb
mull
rorb
cmp
lea
jge
mov
std
mov
repnz
mov
xor
sub
lock
idivl
jns
rcrl
int3
sbb
xchg
sub
subl
sarl
fs
fsts
adc
dec
mov
ds
lcall
cli
sbb
xor
dec
cmp
sub
mov
xchg
into
lret
inc
cmc
arpl
and
and
push
imul
pop
add
cmc
or
in
lods
jbe
mov
xlat
mov
adc
in
pop
rcrb
mov
das
or
xor
dec
loope
insb
inc
inc
ljmp
lods
cltd
mov
lds
sbb
sbb
movl
or
pushf
sarb
popf
jmp
lock
jo
sbb
add
jns
cmpsb
add
aas
or
jb
shrl
je
sub
jecxz
mov
popa
shrb
cmp
dec
call
into
out
mov
fisubs
dec
adc
or
pop
xor
mov
imul
inc
pushl
xor
jg
mov
imull
roll
icebp
or
cwtl
jmp
loopne
mov
pop
pop
jo
sub
or
xor
adc
rclb
mov
push
popa
loopne
sbb
ret
into
repnz
mov
nop
lods
arpl
scas
xchg
out
test
ss
mov
xor
mov
fstps
jns
scas
setns
add
mov
test
das
adc
fstl
sbb
inc
test
sarl
inc
pop
fisttpl
adc
sub
xchg
idivb
push
cmp
push
mov
mov
sbb
xor
or
xchg
push
push
test
sub
ja
push
lahf
dec
jge
call
or
cmpsl
mov
cltd
push
sbb
mov
pop
out
add
sbb
jns
lahf
or
jns
xchg
xchg
cmp
loop
cmp
mov
loop
ss
mov
out
push
add
jne
pop
sahf
mov
movsb
sbb
dec
aas
cmp
jb
push
xchg
in
xor
adcl
icebp
sub
push
es
pop
in
mov
lahf
xchg
jb
adc
mov
std
in
lcall
nop
mov
mov
adc
popf
inc
mov
xchg
out
mov
fisttpll
jbe
jp
xchg
les
pop
xchg
mov
sbb
jno
imul
mov
push
sub
scas
adc
stos
pop
leave
pop
imul
arpl
repnz
jecxz
cmp
cmc
cs
aaa
scas
cmp
or
cmp
pop
test
lds
mov
and
xchg
arpl
inc
add
ret
xor
sub
jge
inc
stos
sbb
jge
sbb
call
jno
mov
jl
xor
ljmp
xor
ja
or
je
push
push
mov
shl
push
pushl
push
cmpsb
dec
inc
in
xor
enter
pop
push
testl
les
pop
sub
inc
cmp
adc
ds
xchg
push
movsl
out
lods
and
sbb
xorb
sbb
in
iret
add
adc
out
lods
xlat
mov
movsb
aam
js
xlat
testb
mov
lcall
jnp
mov
icebp
sub
push
repnz
pop
jb
adc
sub
jg
inc
pop
mov
stos
jb
xlat
movsb
adc
cmpb
push
test
int
daa
inc
sub
pop
lret
pop
shrl
xchg
mov
or
mov
pop
test
pop
xor
loop
jnp
stc
push
xchg
popa
fs
mov
adc
jo
into
and
cmp
push
adc
int
dec
popa
sbb
mov
es
push
cmc
sub
xor
sub
adc
and
imul
mov
fisubl
shrl
mov
adc
std
mov
sub
mov
lret
sti
pop
in
pop
inc
or
loopne
mov
xchg
inc
push
sbb
das
mov
inc
repz
fsubrs
sbb
push
push
movl
out
mov
add
rcll
dec
mov
nop
subl
dec
xchg
pop
xor
ljmp
aam
lea
rcll
push
bound
mov
mov
fistpl
jle
rcrl
push
inc
repnz
adc
dec
ret
adc
sub
sahf
setp
ret
inc
shl
jle
ret
std
sbb
rcrl
sbb
ret
mov
xor
cmp
mov
insl
ljmp
lahf
pop
test
aaa
sub
aam
add
ret
pop
sbb
lahf
mov
mov
cmpsb
xchg
sub
mov
test
mov
mov
imul
mov
clc
dec
add
cltd
popf
push
or
test
vmptrld
inc
cmp
xchg
mov
xchg
es
pop
xchg
testl
dec
xchg
cmp
fisubl
ljmp
int
pop
xchg
mov
xor
cld
call
xchg
mull
icebp
rorb
dec
jo
insb
inc
jnp
es
popa
mov
push
pop
xor
add
xor
stos
out
jmp
push
mov
jns
xor
in
dec
inc
xchg
mov
adc
in
in
pop
xor
aaa
jp
xor
mov
pop
and
dec
and
jne
mov
xor
push
xchg
mov
in
xchg
mov
cmp
int
sbb
or
ss
popf
dec
push
stos
push
inc
xor
mov
insb
addb
jnp
into
jle
cmp
fwait
pusha
fwait
stos
pop
iret
out
jns
ret
mov
jb
inc
mov
push
lock
mov
insl
dec
mov
inc
pop
xchg
fidivl
jo
or
sbbb
mov
scas
test
push
outsl
jns
adc
mov
ja
adc
cmp
mov
shlb
hlt
sbb
arpl
sahf
push
inc
out
jl
push
fisttpll
push
insl
or
adcl
pop
mov
jnp
and
dec
lds
dec
push
scas
add
xchg
and
movsb
aad
cli
ret
out
xlat
push
jle
cmp
mov
sbb
sbb
inc
bound
sbb
fidivrl
push
cli
or
rep
jl
decb
ret
mov
push
jo
lods
lds
mov
mov
push
lret
inc
and
push
push
in
push
add
daa
cmp
pop
dec
hlt
out
push
push
ret
stc
gs
iret
xor
ret
ds
aam
movsl
out
ljmp
daa
ljmp
cmp
mov
and
xor
or
pop
lret
addr16
js
inc
rolb
add
inc
push
mov
fidivrs
sub
cmp
outsb
mov
in
rolb
clc
push
mov
or
xor
mov
ds
rol
das
cmp
lret
jl
push
xor
aas
mov
test
mov
shrl
push
inc
loop
pop
es
pop
jl
fs
adc
xchg
fcoms
ss
leave
fwait
cli
subb
cmp
leave
icebp
or
pop
ss
icebp
and
mov
icebp
pop
sti
adc
imul
push
add
data16
inc
jle
mov
sub
sub
jle
mov
xor
popa
movsb
jmp
icebp
jp
push
pop
inc
push
aas
fldenv
mov
ret
or
repz
xchg
add
in
cmp
jnp
pop
sarl
pushf
es
push
jmp
fsubl
ss
push
aad
push
cmp
inc
pop
es
jle
dec
or
fwait
je
cmp
mov
dec
cld
lea
arpl
call
dec
popa
test
xchg
movsb
dec
jmp
mov
pop
jbe
cli
inc
jns
movb
sbb
repz
push
pop
jp
or
jbe
test
repnz
rcrl
cmpsl
sbb
outsb
icebp
pop
loope
cld
or
lret
adc
inc
mov
mov
xchg
pop
mov
pop
mov
inc
mov
xchg
in
xchg
insl
pop
cmpsl
test
mov
add
or
in
popa
out
pop
lods
lock
dec
mov
rorb
adc
push
mov
push
mov
cmpsb
jmp
jp
sar
neg
fiadds
cmp
inc
jg
sbb
cmp
ljmp
stos
out
out
out
aad
xchg
test
test
push
jbe
xor
call
xor
inc
mov
mov
test
or
dec
arpl
inc
adc
gs
out
dec
fwait
testl
add
dec
or
lret
bound
adc
insb
data16
sarb
mov
das
pop
mov
out
std
fsubl
ret
pushf
fdivs
mov
int3
add
int
aad
xor
mov
cmp
mov
xchg
pusha
mov
out
xorl
jmp
mov
sub
stos
mov
loop
int
fwait
insb
jmp
movsl
jnp
movsb
sub
xor
mov
dec
cmp
ret
add
inc
leave
jl
jae
std
gs
arpl
mov
ret
fisubrl
cmpb
jl
ljmp
xor
mov
out
lret
mov
mov
jns
arpl
out
inc
jmp
loope
push
sub
push
or
lea
int3
loopne
sbb
cld
and
lret
mov
lods
and
pop
jmp
ret
movsb
push
inc
pop
push
int
cmc
jbe
cmp
jge
xlat
inc
sbb
mov
popf
jno
push
imul
dec
enter
pushf
cmp
jo
push
test
push
popa
shrl
xchg
imul
cmpsb
push
aam
in
push
aam
enter
pop
mov
push
sub
repnz
loopne
es
scas
ds
inc
movsl
cmc
or
ret
lea
