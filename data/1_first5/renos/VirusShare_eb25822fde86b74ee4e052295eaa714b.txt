aaa
xor
xor
popa
bound
add
add
in
push
movb
mov
pop
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
movl
mov
push
call
lea
cmp
je
mov
dec
dec
dec
mov
inc
inc
dec
jmp
mov
mov
dec
mov
lea
mov
lea
lea
lea
lea
dec
movl
mov
push
call
mov
mov
mov
mov
movl
movl
xor
mov
movl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
movl
movl
xor
mov
movl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
movl
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jb
mov
lea
lea
lea
mov
mov
lea
xchg
mov
mov
dec
dec
jne
lea
mov
mov
lea
inc
mov
mov
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
xor
mov
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
movl
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
cmp
jne
lea
inc
dec
inc
mov
inc
dec
inc
xchg
mov
mov
lea
xchg
xchg
lea
mov
lea
mov
mov
inc
dec
movl
mov
push
call
mov
pop
ret
cmp
xor
add
add
cmp
aaa
xor
xor
ss
add
cmp
xor
cmp
cmp
add
cmp
xor
aaa
add
add
xor
add
xor
xor
xor
add
xor
add
xor
cmp
aaa
aaa
xor
add
add
xor
aaa
xor
add
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
cmp
xor
xor
add
xor
cmp
xor
xor
xor
add
xor
xor
xor
mov
add
cmp
jne
lea
inc
dec
inc
mov
inc
dec
inc
xchg
mov
mov
lea
xchg
xchg
lea
mov
lea
mov
mov
inc
dec
mov
mov
mov
mov
movl
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
movl
mov
push
call
movl
mov
push
call
mov
mov
mov
mov
movl
movl
xor
mov
movl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
movl
mov
push
call
cmp
jae
cmp
jbe
mov
dec
xchg
dec
lea
mov
lea
xchg
mov
xchg
mov
lea
inc
dec
inc
dec
je
xchg
mov
inc
mov
mov
mov
mov
movl
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
movl
mov
push
call
mov
mov
mov
mov
movl
mov
push
mov
push
mov
push
call
lea
cmp
je
mov
dec
dec
dec
mov
inc
inc
dec
jmp
mov
mov
dec
mov
lea
mov
lea
lea
lea
lea
dec
mov
mov
mov
mov
xor
mov
mov
push
mov
push
mov
push
call
cmp
jne
lea
inc
dec
inc
mov
inc
dec
inc
xchg
mov
mov
lea
xchg
xchg
lea
mov
lea
mov
mov
inc
dec
mov
mov
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
cmp
js
mov
lea
mov
xchg
dec
xchg
lea
mov
lea
dec
xchg
lea
mov
xchg
dec
mov
mov
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
cmp
jb
mov
xchg
xchg
mov
xchg
mov
xchg
inc
dec
mov
inc
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
xor
mov
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
movl
movl
xor
mov
movl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
movl
movl
xor
mov
movl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
movl
mov
push
call
call
mov
pop
ret
add
xor
xor
xor
add
xor
xor
xor
xor
add
add
xor
xor
aaa
xor
xor
add
xor
xor
xor
add
xor
xor
xor
cmp
xor
add
xor
aaa
xor
xor
add
xor
ss
xor
aaa
aaa
xor
add
xor
aaa
aaa
cmp
aaa
xor
add
cmp
xor
xor
xor
xor
cmp
add
xor
xor
cmp
xor
add
xor
cmp
xor
xor
xor
ss
xor
ss
aaa
add
xor
xor
xor
cmp
xor
add
xor
cmp
xor
add
xor
xor
xor
add
xor
aaa
xor
add
add
xor
xor
aaa
xor
add
cmp
xor
xor
xor
add
add
aaa
xor
xor
add
add
lea
push
mov
add
mov
mov
lea
mov
cmp
je
mov
lea
lea
xchg
mov
mov
xchg
inc
dec
dec
dec
je
dec
dec
inc
lea
mov
lea
dec
dec
mov
cmp
je
jmp
cmp
jae
cmp
jbe
mov
dec
xchg
dec
lea
mov
lea
xchg
mov
xchg
mov
lea
inc
dec
inc
dec
je
xchg
mov
inc
mov
xor
divl
test
jne
cmp
jne
lea
inc
dec
inc
mov
inc
dec
inc
xchg
mov
mov
lea
xchg
xchg
lea
mov
lea
mov
mov
inc
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jb
mov
lea
lea
lea
mov
mov
lea
xchg
mov
mov
dec
dec
jne
lea
mov
mov
lea
inc
mov
mov
pop
ret
lea
push
mov
add
mov
mov
cmp
je
xchg
lea
lea
mov
mov
mov
xchg
mov
lea
lea
mov
lea
inc
dec
lea
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jle
lea
xchg
lea
lea
lea
xchg
inc
inc
mov
xchg
xchg
xchg
lea
xchg
xchg
mov
dec
mov
cmp
je
jmp
mov
cmp
js
mov
lea
mov
xchg
dec
xchg
lea
mov
lea
dec
xchg
lea
mov
xchg
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
cmp
jb
mov
xchg
xchg
mov
xchg
mov
xchg
inc
dec
mov
inc
inc
inc
lea
mov
lea
mov
mov
cmp
je
jmp
mov
cmp
js
mov
lea
mov
xchg
dec
xchg
lea
mov
lea
dec
xchg
lea
mov
xchg
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
je
jmp
cmp
jb
mov
lea
lea
lea
mov
mov
lea
xchg
mov
mov
dec
dec
jne
lea
mov
mov
lea
inc
mov
sub
mov
lea
cmp
je
mov
dec
dec
dec
mov
inc
inc
dec
jmp
mov
mov
dec
mov
lea
mov
lea
lea
lea
lea
dec
push
mov
mov
xor
call
mov
cmp
jne
lea
inc
dec
inc
mov
inc
dec
inc
xchg
mov
mov
lea
xchg
xchg
lea
mov
lea
mov
mov
inc
dec
mov
mov
mov
call
mov
cmp
jb
mov
xchg
xchg
mov
xchg
mov
xchg
inc
dec
mov
inc
inc
inc
lea
mov
lea
mov
push
mov
mov
xor
call
mov
cmp
jae
cmp
jbe
mov
dec
xchg
dec
lea
mov
lea
xchg
mov
xchg
mov
lea
inc
dec
inc
dec
je
xchg
mov
inc
mov
mov
movb
movb
lea
mov
cmp
je
mov
lea
lea
xchg
mov
mov
xchg
inc
dec
dec
dec
je
dec
dec
inc
lea
mov
lea
dec
dec
lea
mov
push
add
jmp
mov
mov
cmp
jb
mov
lea
lea
lea
mov
mov
lea
xchg
mov
mov
dec
dec
jne
lea
mov
mov
lea
inc
lea
mov
push
mov
jmp
lea
cmp
je
mov
dec
dec
dec
mov
inc
inc
dec
jmp
mov
mov
dec
mov
lea
mov
lea
lea
lea
lea
dec
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
mov
cmp
js
mov
lea
mov
xchg
dec
xchg
lea
mov
lea
dec
xchg
lea
mov
xchg
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jle
lea
xchg
lea
lea
lea
xchg
inc
inc
mov
xchg
xchg
xchg
lea
xchg
xchg
mov
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
je
xchg
lea
lea
mov
mov
mov
xchg
mov
lea
lea
mov
lea
inc
dec
lea
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jae
cmp
jbe
mov
dec
xchg
dec
lea
mov
lea
xchg
mov
xchg
mov
lea
inc
dec
inc
dec
je
xchg
mov
inc
mov
sub
add
add
mov
lea
mov
cmp
je
mov
lea
lea
xchg
mov
mov
xchg
inc
dec
dec
dec
je
dec
dec
inc
lea
mov
lea
dec
dec
lea
pushl
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jb
mov
xchg
xchg
mov
xchg
mov
xchg
inc
dec
mov
inc
inc
inc
lea
mov
lea
mov
mov
mov
cmp
jne
lea
inc
dec
inc
mov
inc
dec
inc
xchg
mov
mov
lea
xchg
xchg
lea
mov
lea
mov
mov
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
cmp
je
mov
dec
dec
dec
mov
inc
inc
dec
jmp
mov
mov
dec
mov
lea
mov
lea
lea
lea
lea
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jae
cmp
jbe
mov
dec
xchg
dec
lea
mov
lea
xchg
mov
xchg
mov
lea
inc
dec
inc
dec
je
xchg
mov
inc
mov
mov
movl
cmp
je
xchg
lea
lea
mov
mov
mov
xchg
mov
lea
lea
mov
lea
inc
dec
lea
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jb
mov
lea
lea
lea
mov
mov
lea
xchg
mov
mov
dec
dec
jne
lea
mov
mov
lea
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
je
xchg
lea
lea
mov
mov
mov
xchg
mov
lea
lea
mov
lea
inc
dec
lea
mov
mov
pop
ret
mov
push
cmp
testb
pop
sbb
addb
test
xorl
jo
sbb
dec
andl
subw
sbb
dec
andl
data16
sbb
test
push
gs
andl
sbb
pop
jge
dec
xorw
jl
jge
sbb
jg
data16
es
jl
test
sbb
sbb
jge
data16
sbb
sbb
sbb
jl
test
test
sbb
sbb
dec
lahf
add
fdiv
mov
sahf
pop
repz
lock
repz
dec
inc
pop
sbb
inc
pop
sbb
pop
sbb
inc
pop
sbb
pop
sbb
inc
pop
sbb
inc
pop
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
daa
fsubs
lock
push
push
xlat
lahf
fmuls
mov
mov
lahf
fcom
movsl
pop
sbb
movsl
pop
sbb
add
fsub
lahf
pop
and
aam
jle
lahf
pop
loopne
pop
inc
dec
lahf
pop
loopne
pop
and
pop
loopne
dec
fs
pop
loopne
pop
and
loopne
pop
cmp
lahf
pop
loopne
pop
cmp
pop
add
lahf
pop
loopne
dec
push
lahf
pop
add
pop
hlt
jl
sbb
lahf
gs
mov
add
pop
xor
pop
add
pop
call
cwtl
sbb
sbb
rclb
pushf
sbb
sbb
pop
pop
add
pop
int3
add
sbb
lahf
pop
int3
lahf
pop
and
pop
add
lahf
pop
loopne
dec
sub
pop
add
pushf
lea
sbb
lahf
pop
int3
xchg
xor
insb
adc
pop
pop
add
pop
cld
lahf
pop
int3
lahf
pop
or
pop
add
pop
clc
incl
pop
or
pop
add
pop
cld
lahf
pop
int3
lahf
pop
or
pop
add
pop
clc
jmp
pop
cld
ljmp
pop
cld
lahf
sbb
dec
lahf
pop
add
pop
loopne
dec
xor
cmp
cld
pop
push
mov
enter
dec
lahf
pop
add
pop
loopne
dec
xor
xchg
pop
clc
sbb
pop
cld
sbb
pop
cld
xchg
xor
insl
mov
lahf
pop
int3
xchg
jo
sbb
popf
xor
pop
call
pop
add
pop
lock
pop
loopne
pop
inc
mov
in
js
sbb
lahf
pop
loopne
fsubs
lahf
pop
in
lahf
pop
loopne
dec
push
sbbb
sbb
jle
lahf
pop
loopne
pop
cmp
pop
loopne
dec
dec
sbbb
sbb
jle
lahf
pop
and
pop
loopne
dec
dec
lahf
dec
lock
jge
movsl
pushf
cmp
hlt
repz
xor
insl
out
cltd
add
hlt
repz
repz
sbb
movsl
pop
sbb
add
lahf
insl
and
cwtl
sub
mov
sbb
sbb
sub
add
sbb
sub
add
sbb
addr16
cmpsl
push
pop
test
add
sbb
or
addr16
xor
sbb
sbb
insl
or
push
sbb
sbb
inc
leave
add
loope
adc
pusha
fprem
and
add
sbb
addr16
cwtl
hlt
sbb
jae
push
pop
pop
lea
mov
mov
insl
sbb
xlat
sub
pop
add
repz
add
repz
jns
and
movsl
pop
sbb
repz
ret
repz
loopne
lret
xlat
mov
add
fdiv
repnz
and
sbb
ficompl
sbb
pop
out
sbb
fcomps
out
mov
sbb
pop
out
cwtl
jne
sbb
ficompl
sbb
repz
mov
icebp
sbb
pushf
sahf
sbb
sbb
pop
out
sbb
fcomps
hlt
sahf
sbb
daa
sahf
dec
out
mov
repz
out
sahf
pop
out
cs
icebp
insl
sbb
pop
out
sbb
pop
out
cwtl
jne
sbb
ficompl
sbb
pop
out
sbb
fcomps
sahf
dec
out
and
repz
daa
sahf
dec
out
and
sbb
cmp
mov
sahf
pop
out
sahf
cwtl
and
pop
sbb
sahf
pop
out
sahf
dec
icebp
mov
sbb
pop
out
cwtl
jne
sbb
lahf
std
push
xlat
movsl
pop
sbb
add
mov
mov
pop
cmp
mov
dec
pop
sbb
fdivrs
daa
sahf
or
and
sbb
cmp
mov
dec
pop
sbb
fdivrs
sahf
cwtl
and
pop
sbb
mov
sahf
cwtl
and
pop
sbb
sahf
or
mov
sbb
fdivrs
sahf
dec
cmc
mov
sbb
fdivrs
and
sbb
sahf
or
and
sbb
cmp
mov
sahf
pop
cmc
sahf
cwtl
and
pop
sbb
pop
repz
repnz
push
xlat
add
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
mov
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jle
lea
xchg
lea
lea
lea
xchg
inc
inc
mov
xchg
xchg
xchg
lea
xchg
xchg
mov
dec
push
push
push
call
mov
lea
mov
subl
movb
movb
movb
cmp
jne
lea
inc
dec
inc
mov
inc
dec
inc
xchg
mov
mov
lea
xchg
xchg
lea
mov
lea
mov
mov
inc
dec
mov
mov
call
mov
lea
cmp
je
mov
dec
dec
dec
mov
inc
inc
dec
jmp
mov
mov
dec
mov
lea
mov
lea
lea
lea
lea
dec
lea
mov
subl
mov
mov
call
mov
cmpl
je
cmp
jb
mov
lea
lea
lea
mov
mov
lea
xchg
mov
mov
dec
dec
jne
lea
mov
mov
lea
inc
mov
mov
call
mov
cmpl
je
cmp
jae
cmp
jbe
mov
dec
xchg
dec
lea
mov
lea
xchg
mov
xchg
mov
lea
inc
dec
inc
dec
je
xchg
mov
inc
lea
push
push
mov
sub
push
mov
push
call
cmp
je
xchg
lea
lea
mov
mov
mov
xchg
mov
lea
lea
mov
lea
inc
dec
lea
mov
mov
cmp
je
mov
subb
cmp
jae
cmp
jbe
mov
dec
xchg
dec
lea
mov
lea
xchg
mov
xchg
mov
lea
inc
dec
inc
dec
je
xchg
mov
inc
xor
add
mov
xor
cmp
jb
mov
lea
lea
lea
mov
mov
lea
xchg
mov
mov
dec
dec
jne
lea
mov
mov
lea
inc
incl
mov
cmp
jne
mov
cmp
js
mov
lea
mov
xchg
dec
xchg
lea
mov
lea
dec
xchg
lea
mov
xchg
dec
mov
call
cmp
je
xchg
lea
lea
mov
mov
mov
xchg
mov
lea
lea
mov
lea
inc
dec
lea
mov
mov
push
mov
push
call
cmpl
je
cmp
je
xchg
lea
lea
mov
mov
mov
xchg
mov
lea
lea
mov
lea
inc
dec
lea
mov
cmp
jae
cmp
jbe
mov
dec
xchg
dec
lea
mov
lea
xchg
mov
xchg
mov
lea
inc
dec
inc
dec
je
xchg
mov
inc
lea
mov
cmp
je
mov
lea
lea
xchg
mov
mov
xchg
inc
dec
dec
dec
je
dec
dec
inc
lea
mov
lea
dec
dec
push
mov
pushl
xchg
push
jmp
cmp
jle
lea
xchg
lea
lea
lea
xchg
inc
inc
mov
xchg
xchg
xchg
lea
xchg
xchg
mov
dec
mov
pop
ret
add
imul
add
outsb
add
insb
add
add
add
add
add
add
add
in
add
lea
mov
cmp
je
mov
lea
lea
xchg
mov
mov
xchg
inc
dec
dec
dec
je
dec
dec
inc
lea
mov
lea
dec
dec
movb
mov
mov
mov
add
mov
xor
add
cmp
jne
pushl
push
jmp
add
sub
cmp
jne
lea
mov
cmp
je
mov
lea
lea
xchg
mov
mov
xchg
inc
dec
dec
dec
je
dec
dec
inc
lea
mov
lea
dec
dec
cmpb
jne
cmp
je
xchg
lea
lea
mov
mov
mov
xchg
mov
lea
lea
mov
lea
inc
dec
lea
mov
movb
mov
cmp
js
mov
lea
mov
xchg
dec
xchg
lea
mov
lea
dec
xchg
lea
mov
xchg
dec
push
push
push
call
mov
mov
mov
mov
cmp
jb
mov
xchg
xchg
mov
xchg
mov
xchg
inc
dec
mov
inc
inc
inc
lea
mov
lea
mov
jmp
cmp
jne
lea
inc
dec
inc
mov
inc
dec
inc
xchg
mov
mov
lea
xchg
xchg
lea
mov
lea
mov
mov
inc
dec
movb
cmp
jae
cmp
jbe
mov
dec
xchg
dec
lea
mov
lea
xchg
mov
xchg
mov
lea
inc
dec
inc
dec
je
xchg
mov
inc
mov
mov
pop
ret
add
add
jo
jo
ja
imul
arpl
jo
insb
add
add
add
in
add
cmp
je
xchg
lea
lea
mov
mov
mov
xchg
mov
lea
lea
mov
lea
inc
dec
lea
mov
lea
cmp
je
mov
dec
dec
dec
mov
inc
inc
dec
jmp
mov
mov
dec
mov
lea
mov
lea
lea
lea
lea
dec
call
test
jne
mov
jmp
movw
mov
cmp
jb
mov
xchg
xchg
mov
xchg
mov
xchg
inc
dec
mov
inc
inc
inc
lea
mov
lea
mov
call
lea
mov
pop
ret
nop
push
mov
add
cmp
je
xchg
lea
lea
mov
mov
mov
xchg
mov
lea
lea
mov
lea
inc
dec
lea
mov
movl
mov
push
call
cmp
jae
cmp
jbe
mov
dec
xchg
dec
lea
mov
lea
xchg
mov
xchg
mov
lea
inc
dec
inc
dec
je
xchg
mov
inc
movl
mov
push
call
call
mov
mov
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
cmp
jb
mov
xchg
xchg
mov
xchg
mov
xchg
inc
dec
mov
inc
inc
inc
lea
mov
lea
mov
movl
mov
push
call
movl
mov
push
call
cmp
jae
cmp
jbe
mov
dec
xchg
dec
lea
mov
lea
xchg
mov
xchg
mov
lea
inc
dec
inc
dec
je
xchg
mov
inc
mov
mov
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
movl
movl
xor
mov
movl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
movl
movl
xor
mov
movl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
call
lea
cmp
je
mov
dec
dec
dec
mov
inc
inc
dec
jmp
mov
mov
dec
mov
lea
mov
lea
lea
lea
lea
dec
movl
mov
push
call
mov
mov
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
movl
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
cmp
jne
lea
inc
dec
inc
mov
inc
dec
inc
xchg
mov
mov
lea
xchg
xchg
lea
mov
lea
mov
mov
inc
dec
push
call
mov
movl
mov
push
call
cmp
jae
cmp
jbe
mov
dec
xchg
dec
lea
mov
lea
xchg
mov
xchg
mov
lea
inc
dec
inc
dec
je
xchg
mov
inc
movl
mov
push
call
call
mov
mov
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
cmp
jb
mov
xchg
xchg
mov
xchg
mov
xchg
inc
dec
mov
inc
inc
inc
lea
mov
lea
mov
movl
mov
push
call
movl
mov
push
call
cmp
jae
cmp
jbe
mov
dec
xchg
dec
lea
mov
lea
xchg
mov
xchg
mov
lea
inc
dec
inc
dec
je
xchg
mov
inc
mov
mov
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
movl
movl
xor
mov
movl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
movl
movl
xor
mov
movl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
call
lea
cmp
je
mov
dec
dec
dec
mov
inc
inc
dec
jmp
mov
mov
dec
mov
lea
mov
lea
lea
lea
lea
dec
movl
mov
push
call
mov
mov
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
movl
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
call
lea
cmp
je
mov
dec
dec
dec
mov
inc
inc
dec
jmp
mov
mov
dec
mov
lea
mov
lea
lea
lea
lea
dec
mov
pop
ret
add
xor
xor
xor
xor
add
xor
xor
xor
add
add
ss
xor
aaa
xor
xor
cmp
add
aaa
cmp
xor
add
xor
xor
cmp
add
xor
xor
xor
xor
cmp
cmp
aaa
cmp
aaa
xor
cmp
add
add
xor
xor
add
xor
xor
cmp
xor
aaa
xor
add
ss
aaa
aaa
add
cs
jae
jae
gs
xor
pop
pop
popa
jo
ja
jp
arpl
add
in
add
cmp
jne
lea
inc
dec
inc
mov
inc
dec
inc
xchg
mov
mov
lea
xchg
xchg
lea
mov
lea
mov
mov
inc
dec
mov
mov
mov
mov
movl
mov
push
mov
push
mov
push
call
call
mov
mov
mov
mov
movl
movl
xor
mov
movl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
movl
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
call
cmp
jb
mov
lea
lea
lea
mov
mov
lea
xchg
mov
mov
dec
dec
jne
lea
mov
mov
lea
inc
mov
mov
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
je
xchg
lea
lea
mov
mov
mov
xchg
mov
lea
lea
mov
lea
inc
dec
lea
mov
mov
mov
mov
mov
movl
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
call
call
mov
mov
mov
mov
movl
mov
push
mov
push
mov
push
call
call
cmp
jae
cmp
jbe
mov
dec
xchg
dec
lea
mov
lea
xchg
mov
xchg
mov
lea
inc
dec
inc
dec
je
xchg
mov
inc
mov
mov
mov
mov
movl
mov
push
mov
push
mov
push
call
call
movl
mov
push
call
call
movl
mov
push
call
movl
mov
push
call
call
cmp
jle
lea
xchg
lea
lea
lea
xchg
inc
inc
mov
xchg
xchg
xchg
lea
xchg
xchg
mov
dec
mov
mov
mov
mov
movl
movl
xor
mov
movl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
movl
movl
xor
mov
movl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
movl
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
movl
movl
xor
mov
movl
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
add
add
xor
xor
aaa
xor
aaa
add
cmp
xor
xor
cmp
xor
add
xor
cmp
xor
cmp
add
cmp
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
cmp
cmp
xor
add
aaa
xor
xor
cmp
add
xor
aaa
xor
add
add
xor
xor
xor
add
xor
cmp
xor
add
cmp
xor
xor
add
xor
xor
xor
add
xor
xor
xor
xor
add
xor
xor
cmp
xor
add
aaa
xor
xor
xor
xor
add
xor
xor
cmp
xor
cmp
add
cmp
xor
add
xor
aaa
xor
xor
add
xor
add
xor
xor
add
add
xor
xor
aaa
add
xor
aaa
cmp
xor
xor
xor
aaa
xor
cmp
add
subl
jae
mov
mov
cmp
js
mov
lea
mov
xchg
dec
xchg
lea
mov
lea
dec
xchg
lea
mov
xchg
dec
mov
mov
lea
call
cmp
jb
mov
lea
lea
lea
mov
mov
lea
xchg
mov
mov
dec
dec
jne
lea
mov
mov
lea
inc
ret
ret
lea
loopne
lods
aas
xchg
mov
or
ljmp
add
add
add
mov
sub
mov
iret
sub
mov
xor
fwait
add
xorb
pop
aas
arpl
std
add
loop
jnp
dec
add
push
push
push
cld
push
xchg
pop
mov
andb
out
test
add
testl
mov
lret
push
jbe
ret
add
jecxz
mov
and
mov
add
add
add
add
into
inc
mov
add
push
mov
mov
add
add
jne
cmp
push
push
dec
push
fldenv
add
in
dec
mov
add
scas
scas
sbb
push
int
add
sbbb
mul
adc
insl
sbb
add
add
mov
adc
cli
add
sbbb
add
push
mov
dec
mov
inc
cwtl
add
into
pop
add
jge
add
mov
mov
mov
add
mov
push
add
add
imul
mov
add
pushf
adc
and
js
add
inc
add
call
add
xchg
add
sub
fdivr
test
add
movsl
jecxz
xor
std
xchg
inc
scas
mov
mov
add
add
pop
pop
pushf
das
js
add
fcoms
rcl
leave
mov
ss
add
add
and
add
dec
mov
add
add
add
add
mov
xchg
lods
push
mov
xor
add
outsl
push
push
or
add
pop
addl
add
popf
add
stc
sub
into
arpl
sub
mov
roll
lock
add
cmpsl
or
add
mov
xchg
jae
add
fsubrs
sbb
out
add
jnp
out
punpcklbw
xorl
push
dec
add
aas
or
add
add
aam
ja
daa
int3
fisttps
mov
inc
inc
cmp
add
mov
jae
add
mov
lahf
mov
sbb
pusha
mov
add
add
mov
mov
cld
leave
add
ret
add
aam
mov
stos
add
in
dec
dec
fildl
or
add
sub
mov
add
push
pop
test
add
fldl
ljmp
pop
iret
add
cmp
add
xchg
or
pop
bound
bound
cld
and
add
xchg
cmp
add
bound
push
xchg
dec
outsb
pop
mov
add
add
add
xlat
mov
outsb
sub
rolb
push
fsubs
add
std
xor
mov
push
ds
add
insl
mov
mov
or
add
icebp
add
add
dec
push
stc
and
adc
add
add
sub
jecxz
add
into
dec
sbb
sbb
testb
out
add
lahf
loopne
mov
mov
jle
insb
add
push
add
js
push
insb
cs
add
add
add
add
xor
or
mov
add
fcoml
adc
sbb
mov
cld
scas
aaa
stos
insl
inc
repnz
fmuls
pop
cwtl
push
add
in
rorb
iret
jecxz
pop
aaa
add
add
filds
add
mov
divb
imul
out
add
add
insb
in
add
adc
add
mov
out
scas
sbb
add
rcll
jge
sub
int3
push
pop
add
fdivr
incb
dec
lock
test
addl
out
sti
dec
push
bound
cld
jl
push
imul
popa
pop
inc
or
dec
addr16
sub
loop
mov
xchg
mov
les
dec
mov
pushf
adc
les
jnp
and
stc
mov
xchg
pop
cwtl
das
xorl
lods
push
jo
aam
xor
or
push
lods
clc
stos
out
fwait
and
imulb
out
jnp
fisubrs
js
lcall
adc
imul
incl
push
pop
fcomi
loop
push
jecxz
jae
sub
or
rclb
push
pop
and
xchg
cltd
out
scas
sbb
fs
imul
jne
hlt
inc
sahf
sbb
cmpsb
cmp
insb
repnz
mov
pusha
xchg
aas
hlt
push
mov
jbe
dec
mov
push
prefetcht1
dec
aaa
jge
imul
inc
cli
add
jge
int3
inc
sahf
ljmp
adc
imul
push
adc
and
sti
andl
ret
cmpsb
sahf
das
das
in
cli
js
enter
daa
sub
or
fistpl
jl
js
dec
imul
or
lahf
mov
lods
je
push
or
push
sbb
xor
mov
and
cmpsb
add
push
mul
imul
sub
mov
subl
outsb
adc
push
scas
add
push
mov
sbb
into
movsl
add
inc
mov
push
push
dec
inc
int
jle
sub
pop
adc
lcall
into
fsubrl
and
std
out
test
sub
jg
jb
mov
dec
daa
mov
movsl
inc
mov
and
and
cmp
loope
and
pusha
outsb
push
dec
cltd
cmc
lret
rcll
mov
repz
lock
clc
into
popa
std
inc
cmc
subl
mov
stc
xchg
and
fs
and
ret
data16
aam
mov
out
pop
sbb
push
mov
lods
cmp
mov
cmp
lret
mov
xchg
mov
pop
or
imul
movsl
add
push
xchg
push
fsubrl
cmp
clc
xor
dec
mov
int
shll
in
test
test
push
adc
xchg
nop
lods
push
rorb
dec
adc
mov
mov
adc
repz
sub
aaa
jo
lea
adc
mov
or
jbe
xor
pop
adc
inc
or
aas
push
leave
loope
xor
xor
je
cmp
jecxz
sub
notb
out
cwtl
scas
sbb
or
fcoml
jg
pop
mov
mov
pop
mov
mov
lock
std
ret
lds
fs
lret
aaa
gs
fwait
jno
xor
mov
add
jne
cmpsl
sub
mov
xchg
inc
inc
cld
shrl
lret
and
lods
and
incl
pop
rol
push
rcll
in
cld
repnz
push
mov
or
into
mov
xchg
jl
push
ljmp
je
inc
xchg
sarl
mov
mov
add
addr16
cltd
fs
lds
shll
xchg
test
mov
xchg
push
sbb
cmp
pop
addl
cmpsl
add
fwait
or
lcall
shrb
sub
and
mov
orb
pop
ds
enter
push
dec
xor
mov
mov
xchg
lock
pop
sub
jne
push
movsb
out
fisubrl
and
cmc
cmp
fildll
enter
and
push
scas
xchg
les
dec
out
mov
mov
sbb
lret
add
in
inc
inc
pusha
xchg
fistps
cmp
jmp
rol
push
add
addr16
xor
mov
in
cwtl
inc
stos
pop
addr16
and
xor
mov
scas
mov
xor
in
sbb
sbb
xor
ret
data16
pop
adc
or
xchg
pop
inc
mov
out
test
cmp
inc
shl
repz
mov
sbb
add
imul
pop
ficoms
leave
lock
cltd
mov
pop
pop
dec
leave
xlat
rcrb
ud0
imul
jbe
lret
and
cwtl
fdivs
cmp
pushf
or
xor
test
int3
xor
pop
repz
push
insb
mov
xor
jge
pushf
scas
repnz
cs
cmp
adc
ss
and
in
loope
aaa
enter
daa
sub
jle
pop
outsl
mov
sbbl
dec
fsubs
movsl
test
mov
lahf
ret
push
xor
pop
push
in
push
inc
add
add
shlb
pushf
aad
push
xchg
repnz
fwait
test
fisubl
cmp
jle
adc
xor
subb
sbb
and
cltd
xor
dec
adc
pop
sahf
test
push
mov
fadds
xchg
mov
push
cmpsb
movsl
push
fcoml
fildll
out
jmp
sahf
mov
adc
dec
jg
out
xchg
mov
mov
adc
mov
push
cmp
sbb
ret
testl
stos
adc
in
xor
sbb
inc
test
adc
dec
xor
mov
dec
loopne
loop
mov
stc
dec
outsl
test
push
adc
inc
iret
bound
lods
mov
mov
cli
test
cmp
xchg
fdivr
pop
cmpsl
dec
xor
push
lcall
inc
add
imul
pushl
xchg
adc
repz
sbb
loopne
mov
mov
call
stos
int3
rcll
imul
rorl
rolb
stc
fldcw
push
push
inc
mov
lea
inc
sbb
clc
mov
push
pop
push
fnsave
pushf
and
inc
pop
jmp
xlat
xchg
inc
iret
xchg
jbe
testb
dec
adc
xchg
je
jl
jecxz
adc
aam
jns
clc
sarl
push
sub
dec
lret
mov
dec
es
fisttpl
stc
mov
lock
das
loop
xor
pushf
stos
jne
call
flds
jecxz
mov
dec
jo
stc
cmpsl
sub
push
repnz
icebp
outsb
jle
cld
imul
lds
mov
shlb
sub
sub
jmp
aam
and
push
gs
stc
fstl
shll
cmpsl
push
ljmp
or
mov
and
xchg
pop
sbb
push
push
lret
outsb
mov
jb
cld
cltd
fwait
or
mov
pusha
scas
xchg
cltd
dec
cmp
test
inc
mov
sbb
sbb
rcll
mov
stos
in
cmc
push
jb
jns
adc
jl
mov
dec
mov
and
or
push
cltd
mov
lds
mov
stc
push
out
imul
dec
es
cmpl
mov
fwait
ss
dec
mov
ret
mov
mov
ret
mov
xchg
jg
sub
inc
xchg
cmp
movsb
sub
dec
dec
mov
cmp
lahf
fs
test
or
jle
lods
in
in
lods
adc
push
push
fistpll
shrl
xchg
popf
dec
dec
orl
push
idivb
mov
sub
and
insb
cmpsb
arpl
scas
sbb
xchg
push
jecxz
adc
xor
iret
mov
pop
sbb
inc
and
loopne
stos
inc
sbb
mov
xchg
sbb
cmpsb
cmp
dec
sahf
fisubrl
xchg
clc
sbb
jae
imul
dec
fidivrs
sbb
jae
fcoml
imul
aad
leave
dec
xchg
xor
jge
arpl
pcmpeqd
mov
insb
sbb
sti
sbb
sti
push
mov
inc
jl
add
xchg
xchg
int3
sbb
fistps
loopne
push
dec
aas
lcall
repz
rcr
or
sarl
clc
loop
movsb
sub
lea
in
enter
insl
and
lret
mov
jno
out
jl
jl
dec
inc
js
ds
out
mov
call
xchg
push
add
repnz
mov
int3
inc
push
aad
mov
pop
test
mov
std
push
loope
loope
jle
sub
lret
outsb
cmp
pushf
dec
outsb
push
in
adcb
fnstsw
repnz
aaa
pop
jns
xchg
stos
xor
popa
scas
int
fstl
jne
pop
pop
adc
lcall
sub
add
bound
fstpl
jae
inc
cmp
test
arpl
inc
sbb
jg
outsb
xchg
mov
sub
mov
lds
insl
push
mov
cmp
jmp
test
lea
mov
ss
sbb
or
cmc
mov
outsl
sub
in
add
pop
xchg
xor
pop
in
xchg
int3
cmc
shl
push
push
cli
mov
dec
jecxz
mov
movsb
imul
sbb
js
out
cmp
add
adc
mov
imul
lods
loope
xchg
mov
xchg
sbb
push
pop
movsb
xlat
lret
sub
movsb
outsb
in
pop
xchg
cmp
cs
cmc
jb
mov
pop
nop
bound
mov
test
fs
test
repz
cmp
loope
call
adc
and
or
pushf
int3
jnp
jmp
aad
mov
sbb
push
mov
xchg
inc
and
out
dec
mov
mov
push
jecxz
aas
jle
pop
cmpsb
idiv
lahf
movsb
insl
cwtl
and
adc
mov
lahf
orl
xor
fstpt
andb
test
inc
das
rcll
mov
jae
adc
rcll
es
insl
mov
jg
cmpsl
sub
xor
inc
fsts
lret
decb
call
in
mov
icebp
cmp
popw
sub
in
aam
gs
ret
sbb
xor
fnstsw
lahf
xchg
cli
scas
imul
ret
popa
movsl
pop
cmp
push
je
mov
test
repz
mov
hlt
jl
and
sub
cltd
rcrb
test
pop
mov
inc
dec
xchg
dec
dec
mov
test
adc
mov
sub
leave
pop
xlat
sar
stos
aam
pop
push
adc
shrb
lcall
xor
mov
xor
mull
mov
mov
mov
mov
jle
sub
mov
inc
sarb
insb
lods
mov
dec
cltd
and
jne
popa
popf
mov
dec
popf
out
cwtl
std
mov
dec
xor
in
sub
xchg
xchg
xor
dec
sbb
mov
jp
xor
aam
cmp
adc
in
jns
pusha
mov
add
jmp
push
cmpsl
cld
push
mov
inc
or
push
push
jle
aas
fcoms
push
sub
je
scas
jge
int3
push
aam
aaa
adc
loop
iret
sbb
and
jmp
out
inc
das
inc
insl
jae
xor
inc
mov
and
push
shlb
fisubl
dec
xchg
sahf
sbb
sbb
mov
cmp
fnsave
lds
adc
neg
js
fs
xchg
lds
daa
hlt
dec
inc
push
jbe
sub
jge
and
xor
aaa
mov
movsl
movl
push
arpl
push
mov
push
xor
adc
xor
mov
cmp
cld
lcall
dec
inc
in
scas
pop
inc
enter
daa
sub
loopne
mov
push
xchg
jl
mov
lea
jp
movsl
xchg
in
and
sbb
push
xlat
sbb
push
jnp
mov
loop
xchg
mov
or
loop
add
push
loopne
loope
test
sub
xchg
sbb
fucomip
cmp
dec
add
shl
adc
push
jle
mov
sbb
lret
add
test
xor
cwtl
repz
loop
sub
lea
fwait
inc
lcall
fsubrl
pop
sahf
out
or
pop
stos
iret
jg
icebp
ret
jmp
mov
shlb
mov
ss
lds
mov
mov
testl
daa
xchg
mov
push
adc
jge
sub
or
in
push
push
xor
pop
xor
loop
hlt
adc
mov
mov
mov
push
in
xchg
mov
repz
pop
and
jmp
lcall
popf
sub
repnz
dec
and
add
pop
push
xchg
and
ficoml
into
scas
jno
es
xchg
lcall
cmp
jmp
sub
add
mov
dec
scas
sti
sub
out
notl
dec
dec
int3
loope
inc
jae
and
fwait
sahf
push
les
scas
repz
in
inc
rorb
into
pop
lcall
jp
pop
mov
outsb
lahf
pushf
ja
push
jmp
jno
pop
das
addl
sub
xor
enter
adc
and
lahf
jecxz
scas
sub
pop
dec
jle
inc
pop
fcompl
cltd
insl
inc
mov
sbb
mov
fucomi
ljmp
test
aaa
lock
lds
mov
rcl
mov
fildl
and
fisubl
jmp
jno
dec
data16
cmpsl
daa
mov
dec
icebp
sbb
jp
push
in
add
insl
leave
inc
mov
pop
cmp
es
adc
push
rolb
jo
mov
cld
mov
test
fldl
fucom
scas
cmpsb
clc
jg
mov
xor
imulb
andl
pushf
out
out
sti
xchg
jmp
xor
add
dec
nop
test
int
mov
mov
or
test
sbb
xchg
xchg
jo
pushf
dec
sarl
push
pop
cmpb
stos
ret
xor
mov
xor
xor
sti
aam
xor
sahf
mov
ljmp
insb
xor
stc
fsubs
dec
je
mov
outsl
mov
ja
dec
test
push
jg
addr16
xchg
xchg
lret
sbb
jne
je
mov
icebp
jbe
ja
cmc
cwtl
mov
in
imul
pop
xor
test
push
inc
or
dec
xchg
add
int
mov
sub
inc
jle
fsubrl
mov
mov
fcomip
movl
int3
or
icebp
mov
jl
leave
popf
int
hlt
mov
test
sahf
call
insb
jl
and
scas
loopne
or
in
stos
cmpsb
popf
iret
jnp
clc
ret
add
mov
mov
jae
push
inc
ret
or
lods
inc
inc
inc
dec
mov
inc
xchg
cmc
enter
rcrb
lahf
or
fiadds
aad
rclb
out
mov
push
insb
add
cmp
mov
xchg
push
shlb
mov
jge
dec
out
jg,pt
aaa
jns
dec
or
addb
icebp
mov
push
push
adc
flds
mov
scas
mov
and
dec
mov
pop
enter
mov
cmpsb
stos
jmp
mov
arpl
enter
mov
repnz
ljmp
ds
xchg
jno
lcall
lahf
pop
mov
icebp
test
inc
addl
xor
js
daa
xor
pop
mov
push
xchg
out
loope
mov
sub
sub
cmp
mov
inc
rol
pop
stc
mov
pop
andb
dec
add
sub
pop
push
jo
arpl
int
int3
sub
aas
pop
punpckhwd
mov
fsts
sub
popa
push
test
sub
cmpb
jg
jns
mov
fnstsw
mov
fsts
mov
xchg
dec
mov
or
mov
cmp
aad
into
in
adc
cmc
popf
arpl
inc
or
loop
bound
jae
mov
inc
mov
inc
mov
lods
jo
push
mov
test
cli
push
cld
xlat
xor
pop
loop
adc
jg
incb
add
enter
mov
pop
xchg
imul
add
add
mov
int3
or
cmp
insb
movsl
cmp
in
xor
loop
fsts
cs
cmpsb
jns
ds
sbb
aas
dec
sub
inc
xchg
rcr
mov
les
mov
repz
fidivrs
movb
lea
sub
push
test
push
mov
scas
mov
push
sbb
rorb
inc
and
adc
aas
rcl
or
mov
dec
js
mov
loop
out
arpl
popf
pusha
inc
std
in
icebp
cmp
pop
dec
cmp
and
loop
cmp
jge
out
and
pop
out
mov
jo
mov
aam
lock
das
jg
clc
mov
rcr
and
cltd
dec
shll
mov
insl
mov
scas
cmpsl
and
icebp
repz
sbb
jg
jne
fmull
add
and
imul
rclb
jle
sub
out
ret
cmp
push
scas
mov
push
clc
mov
dec
sbb
test
fbld
mov
lods
in
cmpsb
ds
dec
mov
scas
xchg
jecxz
leave
add
fdivp
test
xchg
pop
mov
iret
pop
xchg
dec
outsl
ss
test
xor
sbb
adc
add
stos
mov
clc
push
pop
inc
cld
add
pop
inc
xchg
lcall
stos
pop
or
in
xor
dec
loop
xchg
xorl
test
mov
sub
xlat
ja
dec
fisttps
jne
inc
or
adc
fwait
ret
inc
jns
pop
or
jb
into
out
push
fisttpll
jne
lahf
jns
inc
aad
or
setae
shrl
sub
inc
cmpsb
aaa
xchg
cmp
repz
jns
mov
cwtl
rolb
jle
popa
in
mov
movsl
jp
push
xchg
dec
xchg
test
fsubrp
int3
idivl
dec
push
cmp
dec
push
aas
xchg
mov
call
sbb
and
push
cmp
xor
pop
scas
inc
or
bound
out
xchg
iret
fidivrl
mov
pop
out
mov
insb
jae
in
inc
lds
iret
or
daa
jbe
inc
into
xchg
and
or
sbb
shlb
and
in
lds
pusha
shrb
add
stos
test
leave
mov
mov
arpl
out
jbe
push
data16
push
movsl
sbb
sahf
add
or
lret
add
dec
int3
fdivl
push
clc
mov
fidivl
out
scas
outsb
stos
std
and
jns
sbb
ja
push
sbb
repnz
sub
test
lods
mov
cmp
cltd
cmp
or
xchg
leave
rcrb
mov
sub
lahf
ds
pop
test
adc
add
lods
pop
push
test
js
cmp
push
sti
xchg
loope
jmp
and
aad
jl
repz
pushf
mov
adc
mov
fsub
jb
test
divl
sub
arpl
bound
sub
and
mov
daa
push
add
or
add
sub
bound
adcb
mov
add
mov
or
and
cs
fadds
jle
testl
imul
stos
aas
mov
in
into
sar
or
fs
xor
xchg
js
mov
add
adc
je
outsb
js
lods
push
pop
fisttpl
add
lea
mov
movsl
cmp
add
or
adc
gs
cmpxchg
mov
fadds
adc
stos
sub
add
xchg
and
mov
dec
cmp
inc
push
xlat
xchg
sub
stc
sti
mov
pushf
cmp
sti
mov
cs
in
pop
aad
fsubrs
nop
repz
inc
dec
mov
add
popa
pop
sbb
jp
repz
movb
lea
inc
lea
pop
and
mov
clc
push
dec
pushf
int
jle
add
or
lods
int
inc
cmp
mov
jb
fdivs
in
dec
out
mov
jg
std
pop
add
loopne
insb
std
xchg
outsb
negb
pop
scas
mov
adc
cmp
dec
shrb
bound
ss
jl
xchg
or
mov
js
and
stos
rcl
rclb
out
or
insl
dec
pop
sbb
mov
shrl
mov
stc
mov
and
out
inc
pop
dec
push
out
mov
cmpsb
stos
dec
aam
and
mov
fnsave
ds
cmc
mov
xor
sbb
insb
popa
ljmp
mov
lods
int3
aaa
xchg
ja
imul
popf
cmovb
cltd
ja
mov
sub
jl
xchg
push
dec
cmc
loop
and
xchg
xor
sbb
in
xchg
pop
fdivrs
stos
mov
mov
lea
and
sbb
leave
ljmp
mov
dec
shlb
sbbl
dec
repnz
pop
inc
xchg
inc
mov
sub
mov
dec
inc
in
jns
dec
movb
outsl
push
out
xor
dec
mov
in
in
xchg
je
scas
jp
sub
cmp
cmpb
mov
mov
pop
inc
mov
in
cmp
pusha
lea
xchg
xchg
jnp
into
jmp
leave
mov
mov
add
popf
sbb
mov
daa
jbe
stos
cwtl
inc
xor
sar
test
push
popf
sbb
loopne
and
test
push
iret
cmp
adc
and
mov
sahf
add
jae,pt
mov
ja
push
and
mov
push
fidivrl
dec
xchg
mov
xor
jge
pop
faddp
inc
rol
out
jl
rorb
mov
std
rcrb
hlt
sub
arpl
sbb
sti
sbb
aas
or
pop
into
add
fwait
or
shlb
xor
inc
mov
scas
dec
mov
daa
cmp
popa
fisubl
mov
in
fs
and
loopne
jno
jb
jl
jne
dec
add
jecxz,pt
push
movsl
test
ret
and
lahf
pop
mov
icebp
test
fsub
xchg
inc
pop
add
shlb
and
xchg
pop
xlat
xlat
cmp
pop
loope
jb
sub
fldenv
outsb
arpl
sub
shlb
testb
fnstenv
adc
add
mov
cli
stos
push
push
imul
sub
popa
enter
nop
daa
lcall
xchg
fsubrl
jle
sahf
iret
push
cs
test
subb
enter
mov
sub
ss
xor
ret
test
sbb
jl
or
fwait
cmc
sub
sbb
outsl
movsl
adc
push
fldcw
fs
push
adc
mov
mov
xchg
xor
js
aas
push
decb
mov
xchg
pop
lds
lods
adc
fisubrl
dec
mov
das
lods
pop
add
repnz
jecxz
sbb
scas
loopne,pt
inc
adc
shl
push
add
mov
pop
jae
sti
aaa
and
cs
daa
mov
nop
into
out
dec
jmp
mov
les
jmp
dec
inc
jbe
add
pop
call
or
insb
pop
sarl
adc
js
loopne
hlt
mov
pop
sbb
lds
sbb
adc
jb
dec
mov
data16
je
mov
or
and
xor
cmp
sbbl
or
andl
pusha
dec
mov
sub
mov
icebp
jecxz
das
cmp
push
test
lahf
adc
jb
and
fcmovu
dec
push
subl
lods
fidivrl
mov
loop
lret
mov
add
ljmp
gs
sarb
xor
rol
xchg
in
xor
test
clc
xor
cmp
mov
xor
lcall
ret
inc
arpl
adc
push
gs
pop
add
xchg
lea
cmp
or
push
repz
cmp
mov
xchg
sbb
jp
roll
dec
stos
nop
inc
sbb
mov
mov
mov
xor
out
or
xor
cmc
aaa
mov
adc
and
mov
aam
dec
in
push
inc
sub
testb
mov
and
call
jne
add
mov
bound
cmp
inc
xchg
ret
xchg
xor
xor
addr16
pop
jp
js
mov
cmp
mov
jbe
push
jle
inc
sub
int
test
sub
adc
mov
lret
sbb
push
lds
jg
pop
insl
stos
push
cs
sub
out
jp
mov
xchg
lcall
xchg
test
cmp
dec
iret
cwtl
insb
xor
xor
and
pop
bound
inc
lret
pop
out
or
sbb
sahf
fisubrl
rcll
pop
adc
mulb
lds
pop
shlb
mov
push
push
in
mov
xchg
xchg
arpl
add
adc
pop
aaa
mov
fisttps
add
add
dec
fmulp
mov
mov
push
mov
mov
jo
xchg
mov
and
pop
inc
movsb
in
jg
mov
popa
cmpsb
xor
in
dec
xchg
lret
ljmp
mov
jl
add
mov
push
mov
pop
and
iret
xchg
and
jnp
cmpsl
mov
loope
xchg
repz
insb
mov
iret
pop
push
xor
push
out
loope
or
sub
out
mov
fwait
int
outsb
inc
pop
stos
adc
push
lods
sbb
rclb
sbb
mov
dec
sahf
pop
add
sbb
xor
mov
fcmove
jo
outsb
sub
add
lcall
mov
sub
aas
sbb
lret
jg
sub
mov
in
xlat
mov
inc
cs
push
inc
and
or
jge
lcall
addl
fimuls
cmp
into
xchg
test
cmc
repnz
outsl
test
adc
cwtl
mov
mov
data16
leave
lods
and
mov
out
mov
cli
mov
push
xor
loope
xchg
mov
jle
scas
sbb
leave
mov
cmc
xor
pop
in
adcb
xor
imul
stos
inc
xchg
cmpsb
stc
xor
jge
fcom
add
mov
cmp
jb
call
cs
scas
cmp
test
cmp
inc
mov
and
les
mov
sbb
mov
lea
sti
call
mov
xchg
adc
xor
jecxz
pop
pop
mov
mov
fwait
aas
mov
aad
jp
dec
dec
fnsave
mov
sbb
insb
mulb
vpsrad
dec
cwtl
int3
cmc
jns
xchg
add
mov
xor
loope
dec
test
and
movsb
jae
mov
inc
jmp
dec
rclb
sbb
xchg
mov
out
xlat
and
lret
pop
cmpsl
ja
cmc
decb
push
ss
cmpsl
and
inc
icebp
js
frndint
add
std
lret
sub
mov
xor
sbb
mov
rorb
sbb
mov
cwtl
push
imull
clc
imul
xchg
xor
jb
popa
sbb
xor
push
sub
jae
pushf
xchg
add
notl
add
mov
in
pop
cltd
in
cli
test
jg
mov
cwtl
xchg
test
and
test
mov
cmp
xchg
xlat
push
rcr
das
or
pop
stos
jg
pushf
push
inc
popl
add
stos
pushl
sub
or
pop
iret
xor
inc
in
mov
std
out
mov
pop
icebp
xchg
ja
pop
movsb
dec
fcomps
ds
ret
js
or
out
fwait
push
in
dec
or
mov
ds
out
repz
cs
mov
in
lods
sbb
mov
adc
xor
mov
mov
ror
or
stos
sub
mov
jl
jle
test
in
push
pop
pusha
ret
jmp
mov
and
mov
subl
test
lcall
stos
jle
nop
and
mov
cli
jnp
test
push
aaa
jecxz
adc
jle
iret
testl
sub
dec
fiaddl
stc
jae
jmp
or
cltd
push
dec
jnp
fcmovu
or
jns
mov
fimuls
push
adc
jle
mov
mov
std
out
shl
arpl
add
sbb
jbe
aaa
jne
fimull
cmc
std
movl
popf
in
pop
cmp
inc
push
mov
jo
jo
lea
or
jp
inc
stc
movsb
outsl
cmpsb
pop
push
push
daa
jnp
mov
test
enter
daa
and
out
cmp
nop
inc
jl
imul
movsl
mov
dec
and
out
push
neg
jno
prefetcht0
jb
popl
fsubrs
pop
xchg
xor
js
call
or
push
loope
lds
cmp
scas
outsb
movsl
sub
test
inc
repz
das
jae
sub
out
xorl
xor
ja
int
pop
sub
add
or
daa
lcall
mov
sub
sbbl
outsb
mov
jg
mov
mov
xchg
pop
xorb
movsb
ss
xor
cmp
cmp
inc
xchg
jne
push
popf
push
rorl
rorb
stos
sbb
cmc
mov
jle
outsl
arpl
loope
dec
push
fs
inc
adc
sub
in
or
mov
add
cli
ljmp
cmp
push
imul
gs
shl
and
loopne
out
pop
add
jo
or
mov
lods
jns
adc
mov
lret
xchg
imul
push
cmp
cmp
sub
das
mov
fstpl
sti
xchg
pop
subb
js
aad
xor
nop
test
outsl
dec
cmpsl
fistl
inc
rclb
or
scas
sahf
xor
imul
repz
scas
dec
xorb
xor
or
sub
std
lea
jmp
pusha
rcrl
imul
je
aas
dec
push
in
int
imul
jmp
jecxz
fcoml
imulb
cmp
cwtl
xchg
mov
push
out
xchg
mov
mov
adcl
xchg
mov
xor
das
sti
pop
inc
mov
popf
lds
mov
je
lods
mov
es
adc
es
add
jge
cmpsl
and
mov
dec
out
aam
sub
imul
shl
mov
stos
xchg
repz
or
mov
ret
je
scas
push
mov
inc
xor
cmpsb
inc
rcll
iret
cs
das
adc
lods
cwtl
cld
xchg
dec
aad
dec
mov
daa
maxps
add
orb
std
mov
xchg
cmp
or
xchg
sub
shll
pop
nop
pop
fstps
add
out
pop
add
jae
clc
call
sub
cli
or
scas
xor
jmp
mov
lcall
pop
push
mov
cwtl
dec
lret
or
mov
fwait
jg
pop
dec
jmp
arpl
scas
mov
out
ror
cmp
xor
jns
lret
ftst
aaa
nop
mov
popa
xchg
out
sub
sub
sub
and
inc
jge
add
and
das
mov
jecxz
ja
fstpt
pusha
pop
sub
xchg
hlt
mov
aas
xchg
sub
les
dec
lcall
aad
or
in
iret
stos
icebp
or
adc
jp
jnp
cmp
iret
les
adc
movsl
inc
iret
push
lods
push
ret
popf
pop
lret
inc
jno
inc
jae
jae
inc
shll
mov
inc
lret
ficoml
inc
aas
sbb
mov
sub
lds
add
div
imul
or
leave
jbe
and
jge
data16
in
jnp
xor
pop
or
pop
push
add
scas
int3
mov
pop
imul
push
test
aaa
xor
push
cwtl
lcall
js
cmp
cmp
movsb
cli
pop
and
pop
shll
xor
dec
js
daa
and
outsb
cmp
pusha
ss
aad
jl
mov
iret
ds
jmp
add
and
sbbl
test
cmp
dec
sbb
aaa
js
dec
xor
xchg
outsl
test
scas
mov
and
into
xchg
add
stc
dec
outsb
or
lock
repz
add
mov
mov
dec
mov
addr16
push
jb
push
int
mov
sub
outsl
pop
mov
lret
lcall
push
fsubrl
shll
mov
jns
addb
pop
jg
pop
xor
mov
popf
mull
add
cmp
mov
fdiv
pop
cmp
add
or
inc
imul
movsl
pusha
mov
sbb
and
cmc
adcb
outsl
inc
sub
or
scas
fs
add
data16
inc
lods
repz
lcall
nop
cli
sbb
jl
cmp
rol
mov
xchg
hlt
ret
adc
adc
pop
and
outsb
adc
aaa
sahf
imul
push
sub
ljmp
jmp
insl
sub
dec
popf
in
dec
push
push
sti
inc
pop
or
orl
orl
or
les
insl
repz
int3
rorb
into
adc
mov
pop
in
ljmp
jns
jae
rcr
pop
add
dec
inc
cmpsl
mov
cmp
dec
lret
push
jp
mov
cmp
imul
mov
pop
cwtl
inc
aad
mov
bound
loope
les
jle
fildl
push
aad
jne
adc
lock
inc
das
fisubl
mov
push
pop
js
inc
cmp
sar
or
sti
mov
xchg
dec
dec
pop
mov
and
mov
es
ds
push
dec
mov
pop
enter
dec
shll
jb
and
lret
shlb
movsl
sub
imul
int
movsb
clc
loope
dec
xchg
mov
pop
ljmp
xchg
lods
add
out
cmp
xchg
xchg
push
jmp
notb
movsbl
movsl
add
enter
pop
jecxz
pop
imul
xchg
inc
dec
jb
cmp
leave
stos
jle
stc
lods
and
mov
xor
cltd
stos
pop
inc
aaa
push
mov
cltd
add
mov
pushl
hlt
in
leave
lret
ds
in
mov
fnstsw
mov
rcrl
xchg
ja
add
dec
mov
aas
sub
xchg
mov
dec
into
sti
xor
sbb
cmp
out
mov
or
jns
xchg
xchg
mov
imul
mov
sbb
daa
push
pushf
cmpl
mov
mov
ret
ret
mov
push
inc
mov
pusha
stc
jp
fbstp
fnstenv
xchg
cmc
cmp
push
push
inc
out
popf
mov
jp
adc
clc
stos
or
insb
push
inc
jnp
mov
scas
xor
jbe
lds
pop
iret
mov
xor
outsb
cmp
add
adc
inc
pop
inc
aam
adc
mov
inc
inc
dec
add
inc
cmp
inc
pusha
sbb
rcr
imul
dec
ficoms
mov
shlb
repnz
adc
push
inc
in
push
rclb
shll
push
mov
negl
mov
mov
add
lcall
lcall
xor
mov
aaa
scas
leave
movsb
jecxz
pop
push
add
mov
pop
movsb
test
push
movsb
iret
and
add
dec
enter
daa
and
inc
cmp
push
jno
outsl
jl
lods
dec
dec
mov
outsl
or
les
and
fisubl
push
pushf
das
repz
or
call
fdivrp
in
loope
inc
js
inc
or
push
mul
push
cmpsl
add
daa
mov
outsb
imul
shl
mov
in
mov
and
out
add
add
pop
divl
ss
popl
jne
cwtl
int
clc
shrb
mov
lcall
aas
fcompl
sbb
push
and
or
mov
in
mov
iret
or
gs
jle
ss
icebp
cmp
scas
add
ret
lret
scas
sarl
mov
loopne
lods
mov
cmc
inc
xor
xor
pop
outsl
and
jnp
mov
loope
adc
imull
fimull
ss
inc
xchg
cli
push
out
pop
xor
in
xchg
cmp
add
or
outsl
int
pop
xchg
gs
cmp
mov
pop
inc
xchg
push
imul
imul
sbb
cs
outsb
sub
sub
mov
mov
jle
repz
test
in
call
xchg
dec
sub
clc
xor
in
les
or
lea
stos
or
adc
sub
mov
mov
inc
dec
lret
cmpsl
inc
ret
aas
fcmovnbe
jb
bnd
inc
pop
dec
je
cmpsb
out
jecxz
xor
imulb
jo
std
xlat
cmp
rcrb
mov
loope
add
or
in
mov
pop
or
pusha
mov
or
push
dec
movsb
mov
jle
cmp
fnstsw
cmpsl
and
scas
mov
std
mov
mov
mov
dec
xchg
ljmp
ror
rolb
vpaddq
dec
sbb
xchg
dec
enter
and
hlt
mov
clc
sbb
popa
xchg
bnd
ljmp
sub
loopne
out
pushf
imul
rcrl
and
sbb
inc
mov
test
mov
fdivrs
dec
xor
dec
push
pop
sbb
pop
pop
das
sub
stos
dec
jae
push
sub
in
add
insb
jmp
push
cli
in
xor
xor
mov
and
mov
mov
sub
mov
mov
or
sub
frstor
dec
mov
mov
call
mov
nop
fcoml
jns
call
repz
call
sub
and
stos
xorb
std
or
sub
cltd
mov
or
push
in
icebp
aaa
pusha
xchg
loope
mov
push
xchg
insl
xchg
xchg
shlb
push
rcrl
popf
fiadds
push
stos
xlat
mov
insl
insb
imul
sbb
adc
incb
pop
cmp
sbb
push
cmp
aaa
test
push
xchg
push
push
enter
clc
pop
rcll
mov
imul
jmp
cmc
movsb
mov
ror
sarl
pushf
popa
sbb
jge
and
arpl
dec
push
jbe
ret
push
jge
inc
rcrb
pop
xorl
add
mov
pop
leave
mull
sub
jge
addr16
jmp
out
in
pop
xor
stos
jne
adc
cmp
mov
in
out
sub
daa
and
cmp
ljmp
mov
dec
jbe,pn
ds
jmp
xchg
and
dec
lahf
clc
ret
in
outsl
daa
dec
test
rcr
push
inc
pop
jo
mov
in
js
lret
adc
xor
push
mov
push
lock
test
adc
mov
jmp
sbb
add
enter
mov
push
js
jns
or
aam
enter
mov
lcall
mov
sub
sahf
imul
ss
jg
sahf
push
mov
jl,pn
sti
outsb
add
push
cmp
and
cmp
movsl
cmp
imul
leave
lret
cwtl
rcl
push
mov
out
sbb
push
in
and
cmc
push
xor
xor
add
cmpsb
stc
je
jmp
adc
mov
daa
inc
add
orb
mov
jg
cli
cmpl
cmp
pop
mov
push
sub
cmp
int
in
in
mov
popa
jl
pop
pusha
cmc
dec
adc
fs
lea
xchg
mov
hlt
sbb
imul
mov
push
out
ds
mov
xchg
adc
or
nop
adc
aam
inc
or
les
mov
lea
arpl
call
xchg
pop
push
movsb
adc
push
fstps
and
inc
neg
inc
fstl
xchg
jb
pop
scas
dec
mov
xor
jecxz
rolb
jb
mov
jle
stos
cwtl
mov
ror
mov
test
push
incl
mov
ss
loopne
inc
lock
jbe
mov
ret
and
clc
test
lcall
insl
fistpl
dec
ds
pop
or
mov
aam
sbb
lods
or
jo
and
and
test
ficomps
or
fcom
fdivs
add
mov
gs
fstpl
dec
mov
push
pop
movsl
xchg
xor
ljmp
inc
lods
fldcw
mov
jmp
and
push
lods
cli
test
add
out
cltd
rcr
test
in
mov
sbb
xchg
adc
es
test
xchg
push
xchg
jge
sbb
and
aaa
xchg
cmp
shlb
push
add
test
jecxz
mov
int3
sub
jp
push
mov
arpl
cmp
pop
inc
xchg
jb
loope
stos
dec
movsb
and
inc
pop
xchg
xor
xchg
cmp
xchg
cmp
out
lret
mov
bound
ja
push
in
pop
in
das
repz
dec
add
shr
sub
sbb
scas
sarl
cmp
sub
mov
mov
mov
in
inc
cmp
fucomip
mov
insl
jecxz
jmp
mov
and
movsl
push
xchg
ljmp
xchg
inc
stos
dec
and
aam
insb
jnp
repz
scas
clc
rorl
push
or
adc
lods
cmp
pop
outsl
pop
inc
inc
xchg
daa
pop
jae
test
inc
fisubl
inc
push
inc
xchg
scas
fisubrl
cmp
sbb
jo
imul
neg
cwtl
xchg
xchg
sbb
mov
mov
out
out
leave
hlt
adc
hlt
in
fcoms
xchg
inc
inc
jge
mov
sbb
lods
aam
jno
push
or
mov
loop
dec
imul
sub
inc
insl
jo
das
inc
scas
xchg
inc
cmp
fmul
movsb
fwait
jl
push
inc
mov
cmpsb
ret
in
into
lret
dec
enter
daa
pop
sub
cmp
jnp
jl
inc
ret
dec
popf
hlt
ja
mov
loop
rorb
and
inc
out
pop
imul
push
cmc
test
sahf
cmp
mov
pop
das
out
js
call
xchg
push
xorb
jg
cltd
sub
movb
sahf
aam
lds
xchg
rcrb
sbb
cmp
sbb
rolb
in
push
jnp
and
sub
sbb
pop
sbbb
xchg
in
fsubrl
or
sahf
mov
icebp
pop
adcb
jg
inc
pop
mov
rclb
adc
mov
add
and
inc
cmp
add
adc
testl
sub
push
sbb
mov
xchg
cmc
aad
stc
xor
mov
loop
push
cli
stc
sub
jg
sahf
sahf
mov
add
bound
cmp
mov
xchg
cmp
mov
pop
jmp
popa
loopne
adcb
push
jg
mov
xchg
add
pop
xor
movsb
mull
inc
pop
dec
sub
scas
mov
mov
and
stos
mov
aad
sbb
pusha
dec
and
dec
sbb
repz
sub
lea
popf
call
push
lods
xchg
push
adc
jno
jp
lcall
out
inc
pop
xchg
clc
sbb
jb
std
mov
xor
jo
xchg
sbb
std
and
jp
mov
rclb
xor
enter
pop
pop
mov
inc
xor
adc
sub
jns
dec
and
push
not
jmp
inc
pop
insl
ret
dec
cmp
cmpsl
push
stos
arpl
stos
and
xlat
sub
push
popf
push
mov
push
jmp
pop
pop
daa
and
stos
cld
sub
push
aam
or
lods
push
and
clc
xchg
outsl
lret
xchg
jo
mov
inc
dec
sbb
lods
push
lods
inc
xchg
lods
mov
bound
push
in
jp
nop
cltd
clc
pop
test
fwait
mov
movsl
out
xchg
dec
cmpsl
and
test
sbbb
inc
sub
adc
mov
sbb
test
mov
jae
adc
fbstp
call
pop
jl
cs
imul
loope
cmpsb
lcall
add
cmp
in
inc
mov
mov
lcall
dec
ja
mov
mov
and
out
dec
cld
mov
cltd
sarb
xchg
dec
in
bound
mov
out
mov
mov
addr16
sahf
jp
idivl
add
or
addb
outsl
fidivrl
in
imull
fisttps
jae
xchg
inc
mov
jmp
push
popf
inc
xorl
push
in
jo
sub
mov
rcll
push
loopne
aas
stos
mov
xchg
insl
insb
aas
in
jnp
mov
sub
adc
gs
rcrb
ret
mov
cmpsb
mov
inc
popf
in
jae
inc
push
inc
fldl
inc
push
movsl
test
pop
xor
sbb
std
push
imul
popa
fidivrs
js
lds
add
mov
inc
mov
pop
hlt
aaa
jecxz
arpl
divl
xlat
xor
jge
mov
cmp
xor
fisttpll
mov
sub
mov
sbb
pop
daa
xor
adc
xor
rorl
and
adc
aad
fsubl
lret
inc
into
inc
in
mov
adc
test
push
mov
mov
push
mov
insl
lret
or
xchg
fdivrs
mov
xchg
cltd
sub
adc
mov
push
imul
sub
daa
adcb
fwait
jp
nop
sbb
push
xchg
loope
mov
sub
sar
cmp
xchg
in
mov
orb
xchg
daa
test
xor
stos
int
ficoml
sub
and
mov
inc
fsubrl
and
bound
insb
xorl
icebp
in
mov
xchg
mov
pop
pop
mov
and
adc
dec
cmp
fbstp
idiv
push
loope
adc
mov
punpckldq
into
call
lret
xor
mov
mov
pusha
cmpsl
stc
loop
mov
adc
movsl
dec
data16
lods
mov
call
cli
jmp
sbb
cmp
mov
repnz
push
mov
xchg
cltd
and
adc
mov
imul
mov
sbb
jl
jg
push
sub
sbb
hlt
pop
xor
cs
xchg
sbb
cmpb
inc
xor
mov
les
call
mov
mov
jg
pop
mov
xor
jmp
je
pop
lea
inc
in
jne
adc
jb
shrb
cmpsl
aas
ret
je
inc
mov
idiv
xchg
dec
std
int3
arpl
mov
push
mov
xor
dec
sub
fstpt
dec
and
outsb
ljmp
push
pushf
mov
mov
insb
pop
insb
sarl
add
subl
mov
cmpsl
sbb
aas
shl
or
cld
add
dec
lret
ret
shll
push
adc
fisubrs
hlt
sarb
inc
sub
and
dec
in
mov
push
mov
inc
fs
int
test
mov
mov
mov
mov
mov
lds
mov
push
hlt
inc
icebp
add
adc
test
jb
xchg
outsb
dec
push
add
test
std
mov
shl
push
mov
mov
push
push
jecxz
add
cli
push
jp
xor
mov
popa
cmp
sbb
adc
sbb
lret
mov
mov
jp
dec
mov
inc
dec
jle
or
in
fwait
push
pop
dec
pop
dec
out
subb
sub
je
jns
loop
in
call
add
movl
bound
adc
sub
jge
cwtl
jp
addl
xlat
adc
subl
pusha
gs
cli
fildll
mov
fcoms
insl
lcall
adc
mov
pop
test
stos
xor
cmp
mov
insb
stos
rolb
jnp
inc
mov
push
loope
call
cmp
xchg
ret
mov
inc
test
pop
jae
and
inc
loopne
movsl
or
jp
sub
cmp
xchg
pop
inc
pop
sbb
pop
adc
jecxz
dec
xor
shlb
pop
mov
xchg
lea
leave
loop
sub
arpl
mov
jbe
xchg
sarb
bound
mov
xchg
aaa
out
xchg
add
sbb
pop
mov
sub
repz
and
sbb
lock
inc
call
mov
mov
or
mov
call
push
mov
pushf
push
stc
enter
daa
sbb
icebp
jno
dec
push
jl
es
dec
jnp
fdivrs
sti
lfs
sub
rcrb
inc
clc
test
xor
mov
ljmp
js
loope
pop
iret
adc
in
inc
xor
lods
sbb
sub
mov
cmp
outsb
mull
push
sub
rorb
in
sbbb
sbb
shll
add
ljmp
mov
push
sbb
adc
cmp
ljmp
aad
push
adc
or
adc
xor
sub
pop
jg
mov
call
mov
xchg
or
mov
cmp
lcall
lret
inc
cwtl
outsb
mov
sbb
pop
jns
arpl
popa
outsl
popf
fimuls
loop
aad
stc
cltd
xchg
fs
dec
adc
ja
jbe
dec
mov
inc
sbb
pop
xor
cmp
dec
out
mov
cmp
mov
and
loopne
jne
mov
shrl
ja
imul
pop
add
mov
sti
dec
add
cmp
cmp
xlat
mov
xchg
jne
adc
lret
adc
jo,pn
loopne
add
adc
loope
push
inc
inc
out
movsl
fprem
cmc
les
call
adc
aaa
in
movl
add
pop
pop
xchg
pushf
rcrb
jmp
les
imul
inc
arpl
or
inc
dec
push
xchg
push
je
rcrb
test
and
cmp
je
jmp
pop
movsl
mov
xchg
jno
adc
mov
inc
xlat
mov
cli
jge
leave
jbe
das
xor
xor
out
andl
xchg
roll
nop
sub
and
dec
das
dec
pop
cmpsl
sbb
popf
mov
pop
adc
cld
sub
stos
push
mov
fs
mov
gs
rclb
sub
loop
sbb
jp
into
inc
loopne
dec
dec
cmpsl
fstl
cld
jg
out
cmp
or
rcrb
lods
sbb
mov
sub
pop
xchg
divb
push
cmp
and
cltd
data16
test
subl
add
dec
jne
mov
jbe
pop
xchg
sbb
scas
sarl
dec
pop
stos
or
popa
push
mov
dec
add
sbb
xor
cmpsl
xor
scas
mov
sub
mov
cmp
mov
inc
dec
jge
cmp
daa
in
jo
push
cltd
and
dec
cmp
or
out
or
xchg
bound
test
in
ret
mov
out
ret
ljmp
addr16
lahf
jp
ret
scas
jmp
mov
out
jle
add
pusha
add
dec
push
std
xchg
out
inc
jmp
in
fdiv
adcl
out
jp
push
mov
pop
andb
lahf
dec
jb
adc
xchg
scas
and
push
sub
pop
adc
mov
nop
iret
sbb
int
or
pop
push
inc
mov
push
jae
inc
lret
cmpsl
pop
or
cmc
adc
les
fcmovb
decb
js
sbb
xchg
adc
adc
jp
scas
ret
cmp
mov
call
popf
mov
arpl
sahf
jbe
jo
jge
mov
xchg
aaa
scas
rcrb
lcall
int3
or
sub
js
push
cmp
xor
ja
mov
and
cwtl
ja
inc
cmp
movsb
cmp
push
das
sbb
in
subl
sub
in
daa
sbb
xchg
cmp
pop
add
inc
dec
jl
push
jmp
ds
pop
jae
out
data16
jl
lahf
je
test
push
mov
rolb
xchg
push
call
inc
xchg
repnz
lods
sbb
movsb
dec
xchg
js
mov
dec
push
mov
loope
shlb
sub
push
cmp
push
mov
adc
sub
xorb
sbb
and
xor
pop
push
test
sub
popf
lcall
sbb
mov
daa
sub
sub
sahf
mov
and
mov
push
test
xlat
fcoms
pop
jecxz
xor
mov
cmp
push
stc
idivl
ror
testb
shrl
inc
mov
sub
xchg
into
scas
ja
cmc
sub
stos
xor
mov
jl
mov
stc
push
leave
push
fs
xor
adc
hlt
data16
ret
repz
out
arpl
dec
in
xor
inc
es
mov
or
icebp
push
inc
mov
or
int
aaa
pop
fsubrl
jecxz
push
pop
add
mov
push
fmuls
cmp
push
sub
in
mov
lret
sti
pop
sarl
rcrl
sbb
dec
test
sub
inc
scas
sub
push
mov
das
in
les
sub
fs
lea
movsl
popa
movl
mov
in
pop
fsubrs
rcr
mov
mov
aas
test
add
adc
dec
xchg
mov
jecxz
test
idivb
dec
std
sbb
cwtl
movsb
push
sti
mov
out
mov
push
push
dec
add
pop
fistpl
xorb
add
das
adc
ja
add
loope
sahf
inc
fldenv
data16
rcl
cltd
jg
or
sub
dec
sub
inc
mov
xor
cld
pop
jle
lret
mov
lcall
adc
jae
test
add
dec
jecxz
aam
movsl
and
pop
outsl
out
push
ud2
mov
mov
inc
and
sub
or
lods
lods
test
cltd
mov
mov
mov
push
sbb
jle
clc
pop
sub
jl
inc
cltd
popf
test
fwait
aad
mov
fsubs
xchg
imul
icebp
mov
xchg
push
mov
rcll
mov
push
pop
hlt
adc
xor
ljmp
or
pop
lcall
cmpsb
mov
in
mov
iret
repz
xor
ja
dec
fwait
dec
jo
lods
inc
jnp
outsl
or
test
fwait
enter
and
bound
into
pushl
jmp
mov
jns
push
fists
int
or
or
stos
addr16
movsb
jp
mov
mov
and
mov
mov
in
outsl
clc
pusha
fwait
push
jmp
xchg
mov
sbb
andl
mov
mov
loope
mov
popf
fsub
stos
push
repnz
and
xor
outsl
insl
loopne
out
in
lock
out
rol
jmp
cli
inc
mov
cmpsl
loope
out
mov
jo
xchg
inc
inc
out
clc
fidivl
dec
xchg
or
test
sahf
or
or
fisubs
inc
lds
scas
repz
cmp
leave
shrb
hlt
sbb
arpl
repnz
jbe
mov
add
add
aaa
insl
popf
ljmp
push
ror
cmc
sub
pop
mov
test
mov
pop
mov
scas
add
mov
cmp
notb
push
jle
inc
cmpsb
into
xchg
sub
daa
pop
inc
daa
sbb
xor
push
jle
jno
cmpsl
push
jl
pop
testb
cmpsl
ds
cwtl
add
bound
lahf
xchg
das
call
test
lret
inc
and
pop
minps
fldt
pop
dec
mov
fldt
jecxz
ret
outsb
mov
fadds
add
cmp
cmp
mov
mov
push
xchg
cmpsb
sub
pop
nop
pop
add
lcall
jl
pop
add
sub
setno
aaa
mov
cmpb
data16
adc
mov
movsb
mov
js
and
cmc
popa
ss
and
adc
mov
cmp
xchg
lret
mov
or
rcl
fs
adc
cmc
icebp
adc
xor
sbb
loop
pop
cmpsb
stc
pop
mov
fs
adc
xchg
mov
inc
repnz
mov
pop
loope
xorb
xor
mov
sbb
inc
or
sbb
out
loopne
pop
sbb
and
or
rcll
sbb
adc
xchg
orl
mov
xlat
cmp
sub
add
in
xor
xor
mov
xchg
dec
xor
lahf
outsb
sbb
push
jge
data16
repz
lea
xlat
cli
call
add
loopne
roll
adc
jae
jmp
mov
pop
jbe
jno
jns
addl
jae
jb
andb
or
pop
je
fsubrl
jecxz
mov
ror
std
rcll
mov
cmc
mov
orl
fisttpl
jne
stos
adc
ret
mov
lock
shrl
repz
xchg
movsb
add
push
push
jmp
shll
test
jge
and
dec
fnstsw
pop
xchg
jmp
sub
lret
adc
in
mov
jb
adc
scas
mov
and
negl
inc
sub
cli
aam
orb
fcmovnu
push
rolb
fstp
jp
clc
jle
xchg
insb
cmp
popa
out
repnz
lock
mov
out
cltd
add
test
dec
xorps
dec
cltd
aam
fiaddl
jo
xchg
imull
inc
adc
sbb
mov
imul
stos
out
gs
ljmp
dec
outsb
push
decl
mov
pop
push
loope
or
fbld
mov
mov
pop
out
loope
ja
jge
dec
arpl
and
out
or
adc
fwait
negl
inc
dec
add
jge
mov
xchg
out
lret
bound
mov
mov
inc
xchg
fldenv
xchg
out
xchg
int3
sub
add
lahf
addr16
xchg
jp
pop
add
mov
int3
flds
in
mov
pusha
ss
jge
mov
xchg
mov
jmp
andb
fnstcw
popf
enter
lods
or
ja
mov
sti
insb
jmp
push
scas
out
xchg
push
mov
notl
lret
iret
dec
push
jnp
repz
pop
adcb
jae
push
pop
inc
jmp
push
push
ret
fisubrl
push
xchg
jl
movsb
imul
jno
mov
lds
cs
mov
int
arpl
sub
jbe
jle
jge
dec
mov
mov
out
inc
or
inc
push
int3
loopne
or
rcr
push
pushf
scas
xor
sub
inc
lcall
pop
lret
ljmp
push
sbb
enter
daa
sbb
mov
jno
or
sbb
decb
call
mov
std
scas
fs
mov
pop
push
popa
cmp
push
xchg
or
mov
pop
repnz
cmpb
imul
or
inc
lods
adc
repnz
or
es
push
cmp
aas
outsb
and
xchg
shl
sub
popl
out
sbb
push
add
sub
fists
das
push
mov
dec
jbe
nop
sub
hlt
lcall
ret
xchg
cmc
sub
mov
test
mov
xchg
mov
test
mov
in
mov
call
xorl
mov
cmp
lret
into
fincstp
sti
push
and
fsubrl
pop
rcrl
mov
push
jle
je
xlat
cmc
mov
fdivs
cmp
xor
stc
mov
xor
jge
xchg
repnz
orl
push
leave
cli
or
inc
cli
xchg
or
or
andl
cmp
add
int3
pop
sbb
push
imul
add
jno
xchg
inc
adc
mov
xlat
jnp
imull
inc
hlt
mov
mov
insb
lods
cs
xchg
fst
nop
aaa
mov
sbb
sbb
into
inc
repz
iret
lea
xchg
call
xor
push
adc
stos
pushf
sarl
test
sbb
add
xlat
inc
jg
arpl
out
sbb
and
inc
je
popa
test
mov
ret
lret
xor
push
jae
mov
mov
jns
mov
dec
and
fstpt
lahf
mov
and
ficoml
das
rclb
mov
daa
orl
adc
mov
adc
jno
inc
out
decb
add
adcl
fimuls
xchg
scas
cs
lret
jg
outsb
mov
jns
sub
ret
ror
bound
cmp
aam
scas
movsb
ret
jnp
movsb
push
xchg
ljmp
mov
sti
int3
ljmp
pop
lods
pop
scas
and
push
dec
addr16
lret
and
into
xlat
fmuls
mov
mov
cltd
or
bound
mov
dec
stos
data16
test
mov
negb
xchg
and
inc
in
lods
pop
fsubrl
ljmp
mov
in
ljmp
jge
subl
pop
mov
cmc
mov
pop
test
xor
inc
test
jne
fwait
es
pushf
jne
jg
mov
clc
jecxz
test
ljmp
sbb
xchg
sub
pushf
out
lods
addr16
in
mulb
push
jp
mov
mov
call
nop
mov
jg
jle
loopne
in
pop
cmpsb
pusha
rcr
mov
xchg
pop
loopne
jmp
dec
sub
cmpl
cli
push
movl
push
sbb
inc
stos
cld
dec
inc
and
jmp
insb
push
lret
adc
call
push
std
ja
adc
push
cmp
push
sbb
inc
aam
pop
jae
aas
sub
cmp
mov
data16
test
fcmovu
pop
sub
daa
cs
imul
lds
mov
mov
sbb
loope
leave
mov
add
cmp
jbe
mov
jge
ljmp
jmp
push
or
add
push
jb
adc
xchg
push
jg
int3
xor
mov
scas
shrl
icebp
gs
movsb
fstl
mov
aam
mov
cmp
jnp
sbb
cmp
lahf
jl
fbstp
ds
dec
movsl
cld
jle
and
test
add
pusha
data16
push
inc
imulb
pop
sbb
pop
pop
lret
push
and
cmp
xchg
xorb
scas
outsb
andl
outsl
adc
imul
cmpsl
loop
add
fists
xor
xor
fstl
daa
sub
lret
push
and
mov
sti
add
sahf
jae
fadds
repz
sub
xchg
mov
jb
mov
sbb
out
ss
add
cmp
xchg
enter
pop
lret
leave
shl
hlt
mov
push
mov
cmc
jg
pushf
xor
pushf
sbb
data16
xor
imul
adc
push
adc
lods
adc
out
test
call
mov
cmp
fildl
jae
and
das
lock
gs
aaa
push
loopne
inc
add
and
dec
pop
fsubrl
iret
into
adc
sub
xchg
fs
push
scas
fcmovbe
mov
aas
in
outsl
xchg
or
lahf
cs
cmp
aad
mov
je
pop
sti
adc
stos
pop
fnstenv
repz
adc
and
movl
fs
arpl
pushf
jl
loop
sub
inc
xchg
adc
out
aas
test
jb
std
les
push
clc
je
cmp
and
std
bswap
push
cwtl
aad
arpl
insb
test
push
dec
shl
fldt
mov
mov
stc
xor
inc
jno
mov
pop
stc
and
imul
ret
idivb
es
xchg
out
insl
sub
xchg
dec
sbb
and
push
mov
jle
flds
out
repz
mov
addb
in
lds
loope
xchg
popf
jecxz
sub
movsl
sbb
inc
xor
ret
or
xor
sub
out
hlt
add
xchg
ljmp
popa
adc
lret
not
push
out
mov
adc
test
movb
pop
daa
cltd
inc
cmp
add
xchg
mov
std
xchg
rcrl
inc
cmp
cwtl
sub
pop
xchg
stos
les
mov
add
or
or
jge
xor
insb
dec
mov
cmp
cwtl
mov
fs
ja
imul
inc
inc
ss
stos
and
leave
and
jne
outsb
dec
mov
lds
mov
dec
jns
cmc
in
jne
xchg
ja
repz
cmp
cli
popa
bound
add
mov
mov
lods
mov
mov
fldenv
out
inc
imul
xchg
xchg
and
push
jmp
enter
test
stos
outsl
lahf
cmp
insb
rcr
jnp
outsl
mov
lods
dec
in
push
inc
adc
iret
or
in
ret
lret
pop
lock
imul
jae
jno
inc
out
push
add
loope
jmp
ficoml
ret
shlb
or
or
rolb
push
adc
xor
push
xor
add
arpl
or
pop
push
jecxz
or
xor
les
stos
sbb
or
add
inc
and
int3
mov
imul
nop
test
jecxz
add
test
cmp
or
push
in
inc
cmpsb
push
jne
in
pop
mov
enter
daa
sbb
or
inc
push
jl
pop
mov
ds
or
add
and
xor
lahf
lock
ss
pop
sbb
sub
push
inc
shlb
pop
inc
in
add
pop
or
push
loope
pop
push
cld
xchg
cmp
cmc
outsb
out
push
adc
xchg
pushl
popl
cmpb
dec
add
jmp
jmp
nop
test
int
pop
fldcw
mov
push
stos
lcall
mov
sub
push
test
pop
mov
jg
dec
movsl
mov
jo
mov
ret
insb
icebp
ss
mov
inc
hlt
push
idivl
inc
lret
das
rorl
jbe
insl
sbb
popf
cmc
inc
dec
xchg
xor
xchg
mov
stc
sub
test
imul
cbtw
or
lods
stc
sub
mov
out
neg
jnp
sbb
xor
cld
cmp
nop
lock
xchg
push
inc
in
gs
shll
pop
cmpsb
pop
adc
mov
les
add
std
loop
lret
sbb
inc
decb
stc
scas
out
sub
xchg
inc
sti
sbb
stc
cs
ficoml
nop
in
jg
dec
mov
out
xor
in
jne
shl
sub
jo
jge
ds
sahf
outsl
je
jg
das
pop
ljmp
pushf
daa
pop
jmp
sar
pop
pop
jnp
inc
push
arpl
and
push
jb
or
dec
jno
fnsave
sub
iret
shrb
mov
xor
mov
lock
mov
dec
lods
jbe
fcmovnu
lea
push
insl
imul
cld
mov
mov
jp
fldenv
adc
rcll
repz
insl
adc
dec
push
mov
cmpsl
pop
jae
mov
mov
cld
add
dec
pop
mov
mov
xchg
xchg
mov
add
jecxz
sub
test
cltd
mov
test
push
loop
clc
das
jns
xchg
sub
into
ljmp
lods
xor
fucomip
pop
nop
cmp
test
rorl
je
xor
cltd
jns
jbe
lods
in
rcrl
dec
js
lahf
test
adc
xchg
pop
daa
shr
pop
pop
xor
mov
push
call
popf
cmp
pushf
cmp
jmp
mov
or
xor
lods
mov
jnp
adc
pop
lcall
cmp
pop
inc
xlat
xchg
fimuls
mov
fwait
test
dec
lods
pop
pop
jne
sarl
cmpsb
mov
addr16
jns,pn
and
in
hlt
loope
cld
mov
fnstenv
ljmp
imul
mov
push
mov
sbb
adc
mov
in
fisttpl
dec
jmp
add
pop
loop
jecxz
in
pop
stos
pushw
lods
mov
popf
cmp
sbb
push
stos
loop
lods
and
or
insb
sub
sub
xchg
push
scas
adc
or
adc
adc
in
imul
pop
daa
xor
inc
ljmp
inc
repnz
or
pop
jecxz
aas
mov
fiaddl
addr16
gs
mov
imul
cwtl
lds
in
ret
mov
xchg
leave
lods
hlt
inc
pop
arpl
scas
jbe
jp
jge
rcll
aaa
imul
clc
add
enter
xor
push
inc
inc
or
ds
scas
jg
xchg
pop
repz
cmp
push
andb
dec
cmpsb
ficoml
in
push
inc
pop
enter
daa
pop
mov
xchg
adc
dec
adc
sbb
movsl
or
lahf
sysenter
jge
fiaddl
push
test
notb
fiaddl
repz
jl
xchg
pop
adc
stos
jbe
dec
movsl
cmp
loope
cmp
addr16
mov
outsb
dec
cltd
or
jno
call
adc
rcrl
adc
inc
add
dec
push
xchg
xchg
movsb
int
adcb
sbb
mov
push
sbb
faddl
inc
jmp
sahf
mov
mov
subb
mov
cmp
arpl
sub
mov
sub
push
ss
and
fdivr
fs
idivl
je
lret
mov
mov
sbb
in
cmc
or
pop
std
outsl
xlat
rorl
jecxz
icebp
divb
jns
sbb
mov
mov
idivb
in
dec
sbb
cmp
sbb
push
xchg
jne
mov
sub
aam
aam
lods
pop
ja
int3
adc
fcompl
pop
bound
add
add
repz
sbb
jl
aaa
xlat
cmp
sub
shr
loope
adc
leave
stos
test
aad
mov
nop
enter
sbb
mov
out
adcl
fs
lea
