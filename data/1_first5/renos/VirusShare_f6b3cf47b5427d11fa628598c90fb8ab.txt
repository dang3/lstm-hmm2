mov
adc
or
push
je
imul
add
push
mov
mov
outsl
outsl
pop
mov
je
in
adc
insb
and
cmp
outsl
jmp
jp
lea
mov
inc
cmp
jbe
lea
jg
xchg
lea
jno
dec
dec
mov
ja
or
or
fmuls
mov
mov
mov
xchg
call
ss
ljmp
inc
in
push
call
cmp
js
lea
out
dec
mov
and
inc
mov
cld
inc
mov
cld
inc
dec
cmp
outsb
mov
aam
pop
mov
je
subb
mov
repnz
dec
inc
cmp
jbe
mov
and
pop
divl
imul
mov
sbb
neg
mov
lea
bound
add
inc
fistpll
inc
ret
lea
test
testb
pop
ret
jmp
rolb
enter
sarb
mov
or
enter
mov
pushf
cwtl
xchg
xor
and
loope
or
xor
xor
mov
cltd
fdivrp
pushl
cmp
mov
jecxz
jge
fs
in
lsl
aas
pop
aaa
mov
mov
icebp
dec
aas
add
push
push
mov
ret
adc
fdivrp
inc
mov
jbe
mov
dec
inc
add
in
jmp
std
push
stc
inc
cmp
inc
mov
aas
loope
lahf
out
adc
sti
sbb
pop
mov
xor
cmp
icebp
sub
outsb
sti
jbe
pop
aad
pop
aaa
jbe
or
aas
divb
pop
decl
int3
notl
push
icebp
push
mov
push
aam
mov
xchg
mov
aam
mov
pop
jnp
xchg
test
test
xor
add
fucomi
cmpsb
aaa
sub
dec
aaa
dec
stc
push
jae
mov
sbb
clc
mov
shll
adc
lods
mov
inc
aas
push
jmp
pop
sti
decl
icebp
dec
mov
mov
stc
dec
mov
jbe
xchg
ret
imul
out
in
ret
ss
negb
add
fs
outsb
mov
pushf
adc
pop
sahf
sub
xchg
fnstsw
pop
movsb
mov
pop
mov
insl
mov
insb
xchg
dec
aaa
sbbl
mov
pop
xchg
mov
mov
push
cmpsb
clc
clc
ret
push
dec
ds
inc
inc
subb
lea
inc
out
mov
mov
in
imulb
jne
ret
jbe
jbe
sarb
or
push
mov
xor
and
divb
adc
sub
mov
push
xchg
dec
inc
adc
jmp
inc
jle
pop
mov
int
pop
cmp
sbb
shl
in
mov
sub
inc
dec
xor
mov
mov
les
stc
pop
sbb
xchg
xor
or
sub
mov
pop
outsb
xchg
pop
or
lahf
fists
sarb
mov
stc
dec
cmp
mov
mov
out
sbb
inc
aaa
js
or
push
inc
mov
or
aaa
jnp
jnp
into
mov
jnp
movzbl
pop
or
mov
jbe
jle
mov
push
out
mov
push
dec
and
mov
ss
das
cmpsb
or
fimuls
sbb
push
divb
mov
jmp
popa
push
gs
in
insl
fsubrl
sbb
or
mov
jb
and
dec
xor
jb
mov
mov
mov
and
mov
fxch
mov
out
divb
jp
call
arpl
data16
aaa
mov
cmp
js
pop
movsl
insb
test
lsl
sbb
dec
stc
add
add
sahf
lahf
mov
and
aas
add
push
out
or
mov
or
xchg
xchg
repnz
stos
mov
mov
cmpsb
push
aaa
jbe
or
and
shrl
jo
cli
mov
adc
cmp
xchg
ss
aaa
inc
fidivl
std
pop
test
pop
mov
mov
jbe
xchg
roll
mov
adc
mov
cmp
test
rorb
stos
test
out
xchg
sbb
push
cmpsb
pop
sti
insl
ja
ja
cmpsb
jbe
inc
rorl
or
clc
idiv
mov
rcrl
jge
stos
and
sbb
adc
outsb
leave
cmp
mov
call
clc
jg
and
cmp
in
pop
cmp
push
hlt
mov
push
pop
lea
push
push
enter
lods
stos
mov
adc
arpl
nop/reserved
push
mov
aas
mov
dec
loope
ds
insb
mov
mov
adc
pop
sbb
out
mov
in
pop
mov
cmp
dec
sub
out
mov
xchg
xor
adc
nop
and
fnstcw
gs
sbb
or
fwait
in
fs
mov
adc
inc
xchg
iret
jb
push
dec
add
cmp
in
dec
push
iret
idivb
idivb
adc
xchg
xor
fadd
bsr
cmp
sbb
and
xor
mov
fcmovnbe
dec
mov
outsb
incl
mov
and
inc
push
loop
pop
das
add
mov
mov
mov
int
outsl
add
shl
jne
test
jne
or
hlt
jmp
adc
shr
ds
imull
hlt
mov
in
sub
call
call
sti
clc
mov
add
dec
sub
loop
in
movzwl
dec
test
jb
movl
jns
push
lea
mov
mov
or
xchg
fnstsw
or
inc
rcll
cmp
or
sarb
xor
mov
sub
fs
or
sub
test
mov
jmp
sub
inc
xor
push
or
sbb
lods
sbb
rcll
add
sbb
inc
sti
mov
call
dec
in
jne
inc
jg
add
dec
outsl
popa
fs
imul
adc
jne
insb
dec
incb
sti
inc
insb
insb
outsl
arpl
push
jb
je
arpl
mov
inc
jb
add
bound
int3
mov
dec
mov
xor
iret
lock
fstps
out
add
cmpl
je
repnz
imul
ja
add
test
sbb
mov
jo
add
add
add
xchg
add
je
repnz
sti
mov
push
sbb
mov
and
xor
aas
icebp
dec
inc
das
cmpl
lock
add
sub
decl
testb
clc
push
repnz
jge
sub
jg
sbb
decb
jne
popa
mov
push
add
inc
or
jl
or
inc
xchg
fcos
pop
testl
hlt
cmp
jnp
lea
push
xchg
xchg
cmpsl
lret
jo
mov
sbb
hlt
xchg
lret
mov
jne
mov
clc
xchg
fdivrs
jnp
dec
dec
mov
fmull
sbb
mov
pusha
dec
inc
dec
mov
add
rorb
push
mov
cmp
inc
popf
call
inc
adc
xchg
sub
pop
xorb
test
mov
gs
ljmp
inc
pusha
sbb
fs
push
dec
insb
pop
mov
dec
insl
jmp
pop
add
gs
push
aam
mov
jl
jp
imul
outsl
fstpt
outsw
jnp
dec
imul
sti
pop
cs
jp
popa
outsl
ja
outsl
popa
pop
jle
inc
gs
inc
add
jns
jno
hlt
xor
adc
cwtl
add
jo
jmp
lock
cmp
sbb
stos
lea
xchg
push
cmp
ret
dec
cmp
jno
lea
add
cmp
fimull
and
mov
out
mov
inc
mov
mov
cs
cmpsl
mov
dec
mov
mov
bound
dec
mov
hlt
pop
dec
fildll
pop
pop
adc
cwtl
fdivrs
dec
shlb
adc
dec
pop
inc
add
or
add
fcoms
jg
add
out
jne,pn
inc
clc
jp
and
inc
mov
gs
inc
add
cld
jb
sbb
cld
leave
push
das
in
inc
lcall
subb
mov
outsl
xchg
leave
jl
dec
dec
mov
pop
inc
lahf
cld
mov
inc
push
sbbb
fcoms
adc
je
test
mov
mov
lock
sub
or
in
mov
jae
je
outsb
add
mov
sub
add
cmp
and
mov
cmp
mov
mov
inc
loopne
inc
inc
sbbl
in
popa
ret
movswl
outsb
or
xchg
sar
mov
push
sub
fsubrl
jo
cmp
js
lret
in
jge
inc
mov
mov
pop
or
and
jne
js
mov
cmp
in
mov
or
mov
icebp
push
ret
fmull
mov
arpl
pop
add
dec
inc
mov
loope
fiaddl
mov
ret
clc
mov
clc
shll
add
push
push
xor
xor
inc
push
mov
or
mov
fidivrs
xlat
adc
cmp
js
pop
adc
mov
ja
hlt
arpl
test
pop
test
sbb
out
in
or
aaa
sbb
dec
cmp
mov
xchg
mov
jo
xor
push
mov
mov
sbb
mull
mov
push
mov
lea
jae
push
popa
cld
sbb
mov
mov
sub
sbb
xchg
add
enter
test
mov
into
ret
adc
or
push
sbb
call
hlt
cmp
ret
cmp
dec
mov
add
rorb
call
ljmp
cli
and
add
push
mov
adc
in
dec
int
notb
andb
test
sbb
and
mov
das
gs
and
frstor
xor
and
jbe
sbb
loopne
call
enter
fidivrs
xchg
sub
pmaxsw
popa
mov
ss
adc
mov
mov
cmp
cld
adc
jae
cmpsl
pop
mov
shlb
jl
pusha
ja
sub
mov
inc
xchg
sbb
in
adc
dec
or
pushf
add
mov
mov
sbb
adc
sbb
es
insb
dec
inc
sbb
mov
and
nop
sub
push
xchg
pop
push
push
sbb
dec
mov
cmpsb
mov
fdivl
dec
xchg
dec
je
push
out
fsubs
or
int3
pop
add
inc
and
pusha
imul
aam
in
fimull
mov
fdivr
das
hlt
mov
add
outsb
gs
xor
cs
insb
je
push
cmp
je
arpl
insl
mov
add
jae
addps
imul
outsb
jl
jns
outsl
jb
sbb
jl
out
incl
push
xor
cmp
mov
outsb
je
add
cmp
xor
imul
outsb
cmc
jne
clc
sti
add
js
in
add
movsl
add
inc
dec
ja
sub
ret
cmp
push
mov
enter
sub
jne
add
mov
decl
dec
jne
mov
sbb
nop
ja
pushf
mov
negl
clc
push
mov
testb
cmp
cmpsb
inc
or
call
out
fistps
jl
decl
pop
and
mov
xor
mov
sbb
inc
or
in
ret
and
mov
rorl
lcall
aad
or
imul
inc
incb
cmpsl
mov
pushf
outsb
add
cmpb
or
pop
dec
jmp
or
adc
dec
mov
hlt
or
lods
fisttpll
push
mov
ret
add
fucom
inc
pop
out
lock
cmp
xchg
sbb
cwtl
rcl
gs
mov
or
orb
add
cmp
xchg
test
jp
mov
das
in
add
pop
dec
out
cmp
and
icebp
push
je
xchg
pop
testl
sbb
pop
outsb
or
in
fwait
fs
jge
jo
aad
ret
es
jecxz
mov
pop
insb
xor
sbb
js
insl
dec
rcrl
outsl
mov
inc
push
push
es
jge
sbb
orb
fistl
mov
inc
gs
iret
push
sub
cmpl
sbb
sbb
cmp
clc
inc
gs
data16
pop
out
scas
mov
sbb
test
push
aad
lock
cmp
sbb
js
loopne
adc
in
sub
stos
movsb
fcmovnbe
add
out
data16
dec
inc
add
and
pop
push
xor
sbb
sbb
adc
push
pop
cmpsl
sbb
aad
or
cmp
pop
push
ror
pusha
shr
ja
jne
pop
ja
subl
fcomps
and
out
sbb
mov
xchg
shlb
sbb
push
xchg
mov
push
inc
inc
xchg
inc
sbbl
cmp
dec
ret
enter
jns
in
decl
push
inc
xchg
cmp
sub
out
add
mov
roll
das
je
lahf
adc
insl
arpl
dec
mov
cmp
pop
push
push
aam
xor
bound
push
in
ss
or
call
mov
test
and
inc
and
push
xchg
jno
xlat
aam
push
sub
in
idivl
nop
add
jb
jbe
test
xor
add
xchg
or
add
cmp
adc
add
xchg
adc
pop
pop
add
sub
in
sbb
and
sub
push
dec
call
mov
roll
stos
sub
add
fists
add
jnp
insb
fistpl
add
add
lods
push
cld
sub
test
jge
mov
mov
add
mov
add
add
sub
add
aad
or
imul
shrl
add
add
inc
add
xor
and
adc
add
sub
les
das
fistpll
cmp
pusha
jo
add
std
push
cs
jb
insb
lret
out
mov
out
faddl
emms
fnsave
out
ja
or
sbb
imul
cld
lret
pushl
or
lock
lret
inc
dec
in
xchg
in
pushf
fwait
add
jmp
jns
or
addb
out
idivb
add
mov
pop
add
mov
movsb
jmp
add
push
in
add
lret
shrl
mov
fmul
out
inc
add
sbb
sub
das
mov
lret
cli
add
dec
fs
sub
fistpll
xchg
add
mov
sub
mov
adc
sbb
loope
mull
mov
add
hlt
pusha
lcall
jl
inc
aad
imul
or
mov
sub
add
or
jb
adc
add
hlt
add
add
ss
loopne
add
add
js
repnz
dec
mov
ja
rol
inc
shlb
nop
popa
sti
jbe
push
jns
push
shrb
or
jg
add
scas
sub
adc
enter
sti
out
jb
add
push
inc
int3
add
stos
or
leave
mov
jbe
fldt
cmpb
sti
mov
inc
add
repz
pop
in
movsl
cmc
movsb
cmp
dec
fsubr
add
add
scas
loope
fldl
xchg
frstor
jg
xchg
out
fwait
adc
pop
inc
movsb
add
add
fs
jl
clc
lods
pop
push
push
in
adc
xchg
loop
dec
repnz
push
mov
ss
insb
adc
jl
sub
in
cmp
xor
test
inc
xchg
mov
cmp
cmp
out
cltd
fmuls
aad
jne
sbb
ja
add
insl
mov
pop
and
and
outsb
in
push
and
repnz
dec
add
in
add
lret
popa
mov
cs
popf
add
jecxz
inc
mov
int3
mov
fwait
and
repnz
arpl
sub
push
mov
lea
js
add
arpl
xor
push
outsb
addr16
nop
or
insl
popa
add
pop
mov
lcall
fs
insb
cmp
sarb
shlb
mov
adc
and
mov
ds
sbb
push
out
fsubrl
or
xor
rcl
lret
add
or
insl
mov
add
sub
popa
mov
sbb
test
xchg
add
shrl
mov
adc
sbb
or
cld
jge
stos
iret
movsl
inc
divl
xchg
jae
pop
jbe
push
add
mov
rcrl
lret
js
cli
sbb
add
das
in
sbb
addr16
fistl
gs
push
cwtl
aas
shl
sbb
fcompl
cmp
fdivrp
roll
cmp
not
cmp
nop
hlt
or
xor
dec
fcoms
add
mov
jb
clc
outsb
sbb
and
jnp
loope
push
push
jbe,pt
and
lret
lea
dec
pop
add
and
repz
icebp
add
jbe
pop
cs
pop
rol
add
sbb
add
popa
mov
mov
add
push
out
not
mov
jno
out
data16
jo
lret
cltd
pop
int
pop
icebp
lods
lcall
stos
mov
jl
test
sub
add
and
adcb
lock
js
add
pop
ljmp
xlat
inc
pop
fisubl
push
sub
neg
inc
cltd
outsb
cmp
jmp
popa
xchg
jae
enter
mov
cmp
mov
lds
jp
je
cld
inc
mov
pop
sbb
push
adc
mov
iret
addr16
out
cli
mov
and
popa
pop
dec
test
in
cmc
or
sub
mov
fwait
ja
or
pop
mov
push
imul
imul
sbb
dec
mov
rcll
fistpl
mov
xchg
test
out
dec
push
sbb
popf
aad
sbb
loope
adc
xchg
imul
pop
loop
sbb
add
ss
xchg
rcrl
jae
lods
xor
add
lds
mul
test
cmpsb
jp
subb
into
test
push
pop
add
mov
popa
mov
adc
js
push
frstor
sbb
rolb
lcall
mov
sub
xor
sub
xlat
add
in
adc
imul
sbb
mov
pusha
cmp
push
ficoml
jle
xor
lods
pop
push
stc
cli
mov
fprem
cltd
gs
incl
pusha
shlb
test
inc
add
xor
cmp
jmp
hlt
jmp
add
jecxz
pop
dec
or
icebp
out
xchg
rol
xchg
insb
and
add
sti
and
idiv
xlat
or
adc
and
sti
mov
cmp
ss
or
jge
push
mov
leave
cmp
or
aas
or
popf
mov
pop
mov
jl
pop
mov
jns
outsb
out
movsl
into
mov
mov
stos
and
push
jbe
inc
push
jne
pop
fdivs
cmp
lcall
mov
mov
es
sub
in
mov
rcll
adcl
mov
out
sbb
pusha
push
or
pop
popf
addr16
orb
cmpsl
mov
fucomi
enter
and
movsb
dec
mov
xorl
test
jo
inc
cmp
add
aad
movsb
jo
insl
negl
iret
pop
jp
pop
flds
out
jmp
sbb
and
in
mov
lcall
insl
int
xor
imul
shrb
lahf
mov
sub
pop
pop
pusha
addr16
pusha
cli
popf
adc
dec
and
fxch
mov
ljmp
js
xlat
int
aam
and
cmpl
in
sub
clc
mov
dec
and
cmp
mov
xor
cld
shrl
adc
dec
inc
aaa
push
jno
call
test
or
inc
and
fsubrl
scas
xor
mov
mov
and
sbb
mov
inc
and
mov
rcrb
cltd
pushf
test
mov
sarl
imul
lds
sub
nop
je
inc
in
xchg
scas
loope
fisubl
pop
movsl
sub
sub
mov
sbb
sub
testl
dec
cmp
jo
loope
pop
mov
mov
mov
out
in
mov
mov
mov
jbe
push
ja
fstpt
rcl
push
nop
gs
mov
outsb
or
icebp
bound
aaa
add
aam
jnp
mov
ficompl
mov
stc
and
push
cli
fcomps
fwait
xchg
outsl
dec
addr16
mov
pop
fwait
jnp
push
rorl
sbb
aad
or
gs
sub
jp
fdivs
pop
int3
comiss
aad
sub
sbb
mov
rorl
mov
cmp
jne
pusha
ss
in
pop
mov
lret
dec
jno
ret
cvtdq2ps
and
inc
or
mov
add
and
imul
mov
out
jbe
into
or
gs
mov
push
into
pop
popf
loop
rol
adc
and
jecxz
imul
sub
adc
xchg
mov
mov
movsb
push
jne
adc
dec
inc
xchg
clc
pop
cmp
in
jecxz
roll
popf
adc
pop
into
push
cmp
xor
mov
shlb
dec
test
out
xchg
jge
jecxz
pop
pop
and
push
mov
je
js
loope
push
push
popa
pop
fs
adc
out
lcall
xchg
xor
xchg
je
cmp
test
arpl
mov
out
pop
aad
jecxz
hlt
xor
cli
xlat
loop
outsb
scas
ret
repnz
inc
or
or
xor
imul
mov
and
push
insb
push
jp
jle
inc
jns
cmp
and
push
jp
scas
mov
xchg
or
js
cld
cmp
dec
mov
lock
add
mov
in
aam
pop
fwait
add
imull
arpl
push
sub
xlat
dec
or
mov
mov
fidivs
push
inc
xchg
jbe
je
hlt
call
data16
sarl
fwait
pop
cmp
les
ds
nop
sbb
ds
outsb
mov
enter
xor
outsl
rcl
out
inc
jp
mov
shll
lods
mov
pop
push
mov
push
mov
add
xorl
fadds
jle
rclb
sub
jns
imull
lds
fs
lret
mov
push
pmulhuw
adc
or
and
fchs
in
pop
lahf
push
test
cmp
or
rorb
push
cmp
cltd
pop
sbb
xchg
imull
inc
adc
dec
lock
ret
push
cld
xchg
xor
and
inc
insb
js
xchg
sub
add
or
imul
cmpsb
cld
xchg
insl
stos
sub
lds
and
paddq
mov
mov
shll
addl
mov
out
and
sbb
add
pop
xor
pop
pop
push
mov
xchg
xchg
cltd
mov
sbb
rcl
pop
lock
jne
loop
popf
daa
movsb
aas
repnz
dec
pop
fiaddl
add
sbbb
xchg
xchg
cmpsb
ja
insl
aad
xchg
cmp
negb
sub
std
xchg
xlat
xor
dec
or
xchg
inc
stc
test
sbb
call
cmp
xchg
aas
je
mov
jge
pop
popf
fildl
ds
icebp
xor
mov
cmp
fcomps
pop
inc
fimull
mov
push
push
or
mov
push
mov
sbb
insb
add
icebp
loope
inc
scas
push
sbb
push
cmp
pop
mov
sbb
adc
stos
andl
cli
cld
mov
dec
mov
push
or
push
add
aam
jmp
lods
adc
xchg
dec
cmpsl
aaa
mov
sub
or
inc
cwtl
addb
adc
stos
out
call
scas
mov
sub
gs
outsb
je
cmp
push
xchg
movsb
shll
bound
cld
mov
sbb
xor
ljmp
or
add
pop
fwait
pop
insb
test
jmp
jb
daa
shrl
adc
dec
mov
jne
or
fnstenv
xchg
in
cmp
mov
or
xor
adc
xchg
pop
movswl
mov
mov
or
hlt
cmp
push
fs
mov
lahf
sbb
mov
pop
pop
std
shrb
push
cli
mov
in
jns
push
sub
mov
scas
lods
int
xchg
pop
cmp
fiaddl
aas
ja
mov
and
shl
push
loopne
fstpl
aaa
ret
jmp
mov
sub
fdivr
lea
mov
mov
or
lret
pop
sbb
mov
call
adcl
sbb
jl
jecxz
inc
push
mov
or
test
divl
scas
lcall
jg
btcl
ja
sub
jl
cmpsb
push
insl
jmp
and
fisttpll
mov
loope
ljmp
inc
inc
aaa
lcall
jns
test
or
cmp
mov
or
cmp
cmp
dec
adc
stos
xor
lds
mov
fcom
rcrb
add
scas
leave
rolb
ds
aam
xchg
or
arpl
fists
xcrypt-ecb
cmpsl
dec
dec
aaa
cs
adcl
adc
sub
mov
push
mov
test
adc
inc
jb
lock
icebp
andl
in
jg
fisttpl
es
mov
pop
shll
mov
pop
ds
sbb
add
into
xor
inc
hlt
sti
dec
push
xlat
cmpsl
shll
std
adc
popf
xchg
outsb
pop
cmp
push
stos
inc
sbb
mov
fs
mov
xchg
xchg
inc
daa
adc
repnz
js
mov
lret
push
lret
xor
cs
mov
jmp
xor
sub
adc
dec
gs
test
addr16
adc
sub
dec
mov
mov
xchg
push
mov
or
lods
push
sbb
shlb
icebp
out
clc
cmp
jae
push
call
mov
popf
jnp
push
cmp
mov
inc
mov
rcrb
loope
push
mov
push
rorb
arpl
inc
pop
jecxz
rcrb
inc
jecxz
test
aas
sbb
pop
enter
in
push
rolb
hlt
fidivrs
fldt
hlt
dec
lcall
dec
pop
cmpsb
adc
jecxz
or
insb
dec
in
enter
xchg
cld
lahf
sbb
pop
xchg
and
pop
popa
jo
imul
outsl
ljmp
or
clc
movsb
xorb
xchg
rol
mov
push
fdivrs
dec
pop
shlb
icebp
test
jne
mov
push
cmpsb
testl
es
or
push
xor
into
mov
mov
mov
mov
gs
pop
lods
xchg
hlt
icebp
aam
push
out
pop
out
cmpsb
push
xchg
pop
mov
loope
rcl
jge
jmp
xor
push
jecxz
fstpl
fmull
pop
dec
adc
sbb
push
pop
add
inc
cmc
ss
push
xlat
fistps
and
mov
idivb
scas
jno
or
test
ja
fxch
cmc
seto
jmp
and
add
and
mov
fimuls
ja
fcmovbe
jmp
pop
adc
pop
loop
mov
ss
lret
imul
arpl
cmp
addr16
stc
repnz
push
cmpsb
xchg
lret
mov
jmp
in
cltd
xchg
dec
add
in
push
loop
mov
inc
mov
lret
notb
icebp
hlt
jno
xor
cmpsl
fsubl
dec
out
pop
es
enter
addb
pop
mov
mov
pop
cmc
les
inc
pop
cmp
cltd
mov
imul
fldcw
cld
jp
js
paddusb
dec
lahf
stos
sub
cmpsl
or
sahf
jnp
mov
mov
mov
jbe
xchg
inc
adcl
ret
pop
jle
mov
or
les
ret
lock
in
popa
adc
repz
cmp
or
pop
xchg
fstl
xor
js
jns
out
cs
lcall
mov
fnstsw
mov
cmp
mov
iret
mov
insb
imul
mov
sub
cmp
lods
xlat
les
in
insb
jne
das
scas
jae
push
adc
adc
push
mov
scas
pop
int3
jl
mov
jge
vmovsd
sbbl
sbb
repz
aad
test
and
push
ja
mov
mov
or
lods
fsubrs
mov
arpl
fdivs
jmp
test
imul
xlat
aam
stos
stos
sbb
sub
roll
fnstsw
cmp
rorl
js
xor
jp
in
xor
jge
inc
loope
fs
cmp
xor
stc
divl
maxps
and
pop
jae
ret
test
stos
cli
test
stos
cltd
lock
insl
outsl
and
xor
pop
push
inc
ja
aam
loope
push
repz
lret
cld
jge
push
jb
roll
sub
je
push
push
cwtl
nop
pop
sub
stos
outsl
mov
add
arpl
mov
dec
mov
xchg
mov
jnp
jnp
shll
cltd
imul
mov
sbb
cmc
mov
cmpsb
xchg
push
jp
push
sbb
loope
xchg
add
mov
shll
fbld
pushf
jno
enter
xor
add
ds
imul
cmp
fcom
xchg
and
xorl
scas
adc
and
mov
mov
pop
add
imul
leave
add
cmp
xchg
mov
jns
mov
int
mov
mov
out
push
fwait
pop
xchg
jecxz
pcmpeqb
push
mov
lret
sahf
or
orb
ret
and
xor
push
xchg
or
adc
push
loope
addr16
cmp
inc
xchg
jle
cmp
mov
pop
or
cld
xchg
add
mov
mov
fld
clc
movsl
xlat
add
scas
xchg
inc
popf
int
jne
fdivl
sub
add
or
xchg
sti
enter
mov
insb
sbb
jo
xchg
cmp
rclb
mov
adc
fdivr
fildl
add
outsl
or
stos
int
in
inc
pop
das
dec
fs
and
decb
xorl
fcoms
outsb
jb
mov
in
mov
lea
je
dec
inc
shr
adc
cmpsl
xchg
test
add
sbb
cmpsb
sbb
ret
es
fcmovnu
loopne
cmpsl
stos
push
pop
mov
fisttpl
push
fnstsw
jno
jns
sbb
mov
or
sahf
cli
inc
mov
mov
mov
cmp
out
sub
sbb
mov
push
mov
sti
ja
sbb
loope
movsl
bound
mov
in
pop
mov
sbb
mov
stc
push
sbb
mov
push
sub
pop
fwait
insl
xchg
mov
mov
cmp
arpl
cmp
inc
inc
enter
fstps
or
adc
sub
scas
lcall
bound
xor
adc
int3
icebp
xchg
mov
or
mov
fidivrl
in
lds
mov
aam
sub
mov
ljmp
sbb
std
imul
push
bound
pop
outsl
inc
xchg
mov
js
lods
pop
aam
jmp
sbb
bnd
mov
pushf
jne
cmp
cmp
mov
add
popf
sub
mov
loope
shll
popa
pop
hlt
imul
leave
popa
jmp
addl
cmp
ss
mov
xchg
mov
mov
xchg
dec
les
shll
mov
das
add
lods
popa
inc
mov
sbb
cmpsb
gs
outsl
ret
in
pushf
sbb
outsl
mov
push
fcomi
data16
shl
sti
xchg
aad
pop
xchg
push
stos
fcoml
ljmp
mov
fsts
fistl
mov
sub
xor
sbb
add
and
dec
es
xor
jp
aas
inc
not
push
test
sbb
leave
subl
push
sbb
sbb
sbbl
scas
inc
jmp
int3
and
enter
js
call
ret
cmpsl
cmp
xor
in
inc
movsl
dec
insl
shll
out
mov
loop
sbb
testl
pop
push
or
fnstsw
jo
in
and
jne
add
sbbl
lcall
pop
addr16
push
push
and
mov
paddusw
jg
or
pop
cmpsl
pop
jne
push
mov
jmp
jae
gs
xchg
and
iret
int3
jge
flds
or
je
and
cli
pop
cmp
ficoml
fcompl
lret
js
xor
daa
cmp
fdivr
mov
fcmove
push
dec
sub
rorl
inc
push
in
sti
ret
sbb
pop
add
inc
xchg
ret
jns
xor
jmp
jg
mov
ds
popf
jno
mov
inc
prefetch
xor
xchg
sbb
push
jo
mov
xchg
cld
inc
push
cmpsl
jmp
inc
pop
insl
jmp
dec
push
shlb
ds
pop
and
aad
inc
pop
inc
xlat
mov
scas
xlat
les
mov
jo
jle
and
push
add
mov
pop
jge
jo
pop
pop
pop
fimuls
xor
dec
add
add
sbb
bound
fwait
cmp
das
mov
jb
pop
or
outsl
sti
xor
dec
push
mov
fcomi
mov
mov
adc
cmp
jl
pop
fwait
ret
cmpsb
xchg
cltd
pop
ljmp
out
nop
and
mov
pop
es
lcall
xchg
mov
inc
sbb
mov
xlat
idiv
lock
rcll
mov
jne
mov
std
inc
push
not
jl
dec
and
xchg
jmp
jne
cmpsb
pop
xchg
xlat
pop
out
push
pop
inc
inc
fisttps
inc
sbb
or
pusha
push
out
inc
pusha
pop
add
sahf
sub
ja
pop
dec
push
les
ds
mov
sub
aas
push
mov
and
add
sub
xlat
lock
bound
mov
inc
xchg
jne
div
orl
jns
jl
inc
es
insl
dec
xor
out
mov
jp
cmp
or
test
inc
daa
int3
cmp
pop
ffreep
xchg
aam
add
out
scas
mov
mov
jns
popf
xor
sti
inc
lods
or
cmp
cmp
aam
mov
xchg
jp
mov
int3
inc
mov
push
jno
je
sti
les
lea
mov
lock
mov
stc
inc
adc
sbb
subb
in
push
ljmp
aaa
idivl
push
xor
mov
jnp
dec
or
xchg
cmc
inc
cmp
adc
add
nop
and
ljmp
cmp
jno
xchg
mov
mov
pusha
add
xlat
or
cmp
dec
dec
jg
ret
into
cmc
inc
push
adc
cmp
add
lock
ret
push
jmp
jae
xor
lock
insb
sbb
fwait
stos
sbb
xlat
push
out
ficomps
outsl
cli
aam
sub
int
jl
xor
mov
out
or
dec
xor
jae
ja
scas
popa
out
lds
dec
loopne
int3
inc
movsb
shrl
sbb
cmp
or
push
icebp
outsl
outsb
negl
dec
pop
sahf
stos
popf
sbb
xlat
movsb
movsb
push
outsl
ja
orl
cmpsl
xchg
inc
jge
rorl
mov
mov
jnp
lea
push
pop
stos
xor
adcb
loope
add
cmp
mov
pop
xchg
sti
test
add
imul
push
mov
mov
es
std
rep
test
jmp
popa
xchg
mov
add
popl
mov
xor
popa
jne
jmp
dec
movsb
mov
pop
int
ds
push
xor
clc
cmc
call
stos
mov
push
dec
jge
jmp
pop
imul
push
push
inc
lea
es
jbe
loope
sahf
sub
xor
fisttpll
xchg
adc
rcrl
or
pushf
adc
xor
out
lods
insl
fildl
mov
or
pop
ljmp
mov
cmp
or
test
iret
rorb
push
lret
ss
hlt
gs
cmpsb
in
sti
ds
dec
sub
mov
js
jp
mov
adc
fdivs
mov
inc
and
and
hlt
fbstp
push
loope
je
dec
into
scas
sub
cmp
mov
test
je
stos
jmp
inc
loope
pop
or
fimull
cltd
sti
inc
push
loopne
cmp
lds
xor
enter
bound
jmp
sbb
mov
jl
or
mov
jp
dec
icebp
outsl
ds
xor
or
inc
lret
mov
and
dec
pcmpeqw
mov
int3
sub
mov
bsf
mov
call
js
jae
inc
insl
push
xchg
js
shrb
jle
mov
arpl
cli
sub
mov
gs
mov
jge
mov
push
ret
or
cmp
push
jecxz
fdivrp
aam
jle
enter
inc
push
mov
sbb
ljmpw
and
fdivrp
jg
adc
out
bnd
iret
fsubrs
popf
jbe
fidivrs
lods
sahf
mov
cmc
cs
cltd
enter
dec
outsb
jle
sahf
or
sbb
jo
movl
mov
arpl
jne
or
adcb
out
loop
mov
mov
cltd
jo
inc
mov
dec
pop
imul
das
xor
sahf
pop
call
pop
or
iret
sbb
xlat
pushf
pop
fldl
insl
mov
clc
out
hlt
xor
out
push
dec
ljmp
fwait
xor
inc
inc
mov
pop
push
daa
push
mov
fsubrs
test
inc
adcl
leavew
mov
xorb
jle
scas
bound
icebp
mov
ficompl
lods
and
lcall
lcall
and
xor
imulb
shrb
insb
dec
and
mov
ds
insl
cmp
rol
lahf
jbe
loopne
clc
jne
lret
mov
rolb
xor
je
adc
lods
push
jne
call
in
xchg
and
cli
ds
mov
into
mov
jle
mov
cmp
mov
test
add
or
jb
or
ret
cmpsl
sbb
ret
jbe
fcoms
ffree
ret
jae
loopne
pushf
incb
add
pop
fstl
mov
pop
lcall
push
out
and
adcl
jecxz
add
dec
in
scas
ret
fdivl
ds
adcb
mov
loopne
pop
ja
xchg
bound
push
roll
orl
fdivl
jecxz
mov
ret
bsf
jg
sub
ds
loope
lods
adc
jp
sub
sbb
maskmovq
imull
mov
stos
popa
dec
xchg
mov
arpl
repnz
xchg
pushf
dec
gs
test
push
adc
mov
inc
sub
pop
in
mov
inc
push
ret
fstps
jno
mov
push
mov
dec
push
mov
pop
clc
jp
jae
xchg
sub
xor
mov
ljmp
inc
andb
ljmp
fdivrl
jb
lds
cmp
add
sbb
add
popa
sub
lods
out
icebp
cmp
push
push
notl
stos
ror
adc
pop
dec
mov
outsl
pop
mov
add
mov
add
std
mov
xchg
xor
cmp
xor
cltd
adc
nop
mov
ret
jne
addr16
test
cmp
jne
mov
and
or
sub
in
cmpsb
mov
adc
or
outsb
mov
xor
xchg
fcmove
or
pop
in
dec
pop
adc
pop
clc
add
mov
sbb
cmp
cwtl
dec
ret
inc
cmp
pop
mov
lcall
add
sbb
or
adc
push
aad
call
test
addr16
pop
lea
pop
idivl
outsl
sarb
and
mov
loope
xchg
cmp
aam
test
push
cmp
mov
pushf
bound
addb
jb
addl
lock
cmp
cmp
sub
pop
push
ret
xor
mov
push
cmpsl
cmp
jns
fistpl
mov
mov
int
add
orl
pop
xor
push
ds
rclb
mov
mov
aam
jb
loopne
xchg
ret
cmpsb
mov
popf
add
jbe
mov
imul
mov
mov
clc
loop
loope
xchg
movsb
mov
pop
cmp
pop
idiv
sbb
mov
cmp
dec
inc
in
fdivrs
sarl
lock
lods
adc
arpl
xor
sbb
jmp
fwait
lsl
int
jne
fdivrs
add
lret
mov
rol
inc
ljmp
dec
cmp
adc
sbb
mov
pop
jae
adc
push
xlat
mov
inc
cs
cs
inc
shr
jg
add
pusha
pushl
xchg
and
add
pop
push
dec
mov
ja
cmp
cli
xor
mov
sub
testb
nop
jg
mov
les
sbb
flds
aam
mov
movsl
pop
testl
lods
stos
or
lahf
iret
movsl
jo
popa
rcl
sti
xlat
sub
scas
stos
cmp
push
inc
test
cmpsl
cmp
or
icebp
and
pop
cmp
imul
aam
jp
fldcw
jecxz
or
pop
push
xor
scas
cmp
lock
and
cmp
subb
push
aaa
cmp
cmp
or
inc
js
cmp
daa
sub
cwtl
aas
imul
xchg
pop
int
ss
loop
or
enter
fldl
add
jmp
lock
cmp
pop
xor
or
mov
lret
cmp
jge
or
inc
arpl
popa
imul
testl
or
jecxz
pop
lahf
cmp
fcmovu
sbb
cmc
fsubl
shl
adc
test
lock
inc
das
movsl
adc
js
icebp
sub
adc
es
sub
shll
ljmp
clc
shlb
pop
xchg
aad
pop
xchg
leave
jae
std
jo
xchg
icebp
stos
xchg
ss
mov
inc
fisubrs
push
aaa
adc
add
push
xchg
xor
cli
dec
lahf
push
aas
jp
jp
xchg
adc
mov
xchg
stc
loope
stos
sbb
or
xchg
mov
adc
fnstsw
jne
adc
cltd
rol
push
enter
test
and
xor
pxor
les
sbb
sti
pop
cwtl
and
test
jmp
shr
ljmp
mov
shl
dec
xchg
pop
mov
std
test
pop
fstl
int
ss
pop
sub
mov
fs
push
dec
add
loopne
fldt
sbb
sahf
call
jg
bound
inc
xor
add
mov
adc
cmpsl
xchg
xchg
cmp
pop
pushf
dec
and
repz
andb
sbb
sub
faddl
imull
outsl
jnp
jns
adc
insl
xchg
mov
roll
icebp
lret
mov
push
iret
pop
jmp
fcomip
icebp
xorl
xlat
roll
jnp
popf
jle
pop
repnz
out
jbe
aad
mov
or
mov
jle
cltd
cwtl
daa
ss
std
jl
pop
cmp
lcall
cmp
lret
fsqrt
sbb
je
cmpsl
out
jne
mov
mov
mov
jge
fstps
or
cli
shr
add
or
aas
je
mov
add
hlt
rorb
inc
popa
pop
mov
mov
cmp
orl
insb
mov
inc
cld
ret
call
push
pop
shll
pop
shl
sub
add
cmp
mov
xchg
sbb
jmp
loopne
push
sub
popf
mov
mov
cld
mov
inc
cli
dec
jl
inc
int
outsb
mov
std
popf
inc
enter
mov
mov
test
push
fstpl
outsb
mov
jmp
xlat
jb
rcrb
out
jmp
mov
dec
fidivrs
sbb
sbb
shl
inc
es
es
xchg
jbe
xchg
sub
push
or
hlt
hlt
mov
cmc
loope
lods
cli
popf
insl
lea
inc
mov
rcr
fdivrl
xchg
mov
pop
push
cmc
jge
rcr
pop
push
orl
pop
or
mulb
push
adc
xchg
and
adc
adc
pop
daa
mov
mov
clc
cmp
rorl
ret
xchg
xor
xchg
pop
push
adcl
out
jbe
es
dec
jb
cmpsb
repnz
icebp
push
dec
pushf
cmp
sub
fstl
or
mov
testl
inc
xor
hlt
jne
fnstsw
and
mov
push
rcll
enter
xor
and
push
stos
test
jo
xchg
call
push
and
pop
icebp
add
push
mov
add
insb
aas
jecxz
add
xchg
hlt
out
addl
jae
jnp
call
int3
xor
sbb
mov
inc
mov
push
clc
std
mov
fisubs
stos
sbb
ret
sbb
faddl
mov
movsl
pop
sbb
lock
dec
rolb
dec
sub
xchg
adc
pop
cmp
or
push
adc
out
loope
push
adc
pushf
mov
mov
sbb
pusha
inc
and
jmp
cmp
rcrl
and
pop
sbb
or
lds
sbb
mov
fwait
and
or
mov
fdivrs
xor
std
rcrb
or
fs
and
pop
sub
fnstsw
pushl
fistl
repnz
orb
pop
jl
dec
xchg
mov
out
inc
testl
and
mov
dec
cmpsl
xchg
jmp
jmp
xchg
pusha
inc
insl
inc
test
mov
clc
sbb
push
jmp
inc
nop
jae
repz
jne
jle
mov
leave
and
cld
lea
jl
dec
jg
jne
outsb
mov
js
js
xchg
sbb
push
negl
adc
sarb
clc
xchg
adc
vmread
lcall
cmc
mov
outsl
int3
pusha
data16
jbe
cld
out
orl
imul
ds
popf
lahf
dec
mov
mov
mov
add
out
fwait
clc
pop
mov
jmp
cs
dec
mov
sub
aam
test
xchg
stos
add
inc
and
jmp
sbb
outsb
lret
push
jae
jp
pop
out
outsb
xchg
sub
je
jmp
jo
lea
scas
pop
es
jge
aad
dec
hlt
test
or
scas
add
push
mov
push
cli
pop
sbb
movsb
test
scas
rolb
fdiv
andl
cmp
ficoms
in
or
in
scas
insb
mov
mov
loopne
adc
stos
fstpt
xchg
or
push
dec
into
pop
jo
nop
adc
or
xchg
out
mov
mov
clc
fsubrl
adcl
lret
dec
or
aad
loopne
add
pop
cmpsb
shrl
ror
imul
xchg
cmpsb
pop
cwtl
sub
xlat
cmc
shrl
sbb
ds
adc
inc
hlt
jo
ds
ljmp
mov
sahf
add
jecxz
xor
repz
pop
or
popf
cmp
stc
outsl
pop
mov
insb
imul
mov
or
fistps
dec
lods
fistps
inc
cmc
sbb
mov
mov
jb
push
sub
mov
test
jae
shlb
test
out
lcall
adc
enter
push
pop
scas
sbb
sub
inc
ret
ja
dec
jle
fadd
lods
hlt
mov
lahf
into
jp
enter
jmp
iret
jbe
idivb
mov
and
jb
xchg
insl
sub
jb
add
jbe
dec
cltd
jmp
fldl2e
adc
rclb
mov
js
or
inc
pop
mov
push
into
in
or
loop
add
mull
mov
fists
mov
add
scas
jge
insb
xchg
inc
call
pushf
cld
add
inc
call
hlt
nop
pop
in
jns
je
ss
nop
ds
inc
adc
cmp
jae
xchg
int
scas
mov
ret
add
iret
es
out
add
jecxz
sahf
mov
lds
mov
ds
push
repnz
in
cmpl
push
or
dec
call
ret
push
out
in
pop
ss
aas
xor
push
jecxz
es
addr16
adcb
dec
jbe
cli
mov
mov
pop
or
jecxz
js
sub
mov
lret
les
jg
fiadds
mov
stc
cmp
test
mov
mov
inc
xchg
aad
cli
mov
fsubr
fs
clc
mov
cli
sub
shlb
jne
dec
insl
imul
sub
or
or
outsl
mov
je
scas
popa
mov
movsl
mov
ja
xor
lea
cs
loope
fistpl
push
push
inc
xchg
outsl
mov
clc
xor
add
mov
lea
iret
shrl
loope
push
or
and
sbb
add
test
std
jbe
adc
dec
jnp
inc
lret
inc
pop
loopne
loopne
lcall
test
adc
rclb
push
mov
mov
psrld
mov
cmpsl
cmpsb
mov
iret
divb
add
outsb
lock
ret
int3
and
js
xorl
testb
shl
mov
mov
das
pusha
xor
adc
cmpb
sbb
mov
mov
and
xchg
inc
in
push
push
add
cmc
add
jge
ret
inc
fmull
jmp
loope
cmp
incb
repnz
pop
or
cli
cmc
mov
xor
dec
xor
dec
gs
jnp
rcr
pop
xchg
mov
in
xchg
pop
fwait
mov
cwtl
xor
cmp
dec
cmp
subl
sub
or
xor
out
mov
inc
fisttpll
out
inc
lret
mov
inc
jne
fcomps
mov
sbb
inc
insl
int
outsl
mov
push
pop
out
xor
inc
push
jo
outsb
mov
ret
cli
fcmovb
lea
push
xchg
loope
mull
xor
jmp
dec
loopne
loope
or
inc
ss
push
call
push
xchg
push
xor
xor
push
jae
mov
push
sar
mov
sahf
iret
imul
popa
inc
fsubrl
fndisi(8087
pop
lret
or
fstps
ret
mov
insl
insl
xchg
sub
and
or
in
jo
scas
out
arpl
sub
rolb
xchg
in
mov
adc
sub
jnp
pop
fisttpll
loopne
lea
addl
pop
push
jae
lret
and
popa
or
scas
insl
jmp
sahf
icebp
sbb
ret
es
add
jg
loopne
cli
scas
pop
jno
daa
icebp
loopne,pt
aad
inc
mov
stc
ret
inc
jne
mov
xchg
inc
xor
mov
ss
cwtl
cmp
mov
mov
pop
jmp
fs
insb
popl
lret
inc
dec
adc
aam
insl
jae
push
mov
das
lahf
and
jbe
ficompl
adc
stos
icebp
in
and
mov
icebp
jns
lret
pop
icebp
xchg
lahf
repz
mov
push
dec
xor
iret
aad
loopne
sub
loopne
add
ss
adc
int
xor
xchg
std
push
push
mov
movsb
pop
out
mov
lea
je
rcrb
das
lods
data16
int
jb
cmp
dec
pop
xor
pop
int3
sub
xchg
mov
and
enter
outsl
pop
dec
cmp
mov
mov
push
hlt
mov
pop
fimuls
fistpll
mov
lds
mov
push
fwait
mov
xorl
shl
ljmp
add
mov
push
pushf
mov
or
cmp
sub
xorl
adcb
mov
xacquire
jp
scas
outsl
arpl
dec
fwait
and
loope
push
repnz
pextrw
pusha
cwtl
cmp
ljmp
jne
pop
mov
add
xor
aas
lods
aaa
fisubl
call
aad
inc
push
int3
cli
mov
adc
sti
jae
fucom
out
mov
cmc
inc
hlt
divb
push
xchg
push
test
lea
or
outsl
in
cmp
out
xchg
into
jecxz
fst
push
cmp
das
inc
mov
ljmp
daa
push
inc
hlt
xor
pop
pop
pop
mov
mov
in
mov
cmpsl
gs
pop
inc
push
in
ret
mov
sarb
cltd
xlat
je
sti
cs
ds
loope
dec
rol
mov
inc
loop
jae
sahf
shrb
fdivrl
rclb
or
jns
dec
pop
repnz
lcall
mov
in
mov
les
jg
hlt
adc
xor
lock
push
adc
fs
adc
cltd
push
iret
jge
sub
push
mov
adc
xor
cmpsl
xchg
mov
mov
lock
jge
sub
fnsave
add
adc
sti
fidivl
pushf
sub
adc
insl
shl
faddp
cmp
idiv
or
loopne
jecxz
in
xor
loope
sti
jge
cmc
adc
jmp
mov
add
dec
out
and
xor
rolb
mov
sub
loope,pt
lock
andb
or
push
shrl
std
loop
movsl
pop
mov
movsl
jno
test
mov
fwait
aas
fld
push
ret
lods
pop
nop
cmp
push
out
jo
and
inc
push
mov
or
xchg
mov
inc
stos
add
outsl
daa
fcmovbe
mov
popf
mov
push
fsubr
sub
ljmp
jmp
fidivrl
mov
std
fstpt
and
mov
jmp
das
fsubr
and
or
push
jmp
sbb
rorb
sbb
std
aam
lahf
test
and
lods
or
xor
lcall
ret
sbb
cmc
sbb
in
sahf
test
data16
dec
and
inc
test
add
sbb
mov
xchg
sahf
or
adc
sbb
repz
add
dec
pop
xor
aaa
jns
inc
cli
push
dec
pop
out
test
mov
imul
aam
nop
fildll
pop
sbb
dec
xchg
xchg
lcall
cli
jp
out
int3
jle
sarb
daa
and
cwtl
loopne
into
mov
lret
push
and
insl
mov
clc
lea
add
addb
ret
bound
mov
lock
or
lea
aaa
xchg
push
cltd
hlt
call
cmp
xorl
jne
inc
sub
leave
and
mov
push
adc
sti
icebp
in
test
push
mov
xlat
or
fistpll
inc
xchg
aaa
mov
push
push
pushl
jbe
imulb
dec
shl
repz
sar
lret
das
xor
ja
leave
and
pmullw
add
jae
rcrl
roll
mov
je
dec
leave
sub
push
and
xor
aad
out
add
hlt
or
xchg
stos
mov
mov
mov
sbb
cmc
mov
inc
test
mov
jns
cmp
xchg
mov
rcrl
ffreep
lods
test
pop
insl
addl
push
mov
ss
mov
add
and
jecxz
cmpsb
sbb
subb
cmp
iret
mov
xor
test
add
call
xor
pop
cmpl
shrl
sbb
ja
inc
stos
sbb
add
adc
out
pop
jg
mov
cld
lock
stos
scas
mov
xchg
and
insl
pop
addl
test
imul
jge
or
mov
inc
xlat
sarl
add
push
mov
pop
fiaddl
aam
push
bound
xchg
add
scas
jbe
jne
sub
hlt
fwait
jge
xchg
fiaddl
mov
mov
das
dec
dec
icebp
flds
std
mov
pop
sub
inc
ds
push
js
xlat
testl
xor
sbb
test
adc
fnsave
mov
mov
fisttps
adc
jne
and
lret
fidivrs
jecxz
es
mov
imul
inc
push
pop
iret
mov
ss
mov
inc
or
xor
jmp
pop
jne
insb
flds
dec
sbb
mov
lcall
rcll
stos
or
xor
outsb
orb
rcl
xor
adc
mov
pop
fcmove
sbb
loope
stos
adc
cwtl
leave
out
ret
testb
cmp
cld
hlt
ficoml
mov
ficoml
das
mov
push
clc
shrl
push
test
xor
sbb
mov
mov
mov
and
sub
ljmp
out
out
dec
aad
mov
cmpsb
cs
bnd
pop
loopne
pop
dec
clc
dec
mov
iret
ret
loopne
lss
xchg
add
adc
psrlw
imulb
test
mov
jno
jmp
outsl
out
sub
out
loop
and
jo
jnp
jl
or
xor
addr16
push
mov
int3
mov
cmp
pop
mov
aad
dec
sbb
jmp
out
and
mov
adc
imul
cmp
rcll
mov
inc
mov
ds
dec
outsb
mov
mov
dec
mov
popa
push
jbe
test
push
cmp
scas
ljmp
or
and
jecxz
test
adc
or
adc
jecxz
js
adc
pop
pop
aas
jb
lahf
insb
cmp
add
xchg
cmp
add
pop
pop
pop
pop
jae
mov
ficompl
push
test
cmpsb
lds
lods
test
insb
mov
in
out
jbe
fistl
cmpsb
xchg
movq
aas
pop
insl
lods
mov
jl
push
shrl
nop
mov
mov
movsb
outsl
popa
inc
mov
dec
test
fdivs
xchg
mov
xchg
pusha
push
loope
pop
mov
mov
dec
test
imulb
sbb
jae
pop
cmpsl
dec
fildl
js
cmc
adc
xor
inc
es
sub
sbb
aaa
mov
jecxz
sbb
dec
call
push
sbb
adc
lock
hlt
loopne
dec
fisttpll
fucomi
push
filds
nop
or
or
mov
stos
aaa
std
pop
loope
subl
push
push
inc
std
mov
inc
pop
jno
leave
retw
or
or
or
sbb
sbb
cmpxchg
or
dec
mov
cmpsb
fwait
aam
addr16
add
push
outsl
inc
pop
ja
xlat
out
jecxz
xor
inc
ret
lods
mov
push
loopne
js
fbstp
and
cmp
mov
inc
cmc
xor
lcall
test
lods
ja
sbbb
mov
repnz
mov
push
mov
ljmp
push
inc
mov
push
xor
push
mov
loope
scas
pushf
fwait
aam
mov
fstl
inc
test
orb
jl
ljmp
mov
inc
mov
cld
mov
arpl
xchg
cmpsb
cltd
mov
pushf
jg
stos
sbb
cmpsl
repnz
cmc
jo
outsl
popa
and
imul
push
sbb
xchg
dec
fiadds
mov
cmc
inc
cmp
fwait
inc
lahf
je
xor
or
sarb
mov
leave
mov
jecxz
jp
adc
sub
pop
sbb
scas
mov
andb
inc
insl
outsb
out
cmpb
pop
or
push
xchg
push
bt
cli
fst
push
jmp
adc
cmp
rcll
jbe
xchg
sub
enter
sbb
fisttpl
leave
push
jns
dec
push
sbb
jp
jnp
xor
jne
xchg
adc
or
shlb
loope
aad
mov
hlt
nop
jns
and
or
sbb
out
sbb
jle
lea
rcl
mov
sbb
mov
inc
ret
call
pop
ja
mov
cmp
les
std
inc
fldl
jb
xor
and
outsb
xchg
jge
insl
shrl
dec
sbb
aad
jne
sbb
adc
mov
fidivrl
cli
cltd
cmp
in
sub
sbb
aad
dec
mov
sub
out
mov
addb
mov
pop
js
sub
sub
mov
gs
and
mov
lds
inc
xor
insl
add
or
insb
xchg
jbe
std
push
jne
mov
cltd
mov
rcll
fbld
add
in
pop
push
push
lods
in
frstor
mov
pop
jle
mov
imul
mov
mov
mov
sub
insl
clc
insl
icebp
inc
push
dec
cmc
lcall
xor
push
js
sbb
bound
xor
sub
mov
cmp
add
lock
lea
inc
scas
cmpsb
pusha
loop
sbbl
test
fisttpll
inc
sub
mov
popa
and
mov
clc
cli
clc
and
stos
pop
cs
mov
mov
jne
pop
xor
insb
mov
lahf
or
hlt
iret
inc
aaa
lods
sbb
adc
lea
hlt
test
lds
push
fs
mov
sub
lret
inc
mov
fwait
push
adc
mov
mov
imul
xor
ds
mov
test
mov
or
call
test
clc
fs
sub
mov
and
mov
pop
push
and
aam
das
mov
sub
outsl
adc
ds
divb
cmpsl
clc
mov
idivb
fst
sub
mov
movb
int
sub
inc
add
test
jbe
xlat
sbb
imul
mov
add
xor
sbb
pop
ja
adc
rcr
pop
int3
jns
jbe
js
inc
or
js
pop
mov
fstpt
cmp
xor
push
push
pop
fsubr
outsl
push
ret
out
jmp
cmp
rolb
mov
xchg
sti
jo
in
gs
orl
sbb
lods
lock
shrb
rcrl
sbb
pop
shrl
imul
adc
adc
push
jmp
push
imul
jge
mov
icebp
adc
mov
sub
in
clc
adcl
aad
loop
pop
nop
rcl
pop
dec
ja
push
pop
mov
mov
pop
pop
or
rcrl
rorb
adcl
add
into
mov
roll
mov
inc
cli
pop
adc
orl
adc
lea
jge
sbb
fs
push
xor
xor
cs
jo
out
sub
fstp
mov
fnstsw
js
into
dec
insl
cs
sub
cmp
fdivs
pop
hlt
je
jb
jae
xchg
cmp
fistpl
orl
xchg
push
shrl
pop
jns
push
mov
push
loopne
outsl
dec
mov
add
pop
les
cmpsl
mov
sub
arpl
mov
insl
addr16
cmp
jns
adc
pop
fmul
adc
addr16
iret
fcomps
jne
and
mov
pop
mov
popa
adc
adc
inc
jle
inc
jne
loopne
mov
inc
popl
push
test
sub
nop
popf
cmpsl
xor
pop
bound
out
fidivl
cwtl
mov
fcmovbe
scas
push
test
stc
cmp
sbbl
xchg
outsl
and
popa
or
jmp
mov
fs
out
dec
shrb
int
push
xor
mov
mov
jecxz
loope
xchg
jg
popl
in
mov
or
lahf
jbe
sbb
call
addr16
add
fdivrs
lahf
xchg
xor
push
sbb
push
lahf
cli
mov
in
lea
lds
fadd
cmp
cld
leave
push
aam
inc
insb
xor
je
xchg
lods
out
hlt
int3
insb
fdiv
stc
into
pushf
xchg
daa
fidivs
jae
bound
xchg
pushf
repnz
dec
test
add
pop
and
sbb
ljmp
daa
movsl
leave
in
mov
and
addr16
xchg
cmp
dec
and
cmpsb
adc
and
pop
mov
es
rol
rcrl
ret
mov
pop
cmp
out
or
push
rclb
jg
lods
jbe
insb
and
bound
cmc
cmc
insl
daa
mov
test
inc
aaa
pop
int
inc
jbe
adc
outsl
test
lock
mov
sbb
add
les
idivb
clc
mov
and
mov
jo
mov
stos
jmp
fmull
ja
dec
push
sbb
jo
mov
into
aaa
orl
jmp
out
pop
ret
neg
sbb
xchg
lock
fidivs
cmp
mov
push
or
add
cmp
lret
insl
enter
mov
dec
xor
test
iret
movsl
jl
scas
mov
mov
dec
add
adc
adc
xchg
mov
orl
pop
push
jo
push
push
dec
jmp
clc
negb
adc
leave
ret
lcall
add
int3
push
call
loope
add
test
xchg
ds
xchg
or
xchg
insb
daa
mov
in
ss
mov
icebp
jbe
or
inc
xor
dec
pslld
nop
xor
mov
iret
fisttpll
add
lods
xor
aad
mov
insb
lret
jo
add
aam
xchg
sbb
stos
mov
addr16
data16
jne
mov
sbb
xchg
jbe
sub
ss
cmp
jno
leave
test
mov
xchg
testb
ror
aas
in
jmp
mov
lcall
imul
leave
mov
dec
leave
out
mov
cmp
cmp
out
imul
inc
ret
mov
int
mov
loopne
pop
and
jne
fstpl
js
nop
sub
jecxz
ret
push
xor
inc
xlat
ss
mov
sbb
push
sub
push
fdivs
clc
adc
xlat
cmpsb
imul
ja
xor
cmc
xlat
mov
ja
mov
cmp
cmpsl
jecxz
sar
test
dec
xchg
jge
xorl
movb
stos
jo
push
pop
xor
lock
cmpsb
pop
stos
pushf
add
fwait
dec
add
jns
sub
dec
push
xor
clc
andb
push
xchg
inc
pop
pop
insb
and
sarb
jbe
lcall
push
cmp
inc
fistpll
aas
xlat
imul
mov
ss
int3
cli
jae
dec
lea
jmp
outsl
cmpsl
mov
scas
xchg
sbb
adc
test
xor
imul
shlb
cmp
arpl
fldcw
xchg
or
movsb
icebp
scas
sbbb
push
test
adc
adc
clc
aad
lods
out
and
xor
decb
jge
in
cmpb
ja
insb
xor
jle
stos
icebp
test
insb
mov
fwait
bndstx
mov
inc
popf
lock
clc
rol
inc
xchg
dec
push
insl
nop
stos
aas
xor
aad
into
fnstsw
int
lock
out
xor
push
fstps
neg
sub
mov
add
sbb
call
dec
ja
adc
in
prefetchw
ffreep
cs
dec
sbb
push
out
ds
xor
call
push
ret
mov
xor
push
or
lahf
xchg
mov
imull
movsb
xchg
and
sbb
outsb
pop
pop
dec
dec
jns
and
lcall
sti
aad
daa
call
and
ljmp
sti
jns
stos
xor
mov
jl
fwait
mov
jae
mov
xor
hlt
add
dec
push
int3
pop
adc
jnp
and
in
in
aam
sub
jbe
out
clc
jmp
adc
mov
orl
push
sahf
sub
sub
fstpl
mov
or
inc
jge
mov
into
ss
aaa
out
fmull
repnz
mov
dec
outsb
ds
mov
mov
pusha
sub
stos
fisttps
cmp
roll
and
sbb
fdivrs
es
sbbl
push
xchg
ss
loopne
les
fiaddl
les
mov
lcall
jo
jecxz
jp
jmp
aam
stos
insl
mov
decb
lret
mov
aaa
pushf
inc
fildl
shrb
push
add
jne
dec
hlt
movsl
pop
dec
jns
pop
mov
add
imull
in
mov
mov
rcll
mov
inc
or
mov
inc
addb
hlt
mov
call
daa
pop
notb
out
mov
clc
pushf
ds
fwait
mov
mov
sbb
mov
cmp
push
dec
lret
test
imul
sbb
xchg
and
cli
popa
mov
jb
cmp
sti
push
sti
popf
xor
js
xor
data16
cmp
cli
jp
jbe
ret
jge
fistl
add
mov
fisttps
ret
xchg
sbbl
or
mov
imul
insb
std
hlt
sahf
cwtl
repnz
pop
je
add
add
dec
loope
sbb
jbe
inc
aaa
pop
ret
dec
xor
popa
jns
sub
pop
add
pop
pop
mov
jo
jle
lcall
shlb
pushf
sub
pop
mov
push
jl
mov
inc
movsl
sbbl
adc
lock
aad
popl
lcall
xor
and
rcl
fwait
push
and
movsb
aaa
inc
out
clc
loopne
leave
mov
hlt
repz
jbe
loope
enter
mov
shr
xchg
jmp
outsb
mov
jmp
jle
push
shrl
mov
adc
mov
jg
jbe
mov
lods
push
jg
xchg
ss
xchg
scas
lods
and
lcall
jae
sar
shrb
pop
xlat
xor
fidivrl
test
mov
data16
ret
aas
rcrl
and
push
outsb
mov
iret
jo
inc
push
aas
es
jge
inc
push
int
fcomip
push
jle
fs
jl
mov
rcrb
out
dec
movhps
aaa
movsb
pop
jmp
mov
aas
fcomps
jbe
imul
cmp
jae
push
and
ret
cmc
fbld
sbbl
movsb
out
jnp
pop
xchg
cwtl
test
insb
mov
popf
sbb
notl
je
jg
ret
out
movsl
push
jp
cmp
enter
hlt
insb
ret
cmp
xorl
jecxz
mov
or
in
daa
sbb
xchg
clc
push
sbb
mov
lods
ss
and
or
mov
ret
push
clc
loop
in
pop
daa
pop
cmp
push
imul
mov
ss
dec
fwait
jo,pt
pop
or
dec
jbe
xchg
cwtl
mov
or
pop
adcb
jnp
xchg
lret
adc
pop
dec
push
dec
and
adc
out
mov
cmp
inc
dec
cmp
push
inc
mov
cs
adc
insl
inc
arpl
out
test
lock
outsl
fs
out
or
das
xor
iret
or
mov
or
sbb
mov
call
test
lods
cmpsb
das
cmc
ss
outsb
add
adc
movsl
pop
xor
sbb
dec
scas
or
insb
je
stc
inc
mov
ja
sub
ds
cwtl
dec
test
mov
loop
mov
shl
insb
into
into
or
pop
cmp
mov
sub
popa
mov
jb,pt
xchg
add
aaa
mov
bound
lret
movzbl
mov
push
movsb
in
sbb
xchg
jnp
mov
pop
xlat
cmp
and
mov
dec
into
fistl
sub
fdivrs
iret
add
push
push
inc
mov
out
mov
dec
add
push
cs
cmc
mov
pushf
mov
xchg
jmp
aas
add
stos
stos
aas
cmpsb
xor
jp
jl
jae
add
or
into
orl
xchg
push
inc
push
fdivr
bnd
aas
cmp
xor
dec
cld
lret
cltd
sub
repnz
inc
dec
sbb
and
xor
push
jno
fcmovnu
mov
cmp
mov
xor
scas
faddl
dec
lods
test
jno
mov
out
out
dec
repz
inc
mov
rcrl
enter
mov
add
mov
xor
imul
lret
aas
nop
jmp
cs
fisttps
inc
sbb
add
js
lods
mov
aaa
iret
adc
sti
dec
loop
fimull
mov
scas
outsb
push
mov
lods
lret
ss
mov
adc
sub
jmp
and
cltd
in
dec
dec
mov
je
js
and
lods
mov
icebp
mov
xchg
adc
out
jl
push
fdivs
mov
movsl
jne
out
and
sub
loope
out
mov
xchg
sahf
mov
fnsave
pop
push
test
xor
or
xor
xchg
sbb
sub
jbe
icebp
lds
rcl
xchg
rolb
pop
bound
push
fnsave
sarl
cwtl
loopne
notb
xchg
xchg
sbb
cmpb
push
sub
sahf
test
add
out
popa
jae
cmpl
cmp
mov
sub
mov
loop
and
add
data16
xorl
xor
lods
sub
sbb
testb
add
add
cmp
mov
mov
sub
fmul
push
and
pop
out
scas
xor
leave
cmpsb
jnp
jae
sti
push
mov
or
xlat
mov
pusha
ret
jnp
lahf
mov
mov
dec
mov
aam
sub
jl
ret
subl
lock
pop
sub
or
pusha
cwtl
mov
inc
jmp
lock
clc
fs
dec
mov
sbb
xchg
sub
hlt
rolb
js
mov
sahf
and
mov
stos
xchg
aad
and
lods
jne
inc
jmp
aad
add
jnp
jmp
jl
int3
scas
js
inc
rorb
jl
push
inc
dec
mov
pop
sbb
sarb
in
add
aas
add
aam
scas
fistl
ss
aas
pop
or
mov
sbb
arpl
cmc
jmp
sub
xor
cmp
fistpl
aam
pop
add
idivl
mov
mov
decl
mov
iret
stos
in
pop
test
pop
fwait
fs
aam
mull
jecxz
jle
movsb
ret
into
shl
and
dec
dec
nop
pop
inc
pop
ja
inc
jecxz
lock
mov
je
push
jnp
sti
imul
out
pop
mov
xor
lock
inc
lds
outsb
test
mov
ja
out
mov
les
mov
jecxz
xor
jg
inc
ja
in
add
fisttpl
lea
xchg
or
ja
or
rol
sub
mov
and
sbb
imul
xor
mov
mov
ds
lret
mov
sub
ffree
cli
xchg
sti
fsubl
add
xchg
stos
sub
fmull
int
xor
js
in
mov
lods
popa
mov
push
pop
clc
fcom
scas
imul
fwait
ja
mov
sbb
das
mov
dec
push
inc
adc
mov
cwtl
data16
sbb
ljmp
loope
rcrl
pop
in
cltd
inc
sbb
loope
fidivl
cmp
shlb
mov
ret
incb
mov
stos
jae
jge
push
js
sbb
pop
pop
cli
lret
sub
push
cmpsb
pusha
xchg
mov
ja
jg
mov
xchg
or
xchg
sbb
jle
lea
or
cli
das
or
mov
in
xchg
inc
xor
push
pop
mov
cmc
hlt
call
push
jnp
pop
out
daa
xor
addb
sub
mov
inc
sub
dec
pop
pop
aam
push
push
push
pop
hlt
lock
fistl
xor
in
subb
add
mov
or
mov
push
test
lret
xchg
pop
and
push
mov
add
xchg
sbb
subl
pop
sbb
sarl
das
adc
add
rcrl
fnstenv
dec
fstl
daa
jb
mov
sbb
xor
sbb
sub
mov
cld
scas
inc
pop
lret
in
dec
dec
jl
sarl
outsl
jecxz
adc
cmp
inc
fidivs
hlt
cmp
ja
rorl
scas
lods
out
loope
sub
jo
xlat
shlb
push
rclb
cld
push
mov
aad
mov
and
cmpb
imul
test
jnp
mov
fmuls
cmpsl
je
hlt
jmp
push
xchg
dec
cmp
sahf
ret
imull
cmp
cmp
cwtl
jb
mov
or
pop
je
mov
add
inc
dec
cli
in
lret
or
jle
and
add
mov
cmc
jbe
mov
adc
paddusw
lds
xor
jbe
jae
test
in
cmp
addl
outsl
xor
jecxz
call
cmp
rcrl
mov
mov
inc
inc
sub
ljmp
hlt
rcl
sbb
add
jp
add
std
lock
xchg
add
loop
addr16
jae
xor
pop
clc
or
pop
push
xchg
sub
ficoml
rcrl
xchg
gs
adc
inc
cmp
pop
xchg
adc
fidivl
jno
addb
cmpl
and
iret
fisubrs
sub
fadds
xor
ljmp
jge
mov
lds
mov
adc
push
or
ss
cmp
add
in
xchg
andb
cltd
adc
clc
mov
jmp
imull
sbb
cmp
inc
mov
pop
aas
xchg
es
mov
fidivrs
add
pop
ds
fcompp
cld
scas
jl
in
lea
outsb
mov
dec
lret
fdivrl
fidivl
cmpsl
popa
jecxz
call
ficompl
idiv
jge
fildl
xchg
push
adc
aam
rolb
cmp
mov
ret
mov
sbb
loop
rorb
mov
mov
clc
mov
push
mov
fistpl
shlb
jmp
mov
sub
jp
inc
testl
fisubrl
jle
ret
or
mov
push
dec
mov
je
out
jb
jge
inc
or
mull
outsl
pop
or
inc
pop
sbb
add
mov
loopne
jp
dec
mov
fmull
push
xchg
das
xor
or
shr
push
jne
aaa
leave
mov
pushw
push
lock
mov
idivb
mov
in
mov
mov
dec
or
scas
mov
daa
cmp
in
scas
mov
xor
pop
gs
or
cmp
lods
xor
pop
sub
cwtl
xchg
pop
outsb
xor
aam
mov
add
or
negb
sbbl
xlat
call
inc
add
lcall
mov
lds
ret
jns
scas
jne
mov
gs
ja
aad
cwtl
lahf
inc
push
or
mov
ss
mov
test
cmp
lock
add
repz
sbb
sub
repz
andb
js
push
mov
daa
mov
repz
insb
dec
icebp
aam
aam
outsb
push
inc
aas
mov
and
pop
xlat
xor
int
pop
ja
jo
sub
fnstsw
call
inc
loop
out
repz
rorl
je
jo
shl
or
sbb
shr
int3
ljmp
mov
sub
jbe
mov
or
jmp
mov
lods
pop
int3
stc
fwait
jge
dec
lock
and
mov
pusha
push
push
mov
fbld
fwait
adc
push
hlt
imul
push
cld
jg
gs
clc
add
push
fidivrs
test
addr16
andb
xor
sub
outsb
mov
outsb
fldt
dec
psllw
ficoml
pop
jbe
pop
lret
or
pop
sti
sub
out
pop
sbb
fstpl
ret
test
mov
jmp
fs
adc
stc
dec
xor
fdivrp
sub
ret
push
jl
jle
mov
shl
vmovaps
push
jbe
cmc
test
cli
repnz
std
sahf
fdiv
notl
insl
dec
stos
cmc
daa
stos
pop
jle
pop
push
mov
stos
cmp
rcrl
adc
pop
int3
mov
out
cmp
stos
ss
addl
jmp
mov
inc
adc
clc
fmull
inc
or
xchg
cmpsl
orb
je
outsb
mov
push
punpcklbw
fidivl
fldenv
sub
jmp
mov
bound
loop
push
xchg
sarl
stos
sbb
mov
pop
stos
push
xchg
outsl
xchg
mov
inc
in
ljmp
sbb
loopne
test
movsb
push
mov
mov
ss
xchg
cli
adc
clc
mov
mov
inc
hlt
lock
std
mov
adc
ret
leave
jno
out
inc
test
pop
daa
or
loopne
jge
adc
push
jbe
int
adc
out
mov
repz
scas
jmp
xchg
sbb
pop
movsl
mov
add
xchg
out
push
push
pop
scas
pop
adc
push
loope
shrl
dec
neg
dec
in
mov
insb
sti
mov
sbb
push
adc
and
xchg
mov
inc
arpl
lock
pop
add
add
daa
ret
clc
cmp
xchg
push
lods
xlat
fisubrs
cli
push
ja
aam
sahf
testb
jno
add
cs
jbe
fdivl
je
cmpsb
xchg
loop
hlt
jbe
scas
xchg
std
sbb
jb
or
mov
jl
loope
cmp
data16
decl
pop
or
sub
cmp
ror
movsl
scas
and
fsubs
xchg
scas
fldt
cmp
outsb
jge
mov
lea
xchg
add
call
inc
dec
inc
and
pop
ret
inc
push
int
mov
or
iret
inc
add
imul
loopne
fdivs
mov
fcoms
mov
mov
dec
out
xchg
mov
int
ret
dec
pop
fwait
scas
and
frstor
rcrb
fwait
ss
mov
ja
lret
int
add
push
jge
xchg
xor
mov
pop
in
int
inc
mov
jmp
or
xchg
inc
aas
je
ja
jecxz
bound
ss
mov
jecxz
or
xchg
ret
test
push
push
cmc
push
hlt
mov
idivl
add
mov
xor
pop
cmp
push
enter
test
jle
out
popa
iret
imull
lods
add
lret
lods
sub
ja
cmp
xor
mov
push
ret
lahf
test
fcompl
jns
ja
nopl
inc
push
imul
ret
add
push
aaa
xor
test
jo
mul
adc
jle
push
mov
or
dec
inc
inc
data16
and
aad
mov
sbb
in
ret
dec
jae
push
jnp
xor
fisubrl
lcall
pop
xchg
cs
loope
adc
ds
cli
in
sub
rcll
jbe
mov
inc
out
xchg
sbb
lcall
movsb
loope
es
call
dec
scas
jl
ret
add
push
int
popf
xchg
xor
rol
out
inc
lock
cmc
cmp
mov
cmp
sbbl
ret
cmpsb
sub
push
cmc
adcl
ret
jbe
mov
xor
sarb
ss
jmp
fs
xchg
scas
arpl
jl
add
mov
outsb
sbb
in
test
mov
sub
int
bound
adc
insl
lock
cs
fstl
orl
mov
mov
cmp
cmc
arpl
ds
out
das
test
pop
aad
jns
hlt
mov
inc
adc
sbb
rolb
mov
fnstenv
xor
imul
test
mov
test
inc
jmp
cli
add
pop
or
scas
loope
mov
mov
adcl
stos
ret
data16
add
mov
sbb
rorl
lahf
add
cmp
inc
icebp
jecxz
pop
sbb
ja
add
lahf
cmp
adc
aad
sbb
inc
ja
leave
sbb
scas
jo
shlb
dec
adc
push
aaa
dec
aaa
mov
push
ret
cmpsl
enter
mov
incb
push
stos
ss
sub
or
push
sub
bsf
xor
js
maskmovq
testl
xor
insb
daa
in
xlat
xchg
gs
jp
mov
bnd
mov
std
stc
aad
cmc
mov
jo
xchg
int3
shlb
test
insb
movsl
ljmp
cmp
mov
int3
hlt
bound
hlt
push
mov
lcall
icebp
sub
lea
cmp
cltd
dec
cmpsl
fucomip
popa
or
icebp
cmp
stos
int
in
imul
lds
or
das
cmp
sbb
mov
jb
sub
sarb
addb
lods
xchg
inc
xor
enter
arpl
xchg
lds
lea
sti
pop
add
pop
xor
push
imul
jecxz
mov
sub
fs
mov
cmp
sub
shlb
push
scas
mov
mov
sbb
jge
mov
mov
xchg
fisttpll
xor
xchg
sbb
stos
movl
fidivrl
xchg
mov
rorl
cmp
jb
mov
pop
mov
mov
pop
pop
dec
repz
fninit
imul
mov
sub
mov
add
jmp
inc
dec
mov
pop
insb
xchg
pop
sarl
push
push
mov
insl
call
ds
leave
cs
mov
in
cli
cmpsb
push
pop
dec
jo
shr
scas
adc
mov
outsl
clc
mov
mov
add
sbb
cmp
mov
pusha
dec
mov
into
pop
and
cmpb
call
cmp
test
orb
push
xor
loopne
xor
ss
out
hlt
adc
in
cmpsl
cmpsl
dec
into
and
or
loopne
shlb
mov
or
pop
mov
pushf
getsec
test
jle
adcb
shr
fsubrl
push
addr16
inc
push
outsl
ret
cmp
scas
shll
and
popf
sahf
push
dec
mov
ret
xor
clc
xchg
sub
or
dec
cld
mov
pop
and
add
jne
insl
cmp
jae
ret
cmp
insl
outsb
insb
mov
inc
add
adc
sub
das
in
push
dec
mov
pushf
inc
lea
testb
cs
inc
push
int
sbb
les
packsswb
aad
jge
xlat
cmp
loopne
xchg
pop
xor
mov
adc
testb
adc
adc
pop
loope
jmp
pop
out
dec
shll
mov
cmp
or
mov
ljmp
aaa
xor
sahf
or
gs
adc
jne
popa
notl
outsb
jecxz
inc
aaa
loopne
repz
pop
js
cmpsb
push
lcall
add
xchg
insb
je
dec
popf
sbb
push
inc
pushf
mov
jno
jmp
lret
cmpsb
jecxz
xchg
fstp
mull
jg
insb
push
call
xchg
cmp
pop
aas
lahf
clc
sti
mov
lods
mov
pop
in
jmp
add
dec
xlat
mov
lret
popf
enter
xchg
dec
jnp
data16
leave
push
mov
jnp
push
movsb
fdivrl
sti
mov
jmp
adc
or
inc
push
pop
outsb
add
pop
aad
cmp
sub
sbb
dec
add
pop
sbb
pop
jo
je
aaa
push
add
and
mov
mov
pop
push
mov
out
fdivrs
or
push
stos
addb
lea
imul
imul
dec
inc
xor
insb
outsl
jmp
push
fistpl
mov
mov
ja
cmp
sub
ror
imul
push
lcall
ret
sub
mov
cmpsl
lea
stos
test
js
sbb
daa
mov
add
fdiv
fstpt
cmpsl
and
pop
add
lret
adc
or
bound
xchg
cli
mov
ret
adc
mov
or
dec
fistpl
add
out
aam
cmp
xchg
test
lock
sub
adc
mov
lret
push
notl
movsb
and
cmp
push
out
aad
xor
test
out
adc
imul
push
lock
insl
sub
out
jge
or
dec
mov
jb
test
cmp
mov
or
mov
push
cmp
insl
cld
dec
insb
cmp
aam
dec
jge
cmp
mov
pop
loope
xchg
sub
mov
hlt
cmpsb
or
ficomps
jne
push
sbb
and
divl
lea
xorl
popf
sti
call
ja
fisttpl
adc
test
int
dec
lds
loopne
pop
xlat
xor
mov
loope
lods
or
fnstsw
jle
sbb
lcall
mov
cwtl
jne
add
data16
outsl
push
or
jl
mov
mov
decb
aam
sbb
mov
lods
icebp
andb
test
rcr
sahf
mov
lods
roll
les
pop
pop
pop
dec
jge
jmp
jmp
mov
dec
phsubw
sub
aad
mov
jo
in
adc
push
mov
add
std
add
std
mov
cmc
mov
setne
sbb
bound
lcall
mov
mov
adc
scas
lock
mov
outsl
divl
scas
pop
popf
pop
push
cmp
mov
fnstcw
cmpsl
ds
cmp
ss
xor
dec
push
mov
adc
pop
push
into
push
dec
out
push
ret
int3
aam
stos
cli
mov
add
pop
arpl
sarl
push
xor
ds
test
scas
daa
push
push
and
push
arpl
subl
push
add
jecxz
xchg
fisubl
rorl
movsl
cmc
fwait
jl
xchg
outsl
out
aaa
test
or
je
xlat
xchg
jmp
lret
mov
scas
outsb
sti
push
das
in
mov
fdivrs
and
push
push
lcall
repz
jg
inc
scas
xchg
scas
movsl
jge
arpl
jb
add
jmp
rolb
jmp
cmpsb
pop
mov
inc
js
call
insl
adc
cmp
dec
cmp
jl
fstpt
or
inc
push
mov
mov
inc
pop
das
cmp
in
xor
aad
mov
loopne
out
xchg
fdivs
cmpsl
js
dec
sub
mov
loope
sbb
mov
jp
adc
mov
xor
daa
xchg
std
adc
std
push
ss
scas
jmp
shl
in
add
fsubl
xor
add
out
enter
rcl
mov
or
mov
mov
add
pushl
call
sub
in
push
cli
stos
xor
adc
dec
jno
scas
and
cld
jge
mov
lods
andb
fisttps
jbe
xor
inc
mov
adc
pop
push
test
fdivrl
xchg
int3
or
lods
and
aaa
sbb
dec
or
jecxz
and
popl
roll
imul
loope
jmp
testb
push
dec
pop
inc
scas
cli
fldz
cmpsl
fwait
loope
xchg
repz
sub
and
je
mov
adc
stos
jmp
out
push
dec
push
rolb
aam
test
xor
xchg
daa
sarb
ret
outsb
adc
or
roll
mov
jecxz
pop
scas
sahf
mov
ljmp
dec
and
cli
mov
and
cmp
sub
or
sahf
jno
fisubl
jne
push
and
cli
and
xchg
stos
jne
sbb
in
mov
mov
ret
cmp
pushf
jb
xor
mov
pop
icebp
jge
fsincos
sti
sbb
xchg
daa
pop
jle
outsb
push
xor
xchg
insb
out
cmc
outsb
cmp
ret
xchg
xor
out
in
cmp
push
test
push
jp
clc
push
inc
sub
push
cltd
clc
fisubl
mov
add
xchg
inc
jl
out
outsl
sbb
imull
sahf
lret
sbb
adc
lods
pop
aad
xor
xchg
sub
clc
fldt
aam
cmc
movsb
cmp
jp
cld
jmp
adc
je
sbb
add
sbbb
cmc
cmc
into
repnz
loope
insb
adc
loop
mov
xchg
mov
divl
or
mov
cmp
cmp
inc
sub
jl
pop
mov
lock
hlt
mov
inc
daa
rol
test
jle
cmp
test
dec
inc
cmp
mov
sub
mov
push
inc
test
add
sbb
in
cmp
push
adc
in
jnp
xlat
rcrb
packsswb
out
aad
mov
lahf
add
mov
mov
in
pop
mov
add
sbb
repnz
push
push
fmuls
addl
movsb
sti
xchg
loop
xor
in
inc
or
mov
jle
call
xchg
xchg
and
dec
adc
mov
repnz
inc
mov
ficompl
inc
cmp
fidivrl
cmp
push
sub
in
mov
aad
movsb
push
pop
xlat
sbb
sub
or
sbb
and
lods
insb
mov
add
jle
pop
xchg
cli
cmc
stos
sahf
mov
movsb
push
mov
cmp
add
lcall
jnp
mov
clc
ret
jp
xor
insl
loopne
or
gs
pop
fstps
mov
xor
sbb
add
lds
hlt
int3
push
mov
mov
sub
ljmp
and
mov
dec
push
sbb
or
fwait
jle
inc
xchg
xchg
jnp
into
add
es
aas
mov
pop
push
scas
xor
call
pop
outsb
pop
fadd
xchg
pusha
push
mov
xor
fwait
sub
inc
or
sbb
mull
fst
dec
push
std
cmc
lds
gs
mov
pop
sub
scas
pop
jle
fadds
sahf
and
es
pop
sbb
xchg
cmp
xchg
inc
out
sbb
or
out
add
pop
jnp
or
mov
jmp
call
cmp
dec
mov
push
sbb
dec
mov
adc
in
loop
xchg
add
in
jo
jl
clc
mull
pop
push
inc
cli
scas
mov
cld
add
fmul
inc
inc
cltd
sub
jae
mov
cmpsl
das
push
xchg
bound
ret
icebp
arpl
jo
pop
mov
push
sarl
jo
cli
sub
jl
mov
cmpsb
cld
mul
loope
sarb
shll
and
cwtl
add
scas
addr16
pop
and
mov
cmp
sub
shll
sbb
sbb
mov
fldl
jnp
leave
push
loope
xor
in
in
sub
cs
es
inc
je
and
arpl
dec
hlt
lock
cmpsl
mov
hlt
pop
mov
pop
inc
sub
inc
in
xor
jno
mov
ficoml
stos
dec
or
ret
inc
scas
and
mov
shlb
jmp
lods
pop
test
dec
ja
hlt
js
scas
mov
cli
push
mov
mov
xchg
push
pop
jns
outsb
test
inc
lret
jecxz
popa
hlt
orl
pop
or
mov
mov
fs
ds
adc
and
insl
xor
lock
sub
outsb
sub
out
inc
stos
cli
cmp
ljmp
loope
inc
in
inc
std
repz
gs
add
stos
into
ret
mov
mov
push
insl
inc
les
insl
iret
and
in
mov
je
jge
and
sub
xchg
xchg
clc
jg
jp
mov
xchg
add
sbb
pop
fdivs
inc
leave
scas
jo
pop
shll
inc
in
popa
out
pusha
push
je
outsl
sbb
popa
jmp
fdivr
pop
mov
les
popa
test
jbe
test
adc
out
sub
adc
mov
outsb
imul
dec
mov
outsl
jns
sub
mov
inc
test
dec
cmp
cld
jl
mov
or
fstenv
inc
fistpll
aam
jae
xlat
imul
shrb
int3
outsb
aad
ds
stc
and
pop
inc
rorb
inc
mov
fidivrl
lahf
push
rorb
xchg
pushl
xlat
mov
call
xchg
stos
jne
xchg
enter
adc
lds
pop
add
mov
and
fldt
pop
pop
mov
test
loop
and
sub
shrl
ficomps
out
jne
or
dec
xor
out
inc
mov
shrb
fisubl
es
sbb
mull
xor
push
xor
movsb
dec
mov
mov
mov
xor
adc
mov
lret
fbld
out
cmp
xchg
jge
shlb
in
testl
data16
mov
jo
ljmp
jmp
mov
out
jo
xor
jp
add
and
mov
test
fimull
cmc
sbb
mov
out
push
pop
icebp
lods
outsl
jae
pop
fwait
pushf
or
jb
in
push
insl
int
mov
aad
imul
test
and
jge
ret
je
adc
mov
cmp
fildll
push
xor
call
mov
insb
cli
mov
pop
dec
pop
mov
xor
inc
into
push
sbb
mov
clc
lcall
adc
aam
cmc
test
add
sub
in
ret
and
mov
test
divb
in
lds
xor
lahf
mov
pushf
je
in
pop
aaa
mov
jbe
jbe
cltd
add
andl
cmp
cmp
cmc
cmc
lods
sbb
or
idivl
fidivrl
int
movsb
cmpsl
mov
pop
call
scas
jle
cmp
cmpsl
jecxz
mov
aad
mov
mov
mov
pop
aaa
push
mov
mov
jnp
icebp
jg
and
rcrb
mov
int3
jae
inc
push
aaa
mov
les
sub
inc
sub
imul
and
adc
push
pop
xchg
sub
mov
or
arpl
ds
sahf
test
icebp
mov
outsb
cmp
mov
add
js
or
mov
push
int
push
mov
sbb
je
push
and
cmp
subb
add
jle
sbb
rcll
flds
xor
int
cld
enter
in
outsl
cmpl
stos
mov
je
rcl
push
dec
inc
adc
hlt
jmp
mov
add
inc
jo
jmp
fsubrs
pop
sbb
aad
mov
dec
push
and
dec
sub
push
mov
inc
xorl
and
or
xchg
cld
test
ficompl
xchg
clc
ljmp
inc
push
xchg
shr
mov
out
jnp
sub
mov
sub
vmovq
fwait
sbb
stos
push
es
shlb
and
jmp
add
xlat
lods
ja
cmp
fdivrp
icebp
hlt
int
in
push
and
mov
mov
in
mov
stos
adc
inc
and
sbb
mov
and
add
les
ret
jb
in
aam
jne
add
idivb
outsb
jo
clc
out
les
sub
imul
sub
pop
xor
adc
enter
cltd
inc
jge
jge
pushf
aas
mov
fnsave
dec
sbb
inc
ja
das
jb
int
inc
mov
hlt
icebp
lock
lret
dec
dec
lods
mov
sti
or
outsl
pop
jge
cs
dec
rcrb
mov
dec
pop
sbb
mov
push
pushf
lods
addb
int
jecxz
and
mov
rcll
cmp
adc
fildll
inc
push
or
outsl
test
aas
cmp
ja
or
jp
mov
jge
stos
rcll
cs
cmpsb
dec
cmpsb
mov
mov
jg
mov
or
push
int
call
rclb
xchg
incb
xchg
adc
or
pop
popa
pop
mov
push
pop
and
dec
xchg
mov
jp
pop
addl
cmpsb
hlt
cs
pop
mov
jno
jle
mov
pop
fiadds
addr16
or
add
or
icebp
cli
loop
adc
ret
add
aad
and
das
sub
and
test
icebp
adc
dec
mov
pop
lock
in
xor
sbb
xlat
fldl
or
jb
adc
mov
mov
insl
xor
idivl
cli
mov
aas
pop
js
cmpb
xlat
xlat
inc
mov
loope
movsb
popf
mov
cmp
andl
les
je
popf
sbbb
hlt
call
jmp
aad
ljmp
loope
out
mov
cmpsl
xchg
cld
inc
mov
mov
jne
hlt
fcmovnbe
xor
orl
arpl
xchg
adc
jge
dec
outsl
lods
dec
sub
cmc
lods
in
clc
adc
out
jae
out
popf
rcrb
jnp
fs
js
add
stc
addr16
imul
mov
mov
pop
mov
pop
icebp
mov
sbb
cli
movsb
dec
jno
push
arpl
cli
enter
xchg
insl
sarb
lock
shl
jecxz
in
mov
rclb
loop
cmp
mov
xchg
jns
daa
xchg
loop
call
add
dec
into
es
lock
mov
js
sahf
and
lock
jle
sbb
fldenv
shl
inc
cmp
push
dec
fisubl
jp
push
cmovg
popa
out
icebp
mov
sbb
jnp
lods
add
les
push
dec
push
in
mov
mov
sub
adc
push
xor
cs
hlt
xor
sub
aas
xor
jmp
adc
jb
xor
in
inc
out
jge
mov
mov
mov
cli
and
sti
pop
xlat
cmp
jno
adc
dec
mov
flds
cmp
call
insl
mov
jg
cmp
aaa
outsb
incb
sub
cmp
pop
ja
imul
xor
xchg
mov
mov
fists
mov
cmp
popf
in
xor
psubusb
hlt
test
testb
in
cld
push
mov
shll
adc
js
adc
rolb
mov
push
xor
fwait
pmuludq
bound
inc
inc
jne
jae
mov
adc
fwait
cmpsb
push
xchg
rcl
jae
sbb
jno
pop
clc
fisttpll
std
and
ss
out
dec
or
fcmovne
push
mov
outsb
aas
orps
test
fbld
fwait
cltd
add
out
ljmp
jmp
add
pop
sbb
xor
and
rorb
jne
or
add
xor
xor
paddd
and
loopne
scas
filds
ja
fbld
data16
pop
clc
in
mov
pop
pop
orl
xor
aad
sub
xor
mov
cs
inc
pop
lea
mov
frstor
push
add
sub
enter
cmc
aad
or
test
adc
clc
mov
test
loopnew
mov
test
rorb
stos
push
jno
repnz
cmc
cvtps2pi
addr16
dec
das
loop
lea
mov
leave
test
in
xchg
push
enter
inc
cmpsb
inc
loopne
outsb
in
or
jecxz
popa
sarl
jle
cmp
dec
loop
adc
pusha
and
test
out
add
pop
lahf
mov
pop
arpl
sbb
push
ss
addl
aaa
jle
clc
pop
lods
xorl
jge
xlat
out
test
inc
ljmp
lock
rolb
xorl
jp
subl
enter
sbb
jmp
dec
popl
mov
add
cld
ljmp
cmp
sbb
ret
dec
mov
in
jp
mov
xor
pop
cltd
lret
lods
sbb
xchg
mov
mov
fcoml
mov
and
xchg
sub
je
sub
cmpsb
call
lahf
lcall
push
mov
xchg
jne
ffree
xchg
std
sub
out
cmpsl
pop
in
cmp
jp
aas
mov
out
jmp
cmpsl
xor
popf
mov
jp
jl
cmpsb
insl
add
outsl
scas
pusha
mov
inc
pop
pushf
frstor
cmp
pusha
in
mov
push
pop
scas
sbb
inc
mov
mov
ja
loopne
xlat
shll
aaa
fistl
lret
cmpsl
jbe
push
mov
or
lcall
pushf
push
sbb
lea
or
aaa
jae
out
arpl
sbb
cmp
sarb
or
jl
in
ds
ret
sti
lcall
mov
loope
andl
add
imul
and
lcall
data16
sbb
inc
roll
out
xchg
ret
int3
mov
test
or
sub
seto
mov
push
ds
ja
ret
cmp
add
pop
jmp
rorb
je
cmpb
mov
push
and
or
mov
mov
sbb
test
lcall
test
sub
movsl
dec
insb
in
outsb
dec
xchg
and
popf
adcb
mwait
push
and
mov
fstps
mov
icebp
stc
jmp
icebp
arpl
scas
push
stos
mov
mov
and
jle
fisttpll
push
out
mov
fldcw
leave
add
pushf
dec
push
ds
push
rcr
shrb
push
cli
add
shlb
add
negb
mov
cmpsl
and
mov
xlat
mov
mov
mov
insb
mov
sbb
pop
adcb
divl
punpcklwd
xor
mov
sub
hlt
cmp
popl
stos
pop
fsubs
cs
mov
mov
mov
cs
cmpsl
adc
and
jg
js
adc
mov
xor
shr
loope
inc
daa
mov
shl
lods
jmp
stos
sar
lcall
ret
xlat
adc
mov
jns
mov
push
mov
fs
jmp
pop
icebp
mov
cmovae
int3
lcall
pop
sbb
mov
pop
mov
adc
das
cmp
cmpl
pop
xchg
push
sub
inc
insl
jnp
fldt
add
adc
popa
pop
adc
pop
fdiv
lret
es
and
ds
mov
inc
mov
aam
inc
loop
xchg
or
out
lock
pop
xor
aad
test
jmp
add
fcompl
cmpsb
scas
sub
lahf
push
rcll
das
add
lcall
loopne
fldenv
jns
arpl
jp
jp
jmp
mov
xlat
cmc
jnp
mov
and
jl
les
push
ldmxcsr
je
mov
push
inc
cmp
cmp
subl
scas
clc
hlt
push
aam
out
jle
lcall
mov
jmp
fisttpll
mov
test
mov
jl
es
fdivrs
outsb
repnz
pop
in
hlt
pop
adc
divl
mov
inc
sbb
lock
sbbl
movsl
hlt
mov
icebp
std
or
mov
bnd
sub
push
add
xchg
xchg
mov
lea
negb
cmp
sbb
clc
sbb
mov
js,pn
sbb
jo
xor
and
push
ficoml
mov
inc
mull
and
inc
xor
nop
movsl
adc
bound
lret
pop
jl
inc
lds
mov
jp
ja
ds
sub
sub
popf
pop
in
loop
mov
xchg
imul
hlt
mov
sahf
inc
cltd
sahf
jbe
mov
push
xchg
cmp
cmpsb
movsl
mov
fdivl
stc
xor
push
mov
pop
xchg
add
sub
jb
jno
xchg
outsl
test
cmpsb
jl
jno
cmp
add
cmpsb
lcall
ja
mov
and
cmp
mov
pop
insb
inc
insb
js
mov
dec
push
cmovnp
adc
and
mov
ja
ja
fimuls
fdivl
dec
push
addr16
xor
sbb
dec
daa
mov
dec
repz
and
mov
packssdw
xchg
imul
cwtl
mov
pop
popf
push
sbb
mov
cmp
xor
and
jns
or
mov
mov
cmpsl
jge
inc
je
push
cli
cmpsl
mov
sub
mov
dec
addl
scas
outsb
or
dec
popf
stc
push
lods
scas
jne
pop
mov
es
out
sub
ss
inc
jl
mov
sahf
shl
fs
fadd
sbb
leave
cli
test
dec
adc
je
or
repnz
push
lcall
xchg
push
cli
dec
pop
aas
push
mov
dec
stc
xchg
sub
mov
sub
xor
movsl
int3
push
cmp
mov
aaa
and
cmp
std
jge
pop
sub
add
inc
mov
jne
mov
or
cmc
sti
xchg
dec
mov
je
nop
adc
lcall
popf
or
xchg
sbb
adc
ficomps
jle
sbb
jmp
adc
aam
cs
nop
dec
jp
pop
shrb
in
js,pt
clc
in
into
ljmp
fdivr
cli
mov
fists
lmsw
inc
cmp
iret
into
sbb
arpl
xchg
adc
std
call
sbb
ret
or
jmp
pop
or
add
mov
ds
bound
push
mov
mov
lret
sbb
or
lea
inc
and
inc
add
xor
mov
mov
lret
mov
cmp
icebp
sbb
fldt
inc
mov
add
mov
out
jmp
lret
cs
or
sbb
mov
mov
aaa
stos
jnp
aas
mov
mov
movsl
adc
xchg
pop
sbb
call
in
and
je
jo
je
add
icebp
les
dec
daa
xor
xchg
add
jne
mov
into
add
mov
mov
xlat
mov
pop
dec
or
fwait
pop
cs
cld
xchg
jmp
enter
fdivl
jl
sub
pop
enter
ret
jp
jle
fisttpll
fsubr
repz
ja
adc
repnz
fstl
out
xor
rolb
dec
inc
btr
imul
mov
imul
jle
in
shlb
jmp
inc
push
xlat
pop
call
out
xor
clc
mov
loope
sbb
loop
push
sbb
pusha
adc
aad
out
push
mov
test
ss
cmc
pop
push
or
lret
mov
lock
push
sbb
pop
outsb
pop
inc
push
inc
or
out
or
sti
hlt
inc
shll
or
dec
ja
dec
push
dec
test
pop
mov
lahf
xor
push
push
jae
xchg
ffreep
punpcklwd
dec
loopne
or
jg
xchg
push
or
xchg
lret
xchg
mov
cmp
cmp
pop
sahf
or
push
push
pinsrw
cmp
lds
loopne
sbb
sbb
outsb
jmp
add
push
push
pop
inc
jno
shl
icebp
test
movsl
inc
add
push
fldl2e
ret
jo
push
ret
mov
inc
test
sub
scas
mov
popf
xchg
ljmp
fsub
sbbl
xor
outsb
not
mov
test
loopne
sub
add
lods
sub
notb
cmp
outsb
mov
popf
aas
add
mov
xchg
fiaddl
jmp
inc
jo
jnp
jo
add
aam
lea
or
je
repnz
inc
bound
push
xlat
out
add
sub
jl
leave
shll
popl
subl
in
mov
jne
movb
sbb
inc
jne
xchg
xchg
lock
pop
cmpsl
or
negb
or
mov
xor
clc
shl
sbb
xchg
std
mov
push
mov
fistpl
dec
in
out
push
lods
mov
xlat
mov
lret
cwtl
and
jmp
push
movl
mov
xor
rorl
fimuls
push
inc
jae
cltd
ljmp
insb
push
loop
adc
pop
mov
push
idivb
nop
or
int3
sub
lcall
sub
hlt
lock
xor
into
cmp
lret
mov
push
pop
cwtl
push
xchg
loope
mov
loop
or
js
adc
test
scas
daa
pop
leave
popw
sbb
scas
lcall
mov
je
psrlw
arpl
mov
push
inc
movsl
in
mov
imul
int
mov
imul
loopne
fwait
xor
and
jp
les
pusha
pop
jecxz
mov
mov
pop
sbb
pop
popa
dec
aam
jo
jge
xor
pop
xor
pop
mov
bound
jmp
sbb
sub
dec
inc
imul
jecxz
mov
mov
shll
stos
pop
and
xor
push
xor
dec
mov
push
ss
add
cld
arpl
mov
pop
fcom
idivb
jmp
sub
mov
push
and
daa
mov
dec
ds
or
lret
lock
outsb
pop
sbb
jmp
jg
clc
mov
cli
or
stos
xor
shl
adc
loope
lock
xchg
leave
mov
test
xor
jmp
aam
fincstp
sub
inc
ds
xor
xor
mov
pop
push
mov
or
shlb
sbb
and
add
jecxz
sbbl
loope
adcl
addb
sti
lock
movl
out
and
repz
repnz
data16
xchg
jbe
add
jns
icebp
inc
push
push
push
mov
lods
pop
lcall
or
or
add
int
push
jg
inc
add
int
cmp
test
ficoms
jo
shlb
jecxz
xor
shrb
mov
dec
cld
and
stos
stos
clc
push
lret
out
sbbl
pop
lock
test
push
sbb
add
cmp
jno
mov
xchg
sub
pop
les
mov
mov
je
scas
sbb
loopne
xor
adc
pop
out
pop
add
cwtl
out
sarb
xor
mov
dec
pop
jecxz
mov
add
sbb
mov
xchg
cmp
jo
cmp
rcll
xor
mull
notl
inc
mov
icebp
adc
arpl
je
lods
mov
repnz
push
dec
cmc
dec
std
sbb
mov
mov
insb
fwait
call
inc
jmp
jg
repz
int3
inc
xor
imul
pop
rorb
inc
call
cmpsb
aam
xlat
cltd
fildl
fdiv
dec
fdivrl
fs
pop
outsb
fstpt
adc
call
add
movsb
imul
mov
in
jae
sbbb
xchg
jns
adc
lock
ror
mov
pushf
out
inc
mov
stc
pop
aam
jge
int
in
pop
adc
scas
shl
orb
push
cmp
pop
xor
push
sbb
inc
pop
int
test
rclb
sbb
jp
push
mov
push
popf
add
inc
scas
xor
ds
mov
xor
jle
and
mov
dec
movsb
add
add
and
mov
xchg
cmp
inc
insl
out
or
std
bound
and
mov
cmp
loope
je
rorb
paddsb
cmp
in
push
sub
dec
mov
mov
lahf
inc
cwtl
in
daa
dec
or
jge
mov
inc
add
jp
testl
arpl
popf
jecxz
cmp
xor
mov
inc
negl
jb
jo
adc
outsb
mov
stos
cmp
inc
insb
pop
or
push
std
call
xor
xchg
add
mov
jmp
jecxz
mov
outsb
hlt
sbb
out
sub
sahf
push
jns
shrb
pop
rorl
dec
push
xchg
loope
pop
std
dec
dec
mov
add
sub
jp
xchg
hlt
push
arpl
pusha
mov
jno,pn
cmc
int3
pusha
pop
fidivrl
pop
aam
ret
in
xchg
movsb
push
imul
xlat
adc
push
lcall
jmp
scas
add
xchg
xor
sbb
mov
scas
mov
and
xor
das
ss
repz
js
cmpsl
mov
mov
mov
ret
arpl
fucomi
stc
in
mov
push
lret
ss
xchg
hlt
jne
push
cld
shrb
push
cmpsl
mulb
pop
cmp
enter
or
mov
out
inc
mov
cmp
in
push
ds
dec
movsb
and
daa
push
cmp
jmp
insb
adc
stos
push
rcl
mov
adc
mov
add
shlb
pop
mov
stos
and
adc
fstp
subl
mov
pop
cmp
xor
adc
mov
adc
and
dec
mov
in
lahf
add
icebp
push
divl
pop
loopne
mov
loope
mov
sbb
mov
mov
lods
inc
mov
dec
pop
js
ljmp
xor
pop
cmp
lahf
sbb
mov
in
or
mov
ret
icebp
daa
xchg
add
dec
orl
enter
psadbw
arpl
test
add
mov
imul
vpsllq
inc
imul
xchg
jae
mov
cmp
aam
pop
or
mov
addb
mov
sbb
cs
xchg
pop
mov
js
mov
xor
sbb
and
sbb
adc
scas
stc
shl
mov
pushf
dec
int3
mov
jmp
adc
sbb
xchg
pop
inc
dec
xor
lock
in
jnp
lods
ret
in
dec
dec
stos
es
shrl
xor
xchg
popf
adc
xchg
ss
scas
cmp
cmp
mov
add
stc
pop
inc
xchg
out
sbb
sub
outsl
jnp
cmp
ss
push
jno
sub
pop
push
mov
das
mov
les
aaa
push
push
cmp
das
push
ss
push
out
clc
ds
ret
divb
stos
jb
sbb
push
jo
xor
xchg
inc
addb
sti
xor
cmpsb
inc
cmpb
arpl
jp
push
xlat
add
cs
or
call
scas
inc
and
dec
aad
xchg
sub
hlt
jne
pop
aam
pop
push
mov
loopne
in
lods
sbb
mov
mov
add
mov
outsb
jne
cld
ja
mov
outsb
jnp
add
sahf
popa
jae
scas
jle
xchg
push
ja
sbbb
jl
cld
imul
sbb
inc
jne
xor
das
cmp
push
xlat
cli
push
push
fisubrs
je
bound
fldl
adcl
cmc
movsl
mov
ja
dec
jle
test
stc
into
cs
std
mov
push
cwtl
inc
adc
mov
fstpt
jge
push
mov
jne
ss
lcall
jl
inc
mov
mov
or
cmp
and
fstps
jg
lcall
or
sub
aad
or
xchg
and
hlt
ds
rcll
shll
inc
mov
scas
xor
sar
orl
cmpsl
mov
aas
xor
push
sti
mov
fadds
ss
pop
rcl
inc
lret
pop
cmpsb
mov
hlt
incb
mov
lock
add
mov
das
lahf
add
std
gs
mov
pop
xchg
sahf
js
sub
or
rcll
je
or
xchg
call
adc
cmp
mov
add
jge
fsubrs
lock
into
enter
cmp
add
adc
cli
sbbb
sub
jl
mov
inc
add
faddl
daa
add
xor
or
mov
into
or
add
cmpb
fcmovbe
leave
in
push
and
mov
cwtl
jne
pop
mov
imul
mov
call
fnstcw
mov
mov
or
mov
aaa
cmc
push
sbb
arpl
fdivrp
ss
sub
or
push
cmpsl
xorl
ljmp
mov
add
sbb
sub
movsb
mov
fadds
outsb
push
sub
or
and
idivb
test
mov
mov
jne
xor
cwtl
out
cld
xchg
ja
icebp
clc
or
pop
mov
cmp
pusha
pop
test
roll
int3
divb
test
mov
sbb
jae
in
mov
stos
mov
jne
in
jo
jo
jnp
pop
and
dec
cltd
add
cmp
sti
xor
add
adc
or
fcomip
jbe
or
jb
insl
jg
ljmp
add
pop
in
sbb
jo
xor
loop
mov
pushf
mov
push
popf
push
adc
stos
cld
inc
sub
or
mov
pushf
jns
outsb
jbe
lods
insl
mov
and
sarb
pop
sbb
sbb
xchg
add
pop
arpl
cmp
xchg
or
push
mov
loopne
mov
and
xchg
add
std
jg
mov
sbb
xlat
mov
loopne
pop
cmp
sbb
leave
mov
mov
ds
ss
daa
iret
mov
pop
out
mov
jmp
int3
mov
mov
icebp
jmp
call
xchg
and
cwtl
cwtl
dec
xor
fwait
mov
cmp
jp
and
ljmp
sub
pop
rorb
imul
and
ljmp
cvtps2pd
xlat
scas
fdivl
les
xchg
loopne
jecxz
fisttpll
adc
dec
inc
scas
mov
nop
xchg
jnp
mov
jne
packssdw
es
cmpsl
lea
xchg
iret
in
test
call
jo
pop
shrl
sub
clc
cmpl
xchg
das
jl
ds
cmp
mov
add
jae
rcrl
dec
push
ffree
rcll
inc
mov
bswap
sbb
fnstsw
inc
cmpsb
das
stos
or
cmp
fdivrl
cltd
cmc
idiv
xchg
in
clc
shll
rorl
roll
mov
es
out
pop
sbb
shl
add
inc
xchg
push
sbb
arpl
in
mov
insb
sbb
icebp
int3
sub
mov
pop
aas
pop
mov
push
sub
fistl
cmp
ficoml
aaa
mov
and
scas
fcomi
shrb
cmp
sbb
sub
ret
pop
push
std
dec
pusha
test
xlat
mov
push
mov
faddl
jb
shlb
imul
fucomp
push
dec
or
inc
shlb
xor
xchg
dec
lds
outsl
mov
jl
pop
push
stos
xor
popa
loope
push
pmulhw
popa
fisttpl
cmp
xor
sti
adc
xor
push
add
fwait
imul
testl
mov
jecxz
inc
mov
fidivrl
sbb
call
arpl
and
int3
mov
xchg
imul
push
xlat
mov
dec
or
ja
jp
gs
mov
xorb
or
ja
sbb
jne
int
inc
pop
cmp
cmpsb
xchg
test
mov
and
mov
push
call
adc
aad
pop
inc
pop
roll
adc
stos
mov
push
scas
xchg
jl
mov
in
mov
cmp
mov
xchg
xchg
xorb
xchg
mov
ret
in
scas
pop
sbb
scas
adc
xchg
jge
jl
icebp
xlat
lret
mov
scas
mov
add
mov
mov
inc
arpl
mov
mov
ja
and
jno
hlt
cmp
icebp
nop
adc
ljmp
sub
mov
mov
dec
jmp
pop
pop
and
and
jp
stos
prefetch
or
leave
jecxz
std
cmp
fcoms
mov
dec
jl
pop
lahf
in
dec
sub
clc
jmp
mov
std
sbb
lock
popf
mov
stc
adc
dec
lret
or
push
jecxz
fwait
push
cmp
mov
shlb
sub
je
mov
xchg
call
lds
cmc
ja
fsubl
nop
adc
dec
sahf
test
insl
mov
mov
mov
rcrb
xchg
decl
inc
sbb
pop
xchg
push
inc
scas
adc
sbb
not
loopne
bound
and
popl
mov
mov
rclb
mov
sahf
and
movsl
sahf
popa
out
mov
push
sbb
mov
out
or
stos
add
test
div
lcall
xchg
jl
imul
je
mov
push
jmp
jmp
int3
repz
sub
dec
mov
mov
xchg
stc
imul
push
mov
ljmp
cmp
fldl
arpl
xor
xchg
dec
imul
jge
loope
js
iret
dec
call
dec
add
int3
test
sbb
xchg
pop
jno
pop
test
dec
sbb
sbb
lret
dec
in
fs
cwtl
bound
iret
push
push
popf
loop
ja
jo
ljmp
inc
push
pop
gs
or
sbb
jne
push
pop
dec
xchg
mov
mov
pop
jb,pn
pop
add
in
cltd
lcall
pushf
sahf
ja
lahf
bound
sbb
pop
jae
adc
inc
ret
scas
loopne
fisubs
xlat
neg
stc
test
pop
inc
lds
add
ljmp
je
jmp
icebp
pop
adc
inc
dec
arpl
sbb
inc
mov
or
sbb
sub
jge
sub
rcll
xchg
pop
xchg
adc
jnp
call
inc
push
adc
xchg
test
std
inc
or
cmp
xchg
push
mov
push
fdivrl
push
lods
scas
add
and
mov
jge
mov
rcll
push
mov
aas
rcl
jg
sbb
cmovae
stos
mov
xor
mov
and
or
or
lock
sbb
loope
cwtl
inc
adc
sbb
test
pop
loop
add
cli
roll
push
jle
test
fwait
pop
fsubrs
push
mov
fcoms
popf
stos
mov
fisttps
or
scas
ds
push
sbb
decb
xor
push
fwait
in
arpl
push
les
sahf
fisttpll
inc
mov
push
jmp
mov
push
jae
loope
or
cmp
jne
loopne
pop
jl
cli
mov
test
add
push
aam
rorl
fisubrl
pop
cmpsl
cmpsl
mov
or
cs
inc
or
xchg
xchg
test
mov
mov
jne
add
arpl
pop
outsb
cvtps2pi
arpl
mov
add
adc
fs
test
pop
fcmovnb
dec
test
cs
or
cmp
lcall
xor
aam
jg
mov
mov
xchg
mov
mov
mov
sahf
mov
incb
mov
scas
jnp
dec
push
js
inc
jne
cmpsb
inc
ret
mov
icebp
test
xchg
test
jo
or
stos
fstl
xor
out
pushl
std
inc
add
subl
lods
pusha
pop
sbb
pop
outsb
outsl
cwtl
adc
sub
cmc
fisubrl
popa
mov
mov
out
cld
sarb
icebp
cmp
mov
leave
mov
lods
add
daa
cli
in
fwait
cmp
fldenv
mov
lock
out
jmp
bound
jae
push
cs
sub
fsubl
fcmovbe
push
into
adc
js
in
mov
xchg
xchg
iret
lahf
mov
jae
mov
adc
call
jnp
ss
scas
mov
lock
cltd
aad
jmp
aaa
add
jae
shlb
jmp
ret
loop
ljmp
ds
push
sub
add
pop
fwait
dec
fwait
scas
std
aas
adc
lds
adc
mov
mov
notb
mov
aam
int
mov
dec
or
movsl
in
xor
mov
mov
repnz
inc
pop
mov
repnz
stos
pop
pop
mov
inc
adc
mov
mov
and
dec
pop
xlat
inc
pop
insb
xor
and
mov
cltd
jmp
test
data16
lods
repz
push
out
mov
pop
push
sub
mov
push
call
and
gs
ret
dec
cs
and
ret
mov
sub
lret
dec
add
ss
lea
imul
repz
idivb
mov
xchg
mov
xor
mov
js
loop
mov
pop
daa
nop
or
pop
or
repz
adc
insb
or
in
call
adc
and
loopne
in
mov
jp
cltd
test
jnp
mov
orl
mov
pop
fists
ss
sub
inc
rolb
jge
ret
imul
aad
call
out
das
or
lock
cmp
sahf
adc
data16
mov
mov
in
es
scas
sbb
xor
ret
adc
insb
xor
xchg
fstp
ljmp
adcl
xorl
lea
sbb
test
mov
cmc
mov
xor
inc
out
push
dec
push
push
clc
pop
jle
in
testl
push
dec
cmc
or
sub
int3
scas
mov
call
xchg
inc
mov
add
dec
sbb
dec
jp
mov
ret
lret
ds
clc
pop
mov
jl
and
fcomp
idivl
pop
fwait
pop
call
loope
aam
cli
xchg
popa
leave
pop
adc
repz
push
test
sbb
and
sub
movsl
lock
xchg
mov
gs
addl
subl
lods
orb
sarb
xchg
test
arpl
pop
xchg
sub
lea
in
cmc
mov
mulb
test
test
iret
sub
cld
lret
scas
mov
adc
pop
imul
jp
pop
sub
cli
pop
je
mov
mov
popa
push
adc
mov
lods
cmpsl
dec
daa
pop
arpl
sbbb
lods
insl
push
push
dec
out
push
push
ret
ret
or
pop
loopne
decb
inc
adc
call
add
push
cmpsb
fdivs
cmc
rorb
fiadds
pusha
ficompl
or
ret
movb
xor
inc
mov
cwtl
int3
mov
mov
mov
pop
pop
imull
xlat
lahf
es
adc
in
sbb
mov
and
test
inc
ret
xchg
pop
add
ret
push
pop
in
push
push
dec
out
icebp
pusha
mov
mov
icebp
push
pop
loop
ret
repz
mov
adc
add
je
test
fcomps
fcoml
popf
lea
shrl
inc
add
arpl
call
push
sbb
add
dec
xchg
je
test
out
cs
insl
ret
mov
push
xor
scas
sbb
and
dec
and
mov
pop
add
pop
outsb
clc
mov
fidivs
aad
andl
shrb
dec
orb
aas
inc
xchg
lea
jns
or
add
pop
lds
mov
inc
inc
mov
inc
or
jecxz
xor
arpl
mov
insl
add
lret
mov
add
pop
cwtl
movsb
lods
xchg
jbe
mov
sbb
mov
popf
test
dec
or
xchg
in
push
negl
in
add
xlat
mov
xor
rcl
out
xchg
das
sbbl
or
xchg
popa
lods
adc
popf
aad
adc
xchg
cwtl
dec
cmp
adc
jecxz
and
popl
hlt
push
sti
and
xchg
out
sbb
cmp
loopne
outsl
adc
sub
mov
stos
jmp
ds
mov
mov
std
pop
js
rol
in
aaa
call
push
sbb
jge
cmp
pop
or
fdivrs
arpl
jne
addr16
cmp
jo
sub
fsub
rorb
daa
mov
insl
mov
jns
nop
pop
dec
sub
mov
push
sub
nop
dec
arpl
push
fnsave
fistpl
dec
inc
shrl
mov
iret
dec
pop
mov
addr16
scas
out
addb
in
cli
inc
out
je
jno
jecxz
into
sti
sbb
iret
mov
jp
cmp
loop
push
inc
or
and
push
sti
mov
subb
imul
jne
push
call
push
fs
incl
sub
int3
ja
es
xchg
mov
fldl
mov
scas
inc
xchg
and
and
addr16
xor
lcall
mov
lret
push
xchg
pop
subl
mov
mov
hlt
cld
mov
adc
je
das
mov
jo
xchg
lea
pop
jl
or
push
push
cli
loope
xchg
jmp
jns
icebp
push
dec
jne
pusha
cmp
rclb
cmp
pop
into
arpl
fisttps
cmp
orl
inc
xlat
mov
xchg
mov
push
adc
adc
cmpsb
divl
mov
clc
rcr
scas
xor
in
pop
push
lcall
inc
cmp
xor
push
addr16
out
shrl
xchg
xor
jbe
push
test
and
loope
add
xchg
cs
or
xchg
in
mov
mov
test
cwtl
mov
xchg
jne
xchg
add
jl
lret
or
outsl
mov
push
and
cmp
insb
je
mov
sub
icebp
mov
push
clc
daa
mov
jecxz
test
add
fstpt
icebp
sub
shrb
lods
cmp
out
test
call
lea
jl
ds
pop
or
repnz
addb
sbb
mov
jp
sbb
jne
sub
jmp
les
fs
dec
or
insl
int
mov
jecxz
push
stos
clc
bound
push
mov
push
mov
and
loopne
push
jnp
xor
dec
cmp
dec
sarl
xlat
scas
push
xor
mov
not
mov
mov
clc
lcall
xlat
lahf
and
mov
inc
andl
enter
xor
adc
or
daa
roll
sbbl
dec
mov
lods
cmp
push
jb
add
xchg
stos
dec
pop
sub
mov
lock
jp
mov
cs
les
xlat
jmp
jbe
unpcklps
cmp
das
cld
pusha
pop
jo
push
mov
xor
or
dec
add
lds
xor
adc
sbb
xchg
cmp
andl
add
mov
jb
push
dec
mov
cmp
out
popf
dec
cmp
mov
cmp
inc
xchg
mov
pop
cli
movsb
loopne
push
popf
imul
push
fs
mov
mov
xlat
ret
loope
cmp
push
push
jne
out
sbb
inc
xchg
out
std
pop
fiadds
jecxz
insl
push
adc
jno
icebp
roll
inc
push
mov
repz
cmpsb
js
rcr
out
inc
hlt
aaa
mov
pop
or
fadd
out
ljmp
pop
push
je
cld
int3
dec
pop
lcall
cmc
xchg
and
mov
dec
dec
das
sti
dec
jecxz
sub
pop
sbb
in
mov
mov
rcl
in
cld
out
movsl
out
in
jmp
lods
cli
movsb
call
adc
lea
test
mov
mov
mov
xlat
push
add
clc
jns
lcall
ret
jg
ljmp
mov
pop
sbb
sub
icebp
out
sbb
cmp
call
int
mov
into
mov
jmp
or
ds
aas
pop
jmp
outsb
js
xor
push
mov
test
push
sbb
push
ds
cmp
mov
scas
jge
subl
and
sub
js
pop
into
je
mov
jnp
lock
xor
push
mov
iret
mov
sub
lret
jo
sbb
fldenv
mov
out
or
mov
xchg
pop
mov
out
inc
xchg
sub
pop
pop
jbe
in
jbe
aad
imul
jp
outsb
inc
arpl
sbb
std
rorb
ljmp
add
pushf
les
mov
stc
mov
xchg
jecxz
jl
dec
loopne
lcall
inc
fistl
cmp
hlt
pop
pop
xor
out
rcr
add
mov
xchg
icebp
add
fwait
test
push
add
jge
cmc
lods
xor
pop
popa
scas
inc
and
notb
jae
jns
mov
sbb
bound
mov
aad
xlat
pop
lods
push
mov
jb
rorl
outsl
cmc
mov
sub
add
and
add
bound
add
sub
dec
fistl
push
inc
push
popf
in
ja
mov
mov
mov
sub
push
insl
out
push
fs
sub
enter
jg
cmp
pop
lahf
mov
fdivrl
jne
push
incl
mov
xchg
js,pt
ja
sub
loopne
and
xchg
loopne
movsb
mov
sub
cld
ret
movsl
mov
repnz
lret
arpl
add
xor
cli
rcrl
adc
xor
sub
or
mov
sti
pop
ds
mov
jno
mov
not
inc
xor
shl
imul
adc
push
neg
hlt
jl
dec
clc
push
mov
fcoms
enter
dec
jnp
lock
aam
xchg
mov
daa
cmp
mov
dec
bndldx
xor
roll
xor
mov
icebp
and
inc
add
mov
outsb
adc
mov
or
pop
call
inc
cmp
scas
push
ljmp
fsubs
push
shlb
inc
ret
and
add
mov
lret
pop
dec
adcl
xchg
rolb
jl
sub
sti
jne
shrl
popa
xlat
mov
adc
rcrb
cmp
dec
adc
inc
mov
jge
mov
scas
or
pop
shl
call
std
pop
lea
rcrb
jecxz
out
jbe
cld
push
mov
sub
les
pop
loope
ja
out
lahf
fsubs
neg
dec
ljmp
ds
xor
cli
lock
xor
movsl
lret
or
jge
push
dec
cmp
popa
xor
in
mov
bound
gs
sbb
movb
pop
test
push
and
and
fstpt
addl
and
or
outsb
pop
scas
mov
adc
outsb
push
sbb
call
jns
repnz
arpl
cwtl
lods
cmp
jp
cmp
add
pop
ss
in
pop
add
andl
mov
mov
ret
push
push
testl
pop
mov
mov
shll
sti
sti
pop
sahf
fld
mov
rol
ljmp
dec
faddl
xchg
fucomip
xchg
test
sub
outsb
bound
pavgb
js
xor
and
mov
fistps
ds
mov
add
imul
push
add
rclb
rorb
das
aad
popa
adc
repz
cltd
mov
lods
pop
shlb
add
jle
inc
pop
das
push
xlat
adc
sub
cmp
into
mov
adc
bound
lea
mov
and
test
out
lret
int
pop
pcmpeqw
pushf
adc
incl
enter
sti
into
or
pop
xor
clc
hlt
xchg
ret
push
sahf
dec
mov
out
and
jae
lret
enter
out
outsb
cld
sub
enter
ljmp
push
cmc
ljmp
xor
jb
mov
pop
loope
fsub
cmpsb
lea
outsl
mov
push
loopne
mov
testb
push
imul
popl
mov
arpl
aaa
lea
and
jb
jbe
pop
push
jmp
std
pop
in
push
nop
push
ret
mov
insl
cmp
and
nop
lods
arpl
cwtl
cmp
inc
pop
in
test
inc
test
jo
sti
call
jmp
xor
push
xor
mov
fistl
lahf
inc
int3
js
mov
clc
enter
out
xor
lret
jbe
push
stc
call
pop
adcb
dec
and
inc
adc
add
lods
mov
out
jns
inc
call
mov
lret
jae
pop
lds
sbb
ret
sahf
cmp
das
xchg
mov
lcall
inc
mov
mov
add
push
fdivrs
mov
cltd
mov
pop
push
mov
pushf
stos
int
div
rclb
leave
pop
pop
jnp
push
into
mov
jecxz
pop
jge
cmp
insl
data16
adc
in
imul
cmpsl
nopl
insl
pop
mov
jp
pop
jnp
lahf
xchg
adc
scas
lcall
into
mov
jl
mov
fs
mov
add
mov
sahf
pop
lcall
pop
insl
jmp
call
lods
mov
mov
out
test
mov
out
or
das
sahf
ds
ficoms
dec
ror
cmp
lcall
stos
movsl
inc
mov
inc
ds
mov
daa
stos
pop
shrl
inc
int3
dec
addb
cltd
je
cmp
or
jb
movsb
lock
mov
push
pop
adc
sahf
int
sub
pop
rcr
xchg
xchg
shrl
call
push
cmp
in
sub
xchg
mov
shr
jno
movsb
cld
sub
jl
jmp
cmpsl
mov
lods
negb
cmpsl
and
lds
push
mov
in
or
push
xchg
mov
xor
mov
data16
lret
das
rcrb
or
adc
ret
arpl
aaa
xchg
mov
sub
sub
cmp
lret
loopne
mov
insb
aaa
push
loopne
push
add
xchg
mov
mov
ficoml
mov
sbb
sahf
mov
mov
mov
mov
pop
pop
int
jne
adc
sbb
cltd
xchg
and
and
and
jp
xor
fucom
stos
or
mov
or
shll
icebp
mov
mov
jg
lahf
jns
test
pop
ret
in
xchg
mov
xchg
rorl
adc
mov
adc
test
mov
stos
mov
sbb
xor
lds
fdivl
lahf
shl
and
fistpll
out
hlt
hlt
pop
out
jg
outsl
mov
push
mov
and
rorb
or
add
mov
cmpsb
lret
aas
fmull
inc
mov
adc
popa
xor
mov
test
push
imul
lcall
pusha
sbb
idiv
or
nop
loop
jge
adc
dec
ret
hlt
sub
jo
inc
cmp
test
push
push
ret
rcrb
pop
cmpsb
sbb
cmp
imul
ret
mov
les
jne
jne
push
ret
sbb
fmulp
mov
cmp
push
in
orb
mov
pop
sub
icebp
mov
clc
xchg
sbb
lds
clc
shrl
lods
ja
mov
add
lcall
jl
sub
mov
lock
and
mov
or
bts
fnstsw
arpl
shrb
cwtl
or
mov
stc
xor
mov
xor
and
ror
sti
cli
jle
popa
mov
xchg
sub
leave
sub
fs
jge
lahf
dec
adc
adc
and
xor
outsl
es
scas
imul
scas
aam
push
jmp
movsb
ljmp
clc
outsb
aas
sbb
pop
cli
push
inc
pop
insl
in
daa
or
and
les
mov
push
stos
sub
fcmovb
sbb
push
inc
loop
aam
and
push
fimull
outsl
inc
jne
xor
push
add
lcall
mov
mov
dec
call
pop
jle
loopne
adc
adc
es
mov
jae
sahf
pop
fimull
xor
jne
adc
inc
jp
jo
sub
scas
es
jmp
mov
lods
out
xorl
jp
loop
push
xchg
insl
idivl
icebp
mov
jb
pushf
adc
jmp
jge
add
daa
jp
cwtl
in
popa
adc
inc
mov
xor
les
mov
push
cmpsl
mulb
rorl
pop
or
or
jbe
mov
mov
sub
jmp
mov
cmc
mov
pop
cmp
js
int3
aas
sahf
adc
movb
fstpt
insl
mov
sbb
push
pop
xchg
add
hlt
pop
fucom
cwtl
pusha
and
dec
dec
inc
ss
and
mov
cmpsl
xchg
pop
push
adc
dec
aad
fdivs
pop
or
loope
add
in
mov
xlat
scas
sub
les
cmpsb
xchg
dec
jge
pop
push
fdivs
imul
cmp
pop
sub
insb
and
fidivl
inc
mov
lcall
fistps
or
pop
mov
stc
pop
sbb
popa
xchg
comiss
sub
out
fidivrl
xor
ljmp
mov
lods
sarb
sub
cmpb
inc
sub
insb
pop
outsb
stos
and
and
leave
ret
testl
cli
mov
mov
push
xchg
call
mov
lock
and
dec
outsl
ljmp
inc
aas
ret
xor
clc
test
push
pushf
scas
sub
pop
push
faddl
cmp
pop
inc
out
fisttpl
mov
or
push
pop
jl
insl
dec
mov
je
mov
filds
stc
loope
add
or
xor
cli
rolb
xchg
xchg
aas
mov
outsb
pushf
dec
cltd
add
mov
lock
sbb
jae
imul
cli
jno
loopne
jp
sahf
inc
ljmp
fcmove
inc
mov
cs
sti
cltd
fnstsw
xor
inc
mov
mov
push
mov
sbb
orb
nop
pusha
cltd
pop
mov
cmp
xchg
mov
sub
xchg
xor
jp,pn
xor
adc
imul
movsb
adc
and
ja
lret
adc
mov
out
push
mov
inc
movsb
cli
fcmove
lds
push
sti
xlat
shll
xor
pop
outsl
hlt
lds
inc
adc
jne
aad
xchg
jecxz
shlb
sarb
cli
js
pushf
in
gs
jbe
pop
aad
mov
int
xlat
push
arpl
add
pop
daa
xchg
in
sbb
mov
xor
icebp
mov
in
or
sbb
std
fmul
push
call
imul
jne
fcompl
mov
fnstsw
xchg
cmp
dec
movsb
inc
mov
pop
repnz
jae
adc
inc
push
or
push
push
or
push
lea
jae
fnsave
stc
dec
sub
lret
in
pop
mov
and
lods
fs
lock
sbb
call
push
jae
mov
dec
pop
js
or
in
imul
clc
push
scas
fwait
rcl
mov
sbb
lods
inc
and
jge
mov
loope
out
lahf
ret
lahf
pop
rolb
sbb
aas
sub
cmp
addl
inc
in
rcr
in
jle
or
dec
sbbl
popf
add
in
in
ds
add
xor
sbb
inc
adc
lcall
add
or
inc
roll
pop
pop
cli
stos
test
add
lret
lahf
pop
fisubrs
xchg
cld
shll
lea
jle
mov
inc
add
mov
xchg
int3
pop
inc
pop
pop
xchg
and
loopne
xchg
dec
xchg
int3
cli
pop
cmp
shll
lods
ss
dec
pop
or
mov
xor
dec
cmp
fbstp
jle
std
leave
mov
xor
cmpsb
inc
or
push
movsb
adc
mov
xlat
loopne
loope
pop
scas
adc
mov
and
cmpb
dec
push
jmp
pop
or
pop
mov
imul
mov
notl
jno
das
cmpsl
enter
add
add
jbe
popa
pop
lock
and
xchg
cmp
mov
adc
or
stc
cmp
shrb
dec
shl
mov
pop
jae
cmp
bound
aad
cmp
push
or
push
inc
ss
jg
jnp
mov
es
cld
push
mov
cmp
add
mov
mov
mov
jl
push
pop
jl
cmp
loopne
jo
add
rorl
jle
aaa
shrl
iret
jbe
sbb
push
fistl
xchg
outsl
clc
out
ja
adc
sbb
mov
sti
adc
aaa
mov
insb
arpl
pop
jnp
push
fdivrp
cmpl
int
mov
cmpsb
xchg
push
jg
dec
mov
push
insl
jmp
xchg
fildl
pop
sub
pop
jge
sub
imul
mov
pop
push
xchg
inc
inc
add
in
imul
dec
jle
insb
packssdw
mov
fistpll
sbb
jnp
aam
rorb
dec
insb
lret
fdivrs
adc
and
idiv
inc
push
stos
xchg
pop
out
lcall
xor
pop
outsb
xchg
inc
push
adc
imul
cmp
xchg
sbb
sbb
gs
mov
bound
mov
outsb
out
jp
imul
daa
outsb
and
ret
or
fdivl
sbb
jle
dec
mov
lods
cmp
adc
add
jl
xor
mov
aam
mov
lahf
loopne
out
dec
ds
xor
dec
push
rclb
es
rolb
xchg
icebp
repz
clc
gs
gs
js
ret
mov
inc
lock
lcall
mov
add
fsubrl
lcall
stos
jp
enter
stos
lods
jo
xchg
or
cs
or
call
fsts
leave
mov
adcl
inc
fidivrs
js
pop
pop
mov
imul
and
mov
push
mov
pop
aad
rolb
cs
data16
mov
inc
lahf
mov
lret
jne
sbb
push
mov
xorl
cmp
sub
push
pop
out
jl
subl
cld
lret
pusha
clc
mov
mov
pop
inc
jle
push
popf
cmp
and
insl
cmp
jno
cmp
add
jmp
inc
mov
repz
loopne
mov
adc
mov
call
aaa
imul
pop
add
mov
ffree
push
dec
clc
cmpb
jecxz
daa
add
stos
sub
xchg
xor
cmp
jg
add
cld
jge
loop
jo
data16
mov
pop
sbb
adc
lahf
and
notl
or
lods
adc
in
mov
movl
sbb
jb
add
insl
aaa
dec
ret
push
aad
adc
cmp
stos
inc
div
imulb
dec
outsl
sbb
test
push
push
stos
mov
test
lcall
pop
cs
ds
push
movb
imul
jmp
icebp
pop
adc
icebp
xchg
mov
or
out
or
mov
xor
leave
stc
test
sti
jp
push
xchg
add
or
cmp
cs
jnp
mov
aam
pop
ret
inc
fisttpl
enter
notl
popa
in
mov
add
adc
rol
push
push
add
inc
mov
pusha
fstpt
aam
into
fsubrp
pop
les
rcrl
fsub
xchg
and
lret
scas
mov
push
mov
cli
mov
xchg
jecxz
loope
inc
mov
jl
popf
pop
xor
jb
or
mov
lds
fidivrs
in
or
test
clc
push
js
dec
lret
and
jp
mov
push
cmp
xchg
cmp
cs
fcom
push
xor
jmp
lea
jge
in
push
pop
sub
adc
dec
int
push
mov
outsb
das
pushf
insl
aam
insl
jg
shl
inc
aad
paddw
dec
nop
xchg
mov
and
dec
sarb
ret
mov
faddl
andb
mov
loopne
iret
cmp
call
jo
loope
cmp
sbb
std
rcrl
cmpsb
inc
cmovns
cmp
jmp
mov
mov
mov
cmc
push
pop
mov
mov
sti
inc
pop
adc
mov
mov
pop
fisttpl
jne
test
popa
mov
out
lods
jo
jno
xchg
popf
fistl
cmc
push
mov
pop
mov
adc
orb
rclb
mov
dec
sarl
adc
fildl
es
xchg
sarb
jne
std
into
gs
rol
lahf
add
mov
mov
mov
pop
add
nop
cmp
sarb
xchg
ja
xchg
out
add
outsb
adc
shrl
sbb
jge
insb
cmp
iret
jl
jmp
pop
arpl
add
clc
test
in
dec
mov
mov
sub
pop
loope
fstpl
add
out
inc
insl
mov
fwait
dec
lods
sub
xor
fisttpl
clc
inc
flds
pop
pop
loopne
mov
pop
jnp
es
insb
std
call
call
pusha
out
dec
push
push
add
sarl
dec
bound
cmpsl
aaa
push
and
and
sbb
shr
clc
js
cs
stos
in
push
jne
sysexit
das
and
adc
xchg
or
pop
js
xchg
rorb
sti
decl
inc
push
mov
push
mov
ja
scas
stos
or
das
xrelease
xchg
add
imul
subl
or
aas
je
cli
sub
hlt
icebp
mov
jle
dec
mov
push
rclb
jge
subl
cwtl
jle
mov
mov
pop
fwait
sbb
mov
std
jo
cmp
punpcklwd
xlat
cmc
jecxz
imul
sbb
clc
test
loope
test
mov
es
loopne
and
cmp
xchg
test
and
mov
pop
sahf
push
jmp
ja
push
cmp
jmp
and
xor
push
into
lods
jl
pop
ljmp
jae
sbb
xorb
cltd
addb
movlhps
push
sub
inc
std
push
aad
pop
jge
imul
shl
pushf
sub
sub
sub
add
sbb
or
or
jge
loop,pn
jge
pushf
jno
inc
add
mov
cmc
mov
scas
sbb
je
popf
pop
out
idivb
scas
cld
xor
mov
pusha
lcall
push
inc
mov
sbb
psubd
insb
loope
and
sahf
fdivrs
mov
fsubs
scas
push
adc
movsl
jl
add
in
xchg
mulb
mov
push
xchg
pop
sahf
inc
insb
pop
bswap
xchg
adc
cld
loopne
cmpsb
pop
ret
push
jno
addr16
jecxz
sub
cmp
negl
imul
jg
jae
mov
scas
jnp
ret
scas
xchg
and
scas
or
sbb
pop
lahf
sbb
hlt
and
lds
inc
and
out
add
ret
inc
aaa
rcrb
sub
dec
test
fndisi(8087
in
stos
xchg
adc
sbbl
push
and
jne
jg
jae
and
imul
pushf
loopne
push
pop
fisubl
sbb
sbb
fdiv
xchg
jle
add
xor
dec
add
icebp
push
out
jmp
popa
lcall
mov
sub
cmp
cmp
mov
les
and
fisttpll
push
test
inc
icebp
xchg
into
hlt
cmp
pushl
data16
addr16
or
mov
std
xchg
mov
ror
loop
fistpl
xchg
sbb
shl
mov
daa
fs
cmpb
arpl
inc
jge
mov
pop
mov
outsb
ljmp
mov
cmp
and
in
inc
inc
xchg
lcall
aaa
pop
insl
jl
push
fcomps
shlb
mov
nop
mov
out
xchg
imul
pusha
pop
xor
fistl
pop
in
jecxz
or
mov
lods
rorl
addr16
sub
dec
xchg
jecxz
movl
and
jnp
xor
xlat
push
hlt
sub
xor
add
mov
movb
xor
inc
loope
aad
in
mov
imul
push
pop
insl
or
and
js
leave
jge
out
aad
mov
xchg
or
iret
fisubrl
js
pusha
ja
or
in
outsl
add
pop
fimull
push
push
mov
aad
dec
loope
lods
sub
mov
nop
cld
loop
inc
sbb
insb
mov
adc
test
push
or
sbb
sbb
sti
adc
dec
sbb
push
cwtl
sub
stc
push
inc
xor
add
sub
xchg
rorb
jle
jbe
lcall
dec
mov
xchg
imul
jne
out
lret
mov
add
js
cld
add
enter
into
cmp
mov
pop
or
inc
mov
xlat
xor
rcrb
leave
pop
jae
cmp
mov
push
rorb
mov
jg
insb
push
or
mov
xchg
pop
cmp
je
cs
negl
call
adc
or
jg
or
stos
cld
fidivs
mov
testl
push
lods
xor
sbb
cs
dec
movsb
add
or
ret
pop
scas
and
ffree
int
or
mov
aad
pop
or
ret
call
stos
fldl
and
xlat
in
das
add
fstpl
clc
mov
shl
push
mov
pmaxsw
rorb
sbb
inc
fbld
cmove
mov
jbe
stos
mov
xchg
mov
repnz
pop
call
arpl
lcall
test
mov
sub
sbb
aas
negl
cs
xor
in
loopne
or
popa
mov
cmp
mov
jbe
idivl
jbe
mov
nop
icebp
sti
popa
icebp
or
lahf
xchg
outsl
shl
insb
pop
pop
xchg
mov
sub
mov
cli
je
insw
in
fisubs
inc
mov
clc
lea
and
testb
loope
push
pop
pop
adc
push
xor
arpl
lods
pop
popw
dec
lock
pop
and
xor
sbb
pop
fbstp
cmp
xchg
push
pop
inc
rdpmc
sti
nop
div
pop
pop
fiadds
add
push
xor
pop
xor
inc
adc
mov
cmpsl
lret
jp
push
loope
popa
fimuls
cli
ret
hlt
and
ret
stc
movsl
xor
xor
test
outsl
arpl
xlat
jae
dec
insl
loopne
jbe
dec
adc
xor
pop
dec
pop
sub
test
sub
loop
lret
ljmp
xchg
lret
sbb
xchg
aas
scas
divl
jmp
fdivrs
popf
ja
call
jbe
fcomps
cs
ret
xchg
rep
cmp
inc
fdivr
sarb
dec
aaa
cmpsb
adc
mov
outsl
dec
scas
jo
pop
stc
or
jb
aad
pusha
jge
mov
clc
jge
lods
or
in
test
std
add
test
sbb
ficoml
or
or
stc
les
clc
jno
push
mov
hlt
add
test
cli
jle
pushf
pop
ds
leave
jne
xchg
jns
bound
ds
push
push
subb
xor
dec
test
lods
mov
jl
out
scas
outsb
mov
cmp
mov
mov
test
iret
inc
shrl
test
cmp
adc
pop
fidivl
jnp
jne
insl
push
add
jl
inc
je
xor
xor
pusha
mov
pop
bound
or
mov
pop
lret
or
xchg
lcall
sbb
jb
xlat
imulb
out
mov
out
mov
mov
sbb
add
add
mov
shlb
dec
adc
push
push
cld
outsl
mov
scas
xorl
xchg
pop
fistps
mov
adc
adc
shl
repz
ret
int
rol
ret
pop
inc
test
andl
aaa
or
lcall
mov
fnstenv
dec
pushf
jo
nop
push
idivl
mov
cmp
shrb
cld
or
mov
push
sbbb
int
rcll
xchg
loopne
pop
push
sub
pop
push
sarl
call
or
inc
dec
sub
jmp
aas
out
mov
mov
ja
ret
xchg
incb
out
subl
xchg
fstpt
mov
mov
cmc
jge
fistps
cmp
je
lock
mov
shlb
cmp
pop
dec
or
fdivr
sbb
clc
and
lds
inc
push
mov
jecxz
fdiv
cld
sub
mov
xor
ja
testl
and
lcall
push
out
outsl
fs
cmpsl
and
sub
jl
jne
daa
js
fbld
mov
lea
push
cmpsl
aaa
inc
out
sub
mov
out
or
movsb
popf
xor
adc
adc
adc
mov
in
sbb
xor
jns
outsb
rorb
mov
mov
fwait
loop
mov
or
mov
icebp
push
nop
das
shlb
xchg
pop
daa
adc
cmp
add
pop
jp
aam
xor
es
push
out
dec
inc
inc
push
adc
data16
xchg
jecxz
jl
sbbl
push
mov
push
call
jp
mov
cld
sub
fsubrs
push
add
push
pushf
add
lods
mov
or
ss
push
out
mov
test
bound
push
jp
into
notb
cmpsb
mov
xor
add
in
rol
std
pop
int3
xor
shlb
test
xor
or
sbb
cmp
sub
sbb
inc
inc
call
mov
sub
pushf
in
cmpsb
dec
sbb
sbb
push
add
pop
pmulhuw
cmc
pop
popa
sbb
ss
lds
popf
rorb
cld
or
sbb
out
push
add
sub
fstpl
pop
jmp
jge
pop
fmuls
into
cs
shr
xchg
jmp
aad
mov
adc
and
enter
int
xor
dec
mov
in
call
loop
lahf
fcoms
push
jnp
in
sarb
rolb
jmp
inc
lahf
bound
cmp
lock
pop
mov
mov
out
push
push
loopne
movsl
sbb
call
in
notl
mov
push
pop
sub
add
mov
add
sub
and
sbb
stos
mov
jle
lods
adcb
xor
xchg
sti
jp
cmc
test
adc
pop
int3
movl
dec
ja
mov
push
icebp
cwtl
cmp
jmp
mov
out
mov
iret
pop
scas
push
xor
vhaddpd
pop
cs
mov
hlt
mov
into
cmp
ds
push
stc
and
and
ret
xchg
adc
push
inc
or
or
loopne
popl
sub
shr
cmc
insl
xchg
add
je
insl
fcoms
and
test
rcl
mov
cltd
mov
lock
dec
lret
fwait
cmp
lret
ret
or
ss
js
nop
fcoms
mov
jg
addr16
xor
xlat
cmp
in
pop
mov
mov
mov
aad
addr16
daa
outsb
xlat
scas
push
mull
push
mov
inc
and
xor
jmp
popf
xchg
daa
mov
or
in
imul
scas
imul
or
jnp
sbb
sub
out
mov
mov
lret
and
nop
sbb
dec
jmp
aam
out
iret
sbb
je
subb
add
cltd
fwait
decb
mov
nop
int3
sbb
or
pop
incl
je
mov
xor
out
inc
push
test
idiv
push
pop
in
mov
adc
into
and
fwait
mov
icebp
xor
adc
mov
sbb
mov
and
xchg
mov
mov
or
pop
rdmsr
aas
repz
out
loopne
mov
out
xor
aam
pop
es
loop
scas
jge
arpl
mov
loopne
sub
jb
decb
aad
mov
mov
outsl
loope
pusha
iret
rcll
mov
aad
mov
dec
push
inc
iret
xor
adc
addr16
adc
jmp
adc
sub
jecxz
iret
movb
push
sarl
xor
pop
aaa
sbb
pop
pusha
xchg
jns
adc
into
aam
jle
ss
lds
mov
jecxz
push
push
js
xchg
roll
xchg
push
aas
mov
cmp
sub
inc
insl
lock
test
sarb
sub
cmp
clc
sub
push
add
mov
push
and
cmpsb
fmul
cli
outsl
xchg
and
mov
pusha
inc
mov
subl
and
lcall
pop
cmp
movsb
imul
lds
into
subb
mov
dec
out
sub
imul
add
out
dec
lahf
mov
sarl
insb
addb
sbb
ss
cmp
sbb
out
jecxz
mov
cmpl
addb
mov
cmp
mov
ljmp
insb
ja
inc
sub
rorl
shlb
jge
adc
mov
xchg
sub
outsb
adc
icebp
outsl
sahf
sbb
popa
js
pshufw
pop
push
xor
or
je
repz
push
loopne
adc
push
fidivrl
or
mov
sub
jae
std
xor
sahf
ret
xchg
aam
fwait
dec
mov
rorb
daa
movsl
lret
gs
hlt
mov
adc
loopne
jmp
scas
jbe
gs
lahf
jne
or
add
cmpl
loop
sbb
jae
sub
fildll
js
mov
jl
mov
out
stos
test
ret
adc
inc
jno
lods
pop
mov
pop
adcb
mov
mov
add
rcr
mov
push
push
aam
sub
xor
scas
push
in
jge
ljmp
pop
fnsave
inc
je
adc
lods
push
clc
push
aad
xor
mov
fldcw
jne
pop
mov
pop
clc
cld
xor
stc
lahf
push
xchg
cmc
xor
mov
mov
push
dec
daa
aas
fisubrl
mov
sub
das
call
mov
rcll
loopne
dec
inc
lock
or
jne
out
or
les
into
sub
xchg
mov
xchg
push
inc
mov
pusha
push
push
mov
cmc
mov
jmp
jb
cmp
pop
jp
sub
adc
mov
jno
and
jmp
lds
std
mov
shrl
lahf
mov
call
mov
dec
dec
cwtl
stos
adc
push
mov
lds
leave
scas
and
cmp
fwait
xchg
or
xchg
jmp
call
or
shl
mov
jbe
imul
mov
das
add
mov
cmp
movzbl
xor
or
jp
das
ljmp
sbb
adc
cmc
and
aam
adc
or
xor
in
pop
dec
adc
mov
shl
shll
sbb
cmp
push
mov
int
adc
dec
lahf
jno
mov
movsl
cmp
shrl
xchg
cli
cld
dec
cmp
cmp
cmp
pop
jp
inc
push
mov
invd
cmp
jmp
pop
mov
clc
add
std
sub
pop
pop
jp
clc
insb
subl
lock
in
jmp
and
jbe
push
inc
cmpsl
sahf
mov
cmp
shl
pop
push
scas
inc
fiadds
jg
lea
ss
mov
ljmp
sbb
aam
push
mov
push
daa
jp
mov
push
loope
mov
mov
dec
popa
repz
inc
out
popa
sub
push
mov
push
inc
test
push
xchg
lds
inc
scas
dec
test
inc
in
fidivl
push
mov
ret
pop
les
pop
cs
mov
sub
stos
jmp
fistpll
cmc
jnp
sbb
outsl
cli
iret
adc
pop
sub
xchg
fidivrl
and
fdivrs
test
sub
stos
mov
fucomi
jb
xchg
cmp
lahf
mov
imull
cmp
mov
inc
or
mov
aaa
daa
sbb
cmp
loopne
roll
fmuls
mov
push
mov
ljmp
mov
enter
out
mov
jg
and
in
add
pop
mov
sbb
lods
jbe
inc
lds
mov
pop
inc
sbb
cmp
sub
add
stos
scas
das
ss
enter
rcr
scas
adc
add
push
or
jo
insb
clc
not
insl
movsl
in
test
dec
dec
dec
cmp
enter
dec
test
inc
mov
mov
mov
stos
scas
lret
mov
mov
lods
into
ja,pt
getsec
mov
add
test
jo
pop
imul
mov
lock
jae
test
inc
insl
and
fs
cmp
repz
scas
dec
mov
fiaddl
mov
imulb
jbe
out
jle
mov
dec
mov
in
sti
push
lds
pxor
mov
inc
mov
xor
gs
push
mov
jb
mov
add
pop
mov
mov
out
push
dec
mov
pop
setnp
fcmovnb
sbb
sub
mov
dec
jno
push
shrl
pop
sbb
jnp
sbb
loopne
push
pop
fstl
or
add
clc
pop
sub
call
xchg
fsubs
loope
xchg
mov
cmc
and
addr16
jmp
pusha
mov
xchg
dec
or
arpl
sub
sbb
or
and
xor
add
test
mov
aas
in
mov
push
rcl
loopne
mov
hlt
arpl
ficomps
add
push
adc
hlt
stos
in
pop
insb
mov
pop
jno
mov
jo
xor
movsb
in
test
xlat
cmp
aaa
adc
mov
and
xor
cmc
jp
js
scas
call
into
fnsave
xor
fadds
and
imul
pusha
jns
test
cmpsl
mov
inc
xlat
add
stos
jne
loope
ficoml
push
cmc
cwtl
mov
cli
or
pushf
cs
add
pop
jnp
loopne
adc
jg
subb
js
xor
fdivrs
lods
mov
ss
out
dec
sbb
mov
xchg
mov
fildl
in
movsl
sbb
xchg
or
push
jp
dec
mov
stos
add
xor
stos
add
sub
or
sahf
sbb
call
adc
shr
and
inc
ds
pop
mov
jne
xor
aam
or
paddb
jbe
push
mov
out
fdivs
mov
mov
jae
add
pop
jne
aad
or
sub
ljmp
stos
jnp
jl
jne
sub
lcall
mov
or
repz
ret
in
loopne
fnstcw
mov
push
jno
pop
roll
fucom
das
jle
outsl
mov
rorl
inc
push
test
jl,pt
cmpb
and
addl
pop
jno
in
fstpt
jnp
es
inc
mov
push
xlat
inc
ljmp
adc
fidivrs
jo
mov
test
ds
fdivrs
or
mov
mov
cmp
adc
or
inc
mov
mov
sbb
adc
adc
aas
pop
sub
in
mov
add
ja
dec
lret
loope
mov
sub
icebp
cmp
and
or
cmp
push
stos
xchg
xchg
repz
jp
ficoml
cmp
or
sti
mov
dec
mov
mov
adc
cmpsb
inc
shll
or
lea
xor
sahf
out
repnz
test
pop
or
fwait
or
lods
sbb
pop
jbe
jno
add
ficomps
cmc
mov
movsl
pop
mov
inc
int
or
test
push
xchg
pop
mov
or
das
cmp
out
sub
ja
or
sbb
mov
pop
push
ret
sub
sub
cmovg
fldl
cltd
stc
scas
loope
pop
jb
pusha
sahf
jl
cmpsb
cmpsl
cmp
lods
pop
dec
pop
push
pop
jle
pop
mov
push
adc
ss
cmpsl
xor
outsb
mov
gs
ja
mov
rcl
insb
dec
and
dec
es
push
push
xchg
in
pop
iret
pop
mov
pop
movsb
fdivrs
xchg
mov
imulb
mov
mov
inc
pop
xchg
cmp
sbb
inc
loop
inc
mov
addb
jnp
mov
xchg
cmp
insb
cmovbe
mov
push
in
push
cli
mov
pushf
call
jbe
jl
adc
pop
fwait
in
push
xchg
mov
in
add
mov
xor
sub
js
ret
in
pop
in
mov
inc
xor
or
sub
xor
lods
lods
test
sahf
imul
inc
insl
iret
adc
dec
pop
sub
sbb
adcb
pusha
jae
or
mov
push
or
fidivl
pop
or
inc
pop
pop
sub
jne
scas
adc
cmpl
cmp
daa
iret
test
inc
mov
roll
and
mov
mov
hlt
mov
fldcw
add
jmp
test
leave
xchg
test
scas
push
mov
adc
push
je
fldcw
lods
mov
xchg
pop
xchg
cmp
sbb
adc
or
shll
pop
int3
enter
jle
pop
sbb
insl
dec
dec
mov
scas
or
sbb
imul
jnp
cmpsl
xchg
cwtl
push
inc
mov
std
cmp
call
jmp
pop
ss
nop
jmp
gs
aaa
push
mov
lock
inc
push
iret
andl
pop
addl
push
mov
lods
xchg
jb
pop
mov
jno
icebp
pop
test
decl
rep
dec
lock
loop
or
cld
pop
pusha
ljmp
ljmp
scas
maxps
fs
clc
sbb
mov
scas
mov
loopne
into
push
mov
push
aad
inc
fnstcw
mov
pop
mov
and
mov
test
adc
adc
enter
aas
adc
rcrl
ficompl
fwait
cmc
xchg
imul
cli
cmp
inc
add
jbe
mov
jl
icebp
scas
push
pop
push
dec
jg
imul
mov
or
dec
aad
xchg
jle
xorb
adc
adc
test
lcall
sbb
int
movsl
insb
shrb
insb
test
adc
sbb
iret
inc
pop
jl
or
shrl
aam
and
mov
jno
aam
aaa
jbe
inc
cmpsl
adc
shl
int3
lods
and
cli
jnp
scas
cs
mov
push
clc
leave
fmuls
sub
leave
in
push
lahf
and
bound
nop
xor
fsubs
push
scas
cmp
mov
push
int
cmp
adc
sbb
adc
mov
jo
xchg
lock
pop
gs
jmp
jbe
dec
loopne
jp
popa
rcl
scas
xor
in
xor
cmp
mov
mov
fs
mov
pusha
mov
dec
popl
je
sbb
fwait
jns
mov
cmp
adc
pop
insb
call
aaa
insl
pop
aaa
into
jp
popl
mov
inc
xor
shl
lock
jp
cmpsb
fdiv
mov
pop
loope
cmp
xor
stc
dec
imull
push
dec
rcrl
shll
divb
clc
lds
mov
stos
iret
sbb
add
mov
pusha
testl
jl
das
adc
xor
mov
push
mov
fistps
loope
andl
bound
sbb
jae
jecxz
test
aas
jb
pop
sbb
out
jne
mov
lret
fstps
mov
xor
imul
pop
cmpb
fildll
and
mov
in
mov
jne
inc
jmp
cmp
ss
adc
aad
push
mov
popa
sbb
dec
outsl
lods
dec
xchg
sti
mov
clc
adc
push
rcll
xor
lock
movl
loopne
stc
dec
jmp
adc
xlat
js
orl
out
inc
adc
test
fdivl
popa
je
add
fsubrs
xor
cmp
sub
aaa
in
mov
int
push
mov
lea
adc
pop
xorl
je
sahf
cs
outsl
fsubrl
insl
mov
push
stos
mov
fnstenv
mov
push
cwtl
les
cmp
lcall
testb
mov
cmpsl
xor
jg
pop
cmp
dec
fstl
js
inc
bound
xor
mov
dec
daa
sub
sahf
loop
je
push
out
dec
sbb
pop
je
negb
xor
sbb
je
push
jbe
and
adc
or
roll
andb
dec
in
popa
add
insb
insl
mov
fs
push
cmc
jno
jmp
fstl
cli
jbe
mov
outsb
push
subb
jl
cmova
hlt
testb
sbb
mov
std
subl
pop
test
or
popf
sbb
lret
sti
aaa
pusha
push
sbb
repz
insl
ret
aam
push
mov
js
adc
enter
mov
xchg
and
stos
ja
rcrl
push
aaa
fldt
loope
sbb
sub
dec
lahf
clc
mov
xor
pop
sub
and
popf
sbb
inc
xchg
sti
nop
jo
inc
cld
inc
sub
push
push
mov
ss
mov
inc
jns
mov
insl
xchg
gs
cs
dec
add
adc
push
aad
xchg
daa
cmp
cmp
fstl
pop
dec
minps
jg
cs
push
mov
aam
or
out
xchg
fdivs
jp
ljmp
pop
pop
cmp
jbe
pop
call
out
jp
ljmp
sub
ret
add
ds
pop
mov
jl
push
jbe,pt
lcall
arpl
shrl
sti
inc
pop
cmp
lret
test
xchg
js
orb
or
sbb
push
ljmp
loopne
inc
sub
pop
jne
push
out
add
push
jmp
fwait
js
test
adc
xchg
divl
ljmp
dec
arpl
stos
pop
ja
jg
das
movsl
mov
or
mov
addb
fimull
jp
pop
adc
mov
pop
stos
outsl
clc
mov
out
mov
push
adc
add
inc
sbb
mov
test
jne
push
mov
or
push
rclb
and
push
imul
inc
xchg
xchg
sti
sbb
push
test
push
sbb
push
sti
cmp
sahf
jo
movsl
js
xor
or
sti
fdiv
ds
add
in
push
call
xchg
sub
add
lds
fst
pop
test
fistpl
or
mov
add
lods
dec
shll
in
cmp
xchg
mov
push
fucom
dec
inc
aas
popa
cwtl
lret
jo
jbe
or
xlat
mov
push
push
fsts
aam
mulb
iret
or
lea
lahf
fcomps
jge
mov
push
aam
stos
daa
arpl
add
fnsave
jecxz
pop
push
jmp
dec
pop
int3
ret
dec
iret
push
inc
xor
adc
xlat
data16
cmp
mov
daa
inc
adc
aad
out
inc
ror
mov
lods
dec
dec
ret
test
jmp
dec
lock
sbb
inc
or
jmp
clc
mov
mov
out
cmp
aas
int3
push
sbb
jb
adc
hlt
mov
aam
es
pop
mov
mov
sbb
add
arpl
push
xchg
mov
shrl
push
dec
shr
cmp
addl
call
push
jns
jb
sahf
outsb
jp
mov
pushf
push
imul
push
xor
out
fdivs
stos
pop
mov
or
mov
mov
ficomps
cmp
pop
jle
or
inc
sbbl
mov
lea
mov
je
pop
lahf
or
sub
movsb
icebp
mov
jecxz
imul
mov
inc
jne
mov
pushf
push
cmp
cmc
adc
rclb
mov
rolb
fisttpl
lret
shr
add
add
adcb
ret
ja
mov
cmp
push
sbb
push
adc
xor
orb
sbbb
push
fsubrl
lret
testb
mov
int
neg
iret
es
dec
jns
mov
xlat
mov
ss
inc
mov
test
movsl
push
in
add
mov
loop
out
pop
pop
xor
fldcw
movsb
cmp
stc
adc
subb
and
push
sub
mov
dec
inc
call
mov
imul
adc
cmp
les
int
mov
dec
orl
add
adc
aaa
je
jb
jne
repnz
pushf
test
aas
or
push
rcl
push
aad
add
xchg
pop
or
and
and
push
fisttpl
movsb
lahf
fdivs
es
scas
loop
pop
cmp
push
jne
lcall
arpl
psubsb
mov
sub
int3
cmpsl
or
jge
mov
push
xorl
ljmp
and
add
inc
inc
jmp
mov
testb
fdiv
mov
mov
jp
push
cmp
fidivrs
and
ficomps
paddusb
adc
dec
xchg
aaa
or
add
cmpsb
outsl
scas
mov
jmp
movsl
or
test
les
icebp
aad
xchg
add
in
in
adc
icebp
imul
out
mov
data16
pop
loopne
clc
int3
lock
testl
and
data16
loopne
in
jne
cli
fwait
ret
stos
or
push
rol
scas
lret
dec
sarb
mov
insb
out
xchg
paddw
jge
imul
test
pop
adc
lcall
stos
adc
sub
jl
xchg
mov
mov
enter
inc
xlat
mov
shrb
adcb
mov
in
daa
mov
pop
mov
xchg
mov
sub
inc
test
mov
movsb
mov
popl
inc
in
xchg
leave
push
out
ret
ja
xor
mov
pusha
dec
pop
and
fstps
pop
cmp
jnp
add
pop
popa
fstpl
icebp
adcb
inc
fcmovb
inc
jl
pop
and
shlb
lcall
pop
dec
shl
fadds
sbb
push
pop
call
out
pop
add
fisubrl
pop
or
xchg
out
ss
rorl
inc
dec
dec
push
ljmp
mov
and
inc
pop
insb
jmp
jnp
inc
mov
jl
jne
fsubs
setp
clc
lret
loop
ja
adc
xchg
jne
js
ffree
lahf
scas
cmc
mov
ljmp
cmpsl
daa
jle
fnstcw
jg
mov
daa
loope
add
pop
mov
xor
mov
fs
xchg
loope
pop
add
fs
dec
mov
jge
jmp
mov
cmc
inc
mov
sti
movsl
lret
lret
in
js
push
xchg
imulb
out
ja
imul
pop
dec
sbb
mov
mov
loopne
push
inc
adc
and
fcom
jge
xor
jb
push
pop
xor
incl
jmp
sub
xchg
jecxz
mov
mov
in
cmp
filds
mov
mov
mov
cmp
incb
ja
jne
ret
fmuls
pop
inc
mov
push
shlb
jae
or
test
sub
pop
adc
sub
popf
fstpt
mov
jnp
mov
ds
divb
mov
xchg
ljmp
out
or
fs
js
nop
push
stos
cld
out
add
lds
notl
cmp
pop
mov
rcll
and
push
mov
sbb
cmc
test
icebp
mov
mov
xchg
fcompl
pop
ja
mov
fst
inc
inc
xchg
outsb
mov
mov
push
mov
cmp
repz
out
mov
xorl
mov
insb
popf
popf
gs
or
jnp
mov
mov
push
cld
mov
xchg
sbb
or
icebp
xchg
std
stc
push
imul
idiv
fisubl
pop
xor
mov
scas
outsb
shll
sub
mov
mov
insl
and
sbb
fnstenv
arpl
repnz
jge
fwait
in
popf
pushf
add
jle
pop
lret
jmp
insl
inc
pop
mov
movsl
mov
mov
jo
orb
add
dec
fiadds
lods
pop
sti
cmpl
rcrl
xor
sub
add
jb
loopne
loopne
add
cmp
ret
insb
push
ljmp
jb
lret
mov
push
test
sub
pop
xchg
jg
mul
sub
mov
mov
jle
sub
add
sbbb
dec
movsb
fdiv
int
pop
clc
xor
scas
or
movsl
popa
sbb
ret
xchg
cmp
xchg
jl
mov
push
sbb
mov
mov
xlat
cmp
cmp
push
test
scas
cli
ss
pushf
test
test
out
pusha
lock
sub
rclb
out
cld
sbb
mov
lret
std
mov
cmpsb
mov
adc
out
iret
jo
repz
cmp
jecxz
xor
imul
ret
adc
push
pop
sub
lcall
sti
in
and
arpl
inc
sub
lods
scas
mov
sti
dec
xchg
xorl
xchg
imul
inc
jmp
push
pop
sub
jge
pop
and
mov
inc
outsb
addl
lds
cltd
leave
ret
in
jecxz
mov
add
and
push
rcl
outsb
hlt
orb
jb
popa
mov
rorl
push
jl
or
into
stos
ljmp
in
mov
jns
sbb
jp
test
pop
cli
lock
pop
pop
push
sti
clc
push
mov
fistpl
adc
xchg
pop
repz
loop
sahf
daa
and
pop
stos
in
add
mov
cmpsl
push
ret
clc
cld
aad
jns
fimull
out
sbb
mov
mov
push
push
cmp
jecxz
pop
test
xchg
jecxz
sbb
pop
pop
mov
or
ja
cmp
xchg
mov
loopne
out
test
lea
push
std
pop
push
xlat
movsb
js
cmp
adc
or
idivb
pop
xor
inc
xlat
adc
aas
cli
sub
cmpsb
out
sbb
jnp
ret
sbbb
lretw
pop
add
orb
js,pt
rol
mov
xor
dec
add
pop
push
dec
test
add
sbb
ja
cmpsl
scas
roll
test
ss
xlat
inc
aam
mov
in
leave
mov
in
sub
les
cld
jno
int
jl
outsb
cmp
iret
inc
pop
and
int
push
mov
in
sub
add
xchg
sub
aad
jns
jbe
dec
sbb
or
cmp
pusha
fcomps
inc
mov
sbb
sbbb
xchg
jno
inc
mov
cmp
lds
daa
sub
jno
int3
insl
cli
lahf
lret
cmp
scas
arpl
jnp
pop
mov
push
mov
push
out
jbe
popf
jmp
into
jns
rol
aam
dec
cmc
out
or
mov
jno
fnstenv
push
mov
lods
mov
arpl
jecxz
inc
mov
xchg
lods
shl
sti
out
fiadds
push
or
bound
and
outsl
insl
mov
cmc
fldenv
insl
jb
xor
shr
das
xor
sti
mov
sub
repz
mov
sarb
xchg
mov
xchg
mov
push
fsubl
xchg
mov
out
inc
in
stos
cs
testl
add
push
inc
ja
or
cmp
sbb
test
jle
pop
push
fcompl
test
xchg
mov
inc
fisttps
ja
xor
jnp
sti
adc
test
sbb
mov
jmp
loopne
in
or
in
daa
push
sbb
mov
mov
cmpsb
cmpsb
insb
sub
into
jo
and
shll
sbb
cmpsl
inc
sub
lods
ret
mov
jp
movsl
pop
in
testl
dec
cmpsb
outsl
js
inc
xchg
outsb
clc
loopne
pop
push
gs
dec
or
aam
loope
fisubs
mov
mov
xor
fidivs
mov
sub
lock
sbb
mov
imul
int3
lds
pop
clc
rol
push
sbb
or
sbb
setbe
push
mov
or
add
mov
cmp
xlat
mov
jecxz
mov
popa
loope
fwait
mov
dec
int
mov
call
in
push
imul
mov
notb
test
mov
adc
pushf
sbb
sub
aad
loope
mov
cli
adc
jle
mov
inc
dec
cmc
lcall
adc
divl
setns
je
arpl
pushf
icebp
dec
mov
jno
jns
dec
cli
inc
rol
sti
cld
in
test
lret
xchg
stos
sub
loop
mov
insb
ja
insb
outsb
gs
adc
jmp
mov
ret
push
or
call
in
jl
js
clc
xor
clc
mov
repz
test
cmp
loope
pop
test
pop
mov
popa
sarl
mov
icebp
cmp
mov
arpl
test
mov
or
imul
mov
inc
in
push
lea
aas
push
cmpsl
xor
data16
or
push
cmp
adc
pop
ja
push
icebp
pop
repz
cmpsb
cmp
in
sub
lods
in
mov
fs
inc
ret
jmp
push
xor
mov
inc
and
cmp
xchg
fmull
add
outsb
mov
xchg
sbb
subl
rcll
lock
add
insl
pushf
das
jge,pt
loopne
xchg
push
inc
or
icebp
cltd
sub
or
sbb
and
lea
pop
cmp
ss
in
push
mov
int
ficoms
xlat
mov
idivb
lahf
push
fnstsw
or
cmpsb
xor
mov
jl
jmp
cmp
push
or
pop
loopne
cmc
mov
or
ret
scas
mov
inc
and
mov
mov
leave
pop
lcall
xchg
adc
loope
mov
gs
test
sbb
dec
cmp
sbb
pop
push
shll
inc
data16
push
repnz
inc
sbb
cmp
ds
out
jne
loop
jmp
mov
lret
lods
inc
lock
pop
in
mov
adc
add
ljmp
in
push
insl
pop
xor
loop
sub
sub
jmp
sbb
sub
push
inc
sbb
fs
lods
dec
and
movsb
lock
testb
lea
sahf
sub
mov
lahf
jb
pushf
sbb
lock
faddl
in
mov
cmp
mov
lcall
data16
xor
mov
scas
lret
push
aad
mov
pop
jmp
push
lcall
cmpb
jle
je
xor
push
push
sub
std
xchg
aad
movsl
mov
and
xor
pop
popa
js
divl
and
ljmp
or
push
cld
jmp
test
js
jb
stc
test
jge
arpl
divl
inc
test
jg
add
lds
push
xchg
or
mov
enter
jge
lcall
imul
out
cs
out
dec
dec
adcb
rclb
divb
outsb
add
inc
mov
ret
or
lcall
mov
lcall
clc
mov
lock
outsb
add
shlb
out
rcr
push
inc
out
mov
add
pop
into
mov
les
rcr
clc
loope
das
inc
mov
inc
inc
mov
xlat
mov
dec
sub
int3
sbb
scas
fstpl
outsb
dec
xchg
push
insb
into
aam
aad
mov
in
div
mov
cld
repz
shl
mov
dec
cmp
add
addr16
ficomps
fildll
fbld
xchg
dec
pop
ret
mov
test
mov
dec
aad
and
pop
fcmovnu
lahf
fmuls
sbb
cmpsb
scas
fnstsw
in
xchg
jmp
dec
add
in
add
lds
push
stc
mov
pop
adc
push
out
or
das
mov
ret
aas
dec
inc
sbbb
or
fisubl
and
sar
cmp
aas
repz
add
lcall
cmp
add
sbb
in
call
aad
ret
imulb
stc
push
fldl
or
mov
divb
ret
sub
lret
or
push
xorl
imul
call
inc
xchg
loopne
repnz
dec
in
in
mov
in
mov
adc
pop
pop
xor
cs
ret
inc
pop
mov
inc
outsb
dec
aam
and
pushf
fildll
icebp
inc
fisubrl
bound
mov
out
jne
add
sbb
daa
in
or
xor
imulb
fisttpll
popa
scas
fldt
xchg
mov
jnp
mov
fbstp
jmp
cmp
jg
pop
in
mov
fsubr
mov
mov
push
dec
enter
cmp
add
out
nop
jae
fiaddl
inc
sub
icebp
shr
rep
in
pop
outsb
fldcw
jecxz
dec
mov
dec
add
cwtl
enter
loope
pop
mov
push
mov
push
scas
push
int3
xchg
loop
pop
jae
jle
push
mov
mov
rcrb
mov
jno
rorb
dec
add
sub
xor
inc
cli
sbb
out
dec
pop
push
repz
jns
inc
sbb
xchg
movsl
push
outsl
pusha
jb
adc
cmp
inc
popf
jmp
dec
in
sub
test
cmp
scas
outsb
mov
mov
lock
pop
je
inc
rcl
int
aaa
shll
jo
jecxz
int3
adc
mov
rcrl
sahf
es
xor
gs
test
lock
fdivrs
sarb
stos
push
add
push
je
mov
aas
sub
dec
imul
add
xor
inc
out
jbe
mov
xorb
shlb
mov
push
test
stc
test
sub
cmp
fwait
mov
jbe
nopl
pop
jbe
mov
push
clc
cmp
add
outsb
xor
sbb
outsl
pop
inc
cmp
inc
pushl
shl
fs
jg
pushl
into
or
and
cmpb
cli
cltd
pop
or
mov
js
jne
arpl
pop
mov
je
pop
cli
mov
xlat
push
out
ss
insl
addr16
jbe
and
push
mov
fstpt
push
lods
push
loope
insb
mov
push
mov
and
icebp
add
jmp
jnp
adc
dec
enter
fndisi(8087
jecxz
out
add
int
fcmovnb
inc
cmpl
xor
push
pop
shr
mov
dec
sbb
dec
add
in
inc
add
dec
jb
vpshufhw
add
add
dec
jp
cmc
lds
mov
pmaxsw
lcall
ret
cmp
and
inc
inc
sbb
inc
sti
xchg
push
inc
ret
aaa
aad
dec
dec
xchg
xchg
dec
lock
es
adcl
movsb
xchg
jb
inc
lcall
notb
js
or
clc
hlt
push
cmp
add
sbb
cmc
mov
insl
push
xor
push
shrb
sbb
arpl
cmpsl
in
pop
or
push
mov
or
or
lret
push
int
mov
push
fcomi
xor
push
sar
xor
ja
pop
push
lds
mov
fmull
test
jp
jae
or
xor
and
leave
inc
popa
xchg
sbb
jg
nop
sub
sbb
dec
aam
lods
mov
clc
mov
mov
adc
inc
pop
xchg
mov
ja
loopne
stc
test
jb
scas
std
jle
iret
push
xchg
push
in
pop
jo
int3
mov
jp
ja
shl
adc
sbb
push
pop
stos
dec
ljmp
xchg
jge
sub
xlat
jbe
addl
push
xor
mov
jae
mov
inc
stc
sbb
push
pop
xchg
fdivrs
lock
popa
loope
test
mov
adc
lea
add
sub
jecxz
xorl
sub
fbstp
testl
cmpsl
or
andb
xchg
pop
push
aas
out
sub
test
push
mov
mov
movsb
pusha
ds
adc
add
stos
cwtl
adc
pushl
push
dec
cmpb
cmpsl
add
stos
pop
cmp
cmc
inc
mov
fnstsw
and
jae
clc
clc
mov
imul
mov
pop
push
adc
inc
fs
jae
xchg
push
pusha
sbb
imul
comiss
ss
fst
pusha
in
push
fmull
mov
sbb
fcoml
cmp
rclb
mov
or
outsb
sbb
cmp
pop
jl
xor
fcoms
mov
mov
outsl
cld
jnp
rclb
mov
orl
iret
in
addb
sbb
push
xor
add
fisubrl
push
jp
jle
mov
test
test
or
cmp
mov
dec
je
xor
xor
icebp
out
jp
push
lds
inc
xor
jge
stos
jae
push
ljmp
mov
int
xchg
insb
test
jb
in
push
add
push
jmp
imul
cmpl
imul
loopne
inc
sub
push
clc
mov
or
mov
idivl
inc
rorb
aam
inc
ret
popa
mov
and
stos
push
inc
inc
or
xor
add
xchg
ljmp
adc
lcall
int3
adc
mov
xor
hlt
ss
add
sti
ret
pop
jno
jno
push
fcomps
mov
xor
dec
imul
in
cmp
fxam
push
or
lods
mov
shll
sub
adc
sub
clc
sub
addr16
movsl
ret
pop
out
mov
mov
mov
loop
xor
push
pop
xor
mov
cmp
cmpsb
or
jo
add
mov
shrl
mov
xchg
and
mov
sbb
insl
sahf
push
lret
test
cmpb
shlb
push
sti
inc
sbb
pop
fdivrp
fimull
cmc
and
pushf
test
and
fildll
int3
lods
test
scas
push
inc
and
push
subl
sbb
jmp
xchg
jl
xchg
int
dec
lock
loope
jns
lret
in
stos
daa
enter
mov
push
iret
ja
pop
mov
fiadds
stos
xchg
adc
push
sub
or
insb
mov
movsl
int
xor
clc
js
cli
fidivrs
adc
out
xchg
enter
in
xchg
mov
dec
addr16
xchg
iret
or
or
shll
or
jae
push
in
mov
sbb
xorl
jnp
jne
outsl
inc
pop
sbbb
pop
imul
test
mov
aaa
cli
imul
or
push
aaa
pusha
xchg
icebp
movl
mov
loopne
repz
loopne
pop
movsl
rcrl
adc
lret
jle
add
xchg
mov
rcll
sub
fildl
sbb
dec
jno
sbb
in
pop
mov
sahf
push
orb
lods
xchg
subb
jo
push
negl
out
fstpl
jl
mov
cmp
in
ljmp
fsubp
daa
ljmp
clc
mov
insl
jg
xor
cmp
jnp
mov
leave
mov
pop
jge
scas
jb
arpl
xchg
stos
cmp
xorl
pop
ret
je
dec
rorl
pop
sbb
xchg
mov
jle
dec
sbb
add
call
add
mov
jl
adc
inc
insl
sbb
push
cmc
add
mov
hlt
rolb
mov
jne
es
scas
fistpll
call
bound
inc
dec
lcall
scas
jmp
adc
or
je
or
stos
or
cmp
cli
or
outsb
popa
shl
pusha
jae
clc
subl
sub
test
sub
push
mov
mov
pop
out
and
mov
fnsetpm(287
adc
pop
ror
cmp
jle
arpl
mov
js
divl
imul
out
push
fucomi
xchg
add
add
mov
and
test
cmp
std
ret
cmp
push
test
rorb
scas
shlb
mul
nop
in
lock
xor
imul
out
mov
mov
sbb
push
mov
into
shll
movsb
mov
test
inc
pmaxsw
nop
cmp
xor
lahf
jl
les
mov
pushf
pop
mov
cmpl
dec
test
lret
mov
movsl
or
shlb
aaa
ds
stos
cli
adc
into
and
fwait
in
jbe
je
push
jnp
or
mov
leave
aam
dec
addr16
xor
cmpsl
daa
mov
push
inc
ret
jb
push
xlat
insl
outsb
push
std
into
adc
xor
inc
sarl
rclb
sub
push
fcmovnbe
mov
cs
sarl
sub
insb
lods
notb
in
movsb
push
sbb
mov
leave
cli
jmp
jne
cmp
and
cmp
push
in
or
mov
mov
aaa
test
sbb
les
ficoml
pop
lock
push
roll
flds
adc
adc
xchg
fcmovb
gs
pushf
clc
sbb
add
ds
scas
or
jmp
loope
cli
push
mov
ret
adc
leave
fdivl
adc
mov
add
fsts
xlat
mov
push
int
imul
je
mov
.byte
cld
sbb
mov
adc
or
push
je
imul
add
push
mov
mov
outsl
outsl
pop
mov
je
in
adc
insb
and
cmp
outsl
jmp
jp
lea
mov
inc
cmp
jbe
lea
jg
xchg
lea
jno
dec
dec
mov
ja
or
or
fmuls
mov
mov
mov
xchg
call
ss
ljmp
inc
in
push
call
cmp
js
lea
out
dec
mov
and
inc
mov
cld
inc
mov
cld
inc
dec
cmp
outsb
mov
aam
pop
mov
je
subb
mov
repnz
dec
inc
cmp
jbe
mov
and
pop
divl
imul
mov
sbb
neg
mov
lea
bound
add
inc
fistpll
inc
ret
lea
test
testb
pop
ret
jmp
rolb
enter
sarb
mov
or
enter
mov
pushf
cwtl
xchg
xor
and
loope
or
xor
xor
mov
cltd
fdivrp
pushl
cmp
mov
jecxz
jge
fs
in
lsl
aas
pop
aaa
mov
mov
icebp
dec
aas
add
push
push
mov
ret
adc
fdivrp
inc
mov
jbe
mov
dec
inc
add
in
jmp
std
push
stc
inc
cmp
inc
mov
aas
loope
lahf
out
adc
sti
sbb
pop
mov
xor
cmp
icebp
sub
outsb
sti
jbe
pop
aad
pop
aaa
jbe
or
aas
divb
pop
decl
int3
notl
push
icebp
push
mov
push
aam
mov
xchg
mov
aam
mov
pop
jnp
xchg
test
test
xor
add
fucomi
cmpsb
aaa
sub
dec
aaa
dec
stc
push
jae
mov
sbb
clc
mov
shll
adc
lods
mov
inc
aas
push
jmp
pop
sti
decl
icebp
dec
mov
mov
stc
dec
mov
jbe
xchg
ret
imul
out
in
ret
ss
negb
add
fs
outsb
mov
pushf
adc
pop
sahf
sub
xchg
fnstsw
pop
movsb
mov
pop
mov
insl
mov
insb
xchg
dec
aaa
sbbl
mov
pop
xchg
mov
mov
push
cmpsb
clc
clc
ret
push
dec
ds
inc
inc
subb
lea
inc
out
mov
mov
in
imulb
jne
ret
jbe
jbe
sarb
or
push
mov
xor
and
divb
adc
sub
mov
push
xchg
dec
inc
adc
jmp
inc
jle
pop
mov
int
pop
cmp
sbb
shl
in
mov
sub
inc
dec
xor
mov
mov
les
stc
pop
sbb
xchg
xor
or
sub
mov
pop
outsb
xchg
pop
or
lahf
fists
sarb
mov
stc
dec
cmp
mov
mov
out
sbb
inc
aaa
js
or
push
inc
mov
or
aaa
jnp
jnp
into
mov
jnp
movzbl
pop
or
mov
jbe
jle
mov
push
out
mov
push
dec
and
mov
ss
das
cmpsb
or
fimuls
sbb
push
divb
mov
jmp
popa
push
gs
in
insl
fsubrl
sbb
or
mov
jb
and
dec
xor
jb
mov
mov
mov
and
mov
fxch
mov
out
divb
jp
call
arpl
data16
aaa
mov
cmp
js
pop
movsl
insb
test
lsl
sbb
dec
stc
add
add
sahf
lahf
mov
and
aas
add
push
out
or
mov
or
xchg
xchg
repnz
stos
mov
mov
cmpsb
push
aaa
jbe
or
and
shrl
jo
cli
mov
adc
cmp
xchg
ss
aaa
inc
fidivl
std
pop
test
pop
mov
mov
jbe
xchg
roll
mov
adc
mov
cmp
test
rorb
stos
test
out
xchg
sbb
push
cmpsb
pop
sti
insl
ja
ja
cmpsb
jbe
inc
rorl
or
clc
idiv
mov
rcrl
jge
stos
and
sbb
adc
outsb
leave
cmp
mov
call
clc
jg
and
cmp
in
pop
cmp
push
hlt
mov
push
pop
lea
push
push
enter
lods
stos
mov
adc
arpl
nop/reserved
push
mov
aas
mov
dec
loope
ds
insb
mov
mov
adc
pop
sbb
out
mov
in
pop
mov
cmp
dec
sub
out
mov
xchg
xor
adc
nop
and
fnstcw
gs
sbb
or
fwait
in
fs
mov
adc
inc
xchg
iret
jb
push
dec
add
cmp
in
dec
push
iret
idivb
idivb
adc
xchg
xor
fadd
bsr
cmp
sbb
and
xor
mov
fcmovnbe
dec
mov
outsb
incl
mov
and
inc
push
loop
pop
das
add
mov
mov
mov
int
outsl
add
shl
jne
test
jne
or
hlt
jmp
adc
shr
ds
imull
hlt
mov
in
sub
call
call
sti
clc
mov
add
dec
sub
loop
in
movzwl
dec
test
jb
movl
jns
push
lea
mov
mov
or
xchg
fnstsw
or
inc
rcll
cmp
or
sarb
xor
mov
sub
fs
or
sub
test
mov
jmp
sub
inc
xor
push
or
sbb
lods
sbb
rcll
add
sbb
inc
sti
mov
call
dec
in
jne
inc
jg
add
dec
outsl
popa
fs
imul
adc
jne
insb
dec
incb
sti
inc
insb
insb
outsl
arpl
push
jb
je
arpl
mov
inc
jb
add
bound
int3
mov
dec
mov
xor
iret
lock
fstps
out
add
cmpl
je
repnz
imul
ja
add
test
sbb
mov
jo
add
add
add
xchg
add
je
repnz
sti
mov
push
sbb
mov
and
xor
aas
icebp
dec
inc
das
cmpl
lock
add
sub
decl
testb
clc
push
repnz
jge
sub
jg
sbb
decb
jne
popa
mov
push
add
inc
or
jl
or
inc
xchg
fcos
pop
testl
hlt
cmp
jnp
lea
push
xchg
xchg
cmpsl
lret
jo
mov
sbb
hlt
xchg
lret
mov
jne
mov
clc
xchg
fdivrs
jnp
dec
dec
mov
fmull
sbb
mov
pusha
dec
inc
dec
mov
add
rorb
push
mov
cmp
inc
popf
call
inc
adc
xchg
sub
pop
xorb
test
mov
gs
ljmp
inc
pusha
sbb
fs
push
dec
insb
pop
mov
dec
insl
jmp
pop
add
gs
push
aam
mov
jl
jp
imul
outsl
fstpt
outsw
jnp
dec
imul
sti
pop
cs
jp
popa
outsl
ja
outsl
popa
pop
jle
inc
gs
inc
add
jns
jno
hlt
xor
adc
cwtl
add
jo
jmp
lock
cmp
sbb
stos
lea
xchg
push
cmp
ret
dec
cmp
jno
lea
add
cmp
fimull
and
mov
out
mov
inc
mov
mov
cs
cmpsl
mov
dec
mov
mov
bound
dec
mov
hlt
pop
dec
fildll
pop
pop
adc
cwtl
fdivrs
dec
shlb
adc
dec
pop
inc
add
or
add
fcoms
jg
add
out
jne,pn
inc
clc
jp
and
inc
mov
gs
inc
add
cld
jb
sbb
cld
leave
push
das
in
inc
lcall
subb
mov
outsl
xchg
leave
jl
dec
dec
mov
pop
inc
lahf
cld
mov
inc
push
sbbb
fcoms
adc
je
test
mov
mov
lock
sub
or
in
mov
jae
je
outsb
add
mov
sub
add
cmp
and
mov
cmp
mov
mov
inc
loopne
inc
inc
sbbl
in
popa
ret
movswl
outsb
or
xchg
sar
mov
push
sub
fsubrl
jo
cmp
js
lret
in
jge
inc
mov
mov
pop
or
and
jne
js
mov
cmp
in
mov
or
mov
icebp
push
ret
fmull
mov
arpl
pop
add
dec
inc
mov
loope
fiaddl
mov
ret
clc
mov
clc
shll
add
push
push
xor
xor
inc
push
mov
or
mov
fidivrs
xlat
adc
cmp
js
pop
adc
mov
ja
hlt
arpl
test
pop
test
sbb
out
in
or
aaa
sbb
dec
cmp
mov
xchg
mov
jo
xor
push
mov
mov
sbb
mull
mov
push
mov
lea
jae
push
popa
cld
sbb
mov
mov
sub
sbb
xchg
add
enter
test
mov
into
ret
adc
or
push
sbb
call
hlt
cmp
ret
cmp
dec
mov
add
rorb
call
ljmp
cli
and
add
push
mov
adc
in
dec
int
notb
andb
test
sbb
and
mov
das
gs
and
frstor
xor
and
jbe
sbb
loopne
call
enter
fidivrs
xchg
sub
pmaxsw
popa
mov
ss
adc
mov
mov
cmp
cld
adc
jae
cmpsl
pop
mov
shlb
jl
pusha
ja
sub
mov
inc
xchg
sbb
in
adc
dec
or
pushf
add
mov
mov
sbb
adc
sbb
es
insb
dec
inc
sbb
mov
and
nop
sub
push
xchg
pop
push
push
sbb
dec
mov
cmpsb
mov
fdivl
dec
xchg
dec
je
push
out
fsubs
or
int3
pop
add
inc
and
pusha
imul
aam
in
fimull
mov
fdivr
das
hlt
mov
add
outsb
gs
xor
cs
insb
je
push
cmp
je
arpl
insl
mov
add
jae
addps
imul
outsb
jl
jns
outsl
jb
sbb
jl
out
incl
push
xor
cmp
mov
outsb
je
add
cmp
xor
imul
outsb
cmc
jne
clc
sti
add
js
in
add
movsl
add
inc
dec
ja
sub
ret
cmp
push
mov
enter
sub
jne
add
mov
decl
dec
jne
mov
sbb
nop
ja
pushf
mov
negl
clc
push
mov
testb
cmp
cmpsb
inc
or
call
out
fistps
jl
decl
pop
and
mov
xor
mov
sbb
inc
or
in
ret
and
mov
rorl
lcall
aad
or
imul
inc
incb
cmpsl
mov
pushf
outsb
add
cmpb
or
pop
dec
jmp
or
adc
dec
mov
hlt
or
lods
fisttpll
push
mov
ret
add
fucom
inc
pop
out
lock
cmp
xchg
sbb
cwtl
rcl
gs
mov
or
orb
add
cmp
xchg
test
jp
mov
das
in
add
pop
dec
out
cmp
and
icebp
push
je
xchg
pop
testl
sbb
pop
outsb
or
in
fwait
fs
jge
jo
aad
ret
es
jecxz
mov
pop
insb
xor
sbb
js
insl
dec
rcrl
outsl
mov
inc
push
push
es
jge
sbb
orb
fistl
mov
inc
gs
iret
push
sub
cmpl
sbb
sbb
cmp
clc
inc
gs
data16
pop
out
scas
mov
sbb
test
push
aad
lock
cmp
sbb
js
loopne
adc
in
sub
stos
movsb
fcmovnbe
add
out
data16
dec
inc
add
and
pop
push
xor
sbb
sbb
adc
push
pop
cmpsl
sbb
aad
or
cmp
pop
push
ror
pusha
shr
ja
jne
pop
ja
subl
fcomps
and
out
sbb
mov
xchg
shlb
sbb
push
xchg
mov
push
inc
inc
xchg
inc
sbbl
cmp
dec
ret
enter
jns
in
decl
push
inc
xchg
cmp
sub
out
add
mov
roll
das
je
lahf
adc
insl
arpl
dec
mov
cmp
pop
push
push
aam
xor
bound
push
in
ss
or
call
mov
test
and
inc
and
push
xchg
jno
xlat
aam
push
sub
in
idivl
nop
add
jb
jbe
test
xor
add
xchg
or
add
cmp
adc
add
xchg
adc
pop
pop
add
sub
in
sbb
and
sub
push
dec
call
mov
roll
stos
sub
add
fists
add
jnp
insb
fistpl
add
add
lods
push
cld
sub
test
jge
mov
mov
add
mov
add
add
sub
add
aad
or
imul
shrl
add
add
inc
add
xor
and
adc
add
sub
les
das
fistpll
cmp
pusha
jo
add
std
push
cs
jb
insb
lret
out
mov
out
faddl
emms
fnsave
out
ja
or
sbb
imul
cld
lret
pushl
or
lock
lret
inc
dec
in
xchg
in
pushf
fwait
add
jmp
jns
or
addb
out
idivb
add
mov
pop
add
mov
movsb
jmp
add
push
in
add
lret
shrl
mov
fmul
out
inc
add
sbb
sub
das
mov
lret
cli
add
dec
fs
sub
fistpll
xchg
add
mov
sub
mov
adc
sbb
loope
mull
mov
add
hlt
pusha
lcall
jl
inc
aad
imul
or
mov
sub
add
or
jb
adc
add
hlt
add
add
ss
loopne
add
add
js
repnz
dec
mov
ja
rol
inc
shlb
nop
popa
sti
jbe
push
jns
push
shrb
or
jg
add
scas
sub
adc
enter
sti
out
jb
add
push
inc
int3
add
stos
or
leave
mov
jbe
fldt
cmpb
sti
mov
inc
add
repz
pop
in
movsl
cmc
movsb
cmp
dec
fsubr
add
add
scas
loope
fldl
xchg
frstor
jg
xchg
out
fwait
adc
pop
inc
movsb
add
add
fs
jl
clc
lods
pop
push
push
in
adc
xchg
loop
dec
repnz
push
mov
ss
insb
adc
jl
sub
in
cmp
xor
test
inc
xchg
mov
cmp
cmp
out
cltd
fmuls
aad
jne
sbb
ja
add
insl
mov
pop
and
and
outsb
in
push
and
repnz
dec
add
in
add
lret
popa
mov
cs
popf
add
jecxz
inc
mov
int3
mov
fwait
and
repnz
arpl
sub
push
mov
lea
js
add
arpl
xor
push
outsb
addr16
nop
or
insl
popa
add
pop
mov
lcall
fs
insb
cmp
sarb
shlb
mov
adc
and
mov
ds
sbb
push
out
fsubrl
or
xor
rcl
lret
add
or
insl
mov
add
sub
popa
mov
sbb
test
xchg
add
shrl
mov
adc
sbb
or
cld
jge
stos
iret
movsl
inc
divl
xchg
jae
pop
jbe
push
add
mov
rcrl
lret
js
cli
sbb
add
das
in
sbb
addr16
fistl
gs
push
cwtl
aas
shl
sbb
fcompl
cmp
fdivrp
roll
cmp
not
cmp
nop
hlt
or
xor
dec
fcoms
add
mov
jb
clc
outsb
sbb
and
jnp
loope
push
push
jbe,pt
and
lret
lea
dec
pop
add
and
repz
icebp
add
jbe
pop
cs
pop
rol
add
sbb
add
popa
mov
mov
add
push
out
not
mov
jno
out
data16
jo
lret
cltd
pop
int
pop
icebp
lods
lcall
stos
mov
jl
test
sub
add
and
adcb
lock
js
add
pop
ljmp
xlat
inc
pop
fisubl
push
sub
neg
inc
cltd
outsb
cmp
jmp
popa
xchg
jae
enter
mov
cmp
mov
lds
jp
je
cld
inc
mov
pop
sbb
push
adc
mov
iret
addr16
out
cli
mov
and
popa
pop
dec
test
in
cmc
or
sub
mov
fwait
ja
or
pop
mov
push
imul
imul
sbb
dec
mov
rcll
fistpl
mov
xchg
test
out
dec
push
sbb
popf
aad
sbb
loope
adc
xchg
imul
pop
loop
sbb
add
ss
xchg
rcrl
jae
lods
xor
add
lds
mul
test
cmpsb
jp
subb
into
test
push
pop
add
mov
popa
mov
adc
js
push
frstor
sbb
rolb
lcall
mov
sub
xor
sub
xlat
add
in
adc
imul
sbb
mov
pusha
cmp
push
ficoml
jle
xor
lods
pop
push
stc
cli
mov
fprem
cltd
gs
incl
pusha
shlb
test
inc
add
xor
cmp
jmp
hlt
jmp
add
jecxz
pop
dec
or
icebp
out
xchg
rol
xchg
insb
and
add
sti
and
idiv
xlat
or
adc
and
sti
mov
cmp
ss
or
jge
push
mov
leave
cmp
or
aas
or
popf
mov
pop
mov
jl
pop
mov
jns
outsb
out
movsl
into
mov
mov
stos
and
push
jbe
inc
push
jne
pop
fdivs
cmp
lcall
mov
mov
es
sub
in
mov
rcll
adcl
mov
out
sbb
pusha
push
or
pop
popf
addr16
orb
cmpsl
mov
fucomi
enter
and
movsb
dec
mov
xorl
test
jo
inc
cmp
add
aad
movsb
jo
insl
negl
iret
pop
jp
pop
flds
out
jmp
sbb
and
in
mov
lcall
insl
int
xor
imul
shrb
lahf
mov
sub
pop
pop
pusha
addr16
pusha
cli
popf
adc
dec
and
fxch
mov
ljmp
js
xlat
int
aam
and
cmpl
in
sub
clc
mov
dec
and
cmp
mov
xor
cld
shrl
adc
dec
inc
aaa
push
jno
call
test
or
inc
and
fsubrl
scas
xor
mov
mov
and
sbb
mov
inc
and
mov
rcrb
cltd
pushf
test
mov
sarl
imul
lds
sub
nop
je
inc
in
xchg
scas
loope
fisubl
pop
movsl
sub
sub
mov
sbb
sub
testl
dec
cmp
jo
loope
pop
mov
mov
mov
out
in
mov
mov
mov
jbe
push
ja
fstpt
rcl
push
nop
gs
mov
outsb
or
icebp
bound
aaa
add
aam
jnp
mov
ficompl
mov
stc
and
push
cli
fcomps
fwait
xchg
outsl
dec
addr16
mov
pop
fwait
jnp
push
rorl
sbb
aad
or
gs
sub
jp
fdivs
pop
int3
comiss
aad
sub
sbb
mov
rorl
mov
cmp
jne
pusha
ss
in
pop
mov
lret
dec
jno
ret
cvtdq2ps
and
inc
or
mov
add
and
imul
mov
out
jbe
into
or
gs
mov
push
into
pop
popf
loop
rol
adc
and
jecxz
imul
sub
adc
xchg
mov
mov
movsb
push
jne
adc
dec
inc
xchg
clc
pop
cmp
in
jecxz
roll
popf
adc
pop
into
push
cmp
xor
mov
shlb
dec
test
out
xchg
jge
jecxz
pop
pop
and
push
mov
je
js
loope
push
push
popa
pop
fs
adc
out
lcall
xchg
xor
xchg
je
cmp
test
arpl
mov
out
pop
aad
jecxz
hlt
xor
cli
xlat
loop
outsb
scas
ret
repnz
inc
or
or
xor
imul
mov
and
push
insb
push
jp
jle
inc
jns
cmp
and
push
jp
scas
mov
xchg
or
js
cld
cmp
dec
mov
lock
add
mov
in
aam
pop
fwait
add
imull
arpl
push
sub
xlat
dec
or
mov
mov
fidivs
push
inc
xchg
jbe
je
hlt
call
data16
sarl
fwait
pop
cmp
les
ds
nop
sbb
ds
outsb
mov
enter
xor
outsl
rcl
out
inc
jp
mov
shll
lods
mov
pop
push
mov
push
mov
add
xorl
fadds
jle
rclb
sub
jns
imull
lds
fs
lret
mov
push
pmulhuw
adc
or
and
fchs
in
pop
lahf
push
test
cmp
or
rorb
push
cmp
cltd
pop
sbb
xchg
imull
inc
adc
dec
lock
ret
push
cld
xchg
xor
and
inc
insb
js
xchg
sub
add
or
imul
cmpsb
cld
xchg
insl
stos
sub
lds
and
paddq
mov
mov
shll
addl
mov
out
and
sbb
add
pop
xor
pop
pop
push
mov
xchg
xchg
cltd
mov
sbb
rcl
pop
lock
jne
loop
popf
daa
movsb
aas
repnz
dec
pop
fiaddl
add
sbbb
xchg
xchg
cmpsb
ja
insl
aad
xchg
cmp
negb
sub
std
xchg
xlat
xor
dec
or
xchg
inc
stc
test
sbb
call
cmp
xchg
aas
je
mov
jge
pop
popf
fildl
ds
icebp
xor
mov
cmp
fcomps
pop
inc
fimull
mov
push
push
or
mov
push
mov
sbb
insb
add
icebp
loope
inc
scas
push
sbb
push
cmp
pop
mov
sbb
adc
stos
andl
cli
cld
mov
dec
mov
push
or
push
add
aam
jmp
lods
adc
xchg
dec
cmpsl
aaa
mov
sub
or
inc
cwtl
addb
adc
stos
out
call
scas
mov
sub
gs
outsb
je
cmp
push
xchg
movsb
shll
bound
cld
mov
sbb
xor
ljmp
or
add
pop
fwait
pop
insb
test
jmp
jb
daa
shrl
adc
dec
mov
jne
or
fnstenv
xchg
in
cmp
mov
or
xor
adc
xchg
pop
movswl
mov
mov
or
hlt
cmp
push
fs
mov
lahf
sbb
mov
pop
pop
std
shrb
push
cli
mov
in
jns
push
sub
mov
scas
lods
int
xchg
pop
cmp
fiaddl
aas
ja
mov
and
shl
push
loopne
fstpl
aaa
ret
jmp
mov
sub
fdivr
lea
mov
mov
or
lret
pop
sbb
mov
call
adcl
sbb
jl
jecxz
inc
push
mov
or
test
divl
scas
lcall
jg
btcl
ja
sub
jl
cmpsb
push
insl
jmp
and
fisttpll
mov
loope
ljmp
inc
inc
aaa
lcall
jns
test
or
cmp
mov
or
cmp
cmp
dec
adc
stos
xor
lds
mov
fcom
rcrb
add
scas
leave
rolb
ds
aam
xchg
or
arpl
fists
xcrypt-ecb
cmpsl
dec
dec
aaa
cs
adcl
adc
sub
mov
push
mov
test
adc
inc
jb
lock
icebp
andl
in
jg
fisttpl
es
mov
pop
shll
mov
pop
ds
sbb
add
into
xor
inc
hlt
sti
dec
push
xlat
cmpsl
shll
std
adc
popf
xchg
outsb
pop
cmp
push
stos
inc
sbb
mov
fs
mov
xchg
xchg
inc
daa
adc
repnz
js
mov
lret
push
lret
xor
cs
mov
jmp
xor
sub
adc
dec
gs
test
addr16
adc
sub
dec
mov
mov
xchg
push
mov
or
lods
push
sbb
shlb
icebp
out
clc
cmp
jae
push
call
mov
popf
jnp
push
cmp
mov
inc
mov
rcrb
loope
push
mov
push
rorb
arpl
inc
pop
jecxz
rcrb
inc
jecxz
test
aas
sbb
pop
enter
in
push
rolb
hlt
fidivrs
fldt
hlt
dec
lcall
dec
pop
cmpsb
adc
jecxz
or
insb
dec
in
enter
xchg
cld
lahf
sbb
pop
xchg
and
pop
popa
jo
imul
outsl
ljmp
or
clc
movsb
xorb
xchg
rol
mov
push
fdivrs
dec
pop
shlb
icebp
test
jne
mov
push
cmpsb
testl
es
or
push
xor
into
mov
mov
mov
mov
gs
pop
lods
xchg
hlt
icebp
aam
push
out
pop
out
cmpsb
push
xchg
pop
mov
loope
rcl
jge
jmp
xor
push
jecxz
fstpl
fmull
pop
dec
adc
sbb
push
pop
add
inc
cmc
ss
push
xlat
fistps
and
mov
idivb
scas
jno
or
test
ja
fxch
cmc
seto
jmp
and
add
and
mov
fimuls
ja
fcmovbe
jmp
pop
adc
pop
loop
mov
ss
lret
imul
arpl
cmp
addr16
stc
repnz
push
cmpsb
xchg
lret
mov
jmp
in
cltd
xchg
dec
add
in
push
loop
mov
inc
mov
lret
notb
icebp
hlt
jno
xor
cmpsl
fsubl
dec
out
pop
es
enter
addb
pop
mov
mov
pop
cmc
les
inc
pop
cmp
cltd
mov
imul
fldcw
cld
jp
js
paddusb
dec
lahf
stos
sub
cmpsl
or
sahf
jnp
mov
mov
mov
jbe
xchg
inc
adcl
ret
pop
jle
mov
or
les
ret
lock
in
popa
adc
repz
cmp
or
pop
xchg
fstl
xor
js
jns
out
cs
lcall
mov
fnstsw
mov
cmp
mov
iret
mov
insb
imul
mov
sub
cmp
lods
xlat
les
in
insb
jne
das
scas
jae
push
adc
adc
push
mov
scas
pop
int3
jl
mov
jge
vmovsd
sbbl
sbb
repz
aad
test
and
push
ja
mov
mov
or
lods
fsubrs
mov
arpl
fdivs
jmp
test
imul
xlat
aam
stos
stos
sbb
sub
roll
fnstsw
cmp
rorl
js
xor
jp
in
xor
jge
inc
loope
fs
cmp
xor
stc
divl
maxps
and
pop
jae
ret
test
stos
cli
test
stos
cltd
lock
insl
outsl
and
xor
pop
push
inc
ja
aam
loope
push
repz
lret
cld
jge
push
jb
roll
sub
je
push
push
cwtl
nop
pop
sub
stos
outsl
mov
add
arpl
mov
dec
mov
xchg
mov
jnp
jnp
shll
cltd
imul
mov
sbb
cmc
mov
cmpsb
xchg
push
jp
push
sbb
loope
xchg
add
mov
shll
fbld
pushf
jno
enter
xor
add
ds
imul
cmp
fcom
xchg
and
xorl
scas
adc
and
mov
mov
pop
add
imul
leave
add
cmp
xchg
mov
jns
mov
int
mov
mov
out
push
fwait
pop
xchg
jecxz
pcmpeqb
push
mov
lret
sahf
or
orb
ret
and
xor
push
xchg
or
adc
push
loope
addr16
cmp
inc
xchg
jle
cmp
mov
pop
or
cld
xchg
add
mov
mov
fld
clc
movsl
xlat
add
scas
xchg
inc
popf
int
jne
fdivl
sub
add
or
xchg
sti
enter
mov
insb
sbb
jo
xchg
cmp
rclb
mov
adc
fdivr
fildl
add
outsl
or
stos
int
in
inc
pop
das
dec
fs
and
decb
xorl
fcoms
outsb
jb
mov
in
mov
lea
je
dec
inc
shr
adc
cmpsl
xchg
test
add
sbb
cmpsb
sbb
ret
es
fcmovnu
loopne
cmpsl
stos
push
pop
mov
fisttpl
push
fnstsw
jno
jns
sbb
mov
or
sahf
cli
inc
mov
mov
mov
cmp
out
sub
sbb
mov
push
mov
sti
ja
sbb
loope
movsl
bound
mov
in
pop
mov
sbb
mov
stc
push
sbb
mov
push
sub
pop
fwait
insl
xchg
mov
mov
cmp
arpl
cmp
inc
inc
enter
fstps
or
adc
sub
scas
lcall
bound
xor
adc
int3
icebp
xchg
mov
or
mov
fidivrl
in
lds
mov
aam
sub
mov
ljmp
sbb
std
imul
push
bound
pop
outsl
inc
xchg
mov
js
lods
pop
aam
jmp
sbb
bnd
mov
pushf
jne
cmp
cmp
mov
add
popf
sub
mov
loope
shll
popa
pop
hlt
imul
leave
popa
jmp
addl
cmp
ss
mov
xchg
mov
mov
xchg
dec
les
shll
mov
das
add
lods
popa
inc
mov
sbb
cmpsb
gs
outsl
ret
in
pushf
sbb
outsl
mov
push
fcomi
data16
shl
sti
xchg
aad
pop
xchg
push
stos
fcoml
ljmp
mov
fsts
fistl
mov
sub
xor
sbb
add
and
dec
es
xor
jp
aas
inc
not
push
test
sbb
leave
subl
push
sbb
sbb
sbbl
scas
inc
jmp
int3
and
enter
js
call
ret
cmpsl
cmp
xor
in
inc
movsl
dec
insl
shll
out
mov
loop
sbb
testl
pop
push
or
fnstsw
jo
in
and
jne
add
sbbl
lcall
pop
addr16
push
push
and
mov
paddusw
jg
or
pop
cmpsl
pop
jne
push
mov
jmp
jae
gs
xchg
and
iret
int3
jge
flds
or
je
and
cli
pop
cmp
ficoml
fcompl
lret
js
xor
daa
cmp
fdivr
mov
fcmove
push
dec
sub
rorl
inc
push
in
sti
ret
sbb
pop
add
inc
xchg
ret
jns
xor
jmp
jg
mov
ds
popf
jno
mov
inc
prefetch
xor
xchg
sbb
push
jo
mov
xchg
cld
inc
push
cmpsl
jmp
inc
pop
insl
jmp
dec
push
shlb
ds
pop
and
aad
inc
pop
inc
xlat
mov
scas
xlat
les
mov
jo
jle
and
push
add
mov
pop
jge
jo
pop
pop
pop
fimuls
xor
dec
add
add
sbb
bound
fwait
cmp
das
mov
jb
pop
or
outsl
sti
xor
dec
push
mov
fcomi
mov
mov
adc
cmp
jl
pop
fwait
ret
cmpsb
xchg
cltd
pop
ljmp
out
nop
and
mov
pop
es
lcall
xchg
mov
inc
sbb
mov
xlat
idiv
lock
rcll
mov
jne
mov
std
inc
push
not
jl
dec
and
xchg
jmp
jne
cmpsb
pop
xchg
xlat
pop
out
push
pop
inc
inc
fisttps
inc
sbb
or
pusha
push
out
inc
pusha
pop
add
sahf
sub
ja
pop
dec
push
les
ds
mov
sub
aas
push
mov
and
add
sub
xlat
lock
bound
mov
inc
xchg
jne
div
orl
jns
jl
inc
es
insl
dec
xor
out
mov
jp
cmp
or
test
inc
daa
int3
cmp
pop
ffreep
xchg
aam
add
out
scas
mov
mov
jns
popf
xor
sti
inc
lods
or
cmp
cmp
aam
mov
xchg
jp
mov
int3
inc
mov
push
jno
je
sti
les
lea
mov
lock
mov
stc
inc
adc
sbb
subb
in
push
ljmp
aaa
idivl
push
xor
mov
jnp
dec
or
xchg
cmc
inc
cmp
adc
add
nop
and
ljmp
cmp
jno
xchg
mov
mov
pusha
add
xlat
or
cmp
dec
dec
jg
ret
into
cmc
inc
push
adc
cmp
add
lock
ret
push
jmp
jae
xor
lock
insb
sbb
fwait
stos
sbb
xlat
push
out
ficomps
outsl
cli
aam
sub
int
jl
xor
mov
out
or
dec
xor
jae
ja
scas
popa
out
lds
dec
loopne
int3
inc
movsb
shrl
sbb
cmp
or
push
icebp
outsl
outsb
negl
dec
pop
sahf
stos
popf
sbb
xlat
movsb
movsb
push
outsl
ja
orl
cmpsl
xchg
inc
jge
rorl
mov
mov
jnp
lea
push
pop
stos
xor
adcb
loope
add
cmp
mov
pop
xchg
sti
test
add
imul
push
mov
mov
es
std
rep
test
jmp
popa
xchg
mov
add
popl
mov
xor
popa
jne
jmp
dec
movsb
mov
pop
int
ds
push
xor
clc
cmc
call
stos
mov
push
dec
jge
jmp
pop
imul
push
push
inc
lea
es
jbe
loope
sahf
sub
xor
fisttpll
xchg
adc
rcrl
or
pushf
adc
xor
out
lods
insl
fildl
mov
or
pop
ljmp
mov
cmp
or
test
iret
rorb
push
lret
ss
hlt
gs
cmpsb
in
sti
ds
dec
sub
mov
js
jp
mov
adc
fdivs
mov
inc
and
and
hlt
fbstp
push
loope
je
dec
into
scas
sub
cmp
mov
test
je
stos
jmp
inc
loope
pop
or
fimull
cltd
sti
inc
push
loopne
cmp
lds
xor
enter
bound
jmp
sbb
mov
jl
or
mov
jp
dec
icebp
outsl
ds
xor
or
inc
lret
mov
and
dec
pcmpeqw
mov
int3
sub
mov
bsf
mov
call
js
jae
inc
insl
push
xchg
js
shrb
jle
mov
arpl
cli
sub
mov
gs
mov
jge
mov
push
ret
or
cmp
push
jecxz
fdivrp
aam
jle
enter
inc
push
mov
sbb
ljmpw
and
fdivrp
jg
adc
out
bnd
iret
fsubrs
popf
jbe
fidivrs
lods
sahf
mov
cmc
cs
cltd
enter
dec
outsb
jle
sahf
or
sbb
jo
movl
mov
arpl
jne
or
adcb
out
loop
mov
mov
cltd
jo
inc
mov
dec
pop
imul
das
xor
sahf
pop
call
pop
or
iret
sbb
xlat
pushf
pop
fldl
insl
mov
clc
out
hlt
xor
out
push
dec
ljmp
fwait
xor
inc
inc
mov
pop
push
daa
push
mov
fsubrs
test
inc
adcl
leavew
mov
xorb
jle
scas
bound
icebp
mov
ficompl
lods
and
lcall
lcall
and
xor
imulb
shrb
insb
dec
and
mov
ds
insl
cmp
rol
lahf
jbe
loopne
clc
jne
lret
mov
rolb
xor
je
adc
lods
push
jne
call
in
xchg
and
cli
ds
mov
into
mov
jle
mov
cmp
mov
test
add
or
jb
or
ret
cmpsl
sbb
ret
jbe
fcoms
ffree
ret
jae
loopne
pushf
incb
add
pop
fstl
mov
pop
lcall
push
out
and
adcl
jecxz
add
dec
in
scas
ret
fdivl
ds
adcb
mov
loopne
pop
ja
xchg
bound
push
roll
orl
fdivl
jecxz
mov
ret
bsf
jg
sub
ds
loope
lods
adc
jp
sub
sbb
maskmovq
imull
mov
stos
popa
dec
xchg
mov
arpl
repnz
xchg
pushf
dec
gs
test
push
adc
mov
inc
sub
pop
in
mov
inc
push
ret
fstps
jno
mov
push
mov
dec
push
mov
pop
clc
jp
jae
xchg
sub
xor
mov
ljmp
inc
andb
ljmp
fdivrl
jb
lds
cmp
add
sbb
add
popa
sub
lods
out
icebp
cmp
push
push
notl
stos
ror
adc
pop
dec
mov
outsl
pop
mov
add
mov
add
std
mov
xchg
xor
cmp
xor
cltd
adc
nop
mov
ret
jne
addr16
test
cmp
jne
mov
and
or
sub
in
cmpsb
mov
adc
or
outsb
mov
xor
xchg
fcmove
or
pop
in
dec
pop
adc
pop
clc
add
mov
sbb
cmp
cwtl
dec
ret
inc
cmp
pop
mov
lcall
add
sbb
or
adc
push
aad
call
test
addr16
pop
lea
pop
idivl
outsl
sarb
and
mov
loope
xchg
cmp
aam
test
push
cmp
mov
pushf
bound
addb
jb
addl
lock
cmp
cmp
sub
pop
push
ret
xor
mov
push
cmpsl
cmp
jns
fistpl
mov
mov
int
add
orl
pop
xor
push
ds
rclb
mov
mov
aam
jb
loopne
xchg
ret
cmpsb
mov
popf
add
jbe
mov
imul
mov
mov
clc
loop
loope
xchg
movsb
mov
pop
cmp
pop
idiv
sbb
mov
cmp
dec
inc
in
fdivrs
sarl
lock
lods
adc
arpl
xor
sbb
jmp
fwait
lsl
int
jne
fdivrs
add
lret
mov
rol
inc
ljmp
dec
cmp
adc
sbb
mov
pop
jae
adc
push
xlat
mov
inc
cs
cs
inc
shr
jg
add
pusha
pushl
xchg
and
add
pop
push
dec
mov
ja
cmp
cli
xor
mov
sub
testb
nop
jg
mov
les
sbb
flds
aam
mov
movsl
pop
testl
lods
stos
or
lahf
iret
movsl
jo
popa
rcl
sti
xlat
sub
scas
stos
cmp
push
inc
test
cmpsl
cmp
or
icebp
and
pop
cmp
imul
aam
jp
fldcw
jecxz
or
pop
push
xor
scas
cmp
lock
and
cmp
subb
push
aaa
cmp
cmp
or
inc
js
cmp
daa
sub
cwtl
aas
imul
xchg
pop
int
ss
loop
or
enter
fldl
add
jmp
lock
cmp
pop
xor
or
mov
lret
cmp
jge
or
inc
arpl
popa
imul
testl
or
jecxz
pop
lahf
cmp
fcmovu
sbb
cmc
fsubl
shl
adc
test
lock
inc
das
movsl
adc
js
icebp
sub
adc
es
sub
shll
ljmp
clc
shlb
pop
xchg
aad
pop
xchg
leave
jae
std
jo
xchg
icebp
stos
xchg
ss
mov
inc
fisubrs
push
aaa
adc
add
push
xchg
xor
cli
dec
lahf
push
aas
jp
jp
xchg
adc
mov
xchg
stc
loope
stos
sbb
or
xchg
mov
adc
fnstsw
jne
adc
cltd
rol
push
enter
test
and
xor
pxor
les
sbb
sti
pop
cwtl
and
test
jmp
shr
ljmp
mov
shl
dec
xchg
pop
mov
std
test
pop
fstl
int
ss
pop
sub
mov
fs
push
dec
add
loopne
fldt
sbb
sahf
call
jg
bound
inc
xor
add
mov
adc
cmpsl
xchg
xchg
cmp
pop
pushf
dec
and
repz
andb
sbb
sub
faddl
imull
outsl
jnp
jns
adc
insl
xchg
mov
roll
icebp
lret
mov
push
iret
pop
jmp
fcomip
icebp
xorl
xlat
roll
jnp
popf
jle
pop
repnz
out
jbe
aad
mov
or
mov
jle
cltd
cwtl
daa
ss
std
jl
pop
cmp
lcall
cmp
lret
fsqrt
sbb
je
cmpsl
out
jne
mov
mov
mov
jge
fstps
or
cli
shr
add
or
aas
je
mov
add
hlt
rorb
inc
popa
pop
mov
mov
cmp
orl
insb
mov
inc
cld
ret
call
push
pop
shll
pop
shl
sub
add
cmp
mov
xchg
sbb
jmp
loopne
push
sub
popf
mov
mov
cld
mov
inc
cli
dec
jl
inc
int
outsb
mov
std
popf
inc
enter
mov
mov
test
push
fstpl
outsb
mov
jmp
xlat
jb
rcrb
out
jmp
mov
dec
fidivrs
sbb
sbb
shl
inc
es
es
xchg
jbe
xchg
sub
push
or
hlt
hlt
mov
cmc
loope
lods
cli
popf
insl
lea
inc
mov
rcr
fdivrl
xchg
mov
pop
push
cmc
jge
rcr
pop
push
orl
pop
or
mulb
push
adc
xchg
and
adc
adc
pop
daa
mov
mov
clc
cmp
rorl
ret
xchg
xor
xchg
pop
push
adcl
out
jbe
es
dec
jb
cmpsb
repnz
icebp
push
dec
pushf
cmp
sub
fstl
or
mov
testl
inc
xor
hlt
jne
fnstsw
and
mov
push
rcll
enter
xor
and
push
stos
test
jo
xchg
call
push
and
pop
icebp
add
push
mov
add
insb
aas
jecxz
add
xchg
hlt
out
addl
jae
jnp
call
int3
xor
sbb
mov
inc
mov
push
clc
std
mov
fisubs
stos
sbb
ret
sbb
faddl
mov
movsl
pop
sbb
lock
dec
rolb
dec
sub
xchg
adc
pop
cmp
or
push
adc
out
loope
push
adc
pushf
mov
mov
sbb
pusha
inc
and
jmp
cmp
rcrl
and
pop
sbb
or
lds
sbb
mov
fwait
and
or
mov
fdivrs
xor
std
rcrb
or
fs
and
pop
sub
fnstsw
pushl
fistl
repnz
orb
pop
jl
dec
xchg
mov
out
inc
testl
and
mov
dec
cmpsl
xchg
jmp
jmp
xchg
pusha
inc
insl
inc
test
mov
clc
sbb
push
jmp
inc
nop
jae
repz
jne
jle
mov
leave
and
cld
lea
jl
dec
jg
jne
outsb
mov
js
js
xchg
sbb
push
negl
adc
sarb
clc
xchg
adc
vmread
lcall
cmc
mov
outsl
int3
pusha
data16
jbe
cld
out
orl
imul
ds
popf
lahf
dec
mov
mov
mov
add
out
fwait
clc
pop
mov
jmp
cs
dec
mov
sub
aam
test
xchg
stos
add
inc
and
jmp
sbb
outsb
lret
push
jae
jp
pop
out
outsb
xchg
sub
je
jmp
jo
lea
scas
pop
es
jge
aad
dec
hlt
test
or
scas
add
push
mov
push
cli
pop
sbb
movsb
test
scas
rolb
fdiv
andl
cmp
ficoms
in
or
in
scas
insb
mov
mov
loopne
adc
stos
fstpt
xchg
or
push
dec
into
pop
jo
nop
adc
or
xchg
out
mov
mov
clc
fsubrl
adcl
lret
dec
or
aad
loopne
add
pop
cmpsb
shrl
ror
imul
xchg
cmpsb
pop
cwtl
sub
xlat
cmc
shrl
sbb
ds
adc
inc
hlt
jo
ds
ljmp
mov
sahf
add
jecxz
xor
repz
pop
or
popf
cmp
stc
outsl
pop
mov
insb
imul
mov
or
fistps
dec
lods
fistps
inc
cmc
sbb
mov
mov
jb
push
sub
mov
test
jae
shlb
test
out
lcall
adc
enter
push
pop
scas
sbb
sub
inc
ret
ja
dec
jle
fadd
lods
hlt
mov
lahf
into
jp
enter
jmp
iret
jbe
idivb
mov
and
jb
xchg
insl
sub
jb
add
jbe
dec
cltd
jmp
fldl2e
adc
rclb
mov
js
or
inc
pop
mov
push
into
in
or
loop
add
mull
mov
fists
mov
add
scas
jge
insb
xchg
inc
call
pushf
cld
add
inc
call
hlt
nop
pop
in
jns
je
ss
nop
ds
inc
adc
cmp
jae
xchg
int
scas
mov
ret
add
iret
es
out
add
jecxz
sahf
mov
lds
mov
ds
push
repnz
in
cmpl
push
or
dec
call
ret
push
out
in
pop
ss
aas
xor
push
jecxz
es
addr16
adcb
dec
jbe
cli
mov
mov
pop
or
jecxz
js
sub
mov
lret
les
jg
fiadds
mov
stc
cmp
test
mov
mov
inc
xchg
aad
cli
mov
fsubr
fs
clc
mov
cli
sub
shlb
jne
dec
insl
imul
sub
or
or
outsl
mov
je
scas
popa
mov
movsl
mov
ja
xor
lea
cs
loope
fistpl
push
push
inc
xchg
outsl
mov
clc
xor
add
mov
lea
iret
shrl
loope
push
or
and
sbb
add
test
std
jbe
adc
dec
jnp
inc
lret
inc
pop
loopne
loopne
lcall
test
adc
rclb
push
mov
mov
psrld
mov
cmpsl
cmpsb
mov
iret
divb
add
outsb
lock
ret
int3
and
js
xorl
testb
shl
mov
mov
das
pusha
xor
adc
cmpb
sbb
mov
mov
and
xchg
inc
in
push
push
add
cmc
add
jge
ret
inc
fmull
jmp
loope
cmp
incb
repnz
pop
or
cli
cmc
mov
xor
dec
xor
dec
gs
jnp
rcr
pop
xchg
mov
in
xchg
pop
fwait
mov
cwtl
xor
cmp
dec
cmp
subl
sub
or
xor
out
mov
inc
fisttpll
out
inc
lret
mov
inc
jne
fcomps
mov
sbb
inc
insl
int
outsl
mov
push
pop
out
xor
inc
push
jo
outsb
mov
ret
cli
fcmovb
lea
push
xchg
loope
mull
xor
jmp
dec
loopne
loope
or
inc
ss
push
call
push
xchg
push
xor
xor
push
jae
mov
push
sar
mov
sahf
iret
imul
popa
inc
fsubrl
fndisi(8087
pop
lret
or
fstps
ret
mov
insl
insl
xchg
sub
and
or
in
jo
scas
out
arpl
sub
rolb
xchg
in
mov
adc
sub
jnp
pop
fisttpll
loopne
lea
addl
pop
push
jae
lret
and
popa
or
scas
insl
jmp
sahf
icebp
sbb
ret
es
add
jg
loopne
cli
scas
pop
jno
daa
icebp
loopne,pt
aad
inc
mov
stc
ret
inc
jne
mov
xchg
inc
xor
mov
ss
cwtl
cmp
mov
mov
pop
jmp
fs
insb
popl
lret
inc
dec
adc
aam
insl
jae
push
mov
das
lahf
and
jbe
ficompl
adc
stos
icebp
in
and
mov
icebp
jns
lret
pop
icebp
xchg
lahf
repz
mov
push
dec
xor
iret
aad
loopne
sub
loopne
add
ss
adc
int
xor
xchg
std
push
push
mov
movsb
pop
out
mov
lea
je
rcrb
das
lods
data16
int
jb
cmp
dec
pop
xor
pop
int3
sub
xchg
mov
and
enter
outsl
pop
dec
cmp
mov
mov
push
hlt
mov
pop
fimuls
fistpll
mov
lds
mov
push
fwait
mov
xorl
shl
ljmp
add
mov
push
pushf
mov
or
cmp
sub
xorl
adcb
mov
xacquire
jp
scas
outsl
arpl
dec
fwait
and
loope
push
repnz
pextrw
pusha
cwtl
cmp
ljmp
jne
pop
mov
add
xor
aas
lods
aaa
fisubl
call
aad
inc
push
int3
cli
mov
adc
sti
jae
fucom
out
mov
cmc
inc
hlt
divb
push
xchg
push
test
lea
or
outsl
in
cmp
out
xchg
into
jecxz
fst
push
cmp
das
inc
mov
ljmp
daa
push
inc
hlt
xor
pop
pop
pop
mov
mov
in
mov
cmpsl
gs
pop
inc
push
in
ret
mov
sarb
cltd
xlat
je
sti
cs
ds
loope
dec
rol
mov
inc
loop
jae
sahf
shrb
fdivrl
rclb
or
jns
dec
pop
repnz
lcall
mov
in
mov
les
jg
hlt
adc
xor
lock
push
adc
fs
adc
cltd
push
iret
jge
sub
push
mov
adc
xor
cmpsl
xchg
mov
mov
lock
jge
sub
fnsave
add
adc
sti
fidivl
pushf
sub
adc
insl
shl
faddp
cmp
idiv
or
loopne
jecxz
in
xor
loope
sti
jge
cmc
adc
jmp
mov
add
dec
out
and
xor
rolb
mov
sub
loope,pt
lock
andb
or
push
shrl
std
loop
movsl
pop
mov
movsl
jno
test
mov
fwait
aas
fld
push
ret
lods
pop
nop
cmp
push
out
jo
and
inc
push
mov
or
xchg
mov
inc
stos
add
outsl
daa
fcmovbe
mov
popf
mov
push
fsubr
sub
ljmp
jmp
fidivrl
mov
std
fstpt
and
mov
jmp
das
fsubr
and
or
push
jmp
sbb
rorb
sbb
std
aam
lahf
test
and
lods
or
xor
lcall
ret
sbb
cmc
sbb
in
sahf
test
data16
dec
and
inc
test
add
sbb
mov
xchg
sahf
or
adc
sbb
repz
add
dec
pop
xor
aaa
jns
inc
cli
push
dec
pop
out
test
mov
imul
aam
nop
fildll
pop
sbb
dec
xchg
xchg
lcall
cli
jp
out
int3
jle
sarb
daa
and
cwtl
loopne
into
mov
lret
push
and
insl
mov
clc
lea
add
addb
ret
bound
mov
lock
or
lea
aaa
xchg
push
cltd
hlt
call
cmp
xorl
jne
inc
sub
leave
and
mov
push
adc
sti
icebp
in
test
push
mov
xlat
or
fistpll
inc
xchg
aaa
mov
push
push
pushl
jbe
imulb
dec
shl
repz
sar
lret
das
xor
ja
leave
and
pmullw
add
jae
rcrl
roll
mov
je
dec
leave
sub
push
and
xor
aad
out
add
hlt
or
xchg
stos
mov
mov
mov
sbb
cmc
mov
inc
test
mov
jns
cmp
xchg
mov
rcrl
ffreep
lods
test
pop
insl
addl
push
mov
ss
mov
add
and
jecxz
cmpsb
sbb
subb
cmp
iret
mov
xor
test
add
call
xor
pop
cmpl
shrl
sbb
ja
inc
stos
sbb
add
adc
out
pop
jg
mov
cld
lock
stos
scas
mov
xchg
and
insl
pop
addl
test
imul
jge
or
mov
inc
xlat
sarl
add
push
mov
pop
fiaddl
aam
push
bound
xchg
add
scas
jbe
jne
sub
hlt
fwait
jge
xchg
fiaddl
mov
mov
das
dec
dec
icebp
flds
std
mov
pop
sub
inc
ds
push
js
xlat
testl
xor
sbb
test
adc
fnsave
mov
mov
fisttps
adc
jne
and
lret
fidivrs
jecxz
es
mov
imul
inc
push
pop
iret
mov
ss
mov
inc
or
xor
jmp
pop
jne
insb
flds
dec
sbb
mov
lcall
rcll
stos
or
xor
outsb
orb
rcl
xor
adc
mov
pop
fcmove
sbb
loope
stos
adc
cwtl
leave
out
ret
testb
cmp
cld
hlt
ficoml
mov
ficoml
das
mov
push
clc
shrl
push
test
xor
sbb
mov
mov
mov
and
sub
ljmp
out
out
dec
aad
mov
cmpsb
cs
bnd
pop
loopne
pop
dec
clc
dec
mov
iret
ret
loopne
lss
xchg
add
adc
psrlw
imulb
test
mov
jno
jmp
outsl
out
sub
out
loop
and
jo
jnp
jl
or
xor
addr16
push
mov
int3
mov
cmp
pop
mov
aad
dec
sbb
jmp
out
and
mov
adc
imul
cmp
rcll
mov
inc
mov
ds
dec
outsb
mov
mov
dec
mov
popa
push
jbe
test
push
cmp
scas
ljmp
or
and
jecxz
test
adc
or
adc
jecxz
js
adc
pop
pop
aas
jb
lahf
insb
cmp
add
xchg
cmp
add
pop
pop
pop
pop
jae
mov
ficompl
push
test
cmpsb
lds
lods
test
insb
mov
in
out
jbe
fistl
cmpsb
xchg
movq
aas
pop
insl
lods
mov
jl
push
shrl
nop
mov
mov
movsb
outsl
popa
inc
mov
dec
test
fdivs
xchg
mov
xchg
pusha
push
loope
pop
mov
mov
dec
test
imulb
sbb
jae
pop
cmpsl
dec
fildl
js
cmc
adc
xor
inc
es
sub
sbb
aaa
mov
jecxz
sbb
dec
call
push
sbb
adc
lock
hlt
loopne
dec
fisttpll
fucomi
push
filds
nop
or
or
mov
stos
aaa
std
pop
loope
subl
push
push
inc
std
mov
inc
pop
jno
leave
retw
or
or
or
sbb
sbb
cmpxchg
or
dec
mov
cmpsb
fwait
aam
addr16
add
push
outsl
inc
pop
ja
xlat
out
jecxz
xor
inc
ret
lods
mov
push
loopne
js
fbstp
and
cmp
mov
inc
cmc
xor
lcall
test
lods
ja
sbbb
mov
repnz
mov
push
mov
ljmp
push
inc
mov
push
xor
push
mov
loope
scas
pushf
fwait
aam
mov
fstl
inc
test
orb
jl
ljmp
mov
inc
mov
cld
mov
arpl
xchg
cmpsb
cltd
mov
pushf
jg
stos
sbb
cmpsl
repnz
cmc
jo
outsl
popa
and
imul
push
sbb
xchg
dec
fiadds
mov
cmc
inc
cmp
fwait
inc
lahf
je
xor
or
sarb
mov
leave
mov
jecxz
jp
adc
sub
pop
sbb
scas
mov
andb
inc
insl
outsb
out
cmpb
pop
or
push
xchg
push
bt
cli
fst
push
jmp
adc
cmp
rcll
jbe
xchg
sub
enter
sbb
fisttpl
leave
push
jns
dec
push
sbb
jp
jnp
xor
jne
xchg
adc
or
shlb
loope
aad
mov
hlt
nop
jns
and
or
sbb
out
sbb
jle
lea
rcl
mov
sbb
mov
inc
ret
call
pop
ja
mov
cmp
les
std
inc
fldl
jb
xor
and
outsb
xchg
jge
insl
shrl
dec
sbb
aad
jne
sbb
adc
mov
fidivrl
cli
cltd
cmp
in
sub
sbb
aad
dec
mov
sub
out
mov
addb
mov
pop
js
sub
sub
mov
gs
and
mov
lds
inc
xor
insl
add
or
insb
xchg
jbe
std
push
jne
mov
cltd
mov
rcll
fbld
add
in
pop
push
push
lods
in
frstor
mov
pop
jle
mov
imul
mov
mov
mov
sub
insl
clc
insl
icebp
inc
push
dec
cmc
lcall
xor
push
js
sbb
bound
xor
sub
mov
cmp
add
lock
lea
inc
scas
cmpsb
pusha
loop
sbbl
test
fisttpll
inc
sub
mov
popa
and
mov
clc
cli
clc
and
stos
pop
cs
mov
mov
jne
pop
xor
insb
mov
lahf
or
hlt
iret
inc
aaa
lods
sbb
adc
lea
hlt
test
lds
push
fs
mov
sub
lret
inc
mov
fwait
push
adc
mov
mov
imul
xor
ds
mov
test
mov
or
call
test
clc
fs
sub
mov
and
mov
pop
push
and
aam
das
mov
sub
outsl
adc
ds
divb
cmpsl
clc
mov
idivb
fst
sub
mov
movb
int
sub
inc
add
test
jbe
xlat
sbb
imul
mov
add
xor
sbb
pop
ja
adc
rcr
pop
int3
jns
jbe
js
inc
or
js
pop
mov
fstpt
cmp
xor
push
push
pop
fsubr
outsl
push
ret
out
jmp
cmp
rolb
mov
xchg
sti
jo
in
gs
orl
sbb
lods
lock
shrb
rcrl
sbb
pop
shrl
imul
adc
adc
push
jmp
push
imul
jge
mov
icebp
adc
mov
sub
in
clc
adcl
aad
loop
pop
nop
rcl
pop
dec
ja
push
pop
mov
mov
pop
pop
or
rcrl
rorb
adcl
add
into
mov
roll
mov
inc
cli
pop
adc
orl
adc
lea
jge
sbb
fs
push
xor
xor
cs
jo
out
sub
fstp
mov
fnstsw
js
into
dec
insl
cs
sub
cmp
fdivs
pop
hlt
je
jb
jae
xchg
cmp
fistpl
orl
xchg
push
shrl
pop
jns
push
mov
push
loopne
outsl
dec
mov
add
pop
les
cmpsl
mov
sub
arpl
mov
insl
addr16
cmp
jns
adc
pop
fmul
adc
addr16
iret
fcomps
jne
and
mov
pop
mov
popa
adc
adc
inc
jle
inc
jne
loopne
mov
inc
popl
push
test
sub
nop
popf
cmpsl
xor
pop
bound
out
fidivl
cwtl
mov
fcmovbe
scas
push
test
stc
cmp
sbbl
xchg
outsl
and
popa
or
jmp
mov
fs
out
dec
shrb
int
push
xor
mov
mov
jecxz
loope
xchg
jg
popl
in
mov
or
lahf
jbe
sbb
call
addr16
add
fdivrs
lahf
xchg
xor
push
sbb
push
lahf
cli
mov
in
lea
lds
fadd
cmp
cld
leave
push
aam
inc
insb
xor
je
xchg
lods
out
hlt
int3
insb
fdiv
stc
into
pushf
xchg
daa
fidivs
jae
bound
xchg
pushf
repnz
dec
test
add
pop
and
sbb
ljmp
daa
movsl
leave
in
mov
and
addr16
xchg
cmp
dec
and
cmpsb
adc
and
pop
mov
es
rol
rcrl
ret
mov
pop
cmp
out
or
push
rclb
jg
lods
jbe
insb
and
bound
cmc
cmc
insl
daa
mov
test
inc
aaa
pop
int
inc
jbe
adc
outsl
test
lock
mov
sbb
add
les
idivb
clc
mov
and
mov
jo
mov
stos
jmp
fmull
ja
dec
push
sbb
jo
mov
into
aaa
orl
jmp
out
pop
ret
neg
sbb
xchg
lock
fidivs
cmp
mov
push
or
add
cmp
lret
insl
enter
mov
dec
xor
test
iret
movsl
jl
scas
mov
mov
dec
add
adc
adc
xchg
mov
orl
pop
push
jo
push
push
dec
jmp
clc
negb
adc
leave
ret
lcall
add
int3
push
call
loope
add
test
xchg
ds
xchg
or
xchg
insb
daa
mov
in
ss
mov
icebp
jbe
or
inc
xor
dec
pslld
nop
xor
mov
iret
fisttpll
add
lods
xor
aad
mov
insb
lret
jo
add
aam
xchg
sbb
stos
mov
addr16
data16
jne
mov
sbb
xchg
jbe
sub
ss
cmp
jno
leave
test
mov
xchg
testb
ror
aas
in
jmp
mov
lcall
imul
leave
mov
dec
leave
out
mov
cmp
cmp
out
imul
inc
ret
mov
int
mov
loopne
pop
and
jne
fstpl
js
nop
sub
jecxz
ret
push
xor
inc
xlat
ss
mov
sbb
push
sub
push
fdivs
clc
adc
xlat
cmpsb
imul
ja
xor
cmc
xlat
mov
ja
mov
cmp
cmpsl
jecxz
sar
test
dec
xchg
jge
xorl
movb
stos
jo
push
pop
xor
lock
cmpsb
pop
stos
pushf
add
fwait
dec
add
jns
sub
dec
push
xor
clc
andb
push
xchg
inc
pop
pop
insb
and
sarb
jbe
lcall
push
cmp
inc
fistpll
aas
xlat
imul
mov
ss
int3
cli
jae
dec
lea
jmp
outsl
cmpsl
mov
scas
xchg
sbb
adc
test
xor
imul
shlb
cmp
arpl
fldcw
xchg
or
movsb
icebp
scas
sbbb
push
test
adc
adc
clc
aad
lods
out
and
xor
decb
jge
in
cmpb
ja
insb
xor
jle
stos
icebp
test
insb
mov
fwait
bndstx
mov
inc
popf
lock
clc
rol
inc
xchg
dec
push
insl
nop
stos
aas
xor
aad
into
fnstsw
int
lock
out
xor
push
fstps
neg
sub
mov
add
sbb
call
dec
ja
adc
in
prefetchw
ffreep
cs
dec
sbb
push
out
ds
xor
call
push
ret
mov
xor
push
or
lahf
xchg
mov
imull
movsb
xchg
and
sbb
outsb
pop
pop
dec
dec
jns
and
lcall
sti
aad
daa
call
and
ljmp
sti
jns
stos
xor
mov
jl
fwait
mov
jae
mov
xor
hlt
add
dec
push
int3
pop
adc
jnp
and
in
in
aam
sub
jbe
out
clc
jmp
adc
mov
orl
push
sahf
sub
sub
fstpl
mov
or
inc
jge
mov
into
ss
aaa
out
fmull
repnz
mov
dec
outsb
ds
mov
mov
pusha
sub
stos
fisttps
cmp
roll
and
sbb
fdivrs
es
sbbl
push
xchg
ss
loopne
les
fiaddl
les
mov
lcall
jo
jecxz
jp
jmp
aam
stos
insl
mov
decb
lret
mov
aaa
pushf
inc
fildl
shrb
push
add
jne
dec
hlt
movsl
pop
dec
jns
pop
mov
add
imull
in
mov
mov
rcll
mov
inc
or
mov
inc
addb
hlt
mov
call
daa
pop
notb
out
mov
clc
pushf
ds
fwait
mov
mov
sbb
mov
cmp
push
dec
lret
test
imul
sbb
xchg
and
cli
popa
mov
jb
cmp
sti
push
sti
popf
xor
js
xor
data16
cmp
cli
jp
jbe
ret
jge
fistl
add
mov
fisttps
ret
xchg
sbbl
or
mov
imul
insb
std
hlt
sahf
cwtl
repnz
pop
je
add
add
dec
loope
sbb
jbe
inc
aaa
pop
ret
dec
xor
popa
jns
sub
pop
add
pop
pop
mov
jo
jle
lcall
shlb
pushf
sub
pop
mov
push
jl
mov
inc
movsl
sbbl
adc
lock
aad
popl
lcall
xor
and
rcl
fwait
push
and
movsb
aaa
inc
out
clc
loopne
leave
mov
hlt
repz
jbe
loope
enter
mov
shr
xchg
jmp
outsb
mov
jmp
jle
push
shrl
mov
adc
mov
jg
jbe
mov
lods
push
jg
xchg
ss
xchg
scas
lods
and
lcall
jae
sar
shrb
pop
xlat
xor
fidivrl
test
mov
data16
ret
aas
rcrl
and
push
outsb
mov
iret
jo
inc
push
aas
es
jge
inc
push
int
fcomip
push
jle
fs
jl
mov
rcrb
out
dec
movhps
aaa
movsb
pop
jmp
mov
aas
fcomps
jbe
imul
cmp
jae
push
and
ret
cmc
fbld
sbbl
movsb
out
jnp
pop
xchg
cwtl
test
insb
mov
popf
sbb
notl
je
jg
ret
out
movsl
push
jp
cmp
enter
hlt
insb
ret
cmp
xorl
jecxz
mov
or
in
daa
sbb
xchg
clc
push
sbb
mov
lods
ss
and
or
mov
ret
push
clc
loop
in
pop
daa
pop
cmp
push
imul
mov
ss
dec
fwait
jo,pt
pop
or
dec
jbe
xchg
cwtl
mov
or
pop
adcb
jnp
xchg
lret
adc
pop
dec
push
dec
and
adc
out
mov
cmp
inc
dec
cmp
push
inc
mov
cs
adc
insl
inc
arpl
out
test
lock
outsl
fs
out
or
das
xor
iret
or
mov
or
sbb
mov
call
test
lods
cmpsb
das
cmc
ss
outsb
add
adc
movsl
pop
xor
sbb
dec
scas
or
insb
je
stc
inc
mov
ja
sub
ds
cwtl
dec
test
mov
loop
mov
shl
insb
into
into
or
pop
cmp
mov
sub
popa
mov
jb,pt
xchg
add
aaa
mov
bound
lret
movzbl
mov
push
movsb
in
sbb
xchg
jnp
mov
pop
xlat
cmp
and
mov
dec
into
fistl
sub
fdivrs
iret
add
push
push
inc
mov
out
mov
dec
add
push
cs
cmc
mov
pushf
mov
xchg
jmp
aas
add
stos
stos
aas
cmpsb
xor
jp
jl
jae
add
or
into
orl
xchg
push
inc
push
fdivr
bnd
aas
cmp
xor
dec
cld
lret
cltd
sub
repnz
inc
dec
sbb
and
xor
push
jno
fcmovnu
mov
cmp
mov
xor
scas
faddl
dec
lods
test
jno
mov
out
out
dec
repz
inc
mov
rcrl
enter
mov
add
mov
xor
imul
lret
aas
nop
jmp
cs
fisttps
inc
sbb
add
js
lods
mov
aaa
iret
adc
sti
dec
loop
fimull
mov
scas
outsb
push
mov
lods
lret
ss
mov
adc
sub
jmp
and
cltd
in
dec
dec
mov
je
js
and
lods
mov
icebp
mov
xchg
adc
out
jl
push
fdivs
mov
movsl
jne
out
and
sub
loope
out
mov
xchg
sahf
mov
fnsave
pop
push
test
xor
or
xor
xchg
sbb
sub
jbe
icebp
lds
rcl
xchg
rolb
pop
bound
push
fnsave
sarl
cwtl
loopne
notb
xchg
xchg
sbb
cmpb
push
sub
sahf
test
add
out
popa
jae
cmpl
cmp
mov
sub
mov
loop
and
add
data16
xorl
xor
lods
sub
sbb
testb
add
add
cmp
mov
mov
sub
fmul
push
and
pop
out
scas
xor
leave
cmpsb
jnp
jae
sti
push
mov
or
xlat
mov
pusha
ret
jnp
lahf
mov
mov
dec
mov
aam
sub
jl
ret
subl
lock
pop
sub
or
pusha
cwtl
mov
inc
jmp
lock
clc
fs
dec
mov
sbb
xchg
sub
hlt
rolb
js
mov
sahf
and
mov
stos
xchg
aad
and
lods
jne
inc
jmp
aad
add
jnp
jmp
jl
int3
scas
js
inc
rorb
jl
push
inc
dec
mov
pop
sbb
sarb
in
add
aas
add
aam
scas
fistl
ss
aas
pop
or
mov
sbb
arpl
cmc
jmp
sub
xor
cmp
fistpl
aam
pop
add
idivl
mov
mov
decl
mov
iret
stos
in
pop
test
pop
fwait
fs
aam
mull
jecxz
jle
movsb
ret
into
shl
and
dec
dec
nop
pop
inc
pop
ja
inc
jecxz
lock
mov
je
push
jnp
sti
imul
out
pop
mov
xor
lock
inc
lds
outsb
test
mov
ja
out
mov
les
mov
jecxz
xor
jg
inc
ja
in
add
fisttpl
lea
xchg
or
ja
or
rol
sub
mov
and
sbb
imul
xor
mov
mov
ds
lret
mov
sub
ffree
cli
xchg
sti
fsubl
add
xchg
stos
sub
fmull
int
xor
js
in
mov
lods
popa
mov
push
pop
clc
fcom
scas
imul
fwait
ja
mov
sbb
das
mov
dec
push
inc
adc
mov
cwtl
data16
sbb
ljmp
loope
rcrl
pop
in
cltd
inc
sbb
loope
fidivl
cmp
shlb
mov
ret
incb
mov
stos
jae
jge
push
js
sbb
pop
pop
cli
lret
sub
push
cmpsb
pusha
xchg
mov
ja
jg
mov
xchg
or
xchg
sbb
jle
lea
or
cli
das
or
mov
in
xchg
inc
xor
push
pop
mov
cmc
hlt
call
push
jnp
pop
out
daa
xor
addb
sub
mov
inc
sub
dec
pop
pop
aam
push
push
push
pop
hlt
lock
fistl
xor
in
subb
add
mov
or
mov
push
test
lret
xchg
pop
and
push
mov
add
xchg
sbb
subl
pop
sbb
sarl
das
adc
add
rcrl
fnstenv
dec
fstl
daa
jb
mov
sbb
xor
sbb
sub
mov
cld
scas
inc
pop
lret
in
dec
dec
jl
sarl
outsl
jecxz
adc
cmp
inc
fidivs
hlt
cmp
ja
rorl
scas
lods
out
loope
sub
jo
xlat
shlb
push
rclb
cld
push
mov
aad
mov
and
cmpb
imul
test
jnp
mov
fmuls
cmpsl
je
hlt
jmp
push
xchg
dec
cmp
sahf
ret
imull
cmp
cmp
cwtl
jb
mov
or
pop
je
mov
add
inc
dec
cli
in
lret
or
jle
and
add
mov
cmc
jbe
mov
adc
paddusw
lds
xor
jbe
jae
test
in
cmp
addl
outsl
xor
jecxz
call
cmp
rcrl
mov
mov
inc
inc
sub
ljmp
hlt
rcl
sbb
add
jp
add
std
lock
xchg
add
loop
addr16
jae
xor
pop
clc
or
pop
push
xchg
sub
ficoml
rcrl
xchg
gs
adc
inc
cmp
pop
xchg
adc
fidivl
jno
addb
cmpl
and
iret
fisubrs
sub
fadds
xor
ljmp
jge
mov
lds
mov
adc
push
or
ss
cmp
add
in
xchg
andb
cltd
adc
clc
mov
jmp
imull
sbb
cmp
inc
mov
pop
aas
xchg
es
mov
fidivrs
add
pop
ds
fcompp
cld
scas
jl
in
lea
outsb
mov
dec
lret
fdivrl
fidivl
cmpsl
popa
jecxz
call
ficompl
idiv
jge
fildl
xchg
push
adc
aam
rolb
cmp
mov
ret
mov
sbb
loop
rorb
mov
mov
clc
mov
push
mov
fistpl
shlb
jmp
mov
sub
jp
inc
testl
fisubrl
jle
ret
or
mov
push
dec
mov
je
out
jb
jge
inc
or
mull
outsl
pop
or
inc
pop
sbb
add
mov
loopne
jp
dec
mov
fmull
push
xchg
das
xor
or
shr
push
jne
aaa
leave
mov
pushw
push
lock
mov
idivb
mov
in
mov
mov
dec
or
scas
mov
daa
cmp
in
scas
mov
xor
pop
gs
or
cmp
lods
xor
pop
sub
cwtl
xchg
pop
outsb
xor
aam
mov
add
or
negb
sbbl
xlat
call
inc
add
lcall
mov
lds
ret
jns
scas
jne
mov
gs
ja
aad
cwtl
lahf
inc
push
or
mov
ss
mov
test
cmp
lock
add
repz
sbb
sub
repz
andb
js
push
mov
daa
mov
repz
insb
dec
icebp
aam
aam
outsb
push
inc
aas
mov
and
pop
xlat
xor
int
pop
ja
jo
sub
fnstsw
call
inc
loop
out
repz
rorl
je
jo
shl
or
sbb
shr
int3
ljmp
mov
sub
jbe
mov
or
jmp
mov
lods
pop
int3
stc
fwait
jge
dec
lock
and
mov
pusha
push
push
mov
fbld
fwait
adc
push
hlt
imul
push
cld
jg
gs
clc
add
push
fidivrs
test
addr16
andb
xor
sub
outsb
mov
outsb
fldt
dec
psllw
ficoml
pop
jbe
pop
lret
or
pop
sti
sub
out
pop
sbb
fstpl
ret
test
mov
jmp
fs
adc
stc
dec
xor
fdivrp
sub
ret
push
jl
jle
mov
shl
vmovaps
push
jbe
cmc
test
cli
repnz
std
sahf
fdiv
notl
insl
dec
stos
cmc
daa
stos
pop
jle
pop
push
mov
stos
cmp
rcrl
adc
pop
int3
mov
out
cmp
stos
ss
addl
jmp
mov
inc
adc
clc
fmull
inc
or
xchg
cmpsl
orb
je
outsb
mov
push
punpcklbw
fidivl
fldenv
sub
jmp
mov
bound
loop
push
xchg
sarl
stos
sbb
mov
pop
stos
push
xchg
outsl
xchg
mov
inc
in
ljmp
sbb
loopne
test
movsb
push
mov
mov
ss
xchg
cli
adc
clc
mov
mov
inc
hlt
lock
std
mov
adc
ret
leave
jno
out
inc
test
pop
daa
or
loopne
jge
adc
push
jbe
int
adc
out
mov
repz
scas
jmp
xchg
sbb
pop
movsl
mov
add
xchg
out
push
push
pop
scas
pop
adc
push
loope
shrl
dec
neg
dec
in
mov
insb
sti
mov
sbb
push
adc
and
xchg
mov
inc
arpl
lock
pop
add
add
daa
ret
clc
cmp
xchg
push
lods
xlat
fisubrs
cli
push
ja
aam
sahf
testb
jno
add
cs
jbe
fdivl
je
cmpsb
xchg
loop
hlt
jbe
scas
xchg
std
sbb
jb
or
mov
jl
loope
cmp
data16
decl
pop
or
sub
cmp
ror
movsl
scas
and
fsubs
xchg
scas
fldt
cmp
outsb
jge
mov
lea
xchg
add
call
inc
dec
inc
and
pop
ret
inc
push
int
mov
or
iret
inc
add
imul
loopne
fdivs
mov
fcoms
mov
mov
dec
out
xchg
mov
int
ret
dec
pop
fwait
scas
and
frstor
rcrb
fwait
ss
mov
ja
lret
int
add
push
jge
xchg
xor
mov
pop
in
int
inc
mov
jmp
or
xchg
inc
aas
je
ja
jecxz
bound
ss
mov
jecxz
or
xchg
ret
test
push
push
cmc
push
hlt
mov
idivl
add
mov
xor
pop
cmp
push
enter
test
jle
out
popa
iret
imull
lods
add
lret
lods
sub
ja
cmp
xor
mov
push
ret
lahf
test
fcompl
jns
ja
nopl
inc
push
imul
ret
add
push
aaa
xor
test
jo
mul
adc
jle
push
mov
or
dec
inc
inc
data16
and
aad
mov
sbb
in
ret
dec
jae
push
jnp
xor
fisubrl
lcall
pop
xchg
cs
loope
adc
ds
cli
in
sub
rcll
jbe
mov
inc
out
xchg
sbb
lcall
movsb
loope
es
call
dec
scas
jl
ret
add
push
int
popf
xchg
xor
rol
out
inc
lock
cmc
cmp
mov
cmp
sbbl
ret
cmpsb
sub
push
cmc
adcl
ret
jbe
mov
xor
sarb
ss
jmp
fs
xchg
scas
arpl
jl
add
mov
outsb
sbb
in
test
mov
sub
int
bound
adc
insl
lock
cs
fstl
orl
mov
mov
cmp
cmc
arpl
ds
out
das
test
pop
aad
jns
hlt
mov
inc
adc
sbb
rolb
mov
fnstenv
xor
imul
test
mov
test
inc
jmp
cli
add
pop
or
scas
loope
mov
mov
adcl
stos
ret
data16
add
mov
sbb
rorl
lahf
add
cmp
inc
icebp
jecxz
pop
sbb
ja
add
lahf
cmp
adc
aad
sbb
inc
ja
leave
sbb
scas
jo
shlb
dec
adc
push
aaa
dec
aaa
mov
push
ret
cmpsl
enter
mov
incb
push
stos
ss
sub
or
push
sub
bsf
xor
js
maskmovq
testl
xor
insb
daa
in
xlat
xchg
gs
jp
mov
bnd
mov
std
stc
aad
cmc
mov
jo
xchg
int3
shlb
test
insb
movsl
ljmp
cmp
mov
int3
hlt
bound
hlt
push
mov
lcall
icebp
sub
lea
cmp
cltd
dec
cmpsl
fucomip
popa
or
icebp
cmp
stos
int
in
imul
lds
or
das
cmp
sbb
mov
jb
sub
sarb
addb
lods
xchg
inc
xor
enter
arpl
xchg
lds
lea
sti
pop
add
pop
xor
push
imul
jecxz
mov
sub
fs
mov
cmp
sub
shlb
push
scas
mov
mov
sbb
jge
mov
mov
xchg
fisttpll
xor
xchg
sbb
stos
movl
fidivrl
xchg
mov
rorl
cmp
jb
mov
pop
mov
mov
pop
pop
dec
repz
fninit
imul
mov
sub
mov
add
jmp
inc
dec
mov
pop
insb
xchg
pop
sarl
push
push
mov
insl
call
ds
leave
cs
mov
in
cli
cmpsb
push
pop
dec
jo
shr
scas
adc
mov
outsl
clc
mov
mov
add
sbb
cmp
mov
pusha
dec
mov
into
pop
and
cmpb
call
cmp
test
orb
push
xor
loopne
xor
ss
out
hlt
adc
in
cmpsl
cmpsl
dec
into
and
or
loopne
shlb
mov
or
pop
mov
pushf
getsec
test
jle
adcb
shr
fsubrl
push
addr16
inc
push
outsl
ret
cmp
scas
shll
and
popf
sahf
push
dec
mov
ret
xor
clc
xchg
sub
or
dec
cld
mov
pop
and
add
jne
insl
cmp
jae
ret
cmp
insl
outsb
insb
mov
inc
add
adc
sub
das
in
push
dec
mov
pushf
inc
lea
testb
cs
inc
push
int
sbb
les
packsswb
aad
jge
xlat
cmp
loopne
xchg
pop
xor
mov
adc
testb
adc
adc
pop
loope
jmp
pop
out
dec
shll
mov
cmp
or
mov
ljmp
aaa
xor
sahf
or
gs
adc
jne
popa
notl
outsb
jecxz
inc
aaa
loopne
repz
pop
js
cmpsb
push
lcall
add
xchg
insb
je
dec
popf
sbb
push
inc
pushf
mov
jno
jmp
lret
cmpsb
jecxz
xchg
fstp
mull
jg
insb
push
call
xchg
cmp
pop
aas
lahf
clc
sti
mov
lods
mov
pop
in
jmp
add
dec
xlat
mov
lret
popf
enter
xchg
dec
jnp
data16
leave
push
mov
jnp
push
movsb
fdivrl
sti
mov
jmp
adc
or
inc
push
pop
outsb
add
pop
aad
cmp
sub
sbb
dec
add
pop
sbb
pop
jo
je
aaa
push
add
and
mov
mov
pop
push
mov
out
fdivrs
or
push
stos
addb
lea
imul
imul
dec
inc
xor
insb
outsl
jmp
push
fistpl
mov
mov
ja
cmp
sub
ror
imul
push
lcall
ret
sub
mov
cmpsl
lea
stos
test
js
sbb
daa
mov
add
fdiv
fstpt
cmpsl
and
pop
add
lret
adc
or
bound
xchg
cli
mov
ret
adc
mov
or
dec
fistpl
add
out
aam
cmp
xchg
test
lock
sub
adc
mov
lret
push
notl
movsb
and
cmp
push
out
aad
xor
test
out
adc
imul
push
lock
insl
sub
out
jge
or
dec
mov
jb
test
cmp
mov
or
mov
push
cmp
insl
cld
dec
insb
cmp
aam
dec
jge
cmp
mov
pop
loope
xchg
sub
mov
hlt
cmpsb
or
ficomps
jne
push
sbb
and
divl
lea
xorl
popf
sti
call
ja
fisttpl
adc
test
int
dec
lds
loopne
pop
xlat
xor
mov
loope
lods
or
fnstsw
jle
sbb
lcall
mov
cwtl
jne
add
data16
outsl
push
or
jl
mov
mov
decb
aam
sbb
mov
lods
icebp
andb
test
rcr
sahf
mov
lods
roll
les
pop
pop
pop
dec
jge
jmp
jmp
mov
dec
phsubw
sub
aad
mov
jo
in
adc
push
mov
add
std
add
std
mov
cmc
mov
setne
sbb
bound
lcall
mov
mov
adc
scas
lock
mov
outsl
divl
scas
pop
popf
pop
push
cmp
mov
fnstcw
cmpsl
ds
cmp
ss
xor
dec
push
mov
adc
pop
push
into
push
dec
out
push
ret
int3
aam
stos
cli
mov
add
pop
arpl
sarl
push
xor
ds
test
scas
daa
push
push
and
push
arpl
subl
push
add
jecxz
xchg
fisubl
rorl
movsl
cmc
fwait
jl
xchg
outsl
out
aaa
test
or
je
xlat
xchg
jmp
lret
mov
scas
outsb
sti
push
das
in
mov
fdivrs
and
push
push
lcall
repz
jg
inc
scas
xchg
scas
movsl
jge
arpl
jb
add
jmp
rolb
jmp
cmpsb
pop
mov
inc
js
call
insl
adc
cmp
dec
cmp
jl
fstpt
or
inc
push
mov
mov
inc
pop
das
cmp
in
xor
aad
mov
loopne
out
xchg
fdivs
cmpsl
js
dec
sub
mov
loope
sbb
mov
jp
adc
mov
xor
daa
xchg
std
adc
std
push
ss
scas
jmp
shl
in
add
fsubl
xor
add
out
enter
rcl
mov
or
mov
mov
add
pushl
call
sub
in
push
cli
stos
xor
adc
dec
jno
scas
and
cld
jge
mov
lods
andb
fisttps
jbe
xor
inc
mov
adc
pop
push
test
fdivrl
xchg
int3
or
lods
and
aaa
sbb
dec
or
jecxz
and
popl
roll
imul
loope
jmp
testb
push
dec
pop
inc
scas
cli
fldz
cmpsl
fwait
loope
xchg
repz
sub
and
je
mov
adc
stos
jmp
out
push
dec
push
rolb
aam
test
xor
xchg
daa
sarb
ret
outsb
adc
or
roll
mov
jecxz
pop
scas
sahf
mov
ljmp
dec
and
cli
mov
and
cmp
sub
or
sahf
jno
fisubl
jne
push
and
cli
and
xchg
stos
jne
sbb
in
mov
mov
ret
cmp
pushf
jb
xor
mov
pop
icebp
jge
fsincos
sti
sbb
xchg
daa
pop
jle
outsb
push
xor
xchg
insb
out
cmc
outsb
cmp
ret
xchg
xor
out
in
cmp
push
test
push
jp
clc
push
inc
sub
push
cltd
clc
fisubl
mov
add
xchg
inc
jl
out
outsl
sbb
imull
sahf
lret
sbb
adc
lods
pop
aad
xor
xchg
sub
clc
fldt
aam
cmc
movsb
cmp
jp
cld
jmp
adc
je
sbb
add
sbbb
cmc
cmc
into
repnz
loope
insb
adc
loop
mov
xchg
mov
divl
or
mov
cmp
cmp
inc
sub
jl
pop
mov
lock
hlt
mov
inc
daa
rol
test
jle
cmp
test
dec
inc
cmp
mov
sub
mov
push
inc
test
add
sbb
in
cmp
push
adc
in
jnp
xlat
rcrb
packsswb
out
aad
mov
lahf
add
mov
mov
in
pop
mov
add
sbb
repnz
push
push
fmuls
addl
movsb
sti
xchg
loop
xor
in
inc
or
mov
jle
call
xchg
xchg
and
dec
adc
mov
repnz
inc
mov
ficompl
inc
cmp
fidivrl
cmp
push
sub
in
mov
aad
movsb
push
pop
xlat
sbb
sub
or
sbb
and
lods
insb
mov
add
jle
pop
xchg
cli
cmc
stos
sahf
mov
movsb
push
mov
cmp
add
lcall
jnp
mov
clc
ret
jp
xor
insl
loopne
or
gs
pop
fstps
mov
xor
sbb
add
lds
hlt
int3
push
mov
mov
sub
ljmp
and
mov
dec
push
sbb
or
fwait
jle
inc
xchg
xchg
jnp
into
add
es
aas
mov
pop
push
scas
xor
call
pop
outsb
pop
fadd
xchg
pusha
push
mov
xor
fwait
sub
inc
or
sbb
mull
fst
dec
push
std
cmc
lds
gs
mov
pop
sub
scas
pop
jle
fadds
sahf
and
es
pop
sbb
xchg
cmp
xchg
inc
out
sbb
or
out
add
pop
jnp
or
mov
jmp
call
cmp
dec
mov
push
sbb
dec
mov
adc
in
loop
xchg
add
in
jo
jl
clc
mull
pop
push
inc
cli
scas
mov
cld
add
fmul
inc
inc
cltd
sub
jae
mov
cmpsl
das
push
xchg
bound
ret
icebp
arpl
jo
pop
mov
push
sarl
jo
cli
sub
jl
mov
cmpsb
cld
mul
loope
sarb
shll
and
cwtl
add
scas
addr16
pop
and
mov
cmp
sub
shll
sbb
sbb
mov
fldl
jnp
leave
push
loope
xor
in
in
sub
cs
es
inc
je
and
arpl
dec
hlt
lock
cmpsl
mov
hlt
pop
mov
pop
inc
sub
inc
in
xor
jno
mov
ficoml
stos
dec
or
ret
inc
scas
and
mov
shlb
jmp
lods
pop
test
dec
ja
hlt
js
scas
mov
cli
push
mov
mov
xchg
push
pop
jns
outsb
test
inc
lret
jecxz
popa
hlt
orl
pop
or
mov
mov
fs
ds
adc
and
insl
xor
lock
sub
outsb
sub
out
inc
stos
cli
cmp
ljmp
loope
inc
in
inc
std
repz
gs
add
stos
into
ret
mov
mov
push
insl
inc
les
insl
iret
and
in
mov
je
jge
and
sub
xchg
xchg
clc
jg
jp
mov
xchg
add
sbb
pop
fdivs
inc
leave
scas
jo
pop
shll
inc
in
popa
out
pusha
push
je
outsl
sbb
popa
jmp
fdivr
pop
mov
les
popa
test
jbe
test
adc
out
sub
adc
mov
outsb
imul
dec
mov
outsl
jns
sub
mov
inc
test
dec
cmp
cld
jl
mov
or
fstenv
inc
fistpll
aam
jae
xlat
imul
shrb
int3
outsb
aad
ds
stc
and
pop
inc
rorb
inc
mov
fidivrl
lahf
push
rorb
xchg
pushl
xlat
mov
call
xchg
stos
jne
xchg
enter
adc
lds
pop
add
mov
and
fldt
pop
pop
mov
test
loop
and
sub
shrl
ficomps
out
jne
or
dec
xor
out
inc
mov
shrb
fisubl
es
sbb
mull
xor
push
xor
movsb
dec
mov
mov
mov
xor
adc
mov
lret
fbld
out
cmp
xchg
jge
shlb
in
testl
data16
mov
jo
ljmp
jmp
mov
out
jo
xor
jp
add
and
mov
test
fimull
cmc
sbb
mov
out
push
pop
icebp
lods
outsl
jae
pop
fwait
pushf
or
jb
in
push
insl
int
mov
aad
imul
test
and
jge
ret
je
adc
mov
cmp
fildll
push
xor
call
mov
insb
cli
mov
pop
dec
pop
mov
xor
inc
into
push
sbb
mov
clc
lcall
adc
aam
cmc
test
add
sub
in
ret
and
mov
test
divb
in
lds
xor
lahf
mov
pushf
je
in
pop
aaa
mov
jbe
jbe
cltd
add
andl
cmp
cmp
cmc
cmc
lods
sbb
or
idivl
fidivrl
int
movsb
cmpsl
mov
pop
call
scas
jle
cmp
cmpsl
jecxz
mov
aad
mov
mov
mov
pop
aaa
push
mov
mov
jnp
icebp
jg
and
rcrb
mov
int3
jae
inc
push
aaa
mov
les
sub
inc
sub
imul
and
adc
push
pop
xchg
sub
mov
or
arpl
ds
sahf
test
icebp
mov
outsb
cmp
mov
add
js
or
mov
push
int
push
mov
sbb
je
push
and
cmp
subb
add
jle
sbb
rcll
flds
xor
int
cld
enter
in
outsl
cmpl
stos
mov
je
rcl
push
dec
inc
adc
hlt
jmp
mov
add
inc
jo
jmp
fsubrs
pop
sbb
aad
mov
dec
push
and
dec
sub
push
mov
inc
xorl
and
or
xchg
cld
test
ficompl
xchg
clc
ljmp
inc
push
xchg
shr
mov
out
jnp
sub
mov
sub
vmovq
fwait
sbb
stos
push
es
shlb
and
jmp
add
xlat
lods
ja
cmp
fdivrp
icebp
hlt
int
in
push
and
mov
mov
in
mov
stos
adc
inc
and
sbb
mov
and
add
les
ret
jb
in
aam
jne
add
idivb
outsb
jo
clc
out
les
sub
imul
sub
pop
xor
adc
enter
cltd
inc
jge
jge
pushf
aas
mov
fnsave
dec
sbb
inc
ja
das
jb
int
inc
mov
hlt
icebp
lock
lret
dec
dec
lods
mov
sti
or
outsl
pop
jge
cs
dec
rcrb
mov
dec
pop
sbb
mov
push
pushf
lods
addb
int
jecxz
and
mov
rcll
cmp
adc
fildll
inc
push
or
outsl
test
aas
cmp
ja
or
jp
mov
jge
stos
rcll
cs
cmpsb
dec
cmpsb
mov
mov
jg
mov
or
push
int
call
rclb
xchg
incb
xchg
adc
or
pop
popa
pop
mov
push
pop
and
dec
xchg
mov
jp
pop
addl
cmpsb
hlt
cs
pop
mov
jno
jle
mov
pop
fiadds
addr16
or
add
or
icebp
cli
loop
adc
ret
add
aad
and
das
sub
and
test
icebp
adc
dec
mov
pop
lock
in
xor
sbb
xlat
fldl
or
jb
adc
mov
mov
insl
xor
idivl
cli
mov
aas
pop
js
cmpb
xlat
xlat
inc
mov
loope
movsb
popf
mov
cmp
andl
les
je
popf
sbbb
hlt
call
jmp
aad
ljmp
loope
out
mov
cmpsl
xchg
cld
inc
mov
mov
jne
hlt
fcmovnbe
xor
orl
arpl
xchg
adc
jge
dec
outsl
lods
dec
sub
cmc
lods
in
clc
adc
out
jae
out
popf
rcrb
jnp
fs
js
add
stc
addr16
imul
mov
mov
pop
mov
pop
icebp
mov
sbb
cli
movsb
dec
jno
push
arpl
cli
enter
xchg
insl
sarb
lock
shl
jecxz
in
mov
rclb
loop
cmp
mov
xchg
jns
daa
xchg
loop
call
add
dec
into
es
lock
mov
js
sahf
and
lock
jle
sbb
fldenv
shl
inc
cmp
push
dec
fisubl
jp
push
cmovg
popa
out
icebp
mov
sbb
jnp
lods
add
les
push
dec
push
in
mov
mov
sub
adc
push
xor
cs
hlt
xor
sub
aas
xor
jmp
adc
jb
xor
in
inc
out
jge
mov
mov
mov
cli
and
sti
pop
xlat
cmp
jno
adc
dec
mov
flds
cmp
call
insl
mov
jg
cmp
aaa
outsb
incb
sub
cmp
pop
ja
imul
xor
xchg
mov
mov
fists
mov
cmp
popf
in
xor
psubusb
hlt
test
testb
in
cld
push
mov
shll
adc
js
adc
rolb
mov
push
xor
fwait
pmuludq
bound
inc
inc
jne
jae
mov
adc
fwait
cmpsb
push
xchg
rcl
jae
sbb
jno
pop
clc
fisttpll
std
and
ss
out
dec
or
fcmovne
push
mov
outsb
aas
orps
test
fbld
fwait
cltd
add
out
ljmp
jmp
add
pop
sbb
xor
and
rorb
jne
or
add
xor
xor
paddd
and
loopne
scas
filds
ja
fbld
data16
pop
clc
in
mov
pop
pop
orl
xor
aad
sub
xor
mov
cs
inc
pop
lea
mov
frstor
push
add
sub
enter
cmc
aad
or
test
adc
clc
mov
test
loopnew
mov
test
rorb
stos
push
jno
repnz
cmc
cvtps2pi
addr16
dec
das
loop
lea
mov
leave
test
in
xchg
push
enter
inc
cmpsb
inc
loopne
outsb
in
or
jecxz
popa
sarl
jle
cmp
dec
loop
adc
pusha
and
test
out
add
pop
lahf
mov
pop
arpl
sbb
push
ss
addl
aaa
jle
clc
pop
lods
xorl
jge
xlat
out
test
inc
ljmp
lock
rolb
xorl
jp
subl
enter
sbb
jmp
dec
popl
mov
add
cld
ljmp
cmp
sbb
ret
dec
mov
in
jp
mov
xor
pop
cltd
lret
lods
sbb
xchg
mov
mov
fcoml
mov
and
xchg
sub
je
sub
cmpsb
call
lahf
lcall
push
mov
xchg
jne
ffree
xchg
std
sub
out
cmpsl
pop
in
cmp
jp
aas
mov
out
jmp
cmpsl
xor
popf
mov
jp
jl
cmpsb
insl
add
outsl
scas
pusha
mov
inc
pop
pushf
frstor
cmp
pusha
in
mov
push
pop
scas
sbb
inc
mov
mov
ja
loopne
xlat
shll
aaa
fistl
lret
cmpsl
jbe
push
mov
or
lcall
pushf
push
sbb
lea
or
aaa
jae
out
arpl
sbb
cmp
sarb
or
jl
in
ds
ret
sti
lcall
mov
loope
andl
add
imul
and
lcall
data16
sbb
inc
roll
out
xchg
ret
int3
mov
test
or
sub
seto
mov
push
ds
ja
ret
cmp
add
pop
jmp
rorb
je
cmpb
mov
push
and
or
mov
mov
sbb
test
lcall
test
sub
movsl
dec
insb
in
outsb
dec
xchg
and
popf
adcb
mwait
push
and
mov
fstps
mov
icebp
stc
jmp
icebp
arpl
scas
push
stos
mov
mov
and
jle
fisttpll
push
out
mov
fldcw
leave
add
pushf
dec
push
ds
push
rcr
shrb
push
cli
add
shlb
add
negb
mov
cmpsl
and
mov
xlat
mov
mov
mov
insb
mov
sbb
pop
adcb
divl
punpcklwd
xor
mov
sub
hlt
cmp
popl
stos
pop
fsubs
cs
mov
mov
mov
cs
cmpsl
adc
and
jg
js
adc
mov
xor
shr
loope
inc
daa
mov
shl
lods
jmp
stos
sar
lcall
ret
xlat
adc
mov
jns
mov
push
mov
fs
jmp
pop
icebp
mov
cmovae
int3
lcall
pop
sbb
mov
pop
mov
adc
das
cmp
cmpl
pop
xchg
push
sub
inc
insl
jnp
fldt
add
adc
popa
pop
adc
pop
fdiv
lret
es
and
ds
mov
inc
mov
aam
inc
loop
xchg
or
out
lock
pop
xor
aad
test
jmp
add
fcompl
cmpsb
scas
sub
lahf
push
rcll
das
add
lcall
loopne
fldenv
jns
arpl
jp
jp
jmp
mov
xlat
cmc
jnp
mov
and
jl
les
push
ldmxcsr
je
mov
push
inc
cmp
cmp
subl
scas
clc
hlt
push
aam
out
jle
lcall
mov
jmp
fisttpll
mov
test
mov
jl
es
fdivrs
outsb
repnz
pop
in
hlt
pop
adc
divl
mov
inc
sbb
lock
sbbl
movsl
hlt
mov
icebp
std
or
mov
bnd
sub
push
add
xchg
xchg
mov
lea
negb
cmp
sbb
clc
sbb
mov
js,pn
sbb
jo
xor
and
push
ficoml
mov
inc
mull
and
inc
xor
nop
movsl
adc
bound
lret
pop
jl
inc
lds
mov
jp
ja
ds
sub
sub
popf
pop
in
loop
mov
xchg
imul
hlt
mov
sahf
inc
cltd
sahf
jbe
mov
push
xchg
cmp
cmpsb
movsl
mov
fdivl
stc
xor
push
mov
pop
xchg
add
sub
jb
jno
xchg
outsl
test
cmpsb
jl
jno
cmp
add
cmpsb
lcall
ja
mov
and
cmp
mov
pop
insb
inc
insb
js
mov
dec
push
cmovnp
adc
and
mov
ja
ja
fimuls
fdivl
dec
push
addr16
xor
sbb
dec
daa
mov
dec
repz
and
mov
packssdw
xchg
imul
cwtl
mov
pop
popf
push
sbb
mov
cmp
xor
and
jns
or
mov
mov
cmpsl
jge
inc
je
push
cli
cmpsl
mov
sub
mov
dec
addl
scas
outsb
or
dec
popf
stc
push
lods
scas
jne
pop
mov
es
out
sub
ss
inc
jl
mov
sahf
shl
fs
fadd
sbb
leave
cli
test
dec
adc
je
or
repnz
push
lcall
xchg
push
cli
dec
pop
aas
push
mov
dec
stc
xchg
sub
mov
sub
xor
movsl
int3
push
cmp
mov
aaa
and
cmp
std
jge
pop
sub
add
inc
mov
jne
mov
or
cmc
sti
xchg
dec
mov
je
nop
adc
lcall
popf
or
xchg
sbb
adc
ficomps
jle
sbb
jmp
adc
aam
cs
nop
dec
jp
pop
shrb
in
js,pt
clc
in
into
ljmp
fdivr
cli
mov
fists
lmsw
inc
cmp
iret
into
sbb
arpl
xchg
adc
std
call
sbb
ret
or
jmp
pop
or
add
mov
ds
bound
push
mov
mov
lret
sbb
or
lea
inc
and
inc
add
xor
mov
mov
lret
mov
cmp
icebp
sbb
fldt
inc
mov
add
mov
out
jmp
lret
cs
or
sbb
mov
mov
aaa
stos
jnp
aas
mov
mov
movsl
adc
xchg
pop
sbb
call
in
and
je
jo
je
add
icebp
les
dec
daa
xor
xchg
add
jne
mov
into
add
mov
mov
xlat
mov
pop
dec
or
fwait
pop
cs
cld
xchg
jmp
enter
fdivl
jl
sub
pop
enter
ret
jp
jle
fisttpll
fsubr
repz
ja
adc
repnz
fstl
out
xor
rolb
dec
inc
btr
imul
mov
imul
jle
in
shlb
jmp
inc
push
xlat
pop
call
out
xor
clc
mov
loope
sbb
loop
push
sbb
pusha
adc
aad
out
push
mov
test
ss
cmc
pop
push
or
lret
mov
lock
push
sbb
pop
outsb
pop
inc
push
inc
or
out
or
sti
hlt
inc
shll
or
dec
ja
dec
push
dec
test
pop
mov
lahf
xor
push
push
jae
xchg
ffreep
punpcklwd
dec
loopne
or
jg
xchg
push
or
xchg
lret
xchg
mov
cmp
cmp
pop
sahf
or
push
push
pinsrw
cmp
lds
loopne
sbb
sbb
outsb
jmp
add
push
push
pop
inc
jno
shl
icebp
test
movsl
inc
add
push
fldl2e
ret
jo
push
ret
mov
inc
test
sub
scas
mov
popf
xchg
ljmp
fsub
sbbl
xor
outsb
not
mov
test
loopne
sub
add
lods
sub
notb
cmp
outsb
mov
popf
aas
add
mov
xchg
fiaddl
jmp
inc
jo
jnp
jo
add
aam
lea
or
je
repnz
inc
bound
push
xlat
out
add
sub
jl
leave
shll
popl
subl
in
mov
jne
movb
sbb
inc
jne
xchg
xchg
lock
pop
cmpsl
or
negb
or
mov
xor
clc
shl
sbb
xchg
std
mov
push
mov
fistpl
dec
in
out
push
lods
mov
xlat
mov
lret
cwtl
and
jmp
push
movl
mov
xor
rorl
fimuls
push
inc
jae
cltd
ljmp
insb
push
loop
adc
pop
mov
push
idivb
nop
or
int3
sub
lcall
sub
hlt
lock
xor
into
cmp
lret
mov
push
pop
cwtl
push
xchg
loope
mov
loop
or
js
adc
test
scas
daa
pop
leave
popw
sbb
scas
lcall
mov
je
psrlw
arpl
mov
push
inc
movsl
in
mov
imul
int
mov
imul
loopne
fwait
xor
and
jp
les
pusha
pop
jecxz
mov
mov
pop
sbb
pop
popa
dec
aam
jo
jge
xor
pop
xor
pop
mov
bound
jmp
sbb
sub
dec
inc
imul
jecxz
mov
mov
shll
stos
pop
and
xor
push
xor
dec
mov
push
ss
add
cld
arpl
mov
pop
fcom
idivb
jmp
sub
mov
push
and
daa
mov
dec
ds
or
lret
lock
outsb
pop
sbb
jmp
jg
clc
mov
cli
or
stos
xor
shl
adc
loope
lock
xchg
leave
mov
test
xor
jmp
aam
fincstp
sub
inc
ds
xor
xor
mov
pop
push
mov
or
shlb
sbb
and
add
jecxz
sbbl
loope
adcl
addb
sti
lock
movl
out
and
repz
repnz
data16
xchg
jbe
add
jns
icebp
inc
push
push
push
mov
lods
pop
lcall
or
or
add
int
push
jg
inc
add
int
cmp
test
ficoms
jo
shlb
jecxz
xor
shrb
mov
dec
cld
and
stos
stos
clc
push
lret
out
sbbl
pop
lock
test
push
sbb
add
cmp
jno
mov
xchg
sub
pop
les
mov
mov
je
scas
sbb
loopne
xor
adc
pop
out
pop
add
cwtl
out
sarb
xor
mov
dec
pop
jecxz
mov
add
sbb
mov
xchg
cmp
jo
cmp
rcll
xor
mull
notl
inc
mov
icebp
adc
arpl
je
lods
mov
repnz
push
dec
cmc
dec
std
sbb
mov
mov
insb
fwait
call
inc
jmp
jg
repz
int3
inc
xor
imul
pop
rorb
inc
call
cmpsb
aam
xlat
cltd
fildl
fdiv
dec
fdivrl
fs
pop
outsb
fstpt
adc
call
add
movsb
imul
mov
in
jae
sbbb
xchg
jns
adc
lock
ror
mov
pushf
out
inc
mov
stc
pop
aam
jge
int
in
pop
adc
scas
shl
orb
push
cmp
pop
xor
push
sbb
inc
pop
int
test
rclb
sbb
jp
push
mov
push
popf
add
inc
scas
xor
ds
mov
xor
jle
and
mov
dec
movsb
add
add
and
mov
xchg
cmp
inc
insl
out
or
std
bound
and
mov
cmp
loope
je
rorb
paddsb
cmp
in
push
sub
dec
mov
mov
lahf
inc
cwtl
in
daa
dec
or
jge
mov
inc
add
jp
testl
arpl
popf
jecxz
cmp
xor
mov
inc
negl
jb
jo
adc
outsb
mov
stos
cmp
inc
insb
pop
or
push
std
call
xor
xchg
add
mov
jmp
jecxz
mov
outsb
hlt
sbb
out
sub
sahf
push
jns
shrb
pop
rorl
dec
push
xchg
loope
pop
std
dec
dec
mov
add
sub
jp
xchg
hlt
push
arpl
pusha
mov
jno,pn
cmc
int3
pusha
pop
fidivrl
pop
aam
ret
in
xchg
movsb
push
imul
xlat
adc
push
lcall
jmp
scas
add
xchg
xor
sbb
mov
scas
mov
and
xor
das
ss
repz
js
cmpsl
mov
mov
mov
ret
arpl
fucomi
stc
in
mov
push
lret
ss
xchg
hlt
jne
push
cld
shrb
push
cmpsl
mulb
pop
cmp
enter
or
mov
out
inc
mov
cmp
in
push
ds
dec
movsb
and
daa
push
cmp
jmp
insb
adc
stos
push
rcl
mov
adc
mov
add
shlb
pop
mov
stos
and
adc
fstp
subl
mov
pop
cmp
xor
adc
mov
adc
and
dec
mov
in
lahf
add
icebp
push
divl
pop
loopne
mov
loope
mov
sbb
mov
mov
lods
inc
mov
dec
pop
js
ljmp
xor
pop
cmp
lahf
sbb
mov
in
or
mov
ret
icebp
daa
xchg
add
dec
orl
enter
psadbw
arpl
test
add
mov
imul
vpsllq
inc
imul
xchg
jae
mov
cmp
aam
pop
or
mov
addb
mov
sbb
cs
xchg
pop
mov
js
mov
xor
sbb
and
sbb
adc
scas
stc
shl
mov
pushf
dec
int3
mov
jmp
adc
sbb
xchg
pop
inc
dec
xor
lock
in
jnp
lods
ret
in
dec
dec
stos
es
shrl
xor
xchg
popf
adc
xchg
ss
scas
cmp
cmp
mov
add
stc
pop
inc
xchg
out
sbb
sub
outsl
jnp
cmp
ss
push
jno
sub
pop
push
mov
das
mov
les
aaa
push
push
cmp
das
push
ss
push
out
clc
ds
ret
divb
stos
jb
sbb
push
jo
xor
xchg
inc
addb
sti
xor
cmpsb
inc
cmpb
arpl
jp
push
xlat
add
cs
or
call
scas
inc
and
dec
aad
xchg
sub
hlt
jne
pop
aam
pop
push
mov
loopne
in
lods
sbb
mov
mov
add
mov
outsb
jne
cld
ja
mov
outsb
jnp
add
sahf
popa
jae
scas
jle
xchg
push
ja
sbbb
jl
cld
imul
sbb
inc
jne
xor
das
cmp
push
xlat
cli
push
push
fisubrs
je
bound
fldl
adcl
cmc
movsl
mov
ja
dec
jle
test
stc
into
cs
std
mov
push
cwtl
inc
adc
mov
fstpt
jge
push
mov
jne
ss
lcall
jl
inc
mov
mov
or
cmp
and
fstps
jg
lcall
or
sub
aad
or
xchg
and
hlt
ds
rcll
shll
inc
mov
scas
xor
sar
orl
cmpsl
mov
aas
xor
push
sti
mov
fadds
ss
pop
rcl
inc
lret
pop
cmpsb
mov
hlt
incb
mov
lock
add
mov
das
lahf
add
std
gs
mov
pop
xchg
sahf
js
sub
or
rcll
je
or
xchg
call
adc
cmp
mov
add
jge
fsubrs
lock
into
enter
cmp
add
adc
cli
sbbb
sub
jl
mov
inc
add
faddl
daa
add
xor
or
mov
into
or
add
cmpb
fcmovbe
leave
in
push
and
mov
cwtl
jne
pop
mov
imul
mov
call
fnstcw
mov
mov
or
mov
aaa
cmc
push
sbb
arpl
fdivrp
ss
sub
or
push
cmpsl
xorl
ljmp
mov
add
sbb
sub
movsb
mov
fadds
outsb
push
sub
or
and
idivb
test
mov
mov
jne
xor
cwtl
out
cld
xchg
ja
icebp
clc
or
pop
mov
cmp
pusha
pop
test
roll
int3
divb
test
mov
sbb
jae
in
mov
stos
mov
jne
in
jo
jo
jnp
pop
and
dec
cltd
add
cmp
sti
xor
add
adc
or
fcomip
jbe
or
jb
insl
jg
ljmp
add
pop
in
sbb
jo
xor
loop
mov
pushf
mov
push
popf
push
adc
stos
cld
inc
sub
or
mov
pushf
jns
outsb
jbe
lods
insl
mov
and
sarb
pop
sbb
sbb
xchg
add
pop
arpl
cmp
xchg
or
push
mov
loopne
mov
and
xchg
add
std
jg
mov
sbb
xlat
mov
loopne
pop
cmp
sbb
leave
mov
mov
ds
ss
daa
iret
mov
pop
out
mov
jmp
int3
mov
mov
icebp
jmp
call
xchg
and
cwtl
cwtl
dec
xor
fwait
mov
cmp
jp
and
ljmp
sub
pop
rorb
imul
and
ljmp
cvtps2pd
xlat
scas
fdivl
les
xchg
loopne
jecxz
fisttpll
adc
dec
inc
scas
mov
nop
xchg
jnp
mov
jne
packssdw
es
cmpsl
lea
xchg
iret
in
test
call
jo
pop
shrl
sub
clc
cmpl
xchg
das
jl
ds
cmp
mov
add
jae
rcrl
dec
push
ffree
rcll
inc
mov
bswap
sbb
fnstsw
inc
cmpsb
das
stos
or
cmp
fdivrl
cltd
cmc
idiv
xchg
in
clc
shll
rorl
roll
mov
es
out
pop
sbb
shl
add
inc
xchg
push
sbb
arpl
in
mov
insb
sbb
icebp
int3
sub
mov
pop
aas
pop
mov
push
sub
fistl
cmp
ficoml
aaa
mov
and
scas
fcomi
shrb
cmp
sbb
sub
ret
pop
push
std
dec
pusha
test
xlat
mov
push
mov
faddl
jb
shlb
imul
fucomp
push
dec
or
inc
shlb
xor
xchg
dec
lds
outsl
mov
jl
pop
push
stos
xor
popa
loope
push
pmulhw
popa
fisttpl
cmp
xor
sti
adc
xor
push
add
fwait
imul
testl
mov
jecxz
inc
mov
fidivrl
sbb
call
arpl
and
int3
mov
xchg
imul
push
xlat
mov
dec
or
ja
jp
gs
mov
xorb
or
ja
sbb
jne
int
inc
pop
cmp
cmpsb
xchg
test
mov
and
mov
push
call
adc
aad
pop
inc
pop
roll
adc
stos
mov
push
scas
xchg
jl
mov
in
mov
cmp
mov
xchg
xchg
xorb
xchg
mov
ret
in
scas
pop
sbb
scas
adc
xchg
jge
jl
icebp
xlat
lret
mov
scas
mov
add
mov
mov
inc
arpl
mov
mov
ja
and
jno
hlt
cmp
icebp
nop
adc
ljmp
sub
mov
mov
dec
jmp
pop
pop
and
and
jp
stos
prefetch
or
leave
jecxz
std
cmp
fcoms
mov
dec
jl
pop
lahf
in
dec
sub
clc
jmp
mov
std
sbb
lock
popf
mov
stc
adc
dec
lret
or
push
jecxz
fwait
push
cmp
mov
shlb
sub
je
mov
xchg
call
lds
cmc
ja
fsubl
nop
adc
dec
sahf
test
insl
mov
mov
mov
rcrb
xchg
decl
inc
sbb
pop
xchg
push
inc
scas
adc
sbb
not
loopne
bound
and
popl
mov
mov
rclb
mov
sahf
and
movsl
sahf
popa
out
mov
push
sbb
mov
out
or
stos
add
test
div
lcall
xchg
jl
imul
je
mov
push
jmp
jmp
int3
repz
sub
dec
mov
mov
xchg
stc
imul
push
mov
ljmp
cmp
fldl
arpl
xor
xchg
dec
imul
jge
loope
js
iret
dec
call
dec
add
int3
test
sbb
xchg
pop
jno
pop
test
dec
sbb
sbb
lret
dec
in
fs
cwtl
bound
iret
push
push
popf
loop
ja
jo
ljmp
inc
push
pop
gs
or
sbb
jne
push
pop
dec
xchg
mov
mov
pop
jb,pn
pop
add
in
cltd
lcall
pushf
sahf
ja
lahf
bound
sbb
pop
jae
adc
inc
ret
scas
loopne
fisubs
xlat
neg
stc
test
pop
inc
lds
add
ljmp
je
jmp
icebp
pop
adc
inc
dec
arpl
sbb
inc
mov
or
sbb
sub
jge
sub
rcll
xchg
pop
xchg
adc
jnp
call
inc
push
adc
xchg
test
std
inc
or
cmp
xchg
push
mov
push
fdivrl
push
lods
scas
add
and
mov
jge
mov
rcll
push
mov
aas
rcl
jg
sbb
cmovae
stos
mov
xor
mov
and
or
or
lock
sbb
loope
cwtl
inc
adc
sbb
test
pop
loop
add
cli
roll
push
jle
test
fwait
pop
fsubrs
push
mov
fcoms
popf
stos
mov
fisttps
or
scas
ds
push
sbb
decb
xor
push
fwait
in
arpl
push
les
sahf
fisttpll
inc
mov
push
jmp
mov
push
jae
loope
or
cmp
jne
loopne
pop
jl
cli
mov
test
add
push
aam
rorl
fisubrl
pop
cmpsl
cmpsl
mov
or
cs
inc
or
xchg
xchg
test
mov
mov
jne
add
arpl
pop
outsb
cvtps2pi
arpl
mov
add
adc
fs
test
pop
fcmovnb
dec
test
cs
or
cmp
lcall
xor
aam
jg
mov
mov
xchg
mov
mov
mov
sahf
mov
incb
mov
scas
jnp
dec
push
js
inc
jne
cmpsb
inc
ret
mov
icebp
test
xchg
test
jo
or
stos
fstl
xor
out
pushl
std
inc
add
subl
lods
pusha
pop
sbb
pop
outsb
outsl
cwtl
adc
sub
cmc
fisubrl
popa
mov
mov
out
cld
sarb
icebp
cmp
mov
leave
mov
lods
add
daa
cli
in
fwait
cmp
fldenv
mov
lock
out
jmp
bound
jae
push
cs
sub
fsubl
fcmovbe
push
into
adc
js
in
mov
xchg
xchg
iret
lahf
mov
jae
mov
adc
call
jnp
ss
scas
mov
lock
cltd
aad
jmp
aaa
add
jae
shlb
jmp
ret
loop
ljmp
ds
push
sub
add
pop
fwait
dec
fwait
scas
std
aas
adc
lds
adc
mov
mov
notb
mov
aam
int
mov
dec
or
movsl
in
xor
mov
mov
repnz
inc
pop
mov
repnz
stos
pop
pop
mov
inc
adc
mov
mov
and
dec
pop
xlat
inc
pop
insb
xor
and
mov
cltd
jmp
test
data16
lods
repz
push
out
mov
pop
push
sub
mov
push
call
and
gs
ret
dec
cs
and
ret
mov
sub
lret
dec
add
ss
lea
imul
repz
idivb
mov
xchg
mov
xor
mov
js
loop
mov
pop
daa
nop
or
pop
or
repz
adc
insb
or
in
call
adc
and
loopne
in
mov
jp
cltd
test
jnp
mov
orl
mov
pop
fists
ss
sub
inc
rolb
jge
ret
imul
aad
call
out
das
or
lock
cmp
sahf
adc
data16
mov
mov
in
es
scas
sbb
xor
ret
adc
insb
xor
xchg
fstp
ljmp
adcl
xorl
lea
sbb
test
mov
cmc
mov
xor
inc
out
push
dec
push
push
clc
pop
jle
in
testl
push
dec
cmc
or
sub
int3
scas
mov
call
xchg
inc
mov
add
dec
sbb
dec
jp
mov
ret
lret
ds
clc
pop
mov
jl
and
fcomp
idivl
pop
fwait
pop
call
loope
aam
cli
xchg
popa
leave
pop
adc
repz
push
test
sbb
and
sub
movsl
lock
xchg
mov
gs
addl
subl
lods
orb
sarb
xchg
test
arpl
pop
xchg
sub
lea
in
cmc
mov
mulb
test
test
iret
sub
cld
lret
scas
mov
adc
pop
imul
jp
pop
sub
cli
pop
je
mov
mov
popa
push
adc
mov
lods
cmpsl
dec
daa
pop
arpl
sbbb
lods
insl
push
push
dec
out
push
push
ret
ret
or
pop
loopne
decb
inc
adc
call
add
push
cmpsb
fdivs
cmc
rorb
fiadds
pusha
ficompl
or
ret
movb
xor
inc
mov
cwtl
int3
mov
mov
mov
pop
pop
imull
xlat
lahf
es
adc
in
sbb
mov
and
test
inc
ret
xchg
pop
add
ret
push
pop
in
push
push
dec
out
icebp
pusha
mov
mov
icebp
push
pop
loop
ret
repz
mov
adc
add
je
test
fcomps
fcoml
popf
lea
shrl
inc
add
arpl
call
push
sbb
add
dec
xchg
je
test
out
cs
insl
ret
mov
push
xor
scas
sbb
and
dec
and
mov
pop
add
pop
outsb
clc
mov
fidivs
aad
andl
shrb
dec
orb
aas
inc
xchg
lea
jns
or
add
pop
lds
mov
inc
inc
mov
inc
or
jecxz
xor
arpl
mov
insl
add
lret
mov
add
pop
cwtl
movsb
lods
xchg
jbe
mov
sbb
mov
popf
test
dec
or
xchg
in
push
negl
in
add
xlat
mov
xor
rcl
out
xchg
das
sbbl
or
xchg
popa
lods
adc
popf
aad
adc
xchg
cwtl
dec
cmp
adc
jecxz
and
popl
hlt
push
sti
and
xchg
out
sbb
cmp
loopne
outsl
adc
sub
mov
stos
jmp
ds
mov
mov
std
pop
js
rol
in
aaa
call
push
sbb
jge
cmp
pop
or
fdivrs
arpl
jne
addr16
cmp
jo
sub
fsub
rorb
daa
mov
insl
mov
jns
nop
pop
dec
sub
mov
push
sub
nop
dec
arpl
push
fnsave
fistpl
dec
inc
shrl
mov
iret
dec
pop
mov
addr16
scas
out
addb
in
cli
inc
out
je
jno
jecxz
into
sti
sbb
iret
mov
jp
cmp
loop
push
inc
or
and
push
sti
mov
subb
imul
jne
push
call
push
fs
incl
sub
int3
ja
es
xchg
mov
fldl
mov
scas
inc
xchg
and
and
addr16
xor
lcall
mov
lret
push
xchg
pop
subl
mov
mov
hlt
cld
mov
adc
je
das
mov
jo
xchg
lea
pop
jl
or
push
push
cli
loope
xchg
jmp
jns
icebp
push
dec
jne
pusha
cmp
rclb
cmp
pop
into
arpl
fisttps
cmp
orl
inc
xlat
mov
xchg
mov
push
adc
adc
cmpsb
divl
mov
clc
rcr
scas
xor
in
pop
push
lcall
inc
cmp
xor
push
addr16
out
shrl
xchg
xor
jbe
push
test
and
loope
add
xchg
cs
or
xchg
in
mov
mov
test
cwtl
mov
xchg
jne
xchg
add
jl
lret
or
outsl
mov
push
and
cmp
insb
je
mov
sub
icebp
mov
push
clc
daa
mov
jecxz
test
add
fstpt
icebp
sub
shrb
lods
cmp
out
test
call
lea
jl
ds
pop
or
repnz
addb
sbb
mov
jp
sbb
jne
sub
jmp
les
fs
dec
or
insl
int
mov
jecxz
push
stos
clc
bound
push
mov
push
mov
and
loopne
push
jnp
xor
dec
cmp
dec
sarl
xlat
scas
push
xor
mov
not
mov
mov
clc
lcall
xlat
lahf
and
mov
inc
andl
enter
xor
adc
or
daa
roll
sbbl
dec
mov
lods
cmp
push
jb
add
xchg
stos
dec
pop
sub
mov
lock
jp
mov
cs
les
xlat
jmp
jbe
unpcklps
cmp
das
cld
pusha
pop
jo
push
mov
xor
or
dec
add
lds
xor
adc
sbb
xchg
cmp
andl
add
mov
jb
push
dec
mov
cmp
out
popf
dec
cmp
mov
cmp
inc
xchg
mov
pop
cli
movsb
loopne
push
popf
imul
push
fs
mov
mov
xlat
ret
loope
cmp
push
push
jne
out
sbb
inc
xchg
out
std
pop
fiadds
jecxz
insl
push
adc
jno
icebp
roll
inc
push
mov
repz
cmpsb
js
rcr
out
inc
hlt
aaa
mov
pop
or
fadd
out
ljmp
pop
push
je
cld
int3
dec
pop
lcall
cmc
xchg
and
mov
dec
dec
das
sti
dec
jecxz
sub
pop
sbb
in
mov
mov
rcl
in
cld
out
movsl
out
in
jmp
lods
cli
movsb
call
adc
lea
test
mov
mov
mov
xlat
push
add
clc
jns
lcall
ret
jg
ljmp
mov
pop
sbb
sub
icebp
out
sbb
cmp
call
int
mov
into
mov
jmp
or
ds
aas
pop
jmp
outsb
js
xor
push
mov
test
push
sbb
push
ds
cmp
mov
scas
jge
subl
and
sub
js
pop
into
je
mov
jnp
lock
xor
push
mov
iret
mov
sub
lret
jo
sbb
fldenv
mov
out
or
mov
xchg
pop
mov
out
inc
xchg
sub
pop
pop
jbe
in
jbe
aad
imul
jp
outsb
inc
arpl
sbb
std
rorb
ljmp
add
pushf
les
mov
stc
mov
xchg
jecxz
jl
dec
loopne
lcall
inc
fistl
cmp
hlt
pop
pop
xor
out
rcr
add
mov
xchg
icebp
add
fwait
test
push
add
jge
cmc
lods
xor
pop
popa
scas
inc
and
notb
jae
jns
mov
sbb
bound
mov
aad
xlat
pop
lods
push
mov
jb
rorl
outsl
cmc
mov
sub
add
and
add
bound
add
sub
dec
fistl
push
inc
push
popf
in
ja
mov
mov
mov
sub
push
insl
out
push
fs
sub
enter
jg
cmp
pop
lahf
mov
fdivrl
jne
push
incl
mov
xchg
js,pt
ja
sub
loopne
and
xchg
loopne
movsb
mov
sub
cld
ret
movsl
mov
repnz
lret
arpl
add
xor
cli
rcrl
adc
xor
sub
or
mov
sti
pop
ds
mov
jno
mov
not
inc
xor
shl
imul
adc
push
neg
hlt
jl
dec
clc
push
mov
fcoms
enter
dec
jnp
lock
aam
xchg
mov
daa
cmp
mov
dec
bndldx
xor
roll
xor
mov
icebp
and
inc
add
mov
outsb
adc
mov
or
pop
call
inc
cmp
scas
push
ljmp
fsubs
push
shlb
inc
ret
and
add
mov
lret
pop
dec
adcl
xchg
rolb
jl
sub
sti
jne
shrl
popa
xlat
mov
adc
rcrb
cmp
dec
adc
inc
mov
jge
mov
scas
or
pop
shl
call
std
pop
lea
rcrb
jecxz
out
jbe
cld
push
mov
sub
les
pop
loope
ja
out
lahf
fsubs
neg
dec
ljmp
ds
xor
cli
lock
xor
movsl
lret
or
jge
push
dec
cmp
popa
xor
in
mov
bound
gs
sbb
movb
pop
test
push
and
and
fstpt
addl
and
or
outsb
pop
scas
mov
adc
outsb
push
sbb
call
jns
repnz
arpl
cwtl
lods
cmp
jp
cmp
add
pop
ss
in
pop
add
andl
mov
mov
ret
push
push
testl
pop
mov
mov
shll
sti
sti
pop
sahf
fld
mov
rol
ljmp
dec
faddl
xchg
fucomip
xchg
test
sub
outsb
bound
pavgb
js
xor
and
mov
fistps
ds
mov
add
imul
push
add
rclb
rorb
das
aad
popa
adc
repz
cltd
mov
lods
pop
shlb
add
jle
inc
pop
das
push
xlat
adc
sub
cmp
into
mov
adc
bound
lea
mov
and
test
out
lret
int
pop
pcmpeqw
pushf
adc
incl
enter
sti
into
or
pop
xor
clc
hlt
xchg
ret
push
sahf
dec
mov
out
and
jae
lret
enter
out
outsb
cld
sub
enter
ljmp
push
cmc
ljmp
xor
jb
mov
pop
loope
fsub
cmpsb
lea
outsl
mov
push
loopne
mov
testb
push
imul
popl
mov
arpl
aaa
lea
and
jb
jbe
pop
push
jmp
std
pop
in
push
nop
push
ret
mov
insl
cmp
and
nop
lods
arpl
cwtl
cmp
inc
pop
in
test
inc
test
jo
sti
call
jmp
xor
push
xor
mov
fistl
lahf
inc
int3
js
mov
clc
enter
out
xor
lret
jbe
push
stc
call
pop
adcb
dec
and
inc
adc
add
lods
mov
out
jns
inc
call
mov
lret
jae
pop
lds
sbb
ret
sahf
cmp
das
xchg
mov
lcall
inc
mov
mov
add
push
fdivrs
mov
cltd
mov
pop
push
mov
pushf
stos
int
div
rclb
leave
pop
pop
jnp
push
into
mov
jecxz
pop
jge
cmp
insl
data16
adc
in
imul
cmpsl
nopl
insl
pop
mov
jp
pop
jnp
lahf
xchg
adc
scas
lcall
into
mov
jl
mov
fs
mov
add
mov
sahf
pop
lcall
pop
insl
jmp
call
lods
mov
mov
out
test
mov
out
or
das
sahf
ds
ficoms
dec
ror
cmp
lcall
stos
movsl
inc
mov
inc
ds
mov
daa
stos
pop
shrl
inc
int3
dec
addb
cltd
je
cmp
or
jb
movsb
lock
mov
push
pop
adc
sahf
int
sub
pop
rcr
xchg
xchg
shrl
call
push
cmp
in
sub
xchg
mov
shr
jno
movsb
cld
sub
jl
jmp
cmpsl
mov
lods
negb
cmpsl
and
lds
push
mov
in
or
push
xchg
mov
xor
mov
data16
lret
das
rcrb
or
adc
ret
arpl
aaa
xchg
mov
sub
sub
cmp
lret
loopne
mov
insb
aaa
push
loopne
push
add
xchg
mov
mov
ficoml
mov
sbb
sahf
mov
mov
mov
mov
pop
pop
int
jne
adc
sbb
cltd
xchg
and
and
and
jp
xor
fucom
stos
or
mov
or
shll
icebp
mov
mov
jg
lahf
jns
test
pop
ret
in
xchg
mov
xchg
rorl
adc
mov
adc
test
mov
stos
mov
sbb
xor
lds
fdivl
lahf
shl
and
fistpll
out
hlt
hlt
pop
out
jg
outsl
mov
push
mov
and
rorb
or
add
mov
cmpsb
lret
aas
fmull
inc
mov
adc
popa
xor
mov
test
push
imul
lcall
pusha
sbb
idiv
or
nop
loop
jge
adc
dec
ret
hlt
sub
jo
inc
cmp
test
push
push
ret
rcrb
pop
cmpsb
sbb
cmp
imul
ret
mov
les
jne
jne
push
ret
sbb
fmulp
mov
cmp
push
in
orb
mov
pop
sub
icebp
mov
clc
xchg
sbb
lds
clc
shrl
lods
ja
mov
add
lcall
jl
sub
mov
lock
and
mov
or
bts
fnstsw
arpl
shrb
cwtl
or
mov
stc
xor
mov
xor
and
ror
sti
cli
jle
popa
mov
xchg
sub
leave
sub
fs
jge
lahf
dec
adc
adc
and
xor
outsl
es
scas
imul
scas
aam
push
jmp
movsb
ljmp
clc
outsb
aas
sbb
pop
cli
push
inc
pop
insl
in
daa
or
and
les
mov
push
stos
sub
fcmovb
sbb
push
inc
loop
aam
and
push
fimull
outsl
inc
jne
xor
push
add
lcall
mov
mov
dec
call
pop
jle
loopne
adc
adc
es
mov
jae
sahf
pop
fimull
xor
jne
adc
inc
jp
jo
sub
scas
es
jmp
mov
lods
out
xorl
jp
loop
push
xchg
insl
idivl
icebp
mov
jb
pushf
adc
jmp
jge
add
daa
jp
cwtl
in
popa
adc
inc
mov
xor
les
mov
push
cmpsl
mulb
rorl
pop
or
or
jbe
mov
mov
sub
jmp
mov
cmc
mov
pop
cmp
js
int3
aas
sahf
adc
movb
fstpt
insl
mov
sbb
push
pop
xchg
add
hlt
pop
fucom
cwtl
pusha
and
dec
dec
inc
ss
and
mov
cmpsl
xchg
pop
push
adc
dec
aad
fdivs
pop
or
loope
add
in
mov
xlat
scas
sub
les
cmpsb
xchg
dec
jge
pop
push
fdivs
imul
cmp
pop
sub
insb
and
fidivl
inc
mov
lcall
fistps
or
pop
mov
stc
pop
sbb
popa
xchg
comiss
sub
out
fidivrl
xor
ljmp
mov
lods
sarb
sub
cmpb
inc
sub
insb
pop
outsb
stos
and
and
leave
ret
testl
cli
mov
mov
push
xchg
call
mov
lock
and
dec
outsl
ljmp
inc
aas
ret
xor
clc
test
push
pushf
scas
sub
pop
push
faddl
cmp
pop
inc
out
fisttpl
mov
or
push
pop
jl
insl
dec
mov
je
mov
filds
stc
loope
add
or
xor
cli
rolb
xchg
xchg
aas
mov
outsb
pushf
dec
cltd
add
mov
lock
sbb
jae
imul
cli
jno
loopne
jp
sahf
inc
ljmp
fcmove
inc
mov
cs
sti
cltd
fnstsw
xor
inc
mov
mov
push
mov
sbb
orb
nop
pusha
cltd
pop
mov
cmp
xchg
mov
sub
xchg
xor
jp,pn
xor
adc
imul
movsb
adc
and
ja
lret
adc
mov
out
push
mov
inc
movsb
cli
fcmove
lds
push
sti
xlat
shll
xor
pop
outsl
hlt
lds
inc
adc
jne
aad
xchg
jecxz
shlb
sarb
cli
js
pushf
in
gs
jbe
pop
aad
mov
int
xlat
push
arpl
add
pop
daa
xchg
in
sbb
mov
xor
icebp
mov
in
or
sbb
std
fmul
push
call
imul
jne
fcompl
mov
fnstsw
xchg
cmp
dec
movsb
inc
mov
pop
repnz
jae
adc
inc
push
or
push
push
or
push
lea
jae
fnsave
stc
dec
sub
lret
in
pop
mov
and
lods
fs
lock
sbb
call
push
jae
mov
dec
pop
js
or
in
imul
clc
push
scas
fwait
rcl
mov
sbb
lods
inc
and
jge
mov
loope
out
lahf
ret
lahf
pop
rolb
sbb
aas
sub
cmp
addl
inc
in
rcr
in
jle
or
dec
sbbl
popf
add
in
in
ds
add
xor
sbb
inc
adc
lcall
add
or
inc
roll
pop
pop
cli
stos
test
add
lret
lahf
pop
fisubrs
xchg
cld
shll
lea
jle
mov
inc
add
mov
xchg
int3
pop
inc
pop
pop
xchg
and
loopne
xchg
dec
xchg
int3
cli
pop
cmp
shll
lods
ss
dec
pop
or
mov
xor
dec
cmp
fbstp
jle
std
leave
mov
xor
cmpsb
inc
or
push
movsb
adc
mov
xlat
loopne
loope
pop
scas
adc
mov
and
cmpb
dec
push
jmp
pop
or
pop
mov
imul
mov
notl
jno
das
cmpsl
enter
add
add
jbe
popa
pop
lock
and
xchg
cmp
mov
adc
or
stc
cmp
shrb
dec
shl
mov
pop
jae
cmp
bound
aad
cmp
push
or
push
inc
ss
jg
jnp
mov
es
cld
push
mov
cmp
add
mov
mov
mov
jl
push
pop
jl
cmp
loopne
jo
add
rorl
jle
aaa
shrl
iret
jbe
sbb
push
fistl
xchg
outsl
clc
out
ja
adc
sbb
mov
sti
adc
aaa
mov
insb
arpl
pop
jnp
push
fdivrp
cmpl
int
mov
cmpsb
xchg
push
jg
dec
mov
push
insl
jmp
xchg
fildl
pop
sub
pop
jge
sub
imul
mov
pop
push
xchg
inc
inc
add
in
imul
dec
jle
insb
packssdw
mov
fistpll
sbb
jnp
aam
rorb
dec
insb
lret
fdivrs
adc
and
idiv
inc
push
stos
xchg
pop
out
lcall
xor
pop
outsb
xchg
inc
push
adc
imul
cmp
xchg
sbb
sbb
gs
mov
bound
mov
outsb
out
jp
imul
daa
outsb
and
ret
or
fdivl
sbb
jle
dec
mov
lods
cmp
adc
add
jl
xor
mov
aam
mov
lahf
loopne
out
dec
ds
xor
dec
push
rclb
es
rolb
xchg
icebp
repz
clc
gs
gs
js
ret
mov
inc
lock
lcall
mov
add
fsubrl
lcall
stos
jp
enter
stos
lods
jo
xchg
or
cs
or
call
fsts
leave
mov
adcl
inc
fidivrs
js
pop
pop
mov
imul
and
mov
push
mov
pop
aad
rolb
cs
data16
mov
inc
lahf
mov
lret
jne
sbb
push
mov
xorl
cmp
sub
push
pop
out
jl
subl
cld
lret
pusha
clc
mov
mov
pop
inc
jle
push
popf
cmp
and
insl
cmp
jno
cmp
add
jmp
inc
mov
repz
loopne
mov
adc
mov
call
aaa
imul
pop
add
mov
ffree
push
dec
clc
cmpb
jecxz
daa
add
stos
sub
xchg
xor
cmp
jg
add
cld
jge
loop
jo
data16
mov
pop
sbb
adc
lahf
and
notl
or
lods
adc
in
mov
movl
sbb
jb
add
insl
aaa
dec
ret
push
aad
adc
cmp
stos
inc
div
imulb
dec
outsl
sbb
test
push
push
stos
mov
test
lcall
pop
cs
ds
push
movb
imul
jmp
icebp
pop
adc
icebp
xchg
mov
or
out
or
mov
xor
leave
stc
test
sti
jp
push
xchg
add
or
cmp
cs
jnp
mov
aam
pop
ret
inc
fisttpl
enter
notl
popa
in
mov
add
adc
rol
push
push
add
inc
mov
pusha
fstpt
aam
into
fsubrp
pop
les
rcrl
fsub
xchg
and
lret
scas
mov
push
mov
cli
mov
xchg
jecxz
loope
inc
mov
jl
popf
pop
xor
jb
or
mov
lds
fidivrs
in
or
test
clc
push
js
dec
lret
and
jp
mov
push
cmp
xchg
cmp
cs
fcom
push
xor
jmp
lea
jge
in
push
pop
sub
adc
dec
int
push
mov
outsb
das
pushf
insl
aam
insl
jg
shl
inc
aad
paddw
dec
nop
xchg
mov
and
dec
sarb
ret
mov
faddl
andb
mov
loopne
iret
cmp
call
jo
loope
cmp
sbb
std
rcrl
cmpsb
inc
cmovns
cmp
jmp
mov
mov
mov
cmc
push
pop
mov
mov
sti
inc
pop
adc
mov
mov
pop
fisttpl
jne
test
popa
mov
out
lods
jo
jno
xchg
popf
fistl
cmc
push
mov
pop
mov
adc
orb
rclb
mov
dec
sarl
adc
fildl
es
xchg
sarb
jne
std
into
gs
rol
lahf
add
mov
mov
mov
pop
add
nop
cmp
sarb
xchg
ja
xchg
out
add
outsb
adc
shrl
sbb
jge
insb
cmp
iret
jl
jmp
pop
arpl
add
clc
test
in
dec
mov
mov
sub
pop
loope
fstpl
add
out
inc
insl
mov
fwait
dec
lods
sub
xor
fisttpl
clc
inc
flds
pop
pop
loopne
mov
pop
jnp
es
insb
std
call
call
pusha
out
dec
push
push
add
sarl
dec
bound
cmpsl
aaa
push
and
and
sbb
shr
clc
js
cs
stos
in
push
jne
sysexit
das
and
adc
xchg
or
pop
js
xchg
rorb
sti
decl
inc
push
mov
push
mov
ja
scas
stos
or
das
xrelease
xchg
add
imul
subl
or
aas
je
cli
sub
hlt
icebp
mov
jle
dec
mov
push
rclb
jge
subl
cwtl
jle
mov
mov
pop
fwait
sbb
mov
std
jo
cmp
punpcklwd
xlat
cmc
jecxz
imul
sbb
clc
test
loope
test
mov
es
loopne
and
cmp
xchg
test
and
mov
pop
sahf
push
jmp
ja
push
cmp
jmp
and
xor
push
into
lods
jl
pop
ljmp
jae
sbb
xorb
cltd
addb
movlhps
push
sub
inc
std
push
aad
pop
jge
imul
shl
pushf
sub
sub
sub
add
sbb
or
or
jge
loop,pn
jge
pushf
jno
inc
add
mov
cmc
mov
scas
sbb
je
popf
pop
out
idivb
scas
cld
xor
mov
pusha
lcall
push
inc
mov
sbb
psubd
insb
loope
and
sahf
fdivrs
mov
fsubs
scas
push
adc
movsl
jl
add
in
xchg
mulb
mov
push
xchg
pop
sahf
inc
insb
pop
bswap
xchg
adc
cld
loopne
cmpsb
pop
ret
push
jno
addr16
jecxz
sub
cmp
negl
imul
jg
jae
mov
scas
jnp
ret
scas
xchg
and
scas
or
sbb
pop
lahf
sbb
hlt
and
lds
inc
and
out
add
ret
inc
aaa
rcrb
sub
dec
test
fndisi(8087
in
stos
xchg
adc
sbbl
push
and
jne
jg
jae
and
imul
pushf
loopne
push
pop
fisubl
sbb
sbb
fdiv
xchg
jle
add
xor
dec
add
icebp
push
out
jmp
popa
lcall
mov
sub
cmp
cmp
mov
les
and
fisttpll
push
test
inc
icebp
xchg
into
hlt
cmp
pushl
data16
addr16
or
mov
std
xchg
mov
ror
loop
fistpl
xchg
sbb
shl
mov
daa
fs
cmpb
arpl
inc
jge
mov
pop
mov
outsb
ljmp
mov
cmp
and
in
inc
inc
xchg
lcall
aaa
pop
insl
jl
push
fcomps
shlb
mov
nop
mov
out
xchg
imul
pusha
pop
xor
fistl
pop
in
jecxz
or
mov
lods
rorl
addr16
sub
dec
xchg
jecxz
movl
and
jnp
xor
xlat
push
hlt
sub
xor
add
mov
movb
xor
inc
loope
aad
in
mov
imul
push
pop
insl
or
and
js
leave
jge
out
aad
mov
xchg
or
iret
fisubrl
js
pusha
ja
or
in
outsl
add
pop
fimull
push
push
mov
aad
dec
loope
lods
sub
mov
nop
cld
loop
inc
sbb
insb
mov
adc
test
push
or
sbb
sbb
sti
adc
dec
sbb
push
cwtl
sub
stc
push
inc
xor
add
sub
xchg
rorb
jle
jbe
lcall
dec
mov
xchg
imul
jne
out
lret
mov
add
js
cld
add
enter
into
cmp
mov
pop
or
inc
mov
xlat
xor
rcrb
leave
pop
jae
cmp
mov
push
rorb
mov
jg
insb
push
or
mov
xchg
pop
cmp
je
cs
negl
call
adc
or
jg
or
stos
cld
fidivs
mov
testl
push
lods
xor
sbb
cs
dec
movsb
add
or
ret
pop
scas
and
ffree
int
or
mov
aad
pop
or
ret
call
stos
fldl
and
xlat
in
das
add
fstpl
clc
mov
shl
push
mov
pmaxsw
rorb
sbb
inc
fbld
cmove
mov
jbe
stos
mov
xchg
mov
repnz
pop
call
arpl
lcall
test
mov
sub
sbb
aas
negl
cs
xor
in
loopne
or
popa
mov
cmp
mov
jbe
idivl
jbe
mov
nop
icebp
sti
popa
icebp
or
lahf
xchg
outsl
shl
insb
pop
pop
xchg
mov
sub
mov
cli
je
insw
in
fisubs
inc
mov
clc
lea
and
testb
loope
push
pop
pop
adc
push
xor
arpl
lods
pop
popw
dec
lock
pop
and
xor
sbb
pop
fbstp
cmp
xchg
push
pop
inc
rdpmc
sti
nop
div
pop
pop
fiadds
add
push
xor
pop
xor
inc
adc
mov
cmpsl
lret
jp
push
loope
popa
fimuls
cli
ret
hlt
and
ret
stc
movsl
xor
xor
test
outsl
arpl
xlat
jae
dec
insl
loopne
jbe
dec
adc
xor
pop
dec
pop
sub
test
sub
loop
lret
ljmp
xchg
lret
sbb
xchg
aas
scas
divl
jmp
fdivrs
popf
ja
call
jbe
fcomps
cs
ret
xchg
rep
cmp
inc
fdivr
sarb
dec
aaa
cmpsb
adc
mov
outsl
dec
scas
jo
pop
stc
or
jb
aad
pusha
jge
mov
clc
jge
lods
or
in
test
std
add
test
sbb
ficoml
or
or
stc
les
clc
jno
push
mov
hlt
add
test
cli
jle
pushf
pop
ds
leave
jne
xchg
jns
bound
ds
push
push
subb
xor
dec
test
lods
mov
jl
out
scas
outsb
mov
cmp
mov
mov
test
iret
inc
shrl
test
cmp
adc
pop
fidivl
jnp
jne
insl
push
add
jl
inc
je
xor
xor
pusha
mov
pop
bound
or
mov
pop
lret
or
xchg
lcall
sbb
jb
xlat
imulb
out
mov
out
mov
mov
sbb
add
add
mov
shlb
dec
adc
push
push
cld
outsl
mov
scas
xorl
xchg
pop
fistps
mov
adc
adc
shl
repz
ret
int
rol
ret
pop
inc
test
andl
aaa
or
lcall
mov
fnstenv
dec
pushf
jo
nop
push
idivl
mov
cmp
shrb
cld
or
mov
push
sbbb
int
rcll
xchg
loopne
pop
push
sub
pop
push
sarl
call
or
inc
dec
sub
jmp
aas
out
mov
mov
ja
ret
xchg
incb
out
subl
xchg
fstpt
mov
mov
cmc
jge
fistps
cmp
je
lock
mov
shlb
cmp
pop
dec
or
fdivr
sbb
clc
and
lds
inc
push
mov
jecxz
fdiv
cld
sub
mov
xor
ja
testl
and
lcall
push
out
outsl
fs
cmpsl
and
sub
jl
jne
daa
js
fbld
mov
lea
push
cmpsl
aaa
inc
out
sub
mov
out
or
movsb
popf
xor
adc
adc
adc
mov
in
sbb
xor
jns
outsb
rorb
mov
mov
fwait
loop
mov
or
mov
icebp
push
nop
das
shlb
xchg
pop
daa
adc
cmp
add
pop
jp
aam
xor
es
push
out
dec
inc
inc
push
adc
data16
xchg
jecxz
jl
sbbl
push
mov
push
call
jp
mov
cld
sub
fsubrs
push
add
push
pushf
add
lods
mov
or
ss
push
out
mov
test
bound
push
jp
into
notb
cmpsb
mov
xor
add
in
rol
std
pop
int3
xor
shlb
test
xor
or
sbb
cmp
sub
sbb
inc
inc
call
mov
sub
pushf
in
cmpsb
dec
sbb
sbb
push
add
pop
pmulhuw
cmc
pop
popa
sbb
ss
lds
popf
rorb
cld
or
sbb
out
push
add
sub
fstpl
pop
jmp
jge
pop
fmuls
into
cs
shr
xchg
jmp
aad
mov
adc
and
enter
int
xor
dec
mov
in
call
loop
lahf
fcoms
push
jnp
in
sarb
rolb
jmp
inc
lahf
bound
cmp
lock
pop
mov
mov
out
push
push
loopne
movsl
sbb
call
in
notl
mov
push
pop
sub
add
mov
add
sub
and
sbb
stos
mov
jle
lods
adcb
xor
xchg
sti
jp
cmc
test
adc
pop
int3
movl
dec
ja
mov
push
icebp
cwtl
cmp
jmp
mov
out
mov
iret
pop
scas
push
xor
vhaddpd
pop
cs
mov
hlt
mov
into
cmp
ds
push
stc
and
and
ret
xchg
adc
push
inc
or
or
loopne
popl
sub
shr
cmc
insl
xchg
add
je
insl
fcoms
and
test
rcl
mov
cltd
mov
lock
dec
lret
fwait
cmp
lret
ret
or
ss
js
nop
fcoms
mov
jg
addr16
xor
xlat
cmp
in
pop
mov
mov
mov
aad
addr16
daa
outsb
xlat
scas
push
mull
push
mov
inc
and
xor
jmp
popf
xchg
daa
mov
or
in
imul
scas
imul
or
jnp
sbb
sub
out
mov
mov
lret
and
nop
sbb
dec
jmp
aam
out
iret
sbb
je
subb
add
cltd
fwait
decb
mov
nop
int3
sbb
or
pop
incl
je
mov
xor
out
inc
push
test
idiv
push
pop
in
mov
adc
into
and
fwait
mov
icebp
xor
adc
mov
sbb
mov
and
xchg
mov
mov
or
pop
rdmsr
aas
repz
out
loopne
mov
out
xor
aam
pop
es
loop
scas
jge
arpl
mov
loopne
sub
jb
decb
aad
mov
mov
outsl
loope
pusha
iret
rcll
mov
aad
mov
dec
push
inc
iret
xor
adc
addr16
adc
jmp
adc
sub
jecxz
iret
movb
push
sarl
xor
pop
aaa
sbb
pop
pusha
xchg
jns
adc
into
aam
jle
ss
lds
mov
jecxz
push
push
js
xchg
roll
xchg
push
aas
mov
cmp
sub
inc
insl
lock
test
sarb
sub
cmp
clc
sub
push
add
mov
push
and
cmpsb
fmul
cli
outsl
xchg
and
mov
pusha
inc
mov
subl
and
lcall
pop
cmp
movsb
imul
lds
into
subb
mov
dec
out
sub
imul
add
out
dec
lahf
mov
sarl
insb
addb
sbb
ss
cmp
sbb
out
jecxz
mov
cmpl
addb
mov
cmp
mov
ljmp
insb
ja
inc
sub
rorl
shlb
jge
adc
mov
xchg
sub
outsb
adc
icebp
outsl
sahf
sbb
popa
js
pshufw
pop
push
xor
or
je
repz
push
loopne
adc
push
fidivrl
or
mov
sub
jae
std
xor
sahf
ret
xchg
aam
fwait
dec
mov
rorb
daa
movsl
lret
gs
hlt
mov
adc
loopne
jmp
scas
jbe
gs
lahf
jne
or
add
cmpl
loop
sbb
jae
sub
fildll
js
mov
jl
mov
out
stos
test
ret
adc
inc
jno
lods
pop
mov
pop
adcb
mov
mov
add
rcr
mov
push
push
aam
sub
xor
scas
push
in
jge
ljmp
pop
fnsave
inc
je
adc
lods
push
clc
push
aad
xor
mov
fldcw
jne
pop
mov
pop
clc
cld
xor
stc
lahf
push
xchg
cmc
xor
mov
mov
push
dec
daa
aas
fisubrl
mov
sub
das
call
mov
rcll
loopne
dec
inc
lock
or
jne
out
or
les
into
sub
xchg
mov
xchg
push
inc
mov
pusha
push
push
mov
cmc
mov
jmp
jb
cmp
pop
jp
sub
adc
mov
jno
and
jmp
lds
std
mov
shrl
lahf
mov
call
mov
dec
dec
cwtl
stos
adc
push
mov
lds
leave
scas
and
cmp
fwait
xchg
or
xchg
jmp
call
or
shl
mov
jbe
imul
mov
das
add
mov
cmp
movzbl
xor
or
jp
das
ljmp
sbb
adc
cmc
and
aam
adc
or
xor
in
pop
dec
adc
mov
shl
shll
sbb
cmp
push
mov
int
adc
dec
lahf
jno
mov
movsl
cmp
shrl
xchg
cli
cld
dec
cmp
cmp
cmp
pop
jp
inc
push
mov
invd
cmp
jmp
pop
mov
clc
add
std
sub
pop
pop
jp
clc
insb
subl
lock
in
jmp
and
jbe
push
inc
cmpsl
sahf
mov
cmp
shl
pop
push
scas
inc
fiadds
jg
lea
ss
mov
ljmp
sbb
aam
push
mov
push
daa
jp
mov
push
loope
mov
mov
dec
popa
repz
inc
out
popa
sub
push
mov
push
inc
test
push
xchg
lds
inc
scas
dec
test
inc
in
fidivl
push
mov
ret
pop
les
pop
cs
mov
sub
stos
jmp
fistpll
cmc
jnp
sbb
outsl
cli
iret
adc
pop
sub
xchg
fidivrl
and
fdivrs
test
sub
stos
mov
fucomi
jb
xchg
cmp
lahf
mov
imull
cmp
mov
inc
or
mov
aaa
daa
sbb
cmp
loopne
roll
fmuls
mov
push
mov
ljmp
mov
enter
out
mov
jg
and
in
add
pop
mov
sbb
lods
jbe
inc
lds
mov
pop
inc
sbb
cmp
sub
add
stos
scas
das
ss
enter
rcr
scas
adc
add
push
or
jo
insb
clc
not
insl
movsl
in
test
dec
dec
dec
cmp
enter
dec
test
inc
mov
mov
mov
stos
scas
lret
mov
mov
lods
into
ja,pt
getsec
mov
add
test
jo
pop
imul
mov
lock
jae
test
inc
insl
and
fs
cmp
repz
scas
dec
mov
fiaddl
mov
imulb
jbe
out
jle
mov
dec
mov
in
sti
push
lds
pxor
mov
inc
mov
xor
gs
push
mov
jb
mov
add
pop
mov
mov
out
push
dec
mov
pop
setnp
fcmovnb
sbb
sub
mov
dec
jno
push
shrl
pop
sbb
jnp
sbb
loopne
push
pop
fstl
or
add
clc
pop
sub
call
xchg
fsubs
loope
xchg
mov
cmc
and
addr16
jmp
pusha
mov
xchg
dec
or
arpl
sub
sbb
or
and
xor
add
test
mov
aas
in
mov
push
rcl
loopne
mov
hlt
arpl
ficomps
add
push
adc
hlt
stos
in
pop
insb
mov
pop
jno
mov
jo
xor
movsb
in
test
xlat
cmp
aaa
adc
mov
and
xor
cmc
jp
js
scas
call
into
fnsave
xor
fadds
and
imul
pusha
jns
test
cmpsl
mov
inc
xlat
add
stos
jne
loope
ficoml
push
cmc
cwtl
mov
cli
or
pushf
cs
add
pop
jnp
loopne
adc
jg
subb
js
xor
fdivrs
lods
mov
ss
out
dec
sbb
mov
xchg
mov
fildl
in
movsl
sbb
xchg
or
push
jp
dec
mov
stos
add
xor
stos
add
sub
or
sahf
sbb
call
adc
shr
and
inc
ds
pop
mov
jne
xor
aam
or
paddb
jbe
push
mov
out
fdivs
mov
mov
jae
add
pop
jne
aad
or
sub
ljmp
stos
jnp
jl
jne
sub
lcall
mov
or
repz
ret
in
loopne
fnstcw
mov
push
jno
pop
roll
fucom
das
jle
outsl
mov
rorl
inc
push
test
jl,pt
cmpb
and
addl
pop
jno
in
fstpt
jnp
es
inc
mov
push
xlat
inc
ljmp
adc
fidivrs
jo
mov
test
ds
fdivrs
or
mov
mov
cmp
adc
or
inc
mov
mov
sbb
adc
adc
aas
pop
sub
in
mov
add
ja
dec
lret
loope
mov
sub
icebp
cmp
and
or
cmp
push
stos
xchg
xchg
repz
jp
ficoml
cmp
or
sti
mov
dec
mov
mov
adc
cmpsb
inc
shll
or
lea
xor
sahf
out
repnz
test
pop
or
fwait
or
lods
sbb
pop
jbe
jno
add
ficomps
cmc
mov
movsl
pop
mov
inc
int
or
test
push
xchg
pop
mov
or
das
cmp
out
sub
ja
or
sbb
mov
pop
push
ret
sub
sub
cmovg
fldl
cltd
stc
scas
loope
pop
jb
pusha
sahf
jl
cmpsb
cmpsl
cmp
lods
pop
dec
pop
push
pop
jle
pop
mov
push
adc
ss
cmpsl
xor
outsb
mov
gs
ja
mov
rcl
insb
dec
and
dec
es
push
push
xchg
in
pop
iret
pop
mov
pop
movsb
fdivrs
xchg
mov
imulb
mov
mov
inc
pop
xchg
cmp
sbb
inc
loop
inc
mov
addb
jnp
mov
xchg
cmp
insb
cmovbe
mov
push
in
push
cli
mov
pushf
call
jbe
jl
adc
pop
fwait
in
push
xchg
mov
in
add
mov
xor
sub
js
ret
in
pop
in
mov
inc
xor
or
sub
xor
lods
lods
test
sahf
imul
inc
insl
iret
adc
dec
pop
sub
sbb
adcb
pusha
jae
or
mov
push
or
fidivl
pop
or
inc
pop
pop
sub
jne
scas
adc
cmpl
cmp
daa
iret
test
inc
mov
roll
and
mov
mov
hlt
mov
fldcw
add
jmp
test
leave
xchg
test
scas
push
mov
adc
push
je
fldcw
lods
mov
xchg
pop
xchg
cmp
sbb
adc
or
shll
pop
int3
enter
jle
pop
sbb
insl
dec
dec
mov
scas
or
sbb
imul
jnp
cmpsl
xchg
cwtl
push
inc
mov
std
cmp
call
jmp
pop
ss
nop
jmp
gs
aaa
push
mov
lock
inc
push
iret
andl
pop
addl
push
mov
lods
xchg
jb
pop
mov
jno
icebp
pop
test
decl
rep
dec
lock
loop
or
cld
pop
pusha
ljmp
ljmp
scas
maxps
fs
clc
sbb
mov
scas
mov
loopne
into
push
mov
push
aad
inc
fnstcw
mov
pop
mov
and
mov
test
adc
adc
enter
aas
adc
rcrl
ficompl
fwait
cmc
xchg
imul
cli
cmp
inc
add
jbe
mov
jl
icebp
scas
push
pop
push
dec
jg
imul
mov
or
dec
aad
xchg
jle
xorb
adc
adc
test
lcall
sbb
int
movsl
insb
shrb
insb
test
adc
sbb
iret
inc
pop
jl
or
shrl
aam
and
mov
jno
aam
aaa
jbe
inc
cmpsl
adc
shl
int3
lods
and
cli
jnp
scas
cs
mov
push
clc
leave
fmuls
sub
leave
in
push
lahf
and
bound
nop
xor
fsubs
push
scas
cmp
mov
push
int
cmp
adc
sbb
adc
mov
jo
xchg
lock
pop
gs
jmp
jbe
dec
loopne
jp
popa
rcl
scas
xor
in
xor
cmp
mov
mov
fs
mov
pusha
mov
dec
popl
je
sbb
fwait
jns
mov
cmp
adc
pop
insb
call
aaa
insl
pop
aaa
into
jp
popl
mov
inc
xor
shl
lock
jp
cmpsb
fdiv
mov
pop
loope
cmp
xor
stc
dec
imull
push
dec
rcrl
shll
divb
clc
lds
mov
stos
iret
sbb
add
mov
pusha
testl
jl
das
adc
xor
mov
push
mov
fistps
loope
andl
bound
sbb
jae
jecxz
test
aas
jb
pop
sbb
out
jne
mov
lret
fstps
mov
xor
imul
pop
cmpb
fildll
and
mov
in
mov
jne
inc
jmp
cmp
ss
adc
aad
push
mov
popa
sbb
dec
outsl
lods
dec
xchg
sti
mov
clc
adc
push
rcll
xor
lock
movl
loopne
stc
dec
jmp
adc
xlat
js
orl
out
inc
adc
test
fdivl
popa
je
add
fsubrs
xor
cmp
sub
aaa
in
mov
int
push
mov
lea
adc
pop
xorl
je
sahf
cs
outsl
fsubrl
insl
mov
push
stos
mov
fnstenv
mov
push
cwtl
les
cmp
lcall
testb
mov
cmpsl
xor
jg
pop
cmp
dec
fstl
js
inc
bound
xor
mov
dec
daa
sub
sahf
loop
je
push
out
dec
sbb
pop
je
negb
xor
sbb
je
push
jbe
and
adc
or
roll
andb
dec
in
popa
add
insb
insl
mov
fs
push
cmc
jno
jmp
fstl
cli
jbe
mov
outsb
push
subb
jl
cmova
hlt
testb
sbb
mov
std
subl
pop
test
or
popf
sbb
lret
sti
aaa
pusha
push
sbb
repz
insl
ret
aam
push
mov
js
adc
enter
mov
xchg
and
stos
ja
rcrl
push
aaa
fldt
loope
sbb
sub
dec
lahf
clc
mov
xor
pop
sub
and
popf
sbb
inc
xchg
sti
nop
jo
inc
cld
inc
sub
push
push
mov
ss
mov
inc
jns
mov
insl
xchg
gs
cs
dec
add
adc
push
aad
xchg
daa
cmp
cmp
fstl
pop
dec
minps
jg
cs
push
mov
aam
or
out
xchg
fdivs
jp
ljmp
pop
pop
cmp
jbe
pop
call
out
jp
ljmp
sub
ret
add
ds
pop
mov
jl
push
jbe,pt
lcall
arpl
shrl
sti
inc
pop
cmp
lret
test
xchg
js
orb
or
sbb
push
ljmp
loopne
inc
sub
pop
jne
push
out
add
push
jmp
fwait
js
test
adc
xchg
divl
ljmp
dec
arpl
stos
pop
ja
jg
das
movsl
mov
or
mov
addb
fimull
jp
pop
adc
mov
pop
stos
outsl
clc
mov
out
mov
push
adc
add
inc
sbb
mov
test
jne
push
mov
or
push
rclb
and
push
imul
inc
xchg
xchg
sti
sbb
push
test
push
sbb
push
sti
cmp
sahf
jo
movsl
js
xor
or
sti
fdiv
ds
add
in
push
call
xchg
sub
add
lds
fst
pop
test
fistpl
or
mov
add
lods
dec
shll
in
cmp
xchg
mov
push
fucom
dec
inc
aas
popa
cwtl
lret
jo
jbe
or
xlat
mov
push
push
fsts
aam
mulb
iret
or
lea
lahf
fcomps
jge
mov
push
aam
stos
daa
arpl
add
fnsave
jecxz
pop
push
jmp
dec
pop
int3
ret
dec
iret
push
inc
xor
adc
xlat
data16
cmp
mov
daa
inc
adc
aad
out
inc
ror
mov
lods
dec
dec
ret
test
jmp
dec
lock
sbb
inc
or
jmp
clc
mov
mov
out
cmp
aas
int3
push
sbb
jb
adc
hlt
mov
aam
es
pop
mov
mov
sbb
add
arpl
push
xchg
mov
shrl
push
dec
shr
cmp
addl
call
push
jns
jb
sahf
outsb
jp
mov
pushf
push
imul
push
xor
out
fdivs
stos
pop
mov
or
mov
mov
ficomps
cmp
pop
jle
or
inc
sbbl
mov
lea
mov
je
pop
lahf
or
sub
movsb
icebp
mov
jecxz
imul
mov
inc
jne
mov
pushf
push
cmp
cmc
adc
rclb
mov
rolb
fisttpl
lret
shr
add
add
adcb
ret
ja
mov
cmp
push
sbb
push
adc
xor
orb
sbbb
push
fsubrl
lret
testb
mov
int
neg
iret
es
dec
jns
mov
xlat
mov
ss
inc
mov
test
movsl
push
in
add
mov
loop
out
pop
pop
xor
fldcw
movsb
cmp
stc
adc
subb
and
push
sub
mov
dec
inc
call
mov
imul
adc
cmp
les
int
mov
dec
orl
add
adc
aaa
je
jb
jne
repnz
pushf
test
aas
or
push
rcl
push
aad
add
xchg
pop
or
and
and
push
fisttpl
movsb
lahf
fdivs
es
scas
loop
pop
cmp
push
jne
lcall
arpl
psubsb
mov
sub
int3
cmpsl
or
jge
mov
push
xorl
ljmp
and
add
inc
inc
jmp
mov
testb
fdiv
mov
mov
jp
push
cmp
fidivrs
and
ficomps
paddusb
adc
dec
xchg
aaa
or
add
cmpsb
outsl
scas
mov
jmp
movsl
or
test
les
icebp
aad
xchg
add
in
in
adc
icebp
imul
out
mov
data16
pop
loopne
clc
int3
lock
testl
and
data16
loopne
in
jne
cli
fwait
ret
stos
or
push
rol
scas
lret
dec
sarb
mov
insb
out
xchg
paddw
jge
imul
test
pop
adc
lcall
stos
adc
sub
jl
xchg
mov
mov
enter
inc
xlat
mov
shrb
adcb
mov
in
daa
mov
pop
mov
xchg
mov
sub
inc
test
mov
movsb
mov
popl
inc
in
xchg
leave
push
out
ret
ja
xor
mov
pusha
dec
pop
and
fstps
pop
cmp
jnp
add
pop
popa
fstpl
icebp
adcb
inc
fcmovb
inc
jl
pop
and
shlb
lcall
pop
dec
shl
fadds
sbb
push
pop
call
out
pop
add
fisubrl
pop
or
xchg
out
ss
rorl
inc
dec
dec
push
ljmp
mov
and
inc
pop
insb
jmp
jnp
inc
mov
jl
jne
fsubs
setp
clc
lret
loop
ja
adc
xchg
jne
js
ffree
lahf
scas
cmc
mov
ljmp
cmpsl
daa
jle
fnstcw
jg
mov
daa
loope
add
pop
mov
xor
mov
fs
xchg
loope
pop
add
fs
dec
mov
jge
jmp
mov
cmc
inc
mov
sti
movsl
lret
lret
in
js
push
xchg
imulb
out
ja
imul
pop
dec
sbb
mov
mov
loopne
push
inc
adc
and
fcom
jge
xor
jb
push
pop
xor
incl
jmp
sub
xchg
jecxz
mov
mov
in
cmp
filds
mov
mov
mov
cmp
incb
ja
jne
ret
fmuls
pop
inc
mov
push
shlb
jae
or
test
sub
pop
adc
sub
popf
fstpt
mov
jnp
mov
ds
divb
mov
xchg
ljmp
out
or
fs
js
nop
push
stos
cld
out
add
lds
notl
cmp
pop
mov
rcll
and
push
mov
sbb
cmc
test
icebp
mov
mov
xchg
fcompl
pop
ja
mov
fst
inc
inc
xchg
outsb
mov
mov
push
mov
cmp
repz
out
mov
xorl
mov
insb
popf
popf
gs
or
jnp
mov
mov
push
cld
mov
xchg
sbb
or
icebp
xchg
std
stc
push
imul
idiv
fisubl
pop
xor
mov
scas
outsb
shll
sub
mov
mov
insl
and
sbb
fnstenv
arpl
repnz
jge
fwait
in
popf
pushf
add
jle
pop
lret
jmp
insl
inc
pop
mov
movsl
mov
mov
jo
orb
add
dec
fiadds
lods
pop
sti
cmpl
rcrl
xor
sub
add
jb
loopne
loopne
add
cmp
ret
insb
push
ljmp
jb
lret
mov
push
test
sub
pop
xchg
jg
mul
sub
mov
mov
jle
sub
add
sbbb
dec
movsb
fdiv
int
pop
clc
xor
scas
or
movsl
popa
sbb
ret
xchg
cmp
xchg
jl
mov
push
sbb
mov
mov
xlat
cmp
cmp
push
test
scas
cli
ss
pushf
test
test
out
pusha
lock
sub
rclb
out
cld
sbb
mov
lret
std
mov
cmpsb
mov
adc
out
iret
jo
repz
cmp
jecxz
xor
imul
ret
adc
push
pop
sub
lcall
sti
in
and
arpl
inc
sub
lods
scas
mov
sti
dec
xchg
xorl
xchg
imul
inc
jmp
push
pop
sub
jge
pop
and
mov
inc
outsb
addl
lds
cltd
leave
ret
in
jecxz
mov
add
and
push
rcl
outsb
hlt
orb
jb
popa
mov
rorl
push
jl
or
into
stos
ljmp
in
mov
jns
sbb
jp
test
pop
cli
lock
pop
pop
push
sti
clc
push
mov
fistpl
adc
xchg
pop
repz
loop
sahf
daa
and
pop
stos
in
add
mov
cmpsl
push
ret
clc
cld
aad
jns
fimull
out
sbb
mov
mov
push
push
cmp
jecxz
pop
test
xchg
jecxz
sbb
pop
pop
mov
or
ja
cmp
xchg
mov
loopne
out
test
lea
push
std
pop
push
xlat
movsb
js
cmp
adc
or
idivb
pop
xor
inc
xlat
adc
aas
cli
sub
cmpsb
out
sbb
jnp
ret
sbbb
lretw
pop
add
orb
js,pt
rol
mov
xor
dec
add
pop
push
dec
test
add
sbb
ja
cmpsl
scas
roll
test
ss
xlat
inc
aam
mov
in
leave
mov
in
sub
les
cld
jno
int
jl
outsb
cmp
iret
inc
pop
and
int
push
mov
in
sub
add
xchg
sub
aad
jns
jbe
dec
sbb
or
cmp
pusha
fcomps
inc
mov
sbb
sbbb
xchg
jno
inc
mov
cmp
lds
daa
sub
jno
int3
insl
cli
lahf
lret
cmp
scas
arpl
jnp
pop
mov
push
mov
push
out
jbe
popf
jmp
into
jns
rol
aam
dec
cmc
out
or
mov
jno
fnstenv
push
mov
lods
mov
arpl
jecxz
inc
mov
xchg
lods
shl
sti
out
fiadds
push
or
bound
and
outsl
insl
mov
cmc
fldenv
insl
jb
xor
shr
das
xor
sti
mov
sub
repz
mov
sarb
xchg
mov
xchg
mov
push
fsubl
xchg
mov
out
inc
in
stos
cs
testl
add
push
inc
ja
or
cmp
sbb
test
jle
pop
push
fcompl
test
xchg
mov
inc
fisttps
ja
xor
jnp
sti
adc
test
sbb
mov
jmp
loopne
in
or
in
daa
push
sbb
mov
mov
cmpsb
cmpsb
insb
sub
into
jo
and
shll
sbb
cmpsl
inc
sub
lods
ret
mov
jp
movsl
pop
in
testl
dec
cmpsb
outsl
js
inc
xchg
outsb
clc
loopne
pop
push
gs
dec
or
aam
loope
fisubs
mov
mov
xor
fidivs
mov
sub
lock
sbb
mov
imul
int3
lds
pop
clc
rol
push
sbb
or
sbb
setbe
push
mov
or
add
mov
cmp
xlat
mov
jecxz
mov
popa
loope
fwait
mov
dec
int
mov
call
in
push
imul
mov
notb
test
mov
adc
pushf
sbb
sub
aad
loope
mov
cli
adc
jle
mov
inc
dec
cmc
lcall
adc
divl
setns
je
arpl
pushf
icebp
dec
mov
jno
jns
dec
cli
inc
rol
sti
cld
in
test
lret
xchg
stos
sub
loop
mov
insb
ja
insb
outsb
gs
adc
jmp
mov
ret
push
or
call
in
jl
js
clc
xor
clc
mov
repz
test
cmp
loope
pop
test
pop
mov
popa
sarl
mov
icebp
cmp
mov
arpl
test
mov
or
imul
mov
inc
in
push
lea
aas
push
cmpsl
xor
data16
or
push
cmp
adc
pop
ja
push
icebp
pop
repz
cmpsb
cmp
in
sub
lods
in
mov
fs
inc
ret
jmp
push
xor
mov
inc
and
cmp
xchg
fmull
add
outsb
mov
xchg
sbb
subl
rcll
lock
add
insl
pushf
das
jge,pt
loopne
xchg
push
inc
or
icebp
cltd
sub
or
sbb
and
lea
pop
cmp
ss
in
push
mov
int
ficoms
xlat
mov
idivb
lahf
push
fnstsw
or
cmpsb
xor
mov
jl
jmp
cmp
push
or
pop
loopne
cmc
mov
or
ret
scas
mov
inc
and
mov
mov
leave
pop
lcall
xchg
adc
loope
mov
gs
test
sbb
dec
cmp
sbb
pop
push
shll
inc
data16
push
repnz
inc
sbb
cmp
ds
out
jne
loop
jmp
mov
lret
lods
inc
lock
pop
in
mov
adc
add
ljmp
in
push
insl
pop
xor
loop
sub
sub
jmp
sbb
sub
push
inc
sbb
fs
lods
dec
and
movsb
lock
testb
lea
sahf
sub
mov
lahf
jb
pushf
sbb
lock
faddl
in
mov
cmp
mov
lcall
data16
xor
mov
scas
lret
push
aad
mov
pop
jmp
push
lcall
cmpb
jle
je
xor
push
push
sub
std
xchg
aad
movsl
mov
and
xor
pop
popa
js
divl
and
ljmp
or
push
cld
jmp
test
js
jb
stc
test
jge
arpl
divl
inc
test
jg
add
lds
push
xchg
or
mov
enter
jge
lcall
imul
out
cs
out
dec
dec
adcb
rclb
divb
outsb
add
inc
mov
ret
or
lcall
mov
lcall
clc
mov
lock
outsb
add
shlb
out
rcr
push
inc
out
mov
add
pop
into
mov
les
rcr
clc
loope
das
inc
mov
inc
inc
mov
xlat
mov
dec
sub
int3
sbb
scas
fstpl
outsb
dec
xchg
push
insb
into
aam
aad
mov
in
div
mov
cld
repz
shl
mov
dec
cmp
add
addr16
ficomps
fildll
fbld
xchg
dec
pop
ret
mov
test
mov
dec
aad
and
pop
fcmovnu
lahf
fmuls
sbb
cmpsb
scas
fnstsw
in
xchg
jmp
dec
add
in
add
lds
push
stc
mov
pop
adc
push
out
or
das
mov
ret
aas
dec
inc
sbbb
or
fisubl
and
sar
cmp
aas
repz
add
lcall
cmp
add
sbb
in
call
aad
ret
imulb
stc
push
fldl
or
mov
divb
ret
sub
lret
or
push
xorl
imul
call
inc
xchg
loopne
repnz
dec
in
in
mov
in
mov
adc
pop
pop
xor
cs
ret
inc
pop
mov
inc
outsb
dec
aam
and
pushf
fildll
icebp
inc
fisubrl
bound
mov
out
jne
add
sbb
daa
in
or
xor
imulb
fisttpll
popa
scas
fldt
xchg
mov
jnp
mov
fbstp
jmp
cmp
jg
pop
in
mov
fsubr
mov
mov
push
dec
enter
cmp
add
out
nop
jae
fiaddl
inc
sub
icebp
shr
rep
in
pop
outsb
fldcw
jecxz
dec
mov
dec
add
cwtl
enter
loope
pop
mov
push
mov
push
scas
push
int3
xchg
loop
pop
jae
jle
push
mov
mov
rcrb
mov
jno
rorb
dec
add
sub
xor
inc
cli
sbb
out
dec
pop
push
repz
jns
inc
sbb
xchg
movsl
push
outsl
pusha
jb
adc
cmp
inc
popf
jmp
dec
in
sub
test
cmp
scas
outsb
mov
mov
lock
pop
je
inc
rcl
int
aaa
shll
jo
jecxz
int3
adc
mov
rcrl
sahf
es
xor
gs
test
lock
fdivrs
sarb
stos
push
add
push
je
mov
aas
sub
dec
imul
add
xor
inc
out
jbe
mov
xorb
shlb
mov
push
test
stc
test
sub
cmp
fwait
mov
jbe
nopl
pop
jbe
mov
push
clc
cmp
add
outsb
xor
sbb
outsl
pop
inc
cmp
inc
pushl
shl
fs
jg
pushl
into
or
and
cmpb
cli
cltd
pop
or
mov
js
jne
arpl
pop
mov
je
pop
cli
mov
xlat
push
out
ss
insl
addr16
jbe
and
push
mov
fstpt
push
lods
push
loope
insb
mov
push
mov
and
icebp
add
jmp
jnp
adc
dec
enter
fndisi(8087
jecxz
out
add
int
fcmovnb
inc
cmpl
xor
push
pop
shr
mov
dec
sbb
dec
add
in
inc
add
dec
jb
vpshufhw
add
add
dec
jp
cmc
lds
mov
pmaxsw
lcall
ret
cmp
and
inc
inc
sbb
inc
sti
xchg
push
inc
ret
aaa
aad
dec
dec
xchg
xchg
dec
lock
es
adcl
movsb
xchg
jb
inc
lcall
notb
js
or
clc
hlt
push
cmp
add
sbb
cmc
mov
insl
push
xor
push
shrb
sbb
arpl
cmpsl
in
pop
or
push
mov
or
or
lret
push
int
mov
push
fcomi
xor
push
sar
xor
ja
pop
push
lds
mov
fmull
test
jp
jae
or
xor
and
leave
inc
popa
xchg
sbb
jg
nop
sub
sbb
dec
aam
lods
mov
clc
mov
mov
adc
inc
pop
xchg
mov
ja
loopne
stc
test
jb
scas
std
jle
iret
push
xchg
push
in
pop
jo
int3
mov
jp
ja
shl
adc
sbb
push
pop
stos
dec
ljmp
xchg
jge
sub
xlat
jbe
addl
push
xor
mov
jae
mov
inc
stc
sbb
push
pop
xchg
fdivrs
lock
popa
loope
test
mov
adc
lea
add
sub
jecxz
xorl
sub
fbstp
testl
cmpsl
or
andb
xchg
pop
push
aas
out
sub
test
push
mov
mov
movsb
pusha
ds
adc
add
stos
cwtl
adc
pushl
push
dec
cmpb
cmpsl
add
stos
pop
cmp
cmc
inc
mov
fnstsw
and
jae
clc
clc
mov
imul
mov
pop
push
adc
inc
fs
jae
xchg
push
pusha
sbb
imul
comiss
ss
fst
pusha
in
push
fmull
mov
sbb
fcoml
cmp
rclb
mov
or
outsb
sbb
cmp
pop
jl
xor
fcoms
mov
mov
outsl
cld
jnp
rclb
mov
orl
iret
in
addb
sbb
push
xor
add
fisubrl
push
jp
jle
mov
test
test
or
cmp
mov
dec
je
xor
xor
icebp
out
jp
push
lds
inc
xor
jge
stos
jae
push
ljmp
mov
int
xchg
insb
test
jb
in
push
add
push
jmp
imul
cmpl
imul
loopne
inc
sub
push
clc
mov
or
mov
idivl
inc
rorb
aam
inc
ret
popa
mov
and
stos
push
inc
inc
or
xor
add
xchg
ljmp
adc
lcall
int3
adc
mov
xor
hlt
ss
add
sti
ret
pop
jno
jno
push
fcomps
mov
xor
dec
imul
in
cmp
fxam
push
or
lods
mov
shll
sub
adc
sub
clc
sub
addr16
movsl
ret
pop
out
mov
mov
mov
loop
xor
push
pop
xor
mov
cmp
cmpsb
or
jo
add
mov
shrl
mov
xchg
and
mov
sbb
insl
sahf
push
lret
test
cmpb
shlb
push
sti
inc
sbb
pop
fdivrp
fimull
cmc
and
pushf
test
and
fildll
int3
lods
test
scas
push
inc
and
push
subl
sbb
jmp
xchg
jl
xchg
int
dec
lock
loope
jns
lret
in
stos
daa
enter
mov
push
iret
ja
pop
mov
fiadds
stos
xchg
adc
push
sub
or
insb
mov
movsl
int
xor
clc
js
cli
fidivrs
adc
out
xchg
enter
in
xchg
mov
dec
addr16
xchg
iret
or
or
shll
or
jae
push
in
mov
sbb
xorl
jnp
jne
outsl
inc
pop
sbbb
pop
imul
test
mov
aaa
cli
imul
or
push
aaa
pusha
xchg
icebp
movl
mov
loopne
repz
loopne
pop
movsl
rcrl
adc
lret
jle
add
xchg
mov
rcll
sub
fildl
sbb
dec
jno
sbb
in
pop
mov
sahf
push
orb
lods
xchg
subb
jo
push
negl
out
fstpl
jl
mov
cmp
in
ljmp
fsubp
daa
ljmp
clc
mov
insl
jg
xor
cmp
jnp
mov
leave
mov
pop
jge
scas
jb
arpl
xchg
stos
cmp
xorl
pop
ret
je
dec
rorl
pop
sbb
xchg
mov
jle
dec
sbb
add
call
add
mov
jl
adc
inc
insl
sbb
push
cmc
add
mov
hlt
rolb
mov
jne
es
scas
fistpll
call
bound
inc
dec
lcall
scas
jmp
adc
or
je
or
stos
or
cmp
cli
or
outsb
popa
shl
pusha
jae
clc
subl
sub
test
sub
push
mov
mov
pop
out
and
mov
fnsetpm(287
adc
pop
ror
cmp
jle
arpl
mov
js
divl
imul
out
push
fucomi
xchg
add
add
mov
and
test
cmp
std
ret
cmp
push
test
rorb
scas
shlb
mul
nop
in
lock
xor
imul
out
mov
mov
sbb
push
mov
into
shll
movsb
mov
test
inc
pmaxsw
nop
cmp
xor
lahf
jl
les
mov
pushf
pop
mov
cmpl
dec
test
lret
mov
movsl
or
shlb
aaa
ds
stos
cli
adc
into
and
fwait
in
jbe
je
push
jnp
or
mov
leave
aam
dec
addr16
xor
cmpsl
daa
mov
push
inc
ret
jb
push
xlat
insl
outsb
push
std
into
adc
xor
inc
sarl
rclb
sub
push
fcmovnbe
mov
cs
sarl
sub
insb
lods
notb
in
movsb
push
sbb
mov
leave
cli
jmp
jne
cmp
and
cmp
push
in
or
mov
mov
aaa
test
sbb
les
ficoml
pop
lock
push
roll
flds
adc
adc
xchg
fcmovb
gs
pushf
clc
sbb
add
ds
scas
or
jmp
loope
cli
push
mov
ret
adc
leave
fdivl
adc
mov
add
fsts
xlat
mov
push
int
imul
je
mov
mov
lret
ret
pop
dec
or
out
mov
dec
jl
jne
jecxz
and
pop
rcrl
ret
fistpll
or
adc
mov
jne
jge
jmp
andl
sub
ret
lods
jp
push
leave
aas
jb
pop
jo
pop
mov
jecxz
enter
mov
and
in
movups
sub
test
and
push
mov
mov
fmuls
hlt
add
loope
ljmp
lret
mov
scas
iret
leave
sbb
sub
inc
jge
dec
add
mov
xchg
cmp
lahf
ficompl
scas
call
xlat
fs
sub
arpl
mov
and
adc
dec
pop
test
pop
int3
lods
xchg
dec
enter
bound
xchg
xchg
mov
jmp
mov
and
adc
xor
fistps
in
mov
mov
icebp
jmp
xlat
xlat
insl
jp
jmp
mov
cmpsl
push
or
push
pop
testl
ret
loop
stc
dec
mov
mov
cltd
xor
roll
in
push
test
ret
rclb
pop
loop
sub
inc
addr16
inc
out
and
cli
ja
loope
aaa
cmpsl
lret
loopne
xchg
loopne
into
aas
pop
int
ret
ret
mov
push
adc
repnz
or
arpl
jg
icebp
lods
jp
sbb
push
mov
gs
pop
fwait
lret
inc
mov
pop
movsl
cli
mov
xor
or
lods
test
jle
outsb
ljmp
dec
stos
adc
jge
aas
or
jne
jecxz
cmp
xlat
test
pop
push
sub
clc
jp
mov
adc
popa
xor
pop
pusha
imul
fs
lcall
push
mov
sub
dec
inc
push
das
pop
icebp
sbb
inc
lods
xchg
into
sahf
and
fwait
mov
ljmp
test
push
jl
dec
add
push
push
add
or
jne
and
lret
cmc
insb
jg
adc
ja
sarb
dec
pop
ljmp
fsubl
popa
pop
jge
mov
mov
data16
xchg
sti
mov
push
nop
pop
cmp
jbe
cmp
mov
add
lret
mov
inc
cmpsl
mov
inc
test
shlb
sti
je
push
cmpsl
dec
mov
sti
test
push
aaa
clc
in
sbb
push
cmpsb
les
arpl
cmpsb
cmp
in
xor
insb
sbb
inc
les
stos
mov
adc
test
ret
imul
bound
mov
add
sti
andl
xchg
and
mov
sbb
idivl
or
or
jae
sbb
lret
add
ss
fidivl
adc
js
xorb
mov
mov
adc
jae
jae
sbb
fstps
jecxz
cmp
xchg
cmpsl
rcrl
push
ja
js
jmp
push
sbb
cmp
lahf
push
adc
imul
fists
lret
fmull
add
jnp
cmp
push
cmp
scas
mull
sub
cmp
jae
xlat
adc
cmp
cmpsb
push
sub
call
xchg
mov
stos
int
sbb
outsl
xchg
stos
sbb
rcll
test
stos
mov
scas
pop
int
int
push
push
aas
fstpt
push
mov
xor
out
imul
mov
or
inc
test
mulb
cmp
mov
in
mov
mov
jns
in
inc
sbb
mov
int3
cmp
bound
lock
cs
stc
mov
jne
and
mov
std
scas
push
out
mov
dec
movsb
jo
movsl
pushf
lock
fldt
push
add
jge
dec
mov
std
fdivs
clc
int
cmp
dec
xlat
pop
cmpsl
gs
xchg
or
inc
xchg
insl
xchg
inc
inc
loopne
into
insl
dec
jcxz
negb
xchg
add
xlat
out
mov
mov
add
add
jmp
xchg
xlat
mov
sbbl
mov
push
outsb
scas
sbb
adc
clc
adc
lods
mov
pop
mov
lret
push
aas
outsl
mov
ds
sbb
inc
sub
dec
je
cltd
adc
mov
cmpsl
rsqrtps
shrl
sbb
jns
mov
cli
push
mul
sbbl
andl
jp,pt
shrl
mov
jmp
out
icebp
fdiv
pop
outsb
push
addr16
in
popf
xor
addb
aad
mov
and
and
aaa
fidivl
push
test
test
sahf
ljmp
ficomps
or
shlb
into
add
and
pop
add
push
pop
or
jae
sub
lss
testb
subps
das
in
xchg
mov
and
xlat
es
jnp
stos
daa
pop
sub
nop
lret
imull
push
sub
ficompl
add
scas
in
in
test
mov
or
cmp
cmp
jp
inc
inc
inc
cs
jnp
sbb
pop
dec
mov
dec
dec
clc
dec
pop
dec
jns
or
push
or
cmp
pop
pshufw
xchg
insl
mov
daa
in
pop
pop
sbb
mov
cwtl
fs
shlb
and
sbb
adc
outsb
sub
insb
imul
lods
stos
call
adc
in
gs
cmpb
jns
mov
inc
stos
jl
cmpb
mov
jb
ret
out
mov
sbbl
mov
cli
mov
pop
mov
xchg
xor
xchg
addr16
out
xchg
pop
add
dec
jnp,pn
cltd
or
adc
gs
in
lcall
pop
leave
mov
sub
pushf
scas
popf
sbb
push
jb
and
test
mov
adc
lods
enter
push
scas
mov
mov
mov
xorb
stos
mov
leave
xchg
out
ret
mov
in
dec
shlb
lret
inc
or
int3
imul
push
in
int
inc
adc
or
lret
pop
not
daa
pop
repz
leave
xchg
addr16
jns
iret
push
fld
ficompl
lret
fists
push
loopne
in
xchg
mov
in
clc
in
add
in
cmp
xchg
lock
dec
pop
enter
sub
xchg
inc
sahf
jmp
idiv
call
flds
stc
adc
repnz
add
pop
jbe
push
dec
add
push
adc
push
mov
scas
pop
xchg
pop
bnd
pop
xor
pop
add
fcomps
smsw
jbe
pushf
pop
adc
adc
sbb
push
rorl
fwait
sbb
nopl
pop
daa
mov
movlps
sbb
lret
jbe
xor
sbb
or
mulb
scas
and
xchg
mov
adc
daa
inc
popa
das
in
add
jno
movntps
jmp
push
shrb
xor
or
mov
daa
dec
aaa
stos
setp
or
add
in
cld
cli
jae
aaa
or
or
lea
sbb
test
or
lods
pop
pusha
add
add
adc
mov
xchg
mov
or
insb
outsb
inc
or
dec
orb
jnp
dec
add
pop
cmpb
in
inc
push
dec
or
mov
test
add
sti
dec
outsl
fs
dec
popa
outsb
fs
outsl
jge
imul
sub
push
push
mov
mov
or
subb
pushf
or
test
mov
popf
div
in
imul
addr16
sti
cmpsl
fxch
jbe
stos
fdivl
jo
imul
inc
adc
push
arpl
outsb
push
outsl
popa
jge
fwait
mov
jae
jb
outsl
insl
inc
imul
pop
mov
mulps
je
add
scas
add
ja
push
nop
add
adc
or
or
or
push
or
or
pop
or
or
lock
out
mov
add
sbb
add
xchg
add
pop
add
jmp
add
dec
add
or
movups
push
sbb
or
jbe
testb
or
add
add
lock
outsl
outsl
mov
lock
xchg
test
mov
inc
add
sbb
out
decl
dec
adc
pop
dec
add
adc
add
stos
dec
or
add
pop
inc
sub
or
orl
push
add
scas
inc
mov
insb
cmp
daa
mov
add
fldenv
or
xor
addr16
into
pusha
pop
adc
das
mov
xor
mov
shlb
adc
sub
xor
inc
dec
inc
inc
cmp
nop
jmp
and
inc
push
rorl
popf
sti
dec
pop
movsl
inc
inc
push
push
xchg
popf
cld
sahf
add
mov
shrb
fs
daa
fldcw
ds
lret
xchg
xor
shlb
test
lret
mov
xchg
or
jbe
sbb
outsl
pop
rcrl
add
sbb
add
add
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
