jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
ss
xor
xor
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
movb
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
movl
mov
mov
mov
push
mov
push
call
push
push
lea
push
call
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
movl
mov
mov
mov
push
mov
push
call
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
incb
cmpb
jne
mov
pop
ret
add
xor
xor
aaa
xor
xor
add
xor
xor
xor
add
add
in
add
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
push
push
lea
push
call
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
push
push
lea
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
mov
pop
ret
xor
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
in
add
mov
mov
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
mov
cmp
je
jmp
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
mov
xor
divl
test
jne
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
mov
cmp
je
jmp
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jg
jmp
inc
xchg
xchg
mov
dec
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
cmp
je
jmp
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
je
jmp
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
mov
sub
mov
cmp
jno
mov
mov
mov
inc
inc
dec
je
mov
xchg
lea
mov
xchg
mov
mov
dec
inc
lea
mov
push
mov
mov
xor
call
mov
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
mov
mov
mov
call
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
push
mov
mov
xor
call
mov
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
lea
mov
push
jmp
cmp
jno
mov
mov
mov
inc
inc
dec
je
mov
xchg
lea
mov
xchg
mov
mov
dec
inc
lea
mov
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jg
jmp
inc
xchg
xchg
mov
dec
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
mov
sub
add
add
mov
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
lea
pushl
call
mov
pop
ret
push
mov
add
mov
mov
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
push
call
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jno
mov
mov
mov
inc
inc
dec
je
mov
xchg
lea
mov
xchg
mov
mov
dec
inc
lea
mov
mov
mov
movl
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
mov
pop
ret
add
imul
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
push
cmp
testb
mov
xchg
lcall
cld
mov
xchg
sahf
mov
mov
mov
mov
cld
cld
mov
mov
mov
cwtl
mov
xchg
lahf
mov
xchg
cltd
mov
lahf
nop
lods
mov
mov
xchg
lahf
mov
fisubl
cld
cld
xchg
cld
lahf
cld
mov
lcall
cld
into
cld
mov
cld
cld
cld
cld
cld
scas
jne
jge
add
mov
mov
xchg
test
loopne
repnz
fidivrs
mov
fidivrs
cwtl
fidivrs
jl
mov
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
mov
cmp
mov
xor
jae
or
cmp
mov
cld
scas
jne
jge
xor
mov
ja
sub
jne
aam
jne
xor
mov
xor
lods
mov
mov
jne
xor
mov
xor
mov
sbb
movsb
jne
sbb
or
cld
cld
jne
or
hlt
jne
sbb
enter
jae
or
mov
cld
cld
jae
and
mov
cld
stc
subb
and
cld
std
mov
adc
cld
cld
xchg
cld
xchg
cld
jne
xor
clc
std
mov
xor
lods
shlb
adc
xchg
stc
subb
cld
jne
xor
cld
nop
jecxz
mov
mov
jne
xor
in
std
mov
adc
jne
in
std
mov
jne
xor
in
std
mov
adc
adc
mov
or
cld
cld
lods
jne
adc
jne
xor
lods
les
sbb
adc
jne
and
jae
sub
mov
lods
jne
adc
jne
xor
lods
les
sbb
jge
sbb
jge
and
jne
and
cld
push
jge
xor
jne
xor
clc
cld
stc
jg
or
or
or
mov
jae
add
mov
jae
adc
cmp
insl
mov
mov
lods
jne
cmp
movsb
xchg
cld
jl
cld
xchg
cld
jne
xor
mov
xor
lods
mov
cld
jl
cld
xchg
cld
jne
hlt
lods
jne
xor
lods
mov
scas
add
lahf
adc
loopne
or
or
push
jnp
cld
or
or
cmp
push
jne
cmpsl
ds
cmp
jne
pushf
jne
hlt
jne
clc
or
lret
and
xchg
cld
cld
cld
lea
lret
xor
cld
cld
cld
call
cld
cld
cld
fisttpll
mov
cld
cld
cld
in
cmp
adc
adc
cld
cld
cld
shll
in
adc
cld
cld
cld
adc
nop
mov
xor
sbb
pop
adc
cld
cld
cld
cld
xchg
cld
idivb
lea
jge
mov
jae
dec
sti
mov
or
inc
or
cld
cs
pushl
ret
cmp
sbb
or
jmp
adc
or
or
ds
cld
ja
cld
jae
jae
inc
or
or
into
cmp
pop
inc
or
or
shll
xor
jnp
add
or
jae
or
hlt
insb
mov
rep
mov
add
mov
je
clc
insb
mov
jl
add
mov
or
or
or
add
stc
xorb
cld
inc
mov
jbe
push
jne
or
dec
jbe,pn
add
or
or
mov
mov
mov
add
sub
push
cld
inc
mov
jbe
push
int
jbe
add
add
or
std
ds
jbe
add
insb
mov
or
cld
cld
je
push
int
jbe
add
mov
int
jbe
push
jbe
add
insb
mov
jl
add
pop
cmpsl
cmp
jne
stos
je
or
cmp
hlt
insb
mov
cld
cld
cld
pop
hlt
insb
mov
rep
mov
out
hlt
insb
mov
clc
insb
mov
or
cld
cld
pop
rep
mov
hlt
insb
mov
insb
mov
int
pop
rep
mov
insb
mov
out
hlt
insb
mov
insb
mov
rep
mov
je
clc
insb
mov
hlt
insb
mov
clc
insb
mov
out
rep
mov
clc
insb
mov
or
cld
cld
je
pop
int
jbe
pop
jbe
clc
insb
mov
je
or
or
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jg
jmp
inc
xchg
xchg
mov
dec
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
inc
movl
cmp
jno
mov
mov
mov
inc
inc
dec
je
mov
xchg
lea
mov
xchg
mov
mov
dec
inc
lea
mov
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
mov
mov
call
mov
cmpl
je
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
mov
cmp
je
mov
subb
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
mov
xorb
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
incl
mov
cmp
jne
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
mov
call
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
push
mov
push
call
mov
pop
ret
push
mov
add
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
mov
mov
mov
xor
mov
mov
cmp
jne
call
add
cmp
jne
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
movb
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
mov
mov
pop
ret
mov
push
mov
add
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
call
call
call
test
jne
mov
jmp
movw
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
call
lea
mov
pop
ret
nop
push
mov
add
movl
mov
mov
mov
push
mov
push
call
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jg
jmp
inc
xchg
xchg
mov
dec
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jno
mov
mov
mov
inc
inc
dec
je
mov
xchg
lea
mov
xchg
mov
mov
dec
inc
lea
mov
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jg
jmp
inc
xchg
xchg
mov
dec
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
inc
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
push
call
mov
call
cmp
jno
mov
mov
mov
inc
inc
dec
je
mov
xchg
lea
mov
xchg
mov
mov
dec
inc
lea
mov
mov
pop
ret
add
add
xor
xor
xor
xor
xor
aaa
add
cmp
cmp
xor
cmp
add
add
xor
xor
xor
cmp
xor
xor
aaa
xor
add
cmp
xor
cmp
xor
xor
xor
xor
cmp
add
add
aaa
cmp
xor
xor
add
cmp
xor
cmp
xor
add
push
outsb
push
inc
jae
fs
insb
and
add
add
jae
mov
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
movl
mov
mov
push
push
push
call
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
movl
movl
mov
push
mov
push
push
call
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
movl
mov
mov
mov
push
mov
push
call
cmp
jno
mov
mov
mov
inc
inc
dec
je
mov
xchg
lea
mov
xchg
mov
mov
dec
inc
lea
mov
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
movl
mov
mov
push
push
push
call
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
movl
mov
mov
push
push
push
call
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
movl
movl
mov
push
mov
push
push
call
cmp
jg
jmp
inc
xchg
xchg
mov
dec
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
inc
movl
mov
mov
push
push
push
call
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
movl
mov
mov
push
push
push
call
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jno
mov
mov
mov
inc
inc
dec
je
mov
xchg
lea
mov
xchg
mov
mov
dec
inc
lea
mov
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
movl
movl
mov
push
mov
push
push
call
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
movl
mov
mov
push
push
push
call
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jg
jmp
inc
xchg
xchg
mov
dec
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
inc
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
mov
mov
mov
lea
call
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
xor
xor
add
xor
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
xor
add
add
xor
add
xor
aaa
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
xor
xor
cmp
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
lea
push
addb
jns
imul
repz
add
leave
fmuls
adc
add
jp
add
ret
add
dec
fwait
ret
add
jecxz
ret
or
jl
out
add
add
insb
je
xor
add
add
pop
add
add
add
sahf
insl
add
inc
movsb
xchg
jecxz
stc
imul
pop
xchg
add
sbb
mov
cmp
push
inc
cwtl
add
outsb
les
add
xchg
push
movsb
jb
add
sbb
and
jp
arpl
xlat
stos
aaa
aam
add
add
push
xchg
add
fdivp
movsb
movl
xchg
push
pop
in
mov
add
push
add
shll
mov
or
lahf
inc
ljmp
lods
add
data16
pusha
fistl
cmp
stos
pop
add
pop
call
add
dec
scas
add
push
test
mov
xchg
xor
mov
popf
mov
add
in
add
fadds
fisubrs
iret
add
int
pop
add
mov
jnp
mov
sbb
jecxz
cmp
add
pop
lret
inc
cmpsl
es
add
dec
aad
mov
add
add
xchg
cmp
add
jmp
out
add
add
enter
lods
pop
jl
mov
cmpsl
or
out
and
mov
loop
add
pushf
cmpsl
test
sbb
shlb
and
xchg
mov
imul
mov
add
add
and
add
push
icebp
jno
mov
add
sbb
cmc
or
or
and
mov
xor
sbb
lock
sahf
or
add
or
outsl
or
pop
xor
or
add
das
icebp
add
pop
repnz
mov
mov
add
add
repnz
mov
adcl
lock
scas
push
add
push
shr
inc
add
add
jl
mov
add
loopne
add
xor
scas
sarb
rorb
in
aas
cltd
rolb
add
dec
loopne
xchg
cld
mov
xlat
add
testl
out
dec
ret
add
lock
jns
add
stc
stc
xchg
xor
xor
add
add
pusha
add
add
add
sub
add
loope
add
add
add
inc
pop
adc
push
in
mov
add
mov
add
addr16
adc
add
adc
add
roll
add
add
insb
addb
out
xchg
test
scas
jmp
add
add
in
add
adc
cltd
add
movsl
pop
dec
add
mov
popa
scas
cltd
sbb
inc
insl
ficoml
mov
add
mov
loopne
mov
mov
add
jg
in
add
mov
or
sub
add
jmp
push
cltd
fld
sbb
stos
xlat
push
fsubrl
sbb
loope
pop
hlt
adc
rclb
add
add
mov
jmp
add
add
add
sbb
pop
stc
flds
add
add
add
in
cmp
add
mov
mov
fiaddl
add
pop
and
aas
cmp
add
cmp
insl
and
xor
movsb
jne
inc
pop
popf
setno
rolb
aaa
add
fldenv
add
xor
add
mov
and
push
dec
add
cmpsb
add
insb
ja
jge
mov
mov
add
add
nop
xor
fimuls
push
data16
fstpl
je
push
mov
jg
mov
call
cli
pop
push
addl
mov
pop
mov
inc
mov
push
inc
cmp
mov
aas
popf
sbb
or
dec
lcall
cmp
stc
adc
mov
xor
icebp
mov
push
inc
lret
mov
out
mov
mov
subb
push
mov
sub
sti
adc
ret
fs
mov
insl
xchg
cmp
push
mov
ljmp
test
jnp
mov
stos
in
xchg
pop
pop
fwait
lcall
mov
test
xchg
ljmp
clc
push
repz
fs
sbb
push
pop
mov
dec
stos
pop
leave
insb
out
push
es
xchg
mov
rclb
dec
dec
sbb
repnz
or
in
xor
sbb
xchg
iret
mov
inc
rcr
xchg
adc
dec
sti
pop
stos
inc
lret
or
imul
outsl
cltd
scas
push
pop
icebp
and
and
incl
mov
push
jns
push
ftst
out
jno
push
and
lret
mov
adc
jp
pop
push
mov
stos
xchg
cmp
dec
sbb
out
mov
imul
lahf
mov
and
inc
jmp
fisubrl
subl
jae
push
ficoms
addr16
loope
and
and
cmp
jnp
cmp
jle
jno
in
cmp
push
pop
neg
cmp
ret
les
push
inc
and
out
inc
adc
int
add
mov
aam
ret
fcmovb
hlt
movsb
xchg
sbb
jp
cmp
scas
ljmp
push
out
testl
iret
inc
or
repnz
das
and
fucomp
inc
add
add
enter
sbb
jg
add
mov
scas
pop
pop
xlat
popa
jl
rorb
mov
divb
scas
movsb
stos
outsl
pop
push
inc
add
jbe
mov
test
xchg
mov
cmp
jne
jno
jg
jl
popf
xchg
dec
inc
rcr
push
mov
xor
add
andb
jbe
jb
in
mov
lds
mov
cli
lock
inc
jmp
fisubrs
ljmp
out
jl,pt
mov
and
inc
xchg
lahf
stos
test
xorb
pop
sbb
adc
orb
or
dec
mov
pop
sub
jmp
hlt
xchg
mov
lcall
in
pop
push
push
outsb
cmp
cs
mov
add
fwait
cmp
mov
imul
cmp
int
sbb
sub
aad
lret
xor
adc
repnz
xchg
xchg
sahf
call
push
popl
push
or
loop
pushf
test
jbe
dec
lods
notl
jns
and
insb
aam
cmp
mov
pop
sbb
dec
mov
sub
pushf
or
or
into
mov
cli
cmc
lock
outsl
xor
stos
imul
incl
jo
add
lods
arpl
shl
icebp
les
fldt
cmp
adc
xor
clc
insl
test
and
mov
loopne
orl
fsts
add
es
xchg
xchg
pop
sub
sbb
mov
xor
es
add
jmp
add
cs
ljmp
push
mov
push
and
cmp
ret
sub
orb
test
out
cmpb
jns
out
adc
adc
fcomi
ja
pop
xor
imul
or
cmp
aas
fidivrs
lret
xchg
mov
ljmp
sbb
sub
mov
sbb
mov
xchg
psubsw
push
jmp
mov
dec
call
das
lret
shlb
dec
sub
test
ret
repz
sub
js
clc
jo
cmpsl
adc
pop
popa
mov
data16
mov
or
or
out
push
and
insl
pop
mov
mov
test
inc
sub
lods
jmp
inc
clc
xchg
fistpll
sbb
dec
in
stc
xchg
push
pop
xor
es
dec
jbe
out
imul
push
cmpsb
cmp
scas
mov
xor
test
xor
push
popf
mov
mov
pop
iret
test
inc
outsb
xchg
inc
dec
inc
popa
ss
or
insl
xchg
fwait
sahf
pop
lcall
jns
add
sbb
bound
mov
jb
scas
xchg
mov
jg
mov
subl
sbb
mov
rorl
jp
jne
jb
mov
jnp
out
mov
mull
xchg
movsl
iret
in
mov
fsub
jmp
cli
sub
xlat
xchg
addr16
or
pushf
leave
sti
insb
scas
push
push
jnp
hlt
icebp
jle
cli
fxam
push
add
test
pop
pop
ret
mov
inc
sub
dec
jae
and
push
ds
and
shlb
adc
or
jg
in
imul
pushf
scas
bound
adc
cltd
iret
movsl
out
push
cmpsl
leave
jbe
push
hlt
push
jle
arpl
fildll
pop
std
push
cmp
xchg
or
mov
int3
and
sub
add
lds
xchg
fs
xor
and
jns
movsb
xor
mov
aad
je
push
sbb
xchg
jecxz
xor
push
popf
cld
jno
sub
dec
scas
pop
mov
xor
pusha
and
inc
push
int3
sbb
lods
push
mov
addr16
cmpsb
in
mov
sub
cmc
aad
daa
adc
push
aad
loope
cmc
cmpsl
sub
jbe
cmp
repnz
xor
call
lahf
leave
xchg
addb
sbb
addb
or
adcl
push
inc
xchg
js
int
pop
ret
jge
lcall
insb
fmull
pop
pop
sub
les
pop
mov
rclb
push
mov
mov
hlt
or
movsl
mov
mov
pop
stc
cli
dec
lret
pop
shrl
sbb
pushf
jmp
jge
imul
jmp
sub
sub
xorl
enter
scas
in
mov
ss
divl
adc
cmp
lea
into
outsl
out
cmc
mov
repz
jo
outsl
adc
inc
adc
inc
dec
imul
and
add
out
sub
lods
dec
jbe
mov
out
mov
push
mov
arpl
sti
jecxz
mov
inc
fimull
loopne
sahf
popa
pop
xor
mov
arpl
jns
outsb
xchg
pop
dec
fs
fsubp
push
xlat
mov
jo
iret
ret
sbb
sub
adcb
pop
and
nop
ljmp
jb
cwtl
fimuls
stos
jge
lods
add
jecxz
mov
movb
xchg
call
clc
nop
mov
xorl
shr
dec
mov
ret
fs
mov
fsts
jge
shlb
or
and
loopne
sarl
scas
shl
pop
in
std
inc
xchg
ficompl
ret
mov
insl
lret
xor
mov
mov
inc
push
lock
lods
inc
shlb
and
aam
sarl
ret
sbb
es
mull
insl
fs
dec
dec
repz
arpl
mov
pop
lods
push
mov
xor
and
mov
pop
adc
dec
inc
stos
cltd
cli
or
test
test
jo
test
fs
lods
clc
int3
pop
rcll
faddl
scas
rcll
push
pop
fildll
stos
cmp
stos
out
int3
rclb
dec
push
push
push
adc
xchg
cwtl
scas
popa
or
fistps
xchg
rclb
cmp
xchg
pop
sbb
loope
inc
clc
icebp
or
inc
mov
push
pop
cli
mov
add
and
inc
jnp
bound
push
das
in
xchg
setae
scas
mov
adc
pop
cmp
movsb
ja
in
mov
lcall
mov
and
out
fwait
xorl
lret
jmp
jo
xor
outsb
test
or
lcall
pop
je
and
jo
cmp
jle
ja
in
das
or
xchg
adc
ret
aas
pop
test
add
aaa
sub
jae
je
push
add
popfw
dec
mov
mov
push
nop
stos
fisubrl
or
xchg
shr
sbb
or
imul
add
jl
nop
adc
movsl
iret
add
add
int3
cmpsl
sbb
in
mov
hlt
push
and
arpl
cmc
stos
inc
pop
cltd
jbe
ret
ljmp
mov
fcoml
add
ret
add
push
repnz
pop
mov
add
sarb
mov
sbb
push
cmp
inc
ja
rcrb
jecxz
push
jbe
fmul
jge
mov
cmp
mov
jns
jno
cmc
pop
jl
or
push
jp
sbb
in
and
jo
xchg
xor
lahf
push
jo
fs
rcll
daa
inc
dec
push
sahf
cmpsb
outsl
stos
xor
push
cli
das
enter
daa
adc
outsb
push
mov
loope
pop
xor
sbb
cmp
mov
ret
movsl
cmp
out
or
stc
lahf
call
shll
add
subb
jecxz
shll
test
js
xchg
aam
add
cs
cmp
mov
jg
xor
mov
adc
outsb
fucomip
cmp
cmp
imul
and
repz
test
pop
int
add
sub
aad
js
xor
pop
xchg
test
jmp
jmp
sahf
cs
xchg
test
incl
xchg
int
loop
fwait
mov
fs
mul
adc
jge
ss
cmp
sbb
cli
mov
leave
xor
ds
cmp
loop
or
or
push
iret
aaa
cmc
jle
ljmp
adc
pop
imul
add
add
fildll
dec
cld
add
sub
adc
ds
in
into
into
or
xchg
cmp
push
lret
gs
dec
mul
adc
jmp
push
lods
sbb
cmp
mov
ret
fdivs
les
pop
repz
imull
xchg
loop
cs
sbb
pop
xlat
icebp
inc
mov
sub
jb
rcrb
dec
ja,pn
jnp
lahf
or
xchg
dec
mov
stos
jb
inc
orl
shlb
jecxz
xchg
mov
pop
lea
jp
jbe
ss
ja
iret
mov
roll
add
dec
fistl
mov
inc
inc
pushf
sahf
inc
lea
mov
xor
call
mov
push
mulb
movsl
cmp
adc
sub
inc
test
out
aad
rorl
sahf
push
lock
stc
out
or
into
aam
dec
call
xor
and
out
clc
ljmp
xlat
lods
mov
xor
mov
cmpsb
test
clc
mov
cmp
pop
xchg
cltd
mov
outsb
enter
pop
fisttpll
je
xchg
and
cmc
shll
jno
stos
sub
out
das
cld
inc
xchg
xchg
fcoms
push
pop
icebp
jo
insb
mov
xor
data16
daa
xor
xor
roll
in
xchg
sub
xchg
xor
or
rcrl
insl
inc
add
je
in
jecxz
pop
bound
xor
inc
xchg
ds
shlb
mov
test
ja
dec
jp
and
mov
imulb
mov
xchg
jecxz
les
pushl
hlt
movsb
mov
push
out
pop
jge
xchg
popf
orl
xchg
cmp
adc
icebp
and
sub
int
jge
outsl
xorl
jp
or
lret
insb
test
jnp
mov
jle
call
mov
fisttps
pop
mov
pop
fildll
inc
inc
shll
mov
repnz
xlat
les
ss
pop
push
xchg
sbb
fcmovu
and
ficompl
nop
scas
sub
push
push
ret
sub
adc
fdivl
pop
insl
cmp
fs
lret
push
sbb
inc
or
ds
xor
dec
inc
aaa
repnz
or
cltd
push
int3
stc
adc
call
das
lds
lea
jmp
mulb
scas
cwtl
icebp
cmp
dec
mov
jbe
xchg
pop
jge
inc
lods
sbb
adc
cmp
out
jl
std
xchg
sarb
xor
push
push
nop
scas
ja
add
rcr
pop
cmp
push
dec
mov
xchg
cmpsb
repnz
cmpsl
jne
jmp
dec
daa
jg
loope
out
sub
xchg
adc
div
ds
fldenv
cmpsb
mov
pop
push
and
sbb
rorl
mov
xchg
popf
pop
lahf
out
js
cmc
cwtl
pop
inc
push
jns
push
mov
pop
jecxz
sub
loopne
outsb
popa
aad
adc
dec
or
fwait
inc
xorb
xchg
jbe
dec
xchg
lods
and
xchg
stos
pop
cmp
jecxz
add
repz
push
lret
ds
mov
aam
xor
adc
pop
sahf
roll
mov
jg
mov
loop
call
jge
dec
sarb
xor
pop
sbb
aam
mov
xor
pushf
cli
out
xorl
cmp
cmp
or
or
data16
xor
xchg
lock
jb
outsl
iret
gs
adc
sarl
add
xorb
dec
outsb
icebp
out
xor
sub
adc
cmp
fdivr
lea
loopne
adc
pop
outsl
push
pop
inc
dec
fdivl
fsqrt
and
inc
gs
pop
scas
xchg
movsl
ljmp
push
push
rcl
xor
pop
xor
icebp
pushfw
sub
nop
jmp
int3
hlt
ficoml
lea
adc
cmp
and
mov
icebp
cmp
push
lcall
fstpl
pop
imulb
sbb
pusha
sbb
dec
out
movsbl
jg
in
pop
sbb
fwait
inc
int
adc
aas
mov
int3
adc
xchg
loopne
fldcw
inc
mul
pop
xchg
std
xchg
sahf
or
inc
adc
push
push
movsl
icebp
sbb
lret
inc
mov
mov
pop
sub
ret
sub
dec
movsb
rcr
or
sub
rol
xor
push
ret
mov
lock
insl
xor
cmpsl
push
scas
scas
ljmp
inc
lods
hlt
add
mov
jbe
cld
and
repz
jmp
pop
daa
add
jae
popa
cltd
push
aas
sbb
idivb
fnsave
sbb
xchg
pusha
sbb
sbb
call
pop
xor
adc
mov
push
aaa
and
bswap
cld
xchg
xor
push
sbb
xor
testb
push
into
xchg
aas
test
add
dec
xor
dec
or
imul
mov
sub
popl
lods
incl
add
jns
push
and
adc
xchg
lea
mov
pop
xchg
mov
mov
push
ja
daa
out
jp
cmp
mov
add
xor
cltd
mov
call
or
lret
ds
xor
hlt
lret
adc
cltd
ret
out
cmp
mov
and
enter
outsb
inc
adc
loope
dec
insb
out
mov
cmp
in
mov
pusha
jp
pop
mov
ret
xchg
pop
push
pop
dec
inc
dec
into
ja
jg
into
push
xchg
jo
pushf
scas
cmpl
sub
fimull
push
xchg
sbb
shll
imul
or
or
js
ret
bnd
xor
cwtl
hlt
out
mov
sbb
testb
mov
or
or
add
fcomps
cmp
fisubrs
and
adc
dec
shlb
hlt
and
fwait
cmp
dec
movsb
xchg
or
je
jbe
mov
sbb
and
cmp
dec
jnp
pop
sti
aas
jl
or
push
inc
pop
fnstenv
jno
pop
scas
push
mov
push
inc
popa
shrl
cwtl
and
push
pop
mov
enter
daa
push
mov
push
dec
loope
xchg
outsb
sub
jecxz
cmp
std
jne
dec
sub
lahf
es
dec
sbb
or
mov
pop
xor
jge
pop
or
pop
pop
addb
push
sub
sbb
adc
outsb
adc
and
mov
mov
sbb
mov
add
and
mov
pop
int
js
sub
mov
jbe
cwtl
lret
pop
shll
mov
push
fistpl
adc
push
sbbb
jg
mov
inc
stc
push
nop
push
fs
jae
mov
nop
ss
addr16
out
enter
dec
jmp
cmp
or
or
pop
mov
cmc
or
je
sub
jbe
scas
mov
subl
jg
insb
ret
lods
leave
stos
data16
mov
inc
je
out
mov
sub
lock
sti
lock
xor
mov
dec
imul
pop
mov
imul
cmp
xor
cwtl
les
mov
out
and
sbb
imul
outsl
insw
pop
call
xor
pushf
aad
xchg
jmp
cwtl
outsl
cs
adc
nop
jnp
test
mov
jb
ss
je
gs
gs
mov
scas
call
jne
xchg
notl
stc
fldt
shlb
push
lahf
aas
inc
ret
add
pop
push
push
mov
mov
mov
pushf
imulb
lret
clc
std
cmp
mov
fmulp
adc
call
mov
repnz
mov
add
fidivrs
lock
int
das
inc
lahf
imul
in
into
pop
cmp
xor
ret
das
mov
es
fwait
fs
sbb
cmpsl
dec
in
movsb
cmpsl
or
lods
popa
adc
sbb
pop
cmp
jl
outsl
mov
int
mov
ss
lock
call
mov
jp
xor
cwtl
das
fstp
jbe
clc
jge
add
lahf
shld
cmc
arpl
pop
loopne
icebp
stos
or
xchg
out
cmc
dec
pop
xchg
pop
adc
push
adc
cvtpi2ps
xor
inc
in
sarb
or
xchg
test
mov
movsl
dec
mov
je
or
mov
dec
push
inc
fildl
stos
and
jmp
mov
add
stos
dec
in
ljmp
sbb
cmp
insl
repnz
or
mov
xor
mov
outsl
mov
xor
add
inc
out
sbb
fisttpl
jmp
jno
shll
mov
xor
ret
dec
xlat
insl
xchg
stos
pusha
sbb
clc
sbb
pop
sarb
jle
cmpsb
mov
outsb
push
mov
fistps
sbb
pop
dec
dec
inc
inc
pop
pop
jae
add
push
dec
rcll
mov
xadd
inc
jne
xchg
lret
bound
imul
mov
push
xchg
data16
pop
mov
repnz
mov
xor
sub
pop
inc
inc
adc
or
sub
test
xlat
das
pop
add
sbb
iret
lret
inc
mov
fwait
lds
inc
fs
aad
cmpb
ja
movsb
popa
xor
dec
insb
xor
jmp
fildll
lea
and
jno
xor
dec
bound
imul
xor
int3
cmp
sbb
pop
push
in
ja
neg
cmpsb
clc
jnp
in
or
jp
loope
scas
daa
or
mov
sub
add
cmp
sub
cmp
lahf
inc
sub
orb
sbb
js
xor
jbe
sbb
push
in
sbb
sbb
pop
mov
adc
fdivl
pop
insb
outsb
daa
sbb
adc
call
jne
cmp
mov
dec
mov
and
mov
push
mov
sbb
sub
xor
pop
cmc
mov
test
or
sbb
mov
pop
aaa
push
test
pop
outsb
jg
nop
loope
sbb
leave
stc
or
fs
mov
add
push
ss
xchg
fmuls
mov
scas
out
fsqrt
dec
jo
xor
inc
or
es
cmc
rorl
out
add
outsl
lea
bound
sub
das
pop
adc
mov
scas
cmp
in
mov
in
mov
pop
mov
setbe
sti
lahf
jno
shrl
gs
enter
nop
pop
lods
mov
inc
je
icebp
fldcw
xor
repz
cmp
push
jg
cmp
push
jmp
scas
cmp
pop
fwait
stc
pop
adc
mov
jmp
sub
aad
sub
add
lods
sub
jge
dec
mov
dec
je
sub
dec
xchg
aad
lea
xchg
into
hlt
rolb
mov
movsl
orl
inc
fistps
push
adc
inc
ficomps
xchg
mov
push
push
mov
shll
dec
imulb
jbe
jecxz
mov
cltd
cmpsb
jno
mov
inc
sub
leave
sbb
test
and
and
movsl
add
das
and
mov
sub
icebp
mov
ret
mov
mov
xor
mov
jno
push
lods
fsubs
inc
lods
lret
mov
mov
jp
mov
push
add
inc
cltd
and
test
sbb
push
jl
adc
add
test
mov
xchg
sbb
fnstcw
mov
ljmp
cbtw
xchg
retw
arpl
lds
jns
rorl
mov
xor
pop
jmp
mov
mov
test
adc
xor
or
pop
cmp
pop
cli
or
jecxz
fwait
mov
add
lds
shrb
bound
jns,pt
fldt
sub
test
lods
fists
pop
sub
ja
jae
jp
xchg
pop
xchg
mov
push
push
insl
subb
mov
xchg
out
cld
jle
xchg
push
push
scas
jmp
pushf
scas
fwait
addl
jne
pop
ret
mov
dec
sbb
and
dec
mov
fnstsw
adc
jle
repz
pusha
mov
fistpll
sbb
std
icebp
dec
pop
test
sub
xor
or
ss
mov
dec
hlt
stos
sub
sbb
call
inc
scas
push
lcall
les
fmul
subb
leave
leave
push
xchg
jge
scas
arpl
push
inc
inc
adc
hlt
or
movsl
arpl
inc
mov
mov
lret
add
dec
int3
mov
add
fidivs
dec
add
jmp
cmp
and
cmp
and
pop
inc
or
test
jge
xor
aaa
sahf
mov
cmp
jae
mov
mov
dec
ficoml
inc
xor
daa
sub
scas
adc
push
push
jmp
shrl
scas
jge
inc
xchg
mov
enter
daa
or
test
nop
cmp
xor
pop
sub
cli
cmc
cmp
jecxz
ds
sbb
inc
and
rcrl
daa
jp
jb
sub
jb
xor
pop
jno
fstpl
in
push
mov
lcall
iret
fsubl
mov
lock
jnp
or
rcr
cli
rorb
inc
sbb
mov
and
jg
sbb
sub
pop
je
pop
lret
loop
lahf
add
mov
xor
sahf
mov
add
adcb
jg
test
loop
or
stc
shl
fs
adc
adc
sbb
decb
cmp
add
cwtl
pop
cli
jg
je
mov
ret
jg
or
xlat
into
push
cmc
lcall
outsl
insb
insl
movsb
adc
daa
cwtl
imul
sarb
mov
lods
int
push
mov
cmp
out
inc
add
lea
mov
jp
arpl
dec
popa
stc
divb
fsub
jge
mov
inc
xchg
scas
les
mov
test
xchg
out
mov
fwait
cmp
xchg
and
mov
into
and
pushf
sub
push
jmp
jl
cs
adc
stos
xchg
nop
xor
outsb
jb
stc
orl
dec
pop
jecxz
outsb
rol
xchg
sbb
lea
cmp
call
jae
mov
and
and
pop
add
arpl
xor
stc
and
aas
cwtl
mov
sub
xor
cmp
scas
std
ds
mov
outsl
cwtl
push
sbb
jge
or
in
dec
cwtl
icebp
mov
lcall
mull
mov
in
xlat
lock
mov
add
fcom
push
aam
sub
in
ret
dec
cmp
enter
orl
fs
ljmp
mov
xor
dec
jns
jmp
fcmovnb
scas
mov
je
push
cltd
or
das
add
aas
sub
frstor
push
lock
repz
xchg
sbb
sub
pop
ss
sub
mov
fldenv
call
push
inc
or
jecxz
xor
mov
mov
mov
inc
dec
dec
outsl
add
mov
push
mov
imul
or
into
fwait
mov
mov
mov
loopne
hlt
lcall
hlt
div
lret
jns
mov
in
jae
xchg
jp
sub
push
mov
lret
ja
pop
mov
mov
sarl
mov
dec
push
sub
mov
cmp
out
fcmovnu
mov
flds
addr16
adcl
ja
std
sub
or
fwait
es
inc
mov
push
jnp
bound
in
in
cmc
pusha
dec
add
fistps
movsl
ret
inc
pop
mov
mov
fwait
push
rcrb
pop
mov
lea
fisubl
ja
sbb
xor
scas
mov
outsl
push
fisttps
fmul
fildll
adc
hlt
enter
or
xchg
inc
push
pop
lcall
roll
dec
mov
mov
or
int3
movsl
aam
pop
movsb
or
push
jbe
lds
dec
xchg
mov
sti
mov
and
xchg
cmc
jbe
adc
jge
dec
mov
aaa
pop
mov
jle
mov
out
sahf
push
loopne
dec
bound
jmp
movsl
jo
decl
scas
repz
loopne
mov
in
push
jp
aaa
inc
adc
mov
mov
xlat
push
adc
or
scas
loope
jl
sub
ret
push
cmp
fwait
movsl
movsl
pop
in
pop
and
dec
rcrb
jle
sbb
shlb
mov
fistpl
pop
cmp
mov
fmull
out
sub
jecxz
outsb
in
xor
mov
xor
mov
addr16
mov
push
dec
and
jmp
push
mov
insl
int
pop
fildll
and
repz
mov
sbb
shll
cmpsl
mov
jmp
sahf
pop
mov
repz
jg
jnp
loop
daa
xor
ja
lcall
xor
ss
clc
push
test
jns
ror
imull
mov
mov
stc
xor
sbb
clc
mov
into
sarl
popa
push
push
xor
push
inc
adc
out
xchg
imul
push
push
add
int
aas
outsb
rep
mov
dec
mov
jb
ljmp
mov
in
push
sti
std
adc
sbb
aad
addb
pop
jmp
ret
xor
mov
pushf
repz
ss
xchg
mov
negb
inc
sub
xlat
sub
sbbb
jnp
and
cmpsb
bnd
xchg
inc
data16
aad
mov
or
insb
dec
xchg
test
dec
jl
sub
outsb
mov
and
xchg
shrl
jns
mov
or
repnz
mov
in
dec
fwait
jnp
fstpt
pop
in
cmpsb
push
push
inc
jmp
cmp
aaa
repnz
mov
mov
push
pop
div
les
cwtl
nopl
cmp
push
mov
ja
sbb
xor
lret
add
shll
xor
das
jecxz
pop
shlb
sub
aam
xchg
ret
fsubr
jmp
rclb
into
push
or
pop
mov
cmp
sbb
lods
mov
xor
and
pop
sahf
dec
pop
xchg
repz
mov
mov
push
daa
push
mov
add
fisttpll
mov
test
sbb
sbb
pop
and
pop
loope
stos
mov
jbe
hlt
push
pop
push
mov
ljmp
jp
jg
mov
mov
dec
mov
or
xor
xchg
inc
sbbb
fwait
out
pop
push
das
divb
add
sti
clc
cmpsl
sbb
test
shl
aas
mov
loop
sarl
sahf
ss
ja
into
enter
xor
faddp
inc
mov
dec
jne
push
aaa
mov
sbb
adc
rcrb
xchg
xor
pop
out
push
jbe
sub
lret
or
sbb
and
dec
iret
jnp
js
jle
push
in
jno
pusha
out
dec
fistpll
ret
cmp
pop
repnz
inc
jns
jge
mov
lods
fstps
pop
or
pop
xor
xchg
shlb
add
imul
gs
mov
push
iret
ds
xor
push
push
leave
mov
and
arpl
sahf
and
jns
or
fwait
mov
or
xchg
int3
nop
pop
pop
rcr
mov
imull
lds
jmp
mov
mov
xchg
and
movsb
add
push
mov
adc
jge
inc
and
insl
fsubrs
cmp
mov
jl
xor
hlt
pop
push
int3
or
jmp
scas
shlb
lea
call
push
push
inc
mov
inc
movsb
stc
xor
andl
enter
daa
or
jbe
popf
loope
mov
mov
ds
or
inc
and
adc
or
mov
loopne
fsubl
xor
enter
test
js
js
pop
jl
mov
out
push
push
xchg
adc
mov
xlat
sub
into
loopne
push
sub
adc
nop
add
mov
ds
mov
and
adc
mov
adc
xor
jb
cli
lret
push
ror
rorb
push
sahf
add
test
jae
orb
dec
loop
js
stc
jecxz,pn
fs
push
xorl
push
imul
jmp
iret
cli
in
ljmp
inc
adc
into
movsb
adc
cmc
sub
sub
adc
or
adc
xor
add
scas
retw
lods
fwait
ja
mov
push
cmp
jmp
lahf
int3
mov
push
rcrl
lods
mov
cmp
test
mov
das
pop
or
arpl
or
lock
repz
xchg
je
lret
sbb
jnp
stc
xlat
imul
pop
mov
dec
adc
pushf
subl
je
leave
fdivr
aad
roll
nop
out
mov
jb
mov
repz
mov
cli
sub
lcall
call
jno
pop
mov
repnz
xchg
inc
pop
dec
mov
stos
inc
das
arpl
mov
jl
out
dec
pop
shll
divb
outsl
std
fcom
jecxz
lret
mov
or
je
icebp
dec
mov
lret
outsl
daa
mov
mov
in
jp
mov
mov
sar
mov
sub
cmc
mov
imul
es
int
insl
mov
xor
rcrb
xchg
scas
fs
popa
outsb
dec
and
mov
and
jle
mov
mov
inc
add
add
cltd
jnp
xchg
pop
fistl
xchg
ret
gs
imul
mov
sarl
pop
mov
stos
lds
out
andl
jle
iret
outsl
dec
xor
cld
cmp
icebp
adc
xor
in
push
mov
mov
ljmp
mov
out
dec
xchg
insb
inc
sbb
jno
loope
lods
fwait
push
hlt
or
shlb
push
add
push
imul
bound
js
lret
xchg
sbb
mov
mov
pop
jne
ja
ret
cmp
mov
pop
add
mov
mov
shll
fstps
rcll
out
cltd
movsb
loop
xor
xchg
std
mov
cmpsl
out
data16
or
mov
inc
and
insb
push
lret
add
and
xchg
shl
pop
call
fistps
lods
push
pop
sub
fdivs
and
popf
pop
xor
push
or
iret
fimull
sbb
sbb
inc
in
imul
add
sbb
adc
call
repnz
leave
cs
int
pop
shlb
test
inc
sbb
and
xchg
push
lcall
xchg
cmp
mov
es
jnp
lcall
imul
lcall
sarb
mov
and
inc
cmp
mov
movsb
out
push
or
ret
mov
sub
cmp
cs
jno
jg
jl
sbb
push
scas
sbb
xor
cmp
mov
mov
and
dec
pop
inc
xor
in
test
stos
enter
daa
or
insl
loope
push
sub
rcr
cmp
mov
ds
lds
dec
sub
sbb
ljmp
pop
mov
sahf
pop
ds
es
pop
mov
xchg
pop
mov
aam
push
fnstsw
cld
fsubl
xchg
sub
sbb
imul
mov
dec
pop
mov
jb
dec
pop
pop
push
mov
mov
sub
sbb
lret
sub
fs
add
push
or
dec
sahf
mov
inc
fildl
in
jbe
loop
sti
stc
in
shlb
adc
add
test
cmp
ss
imull
or
repz
addr16
or
fxch
xchg
shlb
pop
xchg
outsl
or
arpl
fwait
push
adc
pop
inc
add
inc
inc
sbb
call
push
aam
fbld
mov
enter
inc
lock
dec
push
rcrl
cltd
addb
pop
flds
les
xchg
imul
mov
jmp
stos
mov
sbb
rcrl
push
jmp
adc
sub
mov
nop
ret
dec
dec
mov
jb
mov
pop
je
xchg
mov
popf
popf
loope
inc
lock
mov
ljmp
fistpl
and
inc
idivl
dec
mov
push
mov
xor
icebp
and
pop
stos
shll
scas
ss
jg
jl
test
mov
mov
and
and
mov
add
lock
stc
das
mov
jno
sub
mov
ret
cli
push
jns
mov
jbe
lret
addr16
ljmp
test
inc
dec
mov
lock
shl
scas
add
pop
xchg
cltd
mov
lods
test
mov
subb
pushf
shlb
movsb
xor
fimull
inc
rorl
jmp
aaa
addb
in
mov
push
pop
stc
popf
syscall
stc
xorb
and
xor
sbb
mov
mov
jge
test
push
mov
xor
out
dec
jns
test
mov
xor
fwait
inc
cltd
dec
push
jne
xchg
add
xor
pop
cmp
lock
push
xchg
in
mov
xchg
mov
pop
js
dec
scas
inc
pop
adc
and
cmp
xor
std
mov
lcall
jne
pop
imul
push
call
jmp
enter
mov
xor
sub
stos
or
push
push
fsubs
imul
jno
call
jle
mov
in
cmpsl
mov
fistpll
push
lret
pop
pusha
sub
inc
mov
out
sbb
cmp
roll
je
dec
bound
xchg
jle
iret
sbb
pop
lret
imul
jae
mov
arpl
xor
int3
repnz
push
icebp
hlt
test
divb
or
xchg
add
int
xchg
je
add
sbb
fidivrs
push
jnp
push
imul
mov
sub
mov
xchg
push
pop
push
test
jb
jge
in
sbb
xor
lcall
jno
insb
jae
pop
fildl
push
xchg
pop
cs
xchg
cli
aas
scas
nop
stc
sbb
cmp
fstpt
in
ret
cmpsb
xchg
imul
enter
or
push
add
nop
movsl
fisubrs
pop
pusha
cmp
int
movsl
jae
xor
jecxz
fistpl
out
mov
xor
xor
inc
jmp
lods
sarb
fists
cli
add
lcall
test
or
sti
sub
ljmp
push
xchg
xor
les
and
in
mov
adc
pop
jl
push
rcr
int
cmp
sub
aam
jo
clc
lret
dec
sar
mov
inc
insl
sti
sbb
out
sahf
inc
stos
xchg
test
ljmp
jp
loop
mov
stc
pushf
fs
sbb
addr16
or
push
fdiv
push
push
cli
dec
mov
xor
cld
push
cmp
pop
orb
and
into
push
in
cmc
mov
imul
jb
outsl
call
adcb
loope
add
mov
sub
daa
mov
sub
pop
les
in
es
sti
or
sbb
sbb
gs
push
adc
jmp
pop
push
inc
rcrl
fnstcw
test
shlb
sbb
icebp
sbb
sbb
sbb
sub
xor
pop
je
cs
mov
arpl
lods
ret
mov
movsl
dec
loope
add
dec
add
mov
mov
lea
pusha
in
outsl
jg
mov
ja
dec
pop
jle
fcmovne
xor
movl
cmc
icebp
aas
adc
dec
mov
ljmp
roll
cmp
or
es
xchg
cwtl
inc
cmpsl
dec
mov
cmp
icebp
cld
scas
ds
mov
or
dec
pop
and
mov
inc
dec
xchg
das
xor
shlb
pop
and
ror
ret
mov
jno
cmp
dec
dec
movsb
cmpsl
pop
cmp
ljmp
call
mov
imul
mov
lock
add
call
dec
test
sbb
push
and
sbb
call
daa
and
rcrl
sti
pop
loop
lret
push
outsl
out
inc
daa
jle
leave
sbb
pcmpgtb
in
or
aam
xor
fwait
pop
mov
roll
dec
call
push
pop
xchg
add
inc
or
mov
sbb
sbb
add
dec
test
fistpl
out
jns
imul
mov
mov
lock
pop
iret
scas
push
ja
xor
xorb
pushw
mov
rolb
jne
lcall
push
jl
xchg
xor
mov
xchg
xchg
shl
dec
mov
out
jno
sub
movsl
push
mov
stos
adc
cmp
push
inc
jle
shl
cwtl
pop
adc
repz
xlat
and
ret
jge
xchg
inc
imul
jae
dec
sub
fcompl
out
push
fidivl
mov
enter
sub
aad
inc
sbb
mov
scas
inc
dec
jmp
sti
xor
adc
lret
inc
iret
pop
lret
mov
xchg
leave
sbb
add
hlt
cwtl
nop
arpl
xchg
inc
and
add
and
inc
das
out
or
iret
fs
push
fsubs
pusha
fldt
rcll
mov
inc
in
jo
inc
cs
je
jbe
iret
fs
mov
sbb
sbb
push
fstpt
jl
outsl
in
add
push
outsb
xor
out
and
scas
outsl
push
jecxz
adc
pop
push
cmpsb
jns
inc
push
jge
cmpsb
or
in
jbe
xlat
enter
daa
pop
xchg
push
xor
cmpsl
push
dec
sub
xor
cmp
ss
sbb
jp
aad
jle
mov
add
test
test
fadds
push
pop
lods
dec
jb
xlat
paddsb
mov
pop
cmp
lcall
mov
mov
sub
sarb
shlb
pop
test
xchg
dec
into
mov
stc
jecxz
lcall
and
insl
push
ret
add
int
cmpsb
jns
lret
test
pop
out
int
lret
rcll
inc
sbb
incb
fprem
sbb
sub
mov
mov
adc
push
push
ss
sub
cmp
lods
sbb
imull
movsl
das
cli
jle
sbb
mov
and
in
into
dec
xchg
mov
jge
mov
outsl
je
adc
sbb
imul
es
dec
pushf
dec
lods
push
sbb
lods
out
mov
sub
in
mov
xchg
andb
mov
movsl
gs
pushf
mov
loopne
or
addr16
or
mov
push
les
std
es
mov
int3
pop
cmp
rcl
sub
adc
jecxz
adc
mov
in
bnd
aad
stc
add
dec
or
and
insl
pop
dec
pop
push
push
je
ret
gs
lret
mov
mov
sbb
out
sub
mov
inc
daa
cmp
divl
sbb
clc
lds
pop
push
mov
mov
subl
mov
adc
cwtl
sti
cld
out
cmp
rcl
xor
fisttps
lret
mov
lea
mov
pop
jne
fwait
jnp
das
pop
popa
mov
jae
add
aam
cmp
ret
sbb
int3
hlt
int3
insl
push
sti
dec
rol
cmpsl
push
aaa
fucomp
or
popa
mov
shrl
mov
and
lret
int3
jp
xor
or
rolb
push
and
std
sbb
ljmp
xchg
pop
es
sbb
in
shll
pop
enter
xchg
out
stos
imul
xchg
adc
xor
ret
pop
adc
add
dec
xor
jo
mov
in
dec
dec
push
adc
xchg
pop
dec
pop
movsl
std
inc
fmulp
lds
sub
fwait
mov
pop
lock
addr16
jp
and
loope
das
je
in
mov
xchg
add
push
ja
xchg
insl
inc
pop
mov
mov
inc
xorb
cltd
jecxz
js
xor
mov
xchg
clc
mov
jp
out
ss
push
xchg
or
jmp
pop
rorl
and
sub
mov
sar
stos
test
insl
insb
inc
aaa
test
adc
jle
movb
insl
push
pusha
push
int
imulb
ret
xchg
pop
into
add
jae
inc
aaa
push
lahf
orb
aam
mov
enter
es
xchg
sub
stc
sbb
push
push
imul
scas
mov
xlat
les
out
imul
or
insb
hlt
aas
adc
push
pop
js
and
and
push
scas
push
adc
add
flds
cmp
and
mov
pop
lds
cmp
lea
sarl
fiaddl
cmp
pop
add
push
imul
and
adc
xchg
aaa
sbb
mov
jl
xlat
add
out
push
pop
add
jo
pop
or
lods
push
jno
push
cmpsb
jmp
in
pop
iret
stc
enter
daa
push
dec
jl
inc
sbb
loope
pop
in
sub
push
pop
cmp
pop
mov
subl
cmc
adcb
sbb
adc
or
outsl
lret
jnp
push
mov
dec
int3
pop
js
popf
lcall
push
fsubl
mov
outsb
fcompl
sub
repnz
mov
lahf
mov
adc
repnz
aam
mov
mov
pop
outsb
lahf
aam
fcomp
sub
sub
inc
mov
test
adc
dec
add
sbb
lret
loop
xor
or
xor
cli
ss
pop
push
cmp
addr16
hlt
mul
data16
cli
mov
xchg
xor
ret
mov
xor
xor
or
inc
repnz
add
inc
outsl
cmpsb
call
jnp
test
gs
loopne
add
push
data16
or
lods
aaa
lcall
push
inc
sub
mov
ss
cld
bound
push
in
mov
add
inc
stc
je
fldl2t
pushf
les
sbb
sbbb
cmp
sub
mov
pop
subb
pushf
sub
xchg
cs
cmp
gs
xor
push
mov
push
sbb
xor
add
je
xlat
jmp
cmpsb
xor
mov
inc
mov
insl
mov
jle
scas
mov
dec
xor
pop
aad
incb
dec
dec
inc
fwait
xlat
movsl
aas
push
dec
je
mov
jbe
and
adc
repz
std
je
cwtl
mov
sbb
push
xor
sar
or
in
lret
sub
xchg
mov
pushf
mov
das
ds
mov
inc
jecxz
sub
clc
ds
cmpsl
inc
in
dec
aas
mov
push
pop
pop
dec
mov
mov
sbb
hlt
jg
mov
enter
pop
mov
add
mov
pop
lea
add
lahf
or
jmp
mov
cmp
fstl
push
sub
push
or
xchg
xchg
cmp
sbb
push
popa
pop
cmp
out
or
xchg
pop
push
ljmp
xor
fmuls
int
mov
mov
ds
mov
shrl
pop
das
dec
push
std
ja
jne
jb
lea
push
pop
push
xor
xor
lcall
mov
bound
inc
jns
and
in
out
fs
push
mov
nop
mov
inc
cmp
ja
mov
inc
mov
shll
out
dec
dec
mov
in
pop
mov
fsubr
adc
popa
fs
sub
jl
cmovl
fwait
sahf
dec
addr16
stos
stos
clc
inc
or
mov
ds
mov
fistpll
pusha
sahf
jle
mov
in
pusha
in
in
fists
jl
pop
add
ja
jae
addb
xlat
aad
sti
mov
or
repz
rcr
xchg
adcl
imul
scas
push
fldcw
rorl
repnz
dec
xor
or
mov
arpl
inc
inc
sub
or
add
roll
stos
or
add
jnp
mov
daa
rolb
fisubs
js
test
test
xchg
mov
insl
lret
mov
mov
push
dec
std
jo
out
jge
test
aaa
xlat
fidivs
cmp
or
dec
jecxz
dec
push
cmp
adc
movsb
test
or
and
add
mov
cmpsb
adc
out
in
inc
fs
daa
add
mov
loope
adc
sub
fildll
int3
mov
inc
xchg
clc
movsl
mov
test
mov
adc
daa
int
sbb
push
jb
adc
xor
stos
test
pop
and
outsl
lret
je
lcall
cmpsl
fmull
loope
outsb
aas
push
rcll
xlat
in
popa
push
jns
mov
jns
mov
push
ljmp
mov
int
and
sub
inc
pop
pop
in
hlt
lods
lret
dec
rol
add
bound
das
sub
test
arpl
orb
sub
popf
mov
stc
shll
mov
cmp
cmp
and
sub
cmpsb
lods
aad
in
imul
mov
cmp
xor
adc
cmc
or
xor
mov
adc
call
stos
adc
pop
pop
add
jmp
lods
push
push
mov
scas
push
out
jp
sub
jge
in
sbb
pop
pop
idiv
jmp
test
stos
test
loopne
or
lahf
inc
or
mov
and
les
jns
xchg
inc
cs
cmp
jle
pop
xor
and
das
fstpl
jmp
aaa
add
mov
pop
pusha
nop
cs
rorb
call
jb
or
dec
inc
in
je
inc
js
in
mov
test
sub
call
in
push
dec
mov
ret
addl
movsb
fistl
imul
add
pop
aas
icebp
cltd
dec
mov
setle
and
cli
inc
shr
mov
testb
xor
mov
fnstcw
addl
mov
gs
inc
nop
lock
sbb
rcrb
jno
sub
pop
aam
or
ret
mov
sar
pop
insl
cmp
sbb
imul
out
cmpsl
aam
loope
xchg
lods
and
mov
aam
ret
stos
int3
mov
dec
push
fadds
xor
xchg
cltd
mov
push
test
stos
mov
fnstsw
in
or
nop
jp
xchg
rorb
shll
pop
jecxz
scas
stos
jo
cli
out
jo
jg
sahf
gs
push
lds
addl
or
xor
pop
repnz
lret
dec
sbb
imul
sub
into
dec
inc
or
inc
or
mov
fwait
add
mov
add
popf
lds
inc
insb
sti
cmp
jno
in
test
xorb
mov
mov
push
inc
movsb
jp
iret
divl
loopne
push
push
mov
dec
test
jne
stos
pop
mov
and
out
hlt
fstp
xchg
scas
jl
jmp
hlt
mov
js
xchg
out
sub
xchg
mov
loop
imul
insb
sbb
push
pop
jle
lods
inc
in
ret
pop
pusha
mov
fbstp
sub
xchg
repnz
inc
mov
add
popf
and
sub
inc
sub
fimull
add
data16
mov
push
push
rorb
adc
xchg
repnz
add
sbbl
repz
sub
add
out
inc
lods
ret
lret
and
int3
adc
popa
fmulp
and
lds
test
ret
push
test
shlb
add
mov
daa
ret
jbe
lahf
dec
jge
pushf
sbb
fiaddl
cmp
mov
nop
jl
and
dec
push
ja
push
push
mov
xor
decl
cmp
or
test
pop
xor
inc
fs
cmpsb
xchg
push
mov
mov
xor
add
in
sub
inc
loope
sub
pop
jne
cmp
sbb
mov
mov
and
inc
lahf
pop
dec
rolb
sub
dec
add
adc
cmp
fcomps
xchg
jmp
sub
testb
sbb
push
nop
jns
fdivrl
fs
outsb
mov
je
shlb
adc
mov
mov
mov
mov
and
cmp
cli
sub
pop
pop
insb
into
push
lret
sub
push
in
decb
jp
sahf
rclb
subb
repz
mov
loop
cmpsb
mov
js
clc
fs
push
js
lret
mov
fnstsw
frstor
dec
cli
pop
arpl
xor
add
js
or
movsl
push
cmc
shrb
xor
fsubrl
imul
add
lods
add
jl
out
and
sub
pop
xchg
in
shlb
movsb
decb
mov
sahf
loopne
cs
popa
add
push
cmpsl
or
rcrb
xchg
push
xor
mov
dec
cmp
pop
or
in
es
out
ret
adc
rcrb
ret
stos
push
aad
movsb
notl
sub
jb
and
dec
mov
cld
shl
cmpsl
lods
mov
lea
mov
cmp
imul
pop
inc
lea
or
jg
test
cmp
push
mov
rorl
ss
nop
out
mov
imul
test
jns
ret
cwtl
sub
sbb
test
mov
pop
adc
cld
pusha
cmp
lret
or
test
mov
dec
pop
lock
test
shr
xor
je
icebp
aam
jno
ret
lds
andl
xor
insl
pop
dec
pop
dec
mov
mov
ljmp
insb
lods
out
imul
adc
sti
mov
insb
mov
add
cltd
lds
test
pusha
call
xchg
pop
outsb
jnp
lret
jle
xchg
adc
pop
adc
mov
stos
pop
dec
and
rcrl
xchg
in
pop
push
mov
jecxz
xor
loop
or
call
jbe
int
or
mov
lds
cmp
sti
inc
mov
jl
fwait
xor
push
movsb
and
add
mov
fdivl
pop
and
data16
in
mov
jmp
mov
out
mov
popa
ja
dec
jp
mov
or
or
test
push
int
mov
xchg
imul
pop
std
xchg
or
xchg
xchg
mov
push
and
adc
xor
xor
mov
and
cmp
sbb
push
xorb
add
pusha
and
xlat
fists
fwait
ret
sub
jae
push
inc
push
sbb
enter
loopne
popf
dec
xor
mov
test
iret
fidivrl
xor
xchg
xor
sbb
dec
js
cmp
jp
int3
xor
scas
adc
out
iret
xlat
sub
add
xor
and
andb
insl
inc
cs
ss
clc
push
mov
sub
data16
bound
test
sbb
pop
sbb
lods
fisubrs
sbb
fiadds
in
and
int
movsb
iret
push
mov
out
push
jbe
int3
and
or
pusha
aaa
push
mov
cmp
movsb
loop
inc
sub
dec
shll
add
xor
pop
xor
jmp
cld
push
push
cmpsl
insl
test
rol
add
jge
push
push
and
adc
aad
scas
sets
add
push
loope
gs
cmp
or
mov
or
ljmp
orb
sbb
push
add
add
xor
popf
mov
test
pop
xor
nop
push
out
aad
arpl
fwait
outsb
add
fdiv
rorb
mov
mov
lret
jbe
popf
mov
mov
and
cmp
int
xor
sub
sub
lret
in
shr
movsl
mov
mov
ja
jne
test
addb
jg
enter
arpl
sarb
dec
ss
lcall
cwtl
movsb
ja
and
adc
xor
out
cmp
xchg
xchg
or
push
das
into
fldl2t
adc
cltd
xor
adc
outsl
inc
pop
add
imul
adc
push
jg
sarl
push
or
mov
fisubs
sub
popa
aad
cmp
inc
push
gs
bound
inc
xor
hlt
lret
loope
repz
add
xchg
leave
stos
pop
sbb
sbb
jmp
cltd
cmp
pushf
cs
jmp
jecxz
jle,pn
push
aad
cmpsb
imul
cmp
jb
jae
dec
xor
mov
or
jecxz
inc
loop
scas
loope
lea
sahf
inc
ljmp
xorl
outsb
icebp
inc
and
call
mov
jge
data16
ret
lea
testb
push
std
imul
les
das
sub
mov
mov
mov
mov
jno
fisttpl
mov
push
fcmovbe
mov
adc
push
fsubrp
es
mov
dec
lods
gs
add
ljmp
jns
clc
inc
daa
mov
sbb
mov
sbb
mov
pop
mov
push
mov
cltd
cld
mov
adc
push
sbb
clc
push
pop
fwait
xchg
push
mov
adc
mov
mov
dec
js
out
ss
cwtl
push
jnp
jg
aas
test
xor
aas
insb
or
insl
or
stc
or
xchg
jmp
pop
test
or
xchg
sub
dec
sub
dec
or
ljmp
inc
sti
jge
mov
test
push
bound
mov
jns
pushl
xchg
sbb
xchg
inc
push
inc
mov
stos
cmpb
pop
stos
ja
fdivl
jp
sub
mov
mov
mov
fwait
dec
dec
pop
into
jne
push
and
mov
notb
mov
xchg
mov
in
sbb
cwtl
jp
sub
mov
bound
stos
push
mov
cmc
rcrb
jnp
mov
jle
arpl
mov
in
fbstp
and
mov
pop
stos
inc
roll
jae
rolb
stos
xchg
add
xor
daa
jns
repnz
je
mov
sbb
or
xor
pop
dec
cmp
push
dec
ret
iret
ss
or
push
out
mov
outsl
cwtl
insl
hlt
imul
pop
movsb
inc
xor
or
jae
adc
inc
outsb
or
jmp
inc
insb
push
pop
dec
fimuls
push
call
sar
jns
adc
and
pushf
aad
ret
push
xor
outsb
or
sub
es
aaa
adc
or
jno
in
cmpl
dec
xor
aam
in
xor
mov
push
scas
lret
push
sub
mov
inc
sbb
je
cltd
mov
in
stc
jp
enter
daa
add
push
rorl
cs
cmp
jno
lods
out
cmp
test
cli
lahf
lcall
sbb
inc
shll
das
dec
jnp
pop
lcall
pop
je
adc
sub
push
push
jl
inc
mov
outsb
push
test
shrb
xor
lret
inc
xor
push
add
mov
imul
cmpsl
cmp
push
adc
xor
ds
push
daa
lret
enter
addr16
adc
sahf
sbb
test
push
andb
jg
in
loop
push
xchg
out
sti
fs
lret
push
ss
pop
and
push
cmp
mul
xchg
daa
cli
jge
in
xor
mov
cmp
jg
or
into
mov
jge
xor
outsl
and
push
adc
and
adc
iret
incl
pusha
cmp
data16
lods
rcll
mov
aam
out
add
sub
adc
mov
test
cmp
push
imul
pop
add
inc
inc
sbb
sbb
repz
sbb
push
lcall
dec
rcrb
pushf
fnstcw
popf
jmp
fists
aad
or
mov
pusha
shll
fisttpll
ffree
je
jno
jecxz
lret
push
mov
xor
xor
imul
orl
fucomip
fnclex
lcall
test
and
mov
aas
into
mov
gs
mov
cmp
std
adc
cwtl
mov
movsl
mov
push
popf
in
mov
pop
lret
out
lds
xor
leave
das
mov
push
lds
bound
aam
cmp
ret
jecxz
lods
es
icebp
mov
dec
test
mov
add
and
inc
inc
cmp
loope
lods
arpl
mov
cmp
mov
stos
jmp
repz
xor
pusha
test
xchg
popf
push
frstor
mov
xchg
xchg
scas
in
pop
xor
shrl
ds
in
mov
out
cltd
dec
mov
push
aad
setle
int3
xor
pop
or
xchg
xchg
sub
test
mov
push
inc
shrl
mov
push
ljmp
add
mov
sti
bound
adc
and
lret
xchg
nop
mov
push
mov
xor
cmp
inc
lock
xchg
cmpsl
mov
push
aam
mov
cmp
jne
aas
mov
out
xchg
arpl
jmp
push
lods
call
out
jb
sub
xchg
loopne
popa
out
cmp
or
into
insb
pop
jge
jnp
scas
add
in
mov
pusha
pop
mov
fists
mov
inc
faddl
push
popf
xchg
push
fistpll
add
movsl
popa
jecxz
fisttps
sbb
lahf
and
pop
jbe
xchg
bound
adc
je
repnz
or
hlt
mov
dec
arpl
fbstp
push
sub
or
ret
out
add
sub
int3
shll
stc
fidivs
cmp
mov
mov
hlt
ret
adc
test
jecxz
outsb
xorl
in
sbb
stos
pop
aaa
rcrl
out
jno
aad
jl
dec
xchg
dec
lahf
mov
push
jecxz
xor
adc
aaa
push
cld
cli
jae
fstp
hlt
push
push
mov
cmpsb
sbb
sub
enter
daa
add
out
subl
sub
sub
xor
iret
hlt
sbb
and
sub
iret
in
add
fnstenv
push
mov
pop
rcll
js
shrb
xor
ret
push
xchg
mov
fdivrl
test
adc
inc
js
int
addr16
jmp
mov
mov
mov
add
aad
call
sub
jb
lret
jmp
sbb
mov
scas
cmp
sbb
xchg
in
lds
cmpb
jg
add
std
jp
stc
popf
xlat
mov
adc
mov
cmp
push
bound
cli
mov
push
xor
movsl
es
inc
push
or
bound
lahf
dec
sub
xor
inc
adc
adc
hlt
subl
pop
adc
popf
mov
out
aas
aam
pop
stc
cmp
add
and
loopne
sbb
jle
jmp
adc
push
sti
shll
pcmpgtw
cmp
loopne
or
inc
pop
leave
add
repz
mov
xlat
mov
sbb
sbb
lahf
cmp
inc
data16
aad
aam
nop
lcall
jb
lods
adc
and
jecxz
xchg
out
mov
loop
jg
movsl
call
call
jno
andl
scas
mov
inc
das
leave
cmp
imul
adcb
sub
shrl
push
inc
testb
cwtl
pop
and
mov
mov
icebp
fstl
add
push
mov
mov
rolb
mov
pop
stos
shlb
sub
pop
loope
aam
sahf
out
ret
jb
mov
fidivrs
insl
aam
sbb
scas
aam
add
mov
lods
into
gs
pop
cmp
mov
sub
stos
pop
leave
mov
cltd
push
mov
push
rclb
out
fst
dec
je
jl
cwtl
xchg
rclb
sbb
jl
xlat
arpl
cld
loope
mov
and
paddw
jg
enter
and
dec
xor
push
andl
xchg
dec
mov
stc
xor
adc
inc
push
inc
xchg
lea
add
pushl
jo
jns
mov
xchg
fbld
mov
jg
pop
in
lods
ja
mov
jp
push
pop
mov
insb
imul
pop
out
jne
mov
out
jo
sub
jbe
lods
xchg
and
out
cs
mov
stos
aaa
cmp
insb
leave
insl
aam
sub
jle
jmp
lret
popf
and
mov
sub
loope
and
in
inc
out
lret
jae
mov
push
xor
popf
mov
cli
jp
inc
xor
ficompl
imul
add
imul
cmp
in
ficoms
or
or
hlt
sahf
xchg
repnz
pop
aas
leave
pop
and
hlt
add
pop
arpl
fnstenv
or
imul
jg
cs
add
xlat
int3
mov
add
ficoms
xchg
jb
mov
das
add
cmp
scas
and
cmp
cmp
js
jbe
or
jge
or
aaa
xchg
push
xor
mov
sbb
loop
jl
lods
jg
push
leave
pushw
stos
xchg
imul
mov
cmpsl
push
iret
jb
test
xor
inc
cmp
cli
in
test
enter
daa
add
pop
loope
out
shrl
adc
mov
ds
fsubs
mov
mov
or
push
and
dec
ret
or
in
iret
add
pop
call
fisttpl
lcall
and
fs
sub
and
adc
push
int
sub
push
mov
leave
mov
fcmovnu
and
add
push
fsub
xor
in
ja
sub
mov
pop
push
xchg
xchg
mov
cld
mov
jle
sahf
pop
mov
scas
adcb
xchg
nop
aam
stc
push
or
fs
jle
pop
push
inc
and
mov
fmul
push
lock
fdivrp
jecxz
jns
lahf
mov
mov
into
subb
out
sbb
loopne
test
in
imul
dec
add
inc
data16
shrl
jnp
out
hlt
xchg
icebp
ja
mov
jle
sbb
lcall
loopne
js
pop
inc
push
inc
inc
imul
in
mov
fwait
xchg
adc
xor
cmp
fs
loope
xchg
pop
mov
ja
loop
xor
and
cmpsl
in
aad
add
jne
jne
movsb
mov
jb
cltd
push
dec
cltd
or
je
xor
nop
mov
fmull
arpl
xchg
xchg
cmpl
cmc
xor
pop
cmpsl
jae
inc
mov
and
pop
jmp
or
jns
adc
add
sarl
xchg
sarb
std
pop
adc
mov
mov
pop
icebp
mov
arpl
or
mov
pop
sbb
sbb
shrb
out
sarb
inc
dec
sub
fst
sbb
ret
add
in
popa
orb
loop
dec
sahf
xor
lahf
sbb
sub
das
inc
lods
cmp
pop
mov
das
fwait
ret
mov
in
add
jg
test
ja
mov
fildl
arpl
jbe
mov
mov
mov
int
pop
cmp
sbb
xor
or
popf
subps
out
or
jne
mov
inc
dec
and
mov
cmpsl
mov
jg
incl
xchg
or
sub
fwait
in
fstpt
add
and
dec
call
pop
pop
imul
cwtl
in
cmp
mov
out
pop
mov
cmpsl
mov
ja
mov
dec
mov
xchg
pushf
mov
or
xchg
inc
xchg
mov
and
out
dec
jnp
xchg
int
enter
sbb
jmp
inc
add
addr16
mov
push
or
fisubs
arpl
stos
and
and
imul
xor
ss
out
adc
lcall
cwtl
mov
ret
dec
pop
dec
sbb
inc
jae
xchg
push
hlt
arpl
popf
in
movsb
mov
addl
cmp
test
loopne
testl
add
ds
iret
push
int
repnz
bound
hlt
dec
sbb
inc
cmp
or
in
pop
inc
daa
fisubrl
and
sub
add
lahf
pusha
pop
fdivrs
fdivrp
leave
ljmp
pushl
filds
cmp
stos
cmc
movsb
sti
es
push
and
movsl
jbe
or
jge
shrb
jbe
out
push
icebp
cmp
lods
cmc
jno
adc
dec
jge
sub
lea
int
and
outsl
cmp
push
sti
test
decb
inc
leave
loope
cmpsb
and
mov
fwait
lret
dec
daa
push
push
pop
dec
loope
mov
push
cmp
cmp
movsl
movsl
mov
add
push
and
lahf
mul
pop
sbbb
dec
add
add
xor
sub
cmp
push
jns
pop
xor
lcall
fmull
outsb
aas
sub
outsl
data16
xchg
lret
dec
adc
stc
xor
sbb
push
push
mov
in
and
xchg
int
add
sub
leave
mov
jge
enter
mov
test
push
sbb
out
sahf
add
movsb
test
into
pop
xorb
cltd
loop
bound
or
insl
fs
call
leave
ss
into
cmp
test
mull
and
dec
pop
xor
call
or
sub
xor
shrb
subl
imul
mov
lods
mov
cli
sub
sub
cmp
in
jmp
cmp
mov
fisubrs
loopne
std
sbb
inc
jle
test
push
divl
pop
xchg
aad
cld
sbb
add
jns
and
or
adc
negl
fisubrl
push
or
aad
xchg
xchg
nop
push
mov
dec
add
or
mov
push
je
xchg
daa
jecxz
sti
aas
mov
fists
out
adc
rol
lock
lahf
cmpsl
fldt
lcall
test
pop
fidivrl
stos
shl
mov
pop
add
and
inc
dec
ror
dec
aas
notb
dec
loop
sarl
mov
pop
aaa
mov
mov
pop
cld
aaa
or
mov
push
mov
pop
pop
lock
mov
rorb
or
inc
add
pop
or
nop
mov
dec
insl
mov
dec
lret
cmpsl
mov
imul
fsubs
mov
mull
mov
pop
fldenv
cltd
fdivs
sub
es
frstor
push
xor
xchg
push
xor
jb
fcmovbe
outsb
mov
pop
in
xor
ret
xchg
dec
xchg
push
out
dec
btc
xor
testl
and
ret
fcompl
dec
xchg
in
loopne
fiaddl
notl
inc
xchg
call
pop
fwait
sbb
cmp
rcr
fiaddl
aas
sar
add
bound
sub
leave
data16
in
into
xchg
jge
lret
mov
inc
cmc
mov
bound
ja
inc
lret
dec
lahf
mov
fucomip
mov
lock
add
xchg
jne
push
scas
mov
cmc
mov
xchg
mov
fwait
jns
mov
add
movsb
adc
cld
test
fdivp
addr16
arpl
sbb
xchg
insb
lahf
lret
mov
jle
aas
jb
xlat
and
xchg
out
dec
enter
popa
pop
xchg
or
dec
jae
mov
rcrl
subl
xchg
in
imul
cmp
scas
mov
add
adc
ljmp
leave
dec
ds
xchg
movsl
lods
arpl
sahf
movsb
inc
cmp
pop
push
cmpsb
push
or
ret
add
pop
pop
pop
cmp
ficomps
push
add
gs
adc
jb
cmp
mov
bound
mov
pop
jge
jp
sbb
lods
cmp
adc
cmp
push
stos
dec
in
mov
push
jo
ja
jmp
int
and
cmp
inc
add
push
jne
test
sub
inc
pop
pusha
mov
in
xchg
add
xchg
lods
xor
filds
loope
test
sub
pop
mov
cmp
mov
lahf
push
subb
add
xchg
mov
xchg
mov
js
stos
and
lcall
lret
xor
add
stos
adc
aam
push
mov
and
mov
jl
dec
test
repnz
xchg
push
fsubrp
pop
int
outsb
int3
sub
test
pop
mov
jo
jecxz
loope
mov
fstps
xor
jp
movsb
or
test
scas
test
jp
loop
and
ret
mov
adc
cmp
aas
push
repz
add
cli
dec
out
xor
int
clc
jnp
or
mov
into
dec
mov
cmc
jl
fidivl
fsubs
adc
push
mov
sbb
in
add
stos
lods
outsl
es
mov
jae
out
hlt
cmc
sub
lods
xchg
mov
push
inc
sar
loopne
loopne
pop
gs
je
notl
das
inc
xchg
add
faddp
add
pop
xchg
cwtl
shll
sbb
aas
jg
xlat
pop
stos
or
cmp
adc
and
jmp
ja
cs
mov
jmp
dec
bound
es
or
dec
xchg
adc
jecxz,pt
xchg
in
mov
lds
test
andl
loopne
sahf
adc
in
cmp
inc
imull
inc
jae
adc
dec
ds
mov
adc
rcrl
xor
negb
mov
cwtl
mov
mov
and
icebp
bound
cld
bound
mov
jmp
xor
das
ss
insb
sub
xchg
mov
stos
es
insl
mov
cmpsl
std
popa
fsubr
adc
sub
cltd
mov
leave
dec
push
and
ds
test
xchg
cltd
jl
cli
mov
xor
fisttpll
and
sub
arpl
sbb
mov
mov
out
and
adc
hlt
nop
lret
sbb
xor
mov
mov
fists
dec
out
lcall
movsl
test
inc
sub
jnp
fwait
dec
cmp
add
pop
ret
adc
xlat
jns
xchg
jnp
dec
repz
xchg
int3
mul
mov
or
mov
sbb
sarl
pop
aaa
mov
dec
sarl
pop
dec
mov
rolb
out
or
call
xor
addl
shrl
jae
stos
addr16
out
stos
nop
or
insb
or
ja
cmp
pop
jle
fdivr
in
mov
aas
fisttps
fisttpll
inc
or
lahf
jae
ljmp
popf
xor
mov
jmp
fidivl
jbe
cmp
pop
sbb
sub
shrl
shrl
adc
ss
repnz
or
leave
ret
hlt
loop
repnz
fcomps
or
imul
mov
pop
pop
xchg
add
lea
int3
jg
jle
ss
stos
fidivrs
test
lds
ja
rolb
stos
and
rep
adc
sbb
pusha
sub
or
in
addb
push
imul
clc
les
pop
adc
push
daa
pushl
jl
inc
scas
and
adc
push
xchg
or
repz
sub
jl
jae
xchg
and
push
loop
loope
mov
in
inc
out
mov
pop
xchg
sub
rcrb
xor
xchg
lea
stos
mov
add
jns
xor
insl
dec
lods
int
pop
jmp
js
jno
pop
scas
scas
bound
icebp
push
fsubl
lds
icebp
push
jg
xor
dec
mov
pushf
daa
mov
sub
and
pop
xor
loope
lcall
dec
add
in
inc
lret
add
js
sbb
mov
inc
and
test
push
stos
jg
stos
pop
loop
sbb
stc
jns
jae
adc
lea
hlt
dec
cmp
jmp
repz
cli
int3
in
negl
arpl
and
repz
aad
xchg
test
into
sub
mov
xor
cltd
adc
cmp
pop
addr16
sbb
add
test
imul
mov
dec
stos
out
cmp
sub
pop
mov
mov
dec
pop
incb
inc
es
loopne
inc
cli
pop
popf
rorb
movsb
orl
or
pop
push
xchg
pop
add
sbb
jp
xlat
sahf
sarb
push
dec
adc
pop
popf
pushf
xor
jmp
inc
leave
rclb
call
nop
push
lret
test
rcll
pop
xchg
jbe
mov
outsl
outsb
mov
push
lea
nop
in
xchg
std
imul
pop
outsb
mov
xor
push
dec
jne
xchg
fcmovne
cmpsl
and
inc
dec
iret
xor
scas
cmp
mov
jmp
and
idivl
pop
lret
negb
imul
mov
icebp
cmp
dec
cld
ret
adc
repnz
sbbb
sub
adc
mov
shrb
xor
jno
ret
scas
cmp
mov
jo
jns
xor
ljmp
test
jp
fnstcw
in
fwait
mov
mov
inc
aaa
flds
leave
pusha
mov
inc
or
lock
push
lods
mov
test
xchg
into
sbb
rcrl
stos
pop
cmp
cmpsb
stos
call
jl
xchg
pop
in
popf
adc
mov
jb
cld
inc
pop
xor
sarl
or
or
push
ficomps
test
aaa
xchg
xlat
inc
les
adc
shl
pop
fwait
jns
mov
add
jne
jp
mov
mov
xchg
pop
cmpsl
jns
pop
inc
in
dec
mov
mov
dec
xor
pop
fadds
ja
push
lret
jp
sbb
jecxz
mov
into
or
scas
jne
mov
mov
fsubrl
xchg
inc
mov
mov
xorl
out
adc
or
mov
pop
out
pop
stos
add
cmp
jne
mov
out
dec
jle
lcallw
pusha
pusha
add
ret
cld
pop
hlt
mov
ljmp
dec
dec
popf
pop
mov
fcoml
jge
fisubl
inc
xchg
xchg
xor
xchg
call
scas
addl
inc
iret
jo
dec
stos
and
cmp
mov
sub
push
hlt
inc
inc
dec
xchg
or
push
imul
pop
in
or
aaa
add
jmp
pop
andl
loope
lods
lds
out
xlat
mov
cwtl
mov
adc
push
mov
mov
aas
sbb
pop
xor
adcl
and
jne
dec
lret
push
ss
xlat
out
push
scas
add
push
push
sbb
test
pop
ljmp
stos
jl
in
arpl
daa
cld
sub
test
movsb
repnz
lock
repz
xchg
jle
inc
movsl
jb
and
lahf
push
jno
adc
lahf
sbb
orl
fs
or
sbb
push
int3
gs
out
cmpsl
pop
lcall
ret
xor
sub
or
adc
mov
adc
mov
inc
jne
loopne
les
adc
xor
mov
sub
jo
sub
pminub
xchg
ret
mov
nop
dec
roll
fsubrp
loop
inc
pop
stc
xor
sbb
inc
daa
pop
ss
dec
cmp
mov
js
pop
push
scas
jl
xor
jp
cmp
jb
or
fs
push
jne
cmc
or
ljmp
dec
cmp
xor
adc
mov
mov
cmp
lods
cmp
mov
mov
mov
sub
ljmp
dec
pop
gs
add
inc
mov
dec
jno
les
out
repz
lock
push
test
cmp
pop
dec
pop
jle
adc
ljmp
cmp
fwait
xor
aad
lahf
jb
loope
push
dec
and
in
jne
push
je
scas
mov
mov
in
lea
ds
arpl
fldl
pusha
adc
cld
jp
xor
dec
inc
rorb
lret
inc
test
and
mov
jle
nop
and
rclb
mov
jg
push
std
cli
dec
xchg
cwtl
add
adc
sbb
js
adc
push
lret
sub
xchg
mov
test
or
hlt
inc
loopne
test
loop
inc
js
ret
cmp
adc
insl
push
mov
dec
mov
push
cmpsl
sti
xor
ljmp
push
in
pop
mov
pavgb
and
je
es
fs
cmp
fcompl
cltd
jge
lods
test
imul
outsl
in
fstl
jo
xchg
or
xchg
adc
out
cmc
stos
xlat
push
fucomp
jmp
cld
xchg
sbb
ret
fcomps
xor
inc
or
in
push
inc
jg
pop
lret
in
mov
mov
in
and
rcrb
incl
gs
or
sbb
test
test
mov
add
nop
mov
mov
es
jns
sbb
in
cld
lea
iret
clc
ds
xchg
xchg
sbb
cmp
mov
fwait
into
mov
cmp
push
or
lret
xchg
sbb
adcl
ret
imul
imul
loopne
lahf
jnp
popf
pop
jle
out
in
sbb
pusha
sti
dec
sub
dec
mov
in
sub
inc
push
out
fdivl
xchg
push
add
inc
popf
adcl
jmp
fcmovbe
iret
adc
xor
imul
cltd
push
dec
mov
push
iret
iret
scas
sub
leave
mov
enter
aad
sti
sbb
or
shlb
inc
and
add
pushf
int3
push
arpl
pop
xchg
int
fiadds
mov
mov
mov
and
dec
pusha
cmp
lret
daa
cmp
mov
jge
shlb
sbb
mov
dec
stos
mov
jno
add
add
cmp
push
sbb
shlb
xor
cwtl
push
out
aad
test
sub
jecxz
add
or
dec
xor
movl
push
jne
loope
dec
js
sbb
or
mov
sbb
jl
ret
lahf
jae
adc
in
jne
sbb
xchg
add
inc
and
lock
add
pop
stos
sub
pop
pop
sub
xchg
dec
push
lahf
stc
xor
mov
jb
outsb
sbb
cs
popl
aas
ret
sub
les
cmp
push
out
pop
int
push
mov
pop
jecxz
clc
lret
pop
shll
hlt
sbb
mov
out
test
xchg
jo
sbb
adc
xchg
stc
out
xor
xchg
adc
cmp
cmp
jo
inc
negl
sbb
loop
xorb
inc
cmp
sub
or
sub
icebp
pop
inc
cmc
sarl
xor
mov
cmp
add
into
adc
push
mov
outsw
cmpsb
fldt
out
mov
ficoml
sub
inc
jg
and
sub
in
outsl
cmp
dec
inc
jae
lock
pop
fstpt
flds
fwait
les
lret
inc
shll
sbb
lock
imul
xor
pop
pushf
xchg
adc
xchg
test
aad
rorb
jg
lahf
jb
cmp
sub
and
repz
mov
pop
jmp
adc
loop
fimull
sub
push
dec
dec
stos
sbb
sub
pop
mov
inc
pop
stos
gs
les
aas
daa
pushf
dec
mov
xor
aas
roll
fnstcw
cwtl
mov
inc
sarb
out
cld
jecxz
cmp
lock
or
pop
mov
aaa
lock
das
das
shl
test
push
daa
aaa
sub
icebp
pop
aam
roll
es
aam
ds
shll
insb
ljmp
push
scas
add
xor
add
psubusb
pop
andl
cltd
mov
cmp
scas
cs
xor
push
clc
fisubrs
cmp
lds
lret
pop
xchg
pop
cmp
out
dec
pop
add
push
test
xor
mov
xor
or
xchg
stc
lods
dec
and
test
xchg
mov
es
repnz
out
or
sub
fwait
xlat
add
pop
add
stos
pop
cmp
rorb
jns
aam
in
mov
mov
sbb
cli
pop
dec
sub
jl
inc
jp
mov
mov
ja
mov
lods
or
dec
arpl
jne
lcall
stos
jl
xchg
in
mov
jmp
loop
loop
nop
lock
sub
fs
mov
mov
and
je
jnp
repz
pop
pop
into
in
loope
pusha
xchg
test
rol
mov
mov
sub
jae
mov
push
ret
jns
popf
test
lret
mov
mov
lods
pop
xchg
inc
pop
in
fmul
out
mov
add
cli
adc
pop
cmp
cs
xchg
repnz
mov
daa
and
hlt
ret
push
shlb
pop
jns
dec
cmp
popl
dec
adc
inc
mov
test
clc
push
mov
inc
out
pop
ret
fldt
daa
inc
aaa
lds
lcall
adc
xchg
lods
shlb
push
jbe
enter
or
pushl
or
adc
jno
and
jns
orl
cmp
cld
pop
jge
pop
fs
das
leave
scas
ret
push
roll
push
cmc
lahf
mov
xchg
add
in
xor
inc
daa
cli
mov
cmpsb
int3
out
ror
push
sub
xlat
push
cmp
lods
ds
iret
push
movsl
aad
mov
lahf
xchg
jecxz
cmp
sbb
test
and
xchg
and
pop
shlb
pop
insb
es
lcall
mov
adcw
popf
out
outsb
andb
or
mov
data16
mov
inc
push
mov
dec
sub
adc
ljmp
sub
sbb
lret
js
cmp
mov
sbbb
cmp
cmp
inc
jg
push
adc
stc
sahf
scas
shll
mov
ss
js
mov
scas
add
popf
xor
mov
sub
aam
xchg
cmc
cwtl
push
xor
inc
in
outsl
sbb
sub
cli
bound
outsb
pop
add
enter
subl
or
sbb
fldenv
sub
ficompl
add
sti
insb
xor
testl
pop
cli
mov
mov
les
add
xchg
movsb
dec
jle
cmp
mov
sub
pop
in
sbb
in
ljmp
sbb
cs
ficoms
xchg
test
dec
ficoms
dec
jb
popa
stc
dec
arpl
xchg
je
arpl
jecxz
fwait
lret
lret
lea
clc
call
popa
imul
mov
sub
add
pop
push
fistpl
repnz
jns
sbb
loopne
jae
fbstp
mov
in
lcall
push
insl
jne
fs
sar
dec
shl
jp
mov
xor
icebp
mov
lea
mov
test
push
imul
or
das
mov
cmc
shrb
icebp
xchg
sub
pop
aam
addl
insl
and
push
scas
ljmp
jge
mov
test
mov
pop
lahf
aaa
mov
mov
hlt
fcompl
adc
adc
cmc
ret
sbb
jne
clc
sbb
xchg
mov
sbb
test
aas
pop
cmp
sub
out
mov
sbb
push
cs
add
xchg
in
xor
fisttpl
pushf
and
xor
ret
mov
in
inc
hlt
loope
mov
hlt
jl
mov
xchg
or
push
add
add
or
lea
mov
in
push
fsts
push
mov
mov
or
xorb
test
mov
ja
mov
sbb
fisttpll
sbb
jl
scas
mov
dec
out
mov
or
aaa
xchg
jb
out
jle
sub
pop
imulb
stos
pop
dec
jge
les
insb
mov
das
jnp
or
jle
cli
or
xor
fisttps
insl
fistpl
call
ja
jp
fcoml
xchg
popf
iret
jae
mov
sti
popf
pminub
adcl
imul
ljmp
mov
iret
lea
add
inc
jl
sahf
mov
hlt
push
inc
shll
xchg
pop
sub
movb
and
inc
or
mov
das
int3
sub
sub
lret
lds
cmc
call
mov
push
or
movsb
cmp
adcb
jge
jge
sub
sbb
xchg
sti
aaa
lret
iret
and
jno
sub
jl
jge
dec
pop
shlb
fildll
loop
call
sbb
push
xchg
imul
inc
and
bound
sbb
sbb
jge
daa
stc
add
loope
outsl
or
icebp
mov
and
out
sub
and
inc
pop
lahf
mov
xchg
orb
sub
xchg
rolb
mov
mov
push
test
pop
stc
decl
push
insl
pop
stos
stos
sub
dec
xor
fcoml
push
sub
popl
sbb
pop
leave
mov
mov
mov
mov
lea
push
in
repnz
mov
xor
pop
loope
dec
lret
cltd
rcl
sub
sbb
add
sahf
sar
icebp
test
or
fstl
xchg
push
pop
cs
add
adc
push
pushl
imull
data16
movsl
fsub
ja
negl
add
inc
jecxz
iret
sbb
or
into
mov
fdiv
pop
nop
and
outsl
stc
sbb
test
lret
int3
adc
fdivl
add
xor
aad
lods
bnd
mov
jge
out
jp
sub
jg
mov
imul
sti
dec
mov
in
gs
and
loopne
mov
fadds
jns
fnstenv
cmp
loope
adc
arpl
pop
cmp
or
lcall
adc
and
das
mov
pop
or
nop
jb
mov
cmp
mov
lret
mov
dec
int
rorl
ja
loopne
aam
int3
cmp
sbbl
ret
fisttpl
fldt
adc
pop
aas
gs
add
sbb
mov
adcl
mov
inc
mov
cwtl
xor
jmp
mov
xchg
jle
cld
cmp
cmp
into
push
xchg
mov
int
mov
jg
lock
push
xor
xchg
xor
sar
out
cld
sub
shll
ljmp
insl
or
ss
jnp
in
clc
dec
ljmp
scas
lods
adc
mov
pusha
push
mov
inc
inc
repz
shll
add
popa
nop
test
mov
push
mov
ret
lods
clc
push
aad
xchg
lret
sbb
sahf
pop
out
ja
movsb
sub
test
or
pmaddwd
push
or
test
aad
inc
xor
push
dec
icebp
roll
test
aad
xchg
ret
cmp
inc
and
sbb
shrl
or
push
movsl
leave
or
loope
push
ljmp
andb
icebp
jns
xor
add
ds
mov
roll
push
ja
aad
jp
push
test
jmp
pop
mov
mov
jne
sub
insl
jne
adc
mov
cltd
loope
push
xchg
fucomi
shll
scas
aaa
lret
mov
dec
jnp
pop
ljmp
iret
push
jmp
insb
and
xor
jle
and
pusha
int3
mov
sbb
jns
dec
pop
rcrb
jg
dec
shlb
popf
idivb
mov
cmp
inc
test
sbb
add
imul
cmp
leave
push
adc
and
iret
in
sbbl
adc
push
arpl
divl
or
inc
or
adc
mov
out
int3
push
push
xor
insl
xchg
push
jbe
pop
fstcw
in
mov
movsb
enter
dec
fistpl
jbe
cmpsb
aaa
jge
cs
test
cmp
int
sbbl
dec
xchg
push
ret
xor
inc
shr
add
push
addr16
push
mov
jp
mov
jmp
enter
daa
clc
stc
mov
mov
adc
push
lods
cmp
adc
and
gs
sbbb
imul
mov
xlat
in
sbb
and
in
ljmp
push
movsb
add
sub
loop
xchg
pop
fcom
testb
and
fbstp
xchg
out
inc
mov
and
out
push
lock
lret
fiadds
pop
pusha
cmp
lret
mov
imul
mov
or
sbb
fcomps
lods
mov
movsb
jg
aam
loop
icebp
sahf
stc
or
mov
adc
dec
cmp
mov
mov
and
jnp
aam
push
jp
cmp
dec
mov
ret
into
lcall
xor
xchg
fsub
rclb
jl
imul
popf
mov
notb
data16
lcall
xlat
cmp
xlat
push
inc
sub
lcall
loop
mov
jo
add
int
pop
cmp
loope
jmp
cli
les
repz
stos
xchg
sub
in
mov
cmp
jmp
pop
dec
imul
lcall
jmp
sarb
aad
jl
nop
dec
fs
dec
pushf
test
jb
inc
xchg
dec
push
push
das
jecxz
mov
rclb
push
call
pop
inc
jg
mov
loopne
dec
or
sbb
mov
jo
inc
out
loopne
inc
adc
push
imul
push
jg
shl
and
xchg
lds
lock
mov
push
stc
mov
insb
mov
imul
inc
mov
mov
imul
mov
das
jo
repnz
and
jo
push
ret
jns
dec
es
jl
repz
fmull
sbb
cmpsl
testl
adc
or
lods
xchg
cmpb
fwait
js
and
loopne
xchg
loopne
push
add
pop
cmpsl
cltd
pop
adc
test
call
jl
jnp
lods
fnsave
hlt
clc
vpshlq
imul
iret
idivl
xchg
push
leave
stos
xchg
ret
ja
gs
cmp
mov
xor
sbb
xor
push
push
mov
icebp
mov
dec
pop
mov
cmp
mov
pushf
mov
rorl
cmpsb
fwait
fs
push
dec
sbb
add
cld
cmpsb
and
lret
pop
jg
jb
ss
inc
in
test
mov
inc
xchg
jg
ja
adc
xchg
popa
shlb
stc
pop
mov
enter
cwtl
lds
out
mov
sti
mov
xchg
gs
mov
xchg
inc
push
lods
cmpl
addr16
push
jb
addr16
rcll
and
mov
mov
xchg
jle
jae
in
mov
pusha
addr16
retw
out
pop
pop
divl
jae
movb
sub
mov
jns
cwtl
fisubl
ss
fistl
scas
jo
xchg
push
imul
mov
shlb
leave
mov
sub
movsb
popf
arpl
leave
jmp
push
pop
fisttps
mov
into
cwtl
or
pop
ds
add
pop
push
sahf
jbe
adc
mov
and
xchg
and
push
cmp
xchg
das
push
lcall
jge
adc
shll
dec
add
fnsave
stos
mov
dec
cmc
dec
imul
pop
sti
push
jo
es
scas
pop
jbe
push
cmp
pop
test
push
sbb
inc
mov
in
out
add
daa
divl
push
or
sub
and
pop
arpl
ds
jl
and
out
repnz
out
lods
fildl
cmc
es
add
sarl
fisubrs
fsubl
cmp
cmp
pop
sub
lcall
inc
fsubl
in
sub
push
adc
rorl
andl
mov
adc
xor
push
repz
sbb
sub
int3
pop
ffreep
mov
adc
mov
push
sbb
sahf
sbb
testl
mov
cmpsb
jecxz
push
std
inc
adc
imul
insl
aas
cmp
pop
lds
cli
scas
xchg
cs
cmp
pop
or
into
jge
sbb
in
xor
cmp
xchg
stos
adc
mov
and
adc
mov
add
aam
lods
rcrb
out
mov
sub
mov
mov
inc
pop
std
sti
test
mov
gs
pop
loopne
repnz
in
inc
push
scas
adc
and
les
inc
repz
cwtl
xchg
in
lods
push
sbb
fcoml
xlat
sbb
sub
mov
arpl
cmp
and
out
aad
sub
test
clc
hlt
jb
add
dec
enter
dec
push
clc
rcrl
lea
sub
fidivs
out
mov
or
out
cmp
cli
rolb
adc
aas
mov
cmp
and
cld
test
inc
loop
imulb
push
in
stos
clc
sbb
sbb
push
icebp
inc
and
lret
add
lods
inc
adc
mov
and
das
dec
pusha
shlb
and
aam
xchg
ret
or
das
insl
fcmove
js
jno
push
cmpsl
testb
cmp
mov
lods
cld
ret
cmp
mov
outsb
out
mov
pushl
popf
cltd
nop
gs
jo
adc
lret
or
xchg
dec
cmp
sbb
nop
xchg
shll
aas
pop
cmp
sbb
xchg
sub
push
mov
dec
or
or
xor
mov
hlt
aad
dec
mov
push
xchg
xchg
ficomps
popl
or
test
pop
push
jmp
add
pop
xchg
jno
push
xchg
bound
pop
xchg
sbb
xchg
cmc
pushf
out
push
adc
cmp
ja
shrl
mov
dec
cmpl
inc
lea
sbb
adc
es
xchg
cmp
jmp
push
pop
mov
mov
push
fisttps
push
mov
push
repz
stos
mov
push
and
rorb
jnp
repnz
jle
mov
outsb
pusha
add
xchg
out
or
lahf
mov
cmpsl
inc
push
divl
out
mov
popf
inc
xor
stc
mov
clc
ficoml
inc
xchg
pushf
loope
mov
sbb
mov
inc
adc
and
leave
add
hlt
out
sbb
inc
fbld
inc
push
mov
cmp
jo
sahf
jle
or
mov
in
cmp
fidivs
insl
mov
mov
or
jge
insl
fwait
insb
movsb
fidivrs
mov
push
stos
jge
loopne
sbb
jnp
aaa
or
adc
jno
pop
cmp
and
sub
inc
xor
stc
mov
or
or
mov
sub
cmpsb
mov
std
test
outsb
test
ja
push
xor
sub
xchg
pop
cmp
and
icebp
stos
dec
and
bound
inc
mov
add
repz
xor
sub
adc
jmp
and
push
push
pop
push
push
adc
sub
mov
adc
lods
imul
mov
dec
push
stos
push
divb
lret
int
jmp
jmp
pop
xlat
out
lret
mov
cltd
xor
mov
js
stos
and
sahf
mov
int
andb
loop
cmp
jp
sbb
loope
pushf
adc
fwait
cmp
pop
dec
pop
not
mov
divb
add
xor
and
pusha
sbb
mov
jb
mov
je
xchg
inc
xchg
adc
push
xchg
imul
sbb
sbb
incb
mov
jae
out
xchg
or
outsl
mov
cmp
lods
sub
clc
jbe
adc
xchg
loopne
sub
pop
jbe
jae
sub
mov
repz
test
mov
sbb
cmp
or
xlat
push
int3
pop
pop
mov
imul
hlt
test
aad
inc
mov
add
jb
idivb
dec
aas
addr16
je
mov
push
xchg
testl
pop
test
mov
jbe
dec
loop
inc
fistl
adc
inc
inc
cld
mov
inc
aas
inc
xor
mov
enter
and
sub
nop
out
divb
mov
in
mov
data16
mov
sbb
stos
lret
sbb
cmpsb
mov
in
mov
fadds
cmpsb
movsl
shrb
cs
pop
shlb
inc
sub
mov
ret
xchg
insl
inc
es
jo
shrl
cmpsl
cmc
or
popa
cmp
and
into
cmp
jne
mov
push
jg
add
ficomps
cmp
daa
push
push
add
addl
pop
xchg
xchg
push
sarl
arpl
dec
stos
jno
jae
cmp
xchg
pop
push
lcall
xor
xor
cmp
into
test
imull
dec
cmpsb
push
test
repnz
xchg
sbb
inc
in
insb
or
fistpl
mov
dec
add
xchg
cmc
decl
scas
lods
bound
or
in
idivl
inc
xor
mov
sahf
adc
cmc
ret
outsl
ja
adc
fnstenv
gs
mov
outsl
pop
dec
shl
hlt
jne
mov
xchg
out
add
outsl
mov
xchg
fyl2x
addl
sbb
pop
or
in
addr16
xchg
stos
sub
scas
and
cmp
insb
bound
jnp
sbb
jle
repnz
pusha
popf
scas
inc
filds
cmp
rolb
les
jge
push
xchg
jecxz
popf
imul
mov
notl
fimull
mov
sbb
or
imul
scas
ss
push
stc
jb
adc
and
or
repnz
ret
fcmovne
jp
inc
hlt
cmp
arpl
inc
inc
pop
jg
or
mov
jnp
sbb
xchg
pop
add
adc
xlat
loopne
pop
scas
sahf
jne
push
xchg
inc
lds
mov
rcrb
mov
popf
repz
cmp
shll
adc
xchg
ficoml
sbb
out
mov
cmp
jp
jno
mov
mov
push
imul
ljmp
scas
sbb
add
push
in
and
cmpsb
inc
fdiv
in
mov
movsb
enter
daa
cmc
cld
in
push
or
push
sub
xchg
adc
mov
xchg
sbb
and
lahf
sub
pop
cli
sbb
lcall
mov
bound
std
js
jae
pop
cmpsl
call
jns
test
dec
subb
lock
outsl
int
adc
xchg
pop
mov
mov
ret
mov
loop
and
dec
push
stc
xchg
jno
adc
sti
lret
test
xor
cmc
mov
mov
sahf
pop
push
xor
mov
mov
loop
adc
shll
sti
adc
add
dec
cmp
shlb
notl
xor
repz
cmp
out
or
hlt
lret
into
inc
mov
cmc
jnp
jle
or
mov
jne
jbe
cmc
xchg
in
imul
fistpl
mov
mov
mov
out
cli
push
sub
push
dec
in
pop
and
pop
cmp
sub
sbb
loopne
ja
pop
xchg
jecxz
inc
cmp
cmpsl
fsts
add
xchg
jae
aas
sbb
push
xchg
sbb
xchg
add
pop
arpl
cmpsl
pushf
mov
ljmp
call
mov
test
movsl
daa
jb
sbb
clc
je
fs
jp
flds
lea
fucomip
outsl
xor
fcompl
xchg
xorl
pop
adc
jmp
int3
inc
data16
in
loope
clc
mov
jg
je
scas
repz
fildll
cmpsb
divb
jnp
cwtl
and
arpl
sub
mov
in
push
lret
mov
jl
dec
mov
push
das
or
out
stos
sub
adc
aam
xlat
call
add
push
dec
addr16
mov
ljmp
push
lods
rol
dec
mov
add
aas
and
mov
rcrl
cmp
stc
lcall
jl
mov
fsubr
push
les
push
sahf
xchg
fs
rcl
jns
pop
xchg
mov
stos
pusha
sbb
mov
stos
leave
push
jne
jecxz
jno
mov
or
xchg
mov
cli
jnp
dec
lea
and
xchg
decb
push
dec
or
loope
fwait
icebp
dec
out
push
xor
insl
add
dec
cmpsl
pop
ljmp
aam
jns
popf
shl
xor
movsb
xchg
xchg
or
mov
mov
inc
ja
fcoml
mov
xchg
int3
mov
inc
imul
jne
mov
mov
xchg
sti
out
in
arpl
or
addr16
movsb
flds
ljmp
sub
inc
adcb
mov
aaa
lret
int
push
jnp
or
jle
pop
mov
sbb
test
fbld
or
ficompl
jae
aas
int3
push
push
out
out
xchg
jp
mov
ss
pushf
fidivrl
icebp
sbb
pusha
aam
cmp
jmp
push
inc
push
inc
adc
iret
push
add
leave
icebp
xor
hlt
test
mov
xlat
inc
inc
pop
jmp
fwait
push
pushf
imul
xchg
dec
je
andb
fldl
stc
jge
vsubss
xchg
mov
xor
xor
fldt
movsb
hlt
add
imul
and
aaa
xchg
xor
jno
je
jl
mov
xor
dec
sub
jo
shrl
cld
lcall
push
mov
jmp
ret
nop
arpl
fwait
mov
enter
daa
hlt
add
xor
pop
mov
jmp
ds
add
movsl
pushl
mov
incl
cmp
lcall
xor
inc
jl
mov
insl
or
lcall
leave
fsubrl
sbb
pop
mov
outsb
sarb
xchg
shlb
rorl
or
mov
mov
push
cld
dec
pop
int
mov
sub
push
in
pop
pop
xchg
lret
jg
mov
push
sbb
or
pop
test
outsb
dec
sbb
in
jg
or
stc
call
out
adc
mov
push
pop
cmp
lea
cmpsb
notl
or
xor
imul
iret
int3
into
es
gs
inc
pushf
push
outsl
push
mov
repz
in
dec
add
lcall
jne
push
mov
sti
sahf
out
in
sub
inc
mov
sub
sti
mov
or
and
loopne
fcomps
pop
mov
es
dec
add
cmp
repz
jns
xchg
ss
cmpsl
sbb
lea
xchg
pop
push
repnz
testb
pop
jmp
or
dec
sub
aad
cltd
push
nop
mov
add
jb
jns
dec
sub
popa
dec
jecxz
pop
inc
fsubrl
lea
adc
pop
sbb
dec
fwait
sbb
dec
pop
dec
dec
sahf
inc
or
mov
aas
sbbb
stc
popa
jb
ss
aas
and
insl
lret
mov
std
xor
sub
mov
jmp
enter
adc
lret
stc
fsubrl
mov
xchg
adc
xor
pop
ljmp
sbb
or
in
cmp
pushf
jle
ret
mov
inc
es
pop
insl
sbb
aad
repz
popa
push
xchg
mov
daa
push
repnz
dec
cmp
add
cltd
xor
add
or
push
xchg
mov
xchg
add
lret
sub
jge
ds
stos
dec
mov
insl
xchg
push
and
push
or
rcr
pop
xor
pop
fwait
or
dec
xchg
popf
mov
std
cld
xor
hlt
push
inc
test
jmp
xchg
dec
push
loop
or
mov
mov
add
push
push
mov
jns
sarl
xchg
loop
popf
mov
lret
cld
mov
pop
imul
jp
jbe
mov
push
mov
mov
sbb
pop
fs
sbb
xchg
dec
in
out
ret
pop
addr16
mov
adc
xchg
outsl
adc
in
out
popl
or
inc
addr16
imul
jl
insb
cmp
dec
jnp
mov
imul
shrl
filds
dec
ret
push
jecxz
jg
jbe
jbe
push
inc
dec
push
sbb
popf
mov
cmp
jne
rcr
insl
xchg
mov
mov
imul
pop
scas
cld
pop
ljmp
andb
xor
xor
leave
push
ds
inc
pop
movl
inc
sbb
in
add
pop
ror
lods
stos
lret
pop
or
cmpsl
ficomps
and
mov
dec
mov
ret
and
cmp
sub
lcall
push
cwtl
add
aaa
inc
mov
mov
mov
fdivrl
es
mov
mov
xor
or
mov
xchg
test
xorb
jge
cmp
inc
mov
jl
pop
jg
daa
repz
mov
loopne
loope
ss
jae
xchg
cmp
push
out
mov
lea
and
icebp
mov
jge
adc
add
adcl
call
adc
cld
sbb
and
fwait
pop
push
push
xor
fcoml
xlat
sub
jo
xor
orb
cmp
dec
adc
out
aad
addl
push
decl
mov
pop
jmp
loope
rcrl
mov
sub
test
hlt
xor
push
jg
bound
loop
fnstsw
fs
adc
rcrl
mov
push
cmp
dec
push
notl
sar
add
xor
les
in
outsb
adc
cmc
or
mov
outsl
xor
adc
and
adc
push
push
add
push
mov
inc
pop
lods
pop
fwait
sti
mov
push
insl
sub
adc
adc
in
mov
sti
gs
mov
sub
loopne
dec
enter
xor
bound
imul
mov
repz
xlat
sbbb
xchg
adc
and
adc
imul
cmpsb
cs
or
nop
xchg
icebp
xor
bound
jb
or
je
mov
jecxz
mov
mov
call
ficoml
sbb
in
mov
test
inc
xchg
mov
inc
pushf
rclb
pop
icebp
xor
mov
mov
lds
and
jge
xchg
cmp
std
fldcw
cwtl
xchg
pop
lahf
mov
dec
cmpl
cmp
lret
push
xchg
mov
mov
lock
jae
lret
jp
shr
and
mov
ret
inc
addr16
bound
lods
inc
dec
pop
jne
cmpsl
repnz
ljmp
xchg
lods
test
push
mov
dec
sub
out
scas
pop
jnp
test
xchg
cltd
insb
push
loopne
pop
fsubs
push
dec
cwtl
mov
testb
mov
mov
sbb
lcall
jmp
daa
scas
out
push
adcb
insb
mov
xor
in
or
add
xchg
repnz
pop
jl
test
inc
cmp
pop
sbb
inc
stos
jae
or
push
sbbl
add
repz
das
mov
iret
and
jnp
mov
inc
jecxz
xchg
xor
mov
pop
es
ja
clc
cmc
jp
cmp
sarb
pop
dec
jnp
lret
jne
loopne
mov
or
inc
xchg
test
push
jmp
cmp
stos
out
push
jg
rcrb
or
pop
addr16
fwait
pop
stos
adc
std
insb
mov
xor
jle
push
adc
sub
into
pusha
outsb
outsb
loopne
bound
ret
repz
sbb
inc
xorl
stos
popf
loopne
gs
mov
mov
and
notl
xor
pop
imul
jb
pop
cmp
push
into
mov
mov
xacquire
sahf
leave
fildll
mov
fistps
or
and
pop
inc
lcall
add
int
pop
cmp
sub
aas
xor
add
jne
mov
push
test
dec
lret
or
cmp
and
jge
repnz
sbb
shll
xchg
mov
jno
pop
xchg
jl
loop
dec
and
push
adc
xor
gs
lds
pop
push
lds
dec
xchg
sub
or
push
in
imul
std
push
fsubrs
sub
xchg
lret
cld
je
fdivl
jns
xor
dec
mov
sbb
into
sti
add
add
stos
out
mov
out
mov
push
push
and
shlb
scas
fst
fdivrl
test
outsb
cwtl
jge
adc
sbb
mov
pop
and
jae
cmpsb
pop
xchg
push
add
adc
sub
push
addl
inc
and
aam
adc
mov
in
addr16
xor
lahf
jbe
adc
sarb
mov
lcall
xor
adc
push
ss
fsubrl
idivl
add
mov
xor
enter
movsb
or
into
in
aas
shl
sub
outsl
adc
jns
outsb
nop
ret
jno
adc
or
add
icebp
data16
jns
inc
adc
leave
out
inc
sbb
cmp
or
pop
sti
sub
adc
je
test
push
gs
adc
pop
repnz
jne
fnstenv
mov
mov
xlat
fidivrs
add
jae
jl
les
movsb
lea
jmp
mov
sbb
icebp
jg
nop
outsl
jecxz
dec
aad
mov
mov
je
push
adc
or
loop
rorl
loopne
lret
lcall
jnp
int
mov
fcmovnbe
mov
jnp
sbb
popf
inc
mov
cmpl
pop
sub
and
pop
mov
idivb
std
xorb
mov
jp
mov
jbe
push
cld
data16
lret
lret
xlat
sarl
mov
jg
das
stos
aas
pop
rol
jae
rol
add
xor
dec
ret
rcll
mov
mov
dec
pop
adc
cmpsl
icebp
cmp
lret
popa
xchg
adc
lods
adc
mov
and
add
pop
lcall
cltd
mov
add
mov
adc
or
iret
sbb
icebp
cmpsb
mov
mov
mov
pop
xchg
xchg
out
stos
sub
and
add
jecxz
jle
je
or
aas
in
xor
mov
pop
xchg
pop
cmp
mov
xchg
test
inc
sub
jmp
rolb
lcall
incl
lcall
rcr
cmp
insl
jb
dec
fsubr
pop
loope
call
jp
mov
xor
in
aad
pop
notl
mov
out
out
and
cmp
xchg
add
push
stc
out
mov
sub
aaa
bound
dec
lock
hlt
cmp
jl
lds
jbe
insb
push
jle
pop
loop
xor
pusha
or
sti
ret
aam
push
addb
xor
jae
sbb
push
sahf
popf
pop
xchg
call
push
repz
popa
fcmovbe
sbb
xchg
dec
mov
sbb
pop
sub
or
adc
ret
push
adc
arpl
iret
test
push
flds
fmulp
push
arpl
arpl
fbstp
cmp
inc
push
sbb
lock
push
int3
add
pop
push
mov
loop
aam
pop
mov
rol
adc
jmp
jo
movsb
xchg
insb
mov
jbe
ja
jge
xor
sbb
add
xchg
jno
xorl
scas
jnp
adc
std
xor
shlb
scas
cltd
jecxz
push
sub
ret
test
sbb
mov
stc
pop
cmpsb
dec
jb
in
push
push
or
push
mov
daa
icebp
cmp
push
and
mov
in
cmp
ds
cld
movsl
adc
sti
and
shlb
lahf
test
mov
jge
out
fnstenv
outsb
repnz
js
aam
pop
mov
movsl
dec
push
add
outsl
jno
and
dec
insb
adc
repz
add
dec
xor
mov
inc
mov
js
and
pop
cld
int
or
pop
mov
mov
fwait
xor
mov
jo
pop
fwait
sbb
jo
test
aas
subb
push
jg
sbb
inc
stc
or
aam
adc
dec
sarl
mov
addr16
loopne
inc
xor
jecxz
cmp
repz
into
iret
stos
mov
xchg
xchg
outsl
icebp
add
in
imul
sbb
add
cwtl
pusha
lea
pusha
mov
sbb
scas
xchg
pushf
mov
ret
inc
dec
sti
ret
adc
cmpsl
jle
gs
mov
inc
mov
fldcw
les
mov
push
sbb
mov
pop
das
jns
adc
jecxz
pushf
xor
fldpi
cmpb
aad
mov
dec
xor
ret
js
xchg
lcall
sbb
in
jl
out
test
fsubs
sahf
adcl
das
lahf
fildl
adc
xor
xchg
inc
lahf
popa
push
sar
jecxz
pop
cs
mov
pop
inc
shlb
dec
rcrl
clc
stc
idivb
out
cwtl
or
xor
mov
dec
gs
xchg
movsb
and
inc
pop
mov
and
insl
addr16
das
mov
adc
sub
mov
icebp
ret
bound
insl
inc
jbe
dec
push
aas
fisubl
ljmp
lods
jle
sarl
nop
mov
and
sbb
mov
sbb
fcmovbe
mov
mov
inc
pushf
push
rcrb
and
sub
repnz
ret
sbb
sbb
xor
leave
pop
aas
cmpb
sub
mov
push
loope
jne
in
mov
js
or
leave
mov
xchg
cmp
dec
sub
test
mov
xchg
mov
inc
mov
mov
aam
inc
fwait
lods
lds
add
mov
out
insb
bound
mov
in
and
xchg
iret
sbb
mov
jae
mov
pushf
jns
ja
and
cli
out
mov
leave
fdivrl
imull
dec
inc
pop
ljmp
aam
out
pusha
stos
ss
sub
add
rol
adc
out
xor
cmp
xor
addr16
xchg
stos
add
push
insb
jns
or
sbb
jle
pop
add
cmp
out
pusha
movsb
cmpsl
inc
fbld
aam
pop
mov
inc
xchg
or
jae
out
fsts
popa
mov
in
pop
out
ja
xor
mov
xchg
cmpsb
sbb
sbb
mov
scas
and
mov
adc
fs
sub
cwtl
leave
int
mov
mov
xor
imull
mov
adc
cwtl
jne
or
faddl
ficoms
int3
outsb
xor
test
cmp
fbstp
push
and
cmp
mov
push
ret
cmp
inc
jge
push
outsb
sbb
push
aaa
cmp
cmp
aas
sub
cmp
jecxz
daa
dec
xchg
dec
decb
push
xor
sbb
mov
decl
cmp
popf
inc
sub
adc
aaa
push
iret
enter
daa
lock
loop
and
mov
mov
or
and
sub
imul
mov
xchg
sbb
inc
add
add
xor
jge
xor
pop
pop
enter
push
fists
loop
adc
pop
pushf
xor
adc
scas
sub
dec
outsb
pop
or
adc
into
mov
outsb
mov
dec
dec
mov
dec
mov
scas
xor
push
or
jle
pop
out
or
fmuls
xor
pop
adc
lret
leave
shll
ljmp
adc
sahf
mov
or
inc
cltd
in
je
mov
rorb
fs
outsb
adc
es
xor
jb
jns
dec
notl
inc
cli
adc
jnp
push
enter
in
into
mov
sti
cmc
pop
inc
xorl
rcl
mov
imul
jl
add
data16
cmp
scas
sti
loop
iret
mov
sub
fisttps
in
cs
add
jb
mov
lret
gs
and
xor
inc
fwait
dec
loope
mov
xor
xchg
inc
mov
jae
jns
xlat
ror
and
loop
mov
push
pop
lret
mov
sbb
xlat
push
aad
idivb
and
fwait
shlb
out
popa
dec
or
and
or
daa
enter
or
call
push
sub
mov
adc
fs
sub
pop
xlat
insl
pop
inc
es
or
das
sub
mov
adc
adc
shrl
add
add
jl
into
jp
cwtl
enter
popa
insb
movsb
mov
and
dec
cld
mov
mov
mov
inc
shll
enter
push
cld
sub
push
nop
aam
popa
movsb
ret
icebp
test
xchg
dec
push
insl
sub
dec
cmpsl
out
outsl
ljmp
shrb
mov
mov
lahf
cmp
pop
fsubs
adc
jg
mov
push
xchg
push
insl
jo
cmp
push
das
sbb
inc
not
xchg
inc
pop
ljmp
out
vpmacsww
push
mov
ja
xor
lcall
sub
mov
or
push
test
mov
xor
pusha
inc
outsl
add
fmull
int
test
sub
aam
mov
bound
into
dec
jns
or
in
ret
push
inc
adc
repz
dec
mov
push
sarb
sub
xor
mov
jno
adc
mov
jne
loope
call
add
aas
jns
xchg
std
fwait
mov
fstpl
xchg
fwait
dec
sub
push
push
aas
sub
sub
inc
jp
fisubrl
in
stos
lods
sbb
mov
sub
jle
dec
cmpsl
in
and
aas
loop
fistpll
mov
mov
xor
nop
add
push
and
dec
popf
push
xchg
cmpsl
xchg
push
jno
mov
cmp
sbb
jns
imul
mov
push
mov
xchg
adc
inc
rorl
jg
cld
leave
inc
mov
hlt
cld
pop
imul
and
xchg
or
pop
ret
push
js
add
pop
int3
pop
cs
pop
enter
sub
imul
mov
cmp
pop
movsb
stos
call
adc
mov
jge
pop
adc
es
loopne
inc
jnp
cmp
push
jb
adc
jl
ret
cmp
into
cltd
push
mov
imul
push
jge
push
sarb
test
scas
cld
sbb
stos
outsb
cmpsb
push
negl
enter
daa
out
out
xor
idivb
sub
add
mov
inc
pop
movsw
and
imul
mov
lcall
dec
mov
add
movsb
jno
hlt
push
repz
jg
cmp
std
cmc
pop
and
lcall
xor
mov
stos
outsb
rol
adc
test
outsl
mov
mov
adc
cmp
or
int3
int
mov
sub
out
xlat
rcrl
mov
out
dec
sbb
cmp
sahf
xor
test
push
jg
jmp
stos
stc
jnp
add
jne
inc
jbe
ss
dec
cmp
xor
mov
cli
inc
shr
out
das
cmp
jno
or
pop
inc
cmc
and
push
sub
mov
mov
fnstenv
adc
add
jmp
xchg
lock
mov
xor
sub
in
cltd
dec
stc
sti
and
gs
das
out
loopne
out
pop
dec
cwtl
dec
inc
scas
sahf
dec
lret
cmpsl
push
repz
stos
xchg
add
lahf
mov
mov
mov
adc
pop
xchg
lods
push
pushf
mov
jp
cmp
add
dec
repz
jb
dec
lea
xchg
or
push
ss
add
jmp
cmc
lea
and
mov
clc
addl
fistpl
or
jp
pop
inc
lods
pushf
in
inc
or
aas
fwait
jnp
mov
leave
sbb
icebp
mov
jge
inc
mov
jne
sahf
cwtl
xorl
and
xchg
mov
sti
inc
dec
cld
out
sbb
and
and
notl
and
inc
cmpsb
not
cmp
mov
ret
andb
insl
adc
insb
dec
dec
pop
ret
cmpsl
out
into
stos
ljmp
in
push
scas
dec
mov
adc
and
push
and
pop
testl
addb
adcb
dec
fstl
arpl
inc
inc
rcrl
mov
dec
sub
stos
cli
jb
out
repnz
scas
xchg
mov
mov
mov
sahf
sbb
mov
xor
dec
notl
insl
test
jo
xchg
ljmp
push
and
or
push
mov
add
add
push
add
ret
out
bound
lahf
jns
jne
in
mov
xchg
insl
mov
mov
sub
mov
adc
sub
in
push
mov
add
pop
add
in
pop
jmp
out
push
dec
les
aam
test
mov
sub
sub
mov
stos
dec
add
rcll
insb
dec
icebp
mov
jle
xor
in
xchg
add
xor
or
pusha
pop
imul
outsb
inc
lods
scas
je
pop
pop
push
out
xchg
shl
jge
mov
ss
jmp
arpl
das
imul
test
push
ljmp
iret
mov
sarb
leave
mov
ljmp
insl
jmp
out
push
xchg
xchg
testb
imul
inc
mov
cmp
lret
pop
pusha
sbb
adc
jno
and
cmp
movsb
ss
dec
push
popa
mov
addr16
fdivrl
inc
popa
sbb
dec
pushl
add
dec
adc
jno
aad
jl
or
aam
mov
fsts
scas
ss
mov
test
jns
mov
dec
imul
add
pop
dec
daa
out
shrd
mov
push
sub
rclb
ds
sub
and
loope
sbb
add
in
inc
add
push
inc
xor
rcl
mov
xchg
xor
js
outsl
pop
pusha
insl
push
lcall
pop
fsubrl
jle
repnz
and
imul
pop
cmpsb
adc
and
fisubl
mov
daa
jo
cmp
mov
sbb
and
fisttps
push
push
jl
int
gs
into
pop
jae
push
repz
lret
sbb
push
loopne
mov
xlat
or
and
test
mov
cmpb
mov
inc
loop
fmul
stc
xor
jo
cmp
lahf
fcomps
cmp
out
aas
pusha
test
mov
xor
out
in
sbb
test
js
xchg
cmc
in
hlt
mov
outsl
mov
adc
or
push
add
inc
lods
sub
int
subb
xchg
inc
mov
add
loope
sarb
adc
pop
gs
push
adc
cmpsl
mov
clc
inc
shll
fsts
cmp
les
rcll
adc
mov
out
xchg
out
dec
out
daa
pop
dec
push
sub
add
mov
dec
push
lods
cs
ret
scas
aad
std
popf
nop
dec
push
cmpb
cld
loopne
dec
testl
cmpsb
jecxz
xor
out
lds
call
push
int3
push
adc
lret
mov
ret
push
test
shlb
cmp
push
mov
cmp
and
sub
testb
sub
fildll
mov
shr
cmp
aas
sbb
xchg
mov
xchg
mov
div
lock
sub
es
rorb
aas
daa
sub
dec
sti
ret
lar
insl
stc
rcrb
inc
inc
repz
in
mov
ljmp
pop
lods
mov
and
mov
lods
xlat
ja
out
rorb
push
add
mov
cltd
jg
lock
push
jle
sbb
mov
clc
fstpl
sbb
sbb
out
xor
dec
and
jmp
sti
mov
push
jb
aaa
pop
enter
das
or
shlb
mov
ja
ss
scas
nop
xchg
sub
inc
popf
addr16
or
cmp
fwait
cmp
push
cmpsb
ret
mov
ret
add
fs
incl
lods
add
shl
jns
orb
sti
or
mov
xor
int
jmp
das
ret
fwait
jp
lods
daa
mov
insl
fwait
mov
dec
stos
dec
dec
ljmp
mov
adc
out
std
and
xchg
mov
sbb
adc
mov
push
lock
sub
and
mov
and
pushf
mov
mov
stc
loope
and
cmp
dec
outsl
mov
mov
jge
sub
cmpb
stos
jmp
push
mov
out
mov
fisubl
sub
outsl
imul
loop
dec
rolb
adc
add
add
leave
xor
or
inc
jo
or
mov
or
push
test
mov
call
jo
outsb
lahf
cmc
lds
mov
xor
lret
mov
lcall
loop
push
mov
sahf
jbe
push
xchg
jge
adc
sbb
cmp
mov
jl
daa
out
dec
xchg
cmp
xorl
jo
jb
scas
adc
out
fildll
inc
cmp
inc
xlat
imul
pop
dec
sub
mov
inc
adc
daa
in
mov
push
cmp
std
or
sub
jno
cmp
outsl
mov
add
cmp
test
out
es
sbb
add
jp
xor
test
jp
movsb
pop
int
dec
js
jne
pop
lahf
and
push
popa
dec
sbb
adc
ja
outsb
xchg
dec
adc
pop
icebp
das
cmp
mov
loope
mov
dec
test
icebp
sub
int
mul
sub
test
aad
sbb
xchg
stos
cmp
call
xchg
pushf
sbb
int
ja
mov
adcb
xlat
loop
adc
jmp
sahf
mov
sbb
lret
clc
jecxz
mov
mov
lods
push
inc
xor
aaa
or
jecxz
cmc
mov
loop
jecxz
add
dec
aad
in
scas
imul
cltd
addl
cltd
pushl
shlb
out
mov
addr16
inc
in
outsl
mov
cmp
xor
pop
gs
loope
loopne
lods
ja
hlt
arpl
loop
cli
les
and
xchg
mov
pusha
cmp
mov
pusha
pop
sti
scas
adc
mov
jmp
data16
add
aad
xchg
mov
mov
fs
mov
shlb
test
dec
outsb
sbb
je
ja
jecxz
push
fadd
icebp
adc
shr
inc
gs
aam
pop
mov
vmovd
dec
fstpt
mov
inc
ds
push
aas
icebp
mov
aaa
xchg
rcll
xchg
test
sar
nop
add
sahf
xor
mov
test
lds
add
je
add
fnop
std
das
add
lods
nop
sub
ds
sahf
cmpsb
int3
es
subb
movsb
dec
aas
ret
mov
mov
push
popa
or
lods
sub
ss
sbb
cltd
and
mov
pop
xor
xchg
push
cltd
mov
cmpsb
test
out
insl
push
fcompl
xchg
fucom
fmuls
xchg
mov
inc
pop
rorl
aaa
stos
fdivs
and
dec
popa
mov
imul
or
xor
inc
dec
mov
adc
test
jg
xchg
sub
rcll
and
fwait
imul
mov
and
popf
mov
mov
add
xchg
or
mov
lods
mov
mov
ja
stos
sti
jp
lods
fnsave
call
les
jne
mov
shr
fdivr
imul
cld
out
andl
out
imul
jb
addr16
jbe
xor
jae
out
dec
push
insb
and
push
inc
jle
fadds
adc
neg
sbb
fcmovnb
pop
hlt
loope
fs
inc
ret
movsl
std
jae
push
insl
xchg
mov
mov
and
xchg
add
cmc
sbb
fdivp
imul
push
js
out
adc
ror
ss
js
push
leave
test
jp
arpl
push
call
or
add
mov
incl
cmp
int3
sbb
les
push
xor
adc
in
mov
xchg
enter
xchg
dec
movsb
dec
push
or
into
push
jbe
in
cmpb
scas
sbb
lret
or
cmp
imul
pop
dec
dec
mov
push
dec
jo
mov
scas
hlt
add
push
dec
ja
test
xorps
inc
data16
cmpsb
enter
daa
in
fstp
push
push
sbb
out
cmp
clc
outsb
ds
mov
xor
xlat
xor
inc
ret
push
addb
stc
sbb
nop
add
hlt
adc
adc
jns
hlt
sub
js
cvtps2pd
ficomps
lcall
sarb
pop
pop
outsb
ljmp
sarb
jbe
cwtl
push
ss
iret
jmp
daa
insb
test
mov
pop
int
imul
dec
pop
push
loop
lret
mov
jg
arpl
push
pop
sahf
sbb
add
nop
jg
aaa
xlat
loop
jl
stc
mov
jecxz
adc
cld
cmp
pop
push
add
gs
clc
testl
loop
imul
cmp
fs
or
cmp
cmc
jp
xorb
mov
fcoms
pusha
add
imul
out
data16
shrd
cmp
out
hlt
sub
sbb
in
fimull
lret
push
pop
andl
lods
enter
jl
out
dec
fnstcw
or
enter
sub
xchg
dec
xchg
add
gs
xlat
int
std
pop
scas
mov
xor
jmp
cmp
arpl
sub
fwait
xchg
mov
xchg
xor
adc
jb
mov
hlt
je
adc
arpl
pop
repnz
cmc
call
push
jge
mov
testl
adc
pop
fucomi
xor
arpl
sub
jecxz
inc
pop
les
aas
js
jp
xchg
data16
out
mov
and
or
testb
fdivr
push
lcall
jg
mov
andb
lret
jno
aam
push
cmp
xor
sbb
in
shlb
aam
test
ret
sub
fcompl
dec
cmp
cmp
sub
lods
xchg
push
sarb
aas
ret
mov
cmp
add
rcrb
stos
lock
clc
add
lahf
mov
jb
push
push
mov
std
sub
mov
xchg
into
pop
xchg
mov
movsl
out
sbb
pop
xchg
loop
push
sub
bswap
push
pop
xor
jno
xor
divl
mov
adc
pushf
movsl
test
in
xchg
mov
orb
rcrl
in
push
mov
add
push
aas
xchg
jnp
push
movsb
idivl
xchg
in
test
pop
mov
mov
inc
mov
cmp
pop
ss
cmp
mov
sub
cmpsb
sahf
jne
inc
cmc
mov
mov
pop
xchg
dec
pop
cltd
jmp
mov
or
pop
pop
mov
sbb
lahf
addr16
pop
xor
push
sbb
imul
cltd
adc
pop
dec
cmp
xchg
mov
ret
mov
inc
into
push
in
int3
add
push
xor
ss
insl
cmp
out
pop
inc
stos
sbb
cmpsl
outsb
imul
mov
mov
out
inc
iret
mov
je
leave
and
hlt
sub
arpl
pop
loopne
jbe
cmp
cmpb
or
pop
ror
add
nop
outsb
fidivs
insb
shlb
mov
pop
cmc
sub
dec
cmc
movsb
xlat
adc
lret
jbe
sti
into
jge
pop
xchg
sbb
inc
aaa
cmp
cwtl
sbb
jl
dec
sub
push
dec
mov
mov
mov
loop
mov
shl
push
push
push
xor
test
fcmovb
loop
cmc
cmp
cmpsb
pop
jno
in
mov
aaa
andl
arpl
sub
fldcw
xor
rcrl
cmp
lahf
arpl
xchg
adcb
es
ret
loopne
mov
add
lods
js
cmp
xchg
lcall
push
fsubrl
shrl
mov
pop
dec
adc
adc
push
pusha
mov
repnz
fldt
push
pop
mov
int
lds
pop
rcrl
dec
rcll
push
mov
xchg
sbb
nop
xor
int
push
jg
scas
xor
stc
push
das
jno
fidivrl
adc
subb
mov
fsubs
es
testl
mov
cmp
pop
pop
or
icebp
into
and
cltd
cmc
inc
out
xor
or
adc
dec
pop
imul
ret
lahf
fidivs
lods
xchg
pop
jl
xchg
jge
out
push
cmpsl
sub
aas
mov
inc
dec
and
icebp
jns
add
pusha
and
pop
lret
pusha
xor
not
fnstenv
lcall
adc
inc
sbb
mov
jge
pop
popa
xorl
ss
fsubrp
sbb
test
aad
hlt
adc
outsl
cmc
jne
cmc
rclb
je
add
jb
add
notl
ret
pop
jg
cmp
fwait
mov
fcompp
sbbl
addr16
push
cmp
ret
je
xor
mov
movsl
xorb
sbb
popf
mov
push
in
imul
outsl
adc
sarl
push
mov
imul
cmp
in
mov
xor
lock
jge
das
ret
adc
sub
pop
sub
mov
arpl
scas
xor
dec
xor
jb
ljmp
mov
push
push
mov
ret
mov
jae
cltd
add
inc
scas
cltd
and
scas
test
pop
in
bound
sar
mov
sahf
xchg
cmp
mov
sarl
dec
pop
inc
mov
stos
mov
sbb
jle
jge
aam
fistl
push
loop
daa
push
mov
ljmp
xor
std
xor
sbb
dec
dec
xchg
out
test
fimuls
dec
repz
bound
xchg
or
test
fwait
xbegin
rolb
pop
mov
ret
jmp
adcb
aas
xchg
test
add
mov
dec
ja
push
inc
jp
popa
mov
push
and
mov
inc
jne
daa
jb
or
out
lcall
jmp
xchg
repz
out
mov
push
or
sbb
stos
xlat
stos
sbb
and
lcall
mov
in
push
punpcklbw
inc
fistps
rol
cmp
pop
ror
inc
inc
fldpi
and
insl
cmp
repz
sub
mov
fldl
xchg
mov
out
mov
imul
insb
push
push
dec
lds
fidivl
iret
push
aaa
stos
repnz
mov
mov
arpl
lahf
adc
or
sti
fwait
xor
cld
mov
add
xor
pop
mov
sbb
push
push
mov
or
imul
out
std
and
stc
xchg
cmp
call
mov
popf
scas
in
jbe
jl
jge
xlat
fstps
int
out
cld
cmpsb
or
sbb
push
dec
cwtl
adc
sub
or
ja
inc
jo
jne
scas
mov
inc
push
icebp
and
push
movsl
mov
cmpsb
loope
shr
mov
test
daa
ljmp
loope
fiadds
sub
dec
mov
ds
xchg
add
or
mov
subb
sbb
pushf
add
in
xor
mov
mov
sub
pop
pop
pop
pop
stc
lcall
daa
fcoml
dec
cmpsl
sub
cwtl
xor
shl
fildl
pop
sbb
adc
fists
push
movsb
and
sbb
iret
int
add
sub
loope
lret
lahf
shrl
repnz
nop
adc
pusha
roll
add
sub
daa
jg
sub
loop
jmp
stc
push
jp
fs
mov
in
cld
cmp
fistpl
cmc
cli
inc
jle
xor
xor
cmp
sub
add
ljmp
adcb
push
adc
stos
popf
add
loope
data16
and
xchg
push
out
fs
sub
insl
push
mov
mov
mov
mov
sahf
pushf
les
gs
loopne
ljmp
or
pop
jl
ficoms
cmp
add
jmp
sbb
and
adc
pushf
adc
pushf
loope
push
jmp
cs
cs
and
sub
test
into
jns
jb
xlat
dec
shll
repz
dec
fucom
cmpl
ror
call
push
add
xor
mov
out
add
dec
iret
popa
pop
test
push
mov
aas
mov
or
mov
test
inc
rorb
std
mov
das
js
xlat
icebp
cs
jecxz
mov
cmc
movsb
mov
gs
das
mov
cs
sub
push
lods
ret
dec
sub
mov
fmull
mov
out
psrlq
lods
imul
test
mov
pop
xchg
push
sub
xor
push
cltd
pop
clc
fiadds
stc
dec
push
and
sub
clc
leave
fcomp
xchg
jnp
inc
sbb
xchg
xchg
sub
inc
out
movsl
dec
fsubrp
loope
mov
push
fisubrs
jbe
inc
add
shll
sti
mov
sbb
iret
dec
cli
push
and
imull
xchg
adc
stc
in
or
lret
negb
push
xor
jno
jbe
cmc
jge
push
bound
jns
sbb
in
pop
repz
clc
jmp
insb
mov
mov
jp
jp
loop
mov
xchg
cmpsl
mov
or
int3
jne
jno
mov
andb
mov
add
cmpsl
cmp
or
arpl
or
setbe
addr16
jg
stos
mov
and
xor
sarb
idivl
loope
xchg
fistpll
add
xchg
cs
or
jae
sbb
mov
mov
aas
mov
mov
jmp
aam
insl
cli
jl
pop
out
sbb
mov
imul
push
dec
inc
jg
mov
push
iret
jge
bnd
int3
leave
push
pminub
mov
sub
jl
mov
push
adc
or
stos
aam
cmp
fisttpl
pop
loop
pop
fdivrp
test
rcrb
and
lods
pop
movsb
in
cwtl
bound
add
push
jge
ss
sbb
cmp
dec
jne
jno
fidivl
jl
loopne
dec
pop
pop
dec
push
arpl
cwtl
repz
xchg
stos
lock
les
test
jo
sbb
push
sub
fs
mov
enter
daa
jmp
das
ljmp
aas
nop
cmp
dec
dec
ds
js
movsl
dec
lea
lahf
mov
jmp
sbb
mov
inc
pop
mov
jle
xchg
xchg
pop
imul
fstl
fwait
pop
cwtl
lcall
xchg
fadd
je
sub
push
push
adc
lret
cld
sub
out
jae
mov
inc
and
ret
ror
sub
dec
lds
shll
mov
mov
push
enter
roll
add
int
iret
loop
lock
stc
lds
fs
adc
out
ss
xor
fcoms
movsl
lcall
xor
or
xchg
into
out
xor
iret
jl
xor
mov
adc
ja
imul
inc
pusha
movsw
std
lods
bound
mov
lods
sub
push
mov
sbb
sti
cmp
mov
cmc
mov
pop
or
xor
fcmovnbe
fldenv
rol
faddl
ror
call
sarl
cmp
xor
adcl
cmpsb
inc
pushf
mov
jno
clc
dec
add
mov
aad
jecxz
nop
and
jbe
sub
int
dec
dec
fbstp
lods
jecxz
push
adc
daa
push
call
mov
pusha
or
push
jo
jns
xor
xchg
clc
inc
xlat
lods
dec
inc
stos
lds
aas
push
ret
mulb
adc
push
and
dec
fcmovbe
xchg
dec
outsb
not
xlat
mov
cwtl
in
jns
lcall
icebp
add
and
sub
mov
jp
das
sbb
enter
mov
ret
cmp
es
dec
insl
jl
fisttpl
xchg
cmp
popa
gs
lods
addr16
sbb
mov
shlb
push
pop
mov
mov
cltd
xchg
inc
sbb
fisubl
call
mov
clc
add
pop
xchg
mov
insl
fs
sub
pop
xchg
xlat
cmp
xchg
pop
in
inc
js
xchg
std
nop
push
mov
fs
nop
jmp
or
pop
xor
add
mov
push
jo
dec
popa
sub
test
lea
xchg
pop
adc
iret
jb
nop
fistps
or
rorb
jg
push
aad
jb
pop
aas
ret
add
mov
bound
out
jns
pop
mov
xchg
inc
repz
mov
and
insl
pop
je
mov
jno
jp
mov
mov
clc
jecxz
xchg
lods
fimuls
pop
fsubl
mov
aas
mov
setno
pop
mov
xchg
ret
jmp
sub
sbbl
push
sub
or
out
addr16
xlat
scas
stos
jmp
lods
and
xor
push
jnp
in
jle
xchg
xor
pusha
jl
cmp
cwtl
pop
mov
pop
inc
adc
jae
or
cmpsl
popf
data16
inc
mov
sub
xchg
xchg
pop
outsl
mov
imul
scas
cmp
popf
lods
adc
inc
div
in
pop
leave
test
cmpsl
arpl
clc
testl
sub
icebp
adc
inc
nop
dec
fisttpl
not
fldl
xchg
jnp
int3
mov
pop
adc
jae
popf
loope
lds
aam
mov
dec
mov
adc
cmpl
pop
aam
js
fistl
mov
out
xor
sbb
aaa
jp
and
jg
cmp
inc
sbb
mov
jbe
popf
push
repnz
mov
test
push
xchg
sahf
fildll
cmp
mov
mov
mov
in
outsl
scas
gs
daa
call
cs
jo
imul
fwait
push
cmp
movsl
push
xor
and
adc
orb
sbb
sub
add
and
xor
dec
js
pop
nop
shll
pop
fisubrl
lcall
outsl
add
mov
into
adc
cmpsb
xor
adc
mov
xchg
in
mov
push
cmp
sahf
loopne
and
out
int
sub
mov
ret
pop
push
lock
push
xchg
into
rcr
mov
fildl
sbb
jo
insb
cs
pop
sub
jl
xor
adc
nop
ss
xor
push
inc
scas
testl
xchg
xor
negl
or
pop
movsb
cmc
xchg
pop
xor
shr
lods
pop
in
imul
in
inc
data16
daa
mov
adc
sub
negl
sti
ljmp
gs
out
loopne
ja
pop
sub
pop
inc
xor
mov
repz
mov
sbb
push
inc
inc
xlat
leave
scas
sbb
adc
inc
mov
jmp
xor
cs
lods
push
aad
jo
nop
std
mov
sbb
out
cwtl
mov
je
int3
jbe
lahf
fsubr
movb
popa
lea
scas
mov
dec
mov
lret
popa
dec
jb
mov
jnp
pop
out
push
inc
pop
mov
jne
hlt
xchg
mov
mov
push
pop
negb
jnp
std
push
xor
cwtl
mov
shl
mov
fmul
or
adc
mov
mov
js
mov
cmc
and
mov
int3
jg
add
push
js
xchg
and
pop
ret
imul
cld
insl
arpl
mov
ljmp
add
mov
lret
pop
push
and
nop
push
aaa
pop
rcrb
add
inc
cltd
leave
xor
test
enter
lcall
push
stos
das
dec
frstor
lods
pop
xchg
stc
ds
xchg
out
aas
dec
sbb
pushf
stos
xorl
out
cmpsl
roll
test
roll
xor
ret
inc
or
add
mov
and
dec
enter
in
inc
xchg
aas
xor
daa
std
jns
pop
mov
fwait
push
push
inc
add
lods
enter
xchg
add
jns
inc
xchg
in
xchg
xchg
xchg
inc
movzbl
out
mov
das
iret
ja
in
movsb
jp
xor
mov
orb
mov
jmp
cmp
xor
xlat
mov
out
aaa
js
xchg
xchg
loop
jmp
repz
subl
je
mov
xchg
movsl
addr16
mov
stos
jb
push
int
insb
cmp
in
inc
mov
in
mov
jmp
mov
fld
mov
stos
mov
jae
inc
stos
push
cmp
cmp
outsb
inc
ds
imul
jbe
mov
xor
dec
adc
mov
pop
rclb
xchg
repnz
rorb
hlt
push
mov
test
xchg
inc
fwait
and
insb
scas
lcall
scas
inc
add
cmc
sbb
fiadds
push
lds
sub
or
cmpsl
aas
jo
es
rcll
jle
jbe
mov
jl
notb
cmp
mov
jno
xlat
test
insl
dec
in
mov
xor
dec
sub
scas
dec
test
sub
push
push
shrl
inc
xor
lock
push
xor
push
sti
push
enter
daa
out
dec
push
loop
loope
repz
ja
and
dec
scas
cld
ds
and
movsl
pop
cmp
imul
add
mov
xor
inc
or
add
mov
js
mov
aas
lcall
sub
pop
ds
jnp
clc
outsb
fnstcw
rolb
jp
mov
sbb
jp
add
xorl
int
adc
pop
iret
mov
or
jb
lea
cmp
mov
jl
jg
mov
loop
xchg
inc
stc
xor
lret
notl
mov
mov
cmp
or
out
or
cmp
sahf
xchg
and
mov
insl
cmc
pop
mov
popf
outsl
cmpsl
mov
adc
shrb
mov
pop
mov
add
mov
or
lods
xor
sub
mov
sub
push
mov
icebp
lea
cltd
inc
incb
push
loopne
fisttpl
inc
inc
push
fsts
outsb
cmp
outsl
aaa
dec
xchg
sbb
xchg
repnz
rcrl
adc
popa
decl
jmp
fnstenv
aad
popa
loop
fsubrs
dec
jmp
int3
jb
cwtl
mov
cmp
jmp
scas
mov
add
cmc
dec
jne
sub
into
cmp
testb
test
pop
xchg
xor
inc
in
add
jg
aas
xchg
push
mov
mov
dec
jne
shll
pop
negb
aaa
std
lods
enter
hlt
loop
sbb
xor
insl
sar
dec
out
pushf
push
mov
jmp
lahf
lock
push
das
aas
mov
jne
outsl
pusha
std
aam
sarb
es
pop
insl
dec
xlat
loope
cmpsl
out
pop
ljmp
subl
aam
out
mov
mov
out
arpl
imul
add
fs
nop
jge
add
push
outsb
cmc
lock
jnp
clc
jp
pop
xchg
cmp
sbb
cmp
pop
in
je
stos
jb
js
or
jmp
lock
addr16
outsl
es
mov
shl
or
mov
xlat
mov
and
cmp
std
es
mov
dec
mov
js,pt
add
inc
fwait
adcl
add
hlt
and
pop
fwait
or
ret
bswap
ret
sbb
mov
sbb
pop
ljmp
jp
imul
or
mov
pop
jno
dec
pop
les
mov
data16
push
push
xchg
push
shrb
xchg
mov
xchg
in
aam
sub
add
iret
addr16
adc
es
jns
enter
mov
insb
lret
stos
pop
in
dec
icebp
pusha
mov
push
out
dec
ret
xchg
pop
scas
out
inc
add
mov
xchg
popf
mov
idivl
test
xchg
fiaddl
in
in
sbb
add
imul
scas
add
cltd
push
and
pop
iret
lcall
leave
jae
hlt
lahf
or
arpl
pusha
cmovbe
out
sub
frstor
or
inc
xor
les
pushf
or
pop
outsl
mov
inc
lds
cmpsb
insl
shr
push
bound
and
adc
cmp
jp
mov
hlt
push
fldenv
stos
jge
stos
rcrb
push
sbb
clc
adc
jno
mov
jl
sbb
dec
push
je
push
mov
addr16
jo
out
scas
ja,pn
push
cmp
push
and
inc
inc
shr
cmpsb
in
cmp
in
cmp
xor
daa
out
aam
mov
inc
shrl
cmp
std
test
and
movsl
popa
stos
jle
jns
out
dec
mov
pushf
push
cld
add
mov
xor
cmc
mov
iret
add
pop
fidivrs
js
rorl
pop
pop
xchg
lcall
xor
ret
sub
std
outsb
cmp
scas
adc
pop
xlat
and
fildll
add
test
push
les
int
loopne
sub
jg
rorl
out
ja
xchg
sbb
or
test
xchg
insb
adcb
stos
inc
outsl
loop
cmp
stc
ljmp
adc
pop
pop
cmp
xor
das
cli
adc
clc
cmp
test
or
ss
xor
mov
xchg
imul
or
data16
sbb
jge
xlat
out
aam
sub
add
in
pop
lock
sub
jns
sbbl
pop
data16
inc
pop
mov
fxch
ret
cli
les
ss
shll
loopne
pusha
sbb
sbb
xlat
inc
adc
loopne
sbb
mov
lret
lds
cs
jae
inc
mov
nop
mov
stos
dec
dec
mov
jb
lret
cmpsb
dec
scas
sahf
fwait
je
mov
movb
xor
movsb
or
dec
lock
pop
dec
dec
xchg
and
pop
xor
cld
repz
sti
jp
aas
xor
cmp
aam
outsb
roll
sbb
push
cwtl
push
pop
stos
mov
adc
mov
mov
cld
push
cmp
or
mov
adc
lock
mov
shlb
inc
jne
mov
fs
xchg
sahf
insl
xor
mov
cmpsl
in
xor
out
pop
repnz
jecxz
adc
inc
and
jge
pop
push
jno
add
in
aaa
add
in
lods
push
mov
adc
push
xor
xchg
icebp
mov
clc
mov
mov
sbb
das
mov
pop
cwtl
xorl
xchg
aaa
pushf
pop
push
dec
loopne
add
mov
xor
add
xchg
lahf
out
dec
xchg
mov
inc
xchg
cmp
inc
push
movsb
mov
xchg
push
mov
cwtl
adc
stc
test
enter
divl
xchg
xor
mov
xchg
ret
push
cwtl
mov
ja
jno
jp
push
and
adc
out
dec
add
xchg
mov
das
imul
pop
repz
cmp
andl
orl
out
jl
sub
sti
fstpl
stos
pop
push
add
insb
adc
std
jnp
scas
jle
and
in
inc
cmp
js
fcomip
mov
sub
enter
push
ret
popf
add
push
out
cmp
cmp
xchg
arpl
arpl
cmp
and
push
adc
dec
call
repnz
les
arpl
xchg
jg
or
bound
or
iret
test
add
sub
xchg
xor
loope
fiadds
sub
rorb
adc
int
and
xchg
sub
movsb
sbb
jp
ret
jge
cltd
fwait
sbb
aaa
mov
sub
sbb
lods
jl
fld
dec
ret
pop
sbb
fwait
cld
mov
pop
pop
imul
scas
scas
or
fisubs
test
pushf
push
test
dec
adc
cmpsb
jo
outsb
in
and
jae
sbb
hlt
push
gs
loope
mov
sub
dec
lret
pop
xlat
mov
jge
and
ss
sbb
out
cmp
rcr
gs
jp
xor
ja
pop
add
ja
pop
xchg
pop
or
sbb
fsubrl
xchg
sub
mov
inc
jb
fstpt
sub
xor
mov
stos
mov
mov
and
jle
sub
int
xchg
cli
sub
jo
pop
int
pop
lret
mov
mov
inc
inc
sbb
or
popl
push
test
cld
int3
jg
shll
stc
mov
repz
pop
sub
cmp
orb
cli
inc
shlb
xor
cmp
cltd
ja
decl
cmc
jmp
loopne
mov
pushf
mov
and
cmpsb
adc
push
mov
data16
lcall
sub
jp
adc
test
es
sti
notl
mov
loopne
loope
pop
test
int
add
push
les
mov
xchg
mov
jne
cmp
call
add
adc
call
jo
mov
mov
aad
jo
nop
mov
dec
test
xor
je
mov
or
adc
pop
cltd
dec
int3
and
mov
adc
xor
mov
mov
mov
mov
out
aam
and
in
pop
ror
rorl
std
sti
movsl
fs
rcrl
mov
cli
ss
popa
pop
stos
cld
xchg
push
lret
jp
out
mov
push
lock
sub
std
stos
mov
jns
subl
rcrb
andl
insl
sbb
jo
pop
mov
in
cwtl
ljmp
sahf
lods
sbbb
mov
in
imul
iret
je
sub
sub
cltd
outsb
fstl
test
sbb
mov
add
cmp
clc
lock
mov
jo
mov
mov
stos
push
dec
push
out
rcrb
fists
or
punpcklwd
add
xor
add
xchg
in
dec
std
pop
sbb
pop
xchg
mov
movsl
mov
in
sub
dec
fwait
loope
out
popa
push
adc
std
mov
cwtl
mov
test
enter
cmp
mov
ficoms
pop
pusha
bnd
js
jp
imulb
mov
out
fidivrl
and
dec
in
pop
jne
ret
gs
or
out
aam
icebp
xchg
push
pop
cltd
jmp
push
mulb
sbb
addr16
xchg
or
jb
mov
addr16
pop
mov
and
icebp
call
jle
xchg
adc
pusha
call
in
ret
xchg
dec
jmp
jae
jl
push
test
jbe
add
lret
mov
es
sahf
scas
xchg
mov
pop
dec
imul
scas
leave
pop
aam
mov
mov
cld
dec
pop
iret
pop
cltd
mov
leave
popa
int3
push
arpl
inc
mov
stc
or
mov
or
jle
add
in
cmp
jb
ficomps
movl
shlb
add
mov
pop
inc
cmp
lods
movsb
movsb
sahf
adcl
push
jbe
or
iret
imul
adc
jbe
sbb
dec
push
jno
bound
sub
dec
xor
divl
pop
xchg
scas
scas
in
push
arpl
addr16
mov
in
or
dec
adc
aas
daa
in
popf
push
xor
loope
dec
lea
bound
pop
jle
movb
outsl
mov
and
in
stos
sbbb
push
add
xchg
push
xor
pop
xchg
pop
sub
inc
js
mov
pop
mov
lcall
repnz
mov
xchg
outsb
add
adc
adc
xor
test
push
call
ret
sub
cmp
xor
add
pushf
stos
adc
dec
ds
lret
mov
aaa
mov
out
sbb
lahf
mov
cmp
clc
jg
fs
loop
sbb
cmpsl
xlat
add
stos
imul
pop
inc
cmp
cmp
out
push
cli
ja
out
xor
aaa
pop
cmp
pop
push
or
jp
push
loop
cmc
mov
xor
push
ret
lods
outsl
inc
cwtl
out
clc
test
adc
test
sub
xor
std
lods
in
lods
mov
push
out
movsb
and
test
xor
and
cmpsb
movsb
cmp
outsb
jecxz
gs
pop
loopne,pn
xorl
fnstenv
into
add
repz
sub
xchg
mov
cmc
xlat
lds
pushf
adc
adc
imul
aad
lea
imul
jb
into
sbb
lods
inc
je
lds
or
fimuls
lcall
mov
add
dec
push
add
pop
jnp
testb
xor
lods
inc
aas
jo
dec
mov
cmpsb
and
rcrl
mov
xchg
mov
in
into
mov
sarl
cmp
mov
lret
jmp
hlt
dec
mov
les
push
jno
fsubl
out
push
sub
dec
mov
movsl
arpl
mov
ss
jmp
dec
adc
andl
aas
pusha
popa
fadds
fistpll
push
xor
repz
cmpsb
mov
dec
xchg
fildl
movsb
pop
jo
movsl
pop
or
cmp
push
mov
inc
fnstsw
shl
clc
sub
xchg
cmc
xchg
sub
push
xor
sub
xor
xor
lds
add
pop
xor
sub
xchg
push
insb
mov
sub
out
test
loopne
xchg
pop
xchg
inc
sbb
or
stc
js
adc
mov
add
icebp
sbb
aaa
sar
out
adc
in
leave
je
rcrb
idivl
sbb
sub
add
jp
dec
pop
mov
pop
dec
mov
movsl
sbb
jne
dec
mov
incb
xchg
loope
sub
jno
xchg
pop
jb
subl
out
daa
repnz
icebp
jns
addr16
dec
and
and
in
jnp
cmc
jbe
xor
in
cmpsl
pusha
cmpl
ret
fstpl
ja
inc
es
jae
ret
dec
stc
pop
popf
sub
jno
gs
aaa
ficompl
xor
sub
or
add
inc
mov
xlat
pop
push
mov
mov
arpl
leave
fdivs
hlt
addb
arpl
std
inc
mov
or
pop
loope
inc
or
sub
mov
cwtl
int3
pop
cmp
fmulp
neg
lds
data16
mov
repz
xchg
add
push
movsb
das
add
lahf
imul
xchg
jge
and
sbb
in
pushf
aaa
xor
ljmp
push
int
dec
mov
xchg
lds
mov
addr16
mov
xor
iret
xor
push
xor
add
and
cmpsb
jbe
add
repnz
pop
enter
daa
jecxz
shrb
adc
jecxz
imull
dec
or
or
push
movsl
jbe
mov
lahf
pop
xorl
inc
fldt
add
add
movsb
sbb
jg
leave
jg
pop
adc
cmpsl
add
test
add
outsb
gs
in
gs
mov
push
sti
mov
mov
xor
and
fnstenv
sub
jnp
pop
lret
sbb
adc
inc
ror
ja
cmp
sbb
sti
xchg
mov
int3
jg
cld
add
stc
pcmpeqw
adc
in
ss
add
fdivr
sti
mov
add
out
cli
stos
jbe
xor
pusha
int3
cmp
testl
into
cmp
iret
xor
call
adc
loopne
imul
icebp
add
jp
lods
int3
sbb
outsb
pop
dec
out
push
inc
sub
mov
jo
popf
bswap
sti
push
clc
xchg
mov
dec
loopne
ss
ret
mov
inc
xchg
addr16
fldcw
xchg
sub
mov
sub
sbb
js
mov
add
fistpl
lock
mov
leave
fucomp
xchg
and
cs
mov
sbb
jp
inc
outsl
jl
addr16
jb
popf
add
sub
je
push
and
ljmp
lea
outsb
or
lret
mov
lea
push
jo
fistl
jecxz
inc
add
pop
inc
dec
in
aas
setnp
mov
adc
and
mov
shrl
clc
imulb
lods
std
dec
adc
mov
push
ret
scas
sbb
punpcklwd
cld
jmp
nop
lret
pop
adc
mov
mov
dec
mov
lock
mov
mov
and
dec
rolb
pop
pop
ret
xor
and
cmp
xchg
insl
out
sbb
cmpsl
loop
xor
push
popa
out
ror
lods
pop
lock
mov
jp
pop
and
xchg
scas
hlt
pop
imul
cltd
faddl
test
jp
int3
frstor
jmp
xchg
xor
mov
push
inc
rcl
repnz
cltd
lahf
or
out
xchg
call
jns
fstpt
or
xor
jl
xor
neg
mov
xor
popa
dec
lret
push
popa
test
jp
xchg
pop
aas
dec
mov
testb
nop
or
out
fwait
aas
jb
push
cmpsl
movups
xor
call
jmp
cmpl
stos
add
pop
jae
mov
repz
adc
jp
push
fidivs
xchg
push
adc
stos
add
mov
add
xchg
pop
xchg
mov
cs
ljmp
out
sub
sub
in
and
clc
stos
mov
nop
and
roll
jnp
stos
cmp
inc
xlat
in
mov
fists
and
sbb
pop
mov
xor
jae
dec
scas
push
or
popf
push
push
inc
mov
movsb
outsl
jno
push
data16
xchg
push
add
imul
js
sahf
es
ds
iret
adc
fidivl
repnz
in
dec
test
arpl
fldl
fxch
or
rcrl
inc
mov
sub
and
mov
dec
pushf
jecxz
sub
fisubrs
xchg
lds
rcrb
mov
xchg
cmp
mov
scas
jbe
lret
jge
mov
xchg
aaa
hlt
mov
imul
jl
add
push
push
inc
rorl
scas
mov
scas
stos
push
push
mov
lds
std
sbbb
setg
std
enter
daa
loop
dec
push
out
test
cli
out
sub
or
cmp
jae
movsl
jge
add
in
add
rclb
push
data16
les
fisttpl
out
js
loop
pop
push
hlt
fstpl
push
xchg
sbb
mov
sub
push
aad
enter
mov
jle
enter
dec
add
mov
int3
lock
sub
and
enter
std
sub
pop
dec
jge
lret
adc
mov
dec
negb
push
sbb
sahf
js
sub
rcl
jg
cwtl
jmp
lret
stc
fisttps
mov
test
sub
mov
adc
ret
or
mov
cmp
cmp
dec
sub
sbb
adc
inc
sub
int3
int
outsl
add
imul
add
int
cmp
daa
lods
mov
leave
mov
mov
sub
add
or
lods
sti
add
jp
mov
mov
mov
jge
loop
fiaddl
pop
inc
fldenv
lcall
in
jo
sbb
mov
push
xlat
inc
add
pop
lods
or
pushf
cmp
jmp
popf
jbe
inc
call
nop
pop
mov
out
jb
mov
jle
jno
cmp
stc
or
adc
clc
nop
lret
mov
dec
loop
mov
cmp
ds
loop
shll
mov
jge
addr16
cmc
aas
scas
ja
mov
adc
mov
sarl
sti
std
lock
iret
cwtl
add
movsl
mov
repz
out
dec
cld
push
xor
lret
sub
push
mov
add
lock
das
lcall
sub
and
ret
ret
inc
dec
es
insl
cmc
dec
or
cmpsl
loope
xchg
ljmp
and
mov
popf
push
sti
and
xor
pop
mov
mov
lret
cltd
adc
test
gs
push
jo
push
cmp
sbbl
jae
stc
sbb
adc
adc
stc
sti
ret
xchg
push
cmp
testb
push
leave
xor
sbb
mov
loopne
movsb
lock
mov
xor
mov
xchg
mov
dec
or
test
and
dec
pop
inc
add
dec
std
jmp
jne
inc
bound
mov
mov
loop
xchg
jo
ss
jmp
mov
xchg
push
sub
test
jp
or
mov
mov
push
mov
mov
jne
fsubs
out
jno
setb
inc
pop
xchg
mov
ljmp
mov
push
out
jns
inc
scas
sub
in
or
gs
and
push
in
adc
pusha
mov
sbb
sub
inc
cmp
and
sbb
popf
ja
aad
sarb
jecxz
fiaddl
fdivs
adc
imul
jbe
repnz
jo
test
iret
jne
inc
repnz
leave
mov
test
orl
cmpsl
or
dec
jb
inc
or
movsl
add
rcrl
ficoms
adc
shlb
jge
sub
sbb
cmp
loope
inc
lds
fs
push
jbe
imul
cmp
mov
sarb
push
out
jno
xor
dec
jg
mov
xor
jo
dec
scas
mov
push
pop
mov
test
enter
mov
cmpsb
jl
addr16
sarb
movsl
pop
daa
loope
xor
ficompl
adc
add
lcall
das
stc
shlb
sub
lahf
cltd
mov
or
scas
imul
fiaddl
sahf
into
rcrl
mov
mov
xchg
flds
lcall
push
fcompl
jp
sub
shll
mov
sub
mov
mov
dec
push
push
xor
aas
movsb
sub
bound
lret
das
sar
dec
mov
cli
mov
xchg
popa
sahf
sbb
test
mov
jg
aaa
nop
loop
insl
fwait
stc
jge
fs
jge
adc
adc
cmp
outsb
mov
ljmp
and
xlat
movsl
cmp
mov
or
cmc
pop
jae
xor
icebp
push
outsl
loope
je
jno
mov
xchg
xchg
adc
xchg
cmp
iret
icebp
xor
imul
fnsave
sub
mov
sub
dec
insb
sti
mov
adc
xlat
push
out
cmpsb
frstor
pop
add
inc
mov
sub
repz
fcmove
xchg
scas
push
jg
or
in
out
fmull
pop
aam
adc
push
jmp
fst
movsb
repnz
test
rclb
and
fcoms
dec
add
dec
je
jb
jecxz
pop
pop
adc
dec
jae
or
orb
dec
sub
xor
pop
fs
inc
psubd
inc
orb
mov
lret
fistl
rorl
popf
repz
mov
jnp
mov
mov
in
icebp
mov
cmpsl
push
lret
ss
mov
xchg
sub
sbb
mov
rol
stos
shrl
pusha
xor
ret
push
adc
outsl
insl
mov
arpl
iret
jae
loopne
mov
popa
sbb
adc
mov
or
int
push
add
and
and
outsb
mov
jo
push
add
clc
fmull
xchg
mov
repnz
shll
sub
stos
or
fucomp
pop
add
lcall
paddusw
jge
sub
or
xor
dec
mov
ss
dec
cltd
aad
test
imul
jno
cmc
inc
dec
mov
into
fwait
popf
cmp
push
in
cwtl
addl
adc
test
xor
pop
jae
in
insl
pop
xchg
mov
xlat
or
dec
inc
ja
mov
cwtl
mov
daa
je
in
aad
mov
lods
insb
dec
jno
fidivl
cmpsb
repnz
dec
mov
push
imul
push
dec
add
insl
xor
decb
push
or
cmp
addr16
daa
test
xchg
leave
xor
add
sub
sub
int
in
add
push
mov
fists
aad
pop
clc
lret
inc
cli
lcall
in
or
or
or
jl
fidivrl
ret
cmp
push
scas
push
mov
push
int3
xchg
adc
or
aam
ret
repnz
and
cmp
outsb
mov
nop
clc
xchg
inc
xchg
pop
push
or
leave
sbb
inc
mov
int3
add
in
int3
push
fisubs
mov
pop
fidivs
mov
lods
mov
lods
push
fidivrl
daa
jne
movsb
shlb
push
mov
jp
adc
jge
sahf
or
sbb
lret
stos
mov
pop
mov
fstpt
orb
xchg
push
or
pop
xor
lret
call
loope
das
lods
jmp
push
xchg
dec
xlat
inc
sbb
jecxz
cmpsl
add
and
loopne
bound
jp
loope
adc
cmp
mov
outsl
movsl
mov
and
push
push
lahf
mov
inc
push
sbb
sub
xor
lret
popa
xchg
pop
enter
jp
ret
inc
int3
lcall
fadd
adc
sub
cmp
ret
ds
sarb
jg
rcl
sbb
adc
push
and
ds
fs
mov
pop
dec
int3
cli
lret
rol
jbe
mov
jns
sbb
adc
xor
mov
fs
loop
inc
dec
stc
xor
icebp
shll
lret
cmp
mov
and
sub
cmp
inc
cmp
cmc
xor
inc
cmp
mov
pushf
into
loop
dec
cmc
into
jae
xor
scas
mov
imul
pop
add
mov
movhps
pop
jnp
out
je
sub
aaa
mov
fisubs
xchg
cli
pop
mov
loopne
int3
dec
pop
and
xchg
inc
lret
jmp
fsts
xchg
xor
dec
push
ds
jb
lahf
sbb
sub
pop
adc
ret
pushf
cmp
jmp
loope
cs
icebp
outsl
aad
ljmp
test
mov
je
jns
pop
jmp
rorb
xchg
movl
aas
sbbl
rorl
pop
pop
push
push
inc
popf
add
mov
xorb
rcrl
mov
std
ds
cwtl
js
scas
mov
cmp
mov
xchg
rcll
insb
icebp
dec
lret
movsl
popf
pop
mov
scas
lcall
leave
mov
rcrb
push
out
js
add
sub
dec
insl
fwait
jg
dec
rcr
cmpsl
fistpll
lock
subl
clc
mov
paddusb
mov
enter
lock
rolb
mov
push
ret
or
dec
clc
pop
pop
es
icebp
sub
divl
pop
lcall
out
mov
xchg
lcall
jnp
jns
ja
mov
mov
cmp
les
in
add
xchg
pmaddwd
stc
add
test
fs
nop
lret
std
add
test
pushl
cmpsl
gs
js
in
dec
adc
and
stos
mov
pop
int3
or
pop
xor
sahf
xor
pop
push
adc
popa
mov
jo
mov
xchg
mov
mov
out
das
ja
xchg
sub
out
and
loopne
sub
jne
frstor
fs
or
pop
and
out
push
insb
xchg
pushl
jle
pushl
mov
and
sub
fildll
iret
cltd
pop
das
test
inc
push
arpl
jae
xorl
mov
popa
enter
xlat
cmp
in
cld
imul
fisubrl
adc
adc
pop
iret
xor
cmpsb
repnz
dec
lods
leave
mov
mov
arpl
inc
inc
or
inc
push
inc
inc
pop
stos
imul
out
add
es
pop
mov
out
mov
stos
loop
mov
aas
xchg
jo
fisubs
mov
jbe
repnz
adc
popf
sbb
and
aaa
xor
cmp
mov
jl
cmpsb
push
dec
pop
aad
push
in
cmp
xor
es
adc
push
add
fldt
pop
test
inc
cmpsb
sbbb
mov
enter
daa
lret
int
loope
pop
inc
sub
cmp
shrl
jne
sbb
mov
setg
pop
fildl
sbb
add
xor
das
pop
out
fstp
js
addb
adc
xor
and
sub
outsl
xorl
repz
adc
pop
xchg
addr16
imul
mov
into
fidivl
sub
int
outsb
pusha
sub
orl
fnstsw
shrl
adc
in
adc
in
pusha
sahf
popa
shlb
adc
jg
adc
adcl
idivl
fs
cmp
adc
mov
cmp
in
xor
add
cmp
xor
xor
lcall
stos
pusha
into
lds
sbb
fnsave
outsl
lahf
mov
fsubrs
loopne
adc
cs
add
int
ret
sub
mov
out
xor
les
xor
sti
adc
jmp
sbb
jg
loopne
shl
pop
aas
cmp
inc
fidivrs
inc
les
ja
out
adcb
andb
iret
adc
and
pop
lds
mov
cmp
jmp
test
stos
aad
cld
xlat
nop
mov
icebp
dec
jecxz
mov
dec
lock
push
filds
jecxz
mov
repnz
or
movb
jp
loope
mov
sahf
dec
lcall
inc
pop
stos
shrl
inc
sbb
mov
and
in
mov
mov
cltd
push
jne
enter
aas
cwtl
xor
mov
aaa
ja
jecxz
sbb
imul
adc
adc
addr16
call
das
aaa
aam
shrb
repnz
subb
jo
push
es
or
insl
sbb
dec
stc
push
outsl
ljmp
push
add
sarb
xor
and
add
pop
out
lock
gs
cltd
mov
mov
jmp
fldl
xor
dec
xchg
xor
sbb
nop
dec
fbld
pop
inc
or
stos
ljmp
xchg
sub
adc
in
fwait
sahf
lea
into
orb
jge
xor
aam
mov
cmp
rorl
fldcw
push
add
push
shll
inc
jbe
fisttpl
out
fwait
sti
push
negb
xor
out
lahf
rclb
push
js
int
dec
jns
and
in
jle
xchg
pop
in
popf
mov
or
mov
ret
ja
jnp
jp
jne
mov
lcall
rorb
jne
jo
mov
loope
out
push
mov
jmp
push
leave
mov
out
rcrl
fcomps
dec
stos
jge
scas
and
xchg
push
insb
call
ljmp
and
in
push
cmp
mov
dec
ret
xchg
pop
data16
inc
pop
and
jae
sbb
push
pop
jg
popf
in
mov
mov
mov
gs
xchg
les
sbb
inc
jne
mov
scas
sbb
mov
iret
xchg
mov
repnz
push
leave
sub
hlt
imull
jmp
scas
mov
popa
or
mov
mov
fldl
jl
popa
int3
hlt
outsl
jmp
out
js
sti
loope
lds
cwtl
rol
mov
and
or
xchg
je
movsb
out
out
push
push
inc
ss
jecxz
jge
psubusw
xchg
in
aaa
lock
in
jge
xor
inc
or
popa
dec
int3
pop
inc
push
rolb
lret
cmc
shll
inc
scas
es
cltd
push
aad
dec
test
sub
inc
cmp
cmpsb
add
ret
jecxz
testb
daa
fidivrs
pop
push
aad
loope
lret
lods
sub
inc
pop
cmp
scas
ds
inc
add
and
jb
divb
sub
push
xchg
fiaddl
adc
xor
sub
out
lret
pop
push
lds
pop
push
mov
adcl
adc
sbb
outsl
sub
daa
dec
outsb
push
mov
xor
fisttps
ja
add
test
scas
shlb
push
ds
int
pop
shrb
xor
pop
inc
sub
lret
or
sarl
mov
cmc
adc
adc
add
add
xchg
test
or
mov
xchg
stc
mov
push
ret
adc
loop
cmp
lahf
sub
mov
sbb
sub
popa
or
pop
sbb
test
jecxz
pop
mov
pop
outsl
jle
pop
adc
js
imul
adc
jl
out
inc
mov
lods
dec
mov
sub
mov
jnp
mov
mov
aad
rclb
incb
push
gs
jmp
lds
inc
test
orl
repz
lea
andb
cmp
xor
pop
js
xor
pushf
in
jmp
xor
mov
jge
mov
mov
cmc
dec
inc
out
jb
mov
dec
cmp
adc
xor
sbb
jl
add
adc
mov
daa
addl
sub
jle
adc
inc
movsb
test
inc
shll
insl
aas
sub
pop
mov
lock
jbe
sub
mov
clc
std
mov
std
mov
cmp
iret
mov
int
inc
jnp
cld
ret
lret
andl
mov
xor
lock
das
push
jmp
push
sub
xchg
aam
fsub
ret
ljmp
jmp
jae
insl
imul
js
fldl
adc
jae
movsl
popa
bound
lods
outsl
jge
mov
sub
and
sahf
cmp
pop
push
push
add
jp
cltd
out
shr
test
jg
dec
or
mov
clc
lea
popa
sbb
push
pop
lock
stos
fstps
mov
outsl
push
lds
xchg
mov
cli
ror
xor
arpl
or
mov
sbb
leave
xchg
mov
dec
into
popa
test
and
adc
dec
loop
or
stc
aad
sub
insl
add
mov
movsl
jmp
jns
insl
in
add
xchg
lods
loope
mov
push
push
push
push
pop
pop
jge
push
ja
pop
call
mov
mov
mov
and
dec
sbb
pop
mov
dec
pushf
out
in
sahf
mov
cmp
movsb
xchg
loope
addb
or
ret
std
or
sub
push
stos
lock
pop
adc
push
push
sbb
in
pop
sub
fucomip
mov
mov
inc
push
stc
pop
push
mov
mov
fucomip
pop
fcmovbe
cmpsb
mov
sbb
mov
mov
jle
aam
mov
js
iret
icebp
inc
pop
repnz
repz
mov
lea
mov
jg
or
cmp
or
add
mov
add
push
cmp
sahf
mov
imul
stc
test
hlt
cmp
movsb
jno
fwait
push
mov
dec
jne
pusha
push
sub
dec
cmp
aaa
scas
insb
cld
cmp
cmp
jl
mov
cmp
call
xor
fdiv
xchg
test
jo
cltd
cmpsb
adc
inc
mov
cmpsb
mov
in
pop
clc
bswap
icebp
add
frstor
push
nop
cmp
insl
pop
xor
cmp
pop
movsl
mov
adc
lahf
adc
mov
mov
jp
xor
lret
daa
stos
gs
pop
cmp
jns
pop
xchg
sbbl
sub
xchg
outsb
mov
adc
setg
mov
es
and
std
mov
and
and
sti
mov
inc
aas
lock
sub
pushf
pop
lds
jbe
ret
push
rcrl
mov
xor
sahf
cmpsl
cmc
cmp
inc
sbb
pop
loop
or
stc
pop
xchg
jmp
adc
jne
ss
add
pop
and
idivl
das
cli
fmull
xor
cs
repnz
or
mov
cmc
and
jbe
xchg
inc
xor
jmp
adc
mov
add
or
sbb
push
int
out
cmp
sub
xor
in
pop
stos
cld
sti
outsl
add
arpl
jg
ret
loopne
adc
addl
mov
pop
repz
xchg
mov
cmpsb
sub
xlat
jle
lret
pop
sub
les
sub
pushf
nop
and
jmp
test
xor
nop
data16
xor
mov
mov
shll
dec
jecxz
xor
sti
sbb
call
les
mov
inc
sbb
test
pop
lock
sub
lods
inc
out
sarb
add
mov
cmpsl
and
and
call
pushf
idiv
xchg
std
xor
mov
mov
sbb
add
repnz
mov
js
lock
fldt
cmc
add
rclb
sub
aam
or
mov
ret
es
push
ret
dec
mov
out
push
or
out
and
xchg
xlat
lods
fimull
mov
dec
loopne
and
cmp
pop
and
ret
and
test
xchg
or
add
push
lret
push
clc
enter
scas
inc
jl
cmp
sar
sbb
aaa
pushf
stos
enter
call
nop
adc
scas
loopne
pop
or
push
or
push
adc
mov
mov
dec
xor
aaa
jmp
add
fmull
ja
inc
movsb
mov
fwait
pop
cmc
stos
push
jns
rolb
stc
mov
cmp
xor
fildll
mov
adc
mov
cmp
scas
ja
inc
mov
idivb
sub
mov
scas
jnp
dec
std
jp
jne
lret
rol
out
int3
mov
push
jmp
lods
add
adcl
out
les
stos
sbb
mov
das
imul
aad
jecxz
movl
arpl
lds
fisttps
inc
ret
cli
pop
aam
dec
inc
jae
fs
sbb
popf
loopne
popf
cmp
mov
push
lds
fiaddl
pop
sbb
fcom
imul
push
call
sbb
push
cld
or
test
and
sbb
test
lea
out
arpl
pop
and
leave
sub
mov
add
test
or
faddl
stos
xchg
xchg
int3
lret
pop
inc
mov
lds
xchg
sar
dec
mov
clc
lea
add
movsb
cld
ljmp
sbb
adc
pop
and
cmp
sbb
jl
mov
cmpsb
push
xchg
ss
pop
addl
in
pop
push
jnp
jae
nop
and
inc
push
cmp
or
push
enter
daa
fmull
loope
adc
stc
cmp
add
ds
push
movsl
cmpsl
jae
and
adc
xchg
ret
add
xor
xor
decb
pop
fs
push
pop
into
cmovg
sub
adc
jo
pop
sub
test
adc
ljmp
mov
push
inc
mov
jmp
ljmp
loop
sub
pop
inc
lcall
out
mov
mov
jmp
lds
bound
enter
lcall
lret
clc
adc
shrl
cmp
adc
int3
push
xor
jne
cmp
push
repnz
adc
into
outsb
mov
cmc
ljmp
outsl
cmp
js
nop
out
ret
and
adc
cltd
add
sub
adc
mov
add
ljmp
sti
push
mov
incb
loopne
loopne
push
jmp
pushf
mov
inc
pop
je
xchg
sub
js
xchg
repz
test
sbb
adc
loop
pop
ficomps
adc
jne
pushf
cmp
dec
jmp
cltd
shrb
xchg
jb
aad
mov
inc
jo
dec
add
jb
clc
inc
dec
push
mov
xor
jecxz
rorl
lea
lea
inc
jbe
push
pop
xorl
cmpsl
fcmovnu
aad
pop
xchg
std
inc
mov
mov
or
fbld
pop
mov
inc
inc
sub
xchg
xchg
fdecstp
jp,pt
std
ficompl
xchg
dec
dec
adc
lock
cld
sbb
lret
popa
mov
mov
and
lock
repz
aam
cld
shl
or
or
mov
ret
sbb
movsb
xor
push
lahf
dec
ljmp
ljmp
cmp
mov
outsl
movsb
popf
and
aam
adc
inc
shr
add
ficompl
pop
rorl
mov
jo
push
iret
pop
dec
fnsave
mov
add
repz
in
std
negl
jmp
inc
rcll
mov
add
out
dec
je
xchg
std
fs
fcomp
mov
mov
mov
jecxz
data16
cmp
inc
add
dec
test
fmull
dec
xor
inc
cmp
or
cltd
adc
sbb
adc
lock
bound
repnz
xchg
dec
cwtl
cmpsl
mov
inc
les
repz
ja
popf
repnz
jp
xor
mov
das
mov
sbb
in
jne
mov
sbb
out
stos
int
jns
jmp
ja
fadds
repz
xchg
and
or
or
cmp
jnp
shll
jbe
xchg
insb
inc
pop
pop
jnp
adc
jle
dec
mov
pusha
pop
fisubrs
ret
leave
pop
or
pop
inc
jle
inc
jae
adcb
pusha
aas
out
popf
popa
cwtl
jns
xor
and
aaa
inc
insb
xchg
leave
daa
iret
sbb
loop
imul
lret
int3
ja
scas
int3
xchg
iret
scas
mov
xor
nop
jecxz
hlt
fadds
arpl
lcall
push
pop
push
push
add
or
sub
int3
mov
push
pop
je
fsubp
inc
xchg
vpmaxub
aaa
xchg
mov
sahf
sub
movsb
xchg
leave
push
mov
std
jge
out
sbb
fwait
mov
sub
cmp
jno
cltd
mov
dec
sbb
push
jns
xor
push
jo
adc
scas
ret
out
adc
dec
nop
xchg
mov
in
cli
cmpsb
mov
lahf
in
sub
or
cmpsb
xchg
daa
fstpt
push
and
loope
lock
sub
repz
add
push
movsl
scas
sub
pop
lahf
push
int3
adc
stc
jl
add
inc
out
xor
je
xor
nop
pop
mov
mov
shrl
or
xchg
push
jg
or
sbb
outsb
jge
dec
adc
out
add
push
enter
add
and
push
inc
add
sub
mov
ret
xchg
or
test
in
bound
lds
mull
jg
dec
xchg
loop
xchg
cld
stc
mov
cltd
adc
jl
rol
mov
fcom
shr
idiv
mov
scas
xor
nop
outsb
or
jle
push
adc
dec
xor
mov
adc
mov
sub
adc
dec
addb
fwait
sahf
iretw
push
or
inc
cmp
sub
push
in
cmc
shr
sti
int
insl
test
jae
loopne
stos
out
pop
mov
fdivrs
xor
les
or
adc
cmc
pop
mov
push
movsb
mov
pop
xchg
pop
arpl
jne
pushf
out
adc
or
divb
aad
sub
nop
sbb
sub
sbb
and
pcmpeqb
and
mov
daa
xor
call
ret
mov
scas
orl
push
fisttpl
add
pop
add
inc
and
inc
aas
pop
lock
push
sbb
and
out
ret
ret
addl
mov
mov
pop
push
mov
movl
insb
lret
shlb
data16
jo
xorl
lock
and
mov
loop
mov
cmc
sub
jo
aam
insb
sahf
ret
lods
movsb
cmp
push
imul
mov
cmpsl
fiaddl
or
dec
pop
lods
mov
pop
mov
xchg
pop
sahf
and
outsl
dec
jg
arpl
addl
icebp
jmp
test
mov
mov
ficoms
xchg
cltd
fstpl
lock
sahf
sbb
icebp
mov
stos
cmpsb
lods
inc
out
scas
xor
xchg
inc
mov
cmp
xor
cmp
or
mov
and
dec
ficoml
add
in
add
bound
jmp
inc
rorb
or
daa
and
mov
dec
incl
or
insl
dec
inc
jge
sbb
and
sub
xchg
cltd
pop
dec
mov
in
mov
scas
sbb
pop
and
jp
fiaddl
mov
xor
mov
xor
mov
mov
out
mov
notl
and
adcb
cmpsl
out
xchg
int
js
repnz
push
inc
addr16
jp
dec
mov
aaa
insb
stos
roll
inc
push
in
ret
idivb
ret
aas
pop
inc
mov
jne
mov
mov
and
sbbb
add
add
xchg
and
pop
imul
pop
push
jbe
repz
jge
repnz
repz
pop
push
jg
and
testb
icebp
or
stos
and
or
dec
add
jecxz
int3
mov
loope
fiadds
mov
shlb
sarb
push
jecxz
cmp
inc
movsb
adc
push
hlt
xorl
mov
bound
in
sarb
dec
adc
jno
lods
jl
xchg
mov
push
pop
clc
xor
in
mov
mov
test
push
jns
inc
je
hlt
cmpsb
adc
in
adc
cmpsl
enter
daa
add
loope
out
repnz
dec
repnz
in
mov
int3
and
xchg
sbbb
sbb
adc
in
movsb
hlt
xor
pop
outsb
pop
mov
bound
ret
icebp
pop
dec
mov
lcall
out
sbb
sub
into
adc
mov
scas
cmp
ret
dec
popa
mov
jae
and
xor
fxch
ss
sub
pop
pop
inc
sbb
rcrl
out
sbb
mov
dec
test
mov
push
add
ja
jle
lds
rcll
rcll
adc
repz
mov
dec
cli
jne
and
mov
xchg
or
aam
into
xor
xor
xor
dec
adc
xor
imul
outsl
add
je
lods
jmp
dec
mov
push
sub
push
and
pusha
and
push
dec
push
xlat
push
loopne
adc
pop
fidivrl
inc
cmp
jb
les
fdivs
xchg
add
aas
sbb
mov
push
xlat
cmp
aam
int3
jne
pushf
xchg
jle
jmp
or
cs
jmp
aad
cs
nop
idiv
cmp
fistpll
js
jmp
je
sub
jecxz
fstp
sub
rorb
lret
inc
xchg
andl
repnz
pop
fldcw
xor
pop
push
aas
cmpsb
in
shlb
int3
push
cmc
and
icebp
push
shll
loopne
cld
out
std
sub
clc
mov
in
pop
mov
sahf
jle
cld
outsb
adc
aas
pop
inc
mov
or
lcall
rorb
add
test
cmp
shll
xchg
pop
or
aas
mov
popa
mov
mov
mov
mov
mov
cmp
lahf
mov
addb
test
jno
aas
mov
out
push
push
cmp
ffree
fcmovbe
clc
jns
imul
add
popf
pop
pushf
mov
stos
xchg
cmp
xchg
mov
in
mov
pcmpeqd
dec
xor
or
aaa
xor
mov
mov
dec
and
test
jecxz
xchg
xor
or
mov
out
mov
add
es
cmpsl
ljmp
cld
bound
out
in
popaw
xchg
call
std
aaa
mov
imul
jp
xor
cs
sti
pop
dec
cmpsb
xchg
aaa
jne
jg,pt
shll
push
jmp
or
jecxz
out
scas
shrl
xor
push
stos
mov
out
pop
insb
push
decb
jnp
adc
fisubrs
test
pusha
xchg
scas
inc
fildll
fcmovb
out
mov
dec
incb
mov
pop
sbb
out
push
popf
scas
clc
and
ficompl
dec
inc
sbb
jno
imul
scas
or
jae
gs
iret
insl
inc
mov
mov
data16
hlt
outsb
dec
je
stc
ljmp
in
mov
es
mov
leave
in
or
cltd
arpl
outsl
inc
test
mov
pop
shlb
sub
popf
rorb
jne
dec
and
sub
movsb
popf
icebp
lods
push
fmull
iret
jge
inc
sbb
cmp
aaa
stos
cmpsl
loopne
jl
lahf
jno
xchg
add
daa
dec
neg
jmp
xor
dec
jns
scas
cmpl
popf
test
and
jbe
add
cmpsb
xchg
dec
pop
in
clc
mov
enter
daa
fchs
ja
jns
ss
adc
sub
mulb
ds
jp
movsl
mov
ja
lahf
xchg
inc
subb
sbb
stos
add
pop
sub
mov
xchg
pop
fldenv
pop
mov
insb
push
sub
jg
sub
jl
adc
jnp
sub
push
sbb
cld
sbb
mov
aaa
and
push
dec
xchg
adc
popf
pop
xor
in
inc
pop
rcrl
lret
nop
shll
sbb
cmpsb
sub
xor
movsl
test
lea
loop
jmp
mulb
push
adc
jnp
ss
cmc
cmc
cmp
inc
iret
daa
idivl
fdivr
test
sub
cmp
jg
or
pop
sbb
pop
mov
sbb
fldt
fnstenv
adc
and
test
add
shlb
inc
cld
lods
shlb
mov
hlt
sub
cmp
lret
dec
stos
sti
sub
out
mov
ljmp
nop
inc
push
cmp
fsts
test
shr
xchg
cmpsl
mov
cmp
xchg
xlat
jp
sbb
addl
cmp
aas
jmp
insb
push
cs
xchg
sbb
sbb
loop
dec
mov
add
add
sub
cs
call
shr
mov
lods
cmpl
mov
fldt
xor
dec
js
inc
inc
nop
inc
pop
push
and
inc
in
in
mov
subl
roll
insb
sub
iret
movsl
jb
xchg
pop
inc
mov
add
mov
jne
dec
cld
cltd
sub
lret
scas
push
xchg
adc
lock
lahf
out
jno
cld
rcrb
sub
aas
xor
add
dec
add
push
push
in
insl
in
lret
arpl
push
sbb
mov
sbb
xchg
outsl
lods
xchg
xor
and
movsl
mov
ret
out
ficompl
jl
push
mov
pop
cmpsb
push
sbb
fucomp
cmpsl
int
mov
push
xchg
stos
inc
push
sbb
adc
inc
adc
test
lock
rolb
push
imul
jg
rcl
or
js
mov
dec
loopne
dec
roll
xchg
xchg
repz
or
inc
add
test
add
addr16
add
add
or
mov
aas
cmp
adc
dec
xchg
aaa
test
mov
mov
mov
and
and
or
in
mov
push
lea
mov
dec
mov
dec
jne
sub
push
out
dec
dec
push
xchg
repnz
xchg
fsubrs
orl
mov
or
ja
stos
das
lods
and
push
dec
jnp
loopne
jle
pop
shl
loope
aas
pusha
sub
cli
fisttps
push
loope
mov
insl
inc
lahf
jb
jae
dec
in
test
jle
mov
sbb
ficoml
cmp
sbb
testl
push
add
push
iret
int3
or
mov
hlt
mov
stc
addb
ss
mov
icebp
daa
or
add
int3
jbe
jb
add
fmulp
cmp
lds
sarl
inc
or
xor
adc
jge
ret
insb
sbb
xchg
aaa
push
in
cmp
xor
jl
ret
add
push
and
and
dec
jg
pusha
arpl
push
mov
aad
jmp
adc
std
mov
in
fistps
fdivs
daa
fcomps
push
vpsraw
pop
in
mov
cmpsb
mov
push
sub
and
inc
rcrl
jle
jmp
sahf
sub
cmp
xchg
xor
in
js
test
lcall
or
sbb
inc
sub
outsb
cmpsb
sbb
jl
push
pop
rorl
imul
fdivs
scas
push
push
push
or
add
test
pop
inc
test
lret
lahf
rorl
mov
jecxz
sub
sub
or
inc
jg
mov
stc
in
inc
push
sub
aam
pop
out
ss
fadds
lods
out
cmp
add
cmp
xor
or
clc
in
cmc
push
mov
xor
insl
outsl
mov
dec
out
or
or
add
test
lods
mov
cmp
sub
stc
xor
ss
dec
sti
ficompl
adc
mov
loopne
and
inc
arpl
les
xchg
xchg
mov
cmp
jbe
mov
mov
jo
out
or
xlat
nop
fsubrs
pop
xor
aad
gs
lods
filds
dec
jl
mov
push
out
adc
xlat
jae
pop
xor
jecxz
stc
rol
push
and
pop
push
jnp
aas
xlat
or
pop
lcall
insb
dec
inc
fistpl
sbb
xchg
inc
inc
jne
push
aas
in
mov
or
movsl
adc
outsb
lock
shr
aaa
testb
std
jbe
aam
push
fcmove
mov
sahf
insb
mov
dec
fsubs
cld
les
scas
lret
sbb
out
mov
mov
lock
jl
das
push
mov
insl
sub
sbb
or
fnstenv
insl
shll
dec
mov
pop
ljmp
dec
lods
icebp
lods
in
mov
sti
cmp
and
inc
adc
pop
ror
add
pop
add
insb
add
fstl
pop
xchg
clc
out
nop
jmp
sbb
mov
inc
stos
jae
sbb
xlat
sub
xchg
sbb
fs
push
cmp
das
stos
or
mov
xor
cmp
inc
xchg
nop
dec
cld
fisubs
or
enter
sbb
push
test
icebp
add
pop
ljmp
rclb
mov
lock
mov
mov
inc
or
pop
insb
ja
leave
bound
pop
pop
mov
sbb
mov
mov
dec
insb
adc
jne
jg
mov
lock
daa
jbe
xchg
lds
jmp
mov
mov
out
cmp
sub
mov
clc
addr16
xchg
push
mov
push
in
in
repnz
add
and
sti
in
jmp
mov
ret
insb
pop
out
xor
std
jae
mov
gs
std
call
adcb
fiaddl
cmc
sub
cmp
int3
adc
dec
jno
adc
fs
repnz
push
leave
insb
jns
hlt
add
jle
pop
dec
bound
pop
and
sbb
dec
inc
lcall
dec
add
test
fidivs
leave
lds
jge
rolb
dec
and
call
push
movsb
mov
push
jp
sbb
sub
jge
sub
scas
push
in
aaa
sub
xchg
cmp
les
jno
add
out
dec
aad
rorl
add
mov
jo
xor
scas
aas
xchg
xchg
push
lcall
push
mov
cwtl
inc
and
cmpsb
lcall
enter
daa
xlat
push
test
pop
mov
dec
sub
aad
cmp
stc
test
lea
and
mov
clc
lahf
iret
rcrb
push
adc
aad
incb
clc
pushf
cmp
jns
daa
pop
xchg
inc
add
or
inc
lcall
xor
enter
aam
outsb
or
loopne
xor
stos
mov
dec
test
ljmp
and
rolb
int
leave
lods
sub
dec
xchg
pop
mov
sbb
shl
arpl
stc
mov
jns
jns
adc
jg
dec
dec
loop
adc
mov
dec
cli
adc
cmc
and
fdivrs
fsqrt
push
insl
xlat
xor
dec
popf
cmp
mov
pop
into
cmc
int
xor
into
test
imul
lods
xor
gs
data16
mov
or
shrb
fidivl
in
mov
pushf
pop
xor
cmpsl
mov
xchg
lds
pop
aaa
or
inc
jbe
flds
or
les
aam
xchg
dec
add
adc
xlat
clc
and
pop
pop
jne
adc
add
pushf
xchg
dec
loopne
js
cs
aad
xchg
out
mov
pop
dec
fildl
jno
mov
test
bnd
mov
jecxz
in
add
xor
cmp
fsincos
je
mov
xchg
mov
dec
push
mov
fcmovnb
pop
cmpsb
pop
ret
inc
push
inc
mov
nop
xchg
lahf
aas
cmp
mov
icebp
inc
and
stc
in
mov
and
testb
and
mov
mov
and
sahf
lret
mov
scas
mov
dec
lret
insb
clc
das
das
jmp
rolb
cmpl
fwait
pop
leave
ret
call
or
push
dec
shl
insb
cmpsl
data16
cwtl
shlb
push
sub
push
lds
dec
test
mov
fists
js
jo
movsl
test
adc
push
sahf
icebp
mov
cmp
xchg
clc
sub
ficompl
push
dec
roll
sub
pop
popf
lahf
push
out
cmp
aad
pop
hlt
push
setae
cmp
xor
dec
pop
mov
push
mov
dec
lahf
roll
xchg
or
lahf
inc
js,pn
or
cmpsb
cmp
dec
ja
add
ja
call
bound
adc
jbe
in
loop
xchg
aad
std
mov
popf
mov
lcall
jp
jg
mov
or
mov
dec
test
dec
dec
inc
push
mov
xor
push
test
xchg
cwtl
loop
jmp
outsb
xchg
jle
lods
adcb
lods
xchg
sub
mov
fsubl
xor
and
aam
insb
push
stos
mov
jle
popf
pop
in
mov
xor
ret
pop
pop
push
fstpt
jae
jns
push
das
in
popf
and
cmpl
mov
setno
sbb
jle
imul
add
push
xchg
aam
adc
jnp
iret
mov
dec
leave
jecxz
xor
es
inc
mov
jns
sbb
push
jle
rorb
lock
xor
nop
int3
dec
xlat
repnz
pop
ret
adc
lds
dec
aam
push
and
cmp
sub
push
leave
in
jbe
mov
stos
sbb
mov
cmp
cli
mov
test
xchg
dec
inc
mov
dec
xor
pop
sub
scas
push
vrsqrtss
push
push
adc
sub
sbb
pop
dec
enter
daa
xlat
inc
push
pusha
inc
loope
push
loope
xchg
sub
in
psrad
mov
mov
shrl
inc
lahf
out
fwait
loope
movsb
xor
sbb
loope
sbb
xor
ret
lcall
xchg
js
xchg
pop
dec
mov
xchg
push
xor
fdivl
aaa
sub
add
adc
or
mov
mov
scas
and
add
and
and
push
push
es
stos
sub
addr16
ds
mov
push
out
mov
add
popa
sahf
sbb
push
test
xor
jg
sbb
loop
repnz
stc
pop
fsubs
inc
lret
jns
std
mov
and
fdivs
sbb
mov
sub
inc
ds
in
pop
cmp
sbb
orb
cmc
xchg
test
outsl
jbe
push
adc
hlt
gs
xchg
adc
hlt
and
pop
jb
lods
xchg
cli
mov
adc
sub
outsb
js
je
mov
or
jg
cmp
outsb
pop
fwait
ljmp
jle
pop
push
xchg
or
fnstcw
xlat
fcmovb
mov
mov
xchg
adc
pop
sbb
ja
jae
aaa
push
dec
pop
adc
jge
sub
dec
pushf
cmp
and
cs
jno
mov
call
dec
cmp
arpl
mov
xorl
jecxz
and
fimuls
push
xor
cmp
cmp
cmp
lock
fcomi
pop
pusha
pop
gs
stos
inc
fcoml
stos
int3
mov
and
std
mov
test
push
and
aas
add
jo
pusha
not
jno
std
les
aad
cltd
dec
mov
pop
leave
mov
cli
roll
sti
aad
mov
cmp
mov
push
test
push
jno
das
push
and
rcl
lcall
data16
je
ja
lds
fists
inc
insl
mov
mov
push
ljmp
iret
lods
or
mov
push
or
jbe
pop
int
scas
jb
cltd
cmpsl
movsb
mov
mov
add
popa
imul
gs
dec
sbb
aad
pop
dec
in
imulb
popf
cmp
xchg
cmpsl
mov
inc
pslld
dec
xor
jl
xor
cmp
mov
push
iret
xchg
dec
push
shrl
loope
xchg
loope
loop
mov
sbb
sub
out
xor
add
xchg
into
jmp
push
xor
jecxz
in
or
mov
out
mov
push
fstpt
ja
int
jp
stos
and
mov
shlb
push
inc
mov
gs
out
in
movsb
xchg
imul
xchg
cmp
in
out
xchg
shrb
stos
jge
addr16
fmull
and
mov
dec
jnp
xchg
pop
jle
push
sbb
div
ja
std
inc
sbb
in
sbb
adc
jmp
inc
rorb
push
repnz
stos
popf
dec
imul
fisubrl
sbb
sbb
sbbb
and
scas
xchg
lret
mov
adc
cmpsl
ror
test
in
lods
enter
addr16
lcall
inc
mov
into
out
adc
inc
std
cmp
pushl
lret
and
int3
aaa
dec
pop
mov
fidivs
movsb
mov
mov
scas
mov
cmp
out
leave
out
push
sbb
jge
mov
stc
aaa
cmpsl
and
dec
rcrl
adc
mov
mov
push
lret
mov
mov
jo
cmp
scas
std
sti
adcl
jbe
push
dec
jge
inc
aas
pop
jmp
xchg
scas
and
daa
aad
jle
inc
mov
adc
ljmp
fdivrs
gs
or
subb
and
xor
push
rcrb
cmpb
or
xchg
sbb
mov
sbb
push
mov
iret
mov
push
and
mov
mov
jbe
mov
mov
pop
in
push
pop
daa
out
int
enter
xchg
pop
mov
dec
jp
adc
inc
mov
mov
in
mov
jge
sbbb
mov
loop
or
stc
adc
add
dec
shrb
arpl
iret
cmp
xor
icebp
cli
je
sub
mov
dec
pop
or
and
into
mov
inc
cmpsb
xor
push
outsl
push
cmp
adc
inc
imul
aam
add
adc
lods
outsb
push
push
mov
insl
mov
and
inc
mov
mov
ja
jne
out
mov
gs
sbb
loopne
dec
cmp
daa
jno
pushf
je
fnstenv
jl
lds
ja
shll
leave
sbb
mov
pop
xlat
jbe
mov
ret
cmp
adc
sub
xchg
inc
cs
daa
aad
and
nop
ds
and
cltd
icebp
fidivl
dec
cli
dec
xchg
dec
cltd
je
scas
popf
jecxz
mov
mov
call
mov
lcall
sub
pop
scas
pop
or
inc
arpl
test
aas
rcll
mov
pop
jo
and
in
sarl
mov
std
imul
cwtl
adc
stos
mov
shr
jmp
inc
leave
push
mov
lret
mov
das
in
pop
test
sub
push
aam
jno
ret
push
les
bound
jno
sbb
ljmp
pop
lods
xor
jae
std
mov
pop
int3
and
sbb
pop
inc
cltd
faddp
push
mov
xor
and
out
mov
adc
mov
mov
shll
sahf
stos
inc
ja
out
add
push
aad
xchg
sqrtps
xor
sub
xchg
pop
sbb
jne
mov
pop
pop
rorl
imull
cld
cmp
dec
aad
xchg
inc
pop
out
or
fidivrs
push
xchg
loopne
add
lods
push
decl
push
lock
repz
in
addl
jae
xlat
mov
inc
loop
xor
mov
cld
jp
mov
mov
dec
or
mov
xlat
xor
jne
sar
mov
cmpb
pop
adcl
arpl
xchg
add
push
or
inc
out
lock
cmpsb
inc
mov
stos
sti
sub
pop
int
insb
sub
lcall
lea
outsb
in
xchg
in
cwtl
cwtl
adc
ret
cmp
rcr
lret
mov
gs
js
jb
jb
iret
mov
jl
sbb
adcl
push
xchg
imul
scas
stc
aas
add
movl
repnz
outsl
add
shll
hlt
in
xlat
arpl
inc
mov
sub
mov
jl
or
lods
add
mov
and
repnz
mov
xor
lds
ljmp
nop
ret
mov
aaa
jns
addr16
jbe
cmp
jge
mov
sbb
sub
cmpb
int
jno
dec
fnstsw
int3
dec
and
add
scas
sbb
and
minps
scas
fdivl
stos
push
adc
xchg
test
pop
jp
inc
into
dec
cmpsb
and
jns
jnp
push
enter
daa
aam
inc
push
lret
daa
loope
ficoms
push
mov
testb
pop
cmp
lahf
sub
push
or
sbbb
or
add
aad
xor
cmp
test
pop
pushf
enter
cmc
sbb
lcall
inc
fmul
in
xor
cmp
outsb
xor
mov
xchg
mov
mov
adcb
mov
icebp
mov
repz
and
push
pop
outsb
xchg
int
popf
pop
sub
pop
cmp
mov
shll
pop
sbb
xor
sahf
bound
aam
test
call
jg
mov
jmp
enter
push
rolb
add
cmpsb
pop
stos
cmp
in
out
divl
cld
or
cmp
push
xchg
or
in
into
xchg
pop
xor
fadd
outsl
xor
mov
sub
int3
imul
data16
adc
arpl
sub
lods
push
sub
and
add
mov
movsb
sub
sarl
ja
sti
xchg
mov
sbb
loopne
sub
mov
int
cmpsl
popa
jp
rclb
repz
xor
xchg
xchg
idivl
cmp
fcmove
xlat
mov
cld
pop
jbe
pop
adc
xlat
call
jmp
enter
xor
push
nop
sbb
jb
and
dec
or
sub
lret
popa
dec
cmp
jp
lcall
cmp
dec
subl
cmpsl
sbbb
inc
inc
ljmp
aas
pusha
sub
mov
push
cld
xchg
and
fdivp
rorl
test
notb
mov
cwtl
cmp
push
mov
xor
mov
test
pusha
cld
jo
mov
mov
orb
mov
xchg
push
sub
std
mov
ret
xchg
or
es
xchg
mov
lds
icebp
jbe
popa
dec
aaa
test
mov
xchg
adc
cmp
aaa
add
js
cltd
adc
shl
pusha
cmpsl
cltd
push
out
je
scas
add
or
andl
pop
sahf
add
stos
das
pushf
and
arpl
adc
mov
mov
xor
jae
or
sub
push
sahf
mov
pop
pop
in
aam
xchg
test
fcomp
xchg
jo
enter
repz
or
cmp
push
xor
mov
add
adc
jmp
dec
dec
bound
ljmp
sbb
bound
inc
adc
mov
lret
xor
ja
loopne
jp
sbb
mov
movsb
sahf
mov
xchg
adc
dec
clc
cmpl
mov
out
mov
jae
jmp
iret
into
sbb
pop
orl
push
push
or
sub
stos
outsb
aad
and
incl
cwtl
int3
test
xor
jle
movsb
test
add
nop
pusha
xor
fcmovnu
and
mov
cmp
pop
ret
sub
out
jae
aas
ja
js
mov
mov
push
xchg
xor
iret
jecxz
xchg
sbbl
inc
imul
jbe
pop
test
push
addr16
push
adc
cmp
and
dec
dec
push
hlt
xor
arpl
sub
mov
imul
or
ss
sti
ja
or
lcall
or
xor
fdivrp
xchg
lds
xlat
mov
das
fdivrs
cmp
add
movsb
fidivs
sub
jge
lods
mov
lcall
cmp
mov
jl
mov
dec
xchg
jp
push
xchg
movsb
add
push
and
out
in
aas
push
push
loop
jg
pop
ljmp
bound
ja
shll
push
popl
loope
cmp
jmp
sbb
movsl
out
jp
cli
push
mov
fnstsw
scas
add
xorl
dec
mov
jmp
js
add
add
mov
push
aaa
pop
cwtl
fdivl
or
daa
pop
outsb
xchg
nop
mov
popf
xchg
in
fcomip
push
mov
sbb
jnp
mov
scas
or
ja
movb
sub
pop
push
lock
adc
pop
mov
dec
std
sarl
push
mov
push
in
sbb
into
xor
add
out
adcb
jg
xchg
jmp
stc
jg
inc
fs
lock
cli
push
ss
push
mov
test
outsl
div
mov
cli
fucompp
stos
xor
sarb
sub
into
imul
outsl
adc
xor
adc
dec
sub
mov
mov
lods
cmp
aam
push
sbb
fwait
sub
fs
mov
dec
xchg
test
inc
push
mov
rcll
or
loopne
and
pop
mov
scas
inc
ret
sbb
fistl
repz
pop
xor
sbb
sub
outsl
xlat
hlt
add
pop
sub
jl
sub
movsb
jnp
add
cs
cwtl
into
aad
inc
xchg
nop
hlt
in
fmuls
scas
mov
dec
test
pcmpeqb
cli
js
fisubl
aas
inc
push
lea
add
mov
je
add
lahf
test
xor
pop
dec
sbb
ljmp
inc
pusha
mov
int
in
and
sub
rcrl
lods
negb
mov
or
mov
jg
sar
fwait
adc
lret
dec
cmp
mov
scas
mov
pop
divb
dec
and
aam
adc
ret
and
and
insl
push
leave
fisttpl
xchg
xor
fs
popa
pop
les
mov
stos
insl
sahf
and
inc
call
pop
add
leave
mov
test
pusha
xor
stos
nop
sbb
sub
clc
push
subb
xbegin
shll
push
pop
dec
lret
push
test
out
jle
xchg
jl
add
pop
jb
adc
mov
mov
addb
xor
in
mulb
pusha
shrb
dec
cmp
mov
xchg
jae
dec
mov
out
or
data16
xlat
sbb
repz
mov
jecxz
xchg
inc
mov
adc
add
cmpsl
je
xchg
adc
mov
mov
mov
xchg
push
ja
xor
jp
arpl
mov
and
mov
je
fildl
and
dec
stc
push
out
adcb
jmp
lcall
out
add
sub
pushf
test
stos
loope
sub
inc
push
xor
xchg
jnp
es
sarl
mov
or
call
filds
lods
ret
repnz
cli
aaa
dec
inc
loope
fnsave
or
clc
pop
popf
rclb
inc
pop
std
push
xchg
xchg
mov
and
xchg
fdivrs
adc
cli
gs
scas
mov
dec
xor
bound
push
repnz
pop
leave
mov
inc
dec
arpl
pop
inc
rcrl
push
jp
mov
add
push
pop
sbb
add
lds
leave
mov
mov
add
sub
movsb
push
cmpsl
push
add
mov
jge
xchg
aaa
in
lods
cmp
add
jno
xor
xor
in
push
push
je
int
pop
stos
xchg
jo
fucom
scas
lcall
test
lods
outsl
fiadds
sbb
cmpsb
sub
lret
enter
daa
rolb
and
push
adc
push
mov
cmpb
test
xor
out
and
lock
call
test
xor
xchg
stos
or
dec
pop
ljmp
pop
inc
sub
lcall
push
fcompl
jle
sub
and
clc
jmp
sub
js
test
pop
push
inc
mov
mov
scas
push
bound
int
hlt
sub
enter
cmpsl
lret
lret
pushf
outsl
mov
insb
fcompl
inc
sub
test
xorb
jg
jb
loop
sbbb
stos
call
adc
decb
ss
pop
cmp
arpl
xor
dec
insl
cli
or
lods
hlt
cmp
xlat
lahf
or
cmpsb
into
dec
jl
cmc
mov
and
outsl
repnz
cmp
into
push
imul
xchg
add
xchg
pushw
dec
lods
and
adc
mov
imull
fwait
enter
insl
mov
mov
stos
inc
in
mov
loopne
sub
shr
imul
jl
out
pop
repz
mov
sbb
aaa
sbb
arpl
cli
xlat
xor
pop
fsubl
xor
test
pushf
jmp
jl
jno,pn
push
aad
push
or
jb
jbe
dec
sti
orl
pop
mov
jmp
into
jae
push
fsubrp
cmp
cmp
pop
and
ljmp
pop
cmpl
cmp
icebp
and
int
shrl
jg
pusha
or
cwtl
mov
jo
ret
adc
jp
mov
push
inc
mov
repz
mov
std
mov
daa
mov
inc
cmp
jb
icebp
das
mov
cld
shlb
or
xchg
loope
ret
mov
add
jmp
inc
insl
cmp
scas
xchg
cmpsl
rcr
adc
xlat
or
jne
lods
jae
fistpll
int
sub
mov
jp
add
cli
dec
outsl
cltd
sub
test
pop
adc
fiaddl
std
xor
arpl
pop
sarl
data16
sub
dec
xchg
ret
inc
mov
movd
or
int
xor
and
lret
xchg
les
mov
faddl
scas
ret
and
or
push
sbbl
movsb
enter
mov
jmp
jae
inc
dec
jns
jl
xor
pop
xchg
pusha
sbb
int
or
inc
fdivrp
ja
add
jp
pop
lea
jno
rorb
mov
movsb
jno
test
fldl
mov
cmpsl
jmp
gs
jmp
out
mov
xchg
or
movntq
pop
iret
push
insb
outsb
mov
jnp
loopne
jle
ret
adc
pop
pusha
imul
ret
mov
inc
in
xchg
adc
push
lahf
push
fmulp
popf
out
cmpsl
mov
rcll
repnz
jg
sbb
iret
mov
scas
and
push
cmc
mov
fwait
iret
gs
and
cmp
in
adc
arpl
inc
inc
fisttps
sbb
sbb
cmp
stc
jl
or
nop
push
add
inc
ror
jecxz
sub
push
fiadds
test
cmp
cmp
insl
adc
and
bound
loopne
out
cmc
sbb
or
pop
stc
jge
inc
cmp
aaa
mov
sub
jno
fidivrs
dec
outsl
and
push
push
mov
jo
cmp
scas
jns
xor
xchg
ljmp
js
inc
inc
jnp
jns
lods
inc
mov
xor
jge
mov
sub
rcrl
push
push
xor
sub
push
arpl
pop
std
lahf
ds
sti
pushf
movsl
hlt
in
popf
and
add
lahf
mov
mov
pop
das
or
fldt
into
stos
jae
adc
ficoml
orl
ret
push
in
in
leave
test
sub
aaa
in
adc
push
subl
mov
mov
or
jns
ja
xchg
cmp
int
jne
sub
fisubl
lret
ffreep
insb
fs
mov
push
sub
cmp
jae,pn
mov
push
loop
sub
in
stc
into
fs
and
sbb
outsl
xlat
nop
cmp
push
in
divl
outsb
cli
inc
loopne
xor
pop
cltd
cmp
pop
nop
or
push
pop
xor
movq
inc
aaa
adc
shll
lret
adc
add
and
lods
or
mov
test
mov
and
sti
mov
and
push
scas
xchg
ss
imul
and
in
dec
jg
icebp
push
cwtl
repz
and
jnp
pop
cmp
or
adc
out
les
cld
enter
lods
aad
bnd
stos
in
dec
adc
in
loop
jb
shll
mov
movb
iret
adc
call
mov
push
aaa
xor
mov
pop
xchg
lods
xchg
inc
jg
stc
inc
xor
sarl
orb
cmp
and
ret
jp
sti
inc
xor
pop
ss
std
pop
cmp
cwtl
insl
xchg
fbstp
lods
inc
push
icebp
sub
test
sbb
mov
ss
int
pop
das
imul
test
add
ret
inc
jle
outsb
sbb
insl
and
fisttpll
pop
mov
ljmp
xchg
lods
fisubrs
mov
lock
andl
xchg
gs
cltd
and
add
cltd
pop
test
lds
mov
popf
and
cwtl
loop
and
and
mov
arpl
pushf
scas
push
rcll
dec
iret
pop
lahf
xlat
repnz
cld
mov
add
or
inc
or
bswap
cmc
xorl
jo
xchg
xor
mov
mov
data16
dec
or
test
and
clc
mov
ret
inc
mov
xor
sbb
jl
add
sbbl
arpl
jns
sahf
int3
in
mov
xchg
scas
orb
adc
mov
cld
adc
pop
push
out
mov
test
mov
loop
jno
mov
mov
mov
sarb
daa
pop
xchg
mov
out
xchg
lahf
xchg
xor
dec
addl
fsubp
cs
sub
xchg
sbb
stos
nop
xchg
jae
jl
fldenv
jnp
pop
hlt
jle
inc
cmp
sbb
popa
pusha
add
rcr
inc
xchg
ret
pop
pop
push
ljmp
sarl
popf
push
sarb
adc
fstp
call
or
ljmp
scas
test
jmp
sbb
pop
repnz
lods
jmp
test
stc
mov
or
jns
jae
js
pop
or
jmp
jno
jns
push
mov
mov
fdivrl
movsb
cmpb
jbe
test
mov
lret
adc
aaa
bound
cmp
imul
idivl
aas
dec
ficomps
push
xor
jnp
xor
pop
lret
and
xor
fs
or
cmpsb
das
dec
add
enter
daa
shlb
and
adc
insb
cmp
lods
in
xorb
and
outsl
xchg
lahf
test
mov
sbb
loop
pop
test
xchg
mov
jmp
pop
ret
lcall
mov
sub
add
outsb
mov
lcall
cld
sub
sub
mov
fmul
and
jno
cmp
iret
sub
mov
out
lret
imul
push
xor
aaa
negl
icebp
adc
push
xor
lock
movsb
in
arpl
dec
adc
shlb
mov
inc
cmp
fldenv
divl
stc
xchg
cli
jae
shll
xor
cmp
lods
pop
or
xchg
dec
adc
cmc
mov
jg
mov
loop
je
jbe
ret
adc
cmc
in
dec
push
xchg
data16
lods
icebp
xor
out
xor
sub
test
dec
sti
push
cmpsb
ss
sub
dec
gs
jne
pop
adc
inc
sti
mov
flds
push
arpl
or
xchg
mov
push
xchg
mov
into
pop
inc
out
push
adc
jmp
out
dec
inc
stc
cs
ja
aad
fcomip
nop
test
dec
je
push
jb
cwtl
adc
xor
je
arpl
jecxz
or
dec
inc
dec
lea
lock
call
aaa
mov
and
adc
pop
aaa
bound
push
incb
aas
fsubl
aam
repnz
mov
rorl
shl
mov
cmp
sub
pushf
mov
add
jle
sbb
ret
lret
xchg
test
mov
push
push
mov
nop
xchg
lock
mov
dec
mov
ror
jns
sub
jnp
ret
rcl
jb
icebp
insl
or
dec
scas
mov
mov
popa
movsb
inc
pop
lods
dec
stc
sahf
mov
adc
shll
sbb
mov
and
mov
test
sbb
mov
and
repz
xchg
fisttpll
adc
movl
insb
sbb
shll
iret
pop
dec
sbb
stos
jmp
inc
out
out
push
mov
push
ljmp
sub
push
xor
dec
inc
xor
xchg
addr16
pop
xchg
mov
jo
cwtl
test
mov
xchg
dec
dec
xchg
scas
cmp
or
call
fcompl
rclb
add
out
mov
xorb
dec
aam
xchg
das
data16
fdivrl
js
jnp
mov
bnd
aaa
xor
jno
mov
insb
leave
mov
push
mov
dec
test
aam
and
scas
mov
inc
dec
out
pop
jne
xchg
pop
mov
jmp
sti
add
add
mov
inc
sub
sarl
add
stos
cmp
mov
mov
mov
jnp
lahf
outsb
jle
mov
in
andb
jne
fistps
adc
inc
add
push
test
cmpsl
popf
xor
push
sbb
push
lods
ficompl
jae
sbb
out
dec
imul
mov
push
cmpl
repz
ror
filds
repnz
leave
and
std
hlt
pop
sub
inc
lret
or
hlt
lcall
mov
scas
add
fwait
int3
mov
test
mov
pop
rcrb
mov
outsl
cmp
pop
movsb
or
data16
mov
outsl
or
xchg
sti
cmp
xchg
fwait
xor
dec
dec
fadd
push
sbb
and
jo
xor
scas
aaa
cltd
notl
ss
push
in
inc
cltd
cmp
cmpsb
mov
sbb
enter
daa
iret
into
out
mull
sub
jo
cmp
arpl
movsl
add
and
and
subb
dec
sbb
subl
push
push
loopne
pop
xor
gs
pop
add
push
xchg
pushf
inc
fcompl
push
push
jecxz
subl
xlat
adc
or
mov
sub
mov
in
and
popf
sub
sub
mov
lret
lahf
rcrl
mov
aam
ds
xchg
sub
add
icebp
jg
sbb
loop
int
stc
pop
adcl
push
arpl
mov
test
int3
jb
div
push
aam
cmpsb
cmpsb
sub
sub
mov
mov
mov
cmc
add
leave
adc
adc
das
imul
popf
lret
pusha
cwtl
lods
fcom
aaa
mov
insl
loopne
scas
xor
sub
sub
add
stc
push
jl
add
decb
fisubs
shlb
das
faddl
push
popa
xor
mov
test
repz
and
sbb
adc
in
lock
adc
cmp
jmp
dec
ucomiss
xor
nop
pusha
sub
dec
rcll
jb
js
dec
pusha
andb
test
jecxz
push
push
dec
sub
popf
mov
call
mov
or
andl
lret
aas
int3
cmp
or
int
inc
push
iret
pop
mov
test
stos
xchg
rcrl
mov
std
push
dec
les
add
mov
fndisi(8087
dec
cld
inc
xchg
mov
add
leave
mov
outsl
jmp
xlat
dec
inc
lock
rcrb
mov
cs
pusha
jae
es
add
in
testb
outsl
cmpsl
into
out
mov
xor
adc
loope
mov
xchg
lock
xlat
out
pushf
add
push
mov
sub
add
jmp
push
mov
sbb
cmpsl
mov
xchg
and
add
sarl
xor
stos
fcmovbe
or
push
test
negl
jnp
out
or
repnz
leave
stc
mov
insb
cs
xlat
mov
sub
dec
xchg
cld
or
and
arpl
pop
add
dec
xchg
inc
xor
std
addr16
jns
int3
pmulhuw
inc
pop
xchg
dec
and
xchg
lock
mov
jb
lcall
mov
mov
rol
dec
addr16
jne
cld
jge
mov
xchg
xor
movsl
jmp
gs
and
xchg
xor
out
sub
mov
mov
stos
lods
xchg
mov
mov
ds
pop
movsl
aaa
jle
push
repnz
ja
pusha
cmp
mov
jle
pop
aam
inc
or
fsubr
push
inc
dec
outsl
popf
pop
mov
fcoms
mov
mov
xor
ret
sbb
mov
pop
scas
dec
jp
lret
adc
or
repnz
adc
hlt
cmpsl
jae
arpl
imul
outsl
test
jo
movsb
testl
movsb
ds
pop
xlat
inc
js
sub
shlb
mov
add
dec
cmp
clc
in
inc
mov
jbe
xchg
sarl
xor
inc
addb
sarl
cmp
mov
jl
push
jp
mov
xchg
or
xor
popa
scas
push
in
jl
add
cs
mov
jnp
cmpsb
xor
icebp
sub
cmpsb
mov
xchg
push
in
mul
fcompl
ljmp
ds
or
and
sbbl
test
cmpb
sbb
adc
js
push
test
sbbb
fnstcw
test
inc
aad
lcall
out
fmul
nop
xor
shl
xor
xlat
pop
adc
in
imul
sbb
sbb
ret
push
outsb
pushf
in
or
sub
or
pop
arpl
shll
mov
sbb
push
out
sahf
xor
dec
test
inc
roll
xchg
or
inc
dec
sub
adc
test
jne
mov
cmp
dec
pop
div
scas
mov
cmp
popf
dec
hlt
cmp
aam
or
mov
into
fsub
and
xor
push
add
sbb
mov
mov
sub
mov
add
data16
lret
lods
mov
jae
out
mov
sub
mov
in
fs
jo
ds
loopne
adc
and
fyl2x
pusha
mov
adc
repz
push
lea
lock
in
cmp
jmp
das
jbe
pop
test
repz
dec
inc
pushf
xchg
jb
jmp
adc
cs
iret
stos
aad
in
nop
cmp
xchg
dec
xor
pop
mov
xlat
jno
je
clc
jno
and
xchg
call
xor
jecxz
xorl
in
fistpl
test
pop
inc
xorl
sbb
popa
mov
pusha
mov
and
fwait
into
shr
bound
imul
sbb
std
cld
and
cwtl
sahf
mov
mov
add
repz
mov
inc
cld
jb
in
jae
xor
icebp
mov
mov
outsl
xchg
lock
das
push
push
mov
sub
fs
out
push
jno
idivl
movsb
dec
movsb
jecxz
cmpsl
int
icebp
ljmp
xor
jp
mov
lea
mulb
negb
add
jno
pop
jbe
test
mov
fistl
mov
fstpl
out
xchg
pop
pop
push
sbb
inc
test
cmpsl
stos
leave
lea
mov
mov
push
shlb
iret
xor
scas
or
pop
sysenter
adcb
leave
ds
xchg
cs
fidivs
imul
dec
jp
and
pop
sbb
sar
push
push
push
xor
push
mov
loope
bound
pop
jecxz
pop
or
adc
fnstcw
mov
sub
jnp
jp
push
and
or
inc
mov
cltd
jnp
dec
ret
pushl
aaa
add
adc
sbb
xchg
add
sub
cmp
xchg
sbb
out
and
or
addr16
mov
pushf
insb
sbb
jnp
outsl
aas
jle
outsl
mov
rcrb
pusha
aad
jp
fnstsw
std
pop
or
loop
jae
negb
popf
orl
mov
iret
push
or
add
xchg
mov
mov
imul
sbb
adc
or
test
aaa
repnz
leave
adc
hlt
repnz
arpl
jg
or
ljmp
or
test
xchg
movb
pop
lds
add
or
and
adc
dec
jae
or
jne
cld
adc
aaa
lahf
fdivrs
loopne
mov
jmp
lahf
dec
sub
dec
xor
mov
scas
cmc
inc
add
fsubrs
mov
movsb
xchg
hlt
inc
mov
cmpsl
cmpsb
mov
data16
mov
xchg
push
push
out
loope
scas
cmp
push
xor
jmp
in
adc
and
cli
orb
sbb
decl
jnp
mov
fiaddl
pop
lods
bound
pop
jg
xlat
lcall
das
fdivl
aas
sub
xchg
in
outsb
out
leave
adc
mov
xchg
mov
imul
movsl
divb
ror
mov
int
arpl
sub
cwtl
push
lret
mov
mov
stc
sbb
test
sahf
xlat
ffreep
test
add
negl
jg
clc
fucom
flds
fs
sbb
les
ss
cmp
or
imull
push
cli
or
sub
je
add
movsl
jbe
insl
pop
into
mov
mov
jb
dec
mov
in
inc
imul
add
lods
cmpsb
iret
in
add
mov
fimull
mov
iret
mov
sti
pop
fldl
xchg
mov
xor
scas
pop
insl
cmp
fldcw
hlt
dec
les
pop
xor
pop
or
cmp
dec
mov
adc
mov
pushf
inc
jle
jmp
movsb
lods
cs
ljmp
push
les
dec
xchg
inc
mov
shr
dec
dec
pop
dec
je
rolb
push
push
lea
pop
call
mov
mov
orl
xor
popf
rclb
inc
fwait
cwtl
jg
sahf
fs
mov
pop
mov
mov
imulb
sti
fdivr
mov
xchg
jns
ss
mov
cld
popf
lret
loop
inc
mov
in
add
cmp
das
in
jecxz
inc
cmpsl
test
aam
xlat
sub
jle
std
es
jne
rcl
dec
lahf
loop
cmpsl
int3
cmp
push
mov
mov
adc
xchg
cld
adc
adc
hlt
sub
test
push
cld
mov
dec
adc
cmp
out
sarb
xchg
sahf
cmc
sbb
in
shrl
pop
dec
loop
stos
mov
mov
mov
cmovns
ret
xor
or
lret
das
loope
fsubrs
cmp
loope
test
out
mov
dec
insl
ljmp
fucom
fwait
dec
push
rolb
test
push
incl
rcrl
jns
mov
jmp
iret
dec
mov
jne
mov
call
loop
jp
shll
mov
sti
repz
sahf
xor
jne
mov
jo
fs
mov
mov
jmp
pop
and
addl
out
sbb
sub
jle
aad
sub
fildll
iret
dec
push
insb
test
jnp
cld
jne
movsl
mov
mov
jo
icebp
test
pop
inc
sti
lea
pop
jae
push
je
int
movsl
popf
stos
inc
fwait
mov
push
imul
xchg
loop
pop
sbb
rorl
scas
adc
rcll
xor
iret
inc
ret
fmul
insl
leave
mov
push
arpl
and
push
je
xor
mov
insl
add
fcompl
xor
fildll
stos
sbbl
mov
and
mull
cmp
xor
pop
mov
dec
push
add
pop
cmp
mov
xor
pop
popa
test
adc
jno
inc
je
xor
dec
lcall
xor
out
sti
scas
aam
jge
stos
mov
test
outsl
xor
inc
inc
les
cmpsb
cmp
out
mov
int3
enter
daa
int3
cmp
cmc
loope
cmpsb
mov
cmp
push
mov
push
es
movsl
pop
hlt
mov
aaa
out
lahf
and
cmp
xor
sbb
popf
or
js
xchg
pop
mov
and
fsubl
adc
mov
lahf
outsb
dec
push
push
adc
lcall
mov
fcmovbe
mov
mov
jecxz
loopne
adc
je
pop
int
pop
add
and
inc
pop
xor
cltd
lret
or
pop
cmp
pusha
jg
popa
jl
sahf
jp
pop
test
and
jg
jmp
loop
out
mov
sbbb
fs
mov
adc
cmpsb
push
cmp
lds
imull
push
and
dec
repz
jmp
into
sahf
dec
popf
cmc
pop
mov
xor
in
adc
fninit
imul
sbb
data16
cmc
lods
lea
ret
cmp
out
inc
imulb
dec
out
mov
cmp
lods
mov
and
icebp
shl
add
pop
mov
pop
inc
inc
adc
repnz
cltd
call
xchg
scas
insl
lea
lds
pop
push
notb
pushf
jmp
or
or
adc
ret
clc
movsl
aad
jl
nop
icebp
lods
test
inc
into
jb
dec
inc
dec
lds
je
fmul
jecxz
repnz
push
lcall
and
and
in
xor
add
int3
js
pop
ret
rol
and
aas
pop
popa
dec
mov
into
imul
imulb
inc
std
dec
mov
adc
fidivl
lods
pop
push
icebp
pusha
ret
enter
push
sahf
out
mov
jecxz
sub
mov
das
les
rclb
xchg
sub
aam
sahf
or
or
insb
cmp
and
lcall
ljmp
pop
lods
cmc
jle
mov
lahf
xchg
fwait
inc
int
test
mov
add
cltd
int
aam
or
cs
lcall
mov
clc
mov
les
sbb
xor
ret
inc
imul
stos
cmpsl
push
sub
lret
insl
jmp
push
mov
push
inc
pusha
xor
in
or
add
push
popa
xchg
mov
jne
mov
test
aam
xchg
sbb
testb
lret
xlat
daa
fwait
js
pop
push
dec
call
xchg
add
xchg
bound
pop
push
in
xchg
pop
xchg
cmp
xor
adc
mov
mov
into
idivl
push
loopne
mov
xchg
mov
or
and
ds
mov
push
dec
out
fwait
aam
xchg
test
cmpb
rcr
scas
out
mov
add
adc
sbb
push
fsincos
and
lahf
inc
insb
lock
jns
dec
lret
jle
std
and
cmp
or
sub
fistps
sub
rolb
or
test
cs
lods
std
insb
push
nop
lret
jb
rcrl
mov
dec
add
cmpsb
xchg
cmp
popf
imul
rclb
loopne
adc
sti
iret
lahf
sarb
sub
leave
add
add
fstpt
pop
test
xchg
push
repz
or
cli
add
psrlq
push
je
adc
ret
xlat
adc
adc
daa
sbb
bound
sub
mov
jbe
jecxz
jge
jb
sbb
into
aaa
sbb
fisttps
pop
mov
pop
push
test
cmp
inc
push
cmpsl
scas
mov
fcoms
in
push
test
cmp
fiadds
into
loop
mov
cld
loop
xchg
push
ds
lret
push
push
cli
sahf
loope
ret
sub
mov
movsl
push
out
ljmp
pop
cltd
xorb
sbb
cs
ret
push
xor
add
inc
pop
pop
sti
and
js
inc
jb
std
add
lcall
sub
sub
or
sbb
shlb
testb
jl
mov
shlb
cs
int
xor
pop
mov
lret
mov
mov
xor
nop
aaa
aad
sbb
sub
sub
jecxz
loop
or
stc
aaa
inc
fsubs
fwait
adc
cmp
add
les
cmpb
in
mov
cli
jb
push
xor
jge
cmp
ret
push
or
into
into
xor
adc
stc
mov
cmp
imul
je
decw
lods
je
cmp
stos
push
pop
sub
aaa
frstor
movsl
pop
nop
sti
mov
cmp
gs
les
loopne
xchg
mov
stos
movsb
mov
pop
mov
loop
xor
repz
pop
sbb
add
xlat
in
test
sarl
adc
call
sbb
cli
mov
es
xchg
aad
pop
dec
nop
int3
stos
mov
inc
jb,pn
std
mov
je
dec
add
push
push
cmc
push
push
call
call
mov
jp
jbe
cmp
pop
lods
in
pop
data16
inc
test
jle
aas
negl
sbb
jge
adc
out
divb
adc
cwtl
iret
or
mov
gs
mov
aaa
push
mov
lret
rorb
lcall
lock
enter
insl
push
shl
push
and
jae
es
mov
fbld
xorb
mov
dec
xchg
pushf
cmpsl
lret
ljmp
dec
lods
pusha
xor
mov
ret
and
pop
test
push
mov
pop
cltd
add
addl
mov
clc
out
adc
xchg
sbb
dec
sbb
out
sbb
pop
mov
pop
cs
fmulp
push
xchg
mov
jmp
sysret
ret
dec
mov
gs
out
mov
js
fimull
xchg
fisubrl
repnz
lret
inc
addl
movsl
icebp
fwait
cmpsl
ficomps
add
mov
add
bound
dec
jns
xlat
gs
pop
inc
xchg
mov
jp
mov
gs
ja
ds
mov
popa
mov
movlps
mov
dec
repz
add
hlt
jmp
jp
dec
xchg
jl
push
jmp
repnz
andl
out
outsl
jge
call
mov
addr16
mov
and
adc
adc
fs
jle
xor
pusha
cmpsb
inc
xchg
fistpll
ret
jae
mov
dec
inc
cmp
sbb
out
push
push
fimuls
pop
mov
push
mov
aam
nop
int
sbb
cmp
jb
push
scas
xlat
aaa
inc
push
out
test
cmp
jecxz
jle
outsl
leave
ja
in
shl
in
arpl
mov
fimull
pop
stos
popl
dec
fisttpll
jo
push
add
out
int3
push
push
jmp
fidivs
call
mov
dec
int3
insl
cmp
pop
out
movsb
ret
push
jge
pop
jbe
in
jge
insb
pop
sbb
jp
jns
loop
and
mov
pop
push
mov
xor
popf
add
xchg
pop
push
push
push
pop
sub
add
sbb
mov
enter
daa
lret
push
adc
loope
add
sub
cmp
cmp
fdivrs
movsl
and
cltd
pop
lahf
bound
orb
mov
xor
cmc
inc
pop
and
bnd
xchg
cmp
push
lcall
lret
jecxz
sub
add
and
push
mov
ss
mov
push
mov
cmc
inc
xchg
lds
jp
pop
int
out
lahf
sub
mov
sti
lret
or
leave
test
mov
sahf
rclb
orb
jg
fisttps
stc
out
adc
adc
daa
pop
cmp
cmp
imull
in
xor
sub
cmp
adc
mov
mov
pop
xchg
push
scas
dec
outsl
ljmp
imul
aaa
data16
lods
pop
jno
mov
push
mov
sub
cmp
mov
adc
pop
sti
insb
clc
xor
cld
call
jecxz
jae
sbb
lret
inc
insl
xchg
add
les
xor
loop
xchg
xor
dec
sbb
cmp
inc
xlat
sub
xor
xor
pushf
inc
cltd
daa
jmp
jmp
cs
pop
aad
mov
jecxz
scas
inc
lcall
lahf
xchg
je
adc
jecxz
jle
pop
jle
lea
repnz
xor
mov
imul
sbb
fldt
adc
in
inc
xor
addr16
xchg
pushf
mov
cmp
xchg
and
stos
mov
and
jnp
hlt
push
lods
std
cwtl
jg
cwtl
mov
or
push
or
cld
push
aad
lret
das
ret
cmpsl
mov
inc
mov
ficoms
das
adc
sarb
test
daa
clc
ret
sub
es
into
insl
jne
adc
cmpsl
leave
add
test
lods
lret
mov
xor
test
repnz
pop
jb
and
xchg
es
cmp
movb
lret
js
fnsave
mov
jecxz
subl
pop
dec
sbb
stos
test
sub
inc
mov
movsb
push
test
pcmpgtd
xor
xor
mov
jnp
rorb
inc
push
test
pop
jo
jno
pop
dec
inc
push
in
or
inc
out
fwait
mov
addr16
out
insb
lcall
stos
fdivr
pop
jns
repz
mov
xchg
fcom
mov
in
ja
bound
into
pop
sbb
jp
mov
mov
iret
fnstcw
xchg
rorb
push
xchg
jne
or
mov
in
cld
out
pop
pushf
pushf
xchg
dec
xor
xchg
mov
sbb
out
mov
outsl
aad
sub
xlat
stos
in
loope
and
sub
mov
jle
pop
mov
dec
sbb
pusha
inc
jns
fistps
mov
divb
sahf
inc
inc
outsb
dec
jae
adc
arpl
pop
mov
fcmove
jo
xchg
out
xchg
sbb
sub
imul
scas
cmp
pop
push
sub
into
adc
pop
leave
repnz
jbe
push
ror
arpl
stos
and
or
popf
mov
or
cmpsb
add
dec
out
cmp
pop
ret
ficomps
dec
lds
mov
cld
data16
gs
lret
and
test
cwtl
movsb
movsb
dec
dec
dec
push
int3
pop
jbe
pop
sarb
sbb
call
adc
lods
mov
stos
jl
movsl
and
dec
push
outsl
push
fdivl
clc
sub
jno
cmc
push
and
outsl
test
sar
sub
scas
mov
push
mov
daa
leave
push
and
loope
mov
lods
xchg
cmp
loop
ja,pt
sbb
and
xchg
sbb
sbbb
xchg
add
pop
std
xor
not
out
jo
dec
ja
js
pop
jns
jnp
add
popf
adc
jge
hlt
outsb
jae
lds
sub
xchg
mov
mov
mov
or
or
arpl
int
xchg
cmp
xchg
jns
pop
mov
test
and
orb
push
sahf
arpl
fildl
lods
ficoms
and
jg
fs
cli
adcl
adc
cmp
idiv
push
push
mov
xor
cld
mov
xor
or
repz
inc
pop
mov
xor
adc
cmp
aad
sbbl
and
add
testl
mov
cmp
out
cli
mov
mov
jnp
test
sbb
pop
mov
loopne
cli
add
and
inc
sbbb
les
pop
repz
cmpsb
xchg
notl
sbb
jbe
push
sub
fnstsw
pushf
in
hlt
loope
fmuls
push
aad
dec
hlt
nop
and
dec
or
negl
je
sub
jecxz
sub
pop
push
sbb
xchg
scas
rol
mov
mov
subl
or
pop
lods
or
inc
mov
cmp
jmp
out
stos
aam
mov
xchg
aas
pop
shll
jmp
std
aas
rorb
jp
imul
dec
sub
sahf
sti
movsl
mov
push
mov
hlt
jne
movsl
lds
popa
cmp
lea
sub
arpl
mov
addr16
mov
fdivr
insl
pop
pop
rorb
cmpsb
xcrypt-ecb
cld
ljmp
push
lods
ss
pop
mov
mov
sub
xchg
mov
mov
jb
adc
sub
sahf
mov
xor
push
dec
lock
clc
rcrb
fldt
ror
push
daa
pop
imull
stos
je
imul
movsb
xchg
xchg
inc
xchg
pextrw
xor
mov
or
sarb
sti
mov
jle
leave
dec
inc
xlat
test
xchg
mov
cmp
cwtl
or
mov
out
push
xor
nop
roll
jae
cld
call
outsl
sbb
xorl
mov
out
pop
mov
aam
dec
ja
test
popf
mov
mov
mov
pop
inc
fisttpll
fsubrs
jne
cmp
out
cmp
and
jle
or
mov
out
out
xchg
popf
sub
push
mov
sub
fisubrl
sub
insb
xor
jecxz
xor
in
imul
fistpll
or
or
pop
and
xlat
inc
dec
arpl
jae
xchg
pop
out
inc
add
push
or
neg
xorb
ds
jbe
push
add
dec
push
je
xchg
lock
or
shrl
repnz
cltd
leave
gs
hlt
imul
or
push
jo
clc
or
add
std
int3
es
gs
icebp
int3
inc
fdivrp
xchg
lcall
xor
add
lods
and
cmp
xor
sub
pop
inc
movsb
jge
push
pop
sbb
lods
aaa
cmp
aaa
sub
and
fbld
dec
push
adcl
jo
adc
push
xor
test
fwait
jmp
inc
addb
in
dec
or
mov
jns
sbb
test
push
jmp
sub
repnz
jg
aad
lcall
and
pop
filds
push
das
xor
movsl
into
xor
mov
pop
jo
sbb
add
insb
pop
mov
mov
push
hlt
mov
push
sub
outsb
roll
rolb
or
dec
mov
fwait
lock
sbb
rclb
je
out
sub
in
pop
xor
lret
and
mov
call
sub
cld
xchg
ret
cmpb
jg
loop
loop
pushf
mov
pop
xchg
sbb
push
adc
loope
lret
cmp
mov
mov
sub
cli
or
jae
or
cmp
xchg
jle
into
sub
out
xor
leave
adc
adc
adc
jp
dec
adc
ror
add
push
push
data16
lcall
xchg
mov
mov
out
ret
xor
gs
xchg
pop
loopne
lret
or
mov
fnstcw
jo
les
repz
sbb
mov
cmp
test
cmp
adc
lret
pusha
pushf
xchg
and
jmp
out
mov
dec
mov
xchg
nop
pop
sbb
push
jb
inc
lahf
dec
mov
xchg
add
jg
fadd
pusha
xor
outsb
repz
call
das
lahf
cltd
mov
jne
inc
sbb
xchg
fisttpl
pop
sbb
push
inc
and
pop
fsubl
stos
orb
push
sub
rol
rcrb
jp
cmp
add
cwtl
add
insb
mov
mov
push
lret
or
push
scas
mov
outsb
xchg
lock
jle
inc
test
shlb
movsb
sub
jge
addb
ret
dec
sub
insl
inc
xor
out
cmpsl
ja
ljmp
mov
mov
and
and
lock
pop
mov
data16
jnp
test
mov
mov
fldcw
push
or
xbegin
mov
out
imul
clc
enter
mov
out
pop
adc
mov
push
hlt
out
pop
and
inc
push
push
lahf
repnz
outsb
sub
add
push
test
xor
dec
sub
lds
lock
or
pop
inc
fwait
xor
loop
fdivrs
add
or
pop
lcall
insl
dec
jns
sbb
mov
sub
mov
fstpl
jp
mov
leave
lods
stc
dec
pushf
push
add
int3
lahf
mov
sbb
out
pop
je
xchg
cmc
cld
push
jne
aaa
xchg
push
xor
orl
jmp
popf
ja
or
fbld
jae
stos
sarb
fisubrl
fidivrs
cmp
cmp
pop
sbb
fists
xor
push
adc
pop
lods
xorb
ds
pushf
into
add
mov
dec
sahf
and
xor
xchg
xchg
xchg
out
sbb
mov
imul
shrl
mov
inc
js
sbb
mov
ja
push
leave
fcoml
hlt
mov
and
mov
or
int3
popl
test
or
add
or
adc
pop
and
imul
gs
xorl
mov
pop
xchg
aas
cmp
sbb
movsb
arpl
shll
stos
jge
mov
sbb
push
aaa
sbb
add
jno
xor
dec
lds
push
xor
nop
stc
jo
aaa
fldt
lret
test
data16
inc
adc
and
enter
daa
movl
loope
xchg
ds
or
ds
mov
cwtl
lahf
mov
daa
push
sbb
std
add
inc
xor
cld
test
insb
mov
cmpl
sbb
mov
dec
push
pop
fdivl
push
sub
xchg
outsb
cmp
dec
shl
aad
push
cmpsb
push
mov
or
mov
push
out
sub
clts
addl
fstpt
sub
lods
ss
push
rcll
mov
sbb
dec
int3
negl
subl
cltd
jmp
jg
jmp
scas
stc
adc
fs
adc
cmp
cmp
insb
enter
xchg
outsl
cli
loopne,pt
xor
ds
lock
or
into
pop
into
or
jnp
xor
fwait
outsl
xchg
cs
iret
outsb
imul
test
push
mov
lods
adc
cmpsb
mov
sub
aad
push
fwait
sar
testl
pop
clc
lock
scas
adc
lods
jmp
fnstenv
pop
les
sub
dec
jno
xchg
jge
fistps
in
mov
xlat
call
push
ja
inc
or
inc
sub
cs
lret
aad
lret
cmp
dec
lret
push
jb
ret
sbb
ret
je
push
shl
dec
out
arpl
out
mov
gs
scas
dec
and
fcoms
jl
mov
add
test
inc
lds
inc
inc
mov
insb
mov
popa
pusha
inc
and
data16
rcll
push
ret
mov
sbb
mov
enter
add
icebp
xchg
or
cld
lahf
push
sub
jl
lea
cmovl
pop
adc
shlb
jle
sub
daa
aam
insb
test
fsub
or
mov
inc
dec
addl
in
ljmp
aad
or
pusha
mov
dec
out
and
mov
aam
lret
outsb
mov
loopne
mov
rol
into
in
cwtl
mov
test
lcall
pop
dec
lret
push
sub
push
mov
push
iret
rorl
xchg
lcall
lea
mov
test
enter
inc
xchg
and
cmp
or
and
inc
push
jnp
lock
daa
mov
add
hlt
mov
and
in
stos
inc
xchg
lds
out
mov
loop
mov
dec
fmul
ja
and
fs
out
mov
cmp
adc
jne
ret
bound
mul
xchg
xchg
enter
insb
jno
xchg
push
xor
sbbl
sub
pusha
lods
jl
es
or
pop
push
mov
pop
rol
jnp
bound
jle
popl
pop
das
and
mov
fbstp
aas
pusha
pop
mov
mov
jae
ficoms
pop
mov
popf
xchg
cmp
mov
mov
pop
popf
adcl
cs
and
add
sbb
cmpsb
cltd
mov
repnz
leave
push
nop
shl
call
mov
in
ds
inc
in
int3
inc
outsb
testb
cmp
push
int3
cld
movsl
loopne
dec
vpmaxub
inc
lds
pop
xor
dec
push
mov
lcall
movsb
out
add
push
mov
jno
jge
aas
js
sbb
aaa
fsubrs
cmp
jno,pn
cmpsl
jl
bound
dec
xor
std
push
sbb
ret
xor
or
scas
push
adc
test
xor
ja
mov
mov
enter
daa
movb
push
js
loope
gs
cmp
lcall
inc
lods
or
mov
fisubrs
adc
in
jl
imul
lret
repnz
das
cmp
pop
mov
pop
mov
lcall
jmp
sub
shrl
jb
adc
mov
cmp
mov
adc
mov
or
movb
in
int
int
sub
js
pop
jg,pn
lret
ffreep
jmp
and
pop
scas
sahf
dec
pusha
mov
mov
in
jg
cmc
cwtl
loop
stos
cmp
icebp
xor
adc
cmp
daa
or
test
jno
push
xor
pop
cmp
call
into
lock
cmc
add
xchg
xor
xor
pushaw
adc
in
adc
rorl
cmp
mov
adc
mov
jb
out
push
jnp
call
mov
mov
jg
decb
mov
popf
pop
inc
jns
inc
mov
ljmp
push
lea
inc
dec
inc
sbb
daa
inc
or
daa
cwtl
mov
inc
sbb
pushf
in
std
jmp
add
cs
mov
lock
sub
jb
jne
dec
or
popf
jns
data16
lea
add
sub
mov
subl
lods
jge
pop
xchg
out
inc
dec
lods
sub
pop
push
xchg
adc
xchg
sbb
imul
adc
cmp
cwtl
jbe
mov
fiadds
icebp
push
or
lret
lret
jmp
push
mov
sub
lock
cmpsl
das
decb
pop
sub
aam
push
sub
ret
addr16
push
insl
adc
mulb
cmp
loop
mov
sbb
jno
and
es
pop
out
push
or
fisubs
cltd
pop
dec
xchg
test
lahf
mov
out
fstl
cmpsl
cmp
clc
adc
mov
push
push
ror
stos
inc
pop
clc
push
mov
int
jg
pop
movsl
arpl
test
psrad
or
insb
mov
xchg
jmp
add
adc
inc
xor
pop
lods
fwait
xchg
in
or
push
jl
add
inc
js
fstps
jns
into
out
in
adc
xchg
adc
push
mov
or
decb
ja
sub
jp
std
shll
jne
jmp
cmpsl
aam
dec
bound
sub
call
lcall
fwait
xchg
add
arpl
inc
xchg
jmp
lret
cltd
out
lods
hlt
sub
pop
sbb
adc
jo
int
jb
insb
jnp
dec
sarl
mov
pusha
lods
or
shlb
inc
sbb
inc
jo
pop
jae
je
push
and
ficompl
inc
pop
cmp
movl
in
sbb
cmp
jno
push
dec
xor
adc
or
repnz
jae
hlt
dec
aam
arpl
jg
or
ret
inc
in
ljmp
cmp
pop
int3
out
ss
jle
xor
out
add
sbb
shrb
mov
sub
and
movsb
jns
mov
adc
jge
scas
das
sbb
xor
cmp
insl
jno
shlb
pusha
sahf
push
dec
mov
sbb
xor
shlb
in
mov
push
jo
stos
test
cld
test
and
add
mov
daa
lds
jne
mov
sub
mov
pop
add
mov
je
test
std
jl
and
pop
sbb
jnp
xor
das
mov
js
jle
pop
ja
mov
es
push
stc
sub
cmp
cmp
loope
mov
mov
inc
mov
mov
mov
addr16
pusha
sub
dec
mov
push
mov
or
push
sub
aam
lret
icebp
roll
je
stos
scas
cmp
test
jg
jg
add
pop
stc
andl
add
xchg
mov
cmp
loop
push
mull
push
cli
movsb
mov
xor
cmp
decb
into
ror
dec
cmc
lret
xor
xor
xchg
inc
fdivrs
adc
add
add
fldenv
int3
lds
fsubrs
sub
je
sti
add
daa
xor
sti
xlat
lret
stos
mov
stc
loopne
mov
pop
gs
adc
int3
aad
fchs
popf
dec
les
scas
repz
in
jge
add
mov
cmp
fcmovbe
mov
pop
repz
jne
out
repnz
jmp
mov
js,pn
jns
insb
nop
out
inc
adc
xchg
cmp
pop
jo
push
ret
fbstp
cld
jecxz
subb
rorl
jg
add
lods
or
push
repz
rcr
adc
sbb
inc
jbe
add
mov
push
mov
iret
or
and
fisttpll
scas
sbb
in
std
es
xor
mov
adc
inc
mov
dec
lret
pop
test
add
popf
xor
das
fldl
lahf
rcr
shrb
cmp
cmp
push
es
push
pop
insl
clc
sbb
jl
les
mov
scas
test
popa
mov
lret
arpl
xchg
push
insl
and
roll
or
mov
cltd
dec
movsb
popa
test
divb
push
aad
mov
clc
push
or
xchg
xchg
and
das
adc
mov
inc
stos
xor
dec
xchg
pop
ja
push
test
enter
jg
add
out
and
jnp
push
movsb
rolb
fisttpll
test
dec
xchg
xchg
shlb
int3
mov
cld
fwait
shll
add
pop
dec
aam
js
shll
lahf
mov
pop
out
in
int3
lods
xchg
arpl
shll
movsl
cmpsb
jmp
rorb
jp
sbb
mov
stos
arpl
mov
jne
fdivr
mov
clc
aam
mov
sbb
pop
mov
xchg
mov
aam
mov
dec
cvtps2pi
or
shll
lahf
lods
stos
sub
ret
into
cwtl
insb
fnstsw
xchg
jnp
cli
cmp
in
test
pusha
dec
mov
rol
mull
pop
cld
xor
inc
jnp
mov
push
in
out
popf
loop
std
mov
push
mov
or
lcall
imul
push
nop
fwait
mov
iret
cmp
push
hlt
xchg
imul
inc
jmp
in
or
cmp
arpl
and
cltd
add
orb
inc
fistpl
int
fimuls
xchg
sbbl
orb
cmp
popf
pop
movsb
add
ret
cmp
jbe
jo
jge
add
sbb
aaa
outsl
cmp
cmp
test
push
fsubrp
call
jo
and
add
push
inc
inc
repz
out
inc
mov
or
enter
daa
les
xor
lods
outsl
cmp
push
daa
cmp
xchg
int3
ds
arpl
setae
lahf
sbb
xchg
cmp
fstpl
ljmp
xor
inc
mov
and
fldt
js
cmp
flds
mov
js
jnp
sub
add
add
outsl
shlb
dec
jo
adc
mov
or
and
mov
int
adc
sub
pop
sbb
sub
push
lret
mov
mov
lds
test
dec
dec
sub
dec
jg
sbb
loop
mov
cmp
fs
test
fbstp
pusha
cmpl
and
das
loope
add
dec
cmp
inc
hlt
or
and
mov
cmp
xchg
and
xor
repnz
and
das
adc
pop
imul
mov
xchg
and
vmovups
mov
sbb
mov
xchg
mov
loopne
into
pop
loop
jno
dec
loopne
aad
pop
test
int
pop
cmc
xchg
les
nop
mov
sbb
popf
outsb
xor
movsl
or
pop
cmpsb
ret
inc
adc
loop
inc
sub
fstpt
mov
call
js
dec
jge
mov
jecxz
xorb
or
enter
push
mov
jge
sbbl
dec
inc
pop
fstpt
inc
inc
xchg
push
mov
mov
xchg
xor
pop
mov
imul
std
cmpb
mov
std
nop
mov
sbb
cld
and
lret
leave
xchg
inc
mov
sarb
lock
sbb
shrb
icebp
aam
movsb
lret
ret
test
dec
insl
fisttps
lcall
scas
cwtl
popa
mov
dec
movsb
mov
mov
in
and
pop
sub
pop
sub
xchg
add
out
test
mov
adc
push
pop
ja
fstpl
cmp
clc
mov
sub
mov
outsl
sarl
call
stos
pop
or
jne
xchg
movsl
lods
xchg
push
pusha
mov
push
mov
sub
xor
mov
mov
lea
adc
cmp
mov
dec
clc
inc
add
into
adc
fwait
lock
fs
jle
fsubr
inc
add
loop
pop
les
jns
adc
in
fisubl
mov
mov
mov
jnp
inc
ja
mov
mov
mov
test
leave
dec
sub
xchg
jne
pushl
out
xchg
push
mov
jmp
jg
in
dec
cmp
out
push
and
push
mov
ret
stos
sahf
fsubr
and
mov
jnp
imul
push
and
frstor
dec
add
adc
ret
pop
pop
xor
lods
inc
xchg
mov
mov
pusha
popf
or
mov
inc
ja
push
pop
xchg
icebp
dec
sbb
cmp
scas
mov
push
push
xlat
push
adc
sbb
iret
xchg
inc
insb
bnd
pop
lods
leave
mov
dec
data16
sahf
inc
out
inc
sub
mov
jo
inc
jmp
testb
or
add
xchg
int3
mov
imull
fisubrs
xor
rcrb
arpl
push
sbb
cmp
mov
cmp
test
fdivrl
aaa
and
dec
movsl
sub
adc
xor
add
cmp
lret
dec
addl
shlb
mov
stos
cmp
push
sbb
test
xchg
ja
inc
dec
mov
cmpsb
cmc
lods
in
shl
enter
jmp
push
cmpsw
loope
stos
dec
sub
mov
xchg
ds
in
movsl
push
into
mov
stos
add
lahf
cmp
cmpsb
sbb
xlat
add
add
cmp
js
lock
xor
add
xchg
cmc
jp
lcall
lret
fsubl
fisubrs
pop
out
outsb
lds
mov
iret
or
mov
mov
jecxz
mov
add
push
jns
int
or
out
stos
or
lret
push
scas
adc
mov
mov
jg
lahf
outsb
fildl
addr16
loop
dec
repnz
out
mov
fs
popa
pushf
adc
rdpmc
sbb
sbb
pop
push
ljmp
pop
test
cmp
pop
aam
mov
bound
pop
jbe
xor
imul
adc
cmp
adc
dec
mov
xchg
loopne
popw
jmp
lods
lods
push
pop
mov
fmull
push
js
pop
or
in
std
sbb
sti
xor
bound
js
sbb
mov
sbbb
repnz
repnz
dec
lock
les
js
xchg
mov
popf
scas
sarl
loope
xlat
in
fcompl
cmpsl
adc
jle
jmp
pop
pop
cs
cli
ja
nop
movsb
push
dec
inc
aam
jb
movl
xchg
cmp
outsl
bound
jno
dec
call
stos
das
decb
xor
add
leave
push
pop
jle
jbe
loope
fildl
pop
sbb
out
out
jnp
sbb
push
mov
aad
popa
rorl
cmpsb
test
fdivr
sub
cwtl
cmpsl
or
mov
imul
ja
call
cld
dec
xchg
aas
lret
cmp
mov
stos
fdiv
fwait
repz
fwait
add
sarb
int3
sub
dec
inc
aam
pop
in
ret
adc
push
cwtl
negl
xlat
jge
insl
movsb
add
xchg
mov
popa
iret
mov
lods
mov
xchg
es
fisubl
mov
dec
adc
add
jnp
cltd
mov
cmp
pop
or
scas
fldl
jl
movsl
xor
pushfw
inc
rcl
inc
xchg
mov
push
xor
out
notb
xchg
in
inc
jmp
cmp
ljmp
shrl
xor
loopne
mov
nop
ret
stos
push
test
jmp
adc
mov
gs
in
fwait
pop
pop
lcall
pop
and
add
xchg
xor
pushl
sbb
jns
lods
push
in
cmp
mov
mov
test
ja
dec
dec
jp
ja
mov
and
idiv
pop
mov
dec
inc
dec
or
jl
cmp
out
cmp
xchg
adc
jp
dec
test
xchg
dec
jnp
sbb
std
out
and
out
dec
in
addr16
inc
stos
adc
add
or
mov
cmp
jnp
mov
or
ret
aaa
ret
rcrb
jb
xchg
add
sub
imul
popf
xor
mov
test
mov
sbb
clc
int3
imul
shrb
push
sahf
hlt
adc
rorl
mulb
repnz
ret
or
das
divb
sub
es
icebp
pop
lcall
outsl
mov
or
jmp
add
xchg
xchg
int3
test
aad
or
cwtl
fmulp
mov
pushf
sarb
daa
and
inc
and
movsb
sbb
fwait
push
cmc
pop
popa
jbe
ds
jge
push
aas
sbb
adc
cmp
in
jno
mov
push
push
movsb
insl
ds
jne
xchg
scas
mov
jp
jmp
xchg
mov
inc
fsubl
fldenv
mov
pop
push
daa
ret
push
sbb
inc
sub
divb
cmp
idivl
and
pop
lahf
pop
ret
and
loop
pop
pop
daa
add
inc
fdivl
pop
arpl
cmp
pop
pop
pop
movsl
adc
imul
push
std
dec
fmul
dec
adc
push
repnz
and
nop
cmp
shrb
out
push
cs
divl
lods
sbb
and
mov
int
ljmp
sub
das
lret
xor
inc
mulb
mov
sahf
fsubr
sbb
and
pop
jg
dec
xchg
loop
cmp
stc
cmpsb
jbe
fs
push
out
ss
imul
fcoms
call
mov
cmp
test
fisttpl
sub
aam
jl
cmc
and
xorb
stc
add
adc
xlat
push
inc
inc
notl
ret
and
fisubrs
leave
rclb
out
add
sub
scas
or
push
inc
sar
adc
fbld
ret
loopne
push
xor
sar
inc
add
stc
les
movsb
imul
adc
xor
pop
or
js
hlt
pop
les
pop
push
mov
nop
jg
mov
jb
dec
and
je
add
jb
jb
fcomps
fadd
sub
mov
aas
mov
lret
or
dec
sahf
lcall
and
inc
push
rclb
aas
mov
mov
hlt
pop
out
pusha
xchg
pushf
into
loop
or
jbe
shl
es
bound
mov
push
mov
sarb
cld
jbe
sbb
cmpsl
testb
inc
pop
mov
jl
lock
shrl
jp
push
rclb
mov
and
aam
outsb
mov
sbb
mov
lods
or
dec
push
sub
mov
out
lods
lods
and
out
jo
stc
mov
loope
adc
xchg
das
arpl
push
test
sub
cltd
pause
out
jns
lahf
mov
dec
adc
clc
add
adc
sbb
loope
shrl
rolb
rcl
stos
std
and
out
pop
test
xchg
xor
push
push
or
divps
xor
xchg
mov
add
out
jge
call
dec
adc
leave
test
xchg
imul
xchg
xchg
xchg
cmpsb
fwait
dec
pop
cmpsl
push
stos
out
inc
add
scas
inc
ja
push
sti
mov
jns
jmp
adcl
xor
pop
icebp
imul
push
mov
mov
fdivrp
mov
arpl
dec
out
xor
jne
jno
mov
mov
push
pop
js
out
stos
jmp
adc
mov
imull
inc
movsl
bound
outsl
sub
int3
nop
subl
cld
jle
cmc
adc
xorb
fmulp
fists
add
mov
sub
pushf
inc
pop
jae
adc
push
cs
popf
push
pop
pop
mov
ret
jnp
fisubl
push
xchg
lahf
in
sbb
mov
flds
xchg
gs
iret
push
mov
repnz
hlt
jbe
push
arpl
pop
inc
hlt
fbld
mov
fisubrs
add
jmp
jg
add
lock
cwtl
jb
dec
lds
fcomip
mov
jns
xlat
cmp
nop
movsb
movsl
jbe
push
inc
push
dec
jbe
push
and
movsb
push
mov
rcrb
aaa
xchg
dec
pop
cmp
jno
mov
dec
pop
stos
gs
xchg
xor
rol
xlat
scas
imul
jnp
sub
insb
cmpsb
fsubrl
jno
mov
test
push
mov
icebp
mov
dec
enter
std
pop
movsl
fs
lahf
jns
mov
xor
sbb
sar
incb
ret
fistpll
repnz
and
mov
cmc
rcr
mov
push
rolb
das
dec
lea
mov
lcall
mov
and
sub
fldenv
test
mov
xchg
lret
out
int
lods
mov
insl
add
test
push
flds
fdivr
jp
outsb
mov
sbb
mov
jnp
lods
test
jo
jg
imul
pop
jmp
pop
add
sbb
js
add
lahf
fwait
popf
cmp
into
adc
jo
sub
mov
mov
into
pop
push
cmc
out
fidivl
xchg
adc
test
imul
nop
adc
scas
mov
xor
les
mov
or
rcll
sti
xchg
mov
sahf
xchg
loopne
scas
fistps
mov
inc
sbb
fnstcw
div
sub
xchg
rsm
sub
dec
test
bound
cmp
dec
je
pushf
inc
mov
subl
mov
mov
add
add
dec
loop
add
mov
call
outsb
add
imul
test
orb
pop
rorl
fcmovnbe
cmp
inc
out
sub
loop
dec
aas
sub
mov
xor
mov
mov
dec
lret
ja
scas
cwtl
sbb
aad
mov
popf
int
cld
mov
dec
pop
mov
adc
mov
fsub
das
pop
adc
and
fistps
ret
xor
int
sahf
mov
cmp
arpl
bound
jp
mov
lods
mov
test
and
mov
mov
add
jge
test
enter
sbb
xchg
adc
xchg
jp
xchg
movsl
daa
sbb
fnstcw
sbbb
dec
or
in
shll
out
mov
test
push
icebp
push
stos
bsr
int
loopne
dec
xor
daa
popa
mov
xchg
mov
test
fcoms
call
mov
in
or
cmp
fwait
jge
pusha
push
dec
lods
and
leave
fs
push
pushf
shll
out
cmp
int
insl
dec
xchg
lahf
aaa
sbb
inc
cmc
pusha
pop
lods
fcoml
jp
mov
push
mov
rcrb
cmp
push
xchg
jne
mov
pop
out
xor
outsb
xchg
mov
out
xchg
loopne
loop
negb
out
sbb
inc
stc
and
and
stos
notl
and
outsb
jno
mov
stos
jnp
pop
test
mov
in
loope
pusha
mov
push
fbstp
ret
ret
mov
inc
cmpsl
fstpt
push
icebp
test
mov
add
xor
sbb
or
lcall
scas
mov
pop
push
lods
xor
enter
mov
add
mov
or
arpl
sub
or
sub
push
or
enter
xor
imul
and
xor
shr
in
cld
std
and
es
cmp
in
mov
xor
push
xchg
mov
jge
xor
sbb
getsec
push
add
ja
cwtl
jno
cwtl
aaa
jl
aaa
rorb
in
push
push
inc
xor
sub
dec
sbb
push
out
test
repz
cli
lret
pop
jae
in
xchg
enter
daa
shlb
mov
mul
or
sub
in
pop
cmp
mov
ds
aad
imul
leave
out
lahf
cwtl
add
addb
sbb
xor
xor
mov
mov
jmp
leave
lcall
xor
and
scas
sub
push
bound
cmpsl
adc
fiadds
fnsave
fwait
js
mov
in
xchg
and
sbb
lods
push
pop
sub
adc
lret
lret
sub
xchg
lret
push
push
dec
adcb
jg
push
loop
mov
jp
xor
pusha
ss
mov
fmuls
mov
cli
mov
mov
cmp
mov
es
inc
out
cmc
scas
int3
shlb
loop
xor
imul
movsb
lods
mov
adc
mov
add
jmp
data16
jo
mov
hlt
push
sub
lret
cmpsb
in
xor
pop
sub
lea
inc
pop
add
scas
fpatan
mov
aaa
repz
lock
sarb
sbb
mov
jmp
adc
jno
jmp
lahf
lea
addr16
aad
rorl
xor
dec
cmpsl
jb
in
mov
je
enter
sub
js
cmp
out
push
daa
xorl
out
mov
stc
shr
dec
je
sub
pop
addr16
clc
inc
jbe
sbb
movsb
push
int3
adc
mov
bound
and
inc
inc
sarl
inc
pop
notb
mov
cld
mov
rcr
mov
je
iret
cld
int3
jbe
lret
test
mov
add
lock
sar
ss
sub
sbb
xor
sarl
and
insb
dec
pop
jno
cmpsl
mov
pop
mov
lods
stc
pusha
mov
inc
adc
and
enter
test
push
add
pop
cltd
popa
or
and
and
mov
ja
adc
jg
cmp
pop
cli
push
dec
stos
fildl
out
pop
stos
jo
shrl
int3
mov
nopl
xor
and
or
je
lcall
xchg
sbb
test
scas
popl
les
inc
mov
cmp
lock
cmp
in
cwtl
call
pop
das
jns
dec
outsb
in
pop
jmp
mov
add
call
jecxz
ja
adc
mov
or
mov
inc
test
sub
jb
mov
testl
sub
les
loope
repnz
cmp
jecxz
stos
push
outsb
and
jo
insb
hlt
int3
cmpl
arpl
in
mov
pusha
dec
mov
push
pop
por
jae
jnp
push
mov
sbbl
inc
nop
add
lret
dec
or
inc
sub
mov
pop
scas
sbb
cmp
repz
mov
iret
adc
fs
test
xchg
cmp
hlt
or
shll
lods
lea
inc
loope
pop
jnp
push
out
jge
loope
inc
add
cmp
imul
rcr
xor
lds
xchg
mov
lahf
out
cmp
mov
jbe
fidivl
sbb
faddl
aas
mov
stos
cmp
jno
leave
push
jl
imul
cmp
push
mov
jo
cmp
scas
daa
cmpsl
ds
bound
and
roll
add
mov
outsb
dec
mov
pop
mov
push
jl
loope
jmp
das
cmpsl
pushf
cmp
in
movsl
jb
sti
and
mov
mov
push
sbb
adc
xor
test
pop
iret
adc
adc
pop
ds
jle
iret
cwtl
jne
shrl
inc
adc
mov
mov
mov
lock
adc
dec
and
in
or
adc
sub
rolb
cmpsl
test
stc
rorl
or
mov
sahf
rcll
jno
sbb
mov
loop
inc
leave
stc
lret
push
cwtl
fs
mov
ss
fucomip
fadds
mul
adc
ss
cmp
or
into
and
mov
xor
sti
mov
ja
mov
adc
sub
add
jbe
and
xrelease
xor
and
cmp
test
movsb
int3
jge
mov
and
pop
pop
jle
inc
ds
je
sub
les
mov
mov
cmp
jbe
xlat
loopne
sbbl
or
pushf
lcall
cs
aad
gs
adc
ja
cmp
or
sub
push
jg
jnp
inc
lea
xlat
cmc
cmpsb
push
adc
fisubl
fisttpl
xchg
fldt
scas
stc
pop
or
inc
std
in
inc
sbb
mov
sbb
and
and
mov
iret
not
les
std
vcvttss2si
lock
mov
dec
das
std
cld
notl
lret
hlt
dec
inc
mov
sbb
push
lock
das
pop
xor
ror
cld
sub
js
mov
pop
movsb
sbb
sti
adc
mov
cmpsl
mov
or
popa
sub
lods
xor
mov
data16
and
arpl
mov
add
test
lcall
push
out
lret
fucom
sbb
xchg
adc
test
or
movsl
pop
add
lret
out
sbbb
xchg
or
int3
or
into
mov
stos
xchg
pushf
push
orl
pop
movl
push
into
inc
or
in
fcomi
ret
push
xchg
push
ret
add
call
jecxz
sub
ja
in
jbe
mov
aam
mov
and
ja
mov
jp
fwait
jmp
mov
dec
push
mov
jg
jne
mov
mov
int3
mov
xchg
pusha
xchg
bnd
jbe
xchg
adcl
out
jno
sub
cmp
addr16
jecxz
stos
fstp
je
adc
bnd
and
in
out
pusha
ljmp
ret
xchg
pop
inc
enter
add
jae
xchg
pop
push
ja
xchg
popf
int3
mov
fs
and
fidivrl
jle
movsb
leave
sub
ss
cmpsb
xor
scas
jnp
xlat
push
cmp
adc
mov
repnz
leave
or
arpl
sub
or
pop
xor
inc
data16
jbe
add
int3
push
or
cmp
pop
xchg
pop
lds
mov
mov
xor
mov
movsb
inc
adc
push
xor
or
dec
loop
cltd
movsb
je
icebp
sbb
cmp
mov
out
jl
jae
dec
lods
movsl
jno
xor
js
stos
cs
jo
adc
scas
push
cmp
jae
test
mov
js
sbb
in
push
and
imul
mov
add
lcall
ds
sub
mov
push
lahf
push
lds
xor
in
add
xchg
adc
inc
jbe
inc
mov
js
mov
cmp
pop
or
fdivrl
int
ret
outsb
mov
and
lods
push
leave
rclb
inc
mov
ss
ret
mov
fsubrs
sahf
sub
int
dec
inc
sub
jecxz
pop
es
jle
xor
add
mov
xor
sahf
fs
test
cld
orb
loop
or
stc
orb
adc
mov
push
ret
incl
pop
negl
lret
adc
or
inc
cmp
call
add
cli
pop
xor
push
subl
out
adc
icebp
mov
pop
inc
or
lods
das
and
mov
hlt
sub
pop
inc
in
adc
cmp
mov
jbe
gs
pop
cmp
mov
aam
ds
inc
push
mov
repz
sti
rclb
pusha
addr16
cmp
int
xlat
pop
mov
adc
dec
pushf
inc
lea
jmp
repz
cs
pop
adc
and
push
dec
inc
test
aad
adc
out
lea
call
and
xor
dec
push
ret
pcmpgtd
and
inc
xor
sbb
or
outsb
mov
rclb
or
rcr
cld
negb
jo
std
insb
lar
scas
push
mov
jbe
int3
icebp
and
mov
arpl
push
and
jp
mov
das
test
rcrb
test
aam
icebp
stos
ret
fistpll
daa
add
insl
dec
mov
aas
cmpsl
mov
push
popa
inc
rcl
lods
iret
stos
xchg
mov
mov
repz
sub
lea
jbe
jp
iret
sbb
test
in
push
test
repz
in
dec
cwtl
xchg
dec
mov
sbb
sti
lock
mov
out
in
mov
push
subb
xor
daa
xor
xor
bound
scas
hlt
arpl
gs
dec
stos
mov
in
rcll
or
jbe
fwait
or
dec
push
mov
push
call
cltd
rcr
jns
inc
mov
xchg
mov
stos
mov
popf
and
jp
cmpsl
xor
int
dec
mov
adc
jne
add
mov
mov
out
int
notb
sbb
xchg
inc
idiv
andl
xchg
sub
xor
addr16
daa
shll
sub
inc
insb
lret
jnp
sub
mov
mov
pusha
test
or
int
and
mov
dec
bound
push
jae
repnz
push
cmp
sbb
mov
mov
sbb
and
imul
push
push
cmpl
iret
rorl
repnz
add
sbbb
arpl
sbbb
sub
push
in
xchg
fildl
int3
aas
adc
pop
testb
fdivrp
in
and
pop
cld
rolb
mov
lds
inc
cmp
movsb
shr
adcl
ret
jbe
xor
sbb
test
adc
sti
jno
xchg
push
mov
sub
push
adc
xor
cmp
pop
scas
in
mov
xchg
test
push
shl
cmpsl
inc
insb
cmpsb
call
aad
enter
daa
mov
aas
adc
sub
xchg
pop
cmp
cmp
sbb
push
and
lahf
cmc
test
jg
pop
sbb
mov
sub
adc
icebp
or
loope
sbb
sbb
outsl
jle
lcall
lock
movsb
mov
pop
imul
adc
shrb
push
mov
mov
mov
rcrb
lret
outsl
and
popf
cld
push
mov
cltd
or
pop
stos
xchg
movsl
adc
sarl
add
fdivs
test
mov
jg
adc
or
or
cmp
inc
adc
loop
mov
negl
cld
cli
cmp
sub
in
clc
cmp
push
push
or
xor
jmp
loop
add
outsl
cmp
hlt
inc
imul
syscall
add
pop
sub
mov
mov
cmp
or
mov
jg
pushf
sti
dec
mov
test
loopne
jmp
movl
inc
outsl
int
xor
gs
xchg
sbb
je
cmp
cs
mov
or
cmpsl
xor
xchg
or
aad
nop
xor
movsb
mov
nop
mov
dec
sub
jle
mov
in
jecxz
rep
movb
hlt
call
movsb
jp
mov
jno
cmpl
xor
pop
push
cmc
bound
xor
aas
test
mov
mov
pop
fisubrl
shll
lock
pop
cwtl
std
adc
es
or
test
outsb
fcoms
icebp
stc
and
dec
int
lret
rcrb
mov
out
mov
jno
lock
pop
fcmovnbe
jno
add
cmc
scas
pop
aam
movsb
ds
outsb
loope
es
bound
dec
dec
jb
cmpsl
mov
sbb
pop
js
lods
cmp
inc
mov
lods
and
and
cltd
lahf
lds
add
and
fwait
test
jne
push
insb
xchg
cmp
xor
out
mov
sbb
inc
fcompl
loope
test
mov
dec
aad
xchg
xchg
sbb
push
pop
dec
int
cmp
xor
inc
decb
mov
movsb
stos
mov
mov
cmp
in
push
dec
popf
xor
loop
nop
fmull
cmp
stos
push
fldcw
flds
xor
dec
and
insb
push
jns
mov
in
jo
xchg
fildl
mov
cwtl
outsl
dec
ja
jle
jp
callw
pop
pop
mov
mov
bound
ja
jne
loop
mov
mov
out
lods
xor
xchg
push
fadd
jmp
or
mov
xor
mov
or
adc
stos
ret
sub
insb
xor
divl
in
jge
pusha
and
mov
ret
enter
jae
shll
jae
xchg
scas
push
std
js
popf
sbb
xchg
mov
decb
xchg
xchg
xchg
push
push
leave
sbb
into
adc
aam
scas
inc
sbb
push
enter
xor
scas
iret
xor
out
leave
stc
inc
or
in
enter
pop
pop
inc
add
or
adc
mov
or
and
mov
fisubs
loop
rcrb
mov
pop
pusha
cmp
jecxz
xor
sbb
jb
out
pop
sbb
inc
aaa
dec
or
scas
jno
xor
dec
mov
push
not
pop
xor
xchg
add
movsl
push
fcmovne
aaa
test
pop
popf
lret
inc
ss
or
and
enter
daa
mov
cs
cmp
jo
jne
mov
mov
movsl
xchg
out
adc
xchg
cmp
je
ss
xor
xchg
mov
pop
inc
fs
fisubrl
lcall
neg
rcrb
mov
mov
xchg
rorb
sbb
mov
pop
xchg
mov
lea
in
addb
push
mov
dec
iret
xor
aam
pop
pop
and
repz
push
ror
pusha
mov
movlps
push
insb
movb
inc
mov
pushf
daa
stos
stc
lock
fs
popf
adc
jnp
ss
fdivrs
jne
out
negl
dec
dec
xor
cmp
cmpsb
into
into
in
shl
lret
xor
shrb
ret
ret
adc
enter
add
add
push
data16
sbb
fmuls
fwait
add
sub
adc
in
ljmp
out
pop
gs
test
rolb
mov
fxch
mov
xchg
repz
mov
scas
push
cmp
pop
xlat
popf
push
pop
ds
and
in
pushf
fwait
clc
xchg
jmp
push
sbb
repz
aad
jo
nop
mov
es
xor
xorb
jecxz
adc
test
lea
adc
rcr
ffree
and
push
mov
or
dec
and
xor
pop
repz
es
imul
mov
and
andb
push
shll
inc
negb
hlt
or
sub
pop
add
ror
pop
cld
js
bswap
inc
test
mov
fwait
repnz
dec
cs
mov
daa
rolb
sub
jl
aam
stos
mov
es
lock
dec
inc
pop
cmpsl
mov
dec
ja
jo
mov
mov
iret
push
dec
mov
and
cmpsl
add
sub
dec
or
das
aad
fstl
fs
arpl
sub
dec
inc
xlat
shll
cwtl
outsl
pop
cmpsb
popa
gs
xchg
ret
stos
and
xchg
push
cmp
jns
cwtl
ss
daa
or
xor
xor
adc
cmpsl
xchg
pop
dec
test
int3
xchg
cmovp
dec
sub
push
adc
jl
movl
smsw
out
mov
in
pop
inc
xchg
sub
sbb
push
and
stos
sbb
mov
inc
mov
adc
mov
std
xchg
popa
mov
mov
les
out
mov
mov
jmp
xlat
fldcw
rcll
sub
sub
addr16
pushf
stos
ss
and
adc
mov
jle
scas
cltd
in
fimuls
pusha
mov
stos
mov
add
pop
jmp
sbb
cmc
jae
jp
push
rclb
inc
sbb
lea
jmp
xchg
xchg
test
push
repnz
scas
movsb
popa
lret
cmc
jae
js
popf
repnz
push
inc
leave
jo
das
hlt
cmp
arpl
mov
push
jecxz
mov
add
mov
and
fstps
inc
jns
clc
shlb
mov
jmp
lret
mov
pop
push
push
lods
mov
push
mov
mov
add
and
aaa
or
adc
mov
test
dec
stc
test
push
fnstcw
lret
push
shlb
aas
scas
mov
dec
push
test
ljmp
cmpsb
out
test
daa
enter
daa
mov
rcrl
jnp
shrl
aam
cmp
sbb
movsl
mov
es
xor
and
flds
test
xor
mov
repz
leave
dec
pop
in
hlt
les
pop
iret
jb
jnp
sbb
scas
aas
outsb
fldl
cs
and
xchg
push
mov
inc
js
out
xchg
mov
lods
shlb
fistpll
push
cmpsl
mov
and
dec
notb
pop
mov
test
jmp
sbb
iret
lods
test
mov
sbb
mov
loop
test
stc
cmpsl
roll
fs
xor
cmp
xor
fcomip
fdivl
lods
xor
testb
xor
rcrl
xchg
sub
xor
bound
ret
roll
adc
inc
cwtl
add
dec
jle
das
xchg
cmpsb
mov
clc
sub
fidivrs
in
push
loopne
sti
lods
fldt
gs
push
mov
pop
fwait
inc
jbe
mov
xchg
repz
xchg
mov
pop
aaa
cmp
mov
icebp
adc
adc
mov
jmp
scas
add
push
shll
jl
or
adc
xchg
js
lods
adc
jecxz
ja
movb
xchg
call
mov
or
in
xor
dec
or
fucomi
out
xchg
je
inc
sbb
inc
test
stos
mov
cmc
aam
and
loope
rol
or
mul
sub
jg
fs
jno
mov
cmpsl
mov
out
lret
mov
js
lret
mov
sub
lock
outsb
fisubrl
xchg
fwait
dec
rclb
sbb
sub
out
enter
xchg
mov
es
je
pop
add
inc
lods
mov
ljmp
popa
lods
adc
pop
mov
repnz
mov
iret
mov
bound
scas
push
sti
cltd
je
loopne
lret
xchg
arpl
fnstsw
scas
clc
sahf
aaa
or
sbb
jno
rorl
or
stos
xchg
fucomip
push
pusha
scas
xchg
and
push
push
adc
xor
or
stos
into
clc
xor
fcomi
mov
test
rorl
push
test
test
pop
mov
inc
mov
push
or
and
fwait
xchg
rcll
fwait
fwait
in
add
test
bound
scas
jns
and
scas
and
xchg
jns
dec
mov
lods
inc
mov
push
mov
ja
pop
bound
add
std
in
mov
mov
dec
and
in
jne
cmp
push
movsb
xchg
lods
jmp
mov
adcl
out
inc
mov
or
dec
stos
test
xchg
fsubrs
ja
add
and
jecxz
push
rcrb
sub
ret
ficompl
movsl
ret
inc
jmp
movsb
jbe
subl
mov
jl
push
fimull
int
add
enter
js
bound
push
push
dec
jl
ljmp
repnz
pop
aaa
leave
out
out
hlt
subl
arpl
and
or
or
sbb
bound
mov
jbe
int3
add
mov
and
fsubp
lods
inc
lds
rclb
jb
jle
sub
push
lcall
insl
jle
jbe
cltd
mov
aaa
sbb
fucom
adc
cmp
fldenv
push
xchg
jb
aad
jo
inc
ss
subb
test
mov
rolb
jb
jno
pop
in
icebp
dec
or
inc
mov
daa
mov
sub
loope
adc
sub
mov
cmp
arpl
test
andl
push
sub
mov
sbb
xor
call
push
xchg
mov
outsb
addr16
dec
arpl
sub
inc
lcall
rcr
es
xchg
sub
shrb
cmp
adc
add
lea
gs
jbe
ss
into
and
push
adc
int
out
sub
jns
pop
and
dec
sar
or
sbb
mov
cs
dec
jg
mov
aad
pop
fmull
jne
push
adc
stos
ds
jmp
shl
mov
je
imul
or
movsb
adc
xchg
test
push
xor
inc
outsl
fiaddl
adc
imul
popa
adc
cwtl
sub
data16
mov
lret
das
or
out
and
sub
fsubl
shlb
sub
or
mov
add
and
pop
mov
mov
fnstcw
inc
sti
repz
iret
sbb
jmp
lret
sub
pop
movsb
dec
pop
adc
push
jmp
lret
mov
pop
sti
nop
push
jnp
dec
sahf
stos
mov
dec
and
fdivl
lret
jecxz
pop
inc
mov
mov
call
and
push
mov
orl
pop
cmp
movb
addl
shrb
or
and
bound
and
or
cwtl
cmp
mov
stos
test
inc
add
icebp
jle
push
cld
into
xchg
and
pop
sub
mov
sbb
cli
mov
aas
shr
in
sub
add
aam
mov
ret
sbb
cld
insl
in
xchg
cmpsl
cltd
cmpsl
mov
clc
das
popa
sahf
aas
inc
lods
jnp
sbb
adc
and
pop
bound
es
mov
das
test
push
mov
push
mov
jns
movsl
aas
call
xchg
dec
test
sbb
stos
mov
pop
stos
jne
jns
jno
dec
xchg
imul
out
xchg
fwait
orps
cmp
and
scas
xor
hlt
insl
mov
stos
cmpl
pop
cmp
pop
rol
xchg
inc
dec
jbe
lds
push
int3
or
push
push
fwait
repnz
ret
add
xchg
pop
bound
dec
jns
fistps
cmp
xchg
enter
adc
mov
pop
leave
das
shlb
lea
out
fistpl
mov
fisttpl
jmp
mov
and
xchg
jg
mov
xchg
insl
or
mov
sub
pop
jne
sbb
sbb
pop
and
cmp
clc
pop
jle
mov
mov
inc
fcmovu
dec
mov
push
pop
pop
mov
inc
hlt
push
cmp
adc
push
inc
jno
popf
jge
mov
mov
sub
push
pop
add
imul
scas
push
adc
popf
decl
iret
dec
dec
jb
add
mov
arpl
insb
loop
or
rorb
gs
inc
loope
mov
add
imul
ja
pop
mov
xchg
fimuls
loop
lods
pop
repnz
adc
arpl
xchg
add
dec
and
sbb
jg
cmp
fisubs
jno
loop
jl
or
dec
xlat
in
jo
lahf
jecxz
xor
test
pop
scas
popa
push
push
push
fidivs
lods
add
subb
inc
jecxz
pop
cmpsb
hlt
push
fsubr
fcoms
sbb
mov
xor
loope
mov
sub
arpl
shrb
movsl
pushf
dec
mov
lahf
jno
es
xor
inc
aam
add
pop
and
dec
dec
mov
push
cmc
mov
js
popa
movsl
pop
imul
mov
xchg
adc
insl
enter
push
inc
rcr
add
dec
mov
mov
push
mov
loopne
and
jno
push
lods
xor
int
and
inc
xchg
cmc
pop
mov
cmp
xchg
dec
cmp
out
sbb
dec
inc
sahf
xchg
movsb
sub
adc
inc
jg
clc
mov
stc
adc
mov
xchg
ss
es
aaa
fsubs
sbb
cli
or
xlat
xor
or
in
or
mov
ja
out
cmc
pop
inc
mov
outsl
mov
jg
imul
into
cmp
daa
push
andl
push
lods
mov
mov
cvtpi2ps
sbb
sub
sti
or
or
dec
pop
arpl
data16
mov
inc
pop
inc
mov
pop
fnstenv
stc
into
repz
add
sbb
es
xlat
pop
push
rcrb
out
add
xchg
pushf
pushf
dec
pop
jmp
stos
xchg
sbb
push
aad
add
xor
xor
repz
or
clc
je
dec
or
pusha
or
lea
xchg
call
mov
jne
sbbl
adc
dec
insb
jnp
fadd
push
inc
daa
ja
inc
mov
inc
in
ficompl
mov
shll
mulb
imul
cmc
dec
xchg
mov
sbb
jne
clc
icebp
push
mov
cld
stc
sub
mov
icebp
jo
lock
jmp
das
push
jmp
bound
sarl
nop
ret
stos
sbb
mov
subl
ss
cmpsl
mov
fisubrs
lods
out
out
xchg
fmull
cmp
aas
and
add
jmp
add
push
mov
test
ss
push
js
fs
mov
adc
jge
mov
sbb
sarl
push
pop
cmpsl
xlat
test
aam
sub
mov
loopne
leave
jge
lgs
adc
cwtl
movl
add
out
xchg
sub
pusha
xchg
and
inc
loopne
or
mov
add
gs
add
mov
cmp
bound
in
and
pop
adc
mov
test
ja
inc
sbb
imul
stos
adc
movsb
fimuls
jmp
inc
imul
les
xchg
push
lret
and
out
push
and
sbb
es
sbb
sbb
cmp
fwait
outsl
pop
insb
loope
mov
arpl
aad
popa
jmp
in
pop
fbld
leave
mov
push
pop
dec
pop
nop
imul
call
jae
les
push
or
mov
cli
xchg
nop
fidivl
pop
test
imul
scas
int
loop
in
or
mov
cltd
shl
push
or
leave
aad
add
sbb
popf
arpl
cli
pop
inc
psubd
sub
pushw
jp
pusha
inc
dec
or
push
hlt
int3
mov
rcr
sub
lock
rol
push
mov
movsb
fimull
cmp
and
jbe
ja
jge
pop
xor
push
mov
pop
cmp
fwait
mov
inc
shld
sub
dec
ja
andb
xor
add
bound
daa
neg
test
dec
pop
inc
jb
or
mov
aad
daa
mov
hlt
aam
sarb
jmp
mov
movsl
mov
testb
cmp
jle
dec
add
out
xor
int3
insb
pop
loopne
js,pn
or
pop
stos
test
lcall
std
fdivrl
sub
outsb
push
mov
push
mov
shlb
in
jb
leave
and
push
mov
mov
ja
and
dec
push
mov
mov
in
sbb
sarb
and
test
mov
sub
dec
sbb
jge
test
subb
cmp
cmp
loop
aad
stc
int3
fldl
adc
nop
lock
ret
fidivrs
popa
adcl
adc
cli
cmp
xchg
cmp
sbb
into
pop
xor
dec
xor
pop
pop
adc
jbe
ljmp
add
jnp
lods
cltd
vpshlq
xchg
out
push
lret
sub
pop
mov
xchg
rorl
sti
mov
xor
sub
pop
je
pop
clc
inc
jbe
ret
jle
fldcw
scas
loope
jo
xchg
dec
fcoml
popa
std
xchg
xlat
cltd
sti
cmpsl
pop
or
sahf
adc
jne
inc
mov
add
jg
test
nop
or
inc
stc
jb
cwtl
pop
dec
adc
je
cli
inc
jecxz
cmp
nop
adc
fdivrp
bnd
pop
stos
mov
in
mov
testl
je
jg
adc
inc
imul
lds
mov
sbb
into
popa
mov
imulb
outsl
leave
cwtl
mov
lods
mov
ss
sub
cwtl
inc
lret
std
ficoms
mov
sub
mov
stos
das
xor
movaps
sbb
aam
push
push
ret
cmp
mov
insl
mov
inc
dec
ss
je
mov
jg
test
popa
int3
int
lods
push
inc
dec
dec
mov
daa
in
cmpsb
mov
mov
push
popa
cltd
sbb
divl
cmp
repz
imul
dec
pop
push
cld
or
push
jle
out
aaa
mov
movsb
jl
unpcklps
jae
lret
or
cmp
repnz
adc
mov
dec
sbb
mov
xchg
mov
inc
ja
jl
daa
inc
and
or
add
mov
pushl
jns
test
push
and
fwait
rcl
mov
aas
jmp
push
push
scas
mov
pop
sbb
movsb
and
nop
push
jne
sbb
out
jne
pop
jb
xchg
and
push
cmpsl
xchg
add
push
out
imul
adc
push
dec
stos
add
andb
xchg
rep
dec
rcrb
test
pusha
daa
fs
filds
jb
pop
mov
pop
jae
mov
sbb
jle
push
cmp
lods
xchg
add
enter
push
scas
xor
mov
sub
test
cmpsl
mov
leave
dec
sub
arpl
int3
call
or
jl
addr16
fildll
or
outsb
add
or
shll
call
shl
mov
aaa
cmp
cmp
adc
lea
jge
aas
sbb
push
or
or
jo
sbb
jl
fsubrl
mov
dec
push
gs
mov
sbb
stc
jo
cmp
and
inc
sbb
push
fldenv
add
cmpsb
cli
arpl
cmpsb
movsb
enter
daa
mov
call
loope
addr16
sub
inc
adc
push
in
in
cmpsb
dec
movsl
stos
jle
and
push
dec
lahf
scas
hlt
in
xor
int3
sbb
adc
pushf
sbb
pop
pop
lods
pusha
js
dec
imul
lock
test
sub
push
outsb
imul
movsb
popl
std
mov
rcr
mov
shlb
and
je
push
mov
int
ss
sub
jl
pop
lahf
movsl
imul
ret
mov
cld
sahf
test
mov
orb
jg
sbbl
adc
fs
mov
pop
ss
in
adc
sbb
out
fcoms
cs
leave
add
in
into
cmp
out
xor
or
imul
cmpsb
jb
inc
arpl
cmp
xchg
xchg
mov
sub
pop
in
add
stos
sti
imul
gs
dec
xchg
loopne
cwtl
xor
pop
dec
lock
xor
loop
cmp
repz
push
pop
xchg
lods
pop
mov
jno
pop
cmp
movsb
pop
mov
psubsb
mov
loop,pn
push
aad
lcall
nop
call
nop
imul
repz
sub
jle
sbb
lea
ja
cmp
ljmp
scas
pop
orl
mov
pop
and
xor
jb
inc
lock
aas
arpl
mov
sarl
and
fildll
roll
jbe
imul
into
sar
std
negb
call
inc
aas
icebp
add
cld
dec
mov
insb
fucomip
mov
mov
or
sub
sub
mov
ret
sbb
push
dec
xor
aad
mov
jnp
clc
int
jecxz
xor
mov
sbbl
imul
add
pop
and
push
repz
outsb
fcoms
jmp
jle
mov
mov
or
int
out
cmpsb
pop
std
hlt
dec
stos
inc
xlat
xchg
out
lcall
push
jg
adc
jae
and
call
xor
cmp
and
push
xchg
out
test
xor
dec
dec
add
or
movsb
cltd
fwait
push
out
jno
stos
mov
add
xlat
sbb
lds
dec
in
jae
xchg
mov
and
xchg
and
and
jp
movsl
pop
mov
les
mov
push
mov
jne
dec
divl
out
imul
inc
lcall
jb
out
pop
and
hlt
int
or
or
adc
jne
jbe
leave
xlat
pop
insb
mov
cwtl
jnp
fstp
jle
subl
pusha
ret
fbld
rclb
mov
jno
jge
popf
add
inc
mov
js
test
push
sbb
sbb
je
imul
add
jb
sub
push
mov
iret
push
das
repnz
mov
leave
ret
cmpsl
ret
hlt
scas
ficoml
inc
adc
and
push
pop
push
or
add
and
lods
je
pop
aas
enter
add
sar
jecxz
xor
cmp
sbb
stos
jbe
es
jge
or
sbb
jmp
jle
jne
mov
aam
jl
test
and
xlat
push
dec
mov
xor
mov
pusha
cltd
push
int
push
test
loope
lea
or
jge
sahf
in
lea
aas
daa
mov
mov
xor
lea
outsl
lds
int
cltd
adc
lret
lods
data16
aas
xchg
addb
sbb
ficompl
xor
fsubr
pop
xor
js
sbb
pop
sub
aad
mov
out
inc
imul
int3
test
adc
insb
and
mov
mov
movsb
mov
mov
lods
push
mov
push
int
ret
adc
mov
xor
push
mov
lret
xadd
insb
mov
outsb
mov
test
andb
jp
xor
push
gs
stc
cmp
mov
xor
subb
xlat
clc
push
xchg
xchg
stos
cli
mov
inc
sarl
inc
or
nop
into
and
mov
outsl
push
mov
imul
adc
add
push
loope
mov
jg
mov
xchg
push
sub
cmp
mov
insb
inc
mov
mov
dec
and
rorl
ss
mov
jmp
incb
repz
push
xchg
jo
loop
cwtl
js
cmp
push
xor
pop
fsubl
or
pop
jmp
loop
cs
pop
dec
aad
adc
nop
ret
mov
jb
dec
pop
dec
incl
push
dec
jcxz
addr16
xchg
push
xchg
lea
pop
sbb
sbb
int
fcmovnbe
mov
loop
mov
jo
aas
add
push
mov
mov
pop
and
mov
rcll
std
divb
sbb
adc
cmpsl
imul
mov
fcmovu
xor
jp
jmp
mov
sbb
mov
lret
data16
das
out
sti
movsl
shlb
adc
jns
mov
ret
push
adc
aas
test
insl
and
insl
cmpsl
mov
sbb
imul
popa
cli
jmp
lods
daa
ss
movsb
jp
mov
xor
ljmp
push
push
xor
std
into
fnsave
shl
fldl
lret
cld
sbb
jge
mov
pop
test
cmc
stos
xor
shr
std
call
lahf
push
pop
mov
psrld
pop
xor
add
xor
mov
xchg
xchg
call
repz
inc
cltd
jno
movsl
adc
fwait
sbbb
push
dec
sahf
add
repnz
dec
xchg
popa
bound
jnp
push
mov
xor
add
adc
outsb
pop
inc
pop
mov
push
ja
test
mov
push
repnz
xchg
dec
inc
dec
xchg
loopne
jne
ljmp
vmovlpd
ror
push
cltd
roll
inc
mov
or
js
call
inc
or
bound
pop
or
mov
sbb
ffreep
ret
jb
add
inc
and
fidivl
jno
push
push
adc
popf
sub
jns
hlt
lret
mov
add
leave
jp
xchg
mov
addr16
cmc
shrb
and
notb
xor
les
iret
leave
nop
or
dec
cwtl
test
cmp
sbb
arpl
sbbb
sbb
jb
cs
fstl
or
outsl
add
sbb
outsb
stos
cmpsb
ficoms
sti
jg
call
mov
pop
cwtl
cltd
cmp
sahf
mov
xchg
add
jge
mov
mov
xchg
jns
test
aaa
jno
insl
sub
xlat
dec
xchg
out
adc
sub
and
adc
xchg
scas
fstl
xchg
push
mov
mov
push
lods
std
inc
pop
jmp
cmpsb
add
in
je
ss
daa
mov
pop
push
push
loope
stos
arpl
or
xor
cld
and
lcall
pop
mov
mov
xor
or
pop
push
sahf
xchg
js
adcb
addr16
repz
imul
enter
inc
outsb
das
cmpsb
xchg
inc
push
push
add
mov
shrl
mov
xor
mov
int
xor
mov
lret
sbb
lock
sub
add
pop
mov
sti
cmpb
jg
pop
int
mov
lods
xchg
fs
pop
adc
push
ss
dec
and
xchg
adc
push
sbb
aam
das
xor
rorb
iret
dec
sub
add
pop
xor
pop
mov
adc
xor
adc
int
add
movsb
inc
test
lods
dec
dec
push
mov
cli
ljmp
mov
in
in
xlat
cmp
sti
movsl
paddd
jb
fidivrl
lods
pop
push
imul
push
icebp
mov
repz
enter
and
adc
in
xlat
push
adc
adc
cmp
jmp
rclb
aad
lea
nop
sahf
inc
adc
jns
sahf
jb
jb
dec
jbe
lret
imull
cltd
pop
lea
or
mov
pushf
mov
jecxz
jbe
dec
dec
lea
fildl
rclb
inc
std
push
inc
es
fdivrl
mov
lock
mov
outsl
pop
rcrl
fabs
std
dec
and
inc
mov
sahf
and
mov
movsl
into
or
dec
sub
mov
popa
mov
mov
lock
das
int
cwtl
rorb
jecxz
sub
or
ret
out
je
ret
insl
push
cmp
cmpsl
mov
dec
ljmp
cmp
xchg
and
push
aaa
jns
cmc
mov
mov
std
pop
push
add
mov
incb
mov
push
test
xor
add
mov
rcll
mov
and
adc
xchg
into
mov
xchg
rdtsc
aam
xor
or
xor
pop
jo
inc
xchg
ja
mov
arpl
outsb
add
xor
pop
gs
fistl
fwait
mov
gs
icebp
hlt
mov
lds
and
push
cmp
int
ljmp
fisttps
mov
or
mov
jo
dec
ja
dec
jne
out
scas
inc
mov
or
mov
push
inc
test
jne
jmp
inc
out
movsb
xchg
mov
sahf
inc
jmp
fs
stos
subl
mov
or
add
adc
imul
in
jnp
cmc
loopne
in
out
in
jne
pusha
clc
stos
pop
push
scas
ret
cmp
insb
test
inc
sub
jae
xor
popf
push
test
das
mov
imul
nop
dec
xchg
or
or
dec
movsb
imul
mov
pop
or
push
add
adc
adc
sub
fwait
repnz
xchg
mov
inc
sub
and
xor
or
in
or
scas
or
mov
int3
adcb
fidivrs
ds
xor
mov
lock
mov
fwait
pop
lods
movsb
mov
pusha
push
inc
add
jge
dec
jl
aas
xorl
fistl
outsl
jl
push
pop
dec
add
push
push
mov
movsl
jo
call
cli
push
jae
mov
ja
inc
scas
adc
in
pop
inc
fmul
and
sub
mov
adc
cli
in
loope
add
enter
sub
enter
jnp
mov
loop
subb
insl
sbb
sub
push
arpl
pop
mov
xchg
pop
jl
jne
sahf
jl
pop
cmpsb
shll
push
rolb
sbb
mov
adc
and
ds
and
jbe
mov
sbb
and
mov
mov
mov
pop
sbb
jno
scas
out
ffreep
xchg
mov
lods
sbb
pop
mov
test
pop
xchg
jg
jb
loop
les
stc
test
out
mov
adc
ss
gs
cmp
dec
mov
inc
cli
pop
arpl
jae
hlt
cmp
sub
sub
out
addr16
add
xor
add
outsl
adc
fsts
mov
or
fistpll
les
xor
cmp
out
in
sub
add
in
inc
add
pop
sbb
loopne
jle
pop
je
in
inc
ja
dec
les
jb
rep
in
jmp
sbb
dec
add
xlat
xchg
int3
jae
pop
sub
mov
add
xchg
or
aad
imul
jns
jecxz
fcomps
addr16
in
roll
jmp
mov
stos
mov
or
call
sbb
cmp
or
ret
mov
pop
or
mov
lret
inc
inc
and
inc
add
mov
divb
jae
out
dec
mov
mov
cmp
sub
pushf
and
mov
leave
mov
je
fcomi
mov
cld
rorb
mov
ds
mov
stc
jno
sbb
dec
das
lods
jno
rcr
in
sub
mov
jne
add
inc
sbb
dec
and
stc
ljmp
xor
mov
sub
or
add
add
lock
cmc
adc
adcl
push
clc
cmp
rclb
jecxz
insb
shr
inc
lcall
inc
stos
dec
out
ret
lret
xchg
adc
seto
sbb
jmp
pop
xor
jo
mov
mov
stos
jne
jmp
inc
pop
dec
sub
lds
movl
fwait
loopne
inc
push
xchg
pop
dec
add
sub
incl
ds
bound
sbb
jg
in
arpl
xchg
mov
pop
idivl
sub
jne
mov
mov
fbstp
mov
loope
pop
add
jne
dec
stc
mov
pop
mov
xchg
jno
lahf
jmp
das
mov
cmpl
mov
sub
add
dec
addr16
xlat
stos
into
jecxz
and
and
clc
cltd
adc
cmpsb
pop
jle
or
in
mov
xchg
inc
filds
jmp
ret
imul
scas
inc
ss
aaa
jae
cmp
jns
test
xor
pop
dec
xchg
popa
in
sbb
jne
imul
popf
scas
mov
jg
adc
idivb
repnz
insb
leave
sub
hlt
hlt
nop
push
icebp
arpl
mov
lret
or
push
inc
or
push
add
add
insl
in
pop
int3
mov
rol
or
mov
or
add
cmp
dec
movsb
aas
mov
push
xchg
scas
nop
jbe
adc
sbb
add
add
aam
jno
or
jl
jne
dec
jno
inc
push
icebp
rcrb
add
jo
sahf
push
scas
fwait
xchg
push
inc
jns
test
inc
and
inc
cmp
pop
xor
inc
loop
enter
daa
mov
jge
mov
cmpsl
sub
lock
cmp
adcl
mov
pop
pushf
lds
cmp
movsl
mov
xor
aad
test
imul
sbb
xor
in
imul
or
pusha
mov
pop
jbe
outsb
cmc
jl
adc
std
out
xor
push
dec
pop
mov
pop
xchg
and
enter
mov
out
int
daa
inc
mov
lret
mov
push
sub
mov
mov
sahf
gs
test
negl
jg
lret
mov
xchg
fs
mov
dec
out
arpl
or
clc
not
scas
xchg
cli
cmp
pop
xor
dec
cmp
testb
lret
leave
inc
outsb
cmc
leave
loop
xor
icebp
or
pop
push
or
xchg
inc
xchg
add
and
xchg
cmp
out
push
fldcw
mov
data16
lods
mov
mov
gs
repz
xchg
xchg
cmp
or
fnstcw
cmc
cmp
xchg
mov
xchg
in
mov
and
andb
pop
xor
sbb
outsb
and
aad
lods
std
nop
push
call
xorb
aaa
dec
adc
je
inc
and
mov
adc
loope
call
lcall
andl
test
scas
xchg
cmp
sbb
inc
pop
sbb
aas
fistps
fidivrl
test
in
stc
mov
std
cltd
adc
cwtl
push
push
lret
mov
ja
mov
pop
dec
dec
cld
sti
push
push
lret
sub
add
lock
inc
das
mov
lods
shrb
mov
ret
add
repz
ss
dec
sbb
stos
sbb
les
or
cmpsl
pop
lods
push
cld
push
mov
dec
inc
les
cmp
cmp
inc
sub
cltd
sub
int
push
pop
and
btrl
or
sbb
jbe
mov
xchg
inc
nop
roll
fistps
inc
stos
loop
out
es
push
xchg
pop
or
push
jmp
ja
out
xchg
and
or
mov
mov
shlb
test
and
xchg
mov
xchg
inc
push
add
fwait
cmovnp
aaa
cs
add
inc
xchg
in
cmpsb
pop
jg
adc
jns
pop
and
pop
push
xchg
ljmp
pop
out
mov
jp
mov
mov
fninit
mov
in
fmuls
jle
jne
adc
scas
in
out
bound
xchg
xchg
inc
push
out
jmp
cli
pop
test
mov
cmp
cld
inc
dec
adc
mov
inc
out
andb
pop
imull
pop
jnp
sbb
jle
push
fsub
jmp
xchg
pusha
cs
mov
ret
ret
push
ds
inc
jbe
jae
adcb
nop
popf
mov
push
pop
push
je
ret
xlat
or
sbb
jb
imul
and
mov
sbb
ret
iret
out
cwtl
repnz
clc
out
leave
lahf
or
push
arpl
xor
sbb
push
pop
or
add
cmp
pop
or
lcall
insb
shrb
mov
push
sub
or
in
in
mov
jge
sbb
sbb
inc
stos
cmp
outsl
jno
adc
jl
insl
je
loopne
and
aam
mov
jo
imul
sbb
ljmp
or
sub
cmpsb
mov
aaa
in
sub
enter
daa
mov
push
push
xor
loope
sbb
sub
insl
add
mov
xchg
ds
mov
cmc
and
pop
sub
push
dec
fstps
enter
movsb
push
cmc
xor
das
xchg
imul
lret
js
sub
out
lcall
arpl
jle
dec
sub
rorb
add
test
fcomps
push
add
push
mov
out
and
flds
ret
int
loope
sub
and
dec
shll
and
daa
push
mov
test
xlat
push
jg
and
in
stc
push
inc
adc
mov
sbb
sbb
ret
rcrl
notl
icebp
cmp
and
ljmp
mov
inc
xor
mov
outsl
shlb
pusha
imul
stc
lretw
lods
add
in
mov
test
sub
xchg
sbb
sbb
and
aam
and
inc
inc
mulb
push
lcall
mov
inc
xor
mov
test
dec
andl
xor
dec
cmp
cld
add
adc
xchg
pop
cmp
jno
mov
xor
push
cmp
cs
lock
push
sbb
dec
xchg
pop
dec
jb
and
je
call
push
mov
and
call
sbb
addl
or
fistl
fisttps
inc
ja
aas
jle
jae
fisttps
mov
adc
adc
mov
in
cmp
loope
inc
fildll
cwtl
adc
mov
ss
lock
es
lret
xchg
pop
dec
mov
xor
mov
mov
lds
push
lods
rolb
les
cli
mov
xchg
mov
sahf
insl
sbb
dec
mov
ljmp
daa
lods
rcr
sarl
jle
and
inc
test
or
pop
xor
cltd
arpl
test
xchg
push
int
sbb
fstpl
pop
xchg
inc
push
negb
dec
int3
rcl
cltd
xchg
fcompl
jno
in
cmovns
mov
xchg
mov
sbb
dec
js
xor
fstps
mov
mov
ret
sbb
dec
and
test
push
mov
push
add
inc
add
fimull
in
fwait
mov
add
pop
loop
incl
bound
dec
in
cld
inc
xchg
inc
add
mov
pop
outsl
mov
mov
mov
add
shll
mov
jg
push
lock
mov
mov
mov
pop
inc
loope
scas
jae
xchg
adcl
out
jmp
sub
testl
mov
andl
into
jle
jnp
push
in
push
daa
arpl
repnz
pusha
leave
cmpsl
sub
inc
and
mov
push
ret
div
jae
adc
pop
not
popf
sahf
cmc
mov
mov
xchg
ficoml
dec
dec
sbb
inc
fwait
imul
xor
andb
adc
adc
repnz
aad
leave
push
sarl
es
and
cmc
or
pop
leave
mov
sub
add
pop
fcmovne
inc
mov
fisubs
xchg
rol
test
mov
and
pop
fisubs
xlat
int3
jbe
dec
ret
jge
pop
or
jo
and
xorl
jno
cmp
dec
dec
xor
mov
xlat
xor
addb
pop
sbb
dec
or
fadd
push
inc
pop
sbb
movsb
in
adc
or
je
daa
mov
subb
call
sub
mov
adc
mov
outsb
shlb
nop
aaa
and
arpl
imul
mov
add
fdiv
xor
into
mov
arpl
pop
icebp
xor
dec
jecxz
pop
arpl
jp
lds
lea
in
imulb
and
adc
mov
ja
jge
sahf
mov
inc
cmpsb
mov
nop
and
roll
lds
filds
cltd
lret
xchg
mov
push
lcall
sbb
test
mov
jg
test
loop
pop
loope
int
lret
fs
ja
adc
xor
iret
pop
push
cmp
jle
notl
add
mov
fcomps
or
and
cmc
push
cmp
xor
jb
outsl
mov
enter
xchg
imul
cld
cmp
xchg
aam
ljmp
out
mov
sbb
sbbl
jl
addr16
in
testb
xchg
sbb
rcl
in
inc
dec
scas
es
les
stos
repz
xchg
xchg
aas
push
scas
sbb
xlat
stc
xlat
push
adc
mov
cld
jmp
cmp
cs
cmp
nop
or
mov
cmc
xchg
jb
pop
sbb
je
loopne
jecxz
sti
or
movsl
push
imul
lret
cwtl
rcrb
xchg
fcmovnb
popf
mov
and
pop
ret
sbb
inc
out
aas
sbb
xorb
sbb
not
fisttpl
add
out
pop
cwtl
int
ret
popa
and
or
fwait
jae
push
scas
ljmp
sbb
push
lock
shl
push
and
aam
popf
inc
ret
and
es
sub
insl
add
jle
adc
cmpsl
mov
je
stos
pop
pop
popa
insl
sub
mov
mov
pop
test
pop
jns
dec
add
jno
lcall
mov
divl
add
mov
xchg
cmpb
sbb
add
shl
je
pop
ljmp
stos
faddl
repz
in
inc
xor
ljmp
shrd
xor
dec
cmpsb
xor
fwait
ljmp
clc
lods
dec
jmp
nop
rolb
add
icebp
or
cmp
insl
xchg
aam
jge
fiadds
jns
jae
in
in
aaa
incl
in
inc
and
jo
sub
pop
pop
test
ja
xchg
mov
mov
aas
adc
rol
dec
add
jne
int3
mov
fs
push
out
and
test
cmpsb
ss
xor
and
pop
out
xchg
and
pop
push
sub
repnz
stos
daa
pop
dec
and
mov
xor
push
fdivrs
and
in
shll
fs
fbld
repz
mov
inc
push
int3
dec
jae
loop
push
and
lds
sbb
push
fimull
je
data16
sbb
ljmp
in
ljmp
ljmp
in
out
leave
lea
pop
hlt
jno
and
inc
daa
sbb
or
fldcw
icebp
inc
pop
adc
aam
sahf
jl
int3
cs
pop
xchg
loopne
inc
sbb
rol
lahf
jp
mov
cmp
xor
ja
test
push
adcl
mov
jge
sbb
dec
aaa
inc
scas
pusha
cmp
test
dec
mov
lea
xor
fstpt
sub
mov
test
jnp
ljmp
in
notl
mov
daa
mov
stc
push
aas
and
js
pop
sub
in
cmp
shll
fcomi
push
and
and
mov
xorb
sbb
xor
add
push
push
xor
fiaddl
sbb
or
mov
push
lcall
rcr
aam
add
aam
fwait
outsb
push
in
adc
mov
or
or
scas
and
xor
sbb
and
cwtl
push
fs
ffree
jecxz
or
pop
call
test
mov
loop
repnz
stc
test
jbe
mov
xchg
adc
cmp
cmp
jl
adc
cli
rorl
xor
jne,pn
adc
adc
jb
icebp
cmc
push
stc
pop
xor
dec
xor
aam
cmp
mov
adc
outsb
out
add
test
shl
bound
outsl
cli
mov
mov
sub
jnp
mov
out
jbe
sti
xor
decb
lods
adc
pop
lock
inc
pop
iret
scas
fldenv
clc
les
repz
imul
inc
xor
pop
mov
je
pushf
lahf
or
jmp
in
xchg
cmp
aas
enter
stc
push
dec
push
xor
inc
xchg
dec
leave
mov
jecxz
dec
fcmovb
test
cltd
lea
std
xor
xchg
cli
lret
pop
dec
add
pop
mov
int
and
cmp
pop
xchg
push
imul
jbe
aas
mov
jmp
icebp
and
jle
shrl
sub
std
mov
mov
pushf
mov
icebp
in
inc
cld
jl
sub
jne
push
mov
or
lock
or
sub
xlat
sub
xchg
or
mov
jp
push
imul
push
inc
push
cmpsl
scas
scas
mov
sbb
cmpsb
jae
test
bound
pop
mov
sbb
cwtl
imul
cltd
shll
push
test
push
push
inc
mov
sub
clc
daa
lret
shll
inc
js
pop
stos
icebp
add
dec
add
xchg
xor
jg
jl
test
or
xor
or
or
fisttpll
dec
std
lock
leave
dec
in
dec
push
mov
test
movsl
arpl
hlt
in
ljmp
add
and
dec
add
xchg
mov
fwait
lret
jns
mov
rcll
mov
cmpl
jno
mov
mov
cmpsl
lock
xor
jbe
add
jecxz
pushl
xchg
mov
popf
cld
xchg
pop
mov
adc
sub
in
add
movnti
stos
lcall
insb
movsb
mov
jnp
adc
mov
pusha
decl
jl
jg
imul
jg
push
jae
clc
ficoms
in
rcrb
push
jbe
push
xor
sti
mov
mov
arpl
cmpsl
mov
scas
dec
push
scas
push
arpl
iret
add
leave
repnz
sub
leave
add
outsl
hlt
mov
in
xchg
inc
sub
pop
or
push
sub
xlat
popa
int3
or
xor
outsb
int3
sbb
pop
mov
cld
fsubrp
int3
popf
lds
push
sarb
sub
cmp
xchg
mov
imul
rorb
cmp
dec
and
test
aaa
add
jmp
fcmovu
insb
jno
negb
dec
sub
fs
xor
ss
dec
scas
pop
mov
push
xchg
lock
sti
clc
rcll
or
cmpsb
adc
cmp
or
and
scas
scas
stos
push
push
sbb
ror
sub
fldl
cmp
push
repnz
and
orb
mov
lds
mov
pushf
pop
aas
aad
js
or
lcall
jg
push
sub
cmp
sbbl
mov
mov
mov
mov
leave
and
cmp
shrl
dec
icebp
pop
xchg
mov
or
jp
mov
sbb
inc
test
jns
andb
pop
jg
push
shl
adc
in
cmp
rcll
push
lret
push
mov
repz
leave
adc
rorb
or
push
lea
cmpsb
test
cmp
cmp
or
leave
into
push
fdivs
cmc
in
leave
xor
je
outsl
outsl
sbb
adc
out
ja
shll
mov
rol
lods
mov
in
iret
out
xor
sub
mov
pop
gs
sti
loope
loop
lods
test
jmp
int3
lea
outsb
and
fstps
dec
push
repz
mov
sbb
je
xlat
shrb
call
adc
inc
pushf
dec
lock
cs
xor
cmpsb
nop
shlb
dec
mov
pop
jb
mov
push
je
int
jecxz
fildll
lea
mov
adc
lahf
mov
mov
addl
sub
pop
cmp
dec
inc
enter
pop
and
cwtl
sbbl
mov
arpl
jns
push
testb
jns
inc
lods
mov
pop
xor
icebp
mov
xchg
dec
lret
in
orl
jecxz
cs
pop
pop
lret
sar
stc
in
sub
push
aam
fists
aam
imul
cwtl
imul
sbb
fwait
inc
shrl
mov
mov
pop
out
mov
mov
add
xchg
js
cltd
or
popa
mov
inc
mov
fstl
xchg
mov
bound
fistpl
lret
cs
out
mov
cmp
push
negb
imul
pop
mov
or
adc
xor
mov
mov
int3
push
cmovge
dec
hlt
xchg
dec
cld
dec
out
fwait
inc
movb
or
arpl
lret
out
push
ret
adc
add
scas
dec
dec
jmp
cmpsb
call
jns
and
xor
add
mov
mov
jge
ror
ss
iret
sarb
scas
add
push
and
mov
std
jp
leave
adc
jo
fiadds
xchg
nop
arpl
xchg
test
xchg
es
or
xchg
dec
lock
call
add
or
sbb
jnp
fwait
int3
jle
cli
mov
pop
pop
sub
fistps
andb
mov
pop
jae
push
adc
popf
cmp
mov
push
jo
lret
fisubrl
out
mov
mov
repz
stos
lret
stos
cmpsl
push
adc
inc
or
bound
repnz
movsl
mov
hlt
pop
std
arpl
movb
loopne
xor
pop
push
push
xor
or
dec
add
sub
jb
mov
fimuls
imul
or
mov
les
in
js
imulb
lret
push
and
pop
jbe
add
or
sbb
sub
jno
mov
jl
xchg
sub
in
sub
xor
xchg
pop
fisubrs
adc
push
cmp
inc
or
sub
lds
enter
daa
scas
iret
test
sbb
cmpsb
ljmp
sub
stos
mov
sub
sbb
popa
ss
sub
sbb
add
xor
ja
dec
pop
data16
js
jle
pop
and
cltd
push
lret
fsubrl
cmp
mov
push
outsb
in
and
sbb
push
rolb
lcall
mov
or
mov
insb
xchg
and
mov
fsubrl
mov
imul
xchg
or
adc
mov
push
and
jecxz
adc
mov
mov
jb
mov
stc
repnz
shll
push
adc
in
ss
outsb
loop
push
sbb
fcomi
xor
xor
ret
mov
jp
cmp
xchg
lods
cmpsb
mov
dec
xchg
jge
dec
in
aad
jp
test
lret
pop
adc
cs
add
data16
push
and
lahf
fmulp
mov
fsubp
lea
sub
xor
or
insl
in
les
lods
sti
nop
out
rorb
repnz
adc
dec
inc
inc
subl
cmp
xchg
pop
xchg
mov
fstpl
scas
loope
xlat
paddd
pop
or
mov
rcl
pushf
cmc
cmpsl
or
fdivl
int
push
nop
fwait
imul
jb
xor
mov
lods
rorl
scas
inc
stos
in
dec
call
adc
orl
test
fisttpl
mov
fstpl
mov
aas
cli
iret
jg
sub
mov
cmp
dec
ror
sub
testb
std
fdivr
mov
mov
popf
leave
mov
xchg
and
lret
push
push
mov
fs
call
xchg
das
out
push
ror
xor
outsb
add
aam
jle
ret
iret
movsl
dec
es
dec
xor
or
dec
add
andb
and
popa
mov
xchg
lods
jg
loope
sbb
cmc
mov
insl
pop
add
scas
cmpsl
ss
aas
push
add
mov
cmp
sbb
dec
push
flds
neg
jns
cli
clc
popf
scas
ds
aas
pop
rcrl
out
shl
ljmp
test
push
stos
xchg
mov
mov
out
mov
decb
mov
cld
xor
mov
adc
dec
push
or
test
mov
xchg
and
test
inc
pop
dec
sub
push
xor
push
add
lret
inc
xchg
mov
jns
das
pop
in
push
imul
cmpsb
les
pop
lea
stc
ja
xor
jp
cli
lock
loop
mov
ja
lahf
jne
sar
mov
jmp
out
mov
sub
jmp
icebp
sarb
out
push
in
adc
jns
or
scas
sbb
insb
jp
mov
in
jle
shrl
xor
ret
ret
ret
dec
pop
in
jl
inc
js
jl
out
out
mov
push
cli
popf
arpl
xchg
push
scas
sbb
fisubl
sub
dec
shll
scas
push
imul
or
repnz
xchg
leave
repnz
hlt
push
sbb
inc
xor
test
dec
fcmovne
inc
aad
inc
or
lret
arpl
pop
out
sub
or
lds
rcr
shl
test
cmc
sub
cmp
jbe
jo
pop
jbe
and
mov
pop
lret
or
jg
sbb
jno
inc
jne
push
mov
push
inc
out
sahf
xor
in
mov
push
cmp
jmp
in
sub
je
sbb
or
lods
inc
test
daa
lods
je
push
xchg
adc
mov
dec
ss
in
ds
mov
cmp
cld
pop
xchg
lahf
in
rolb
fildl
stos
xor
repnz
cmp
xchg
pop
test
cmp
lcall
aad
aad
pop
sub
loope
adc
pop
test
stc
mov
mov
idivb
jo
add
outsb
cltd
push
shrl
loop
or
pop
pop
xchg
mov
shrl
cmpsb
sbb
sub
sahf
aaa
mov
test
xchg
stos
adcb
jg
sub
loop
testl
test
adc
add
push
test
dec
sub
insb
and
xor
cmp
or
or
adc
sbb
jae
mov
mov
vmovddup
lea
dec
dec
adc
mov
pop
loopne
lods
xchg
mov
out
mov
cwtl
mov
das
mov
pop
repz
lods
adc
mul
add
pop
dec
jl
inc
xchg
addr16
or
mov
xchg
dec
popa
sbbl
dec
push
es
mov
mov
pushf
jmp
loope
shlb
adc
test
jno
push
jb
std
inc
dec
negb
clc
or
jecxz
aam
mov
out
lea
jb
pop
add
xchg
add
mov
add
dec
in
outsl
fstpt
add
scas
addl
xchg
cltd
sbb
mov
hlt
mov
shl
rcll
xchg
push
testb
dec
cwtl
mov
fs
mov
imul
test
xor
shlb
cltd
addr16
das
lds
xlat
shlb
outsb
outsl
aam
jo
ret
pop
dec
ds
cmp
repz
add
cmpsl
lods
pop
mov
popa
leave
jmp
hlt
mov
fadd
sti
and
dec
pop
das
pop
cmc
xor
add
jns
test
jecxz
jmp
sysret
frstor
ss
jle
je
enter
dec
pop
ret
aaa
ret
insb
in
out
js
cmpsb
xchg
push
pop
inc
push
or
das
add
mov
xor
sbb
mov
shl
mov
test
pop
into
xchg
mov
dec
int
jnp
hlt
mov
or
fisttpl
fwait
sub
push
or
loopne
in
repz
pop
bound
loopne
in
mov
mov
cmp
loope
dec
cmp
sbb
jp
stc
push
mov
mov
mov
jle
loopne
lea
jne
out
jb
shrb
inc
out
pushf
repnz
stos
in
mov
push
cmp
lcall
or
lock
mulps
scas
push
mov
jnp
repnz
in
outsb
push
shlb
push
jne
ret
jge
and
cld
inc
subl
mov
lds
mov
mov
out
mov
ficoml
sub
test
imul
jno
cld
push
cmp
int
in
jnp
and
repnz
hlt
popf
lea
arpl
jne
ljmp
push
pop
fwait
or
and
fidivrl
sbb
rcll
stos
rorb
push
mov
mov
cmpb
shll
loop
jbe
mov
pop
sbb
jae
aaa
ds
jno,pt
and
jl
mov
stc
push
mov
test
lret
cld
scas
mov
rcll
in
out
loopne
lahf
push
iret
or
inc
es
inc
cmpsb
fwait
inc
inc
in
xchg
sbb
enter
daa
lods
popf
js
mov
outsb
loope
leave
mov
cmp
stos
adc
and
or
add
imul
out
jns
shl
adc
std
inc
jp
mov
lock
push
repz
sahf
sub
lcall
sahf
faddl
xchg
xor
jb
adc
cli
mov
pop
lods
aad
lods
in
mov
or
mov
daa
repnz
std
xor
aam
test
mov
pop
push
pop
adc
ror
inc
outsb
push
sarl
cmpsl
mov
mov
scas
test
mov
xorb
jg
lahf
mov
int3
pusha
add
pusha
mov
fs
test
push
addr16
cmp
and
add
cli
lahf
jl
xor
out
pop
cmp
das
push
or
mov
cmc
cmp
shlb
push
sbb
or
outsl
adc
mov
imul
push
data16
rorb
mov
pop
sub
adc
sti
sti
out
add
sbb
or
pop
insb
mov
inc
cmpsl
push
push
fnstcw
push
imul
mov
ficoml
push
imulb
int3
movsb
xlat
lea
in
outsb
sub
adc
sbb
dec
xchg
cli
jmp
mov
and
lahf
nop
push
sub
rorb
jb
clc
loope
movsl
scas
divl
jle
and
mov
fwait
lea
test
adc
out
lds
dec
sarb
push
pop
and
ja
sbb
cld
aas
cmp
mov
push
in
out
inc
fdivp
into
idivb
sub
cwtl
je
cltd
mov
scas
mov
icebp
inc
fstl
sub
loop
xor
pop
imulb
mov
pop
mov
hlt
mov
das
movsb
call
subl
mov
pop
in
xor
es
std
lods
insl
xchg
xchg
cmpsl
stos
inc
ss
or
dec
adc
jnp
xor
in
add
add
xchg
sub
imul
mov
xchg
out
movl
mov
jnp
shll
dec
push
stos
xchg
outsl
out
xchg
dec
hlt
cmpsl
push
call
sub
xor
or
lret
mov
lods
dec
in
cmc
fwait
test
ret
ja
push
mov
dec
shlb
mov
sub
fwait
pop
daa
stc
push
lods
jl
add
add
jp
bound
or
in
cmpsl
adcl
sub
jecxz
add
push
ja
xchg
jp
lods
pop
mov
scas
iret
mov
in
jge
dec
jo
pop
jne
jb
mov
jp
out
jnp
xor
jmp
xchg
scas
xorl
fsubrs
fldcw
addr16
jae
out
and
and
insb
push
or
jmp
in
pusha
imul
ret
es
pop
jmp
inc
mov
dec
jae
imul
push
lock
popf
mov
cltd
mov
sub
divl
xchg
sbb
adc
imul
scas
aam
mov
adc
int3
add
mov
leave
loopne
mov
arpl
or
or
inc
fcoml
sarl
scas
add
sub
pop
inc
pushf
mov
je
cli
lds
inc
shlb
push
mov
sbb
dec
movsb
xchg
js
push
push
mov
jbe
lret
inc
jge
xchg
sbb
scas
pop
aaa
std
inc
fidivrs
cmpsb
and
movsl
jl
sub
mov
or
xor
mov
sbb
fisubs
adcl
andb
fsts
div
dec
daa
stos
dec
jo
and
les
or
cmp
inc
ds
test
movsl
outsb
sub
xor
test
adc
mov
add
les
xor
std
push
pop
fcmovne
jge
mov
mov
lcall
sub
sub
push
outsb
or
fs
test
mov
add
pop
pusha
mov
add
and
rclb
xlat
icebp
mov
sub
lea
lret
inc
cmp
mov
fldl
jge
mov
orb
aam
pop
pushf
stc
pop
pop
iret
fs
ss
xchg
sub
loopne
aaa
test
mov
cmp
sub
into
loope
xor
cltd
lds
pop
push
outsl
jmp
push
adc
push
imul
mov
pop
mov
xchg
mov
sub
xchg
push
jns
in
add
ss
cmp
shll
gs
cmp
pop
mov
aas
inc
mov
lods
out
les
jecxz
xchg
rcrl
int
pusha
pop
xchg
xlat
int3
mov
pop
and
sahf
adc
repz
test
jmp
dec
test
xchg
adc
dec
das
divb
daa
orl
mov
mov
cmc
mov
fimuls
std
cwtl
xchg
xchg
mov
push
pop
faddp
dec
mov
stos
lcall
and
inc
xor
fnstsw
xlat
in
dec
mov
gs
and
pop
std
shll
ds
std
shll
cwtl
das
add
mov
jge
mov
pop
lock
cld
push
pop
outsl
lret
mov
xchg
mov
shll
aaa
das
or
rolb
sbb
push
paddq
stc
ret
jl
icebp
es
mov
dec
cmc
mov
movsb
ljmp
fwait
lods
rcr
mov
and
mov
xorb
pop
xor
pop
add
add
cltd
in
jecxz
jbe
push
mov
adc
and
sar
pop
scas
xchg
cld
js
sbb
sbb
cltd
pop
add
push
out
ds
xchg
xchg
out
xchg
mov
movntq
ja
sbb
xor
iret
fbld
fsubrs
sbb
shrb
lods
dec
mov
lcall
mov
push
push
dec
xor
inc
stc
add
inc
out
sahf
je
bound
sub
lcall
xchg
xchg
mov
jbe
jp
adc
mov
lret
mov
mov
dec
push
mov
cwtl
mov
fists
pop
mov
xchg
fdivl
movsl
xchg
push
push
addl
out
pop
cmp
aam
xor
sub
xchg
cmpsb
and
sbb
mov
pop
es
pop
ret
in
adc
pusha
push
pop
xor
sbb
lock
jbe
xchg
cwtl
loope
cltd
scas
popa
jae
popa
mov
popf
fcomps
mov
insb
insl
lcall
sbb
xor
push
inc
hlt
scas
aaa
add
push
pushf
adc
dec
sub
ficoms
popf
hlt
xor
arpl
cli
pop
or
mov
pushf
sub
shl
jge
sub
int3
mov
push
pop
jae
ficoms
xchg
int3
pop
sbb
inc
adc
dec
and
aad
movsb
and
fnstenv
dec
mov
sbb
push
std
cmp
mov
push
jl
decb
push
in
loop
xor
std
mov
scas
jb
ficoml
xchg
popa
test
gs
adc
cmpsb
mov
jp
enter
daa
stos
jnp
push
inc
loopne
add
sub
sub
ds
movsl
add
dec
cmc
lahf
inc
std
inc
sub
pop
sbb
out
xor
mov
subl
js
push
cli
pop
sbb
mov
push
es
js
sub
mov
jo
jb
cmp
stos
push
mov
mov
pop
cld
mov
xchg
or
out
push
fiaddl
int
sub
rolb
rcll
sub
inc
shrl
mov
fmull
and
test
and
cmpl
inc
loop
iret
push
stc
into
cmpsl
andb
adc
das
xchg
cmp
fwait
dec
mov
cli
add
and
orl
into
cmc
enter
mov
push
outsl
lret
adc
jnp
imul
add
fdivl
cmp
inc
mov
int3
out
fs
xchg
or
mov
jo
push
sti
dec
cs
pop
or
mov
rcll
ret
inc
int
cmp
lods
lods
xor
sahf
push
jecxz
ret
xchg
xchg
imul
insb
bnd
fwait
push
in
or
pop
aam
mov
sbb
add
jmp
test
fst
jmp
cmp
mov
jecxz
or
enter
sbb
inc
shl
mov
out
call
adc
mov
mov
xor
inc
or
or
pop
imul
aas
jbe
cmp
ja
ds
push
data16
push
stc
cmp
push
aas
cwtl
ljmp
mov
out
es
cld
jle
dec
lret
setno
mov
push
clc
lock
mov
rcrb
and
aam
inc
xchg
ret
or
arpl
insl
push
add
dec
lock
ljmp
push
lods
sub
fidivrs
inc
das
xchg
and
sbb
pop
pop
push
sbb
add
test
cmp
mov
lods
pop
push
in
adc
addr16
xchg
cmp
xchg
sbb
inc
pop
rcll
aaa
pop
lods
icebp
bts
mov
mov
dec
dec
push
sahf
mov
push
std
fildl
or
sub
in
hlt
xchg
mov
dec
mov
dec
mov
push
xor
inc
mov
lds
push
repnz
xchg
loopne
add
xor
cmp
lods
je
stos
lret
ljmp
mov
push
mov
jns
sbb
jmp
or
mov
lret
test
dec
ss
das
jne
mov
and
xchg
scas
dec
adc
addr16
xchg
sbb
mov
and
jb
scas
jo
or
adc
addr16
popa
stos
dec
lock
hlt
xor
insb
xor
jle
shlb
mov
movsb
je
push
xor
inc
movsb
iret
jl
sub
mov
jbe
jecxz
mov
jp
stos
xchg
or
xchg
jl
sbb
mov
xor
lcall
adc
push
iret
cmp
adc
leave
into
insb
mov
arpl
sub
or
ss
inc
or
dec
add
xchg
mov
out
mov
rcrb
inc
stos
inc
xlat
enter
add
sbb
jge
pusha
int
dec
loop
aaa
jnp
cmp
hlt
jno
lods
jl
imul
iret
jno
xor
pop
or
scas
push
loop
push
test
push
push
xor
inc
roll
cmpsb
and
leave
in
dec
ljmp
daa
test
inc
