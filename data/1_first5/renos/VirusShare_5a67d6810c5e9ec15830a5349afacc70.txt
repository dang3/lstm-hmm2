add
add
add
into
add
mov
add
add
add
add
and
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
add
add
add
ja
jmp
dec
add
sahf
fildl
cs
add
add
add
jecxz
add
add
xchg
add
add
add
add
add
clc
add
add
add
nop
add
add
add
add
add
add
mov
add
add
add
ja
add
add
add
add
add
or
add
into
add
add
add
nop
add
add
add
add
add
add
add
mov
roll
dec
sub
sub
orb
dec
addl
pop
dec
dec
xor
enter
mov
mov
pop
or
mov
ret
jecxz
jecxz
cmpb
lahf
arpl
ljmp
cmp
mov
xchg
jns
xchg
cld
fs
cmpb
adc
or
cmpb
ss
mov
xchg
insb
dec
dec
movsl
int
xchg
repnz
int
mov
js
lock
and
stos
ljmp
in
rolb
sub
fidivrs
cltd
xchg
movsb
cmp
dec
xchg
pusha
bnd
int
xchg
leave
mov
jae
ret
lcall
std
pop
in
addl
jns
xchg
jo
inc
xchg
lods
lods
aam
out
daa
xchg
cmpl
jns
dec
cwtl
dec
lcall
je
cwtl
out
sub
push
dec
es
xor
inc
std
cmpsb
push
lret
mov
mov
les
ds
cmpsl
add
mov
and
sub
fs
shrb
in
lock
mov
cmpsl
popf
into
add
ljmp
aam
cmp
push
jp
leave
pusha
xor
in
pop
inc
mov
xchg
cmc
je
push
clc
and
dec
cmp
cwtl
lret
mov
xchg
sub
sub
pop
push
push
sarb
loope
mov
ss
push
dec
xchg
je
adc
push
or
stc
pop
cmpsb
pop
sub
jo
sahf
push
imul
mull
into
push
icebp
scas
push
xor
jns
leave
lea
dec
mov
lds
cmpb
add
jno
jmp
dec
repz
cmp
mov
sahf
mov
mov
mov
add
and
sub
xchg
icebp
add
call
xchg
jl
and
jb
push
push
cld
fndisi(8087
cmp
shlb
out
dec
lods
mov
outsb
jne
mov
leave
cwtl
and
pop
pop
lahf
icebp
push
adc
lock
outsl
xorl
xlat
mov
adc
sahf
fisubs
jno
mov
in
mov
push
jnp
shlb
or
mov
mov
jp
adc
hlt
call
pminsw
pushf
or
or
sbb
ret
and
jo
xor
fisttps
inc
fs
cld
dec
xlat
lods
jno
ja
aaa
daa
mov
cmc
mov
xchg
xchg
xorl
mov
push
lret
adcl
jmp
fisubrs
pop
fs
arpl
or
insb
push
jns
mov
mov
push
sbb
dec
push
push
jne
dec
test
pop
inc
or
lea
hlt
fucomip
bound
enter
in
insl
cli
mov
imul
mov
out
cmp
push
xchg
jae
pop
jo
repnz
shlb
jb
cmp
push
subb
push
inc
sahf
pusha
mov
loopne
out
inc
cmpsb
lret
pop
cmc
bound
mov
out
andb
xor
mov
stos
adc
xlat
xchg
call
ss
cltd
shlb
gs
dec
ss
fildl
inc
loop
mov
in
lds
loop
xchg
fcomps
inc
and
int
js
dec
les
mov
es
rorl
fiaddl
mov
push
movsl
cld
pop
out
pusha
out
imul
int3
inc
or
inc
xorb
fcomi
loope
mov
adc
iret
pusha
imul
stos
or
dec
dec
ror
xor
adc
das
lcall
mov
adcl
and
inc
es
ficoms
icebp
mov
push
pusha
sbb
test
loop
dec
push
lods
lahf
push
fisubl
loop
xorl
fdivr
and
jmp
mov
jo
inc
mov
in
sbb
push
mov
or
xchg
clc
aad
xor
mov
clc
ja
cmc
mov
out
in
lcall
and
insb
rcrl
or
mov
roll
in
mov
cmp
lret
cmovl
shl
push
daa
fcoml
sbb
pop
and
cmc
xchg
push
test
shll
iret
xchg
mov
push
adc
mov
gs
addl
shr
push
roll
mov
in
pop
sub
add
inc
frstor
je
mov
pop
je
pop
std
fstps
out
sti
mov
mov
jmp
jne
and
lcall
into
pusha
fsubr
rorl
loope
inc
ss
add
add
jge
fadds
insl
or
out
or
lods
add
int
xor
mov
leave
mov
mov
arpl
xlat
jmp
ficompl
call
jns
loopne
jg
jle
test
push
mov
mov
inc
popa
arpl
mov
mov
pop
dec
pop
inc
pop
stc
mov
mov
jp
cmp
xchg
test
loop
dec
lods
outsb
mov
sbb
icebp
ljmp
lret
add
add
cld
loopne
push
add
mov
mov
jle
xchg
out
loope
lret
sar
repz
cmp
mov
and
jb
test
stc
dec
xchg
mov
xchg
xchg
clc
mov
je
test
push
aas
div
xor
shlb
lret
push
inc
inc
outsb
xadd
insl
in
xor
rorl
push
loope
iret
icebp
jecxz
lret
and
outsl
sti
notl
dec
mov
stos
push
xchg
mov
mov
pusha
iret
loop
push
ret
shl
adc
jmp
jmp
or
adc
orb
enter
cmovno
pop
add
pusha
inc
stc
insl
mov
rclb
dec
arpl
xchg
pop
mov
loop
es
dec
inc
int
jae
fbstp
and
xorb
ret
shl
loop
faddl
das
divl
sbb
jno
adc
jnp
xchg
shr
fcoml
fildl
mov
dec
adc
rcll
test
mov
pop
dec
xchg
dec
sbb
inc
pushf
loopne
add
pusha
xor
lahf
out
test
addr16
pmulhuw
data16
shll
adc
mov
icebp
cwtl
rcr
aad
mov
lock
into
mov
pop
imul
cmp
stos
int
adc
inc
jmp
loop
push
add
adc
push
and
loop
push
rorl
outsb
adc
arpl
jns
mov
leave
in
decl
adc
iret
mov
lea
out
test
loop
push
bound
aad
add
adc
dec
pushf
stc
pop
lret
inc
mov
aas
loopne
mov
pusha
sub
pop
xchg
pop
push
pusha
mov
inc
xlat
sbb
xchg
pusha
test
in
xchg
ds
ljmp
loop
lret
mov
jb
pop
xor
int
loopne
add
xchg
rcll
loope
jmp
mov
push
and
icebp
cmp
adc
inc
clc
xchg
add
ret
xchg
and
xchg
popa
xchg
lds
pop
add
shl
jnp
push
push
and
mov
inc
jp
dec
push
push
jo
psllq
addr16
orb
mov
pop
cmp
stos
pop
mov
lret
stos
inc
adc
pop
cmp
push
in
xor
aad
jecxz
orb
hlt
subps
inc
mov
loope
shll
fists
or
pop
outsb
or
mov
adc
aad
call
filds
out
ja
insb
rorl
xchg
and
in
shl
mov
repz
mov
push
iret
push
adc
xchg
fdivl
sub
hlt
and
push
adc
ss
mov
fwait
lret
mov
das
and
flds
adc
popa
addr16
mov
mov
mov
pusha
je
mov
clc
dec
mov
out
repz
push
sarl
mov
push
sub
ja
enter
pusha
popl
add
and
lock
lcall
dec
lds
lret
les
mov
inc
leave
loopne
rcl
pusha
int3
mov
notb
xchg
loop
loope
roll
inc
in
inc
cmp
repnz
cli
cltd
and
mov
pop
test
js
xchg
add
or
outsl
xorl
pop
or
inc
pusha
pop
mov
out
sbb
insl
push
mov
shrb
xor
pop
sub
pop
popf
xchg
and
inc
clc
mov
or
and
in
jo
push
out
xchg
testb
sbbb
pop
push
rcll
push
test
insl
pusha
in
mov
mov
sarb
cwtl
inc
add
outsl
les
cmpsb
lcall
adc
inc
push
popa
sub
cmc
push
mov
xchg
pushf
movsl
adc
fidivs
lods
pusha
jbe
mov
mov
bound
ret
mov
lret
push
es
xchg
push
xor
mov
in
xchg
xor
push
bound
outsl
push
xchg
movsb
pop
test
cmpsl
sahf
and
loope
out
or
pushf
les
dec
xchg
scas
xchg
adc
pusha
inc
loopne
in
push
dec
jmp
and
push
inc
mov
cld
dec
inc
jecxz
xorb
cli
mov
xchg
inc
shll
and
pusha
roll
in
ret
cmpsb
gs
ja
rcr
mov
movsl
into
xchg
add
bound
push
pushf
lcall
les
call
insb
loop
cmp
jmp
push
out
and
dec
fstl
sti
daa
out
popl
ss
pusha
idivb
sbb
lcall
aam
stos
cmp
fwait
inc
orl
outsb
pop
shl
mov
in
cmpsl
out
xchg
enter
mull
mull
iret
les
inc
xchg
cmp
mov
out
xorl
imulb
insb
ret
repz
adc
sbb
jp
push
adc
mov
xlat
mov
ret
xchg
adc
fldt
andb
jg
pop
xor
lret
jmp
and
cmp
sahf
mov
shr
jp
cmc
imul
aam
xchg
dec
inc
mov
roll
mov
xlat
arpl
aaa
orl
loopne
mov
shll
movsl
insl
mov
notb
xor
jg
add
inc
int
xor
push
adc
mov
in
or
xchg
sahf
ret
inc
mov
adc
je
aad
xor
int
cmpsl
icebp
ds
sbb
ror
mov
mov
and
sbb
out
repz
jge
insb
or
push
gs
arpl
jne
jle
mov
dec
xchg
push
gs
cmpsb
lret
xor
idivl
incl
nop/reserved
jno
mov
call
mov
andl
adc
sbb
xorl
push
sub
sub
gs
rcll
call
lahf
nop
ret
pop
aad
pop
scas
cs
rcl
movsl
insb
out
sbb
jecxz
jo
sarl
xchg
les
mov
ret
in
inc
movsb
or
sahf
lret
loopne
sub
inc
mov
xor
les
sar
jb
dec
push
and
mov
pusha
mov
jge
cwtl
ret
adcl
and
push
ror
jb
adc
fcomp
fimuls
lret
mov
inc
data16
lret
shrl
xchg
shlb
imul
xchg
movsl
adc
push
inc
push
sub
popa
js
xchg
test
dec
imul
add
inc
imul
jb
js
enter
mov
jbe
sbb
add
dec
cs
fistpll
in
cmp
mov
xchg
fcomps
xchg
jl
data16
push
loopne
jge
cmp
repnz
mov
sub
inc
rol
fs
and
push
mov
inc
lret
adc
in
add
scas
mov
das
or
pop
jbe
bnd
fwait
cmc
ljmp
int
out
stos
sbb
inc
into
adcl
lret
gs
aam
jecxz
paddw
dec
fisubrl
mov
pusha
and
cmp
rclb
fs
cmc
mov
fdivs
xchg
fstpl
push
xor
cmp
inc
lret
cmp
sahf
in
mov
sbb
jg
pusha
int3
xchg
dec
int
xlat
push
cmp
sbb
inc
rcpps
xlat
mov
push
inc
int3
rorb
into
out
and
enter
inc
push
bound
out
cmpsb
add
add
xchg
sahf
scas
pop
pop
faddl
jmp
cmp
cmp
mov
push
jne
imul
push
mov
lret
cmpl
ret
xchg
call
je
enter
pusha
add
push
mov
nop
push
outsl
cld
pop
repz
push
scas
and
out
ret
test
leave
adc
or
adc
and
cmc
add
mov
sahf
lcall
and
fsubl
xchg
sbb
or
fsubl
out
adc
rorb
inc
lock
push
imul
and
icebp
mov
inc
cld
dec
jge
subl
pusha
jle
ret
jmp
lods
mov
push
and
arpl
and
sbb
xor
fidivl
insb
negl
adc
xchg
sarb
cld
or
ljmp
shlb
sbbl
lock
outsl
les
xchg
mov
adcb
mov
andb
cs
add
pusha
fsts
inc
sub
inc
jb
pop
ffreep
cwtl
stos
jle
dec
adc
cli
add
pop
sbb
xchg
dec
mov
aas
add
add
push
add
add
add
inc
push
imul
xor
add
xor
jns
dec
add
gs
data16
add
push
add
xor
add
add
pop
jp
push
fs
add
inc
jbe
push
push
aaa
add
inc
xor
inc
add
add
inc
add
add
data16
add
add
inc
popa
xor
add
aaa
add
imul
add
inc
add
add
add
add
xor
outsb
push
add
add
add
add
add
add
addr16
add
add
add
add
bound
insb
add
add
add
add
xor
add
add
push
dec
push
dec
add
push
xor
jp
add
xor
dec
dec
add
add
add
jo
push
jp
add
add
add
je
ja
add
push
add
push
add
add
inc
add
popa
outsl
add
bound
add
add
add
add
add
add
push
dec
jo
dec
pop
add
imul
jno
add
jb
jbe
push
add
add
add
push
add
dec
add
add
add
add
inc
xor
popa
jns
jp
ja
dec
pop
jns
inc
add
add
jno
add
xor
add
add
push
add
add
bound
add
bound
add
dec
add
add
dec
add
pop
add
add
ja
data16
add
add
add
push
add
add
dec
jne
add
add
add
add
add
pop
gs
add
add
add
add
add
cmp
add
push
push
add
add
push
dec
add
add
add
jae
inc
add
jp
add
add
imul
inc
add
add
add
add
add
add
pop
add
add
pop
cmp
add
outsb
imul
add
add
xor
imul
add
add
gs
xor
add
add
outsb
add
add
add
xor
push
add
add
push
add
push
add
xor
add
popa
add
add
xor
add
cmp
push
add
xor
add
add
add
popa
add
add
dec
add
add
pop
add
add
add
ss
add
add
jae
add
add
dec
inc
add
dec
xor
add
add
xor
add
gs
inc
add
add
add
add
add
fs
dec
popa
add
je
push
add
jo
jns
add
dec
add
add
add
jne
inc
pop
jae
add
xor
jae
jne
xor
push
add
jo
add
add
add
bound
add
push
add
add
push
add
imul
add
add
push
inc
add
push
xor
jno
add
add
jb
inc
xor
push
add
jae
add
push
push
pop
cmp
add
inc
add
jns
inc
outsl
bound
pop
inc
add
dec
add
add
jbe
pop
add
add
add
add
add
add
add
add
add
jae
push
add
outsl
push
add
add
insl
push
xor
inc
add
add
addr16
add
dec
insl
jne
arpl
push
push
push
add
js
add
add
push
push
js
imul
add
jbe
cmp
push
add
add
data16
add
add
dec
dec
outsw
add
add
dec
dec
add
add
jno
gs
dec
add
insl
add
pop
imul
add
add
push
jp
inc
jp
cmp
add
imul
inc
ja
dec
push
add
push
inc
add
add
add
push
add
add
add
add
outsb
add
add
add
xor
je
cmp
push
add
add
add
add
jb
add
push
add
jno
xor
popa
add
add
ja
add
push
jbe
add
jb
dec
add
add
push
add
add
push
add
push
add
add
add
add
add
dec
add
add
add
add
popa
push
add
push
add
add
add
add
data16
inc
add
dec
insb
add
inc
add
dec
aaa
inc
add
add
add
add
pop
add
jo
imul
push
add
add
add
xor
add
cmp
add
je
dec
add
pop
add
add
push
add
add
je
add
push
jae
add
inc
push
add
add
push
pop
xor
push
push
jb
jo
insb
add
add
add
add
popa
add
cmp
inc
add
imul
xor
xor
jb
add
add
add
add
add
ja
add
add
dec
add
add
dec
add
outsl
dec
add
aaa
jo
add
add
add
add
push
add
push
add
jno
ss
push
add
add
jae
push
add
xor
add
add
add
inc
add
add
insb
add
add
dec
outsb
inc
pop
add
xor
add
add
add
add
add
pop
xor
pop
add
insl
add
add
push
add
add
add
add
push
add
jns
bound
push
dec
add
add
inc
add
push
add
add
inc
add
je
add
add
add
insl
add
add
inc
add
ss
push
add
jne
add
add
add
push
add
bound
add
dec
dec
js
arpl
xor
inc
add
add
push
imul
ss
add
add
add
add
inc
add
add
inc
add
push
xor
add
add
add
add
add
add
dec
dec
jb
add
add
dec
add
xor
popa
arpl
xor
push
dec
add
dec
add
dec
add
add
add
cmp
add
bound
dec
dec
arpl
add
add
dec
inc
add
add
pop
je
add
add
add
add
add
dec
add
add
add
push
add
fs
add
add
inc
add
add
push
add
push
add
add
add
add
dec
jns
add
add
add
cmp
push
xor
push
add
add
inc
add
add
imul
addr16
xor
int
and
fcmovb
rcrl
cmp
add
ret
and
mov
out
inc
and
repnz
xchg
bound
inc
add
cli
jle
pop
inc
jbe
dec
fistpll
cld
adc
push
jl
push
mov
decb
push
push
jnp
out
push
repz
push
dec
test
mov
cmp
jb
sbb
inc
loop
hlt
push
iret
inc
xor
fcomi
clc
mov
push
xchg
inc
lret
std
jbe
pop
mov
inc
mov
aaa
lret
add
push
pushf
jle
dec
mov
mov
lret
repnz
jb
inc
add
mov
movsl
fcmovnbe
or
xchg
loop
ficompl
mov
lret
out
into
neg
lret
add
insl
into
adc
negb
lret
push
int3
int3
inc
sti
and
mov
shl
adc
cli
mov
adc
and
ret
insl
push
xchg
or
push
ret
push
inc
jnp
push
inc
adc
rcll
jp
and
sbb
pusha
ret
jnp
sti
out
enter
ds
shlb
dec
add
das
loopne
loope
xchg
add
sbb
hlt
ret
int
ror
rol
inc
jno
mov
adc
add
sub
push
rcr
movsl
sbb
popf
jecxz
loopne
arpl
int3
dec
cmp
pop
mov
lcall
in
add
pusha
insl
mov
inc
js
mov
dec
sahf
addb
cld
push
xor
mov
sub
push
mov
inc
enter
in
ret
subl
dec
xlat
push
scas
int
shlb
pop
push
dec
dec
sbb
cmp
rorb
cmp
mov
ja
xchg
arpl
fisubl
cmpsb
dec
and
into
fcom
pusha
out
cmc
shll
jp
pop
inc
xchg
mov
sub
rep
psrad
std
mov
movl
xchg
push
movsl
push
fldenv
out
rcl
ffreep
enter
fs
ljmp
inc
cmp
addb
sarl
xchg
in
sti
jo
addr16
repnz
add
pop
pop
cmp
in
mov
bound
xor
mov
push
and
int
pushf
outsl
xlat
arpl
rcrl
fnstsw
pop
jmp
dec
rcrb
icebp
xchg
xor
mov
imul
bound
xchg
mov
int
negl
fidivrl
and
inc
das
mov
dec
cmc
ror
sbb
insb
scas
dec
dec
je
dec
xlat
mov
fbstp
sbb
cmp
je
in
jp
je
fcmovnbe
add
out
cmpsb
push
and
push
shrb
pusha
adc
dec
addr16
add
insb
or
aad
addr16
fldln2
aaa
repnz
cwtl
fstl
cs
jmp
xor
mov
adc
out
fdivrl
lret
mov
fcmovnbe
int
sbb
int
iret
push
xor
mov
out
fldt
lcall
mov
push
popa
mov
iret
repz
dec
sub
xchg
mov
mov
mov
mov
lea
mov
in
testl
cmc
dec
out
aaa
add
jecxz
scas
pop
pop
enter
cmp
leave
fs
jmp
movsl
int
sub
les
shll
jecxz
int3
mov
int3
cmc
push
adc
mov
dec
xor
sbb
les
lods
and
or
enter
jo
jecxz
shll
sbb
loope
jns
rolb
inc
xlat
or
sbb
jmp
dec
xor
stos
enter
pop
cmpsb
or
hlt
xor
lahf
push
xchg
xor
rorl
loope
mov
ljmp
filds
jb
mov
pusha
iret
out
jge
jnp
inc
adc
push
fcmovnbe
cmpsb
insb
lret
hlt
add
test
testb
xchg
sub
addr16
mov
iret
inc
pop
mov
int3
push
and
mov
push
fs
stos
ficompl
aaa
daa
out
jmp
xor
xor
inc
sbbl
add
rorl
lods
pop
sub
das
shlb
fldenv
fbstp
lds
sarl
iret
aaa
call
out
add
mov
icebp
pusha
test
lret
aaa
leave
or
test
pop
jne
cmp
cwtl
dec
loopne
fidivrl
sti
lds
mov
les
out
call
cmp
sbb
sti
in
mul
pusha
push
xchg
push
pop
mov
imul
loope
subb
pop
movsl
push
fs
xchg
shrb
cmpsl
jecxz
xchg
rorl
jecxz
sub
lds
mov
and
out
dec
cli
lret
cli
iret
in
in
fsub
scas
roll
pop
repz
cmp
xchg
xchg
fidivrl
or
lock
push
into
inc
fcomps
gs
xlat
cli
dec
jecxz
push
sbb
popf
mov
pop
push
dec
pop
out
and
fs
lock
leave
fistps
push
xor
mov
mov
inc
jnp
dec
push
lcall
mov
roll
jo
nop
jne
cmpsb
cmc
lret
push
loope
clc
ret
adc
jno
and
pop
ja
mov
ret
or
stos
aad
loope
loope
jbe
iret
lcall
cmpsb
inc
prefetchnta
lret
and
rorb
test
sar
hlt
and
negl
stc
sbbb
movsb
movsl
mov
xorl
push
loopne
dec
das
cmp
mov
inc
dec
sub
out
adc
pop
inc
inc
gs
in
outsl
fmul
mov
sbb
push
mov
je
push
pop
xchg
cmc
rorl
sub
fldl
pop
sub
iret
aad
ret
mov
or
sbb
mov
xchg
out
xor
pusha
mov
inc
xor
iret
or
subl
push
sbbb
cmpsl
jne
sub
xchg
das
cmpsb
test
int
loope
add
pop
push
aam
ret
xor
add
inc
mov
inc
in
jecxz
push
andl
mov
inc
out
ss
xchg
les
fsub
fwait
idivl
jmp
inc
dec
push
adc
xchg
cmpsb
dec
in
push
adc
movsl
sub
jmp
rclb
adc
cmp
testl
inc
xor
xor
arpl
cmp
xor
shrb
mov
outsl
adc
jg
pop
fnsave
les
int
adc
mov
dec
or
cli
sti
sahf
sbb
sahf
in
insb
scas
dec
xchg
inc
in
out
lahf
cltd
pop
daa
jmp
shl
fsubrp
sti
mov
mov
inc
push
xchg
cmp
rclb
arpl
loopne
iret
adc
mov
out
cmpsl
loop
iret
leave
stos
lcall
jge
in
pusha
inc
mov
xlat
mov
ss
or
lret
insb
iret
out
in
mov
cmpsl
enter
fists
push
and
jmp
cmpsb
int3
bound
aas
xchg
sub
xlat
and
xchg
addl
cmp
inc
pop
mov
xlat
test
add
outsl
stos
dec
xchg
sub
sub
loop
rcr
popa
inc
roll
pop
mov
xlat
test
popa
rcl
stos
test
loopne
xchg
push
shrb
inc
sub
rcrb
cmpb
xchg
xchg
and
xor
lret
xchg
fstl
sti
pop
cmpsb
rcrl
jmp
stos
lret
ja
outsb
xlat
mov
xchg
lahf
testl
aad
loopne
pop
int3
inc
mov
jecxz
cmp
jb
pop
dec
xchg
and
fildl
pusha
aad
jne
iret
mull
in
push
int3
inc
jb
fimull
dec
mov
out
loopne
sbb
push
js
roll
scas
cmp
outsb
rcl
or
dec
xchg
xchg
adc
int3
ljmp
repnz
cmp
xchg
shlb
adc
mov
mov
insb
fistpll
mov
dec
add
jp
int3
xchg
fucomi
pop
daa
imul
flds
dec
push
repnz
push
gs
iret
enter
adc
int3
in
lods
xchg
xchg
enter
xchg
jg
outsl
les
mov
inc
aad
pop
popf
pmulhuw
in
idivl
stos
adc
loope
adc
in
aas
cmpsl
out
push
fisubs
push
adc
fwait
sub
pop
stos
cltd
push
jge
inc
insl
push
mov
and
imul
dec
xlat
imull
sub
ret
mov
outsl
push
cmp
jecxz
cmp
imull
les
in
cmp
movsl
outsl
xchg
and
push
int3
push
stc
andb
cld
sub
push
fbstp
cmpsb
or
addl
pusha
pop
mov
add
rcll
sahf
pop
int
in
ret
pusha
dec
int
cmpsb
aad
cmpsb
stc
cmp
mov
cmp
int3
lret
les
in
and
pop
mov
cmp
stos
sub
in
and
adc
fdivrs
jno
andb
fbld
xlat
mov
dec
int3
shll
dec
fimull
out
mov
dec
sub
and
ds
inc
rolb
cmp
aad
fwait
mov
xchg
mov
iret
or
cld
leave
shl
fidivrl
xor
ds
shl
or
out
ja
jmp
arpl
or
adc
scas
mov
daa
push
lahf
ret
out
ljmp
leave
sti
arpl
and
jecxz
repz
pop
out
dec
cmp
lret
push
push
gs
data16
adc
lods
cmp
xor
data16
call
enter
loope
jmp
dec
push
mov
inc
sbb
cmc
ret
sbbb
xlat
mov
xorl
cmp
into
adc
aad
xchg
xor
fld
loope
pop
sti
subl
pop
in
fsubrl
dec
fidivl
dec
jl
lret
or
shrl
lret
incl
adc
outsl
xor
sbb
jae
aas
popf
out
jo
lret
pusha
jns
inc
inc
cmp
jg,pn
add
mov
sahf
pop
mov
and
inc
xor
dec
arpl
push
lea
adc
push
push
arpl
dec
scas
and
adc
lret
rorb
or
mov
mulb
cmp
lcall
jno
out
jmp
xchg
xchg
fsubs
dec
lock
jecxz
repnz
mov
mov
push
lea
and
shlb
xor
scas
inc
out
dec
mov
movsl
cmpsb
mov
inc
ds
out
dec
lret
inc
pop
jo
mov
dec
pusha
jecxz
mov
push
xlat
mov
rorb
ror
pushf
rorb
mov
je
pop
out
inc
pop
mov
xlat
sbb
push
xor
out
clc
in
push
iret
divb
xor
mov
lds
push
xor
in
mov
jbe
xor
cmp
and
leave
addl
inc
and
int
cmp
rorl
cmpsb
insb
pusha
xchg
icebp
push
jecxz
xor
roll
lock
add
xchg
xchg
xchg
push
frstpm(287
test
rcll
ret
in
cmp
push
xchg
stos
fdiv
and
jae
in
or
insl
in
push
ret
adc
push
sbb
pop
jns
push
sbb
sahf
add
adc
pusha
push
hlt
out
lock
mov
loop
mov
popa
mov
push
cmp
bound
jge
in
jecxz
testl
xchg
rolb
adc
aam
and
pusha
div
mov
int
inc
rcrb
fwait
scas
mov
stos
adcb
push
fidivrs
loope
add
and
dec
gs
xchg
and
hlt
xchg
dec
div
addr16
and
mov
fcoms
adc
sbb
movl
adc
out
ljmp
push
mov
repnz
mov
lsl
cmp
jae
jo
enter
pop
jb
dec
mov
or
pusha
or
bound
out
negl
arpl
lock
fiadds
push
idivl
inc
hlt
in
lret
pop
fsubl
pusha
test
mul
enter
sar
pop
xchg
loope
lock
push
or
xchg
adc
adc
jb
xor
xlat
leave
cmp
mov
imul
cmc
imul
sub
xorb
push
push
or
rolb
adc
add
push
inc
dec
adc
sub
cld
hlt
mov
cmc
jne
inc
or
mov
mov
insb
push
add
repz
imul
fcoms
in
push
stc
in
into
roll
out
lret
sub
fldcw
pop
aad
pop
pusha
xchg
pop
fwait
and
insl
in
push
in
add
mul
lret
inc
jno
mov
sbb
dec
xchg
dec
fists
orb
mov
mov
call
sub
pusha
pop
sbb
arpl
or
insb
aaa
dec
movsl
xchg
inc
pusha
xchg
filds
cmp
lret
addl
pop
mov
mov
int3
mov
in
adcb
stos
sbb
icebp
icebp
push
loop
add
mov
dec
xchg
dec
sub
adc
inc
pusha
scas
push
jg
repnz
pop
pop
movsl
aam
inc
mov
pusha
pop
push
and
and
pusha
fildll
or
xor
mov
daa
or
pop
test
mov
loope
sbb
fistpl
lds
sbbb
sbb
loope
push
lock
packsswb
mov
or
imul
loope
call
cmp
rclb
out
mov
adc
iret
sti
mov
mov
mov
jl
mov
push
das
dec
push
push
movsb
addr16
nop
out
or
ror
jno
pop
adc
leave
xchg
gs
popf
gs
pop
aam
push
shlb
adc
jb
add
add
dec
add
dec
imul
jns
je
fs
add
arpl
add
pop
pop
imul
pop
add
dec
add
add
popa
inc
add
add
add
add
add
gs
add
add
push
add
push
jns
xor
jne
cmp
inc
data16
jo
add
jo
jb
jb
popa
add
add
jb
add
inc
push
arpl
cmp
push
add
dec
add
push
push
data16
xor
dec
add
add
add
add
add
je
add
add
add
jbe
push
add
add
add
add
dec
jp
inc
add
add
add
push
jno
add
add
dec
add
imul
add
add
js
add
inc
add
ss
add
xor
dec
outsb
add
add
xor
add
push
jp
cmp
push
add
dec
add
add
insb
add
jp
inc
cmp
add
add
imul
add
add
add
add
add
add
rcrl
mov
les
adcb
mov
ja
push
clc
inc
xor
jge
cmp
cmp
movsl
jns
inc
pusha
xor
sub
insl
dec
or
clc
xchg
ljmp
inc
dec
test
jb
mov
aaa
insl
pusha
push
jge
outsb
mov
gs
inc
in
push
jno
push
jg
jecxz
sahf
cmp
adc
out
test
jl
insb
shlb
xchg
xlat
imul
push
dec
lods
or
gs
adc
inc
pusha
xchg
sbb
add
fimull
mov
pop
fistpll
popa
scas
xor
adc
loopne
xchg
sub
fimuls
cmp
lret
iret
push
push
sti
in
testl
push
gs
dec
shr
sar
dec
cmp
push
xor
cmpsb
add
loope
aam
cmp
in
popf
lods
insb
cmpsb
xchg
push
lock
shl
js
pop
mov
adc
pop
aas
call
iret
dec
mov
enter
push
jmp
push
mov
fwait
in
or
icebp
or
out
ja
loopne
loop
data16
add
loop
jo
pop
data16
lock
loopne
jbe
xor
or
mov
in
das
aam
cmp
jno
sbb
xchg
dec
aam
inc
push
inc
sbb
daa
mov
sub
push
in
dec
enter
push
push
xchg
sbb
sub
into
cwtl
jg
arpl
pusha
stos
sbb
rcl
popf
jne
subb
push
sub
pop
test
mov
add
aam
sbb
push
insb
jecxz
in
sbb
push
push
inc
dec
dec
xchg
jecxz
scas
fwait
scas
repnz
xor
and
inc
test
loopne
out
dec
cmp
push
sub
or
adc
arpl
rorb
xor
mov
es
jo
insb
push
and
or
scas
loop
or
adc
stc
scas
mov
lret
fisttps
sti
mov
ljmp
cmpsl
repz
jnp
adc
lret
fnstenv
mov
fwait
sub
cmp
out
adc
in
and
pop
push
xchg
notl
icebp
shlb
shrb
push
mov
jo
pop
push
fs
adc
not
pusha
mov
sub
push
shll
jle
sbb
nop
sub
lods
inc
cmp
fstpt
sbb
ss
stos
push
rcrb
jl
fdivl
xchg
icebp
jo
out
xchg
jge
icebp
mov
out
sbbl
add
mov
iret
push
test
inc
pop
in
subb
mov
jno
fucomi
mov
push
xchg
int3
and
add
pop
pop
cmp
xor
dec
loopne
mov
test
lret
aam
cltd
call
sti
inc
ffreep
pusha
sti
ficompl
gs
xchg
int
pop
idivl
push
jmp
sar
jecxz
jecxz
jecxz
adc
cmp
inc
push
and
xchg
xchg
jns
xchg
jne
xchg
sti
mov
in
imul
sbb
nop
xchg
or
mov
addb
pop
leave
lret
outsb
aas
mov
fistpll
and
mov
sbb
data16
jb
cmp
jno
rcl
jge
insb
cltd
in
jmp
fistpll
out
mov
lcall
push
xchg
inc
ret
cmp
shll
adc
xlat
xchg
fists
imul
xor
lahf
sub
inc
ret
divl
lret
in
fcoms
cmpsl
dec
push
mov
mov
mov
add
iret
jb
push
ljmpw
mov
addr16
lcall
int3
sbb
fwait
xor
data16
cmp
push
ret
clc
xchg
jge
xchg
addb
mov
cld
cmp
stos
xchg
add
outsl
and
mov
les
iret
lods
sar
xchg
lret
push
orb
push
adcl
imul
aas
pop
pop
pop
and
xor
fdiv
mov
repz
ljmp
orb
push
sbb
popa
push
shll
jbe
lret
hlt
mov
enter
sub
testb
bound
sti
rcll
or
fistpll
pushf
pop
pusha
mov
xchg
push
or
sub
ja
cmpsl
cmp
fistps
inc
jp
xor
cmp
xor
jle
aas
in
sub
mov
outsb
fidivrl
jecxz
ficoml
mov
dec
test
cmp
dec
rcrl
inc
cmp
cld
shl
insl
hlt
mov
imul
jb
ja
mov
mov
dec
mov
mov
jnp
repz
int3
out
nop
sbbl
arpl
pop
mov
in
sarl
arpl
int
lret
pop
jb
ds
mov
repnz
fcmovne
xchg
mov
jle
jl
jl
jl
xchg
pop
mov
pop
lods
shlb
jb
jmp
jl
cmp
int
push
ret
push
pop
ret
in
sub
sub
inc
adc
jge
jno
das
in
mov
or
sahf
das
xor
adc
cmc
rorb
mov
or
cwtl
or
xor
add
aas
aaa
inc
scas
rol
cli
das
aas
enter
stos
cmpsl
clc
mov
mov
cli
int3
ret
pop
das
mov
pop
lods
pop
inc
loop
mov
cmp
inc
stc
js
xchg
test
inc
adc
iret
and
inc
repz
push
sub
sub
sub
scas
lret
or
cmp
push
addl
and
sar
sahf
mov
lret
nop
jo
inc
fbld
int
aas
mov
jg
popf
inc
pop
or
push
mov
enter
add
mov
es
or
push
xchg
xlat
push
mov
pop
inc
stos
sub
mov
or
insb
jb
add
fcmove
mov
enter
push
rcll
adc
jbe
mov
jmp
pusha
fidivrs
movsl
sbb
outsl
bnd
push
outsb
push
xlat
repnz
lcall
in
mov
pusha
xchg
imul
lea
imul
xchg
cwtl
mov
xorb
and
hlt
jnp
es
and
cmp
je
pusha
jbe
xor
xor
inc
mov
add
shll
add
aas
mov
in
sbb
adc
xchg
jnp
jmp
test
add
and
lahf
pushf
nop
lret
cmpsl
inc
cmp
out
add
or
out
inc
push
cltd
ret
push
mov
sub
cmpb
adc
mov
lcall
rcr
mov
out
xor
arpl
pop
push
mov
mov
clc
xchg
in
jecxz
mov
inc
push
jno
xchg
imul
sub
mov
out
out
pop
and
mov
push
lret
insb
std
push
fdivs
clc
and
sarl
xor
push
fwait
add
jmp
mov
and
lods
xchg
imul
sub
mov
rolb
jge
ljmp
sbb
pop
jo
or
mov
fildll
fcomp
ficoms
es
sbbb
mov
ficoml
adc
xchg
fiaddl
popa
fs
inc
cmp
lret
xlat
iret
inc
or
xchg
fidivl
clc
sti
sbb
sahf
mov
mov
test
cmc
adc
mov
js
mov
repz
ret
sbb
mov
xchg
nop
cmc
fdivl
lahf
jge
shr
jmp
imul
sbb
xchg
cmpsb
int
cwtl
mov
sahf
inc
addr16
pushf
mov
popl
xchg
subl
orb
inc
aas
test
in
and
pushf
dec
mov
mov
xchg
pushf
mov
pop
jmp
movsb
xchg
movl
jbe
mov
orb
inc
dec
cmc
into
mov
iret
testb
subl
icebp
cmp
cltd
jecxz
xlat
enter
mov
adc
mov
fsubl
shlb
push
rorl
jecxz
xor
xor
in
sbb
into
jecxz
test
loope
les
or
adc
pop
rorl
pop
push
push
pop
or
xchg
scas
xchg
pushf
cmp
jmp
divb
aas
test
sbb
in
addl
es
lret
inc
jecxz
out
dec
hlt
insb
dec
xor
into
pop
mov
dec
push
xor
stos
ret
xlat
dec
fwait
xchg
sbb
dec
push
mov
scas
jecxz
pop
jns
mov
sub
sub
js
jecxz
in
sub
in
dec
ss
pop
mov
xorps
cli
ret
rorb
lahf
jecxz
mov
daa
subps
out
addr16
push
mov
in
stos
cwtl
xchg
mov
mov
mov
mov
movsl
fwait
ja
pop
hlt
cmpsb
lret
add
inc
imul
xchg
repz
shr
fmul
or
or
inc
adc
or
cmpl
sub
and
popf
inc
xchg
xor
bound
test
inc
lret
cwtl
push
pop
mov
call
pop
daa
mov
fcoml
pop
and
push
cmp
sbb
xlat
push
arpl
into
lds
mov
push
inc
jmp
jmp
sarb
in
mov
lret
cwtl
inc
jecxz
mov
pop
movsl
ror
mov
xchg
shl
iret
sub
cmp
dec
mov
or
lahf
call
aaa
nop
sub
pop
hlt
inc
inc
adc
mov
or
sbbl
mov
cwtl
mov
sub
jle
cwtl
outsl
xlat
xor
mov
xchg
adc
test
jl
dec
out
dec
pop
mov
push
xchg
xor
out
call
add
mov
je
mov
pop
outsl
push
inc
mov
insb
repz
cld
out
xchg
sbb
push
stos
outsl
pop
pop
movsb
push
int3
mov
aad
in
enter
adc
rorl
movsb
shll
mov
lcall
lods
rcll
aad
and
imul
pop
jl
in
les
mov
fcmovbe
ret
cmp
sub
cmp
jp
dec
lret
movsb
xchg
dec
loopne
mov
adc
inc
shr
repnz
jp
pop
push
fdivrl
pop
orl
out
dec
testb
fadds
push
aam
paddusb
hlt
or
add
sbb
ljmp
loop
lret
xor
insb
mov
jne
psraw
lods
movsb
xchg
mov
leave
mov
lds
loop
fst
xchg
jecxz
mov
insl
sbbl
je
add
lahf
dec
inc
mov
jbe
mov
lret
fs
sbb
xchg
sarl
inc
fmulp
es
ficoml
dec
jne
xor
push
xor
pop
mov
stc
inc
inc
add
outsl
xchg
adc
cli
mov
push
stos
ja
rcrl
jle
cmp
cmp
inc
inc
push
jl
lret
gs
mov
push
sbb
xchg
inc
loopne
add
inc
out
ljmp
dec
inc
xchg
test
dec
add
add
add
mov
arpl
pop
xchg
aaa
fs
fs
push
push
psrlq
in
mov
std
dec
cmp
repnz
aaa
addr16
push
mov
loop
ljmp
jae
insb
fists
jmp
push
xchg
sbb
push
push
dec
adcl
nop
dec
dec
jecxz
mov
dec
clc
xchg
lret
inc
and
jl
in
in
jecxz
orb
stc
mov
inc
mov
dec
int3
movsl
pop
outsb
leave
mov
sbb
mov
rorl
mov
loopne
mov
sbb
jb
ret
pusha
push
add
repz
jecxz
xchg
or
and
movsb
sbb
push
test
shr
dec
mov
rcll
jbe
in
gs
lret
push
push
inc
mov
movsl
lods
pop
push
xchg
ljmp
test
add
and
dec
mov
sarw
je
jbe
dec
jg
scas
sahf
mov
add
push
lcall
lahf
jecxz
jle
push
out
inc
mov
imul
stos
rcrb
dec
addr16
dec
jecxz
sbb
xchg
out
sub
stos
test
dec
cs
ud0
movsl
les
popf
popf
or
xchg
pusha
pop
mov
mov
out
fs
popa
mov
cwtl
pusha
add
pop
dec
ljmp
jnp
xchg
adc
adc
out
mov
test
scas
das
cmp
stos
shrb
rorb
test
and
inc
lea
rclb
mov
xlat
sbb
sub
lahf
fisttps
scas
push
sbb
push
pop
mov
and
pop
in
xlat
lea
lock
lea
and
adc
mov
push
ss
mov
popl
outsb
cmc
ret
mov
or
jno,pt
rcrl
rclb
mov
aad
lcall
fsts
sti
adc
pusha
loope
lret
cmp
mov
xchg
inc
jg
jo
inc
pop
jae
cli
negl
jle
test
push
cltd
stos
sti
sub
xchg
mov
nop
dec
jo
mov
jle
pop
mov
ja
popa
inc
xchg
cli
int
pop
jae
aad
pop
inc
and
pushf
mov
test
fwait
xchg
add
leave
cmp
and
pusha
mov
mov
fs
jecxz
or
xor
in
das
aas
data16
and
sub
cmp
xlat
push
in
xor
mov
xchg
test
mov
add
fldcw
loope
inc
or
inc
insl
mov
xchg
mov
and
in
ss
push
pop
rcl
push
sarl
mov
movsl
and
push
mov
jnp
xor
fsubp
fadds
repz
pop
popa
xchg
and
imul
sub
dec
add
fldl
push
daa
push
inc
dec
mov
aaa
add
cmp
pop
push
js
imul
push
add
add
add
add
ja
add
add
add
add
add
push
add
insb
add
pop
je
dec
add
add
cmp
inc
jno
add
push
dec
push
add
dec
bound
jbe
inc
inc
aaa
add
dec
data16
add
ja
push
arpl
inc
add
add
push
xor
add
cmp
dec
add
insl
add
add
add
dec
xor
inc
jno
add
dec
add
add
add
add
add
xor
xor
jb
push
add
outsl
jae
inc
gs
add
add
add
add
add
xor
push
xor
xor
add
add
add
add
add
xor
add
add
jae
add
xor
dec
dec
inc
add
push
je
jbe
push
push
add
jb
xor
pop
add
xor
dec
push
dec
fs
add
jns
add
push
inc
add
jae
dec
add
ss
jno
imul
add
jp
inc
add
xor
add
add
add
add
add
add
add
cmp
push
jae
outsl
dec
add
inc
add
add
push
inc
add
outsl
dec
add
add
inc
add
add
add
cmp
add
add
add
add
add
add
add
ss
add
add
add
add
jbe
dec
dec
add
add
add
add
insb
push
add
outsl
add
add
add
inc
add
add
add
push
add
imul
jbe
arpl
push
xor
add
inc
dec
add
add
push
add
add
add
push
dec
jne
insl
pop
dec
pop
jne
push
dec
add
insl
add
push
add
jno
add
add
push
cmp
add
add
jb
jp
add
gs
dec
add
add
gs
add
add
dec
xor
add
xor
dec
jo
aaa
imul
add
add
xor
cmp
add
add
add
add
add
add
add
ja
add
add
xor
add
outsl
add
add
insb
add
aaa
addr16
push
add
add
pop
ja
add
add
inc
jo
inc
add
add
add
add
aaa
outsb
push
add
add
fs
add
inc
add
add
inc
inc
add
add
add
add
dec
jo
add
inc
add
bound
add
add
add
jne
add
add
add
ja
xor
add
push
xor
add
inc
aaa
add
xor
dec
push
jbe
add
xor
add
js
jp
add
dec
outsb
outsl
imul
inc
add
inc
insb
dec
pop
add
add
add
pop
add
add
xor
jo
inc
xor
add
insb
add
add
add
dec
xor
add
add
push
addr16
data16
jae
add
add
push
add
add
add
loope
adc
sub
mov
lcall
sub
leave
jle
adc
inc
inc
jne
mov
and
sahf
fsubr
jbe
movl
sahf
shrb
rol
bound
xor
in
mov
cmpsb
fldcw
lock
arpl
rorl
in
dec
outsl
loopne
lea
mov
dec
xor
insb
or
call
cmc
xchg
inc
sahf
mov
mov
push
mov
aam
ror
test
or
inc
and
push
mov
cwtl
jne
sub
cmpsl
xchg
repnz
or
pop
aaa
lods
lret
mov
mov
mov
je
rorb
lods
je
mov
xchg
hlt
nop
cmp
jge
xchg
mov
and
loop
das
sub
cs
pop
dec
addr16
xchg
popa
mov
push
out
pop
hlt
push
pop
lods
mov
jmp
or
fsubl
push
movsb
push
mov
repnz
nop
aad
cwtl
add
std
pop
shrl
mov
pusha
mov
nop
out
std
out
xor
adc
cli
nop
int3
mov
jmp
data16
sub
pop
or
jmp
jbe
mov
ficoml
jmp
xor
clc
loope
shl
fmuls
sub
mov
sahf
mov
and
jae
add
aaa
push
jecxz
pop
cs
stos
dec
roll
cmovo
inc
adc
xchg
int3
and
or
imull
je
test
test
push
imul
cmc
fwait
and
sub
fcmovu
mov
sahf
add
lahf
lds
shlb
ss
cmpsb
mov
int
push
add
xchg
mov
shll
inc
adc
insb
sub
mov
nop
jmp
call
iret
int3
insb
jae
jmp
push
mov
repnz
xchg
loop
fildl
sti
repz
push
nop
mov
xor
pop
mov
dec
leave
iret
fmull
sar
out
in
imul
inc
dec
loopne
loope
inc
pop
dec
lea
or
sub
dec
xor
scas
movsl
xchg
sbb
jmp
rol
fisubl
xor
or
cmp
cltd
jge
adcb
cmpsl
out
add
xchg
mov
rorl
lcall
orb
sub
push
in
testb
mov
nop
mov
pop
jl
adc
xor
push
out
lret
add
andb
sbb
pop
or
lret
adc
xor
push
stc
lret
leave
loope
fildl
push
pop
mov
repnz
mov
cmpsb
pop
push
je
loope
adc
dec
inc
outsb
fbld
lret
pusha
xor
pop
add
fiadds
inc
je
out
fs
in
call
or
shr
lea
xchg
enter
imul
imul
or
loope
cmp
mov
popf
sbb
aam
mov
insb
lret
push
mov
cmpsb
or
fs
adc
lods
xchg
or
subb
int3
mov
and
mov
mov
mov
pop
fs
xchg
sbb
adc
or
mov
sbb
jmp
rolb
popa
push
pop
imul
cmpb
jns
xchg
xor
leave
ficoms
cmp
ror
pause
adc
cmpsb
and
icebp
inc
fadds
shlb
roll
jo
jecxz
ret
or
cmpsl
adc
sbb
iret
xchg
inc
xorb
mov
mov
roll
inc
loop
push
push
fisttpl
pushf
inc
shlb
xchg
repz
inc
addl
jae
push
loope
ficoml
popa
loop
push
mov
loope
fidivl
add
mov
xchg
loope
ficoml
ret
and
inc
push
arpl
rolb
jae
loop
add
or
xchg
loope
ficoml
iret
addb
loop
push
and
xchg
xchg
xchg
fidivl
adc
mov
push
jno
ret
loopne
loop
push
inc
iret
loop
push
push
or
cmpsl
xchg
fidivl
mov
inc
push
adc
push
cmpsl
and
fidivl
iret
jb
add
add
or
cmpsl
loope
xor
icebp
iret
roll
loop
push
xchg
or
cmpsl
mov
iret
addl
push
or
fidivl
inc
inc
addb
push
push
adc
popa
cmpsl
and
jno
xor
add
shl
push
rorb
and
lock
rolb
loop
push
nop
or
cmpsl
mov
iret
addb
loop
push
push
or
mov
pusha
push
inc
iret
jo
iret
push
iret
ret
dec
dec
sbbb
xchg
mov
loope
pop
mov
mov
add
xor
pop
rcrl
and
jecxz
roll
jecxz
subl
or
lods
adc
inc
lods
adc
push
lods
adc
arpl
adc
add
adc
and
hlt
aam
repz
cs
pop
sub
xchg
sub
leave
rorb
jae
repnz
orb
dec
mov
lea
inc
fs
lods
push
and
movsl
jle
pop
fs
dec
lahf
sub
push
andb
sub
gs
xchg
adc
es
sub
cwtl
pusha
cmpsl
mov
aad
dec
xor
ljmp
pop
sub
fildl
std
stos
inc
pop
test
mov
jge
xchg
jp
arpl
ret
stos
xor
aad
cmp
cmc
rol
cmp
iret
adc
mov
xor
sahf
cwtl
dec
in
sbbb
jns
cld
lds
xchg
jae
xor
in
das
test
int
rorl
and
xor
push
sarl
pcmpeqd
and
cmpsb
lret
dec
cmovge
loop
dec
sub
jne
mov
pop
pop
pop
aam
andl
ss
inc
mov
test
push
push
nop
out
and
sarb
scas
jae
and
leave
mov
xlat
jge
pop
and
aaa
nop
inc
push
xchg
pop
sti
aas
out
push
cmp
call
imul
shll
inc
rolb
adc
fiaddl
icebp
iret
and
xor
ror
ret
jmp
loop
mov
imul
xchg
inc
lds
mov
push
pusha
out
mov
ds
mov
mov
out
jg
ja
pusha
rol
sahf
sbb
push
rorb
lcall
out
repnz
jae
xadd
and
loope
in
movsl
es
dec
inc
adc
adcb
pop
push
loope
push
pop
mov
std
lcall
push
dec
xchg
leave
pusha
int
or
cmpsl
ja
adc
imul
loop
daa
add
mov
xor
xchg
mov
push
xchg
in
bound
cmp
cld
xchg
mov
pusha
call
and
ret
test
pusha
xor
call
divl
out
scas
xchg
ret
fs
inc
bound
push
adc
add
das
das
dec
inc
cmc
enter
pop
dec
sbb
rolb
adc
sbb
repnz
pop
pop
scas
xorb
call
ds
adc
inc
jge
xor
push
ret
xchg
lret
negb
aad
mov
mov
out
arpl
ja
jge
xchg
lahf
ljmp
or
and
mov
test
mov
pop
inc
dec
pusha
ficoml
rcrb
negb
lea
dec
imul
pop
mov
std
fwait
daa
enter
add
outsl
loope
rcrl
stc
lock
inc
xor
push
cs
pusha
xchg
pop
cwtl
push
iret
shlb
daa
aaa
add
sbb
shll
jl
xor
int3
popf
scas
or
loope
lods
roll
fcmove
add
mov
jno
push
stc
jmp
shl
pop
mov
outsb
shll
sub
shll
sub
mov
in
es
cmp
push
stos
fidivs
or
mov
xor
mov
add
dec
aad
sbbl
cmpsb
daa
sub
pusha
push
push
mov
repnz
lahf
dec
movsb
pop
aad
enter
sahf
ds
mov
dec
imul
add
push
shll
ror
pusha
dec
inc
lret
jne
sub
movsl
mov
push
test
daa
jmp
push
cmp
sahf
push
mov
push
pop
loop
test
adc
and
movsb
mov
inc
cmp
pusha
mov
call
popa
shll
cwtl
in
mov
mov
xchg
lcall
addl
dec
loope
lds
mov
mov
ja
and
popf
cmp
cmp
dec
daa
es
inc
shl
jmp
sub
in
in
js
mov
in
push
and
jbe
test
push
lahf
movsb
lds
fwait
xchg
das
pop
lret
jecxz
aam
and
leave
or
mov
lahf
sti
loop
jo
xchg
out
es
je
test
dec
out
xchg
addr16
lret
adc
adc
jo
lods
les
inc
ja
jb
pop
out
add
pusha
lahf
pop
shll
aad
fs
push
xchg
jmp
fnsave
clc
mov
pusha
xlat
out
cmpsb
or
scas
adcl
mov
or
cmc
lret
stos
fisubl
fsubs
pop
imul
mov
subb
icebp
test
jmp
lods
lahf
lahf
sti
or
pop
rol
ja
out
jecxz
andps
push
inc
stos
aad
cmp
xor
and
adc
negl
dec
mov
mov
enter
xchg
enter
xchg
sub
adc
push
enter
mov
sub
ljmp
std
lret
push
in
sbb
in
xchg
ljmp
testb
add
mov
fstps
jmp
and
int
dec
outsl
lahf
cs
cmp
loop
pusha
imul
inc
mov
cmpsb
or
and
or
push
mov
lea
cmp
mov
andl
repz
inc
push
jb
loopne
sbb
pop
jo
lret
jmp
sbb
jle
outsl
leave
mov
mov
adc
mov
aam
or
loope
push
lcall
icebp
sbb
dec
xlat
in
adc
mov
imul
pusha
jno
call
sub
jmp
mov
in
push
sub
sbb
xchg
inc
jbe
icebp
clc
xor
shlb
aam
jmp
mov
push
mov
inc
sub
je
popf
mov
jmp
mov
inc
mov
out
mov
inc
dec
ficoms
lahf
cmpsb
mov
shll
mov
nop
mov
mov
lea
jbe
push
push
push
jnp
mov
jmp
out
popa
rorl
adc
gs
jl
or
mov
mov
mov
leave
je
repnz
rcll
notb
xlat
fs
fwait
mov
cltd
shlb
in
xchg
popf
jmp
and
mov
jmp
cmp
pop
pop
xchg
jmp
loope
pop
and
repz
jae
fsub
xor
sbb
in
inc
ret
lea
aaa
push
pop
dec
std
mov
pusha
cmp
dec
push
jo
jmp
lret
loopne
pop
shl
iret
or
hlt
lods
dec
add
nop
mov
test
enter
test
pusha
out
sbb
cmp
pop
lret
xchg
roll
pop
pusha
loop
repz
cmc
js
cmp
mov
push
mov
imul
lea
jns
xchg
jo
imul
lret
inc
adc
loope
mov
rorl
mov
pop
add
jle
arpl
mov
insb
sbb
mov
mov
insl
push
or
xchg
pop
aaa
cmp
pop
imulb
ret
jno
lret
pusha
lea
pushf
jl
testl
shlb
sti
std
xchg
adc
pusha
lret
cmpsl
push
dec
sbb
mov
popa
xchg
lock
repnz
jb
test
inc
xchg
in
ret
mov
loope
popf
pop
sti
call
xor
test
or
jbe
mov
cmp
test
push
mov
js
orl
mov
xchg
jo
inc
pop
sahf
push
clc
cmp
adcl
inc
movsl
mov
in
lods
test
repnz
ljmp
and
mov
out
push
ret
xchg
adc
inc
imul
in
in
daa
scas
or
pop
jle
sub
xor
mov
and
cmpsb
fwait
sub
call
push
dec
dec
test
cs
out
mov
movsl
jnp
pop
mov
xor
xchg
ficoml
lods
adc
cmp
rolb
faddp
cmpsb
fdivr
rcll
xchg
or
cld
and
shr
and
cli
add
push
push
fisttpll
dec
fisubs
out
out
jno
push
fucomip
add
out
pop
xchg
adc
int
in
pop
push
stos
jecxz
adc
test
dec
push
xchg
lock
iret
popa
ret
push
stos
mov
mov
cld
rcrb
pop
mov
dec
adcl
int
shlb
inc
inc
push
enter
mov
inc
stos
inc
pushf
ljmp
arpl
inc
jl
stc
scas
mov
lods
mov
rorb
adc
aam
pop
outsl
sbb
shrb
and
rcrl
sbbl
xor
cmp
sub
add
add
imul
cmp
out
jecxz
ss
mov
pop
xor
fstpt
cli
pusha
push
or
mov
js
jle
out
mov
push
repz
movsl
sbb
fadds
in
mov
mov
or
cmc
popf
cltd
mov
dec
xor
xor
aad
stc
mov
xchg
jae
push
push
push
stos
mov
xchg
out
das
pop
or
sub
xchg
jmp
dec
add
push
add
xor
add
add
data16
data16
push
je
add
add
add
arpl
add
add
add
add
pop
outsl
inc
dec
add
xor
imul
jo
push
arpl
add
add
js
push
push
inc
imul
cmp
add
add
add
jns
push
inc
add
inc
outsb
add
add
add
add
imul
dec
add
add
add
add
add
add
outsb
ss
jbe
jo
xor
add
add
add
xor
add
jne
add
add
dec
add
add
inc
push
add
add
push
add
add
insl
push
add
add
add
cmp
add
add
add
add
add
jns
add
xor
aaa
xor
add
xor
add
push
add
add
push
ja
add
add
cmp
add
insb
inc
pop
add
dec
add
add
xor
add
jae
xor
xor
push
add
add
add
pop
add
arpl
aaa
pop
cmp
js
aaa
add
dec
add
add
cmp
add
dec
add
jbe
dec
add
aaa
xor
dec
push
add
add
xor
imul
inc
add
aaa
add
add
add
add
add
aaa
aaa
pop
add
add
add
add
dec
inc
add
ja
pushw
add
add
insb
imul
add
add
add
add
add
add
add
insl
add
add
add
xor
push
add
add
ss
jb
aaa
add
add
add
xor
dec
add
add
push
add
add
inc
add
dec
add
add
add
jbe
jo
add
add
add
add
add
add
ja
ja
imul
arpl
add
imul
jns
xor
js
inc
add
add
add
add
add
add
insb
add
add
pop
xor
pop
add
xor
add
add
add
add
arpl
js
add
add
add
add
add
dec
xor
inc
xor
add
add
inc
data16
add
add
add
push
dec
push
xor
aaa
push
add
add
dec
dec
pop
inc
fs
add
add
add
insb
jno
xor
add
dec
add
add
add
add
add
add
xor
push
dec
push
add
pushf
dec
jno
dec
int
subl
or
das
ss
in
dec
dec
out
push
inc
test
xor
mov
sub
cmp
xchg
sbb
inc
lret
push
push
pushf
mov
out
jmp
mov
sahf
jmp
popl
rcll
push
imul
arpl
mov
xchg
dec
push
inc
pusha
ret
fdivrp
stos
jg
sti
mov
mul
adc
or
dec
mov
into
and
sti
push
and
pop
inc
loope
cmp
andl
xchg
stos
inc
jno
fldl
cmp
lcall
jmp
cmp
mov
add
je
pop
mov
lea
loope
repz
push
enter
out
iret
jnp
push
xchg
out
js
push
jecxz
rcrb
xor
notb
icebp
push
lret
mov
insb
test
cmpsb
subb
xchg
fcom
outsl
test
mov
inc
pusha
lret
xor
or
out
xor
lds
pop
push
inc
ret
sub
sub
rorl
xor
stc
outsl
push
jae
push
pusha
in
das
push
fisubrl
xlat
add
ds
xlat
sub
rol
int3
or
fisttpl
enter
xchg
fdivl
movsl
push
jle
stos
shl
cmpsl
pusha
jae
shlb
adc
mov
in
sbb
jp
out
mov
mov
sahf
es
xor
rcr
sbb
clc
rclb
push
adcb
push
fcmovnb
xor
mov
lret
dec
jecxz
xchg
dec
lods
pop
leave
sti
cmc
push
ret
loope
push
jecxz
push
in
mov
out
push
pop
repz
fiadds
or
or
pusha
xchg
xchg
cwtl
mov
lcall
mov
xchg
in
outsl
int3
scas
aam
xchg
and
and
sub
loopne
test
xchg
cli
mov
cmp
cmp
imulb
xorl
lret
mov
add
ljmp
les
addr16
sub
mov
psllw
mov
out
iret
xchg
jo
movq
inc
into
cmp
inc
mov
call
sbb
dec
mov
jne
test
pop
rcrb
push
js
imul
fistpl
push
sbb
cmp
pop
mov
popa
shr
pushf
repz
and
jp
add
imul
and
or
xchg
cltd
das
popa
pop
jbe
inc
rcll
repz
insb
pop
data16
push
popa
xchg
mov
nop
ja
enter
subl
sub
mov
mov
dec
aas
mov
scas
lods
sbb
push
mov
int
lret
add
xchg
das
out
xchg
mov
scas
xchg
mov
fildll
stos
pushf
aad
arpl
xchg
out
js
push
loope
daa
mov
pop
jae
call
fwait
jge
add
xchg
adc
and
pop
lahf
aam
lret
shlb
xor
jge
stos
inc
stc
icebp
pushf
cmpsb
push
fisttps
aas
das
iret
or
push
loopne
xor
inc
aaa
in
daa
xchg
shl
jno
pop
mov
ficoml
dec
icebp
adc
stos
mov
jmp
cmp
dec
lds
je
subb
sub
es
dec
add
sbb
ljmp
popa
mov
pop
push
cmp
sbb
jmp
add
sub
gs
xor
mov
sbb
mov
xchg
add
mov
cmpsl
push
dec
hlt
jno
addr16
jo
and
inc
lret
dec
fistpll
xchg
iret
repnz
or
rcrb
inc
loop
arpl
add
nop
out
adc
out
and
xor
pushl
shr
mov
movsb
push
jo
ss
push
cmp
xor
std
xor
jae
insl
xor
icebp
dec
sbb
stos
xor
mov
rolb
jb
push
movsb
xor
sahf
add
adc
jmp
adc
stc
mov
dec
dec
ret
lret
inc
inc
in
loop
pop
rclb
or
mov
xor
fildll
int
bound
xchg
push
pop
inc
mov
xchg
mov
pushf
xor
daa
loope
dec
andl
pop
cwtl
cmp
sbb
addr16
std
mov
mov
push
seta
fmuls
xor
adc
outsl
adc
mov
mov
mov
pop
sub
adc
inc
in
and
mov
inc
adc
pop
pop
aas
lcallw
and
jnp
jb
mov
jnp
xor
xchg
adc
loopne
aam
and
imul
adc
and
out
unpcklps
movsl
xchg
jmp
in
loope
fdivl
cmpsl
mov
and
pusha
lods
inc
mov
inc
loopne
js
sub
stos
lods
hlt
dec
clc
ds
movsb
jo
pop
push
inc
mov
mov
std
jnp
addr16
dec
test
icebp
jge
dec
or
aad
xor
and
push
pop
adc
mov
shl
jge
lock
inc
push
ret
jg
jle
and
test
mov
js
mov
adcl
scas
call
xlat
mov
xchg
add
cmpsb
in
gs
divl
je
fidivrl
sub
sub
mov
pop
jae
xchg
lret
push
xchg
jecxz
mov
test
lret
pop
mov
pop
out
sbb
sbb
out
push
adc
stos
mov
push
std
push
push
out
mov
addr16
pop
xlat
lahf
aad
xor
out
addr16
sarb
shl
imul
xchg
cmp
pusha
scas
xor
xchg
pop
sub
adc
push
mov
and
push
jo
insb
push
aam
or
movsb
xchg
xchg
cmpsb
pushf
call
push
pop
and
inc
jae
jle
out
xchg
nop
jns
fistl
jecxz
and
sbb
ret
incl
mov
inc
ror
stos
mov
mov
mov
out
das
sub
xchg
adc
pop
in
xlat
sarl
ret
mov
jle
int
fldcw
pop
jle
out
stos
add
les
ret
sub
stc
ljmp
ret
dec
pop
pop
mov
pop
or
shll
inc
pop
sahf
std
mov
in
lea
lcall
pusha
xchg
mov
daa
ss
lret
xlat
add
andl
out
bound
push
pop
mov
ret
test
rcrl
xlat
mov
jp
inc
lret
sub
push
xor
jo
or
lcall
in
repnz
jno
xchg
xor
and
jb
imul
pusha
push
mov
sbb
sbb
cmpsb
out
dec
lret
or
adc
in
mov
pop
popa
lcall
mov
dec
repz
cmc
fsubrl
xor
rolb
in
mov
cmp
int
push
or
shl
jbe
jno
rorl
in
and
adcl
sti
push
jecxz
loope
lret
jb
jmp
adc
mov
mov
fbld
cmc
xchg
rorb
bound
jo
lahf
and
fists
fstpt
sbb
cltd
push
jmp
movsb
loop
mov
iret
call
lret
sub
xchg
cmpsl
das
inc
add
fwait
mov
test
movl
lret
lret
popf
test
mov
int
and
fstpt
adc
aad
loope
xchg
lock
xchg
jl
in
enter
sub
iret
ja
aad
xchg
fisttpl
jo
fwait
loopne
lods
pushf
rorl
mov
xchg
iret
arpl
push
loope
lret
and
inc
jb
in
or
ljmp
nop
mov
out
mov
pop
enter
cmpsb
leave
loop
dec
mov
push
mov
push
xlat
push
inc
or
mov
sbb
jo
not
cmc
lret
sub
dec
pusha
shrl
or
fildll
scas
xchg
lea
xchg
sub
addr16
dec
inc
ret
loop
into
cltd
iret
xchg
int
jo
add
mov
dec
cltd
addr16
mov
notl
sub
jmp
mov
filds
lock
iret
dec
add
pusha
cwtl
cmpsl
push
xchg
mov
xchg
aad
sbbl
loopne
cmpsb
pusha
scas
js
aas
out
push
mov
enter
inc
addl
lds
scas
fcom
mov
dec
fiaddl
xchg
inc
mov
xchg
mov
xlat
imul
inc
push
lods
cwtl
cmp
icebp
sarl
nop
sub
fwait
sarb
int3
stc
icebp
xor
or
xor
or
adcb
loope
mov
xchg
lcall
fwait
push
jmp
push
or
testb
lds
stos
xor
cmpsb
xor
cmp
in
loope
rolb
fcompl
daa
in
jmp
jge
rol
xchg
cmpsl
adc
xor
shlb
or
leave
pusha
xlat
cmc
mov
mov
mov
fadd
jecxz
pop
xchg
sub
out
popa
ror
pop
mov
xchg
xor
clc
in
push
jb
js
mov
jl
jnp
add
sbb
pop
push
bound
jmp
test
loope
fstpl
pop
dec
ret
mov
and
shll
push
insl
in
or
fidivrs
aam
push
shlb
jbe
mov
int
push
shlb
test
addl
sbb
cmc
and
mov
test
cld
pop
int
pop
adc
jle
push
inc
push
push
dec
in
pop
push
dec
cmp
arpl
iret
push
test
xchg
adc
shll
lret
stos
loop
adc
or
outsb
fisubrs
out
jecxz
das
xchg
insb
mov
add
pusha
cmp
cmc
xor
push
adc
aas
clc
cmp
lea
or
dec
int
mov
aaa
iret
pushf
inc
cs
dec
push
outsl
xchg
or
nop
xor
popf
add
cmp
es
sbb
xchg
rolb
int3
aad
pop
dec
pop
leave
insb
mov
std
outsl
xchg
xchg
cmp
inc
int
jecxz
pop
dec
and
jge
xchg
sbbl
js
or
dec
fwait
jbe
bound
loop
shlb
jns
jb
aaa
sub
test
add
push
adc
shrl
jge
xchg
repz
movsb
lret
mov
lea
mov
cli
popf
ret
xchg
sub
pop
xchg
out
dec
sbb
ljmp
sbb
in
xor
mov
xchg
mulb
cmpsl
shl
mov
sbb
addb
loopne
push
and
adc
arpl
push
rorb
int
outsb
jbe
out
out
jecxz
int3
and
adc
mov
out
iret
inc
inc
inc
add
shlb
ret
mov
and
mov
roll
dec
jbe
xchg
stc
into
add
pop
roll
dec
pop
xchg
add
cmp
idivl
aaa
jno
iretw
shll
fs
imul
xlat
icebp
aam
xor
xorb
sbb
fildll
sarl
loope
and
in
ret
outsl
jecxz
int
loopne
push
cmpl
test
arpl
call
imul
pop
xchg
inc
int3
adc
roll
inc
ret
pusha
jnp
in
jno
cmc
mov
fistpl
mov
cmpl
mov
mov
insb
adc
leave
pop
sub
lret
loop
testl
push
int3
fnclex
lret
pop
subb
sbbl
jp
ss
test
sti
push
sbb
jg
inc
pop
mov
add
cmpsb
sbb
lret
sub
inc
scas
rcrb
dec
xchg
mov
loop
xor
lret
popf
inc
dec
pop
lcall
lret
inc
add
push
movsb
outsb
sub
mov
call
popa
adc
and
outsb
mov
iret
lea
jecxz
subl
mov
repnz
shr
ljmp
and
jmp
pop
pop
xchg
push
xchg
adc
mov
fcmovbe
mov
or
sub
notb
jmp
cli
xor
push
lahf
popa
iret
addb
fs
mov
loope
mov
jne
xchg
out
iret
and
or
in
inc
sbb
call
jge
dec
ret
int3
jno
insb
pop
and
dec
call
fsts
fs
jo
sbb
pushl
xor
mov
ljmp
push
loopne
push
mov
shll
xchg
and
nop
loopne
std
daa
popa
dec
rcr
or
or
xor
push
sub
mov
testl
rcrb
test
cmp
mov
xchg
jno
add
aas
iret
ret
arpl
xor
ljmp
jmp
or
mov
lret
lock
jecxz
and
mov
sub
cli
repz
cli
push
adc
inc
adc
call
das
mov
push
sarb
cmp
int
rolb
or
arpl
stc
fildl
fcomps
and
inc
ror
xlat
lahf
pop
sub
add
out
add
sbb
sub
shll
and
xlat
setg
xor
xlat
inc
loopne
lahf
fldl
inc
pushf
mov
fidivl
ret
out
mov
int
movsl
mov
roll
cmc
pop
arpl
dec
repnz
repz
add
popa
cli
and
ret
dec
cmpsl
out
inc
in
stos
xor
push
shll
xor
xor
adc
pop
insl
mov
mov
mov
inc
loope
aad
inc
loop
rol
je
xchg
loope
jp
and
xchg
xchg
ret
ret
mov
movl
shl
shl
adc
shll
mov
loope
xchg
test
call
xchg
arpl
arpl
push
sub
js
ljmp
ret
scas
xor
lret
ljmp
add
dec
add
cmp
add
add
pop
xor
add
add
dec
add
arpl
js
add
add
add
cmp
add
pop
inc
insl
dec
add
add
add
add
add
add
push
push
add
dec
dec
dec
ja
ja
add
add
add
add
cmp
add
pop
add
cmp
cmp
add
add
add
add
add
add
pop
bound
inc
add
popa
add
dec
push
add
pop
add
inc
push
outsb
add
outsb
add
add
add
inc
push
jbe
fs
add
add
inc
add
add
add
jbe
add
push
add
add
add
add
add
data16
dec
add
add
add
push
add
add
add
add
add
push
cmp
jbe
jbe
outsb
add
add
add
push
add
outsb
push
add
add
add
push
jo
add
arpl
add
inc
add
js
cmp
addr16
add
xor
add
add
dec
add
add
add
add
insl
inc
inc
add
jne
dec
add
jp
add
inc
push
inc
inc
add
imul
add
xor
inc
xor
xor
add
jbe
add
xor
inc
add
pop
dec
jb
add
dec
jb
add
dec
add
dec
outsl
add
add
add
add
bound
add
add
add
add
inc
add
push
xor
dec
jb
xor
dec
add
push
insl
add
add
add
add
aaa
js
add
push
add
add
push
add
add
add
cmp
fidivrl
lret
stos
push
or
jecxz
lock
push
mov
mov
push
mov
lret
repnz
xchg
dec
repz
loopne
lret
lret
adc
loope
xchg
sub
shll
mov
loope
xchg
dec
mov
mov
cmp
sub
ror
xchg
cltd
dec
xchg
rcr
jmp
fisubl
mov
sub
rcrl
out
mov
shl
pusha
inc
ret
sti
js
xchg
iret
add
enter
mov
dec
sar
mov
xor
div
in
repnz
orl
dec
push
jge
lds
shrb
stos
std
int3
add
mov
fcomi
daa
lahf
ljmp
mov
add
dec
push
mov
in
and
dec
bound
mov
lahf
test
out
add
xor
ljmp
lret
and
xor
sbb
stos
add
rcr
cltd
ljmp
mov
jmp
cmpsb
inc
xor
add
jb
lds
push
pusha
mov
xchg
mov
hlt
or
andb
lods
push
aas
mov
add
fsubrp
fcmove
mov
push
mov
mov
jnp
mov
pop
mov
fs
inc
shlb
repnz
mov
scas
add
cmp
daa
adcb
pusha
movsb
pop
sbbl
push
enter
xchg
add
push
cmp
ss
shll
mov
push
mov
out
notl
addr16
pushf
daa
push
loop
aaa
xlat
add
mov
sbb
jno
xor
mov
push
xchg
movsb
rcll
sbb
or
in
mov
fadds
movsb
sti
repz
and
popf
mov
addb
sbb
cmc
lock
jno
scas
imul
sub
shr
inc
mov
jle
inc
cmp
mov
stos
rolb
pushf
mov
lcall
test
cmp
cmp
pop
pusha
add
add
adc
jecxz
mov
mov
iret
sub
jecxz
loop
inc
aas
test
fucomp
and
adcl
mov
dec
lds
xchg
cld
xor
fst
aaa
in
mov
lahf
fs
xor
dec
adc
fwait
jbe
roll
sti
adc
loope
sub
adc
lcall
jp
testb
outsl
int
push
and
mov
ja
iret
orl
inc
xlat
mov
xor
cmp
pop
inc
imul
dec
jae
cmp
subl
add
add
xor
sbb
add
ja
xchg
mov
inc
cwtl
bound
pop
mov
cmp
fcmove
data16
adc
aaa
decl
ret
or
adc
ret
inc
aas
xchg
insl
aaa
jmp
adc
mov
jbe
into
jb
ljmp
mov
cmp
out
clc
push
sub
push
int
stc
add
jg
ljmp
test
imul
test
aam
inc
push
add
jge
fldln2
ret
out
xchg
imul
movnti
int3
or
cwtl
fadds
add
jp
push
inc
rclb
sbb
ret
cmp
dec
xchg
int3
ret
into
mov
scas
or
test
mov
loopne
pop
mov
std
fldt
adc
loop
jge
out
rorl
sbb
jecxz
or
sub
loope
and
xor
jmp
outsb
add
cltd
xor
idivb
jmp
add
jle
ds
pop
shll
dec
xor
add
add
sarl
dec
mov
in
pop
pop
arpl
imul
cmpsb
rclb
rol
dec
adc
mov
out
mov
mov
add
lcall
and
push
push
loop
sbb
push
lret
xchg
xor
mov
andl
pop
inc
add
cmpsl
push
ds
rolb
add
cltd
add
mov
cwtl
or
mov
adc
xchg
add
sub
cld
jb
cmp
ret
inc
inc
mov
lcall
and
xorl
sarb
sub
mov
jp
and
std
adc
repnz
xor
jae
ret
dec
sbb
es
insl
add
fs
inc
ljmp
pop
ret
or
lahf
icebp
aaa
add
cmpsl
ja
lock
lret
loope
sti
sahf
add
adc
add
aaa
lock
cmpb
mov
rolb
into
repnz
add
mov
mov
or
lret
ljmp
push
jecxz
mov
repz
mov
lock
sti
push
xchg
fwait
dec
shll
add
testl
or
push
int3
fildl
shl
icebp
imul
jp
ss
push
lahf
jmp
dec
sbb
jp
lcall
sbb
add
cmp
dec
inc
cmp
ret
arpl
scas
stos
gs
dec
cmp
jno
test
pop
mov
rcrb
add
call
cli
pop
add
test
and
shlb
jmp
fidivrl
cmpsl
fcompl
dec
lret
shll
imul
pop
insl
outsl
fcmovbe
lds
or
xchg
inc
pop
pop
les
bound
fisubrs
xor
fnsave
loop
pop
repnz
out
out
jecxz
dec
add
fsubrl
fs
pop
rcll
mov
jg
jecxz
jecxz
push
and
or
jne
jl
loopne
dec
xor
cmc
lahf
or
add
jle
jo
inc
push
xor
repz
pop
insl
js
cld
loop
ret
inc
lds
rcll
sbb
adc
xchg
dec
mov
push
jo
sbb
push
int
add
orl
add
mov
ret
mov
daa
inc
cld
dec
fs
daa
hlt
out
push
pop
mov
addr16
pop
mov
ret
sti
mov
pop
mov
lcall
pop
cmp
adc
cmp
iret
pop
mov
sub
mov
lret
jp
inc
adc
cmp
push
icebp
inc
or
aam
test
push
xchg
sbb
fucom
enter
xchg
sarb
pop
sub
pop
push
lahf
push
push
call
mov
xchg
rcl
sub
jns
loope
cmp
int3
push
incl
mov
adc
sbbb
jbe
outsl
cmp
std
stos
sbb
add
xchg
xchg
and
enter
lahf
mov
std
dec
xor
clc
shll
sbb
loope
pop
add
gs
in
lret
int3
fmull
pop
inc
dec
xor
das
jbe
daa
int
inc
lret
mov
das
mov
pop
in
dec
filds
xor
call
pop
xchg
pop
mov
cwtl
sbb
das
inc
iret
enter
int
roll
loop
aaa
lret
nop
push
lock
sarl
xchg
add
leave
dec
stc
mov
adc
dec
mov
push
adc
sub
lea
pop
cmp
sbb
sbb
icebp
aad
in
push
jecxz
outsl
aam
mov
sub
mov
ret
loop
pop
push
mov
or
int3
aad
loop
out
scas
out
mov
mov
sub
int3
push
push
stos
pop
scas
add
and
test
fwait
les
iret
ficoms
jo
xor
and
adc
aaa
je
dec
pop
jne
jmp
insb
and
jns
or
mov
mov
push
xor
js
adc
movsl
rol
aad
leave
mov
adc
lcall
enter
push
fbld
iret
int3
std
cmp
test
cmp
fcmovnb
and
or
push
mov
xlat
mov
xchg
mov
adc
cmp
fisttpl
and
inc
dec
das
lret
xor
addl
loop
popa
daa
insl
ljmp
add
push
add
mov
arpl
enter
loope
xlat
fildl
and
stos
fbld
jne
iret
mov
jbe
shl
jle
inc
fsub
scas
dec
fists
lret
out
pop
ljmp
mov
mov
fbld
cmp
and
add
fsts
icebp
mov
jns
loope
loop
inc
nop
fiaddl
jg
add
push
pop
pop
sub
add
movsl
fidivrl
xor
lock
addr16
paddq
xor
inc
xchg
shll
pop
cmp
sbb
mov
sahf
rclb
clc
push
ljmp
and
into
popa
xchg
xor
in
arpl
ja
mov
xlat
push
add
pop
psubusb
inc
in
jp
add
lret
cmp
cmp
ret
jp
mov
out
daa
popa
lret
add
cs
mov
imul
adc
stos
shrl
mov
inc
dec
jb
push
mov
jg
push
mov
dec
add
and
icebp
dec
add
int3
fisttpl
add
shrl
jb
dec
or
push
stos
mov
jae
jmp
pusha
add
mov
add
fsts
dec
cmc
add
lods
movsl
push
repnz
add
pop
mov
xor
pop
cmp
inc
test
mov
xor
negb
add
and
in
insl
jno
pop
add
aam
loop
aad
xor
dec
sbb
dec
ljmp
add
adc
push
daa
push
pop
or
push
or
stos
arpl
xor
pop
scas
mov
popa
xlat
xor
sub
jbe
cmp
sbb
fsubrp
mov
ficompl
add
fsts
sbb
xlat
sub
xchg
clc
add
ret
mov
shll
shlb
push
jge
xor
or
fists
andl
bound
roll
pop
or
pushf
push
inc
js,pn
inc
pop
ljmp
xchg
mov
xor
adc
lret
insb
test
das
add
xchg
jmp
mov
add
pop
enter
add
es
fmuls
imul
loope
xchg
loop
push
add
mov
fisubl
roll
aam
inc
test
mov
gs
push
add
xor
mov
dec
add
ret
adc
or
out
rcrl
pop
in
scas
add
add
mov
mov
mov
out
lret
or
fildl
jbe
jo
scas
lret
pop
aas
pop
jae
mov
movsl
incb
imul
call
js
add
xchg
adc
inc
jp
call
and
cmp
out
inc
addr16
sub
loopne
push
add
cvtpi2ps
and
adc
inc
adc
jnp
popf
jns
and
insl
and
add
mov
lea
add
sub
push
call
inc
ja
push
sbb
pusha
mov
aaa
xor
fidivrl
pop
pop
popf
in
rcll
inc
inc
mov
ror
mov
icebp
xlat
fcmovnu
xor
xchg
pop
je
inc
idivb
push
repnz
cmpsl
and
sub
jae
iret
mov
xlat
lret
lret
test
sub
inc
dec
mov
fisubs
cmp
mov
mov
out
adc
jo
inc
dec
jecxz
adc
mov
repz
pushf
xor
xchg
in
hlt
iret
xchg
scas
repz
lock
cmc
push
insb
pop
xchg
mov
xor
push
popl
fadd
pop
insl
jae
mov
push
xchg
adc
pop
js
xor
les
and
pusha
fdivl
shl
movsl
add
cmp
ja
jecxz
fistpll
or
addl
cs
and
std
pop
cmp
ja
sbbl
lret
dec
mov
shl
mov
lret
out
mov
fcoms
add
or
cmp
lods
mov
mov
add
in
push
add
pop
cmpsl
mov
add
pusha
sahf
movsl
lret
aam
aaa
rorl
enter
add
int3
and
testl
pop
inc
enter
fbstp
push
dec
xchg
shll
inc
aam
out
cmp
fadds
lcall
inc
ret
and
shll
add
mov
add
cli
add
adc
aaa
mov
add
or
loop
cltd
int3
push
adc
outsl
sbb
in
and
mov
pop
add
clc
xor
xor
sub
push
add
jle
je
or
mov
cmp
ret
add
jnp
fistpl
mov
add
add
push
popa
ret
push
es
outsl
inc
add
fisttps
xchg
push
or
ficoms
pop
es
cmpsb
lods
sub
inc
jl
lods
or
adc
dec
subl
ret
adcl
dec
fcmovne
repnz
scas
lahf
cmp
dec
xchg
fs
mov
loope
fidivs
mov
xlat
and
mov
icebp
pop
fisttpl
in
and
xor
popa
xchg
fcmovu
mov
cmc
shlb
repnz
mov
xchg
xchg
xor
add
rclb
or
mov
and
les
xor
ficomps
fwait
bound
mov
stos
add
inc
add
add
pop
ss
jns
ret
jmp
cmp
out
push
mov
nop
dec
in
adc
fistl
stos
add
icebp
inc
loope
outsb
das
outsb
dec
add
dec
add
jno
add
dec
add
add
add
add
add
add
jno
add
add
push
push
add
insb
jno
add
push
dec
je
dec
add
dec
add
add
add
je
add
add
add
inc
add
inc
add
push
add
add
insb
push
add
add
push
add
add
outsb
ja
inc
add
add
insl
inc
js
bound
xor
add
insb
dec
outsb
push
add
add
inc
push
add
dec
ja
add
ja
jns
jne
fldln2
cmp
popf
cwtl
loop
dec
mov
jle
push
pop
daa
pusha
in
add
xchg
outsl
cltd
popf
repz
fsts
jl
ljmp
cmp
sti
xchg
pop
bound
pop
inc
std
outsl
jmp
aas
sbb
icebp
jmp
and
or
push
fcomp
jecxz
fistl
xchg
clc
jg
sbb
and
fcmovb
icebp
jecxz
xchg
ds
test
inc
lret
in
sti
add
and
mov
xchg
lret
mov
sbb
comiss
dec
inc
mov
push
jp
outsb
call
add
mov
inc
ja
addl
rcrl
xchg
jle
push
jecxz
dec
inc
push
scas
inc
ss
fstpt
dec
mov
stos
push
xchg
jmp
inc
push
cmp
out
sarb
inc
out
fists
shll
scas
xchg
cmpsb
adc
ja
or
mov
push
pushf
sbb
fwait
cs
add
jg
cld
sarl
adc
sub
cld
cmp
mov
das
pusha
xchg
push
cmc
hlt
lret
mov
test
loope
push
xchg
aad
das
fdivrl
mov
xlat
and
mov
call
mov
cmp
jl
push
loopne
add
cmp
das
mov
pop
mov
fucomp
mov
xchg
das
ss
push
mov
sbb
out
repz
push
mov
inc
pop
rcr
scas
cmp
mov
fdivs
xor
sub
je
inc
sbb
push
sbb
fldt
inc
cs
mov
testb
xchg
pop
mov
xchg
cmpsl
pop
dec
loop
rolb
inc
jecxz
icebp
xor
push
cmp
repnz
sahf
dec
xlat
cmpl
xchg
shll
outsb
push
pusha
fwait
or
adc
xchg
icebp
dec
push
sbb
mov
jl
rolb
popa
and
incb
pusha
pop
outsl
imul
test
jb
lds
cmp
sbb
ja
in
inc
xchg
lret
inc
mov
pop
enter
mov
xchg
orb
jae
xor
into
stos
cmpsl
sbb
stos
out
test
pop
lea
iret
inc
push
or
jl
aad
dec
sahf
sbb
fnstsw
pusha
lret
sbb
sub
daa
cmp
inc
cmpsl
jno
pop
enter
mov
mov
or
int3
mov
jecxz
push
add
das
fisubs
pop
adcl
mov
push
scas
mov
pop
push
mov
mov
iret
sub
fistps
sahf
pop
stos
das
test
and
pushf
xchg
xchg
out
out
aad
neg
cltd
cmp
jb
retw
std
pop
jb
outsb
ljmp
mov
cmp
outsl
push
bound
inc
mov
inc
cmpsb
inc
jl
mov
rcrb
roll
in
cltd
pop
pop
adc
dec
ret
add
adc
adc
lcall
mov
fcoml
mov
stos
pop
xchg
fisubs
loope
lcall
and
cmpsb
jg
arpl
scas
mov
aas
ret
ss
and
js
xlat
loop
lret
xlat
sti
jno
jbe
test
iret
int
mov
shlb
bound
pop
push
pop
mov
cltd
lcall
cmp
sub
in
xchg
mov
lods
wbinvd
mov
mov
adc
js
fisubl
rclb
sub
dec
in
xor
loopne
mov
sub
dec
push
addr16
mov
dec
mov
aas
test
mov
mov
xchg
fs
push
mov
cmp
pusha
fsubs
cwtl
adc
mov
push
sub
adc
pusha
stos
xchg
pop
repz
lock
in
pop
cltd
inc
pop
mov
cwtl
inc
push
inc
call
in
repz
divb
push
roll
sar
xchg
fisubs
addr16
jae
cmp
mov
push
dec
stos
pop
mov
enter
dec
xchg
mov
jecxz
adcb
pop
ljmp
jp
dec
mov
push
das
loopne
mov
enter
push
lea
dec
mov
xor
and
rcll
and
xchg
cmc
xor
imul
or
adcb
into
loope
outsb
in
in
pusha
rorl
push
lcall
pop
mov
dec
pop
adcl
sahf
movsb
mov
cltd
cli
fs
push
or
shll
push
mov
xchg
in
popf
mov
mov
pusha
je
add
shll
jb
add
push
rcrb
jle
pop
add
adc
adc
out
push
lahf
sbb
std
popa
icebp
icebp
pop
out
outsb
xchg
jp
iret
pusha
aam
jb
stos
xchg
icebp
test
lea
std
out
rcl
pusha
add
andl
sbb
inc
mov
cld
fisttpll
sarl
loop
push
jmp
inc
fldl
adc
inc
enter
lret
jg
arpl
insb
daa
inc
inc
data16
daa
inc
mov
fisubrl
leave
rcl
push
ja
out
movsb
std
sub
pop
jle
int3
add
sub
test
cmp
in
xor
hlt
jl
sub
test
pusha
xchg
fucomi
mov
out
mov
push
xchg
aam
lret
push
stos
inc
cmc
pusha
adc
pop
aad
and
jecxz
cli
jno
pop
call
dec
aad
sub
lahf
lret
insb
push
xchg
jbe
push
jb
addr16
incl
or
sarl
in
leave
dec
xor
dec
in
movsl
mov
test
jae
add
dec
xchg
cmp
push
scas
jno
xlat
test
loop
cwtl
loope
adc
mov
pop
test
dec
ret
fwait
add
dec
xchg
insl
inc
dec
inc
pop
dec
xor
dec
es
push
cli
add
adc
sar
sub
push
rcr
xchg
outsl
pop
inc
rclb
dec
mov
adcb
and
add
fsts
xor
and
sub
stos
xor
and
pop
xchg
push
or
or
addr16
mov
xchg
dec
mov
hlt
sub
xchg
enter
add
jae
gs
pop
popl
push
out
je
inc
push
sti
xchg
dec
loop
dec
xchg
lods
stos
push
repnz
notb
add
xchg
pop
stc
ficoml
mov
aam
inc
rclb
pop
adc
loope
sub
js
mov
decb
daa
or
leave
sub
lock
mov
ret
mov
insb
popf
rorb
sarl
cmp
prefetchnta
mov
jl
nop
lret
jmp
and
cmp
sbb
je
xor
add
or
in
push
cmp
pop
add
fidivl
sar
fisubs
shlb
inc
rcrb
rcrl
lret
lods
jo
pusha
sbb
jle
add
movsb
jae
shl
arpl
or
int3
xchg
xor
push
push
and
into
inc
sti
pusha
cmp
cmp
adc
inc
and
sahf
push
int
arpl
mov
mov
add
lcall
mov
stos
cmpl
inc
pop
shrl
adc
loop
bnd
inc
push
mov
dec
cmp
jns
and
out
ret
adc
aas
out
lds
sbb
adc
lret
sahf
fistps
divl
push
cmpsb
lea
out
add
and
ja
mov
push
xor
icebp
je
inc
outsb
nop
or
lcall
jbe
addr16
and
jne
dec
outsl
mov
jno
clc
mov
mov
push
out
lcall
adc
lds
pusha
inc
repz
scas
xor
pop
pop
or
nop
mov
je
cli
mov
lock
add
pop
daa
hlt
in
scas
out
xor
xchg
push
mov
xor
rcll
push
jmp
outsl
sar
popa
dec
or
ja
cmp
fcoms
push
dec
dec
fcomi
mov
stos
xchg
insb
lret
mov
filds
in
gs
cmp
sub
pushf
movsb
sub
mov
out
shl
xchg
clc
or
pop
push
mov
andl
dec
mov
fiadds
mov
repz
xchg
mov
movsl
pop
adc
adc
test
imul
xchg
scas
pop
ret
or
insb
and
lret
dec
push
pusha
bound
mov
pop
fsubs
lds
or
test
mov
jae
sbb
ffreep
adcl
test
rorl
xchg
xchg
dec
xorl
jno
adc
pop
scas
mov
inc
iret
pusha
dec
sbb
in
aas
inc
pop
push
pop
jecxz
cmp
mov
int
lock
or
add
adcb
push
gs
xor
or
aad
ret
leave
mov
mov
jecxz
popf
ljmp
jl
cmpl
jge
add
pop
sarb
xchg
loope
mov
jbe
sbb
inc
inc
pusha
push
fisubrs
add
push
adc
pusha
loop
pushf
sub
pusha
ds
in
repz
sarb
sarl
pop
fyl2xp1
dec
dec
mov
jmp
aam
icebp
addr16
or
pop
fcom
jno
pop
in
negl
pushf
mov
aas
insl
insb
xchg
das
cs
jecxz
mov
pop
lcall
push
cmp
xchg
pusha
jmp
lods
cld
adc
sar
or
jbe
mov
mov
lods
stos
jae
sarb
jp
add
lods
push
imul
dec
add
subl
shr
pushf
and
jecxz
aad
sub
jo
mov
fs
orl
adc
cmpsl
test
imul
jno
mov
sub
stc
outsl
push
sub
xor
dec
shlb
push
jbe
xchg
pushf
cmpsl
jae
lods
mov
and
or
test
cmp
movsb
lea
outsb
data16
inc
pop
adc
scas
pop
push
cmpsb
inc
ljmp
mov
loopne
repnz
cmpsl
jmp
adc
pop
sbb
cmpsb
imul
inc
call
inc
gs
leave
sbb
ficoml
xchg
cmp
push
ret
pop
out
mov
mov
lcall
pop
pop
lock
out
dec
mov
add
or
test
outsb
roll
sub
loopne
out
ljmp
ret
sahf
xchg
fisubs
je
fwait
mov
and
popa
ds
push
push
pop
cli
leave
xchg
or
jle
cmp
xlat
enter
pusha
sarb
fs
arpl
mov
pop
rorl
in
into
xchg
out
cltd
mov
dec
or
xlat
push
cmp
mov
leave
loop
sub
push
icebp
lcall
dec
test
call
fs
lret
inc
jo
shll
mov
in
mov
dec
ljmp
nop
xchg
mov
daa
mov
cltd
cwtl
dec
test
xchg
lret
mov
adc
cltd
sarl
lds
loope
icebp
xor
loope
fidivrs
mov
jb
into
mov
cmpsl
addl
js
pusha
cld
into
in
mov
subl
jl
ficoms
bound
les
call
sbb
mov
push
in
lods
inc
ljmp
stos
mov
push
scas
aas
lret
clc
xchg
and
adc
and
stos
xchg
cmp
in
mov
les
daa
pusha
in
dec
lret
and
cmp
adc
test
dec
inc
sbb
lock
in
inc
dec
mov
stc
inc
sbb
lea
lret
mov
add
jecxz
adc
push
and
xchg
add
bound
shl
xchg
sub
and
or
push
dec
lea
adc
push
not
insb
rorl
inc
mov
xor
enter
mov
in
shlb
call
mov
xchg
push
xor
sbb
inc
xlat
outsl
enter
push
jo
fsubrp
jo
adc
mov
mov
push
ret
xor
pop
xchg
enter
nop
mov
insb
mov
insl
aam
lcall
pminsw
mov
mov
shlb
sarl
mov
cmp
or
sahf
mov
push
mov
push
sbb
mov
insb
fidivs
xchg
lcall
xchg
adcl
fsubrs
insb
push
divl
xchg
les
push
push
mov
sbb
jmp
arpl
data16
sbb
sub
mov
jns
xchg
mov
xlat
adc
int
js
mov
out
inc
jg
das
jmp
lret
inc
inc
adc
les
sub
pop
dec
cltd
mov
addb
adc
int3
incb
jns
xorl
lock
pushf
mov
in
dec
adc
push
sub
roll
mov
in
jle
sbbl
push
arpl
lcall
jne
mov
pop
aad
and
mov
xchg
xor
das
mov
xchg
cmc
push
adc
xor
sbbb
pop
daa
popf
loop
mov
or
test
movsb
outsl
push
faddp
sub
jp
xorb
test
decb
aam
ja
gs
sub
mov
mov
insl
or
mov
xorb
mov
in
jg
outsl
leave
pop
add
mov
cmpsl
sahf
addr16
addb
inc
adc
jno
add
add
or
imul
dec
dec
add
add
xor
add
inc
push
add
dec
add
imul
add
inc
cmp
xor
add
inc
imul
push
add
jae
add
xor
add
add
add
push
add
add
add
cmp
add
ja
xor
add
add
add
addr16
push
add
add
add
pop
push
pop
push
add
push
add
add
dec
xor
dec
add
add
je
aaa
pop
add
bound
aaa
add
ja
inc
add
outsb
xor
add
jae
outsb
add
jne
add
insl
xor
add
popa
dec
add
dec
inc
pop
add
popa
push
add
add
add
dec
add
add
data16
add
inc
add
add
gs
add
jns
dec
add
add
add
dec
add
popa
jp
push
outsb
dec
push
xor
inc
add
add
dec
add
jp
add
jne
dec
add
push
add
add
dec
imul
popa
addr16
add
je
add
add
outsb
cmp
js
push
jne
js
arpl
add
pop
add
bound
add
add
dec
add
add
outsb
jb
push
pop
arpl
add
add
push
add
add
jp
add
add
push
add
add
add
add
push
jns
add
add
push
xor
popa
inc
jno
add
add
pop
add
ja
add
dec
add
push
add
inc
imul
dec
xor
add
add
bound
add
add
data16
bound
dec
add
add
jns
add
xor
add
add
ja
add
je
insl
dec
add
add
inc
add
cmp
inc
popa
pop
add
jo
inc
add
popa
inc
add
add
add
jns
pop
push
add
add
imul
add
dec
push
add
add
add
jns
add
outsb
add
add
add
add
add
jp
bound
add
dec
add
add
add
add
cmp
add
add
add
add
add
fs
add
add
push
xor
push
add
popa
add
push
imul
imul
jns
jae
add
pop
inc
add
outsb
push
add
xor
push
push
add
push
inc
add
add
push
push
push
dec
add
add
add
push
inc
add
add
push
add
inc
add
add
add
add
inc
add
add
push
add
add
push
add
jne
add
add
insl
add
push
add
add
outsl
pop
aaa
add
add
pop
add
add
aaa
add
push
inc
add
add
xor
aad
inc
cmpps
fistl
and
loope
call
push
cli
gs
add
inc
mov
adc
setl
mov
add
pop
ds
and
inc
add
or
fsubs
std
add
sarb
push
push
xor
repnz
and
xor
shrb
add
mov
add
jnp
rolb
dec
fdivs
movsl
inc
fstpt
add
inc
ret
add
arpl
loope
out
fsubrl
xlat
add
popa
mov
cmp
add
add
add
roll
jge
leave
mov
shlb
or
push
ja
cltd
jmp
mov
add
ret
xor
push
add
and
test
xorl
jecxz
mov
pop
call
incb
scas
push
int
out
arpl
dec
fiadds
in
mov
sub
add
loope
test
inc
imul
clc
sarl
jne
push
xor
add
int
pushf
push
mov
add
mov
dec
dec
int3
in
rcl
xchg
inc
sahf
sub
nop
lock
divb
jae
cmp
mov
cld
dec
inc
js
insl
adc
ds
shlb
imull
push
push
lcall
or
call
aaa
out
cmc
stos
mov
loope
pop
rol
bound
jns
loop
jg
cmp
lds
or
call
add
xchg
fwait
xchg
fisttpll
pop
scas
pop
cmp
add
or
les
test
inc
inc
test
mov
add
mov
enter
fucom
mov
mov
xchg
mov
add
pop
shll
or
adc
xchg
shll
add
jne
adc
cld
sbb
in
sub
add
fcomps
test
ja
mov
lahf
jmp
xchg
add
fmull
sbb
jbe
iret
cs
and
jo
xor
push
out
or
xchg
add
dec
shll
loop
scas
stc
jmp
call
mov
and
add
push
add
cs
sub
daa
jge
fistps
push
or
push
xor
int3
jmp
and
mov
nop
inc
rol
and
and
mov
mov
cmp
add
in
mov
and
pop
imul
ljmp
out
lret
mov
loopne
scas
shrb
adc
cmpsb
jecxz
jmp
xchg
mov
or
and
pop
pop
ljmp
je
in
inc
or
push
fiadds
sub
jne
cmpsl
cmp
scas
dec
int3
ficompl
dec
jae
add
cmpsb
rol
stos
mov
test
inc
dec
in
fistl
pop
sti
shlb
adcl
push
push
pop
movsl
stos
and
cmp
roll
out
mov
push
loopne
addb
adc
orl
xor
rolb
popl
rcll
push
xor
xchg
xchg
dec
mov
xchg
cli
pop
push
dec
and
xchg
out
mov
push
xchg
loope
xchg
orb
pusha
in
into
xchg
stos
push
lret
and
rol
out
mov
and
mov
fwait
inc
dec
and
repnz
mov
push
and
dec
pusha
shll
loope
lahf
push
mov
push
shl
xacquire
dec
loope
mov
push
loopne
mov
shll
out
mov
xchg
and
lock
adc
repz
loope
xchg
loop
inc
roll
out
mov
xchg
loopne
mov
mov
dec
shrl
loope
xchg
dec
repnz
push
loope
mov
and
shl
mov
xchg
dec
xor
jecxz
jno
lret
jae
adc
loope
xchg
and
rorl
loopne
mov
dec
jecxz
inc
pop
mov
push
shl
mov
add
loopne
mov
orb
jb
shl
mov
mov
xchg
mov
xchg
icebp
dec
push
rol
out
mov
ret
mov
mov
and
ret
push
and
xchg
out
mov
push
shl
xchg
xchg
dec
mov
mov
push
and
rolb
roll
mov
push
ret
xchg
xchg
out
mov
push
lret
and
rcll
push
push
loope
xchg
xor
shl
out
xchg
mov
xor
shlb
dec
shll
ret
push
mov
bound
shll
out
mov
repz
xchg
dec
repnz
adc
roll
push
out
mov
push
lock
jecxz
push
xchg
and
addl
mov
mov
rol
cmpsb
imul
rclb
mov
daa
xor
dec
ret
add
andl
or
adc
ljmp
mov
sar
pop
xlat
inc
xlat
rorb
mov
add
ret
adc
jg
adc
repz
xchg
dec
fwait
loopne
outsl
mov
fbld
repz
loop
xor
aam
roll
mov
adc
push
and
dec
mov
add
dec
add
rorb
mov
imul
lret
push
sub
std
mov
push
mov
loope
xchg
adc
sarl
mov
and
sbb
mov
lret
jecxz
push
sti
ljmp
andl
and
adc
cmpsl
pusha
lods
loopne
push
mov
mov
daa
ss
dec
daa
xchg
mov
cli
rcl
and
push
cld
or
push
fnsave
dec
pop
or
push
jmp
inc
xor
and
jnp
test
ljmp
rclb
or
push
bound
dec
xchg
lret
ja
xor
mov
dec
out
mov
cltd
xchg
or
and
add
jns
adc
xchg
loopne
pop
out
mov
push
add
sti
repnz
xchg
lret
mov
loope
test
xor
dec
test
jge
push
and
les
call
imul
stos
fwait
out
dec
and
push
repz
add
jle
xor
mov
lods
loopne
push
mov
or
push
mov
jns
mov
test
xor
cli
xchg
mov
loopne
mov
dec
mov
sub
mov
cltd
repz
jmp
add
or
sub
push
lahf
inc
jbe
les
lds
push
inc
jg
dec
test
adc
nop
lock
arpl
lods
loopne
push
sub
jmp
and
jecxz
fistl
loope
xchg
jnp
fcmovnbe
sbb
fisttps
fcmovbe
jg
jmp
mov
out
out
mov
push
push
loope
test
es
ret
arpl
test
call
popa
data16
push
loop
outsl
xor
adc
and
test
cmp
jo
xchg
ljmp
addr16
inc
rorb
dec
jecxz
pop
nop
dec
repz
jb
jg
imul
jmp
loope
roll
leave
dec
cmc
pop
fildl
mov
sub
fstpl
cwtl
inc
or
mov
pop
lret
xchg
fistpll
jg
test
jmp
test
xchg
push
dec
xchg
arpl
pop
lods
roll
outsb
jmp
push
icebp
mov
cli
push
lret
cmp
push
sarl
jmp
popa
jg
dec
xchg
orb
mov
sar
sti
fisttps
sbb
adc
cmp
repz
in
add
dec
add
dec
bnd
and
mov
mov
andb
cmp
push
stos
test
xor
sbb
loope
loopne
pop
mov
popl
dec
and
adc
stos
push
and
sbb
loopne
sti
jecxz
pop
add
mov
popa
sbb
sbb
sbb
ss
loope
rcll
push
movb
inc
loop
daa
lahf
xlat
dec
popa
lret
roll
and
test
je
ljmp
inc
addl
ljmp
jae
xor
xchg
jnp
jb
jecxz
iret
aas
mov
ret
dec
inc
push
or
adcb
cmp
aas
rclb
inc
dec
mov
push
jp
movsb
icebp
push
lods
cs
mov
or
mov
or
jmp
xchg
sarl
inc
mov
notl
in
mov
fcomps
inc
addl
jp
add
cltd
cmp
popa
gs
inc
pop
jp
xchg
and
ja
pop
test
int
push
ja
push
jbe
xchg
xor
insb
mov
sub
aas
push
push
push
or
insb
lahf
cmp
pop
push
pop
lret
xchg
inc
lret
push
sahf
mov
fimull
mov
mov
pop
cmp
subb
shll
je
pop
add
sbb
aas
push
fwait
push
rcll
pcmpgtb
leave
or
std
jle
xchg
js
pop
outsl
dec
push
dec
push
cbtw
xchg
fs
loopne
dec
xchg
inc
imul
add
mov
loop
cmpsb
cltd
lret
fcmovnbe
fisubl
jae
add
scas
dec
sti
fwait
pushf
mov
mov
add
lret
xchg
out
mov
lds
repnz
mov
pop
add
popf
fwait
xor
cli
push
daa
cmp
cmp
addr16
insl
push
sahf
mov
repnz
xchg
mov
inc
testb
pop
imul
pop
push
jmp
jb
push
mov
jbe
dec
lock
xlat
cmp
xlat
movsl
popa
xlat
int3
es
sbb
sub
dec
into
and
loop
pop
sar
cltd
and
mov
loopne
icebp
or
pop
inc
pop
adc
mov
adc
xchg
bound
jle
nop
dec
jmp
es
lret
insb
ret
lcall
mov
jne
mov
pushf
lds
lret
jg
sti
push
pop
sti
sub
push
mov
pop
jle
xor
popa
mov
aaa
jb
mov
popa
out
push
out
inc
dec
jbe
pop
sub
or
mov
pop
fadd
push
movsb
test
orl
sub
pop
scas
iret
inc
add
in
js
jp
sbb
and
movsl
and
push
xchg
ja
roll
push
xor
out
sbb
cmp
cmp
fists
fdivrp
movsb
xchg
add
mov
pusha
repnz
ficomps
test
or
sbb
pop
fs
cmc
fidivrs
lret
mov
pop
into
js
and
jmp
xchg
iret
loope
out
xchg
jp
push
outsb
xchg
jle
out
xor
out
shlb
sbbl
fsubrl
rcrl
or
mov
xor
iret
dec
cmp
jbe
push
out
lret
jae
movsb
inc
inc
dec
cmp
inc
push
dec
loope
sbb
out
jle
push
dec
sbb
mov
pop
icebp
cmc
jnp
add
mov
adc
cmpsl
mov
sbb
mov
xchg
jbe
sbb
dec
clc
lods
loop
sbb
into
pusha
add
out
mov
mov
notl
push
push
outsl
push
lahf
iret
pop
pop
pop
or
jno
push
mov
xlat
mov
push
test
enter
mov
iret
push
jecxz
leave
xchg
push
or
fs
cli
push
push
out
fimull
insb
ret
mov
xor
sbb
xchg
mov
jmp
jmp
mov
dec
jne
into
fsub
insl
xchg
les
add
add
daa
push
inc
test
in
stc
jmp
lahf
into
incl
xchg
mov
xlat
sbb
rcrb
add
repnz
mov
add
push
dec
fwait
push
or
push
sarl
shll
inc
and
les
movsl
sub
sbb
and
xor
xchg
ret
out
iret
xchg
mov
inc
sub
sbb
stos
lret
jp
insl
loope
jecxz
scas
xchg
cmpl
bswap
adcl
cmp
sbbl
loopne
or
cld
scas
repz
xchg
cli
out
xchg
fisubs
and
sbb
xchg
adc
pop
aaa
sub
ret
jp
pop
pop
or
add
rcll
call
int
repz
xor
addr16
das
xchg
jnp
inc
aaa
add
mov
stc
push
mov
mov
ljmp
sub
out
add
sti
sti
mov
push
add
adc
or
dec
cmp
aas
and
inc
pushf
sbb
mov
int
pop
jnp
pop
jge
mov
push
inc
fstl
dec
loope
adc
add
jmp
es
cmp
imul
xor
mov
es
inc
mov
or
jmp
ja
pop
or
jg
pop
adc
loope
jnp
pop
dec
iret
idivl
pop
mov
inc
cmp
and
rorl
data16
inc
add
push
mov
test
cmp
sbb
jp
jbe
rcll
aam
push
add
mov
popf
inc
mov
xor
cmp
dec
jmpw
pop
stos
dec
lahf
push
pusha
shll
push
cmp
push
sahf
or
sbb
jb
pop
adc
jecxz
jmp
lods
and
or
repnz
test
inc
push
pop
or
cld
je
mov
insb
inc
mov
decl
jecxz
and
fucomip
xchg
xor
lods
ret
inc
push
decl
mov
pop
sbb
cmpsb
fimuls
into
push
lcall
pop
fists
jne
push
insb
fstpt
out
iret
pusha
xchg
mov
and
loope
rcr
sarl
jne
dec
movsl
xchg
adc
fidivl
inc
out
mov
mov
sbb
mov
dec
fisubrs
daa
ss
out
cmp
shll
add
repz
cmpl
pop
fdivr
ss
into
insb
cld
pusha
lds
jg
or
xchg
mov
not
lcall
mov
cmpb
loope
push
sub
into
dec
dec
in
jo
or
pushl
add
mov
mov
int
fs
adc
popf
jno
in
loope
dec
lret
push
sbb
pop
daa
xchg
loope
test
cli
popa
aas
xor
jecxz
adc
push
inc
scas
mov
pop
int
inc
dec
cmp
xchg
pop
popf
dec
insl
mov
push
iret
std
pusha
testb
mov
mov
icebp
rcrl
popf
mov
xor
push
inc
mov
jl
or
xor
push
lods
mov
dec
jecxz
mov
pushf
add
sbbl
lea
enter
pop
xorl
and
pop
fisttps
out
orb
pusha
popf
pop
and
xchg
sahf
xlat
pusha
loope
enter
aad
std
sub
mov
sbb
push
aas
inc
pusha
lret
movsb
stos
cmpsb
in
xchg
sbb
jb
mov
or
ljmp
in
or
lcall
xchg
aas
lcall
sbb
push
mov
xchg
jns
rorl
and
sbb
lods
decb
int3
push
mov
icebp
mov
jnp
cmp
push
xor
jl
sahf
sahf
adc
mov
xor
orl
add
addr16
fbld
lret
in
pop
fwait
sbb
pusha
movsl
push
jo
out
mov
bound
xor
andb
pop
xor
int
pusha
xchg
cmp
daa
xor
mov
aam
test
adc
mull
push
push
sbb
pop
mov
dec
loope
pop
mov
mov
stos
mov
je
rcr
sub
mov
out
fwait
sahf
pop
mov
lods
push
cmp
lods
xor
jp
ss
je
push
adc
dec
mov
insb
xchg
jnp
push
push
mov
sbb
pop
repz
rcrl
jmp
cmp
adc
push
lock
pop
inc
jmp
add
mov
ds
push
out
jecxz
adc
pop
pop
imul
ret
fcoms
insb
push
fwait
das
inc
int3
adc
gs
push
shll
fistl
mov
mov
js
push
in
mov
mov
movsl
mov
lods
or
pusha
xor
mov
pop
out
fcoms
mov
test
sbb
jnp
orl
xor
fldt
mov
push
call
or
mov
dec
aad
inc
dec
das
add
mov
stos
test
lcall
out
mov
popa
mov
or
nop
xor
mov
push
xchg
and
pop
insb
out
sbb
rcl
mov
jae
adc
jmp
push
jae
int3
pusha
nop
in
roll
movb
das
sbbb
or
xor
xchg
mov
cmpl
pusha
popa
stos
fwait
jo
jb
fcomp
les
dec
aam
inc
cld
or
ljmp
xchg
inc
pop
xor
daa
ret
push
test
movsb
pop
inc
mov
aas
mov
add
mov
xlat
add
out
das
loopne
fwait
adc
call
mov
testb
sbb
neg
call
pop
dec
push
xchg
fsub
ror
int3
dec
iret
push
xlat
mov
jno
lahf
ja
xchg
mov
rcrb
arpl
jmp
lret
out
mov
daa
es
adc
sti
inc
jge
sbb
jmp
test
inc
mov
lods
push
mov
fiaddl
fsubl
adc
andl
rorl
push
push
movsb
jb
out
data16
xchg
jmp
jle
or
fstpt
test
or
push
negb
cmpsl
leave
lret
dec
xchg
sub
dec
push
in
movsb
ljmp
ljmp
das
movsb
adc
inc
sub
mov
inc
mov
shlb
daa
and
push
call
out
push
mov
loop
loop
xor
mov
pop
call
das
add
adc
hlt
jecxz
xchg
int3
lock
iret
xchg
in
cmp
and
adc
push
push
adc
lret
cmp
add
cmpsl
jmp
call
repnz
inc
lods
xchg
into
fmuls
lahf
into
and
rcr
in
pusha
fisubl
jmp
jecxz
sbb
add
in
or
popf
mov
inc
insb
xor
cld
loop
or
lret
mov
mov
dec
in
mov
fwait
push
xchg
aam
or
sub
scas
aas
testb
adc
mov
dec
push
sarb
cmpsb
dec
mov
or
es
jl
jb
lret
inc
sbb
dec
inc
sub
jne
ja
jecxz
sbb
pop
push
ret
add
out
das
sar
cmpsb
jecxz
push
mov
repz
arpl
xchg
sti
ret
addr16
push
lods
or
cmp
stos
xchg
in
sbb
popa
adc
pop
pusha
lods
pop
jmp
mov
add
jb
add
in
aaa
xchg
mov
mov
sahf
cmpsb
in
xchg
xchg
jmp
movsb
dec
int3
lret
sbbl
xchg
int
mov
push
scas
fisttps
and
loopne
lret
jmp
inc
orl
rorl
orl
cli
rol
sub
shl
hlt
mov
stos
mov
mov
cmp
int3
ret
sbb
insb
mov
std
lret
mulb
aam
xorl
scas
dec
push
xchg
out
roll
xor
enter
lcall
scas
inc
or
dec
cmpsl
xchg
pop
ret
scas
ret
pop
xchg
in
add
mov
fsts
loop
add
pop
nop
adc
inc
hlt
dec
fcoml
pop
aad
dec
das
xor
in
or
adc
jl
aas
addl
lcall
clc
adc
shlb
int
sbb
sub
jmp
mull
add
shll
xlat
mov
les
int3
scas
sahf
test
xor
sar
in
mov
orb
in
lcall
movsl
xchg
icebp
ljmp
mov
lret
out
out
test
xchg
shrb
jecxz
into
dec
fxch
push
dec
mov
lcall
outsl
out
pop
ret
mov
push
les
cwtl
adc
add
adcl
iret
and
cs
dec
or
xlat
rcll
into
push
jmp
push
sahf
mov
or
lret
test
insb
or
xchg
cltd
jnp
out
loope
int
das
loopne
push
cwtl
rcrl
mov
std
imul
cmc
das
sbb
jmp
out
pusha
sub
cmp
push
pop
sahf
xchg
pop
cld
jmp
push
dec
leave
pop
jmp
or
nop
arpl
scas
jbe
insb
xchg
mov
jecxz
roll
xor
insl
xor
mov
cmp
push
xor
jmp
push
mov
adc
fdivl
jg
push
out
leave
sub
inc
sub
lods
and
ret
xor
jo
out
adc
mov
leave
sbb
dec
ds
lret
pusha
xchg
mov
jo
int
xchg
xlat
out
shl
nop
jl
jmp
rcr
mov
pop
iret
adc
lret
push
jle
aaa
shlb
adcl
in
nop
aad
inc
xchg
ja
enter
scas
sub
jle
mov
jns
cltd
mov
das
sbb
mov
dec
jae
and
lret
mov
adc
enter
fmul
popf
mov
in
pop
std
push
xchg
xchg
adc
or
gs
shrl
int3
jae
jg
xchg
scas
lea
push
sub
sub
mov
dec
and
jno
dec
data16
mov
jecxz
ret
iret
out
out
lcall
jns
fcoml
stos
in
test
lds
shll
cli
shlb
mov
dec
mov
icebp
mov
inc
ret
aas
js
aas
cmc
lret
push
arpl
insl
sti
pop
addr16
aam
and
dec
mov
rcrl
cld
mov
loope
add
aad
xchg
and
add
dec
push
and
dec
int
pop
das
loopne
mov
repz
in
insb
mov
pop
adc
icebp
rorb
in
insl
xor
in
inc
adc
cmc
fcomi
mov
fwait
repnz
leave
cmp
repnz
fisubrs
xchg
cmp
dec
push
pop
das
test
movsl
adc
icebp
dec
roll
inc
dec
pop
test
jo
cmpsl
jnp
cmp
in
rcrl
icebp
push
flds
rcr
xchg
shl
mov
push
xchg
outsb
cmp
in
mov
rcrb
ror
sub
adc
sarl
popa
and
testb
cli
rol
mov
shll
inc
lock
dec
jnp
cmpb
out
xor
in
nop
adc
and
leave
ja
pushf
pop
fidivs
nop
sahf
imul
fs
int
pop
and
pusha
push
xchg
jl
xor
inc
pusha
jle
cmp
in
sbb
cmp
movsb
leave
xchg
mov
xchg
loope
jbe
cmp
mov
ret
pop
xchg
dec
lods
jae
sbbl
pusha
arpl
mov
arpl
jmp
mov
cwtl
fs
adc
movsl
lods
daa
push
roll
cmp
loope
xchg
push
lret
cmp
fldt
clc
test
dec
sti
or
lahf
ss
loope
dec
in
pop
jo
pushf
xor
cltd
fimull
xchg
xchg
mov
mov
xchg
adc
pop
fildll
jmp
mov
push
leave
call
iret
push
xchg
into
shll
and
cmp
sti
mov
and
mov
stc
pushf
insb
rorl
cmc
ja
dec
call
mov
sahf
jbe
ds
je
lcall
loop
xlat
push
fistps
dec
imul
arpl
mov
mov
shrl
mov
sub
pop
incl
inc
test
cmp
push
xor
das
mov
jmp
frstor
mov
stos
in
ljmp
repnz
int3
dec
out
pinsrw
sub
addr16
xchg
pusha
jp
lock
loopne
mov
mov
fldt
arpl
addr16
adc
loop
or
pop
jecxz
gs
cld
adc
imul
sbb
sbb
bound
enter
cltd
mov
add
push
mov
pop
mov
inc
push
repnz
clc
ja
inc
enter
cmp
clc
pop
movsl
std
xor
loop
stc
add
jg
lods
icebp
xor
movsb
rcl
pop
popf
jle
sahf
xchg
roll
and
mov
incb
adc
inc
sbbb
pop
mov
xor
rcl
push
xchg
mov
dec
int3
rolb
popa
jno
jecxz
test
adc
pop
mov
sbb
test
adc
and
aad
push
ret
aad
sbbb
pop
cmp
shl
shrd
cmp
sub
add
fnstsw
daa
cmc
or
idivl
push
test
addr16
mov
loop
repnz
aam
repnz
mov
xor
and
adc
xor
test
mov
lret
inc
shll
jp
jne
movl
mov
cmp
jmp
movsb
cmpsb
sbb
test
or
cs
lret
pop
jl
push
dec
test
enter
pusha
loop
cmp
arpl
cmp
jbe
jmp
dec
pusha
ja
pop
jmp
dec
loop
decb
bound
cltd
jp
push
jmp
repz
jbe
mov
jl
push
jb
sar
repnz
adc
daa
mov
imul
inc
js
lods
pop
andl
inc
test
fcmovnbe
test
stos
psrld
push
enter
push
insb
ret
xchg
popa
mov
int
sahf
mov
in
lahf
add
shll
jle
adc
ljmp
lcall
dec
int
test
loopne
fbstp
sahf
fldt
fcmovb
xchg
or
add
jae
icebp
repnz
sub
insb
rcrb
nop
lahf
cld
jne
xchg
dec
shlb
mov
pop
lret
lock
add
and
aas
icebp
inc
sbb
inc
cmp
jbe
mov
inc
int3
in
mov
imul
push
std
jb
in
dec
movsb
lods
cmp
inc
imul
loop
enter
daa
mov
push
arpl
in
jo
shl
fmull
pop
fiaddl
fnstcw
out
jmp
inc
mov
cmp
push
nop
out
jb
xchg
xchg
xchg
add
inc
pusha
imul
icebp
and
pusha
or
or
repz
mov
adc
out
into
mov
ds
add
add
das
dec
sbb
and
or
push
cmpsb
aas
cs
cmpxchg
pop
mov
cltd
and
adc
mov
in
or
dec
push
inc
adc
push
dec
push
jecxz
dec
popf
pop
sub
adc
sti
sti
aaa
sbb
xchg
scas
data16
push
or
and
xchg
das
sub
ss
lds
inc
jne
fisttpll
xchg
ja
shlb
mov
push
lea
sub
addr16
popf
nop
jge
mov
xchg
mov
push
loopne
clc
or
lods
lret
adc
mov
pop
dec
mov
mov
sub
sti
repnz
pop
ror
ret
fcmovnb
add
add
dec
add
add
je
add
inc
ja
imul
dec
cmp
cmp
add
dec
add
data16
add
push
add
imul
add
xor
add
dec
jb
add
add
add
add
add
add
pop
jp
add
imul
add
insl
push
inc
add
add
inc
add
add
add
add
outsl
add
xor
insl
add
pop
xor
add
add
add
dec
add
add
add
inc
add
add
add
add
pop
dec
add
add
inc
add
add
pop
add
inc
add
add
xor
xor
inc
add
dec
xor
add
insl
add
push
add
dec
dec
xor
add
add
dec
insl
addr16
jp
je
dec
add
pop
add
add
add
pop
pop
add
add
add
add
push
add
outsl
jns
add
add
gs
add
push
add
add
push
insl
xor
add
xor
imul
add
push
add
push
arpl
add
data16
add
add
pop
push
aaa
xor
add
add
inc
push
add
js
cmp
add
jp
pop
add
add
add
push
add
add
add
dec
push
add
add
add
xor
dec
inc
xor
add
add
add
ja
pop
outsb
push
aaa
jae
add
add
add
add
add
insl
insb
add
add
outsl
xor
add
push
outsl
add
add
jb
dec
add
pop
add
pop
add
gs
add
add
jo
xor
add
add
add
bound
add
jp
outsl
jp
add
popa
push
push
add
add
add
dec
insl
add
add
jae
add
inc
xor
inc
dec
dec
add
cmp
add
add
push
add
add
jb
dec
dec
add
add
add
add
add
add
cmp
push
jae
add
add
insb
xor
add
dec
add
jp
popa
dec
add
add
js
dec
add
add
aaa
add
add
add
xor
add
push
push
xor
data16
add
outsb
push
inc
dec
dec
add
add
add
add
add
push
xor
add
add
add
add
pop
js
add
add
add
add
popaw
add
add
add
add
add
add
add
add
add
jne
add
add
jb
add
je
add
dec
cmp
add
add
dec
add
add
add
push
add
add
addr16
add
add
xor
xor
inc
add
add
add
add
aaa
add
inc
add
jae
add
add
push
bound
add
ja
add
add
pop
add
add
add
add
jae
add
push
jno
inc
add
dec
push
add
add
insb
push
inc
add
jno
inc
dec
jns
imul
cmp
add
add
add
add
push
aaa
add
push
dec
push
insl
add
loope
int3
xchg
sar
xchg
imul
push
pop
add
and
test
fwait
scas
aas
imul
dec
lea
in
aam
add
mov
jmp
push
adc
cmp
jge
repz
cmpsb
das
or
ret
enter
push
dec
scas
mov
and
daa
push
inc
popa
inc
int
int3
add
or
dec
xchg
xchg
jp
inc
or
mov
imul
cwtl
and
cmpsl
inc
jecxz
das
rorb
adc
in
clc
xchg
xchg
inc
jne
in
bound
enter
sbb
rorb
sbb
xor
sub
adc
dec
pop
insb
ret
sub
jae
sbb
cmpsb
in
xor
jecxz
repz
dec
mov
adc
stos
aad
xchg
daa
enter
jne
in
in
pusha
and
jmp
imul
ss
and
adc
jecxz
fsubrs
aaa
mov
ss
dec
pop
jp
inc
sub
pusha
mov
pop
lret
mov
ja
sahf
and
xchg
gs
cmp
lds
xchg
xor
xor
repz
mov
push
sub
push
cmc
cmpl
inc
pop
ret
aad
pusha
stos
subl
repz
cmpsb
movsl
sbb
mov
inc
xlat
iret
or
mov
xlat
repz
inc
sbb
pop
xor
jge
int
movl
adc
int3
dec
les
and
mov
out
mov
inc
fadd
hlt
iret
int3
inc
push
aas
and
lret
xor
add
mov
adc
out
jecxz
adc
jmp
cmpsl
repz
loop
xchg
insb
pop
loop
cs
scas
fwait
jp
rclb
lds
fisubrl
add
mov
je
sbb
loope
je,pt
xchg
inc
cltd
in
in
leave
adc
xor
mov
je
lret
or
test
dec
imul
xor
mov
push
inc
sub
inc
push
add
adc
adcb
mov
adc
movl
sbb
sbb
rclb
adc
fisubrl
mov
test
push
cmp
in
xchg
xor
inc
imul
ret
aaa
addr16
cmp
int3
lret
dec
fcoml
fildl
stos
inc
adc
sahf
pusha
sti
cmpsb
cmpsb
testb
jecxz
mov
testb
cli
pop
addps
pop
dec
cmp
leave
cld
push
ds
in
shl
xor
in
dec
jmp
xlat
loop
fstp
das
sub
es
addb
lret
jg
dec
cmpsl
xchg
pushf
mov
repz
cli
test
xchg
imul
test
aam
push
and
dec
inc
fmul
mul
xchg
js
xchg
decb
in
push
xlat
test
bound
and
and
rorb
dec
jge
xchg
test
adc
fdivs
std
inc
lods
dec
aas
jbe
int
and
and
push
jmp
dec
aad
push
cwtl
push
xchg
lret
dec
movsb
push
out
adc
cmp
addb
mov
fidivs
push
push
fwait
cltd
add
cwtl
sbbl
out
faddp
ret
sub
addb
out
xchg
and
daa
cmpl
mov
fbld
bound
call
clc
movsl
jmp
cmc
mov
iret
cli
in
ja
or
imul
orl
and
sahf
adc
jg
push
loope
shlb
jno
xorl
adc
and
xor
xor
rcl
dec
rolb
mov
leave
shl
dec
icebp
xchg
lret
xchg
inc
andl
loope
rclb
push
inc
mov
iret
out
lcall
inc
sbb
push
pop
cltd
mov
push
outsl
aaa
imul
mov
lea
mov
mov
push
ljmp
in
shll
out
clc
inc
xchg
insl
jg
xor
rorl
sbb
dec
out
cmp
repnz
mov
xlat
mov
cld
dec
out
mov
push
mov
and
push
inc
and
fisttpll
add
adc
or
subb
insb
lods
or
sti
push
pusha
or
pop
push
aas
clc
inc
inc
or
dec
xchg
mov
push
mov
push
inc
jne
clc
pop
pop
stos
mov
mov
mov
cwtl
loope
popl
pop
jne
sti
mov
loopne
fcoml
fidivrs
cmc
sub
pop
jns
rcrb
xorl
call
cmp
pushf
push
sbb
scas
dec
push
xlat
jno
outsb
sub
dec
fcom
push
push
out
aad
outsl
insb
cmp
out
dec
divl
sbb
mov
fists
mov
out
add
orl
das
leave
jecxz
inc
aas
push
jno
mov
pop
jle
addb
dec
repnz
fs
xor
cmp
inc
orb
lds
in
pop
adc
dec
and
push
mov
fldl
xor
and
popa
aad
fdivrl
out
xchg
out
lcall
add
jns
jl
insb
cmpsl
outsl
jne
gs
mov
xchg
lret
test
sarl
or
sbb
sti
std
int
data16
ret
pop
shll
cs
push
pop
pop
jg
dec
inc
rcll
loopne
dec
sahf
lret
ret
sarl
aam
and
mov
pop
add
push
aas
mov
testb
mov
sti
mov
push
or
adc
or
lods
clc
dec
fisttpl
lods
mov
xor
idivb
fwait
mov
xchg
inc
out
popf
add
iret
mov
inc
stos
fcoml
fistl
jmp
mov
test
repnz
inc
push
xchg
pop
int
loope
cmp
mov
adc
sbb
adc
imul
mov
enter
pusha
into
fsubrl
add
xor
aas
sbb
aad
lahf
icebp
fnsave
jge
fdivs
inc
into
and
add
pop
mov
inc
jno
xchg
dec
or
lret
pop
out
les
mov
dec
test
dec
xor
movsb
ret
push
fisubrs
or
cwtl
dec
pop
dec
data16
mov
mov
and
mov
in
xor
add
adc
push
mov
or
mov
ficoml
push
insl
icebp
test
in
inc
xchg
add
arpl
pop
rcrb
movsl
fildl
inc
loopne
icebp
dec
jne
lahf
jbe
and
pushf
ljmp
mov
insb
scas
inc
adc
adc
adc
pop
and
dec
fisttpl
fadds
shl
jecxz
cwtl
cld
data16
xchg
std
rclb
mov
sarl
cmp
push
loopne
int3
rorl
out
filds
lds
addr16
xor
inc
xchg
xor
sub
jl
push
inc
and
enter
add
pop
mov
mov
fwait
xchg
pop
insb
mov
sar
inc
xor
es
and
loop
mov
lods
in
push
aam
daa
jb
int
cld
pop
enter
fs
add
sub
inc
mov
or
mov
xchg
sub
dec
sub
dec
aad
fisubrl
push
icebp
xchg
enter
push
aas
push
add
and
fstpl
roll
out
jecxz
cmp
pop
jl
jbe
insl
shrb
rcl
mov
stos
adc
test
jmp
sub
rcrl
cli
fbld
out
mov
cmpsl
jecxz
sub
std
mov
inc
shl
dec
jb
cltd
fimull
xchg
out
ja
mov
out
stos
shlb
imul
mov
dec
inc
loopne
pop
nop
shll
push
cltd
enter
xlat
xchg
ja
mov
int3
jle
inc
inc
lock
lock
xchg
out
mov
das
loop
repz
xor
jge
dec
fstpl
pusha
xchg
enter
inc
cmpb
orb
and
aam
addr16
xlat
out
js
mov
test
xchg
inc
sarb
and
jge
test
popa
es
bswap
push
push
fwait
push
incb
fs
add
inc
jo
mov
lret
add
pop
push
dec
adcl
sti
outsl
mov
mov
enter
iret
dec
adc
sub
test
mov
pop
jne
mov
xchg
enter
repnz
push
mov
aaa
int
loopne
push
lock
xchg
cmpsb
enter
inc
fs
mov
inc
dec
dec
dec
movsb
push
es
fs
rorl
out
hlt
and
xlat
aad
iret
push
test
fdivrs
dec
outsb
pop
pop
lea
dec
out
lea
push
shrl
dec
sbb
dec
in
cmp
pusha
fdivrl
jmp
and
icebp
lcall
adc
sub
test
icebp
fmull
push
mov
mov
inc
inc
mov
xchg
aad
ljmp
fisttpll
bound
adc
mov
xchg
fildl
jl
loop
push
push
popa
cmp
push
pop
ds
push
jnp
fsubrl
xchg
in
and
fs
jecxz
add
mov
test
or
xchg
decl
jl
scas
cmp
mov
mov
xchg
fcmovnu
pop
xchg
push
push
lcall
ret
lods
push
push
jle
or
mov
test
dec
xchg
sbb
mov
add
mov
or
inc
sub
repnz
mov
cmp
lods
dec
inc
xor
hlt
dec
or
hlt
int
mov
or
xchg
je
int
adc
mov
in
jmp
pop
in
lods
jnp
or
jb
pop
inc
arpl
and
pop
mov
leave
loop
mov
sti
ret
jl
lahf
arpl
mov
xchg
rorl
loopne
ljmp
ror
je
leave
shll
std
jp
cltd
xchg
sti
cmp
lea
mov
mov
pusha
sti
lea
clc
add
lock
pop
ret
or
mov
sbb
repnz
pop
jb
lods
or
inc
jmp
rcll
jmp
jecxz
xor
sbb
psrld
xchg
lahf
call
das
lds
mov
aam
push
outsb
ljmp
popf
inc
or
xor
fcomi
inc
loopne
lds
stc
mov
aad
movb
les
fs
mov
rcll
inc
push
jge
cltd
sbb
xorl
xchg
inc
roll
and
sbb
fwait
sub
in
aad
jae
movsl
loopne
mov
inc
outsl
push
adc
loopne
cmc
rcll
sbb
int
jg
mov
mov
push
movsl
mov
xor
imul
arpl
xchg
xlat
inc
mov
mov
inc
and
negl
popfw
adc
mov
shl
movsl
xchg
shll
loope
and
stos
jnp
in
pusha
nop
sbb
add
sub
enter
loop
ja
inc
mov
int
pusha
icebp
shll
data16
popa
mov
xchg
mov
jb
dec
ss
inc
enter
sbb
scas
dec
or
dec
xchg
sbb
out
mov
bound
inc
js
dec
cmp
sub
popa
loope
and
or
idivb
lret
xchg
clc
mov
pop
dec
adc
push
in
lods
and
bound
dec
insb
fiaddl
inc
mov
inc
fstpt
inc
aad
pop
gs
push
push
sub
pusha
in
and
jecxz
inc
or
jmp
stc
nop
scas
cmpsb
dec
out
push
icebp
dec
xlat
cmpl
cmp
and
test
arpl
and
sbb
arpl
jecxz
orl
lret
je
mov
in
pusha
add
ret
scas
inc
jae
faddl
fstpl
jae
inc
test
shll
jp
fisttpl
in
loopne
push
cld
idivl
js
inc
popa
rcll
sahf
and
inc
mov
sub
push
jg
mov
inc
sub
das
sbb
push
aaa
xlat
scas
dec
out
dec
lock
xchg
mul
pop
mov
inc
sarb
in
fists
push
adc
mov
adc
push
push
inc
das
jl
mov
repnz
xor
cwtl
jmp
xchg
xchg
insb
pop
adc
jns
sbb
adc
push
push
loope
insl
sbb
jno
orl
stos
push
or
test
idivb
outsb
stos
mov
mov
adc
adc
add
js
cltd
into
aam
fldenv
out
add
mov
mov
adc
push
rcll
xchg
stos
or
adc
bound
adc
push
jae
adc
jg
xchg
cmpsb
mov
shr
mov
adc
out
and
js
pop
fldl
and
shrb
in
popf
ja
das
insb
stos
pop
pop
mov
pop
xor
xor
sub
xor
jl
enter
add
dec
mov
xchg
and
rolb
cmpb
lret
test
fmul
cmpsb
mov
xchg
data16
pop
outsb
pop
ret
test
loop
dec
popa
and
lds
lea
pop
push
dec
dec
sar
aad
in
sahf
shrl
stos
fcom
outsl
cmpsl
cmp
push
enter
out
aad
lcall
cmp
push
xchg
sub
cmp
or
arpl
sarb
test
dec
arpl
jle
add
outsb
pusha
rorl
ja
mov
out
lret
pop
push
pop
push
jecxz
out
xchg
out
ss
and
roll
mov
and
incb
loopne
pushf
jb
add
scas
jl
and
xlat
dec
mov
aam
dec
xor
add
add
add
add
add
xor
jp
add
add
push
add
xor
add
add
add
push
jae
push
jno
xor
add
dec
add
push
add
xor
xor
add
push
insb
pop
add
insl
add
push
insl
add
imul
add
add
jp
push
dec
add
outsl
add
jne
add
add
dec
jns
dec
jne
add
xor
add
je
add
add
push
jo
add
jp
data16
push
xor
add
inc
popa
inc
add
add
add
add
inc
dec
add
pop
xor
add
add
dec
dec
push
push
add
imul
bound
aaa
add
add
dec
xor
inc
inc
add
inc
cmp
add
add
add
add
add
data16
dec
add
inc
add
add
add
dec
push
dec
add
add
push
push
imul
imul
add
dec
add
cmp
add
push
pop
outsl
aaa
dec
inc
xor
data16
add
add
jbe
dec
add
add
add
arpl
add
je
add
add
add
add
add
add
add
add
add
add
xor
dec
add
add
add
xor
jno
add
add
add
add
data16
arpl
push
inc
add
addr16
jp
add
add
add
add
add
add
push
imul
xor
dec
add
add
dec
bound
dec
xor
add
pop
add
add
add
inc
inc
ja
add
add
xor
jbe
add
add
xor
xor
add
aaa
imul
add
add
add
add
inc
add
add
add
je
add
dec
add
add
dec
push
dec
add
data16
insl
add
imul
jp
add
add
xor
xor
fs
insb
add
push
fwait
add
cmp
idivl
insb
add
je
add
push
inc
push
push
dec
dec
dec
cs
dec
dec
add
add
add
outsb
mov
add
mov
enter
outsb
gs
xor
cs
insb
add
xor
xlat
sub
add
adc
cmp
add
repnz
push
imul
inc
push
add
add
inc
add
dec
popa
dec
add
add
xor
sub
insl
push
daa
xorb
dec
lahf
js
xor
add
dec
add
add
add
arpl
xor
ja
add
xor
add
dec
jae
add
push
push
add
push
add
add
add
insl
inc
add
jbe
add
add
add
bound
add
add
add
pop
add
add
add
add
jp
add
ss
aaa
push
xor
xor
push
inc
pop
add
jbe
add
jp
add
je
dec
add
add
add
je
add
add
add
inc
add
imul
inc
je
add
add
inc
inc
add
xor
add
add
push
add
add
inc
add
pop
add
pop
xor
add
add
add
dec
jo
add
push
js
add
add
insb
add
add
inc
add
add
add
add
xor
add
inc
add
add
xor
inc
add
inc
add
add
add
add
add
add
add
add
dec
push
add
fs
insb
add
add
cmp
add
jae
push
add
add
add
add
add
dec
add
add
add
add
add
add
add
data16
push
add
arpl
add
dec
bound
add
add
cmp
push
inc
add
add
add
add
add
add
add
pop
add
add
insl
add
add
ss
xor
add
push
pop
add
inc
add
add
xor
add
outsb
dec
add
add
push
add
inc
add
xor
add
popa
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
add
inc
push
add
add
arpl
add
add
inc
add
add
add
add
cmp
gs
add
outsb
inc
push
jns
add
pop
push
xor
add
add
add
inc
aaa
push
jns
push
add
add
ss
add
xor
xor
xor
xor
add
add
push
add
push
add
xor
add
add
pop
bound
add
add
dec
push
insb
imul
add
xor
add
imul
add
outsl
add
push
inc
xor
add
add
add
insb
add
add
jb
imul
jae
push
add
add
dec
inc
popa
add
jno
outsl
add
add
outsb
push
jae
add
add
add
bound
add
add
add
add
add
inc
add
add
insl
push
imul
add
add
dec
js
popa
add
pop
add
add
add
add
add
add
add
dec
add
ja
push
add
ja
add
inc
add
jp
add
add
add
xor
cmp
add
dec
pop
inc
jns
add
add
add
add
add
dec
add
add
add
add
inc
popa
jbe
add
jae
jae
cmp
outsb
add
outsb
add
cmp
add
pop
js
arpl
add
add
add
inc
add
bound
add
outsl
arpl
add
fs
add
add
add
add
add
jp
add
add
add
xor
add
add
jp
add
outsb
add
add
push
add
xor
add
xor
dec
jo
add
add
bound
add
pop
dec
jns
inc
xor
push
inc
insb
add
arpl
add
inc
add
push
jns
add
bound
add
add
add
add
add
add
add
add
dec
add
add
add
data16
dec
add
add
add
add
popa
outsb
jo
add
jbe
je
add
add
xor
push
push
add
push
ja
cmp
add
xor
push
add
jne
add
add
add
add
inc
add
xor
inc
add
pop
add
add
dec
add
pop
xor
add
inc
pop
cmp
cmp
add
inc
add
inc
inc
add
add
add
add
jne
add
jo
add
fs
add
add
js
add
cmp
jbe
add
ja
add
add
arpl
add
add
add
pop
bound
outsb
push
add
dec
add
add
cmp
arpl
add
xor
xor
add
jb
add
insb
dec
add
add
imul
add
jb
aaa
popa
add
insl
push
jp
imul
jo
push
js
add
add
add
dec
add
jbe
add
insb
add
jp
add
imul
aaa
popa
add
add
inc
pop
dec
jbe
add
inc
add
dec
inc
inc
dec
jbe
outsl
add
add
add
add
dec
add
xor
pop
add
add
add
add
xor
add
jno
push
add
aaa
add
jno
add
add
xor
add
add
add
jp
addr16
xor
add
add
popa
add
dec
jbe
add
add
xor
add
aaa
add
add
add
dec
add
add
add
add
push
dec
add
cmp
add
outsb
add
jns
add
add
xor
add
inc
add
xor
pop
add
add
push
jb
push
inc
add
add
add
push
add
fs
add
bound
add
dec
inc
add
add
aaa
xor
js
push
add
add
add
add
add
add
add
jp
push
add
push
pop
add
jp
push
add
pop
add
add
add
add
add
add
insl
xor
add
add
insb
add
add
xor
add
add
add
add
ss
push
insl
cmp
add
add
ja
add
add
add
add
add
add
dec
add
dec
data16
push
add
inc
add
add
dec
xor
add
bound
push
add
add
insl
add
add
add
dec
add
add
insb
ss
xor
dec
add
add
add
add
push
inc
inc
add
push
add
xor
aaa
jb
add
jb
imul
add
push
dec
arpl
inc
add
add
add
add
dec
add
add
add
arpl
add
inc
push
inc
add
dec
add
add
push
push
add
add
add
push
add
add
add
add
inc
add
push
dec
add
add
add
xor
add
pop
pop
addr16
add
add
jb
add
inc
xor
push
inc
ja
push
jo
add
xor
add
add
add
js
cmp
jne
jno
xor
add
jns
push
add
dec
dec
add
dec
add
add
add
push
xor
add
add
dec
add
add
add
push
gs
add
push
push
add
add
add
add
outsb
add
add
add
add
inc
add
add
dec
add
add
pop
add
outsl
inc
add
dec
add
inc
add
ss
add
add
addr16
imul
add
add
add
add
add
push
add
push
add
pop
add
cmp
add
add
add
jae
add
push
add
add
jb
push
add
inc
add
add
add
add
pop
add
dec
push
add
dec
add
js
add
pop
add
dec
inc
dec
xor
inc
add
inc
add
add
pop
data16
jae
add
inc
add
push
pop
add
add
insb
add
add
dec
xor
add
jp
add
inc
add
push
add
add
outsl
jp
dec
add
add
add
xor
add
dec
inc
jns
add
jo
add
add
add
push
add
xor
add
add
add
push
jne
jb
pop
add
add
add
inc
add
arpl
add
add
add
add
add
add
add
inc
push
add
add
add
inc
push
add
push
jne
add
add
add
xor
xor
push
inc
add
add
dec
push
add
add
jne
add
add
add
add
add
inc
jb
add
add
js
add
add
add
add
bound
xor
push
xor
add
add
add
add
add
push
jne
add
add
xor
add
add
add
ja
add
add
xor
add
add
add
add
dec
add
dec
add
dec
imul
push
add
add
outsl
add
add
xor
arpl
add
add
dec
add
inc
add
inc
add
add
add
inc
jbe
icebp
push
fnsave
or
ljmp
call
lcall
lods
movsl
decl
lods
push
loope
call
ret
lcall
out
loop
nop
imul
decl
incl
jle
xor
out
loop
cli
data16
fsubr
inc
call
enter
mov
loop
aad
xchg
outsb
out
dec
test
fsub
incl
shl
jmp
out
loop
push
sahf
pushl
outsl
pushf
lcall
pushf
imul
fnstenv
ja
jmp
mov
jmp
fsub
in
lcall
fucom
dec
sub
decl
pushf
mov
test
xlat
out
cltd
xchg
incl
jmp
gs
pushf
jmp
ljmp
fwait
cmc
pop
dec
or
cs
arpl
push
fsubl
push
pushf
decl
jle
adc
sbb
frstor
loop
call
insb
popf
jne
adc
sbb
push
popa
call
movsl
imul
fsubp
xchg
es
ljmp
movsb
xchg
fstps
push
loop
lcall
loop
push
adc
decl
jo
lcall
jle
jl
ljmp
fstl
movsl
hlt
fstps
lods
icebp
push
gs
fistps
sub
mov
call
imul
sbb
addr16
pushl
call
shl
jmp
or
popf
loop
mov
lcall
xchg
xchg
pushl
adc
jge
push
in
push
push
push
imul
fldcw
mov
sti
xchg
loope
call
sub
pushl
mov
push
aad
mov
mov
mov
call
cli
dec
fld1
imul
dec
inc
cmpsl
cwtl
xchg
call
rclb
or
cmpl
pushl
adc
sar
decl
mov
ljmp
call
nop
call
sub
loop
lcall
out
adc
push
fstl
out
pushl
imul
imul
jne
loope
fldenv
in
clc
lcall
cmpsb
sbb
jl
insl
cmp
out
loop
ds
loop
jmp
lcall
sub
ficoms
mov
cli
call
insb
jge
inc
decl
pushf
ss
fcmovu
sbb
sti
jmp
movsb
cmp
call
loop
call
push
in
imul
jge
mul
call
push
xchg
in
nop
pushl
repz
jge
aas
lret
push
fsts
ja
sbb
xor
call
and
sbb
lcall
arpl
mov
call
call
scas
loopne
call
scas
mov
jbe
lcall
lcall
push
fwait
jmp
rcll
and
imul
push
xor
scas
mov
gs
out
call
pop
aad
and
call
sbb
imul
sbb
or
call
push
cmp
decl
adc
xchg
or
jmp
jl
xchg
xor
insb
cmp
push
pop
xor
out
loop
outsb
xor
xor
pushl
decl
or
pushf
cmp
ss
jge
out
xor
decl
jge
sub
lcall
jmp
lret
fcomps
push
lcall
jmp
add
jmp
enter
mov
push
xor
pushl
bound
inc
call
in
fnstenv
lret
repnz
lcall
mul
decl
cmpsl
inc
or
insb
leave
dec
out
fsts
xor
adc
xchg
rcrb
in
sbb
lret
out
lds
or
inc
out
xchg
sbb
popf
xchg
pop
pop
ljmp
sbb
out
inc
dec
mov
push
add
xorl
cmp
fdivr
and
dec
in
pusha
dec
push
out
loop
in
aam
movsl
scas
frstor
mov
gs
dec
lock
jmp
call
cmp
loop
call
mov
call
shl
mov
ss
inc
cmp
fistps
out
loop
push
out
addr16
add
in
inc
pushf
lcall
loop
out
loop
repnz
insb
imul
sub
repnz
jb
or
push
jg
inc
loop
xor
xchg
scas
xor
out
jb
out
loop
mov
xlat
iret
cmpsb
push
aam
adc
pushf
test
cmp
xchg
pushf
out
frstor
mov
fistl
imul
stos
push
imul
mov
and
enter
mov
sbb
stc
xchg
lret
push
inc
adc
adc
pushf
xchg
in
lret
jg
push
adc
pushf
push
out
xor
jg
sbb
xor
adc
jecxz
xchg
pop
push
ljmp
out
fstpt
add
lea
mov
fdivr
pushl
loop
pushl
jp
lock
and
loop
lcall
loop
out
jne
loope
loop
clc
sbb
xor
dec
cmpsb
lods
addr16
out
loop
movsb
out
loop
in
xchg
push
loop
aas
lods
loop
push
jmp
jmp
loop
sbb
and
in
loop
fstps
pushf
push
pop
outsb
les
mov
inc
es
loop
out
cmpsb
lahf
aas
outsb
or
xchg
jle
fwait
loope
loop
out
loop
jmp
loop
inc
aad
inc
out
daa
aad
jmp
or
jmp
inc
inc
cmp
loop
dec
pop
inc
push
out
loop
xor
loop
call
cmp
rol
in
loop
out
mov
pushl
xchg
incb
out
outsl
mov
xchg
push
idiv
incl
out
jecxz
cmp
or
loop
cli
out
push
pushf
mov
rclb
push
fucomi
loop
call
push
stos
fidivs
out
loop
into
jae
insl
out
loop
mov
mov
out
pushf
lcall
mov
out
pop
cmp
pushl
pushf
les
in
jmp
fwait
fstpl
sti
loop
xor
sbb
loop
adc
out
lret
sub
loop
pop
push
adc
pop
xor
jp
out
xor
or
xor
out
mov
in
cmp
sahf
or
adc
push
push
inc
jmp
pop
arpl
insb
lret
sbb
popf
outsb
xor
pushl
xor
adc
adc
shl
test
sbb
inc
addr16
fcomps
sti
imul
imul
sub
in
mov
jo
pop
ljmp
and
scas
fimuls
pushf
popa
and
ja
inc
lret
xor
insb
mov
push
or
loopne
rolb
fmuls
jmp
push
out
loop
fimuls
loop
add
hlt
std
sub
loop
out
daa
scas
xchg
out
loop
decl
out
or
daa
out
loop
out
aam
iret
scas
adc
ds
loop
jmp
xchg
fistpll
loop
incl
loop
pushl
sub
out
loop
jmp
jmp
shrl
pop
dec
ret
ret
lret
out
inc
sub
jmp
call
xor
lahf
iret
adc
pop
out
stos
jp
in
pushf
decl
fwait
xor
pushf
ja
loop
addr16
add
out
push
dec
in
inc
fsubr
jbe
iret
mov
lahf
out
loop
sbbl
out
xchg
cmp
in
pushf
pop
push
jmp
call
add
jp
jmp
mov
insl
loop
mov
jmp
jnp
push
pusha
pusha
or
add
xor
ss
jmp
loop
out
dec
out
loop
icebp
out
inc
pushf
sbb
mov
fwait
pushl
loop
flds
decl
loop
cmp
js
fs
lret
mov
imul
sbb
rcrl
push
sbb
pop
xor
js
les
cmp
out
test
or
loop
inc
mov
mov
iret
push
enter
imul
xchg
pushf
test
push
shrl
loop
out
fcoms
xchg
out
mov
mov
fldt
imul
enter
adc
push
icebp
ss
stc
dec
lret
mov
push
pop
movsl
sbb
inc
push
aas
fldenv
call
incl
in
push
xchg
iret
insb
cmp
dec
out
rclb
jbe
in
pushf
xchg
in
xor
imul
xor
lahf
pop
jecxz
and
loope
call
scas
mov
push
pop
fdivr
push
inc
xchg
es
out
loop
ds
jmp
out
iret
dec
cmc
out
ds
jmp
push
dec
out
loop
incl
js
out
loop
in
call
ficoms
and
fwait
in
sbb
push
jmp
das
out
inc
pushf
jmp
mov
loop
xor
mov
in
out
sub
lahf
mov
gs
out
jmp
jmp
or
out
loop
jmp
ljmp
in
psrad
cmpsl
sbb
push
fwait
jmp
imul
push
mov
call
jmp
popf
out
cwtl
bound
loop
jge
loop
out
loop
jmp
jmp
xchg
loop
jmp
sub
out
pop
pushf
xchg
out
loop
and
loop
in
loop
out
loop
jecxz
add
loop
loop
mov
xor
decl
loop
decl
push
cwtl
and
jmp
inc
dec
psrad
lcall
loop
call
loop
mov
pop
inc
out
outsb
out
mov
sbbl
nop
ljmp
xor
xchg
iret
sbb
in
pop
pop
push
out
loop
dec
mov
xchg
daa
pushf
pop
xchg
out
fldcw
or
jmp
mov
data16
xor
jnp
call
lret
fcomp
inc
lret
sub
in
and
xchg
ljmp
jmp
insl
adc
out
ja
xor
loop
sbb
sub
mov
push
xlat
in
jnp
fwait
or
dec
pop
and
lcall
addb
push
jle
lcall
fwait
decl
out
loopne
jmp
lret
out
loopne
jmp
jmp
dec
stc
jo
jmp
dec
mov
dec
jmp
in
jmp
dec
jmp
or
jmp
dec
lcall
out
loopne
fisubl
out
loopne
jmp
jmp
dec
jmp
jmp
decl
inc
jmp
call
dec
xor
in
adc
jmp
out
pop
in
in
loop
xchg
xor
adc
sahf
std
in
popf
popa
xor
decl
in
test
dec
out
dec
lods
jg
sbb
lret
call
rcrb
xlat
fldl
xchg
cmp
in
adc
out
rclb
lcall
nop
decl
nop
incl
outsl
jb
xor
jle
add
cmp
jmp
dec
fs
fstl
xor
loop
mov
decl
pushl
loop
in
adc
decl
dec
fs
decl
adc
notl
cmp
out
loop
outsb
decb
pushl
cli
loop
dec
xor
imull
add
cmp
iret
jmp
iret
add
pushf
lcall
out
loop
mov
decl
dec
mov
jns
jmp
jg
jmp
loop
mov
pop
sub
jbe
sbb
scas
and
xchg
xor
cmc
mov
adc
ret
or
ds
pop
inc
lret
mov
ja
jmp
imul
movsb
dec
push
loop
pushl
repnz
push
les
pop
les
push
push
xor
decl
fldt
adc
jmp
insl
aad
mov
jg
mov
fcompl
icebp
pop
inc
out
xlat
inc
xor
pop
lods
aas
ficoms
cmp
out
adc
cli
std
pushl
cmp
sbb
jmp
lret
clc
hlt
xor
mov
push
loop
add
mov
xchg
sbb
mov
mov
pop
insl
out
loop
mov
push
pop
adc
jb
sbb
pushl
ficoml
cli
push
push
fldlg2
push
aam
xor
jmp
in
adc
mov
shll
mov
rcll
xor
adc
pop
inc
out
pop
mov
jmp
iret
inc
lods
loop
jg
xchg
sub
adc
fidivl
pop
sbb
xchg
dec
adc
popf
lcall
in
and
lret
push
loope
pushl
xor
pop
adc
pushl
or
popf
push
mov
ljmp
inc
sbb
call
out
out
call
push
adc
call
inc
sbb
scas
outsb
xor
loope
decl
push
or
jmp
test
inc
xor
loop
lcall
cmp
jmp
jbe
out
jge
push
cmp
push
movsb
sbb
jmp
jmp
leave
xchg
inc
pushf
shr
loop
out
loop
push
jmp
ss
dec
and
jmp
out
out
loop
out
loop
pop
dec
pop
loop
test
jmp
call
loop
push
ret
out
mov
mov
jmp
out
out
adc
incl
loop
in
and
lds
loop
jl
loop
jmp
fsubr
loop
decl
enter
add
push
push
add
add
add
cmp
jbe
jne
insl
push
add
add
add
push
jns
add
add
add
jb
add
gs
xor
dec
xor
je
jb
add
add
add
add
dec
insb
add
push
push
jns
add
add
add
add
popa
add
add
add
bound
add
add
insb
add
add
add
inc
data16
jne
add
add
inc
add
inc
cmp
add
jae
push
push
add
push
dec
add
xor
aaa
add
add
add
dec
js
dec
imul
je
add
pop
jb
add
push
pop
add
xor
add
add
push
add
bound
push
add
insl
jae
add
popa
add
dec
outsb
imul
add
dec
add
jbe
aaa
push
add
inc
add
data16
inc
inc
add
add
add
add
add
popaw
add
dec
add
inc
add
inc
inc
add
jne
add
add
add
add
add
add
js
add
add
add
add
push
add
add
add
imul
add
push
add
push
cmp
push
push
aaa
add
add
jb
popa
add
add
push
add
add
arpl
dec
add
add
add
add
add
imul
add
imul
push
fs
add
add
add
js
pop
dec
add
dec
jo
inc
xor
inc
add
cmp
push
add
add
dec
jbe
add
add
add
add
dec
push
add
dec
jp
push
inc
outsb
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
inc
dec
jne
add
dec
add
inc
xor
jne
arpl
add
add
add
add
inc
cmp
add
add
push
xor
xor
xor
add
add
outsl
jp
insb
outsl
add
jp
add
add
imul
add
add
add
push
dec
js
add
pop
inc
add
add
add
push
push
pop
inc
jno
push
add
jp
dec
inc
add
add
add
dec
add
xor
dec
add
dec
imul
jae
inc
add
push
add
add
add
add
dec
insb
add
add
inc
add
dec
add
push
add
add
inc
je
add
add
add
cmp
add
push
add
add
add
inc
insl
imul
add
add
xor
inc
add
dec
add
insb
jne
dec
fs
add
add
ja
fs
add
data16
push
inc
add
dec
dec
insb
jae
push
mov
sub
mov
mov
sub
dec
cmp
ja
xor
mov
decl
sub
inc
cmp
jae
xor
sub
sub
or
xor
xor
and
sub
inc
inc
xor
adc
inc
cmp
jae
mov
adc
sub
sub
cmp
jbe
sub
mov
incl
xor
add
cmp
jb
mov
and
decl
or
add
add
cmp
jne
mov
sbb
sub
sub
sub
inc
cmp
jae
mov
mov
add
or
sub
incl
sub
xor
mov
dec
add
xor
or
or
xor
xor
sbb
leave
ret
nop
nop
nop
nop
nop
push
mov
sub
sub
xor
or
adc
incl
or
cmp
jbe
mov
or
add
cmp
jbe
decl
sub
and
mov
push
call
call
call
mov
xor
add
dec
sub
add
leave
ret
nop
nop
nop
nop
nop
push
mov
sub
mov
sub
mov
sub
xor
mov
cmp
jae
sbb
xor
mov
add
and
dec
mov
or
or
xor
add
cmp
jb
inc
mov
mov
adc
decl
sub
add
xor
xor
leave
ret
push
mov
sub
mov
sub
sub
add
sub
mov
mov
and
and
mov
inc
or
mov
and
sub
mov
decl
decl
mov
dec
sbb
sub
mov
incl
and
and
xor
sub
sub
or
and
mov
xor
sub
dec
or
sub
xor
add
dec
or
sub
cmp
jne
mov
incl
or
inc
sbb
sbb
leave
ret
nop
nop
nop
nop
nop
push
mov
sub
mov
sub
and
or
cmp
ja
and
mov
decl
incl
sub
dec
or
sub
decl
or
or
or
incl
incl
incl
xor
mov
incl
mov
sbb
decl
mov
sub
or
add
adc
xor
mov
xor
sub
dec
sub
mov
and
or
incl
decl
cmp
jne
xor
add
cmp
jne
sub
inc
add
add
xor
inc
sub
add
sbb
mov
add
sub
cmp
je
mov
inc
and
cmp
ja
sub
incl
xor
sub
add
xor
adc
add
and
add
cmp
jae
sub
xor
sub
inc
cmp
je
sub
adc
leave
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
or
incl
decl
and
test
ja
mov
sub
sbb
adc
mov
add
cmp
jb
mov
add
xor
or
and
xor
incl
sub
adc
mov
add
inc
or
xor
sub
sub
dec
sub
sbb
xor
sbb
sub
xor
sub
cmp
ja
mov
sbb
add
dec
cmp
jne
sub
mov
add
xor
sub
add
or
or
mov
adc
sbb
sbb
xor
and
or
adc
xor
xor
decl
mov
add
or
inc
sub
and
cmp
jae
dec
mov
and
xor
dec
and
sub
mov
sbb
sub
sub
and
mov
leave
ret
nop
push
mov
sub
mov
sub
or
incl
and
cmp
jae
inc
mov
xor
or
and
inc
sub
add
or
and
add
mov
incl
adc
xor
add
sub
sub
and
mov
or
and
leave
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
sub
and
incl
or
sub
sub
test
ja
sub
or
or
incl
xor
add
add
add
xor
or
or
incl
and
xor
or
and
and
sbb
incl
or
add
dec
dec
mov
decl
sub
add
inc
sub
add
and
cmp
jbe
mov
adc
inc
add
decl
xor
sub
add
xor
add
xor
xor
or
xor
and
add
sub
add
adc
sbb
cmp
ja
xor
sub
add
and
inc
add
sub
mov
mov
and
sub
or
and
and
inc
xor
decl
add
leave
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
and
mov
sbb
sbb
or
adc
xor
call
mov
xor
and
xor
dec
dec
xor
add
sub
cmp
jne
and
xor
sbb
mov
xor
adc
and
sub
xor
sub
mov
add
add
add
leave
ret
push
mov
sub
xor
dec
xor
cmp
jae
mov
mov
adc
add
cmp
jne
call
mov
or
cmp
jbe
xor
and
sub
and
cmp
jb
sbb
adc
mov
push
call
mov
mov
add
sub
or
xor
inc
xor
decl
incl
adc
dec
call
xor
or
or
add
mov
sbb
incl
push
push
call
xor
sbb
mov
adc
adc
and
add
incl
call
sub
add
add
adc
adc
sub
dec
add
cmp
je
add
xor
xor
add
xor
sub
or
sub
incl
add
push
push
push
call
mov
mov
dec
or
add
cmp
jbe
mov
xor
inc
mov
xor
xor
xor
xor
dec
and
mov
xor
sub
mov
mov
add
adc
mov
or
mov
mov
cmp
jne
dec
mov
mov
push
push
push
push
call
mov
mov
mov
sub
add
or
dec
xor
incl
xor
incl
incl
add
mov
mov
adc
sub
mov
push
call
call
mov
or
add
and
inc
cmp
jae
mov
decl
xor
inc
cmp
je
add
xor
adc
push
push
call
sub
dec
xor
test
ja
mov
sub
and
xor
xor
xor
and
adc
sbb
sub
mov
or
call
mov
call
sub
dec
xor
mov
decl
xor
cmp
je
adc
mov
sbb
add
inc
add
and
xor
sub
incl
add
adc
xor
add
sub
incl
mov
push
call
sub
sub
inc
sub
xor
sub
add
cmp
jbe
xor
xor
sub
sub
add
inc
xor
add
add
mov
lea
push
call
mov
add
or
inc
add
and
cmp
jae
mov
xor
xor
and
cmp
jbe
xor
sbb
lea
push
call
mov
add
add
inc
dec
mov
incl
sub
or
add
adc
push
xor
sbb
sub
sbb
sbb
add
adc
add
sub
decl
mov
sub
mov
inc
inc
or
mov
add
xor
dec
mov
and
add
cmp
jbe
mov
or
xor
sub
add
incl
adc
decl
or
incl
push
mov
push
call
lea
push
call
call
mov
push
call
mov
xor
inc
sub
inc
incl
sub
inc
and
or
test
jbe
inc
inc
xor
incl
xor
xor
add
incl
decl
call
push
push
call
mov
decl
cmp
ja
mov
mov
add
sbb
sub
adc
sbb
incl
sbb
sbb
mov
or
mov
push
call
mov
or
add
mov
sub
or
test
jne
and
decl
and
adc
sub
adc
decl
xor
sub
mov
adc
inc
add
decl
mov
push
call
mov
dec
sbb
and
cmp
jne
mov
and
sbb
and
inc
and
inc
add
test
jae
mov
sbb
add
and
call
mov
sub
dec
and
decl
or
xor
cmp
jne
mov
or
or
sub
mov
or
sub
incl
and
dec
inc
sub
dec
mov
mov
mov
mov
add
sub
sub
sub
and
cmp
jae
xor
adc
adc
cmp
je
incl
adc
mov
xor
add
xor
add
xor
add
mov
add
dec
cmp
jne
mov
push
call
mov
xor
adc
test
jb
mov
sub
cmp
je
inc
sub
push
push
call
sub
adc
and
or
sub
dec
cmp
jae
and
mov
adc
decl
add
sub
sbb
incl
sbb
mov
push
call
mov
dec
or
xor
add
sbb
or
and
sub
cmp
je
mov
mov
xor
sub
or
sub
sub
cmp
je
sbb
and
mov
decl
decl
mov
push
call
mov
xor
xor
cmp
jne
mov
incl
add
test
jne
sub
mov
incl
sub
add
test
ja
xor
xor
push
push
call
mov
push
call
jmp
dec
add
add
push
add
jb
xor
jp
popa
dec
add
add
xor
add
dec
dec
add
add
add
push
xor
inc
dec
data16
outsb
add
pop
add
add
push
add
add
add
push
pop
add
add
jns
bound
add
dec
add
add
push
push
add
dec
aaa
jno
add
add
cmp
push
add
add
dec
add
add
add
outsb
push
jbe
add
add
add
add
inc
add
push
add
add
add
add
jbe
dec
add
add
fs
js
push
outsl
add
cmp
add
add
push
add
gs
add
imul
add
xor
jns
dec
add
bound
push
add
jb
add
add
add
insb
add
add
add
push
pop
dec
add
data16
pop
add
xor
push
add
add
dec
add
add
insb
pop
jae
popa
add
inc
jno
add
inc
xor
add
inc
add
add
inc
add
add
add
xor
add
dec
dec
add
add
push
imul
je
add
imul
push
dec
inc
add
inc
add
popa
gs
ja
push
add
push
push
add
jns
inc
dec
add
inc
add
push
add
jno
insl
imul
add
add
add
add
inc
add
add
add
bound
add
cmp
add
add
add
add
dec
add
jae
add
add
js
add
xor
inc
add
add
dec
imul
add
push
add
add
inc
add
add
add
add
dec
jno
gs
add
add
add
add
inc
add
add
push
cmp
inc
add
add
add
add
add
dec
cmp
add
add
add
push
add
jp
add
inc
add
gs
add
add
add
add
pop
add
add
add
add
push
add
add
push
add
arpl
dec
add
push
add
add
dec
xor
add
add
add
dec
add
add
add
add
add
add
add
add
add
je
add
add
inc
add
outsb
inc
add
pop
jns
add
add
push
inc
ja
add
bound
add
jae
add
dec
jne
add
add
add
dec
inc
add
add
push
add
add
add
add
add
xor
add
add
inc
push
add
add
bound
add
jne
add
push
push
outsl
add
add
add
push
add
xor
add
insl
outsl
add
add
push
dec
add
add
xor
add
add
inc
add
add
inc
add
dec
add
je
push
add
add
add
add
arpl
add
add
inc
jne
add
add
add
add
aaa
push
jno
cmp
outsb
add
je
jno
add
dec
js
js
add
xor
push
add
xor
inc
add
add
add
cmp
add
xor
add
ss
push
add
add
add
add
insb
pop
add
add
add
inc
add
add
add
add
add
pop
add
xor
inc
dec
add
add
add
js
add
ss
add
push
cmp
push
add
xor
add
add
add
add
add
push
dec
push
add
push
dec
push
add
add
add
add
add
add
data16
add
dec
ss
jo
xor
jno
add
pop
add
inc
add
add
push
add
add
push
imul
ja
aaa
add
cmp
add
add
add
add
push
add
ja
add
jae
add
inc
inc
add
add
add
add
add
bound
inc
jns
add
add
add
add
add
push
push
push
add
dec
add
add
add
add
xor
add
jns
jbe
add
push
add
add
push
inc
add
add
add
add
push
add
xor
rorb
lret
xchg
dec
pushl
xchg
dec
decl
or
cmp
ja
incl
add
xor
adc
add
inc
and
and
incl
sbb
decl
mov
sbb
add
call
lea
push
call
sub
sub
dec
xor
inc
cmp
jbe
xor
add
sub
sbb
or
sub
cmp
jbe
sub
xor
mov
or
or
sub
dec
inc
cmp
jb
mov
inc
xor
sub
and
cmp
jae
sub
inc
and
mov
decl
mov
push
call
push
call
mov
push
call
call
mov
mov
push
call
mov
and
or
sub
dec
decl
and
xor
add
sub
xor
decl
or
and
test
jb
mov
xor
and
add
and
sbb
adc
decl
or
decl
xor
mov
push
call
lea
push
call
sub
add
or
and
cmp
je
mov
mov
add
cmp
jb
xor
incl
or
or
and
sub
mov
push
call
mov
sub
or
or
add
add
cmp
jne
or
sub
add
mov
mov
incl
mov
and
and
sub
sub
add
add
xor
push
call
mov
mov
or
adc
adc
adc
and
xor
and
add
or
incl
xor
add
sbb
add
mov
sbb
adc
decl
xor
add
mov
mov
inc
sub
add
cmp
je
sub
xor
cmp
jbe
push
sub
inc
dec
xor
sbb
test
je
xor
mov
sbb
sub
adc
add
sub
inc
mov
mov
sub
decl
incl
and
and
ret
mov
or
add
xor
dec
cmp
jne
sub
or
sub
sub
cmp
jbe
incl
adc
sub
or
call
mov
mov
add
mov
mov
xor
inc
xor
xor
xor
inc
xor
decl
add
sub
and
decl
or
call
mov
inc
sub
add
cmp
jbe
mov
inc
test
jae
sub
sub
add
mov
decl
mov
and
and
adc
incl
mov
push
call
sub
xor
or
incl
sub
add
test
jb
xor
cmp
jne
or
leave
ret
push
mov
sub
mov
and
adc
inc
add
test
jae
xor
mov
mov
sbb
adc
add
sub
inc
xor
mov
incl
add
mov
add
add
xor
add
adc
and
add
and
mov
and
or
add
and
xor
add
and
add
or
or
xor
incl
xor
sub
mov
and
mov
adc
decl
decl
or
sub
mov
incl
dec
sub
sub
test
je
sub
dec
add
or
sub
adc
xor
add
or
decl
sub
and
xor
sbb
add
decl
or
sub
or
dec
add
sub
add
add
adc
add
add
leave
ret
nop
nop
nop
push
mov
sub
mov
sub
sbb
or
and
cmp
je
xor
adc
incl
xor
test
jb
incl
xor
add
add
incl
mov
inc
inc
or
xor
xor
and
incl
decl
sbb
and
or
xor
xor
and
and
or
decl
sub
incl
sbb
inc
mov
and
adc
and
cmp
jne
mov
adc
sub
sub
add
cmp
ja
sub
sub
mov
cmp
jae
mov
adc
and
and
cmp
jb
or
sub
sbb
add
decl
incl
incl
leave
ret
nop
nop
nop
nop
push
mov
sub
xor
and
sub
decl
or
and
test
jbe
sub
incl
add
add
add
call
call
mov
xor
and
dec
xor
adc
adc
add
add
mov
and
dec
leave
ret
nop
push
mov
sub
call
mov
xor
sub
adc
xor
sub
or
inc
adc
sub
lea
push
call
call
mov
call
xor
add
add
inc
mov
sub
mov
xor
or
decl
call
mov
inc
sub
sub
dec
add
dec
xor
inc
xor
add
add
inc
dec
leave
ret
nop
nop
push
mov
sub
mov
sub
add
cmp
je
xor
sub
mov
inc
sub
and
add
cmp
jae
sub
sub
mov
decl
sbb
xor
and
sbb
mov
mov
sub
mov
incl
inc
xor
mov
or
add
test
jne
mov
dec
add
xor
add
and
mov
sub
add
mov
incl
add
adc
sub
sub
xor
mov
add
dec
sub
add
add
and
decl
adc
sbb
mov
sub
and
sub
cmp
jae
sub
decl
adc
and
cmp
ja
incl
leave
ret
nop
nop
nop
nop
push
mov
sub
mov
inc
inc
add
dec
sub
add
or
mov
incl
sub
add
dec
sub
xor
or
push
call
mov
dec
decl
adc
inc
test
ja
mov
dec
or
or
cmp
jne
adc
adc
and
sub
mov
inc
add
sub
dec
sub
or
and
push
push
push
call
test
jne
mov
and
adc
mov
cmp
ja
sub
mov
and
and
inc
incl
sub
adc
push
call
mov
mov
inc
add
xor
dec
adc
and
inc
and
cmp
ja
xor
sbb
add
xor
add
incl
add
and
dec
or
push
mov
push
lea
push
call
mov
mov
adc
and
cmp
jne
xor
mov
adc
add
inc
xor
or
test
je
dec
sub
add
and
decl
incl
mov
sub
or
dec
add
inc
dec
sub
cmp
jae
mov
add
or
cmp
jne
and
decl
and
sub
and
xor
jne
mov
dec
add
add
cmp
jb
xor
or
adc
sub
or
sub
sbb
test
jne
incl
sbb
xor
inc
sub
or
sbb
xor
mov
sub
add
add
or
and
call
xor
xor
sub
and
xor
cmp
je
mov
sub
mov
sub
add
sub
or
sbb
or
call
mov
inc
add
sub
xor
dec
sub
cmp
jne
mov
incl
and
dec
cmp
jb
xor
pushl
push
pushl
call
mov
and
sbb
mov
sub
add
or
and
cmp
je
or
sub
incl
mov
mov
sub
inc
sub
decl
mov
and
add
or
xor
incl
call
xor
xor
sub
sub
and
add
sub
add
sbb
sbb
cmp
jne
mov
sbb
sub
sbb
decl
inc
dec
or
add
sub
or
xor
sub
add
push
call
sub
sub
adc
inc
and
add
incl
mov
xor
sub
add
adc
call
xor
add
inc
adc
decl
dec
cmp
je
mov
incl
inc
cmp
jne
add
add
pushl
call
mov
and
add
xor
inc
xor
cmp
jae
mov
and
inc
cmp
jb
decl
mov
push
call
sub
xor
add
sbb
add
decl
sbb
mov
incl
incl
sub
push
pushl
call
mov
mov
or
sbb
and
mov
sub
add
add
inc
and
add
add
xor
mov
push
call
sub
inc
and
sub
sub
cmp
jbe
mov
dec
or
and
cmp
je
and
call
xor
xor
and
sub
sub
inc
lea
push
call
mov
and
incl
add
cmp
ja
mov
sub
add
sub
cmp
jb
add
and
add
sub
decl
xor
cmp
jae
mov
or
add
dec
dec
dec
cmp
ja
or
mov
sbb
sbb
sub
sub
decl
call
mov
or
and
mov
cmp
jb
mov
sbb
adc
dec
sub
add
sub
incl
sub
push
push
call
sub
xor
sub
decl
add
cmp
je
mov
decl
add
sub
cmp
ja
sub
inc
decl
mov
sbb
sbb
add
sbb
mov
mov
sub
inc
sub
sub
inc
push
call
call
mov
inc
add
mov
or
incl
or
cmp
jne
mov
sbb
dec
and
cmp
jae
sbb
xor
decl
call
mov
sub
add
sub
mov
sub
dec
or
cmp
jb
mov
sub
or
adc
and
incl
incl
inc
or
push
call
call
xor
add
adc
sub
adc
sbb
xor
test
jb
mov
adc
xor
or
sub
xor
and
cmp
je
call
mov
mov
and
xor
incl
adc
adc
add
and
sub
cmp
jne
mov
sub
inc
cmp
jb
and
add
or
or
xor
lea
push
call
mov
and
cmp
jb
xor
sbb
and
add
cmp
ja
dec
sub
dec
sub
xor
push
pushl
call
sub
or
sub
and
mov
add
sub
cmp
jne
mov
sub
cmp
jbe
add
xor
inc
and
mov
push
call
xor
sub
and
xor
xor
and
and
mov
decl
sub
sub
and
sub
incl
incl
sub
sub
or
dec
xor
inc
sub
xor
inc
decl
add
add
or
cmp
je
mov
sub
dec
cmp
jb
or
add
push
call
mov
adc
incl
sub
mov
sub
or
xor
adc
xor
mov
sbb
inc
add
xor
sbb
xor
mov
xor
or
mov
push
call
mov
mov
sub
xor
decl
call
mov
dec
or
add
or
decl
add
sbb
decl
cmp
ja
and
sub
incl
sub
add
or
sub
inc
mov
push
call
mov
or
dec
sub
xor
sub
cmp
ja
mov
and
xor
sub
add
sub
and
cmp
jb
add
mov
mov
push
call
sub
sub
and
add
sub
dec
cmp
jne
sub
mov
add
sub
sub
add
cmp
jae
push
push
call
mov
mov
dec
adc
adc
or
or
sub
sub
add
sbb
decl
adc
and
and
add
sub
add
push
push
call
push
call
mov
add
and
decl
add
dec
cmp
jb
xor
and
or
incl
cmp
jbe
sbb
decl
and
decl
and
push
call
leave
ret
nop
push
mov
sub
mov
dec
sub
inc
sub
inc
sub
mov
adc
and
add
mov
mov
dec
add
sub
mov
and
add
sbb
xor
sub
xor
add
add
sbb
sub
cmp
jae
sub
xor
cmp
jae
xor
sub
or
sub
mov
dec
sub
xor
or
or
add
adc
add
cmp
ja
xor
add
incl
sub
or
or
add
or
mov
sub
sub
and
sbb
or
and
add
xor
cmp
je
xor
sub
adc
inc
inc
incl
mov
mov
adc
and
and
xor
or
cmp
jae
incl
sub
add
mov
sbb
and
xor
and
xor
mov
or
mov
adc
incl
incl
sbb
leave
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
add
adc
decl
add
cmp
jae
mov
add
sub
sub
cmp
jb
decl
adc
sub
xor
sbb
sub
or
sbb
and
inc
xor
or
dec
add
mov
decl
and
and
or
or
add
inc
inc
xor
sub
sub
sub
mov
xor
sub
cmp
jae
mov
mov
sub
adc
cmp
jae
decl
mov
sub
decl
sub
sub
sub
xor
incl
inc
add
add
add
add
or
cmp
jne
xor
sbb
xor
and
dec
mov
sub
xor
mov
adc
add
adc
and
sub
sub
adc
xor
xor
leave
ret
nop
nop
nop
nop
nop
push
mov
sub
mov
add
decl
cmp
jne
xor
sub
decl
or
mov
add
sub
or
adc
dec
sub
sub
sub
and
add
mov
sub
or
sbb
add
mov
add
and
and
sub
cmp
jb
mov
sub
xor
add
cmp
jne
and
mov
sub
sub
sub
mov
inc
sub
inc
xor
add
xor
and
test
jae
dec
or
inc
sub
adc
xor
dec
sub
and
and
leave
ret
nop
push
mov
sub
sub
mov
adc
add
sub
mov
or
incl
decl
xor
sub
decl
sbb
xor
mov
adc
add
cmp
je
mov
xor
add
sub
cmp
jae
add
inc
sbb
add
incl
inc
incl
mov
sub
sub
sub
xor
add
cmp
jb
mov
sbb
mov
cmp
jb
or
xor
adc
xor
mov
add
decl
sub
sub
and
sub
sub
sub
or
incl
mov
dec
xor
leave
ret
nop
nop
push
mov
sub
sub
xor
and
or
xor
cmp
jae
sub
add
cmp
jbe
dec
or
sbb
inc
sub
push
call
xor
and
add
mov
add
decl
decl
decl
leave
ret
nop
jmp
add
lret
add
add
mov
add
add
add
add
add
add
add
pusha
add
add
add
sub
js
add
fiaddl
add
cmp
into
add
add
add
add
lods
add
add
adc
add
add
fwait
and
add
add
add
pop
add
add
add
stos
mov
add
add
add
add
add
lea
add
add
add
add
out
sldt
sub
movl
dec
add
add
add
movl
add
add
add
rolb
fcoms
add
add
add
add
mov
add
add
jl
int3
jne
add
add
add
sbb
add
add
add
add
in
add
add
add
add
jp
add
add
sub
add
add
add
push
add
add
xor
mov
add
mov
add
add
add
add
add
push
add
add
add
add
add
add
push
xchg
add
add
movsl
add
and
add
mov
add
add
add
add
xlat
add
add
add
push
add
add
ret
add
add
add
gs
or
xlat
add
stos
add
add
add
add
add
add
add
add
add
push
mov
add
add
mov
add
add
add
add
add
add
push
add
add
int
add
dec
add
cmp
add
add
fisubs
add
add
add
scas
add
add
add
cmp
add
add
add
sbb
into
imul
scas
add
mov
lds
add
add
add
pop
ds
xor
test
add
add
add
mov
add
fldl
add
mov
add
add
add
add
add
and
add
pop
and
add
add
add
xchg
add
add
add
aad
add
add
add
add
add
add
add
jnp
add
add
add
mov
add
add
pop
add
add
jecxz
xor
push
mov
sub
call
add
add
add
add
add
cwtl
aaa
push
add
pop
add
add
test
add
add
add
xchg
add
add
add
cltd
add
add
add
add
sbb
in
add
xor
add
add
add
roll
add
outsb
add
in
add
mov
add
imul
add
adc
add
add
add
flds
add
add
add
mov
add
add
add
testl
add
add
add
add
add
add
fldl
add
add
mov
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
fwait
add
jns
add
add
add
add
add
add
outsb
add
dec
add
add
add
loopne
add
add
add
pop
add
add
nop
add
add
add
add
add
add
add
add
jl
movb
je
add
push
add
add
add
add
add
ret
add
add
sar
test
jp
add
push
add
add
add
add
add
add
test
add
add
sbb
add
rolb
add
add
add
add
adc
fwait
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
in
add
rolb
add
cmp
add
push
add
add
add
dec
add
add
add
add
xchg
add
add
add
add
adc
add
add
mov
xor
or
add
add
add
add
add
add
add
add
add
add
add
in
pop
sub
icebp
add
les
add
stos
add
add
add
mov
add
rolb
out
add
aad
mov
add
xchg
add
add
add
rolb
add
add
add
add
add
add
add
add
push
stc
add
add
add
add
jecxz
add
add
add
add
sub
add
add
xchg
add
add
add
add
add
jae
add
add
ja
add
test
add
add
dec
add
and
add
add
add
add
stc
add
add
addb
add
add
and
adc
add
add
or
add
add
jp
lds
cmpsb
add
add
add
add
add
add
add
test
add
add
add
add
data16
dec
outsl
clc
add
add
add
add
add
add
add
add
add
add
add
add
je
pop
add
mov
add
add
add
into
out
add
add
add
add
add
add
add
add
add
out
add
add
mov
add
add
mov
jg
add
add
icebp
add
add
ret
add
add
add
data16
jno
add
adc
add
add
add
pop
add
leave
add
add
xchg
add
add
add
or
add
mov
add
add
mov
add
enter
add
add
add
add
add
test
add
add
add
ret
add
add
xor
cmpsb
mov
add
add
add
add
add
lods
add
add
add
add
cmp
add
add
add
in
add
xor
add
add
add
add
jmp
add
add
add
add
add
add
sub
add
add
add
add
test
add
add
add
add
add
push
sbb
add
add
testb
add
add
add
inc
scas
add
add
add
add
data16
add
add
add
int3
add
add
cli
add
sub
push
add
add
add
add
jl
add
add
add
add
add
add
xchg
stos
add
dec
add
add
add
add
add
cmpsb
add
add
add
repz
in
add
push
jns
rolb
add
sarl
add
testb
add
xchg
add
add
add
add
add
add
add
add
add
add
sti
add
add
sbb
add
pop
add
add
lods
add
add
add
add
daa
dec
add
add
add
add
add
add
add
add
add
add
sub
add
outsb
add
loopne
add
add
add
add
add
add
inc
add
add
add
add
xor
add
add
add
add
imul
add
inc
mov
add
add
add
add
lods
add
add
add
add
add
add
add
add
add
add
addl
add
jmp
add
add
jecxz
add
add
add
cmp
add
mov
add
or
add
sub
inc
add
and
add
sbb
inc
sub
add
add
add
add
add
add
add
add
add
xchg
add
add
add
movsl
add
add
cmp
or
add
add
add
add
add
ja
add
add
add
les
add
add
jne
add
add
inc
add
add
ret
add
mov
add
add
mov
add
add
add
add
add
or
add
add
add
fistl
test
jecxz
add
add
or
add
add
add
add
add
add
add
add
add
add
add
popl
add
add
add
rolb
add
xchg
add
and
add
add
lods
push
add
add
sbb
add
add
add
add
add
add
add
xor
add
std
add
add
adc
bound
sbb
add
add
add
add
or
add
add
xchg
add
push
add
add
push
add
leave
add
xchg
add
add
inc
add
aaa
add
add
mov
add
add
add
add
add
add
add
nop
push
add
cli
add
add
imul
add
add
add
add
and
add
add
add
mov
add
add
add
jns
add
and
add
add
add
add
add
add
add
add
punpckhbw
add
add
add
addl
add
add
adc
loopne
faddl
mov
add
add
add
add
inc
add
add
jmp
add
add
and
add
jge
add
add
add
sti
add
add
add
add
les
add
add
add
add
add
add
mov
add
add
add
or
push
xor
add
add
add
add
add
sahf
add
mov
add
add
add
nop
add
add
add
add
add
add
jl
add
add
inc
push
add
xor
add
outsl
jno
jg
add
inc
add
xchg
add
addl
xor
add
add
adc
add
add
add
add
add
add
daa
add
add
add
add
add
add
pop
add
aas
add
add
iret
add
shrb
add
or
add
rolb
add
mov
add
sbb
jg
add
add
add
fiadds
add
jl
add
add
repz
add
add
add
out
add
rolb
add
add
out
mov
add
add
add
movsl
add
add
add
and
add
add
inc
add
add
add
add
stos
add
add
dec
xor
add
xor
jmp
add
add
pop
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ja
add
add
xor
add
xchg
sldt
add
rolb
add
add
add
add
addl
add
add
add
add
bound
pop
add
add
add
add
outsl
add
icebp
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
xor
add
add
aaa
add
add
and
add
mov
add
add
dec
add
add
add
jnp
iret
add
add
add
pop
add
add
add
add
add
add
into
add
add
add
cmp
add
add
add
sbb
add
add
add
add
mov
add
push
jecxz
add
add
roll
add
fcmovbe
add
and
add
add
les
inc
add
cmc
add
add
add
insl
add
and
add
add
add
add
cs
add
add
pop
add
add
add
add
sbb
add
add
add
add
add
add
add
xchg
add
jns
add
add
add
imul
add
add
add
popa
add
add
mov
add
add
add
fiadds
add
add
add
add
mov
add
add
imul
rolb
mov
add
add
add
fadds
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
dec
add
add
add
add
add
add
fadds
add
test
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
hlt
and
add
add
add
add
dec
add
inc
add
add
add
dec
add
add
add
add
adc
add
add
or
mov
add
add
add
add
insl
add
add
add
add
add
or
add
insb
rolb
add
add
imul
add
add
add
add
add
xchg
add
add
add
inc
add
add
add
xor
add
rorb
add
add
add
add
add
movsl
add
and
scas
sub
repz
add
add
pop
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
pushf
add
add
add
add
add
add
push
add
add
add
cmp
mov
add
add
cli
add
sub
add
call
add
jle
add
pushf
add
mov
add
fldl
add
add
add
add
add
enter
add
and
add
mov
add
add
test
add
add
add
add
add
addb
add
add
fwait
add
add
add
add
aam
add
xchg
aam
lea
add
add
add
and
add
and
add
add
out
add
add
or
data16
add
mov
add
add
add
lea
add
add
add
testb
out
add
add
add
jnp
add
flds
add
add
jmp
add
add
add
add
int
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
jg
insb
add
rcl
add
add
add
add
movsl
add
pop
add
add
add
pushf
add
add
lods
add
sbb
add
add
add
add
add
add
add
cmpsb
add
add
add
sub
ret
add
add
add
add
add
add
add
add
add
add
flds
add
lret
add
add
add
add
enter
add
add
add
add
das
add
add
add
add
add
in
jl
add
add
xchg
add
add
mov
add
testl
incb
jle
add
mov
add
lret
add
add
movsb
add
jge
add
add
or
add
add
add
jno
add
push
add
cmpsl
add
add
mov
cmp
add
add
add
add
out
add
std
test
add
add
xor
add
add
shlb
add
add
add
add
cmp
inc
mov
add
add
add
add
add
add
add
add
add
mov
add
xlat
add
add
mov
add
add
add
roll
add
mov
sbb
jmp
add
add
add
add
add
add
fadds
add
xor
cltd
add
add
push
int
add
add
data16
roll
add
mov
add
add
add
add
inc
rcrb
sub
add
add
add
add
loopne
add
rolb
add
add
xchg
add
lret
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
add
xchg
add
xchg
scas
mov
add
add
add
add
add
add
mov
faddl
add
xchg
add
add
add
add
mov
add
add
push
add
add
add
add
add
add
pop
ja
add
add
add
add
add
cmp
add
add
movb
rolb
add
jo
mov
add
add
push
add
add
fildl
add
add
add
out
add
add
add
xor
add
add
add
mov
add
add
add
out
add
aad
add
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
movsl
aam
add
fwait
add
add
add
add
add
add
add
in
test
add
push
add
add
dec
add
add
add
add
add
add
mov
dec
add
add
add
lcall
add
mov
dec
dec
add
push
xchg
xor
add
add
add
xchg
add
add
add
add
inc
add
push
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
fadds
add
add
add
addl
add
add
jb
add
add
add
add
in
cmpsb
add
add
add
add
add
add
add
add
add
add
add
pop
add
pop
add
test
or
add
add
add
add
add
add
add
icebp
add
pop
add
mov
sub
add
add
add
js
add
pop
cmp
add
add
add
add
les
rolb
add
pop
xchg
add
test
add
add
add
mov
add
lret
xchg
add
inc
add
add
xchg
add
adc
cmpsb
add
add
dec
add
daa
add
push
add
add
xchg
add
add
add
add
add
add
add
add
fildl
add
test
add
add
lcall
ret
add
and
add
add
add
mov
test
add
add
add
add
add
incb
add
lea
add
add
cmp
sbb
add
add
add
in
add
add
add
add
add
add
add
insb
add
add
add
add
add
in
add
add
add
sub
add
add
add
add
add
pop
in
add
push
add
add
add
add
mov
add
add
add
cli
push
add
add
add
add
add
add
flds
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
inc
cmc
add
cmc
popa
add
add
add
add
add
add
add
iret
add
add
add
push
add
add
sahf
or
add
add
popa
add
add
add
fiadds
add
add
add
add
addb
cmpsb
mov
add
roll
add
add
add
adc
add
add
cwtl
add
dec
add
add
add
add
add
add
add
add
aaa
add
lret
add
push
test
add
add
or
add
add
into
add
mov
add
add
add
push
add
add
add
add
jmp
add
add
add
add
popf
add
das
add
add
add
add
add
add
push
add
rolb
add
xchg
add
movsb
add
add
add
add
add
sbb
add
add
add
add
add
add
add
stos
add
dec
add
add
add
aaa
add
add
add
stc
add
add
add
stos
add
add
add
add
add
add
cwtl
int
rolb
add
js
add
add
add
add
add
add
add
add
add
into
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
or
dec
enter
add
add
add
inc
add
cwtl
add
add
lret
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
adc
add
add
add
add
add
add
add
add
add
movl
mov
cmp
add
add
add
xor
add
popl
add
add
sbb
mov
das
add
add
add
add
rolb
add
add
mov
add
add
cld
add
add
add
add
insb
add
add
add
add
xchg
add
add
add
add
daa
add
add
add
add
add
add
add
add
lea
add
add
add
gs
and
add
mov
add
verw
add
add
add
add
add
add
fildl
fildl
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
testb
testb
add
add
add
add
xor
add
add
clc
push
add
add
roll
add
out
popf
add
xchg
add
add
push
add
add
add
aas
add
add
add
add
add
add
and
add
add
inc
add
add
add
add
add
add
add
add
add
push
add
mov
add
add
or
add
add
xchg
add
add
add
xchg
add
add
add
add
adc
add
add
add
add
add
add
add
mov
add
add
push
add
mov
cwtl
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
mov
add
sbb
add
add
leave
add
add
add
add
sldt
add
add
pop
sub
fldl
add
add
add
mov
add
adc
pusha
cld
add
add
push
add
add
add
add
adc
add
add
add
add
add
add
fildl
add
add
add
add
add
add
dec
add
lret
add
add
add
dec
add
add
add
add
add
add
add
add
and
add
mov
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
movb
into
add
add
ljmp
add
nop
add
push
add
add
je
cmpsb
add
add
add
push
add
add
add
add
add
outsb
fiadds
fldl
add
add
lret
add
add
add
xor
sbb
or
test
jne
mov
dec
dec
add
or
or
incl
adc
add
sub
mov
decl
inc
sub
cmp
ja
mov
sub
sbb
mov
sub
dec
add
cmp
je
dec
and
push
call
mov
add
and
incl
xor
test
jbe
or
dec
add
xor
dec
sub
adc
decl
and
add
add
and
add
xor
and
add
sub
inc
sub
test
jb
or
sub
sbb
decl
mov
add
and
add
sub
or
or
dec
xor
mov
sub
sub
inc
cmp
jbe
xor
or
cmp
jb
add
add
inc
add
adc
sbb
mov
and
add
and
sub
cmp
jne
add
mov
incl
add
inc
sub
sub
incl
adc
inc
sub
adc
or
inc
or
add
mov
or
add
sub
dec
sub
add
cmp
jb
mov
sbb
xor
sub
sbb
sub
inc
add
sub
decl
add
mov
cmp
ja
mov
incl
and
sub
add
add
add
xor
test
je
inc
and
incl
add
add
mov
add
and
adc
sub
inc
cmp
ja
mov
mov
sub
cmp
ja
sub
sbb
xor
sub
inc
mov
add
and
or
mov
add
sbb
sbb
add
incl
or
or
mov
or
incl
or
and
cmp
jb
mov
add
and
inc
sub
sub
xor
sub
add
add
mov
incl
xor
sbb
and
incl
add
incl
mov
incl
mov
sub
and
mov
adc
or
mov
xor
or
add
inc
sub
dec
sub
sub
mov
or
add
sub
or
adc
or
add
cmp
je
and
xor
sbb
sub
add
add
decl
decl
and
or
xor
add
and
sub
mov
xor
sub
inc
incl
adc
add
inc
sub
or
add
cmp
jbe
or
decl
mov
decl
xor
sub
dec
mov
or
add
or
or
incl
mov
add
cmp
jne
mov
add
inc
inc
inc
sub
or
adc
sub
mov
and
xor
or
decl
decl
cmp
ja
xor
or
or
sub
xor
decl
sub
cmp
jae
or
add
add
sub
add
mov
sub
adc
adc
sub
mov
adc
or
and
mov
add
decl
sbb
adc
push
call
mov
mov
mov
and
mov
sub
dec
and
mov
mov
xor
dec
xor
mov
adc
sbb
and
mov
and
sub
mov
mov
xor
or
sub
xor
push
push
call
mov
mov
mov
inc
add
add
dec
cmp
jbe
xor
test
jae
adc
mov
dec
and
or
or
xor
sbb
mov
incl
and
push
push
call
mov
call
mov
lea
push
call
mov
mov
or
sub
or
test
je
sub
xor
xor
and
cmp
ja
push
push
call
mov
and
or
or
dec
xor
mov
or
or
decl
xor
or
inc
adc
adc
and
sub
mov
sbb
cmp
jb
sub
incl
add
inc
mov
sub
add
and
or
decl
and
pushl
call
mov
xor
add
add
or
sub
cmp
je
dec
and
xor
and
xor
sbb
incl
xor
add
or
and
xor
mov
adc
xor
xor
add
sub
inc
cmp
je
push
push
lea
push
push
call
lea
push
push
call
lea
push
lea
push
push
push
call
leave
ret
nop
nop
nop
nop
nop
nop
pushl
call
add
add
add
dec
jo
add
xor
add
add
add
add
add
aaa
add
add
outsl
add
add
xor
aaa
add
add
add
jno
add
inc
inc
imul
inc
push
add
add
add
push
add
xor
jns
push
push
add
pop
add
add
add
add
add
xor
ss
add
dec
add
cmp
inc
add
inc
push
xor
add
add
dec
add
add
bound
add
arpl
jne
add
add
add
add
add
cmp
add
add
sub
dec
sbb
adc
cmp
jbe
mov
add
xor
inc
sub
or
decl
and
incl
and
sbb
or
adc
mov
or
and
xor
incl
adc
sub
cmp
jb
mov
sbb
dec
xor
mov
mov
or
test
je
sub
and
sub
sub
sub
test
jb
sbb
sub
sub
mov
sub
xor
or
mov
sub
or
add
sub
sub
or
dec
or
dec
mov
decl
sub
decl
add
dec
mov
decl
or
sub
sub
sub
or
cmp
je
xor
adc
sub
sub
sub
xor
sub
sub
mov
dec
add
xor
or
add
add
test
ja
mov
add
sub
add
add
test
jb
decl
sub
xor
decl
or
cmp
jbe
inc
xor
mov
adc
sub
inc
xor
and
or
mov
xor
mov
add
xor
xor
add
inc
test
ja
mov
xor
cmp
jne
inc
add
mov
or
xor
incl
xor
add
xor
cmp
jae
mov
mov
mov
sub
or
add
test
jb
mov
or
add
mov
and
mov
sub
cmp
ja
xor
or
incl
or
or
test
jne
sub
dec
and
and
cmp
ja
sub
sbb
adc
cmp
jb
incl
incl
mov
sbb
mov
sub
sub
and
cmp
jb
sub
cmp
jbe
adc
xor
incl
decl
mov
sub
dec
mov
or
sub
sub
mov
xor
decl
and
decl
sub
decl
sbb
add
xor
and
xor
or
mov
or
sub
inc
xor
inc
mov
and
decl
add
and
inc
cmp
jne
sub
add
or
xor
sub
dec
cmp
ja
inc
mov
mov
xor
sub
incl
mov
or
inc
sbb
adc
xor
add
sub
mov
and
decl
and
inc
decl
cmp
jae
sub
xor
sbb
add
dec
add
inc
mov
adc
sub
xor
or
sub
mov
add
or
and
or
add
add
sbb
add
mov
inc
inc
and
add
sub
inc
xor
add
and
test
je
add
dec
xor
sub
decl
sub
inc
xor
sub
sub
mov
sbb
incl
or
xor
and
cmp
ja
mov
and
add
sub
cmp
jb
or
mov
xor
dec
sub
add
or
or
mov
add
inc
and
xor
sub
and
mov
and
or
dec
test
jb
mov
sub
or
inc
and
mov
add
sbb
or
sub
sub
and
mov
or
add
dec
xor
add
xor
or
sbb
sub
sub
sub
or
dec
xor
sub
test
je
mov
inc
sub
and
sub
xor
sub
dec
dec
cmp
je
sub
adc
xor
inc
add
sub
dec
sub
and
decl
adc
mov
dec
sub
xor
sub
sbb
or
test
ja
mov
incl
add
mov
dec
add
sub
sbb
sbb
or
mov
add
or
adc
and
cmp
jb
mov
add
dec
incl
cmp
jne
and
or
sub
sub
sub
or
sub
add
test
jne
mov
decl
decl
cmp
ja
decl
add
add
sub
add
or
add
and
dec
add
test
jne
or
and
mov
decl
sub
xor
sub
xor
and
xor
mov
or
xor
xor
mov
incl
adc
and
mov
mov
sub
sub
incl
xor
incl
xor
sub
inc
add
mov
adc
add
sub
sbb
sub
mov
xor
incl
adc
sbb
mov
xor
sub
add
xor
add
add
sub
and
sub
xor
or
xor
sub
and
and
test
jne
xor
adc
and
add
inc
test
jne
incl
incl
xor
push
push
call
mov
add
incl
sbb
and
sub
sub
dec
incl
decl
push
call
leave
ret
nop
push
mov
sub
mov
add
adc
sbb
sub
add
add
and
cmp
jne
mov
decl
add
dec
inc
add
and
sbb
mov
incl
mov
add
mov
mov
adc
and
xor
add
incl
xor
add
sub
sbb
adc
inc
cmp
jne
add
sub
mov
and
adc
mov
add
add
and
xor
xor
mov
mov
add
mov
sub
sbb
and
inc
sub
decl
add
mov
xor
or
dec
decl
xor
mov
mov
add
mov
leave
ret
nop
nop
nop
nop
push
mov
sub
mov
add
mov
mov
cmp
ja
sub
adc
decl
sub
cmp
jne
or
xor
add
sub
dec
and
and
mov
and
sbb
adc
or
or
cmp
jb
xor
xor
sub
xor
inc
incl
and
add
dec
add
xor
and
xor
xor
sbb
mov
add
add
xor
sbb
mov
sbb
cmp
je
sub
incl
sub
inc
incl
adc
incl
sbb
dec
mov
adc
add
dec
xor
sub
cmp
ja
mov
incl
mov
mov
add
dec
xor
add
adc
sbb
incl
leave
ret
nop
nop
nop
nop
nop
nop
