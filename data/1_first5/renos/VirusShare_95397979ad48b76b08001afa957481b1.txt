jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
ss
popa
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
lea
push
call
mov
xchg
xchg
jmp
dec
dec
inc
xchg
mov
mov
dec
jne
lea
mov
mov
lea
mov
mov
lea
inc
dec
lea
push
lea
push
call
lea
push
call
lea
push
call
lea
push
lea
push
call
lea
push
call
mov
xchg
mov
mov
mov
mov
xchg
mov
lea
dec
inc
dec
jne
mov
mov
mov
xchg
mov
xchg
mov
dec
lea
push
call
mov
lea
xchg
dec
inc
dec
jne
xchg
mov
xchg
lea
mov
lea
mov
mov
xchg
xchg
xchg
mov
inc
dec
lea
push
call
lea
push
call
cmp
ja
mov
xchg
jmp
lea
mov
dec
mov
mov
lea
xchg
inc
lea
inc
dec
mov
lea
lea
xchg
mov
inc
lea
push
lea
push
call
lea
push
call
mov
pop
ret
nop
push
mov
add
lea
push
call
call
lea
push
call
lea
push
call
mov
cmp
jp
mov
mov
mov
inc
dec
dec
mov
lea
mov
dec
mov
lea
mov
lea
lea
mov
inc
inc
lea
push
lea
push
call
mov
xchg
xchg
jmp
dec
dec
inc
xchg
mov
mov
dec
jne
lea
mov
mov
lea
mov
mov
lea
inc
dec
lea
push
call
call
lea
push
call
lea
push
lea
push
call
lea
push
lea
push
call
lea
push
call
lea
push
call
lea
push
call
lea
push
call
mov
mov
lea
xchg
lea
lea
xchg
xchg
mov
mov
mov
mov
lea
dec
dec
inc
dec
je
lea
mov
dec
inc
inc
lea
push
call
call
lea
push
lea
push
call
mov
pop
ret
push
mov
add
mov
mov
mov
mov
lea
xchg
lea
lea
xchg
xchg
mov
mov
mov
mov
lea
dec
dec
inc
dec
je
lea
mov
dec
inc
inc
mov
cmp
je
call
mov
mov
xchg
lea
xchg
xchg
xchg
mov
mov
mov
dec
jne
xchg
mov
mov
dec
dec
mov
xor
divl
test
jne
mov
lea
xchg
dec
inc
dec
jne
xchg
mov
xchg
lea
mov
lea
mov
mov
xchg
xchg
xchg
mov
inc
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jp
lea
mov
mov
xchg
lea
mov
xchg
mov
mov
dec
mov
xchg
lea
mov
mov
xchg
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
xchg
mov
mov
mov
mov
xchg
mov
lea
dec
inc
dec
jne
mov
mov
mov
xchg
mov
xchg
mov
dec
mov
cmp
je
jmp
cmp
ja
mov
xchg
jmp
lea
mov
dec
mov
mov
lea
xchg
inc
lea
inc
dec
mov
lea
lea
xchg
mov
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
lea
xchg
mov
mov
mov
mov
mov
mov
lea
dec
je
mov
dec
dec
mov
push
mov
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
mov
cmp
jp
mov
mov
mov
inc
dec
dec
mov
lea
mov
dec
mov
lea
mov
lea
lea
mov
inc
inc
mov
cmp
je
jmp
cmp
ja
mov
xchg
jmp
lea
mov
dec
mov
mov
lea
xchg
inc
lea
inc
dec
mov
lea
lea
xchg
mov
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
je
call
cmp
jp
lea
mov
mov
xchg
lea
mov
xchg
mov
mov
dec
mov
xchg
lea
mov
mov
xchg
mov
sub
mov
mov
xchg
xchg
jmp
dec
dec
inc
xchg
mov
mov
dec
jne
lea
mov
mov
lea
mov
mov
lea
inc
dec
push
mov
mov
xor
call
mov
mov
lea
xchg
dec
inc
dec
jne
xchg
mov
xchg
lea
mov
lea
mov
mov
xchg
xchg
xchg
mov
inc
dec
mov
mov
mov
call
mov
xchg
mov
mov
mov
mov
xchg
mov
lea
dec
inc
dec
jne
mov
mov
mov
xchg
mov
xchg
mov
dec
push
mov
mov
xor
call
mov
mov
mov
xchg
lea
xchg
xchg
xchg
mov
mov
mov
dec
jne
xchg
mov
mov
dec
dec
mov
mov
lea
xchg
lea
lea
xchg
xchg
mov
mov
mov
mov
lea
dec
dec
inc
dec
je
lea
mov
dec
inc
inc
lea
mov
push
mov
jmp
mov
xchg
xchg
jmp
dec
dec
inc
xchg
mov
mov
dec
jne
lea
mov
mov
lea
mov
mov
lea
inc
dec
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
ja
mov
xchg
jmp
lea
mov
dec
mov
mov
lea
xchg
inc
lea
inc
dec
mov
lea
lea
xchg
mov
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
mov
cmp
jp
mov
mov
mov
inc
dec
dec
mov
lea
mov
dec
mov
lea
mov
lea
lea
mov
inc
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
lea
xchg
mov
mov
mov
mov
mov
mov
lea
dec
je
mov
dec
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
xchg
lea
xchg
xchg
xchg
mov
mov
mov
dec
jne
xchg
mov
mov
dec
dec
mov
sub
add
add
mov
mov
mov
lea
xchg
lea
lea
xchg
xchg
mov
mov
mov
mov
lea
dec
dec
inc
dec
je
lea
mov
dec
inc
inc
lea
pushl
call
mov
pop
ret
mov
push
mov
add
mov
mov
mov
call
push
call
mov
mov
xchg
mov
mov
mov
mov
xchg
mov
lea
dec
inc
dec
jne
mov
mov
mov
xchg
mov
xchg
mov
dec
mov
mov
call
mov
mov
mov
mov
lea
xchg
dec
inc
dec
jne
xchg
mov
xchg
lea
mov
lea
mov
mov
xchg
xchg
xchg
mov
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
xchg
xchg
jmp
dec
dec
inc
xchg
mov
mov
dec
jne
lea
mov
mov
lea
mov
mov
lea
inc
dec
mov
mov
movl
mov
lea
xchg
mov
mov
mov
mov
mov
mov
lea
dec
je
mov
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
xchg
lea
xchg
xchg
xchg
mov
mov
mov
dec
jne
xchg
mov
mov
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
lea
xchg
mov
mov
mov
mov
mov
mov
lea
dec
je
mov
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jp
lea
mov
mov
xchg
lea
mov
xchg
mov
mov
dec
mov
xchg
lea
mov
mov
xchg
mov
pop
ret
add
inc
gs
jb
arpl
fs
jae
add
push
cmp
testb
mov
shll
ljmp
stos
mov
mov
mov
mov
int3
int3
mov
stos
test
mov
ror
mov
stos
test
mov
shrb
scas
cmpsl
test
int3
xchg
scas
rcrb
mov
int3
movsl
scas
mov
ljmp
int3
movsl
int3
scas
int3
mov
int3
test
std
int3
dec
ljmp
int3
int3
int3
int3
int3
lahf
inc
sub
xor
cmp
or
cmp
lock
ss
mov
stos
in
mov
mov
in
mov
in
mov
clc
in
mov
xchg
in
mov
pushf
in
mov
xchg
in
mov
mov
mov
imul
int3
inc
xor
test
mov
xor
mov
mov
xor
add
mov
xor
out
test
xor
in
imul
xor
shrl
mov
xor
leave
imul
xor
iret
std
or
xor
xor
xchg
xchg
or
inc
add
inc
adc
or
mov
or
inc
sub
add
pop
inc
popl
sbb
inc
mov
pushf
inc
popl
popl
pushf
mov
add
mov
inc
vpmacssdqh
add
mov
pushf
inc
popl
pushf
xchg
inc
vpmacssdqh
inc
iret
cld
int3
int3
int3
inc
xchg
inc
test
inc
clc
int
sub
cmp
cmp
dec
int3
int3
int3
inc
adc
adc
mov
int3
leave
push
sbb
adc
int3
int
sub
and
or
int3
cmpsb
int3
cmpsb
int3
inc
and
enter
pushf
inc
popl
pushf
add
and
mov
cmp
push
pop
int3
int3
int3
inc
and
int3
rcl
and
int
sub
xor
and
fmul
vpmacssdqh
mov
int
sub
xor
and
fmul
vpmacssdqh
mov
dec
rcr
xor
out
cmp
int3
int3
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
and
inc
lahf
xor
into
inc
sbb
sbb
or
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
dec
sub
dec
xor
inc
xor
int3
mov
loopne
and
enter
idivl
cmp
inc
cmp
mov
int
sub
xor
popl
inc
adc
int3
cmpsb
faddl
add
or
pushf
inc
popl
pushf
xchg
movsb
int3
dec
int3
int3
cmpsb
int3
inc
popl
popl
pushf
mov
int3
cmpsb
int3
inc
pop
pushf
inc
popl
pushf
mov
scas
inc
inc
push
lock
cmp
cmp
ss
sub
cmp
cmp
or
cs
das
xchg
push
ror
or
inc
sub
enter
sti
adc
cmpsl
int3
int3
int3
mov
mov
int3
int3
mov
xchg
int3
int3
int3
mov
jl
and
int3
int3
int3
fmull
and
int3
int3
jecxz
mov
int3
int3
and
rolb
test
sub
push
int3
test
dec
cmp
mov
ror
mov
and
lret
mov
cmp
int3
push
mov
fcompl
or
sub
cmp
fildl
and
cmp
cmp
push
int3
inc
mov
inc
ss
adc
cmp
cmp
or
push
cmp
cmp
jecxz
inc
and
dec
adc
cmp
inc
cmp
iret
les
int3
adc
ret
dec
int3
int3
adc
inc
xor
pop
enter
cmp
int3
mov
int3
inc
cmp
cmp
cmp
xor
leave
push
inc
int3
int3
int3
adc
inc
ss
lahf
cmp
into
std
push
inc
lahf
xor
cmp
cmp
ss
testb
ss
cmp
int3
mov
int3
adc
inc
ss
push
inc
lahf
xor
xor
cmp
int
std
push
inc
lahf
xor
dec
int3
int
out
cmp
int3
int3
inc
ss
or
xor
int3
inc
xor
or
ss
lahf
xor
dec
int3
cmp
int3
mov
or
inc
sub
or
les
mov
cmp
int3
int3
outsb
les
std
or
ret
dec
int3
std
push
inc
ffreep
dec
int3
leave
sbbb
int3
int
out
cmp
int3
int3
outsb
ret
dec
int3
std
or
les
inc
dec
enter
inc
aaa
std
or
ret
dec
int3
inc
dec
enter
std
push
inc
ffreep
dec
int3
inc
dec
enter
std
or
ret
dec
int3
inc
lahf
aaa
inc
pop
enter
std
or
les
leave
orb
int3
std
push
inc
ffreep
dec
int3
leave
sbbb
int3
int
out
cmp
int3
int3
inc
aaa
std
or
aaa
inc
dec
enter
decb
inc
cmp
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
jp
mov
mov
mov
inc
dec
dec
mov
lea
mov
dec
mov
lea
mov
lea
lea
mov
inc
inc
movl
mov
lea
xchg
dec
inc
dec
jne
xchg
mov
xchg
lea
mov
lea
mov
mov
xchg
xchg
xchg
mov
inc
dec
push
call
mov
call
mov
mov
xchg
xchg
jmp
dec
dec
inc
xchg
mov
mov
dec
jne
lea
mov
mov
lea
mov
mov
lea
inc
dec
movl
lea
push
push
mov
sub
push
mov
push
call
mov
mov
call
mov
cmpl
je
cmp
jp
lea
mov
mov
xchg
lea
mov
xchg
mov
mov
dec
mov
xchg
lea
mov
mov
xchg
mov
mov
call
mov
cmpl
je
mov
lea
xchg
mov
mov
mov
mov
mov
mov
lea
dec
je
mov
dec
dec
mov
cmp
je
mov
subb
mov
mov
xchg
lea
xchg
xchg
xchg
mov
mov
mov
dec
jne
xchg
mov
mov
dec
dec
mov
xorb
cmp
jp
lea
mov
mov
xchg
lea
mov
xchg
mov
mov
dec
mov
xchg
lea
mov
mov
xchg
incl
mov
cmp
jne
cmp
ja
mov
xchg
jmp
lea
mov
dec
mov
mov
lea
xchg
inc
lea
inc
dec
mov
lea
lea
xchg
mov
inc
mov
call
mov
lea
xchg
mov
mov
mov
mov
mov
mov
lea
dec
je
mov
dec
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
mov
lea
xchg
mov
mov
mov
mov
mov
mov
lea
dec
je
mov
dec
dec
mov
mov
xchg
lea
xchg
xchg
xchg
mov
mov
mov
dec
jne
xchg
mov
mov
dec
dec
mov
mov
lea
xchg
lea
lea
xchg
xchg
mov
mov
mov
mov
lea
dec
dec
inc
dec
je
lea
mov
dec
inc
inc
push
mov
push
call
mov
pop
ret
add
imul
add
outsb
add
insb
add
add
add
add
add
add
add
jb
jne
insb
push
jb
je
arpl
push
mov
add
mov
mov
lea
xchg
lea
lea
xchg
xchg
mov
mov
mov
mov
lea
dec
dec
inc
dec
je
lea
mov
dec
inc
inc
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
mov
lea
xchg
dec
inc
dec
jne
xchg
mov
xchg
lea
mov
lea
mov
mov
xchg
xchg
xchg
mov
inc
dec
movb
mov
mov
xchg
lea
xchg
xchg
xchg
mov
mov
mov
dec
jne
xchg
mov
mov
dec
dec
mov
mov
pop
ret
lea
push
mov
add
mov
lea
xchg
mov
mov
mov
mov
mov
mov
lea
dec
je
mov
dec
dec
mov
xchg
xchg
jmp
dec
dec
inc
xchg
mov
mov
dec
jne
lea
mov
mov
lea
mov
mov
lea
inc
dec
call
test
jne
mov
jmp
movw
mov
xchg
mov
mov
mov
mov
xchg
mov
lea
dec
inc
dec
jne
mov
mov
mov
xchg
mov
xchg
mov
dec
call
lea
mov
pop
ret
mov
push
mov
add
mov
lea
xchg
mov
mov
mov
mov
mov
mov
lea
dec
je
mov
dec
dec
mov
xchg
mov
mov
mov
mov
xchg
mov
lea
dec
inc
dec
jne
mov
mov
mov
xchg
mov
xchg
mov
dec
lea
push
call
call
lea
push
call
call
lea
push
call
lea
push
call
call
cmp
jp
lea
mov
mov
xchg
lea
mov
xchg
mov
mov
dec
mov
xchg
lea
mov
mov
xchg
lea
push
lea
push
call
mov
mov
xchg
lea
xchg
xchg
xchg
mov
mov
mov
dec
jne
xchg
mov
mov
dec
dec
lea
push
call
lea
push
lea
push
call
call
lea
push
lea
push
call
call
cmp
jp
lea
mov
mov
xchg
lea
mov
xchg
mov
mov
dec
mov
xchg
lea
mov
mov
xchg
lea
push
lea
push
call
lea
push
lea
push
call
lea
push
call
mov
mov
lea
xchg
lea
lea
xchg
xchg
mov
mov
mov
mov
lea
dec
dec
inc
dec
je
lea
mov
dec
inc
inc
lea
push
lea
push
call
lea
push
lea
push
call
mov
mov
xchg
lea
xchg
xchg
xchg
mov
mov
mov
dec
jne
xchg
mov
mov
dec
dec
lea
push
lea
push
call
lea
push
lea
push
call
mov
lea
xchg
dec
inc
dec
jne
xchg
mov
xchg
lea
mov
lea
mov
mov
xchg
xchg
xchg
mov
inc
dec
push
push
push
call
mov
call
mov
xchg
xchg
jmp
dec
dec
inc
xchg
mov
mov
dec
jne
lea
mov
mov
lea
mov
mov
lea
inc
dec
mov
pop
ret
add
add
cs
jae
jae
gs
xor
pop
jne
je
jae
fs
insb
and
add
in
add
lea
push
lea
push
call
lea
push
lea
push
call
lea
push
call
lea
push
call
call
lea
push
call
lea
push
call
lea
push
lea
push
call
lea
push
lea
push
call
call
mov
xchg
xchg
jmp
dec
dec
inc
xchg
mov
mov
dec
jne
lea
mov
mov
lea
mov
mov
lea
inc
dec
lea
push
lea
push
call
cmp
jp
lea
mov
mov
xchg
lea
mov
xchg
mov
mov
dec
mov
xchg
lea
mov
mov
xchg
lea
push
lea
push
call
mov
xchg
xchg
jmp
dec
dec
inc
xchg
mov
mov
dec
jne
lea
mov
mov
lea
mov
mov
lea
inc
dec
lea
push
lea
push
call
lea
push
lea
push
call
call
lea
push
call
call
mov
lea
xchg
dec
inc
dec
jne
xchg
mov
xchg
lea
mov
lea
mov
mov
xchg
xchg
xchg
mov
inc
dec
lea
push
lea
push
call
mov
pop
ret
lea
addl
jne
mov
cmp
ja
mov
xchg
jmp
lea
mov
dec
mov
mov
lea
xchg
inc
lea
inc
dec
mov
lea
lea
xchg
mov
inc
mov
mov
mov
lea
call
cmp
jp
lea
mov
mov
xchg
lea
mov
xchg
mov
mov
dec
mov
xchg
lea
mov
mov
xchg
ret
lea
ret
lea
inc
mov
add
dec
pusha
addr16
les
aam
adc
pop
dec
add
sub
aaa
xlat
fistpll
div
add
bound
ja
add
add
add
mov
iret
add
mov
mov
shl
mov
cmp
add
fiadds
addr16
or
add
add
std
sarb
adc
xor
add
stos
cmp
jnp
leave
andb
xchg
add
lret
lods
sub
jae
aad
aas
dec
mov
inc
add
add
scas
add
add
mov
testb
add
add
sahf
pop
pop
sqrtps
mov
add
data16
stos
movl
push
test
add
int3
inc
jns
dec
cmp
adc
jp
xlat
daa
adc
pop
add
loop
in
std
lods
jge
dec
add
add
add
mov
jg
pop
push
gs
add
inc
adcl
dec
in
cmp
cltd
xor
mov
add
je
add
filds
jb
push
add
inc
add
add
add
jecxz
cld
jl
rcr
pop
add
lret
ljmp
popf
aas
push
add
pop
add
xor
pusha
mov
inc
mov
repnz
add
dec
add
sub
subb
lds
pop
lcall
lds
daa
xlat
and
roll
add
add
add
lods
fnstcw
fstpl
lahf
add
pushf
add
adc
lods
add
xchg
or
andl
add
rorl
sarl
or
jne
add
and
adc
add
jbe
dec
outsl
xchg
pop
add
jnp
ret
pusha
aam
sbb
inc
stos
lret
add
les
add
dec
dec
add
and
movsl
cmp
add
add
lahf
leave
xchg
add
or
jle
add
mov
pop
jecxz
jnp
sub
add
add
add
add
inc
add
add
scas
push
dec
fsubs
add
push
or
shrl
dec
add
sub
sub
loop
outsl
js
xor
add
mov
mov
cmp
jecxz
adc
add
pop
cmp
cmp
jmp
loop
adc
rorl
jb
mov
movb
xlat
push
mov
sbb
add
scas
or
add
mov
push
push
add
xchg
xor
insb
add
xor
xchg
add
lods
add
add
data16
int3
repz
cmp
fadds
icebp
jne
push
mov
cld
out
add
in
mov
clc
add
jp
and
dec
add
movsb
repz
pop
sahf
dec
shll
inc
ja
mov
outsl
inc
xchg
add
jno
add
sbb
add
loope
mov
aas
add
add
popf
ljmp
mov
scas
out
mov
pop
add
out
push
lcall
and
inc
outsl
inc
mov
mov
add
rcll
add
add
jmp
add
shlb
sub
add
cmpb
fldl
sbb
cmpsl
movb
add
inc
ret
stc
jnp
jp
aas
xor
sub
dec
daa
mov
popa
inc
xor
mov
ljmp
add
call
add
test
lods
sub
cmp
add
add
add
add
add
add
add
jl
add
adc
in
inc
dec
adc
adc
fwait
int3
icebp
data16
adcb
fiadds
mov
pusha
mov
push
dec
cmc
leave
cmp
shll
cmpsb
sub
jl
add
adc
sbb
je
aaa
jns
testl
insl
sbb
ljmp
push
adc
addb
out
xor
push
inc
dec
lcall
xchg
inc
in
xchg
ffree
enter
daa
daa
mov
test
jle
sub
outsl
or
mov
in
popf
mov
call
lahf
pop
jae
push
stos
add
test
popf
imul
jae
dec
lahf
jb
testl
jb
pop
bound
push
push
fsub
or
fcoml
xor
mov
jo
adc
shrl
mov
sbb
movsl
cmp
mov
ds
jo
int
aad
sub
push
pop
pminub
lcall
push
mov
std
sbb
leave
test
adc
mov
dec
lret
int3
mov
jmp
adc
push
inc
cmp
dec
scas
int3
testl
mov
cmp
insb
pop
or
es
in
popa
repz
popf
or
xor
pop
outsl
out
inc
loop
decl
stc
jae
sub
cltd
jmp
int
jmp
adc
jo
std
mov
cmp
scas
cmp
stc
jb
fdivp
push
in
xor
push
incb
fsubl
xor
loopne
mov
lock
es
aas
pop
arpl
scas
decl
pop
xor
sbb
int3
sbbb
bound
mov
and
cs
jae
aad
lods
sub
sub
add
push
rcr
rol
xchg
je
cmpsb
repz
inc
nop
movb
lea
popa
loopne
push
sbb
pop
insl
stc
adc
jne
fistl
test
pop
rcl
addb
add
movsl
nop
aas
shll
dec
js
hlt
and
mov
sub
popf
dec
mov
in
mov
repz
jge
mov
adc
cld
jg
inc
lret
fmull
leave
mov
jge
lock
mov
rcll
ret
cmp
into
insl
mov
adc
mov
adc
mov
icebp
repz
enter
push
mov
cmpsb
inc
and
imul
pop
das
sbb
rclb
fucomi
sub
cmp
push
scas
adc
clc
mov
cli
cmc
ljmp
push
pop
sub
lret
dec
push
dec
xchg
xor
insl
pavgw
cmpsl
add
pop
data16
mov
mov
adc
test
cltd
and
jp
add
lcall
ret
add
xchg
add
pop
fisubl
lcall
xchg
in
and
mov
xchg
add
mov
and
fs
jns
dec
pushl
xor
push
mov
pop
push
jno
adcl
bound
push
jns
stc
sbb
ffreep
out
addb
in
out
or
mov
jp
jmp
mov
adc
jnp
cmp
out
mov
mov
cmp
int3
jo
inc
inc
shrl
aas
hlt
imul
dec
xchg
bnd
and
test
jp
mov
jmp
bound
adc
int3
cmpps
adc
cmc
cltd
hlt
fbld
mov
or
daa
stos
jecxz
into
add
fcmovb
xchg
dec
mov
int3
fdivrl
pop
scas
outsl
test
and
dec
shrb
stc
repnz
bound
leave
mov
pop
movsb
into
pushf
lock
sbb
pop
jbe
inc
jge,pt
sbb
sbb
xchg
ds
cmp
or
add
leave
jl
adc
adc
push
clc
lock
xor
jmp
mov
xor
sbb
popa
in
inc
add
push
cmpsb
sub
push
mov
daa
es
cmp
xor
sub
cmp
add
mov
push
push
jge
fwait
test
test
xor
sub
outsb
setg
js
scas
adcl
mov
push
mov
outsl
faddl
bound
stos
inc
or
jl
xor
rcrb
test
fcompl
mov
xchg
mov
jmp
int
mov
cmp
mov
push
push
ds
push
add
mov
mov
sahf
sub
test
adc
jg
push
xor
pop
loope
mov
add
adc
pop
xor
mov
fadds
jae
testl
test
rorl
cmp
mov
rorb
cmc
fs
xor
test
loop
mov
mov
fs
add
data16
and
loopne
mov
sarl
xor
cmpl
push
js
loopne
sbb
adc
and
les
sub
jle
loopne
and
nopl
mov
ds
mov
mov
int
mov
add
mov
pop
nop
repz
mov
inc
cltd
jle
push
imul
xor
inc
addl
int3
ficompl
inc
loop
clc
daa
xor
ret
fildl
cs
jne
sbb
mov
inc
cmp
outsb
jb
ret
out
pushf
jb
adc
out
shl
mul
fsubrs
cwtl
push
pop
out
pop
loopne
mov
adc
cmp
dec
popl
ss
mov
xchg
pusha
in
pop
jbe
mov
js
lcall
cs
es
mov
or
sbb
push
out
mov
pop
xor
mov
push
loop
and
push
add
dec
and
push
sub
push
mov
push
jno
add
xor
mov
sbb
mov
fadds
ret
out
lods
cltd
pop
xchg
ja
xchg
push
mov
loope
inc
cmp
dec
cltd
ja
shlb
stos
mov
addr16
and
xchg
movsl
xchg
sbb
push
orl
dec
push
add
and
call
xor
mov
in
or
xchg
je
ret
cmp
xchg
pop
in
xor
std
call
inc
xchg
sbb
push
daa
enter
call
jne
outsl
les
xor
in
jns
es
xchg
leave
xchg
orl
cwtl
sub
cmp
test
jp
adc
push
loop
jnp
cmpsb
pop
jle
out
in
mov
iret
fbstp
xchg
fldl2t
ret
aas
call
jae
ret
add
js
sbb
dec
push
daa
daa
pop
stos
cwtl
add
and
push
sbbl
in
scas
cmpsb
sbb
push
test
aas
sbb
cmp
ret
lods
pop
and
in
arpl
mov
or
mov
ja
fidivrl
in
xchg
mov
pusha
cmp
faddp
iret
enter
mov
dec
lds
mov
std
scas
movsl
leave
sub
movsb
pop
pop
in
push
push
or
jge
or
sbb
pusha
or
xchg
mov
jl
cli
mov
sti
mov
xor
inc
or
scas
dec
mov
and
sbb
push
fmul
mov
sub
mov
arpl
and
pop
mov
daa
and
fisttpll
sub
push
addr16
scas
jl
jecxz
xor
and
lahf
pop
push
push
mov
test
mov
fidivs
cli
int3
pop
rclb
adc
jns
js
push
jg
xlat
mov
loope
lret
xchg
fsubrl
jg
outsb
fcomip
dec
adc
ja
iret
jno
sub
sbb
test
push
and
and
int
push
mov
pop
or
in
push
pop
leave
mov
jns
sahf
iret
jecxz
test
outsb
push
subb
lret
mov
cmp
mov
jl
adc
xchg
ret
test
pop
cs
repnz
jp
or
jmp
into
mov
repz
sub
lea
sti
lock
movsl
mov
je
loope
mov
add
push
shll
xchg
ds
std
mov
ja
cli
test
mov
mov
lods
sti
aaa
gs
decb
and
pop
adc
imul
and
push
cmp
dec
jnp
xchg
jecxz
lods
sbb
inc
test
xlat
jb
sub
or
js
pop
jmp
mov
cs
hlt
sbb
int3
mov
mov
inc
lods
ficoml
inc
test
je
and
jecxz
jns
dec
jno
lea
cmp
call
or
push
pop
sarl
adc
adc
mov
in
pop
sbb
inc
xor
testb
pop
aas
adc
repz
sub
data16
xor
jg
and
cmp
cwtl
adc
mov
mov
andl
in
lret
mov
jp
mov
fs
lock
cmp
das
cmp
mov
lods
aam
popf
sub
push
repz
es
mov
dec
push
cmp
and
cld
mov
mov
outsb
lahf
mov
je
cmp
mov
ss
sarb
scas
flds
lea
xor
insb
fstpl
xor
xor
pop
xchg
mulb
popa
add
mov
andl
nop
dec
shr
adc
add
gs
jne
shll
jecxz
add
mov
push
lret
dec
cmp
call
push
sbb
imul
roll
jl
and
add
cmp
dec
shlb
sbb
inc
or
in
inc
mov
mov
pop
loopne
add
scas
aaa
ja
add
pop
inc
sub
addr16
jbe
sti
dec
and
scas
mov
adc
repz
testb
sbb
dec
out
inc
imull
ss
std
addr16
scas
jp
jne
mov
aad
insb
mov
aam
jle
push
ret
decb
push
add
dec
cs
inc
pop
pop
mov
push
lds
pop
mov
data16
and
and
into
sbb
imul
or
push
lock
xchg
cwtl
std
sbb
xor
pop
repnz
jne
cmc
arpl
cmp
sbb
outsl
out
sub
jmp
cli
mov
inc
pop
or
sti
rol
jbe
std
shlb
mov
push
xor
leave
mov
addr16
mov
les
inc
jo
pmaxub
aaa
mov
mov
add
and
jl
mov
dec
jb
cli
push
mov
pop
inc
jo
in
mov
and
adc
push
cmpsl
xchg
push
or
xor
in
dec
sbb
enter
daa
and
pop
cmp
or
xor
cmp
mov
out
in
lahf
jl
or
and
inc
test
mov
fildll
xchg
cli
sbb
insb
or
into
mov
push
mov
leave
fcompl
pop
sub
sub
push
andb
shl
push
sbb
inc
sbb
shlb
mov
cltd
int
jmp
roll
pop
jecxz
mov
push
mov
adc
sahf
jb
outsl
test
incb
sub
mov
leave
mov
pop
ds
fs
adc
jmp
jnp
mov
cs
jge
testl
xchg
sbb
aas
xor
scas
push
arpl
xchg
cmc
mov
repnz
xor
iret
outsl
test
stc
cwtl
pop
mov
cli
loop
add
data16
and
mov
cli
out
mov
nop
xor
pop
in
jb
mov
out
jbe
scas
es
shll
add
cmc
inc
icebp
pop
in
xchg
cmp
dec
les
mov
xchg
cmpsb
data16
jge
dec
xlat
add
jnp
mov
and
inc
jmp
test
jno
adc
and
test
int3
movb
mov
ja
inc
je
pop
pop
jecxz
stc
xchg
dec
aad
lea
in
fiaddl
or
mov
stos
adc
call
jbe
mov
mov
jno
cmpsb
aas
mov
jecxz
jp
in
dec
and
mulb
fwait
std
loop
and
xchg
xor
cmp
bound
lret
sub
mov
mov
out
scas
lock
and
shll
mov
ret
in
inc
es
stos
push
insl
aas
dec
ljmp
test
mov
js
fldcw
inc
jle
xchg
ss
and
cmp
mov
mov
rorb
lret
test
mov
negl
daa
fnstsw
xchg
clc
imul
ljmp
jnp
cs
stos
jg
iret
out
jae
sbb
inc
int3
repnz
je
add
mov
cltd
in
ds
stos
hlt
mov
insl
clc
sub
sub
test
out
cmp
xchg
push
out
fisttpl
or
stos
add
inc
sbb
add
pop
sar
or
outsl
in
or
push
xor
xchg
adc
ja
lods
popa
daa
pop
pop
out
ja
nop
dec
dec
fcoms
inc
ret
push
mov
stos
mov
mov
std
fmull
fnstcw
jne
push
outsl
mov
xchg
mov
repz
cs
xchg
jns
imul
test
rorb
cltd
adc
or
out
addr16
jp
enter
in
enter
jns
ds
loop
shlb
pusha
ret
incb
and
cmp
mov
adc
jae
or
push
mov
inc
popf
imul
push
movsl
sbb
stos
jle
and
adc
jns
mov
scas
insb
jne
push
aaa
or
adc
push
xor
negl
pop
xchg
test
arpl
push
jge
push
inc
mov
cwtl
scas
pop
inc
dec
in
and
filds
mov
pop
cmp
fimuls
in
std
pushf
nop
sarb
mov
mov
divb
outsl
lret
cmp
enter
lock
xchg
mov
sub
aaa
jne
jb
cmc
cmp
add
sbb
dec
loope
push
mov
sbb
jo
loop
scas
or
cmp
mov
jb
pop
inc
lods
cmp
cmpsb
mov
xor
adc
dec
sbb
daa
and
xchg
jno
sub
arpl
sarb
sub
mov
negb
idivb
fsubrs
leave
sub
xor
push
xchg
pop
xchg
jnp
js
pop
notb
push
mov
sbb
and
jp
add
sub
hlt
outsb
movsl
dec
push
adc
sub
add
sub
cmpsb
sbb
xor
push
outsl
movsb
add
xlat
bound
push
or
pop
or
fistpl
pop
xor
mov
jp
push
test
push
and
jnp
adc
mov
cltd
mov
ss
sbb
cwtl
fdivrs
cmp
testl
rorl
jmp
rcr
or
mov
imul
rcl
outsl
arpl
stc
dec
and
lds
mov
mull
movsl
mov
dec
mov
xor
into
in
frstor
jb
roll
xor
movsl
pop
loopne
sti
ss
add
pop
imul
push
lods
xchg
imul
cmp
jmp
sub
in
test
into
or
jmp
popa
push
cs
inc
cmpsl
aad
pop
pushf
nop
test
imul
push
inc
shrb
dec
fldcw
out
pop
jecxz
mov
insl
sarl
call
or
leave
pop
cmp
adc
cmpsb
ljmp
inc
rcrl
xchg
inc
inc
mov
inc
mov
aas
dec
outsl
jb,pn
xchg
push
dec
push
sub
and
cld
dec
shrl
xor
std
mov
dec
mov
and
mov
hlt
arpl
sub
pop
lret
cwtl
xor
mov
fsubrl
lock
and
cmpsb
mov
popf
jle
aam
mov
push
es
sub
sbb
shlb
push
insl
xchg
dec
xchg
lods
cwtl
inc
pop
mov
mov
cmp
mov
stos
fs
pop
jp
sub
mov
orps
mov
clc
cmpsb
mov
scas
ljmp
je
fldenv
scas
out
sbb
push
sbb
maxps
push
cltd
sbb
inc
xor
push
and
jo
lods
dec
or
aad
dec
clc
sbb
int3
shll
and
or
cwtl
mov
out
call
add
cmp
push
jle
xor
shrb
cmp
xchg
popa
daa
add
push
ret
sub
mov
ja
mov
and
mov
push
mov
clc
jne
push
mov
cwtl
out
rcr
scas
vcvtsd2usi
ror
jns
test
cmpl
out
shrl
sub
push
xorb
jp
shlb
movsl
sub
jnp
jnp
jle
or
pusha
pop
cmp
dec
xchg
hlt
incl
test
xor
jno
xor
xchg
in
dec
pop
push
nop
out
mov
in
or
adc
fisubrs
addr16
scas
iret
xchg
les
mov
iret
push
ds
pop
in
lret
hlt
or
xchg
arpl
in
or
adc
leave
ficoml
pop
test
mov
jne
scas
cs
lds
dec
mov
test
leave
popl
movsb
cli
sub
push
cli
sbb
lret
adc
in
fs
xor
je
call
xor
dec
push
inc
or
xor
push
in
repnz
ljmp
cmp
repz
in
inc
cmp
outsl
cmpsb
cmp
in
sbb
mov
cmp
pop
ljmp
fimull
stc
pop
fidivrl
dec
testb
pop
and
push
dec
push
leave
enter
xor
jne
rcll
sbb
sahf
pop
mov
mov
push
push
pop
icebp
loope
std
pop
fsubrl
aam
outsb
or
adc
or
xchg
add
mov
add
in
push
jb
test
sub
imul
mov
ss
pop
sbb
arpl
sbb
jns
test
cmp
mov
xor
or
and
js
cmp
jbe
cmpsl
or
testl
test
shll
cltd
or
mov
addb
or
rep
inc
mov
ss
push
mov
adc
cmp
addb
jp
xor
test
sub
xor
adc
icebp
sti
inc
pusha
je
hlt
shrb
fistpll
sub
int
and
in
adc
xchg
push
imul
mov
sbb
repz
xlat
sub
sub
mov
xor
rcr
sbbl
nop
pop
push
stos
dec
push
adc
in
rcr
in
dec
je
shr
jecxz
lds
push
stc
mov
rolb
icebp
mov
notb
push
sbb
fildl
adc
inc
enter
cmpsl
push
outsb
aas
out
dec
les
cwtl
icebp
dec
lret
dec
icebp
and
pop
mov
imul
lea
xor
in
cwtl
inc
lret
adc
push
subl
sarb
pop
dec
or
push
jg,pn
add
xor
fidivl
mov
push
adc
and
ret
add
mov
insl
or
or
push
mov
fidivs
add
inc
mov
fstpl
and
jb
ljmp
and
sub
push
add
jge
dec
push
mov
xchg
mov
out
out
sub
pop
test
hlt
stos
pop
inc
out
cmp
rclb
and
scas
add
in
cltd
push
cwtl
pop
xor
dec
cwtl
mov
jae
orl
mov
xchg
sbb
sub
rorl
pop
fwait
scas
jecxz
push
mov
nop
add
fwait
out
xor
fsub
ret
xchg
mov
inc
mov
ljmpw
pop
rorl
jl
arpl
dec
mov
sbb
mov
ret
inc
rorb
dec
adc
ret
cmp
mov
jns
inc
jecxz
cmc
push
mov
mov
mov
subl
pop
mov
mov
insb
pop
xchg
jnp
cmc
mov
in
insl
test
stc
push
fbstp
ss
lahf
jecxz
inc
jl
out
jae
bound
push
scas
dec
popf
mov
imul
and
stos
fs
aam
sub
mov
imul
xchg
scas
xor
rcll
mov
iret
mov
int3
ret
mov
hlt
push
and
mov
or
mov
repnz
dec
jno
fiaddl
ficoml
jae
adc
ret
push
ss
or
mov
fstpt
dec
in
inc
leave
push
cmp
push
movsb
jo
jbe
cmpsl
aad
add
xor
mov
mov
lmsw
jae
jl
xor
mov
push
imul
leave
mov
and
clc
cmp
mov
inc
lret
pop
fldenv
add
enter
daa
and
cli
cmp
xchg
jno
xlat
mov
cmp
test
cs
jl
movsl
daa
and
out
jg
fyl2x
xor
mov
std
jl
add
add
xor
mov
fisubrs
pop
loope
adc
mov
pop
roll
sub
push
add
fcompl
stos
sub
adc
adc
jecxz
cli
in
dec
adc
out
cmp
mov
les
in
fwait
push
jne
mov
sub
rolb
jg
lcall
test
dec
sub
sahf
pop
ds
test
push
sarb
loopne
mov
addr16
fcomps
js
dec
shrl
ret
lret
xor
cmp
push
cmp
xchg
or
lock
cmc
inc
fldl
addr16
xlat
outsl
and
jae
mov
shlb
bswap
out
data16
xchg
lret
lods
ficoml
jne
movsb
lret
add
je
push
in
ds
xchg
mov
mov
repz
pop
xchg
fisubs
mov
loopne
mov
and
mov
subl
inc
les
mov
lods
sbb
jp,pn
xlat
ret
sub
jmp
add
sbb
insl
aad
xchg
nop
cmp
gs
inc
fstps
push
je
or
push
mov
mov
or
inc
adc
iret
fcomp
xor
adc
mov
inc
ret
aas
lea
dec
inc
adc
lret
adc
rorl
loopne
das
pop
push
std
xlat
add
std
pop
fbstp
aam
in
add
dec
sbb
jbe
lea
sbb
push
lock
leave
das
mov
dec
mov
in
xor
ret
xchg
lods
gs
jmp
dec
inc
jl
cmpsl
and
sarl
pop
fldcw
and
mov
dec
incb
pop
jmp
add
sub
dec
test
mov
stc
mov
inc
aaa
sbb
hlt
add
sbb
add
pop
arpl
pop
outsl
pop
das
cs
stos
dec
je
out
pushf
ss
push
shl
inc
nop
jno
sbb
add
xor
xchg
add
jbe
fimull
pop
inc
test
jbe
xchg
test
lods
mov
aad
lock
call
add
test
mov
test
inc
repz
in
jbe
xchg
pushl
and
pop
mov
inc
ja
dec
or
dec
ljmp
aaa
push
mov
mov
dec
mov
mov
mov
fistps
out
nop
in
andl
fnstsw
mov
fiadds
cmp
sub
and
push
jp
cli
xor
push
or
and
dec
xor
in
pop
mov
negb
shlb
xchg
lcall
inc
xchg
jae
jae
push
ror
adc
dec
pushl
push
call
insb
and
rcrl
mov
mov
xchg
cmpsb
push
push
or
lret
push
mov
adc
pop
ret
sbb
fstps
hlt
mov
xor
or
or
roll
jns
fcompl
xchg
push
mov
int3
pop
dec
cmp
mov
xor
xchg
iret
mov
pop
mov
popa
leave
jge
xchg
sub
jbe
mov
jge
adc
pop
jbe
aaa
mov
adc
add
adc
cs
xor
or
scas
test
jecxz
in
cli
xor
addr16
push
rol
fiadds
sar
cmpsb
aas
mov
in
out
ret
enter
daa
and
fnstcw
push
loop
jno
arpl
sub
shll
push
xor
movsl
lret
lea
lahf
clc
xchg
mov
test
test
ljmp
mov
sub
cmp
adc
push
jmp
fcmovnu
add
xchg
sub
outsb
into
jne
adc
mov
jp
andb
dec
sbb
clc
fnsave
push
icebp
push
js
addr16
daa
push
sub
out
adc
lcall
inc
mov
stos
je
cmc
adc
sahf
idiv
test
inc
jg
out
xorb
mov
cmp
ss
cmp
imul
test
sub
rcl
lds
pushf
pop
or
add
and
bound
ret
outsl
add
stc
je
movsl
adc
jb
add
cmp
lods
rcll
out
jo
cli
xorl
in
push
xor
sti
mov
dec
mov
loopne
xchg
scas
pop
pusha
movb
push
imul
mov
mov
sbbl
add
sub
pop
fcomps
and
cs
fs
aad
xor
dec
dec
les
inc
or
or
inc
cwtl
lahf
jecxz
mov
pop
lea
insb
xor
push
pushf
movl
push
dec
push
les
pop
inc
or
inc
fists
frstor
adc
sub
xchg
jb
cmp
mov
sbb
stos
divb
mov
cwtl
mov
add
mov
sar
pop
mov
cld
lods
xchg
jmp
in
jecxz
cmp
js
mov
xchg
mov
ret
aam
movsl
ret
and
inc
es
xor
fndisi(8087
mov
jg,pt
cmpsl
pop
cld
mov
icebp
aam
mov
repnz
dec
jbe
mov
or
push
rcr
adc
outsl
loop
mov
cmp
hlt
fstpl
xchg
pop
clc
push
jl
xchg
xor
push
ljmp
lcall
outsb
stos
cmp
out
pushl
mov
lods
iret
cmc
adc
cltd
rcll
jp
adc
xchg
out
inc
das
imul
out
inc
sbb
out
aaa
jle
or
pop
sbb
or
push
add
les
sbb
repz
xor
lds
in
push
or
arpl
push
pop
inc
mov
movsb
pop
int3
inc
pop
jo
mov
mov
mov
mov
and
outsl
sti
out
bound
cmpb
loop
mov
and
out
cwtl
xor
sbb
lahf
mov
mov
mov
insb
aam
pushf
jnp
xor
jle
ret
lock
insl
pusha
das
jno
fucomip
pop
or
insl
inc
imul
lea
mov
push
xchg
push
sti
popf
add
clc
arpl
xor
stos
dec
and
lds
int
scas
clc
sahf
int
push
xor
adc
cmp
das
pop
outsl
xchg
loopne
in
cmp
sbb
push
inc
or
test
jmp
inc
push
movsb
fisubrl
push
data16
dec
cs
ficomps
mov
sarb
out
ret
sub
hlt
or
movsb
fwait
mov
dec
jbe
sub
aam
push
mov
xchg
or
idiv
add
mov
push
sub
lock
test
xchg
inc
and
dec
cmp
xchg
mov
inc
jmp
lret
into
push
cmp
cmp
ljmp
xor
sub
or
cmp
fs
ds
mov
negb
lahf
pop
cmp
push
inc
mov
test
cmc
sub
aam
fcmovnbe
fs
aaa
pop
das
xor
pop
push
pop
jae
pop
cmp
loopne
scas
add
sub
or
sub
cltd
inc
rorb
cmp
inc
mov
push
adc
jnp
loopne
jae
xchg
sub
xchg
pop
pop
and
push
arpl
mov
and
push
sahf
mov
fidivrl
push
ret
inc
xchg
les
jb
stc
fs
ret
lds
jbe
bound
add
fcoml
and
jae
inc
daa
dec
lret
ret
cmp
cmp
test
into
add
inc
xchg
xor
ret
cmp
stc
sub
enter
or
push
adc
test
jmp
lcall
cli
mov
xorl
mov
sti
push
aas
add
pop
divb
gs
pop
add
cld
xchg
pop
pop
jg
inc
adc
pop
imul
dec
jne
jne
mov
movsb
insb
xlat
inc
or
sub
jp
sahf
jmp
jmp
jmp
jbe
nop
lock
inc
push
inc
mov
je
js
jecxz
jne
pop
xchg
imul
push
xor
push
push
ficompl
out
adc
sbb
dec
fisttpl
je
inc
pop
outsl
cmpsl
inc
clc
lods
outsb
aas
lret
stc
cmpsl
jb
fimull
and
jp
shr
inc
ljmp
nop
loope
jae
addr16
add
sbb
cld
xlat
mov
lret
push
push
decb
cmpsl
jnp
lock
dec
das
ja
jle
dec
iret
or
jns
add
ret
mov
inc
es
pop
insl
ret
dec
cmp
aad
push
fwait
in
mov
stos
mov
in
mov
inc
aaa
aas
and
inc
loop
pop
daa
icebp
ret
shrb
pop
je
mov
mov
fldl
psubb
add
ljmp
sub
stos
sub
out
bound
cltd
xchg
push
ret
fildl
add
test
lds
xchg
dec
cmpsl
sub
test
mov
xchg
adc
adc
lret
or
cwtl
xchg
fwait
cmp
fcomps
jae
or
fisttps
cmp
or
xor
cmp
or
cmp
in
xchg
popf
push
test
cmpsb
xchg
pop
add
dec
xchg
and
inc
mov
into
mov
adc
dec
ja
jg
mov
jbe
out
dec
or
jmp
xchg
push
xor
je
dec
out
insb
cmp
sbb
and
jle
push
jp
hlt
mov
insb
aas
sub
jle
out
in
pusha
mov
fisttps
inc
mov
inc
adc
test
inc
inc
popf
mov
push
push
pop
das
popf
sub
mov
push
loopne
insb
stos
mov
ljmp
push
ja
scas
pop
mov
push
lcall
iret
shr
xchg
ret
sub
out
ljmp
fmuls
inc
fnsave
push
push
pop
ficompl
test
add
lods
int3
xor
jno
daa
icebp
xor
cmp
sub
add
pop
repnz
jge
leave
imul
movsb
es
mov
jge
and
aaa
xor
and
mov
lock
addr16
or
mov
xor
rcr
scas
data16
and
mov
cmp
bound
imul
cmp
mov
pusha
enter
daa
push
jl
cmp
jmp
repnz
mov
xchg
scas
mov
adc
sub
add
ds
xor
in
test
pop
xchg
js
adc
pop
nop
int
push
inc
mul
xchg
loope
fcompl
mov
and
push
adc
je
xchg
orb
xchg
pusha
mov
xchg
adc
push
jle
push
int
sbb
loope
xchg
lcall
add
scas
sahf
inc
inc
addl
loop
xchg
mov
arpl
mov
push
sbb
adc
inc
push
ss
fnsave
cmp
fildll
idiv
mov
adc
mov
add
pop
cmp
inc
sti
or
mov
cmc
pushf
or
js
add
mov
std
ret
stc
loop
xchg
adc
mov
add
and
xchg
pusha
lahf
out
jo
cli
jmp
mov
in
hlt
fs
add
incb
shrb
xchg
scas
adc
lcall
sbbb
les
or
xchg
cmp
cmc
sbb
filds
xlat
jg
sbb
ja
shll
and
jne
cs
mov
pop
dec
or
inc
xor
pop
fld
je
lods
std
jecxz
lea
pop
mov
aam
mov
mov
lock
pop
mov
dec
dec
dec
sub
fstp
mov
shrb
inc
adc
aas
push
leave
jb
lods
adc
cmp
sarl
cmpsb
idiv
and
int3
sub
cwtl
jns,pn
mov
xchg
addl
inc
int3
mov
cltd
loopne
outsb
pop
sbb
outsb
push
sahf
das
push
lods
xor
mov
dec
sarl
ret
push
es
pop
xchg
insl
test
inc
imul
andb
mov
imul
push
mov
inc
push
mov
jle
push
pop
fs
test
clc
mov
xchg
cld
push
mov
out
clc
int
sub
mov
dec
popa
mov
mov
sbb
xchg
scas
sub
push
leave
out
cmp
add
pop
cltd
das
and
mov
jg
fisttpl
or
test
xor
sbb
inc
mov
in
pop
or
stos
sbbb
jo
add
cli
ljmp
popa
sbb
or
or
lret
iret
sbb
xchg
pop
jmp
ja
stos
xlat
dec
mov
add
add
adcb
movsl
fbld
sub
adc
mov
testb
add
ljmp
and
adc
or
mov
jo
insb
stos
adc
aam
xchg
add
pusha
mov
and
jnp
flds
out
pop
inc
mov
popf
push
pop
es
pop
pop
mov
and
fs
scas
mov
sbb
adc
outsb
pop
iret
xor
ds
test
arpl
xchg
insb
inc
loopne
test
jp
mov
stos
sub
adc
sub
pop
push
xchg
fmull
and
mov
leave
loop
bound
icebp
iret
jbe
test
jge
nop
prefetcht0
cmpsl
or
xchg
jl
stos
cli
dec
jnp
orl
shlb
and
and
fdivs
push
xor
cmovae
int
cmpsb
enter
pushf
fisubl
daa
sbb
out
pushl
loop
sub
stc
lret
adc
cmc
movsl
loopne
arpl
sub
dec
lahf
push
xchg
lahf
push
call
add
add
movsb
hlt
xor
pop
ljmp
js
push
fsts
iret
ret
in
call
add
pop
mov
xor
dec
push
es
sbbb
sbb
or
mov
sti
sbb
and
imul
inc
out
push
cmp
mov
lcall
add
sbb
fdivrs
addb
in
or
mov
imul
loop
mov
cmp
lcall
lret
mov
cwtl
inc
arpl
rcl
or
push
xor
arpl
fdivl
rcrl
outsl
popf
out
loop
jb
stc
cltd
aas
push
adc
dec
sub
dec
addb
jbe
mov
cld
ss
cli
sbb
jb
inc
mov
in
pop
cmp
mov
mov
fisttpl
adc
xor
ja
mov
repz
aas
xchg
sti
mov
sbb
sbb
or
ljmp
pushf
shlb
insb
lds
jo
mov
nop
cmpsb
cmp
dec
loope
stc
inc
inc
or
fprem
loopne,pn
sub
xor
popa
inc
xlat
lea
lahf
dec
call
add
ja
imul
pop
jno
dec
adc
popf
pop
pop
xor
inc
imul
aas
or
out
mov
mov
roll
and
std
jae
iret
cwtl
jmp
mov
sbbl
imul
in
loope
xor
lret
fisubrs
xor
and
mov
sbb
ret
into
cmpsl
insl
mov
rorl
add
sbb
lahf
mov
pop
lods
aam
sbb
in
mov
mov
mov
gs
push
sbbl
mov
movsb
orps
fstl
jno
xchg
out
out
adc
subl
pop
fstpt
push
stos
or
clc
out
sub
lock
negb
test
cltd
mov
add
mov
xor
adc
mov
sub
dec
jne
aaa
test
inc
cld
xchg
sbb
adc
or
nop
nop
fwait
cltd
in
push
mov
aaa
pop
add
imul
sbb
push
in
call
jl
sub
sarl
js
fnstenv
rorl
dec
jge
mov
in
xor
mov
pop
test
push
ret
mov
mov
pop
cmpsl
out
or
je
xor
mov
xchg
in
mov
enter
les
push
mov
sarb
mov
pop
insb
adc
sar
jle
or
popa
pusha
add
fisttps
xchg
out
mov
inc
mov
xchg
jae
arpl
popf
jp
lret
mov
pop
xor
mov
mov
and
scas
and
push
sub
cmp
adc
sub
nop
pusha
faddp
int
cltd
pop
adc
hlt
int
and
xchg
sub
aam
or
cmc
inc
jo
les
xchg
mov
push
int3
or
sub
cmp
subl
cmp
bnd
xchg
lea
mov
lcall
popf
xchg
scas
add
or
enter
fldt
dec
ljmp
xor
ja
add
cmp
nop
push
cmp
inc
xchg
push
movsl
cmpsb
dec
cmp
xor
enter
daa
sbb
icebp
cmp
pop
add
jmp
sub
scas
dec
cmp
xchg
pop
ds
add
loope
xchg
pop
lahf
je
sbb
test
push
pop
push
xor
aas
lods
mov
pop
movsb
xchg
es
xor
push
cmp
push
outsl
test
les
mov
sub
sub
outsb
pop
add
sub
xorb
sbb
pop
repz
ret
xor
test
test
test
pop
test
jmp
mov
repnz
mov
xlat
sahf
mov
test
add
jg
cmpsb
mov
mov
rorl
push
loope
arpl
test
fcoms
lret
fdivrs
idivb
in
das
andl
out
cmp
or
jb
into
scas
repz
sub
xor
jecxz
outsl
jl
mov
stc
push
cmpb
inc
sti
add
push
pop
data16
lods
pop
test
mov
repnz
dec
loop
xor
fdivrl
lret
sti
pop
add
or
jge
fdivrl
adc
test
mov
dec
and
sbb
push
scas
cmp
std
into
pop
sub
mov
pushf
jnp
sub
cs
sub
dec
sarb
dec
inc
aas
or
push
cmp
fldcw
mov
jecxz
mov
fs
nop
lea
fiaddl
andl
pop
push
mov
cmc
dec
add
adc
sbb
aam
shrl
inc
bnd
inc
dec
mov
out
jb
lock
xchg
and
mov
cmp
idivb
jg
sbb
lods
cwtl
movsb
dec
inc
mov
pop
arpl
mov
inc
cld
pop
add
lret
mov
jle
mov
dec
jmp
das
adc
andl
in
aad
pop
shlb
or
mov
dec
sub
cmpsl
sbb
mov
xor
push
lods
test
push
mov
scas
cmpsl
shlb
adc
inc
pop
test
sub
test
stc
add
vmread
fnsave
xchg
push
sub
lret
shlb
xchg
inc
out
mov
test
adc
clc
out
cltd
add
cltd
popf
mov
fwait
mov
test
dec
fdivl
icebp
jmp
lock
mov
or
dec
je
enter
pop
sub
add
out
ljmp
xor
ja
or
pop
cmpsl
xchg
mov
scas
mov
mov
sub
insb
int3
ja
jle
dec
jo
mov
jnp
fdivrl
jns
dec
and
jne
ja
mov
out
cmc
out
jmp
xlat
test
and
mov
xlat
andl
aam
int
test
roll
or
ja
addr16
xchg
jp
mov
mov
mov
pop
jnp
jecxz
jle
push
cli
in
fcomps
fildll
push
xchg
mov
xchg
fiadds
out
jae
enter
sbb
mov
movsl
adc
stos
push
orl
imul
arpl
outsl
xchg
xchg
adc
shll
loopne
imul
add
arpl
shll
or
jo
dec
inc
inc
pusha
fstp
ja
fs
or
mov
cmc
icebp
out
pop
mov
out
and
aaa
lds
inc
jne
ja
inc
repnz
mov
movsb
mov
push
jle
xorl
ret
pop
data16
sbb
or
filds
dec
pop
pop
dec
push
mov
pop
dec
jo
gs
scas
add
loop
lret
inc
pop
cmp
scas
icebp
push
lret
inc
and
inc
adc
push
inc
enter
daa
sbb
outsl
jno
inc
cld
sub
cmp
cmp
jl
inc
movsl
fisubl
bound
xchg
lahf
xchg
add
mov
sbb
adc
jo
fs
lret
and
js
sahf
stc
pop
dec
cmp
xchg
cmc
loope
push
sbb
pop
pop
ljmp
out
adc
outsb
mov
add
rolb
mov
jp
lret
fstpl
aas
sub
xchg
jae
mov
das
push
mov
add
push
mov
xchg
lods
sbb
aam
sahf
sub
pushf
sbb
jg
pop
shll
push
cmp
jge
mov
xorl
shlb
ret
aaa
fcoms
paddq
cmp
std
lret
jle
loop
cmp
jb
or
sub
icebp
mov
jmp
loop
cli
out
pop
imul
cmovb
lods
inc
jnp
mov
dec
sub
subb
xor
and
xor
or
sub
adc
loopne
jo
pop
sti
imulb
imul
lock
mov
sbb
nop
inc
adc
sub
mov
mov
jmp
mov
cs
aad
jae
nop
pop
mov
cmp
lahf
pop
fldenv
lods
je
inc
push
jecxz
insl
add
mov
pop
call
add
sub
mov
dec
dec
jmp
pop
fisttpl
xchg
pop
jbe
xchg
xchg
dec
inc
fs
xchg
inc
shll
pop
sub
or
adc
imul
sarl
pop
push
dec
mov
es
orl
lret
adc
mov
pop
ja
jg
cmc
das
repz
mov
push
or
aam
gs
push
push
dec
and
aas
push
mov
pop
cs
lock
lahf
mov
rcrb
and
scas
sarb
shl
js
sub
sub
xchg
int3
push
shrb
stc
clc
jle
cmpsl
xchg
insb
jmp
frstor
loope
pop
xor
hlt
out
out
data16
repz
ja
push
xor
add
add
mov
mov
jmp
xchg
ficompl
fidivrs
mov
or
fcomp
fwait
neg
ret
push
pushl
add
dec
add
decl
fisttpl
pop
repz
or
jle
in
cltd
stc
xchg
fld
push
mov
pusha
outsb
mov
out
xlat
ja
scas
or
cmp
mov
int3
pop
add
add
add
aad
je
mov
add
lret
bound
iret
jns
pop
mov
orb
mov
add
push
inc
ss
add
das
addr16
inc
jp
pop
jbe
pop
sbb
jmp
mov
gs
mov
pusha
add
fisttps
data16
pusha
insb
sub
jae
jb
push
arpl
mov
mov
fsubrl
stos
mov
and
ljmp
ret
scas
out
xchg
push
mov
mov
lret
iret
dec
loope
ret
in
or
hlt
arpl
jle
jmp
pop
sbb
lock
andb
pusha
outsb
push
int3
loopne
loop
jecxz
mov
lds
fstpt
mov
leave
inc
rcl
movsb
push
push
int
call
jge
adc
sbb
pop
js
xor
add
sbb
jl
mov
cs
pushf
dec
clc
xor
sub
push
and
push
cmp
bnd
mov
mov
in
push
roll
daa
sbb
xchg
cmp
movsb
or
cmp
lods
ds
mov
cmc
fisubl
std
les
mov
imul
pop
test
sub
fwait
xor
aaa
or
xor
hlt
pop
repnz
into
js
mov
shrl
push
loope
add
jp
fidivrs
inc
adc
loopne
lahf
popl
add
sbb
loope
push
dec
dec
and
inc
push
mov
int
mov
cmp
xorb
push
push
je
mov
adc
sahf
rorb
test
cmp
jg
sbb
mov
test
fs
pop
mov
add
ss
sahf
fdivrs
lret
ret
int
sti
aaa
inc
lret
mov
pop
xchg
cmp
jg
or
jb
mov
sub
test
mov
repz
call
shr
xchg
lahf
sub
addl
cli
mov
and
leave
xchg
popf
in
mov
lods
clc
decb
cmp
inc
and
add
push
sbb
adc
sub
testl
xor
push
sbb
lret
push
repnz
fsubl
sarl
xchg
cs
pop
adc
js
nop
aaa
jne
dec
inc
jne
jge
pop
fstps
mov
mov
push
clc
lea
push
call
andl
adc
fimuls
movsl
fstpt
cmp
roll
inc
jg
daa
aas
out
jg
mov
popfw
and
cmp
ffreep
testb
std
push
push
mov
jecxz
scas
mov
lret
jg
lret
xor
mov
int3
pop
lock
mov
or
in
aam
xchg
das
ret
jnp
and
insl
inc
ja
dec
and
lea
fisubs
mov
cmc
or
and
dec
jne
ret
ror
ret
cmp
sti
test
outsb
push
push
xchg
push
cmc
fldl
cltd
ss
stos
lods
ss
mov
stos
aad
cmc
out
push
sbb
xchg
lret
dec
hlt
push
into
lods
sub
mov
test
mov
ljmp
push
push
lods
xchg
outsl
aaa
test
lock
rol
sbb
push
jmp
fwait
es
push
mov
mov
mov
xor
sub
jo
xchg
sub
push
mov
js
mov
test
bound
inc
test
adc
xchg
dec
out
fidivs
sub
adc
out
test
xchg
jns
add
cmp
out
pop
popf
sub
jmp
int3
jp
mov
mov
cwtl
rep
push
movhps
push
bnd
in
es
pusha
shl
outsl
fildll
cmp
cltd
inc
aam
push
jae
pusha
add
es
popf
out
mov
call
rcrb
and
inc
jb
daa
xor
imul
and
mov
loope
lods
cmpsl
mov
push
aaa
xor
mov
fldenv
and
inc
in
push
or
mov
aas
fcmovu
xchg
push
xchg
mov
adc
lret
lret
mov
adc
out
fisubrs
and
rorb
repnz
popa
leave
mov
mov
call
jge
mov
sbb
inc
aaa
jmp
inc
or
in
scas
js
jl
fs
aaa
cmp
jg
popa
xor
mov
das
scas
sarl
add
push
pusha
dec
sbb
jg
cmpsb
aam
mov
cmp
mov
cmp
lds
mov
and
mov
and
jp
push
xor
fisubrs
aaa
test
scas
ss
not
int
sbb
and
aaa
add
lret
mov
sbb
or
test
mov
imull
int
lahf
outsb
subl
adc
mov
sbb
subb
lcall
enter
pop
loop
fstpl
pop
add
ja
push
jae
insl
mov
sbb
pop
pop
sahf
jae
jb
inc
push
cmp
std
fcomp
mov
dec
mov
fs
xor
push
arpl
ss
lock
fadds
sub
stos
shl
daa
cmp
pusha
fisttps
jae
pop
into
push
int3
cmc
jg
pop
xor
icebp
dec
outsl
sbb
loop
push
sub
jne
sti
adc
push
and
adc
lods
adc
mov
out
jbe
cli
call
and
mov
das
std
inc
gs
mov
lret
pop
cmp
ljmp
dec
mov
fsts
mov
add
test
push
and
xlat
mov
cld
pop
mov
jl
outsb
jmp
lods
jg
cld
or
adc
dec
pop
mov
aam
imul
jecxz
add
xlat
mov
call
add
pop
pop
aaa
loope
adc
and
imul
mov
mov
add
aas
test
call
dec
cli
dec
jmp
and
outsb
testb
std
sets
cwtl
aad
scas
mov
iret
mov
insb
out
cmpl
cli
lret
out
je
mov
dec
mov
mov
adc
mov
ret
pop
pop
aam
pop
push
ret
or
test
insl
sub
fisttps
les
cmpsl
sbb
xchg
mov
mov
mov
mov
sbb
mov
loope
jo
popf
inc
jmp
xor
addb
xchg
push
pop
jne
cmp
hlt
jns
xchg
ljmp
popa
adc
subl
rcl
adc
test
mov
fs
inc
jbe
xor
roll
xchg
ret
imul
inc
mov
push
or
jo
fwait
push
loop
push
inc
inc
fs
xorl
xor
mov
in
lcall
cmp
cwtl
pop
fs
cld
dec
dec
jle
inc
inc
movntq
imul
arpl
cld
mov
sbb
out
mov
les
stos
jns
mov
xchg
sbb
jne
push
in
sub
cli
push
dec
addr16
and
mov
cmp
insb
rcrl
jnp
mov
jle
lret
and
or
adc
xchg
xor
jmp
shll
adc
jmp
adc
and
lret
push
pop
mov
ja
sti
ret
sarb
mov
lods
sbb
adc
jb
ret
mov
xchg
dec
hlt
stc
imul
out
test
or
loope
cmpsl
inc
rorb
nop
pop
push
xchg
push
fstpt
int3
mov
sbb
cli
insl
fimuls
mov
cmc
mov
xor
adc
xor
mov
jne
imul
sbb
add
aaa
stos
dec
ret
adc
jl
in
dec
cmpsb
pop
lods
push
frstor
mov
cli
jo
mov
insb
and
adcl
inc
rclb
adc
pop
aas
add
sbb
mov
jno
ficoml
cmp
ss
movsl
add
mov
lahf
lock
add
add
mov
xor
mov
pop
inc
or
popa
jns
or
push
xor
jne
pop
cmp
mov
sarb
rclb
gs
sbb
stc
adc
cmpsl
lods
push
nop
aad
int
sti
sub
les
sbb
repnz
mov
fiadds
sahf
push
or
test
inc
loop
push
shrl
pushf
pushf
mov
test
jnp
imul
fidivl
mov
idivl
loope
ret
rorl
sti
or
pop
mov
cmp
cmc
inc
hlt
xor
lcall
loop
lret
sub
inc
adc
push
add
pop
popf
cbtw
mov
lods
stc
mov
mov
movsl
out
sar
cli
sbb
xor
in
jbe
sbb
sbb
push
push
cmp
loopne
out
pop
pop
ja
adc
mov
in
xchg
repz
sbb
inc
jae
xlat
stc
pop
pop
sub
sub
pushf
daa
lret
push
jmp
shl
cs
cmpsl
rcl
scas
mov
in
push
xor
pop
iret
inc
mov
imul
lahf
lret
iret
mov
jo
lea
outsl
dec
call
jg
movsl
pop
ljmp
dec
lods
cmp
fcmovnu
dec
cmc
pop
pop
or
inc
mov
cmp
and
cld
jb
in
dec
jno
insb
and
cmp
rcll
xchg
sbb
mov
in
std
mov
push
cwtl
nop
xlat
pusha
mov
push
mov
nop
adcl
mov
lret
pop
xor
mov
icebp
mov
fdivr
lock
push
pusha
das
nop
jle
mov
jp
fcmovbe
adc
or
cltd
sbb
sbb
insl
adc
pop
dec
push
addr16
pop
fs
mov
mov
xchg
lods
xor
push
mov
cmp
and
adcb
shlb
push
sub
cld
and
mov
hlt
jo
sbb
movsb
fstl
pop
clc
das
out
or
sub
add
add
pop
xor
xor
mov
stos
out
pop
pop
dec
xchg
pop
mov
push
test
xchg
add
ret
test
jns
or
adc
xchg
cli
out
test
inc
out
xchg
test
out
test
or
jp
fwait
test
add
call
xchg
add
dec
xor
jecxz
outsl
imul
jnp
sub
pop
insl
ja
push
in
dec
cmp
xchg
inc
xlat
insb
mov
mov
xchg
add
cmpsl
lock
push
mov
sti
jl
addr16
pop
bound
jnp
jns
fsubrl
jecxz
add
ftst
mov
insl
cmp
addr16
cmp
mov
add
insb
sub
mov
jle
fwait
lahf
in
inc
lcall
sbb
add
aad
inc
ljmp
push
lods
sbb
test
push
cltd
cmpsb
stos
loop
jb
adc
sbb
adc
mov
adc
cmp
pop
pop
pop
iret
imul
sub
sbb
insb
jne
inc
rcrb
andl
repnz
push
aas
cli
into
fiaddl
lods
xchg
gs
cmp
mov
aam
fidivs
mov
rol
or
xchg
out
leave
lods
divl
push
mov
addr16
jge
pushf
data16
iret
xchg
aaa
imul
nop
add
mov
xor
stc
and
inc
xchg
ss
xchg
scas
jg
sahf
and
nop
mov
push
dec
push
idiv
mov
popa
lock
int3
sub
adc
xor
pop
xchg
inc
cmp
add
jno
stos
out
cmpsb
mov
jle
pop
ds
sbb
into
daa
pop
lahf
syscall
inc
push
ficompl
test
dec
in
adc
dec
add
jl
sbb
pop
idivl
pop
jns
dec
push
std
push
sub
faddl
dec
mov
stos
push
inc
outsb
dec
data16
pop
sub
rcrl
mov
and
aad
xchg
sarb
sbb
xor
call
and
sbb
mov
sbb
insb
test
xor
cmp
cld
jg
mov
inc
icebp
fs
leave
adc
jge
ss
jmp
idivl
movsl
sbb
mov
mov
and
sub
pop
xchg
into
sbb
jns
xor
mov
outsl
xlat
shlb
stc
jecxz
daa
adc
out
add
jo
lods
loopne
push
mov
inc
out
scas
push
dec
insb
inc
xor
repz
loope
pop
sti
leave
in
imul
sub
push
loopne
mov
pop
ja
ficoms
out
cmp
out
sub
lahf
pushf
xor
roll
xlat
cmp
mov
pushf
or
mov
rorb
cmpsl
cs
aad
loopne
nop
enter
sbb
into
inc
mov
jne
inc
xchg
popf
je
dec
fs
movsl
daa
jae
int
movsl
adc
sbb
and
adc
dec
jge
xchg
movsb
pop
fildl
mov
pop
add
push
inc
xchg
sti
and
aas
ret
into
stos
jb
and
dec
call
aaa
loope
popa
aam
test
mov
cwtl
dec
in
pushl
push
and
test
frndint
das
jb
lret
int3
mov
mov
imul
jns
lock
mov
mov
xor
add
sub
dec
insl
cli
inc
enter
dec
cmpsl
push
and
mov
arpl
mov
pushf
ret
push
mov
clc
and
sbb
jmp
rolb
and
pop
jle
test
pop
mov
xor
test
jp
mov
push
mov
push
lds
popa
inc
xchg
pop
frstor
inc
out
jp
xchg
mov
sub
rcrl
add
inc
or
sbb
aad
xchg
cmp
ds
pushf
sbb
xor
repnz
pusha
fwait
mov
mov
add
mov
popf
decl
in
es
jmp
in
jmp
xchg
adc
jns
mov
fimull
ja
xchg
push
das
xchg
jno
outsb
out
xor
mov
dec
aad
jne
and
mov
icebp
popa
out
inc
sub
bound
movsb
push
sub
cmpsl
out
pop
lret
sub
lock
add
push
mov
out
adc
push
jnp
mov
adc
das
sbb
mov
and
or
cmp
icebp
inc
cmc
inc
xorl
mov
popf
fs
sarl
fcoms
test
sub
sbb
inc
fisubrl
push
cld
scas
jae
mov
sahf
loopne
ss
iret
lret
ret
adc
jmp
inc
arpl
lds
adc
or
xlat
xor
mov
add
xchg
mov
dec
push
pop
lahf
jb
ficoms
dec
call
mov
ficoml
je
jle
jmp
or
hlt
jbe
clc
loopne
xor
outsl
sbb
mov
dec
lcall
jl
pusha
jno
test
push
sub
add
cltd
cmpl
and
add
rorl
lock
icebp
cmpsb
pop
dec
in
in
cmp
enter
daa
push
adc
cmp
cmpsl
jno
mov
pop
cmp
daa
into
movsl
adc
cld
and
mov
rclb
lcall
xor
lret
fcmovnbe
aas
cmp
pop
mov
js
jb
pop
mov
fsubrl
rclb
push
fdivl
outsb
lods
out
adcl
cli
lods
popl
or
sbb
mov
push
adc
push
xchg
pop
into
int
cltd
sub
xchg
sub
jge
orl
mov
pop
sbb
mov
fadds
inc
cltd
adc
fisubrl
mov
dec
out
mov
push
inc
adc
lahf
fs
mov
mull
fcmove
test
sub
mov
sti
push
or
ljmp
aam
hlt
xor
dec
outsl
mov
in
loop
pop
cltd
stc
lcall
add
ljmp
movsb
push
mov
cs
adc
xor
dec
or
js
cwtl
fisubrs
loopne
inc
rcrl
mov
adc
mov
cli
das
cltd
rep
js
xchg
push
cmp
cmp
xlat
ja
adc
setle
mov
jge
hlt
jmp
les
and
jne
nop
mov
std
cwtl
inc
leave
lahf
nop
fnstcw
mov
jecxz
fstpl
lea
and
xchg
adcl
pop
push
pop
jbe
push
loope
mov
inc
sbb
test
icebp
lods
aas
frstpm(287
jb
cwtl
rorl
lret
mov
notb
sub
push
cwtl
push
xchg
cmp
inc
lret
jns
aas
lcall
add
lret
cmp
add
sbb
pop
mov
jnp
lock
inc
fsubrl
dec
in
mov
call
xchg
out
mov
sub
pop
add
or
pop
cmpsl
adc
jge
icebp
cmp
test
xor
pop
and
mov
jne
ds
call
sub
movsb
xchg
test
mov
mov
mov
push
mov
cmp
xchg
cmpsl
loope
ljmp
adc
sbb
out
xchg
out
jbe
cmp
repnz
mov
add
stc
mov
out
jp
push
fisubrs
dec
inc
adc
push
xchg
cmp
rcrl
or
push
cs
jg
sahf
sti
mov
ljmp
aaa
fdivl
stc
insb
test
pop
cmp
xchg
fs
mov
bound
pop
xchg
cwtl
xchg
ja
pop
addr16
and
mov
mov
cmp
ret
cmp
mov
cli
je
and
imul
cs
jns
arpl
fistpll
js
cmp
inc
or
ljmp
fwait
sub
mov
incl
add
jnp
popa
cld
jle
sbb
in
push
jmp
cmp
xor
xchg
stos
mov
xor
add
ss
mov
arpl
aam
adc
stos
enter
inc
adc
imul
mov
dec
adc
popf
movsl
iret
sub
test
push
pop
popf
pop
xchg
or
arpl
dec
inc
clc
mov
or
push
xor
or
test
or
int3
ja
test
aam
fdivp
jmp
mov
clc
mov
mov
sub
lcall
pop
mov
jbe
incb
fcoms
sti
aaa
out
nop
or
test
or
jl
pop
sbb
cmpl
xor
hlt
fldt
cmp
xchg
in
push
mov
stos
inc
jg
add
aam
jno
or
jnp
mov
lahf
jno
mov
mov
adc
jb
sbb
pushf
and
loope
dec
lahf
test
test
arpl
add
lds
dec
mov
pop
cld
mov
test
shl
sbb
mov
mov
cmp
daa
stos
orl
subl
gs
cltd
fadd
push
cltd
repnz
jns
sub
pop
std
js
lcall
xchg
lret
lea
popa
ja
sbbb
jg
mov
mov
mov
fs
enter
sub
mov
aad
fdivs
divl
sbb
rcll
cmp
sub
lods
into
jecxz
push
fwait
scas
ret
xor
ds
subl
adc
or
add
and
xlat
lods
scas
repnz
adc
hlt
imulb
cli
mov
fidivl
cld
aam
in
mov
fdivr
daa
inc
xchg
mov
hlt
sbb
or
sbb
sbb
adc
hlt
mov
repz
mov
pop
ljmp
mov
sub
mov
sub
es
cmpsb
aad
outsl
mov
pop
inc
fdivrl
fcmovnu
mov
shll
jecxz
pop
jns
jns
mov
jae
loopne
cmovle
cld
mov
add
xlat
dec
insl
bnd
gs
mov
dec
add
xchg
aas
add
lcall
dec
xchg
cs
sar
and
stos
ret
rcl
mov
push
push
mov
sub
adc
push
lret
stos
push
mov
test
mov
loope
lock
sbb
cmp
aam
push
ret
inc
pop
sbb
mov
icebp
dec
dec
pop
enter
sub
das
icebp
adc
jb
jb
push
mov
inc
mov
pushf
pop
mov
pop
push
mov
test
data16
push
fs
xchg
fdivr
loopne
jmp
ljmp
loop
xor
loopne
xorb
inc
out
xchg
cs
nop
setno
add
jecxz
cltd
push
push
xor
into
pop
mov
lcall
test
mov
jp
adc
imul
enter
adc
cmp
roll
add
in
dec
arpl
enter
dec
and
in
mov
xchg
mov
xlat
mov
mov
add
jnp
ja
mov
das
inc
pushf
pop
lret
mov
data16
dec
push
or
xchg
mov
pop
out
add
jne
lret
in
lods
jns
and
xchg
inc
int3
in
orl
pop
out
fwait
out
sub
out
sub
je
push
jp
or
mov
xor
insb
insl
test
pop
jle
dec
in
out
pusha
fcomp
jns
inc
inc
push
xchg
jle
sahf
jmp
or
popa
jae
add
cmc
popa
in
mov
jae
cmc
push
push
subl
cmp
addr16
pop
mov
scas
cmp
sub
xchg
out
in
iret
mov
movsb
ret
icebp
pop
int3
iret
push
hlt
and
adc
or
int
js
mov
jns
xchg
push
cmpsl
int3
bound
pop
std
cli
sub
cltd
push
cmpsb
or
adc
pop
repnz
leave
adc
leave
movsb
xchg
add
push
cmpsl
sahf
jecxz
jne
popa
jge
sub
aaa
cmpsb
xlat
adc
xor
jle
sbb
mov
out
jo
xor
dec
mov
scas
sbb
popa
and
imul
push
push
repz
inc
push
sbb
cmpsb
arpl
mov
iret
or
cmp
cmc
data16
sub
cmp
or
and
jb
push
push
cli
mov
add
jecxz
mov
push
fstps
sbb
jle
xchg
pop
push
xchg
jne
clc
cmp
loope
hlt
std
fmull
outsb
subl
jb
adc
add
pop
mov
cltd
sbb
int3
outsl
and
cmp
int
pop
or
mov
out
jmp
mov
in
sub
jg
call
shrl
sbb
mov
cmc
dec
pop
mov
dec
add
ss
sarl
and
divl
lods
lret
rol
out
idivb
xor
sahf
ffree
into
xchg
sub
xor
out
cwtl
outsl
je
inc
loop
mov
out
adc
lahf
push
add
push
data16
push
inc
lods
xchg
and
mov
movsl
out
pusha
pop
cli
out
fbstp
rcrl
sub
sti
addps
fidivrs
add
inc
inc
shl
movsl
lock
pop
aam
data16
scas
imul
cmp
repz
cmp
inc
jb
cmp
xor
mov
rcl
inc
jmp
or
aad
int3
imul
mov
inc
out
or
je
ret
aas
jecxz
sbb
ficoml
call
jnp
xor
xchg
push
push
sbb
fistl
xor
bound
aas
mov
sbb
dec
dec
arpl
and
daa
push
rorl
mov
std
push
inc
lock
jl
dec
mov
std
mov
subl
or
lret
mov
mov
stos
mov
das
or
ret
mov
push
push
aam
xchg
inc
ret
aad
jle
and
sbb
dec
add
sarb
call
add
mov
sbb
mov
mov
pop
jl
out
sarb
int
repz
mov
das
add
xchg
out
xlat
mov
sbb
call
popa
mov
js
fiadds
imul
push
cwtl
xchg
jne
mov
pop
push
imul
push
iret
or
mov
popf
test
dec
adc
push
leave
in
xchg
mov
insb
or
jmp
in
je
pop
add
or
dec
jmp
inc
xor
fwait
dec
in
pop
and
xchg
call
ja
insb
pushf
dec
or
insl
inc
xor
mov
aad
pop
dec
cmp
aad
inc
popf
pop
mov
dec
in
jecxz
enter
sarl
int3
xchg
js
pop
out
push
sub
loope
mulb
cmpsl
sarb
adc
insb
fcomp
mov
add
lock
inc
lock
jae
dec
fbld
add
and
inc
push
push
mov
je
push
push
mov
or
mov
xchg
dec
stos
scas
test
sbb
roll
pushf
fwait
mov
and
adc
xor
out
addr16
cmp
add
das
hlt
jo
mulb
jae
inc
shlb
insl
add
mul
inc
cmp
js
movnti
int3
dec
cmp
fidivrs
rol
jge,pn
mov
rcr
int
movsb
pop
movsb
ss
test
jbe
fs
jge
pop
aad
fcmovb
lock
gs
repz
movsb
adc
dec
rcrl
mov
xor
stos
call
jnp
arpl
and
mov
push
and
popf
add
cmpsb
out
cmpsb
in
mov
mov
adc
stc
jno
push
xor
push
push
cmp
jl
ds
out
movsl
sub
and
outsb
js
mov
push
es
mov
add
lods
cmp
mov
mov
mov
pushf
js
loopne
pop
inc
mov
push
cmp
xchg
out
add
mov
jb
fadds
aad
cmp
fisttpll
pop
sbb
icebp
in
or
push
push
lahf
hlt
ror
sbb
pop
sti
das
xlat
lcall
push
mov
xchg
sbb
pushf
sahf
inc
adc
test
mov
jg
stos
mov
push
mov
stos
adc
jecxz
sub
cmp
call
les
sarl
cmp
or
or
xchg
or
sub
popa
sub
loop
ss
stc
mov
test
data16
faddp
lods
jl
je
pop
or
cli
sbb
lahf
xor
daa
lahf
sti
test
popa
gs
idiv
loopne
in
pop
repz
jecxz
cmp
xor
sbb
daa
xchg
cltd
mov
sbb
push
out
lods
sub
add
jle
dec
jmp
add
dec
or
aad
lea
nop
xor
js
xchg
xchg
and
adc
je
xchg
sbb
jg
xor
add
add
sub
insl
lods
mov
inc
nop
and
ret
and
inc
mov
ss
cmp
or
jb
sub
dec
les
dec
and
jne
rcrl
inc
jg
stc
scas
xor
inc
sub
mov
add
addl
and
sti
fcomps
push
lret
movsl
das
jmp
enter
mov
aam
or
ret
xor
test
add
sub
dec
std
inc
mov
mov
mov
sbb
mov
stos
sbb
mov
fwait
push
loope
ja
sub
in
stos
test
ret
outsl
call
dec
fstl
std
cmp
push
fucomip
xchg
fs
ljmp
inc
pop
mov
outsb
stos
pop
test
xchg
mov
cmp
cmovg
xlat
add
push
push
cltd
mov
sbb
dec
inc
ljmp
sbb
leave
test
mov
push
sbb
fst
mov
pop
and
pop
jge
add
and
xor
and
ds
jge
xchg
push
pop
mov
lret
mov
cld
daa
ja
mov
sub
lret
mov
inc
idivb
sbb
stos
mov
mov
call
xchg
mov
out
scas
imull
fdiv
bnd
fwait
jp
jecxz
mov
pop
subb
jnp
mul
jle
std
nop
in
push
add
xchg
filds
int
jmp
and
fnsave
push
jb
jnp
sub
test
push
aam
cmp
and
jae,pt
cmp
mov
push
fists
adc
mov
test
pop
cmp
hlt
mov
sbb
inc
add
std
push
mov
ror
sbb
mov
or
push
rorb
mov
es
int
stos
fwait
aas
push
inc
aas
les
lds
int
fstps
xchg
jbe
aaa
and
sbb
add
imul
dec
inc
lea
mov
int
pop
push
cmp
xor
scas
out
idiv
xchg
imul
pop
inc
sub
fisubl
mov
pop
enter
daa
adc
cmp
inc
mov
sub
push
sbb
jl,pt
xlat
movsl
sub
mov
lahf
stos
and
push
stc
gs
test
test
push
dec
ret
sub
js
andb
fidivs
loope
push
icebp
fcompl
xor
push
mov
in
pusha
loopne
sarb
jge
xorb
cmp
mov
xchg
ret
and
jne
push
mov
mov
sub
shrl
lcall
xchg
mov
sahf
sbb
sahf
call
sub
xorb
xor
jge
add
lods
mov
jns
or
insb
loopne
cmp
mov
push
fxch
je
sbb
adc
mov
mov
cmc
lock
daa
xor
adc
cmp
loopne
jbe
ds
mov
pop
data16
fildl
mov
mov
icebp
rorb
mov
adcl
cmc
sti
xor
sub
gs
or
dec
pop
adc
insb
adc
add
imul
lcall
cmp
sbb
mov
xor
fcomi
jg
adc
sub
into
jmp
mov
xchg
aad
mov
nop
paddq
dec
divb
inc
adc
or
je
mov
lret
movb
stos
call
jns
jmp
sbb
mov
les
dec
cs
push
pop
xor
ret
inc
push
cmpsb
movsl
aas
fidivs
dec
dec
cmp
push
shr
adc
negb
sub
mov
add
or
fsts
push
xchg
inc
lret
imull
adc
mov
lods
das
lret
mov
les
aam
fisubl
sub
scas
dec
clc
pop
mov
mov
imul
ljmp
mov
or
or
mov
mov
popa
in
repnz
sbb
ds
push
lods
cmc
mov
clc
xchg
lret
int
mov
push
push
popa
mov
mov
xor
fwait
stos
dec
xor
out
imul
cmp
scas
xor
cltd
ret
cmp
xchg
jle
mov
mov
cli
jbe
mov
jae
sbb
adc
dec
or
sbb
sahf
push
mov
add
test
xor
fmull
cmp
xchg
mov
mov
mov
sbbl
lcall
sahf
xor
incb
cmpsl
jne
mov
mov
out
out
mov
xor
jns
sub
xchg
movsl
sti
xorl
ljmp
jb
addr16
sarl
fidivs
mov
cmpsb
cmp
scas
ret
mov
shl
push
push
scas
pusha
test
xchg
xchg
xchg
testl
inc
sub
mov
pop
inc
push
ds
lods
mov
adc
and
xor
scas
bound
push
xor
adc
iret
movsl
push
ret
jns
jno
out
push
stos
adc
add
or
ds
ljmp
jb
xchg
outsl
inc
outsb
int3
and
pop
mov
in
jnp
pop
shlb
lods
gs
jns
push
leave
jbe
call
push
xchg
cmc
data16
fwait
mov
sbb
clc
aaa
jecxz
orl
addr16
jl
xchg
scas
dec
scas
ret
das
push
xchg
loope
xor
pusha
xchg
sub
mov
push
and
push
mov
mov
mov
enter
daa
adc
cmp
jno
test
jmp
lea
movsl
xor
fwait
and
movsb
lahf
leave
add
int3
imul
popl
push
inc
inc
pop
push
loopne
js
mov
mov
mov
fmull
push
js
inc
xor
adc
xchg
ss
fucom
cmpsb
addb
sbb
xor
xor
movsl
out
adc
jp
pop
stc
neg
lcall
lods
mov
mov
mov
dec
sahf
mov
rolb
lret
xchg
and
cmc
gs
mov
icebp
daa
mov
dec
dec
cmp
sbb
scas
rolb
mov
and
mov
dec
lret
adc
lods
pop
lds
cmp
jmp
jl
outsl
jnp
cmc
mov
adc
pop
faddl
adc
loop
int
stc
sub
dec
call
sub
lods
dec
adc
out
mov
cli
sbb
xor
sbb
arpl
sub
jecxz
adc
inc
data16
gs
mov
jbe
jbe
xor
imul
aas
push
repz
pop
xchg
pop
pop
jns
mov
int
xlat
mov
add
dec
adc
mov
aam
jge
mov
lods
ja
pop
cmp
nop
ljmp
inc
sub
je
xor
jecxz
repnz
movb
call
xbegin
mov
dec
sbb
or
pop
aam
cmp
inc
jb
jne
jge
std
jb
in
dec
mov
pop
and
or
sarl
ljmp
inc
sub
mov
mov
inc
xorl
dec
xchg
lret
enterw
xchg
loope
mov
lock
sub
mov
popf
std
mov
adcb
es
add
fs
adc
or
cmpsl
adc
mov
insl
es
push
mov
mov
xor
xchg
mov
aam
shlb
std
sbb
adc
mov
es
frstor
clc
int3
dec
xor
loop
pop
ljmp
cmp
mov
out
int3
dec
adcl
ds
prefetch
add
fisttps
xchg
mov
cmpsb
arpl
dec
outsb
mov
cmp
sbb
int
rcll
fimull
out
jns
int
les
pop
xchg
add
push
incl
xor
cli
test
xchg
out
ljmp
adc
sbb
into
shll
call
out
clc
jmp
mov
and
dec
loope
iret
jne
popf
cltd
mov
push
xchg
out
subb
jns
int
xchg
jo
rolb
outsb
xchg
sub
ret
xchg
jo
pop
jp
lea
insb
sbb
jnp
cs
jle
add
pop
dec
call
ffreep
mov
xchg
lret
jmp
aaa
push
ja
loope
test
add
sbb
sti
repnz
mov
pop
inc
out
and
mov
imul
and
lds
adc
push
iret
add
call
pop
test
mov
arpl
xor
or
mov
and
fisubrl
fmuls
sub
icebp
pop
mov
mov
add
cmp
int3
repz
leave
in
jmp
fsts
out
adc
jge
pop
pop
sbb
xchg
sti
aaa
mov
test
add
pop
push
jl
mov
dec
push
mov
cli
xor
mov
mov
sbb
stc
cmp
push
call
inc
dec
pop
shlb
push
xchg
mov
daa
adc
int3
cmp
push
popf
sub
enter
cmp
ds
movsl
cmp
sub
or
lahf
call
mov
dec
add
scas
push
xor
pop
stos
sarl
mov
pop
add
dec
push
and
fdivrs
jmp
xor
movsl
outsb
sub
shrb
gs
cmp
and
xchg
sti
jo
add
nop
and
das
mov
int
popf
fldcw
js
in
js
aam
mov
mov
lea
mov
dec
test
in
sti
sahf
and
add
jae
out
fnstcw
dec
cmpsl
mov
nop
mov
fs
and
adc
mov
sub
sbb
loopne
pop
pop
add
repnz
pop
repz
into
push
pop
or
jle
cwtl
xor
jle
lock
fsub
pusha
out
stc
in
xchg
cs
mov
andb
xchg
dec
call
adc
mov
pop
xor
lcall
xchg
neg
push
jp
pop
addr16
loopne
cmp
push
sub
mov
imul
ds
repz
xor
xchg
loop
adc
sbb
cs
fdivl
mov
jg
or
popl
aad
sub
nop
dec
mov
xchg
inc
cmp
ret
mov
je
cld
adc
inc
ret
mov
add
jbe
fld
ja
repz
orb
jb
mov
add
lahf
fistl
sbb
ja
mov
inc
clc
sub
sbb
sub
and
xor
push
push
rorl
mulb
inc
ja
push
shlb
mov
nop
jno
pop
aad
lret
aad
int
imul
mov
mov
add
mov
mov
xor
mov
ret
adc
es
adc
mov
dec
out
dec
iret
cmpsl
bswap
pop
mov
inc
add
mov
mov
mov
adc
pop
clc
cmp
sub
sti
popl
stos
mov
xor
jo
mov
mov
pop
pusha
int
and
ljmp
sbb
lret
out
das
mov
push
pop
pop
push
pop
adc
pusha
jl
cltd
xor
fwait
xor
in
mov
test
lds
mov
dec
xchg
cmp
shll
cltd
jmp
cld
in
push
add
jecxz
enter
je
push
xor
mov
or
or
cld
xchg
ds
popa
mov
push
cli
mov
notl
dec
aam
inc
inc
pop
dec
add
mov
mov
cs
pop
stc
shll
addr16
jns
adc
adc
adc
icebp
xor
int
jmp
jg
jp
lock
test
dec
jnp
outsl
inc
jle
je
in
fcompl
pusha
fistpll
hlt
xchg
popf
int
jmp
inc
std
inc
jae
inc
and
jne
je
ss
push
xchg
sbb
lret
sbb
scas
clc
imul
or
ret
inc
pop
adc
dec
iretw
arpl
ret
rcrb
inc
xor
pushf
inc
mov
inc
or
or
xor
adc
fcmovu
icebp
loop
sbb
mov
adc
enter
mov
add
jmp
dec
repnz
mov
andl
mov
mov
std
xchg
aaa
popa
lahf
mov
add
test
adc
pop
fwait
ljmp
mov
scas
ja
js
scas
in
cmp
iret
fiadds
push
xlat
cmpsb
repnz
in
ds
xchg
enter
daa
ud2
std
cmp
inc
loop
mov
scas
and
in
arpl
cmpsb
hlt
jecxz
pop
into
jnp
jb
jp
pop
sbb
movsl
lods
fwait
xor
movb
test
nop
js
loope
pop
inc
push
test
aaa
adc
loope
inc
mov
pop
popl
and
adc
dec
je
fwait
mov
je
int
pop
mov
mov
in
push
stos
push
xchg
sub
movsl
cmp
test
xchg
push
shll
pop
mov
fldl
sbb
and
mov
addb
mov
mov
bound
loop
shlb
and
data16
ss
testl
divl
and
rcr
jl
sbb
and
into
xor
scas
sub
outsl
iret
loope
loop
xor
stc
fwait
xor
adc
les
sbb
mov
lods
sbb
mov
fwait
out
cs
out
stos
xor
xchg
mov
cmp
add
inc
lcall
fs
std
loopne
jg
pop
outsl
shlb
imul
xchg
sbb
pop
jmp
xchg
movsl
mul
sbb
push
inc
inc
xlat
xor
in
sub
sbbb
scas
ficompl
aad
jp
nop
mov
cmp
inc
dec
sub
fsqrt
fnsave
jl
push
insb
mov
jl
icebp
cmp
mulb
xchg
leave
dec
ljmp
cld
jbe
sbb
jge
test
jns
mov
outsl
aad
mov
repz
rcr
data16
std
xchg
cmp
cwtl
and
mov
psrld
pusha
ja
cld
xchg
jae
inc
inc
movsb
mov
dec
mov
js
lock
xchg
scas
das
addr16
and
jmp
aas
ds
mov
cld
xchg
insl
xor
dec
jmp
stos
and
icebp
sbb
cli
lods
hlt
lods
out
int
sti
mov
xor
pop
pop
mov
shrl
xlat
popf
adc
sub
mov
jae
push
testb
clc
inc
or
pusha
sbb
ljmp
inc
pop
xor
shrl
out
xchg
mov
xchg
fcomp
fstl
nop
or
lret
js
add
push
cltd
push
and
mov
lods
jns
dec
pop
add
xchg
mov
sbb
popf
sar
jp
or
pop
and
mov
jecxz
add
push
or
push
call
imul
insb
mov
out
sbb
dec
movl
pusha
mov
add
jne
out
mov
imul
ds
mov
cmp
cli
or
andl
je
mov
or
push
outsb
aas
or
mov
pop
insb
out
dec
ja
cltd
jne
jle
flds
addr16
pusha
jp
xor
incb
mov
hlt
cmpsl
pop
inc
dec
cli
lods
jae
and
push
xchg
or
mov
shrb
mov
and
imul
jge
imul
dec
scas
mov
xchg
push
or
popa
adc
add
ret
ret
rcrl
pop
hlt
out
jbe
ficomps
inc
or
or
push
mov
enter
lock
je
pop
int3
in
and
fisubrs
test
adc
inc
mov
jb
pop
leave
fildl
loopne
shrl
mov
jbe
rcrl
sbb
and
cmp
sub
cld
jl
jb
dec
cld
jecxz
inc
out
xor
jno
in
push
xor
cmp
fistl
mov
cmpsb
jne
jne
and
call
push
cmp
sbb
sub
cmp
movsl
in
or
add
inc
mov
lahf
es
xor
mov
jecxz
xchg
mov
push
mov
test
inc
pop
addb
push
pop
pop
loope
repz
or
sub
ja
outsb
les
or
and
int
cli
xor
sbb
outsb
mov
sbb
and
cli
fadds
scas
addr16
sub
arpl
jbe
pop
lcall
dec
mov
ret
je
insb
test
cmp
jae
rcrb
mov
push
lock
sub
mov
mov
js
xor
push
maskmovq
les
inc
addr16
jno
push
or
push
or
sbb
inc
cmc
or
inc
xor
jle
outsl
scas
xor
mov
adc
out
rolb
add
shrl
inc
pusha
mov
cli
sbb
loopne
fnsave
sti
lock
mov
xchg
imul
inc
fcom
pop
mov
pop
jge
imul
cmp
xchg
push
push
and
push
repnz
outsl
bound
sub
dec
or
aad
jbe
insl
push
cmp
cmp
xor
nop
jnp
scas
dec
jb
and
xor
fnstenv
out
sahf
je
xchg
mov
mov
sbb
call
jne
lret
jmp
mov
fldt
dec
addb
aaa
inc
ret
lcall
pushf
cmp
pop
jo
and
in
shrl
or
imulb
xlat
aaa
std
cmp
adc
fidivs
mov
jb
xor
gs
mov
xchg
ficomps
lahf
das
inc
sbb
mov
mov
pop
addr16
das
in
int3
es
cmpsl
and
rcrb
in
xor
xchg
cli
lods
pop
in
mov
cltd
jne
and
mov
call
shrb
jecxz
test
cmpb
fsts
mov
xchg
lahf
or
ljmp
stos
pop
loopne
cmpsb
stos
or
aaa
xchg
pop
sub
add
sub
loopne
xchg
sbb
shrb
xchg
and
stos
popl
cmc
das
cmp
or
imul
push
inc
mov
dec
add
xor
xor
push
sbb
sahf
push
xor
sbb
out
mov
insl
fdivrp
ja
pop
cwtl
dec
mov
rolb
pop
inc
or
dec
mov
jne
and
push
adc
sbb
push
jns
xchg
xchg
rcl
iret
xor
out
test
mov
ret
cmp
insl
sbbl
xor
pop
mov
mov
insb
pop
jl
jnp
aas
aad
ret
in
sub
adc
xor
xchg
inc
daa
pop
jmp
pop
dec
pop
jae
cmp
dec
fldl
lods
pop
lock
bsr
stos
pusha
dec
lret
jne
sbb
pop
dec
imul
fldcw
push
mov
adc
lret
icebp
iret
and
pop
dec
and
hlt
xor
addr16
push
test
mov
or
sub
out
xor
inc
cmpsl
xchg
lret
mov
pop
pop
inc
jbe
fimuls
test
rcl
lcall
leave
push
mov
jbe
jbe
js
jge
fwait
leave
sbb
aas
aaa
fbld
or
sti
mov
jl
push
icebp
dec
imul
and
pshufw
push
scas
xor
adcl
inc
notl
sbb
or
mov
daa
or
adc
jno
ds
mov
cmp
sub
lods
movsl
push
js
and
das
mov
push
sbb
inc
add
movsb
lahf
xor
or
sbb
dec
pop
in
mov
js
pop
jl
mov
push
pop
loope
fdivl
push
subb
imul
add
pop
stos
mov
cmp
push
mov
iret
outsl
and
lds
mov
sti
int
and
adc
cmc
mov
lcall
adc
cmc
cltd
sahf
pop
ret
jne
cltd
jnp
xorb
mov
mov
mov
aaa
fs
adc
xchg
mov
and
dec
shl
scas
ljmp
or
lahf
cmp
xchg
into
sti
mov
cmc
shll
xor
sti
loop
insb
adc
or
adc
int3
mov
cmp
push
cmp
push
mov
and
in
mov
cli
dec
cmp
xor
sahf
sti
lahf
sub
add
loopne
inc
in
lods
sub
adc
or
les
movsl
repz
adc
push
sbb
add
xlat
scas
cmp
sub
jp
mov
cmpb
mov
dec
xor
shrl
inc
inc
je
push
fldcw
int3
je
pop
mov
je
adc
xchg
loope
lea
andl
fwait
vmovups
inc
dec
lds
fcmovnu
add
inc
fistl
inc
fimuls
adc
leave
lds
add
mov
imulb
test
jecxz
mov
mov
sbb
mov
jno
orl
rcrb
rorb
movsl
pop
pop
lock
subb
je
mov
push
sub
aam
shlb
es
cmp
dec
fisttps
pop
mov
leave
jns
lods
lret
mov
mov
xchg
add
pop
push
adcl
test
lahf
mov
shl
push
jl
fstp
add
test
fiadds
loopne
sub
out
stos
clc
push
popf
out
pop
repnz
xchg
data16
push
in
xor
add
add
xor
mov
mov
mov
dec
in
jne
es
arpl
test
jmp
or
xchg
fwait
mov
push
jmp
pusha
out
inc
movsl
fs
adc
in
xor
sub
inc
mov
lock
sub
ja
outsl
aaa
dec
lods
and
sub
adc
insl
or
jne
rolb
mov
test
bound
out
jns
mov
xchg
pushf
fidivrl
jl
out
jne
pop
pop
sbb
mov
dec
aaa
jp
push
mov
lds
test
stos
in
out
pusha
mov
mov
xchg
push
mov
mov
arpl
add
mov
test
mov
dec
aad
stos
rcll
xor
shld
xchg
mov
push
cmpsl
scas
push
es
push
cwtl
sti
lods
adc
stos
jge
andb
ret
push
pop
test
aas
hlt
jge
cmp
xchg
xchg
inc
adc
add
movsl
dec
out
mov
in
hlt
jbe
xchg
and
pop
int3
mov
mov
insb
lds
fs
shr
les
sbb
leave
leave
sub
insl
push
pop
orl
mov
addr16
mov
mov
lret
add
mov
dec
fimull
push
push
pop
arpl
daa
xchg
adc
push
lods
pop
push
scas
test
dec
cmpsb
jnp
pop
in
repz
out
daa
or
inc
cmp
push
jno
in
xor
cmp
lahf
ja
dec
test
les
ja
push
lahf
fs
add
mov
test
sahf
jle
xor
frstor
js
je
pop
out
lods
push
push
jecxz
xor
test
pusha
xchg
arpl
lock
outsb
mov
mov
fisubl
mov
jae
sbb
scas
mov
xlat
xchg
and
aam
push
mov
sub
sub
pop
je
cmp
fdivrs
loop
mov
mov
and
out
adcb
jg
add
mov
adc
out
cmp
pusha
ss
pop
jbe
add
and
insl
xchg
jnp
es
lods
rcrl
pushf
or
dec
pop
into
fisubs
cmc
lcall
outsl
insb
jmp
and
ror
adc
incb
lret
mov
lods
int
add
jmp
and
xor
sub
sti
dec
sbb
lahf
gs
mov
pop
int3
loopne
adc
jae
imul
orb
test
push
jle
and
xlat
in
xchg
add
lea
mov
pushf
sub
nop
add
mov
and
dec
xor
mov
lahf
mov
jecxz
stos
lods
xchg
and
and
bound
out
pop
dec
push
out
adc
orb
into
push
fisttpl
and
fs
inc
bound
inc
stc
mov
aas
cwtl
xor
popa
dec
add
les
imulb
jl
cwtl
push
add
mov
jecxz
mov
and
andl
mov
mov
lock
add
add
test
push
fsubs
aam
xchg
lret
jns
es
adcl
fisubl
xor
or
mov
mov
shlb
mov
fisttps
clc
mov
je
not
push
and
dec
pop
shlb
aas
xor
frstor
icebp
pop
clc
repz
xchg
sbb
add
popa
inc
es
ss
stos
out
xchg
mov
cmc
cmpsl
push
enter
call
cmp
cltd
or
mov
jns
mov
fmuls
or
test
loope
xchg
cmc
rcl
add
or
mov
fwait
mov
dec
jg
in
cs
or
xor
pushf
push
or
mov
out
xchg
jp
cli
mov
pusha
jge
push
pop
pop
pop
jecxz
mov
pop
mov
mov
movl
push
mov
jne
ret
cmp
fistpl
idivb
rcll
ss
sub
mov
xchg
push
jp
test
negb
insb
xor
jnp
push
pop
jle
shrl
dec
insl
xchg
fistps
aaa
xchg
jmp
and
jae
inc
or
shlb
scas
mov
lea
stos
inc
mov
idivb
sbb
fidivrs
scas
mov
jecxz
fildll
int
fbld
ret
fistpl
xchg
xor
or
inc
push
adc
and
filds
dec
cmc
fisubl
roll
movsl
sbbb
movsb
mov
lds
mov
mov
imul
leave
inc
cmp
push
outsb
iret
or
push
xchg
jge
in
sbb
mov
out
icebp
push
repnz
dec
push
and
jmp
jecxz
jo
imul
sti
out
jnp
push
fs
jp
mov
cmpsb
lods
cwtl
in
fcmovu
adc
xlat
inc
push
or
xor
insl
repz
outsl
cmp
daa
jo
pop
or
and
mov
xor
les
add
in
xor
add
jnp
mov
ja
js
and
pop
cmp
push
loope
fdivs
fmull
xchg
sbb
fistps
mov
mov
cmp
mov
push
test
xor
daa
push
push
mov
jmp
jg
scas
sub
jmp
pop
rep
cmpsb
lcall
push
mov
cmpsl
xor
pop
dec
test
push
movsl
jg
notl
mov
mov
mov
push
das
adc
add
cmp
sarb
lret
inc
shll
scas
cmp
movsb
mov
into
roll
cmc
popa
sub
xor
aam
outsl
dec
dec
loop
jae
stc
ja
jle
int
xor
pop
dec
xchg
data16
jp
lods
mov
nop
mov
ljmp
mov
pusha
xor
dec
in
in
cmp
sbb
sbbb
pop
jmp
pop
adc
cmp
les
imul
jb
xchg
mov
jmp
movsl
dec
sarb
adc
jne
add
mov
push
ret
jmp
push
cmp
data16
push
aad
test
nop
or
xchg
and
sub
xchg
sub
jecxz
into
or
lea
inc
call
xacquire
add
and
fwait
daa
and
cmp
or
lods
cli
inc
adc
push
aas
aaa
outsb
pop
jb
hlt
decb
sbb
and
mov
rcll
shlb
std
xor
lret
xor
mov
xchg
cmpl
fs
or
das
sahf
fisubrl
jecxz
sbb
lds
aam
mov
ret
fsubl
cli
insl
into
mov
dec
aad
or
pop
shlb
icebp
ja
outsl
lods
mov
in
cs
loop
std
mov
xchg
outsl
jo
daa
jbe
sub
push
xor
add
mov
jno,pn
xchg
pop
std
mov
cmp
lds
rcrl
stos
pop
shr
push
std
lds
mov
rolw
mov
gs
xor
aas
sub
xchg
mov
xchg
pushf
mov
push
out
rcrl
sbb
fwait
out
jmp
add
sti
fs
xor
add
xchg
leave
mulb
mov
inc
idivb
sahf
and
dec
xchg
sbb
mov
mov
push
adc
inc
sub
mov
out
mov
cmc
sub
add
jnp
mov
sbb
sub
mov
fwait
addr16
push
jp
insb
add
fwait
stc
bnd
xor
jle
negb
in
lea
out
data16
fs
mov
cmp
jns
repz
das
xchg
push
xchg
mov
and
pop
idivb
int3
xchg
or
cmp
cld
mov
test
push
es
xchg
iret
ds
mov
xchg
repnz
inc
arpl
ficoml
or
fwait
js
inc
mov
lock
sahf
xchg
rclb
mov
xchg
fstp
div
jbe
sub
pop
shlb
inc
mov
mov
call
addr16
mov
and
jge
sbb
dec
aaa
sbb
arpl
mov
and
mov
jg
leave
ficoml
push
int3
cltd
lahf
xor
fstl
scas
shlb
or
and
push
inc
inc
movsb
xor
iret
in
sar
enter
daa
or
cmp
adc
sub
or
cmp
gs
cltd
mov
and
lea
xchg
xor
test
fmull
sub
arpl
iret
js
mov
jl
das
push
subl
sub
mov
outsb
push
mov
data16
sub
or
push
sbb
fs
loope
and
mov
arpl
out
xor
pop
das
and
jb
cli
lcall
inc
mov
fcomps
jmp
sahf
add
lods
test
xlat
orb
repz
mov
mov
ret
jns
icebp
nop
ljmp
adc
fdivrs
aaa
imul
jae
lret
outsl
ror
push
or
mov
into
movsb
sahf
loope
sub
inc
xor
cld
loop
les
stc
cs
push
add
jmp
retw
lods
fwait
adc
mov
inc
jb
jmp
jecxz
xor
xchg
in
push
jge
sti
lods
dec
adc
cmp
adc
xchg
dec
loopne
add
push
push
adc
out
les
jge
and
xchg
je
nop
sbb
jnp
clc
xlat
imul
sub
nop
mov
sbb
jle
leave
fs
aad
in
ret
xor
dec
out
sub
or
stos
or
mov
or
loopne
aaa
call
jno
loope
mov
pop
adc
dec
xchg
push
and
dec
pushf
inc
jo
loop
das
iret
call
jb
xlat
into
dec
repz
mov
dec
repz
divb
out
std
fdivs
cwtl
lret
mov
add
mov
dec
xchg
cld
pop
jbe
lret
outsl
jecxz
mov
or
lock
jp
push
test
call
sub
das
ret
imul
es
fstps
dec
rolb
cmpsl
or
mov
icebp
dec
xor
mov
and
lcall
mov
repnz
lcall
sub
lahf
imul
jne
hlt
clc
imul
cmp
scas
xor
popa
outsb
movsb
repz
mov
outsb
out
xor
and
mov
sahf
add
dec
fstpl
in
sbb
inc
add
xchg
xchg
xchg
mov
shll
clc
mov
push
mov
push
shrb
add
aad
lcall
dec
out
or
out
inc
in
js
xchg
sbb
mov
popf
and
pop
pop
popa
jp
dec
mov
ds
sbb
mov
sub
dec
push
out
jne
cmc
xor
cltd
and
or
xor
subl
pop
out
jb
sub
scas
inc
pop
imul
movsb
mov
insb
push
jbe
jnp
push
movsb
jle
pop
aaa
in
jbe
pusha
cmpl
sub
cli
and
sahf
jae
pop
push
push
push
inc
sbbb
cmpsl
cmp
fisubrl
push
push
mov
xlat
in
mov
mov
sbb
adc
jns
popf
sub
mov
xchg
test
pop
in
loopne
sub
pop
inc
sbb
into
or
push
imul
fimull
js
int3
jnp
fcompl
daa
pop
ficomps
cwtl
and
cmp
sti
mov
adc
in
lea
mov
jbe
xchg
sbb
mov
iret
aaa
fistpl
or
cmpb
hlt
fisttps
pop
push
push
scas
test
xor
cmp
mov
shll
and
cmp
xchg
inc
push
adc
inc
xor
andl
int
in
daa
or
icebp
jno
fildl
cmp
jae
ds
das
movsl
insb
sub
dec
xchg
sbb
push
fs
test
out
iret
xor
mov
pop
mov
lock
cmp
xor
push
dec
dec
loope
jp
fsubl
sub
movsl
mov
fbld
shrb
adc
aad
jb
fistl
sbb
fcomip
mov
in
and
and
mov
push
fs
push
leave
pop
icebp
mov
lcall
mov
sbb
push
sahf
mov
pop
aas
andb
lss
inc
pushf
fs
orl
mov
cmp
cmp
stos
test
shll
pop
adc
arpl
into
xchg
cld
cmc
out
mov
shrl
cmp
gs
test
in
lds
mov
add
das
inc
sub
sub
ret
out
idiv
cli
sbb
jnp
adc
in
mov
test
pop
iret
dec
mov
loopne
mov
cmp
imul
addr16
repz
int
xchg
aaa
scas
mov
mov
cmp
stos
mov
push
pushf
sub
shr
int3
inc
cs
mov
nop
ret
dec
dec
xor
inc
shlb
aaa
xorl
ffree
popf
test
je
sar
and
lock
and
cmp
adc
testl
fistpl
lods
sub
inc
dec
push
xor
jne
shlb
out
add
ret
mov
shll
mov
test
test
mov
mov
xor
mov
fmul
ficomps
cmp
rcrl
lock
cmp
mov
sti
fnstcw
cmc
jecxz
ret
cli
dec
movsl
es
insl
pushf
mov
cmpsl
or
xor
or
xchg
mov
dec
dec
dec
and
xchg
stc
push
pop
shrl
ror
mov
and
mov
mov
pushf
insb
xchg
clc
movsb
sbb
in
ljmp
loop
aaa
cs
mov
stos
xchg
adcb
syscall
jne
add
cmpsl
imul
push
addb
fwait
rorl
mov
xchg
daa
pop
sbb
rorl
pop
push
int3
outsb
repnz
inc
push
cld
push
jne
jecxz
jns
addl
cmp
mov
xor
or
enter
sub
push
dec
push
pop
adc
shlb
ss
dec
jns
dec
inc
mov
movsl
mov
lcall
jne
and
mov
nop
popf
out
js
leave
bound
loop
xchg
enter
mov
cmp
xchg
or
xchg
in
jp
push
xorb
stos
jnp
stos
push
jle
cmp
in
ret
sbb
add
ds
bound
jne
int3
add
iret
mov
sbb
mov
xchg
ljmp
and
and
mov
imul
push
push
mov
jnp
xor
xor
ret
aad
pusha
push
and
arpl
xor
sti
stc
lock
mov
imul
jle
cli
int3
lds
fidivrs
jb
rclb
mov
fs
sbb
movsb
sbb
push
pop
push
jbe
jle
jge
and
jecxz
mov
lcall
add
xchg
push
xchg
stos
mov
xchg
stos
scas
nop
jne
and
cmc
push
ret
cmpsb
xchg
in
in
out
enter
daa
or
cmp
ja
jno
enter
ret
idivl
mov
pop
push
movsl
jae
hlt
and
mov
in
aaa
mov
test
repnz
sbb
insl
es
jmp
dec
cmpsl
js
movsl
ljmp
int3
loope
add
sub
ret
xlat
xchg
rolb
mov
out
pop
mov
dec
std
divl
mov
inc
int
fdivs
pop
jo
sbb
xor
clc
mov
std
sbb
es
inc
ss
test
fiadds
mov
pop
mov
shlb
sbb
aad
or
xor
icebp
push
iret
imull
jg
repnz
push
sar
imul
push
or
fsubp
into
push
ds
mov
cwtl
xor
insb
outsl
call
add
pushf
inc
jbe
cs
aaa
enterw
imul
jmp
out
mov
dec
andb
es
inc
sti
or
gs
outsl
ss
adc
imul
popa
inc
xchg
cli
jecxz
sbb
icebp
push
inc
xlat
jmp
nop
sbb
pushf
xlat
gs
xor
aad
mov
or
ds
inc
shll
je
das
scas
jecxz
shrb
lea
dec
adc
outsl
jnp
pop
sbb
dec
pop
sub
fcmovne
icebp
je
popl
lock
jle
int3
inc
gs
loopne
adc
pop
jb
cmp
dec
loope
hlt
and
jb
roll
jns
idivb
testl
jns
push
clc
jnp
adc
mov
dec
sbb
mov
sub
subb
sbbb
sar
ret
mov
nop
es
sub
dec
adc
mov
or
xchg
sahf
mov
imul
and
xor
rcl
mov
sti
bound
popa
mov
ret
pop
ffree
pop
std
clc
xor
xchg
das
cmp
pop
loop
pop
stos
mov
mov
xchg
leave
add
and
pcmpgtb
mov
clc
xor
cltd
jmp
mov
rorl
call
aas
adc
sbb
lock
rcrl
xchg
or
mov
into
push
sbb
jmp
add
fistpl
int
add
or
mov
in
mov
cwtl
mov
test
sahf
pop
iret
lcall
insb
int
inc
inc
data16
pop
adc
dec
fsub
jge
lcall
out
push
clc
add
inc
push
scas
jns
inc
jae
xchg
in
orw
out
jge
sub
movsl
ds
jp
pop
mov
insb
fsubr
dec
jnp
or
push
in
je
pusha
mov
xchg
pushf
lret
adc
jmp
lcall
push
fsubrl
jns
push
cmp
or
stos
adc
and
dec
imul
scas
inc
fcomps
adc
aaa
jbe
pop
inc
ret
ret
push
pop
xchg
pop
sbb
hlt
les
inc
and
sub
or
inc
das
loop
fidivl
inc
xchg
aad
sti
int3
push
test
pop
pusha
xchg
das
fsubp
mov
shrl
mov
mov
sbb
movsb
mov
mov
jbe
fldt
cli
es
sahf
sub
or
sub
dec
add
mov
cmp
mov
scas
outsl
in
and
cmp
imul
inc
push
mov
xchg
in
jbe
je
ret
jg
daa
pop
adcl
cmpsl
lods
jno
fsubs
pop
fucom
cmp
lcall
fsubs
and
scas
lahf
call
add
adc
sti
xor
xor
stos
bound
mov
je
iret
push
loope
lods
test
mov
add
fwait
jecxz
outsb
jns
arpl
and
inc
addb
xchg
sbb
out
and
push
push
ret
adc
int
inc
mov
lret
jno
pop
out
leave
ret
mov
push
sbb
add
fldenv
sub
les
lcall
adc
xchg
out
dec
xor
jo
lods
add
mov
rcll
push
or
into
dec
push
fprem1
jge
pusha
xor
lock
mov
aam
push
test
add
test
lods
push
mov
xlat
out
scas
cli
jle
shll
jb
in
xchg
sub
sti
mov
icebp
mov
pushf
rolb
loopne
je
pop
addr16
pop
addr16
imul
cmp
mov
push
ret
adc
int3
mov
mov
subb
notb
cs
aad
adc
scas
dec
or
inc
out
dec
fnstenv
out
sub
into
push
add
mov
pop
xchg
leave
xor
pop
int
cld
adc
rcrl
imull
pop
xor
add
enter
js
jb
mov
shll
scas
movsl
rcll
xchg
idiv
jne
std
int
out
sti
call
outsb
mov
dec
push
lret
mov
sbb
mov
jbe
lock
out
das
pop
fnsave
mov
gs
ret
sbb
cmp
push
popa
dec
shrl
mov
shrl
lods
dec
cltd
adc
inc
daa
mov
and
lret
cmp
pop
adc
jae
mov
mov
sbb
push
or
fucomp
xor
xchg
pop
and
popa
mov
aas
pop
lret
lods
stos
xchg
sub
xchg
adc
push
maskmovq
mull
add
divb
and
push
int
out
jb
stc
xchg
icebp
arpl
in
in
test
or
sbb
mov
shll
fwait
mov
in
add
addr16
es
jp
add
push
out
push
xchg
mov
xchg
add
pop
fidivrl
mov
add
pop
jno
inc
fisubs
push
mov
js
nop
dec
mov
lods
jge
shl
stos
out
ss
aad
jno
das
push
pop
xchg
pop
in
dec
sbb
shl
mov
or
mov
iret
jns
cwtl
adc
insb
inc
jecxz
jnp
xor
mov
cs
mov
pusha
push
into
sub
mul
stos
xchg
or
outsl
jmp
movsl
mov
jae
jle
push
lahf
mov
popf
aam
mov
dec
xor
push
enter
test
cltd
lods
nop
mov
or
inc
repz
adc
mov
iret
mov
xchg
into
hlt
aas
scas
cmp
push
lcall
leave
mov
push
scas
push
rcr
es
xchg
sub
inc
int3
cmp
out
pop
jne
fiadds
push
jmp
lea
sti
repnz
jbe
xchg
push
xor
cs
cmp
push
into
jbe
lods
idivl
mov
sbb
jae
sbb
ret
add
xor
movsb
dec
je
pop
push
pop
lea
jo
adc
fimull
adc
jge
loopne
iret
cmpsb
testl
daa
push
inc
jp
test
xchg
sub
lret
sbb
ljmp
sbb
lahf
push
mov
jle
or
add
pop
push
xor
cwtl
mov
outsl
xlat
or
repnz
js
xor
pop
push
out
loope
jnp
fsubl
das
sub
and
enter
repnz
repnz
scas
adcb
sbb
sub
push
scas
pop
int
pop
sub
cmp
outsb
fwait
adc
mov
arpl
mov
mov
push
rcrl
mov
inc
test
addl
or
mov
jmp
mov
push
cmp
pusha
adc
and
fsubs
imul
fsubs
sbb
outsb
cmp
into
xor
sub
add
outsl
cmpsb
fs
adc
stc
or
adc
or
add
outsb
data16
adc
lods
mov
push
cli
mov
or
xchg
mov
in
cld
push
imul
iret
test
mov
insl
and
insl
pop
adc
xor
les
push
rclb
push
xlat
test
aas
test
mov
sub
inc
pop
cs
mov
nop
push
inc
pop
dec
push
test
stc
rcr
jmp
add
jecxz
jle
cmpsb
inc
xor
jl
cmp
inc
test
xor
ja
adc
mov
dec
xor
scas
lcall
addr16
inc
fwait
inc
xor
push
lds
xor
les
or
and
inc
shll
orl
mov
and
divl
mov
faddl
or
aaa
lret
sub
mov
jp
push
mov
out
ds
pushf
mov
pop
push
insl
aam
and
ret
cmpsl
addb
dec
repnz
push
stc
adc
mov
mov
mov
stos
jne
lods
mov
test
hlt
fists
cmpsb
clc
and
data16
rolb
sti
sub
pop
mov
push
rol
sbb
adc
stc
clc
push
mul
xchg
xchg
xor
shlb
push
mov
arpl
or
scas
mov
mov
fldl
push
jmp
cltd
push
xchg
fnstenv
sub
orl
sub
lods
push
ja
lea
sbb
fdivl
add
sbbb
sbb
cmp
sub
int3
or
add
negb
inc
xchg
push
stc
dec
mov
xchg
mov
inc
and
ja
mov
dec
push
leave
mov
or
mov
mov
or
sub
loopne
bound
cmpsb
jns
cld
or
and
sub
fwait
mov
xor
jp
jl
mov
sbb
xchg
jnp
sbb
jle
dec
mov
cmpsb
add
pusha
in
push
sub
adc
lods
icebp
jmp
mov
push
jae
mov
ret
cmp
jo
pop
out
cmp
and
cld
imul
add
cli
sub
sar
iret
sbb
ret
rcrb
ret
in
jg
gs
inc
sub
xor
std
lods
inc
sub
sahf
xchg
xchg
xorl
daa
jle
pop
mov
add
vorps
shrb
in
pop
lcall
mov
cmp
jbe
repnz
sbb
test
xlat
fiaddl
jae
add
sarb
jnp
jecxz
jl
cmp
jp
pop
jo
adc
push
and
imul
cmp
and
mov
adc
inc
add
mov
mov
mov
and
mov
inc
and
and
adcb
sub
adc
mov
pop
and
pop
lds
mov
cmp
mov
pop
loope
outsb
jle
or
popf
outsb
aas
jecxz
adc
xlat
pop
inc
push
cmc
pop
andb
pushf
sbb
das
in
cmp
lods
push
leave
ret
jmp
sub
pop
in
lock
lcall
cmpsb
mov
xor
ljmp
test
jg
orb
hlt
jg
sbb
mov
int
adc
roll
test
and
out
mull
fadd
rol
imul
jp
pop
sbb
into
adc
aad
or
adc
fcoml
mov
mov
rcll
mov
jl
push
not
lods
push
icebp
add
out
jbe
cli
in
mov
insb
adc
sti
pop
sbb
jmp
inc
gs
les
mov
cmp
xchg
and
les
mov
xchg
inc
cmp
dec
push
cmp
jp
sub
fldcw
aam
pop
cs
and
nop
cs
outsl
inc
or
cwtl
fldenv
sub
je
insb
fninit
in
cmp
test
enter
mov
in
adc
pop
xor
inc
adc
cmp
fistl
xchg
pop
js
cmp
adc
jl
mov
cmp
icebp
adc
pop
dec
inc
sarl
out
addl
std
sbb
sahf
cwtl
jno
divb
push
test
inc
lret
lcall
mov
pop
shl
push
test
das
sbb
dec
pop
mov
and
or
ss
rorb
imul
push
loopne
add
int
push
repz
icebp
and
or
aam
push
and
add
sub
dec
lcall
jge
dec
test
out
push
xchg
lock
fnstsw
mov
nop
or
out
jae
popa
loope
xor
xor
jo
scas
xchg
sahf
orl
jno
adc
cltd
mov
adc
inc
test
xchg
pop
push
dec
sbb
push
scas
xchg
xchg
shll
or
mov
push
add
dec
add
popf
xor
mov
push
pop
or
in
aad
xchg
mov
and
in
jns
add
ja
cmp
repz
or
push
mov
push
outsb
dec
test
xlat
jne
movb
lea
hlt
pop
sti
sti
xchg
dec
repnz
hlt
call
sub
xchg
repz
sub
xchg
mov
sbb
fwait
cmpsb
mov
nop
mov
jnp
lret
std
cmp
in
fcomip
pusha
mov
inc
fbstp
sub
jmp
mov
ds
push
and
xchg
insl
mov
inc
daa
dec
stos
imul
and
sbb
adc
scas
imul
mov
pushf
jp
iret
js
xor
xchg
or
inc
push
hlt
aad
and
inc
sub
fsubrl
sarl
fimull
jo
adc
adc
leave
scas
outsb
lds
js
ret
shrl
mov
clc
leave
cmpl
push
xchg
arpl
movsl
stos
jge
jb
sbb
movb
xchg
xor
in
mov
jl
iret
insl
dec
push
xor
push
aas
jae
inc
xchg
fnstenv
ja
scas
or
ja
add
mov
imul
inc
mov
jp
sub
enter
daa
add
add
jmp
add
sub
and
cmp
mov
dec
aad
into
mov
lahf
pop
push
adcl
test
push
aas
out
xor
xor
pop
dec
sub
scas
pop
testb
sub
xor
fdivrl
and
outsb
mov
nop
jl
mov
pushf
mov
xor
sub
dec
mov
loope
and
dec
sbb
push
mov
pop
insb
lret
sbb
aam
nop
aad
mov
loopne
sbb
ss
sahf
shlb
test
sub
jg
sub
xor
inc
xor
clc
into
ss
pop
enter
sbb
popl
lret
jae
push
dec
idivl
and
or
xor
xor
pop
inc
repnz
js
int3
adc
pop
mov
inc
cmp
fldt
adc
out
and
pop
das
jecxz
inc
cwtl
and
rorb
sti
sub
decb
dec
clc
gs
add
push
lcall
cwtl
imul
ror
repz
pop
adc
mov
push
cmp
or
xlat
in
mov
and
mov
sbb
ret
shrb
ds
rclb
or
dec
sub
mov
push
subl
sti
cmp
lods
xchg
movsb
lea
sub
cmp
imul
out
mov
xchg
xchg
xchg
fildl
mov
inc
shll
aas
nop
push
jb
outsl
dec
dec
mov
pusha
pop
sarl
adc
test
fdivr
ret
cwtl
sub
les
pop
or
sbb
out
lret
or
cs
lock
lock
das
cld
inc
leave
mov
movb
in
popf
fs
lds
es
cmp
insl
pop
jmp
dec
mov
imul
pop
outsl
and
mov
idiv
call
mov
insb
das
aas
shr
jle
sub
test
pushf
lods
push
push
xchg
pop
fstpl
push
lret
push
xchg
adc
popf
dec
popa
clc
jle
pop
mov
lret
or
shrl
ficoms
out
pavgb
add
cltd
xor
adc
mov
int
and
push
std
test
fnstsw
sbb
sub
sarl
sub
push
movsb
mov
add
mov
pop
test
iret
adc
mov
in
xchg
repnz
cmp
mov
pop
mov
dec
outsl
dec
cmp
push
mov
dec
push
jmp
push
out
rcl
bound
inc
jg
mov
xchg
jecxz
adc
shr
or
xchg
xor
mov
sub
mov
mov
jle
sbb
pusha
and
lods
xchg
adcl
mov
movb
push
call
into
sarb
test
cmp
ficoms
and
lret
imul
xor
pusha
iret
xlat
cmpsl
mov
test
inc
pop
jae
cld
hlt
and
arpl
push
rorb
cmp
push
fidivrl
incb
xor
xor
std
lahf
pop
sbb
outsl
fisubrs
js
fsubrp
movswl
add
add
or
movsb
stos
movsb
iret
jl
push
out
in
call
test
xor
push
mov
or
enter
xchg
jl
mov
dec
shll
push
add
xchg
xor
pop
out
jmp
jmp
xor
xchg
ret
and
and
pop
inc
lret
andl
scas
sti
insl
daa
add
adc
sub
mov
cmp
fdivrs
mov
movsl
xchg
call
push
lahf
jnp
int
push
repz
test
sub
rcl
mov
and
imul
fwait
aad
loope
shrl
push
addr16
outsb
add
clc
rorb
xor
dec
shl
sbb
mov
and
inc
repnz
iret
and
mov
loope
jmp
push
lcall
cmc
mov
add
dec
adc
sahf
jne
out
test
push
xchg
jg
inc
arpl
jbe
mov
adc
clc
and
pop
cmpsb
sub
cwtl
nop
fdiv
and
lret
pop
shr
cs
ds
or
adc
fnstenv
cmc
cltd
loopne
xor
jg
outsl
inc
fdivrs
loop
scas
and
das
cmp
adc
sbb
sarl
icebp
lods
in
mov
or
loop
into
cli
dec
pop
into
xor
inc
fsubrp
cmp
sar
xor
add
pop
jecxz
push
adc
xchg
push
es
lret
or
out
leave
mov
sbb
sbb
xlat
and
pop
sub
mov
outsb
jmp
lahf
insb
jle,pn
xor
cmp
sbb
xchg
popa
cmp
or
scas
in
lea
call
ljmp
adc
mov
dec
repz
pop
pop
mov
mov
addr16
das
ret
inc
jb
mov
jbe
adc
mov
jg
imul
mov
cmp
mov
fadds
mov
cltd
mov
fs
imul
lock
jno
das
fcmovne
out
mov
jge
outsl
aam
pop
rol
sbb
fsub
dec
insl
push
cmp
dec
lods
push
cmp
mov
mov
das
and
lods
clc
out
idivb
sbb
adc
aaa
cmpsl
add
mov
inc
sarb
sub
mov
pop
xchg
push
sbb
gs
push
add
push
xchg
popa
cmovl
pop
cmp
fldt
ss
int3
xchg
sub
stos
push
jnp
sub
add
cltd
cld
xchg
cltd
xor
cmp
xchg
or
jne
hlt
testb
sub
repz
dec
hlt
or
xchg
lea
inc
xchg
add
adc
je
and
jo
xchg
inc
les
cli
mov
mov
jbe
aaa
ja
fsubr
dec
sub
out
cmp
jnp
xor
cmp
xchg
pop
jne
jo
mov
test
mov
cmp
add
jns
xchg
mov
out
xchg
or
je
testb
in
insb
repz
jnp
jno
jle
out
imul
lds
mov
aaa
inc
xchg
push
lcall
shrl
jae
push
inc
push
stos
lahf
pop
popf
jo
int3
mov
les
hlt
stos
push
push
dec
and
sub
sbb
mov
xor
pop
push
test
ss
mov
cmp
hlt
imul
inc
xor
or
jae
in
inc
stos
cmp
cmp
int3
call
xchg
mov
pavgw
lds
sar
and
push
cmp
leave
outsl
je
movsb
pop
mov
push
xor
jp
jge
rcrb
inc
adc
aaa
adc
dec
or
and
inc
enter
insb
bound
aam
push
in
outsb
xor
mov
popf
scas
lret
and
call
outsb
push
popf
aad
inc
sbb
mov
stc
push
jge
stos
mov
jo
cmp
inc
jno
dec
mov
cmp
sub
push
movsl
popf
data16
test
push
push
sub
sub
xor
or
inc
imul
lcall
pop
je
adc
lea
loope
and
fmull
lret
inc
jb
outsb
push
les
shrb
push
outsb
shll
sbb
sub
and
mov
int
lods
inc
sub
sbb
lcall
cli
mov
mov
xchg
sahf
sbb
sbb
andb
jg
pusha
js
lret
mov
mov
pop
xchg
fs
neg
adc
fnsave
pushf
lods
cmp
push
and
call
roll
pushf
or
into
mov
cltd
hlt
xor
outsl
and
push
mov
adc
sti
test
pusha
js
data16
lods
shl
int
or
cmp
cli
jge
movsb
xor
rsm
in
test
int3
sti
and
stos
push
cmc
sbb
popf
jmp
mov
loopne
add
lock
outsl
add
pop
pop
movsb
xor
lcall
sbb
push
xchg
arpl
sub
fisttps
pushf
cmp
loope,pn
xor
nop
mov
fmull
lds
xchg
jecxz
pop
int3
mov
jb
sbb
mov
imul
adc
jbe
fimuls
pop
pop
popa
or
inc
test
fiaddl
clc
lock
into
pop
cmp
inc
fisttpll
mov
inc
rcr
jbe
testb
adc
and
repz
mov
or
mov
jecxz
out
mov
aad
jb
xor
cmp
mov
xor
test
andb
jecxz
dec
es
std
sbb
dec
test
add
ljmp
lods
arpl
loop
mov
dec
mov
and
data16
stos
gs
rclb
and
test
shrb
fnsave
popf
das
jmp
xchg
stos
jmp
inc
or
popa
es
adc
out
cltd
fldt
xchg
jae
loopne
push
inc
setle
jns
xor
lret
mov
mov
shll
push
dec
push
adc
test
movsb
inc
xchg
add
shrl
xor
fwait
mov
push
ljmp
add
and
sub
jne
lea
test
std
out
nop
imul
mov
scas
enter
add
ja
in
scas
dec
push
xor
inc
rorl
push
mov
mov
lds
jne
pop
cmpxchg
filds
bound
dec
xchg
push
fdivrs
andl
fwait
sub
xchg
ret
jmp
jp
xor
mov
les
pop
sub
jl
push
jle
mov
pop
pusha
pop
and
fists
push
mov
inc
fsubrl
jns
outsb
int3
popf
xchg
out
sarl
add
imul
das
dec
imul
xchg
movsl
call
sub
lock
loope
dec
hlt
mov
inc
arpl
jmp
or
out
into
jne
sub
fisubl
stos
cmp
pop
jp
mov
fcmovnb
jmp
sbb
adc
mov
test
out
movsb
in
fists
jp
jbe
pop
jge
ret
add
or
cmc
add
xchg
clc
les
dec
arpl
outsl
ss
adc
test
and
shlb
inc
stos
in
pop
cmpsb
sbb
xchg
in
loopne
movsl
enter
daa
add
xor
jno
xor
cltd
fldenv
ds
addb
and
fcompl
cld
inc
jne
fnstsw
iret
xor
lret
and
js
mov
xor
clc
mov
xor
sbb
xor
pusha
mov
rolb
jnp
int
aas
xorb
sbb
rcr
imul
inc
push
aad
xchg
test
sub
outsb
dec
lcall
aam
scas
call
enter
inc
test
loope
cmpb
jg
jg
mov
aaa
stos
mov
fs
ret
fists
cmp
push
dec
mov
mov
test
rcrl
cmp
in
adc
fistpl
xchg
into
lahf
fldcw
cmc
daa
mov
xor
mov
outsl
add
push
loop
and
popf
mov
adc
leave
lods
add
jnp
pop
add
outsl
mov
sub
loopne
jmp
mov
xchg
xor
add
in
adc
mov
ja
out
gs
pop
daa
loopne
je
pop
and
mov
repz
mov
cmp
jnp
sub
adc
test
cmp
nop
pop
shrb
inc
bnd
enter
lcall
inc
pop
adc
dec
je
push
jl
sub
jo
mov
hlt
lea
stc
call
call
jmp
jle
leave
sub
fistl
imul
or
das
in
inc
and
mov
insl
subb
stc
loopne
and
cld
and
add
jg
popl
sbbl
mov
dec
andl
outsl
lods
mov
faddl
das
cltd
pop
mov
jmp
mov
dec
lret
jb
pop
fimuls
fisttps
fwait
jb
add
push
mov
jb
into
adc
pop
imull
mov
sub
rcrl
leave
push
iret
shlb
xchg
sub
xchg
test
packssdw
mov
in
clc
jl
cli
xchg
rclb
ljmp
rcrl
sub
cld
bound
mov
mov
add
lahf
cltd
push
test
cmpb
clc
mov
dec
mov
in
xchg
repz
rol
add
out
pop
fwait
mov
adc
mov
xchg
add
dec
add
xor
fistpll
and
shl
lods
pop
sub
mov
sbb
mov
in
cltd
repz
test
push
fcompl
mov
cld
outsb
dec
adc
xlat
jne
stos
lahf
mov
lret
jo
lea
dec
loopne
jns
insl
xchg
and
sbb
sahf
jmp
loopne
andb
pusha
jecxz
jp
and
mov
enter
sbb
jnp
sub
jle
jne
in
cmp
fbstp
cmp
jbe
addl
jae
in
sbb
popf
mov
out
push
inc
xor
and
ja
fidivl
pop
scas
cmc
jb
push
in
cli
out
or
iret
hlt
sbb
loope
scas
pop
sbb
iret
hlt
add
push
arpl
in
or
imul
ficompl
xor
mov
mov
inc
lds
pushf
shrb
or
repnz
test
leave
pop
lcall
movsb
jo
sub
mov
jbe
sbb
sbb
dec
lea
fdivs
outsb
imul
dec
push
test
push
stos
adc
xor
imul
scas
mov
dec
int
cmp
stos
push
xor
jmp
in
movl
add
mov
sub
mov
sarb
bnd
movsl
stos
mov
and
cmp
push
iret
mov
lods
add
out
cmc
xor
insb
xor
add
pop
call
sbb
repnz
std
push
pop
mov
dec
dec
cli
fsubl
sub
or
loop
adc
push
cmp
addb
cmpsl
mov
or
aam
lds
fsubr
mov
sub
sahf
dec
pop
push
cmp
mov
cmp
test
adcb
iret
mov
adc
out
fs
xchg
adc
mov
cmp
add
leave
or
popa
sarl
mov
xor
or
push
cmp
cmc
out
xor
and
outsl
loopne
out
loop
and
adc
jmp
add
mov
lods
mov
addr16
fcomip
imul
lahf
pop
cmp
jle
or
adcb
lcall
loopne
in
pop
inc
mov
imul
sbb
cmp
sbb
leave
push
hlt
xlat
loope
cmp
icebp
inc
jbe
scas
mov
adc
jg
jge
cmpsl
jo
aad
push
mov
jne
decl
xor
inc
imul
fnstenv
dec
lret
je
popa
fsubp
aaa
jecxz
mov
js
call
addr16
xor
jmp
es
mov
mov
inc
inc
pop
cmpsl
jmp
nop
cli
inc
cmp
in
jb
in
dec
cltd
call
add
jp
shl
rorb
std
pop
lods
loope
sbb
mov
pushf
push
mov
pusha
aad
cmp
or
lds
lds
sbb
das
js
mov
cmpl
insl
mov
push
cmp
push
cmp
mov
jmp
mov
adcl
and
or
pop
call
mov
test
mov
repnz
arpl
movsb
clc
mov
cmp
ljmp
mov
cmp
les
pop
fidivs
add
push
or
cmp
pop
std
or
nop
in
xor
fisubl
add
and
gs
lret
movsl
adc
sub
or
fmuls
push
xor
sub
cmp
aaa
add
lret
lods
xor
fadd
or
inc
xchg
cs
loopne
ret
sti
jno
sub
jbe
rcrl
inc
jmp
mov
orl
push
mov
mov
out
dec
idivl
jns
jge
xchg
jmp
cmp
and
jnp
adc
dec
pusha
addr16
pop
jp
ret
or
xor
leave
jnp
stos
xor
es
in
or
pusha
popl
xchg
int
xor
inc
repnz
and
hlt
outsl
pushf
popf
in
mov
out
je
cmp
imul
test
enter
lcall
pop
loope
jecxz
mov
push
dec
in
ret
test
hlt
dec
inc
xor
mov
push
inc
or
in
roll
xchg
fimull
sub
ljmp
clc
jnp
clc
push
jnp
stc
stos
sub
dec
imul
cmp
leave
aam
fsubs
xor
hlt
adc
jae
jbe
clc
aaa
push
mov
and
roll
add
mov
dec
jge
mov
xor
mov
fisttps
notb
jne
leave
sbb
xchg
in
scas
xor
enter
daa
cli
mov
ljmp
sub
js
cmp
stc
ret
imul
and
mov
push
mov
aaa
aad
push
sub
hlt
les
insl
js
gs
pop
xor
addr16
loope
adc
cld
sub
sub
push
jo
movsl
orl
cltd
mov
sbb
adc
jecxz
or
fstpt
js
mov
lds
cwtl
aas
call
cwtl
ret
mov
mov
add
test
ljmp
and
icebp
mov
daa
mov
adc
adc
loopne
gs
leave
cmp
test
mull
pop
push
lret
and
dec
outsl
js
int
dec
or
or
sub
outsl
mov
scas
pop
stc
or
adc
or
les
mov
sbb
out
cs
cli
push
sbb
in
jmp
cmc
ret
mov
cli
pop
loopne
imul
adc
pop
mull
repz
mov
xchg
aad
mov
jns
les
add
call
sub
mov
ficoml
jmp
daa
ucomiss
jecxz
aad
scas
xchg
add
inc
jle
imul
rcr
je
shrl
aaa
ljmp
jnp
call
out
inc
pop
gs
sahf
adc
push
fisttps
dec
fldt
and
dec
jmp
mov
pop
rcrl
jb
add
dec
adc
and
insb
pop
ror
mov
std
add
cmpsw
mov
sbb
shlb
aaa
mov
lret
xor
push
mov
in
mov
je
lock
and
push
hlt
enter
add
jecxz
test
in
cmp
mov
xor
loope
andl
push
sbb
mov
cmpsb
jnp
and
mov
push
add
or
inc
fnstsw
mov
and
xchg
repnz
push
sub
ljmp
sbbb
stos
or
mov
push
out
cmp
mov
dec
pop
cltd
fmuls
mov
fsubrl
dec
xchg
cmp
es
xchg
jb
shrl
add
xchg
sbbl
mov
into
xchg
pushl
pop
xor
fwait
or
dec
outsb
in
sbb
xchg
jge
push
push
push
fdivrs
bound
push
ja
aas
ret
dec
mul
mov
inc
adc
mov
dec
xlat
adc
mov
popa
sbb
mov
insl
push
push
xchg
mov
inc
adcl
movsb
sbb
sub
js
les
pop
inc
jp
sbb
mov
cmp
insb
lahf
jbe
jnp
lock
jle
lret
fsub
xlat
inc
xor
adc
sub
fs
inc
std
push
jae
fnsave
mov
pop
popf
or
jbe
and
push
rorb
mov
and
clc
sbb
clc
imulb
hlt
cmp
jp
scas
adc
jnp
ret
mov
enter
xchg
arpl
fcmovbe
inc
cmp
jb
push
cmpsb
mov
cmp
xchg
in
xor
xchg
jle
pop
pop
not
ficomps
insl
xor
gs
idivl
mov
sbb
xchg
popa
push
jno
push
jbe
xchg
fsts
bound
xor
cmp
adc
cmp
pushf
lcall
in
inc
int3
push
jo
cmc
xor
and
scas
inc
jle
and
jle
mov
repz
leave
mov
inc
pop
pushf
mull
xchg
add
daa
cmp
les
sub
add
sarb
dec
or
mov
popa
iret
lahf
push
mov
push
jne
fsubrs
pusha
mov
ds
xchg
add
pop
jo
dec
push
jb
loope
add
fdivrl
inc
outsb
hlt
shlb
aam
sbb
ljmp
sbb
mov
mov
and
mov
int
or
sub
jno
pop
data16
lcall
mov
sbb
aad
sahf
movsb
cwtl
dec
test
sbb
ret
mov
outsb
sbb
mov
adc
in
cmp
aas
inc
call
lret
or
loope
xchg
cmp
daa
push
into
dec
adc
cmpsl
xor
adc
outsl
sahf
xchg
out
loop
outsl
out
ret
adc
sub
add
rep
outsl
ret
cmc
pop
cmp
idiv
dec
lret
dec
scas
dec
in
push
repnz
sti
loopne
sbb
loopne
cmpsb
gs
cmp
testl
lcall
cli
icebp
les
dec
add
ret
and
mov
imul
xlat
js
mov
test
sbb
pop
xor
insl
dec
mov
popf
movsb
push
dec
bound
mov
mov
jbe
jecxz
iret
sahf
mov
popa
mov
cmpb
add
pop
dec
mov
fistpl
dec
inc
les
sub
in
push
aas
dec
mov
sbb
cmpsl
mov
rcrl
jo
negb
cld
std
lods
add
mov
shlb
or
cld
bound
mov
mov
test
dec
data16
push
mov
ss
mov
adc
movsl
ret
pop
adc
and
and
cmpsl
std
pop
bound
bound
mov
leave
xlat
pusha
and
ds
pop
add
rcr
dec
inc
sub
arpl
in
sub
push
ret
loopne
fisttpll
outsl
clc
sub
pop
push
ljmp
mov
stos
stc
jl
out
and
xor
bndldx
mov
push
cltd
punpckhbw
jo
shll
bound
out
xlat
test
and
xchg
sbb
lds
adc
fwait
dec
div
push
jbe
incl
pop
cs
call
mov
shll
in
in
pop
movsb
xchg
int3
xor
mov
sbb
arpl
dec
ljmp
mov
pop
lock
dec
mov
out
push
mov
dec
mov
bound
les
xchg
subl
add
jae
int3
addr16
jecxz
jp
es
mov
stos
mov
stos
jnp
cli
cltd
jle
fs
or
xor
cmp
pop
out
inc
or
and
push
jp
popf
popf
xor
mov
jmp
pop
stos
nop
xchg
and
and
fnstcw
scas
push
mov
rcll
sub
ret
xchg
push
sbb
loop
sub
inc
inc
mov
push
loopne
inc
and
cld
scas
xchg
cmp
int3
jg
sbb
ss
inc
pop
xchg
rolb
and
cmc
push
push
movsb
adc
or
jp
push
jge
movsl
addr16
insb
aaa
aaa
iret
nop
adc
pop
jmp
add
jmp
mov
push
push
mov
xor
jl
sbb
and
stos
mov
insb
iret
adc
incb
pop
push
cmpsb
sub
in
jl
mov
xchg
or
mov
push
xor
xchg
sub
addr16
cmp
ds
and
sarb
lahf
xor
pop
les
imul
dec
mov
add
pop
mov
scas
stos
mov
dec
scas
iret
loope
pop
outsl
fsubl
and
icebp
and
outsb
push
push
inc
adc
scas
scas
mov
dec
inc
cmpb
in
xchg
movsb
pop
and
xchg
mov
loope
js
and
cltd
cmp
pop
in
pop
lcall
inc
mov
popf
sbb
inc
sahf
inc
lods
and
or
jg
shll
inc
adc
adc
xchg
jmp
mov
cli
mov
or
mov
add
cmp
xchg
fs
sub
pop
cmc
inc
adc
xor
pop
fsubrs
sub
loop
gs
stc
jns
cmp
dec
mov
sub
jno
imul
mov
cmp
out
ss
jl
and
and
add
sti
add
inc
gs
sub
xchg
scas
dec
pop
popf
dec
lds
pop
mov
les
inc
sub
jge
cmp
jae
sahf
mov
mov
repz
xchg
pushf
xor
stos
jmp
add
aad
std
nop
push
aaa
and
into
cwtl
inc
movsb
int
aad
je
jle
jecxz
stos
cmp
roll
call
in
ret
and
adc
jnp
dec
jne
fcmovne
arpl
pop
nop
cwtl
mov
jmp
inc
mov
pushf
aas
jmp
filds
and
and
shll
inc
negb
add
dec
push
mov
movsb
push
mov
add
cmp
outsb
mov
mov
mov
pushf
fdiv
sub
aaa
das
adc
mov
mov
jns
je
scas
jns
es
dec
pop
jle
cld
test
mov
cmp
lods
jp
mov
in
daa
mov
inc
mull
fldenv
pop
inc
mov
shlb
lock
push
sbb
lods
scas
arpl
jo
mov
push
push
insb
ljmp
pop
cmp
add
xchg
and
popf
jg
vmwrite
inc
cltd
inc
in
xor
std
mov
or
push
dec
push
jp
test
mov
xchg
dec
sbb
jecxz
rcrl
jae
rorb
sub
sbb
adc
jne
in
pushl
stc
mov
cld
and
in
jns
xchg
sbb
dec
mov
push
mov
pop
fsubrs
ja
or
dec
fldl
mov
into
leave
adc
or
jne
int
mov
dec
shr
mov
push
jns
jecxz
xchg
dec
neg
xorl
out
pop
fwait
sub
outsb
jle
addr16
jmp
jp
in
mov
aas
in
insb
jne
cmp
fwait
jle
repnz
pusha
pusha
insb
or
xchg
inc
out
roll
shlb
mov
popf
pop
push
sarb
jns
stos
add
xlat
and
jle
xchg
dec
scas
orl
adc
iret
jo
std
ret
pop
hlt
jl
hlt
sub
xchg
inc
inc
inc
push
int3
or
push
push
lock
movsb
adc
and
dec
xchg
xchg
fsub
int3
push
pop
pop
gs
push
fsubp
pop
scas
lds
pop
pop
mov
dec
notb
movsb
pushf
in
push
cmovbe
jge
sbb
sbb
pop
rorl
cli
add
add
pop
jl,pt
and
push
pop
push
ss
pop
cmp
cwtl
pop
add
and
push
pop
push
pop
inc
jbe
xor
arpl
enter
daa
cld
sub
cmp
fisubrl
mov
and
jle,pt
inc
movsl
mov
and
inc
mov
push
sbb
movl
mov
dec
pop
test
xor
out
mov
cmc
loope
dec
jo
adc
sub
stos
outsb
mov
ret
mov
test
aas
adc
sahf
sbb
pop
loopne
mov
push
in
loope
mov
rolb
test
dec
lock
jg
sahf
ljmp
addb
test
add
mov
xchg
jo
mov
andl
dec
ss
mov
jno
lods
fdivs
push
cld
lret
sub
and
or
and
push
add
cmc
or
xlat
xor
in
fmull
cmp
mov
xor
dec
xor
jmp
fsub
fildl
fdivr
scas
dec
push
in
sub
sti
ds
es
gs
outsl
pop
pop
mov
pusha
bound
and
les
adc
je
ficoml
out
gs
xlat
fstl
sub
lret
fstpt
jmp
xchg
test
xor
jmp
nop
loope
sbb
or
mov
sbb
rcr
in
jecxz
lret
cmpsl
mov
adc
adc
pop
arpl
cmpsb
adc
inc
leave
dec
pusha
mov
xor
inc
shlb
jecxz
test
lahf
movsl
jb
lcall
loop
sti
shll
fnsave
std
cli
out
cwtl
add
cmp
repz
adcl
movsl
mov
mov
test
pop
das
hlt
mov
add
inc
movsb
adc
cmp
and
insl
push
push
cmp
cmpsl
sti
das
mov
adc
mov
xor
mov
dec
jg
mov
fs
sub
sub
in
sti
cmp
push
outsl
lock
fstl
pop
add
stc
cmp
mov
sbb
dec
stos
xlat
ret
jmp
jl
sbb
cs
psubusb
mov
fsubrl
js
push
outsl
push
mov
in
inc
dec
mov
fstps
sbb
sahf
lea
rcrb
mov
sbb
fdivrp
dec
xchg
inc
xor
pop
or
cmp
sub
mov
add
mov
xchg
sbb
mov
in
inc
pop
rcll
and
cmp
hlt
pop
jne
xadd
lret
push
mov
jns
clc
aad
pop
xchg
enter
sub
add
imul
out
mov
divl
jnp
pop
mov
in
cmp
pusha
sti
mov
fisttps
gs
sbb
dec
jmp
push
sbb
jae
ret
add
push
popf
subl
and
xchg
aaa
jnp
xor
mov
scas
in
or
adc
test
inc
mov
sub
hlt
js
mov
sti
push
cli
inc
inc
xchg
mov
push
and
xchg
fcmovbe
fwait
in
xchg
jmp
bndldx
mov
pushf
out
adc
daa
js
push
sti
insb
repnz
lret
xor
mov
shlb
shll
xchg
fstpt
outsb
ja
rorb
aaa
dec
cmpsb
insb
or
rclb
jl
movsl
pop
dec
cmp
mov
jo
jno
scas
jecxz
dec
and
cwtl
adc
fisubl
push
cmpsb
cs
leave
enter
daa
sti
xchg
lods
cmp
lcall
mov
test
mov
ret
lahf
jae
stos
push
out
and
cmpsl
fbstp
xor
xchg
mov
pop
stos
leave
call
pop
sub
inc
popf
loope
test
or
iret
add
mov
adc
gs
stc
and
inc
sbb
shrb
and
js
push
out
int
stos
lea
popl
call
push
lahf
push
aam
xor
sarb
lea
mov
sbb
xchg
jo
adc
mov
aad
sub
adc
dec
dec
cmp
jo
sub
sbb
dec
lret
mov
cmp
xlat
or
jne
ror
in
cmc
rcll
outsw
cmp
loop
in
jge
out
sbb
and
xchg
lods
and
xor
out
dec
cli
loop
jmp
in
xchg
jno
sti
in
sub
decb
xor
out
push
loopne
inc
pop
fstpt
adc
add
imul
cmp
inc
nopl
adc
call
imul
and
call
jmp
out
or
aad
fdivrl
dec
jg
fildl
popa
flds
push
je
mov
jecxz
das
fadd
std
dec
jmp
decb
loop
dec
pop
xor
xchg
xor
dec
dec
push
add
sub
mov
pop
test
or
aas
daa
sbb
jb
mov
and
sub
roll
in
std
mov
add
xchg
sub
inc
cld
jecxz
hlt
lret
lock
mov
mov
push
cmpsl
lock
das
rcrl
mov
xor
pushl
ret
int3
push
iret
lock
shll
test
cmpsl
cli
pop
or
icebp
out
sbb
push
mov
xor
mov
andl
rclb
subb
int
test
je
mov
jmp
push
xor
push
clc
ficoms
ljmp
pop
pop
xchg
or
stos
or
dec
xchg
dec
xchg
fs
push
push
icebp
enter
int
out
fcmovu
cltd
mov
xchg
xor
xor
mov
call
lods
inc
test
xchg
xchg
xchg
mov
sbb
xchg
inc
ror
adc
mov
xlat
rcl
pop
mov
add
dec
scas
xor
mov
out
sub
xchg
mov
sub
mov
dec
outsb
divb
out
dec
ret
clc
daa
inc
repnz
mov
mov
pop
jne
mov
mov
jg
out
stos
clc
sbb
mov
mov
xchg
loop
arpl
mov
imul
pop
xchg
jp
jg
mov
rcrl
dec
and
jnp
scas
jmp
pop
call
and
adc
bound
inc
or
inc
sub
test
ret
test
mov
mov
stc
mov
lods
in
mov
jbe
imul
mov
xchg
adc
adc
lds
insl
fadd
push
pop
fistps
mov
hlt
ret
inc
std
arpl
pop
jmp
dec
inc
push
or
dec
add
fimull
mov
or
xchg
ret
rcl
lds
sarl
aam
leave
daa
add
movsb
mov
mov
lods
cmpsb
mov
jge
test
mov
or
push
or
jl
std
in
test
sbb
cld
out
xor
lea
stos
and
mov
inc
xchg
sbb
xor
ret
enter
daa
cli
xchg
jno
jg
sub
orl
repz
les
movsl
aad
pop
and
inc
lahf
xchg
pop
jnp
rcl
test
mov
xor
sub
pop
rol
mov
jl
cmp
insb
and
push
cwtl
mul
shrb
fcmovu
data16
mov
outsb
sub
adc
inc
fidivl
data16
cmp
fcompl
push
call
cmpsl
and
dec
or
int
test
sub
pop
sahf
pop
bound
fists
fidivrs
sbb
cmp
test
cmp
jg
int
mov
sahf
mov
sub
ss
cmpl
fwait
xor
lret
loop
cmp
mov
into
aam
inc
cmc
cwtl
outsl
inc
xor
outsl
sbb
push
loop
jle
stc
sahf
mov
dec
lcall
repnz
mov
or
jmp
loope
out
out
and
xor
inc
call
insb
mov
loopne
arpl
pop
cli
ss
movsl
push
imul
shl
pop
ljmp
loop
cmp
nop
sub
sub
or
or
stc
push
aad
popa
sub
xchg
lock
dec
fimuls
mov
jge
mov
imul
push
lea
cmp
or
popa
bnd
in
sub
in
inc
mov
fistpl
int
jns
movsb
inc
loopne
stos
inc
fbld
mov
jb
lods
js
arpl
addr16
stos
cmp
push
test
dec
std
dec
pop
sbbb
push
dec
mov
cmc
adc
push
cmp
lret
pop
dec
xor
mov
inc
fdiv
cmp
das
mov
ret
mov
in
jbe
aam
lods
add
aas
clc
es
sti
insl
and
push
xchg
cmpsl
stc
adc
ret
push
icebp
mov
and
mov
push
sarb
mov
mov
cmp
mov
adc
xorl
iret
mov
clc
sbb
xchg
mov
les
aad
pop
cmp
and
mov
cmp
stos
push
mov
cs
popa
cltd
add
inc
jecxz
jmp
dec
xor
dec
movsb
mov
jmp
mov
mov
xchg
jne
shll
mov
or
mov
fwait
push
jecxz
push
add
mov
add
jbe
decl
out
mov
in
xorl
push
rorl
adc
pushf
pop
or
fdivl
sbb
dec
mov
dec
inc
mov
cmpb
or
inc
movsb
out
jne
roll
sahf
fsubl
cmp
jns
or
pop
sbbl
pop
out
mov
sub
pop
loop
addr16
sbb
jp
pop
xchg
mov
rorl
mov
mov
jle
push
cmp
cli
shlb
mov
mov
in
mov
or
mov
push
xchg
iret
btcl
cltd
sbb
pop
sbb
test
imul
std
push
jne
add
mov
ret
adc
hlt
push
jno
arpl
movsl
or
imul
add
leave
push
and
rcr
cmp
fnsave
pop
repnz
shr
call
repnz
adc
xchg
cltd
movsb
cmp
mov
mov
sbb
and
fadds
repnz
xchg
mov
jl
sub
pop
mov
fbstp
and
call
cwtl
leave
and
aad
dec
push
scas
push
shlb
xor
xchg
in
sbb
enter
daa
stc
cld
jbe
sbb
jno,pt
mov
icebp
xor
cmp
ds
movsl
fsubrl
and
scas
fistps
xchg
mov
test
xchg
test
push
nop
pop
pop
stc
fwait
mov
pop
stos
cmpsl
mov
loope
lret
and
adc
cmp
lods
dec
xor
sbb
sbb
or
sbb
mov
mov
int
mov
pop
loope
pop
lcall
cmc
mov
sbb
sbb
mov
push
test
jbe
jg
or
mov
fnstcw
fs
sub
adc
lea
idivl
cmp
out
loop
lcall
rcl
push
cmp
lds
into
mov
pop
cmc
pop
lods
ret
pushf
dec
outsl
stc
mov
loop
inc
adc
push
cmp
adc
or
data16
lret
nopl
fdivs
cli
dec
int3
pop
xor
ljmp
mov
xchg
sub
sbb
xchg
adc
cmpsl
fcmovb
cmp
sub
arpl
cmp
pop
xlat
lcall
mov
fcoml
iret
cs
xchg
mov
add
nop
jb
outsl
dec
cmp
lds
fnstenv
lods
jecxz
ret
push
int
push
lea
arpl
loopne
push
adc
add
and
fisttpl
lds
xor
aas
gs
dec
dec
fidivrl
sub
xorl
std
out
in
push
cwtl
xor
out
mov
add
sbbl
xchg
lret
into
ret
rcrb
mov
fcomi
xchg
shlb
lods
cld
mov
mov
mov
ret
ljmp
insl
or
jl
jnp
add
mov
and
xchg
fisubrl
es
idivl
pusha
outsl
scas
mov
rcrl
sub
popf
imul
insl
push
fisttpll
int3
clc
push
rcll
sbb
ljmp
or
stos
movsb
jmp
jae
repnz
push
or
fldl
adc
cmp
dec
mov
out
or
icebp
outsl
mov
xchg
mov
nop
sarl
movsl
or
insl
ret
enter
push
push
add
loope
add
xor
or
test
in
sub
xchg
push
jp
mov
int
mov
cmp
rcll
dec
test
orb
mov
mov
sub
jne
xor
mov
add
shlb
cltd
loope
xor
movsb
xchg
js
pop
subl
sahf
sub
pop
lcall
ljmp
and
jnp
cmpsb
ss
scas
aam
add
fildll
loop
jmp
aas
mov
inc
push
dec
xchg
mov
cmp
popa
stos
iret
ljmp
xor
pop
scas
or
in
adc
nop
mov
ret
push
pop
sarb
hlt
pop
repz
inc
dec
add
xchg
push
mov
push
ljmp
adc
pop
and
movsl
fisubrs
movsl
lds
pop
mov
repnz
sbbl
xchg
pop
pop
jbe
mov
jge
lret
xchg
cmp
or
outsl
sbb
jl
sub
dec
xchg
mov
ret
xor
inc
sub
scas
addb
in
loope
pushl
or
adc
cmpsb
mov
popf
in
lcall
scas
daa
clc
cmc
xchg
cmp
out
jno
mov
sub
mov
adc
or
and
loope
push
addr16
test
mov
adc
sbb
pop
and
js
call
xchg
arpl
add
subb
sti
out
inc
cmp
push
shl
scas
fimuls
push
fldenv
mov
push
and
dec
leave
les
lock
fmul
and
dec
sub
lret
pusha
xor
lcall
hlt
mov
mov
sbb
setle
xchg
outsb
les
jl
add
mov
and
jg
aam
cmp
mov
mov
pop
mov
shrl
cmp
cli
xchg
ret
into
lcall
xor
repz
pop
mov
stc
or
dec
adc
leave
jnp
testb
lods
fnstenv
ss
daa
out
out
push
cmpsb
cli
jnp
stos
xor
fs
sti
cli
sahf
jmp
gs
cmp
pop
cmp
jg
jl
stos
imul
xchg
popf
repz
rcll
mov
add
mov
out
sub
xor
xchg
addr16
mov
cs
cwtl
cmp
pushf
and
inc
add
fldpi
xchg
popa
je
xchg
mov
rcrb
push
rep
pop
inc
and
aaa
mov
lcall
fstpt
cld
push
inc
out
cld
add
xor
jb
mov
push
inc
and
stos
dec
shl
pop
xchg
ljmp
cwtl
lock
mov
mov
cmp
cld
cmp
lret
cmp
xchg
mov
clc
push
adc
das
jo
loopne
lods
mov
pop
lret
jo
jae
jns
test
jns
sbb
gs
jbe
inc
cmpsl
testl
xchg
insb
sbb
lods
xchg
sub
mov
fwait
add
and
loopne
jg
loopne
in
shrb
or
inc
test
adc
mov
into
jmp
fnsave
nop
test
mov
xchg
or
ljmp
rcrl
pop
stos
xchg
jle
out
ja
and
push
in
fmuls
push
clc
mov
sub
inc
xor
jl
mov
icebp
mov
mov
xchg
pop
xchg
ror
push
adc
testl
dec
test
add
cld
adc
dec
xchg
dec
xor
clc
int3
in
sub
xchg
cmpsb
xchg
mov
dec
sbb
jg
ret
ja
or
jmp
mov
sarl
insb
dec
or
pushl
add
mov
addr16
out
inc
imul
bound
idivl
mov
xchg
inc
dec
push
cmpl
ja
dec
clc
sbb
addr16
iret
add
sub
int3
insb
mov
mov
jle
pushl
or
cmp
push
cmp
and
inc
push
jae
add
push
or
int
sbb
stc
push
push
jns
ret
stos
inc
jno
and
out
sbb
xchg
imul
scas
jo
inc
push
imul
adc
iret
dec
dec
push
ret
enter
hlt
movsb
leave
push
arpl
add
sub
mov
lret
mov
xchg
loope
add
rcrl
pop
stc
ficoms
and
lds
test
shlb
xchg
mov
out
jg
mov
mov
jbe
push
dec
jge
mov
sbb
bound
dec
add
or
mov
jl
std
adc
push
jge
movsl
mov
xor
sahf
xchg
mov
pop
repnz
ja
dec
cmp
push
loopne
inc
addb
out
mov
daa
divl
cmp
push
or
adc
cmp
pushf
ds
cwtl
frstor
cs
adc
cmp
inc
test
lods
in
cmp
sub
and
pop
inc
mov
sub
outsl
push
or
pop
jle
fsubl
sub
mov
outsb
test
push
cmp
sarl
loopne
xor
sbb
add
mov
cmp
and
push
push
repz
fcmovne
mov
pusha
sub
lods
pop
ffreep
in
xor
clc
push
sti
push
daa
mov
sub
sahf
sbb
jnp
mov
test
sbb
add
push
sub
into
cmpsl
ljmp
push
ja
pop
mov
negl
popf
stos
lret
lret
roll
and
inc
mov
cmc
in
push
xchg
xor
or
push
movsl
loop
push
stc
ret
orb
test
cmp
jnp
xchg
sarb
out
scas
cli
scas
push
divl
xor
in
inc
mov
sti
test
inc
pcmpgtw
adc
pop
push
inc
enter
or
and
push
repz
rcll
mov
push
cmp
std
mov
sbb
pop
sub
push
pop
mov
xor
out
push
aad
dec
mov
sub
dec
sti
je
inc
push
cli
push
fldenv
cmp
inc
jecxz
addr16
shll
lea
sbb
fidivs
xchg
pop
std
mov
icebp
push
addr16
testl
inc
pop
bound
lcall
and
adc
dec
enter
cltd
sub
imulb
mov
shll
mov
jne
mov
sbb
ja
lret
lods
ljmp
mov
lea
inc
xchg
mov
cmp
es
or
jno
adc
sbb
mov
inc
jl
lods
cld
outsl
int
xor
or
and
jnp
mov
ljmp
sub
cld
scas
test
pushf
shlb
ds
jnp
lret
xchg
dec
ss
ljmp
push
pop
cmp
xlat
mov
xchg
addb
btr
mov
cmp
arpl
mov
xchg
loope
dec
mov
inc
sahf
xchg
ficoml
shll
pop
addr16
push
and
jmp
out
add
pop
inc
ljmp
jae
push
mov
or
push
pop
in
jge
xchg
cmc
fadds
mov
cmp
and
int
dec
push
roll
popf
mov
push
rcll
mov
fmull
out
es
bound
sti
repz
push
mov
int3
lret
mov
lock
push
jp
addr16
out
jne
enter
cltd
stos
cmp
xchg
jnp
scas
cld
jle
inc
inc
in
cli
in
pusha
add
test
xchg
cmp
inc
push
and
out
jl
iret
pop
mov
inc
into
jae
stc
cmpsb
pop
push
mov
stos
in
and
sub
xor
fldcw
mov
jnp
xchg
lods
fcmove
stos
sahf
cmp
pop
ds
hlt
out
xrelease
sbb
inc
push
xchg
arpl
aaa
inc
or
sahf
jp
ficoml
cs
pushf
and
pop
jg
jp
mov
xchg
lds
push
jnp
jb
xor
add
leave
add
xchg
movsb
fsubp
fstl
xchg
in
jbe
popa
cmpb
iret
sbb
addr16
aaa
or
adc
lods
pop
pushf
add
jl
cmpsb
stos
dec
fs
aas
xor
stc
or
scas
movsl
adc
or
cmp
jge
and
inc
inc
shlb
icebp
cmpsb
mov
cltd
mov
outsb
jo
daa
divb
cmp
jnp
sub
inc
xchg
cmp
lods
inc
movsl
icebp
xor
leave
into
or
push
je
push
or
fwait
das
add
pop
adc
sti
fs
outsb
test
pop
push
decb
lea
sub
aas
outsb
or
cld
adc
lods
aad
loop
lret
fstpt
sub
popf
mov
jnp
and
mov
int
test
neg
sbb
pop
shrl
lcall
decb
fisubrs
mov
jmp
sub
mov
lock
loope
rcll
sbb
cmpsl
dec
cmp
pop
ss
xlat
sahf
cmp
or
xor
cltd
fstpt
loope
or
movsb
pop
cmc
mov
mov
outsl
xchg
ret
dec
int3
lock
jp
rcll
dec
add
adc
xor
lods
cmpsl
and
mov
pop
pop
out
nop
mov
loope
insl
xor
aad
sti
pop
push
clc
add
adc
fsub
iret
xchg
sbbl
pop
adc
mov
sub
pop
push
ja
dec
xor
xchg
mov
and
pop
cmc
inc
xlat
push
enter
insb
mov
xchg
mov
cmp
aad
ds
aam
aad
mov
add
rorb
leave
mov
fstps
inc
je
call
inc
mov
cmp
hlt
rcrb
pop
movsb
mov
adc
pusha
dec
loop
mov
pop
add
mov
into
aas
inc
scas
fbstp
inc
sti
dec
aas
inc
addr16
cli
mov
nop
and
std
in
xchg
cwtl
pushw
mov
mov
rolb
lret
sbb
push
mov
shlb
cmpsb
adc
das
shlb
mov
mov
push
mov
ret
xchg
test
lods
insl
roll
insb
or
cmpsl
cmc
add
shl
sbb
nop
lods
xchg
mov
mov
jne
loopne
push
jo
pop
push
sti
dec
shlb
pushf
sub
mov
mov
add
push
fldl
pop
repnz
xchg
mulb
subb
call
hlt
sub
sbb
xchg
mov
push
lcall
add
and
cmp
xor
cli
jmp
jno
addr16
jp
dec
es
jle
xor
lcall
adc
xchg
or
xchg
fwait
ret
push
mov
dec
add
xor
xchg
decl
sub
or
and
outsb
repnz
stos
inc
mov
cmc
scas
or
aaa
adc
dec
sub
inc
in
mov
sub
dec
shlb
jne
aam
mov
gs
add
lock
xchg
fstps
out
jo
sub
dec
sub
jp
iret
mov
jo
mov
bound
cmp
xlat
test
jle
in
mov
pusha
popf
sbb
filds
mov
mov
jae
mov
xchg
popf
imul
push
notl
stos
sub
push
sbb
mov
imul
scas
or
stc
mov
jno
hlt
iret
or
sub
mov
sbb
jno
hlt
cmp
arpl
pop
inc
pop
mov
push
sbb
pop
notb
xlat
mov
ficoms
hlt
lds
iret
popa
rcrb
mov
lea
add
jp
cwtl
movsb
imul
jbe
out
jge
sub
aaa
movl
add
insl
mov
mov
rorl
mov
ljmp
scas
sbb
aas
cmc
cmp
out
inc
pop
add
inc
in
in
mov
enter
daa
cmc
clc
sti
cmp
inc
fnsave
adc
sub
inc
cltd
cmp
enter
std
and
lahf
sub
dec
insb
test
ret
movsl
fnsave
lret
bound
xchg
js
pop
inc
pop
cmpsl
in
push
fldcw
fdivrl
lods
ret
pop
lock
xchg
and
push
stos
test
arpl
or
in
push
lret
and
push
push
stc
xchg
or
div
sub
xchg
pop
lcall
jmp
sbb
jno
sahf
pop
mov
stos
cmpb
mov
add
fimuls
insb
jbe
adc
add
cmp
rorb
notl
xchg
and
xor
cmp
xchg
jb
cmpxchg
into
inc
inc
xor
xor
jb
outsl
jne
nop
loop
popa
arpl
xor
aas
pop
sbb
mov
scas
dec
lods
mov
pop
mov
fnstenv
adc
ds
dec
xchg
pop
int3
lods
sti
pop
idivb
sbb
ljmp
loope
imul
sub
repz
out
sbb
push
andb
loop
andb
inc
bnd
adc
call
fdivs
dec
mov
decb
je
nop
jecxz,pt
sbb
fsts
lea
repz
fcompl
enter
lret
dec
cmp
inc
adc
adc
mov
inc
les
loope
cmc
jb
imul
and
pop
loope
fildll
divb
pop
cwtl
and
mov
mov
rclb
cld
in
mov
mov
pop
add
xor
stos
fldcw
or
pop
mov
jg
pop
aam
add
ret
es
add
fmuls
out
cmpsl
hlt
dec
jl
xorl
jge
xchg
inc
sahf
mov
jl
adc
mov
mov
rorb
aam
in
in
cld
test
xchg
mov
adc
push
les
test
fdivrp
inc
or
xchg
pusha
xchg
ljmp
movsl
pop
xchg
arpl
pusha
aad
out
mov
mov
js
add
mov
aad
xor
mov
or
lea
jne
sbb
push
sbb
jns
aam
cltd
or
lea
icebp
add
push
xor
add
dec
adc
test
mov
or
rcll
movsb
xchg
pop
mov
ja,pn
fsubrs
dec
jne
insb
inc
jl
mov
inc
and
jne
rcl
mov
add
bound
and
or
add
jle
ret
sub
inc
outsb
inc
addr16
mov
call
insb
int
push
jnp
lds
in
rol
pusha
cmp
sbb
xchg
ficoms
std
inc
imul
jae
jnp
push
push
cli
movsb
popf
xchg
push
dec
mov
ss
imull
aaa
es
sbb
or
imul
scas
cltd
mov
adc
iret
push
aas
push
pop
lods
mov
hlt
test
adc
inc
pop
cmc
out
pop
cli
jbe
sub
addr16
fidivrl
pop
int3
ret
pop
fldl
ret
fdivrp
or
dec
shlb
mov
loopne
leave
icebp
adc
movsb
hlt
xor
xchg
in
jbe
fistps
sbb
or
or
add
dec
inc
cli
jbe
dec
or
cmp
scas
cmp
xchg
and
cmp
cmp
inc
jp
mov
xchg
inc
out
sub
cmpsb
ret
pushf
push
in
fwait
daa
pop
enter
daa
hlt
add
jno
rcr
sub
sbb
cmp
aaa
ds
mov
decl
and
icebp
cs
dec
push
inc
push
mov
cli
test
into
jg
xor
dec
lods
pop
mov
pop
pop
pop
out
sbb
imul
fsubrl
dec
sub
mov
adc
bound
mov
lods
in
lcall
and
pop
xchg
rorb
aas
mov
lcall
pop
mov
leave
daa
sahf
add
test
mov
fcmovb
push
jg
xchg
mov
adc
negl
out
mov
pusha
inc
cmp
sti
mov
lret
leave
rol
sbb
cmpsb
pop
or
aam
es
cmc
inc
mov
outsl
push
ss
je
psubw
ds
adc
sbb
xor
jo
add
out
jne
orl
inc
bound
in
adcb
ds
loopne
and
add
jae
adc
push
mov
les
into
repz
mov
xchg
sub
mov
cmp
mov
out
ret
pushf
xor
test
aad
mov
nop
mov
jle
inc
dec
dec
sbb
push
fdivl
cld
jecxz
pop
sahf
fdivl
lea
std
push
pop
adc
adc
test
dec
mov
sbb
push
inc
or
push
inc
addl
jb
sub
cltd
repnz
testl
xor
cwtl
fcompl
pop
mov
divl
cld
adc
loopne
stc
cwtl
testb
and
lock
push
iret
das
in
xor
ds
pushf
stos
xlat
ret
mov
ret
test
insl
mov
andl
pushf
mov
enter
cmp
enter
fstl
iret
push
pop
pop
mov
add
in
mov
mov
or
iret
cmp
clc
jnp
add
xchg
aam
popa
push
fdivr
stos
dec
jp
out
add
insb
xchg
push
cmp
push
push
jne
push
or
je
call
xor
leave
xchg
mov
std
or
hlt
in
into
test
aad
xchg
xchg
push
shrl
dec
push
or
addr16
and
and
push
ror
xor
push
or
sub
mov
fs
mov
pop
mov
imul
ja
and
dec
push
ds
mov
test
cwtl
xchg
fnsave
imul
mov
lods
aad
outsl
inc
cmp
inc
fwait
xlat
sub
inc
inc
andb
inc
jp
inc
cmp
cmp
xchg
jle
int3
mov
pusha
rcr
adc
inc
pop
pop
xchg
mov
inc
jmp
jbe
sbb
push
cmpl
popf
mov
and
sub
push
xchg
mov
dec
fmuls
imul
push
scas
cld
out
push
xchg
adc
in
xchg
iret
lods
or
fsubrs
test
lahf
outsb
hlt
shrb
arpl
cmc
inc
pop
rorl
push
sbb
xchg
mov
push
mov
imul
jmp
add
pusha
movsl
mov
xor
outsl
leave
push
push
sub
iret
jbe
dec
ljmp
jle
aaa
inc
pushf
orl
sbb
mov
push
xor
xor
or
cmp
and
insb
push
cmp
popf
fldl
xchg
inc
cmpsb
inc
leave
fwait
in
add
enter
daa
repz
jno
mov
sub
sarl
mov
test
mov
imul
xchg
test
fldcw
xor
call
jb
js
call
ret
lods
xchg
loope
xchg
jp
adc
push
sub
and
adc
cmp
inc
enter
arpl
shll
mov
xor
push
call
sub
dec
pop
fistpl
pop
lcall
mov
sbb
in
sahf
movsl
out
test
mov
jg
fidivrs
mov
fcmovnbe
mov
mov
adcb
adc
or
or
fmuls
fwait
notl
jno
loope
pop
rcrl
cmp
jo
or
sub
cmc
or
xor
aam
outsl
xor
xor
pop
sub
lahf
vunpcklps
jle
add
xchg
shll
dec
xchg
lods
pop
aaa
mov
out
dec
pop
cli
jp
mov
mov
fwait
in
in
xor
sti
gs
es
popa
clc
fwait
sub
cmp
rorl
imul
fisubs
mov
jecxz
sbb
enter
adc
xchg
sub
loope
mov
ficomps
and
scas
xchg
data16
imulb
xchg
pop
int
ja
lds
sarb
fsin
push
mov
jecxz
fistpll
and
inc
call
ficoml
or
leave
loope
adc
scas
dec
mov
jmp
sbb
inc
pushf
ds
pop
insl
push
jb
push
fmull
cmovne
mov
std
flds
cwtl
xchg
add
mov
and
cmp
mov
adc
shl
lock
xchg
das
lret
negb
mov
in
rorb
movsl
mov
es
push
insl
jbe
jmp
cmpsl
repnz
mov
lahf
outsl
mov
mov
dec
mov
and
out
ss
jnp
movsb
shr
jno
sub
insb
rolb
inc
push
dec
movsb
jb
mul
je
mov
xchg
inc
fwait
jecxz
add
push
popa
jg
push
pop
jmp
jecxz
out
data16
pushf
push
push
sub
imul
xchg
mov
mov
add
repnz
pop
sbb
xchg
inc
adc
data16
and
or
adc
fwait
dec
cmp
add
xorl
out
test
push
lock
or
setg
sub
mov
ja
hlt
scas
dec
pop
call
sub
out
in
and
mov
jne
cld
xorb
xchg
andb
cmc
jns
xchg
cmp
testb
pop
lahf
sub
cmp
icebp
addr16
xchg
sarl
or
mov
sarl
mov
loope
in
mov
fidivrl
stc
ret
addr16
jmp
sbb
push
push
fldt
popf
loopne
mov
mov
cs
sbbl
sbb
movsb
je
pop
repnz
into
mov
jns
es
ret
ficomps
sub
aaa
arpl
and
dec
push
lcall
xchg
clc
lret
in
int3
cwtl
jns
pop
cmp
jecxz
aam
jae
test
pop
pop
xacquire
leave
fisttps
fistl
leave
fidivs
cs
jge
mov
aaa
add
sti
or
out
mov
jno
rorl
repz
adc
add
aas
mov
jo
mov
cwtl
and
pop
cmp
adcl
jl
leave
imul
daa
repnz
cmp
addl
mov
fidivrs
inc
cmp
mov
leave
movsl
or
gs
push
pop
mov
lret
add
das
aam
aaa
cmp
stos
cli
pop
pop
or
or
fs
loope,pt
xor
fdivrl
inc
out
cwtl
or
inc
test
fs
pop
sub
nop
dec
push
sbb
stos
push
mov
shlb
xchg
leave
push
add
mov
repnz
pop
inc
mov
push
scas
cmp
addr16
enter
mov
mov
lea
cmp
mov
xchg
into
mov
fs
nop
cmc
ss
call
dec
fadds
adc
not
int
lret
inc
cmc
inc
or
popf
pop
or
into
in
lret
icebp
cmc
rolb
xor
shrb
mov
sar
push
lock
adc
cmp
add
dec
data16
subl
roll
cli
lods
lock
popa
or
js
adc
in
incb
loopne,pn
inc
xchg
cmpsl
js
outsb
fsubl
imul
mov
repz
xchg
mov
jae
cmp
lcall
cmp
dec
mov
mov
sub
adc
aad
fwait
push
nop
outsl
dec
iret
dec
inc
mov
fnstenv
andl
loop
adc
call
pop
xchg
or
mov
or
gs
jns
pop
xchg
addb
dec
push
aas
mov
pop
mov
and
mov
idivb
std
adc
cwtl
push
jge
mov
jbe
mov
or
jnp
or
data16
xlat
jge
mov
jecxz
lock
loopne
stos
mov
mov
aam
hlt
dec
ret
rcll
mov
insl
pop
mov
push
cmpsl
icebp
cmp
mov
jbe
imul
loopne
insl
cmpl
pop
lcall
sub
mov
dec
mov
mov
repz
xchg
pushf
xchg
cmp
ljmp
gs
xchg
cmp
jae
leave
mov
xchg
jecxz
movsl
push
push
dec
mov
add
xor
hlt
out
mov
add
dec
ret
test
sbb
xchg
jmp
rcr
fwait
inc
or
xchg
inc
fwait
jle
movsl
push
sbb
add
mov
movsl
shlb
sbb
in
add
cmpsl
mov
shl
mov
loope
lds
dec
dec
dec
push
mov
mov
xchg
test
lods
jne
daa
xchg
mov
push
ret
pop
xor
out
jns
add
add
dec
dec
xchg
shrb
mov
addr16
dec
mov
mov
loope
insb
push
nop
push
insb
fidivrs
ljmp
or
adc
adcl
incl
int3
jae
pop
repnz
sahf
sarb
and
in
stos
hlt
pop
out
jl
aaa
sbb
add
and
push
adc
iret
add
test
ret
mov
pop
push
hlt
data16
arpl
jmp
or
sahf
xchg
xchg
inc
sbb
push
dec
adc
int3
xorl
push
outsl
fsubp
test
lds
nop
rol
pop
mov
push
aas
push
movsb
xchg
cwtl
sub
je
or
and
push
int
sbb
add
add
fstpt
scas
dec
rcrl
idiv
or
rcrb
jmp
dec
popa
push
sbb
cs
fwait
xor
hlt
in
push
stos
or
push
mov
sbb
mov
addr16
fistps
cmp
add
incl
lods
and
cmp
lahf
test
and
test
out
add
mov
pop
xor
or
push
dec
inc
loope
hlt
add
imul
lock
sti
repz
repz
pop
mov
out
jmp
aas
test
mov
movsb
cld
and
addr16
stos
pop
pop
inc
lcall
and
pushw
sahf
jmp
cmpsl
test
and
aad
or
aam
add
push
adc
pop
cs
mov
arpl
mov
rorl
mov
into
iret
aaa
mov
xchg
mov
pop
outsl
icebp
orl
stc
or
inc
movl
lea
inc
mov
in
cli
loopne
int
cmp
cli
in
ret
in
ljmp
or
sub
fst
pop
adc
lahf
adc
and
ds
xchg
loopne
repz
stc
pop
xchg
jg
insb
sbb
jne,pt
xlat
xchg
decl
scas
pop
mov
pop
adc
jmp
jp
je,pn
push
nop
dec
push
dec
dec
xor
jbe
fldcw
je
jp
jecxz
mov
in
mov
pop
pop
mov
pop
das
inc
inc
adc
aas
xchg
dec
jns
movsb
fildl
into
in
xor
insb
inc
lahf
jge
inc
shrb
aas
pop
stos
fnstenv
cmovs
jbe
and
std
rcrw
xor
idivb
andb
mov
mov
sub
or
xchg
push
std
lret
inc
push
bound
imul
das
mov
mov
std
xchg
ds
call
fldcw
adc
cmpsl
lock
fs
dec
shl
jle
inc
mov
nop
inc
pop
and
sbb
cmp
xchg
jns
sub
jl
test
mov
jg
push
shrb
mov
xchg
ret
ljmp
pop
aas
test
sub
adc
loope
ret
add
jb
fisubrl
mov
mov
inc
insl
dec
sub
mov
xchg
mov
cmp
shll
jnp
or
in
sbb
mov
inc
dec
add
imul
nop
or
xchg
iret
push
inc
mov
jg
mov
pushf
gs
dec
inc
insb
incb
pop
cmpsl
mov
add
shll
mov
mov
inc
into
out
pusha
daa
cwtl
bound
das
jns
and
andl
mov
into
inc
imul
inc
sub
xor
cli
mov
mov
and
dec
jnp
and
jle
out
in
sub
pusha
movsb
adc
xchg
sub
fiaddl
lahf
jae
sub
push
popa
lods
pop
popf
cs
addr16
xor
push
stos
addr16
adc
xchg
movb
mov
push
scas
and
iret
or
mov
loopne
ret
pop
mov
mov
arpl
and
pop
push
cwtl
jno
fimull
js
int3
outsb
cmp
pop
cltd
inc
lods
fiadds
push
dec
rcr
idivl
sub
iret
leave
int
fsubl
jns
jbe
dec
clc
jge
out
loop
imul
aaa
cmp
or
mov
fidivs
sbb
dec
push
push
sub
jo
je
js
test
jl
push
cmp
pop
xchg
inc
sub
iret
push
imul
push
lcall
out
iret
jno
sub
sub
mov
cmp
push
pop
and
imul
enter
add
das
sub
aad
add
xor
pop
pop
fs
pop
loop
xor
scas
loope
mov
jbe
sub
xor
pop
cwtl
jno
into
in
push
ror
adc
mov
push
sbb
xorl
adc
int
mov
fdiv
aas
pop
pop
adc
lcall
decl
int
sahf
mov
test
jl
addb
jg
std
sti
mov
lcall
and
adcb
bound
push
inc
in
inc
in
lret
jbe
notl
and
mov
stc
and
je
or
mov
int3
cmc
pop
arpl
xor
jle
outsl
rorb
loop
pop
mov
adc
test
add
aas
data16
jecxz
adc
mov
mov
cli
adc
xor
xchg
fsubr
cs
sti
jb
dec
dec
adc
loopne
mov
pop
xor
mov
adc
mov
shll
pushf
pop
hlt
repz
repz
inc
xchg
sbb
jns
inc
xlat
ror
sub
stos
outsb
mov
fisttps
jmp
ds
xlat
divb
jg
fsts
xchg
pop
mov
fldenv
sti
jecxz
add
call
jg
call
push
daa
cmc
pop
loop
out
push
mov
dec
out
pop
xlat
stc
add
inc
in
fwait
fwait
aas
cld
dec
data16
cmp
dec
or
in
shrl
dec
testb
sbb
into
push
xor
popa
push
dec
subl
jb
mov
int
mov
xor
das
push
adc
adc
inc
ret
icebp
shlb
xchg
push
sub
dec
mov
dec
out
cmp
cmpb
lods
jmp
jb
mov
lahf
push
leave
mov
fcomps
ss
cli
push
test
xor
xchg
pop
lahf
clc
addr16
inc
xchg
add
ljmp
aas
pop
ljmp
out
xor
xchg
jno
adc
mov
repz
add
pop
aaa
cltd
adc
xor
push
jne
lret
or
or
push
test
mov
xchg
adc
roll
push
push
fmull
push
pusha
lea
test
fs
mov
mov
dec
std
insl
or
pushf
jecxz
call
andb
cwtl
das
insb
pop
push
lods
xor
dec
xor
push
inc
outsl
pop
cmp
and
and
mov
mov
inc
sub
aas
cmc
mov
jns
call
sbb
push
popa
iret
sub
sub
aas
fs
xchg
mov
insb
in
push
jnp
in
jle
fdivrs
pusha
aas
dec
ja
mov
out
jmp
mov
inc
bound
and
sbb
xchg
xchg
ficoml
loopne
stos
das
and
and
icebp
scas
mov
aad
mov
add
iret
inc
dec
inc
ret
mov
mov
dec
add
scas
and
in
or
xchg
mull
fidivrl
push
loop
pop
fidivrl
enter
sub
add
movsb
or
cli
fsubl
bnd
add
inc
xchg
shll
cmp
and
lods
jge
negb
sbb
mov
aaa
inc
ja
or
dec
add
cld
jl
outsl
push
dec
insl
mov
xor
jbe
gs
push
stc
ljmp
orl
scas
sub
mov
add
enter
daa
out
ljmp
adc
iret
cmp
inc
es
jmp
movsl
and
cmp
lahf
out
lock
rol
repnz
add
loopne
hlt
popa
xor
jg
das
js
jmp
sahf
push
ret
iret
out
fdivrl
mov
add
test
jmp
or
rcrb
and
mov
stos
and
adc
push
or
or
ret
push
inc
sub
inc
pop
xlat
mov
pop
push
mov
xchg
mov
sbb
hlt
clc
or
imul
popa
pop
cmpb
mov
ret
fs
cmp
add
cmp
xor
notl
sbb
sarl
rorb
test
jmp
cmc
and
mov
scas
sbb
push
stc
jnp
cmpsl
adc
pop
mov
xchg
cld
mov
clc
jbe
mov
cs
inc
mov
in
cltd
divb
and
in
in
xlat
gs
dec
and
or
sub
adc
stos
mov
or
les
and
xchg
add
cmp
xlat
adc
pop
sub
addr16
mov
mov
cmp
hlt
nop
add
fildl
ljmp
mov
cwtl
stos
jmp
cmpsl
lea
or
xor
imul
dec
sbb
fistpl
xchg
pop
jp
addb
push
inc
or
lret
aas
fwait
testl
and
in
sarl
xchg
mov
jne
imul
daa
or
inc
lret
out
xchg
lret
and
cmp
scas
sahf
jg
divl
lock
stos
das
inc
and
stos
dec
mov
xchg
fadds
sbb
es
pop
insl
adc
dec
inc
add
mov
jo
sti
mov
pop
mov
popf
stos
and
push
mov
testl
movaps
lods
outsb
mov
int
push
push
cmpl
pop
cmp
mov
inc
or
shrb
popa
fcmovnu
jecxz
xchg
mov
stos
cli
cs
out
repnz
xchg
mov
sub
in
add
call
xor
or
xchg
mov
imull
aas
xchg
out
sbb
movsl
aam
stos
adc
fwait
or
add
add
das
xor
add
das
mov
xor
shrb
jae
or
ss
mov
adc
and
shl
push
jle
mov
loopne
push
dec
pop
xchg
xchg
jne
add
mov
push
sub
movl
push
push
cmp
addl
aam
sbb
insb
mov
jae
dec
jg
jp
jae,pn
push
sbb
insb
dec
popf
xchg
imul
mov
add
pushf
cmpsl
mov
xchg
sarb
jmp
lods
fldt
push
out
and
jl
stos
mov
mov
icebp
stos
dec
iret
je
shrl
loopne
push
scas
jmp
mov
adc
pop
iret
mov
enter
leave
sub
arpl
cmc
arpl
jbe
xor
out
mov
xchg
push
mov
int3
inc
dec
or
stc
dec
fmulp
xchg
rol
movsl
dec
rclb
data16
leave
mov
repz
push
popa
cmp
jge
loope
sbb
xor
aaa
add
or
add
xchg
jl
mov
dec
fmull
xor
shrl
aas
and
adc
inc
inc
dec
movsl
mov
in
add
dec
scas
daa
out
or
cmp
fnstenv
xor
cmp
or
pushf
and
pop
lods
push
movsl
out
test
adc
push
mov
cwtl
pop
cmpsb
into
xchg
js
pop
repnz
pusha
imul
fsubrl
mov
repnz
outsb
and
rclb
test
sbb
pusha
sbb
ljmp
loop
xchg
push
mov
into
dec
and
push
out
mov
or
mov
subl
and
mov
aam
and
jl
lahf
jg
shrb
mov
dec
test
or
xchg
inc
fsubrs
cmp
out
sub
iret
cmp
lret
inc
rcll
cmp
lcall
js
pop
cmc
in
adc
mov
leave
loop
sub
xor
movsl
adc
addr16
add
mov
movsl
pop
fs
xor
xor
mov
or
adc
dec
jb
loopne
sub
mov
jmp
ret
repz
mov
mov
adc
xlat
dec
ljmp
dec
adc
jmp
adc
popf
dec
fwait
aad
sbb
dec
push
cld
inc
inc
shll
adc
iret
je
pop
cmp
inc
jo
out
shll
call
push
enter
and
adc
sbb
fisttpl
inc
or
insb
jl
and
inc
aas
cmp
dec
neg
adc
jl
stos
rorl
aad
testb
test
fildll
mov
movb
adc
jecxz
xchg
ja
mov
adc
lock
testl
aam
ja
ret
test
xchg
aaa
xchg
insl
stc
outsb
rorl
xor
mov
rorb
lods
mov
loopne
mov
lods
repz
pop
push
hlt
rorb
mov
sub
sub
mov
pop
mov
sbb
push
clc
fisttpll
jo
jg
cmp
inc
adc
repnz
jmp
xchg
push
jb
je
or
xlat
add
aam
cltd
jg
fwait
xor
adc
loope
setae
dec
pop
dec
push
test
lcall
push
push
imul
icebp
sub
sub
push
cmpsb
dec
fiaddl
or
out
add
jno
icebp
or
in
daa
imul
out
sbb
cmc
pop
ja
mov
call
mov
dec
addr16
ljmp
mov
addb
xor
int3
xchg
xor
out
cld
subl
jp
addr16
inc
les
jns
mov
leave
fs
mov
mov
jle
xchg
outsb
in
mov
pusha
jne
rcr
aaa
lret
inc
or
lret
cmc
pop
inc
mov
cmp
push
stos
cmc
stos
popf
mov
ret
out
test
stos
rcrb
fdivr
bound
xchg
clc
imul
xor
xor
cmp
dec
xchg
cmp
sub
xor
arpl
aad
inc
jo
stc
or
mov
stos
fisubl
mov
pop
es
xchg
fisubrs
lds
jbe
xor
fptan
and
jne
movsb
rorl
push
mov
xchg
jbe
pusha
mov
sbb
mov
aaa
fcmove
add
rcrl
dec
push
out
push
addl
and
xchg
fidivs
and
dec
jp
inc
repz
xlat
cmpsl
dec
cmpsb
pop
pop
daa
in
in
and
in
daa
in
mov
cmp
ljmp
xor
je
mov
mulb
cmp
lahf
and
cmp
test
sbb
cmp
pop
int
pop
js
popa
jle
lahf
push
ljmp
add
sub
adc
xor
adc
pop
pop
xchg
cmp
ret
sub
bound
sbb
mov
jns
and
inc
push
adc
int
xchg
xchg
sub
test
aad
in
lcall
cwtl
mov
aas
push
sbb
mov
ja
movl
push
inc
push
mov
sub
mov
adc
sbb
sbb
fsubrs
loop
lret
xor
call
jmp
or
outsl
pusha
cmc
mov
aas
xor
fdiv
outsl
insl
leave
outsb
loop
pop
ret
stc
jmp
lds
cwtd
or
mov
mov
cli
lods
and
xor
inc
sti
jg
add
xor
popf
loopne
sbb
pop
lea
adc
push
les
pusha
xchg
aaa
loopne
cmp
stos
adc
inc
xor
jp
mov
pushf
loopne
outsl
jmp
and
aad
mov
nop
mov
fimuls
je
inc
aam
xchg
je
mov
mov
lea
push
xor
aam
lods
pop
sti
jnp
adc
pop
dec
and
ficompl
push
xlat
inc
mov
lods
mov
fsts
dec
hlt
jns
outsb
hlt
and
sbb
rcll
or
std
ret
sub
cwtl
stc
mov
mov
xor
mov
nop
popl
cmp
and
mov
mov
sbb
das
add
jnp
mov
sub
ret
sahf
loop
es
push
insl
loopne
stos
dec
aas
scas
push
mov
test
sahf
out
or
stos
and
mov
push
shl
clc
cmp
movsl
dec
jb
mov
sub
fucom
je
clc
sbb
mov
pop
popa
or
cmp
fsubrs
mov
push
adc
add
fucom
cltd
mov
loope
imul
clc
add
dec
dec
test
imul
adc
aas
sbb
rorl
and
dec
sbb
mov
jmp
fimuls
in
ret
or
pop
mov
mov
lods
ja
cmpsb
adc
or
sub
mov
or
jne
fldenv
out
fdivl
lds
adc
outsb
loop
fidivl
sub
push
pop
dec
addr16
mov
mov
pushf
call
jnp
ret
inc
fs
push
enter
jbe
fistps
pop
xchg
jbe
jmp
ret
rcl
jae
sbb
popf
lret
mov
cs
das
and
cmpsb
push
sbb
mov
imul
push
js
lds
and
iret
pusha
mov
ret
lods
pop
fs
hlt
frstor
cmp
xchg
fimuls
add
mov
adc
sbb
arpl
adc
sti
rorb
mov
js
jge
test
jle
push
decl
pop
jbe
stc
ja
xchg
bound
lock
add
adc
jl
ret
cmovnp
hlt
nop
xor
xchg
jne
hlt
jge
and
jo
cmp
sbbl
data16
pop
cmpsb
js
cmp
push
in
fnstcw
mov
pop
jno
lret
sub
xchg
sarl
jecxz
cmpl
sub
mov
xlat
sahf
add
dec
ret
jo
and
ss
and
xor
in
nop
cmp
enter
sti
and
ficoms
push
xor
loope
loopne
fadd
sub
sub
push
inc
outsb
ljmp
sarb
inc
sub
cwtl
rcrl
add
clc
sbb
adc
negb
int
pop
mov
jmp
pop
push
ficoms
loope
push
push
mov
into
imul
sbb
push
test
scas
pusha
xorb
pop
mov
sbb
fs
lfs
xor
xorb
bound
inc
xor
xor
lret
pop
sarl
cmp
adc
div
xor
ds
and
jp
insl
xor
and
outsl
dec
movsl
and
mov
ja
add
inc
imull
fwait
daa
jp
lret
rclb
fistpll
xor
fwait
in
fidivrl
movsb
push
out
gs
in
ljmp
movsb
push
adc
sbb
mov
enter
fs
pop
or
cmp
popa
xlat
int
loopne
in
in
mov
mov
call
arpl
aad
scas
push
nop
xchg
sahf
sbb
icebp
roll
sbb
loopne
je
aas
mov
hlt
in
repnz
call
push
jns
pop
scas
mov
adc
lods
mov
in
out
or
pop
adc
inc
jmp
aas
js
pop
jb
out
pop
dec
in
movsb
and
xor
xchg
testb
mov
push
pop
cwtl
mov
xchg
mov
jnp
mov
ret
roll
lret
sti
lret
jno
and
dec
adc
xor
das
in
cltd
mov
out
mov
ret
sub
call
inc
dec
cmp
cmpsl
jmp
nop
mov
addb
lods
xchg
std
sarl
aas
dec
cmpsb
and
and
dec
pop
push
ficompl
sub
test
lahf
lods
icebp
fldl
push
loope
push
inc
test
ljmp
lock
xchg
dec
call
out
sbb
sbb
mov
xchg
or
cmp
mov
mov
xchg
cmp
xchg
lret
sub
or
push
cmp
push
in
fistpll
les
sbb
aas
xor
dec
data16
mov
xchg
pop
fistps
ljmp
jo
inc
mov
dec
add
mov
sub
xor
mov
minps
mov
lock
jl
jle
out
mov
out
addr16
sub
sbb
popa
addr16
push
pop
jp
sub
insb
nop
push
cmp
jle
and
out
stos
add
cmp
inc
jmp
into
dec
or
aas
insl
push
xor
mov
insl
cmp
cmpsb
xchg
add
sbb
push
xchg
imul
sub
shll
lcall
iret
mov
lret
fwait
stc
fs
sub
arpl
xchg
inc
inc
jbe
inc
or
subb
fiaddl
xlat
mov
int3
add
dec
mov
mov
sub
test
dec
shlb
mov
lret
sarb
and
mov
push
dec
jbe
pop
xchg
jge
stc
aad
adc
aaa
cmp
inc
sti
add
jnp
jl
xchg
dec
sub
push
dec
fwait
sysexit
mov
shlb
jbe
scas
rcrl
pop
inc
loope
dec
mov
addr16
cmc
js
cmpsb
pop
jge
in
mov
and
daa
jmp
and
out
shlb
enter
fdivrl
shrl
ja
mov
jb
repz
arpl
shrb
xor
push
xor
and
add
jecxz
icebp
sub
push
sbb
loope
jnp
fsubrl
shrb
mov
stos
mov
xor
insl
rclb
rclb
sbb
pop
mov
push
sub
sbb
lcall
lods
mov
xor
sbb
sbb
test
xlat
clc
jg
sub
mov
ds
mov
cmpsl
adc
mov
mov
and
and
xor
or
cmp
jns
in
push
das
pop
cmp
or
gs
into
and
jp
inc
add
cltd
jg
outsl
sub
pop
stc
push
or
sub
fsubl
ljmp
xchg
imul
adc
enter
sahf
sti
fldl
ret
gs
aas
sub
pop
lret
fmul
adc
xchg
outsb
imul
lods
inc
xchg
adc
xor
cmp
jns
sub
xor
or
cs
cli
mov
nop
insb
sbb
dec
outsl
jno
inc
cli
inc
mov
sbb
fninit
jb
out
negl
xor
cmp
xchg
stos
pop
popa
dec
clc
adc
test
pop
push
push
repnz
leave
fiadds
pop
ret
cmc
push
inc
dec
pop
or
and
mov
push
notb
sbb
adc
cwtl
outsl
add
dec
xchg
pushf
xchg
push
cld
xchg
stc
and
loopne
fimuls
adc
lock
ret
lea
and
outsl
mov
mov
imul
and
insl
scas
iret
sbb
imul
mov
push
push
in
lods
add
imul
movb
mov
shll
rolb
or
test
cwtl
and
mov
sar
mov
xor
popa
aaa
mov
pop
inc
lea
jle
int
aam
outsb
push
add
lret
add
mov
cltd
and
or
sub
mov
sbb
scas
dec
xchg
add
jl
aad
adc
hlt
sbb
sbb
cmp
fcompl
xchg
jl
dec
mov
jg
fimuls
fs
and
or
push
in
repz
inc
or
adc
mov
orb
jo
bound
ds
test
pushf
ljmp
inc
mov
je
out
lcall
jns
pop
adcl
lret
or
pusha
or
sub
jp
xchg
xor
sti
inc
in
jnp
sub
in
outsb
dec
pusha
inc
lahf
arpl
pop
pop
fs
sbb
mov
inc
fsts
lcall
push
or
mov
fnstcw
inc
shll
outsl
jg
mov
add
scas
ja
scas
push
push
addr16
iret
push
mov
ret
stos
pop
shlb
pop
arpl
fildl
or
sti
xchg
fidivrl
fdivp
int3
lock
pop
pop
mov
imul
stos
sub
or
fld
cmpl
xchg
leave
xchg
pop
inc
movsb
bound
push
popf
jmp
jbe
mov
in
scas
sbb
sti
xchg
cld
mov
lods
add
test
dec
cwtl
ds
xor
cmp
aas
pop
and
inc
push
cmp
les
push
movsl
mov
scas
cmpsb
loope
out
mov
xchg
jecxz
ljmp
jno
in
add
cmp
and
hlt
sbb
xor
or
xor
test
cmp
clc
xor
enter
push
jl
sub
adcl
scas
repz
cmp
sub
and
adc
lock
lcall
clc
pushf
sbb
imul
es
and
loopne
push
sbb
sub
lcall
push
mov
push
sbb
dec
sub
push
and
sub
bound
cmpsl
mov
adc
xchg
add
sarl
sbb
in
pop
cmp
fildl
ss
or
lods
jb
cmp
xlat
lret
cmp
cmc
or
xor
out
jae
or
loop
aaa
dec
stc
push
push
out
adc
movb
sbb
stos
lods
jnp
xchg
mov
pusha
cmp
sbb
sti
mov
pushf
push
mov
loopne
push
ret
sbb
adc
adc
lods
lds
fidivrs
repz
aam
imul
dec
pop
daa
sub
cmp
test
call
jmp
ljmp
sub
stc
nop
inc
scas
adc
cmc
lods
inc
or
cmp
je
je
jecxz
js
cli
leave
mov
shrb
mov
cmp
adc
dec
out
cmp
dec
mov
test
and
inc
jb
aas
mov
mov
dec
rorl
and
fs
notb
fs
sub
inc
mov
pushf
repz
inc
icebp
xorl
sti
sahf
lret
dec
mov
mov
xorl
das
mov
mov
paddq
push
int3
insl
xchg
bound
cmpsl
jmp
inc
ret
dec
leave
lods
imul
mov
test
andb
imul
rcr
rcrb
ja
mov
test
pusha
lock
xor
dec
fstl
scas
clc
leave
les
test
ljmp
enter
fisubrl
loope
fsts
enter
xchg
add
xor
xor
andb
and
incl
test
push
xchg
xchg
popa
mov
or
jbe
fwait
notb
xlat
add
jbe
pop
jge
add
cmp
jle
in
mov
mov
in
mov
mov
jbe
dec
out
adc
inc
xlat
mov
or
dec
jbe
data16
lea
mov
out
sub
jns
or
xchg
xor
clc
mov
out
out
mov
mov
addr16
jnp
jp
scas
cs
lock
inc
cmpsl
jnp
adcl
xorl
push
push
pusha
loope
add
jns
mov
out
fs
jmp
in
xor
push
or
mov
pusha
popf
aas
push
xor
push
jmp
fisubrs
xor
mov
imul
ficoml
pop
push
adc
cmp
ret
aam
or
nop
hlt
mov
data16
inc
jl
dec
or
jbe
mov
fisubrl
cmc
xchg
pop
inc
mov
pop
loop
sbb
adc
lds
out
ljmp
xchg
movsb
in
les
in
inc
fnsave
jge
jge
rcrb
mov
aaa
mov
jbe
add
xchg
dec
jl
mov
push
pextrw
add
scas
xchg
es
and
mov
inc
adc
cmpsb
fs
in
mov
out
enter
daa
jmp
inc
jno,pt
ss
jmp
cmp
or
movsl
dec
test
mov
mov
xchg
subb
xchg
xor
addr16
xchg
imul
pop
fwait
sbb
push
sti
leave
loope
sbb
sbb
popf
push
and
xchg
pop
adc
lret
push
stos
cmpb
or
mull
mov
mov
and
iret
out
int
sar
xor
mov
add
adcl
push
adc
sahf
add
test
mov
mov
mov
mulb
ret
and
cmp
xchg
std
testl
fisubl
or
dec
into
out
mov
iret
cwtl
mov
dec
jb
outsl
jmp
cmp
stc
lds
ret
test
add
dec
movsw
cltd
push
lods
bound
loope
mov
cli
js
in
xor
fisttpll
sbb
mov
mov
adc
scas
xchg
pop
or
adc
ret
jmp
jmp
pop
sbb
rcr
mov
xlat
mov
mov
mov
mov
loope
clc
or
cs
pushf
aad
out
nop
and
sub
daa
jns
and
xchg
je
or
jecxz
movsb
shufps
cmpsb
lea
add
call
shlb
pop
repnz
mov
sub
cmc
fstpt
sbb
and
xlat
leave
adc
xor
aas
push
aas
mov
fwait
sbb
dec
dec
mov
and
jp
rcll
jecxz
std
pop
pop
imul
cld
xchg
dec
or
rcrl
mov
mov
lock
out
das
sbbl
mov
push
jge
ret
ficompl
es
insl
jl
and
jae
cmpsl
call
call
add
adc
xlat
lcall
iret
mov
mov
jbe
sub
pop
push
test
sbbb
gs
rcll
outsb
fnstsw
clc
add
cli
xchg
mov
les
popa
gs
pop
xchg
addl
inc
add
xchg
bound
inc
push
mov
loopne
add
adc
xchg
das
mov
xor
push
xchg
jl
dec
popa
mov
xchg
push
sub
aam
stc
shr
test
sub
data16
and
fistpll
add
or
xor
lea
je
xchg
inc
das
mov
xor
mov
cmp
insl
in
fstps
mov
jp
adc
push
movsb
mov
jnp
out
pop
push
fbld
xor
jns
cmp
xchg
sub
sbbl
xchg
sub
or
or
jge
mov
push
jge
rcll
sbb
mov
jl
jno
arpl
sbb
fistps
das
cmp
inc
out
lods
jge
cmp
push
jns
and
cbtw
dec
mov
sub
test
sbb
test
imul
scas
cmp
mov
and
ret
add
hlt
or
mov
inc
dec
or
icebp
add
inc
nop
inc
ja
and
pop
lret
in
bound
ficomps
jecxz
shlb
adc
les
iret
leave
test
movsb
js
sbb
fdivl
jbe
out
jge
adc
pop
aaa
jp
add
negb
push
jl
int3
mov
jbe
mov
xor
repz
push
scas
jo
aaa
and
cmpsl
cmp
les
and
cmpsb
out
xchg
in
outsl
dec
jae
sub
fwait
daa
call
cmp
fsubrs
mov
cmp
fisubrs
and
out
shlb
push
xchg
ljmp
push
push
xorb
pusha
ret
dec
test
mov
fs
push
cli
mov
jo
adc
insb
sbb
sub
movsl
adc
cmpsb
popf
dec
adc
orb
sbb
add
mov
sbb
cmp
mov
and
fmulp
xchg
vmovaps
in
icebp
lcall
adc
mov
xchg
mov
test
add
insb
stos
mov
cmp
fmuls
jnp
jp
outsl
dec
pop
ss
fstpt
push
sub
testl
fadd
cmp
in
mov
mov
pushf
into
lret
cmc
xchg
jns
xor
cmp
loop
jbe
stc
jl
lret
xchg
sub
sbb
adc
stos
call
jl
xchg
gs
loop
mov
loopne
jecxz
pop
sub
jno
lcall
repz
mov
mov
push
cs
leave
stos
inc
sub
push
imul
cmp
aad
mov
dec
mov
mov
out
fstps
or
jmp
movb
ret
lea
fcmovnb
dec
or
adc
popf
push
dec
mov
aaa
rcrb
xor
aad
inc
lds
aas
hlt
add
out
in
dec
sar
and
jecxz
shl
inc
and
sbb
in
cwtl
mov
into
aad
out
xchg
outsl
andl
dec
lret
sub
add
mov
adc
das
pusha
dec
insl
mov
lret
aam
adc
ret
imul
xor
cmpsl
out
sbb
enter
push
lods
inc
ret
sub
lret
out
and
nop
subb
rcl
sti
rolb
sub
js
enter
mov
stos
cmp
aas
cltd
cmp
cmc
popf
lret
popa
jl
hlt
pop
inc
call
or
cmpsl
pop
add
xchg
aas
and
inc
out
xchg
pop
pop
out
cltd
leave
adc
xor
xor
mov
out
dec
enter
in
cs
sbb
test
mov
push
and
push
js
arpl
lods
xor
mov
seta
mov
mov
xchg
xchg
jl
mov
repnz
das
mov
ja
jmp
cmpsb
inc
daa
pop
jp
mov
jnp
dec
cmp
je
jp
fs
sbb
out
aaa
hlt
fisubl
push
je
pop
push
jb
repz
sub
imul
cmpsl
addr16
scas
sub
add
mov
fdivl
cmp
clc
jnp
addl
in
aad
pusha
pop
repz
mov
stos
xchg
xchg
lods
jmp
cli
jbe
jae
jg
push
cmp
test
outsb
sub
sbb
bound
es
ret
pop
or
scas
mov
js
adc
out
cmp
ret
insl
pop
ja
dec
hlt
push
into
dec
arpl
inc
daa
inc
adcb
push
lss
roll
jmp
mov
fwait
pop
inc
sbb
arpl
mov
xchg
jp
ret
xchg
pop
push
adc
movsb
add
or
cmp
cmpsb
jge
cmp
sbb
loop
aaa
cmp
mov
jmp
ds
jl
loopne
dec
in
iret
push
aad
inc
xor
dec
cwtl
cwtl
scas
dec
add
cmpsl
mov
add
inc
xor
cmpsb
push
mov
push
xchg
mov
and
daa
out
cmp
mov
cmpsb
jno
xor
sub
dec
or
dec
push
ds
lods
in
movsl
pop
pop
mull
fdivp
mov
push
mov
repz
add
outsb
int3
xor
cmp
or
les
push
in
out
push
scas
fndisi(8087
xchg
fcoml
ljmp
adc
and
jg
popa
push
adc
gs
divb
mov
pop
int
scas
sbb
sub
mov
imul
mov
sbbb
aaa
cmpb
and
xor
mov
iret
cwtl
mov
fbld
fistl
mov
mov
fmuls
cmp
inc
cmpsl
jecxz
jb
cmp
ss
into
lods
fimull
xor
sub
loop
jecxz
stc
xor
out
adc
fsubrl
add
xchg
stos
sbb
xor
mov
cli
faddp
loopne
sahf
in
xchg
in
icebp
cmp
sti
cltd
std
push
incb
jae
loopne
inc
inc
pop
inc
in
adc
adc
lcall
xchg
and
aaa
xlat
or
hlt
sub
xchg
loop
mov
xchg
outsl
cs
mov
nop
fcomp
and
lcall
xchg
adc
jecxz
enter
xchg
cmc
in
call
into
cmp
pop
sub
pop
xchg
dec
cmpsl
xor
fcmovnbe
xor
pop
xchg
shlb
inc
ljmp
int3
xchg
jb
in
dec
cmp
inc
and
mov
adc
pop
sahf
es
lods
fs
cwtl
pop
loopne
mov
lods
sub
clc
sahf
icebp
cld
aas
cli
loopne
pushf
es
mov
outsl
shl
xor
das
aas
cmp
mov
addl
mov
sub
jae
dec
jae
dec
and
aam
out
push
mov
mov
push
lods
lods
inc
pop
mov
out
shll
sub
rcl
iret
sub
iret
test
mov
jmp
pop
ss
jp
fstl
push
rolb
pop
in
and
out
or
cmp
xchg
and
mov
pop
out
add
out
mov
and
fisttps
cltd
test
js
xchg
repnz
sbb
pop
lret
rcll
aam
fwait
adc
push
sbb
hlt
add
pusha
jne
pop
pop
ljmp
xchg
jmp
xchg
in
outsl
mov
cmpb
sub
ja
jmp
testl
ljmp
pop
push
mov
ljmp
out
bound
cmpsl
das
xchg
mov
ret
out
out
loopne
sub
add
and
psadbw
aaa
sbb
cmpsl
xor
jnp
sub
pop
aaa
inc
in
push
pusha
mov
mov
push
xchg
push
scas
sahf
inc
add
clc
inc
push
jmp
popf
mov
sbb
test
shrb
jns
push
cmp
outsb
scas
add
push
and
iret
lcall
pop
scas
ret
popf
hlt
lahf
cmp
arpl
pushf
roll
inc
or
out
inc
inc
mov
cmp
pushf
mov
pop
outsl
jnp
fsubp
add
lds
ret
in
push
sarl
push
mov
jae
sahf
movsb
mov
aam
dec
jbe
adc
aad
mov
or
sub
enter
enter
xor
xor
test
repz
and
pusha
scas
cmp
mov
push
rcll
pop
inc
shrb
cmpsb
in
inc
push
in
cmp
and
daa
out
sarb
in
push
jno
call
jb
std
inc
mov
movsl
popa
pusha
and
push
lahf
incb
push
cmp
cli
cmp
loopne
xor
xor
pop
ficoms
mov
sbb
out
mov
sahf
xchg
ret
sub
subl
es
pop
inc
mov
rorb
ljmp
sub
mov
adc
pop
in
push
es
int
jl
sub
or
lcall
mov
sbb
xchg
in
sub
jg
mov
decb
xchg
mov
lock
lret
jl
fadd
and
fidivl
rorl
mov
or
ret
and
mov
outsl
xchg
jns
jle
ljmp
xchg
cs
loope
pop
loopne
mov
push
out
rcr
cli
adc
xor
stc
in
pop
pushf
lods
sti
dec
add
inc
cmpl
pop
xor
imul
cmpxchg
dec
lods
clc
cmp
or
sub
pusha
dec
pushf
lea
jmp
add
cs
inc
rcrl
dec
das
roll
add
fxch
lahf
xorl
js
push
add
lea
call
dec
in
xchg
pop
loopne
push
mov
sub
push
pop
xor
sbb
out
aas
xor
dec
scas
jp
and
mov
roll
sub
push
dec
mov
xlat
lar
mov
xchg
or
push
mov
xor
lock
idivl
das
push
xor
cmp
rcl
mov
and
xchg
cmp
insl
xor
shll
jle
jmp
lods
pop
sahf
test
aam
loopne
adc
and
jmp
adc
test
xlat
test
fcom
mov
push
leave
push
xor
add
icebp
push
daa
clc
mov
xchg
xchg
ja
pusha
ljmp
hlt
pop
cwtl
sub
repnz
insl
repnz
xchg
aaa
mov
popf
lar
sub
js
jmp
daa
stos
fs
xchg
pop
mov
jecxz
fwait
xchg
sti
cmpsb
shr
pop
inc
or
inc
ret
inc
enter
mov
add
mov
add
or
sub
xchg
xor
fbstp
push
xor
pop
movsl
cmp
ja
insl
cli
dec
mov
cmp
add
mov
mov
inc
jne
mov
mov
cmc
fildl
enter
shll
orl
out
mov
sub
sti
leave
mov
jp
and
mov
push
lahf
insb
adc
jnp
xchg
jo
cmp
dec
pusha
dec
in
fcomip
cmp
xchg
cmp
fldl2t
cmpl
adc
jmp
popf
fcmovnb
mov
in
loope
out
test
nop
pop
lock
jno
imul
mov
adc
mov
iret
stc
jp
ret
movsb
pop
in
and
ljmp
inc
mov
dec
push
or
adc
aas
int3
xchg
fiadds
inc
arpl
or
repnz
mov
and
jbe
fcmovu
jge
xor
shlb
mov
or
push
movsl
add
jo
add
dec
push
fwait
mov
jo
and
scas
or
push
sub
or
cmpsb
jo
xchg
in
and
xor
sbb
daa
in
add
sbb
jno
rcrl
dec
stc
push
cmp
loope
push
jo
lahf
sbb
sub
test
jae
fidivl
mov
sbbl
arpl
xchg
pop
xlat
push
xor
insl
add
pop
mov
mov
shlb
mov
xor
xchg
addb
fdivs
dec
test
sub
int
sub
fiadds
int
test
mov
push
mov
xor
sahf
mov
test
push
mov
xor
mov
cmpsl
fs
pop
adc
xor
out
cmp
cmpb
xchg
xor
mov
inc
ds
inc
jne
jae
mov
jmp
mov
outsl
gs
loop
pop
jo
mov
xorl
mov
data16
xor
js
jecxz
les
cli
inc
pushf
jle
dec
lea
in
rclb
sar
decb
lods
mov
loopne
dec
repnz
test
jb
jg
pop
les
out
push
xchg
mov
adc
xlat
xchg
mov
cmp
sbb
sbb
in
mov
sbb
pop
scas
flds
shrl
nop
mov
jecxz
cld
rol
or
in
ret
push
shr
pop
test
int3
and
pop
xchg
test
cli
dec
jge
xor
das
fiaddl
dec
xchg
inc
push
mulb
shrl
jb
jle
dec
es
and
sbb
ror
jp
std
sti
inc
rcrl
xchg
testb
xlat
dec
andl
jb
lret
jp
mov
mov
push
xchg
lock
lods
das
std
es
xchg
loopne
mov
adc
dec
xor
add
popf
cmc
dec
pop
ja
cmpsl
in
scas
mov
popa
jnp
lods
or
mov
xor
inc
and
popa
cmp
sub
mov
sub
push
test
dec
or
push
hlt
call
xor
xchg
mov
inc
ljmp
cmp
inc
push
push
stos
push
add
out
shrb
sub
push
and
cs
add
mov
inc
mov
sub
lods
dec
std
sti
adc
or
or
mov
jmp
or
mov
fwait
loope
aad
popa
loop
add
std
hlt
lcall
ror
or
xor
xchg
cmp
mov
ljmp
pusha
ficoms
out
sahf
dec
movsl
xchg
cwtl
inc
in
mov
mov
fsubl
jne
fisttps
mov
js
out
aam
adc
mov
outsb
xchg
push
and
out
mov
and
testb
inc
pop
pop
jp
ret
mov
mov
jge
in
jnp
rclb
sbb
lock
call
or
xchg
push
arpl
jmp
sbb
pushf
jae
mov
xor
pop
mov
push
outsl
and
and
pop
mov
scas
leave
in
push
mov
or
cld
mov
iret
pop
adc
rcrb
sub
xor
adc
inc
mov
cmc
push
mov
jbe
in
push
xchg
mov
push
dec
pop
int
xor
lds
xor
mov
push
leave
popa
test
movsb
movsb
lret
ja
xlat
jbe
adc
jge
pop
mov
das
lods
aaa
jbe
ss
dec
or
jl
adc
jge
jle
xchg
xor
pop
add
in
in
and
test
push
cmp
mov
cmpsb
repz
enter
daa
in
mov
jno
mov
push
cmp
cmpl
outsl
iret
mov
dec
sbb
jecxz
hlt
test
jle
xor
imul
sub
push
mov
mov
mov
ret
loope
test
fcompl
dec
jmp
outsb
add
outsl
adc
adc
data16
nop
cmp
sbbb
push
mov
or
push
sub
imul
pushf
xchg
loop
dec
cmp
lcall
orb
add
test
rcrl
orb
divl
mulb
adc
xor
cmp
ljmp
aaa
cld
fs
or
into
push
outsb
dec
cmc
mov
popf
xor
das
insb
outsl
inc
adc
loop
fs
stc
pop
mov
mov
outsl
fs
lods
in
fisttpll
ret
mov
add
in
xor
into
sti
cmpsb
pusha
xchg
outsb
outsl
mov
loopne
in
fistpl
aad
adc
inc
mov
out
les
in
and
xchg
popw
push
sbb
cmp
jl
sub
cld
pop
pushf
jecxz
inc
jmp
and
fcmovnbe
shrl
sahf
dec
or
jg
mov
aaa
stos
lods
je
icebp
fsub
fstpt
or
orb
movsl
out
dec
fst
pop
inc
pop
lea
data16
dec
push
rol
jnp
pop
inc
jp
leave
inc
xor
jb
jo
pop
jb
sbb
popf
mov
ljmp
mulb
pushf
out
mov
fnstenv
push
popa
clc
mov
pusha
in
shrb
jg
mov
iret
mov
loopne
lock
inc
das
fsubl
loope
sub
paddq
ret
movsl
lahf
int3
es
adc
xchg
cmpsl
jecxz
cmpsb
mov
cmp
pop
mov
push
mov
jo
cld
mov
ljmp
fisubrl
mov
jbe
push
mov
pop
fnstsw
outsl
sar
sub
cmc
xchg
cmc
pminsw
or
pop
out
ret
aas
jmp
lds
add
mov
add
push
xor
jle
mov
sub
addl
mov
xor
or
movsl
bound
add
pop
add
sbb
pushl
dec
adc
das
jns
or
cmc
lock
rcrb
mov
jnp
mov
sbb
mov
inc
xorl
mov
movsl
fnstenv
rorl
xchg
addb
roll
out
pop
cmpl
rclb
add
out
xor
pop
mov
or
gs
inc
iret
jp
adc
mov
call
mov
jle
jle
in
adc
fbstp
loope
xchg
loope
push
jmp
es
jae
das
push
dec
add
mov
gs
mov
and
jno
imul
cli
scas
sub
notb
pop
sahf
adc
leave
fcmovne
mov
arpl
or
pop
push
push
test
subb
arpl
loopne
mov
or
pop
int
inc
or
xchg
adc
inc
pop
cld
sub
sub
mov
rorb
aas
lret
arpl
jae
das
cs
push
jbe
rcr
jbe
lcall
mov
add
jns
dec
mov
and
xor
mov
jecxz
and
adc
adc
pop
inc
insl
pop
inc
cmpsb
jbe
in
repnz
enter
daa
jecxz
out
cmp
push
sub
clc
xor
or
ds
imul
push
mov
xchg
test
mov
jbe
pop
push
sbb
push
pop
push
lds
pop
adc
adc
jecxz
insl
fadd
insb
subb
test
adc
in
shrl
out
pop
push
sbb
mov
and
in
int
cmp
sub
addr16
pop
lret
pop
jecxz
sub
or
mov
and
sbb
mov
sahf
aad
jno
mov
cmp
jg
js
mov
mov
int
xor
adc
and
cmp
clc
out
testl
pop
ror
add
mov
xlat
into
cmp
and
jns
int3
xor
clc
outsl
and
loop
mov
jb
test
add
xchg
mov
mov
cli
stos
inc
inc
xor
mov
lret
mov
xchg
dec
cmpsl
gs
out
loopne
mov
mov
lret
sub
imul
sub
xchg
sub
xchg
sbb
js
loopne
add
dec
sub
mov
pushf
mov
jmp
fstl
aad
sub
nop
inc
fistl
inc
xchg
mov
fldcw
mov
jecxz
inc
jno
ucomiss
lea
pop
mov
pop
stc
mov
loop
push
sbb
fistl
outsl
add
add
test
push
push
aas
movhps
jmp
mov
shrl
adc
imul
test
scas
xor
push
jmp
lret
lret
pop
rcl
mov
add
lock
inc
mov
pop
in
iret
aam
repnz
es
inc
insl
out
ret
dec
or
jbe
mov
bsr
mov
jp
lea
xchg
sbb
imul
pop
outsl
cmp
dec
lods
pop
test
and
aad
jp
mov
push
push
xchg
xor
cmpsl
ljmp
mov
xor
xchg
je
xchg
or
mov
movsl
mov
add
pop
xorb
aaa
mov
xor
inc
dec
lret
out
js
push
data16
push
adc
bnd
or
xchg
loopne
aas
mov
add
xor
pushf
call
gs
adcb
adc
in
xlat
int
and
push
mov
jg
mov
fists
ja
adc
dec
mov
js
sbb
popa
mov
adc
pop
dec
stos
popl
jne
mov
xchg
aad
bound
xor
ljmp
out
and
in
adc
inc
mov
jp
sbb
mov
lahf
or
push
pop
nop
jnp
sub
sar
in
cmpsb
addr16
push
fs
fists
inc
xchg
mov
sub
push
push
fdivs
mov
popf
push
icebp
cmpsb
mov
movsb
imul
mov
imul
das
push
imul
jp
adc
mov
or
push
sti
ret
inc
pop
mov
inc
hlt
lret
sub
pushf
iret
inc
xchg
in
or
rorl
inc
mov
xchg
push
dec
icebp
pop
sub
lds
rcrb
mov
mov
jnp
dec
mov
daa
push
adc
loop
jge
pop
push
movsl
dec
mov
hlt
mov
pusha
add
pop
stos
jl
mov
dec
adc
push
inc
pop
lea
adc
out
and
loope
push
std
scas
mov
cld
dec
mov
stc
adc
enter
daa
loop
mov
mov
insl
jno
and
sub
mov
cmp
ljmp
movsl
jge
and
in
mov
jp
jno
mov
inc
add
lock
add
sbbb
ss
into
pushf
pop
push
lock
mov
push
fsubrl
in
sub
adc
adc
enter
dec
jg
add
mov
js
mov
sub
int
cltd
inc
sub
jns
lcall
xor
mov
test
push
add
cld
jg
adc
mov
xchg
aad
int
pushf
fs
in
ss
insb
mov
addr16
fdivs
or
shll
cmp
adc
or
into
sbb
inc
cmc
inc
repnz
outsl
add
and
lret
stc
mov
movsl
add
and
lods
mov
sbb
roll
xor
or
sti
add
repnz
mov
popf
gs
mov
inc
pop
loop
add
sahf
dec
subl
fs
rcll
in
lods
rcl
inc
std
js
imul
pushf
cmp
add
inc
je
aad
adc
nop
pop
or
mov
fldenv
mov
stc
dec
cltd
adc
clc
sub
call
dec
fsubp
pop
lods
aam
adc
mov
fcmovnb
pushf
cmp
inc
mov
inc
addr16
ret
aas
scas
repz
dec
mov
into
and
inc
sbb
mov
fdivrp
std
lock
out
mov
ret
mov
xchg
fwait
cld
push
fstpl
xor
and
ret
das
lcall
mov
loop
sbb
es
or
dec
or
loope
fstpt
out
mov
ret
inc
int3
mov
popf
jecxz
and
xor
mov
repnz
sub
movl
stos
mov
clc
mov
push
add
cmpsl
jp
popa
push
mov
xchg
stc
xchg
push
pop
into
push
mov
hlt
movd
in
cltd
adc
xor
sbb
mov
xor
popa
test
xchg
jp
mov
sbb
jno
or
push
adc
dec
out
add
dec
imul
xor
mov
mov
shl
orb
xchg
jo
movsl
mov
divl
mov
ds
ja
movsb
orl
scas
mov
andl
dec
mov
jne
hlt
jp
stc
mov
out
jno
pusha
bound
push
jns
out
inc
xchg
mov
cmp
jnp
pop
sub
out
pop
addr16
stos
repz
xlat
add
mov
loope
jle
sbb
in
das
pop
pusha
mov
cltd
adcl
cmp
imul
fisubs
popf
ja
enter
dec
push
jecxz
repnz
and
stos
and
imul
stc
rolb
test
je
lea
push
ret
out
rcll
arpl
jmp
or
dec
pop
dec
inc
or
fiaddl
jne
int3
xor
pop
pop
into
ficoms
lahf
mov
shlb
jge
pop
repnz
scas
leave
xchg
jnp
inc
icebp
int
fs
jbe
ja
jge
xlat
nop
sbb
sub
or
cltd
xchg
imul
push
push
daa
mov
xor
jo
out
mov
test
sbb
ret
bound
jle
cmpsb
jl
lret
in
rcrb
enter
daa
loope
cmpb
rol
jno
mov
sub
inc
sub
push
test
and
cmp
test
lahf
push
pop
xor
jecxz
sahf
fidivl
mov
pop
xchg
aad
push
cmpsb
mov
fcompl
xlat
sub
dec
cmp
mov
cmpsb
jl
sarl
sbb
js
and
aaa
and
fistl
sub
pop
mov
push
jne
mov
cmpsb
in
xchg
add
fistpl
jg
mov
mov
rorl
add
test
cwtl
in
insl
ss
pop
push
cmp
outsb
movsl
ret
fistpll
sar
clc
cmp
push
inc
or
xchg
fcomi
pop
aad
daa
pop
add
pop
into
loop
mov
dec
adc
ret
xor
iret
sub
lods
lcall
out
ss
adc
and
jae
pop
sti
mov
pushf
xlat
fmul
cmpsb
stc
mov
pop
add
jnp
jno
mov
les
jnp
dec
push
imul
out
enter
adcl
test
mov
in
cs
cltd
outsb
movsb
jle
aad
pop
lahf
nop
cli
push
sbb
push
push
inc
mov
pop
add
mov
xchg
out
adc
out
call
enter
pop
mov
lret
dec
sub
sbbl
jb
movhps
cmp
aas
dec
aam
jb
and
dec
add
daa
and
not
rorl
fldcw
imul
lods
je
xchg
lods
daa
cwtl
mov
mov
jle
andb
inc
push
icebp
lret
ss
push
mov
aad
lock
xor
mov
lret
mov
aam
arpl
es
mov
dec
add
clc
mov
mov
mov
jne
shl
and
int
xchg
pop
test
imulb
sub
cmp
test
mov
fnsave
inc
xchg
mov
or
sbb
popa
sbb
fdivs
out
pop
vpshad
call
paddusw
jp
dec
xchg
xchg
xor
imul
ss
dec
cltd
jno
test
push
add
or
jecxz
insb
dec
icebp
shll
jmp
fwait
popf
hlt
icebp
push
in
and
add
imul
cmp
add
or
or
or
mov
jecxz
mov
dec
xor
ja
mov
pop
inc
dec
sbb
in
xorl
jno
ret
jne
ret
push
mov
out
push
in
bound
dec
cmp
orb
adcl
and
cltd
sbb
loop
sti
addr16
and
mov
orl
or
cmp
pop
jmp
test
sbb
mov
pop
bnd
inc
xor
addr16
xchg
stc
or
or
call
js
stos
xchg
xchg
scas
and
enter
cmpsb
add
loop
scas
push
aas
je
int3
mov
insl
iret
aam
cmpsb
ret
adc
cmpsb
adc
popa
lcall
xchg
adc
leave
add
inc
mov
sub
xchg
push
push
ja
push
mov
fidivs
mov
hlt
mov
pop
adc
cs
movsb
rclb
push
mov
cmp
jge
cmp
sbb
mov
jb
adc
mov
mov
jl
popf
add
adc
push
or
aam
lret
push
ds
push
lahf
jle
daa
push
pop
push
xchg
je
inc
sbb
in
ljmp
pop
in
cmpsl
mov
call
cmp
outsl
xchg
jno
sbb
sub
lods
movsl
cmp
pop
add
push
ljmp
movsl
mov
mov
push
das
stc
mov
add
jo
xor
push
adc
pop
enter
jp
dec
pop
sarb
jmp
push
inc
out
loope
insl
test
sub
and
dec
push
adc
jle
test
out
adc
mov
lock
and
lods
int
add
dec
lret
pop
dec
enter
iret
mov
sub
scas
sbb
lahf
jmp
xor
adc
push
sub
rcrl
xchg
rcr
adc
aaa
shlb
addb
mov
jns
sub
testl
dec
rcll
sbb
sub
into
loop
sbb
into
xor
sub
loop
xchg
daa
stc
xor
push
adc
fs
pop
cmc
add
sbb
mov
mov
mov
orb
movsl
in
fimuls
sti
bound
cli
xchg
imul
cmp
adc
imul
and
sbb
xchg
jb
test
sub
xlat
rorl
mov
pop
popf
shrb
pop
jge
aad
push
gs
aad
add
std
push
inc
lret
aaa
cmp
adc
je
sub
pop
and
mov
movb
movl
fistl
ret
dec
adc
and
lcall
insl
icebp
aas
in
mov
aas
dec
jns
xor
rcrl
or
xor
js
andl
push
xor
mov
pop
out
cld
insb
popf
js
movsl
pop
and
mov
xor
cmc
mov
adcb
ret
loope
adc
rcrl
insl
fwait
sbb
mov
push
mov
xchg
sub
jno
out
popf
push
mov
psubb
mov
enter
cwtl
or
sub
cli
test
das
gs
lods
icebp
ss
ret
sbb
clc
pop
or
xchg
icebp
and
ljmp
icebp
pop
lcall
out
mov
orl
cmp
or
lock
jno
andl
cmp
add
fildl
pop
jl
shl
rorl
or
push
push
fwait
int3
std
mov
add
test
lret
lret
jnp
dec
or
lret
in
ja
xchg
push
ja
mov
inc
mov
pop
pop
mov
sbb
fs
inc
fists
mov
popa
ja
dec
push
subl
mov
testl
cmp
movsl
jns
push
cwtl
xchg
dec
aad
andl
xchg
sub
fisttpll
dec
jp
push
mov
sub
jnp
and
or
push
in
insl
mov
xchg
mov
xchg
sub
lret
mov
loopne
cmpb
popf
lds
out
inc
aam
popa
hlt
stos
or
test
sbb
pop
in
xlat
enter
aaa
push
adc
adc
xor
ret
hlt
pop
das
pusha
add
lods
push
sub
insw
inc
lcall
push
pop
cmpsb
xchg
fisubrl
rclb
or
pop
mov
mov
shrb
push
repnz
cwtl
mov
mov
jb
pop
add
push
add
cmp
sbb
adc
xor
or
orb
xchg
popa
push
in
add
dec
jo
fwait
push
scas
inc
pop
sub
aas
loopne
cmp
jle
push
pop
aad
inc
test
imul
mov
repz
daa
cmp
dec
mov
add
iret
in
cmp
dec
jne,pt
movsl
movsl
xchg
mov
scas
lahf
xlat
xorl
add
mov
xor
jo
out
jns
js
insb
fstl
adc
push
cltd
out
aas
mov
out
sub
dec
stos
outsb
icebp
inc
xchg
pop
std
sub
imul
cmp
xor
sbb
mov
sbb
cmp
int
or
sub
insl
stos
pop
mov
lcall
mov
lret
es
popa
dec
es
sti
fadds
add
cs
mov
mov
stos
ss
data16
ss
outsb
ss
cmp
in
fincstp
add
jno
fldl
shrl
fdivrl
addr16
cmc
xchg
hlt
push
xor
outsl
lahf
cmp
loop
mov
fists
pop
mov
in
add
ret
xor
lods
push
cltd
jo
mov
lcall
push
int3
mov
dec
jge
sti
adc
mov
loopne
cmp
pop
aas
mov
adc
fsubrs
les
push
repz
cmp
pop
push
inc
cmp
xlat
add
sub
push
ret
clc
setl
or
jmp
gs
push
aad
sbb
nop
mov
lret
dec
jecxz
mov
fmulp
call
je
or
stc
mov
sbb
movsb
lea
hlt
pop
mov
push
call
dec
incl
fisttpl
int3
pop
stos
pop
movsb
inc
sbb
hlt
adc
mov
fimuls
fs
pop
loopne
test
test
std
in
or
xor
mov
xor
mov
out
xorl
mov
push
mov
insl
mov
roll
and
cmp
fcmovbe
inc
and
loop
inc
adc
movsl
dec
stc
push
lea
jecxz
div
imul
lods
add
sarb
push
shlb
add
sbb
out
dec
shrb
sti
sub
pop
cld
test
int
mov
jp
push
xchg
fldl
shrl
push
jae
xchg
xor
add
dec
popa
dec
lret
push
stos
ljmp
xchg
sub
setnp
lea
add
mov
loopne
xchg
out
test
test
xchg
mov
push
decb
rcrb
dec
cmp
or
xchg
mov
push
xor
add
lahf
xchg
cmc
call
inc
xor
into
jmp
out
pop
in
stos
mov
data16
mov
ret
ja
ja
dec
push
lahf
cmc
inc
jbe
jmp
inc
push
inc
mov
dec
nop
dec
aaa
jno
mov
dec
cld
out
push
add
pop
jns
cld
lret
cmc
loop
xor
add
add
sti
sub
fmuls
inc
jp
inc
insb
mov
divb
jnp
out
jle
mov
in
and
pusha
mov
dec
mov
add
jmp
pop
dec
daa
jae
push
add
pop
mov
in
push
ret
push
js
mov
push
lret
lock
nop
in
lods
imul
bound
pop
jne
push
pop
push
ret
mov
hlt
negl
arpl
mov
or
mov
mov
ficompl
xor
xchg
fimull
sbb
pop
out
mov
sti
insl
int3
lds
enter
mov
repnz
leave
sub
movsb
out
push
push
push
jg
jbe
out
imul
insl
sbb
mov
push
add
jl
fiaddl
push
rcl
or
jo
cmc
int3
scas
sbb
and
push
pop
cmp
mov
cmpsb
add
pop
xchg
enter
daa
fidivrs
fstpt
jge
jne
push
lahf
data16
repz
jne
mov
movsl
cltd
inc
jle
push
adc
jle
aad
mov
add
inc
mov
out
fcompl
popa
or
push
sub
push
popf
pop
push
mov
repz
jb
sub
jecxz
outsb
push
sub
cli
shlb
hlt
orb
mov
ficompl
and
lods
inc
push
sbb
lcall
pop
inc
daa
lock
add
sti
ficompl
bound
sarl
stos
shlb
repnz
fs
lcall
add
push
idivl
in
rol
pop
cmp
or
test
test
push
cmc
pop
mov
mov
loop
loop
stc
mov
movsb
cld
add
inc
ret
dec
aas
int
push
pop
and
mov
xor
xor
jg
sti
rcl
incb
mov
loopne
push
pushf
pop
pop
and
adc
les
les
mov
push
xchg
clc
mov
sbb
lahf
xchg
pop
xlat
aas
mov
aaa
inc
daa
mov
in
fucomip
cmp
push
lahf
aad
lea
dec
inc
bound
icebp
xchg
pop
flds
aas
cmc
jecxz
adc
push
xor
call
inc
adc
cmp
adc
jb
ljmp
pop
dec
mov
xor
rorl
lds
add
dec
addr16
sub
seta
clc
cmp
idivb
xchg
cwtl
out
addr16
mov
mov
add
cld
ret
lret
sbb
mov
push
inc
mov
dec
inc
lock
fwait
add
mov
push
add
ret
jmp
es
jg
insl
imul
xchg
mov
inc
xlat
imulb
mov
and
sahf
cmpsb
inc
pop
push
out
sarb
enter
mov
dec
inc
cwtl
push
dec
pop
sbb
sub
xchg
outsl
pop
test
jae
frstor
int3
inc
pop
lock
stos
fstps
out
test
xchg
outsl
cmp
psubd
add
bound
rorb
mov
aas
ret
dec
into
arpl
mov
xor
sbb
pusha
or
movsl
lahf
fwait
sub
cwtl
test
add
and
and
ret
xor
mov
pusha
sbb
pop
jge
insl
ja
sbb
dec
dec
pop
je
or
jnp
mov
fdivp
dec
sbb
mov
gs
out
in
sbb
jns
dec
inc
xchg
loope
adc
xchg
sub
rcrl
xor
mov
sub
push
popf
jnp
jo
jle
leave
popf
in
cmp
fucomip
cmp
rorl
jmp
push
xor
sub
adc
mov
call
aas
and
sbb
dec
or
loopne
scas
jle
test
mov
in
iret
icebp
mov
popf
pop
popf
mov
mov
mov
mov
or
cmp
inc
add
jb
xchg
sbb
ror
fbld
sbb
sahf
inc
inc
sub
loopne
push
mov
push
aas
and
mov
addr16
push
mov
push
pushf
jge
mov
jecxz
scas
push
insb
add
cld
mov
int3
dec
cmp
fwait
push
mov
jecxz
xchg
and
arpl
gs
or
dec
movb
lock
pop
xchg
dec
enter
daa
frstor
xchg
cmp
cwtl
scas
sub
aam
cmp
hlt
ds
cmp
and
jl
lahf
adc
sbb
add
cmpsb
cwtl
xor
pop
mov
pop
cmp
fstl
xchg
shrb
pop
insl
mov
dec
sub
inc
cld
outsb
mov
ficoml
ud2
lea
pop
add
sbb
dec
arpl
loope
adc
int
leave
mov
pop
lds
lcall
adc
out
out
cmpsl
sbbl
inc
mov
lret
mov
fistpll
je
inc
adc
mov
ss
jo
cmp
pop
adc
lret
sbb
pop
lods
sub
or
aaa
into
mov
lods
cmc
and
shll
xchg
mov
outsl
pop
scas
loop
push
push
pop
insl
scas
adc
inc
cmp
leavew
ret
xor
push
mov
xor
fcoml
aas
in
pop
push
fdivr
outsl
mov
sahf
gs
loopne
sbbl
mov
lcall
test
xchg
mov
inc
sub
and
jle
sahf
sub
mov
pushf
nop
iret
or
sub
and
xor
jbe
les
nop
data16
inc
add
cmc
fnstcw
xor
inc
insl
push
and
leave
sti
mov
test
sbb
xlat
fs
xchg
fldt
or
inc
sub
aas
leave
jle
jb
or
and
adc
roll
pop
idiv
jb
std
xor
cwtl
test
mov
out
sbb
jae
lret
repnz
push
mov
add
mov
das
cmc
jge
mov
cmpsl
sahf
aam
ss
ret
mov
es
pop
dec
insl
push
in
dec
out
ds
fsubl
icebp
sbb
mov
mov
dec
insb
xchg
and
cmp
out
adc
sub
cltd
or
or
int3
fstl
ss
enter
scas
ds
out
sub
icebp
cmc
pop
fwait
jecxz
stos
enter
call
lods
adcl
outsb
mulps
mov
xor
out
mov
inc
mov
dec
xor
and
xchg
mov
cmp
sahf
sar
jne
or
mov
jns
int3
add
aad
adc
nop
push
in
je
xchg
or
xor
in
or
sti
push
xor
std
stos
inc
pop
cmp
sbb
fiadds
dec
cmp
out
mov
scas
aaa
mov
std
push
mov
mov
xor
out
int3
xor
xor
xor
out
rolb
stos
mov
addr16
cmpl
pop
mov
cli
or
addr16
mov
imul
sarb
or
ret
xchg
cmpsb
mov
jmp
jae
cmp
push
fists
popf
in
movsl
popf
cmp
mov
push
shr
arpl
and
inc
sbb
test
scas
loope
dec
push
call
test
iret
push
js
ret
lds
arpl
hlt
lea
arpl
xchg
jb
mov
shrl
inc
test
fiaddl
add
lret
pop
inc
inc
cmp
inc
adc
lds
in
sti
mov
stos
repnz
xchg
leave
sbb
jmp
cld
push
push
push
out
iret
data16
cs
jge
lods
mov
aaa
outsb
mov
or
repnz
scas
dec
stos
movsb
push
xchg
ret
pop
popf
lret
jo
out
scas
in
jmp
clc
fldenv
cmp
loopne
push
mov
ja
cmpsb
or
fsubr
inc
lods
xchg
enter
daa
fmull
xchg
jno
mov
sub
mov
sarl
push
movsl
cmpsl
pop
and
xchg
lret
loopne
test
pusha
xchg
xor
cmp
insl
stc
jl
fisttpl
js
aas
lods
pop
into
or
loope
jno
fdivl
or
shlb
sbb
pop
adc
ljmp
xorb
test
ret
mov
adc
addl
push
inc
or
lcall
and
movsl
insl
jmp
jno
cmp
test
scas
andb
jg
or
icebp
mov
testl
xchg
cmp
adc
enter
cmp
shr
mov
scas
add
into
outsb
cmp
addr16
cmp
loop
add
adc
xor
add
cmp
lods
sbb
cmpsl
stos
out
adc
imul
xor
shr
in
mov
mov
incb
cld
xchg
loopne
ret
pushf
push
je
nop
cmp
imul
xor
repz
rcrl
into
stos
mov
adc
ficoms
sub
or
pushf
cmp
jmp
push
mov
aad
movsb
notl
add
pop
inc
pop
shlb
xor
and
pop
lea
call
movl
xor
push
shrl
rcrb
pop
xchg
push
out
mov
enter
loop
push
inc
daa
dec
push
gs
and
outsb
aam
xchg
into
idivb
xchg
cwtl
fs
xorl
jne
imul
popa
jae
mov
ds
lock
inc
das
aam
test
mov
movsb
mov
mov
int
mov
out
xor
ljmp
mov
lock
mov
outsl
xor
mov
inc
dec
ja
in
loope
or
rolb
ret
push
clc
clc
add
xchg
in
stc
pop
ljmp
in
pop
inc
cmp
mov
fucomip
dec
add
push
fmuls
mov
cmp
inc
cltd
pop
dec
out
xor
fadd
mov
inc
adc
test
enter
and
sbb
ss
sbb
fwait
mov
cs
sbb
in
add
lock
push
xor
or
or
aaa
in
cmp
mov
dec
pop
mov
repz
xor
addb
push
mov
sbb
jo
jne
test
mov
stos
push
jg
xchg
fstpt
into
lret
dec
or
incl
or
cmc
iret
cmp
movsl
jp
ljmp
mov
xor
insb
inc
add
inc
jle
xlat
js
int3
cltd
sbb
fildll
and
xchg
jns
je
sub
add
addr16
mov
cld
popf
popa
xor
mov
pop
sbb
in
and
addr16
mov
or
scas
inc
mov
ficoms
scas
cmp
ret
fs
or
into
arpl
into
inc
cmpsb
xchg
inc
or
xor
add
add
push
fidivl
adc
leave
orl
sub
pop
je
rcr
in
vpsubd
or
mov
sti
mov
leave
nop
mov
sbb
fisubrs
jbe
jnp
jge
sbbl
ret
aaa
sub
scas
adc
inc
add
fisttpll
xor
jns
push
xor
xchg
jl
scas
ret
push
and
popf
xchg
push
mov
jle
mov
jecxz
sub
jmp
cmp
or
sub
adc
add
je
and
stos
push
dec
fsubl
xchg
insb
add
outsb
imul
xor
adc
outsb
sarl
inc
pop
or
out
adc
fwait
dec
push
fcompl
xor
scas
dec
xor
jge
mov
mov
push
cmp
stc
pop
imul
jbe
inc
or
imull
out
mov
pop
ret
xchg
clc
lcall
stos
mov
and
sahf
in
xchg
test
mov
sarb
das
mov
add
mov
movsb
sbb
cmp
ss
cli
cmp
sarb
test
roll
push
or
adc
cmc
mov
leave
xor
xor
mov
in
xchg
aaa
adc
jns
add
xlat
data16
and
lods
add
sub
mov
cld
adc
in
cmc
jle
sti
int
push
test
scas
loopne
pop
jecxz
mov
ret
sahf
imul
dec
lods
xchg
inc
or
push
nop
insb
xlat
cld
jl
sub
mov
pushf
out
loop
or
fst
push
inc
sub
pop
xchg
mov
and
fldenv
js
jecxz
icebp
inc
daa
lea
in
int
mov
sub
stos
mov
fisttpl
mov
push
inc
cmp
pop
inc
and
aas
aas
pop
insb
adc
mov
dec
int3
add
int
mov
testb
enter
mov
or
or
or
cmp
jl
lret
shl
rorl
dec
addr16
popl
das
mov
lahf
mov
adc
cwtl
lret
ret
lods
loopne
es
ja
insl
push
fsubp
dec
in
lahf
cmpsl
fidivrl
mov
arpl
lods
mov
push
mov
xchg
call
shll
test
shlb
dec
mov
mov
inc
sbb
sahf
add
sahf
lea
clc
ds
xchg
sub
cmp
int3
movsb
mov
cmpsl
cmpsl
xchg
pop
icebp
pusha
or
cmpsb
imul
xchg
inc
mov
push
pop
or
add
and
mov
clc
mov
dec
out
dec
add
test
add
sahf
out
shrl
rcr
fwait
mov
repz
mov
or
or
sbb
or
fwait
pop
in
mov
sub
dec
lret
scas
add
add
inc
shlb
dec
mov
cli
jne
iret
ljmp
je
bound
inc
je
mov
mov
clc
out
mov
sti
or
inc
push
addr16
mov
pop
cmpsb
mov
mov
insb
stos
insl
test
and
int3
cli
in
pusha
imulb
add
dec
sbb
xchg
dec
fwait
stos
jmp
mov
ss
and
pop
popf
mov
imul
std
jl
dec
mov
sbb
insb
subb
es
cmpsl
pop
mov
adc
stc
or
mov
stos
pop
inc
lcall
ljmp
or
stos
psllq
and
outsl
aaa
xchg
and
int3
mov
popf
fcomp
xchg
shlb
idivb
dec
aas
repnz
pop
das
pop
movsb
adc
push
lea
movsl
jbe
cmp
jge
fistps
jge
add
in
into
cmp
inc
mov
add
aas
je
flds
dec
mov
dec
xor
in
mov
and
das
push
jno
adc
out
je
mov
adc
jno
ret
cmp
push
sub
jo
cmp
or
ds
jle
mov
outsb
and
add
test
in
sarb
repz
js
scas
pop
pop
dec
mov
push
movsb
loope
dec
fs
les
sub
pop
push
adc
mov
sub
xor
sti
mov
lahf
push
and
jno
push
dec
pushf
daa
int
xchg
sub
dec
pop
inc
adc
les
dec
push
mov
push
sbb
pop
sbbl
call
pop
jg
sbbl
test
adc
cltd
ss
cmp
mov
idivl
fs
sbb
dec
enter
and
xor
out
js
imul
cli
adc
lock
stc
jle
cmp
adc
push
adcb
jmp
sbb
out
mov
push
xor
shl
sti
jl
dec
loop
xlat
xchg
pop
sub
ss
sbb
or
mov
repz
xchg
add
add
sbb
push
xlat
cmp
in
sbb
pushf
xchg
sub
jmp
enter
ja
aad
dec
sub
mov
mov
jp
leave
pop
add
jno
xlat
sub
orb
mov
movl
in
int3
shll
dec
xchg
mov
outsl
pop
fnstcw
push
aas
les
js
push
and
sbb
mov
les
outsb
std
sub
sub
ficoml
mov
call
addb
mov
mov
dec
in
scas
mov
mov
mov
mov
int3
sub
and
shll
cmp
loopne
cmpsl
fnstenv
loopne
sahf
ficompl
lods
sbb
mov
mov
cmp
or
sbbl
ret
mov
cmc
test
mov
xchg
ss
push
dec
dec
ffree
jbe
clc
jns
cld
xchg
imul
ljmp
push
stos
xchg
divb
adc
xchg
mov
push
mov
and
jbe
lcall
ja
xor
mov
mov
dec
das
int3
dec
push
outsl
test
iret
les
push
dec
jne
add
icebp
xor
fwait
out
pop
push
bound
add
mov
lods
xor
ljmp
xchg
std
xchg
call
or
mov
imul
dec
push
decl
mov
sti
fistl
jne
pop
push
mov
and
bound
stos
xchg
or
pop
add
xchg
mov
fisttpll
mov
mov
or
jg
aam
push
jle
mov
in
xchg
fildll
lea
pop
sub
jae
push
out
out
popf
scas
xchg
xchg
mov
stos
mov
dec
dec
sbb
sbb
bound
mov
fdivrl
ret
pop
jns
hlt
outsb
jp
arpl
es
inc
lods
imul
in
mov
inc
add
js
popf
adcl
pop
shr
cmp
sub
lds
add
mov
mov
inc
out
movsb
popf
sbb
mov
out
ss
fdivrl
cmp
aaa
stos
mov
jmp
jl
out
fisttpll
aas
push
mov
scas
pop
mov
in
scas
xorl
push
and
fwait
inc
add
inc
in
clc
dec
sub
fisttpll
inc
cmp
jno
jecxz
sub
mov
ret
push
inc
movsl
mov
jecxz
lahf
xchg
ret
hlt
outsl
push
test
testl
mov
flds
js
inc
pushf
pop
mov
push
loope
outsb
push
fdivl
lret
sub
or
sarb
into
movsl
jno
subb
sbb
fnsave
or
push
dec
lahf
xor
popf
mulb
sub
dec
addl
sub
push
sub
aad
sbb
bound
xor
add
stc
inc
jg
inc
lret
fs
mov
clc
cwtl
mov
mov
ss
add
cmp
inc
mov
sub
shll
or
sbb
into
pop
inc
push
aas
test
outsl
fldz
outsb
loop
xor
sti
adc
add
data16
push
lods
rorb
mov
sahf
out
jbe
cli
test
xor
pusha
sbb
sti
sub
push
gs
and
cld
lods
pop
stc
jp
adc
jno
imul
pop
push
repz
mov
sbb
jb
xlat
jp
sub
int
das
gs
cmp
mov
call
and
loopne
addr16
rclb
dec
sbb
mov
je
xor
addb
lea
xor
mov
dec
adc
mov
andl
pop
jl
rolb
bound
pop
ret
sarb
imul
and
jb
roll
js
std
iret
inc
lahf
cwtl
xchg
inc
pop
mov
jmp
mov
fwait
cmpl
aam
lret
scas
adc
mov
mov
mov
xchg
xor
cmc
or
das
jno
fisubl
addl
ret
lret
es
pusha
mov
dec
fildl
cmpsl
fsubrs
mov
jne
mov
mov
fdivs
and
movsl
es
pop
mov
xor
jecxz
jl
push
mov
inc
add
data16
fucomp
inc
in
clc
mov
xor
mov
bound
in
int
inc
sbb
je
loopne
rcrb
push
imul
add
mov
add
xor
movsb
addr16
fiaddl
rcrl
test
xor
xchg
out
jle
add
push
rcrl
xchg
push
fwait
adc
push
add
inc
mov
or
jae
rcrb
mov
mov
mov
mov
and
iret
ja
or
dec
or
pop
inc
add
mov
mov
ss
mov
jne
dec
movsb
mov
icebp
stos
out
dec
out
bound
int3
call
xchg
fcoms
push
inc
ljmp
mov
jae
jp
adc
mov
insb
cmpl
pop
in
xchg
popf
pusha
sub
mov
mov
jmp
lahf
sahf
mov
push
test
sbb
push
sbb
stos
das
jns
and
mov
fwait
scas
insl
mov
push
add
jg
inc
int3
mov
ret
jmp
mov
mov
mov
xor
mov
dec
lods
subb
mov
in
ret
ficoml
xchg
jbe
lahf
pop
add
in
fmulp
jg
mov
lcall
in
jne
cmc
stc
push
movsb
sub
push
jbe
sbb
mov
jb
aaa
push
enter
std
add
and
dec
data16
push
and
mov
jne
jmp
scas
pusha
and
cmp
scas
and
mov
cmp
pop
ret
stc
in
or
fsubs
daa
fcoms
cmp
nop
loop
mov
bound
ds
push
and
scas
mov
push
movl
iret
add
xchg
mov
cmp
mov
js
jo
pop
lret
push
xchg
cltd
loope
mov
fcompl
sub
outsb
cmpsb
test
clc
rclb
popl
sub
sahf
pop
jg
insb
jp
and
in
push
push
push
push
int
cmp
sub
test
inc
movsb
and
fnsave
mov
in
sub
mov
test
and
add
mov
rorb
push
push
ss
fadds
cwtl
mov
lret
test
cmp
loopne
or
test
cmc
push
cmpsb
and
outsl
mov
scas
sar
in
and
adc
inc
loope
rcrl
mov
daa
xchg
mov
popa
cli
fistpl
fdivl
aaa
rcll
ss
fcmovbe
movsl
adc
sbb
stc
mov
adc
xchg
imul
stos
les
mov
sbb
add
adc
sub
lds
out
lret
dec
add
pop
rcrb
daa
adcl
jl
and
mov
fxch
mov
test
xor
orb
inc
lahf
aas
shll
adc
jecxz
insb
negb
fistpl
icebp
inc
inc
into
lods
cltd
inc
jne
inc
aas
in
jle
push
cmp
dec
xor
iret
rcl
daa
add
dec
pop
xchg
std
jbe
xchg
cwtl
push
xor
pop
data16
rorl
push
cld
les
cmpsl
mov
jae
mov
int
lock
call
mov
cmp
sub
pop
mov
mov
add
xlat
mov
mov
lods
icebp
pop
sub
mov
inc
enter
jl
pop
rorb
xor
es
stc
icebp
test
test
push
fcomi
fstl
cmc
inc
clc
out
jl
xchg
jmp
aad
popa
in
cmp
xlat
stos
jae
or
xlat
mov
xchg
sbb
or
int
sysenter
in
add
xor
xor
in
mov
push
sbb
sbb
jg
mov
shrl
je
fwait
inc
xlat
push
test
push
add
pop
push
aaa
ljmp
xor
popf
in
cmp
xchg
xchg
mov
xchg
fdivrs
fistpll
lret
dec
cld
stos
adc
xchg
push
push
mov
fnstenv
dec
insb
mov
dec
mov
rclb
enter
mov
out
or
cltd
inc
push
sub
mov
cli
addr16
aam
cmc
rcrl
insb
in
sahf
or
mov
adc
call
cmp
fbld
mov
push
inc
stos
cmpsl
arpl
sti
add
insb
dec
mov
std
test
push
popa
dec
push
pop
mov
stos
mov
push
sbb
std
lock
scas
rorb
push
dec
call
iret
sub
ret
inc
pop
out
loopne
add
cltd
arpl
xchg
mov
push
mov
cmp
jecxz
inc
lcall
inc
xchg
and
xor
pop
xor
fcomp
jo
fcmovb
adc
jae
mov
and
inc
adc
leave
insb
push
lahf
movsb
mov
push
push
jp
outsb
jbe
cmp
dec
cld
sbb
fnstcw
sbb
insl
add
ret
inc
dec
aad
in
add
shlb
scas
aas
push
mov
xlat
xor
cmp
stos
pop
inc
and
cmpsb
lcall
enter
daa
xlat
push
xchg
cmp
nop
xor
popa
mov
cmp
mov
lea
sbb
mov
xor
rcll
arpl
mov
xor
xchg
cmp
cmp
mov
pop
pop
or
icebp
push
test
mull
sbb
je
sub
pop
outsb
or
add
mov
adc
arpl
adcb
push
mov
in
and
push
addr16
push
add
int
gs
pop
mov
mov
cmp
pop
mov
sahf
jns
jle
adc
push
sub
lods
jg
lret
and
ljmp
adc
add
fdivrs
dec
lret
scas
shl
lods
cmp
imul
into
fnstsw
and
mov
loop
xchg
dec
mov
stc
mov
gs
jmp
fistl
lods
mov
stc
or
mov
xor
push
cmp
push
stos
push
in
mov
pop
cmp
call
loopnew
xor
pop
aaa
xchg
adc
xchg
push
les
adc
sbb
cmp
push
xlat
clc
sbb
imul
xor
adcb
outsb
mov
nop
mov
dec
fcmovnb
and
mov
sbb
stos
sahf
sub
lea
xor
call
pop
pop
inc
imul
pusha
loope
push
pop
push
fcmovnb
push
mov
ret
inc
push
pop
sahf
inc
nop
std
fnstsw
xorl
jno
mov
and
sbb
shll
push
in
sbb
fdiv
mov
mov
inc
subl
cltd
lret
mov
mov
and
mov
imul
stos
fcomp
das
das
addr16
mov
fwait
dec
ss
call
sbb
dec
rcr
sub
jnp
mov
lods
pop
sbb
cmpb
les
in
pop
fists
add
fistpll
test
push
je
sahf
std
xor
cmp
push
ljmp
sbb
dec
stos
bound
imul
xchg
xor
out
cltd
jo
inc
xor
jp
mov
push
ret
lahf
outsl
pop
test
mov
xchg
or
roll
xchg
mov
xor
dec
add
add
ja
cmp
dec
shll
andl
jnp
push
xchg
aad
sbb
jle
add
lcall
dec
out
push
loope
cs
mov
dec
fs
dec
dec
into
jae
mov
mov
loop
add
push
and
bound
mov
xchg
outsb
ret
aas
subl
sub
mov
cs
cli
jp
dec
insb
mov
gs
push
push
and
mov
inc
in
ficoml
bound
ffreep
sub
xchg
cwtl
cs
cld
jge
inc
mov
and
push
das
icebp
es
and
mov
push
cwtl
cmpsb
icebp
stos
adc
xor
sbb
sub
scas
xor
mov
lock
adc
out
iret
mov
jo
decl
or
mov
hlt
dec
jge
arpl
sbb
xchg
or
xchg
push
or
lret
mov
notl
dec
add
pop
jle
ficoms
fldt
rcrb
fwait
repnz
movsb
sbb
push
leave
and
jbe
leave
repz
adc
aaa
call
mov
inc
jl
jmp
dec
inc
ja
push
call
mov
sbb
push
dec
cmp
cmp
inc
mov
add
lods
divb
into
iret
andl
roll
xor
xchg
sub
and
in
lret
push
ds
lea
sub
enter
pop
test
sbb
ss
ljmp
xchg
js
cmpb
dec
mov
push
sub
loope
mov
fdivl
les
pop
dec
mov
enter
cltd
dec
rorb
aaa
pop
pop
or
sbb
les
jne
push
push
pusha
mov
shlb
sub
xchg
pop
ds
repnz
imul
mov
test
mov
ljmp
inc
add
lods
adc
les
cmp
ja
mov
mov
stos
lret
push
sarl
cmp
fmuls
addb
shl
cmc
xchg
adc
xor
or
loop
ds
pop
mov
adc
ret
hlt
pop
pop
jle
lods
xchg
mov
test
xor
test
in
or
mov
cmp
mov
loopne
ljmp
cmpb
clc
shlb
les
in
lea
mov
sbb
xlat
aaa
push
xchg
sub
cmp
add
jmp
loopne
cs
mov
out
arpl
dec
cmp
icebp
fnstcw
mov
je
mov
jecxz
popa
hlt
ss
loopne
int3
mov
call
cmp
leave
into
adc
sbb
inc
pushf
aad
notb
jnp
gs
jae
fdivl
inc
stos
cmp
aas
and
add
pop
mov
and
imul
jge
std
lret
mov
movb
mov
movsb
cmp
sbb
in
lret
sti
xchg
scas
mov
enter
insl
ss
fnstsw
push
pushf
add
xor
push
mov
lretw
ja
and
fbld
jge
mov
cmpsl
and
scas
mov
mov
mov
inc
int
and
jbe
xchg
pop
fidivrs
sub
mov
addr16
cmp
and
popa
add
gs
xchg
xor
ljmp
fstpl
sub
popf
enter
mov
decl
repnz
add
or
sub
push
mov
pop
dec
push
outsl
aam
xchg
int
xchg
sub
sbb
xor
fwait
mov
mov
and
xchg
inc
jno
jmp
add
sbb
xor
adc
mov
xlat
ja
leave
mov
es
inc
lds
mov
mov
ss
xor
test
mov
rcrl
clc
mov
jge
cmp
adc
lahf
mov
mov
stos
imul
mov
jne
insb
ret
jnp
dec
pop
jle
loop
in
adc
cmp
xchg
imul
jmp
shlb
push
repnz
cwtl
popf
dec
add
clc
push
xlat
sbb
stos
mov
out
xchg
sub
imul
or
adc
adc
ret
fs
push
fadds
lcall
inc
mov
push
push
std
jle
fisubrl
aad
shll
call
fidivs
ror
mov
sub
leave
pop
clc
mov
push
sbb
xlat
jbe
into
idivl
aas
sbb
and
sub
cmpsl
push
jp
incl
add
xorb
out
dec
mov
fisttpl
lret
push
inc
xor
mov
inc
scas
std
ja
and
xchg
test
push
dec
test
jecxz
mov
dec
jecxz
leave
fs
aad
mov
dec
jmp
out
lret
sub
scas
fidivrs
pushf
cmpsb
cmp
movsl
fcomp
in
and
mov
push
inc
pop
mov
and
ret
pop
jne
pop
js
addr16
xchg
ljmp
arpl
sbb
lret
iret
inc
ja
dec
stc
xchg
shl
popa
adc
mov
pop
sbb
dec
mov
mov
testl
cmp
shll
pop
mov
inc
mov
mov
dec
sbb
jbe
test
cltd
pop
sbbb
xchg
addr16
bound
xor
xchg
dec
cld
loop
arpl
ljmp
cmpsb
scas
divl
or
push
hlt
rcll
scas
cmp
neg
or
fucomp
into
mov
pusha
xorl
sbb
psrad
mov
adc
adc
add
add
pop
mov
sub
out
divb
mov
fnop
sti
out
add
jnp
dec
gs
xor
or
adc
ss
int
repz
or
xchg
sarl
sahf
sbb
mov
ljmp
cmp
mov
pushf
call
push
fwait
cs
push
arpl
cld
inc
jne
ds
dec
cltd
insl
jbe
pushf
rorb
jo
xchg
je
fiaddl
jecxz
frstor
cmp
xchg
call
mov
add
adc
dec
dec
sub
fcmovnu
pop
or
xchg
inc
arpl
mov
movb
jb
xchg
mov
daa
cmp
adc
mov
mov
rcrb
add
clc
data16
jne
lret
push
out
mov
or
popa
cmc
xchg
das
in
aam
mov
pop
dec
pop
aam
popf
int
push
add
bound
testl
insb
gs
rorl
lods
xor
loopne
jae
or
pop
call
adc
sbb
xor
sub
imul
jmp
out
push
and
das
fisttpll
push
call
ljmp
clc
pop
repz
inc
out
add
xchg
out
dec
dec
push
aad
mov
add
cmpsl
pop
cltd
ficomps
mov
pop
push
out
test
jg
xchg
xor
sbb
iret
pop
shll
push
fwait
shr
nop
push
xchg
insb
aaa
add
lods
mov
mov
xor
jmp
xchg
ss
in
scas
sub
mov
dec
in
xor
stos
or
adc
inc
pop
inc
ret
pop
add
adc
in
mov
out
les
and
iret
and
and
out
cld
push
sub
cmpsb
sub
or
mov
test
push
jnp
mov
hlt
in
mov
pusha
cwtl
add
filds
jnp
ljmp
jae
cmc
adc
mov
xor
mov
push
adc
stos
sti
lret
pop
sub
imul
scas
stc
lret
and
and
fstl
lods
push
ret
iret
dec
ret
test
popf
aaa
hlt
in
loop
inc
adc
repz
ljmp
sbb
or
sub
mov
pop
mov
mov
pop
rcl
push
mov
inc
mov
jo
push
arpl
push
addr16
jbe
dec
scas
jge
push
js
fistps
loopne
xchg
add
xchg
push
dec
and
xchg
xor
bswap
mov
fdivl
icebp
cmp
cmpsb
cs
into
cmp
cmpsb
and
insl
in
jnp
pop
enter
daa
aam
pop
cmp
dec
jno
stos
fisubrl
add
notb
outsb
movsl
fisttps
and
sbb
adc
test
add
test
in
js
loope
pop
gs
push
xchg
pop
loope
cmp
fmul
cwtl
pop
sub
or
lret
adc
ret
popl
dec
add
jp
dec
mov
pop
hlt
and
in
push
pop
jp
int
cmp
pop
cmp
sbb
push
loopne
iret
mov
mov
cmpsb
sahf
bound
sbb
jg
cmp
mov
repnz
jge
push
in
sbb
fwait
ja
cmpsb
push
fsubr
shl
divl
mov
sarl
std
test
into
xchg
cmc
and
lret
inc
test
repnz
aam
cmp
aad
adc
xchg
in
adc
pushf
fs
push
push
push
mov
out
out
pusha
inc
cli
cmpsl
enter
adc
in
loop
call
sahf
orl
xchg
aaa
or
sub
xchg
imul
jl
repz
outsl
cmp
push
cld
test
mov
pop
sub
sbb
xchg
jmp
test
inc
sahf
outsl
nop
sbb
mov
inc
scas
nop
jg
cmpsl
cmp
or
lret
popf
mov
lea
dec
vmptrst
movsl
mov
adc
xor
push
arpl
inc
ljmp
aas
pusha
test
jb
outsl
pusha
dec
or
or
rorl
shl
push
jo
std
adc
or
mov
sub
dec
subl
inc
mov
pushf
fcomi
mov
adc
mov
push
fmuls
aam
ret
mov
es
arpl
push
popa
dec
ret
cmpsl
shll
inc
icebp
test
movsl
lods
popf
pop
xlat
mov
xchg
fsubl
cmp
inc
sarb
sub
fnstcw
mov
jecxz
push
out
adc
iret
ljmp
xlat
pop
sahf
lods
loop
das
pop
dec
out
arpl
xor
mov
sbb
mov
or
aam
negl
mov
sbbb
cli
dec
aam
push
test
xchg
fcomps
subl
hlt
int
jae
mov
xor
incl
enter
daa
pop
xor
push
or
mov
ficoms
inc
pop
add
lret
and
ja
fdivr
dec
enter
repz
xchg
rolb
clc
movzbl
iret
add
mov
cmpl
cli
int
pop
mov
and
mov
daa
fdivrl
call
or
fnstcw
in
fidivrs
xor
in
mov
pusha
xor
fbld
arpl
xchg
adc
jge
adc
jae
jnp
push
js
das
popf
cltd
adc
popa
push
push
pushf
stos
outsb
mov
cltd
sbb
stos
ljmp
xor
push
addr16
adc
mov
popf
pop
ret
push
ds
xor
push
ja
inc
mov
pop
cs
sti
jae
fcmove
scas
lret
xchg
xorl
pop
in
lock
fdivrp
sbb
ret
inc
or
das
push
aam
xchg
mov
leave
dec
sub
movsb
filds
push
mov
jno
js
inc
jge
dec
dec
sbb
je
or
addw
leave
out
push
pop
push
dec
xchg
ss
push
xchg
xor
pop
addr16
push
sbb
and
mov
ret
testb
cltd
pusha
in
bound
dec
daa
shrl
cmp
or
sub
jns,pn
cli
cmpsl
cmp
sbb
cmp
out
or
cli
aam
lahf
dec
xchg
int3
push
out
inc
test
cmp
ret
and
pop
ret
pop
xchg
out
pop
pop
add
pop
ret
loope
xor
test
daa
adc
outsb
xchg
sbb
adc
popf
pushl
fbstp
sbb
out
mov
inc
mov
fidivrl
push
pop
xor
aas
sub
filds
mov
jle
push
aaa
jnp
mov
add
sbb
and
push
cli
dec
jg
adc
mov
dec
mov
push
dec
fs
adc
ljmp
cmp
test
aam
hlt
mov
lret
pop
sarl
lahf
cmp
in
or
pop
inc
into
imul
pop
xor
xor
adc
xor
sbb
fsubl
add
mov
xchg
mov
or
out
dec
dec
cli
fidivl
sub
inc
cmp
rcrl
add
adc
pop
lret
pop
rol
fstpt
repz
pop
mov
sbb
sub
popf
xlat
hlt
decb
mov
push
int3
jmp
jl
cs
and
aad
pop
inc
nop
hlt
pop
jb
push
sub
ret
clc
jnp
es
fisubl
lds
lds
mov
cwtl
cmp
dec
add
fildl
test
adc
popa
in
aas
inc
jl
mov
dec
and
pop
jo
pop
adc
negb
pop
or
add
mov
add
mov
pushf
mov
lret
pop
fsubrs
stos
push
jns
in
or
mov
cmpsb
ret
and
mov
push
orl
xchg
mov
jg
test
or
mov
stos
stc
shlb
inc
push
xlat
pop
pop
fidivs
dec
insb
dec
sub
inc
pop
mov
pushf
icebp
push
stos
pushf
insb
fst
aas
clc
push
outsb
xor
fs
popa
pop
and
pop
dec
jbe
stos
push
inc
cmp
xchg
jl
adc
jae
bt
add
adc
jmp
mov
pusha
ficoms
dec
cmp
shrb
cli
outsl
fistps
ss
mov
fwait
das
and
xlat
movsl
jae
repz
jecxz
daa
inc
pop
sbb
mov
out
or
mov
adc
and
pop
xchg
fnsave
sub
dec
mov
inc
mov
mov
adc
or
ljmp
adc
bound
fst
xchg
lcall
out
movhps
pushf
jno
addr16
pop
jp
das
sub
insb
add
sbb
rol
mov
or
cmpsl
pusha
into
in
mov
inc
jge
xchg
in
cmp
fcoms
shll
inc
dec
push
cmp
popf
shl
mov
xchg
cs
loope
or
inc
mov
sbb
sub
scas
mov
cmpsl
adc
mov
ret
fstpl
adc
hlt
jnp
hlt
arpl
push
inc
shll
push
jp
mov
xchg
fcoms
cmp
clc
push
add
lahf
fcomp
lahf
jno
lds
jo
into
out
div
out
cmc
leave
mov
inc
push
add
xchg
bnd
and
aaa
in
jmp
add
aam
dec
add
or
lds
scas
lcall
cmp
sbb
xor
push
cmpsb
sub
cmp
mov
lcall
loope
adc
xchg
cmp
sub
cmp
rorl
xchg
sbb
push
add
test
inc
mov
xor
shl
or
sbb
scas
push
js
xchg
rcll
and
push
shlb
fcompl
sub
fists
outsb
clc
jne
adc
js
pop
ds
xor
ds
mov
mov
ljmp
bound
outsb
nop
push
sub
cmp
cmp
out
push
mov
sbb
js
test
mov
xorb
jg
out
addr16
pushf
adc
insl
xor
adc
cmp
ss
in
xlat
int
fsubs
aaa
divl
and
rcl
xchg
adcl
cmp
into
dec
or
xor
outsl
bnd
loop
int3
xchg
stc
ss
adc
mov
add
ret
inc
pushw
push
lods
and
cwtl
mov
mov
mov
xor
ss
mov
mov
stos
lret
gs
loopne
xchg
adc
imul
sub
out
cli
repz
inc
xchg
sbb
jl
push
mov
jns
xor
sub
leave
fistpl
cmp
jno,pn
lret
test
iret
lret
mov
inc
aad
dec
fsts
dec
or
jmp
fidivl
call
cmp
cmp
fsubr
ret
adc
insb
jbe
inc
clc
cmpsb
js
pop
in
dec
aas
sahf
fldl
jb
ret
sti
pop
lahf
and
stc
push
shrl
jle
pusha
cmpsb
and
mov
push
cmpsb
mov
mov
push
cld
lahf
mov
mov
jmp
mov
pop
sub
jb
fs
mov
fdivrl
xchg
or
popf
es
mov
dec
mov
fstps
jp
repz
push
mov
mov
int
xor
loop
jl
jp
xor
and
sub
icebp
shll
insl
out
iret
xchg
clc
push
pop
mov
ljmp
movsl
pop
hlt
adc
or
pop
out
xchg
ret
pop
pop
push
pushw
movd
popf
add
lcall
push
push
cmp
xchg
jp
mov
or
roll
jmp
inc
ret
adc
fwait
pop
loop
push
jp
lds
decb
or
gs
xor
test
xor
pusha
push
call
mov
inc
lret
adc
mov
scas
mov
mov
jae
rorb
incl
mov
mov
xchg
bound
jns
fidivrl
xorl
out
sub
scas
or
or
mov
sbb
insb
outsb
pop
sbb
pushf
fnstcw
dec
mov
adc
lods
pusha
imul
je
iret
xor
inc
in
rcrl
push
mov
ljmp
sbbb
push
push
and
sbb
jnp
imul
lods
scas
and
into
push
cmc
mov
lods
iret
gs
pop
sbb
pop
xor
dec
hlt
mov
inc
inc
jmp
or
and
aam
xor
fildl
pop
dec
adc
fiadds
jne
cmp
xor
cmp
dec
leave
ss
dec
movsb
cmc
dec
ret
push
push
or
jge
loop
sbb
sub
lret
pop
adc
daa
mov
std
dec
outsl
fists
xor
and
mov
dec
mov
enter
ljmp
dec
push
in
xor
mov
cmp
iret
jno
cmp
test
mov
xchg
xor
lahf
mov
push
mov
add
dec
pop
inc
xor
lock
into
mov
pop
adc
enter
adc
push
adcl
push
outsb
pop
ret
je
bound
rclb
push
popf
cmp
addb
cmp
pop
or
and
pop
push
int
adc
sub
mov
ret
push
in
and
or
sahf
dec
rorl
cmp
lcall
scas
push
imul
mov
jmp
jle
cmp
divl
aas
lret
cwtl
shrl
xchg
or
hlt
pop
cmc
ja
xor
xlat
xor
loop
mov
stc
in
aad
adc
aas
testb
xchg
lods
or
mov
gs
mov
cli
inc
lods
pop
xor
mov
clc
sti
mov
scas
sub
lret
ss
pop
icebp
or
inc
mov
icebp
addl
sbb
sahf
sbb
xlat
jb
sub
lods
push
mov
xchg
repz
mov
sub
sbb
dec
nop
stos
push
testl
cmp
je
ret
pusha
jecxz
jne
movb
iret
lods
sub
out
mov
sti
lret
dec
sub
cmpsb
fndisi(8087
xchg
in
xchg
cmp
scas
inc
inc
xor
jb
cmp
and
out
xchg
sar
jge
negb
inc
pop
std
pop
xlat
iret
cwtl
insl
cmpb
inc
ret
ljmp
icebp
push
mov
mov
sbb
int
and
imul
mov
aam
xor
inc
mov
adc
das
mov
cmpsl
shlb
mov
sub
adc
ds
js
xchg
cltd
pushf
addr16
jae
sub
icebp
push
mov
fscale
push
xor
clc
mov
xchg
mov
aaa
mov
pop
lahf
xorl
mov
jnp
inc
jne
bswap
jno
add
jne
xor
fisubs
mov
data16
dec
or
subl
pushf
jp
rcll
cmpsb
push
or
ljmp
sbb
cwtl
call
incl
loope
pop
in
or
sbb
mov
mov
cmp
cld
cld
shlb
push
xlat
dec
mov
sar
mov
loop
xor
in
jne
iret
or
inc
mov
imul
cltd
xchg
xor
jmp
push
and
out
repnz
sub
xchg
add
xchg
jp
fcmovu
mov
loopne
insb
add
in
or
filds
and
inc
notl
pop
jae
movsb
adcl
push
pop
inc
mov
adc
stos
pop
add
jae
jle
ljmp
scas
test
adcb
sbb
ret
xchg
pop
push
pop
iret
arpl
movsl
sub
push
js
cmp
call
ret
mov
into
fcomps
pop
jns
mov
into
sarb
add
repnz
sbb
lods
lds
sub
push
mov
mov
jge
test
sbb
add
aaa
bound
or
inc
inc
jl
inc
ret
push
cmp
xor
jnp
sbb
pop
jmp
cmp
loope
inc
or
cmpsb
das
push
cmp
pop
push
mov
mov
xor
shrb
or
sub
mov
sarl
inc
arpl
lret
lahf
test
ljmp
stos
add
mov
xor
scas
push
pop
cmp
les
ret
push
fnsave
fdivl
sub
rcl
mov
mov
shrb
add
adcb
or
push
or
and
cmp
iret
sub
movsl
ljmp
lcall
test
rep
sahf
out
leave
push
test
or
idivl
mov
mov
movsl
xchg
add
adc
or
ss
jo
and
dec
adc
xor
jbe
sbb
add
or
dec
inc
into
adc
pop
cmc
ds
jle
mov
dec
loop
int3
enter
js
xchg
and
add
or
jo
shrd
int
mov
out
out
xor
xor
xchg
in
mov
iret
sub
and
shl
sahf
pop
adc
jl
ret
cld
andb
mov
add
cmp
or
sub
add
daa
jmp
cld
mov
aad
sti
push
nop
test
and
jecxz
inc
sti
fcom
flds
xor
pop
inc
mov
lea
mov
call
aaa
mov
pop
inc
mov
push
dec
les
fistl
sub
pop
aaa
out
and
sbb
inc
dec
aas
pop
aas
fsubl
mov
mov
mov
jmp
cmp
rorl
or
lds
scas
jmp
cwtl
sub
mov
les
lret
xchg
inc
sbb
mov
lods
mov
das
dec
sub
loope
repnz
je
sub
das
es
out
insl
or
test
repnz
iret
or
mov
add
add
dec
movsl
pop
mov
adc
out
mov
mov
lds
sub
inc
mov
repz
fisttpll
aas
clc
out
add
loope
xchg
ljmp
enter
jp
jmp
mov
out
loopne
xchg
push
push
in
sbb
cmp
sub
or
cltd
icebp
ljmp
xchg
or
pop
pusha
test
mov
icebp
sbb
stos
shll
out
pop
xchg
jo
mov
and
add
push
xor
sub
dec
add
xchg
imul
push
call
pushf
pop
mov
outsl
ja
xor
xchg
jp
inc
dec
dec
repz
push
outsb
pop
dec
test
and
pop
icebp
test
int3
lock
mov
fadds
mov
shrb
lea
mov
mov
enter
xchg
inc
jnp
pop
jle
cmp
shlb
loope
fistps
add
inc
add
mov
push
test
popf
xor
cli
bound
test
stos
cmp
fsubs
mov
xor
inc
ljmp
xchg
into
adc
mov
test
lahf
adc
hlt
pop
push
mov
inc
lret
or
hlt
xchg
ficompl
iret
cmp
pop
test
dec
fimuls
xchg
inc
pop
rclb
fisttps
mov
or
push
push
repnz
cmp
jb
jge
or
sbb
dec
push
add
inc
jl
xor
dec
dec
cwtl
pop
push
sbb
ds
scas
aaa
adc
int3
cmp
sbb
xor
js
cmpsb
mov
and
cld
fcmove
stos
push
hlt
daa
iret
lret
jp
cli
jno
testl
cmp
out
dec
movsl
add
and
lahf
adc
cmp
gs
in
test
xchg
push
sbb
pop
pop
int3
pop
js
lock
add
movsb
push
jo
loope
mov
pop
mov
js
and
call
or
ss
pop
pop
testb
stos
cmp
movups
and
test
subl
mov
sahf
lcall
mov
sbb
sahf
add
test
test
jg
cwtl
shll
mov
fists
fcompl
ss
and
fcoms
xchg
rcrl
pop
or
cmpsl
ja
add
xor
movsl
loop
sbb
adc
push
cld
add
fsts
rep
adc
or
out
cs
jb
xor
mov
in
stc
add
decb
pop
gs
insb
es
pop
das
pop
mov
imul
pop
push
xchg
cmpsl
rcrl
adc
push
xlat
lock
push
sub
stc
jge
adc
out
jmp
add
cs
nop
pusha
cwtl
sub
rcl
xchg
inc
push
lods
cmc
fnstcw
mov
jecxz
pop
cli
dec
ss
popf
dec
or
mov
cs
mov
inc
pop
cmc
sbb
mov
dec
scas
jbe
fstpt
mov
pop
ficoml
mov
aas
jnp
mov
dec
pusha
pop
data16
dec
rcrl
mov
nop
cwtl
jecxz
fnsave
stos
mov
inc
ds
mov
sti
xorb
sub
das
daa
jle
mov
test
jno
ret
pusha
scas
mov
je
out
insl
repnz
dec
test
ljmp
fstpt
sbb
ss
and
mov
mov
rcrb
fwait
xchg
test
in
xor
mov
lods
fnsave
jns
add
push
ljmp
adc
jbe
fimull
xchg
cwtl
lock
test
xchg
add
bound
xor
cmc
nop
mov
insb
cmp
test
lret
mov
notb
pushf
sarl
adc
push
arpl
dec
add
inc
incl
inc
xor
xor
pop
loope
in
jb
xchg
dec
pop
or
xchg
cld
lods
mov
jb
addr16
xchg
outsl
dec
xchg
inc
out
or
repnz
mov
jg
dec
lea
jmp
inc
mov
incb
std
mov
jns
test
xchg
xchg
mov
and
xchg
out
movsl
dec
sub
mov
mov
mov
sbb
scas
ljmp
pop
mov
into
pusha
cmp
jns
xor
jle
or
adc
push
inc
push
or
pop
push
mov
push
nop
mov
shll
mov
push
popf
scas
dec
mov
lret
adc
jbe
iret
orb
xchg
lret
mov
hlt
cmpsl
lahf
repz
jne
or
outsl
xchg
pop
inc
jbe
lods
fimull
sbb
movsb
ljmp
sub
vmovhps
mov
xor
cld
movsb
xchg
and
push
inc
mov
leave
sbb
mov
or
mov
dec
mov
pop
mov
xor
in
scas
push
push
xchg
cmp
jbe
inc
sub
in
in
xlat
enter
daa
into
imul
lods
cmpsb
lds
or
sub
imul
movsl
or
and
out
dec
lahf
out
push
push
add
or
jo
add
push
in
pop
cli
xchg
pop
xchg
pop
js
loop
pop
inc
shrl
loope
cmp
sub
mov
outsb
test
adc
in
jg
mov
cmpsb
loop
icebp
je
pop
outsl
pop
and
cmp
repz
out
scas
sub
clc
xor
ss
aad
fcmovnu
repz
ljmp
sbb
push
sahf
xor
mov
sbb
sbb
test
mov
jge
mov
lcall
jne
in
cmp
cmp
dec
add
imull
fs
xor
stc
cmp
addb
jno
into
fsubrs
cmc
int3
imul
outsl
outsb
lods
mov
inc
fwait
mov
adc
loope
add
data16
adc
add
mov
cli
xor
popf
cmpsl
jne
fs
sub
mov
cmp
sub
mov
dec
add
adc
xor
mov
push
repz
pop
push
xchg
sub
sbb
dec
cmpsb
stos
xlat
das
jb
sub
mov
xchg
push
jmp
rol
cs
pop
xchg
aad
add
dec
xor
jge
and
je
and
jecxz
mov
dec
xchg
add
sub
xchg
xor
push
les
loopne
push
dec
lcall
pop
jge
inc
adc
push
inc
and
aas
sbb
jb
xlat
cmpsl
dec
xlat
dec
in
fadd
shr
sahf
cltd
imul
daa
add
cld
rolb
mov
scas
pop
xorl
inc
pusha
mov
aas
jp
sahf
mov
lock
push
push
shrl
mov
pusha
xchg
dec
aam
nop
pop
ret
out
dec
es
sbb
iret
pop
cmpsl
int
ja
inc
int3
popf
icebp
mov
call
mov
pop
push
and
dec
and
pop
not
cmp
outsb
add
add
xor
push
jns
fstp
cltd
clc
cmp
pop
cltd
ljmp
mov
stos
leave
dec
in
out
mov
lahf
xchg
fistpll
dec
push
rorb
fiadds
inc
mov
cltd
pop
push
xor
jle
mov
outsl
repz
jp,pt
test
mov
sbb
pushf
mov
fwait
sbb
insb
add
push
aam
loope
inc
xor
and
aad
inc
in
cmp
xchg
pushf
xchg
ret
mov
test
pop
sub
ja
dec
jp
mov
jge
mov
mov
push
imul
pop
jne
push
cltd
mov
in
push
out
fstpl
outsl
jns
xor
xchg
xchg
inc
daa
xorl
in
xor
or
add
repz
xorl
pop
aad
or
cmpb
shl
in
test
cmp
xchg
add
stos
adc
inc
sbb
jnp
push
xor
push
or
and
insb
sub
push
iret
dec
aam
and
mov
or
imul
out
push
adc
push
adc
inc
dec
ret
negl
repnz
hlt
repnz
mov
mov
push
cmc
mov
fiaddl
cs
xchg
mov
mov
pop
push
andb
pop
push
lds
inc
rclb
push
repnz
movsb
and
xchg
push
nop
mov
or
jge
les
aaa
lahf
aam
or
add
adc
popa
or
jecxz
popf
xor
mov
movsb
scas
cmc
mov
xchg
cmp
flds
cmp
mov
add
enter
daa
int
jecxz
loopne
lahf
jno
inc
jno
push
mov
cmp
cmp
jmp
adc
pushf
xchg
and
add
cmc
jbe
or
faddl
cmpsl
xchg
xor
adc
fimull
pop
lods
inc
js
push
es
mov
loope
or
fdivl
pushf
sub
push
add
adcb
mov
add
orb
sbb
fstpt
and
or
push
jno
cmpsl
int
dec
sub
xchg
and
inc
scas
mov
push
xor
sahf
xlat
imul
pop
popf
sub
xor
cli
mov
mov
sbb
adc
inc
ss
aam
sbb
imull
fs
mov
cmp
push
mov
into
mov
lret
xor
popa
outsl
dec
add
inc
stc
leave
js
adc
mov
push
data16
jnp
lods
cmpsb
imul
add
fucom
lods
mov
cli
or
lock
in
iret
pop
ds
pop
cltd
push
xchg
inc
mov
loopne
jmp
pop
insl
mov
adc
xchg
stos
imul
lcall
pop
movsl
fnstcw
mov
xlat
outsb
dec
mov
ficoml
in
mov
inc
sub
sbb
xchg
pusha
jbe
aad
sbb
nop
push
xor
inc
xor
call
je
in
gs
dec
inc
push
bound
lea
out
call
mov
adc
xor
dec
test
fistpl
push
inc
fwait
mov
inc
sahf
rcrb
aas
mov
push
decb
jecxz
and
or
data16
pop
in
std
mov
xorl
dec
cmp
popf
jbe
lret
loop
jg
aam
aaa
mov
adc
das
in
andl
mov
mov
es
add
jb
dec
lahf
into
stc
cmpsl
int3
xor
mov
mov
sbb
mov
xchg
sbb
mov
adc
repz
sub
cmp
or
scas
ffree
pop
jecxz
js
into
xchg
sahf
rorb
push
lods
popa
jmp
mov
stos
mov
dec
sub
es
das
push
lods
push
jecxz
pop
inc
les
lret
pop
sbb
jb
add
jge
test
fcmove
xchg
subb
insb
mov
or
mov
fwait
dec
and
push
test
add
add
shll
test
or
in
push
pop
xchg
jmp
or
insl
fcompl
pop
ja
fiadds
dec
insl
mov
imul
add
aad
jo
jnp
mov
pop
leave
jns
gs
pop
dec
jmp
out
sub
sub
jle
inc
addr16
stc
jp
lahf
pop
mov
push
dec
insb
test
mov
jle
dec
cmp
xor
mov
cld
insl
sub
shr
mov
mov
jae
xchg
aad
int
loop
stos
fcompl
cmpsl
push
mov
push
gs
xchg
cs
and
test
popa
imul
push
pop
dec
insl
adc
lret
ret
adc
xlat
insb
hlt
cmp
xchg
out
inc
rcll
ljmp
outsb
xchg
or
loop
dec
int3
jp
ficompl
enter
imul
stos
out
movsb
mov
fcoms
frstor
xchg
mov
dec
cli
jge
div
sbb
pop
inc
or
cmp
jl
or
dec
lcall
xor
out
es
aam
and
sub
cmp
in
outsl
pop
or
add
mov
lcall
cmp
cmp
dec
mov
sub
andb
push
mov
movsl
pop
adc
and
push
add
stos
std
int3
test
xchg
sbb
popf
adc
add
or
mov
arpl
hlt
add
fsubl
mov
lds
xchg
mov
lret
rcrb
jge
andb
sbb
push
mov
sub
and
pop
stos
push
je
mov
fdiv
aas
sub
xchg
pop
xor
jns
inc
in
jb
cwtl
nop
orl
inc
sahf
jp
adc
loopne
arpl
shlb
mov
orb
loopne
adc
loop
ss
mul
fadd
or
sub
cmp
rcrl
cmp
idivb
movsb
push
into
sahf
fldt
xor
popa
cmp
adc
lock
data16
sti
es
stos
inc
sbb
aas
loop
xor
in
cmp
sti
push
mov
cmp
pop
mov
adc
daa
sub
outsb
xchg
les
lds
inc
push
addr16
scas
jns
sbb
lds
lret
sub
mov
pop
cs
pushf
jmp
mov
or
aad
cwtl
add
lock
sbb
pop
pop
sbb
add
inc
cs
push
cmpsb
mov
shr
pushf
call
xor
xchg
ret
mov
lcall
dec
lods
inc
and
adc
pop
fst
jb
lcall
repnz
mov
imulb
and
dec
rcrb
cmp
popa
stos
and
push
jl
push
pop
xor
sub
xchg
push
fisubrl
les
call
aam
lret
or
js
insl
cmpsl
mov
jmp
lret
lahf
cs
pusha
push
inc
lods
cmc
sub
mov
lahf
adc
fwait
pusha
pop
mov
xor
push
rclb
and
or
test
jmp
fucom
mov
mov
pusha
ljmp
or
mov
out
jnp
jae
insl
pop
sbb
xlat
aad
test
popl
insb
std
jnp
int
lahf
xor
lea
xchg
dec
dec
or
loopne
popa
rclb
jae
add
sbb
ret
adcl
dec
je
add
mov
add
or
fsubrl
cmp
shlb
adc
adc
cmpsb
inc
ja
lret
pusha
ret
stos
lods
mov
dec
ss
adc
test
lret
jp
out
fwait
push
repz
cmp
adc
out
out
xchg
sbb
jns
shlb
pop
je
pop
rcr
mov
iret
jg
lock
jnp
or
enter
cmp
mov
fistps
movsb
add
jmp
lods
pop
jae
cmp
push
nop
xlat
jg
shl
repnz
dec
add
push
movsl
xchg
out
adc
leave
lds
xchg
je
inc
push
lahf
cld
stos
adc
in
iret
lahf
cmp
ret
movsb
pop
jnp
fdiv
mov
arpl
pop
lahf
inc
adc
push
repz
fisubl
jg
cmp
int3
gs
mov
adc
xchg
lds
lock
adc
sub
push
movsb
aaa
repz
push
jecxz,pn
jbe
out
data16
push
aas
sbb
pop
aaa
sbb
push
loopne
mov
mov
jle
or
cs
test
push
jb
inc
andb
mov
mov
mov
cltd
cwtl
push
cmp
inc
aad
cmpsb
mov
cwtl
inc
enter
daa
lret
cbtw
cmp
aas
jno
and
sub
dec
int3
cmp
loop
xor
dec
movsl
push
or
and
and
push
jle
xor
xchg
out
into
xor
cmp
fistps
rolb
std
cld
dec
push
fsubp
or
std
fmul
mov
jb
lods
xchg
stos
adc
jne
sti
xlat
cld
filds
imul
push
ja
push
int
into
subl
mov
lcall
int3
mov
inc
sbb
icebp
push
test
test
outsl
pop
xchg
mov
enter
or
stc
aas
adc
xchg
add
xor
subb
in
mov
lret
push
shl
pushf
cmp
outsl
cmp
inc
in
into
cmpl
xor
sub
outsl
or
mul
call
stc
aaa
and
add
mov
lcallw
lods
je
jp
imul
stos
dec
mov
jb
mov
in
movsl
add
xchg
fld
shll
xchg
loopne
add
adc
mov
les
push
pop
xchg
jno
push
sbb
add
in
sbbb
add
mov
xchg
mov
sbb
es
aad
jns
nop
int3
pop
test
dec
mov
pop
fsts
jns
jecxz
push
ffreep
push
pop
fimull
popf
mov
mov
out
pop
roll
dec
pop
loop
mov
test
test
ljmp
push
dec
push
dec
cmp
aaa
and
xchg
jp
aad
mov
std
icebp
scas
add
mov
popa
adc
jl
xlat
cld
repz
dec
rorb
mov
dec
pop
lock
xor
das
mov
scas
aaa
mov
pop
in
ret
pushf
leave
jmp
cmpb
mov
xchg
dec
xchg
mov
mov
aaa
mov
lods
pusha
ficoms
mov
ret
and
pop
icebp
imul
aaa
psrld
push
sub
mov
mov
repnz
push
ret
fisttpll
add
xchg
sbb
sbb
pop
cltd
mov
pop
stos
xchg
sbb
out
ficoms
xchg
mov
jl
arpl
sysret
ds
jg
mov
popa
adc
mov
js
inc
dec
jae
jb
fdivrl
push
xchg
sti
inc
sbb
xchg
fcmovnbe
sbb
iret
or
push
stos
fwait
cmpsl
lcall
sub
push
add
jl
xor
mov
cmp
dec
in
test
mov
aad
mov
pop
push
jp
dec
cmp
dec
push
xchg
push
inc
inc
fists
mov
dec
repz
fidivl
pop
xorb
mov
bound
lahf
jns
mov
xchg
repnz
adc
inc
jnp
sub
je
adc
out
jp
mov
mov
aaa
jnp
and
in
dec
int3
pusha
cmpsb
mov
fistpll
fidivs
jl
shr
nop
jns
inc
cmp
nop
jae
and
push
push
ljmp
sbb
and
stos
jns
stc
and
jno
sbb
out
imul
scas
xlat
ret
xchg
adc
push
mov
ds
ret
fstpl
lea
rcll
sbb
fisttpll
in
pop
enter
jmp
jb
pop
ficompl
jmp
xchg
nop
sub
push
jbe
xchg
mov
mov
in
add
shl
scas
mov
jle
xchg
ja
insl
movsb
ret
push
jge
jle
shl
gs
or
sbb
cli
aaa
or
or
dec
or
mov
dec
js
inc
push
mov
les
popf
insb
dec
scas
xchg
fcmovne
and
repnz
cmp
inc
fs
movsl
cmpsb
inc
push
into
in
cmpl
pop
cmp
gs
enter
out
cmp
xchg
out
ds
mov
or
lahf
aad
push
push
test
add
pushf
xchg
fnstenv
cmp
and
xchg
pop
and
js
jae
pop
cmp
shrb
fimuls
loope
pop
pop
fdivl
adc
mov
stc
outsb
adc
jge
push
and
orb
pop
mov
xor
and
add
push
jp
cmpsb
int
mov
sub
mov
lcall
stc
mov
test
sbb
mov
incb
push
pop
xor
cmc
and
adc
xor
sbb
pop
cmpsl
imull
jecxz
rorl
cltd
or
es
call
sbb
outsl
ljmp
stc
out
in
sub
push
mov
data16
lods
pop
or
test
mov
xor
xchg
in
adc
sub
cld
je
gs
pop
ljmp
fdivrl
imul
rclb
mov
cmp
lret
inc
xlat
sub
xor
xor
push
pushf
inc
inc
dec
jmp
cmpsl
int
mov
aad
mov
dec
dec
scas
shl
insl
fst
fxch
popa
aad
jns
cmpsb
jecxz
mov
lea
fidivs
pop
je
iret
adc
adc
inc
fldt
shll
or
inc
xor
pop
inc
out
adc
dec
jb
sub
dec
mov
gs
sti
shll
es
pop
sub
cwtl
sbb
cwtl
mov
into
mov
movl
das
jg
mov
out
mov
sub
mov
cmp
mov
ljmp
es
lret
dec
dec
nop
inc
aad
leave
add
push
push
enter
in
mov
test
pop
mov
sarb
popa
mov
prefetcht1
test
fnsave
mov
xchg
pop
push
push
outsl
or
sub
dec
enter
in
out
inc
dec
out
xchg
sti
pop
push
ds
xchg
pcmpgtd
mov
cltd
cmp
mov
lods
jmp
mov
jnp
push
dec
fcmovu
ja
push
inc
mov
xorl
jns
mov
jnp
push
xchg
aad
add
pop
iret
lcall
pop
xor
or
mov
mov
sub
dec
pop
sbb
mov
inc
fnstenv
mov
jmp
add
fisubrs
jne
shlb
pop
sbb
faddl
jns
iret
jo
mov
pop
loopne
ret
sar
sub
outsl
shll
mov
sub
insb
adc
stc
adc
call
jge
inc
in
fistps
addr16
dec
jg
jmp
inc
lcall
push
jno
popf
pop
xlat
xlat
mov
lret
in
lods
andl
xchg
fsubrs
popa
aas
push
cmp
adc
inc
jecxz
idiv
in
pop
jmp
incl
jmp
imul
mov
sub
fcmove
cmp
xchg
out
das
int3
cmp
mov
lds
mov
cld
shrb
mov
shll
leave
out
cltd
mov
dec
aam
push
data16
jge
out
sbb
push
mov
or
sub
fbld
aad
out
aas
push
outsl
loope
xor
clc
push
scas
jno
lret
and
ror
cmp
sub
repz
cmpsb
les
in
push
js
daa
leave
dec
repz
xlat
sub
pop
fstpt
rcrb
mov
or
popf
lahf
adc
lock
cmpsl
xchg
xor
lret
out
xchg
pop
dec
adc
dec
xor
jnp
nop
push
test
sahf
fsubl
ss
sub
dec
outsb
jae
int
lahf
hlt
data16
fimuls
fwait
pop
sbb
in
mov
aaa
sub
push
jge
out
or
gs
pop
mov
pop
lcall
jnp
push
xor
sbb
mov
sahf
arpl
test
aas
andb
jg
pop
adc
insb
loopne
fs
es
ss
mov
fdiv
out
imull
repnz
push
shll
or
scas
sbb
inc
mov
dec
xor
mov
loop
das
in
stc
movsl
pop
push
adc
jle
add
xor
add
or
mov
sub
out
notb
cli
fsubs
fucomp
jnp
mov
pop
sbb
gs
mov
loopne
xchg
pop
jmp
push
mov
xor
lret
repz
mov
sbb
jbe
sub
push
sub
inc
movsb
pushf
in
mov
push
cs
addr16
aad
push
out
dec
or
jmp
je,pt
push
adc
jo
push
pop
sub
call
mov
pop
pop
daa
test
in
xor
lret
fistpl
ficomps
xchg
inc
inc
mov
add
push
ret
aas
xor
inc
insl
dec
sub
repnz
movsb
divb
or
std
aas
insb
mov
mov
mov
mov
subl
mov
mov
xchg
mov
adc
movsl
xor
mov
repz
aam
push
xor
es
enter
adc
cmpsl
enter
inc
outsl
inc
icebp
in
lcall
lods
sub
or
add
push
loopne
pop
xchg
xor
in
popa
fistl
mov
jo
push
dec
loop
fstpl
clc
lods
call
loop
push
popa
inc
pop
fs
neg
mov
movsb
xor
sbb
add
out
xor
sbb
adc
ljmp
jae
test
call
pop
sbb
out
enter
mov
fwait
add
hlt
imul
cld
jnp
xor
add
in
push
xchg
daa
cltd
mov
or
ja
movsl
adc
cmp
inc
jo
or
cld
sbb
mov
push
or
cmp
cmp
nop
lds
ficomps
inc
sahf
push
push
jp
mov
hlt
insb
xor
jnp
xchg
je
xor
cmp
sub
xchg
and
popa
jmp
dec
ret
or
popf
inc
popf
pop
mov
or
adc
sub
push
sbb
sahf
imul
scas
popf
cwtl
cs
je
sahf
adc
imul
mov
div
imul
inc
ffreep
xchg
push
adc
fiaddl
push
popa
int3
add
fdivrp
and
vrcpss
pop
pushf
xor
repnz
push
leave
gs
sub
data16
pop
dec
fstpt
stos
push
sbb
test
or
jnp
jbe
xchg
jl
adc
dec
push
cmp
stos
xor
push
jge
scas
push
lods
jl
je
sarb
dec
push
push
fwait
pop
inc
inc
add
cmpsb
inc
jmp
in
dec
cmpsl
xchg
mov
push
cmp
add
sarl
sub
sahf
and
jg
sub
lcall
and
xlat
movsl
push
mull
test
mov
cmp
sub
mov
add
mov
pop
mov
sub
fmul
mov
sub
outsb
pop
pop
adc
push
jns
hlt
xchg
scas
subb
hlt
mov
popl
and
pushw
andb
int
mov
sub
rcll
lcall
rorb
pusha
sahf
push
fbstp
cld
mov
cmpb
jg
pop
sbb
cltd
out
mov
inc
gs
stos
adc
push
cmp
mov
mov
sub
lret
sarl
push
or
and
jbe
sbb
or
push
loop
call
scas
adc
call
data16
mov
cmpsl
nop
add
xor
cmp
sti
lret
incb
fsubs
mov
loopne
lcall
popa
mov
or
cltd
imul
and
adc
xchg
mov
aad
cmp
xor
sbb
fstpl
stos
mov
dec
inc
dec
aad
jne
nop
pop
mov
dec
insb
roll
push
fnstcw
dec
inc
je
ret
jg
repnz
pusha
ds
outsb
pop
call
das
fwait
cmp
adc
daa
aam
sbb
push
mov
pop
dec
jmp
inc
ds
inc
and
xlat
test
dec
mov
and
push
push
rol
or
idivb
lahf
std
out
sbb
cmp
mov
xor
je
cmp
or
loope
mov
mov
lock
das
inc
and
mov
stos
pop
inc
aam
sub
mull
or
insl
inc
shl
dec
xchg
cmpsl
jae
mov
mov
lock
push
fimuls
and
lock
pop
mov
xor
pusha
movsb
pop
sub
mov
mov
adc
mov
clc
lahf
pusha
xchg
xchg
xor
popa
pop
js
pop
mov
lret
lret
or
xchg
mov
push
hlt
pop
hlt
mov
xchg
add
push
in
inc
lcall
or
sahf
test
push
jne
outsl
adc
sbb
pushf
rcl
pop
push
pusha
or
mov
fwait
xor
mov
add
or
pop
lcall
pop
mov
in
les
mov
cmp
mov
mov
aaa
inc
pop
dec
pop
mov
leave
imul
pop
call
shr
pop
lock
or
cmc
add
test
out
sub
gs
add
and
pop
das
insb
pushf
test
jnp
stc
mov
push
push
push
in
ss
ja
lods
fists
dec
pop
jmp
pop
fsubr
jae
js
push
pushf
ficoml
insl
inc
mov
push
dec
lcall
inc
lods
in
sbb
aaa
cmpsl
imul
subl
mov
test
ret
push
pop
push
in
adc
mov
cmp
enter
xchg
mov
push
out
adc
xchg
xchg
inc
imul
mov
out
fisubs
xchg
cltd
shlb
jg
mov
or
leave
fsubrl
movsb
arpl
push
push
adc
pushf
lods
mov
mov
lcall
dec
pop
daa
add
cmpsb
xchg
dec
lds
mov
xor
scas
mov
shlb
pop
fidivs
cmp
clc
inc
push
pop
sbb
fucom
cmpsb
lret
in
ss
enter
daa
movl
jno
mov
sub
mov
cmp
add
ds
ficoml
sub
push
lret
test
mov
shrb
insb
enter
cmc
idivl
mov
pop
stc
sbb
pop
xchg
loope
bnd
ja
xchg
sub
or
xor
pop
shl
inc
ret
and
add
sbb
push
mov
cmp
sub
push
adcl
fistpl
inc
sub
test
adcb
cmp
mov
sahf
test
dec
xlat
sbbb
inc
mov
pop
bound
mov
mov
or
outsb
in
insb
mov
imul
nop
loopne
movsl
and
cmpsb
cmp
pushf
orl
mov
into
or
xchg
jle
gs
imul
sub
dec
stc
adc
roll
mov
mov
lods
adc
out
out
scas
scas
cli
lods
iret
xor
scas
in
push
inc
jge
jns
jae
gs
gs
adc
loopne
sbb
daa
sub
adc
sbb
imul
ss
lods
mov
sbb
in
js
xlat
call
dec
jmp
inc
aam
jmp
ror
cs
addr16
out
nop
cmp
in
lret
out
inc
cmpsb
popf
scas
fnstenv
push
je
addb
arpl
pop
aad
fucomi
mov
fld
scas
dec
aam
lea
adc
push
dec
pop
mov
pop
repnz
inc
lds
inc
inc
movnti
jae
dec
jb
push
rorb
fadds
test
lea
std
lea
out
clc
testb
icebp
or
lahf
jmp
mov
sarb
mov
push
xchg
das
pop
xchg
jno
shlb
mov
dec
cwtl
adc
mov
jge
sub
adc
jb
mov
xchg
fs
or
out
mov
dec
jae
and
mov
lock
iret
inc
mov
xor
sub
stc
test
cmc
mov
std
inc
push
into
stc
inc
test
xchg
sbb
ljmp
push
pop
dec
jbe
stos
push
in
out
push
dec
xchg
rclb
push
iret
sub
xchg
add
mov
and
lea
mov
test
mov
xchg
and
pop
out
jbe
jle
clc
fwait
arpl
fldl
daa
and
cmp
lock
movsl
mul
sub
rcll
scas
out
cmc
mov
dec
les
ja
and
inc
sahf
or
jns
cmp
push
jne
mov
mov
xchg
bound
std
xchg
xchg
push
pusha
cmp
dec
xchg
subl
cltd
into
addr16
cmpb
jae
jmp
jle
jnp
push
les
sbb
in
dec
mov
fbstp
sti
add
insb
dec
inc
inc
gs
jae
jb
push
pop
mov
adc
mov
xchg
stos
inc
cmpl
cwtl
movsl
and
adc
scas
arpl
push
adc
jo
ret
or
stos
div
inc
popa
arpl
sahf
push
or
inc
fldcw
outsb
repnz
xchg
in
xchg
mov
pop
dec
adcl
xor
rorb
mov
lret
leave
push
insb
cwtl
movsb
out
xor
jbe
jge
jge
fisttpl
fsubs
or
pop
add
mov
push
sbb
shlb
fiadds
mov
lcall
push
xor
mov
cmp
cmpsb
dec
cwtl
repz
sbb
jg
daa
movb
cmp
icebp
jno
ret
test
movsl
movsl
cmp
push
sarb
loopne
push
movsl
inc
enter
pop
es
fsubrp
push
push
popf
jo
test
enter
lret
lret
not
das
dec
sbb
cmp
js
inc
dec
pop
cmp
subb
loopew
shr
and
repz
push
outsb
pushf
push
adc
mov
mov
adc
ret
sbb
mov
cmp
and
push
mov
int
imul
lcall
pop
mov
iret
in
sbb
add
test
inc
push
xorb
mov
add
fs
pop
sbb
in
sbb
push
xor
cmp
daa
stc
insb
mull
mov
hlt
cmp
cmp
jo
jbe
lock
xor
add
fidivs
rcrb
loop
idivl
lret
adc
pushl
mov
fstpl
out
push
std
cli
jno
xor
pop
in
mov
cmp
arpl
lock
adc
pop
inc
cmc
dec
adc
rclb
push
mov
xchg
inc
pop
dec
sbb
daa
xor
daa
xchg
cli
sub
and
in
or
mov
into
aad
mov
lcall
inc
or
test
xchg
in
jecxz
add
cmp
mov
add
inc
sub
in
adc
or
cmp
inc
dec
leave
movsb
inc
pop
mov
jb
rcl
xor
jbe
pusha
push
clc
testb
cld
std
xor
push
cwtl
jbe
xchg
mov
cmpsl
push
mov
mov
lret
lret
jmp
add
test
fisubrl
decb
fisubl
sbb
ret
push
xchg
ret
addr16
es
xchg
insl
adc
fimull
testl
mov
push
lods
ja
clc
mov
jno
out
lds
fstl
pop
out
sar
rolb
and
sub
test
push
mov
sub
xchg
mov
fst
mov
clc
adc
test
cmp
cltd
popa
mov
jmp
clc
add
stos
inc
shll
int
ficoms
stos
adc
psrad
jecxz
fisubrs
mov
mov
xchg
pop
dec
jbe
aad
inc
inc
pop
xchg
insb
sbb
pop
ror
push
clc
or
ret
cmc
fwait
xchg
test
push
push
or
add
inc
in
fstps
fbstp
jmp
pop
loope
mov
movsl
xchg
adc
xchg
sub
add
and
mov
xor
xchg
or
bound
jno
in
push
xchg
out
aad
imul
fwait
jns
stos
jmp
jmp
pop
cmp
iret
mov
dec
or
fbld
mov
jp
leave
mov
rclb
jnp
or
in
les
pusha
lods
ja
cmp
xchg
fwait
loop
jmp
jo
sbb
push
and
popf
mov
add
stos
mov
fdivr
sbb
out
imul
dec
push
dec
dec
cltd
adc
xchg
pop
lds
pmuludq
cmp
mov
cwtl
or
ret
inc
in
out
ficompl
pop
enter
push
pop
jle
xlat
fsubp
insb
mov
cmp
mov
sbb
dec
dec
movsb
jns
mov
jbe
ret
test
dec
aam
aam
sub
xchg
mov
or
xor
cmp
inc
dec
mov
movsb
cmc
xor
fs
scas
in
add
sarl
je
xchg
inc
inc
das
fiadds
in
add
jns
jns
mull
lds
cmp
add
sbb
sub
data16
cmp
out
movsl
dec
sbb
and
lahf
std
clc
add
jo
insb
test
shll
mov
pop
in
scas
js
push
pop
ja
subb
xchg
mov
fmul
sbb
outsb
mov
xchg
adc
and
push
sbb
mov
and
lods
push
mov
test
mov
lods
shlb
shlb
push
stc
mov
sbb
pusha
or
iret
jmp
jg
cmpl
fs
or
cmp
mov
cmp
loop
pop
mull
call
roll
push
or
je
into
rcrl
cmc
lret
dec
lods
xor
repz
outsl
inc
push
push
loop
dec
es
cmpl
add
add
fcomps
fsubrp
lds
movsb
jbe
cli
movsb
sbbb
sub
lret
loopne
sti
xlat
xchg
stos
sub
gs
shl
jp
cmp
adc
loope
les
pop
repz
sub
xchg
add
nop
sbb
bound
xlat
data16
sub
dec
mov
cwtl
push
cld
jmp
outsl
loop
js
mov
insb
cmc
imul
int3
and
je
pop
jecxz
mov
mov
call
lods
xor
pop
repz
xchg
adc
dec
lds
cltd
fistl
movsb
inc
inc
roll
fistpll
mov
sbb
test
jg
mov
pop
daa
testb
std
fistl
mov
sub
outsl
addl
ja
lret
pop
inc
add
popf
dec
out
adc
xchg
das
fldl
out
mov
loope
mov
imulb
es
sub
clc
mov
fisubl
adc
cmp
lods
loop
iret
mov
xchg
and
shrl
rcr
mov
sub
mov
mov
fwait
add
push
clc
push
cmc
pop
xchg
xchg
sbb
ljmp
xlat
pop
mov
fldz
xor
xchg
pop
xchg
sub
prefetcht0
inc
lcall
dec
sbbb
push
xor
mov
aad
ds
int3
cld
sbb
sti
push
shll
ds
mov
push
shl
add
pop
mov
shll
cmp
inc
or
sub
inc
clc
fsts
xor
test
movsl
inc
cmp
shlb
lods
cmovp
cld
fnstcw
dec
lea
add
jne
clc
mov
out
mov
cmp
jmp
jns
sti
jp
mov
xor
out
push
sub
push
or
inc
jp
call
cmp
jnp
mov
jle
add
insl
mov
sub
hlt
mov
xchg
outsb
std
xor
pop
mov
jae
xor
push
in
stos
popf
loop
aas
mov
push
mov
stos
sub
pop
sbb
cld
or
jno
scas
sub
adc
iret
cmp
insb
pop
cld
adc
hlt
xchg
xchg
je
xor
cmpsb
inc
jmp
cmpsl
or
cmp
pop
push
fimull
xchg
lcall
pop
lods
mov
mov
sbb
push
mov
mov
addb
bnd
pop
leave
inc
xlat
xor
ja
jbe
jl
jge
pushf
and
xor
mov
and
and
in
dec
adc
push
fidivs
xor
mov
xor
shlb
sub
push
adc
inc
mov
adc
push
enter
daa
les
test
stos
cld
into
jno
cltd
xchg
sub
cld
cmp
push
popa
ds
fisubs
ud0
lahf
sbb
pushf
push
inc
mov
fiadds
xor
push
pop
or
push
js
and
pop
mov
insb
push
cs
lods
lret
and
js
cmpsl
sub
pop
subb
sbb
add
sub
jb
orb
and
jmp
mov
xor
and
mov
int
mov
sub
inc
jmp
sub
mov
fsts
push
push
stos
inc
mov
orl
sbb
ljmp
mov
call
cmpsl
fs
aad
adc
insb
insb
cmp
popf
ds
and
mov
bound
out
or
dec
adc
into
mov
lret
cmp
mov
and
pop
loop
xlat
or
cmp
stos
adc
dec
stos
add
mov
mov
mov
stos
out
and
xlat
sti
divl
add
aad
xchg
push
gs
mov
adc
cltd
call
pop
push
int
push
cmpsb
lcall
int3
and
out
sbb
cmp
add
sub
out
mov
inc
xlat
mov
and
fildl
aad
xchg
stos
nop
leave
cmp
dec
call
xor
je
mov
or
insb
push
sub
or
call
sub
pop
cmpsb
adc
xchg
dec
enter
inc
push
jle
fcmovne
ljmp
mov
sub
lcall
and
inc
mov
movsl
sbb
xchg
sbbb
in
push
jnp
xor
dec
testb
repnz
leave
dec
adc
fs
insb
xchg
mov
leave
icebp
mov
lods
shrb
ret
test
test
insl
fbld
cmpsl
ret
xchg
mov
sbb
and
mov
push
and
pop
xchg
or
sub
movsb
shrb
jae
arpl
lcall
xorl
pop
aam
clc
mov
xchg
xchg
aad
adc
and
popa
mov
cwtl
xchg
stos
pop
movl
push
pusha
push
xchg
push
aaa
adc
add
int
test
sub
lea
orb
fwait
test
mov
or
mov
adc
jnp
rorb
mov
fs
add
js
and
pop
inc
stos
xor
add
int3
push
and
ja
stos
mov
jnp
jle
test
mov
arpl
push
mov
test
pop
dec
sub
jne
sbb
mov
aad
out
xchg
iret
out
bound
mov
adc
mov
jg
xchg
orl
out
arpl
cmp
or
sub
pop
insl
jp
mov
subb
jnp
daa
sub
loop
in
loop
pusha
jecxz
push
fists
in
xchg
inc
dec
sbb
push
es
xchg
and
in
test
in
popf
or
fstpt
inc
jae
stos
sahf
test
and
out
imul
cltd
scas
mov
push
xlat
xchg
adc
test
ret
ja
xor
shll
addb
mov
mov
pop
imul
loop
ljmp
mov
mov
fisubrs
test
popf
outsl
clc
rcrb
ja
ret
movsl
je
mov
fisttps
push
cmpsb
in
jbe
test
out
dec
xchg
cli
aaa
adc
sub
imul
dec
cmpl
pop
jo
add
xor
push
push
pop
push
xchg
mov
adc
add
rorb
mov
cmp
cld
mov
cmp
sub
gs
cmp
repnz
dec
jno
movsl
push
ljmp
cmp
aam
push
push
inc
add
das
inc
xor
test
js
icebp
pop
xor
js
jae
pop
cmc
jbe
push
xor
ret
push
mov
sub
mov
bound
dec
sub
mov
or
ds
xchg
das
push
and
lret
push
popl
mov
pop
stos
pop
jg
mov
ljmp
pop
sub
test
mov
jmp
mov
mov
rclb
dec
or
sbb
fcomps
dec
mul
scas
mov
jno
test
scas
outsb
bound
or
or
out
mov
xor
aad
outsl
add
loop
xchg
pop
stc
out
addr16
in
or
xchg
sbb
popw
divl
lods
lods
mov
mov
enter
dec
sub
or
nop
xor
aaa
lods
in
std
enter
push
icebp
out
cltd
gs
push
loopne
jne
pop
mov
xchg
dec
andnps
mov
repz
sbb
fmul
out
xlat
in
dec
sub
or
out
sub
jmp
sbb
cs
movsb
loop
inc
push
pop
inc
bnd
fidivs
and
outsl
outsb
int3
lea
sub
stos
sub
pop
pop
jae
adc
jns
mov
inc
loope
add
lods
jae
aas
out
push
jb
adc
hlt
cmc
mov
ss
stos
pop
std
sub
cwtl
cmpsl
negb
mov
addr16
xorl
jp
cmp
mov
cmp
das
fwait
subb
cmp
mov
es
add
insl
jae
dec
insl
nop
cmpsl
ret
mov
out
push
shrb
dec
push
mov
fidivrl
testl
xchg
sub
sub
outsb
callw
dec
push
push
ficompl
sti
clc
xchg
notb
xchg
push
ljmp
mov
or
mulb
push
cmp
ud0
fadds
pop
jns
mov
or
mov
nop
into
dec
dec
stos
fwait
or
mov
bound
pushw
shlb
sbbl
mov
add
xchg
pushf
fstps
loop
or
in
imul
mov
inc
mov
repz
pop
ss
ja
dec
add
jmp
fiaddl
jnp
mov
hlt
or
dec
or
mov
pop
jne
jb
jns
loope
test
lret
mov
xchg
dec
cmpsl
and
pop
out
sub
dec
rol
addr16
add
inc
loope
inc
pop
push
insb
mov
scas
jnp
pop
aam
add
dec
pusha
jle
lock
aas
pop
xchg
adc
ja
dec
popa
icebp
inc
xchg
xor
jae
add
push
imul
popf
xor
adc
test
pop
and
movsb
lds
loopne
scas
out
divb
adc
aaa
ret
stos
pop
push
icebp
hlt
sub
sbb
gs
or
xor
inc
push
fcmovu
mov
jecxz
dec
cmp
int3
test
loop
or
sub
and
mov
mov
mov
movsb
leave
das
sarb
sbb
mov
jbe
dec
jbe
std
in
xchg
sbb
adc
or
mov
add
out
xchg
dec
dec
lock
mov
xor
jne
loop
mov
sub
cltd
pop
xchg
push
pop
mov
inc
fcompl
cmpsb
pop
bound
mov
dec
jnp
ret
cmp
mov
jno
mov
out
mov
pop
ds
sbb
pop
push
or
push
jmp
jno
add
jno
xor
lahf
inc
cmp
sub
inc
push
js
push
jp
xor
mov
loope
gs
fmul
hlt
fildll
push
scas
push
outsb
sub
shrb
pop
hlt
sub
sbb
dec
mov
jle
and
fadds
xchg
hlt
xor
fiadds
cmp
sub
scas
lcall
stc
mov
cld
negb
es
push
jg
enter
mov
xor
adc
ss
jne
cmp
adc
cmp
mov
mov
jge
or
xchg
or
cld
into
jl
shl
dec
wrmsr
sub
outsl
loop
jmp
stc
cmpsb
push
pop
adc
out
icebp
add
fsubrl
lods
xchg
in
clc
mov
mov
outsl
cli
cmp
add
jae
in
dec
adc
out
gs
dec
loopne
mov
sub
and
imul
repz
loopne
xchg
dec
push
lds
adc
mov
and
dec
mov
cltd
push
inc
jmp
pop
hlt
mov
stc
xor
cmpsb
je
inc
add
imul
shrl
fsub
mov
fdivrs
out
call
sub
pop
or
or
hlt
mov
scas
icebp
ret
inc
push
ds
mov
dec
jb
xchg
and
imul
rcrl
jne
rclb
pop
mov
pop
xchg
mov
or
lret
push
cmpsb
lret
cmpsl
mov
mov
cwtl
js
and
mov
hlt
ss
inc
lcall
sbb
xor
cmpsb
inc
dec
push
sub
stos
push
and
movsl
lods
and
mov
std
cmpsl
push
and
xchg
fwait
cmp
push
mov
push
xchg
dec
sub
and
test
xchg
mov
test
push
popf
and
clc
add
and
pop
jmp
cld
pop
movsb
jge
stos
std
fsubl
pop
xor
xchg
xor
push
push
js
divps
add
mov
cltd
rep
push
xor
xchg
xchg
imul
addl
imul
adc
stc
shrb
fwait
dec
adc
aas
add
scas
lods
pop
call
shll
xor
jno
in
pop
mov
mov
aas
cmc
mov
icebp
push
inc
ja
pop
fs
fisubrs
out
and
orb
mov
jbe
pop
hlt
push
out
push
xlat
leave
bound
jns
adc
cmc
xchg
fcmovnu
out
pop
mov
inc
and
jp
jle
mov
cmp
jnp
push
std
jle
orl
pusha
sbb
fists
xor
jmp
pushf
jb
jae
dec
cmc
push
testl
rclb
ja
stos
test
dec
and
in
repz
xor
xchg
scas
push
xchg
adc
call
aam
mov
xor
mov
inc
push
arpl
pop
inc
hlt
jmp
or
scas
in
insb
inc
jmp
sbb
lahf
inc
jecxz
xchg
pushf
out
cmp
jb
cmp
stos
ss
rcl
out
pop
xchg
imul
push
inc
mov
jbe
pusha
or
in
xchg
sbb
add
aaa
xchg
inc
push
or
dec
xor
xchg
lods
dec
jl
andl
data16
xchg
ljmp
or
cmp
jno
sub
movb
xchg
cmpsb
fdivl
aad
mov
jo
daa
roll
mov
lret
mov
cmp
mov
movsl
fs
mov
loopne
test
mov
cmp
incl
mov
xchg
sub
cld
cwtl
js
lret
notl
jae
cld
push
push
mov
fdivrl
in
cmc
jl
outsb
mov
mov
rolb
fwait
outsb
ror
xorb
mov
into
cli
mov
and
and
xlat
int
dec
and
insl
icebp
xor
test
adc
push
push
out
mov
add
pop
pop
sahf
jnp
xchg
test
faddl
movsl
out
mov
dec
mov
fs
fstl
js
sti
ss
cmpsl
clc
cmp
into
cld
dec
mull
inc
lret
cld
rcr
and
mov
or
push
pop
cmc
out
divl
xchg
nop
outsl
rcrl
mov
loope
adc
mov
add
lods
jp
adc
mov
lahf
mov
mov
fsubr
roll
mov
aaa
cmpl
out
hlt
pop
loope
inc
adc
hlt
xchg
imul
shl
repz
xchg
movzbl
sbb
dec
jo
xlat
bound
mov
pushf
inc
dec
jae
push
xlat
sbb
add
not
mov
push
nop
pop
dec
ljmp
lcall
sbb
push
jecxz
push
insb
jne
adc
imul
test
xchg
pop
mov
shrb
fcmovnbe
testb
repnz
inc
out
inc
lahf
inc
loop
insb
aas
sub
dec
mov
loop
loop
jmp
cmpsb
shr
and
testb
std
ja
pop
cwtl
sbb
rcrl
hlt
jns
andl
push
lret
push
or
mov
or
jge
movsb
das
pop
mov
mov
stos
out
pop
aam
std
ds
xor
jp
sahf
lods
fsubrl
mov
add
fst
mov
lods
mov
pop
mov
insb
and
sub
into
not
and
mov
inc
mov
push
cmpsb
push
pusha
and
clc
cmp
fstl
jp
imul
popf
pop
dec
cs
stos
in
lea
xchg
jp
jb
icebp
ret
mov
test
sub
xor
push
pop
mov
xchg
xchg
adc
push
cmp
call
movsl
xchg
roll
call
mov
dec
cmp
add
leave
rclb
xor
pop
shl
insl
sub
xchg
lahf
jae
mov
lods
fwait
mov
lods
enter
repz
rorl
fnstsw
xlat
stc
dec
shl
jg
lret
fistpl
out
xor
bound
mov
jns
cmpsb
lcall
lcall
out
into
inc
or
push
and
jp
insl
call
insb
mov
jle
ds
mov
pusha
mov
pop
fbstp
add
jmp
cmpsl
pop
push
jae
loope
push
icebp
xchg
mov
mov
add
into
stos
mull
or
jecxz
jae
lcall
scas
mov
mov
adc
mov
in
mov
jmp
arpl
inc
inc
mul
mov
push
push
rcl
imulb
int3
jle
cld
pop
imul
in
xor
cmpsl
shr
sub
mov
pop
mulb
enter
jmp
pusha
sbb
shlb
push
stos
or
xchg
sahf
add
jecxz
dec
into
mov
and
sub
or
and
fstpt
pop
enter
dec
cmp
push
lock
pop
jg
in
xchg
stc
enter
daa
rcrb
ja
cmp
hlt
je
les
inc
ds
nop
movsl
imul
lahf
cwtl
andb
xchg
movsl
pushf
add
repnz
ror
pop
test
out
js
aad
pop
mov
call
loope
nop
call
sub
cmovs
mov
jp
fsubrp
test
in
jge
addb
sbb
or
mov
sbb
and
xchg
lods
in
push
sub
cld
popf
pop
sub
or
lods
cwtl
add
xchg
hlt
pop
test
ret
adcb
jg
or
mov
scas
dec
adc
loope
ss
in
xchg
jnp
fmuls
mov
lret
push
shll
cmp
dec
je
or
outsb
into
inc
jb
cmc
scas
call
xor
out
loop
add
adc
fimuls
add
daa
pop
data16
or
mov
lock
xor
mov
sti
inc
jge
pop
mov
cmp
orl
ret
imul
adc
clc
add
sbb
mov
mov
mov
mov
out
sbb
aaa
mov
aad
out
test
xor
leave
xchg
inc
sub
fpatan
xchg
stc
je
hlt
dec
jecxz
data16
js
sbb
out
mov
pop
jb
ficoms
mov
pop
sbb
iret
sub
addr16
icebp
inc
std
adc
aas
int3
mov
out
pop
dec
pop
fs
jno
sarl
jg
notb
push
jae
fcomps
mov
int3
inc
mov
pushf
hlt
cmp
and
lret
test
fisttpl
subb
fadds
out
cmp
pop
mov
bound
aam
mov
ret
sarl
insl
jnp
rorl
lods
cmpsl
mov
inc
ds
je
push
lods
stc
cmp
mov
inc
pushf
js
out
cmp
mov
test
movsl
sar
orb
es
mov
mov
xchg
lods
fnstsw
rol
xchg
ror
clc
ljmp
ret
pop
cli
mov
stos
fildl
push
out
pop
aaa
mov
rorl
nop
push
add
sbbb
je
mov
cltd
movsl
imul
test
lcall
jg
and
xlat
jle
or
shlb
lods
arpl
lock
add
in
sbb
xchg
mov
cmpsl
or
mov
clc
mov
mov
mov
mov
addr16
ljmp
sbb
mov
es
mov
fs
mov
in
xchg
mov
out
pxor
movsl
outsl
jns
sub
xchg
stos
mov
out
sub
or
fildll
mov
gs
hlt
js
jnp
xchg
mov
out
mov
nop
into
jbe
dec
sub
xchg
lea
and
ljmp
mov
movsl
mov
inc
mov
and
int3
aam
inc
aad
imul
jo
rep
in
mov
popa
pop
ret
push
pop
xsaves
pop
insb
arpl
scas
inc
cli
push
stos
or
movsb
into
xchg
inc
out
test
xchg
dec
mov
int3
imul
push
lds
xor
bnd
pushf
movsb
mov
inc
add
out
jge
xchg
popa
sbb
enter
cmp
or
xchg
out
lds
rorb
lahf
adc
xor
xchg
mov
lahf
xor
cmp
sbb
inc
cli
cmpsb
loop
in
outsb
jmp
enter
daa
mov
add
and
cmp
jno
movsl
jb
int
push
cmc
lock
mov
mov
test
adc
xchg
test
pop
iret
push
lret
js
je
pop
icebp
adc
daa
dec
push
loope
pop
fcmovnu
iret
inc
xor
shll
outsb
push
xor
adc
dec
sub
mov
mov
fs
and
stc
dec
int
ja
sub
xor
cmpsl
movsl
setp
mov
add
mov
sbb
jno
sahf
shll
test
dec
jg
xor
cmp
mov
jns
fs
icebp
or
and
jnp
fadds
mul
push
popf
lret
push
rorl
sarb
xchg
cmp
and
int
xor
ja
loop
xchg
jno
lret
ljmp
int
xchg
and
hlt
mov
cs
cli
in
xor
inc
int
test
pusha
jne
jge
or
xchg
cmp
loopne
adc
adc
nop
imul
movsb
inc
repz
sti
mov
xchg
shll
cmp
dec
cmp
bound
loopne
xor
and
in
mov
lcall
cs
aad
adcl
inc
mov
fldcw
and
je
push
insl
jecxz
mov
clc
lea
ret
jmp
pop
and
push
cmp
das
imul
add
aas
imul
jb
pop
cmp
and
dec
or
mov
sub
aad
popf
std
lds
pop
mov
dec
cmp
fidivl
adcl
pop
pop
mov
test
cmpsl
lock
mov
mov
sbb
aam
mov
lret
and
testl
cli
stc
mov
dec
mov
lods
fistpll
mov
data16
and
arpl
pop
sbb
ror
dec
outsl
sub
fcmovne
test
aam
push
out
hlt
fucom
mov
clc
mov
mov
pusha
aad
popa
sub
imul
or
mov
add
jl
cwtl
sbb
nop
mov
pushf
sub
test
add
out
mov
shrl
and
nop
dec
das
add
call
xor
xor
cltd
or
into
push
xchg
xchg
cmp
loopne
mov
and
ja
scas
pop
dec
mov
xor
sub
mov
mov
dec
xchg
or
jne
movsl
in
push
xor
out
cmpb
cmpsl
push
rclb
mov
out
jge
sub
cmp
addr16
fists
lock
mov
adc
jnp
jle
xchg
shl
add
pusha
ljmp
xchg
pusha
loop
jmp
mov
shll
popf
int3
push
sahf
mov
sbb
stos
frstor
sbb
loop
imul
ficoml
outsl
int3
adc
ror
xchg
and
dec
mov
hlt
push
in
arpl
xor
xor
sbb
mov
jle
out
movsb
and
adc
movl
rol
dec
out
shlb
cltd
repnz
movsb
inc
cmp
out
jbe
push
cmp
inc
or
icebp
pop
and
sar
lcall
rolb
lods
popa
adc
xor
loope
and
xor
add
jne
mov
inc
sbb
lahf
cmpsb
gs
inc
in
push
mov
gs
mov
mov
jno
jp
sub
loopne
cmp
xchg
ds
push
andl
enter
shrb
push
xor
imul
inc
xchg
mov
js
cmpsb
dec
pop
xor
jae
ss
jnp
jp
fisubrl
ret
outsb
mov
sbb
xchg
aad
subb
xor
push
mov
add
and
cmp
int
in
sub
iret
cwtl
pop
es
ds
fmull
and
fs
push
test
nop
orb
mov
adc
mov
fs
adc
adc
fidivl
push
pop
data16
out
adc
lahf
lock
xor
sub
mov
repnz
call
mov
cmc
cmp
xor
or
push
sahf
stc
andb
fcompl
movsl
data16
mov
lods
das
mov
pop
out
lock
or
lret
or
jl
mov
and
loopne
test
pop
ds
adc
sub
mov
add
xchg
aaa
lcall
add
mov
pusha
sub
jae
pushf
inc
cmp
jmp
scas
adc
sub
jbe
nop
jmp
js
and
lahf
inc
push
dec
fldenv
gs
or
adc
repnz
fcmovb
and
jno
adc
pop
dec
dec
ret
pop
lret
add
scas
add
jne
inc
xor
sub
or
jb
lods
xchg
dec
inc
test
mov
push
std
insb
stos
pop
cwtl
dec
fbld
scas
dec
cmp
daa
cmpl
xor
arpl
mov
enter
mov
das
testb
sti
adc
mov
outsb
sbb
pop
es
adc
dec
push
pop
int
mov
dec
ja
and
std
lods
iret
push
icebp
mov
mov
and
cltd
ss
out
sti
rcrb
pusha
aam
movsl
dec
xchg
test
and
in
ss
dec
scas
push
ljmp
pop
ret
lea
