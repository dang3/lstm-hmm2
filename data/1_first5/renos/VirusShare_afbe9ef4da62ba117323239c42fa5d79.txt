jmp
mov
jmp
mov
jmp
mov
xor
bound
aaa
cmp
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
lea
push
lea
push
call
xchg
cmp
jns
mov
mov
mov
mov
lea
lea
mov
mov
dec
dec
dec
mov
dec
inc
dec
lea
push
lea
push
call
lea
push
lea
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
lea
push
lea
push
call
mov
cmp
js
dec
inc
dec
dec
inc
dec
mov
cmp
jno
xchg
lea
mov
mov
xchg
mov
dec
inc
inc
dec
jne
inc
inc
inc
dec
dec
mov
mov
lea
push
lea
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
pop
ret
lea
push
mov
add
lea
push
lea
push
call
call
lea
push
lea
push
call
call
lea
push
lea
push
call
call
lea
push
lea
push
call
call
call
mov
lea
mov
mov
mov
xchg
mov
dec
jne
lea
mov
dec
dec
movl
mov
mov
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
xchg
cmp
jns
mov
mov
mov
mov
lea
lea
mov
mov
dec
dec
dec
mov
dec
inc
dec
movl
mov
mov
mov
push
mov
push
call
cmp
jp
xchg
lea
inc
lea
xchg
inc
inc
dec
mov
mov
lea
mov
mov
mov
lea
dec
jne
xchg
movl
mov
mov
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
lea
push
lea
push
call
call
mov
pop
ret
xor
ss
cmp
add
xor
cmp
xor
cmp
add
add
cmp
xor
xor
xor
add
xor
xor
xor
xor
xor
in
add
mov
mov
cmp
jle
lea
xchg
xchg
dec
dec
xchg
mov
lea
mov
mov
mov
mov
mov
mov
inc
inc
dec
jne
mov
cmp
je
call
mov
lea
mov
mov
mov
xchg
mov
dec
jne
lea
mov
dec
dec
mov
xor
divl
test
jne
mov
lea
lea
mov
xchg
xchg
mov
mov
mov
inc
inc
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jp
xchg
lea
inc
lea
xchg
inc
inc
dec
mov
mov
lea
mov
mov
mov
lea
dec
jne
xchg
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
lea
mov
xchg
xchg
lea
lea
mov
push
mov
push
call
mov
mov
mov
pop
ret
push
mov
add
mov
mov
mov
mov
cmp
js
dec
inc
dec
dec
inc
dec
mov
cmp
jno
xchg
lea
mov
mov
xchg
mov
dec
inc
inc
dec
jne
inc
inc
inc
dec
dec
mov
mov
mov
cmp
je
jmp
cmp
jbe
lea
dec
inc
xchg
lea
jmp
xchg
jmp
lea
mov
xchg
xchg
lea
dec
xchg
inc
dec
dec
mov
lea
mov
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
xchg
mov
cmp
jg
xchg
mov
mov
dec
xchg
mov
mov
mov
mov
lea
xchg
inc
dec
je
mov
lea
inc
dec
dec
mov
cmp
je
call
cmp
jbe
lea
dec
inc
xchg
lea
jmp
xchg
jmp
lea
mov
xchg
xchg
lea
dec
xchg
inc
dec
dec
mov
lea
mov
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
inc
gs
jb
arpl
fs
jae
add
push
mov
add
mov
cmp
je
call
cmp
jp
xchg
lea
inc
lea
xchg
inc
inc
dec
mov
mov
lea
mov
mov
mov
lea
dec
jne
xchg
mov
sub
mov
xchg
cmp
jns
mov
mov
mov
mov
lea
lea
mov
mov
dec
dec
dec
mov
dec
inc
dec
push
mov
mov
xor
call
mov
mov
lea
lea
mov
xchg
xchg
mov
mov
mov
inc
inc
dec
mov
mov
mov
call
xchg
mov
cmp
jg
xchg
mov
mov
dec
xchg
mov
mov
mov
mov
lea
xchg
inc
dec
je
mov
lea
inc
dec
dec
push
mov
mov
xor
call
mov
mov
lea
mov
mov
mov
xchg
mov
dec
jne
lea
mov
dec
dec
mov
mov
cmp
jle
lea
xchg
xchg
dec
dec
xchg
mov
lea
mov
mov
mov
mov
mov
mov
inc
inc
dec
jne
mov
mov
push
add
jmp
mov
mov
cmp
jp
xchg
lea
inc
lea
xchg
inc
inc
dec
mov
mov
lea
mov
mov
mov
lea
dec
jne
xchg
lea
mov
push
mov
jmp
xchg
cmp
jns
mov
mov
mov
mov
lea
lea
mov
mov
dec
dec
dec
mov
dec
inc
dec
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jbe
lea
dec
inc
xchg
lea
jmp
xchg
jmp
lea
mov
xchg
xchg
lea
dec
xchg
inc
dec
dec
mov
lea
mov
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
mov
cmp
js
dec
inc
dec
dec
inc
dec
mov
cmp
jno
xchg
lea
mov
mov
xchg
mov
dec
inc
inc
dec
jne
inc
inc
inc
dec
dec
mov
mov
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
mov
lea
mov
xchg
xchg
lea
lea
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
lea
mov
mov
mov
xchg
mov
dec
jne
lea
mov
dec
dec
mov
sub
add
add
mov
cmp
jle
lea
xchg
xchg
dec
dec
xchg
mov
lea
mov
mov
mov
mov
mov
mov
inc
inc
dec
jne
lea
pushl
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
xchg
mov
cmp
jg
xchg
mov
mov
dec
xchg
mov
mov
mov
mov
lea
xchg
inc
dec
je
mov
lea
inc
dec
dec
mov
lea
lea
mov
xchg
xchg
mov
mov
mov
inc
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
cmp
jns
mov
mov
mov
mov
lea
lea
mov
mov
dec
dec
dec
mov
dec
inc
dec
mov
mov
movl
mov
mov
lea
mov
xchg
xchg
lea
lea
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
lea
mov
mov
mov
xchg
mov
dec
jne
lea
mov
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
lea
mov
xchg
xchg
lea
lea
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jp
xchg
lea
inc
lea
xchg
inc
inc
dec
mov
mov
lea
mov
mov
mov
lea
dec
jne
xchg
mov
pop
ret
mov
push
cmp
testb
push
pop
insb
jle
jle
jp
inc
jnp
adcl
test
arpl
imul
pop
pop
dec
jle
imul
inc
imul
imul
pop
imul
bound
test
pop
pop
pop
pop
jp
inc
imul
pop
cmpb
jp
sub
inc
jnp
adcl
pop
pop
adcb
pop
imul
adcl
pop
sub
inc
pop
jnp
adcl
pop
pop
pop
pop
pop
dec
mov
lahf
pop
hlt
sub
mov
pop
insb
jo
cmp
sub
push
pop
stc
ss
pop
add
push
pop
in
ss
pop
pop
cmp
and
push
pop
or
push
pop
adc
cmp
mov
mov
out
add
xchg
mov
out
add
mov
push
pop
sahf
pop
out
add
mov
pop
out
add
mov
pop
out
add
mov
mov
out
add
mov
mov
out
add
stos
mov
out
add
sub
sahf
pop
out
mov
push
fsubs
ficomps
mov
mov
pop
fsubs
add
pop
sahf
pop
fbld
push
mov
aas
inc
mov
pop
inc
mov
arpl
pop
sahf
pop
add
cmp
pop
fbld
pop
add
pop
fcomip
inc
dec
mov
repz
sbb
pop
pop
pop
mov
pop
mov
xor
pop
add
out
xchg
pop
pop
pop
sahf
pop
iret
mov
sbb
and
enter
mov
sbb
sahf
pop
lret
lods
pop
pop
pop
adcl
lret
mov
add
pop
fcomip
inc
sub
push
and
mov
pop
pop
mov
pop
imul
pop
lret
mov
sahf
pop
sti
mov
pop
sbb
sahf
pop
testl
mov
add
lret
mov
add
mov
sbb
sti
mov
pop
pop
inc
mov
pop
fcomip
inc
das
mov
add
mov
sti
sbb
sahf
pop
mov
sbb
pop
incl
pop
fcomip
inc
das
mov
cwtl
pop
negl
cwtl
pop
sti
sbb
pop
push
cwtl
pop
lret
or
and
and
xor
hlt
hlt
mov
aas
sbb
sahf
pop
out
mov
inc
sahf
pop
jmp
pop
jecxz
inc
push
pop
addl
xlat
and
pop
jecxz
mov
dec
jg
xchg
pop
pop
adcl
push
aaa
inc
mov
dec
jg
xchg
pop
pop
adcl
mov
dec
mov
jmp
fwait
cmp
repz
hlt
adcl
xchg
add
repz
hlt
xlat
hlt
stc
mov
pop
fsubs
add
push
mov
xchg
sarb
pop
pop
pop
push
jnp
pop
pop
push
push
pop
pop
pop
push
cmpsl
pop
jmp
pop
pop
xlat
push
add
jmp
pop
pop
ds
push
lcall
pop
pop
add
ret
ljmp
push
fiadds
adc
ret
incl
pop
pop
xor
jb
pop
push
push
insb
sbb
mov
sahf
cmc
ds
mov
leave
push
mov
fsubs
ficoms
add
fdivrp
cld
hlt
hlt
hlt
imul
pop
pop
mov
sahf
fsubrl
sub
jmp
hlt
hlt
fistps
mov
cmc
hlt
hlt
sahf
pop
repz
pop
cmpsl
push
pop
pop
fstpl
push
cmpsl
push
pop
pop
fstpl
pop
sub
mov
lock
xchg
cmpsl
push
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
mov
hlt
hlt
hlt
pop
lahf
pop
out
xchg
jb
pop
and
mov
pop
lock
sub
mov
repz
mov
or
cmc
hlt
hlt
cmc
pop
icebp
mov
out
push
fstpl
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
fstpl
pop
sub
mov
mov
mov
out
cmc
hlt
hlt
sbb
sub
mov
mov
cmpsl
push
pop
sbb
cmp
pop
pop
pop
lahf
pop
icebp
sub
mov
and
out
sub
mov
out
lahf
xchg
cmpsl
push
pop
cmc
pop
lock
jb
pop
push
mov
push
pop
dec
mov
hlt
sub
mov
cmpsl
push
pop
push
cmp
pop
pop
pop
mov
sub
mov
cmpsl
push
pop
sub
mov
pop
and
mov
cmpsl
push
pop
sbb
cmp
pop
pop
pop
mov
sub
mov
cmpsl
push
pop
mov
pop
lahf
pop
repnz
mov
cmpsl
push
pop
mov
pop
sub
mov
pop
lahf
cltd
and
mov
cmpsl
push
pop
mov
and
mov
cmpsl
push
pop
and
xchg
and
mov
pop
and
mov
cmpsl
push
pop
sbb
cmp
pop
pop
pop
lahf
pop
repnz
mov
and
hlt
lahf
pop
cmc
mov
fdivr
and
inc
push
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
js
dec
inc
dec
dec
inc
dec
mov
cmp
jno
xchg
lea
mov
mov
xchg
mov
dec
inc
inc
dec
jne
inc
inc
inc
dec
dec
mov
mov
push
call
mov
movl
mov
lea
lea
mov
xchg
xchg
mov
mov
mov
inc
inc
dec
mov
mov
call
mov
xchg
cmp
jns
mov
mov
mov
mov
lea
lea
mov
mov
dec
dec
dec
mov
dec
inc
dec
movl
mov
mov
call
mov
cmpl
je
cmp
jp
xchg
lea
inc
lea
xchg
inc
inc
dec
mov
mov
lea
mov
mov
mov
lea
dec
jne
xchg
mov
mov
call
mov
cmpl
je
mov
lea
mov
mov
mov
xchg
mov
dec
jne
lea
mov
dec
dec
lea
push
push
mov
sub
push
mov
push
call
mov
mov
lea
mov
xchg
xchg
lea
lea
mov
cmp
je
mov
subb
mov
lea
mov
mov
mov
xchg
mov
dec
jne
lea
mov
dec
dec
xor
add
mov
xor
cmp
jp
xchg
lea
inc
lea
xchg
inc
inc
dec
mov
mov
lea
mov
mov
mov
lea
dec
jne
xchg
incl
mov
cmp
jne
cmp
jbe
lea
dec
inc
xchg
lea
jmp
xchg
jmp
lea
mov
xchg
xchg
lea
dec
xchg
inc
dec
dec
mov
lea
mov
dec
mov
call
mov
mov
lea
mov
xchg
xchg
lea
lea
mov
push
mov
push
call
cmpl
je
mov
mov
lea
mov
xchg
xchg
lea
lea
mov
lea
mov
mov
mov
xchg
mov
dec
jne
lea
mov
dec
dec
cmp
jle
lea
xchg
xchg
dec
dec
xchg
mov
lea
mov
mov
mov
mov
mov
mov
inc
inc
dec
jne
push
mov
pushl
xchg
push
jmp
mov
cmp
js
dec
inc
dec
dec
inc
dec
mov
cmp
jno
xchg
lea
mov
mov
xchg
mov
dec
inc
inc
dec
jne
inc
inc
inc
dec
dec
mov
mov
mov
pop
ret
imul
add
outsb
add
insb
add
add
add
add
add
add
add
jb
jne
insb
push
jb
je
arpl
push
mov
add
cmp
jle
lea
xchg
xchg
dec
dec
xchg
mov
lea
mov
mov
mov
mov
mov
mov
inc
inc
dec
jne
movb
mov
mov
mov
add
mov
xor
add
cmp
jne
pushl
push
jmp
add
sub
cmp
jne
cmp
jle
lea
xchg
xchg
dec
dec
xchg
mov
lea
mov
mov
mov
mov
mov
mov
inc
inc
dec
jne
cmpb
jne
movb
cmp
jbe
lea
dec
inc
xchg
lea
jmp
xchg
jmp
lea
mov
xchg
xchg
lea
dec
xchg
inc
dec
dec
mov
lea
mov
dec
push
call
mov
mov
mov
xchg
mov
cmp
jg
xchg
mov
mov
dec
xchg
mov
mov
mov
mov
lea
xchg
inc
dec
je
mov
lea
inc
dec
dec
jmp
mov
lea
lea
mov
xchg
xchg
mov
mov
mov
inc
inc
dec
movb
mov
lea
mov
mov
mov
xchg
mov
dec
jne
lea
mov
dec
dec
mov
mov
pop
ret
popa
add
jo
ja
imul
arpl
jo
insb
add
add
add
in
add
mov
mov
lea
mov
xchg
xchg
lea
lea
xchg
cmp
jns
mov
mov
mov
mov
lea
lea
mov
mov
dec
dec
dec
mov
dec
inc
dec
call
test
jne
mov
jmp
movw
xchg
mov
cmp
jg
xchg
mov
mov
dec
xchg
mov
mov
mov
mov
lea
xchg
inc
dec
je
mov
lea
inc
dec
dec
call
lea
mov
pop
ret
nop
push
mov
add
mov
mov
lea
mov
xchg
xchg
lea
lea
movl
movl
movw
mov
push
mov
push
mov
push
call
lea
push
lea
push
call
call
xchg
mov
cmp
jg
xchg
mov
mov
dec
xchg
mov
mov
mov
mov
lea
xchg
inc
dec
je
mov
lea
inc
dec
dec
movl
mov
mov
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
lea
push
lea
push
call
call
call
call
cmp
jbe
lea
dec
inc
xchg
lea
jmp
xchg
jmp
lea
mov
xchg
xchg
lea
dec
xchg
inc
dec
dec
mov
lea
mov
dec
movl
mov
mov
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
mov
cmp
js
dec
inc
dec
dec
inc
dec
mov
cmp
jno
xchg
lea
mov
mov
xchg
mov
dec
inc
inc
dec
jne
inc
inc
inc
dec
dec
mov
mov
movl
mov
mov
mov
push
mov
push
call
mov
mov
lea
mov
xchg
xchg
lea
lea
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
lea
mov
mov
mov
xchg
mov
dec
jne
lea
mov
dec
dec
lea
push
lea
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
mov
mov
mov
push
mov
push
call
call
lea
push
lea
push
call
lea
push
lea
push
call
call
mov
lea
lea
mov
xchg
xchg
mov
mov
mov
inc
inc
dec
push
call
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
lea
push
lea
push
call
call
xchg
mov
cmp
jg
xchg
mov
mov
dec
xchg
mov
mov
mov
mov
lea
xchg
inc
dec
je
mov
lea
inc
dec
dec
movl
mov
mov
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
lea
push
lea
push
call
call
call
call
cmp
jbe
lea
dec
inc
xchg
lea
jmp
xchg
jmp
lea
mov
xchg
xchg
lea
dec
xchg
inc
dec
dec
mov
lea
mov
dec
movl
mov
mov
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
mov
cmp
js
dec
inc
dec
dec
inc
dec
mov
cmp
jno
xchg
lea
mov
mov
xchg
mov
dec
inc
inc
dec
jne
inc
inc
inc
dec
dec
mov
mov
movl
mov
mov
mov
push
mov
push
call
mov
mov
lea
mov
xchg
xchg
lea
lea
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
lea
mov
mov
mov
xchg
mov
dec
jne
lea
mov
dec
dec
lea
push
lea
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
mov
mov
mov
push
mov
push
call
call
lea
push
lea
push
call
lea
push
lea
push
call
call
call
xchg
cmp
jns
mov
mov
mov
mov
lea
lea
mov
mov
dec
dec
dec
mov
dec
inc
dec
mov
pop
ret
add
xor
xor
add
add
cmp
xor
xor
xor
add
add
xor
xor
xor
add
xor
xor
add
popa
add
jo
ja
imul
arpl
jo
insb
add
add
add
in
add
movl
movl
movw
mov
push
mov
push
mov
push
call
xchg
mov
cmp
jg
xchg
mov
mov
dec
xchg
mov
mov
mov
mov
lea
xchg
inc
dec
je
mov
lea
inc
dec
dec
lea
push
lea
push
call
call
movl
mov
mov
mov
push
mov
push
call
lea
push
lea
push
call
cmp
jbe
lea
dec
inc
xchg
lea
jmp
xchg
jmp
lea
mov
xchg
xchg
lea
dec
xchg
inc
dec
dec
mov
lea
mov
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
mov
mov
mov
push
mov
push
call
lea
push
lea
push
call
movl
mov
mov
mov
push
mov
push
call
call
mov
pop
ret
xor
cmp
xor
cmp
aaa
add
xor
xor
xor
aaa
add
cmp
xor
xor
aaa
xor
sub
add
mov
cmp
jbe
lea
dec
inc
xchg
lea
jmp
xchg
jmp
lea
mov
xchg
xchg
lea
dec
xchg
inc
dec
dec
mov
lea
mov
dec
mov
mov
lea
call
cmp
jp
xchg
lea
inc
lea
xchg
inc
inc
dec
mov
mov
lea
mov
mov
mov
lea
dec
jne
xchg
ret
ret
lea
push
add
loopne
sub
lcall
aad
fwait
ljmp
or
add
dec
and
add
xchg
lcall
pop
add
xchg
add
sbb
jo
add
add
jecxz
loopne
push
add
add
add
fisttpl
rcrb
and
add
pop
shrb
scas
mov
lret
ficompl
adc
movsl
add
std
add
add
enter
fldl
and
sbb
lcall
add
add
xchg
test
lret
sbb
add
ja
add
mov
add
mov
pop
push
add
jnp
int
add
jae
pop
mov
pushf
int
ss
add
add
pusha
xchg
xor
add
add
addr16
add
add
imul
lds
sub
push
xchg
add
adc
sahf
add
add
aam
inc
popa
push
mov
add
pop
lock
push
jo
add
mulb
pop
jb
add
cwtl
int3
mov
sub
int
mov
mov
add
stc
add
add
add
mov
add
adcl
add
loopne
pop
fadds
notl
jmp
pusha
mov
jae
add
clc
or
les
je
fidivrs
mov
jae
xor
movb
add
pop
xlat
xchg
add
cmp
add
xchg
or
add
add
xor
xchg
aaa
mov
push
adc
mov
adc
jge
add
dec
mov
xchg
add
daa
dec
and
loopne
adc
or
iret
add
add
testl
add
mov
pop
xchg
pop
add
hlt
inc
add
add
addb
pop
jecxz
xchg
mov
gs
imul
add
das
data16
push
add
pop
addr16
add
add
add
sti
out
jne
add
add
pop
pop
std
add
out
adc
dec
mov
add
adc
pop
jl
ret
adc
sarb
push
lret
into
sub
add
or
std
add
add
cmp
bound
push
notb
pop
pop
add
unpckhps
jmp
gs
and
add
add
jbe
add
add
lret
clc
add
mov
add
jge
lcall
ret
roll
add
inc
push
lret
lock
add
xor
push
add
dec
sbb
jl
add
mov
mov
notl
add
and
subb
or
pop
lds
add
ja
xor
cmp
scas
ja
sbb
jo
mov
mov
add
lods
cmp
mov
add
test
test
ss
popf
add
add
roll
add
add
sub
adc
push
rcll
js
adc
dec
xchg
add
add
add
out
fcoml
add
filds
add
adc
mov
add
adc
outsb
add
sahf
sbb
adc
add
push
cmp
push
mov
add
add
fsub
mov
add
add
pusha
sbb
xor
xor
jg
mov
jbe
mov
sbb
pop
ljmp
and
inc
push
xor
xor
aam
lcall
add
dec
xor
add
xchg
test
sbb
add
push
push
xchg
xor
movb
pop
call
mov
sub
adc
rcrb
cmpsb
and
xchg
or
inc
sbb
mov
aas
out
lcall
dec
aas
je
leave
mov
inc
outsl
push
mul
rcll
popa
jne
cwtl
jg
mov
jmp
test
in
insb
push
fucomi
mov
sti
mov
loope
lock
xchg
das
xchg
adc
mov
cmc
or
and
mov
xor
mov
cmp
push
xor
add
cmpsl
mov
outsb
mov
cmpsl
fcmovbe
cld
mov
insl
push
mov
adc
mov
rclb
xor
sub
es
iret
fnstsw
mov
push
repnz
fnstsw
out
clc
sahf
rcll
sub
shlb
data16
aas
jb
push
clc
or
adc
maskmovq
imull
add
mov
test
mov
xchg
xchg
and
test
xchg
mov
decb
or
xchg
stos
xchg
or
pop
rcr
fwait
push
push
add
scas
xor
push
ja
stos
push
jnp
adc
push
mov
inc
cltd
mov
push
or
ja
sarb
dec
add
inc
mov
pop
or
cld
push
fwait
xchg
leave
rorb
repz
test
inc
je
push
mov
jns
mov
xchg
xchg
jns
dec
out
sub
and
push
sbb
mov
and
mov
insb
loopne
jle
mov
jb
push
sub
sub
jmp
mov
int3
cli
push
addl
push
movsb
cmp
jl
sub
insl
iret
insb
or
jnp
xlat
clc
scas
pop
ss
push
add
adc
daa
jecxz
out
and
adc
repz
and
fwait
inc
jmp
pushf
ja
or
xchg
or
or
aas
fimull
rcll
pushf
lea
bound
out
mov
rclb
jb
scas
jne
leave
out
cmp
addl
arpl
sbb
jbe
xor
xor
cmp
aaa
int3
mov
push
add
stc
cltd
pop
sbb
push
mov
jo
sahf
cmp
and
cmp
jnp
jb
mov
jbe
cmpsb
jno
lock
icebp
add
enter
daa
mov
out
or
jl
mov
dec
push
jo
movsl
xchg
add
and
mov
repnz
mov
add
push
mov
pop
xchg
es
js
mov
call
loope
dec
scas
sub
mov
adc
outsb
inc
shll
adc
add
es
cmpb
pop
add
decb
push
stos
dec
adc
push
sahf
scas
sub
shll
and
dec
lcall
cmp
xchg
sahf
lock
testb
cs
xor
mov
jo
mov
mov
dec
pusha
ss
popa
cmp
jmp
sub
fwait
sbb
cld
scas
xor
std
pop
test
fcomi
outsb
sbb
inc
xchg
pop
mov
hlt
outsl
fidivrl
loop
cs
adc
fs
ja
mov
cld
mov
lret
out
mov
pushf
arpl
aad
xor
inc
cmp
pop
sahf
or
xchg
inc
and
and
hlt
adc
out
mov
add
xchg
es
jmp
mov
sbb
cmp
rorb
cs
iret
jmp
push
shll
dec
sahf
and
fnstcw
sbb
repz
in
lea
sbb
and
xor
lods
cmp
pushf
icebp
mov
fld
ret
pop
cmp
ret
inc
lahf
push
mov
jb
int
dec
and
mov
sub
dec
jecxz
pop
push
mulb
xchg
stos
cld
lods
mov
mov
cmp
sbb
mov
sub
sub
cli
cli
fildll
jb
lock
lods
inc
stos
and
cmp
rcll
outsl
es
pusha
insl
in
aad
inc
call
mov
jle
push
lret
pop
and
and
push
stos
pop
bound
add
aam
mov
ret
sbb
cmp
movsl
testl
dec
and
ljmp
lea
daa
cmp
jno
inc
xchg
imul
push
out
ljmp
ret
cltd
stos
sbb
shrl
sbb
stos
sbb
dec
dec
adc
test
sub
xchg
pop
sbb
loop
pop
cld
pop
pop
stos
jne
ret
push
ret
add
xchg
sbb
dec
lock
dec
inc
or
xor
pop
int3
adc
cmc
xor
ficomps
leave
xchg
jbe
jge
dec
mov
or
fisubrs
dec
push
test
cmp
dec
xchg
push
bound
adc
pop
mov
cmp
xchg
enter
repz
sub
pop
int
sbb
xor
mov
and
mov
fildl
cmpsl
in
test
pusha
icebp
lcall
jg
mov
xchg
insl
in
sbb
call
inc
or
popf
xor
pop
push
mov
addl
jnp
lock
push
js
popf
mov
adc
and
dec
outsl
ret
pop
pop
out
fiaddl
mov
inc
or
rorb
mov
inc
inc
adc
sbb
mov
neg
mov
jecxz
mov
lods
mov
mov
add
and
arpl
fs
jbe
out
jge
or
cltd
aaa
mov
sub
xchg
cmp
int3
jmp
lods
pop
mov
jmp
lahf
jnp
xor
test
scas
scas
popa
int3
mov
cmp
pop
mov
push
mov
mov
in
fmuls
enter
daa
mov
idivb
jl
loopne
dec
xlat
in
cmpsl
push
pop
movsl
pushf
push
mov
mov
loop
push
push
negb
push
in
push
addb
inc
jecxz
xchg
push
lea
mov
mov
mov
loope
in
shrb
cmp
shlb
adc
fistpl
popl
mov
sbb
in
push
xor
xor
mov
lods
lret
pop
int
jg
sub
xchg
pop
mov
movsb
inc
push
or
insb
mov
insl
rorb
in
lock
insb
jg
jo
mov
mov
inc
mov
mov
jo
mov
sarb
cmpsb
jle
negl
repz
loopne
xchg
xor
mov
popf
into
ja
outsb
cmc
pop
cli
lea
pop
fistps
mov
hlt
push
stc
adc
jnp
adc
pushf
mov
lods
mov
dec
mov
jns
or
fnstenv
inc
jb
cmp
mov
dec
decb
jl
mov
mov
les
imul
inc
add
dec
repnz
daa
cwtl
aam
and
xlat
pop
leave
or
xor
in
sub
je
or
ljmp
mov
push
dec
std
imul
push
mov
stc
cmpsb
cmp
mov
push
cwtl
lea
pusha
call
mov
push
pop
adc
outsl
in
pushf
daa
and
enter
fcompl
inc
daa
das
scas
inc
mov
mov
decb
je
je
es
pusha
add
addr16
std
scas
mov
cwtl
cmc
cmpsl
inc
mov
xchg
aad
mov
fmuls
inc
fisttpl
fisttps
icebp
sub
push
inc
loopne
push
popa
mov
mov
inc
adc
shll
ret
cld
test
mov
aaa
cmpsl
mov
jle
icebp
push
in
pop
cld
stc
add
outsl
mov
and
xchg
andl
sub
negb
ret
stos
adc
push
js
ret
inc
std
clc
adc
adcl
testb
out
dec
mov
aam
enter
cmp
aad
and
cltd
loop
fadds
pop
das
xchg
in
test
or
xchg
lcall
cmp
ja
fs
push
mov
add
mov
xor
mov
or
cmp
mov
ljmp
test
xor
add
push
or
xchg
in
fwait
cmc
iret
insl
dec
jmp
out
mov
mov
sub
jns
pop
and
cli
pop
xchg
pop
or
out
sbbb
pop
or
sarl
adc
stos
dec
dec
mov
dec
out
jne
popa
or
rcll
pusha
mov
fildll
ss
push
jecxz
jmp
cmp
subl
push
or
mov
add
cli
or
add
fwait
cmpsl
mov
inc
jnp
into
lds
in
stos
adc
adc
ret
mov
inc
ljmp
cmp
or
or
add
fidivl
xchg
mov
les
inc
cmp
fisubrs
test
rol
cmp
push
and
leave
aad
mov
sbb
loope
mov
stos
jge
adc
aaa
dec
shlb
add
popl
int3
jp
pop
loope
inc
push
cmpb
jo
das
stos
scas
inc
ja
and
push
movsb
mov
icebp
push
or
pop
cmpsb
ja
inc
in
mov
sub
lds
btr
inc
push
loopne
dec
inc
inc
insl
ds
movsl
mov
dec
jne
nop
and
test
cmpsl
push
dec
xor
jb
nop
fldenv
loopne
cmp
pop
stos
cld
mov
loope
mov
sub
shl
outsl
mov
outsb
push
and
shlb
sbb
jle
sub
mov
nop
push
mov
mov
sub
xchg
mov
lcall
cmpsl
fdivrl
sub
sahf
ss
out
subb
jg
mov
mov
cmp
mov
dec
insb
and
fnstenv
cli
pop
inc
cmp
popa
fstpt
lret
test
sub
rorl
sahf
into
pop
int
cmc
out
push
xor
rol
loop
in
pop
stc
int3
adc
or
aas
mov
lods
cltd
inc
outsl
mov
int3
push
cli
cmp
cmpsl
xor
test
cmp
icebp
lea
orb
jb
pop
lds
loopne
int3
inc
pop
clc
mov
in
ljmp
add
or
sbb
popa
push
nop
xlat
cltd
jae
sub
cmc
mov
xchg
stos
out
sti
mov
fdivrs
push
dec
nop
or
mov
jno
stos
cmp
les
push
repz
fadd
nop
stos
push
fidivs
cmpsb
pop
fistpll
or
mov
pop
leave
out
inc
xchg
es
inc
sbbl
jg
scas
cli
jmp
aad
mov
jb
mov
dec
adc
je
rolb
jecxz
xor
imulb
daa
lds
sub
cmc
xorl
pop
clc
mov
loopne
mov
lahf
inc
das
xor
xor
sbb
shll
lahf
fsubrs
mov
mov
mov
xchg
mov
sub
sbb
and
ds
std
popf
mov
daa
movsl
dec
mov
mov
sub
insb
aam
out
ret
cmp
push
push
cmp
fstp
repz
clc
dec
mov
xchg
leave
xor
ljmp
lods
push
mov
mov
aaa
outsb
xchg
stc
push
enter
loop
call
xlat
enter
xchg
mov
testl
std
adcl
pop
push
cmp
popl
sahf
stos
push
jbe
push
or
clc
add
mov
ja
xor
push
or
jb
xor
cli
push
mov
fwait
push
mov
aas
inc
pop
ja
stc
mov
inc
ja
call
fwait
and
or
jne
shr
mov
sub
bound
pop
addr16
mov
fs
popw
mov
stc
add
or
dec
aas
addr16
lret
call
mov
nop
ss
mov
aam
in
add
pusha
daa
mov
in
and
in
xchg
add
cmp
notb
int3
repnz
xor
push
cmp
subb
leave
inc
insb
dec
cwtl
leave
jnp
jo
scas
xor
xor
jnp
or
or
ret
mov
cld
jbe
or
into
inc
adc
add
ficomps
fisubl
xchg
xchg
add
sahf
subb
out
rclb
dec
shl
inc
mov
cmpsl
leave
mov
hlt
mov
jbe
lods
clc
jge
mull
aaa
or
dec
add
aas
int3
sarl
adc
or
pop
xchg
fildll
aaa
push
loop
jbe
scas
movsb
adc
xchg
test
cmpsb
cli
sti
shr
jle
enter
daa
mov
or
inc
and
jno
cwtl
fwait
jl
mov
dec
mov
pop
ds
cmp
out
lods
ficomps
cli
pop
inc
test
push
mov
inc
add
pushf
mov
pop
pop
fs
js
mov
fsubrs
jg
loope
lahf
imul
insb
cmp
xchg
outsb
imul
sub
xchg
pop
pop
popl
ret
xor
lods
sbb
pushf
scas
xor
or
int
out
pop
sub
aam
pop
lahf
sbb
sbb
add
fsubl
mov
sub
mov
test
insb
xchg
orb
jg
sti
xorb
or
mov
cmp
sbb
cmp
movsb
out
sbb
xor
fmuls
ror
aad
push
rol
ja
pushf
shlb
into
cmp
lahf
scas
xor
addb
sbb
stc
orl
push
js
adc
dec
or
xchg
in
out
sub
cli
outsb
imul
add
or
fdivrl
xchg
cwtl
pop
gs
add
loopne
lock
pop
pop
fwait
adc
adc
rclb
jle
add
adc
lods
cmc
in
sbb
pushf
mov
xor
mov
dec
aaa
in
add
sub
imul
aad
mov
nop
call
or
out
les
mov
js
xchg
jb
lea
sub
and
sahf
int
pop
mov
inc
jns
repnz
jmp
scas
sbbl
aas
inc
xor
or
aas
arpl
cmp
outsl
dec
dec
mov
je
or
xchg
jle
shl
in
cmp
std
jg
cwtl
imul
mov
dec
decb
dec
ja
dec
mov
mov
cmpsl
sbb
mov
mov
jg
shl
adc
mov
shll
pop
roll
outsb
arpl
mov
mov
mov
mov
lods
mov
add
sub
insb
xlat
movsbl
adc
cmp
pop
mov
xchg
sbb
mov
nop
dec
ret
enter
incb
ds
mov
xchg
or
leave
ljmp
fldt
jns
out
lcall
push
jg
sbb
add
aaa
aad
push
sub
mov
push
xchg
inc
test
mov
xchg
mov
sbb
push
imul
mov
pop
std
int3
jle
inc
iret
cmp
stos
and
mov
imul
sub
xor
pop
jge
xchg
loopne
and
or
ficomps
mov
cli
jnp
ja
mov
daa
inc
push
and
fwait
push
out
dec
scas
cmpsb
jne
pop
mov
inc
lahf
xor
out
add
lds
inc
in
dec
insb
xchg
mov
mov
sub
adc
addr16
jmp
jp
mov
mov
mov
push
out
cmpsl
sbb
iret
push
fbld
push
fbld
xchg
mov
fdivrl
xchg
into
test
orl
popf
add
dec
mov
js
and
leave
bswap
insb
mov
push
scas
xchg
scas
add
jb
or
push
setne
push
mov
pop
fsubrs
inc
adc
jmp
inc
adc
fisubl
pop
xchg
vmovshdup
cs
pop
xchg
or
dec
sbb
push
or
fidivs
xchg
lds
pop
sar
inc
mov
cli
mov
hlt
scas
mov
arpl
jbe
mov
aad
leave
inc
clc
aaa
enter
insb
xchg
add
ja
lods
dec
push
pop
aas
rcrb
jecxz
push
mov
fdivrs
cmp
cmc
dec
push
test
int3
mov
lea
enter
daa
mov
stc
cmp
xchg
or
jl
pop
pop
dec
and
or
movsl
mov
mov
lahf
into
mov
push
int
sbb
loope
push
inc
nop
add
pop
jo
pop
cs
js
je
pop
sub
xchg
loope
scas
les
inc
mov
outsb
int3
inc
xchg
adc
insb
js
mov
in
sbb
adc
xor
or
int
jnp
sub
das
or
adc
jecxz
rcrb
jmp
cmp
testl
jp
cmp
inc
icebp
ss
jp
and
push
js
addb
test
fcom
push
push
notl
outsb
ja
pop
roll
sbb
jnp
and
shl
je
push
xor
outsl
push
ss
loop
jge
stc
cmp
inc
adc
sub
cli
lods
addr16
xor
xchg
or
cli
mov
jg
cmp
fcomps
pusha
xor
mov
pop
ret
loopne
sub
pop
roll
imul
call
mov
jo
mov
cmp
scas
jno
pop
push
push
sub
push
ljmp
sbb
sti
sbb
sub
inc
icebp
pop
aad
int3
sbb
sbb
inc
jmp
outsl
les
inc
jp
push
bound
xchg
scas
inc
lea
add
inc
ficompl
dec
mov
pushf
popf
repnz
pop
inc
mov
enter
push
cmpsb
jb
arpl
dec
jl
je
daa
data16
pop
push
divb
mov
std
movsb
mov
call
mov
inc
sbb
movsl
sbb
cwtl
cmp
inc
sub
xchg
in
das
out
jae
mov
mov
and
mov
rcll
xchg
es
inc
insl
sbbl
imul
adc
cld
jp
daa
lret
fistpl
loop
xor
inc
mov
fidivrs
sub
aam
movsb
ret
push
or
push
sarl
inc
test
xchg
inc
push
push
popa
cli
and
lods
daa
push
mov
std
xor
xchg
push
pop
push
jmp
shlb
add
insl
sbbl
cmpsb
mov
xchg
mov
test
sub
sbb
stc
sarl
cltd
stos
xor
pushf
push
dec
pop
mov
ds
add
jno
dec
push
jns
sbb
and
std
inc
inc
xor
jns
mov
and
or
mov
nop
ja
cld
and
mov
inc
movsl
dec
gs
lods
fistps
xchg
js
jne
mov
fsubr
lds
bound
sarb
adc
data16
add
lods
out
pop
fldcw
or
push
jp
push
dec
mov
xchg
inc
jle
push
adc
adc
sub
cs
lret
mov
icebp
xchg
cltd
cmp
sbbl
imul
sub
or
pop
mov
and
jns
insb
and
sarl
call
imulb
test
xor
mov
jb
ds
xor
ret
fbstp
imul
or
jb
cmpsl
inc
xchg
fcmove
xchg
repnz
mov
test
repz
imul
std
rol
sbb
mov
dec
mov
leave
cmp
or
cli
xor
arpl
inc
mov
sbb
jp
pop
imul
xchg
repz
outsb
mov
addr16
adc
mov
and
cmp
movsb
sub
push
clc
lea
in
je
xchg
enter
daa
mov
cmpb
pop
shll
movsl
push
jl
fldenv
out
xor
imul
test
pop
push
mov
in
push
lods
scas
pusha
inc
pop
jecxz
and
js
fimull
xor
push
xorb
loop
sub
dec
test
jl
and
rclb
inc
test
clc
adcb
push
sbb
pop
loope
adcl
jecxz
push
mov
in
cld
sub
pmaxub
popf
fstpl
imul
sub
and
sahf
pop
push
inc
test
inc
xchg
cmpb
jg
xchg
hlt
mov
jmp
mov
or
lea
ret
out
cmp
xchg
imul
lret
and
lock
jb
ja
lcall
cmc
cmp
lret
mov
outsl
xor
adc
icebp
in
fs
lcall
sbb
lods
dec
add
nop
out
jb
cli
aam
mov
pushf
and
cmp
mov
fisttpl
data16
loopne
jbe
pop
push
jecxz
adc
insb
adc
movsl
inc
add
xchg
xchg
xor
cltd
sbb
adc
int3
xlat
push
mov
mov
sbb
in
xlat
adc
cs
jno
faddl
nop
sahf
cwtl
mov
jns
sub
dec
jle
push
sub
les
add
cltd
pop
scas
lea
lds
call
pushf
ss
and
ret
adc
push
pushf
dec
fiadds
test
jne
push
mov
inc
es
sub
mov
mov
jbe
inc
je
iret
dec
jecxz
pop
xor
std
dec
fnstsw
cwtl
loope
js
pushw
xor
jbe
dec
dec
lea
inc
fildl
lret
or
sub
das
int
ljmp
fildll
outsl
scas
mov
shrl
push
dec
daa
xchg
or
inc
bswap
icebp
mov
nop
cld
movsl
cmpsb
call
mov
cmp
mov
std
pop
rorb
sti
jnp
lods
inc
adc
xchg
loop
ret
out
imul
jno
push
add
clc
ljmp
and
das
loope
pusha
js
xchg
into
jae
push
xor
dec
jmp
cltd
mov
xlat
out
jno
jl
mov
sbb
test
pop
sbb
fsub
lcall
pop
fs
push
cmp
stos
and
lcall
icebp
mov
lds
add
loopne
xor
or
xor
ss
mov
mov
jp
jo
es
les
inc
cmp
xor
mov
fwait
mov
push
dec
jne
xorb
pop
mov
lds
or
int
push
in
in
ds
push
xlat
lret
out
cmp
or
pop
cmp
adc
arpl
cltd
mov
inc
pop
mov
push
cmp
fs
sub
and
in
stos
xchg
sahf
push
in
lret
xchg
fs
subl
pop
popf
push
cmp
mov
not
inc
stos
pop
movsl
pop
and
pop
sbb
mov
pop
in
push
scas
pop
movsb
mov
adc
push
iret
sub
ret
push
pop
insb
loopne
inc
sub
jae
sub
sbb
enter
addl
test
xchg
or
insl
sbb
and
imul
test
mov
mulb
mov
mov
lret
inc
add
arpl
cmp
cmp
jge
add
aas
mov
add
push
and
add
mov
pop
popf
dec
pushw
push
push
pop
xor
outsl
inc
mov
and
lods
test
fwait
nop
test
mov
sbb
clc
jno
or
in
pop
std
pop
enter
daa
mov
xchg
cmp
stos
fidivl
bound
add
ds
mov
adc
mov
pop
xchg
push
jae
nop
test
ja
imul
dec
inc
pop
jl
add
pop
cmpsb
dec
adc
loope
cmp
cmp
xchg
fisubrl
das
xor
shlb
out
nop
pusha
mov
sbb
mov
xor
pop
mov
push
mov
inc
loopne
lods
or
lcall
outsl
fsubrl
pop
pop
sub
out
sahf
ret
test
mov
jg
ljmp
das
scas
mov
and
mov
cmp
dec
push
outsb
notl
push
mov
xchg
pop
es
leave
push
mov
cmc
add
outsb
xor
pop
mov
loop
fsub
stc
test
stos
fs
cmpsl
adc
lret
les
fimuls
xchg
pop
cmp
pop
jnp
xor
add
push
jg
and
gs
push
loopne
adc
div
adc
jno
adc
mov
add
cmc
lods
xchg
mulb
sbb
dec
pop
lods
xlat
xchg
inc
pusha
sub
cmp
in
inc
fisttpll
jbe
fldcw
or
xor
and
fistl
fcoms
lock
setg
les
dec
sbb
lods
in
pushf
cmp
jp
mov
sbb
mov
pushf
repz
cwtl
jmp
jle
pop
or
mov
inc
inc
jp
aas
inc
js
jb
in
dec
in
or
je
lret
icebp
jecxz
fwait
outsl
divb
loope
cwtl
pushf
js
mov
inc
out
dec
fs
or
fwait
mov
xor
lret
mov
push
lock
pusha
das
lods
jmp
mov
and
daa
jl
out
inc
pop
es
mov
insl
dec
pextrw
dec
and
mov
mov
sbb
mov
jno
and
or
pop
sbb
rcr
cld
mov
movsb
xor
aam
mov
ret
jne
sbb
lret
scas
fisttpll
dec
stc
xchg
lds
popa
sub
aaa
lods
std
mov
ljmp
ljmp
nop
sub
cltd
cmc
incl
test
pop
push
mov
jns
xchg
bound
test
pop
cmp
jecxz
ljmp
scas
push
stos
push
push
xchg
scas
mov
add
scas
js
pop
mov
xor
mov
mov
cmpsl
repz
pop
sub
dec
sub
cmp
or
lea
dec
pop
cwtl
push
jne
add
mov
ja
out
or
bound
popf
jns
mov
in
cmp
mov
mov
test
xor
jp
fldt
ficoms
push
mov
jne
outsb
jle
mov
std
pusha
xchg
out
stos
filds
arpl
movsl
pop
jmp
das
pusha
jl
cmp
ficoml
fdivs
in
mov
xor
sti
add
push
mov
sarl
call
push
inc
aaa
repnz
dec
dec
iret
xchg
ret
in
mov
and
xor
or
push
mov
mov
popa
sbb
es
scas
ficomps
lds
adc
repnz
leave
sub
pop
hlt
nop
sub
jbe
test
stos
sbb
pop
jo
add
xchg
jle
fnstcw
std
pop
int3
mov
push
icebp
pop
xor
lret
scas
fwait
or
sbb
cmp
imul
jne
push
mulb
enter
daa
mov
pop
cmp
in
shlb
inc
pop
jl
dec
js
jno
fnstsw
jns
push
movsl
movb
pop
hlt
lahf
sub
mov
inc
cld
sbb
je
test
mov
js
bound
push
push
shl
xor
cmp
jns
outsb
cmc
adc
adc
std
inc
insb
mov
cmc
dec
sbb
pop
pop
xor
int
push
mov
jnp
sub
lcall
mov
inc
insb
cmp
sub
outsb
test
imul
mov
cmpsb
jg
inc
and
push
adcb
inc
xor
push
mov
out
adc
rcr
push
ret
not
daa
pop
lret
rol
push
fs
dec
ljmp
leave
fsubrs
xor
imul
pop
dec
js
inc
bound
inc
mov
and
xchg
lret
cmp
sbb
cmp
addr16
or
dec
sbb
call
dec
mov
adc
hlt
imul
mov
xchg
mov
dec
fnstsw
mov
sub
add
lods
jnp
sti
and
mov
into
nop
push
inc
mov
aaa
jb
inc
and
push
les
int
repz
adc
lahf
sbb
loope
pusha
call
lcall
adc
xor
pop
scas
sub
inc
push
rclb
pop
jno
aas
fists
mov
jne
dec
fs
jecxz
ss
jecxz
pop
out
idiv
dec
pop
std
cltd
lret
push
pop
cmp
mov
stos
stos
andl
int3
mov
xlat
lods
mov
pop
pop
lock
std
das
mov
pop
mov
test
sarl
xchg
scas
insl
ss
xor
or
cmpsl
mov
into
mov
pop
addl
sub
inc
and
cmpsl
mov
pop
cmp
lock
aad
daa
test
ret
add
sub
and
pop
clc
jbe
push
xchg
add
test
popa
aas
filds
mov
es
jb
pop
les
jmp
add
out
or
inc
inc
xor
push
xor
mov
mov
xchg
dec
adc
mov
test
jns
xchg
sbb
sbb
adc
stos
fimull
add
inc
ljmp
adc
or
and
lods
daa
mov
ljmp
pop
out
mov
dec
sbb
adc
cmp
dec
cmp
pop
jne
lret
scas
cmp
out
bound
idivb
nop
xchg
in
ficoms
icebp
push
clc
out
dec
imul
pushf
push
adc
push
mov
mov
mov
jnp
jle
mov
in
xchg
and
in
stos
fbld
std
add
mov
out
sahf
or
mov
fwait
sub
mov
pop
int3
push
je
loopne
inc
push
or
insb
arpl
cmpsl
jnp
adc
scas
pop
imul
iret
out
jbe
stos
sbb
pop
ficoml
inc
inc
dec
mov
jecxz
push
inc
and
lods
push
pop
addb
loop
adc
hlt
dec
xor
fistl
pushl
adc
xchg
jne
shrb
mov
inc
adc
lahf
inc
pushf
hlt
jae
sbb
aad
mov
popa
aaa
les
iret
add
or
pop
loopne
pop
sti
loopne
push
aam
sbb
and
int3
test
push
inc
mov
or
and
cwtl
movsl
cmpsb
mov
iret
enter
daa
mov
adc
inc
loopne
jno
dec
mov
dec
loopne
fidivrl
pushf
push
adc
cmc
mov
lahf
dec
or
push
sbb
inc
test
or
and
imul
pop
lret
js
test
pop
and
xchg
push
dec
mov
dec
push
lods
sub
inc
jl
mov
dec
outsb
pop
out
and
fdivs
mov
enter
movsb
fiadds
xor
daa
pushf
push
ret
int
cltd
cli
sub
popf
inc
lcall
int3
fdivrl
dec
sub
mov
dec
test
das
mov
popf
jp
mov
sti
pop
mov
mov
and
mov
and
notl
outsb
aaa
shll
xor
daa
dec
fmulp
lods
push
pushf
cmc
nop
xchg
wrmsr
fsub
mov
loop
or
stc
push
jp
fs
lods
adc
mov
in
add
icebp
mov
out
mov
pushf
xor
cmp
xchg
orb
es
inc
fsubrl
out
or
pop
mov
loope
cs
insl
adc
xlat
push
add
mov
xchg
jl
xchg
sbb
ret
push
ret
xlat
adc
sub
scas
ja
mov
in
sbb
ret
sti
aam
loop
rcll
push
nop
das
xor
dec
xchg
cmp
xor
fidivl
repz
jns
mov
fcompl
mov
xor
pop
cmp
inc
adc
pushf
dec
cltd
pop
jmp
xor
ja
inc
fdiv
mov
ja
hlt
aas
jle
xorb
fmull
sub
jecxz
out
idivb
insb
std
inc
xchg
in
adc
shlb
xor
push
dec
dec
loope
fistl
int3
les
shrb
das
push
pop
mov
fs
dec
and
pop
pop
rorl
add
adc
dec
sbb
jno
fcmovu
fcomip
ss
add
lret
xchg
push
adc
push
imul
pop
pop
sbb
rolb
cld
mov
ret
xchg
mov
push
int
fstl
clc
mov
jge
inc
lret
aaa
in
pop
popa
push
adc
shll
gs
mov
cmp
mov
jno
cmovle
push
add
in
cltd
arpl
sub
mov
jbe,pn
ret
mov
dec
sbbb
xchg
mov
rcrl
adc
stos
in
pop
xchg
push
fcmovbe
inc
add
pop
cmp
xor
in
fsts
mov
sub
jle
pop
mov
xor
dec
push
sbb
inc
add
or
mov
fisttpl
mov
mov
push
adc
inc
push
in
bound
jecxz
xchg
aam
xchg
inc
sti
out
or
das
or
pushf
fldenv
inc
dec
jp
sbb
mov
mov
dec
jle
mov
fs
leave
call
filds
mov
jmp
adcl
push
pop
popf
push
popf
mov
mov
iret
stos
mov
lods
and
pop
insb
into
push
sbb
dec
mov
cmpb
push
aad
lea
popf
xor
inc
mov
ret
sub
mov
jae
or
or
pop
and
ficoml
orb
sbb
imul
test
mov
dec
movsl
rolb
repnz
in
scas
leave
push
stc
movsb
hlt
es
arpl
sbb
jge
adc
jo
xchg
subl
add
xchg
into
int3
inc
xlat
inc
pop
sub
aad
mov
out
xor
sbbb
and
xchg
cmp
iret
icebp
cmpsb
or
fsubr
adc
aad
mov
arpl
je
dec
jno
jno
jl
adc
dec
sub
mov
es
and
imul
in
fs
fcomps
or
cs
mov
js
cmp
pop
arpl
cld
loope
push
ja
or
jmp
adc
mov
repz
jge
and
arpl
or
in
call
xor
faddl
lds
cmp
mov
adc
sbb
inc
rcrl
lds
das
sub
push
sahf
stos
mov
test
or
mov
pop
orl
jne
ds
mul
cmp
jle
outsl
notl
or
xchg
orl
mov
in
xor
lret
mov
adc
in
jo
stc
int
out
fs
dec
add
dec
sub
ljmp
out
xor
xor
adc
cmp
xchg
jmp
mov
addr16
testb
loopne
jo
pop
rorl
adc
outsb
imul
add
out
movsb
sbb
das
pop
xlat
push
mov
sub
adc
in
xorl
xorl
pop
jno
clc
adc
nop
or
fisttpl
movsl
inc
dec
dec
fldcw
sbb
push
iret
jg
sbb
mov
cmpsb
cmp
sbb
lods
cwtl
cmp
out
std
xor
mov
aam
jmp
xor
hlt
mov
jnp
xchg
fwait
mov
jb
das
loopne
push
mov
je
mov
jge
jg
sub
out
sti
cwtl
int
je
fnstenv
sarb
xchg
in
mov
out
lock
cmp
mov
fwait
mov
rcr
subl
add
in
dec
adc
push
cmpsl
mov
addr16
or
xchg
push
out
lret
and
pop
cmp
cmp
jns
inc
rclb
popa
sub
jne
ret
and
push
nop
sub
fldl
aaa
clc
in
lea
xchg
xorb
popa
insl
gs
ds
and
bswap
mov
in
xchg
ljmp
shrd
sub
insl
and
lcall
mov
out
in
xchg
nop
in
jmp
call
push
sbb
sbb
shl
lods
jle
incl
stos
fdivr
pop
push
jge
adc
jns
call
xor
subl
jae
mov
jo
mov
pop
pop
add
mov
rorb
xor
cmp
fwait
insl
mov
add
mov
cmp
out
and
jecxz
aaa
pop
imul
daa
in
pop
xor
in
out
cs
sub
repnz
adc
jp
dec
mov
cld
movsl
mov
jns
sub
stc
mov
fs
pusha
cmp
inc
jmp
nop
or
and
xchg
and
popf
out
jl
mov
repnz
daa
aaa
adc
push
test
insb
cmp
enter
in
push
sbb
xchg
adc
lcall
lock
pop
dec
pop
ret
inc
push
movsb
insl
jae
fidivl
inc
daa
mov
or
flds
xchg
dec
pop
mov
sbb
ret
mov
mov
lds
sarb
mov
in
xchg
leave
lea
hlt
jno
xchg
arpl
arpl
test
lahf
sbb
movsb
xchg
aaa
inc
add
push
adc
int3
mov
push
push
lcall
jo
xchg
outsl
scas
cmp
and
cmpb
fbld
push
orl
xor
test
test
cmp
mov
out
mov
rorl
fldt
lahf
mov
sbb
sbb
test
mov
dec
scas
icebp
jb
pop
sbb
sbb
test
pop
mov
push
aam
js
push
sub
mov
scas
outsb
push
jge
adc
mov
decb
jbe
adc
ss
hlt
add
fisubs
push
enter
sbb
les
cwtl
rclb
aad
mov
stos
jp
aam
inc
sub
lcall
movsb
cmp
push
clc
push
mov
jnp
mov
fsubs
and
add
cmp
and
jp
add
mov
cs
sbb
sbb
cmc
push
mov
xor
rcrl
test
xlat
adc
lahf
lods
shll
mov
and
sub
cli
shll
xor
data16
imul
cli
cmp
decb
gs
xor
repz
lock
mov
imul
jl
xchg
add
mov
cmp
lahf
xor
xchg
push
hlt
sub
xchg
adc
out
dec
sti
xor
cs
sbb
aad
xorb
in
fimull
stos
jns
pop
out
fldenv
mov
repz
lcall
xchg
push
mov
pop
ret
rcrb
cmp
pushf
lahf
in
jmp
mulb
xchg
out
inc
out
adc
lods
into
imul
push
pop
testb
pushf
je
add
insl
test
jne
mov
adc
and
mov
mov
jo
and
mov
lock
jmp
mov
jg
mov
das
sub
dec
mov
es
or
sub
out
push
add
jmp
sbb
cltd
dec
cmpsl
scas
daa
sahf
mov
in
lcall
dec
push
mov
pop
jne
mov
cwtl
loope
shrb
or
sub
insb
ffreep
mov
adc
fiaddl
clc
daa
and
rcrl
sbb
fdivrp
lods
test
pop
lods
out
dec
cltd
pop
xchg
xor
adc
or
jmp
cltd
shrl
test
mov
mov
hlt
xchg
push
push
xrelease
dec
sbb
mov
pop
stos
leave
xchg
stos
lret
lods
fcomps
and
sbb
add
jae
or
or
adc
xlat
mov
mov
mov
pop
xor
ja
jno
testl
push
sub
cmp
cmpsb
dec
in
data16
ja
mov
add
out
call
out
pusha
repnz
test
test
adc
sub
in
pop
push
addr16
aam
in
das
lds
daa
in
mov
cwtl
stos
jle
lods
sub
add
fistpll
add
mov
aad
xchg
pop
xchg
lock
push
in
ss
adc
into
inc
push
xor
mov
and
cmp
movsb
mov
mov
push
push
arpl
push
ror
add
ret
mov
mov
jae
lock
inc
sub
or
push
andb
sti
mov
out
sbb
cmp
imul
fcmovnb
sub
repz
mov
aas
inc
daa
leave
add
sbb
mov
in
jbe
out
jge
cmp
sbb
xor
add
imul
sbb
pop
mov
nop
push
jge
sbb
ss
xor
and
cmpsl
mov
cs
movsb
imul
push
rolb
lahf
cmpsb
adc
loope
fdivp
push
enter
daa
scas
es
jno
cmpl
dec
sub
add
movsl
loop
sub
jp
lahf
cmpsl
xor
fisubrl
outsb
xchg
inc
jns
cld
mov
imul
push
js
arpl
push
imul
or
sub
mov
cmp
xor
shrb
jp
cmp
sbb
insl
mov
xor
push
lret
aad
int
dec
subl
mov
mov
push
jae
cmpsl
fdivrl
ss
xor
icebp
xchg
call
andb
mov
mov
int
mov
add
xchg
adc
ss
cmp
cmp
hlt
and
rolb
rol
jp
mov
hlt
inc
push
sbb
div
in
cmc
xor
int3
fisubrs
xchg
loop
fdivrs
outsb
mov
adc
ret
push
imul
out
stos
js
push
movsl
jbe
cmpsb
loopne
cmp
adc
or
out
lods
inc
mov
sub
int3
in
pop
sets
adc
es
adc
cld
inc
add
mov
cmp
xlat
shlb
cltd
mov
pop
cmp
add
cli
int
aad
push
notl
mov
stos
inc
outsb
cmp
les
push
mov
adc
stos
add
call
xchg
rorl
adc
rcrb
jle
pop
cmp
pop
inc
insl
mov
inc
enter
pop
fwait
mov
mov
mov
sbb
not
popa
testb
xchg
cwtl
inc
mov
add
addl
add
mov
in
mov
lahf
lock
gs
pop
fsubl
mov
push
and
jae
sarl
xchg
es
lods
insl
rol
mov
cmpsl
scas
xchg
mov
mov
outsl
jmp
mov
adc
pop
mov
xor
sub
hlt
aam
mov
ret
inc
cmp
fstl
inc
clc
bound
xchg
add
ljmp
js
adc
les
mov
adc
push
push
dec
imul
xchg
nop
inc
cltd
or
mov
mov
cmp
xchg
and
test
cmpsl
and
shll
stos
mov
pop
push
cld
stos
mov
test
add
scas
mov
loopne
pop
lret
ds
in
xor
mov
mov
notb
mov
shlb
shll
inc
sub
mov
inc
aas
ss
cmp
dec
xchg
or
int
mov
sbb
fidivrs
and
pop
pop
push
in
mov
xchg
sub
loope
sub
call
jnp
jp
adc
push
clc
test
mov
adc
lcall
xchg
nop
jnp
jmp
es
addl
push
cmpsl
jnp
popf
cmp
mov
jo
stos
or
push
adc
test
xchg
cld
scas
stos
bound
stos
pop
aaa
adc
sahf
mov
ret
sti
pop
mov
ret
dec
ret
jae
dec
xchg
inc
sub
mov
inc
push
stos
stc
fisubrl
daa
aad
mov
jmp
fimuls
and
mov
xchg
mov
fs
pop
aad
arpl
mov
cwtl
mov
or
inc
sbb
mov
leave
add
gs
int3
add
pop
mov
js
pusha
shlb
xchg
mov
scas
idiv
jo
fsubr
cmp
pop
xor
testb
push
and
loopne
xchg
mov
mov
daa
scas
inc
enter
cmp
ret
sbb
push
dec
pushf
in
sub
mov
and
xchg
lahf
mov
jbe
repnz
push
cmp
jp
or
mov
js
lods
pop
and
clc
loope
aaa
data16
sbbl
in
iret
adc
inc
das
push
lcall
sbb
lea
xor
pop
push
into
push
int
ljmp
pop
push
dec
repnz
clc
fsubrl
mov
sahf
xchg
mul
test
adc
jg
xor
mov
push
mov
stc
inc
add
sbb
cwtl
push
test
scas
inc
testl
jle
mov
sub
into
cmp
pushl
dec
in
lods
outsl
dec
gs
cmpsb
fxch
stc
repnz
stc
sub
data16
mov
lods
lahf
xchg
dec
mov
mov
lea
xor
cmp
xchg
adc
shlb
add
pop
les
adc
xor
nop
add
mov
add
xchg
mov
ja
scas
cmp
pcmpeqd
dec
loopne
or
insb
in
dec
sti
nop
filds
aad
xchg
nop
fwait
rcrl
nop
es
add
rol
dec
out
repz
jmp
in
jns
mov
adc
fabs
adc
or
pushf
cmc
jg
jmp
lret
fnsave
addb
cmp
cli
inc
mov
sbb
je
cltd
mov
add
pop
imul
incb
mov
adcl
sub
push
sub
xchg
stos
test
inc
movsl
lcall
and
es
in
insl
mov
cmpsl
lods
imul
cld
shlb
ds
push
dec
stos
mov
insl
adc
mov
mov
ror
dec
mov
outsb
cmp
aam
push
mov
push
fstps
popf
push
and
ljmp
pop
lods
jg
sub
adc
jecxz
push
xor
fildl
cmpsb
or
push
push
sbb
iret
fistps
push
ret
lods
test
in
xchg
mov
adc
and
pop
add
dec
stos
test
subl
lret
inc
or
xor
es
xor
xchg
xlat
mov
cmp
mov
lea
pop
dec
fcmovb
repz
pop
test
or
or
xor
stos
xlat
into
jne
mov
mov
inc
sub
mov
dec
push
jns
addr16
mov
cmp
pop
jmp
js
jecxz
popf
addr16
adc
mov
movq
jle
imul
jmp
mov
inc
push
jmp
icebp
stos
hlt
adcl
mov
mov
scas
nop
test
add
and
adc
jnp
fdivr
scas
push
add
icebp
mov
iret
rorl
or
cltd
inc
js
xorl
sbb
dec
xor
arpl
popa
lock
xchg
imul
sbb
stos
lods
imul
xchg
lds
mov
shl
cmpl
push
leave
repnz
hlt
push
repz
jbe
mov
sbbb
and
aaa
jg
adc
mul
add
jno
out
cli
pop
pop
out
std
push
inc
xchg
xor
in
loopne
scas
aad
pop
and
inc
push
movsb
sbbl
mov
enter
daa
lods
in
fdivrl
inc
xor
jl
mov
dec
or
add
cld
mov
lahf
in
xor
cmp
jmp
lds
cmp
pop
js
fsubrl
push
scas
movsb
loope
mov
cmp
fstpl
inc
jns
adc
pop
add
subb
cli
add
push
fdivs
add
in
roll
int
mov
sub
sbb
xchg
add
out
insb
pop
push
and
aam
sub
dec
pushf
test
dec
inc
adcb
jg
movsb
sbb
jo
mov
add
data16
fisttpl
cmp
push
push
testl
sbb
test
push
mov
in
sbb
and
into
sbb
or
jae
divl
mov
cmp
fs
test
sbb
pop
js
lods
xchg
out
xor
cli
insb
cmp
push
inc
add
loop
or
jo
repz
gs
mov
add
fistl
dec
mov
gs
fs
add
stos
xor
testl
repnz
mov
mov
das
xchg
push
aas
mov
aad
and
nop
jbe
rorb
filds
jg
sarl
les
adc
push
nop
ja
mov
inc
lea
mov
xchg
jp
pop
mov
repz
inc
iret
inc
jnp
xor
fistpll
jb
adc
xchg
je
loope
jecxz
int3
sbb
mov
stos
cwtl
mov
fsubl
lock
dec
in
ret
fstpt
in
xor
aaa
mov
cmpsb
pop
lock
mov
sub
imull
and
stos
dec
rcll
lea
fiaddl
sub
pop
sbb
f2xm1
imul
aad
ret
mov
je
push
mov
cmc
test
shlb
cmpsb
dec
aam
dec
pop
ret
pop
inc
xor
frstor
push
mov
ljmp
adc
movsb
mov
xchg
push
push
sbb
lock
movaps
lret
cltd
jbe
pop
test
pusha
mov
lcall
test
test
mov
xchg
sub
sbb
pop
xor
dec
xchg
pop
pop
stos
sysenter
stos
cwtl
fs
push
or
add
in
call
xor
into
or
nop
mov
jl
idivb
dec
xchg
dec
ja
xchg
jle
int
push
inc
hlt
out
jnp
inc
mov
fwait
sub
dec
lea
outsl
mov
andb
lcall
sbb
xchg
lret
xor
cli
xor
fimuls
addr16
push
jp
adc
mov
jle
dec
jle
cmp
in
es
in
adcl
loop
xchg
mov
push
aaa
push
sub
std
mov
push
out
sub
repz
and
nop
insl
jnp
ljmp
cmp
outsl
iret
and
mov
sbb
sbb
jae
leave
in
inc
xor
xchg
or
inc
push
xlat
adc
icebp
xchg
ret
sbb
mov
lahf
sub
mov
aas
movsb
mov
cmp
imul
adc
push
arpl
push
sarb
test
sbb
lret
push
or
cmp
cmpsb
mov
ficoml
femms
cmp
test
and
scas
mov
xor
mov
dec
cmp
int
or
out
mov
fstl
enter
daa
lods
adc
js
push
pop
outsl
jl
jp
dec
jp
outsl
outsb
inc
out
imull
lahf
add
mov
or
test
iret
loope
inc
es
dec
std
fldcw
pop
mov
cmpb
leave
pop
sahf
mov
mov
sub
lcall
stos
or
sar
in
pop
and
sub
adc
push
xor
push
aam
or
mov
mov
pop
adc
xchg
lcall
faddl
mov
sahf
ficoml
xorb
jg
pop
cld
mov
cld
mov
push
decl
and
cmc
cmp
push
aas
cmp
and
js
lret
inc
aas
push
add
lcall
cmp
outsl
or
pop
loop
js
stc
pusha
out
xor
pushf
adc
inc
jne
fsubrl
cwtl
mov
xor
mov
cli
lahf
xchg
push
xor
es
or
cmp
gs
jmp
popf
stos
in
insb
sub
and
mov
jle
add
push
xchg
add
xchg
push
fdivrp
sbb
and
cmpsb
shrb
lods
int
mov
lcall
and
push
nop
push
orl
cmpsl
outsl
stc
fnstcw
mov
repz
stos
mov
mov
sbb
adc
repz
or
jmp
lods
in
and
inc
add
jns
sbb
aas
cmp
lds
out
je
jle
jecxz
sub
test
std
sub
sbb
je
imul
dec
ja
lds
fldt
aaa
mov
adc
hlt
or
das
movsb
pusha
mov
push
mov
mov
shll
mov
pop
xchg
shrl
jbe
dec
cli
insb
dec
cmpsl
stos
mov
outsb
icebp
inc
adc
pusha
lret
xor
jmp
test
in
pop
adc
and
je
pop
sub
aam
loop
in
sub
ffree
cmp
adc
dec
xchg
mov
cwtl
jg
loopne
adc
inc
lcall
lods
mov
js
stos
mov
test
and
aad
add
in
lods
dec
test
sbb
sbb
lods
shll
and
stos
xchg
jns
lods
adc
add
add
adc
push
inc
xor
mov
mov
popf
mov
lds
add
shlb
jge
rorb
jl
or
sub
add
jne
sub
out
jnp
das
bound
and
insl
aas
in
jg
xchg
sbb
out
push
gs
fld
xor
or
jp
les
xchg
out
mov
in
jne
jle
cli
or
sbb
adc
xchg
or
jns
xor
xchg
sub
lock
popf
mov
add
sub
cmp
pop
aad
push
in
jnp
mov
fcoml
rorl
mov
rol
fwait
lahf
pop
pop
and
jae
out
into
inc
mov
je
inc
xor
inc
shll
dec
fcmovb
setge
mov
rcl
je
mov
inc
adc
es
inc
mov
mov
leave
loopne
int
call
push
int3
jbe
arpl
lcall
rolb
cmp
std
mov
lgdtl
add
pop
inc
xchg
popf
push
or
shll
jns
scas
xchg
nop
out
and
mov
cmp
in
movsb
xchg
push
std
push
push
test
repz
jp
out
enter
daa
stos
ret
cmpsb
cmp
or
testl
inc
pushf
movsl
fbld
xor
lahf
and
push
push
fidivrs
andps
pop
cmpsl
rclb
js
movsb
das
pop
frstor
push
shll
jmp
pop
sub
jecxz
cmp
fisubrl
nop
xchg
adc
aad
mov
aad
pop
sbb
inc
add
pushf
mov
mov
mov
int
push
mov
jmp
clc
pop
xchg
mul
lcall
and
sub
and
inc
repz
cmp
pop
ss
mov
ficompl
ss
sub
fsub
sub
test
add
jo
mov
aad
into
loope
shl
push
jb
pop
ret
jmp
pop
loop
push
repnz
pop
xchg
mov
lcall
pop
push
lea
push
aam
out
lret
shlb
imul
lea
and
jbe
and
cmp
pusha
imul
push
loope
jne
xchg
adc
sbb
sbb
cld
sbb
pusha
ja
xlat
int3
add
sub
sahf
push
mov
add
cs
xchg
xchg
aad
jle
nop
sub
jp
das
add
out
fnstenv
aaa
les
mov
outsl
lea
jmp
lahf
xchg
xor
adc
sub
jmp
inc
lret
inc
add
mov
ret
inc
xor
push
xlat
gs
mov
push
dec
sbb
jo
mov
jecxz
shrb
notb
xchg
std
rcrl
mov
mov
cmc
inc
mov
xor
dec
mov
mov
pop
mov
fisttpll
das
addl
in
icebp
mov
fnsave
cmpsb
shll
sbb
dec
cmc
adc
stos
sub
aas
mov
icebp
pop
sub
lret
mov
pop
repz
jg
leave
pop
xor
sub
ret
jl
sub
pop
out
out
add
clc
dec
mov
xchg
cld
lock
push
repnz
notl
lods
shlb
out
mov
xchg
cmpsb
lahf
push
ret
loope
movntq
add
jbe
btr
inc
xor
test
adc
mov
sar
fdivl
add
jge
dec
lret
jno
or
arpl
sbb
cmp
stos
and
sbb
out
sub
add
fnstcw
mov
out
dec
dec
mov
mov
and
mov
jnp
fwait
xchg
jne
adc
mov
aaa
mov
pop
sub
bound
gs
pop
ret
imul
gs
aam
xor
jp
sub
mov
add
decb
jle
scas
insb
in
int3
sub
mov
fistps
pop
sub
fmul
lcall
outsl
addl
push
mov
lds
jge
add
in
stos
fldcw
dec
insb
mov
push
scas
aaa
pushf
lods
push
push
aaa
adc
or
inc
pop
pop
xchg
sarb
jae
pop
mov
or
mov
adc
fidivrl
adcl
push
cmp
ficoms
pop
adc
rolb
mov
fisubrs
out
xor
arpl
in
jge
mov
getsec
mov
or
sub
int3
mov
cmp
loop
push
in
jp
xor
std
jecxz
scas
jb
jl
scas
mov
cmp
or
adcb
fisubs
popa
xor
repnz
adc
jb
add
jl
testl
xor
add
movsb
cmpsb
lahf
inc
jne
push
mov
test
into
pop
fwait
push
gs
pop
inc
inc
daa
pop
add
pop
add
adc
sbb
pop
push
pop
push
loope
pop
repnz
add
cmp
out
outsb
jo
sahf
adc
mov
test
call
aad
add
mov
rolb
fdivrs
xchg
pop
adc
sbb
es
addr16
push
cmp
outsb
mov
xlat
test
fstl
jg
or
mov
jne
mov
into
sbb
and
fistpll
movsb
mov
out
dec
cmp
fwait
mov
pop
lret
sub
insl
mov
mov
aam
into
les
cmc
enter
mov
add
fsubrl
stc
into
filds
xchg
dec
push
data16
je
cmp
and
mov
pop
cli
add
pop
inc
cmp
into
pop
or
push
gs
aam
loopne
call
push
adc
xchg
popf
imul
add
add
cmp
out
sub
cmp
dec
es
cs
inc
dec
nop
pop
xchg
repnz
mov
and
lods
in
les
addr16
sbb
js
pusha
adc
or
jg
adc
ss
mov
mov
rolb
addl
and
mov
mov
jecxz
mov
or
cwtl
ljmp
mov
int
xor
sbb
or
mov
ret
shlb
stos
loopne
das
bound
dec
mov
sbb
xchg
and
repz
add
xchg
arpl
add
mov
mov
mov
out
pop
sub
jle
or
mov
mov
adc
push
xchg
call
sbb
sahf
sub
aam
sbb
ret
or
out
in
cwtl
fstl
mov
dec
ljmp
cltd
lods
sub
inc
out
mov
add
push
sahf
clc
pop
cmovbe
xlat
cltd
sbb
fdivs
fisttpl
dec
mov
mov
sbb
pop
sbb
push
mov
popa
stos
gs
push
bnd
add
mov
cmp
repz
xchg
clc
add
add
mov
inc
add
mov
shll
popa
fmuls
test
inc
mov
popf
in
mov
cltd
dec
fbstp
pop
xorl
cmp
cmp
add
xchg
mov
aas
sub
iret
insb
lcall
inc
aas
mov
inc
jns
sub
rorb
outsb
pop
outsl
in
xor
insl
fistpll
sbb
xchg
scas
psubsw
call
xchg
jbe
or
mov
or
dec
or
hlt
push
insb
or
movsb
stos
xor
or
loope
iret
cmp
dec
push
pop
leave
and
inc
movsb
cmpsl
add
pop
lods
inc
cmp
or
test
sarl
fisubrl
mov
sbb
jns
imul
fidivrs
pop
outsb
rcrb
inc
and
repnz
add
hlt
jle
inc
arpl
and
pop
jge
sbb
sbb
lcall
jle
add
pop
lret
pop
mov
or
jo
bound
and
jne
js
pop
movsb
lods
shll
push
lods
adc
cmpsb
and
std
in
dec
mov
enter
daa
test
sbb
jno
push
jl
inc
mov
xlat
sbb
movsl
or
xor
push
hlt
mov
test
xchg
test
xor
insb
inc
sarl
pusha
inc
imul
js
mov
ds
movsb
loopew
aas
data16
repnz
cmp
jbe
adc
mov
adc
sti
inc
adc
add
xor
xchg
push
fstpl
jne
cmc
add
pop
xchg
es
std
faddl
iret
mov
push
sub
add
sarb
mov
mov
mov
ret
cmp
out
mov
push
stos
mov
dec
or
rol
add
aad
jbe
sbb
into
xchg
dec
into
cmpsl
imul
mov
outsl
test
in
in
test
adc
mov
lcall
push
dec
lods
and
mov
out
jb
cli
cmp
cmp
mov
sbb
or
sbb
jg
cmp
cs
or
pop
leave
fsubrl
adc
lock
adc
and
add
mov
xchg
sbb
fldcw
sub
pop
out
mov
idiv
sti
loope
cs
add
aad
insl
call
dec
in
adc
inc
loopne
leave
ftst
xchg
les
aaa
mov
cmp
call
nop
cld
test
adc
lcall
roll
push
jge
xchg
and
xor
adc
cmp
or
xchg
je
dec
pushf
jecxz
in
notb
fisttpll
movsl
and
mov
pop
xor
orl
sub
popa
movsl
pop
lock
or
mov
repz
rcll
test
insl
cmp
ret
dec
jmp
push
cmpsl
test
or
lds
nop
lret
jle
pop
mov
nop
in
popf
mov
jno
in
shr
js
sub
adc
adc
jl
push
test
stos
fnstsw
stos
clc
les
xchg
jp
ds
push
lods
xchg
lcall
add
push
xchg
and
push
jns
aad
movsl
mov
add
or
test
cmp
dec
and
test
les
sbb
cli
pop
push
pop
lea
xchg
adc
add
push
sbb
fsubr
push
xor
out
or
pop
repz
scas
push
mov
mov
mov
xor
mov
stos
pop
adc
rolb
std
in
or
xchg
loopne
in
inc
dec
sbb
jne
or
cmp
mov
sbb
mov
iret
arpl
jns
inc
ja
jne
pop
xchg
pop
mov
and
lret
addr16
jp
push
in
mov
cmpsb
pop
mov
cmp
inc
in
add
cmp
stc
fistps
call
jmp
call
mov
push
cmp
sbb
ljmp
and
test
mov
push
leave
jnp
std
jo
push
push
cmpsl
xchg
adc
test
pushf
xlat
xchg
ret
and
add
mov
scas
sbb
jae
clc
xchg
sarb
push
push
popa
in
loopne
mov
push
cmp
fisubrs
jnp
ficomps
lret
pusha
sub
ja
mov
test
jge
inc
sbb
hlt
leave
jbe
arpl
repz
inc
sub
pop
pop
sbb
xor
or
fldenv
int3
xchg
jmp
ror
xchg
push
mov
int3
xor
mov
mov
and
pop
repnz
cmp
mov
stos
inc
cmpsb
cmpsl
or
das
and
enter
daa
test
xchg
cmp
push
test
mov
loopne
aas
subl
cli
bnd
adc
loope
add
pop
push
push
sub
test
sti
pushf
mov
or
xor
cmpsl
add
lcall
loope
inc
daa
sub
mov
cmp
pop
outsb
fdivs
int
shlb
fimuls
push
mov
out
adc
and
or
rclb
jo
rolb
adc
lcall
push
fsubrl
cmp
dec
ret
data16
dec
test
fiadds
fidivrs
xchg
jg
push
xchg
mov
mov
fnstenv
sub
cmp
adc
testl
cmpsb
jb
fwait
cmpsl
rorl
push
pop
into
mov
cmc
push
push
xor
xchg
outsl
mov
cld
stc
cmp
shll
notb
das
pop
nop
callw
lods
or
std
out
mov
cli
imul
xor
in
or
outsb
mov
outsb
mov
pop
call
sub
pop
movsl
push
dec
and
add
mov
jmp
cmc
sub
cwtl
mov
inc
repnz
sti
stos
popa
in
scas
pop
cwtl
aad
cli
xor
dec
sahf
int
repz
or
les
mov
lea
push
call
xcrypt-ecb
cmpsl
or
adc
mov
pushf
divl
mov
pop
scas
jmp
inc
push
rcll
aas
mov
mov
add
shll
jecxz
push
gs
arpl
cwtl
pusha
gs
sbb
mov
sub
dec
jl
sub
push
leave
jge
sub
subl
cld
int3
mov
mov
and
jb
shll
sub
mov
dec
out
leave
cmpsl
cmpsl
or
pushf
cmp
lret
in
mov
mov
push
push
add
nop
lcall
cmp
loopne
ljmp
mov
jnp
call
push
ljmp
ja
add
mov
les
imul
arpl
add
icebp
add
test
cltd
mov
ljmp
stos
test
dec
mov
ds
jns
xchg
imul
mov
inc
pop
add
xor
add
insb
cmpsl
jnp
push
xor
mov
out
mov
lret
push
std
mov
out
dec
mov
imul
push
inc
out
xor
pop
jo
adc
jo
cld
xchg
sbb
adc
bound
mov
sbb
pop
in
cmp
push
or
out
lcall
lds
addr16
stos
and
cltd
std
mov
sub
dec
mov
xchg
pusha
xlat
add
xchg
push
das
and
xchg
mov
sub
cld
jle
popf
dec
call
adc
stos
xor
pop
and
or
jnp
stos
movsb
scas
pusha
leave
lds
data16
sub
iret
sti
gs
pop
aaa
mov
inc
mov
cs
inc
inc
and
push
iret
int
ficoml
jmp
loopne
pop
inc
xor
add
and
popa
push
jb
xchg
dec
jnp
subl
leave
mov
lea
out
xor
jge
orl
stc
sbb
or
aas
int
jno
dec
pop
add
push
xchg
add
xor
push
fwait
adc
addr16
lret
cmp
dec
mov
push
dec
mov
cmpsb
sub
push
insl
fs
daa
cmpsl
sahf
lock
jo
mov
repz
xchg
mov
ds
imull
and
fists
mov
test
pop
in
inc
icebp
sub
int3
or
pop
ja
push
js
and
addr16
push
repz
jno
sub
push
mov
outsb
cltd
sub
popa
rolb
lcall
bound
and
sbb
cmpsl
push
jecxz
jnp
mov
imul
adc
fs
sub
inc
imulb
cmp
sahf
or
arpl
fiadds
lret
xchg
scas
mov
mov
mov
jo
mov
and
or
push
fmul
ja
test
lock
xor
mov
sbb
popa
into
insl
pop
or
sbb
idivl
addr16
stos
xchg
mov
fs
mov
lret
imul
mov
jl
xchg
imul
fisubrs
xor
cwtl
cmp
sub
inc
inc
ljmp
movsb
fisubl
adc
inc
cld
imul
fildl
xor
and
sbb
dec
mov
xlat
enter
in
out
mov
mov
call
adc
fwait
nop
cwtl
mov
sahf
inc
push
sub
fsts
xchg
mov
mov
cmpsb
lea
or
in
push
arpl
and
pushf
mov
dec
lcall
inc
int
mov
jo
jb
add
mov
inc
jecxz
or
jnp
std
insl
sub
cwtl
sbb
mov
mov
and
dec
addr16
stos
fistl
cmp
mov
cld
pop
lock
in
sti
mov
inc
iret
lahf
and
xor
es
mov
repz
loope
ret
cmpsl
cmpsb
push
sarb
fildl
cld
pushl
pop
lret
pop
das
mov
sahf
add
jle
pop
scas
mov
mov
aam
fst
ret
mov
jle
fisttpll
pop
inc
xchg
clc
adc
jle
push
je
lods
insb
int
mov
lret
xchg
mov
das
mov
packsswb
push
add
jmp
into
test
adc
dec
out
push
dec
test
ret
rolb
cli
cmp
push
and
lods
imull
push
fldt
dec
add
sti
add
idivb
testb
xor
add
mov
push
inc
stos
mov
stos
xchg
ja
aad
dec
jg
sub
jle
sbb
cli
inc
fwait
inc
fists
add
out
fabs
cmc
ds
in
adc
xchg
movsl
popf
sbb
lods
int
sub
rol
addr16
or
mov
fsts
mov
sbb
jle
or
in
enter
hlt
fcmovnu
xchg
outsb
cmp
dec
dec
outsb
xchg
jle
incl
mov
idivb
imul
stos
movsl
pop
into
and
xchg
popf
insb
notl
jnp
push
pushf
scas
ret
adc
jge
push
sub
mov
pop
xchg
pop
outsb
in
cli
inc
lds
aas
jae
test
inc
inc
loop
or
cmpsl
push
sbb
dec
mov
or
clc
movb
lret
pop
fisubs
aas
mov
lods
mov
cli
repnz
sbb
hlt
pop
imull
arpl
pop
xor
jb
jge
mov
jns
push
aaa
mov
adc
jbe
pop
sbb
js
jg
push
xchg
je
imul
and
shlb
cmp
push
xchg
push
cltd
lods
mov
in
std
popf
fmul
fimuls
daa
cmpsb
fcomip
cmp
jp
jl
jg
dec
adc
stos
ds
adc
and
and
sti
push
lahf
mov
jbe
test
xchg
jb
inc
orb
or
pop
sahf
jge
js
aaa
sbb
push
mov
push
sub
mov
shrb
jbe
adc
sbb
testb
cmp
mov
popl
stos
and
push
out
and
sub
ja
push
addr16
push
adc
faddl
hlt
outsb
sahf
lods
dec
adc
adcb
jg
and
mov
push
mov
bsr
sbb
mov
cmp
xchg
testl
sub
mov
cmp
sbb
push
into
push
inc
div
in
xchg
xor
mov
outsl
inc
xchg
mov
ds
stc
stos
jb
fs
fstpl
int
scas
data16
jb
lods
xlat
cmc
loop
cmp
dec
jp
shrl
xor
dec
xchg
push
xchg
gs
cwtl
mov
pop
es
adc
sti
and
and
add
arpl
xchg
mov
push
ret
ret
das
xlat
pop
cwtl
ret
cmp
mov
sbb
xor
or
ss
inc
nop
nop
jae
mov
ret
cmp
push
xor
mov
lret
repz
ds
mov
dec
lea
cs
or
data16
js
dec
pushf
dec
or
int3
pop
cmc
jb
inc
sub
mov
aas
repnz
jb
cmp
dec
outsl
mov
je
or
jecxz
add
std
adc
jmp
movsb
dec
mov
mov
loopne
dec
cmp
jne
mov
mov
lock
jp
das
fsubp
mov
ret
jp,pn
clc
sarb
and
inc
xchg
inc
xlat
outsl
mov
insl
icebp
jmp
dec
faddl
cmc
cmpsl
movsl
adc
mov
dec
mov
or
lret
add
and
xchg
shlb
or
es
aam
sbb
ret
inc
xor
push
icebp
mov
fnsave
mov
mov
popa
push
sub
sbb
ficoml
or
cmpps
add
pop
pop
cltd
test
dec
mov
shrb
out
dec
dec
push
into
lea
dec
loope
sbb
lea
pop
pop
add
stos
and
push
push
jle
flds
mov
or
xor
jge
insl
or
xor
scas
push
mov
push
jmp
mov
gs
sti
ja
pop
cmp
shrb
inc
adc
insb
or
ret
jne
outsb
xchg
mov
pop
out
mov
mov
jp
jns
in
sti
jecxz
hlt
jb
out
jne
sub
mov
out
cmp
mov
lret
mov
xchg
xchg
in
shll
cmp
xchg
sti
enter
pop
mov
orl
lahf
push
cmpb
mov
cmpsl
ret
sbb
cld
insb
rolb
jnp
mov
ds
sub
loop
loope
sbb
mov
sbb
inc
shlb
jae
adc
sbb
push
int
adc
xchg
and
ret
imul
push
fiadds
outsb
lds
arpl
enter
roll
and
fxtract
stos
mov
arpl
aaa
xor
jp
sbb
xchg
aaa
ja
inc
or
jns
int3
inc
add
pop
int
xor
les
sub
int
pusha
and
push
mov
fxch
xchg
adc
xor
xchg
in
in
repnz
daa
movsl
movsb
cwtl
cmp
inc
dec
jno
push
insl
jl
cmp
arpl
push
movsl
sub
dec
and
ret
fstpl
dec
push
shrb
test
pop
fcmovne
inc
cvttps2pi
push
adcb
adc
mov
push
movsb
mov
aad
inc
loope
xor
cmp
outsb
pop
mov
adc
notl
icebp
je
addb
sbb
push
jmp
push
jmp
and
sub
es
lea
push
fsts
fsubrl
xor
test
int
das
pop
cmpsl
jg
mov
mov
xor
mov
loop
and
dec
int3
ss
mov
fadds
imul
jmp
add
pusha
and
mov
xchg
and
mov
xor
pushf
cmc
stos
sarl
mov
popa
icebp
xchg
les
sbb
sub
aam
lods
mov
test
out
repnz
cli
add
shll
pop
pop
cmp
cmp
or
loop
dec
inc
mov
pop
inc
add
adc
pushf
movsb
adc
and
add
mov
sbb
ret
xlat
inc
push
mov
mov
xchg
mov
fdivs
stos
aad
cli
adcb
pop
xchg
inc
sub
jae
sarb
imul
leave
scas
lea
lret
mov
into
adc
xor
shr
jmp
cmp
dec
inc
inc
sub
aas
xchg
or
cmp
jmp
push
jecxz
cmp
mulb
pop
aad
xchg
mov
xor
out
cwtl
dec
cmp
aas
mov
mov
in
lock
mov
mov
scas
jp
and
cmpsl
sub
pop
mov
repnz
push
insl
fdiv
mov
cmpsl
movsb
cwtl
std
mov
and
ja
cmp
pop
mov
lods
movsl
jmp
in
rcrl
cmp
sub
scas
sub
test
mov
jbe
fcoms
clc
mov
pop
xchg
jbe
mov
popa
sbbl
mov
nop
mov
push
in
jle
and
stc
add
mov
mov
scas
mov
mov
xchg
inc
inc
dec
mov
adc
xchg
js
sbb
jns
add
pop
pop
add
jae
adc
sbb
add
mov
sbb
xor
scas
xor
stos
jg
xor
mov
pop
fwait
mov
and
ja
pusha
nop
dec
gs
dec
inc
lods
dec
nop
or
mov
fwait
mov
or
jne
lods
push
mov
cmp
out
xchg
leave
sub
ljmp
mov
mov
mov
into
sub
mov
ja
add
movsb
jp
pop
pop
mov
popf
stc
mov
div
jbe
sbb
push
inc
pusha
test
arpl
aam
sahf
xchg
into
arpl
xchg
adc
mov
lcall
popf
ret
mov
out
test
or
insb
cmp
call
ret
push
jo
jp
mov
sub
ret
gs
fcoml
inc
fstpt
daa
jae
push
rorb
popf
insl
cmp
sub
xchg
jp
or
imul
push
fsubrp
fadd
in
shl
dec
mov
shlb
leave
hlt
cmc
ja
adc
fidivs
jo
jge
dec
ficompl
out
fdiv
aaa
ss
cmc
or
dec
xchg
xor
call
xor
pop
push
push
scas
lods
sbb
cmp
dec
fwait
movsb
push
aaa
mov
aad
lret
stos
push
enter
daa
movsb
in
ret
movnti
push
mov
jmp
push
dec
repnz
xchg
icebp
movsl
das
insl
and
cmc
lahf
cld
stos
adc
xchg
pop
test
daa
cwtl
fldl
xchg
mov
pop
in
mov
js
sbb
pop
xchg
std
mov
loope
lret
js
push
cmp
mov
insl
adc
rcr
dec
push
nop
xchg
sbbb
sbb
dec
jo
outsl
xor
dec
add
push
in
ss
lock
xor
or
xlat
lcall
sub
fsubs
sahf
repnz
orb
jg
inc
sbb
inc
mov
sub
and
decb
ss
fnstenv
xchg
add
add
push
mov
jecxz
into
push
repz
jb
xor
jno
outsl
add
jo
fs
pusha
fs
out
imul
lods
movsl
cmc
lret
rolb
cli
aaa
scas
lds
jecxz
sarl
add
les
push
push
fucom
jne
sti
pop
fs
repz
loope
adc
je
add
mov
sbb
std
in
cmp
sub
movsl
mov
repnz
sti
data16
cmp
aad
pop
ficoms
enter
aas
inc
adc
notl
loopne
ret
inc
sub
ljmp
or
pop
push
adc
es
xor
pop
cmp
lret
inc
cmp
out
icebp
dec
cmp
xor
shll
cmp
dec
pop
ret
sub
push
jecxz
mov
pop
std
bound
dec
xor
mov
or
testb
mov
mov
inc
add
int3
ds
pushf
xlat
test
data16
ljmp
sub
es
push
insl
mov
aam
cmpsl
mov
clc
mov
cld
andb
mov
mov
shll
or
hlt
rorb
xor
adc
dec
aam
xchg
clc
ret
pushl
push
ja
cmp
call
jmp
cmp
mov
mov
xorl
mov
repz
adcl
dec
jo
in
cltd
and
ret
cmp
mov
out
xchg
add
insb
test
pop
cmp
dec
xchg
outsb
sbb
cli
fwait
rcrl
repnz
scas
cltd
stos
stos
jmp
push
push
les
add
fmul
push
das
popf
xor
or
dec
xor
cld
xchg
mov
xlat
xchg
cmp
sub
add
scas
and
in
inc
dec
pop
pushf
mov
inc
stc
add
int3
xor
dec
mov
xchg
jne
push
shll
scas
bound
and
sub
push
xchg
xchg
jmp
mov
sbb
or
inc
mov
scas
fidivl
sub
mov
dec
jle
push
pop
in
fists
pusha
inc
cmp
fcomip
in
xchg
mov
mov
in
subl
clc
push
or
sbb
mov
and
add
and
cmp
test
lds
fnstcw
push
mov
mov
iret
ja
cmc
ret
daa
pop
adc
inc
out
jle
add
cltd
inc
dec
loopne
or
sbb
inc
lret
cmpsl
mov
pop
lods
mov
roll
insl
sbb
xchg
fimuls
ret
test
repnz
cwtl
or
pop
arpl
divb
or
or
ss
sbb
mov
or
lea
dec
inc
into
int3
sbb
jne
push
and
xor
jp
outsl
scas
mov
push
and
jmp
lret
push
xchg
push
in
mov
mov
daa
mov
es
jo
jl
xor
dec
popa
xchg
ds
pop
or
lahf
sbb
push
jbe
fsubrs
repnz
inc
sub
ret
test
js
out
pop
aad
lahf
push
sub
loope
test
sub
idivb
lret
outsb
and
outsl
jle
lods
je
scas
scas
sahf
subb
sbb
and
sbb
push
out
mov
int
xor
xor
mov
lcall
out
add
sub
cld
sub
xchg
push
enter
cltd
andb
jg
fcoml
mov
subl
and
pop
ss
or
andb
test
pop
test
mov
enter
ds
stc
mov
cmc
cmp
push
xor
insl
pop
outsl
jecxz
and
notl
stc
iret
ficoml
adc
repz
lods
mov
sub
out
lret
push
test
mov
lcall
push
lahf
mull
lds
adc
mov
mov
sub
inc
sbb
xchg
jmp
sub
cmp
loope
xlat
les
jb
or
mov
pop
add
cs
or
ficompl
dec
dec
daa
cwtl
cmp
add
fldcw
iret
mov
repz
lea
int3
call
mov
cld
adc
call
jmp
xchg
pop
fisubs
inc
shr
inc
or
ss
iret
mov
fisttps
inc
out
out
push
jecxz
xorb
or
cwtl
pop
pop
jp
aam
mov
jbe
adc
orb
fistl
loope
adc
dec
lock
aas
fs
jnp
jnp
jl
pop
mov
xor
cmp
es
lahf
mov
cmpsb
lods
fwait
dec
int
mov
mov
shlb
icebp
iret
into
mov
stos
jno
lret
sbb
popa
and
push
in
ss
sub
addr16
das
insl
sub
push
out
aam
rol
ret
hlt
dec
notl
sbb
es
ds
hlt
jp
ljmp
dec
lods
sbb
into
mov
push
fnstcw
push
fwait
enter
inc
mov
ja
mov
test
push
adc
lock
dec
mov
adc
out
xchg
xor
sbb
or
pop
pop
and
mov
push
rcrb
shrb
add
dec
loope
xchg
dec
xor
jmp
rcl
sub
mov
das
mov
pushf
in
shll
inc
ja
cld
inc
dec
dec
nop
mov
or
mov
cmpsl
dec
imul
pop
xor
out
push
leave
or
and
cmp
in
cmpsb
aad
loope
and
and
or
fistpll
mov
mov
icebp
cmpl
fidivrs
test
in
add
pusha
fidivs
fists
mov
cmc
jmp
stos
mov
inc
sbb
lret
hlt
dec
popf
adc
xor
fs
stos
jno
lds
xchg
adc
insb
adc
leave
jnp
dec
scas
dec
iret
dec
push
decb
adc
loope
imul
inc
icebp
mov
mov
or
xchg
cmp
dec
test
ficoml
imul
sub
sbb
lds
fisubrs
or
lds
push
rcrb
stos
mov
jbe
pop
leave
minps
mov
or
pop
ret
aas
jge
fstpl
jecxz
mov
push
or
sbb
loopne
aam
or
ds
add
je
outsl
mov
cmp
inc
sub
cmp
imul
ds
in
cltd
dec
dec
enter
daa
mov
ret
test
mov
push
imul
cmp
xchg
mov
push
dec
jle
test
mov
sub
fwait
xchg
rcrb
xchg
js
dec
rcll
adc
dec
push
fs
loope
subl
stos
add
and
adc
mov
imul
cmp
outsb
xor
hlt
jne
repnz
jge
push
xchg
xchg
or
rcrb
fisubs
pop
sub
xchg
test
inc
or
out
fidivl
lea
mov
ss
stc
pop
fdivs
mov
xorl
in
pop
shll
xchg
sbb
pop
in
fsubrl
cmc
add
xor
mov
stc
xchg
fs
push
adc
cmc
nop
data16
mov
lods
jae
sbb
cmp
sub
cmp
pop
or
jp
pop
pushf
out
loopne
std
mov
or
mov
adc
adc
add
lret
lods
mov
std
cmp
xlat
add
cmp
in
enter
les
add
popf
nop
fucomip
loope
xchg
fldenv
cmpsl
divb
rolb
call
or
pop
insb
hlt
adc
and
stc
mov
jmp
adc
inc
dec
dec
and
aas
outsb
xchg
jb
or
jne
xor
cmp
insb
mov
lret
adc
xchg
outsb
xor
stos
pop
jb
decb
fildl
mov
lock
pop
fnstsw
aam
xchg
iret
aas
sarl
es
pop
insl
lea
dec
enter
mov
popa
je
cmpsb
and
xor
xchg
and
bnd
pop
dec
or
std
sub
jl
aam
pop
inc
ret
sbb
push
std
es
dec
add
xchg
xor
pop
ljmp
or
mov
mov
pop
lock
jbe
xor
ds
cmp
test
mov
add
repnz
test
ficoms
sbb
rorl
mov
xor
push
or
test
add
fsubl
pushl
int3
or
mov
mov
pop
adc
mov
push
fldcw
dec
cmp
inc
jno
jnp
pop
jl
fwait
cs
dec
dec
inc
jne
rorl
mov
iret
sub
jo
jns
clc
inc
in
xchg
xor
out
fwait
and
cmpsl
cmp
add
mov
stc
mov
push
sarb
and
icebp
out
in
lea
pusha
jns
dec
fbstp
popf
and
pop
mov
cwtl
addl
push
mov
sbb
mov
dec
inc
and
push
jnp
or
mov
mov
inc
push
loopne
dec
nop
or
out
sub
cmpl
pop
inc
push
js
or
push
jmp
add
xchg
jg
mov
dec
xlat
inc
imul
mov
mov
xadd
adc
leave
call
hlt
mulb
inc
push
shlb
xor
sbb
shlb
jae
fimuls
pop
jbe
add
or
repz
pop
sbb
cmp
xor
xor
adc
flds
or
xor
sub
add
push
mov
in
sub
enter
daa
mov
stos
jns
xchg
push
ljmp
mov
ds
cltd
movsl
inc
mulb
inc
test
lock
sbb
inc
test
mov
mov
pop
xlat
lahf
pop
popa
mov
repz
push
and
loope
addr16
sub
dec
js
sub
outsb
jmp
and
arpl
xor
adcb
insl
add
mov
xor
add
int
addl
push
jne
push
xor
jl
sub
xor
lea
sub
mov
mov
je
mov
and
into
ss
mov
push
fsubrs
shlb
dec
sbb
mov
scas
sarl
sbb
outsl
into
mov
fdivrl
out
or
loop
push
stc
cmp
clc
adcl
cld
int
jge
test
and
mov
cli
rcl
icebp
xor
mov
or
lock
xchg
xor
data16
shl
pop
shrl
xor
shrl
mov
add
lcall
scas
andl
outsb
mov
xor
push
cs
fists
in
or
fstps
xchg
or
aad
sbb
lret
mov
mov
jmp
adc
mov
pushf
movsb
das
loope
xor
pop
and
push
inc
iret
adc
aas
or
inc
dec
dec
ret
je
fnsave
scas
mov
std
push
jb
cwtl
jge
inc
mov
gs
mov
addl
lods
jecxz
mov
arpl
lock
das
cmp
aaa
mov
mov
fwait
ror
sub
insl
je
adc
gs
mov
mov
add
push
mov
enter
lea
rolb
xchg
out
aam
inc
push
ret
adc
dec
fnsave
clc
pushf
xor
jb
inc
ljmp
loop
out
inc
xor
sbb
push
xchg
pop
jmp
test
add
jl
test
jg
mov
sbb
xchg
add
pop
out
test
mov
sti
sbb
dec
shll
jg
scas
scas
out
int3
daa
in
push
lods
pop
lds
sub
lds
call
mov
scas
call
enter
or
or
emms
mov
xchg
mov
or
adc
pop
cld
js
xor
jno
stos
nop
mov
jns
out
adc
add
mov
jns
pop
jo
int
fstl
mov
daa
push
or
pop
xchg
jp
mov
aam
mov
mov
add
in
jp
pusha
adc
pop
fists
mov
jmp
inc
sub
dec
add
push
mov
popf
pop
jge
lret
or
push
loop
leave
stos
push
incb
insb
jmp
inc
loopne
adc
xchg
stos
adc
loopne
iret
xchg
mov
sbb
rol
inc
pop
xchg
dec
jae
pop
imul
out
push
dec
xor
fsts
cli
mov
add
jne
dec
lds
cmp
mov
sbb
repnz
std
out
hlt
and
arpl
pop
jbe
fstl
sub
movsl
aaa
xor
xchg
or
aad
push
fdivp
test
dec
or
push
lret
xor
mov
scas
sub
and
cmp
lcall
jae
push
cmpsb
mov
ja
enter
daa
mov
inc
leave
jno
stos
call
dec
scas
push
adc
movsl
dec
sub
iret
lahf
js
fcoml
cmp
push
push
roll
and
cmpb
insl
pop
xchg
mov
loope
mov
cmp
les
adc
ds
int3
and
mov
add
pop
js
test
jmp
int
test
dec
sbb
pop
or
lcall
cmp
test
imul
jle
test
xorl
mov
mov
mov
aam
jnp
sti
mov
out
mov
je
ss
loop
cmp
jmp
movsl
sbb
stos
movsl
int3
rcll
mov
call
xor
mov
pop
xor
shrb
int3
loop
inc
inc
stc
hlt
push
xlat
fs
sub
adc
mov
inc
movsl
push
mov
sarb
cli
add
pop
cmp
pop
fwait
or
movsbl
mov
jbe
loopne
lret
loopne
cli
adc
pop
imul
add
xchg
xor
jns
repnz
pusha
cmp
xor
sbbl
mov
sahf
xchg
into
sti
and
mov
mov
dec
nop
xchg
ss
inc
xchg
and
mov
sbb
les
push
repz
fdivrs
lea
cli
std
movl
fcoms
pushf
dec
jg
jmp
push
test
call
lock
pop
mov
jb
mov
dec
cmp
inc
jecxz
fs
div
int
std
incb
cwtl
cmp
mov
loopne
mov
push
sbb
gs
fneni(8087
push
mov
jge
lock
fsubl
inc
pop
mov
mov
or
pop
dec
mov
neg
mov
push
aas
xor
sub
sbb
xor
and
sub
out
mov
rcrb
out
lock
sub
cmp
ret
mov
xchg
das
fstpl
add
sbb
dec
loop
popa
hlt
cmp
mov
jg
add
sub
mov
add
mov
test
xchg
btr
xchg
xchg
cmovge
fldcw
inc
sub
fbstp
mov
addr16
pop
mov
stos
mov
mov
add
inc
cmp
jae
mov
cmp
mov
mov
jecxz
jecxz
enter
push
sbb
inc
orl
inc
inc
lahf
pop
add
jl
fwait
mov
movsl
jne
ret
jmp
outsl
mov
jle
cli
and
jns
pop
add
xchg
into
push
cmp
inc
out
sub
popf
js
lcall
into
jp
add
mov
jl
mov
and
int3
in
lret
outsl
pusha
scas
stos
sti
fildll
or
or
hlt
jne
gs
push
adc
stc
popf
test
mov
and
dec
stos
lret
and
sub
push
jb
jnp
dec
mov
push
shll
adc
inc
outsb
iret
repz
xchg
pop
out
mov
adc
and
insl
aad
pop
loopne
or
add
flds
sarl
fmull
movsl
jbe
imul
cmpsl
lds
add
repnz
cmp
hlt
insb
pcmpeqb
xorl
pop
jge
aaa
sbb
mov
inc
mov
ror
iret
pop
js
push
lods
or
xor
out
jo
pop
cmp
and
push
xor
sahf
enter
adc
push
ret
cmpsb
inc
cwtl
ss
dec
in
enter
daa
lahf
push
jne
or
in
jl
or
sbb
andb
push
test
jbe
jae
xchg
sub
gs
imul
push
xor
inc
imul
mov
out
pop
shll
push
inc
out
fldcw
cmp
sub
adc
sbb
lret
cmpb
dec
add
fldl
push
pop
xchg
push
sti
and
shrb
aaa
xchg
xchg
xor
mov
xor
fsubrl
xchg
sub
add
adc
adc
bound
in
bound
pop
mov
cmpsl
test
sbb
mov
movsb
int
test
xchg
shr
xchg
push
bswap
test
cmc
push
inc
dec
xor
scas
push
loop
push
or
stos
pop
jmp
adc
adc
mov
jl
sbb
out
stos
mov
xor
sahf
pop
cmp
inc
mov
pop
call
gs
and
jl
movsb
pop
cmp
imul
stc
mov
lods
and
xchg
cmc
mov
sbb
and
and
shlb
mov
or
jbe
rcll
sub
nop
jo
push
dec
mov
sbb
and
les
repnz
repz
icebp
stc
jnp
in
cmp
scas
movl
dec
lahf
pushf
cli
mov
dec
pop
push
push
inc
addb
inc
aas
dec
inc
jo
cltd
dec
add
sahf
js
adc
jecxz
cmp
xor
inc
cwtl
repz
testl
mov
insl
mov
sti
sub
xchg
or
testl
cmpsl
mov
popa
in
repnz
and
insl
inc
shlb
cmpsl
sahf
xchg
fidivrl
sub
inc
cld
push
repnz
aam
test
and
ret
fwait
daa
pop
cmpsl
jl
shrb
pop
sub
mov
aam
add
ret
xor
lods
push
inc
cld
push
ffree
mov
clc
adc
xchg
lock
xchg
rorb
popa
or
lods
les
mov
xchg
call
sbb
cvtdq2ps
popl
ret
inc
jle
js
and
ljmp
daa
cli
test
xchg
flds
sbb
insl
mov
stos
stos
aad
push
repz
add
pop
add
call
fsubr
xor
rcr
xor
jg
mov
es
lds
insl
jge
and
dec
pop
push
ret
or
mov
dec
dec
notl
leave
jne
pop
mov
into
clc
xchg
bound
push
jno
jecxz
sub
les
inc
or
lcall
orl
mov
test
in
addb
dec
cmp
fisttps
dec
pop
jmp
adc
hlt
pop
mov
popf
lods
ja
mov
pusha
mov
pop
and
shll
mov
push
in
scas
fcmovne
scas
push
sbb
iret
push
sbb
ret
pop
es
inc
sbb
pop
nop
inc
pop
inc
sub
jg
testb
add
fisubrs
xchg
test
push
add
imul
add
and
test
popa
mov
ret
leave
jmp
into
hlt
mov
pop
arpl
sub
dec
mov
sbb
mov
or
and
mov
push
pop
cmpsl
inc
les
nop
adc
pop
jo
clc
shrl
push
lcall
adc
cmpsb
lds
in
xor
and
cmp
xor
in
nop
stos
dec
mov
in
pop
in
movsl
pop
in
and
push
push
xchg
lds
bound
inc
clc
cmpsl
pop
rcrb
movb
adc
lea
dec
or
push
dec
test
stc
lods
cmp
adc
adc
hlt
pushf
fmull
int3
gs
sbb
mov
sub
xor
or
push
in
int
in
cmp
ds
pop
push
andl
or
cmp
cld
sub
mov
clc
sub
jbe
bound
lret
mov
pop
pop
mov
push
mov
fldenv
enter
ret
das
xor
pop
xor
idivl
dec
lret
xor
adc
add
roll
add
sbb
mov
outsl
ds
outsb
loop
xchg
cs
bound
fs
stos
mulb
das
jnp
andnps
mov
in
mov
xor
jnp
cmp
add
or
mov
incb
xor
loopne
call
in
adc
repz
adc
inc
cmp
cmp
adc
inc
fs
cmp
xchg
mov
adc
je
adc
cmpb
lea
aad
sti
jo
dec
jg
dec
add
dec
inc
mov
flds
faddp
and
repz
mov
fidivrs
pop
lea
call
add
hlt
mov
pushf
movsl
lcall
or
ret
xchg
ret
ljmp
dec
daa
push
mov
pop
jle
jecxz
push
xor
std
dec
pushf
xchg
cwtl
scas
ret
popa
push
mov
xor
fstpt
dec
mov
out
fmull
lock
insb
stc
das
sbb
pop
repz
in
popf
dec
sarl
sub
insl
sub
or
sub
cmpsl
popf
mov
gs
add
test
and
lret
inc
mov
mov
fnsave
or
test
jb
fidivrs
ret
mov
in
fucomp
pmulhw
dec
push
xchg
das
shll
xor
cmp
outsb
inc
lods
das
mov
mov
inc
ret
das
call
pop
btl
add
push
jns
scas
cwtl
jecxz
add
mov
xchg
movhps
fldenv
jnp
sbb
sbb
shll
jmp
stos
cltd
push
or
xchg
int
add
jp
cmp
add
decl
and
enter
dec
out
imul
pop
cmp
push
mov
inc
int
push
or
int3
adc
ficoml
out
and
push
sub
cmpsl
pusha
jns
push
and
outsb
inc
xchg
insb
lods
inc
out
add
sub
xchg
add
addr16
sahf
sarb
pop
mov
cmp
sub
cmc
int
adc
outsb
pusha
in
xchg
fildll
dec
into
jmp
mov
push
repz
lcall
mov
lahf
hlt
fildll
or
jnp
xchg
pop
scas
ds
and
mov
shll
cmp
pop
call
inc
jae
in
inc
pusha
sbb
or
cli
cli
lods
inc
lds
ficoml
pusha
mov
imul
ficomps
add
add
mov
dec
adc
xchg
arpl
cmp
mov
jge
add
or
pop
aaa
outsl
xchg
push
or
rcl
add
std
jne
lahf
or
push
jae
int3
xor
pushf
sub
fs
cmp
shlb
aad
cmpsb
dec
insl
ret
in
sbb
push
enter
daa
popf
pop
mov
jo
nop
jno
sub
jl
in
clc
dec
sti
xor
movsl
pusha
xlat
cmp
lods
iret
pop
lahf
aad
movsl
push
push
pop
scas
push
mov
es
xchg
cmpsl
push
mov
std
xchg
jmp
pop
dec
fidivs
push
add
jne
gs
cmp
test
outsb
ja
repz
iret
lods
leave
sbb
mov
add
push
iret
xor
divb
sbb
int
mov
loope
test
lcall
out
test
dec
sub
add
pop
jl
jg
mov
and
mov
shlb
mov
or
data16
sub
idivl
lret
cmpl
sbb
mov
jbe
into
dec
push
sub
jecxz
sbb
push
cmc
jle
sbb
or
stc
sbb
sub
fcoms
xchg
shl
mov
inc
lods
testb
out
mov
cli
pushf
cs
les
cmp
xchg
inc
or
sub
and
cmp
subb
pop
cmp
push
imul
loope
add
add
xchg
jnp
or
addr16
xlat
ds
outsb
sub
mov
in
fistps
cs
adc
aam
nop
es
dec
inc
loopne
fnstcw
movsb
les
lods
daa
loope
cli
lea
ret
or
test
ficomps
pop
adc
iretw
jmp
clc
push
pop
mov
loop
jmp
xor
jno
aas
mov
shll
sub
sahf
movsl
divl
mov
idivb
sbb
cwtl
imul
mov
test
sbbl
icebp
ret
mov
mov
and
lock
in
das
mov
sub
addr16
mov
and
or
int
adc
enter
out
pushf
pusha
xor
fpatan
cld
lods
stos
into
lret
mov
int
or
mov
mov
in
daa
rcl
mov
aad
add
cltd
adc
cmp
and
mov
mov
ljmp
int3
lods
lcall
out
test
lds
mov
pop
add
jmp
xchg
in
test
enter
movl
pushf
sub
imulb
xchg
les
sarl
call
push
cmp
ja
insl
pop
popl
xchg
fcom
call
sub
xor
cmpsl
or
add
lods
cmp
mov
clc
pop
or
dec
std
or
inc
fs
or
mov
fwait
sbb
mov
mov
div
out
mov
cmp
mov
jns
inc
mov
stc
fnstcw
mov
mov
or
es
jp
movsb
lds
pop
in
lcall
stos
into
in
push
sub
xchg
ljmp
mov
jmp
insb
dec
out
adc
pop
popf
cli
jg
mov
fmulp
aad
and
add
pop
mov
insb
xchg
aaa
jnp,pt
in
scas
mov
data16
xchg
out
iret
adc
pop
xchg
ret
xor
jae
push
mov
arpl
or
jne
lods
inc
inc
jg
fiaddl
xchg
xor
imul
add
xchg
sarb
ret
repnz
lods
sub
dec
sub
push
stos
jbe
mov
jge
repnz
out
aaa
cs
or
imul
push
es
mov
add
pop
dec
xor
imul
bound
mov
sub
movsb
mov
lahf
add
add
mov
cmp
inc
cmpb
dec
push
addr16
test
and
sti
lahf
hlt
aam
push
cmp
shrl
jg
mov
push
push
int3
sub
inc
and
mov
inc
push
je
loope
xchg
hlt
sub
nop
jns
xchg
daa
jmp
fcmovb
lds
stos
shlb
xor
xchg
adc
add
psllq
shrl
push
add
js
sub
xor
pop
pop
add
clc
lcall
xchg
fdivl
lret
sbb
sahf
or
fildl
mov
xorl
and
add
cmp
aad
dec
idiv
xor
test
mov
inc
sbb
sub
mov
stos
enter
jl
outsl
cld
testb
cld
mov
stc
sarb
cmp
test
jecxz
sti
data16
jo
fstl
out
cld
loopne
iret
out
fwait
mov
sbb
cmpsb
mov
gs
daa
loopne
push
push
pop
pop
mov
adc
insl
imul
shrb
add
insb
xchg
ds
mov
cmp
mov
xlat
jge
adc
fnsave
mov
dec
inc
ficoms
aad
lret
adc
dec
shrb
xlat
adc
fldcw
and
repz
aas
in
cmp
call
add
mov
adc
ret
sti
add
jb
push
inc
mov
inc
leave
xor
aas
sub
insl
jb
gs
dec
adc
loop
jecxz
dec
push
idiv
bound
cwtl
and
test
mov
sbb
xor
addl
mov
lret
mov
int3
pop
lock
jno
das
xchg
dec
aad
subl
rcll
xchg
lea
insl
testl
fwait
mov
cmp
xchg
mov
dec
cld
fadds
and
mov
jmp
movsb
mov
add
or
movsb
sbb
sub
mov
aam
pushf
and
fst
notl
in
fnsave
outsb
out
clc
ret
push
aad
lods
lds
popa
push
fcompl
mov
or
xchg
mov
insb
movsb
vmread
xchg
cltd
sbb
sub
mov
sbb
xchg
inc
test
inc
add
stos
das
mov
pop
push
stos
ja
adc
add
mov
aas
out
insb
ljmp
psllq
push
or
out
imul
pop
mov
lcall
jmp
inc
sti
jne
or
imul
sar
dec
mov
jbe
mov
xchg
bound
ja
lods
fcomps
in
or
or
dec
in
pop
sub
mov
repnz
xor
jp
xchg
push
mov
test
mov
pop
lods
push
mov
mov
fucomip
and
dec
jmp
aaa
imul
mov
or
repnz
cmpsb
push
sbb
push
icebp
and
pushf
in
insb
add
jbe
imull
push
out
aad
adc
cmp
outsl
dec
sub
pusha
fdivrl
lret
sbb
ds
data16
test
cmpsb
inc
ret
sbb
dec
repz
mov
dec
sbb
movsl
push
imul
fisubs
xchg
mov
repnz
jns
hlt
cwtl
xor
jbe
fcomps
outsb
leave
rcrl
andb
in
test
testl
jne
sbbl
out
aad
loopne
push
jo
jg
scas
sbbl
cmp
push
movsb
inc
sub
push
lods
in
cmpsb
dec
adc
enter
daa
fwait
mov
cmp
loopne
jno
xchg
jl
and
frstor
loop
push
lahf
adc
test
dec
ljmp
movsl
and
icebp
int3
pop
dec
aam
js
sub
pop
int
test
loope
outsb
jo
cmp
mov
inc
push
outsb
cmp
ror
test
aam
cmpsl
cmp
addb
or
sbb
incl
pop
fimull
sub
out
ds
mov
fisttpl
stos
sahf
lods
cmp
test
mov
mov
in
mov
popf
xchg
mov
das
or
mov
insl
or
nop
fsubr
idivl
test
push
mov
mov
cmc
jno
bound
or
cmp
fistl
imul
stc
xchg
and
adc
mov
sub
mov
xchg
push
out
lret
add
out
cmp
xor
or
enter
insl
sub
call
add
adc
inc
loope
in
das
adc
sbb
add
negb
mov
cmp
dec
jae
mov
inc
dec
mov
mov
imul
mov
test
adc
sbb
inc
ljmp
les
mov
out
sbb
lods
fsub
movl
xor
cmpsb
jns
jmp
in
pop
testb
inc
in
aas
psrad
aam
dec
mov
jecxz
xor
std
inc
lret
fists
mov
add
mov
inc
inc
or
lcall
sub
scas
mov
fisubrl
das
jae
pop
mov
aad
push
lea
xor
adc
insl
fidivs
push
dec
movsl
and
cmpsl
lcall
icebp
xchg
cld
add
inc
mov
repnz
push
mov
and
shlb
pop
sub
movsl
pop
aam
ja
ret
insb
inc
xchg
push
push
sbb
stos
xchg
in
add
ljmp
and
adc
cltd
xchg
add
test
scas
sti
pmovmskb
adc
bswap
or
test
in
mov
mov
xchg
xor
in
dec
mov
ret
sbb
in
shrl
add
pop
stos
popaw
mov
jg
incb
lret
cld
imul
cmpsb
add
orl
jno
and
xor
lea
outsb
mov
loope
jecxz
jg
xchg
addr16
stc
sbb
adc
jne
popf
cwtl
mov
sub
jp
fnstenv
jns
adc
jnp
popa
out
jno
cmp
mov
addr16
ret
sbb
cmp
scas
pop
jmp
jle
mov
dec
pusha
mov
daa
fisttps
and
or
pop
jmp
add
dec
xorl
push
push
jecxz
jmp
dec
sbb
push
pop
or
stos
or
les
dec
sar
insb
imul
in
ja
add
ss
xchg
iret
into
or
ret
pop
pop
add
jnp
dec
mul
jae
push
dec
inc
imul
push
inc
cmp
fisubrl
jne
sbb
adcb
inc
cli
sbb
lds
mov
icebp
push
or
push
loopne
leave
call
sub
sbb
jbe
cltd
push
jge
test
sbb
cli
in
add
data16
pusha
xchg
scas
pop
arpl
adc
xor
lods
sub
scas
lahf
dec
cmp
dec
or
add
shll
enter
daa
lcall
jno
in
mov
cltd
stc
inc
dec
dec
fstpl
ds
add
jge
setg
inc
daa
push
loope
xchg
test
adc
xor
mov
addr16
jb
int3
js
sub
pop
or
pop
push
outsl
aad
jb
pop
sub
ja
cmp
jo
outsb
mov
sub
push
popl
jle
sbbb
int
lock
push
add
jg
xor
mov
int
mov
add
lcall
mov
xchg
scas
sub
xchg
sahf
push
lods
stos
test
cmpsb
pop
sbbb
jg
in
mov
jp
mov
push
mov
sahf
jo
into
jo
ss
jl
pop
cmpsb
mov
dec
lea
lret
rol
fisttpll
xor
out
into
hlt
jge
cmc
cmp
sub
fs
and
cmp
loop
mov
pusha
fs
dec
adc
in
stos
lods
stos
fs
stos
adc
jns
fdivrp
xor
pop
imul
sub
decb
nop
loopne
adc
pop
lcall
imul
mov
add
fs
les
sbb
dec
jb
xlat
sti
sub
ret
or
mov
and
stos
sti
cmp
or
sbb
nop
mov
dec
jle
cli
inc
std
or
fstps
cmp
and
ljmp
call
add
mov
add
mov
mov
mov
orb
cmpb
push
inc
aas
data16
jb
js
dec
add
je
xchg
cmp
xor
testb
cwtl
lcall
mov
sbb
andl
pand
jne
mov
dec
push
lock
out
das
push
xchg
lods
mov
mov
and
lods
mov
hlt
ret
xchg
pop
pop
insl
lds
dec
mov
insl
xchg
mov
pop
in
adc
cs
or
mov
stc
sbb
pop
inc
xchg
rorb
push
mov
movsl
jno
sti
lock
lds
pop
jmp
cmp
aad
sub
out
jle
popa
jle
leave
lods
fcmovnbe
aas
mov
rcl
adc
dec
push
or
ss
add
mov
cltd
mov
test
lock
xchg
jl
dec
sub
mov
sbb
add
rol
lea
pop
pop
xor
stos
push
out
test
and
mov
add
or
sub
cltd
adc
add
pop
xor
xor
xchg
mov
fistpll
sub
aad
pop
inc
sub
or
pop
out
fwait
cmpsb
push
cmpsl
dec
and
sbb
sub
sub
xchg
jns
out
outsb
in
popa
rclb
push
cmpsl
bound
jg
lret
addr16
jp
lcall
mov
mov
in
in
pusha
push
cs
push
mov
fbstp
jmp
int
xor
push
cmpsb
and
outsl
mov
dec
push
fwait
insl
mov
and
insb
jo
jnp
data16
scas
lret
push
jge
scas
adc
roll
xchg
pop
cmp
inc
push
pop
cwtl
jae
add
inc
insb
clc
les
out
inc
inc
shl
ficompl
cmp
cmpsl
xor
imul
fcmovu
ljmp
rorb
mov
popa
popf
pop
leave
ds
cltd
hlt
cmp
jbe
into
movsl
jge
and
sbb
adc
push
or
insl
inc
add
mov
mov
push
call
jo
call
fsubl
jno
in
cmp
dec
mov
push
pushf
xchg
mov
push
xchg
mov
mov
daa
cltd
sbb
cmp
or
sbb
repz
pop
sbb
jl
adc
sbb
loope
push
push
push
mov
add
loopne
sbb
cmpb
inc
dec
pop
cltd
cmpsb
and
shrb
fildl
cmp
and
nop
pop
sub
test
shrl
out
out
std
ret
mov
subb
mov
daa
xchg
in
add
xor
mov
or
in
sub
movsl
sbb
lcall
paddusb
and
dec
fimuls
repz
test
xor
xorb
jg
movsb
jmp
mov
mull
fisttpll
nop
ss
sahf
mov
fadds
mov
cmp
ja
je
mov
jl
sbb
leave
scas
cmc
call
mov
outsl
cltd
bound
loop
out
stc
cmc
fstps
pusha
int3
ret
lahf
xchg
mov
fimull
js
movsb
cli
push
in
in
out
and
repz
mov
scas
lcall
push
xor
pushf
adc
icebp
pushf
imul
mov
mov
xchg
ret
sbb
xchg
shrl
sub
out
mov
mov
dec
sti
jmp
in
jl,pn
mov
nop
xchg
xor
dec
fnsave
and
les
dec
repz
push
add
call
addb
jecxz
jne
cld
fmull
pop
cmp
int3
inc
pop
pusha
stc
inc
sbb
jno
add
dec
aam
jp
loope
aam
inc
lds
test
mov
cwtl
push
lahf
jecxz
dec
stos
sbb
cli
jl
dec
inc
dec
pand
sub
mov
jp
mov
and
lock
xor
xor
sbb
inc
dec
jbe
mov
jnp
es
or
fisttpl
lods
or
aad
loop
xor
or
lret
outsb
call
mov
mov
popa
movl
sub
sub
ret
mov
aas
push
fsub
add
clc
je
add
jb
out
popa
xchg
icebp
mov
pusha
out
xor
aam
xchg
or
setne
add
in
stos
test
jae
adc
cmp
test
jnp
xchg
lret
les
rcrl
int
pop
pop
add
fstpl
lds
push
add
jno
dec
and
push
or
ret
xor
and
in
fidivs
pop
jg
pop
in
xchg
ja
cmc
js
leave
ret
xchg
inc
shlb
fwait
aad
fimuls
imul
jecxz
movsb
mov
mov
out
or
fstpt
outsb
adc
and
jae
out
xor
push
mov
or
cld
addr16
outsb
repz
test
cwtl
mov
sub
jle
addr16
mov
xor
fisttps
lahf
xchg
mov
and
into
in
xchg
cwtl
mov
orl
push
imul
sbb
ficoml
stos
out
loope
and
add
sti
jnp
cmc
scas
sub
jnp
adc
das
imul
popf
inc
ret
ficompl
mov
inc
pop
or
fildl
adc
or
popa
xchg
dec
inc
inc
or
adc
fstpl
mov
xchg
fimuls
sbb
daa
sbb
fwait
repnz
hlt
leave
mov
jne
jns
stos
arpl
hlt
iret
jbe
ja
jge
movsl
cmc
sbb
sub
or
sbb
and
sbb
rorl
loop
sahf
xor
arpl
jg
add
mov
movsb
call
jo
cmpsb
xlat
out
inc
in
lahf
into
inc
enter
daa
cwtl
xchg
in
outsl
jns
jno
and
out
and
jl
sub
fldenv
mov
js
jo
popf
push
xchg
test
stos
or
sbb
cmp
or
jmp
pop
mov
lods
cmp
xlat
xor
scas
xchg
cmp
enter
and
push
lods
pop
adc
mov
add
aas
mov
push
adc
les
mov
pop
add
ds
sub
fdivrl
sahf
xchg
imul
jg
push
testb
jns
and
ljmp
lods
cmp
idiv
add
lret
adc
or
push
sbb
mov
into
mov
repz
sbb
outsl
js
and
stc
lods
lods
andl
adc
xor
data16
mov
xchg
arpl
ja
xor
fwait
xor
xor
mov
or
sti
shl
xor
jle
loopne
pop
lahf
pop
fadds
inc
imul
loope
add
in
sbb
sarl
sti
pop
sub
xlat
mov
idivb
add
lcall
aad
out
adcl
and
mov
les
repz
test
lock
lea
dec
cmp
ljmp
pop
push
cmp
cmp
cmpsl
int3
sub
xchg
add
pop
dec
inc
mov
or
movsb
adc
jb
pop
fisttps
in
les
xchg
dec
jne
testb
es
ss
dec
cwtl
adc
xor
fucomip
lock
mov
lgs
imul
adc
insl
mov
cli
dec
aam
cs
rcll
das
in
insl
xchg
pop
xlat
dec
xchg
push
jbe
xchg
pop
or
or
dec
cld
test
and
frstor
and
add
pop
orb
test
cmp
nop
incl
sbb
sub
je
fst
ficompl
scas
ja
xchg
test
std
jmp
lods
mov
dec
mov
xchg
sbb
xchg
fnstenv
push
add
adc
hlt
mov
add
xchg
inc
add
mov
pop
mov
dec
clc
leave
outsb
test
jno
xchg
push
dec
sbb
not
outsl
xor
stos
xor
push
data16
sbb
ljmp
mov
or
add
mov
sti
mov
mov
lahf
pop
mov
dec
mov
adc
or
fwait
cmc
fwait
add
xchg
dec
sub
shlb
jae
inc
xchg
mov
out
aas
bound
xchg
pushf
in
or
xchg
inc
add
out
xor
or
icebp
testl
lret
leave
mov
cltd
mov
jle
cmp
in
arpl
addr16
xchg
test
xchg
arpl
fadds
sub
push
popf
mov
fwait
test
stos
call
loope
lods
gs
scas
nop
out
and
or
adc
xor
imul
lods
or
pop
cmpsl
arpl
push
iret
jae
stos
stc
inc
jb
push
or
fsubrl
inc
mov
stc
in
in
jle
std
adc
imul
cmp
xor
imul
inc
mov
push
repnz
mov
leave
sub
cmp
arpl
inc
and
xchg
mov
sbb
mov
jmp
repz
add
jle
and
lds
cmp
mov
inc
ret
and
inc
cmp
mov
pop
int3
insb
in
xchg
enter
daa
xchg
mov
mov
repnz
jl
jp
dec
xchg
insb
out
dec
inc
inc
movsl
mov
sbbl
adc
test
jbe
cmpsb
inc
loope
mov
cld
push
sti
js
test
jp
pop
cs
loope
inc
add
xchg
cmp
sbb
outsb
leave
and
adc
icebp
mov
and
adcb
sbb
popf
xor
and
push
adc
sti
int
pop
aad
fwait
add
pop
jg
ret
push
bound
out
jnp
xchg
adc
sub
aam
cmp
lea
mov
jne
mov
in
and
or
gs
jl
shl
add
shll
ljmp
cmp
pop
xor
aas
outsl
push
mov
cmpsl
stc
arpl
dec
fs
dec
adc
data16
mov
repz
arpl
jbe
jae
into
push
xchg
xor
jl
cmp
pusha
xchg
or
or
cmc
cmp
lods
mov
jmp
testl
or
lods
aaa
adc
ja
add
dec
cli
sbb
cld
pop
sub
mov
popl
mov
popa
pop
jp
dec
add
cs
ja
aad
and
nop
dec
cmp
dec
fwait
push
mov
or
lods
les
adc
pop
inc
inc
repz
lea
repnz
jle
cmc
pop
sbb
push
adc
in
je
sub
inc
adc
xor
jb
lcall
push
push
jecxz
imul
std
fst
jae
lret
imul
sub
xchg
dec
pop
inc
jbe
xchg
push
mov
stc
shl
imul
out
sbb
mov
mov
mov
es
dec
insl
jp
enter
imul
jecxz
adc
scas
mov
lret
dec
and
enter
test
lahf
push
lods
rol
lea
aam
sub
push
pop
jp
outsl
mov
ljmp
ljmp
add
mov
cli
test
or
rcpps
sbb
pop
lcall
push
or
mov
rolb
dec
pop
in
test
cli
pop
xchg
stos
mov
pop
pop
and
push
or
call
add
xor
mov
es
or
ss
stc
das
mov
ds
cld
mov
pop
adc
dec
scas
xlat
out
out
xchg
aaa
or
jns
fwait
xor
mov
jne
and
mov
mov
out
pop
ret
bound
pop
jge
cmp
adc
fsubl
push
or
pop
imulb
jae
call
mov
mov
or
pop
repnz
cmp
and
filds
das
cmc
jmp
loop,pn
subl
out
lods
addr16
in
cwtl
mov
pop
mov
stos
aad
int
test
push
xchg
jnp
lret
out
scas
repz
push
push
ficoms
dec
push
iret
dec
ds
mov
loopne
inc
jne
mov
xchg
inc
jne
sub
push
fdivl
fidivl
xchg
xchg
cmp
addr16
inc
inc
imul
ret
dec
dec
lds
je
pop
imul
pop
or
pusha
hlt
jae
out
jno
outsl
es
jge
push
in
sub
aaa
test
sub
int3
incb
hlt
xchg
lcall
xor
test
iret
xor
sbb
cltd
and
mov
sbb
icebp
push
cmpsb
fstpl
in
insl
int3
ror
cli
pop
daa
xchg
cmp
or
pop
jl
mov
or
movsl
xchg
mov
lahf
scas
pop
cwtl
push
sub
xor
push
inc
pop
js
jo
inc
mov
adc
mov
in
pop
or
lods
push
aad
loope
roll
sub
xor
cwtl
outsb
sub
jns
or
int3
push
popl
mov
int3
sbb
add
dec
das
xor
sub
in
sub
push
iret
pop
sahf
in
lcall
jo
xor
xchg
pop
cmp
add
fistpll
sti
jl
iret
fistpl
ret
and
jne
ss
xor
aaa
sub
divl
mov
sarl
xchg
mov
push
pop
sbb
jmp
cmc
push
popa
xorl
repnz
loop
out
push
stc
sbb
and
les
mov
jmp
lods
inc
mov
mov
leave
and
jne
pop
cli
add
loope
movsl
jp
cmp
mov
sbb
sbb
mov
loop
out
jl
pop
push
xchg
cmp
inc
cld
sbb
ljmp
mov
sub
js
add
aaa
xlat
adc
and
xor
dec
in
int3
test
mov
aad
mov
nop
and
dec
cli
sub
dec
jne
fyl2xp1
pop
stos
les
dec
repz
sbb
imulb
lea
jns
std
iret
push
adc
je
pushf
std
daa
ds
cwtl
sbbl
xchg
inc
pushf
outsb
mov
imul
loop
shlb
or
out
mov
jge
insl
mov
paddw
ds
pop
adc
mov
cmpl
cltd
enter
inc
lock
pop
pop
das
into
dec
xchg
mov
push
cli
imul
cmp
es
shlb
insl
popa
cmp
dec
mov
cmpsl
xchg
popa
inc
mov
mov
inc
mov
mov
adc
ss
mov
cmpsl
in
xchg
sti
outsb
aam
test
aad
and
repz
jmp
je
daa
std
ljmp
mov
mov
pop
sub
cld
push
mov
pop
ja
outsb
dec
gs
addr16
test
xor
pop
sub
test
sbb
xchg
rcrl
outsl
push
stos
adc
fs
scas
repnz
push
mov
ljmp
bound
xor
loop
mov
orl
out
pop
adc
mov
dec
mov
cmp
or
sub
fwait
bound
dec
repnz
es
cmp
mov
xchg
ss
movsl
dec
dec
bound
enter
add
xchg
in
in
out
lea
mov
push
out
cmc
dec
cmpsl
jp
pmullw
test
and
sub
andl
js,pt
sub
popf
jmp
stc
cmc
sub
mov
lds
push
mov
xchg
es
and
cld
subl
adc
cltd
movsl
jg
xchg
jbe
iret
test
fsubrl
pop
adc
and
jae
arpl
or
rcr
js
mov
or
xchg
adc
sbb
inc
nop
imul
push
fidivs
rol
fistpll
sbb
mov
repnz
lcall
pop
cmp
jbe
sub
jge
test
aaa
addr16
xchg
or
andb
dec
sub
xor
je
mov
mov
add
cmp
int
movsb
mov
js
fcoms
push
in
push
and
daa
xchg
adc
cmp
data16
cmpsb
add
dec
jae
fistpll
xchg
cmp
movsl
cwtl
ja
and
aas
push
add
test
or
xchg
inc
pushl
sbbb
sti
cmpsl
js
loope
pop
inc
sbb
push
xor
loope
test
cmp
outsb
or
not
cmpsl
add
loope
pop
xorb
sbb
in
add
push
mov
push
xchg
push
sbb
fcmove
stc
pop
jno
xchg
lods
pop
jge
mov
mov
jbe
dec
inc
jns
frstor
or
sahf
jg
adc
fistps
mov
jbe
mov
mov
and
and
and
cmp
repnz
sbb
rcl
aam
shl
lahf
sbb
mov
cmc
sbb
test
sub
loop
add
jne
mov
inc
adc
iret
mov
add
call
jb
cli
xor
test
jl
lods
cmp
out
xchg
or
scas
push
gs
dec
call
adc
lret
pop
adc
lahf
jmp
xchg
xchg
jnp
sbb
jb
scas
xlat
ss
pop
sub
insb
or
in
aaa
and
cmpsl
push
aad
or
aad
scas
mov
dec
pop
add
inc
pop
adc
les
cmp
stc
sahf
and
imull
pop
cmpl
pushf
test
adc
fs
pop
enter
and
testb
sbb
xorl
dec
dec
push
popa
add
jecxz
sbb
sar
sub
push
cwtl
inc
push
popa
mov
cs
mov
cmpsl
pop
dec
in
xchg
cld
frstpm(287
mov
jae
in
pusha
inc
lock
das
lods
mov
mov
pop
push
mov
lahf
out
jg
lret
and
insl
dec
orl
xchg
sub
mov
xchg
pop
adc
add
jb
mov
sbb
mov
jne
imul
jnp
icebp
jnp
ret
pop
js
in
out
fisttpll
in
pusha
dec
mov
xorb
repnz
dec
mov
shlb
xchg
in
movups
cmc
cltd
sahf
xchg
test
lret
fdivrp
xchg
mov
dec
sub
leave
add
nop
enter
xor
mov
xchg
stos
add
add
push
mov
push
add
cmc
decl
ds
push
out
push
mov
xor
and
and
mov
imul
rolb
xchg
cld
xchg
dec
xchg
mov
adc
dec
mov
fwait
xchg
repnz
or
jne
mov
sub
dec
addl
push
jle
xchg
xor
out
call
imul
sbb
hlt
imulb
dec
out
fdivs
mov
mov
jle
fs
push
push
ffreep
push
xchg
xchg
mov
jmp
les
orl
push
popf
xor
mov
push
inc
stos
mov
or
in
or
jmp
loop
mov
rcr
adc
iret
or
mov
in
call
inc
mov
mov
movsl
ljmp
jl
push
cmp
in
fcompl
rcrb
sbb
ficomps
xor
lds
sbb
xchg
or
mov
add
xchg
stc
js
movsl
mov
jbe
movsb
jge,pt
xchg
xor
lahf
hlt
jne
es
or
xchg
int3
loop
xor
dec
das
push
outsb
out
mov
push
jns
jo
lret
stc
scas
pushf
out
and
jg
jnp
xor
subb
cmp
enter
daa
xchg
popf
jne
cmp
jno
cmp
push
ds
movsl
lahf
in
dec
and
clc
inc
lahf
in
std
xchg
push
shrl
pop
push
xlat
add
inc
mov
inc
test
js
pop
add
push
inc
mov
cld
pop
inc
sub
or
cmp
lods
push
outsb
repnz
lcall
leave
and
mov
sbb
push
cli
add
scas
mov
cmp
push
sbb
cli
int
das
shrl
or
ds
cld
dec
sti
lcall
push
fmull
test
and
push
mov
lahf
mov
inc
pushf
mov
std
inc
mov
push
jo
sub
cmpsb
ss
dec
adc
fsubrs
adc
lret
lock
mov
jbe
into
inc
xchg
inc
cmc
loop
xorb
xchg
hlt
gs
xchg
dec
stc
stc
mov
fs
cmp
pop
xchg
data16
add
jecxz
int3
out
cli
loopew
xor
les
repz
rcr
pop
pop
shll
and
mov
fildll
push
rcll
push
add
daa
stc
xchg
push
inc
jne
mov
xlat
jne
out
jne
push
in
mov
and
cs
aad
or
nop
call
inc
outsl
loope
fldenv
fadd
nop
imul
cld
inc
bound
or
sti
inc
stc
pop
lods
lahf
adc
roll
pop
imul
inc
stos
rorl
sbb
leave
jb
nop
orl
xchg
sahf
jecxz
fstl
std
shlb
jg
add
add
dec
fdivrs
fistl
and
mov
lock
ljmp
mov
cmpsb
mov
mov
dec
ror
adc
movsl
inc
ja
das
lods
rorb
push
cmpsl
xchg
jae
mov
push
out
lret
cltd
ds
ss
and
insb
insl
fs
cld
dec
pusha
sarb
adc
test
push
mov
test
push
cmpsl
inc
cmp
outsl
xchg
xchg
movsl
das
test
mov
aaa
popa
or
or
and
xchg
jo
add
jo
lret
push
xor
jae
pop
mov
push
clc
xchg
xchg
test
psrlq
inc
gs
lret
and
xlat
stos
out
dec
lea
hlt
inc
pop
add
mov
mov
out
clc
xor
lcall
lret
xor
mov
pop
cmp
mov
mov
mov
mov
loope
mov
ss
or
dec
mov
pushf
shlb
arpl
xor
add
mov
xchg
sbb
out
mov
adc
popa
jo
repz
cmp
mov
push
call
xor
pusha
repz
sarl
enter
mov
sbb
push
cmp
popf
pop
cmp
push
adc
or
out
cmp
insb
pop
aas
popf
jnp
adc
scas
sbb
ljmp
or
ret
popf
pop
xorl
inc
xchg
adc
hlt
sub
inc
jle
daa
or
enter
mov
call
xor
ret
lret
jg
fidivrs
and
scas
divb
repnz
push
cmp
or
dec
hlt
lock
jbe
xchg
inc
jge
mov
pop
adc
in
sahf
or
lret
dec
int3
int
in
pop
lods
cmp
xor
sub
cmp
jecxz
add
xor
dec
movsb
lahf
adc
aaa
cmpsb
data16
mov
and
enter
daa
xchg
stos
xor
outsb
xor
jno
sahf
inc
jl
adc
flds
lcall
daa
push
lahf
or
push
cmpsb
dec
pop
test
mov
push
jo
or
or
js
push
pop
push
add
sub
xor
shrb
mov
pop
mov
push
sbbb
test
stc
pop
fidivl
or
les
pop
add
int
call
ss
jnp
mov
push
imull
fdivl
dec
mov
sahf
lds
test
mov
aad
aaa
jbe
mov
inc
push
mov
fstps
aaa
inc
push
ss
aas
or
push
pop
pop
lret
xor
xchg
jbe
test
inc
sbb
adc
cmc
test
ret
shll
push
stc
aas
pop
mov
inc
pop
cmpsw
sub
lods
cld
dec
sbb
fidivs
out
lret
lcall
cmp
int3
lods
or
icebp
gs
rcrb
pop
jae
add
mov
jns
adc
push
pop
add
and
in
or
dec
xlat
mov
inc
sub
sbb
in
or
mov
cs
dec
mov
nop
mov
testb
and
and
fstps
outsb
pusha
repz
inc
add
lcall
rcl
call
jp
negb
push
rclb
in
mov
pushf
out
jmp
xor
pop
push
sahf
sub
add
inc
mov
fs
jb
lahf
aaa
dec
inc
cmp
jecxz
loope
negb
jmp
jns
xor
les
adc
sahf
leave
testb
xor
fildl
mov
mov
pop
mov
das
imul
mov
rcrl
rcrl
test
insl
push
mov
inc
cmpsl
xchg
inc
cmp
aas
sbb
cld
pop
hlt
sbb
or
and
sub
loope
sbb
push
sub
stos
aam
sbb
or
sbb
fstl
push
aad
and
push
popa
pop
ret
enter
xchg
lret
xchg
xchg
cmp
sbb
dec
xchg
pop
bswap
jbe
add
stos
sub
jle
cltd
mov
or
sub
dec
sti
cmp
test
call
es
mov
shll
cmp
xchg
stos
fidivrs
cld
push
xchg
fisubl
add
add
or
fnstenv
xchg
mov
mov
adc
inc
in
adc
ja
sbb
inc
dec
add
or
cmp
fwait
out
sub
jne
jecxz
mov
sub
inc
pop
insb
bound
test
out
in
outsl
test
sarl
subb
pop
inc
repnz
mov
js
xchg
into
mov
jmp
fwait
in
je
pusha
mov
test
add
shr
cwtl
sub
subl
stos
popf
sbbb
mov
push
fwait
add
add
inc
mov
scas
jg
or
push
cli
adc
jb
iret
scas
lret
sbb
mov
das
clc
jae
hlt
addr16
xorl
cmpsb
push
cmp
fcmovnu
inc
out
xchg
cwtl
mov
imul
inc
lds
ror
sub
cmpsb
jp
leave
jg
inc
hlt
cmp
push
jbe
repz
jge
imul
movsb
adc
or
es
jge
pop
sbb
xor
test
pop
push
sarb
jmp
or
lock
jmp
js
enter
daa
xchg
cmp
mov
and
icebp
mov
rolb
ds
aad
movsl
lods
add
stos
lahf
sub
sbb
imul
jnp
insl
cli
je
lods
xor
lret
das
sub
adc
js
or
pop
add
xchg
jnp
loope
jbe
sub
xor
outsb
mov
lahf
pusha
sarb
ds
sub
xorb
mov
add
das
xor
rcll
cs
sub
insl
inc
pop
cli
or
lcall
insb
cmpb
push
adc
jbe
mov
push
ds
jge
mov
dec
shlb
mov
lret
cmp
and
jne
jae
ljmp
cmp
sbb
jno
into
or
shl
jo
mov
outsl
mov
adc
mov
adc
fs
dec
inc
data16
push
lods
jecxz
daa
mov
sub
out
cmp
cli
int
jae
add
dec
cmp
jp
or
shll
gs
sub
loopne
daa
stos
pop
xchg
out
sbb
mov
push
imul
fs
fsubl
ja
and
repz
imul
nop
sub
in
js
aaa
sti
mov
shrb
xor
nop
nop
lods
iret
dec
jbe
xchg
inc
xchg
sbb
inc
les
xor
movb
push
lea
jmp
leave
stc
rcll
test
adc
pushf
test
lock
pop
mov
mov
inc
xlat
pop
aas
pop
subl
dec
mov
mov
test
setg
and
jb
jae
cmpl
sbbl
mov
mov
mov
ljmp
dec
dec
pop
mov
inc
movsl
addr16
mov
insb
cmc
es
subb
js
sub
cmp
mov
cld
xchg
popf
lret
ja
jno
fisubl
xor
sbb
cmp
out
shl
push
in
jb
stos
aam
in
mov
jae
aad
sub
mov
clc
adc
xchg
and
ljmp
iret
lods
xor
mov
out
jmp
or
ucomiss
jl
mov
mov
test
or
xchg
adc
dec
lret
aas
push
fiaddl
test
js
pop
mov
jnp
int
cmp
cmp
add
mov
popa
loop
lds
or
shlb
dec
out
xor
lea
cwtl
mov
add
ja
jmp
dec
outsb
push
popa
inc
loope
push
or
cmp
ljmp
push
mov
mov
xorl
add
xor
shl
inc
in
in
xchg
and
inc
out
mov
sub
push
fdivrl
addr16
push
pop
jp
ret
je
insb
outsb
jmp
mov
scas
mov
in
cmp
rcr
and
ljmp
out
aaa
pop
sbb
mov
fstpt
inc
push
and
pop
subb
or
imul
test
mov
xchg
adc
in
scas
iret
and
in
lods
pop
icebp
out
rolb
mov
inc
test
or
mov
xchg
call
xchg
out
dec
jg
call
sub
faddp
in
add
stc
xlat
push
leave
mulb
mov
jbe
enter
daa
mov
rolb
mov
arpl
pop
add
movsb
push
pop
or
push
pop
pop
adc
cmpsb
cwtl
mov
loopne
push
and
sub
shll
les
lock
icebp
enter
daa
xchg
push
cmp
into
push
jno
int3
mov
sbb
gs
das
aaa
sahf
ds
pushf
movsl
mov
mov
lock
dec
and
dec
pop
into
test
cmp
nop
inc
cmp
adc
jl
scas
inc
xchg
pop
inc
xchg
repz
cmpsb
xor
sub
add
cmp
and
sbb
das
rclb
nop
mov
ret
and
sbb
je
add
mov
xor
aam
int
pop
js
jge
pop
pop
jns
push
push
movsl
mov
xor
sahf
or
orb
jg
xor
outsb
out
mov
mov
dec
icebp
and
mov
cmp
fsubrp
insl
divl
lods
lret
shrl
mov
pop
sbb
xchg
inc
into
out
js
cmc
aaa
leave
xor
outsl
xchg
xor
stc
lods
pop
jnp
mov
xchg
andb
push
lods
lret
mov
jae
out
xor
add
bound
fmuls
pusha
or
addr16
add
cmpsl
xor
testb
mov
xor
imul
cmpsb
lods
xchg
lahf
inc
or
pop
xlat
test
xor
or
jecxz
test
cs
jmp
sbb
aad
jp
test
pop
loop
stc
bound
add
jecxz
call
js
or
dec
mov
adc
mov
and
pop
push
sub
sub
mov
shll
ljmp
add
neg
push
lods
std
pushf
xchg
inc
icebp
jnp
test
xorl
pop
or
or
lock
mov
mov
sti
jge
sarl
shrl
jae
mov
mov
in
insl
cmp
mov
movsb
lret
out
mov
and
cmp
pusha
jne
mov
add
imul
ret
add
in
lock
fucom
mov
cmp
fldcw
popa
dec
dec
ja
sahf
pushf
adc
dec
or
xchg
lret
push
add
push
add
in
cltd
jp
movl
jno
dec
leave
cmp
jb
mov
jae
rcl
xlat
movsb
pop
pop
pop
cmp
fucom
push
rcl
add
popa
dec
inc
ret
sbb
pop
or
xchg
or
pop
inc
mov
shlb
xchg
fcompl
pop
mov
inc
popf
dec
popa
repz
inc
js
mov
hlt
adc
fwait
dec
outsl
jne
popa
ljmp
out
sbb
add
inc
jns
test
jge
ficoml
out
fiadds
or
enter
mov
sbb
mov
xor
mov
mov
enter
neg
inc
rcr
dec
and
jmp
lock
std
add
mov
popf
into
sub
push
shlb
lods
stos
xchg
movsl
and
stos
push
insb
cltd
aam
jnp
inc
mov
push
cld
gs
adc
jge
iret
test
push
inc
mov
test
push
fiadds
xor
or
cmp
inc
fisubrl
xor
inc
imul
stc
lds
xor
fdiv
dec
imul
arpl
xchg
jbe
adc
sbb
jle
or
dec
add
scas
int3
mov
add
jg
cli
roll
cmp
sbb
pushf
jns
cmp
add
shll
in
xlat
and
dec
daa
nop
jmp
adc
cwtl
xchg
jl
imull
dec
sahf
xor
ds
push
movsl
mov
cs
push
push
mov
push
add
inc
lret
push
stos
lock
clc
out
int
ljmp
push
xchg
pop
and
sub
test
mov
jmp
push
shr
movsb
lcall
je
sbb
jae
add
pusha
mov
push
sub
int
cld
insb
cmpsl
sub
outsl
pusha
pop
clc
lcall
and
xor
arpl
mov
aam
scas
jle
test
mov
mov
test
mov
add
fs
ss
das
cmp
cltd
push
xchg
lret
inc
rol
dec
mov
movsb
sbb
gs
rcrb
cmc
decb
mov
repnz
scas
outsl
jo
jmp
loopne
mov
fs
fldenv
push
adc
subb
jecxz
mov
push
out
out
lods
xor
pushf
xor
push
sub
ljmp
loopne
je
pop
shlb
cmp
xor
cmp
adc
shl
push
scas
in
xchg
fldt
cltd
xor
jno
mov
mov
dec
fsubrl
mull
jmp
pop
imul
dec
xor
iret
inc
mov
lods
push
les
dec
or
test
call
notl
pop
add
repnz
jmp
mov
pop
mul
xchg
inc
pop
xor
jb
aas
pushf
jg
jbe
inc
dec
test
into
pop
jecxz
test
mulb
mov
jns
call
lods
imul
inc
mov
fcmovnbe
repz
mov
cmp
das
or
jg
adc
mov
ret
and
movl
insl
lret
aas
or
cmp
mov
dec
lock
fcoml
fmulp
push
sbb
and
fmul
test
js
arpl
mov
mov
call
jb
push
mov
dec
fisttpll
je
clc
xchg
outsl
xchg
mov
sbb
popa
fs
movsb
lods
or
out
scas
inc
pushf
xchg
adc
paddsb
mov
lahf
je
mov
into
je
sub
dec
xor
push
xchg
add
sbb
loopne
shll
pop
into
pop
or
repz
adcb
dec
lcall
arpl
test
imul
xor
ds
imul
mov
add
iret
pop
ja
push
ja
pop
xchg
dec
push
inc
pusha
inc
movups
or
mov
repz
inc
fdivs
sete
andl
leave
fsub
or
push
xchg
mov
jle
sub
dec
cwtl
lcall
mov
sbb
lds
xchg
jle
adc
loopne
inc
pusha
pop
hlt
movsl
fistps
adc
jge
mov
mov
imul
inc
shrl
popf
cmc
or
mov
imul
je
cli
imul
add
sbb
push
pop
scas
test
adc
test
mov
pop
iret
jecxz
ffree
inc
sub
loop
ret
jae
ljmp
stos
cmpsb
inc
push
mov
aam
pop
pop
push
popf
inc
imul
insb
fimuls
push
rcrb
mov
lahf
cs
leave
in
sbb
sbb
cmp
dec
adc
iret
hlt
jge
push
xor
aaa
loope
stos
or
adc
adc
pop
sahf
pop
push
sbb
jo
mov
sub
cmp
les
push
mov
andl
shlb
imul
daa
popl
mov
jno
mov
jb
test
lock
gs
movsl
ret
and
scas
fstps
bnd
fldt
push
into
loopne
inc
pop
pop
or
adc
clc
pop
pop
xor
shrl
mov
adc
outsl
stos
lahf
sub
and
outsb
loope
dec
adc
leave
int
sbb
sub
xlat
sbb
xchg
ljmp
arpl
into
pop
ja
xor
push
stos
aam
fists
jb
mov
imul
inc
sub
mov
sbb
adc
pop
mov
les
mov
ss
iret
cmp
push
jns
divl
into
or
pop
std
jg
push
lcall
xchg
es
mov
sub
lds
imul
lret
sbb
push
fs
fnstsw
out
int
mov
cltd
lods
cwtl
mov
mov
ret
inc
out
stos
mov
mov
xchg
cmp
jns
or
add
or
leave
inc
loopne
mov
sbb
imul
and
xchg
and
cmpsb
scas
cmp
dec
xlat
xlat
mov
into
sub
jp
mov
lods
jnp
pop
pop
mov
nop
and
dec
xchg
addb
aaa
fnstcw
std
mov
and
lea
insb
call
jbe
das
pop
mov
mov
pushf
stos
jge
jmp
mov
cmp
out
inc
sub
icebp
aas
cmp
pop
jb
in
dec
and
cmp
cltd
shl
gs
cwtl
std
adc
mov
mov
ljmp
loopne
mov
dec
dec
outsl
mov
mov
adc
das
out
pop
mov
imul
lods
rcrl
sti
es
jecxz
mov
push
cmpsl
mov
jno
fwait
dec
fs
pop
jne
lret
les
and
jae
push
pop
xchg
cs
rcrb
xchg
sub
lcall
jg
fnsave
sub
loopne
add
lock
lods
je
es
adc
xchg
pop
sahf
mov
mov
enter
movsl
add
repnz
cltd
call
sbb
mov
xchg
imul
mov
cmp
ret
sarl
fs
mov
add
lcall
add
pcmpgtd
xor
pop
jbe
cmc
jae
mov
push
sbb
mov
xor
xchg
dec
inc
inc
cmpsl
inc
cmpsb
mov
or
cmp
fwait
stos
lds
daa
xchg
jnp
test
add
jne
mov
mov
in
inc
push
xchg
or
xchg
outsb
sub
dec
aam
addr16
mov
pop
mov
and
fisttpll
pop
ja
in
lock
ret
jle
sbb
jmp
xchg
dec
push
pop
adc
popf
sbb
sti
mov
push
leave
stos
insl
lock
clc
insb
outsl
mov
jnp
mov
push
mov
out
mov
mov
inc
popa
test
fwait
xor
xchg
ficompl
jae
ret
int
lea
add
push
ss
xchg
fimull
in
xchg
hlt
jno
sbb
jg
imul
fsubrp
mov
sbb
xor
movsl
or
repnz
or
hlt
addr16
je
pop
sbb
aaa
jge
mov
cmc
aaa
mov
pushf
ljmp
push
stos
pop
xchg
inc
aam
shlb
sti
cmp
jo
cmp
push
and
scas
iret
cmp
aad
movsb
push
xor
add
in
movsl
arpl
data16
cmp
les
sahf
fdivrs
adc
jl
sub
mov
mov
lahf
cmpsb
inc
stos
push
lds
test
cltd
aad
inc
call
notb
inc
pop
outsl
js
pop
dec
pop
add
aam
xchg
sub
jo
cmp
dec
lods
adc
movsb
or
cmp
jp
test
add
mov
xor
aad
push
jne,pn
int
jecxz
sub
ret
idivb
lcall
xchg
adc
xchg
sub
hlt
dec
or
pushf
adc
jg
call
scas
mov
xchg
inc
mov
outsb
xor
cmpb
cmp
nop
imull
lcall
xor
sbb
xchg
dec
cwtl
hlt
adc
xor
and
push
dec
stc
shlb
popa
fs
cli
ja
xor
cmpsl
leave
lods
jg
jbe
vpcmpgtb
insl
sub
cli
cltd
cld
mov
pop
jns
cmp
jbe
or
lds
jmp
mov
adc
adc
mov
imul
pushf
add
adc
mov
stc
cmp
popa
and
out
std
arpl
daa
pop
cli
mov
and
sub
jo
push
cs
outsl
jge
sti
cmp
dec
repnz
jge
loope
ja
mov
mov
repz
push
lahf
push
les
and
in
mov
jle
push
xchg
call
jmp
xchg
inc
aam
jne
inc
adc
aas
ficompl
cmp
dec
xchg
xchg
je
arpl
jecxz
icebp
imulb
xchg
cwtl
pop
jo
jg
jb
pop
cmp
xorl
adc
jo,pn
mov
sbb
das
movb
mov
pushf
push
test
xchg
es
sti
insl
cltd
popa
scas
dec
fs
cmpsl
lea
in
mov
jb
push
cld
xor
in
mov
dec
push
mov
mov
cmp
cs
sub
add
jle
popa
ret
scas
out
or
adc
fstpl
sar
std
int
xchg
pop
daa
je
arpl
dec
lods
ffreep
inc
mov
jne
loop
lahf
in
mov
rsm
cltd
add
push
dec
push
cltd
pop
cmp
test
mov
inc
dec
out
push
test
aam
xchg
aad
rcl
int
pop
pusha
movsb
outsb
stos
mov
push
pop
fildl
sub
leave
xor
mov
or
std
inc
mov
cltd
mov
pop
in
cmpsl
xor
bound
inc
cmp
mov
ficoml
jne,pt
and
scas
cltd
out
popf
mov
bound
mov
in
or
out
sbb
sub
inc
movsb
enter
out
jp
mov
or
insb
push
jle
shrb
out
dec
in
pusha
xchg
movsl
pop
fistps
pop
jp
imul
xorl
push
lret
popf
inc
int3
ja
sub
in
push
pop
fwait
stos
loopne
jle
js
mov
fcmovu
ss
push
jp
outsb
dec
cmpsb
push
shr
repz
pop
iret
mov
cmp
add
fdivrs
into
loope
inc
nop
sbb
or
stos
ret
mov
outsb
fcmovb
data16
and
gs
and
mov
popa
lds
jp
rclb
mov
inc
push
leave
leave
rcr
out
mov
fisubs
pop
jae
lret
jge
or
mov
add
add
sahf
int3
dec
sbb
pop
leave
icebp
push
mov
jge
dec
in
mov
and
lock
movsb
loope
outsl
push
push
pop
repnz
js
cmp
mov
mov
popa
pop
jnp
int3
adc
mov
xlat
sbb
dec
jmp
sbb
stos
cmp
movsl
rclb
and
lahf
lds
sbb
ss
push
fs
adc
ja
cmp
lcall
js
jecxz
pop
aas
push
cltd
push
pop
mov
popf
sub
xchg
aam
inc
outsb
cmpsl
gs
inc
cmp
jg
and
orb
sbbb
inc
cli
add
push
sbb
loop
dec
push
xor
pushf
int
cmc
cmp
imul
lcall
adc
xor
leave
xchg
sbb
xorb
inc
mov
cwtl
popf
mov
in
mov
and
and
rcr
cmp
lret
imull
inc
xchg
lret
inc
rorl
into
sbb
enter
mov
cmc
push
and
xor
lret
adc
jns
loop
add
fs
add
test
mov
lods
add
arpl
out
xor
int3
and
xor
mov
or
sarl
cwtl
daa
gs
loopne
jle
pop
sub
adc
jcxz
adc
pop
pop
add
push
xchg
sbb
dec
or
xlat
cs
sub
rorb
mov
jmp
