fwait
jle
bound
xor
add
cmp
jecxz
jmp
add
pop
mov
mov
in
xor
xor
cld
sbb
cmpsb
pop
bound
xor
fldenv
addb
add
sub
add
int
cwtl
jmp
xor
add
stos
dec
cmp
xor
add
xor
sbb
xor
imul
jmp
add
xor
inc
std
out
xor
xor
dec
xor
xor
and
out
test
xor
xorb
add
data16
mov
jmp
xor
xor
into
ret
xor
addb
cli
shr
xor
xor
cmp
pop
dec
insb
jp
push
jmp
addb
outsb
sub
xor
ss
dec
jne
cwtl
ljmp
lret
ficoms
lahf
fsubr
xorb
add
adcb
push
xor
es
xor
xor
dec
fwait
mov
or
add
xor
add
pop
push
pusha
xchg
ret
mov
outsl
in
xor
xor
mov
mov
xor
mov
mov
pop
and
icebp
jmp
xor
clc
fldl
xor
jle
addb
sub
mov
adc
xor
add
xorb
shlb
pusha
cwtl
movsb
jmp
xor
faddl
test
sahf
jmp
xor
test
adc
in
addb
xor
js
ljmp
shll
sbbl
inc
jae
jle
push
push
cmp
xorb
outsl
jmp
mov
test
jmp
xorb
out
mov
jb
sub
xor
dec
and
mov
xor
cmpb
mov
jmp
xor
loop
xchg
or
add
add
add
icebp
hlt
aam
jnp
in
xor
cwtl
rep
push
cmpsb
jmp
xor
add
mov
ljmp
out
inc
outsl
shl
bnd
add
add
data16
in
xor
js
popa
es
jmp
xor
jmp
mov
add
mov
jmp
add
xor
test
jmp
add
cmp
loope,pn
fwait
xlat
mov
xor
aam
jmp
ljmp
or
ljmp
dec
xchg
hlt
loope
xor
xor
xor
sub
shll
add
scas
into
dec
cmpsb
mov
xor
xor
stos
fldl
add
pop
push
adcb
add
xor
xchg
push
stos
push
add
jnp
push
sub
and
push
in
xor
xorb
xor
adc
cmpsb
jmp
add
or
push
jmp
xor
inc
sub
xorb
bt
scas
xorb
add
fs
mov
in
xor
xor
fs
mov
daa
pusha
cmp
ljmp
jle
mov
sbb
outsb
sub
jns
xor
xorb
addb
lods
jge
fucomi
xor
xor
xor
mov
ja
ljmp
sbb
pop
je
in
xor
xor
push
in
ret
push
sbb
xor
pop
inc
inc
adc
out
jmp
xor
stos
loop
add
xor
addb
push
mov
xor
add
ljmp
xchg
jmp
xor
lret
fcomps
xor
adc
cmp
xor
xor
repnz
pop
ljmp
loop
hlt
loop
add
ljmp
jg
cmp
xor
xor
mov
pop
ja
in
add
xor
sar
push
lds
mov
xor
jg
or
fs
fxch
and
mov
jmp
add
push
rcr
and
xor
xor
addb
fmul
shr
xor
inc
push
je
xorb
add
pop
pushw
pusha
in
addb
dec
or
outsl
jmp
addb
pop
adc
xchg
stc
jmp
xor
in
call
mov
addb
cmp
pusha
imul
xor
add
fisubs
jmp
xor
xor
call
sti
jl
push
dec
cmpsb
jmp
xorb
add
out
or
in
add
add
aam
fisttpl
xor
or
mov
in
in
addb
insl
frstor
icebp
aad
jmp
xor
push
add
cld
and
insl
in
xor
dec
jb
and
in
addb
js
in
ljmp
scas
add
outsl
jne
sub
xor
add
cmp
addb
repnz
cmp
xchg
and
xor
subb
mov
lahf
jmp
addb
lcall
adc
mov
xor
xor
xchg
mov
xor
pop
xchg
test
add
fisubrl
xor
xor
xor
lahf
popf
loopne
out
xchg
jmp
add
add
pop
or
push
in
xor
xor
mov
push
and
add
add
xor
incl
js
imul
outsl
sbb
push
loopne
jge
ljmp
test
lods
sub
inc
xchg
in
xorb
adc
subb
xor
mov
lea
inc
add
xor
xorb
push
pop
mov
in
xor
fs
mov
xor
sub
push
ljmp
jae
sbb
addb
push
lahf
out
jmp
add
inc
mov
xorb
cmp
in
inc
int3
fucomp
xor
xor
xor
pop
xlat
xlat
imul
xor
pop
cmp
daa
test
ljmp
xchg
cmp
ret
xor
xor
xor
popa
pop
jbe
insb
sbb
ljmp
sub
adc
movsl
xorl
pop
fwait
test
jmp
xor
inc
xchg
lock
xorb
xor
adcb
clc
jbe
jecxz
add
add
nopl
xorb
js
sbb
in
add
add
xor
mov
xorb
xor
loop
inc
and
add
addb
xor
mov
out
add
xor
loop
movsb
mov
add
addb
inc
inc
jge
jmp
xor
inc
push
pushf
mov
jmp
xor
dec
cmp
push
in
addb
and
mov
add
add
pop
adc
sub
add
imul
add
ja
xchg
mov
xor
xor
int3
loop
dec
cmp
xor
push
sub
jmp
xor
cmp
cli
fwait
jmp
xor
add
xor
ljmp
push
or
addb
xchg
pusha
mov
xor
jp
jmp
xchg
iret
ljmp
pop
sub
mov
xorb
add
mov
adc
in
add
xor
mov
stos
lds
jmp
add
outsb
xchg
cmc
push
jmp
xorb
subb
and
dec
mov
xor
lods
mov
jmp
xor
andb
or
add
xorb
cmpb
lahf
and
andb
jmp
xorb
or
add
adc
ljmp
inc
mov
cs
xor
xor
inc
ds
xor
xor
jno
lods
ljmp
or
pop
in
xor
xor
imull
inc
pop
cli
mov
xorb
xor
popa
or
fnstcw
xor
or
inc
test
pop
mov
in
xor
andb
inc
shr
xorb
xor
orb
les
jmp
xor
lds
loopne
loope
sbb
jmp
add
sub
xorb
xor
xor
or
lds
in
xor
xor
fwait
pushf
repz
xorb
shl
das
cmp
xorb
xor
and
jmp
xor
xor
or
xor
xorb
xor
imul
mov
jmp
xor
xor
lahf
or
xor
ret
cli
inc
nop
lods
dec
jmp
addb
je
idivl
daa
out
xor
xor
addb
shll
jmp
xor
test
cmp
mov
mov
in
addb
shl
pop
jne
xor
add
xor
lret
repz
lods
sbb
addb
xorb
xchg
xor
fucomi
addb
xor
sbb
mov
sbb
cmp
xor
push
xchg
xchg
in
mov
in
add
jg
xlat
popa
add
push
fdivl
lock
stos
jmp
addb
loopne
add
xor
add
sti
scas
xchg
in
add
xor
jnp
sarl
cmp
xor
lods
mov
ljmp
loop
sbb
sub
test
mov
hlt
cmovne
add
xor
xorb
cmp
jmp
xor
xchg
dec
ljmp
ljmp
jmp
xor
orb
jmp
xor
out
sahf
adc
xor
ret
scas
add
je
push
clc
ljmp
imul
insb
sbb
xor
xor
aad
in
xor
xor
dec
xchg
jecxz
xchg
jmp
add
add
sub
or
aas
ljmp
xor
xchg
in
addb
cmpl
add
mov
aad
sub
stc
in
xor
add
dec
psubd
and
add
cs
cmp
jne
ret
addb
mov
xor
xor
addb
sub
dec
push
pop
ljmp
xorb
sti
push
in
add
add
jl
repnz
jl
ljmp
in
push
push
sub
addb
sbb
jmp
add
in
fwait
cmp
addb
jbe
daa
or
xor
xor
xor
js
int3
jecxz
lcall
add
add
outsb
add
xor
xor
sub
bound
and
adc
xor
xor
shr
xor
xorb
js
fdivl
je
mov
xor
stos
and
in
xor
xor
inc
sbb
jge
mov
add
imul
stos
jp
imul
jl
iret
xor
jmp
xorb
dec
or
pop
aaa
gs
in
xor
xor
jg
xorb
cmpb
xchg
mov
xor
xor
jns
add
aad
icebp
js
cmc
or
xor
or
jge
mov
xor
add
add
jne
push
sbb
popa
jmp
xor
xor
aas
mov
jmp
xorb
cmpb
mov
xor
mov
cmovp
xor
daa
mov
sub
addb
outsl
mov
sbb
movsb
outsl
dec
push
push
cmp
addb
movsb
pop
in
push
in
xorb
jg
dec
push
pop
icebp
pop
pusha
in
addb
xchg
data16
jb
dec
sti
jmp
add
nop
sub
push
fsubrs
xor
xorb
lahf
mov
cmp
xorb
add
test
dec
fs
sub
xor
xorb
sbb
add
jmp
xorb
cmp
jmp
xor
xor
xchg
cmp
ljmp
int3
adc
jle
xor
xor
add
mov
aam
in
xor
xor
jo
lahf
jmp
xor
dec
lahf
and
xchg
xor
popf
popf
fadd
jg
xor
sub
cmc
in
xorb
inc
notb
mov
add
sahf
or
jno
popf
in
addb
pushf
jl
inc
jmp
add
push
mov
lock
add
stos
xor
andb
add
in
pop
jmp
xor
xor
jecxz
xorb
clc
insl
in
add
fstps
add
jecxz
xchg
roll
pop
add
xor
xor
daa
inc
loope
xor
addb
xor
bound
or
xorb
addb
sbb
jmp
add
ss
mov
jae
addb
xor
aam
cmp
adc
xor
addb
fwait
mov
cld
jmp
xorb
xor
xor
xor
xor
or
xor
add
mov
mov
in
add
push
mov
hlt
mov
xor
sar
out
jmp
xor
bound
and
jmp
add
xor
xchg
scas
xlat
pop
fcmovnbe
in
xorb
push
mov
test
mov
add
or
ret
add
xor
lods
pop
rorl
xor
xorb
lods
stos
js
cmpsl
pusha
stos
in
add
xor
cmc
jne
jmp
xor
fiadds
xlat
add
add
addb
ljmp
add
xor
xor
dec
or
add
addb
xor
mov
dec
add
adc
xorb
xor
movsb
movsl
cld
xor
sbb
xor
addb
mov
lret
xor
add
add
adc
pop
and
xor
xor
xor
push
pusha
shr
add
add
movsb
inc
jno
enter
jmp
xor
xor
cmp
js
in
xor
sbbb
add
push
lock
mov
add
xor
fnstsw
jmp
xor
rclb
mov
xor
pop
push
xchg
mov
xor
add
add
pushf
fisubrs
aas
test
add
xorb
mov
push
mov
mov
jmp
add
xor
xor
xor
inc
lret
jl
adc
xor
pop
out
xlat
mov
in
add
mov
in
add
addb
cmp
xor
shlb
shrb
xorb
add
popa
lahf
mov
push
pop
push
cmp
xor
jl
xor
xorb
addb
or
add
xor
lock
ds
xorb
in
inc
call
xor
pop
dec
pop
jmp
xor
jmp
bound
jmp
xor
cmc
bound
insl
les
jmp
xorb
lods
lods
sbb
inc
dec
sub
add
addb
roll
mov
xor
dec
pushf
jecxz
in
xor
xor
cmpsl
mov
out
ror
xor
xorb
dec
aas
xchg
out
cltd
push
xchg
stos
jmp
xor
xorb
xchg
xor
add
add
mov
das
mov
popa
in
xor
xor
mov
jb
xor
xor
xor
mov
lods
adc
jmp
xor
and
das
inc
outsl
lcall
xor
add
mov
aad
xorb
add
add
inc
mov
jl
xor
sub
inc
fldenv
ljmp
xor
cwtl
or
cmpsl
jmp
xor
cmp
scas
insb
ljmp
mov
mov
ljmp
fidivs
js
adc
add
es
clc
and
add
xor
add
jmp
xor
outsb
js
jle
movsl
or
add
xor
into
jl
movsb
add
addb
push
fisubs
repz
jae
xor
stos
jg
mov
xor
xor
lahf
adc
add
pop
leave
mov
lret
xor
add
xor
add
int
dec
mov
addb
mov
out
mov
xor
inc
sub
xor
add
clc
lea
jnp
jge
in
xor
imul
xor
xor
or
ss
mov
xor
xor
jno
xchg
sub
jmp
xor
add
int
rcrl
add
push
into
test
in
xorb
or
add
xor
xorb
adc
push
pop
inc
test
xor
outsb
fldl
xchg
push
addb
shrl
mov
jmp
add
add
adc
cmp
add
pop
movsb
icebp
xor
outsb
dec
insb
jmp
xor
xchg
xchg
pop
or
xor
xchg
sub
stos
dec
ljmp
cmp
jecxz
jmp
add
mov
add
dec
xorl
or
shl
fldl
jnp
addb
push
data16
pop
ljmp
push
pop
orb
jmp
xor
daa
ret
mov
loop
xor
xorb
jl
mov
and
pop
jmp
xor
mov
mov
into
jmp
add
outsl
in
xorb
push
loopne
pop
lds
or
xor
xor
div
cmp
xor
add
sbbb
inc
adc
add
xor
inc
fsts
xor
xor
xor
inc
mov
jmp
xorb
xchg
dec
rcrl
addb
jnp
popf
ret
jmp
addb
and
xchg
sahf
ljmp
into
adc
ljmp
sarb
jmp
addb
xchg
mov
xor
add
insl
pushw
jns
xorb
addb
jae
test
inc
push
xor
xor
mov
dec
lods
sbb
xor
xor
movsl
dec
clc
or
jmp
addb
jne
adc
add
cmp
fisttpl
out
xchg
mov
ljmp
xor
adcb
lods
adc
jmp
xor
out
ret
in
add
xor
pop
push
xor
mov
addr16
add
add
mov
jecxz
jmp
add
enter
jecxz
stos
xor
movsb
bound
xor
sub
daa
movsb
and
xor
add
add
iret
fnstenv
cmp
addb
pop
jp
std
sbb
xor
add
xor
stc
mov
xor
mov
push
pop
cwtl
xchg
ljmp
add
inc
cmp
in
xor
add
lds
cltd
jmp
add
xor
notl
sahf
pusha
cwtl
inc
movsb
jmp
add
clc
aam
loop
mov
inc
in
add
es
cld
sbb
add
xor
add
cmp
mov
xorb
addb
mov
dec
lahf
mov
xor
xor
bound
and
jmp
xor
orb
xchg
mov
add
test
sbb
jmp
xor
test
pop
mov
stos
pusha
inc
jmp
xor
xor
fisubl
add
pop
loop
or
je
add
xor
push
repz
pop
adc
in
addb
xchg
daa
mov
dec
xchg
imul
xor
push
push
dec
jmp
xor
xor
cmp
ret
jmp
xor
sbb
shll
add
cmp
in
addb
out
mov
out
xorb
xor
sbbb
popf
push
stos
push
jmp
xor
xor
ret
gs
jb
ljmp
jle
push
scas
adc
xorb
xor
inc
sub
addb
add
mov
xor
lret
in
sub
xorb
mov
stos
js
dec
mov
add
xor
cmp
pop
mov
xor
dec
mov
push
jmp
add
cmpsb
jle
mov
adc
ljmp
rol
xor
clc
in
addb
xor
pop
sahf
in
xor
add
add
mov
cmp
xor
add
pop
sbb
rorl
cmp
jae
insl
shrl
xchg
ljmp
jb
inc
and
dec
jmp
xorb
cmp
cmp
mov
add
adcb
fs
loopne
ret
xor
add
nop
jl
mov
xor
inc
loopne
cmc
jns
add
xorb
cmp
sbb
in
xor
xor
inc
jge
jae
dec
ljmp
xor
repnz
xor
stc
mov
add
lret
fdivr
js
in
xorb
adc
loop
stc
in
xor
xor
dec
inc
test
push
and
xor
pop
ljmp
add
add
frndint
mov
mov
ljmp
or
adc
jmp
xor
add
popa
jl
in
xor
jg
fninit
in
in
xor
xor
and
in
jmp
add
push
clc
ljmp
adc
jp
inc
jns
jmp
add
mov
bound
jmp
addb
outsl
fisubrs
xor
xor
outsb
ljmp
shlb
pop
add
xor
fistpl
in
add
add
jp
mov
xor
adc
std
jo
add
xor
fisttpll
jmp
add
fldcw
add
ljmp
scas
gs
ljmp
and
dec
in
xor
add
ds
add
cmpl
push
in
xor
xor
setg
sbb
addb
add
jmp
xorb
sub
xor
cmpsl
stc
outsb
ljmp
mov
xchg
shr
xor
subb
add
xorb
xor
cld
fwait
mov
xor
xor
xor
mov
xor
xorb
dec
jnp
inc
mov
xor
xor
or
xchg
mov
jmp
xor
inc
push
jmp
pop
jmp
addb
dec
push
xor
shr
inc
hlt
mov
shr
add
push
les
jle
xor
xor
cmc
mov
sbb
xor
xorb
xchg
cmpsl
movsb
jp
adcb
xor
addb
mov
add
adc
in
xor
popf
int3
cld
mov
jmp
xor
xor
xor
jmp
addb
inc
mov
xor
xor
add
ljmp
add
lea
movsb
jmp
add
ss
mov
xor
sbb
jnp
xchg
jl
mov
xor
mov
sahf
nop
jne
xor
add
xor
cmpsb
sub
imul
xorb
xorb
leave
ljmp
xor
xor
add
mov
cs
pop
in
xorb
lret
and
jb
xor
xor
loope
leave
ret
pop
xchg
inc
push
xorb
dec
mov
js
jmp
xor
ljmp
xor
or
aaa
movsb
pop
sahf
push
leave
in
addb
out
xor
outsb
ljmp
call
popl
xor
xorb
addr16
and
mov
xor
add
insb
mov
add
add
movsl
dec
lods
das
add
xor
and
cmc
sub
outsb
mov
jmp
add
shrb
in
xor
xor
xlat
sub
and
add
sub
add
xorb
cmp
adc
gs
in
xor
xor
leave
push
test
xor
add
adc
xorb
and
paddw
iret
lret
lods
in
xor
xor
pop
test
jmp
add
scas
xlat
fucom
pop
jne
fs
jns
cmp
sub
adc
xor
push
pop
sbb
xor
xor
sarl
dec
xchg
addr16
ss
pusha
sub
addr16
xor
popf
data16
addb
or
shr
xor
adc
jge
jbe
adc
ljmp
lds
push
mov
mov
xor
xor
or
fwait
loope
repz
xor
inc
xchg
or
xor
add
inc
iret
pusha
inc
xor
in
add
add
ficoml
xor
xor
inc
xchg
shr
add
xor
adcb
jnp
jp
lahf
sub
xor
xor
push
out
xchg
mov
adc
shlb
xor
add
jg
fstp
fincstp
lret
ljmp
je
mov
in
add
add
fwait
ljmp
add
add
aam
int
add
int3
pop
cltd
pop
testl
adc
jnp
mull
xor
xor
pusha
int3
mov
shr
add
jnp
cmp
add
enter
mov
add
xor
add
addb
imul
pop
inc
cld
jmp
add
xorb
cmp
rcrb
add
movsl
jbe
jmp
xor
sub
mov
xor
insb
add
mov
addb
add
or
dec
stos
mov
mov
addb
aam
repz
xor
sbb
xor
xor
xorb
xorb
dec
pushf
ljmp
pop
lea
test
xorb
orb
sub
in
xor
add
xchg
stos
pusha
jmp
addb
stos
mov
xor
rclb
mov
jmp
add
xor
daa
sbb
repz
lods
pop
in
xor
add
cwtl
xor
xorb
addb
xchg
pop
stos
mov
lds
add
lds
mov
xor
addb
xor
das
jmp
addb
stos
repz
in
xor
stos
shrb
xor
mov
jmp
xor
xor
sub
jmp
xor
pop
in
inc
xchg
xor
add
aam
pop
ljmp
inc
xor
std
in
xor
xor
and
jmp
addb
orl
xor
lret
mov
xor
xor
loopne
mov
imul
les
outsb
je
test
in
xor
add
out
xor
xlat
jno
dec
sbb
xorb
xor
ss
stos
jle
mov
xor
aaa
mov
imul
jge
test
jmp
add
add
inc
int3
scas
pushf
mov
xor
dec
and
push
in
add
cmpb
or
ljmp
xor
ds
add
xor
xor
enter
ja
xor
lds
jno
pop
push
mov
dec
add
jmp
xor
das
push
push
cmp
loop
aas
ljmp
divb
movsl
in
addb
fidivrs
xor
xor
or
sbb
xor
aam
jbe
ficompl
jmp
xor
add
or
mov
xor
inc
arpl
jmp
xor
arpl
jl
test
jmp
add
xor
or
or
add
pop
jge
rorl
xor
xor
clc
pop
cmp
jmp
xor
rcrl
add
xor
xor
or
inc
pushf
jmp
xorb
fwait
inc
subl
cmp
xlat
jmp
xor
subb
loop
jmp
add
daa
repz
leave
pop
mov
jmp
xorb
sbb
in
pop
ret
jmp
add
push
add
mov
in
add
add
push
stos
cmp
xor
xor
mov
push
mov
xor
adc
sub
xor
xor
lods
pop
gs
out
xor
add
xor
mov
add
dec
inc
cmp
mov
dec
sub
xor
cld
mov
xor
addb
add
xchg
pop
jmp
xor
mov
fimuls
jmp
xor
xlat
in
popa
in
xor
pop
pop
js
jae
xor
lds
jl
jmp
xor
xchg
mov
cmc
insl
jmp
xor
test
js
in
xorb
addb
pop
mov
cld
pop
in
xor
cmp
cmpb
xor
fs
jp
pop
sub
xor
xor
xor
data16
jmp
xorb
stos
scas
rcl
cwtl
fucom
in
addb
in
cmc
mov
sub
aad
jmp
add
xor
mov
das
adc
addb
repnz
sub
add
orw
sub
subl
add
and
ret
andw
add
or
mov
mov
sub
xor
or
and
and
xor
or
movl
sub
and
or
xor
or
sub
ret
add
add
add
and
xor
addl
and
xor
ret
or
sub
add
xor
mov
mov
mov
and
xor
and
add
xor
xor
add
add
add
addw
add
movl
ret
push
mov
sub
lea
mov
mov
mov
mov
call
sub
add
mov
add
sbbl
movl
pushl
and
add
movl
popl
call
mov
sub
sub
and
sub
xor
mov
xor
or
add
sub
jmp
call
mov
popl
or
movw
mov
sub
xorw
xor
or
add
pushl
mov
and
add
popl
mov
sub
call
subl
add
sbbl
add
movl
mov
xor
sub
subw
pushl
sub
and
popl
call
add
xor
or
mov
xor
movb
add
orw
xor
pushl
movb
and
sub
sub
add
popl
call
subl
movl
sub
mov
andw
or
pushl
and
sub
add
movl
popl
call
or
movl
movl
mov
sub
movw
add
and
movl
pushl
and
add
addl
sub
add
popl
call
call
or
xor
or
mov
xor
and
pushl
or
movl
add
popl
call
movb
xor
addl
mov
mov
xor
add
movl
and
pushl
or
or
andw
and
andl
popl
call
and
add
or
and
or
mov
and
mov
or
xor
pushl
sbbl
and
or
addw
or
popl
call
xor
sub
sub
mov
movl
or
movl
pushl
addl
sub
add
or
popl
call
sub
movl
mov
and
or
movl
pushl
sbbw
or
or
popl
and
xor
movl
and
call
call
xor
sub
or
mov
xorw
sub
xor
add
and
pushl
and
and
add
popl
call
movw
xor
mov
xor
mov
sub
pushl
xor
and
popl
call
orl
sub
mov
xor
add
pushl
xorw
sub
sub
xor
popl
and
xor
or
subl
xor
add
and
mov
or
and
sub
movw
push
sbbw
add
popl
and
xor
add
or
mov
or
xor
jmp
mov
pushl
call
ret
subl
mov
popl
call
xor
sub
mov
movl
movl
mov
pushl
and
andl
popl
mov
xor
xor
add
mov
or
movw
movl
sub
or
movl
and
xor
mov
mov
xor
mov
subl
add
movw
mov
mov
orw
movb
movw
sbbw
addl
mov
xor
and
xor
and
xor
xor
subl
add
add
orl
sub
mov
mov
sub
movb
pushl
xor
xor
mov
xor
popl
orl
xor
or
add
movl
jmp
add
and
add
xor
and
mov
or
or
sub
mov
mov
cmp
jne
mov
and
or
mov
sub
xor
movl
add
and
mov
sub
xor
mov
add
xor
add
mov
add
xor
xor
movl
mov
mov
cmp
jne
or
sub
andl
or
mov
or
and
pushl
subw
add
movl
subl
movl
popl
or
add
call
mov
sub
movw
xor
mov
or
add
mov
xor
and
movl
and
mov
add
add
pushl
sub
sub
addw
add
or
popl
or
add
call
mov
pushl
and
or
movl
mov
sbbl
add
sub
add
or
or
ret
subl
mov
popl
subl
and
sub
add
orw
mov
or
subl
subl
add
sub
pushl
xor
xor
popl
mov
or
xor
mov
xor
or
sub
addl
subl
and
and
xor
xor
sub
mov
add
or
pushl
movl
orl
add
sub
popl
call
and
add
mov
sub
or
xor
and
pushl
or
and
or
subw
or
popl
subl
xor
addl
mov
and
sbbl
or
orl
pushl
or
xor
or
xor
popl
or
or
and
mov
movl
add
xor
mov
movb
xorw
mov
mov
sub
movl
and
mov
xor
add
mov
xorl
or
and
mov
mov
and
add
mov
add
subw
mov
andl
sbbl
add
mov
or
subw
mov
add
orl
sub
mov
movl
addl
or
andw
lea
mov
subl
xor
and
mov
add
movl
xor
pushl
add
sub
movw
movl
sub
popl
mov
movl
add
xor
or
sub
mov
sub
xor
movl
xor
mov
call
mov
sub
or
xor
or
sub
mov
movl
mov
sub
mov
and
orw
mov
add
sub
mov
andl
movl
sub
mov
mov
movl
movl
mov
and
sbbw
subw
xor
mov
or
xor
or
sub
add
mov
mov
add
add
sub
mov
addl
xor
mov
call
mov
subl
movl
and
mov
xor
mov
mov
and
sub
add
andl
movl
mov
sub
sub
mov
subl
movb
add
and
xor
mov
mov
sub
orl
mov
add
and
addl
or
or
mov
xor
movl
movl
add
mov
mov
movw
or
mov
xor
addl
mov
add
xorl
mov
call
mov
movl
movw
movl
or
mov
xor
or
xorl
and
mov
or
sub
sub
mov
and
andl
sub
xor
mov
add
sub
sub
sub
mov
mov
add
and
mov
sub
or
add
mov
subw
and
movw
sub
add
mov
mov
xor
xor
addw
mov
mov
xor
mov
call
mov
sub
sub
xor
mov
mov
and
or
add
mov
mov
sub
xor
mov
mov
xor
xor
mov
xor
xor
add
mov
mov
and
xor
movl
or
xorl
mov
or
mov
or
mov
sub
add
sub
movl
or
add
mov
xor
add
mov
mov
and
mov
mov
and
mov
addw
or
xor
or
lea
mov
call
add
sub
mov
orw
sub
and
pushl
or
sub
and
popl
mov
or
and
addl
mov
or
and
and
and
mov
call
mov
sub
sub
mov
or
sub
and
mov
and
or
add
mov
movl
and
pushl
add
movl
mov
and
popl
xor
mov
add
addl
xor
add
add
xor
addw
mov
mov
subw
and
pushl
xor
xor
and
popl
add
or
call
or
sub
or
or
add
mov
add
add
or
movw
and
pushl
or
mov
popl
or
or
movl
addl
mov
add
xor
sub
xor
orl
mov
add
xor
and
or
xor
and
add
mov
or
xor
and
sub
and
pushl
mov
xor
popl
xor
subw
addl
mov
pushl
addl
ret
call
mov
popl
call
sub
add
xor
xor
mov
mov
and
xor
xor
add
pushl
xor
xor
popl
mov
xor
add
mov
xor
mov
sub
or
orl
and
mov
sbbl
and
xor
andl
add
and
xorl
movl
call
sbbw
and
add
mov
xor
xor
sub
and
pushl
sub
sub
or
or
popl
call
mov
or
mov
add
xorw
or
pushl
add
mov
and
popl
call
add
sub
add
or
mov
xor
andw
and
movl
pushl
sub
xor
add
or
popl
or
xor
sub
and
mov
xor
sub
mov
xorw
mov
mov
mov
or
or
mov
or
and
xor
mov
sub
xor
mov
mov
xor
sub
movl
mov
or
add
and
mov
sub
or
addl
add
add
mov
mov
sub
add
add
subl
or
and
or
add
sub
mov
sbbl
xor
xorl
push
add
or
xor
xor
sub
popl
sub
xor
subl
sub
movl
mov
or
and
addw
push
movl
movl
or
xor
and
popl
sub
sub
add
or
and
subl
mov
or
or
mov
movl
or
mov
mov
xor
or
and
mov
orw
mov
and
sub
sub
and
subl
movl
movl
mov
and
addl
mov
add
or
push
sbbw
and
add
popl
mov
sub
movl
subw
add
mov
sub
or
add
mov
call
mov
xor
xor
add
or
mov
movl
and
mov
add
xor
add
mov
add
subw
mov
xorw
andw
xor
movw
mov
mov
xor
xor
or
mov
orw
movl
mov
or
addw
movw
sbbw
mov
or
andl
xor
and
mov
mov
and
xor
and
mov
mov
movl
and
movl
mov
or
sub
mov
xor
sub
xorw
add
mov
sub
addw
sub
mov
sub
movl
mov
add
and
and
lea
mov
call
sub
addw
add
movb
and
mov
andl
orl
or
sbbw
pushl
xor
xor
or
and
popl
sub
xor
and
add
subl
mov
or
add
orw
or
mov
or
xor
xor
and
push
xor
addw
movl
xor
popl
add
addl
or
and
subl
mov
xor
add
sbbl
xor
mov
or
or
mov
or
sub
mov
sub
xor
or
add
call
xorw
movl
mov
xor
xor
sub
pushl
and
sub
popl
mov
and
movl
orw
mov
sub
mov
and
and
xor
mov
xor
mov
call
mov
addw
and
mov
movl
sub
and
mov
addl
add
add
sub
mov
orl
and
andw
addl
xor
mov
and
and
add
or
xor
mov
mov
subl
xor
add
xor
xor
mov
and
xor
sub
pushl
xor
and
popl
sub
xor
andl
xor
movl
addl
andw
add
xor
mov
andl
sub
subl
pushl
xor
xor
popl
subl
add
sub
addl
xorw
or
and
add
mov
sub
subl
or
pushl
sbbl
or
and
and
popl
sub
xor
call
mov
and
movw
mov
addl
movl
movw
addl
movl
mov
mov
or
mov
pushl
movl
sub
sub
and
or
popl
and
xorl
or
call
mov
pushl
addl
ret
subl
mov
popl
subl
subl
and
mov
movl
add
movl
xor
pushl
movl
subl
add
sub
movl
popl
mov
mov
and
add
and
xor
mov
xor
sub
call
and
or
mov
orl
andw
mov
xor
addw
or
add
movl
pushl
and
xor
popl
call
add
xorw
sub
xor
mov
or
add
xor
pushl
or
movl
popl
subl
or
sbbl
sub
add
mov
xor
sub
movl
sub
sub
pushl
or
xor
and
popl
call
or
movl
add
add
mov
subl
xor
sub
pushl
orl
or
movl
andw
orw
popl
subl
orw
sub
add
sub
add
mov
or
xor
add
xor
pushl
or
add
and
popl
or
xor
sbbw
sub
andl
mov
movl
sub
sub
addw
mov
or
orw
xor
and
andw
mov
mov
and
add
xor
mov
subl
movl
or
add
xor
mov
xor
xorw
and
mov
mov
or
add
and
xor
mov
add
add
or
or
mov
sub
movb
orw
addw
addl
add
mov
sub
orw
sub
mov
or
or
mov
xor
xor
add
add
mov
mov
and
add
movl
and
or
mov
add
add
mov
or
movl
add
mov
mov
mov
add
add
addw
and
mov
movl
sub
sub
movl
and
add
or
movl
mov
xor
add
sbbw
mov
mov
add
mov
movl
and
add
mov
movb
and
sbbw
mov
or
orw
xor
and
xor
mov
mov
sub
xor
mov
xorw
xor
and
sub
add
and
and
mov
mov
and
xor
sub
mov
sub
xor
sub
or
and
xor
mov
mov
sub
xor
sub
mov
subw
or
and
mov
movl
sub
add
mov
or
and
mov
xor
subw
xor
mov
mov
or
or
subl
andw
mov
and
subl
or
sub
subw
xor
mov
sub
add
sub
sub
jne
mov
add
add
sub
mov
add
or
and
xor
mov
xor
add
and
add
mov
sub
movl
mov
add
xor
movl
xor
mov
mov
orl
add
or
mov
movl
add
sub
sub
sub
or
add
subl
or
mov
and
sub
xor
movb
mov
or
or
sub
xor
mov
mov
or
movl
add
add
add
mov
and
add
andw
mov
movl
mov
andl
andw
add
and
mov
and
movl
add
mov
mov
sub
xor
or
pushl
add
add
sub
popl
add
movl
xor
add
addl
or
andw
add
sub
mov
add
movb
andl
pushl
movl
sub
popl
sub
sub
and
xor
xor
call
xor
movl
sub
mov
sub
xor
pushl
and
xor
sub
popl
xor
movl
or
call
sub
and
add
movb
xor
mov
and
and
pushl
addl
add
add
add
subl
popl
add
andl
addl
add
add
or
xor
mov
and
xor
movl
or
and
pushl
and
sub
popl
xor
movl
subw
or
call
mov
xor
sub
mov
movw
or
add
and
or
mov
sub
xor
addl
sub
pushl
sub
sub
and
xor
sub
popl
movb
or
andl
or
or
call
mov
pushl
movl
add
orl
mov
sub
xor
movl
or
sub
add
add
sub
sub
sub
add
ret
call
add
add
js
add
pusha
pusha
add
fs
add
jl
add
test
add
add
dec
pusha
add
push
pusha
add
andb
xchg
pop
add
sub
add
sub
inc
pop
je
add
sbb
mov
cmc
mov
daa
xchg
sub
jb
inc
outsl
mov
outsl
mov
sbb
sbb
mov
mov
sub
rol
in
mov
jne
add
in
icebp
stc
imul
sbb
and
mov
mov
sahf
pop
inc
rcl
sarb
in
mov
cmp
xorl
pusha
sbb
mov
in
insb
jmp
dec
xchg
fcoms
pop
lcall
mov
lcall
scas
cmpsl
push
hlt
aam
fmuls
xchg
jmp
jo
aam
lock
mov
mov
inc
in
jmp
mov
clc
addr16
lcall
mov
sub
inc
leave
cmp
xchg
das
inc
in
outsb
shrl
mov
pusha
jmp
cltd
lret
mov
pop
cmp
scas
jecxz
nop
loopne
pushf
jb
lahf
in
xchg
dec
mov
and
jbe
cmc
jp
mov
jp
int
mov
rcr
in
fwait
scas
loope
mov
sub
rolb
mov
lods
aam
enter
mov
lock
enter
mov
subb
xor
push
jbe
nop
insl
dec
sbb
xchg
enter
push
ds
jl
dec
mov
dec
in
sar
pop
jns
mov
and
dec
loope
mov
mov
in
data16
mov
mov
pop
lcall
xchg
cmc
inc
pop
xchg
movsl
ja
aam
clc
xor
in
ja
ja
dec
in
icebp
stc
gs
mov
icebp
jmp
loope
jns
mov
stc
jmp
jmp
sbb
inc
sarl
adc
fnstenv
jmp
and
data16
and
cmp
mov
mov
fldpi
je
mov
xchg
xor
jmp
jmp
test
inc
iret
jb
xorb
pop
rcl
fdivs
mov
mov
cwtl
aad
mov
addr16
clc
aam
shrb
in
mov
or
nop
lock
mov
adc
mov
add
jbe
xchg
jns
mov
shr
leavew
xlat
mov
inc
xor
jmp
shll
mov
add
jbe
xchg
test
add
shr
inc
mov
and
pop
sub
incb
mov
dec
shrl
jmp
imul
and
sahf
mov
cmpsb
pop
cmp
pop
scas
jg
aam
sbb
clc
bound
xlat
cmpsb
xchg
aas
lock
rolb
outsl
scas
push
aas
sbb
and
push
jb
mov
aam
cmp
clc
push
mov
clc
aam
shrb
out
in
xchg
jae
pop
xchg
popf
push
test
popa
cmpsb
pop
or
pop
mov
lcall
mov
cmp
cmp
in
push
mov
dec
adc
lock
xlat
sahf
jae
add
sbb
or
mov
rcl
lcall
pop
lcall
cmpsb
pop
ja
aam
clc
test
iret
aas
fcom
aam
xchg
jecxz
mov
insl
mov
aas
call
push
xchg
sti
cmp
jb
push
jmp
out
mov
xlat
sahf
jno
add
sbb
pop
xchg
add
mov
cmp
jp
cmp
rcl
enter
mov
mov
in
inc
leave
or
mov
in
push
cmpsb
testl
pop
sbb
inc
pop
dec
mov
mull
jmp
idivb
pop
test
dec
xchg
dec
xlat
jg
pop
ja
aam
clc
aam
xor
adc
nop
enter
mov
sub
sbb
cli
mov
pop
or
and
sahf
cmpsb
ret
mov
cli
shrb
lcall
stos
xchg
xlat
scas
fsubs
in
mov
mov
outsl
cmpsb
cmp
rcrl
lock
mov
pushf
rcrl
shrb
mov
outsl
cmp
jo
sbb
or
lcall
mov
jne
fnstenv
mov
jmp
sbb
inc
fimuls
xchg
mov
fld
insl
pusha
test
xchg
loopne
fcompl
dec
cmp
enter
mov
dec
int
stc
insl
cmc
lds
in
dec
shrl
jns
mov
and
pshufw
jne
dec
xor
mov
test
cmp
jp
sub
call
pop
sbb
aas
rcl
ror
popa
mov
inc
sub
sar
lds
sbb
aad
mov
jp
and
mov
mov
aad
and
aam
fdivs
in
xchg
into
mov
in
xchg
imull
data16
mov
or
into
rorl
xchg
outsl
cmp
addl
pop
cmp
dec
jmp
sbb
jbe
fnsave
mov
aad
cmp
mov
jbe
mov
sahf
adc
shll
xchg
pop
cmpsl
aad
pop
in
adc
jns
out
mov
int
data16
stos
sbb
sbb
into
loope
jns
mov
push
jg,pt
cmovns
jb
mov
fcom
aam
ret
mov
xlat
mov
outsl
or
and
fwait
push
lcall
pushf
jb
pop
in
xchg
jle
aad
stos
sti
rclb
int3
ret
mov
or
and
icebp
jmp
cmp
scas
je
fnop
lock
sub
push
jbe
mov
mov
shll
xchg
cwtl
movsl
aad
adc
adc
popa
fwait
jmp
test
jno
mov
leave
daa
xchg
push
dec
fcoms
mov
pop
es
cmc
inc
fbld
pusha
int3
jmp
add
insb
leave
adc
in
jp
int
mov
clc
mov
dec
mov
xchg
shll
enter
mov
inc
adc
sarl
subl
arpl
mov
pop
or
jbe
movsl
repz
icebp
ds
movsb
sub
in
mov
jge
sub
aam
lock
adc
inc
dec
in
leave
stc
cmp
mov
or
mov
pop
stc
jmp
jmp
dec
xchg
enter
cmp
ja
jmp
stos
mov
out
das
jmp
jb
mov
aad
ja
inc
adc
sarl
mov
in
stc
sub
nop
rorb
xchg
es
stc
int
cmpsb
xchg
sbb
jns
stos
mov
fucomp
dec
loope
je
mov
stc
jmp
rcll
mov
pop
sub
dec
jmp
mov
in
outsb
leave
mov
sahf
jns
adc
mov
leave
sub
mov
dec
sub
jmp
fmuls
or
fmuls
sahf
in
jb
aad
std
jmp
xchg
pop
inc
or
cmp
fwait
pushf
jb
cmp
xchg
cli
movsb
add
jns
and
sbb
stc
mov
pop
or
sbb
in
mov
pop
mov
in
iret
leave
call
add
leave
jmp
mov
xor
iret
shl
idivl
outsl
inc
enter
jp
lcall
pop
mov
push
scas
ficoml
aam
fsub
addb
filds
add
jmp
and
dec
jmp
mov
push
mov
int3
aam
sarb
pop
pop
pushf
rcrb
sbb
mov
clc
aam
enter
stos
cmp
mov
ljmp
pop
ja
aam
clc
sub
mov
mov
sub
and
xchg
cmc
sub
jmp
icebp
mov
pop
test
mov
pop
xchg
loopne
lods
mov
xor
in
insb
shll
and
add
mov
mov
insb
sub
and
sahf
fcmovnb
aam
or
aas
aam
shlb
jae
test
and
fcompl
mov
push
in
icebp
ds
dec
mov
and
mov
xchg
mov
stos
mov
scas
push
stos
inc
push
sbb
dec
fxch
mov
or
leave
inc
mov
mov
jp
and
mov
les
mov
pusha
movsb
aam
loopne
push
mov
popf
pusha
in
into
loope
jno
mov
add
dec
jmp
dec
xchg
call
arpl
adc
ret
dec
es
enter
mov
hlt
aam
rclb
xchg
outsb
cmp
fnstenv
fdiv
mov
jno
add
ja
add
clc
loopne
jmp
push
mov
adc
fsubl
mov
rcl
lock
mov
mov
sub
mov
lock
enter
mov
or
int3
lds
mov
dec
cmp
jmp
leave
pushf
jae
mov
cmp
filds
push
fldcw
aas
movsb
mov
shr
xchg
lret
mov
jmp
shll
jns
dec
in
inc
loope
in
mov
aam
cmp
scas
bound
ja
aam
clc
bound
aas
lods
aam
shlb
adc
insl
jo
dec
xchg
lock
outsl
push
push
or
dec
pusha
adc
insb
loope
mov
xor
fstps
ljmp
sub
lods
aam
lock
and
scas
inc
sub
out
mov
pop
add
das
pop
test
mov
xchg
stc
shll
mov
enter
repz
jmp
icebp
ds
mov
aam
mov
jg
cmp
aam
fadds
mov
push
dec
in
sar
imul
sbb
outsb
sarl
bound
xlat
je
mov
pop
xor
inc
pop
dec
mov
mov
and
pop
fnstsw
loopne
adc
lock
cmc
dec
shlb
sbb
lods
xchg
gs
add
cmp
outsb
xchg
or
mov
nop
call
push
in
xchg
xchg
movsl
aad
adc
loope
jae
mov
pop
and
fwait
scas
sarb
sub
lock
xchg
lret
popf
mov
sub
in
sbb
hlt
mov
pop
and
outsb
shl
sub
movsl
jno
popa
dec
adc
divb
mov
loopne
aam
dec
fsubr
mov
aas
sub
lock
sub
addr16
nop
call
pop
sub
outsb
rorl
jnp
mov
add
lock
pop
mov
std
int
mov
aas
loopne
adc
push
jp
cmp
addl
jmp
and
mov
fwait
scas
cli
ret
aam
test
and
fcomps
mov
mov
xlat
lods
inc
filds
pop
inc
jmp
and
dec
leave
std
mov
mov
pop
xor
xlat
scas
jns
mov
xor
test
mov
add
lcall
stos
mov
ds
mov
jmp
loope
test
sub
jmp
or
into
shrl
mov
jp
and
mov
scas
mov
push
sahf
dec
ja
aam
clc
fs
sub
into
pop
mov
scas
psraw
cmp
in
sub
ret
repz
xor
lods
pop
cmp
rsqrtps
sti
pushf
mov
and
rorb
fisubs
std
mov
dec
push
pop
int3
stc
pop
jno
mov
inc
in
dec
leave
iret
mov
pop
or
xchg
lret
mov
orb
fldl
stos
inc
pop
mov
lcall
cmpsb
imul
adc
ss
dec
mov
dec
xor
stc
cs
pusha
mov
jbe
cmp
pop
cwtl
dec
xchg
fsubrs
fsubr
mov
pusha
xchg
aad
mov
aam
clc
mov
cmpsb
add
loopne
pop
inc
mov
mov
mov
mov
and
cwtl
loopne
bound
inc
add
sbb
sti
in
mov
test
aam
and
push
cmp
lcall
sahf
daa
inc
movsb
aam
enter
mov
hlt
aam
sarb
xchg
push
mov
test
aam
aaa
fucomp
mov
xlat
sahf
xchg
ja
aam
clc
adc
mov
pushf
rcrl
fsubrs
jns
mov
inc
add
mov
je
jp
and
mov
mov
insl
sahf
arpl
fcom
xor
pushf
push
mov
mov
cmp
fmull
addr16
in
sbb
dec
stc
mov
rcl
enter
iret
cmp
xchg
fldcw
mov
jmp
icebp
and
dec
fmuls
cmp
mov
mov
loopne
adc
jmp
sahf
xchg
aam
fcoms
stos
inc
in
aam
enter
mov
xchg
rcll
cmovg
inc
sub
mov
and
cmpsb
xchg
mov
fists
sbb
das
rcrb
sub
jmp
flds
mov
mov
push
mov
test
std
push
in
icebp
ds
aam
aam
push
loopne
mov
ja
lahf
push
dec
in
fyl2xp1
pop
test
xchg
xor
jno
mov
inc
in
je
scas
pop
mov
jno
adc
je
icebp
mov
cmpsb
mov
inc
adc
aam
cmp
in
mov
push
xchg
xchg
aam
shl
cmp
filds
pop
jmpw
daa
mov
loope
outsb
shrl
test
add
jp
int
mov
push
mov
pop
sub
lret
or
mov
ds
jle
sbb
clc
mov
les
shlb
enter
jno
or
and
mov
xchg
out
jo
aam
lock
xchg
dec
mov
mov
nop
call
push
jmp
pop
movsl
in
rcrl
lahf
jbe
in
stc
stc
ret
mov
mov
cmp
xor
or
sbb
mov
loopne
aam
xchg
in
mov
push
mov
push
rcl
adc
add
ja
jns
xchg
fyl2xp1
ret
xchg
push
in
icebp
jne,pt
and
cmp
xchg
rcrl
shlb
push
ja
aam
clc
mov
mov
nop
lock
aas
or
jmpw
jecxz
test
mov
xlat
scas
fnstcw
aam
test
cmp
ret
cmp
jb
pop
in
xchg
in
mov
xchg
adc
xchg
lret
mov
xor
inc
leave
jns
repz
sub
sbb
js
and
std
mov
mov
sub
rolb
mov
add
nop
enter
xor
xchg
rcll
icebp
ds
adc
in
mov
fbstp
into
outsb
ror
pusha
mov
xchg
dec
push
mov
add
nop
call
jmp
mov
rolb
fnstsw
lods
aam
shlb
xchg
aaa
icebp
jmp
leave
push
mov
icebp
ds
enter
mov
add
sbb
enter
popf
mov
push
xor
notl
push
sbb
sub
push
mov
imul
fwait
scas
xor
scas
bound
sbb
in
lock
push
xchg
sbb
stos
mov
cmpsb
cmp
addr16
xchg
enter
pop
mov
bound
aas
pushf
shll
shlb
jae
sub
in
sub
lods
inc
xchg
adc
mov
mov
pop
cs
xchg
push
movsl
mov
movsb
clc
mov
pop
or
jbe
mov
pusha
sbb
xchg
loopne
jecxz
dec
pop
and
shlb
mov
mov
aad
mov
filds
push
je
fisttps
aam
mov
fstpl
and
sbb
add
in
aas
movsb
jno
rorb
jecxz
mov
jb
mov
add
and
pop
dec
mov
xor
aaa
dec
sarl
adc
icebp
ds
enter
mov
test
adc
jl
sbb
dec
in
icebp
stc
gs
mov
adc
notb
jecxz
fsubrs
pop
sub
mov
sub
lock
cmc
mov
clc
aam
fdivrs
in
mov
xorb
sub
dec
fstps
mov
push
add
fwait
scas
out
les
dec
jge
mov
loopne
xchg
stc
mov
hlt
aam
enter
mov
sbb
cwtl
rcrb
outsl
xchg
mov
sbb
and
dec
xchg
cmc
mov
rcl
sbb
jo
jbe
mov
lcall
cmpsb
das
ja
aam
clc
xor
jnp
or
adc
sarb
xlat
mov
mov
mov
mov
in
aam
clc
sbb
mov
adc
out
xchg
cmc
mov
xchg
sarl
sarb
xor
in
adc
inc
jb
mov
mov
cwtl
cld
pop
inc
aad
outsl
xchg
rcrl
lock
scas
dec
aas
test
sbb
jl
dec
mov
in
xor
test
popa
mov
add
lcall
mov
pop
call
pop
fnstsw
sub
je
fldenv
inc
pop
pop
adc
out
sarb
sub
and
sub
in
outsb
mov
xor
test
stc
xor
mov
jne
or
popf
fbld
sahf
adc
jmp
add
je
testl
and
sahf
stos
mov
filds
pop
outsb
fldcw
aam
lret
dec
xchg
and
rol
xchg
xchg
lret
xchg
mov
pusha
shr
fs
jnp
mov
shr
jmp
fwait
cltd
lods
pop
in
xchg
call
out
adc
test
dec
lock
xchg
enter
ret
sbb
mov
in
sbb
mov
cmpsb
dec
and
mov
mov
fisttps
cs
stc
pop
mov
imul
frstor
mov
fstps
mov
dec
in
into
fstps
inc
sub
int3
xchg
xor
jmp
jmp
in
xchg
pushf
mov
in
pop
pop
pop
adc
dec
jns
mov
in
int3
stc
cmp
xchg
cmp
jns
mov
icebp
jmp
loope
xchg
aaa
mov
jmp
or
into
jmp
and
dec
loope
test
adc
icebp
jmp
fnstcw
jno
mov
or
rclw
mov
sub
insb
jmp
mov
adc
jmp
dec
xchg
call
leave
and
fdivs
sbb
int3
aam
clc
cmp
in
mov
mov
sub
mov
push
lods
xor
pop
sub
rorb
pop
ja
rcrl
clc
xor
xor
cmp
jne
icebp
and
in
sub
outsb
jmp
sub
into
leave
cltd
mov
rcrl
inc
loope
insl
pusha
xchg
dec
xchg
loopne
jecxz
inc
lock
shrb
inc
xlat
mov
lcall
mov
and
push
mov
outsl
fcom
xor
xchg
pop
sub
ja
aam
clc
pop
pop
sub
inc
hlt
aam
enter
mov
call
mov
dec
lods
aam
shl
cmc
mov
shrl
lcall
mov
sbb
in
jb
mov
cmp
into
leave
mov
lock
sbb
pop
inc
clc
popf
and
xchg
mov
inc
rcl
enter
pop
test
sahf
or
add
jns
mov
stc
in
inc
lret
mov
sub
jmp
fnstcw
mov
pop
and
icebp
ds
jo
sub
lock
mov
mov
pop
fnstsw
dec
in
sar
insl
mov
imul
in
fs
jge
pop
mov
aad
sub
jne
push
cmp
rorl
in
sub
fxam
jno
mov
aad
add
rcr
inc
dec
and
int3
stc
cmpl
pusha
or
je
and
mov
in
into
stc
inc
jns
mov
fldpi
je
pop
test
jo
mov
fstpl
sub
mov
aas
sbb
cwtl
shrb
jne
sbb
lcall
scas
mov
int3
aam
sarb
pop
pop
mov
dec
in
int3
stc
cmp
dec
pusha
xor
subl
jmp
mov
in
inc
ror
daa
mov
pop
push
sbb
scas
xchg
mov
insb
sub
scas
push
add
sbb
lock
pop
and
outsb
leave
sub
xchg
daa
jp
int
mov
outsl
loopne
adc
xchg
mov
mov
mov
mov
dec
aam
cmp
pshufw
icebp
mov
or
adc
push
cmpsb
add
filds
push
je
inc
test
push
xor
in
outsb
shll
repz
jp
int
mov
outsl
adc
adc
xchg
push
mov
cmp
test
adc
jmp
and
insb
loope
mov
mov
or
dec
loope
in
mov
xor
mov
aam
fdivrs
mov
xchg
shll
enter
mov
cmpsb
pop
orb
xchg
pop
jmp
mov
cltd
inc
loope
shrw
lods
and
icebp
and
cmpsb
xor
cs
push
inc
xlat
scas
jnp
add
xor
sub
jmp
dec
clc
aam
enter
mov
mov
sub
rclb
push
cmpsb
sbb
shll
lock
mov
xor
fs
mov
jmp
and
sub
pop
shr
outsb
jmp
sub
sbb
in
mov
pop
sub
outsb
repz
dec
in
into
rorl
scas
xor
fld
cmc
mov
pop
sub
into
loope
jno
mov
fldpi
outsb
fnstenv
mov
mov
aad
jbe
mov
jnp
cmpsb
pushf
rdtsc
dec
in
int3
shl
cltd
lret
mov
push
jb
cmp
jno
push
sub
sbb
in
mov
pop
or
int
mov
ja
shll
clc
fisubrl
mov
loopne
xor
ljmp
aas
loopne
sbb
pusha
mov
mov
aam
fmul
push
lcall
pop
xchg
push
push
test
andb
mov
aad
xchg
ja
shll
clc
rorb
lcall
aam
loopne
xchg
push
mov
int3
aam
rolb
push
mov
or
and
fwait
push
jb
cmp
jno
pop
and
outsb
shll
ror
xchg
mov
int
int3
rcl
jecxz
sub
int3
stc
add
mov
aad
push
and
jbe
add
mov
and
adc
push
and
scas
pusha
mov
fsubrs
cwtl
loopne
bound
mov
movsb
aam
rolb
cmpsb
iret
ja
aam
clc
inc
mov
mov
lods
aam
rcr
mov
fists
dec
fildll
lret
xchg
shlb
dec
xor
and
je
jmp
ret
mov
sub
clc
push
mov
aas
in
aam
rcrb
inc
ja
aam
clc
xlat
push
mov
cmpsb
cmp
mov
in
push
jg
cwtl
shlb
fnstsw
movsb
aam
enter
mov
mov
imul
mov
cwtl
fldcw
addr16
sbb
nop
push
mov
adc
nop
sarb
jp
push
mov
in
outsb
leave
push
subl
rcll
and
fnstenv
fcomp
fidivs
sub
cwtl
into
fnsave
xchg
aas
mov
mov
mov
and
scas
leave
mov
xlat
mov
outsl
clc
aam
lock
in
outsl
mov
xor
mov
xor
ja
aam
clc
xor
mov
add
adc
outsb
pop
dec
mov
int3
aam
sarb
mov
shrb
lcall
mov
adc
mov
stos
mov
stos
clc
mov
or
icebp
jne,pt
sbb
lcall
sahf
mull
and
sahf
vcvtss2sd
dec
jg
cmovno
xor
mov
xchg
lret
popf
mov
xor
in
jbe
mov
sahf
outsb
mov
out
inc
pop
xchg
idivl
or
aam
push
in
mov
cmp
mov
push
and
inc
pop
mov
in
sbb
jne
hlt
lcall
push
sahf
pop
mov
cwtl
loopne
pop
sub
mov
sub
rcr
pop
push
mov
sub
into
fstps
inc
sub
int3
fldenv
xchg
shlb
ss
roll
aas
pushf
das
sbb
jns,pn
mov
or
adc
mov
xchg
shll
enter
pusha
aam
cwtl
loopne
mov
mov
test
sbb
fs
mov
in
aam
clc
jb,pt
mov
sbb
adc
in
pop
sub
mov
push
inc
cmp
sbb
leave
xor
xchg
push
lods
aad
rcl
ja
fnsave
ds
fbstp
adc
jmp
sbb
into
out
rorb
pop
sub
inc
jmp
add
outsb
shl
add
or
test
jne
sub
data16
jmp
sub
into
jmp
or
and
xchg
cmpsb
jae
inc
pop
mov
loop
sub
mov
sub
jbe
popa
mov
out
aad
cmp
dec
inc
ja
arpl
aam
enter
xor
in
xchg
sub
mov
daa
cmp
jb
mov
stc
xchg
insl
cmpsb
sub
aam
enter
mov
lods
aam
shlb
cwtl
jne
stos
xchg
repnz
pop
mov
push
test
aaa
cmpsb
push
les
or
aam
fcomps
jmp
inc
or
nop
sarb
xchg
mov
fldcw
pop
mov
add
inc
jmp
mov
in
dec
jmp
sbb
sbb
in
mov
pop
and
outsb
fldcw
xchg
dec
in
outsb
sarl
xchg
fdiv
dec
cld
sub
inc
mov
loopne
xor
in
jb
mov
mov
sbb
pop
cmc
mov
or
cmp
les
mov
shrb
lcall
cmpsb
scas
push
loopne
nop
fmuls
mov
in
outsb
jmp
sbb
rcl
jmp
icebp
jmp
rcrl
rcrb
jne
das
cwtl
pop
inc
aad
xchg
lock
shlb
mov
sbb
cwtl
clc
xor
jmp
inc
movsb
aam
shl
inc
mov
sub
push
push
in
imul
jg
sbb
clc
insb
pop
dec
mov
mov
sub
push
out
inc
aad
jmp
shrb
in
mov
fwait
scas
cli
mov
mov
bound
mov
call
pop
jmp
mov
push
xchg
in
ja
pop
jno
aam
lock
fnstsw
mov
sub
mov
sub
sbb
sti
mov
pop
and
icebp
dec
jo
add
nop
enter
mov
xor
in
inc
shl
jno
mov
aad
es
outsb
adc
loope
mov
mov
leave
jmp
shll
mov
pushf
jb
cmp
xchg
dec
mov
je
push
in
xchg
cli
mov
adc
push
jno
mov
inc
in
into
roll
idivl
shr
int3
leave
popa
stos
jmp
cmp
jno
mov
loope
shll
inc
js
inc
inc
dec
push
into
ret
dec
mov
mov
inc
in
into
leave
in
das
mov
add
mov
pop
mov
in
dec
leave
loopne
push
xchg
push
cmp
adc
aam
cmp
roll
rorb
in
mov
xchg
sub
lock
sub
mov
sub
shlb
out
push
in
aam
fcomps
mov
loop
sub
mov
adc
sub
icebp
mov
mov
sub
sar
pop
jmp
jnp
aad
cli
movsb
out
inc
pop
xchg
pop
push
in
sbb
push
jb
mov
or
adc
push
xchg
xor
addr16
nop
call
push
test
mov
push
mov
mov
jne
rorl
lock
cmp
bswap
leave
xchg
mov
mov
xor
mov
mov
mov
loopne
mov
fwait
scas
or
mov
sub
lock
aad
xlat
mov
inc
or
nop
rolb
jecxz
in
xchg
stos
mov
cmp
into
jmp
add
dec
loope
mov
pop
xor
in
jbe
cmpsl
add
push
roll
icebp
xchg
pop
inc
add
ror
inc
mov
mov
sub
mov
sub
idivb
pop
sub
sbb
repz
pop
sbb
int3
ror
mov
addr16
leave
jmp
loope
jae
mov
jb
and
mov
les
sub
mov
sbb
fmull
ss
sub
fsubrs
sub
push
or
xor
insb
pop
and
clc
aam
lock
xchg
std
mov
hlt
aam
sarb
jmp
dec
clc
aam
enter
cmp
test
jmp
ret
sub
dec
fincstp
sub
or
data16
cltd
lret
mov
xchg
and
outsl
or
cmp
pop
mov
dec
cwtl
rcrl
shlb
xchg
lret
movsl
mov
pusha
loope
stos
mov
sbb
mov
mov
loope
insb
fnstenv
adc
icebp
cmovs
sub
add
mov
sub
lock
mov
mov
sbb
lcall
mov
in
outsb
rcl
out
mov
bound
subl
xor
mov
jmp
sbb
dec
fsts
mov
sub
jmp
fld
idivl
or
addps
bound
inc
int3
aam
enter
mov
clc
aam
rorb
add
xchg
shll
lock
fnstsw
sub
pop
test
pop
or
int3
fprem1
mov
popa
sub
jmp
flds
scas
std
inc
cmp
outsl
pop
test
nop
fsubrs
pop
sti
and
push
and
scas
pop
rol
loope
jg
aas
push
int3
aam
fdivs
loope
pop
mov
lcall
cmpsb
or
clc
int3
cmp
filds
pop
into
cmpsb
inc
xor
jmp
shl
jno
mov
aad
push
hlt
bound
dec
leave
popf
in
in
pop
rcll
jbe
cmp
mov
std
jmp
jmp
mov
jmp
shll
xlat
mov
mov
pop
sub
and
sahf
push
ret
cmc
dec
ja
stos
inc
pushf
rcl
rclb
in
mov
outsl
sahf
scas
addr16
nop
call
push
add
jmpw
jmp
and
dec
loope
stos
jmp
adc
mov
and
rcll
mov
add
into
jecxz
cwtl
sbbl
or
jg
adc
clc
aam
shrb
mov
xchg
shll
sarb
mov
mov
dec
or
out
mov
shrl
sbb
or
outsb
roll
out
mov
loopne
or
pop
and
sbb
mov
sub
rorb
pop
cmp
shll
and
int3
bound
fbld
adc
rol
jno
mov
loope
mov
popf
pop
xor
jns
mov
add
rcll
dec
sarb
dec
xchg
sbb
push
rcl
sbb
jb
test
dec
add
xor
or
inc
mov
rcl
fadd
pop
cmc
mov
popa
in
loopne
loope
insl
pop
add
fdivrs
pop
jo
sub
lock
xor
cwtl
shll
lock
imul
mov
fldlg2
mov
ja
lahf
jb
aam
std
ds
add
inc
rcl
enter
mov
cmp
lock
mov
aam
adc
nop
bound
mov
call
push
mov
cmp
jno
pop
or
data16
mov
add
je
flds
addl
int3
sarl
sarb
in
iret
leave
call
test
icebp
sahf
adc
leave
les
movsb
dec
xchg
loopne
aad
dec
aam
and
push
scas
sub
or
aam
mov
pop
add
inc
shl
das
mov
inc
in
into
shl
add
or
iret
xlat
cmpsb
mov
das
sub
mov
leave
aaa
std
jmp
leave
mov
or
rolb
aas
lods
aam
shlb
mov
mov
nop
call
push
test
and
bound
push
sbb
xor
dec
xchg
push
mov
cmp
lock
lret
mov
popa
sub
jmp
fldenv
xchg
call
loope
adc
mov
sbb
sbb
in
mov
pop
aam
imul
sub
jge
icebp
jmp
leave
mov
cmpsb
and
dec
in
sbb
repz
or
mov
add
in
mov
cmp
stos
addr16
mov
jmp
fnstcw
sahf
jno
sbb
into
jecxz
enter
cmpsb
std
sub
in
fldcw
fmul
pop
fnstsw
pop
sub
lret
mov
loope
jmpw
pop
mov
fucomp
je
dec
jns
mov
fimuls
push
pusha
inc
in
dec
loope
sub
sub
in
insb
cltd
lret
mov
jb
inc
outsl
mov
inc
hlt
aam
enter
lret
mov
mov
jmp
jmp
sub
mov
mov
sahf
dec
cmpsb
pop
lcall
pop
cmc
inc
fwait
scas
mov
pop
sub
lock
and
aam
enter
mov
dec
in
stc
stc
mov
xchg
call
jp
and
scas
mov
mov
lods
aam
fmuls
mov
jo
aam
lock
pop
in
mov
add
and
mov
stos
xchg
mov
fs
bound
imull
sub
push
mov
mov
sub
enter
mov
clc
aam
lock
pushf
jb
cmp
xchg
add
pop
sub
mov
jns
mov
scas
or
sqrtps
aam
rcrb
mov
sbb
fs
mov
mov
cwtl
clc
jo
sbb
inc
or
sbb
cmp
add
or
push
lods
or
mov
in
icebp
ds
enter
mov
mov
sub
fmuls
stos
mov
movsb
fsubs
leave
cmp
into
leave
fnsave
mov
pop
or
pop
scas
jbe
xor
je
rcr
repnz
adc
mov
adc
adc
insl
inc
xchg
dec
xchg
rcrb
cmp
fwait
je
fldenv
stc
inc
xor
pop
into
roll
ret
mov
xor
inc
loope
jns
mov
adc
flds
daa
mov
add
dec
add
inc
fldl2t
cltd
lret
mov
push
inc
jne
pop
ja
aam
clc
bound
mov
clc
aam
lock
pop
cmp
call
bound
sub
jne
mov
push
adc
mov
movsl
pusha
sub
outsb
loope
jno
mov
icebp
jmp
jmp
dec
cwtl
lock
outsl
mov
xor
mov
xchg
std
enter
dec
insl
sahf
mov
lock
mov
xor
jne
rcl
lock
gs
adc
fstpt
sbb
aam
jmp
in
mov
cmp
jb
pop
mov
jmp
shrl
mov
adc
mov
pusha
dec
in
into
loope
jns
mov
cmp
insl
jo
dec
xchg
lock
in
jb
sub
std
in
cmp
cmp
xor
rcr
icebp
inc
sub
into
fnstcw
xchg
and
inc
and
xchg
leave
xchg
rorl
xchg
sti
dec
sbb
sbb
mov
xor
and
call
xchg
inc
es
jb
mov
or
mov
push
pusha
adc
dec
loope
jno
mov
pop
cmp
push
scas
jmp
mov
push
mov
cmp
jno
pop
sub
je
sbb
cmpsb
in
sbb
into
shl
mov
mov
sub
jbe
mov
or
xchg
in
inc
in
stos
shll
inc
in
into
jmp
lahf
xchg
mov
fisubl
xchg
cmp
leave
jge
pop
mov
cmp
cmpsb
mov
loope
adc
mov
mov
xor
subl
xor
into
shl
mov
mov
or
iret
lds
mov
adc
jbe
pop
mov
mov
aad
cld
push
inc
inc
fwait
scas
jno
mov
sub
fdivrs
xor
addr16
nop
call
push
or
mov
and
stos
and
fdivl
lret
mov
pop
pusha
and
inc
loope
jns
mov
in
jmp
jmp
or
sbb
out
mov
mov
enter
mov
filds
pop
dec
jmp
sub
inc
rcll
mov
cmp
mov
mov
mov
fstpl
mov
ja
arpl
aam
adc
mov
scas
and
aam
fcoms
mov
and
xchg
mov
les
mov
xor
aam
std
mov
hlt
aam
clc
xor
mov
and
mov
stos
ja
shll
clc
cs
sbb
shlb
mov
aas
cwtl
rcll
rcl
gs
mov
nop
call
push
add
jbe
imul
sub
in
sbb
in
mov
pop
sub
int
mov
sub
fnstenv
jecxz
pop
push
insb
leave
jge
add
and
test
dec
mov
test
pop
push
inc
outsl
mov
aam
sub
in
mov
popf
mov
sub
jmp
fcos
jp
mov
dec
in
mov
mov
pop
sbb
lret
in
dec
filds
nop
dec
fldenv
jns
mov
pop
lcall
jb
inc
ja
outsl
dec
lock
enter
mov
in
xchg
arpl
mov
dec
fnstenv
pop
mov
inc
in
into
shll
mov
or
int3
loope
xchg
mov
pop
adc
mov
sub
jbe
jne
pop
mov
in
into
jmp
or
and
mov
inc
push
scas
cmp
shl
repz
dec
xor
and
add
fnstsw
add
sbb
pusha
cmc
mov
pushf
shll
enter
mov
pop
aad
inc
jmp
sub
inc
shrl
xchg
inc
pop
inc
in
into
jmp
or
inc
fldcw
movsl
dec
jmp
or
sahf
fsubs
and
shrl
inc
fwait
scas
or
mov
sub
fdivs
std
mov
fcom
cmp
xor
mov
mov
sub
dec
cmp
nop
enter
out
sbb
inc
rorl
mov
in
icebp
ds
pop
fsubrl
inc
mov
call
mov
mov
add
aam
insb
loop
mov
insl
cmpsb
or
aad
cli
jg
inc
inc
ja
dec
push
rcl
cmp
mov
xchg
lret
outsl
mov
cwtl
lock
pop
adc
cmp
jne
icebp
adc
cmp
stc
call
adc
pop
push
mov
int3
bound
aas
fcom
aad
daa
add
sub
cwtl
dec
inc
lcall
dec
jmp
or
jmpw
ret
mov
jb
aas
xlat
mov
outsl
or
sbb
fs
mov
sbb
cwtl
clc
push
bound
pop
pushf
rcll
pop
ja
xchg
fadds
cmp
jb
test
dec
clc
aam
rclb
pop
mov
or
and
les
aas
push
loopne
and
subb
jge
subl
xor
out
jb
mov
call
jb
mov
cmp
xchg
mov
xchg
rcll
sarb
aad
xlat
xchg
test
aam
clc
jbe
cmp
sub
testb
sbb
fnstenv
cmpsb
xor
fnsave
in
cmp
adcl
cmp
mov
std
cmp
in
into
leave
cltd
mov
mov
pop
loope
fwait
scas
pusha
shrl
pop
outsl
xchg
rcrl
lock
outsl
cmp
aam
push
add
ja
aam
clc
mov
popa
mov
xlat
aad
movl
clc
inc
jb
mov
rcl
lock
push
mov
pushf
shll
enter
mov
pop
sbb
leavew
andl
push
dec
in
icebp
inc
lock
aam
adc
mov
repz
adc
cwtl
enter
mov
fcom
cltd
aam
mov
jg
or
xor
add
mov
mov
sub
sar
pop
in
fwait
scas
aad
loop
sub
shlb
in
mov
pop
and
and
pop
bound
scas
adc
aam
lock
cmp
filds
push
fldcw
jo
outsl
xor
bound
pop
cmpsb
fistl
in
fyl2xp1
inc
jno
mov
leave
jmp
loope
jae
mov
in
jmp
jmp
sbb
inc
jmp
sbb
outsb
fldenv
cmp
icebp
ds
push
fsubrs
inc
mov
add
sbb
mov
stos
sahf
sub
into
loope
mov
mov
bound
jae
cmpsb
xchg
jns
aad
cli
fwait
mov
xor
enter
mov
pushf
rcll
lock
push
dec
lds
dec
out
cmp
rol
pop
or
stc
mov
loop
adc
dec
aam
cs
xorb
je
fld
repz
adc
inc
jns
mov
in
icebp
jne,pt
or
lcall
stos
mov
mov
subb
loope
mov
or
enter
lret
mov
in
dec
fldenv
xchg
pop
sbb
jno
mov
fldpi
shll
out
daa
jmp
out
cmp
icebp
testl
push
mov
dec
add
stc
inc
out
mov
flds
jp
mov
xchg
xchg
imul
dec
in
shrl
jo
xor
lock
mov
fcom
adc
push
sahf
jae
adc
sbb
pop
mov
ja
lahf
push
xchg
sarl
fsubrs
scas
push
inc
mov
fsubrl
in
nop
call
pop
mov
in
ror
xchg
sti
mov
mov
out
jge
addr16
fcom
nop
rcrb
cmp
add
jno
mov
aad
jl
push
jmpw
xlat
mov
pop
adc
jno
mov
aad
and
adc
loope
jb
mov
aad
fsubr
xchg
inc
sar
out
xor
or
roll
xchg
inc
inc
aad
je
lods
cltd
lret
mov
mov
dec
mov
xchg
sub
lock
shlb
mov
xlat
mov
cmp
or
mov
stos
xchg
push
stos
cmp
pusha
dec
xchg
fadds
sub
rclb
pop
inc
xlat
mov
cmp
sub
or
aam
enter
mov
in
aam
add
in
mov
fwait
scas
test
aad
sub
rorb
rorb
cmp
enter
mov
rcl
adc
cmp
mov
mov
sub
fdivs
or
sarl
pop
mov
sbb
into
fsts
xchg
xchg
ret
pop
inc
xlat
stos
cmp
nop
sub
lock
mov
mov
popa
in
into
loope
cmpl
ror
jno
mov
aad
aaa
fisubrl
adc
int3
add
aas
or
adc
pusha
xchg
dec
mov
xlat
aad
shl
pop
adc
and
cmpsb
add
loope
test
xor
leave
dec
mov
dec
cmp
jmp
leave
imul
xor
jno
mov
leave
jmp
rcr
ja
sub
jmp
in
xchg
dec
mov
in
ret
out
adc
jno
mov
sbb
test
ja
or
inc
fldcw
cmpsb
sub
loope
add
inc
shr
ret
add
or
test
mov
fnsave
adc
ja
aam
clc
dec
push
mov
push
cmp
icebp
nop
clc
inc
xor
push
into
shll
mov
pusha
cmp
jno
mov
xor
outsb
leave
cmp
xchg
mov
pop
adc
in
rorb
cmp
outsb
leave
sbb
fnstenv
pop
mov
sbb
jb
mov
aad
pop
in
adc
jno
mov
aad
jns
outsb
adc
rcrl
mov
roll
mov
jb
int3
fldln2
jns
mov
adc
jno
mov
cmp
dec
rcl
das
mov
and
mov
mov
leave
in
mov
and
jmp
les
push
dec
fdivp
insb
sub
dec
lea
enter
inc
push
sub
sarb
pusha
fwait
mov
cmc
mov
movsb
aam
rorb
push
inc
jg
sbb
rcl
rclb
or
jmp
sbb
in
lock
xchg
cmp
or
xor
enter
in
nop
call
push
or
data16
xchg
jl
aad
adc
iret
and
fmuls
and
sub
addl
mov
aam
pop
cmp
jmp
leave
fldenv
mov
pop
lcall
xchg
in
jne
pop
pop
mov
pop
loope
push
scas
repz
movsb
aam
shlb
and
shll
cwtl
fsubs
push
mov
cwtl
rcl
rolb
mov
jg
insl
inc
sbb
and
mov
test
dec
xchg
rcll
shrb
xchg
arpl
aam
clc
hlt
jp
mov
pusha
loope
fs
jno
mov
aad
insb
fldcw
cmpsb
xlat
sub
jmp
fnstcw
or
ja
bt
cmpsb
xchg
push
in
icebp
ds
add
aam
mov
ficoms
inc
jg
mov
enter
mov
aam
xor
mov
scas
push
ja
aam
clc
subb
ja
stos
inc
mov
cwtl
int3
shrb
push
mov
aam
fucomip
mov
fwait
scas
jns
mov
sub
clc
jl
jmp
pop
mov
cwtl
fdivrs
add
fcom
sbb
push
adc
lds
cmpsb
mov
hlt
aam
fcoms
mov
inc
clc
aam
shl
inc
mov
pop
sub
fs
mov
in
inc
jmp
add
into
leave
xchg
mov
mov
rcll
jmp
sub
dec
jmp
sub
into
stos
mov
pop
mov
in
dec
rcll
out
and
into
shll
mov
cmp
dec
sarl
mov
sub
jb
mov
aad
xchg
fdivs
into
fxch
insl
jo
dec
xchg
lock
pop
jo
sub
lock
push
mov
loopne
adc
jmp
mov
ja
aam
clc
fs
push
mov
cwtl
shll
shlb
mov
sub
je
fnstenv
inc
cmp
sbb
sbb
into
leave
ja
jecxz
and
icebp
and
js
and
in
pop
in
xlat
lahf
jne
mov
bound
jg
fwait
aas
pushf
shll
shrb
fwait
scas
popf
ret
shr
shrb
cwtl
fmuls
mov
fcom
xor
pushf
pop
dec
mov
call
pop
in
mov
mov
sub
cmp
in
cmp
leave
pop
test
cmpsb
mov
shl
lret
mov
mov
inc
aad
cmp
rcrl
shlb
mov
mov
sub
shr
in
mov
jne
cmpsl
outsb
dec
in
icebp
stc
arpl
jge
xor
sbb
hlt
mov
pop
aam
pop
pusha
inc
in
outsb
loope
mov
test
shll
daa
mov
fldt
les
nop
lock
inc
pop
dec
xchg
rolb
js
cs
mov
mov
movsb
aam
shl
std
mov
inc
or
mov
or
aam
cmp
in
mov
aad
icebp
dec
fcom
sbb
hlt
jno
lret
mov
mov
frstor
fs
ja
mov
imul
or
fstpl
outsl
dec
push
mov
and
fisubrl
mov
subb
xor
pop
shlw
mov
mov
cmc
and
cmpsb
sarb
fistps
inc
into
loope
jno
mov
cmp
jno
mov
mov
and
sahf
fadd
cs
or
xlat
xchg
jbe
pop
sub
lock
mov
mov
cwtl
enter
mov
adc
cmp
xor
push
mov
into
mov
jnp
sahf
inc
outsl
in
sbb
push
push
mov
mov
nop
call
pop
add
fs
sbb
outsb
roll
mov
sub
jmp
fsts
bt
sahf
cmp
xor
xchg
mov
push
inc
jmp
dec
xchg
lock
dec
pop
sub
enter
mov
lods
aam
fsub
std
mov
test
xor
mov
mov
mov
pop
gs
mov
stos
aaa
popf
cmp
test
scas
dec
push
in
int3
stc
xorl
cmp
jmp
leave
mov
mov
pop
jmp
add
int3
rol
shll
icebp
jmp
rcll
and
inc
jb
mov
and
xchg
mov
sub
scas
imul
adc
sahf
push
mov
mov
lcall
xchg
jg
int3
aam
rcr
push
jb
cmp
mov
or
into
stc
fstps
pop
imul
mov
rcl
ret
mov
aad
outsb
loope
jno
mov
xor
leavew
mov
sahf
int
out
mov
pop
mov
adc
mov
sub
je
subb
dec
xchg
fcomps
fisttpll
push
pop
and
rorb
daa
inc
adc
xor
cmp
mov
add
adc
jo
loope
outsl
mov
inc
inc
cmp
mov
push
sbb
jbe
xchg
cltd
lret
mov
mov
jg
test
enter
mov
call
bound
mov
add
cmp
push
xchg
xor
lods
aam
shl
aad
xlat
fwait
pop
js
aam
clc
daa
pop
sub
inc
in
into
shrl
mov
xor
outsb
loope
insl
jo
dec
xchg
lock
divl
and
clc
cmp
sbb
in
jb
jne
mov
aas
mov
push
mov
fcom
lcall
mov
lock
mov
pop
mov
cwtl
loopne
sub
mov
in
call
aas
rcl
shrb
ja
jns
add
and
data16
stc
mov
and
cwtl
loopne
pop
dec
mov
mov
sub
clc
cwtl
mov
mov
xchg
shll
lock
mov
dec
aam
sti
cmc
in
or
xchg
mov
cmp
icebp
ds
aas
aam
adc
jbe
sub
mov
push
mov
dec
in
leave
stc
inc
jno
mov
aad
insb
fldcw
cmpsb
scas
mov
sahf
lret
cmp
fnstcw
lds
adc
xlat
jp
mov
icebp
jmp
jmp
and
sbb
mov
sub
jmp
out
mov
test
lock
inc
jp
cwtl
shlb
and
leave
test
jmp
icebp
gs
ja
add
clc
add
xlat
lods
inc
inc
adc
lcall
scas
incl
fldcw
mov
pop
sub
into
jmp
and
jbe
imul
add
shlw
jmp
add
inc
rorl
mov
pop
std
jmp
jmp
sub
int3
jmp
sub
sbb
out
mov
pop
add
data16
mov
je
bound
leave
int3
bound
jne
mov
call
pop
and
ret
mov
sub
sbb
add
inc
leave
daa
mov
mov
imul
jmp
mov
pop
inc
or
dec
shll
insb
and
inc
and
cmpsb
cmc
mov
pop
cmpsb
out
aas
mov
aad
mov
xlat
cmpsb
out
sbb
cltd
shlb
cmp
mov
sbb
cltd
enter
inc
sbb
pop
jb
pop
test
aaa
addb
sub
outsb
pusha
fmuls
loopne
fcomi
ja
sub
clc
xchg
xchg
push
mov
pushf
rcll
lock
mov
cmp
int
mov
ja
aam
clc
js
push
mov
int3
pop
sbb
scas
leave
dec
rcl
shrb
dec
mov
fcom
cmp
clc
pop
pop
mov
rcl
shrb
jnp
fwait
scas
xchg
ret
int3
shrb
fldlg2
mov
outsl
scas
cmpsl
aas
mov
nop
rclb
daa
pop
and
outsb
shrl
jmp
aad
sbb
idivl
clc
lods
sbb
adc
repz
aam
movl
cmpsb
push
inc
rcl
rorb
sahf
cmpsb
es
sbb
fildll
xchg
jbe
icebp
jns
mov
inc
in
inc
loope
test
test
in
dec
loope
jno
mov
jp
and
mov
cs
dec
xlat
mov
xor
xor
mov
rcl
lock
pop
cmc
mov
shrb
lcall
cmpsb
push
outsl
or
cmp
insb
pop
adc
ja
rcll
clc
mov
mov
push
sbb
cwtl
rorb
mov
mov
bound
mov
sbb
adc
mov
popa
mov
mov
mov
mov
clc
aam
rclb
dec
mov
loopne
adc
jmp
mov
cwtl
clc
mov
popa
mov
pop
jmp
into
out
pushf
add
dec
lcall
scas
jp
mov
sub
mov
or
jmp
xor
rcrb
mov
in
stos
dec
pop
sbb
dec
loope
jno
mov
leave
jmp
flds
jnp
mov
std
jmp
jmp
add
mov
pop
or
mov
and
adc
mov
or
sbb
into
loope
mov
sbb
jb
and
mov
mov
jne
xor
aam
enter
mov
mov
sub
sar
sub
leave
mov
sub
lock
pop
cmpsb
jg
lock
rcrb
test
aam
fmuls
pop
stc
mov
mov
sub
enter
mov
call
mov
lds
jmp
mov
std
pop
fucomp
into
in
rorb
cmp
jmp
leave
cmp
inc
aam
aam
int
ja
test
shlb
xchg
and
push
add
xor
inc
mov
mov
mov
imul
aas
in
aam
rolb
mov
mov
adc
push
jb
mov
adc
nop
call
shlb
in
inc
int3
lahf
test
pop
mov
in
fs
jno
mov
aad
jae
data16
fldcw
enter
mov
mov
mov
mov
aam
sbb
mov
jmp
in
aam
lock
mov
cwtl
shll
fdivs
icebp
mov
mov
sub
inc
aad
pop
push
mov
jb
mov
pop
in
dec
into
jmp
in
xchg
push
movsb
aad
sbb
mov
sbb
idivb
pop
and
dec
fdivr
mov
pop
pop
sbb
scas
arpl
aam
lock
jb
cmp
stos
push
pop
add
dec
roll
loopne
pop
push
mov
int3
aam
clc
je
add
push
int3
aam
fsubrs
cmpsb
sub
xor
lret
push
jp
cmp
in
int3
or
adc
icebp
ds
inc
hlt
sub
jb
cmp
addl
loope
jns
mov
cmp
jbe
fldcw
pushf
adc
outsb
jmp
add
dec
leave
mov
lret
mov
fucomp
stc
lahf
out
push
fcoms
fdivs
mov
mov
pop
sub
loopne
sub
rcl
pop
hlt
dec
xchg
fsubs
outsl
push
push
loopne
pop
pop
and
inc
jmp
or
into
jmp
sbb
dec
loope
test
stc
pop
fucomp
into
ljmp
jle
aad
xchg
in
adc
mov
lret
mov
leave
jmp
leave
add
mov
fldenv
lahf
dec
pop
test
or
sbb
fmuls
cld
mov
out
enter
scas
mov
cltd
sub
lock
loope
push
cmpsb
jae
call
bound
mov
xchg
rcll
enter
mov
mov
sub
shlb
mov
outsl
xchg
lahf
dec
fcom
cmp
hlt
push
mov
pushf
rcl
shrb
popa
mov
inc
lcall
sbb
icebp
mov
pop
test
icebp
cmpsb
xchg
add
adc
movl
sahf
xchg
aas
aam
and
cwtl
push
mov
or
sbb
les
mov
movsb
aam
fadds
sahf
xlat
aas
aam
nop
shlb
cmpsb
dec
sub
mov
mov
std
jmp
jmp
in
xchg
mov
aad
push
in
adc
lahf
mov
push
xor
jg
mov
jb
int3
leave
enter
dec
xchg
enter
inc
sub
rol
in
mov
pop
cmpsb
addr16
rcl
cmp
cmp
mov
mov
sub
mov
int3
aam
lock
sbbb
sbb
dec
loope
cltd
sti
mov
push
aas
rcl
shlb
mov
mov
mov
push
loopne
adc
jmp
mov
ja
aam
clc
cwtl
jb
mov
hlt
aam
lock
jb
mov
inc
in
outsb
leave
dec
mov
aas
add
dec
rcll
sbb
jmp
rcrl
mov
or
test
popa
pusha
jmp
jb
movsb
mov
adc
fnstenv
mov
inc
jne
xor
aam
rorb
pop
cmp
mov
sub
rcrb
jmp
jns
aam
clc
jg
jb
cmp
xchg
test
das
xchg
loope
xlat
xchg
repz
hlt
aam
rcl
fnstsw
mov
xchg
test
inc
pop
xor
mov
sbb
add
inc
leave
cmp
movsl
xor
in
jbe
jmp
cmpsb
or
adc
clc
or
sbb
aam
enter
mov
add
sbb
rolb
frstor
push
data16
jno
mov
aad
push
or
into
jmp
add
inc
roll
mov
in
shr
outsb
roll
stos
mov
fucomp
dec
shll
xchg
leave
leave
or
sub
out
mov
pop
dec
xchg
loopne
cmovs
xchg
push
mov
movsb
xchg
scas
jbe
xchg
or
aam
lock
cmp
clc
xchg
xchg
loope
insl
xchg
imul
nop
call
push
sbb
dec
shll
mov
mov
bound
dec
outsl
cmpsb
jbe
sub
sti
in
cmp
insb
ret
mov
pop
adc
leave
inc
mov
mov
in
into
shll
daa
mov
add
hlt
mov
adc
mov
rorb
enter
inc
and
rclb
in
mov
ja
jg
mov
cmp
filds
push
outsb
roll
mov
int
jbe
push
xchg
scas
mov
push
cmp
cmpsl
ds
in
sar
jb
mov
aad
fs
push
adc
mov
mov
in
outsb
loope
mov
mov
xor
test
gs
sub
dec
rorl
lods
dec
andps
pop
push
in
sbb
dec
mov
mov
sbb
cwtl
rclb
ja
xor
aam
fcomps
cmpsb
mov
rcrl
fdivs
scas
ja
and
mov
inc
outsl
cmpsb
arpl
aam
fdivs
scas
pop
ja
aam
clc
sub
mov
lods
aam
enter
mov
sub
mov
dec
xchg
cmp
xchg
cmp
je
stc
add
in
pop
add
jmp
test
insl
bound
pop
xlat
cmpsb
arpl
aam
fadds
and
dec
adc
nop
pop
dec
mov
test
aam
mov
out
inc
mov
enter
cmpsb
mov
jb
and
mov
sub
stos
dec
aad
lret
inc
sbb
cwtl
enter
mov
xchg
rcl
sarb
mov
push
sahf
mov
aam
enter
mov
lds
and
ds
push
mov
call
mov
lock
lock
jb
cmp
xchg
adc
add
fs
std
stos
xchg
mov
pop
sub
lret
pop
sub
shlb
jnp
fwait
scas
jno
mov
sub
mov
loopne
nop
lock
jns
or
sahf
nop
and
and
fisttpll
cmp
mov
les
xor
pop
sub
ja
aam
clc
and
mov
clc
aam
clc
xchg
bound
outsl
loopne
sbb
insb
xchg
push
mov
sbb
lcall
mov
cmp
je
add
mov
push
je
jmp
inc
adc
jg
pop
mov
int
into
pop
jp
mov
icebp
jmp
or
lock
push
mov
sbb
cwtl
shr
icebp
mov
sub
loop
fptan
and
xor
lock
cmpsb
sbb
aam
lock
push
mov
mov
xchg
in
aad
testl
push
test
inc
sbb
lcall
xchg
in
sub
pop
jbe
lahf
jns
mov
jp
int
mov
aas
adc
and
negl
mov
inc
cmp
sub
and
and
fisttpll
lock
mov
aam
rcrb
cmp
aas
movsb
aam
shlb
mov
or
test
stos
mov
inc
pop
sbb
sbb
in
mov
pop
sub
icebp
ds
in
aam
add
in
mov
cmp
jno
pop
and
dec
loope
mov
mov
stc
mov
aam
cmp
aad
in
mov
pop
in
xchg
mov
inc
adc
mov
cmpsb
push
push
jg
xor
aam
rcrb
adc
pop
pop
and
addr16
nop
call
push
and
outsb
leave
fisttps
fnstsw
jp
int
mov
outsl
cwtl
rcrl
lock
cmp
stos
ds
add
jbe
mov
pushf
or
in
jne
jnp
subb
pusha
and
jb
mov
or
test
leave
sub
jmp
fldenv
int3
xchg
pop
mov
in
into
jecxz
mov
test
cmp
mov
mov
shl
ret
mov
in
into
jmp
and
inc
roll
jae
mov
and
inc
fnstenv
mull
pop
mov
mov
pop
cmpsb
pop
ja
aam
clc
mov
sahf
xchg
outsl
add
and
mov
mov
push
cmp
icebp
add
sbb
popf
cltd
mov
sub
sbb
subl
pop
stc
inc
dec
call
jns
mov
mov
sahf
outsl
push
in
aam
sarb
jb
cmp
xchg
cmpsb
mulb
stos
xor
je
push
mov
int3
flds
xchg
flds
bt
sahf
fwait
dec
in
int3
stc
cmp
xlat
das
inc
in
fs
test
cmp
stc
andl
inc
leave
int
scas
mov
aad
stos
fcoml
mov
mov
adc
stc
ret
mov
mov
mov
mov
mov
mov
test
nop
mov
and
push
and
pop
jmp
jg
imul
nop
enter
mov
in
outsb
flds
or
aad
inc
loope
adc
fstpl
mov
pop
scas
or
aam
fsub
pop
cmc
mov
mov
sub
clc
test
sbb
aaa
fst
into
iret
stos
test
pop
mov
in
dec
leave
jg
sbb
inc
in
sbb
out
mov
pop
mov
in
flds
pop
mov
icebp
jmp
rol
test
xchg
in
fs
or
sbb
out
mov
xchg
dec
aam
insb
inc
cwtl
das
adc
jmp
scas
mov
clc
shrb
mov
pop
out
pushf
add
lcall
stos
mov
dec
pop
or
outsb
jmp
and
cld
movsb
bound
cmpsb
popf
inc
mov
pop
sbb
in
cmp
bound
ja
aam
clc
mov
or
inc
pop
jmp
pushf
add
dec
lcall
mov
push
sbb
cmp
in
mov
pop
in
xchg
mov
bound
jbe
adc
scas
test
leave
imul
or
into
leave
loope
pop
mov
mov
push
sahf
adc
rorb
xchg
test
aam
clc
mov
mov
sub
sbb
clc
sbb
add
rorb
mov
shlb
mov
or
andl
pusha
cmc
jmp
loope
jno
mov
aad
adc
mov
jle
mov
sub
addps
cmpsb
xor
fsts
lahf
loopne
jb
mov
pop
icebp
je
jmp
mov
mov
mov
shr
outsb
leave
xlat
add
sub
sbb
icebp
mov
pop
or
iret
pop
sub
outsb
roll
stos
mov
dec
in
into
roll
fsubl
cmp
frstor
in
aas
push
scas
or
aam
clc
test
mov
sbb
and
xor
sbb
aam
sarb
xor
xor
sarb
cmpsb
sub
int3
jae
push
fstl
push
loopne
xor
sti
mov
pop
test
xchg
push
dec
add
aad
fnsave
jb
mov
sub
iret
cld
mov
mov
sbb
mov
jmp
int3
loope
jno
mov
std
jmp
fldenv
mov
mov
fucomp
mov
cmc
dec
clc
das
sbb
xchg
push
mov
add
sbb
jb
mov
mov
aam
xchg
in
mov
stos
test
inc
pop
push
leave
mov
shll
inc
pop
xchg
pop
jno
aam
lock
mov
cmpsb
aad
sti
and
scas
add
mov
sub
rorb
popa
mov
push
shll
das
imul
xor
mov
mov
cmp
inc
fstps
jmp
and
data16
xor
or
and
scas
cmpsl
mov
stos
test
and
xchg
stos
sbb
mov
xchg
addr16
nop
call
pop
sub
jbe
sub
xchg
cmpsl
aad
std
add
inc
ja
jge
aam
adc
jbe
popa
mov
lods
aam
rcrb
mov
loopne
adc
xchg
push
mov
in
aam
in
mov
fstl
adc
ja
sbb
dec
scas
ja
pop
scas
xorl
sbb
or
mov
mov
sub
aaa
ljmp
pop
mov
jb
insl
mov
outsl
adc
sbb
mov
scas
xchg
ja
aam
clc
cmp
in
mov
push
scas
mov
shll
sbb
fxch
out
mov
pop
sbb
sbb
in
mov
pop
ret
adc
shrb
rcrb
stos
xchg
jmp
cmp
mov
ficomps
push
adc
and
loop
popa
mov
mov
sub
xorb
aas
adc
mov
mov
enter
mov
iret
adc
cwtl
mov
in
stc
and
cmpsb
xor
ja
outsb
cmp
jne
rcll
mov
pop
and
adc
lahf
test
shlb
frstor
fisttpll
cmpsb
inc
push
xchg
fistpll
enter
jnp
in
mov
mov
xchg
cli
pop
dec
xchg
lock
imull
and
lock
xchg
adc
ja
aam
clc
das
aad
mov
push
scas
pop
loop
sub
fsub
popa
cmc
mov
movsb
aam
rolb
scas
insl
aas
add
cmp
enter
fwait
scas
cmp
mov
sub
fsubrs
sahf
addl
adc
aam
xor
cmp
je
icebp
xor
inc
popa
xor
int3
loope
cmp
sub
lock
pop
mov
in
inc
jmp
add
outsb
mov
jb
int3
fldpi
test
fsubl
push
and
mov
mov
aad
sub
aam
lock
xor
inc
int3
aam
rolb
mov
ja
cmpsb
cmp
xor
rorl
sbb
mov
mov
adc
outsb
leave
dec
jns
mov
std
jmp
mov
mov
fucomp
inc
out
rorb
cmp
jmp
leave
sub
xchg
inc
in
jmp
sarl
push
sub
in
outsb
fldenv
scas
and
adc
cltd
jecxz
test
dec
cmpsl
mov
pop
sahf
ja
loopne
sbb
in
je
mov
mov
xchg
and
aas
int3
aam
rolb
popa
mov
in
adc
ds
dec
mov
pop
shll
mov
inc
sub
adc
fsts
sahf
aad
adc
data16
jno
mov
mov
enter
inc
pusha
aam
int
bound
aad
jmp
mov
nop
call
push
or
leavew
test
scas
loopne
pop
sub
inc
movsb
aam
shl
in
mov
jne
adc
aam
enter
mov
sbb
in
lock
push
mov
or
adc
push
mov
mov
or
xor
pop
push
mov
subb
sub
flds
and
pusha
mov
mov
in
nop
call
fisubl
scas
sarl
jp
int
mov
dec
add
cmp
and
sub
rcl
lock
mov
mov
xchg
shll
sarb
sarl
filds
push
inc
flds
mov
adc
mov
fxch
xchg
frstor
ja
outsl
pop
aam
fdivs
scas
xchg
aas
clc
aam
rclb
lret
aam
pusha
loop
mov
jge
testl
jp
mov
inc
cmp
insl
pusha
or
xchg
loopne
in
push
dec
and
rol
out
pop
js
xor
clc
xor
mov
adc
lcall
scas
mov
call
push
or
insb
leave
imul
int
mov
shl
pop
sub
inc
test
aam
vpaddsb
mov
aam
fdivrs
mov
sub
sbb
mov
inc
mov
aam
push
in
inc
ja
or
aam
loopne
jb
mov
rcl
rcr
in
mov
jg
ja
mov
pushf
jb
cmp
xchg
ljmp
xchg
adc
adc
aad
inc
sub
int3
fldenv
xchg
insb
movsl
aad
ss
adc
mov
add
int3
stc
insl
jns
mov
cmp
mov
mov
cmp
insl
pusha
adc
loopne
fidivs
fldenv
cwtl
loopne
pop
or
mov
mov
aam
loopne
mov
jg
xchg
ja
aam
clc
inc
bound
dec
dec
in
sar
imul
sbb
dec
jmp
sub
xlat
insl
and
int3
loope
jno
mov
xor
jns
mov
add
jno
mov
addb
popa
xor
test
dec
pusha
adc
test
jns
and
sbb
idivb
pop
mov
in
data16
mov
bound
test
dec
outsl
mov
pop
adc
pop
aam
ja
cmc
scas
xchg
das
inc
clc
aam
rcrb
in
mov
jg
addr16
xchg
rcll
ret
xor
cmpsb
flds
in
into
shll
mov
or
inc
fldenv
cmpsb
movsb
bound
fcmovnu
cmpsb
mov
into
jmp
dec
xchg
lock
loope
inc
inc
and
in
mov
xlat
mov
loop
sub
mov
pop
xor
jb
mov
aad
sub
mov
jbe
flds
xor
fldcw
xchg
mov
aad
pop
or
mov
mov
fucomp
shrw
pop
pop
cmp
outsb
jmp
and
jbe
or
cmc
sub
jmp
fstps
mov
pop
mov
adc
leave
les
add
rclb
push
adc
je
flds
push
fs
test
mov
jmp
loope
test
jns
or
outsb
leave
test
xchg
stc
sub
idivb
pop
and
int3
fisttpl
mov
stc
jle
js
inc
xor
mov
scas
test
fadds
mov
mov
add
xor
outsb
mov
mov
pushf
shll
enter
mov
test
adc
faddl
pop
in
cmp
add
fbld
mov
fstpl
mov
inc
cmp
call
scas
insl
inc
cmp
xchg
into
leave
icebp
jno
mov
pop
cmc
loop
scas
dec
mov
sub
inc
aad
imul
and
jp
loope
push
scas
jae
enter
lcall
aas
pushf
rcl
rcl
in
mov
cmp
mov
push
mov
jmp
leave
dec
test
rcrl
inc
loope
jno
mov
dec
adc
fstps
xchg
scas
sbb
adc
sti
stos
mov
or
insb
loope
jns
mov
inc
in
sbb
icebp
mov
pop
and
icebp
notb
inc
lock
xor
or
cmp
mov
mov
and
mov
les
pop
mov
rcl
sub
mov
adc
and
push
mov
jg
mov
rorb
pop
mov
push
sbb
cwtl
shrb
push
mov
aam
adc
lock
mov
pop
xor
outsb
jmp
mov
jmp
rcll
xchg
rorb
ja
sub
clc
fs
shrb
lcall
scas
xchg
subl
ss
ret
inc
adc
subl
pop
add
jbe
jno
cmp
shl
mov
js
xchg
jmp
cmp
jmp
scas
adc
sarl
mov
adc
leave
imul
inc
roll
daa
mov
fucomp
insb
jmp
mov
sbb
or
mov
stos
cmpsb
sbb
add
data16
test
shrl
sbb
into
fldenv
scas
jnp
adc
jns
mov
and
or
cmp
in
inc
les
mov
sub
jmp
mov
pop
sub
into
jmp
sub
int3
shrl
test
mov
loope
mov
mov
fucomp
rclw
mov
icebp
in
int3
loop
test
pop
mov
jmp
sarl
scas
xor
jmp
loope
jns
mov
icebp
jmp
rol
jp
and
mov
inc
fistps
pop
data16
sub
loope
xor
sub
jmp
fldenv
cwtl
enter
mov
sbb
xor
in
pop
gs
mov
sub
shlb
cmpsl
ja
aam
clc
scas
bound
mov
pushf
rcrl
shlb
cmp
aam
rcr
in
mov
jge
movsl
jae
aam
cld
cwtl
pop
sbb
sbb
cwtl
enter
mov
popa
int
int3
loope
or
sbb
jbe
inc
outsl
inc
rorb
or
jne
mov
lcall
sahf
nop
frstor
jae
loope
mov
test
jmp
sub
inc
loope
mov
mov
in
icebp
ds
cmp
xor
stc
imul
inc
xor
jbe
jnp
ret
mov
sub
inc
shll
sahf
add
jp
int
mov
aas
mov
fsubrp
mov
pop
mov
lods
xor
fstps
fldl
cltd
dec
push
mov
inc
cwtl
rcll
enter
push
push
loopne
addps
cmpsb
adc
in
inc
roll
mov
icebp
jmp
flds
rorb
inc
std
jmp
roll
pop
jb
push
jg
xchg
jo
aam
repz
inc
mov
or
and
data16
inc
mov
cmp
aam
adc
inc
xor
jae
shrl
out
sbb
outsb
fnstenv
xchg
shrb
in
int
ljmp
rcll
lock
add
add
sti
mov
jmp
test
cli
scas
bound
outsl
in
aam
lock
xchg
dec
mov
int3
aam
fdivrs
cmp
xchg
shll
rclb
jb
cmp
jno
push
sub
fs
xchg
mov
arpl
jmp
jmp
in
xchg
imull
outsb
adc
fstps
xchg
aaa
add
jbe
xchg
pushf
lret
mov
sahf
adc
jmp
or
mov
ja
dec
das
xchg
sar
or
pop
leave
jmp
jmp
sub
inc
loope
mov
imul
mov
in
dec
loope
jno
mov
add
xchg
push
fsub
xchg
in
outsl
xchg
pop
jno
aam
lock
push
lcall
pop
jb
push
test
pop
push
adc
ret
out
mov
pop
sub
mov
push
mov
dec
scas
pusha
mov
loopne
pop
cmc
mov
mov
and
pop
push
mov
lods
bound
push
mov
pop
or
outsl
or
cmp
inc
pop
fnstsw
xchg
shll
clc
ficomps
mov
mov
pop
std
mov
sub
push
insb
flds
mov
scas
xchg
icebp
adcl
xchg
leave
stc
mov
mov
or
push
cmp
outsb
dec
dec
dec
xchg
call
and
nop
loopne
loopne
jecxz
and
rep
sbb
sbb
in
mov
pop
movsb
xchg
push
xor
orl
pop
sub
jmp
mov
rclb
and
mov
cmp
in
dec
leave
xchg
jno
mov
sbb
into
fstps
xchg
push
cmp
je
shll
mov
repnz
push
scas
inc
pop
sub
cmp
push
inc
shll
mov
and
jbe
or
popf
pop
cmp
mov
test
jmp
jmp
cmpsl
je
rcll
loop
sti
aas
test
cltd
adc
rclb
loopne
popa
xchg
rcl
movsl
mov
aaa
jp
into
enter
dec
inc
cwtl
fyl2xp1
in
pusha
les
xchg
xchg
mov
or
insb
lea
xchg
xchg
lods
aas
mulb
fmuls
xchg
leave
stc
mov
xchg
mov
mov
rcll
into
call
stc
xchg
stc
stc
xlat
ja
dec
cltd
leave
js
jge
lods
jnp
sub
xchg
mov
jmp
sbb
and
sahf
dec
shrb
inc
fwait
scas
hlt
lds
cmp
scas
mov
aad
mov
adc
mov
aam
xchg
pop
jmp
add
jmp
xchg
pop
fs
add
inc
xor
andb
xchg
js
jmp
inc
aam
and
jo
jmp
dec
rcl
enter
mov
mov
cmp
push
jb
mov
subb
sub
push
dec
fldln2
jno
mov
aad
adc
iret
and
loopne
cmovg
imul
inc
movsb
aam
enter
mov
loopne
cmp
mov
repz
int3
aam
shlb
pop
ret
pushf
inc
mov
ror
fdivrs
sbb
push
scas
push
pop
imul
nop
call
imul
sbb
cmpsl
push
jb
cmp
jno
mov
jmp
jno
aam
lock
xchg
sub
fcom
adc
push
sbb
enter
mov
pop
adc
je
movsl
jno
mov
dec
in
sbb
idivl
pop
sub
rcrw
xchg
pop
cs
inc
xlat
mov
lcall
cmpsb
test
rcr
push
jp
cmp
mov
lahf
xor
jns
mov
or
stc
sbb
ja
rclb
clc
in
add
mov
bound
sti
or
cltd
dec
outsl
mov
cmp
mov
mov
rcl
clc
int3
popa
xchg
lret
movsl
mov
inc
dec
in
dec
rcrl
mov
pop
sbb
fwait
scas
int3
mov
cmp
xchg
mov
out
adc
jbe
inc
sub
pop
or
mov
mov
adc
je
movsl
jno
mov
sub
jbe
inc
jb
mov
aad
xchg
fnstsw
adc
fnstcw
or
lock
inc
mov
cwtl
sarl
shlb
lret
mov
mov
fstpl
mov
inc
mov
lcall
stos
sahf
sub
pop
and
into
pop
mov
ja
daa
inc
clc
aam
enter
mov
enter
movsb
mov
mov
xchg
sarl
enter
mov
rcl
aam
mov
fisubrl
jg
sarl
mov
nop
rclb
push
sahf
jecxz
dec
adc
cmp
insb
pop
in
pop
scas
ja
dec
in
sar
jb
mov
aad
push
xlat
data16
mov
dec
xor
jmp
roll
lods
dec
xchg
fmuls
fucomi
jmp
lods
jns
cmp
jns
push
and
jbe
nop
mov
add
rolb
inc
test
pushf
shlb
popa
inc
mov
and
jp
jmp
jns
aam
clc
clc
pop
std
mov
rcl
pop
lods
std
imul
xlat
mov
and
mov
adc
dec
mov
lcall
cmpsb
sbb
clc
pop
push
mov
sbb
sbb
dec
mov
mov
test
xor
in
xchg
lret
mov
frstor
fldl
xor
xchg
inc
ja
aam
clc
xor
gs
add
cmp
cmp
out
dec
lods
pop
adc
pop
push
mov
call
mov
or
sbb
mov
scas
or
jp
int
mov
in
pop
or
inc
push
or
and
insb
mov
mov
add
adc
sub
sub
lret
mov
xchg
outsb
fnstcw
pop
mov
in
inc
shrl
mov
int
je
xchg
jno
mov
nop
call
imul
nop
call
push
add
inc
fnstcw
test
lds
in
icebp
dec
pop
dec
add
and
enter
movsl
mov
inc
shr
rcrw
xor
or
mov
sbb
xchg
loopne
xlat
pop
js
daa
cmp
int3
ja
in
cwtl
fcoms
in
fwait
scas
cs
push
sub
shlb
xor
xchg
rcll
shlb
das
inc
test
sbb
fs
mov
sbb
sbb
xor
mov
or
cmp
push
push
mov
rcl
xor
cld
bound
xlat
cmpsb
mov
shll
fmul
imul
call
push
mov
mov
pusha
jnp
adc
rol
insl
pusha
mov
xchg
loopne
fincstp
dec
mov
sub
aas
clc
aam
sarb
inc
mov
sbb
cwtl
rcrb
mov
push
sub
icebp
fdivr
mov
leave
jno
pop
mov
adc
fnstcw
sbb
shlb
mov
mov
lcall
scas
sbb
leave
adc
mov
aad
icebp
dec
sub
lods
aaa
fistps
inc
jg
out
add
aam
ret
in
mov
outsl
cmpsb
sbb
or
sbb
hlt
aad
mov
dec
dec
xchg
call
jo
and
inc
bound
mov
sbb
xor
mov
mov
sbb
cmp
mov
popa
mov
mov
push
hlt
leave
mov
adc
das
mov
jmp
jno
mov
sbb
jns
mov
aad
data16
jno
mov
aad
std
divl
dec
rcll
inc
cmp
jmp
leave
inc
outsl
jo
dec
xchg
lock
dec
bound
and
enter
xlat
xchg
pop
outsl
cwtl
rcll
lock
stc
mov
add
adc
pop
dec
mov
sbb
cwtl
lock
sub
enter
fsubrs
pop
in
fwait
scas
jno
mov
jp
jmp
adc
push
stos
mull
jb
int3
loope
mov
mov
fldpi
outsb
sarl
mov
jns
in
jmp
flds
or
pop
mov
jmp
fstps
int3
inc
push
scas
cmp
shlb
mov
sbb
nop
bound
ja
mov
aam
shlb
jmp
shlb
lcall
mov
and
scas
and
pop
cmpsb
jmp
or
aam
pop
jecxz
mov
push
xchg
out
push
test
nop
fdivrs
test
and
rcrl
loopne
push
mov
lods
aam
enter
mov
test
aam
mov
push
ss
sbb
enter
mov
xor
mov
add
sbb
lret
mov
jmp
fnstenv
or
jp
and
mov
scas
pop
adc
push
scas
addr16
mov
nop
rclb
pusha
imul
xchg
rclb
mov
sahf
test
pop
imul
fistpl
mov
inc
jg
imul
bound
aad
xor
rcl
sarb
mov
or
pusha
jns
pusha
mov
cmp
add
sbb
add
cmp
jo
aam
lock
mov
push
and
icebp
mov
js
or
clc
int3
pop
sub
mov
xlat
xchg
mov
shlb
fwait
shlb
aas
sbb
cltd
shlb
nop
sarb
fistps
arpl
addb
sub
outsb
pusha
mov
fsubr
outsl
std
sub
lock
and
rcl
aad
sub
sbbl
daa
jp
int
mov
inc
rcl
sbb
je
in
pop
mov
pop
hlt
aam
fcoms
mov
outsl
aam
lcall
sbb
pop
clc
sbb
je
mov
sbb
loope
jb
mov
sub
jbe
in
inc
rorb
rolb
jo
and
lock
cmc
mov
mov
sub
pusha
imul
nop
rclb
push
push
pusha
jno
imul
nop
call
pop
test
icebp
movsb
mov
inc
rcl
shlb
mov
mov
jmp
fnstenv
lret
or
inc
loope
stos
jecxz
add
je
adc
cmpsb
sub
fldenv
sahf
jmp
sub
je
mov
mull
or
data16
out
inc
pop
mov
into
jmp
sub
sbb
hlt
mov
pop
or
int3
jmp
and
and
pop
testl
aam
push
push
loopne
xor
scas
add
fnstenv
mov
pop
or
fldenvs
daa
mov
jp
int
mov
dec
or
sbb
push
xchg
inc
ja
aam
clc
js
loope
push
mov
in
lock
push
lcall
testb
mov
test
pop
sub
adc
inc
in
aam
jo
in
mov
jg
xor
aam
rolb
mov
dec
in
fyl2xp1
cmp
scas
pop
pop
add
mov
xchg
cmp
in
je
cltd
jns
mov
jmp
insl
dec
fmull
enter
mov
filds
push
mov
pop
mov
pop
clc
aam
fdivs
icebp
mov
dec
in
sar
orl
pop
jmp
jno
mov
leave
or
xchg
stc
jmp
jmp
add
dec
shrl
jecxz
and
sbb
idivl
pop
or
push
sbb
outsl
dec
mov
nop
enter
das
pop
mov
in
outsb
jmp
add
je
pop
mov
mov
or
dec
flds
and
or
inc
jmp
or
into
loope
or
pop
add
jno
mov
or
je
push
jns
mov
dec
in
into
shl
jno
mov
std
jmp
fldcw
test
mov
in
icebp
test
mov
push
mov
mov
cmp
je
gs
aam
lock
push
mov
fcom
and
hlt
bound
mov
sbb
nop
lock
clc
jno
sub
fucomp
into
in
stos
enter
cmpsb
jmp
stc
inc
and
fbld
sar
or
cmp
je
jmp
pop
adc
mov
sbb
into
shll
mov
fldpi
fs
mov
stos
mov
xchg
sbb
inc
mov
adc
fnstenv
mov
xchg
rcll
scas
dec
sbb
sbb
lock
pop
add
into
jmp
sbb
dec
jmp
mov
jmp
loope
jno
mov
cmc
in
into
in
xchg
enter
cmpsb
in
aad
mov
sbb
fsubrs
pop
sbb
adc
cwtl
clc
pop
bound
aas
or
and
mov
xchg
jmp
adc
test
pop
pusha
inc
in
je
fstpl
pop
daa
jp
nop
fisttps
movsb
sbb
sti
mov
pop
mov
in
dec
fnstcw
test
xchg
enter
dec
outsb
and
rorb
pop
push
loopne
push
dec
fcoms
dec
pop
jmp
inc
imul
fwait
scas
iret
mov
xchg
sub
ror
jp
cmp
mov
pop
sbb
into
loope
mov
cmp
jmp
leave
adc
mov
rorl
mov
fldl
clc
dec
aad
insl
inc
cwtl
sarl
enter
mov
pop
jmp
rcrb
mov
in
lods
xchg
insl
or
aas
mov
xor
test
mov
sbb
cwtl
enter
mov
mov
sub
rolb
mov
xor
test
jne
dec
and
mov
pop
and
idivb
jmp
sbb
push
jg
fwait
scas
pop
lds
sub
dec
mov
in
pop
ret
and
fsubrs
xor
outsb
roll
pop
sub
jmp
fnstenv
sahf
cmp
xchg
or
outsb
leave
and
xor
rorl
dec
call
xchg
inc
mov
or
sbb
push
push
mov
mov
scas
xchg
jmp
adc
nop
shrb
mov
sub
mov
mov
cmc
jmp
jmp
dec
xchg
enter
jo
sub
lock
pop
mov
cmp
jo
sbb
outsl
test
sbb
jp
push
mov
clc
aam
clc
xchg
bound
mov
xchg
rcl
ror
in
mov
aad
out
adc
mov
jnp
rcl
leave
scas
addl
aas
leave
rcrl
add
xchg
outsl
clc
aam
lock
mov
cmp
stos
dec
leave
sub
sahf
pop
sub
in
dec
fldenv
scas
push
pusha
cmp
jns
mov
xor
mov
mov
cmp
sbb
repz
pop
or
inc
fscale
stos
mov
or
outsb
rcll
mov
leave
leave
jno
mov
aad
push
rcl
push
and
xchg
dec
aad
ja
cwtl
rcrl
enter
mov
mov
jb
mov
add
xor
xchg
add
rcl
and
pushf
outsb
cmc
mov
shrb
lcall
stos
sahf
mov
cmp
xchg
in
inc
scas
and
shlb
daa
inc
rcl
enter
mov
rcl
shrb
jg
pop
sahf
or
aam
fmuls
mov
or
adc
inc
push
mov
movsb
aam
shlb
cmp
mov
cmp
fldcw
xchg
inc
or
cmp
ret
mov
sbb
sbb
mov
scas
cmp
mov
les
icebp
and
scas
mov
int3
pop
sahf
dec
jne
mov
call
jb
mov
hlt
aam
fdivs
push
mov
add
nop
enter
lret
cmp
adc
jmp
and
outsb
fsts
xchg
pop
inc
adc
inc
shll
mov
shrl
out
and
dec
rcll
inc
fxch
in
lods
push
inc
in
mov
les
call
inc
and
rclb
mov
jg
mov
clc
jo
add
or
adc
lahf
push
jb
cmp
jb
pop
test
mov
xchg
xlat
sahf
pop
inc
aam
xchg
fldlg2
mov
jge
cmp
rcrl
sarb
xchg
std
mov
jne
lcall
insl
jae
mov
loope
inc
rorl
jb
pop
inc
jle
cmp
scas
pushf
jb
cmp
xchg
shrl
mov
in
je
sbb
mov
aad
add
mov
rclw
ret
mov
push
mov
movsb
push
jb
pop
sbb
into
leave
xchg
test
sub
in
fldcw
and
inc
in
dec
rcl
mov
sub
shr
pop
mov
xor
dec
leave
mov
test
icebp
sahf
adc
leave
pop
jno
mov
dec
in
je
pop
mov
mov
std
jmp
rorl
loopne
pop
or
mov
sub
shlb
cmpsb
inc
outsl
cmp
fs
adc
lahf
push
mov
cmp
jns
push
or
int3
rorl
xchg
test
in
data16
insl
pop
sbb
xchg
fadds
loop
ja
es
push
in
jge
outsl
inc
mov
nop
rclb
xlat
push
sbb
je
mov
xchg
or
inc
rorl
mov
jp
int
mov
inc
fnstenv
jecxz
mov
fnstcw
sahf
inc
cmpsb
push
push
pop
mov
sub
idivl
aam
push
loope
mov
jne
icebp
jo
aam
lock
pop
or
inc
or
and
mov
mov
inc
xor
mov
mov
std
jmp
roll
pop
into
pop
sub
push
clc
aam
fcoms
mov
xor
jb
mov
aad
sub
loope
and
and
jo
dec
xchg
lock
addps
sub
loope
jge
jmp
or
adc
les
mov
xchg
rcll
lock
mov
pushf
rcll
fsubrs
imul
rclb
call
xchg
xor
aad
je
pop
jns
mov
loope
jbe
das
test
in
sub
in
sbb
cli
mov
pop
mov
in
inc
leave
leave
mov
imul
shll
adc
cwtl
pop
xchg
lret
lods
mov
sub
sbb
stc
mov
pop
or
outsb
loope
add
sub
in
dec
fstps
and
xchg
insl
jo
dec
xchg
lock
loop
inc
shlb
aam
mov
stos
push
inc
shrl
xor
cmp
push
mov
mov
nop
rclb
pusha
imul
adc
andb
jge
aas
in
xor
sub
rcr
mov
push
adc
cmp
push
pusha
in
inc
loope
jns
mov
fucomp
int3
leave
in
push
push
pusha
andl
xlat
outsl
push
push
pushf
jb
push
in
xchg
outsb
lods
aad
jo
sub
outsb
shl
jno
mov
aad
jmp
loope
mov
and
popf
mov
cmp
jmp
leave
push
mov
imul
cltd
out
mov
xchg
in
or
xchg
aaa
dec
mov
bound
outsl
cmpsb
xlat
shrb
lods
inc
xlat
xchg
das
inc
xchg
sarl
enter
mov
inc
dec
jne
shll
inc
popa
inc
push
int3
loope
test
dec
pusha
sub
inc
loope
xorl
icebp
ds
pop
lods
sub
cmp
jbe
in
stc
stc
insl
addl
cmp
in
int3
leave
mov
mov
jmp
add
mov
mov
push
mov
cmp
mov
push
or
jbe
pop
mov
stos
pop
lcall
pop
inc
inc
fwait
scas
inc
mov
sub
lock
mov
push
cmp
jmp
leave
sti
jp
mov
inc
in
mov
mov
fldenv
xchg
sub
cmpsb
mov
or
jnp
stos
mov
stos
pop
xchg
jb
test
ljmp
xchg
popa
xlat
xchg
jmp
pushf
rcll
pusha
dec
dec
xchg
loopne
loop
inc
sub
cwtl
shlb
mov
sub
jne
fldcw
fldt
add
stos
sbb
jns
mov
and
jmpw
jmp
test
cld
bound
ret
fbld
lock
shl
mov
mov
loope
sbb
stc
mov
pop
sbb
dec
rorl
mov
mov
add
jbe
or
mov
or
jno
mov
aad
jmp
in
mov
cwtl
lret
insb
jecxz
mov
push
xchg
xor
rcrl
shlb
andl
adc
fwait
call
xlat
scas
and
notb
xchg
shll
in
into
rcrl
mov
sub
dec
dec
aad
jmp
mov
in
addr16
and
jne
inc
in
into
loope
mov
dec
aad
out
ja
aam
clc
pop
xchg
loope
insl
xchg
dec
subl
jne
fsts
inc
roll
mov
dec
in
int3
loope
test
sbb
in
inc
jmp
sbb
je
dec
test
push
xor
jmp
rcrl
loopne
xlat
testl
mov
jg
pop
inc
dec
in
leave
stc
inc
add
inc
rorl
repz
jmp
mov
add
insb
add
outsb
xlat
mov
inc
in
lret
insl
jo
dec
xchg
lock
or
lock
pop
std
mov
sub
push
sbb
testb
sbb
push
jb
mov
loopne
xor
in
mov
pop
inc
cmp
jno
mov
or
dec
loope
and
cmp
and
leave
or
mov
add
jns
mov
pop
add
aad
iret
je
pushf
ror
in
mov
pop
add
mov
push
inc
xlat
mov
and
outsl
push
lcall
add
sarl
in
int3
leave
cmp
xchg
lahf
inc
xor
mov
mov
jb
or
push
push
aam
adc
jbe
icebp
mov
dec
in
icebp
stc
cmp
mov
fldpi
dec
loope
and
cmp
and
daa
mov
pop
adc
pop
mov
testb
sub
in
lret
mov
popf
pusha
dec
in
jbe
push
mov
cmp
in
int3
leave
shll
mov
pop
xchg
push
lods
mov
aam
jb
imul
adc
xlat
and
xor
int
mov
inc
filds
push
fs
jno
mov
jmp
jo
mov
xchg
loopne
push
mov
pop
xor
jmp
dec
adc
mov
std
jmp
fxch
jno
mov
aad
xchg
push
adc
gs
inc
inc
mov
into
sarl
ljmp
dec
aas
sbb
and
scas
jb
mov
sbb
and
sub
mov
mov
nop
call
push
sub
dec
shrl
pop
mov
jp
int
mov
outsl
test
adc
mov
mov
mov
mov
outsl
fcom
adc
xor
mov
mov
xlat
lods
inc
filds
push
fs
mov
mov
mov
and
sahf
adc
push
and
fwait
scas
jns
mov
sub
shr
pop
xchg
lret
lods
mov
pop
int
fs
sbb
mov
mov
add
int3
leave
adc
mov
jmp
in
cmp
icebp
jne,pt
pushf
sub
rol
xchg
dec
mov
rcl
enter
lret
movsl
mov
pusha
loope
jbe
xor
cmp
in
jmp
cmp
clc
mov
mov
pop
inc
movsb
mov
mov
loope
int3
shll
int3
leave
push
mov
pop
shr
dec
jmp
mov
in
dec
fsts
mov
sub
into
fldcw
jmp
sub
fs
sbb
into
in
shlb
mov
in
je
dec
cmp
pop
jmp
add
sbb
in
mov
pop
or
dec
leave
sarl
mov
add
inc
fldenv
mov
mov
add
dec
fsts
mov
cmp
mov
mov
add
int3
leave
jno
adc
loope
ja
mov
jb
int3
shl
cltd
lret
mov
pop
fldl
scas
pop
inc
lods
aam
rolb
arpl
aam
lock
xchg
lret
movsl
mov
and
push
and
scas
sub
jb
inc
jg
inc
jo
aam
lock
mov
fistps
test
mov
pop
sbb
outsb
adc
xlat
scas
fwait
inc
fcom
and
insb
jb
mov
lock
clc
ja
jb
cmp
adcb
sbb
int3
fldenv
xlat
mov
or
inc
jmp
sub
and
pop
jg
fwait
scas
sarb
jl
cwtl
shlb
jecxz
mov
fldlg2
mov
xlat
mov
adc
push
jb
cmp
jb
pop
in
xchg
jge
aad
int
mov
inc
dec
mov
jmp
icebp
cmovs
sub
adc
dec
dec
in
sar
cmp
push
sub
jmp
fldenv
cmpsb
cwtl
push
inc
and
bound
outsl
mov
adc
loopne
aam
int3
daa
sti
xchg
jmp
icebp
ds
lock
fnstsw
mov
cmp
pop
mov
or
jns
mov
and
outsb
jmp
and
mov
mov
xor
outsb
flds
bswap
shll
mov
push
push
ss
scas
inc
shlb
adc
jl
cmp
clc
aam
clc
xchg
bound
dec
pushf
shll
rcl
xchg
inc
mov
lock
enter
mov
in
aam
lock
mov
adc
jmp
sub
sbb
cld
mov
pop
mov
jmp
fnstcw
sbb
cmp
mov
call
jb
mov
mov
push
xchg
pop
cmp
stos
pop
push
sub
int3
loope
mov
sbb
in
dec
rcrl
mov
sbb
mov
icebp
sub
jmp
fchs
clc
mov
pop
sbb
outsb
leave
mov
inc
xor
sbb
ror
insl
pusha
mov
aad
dec
sub
add
scas
adc
add
inc
leave
mov
call
jg
mov
inc
aad
jmp
rcll
je
mov
mov
icebp
jmp
sarl
pop
mov
loope
leavew
mov
pusha
mov
cmpsl
loopne
push
mov
mov
and
mov
lcall
pushf
jb
pop
in
xchg
jo
aad
loopne,pt
adc
fdivl
mov
pop
int3
aam
fsubs
mov
pushf
rcr
pop
mov
mov
sub
lock
pop
add
mov
nop
rclb
das
pop
mov
jmp
shll
repz
pop
jmp
rol
and
jg
inc
aas
and
out
xchg
adc
in
adc
es
mov
movsb
aam
clc
ret
push
xchg
mov
cmpsl
pusha
mov
pop
sub
in
outsb
fxch
mov
clc
dec
aam
sub
pop
pop
pusha
daa
and
cmpsl
push
lcall
pop
mov
xchg
cmp
jno
mov
fucomp
inc
shrl
scas
and
xor
mov
mov
nop
lret
dec
mov
jmp
jmp
sub
jmp
xchg
jmp
clc
pop
xchg
push
mov
hlt
aam
lock
mov
mov
nop
call
push
sbb
inc
loope
mov
loopne
pop
loope
jg
repz
aam
clc
pop
mov
inc
test
xor
loop
fnstsw
cs
inc
xlat
mov
xor
mov
dec
push
add
cmp
mov
stos
cmpsb
mov
dec
mov
jmp
jmp
in
xchg
das
scas
aad
mov
shll
into
mov
aad
in
movsb
aam
shlb
mov
in
aam
rolb
mov
clc
aam
sarb
in
mov
aam
xor
clc
push
mov
test
sbb
test
mov
loopne
lcall
test
lret
lcall
scas
pop
mov
movsb
sub
mov
add
aam
lret
mov
xlat
xchg
xchg
aam
fmul
jb
mov
cmp
mov
xlat
mov
add
inc
fsts
sub
loope
mov
aad
leave
jmp
fnstenv
scas
mov
cmp
insl
pop
fmuls
fcomps
xor
mov
aad
outsl
dec
or
sbb
inc
push
mov
test
xor
mov
mov
sbb
aam
dec
fucomp
mov
jne
cmp
jne
jmp
loopne
int
mov
aas
lods
aam
sarb
xchg
pop
movsl
loopne
push
pop
and
and
xchg
into
xchg
popf
dec
ja
pop
out
push
jbe
mov
adc
call
xchg
and
scas
push
mov
shrl
sbb
insb
mov
mov
lods
aam
lock
xchg
jmp
inc
mov
nop
rclb
lret
push
test
pop
scas
in
push
cmpsb
divl
aam
lock
stc
mov
mov
sub
enter
mov
dec
in
fyl2xp1
cmp
jmp
loope
test
mov
jmp
dec
xchg
loopne
fsubr
inc
pop
sub
enter
mov
mov
mov
jge
pop
mov
xlat
xchg
aaa
dec
lock
shlb
loope
jg
repz
test
sbb
fdivrl
mov
sub
popa
jbe
cmpsl
test
pop
pusha
sub
dec
loope
jb
mov
pop
sub
push
scas
arpl
aam
enter
mov
cmpsb
pop
nop
jmp
mov
jmp
jmp
sub
stc
pop
pop
push
adc
shlb
mov
in
aam
rcr
push
mov
mov
sub
lock
pushf
jb
cmp
xchg
es
stos
inc
push
mov
jmp
lret
cltd
pop
test
loop
pop
sbb
mov
scas
pop
inc
aad
fnstsw
in
aam
rclb
pop
inc
xlat
mov
outsl
aam
xor
nop
push
mov
or
cmp
ss
dec
mov
loopne
xor
in
push
mov
lcall
mov
and
loopne
jne
and
lcall
mov
xor
lret
push
lcall
xor
sub
outsb
fnstcw
ret
mov
inc
in
dec
ror
cltd
mov
cmpsl
xchg
fisttpll
dec
in
stc
stc
mov
mov
jg
cmovno
aam
shlb
jmp
stos
mov
mov
and
and
cmp
pop
adc
fdiv
loope
jo
and
xor
inc
sbb
cmp
dec
push
mov
cwtl
rcrl
enter
mov
xor
into
rorl
cmpsb
adc
in
dec
jmp
sbb
int3
shll
mov
xor
leave
dec
cmp
jmp
leave
pop
mov
js
sbbb
fldl
sbb
scas
inc
mov
sub
enter
mov
mov
sbb
je
mov
xchg
out
aad
insb
out
adc
testl
into
ror
aad
sub
pop
dec
aad
ret
ja
aam
clc
lods
mov
mov
sub
lods
data16
sub
sbb
clc
mov
pop
sub
shl
push
cmp
push
out
jmp
adc
je
fdivs
mov
bound
push
cmpsb
xor
jmp
inc
mov
pusha
jmp
test
rcrl
dec
loope
jno
mov
in
icebp
imull
sub
add
lock
rcrb
sub
outsb
dec
in
icebp
stc
pop
test
mov
loope
mov
add
in
mov
jmp
in
push
in
lock
mov
xor
hlt
clc
sub
mov
mov
sub
ror
in
mov
jne
scas
ja
shll
clc
cs
xor
outsl
lock
lock
arpl
aam
rcrb
sbb
in
pop
mov
in
inc
loope
mov
add
fnstenv
mov
cld
stos
aad
enter
inc
shll
je
sbbb
fldl
mov
cmp
mov
cs
bound
inc
push
cmpsb
imul
sbb
enter
xlat
mov
outsl
cwtl
shll
lock
mov
inc
adc
and
xor
add
movsb
sub
mov
mov
sub
pop
cmp
stos
jle
sbb
and
xchg
mov
jg
mov
in
aam
sarb
jb
mov
mov
sbb
pop
xchg
pop
mov
mov
in
push
and
lcall
mov
outsl
mov
xchg
inc
mov
sbb
adc
jmp
in
mov
cmp
mov
mov
dec
in
roll
xchg
cmp
in
inc
leave
imul
xor
insl
inc
lods
dec
xchg
shrb
cmp
clc
imul
and
cmpsb
cmp
cmpsb
push
outsl
sbb
cmp
sub
mov
scas
jb
ja
mov
aas
add
adc
sub
pop
mov
hlt
aam
enter
mov
rcl
adc
je
cmp
inc
test
adc
pop
bound
mov
adc
sbb
mov
std
mov
push
in
icebp
ds
push
loopne
sbb
push
lcall
cmp
xlat
xlat
ja
xchg
cmp
mov
and
data16
mov
mov
sbb
jno
mov
jmp
in
mov
pop
sbb
jbe
imul
into
jmp
and
dec
fnstenv
cmpsb
aad
sub
sbb
cli
mov
pop
and
dec
ror
iret
mov
aad
jecxz
adc
shll
into
mov
aad
gs
aam
clc
inc
push
mov
add
adc
jb
mov
xchg
rcrl
fdivrs
xchg
xor
inc
test
aam
out
loopne
mov
ja
pop
jno
aam
lock
mov
hlt
aam
enter
mov
inc
jmp
in
mov
jmp
or
inc
out
rorb
pop
xor
jb
mov
aad
adc
push
adc
insb
insl
dec
add
enter
mov
or
pop
cmp
and
frstor
fnsave
roll
inc
lret
das
or
and
push
pop
xor
inc
test
aam
pop
mov
outsl
sahf
sub
rcrl
enter
mov
rcl
xor
jp
cmc
mov
in
aam
fdivrs
in
mov
in
adc
and
mov
loopne
sbb
fs
or
sub
loope
aad
out
in
aam
lock
pop
fnstsw
clc
aam
shrb
jb
cmp
outsb
loope
dec
xchg
fdivs
and
fsubrs
sahf
addr16
add
adc
pusha
xchg
cmp
outsl
lock
lock
mov
mov
sub
lret
mov
mov
frstor
filds
scas
out
dec
rcl
enter
mov
mov
adc
push
or
jo
sbb
lock
pop
dec
mov
mov
sub
rol
pop
xor
outsl
sbb
xor
pop
bound
outsl
cmpsb
push
dec
rcl
adc
cli
xchg
cmp
add
adc
test
mov
pop
adc
jno
mov
add
jno
mov
sbb
mov
jne
and
mov
mov
in
jmp
icebp
xor
sbb
cwtl
shlb
jmp
inc
clc
aam
shlb
mov
scas
pop
dec
inc
push
scas
std
aas
in
lcall
mov
sbb
andnps
cmp
stos
jb
mov
in
dec
rorl
pop
mov
aad
xchg
adc
mov
frstor
xor
outsb
fnstcw
sti
mov
std
jmp
fxch
jno
mov
aad
xchg
out
adc
xchg
test
pop
mov
and
dec
fsts
lret
mov
bound
cmp
xor
fstps
sbb
mov
mov
std
int
mov
ja
rcrl
clc
scas
xchg
gs
test
cmp
mov
mov
sbb
in
lock
stc
mov
int3
aam
shl
stos
ret
sub
scas
push
sub
in
inc
fldenv
cmpsb
movsl
movsl
pusha
jp
pop
mov
jmp
rcll
xchg
call
jbe
lcall
cmpsb
out
sub
jne
fsts
push
inc
leave
imul
and
dec
and
cmpsb
inc
lret
or
scas
imul
cmp
test
xchg
lret
popf
mov
pusha
loope
jae
mov
dec
in
rclw
mov
rcrl
mov
jb
jnp
mov
aas
cwtl
rcl
rcrb
in
mov
fwait
scas
leave
ret
mov
sub
cmp
jb
pop
in
xchg
jbe
aad
nop
loope
adc
fnstcw
outsl
push
push
cmp
dec
dec
xchg
loopne
loopne
push
je
sbb
hlt
xchg
xchg
lret
xchg
mov
inc
sub
roll
icebp
dec
loope
stc
mov
dec
xchg
mov
dec
mov
sbb
in
lock
push
mov
cmp
outsb
push
movsb
fnstsw
dec
xlat
rolb
sahf
stos
aas
nop
sarb
ret
dec
test
orl
stos
cmpsb
fisubl
dec
aam
inc
fdivs
jb
cwtl
enter
mov
fcom
adc
hlt
mov
mov
add
cmp
sarb
fisttps
xchg
mov
mov
adc
rcrl
mov
pop
adc
xchg
out
test
jmp
push
ret
outsl
mov
jne
stc
ljmp
rol
insl
dec
clc
dec
xchg
enter
outsl
xor
lock
push
mov
aam
adc
clc
jb
mov
mov
adc
test
mov
or
and
mov
mov
inc
das
fsts
mov
inc
std
jmp
shl
dec
in
cmp
inc
jb
mov
int3
aam
clc
cmpsb
mov
sbb
cwtl
rcrb
in
insl
sahf
outsl
jno
aam
lock
out
aaa
sbb
mov
mov
or
sbb
out
mov
insb
mov
pop
mov
add
xor
data16
mov
int3
pop
icebp
je
scas
sbb
aam
lock
mov
mov
sub
enter
mov
sbb
pushf
shrb
pusha
icebp
orl
add
fnstcw
outsl
push
push
add
sub
in
rcl
pusha
mov
xchg
loopne
xchg
adc
outsl
pushf
shll
lock
jg
sbb
aam
lock
bound
aad
xchg
dec
mov
popa
inc
mov
sbb
sbb
mov
outsl
pop
enter
sbbb
iret
pop
stc
jmp
scas
stos
outsl
in
aam
lock
lcall
pushf
jb
push
in
xchg
loope
aad
call
fwait
scas
cmpsl
xchg
incl
aam
enter
dec
mov
jmp
loope
mov
mov
shr
jbe
add
movsl
push
in
into
out
ret
enter
cmpsb
cltd
inc
sbb
jb
mov
aad
cli
bnd
inc
rcll
lods
sub
jns
mov
jmp
out
inc
sub
bswap
fldpi
mov
adc
fprem1
mov
mov
shr
dec
leave
cmp
inc
fmull
rolb
cmovo
xor
inc
jb
mov
hlt
aam
rclb
mov
lds
and
dec
shr
jno
mov
xchg
xchg
ja
xchg
mov
cmp
jmp
leave
xor
sahf
mov
fidivs
push
xchg
inc
sub
jmp
fstps
cmp
mov
mov
int3
aam
sarb
add
xchg
adc
in
inc
jmp
sub
and
mov
ret
lods
dec
push
scas
jge
add
sbb
rcrb
fildll
push
mov
sbb
clc
cwtl
pop
or
dec
mov
and
push
xchg
add
dec
cmp
out
jmp
out
je
movsl
mov
add
loope
test
cmp
int
int3
jp
mov
jmp
jb
mov
dec
adc
mov
xchg
cmp
cmpb
std
int
mov
shlb
mov
or
xor
xor
popa
mov
adc
cmp
fs
mov
pushf
rcrl
into
mov
cmc
jmp
jmp
sub
jbe
fwait
test
adc
jmp
loope
stos
bt
scas
popf
xor
into
rcll
scas
xor
cmp
cli
cmp
icebp
ds
dec
add
stc
mov
mov
sub
clc
call
mov
in
inc
loope
jno
mov
sbb
or
sub
jmp
fldcw
sahf
frstor
shrl
sbb
cwtl
fdiv
pop
dec
mov
mov
sub
clc
shlb
mov
or
cmp
mov
mov
dec
or
xor
pop
push
mov
in
cmp
mov
sahf
xchg
inc
popa
rorl
pop
mov
pop
adc
mov
xlat
mov
nop
enter
out
mov
jmp
leave
addr16
sbb
dec
fldenv
xchg
cmp
add
mov
adc
and
dec
shr
outsb
mov
icebp
jp
int3
leave
jge
stos
mov
jp
int
mov
push
loopne
sbb
test
mov
sbb
aam
adc
in
mov
ja
fwait
inc
clc
aam
enter
inc
fcoms
adc
xchg
jb
mov
sbb
cmp
dec
jb
mov
cwtl
rcll
sub
movsb
xchg
cmp
add
mov
and
and
fnsave
jne
fildll
pop
dec
fnstcw
jecxz
sbb
sbb
cmc
dec
lods
outsl
sbb
jle
gs
dec
in
sar
mov
push
int
jbe
aad
sti
mov
icebp
jmp
loope
jno
mov
aad
imul
cmpsb
cmp
and
jns
mov
cmp
inc
shll
mov
stc
jmp
fnstcw
jns
mov
add
shll
inc
mov
nop
rclb
daa
pop
sub
outsb
jns
mov
lahf
loopne
xchg
push
mov
lods
aam
rorb
sahf
push
ja
aam
clc
add
sbb
sbb
clc
pop
mov
mov
aam
rolb
in
fbstp
rorb
in
pop
mov
aad
adc
cmp
fnstcw
ja
call
push
mov
loopne
and
sub
mov
mov
sub
mov
add
xor
dec
mov
push
sahf
stos
inc
xchg
shll
enter
lret
mov
in
insb
jmp
dec
xchg
enter
pusha
cmc
daa
nop
loopne
loopne
pop
in
sahf
sbb
fisubrs
jge
inc
in
dec
jno
mov
adc
jns
mov
add
outsb
fxch
jno
mov
aad
loop
adc
fnstcw
ja
dec
ds
icebp
stc
cmp
cmp
in
mov
insb
call
jns
imul
nop
call
push
sbb
inc
jmp
or
and
sahf
aad
imul
pop
and
fwait
scas
push
enter
dec
fwait
scas
mov
mov
sub
lock
out
aas
in
aam
scas
loopne
mov
pop
xchg
mov
clc
add
ja
in
cwtl
fcomps
or
lock
clc
ja
xchg
and
stos
mov
stos
pop
lcall
push
ljmp
lcall
stos
mov
push
push
sbb
rolw
pop
mov
std
jmp
leave
test
pop
aam
sbb
cmpsb
leave
inc
cwtl
rcrl
lret
popf
mov
inc
add
mov
push
cmp
xorl
cld
lds
sbb
shrl
cltd
xor
jmp
rorl
stos
mov
sbb
rorw
cmpsb
xchg
and
inc
and
sahf
pop
xor
test
jecxz
nop
call
pop
add
jbe
loopne
mov
mov
or
xor
xor
pop
mov
sub
in
cmp
fldcw
adc
sar
outsl
push
push
pop
lcall
mov
ds
in
sar
and
xor
jmp
shll
mov
mov
in
jmp
jmp
and
rorl
enter
mov
into
aad
ja
aaa
push
or
sbb
shlb
xlat
mov
ja
aam
clc
lock
in
mov
and
mov
dec
xlat
scas
mov
sbb
in
ret
pusha
mov
dec
loope
addl
sub
jns
mov
fucomp
into
les
mov
cmp
insl
pusha
in
xchg
loopne
jecxz
js
and
mov
mov
sub
lock
mov
call
mov
mov
test
and
in
stc
mov
int
lcall
xchg
pop
dec
cmp
cwtl
jmp
js
aam
clc
mov
std
mov
xor
jns
mov
push
mov
cmpsb
fsubrs
fstps
in
into
jmp
test
pmullw
cmpsl
outsl
aam
nop
lock
pusha
mov
pop
loope
adc
xor
mov
aad
sub
fistps
and
sahf
sti
or
cmp
stos
xchg
mov
pusha
or
mov
in
insb
rcrl
out
and
fstps
fidivl
sahf
test
aam
clc
je
cmp
addr16
nop
call
pop
add
inc
loope
xchg
sbb
bound
popa
xlat
cmpsb
pop
ja
aam
clc
sub
mov
lods
aam
shr
in
mov
xlat
mov
and
rcrb
mov
mov
cwtl
fsubrs
pop
mov
mov
imul
push
add
cmp
add
loope
fwait
scas
ja
mov
fists
dec
jge
popl
aam
enter
mov
mov
nop
call
pop
sub
je
dec
jns
mov
jp
int
mov
rorb
in
pop
mov
cmp
inc
mov
dec
or
sbb
ss
mov
aam
xor
xor
dec
mov
mov
sub
rcrb
call
pop
and
jbe
inc
outsl
push
inc
fisttps
jo
pop
xor
ja
xchg
ret
cmp
jno
push
jb
mov
add
xor
add
mov
mov
aad
daa
fisubrl
xchg
xor
jmp
sarl
test
jb
and
mov
mov
mov
sti
cs
cmc
jmp
fsts
in
mov
pop
and
int3
jmp
test
sub
ja
pop
push
movsb
aam
fsubr
pop
or
aas
adc
nop
shlb
scas
push
pop
or
je
inc
test
mov
inc
in
jl
imul
push
and
jno
mov
xchg
fucom
ja
out
lods
aam
clc
ficomps
mov
dec
in
stc
stc
pop
jns
mov
orb
xchg
call
xor
sbb
mov
sub
pop
sahf
imul
cmp
das
pop
push
mov
xor
nop
shll
push
cmp
push
je
stc
xlat
idivb
fnstcw
in
aas
movsb
sub
adc
aas
clc
aam
sarb
mov
mov
sbb
fsubl
lret
movsl
mov
inc
jmp
test
adc
insb
or
sbb
in
mov
pop
or
lret
jno
mov
aad
cmc
orps
inc
loope
mov
mov
cmp
inc
flds
xchg
fnstcw
out
inc
mov
adc
test
mov
rcl
lock
pushf
jb
cmp
xchg
jp
pusha
jns
bound
mov
cmp
cmpb
add
and
scas
sarl
mov
xor
je
in
ja
pop
push
cwtl
shll
rcr
popa
in
mov
int3
aam
rolb
mov
movsb
aam
enter
mov
mov
nop
rclb
stos
push
test
add
inc
or
aad
jmp
sub
fsubs
sbb
push
dec
in
fyl2xp1
cmp
jmp
jmp
and
stc
int
aas
mov
sbb
loopne
or
movsb
aam
call
sub
xchg
leave
jmp
jmp
dec
xchg
loopne
outsl
inc
xchg
nop
rclb
call
mov
sub
in
sbb
icebp
mov
pop
and
dec
sarl
mov
shr
inc
fstps
xor
push
jae
mov
nop
fadd
fldl
jg
cmp
jno
mov
aad
mov
ja
dec
stos
xchg
sar
jb
mov
aad
inc
sbb
insl
jo
dec
xchg
lock
fsubrp
jmp
movsb
mov
stos
mov
test
or
fstps
cmpsb
adc
mov
pop
test
pop
imul
lret
insl
stos
xchg
push
aad
adc
mov
stos
pusha
sub
test
mov
jns
fstps
pop
ret
dec
sub
loop
aad
jo
sti
loopne
push
adc
xor
sub
ljmp
inc
popf
fidivl
lods
cmp
jmp
dec
mov
sbb
mov
mov
loope
fmuls
sbb
pop
ret
pop
sub
sub
adc
insl
cmc
ret
dec
repz
insl
dec
jecxz
movsb
jmp
fadd
shll
dec
lock
fldcw
cs
movsb
cmp
dec
fistpll
cli
inc
push
test
pop
shlb
xchg
mov
shr
out
xor
adc
jae
and
jno
mov
and
fadds
shll
lods
iret
push
fstpt
pop
stc
clc
negl
mov
pop
cs
xchg
push
movsl
mov
movsb
pop
lcall
mov
push
sahf
out
push
or
icebp
clc
clc
ret
pop
push
jb
mov
aad
shr
iret
and
enter
xchg
rcrl
jecxz
in
xchg
xchg
aam
leave
sub
jmp
fptan
hlt
mov
pop
sub
sbb
stc
mov
icebp
mov
into
leave
pop
test
in
pop
loope
jbe
dec
jns
mov
adc
cmp
inc
cmp
outsb
rcl
jecxz
test
and
pop
std
repnz
subl
nop
call
push
add
leavew
xor
and
inc
in
dec
leave
or
out
mov
mov
pop
sub
cmp
inc
dec
in
inc
rcll
mov
icebp
jmp
sarl
int
pop
lcall
inc
push
cmpsb
cmp
aam
fsubrs
xchg
in
mov
sbb
nop
loopne
pusha
andl
pop
icebp
mov
xor
gs
rorl
fbld
adc
sbb
repnz
pop
and
stc
fcomi
outsl
test
adc
test
add
filds
pop
inc
loope
jno
mov
jp
sbb
mov
jmp
or
int
mov
push
add
cmp
enter
fwait
scas
out
mov
sub
fsubs
lcall
aam
pop
pop
aam
pop
xor
jmp
shrl
xchg
stc
movsl
add
dec
sub
jbe
shrl
mov
loope
shll
cmc
ja
es
aam
xor
cmp
push
sahf
push
cmp
fldcw
subl
je
mov
pop
mov
adc
loope
mov
mov
or
dec
mov
add
inc
fxch
mov
pop
das
pop
xor
aam
clc
fs
mov
add
aam
inc
fucomp
mov
outsl
mov
cwtl
fmuls
stos
cmpsb
ret
stos
loop
add
dec
jmp
add
inc
shr
test
pusha
loope
data16
test
pop
popa
and
xor
sub
cltd
lret
mov
pop
icebp
inc
fwait
scas
test
cwtl
sub
fadd
push
xchg
mov
stos
mov
test
dec
xchg
rolb
ja
fwait
ds
fyl2xp1
cmp
leave
push
adc
icebp
div
inc
aam
sbb
outsb
mov
inc
leave
je
rcrl
mov
fwait
scas
pop
mov
pop
sub
clc
int3
pop
and
pushf
sarl
rorb
push
lcall
fs
mov
icebp
ds
enter
mov
call
jb
mov
xchg
shll
fdivs
icebp
mov
pop
jmp
cltd
movsl
pop
jmp
shll
scas
dec
inc
xchg
shll
enter
mov
cwtl
rcl
rolb
ja
ja
mov
clc
mov
sub
jmp
pop
add
pop
enter
in
sub
fmuls
aaa
mov
mov
icebp
and
sahf
xchg
mov
pop
xchg
aaa
dec
mov
xor
pop
xchg
sbb
push
call
pop
dec
mov
xor
je
shrl
in
or
outsb
fldenv
jno
mov
leave
jmp
jmp
mov
in
dec
leave
shlb
rcl
sbb
rolb
ret
pop
mov
pop
js
aaa
mov
jmp
loope
cltd
mov
test
int3
and
xchg
jecxz
adc
jb
mov
aad
insb
fmulp
and
rorb
and
jl
stc
mov
movsb
aam
clc
loopne
in
fisttps
xor
flds
push
shrb
mov
int3
aam
rolb
push
push
add
pop
add
shlw
mov
sbb
outsb
loope
cmp
mov
in
dec
jmp
or
inc
loope
jle
mov
mov
inc
jmp
or
data16
test
stc
pusha
in
into
loope
jns
mov
fldenv
mov
rcll
repz
push
mov
cmp
scas
fcomps
cwtl
loope
sub
rorb
jns
icebp
jmp
leave
cmp
mov
sbb
into
shll
icebp
push
and
jbe
sub
xchg
jnp
aad
mov
leave
and
xchg
out
movsb
aad
repz
iret
mov
shr
iret
sub
pusha
movsb
dec
xchg
loopne
jno
nop
fcomps
add
inc
add
into
jmp
and
inc
jmp
and
insb
shll
mov
xlat
scas
pop
aas
xchg
rcll
shlb
fwait
push
aad
cmc
addl
cmp
je
jmp
int3
adc
mov
mov
jmp
fsts
call
pop
sub
adc
push
call
pop
gs
mov
sub
shlb
mov
int
lcall
outsb
into
mov
and
dec
jmp
or
into
leave
je
pop
loopne
xchg
fadds
xor
mov
lds
aam
enter
mov
adc
cwtl
enter
mov
fcom
xor
xor
mov
mov
sub
lock
stc
mov
subb
shlb
addr16
aam
clc
mov
mov
or
xor
cmp
add
enter
movsb
jb
mov
pop
jmp
icebp
inc
popa
dec
adc
or
mov
imul
aas
int3
aam
sarb
mov
subb
sar
cmp
filds
push
outsb
sahf
mov
enter
lods
aam
rcr
in
aad
jmp
enter
jl
cmc
mov
dec
fnsave
repz
lds
inc
push
dec
fldl2t
mov
xor
jne
push
daa
lcall
xchg
cmp
aam
rorb
sti
jo
aam
lock
jp
mov
adc
sbb
cmp
mov
pushf
shll
fmuls
push
xchg
xor
stos
mov
scas
clc
test
aad
sbb
into
leave
out
scas
stos
mov
pop
jb
dec
mov
jmp
fnstcw
stos
xchg
pop
sbb
fnstenv
pusha
mov
lcall
cmpsb
adc
aam
shrb
mov
mov
xor
fdivrl
mov
sbb
and
push
pop
push
mov
sbb
cwtl
fcoms
mov
sbb
aam
or
in
mov
jg
sbb
aam
fdivrs
pop
xor
sub
pop
pop
add
sbb
cld
mov
insb
mov
sub
mov
push
je
icebp
mov
in
ret
sbb
jl
dec
add
enter
js
sub
clc
cmp
imul
aam
shlb
push
mov
aam
pop
fsubr
mov
fwait
scas
adc
mov
sub
rolb
in
mov
dec
sub
mov
fcom
cmp
xchg
xchg
pop
mov
movsb
aam
fsubr
jp
mov
mov
imul
inc
aam
cmp
sahf
mov
insl
sahf
rcll
aam
fcomps
call
popa
push
aad
cltd
dec
adc
and
mov
sbb
inc
dec
in
int3
stc
add
mov
push
lret
fistps
aam
loopne
in
pop
cmpsb
sqrtps
aam
shlb
xchg
inc
mov
xor
jne
sar
out
mov
rcrl
pop
inc
and
mov
jecxz
or
insb
shrl
test
jne
std
jmp
leave
or
mov
dec
fstps
sbb
ret
aas
aam
sub
rcrb
ja
cmpsl
pop
cwtl
rcll
stos
ret
add
data16
cmp
inc
aad
jbe
xor
sahf
leave
xor
into
shll
daa
mov
leave
jmp
jmp
dec
xchg
lock
cmc
push
mov
pop
and
inc
mov
xchg
gs
inc
loope
cmp
jmp
adc
pop
mov
movsb
aam
rol
pushf
jb
cmp
xchg
mov
or
inc
shl
repz
aad
push
xchg
sub
dec
mov
scas
addl
inc
add
adc
pusha
jb
mov
movsb
aam
clc
push
sahf
ljmp
aam
lock
bound
mov
rcl
clc
int3
add
lcall
mov
add
add
ja
enter
mov
xchg
lds
aam
lock
mov
xlat
sahf
out
xchg
rcll
pop
stos
sbb
sbb
idivl
pop
and
into
lret
imul
jmp
fnstenv
mov
pop
or
jbe
popa
mov
xchg
pop
dec
in
je
push
jno
mov
xor
repz
pop
and
into
leave
mov
xchg
cmp
rcll
scas
mov
and
fs
jno
mov
loope
inc
out
scas
enter
cmpsb
enter
and
mov
mov
push
xchg
jae
movsb
aam
lock
inc
mov
aam
or
in
mov
xlat
xchg
loope
or
lcall
sahf
stos
subl
shr
mov
pop
ret
cmpsb
fldl
mov
mov
in
xor
and
mov
xchg
rcrl
rcr
pop
adc
ja
aam
clc
push
bound
jne
dec
push
cwtl
rcll
fdivs
dec
outsl
add
sbb
test
mov
fistps
inc
addr16
sub
in
sbb
idivb
pop
or
outsb
sar
jno
mov
aad
push
loope
xchg
dec
fld
mov
pop
sbb
and
sahf
xor
cs
aam
xlat
cmpsb
jae
aam
sbb
nop
pop
pop
mov
cwtl
shll
fmul
pop
cmc
mov
call
xchg
inc
mov
mov
pop
stc
mov
shrb
lcall
mov
adc
enter
xlat
mov
je
shrl
inc
flds
mull
std
jmp
fnstenv
mov
mov
dec
in
into
rorl
mov
fucomp
jbe
mov
rcr
push
addb
je
fsts
aas
and
mov
xor
inc
sarl
lcall
cmp
cmp
pop
xor
mov
aam
mov
and
cmpsb
jecxz
cmp
mov
shrl
dec
in
fs
cltd
lret
mov
mov
inc
push
sahf
mov
int3
aam
sarb
mov
movsb
aam
clc
pusha
push
mov
dec
in
sar
ret
jns
mov
xor
mov
cwtl
and
push
and
xchg
inc
ja
dec
ja
aam
clc
xor
mov
subb
dec
icebp
push
stc
pop
js
mov
clc
enter
xlat
mov
sbb
push
scas
inc
les
sub
rcr
dec
mov
aam
and
clc
addr16
cmp
xor
stc
or
subl
add
int
pop
add
inc
shll
sbbl
insl
push
mov
cmovo
sub
shrb
adc
fdivrs
sbb
and
lcall
cmpsb
push
dec
mov
cmc
mov
rcl
xor
cld
jp
mov
int3
aam
lock
icebp
mov
mov
sub
enter
pop
cmp
stos
loopne
mov
in
les
dec
add
fldcw
stos
mov
inc
in
sbb
sti
mov
pop
in
xchg
lods
test
in
sub
jle
rolw
mov
in
int3
stc
pop
andl
xor
dec
rcrl
pop
mov
cmp
fs
fsts
cmp
shrl
xchg
pop
iret
pop
in
out
ja
lahf
push
sbb
cwtl
fcoms
mov
adc
cmp
xor
inc
mov
cwtl
shll
shlb
mov
mov
sub
fdivrs
pop
cmp
sub
lock
push
lcall
pusha
jp
pop
mov
in
outsb
shll
add
in
into
jmp
or
inc
fldcw
mov
rol
mov
pop
pusha
sub
dec
loope
mov
mov
cmp
pshufw
lock
xor
inc
test
adc
mov
stos
mov
scas
loopne
ret
xchg
and
or
fnsave
jae
pop
sahf
stos
inc
call
push
mov
clc
aam
lock
aas
push
mov
adc
fld
pop
inc
aad
and
rcl
rorb
daa
inc
jne
cmp
or
and
les
mov
mov
fldlg2
mov
cmp
xchg
or
add
inc
rcl
mov
mov
shr
outsb
loope
mov
jmp
flds
cmpsb
dec
pop
sbb
dec
fldcw
mov
sub
int3
leave
in
jns
mov
fucomp
sbb
idivl
pop
mov
in
into
fldcw
pop
mov
shr
stc
mov
lcall
ret
scas
fcmovnbe
sub
shrb
mov
cmp
pushf
xchg
cmp
call
xchg
inc
mov
int3
aam
enter
mov
hlt
aam
clc
nop
push
in
fildll
push
insb
fscale
mov
xchg
inc
add
mov
and
scas
pop
inc
push
scas
jno
movsb
aam
fdivrs
sub
dec
add
cmp
bound
mov
mov
fucomi
mov
ja
inc
inc
rcl
rolb
pop
pop
sbb
outsb
loope
mov
aad
stc
jmp
loope
mov
dec
xor
mov
stc
loop
sti
dec
and
shlb
adc
push
sub
fmul
pop
sub
movsb
aam
clc
nop
bound
mov
add
cmp
mov
outsl
inc
lock
enter
mov
mov
nop
cli
push
cmp
jae
loope
jbe
dec
mov
mov
cmp
jno
mov
or
inc
leave
in
das
mov
aad
or
xor
sbb
cmc
mov
pop
sbb
inc
leave
and
xchg
mov
rorb
and
sbb
sub
mov
sub
mov
loope
mov
mov
add
mov
fcoml
ror
in
mov
shrl
aam
or
in
mov
push
xchg
addr16
test
nop
loopne
pop
lcall
pop
jmp
lret
mov
sub
mov
and
outsb
loope
mov
mov
add
pop
dec
in
and
test
xchg
lret
mov
sbb
fnstcw
cmc
mov
pop
sbb
inc
fxam
jno
mov
aad
xchg
mov
push
and
pop
cs
shrl
sbb
data16
mov
fcom
sbb
in
pop
std
mov
inc
add
xchg
bt
xchg
arpl
popf
mov
pop
adc
jmp
ret
inc
jmp
repnz
xchg
sbb
xchg
dec
dec
sbb
pushw
mov
add
aam
loopne
in
mov
shrl
adc
xchg
mov
mov
nop
rclb
call
xchg
sub
loope
adc
pusha
sub
data16
insl
inc
loopne
xchg
shlb
cmovs
pop
std
mov
aam
nop
lock
fsubs
wrmsr
jmp
jns
mov
fldpi
jbe
cmp
jmp
stos
mov
sub
jmp
fnstenv
movsb
ljmp
sub
loopne
nop
rcrb
and
inc
test
fldcw
sbb
lret
test
mov
shll
sahf
in
sub
jmp
fnstcw
ja
dec
ds
stc
stc
cmp
pop
lds
outsb
jmp
in
xchg
ja
aad
into
sub
decl
scas
pop
inc
fwait
scas
jae
mov
sub
shlb
pop
xchg
mov
mov
and
je
sub
dec
mov
adc
jo
adc
push
mov
cmp
aam
or
sub
loope
flds
iret
outsb
mov
push
dec
in
icebp
test
sbb
cwtl
rclb
mov
hlt
aam
shlb
iret
cmp
mov
orl
inc
cli
sub
rclb
ja
add
enter
lret
movsl
mov
pusha
sub
int3
loope
mov
aas
or
insb
shll
iret
mov
jp
and
mov
leave
mov
sbb
rclb
cmp
aam
clc
cmp
mov
adc
pushf
sarb
sub
outsl
cwtl
shll
lock
std
mov
inc
xor
outsb
rcr
inc
clc
dec
aam
cld
xlat
mov
in
aam
inc
xlat
in
mov
lcall
int
mov
aas
mov
pop
in
ja
pop
inc
xchg
sarl
shrb
rorb
sti
aas
aam
nop
shlb
ret
mov
aad
jo
dec
adc
fsts
mov
xchg
dec
jns
xchg
lahf
dec
sbb
cmp
test
std
mov
cmp
dec
leave
dec
mov
popa
sub
jmp
flds
sahf
popf
pop
jp
int
mov
push
or
cmp
cmp
fnstsw
sub
or
xchg
cltd
push
xchg
rcrl
mov
lock
lock
mov
lock
fiadds
icebp
sub
jmp
fnstcw
ja
call
bound
inc
loopne
aam
jg
in
mov
pop
sahf
arpl
lock
rcrb
cmova
push
jp
cmp
jno
push
sub
outsb
rcrl
pop
jecxz
dec
hlt
and
enter
lret
mov
in
je
stc
xchg
xlat
mov
xchg
sbb
inc
lock
enter
mov
bound
outsl
cmpsb
lret
inc
clc
aam
enter
or
sbb
lret
subl
fldcw
mov
pop
test
pop
cs
xchg
push
movsl
mov
aad
jb
insb
stos
xchg
push
aad
adc
xlat
and
pusha
jp
int
mov
inc
filds
pop
jbe
cmp
mov
cmp
mov
mov
jp
int
mov
sub
in
ret
inc
mov
jns
mov
sub
sbb
idivb
pop
test
push
mov
sahf
pop
push
mov
push
mov
xchg
rcll
inc
pushf
mov
into
shll
fmuls
es
pop
cmc
mov
lock
lock
aas
pushf
shll
shrb
fwait
scas
dec
shlb
cmp
sub
std
mov
pop
loope
jbe
dec
jns
mov
jp
int
mov
shrb
ja
inc
push
lock
fadds
mov
or
cmp
cmp
mov
aam
clc
push
stc
mov
subb
sub
pop
sbb
repnz
pop
or
insb
jmp
mov
sbb
inc
sub
rcrl
cmp
adc
xor
jmp
mov
imul
jne
daa
mov
pop
lcall
xchg
sbb
xchg
dec
inc
loopne
sbb
in
pop
xchg
lret
lods
mov
pusha
loope
insb
loope
test
push
cmp
in
jbe
dec
mov
jg
cmp
fs
push
mov
dec
mov
test
pop
into
jb
inc
ja
dec
push
loopne
cmp
adcb
inc
in
aad
lea
pusha
cmp
xchg
and
aas
hlt
aam
shlb
sub
rcl
enter
mov
or
aam
mov
mov
ja
add
sbb
inc
bound
pop
cmpsb
ja
hlt
aam
lock
fsubrs
in
nop
call
pop
or
dec
flds
or
jp
int
mov
inc
fcom
adc
push
cmp
ja
aam
clc
cmp
xor
rcl
mov
mov
lock
fcom
pop
push
mov
stos
pop
sbb
pop
test
pop
or
andl
sahf
leave
push
jp
int
mov
dec
movsb
aam
shlb
loope
pop
scas
jmp
sbb
adc
mov
mov
xchg
xor
or
je
jo
dec
xchg
lock
pop
js
and
clc
nop
bound
shrb
inc
fwait
scas
std
shlb
aam
sub
in
mov
ja
cmpsl
push
in
aam
fcomps
mov
cmp
je
rorl
je
inc
jno
mov
sbb
into
rcll
xchg
push
pop
cmp
dec
jmp
add
into
lds
mov
adc
jns
mov
adc
inc
flds
scas
mov
dec
in
into
leave
les
add
call
scas
and
fcom
pop
xor
or
sbb
insb
bound
dec
mov
cwtl
aad
mov
imul
adc
xchg
jb
mov
sbb
cwtl
enter
mov
movsb
aam
clc
xchg
mov
fcompl
xchg
lret
xlat
mov
dec
lock
rcrb
push
mov
sbb
lcall
xchg
push
aas
test
sbb
pop
pop
cmc
mov
fcom
aam
aas
fsubr
mov
push
sahf
push
cmp
icebp
es
inc
sub
into
mov
fldpi
inc
shll
mov
inc
in
insb
fxam
jns
mov
in
adc
cmp
mov
mov
sub
enter
mov
pusha
aad
outsb
loope
test
jmp
outsl
hlt
or
lock
and
mov
sub
mov
movsb
aam
shlb
add
pop
int
jmp
in
sbb
test
mov
dec
adc
loope
mov
pop
xor
and
pusha
cmc
jmp
loope
orl
pusha
loope
jnp
mov
fldpi
inc
in
and
bound
mov
inc
inc
jne
shll
inc
in
shlb
mov
in
dec
loope
jno
mov
xchg
or
cmp
aad
out
in
inc
insl
adc
jge
or
xor
outsb
fnstcw
pop
mov
aad
dec
push
das
sbb
mov
mov
and
in
add
outsl
in
cmp
adcl
cmp
jb
pop
test
inc
scas
mov
cmpsb
dec
inc
adc
and
mov
cmpsb
sti
aas
int3
aam
rclb
mov
fisttps
clc
sbb
ja
test
cwtl
aam
mov
sarl
adc
aam
loopne
in
mov
pop
mov
cmp
je
icebp
shl
jns
fcomps
cli
jge
dec
inc
jne
pop
outsl
or
and
cmp
mulps
aam
fsubs
add
aas
mov
mov
adc
fnstcw
mov
adc
inc
leave
inc
cmpl
shll
fbld
inc
in
fs
lods
insl
dec
test
xchg
enter
inc
fs
xor
cmp
mov
lock
rcrb
lock
xchg
sbb
or
cmp
shlb
xlat
cmpsb
mov
loopne
pop
mov
mov
in
jbe
jge
repz
int
data16
mov
mov
inc
in
outsb
leave
jno
and
fucomp
inc
xlat
stos
mov
jecxz
cmc
jmp
fsts
in
mov
pop
mov
in
into
leave
shlb
aad
cmp
in
into
leave
sbb
sub
push
aad
xchg
aam
lock
bound
push
cmpsb
pop
aas
fcom
sbb
ljmp
mov
mov
sbb
xor
push
cmp
flds
idivl
icebp
cmp
sbb
mov
pop
mov
mov
sub
loop
dec
inc
pop
mov
outsl
sbb
sbb
push
pop
stc
mov
cwtl
rcll
sub
stos
scas
cmp
ret
fcomps
xchg
jl
cwtl
rorb
pop
mov
mov
dec
lcall
cmpsb
dec
push
fcom
and
xchg
mov
mov
rcl
sar
aam
mov
pop
test
mov
pop
in
fwait
scas
adc
sub
lock
jge
out
mov
nop
call
pop
and
inc
leave
pop
mov
mov
jp
int
mov
shlb
mov
jmp
or
inc
jmp
or
fs
jno
mov
aad
dec
pop
mov
cmp
cmpsb
pop
cmp
in
leavew
add
xor
cmp
jb
push
in
xchg
jbe
aad
mov
jmp
mov
in
into
leave
in
int
add
pop
sahf
lret
pop
sbb
nop
loopne
cmp
lcall
cmp
jne
shll
inc
pusha
jbe
int
mov
inc
mov
imul
mov
push
mov
or
jae
stos
mov
push
or
dec
xchg
insl
pusha
sub
dec
loope
jns
mov
in
fnstcw
aad
cmpsb
cs
popa
sbb
adc
loope
mov
mov
hlt
push
lods
je
je
sarl
mov
shr
fs
xchg
out
out
sub
fcom
pop
in
mov
aam
and
lock
xchg
mov
cltd
lret
mov
push
inc
aad
adc
lock
inc
mov
dec
in
fyl2xp1
pop
mov
fsubs
push
and
mov
mov
fbld
fwait
leavew
fldenv
lea
in
outsb
jmp
add
cmp
cmpsb
aas
cmp
jmp
leave
sub
xchg
mov
fstpl
xlat
inc
jg
and
aam
lock
adc
in
aam
lock
sbb
jbe
and
push
sub
jmp
fstps
pusha
mov
loopne
mov
dec
add
sbb
addr16
lcall
aam
cmp
inc
and
imul
jbe
pop
test
stc
sub
jmp
fnstcw
test
cmp
loope
mov
mov
icebp
jmp
jmp
test
pop
mov
out
inc
mov
test
pop
mov
in
into
rol
ja
or
and
imul
mov
ret
in
std
loop
inc
jg
ret
aas
nop
rolb
mov
rolb
jae
inc
in
fs
cltd
lret
mov
jb
inc
ja
jne
fcom
adc
mov
mov
mov
pop
jns
jno
lahf
loopne
xchg
dec
mov
sub
lock
jmp
mov
in
jbe
and
mov
std
jmp
loope
cltd
mov
xor
ja
inc
sub
mov
lods
aam
lock
push
mov
enter
lods
xchg
cmp
xchg
rcll
lock
xchg
jmp
in
aam
fdivrs
jb
cmp
mov
xor
or
add
jbe
jnp
out
mov
xor
mov
imul
aad
pusha
mov
lahf
loopne
push
mov
pushf
rcll
clc
insb
pop
cmp
lds
push
je
mov
cmp
jne
shl
fstpl
adc
mov
xchg
imul
in
dec
flds
scas
mov
in
fnstcw
insl
inc
les
in
mov
filds
push
dec
fnstenv
mov
inc
rcl
aad
push
loopne
jmp
and
int
mov
ja
sarl
clc
push
scas
xchg
ret
mov
sub
enter
push
or
xor
lahf
push
mov
mov
sbb
lret
jns
mov
xor
fs
insl
inc
cwtl
dec
xchg
rolb
rclb
repz
sub
int3
loope
mov
mov
sub
jbe
test
xchg
das
jp
int
mov
push
add
out
in
push
movd
inc
subl
insb
sbb
dec
jmp
sub
jbe
mov
fldpi
outsb
shl
sbb
aad
cltd
fistps
data16
jno
mov
aad
xchg
xor
sbb
lock
pop
test
pop
cmpsb
pop
push
inc
pop
scas
orl
push
jb
cmp
jns
pop
sub
int
mov
aas
mov
sbb
jl
cmp
clc
aam
call
pop
dec
aam
mov
pop
jo
and
lock
sbb
clc
aam
sub
mov
sub
shl
xor
aas
pushf
rcrl
rcl
dec
mov
lock
fcoms
or
flds
mov
pop
and
int
mov
outsl
adc
push
xchg
inc
ja
aam
clc
je
and
sbb
enter
mov
mov
sub
pop
xchg
pop
aas
cwtl
shll
shlb
cmp
aas
mov
nop
rclb
repz
add
fs
adc
aaa
jp
int
mov
outsl
loopne
sbb
sub
mov
mov
sub
fsubrs
stc
mov
movsb
aam
clc
pop
pop
lock
add
adc
addr16
jp
cmp
jno
pop
add
int3
jmp
sub
lret
xorl
xor
mov
test
fnstcw
pop
push
shrb
and
lods
aam
rolb
sahf
sbb
aam
fcom
xchg
xchg
lret
xchg
mov
cmp
in
jbe
xor
xor
inc
in
outsb
leave
leave
mov
subl
imul
bound
outsl
or
adc
enter
shrl
cmp
pusha
pop
cmp
ja
aam
clc
in
cmc
mov
mov
sub
rcrb
and
or
sbb
into
fsts
xchg
xor
in
insb
roll
mov
lods
aad
sbb
adc
fnstcw
mov
sub
jmp
idivl
pop
test
gs
pop
stc
adc
sbb
and
mov
jecxz
stos
xchg
das
stos
or
aad
jp
int
mov
inc
mov
mov
mov
in
lcall
mov
in
insl
mov
adc
xor
mov
call
push
mov
hlt
aam
sarb
bound
ja
imul
aam
shrb
or
jp
int
mov
in
and
std
jbe
scas
adc
mov
cmp
icebp
ja,pt
dec
ds
sar
in
cmp
icebp
ds
sub
jmp
dec
dec
in
leave
stc
mov
xchg
fcomps
aam
mov
fcoms
mov
aam
fsubrs
gs
add
xor
add
loope
fwait
scas
cld
mov
mov
inc
xlat
cmpsb
or
shlb
outsl
scas
inc
inc
aam
loopne
in
mov
aad
mov
aam
fsubs
xchg
inc
icebp
ffreep
rcll
aas
cwtl
hlt
adc
sub
mov
mov
aam
call
cltd
dec
xchg
shrb
sbb
clc
or
sbb
stos
xchg
lret
cmpl
pop
jp
int
mov
aas
cwtl
sarl
rcr
jmp
jno
aam
lock
xchg
push
int3
aam
fadds
outsl
push
push
push
andb
sbb
data16
outsl
jo
dec
xchg
lock
sbb
clc
cmp
mov
dec
in
sar
insl
dec
fmuls
enter
outsl
js
adc
dec
bound
cmp
jne
stc
sub
pop
outsb
adc
mov
fucomp
data16
in
cmp
icebp
ds
pop
add
lcall
or
add
std
int
mov
aas
hlt
aam
rclb
add
cwtl
shll
fsubrs
sahf
pop
inc
lods
aam
rclb
mov
aam
rclb
gs
inc
lds
sahf
lock
stos
jno
ficompl
mov
inc
push
scas
inc
aas
mov
mov
mov
xor
push
outsb
shll
loopne
fidivs
das
xor
push
jbe
imull
and
lock
push
xchg
jmp
stos
mov
mov
add
mov
mov
add
inc
loope
out
cmp
icebp
ds
dec
mov
bound
mov
aam
and
xor
sub
mov
cmp
out
sbb
inc
leave
loope
jecxz
sub
inc
roll
mov
jmp
addl
inc
aad
mov
jnp
les
lds
mov
inc
test
adc
pop
jb
mov
loopne
and
in
bound
xlat
cmpsb
outsl
push
movsb
aam
fmuls
scas
jnp
or
cmp
les
mov
adc
sbb
clc
pop
jmp
mov
sub
lock
mov
lods
aad
int
mov
inc
aad
out
ja
aam
clc
mov
icebp
mov
sub
test
shll
fucomp
inc
fldcw
andl
pop
cmp
xorl
repnz
dec
xchg
call
adc
rcrb
outsl
inc
in
sbb
cmpsb
xchg
fnstsw
adc
cwtl
shl
pop
sub
shll
aad
cmp
or
cmp
cmpsb
mull
lcall
mov
push
inc
ja
inc
dec
movsb
aam
shl
jb
mov
and
lock
pop
mov
hlt
aam
rcl
add
mov
sub
lock
jp
push
sub
enter
mov
or
aad
dec
pusha
jb
push
mov
jmp
rcrl
daa
mov
and
jbe
out
and
pop
add
jmp
sbb
sbb
subl
inc
out
frstor
adc
push
jno
mov
icebp
jmp
fld
mov
mov
jmp
mov
in
into
loope
jb
mov
aad
stos
fidivs
lods
mov
cli
int3
sub
mov
cwtl
shll
shlb
mov
mov
sub
enter
mov
adc
adc
mov
scas
sub
shlb
cmpsb
mov
shrb
jb
mov
lods
aam
fcoms
mov
push
cmp
shlb
sbb
sbb
into
loope
mov
daa
xor
jno
mov
inc
in
into
jmp
sbb
shrw
in
das
shl
jb
mov
cmc
in
into
loop
shrb
mov
jmp
leave
stc
jno
mov
aad
scas
or
adc
das
sbb
pop
adc
jb
mov
aad
pop
hlt
jbe
dec
leave
jno
mov
cmc
jmp
leave
adc
dec
xor
jmp
shll
mov
mov
fucomp
int3
leave
movsl
xchg
bt
or
push
aam
fcomps
scas
fidivrl
xor
jne
sar
cli
inc
inc
sahf
sbb
shrl
mov
add
jno
mov
aad
sbb
xor
data16
xchg
iret
adc
or
pop
adc
pushf
rcll
inc
sahf
dec
aam
fcmovbe
jne
sahf
sub
mov
in
aam
shlb
aas
cwtl
shll
rcr
loope
outsl
mov
cwtl
clc
and
mov
aam
cmp
cwtl
pop
in
ja
ja
sub
loope
aad
out
mov
bound
outsl
cmpsb
add
aam
sarb
add
sub
inc
fnstcw
sahf
sub
scas
mov
aam
lock
pop
push
mov
mov
sub
enter
mov
in
aam
lock
jb
mov
sub
repz
pop
test
pop
sub
jmp
jo
aam
lock
gs
mov
sub
lock
adc
dec
rcl
ror
push
mov
mov
mov
jge
pop
aas
int3
aam
shrb
inc
dec
sbb
and
mov
popa
mov
stos
pop
nop
lcall
scas
mov
loope
mov
mov
pop
mov
inc
mov
in
fldenv
push
push
testb
pusha
std
jmp
loope
js
mov
lahf
loopne
pop
icebp
mov
mov
sub
lock
mov
mov
sub
fcoms
adc
loopne
cmp
test
mov
add
cmp
addr16
xchg
mov
stos
mov
test
in
xchg
lret
in
adc
test
pop
mov
in
inc
rcrl
mov
jg
xchg
mov
aam
fdivs
mov
jmp
loope
mov
jne
xor
dec
jmp
sbb
dec
rorl
out
inc
sub
adc
fnstenv
test
jne
add
test
sbb
pop
icebp
and
pop
in
dec
push
scas
fidivrs
adc
adc
jb
mov
xor
dec
fsts
sahf
addr16
jmp
leave
cmp
mov
sub
dec
roll
mull
add
outsb
xorl
pop
sbb
into
jmp
add
rcl
ja
enter
lods
push
mov
or
cmp
cmp
cmp
inc
clc
aam
shlb
daa
inc
jg
xchg
pop
pushf
aam
sahf
testl
pusha
jns
cmp
push
mov
test
xor
jl
fnstsw
jb
jae
mov
pop
rcl
fcom
pop
adc
pushf
sarl
rorb
push
jb
cmp
jb
push
test
pop
orb
xchg
outsb
fsts
mov
add
je
aaa
mov
or
in
into
loope
test
icebp
aas
sar
or
int
jecxz
sti
aas
nop
daa
sbb
xor
std
mov
sub
stc
mov
pop
sub
int3
ror
mov
mov
sbb
inc
adc
call
cmpsb
fwait
mov
jmp
test
dec
movsb
pop
or
scas
lahf
mov
outsl
cmpsb
lahf
ja
aam
clc
xor
mov
adc
lcall
sahf
xlat
addr16
nop
call
push
and
dec
jmp
test
pop
movsb
mov
in
sahf
push
cmp
rcl
out
inc
sub
lret
aas
rcl
rcl
in
mov
fwait
scas
addr16
fs
hlt
cmp
xorl
out
and
out
add
inc
leave
jno
pop
mov
jp
int
mov
rclb
push
mov
add
aam
jb
in
mov
jge
mov
aam
rclb
dec
or
nop
enter
jmp
in
xchg
push
mov
in
imul
adc
mov
and
lret
test
insl
pop
shr
outsb
jmp
dec
xchg
lock
fdivs
rolb
and
or
in
push
into
sarl
inc
xor
jmp
shl
jno
mov
aad
dec
in
adc
mov
sub
data16
mov
jne
dec
in
jbe
jge
bt
mov
leave
mov
loopne
push
mov
mov
mov
inc
lock
enter
outsl
int3
sbb
lock
scas
lahf
inc
fcom
and
mov
mov
mov
push
mov
test
sbb
mov
mov
clc
aam
lock
mov
xor
pop
insb
shll
jmp
and
into
rorl
mov
push
aad
insb
jmp
mov
jmp
leave
popa
adcl
sub
stc
mov
pop
adc
int3
shrl
cmp
adc
adc
clc
je
cmp
adc
sbb
push
mov
mov
aam
enter
ret
cmp
mov
mov
loope
test
sbb
mov
and
sahf
xchg
decl
xchg
xchg
clc
aam
rorb
inc
mov
loopne
lcall
scas
stos
outsl
in
cmp
pop
fs
sarb
enter
mov
cmpsl
ss
clc
ret
cmp
dec
leave
decl
inc
pusha
sbb
jno
mov
xor
insb
loope
test
pop
pop
loope
inc
jmp
sbb
into
leave
frstor
bswap
pop
pop
lods
ja
add
aam
enter
fbld
mov
adc
loope
adc
inc
aad
dec
shll
jae
sbb
cltd
lret
mov
xchg
add
xchg
cmp
aam
clc
je
in
ja
ja
dec
in
leave
stc
pop
jns
mov
jmp
xchg
mull
mov
aas
sbb
aam
adc
in
mov
fbld
imul
jb
inc
jg
mov
rcrl
scas
ljmp
jne
loopne
lcall
mov
aas
sbb
aam
xchg
in
mov
pop
mov
and
bound
mov
movsb
aam
clc
pop
jb
mov
clc
aam
sarb
in
mov
dec
in
stc
stc
arpl
addr16
add
mov
mov
jmp
mov
mov
clc
jno
push
xchg
mov
fstps
sahf
mov
fldcw
mov
pop
leave
jmp
jmp
and
inc
jmp
test
pop
cs
xor
cmp
je
stc
insl
out
mov
shrl
mov
jmp
adc
lock
jne
and
lcall
mov
and
fs
stc
mov
add
adc
mov
loopne
xchg
pop
and
and
xchg
lret
inc
dec
jge
xchg
aam
fmuls
mov
cwtl
clc
dec
mov
jg
jg
sbb
sbb
test
dec
mov
and
cmpsb
rol
pop
and
scas
idivl
adc
cwtl
shlb
mov
add
adc
mov
cwtl
add
sub
mov
add
cmp
and
fnstsw
sbb
adc
lods
cmp
filds
pop
inc
shll
movsl
aaa
jp
int
mov
enter
mov
in
aam
lock
mov
sbb
cmp
dec
jb
mov
cs
in
xlat
xchg
sbb
jmp
mov
in
into
fsts
sahf
add
in
mov
jbe
sbb
lcall
scas
mov
shll
lock
sahf
mov
int3
aam
fadds
mov
ds
in
sar
test
xor
and
dec
leave
xchg
and
pusha
shr
outsb
loope
mov
sarl
outsb
dec
int
xchg
enter
inc
mov
and
sub
outsl
dec
lods
mov
add
or
orl
and
frstor
fldl
out
dec
fildll
pop
into
fabs
mov
daa
pop
cmc
test
popa
dec
sbb
loope
mov
jne
cmp
outsb
shll
or
pop
stos
inc
mov
jmp
rcrl
scas
mov
pop
cmp
mov
ja
sbb
enter
mov
or
aad
loop
jno
cmc
or
int
mov
dec
loopne
and
in
or
fstpt
xchg
addr16
xchg
call
jmp
cmp
or
mov
mov
sub
sar
in
mov
shrl
sbb
push
xchg
jmp
clc
cmpsl
pushf
jb
cmp
xchg
add
jmp
mov
pop
std
mov
scas
or
xor
jns
mov
dec
in
outsb
jmp
or
into
roll
jne
xor
jns
mov
inc
in
jl
imul
adc
adc
mov
cwtl
dec
xchg
loopne
loope
inc
adc
nop
sarb
add
pop
and
jb
mov
std
jmp
rorl
push
pusha
icebp
jmp
loope
subl
shll
mov
mov
dec
fbstp
push
pop
test
pop
lods
push
inc
push
mov
nop
loopne
jno
fldt
xchg
movsl
pop
add
jbe
xchg
cmp
pop
inc
in
fs
sub
and
sahf
rol
addr16
inc
xlat
mov
inc
add
aam
sahf
fsubrp
mov
insl
mov
inc
mov
cwtl
enter
mov
sub
mov
mov
pop
or
fwait
scas
imul
pop
dec
dec
jg
mov
push
fbstp
sbb
xlat
mov
add
cltd
lret
mov
mov
fistps
outsb
jmp
add
into
loope
test
shll
aad
roll
cwtl
cli
sbb
jl
mov
sub
sbb
xchg
mov
jmp
shrl
jp
xlat
scas
xor
lock
xchg
push
mov
xor
out
or
je
stc
cmc
clc
subl
xor
mov
sub
outsb
loope
jns
mov
loope
dec
leave
pop
sbbl
sub
in
fnstcw
outsl
push
push
or
push
sbb
jmpw
pusha
mov
loopne
mov
mov
clc
aam
shlb
push
in
sub
cmp
in
xchg
test
scas
sbb
fwait
scas
mov
jecxz
nop
call
pop
add
dec
jmp
in
xchg
push
aad
daa
negb
adc
sarl
shlb
in
mov
xlat
cmpsb
mov
shll
clc
lods
imul
inc
int3
aam
shlb
dec
inc
pop
mov
inc
lods
aad
int3
xchg
pop
aas
adc
cwtl
xchg
in
outsl
xchg
sbb
enter
mov
mov
sub
repz
mov
popf
sub
mov
mov
jmp
mul
cmp
sbb
imul
add
lods
or
mov
outsl
mov
pop
adc
mov
sub
sarb
sub
dec
in
into
stc
pop
mov
loope
int3
rorl
iret
mov
pop
sub
cmpsb
push
inc
pop
mov
cwtl
lock
mov
lock
enter
mov
rcl
rolb
inc
sbb
lcall
stos
mov
mov
mov
das
pop
inc
in
dec
jmp
in
xchg
push
test
in
lahf
negb
jbe
cmpsl
xchg
lret
mov
leave
jmp
jmp
sbb
dec
shrl
mov
pop
adc
pop
js
adc
clc
push
scas
adc
aam
enter
mov
dec
in
leave
stc
insl
mov
andl
test
pop
aad
outsb
pop
xchg
dec
xchg
fcomps
cmc
outsl
out
sub
lock
pop
add
aas
rcl
cmp
cmp
mov
mov
sub
shlb
jg
aaa
aas
adc
xor
mov
std
mov
xor
push
dec
rcrl
jmp
mov
in
jbe
jge
out
mov
dec
in
outsb
rcr
andb
xchg
jo
sbb
mov
xor
jp
pop
mov
aam
xor
mov
cmpsb
pop
in
es
jbe
sahf
mov
pop
and
insb
jmp
dec
xchg
call
push
and
clc
test
mov
in
aam
rcrb
push
fnsave
adc
jb
mov
aad
inc
jecxz
adc
fnstcw
pop
js
sub
clc
aam
cmc
mov
dec
in
sar
gs
mov
shr
outsb
rcl
and
sub
mov
sbb
loope
sbb
cld
mov
pop
movsb
xchg
lea
jmp
loope
jns
mov
rcrl
lret
mov
xchg
push
inc
pop
xchg
jge
adc
xchg
divl
in
stc
stc
cmp
mov
loope
inc
leave
das
xor
sub
jmp
flds
mov
insl
mov
inc
push
and
jl
lds
cmp
jb
pop
in
xchg
cmp
inc
adc
mov
xchg
pop
push
cmc
inc
fwait
scas
push
enter
std
push
sub
lock
adc
inc
inc
jp
int
mov
aas
movsb
aam
rcr
in
mov
jg
adcl
push
xchg
stos
cmp
andl
add
sbb
std
mov
pop
sub
lret
and
pusha
and
jb
mov
aad
dec
xlat
push
jbe
jne
out
mov
in
fnstcw
ja
call
mov
pop
sahf
xchg
aam
lock
in
mov
add
aam
mov
in
mov
push
sahf
fstl
aam
fdivrs
gs
int3
aam
sarb
inc
pop
mov
aas
hlt
aam
rcrb
and
cwtl
shll
enter
mov
pusha
jp
int
mov
pop
xor
jmp
popa
adc
or
aad
sub
sub
je
movsl
jno
mov
icebp
jmp
fnstcw
mov
xlat
pop
dec
lods
outsl
scas
idivl
mov
nop
rclb
pusha
imul
xchg
rcrb
mov
lahf
add
add
repz
add
out
add
add
add
jnp
add
lahf
sbb
add
sub
add
add
add
add
add
add
or
adc
add
add
sub
test
xchg
sbb
popf
jg
pop
in
add
mov
addb
inc
jns
sbb
iret
jle
std
shr
xor
outsl
push
jb
jno
in
xor
mov
repz
in
xor
das
adc
out
rolb
cli
lea
cmpsl
push
out
xor
mov
in
xor
sahf
or
icebp
lds
scas
in
xor
jae
xchg
enter
xor
ljmp
lock
xor
push
mov
xor
out
sbbb
lods
xlat
inc
arpl
out
jp
psllq
push
sbb
addb
add
xor
xorb
in
adc
xor
add
mov
xor
sub
out
jg
addr16
jmp
xor
add
jo
rcrb
xor
push
insl
push
es
jp
xchg
stos
aad
xor
pop
scas
cmp
lea
cmpsb
adc
add
mov
out
push
xor
add
addb
xor
loope
pop
add
addb
sub
xor
lret
out
inc
xchg
test
add
xor
lcall
inc
jp
insb
xchg
pop
out
sbbb
clc
test
jmp
xorb
fisubrs
iret
imul
xor
add
nop
mov
test
xchg
and
dec
insl
in
add
add
fucomi
xor
sbbb
mov
jmp
xor
xor
daa
pop
pop
pop
xchg
in
cmp
dec
ds
in
xor
mov
inc
mov
out
xor
and
out
arpl
mov
in
add
in
mov
shr
xchg
xor
leave
cs
out
xor
jp
mov
in
xor
add
insl
push
mov
pop
in
add
cmpsb
cmpsl
xchg
jmp
add
sub
jns
mov
cmp
js
lret
in
xor
sti
pusha
dec
jmp
xor
sbb
add
addb
pop
out
sbb
cmp
sub
xor
dec
js
int
outsb
jle
out
add
lahf
mov
pop
jnp
push
xor
jmp
mov
ficoms
loopne
mov
fucomp
and
mov
push
sbb
xor
ss
out
mov
xor
dec
sahf
in
xorb
xchg
test
inc
ret
ret
add
rcrb
and
dec
shr
add
mov
leave
sbb
jb
sub
jmp
xorb
outsb
jns
jge
inc
and
out
xor
add
inc
out
push
jb
mov
xor
ja
inc
aaa
loopne
pop
jg
add
addb
lret
jmp
xor
xor
es
xlat
loop
push
add
sahf
imul
outsb
in
addb
cwtl
and
cmp
orb
or
out
orb
pop
mov
rcr
cmpsl
mov
jmp
xor
xor
mov
mov
repnz
lods
or
mov
jb
add
xor
mov
test
popa
lock
xorb
rcrl
insl
mov
xor
popa
mov
push
xchg
fnsave
addb
dec
xor
mov
rol
testb
in
addb
movl
call
push
add
adcb
filds
dec
roll
xorb
sbb
popa
cs
or
xor
gs
jmp
xor
scas
xchg
int
xor
xor
add
push
push
int
dec
out
jmp
xor
pop
das
xor
xor
mov
xor
dec
aad
jmp
xorb
test
sbbl
cmp
mov
xorb
xchg
movsb
imul
add
aaa
loop
adc
shr
movsl
or
xchg
je
std
xchg
xor
and
fcomps
add
adc
dec
in
addb
je
inc
in
xor
test
adc
mov
es
adc
leave
out
aas
leave
adc
bound
lock
xchg
aaa
inc
out
cmp
adc
push
pop
push
aas
out
jne
mov
or
mov
add
inc
cmp
add
out
aam
es
fnstsw
mov
push
push
pop
andl
xorb
test
push
subb
mov
ss
das
mov
addb
xor
loopne
cltd
fsubrl
xor
add
pop
xchg
scas
ret
mov
test
pop
incb
push
xchg
int3
cmp
in
xor
add
fsubl
out
addb
ja
mov
xor
enter
add
xor
out
sbbb
fwait
jae
pop
pop
mov
xor
test
orl
in
jp
jge
xor
xor
iret
and
xchg
add
xor
bound
loopne
inc
mov
sub
arpl
out
mov
jl
adc
fsubrp
xor
add
pop
rolb
add
xor
outsb
out
pop
nop
xor
xorb
or
movsl
popf
push
sub
out
add
dec
dec
pushf
jmp
xor
add
mov
adc
xor
jmp
icebp
or
add
mov
mov
or
and
pop
clc
pop
inc
adc
mov
cmp
call
mov
sbb
xchg
fimull
add
ds
dec
ja
cmp
aam
mov
or
aam
mov
add
add
cs
push
add
cmc
xchg
out
movsl
fs
mov
xor
rorl
out
cmpb
mov
xlat
aaa
and
inc
loop
mov
xor
sti
inc
enter
xor
pop
jle
dec
jns
pop
movsl
in
xor
xor
scas
out
pop
inc
cmpsl
int3
in
xor
add
push
dec
jmp
aaa
das
out
xor
fstl
shr
xor
add
adc
mov
sub
sbb
xor
out
pop
mov
shll
addb
mov
adc
cmp
pusha
in
std
out
cld
aad
sbb
and
out
jmp
aam
inc
out
xor
adc
xor
cmp
inc
out
xchg
pop
aaa
dec
mov
adcb
hlt
data16
jl
jmp
xor
inc
in
sti
mov
lcall
add
mov
mov
mov
out
xor
dec
or
in
pop
outsl
dec
inc
jge
xor
xor
lret
in
fiaddl
add
xor
adc
insb
xchg
bound
jecxz
data16
xchg
flds
add
xor
add
mov
fsub
push
out
out
jb
mov
in
add
push
iret
sbb
sub
es
out
pushf
push
in
xor
push
sub
in
xorb
sbb
out
xor
sub
fucomi
add
hlt
jmp
xor
add
idivl
xchg
in
cmp
iret
outsl
int3
lea
and
lret
mov
sub
cmp
mov
jmp
cmc
sbb
jmp
add
xor
outsl
push
lods
pop
lock
jmp
and
test
mov
fsubrs
shr
xor
xorb
test
fidivs
add
xlat
mov
adc
out
mov
jge
outsl
out
cmc
pop
and
sbb
mov
ret
xor
xorb
cmpsb
add
xorb
add
out
or
cmp
in
addb
mov
out
out
scas
push
xor
addb
sub
cmp
out
mov
push
test
add
xor
inc
sub
out
pusha
mov
stc
xchg
adc
add
in
cmpsl
mov
out
add
int3
je
in
repz
xor
addb
mov
out
add
xchg
adc
xlat
pushf
pop
in
addb
xlat
xor
ret
das
enter
xor
nop
jae
inc
in
addb
adc
dec
in
xorb
jns
xlat
je
adcl
orb
inc
jmp
xor
add
arpl
outsl
arpl
gs
add
add
xor
sarb
in
jmp
xorb
pop
push
push
and
cld
cmpsb
push
inc
jecxz
pop
in
xor
addb
sbb
xorb
xorb
jg
out
add
inc
jb
inc
push
out
out
xchg
pop
mov
add
mov
add
xor
add
push
fidivl
xor
sub
xchg
ljmp
xor
xor
enter
fistl
xor
cli
mov
jmp
addb
mov
jle
das
in
xor
mov
sbb
mov
gs
lahf
sahf
sbbb
mov
xor
leave
shl
enter
push
in
add
xor
jae
push
adc
in
xor
mov
jae
sub
xchg
mov
push
daa
push
scas
lahf
stc
in
xorb
mov
cmp
xor
push
pushf
cmp
out
xor
xlat
rcll
xorb
mov
xchg
push
fsubrp
xor
and
jmp
add
xor
imul
loop
out
xor
sbb
and
xchg
jmp
xor
add
cli
shrb
stos
fldlg2
add
add
ss
stc
repnz
xorb
or
jecxz
sahf
mov
mov
mov
in
add
xor
mov
xor
inc
and
in
in
xor
xor
jns
das
sub
xor
add
ja
sahf
adc
inc
gs
xorb
pop
mov
inc
ljmp
dec
jnp
mov
xor
add
or
xor
xor
add
pushf
in
add
push
push
sub
xorb
push
dec
pushf
add
inc
fucom
sahf
lret
jo
xor
add
popa
sbb
jmp
xor
xor
jb
sbb
push
outsb
ds
pop
mov
xorb
add
lcall
xor
bound
repnz
in
add
outsl
fists
in
xor
sbb
xor
jmp
xor
xchg
pushf
xchg
pop
sub
mov
insl
js
cld
pusha
pop
jmp
xor
xor
ss
adc
add
xor
testb
sub
orb
lret
inc
adcb
xor
xor
mov
out
ds
aam
add
and
aam
out
divl
nop
xchg
insb
lret
cmp
mov
xor
cmp
dec
rcl
xchg
daa
into
mov
in
xorb
jmp
add
xor
xorb
repnz
out
pop
pusha
pop
enter
sti
out
push
lcall
in
add
adc
pop
push
cmp
xor
dec
or
xor
mov
insb
xor
lcall
pushf
movsb
adc
ljmp
in
add
xor
movsb
and
cmp
out
mov
loope
clc
pop
or
xor
test
sub
add
popa
add
jl
jmp
xor
gs
inc
insb
dec
aad
xor
popa
mov
or
xorb
popf
pop
int
xor
xor
adc
push
je
xor
push
sub
xor
bnd
xor
xchg
das
jp
mov
xorb
xor
daa
out
in
xor
or
mov
popa
and
add
xorb
xor
in
sbb
push
in
xor
cltd
div
popa
out
xor
push
mov
imul
sti
mov
add
push
subl
out
mov
enter
mov
jmp
addb
add
shr
xor
inc
push
dec
mov
or
in
addb
fsubrp
xchg
in
addb
inc
cmp
push
mov
hlt
in
xorb
outsb
push
add
push
repnz
xor
dec
adc
fldenv
dec
pop
insb
mov
jmp
add
jle
lcall
pop
sub
mov
loopne
lds
cmp
xor
mov
aad
fnstenv
jecxz
je
stc
inc
pushf
aam
xor
xor
cwtl
ljmp
xor
add
inc
push
push
mov
in
xor
sbb
mov
in
xor
lods
xchg
roll
xor
fsub
sub
mov
dec
pop
sti
out
add
aas
test
sub
add
inc
jg
fistpl
addb
fcmovnbe
in
xor
sub
pop
fwait
jg
pop
adc
push
cltd
pop
or
xor
xorb
fisttpl
sahf
add
jmp
xorb
sbb
out
mov
in
xor
push
imul
in
xor
adc
cmp
out
out
xor
push
cmp
and
addb
mov
sub
jno
in
in
add
xor
popf
mov
sub
or
add
xor
rolb
sbb
add
adcb
mov
lds
mov
out
mov
add
out
add
rcrb
in
xor
adc
in
xlat
push
fbstp
pusha
and
incb
sub
js
dec
pop
push
push
out
add
xchg
insl
or
sub
in
xor
xor
repz
jp
xchg
dec
out
add
repz
in
xor
jge
pop
repnz
shlb
adc
mov
adc
add
dec
aam
cmp
xchg
in
xor
add
bsf
cs
es
fdivrl
fnstcw
in
add
xor
adc
cltd
in
xor
add
cmp
pop
fnsave
push
pusha
pop
in
xor
and
in
xorb
xlat
mov
sub
xor
add
por
addb
inc
mov
sbb
lret
mov
xor
ja
dec
xchg
ret
and
sbbb
pushf
fwait
mov
sbb
jecxz
out
push
cmp
mov
xorb
add
mov
xchg
out
xorb
rclb
sub
xor
out
adc
iret
fldz
xor
xlat
xor
inc
push
loop
xor
xor
and
sub
pop
call
add
loop
xchg
lods
pop
out
cmpb
iret
imul
cmc
out
test
inc
xor
test
repz
ja
shr
addb
ss
xchg
popf
in
xorb
dec
mov
addr16
movsl
in
andb
xchg
lret
inc
sub
sub
incl
fwait
rorb
pop
jecxz
or
in
xor
xor
mov
je
mov
add
or
fildl
xorb
gs
ja
cmp
stos
cs
xchg
es
rcr
xor
jns
add
xchg
in
xor
movsb
mov
xorb
xor
lods
repz
and
in
xor
adcb
sahf
lods
out
xor
fadds
dec
mov
xor
xchg
pop
inc
xlat
and
mov
dec
rcll
std
xchg
adc
xor
pop
pop
mov
xorb
xor
xorl
xor
cmp
jne
and
subb
cltd
sbb
xor
popl
jno
aas
in
addb
mov
sti
int3
push
lock
seta
or
add
xor
pop
and
test
adc
in
xor
add
movl
stc
and
in
add
xor
das
outsl
in
xor
mov
lcall
loopne
aad
je
pusha
out
out
sub
lock
add
jl
insb
mov
bound
aas
icebp
lds
bswap
out
xor
xor
cltd
js
mov
xor
fsub
pop
daa
test
sbb
and
out
xchg
arpl
mov
sbb
in
add
mov
sub
lret
jecxz
loop
add
ds
add
hlt
and
test
cld
enter
add
adc
enter
jbe
in
xor
xor
sbb
in
in
xorb
out
test
insl
adc
xor
xchg
dec
gs
mov
xor
push
mov
dec
xor
add
xorb
icebp
jbe
mov
out
lea
cltd
mov
cmc
in
add
xor
and
in
xor
add
xchg
sahf
sbb
add
mov
add
dec
rcrl
in
xor
mov
push
jmp
add
add
and
in
add
sub
mov
xor
xor
and
jb
add
inc
out
addb
fdiv
push
push
push
adc
xor
addb
inc
jne
int3
call
subb
fxch
cs
out
xor
jns
pop
xchg
mov
xor
jp
jns
mov
lcall
xorb
or
mov
xor
iret
sub
xor
xorb
out
std
stos
loopne
push
movsb
in
xor
add
jo
je
add
mov
xor
xor
dec
jle
adc
pop
jns
fsubr
add
and
sbb
xor
les
xchg
addb
mov
pop
out
dec
pop
or
in
xorb
mov
add
gs
loope
sub
out
adcb
sbb
add
cbtw
nop
out
add
and
scas
sub
dec
out
sarb
fcmovu
lret
dec
out
add
sbb
dec
out
outsl
dec
push
cltd
and
dec
aam
hlt
fsubrs
or
xorb
inc
popf
xchg
push
aam
insb
out
loopne
and
decl
frstor
fidivs
in
xorb
lcall
xor
std
clc
shrl
jl
out
sbbb
add
in
xorb
cmpsl
sub
dec
or
jne
add
hlt
push
hlt
int
xchg
pop
in
xor
xor
pop
fwait
inc
pop
cmc
adc
xor
jmp
adc
sub
push
push
mov
in
xorb
out
and
sbb
jmp
add
xor
mov
loop
out
add
adc
xor
push
xor
subl
out
cmpb
pushf
in
mov
out
xor
pushf
into
les
and
xorb
adc
and
addb
add
jmp
mov
out
mov
stc
lock
fsubs
jmp
xor
xor
cwtl
and
and
mov
js
stos
psubusb
xor
mov
pop
xchg
mov
jmp
xor
add
iret
push
jmp
xorb
sub
js
pop
ficoml
jmp
mov
popa
in
xorb
inc
add
mov
pop
mov
std
loopne
out
dec
pop
xor
xor
ja
mov
mov
xor
add
movsl
or
out
lahf
aad
dec
pusha
loopne
in
out
andb
inc
inc
xlat
fbld
mov
jge
pop
mov
out
mov
mov
repnz
xorb
or
into
inc
mov
adc
add
lcall
sbbb
jg
mov
xor
xor
dec
fsubl
lods
dec
in
xor
rcrl
or
xor
and
xor
sbb
stos
or
cmpsl
les
out
outsb
jle
xor
xor
mov
mov
lret
out
ret
xor
hlt
jecxz
pop
je
xor
mov
mov
xorb
adc
fsubrl
add
lahf
xchg
lods
in
xor
cmp
inc
push
jmp
add
add
mov
jmp
add
xor
lahf
sbb
out
xor
or
mov
out
xor
inc
and
jp
xorb
jp
push
mov
out
xor
mov
xchg
aam
rcr
sub
addb
loop
or
pop
in
add
xor
es
jmp
addb
jnp
add
jmp
addb
mov
cmpb
data16
add
push
mov
addr16
add
addb
mov
stc
movaps
jnp
je
xor
dec
add
out
xor
int
jbe
xor
xor
dec
xor
adc
push
in
xor
rcll
out
pop
fucomp
iret
inc
inc
into
and
pushf
add
outsb
out
outsl
add
jmp
insl
cmp
add
call
add
xchg
out
testl
ja
mov
fldpi
xor
add
inc
cmp
push
out
xor
cmp
add
xor
out
ljmp
add
insl
rclb
dec
test
add
rorb
mov
add
sbb
mov
xor
arpl
xchg
in
addb
add
js
sbb
xorb
ret
gs
jb
dec
jmp
addb
clc
xlat
pusha
sub
jb
leave
in
add
add
push
ljmp
sti
les
push
sub
jmp
mov
cmp
add
leave
inc
pusha
repnz
out
jmp
xor
add
imulb
out
cli
in
addb
jne
or
add
jnp
icebp
js
in
in
xor
in
jle
cmc
or
xor
popf
dec
cmp
rcrb
in
xor
orb
cmc
mov
aad
cmp
add
jno
jmp
add
add
sub
xor
dec
rol
jmp
xor
and
jne
sarb
xor
dec
cli
aad
sub
mov
xor
aad
sbb
xor
xor
cld
mov
xor
hlt
lods
imul
xor
mov
sub
mov
sub
add
mov
stc
xor
xor
xor
mov
es
por
fisttps
add
or
inc
mov
or
xchg
out
add
es
lcall
jmp
xor
xor
das
enter
loopne
out
mov
imul
jg
xor
and
mov
push
idivb
xor
fxam
sbb
add
add
push
adc
dec
dec
ret
in
xor
or
xor
inc
out
pop
lret
jne
mov
addb
sbb
leave
dec
scas
out
xor
cmp
jb
add
add
xor
aad
mov
xorb
mov
add
xor
das
data16
xor
scas
mov
cwtl
subb
out
xor
into
pop
loopne
xorb
jns
xor
repz
in
add
xor
jns
lea
xchg
insb
out
add
sub
push
out
xor
add
ljmp
pop
push
gs
fwait
xchg
adc
jae
mov
mov
xor
or
aad
add
outsb
lea
subl
sub
loop
inc
mov
xor
aaa
insb
xor
call
addb
cs
sahf
and
xor
daa
inc
inc
sbb
in
xor
mov
jbe
out
adcb
xor
add
cmp
aad
fstpt
in
xor
xor
add
add
inc
idivl
out
xor
push
movsl
xchg
mulb
out
inc
jp
or
sbb
pop
movsb
js
scas
jo
xorb
xor
rcll
in
add
addb
es
int3
xchg
cli
gs
popf
xor
xor
lahf
mov
and
in
add
jnp
mov
xor
jle
iret
scas
in
xor
fidivl
add
xor
dec
xchg
inc
add
push
mov
in
add
shr
mov
jmp
xorb
mov
add
adc
inc
jmp
xorb
mov
mov
cmp
add
mov
cmc
jae
in
xorb
into
fsubrp
lea
xor
mov
push
test
out
add
push
ljmp
cmc
push
sbb
xorb
jae
cmp
test
