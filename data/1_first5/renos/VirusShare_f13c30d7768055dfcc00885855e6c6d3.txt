jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
aaa
xor
xor
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
cmp
jb
mov
mov
lea
dec
dec
mov
mov
lea
inc
dec
lea
mov
mov
xchg
lea
xchg
xchg
xchg
dec
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
cmp
jne
xchg
mov
xchg
mov
lea
lea
lea
inc
xchg
inc
dec
dec
mov
xchg
mov
mov
mov
mov
dec
inc
inc
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
jb
mov
mov
lea
dec
dec
mov
mov
lea
inc
dec
lea
mov
mov
xchg
lea
xchg
xchg
xchg
dec
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
add
add
add
xor
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
xchg
xchg
lea
lea
xchg
cmp
jl
mov
inc
inc
mov
mov
mov
mov
xchg
mov
mov
mov
lea
mov
inc
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
jl
lea
xchg
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
inc
inc
dec
dec
je
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
cmp
jb
mov
mov
mov
xchg
xchg
mov
mov
dec
jne
xchg
dec
inc
mov
mov
inc
inc
dec
mov
xchg
mov
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
mov
pop
ret
add
xor
cmp
xor
aaa
add
add
xor
xor
xor
cmp
add
add
xor
aaa
add
add
add
xor
xor
xor
xor
xor
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
xor
cmp
xor
cmp
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
xor
xor
cmp
xor
xor
add
add
add
add
add
xor
xor
xor
xor
add
add
add
cmp
add
add
xor
xor
xor
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
cmp
cmp
cmp
add
add
add
add
in
add
mov
mov
mov
lea
mov
cmp
jle
lea
lea
dec
dec
dec
lea
mov
mov
dec
mov
mov
xchg
mov
lea
mov
mov
cmp
je
call
mov
mov
mov
mov
xchg
xchg
mov
lea
lea
lea
lea
mov
mov
mov
inc
dec
je
mov
inc
mov
xor
divl
test
jne
cmp
jl
lea
xchg
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
inc
inc
dec
dec
je
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jp
lea
cmp
je
xchg
mov
mov
xchg
xchg
mov
lea
inc
dec
dec
dec
jne
xchg
inc
xchg
xchg
inc
dec
dec
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jb
mov
mov
lea
dec
dec
mov
mov
lea
inc
dec
lea
mov
mov
xchg
lea
xchg
xchg
xchg
dec
mov
cmp
je
jmp
cmp
jb
mov
mov
mov
xchg
xchg
mov
mov
dec
jne
xchg
dec
inc
mov
mov
inc
inc
dec
mov
xchg
mov
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
lea
push
mov
add
mov
mov
lea
xchg
mov
mov
lea
inc
inc
dec
dec
je
mov
lea
xchg
mov
push
mov
push
call
mov
mov
mov
pop
ret
push
mov
add
mov
mov
mov
xchg
xchg
lea
lea
xchg
cmp
jl
mov
inc
inc
mov
mov
mov
mov
xchg
mov
mov
mov
lea
mov
inc
mov
cmp
je
jmp
cmp
jb
mov
mov
mov
xchg
xchg
mov
mov
dec
jne
xchg
dec
inc
mov
mov
inc
inc
dec
mov
xchg
mov
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
cmp
je
call
cmp
jp
lea
cmp
je
xchg
mov
mov
xchg
xchg
mov
lea
inc
dec
dec
dec
jne
xchg
inc
xchg
xchg
inc
dec
dec
mov
sub
mov
cmp
jne
xchg
mov
xchg
mov
lea
lea
lea
inc
xchg
inc
dec
dec
mov
xchg
mov
mov
mov
mov
dec
inc
inc
push
mov
mov
xor
call
mov
cmp
jl
lea
xchg
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
inc
inc
dec
dec
je
mov
mov
mov
call
cmp
jb
mov
mov
lea
dec
dec
mov
mov
lea
inc
dec
lea
mov
mov
xchg
lea
xchg
xchg
xchg
dec
push
mov
mov
xor
call
mov
mov
mov
mov
mov
xchg
xchg
mov
lea
lea
lea
lea
mov
mov
mov
inc
dec
je
mov
inc
mov
lea
mov
cmp
jle
lea
lea
dec
dec
dec
lea
mov
mov
dec
mov
mov
xchg
mov
lea
mov
lea
mov
push
mov
jmp
cmp
jne
xchg
mov
xchg
mov
lea
lea
lea
inc
xchg
inc
dec
dec
mov
xchg
mov
mov
mov
mov
dec
inc
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jb
mov
mov
mov
xchg
xchg
mov
mov
dec
jne
xchg
dec
inc
mov
mov
inc
inc
dec
mov
xchg
mov
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
xchg
xchg
lea
lea
xchg
cmp
jl
mov
inc
inc
mov
mov
mov
mov
xchg
mov
mov
mov
lea
mov
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
lea
xchg
mov
mov
lea
inc
inc
dec
dec
je
mov
lea
xchg
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
mov
lea
lea
lea
lea
mov
mov
mov
inc
dec
je
mov
inc
mov
sub
add
add
mov
mov
lea
mov
cmp
jle
lea
lea
dec
dec
dec
lea
mov
mov
dec
mov
mov
xchg
mov
lea
mov
lea
pushl
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
call
push
call
mov
cmp
jb
mov
mov
lea
dec
dec
mov
mov
lea
inc
dec
lea
mov
mov
xchg
lea
xchg
xchg
xchg
dec
mov
mov
call
mov
mov
mov
cmp
jl
lea
xchg
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
inc
inc
dec
dec
je
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jne
xchg
mov
xchg
mov
lea
lea
lea
inc
xchg
inc
dec
dec
mov
xchg
mov
mov
mov
mov
dec
inc
inc
mov
mov
movl
lea
xchg
mov
mov
lea
inc
inc
dec
dec
je
mov
lea
xchg
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
mov
lea
lea
lea
lea
mov
mov
mov
inc
dec
je
mov
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
xchg
mov
mov
lea
inc
inc
dec
dec
je
mov
lea
xchg
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jp
lea
cmp
je
xchg
mov
mov
xchg
xchg
mov
lea
inc
dec
dec
dec
jne
xchg
inc
xchg
xchg
inc
dec
dec
mov
pop
ret
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
shll
ljmp
stos
mov
mov
mov
mov
int3
int3
mov
stos
test
mov
ror
mov
stos
test
mov
shrb
scas
cmpsl
test
int3
xchg
scas
rcrb
mov
int3
movsl
scas
mov
ljmp
int3
movsl
int3
scas
int3
mov
int3
test
std
int3
dec
ljmp
int3
int3
int3
int3
int3
lahf
inc
sub
xor
cmp
or
cmp
lock
xor
int3
out
mov
push
repnz
xor
mov
sub
mov
xor
mov
into
icebp
mov
enter
loop
mov
in
icebp
mov
imul
and
int3
inc
xor
mov
ret
inc
xor
add
ret
inc
xor
out
movsb
ret
inc
xor
in
imul
xor
shrl
ret
inc
xor
leave
imul
int3
inc
xor
iret
std
or
xor
xor
xchg
xchg
or
inc
add
inc
adc
or
mov
or
inc
sub
add
pop
inc
popl
sbb
inc
mov
pushf
inc
popl
popl
pushf
mov
add
mov
inc
vpmacssdqh
add
mov
pushf
inc
popl
pushf
xchg
inc
vpmacssdqh
inc
iret
cld
int3
int3
int3
inc
xchg
inc
test
inc
clc
int
sub
cmp
cmp
dec
int3
int3
int3
inc
adc
adc
mov
int3
leave
push
sbb
adc
int3
int
sub
and
or
int3
cmpsb
int3
cmpsb
int3
inc
and
enter
pushf
inc
popl
pushf
add
and
mov
cmp
push
pop
int3
int3
int3
inc
and
int3
rcl
and
int
sub
xor
and
fmul
vpmacssdqh
mov
int
sub
xor
and
fmul
vpmacssdqh
mov
dec
rcr
xor
out
cmp
int3
int3
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
and
inc
lahf
xor
into
inc
sbb
sbb
or
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
dec
sub
dec
xor
inc
xor
int3
mov
loopne
and
enter
idivl
cmp
inc
cmp
mov
int
sub
xor
popl
inc
adc
int3
cmpsb
faddl
add
or
pushf
inc
popl
pushf
xchg
movsb
int3
dec
int3
int3
cmpsb
int3
inc
popl
popl
pushf
mov
int3
cmpsb
int3
inc
pop
pushf
inc
popl
pushf
mov
scas
inc
inc
push
lock
cmp
cmp
ss
sub
cmp
cmp
or
cs
das
xchg
push
ror
or
inc
sub
enter
sti
adc
cmpsl
int3
int3
int3
mov
mov
int3
int3
mov
xchg
int3
int3
int3
mov
jl
and
int3
int3
int3
fmull
and
int3
int3
jecxz
mov
int3
int3
and
rolb
test
sub
push
int3
test
dec
cmp
mov
ror
mov
and
lret
mov
cmp
int3
push
mov
fcompl
or
sub
cmp
fildl
and
cmp
cmp
push
int3
inc
mov
inc
ss
adc
cmp
cmp
or
push
cmp
cmp
jecxz
inc
and
dec
adc
cmp
inc
cmp
iret
les
int3
adc
ret
dec
int3
int3
adc
inc
xor
pop
enter
cmp
int3
mov
int3
inc
cmp
cmp
cmp
xor
leave
push
inc
int3
int3
int3
adc
inc
ss
lahf
cmp
into
std
push
inc
lahf
xor
cmp
cmp
ss
testb
ss
cmp
int3
mov
int3
adc
inc
ss
push
inc
lahf
xor
xor
cmp
int
std
push
inc
lahf
xor
dec
int3
int
out
cmp
int3
int3
inc
ss
or
xor
int3
inc
xor
or
ss
lahf
xor
dec
int3
cmp
int3
mov
or
inc
sub
or
les
mov
cmp
int3
int3
outsb
les
std
or
ret
dec
int3
std
push
inc
ffreep
dec
int3
leave
sbbb
int3
int
out
cmp
int3
int3
outsb
ret
dec
int3
std
or
les
inc
dec
enter
inc
aaa
std
or
ret
dec
int3
inc
dec
enter
std
push
inc
ffreep
dec
int3
inc
dec
enter
std
or
ret
dec
int3
inc
lahf
aaa
inc
pop
enter
std
or
les
leave
orb
int3
std
push
inc
ffreep
dec
int3
leave
sbbb
int3
int
out
cmp
int3
int3
inc
aaa
std
or
aaa
inc
dec
enter
decb
inc
cmp
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
xchg
xchg
lea
lea
xchg
cmp
jl
mov
inc
inc
mov
mov
mov
mov
xchg
mov
mov
mov
lea
mov
inc
movl
cmp
jl
lea
xchg
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
inc
inc
dec
dec
je
push
call
mov
call
mov
cmp
jne
xchg
mov
xchg
mov
lea
lea
lea
inc
xchg
inc
dec
dec
mov
xchg
mov
mov
mov
mov
dec
inc
inc
movl
lea
push
push
mov
sub
push
mov
push
call
mov
mov
call
mov
cmpl
je
cmp
jp
lea
cmp
je
xchg
mov
mov
xchg
xchg
mov
lea
inc
dec
dec
dec
jne
xchg
inc
xchg
xchg
inc
dec
dec
mov
mov
call
mov
cmpl
je
lea
xchg
mov
mov
lea
inc
inc
dec
dec
je
mov
lea
xchg
mov
cmp
je
mov
subb
mov
mov
mov
mov
xchg
xchg
mov
lea
lea
lea
lea
mov
mov
mov
inc
dec
je
mov
inc
mov
xorb
cmp
jp
lea
cmp
je
xchg
mov
mov
xchg
xchg
mov
lea
inc
dec
dec
dec
jne
xchg
inc
xchg
xchg
inc
dec
dec
incl
mov
cmp
jne
cmp
jb
mov
mov
mov
xchg
xchg
mov
mov
dec
jne
xchg
dec
inc
mov
mov
inc
inc
dec
mov
xchg
mov
mov
call
lea
xchg
mov
mov
lea
inc
inc
dec
dec
je
mov
lea
xchg
mov
push
mov
push
call
cmpl
je
lea
xchg
mov
mov
lea
inc
inc
dec
dec
je
mov
lea
xchg
mov
mov
mov
mov
xchg
xchg
mov
lea
lea
lea
lea
mov
mov
mov
inc
dec
je
mov
inc
mov
lea
mov
cmp
jle
lea
lea
dec
dec
dec
lea
mov
mov
dec
mov
mov
xchg
mov
lea
mov
push
mov
push
call
mov
pop
ret
add
jb
gs
xor
cs
insb
add
add
push
imul
jb
je
arpl
push
mov
add
mov
lea
mov
cmp
jle
lea
lea
dec
dec
dec
lea
mov
mov
dec
mov
mov
xchg
mov
lea
mov
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
cmp
jl
lea
xchg
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
inc
inc
dec
dec
je
movb
mov
mov
mov
mov
xchg
xchg
mov
lea
lea
lea
lea
mov
mov
mov
inc
dec
je
mov
inc
mov
mov
pop
ret
nop
push
mov
add
lea
xchg
mov
mov
lea
inc
inc
dec
dec
je
mov
lea
xchg
cmp
jne
xchg
mov
xchg
mov
lea
lea
lea
inc
xchg
inc
dec
dec
mov
xchg
mov
mov
mov
mov
dec
inc
inc
call
test
jne
mov
jmp
movw
cmp
jb
mov
mov
lea
dec
dec
mov
mov
lea
inc
dec
lea
mov
mov
xchg
lea
xchg
xchg
xchg
dec
call
lea
mov
pop
ret
mov
push
mov
add
lea
xchg
mov
mov
lea
inc
inc
dec
dec
je
mov
lea
xchg
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
lea
xchg
mov
mov
lea
inc
inc
dec
dec
je
mov
lea
xchg
movl
movl
mov
push
mov
push
call
cmp
jb
mov
mov
mov
xchg
xchg
mov
mov
dec
jne
xchg
dec
inc
mov
mov
inc
inc
dec
mov
xchg
mov
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
jb
mov
mov
mov
xchg
xchg
mov
mov
dec
jne
xchg
dec
inc
mov
mov
inc
inc
dec
mov
xchg
mov
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
cmp
jl
lea
xchg
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
inc
inc
dec
dec
je
push
call
mov
call
cmp
jne
xchg
mov
xchg
mov
lea
lea
lea
inc
xchg
inc
dec
dec
mov
xchg
mov
mov
mov
mov
dec
inc
inc
mov
pop
ret
add
add
add
xor
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
xor
xor
xor
cmp
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
add
add
xor
xor
cmp
xor
xor
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
xor
add
add
aaa
add
add
add
add
add
xor
xor
aaa
add
add
add
add
add
add
add
add
jo
imul
add
in
add
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
lea
mov
cmp
jle
lea
lea
dec
dec
dec
lea
mov
mov
dec
mov
mov
xchg
mov
lea
mov
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
lea
xchg
mov
mov
lea
inc
inc
dec
dec
je
mov
lea
xchg
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
mov
pop
ret
add
xor
xor
add
add
add
add
xor
add
xor
cmp
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
xor
add
add
xor
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
xor
xor
cmp
add
add
add
add
jne
mov
cmp
jb
mov
mov
mov
xchg
xchg
mov
mov
dec
jne
xchg
dec
inc
mov
mov
inc
inc
dec
mov
xchg
mov
mov
mov
mov
lea
call
cmp
jp
lea
cmp
je
xchg
mov
mov
xchg
xchg
mov
lea
inc
dec
dec
dec
jne
xchg
inc
xchg
xchg
inc
dec
dec
ret
ret
lea
imul
mov
and
cmp
or
add
cmp
lahf
add
mov
add
add
add
push
add
and
mov
add
add
inc
cmp
jns
xchg
loopne
mov
in
and
add
in
add
xor
loop
add
add
push
push
xorl
add
sbb
mov
movsb
sbb
popa
mov
inc
jo
mov
sbbl
in
cmp
mov
leave
ds
jb
pushf
pop
aaa
rolb
inc
add
ficompl
add
add
mov
aaa
add
jg
popf
push
add
setge
sbb
mov
push
inc
cli
add
sti
add
add
push
in
test
pop
call
add
add
out
add
std
add
sti
cmc
or
int
add
mov
push
jl
sub
add
add
adc
adc
das
shl
mov
add
cwtl
mov
xchg
sbb
sti
sub
or
and
push
outsl
pop
add
adc
mov
cld
cmpsl
lock
std
inc
sahf
lret
add
add
imul
pop
xorl
add
add
sub
jae
add
stos
add
add
lret
mov
mov
xor
add
add
and
xchg
js
lahf
mov
cmp
add
imul
add
or
pop
in
int
aad
stos
mov
inc
fdivrs
add
push
cmc
push
mov
rcll
add
lods
pop
mov
jno
ret
and
pushf
add
add
push
ja
add
mov
add
add
add
dec
inc
sbb
scas
mov
cmpsb
sub
pop
lds
sub
xor
jge
cs
jge
add
or
cmp
lea
add
push
jne
es
add
in
add
es
add
add
roll
loope
fwait
mov
xchg
les
cmp
add
jbe
xchg
add
dec
fsubrs
or
mov
dec
pop
jmp
sbb
xchg
lds
mov
add
jg
add
loopne
ret
addb
dec
in
cli
mov
add
les
into
rclb
mov
dec
int
add
insl
mov
jg
jns
sbb
xchg
or
rcrb
cmpsb
lret
mov
jns
sub
popa
inc
adc
jp
add
adcl
add
scas
dec
outsl
je
add
sbb
add
sar
aam
add
mov
add
add
fidivrl
add
fisubl
add
add
jb
mov
add
add
add
out
fildll
mov
adc
add
add
and
mov
or
ja
mov
jmp
cmc
lock
add
push
enter
gs
es
lcall
lret
inc
add
insl
mov
stos
add
xchg
mov
or
add
jno
in
fs
mov
lods
add
and
add
fdiv
ret
pop
je
or
ss
lock
sub
sub
add
adc
ss
mov
add
data16
ljmp
xor
push
xchg
rorl
sbbl
jle
add
jl
add
add
fwait
or
jge
xor
mov
cwtl
inc
popl
std
std
or
movsb
push
ret
ret
adc
das
xor
leave
repz
cmpb
int3
sbb
push
sub
decb
xor
cwtl
add
lret
int
repz
sbb
xchg
lcall
fsub
pushf
hlt
sub
inc
outsb
xlat
ret
popf
test
daa
pushf
jg
stc
push
mov
inc
lods
mov
out
and
adc
popa
xor
popa
mov
xchg
fdivrs
xor
lret
vpsubb
mov
test
in
repnz
ret
fcoms
xor
push
imul
bound
stc
push
in
xchg
mov
and
imul
inc
test
pop
mov
add
cmp
mov
div
bound
pop
sbb
sub
imul
adcb
jmp
jne
cmp
xchg
sub
mov
in
aas
push
fwait
sti
shld
adcl
fs
cmovg
filds
or
fstps
push
les
outsl
outsl
xchg
frstpm(287
fisttpll
pop
mov
out
pop
dec
scas
xchg
adc
popa
pushf
mov
add
int3
mov
test
adc
inc
push
mov
fidivs
mov
add
jecxz
neg
movb
std
sarl
mov
mov
mov
mov
sub
or
pop
adc
mov
jecxz
lock
xchg
out
dec
xor
and
cmp
shl
add
negb
pusha
xchg
insl
lock
es
rdtsc
imul
mov
inc
cld
or
je
mov
push
pop
and
pop
push
pop
pop
lds
shlb
cltd
jo
mov
adc
ret
cs
cmpsb
stc
add
call
cmp
push
fstpl
sbb
inc
mov
insb
sub
es
sbb
shl
add
mov
test
mov
mov
add
dec
aad
pop
test
add
cmpsb
sbb
mov
pop
mov
jns
out
or
test
pushl
mov
xor
call
mov
lds
mov
pop
push
shll
outsb
aam
pop
xor
or
push
setnp
es
cltd
fmul
jne
xchg
je
loopne
ret
out
insb
lods
xor
push
push
jns
loop
in
adc
xchg
fmuls
sub
out
lfs
outsb
loope
push
xor
mov
dec
inc
outsb
dec
sbb
mov
out
lods
mov
xchg
jmp
int3
xor
repnz
out
push
js
fimull
pop
jne
push
mov
mov
call
les
sbb
arpl
push
mov
aas
adc
dec
mov
lock
cmp
pop
je
imul
or
mov
push
dec
push
and
dec
fisubl
les
cmp
scas
add
push
lds
inc
aam
sbb
das
mov
enter
mov
pop
cmpsl
arpl
inc
ret
lret
cmpsl
dec
xor
daa
inc
xor
push
cmp
mov
int3
ljmp
fisubs
jecxz
stc
stos
mov
scas
test
jno
sbb
inc
movsb
sbb
mov
jbe
fstpt
in
jecxz
xchg
enter
daa
jl
dec
cmp
out
imul
jno
mov
adc
mov
lret
movsl
inc
negb
cmpsl
es
lahf
aam
and
fwait
ret
sub
or
lock
cmpsb
sub
adc
cs
pop
outsb
xchg
push
or
sub
lods
cmp
adc
lock
adc
or
aas
adcb
sbb
adc
xor
push
jg
or
sti
sub
mov
xor
aam
nop
pop
mov
pusha
add
adc
sbb
andb
mov
hlt
arpl
pusha
in
and
mov
fdivs
mov
lret
clc
rorl
movsl
sbb
sti
xor
jmp
or
mov
push
stc
mov
cmpsl
fs
shlb
scas
repz
lods
mov
cmp
cli
das
xchg
aad
jnp
push
cmp
xchg
into
mov
fisubs
ret
mov
pop
cmp
xor
mov
push
imul
hlt
leave
add
xchg
popa
data16
jle
sbb
xor
cli
cvtpi2ps
stc
fsubr
stos
jl
sti
mov
pop
repnz
ret
popa
fs
aaa
mov
les
repz
xor
xchg
sahf
mov
call
jecxz
in
pop
jge
adc
jecxz
jmp
push
adc
mov
cmc
inc
push
dec
push
inc
sub
das
aas
or
mov
dec
cmc
push
or
push
push
fsub
repz
fcmovnb
inc
jnp
std
jp
aas
cwtl
test
cmc
mov
xchg
lcall
xor
dec
loopne
rcr
jl
mov
mov
or
stos
das
je
mov
loope
sbb
bound
push
shll
jo
negb
mov
dec
or
cmpsl
jnp
or
icebp
nop
test
cld
cmp
lret
add
sti
and
hlt
mov
in
cmp
add
push
aam
pop
insl
ret
mov
aad
fstl
fwait
or
and
sub
jns
push
xor
push
dec
dec
xchg
mov
popf
add
addps
movsl
cltd
std
ret
pop
test
je
mov
push
out
inc
xlat
dec
cmp
push
shrl
mov
sbb
outsb
ja
rep
push
pop
mov
stos
push
decb
stc
xchg
add
adc
iret
push
jno
repz
xor
push
fadds
inc
or
pop
adc
ja
lcall
pop
fwait
sub
ret
pop
stc
jne
xlat
ss
sbb
bound
mull
ljmp
sub
jmp
cli
add
dec
cmpsb
mov
mov
mov
fimull
insb
and
xor
xchg
cltd
jnp
jmp
xchg
int3
sbb
lods
add
popf
add
cltd
push
std
clc
sbb
push
addr16
insb
pusha
inc
in
jnp
cmc
xor
clc
or
int3
adc
jle
iret
dec
pop
xchg
ret
xor
test
inc
sahf
repz
jae
out
stc
push
orb
or
push
xor
mov
sub
xchg
imul
mov
scas
fs
lds
leave
cmpl
test
scas
hlt
clc
loope
arpl
testb
into
jge
cmpsb
xchg
sbb
inc
shll
mov
or
outsb
add
popa
stc
int3
aad
aaa
pop
adc
test
add
lds
mov
jge
arpl
in
and
es
push
fidivrs
and
test
in
lret
enter
daa
jnp
mov
ss
cmp
sub
dec
mov
repnz
dec
xor
and
and
outsb
aas
push
test
stos
add
inc
test
xlat
cmpsb
scas
lret
sub
js
push
and
lods
inc
jmp
loope
pop
imull
das
aad
and
pop
adc
in
aas
popl
cltd
call
add
mov
push
xchg
outsl
int
inc
in
pmullw
lcall
pop
fdivrl
inc
adc
dec
push
outsb
popf
pop
push
test
aaa
pop
jg
fnstenv
scas
mov
mov
addb
lahf
inc
push
cmp
lock
and
pushf
and
lret
xchg
shll
out
mov
cmp
or
pop
mov
imul
adc
out
jmp
dec
fs
sbb
adc
outsb
stc
ss
frstor
mov
out
rclb
xor
pop
cmp
inc
mov
into
jno
bound
dec
loopne
movsl
rcrb
sbb
addl
imul
mov
pop
out
out
sbb
jo
mov
sub
sbb
in
sti
insl
mov
aad
jecxz
nop
cmp
adc
jle
inc
dec
lahf
jle
cmpsl
lret
iret
mov
ret
cmp
lea
ja
or
push
fistps
add
pushf
push
xlat
fucomi
stos
stos
insl
cs
pop
ret
inc
fldln2
sahf
inc
inc
push
in
cmpsl
imul
addr16
je
add
jecxz
jnp
movb
std
and
or
lods
and
mov
bound
lret
lahf
push
stos
shll
push
fnstsw
lock
test
das
push
rcrl
je
mov
and
inc
ljmp
cli
pop
insl
mov
imul
jp
inc
mov
addr16
loope
arpl
lret
jo
leave
mov
rorb
and
xor
sub
mov
jbe
jo
aaa
fnstsw
and
xchg
int3
xor
ljmp
test
mov
mov
jmp
in
xchg
push
shll
movzwl
add
call
test
xchg
cwtl
push
mov
dec
dec
mov
in
xchg
sahf
mov
pop
adc
push
out
into
cmp
add
call
shlb
cmp
lods
or
pop
xor
sub
push
xchg
xlat
mov
into
pop
ljmp
cmpsb
xchg
and
or
lahf
sbbl
rcll
xor
inc
pop
out
sub
mov
cmp
in
les
cmp
xchg
mov
mov
sub
in
sbb
or
jp
int
mov
loop
mov
sub
orl
insb
in
in
pusha
push
ja
fucomip
stos
mov
jmp
bound
out
sub
popf
sub
jecxz
lea
sub
sub
sub
jnp
dec
mov
fldt
push
push
sbb
adc
mov
pop
pop
loop
or
inc
jae
sbb
push
inc
pop
rorl
lret
rcrl
or
inc
xchg
rorb
sbb
and
and
fs
mov
lds
mov
push
stos
push
mov
outsb
mov
leave
cmpsl
pop
pop
hlt
inc
mov
jns
leave
mov
arpl
popf
rcll
mov
or
out
add
jge
rcr
pop
inc
jae
fisubs
iret
jo
scas
inc
gs
fidivrl
movsb
xor
push
sub
jmp
add
xchg
jp
mov
imul
jmp
stc
out
dec
sub
push
jl
fisubl
fstpl
lahf
adc
xchg
push
inc
out
mov
push
ret
notl
sub
lret
xor
dec
pop
push
cmp
cld
pop
in
inc
mov
push
sub
push
fsubs
or
ds
popa
mov
rol
pop
pop
out
and
shlb
pushl
aas
jge
adc
or
mov
pop
loop
lret
cli
call
scas
rcr
pop
ret
xchg
mov
add
cmpb
cwtl
mov
in
and
mov
outsl
xchg
and
jno
cmp
stos
mov
negl
dec
lret
mov
fwait
adc
sub
cmc
sbb
sub
les
mov
cmpb
push
mov
fs
ror
ss
inc
lods
mov
sub
pop
movsb
adc
xchg
in
xor
sahf
cld
cmp
into
push
or
into
push
mov
aas
loopne
cld
pop
jp
lea
push
inc
dec
imul
ljmp
flds
cmp
mov
out
mov
orb
sbb
in
in
inc
sbb
cmp
nop
pop
repnz
dec
pop
ret
mov
pop
mov
fscale
ljmpw
repz
xchg
xor
mov
sahf
loope
mov
cmp
insb
xchg
bound
pop
jns,pn
pop
inc
pusha
icebp
pop
inc
pop
ret
inc
call
rorb
xor
je
or
adc
sbb
std
enter
cli
push
add
imul
pop
and
inc
cmpsl
imul
clc
pop
stc
mov
lock
js
mov
insb
notb
and
lds
aam
or
insl
movsl
imul
jns
pop
mov
ds
fdivrp
mov
mov
mov
shlb
sub
push
pop
and
shrb
sbbb
fcmovne
xor
repz
sbb
gs
clc
cltd
adc
ljmp
xlat
lods
cmp
add
sub
imul
dec
movhps
mov
imul
test
hlt
jl
jne
cmc
dec
or
xchg
mov
push
mov
mov
stos
xor
insb
cmpsb
add
inc
cwtl
stos
decl
dec
gs
xchg
cmpsb
xor
inc
jge
mov
les
xchg
repnz
pop
mov
lret
jge
dec
outsb
mov
or
xorl
push
cmpb
cld
mov
mov
jns
out
or
cmp
or
in
sbb
xchg
mov
sub
fbstp
fstps
scas
test
mov
loop
mov
fwait
imul
in
push
ret
jmp
xchg
xchg
aas
cmc
mov
mov
pop
xchg
sub
mov
lcall
mov
stos
faddl
arpl
push
jnp
xor
dec
push
pop
rcll
adc
out
ret
pop
pop
sbb
inc
mov
cmp
test
push
push
and
stos
mov
add
inc
mov
cwtl
adc
pop
sub
mov
mov
lds
lahf
push
repnz
leave
push
repz
mov
lret
arpl
loopne
jge
incl
sbb
cwtl
aaa
dec
scas
add
add
sti
scas
int3
stos
xor
pop
jb
popa
fimuls
in
dec
jmp
jo
sbb
and
cmp
lea
mov
sub
in
cwtl
lret
std
mov
mov
jno
sbb
jl
adc
xchg
mov
movsl
pop
rcrb
js
mov
xor
fistl
rorl
push
inc
pop
scas
inc
mov
aas
sub
adc
aaa
lock
pop
sub
popa
push
adc
imul
cmp
pop
push
adc
fwait
cmp
popl
fiadds
pop
bound
add
fbstp
push
cld
loop
in
int
and
sub
outsb
mov
push
int
jle
xchg
aas
jae
sub
rorl
movsl
or
mov
loopne
mov
aaa
nop
mov
inc
and
hlt
les
push
int
sbb
rol
xor
mov
sbb
sahf
push
int
cmc
fbstp
xor
pop
fisubrl
cmpsb
icebp
loop
inc
push
stc
aad
out
rol
adc
push
mov
jb
mov
pop
sti
cs
cli
imul
add
pop
or
gs
into
aaa
outsb
bnd
or
jle
mov
adc
mov
imul
xor
data16
push
fistpl
out
repnz
sbb
push
sub
shrl
sti
lret
cli
jge
sub
nop
repnz
inc
dec
mov
add
fnstenv
les
push
mov
lea
push
push
add
pop
pop
pop
and
sub
jmp
cmpsb
shrl
fdivrl
add
inc
adc
in
sub
loope
dec
pop
lcall
and
ds
dec
mov
in
cwtl
mov
push
mov
lret
outsl
mov
sbb
dec
out
or
pop
pushf
sub
mov
loop
lock
and
mov
and
lahf
and
fwait
push
shll
dec
push
mulb
gs
insl
mov
xlat
cmpsl
js
inc
mov
adc
mov
mov
and
lds
sarb
add
xchg
cmp
aam
push
ret
push
mov
jbe
fisttpll
outsb
xchg
dec
aas
mov
popa
jne
lcall
or
xchg
jb
sahf
push
mov
pcmpeqw
cmpsl
add
cld
aaa
test
adc
ret
cld
dec
jno
push
test
adc
xchg
sbb
sar
aas
out
pop
add
and
pop
add
popa
pop
xor
lods
mov
int3
or
in
addr16
mov
outsb
add
mov
inc
icebp
and
xor
dec
inc
mov
ss
fwait
mov
nop
push
and
mull
dec
and
call
xchg
or
or
adcl
out
in
or
addr16
fdivs
loop
addr16
push
mov
mov
push
push
dec
test
fwait
lahf
pusha
dec
jo
fildll
lods
add
scas
int3
notl
jg
out
lret
and
add
mov
mov
fsubr
and
in
mov
inc
mov
push
movsb
in
lods
adc
push
iret
insb
xor
ret
arpl
mov
in
jae
aaa
fsts
leave
pop
xor
ror
inc
and
fidivl
jnp
outsb
jne
sbb
push
sahf
imul
or
sub
rolb
or
adc
and
hlt
fldcw
test
testl
add
sbb
lods
inc
aaa
or
adc
cmpsb
std
add
xchg
pop
and
fcmovne
fsubrp
fadds
jo
insl
xor
fs
cmp
jg
nop
movsb
dec
add
in
dec
enter
repz
enter
daa
js
test
iret
cmpsl
and
inc
std
jl
adc
in
push
inc
fistps
and
fisttpll
push
jne
push
out
add
push
or
inc
cmpsb
aaa
sub
js
lcall
or
inc
inc
sub
inc
xor
das
push
aas
adc
jbe
aas
movsb
les
sbbb
mov
imul
cltd
mov
sub
ja
lcall
fdivrl
aam
sbb
or
loop
test
insl
sub
inc
jg
and
mov
mov
mov
stos
push
mov
dec
les
int3
xchg
sbb
jo
gs
and
repnz
mov
jmp
inc
mov
sbb
sahf
mulb
nop
xor
and
push
scas
loop
cmp
stc
mov
mov
jmp
ss
or
mov
push
out
aam
cli
sti
add
xlat
in
cmp
outsb
or
jmp
sbb
pop
test
loopne
fwait
cmpsl
pop
mov
pop
subb
cmp
add
add
data16
cli
sbb
and
pop
mov
sub
in
mov
push
outsb
push
sti
jp
jle
xor
sub
lahf
leave
nop
int
xchg
pop
icebp
inc
addl
les
repz
jno
stos
movsl
decb
jle
mov
pop
lret
adc
daa
sbb
dec
mov
inc
outsb
and
inc
xchg
aam
aas
test
adc
insl
mov
je
or
hlt
push
adc
push
cltd
jecxz
jo
inc
mov
in
mov
cmc
xchg
xorl
sub
cmp
pop
aas
ret
js
ljmp
int
mov
fimull
and
les
jb
xchg
imulb
or
mov
xchg
cmpsl
ja
repz
in
test
cld
in
inc
lret
mov
cld
mov
mov
pusha
clc
push
rclb
mov
aam
shlb
mul
es
cmpsl
or
clc
packuswb
xchg
mov
jbe
mov
arpl
jns
mov
mov
xor
paddq
mov
fldcw
mov
jns
push
sti
aam
dec
fdivrs
mov
sbb
push
fcompl
aas
stos
adc
loop
lock
mov
decl
xor
dec
adc
iret
xlat
xor
jne
mov
jno
scas
mov
call
mov
inc
aaa
dec
rorl
out
fwait
in
inc
push
enter
mov
fbstp
jmp
call
in
les
es
mov
jecxz
sub
aad
aad
xlat
push
cmp
jnp
mov
dec
clc
mov
jns
loope
mov
shl
mov
filds
iret
xchg
in
pop
jmp
ret
adc
mov
dec
out
popf
testl
push
stc
xchg
test
jb
leave
insb
or
fwait
jnp
jecxz
jle
test
push
jmp
sub
cmp
adc
lret
jg
ret
mov
inc
lret
jae
sub
mov
push
sub
push
lahf
fisubl
fsubrs
sbb
xor
out
inc
dec
scas
lock
shlb
push
addr16
xchg
leave
or
pop
hlt
and
xchg
arpl
mov
jge
call
add
leave
in
or
cmp
add
pop
pop
pop
shlb
addr16
push
aam
scas
fbld
and
pop
outsb
cmp
test
rcr
sub
sbb
mov
gs
data16
enter
daa
ja
or
add
lea
xchg
xchg
jl
out
dec
jne
pushw
and
add
lahf
outsl
mov
dec
test
or
inc
rorl
pop
jne
js
fcom
pop
test
inc
pop
loope
sub
xchg
cmp
cmp
adc
push
cmp
popl
xchg
xchg
xorb
push
add
inc
ret
lds
int
nop
aas
sub
pop
xlat
pop
pop
add
mov
jnp
mov
out
xchg
sub
scas
cmp
clc
dec
test
dec
stos
jg
imul
fsubl
mov
xor
incl
jae
push
cmp
fsubl
cs
into
roll
nop
sbb
push
sahf
cltd
jb
cmc
insl
sbb
aad
or
loop
push
inc
fs
ret
dec
xchg
or
std
push
mov
mov
stos
out
xor
mov
cmpsb
cmp
insl
xor
into
std
loope
mov
mov
jbe
xlat
push
xchg
adc
xor
imul
inc
test
adc
pop
cmp
xlat
cwtl
mov
outsb
mov
sarl
push
leave
inc
aad
push
in
test
daa
dec
jnp
bound
aaa
xchg
fldenv
mov
adcb
mov
call
pop
cmc
jmp
adc
xchg
pushf
mov
out
data16
mov
push
mov
mov
loopne
and
jb
sub
dec
dec
push
push
je
or
das
push
cwtl
sub
mov
test
orl
dec
add
addr16
pop
loop
movsl
mov
mov
xchg
das
iret
jle
mov
xchg
imul
rol
mov
imulb
mov
fwait
shll
cld
punpcklwd
sti
decb
out
push
mov
jg
and
jg
pusha
aam
imul
mov
mov
jl
jp
ficompl
clc
dec
out
repnz
enter
mov
nop
mov
mov
adc
xchg
add
rorb
xor
add
add
mov
xchg
mov
pop
xchg
test
xchg
push
xchg
imul
mov
adc
pop
mov
jge
xchg
and
ljmp
or
add
adcb
je
sarl
mov
xor
dec
paddd
into
push
lahf
or
push
pop
fwait
adc
bound
imul
add
jl
test
or
sti
mov
fwait
push
stc
xchg
jne
lods
mov
xlat
sub
rorb
adc
jb
jp
jb
mov
mov
je
call
mov
in
loope
pusha
cmpb
xchg
mov
incb
mov
faddl
cmp
adc
jns
gs
cmp
es
xor
pop
jge
ja
adc
dec
or
addr16
xor
adc
scas
add
sub
sub
pop
inc
dec
pop
mov
cld
aaa
jae
addr16
or
mov
roll
ds
xchg
sbb
sbb
fists
scas
push
xor
sarb
mov
mov
test
hlt
outsl
insl
movsl
arpl
data16
inc
aad
or
mov
sbb
lds
add
outsb
ret
int3
insb
das
sbbb
inc
fidivs
in
xor
jns
dec
scas
mov
hlt
cs
testb
imul
shr
dec
icebp
push
enter
daa
jbe
cmp
xor
or
jl
popl
dec
in
in
or
movsl
jno
mov
mov
lahf
mov
or
mov
test
mov
lods
sub
out
cld
out
call
jb
push
imul
cmp
sub
lret
rcll
shlb
jle
sub
pop
bound
add
push
sbb
hlt
xor
call
pop
leave
push
int
sbb
roll
push
mov
sarb
or
sub
call
jns
cmp
push
mov
dec
xor
add
lret
mov
jne
and
push
sbb
jbe
mov
fcoms
add
lret
aas
rcrl
pop
mov
mov
sahf
cmp
xor
xor
xor
xor
jno
into
leave
nop
stc
cli
sbb
fs
mov
fnstenv
inc
cmp
movsb
mov
and
adc
cli
popa
icebp
push
xor
dec
arpl
and
into
loopne
insl
gs
adc
loopne
clc
pop
mulb
adc
adc
adc
cmp
xchg
shlb
ret
pop
sbb
xchg
es
imul
pop
aam
adc
js
sub
ljmp
mov
nop
addl
dec
lahf
inc
test
lret
xchg
fisubrl
mov
into
pop
fcoms
insb
mov
pop
frstor
pop
xor
and
pushf
pop
add
mov
add
out
inc
lret
ss
aas
ret
jb
pop
jge
mov
bound
dec
imul
push
pop
xchg
std
fs
jg
mov
cmpsl
sti
mov
inc
xchg
and
pop
test
xchg
mov
cmp
lock
mov
scas
xor
mov
dec
sub
sub
adc
dec
insl
inc
lahf
lds
sbb
jne
dec
mov
lcall
lret
fwait
mov
das
and
xchg
push
sbbb
mov
testb
aam
push
ret
pop
xor
jne
add
xabort
or
xchg
pop
lods
ljmp
ret
lods
out
scas
mov
popa
push
adc
sbb
setb
add
cltd
and
mov
pcmpgtw
push
ss
cmpsb
test
das
jge
sbb
push
imul
push
das
das
out
mov
jae
add
stc
xor
adc
or
hlt
sub
icebp
or
mov
jne
loop
mov
ds
add
nop
or
push
mov
push
push
outsl
jne,pt
pushf
lcall
push
cmpsb
bound
out
lcall
mov
stos
mov
aas
fs
lret
mov
es
sbb
jecxz
in
xlat
mov
jecxz
push
pop
cmc
in
lcall
test
xchg
mov
jmp
pop
push
incl
mov
ja
mov
ja
ret
stos
test
cmp
insb
loop
dec
jnp
jae
jle
add
push
jns
xchg
adc
pop
aam
mov
push
ret
xchg
mov
inc
loopne
xor
in
push
adc
push
or
xor
inc
fimull
mov
imul
push
scas
mov
add
mov
cmp
xchg
push
repnz
test
hlt
mov
shrb
add
jge
bound
aaa
inc
sub
pop
nop
icebp
add
adc
push
inc
pop
cs
jecxz
xor
aam
in
scas
popf
iret
jecxz
sbb
or
movsb
jmp
sub
adc
repnz
xor
push
daa
jne
add
jno
mov
pop
dec
push
mov
push
jmp
sub
in
lcall
push
test
insb
or
inc
fisttps
push
pop
adc
adc
pop
daa
or
loope
outsl
cmp
cmp
hlt
ds
sub
pop
mov
adc
or
jecxz
pusha
add
lcall
xor
addr16
loop
mov
sub
xchg
mov
pop
lods
and
sub
fdivrl
out
outsb
out
xchg
test
das
inc
cmpb
xor
push
mov
push
dec
mov
or
and
dec
bound
jns
int
add
fcoms
outsb
notl
mov
lret
cmp
mov
jecxz
xor
sbb
adc
sbb
sti
dec
outsb
xor
insl
pop
loop
pop
int
mov
aam
in
getsec
adc
mov
cmp
push
jle
dec
imul
jp
cli
xchg
divb
pop
pop
idivl
sti
cmpsl
or
and
inc
loopne
inc
js
adc
jg
imul
push
add
add
shlb
insb
sub
test
sub
sbb
xchg
aad
sti
xchg
mov
pushf
fildll
nop
pop
mov
dec
cmp
inc
mov
mov
dec
repz
std
fs
repz
outsb
call
pop
pop
add
jecxz
mov
pushf
or
sbb
inc
into
movsb
cs
fbstp
inc
out
leave
aas
popa
xchg
es
inc
add
je
or
jecxz
addr16
cmp
or
cwtl
mov
dec
iret
mov
jbe
xorl
cltd
ds
lock
cmp
int
cmp
sub
stos
mov
call
rcrl
out
xor
mov
mov
jno
adc
gs
sub
mov
push
and
xor
pop
mov
push
sbb
insl
mov
aam
mov
or
addb
sub
addr16
sarb
ljmp
cmp
arpl
test
push
xchg
mov
push
cmc
cmpsl
pop
psllw
out
add
add
jle
push
test
add
mov
shlb
ret
or
popa
roll
lock
rcll
pop
adc
jecxz
and
xchg
add
xor
ljmp
rorb
or
fnsave
mov
mov
jp
push
mov
xor
ja
cmp
dec
cmc
loope
inc
cld
mov
mov
push
mov
xchg
jne
lcall
fs
bound
js
in
mov
xchg
adc
mov
sub
jmp
jp
jl
mov
std
push
mov
mov
es
mov
pusha
mov
fdivr
xchg
pop
mov
jmp
and
out
subl
out
andl
out
out
adc
outsb
dec
stos
sbb
jp
mov
sbb
push
jnp
pusha
jno
lods
xor
adc
sbb
call
jge
pop
sub
loope
jmp
lahf
jae
cmpsl
mov
aad
int3
or
lods
lods
inc
inc
sbb
fidivrl
dec
sbb
mov
imul
lds
mov
mov
pusha
cs
jno
xchg
hlt
add
pop
adc
push
jge
hlt
sbb
aaa
push
adc
adc
add
jo
int3
inc
push
pop
pop
pop
fdivl
fidivrs
scas
xor
das
jg
scas
jl
into
and
movb
je
fstl
xchg
mov
in
sbb
enter
daa
je
pop
cmp
pusha
jmp
sti
pop
pop
dec
ret
push
into
jb
movsl
jg
aad
jg
daa
lahf
int3
test
in
call
xchg
outsb
mov
cmpsb
inc
push
jg
cmp
js
or
pop
and
fadd
imul
dec
aas
ds
xchg
jae
xor
loop
aas
and
fiaddl
sbb
loop
sbb
movsl
movsb
das
int
in
sub
pop
fadd
cmp
leave
push
push
sbb
fsubr
sub
sub
stos
sub
lock
test
xor
jg
pop
aad
orb
out
xchg
and
mov
mov
fmuls
xchg
lret
ljmp
dec
push
sbb
nop
imul
jg
xor
ficoml
loop
sub
push
mov
adc
mov
subb
jns
out
fs
scas
push
xor
and
mov
incb
sub
cmpsb
mov
mov
movsl
or
xchg
dec
hlt
mov
xchg
adc
push
or
mov
xor
jp
sbb
or
pop
addr16
sahf
sbb
add
inc
mov
mov
push
dec
cwtl
mov
inc
iret
mov
lock
rep
loope
xchg
mov
test
call
fcmovnu
ficomps
dec
inc
adc
pushf
mov
pop
jmp
add
lret
fisubrl
mov
inc
add
pop
aas
add
sbb
mov
sbb
mov
pop
jmp
std
mov
jbe
pop
pop
mov
js
mov
or
dec
cmp
fcomi
clc
sahf
pop
lret
mov
popa
lock
mov
mov
cmpsb
and
mov
shrl
insl
movups
cmpsl
jae
icebp
mov
dec
or
cld
nop
adc
jns
mov
and
int3
mov
pop
fdivl
rcrb
xor
sbb
add
xor
mov
xchg
clc
sti
cld
xchg
test
push
popa
call
mov
pop
mov
aad
sbb
testb
hlt
lahf
js
mov
mov
mov
push
pop
movsb
pop
dec
je
add
test
and
sbb
sbb
pop
mov
mov
out
andl
call
movsl
or
jg
xchg
or
ret
pminsw
mov
jmp
add
mov
call
sub
adc
push
shlb
std
out
mov
jbe
out
inc
leave
lret
bound
adc
in
push
push
xchg
bound
mov
insb
cld
sub
rcl
addr16
inc
jp
cmp
mov
xor
jns
in
cmp
push
cmp
mov
jmp
out
jp
cmp
mov
popf
cmp
sbb
cmc
push
stos
mov
loope
mov
adc
push
pop
push
rclb
cmpsl
in
out
inc
loope
ret
xchg
fists
jae
lods
sub
cwtl
dec
mov
push
fwait
addr16
movb
and
xchg
sbb
loopne
imul
into
adc
push
add
repnz
stos
leave
call
in
arpl
inc
addb
hlt
jge
imul
mov
jg
or
es
pop
mov
ficomps
cltd
xor
mov
sbb
inc
ljmp
ljmp
push
push
inc
mov
cwtl
bound
add
enter
daa
jae
and
jno
inc
jl
sbbb
sub
mov
scas
movsl
xchg
pop
and
sub
jmp
add
push
outsb
dec
test
add
inc
std
pop
das
cmpsb
jle
pop
arpl
movsl
js
cltd
sub
movsl
mov
adc
repz
adc
dec
scas
cmp
lock
sarb
stc
inc
cmp
pop
sbb
mov
pop
pop
pushl
call
shlb
cmpsl
sbb
pusha
pop
pop
arpl
lcall
push
fcoml
xor
mov
push
xorb
jg
mov
mov
cmp
pushw
add
imul
jg
mov
sarb
notl
add
adc
mov
or
clc
sahf
and
adc
xor
sti
outsl
mov
xchg
and
pop
lds
add
fwait
or
mov
out
sarb
cli
sbb
xor
movups
fidivl
into
mov
pusha
gs
mov
pop
push
lahf
in
sbb
and
push
mov
and
pop
test
sbb
dec
test
xchg
lcall
pop
dec
add
insl
ds
sti
in
push
loope
jp
sub
sub
notl
addb
mov
sti
mov
repz
loope
jns
mov
call
pop
xlat
sub
dec
outsl
out
adc
push
in
pop
inc
shr
cli
ucomiss
mov
std
inc
sbb
dec
aas
lahf
shlb
xor
and
in
notb
jecxz
sub
pop
subl
js
pop
jne
mov
daa
mov
fs
outsb
dec
and
sbb
and
mov
outsb
cli
mov
lock
pop
outsl
das
dec
push
mov
insl
push
and
sbbb
std
xor
insl
negb
cmpsl
jb
je
addr16
icebp
pop
call
call
js
and
addr16
sti
or
xor
aam
pop
mov
mov
ret
fcomps
les
shlb
in
jmp
mov
lret
xchg
sbb
lea
pop
dec
imul
inc
add
jno
cltd
in
mov
arpl
lret
dec
fldt
rolb
push
je
roll
mov
pop
imul
out
out
filds
add
pop
xor
dec
add
and
inc
mov
xor
mov
cmpsb
test
dec
fistl
ss
fisubrs
iret
xchg
nop
out
insl
les
out
and
fdivrs
test
test
xchg
mov
enter
mov
or
test
push
insl
mov
shrl
xchg
pop
mov
mov
pusha
out
cmp
xchg
add
inc
jmp
mov
mov
out
xchg
mov
mov
xor
call
and
fnstsw
insb
and
push
jle
data16
push
dec
les
adc
iret
cmpsb
inc
xchg
ret
stos
pop
lcall
jae
negb
pop
inc
add
push
jbe
push
sbb
cli
fisubl
sbb
sbb
fldl
imul
or
push
pop
shrb
cmp
outsb
scas
sub
push
dec
mov
hlt
fwait
pop
mov
inc
loope
mov
sub
pop
add
test
or
sbb
xor
cld
int3
sbb
cmp
fidivrs
aad
jo
incl
cmp
and
dec
jne
leave
and
or
xor
jbe
inc
inc
in
jmp
dec
loop
jb
pop
cmp
aad
jno
inc
jl
js
dec
mov
je
movsl
into
add
mov
xchg
lahf
or
fnstcw
movsb
push
int
repnz
mov
cld
cmpsb
dec
pop
adc
add
pop
in
cmp
adc
loope
loope
sub
enter
aam
ds
inc
daa
adc
cwtl
xchg
and
adc
mov
xor
push
mov
push
cmp
pop
fiaddl
push
or
sub
scas
jl
push
arpl
adcb
das
mov
out
movsl
mov
loopne
mov
mov
mov
cmpb
cmp
addl
notl
stc
lret
xor
jne
xchg
mov
movsb
mov
out
out
sahf
enter
push
or
jbe
xchg
lods
pusha
loop
pop
lcall
stc
addr16
jnp
ss
jle
lods
ret
mov
mov
push
nop
out
out
sub
sbb
cmp
pop
fisttps
fmull
mov
insb
mov
gs
adc
ret
mov
mov
adc
jb
add
pushf
data16
clc
sbb
or
xlat
rcrl
mov
mov
in
fdivs
insl
incb
arpl
push
jbe
inc
cmc
dec
fnstenv
pop
repz
xchg
cmp
js
or
mov
pop
cld
inc
call
pushf
or
cs
xchg
ja
cwtl
sbb
add
ds
pushl
cmc
dec
dec
fwait
push
xorl
jecxz
repz
add
cltd
cwtl
shr
aaa
mov
pop
pop
mov
dec
ret
cmp
inc
cmp
push
push
daa
pop
adc
mov
sub
xchg
sub
das
sub
inc
mov
and
add
mov
push
idiv
lahf
cltd
insl
fstl
push
dec
fmuls
pop
mov
notb
and
push
jns
mov
mov
mov
sbb
and
inc
stc
das
sub
lahf
aam
lods
sub
push
filds
or
movsl
fstpl
inc
mov
divl
dec
popa
push
push
add
xor
xchg
arpl
push
xchg
cmp
push
rolb
add
jbe
cltd
and
test
mov
mov
push
push
ret
jle
inc
mov
filds
or
xor
pop
imul
adc
loope
lods
dec
imul
sbb
xor
push
jmp
jae
and
cli
shlb
loope
mov
sbbl
das
daa
pop
popa
movsb
xorl
in
dec
into
std
jae
shll
pusha
jl
xlat
je
lcall
mov
adc
out
add
bound
jns
add
in
lahf
lret
push
test
in
push
xor
mov
push
addr16
pop
jp
rcrb
mov
icebp
repnz
adc
jnp
mov
in
mov
filds
stos
outsl
xchg
xlat
sti
aas
jmp
test
adcl
pop
out
lret
stos
popf
xchg
add
jae
fsubrs
cld
xlat
xchg
insb
mov
xchg
jo
push
xchg
fwait
pop
adc
lret
iret
add
xlat
and
rcrl
lcall
test
or
push
push
push
ficoml
ret
pop
test
imul
jno
fcomi
rolb
or
sub
sahf
aam
out
sub
rorl
jge
add
sbb
jecxz
aaa
inc
in
or
stos
xor
jmp
add
rcr
bound
xor
inc
fisubrs
sbb
lcall
lret
xor
adc
push
jbe
cltd
dec
in
rolb
xchg
enter
daa
jno
jmp
xor
pusha
jno
outsb
mov
jl
test
int
push
ja
and
xchg
lock
lahf
sub
lea
cwtl
hlt
js
sbb
xchg
cmpsb
int3
xor
pop
mov
jb
jns
and
aam
and
cmp
add
jg
out
adc
jae
rorl
and
add
pop
icebp
xor
push
add
sub
sti
gs
pop
sub
lcall
mov
sub
jl
test
xchg
inc
subb
in
into
flds
mov
popf
xchg
and
pop
lea
imul
adc
imul
adc
movsl
mov
adc
sbb
ret
imul
pop
push
xor
dec
mov
jno
lahf
loop
mov
stos
sbb
xchg
ss
lock
lods
stos
out
mov
xor
push
cmp
xor
or
dec
xor
into
dec
sbb
shl
push
aas
dec
pop
xchg
fistpl
adc
mov
imul
or
pop
loopne
or
sbb
mov
mov
add
inc
divl
daa
nop
xchg
aad
lods
pop
nop
lret
dec
mov
xchg
inc
or
les
mov
jbe
incl
icebp
call
pop
pusha
jecxz
scas
shlb
jnp
int3
pushf
mov
pop
jmp
shrb
hlt
pop
inc
inc
pop
movsl
xchg
inc
push
or
aas
shlb
in
cmp
fs
repz
incl
gs
cmpsl
mov
pop
mov
adc
in
int3
adcl
test
inc
mov
mov
test
mov
fistpl
popf
rcrl
das
push
insl
les
dec
sarl
mov
int
iret
cld
adc
loope
adc
and
popf
jno
pop
cmp
stos
rclb
sbb
aam
push
test
jae
es
xor
les
clc
lods
inc
ds
inc
or
popa
sub
icebp
xor
iret
std
xchg
mov
stos
jle
push
popa
pop
push
mov
pusha
cltd
pop
outsb
testl
add
test
out
mov
mov
dec
stos
pop
mov
cmp
out
lods
push
testl
movsb
ds
xor
pop
or
jmp
mov
xchg
push
mov
sbb
popa
ja
xorl
ret
dec
mov
push
mov
fwait
sub
loopne
jne
jge
mov
add
mul
cmpsb
jns
and
xchg
dec
inc
pop
mov
adc
cmp
mov
outsb
rolb
jp
test
mov
cs
dec
ror
in
adc
pusha
and
adc
and
xchg
stos
es
data16
out
push
es
inc
popf
scas
dec
jno
fisttpl
push
push
mov
jne
out
and
negb
stc
leave
addr16
mov
rcll
pop
adc
loope
iret
fs
ret
es
or
inc
pop
vmptrld
push
and
loope
sub
push
sbb
scas
xchg
es
push
je
js
shrl
bound
aas
rcrb
mov
lods
cmp
leave
dec
mulb
arpl
jg
inc
out
mov
daa
mov
aaa
add
arpl
fidivs
add
jae
out
test
fiadds
rorl
clc
popf
lods
and
mov
cmp
adc
lods
push
inc
in
jbe
dec
dec
enter
daa
jo
les
fsts
mov
in
dec
jle
lds
pop
inc
jno
fwait
jbe
and
or
dec
push
push
push
jg
lds
arpl
mov
stos
imul
cmpsb
dec
mov
inc
js
mov
popf
push
sbb
loope
mov
xor
pop
cmp
ret
dec
jne
rorb
inc
pushf
scas
test
sbb
shll
push
gs
mov
push
int
and
pop
fcoms
lcall
sbb
xchg
lahf
inc
sub
ljmp
fdivrs
rorb
and
and
in
inc
and
push
mov
leave
cmp
stc
addr16
not
loopne
lret
pushf
shll
inc
sbb
xchg
sahf
push
mov
imul
inc
outsb
outsl
push
inc
mov
inc
push
push
stc
inc
xor
adc
or
rcl
lret
lods
xchg
sub
jns
out
xor
cli
xchg
pushf
sbb
movsb
xlat
cmp
frstor
mov
jge
gs
out
jle
mov
mov
imul
nop
add
addr16
xchg
pop
sub
cmp
adc
ljmp
mov
repnz
scas
adc
sti
repnz
jae
dec
pop
lods
aad
sbb
movsl
jo
dec
adc
dec
inc
sbb
cwtl
fldenv
sbb
les
dec
repz
and
xchg
vorps
icebp
xlat
ljmp
rorb
jns
pop
negl
cs
sbb
inc
cmpsb
nop
jmp
aas
jl
shll
pop
aas
dec
mov
stc
je
aas
and
cmpsl
dec
and
push
dec
negl
loope
ja
xlat
pop
sbb
in
push
mov
jle
dec
adc
das
call
out
xchg
aaa
lds
loopne
shr
cmp
testb
pop
dec
into
call
outsl
outsl
pop
mov
movsb
scas
sub
cmp
aad
xor
xor
and
cmp
xor
pop
mov
shr
push
rcl
dec
inc
rol
jno
and
fucomp
mov
and
fucomp
pusha
popa
inc
in
fisubrs
mov
xchg
icebp
test
push
cmp
mov
int3
cmpsb
push
add
out
cltd
xchg
jbe,pt
fstpl
cmp
gs
adc
fsubrl
pop
mov
and
pop
dec
cmp
fisubrs
pminub
sub
mov
push
lds
inc
and
xor
pop
decb
xchg
xor
push
shlb
mov
imul
out
xor
sbb
jmp
dec
or
loopne
fwait
pop
cmpsb
popa
push
loopne
push
jne
jo
mov
add
bound
call
add
sahf
insl
enter
cli
sub
lods
call
addr16
ret
lods
in
mov
pushf
pop
mov
icebp
sti
in
movsb
sub
in
and
pusha
mov
repz
pop
pop
adcl
push
out
xchg
mov
push
lds
stos
pop
loop
and
cmp
insb
fs
sarb
xorl
push
and
adc
add
lret
pop
fistps
in
jae
and
insb
cltd
push
movsb
rcll
mov
inc
inc
xchg
and
xchg
jge
pop
sbb
into
movsb
imul
scas
or
insl
and
jp
imul
icebp
jl
pop
arpl
jno
inc
ljmp
sbb
pop
cltd
add
push
xchg
pop
dec
xchg
scas
fisubrs
int
jo
enter
loop
mov
cmp
add
sub
push
xchg
mov
jecxz
sahf
ja
enter
daa
outsl
out
cmp
sub
jl
pop
sbb
test
movsl
mov
or
lahf
addr16
push
push
in
test
loop,pn
inc
cmp
cmpsb
sarb
xchg
js
lcall
pop
xor
loope
xchg
pop
sub
cmp
cmp
enter
dec
adc
sub
sti
sahf
cmc
orb
sbb
pop
jno
and
loop
je
enter
xor
shll
inc
pop
push
add
push
xor
xor
aas
into
leave
sub
repz
and
push
jg
cmp
je
mov
mov
pusha
cmc
and
jmp
cmp
mov
adc
nop
jle
lret
mov
cmp
mov
sub
movsl
dec
outsl
xor
adc
loop
and
stc
sti
inc
out
fs
lods
adc
popf
mov
adc
dec
dec
mov
cli
flds
std
xchg
into
adc
xor
loopne
mov
pop
iret
daa
add
addr16
stc
imul
lods
add
cmp
xor
sbb
xor
adc
adc
push
mov
sbb
mov
mov
jb
aad
jmp
nop
sbbb
inc
sub
les
or
repz
movsb
xchg
test
lea
push
stc
cmpsl
pop
adc
test
pushf
or
addr16
subl
sub
test
sbb
jb
ja
dec
add
mov
and
lods
jecxz
jecxz
imul
cmc
adc
add
xchg
mov
or
add
bound
cli
call
pop
lock
xchg
in
pop
sub
and
mov
cmp
test
sahf
insl
xchg
ret
push
dec
leave
push
lcall
jne
icebp
jnp
inc
cld
and
mov
mov
add
and
shll
pop
ja
loope
mov
mov
jo
add
es
ret
adc
adc
and
in
xchg
shlb
push
fstpl
pop
mov
mov
push
mov
aam
pop
lods
inc
movntps
sbb
or
hlt
mov
jns
push
fadds
ja
in
adc
popf
sbb
mov
xor
fldcw
jb
testb
push
sub
loop
enter
orl
mov
xor
add
xlat
xchg
pop
xchg
js
ja
mov
mov
or
fidivrs
push
cmpl
mov
sbb
bound
push
out
repz
xchg
in
fsubrp
mov
leave
mov
in
xchg
mov
addr16
add
mov
sub
mov
sub
in
cltd
addr16
pop
lods
fistps
adcl
data16
out
lret
rclb
popf
cld
inc
js
push
adc
push
xor
stos
int
frstor
inc
sahf
or
sarl
push
cmpl
rclb
hlt
adc
cmp
iret
and
inc
ret
jg
jbe
lahf
inc
sub
lds
addr16
enter
and
push
or
push
hlt
fisubrl
xchg
xchg
aam
sub
imul
scas
imul
lds
test
xchg
dec
sarl
cli
mov
hlt
cli
arpl
cmpsl
mov
push
jge
sbb
aaa
sbbb
les
add
clc
pop
ja
test
dec
pop
inc
xor
push
icebp
and
mov
movsl
xchg
leave
movsb
mov
inc
push
loope
shlb
push
aam
test
add
cmp
lods
jo
addr16
std
mov
ret
push
and
push
movsl
test
sbb
and
add
loop
stc
push
push
inc
enter
push
sub
es
fstpt
or
pop
loopne
popa
push
divl
loope
lds
sub
push
cmp
ds
dec
cwtl
rolb
and
pop
roll
stos
dec
add
fnstcw
repz
aaa
pop
xchg
int
cwtl
inc
sub
cwtl
pop
xor
sti
push
cltd
push
mov
imul
shl
sub
jle
movsb
pushf
lahf
test
mov
jg
movsb
loop
sarb
mov
aas
push
and
nop
push
mov
cmp
outsl
sbb
push
and
mov
mov
inc
and
insb
fdiv
xor
imul
push
in
loop
es
stc
mov
scas
fs
xor
lods
pop
pop
mov
dec
mov
cli
stc
lret
cmp
add
or
sbb
lret
pop
int
daa
lea
adc
cmc
adc
or
dec
mov
jmp
jg
sbb
outsl
mov
xlat
iret
lea
mov
test
test
push
rcl
nop
rcr
aad
and
nop
pop
loopne
dec
shrb
mov
fsts
xor
repz
int3
in
xchg
dec
and
call
aad
inc
pop
enter
subb
mov
jno
int
subb
jne
inc
mov
movl
testl
dec
ja
pushl
adc
lds
xchg
std
pushf
and
cwtl
mov
dec
fisttps
push
ss
dec
mov
ds
popf
push
loope
ds
dec
lock
das
cmpsb
push
mov
add
and
outsl
out
rorl
xchg
mov
cmp
inc
xchg
cmpsl
insl
mov
mov
push
lret
adc
mov
leave
cmpsb
and
outsb
push
xlat
pop
xchg
xchg
mov
dec
aam
xor
pop
in
lods
fnstsw
out
mov
xchg
call
and
ret
jle
popa
jb
xchg
lods
aas
pushf
mov
mov
jg
mov
bnd
jp
xchg
or
test
add
into
dec
fsubp
lahf
test
jmp
xchg
adc
shll
and
out
aad
in
ss
incl
addr16
or
loopne
mov
in
xchg
fcompl
out
ja
and
inc
sbb
mov
fwait
mov
xchg
sbb
addb
jge
dec
bound
pop
aaa
in
roll
xchg
test
sub
mov
icebp
jp
mov
mov
iret
loop
dec
push
add
into
jb
pusha
cmc
pusha
add
jge
aam
and
imul
mov
popl
xlat
xor
popf
and
icebp
mov
outsl
sub
and
insb
cmp
jnp
push
adc
mov
loopne
adc
mov
subl
pop
lods
lret
cmp
pushw
sub
mov
push
xchg
cmpsb
pop
fisubl
inc
ljmp
ds
scas
into
addl
xor
shlb
loope
movsl
cmpsl
and
mov
dec
hlt
adc
js
lock
jge
out
sbb
daa
aaa
aas
loopne
or
bound
pop
cmpsb
xlat
ds
lock
xor
lods
pop
or
and
lret
inc
sub
xor
fidivs
jbe
in
insb
jge
enter
daa
insl
mov
cmp
es
jno
jp
jl
mov
or
add
add
mov
pop
xchg
push
clc
pop
adc
les
cmpsb
inc
push
xor
pop
dec
roll
pop
pop
inc
add
jb
loope
sbb
sub
cmpsl
inc
cmp
cmpsb
adc
repz
mov
xor
sbb
std
xor
movsl
pop
cli
ljmp
leave
mov
mov
loope
cmp
xchg
cmpsl
sub
loope
pop
cmp
adcb
lea
adc
mov
mov
mov
jb
and
loope
xchg
jo
cmp
sub
lret
testl
and
sbb
divb
fcompl
lds
arpl
loop
pop
jge
imul
adc
ss
inc
add
and
enter
sar
sub
mov
adc
adc
push
orl
ja
into
fistl
shl
mov
ret
pop
or
imul
arpl
fwait
xchg
lea
inc
cwtl
sbb
stos
fcmovnbe
xlat
push
in
sub
mov
mov
out
pop
stc
sti
jle
mov
push
aad
mov
imul
push
inc
push
insb
pop
fxch
push
and
adc
xchg
dec
lea
or
call
push
mov
adc
xlat
push
lahf
pushf
pusha
push
push
orb
inc
cmp
xchg
pop
test
jb
rcll
je
sbb
jecxz
xlat
arpl
jno
mov
inc
fs
cwtl
jns
cmp
mov
js
out
push
mov
fstpt
sbb
add
jle
das
test
mov
mov
pop
and
xor
jecxz
dec
hlt
nop
insl
pusha
lods
jno
mov
sbb
cltd
gs
cld
mov
sbb
orl
mov
mov
cmp
popa
push
iret
sub
and
lcall
clc
cwtl
or
imul
ss
popa
mov
jb
stos
daa
inc
mov
pushf
iret
xor
int
push
psubsw
std
cltd
xchg
test
push
and
pop
cmp
inc
push
sbb
mov
pop
imul
pop
test
out
cmp
pop
add
movsl
movsl
pop
jmp
in
push
or
or
mov
xchg
xor
cmp
or
dec
ja
or
inc
mov
cwtl
or
push
pop
fwait
jmp
bound
mov
jg
out
pop
push
bound
xchg
jns
push
aas
in
pop
fstl
cmp
xor
mov
out
je
int3
push
jo
inc
aam
jg
stos
mov
ds
sti
dec
dec
out
jno
aad
push
pusha
nop
xlat
in
fistps
outsb
jmp
jl
mov
out
lods
mov
dec
iret
mov
push
scas
shlb
lods
and
mov
movsl
shll
push
pop
aam
push
clc
stos
popf
adc
bnd
xor
in
addl
jae
inc
lcall
add
push
adc
push
fcmovbe
cli
sbb
mov
push
imul
scas
xor
xor
jle
jns
lret
sub
mov
leave
sub
arpl
inc
repz
sbb
popa
sub
call
addl
adc
int3
lcall
ficoms
dec
outsl
jo
bound
scas
je
lods
and
dec
cmp
movsb
je
int3
xchg
push
push
jg
mov
in
push
push
icebp
enter
daa
insb
ffree
cmp
push
lret
push
out
jl
lods
push
push
out
jl
mov
out
push
or
shlb
push
lret
loopne
test
cmp
inc
out
dec
cmpsb
pop
dec
pop
je
or
lods
jb
pop
jnp
push
mov
and
cmp
sbb
xor
sarb
test
adc
sbb
and
add
jns
xor
xor
int
lahf
lahf
sub
pop
aam
movsb
lcall
or
inc
push
mov
push
push
outsb
push
sbb
adcb
xor
jbe
insl
jns
mov
cli
fsubl
add
push
xchg
xlat
mov
in
sub
int
stos
lret
enter
jb
jne
repz
outsb
adc
cli
adc
cmpsb
outsl
int3
cwtl
lret
loop
lds
fs
and
idiv
lods
sub
mov
dec
cli
pop
leave
xchg
jmp
sahf
cmp
jp
or
push
into
mov
shll
pop
sub
mov
imul
mov
add
shll
jbe
sbb
in
lods
xlat
dec
mov
push
mov
pop
ret
mov
imul
sbb
pop
dec
nop
and
inc
addr16
insl
fcos
pop
push
les
int3
repz
nop
xchg
into
jbe
lea
add
sarl
pop
cs
adc
pop
sub
or
jmp
mov
jecxz,pn
arpl
xor
rcl
aas
clc
pop
cmp
int
dec
gs
jecxz,pn
aaa
cmp
je
cmp
cwtl
xor
out
mov
pop
adc
test
and
insb
lret
jecxz
ds
leave
inc
lock
mov
fs
mov
outsb
push
mov
dec
shll
push
jle
mov
loope
inc
js
dec
mov
add
mov
add
popa
lret
icebp
xchg
xlat
cs
and
movsb
test
pop
aam
das
shlb
lret
cli
xchg
je
stos
ret
lods
push
adc
fldl
icebp
jae
jge
sub
popa
mov
xchg
mov
mov
xchg
cmovs
cltd
insl
out
test
jbe
mov
jmp
push
pop
add
dec
lods
iret
repnz
and
xchg
nop
int
cmp
sahf
shll
or
add
fwait
dec
nop
add
shrb
mov
inc
dec
or
in
ss
les
mov
clc
pop
ret
adcb
jbe
dec
xorb
inc
dec
stos
pop
or
iret
adc
insb
and
inc
mov
sarb
in
loopne
cld
bound
xchg
dec
or
jg
pop
sub
cltd
addr16
addr16
jp
jns
mov
movsb
sbb
fldenv
xor
arpl
fcoml
pusha
sub
fistpll
or
jmp
inc
sub
out
pushf
lds
add
push
in
fsubrl
test
adc
push
jnp
xor
push
aas
fcomi
adc
pop
iret
aas
fs
lock
stos
pop
sbb
sbb
dec
and
jae
imul
mov
into
or
add
inc
xchg
fisttpl
xchg
fldln2
test
imul
add
xchg
mov
in
shl
inc
mov
dec
sahf
inc
mov
test
nop
arpl
pop
inc
testb
sbb
jne
or
jmp
int3
test
stos
pop
add
add
xor
stos
xor
bound
leave
and
mov
xchg
movsb
push
pop
push
push
into
inc
push
jbe
sbb
in
cmp
cmp
daa
imul
jno
push
bnd
jno
dec
test
add
and
iret
negb
sahf
pushf
push
test
pop
lods
into
inc
jne
pop
cmpsb
fidivs
arpl
xchg
iret
js
fcmovnu
pop
popf
cmp
jecxz
enter
js
dec
data16
cmp
rcll
push
xor
mov
push
rclb
test
sbb
aad
add
inc
sbb
pusha
iret
adc
sub
fbstp
push
lcall
aas
stc
test
push
incb
dec
stc
mov
ud0
rcrb
mov
aad
and
mov
cmp
mov
sbb
pop
rcll
adc
xor
fdivp
ror
xor
inc
cld
outsl
stos
js
loop
arpl
xlat
or
adc
orl
and
into
mov
push
sti
fsub
dec
rol
cli
xchg
mov
cmp
jae
or
xor
into
mov
es
clc
mov
pop
dec
lock
js
adc
mov
add
and
sbb
and
xlat
mov
sub
mov
pop
in
lds
xchg
pop
and
aad
sbb
nop
in
sbb
sti
inc
jp
nop
fnstenv
jnp
les
jae
mov
lret
xchg
xchg
iret
dec
fxch
sub
push
pop
pop
pop
loope
push
adc
mov
jmp
dec
and
inc
and
inc
hlt
push
and
cld
out
dec
fsubrl
je
test
rol
ja
pop
std
xchg
xchg
lahf
cwtl
out
jb
mov
sub
and
sbb
push
jnp
mov
pop
xchg
mov
xchg
in
movntps
mov
and
mov
dec
not
push
lods
insl
cs
movsl
dec
mov
scas
cmpsl
push
add
icebp
xlat
movsl
sar
adc
mov
mov
mov
mov
repz
pop
mov
adc
ret
cmp
mov
mov
xchg
das
clc
push
push
xchg
mov
fwait
jle
mov
jae
cmpb
mov
push
andb
cmpsl
test
add
jmp
test
out
cmp
loop
testb
push
cld
sbb
xchg
dec
adc
pop
rcrl
testb
lret
gs
fisttpl
lcall
movsl
xor
out
into
xor
and
xchg
inc
jle
jle
ja
in
gs
dec
jae
jo
loop
cld
or
sbb
push
paddusb
mov
movsb
out
sbb
push
bound
mov
mov
xor
pop
lea
dec
or
sub
xchg
jae
addr16
jp
loopne
mov
shlb
out
mov
or
ss
jecxz
cmp
add
fisubrl
xchg
pushf
imul
xor
cmp
xor
out
add
mov
sub
stos
cltd
cs
and
push
mov
jle
pusha
rcll
fcoms
pop
in
iret
sahf
out
ret
pop
push
out
inc
pop
icebp
fnsave
aad
push
jae
push
or
jnp
or
fidivrl
add
xor
stc
sbb
fwait
mov
scas
negl
lds
aaa
mov
sahf
out
leave
pop
ja
hlt
repz
jp
ss
stc
jp
jge
stos
rcrb
dec
insl
fidivl
jl
or
in
int3
jo
mov
xor
outsl
push
xor
mov
mov
and
jnp
addl
push
sbb
popf
in
and
daa
push
bound
cltd
fidivs
jl
jl
or
push
lods
fwait
or
lea
xchg
jno
ds
and
sarl
pop
ret
js
popf
ret
pop
fdivrl
push
sbb
aaa
sub
orl
rcrl
adc
jo
es
xchg
test
stos
sbb
jmp
xor
dec
mov
inc
push
add
sub
xor
pop
shlb
test
push
out
jge
xchg
and
xor
loope
mov
sub
jg
jp
mov
repnz
xchg
mov
mov
add
and
add
scas
jge
fcomps
pop
testl
shrl
adc
pop
test
sahf
loopne
outsb
cmc
mov
stos
xor
outsl
mov
mov
addr16
mov
fs
lcall
shrb
addr16
adc
dec
in
cli
lds
mov
inc
push
or
into
test
movsl
gs
push
loopne
mov
pop
push
mov
xchg
fcoml
adc
add
inc
data16
cld
mov
pop
aad
xlat
lret
decb
mov
xor
sti
or
test
sbb
jns
test
scas
int3
dec
dec
sub
inc
fdiv
fldcw
sbb
repz
push
pushf
ljmp
pusha
cmp
sar
call
adc
pushf
popa
mov
out
cs
dec
lods
inc
unpcklps
aas
ss
jb
pop
push
dec
push
insb
mov
cltd
in
repnz
les
jp
inc
std
cmp
cwtl
stos
mov
mov
nop
mov
lret
pop
sub
loope
push
pop
das
and
cmp
fcoml
and
jle
rol
jns
notb
and
mov
cmpsl
imul
icebp
scas
fdivl
cld
ds
lret
iret
lods
or
popf
shll
dec
mov
rcr
xchg
ljmp
hlt
xlat
ret
lret
repz
and
fst
cmp
clc
dec
jbe
xchg
sti
lret
jns
or
popa
into
mov
lods
jmp
mov
add
fiadds
clts
mov
cltd
fistl
aaa
mov
loope
push
movsl
popa
and
test
test
mov
mov
push
mov
stos
and
inc
jecxz
push
add
add
cmp
std
fnstenv
or
call
mov
fwait
hlt
push
mov
cmp
ja
flds
dec
lea
jns
repz
aas
mov
push
mov
mov
mov
scas
cld
out
stc
cmpxchg
nop
xor
clc
std
in
and
xchg
js
scas
mov
jnp
sub
adc
addr16
fwait
jp
sti
xchg
mov
add
mov
mov
fisttps
inc
test
ljmp
sub
jmp
fstp
jg
repnz
jecxz
sbb
js
and
mov
sub
insb
out
cmc
jnp
pop
lea
or
push
int
les
xor
insb
pop
ret
mov
inc
fs
jae
subb
hlt
push
mov
test
inc
xchg
and
xchg
xchg
popf
imul
pop
scas
pop
lea
adc
or
icebp
fs
mov
hlt
outsl
sbb
mov
inc
cld
loopne
jge
or
or
jmp
or
add
int3
pop
inc
xchg
pop
bound
call
jo
mov
imul
cmp
mov
push
insb
lods
jb
ss
insb
in
or
mov
lods
stos
mull
imul
jno
lds
aam
pop
dec
xchg
movsl
push
int3
adc
sub
cltd
push
inc
mov
test
lock
xchg
in
cmpsb
in
out
jmp
repz
sbb
lock
push
aam
and
cmp
and
xchg
or
xor
xor
hlt
in
ja
add
fistpll
xor
or
push
ret
lods
push
cmp
mov
faddl
push
out
lcall
cld
faddl
repnz
aaa
testl
dec
cli
hlt
mov
jl
mov
cltd
mov
xchg
lods
push
jg
popf
les
cmp
push
orl
rol
inc
mov
inc
fwait
sbb
mov
cmc
dec
pusha
ss
xor
outsl
imul
inc
inc
sbb
mov
mov
sarb
lods
loop
xchg
mov
sbb
dec
jp
cli
clc
or
xor
sarl
loope
or
cld
cmpsl
into
addr16
call
loopne
hlt
sbb
insb
clc
adc
adc
and
repnz
mov
dec
and
sbb
xchg
push
inc
xlat
or
sub
pop
inc
mov
fwait
cli
fsincos
mov
stc
mov
nop
mov
mov
inc
mov
sbb
jg
push
xor
xchg
pop
fstp
lea
pushf
repnz
push
and
pop
inc
adc
xor
pushf
or
inc
jmp
lds
or
movb
add
aas
aad
cmp
sbb
adc
adc
test
jecxz
lock
jge
and
fisttps
cwtl
gs
mov
push
fisttps
dec
inc
adc
xor
stc
fidivrl
mov
pop
test
das
add
test
xchg
imul
repnz
notb
jb
cld
xor
stos
test
push
mov
icebp
test
out
cld
imul
sbb
jne
mov
xor
shrb
cld
mov
ret
pop
test
cmpsb
enter
push
mov
cmp
jo
add
or
sub
lods
push
popf
sub
sub
mov
pcmpgtw
cltd
adc
filds
shll
push
pop
and
repnz
nop
lcall
push
lods
call
out
les
sub
lcall
into
or
insb
mov
mov
sahf
jno
mov
hlt
mov
mov
inc
adc
lods
or
xor
jbe
push
and
and
fdivr
ja
xor
in
push
rcll
dec
mov
or
push
mov
adc
dec
mov
arpl
adc
xchg
in
mov
fistps
out
ret
int
jmp
test
mov
out
and
mov
stos
dec
sbb
jg
dec
and
mulb
insb
push
sbb
push
push
adc
and
adc
ja
pop
testl
inc
outsl
xchg
mov
test
or
jno
addr16
adc
fisubl
sbb
sbb
push
jg
lock
scas
mov
or
aaa
fisubrl
xchg
push
repnz
push
cmp
add
xor
jg
inc
mov
cmp
ret
enter
xor
jbe
leave
add
inc
lods
int3
inc
lods
or
pop
sub
sbb
jo
xor
and
push
clc
popf
into
push
mov
cld
cmp
out
mov
int
push
or
jno
xor
jl
mov
dec
imulb
inc
movsl
shll
xchg
lahf
inc
pop
push
pop
or
push
mov
cmp
cmpsb
addr16
mov
adc
pop
js
fidivrs
push
push
mov
cmp
jae
ds
daa
cmp
es
dec
xchg
lcall
scas
ret
fildl
test
cmp
int
pop
sub
jae
pop
shrb
or
sub
bound
fsubr
inc
loope
or
xor
cwtl
outsb
test
jg,pn
jge
mov
cmp
cmp
pop
and
or
rcrl
mov
rcrl
mov
and
mov
rcrb
xor
lret
inc
outsl
dec
xor
loop
jae
stc
cld
pusha
fs
add
adc
cmp
ljmp
mov
cmp
inc
xchg
inc
cli
sub
lahf
xor
xchg
push
adc
xor
enter
push
gs
ja
loopne
inc
fwait
pop
test
cmpsb
adc
out
sbb
outsl
add
shlb
aam
sbb
rcrl
xlat
dec
dec
or
cmp
push
sbb
push
mov
sti
push
sbb
bound
jmp
aaa
xchg
inc
nop
jge
sub
ds
mov
xor
les
repz
xchg
ficoml
call
iret
into
outsb
pop
cli
pop
inc
adc
inc
sub
addr16
sub
inc
inc
cmpsb
pop
aas
je
push
jb
ret
inc
pop
data16
jb
jecxz
pusha
mov
std
xchg
les
fnstenv
mov
cmp
jae
sub
scas
pop
outsl
mov
stos
lock
lret
das
loopne
jnp
pop
adc
dec
and
inc
shll
push
negb
mov
dec
cmpsb
out
cmpsl
xlat
jl
cwtl
or
icebp
pop
mov
cld
xchg
gs
lods
loope
mov
es
adc
push
push
rolb
cltd
push
aam
int
ret
jmp
jo
frstor
cmp
clc
mov
pop
mov
jne
mov
lods
rorl
mov
dec
xchg
sub
mov
pinsrw
cltd
dec
shl
test
test
sub
inc
test
subb
pop
aam
sarl
adc
out
daa
add
mov
cmp
insl
xor
ja
aas
pop
push
bound
xchg
mov
mov
xor
mov
sbb
mov
lcall
jg
push
clc
mov
jne
push
xorb
out
bound
add
jns
sbb
and
mov
jp
test
xor
jp
dec
insl
mov
jmp
mov
imul
out
clc
mov
xchg
fbstp
mov
xchg
adc
mov
addl
or
pop
mov
jmp
gs
loop
xchg
insb
mov
push
and
aaa
leave
push
pop
subb
repz
mov
cmp
pop
test
test
stos
and
mov
dec
imulb
insb
roll
jne
ficoml
dec
xchg
xor
insb
push
imul
movsb
scas
and
lds
enter
aaa
push
mov
xchg
sti
leave
jl
inc
hlt
aam
das
arpl
or
jge
jae
sbb
out
mov
test
add
xor
rcrb
push
faddp
orb
into
fxch
scas
iret
jae
and
or
cmp
mov
push
or
jbe
fldcw
enter
daa
data16
xor
jg
sub
lcall
and
movsl
fcmovb
shll
pop
jbe
pop
dec
add
xchg
pop
test
xchg
jp
ljmp
js
pop
xor
cltd
push
sbb
sbb
loope
jmp
not
xor
into
test
adc
add
repz
sbbl
ffree
hlt
xor
test
jnp
sbb
stos
repnz
dec
std
pop
lcall
mov
xchg
adc
sub
cmp
outsb
pop
out
ja
and
cmpsb
cmpb
dec
mov
sub
pop
mov
mov
push
mov
lock
fmuls
fcmovne
lds
repnz
mov
adc
in
cmp
pushf
cmc
fldl
push
outsl
daa
and
loop
loope
stc
mov
inc
fs
jle
ds
ss
lea
mov
lret
add
cli
pop
adc
cmp
mov
outsl
into
sub
pop
jno
fs
mov
lcall
imul
adc
mov
sbb
or
data16
mov
cmp
jno
jne
sbb
xor
jle
movsb
nop
pop
fisttpll
dec
imul
inc
sbb
adc
les
leave
repz
sahf
push
xchg
popf
mov
aas
call
dec
std
inc
pop
lods
repz
loope
fistps
push
aaa
shlb
and
lea
jb
sarl
dec
cld
je
mov
jecxz
adc
movb
sbb
cwtl
nop
pop
mov
test
dec
daa
jp
fistl
pop
pop
adc
push
lock
das
mov
dec
lea
leave
mov
push
neg
mov
insl
lret
dec
mov
push
jb
lret
push
jg
xor
cld
mov
and
mov
push
and
stos
lea
rclb
dec
sub
fistpl
ret
js
ret
icebp
fisttpll
sbb
cli
adc
ljmp
mov
sub
dec
mov
outsb
xor
xchg
jo
notb
adc
jmp
mov
test
xor
push
out
push
mov
scas
xor
test
leave
dec
xchg
adc
rcll
sarb
repnz
push
add
inc
xorb
jns
or
jg
mov
movsb
jmp
divl
mov
call
fstpl
inc
mov
or
popf
sbb
lea
out
xchg
fldcw
mov
mov
in
fbstp
gs
xor
sub
subb
xchg
add
test
mov
fsubrs
sub
call
pusha
xor
fists
push
xchg
call
into
aas
xchg
ds
int
cmp
out
push
xlat
popf
xor
idivl
sub
jecxz
gs
and
insb
daa
cmp
jno
stos
jle
mov
add
lret
movsb
iret
sbb
pusha
ret
sbbl
insl
stos
jae
and
push
jg
cmpsb
or
addr16
test
push
adc
push
add
mov
adc
dec
pop
scas
adcl
shrb
mov
ljmp
hlt
pop
mov
arpl
lret
xchg
jle
sbb
je
aaa
js
outsl
or
add
int3
sbb
gs
out
push
fisubs
clc
xor
sub
and
xor
push
pop
dec
sbb
sub
mov
xor
daa
cmpsw
dec
cmp
cmp
js
jl
mov
dec
aam
xchg
push
cmp
pop
and
mov
jle
jns
mov
lcall
inc
mov
cmpsb
insl
std
inc
pop
pop
outsb
in
fsubs
jb
push
dec
cmp
inc
xor
add
adc
lret
rcr
les
push
mov
inc
sbb
nop
add
cmp
xor
push
dec
gs
int
adc
sub
push
aad
into
dec
dec
lcall
rcr
inc
mov
sub
mov
outsb
mov
pop
adc
sub
dec
mov
fnstenv
scas
push
push
cmpsb
dec
xor
fadds
mov
lret
repz
pop
sbb
dec
sub
cmc
movsb
cs
xor
xor
outsl
loop
subb
push
cmp
xchg
adc
shll
mov
mov
lock
cli
xchg
movsb
lret
xor
mov
loope
adc
into
adc
xor
jmp
in
pop
out
or
shrb
xchg
adc
mov
std
data16
cmp
enter
inc
cmp
xlat
scas
xlat
sub
inc
std
mov
fsubl
out
test
enter
xchg
nop
xor
xlat
inc
flds
jecxz
mov
mov
xchg
pusha
push
mov
and
and
int
ret
cmp
cmp
int
inc
mov
test
aas
movl
in
inc
jb
cmc
xchg
fisubl
jecxz
or
movb
int3
cwtl
xchg
mov
arpl
movntps
adc
fildl
inc
insb
mov
js
lock
cmp
mov
mov
int3
or
add
aaa
mulb
aas
bound
in
and
pushf
imul
or
mov
lret
mov
bound
imul
lret
jb
mov
or
out
jmp
ret
pop
pop
fbld
das
xchg
inc
fnsave
out
clc
xor
add
ljmp
test
xchg
daa
cmp
xchg
jo
xchg
mov
fcoms
jp
jb
mov
cltd
mov
adc
mov
cld
outsl
push
mov
orl
dec
test
cmpsl
sbb
sbb
push
shrl
xor
pop
stos
loope
shr
xchg
addb
ret
jns
xorb
mov
ljmp
mov
pop
mov
and
shrb
xor
int
insl
sysexit
fwait
xor
xor
push
imul
iret
jae
dec
inc
fidivrs
shrl
in
lds
mov
mov
sub
jnp
inc
lds
jp
jo
mov
addr16
mov
inc
push
xlat
dec
adcb
in
dec
loope
int
jecxz
jne
mov
add
xor
out
mov
ja
fs
push
addr16
leave
stos
fmuls
xor
adc
addr16
bnd
xor
pusha
adc
scas
std
ret
mov
gs
inc
nop
ficoms
push
inc
sarl
or
loop
xchg
inc
fcmovu
fidivrl
mov
sbb
sbb
imul
sti
lds
outsl
iret
rorb
out
repnz
add
push
dec
arpl
adc
jge
insb
int3
sbb
daa
cmc
aaa
aaa
xchg
xor
dec
jg
add
out
int3
pop
in
pop
push
jns
fiadds
decb
xor
test
scas
lea
and
or
adc
push
movsb
cltd
aam
push
test
lret
lock
movsb
xor
enter
daa
gs
sub
cwtl
aaa
sti
jno
push
lret
jl
outsb
dec
inc
adc
push
sbb
xchg
movsl
call
push
push
lahf
popf
push
and
sbb
nop
inc
iret
xlat
out
cmpsb
lock
rcll
pop
pop
jl
push
sahf
mov
sub
subb
and
loope
pop
pop
sub
mov
cmp
addb
jmp
add
pushl
adc
push
int
vmovaps
and
lcall
add
in
sub
sub
neg
outsb
pop
jne
test
cmp
sub
lods
jg
and
mov
lods
aam
call
fnstsw
push
test
pop
sbb
add
push
add
lret
call
mov
mov
sbb
push
sahf
psrld
cmc
imul
xor
or
or
stc
and
fs
mov
mov
mov
lods
jle
fmull
inc
cli
and
jmp
mov
stos
scas
adc
jg
push
into
repz
test
lcall
adc
mov
ljmp
popf
mov
addb
sub
lret
jae
inc
sti
ja
test
lret
or
jnp
push
mov
dec
sub
adc
pushf
and
adcb
les
sbb
xchg
and
lea
outsb
call
dec
out
pop
adc
cwtl
adc
dec
ljmp
xor
inc
jae
push
inc
xchg
xchg
or
push
mov
mov
cmpsb
psrlq
jp
dec
dec
and
mov
std
jnp
dec
cwtl
push
mov
fisttps
cmpsb
imul
std
inc
sbb
push
mov
cmc
test
lock
mov
jge
mov
mov
fbstp
rorw
lock
cld
insl
cwtl
hlt
int3
dec
xchg
mov
cmpsl
fs
mov
loope
push
cld
adc
out
mov
and
loope
fstps
lods
xchg
adc
stc
aam
sub
dec
movsl
aam
mov
ret
xchg
and
mov
push
fstpl
pop
stos
xchg
ss
ljmp
repnz
add
mov
mov
pop
xchg
xchg
rclb
cmc
dec
psraw
push
add
xor
cltd
out
js
test
push
mov
in
rcll
je,pt
jge
pop
test
sbb
xchg
inc
rol
mov
and
push
iret
or
jge
push
lcall
or
or
add
stos
in
mov
loopne
ret
fdivrs
dec
and
jns
or
push
cmc
fwait
popa
ror
push
loope
fnstenv
cmpsl
push
mov
cmp
out
push
leave
jae
stos
in
add
xchg
add
dec
mov
add
repnz
addr16
fmulp
jp
psadbw
shlb
mov
in
mov
pusha
push
push
cld
xchg
mov
out
jmp
aam
imul
adcb
push
cmpsb
adc
daa
push
popf
insb
std
cmpsb
cmp
iret
pop
call
push
xor
repnz
iret
fmuls
ret
stos
pop
pushf
imul
cmc
jecxz
push
add
test
inc
or
sub
insb
clc
nop
xchg
cmp
imul
lds
dec
mov
nop
jecxz
leave
loope
cs
mov
push
arpl
pop
enter
int
dec
aas
and
scas
outsl
idivb
lret
add
mov
repnz
aas
pop
dec
pop
ret
fisubrs
push
scas
jo
inc
mov
and
and
cmp
orl
jbe
sub
enter
daa
fs
cmp
add
int
jp
stos
sub
push
incb
movsl
out
ss
and
sub
cltd
push
arpl
test
out
adc
sub
lods
leave
test
dec
mov
push
aad
push
outsb
shl
dec
pop
sub
cwtl
dec
cmp
push
test
adc
xchg
mov
sbb
mov
xor
mov
out
mov
out
sbb
sbb
int3
jge
lcall
mov
cwtl
ja
sub
stc
les
cmpsb
filds
or
jg
mov
mov
cmp
mov
in
push
leave
and
lods
pop
ds
mov
dec
cs
xchg
shll
mov
jns
cmpsl
sahf
mov
div
xor
outsl
les
jmp
and
add
fmuls
xchg
sub
adc
repz
fsub
inc
and
cli
mul
bound
mov
jae
or
into
push
dec
adc
xor
jmp
daa
imul
add
jb
sbb
mov
and
add
sub
sti
es
out
hlt
nop
aad
mov
nop
jmp
xchg
testb
lock
lds
xchg
out
sbb
sbb
lret
mov
stos
adc
mov
and
and
subb
pusha
inc
cli
adc
mov
push
aas
lock
sbb
mov
jmp
aaa
jecxz
enter
lret
std
and
mov
mov
fcomps
dec
call
fwait
negl
lcall
mov
add
pop
xchg
mov
test
jl
and
jmp
rcrl
mov
insl
jg
mov
cmpsl
arpl
fstpt
mov
push
add
imul
and
jl
pushf
pop
int3
cmpsb
or
int3
push
movaps
jns
aam
jo
ret
and
orb
out
clc
stos
jecxz
xchg
jne
jmp
inc
jns
popa
pop
xchg
add
push
cmp
inc
dec
push
push
addb
and
xchg
andl
lock
dec
in
fisubrl
or
jecxz
rorl
not
sbb
pop
outsb
in
out
stos
mov
cli
lret
loope
add
pop
jo
scas
mov
sbb
xor
ja
mov
lods
scas
mov
in
add
pop
fwait
push
shlb
fs
sbb
push
or
outsl
or
test
sub
xor
pop
bound
cmp
mov
iret
in
mov
push
inc
fbstp
fldenv
or
fwait
addr16
lret
adc
mov
jae
mov
and
mov
in
imul
xchg
popa
iret
cwtl
jmp
lahf
xlat
sbb
cmc
push
adc
in
dec
stos
mov
dec
imull
cmp
dec
jge
add
adc
iret
iret
aaa
out
ret
cltd
pop
rcll
mov
sub
push
enter
pop
clc
jp
fcomps
cli
ficompl
add
xchg
xchg
loopne
sbb
sbb
fwait
test
scas
lods
xor
sarb
mov
jecxz
insl
leave
pop
mov
hlt
add
repnz
orl
push
xchg
aaa
mov
in
or
mov
int3
aam
jl
or
dec
dec
stc
xor
cmp
mov
and
cmpsb
cmp
inc
xchg
push
inc
inc
add
or
enter
daa
arpl
in
jno
outsb
outsl
jl
bound
and
mov
loope
cwtl
movsl
not
cltd
and
sbb
lahf
fistl
imul
in
call
jne
sarl
js
sbb
push
push
icebp
in
loope
adc
sub
add
imul
shrb
adc
sub
jbe
add
mov
xor
adc
jecxz
pop
aam
sub
pop
ja
lods
adcb
inc
xchg
clc
sub
lret
adc
and
dec
aaa
mov
and
mov
stc
and
mov
outsl
cmp
js
push
testl
test
sbb
xchg
stos
cmc
stc
addb
jmp
outsl
mov
lahf
cmc
stc
push
shlb
adc
adc
cmp
lods
lods
dec
lea
mov
out
shrb
sub
adc
or
sbb
mov
iret
scas
loopne
add
pop
inc
inc
inc
adc
imul
adc
mov
add
jbe
data16
mov
mov
clc
push
not
test
xchg
mov
sbb
dec
mov
adc
and
nop
fsub
dec
out
js
adc
dec
fldz
fs
cmpsb
inc
xchg
test
outsb
jl
xchg
sub
dec
fildll
jns
loopne
cmp
pop
sub
adc
mov
adcl
outsl
aas
or
data16
cmpsb
sti
pop
jecxz
mov
mov
jg
jo
mov
xor
mov
pop
imul
adc
sub
out
and
mov
and
clc
jl
in
push
sahf
imul
cwtl
mov
dec
lea
idivl
dec
xchg
cld
imul
fmul
xchg
mov
andb
cld
insb
pop
jmp
lahf
rcrb
dec
xor
xchg
stos
test
es
lret
aad
out
xchg
xchg
mov
mov
mov
cltd
popa
outsl
fiadds
fsubs
push
mov
mov
push
pop
daa
cmp
lahf
and
aaa
and
test
lcall
dec
xchg
test
mov
xchg
pop
xchg
shll
pop
pop
sbb
stos
scas
int
out
push
sbb
add
mov
ret
call
mov
add
nop
xor
sbb
mov
mov
sti
mov
push
shll
in
testb
enter
mov
pop
and
daa
loope
jne
push
int3
mov
xor
out
adc
adc
jns
xor
in
jno
xchg
mov
adc
sub
insb
mov
xchg
push
mov
scas
loop
push
imul
dec
sub
in
mov
sahf
lds
ror
ss
xor
mov
call
cmpsl
testb
insb
ret
call
xchg
push
and
stos
xor
dec
and
loop
shll
jnp
add
push
mov
repz
xchg
mov
ret
mov
or
inc
mov
in
jae
mov
push
mov
push
push
or
fcmovbe
mov
sbb
pop
mov
mov
jae
movsb
vxorps
rcr
idivl
andb
dec
mov
or
jge
nop
pushf
sbb
pushf
rorl
xchg
add
xchg
sbb
ja
fsubrp
pop
sub
xchg
inc
insl
scas
sub
and
cmp
cmp
popa
push
cmp
notb
jns
jbe
clc
jnp
pop
lret
mov
mov
inc
daa
lret
mov
sbb
or
pop
xchg
push
std
into
stos
and
rcrl
pop
adc
push
jge
roll
push
cmpsb
jns
mov
cli
xchg
adc
test
pop
aam
add
out
sub
loope
repnz
sub
aas
mov
mov
adc
dec
add
into
xor
addb
sbb
in
inc
add
dec
cmpsl
mov
pop
in
jbe
jle
xor
adc
pop
lret
lcall
push
sub
in
test
sub
inc
pusha
sarb
sahf
mov
hlt
dec
mov
push
mov
dec
and
push
hlt
pop
push
mov
fdivrl
xor
sub
inc
insl
xor
test
shl
popa
mov
xor
cmc
sarb
outsl
orb
loop
adc
fs
shr
ss
push
mov
push
or
inc
add
cli
pop
icebp
in
push
sbb
or
pusha
jnp
pushf
iret
pushf
gs
cmpsb
arpl
imul
pop
bound
mov
in
stos
adc
scas
lods
add
mov
mov
sbb
xor
loop
ret
mov
sub
mov
sti
test
xor
vpsraw
adcl
faddl
fldenv
lahf
movsl
repz
push
sti
xchg
insb
push
jns
js
dec
call
leave
mov
adc
scas
jmp
adc
sahf
inc
or
inc
out
push
aas
cs
arpl
lret
or
mov
xchg
out
push
std
jo
push
cwtl
subb
mov
cmpsb
bound
imul
fildl
sbb
ret
xchg
addr16
inc
adc
das
sbb
aas
mov
sbbb
cmp
jae
sub
dec
insl
dec
popa
sub
pop
jp
popa
lea
aad
icebp
mov
push
lret
inc
loopne
mov
roll
pop
or
mov
sub
shl
bound
fwait
ret
inc
or
cmp
fisttpll
test
xchg
repz
ljmp
das
lods
inc
int
mov
sbb
loopne
push
fisubrs
add
mov
xchg
in
test
push
or
dec
mov
jp
dec
in
xchg
mov
dec
ror
inc
addr16
shll
out
jns
mov
add
mov
push
push
mov
or
ret
and
mov
mov
cwtl
mov
adc
fs
pop
mov
inc
xor
fimull
pop
in
fwait
out
or
push
lret
jne
mov
mov
bound
leave
in
test
xchg
lock
mov
fildll
jcxz
shrl
and
mov
pushf
lret
daa
mov
and
aaa
pusha
cmp
cs
lods
jecxz
pop
or
filds
xchg
xor
sbb
popf
imull
mov
arpl
stos
movsb
rclb
insb
add
fdivrl
inc
mov
inc
adc
das
fadd
scas
cwtl
sbb
inc
mov
and
or
into
das
adc
aam
fiaddl
punpckhdq
imul
scas
jb
call
shl
cmpl
lahf
sbb
hlt
xchg
mov
arpl
xchg
cmp
adc
stos
jge
shld
loopne
dec
aaa
xor
or
fwait
xchg
aaa
or
int3
mov
mov
ficoms
jne
jo
arpl
or
and
inc
mov
lds
notl
out
out
dec
lea
test
jb
mov
in
jl
cmpsl
loop
call
push
cmpsl
icebp
mov
add
iret
lahf
sbb
fsts
push
mov
cmp
and
or
and
and
fwait
js
jne
pop
adc
push
loope
cmc
push
sub
shr
cmp
or
ds
mov
ja
das
shlb
shll
pop
incb
das
pop
mov
xor
sahf
push
xor
int
jb
sub
mov
rcll
lret
dec
fcompl
lcall
dec
lcall
inc
xchg
mov
push
or
in
mov
jb
and
sub
cmp
out
xchg
sbb
lret
mov
mov
sbb
adc
cmc
xchg
xor
adc
fnsave
das
fs
sbb
pop
ss
in
mov
pop
in
inc
mov
mov
sub
or
enter
jnp
gs
loopne
test
push
adc
aaa
cmp
lea
adc
cld
adc
cmp
sbb
outsb
cli
xlat
add
jge
pop
jae
mov
repz
repnz
xor
push
bound
nop
jp
pop
dec
movsl
test
inc
cmp
xor
rorl
repz
inc
movsl
xchg
das
xor
jmp
dec
call
imul
adc
pushf
fs
pop
jmp
push
and
and
movl
pushf
repz
int
addr16
add
orb
cmp
lods
jecxz
loopne
xchg
scas
imul
cmp
popf
or
add
inc
dec
test
or
pop
in
ljmp
cmp
mov
dec
aaa
adc
or
test
imulb
sub
xor
xchg
int3
push
cmpsl
pusha
and
mov
cmp
cmp
lret
mov
cmp
mov
xchg
mov
sub
push
rolb
cmp
mov
sbb
fisubs
mov
inc
cmp
call
jnp
lcall
lods
scas
dec
xchg
mov
inc
jmp
outsl
push
adc
xlat
add
pop
cltd
lret
test
lcall
or
test
cmpsb
call
sbb
pop
push
shll
pusha
cmp
jmp
mov
out
fdivl
add
cs
and
xor
xor
arpl
cmpsb
or
loope
xchg
pop
int3
and
bound
test
icebp
js
inc
enter
add
sbb
sbb
push
jne
mov
aam
loop
rcr
iret
bound
jge
jns
dec
and
aas
cmc
cli
mov
jns
sub
bound
mov
mov
xchg
addr16
jb
jle
icebp
int3
pop
in
add
pusha
aam
out
adc
adc
inc
add
mov
out
iret
nop
popf
push
rorl
mov
andl
jo
jnp
mov
xchg
push
dec
stos
add
iret
push
ficompl
rcrl
js
and
clc
jae
xchg
popa
push
adc
js
xchg
push
and
inc
or
stos
fidivrl
push
popf
xchg
xchg
insl
xchg
sbb
dec
mov
scas
aad
add
out
rorb
sbb
repnz
adc
mov
adc
arpl
orb
pop
fcmovnbe
jge
jno
sbb
mov
or
mov
into
imul
or
cli
xor
dec
xchg
xchg
sub
enter
aam
push
push
push
xor
dec
in
daa
stc
adc
sbb
daa
pusha
add
cmp
jno
test
xchg
dec
outsb
push
fisttpll
mov
movsl
or
call
lahf
cmp
push
scas
push
insl
test
adc
xchg
inc
lcall
pop
dec
out
aaa
js
call
push
bound
aam
es
sbb
sub
xor
jb
rolb
adc
xchg
push
mov
or
lds
add
lret
inc
mov
loope
daa
int
cwtl
sub
or
inc
lcall
insb
faddl
sub
outsl
test
insb
or
in
fwait
mov
jge
mov
in
mov
jmp
mov
mov
jle
fsubrs
pushf
or
push
xor
adc
jecxz
jns
jo
xor
in
cmc
dec
push
in
xor
push
cwtl
outsl
inc
pop
lret
loop
nop
and
mov
lods
fs
ja
adc
mov
add
imull
sub
aas
hlt
xor
ret
iret
shll
jmp
sarb
jae
stos
repz
into
bound
lret
cmpb
mov
mov
ja
data16
arpl
fiadds
sub
sbb
test
xor
sub
call
push
adc
in
pop
pop
cs
loop
jno
jp
out
outsl
push
es
push
scas
add
xor
fsts
leave
adc
xchg
xacquire
lea
mov
mov
lods
and
inc
iret
push
pushf
setb
jmp
pop
pop
xchg
push
inc
sbb
or
jb
insl
sbb
je
movsb
xor
xchg
jo
cwtl
jecxz
std
mov
pop
stos
mov
pop
rorl
cltd
lret
xchg
enter
mov
mov
jno
clc
jbe
das
fdivs
xor
xchg
sbb
fisubl
lret
divb
jae
dec
jle
mov
xor
push
icebp
adc
push
cld
in
xchg
lret
and
mov
test
dec
and
sbb
jbe
mov
inc
aam
push
dec
ret
popa
cmc
push
es
aam
fstpl
nop
clc
xchg
mov
push
ljmp
mov
sbb
out
mov
popa
or
xchg
mov
leave
cltd
add
test
popf
dec
push
inc
outsl
sahf
dec
andb
test
cld
cmp
lahf
mov
shll
or
mov
out
aas
xor
add
add
lahf
pushl
sahf
loop
sti
jg
or
ret
mov
pop
or
mov
mov
xchg
mov
in
push
inc
pop
inc
mov
out
push
pusha
fwait
dec
pop
ss
adc
cmp
scas
out
bound
push
lahf
in
adc
mov
fyl2xp1
sub
pop
pop
cmp
mov
mov
mov
cmp
mov
loope
ret
in
in
push
repnz
outsl
stc
sub
das
jne
xchg
lods
adc
xchg
lret
push
ja
and
das
negb
xabort
push
loope
gs
mov
test
lcall
jnp
mov
pusha
push
xchg
mov
iret
mov
inc
ret
mov
inc
shrb
jae
jmp
out
cli
loope
push
xchg
xor
xchg
in
cmp
imul
scas
cmp
lds
mov
sub
ja
cmp
mov
xor
cltd
hlt
sub
mov
inc
sbb
mov
sbb
aaa
mov
pop
or
loope
add
cmp
mov
mov
xor
cmpsb
fcoml
jp
and
xor
push
subb
in
push
gs
daa
pop
fimuls
jno
pop
sarl
dec
fisttpll
movsl
adc
mulb
mov
push
push
addb
sub
jns
fimuls
frstor
outsl
icebp
pop
js
push
fstl
xchg
dec
sbb
inc
pop
sub
mov
outsl
mov
inc
stos
cmc
jb
adc
fnstcw
jmp
mov
jns
icebp
sbb
mov
adc
cmp
movsb
adc
sub
stc
or
push
mov
pop
int
jae
dec
outsb
jno
enter
pop
adcb
lss
outsb
mov
mov
and
mov
mov
std
jge
movsb
sub
cmpb
pop
hlt
inc
shrl
inc
sbb
sahf
loope
pop
cmc
adc
mov
mov
add
inc
fs
movsl
adc
jne
lods
call
sub
cli
testb
fldt
cmp
mov
inc
into
inc
scas
or
xor
inc
loopne
sahf
and
adc
fcomi
adc
xchg
inc
add
adc
push
sbb
in
out
xlat
cmpb
mov
leave
xchg
popf
aad
pop
sub
arpl
push
inc
pop
or
fxch
mov
push
repz
fwait
xchg
mov
mov
call
inc
add
pop
inc
loope
adc
mov
jmp
and
xchg
xchg
inc
popf
clc
mov
aas
or
fbstp
or
dec
jo
je,pn
test
jecxz
inc
outsb
fwait
mov
gs
cwtl
mov
inc
mov
push
lods
mov
andb
mov
fcmovne
sbbb
out
xor
push
cmpsb
das
mov
mov
mov
mov
and
shrl
inc
sub
insl
add
enter
cmpsl
pop
ficoms
jmp
int
pop
movsl
lcall
mov
and
subl
shr
imul
fidivs
lock
andb
lret
orb
shlb
ljmp
sub
dec
mov
xchg
mov
jp
nop
jmp
subl
cmp
insb
test
and
inc
dec
out
jno
shl
xchg
push
ror
or
stos
push
xchg
out
mov
test
pop
mov
call
loopne
dec
sub
or
push
mov
mov
rcr
pop
inc
fcmovbe
dec
xlat
dec
insl
inc
mulb
addr16
jnp
sub
mov
mov
push
push
mov
push
lret
out
mov
and
cwtl
add
inc
cld
xchg
in
inc
scas
xchg
fstl
xchg
mov
lods
cwtl
sub
pop
sbb
jp
pop
mov
push
xchg
mov
push
les
in
or
dec
pop
push
jmp
xchg
cs
mov
add
test
inc
popf
insb
dec
mov
add
jae
std
add
and
int
jnp
addl
adc
cmp
out
push
pop
out
movl
push
xchg
pusha
mov
push
push
jp
ficompl
sub
adc
mov
and
inc
add
fimull
sub
subb
leave
stos
test
hlt
ja
arpl
sub
inc
sbb
jecxz
sbb
inc
shll
xchg
add
pushf
dec
int3
je
enter
add
jnp
in
xor
add
mov
push
shlb
movsb
and
shr
je
pop
add
gs
daa
pop
aas
jecxz
std
nop
lods
jno
movsl
jl
ret
dec
dec
dec
iret
push
push
push
ss
movsl
sbb
push
lahf
jbe
adc
mov
loope
test
cmp
xchg
fsubrs
jo
and
rol
dec
push
push
sbb
mov
mov
mov
add
shlb
push
orb
add
lcall
addr16
int
push
sub
jno
pop
push
lcall
inc
fcompl
pop
les
shlb
loop
inc
subb
mov
aad
mov
sarb
and
insl
push
mov
popa
xchg
fcomps
or
lret
xor
inc
test
mov
sub
xchg
push
imul
mov
inc
das
loop
fildll
and
jno
imul
adc
mov
mov
out
hlt
test
sub
xor
jbe
or
aaa
push
gs
in
loopne
mov
pop
fidivs
sbb
clc
sbb
cld
pop
int3
data16
notl
add
push
xlat
mov
xor
mov
xor
sbb
inc
outsb
stos
inc
arpl
std
xchg
cmp
ret
inc
jno
adc
add
repz
stos
lea
leave
call
pop
clc
enter
scas
push
pushf
lods
pop
jmp
lods
gs
jnp
inc
and
lahf
inc
push
xor
jb
fbld
out
xor
jecxz
pop
pop
sahf
cmpsl
es
or
inc
cwtl
outsb
fsqrt
mov
cltd
mov
pop
xchg
dec
push
sti
pusha
rcrl
xorb
sub
xchg
fcomp
mov
jo
jmp
sarl
repz
jmp
mov
xchg
mov
mov
ret
cld
inc
xchg
mov
add
rorl
jnp
mov
xchg
sarb
add
aam
mov
clc
es
xor
pop
clc
or
sub
popa
loop
or
cmpsb
cli
mov
out
rcll
jp
sub
xchg
orl
outsb
ss
loop
mov
repnz
push
leave
scas
push
dec
dec
sti
ljmp
jne
sbb
xchg
pusha
pop
jo
mov
pop
xchg
xor
add
rclb
cmp
xor
push
fnsave
inc
cltd
mov
mov
test
pop
std
jb
ja
jle
dec
lret
inc
lea
or
outsb
loop
stos
mov
push
push
fimuls
mov
ja
out
insl
push
sbb
loopne
jae
decb
in
lret
sub
fnstenv
inc
jno
or
andl
sbb
mov
test
in
in
mov
jbe
in
and
movsl
sub
fildll
mov
mov
mov
add
popf
xchg
pop
aaa
mov
pop
mov
stos
jo
push
and
jmp
and
or
push
and
adc
jae
jno
cli
ret
sti
pop
sbb
mov
pusha
aam
pop
xlat
mov
push
jae
push
add
xchg
fwait
je,pt
mov
pushf
sbb
stos
movsl
shlb
mov
aad
mov
hlt
ret
arpl
add
sbb
xchg
out
das
dec
adc
out
jo
xchg
imul
in
lret
pop
xchg
sbb
ficomps
or
pop
movsl
fisubrl
in
mov
int3
inc
andb
jbe
push
in
fsubr
or
jle
pop
and
cmp
dec
movsl
jno
daa
outsl
jl
pop
stos
dec
mov
xor
sbb
insb
pop
lcall
ss
test
je
popl
jl
cmpsb
or
mov
mov
rcll
movzbl
push
lret
in
imul
cmp
fsts
mov
sbbb
incl
add
mov
cld
sub
fmul
andl
pop
inc
pusha
push
lcall
rcr
inc
mov
sub
inc
outsb
aaa
mov
test
xor
shrl
mov
inc
add
popa
add
push
roll
sub
div
inc
xlat
lret
and
fcomps
sbb
dec
enter
xchg
cmc
mov
je
outsl
fstpl
loop
push
stc
fldcw
hlt
or
adc
ss
add
inc
mov
dec
pusha
out
mov
lds
test
pop
or
or
fldenv
mov
loopne
jecxz
pop
std
movsl
pop
adc
mov
xchg
mov
dec
dec
stc
fstps
pop
das
adc
mov
sub
xchg
mov
lahf
pop
sub
out
pop
loop
jecxz
sbb
inc
outsb
nop
out
fisttpl
dec
into
inc
test
mov
in
push
repz
xor
ja
in
inc
sub
adc
add
cld
sbb
mov
xchg
inc
stos
inc
ret
loopne
aas
dec
rolb
pop
lret
aas
je
inc
test
les
aas
std
mov
stc
cwtl
sub
mov
mov
js
pop
orb
sub
sarb
mov
fsubr
lock
mov
daa
jle
and
cs
rol
dec
push
idivb
add
sarb
mov
cmpsl
pop
test
mov
cltd
jno
cld
insl
pop
or
jb
testb
pop
add
pop
movsl
stos
and
sub
lock
push
xlat
jb
lret
fst
fsubrp
clc
dec
mov
xchg
bound
popa
stc
mov
adc
int3
jno
xchg
ss
push
jge
dec
psubusw
add
push
test
repnz
cltd
add
dec
mov
mov
test
sbb
inc
lds
inc
stos
dec
xlat
push
out
push
subl
adc
bound
hlt
and
xor
loopne
mov
ret
mov
mov
cmpsb
stc
dec
mov
sbb
push
sbbl
xchg
imul
sub
mov
shl
movsb
sub
insb
mov
sub
dec
iret
leave
addr16
pop
les
sbb
mov
dec
jge
in
mov
pop
fisttps
jp
mov
sub
repnz
out
add
idivl
sahf
fs
stos
jecxz
pop
and
xlat
int3
insb
push
jp
jnp
pop
lods
jle
pop
mov
adc
iret
shrb
in
pop
push
mov
push
insl
subb
mov
push
add
loop
add
xor
bnd
sbb
shrl
into
int
popa
incb
sarb
mov
sub
js
cltd
push
fxtract
or
loopne
inc
and
jge
in
sbb
xchg
push
or
popl
add
pop
popf
int3
dec
inc
lahf
pop
lds
push
faddp
xorl
daa
cmc
scas
fs
cwtl
cmp
xor
push
outsl
cmp
jbe
inc
adc
ret
add
enter
daa
pop
enter
fdivl
inc
jl
push
test
sub
and
pop
lahf
mov
inc
push
sti
std
pop
test
aas
test
fsubl
in
cmp
lock
cmp
sub
adc
cmp
out
pop
jne
adc
push
pop
xorb
add
mov
test
in
dec
out
int
adc
push
pop
fsts
push
test
addr16
pushf
xor
outsb
lcall
and
loope
pusha
loope
mov
and
pop
dec
inc
mov
push
xor
jo
iret
push
out
cmp
xchg
mov
idivl
ljmp
and
add
lret
cmc
push
dec
xor
push
outsl
mov
stc
nop
scas
xor
into
adc
cld
les
lret
cmp
cmp
cli
cld
jmp
pop
loope
cmp
insl
dec
or
into
out
and
gs
in
loopne
and
pop
sbb
dec
adc
fdiv
imul
mov
outsb
ret
mov
fcom
cmp
cmp
push
mov
or
mov
sahf
or
incb
jle
aad
stos
inc
nop
rcr
dec
orb
inc
xchg
std
aas
fldcw
dec
clc
or
xor
bound
loop
cmc
call
ret
add
pop
pop
mov
adc
sbb
adc
inc
xor
ja
mov
mov
dec
aad
mov
jecxz
pop
fcmovnb
movsb
cmp
cwtl
in
jl
int
or
sarl
mov
fistpl
pop
adc
mov
cmp
int
fs
das
push
push
adc
fsubrp
push
and
xchg
cmp
mov
inc
jle
push
xchg
cld
out
cs
jo
adc
cwtl
notl
loope
mov
and
push
jg
pop
fildll
shlb
sub
cmp
popf
fbld
dec
sbb
idiv
xchg
clc
adc
xchg
insl
sbb
popa
adc
mov
lds
sarl
jge
sbb
lret
std
mov
cltd
fisttpll
adc
mov
pop
sbb
dec
sbb
mov
xchg
push
jp
rcrl
out
popa
adc
lret
movsl
addb
and
xor
push
or
je
xor
shll
mov
lds
popf
mov
jae
outsb
ja
push
loop
mov
adc
or
push
hlt
fwait
or
or
pushf
out
and
jo
mov
xchg
out
sub
bound
in
insb
into
ftst
inc
shr
xchg
lret
mov
loop
sub
dec
xchg
jp
dec
and
inc
scas
rorl
pusha
push
outsl
in
orl
fildll
xchg
push
jmp
testl
mov
mov
adcl
inc
stos
push
mov
and
jmp
xchg
jnp
push
jle
pop
jb
scas
out
js
das
cmp
das
push
ret
push
pop
mov
mov
jae
call
jle
xchg
or
mov
test
fidivl
shr
sbb
cmp
sbb
rclb
mov
jnp
mov
hlt
pop
jmp
arpl
or
or
sbb
shll
lods
popa
jne
int
sub
shll
jbe
pop
hlt
ljmp
mov
mov
test
cmp
sbb
pop
push
mov
nop
inc
in
stos
add
enter
daa
pop
jp
cmp
test
cs
lock
cltd
cs
stc
push
or
mov
fistl
pop
mov
ret
int
cmpsb
push
fwait
in
or
int
and
pop
lea
push
pop
jle
sbb
sbb
sti
pushf
sti
cmp
push
push
xorl
pop
addr16
jns
jae
popa
enter
pop
imul
dec
scas
lea
outsl
add
pop
inc
xlat
sbb
inc
xchg
push
decl
jo
fwait
pop
scas
sub
mov
outsb
std
inc
mov
cmp
sbb
cwtl
fdivs
mov
and
jg
push
push
movl
rcr
push
scas
add
lret
faddp
push
cmp
adc
jae
and
insl
int3
mov
xor
push
xor
xchg
mov
xchg
dec
loop
stc
inc
xchg
cmpsl
or
adc
xchg
jmp
lods
test
mov
jp
ret
xor
sub
pop
cmpsb
cs
dec
jmp
roll
sub
test
push
pop
cmp
aad
movsl
daa
enter
pop
add
pop
cmp
jne
cmp
rcll
and
sub
dec
aam
and
repnz
dec
jge
sub
push
aad
dec
push
nop
pushf
fwait
loop
cmc
inc
stos
popa
fldenv
jno
repz
sti
mov
call
inc
arpl
adc
out
pushf
data16
jbe,pn
push
inc
mov
jp
aas
xchg
decb
bound
je
dec
pavgw
cmp
cmpsl
mov
std
add
cwtl
lahf
outsb
test
mov
xchg
mov
out
orl
mov
mov
mov
xchg
xchg
lock
das
clc
mov
xchg
stc
outsb
and
xor
add
add
outsl
insl
sahf
xor
shlb
imul
lret
push
fisttps
mov
jge
and
out
cwtl
inc
pop
jecxz
inc
shlb
mov
sub
push
aas
ret
sub
xor
shrb
fstpl
add
sub
lods
pop
fldl2e
dec
adc
popa
daa
push
popa
lods
xor
inc
mov
les
xor
mov
add
cli
imul
aaa
icebp
xchg
hlt
adc
icebp
out
test
push
insb
xchg
cmc
cmp
sub
xor
fildll
cs
add
xchg
jg
lcall
xor
pop
aaa
mov
enter
lret
subl
dec
mov
xchg
loop
xchg
push
aas
out
jne
xchg
inc
mov
sub
or
bound
pop
mov
iret
push
in
xchg
sbb
xchg
sub
inc
rcll
mov
repz
mov
popf
jmp
mov
push
dec
inc
mov
in
call
das
ljmp
leave
jno
ret
xor
inc
out
fcomps
or
loope
in
cmpb
sbb
out
leave
jne
and
ja
jnp
inc
push
jle
push
sahf
push
test
adc
add
ret
pop
ret
inc
or
jae
xchg
out
mov
movhps
loope
inc
add
mov
xchg
mov
adc
scas
scas
daa
subl
mov
jl
push
fucomp
repnz
sbb
leave
xchg
pop
arpl
ss
sub
or
jne
sbb
or
aaa
insb
mov
or
frstor
add
cs
and
pop
and
fiadds
dec
ds
insl
push
cmp
sahf
lods
outsl
cmp
jle
movsb
xchg
mov
push
or
push
add
enter
daa
pop
jmp
cmp
test
xchg
jl
sub
dec
or
sub
xor
or
notl
sub
test
aad
enter
mov
pop
xor
js
popa
ds
int3
lods
sbb
xor
loope
sti
cs
cli
in
mov
cmpl
in
adc
and
inc
pop
frstor
sbb
sub
pop
pop
xchg
jae
add
sub
pop
dec
pop
ret
lcall
pop
faddl
jns
push
xor
add
test
popa
out
jg
push
js
inc
divl
add
cltd
jle
mov
push
lret
cmp
or
cmp
or
popf
mov
scas
sbb
pop
sahf
adc
xchg
xor
pop
outsl
jp
pop
loop
in
out
and
xchg
std
adc
shll
inc
add
rcl
out
and
cli
cmc
dec
sbb
or
mov
into
mov
nop
gs
outsb
int3
loopne
loope
pop
pop
push
in
mov
inc
imul
loop
shlb
dec
cmp
jmp
outsl
sub
test
in
loopne
or
cld
mov
decb
aad
push
mov
dec
ds
and
stc
stos
hlt
les
sub
jb
cli
xchg
test
and
call
roll
les
adc
pushf
adc
fldpi
jns
inc
fstps
inc
mov
mov
add
mov
jecxz
icebp
outsb
stos
lahf
mov
test
pop
cwtl
pop
enter
int3
fmuls
and
dec
push
ljmp
pop
jg
mov
add
mov
mov
dec
lods
mov
fdivs
mov
mov
mov
inc
push
or
test
dec
dec
pusha
add
xchg
mov
push
push
cld
out
cmpsl
mov
mov
push
movsb
and
mov
jge
add
rorb
aad
sub
and
mov
sbb
es
addr16
inc
out
ret
fstps
jmp
sub
mov
call
jb
mov
pop
xchg
or
std
push
push
gs
mov
loop
sahf
cltd
dec
aaa
xchg
test
sbb
push
aad
leave
dec
ljmp
xchg
imul
sub
sbb
push
stos
adc
sbb
cmpsb
fstpt
in
roll
or
and
or
xchg
and
mov
jmp
xor
xor
jmp
adc
data16
fcomps
loop
imul
dec
mov
in
out
jmp
ljmp
pop
sub
xchg
push
lahf
jecxz
fisttps
or
mov
addr16
dec
xchg
cltd
leave
xchg
mov
cmpsb
dec
es
nop
in
outsl
gs
adc
fucomip
sub
sub
xchg
dec
mov
sub
out
lock
das
mov
mov
pop
add
imul
jp
insb
xchg
mov
jnp
fisubrl
push
cmp
iret
in
repnz
ret
dec
pop
stc
push
inc
adc
mov
fidivrl
push
data16
clc
mov
inc
orl
mov
movl
subl
ror
sarb
leave
mov
mov
inc
sub
pop
jge
adc
sbb
xchg
or
or
fcomps
lret
dec
fisubrs
movsb
xor
es
add
mov
xor
je
sbb
xor
xchg
enter
daa
pop
loopne
cmp
xor
jno
jae
jl
fsubs
dec
ja
bound
mov
push
fisubl
fadd
mov
adc
push
je
test
mov
mov
pop
pop
mov
ja
or
xchg
loope
push
push
sub
sub
or
sti
xchg
mov
and
test
out
push
xor
adc
gs
mov
lahf
clc
pop
inc
pop
rcrl
lods
inc
sahf
fdiv
push
inc
sub
lods
xlat
test
sbb
jg
adc
mov
shll
pop
cli
and
xchg
adc
scas
dec
fadd
lods
xlat
idiv
orb
arpl
mov
sahf
je
jle
jnp
mov
out
mov
or
loop
loop
xor
mov
out
and
sub
nop
mov
lods
push
in
mov
mov
sub
xorb
sub
cmp
xchg
lahf
or
sub
gs
leave
inc
loopne
pop
xchg
pop
jns
jbe
mov
imul
rcll
cmp
in
push
xchg
inc
movsb
sub
cli
call
or
in
dec
add
outsl
lret
inc
aad
mov
sbb
push
dec
inc
rol
lock
aad
sbb
xor
inc
mov
lea
loop
call
inc
lods
mov
adc
out
mov
push
inc
inc
inc
mov
fisubl
lds
dec
cmp
add
add
aaa
lods
decl
cwtl
adc
jecxz
mov
inc
dec
add
fcomps
mov
cmpsl
lock
out
icebp
jl
mov
add
roll
xchg
xor
lea
dec
pop
adc
cmpsl
pop
insb
scas
mov
cmc
add
cld
sbb
lock
xchg
lea
and
push
sub
dec
aam
add
es
adc
sub
xchg
sub
ljmp
fwait
lods
push
hlt
outsb
mov
pop
cmp
jmp
dec
jmp
cltd
add
test
jp
mov
out
xchg
push
cwtl
mov
es
subb
test
rcr
push
pop
push
and
hlt
mov
sbb
rcrl
decl
add
cmp
popf
pop
mov
into
loope
mov
movsb
mov
ja
insl
xor
test
inc
and
or
xor
fwait
xchg
or
push
test
inc
mov
mov
out
enter
mov
fs
push
je
mov
gs
sub
sub
cmp
out
addr16
pop
in
mov
rcll
les
mov
rcrb
or
popa
jl
pusha
lods
cmpl
jb
and
xchg
pop
rcrl
jno
out
jnp
popf
push
adc
mov
lcall
and
clc
jg
add
cwtl
jnp
cmp
jle
sbb
push
test
lods
iret
dec
mov
cmp
mov
push
jae
mov
push
sub
leave
or
and
sahf
inc
add
push
xchg
dec
sarb
adc
imul
enter
call
shl
xchg
mov
je
jle
jne
inc
hlt
cmp
les
addb
and
or
ljmp
add
cli
lret
loope
fimuls
pushf
xor
and
add
sarl
cmp
call
push
stos
or
jbe
xor
in
pop
push
sub
pop
jae
daa
pop
pop
lds
das
outsb
in
jno
pop
sub
dec
out
rorb
mov
aaa
fldenv
jae
repnz
xor
mov
inc
and
pop
push
imul
xchg
js
pop
xor
js
and
insb
jmp
loope
gs
sub
xor
ds
rcl
or
popl
insb
sbb
int3
add
ljmp
stc
cmc
cmp
sub
lret
shl
lcall
mov
sub
aam
outsb
es
out
test
lcall
xlat
fs
mov
sub
mov
push
rorb
and
insl
imul
mov
or
ror
stos
mov
mov
cmpsb
sahf
push
cli
pusha
cmc
xchg
xor
loopne
outsl
cmp
sub
or
mov
adc
or
jns
cmp
mul
aaa
push
cmp
imul
or
fildll
jp
cmp
loopne
out
mov
adc
imul
int
data16
repnz
xor
jge
imul
or
pop
jo
xchg
and
nop
sub
and
jecxz
aam
dec
clc
push
les
mov
xchg
or
lea
lods
call
mov
sti
cs
mov
pushf
addr16
jmp
or
cs
in
inc
dec
aad
inc
cmc
ja
aas
rcrl
mov
cli
je
sbb
jno
mov
imulb
cwtl
shlb
pop
mov
jge
mov
jg
dec
in
aas
xchg
fistpl
mov
pop
lahf
mov
mov
adc
jo
shrb
dec
mov
out
xor
push
test
add
dec
push
mov
cmpsl
push
cmpsl
mov
int3
ret
mov
inc
test
lret
popf
enter
fadds
mov
inc
fmull
sub
mov
ret
es
cmp
fstl
outsl
xchg
imul
lods
popa
insb
jbe
lods
jno
sub
jnp
adcl
dec
decl
mov
xchg
or
cltd
mov
das
push
mov
push
adc
dec
mov
js
xchg
jge
sbb
aas
in
shrl
into
sbbb
stos
repz
push
out
push
pop
int
ror
add
fdivl
ljmp
pop
sbb
xchg
xchg
adc
scas
inc
xor
mov
rcll
in
rcrb
pop
scas
mov
sub
dec
jl
rolb
inc
xchg
or
lds
sub
mov
cmpsl
in
bound
push
jns
mov
jo
pop
xchg
push
pop
sbb
mov
mov
or
adc
jne
mov
and
sbb
in
test
in
in
mulb
sahf
add
daa
ss
xchg
inc
pop
mov
xchg
and
or
sbb
popf
jge
pop
mov
fstps
stos
and
and
xchg
sub
jle
jmp
or
fwait
shr
iret
stos
mov
ret
popa
pop
addr16
inc
sub
jmp
in
and
or
pushf
mov
inc
jg
mov
orl
movsl
lods
lds
inc
shrl
rolb
gs
repnz
lock
in
mov
hlt
test
xchg
rorb
jge
std
in
cs
aaa
test
sbb
int3
loope
std
pop
mov
nop
fdivp
sbb
xor
jle
pusha
scas
mov
mov
cmp
jl
movsb
xor
dec
jbe
dec
cltd
in
inc
push
loopne
daa
push
push
jl
bound
jno
lock
mov
push
test
loopne
dec
xorl
dec
loopne
push
sbb
mov
push
ss
inc
mov
push
mov
js
loopne
pop
mov
push
repnz
loope
rclb
cmpsl
or
or
and
shlb
mov
das
sbb
popa
add
dec
jnp
mov
cmp
int
cld
fisubrl
pop
mov
pop
aas
cmc
mov
push
pop
or
sahf
sub
lret
mov
in
test
lret
out
jg
lahf
xchg
mov
repnz
aaa
fisttps
mov
idivb
adc
push
fdivrs
jmp
js
or
shll
mov
lret
inc
scas
cmc
dec
repnz
xor
ds
loop
pop
sahf
stc
and
and
cs
loop
and
mov
xor
xor
shrl
or
sahf
jmp
stos
insb
loopne
xchg
xchg
pop
mov
rclb
das
mov
adc
adc
pop
xchg
cmp
sub
fcoml
in
and
push
sti
or
test
aad
mov
add
hlt
push
inc
idiv
xchg
andb
les
inc
mov
fistpll
jno
int
push
in
daa
call
ds
mov
push
mov
pushf
adc
and
add
inc
aad
testl
lret
icebp
push
sbb
inc
dec
je
push
push
jne
mov
popf
inc
dec
cwtl
mov
mov
pushf
sahf
mov
mov
dec
xlat
test
fildl
adc
shrb
sub
or
scas
fcmovu
mov
jno
aad
jns
inc
shll
enter
fnstenv
cmpsl
push
data16
mov
and
or
and
into
sub
mov
pop
and
cmc
sub
adc
add
adc
fmul
mov
ss
test
imul
sbb
dec
popa
xorl
fsubl
sti
mov
loopne
test
loope
jmp
pusha
cltd
lock
xor
cld
sub
push
in
dec
pop
pop
lods
test
add
xchg
data16
mov
loopne
sbb
jo
out
mov
fmul
add
jecxz
dec
movsb
mov
out
sub
es
push
xor
je
mov
aam
ja
addr16
pop
sbb
ja
push
test
scas
ret
sbb
fwait
repz
and
lret
dec
jne
xor
xchg
mov
mov
in
popf
jns
push
call
xchg
push
add
xchg
add
or
lret
aad
mov
and
mov
je
mov
enter
iret
mov
in
ret
loop
or
inc
inc
mov
jmp
out
cld
adc
pushf
out
setge
insb
push
sbb
stos
xchg
daa
icebp
and
pusha
insb
xlat
pusha
fdivrl
aas
or
push
adc
imul
or
ret
out
pop
sahf
negb
jae
loope
push
scas
mov
push
decb
fstl
push
or
cmp
rcrb
loope
sbb
leave
arpl
arpl
mov
jno
mov
jmp
sbb
mov
mov
pop
int3
int3
int3
pop
pop
fistps
ficoms
out
jo
fldenv
and
jl
int
xchg
loopne
das
filds
dec
loope
daa
push
xlat
fdivrl
xchg
add
jno
in
jl
aad
dec
les
push
push
das
adc
test
stos
in
push
in
lock
test
add
jns
popf
movsl
cld
pop
into
and
js
xor
enter
push
lcall
adc
cli
xor
adcl
xor
adc
andb
sbb
pop
xor
hlt
jg
sbb
push
or
sub
fnstsw
xchg
push
mov
mov
sub
xchg
test
and
test
adc
imul
pop
pushf
mov
and
add
lret
push
push
push
cmp
idiv
cmpsb
divl
jp
lret
pop
sar
mov
pusha
sahf
pushf
xchg
cmc
adc
lret
xor
jno
loop
cmp
stc
fidivl
dec
adc
repz
jbe
mov
xchg
sub
xor
inc
cmp
xor
add
sub
inc
dec
gs
add
scas
dec
pop
pop
es
add
das
imul
mov
data16
sbb
testl
sub
fisubl
mov
mov
lods
xor
jl
dec
mov
bound
fnstcw
dec
push
repz
pop
nop
xchg
nop
ret
in
dec
leave
cmp
aam
mov
mov
push
jns
test
into
pushf
mov
pushf
subl
pop
cwtl
push
inc
sub
dec
aas
mov
lret
lahf
adc
jecxz
lods
rol
mov
mov
cwtl
inc
imull
mov
aas
push
mov
adc
dec
ret
sub
mov
mov
lock
push
mov
pop
mov
sub
and
test
lock
shl
xchg
call
dec
dec
mov
inc
mov
jp
mov
lret
jnp
adc
aad
stos
mov
jle
sbb
push
add
sub
addr16
and
testl
sti
clc
in
or
ljmp
mov
inc
ds
mov
rcl
xchg
daa
inc
insb
push
jp
lock
ds
cltd
daa
inc
addb
mov
dec
xchg
xchg
std
mov
repnz
add
stos
rorl
cs
adc
imul
orl
aaa
mov
mov
xlat
rcrb
pop
aad
in
ja
sub
dec
aam
inc
inc
imul
fwait
and
mov
jne
xor
mov
xchg
repnz
gs
inc
bound
push
jns
mov
fcoms
inc
mov
sub
sub
cmpsb
addr16
lcall
test
mov
aaa
xchg
mov
aad
in
sti
cmp
fbld
lds
jae
iret
xchg
mov
fnstenv
popf
lret
cld
das
mov
push
mov
fisubs
orb
inc
in
push
jnp
jmp
push
pop
mov
mov
imul
pop
aad
test
jae
fbld
fstl
push
jge
out
fucompp
pop
inc
xchg
push
icebp
and
aas
imul
jmp
sarb
dec
mov
insl
xlat
leave
ficoml
hlt
sbb
test
inc
ja
cmp
sub
sbb
sbb
xchg
or
jne
dec
lock
mov
loope
push
mov
inc
xor
xor
mov
jge
mov
movsb
dec
sub
aad
jb
repnz
adc
sub
dec
jbe
daa
push
cmp
pop
cld
jno
fwait
jl
roll
xor
rep
pop
inc
and
lahf
lea
push
shlb
shl
sub
int3
bound
cmpsb
and
pop
cmc
or
js
sbb
pop
pop
lock
push
cmc
adc
movsl
adc
sub
cmp
cmp
xor
push
sub
adc
jcxz
mov
mov
sbb
cmp
add
add
inc
mov
int
sti
sub
push
lds
pop
cmp
push
int
or
popf
aaa
cmp
leave
add
pop
test
lret
cmp
mov
repnz
mov
mov
and
jmp
push
fldcw
xlat
cmp
mov
ret
jg
lret
dec
rcll
les
cmp
sahf
aas
mov
xor
fidivs
outsl
aad
pop
loop
push
pop
stc
xchg
jb
fs
popa
jle
int3
out
ss
add
test
and
jp
cli
hlt
fsub
xor
xchg
cmp
popa
push
or
lods
into
and
dec
gs
sub
pop
cmc
mov
adc
fldcw
imul
aaa
add
sbb
popaw
push
xchg
xor
xlat
imulb
mov
mul
repz
addr16
int
sti
fists
aad
dec
sub
mov
mov
sbb
lock
les
cmpsb
repz
in
push
adc
lea
mov
and
xchg
daa
adc
sbb
jmp
or
cs
jecxz
dec
inc
inc
sub
out
jb
jno
dec
push
xchg
jecxz
sub
std
jmp
pop
cwtl
add
je
js
pop
adcl
notb
pop
mov
pop
lock
cmp
insl
dec
lret
mov
enter
jno
aas
and
insl
or
sti
cmpsl
push
jo
mov
push
fdivs
lret
ljmp
and
xchg
xor
popf
ret
jnp
sub
sub
mov
ret
xchg
in
fisttpll
fdivrs
clc
and
sub
inc
fbld
fxch
lods
mov
test
mov
outsb
insb
push
push
inc
dec
psrlw
pop
cltd
pop
pop
cwtl
test
inc
xorb
mov
add
jl
push
push
fnsave
shll
pop
pop
jae
xchg
stos
shrb
and
add
sub
inc
xorb
adc
adc
lret
xor
lcall
ficompl
mov
nop
fwait
sbb
je
dec
push
mov
or
push
add
adc
mov
mov
out
inc
xchg
jns
iret
jg
adc
xchg
repz
and
bound
dec
addr16
popf
jp
mov
fdivrs
push
loopne
xchg
jmp
in
cwtl
pop
pusha
sbb
filds
adc
push
or
das
lods
out
xor
popf
repnz
dec
mov
stos
jnp
shll
xchg
pop
inc
insb
lods
dec
inc
jnp
push
and
adc
in
sub
popf
iret
enter
movsl
jg
pop
or
pop
inc
dec
xchg
lods
jae
and
push
xor
fiadds
mov
jns
pushf
repz
sbb
stos
loop
pushf
in
sahf
scas
jns
sub
es
rclb
mov
rcrb
hlt
gs
hlt
arpl
pusha
ret
jmp
jge
mov
sbb
scas
aaa
out
in
or
and
loop
dec
int3
mov
loop
fcompp
addl
stc
jo
or
adc
movsb
aam
mov
out
push
jbe
pop
adc
sti
fildl
inc
lahf
in
push
gs
cmp
jmpw
cmp
dec
mov
movq
filds
sub
test
xchg
pop
sub
pop
cmpsb
mov
fsubl
js
xchg
es
inc
mov
loope
jmp
push
cmp
pusha
xlat
jbe,pt
mov
rolb
jno
add
pop
orb
sbb
cmpsl
mov
xor
or
add
shll
int3
inc
jbe
mov
xchg
add
inc
and
dec
ret
mov
pop
faddl
mov
push
xor
iret
loop
mov
sbb
call
outsl
xor
or
fsubrs
out
divl
imul
mov
xchg
sbb
imul
inc
push
cmc
outsl
mov
lods
loop
fwait
idiv
dec
aad
xlat
test
sbb
ss
adc
aad
fimuls
xor
cs
daa
push
and
adc
push
cmp
cmp
fidivs
subl
adc
jno
test
into
imul
fadds
xchg
adc
sbb
insl
clc
xlat
xor
insl
mov
bound
mov
aad
movsl
enter
jo
js
mov
das
into
pop
fldenv
jge
les
repz
fwait
pusha
xchg
push
flds
lea
and
lret
mov
add
pushf
adc
adc
adc
cs
xor
jmp
inc
popa
mov
jb
dec
mov
lea
pop
jecxz
jmp
lret
std
xchg
sub
mov
adc
mov
xor
cwtl
fistl
aam
adc
sub
js
cmp
sub
dec
test
mov
xchg
push
cmp
and
rorl
test
dec
inc
or
cmpsl
push
mov
es
sub
cmp
lock
lret
pop
bound
push
jle
jecxz
iret
mov
mov
sarl
aam
jge
ret
adc
dec
inc
sbb
xchg
gs
ljmp
scas
lods
sbb
cmp
pop
cmpsl
daa
xchg
mov
cmc
push
xor
orb
cmc
rolb
push
add
xchg
sbb
test
inc
dec
mov
mov
push
addr16
dec
push
mov
test
push
in
xchg
shll
rorl
xlat
imul
push
mov
in
dec
les
dec
mov
scas
or
sub
mov
fstpl
mov
dec
adc
ja
inc
repnz
dec
and
or
lods
rcrl
mov
xorl
leave
mov
loope
out
and
jmp
sahf
xor
jns
test
xchg
inc
cmp
mov
mov
sub
and
je
mov
sbb
mov
adc
clc
dec
mov
cmc
jo
test
dec
fbld
pop
sub
dec
xor
sbb
push
out
add
sbb
lcall
mov
and
andb
mov
xor
loop
pop
test
rol
jmp
and
jae
cmpsb
xchg
push
clc
add
mov
ss
jnp
sbb
cmp
push
sbb
push
cli
imul
xor
lods
sahf
xchg
shrb
mov
adc
or
mov
jne
rol
fiaddl
dec
das
jge
cmpb
movsl
push
sahf
or
jmp
jns
mov
lea
stos
fidivrs
xor
ljmp
and
sbb
pop
and
ss
xchg
jbe
dec
push
in
loop
pop
enter
daa
push
jb
cmp
daa
lds
pushf
add
xchg
dec
adc
mov
adc
nop
and
mov
push
data16
push
bound
mov
pop
inc
mov
pop
test
jl
shl
pop
sub
mov
aad
cltd
hlt
xor
sbb
and
sbb
xor
bound
enter
enter
xchg
xor
cmp
lcall
mov
repz
outsb
adc
test
jbe
mul
cmp
inc
aaa
sahf
mov
aam
and
or
popf
cmp
sub
rol
sarl
adc
cwtl
in
sahf
test
cli
cmc
imul
sbb
xchg
and
std
stc
adc
shlb
imul
mov
out
shl
cli
pop
add
xor
mov
cmp
aas
xchg
or
stos
into
jmp
pop
add
sub
pop
xor
mov
imul
dec
add
dec
js
addr16
lcall
test
push
xlat
je
outsb
sub
adc
in
int
fdivr
lds
addr16
nop
je
jecxz
xlat
pop
je
inc
shrb
pop
cmp
pop
aad
sbb
xchg
fsts
movsl
lea
adc
cmp
sub
test
adc
jmp
cmp
mov
inc
icebp
sub
inc
jl
cmpsb
aas
jg
shlb
pop
pop
dec
add
scas
je
mov
inc
mov
xchg
imul
aas
aam
pop
outsb
mov
dec
adcl
into
outsb
mov
lock
mov
popa
mov
dec
xchg
and
jno
rcr
jl
negb
lods
mov
dec
cmp
mov
mov
lcall
sub
enter
add
popf
and
xor
sub
iret
mov
cmp
jmp
es
ds
xchg
pop
addr16
movsb
out
ljmp
lds
loope
sub
cltd
xchg
cld
es
or
jg,pt
rorl
cltd
int3
and
ds
mov
push
sub
int
mov
out
mov
sbb
fimull
leave
lahf
mov
out
inc
mov
add
arpl
inc
repz
or
mov
pop
mov
loopne
fs
push
sbb
fisttpll
push
aas
inc
or
add
fldt
push
push
jmp
jne
fstl
into
es
add
mov
dec
push
jns
fdivl
xchg
xchg
sbb
or
shrl
add
addr16
or
jge
mov
mov
cmp
mov
shl
mov
les
dec
adc
ret
xchg
fs
arpl
pop
mov
xchg
sbb
push
inc
pop
popf
inc
jmp
mov
adc
sub
insb
orl
jle
dec
test
cs
repz
adc
iret
xchg
or
lret
xchg
pop
jp
jb
popa
lcall
mov
inc
shrl
movsl
stos
inc
cli
ja
fiaddl
cmp
pop
data16
adc
imul
scas
aas
mov
lds
adc
mov
lds
data16
leave
aas
sbb
hlt
sti
out
arpl
push
loopne
or
push
cmp
fs
xor
ror
js
pop
fwait
jp
ficomps
aaa
mov
inc
mov
and
and
test
pop
aaa
push
test
sub
leave
stc
movsb
enter
daa
push
add
jno
and
dec
andb
insl
iret
mov
adc
push
push
cmp
jmp
push
sub
loopne
cmpsb
test
es
js
inc
jae
les
push
inc
fs
add
cmp
ljmp
mov
insl
push
mov
scas
cmp
add
or
xor
mov
sub
repz
lcall
pop
fcompl
sbb
js
incl
lock
jecxz
xchg
rcll
daa
mov
jecxz
and
test
push
loop
inc
cmp
jecxz
cmp
xor
sub
push
call
jmp
movl
xor
xor
nop
pop
outsl
jb
popa
loop
lret
mov
pop
fs
lret
mov
xchg
lods
mov
push
sbb
xor
lea
cmp
in
sbb
mov
in
andl
testb
push
fildll
dec
adcl
dec
add
icebp
push
sbb
jecxz
sub
mov
xchg
sub
xorb
stc
jbe
cmp
cmp
xor
dec
int3
and
inc
ret
or
data16
repz
call
fwait
sbb
mov
jge
adc
nop
pushf
imul
sbb
icebp
lahf
mov
inc
xchg
mov
jb
lahf
scas
dec
jnp
shll
jecxz
xor
cmp
loopne
push
mov
repnz
mov
and
dec
outsb
and
pop
jno
shll
repnz
das
or
and
incl
pop
mov
xor
and
sub
or
insl
mov
lods
dec
cmpsl
push
fstl
mov
xor
lret
aaa
inc
xchg
mov
dec
xchg
and
bound
inc
pop
cli
into
pop
shlb
inc
enter
pusha
ret
xor
cmpsl
imul
clc
rorl
ljmp
lahf
leave
popa
testb
mov
dec
dec
mov
push
out
xor
out
mov
pop
cltd
add
mov
in
cmp
dec
and
mov
lcall
stc
push
test
imul
ficompl
cmp
test
fisubs
add
or
in
pop
xor
mov
mov
jecxz
mov
pop
sarl
dec
cs
inc
mov
fnsave
fidivrs
popf
jne
mov
mov
add
loope
ljmp
fstps
mov
xchg
loopne
sub
pop
mov
packuswb
js
mov
sub
mov
repz
ds
in
in
pusha
jmp
scas
pop
xchg
aaa
push
ljmp
cmpsl
dec
xor
ja
sub
xchg
popf
lods
add
push
mov
stos
aam
lods
and
pop
sub
jnp
aaa
ret
jle
aam
push
jne
mov
mov
mov
ret
dec
pop
mov
mov
insb
fwait
addr16
jle
push
jle
sahf
or
jle
stc
inc
jns
rcr
in
cmp
mov
jnp
scas
mov
in
shlb
repnz
dec
or
arpl
push
xor
popa
lock
sbb
nop
lcall
dec
mov
int3
arpl
call
faddp
jle
xor
mov
out
leave
cmp
pusha
ret
jne
mov
je
jbe
addl
daa
push
sbb
xchg
ret
or
leave
inc
jl
or
out
fisubrl
movsl
je
sbb
mov
jecxz
or
sbb
test
clc
dec
jne
sti
push
lock
sub
cmp
xchg
mov
rcll
insl
mov
loope
inc
xor
xchg
fisttps
rcl
outsb
or
or
sbb
pusha
sub
pushfw
lock
dec
or
int
test
sahf
pop
cmp
rcrb
gs
dec
pop
sub
push
in
or
mov
fs
int3
sbb
inc
pop
push
in
push
cmp
sahf
ret
repnz
pop
shr
enter
rcrb
mulb
sahf
lret
push
jge
testl
outsl
push
mov
loop
mov
stc
insl
aad
fs
adc
insl
fdivl
out
js
lods
mov
jp
xchg
lcall
sar
xor
outsb
je
sub
into
scas
flds
xchg
mov
loopne
adc
adc
in
imul
ja
aas
xchg
fs
arpl
sti
jecxz
cmp
dec
xchg
xlat
repnz
imul
lcall
mov
push
incb
adc
fmull
sub
int3
lcall
mov
fisttps
lea
call
cmp
pop
jns
mov
jmp
jae
cs
ljmp
mov
or
mov
push
out
repnz
je
cmp
jecxz
roll
dec
mov
xchg
cmc
cwtl
in
repz
inc
sbb
dec
pop
adcb
xor
incb
lock
pusha
scas
das
jmp
mov
scas
and
or
sarl
cmp
lahf
push
ja
movsb
xchg
dec
xor
push
mov
mov
lods
jmp
cld
jno
cmpsb
pop
xchg
mov
mov
and
std
in
pop
sbb
call
jne
icebp
sub
fwait
inc
aam
jmp
push
frstor
out
xchg
and
hlt
ljmp
push
lods
pop
lahf
sarl
mov
mov
and
notb
cmovge
jecxz
cmp
bound
mov
mov
test
pop
fildl
sbb
rcll
pop
pop
lods
mov
or
xchg
add
cltd
adc
incl
jb
lock
xchg
sbb
pop
jl
enter
pop
dec
and
call
or
mov
fwait
or
hlt
movsl
jne
xchg
mov
test
dec
out
rclb
jns
jp
in
jnp
xchg
das
stos
loope
nop
or
xchg
loop
mov
out
jp
daa
mov
mov
bound
in
hlt
mov
filds
ror
xchg
or
inc
jmp
mov
flds
scas
daa
push
popf
mov
mov
xchg
mov
xchg
and
clc
sbb
pop
pop
xchg
jnp
mov
jle
push
dec
push
mov
sbb
iret
inc
mov
xor
pop
pop
inc
ja
jle
and
out
inc
sbb
or
stc
fst
inc
clc
test
fisubrl
aas
xchg
push
adc
sbb
dec
fisubrs
fstl
add
lahf
add
mov
sub
or
jne
sub
fmuls
add
nop
jge
mov
lcall
xchg
int3
add
mov
int3
dec
and
pop
stc
and
xor
sti
pop
add
and
cmp
mov
and
jbe
lret
xchg
cmpsl
mov
daa
push
mov
cmp
lahf
shlb
xchg
jl
sub
dec
pop
aad
push
mov
ja
and
pop
lahf
sub
mov
test
ret
lcall
scas
or
pop
mov
inc
push
inc
push
shrl
dec
mov
sbb
cmpl
adcl
inc
push
adc
scas
cmpl
pop
das
adcb
addb
lret
call
mov
imulb
lcall
jecxz
hlt
xor
sub
outsb
ds
jmp
andb
iret
jg
test
mov
add
mov
sbb
and
test
call
pop
pop
fcomps
add
lret
jle
sbbl
sbb
pmaxub
mov
imul
xor
or
stc
and
ds
adc
push
ss
xchg
lods
jno
inc
mov
mov
cli
repz
xor
int3
cmp
ret
push
or
mov
adc
push
inc
mov
ret
cmp
imul
mov
into
cltd
push
lock
cltd
sbb
pop
cmp
call
mov
push
lahf
pop
sti
sar
xor
stos
sub
aad
add
nop
add
push
ret
push
fcomp
add
les
repz
mov
mov
xchg
call
mov
jge
ret
adc
sub
jmp
mov
cs
cmp
inc
and
aas
pop
jbe
jb
ret
imul
jecxz
xchg
or
enter
and
mov
jecxz
mov
sti
imul
nop
pop
ficompl
mov
mov
repz
lock
or
enter
and
out
stos
and
push
xchg
ror
add
or
mov
dec
cs
push
cmpsl
dec
mov
pusha
adc
test
lahf
cld
pushf
leave
sub
adc
lfs
cwtl
pop
cmp
xor
and
pop
ret
push
sahf
pop
es
xchg
add
daa
xchg
popa
sbb
ljmp
test
leave
sub
xchg
mov
sub
shrd
cltd
jno
and
or
jae
mov
mov
test
repz
iret
hlt
xor
out
add
imul
xchg
or
add
rdmsr
sub
sysenter
push
dec
mov
jmp
fcmovnu
pop
aaa
mov
ja
xchg
dec
adc
cmp
or
pop
pop
fwait
cmp
iret
push
inc
addr16
mov
outsb
es
lahf
in
ljmp
in
cltd
jne
jle
pop
mov
jge
sub
or
add
or
xlat
out
mov
shr
arpl
movsl
lock
test
inc
and
pop
mull
fstpl
adc
xlat
xchg
out
rcrl
jbe
test
dec
mov
and
mov
ss
negl
mov
lahf
add
jae
in
iret
mov
lcall
sbbb
push
add
in
or
je
jecxz
ja
ficompl
insb
mov
adc
add
push
mov
lcall
imul
movsb
mov
repz
repz
dec
out
jge
inc
or
push
ficoms
mov
push
in
aad
adc
cmp
pop
sub
xchg
push
loop
scas
mov
movsb
and
push
cmpb
stc
scas
movsb
mov
into
push
jb
mov
in
jle
insl
enter
daa
dec
into
lret
das
inc
jno
xchg
jl
push
pop
dec
int
adc
popf
cmp
movsl
and
and
cmp
lahf
inc
test
xlat
test
mov
jo
sbb
pop
filds
js
mov
subl
cmp
sub
movsl
or
negb
ds
divb
fcmovne
jnp
test
imul
jle
add
rcl
aam
cmc
int
pop
mov
xor
pop
aaa
icebp
sbb
adc
jge
lahf
jecxz
sub
cmp
mov
sub
inc
lods
lods
jg
insb
aam
aam
xchg
mov
icebp
divl
cmpb
dec
sbb
fcoms
aam
jo
sbb
lea
mov
sbb
jle
push
cli
popa
sahf
adc
xchg
cmc
test
mov
outsl
cmovge
xor
out
stc
fistpl
mov
repz
mov
in
mov
inc
out
mov
cli
es
inc
cltd
xlat
cmp
in
insl
or
cli
into
jne
out
movsb
shr
loopne
xchg
scas
imul
mov
pop
adc
nop
xor
pop
in
data16
test
xchg
shl
jo
cli
sub
mov
jns
ja
andl
adcb
pop
push
inc
mov
fnstcw
lea
xchg
xlat
xchg
in
orb
lods
enter
push
jne
mov
or
jns
mov
pop
int3
inc
or
cmpsl
push
aas
sti
sahf
fdivs
mov
dec
je
sub
xchg
movsl
xlat
lret
stos
push
std
aad
jp
arpl
mov
sub
push
fstpt
pop
sub
add
das
cmpsl
icebp
xchg
sub
je
sbb
mulb
loopne
dec
sub
cmpsl
dec
out
cld
mov
pop
int
cld
daa
pop
lret
test
push
mov
sbb
mov
push
jbe
sbb
sub
cmp
ret
loopne
je
hlt
rcrb
repnz
inc
xchg
mov
lret
jp
cmp
xor
cmpb
out
xchg
sbb
push
ja
inc
ud2
add
add
jns
test
divb
shll
test
sbb
imul
adc
sbbl
xor
shlb
incl
iret
adc
inc
cmp
or
rorb
cmp
mov
ja
negb
pop
sub
inc
data16
or
fninit
fwait
imul
push
jecxz
popf
jne
loopne
mov
add
out
jle
adc
jns
cmpsl
in
push
or
xchg
int
xorl
rorl
or
jnp
scas
inc
leave
jp
mov
mov
jb
and
dec
out
lock
jp
pusha
mov
and
mov
ss
inc
lret
push
andl
popf
fmull
mov
adc
sub
mov
jae
frndint
inc
jle
daa
hlt
push
dec
and
adc
ror
cmpl
inc
lea
mov
or
out
data16
mov
push
xchg
mov
int
rclb
imul
std
scas
lret
scas
add
ds
cmc
mov
mov
mov
fxch
sbb
test
daa
sbb
arpl
test
cmp
sbb
fisttpll
pusha
mov
or
pop
add
int3
and
insb
pop
push
stos
or
shll
jl
scas
xchg
fldt
and
or
push
ds
shrl
jbe
mov
lret
enter
daa
dec
outsl
aaa
cmp
pushf
movsl
jl
out
dec
cmp
test
addb
adc
pop
push
test
out
xchg
test
cmp
inc
sbb
push
imul
and
push
and
xchg
repz
in
out
ds
xchg
mov
shlb
cmp
cwtl
cmpb
add
pop
cmc
xor
nop
pushf
xchg
dec
ror
mov
call
lcall
cmp
dec
data16
push
out
int
add
sbb
push
push
sub
adc
mov
fistl
mov
push
mov
out
popf
in
repz
shl
das
sbb
shll
cmpsb
sbb
fmul
cmc
dec
xor
xor
jmp
out
mov
sar
xchg
cltd
fsubs
cmpsl
adc
ss
aad
mov
xor
cli
pop
xor
mov
cmp
jmp
pop
into
pop
push
cmp
jp
loopne
loopne
pop
into
pop
adc
lcall
adc
sbb
data16
sbb
iret
xlat
inc
xlat
scas
adc
in
mov
in
cmp
or
lock
std
aad
or
nop
mov
sti
xor
repnz
jno
and
xchg
push
mov
es
xchg
test
cmp
test
call
mov
jp
sub
mov
pushf
adc
mov
jge,pn
cs
xchg
inc
faddl
andl
fdivl
je
popf
pop
jecxz
std
lcall
clc
push
cwtl
push
adc
mov
sbb
or
dec
sbb
mov
mov
shrl
das
xchg
mov
loopne
add
loope
shrl
sahf
imulb
xchg
insl
pop
arpl
cmpsl
dec
push
clc
mov
xor
xchg
repnz
and
repz
push
mov
and
fbld
jbe
sub
out
and
aam
dec
ffreep
outsl
sbb
fstpl
push
xlat
clc
mov
jle
ljmp
mov
mov
flds
outsb
xchg
pop
fistl
clc
punpckhdq
add
je
cltd
fists
repz
adc
stc
ljmp
jmp
addl
ljmp
and
subb
flds
push
mov
mov
xor
mov
or
jle
add
mov
out
call
add
ja
fcmovu
dec
cli
jecxz
inc
std
movsl
or
fwait
lcall
jne
sbb
mov
lods
jge
pop
mov
bound
int
jns
xor
in
rorb
xchg
sbb
dec
mov
sbb
mov
test
add
lods
xchg
jp
insl
add
popf
negl
mov
xor
in
shll
push
hlt
fistps
inc
xchg
cmp
jmp
adc
xorl
xor
aaa
bound
mov
dec
lock
xlat
and
stos
repnz
lcall
jle
addl
adc
inc
test
sub
or
lock
pop
xchg
mov
outsb
or
push
jae
jne
dec
fiaddl
movsb
fcomps
mov
imul
sbb
xlat
and
rclb
cs
add
sbbl
mov
arpl
add
jl
cmp
pop
mov
add
jne
int3
psubq
pop
xchg
fimuls
mov
jo
sub
adc
rorl
fld
push
adc
repz
pop
cmp
dec
pop
dec
enter
daa
dec
xchg
mov
jno
aad
jl
adcb
arpl
sahf
movsl
nop
loope
and
repz
test
cmpsl
test
and
int3
inc
aaa
lds
pop
sub
sbb
sub
pop
and
pop
mov
mov
imul
sarb
cmp
cltd
mov
or
cmp
jnp
loope
sti
add
xor
mov
mov
pop
xor
sbb
rcrl
cmc
mov
imul
inc
or
jg
inc
cmp
adc
inc
and
push
push
icebp
adc
fmuls
cmp
pop
rorl
mov
lds
sahf
push
mov
cmc
adc
out
int
mov
pop
dec
aas
stc
dec
js
movsb
mov
adc
ss
leave
cmp
orb
cli
mov
xor
clc
sarl
mov
loopne
cmp
mov
loopne
dec
mov
adc
out
imul
clc
cld
add
push
data16
sbb
or
fwait
sub
movsb
mov
dec
xor
fbstp
adc
rcl
mov
stos
nop
xchg
xor
adc
dec
inc
mov
dec
fldcw
dec
shl
cmc
lds
jmp
mov
xor
popf
pop
fstpt
xchg
sbb
inc
sbb
mov
push
jb
aas
cmp
fnsave
cld
pop
dec
into
inc
aam
sbb
jecxz
cltd
inc
rcl
cmp
cwtl
fptan
push
mov
sub
mov
fsubrl
or
dec
nop
fistpl
mov
mov
pop
mov
das
gs
adc
mov
out
not
mov
jl
stos
sbb
insl
inc
lret
pop
loopne
cmpsl
dec
cmp
icebp
or
xor
sbb
imul
adc
lods
mov
xchg
fcoml
rol
adc
sub
mov
int
cli
fwait
inc
fldl
mov
xchg
push
mulb
popa
imul
mov
imul
xchg
cmpsb
js
push
sub
repnz
add
std
sbb
adcb
push
mov
adc
aaa
xchg
sbb
jb
shr
pop
sbbl
stos
cmp
es
cwtl
lock
add
xor
jg
int3
sbb
dec
push
inc
mov
repnz
ret
cmp
dec
in
dec
js
xchg
mov
fwait
leave
jg
push
sub
jne
mov
pop
out
cmp
aas
bound
gs
imul
movsl
mov
push
adc
scas
mov
lods
dec
sbb
in
addr16
addr16
mov
push
push
dec
lods
ljmp
lock
push
je
jmp
faddl
in
mov
aam
mov
mov
or
dec
flds
insb
add
push
dec
jle
into
sub
push
test
add
inc
iret
shlb
cmp
push
mov
jae
mov
lcall
aas
push
inc
hlt
into
icebp
fidivl
add
push
sub
imul
lds
icebp
shrb
push
mov
pop
repz
or
ljmp
loope
inc
push
mov
imull
sbb
cltd
iret
aaa
fiadds
or
mov
int3
cli
xchg
cmp
fdivp
xor
dec
addl
push
lea
and
sbb
movsb
sub
jle
pop
add
int
scas
in
xor
mov
cmp
xor
repnz
push
inc
idivb
and
jbe
push
sub
inc
test
out
adc
mov
mov
gs
js
xor
pop
jecxz,pt
push
shlb
mov
sub
or
inc
out
mov
sbb
clc
xor
and
add
mov
insl
add
sti
in
xor
sbb
mov
mov
or
sbb
fsubl
lock
outsb
lret
test
imul
int
push
mov
and
and
sbb
hlt
idivl
inc
scas
mov
imull
jmp
mov
xchg
xchg
sahf
cli
jns
cmc
fisubrl
xor
adc
outsl
lods
push
dec
loop
aaa
gs
add
insb
fs
jp
adc
add
lods
or
mov
nop
cli
mov
pop
movsl
cmp
pop
fisttps
push
and
into
push
shll
int
pop
or
ficoml
inc
lds
adc
sub
data16
nopw
ret
sub
mov
in
mov
and
ss
aam
sti
lahf
imul
sahf
inc
inc
das
les
dec
sbb
lea
lret
repnz
mov
les
dec
pop
adc
out
pushf
imul
cs
stos
sbb
mov
jne
aas
fdivs
dec
jb
ja
dec
inc
jl
je
or
ret
jns
aam
mov
lret
cwtl
xchg
fs
mov
testb
outsb
and
lock
dec
adc
pop
inc
adc
mov
inc
mov
das
inc
cld
inc
mov
dec
jb
not
push
pop
mov
insl
daa
adc
xor
sub
lret
lods
call
lret
rcll
mov
or
and
add
sbbl
xchg
xor
sub
clc
ljmp
test
es
frstor
scas
clc
xor
in
ljmp
rep
jne
idivb
pop
sbb
push
or
movaps
add
mov
out
mov
pop
mov
vorps
cwtl
dec
mov
gs
adc
xchg
aas
insl
sbb
outsb
out
jbe
stc
stos
daa
dec
push
out
sti
sti
push
add
mov
lcall
mov
xor
xchg
mov
cmc
mov
mov
and
mov
inc
sub
test
clc
fcom
push
int3
mov
jle
dec
cmp
out
sbb
mov
ljmp
mov
mov
xchg
stc
cmpsb
mov
stos
lcall
filds
mov
mov
in
mov
pusha
mov
fistps
and
jmp
cmpsl
loop
adcl
out
int
popf
push
out
cmpsb
mov
int
mov
and
mov
jnp
movsl
add
sete
add
adc
pop
push
iret
pop
jo
ret
ss
sti
lahf
iret
inc
scas
test
sub
popf
push
adc
jb
pusha
or
inc
jae
xchg
ficoml
mov
jb
imul
pop
scas
hlt
in
ret
rol
inc
push
mov
stos
mov
hlt
or
xchg
arpl
sti
inc
push
mov
sbb
push
mov
or
dec
cwtl
add
int3
in
push
pop
in
inc
ficoms
lock
ret
lods
scas
xor
lea
cmp
repnz
or
push
scas
dec
jbe
adc
pop
enter
daa
dec
push
cmp
js
jno
mov
jl
xor
xor
loope
sahf
jno
and
ficompl
push
imull
mov
xchg
and
pop
jnp
mov
shl
adc
jge
out
push
xor
loope
int
sub
ror
cmp
push
xchg
adc
cmc
pop
push
push
mov
xor
mov
jmp
dec
iret
xor
xchg
loopne
pop
int
cmp
pop
pushf
in
xor
or
outsl
test
sub
pop
jle
sub
in
lods
subb
pop
mov
imul
jle
and
mov
notl
cmp
add
imull
lret
adc
jbe
jne
sarb
sahf
popf
ss
mov
in
xor
mov
loop
push
je
mov
dec
fs
lods
subl
and
shlb
xor
fnstenv
into
add
gs
loopne
bound
adc
xchg
adc
mov
add
nop
and
adcb
sub
pushf
mov
and
fcoms
aad
addl
inc
fiaddl
fsts
and
mov
cmc
repz
adc
xchg
icebp
daa
cmpsl
lea
xchg
xor
pop
inc
xchg
pushf
adc
jns
push
addr16
jmp
xchg
cmpsb
lods
or
aaa
nop
inc
push
mov
aas
ja
jb
es
dec
mov
repnz
popf
add
xlat
rol
std
jno
jbe
dec
push
mov
inc
mov
cmp
sub
fstpt
cld
pop
out
mov
lock
jbe
das
and
mov
add
lods
or
push
div
xor
movsl
insl
push
inc
popa
dec
adc
xchg
adc
mov
push
cld
jae
mov
mov
sub
and
lahf
ror
pop
ror
push
shlb
aam
repz
aam
sahf
test
add
push
clc
outsb
mov
xchg
pushf
jo
ljmp
jae
loopne
in
leave
mov
mov
xor
lock
jecxz
enter
sbb
ljmp
in
xchg
das
out
daa
sahf
in
inc
lock
dec
repz
pop
test
mov
jb
bound
dec
mov
jne
and
loopne
pop
sti
ret
add
cmp
pop
xor
dec
cli
or
or
mov
clc
lret
in
cmp
ja
popf
ret
inc
pop
inc
ret
or
sbb
divb
outsl
lock
mov
and
out
cli
movsl
add
push
adc
mov
in
push
mov
mov
imul
xor
stos
push
jp
pop
dec
mov
jnp
mov
cld
call
pmulhw
ss
pusha
es
fistpll
add
dec
xchg
jb
sbb
loopne
int3
out
mov
popf
js
ss
or
mov
jge
subb
jnp
mov
outsl
push
popw
fsts
mov
jb
ret
cmp
int
inc
mov
dec
push
sarl
mov
push
and
lcall
sbb
nop
enter
jnp
push
jmp
in
shlb
mov
push
fwait
leave
mull
lods
arpl
jnp
pop
sti
xchg
jge
inc
push
sbb
fidivrs
lock
add
js
int3
rolb
pop
adc
aaa
and
xor
sbb
dec
mov
cmp
and
loopne
jbe
push
out
in
add
ror
adc
dec
cmp
mov
push
sbb
mov
push
or
inc
movsl
movsl
iret
ret
and
out
lahf
loop
sub
test
test
inc
in
cmc
cmpsb
rol
pop
mov
and
cmpsl
push
dec
sbb
sub
jno
cmp
cmpsl
inc
adc
shlb
orb
or
and
inc
add
jmp
xor
in
mov
and
sub
nop
icebp
lcall
pusha
fdiv
mov
xlat
outsb
nop
ss
test
dec
or
pushf
jg
outsb
mov
cld
push
mov
repnz
enter
aas
cmp
mov
mov
rorl
push
sbb
into
xchg
sahf
inc
out
cmc
push
fcmovnu
outsl
push
in
adc
jnp
inc
pushl
enter
in
mov
mul
sub
and
xchg
push
cmp
es
into
in
outsl
gs
test
repz
out
mov
les
sub
data16
repz
mov
xchg
sub
dec
mov
sti
in
dec
jnp
jl
push
aad
insl
nop
daa
sub
cs
popa
inc
in
sbb
les
sbb
rorl
cwtl
scas
xor
mov
fstpl
mov
adc
into
jmp
arpl
or
jb
outsl
mov
aas
push
cmpsb
mov
dec
xor
xchg
je
mov
jecxz
add
cltd
std
sbb
cwtl
or
mov
adc
adcl
lods
icebp
pop
mov
xor
lret
das
add
push
mov
mov
out
out
movsb
inc
jae
je
imul
push
adc
xchg
sbb
icebp
mov
inc
cld
sahf
push
lret
scas
jp
mov
inc
jnp
sub
pop
repnz
mov
cmp
push
sub
add
aam
or
lret
subl
clc
test
jae
ljmp
sbb
pop
xchg
mov
jnp
fcoml
jb
jbe
add
shl
cltd
mov
jnp
mov
mov
loope
pop
ja
test
cwtl
bound
add
shl
add
stos
add
out
cmp
push
jge
dec
xor
in
push
xor
in
mov
sti
push
xchg
mov
cltd
orl
lret
add
and
or
mov
mov
jne
out
jmp
add
adc
bound
jns
iret
and
or
jae
gs
ret
daa
inc
or
push
mov
mov
sub
dec
fcompl
mov
xor
les
pusha
roll
fldcw
jns
iret
sbb
jmp
cmp
fs
inc
or
into
dec
mov
dec
imul
insb
inc
sbb
jle
insl
in
push
lods
mov
xchg
cmp
fnstsw
ret
adc
imul
in
push
xchg
inc
push
or
push
pop
test
lock
dec
lret
addr16
negl
addb
cli
in
mov
mov
mov
push
dec
dec
leave
outsb
stc
popa
hlt
sahf
js
arpl
sub
loope
jge
push
les
push
repz
or
cmp
int3
mov
push
in
or
xor
js
inc
scas
icebp
mov
and
cmp
sbb
in
movsb
int
push
dec
mov
jbe
jnp
in
call
mov
daa
dec
push
xchg
cmp
sarb
dec
addr16
in
out
inc
adc
mov
push
lahf
add
push
movsb
push
test
push
in
inc
jae
adc
leave
mov
inc
sti
scas
pop
sti
es
push
pop
xor
mov
loop
cmp
test
testl
gs
adc
pop
test
push
lods
jae
daa
loope
xor
and
data16
int
les
pop
xor
scas
lcall
fsubl
mov
outsb
repz
jecxz
in
jg
cs
mov
mov
shll
lea
push
ss
ret
fdivrs
lret
and
movsb
cld
xchg
adc
sahf
jecxz
dec
cmc
das
cmp
das
outsl
dec
adcb
and
mov
pop
ss
pop
mov
ret
mov
out
jp
cli
pop
repz
push
push
decb
mov
mov
loopne
sbb
imul
push
adc
mov
add
aas
mov
xor
movsl
xlat
ljmp
mov
sti
pop
cld
sti
fwait
mov
lahf
popf
mov
nop
add
dec
std
lret
inc
add
push
flds
repz
xchg
ja
push
lea
insb
sbb
xor
pop
cmpsl
ss
adc
pop
insl
pushf
insb
dec
repz
add
insb
lea
inc
mov
mov
jb
and
dec
stos
add
je
iret
insb
jecxz
mov
fstpl
out
cwtl
lds
inc
mov
outsb
dec
mov
fucomip
subl
pop
dec
fcmovnu
mov
lods
mov
pop
or
and
sub
mov
adc
add
mov
or
dec
movsl
dec
or
mov
gs
cld
leave
shlb
loopne
push
and
aad
pop
adc
mov
or
jp
aam
sar
ret
cmp
es
sahf
mov
fsubrl
clc
xchg
sbb
popa
ljmp
push
lods
mov
mov
mov
outsl
xchg
ret
push
cltd
sbb
adc
and
cmpsb
sbb
sbb
push
enter
rorl
test
cmp
lret
mov
rorl
fcomps
xor
and
testl
jl
ja
jo
outsb
or
adc
mov
push
inc
mov
push
push
mov
dec
mov
popf
data16
xor
fwait
test
mov
cmp
adc
dec
out
mov
bound
add
imul
fildll
ljmp
jp
icebp
cmp
mov
addr16
mov
ja
dec
cmp
in
insb
lods
pusha
pop
lea
clc
jno
xchg
mov
mov
push
jmp
inc
popf
xchg
popa
mov
mov
xor
stos
stc
add
add
xor
mov
ds
hlt
imul
iret
cmp
cli
ret
cmc
pop
mov
push
add
pop
inc
ret
or
shl
imul
rclb
mov
inc
mov
scas
sbb
jnp
rclb
hlt
repnz
cmp
in
inc
hlt
jmp
xor
jge
loope
sbb
add
fimull
push
add
fldcw
cmpsb
dec
pop
pop
jno
cmp
jge
xchg
xor
sarl
push
and
cmp
cmp
jmp
mov
jbe
fs
iret
inc
enter
daa
dec
or
jno
or
xor
cmp
movsl
mov
les
and
popa
lahf
and
push
ja
dec
test
sbb
je
add
cmpsb
mov
js
gs
pop
cmp
mov
pushf
xchg
pop
loope
negb
sub
daa
repnz
mov
sbb
adc
xchg
cwtl
je
roll
mov
popa
add
sub
lods
movsl
sub
sub
ror
dec
dec
sub
lahf
xor
push
je
sub
dec
fidivl
in
and
outsb
push
add
inc
cmp
cmp
xor
mov
inc
xlat
mov
mov
sbb
cmp
xor
dec
imull
or
sarl
xchg
mov
sbb
sahf
xchg
cmc
negb
mov
loop
out
stc
fsubrl
fs
aam
adc
loop
ss
popa
push
lods
test
cmp
daa
adc
cli
mov
cmp
cmp
or
mov
into
stos
or
gs
test
sub
inc
adc
addr16
cmp
data16
pushf
sbb
xor
jne
cltd
sbb
in
inc
and
dec
mov
aad
jge
nop
fisttpll
and
addr16
mov
and
xchg
cmp
out
cmpsb
jp
mov
pop
pop
xchg
rclb
push
fistps
addr16
lods
push
inc
movsl
dec
outsb
aas
push
sub
jb
insb
mov
lret
cmp
loopne
pop
std
data16
cwtl
xor
mov
dec
mov
pushf
cs
pop
dec
pop
iret
mov
mov
rcrl
orb
mov
sub
mov
outsb
scas
roll
xchg
idiv
inc
mov
ret
sub
dec
push
xchg
clc
adc
cld
hlt
ljmp
ret
inc
frstor
jo
fstps
xor
shl
shll
out
ret
leave
repnz
mov
leave
fldl
lahf
mov
xchg
pop
push
mov
aad
push
popa
fsubl
xchg
lods
and
mov
stos
mov
xchg
or
das
push
je
adc
movsb
lea
cltd
sub
xor
mov
jno
xchg
rcrb
or
test
outsl
inc
xchg
push
sbb
test
pop
and
adc
xchg
lret
add
xor
mov
or
scas
ret
xchg
pop
mov
add
sub
pop
btc
add
xchg
inc
xchg
mov
fwait
mov
in
pop
dec
sub
scas
repnz
dec
push
out
xchg
jecxz
bound
hlt
aaa
in
pop
out
notb
mov
iret
adc
in
scas
cmpsl
repnz
jp
hlt
mov
xchg
es
mov
sbb
in
sbb
mov
pop
mov
mov
cmc
sarl
mov
out
adc
in
fdivrl
leave
cmp
andl
sbb
mov
mov
fwait
xchg
push
cmp
cmc
iret
fwait
xchg
add
mov
adc
fidivl
notb
sbb
sbb
mov
cld
pop
inc
outsl
inc
mov
mov
movsl
xchg
adc
loope
imul
sbb
add
push
mov
mul
iret
leave
pop
mov
hlt
xor
pop
arpl
or
cmp
imul
leave
xchg
add
or
pop
mov
mov
xor
cs
scas
scas
xchg
and
ja
movsb
jecxz
out
push
ljmp
in
mov
es
daa
inc
inc
jp
xchg
add
jl
mov
inc
pop
or
mov
mov
mov
or
lahf
aas
jb
push
dec
dec
sbb
out
sub
push
repz
pop
insl
lods
js
arpl
push
lret
out
gs
inc
ljmp
mov
adc
popa
ret
mov
addb
sbb
mov
xor
in
sbb
jle
or
inc
pop
das
in
jb
inc
hlt
and
andb
imull
loopne
fistpl
outsb
mov
lock
imul
mov
mov
mov
and
mov
xor
push
add
cmp
in
movsl
loope
push
rcll
rcl
xchg
jecxz
sahf
sub
lods
xor
and
pop
pop
insb
loop
rorl
out
sbb
push
rorb
ss
lods
nop
mov
out
xor
xor
ja
cmp
add
outsb
into
lea
fdivr
lret
loopne
jl
pop
cmpsl
cmp
adc
ret
bound
add
shl
mov
and
insb
stos
imul
vcvtsi2sdl
repz
rcll
sti
stc
dec
mov
aad
out
push
nop
mov
sbb
fcmovne
fptan
divb
fists
into
xchg
std
adc
lea
bnd
cs
mov
pushf
ret
jmp
shrb
xor
and
inc
popf
das
inc
shlb
jb
in
jmp
je
sti
xchg
jecxz
test
jecxz
test
cwtl
cmp
mov
test
mov
cltd
and
xchg
push
aad
pop
jb
pop
mov
scas
push
lock
mov
push
fildll
mov
sub
idivb
out
dec
add
mov
mov
adc
mov
lret
cld
outsl
fisttpl
ds
mov
dec
xlat
mov
sub
pop
or
lret
push
xchg
ret
pop
scas
cmpsb
es
cmp
sub
pop
pop
je
cwtl
xchg
ret
xchg
popa
repz
lods
mov
mov
into
js
xchg
push
fidivl
dec
scas
iret
lsl
movsl
add
cmp
pusha
sub
mov
test
fwait
dec
fisttpll
test
cmp
sbb
imul
ljmp
rcrb
stos
out
ljmp
add
pop
sub
or
imul
mov
lret
ja
test
dec
lahf
fwait
out
push
std
lods
or
lcall
sti
push
add
cmpsb
out
adc
out
jbe
push
bound
std
mov
stos
jo
xchg
inc
arpl
test
loopne
push
cmpsb
ror
jp
stos
mov
imul
mov
xor
pusha
xchg
push
sahf
fbstp
add
xchg
dec
cltd
cmpsb
jmp
sahf
cltd
stos
sbbl
out
mov
mov
or
stos
lds
and
loope
insb
xchg
xor
mov
xor
iret
cli
mov
mov
ljmp
aaa
sahf
mov
or
stos
cmova
mov
fisubl
out
xchg
insb
loop
sbb
dec
test
int3
aam
jecxz
inc
lds
or
mov
dec
jg
leave
ror
xor
jg
pop
arpl
dec
fistpll
adc
cltd
stos
dec
aaa
pop
dec
or
fmulp
jl
lods
pop
iret
pop
jle
ret
jp
xor
mov
jb
mov
outsl
and
mov
cmp
dec
push
cmp
ljmp
jl
enter
daa
inc
pop
repz
in
jno
push
repz
imul
dec
mov
cmp
cwtl
sub
movsl
shrl
and
mov
sbb
pop
jb
mov
jne
and
xchg
ds
js
cmc
mov
mov
mov
loope
jo
sub
cs
pop
jb
ds
clc
mov
hlt
add
sarb
orb
mov
sbb
repnz
add
mov
aad
scas
popf
test
sub
mov
or
pop
fsubl
push
jl
sbb
mov
mov
loopne
xor
cmpb
test
push
int
mov
xor
mov
out
cmp
cmpsl
ljmp
sbb
shrl
mov
push
sbb
jb
sahf
int3
xor
cmc
test
xor
iret
jne
pop
cmc
stc
stc
dec
jg
fs
push
adc
out
ror
push
lods
ja
adc
and
or
aad
stos
cmp
mov
xchg
jo
and
loopne
jne
pop
or
adc
xchg
adc
cmp
pushw
sub
sbb
cmpsl
popa
mov
cmpsl
aaa
data16
imul
xor
test
sbb
or
movsl
ret
lret
cmp
stos
cs
inc
cmp
mov
ljmp
xchg
shrb
lea
loop
lods
aas
jns
shlb
sbb
in
insl
push
dec
jmp
jnp
cs
add
inc
int3
lock
inc
fldt
sarb
rclb
cmovns
and
dec
mov
out
jge
mov
icebp
cwtl
divb
or
mov
faddl
jb
outsb
jbe
adc
icebp
fs
das
jle
or
jecxz
and
mov
lret
mov
loop
xchg
mov
cmpsl
inc
stc
or
ljmp
lret
imul
mov
lods
insl
mov
outsb
fs
xchg
sub
rorb
out
sub
and
xchg
ss
xlat
test
ljmp
fisubrs
cmpsl
push
xchg
xchg
dec
fs
sub
jecxz
pop
insl
mov
xchg
jecxz
test
repz
mov
push
push
adc
jp
negb
test
xchg
sbb
int
inc
rorl
daa
pop
js
mov
sar
out
dec
inc
rolb
ret
lcall
lcall
ljmp
xor
xchg
inc
mov
pop
add
jle
pop
pop
test
xchg
daa
inc
mov
mov
int
test
adc
push
sahf
dec
cli
jne
add
mov
enter
lret
sbb
stc
add
stos
cmpsb
in
xlat
xchg
xchg
mov
jl
jmp
sbb
fistpl
fwait
jp
pop
xorl
daa
or
dec
loop
or
out
pusha
sub
push
add
jecxz
outsl
xchg
imul
and
out
popf
cmp
int3
mov
inc
and
cmp
mov
repnz
push
jnp
movsb
push
jle
lcall
add
iret
pop
mov
cmpsb
pop
inc
dec
xchg
inc
lock
arpl
fdivrl
push
mov
sub
inc
insl
stos
xchg
sbb
arpl
ret
nop
xor
lcall
punpcklbw
shr
fdivrs
popf
dec
mov
hlt
lret
arpl
add
jge
andl
or
stc
test
addr16
pop
push
fisubs
outsb
xor
in
je
insl
jns
and
jle
movsb
stc
test
jbe
fsubs
in
test
loopne
stc
xlat
daa
inc
dec
add
jno
stos
nop
jl
xor
jnp
inc
movsl
enter
hlt
test
lahf
jge
mov
test
jl
or
imul
pop
fbld
js
sbb
pop
mull
push
dec
and
adc
lock
or
stc
subl
adc
pop
xchg
xchg
xchg
add
andb
sbb
std
push
add
xor
stos
jb
adc
sub
dec
sub
fnsave
pop
sub
fucom
push
jns
jnp
dec
inc
xchg
sub
popa
scas
test
dec
roll
push
das
mov
cmp
enter
jge
inc
and
mov
or
lret
sti
das
lret
popa
roll
repz
sbb
xor
outsl
cmpsb
das
cmc
dec
adc
xor
inc
jge
icebp
dec
jo
add
fs
or
adc
lods
pop
ret
pop
sub
and
aaa
cli
and
sub
cmp
adc
or
add
gs
pop
in
and
add
add
add
je
xchg
or
clc
cmp
lods
lret
xlat
out
aad
repnz
push
mov
cmpsl
jmp
mov
sub
inc
nop
outsb
mov
dec
or
inc
dec
pop
dec
fldenv
not
rep
push
or
and
sbb
jmp
clc
pop
jae
push
outsl
sahf
push
pushf
sbb
add
cs
mov
repz
idivb
lods
jb
xchg
je
js
jecxz
or
jmp
into
push
cwtl
mov
stc
mov
icebp
mov
xchg
jg
xchg
sbb
pop
mov
xchg
add
xchg
pop
das
pop
mul
mov
dec
addr16
and
and
shrl
vpsadbw
lretw
insl
js
hlt
dec
mull
arpl
shll
lret
fidivrl
mov
and
inc
nop
pushf
pop
cmc
ljmp
lret
popa
and
ret
jbe
xor
adc
stc
fnstsw
js
shlb
and
popa
and
lods
bound
cmp
adc
adc
ficomps
imul
arpl
rorl
jno
mov
test
jecxz
mov
inc
push
aam
jns
pop
inc
loop
mov
insb
adc
orb
shll
aam
mov
mov
add
fstp
mov
xor
mov
mov
or
cmc
mov
inc
or
adc
dec
test
mov
in
aas
or
push
jecxz
inc
mov
jne,pt
shl
enter
xor
jmp
mul
rcll
mov
dec
adc
sahf
movsb
push
idivb
ss
mov
xchg
in
mov
outsl
mov
je
push
xchg
out
lcall
xor
pop
cmpl
out
out
mov
dec
jo
xchg
stos
stos
jg
and
pop
adc
and
jle
xchg
adc
bnd
mov
addb
test
push
gs
or
mov
and
int3
out
cs
sbb
dec
sbb
cmpsb
mov
scas
test
leave
in
rolb
cmp
lock
xor
shll
hlt
adc
popa
add
sub
jge
aam
sbb
cmpsl
adc
or
dec
or
push
cmp
xor
or
jl
orl
scas
dec
hlt
xchg
and
int
stos
clc
jnp
test
test
in
call
enter
daa
inc
adc
or
sub
or
xchg
dec
xchg
push
pop
fldl
movsl
iret
aaa
ja
loopne
lahf
pushf
lahf
les
test
cs
inc
int3
xchg
inc
ds
aam
ror
scas
pop
mov
lods
js
sub
ss
outsl
loope
jnp
sub
test
cmpsb
pop
enter
mov
lock
movsl
cmpb
sbb
pusha
add
fwait
aad
jmp
stc
mov
nop
inc
shrb
cwtl
fs
lods
in
xlat
lcall
mov
clc
or
sub
adc
test
imul
dec
push
mov
mov
sub
mov
or
sahf
cmp
sbb
lds
rcll
jne
pop
fucomp
sahf
adc
in
cmc
adc
ret
ret
jb
test
pop
stc
mov
outsb
mov
ss
add
push
clc
mov
cli
push
dec
xchg
xor
pop
cmp
into
mov
into
ss
adc
jl
loopne
mov
test
fdivrs
and
mov
add
arpl
notb
insl
xlat
and
aam
mov
adc
push
xor
dec
sbb
xor
inc
dec
push
outsl
std
fsts
out
repz
push
inc
lds
mov
mov
pop
es
test
jmp
lahf
inc
cs
insl
addl
mov
aas
shlb
jb
mov
xchg
je
xor
jecxz
or
in
mov
add
out
mov
mov
sbbl
loope
pop
pop
movsb
mov
mov
imul
or
mov
lret
sarl
shl
push
pop
jle
pop
jl
dec
repnz
inc
mov
icebp
cwtl
xor
cld
mov
dec
cmp
push
sbb
pop
lods
mov
shrb
mov
aam
mov
ret
add
adc
clc
or
das
ljmp
subb
les
and
lahf
cltd
mov
clc
add
or
jecxz
ds
sti
or
xchg
fmul
dec
les
test
or
pop
sbb
in
sar
sbb
pop
into
sarl
adc
fs
rcll
adc
mov
or
fists
xor
loopne
mov
or
mul
pop
sti
sbb
cmc
dec
js
cmp
sbb
fwait
jo
add
in
pushl
loop
mov
xchg
ds
adc
andl
out
out
in
mov
xlat
mov
pop
subb
ss
mov
or
out
lods
adc
dec
mov
add
xor
hlt
leave
daa
pusha
arpl
adc
xchg
shr
jmp
call
or
push
cltd
push
mov
lahf
mov
lds
add
push
int3
insb
enter
pop
ret
jle
push
add
mov
fcmovne
pop
repz
ret
pop
pop
mov
mov
jae
and
sub
pop
or
cmp
addb
mov
jg
adcl
nop
test
addb
or
rol
sbb
push
cltd
mov
inc
orl
pusha
repnz
arpl
add
outsb
leave
cli
jge
or
lret
aaa
xchg
inc
rorl
xchg
add
add
ret
cmp
adc
lods
jge
xor
lcall
and
in
cmp
movsb
psubw
jbe
mov
ror
out
lret
xchg
daa
inc
bound
jno
leave
mov
dec
add
popf
push
inc
movsb
dec
movsl
push
jmp
sub
lahf
mov
test
das
in
cmp
int
int
arpl
mov
idivb
and
pop
jne
arpl
lahf
shl
mov
sub
out
cmp
hlt
ds
jbe
adc
int
insb
dec
cmp
sbb
mov
xor
aam
int
inc
subl
out
pop
sub
lcall
mov
outsb
inc
mov
fadds
out
inc
mov
mov
mov
loop
adc
push
and
pop
pop
push
ds
fdivs
div
adc
lret
pop
cs
dec
mov
test
popa
sahf
mov
cmp
xor
lret
inc
inc
loop
xchg
cmp
outsl
addr16
adc
shlb
cltd
dec
imulb
dec
pop
sub
and
in
mov
xor
cmpb
test
cmp
aam
gs
outsl
mov
pop
and
outsl
imul
scas
jns
adc
or
sub
sbb
pop
incl
cmpsb
push
sub
les
test
rolb
sti
mov
dec
jno
pop
aad
fwait
loop
and
repz
movl
mov
or
loopne
or
icebp
cli
and
cmc
cli
es
sub
jb
flds
loopne
sbb
aam
jmp
and
mov
inc
add
aas
outsl
mov
mov
je
mov
sahf
jecxz
dec
pop
out
jecxz
std
test
push
cmp
xorl
imul
adc
inc
dec
iret
das
sbb
mov
pushf
sarl
and
ljmp
dec
shrl
inc
lret
decb
mov
mov
outsl
out
cld
lret
sub
lret
mov
subl
ja
jne
lret
and
sub
inc
jle
xchg
dec
mov
sbb
test
inc
inc
lret
xchg
xchg
cli
or
adc
dec
popa
dec
shrl
roll
inc
imul
xchg
insb
jmp
push
mov
mov
cltd
cmp
je
lahf
hlt
insl
push
pop
out
cwtl
dec
sub
add
xor
xchg
xchg
cmp
out
inc
rcll
movsb
pop
jns
sbb
jbe
add
adc
insl
xor
lahf
or
scas
xor
push
push
xchg
les
jae
ficompl
push
dec
dec
imul
inc
jp
lahf
or
pop
add
lahf
outsl
jmp
xchg
insb
jne
imul
out
repnz
bound
imul
in
add
xchg
adcl
sub
int3
cmc
addr16
jp
nop
dec
mov
imul
je
rorb
jno
in
outsb
mov
fsubr
fbstp
insb
inc
jmp
lret
sbbl
out
sbb
popf
mov
mov
jne
or
stos
xchg
pusha
jns
xor
mov
jnp
stc
mov
cmp
xlat
adc
adc
push
pop
ljmp
jae
sub
xchg
or
mov
push
inc
ljmp
xchg
enter
les
imul
scas
outsl
sbb
lds
test
ds
repnz
in
or
scas
xor
hlt
stos
sub
arpl
jmp
and
and
xor
push
hlt
testl
sbbb
sub
dec
pop
mov
fimuls
in
leave
jo
shl
scas
or
inc
and
pop
cmp
fadds
lcall
jbe
pusha
dec
in
cmp
jbe
ljmp
cmp
mov
dec
jo
pop
push
and
dec
movsl
sub
vcvtsd2ss
imul
pop
inc
pop
jmp
dec
pop
fidivrl
int3
pop
mov
and
push
inc
loope
adc
sbb
sbb
ds
mov
adc
test
nop
scas
fimuls
sbb
repz
add
lret
push
xor
and
int
push
add
jb
cmpsb
pop
stos
sub
lcall
jo
dec
push
mov
xchg
mov
test
arpl
jg
fwait
mov
sub
js
and
adc
sbb
xchg
and
sub
in
xor
lds
mov
add
mov
jge
pop
mov
push
outsl
out
stos
sub
es
andl
scas
fmull
jg
adc
popf
mov
mov
cli
mov
adc
cmc
or
pop
gs
sbb
lret
pop
adc
popa
xchg
adc
inc
imul
sub
add
push
sbb
xchg
push
add
sub
jae
rcrb
sti
fs
sub
xchg
ret
push
aad
add
nop
decl
add
sub
add
shll
or
int3
sub
lea
lock
test
cwtl
jnp
je
scas
pushf
sbb
cwtl
jmp
rclb
inc
call
loopne
aas
push
sbb
jb
je
dec
jmp
push
je
test
mov
std
push
enter
mov
add
dec
fcoms
mov
shll
mov
js
mov
je
push
and
lret
add
sbb
ljmp
incb
inc
sub
mov
inc
mov
push
lret
daa
scas
cli
mov
adc
mov
ljmp
sub
push
jp
and
es
roll
clc
subl
ljmp
imull
xor
jge
imul
fidivs
outsb
add
sub
test
stos
call
push
sbb
add
test
aam
xchg
outsb
leave
sbb
jmp
pop
and
movsb
stos
jge
mov
add
cs
cli
call
dec
push
xor
push
cli
xor
jg
mov
adc
dec
mov
jno
loope
cmpl
inc
adc
push
or
pushf
dec
fwait
into
jo
push
sub
mov
test
fnstenv
inc
hlt
out
pop
jns
lds
xchg
shlb
popf
sub
and
addr16
jp
lret
add
mov
mov
dec
outsb
mov
push
pusha
cltd
stos
icebp
mov
xchg
and
pop
stc
xchg
xchg
test
out
push
out
adc
popf
xlat
out
mov
inc
sbb
stos
add
js
dec
sbb
insb
sahf
int
jnp
repnz
jle
push
dec
push
in
xor
insl
ljmp
push
sbb
inc
sbb
dec
jae
jnp
push
scas
int3
mov
cs
cmp
in
xchg
outsl
fildll
pop
jp
scas
shrb
rclb
fucomp
add
jmp
movsl
lahf
hlt
idivb
outsb
inc
je
stos
jge
and
sbb
cmp
adc
push
or
dec
add
sbb
int3
adc
call
fdivp
cwtl
sahf
xor
push
outsl
inc
scas
jmp
bound
sarb
jne
stc
popa
jbe
jne
in
and
enter
daa
inc
mov
jno
ja
jl
insb
sbb
popa
push
push
pop
push
cmp
pusha
imul
stc
lock
cmp
xchg
test
test
icebp
inc
jmp
add
add
pop
jge
pop
repz
push
ret
jno
das
sub
cmp
sbb
jg
xor
sbbl
mov
sbb
jle
inc
xor
xchg
jle
lret
fildll
sub
test
aad
aam
stc
fs
sub
out
outsb
or
roll
mov
mov
mov
mov
sbb
push
adc
pop
xchg
fmuls
jecxz
loop
push
lret
sbb
pop
dec
adc
mov
pop
cmc
addr16
repnz
lret
inc
dec
inc
loop
test
and
fstl
clc
add
ss
cmp
sbb
and
jmp
or
mov
mov
cmp
into
fbstp
sbb
push
adc
data16
pop
popa
inc
sbb
push
xchg
dec
imul
jmp
popfw
sbb
inc
insl
cmp
mov
fisubrs
mov
out
in
push
or
sti
adc
mov
nop
aad
lret
fimull
dec
test
or
cwtl
xlat
xor
cmp
mov
repz
mov
call
sub
jp
aas
in
adc
pop
inc
pushf
mul
jmp
xchg
push
test
mov
outsl
outsb
in
bound
fwait
jb
sub
dec
bound
je
popa
and
cmc
out
and
idivl
mov
mov
mov
mov
and
xor
fistl
jbe
inc
mov
mov
das
flds
mov
ret
mov
imul
shrl
fdiv
iret
jmp
insl
adc
mov
cmpsl
inc
inc
ss
sbb
inc
sbb
xchg
push
mov
and
lods
sahf
inc
pop
or
shlb
pop
imul
mov
xor
fstl
mov
mov
cli
frstor
lcall
mov
sub
jno
sub
cmp
inc
repnz
stos
sbb
test
divb
loopne
jp
stc
mov
test
push
bound
dec
mov
roll
mov
pop
iret
push
push
stos
insb
leave
lods
out
cmp
aad
icebp
addr16
add
imul
in
divl
or
testb
jmp
dec
mov
xchg
mov
mov
sub
fidivl
push
fwait
dec
push
aaa
or
jp
or
mov
fwait
std
xor
pcmpeqw
imul
push
cmp
scas
lods
jns
movsl
pop
in
ret
out
pop
pop
or
rolb
outsb
cmpsb
clc
or
jbe
addr16
jp
mov
inc
mov
push
push
mov
leave
pop
in
in
pusha
xor
int
lock
xchg
cmp
stos
jmp
pusha
jl
xorl
out
jg
popf
aad
mov
andb
ja
and
xor
out
imul
push
sub
adcl
mov
fcmovnb
and
pop
pop
int
inc
daa
loope
jae
or
imul
in
inc
call
dec
xchg
xchg
jbe
jo
sbb
imul
scas
xor
push
std
shrb
mov
cmp
or
popf
mov
packsswb
and
jge
push
xchg
sbb
lea
aaa
shl
loopne
outsb
ret
scas
xchg
int3
jo
pop
jmp
adc
xor
stos
and
and
sbb
xor
jbe
mov
enter
daa
inc
popa
das
cmp
add
jl
int3
and
push
ljmp
and
push
add
sqrtps
adc
pop
push
jae
inc
inc
jp
hlt
cmpsb
fbstp
pop
sub
sarb
xchg
push
loop
loope
aas
out
inc
and
cmp
hlt
xor
xchg
rcrb
mov
add
sbb
imul
dec
dec
inc
and
int
test
sub
incl
test
repnz
jge
movsb
jg
sub
outsb
outsb
pusha
push
test
push
mov
xchg
mov
xor
mov
adc
push
sbb
cmp
or
test
lret
shl
mov
fldcw
sbb
cmp
xor
sub
fistl
add
stc
xchg
adc
mov
movsb
adc
arpl
stos
lods
loope
decl
pop
je
cli
and
pop
xor
sbb
cmp
mov
or
push
test
mov
xor
and
enter
xor
pop
add
data16
sbb
or
not
and
leave
mov
mov
sbb
aad
imull
dec
in
addb
inc
fnstenv
daa
les
stos
repz
sub
es
push
call
cmpsl
inc
in
pop
repnz
adc
pop
jne
outsl
or
mov
scas
add
inc
jge
fistpll
dec
loopne
jb
pop
jbe
fldenv
push
jecxz
mov
xabort
adc
sahf
lea
mov
scas
adc
jns
mov
hlt
movsl
imul
stos
jmp
out
add
pop
inc
int3
das
mov
test
adc
mov
notb
scas
repnz
sti
movnti
outsb
lods
cmpsl
aas
fbstp
nop
adc
icebp
hlt
xlat
adc
dec
or
lret
add
jge
and
dec
aam
pop
sub
iret
sarb
and
nop
cwtl
and
pop
insl
inc
ret
inc
inc
fisubs
mov
cmp
clc
testl
into
popa
xchg
add
lods
jns
mov
ret
mov
dec
push
dec
mov
ret
add
outsl
sbb
jo
ficoms
out
dec
pusha
dec
hlt
test
jmp
xchg
inc
leave
sbb
pop
dec
rcll
push
pop
jp
lock
pop
ds
out
lahf
fcompl
add
call
xchg
aas
xor
pop
or
push
pop
xor
outsb
push
mov
sbb
jmp
ja
jae
dec
inc
flds
cmp
or
pushf
mov
sub
sub
jo
movsb
jne
push
or
out
loop
bound
mov
adc
js
lods
xchg
outsb
dec
or
push
lcall
lahf
xlat
jp
pop
mov
dec
jne
mov
shl
dec
xor
out
adc
xor
vmwrite
or
or
xchg
sub
sbb
out
pop
and
es
inc
push
shrl
stos
ljmp
insb
je
cmpsl
jnp
xor
jle
je
push
jae
aaa
adc
sahf
add
xchg
xchg
inc
ret
sbb
push
jl
xor
dec
jae
loop
push
xor
push
push
cmp
fimull
in
xchg
int
jle
lds
imul
cmp
cmp
sarb
pusha
repnz
adc
add
mov
pop
arpl
xor
inc
jp
xchg
jge
int
sbb
push
test
popa
mov
or
jmp
loopne
fidivrs
test
push
call
or
pop
mov
cmp
cmc
int
cmp
bound
mov
jbe
cld
shr
out
inc
pop
enter
daa
aas
mov
jg
loopne
and
mov
push
int
fwait
movsl
repnz
jmp
aaa
cmp
push
loop
imul
or
nop
cmpsb
sub
xchg
js
and
push
cmpsl
mov
loope
or
sub
fdivrl
es
ljmp
lcall
lret
loopne
sbb
mov
jge
int
xchg
mov
xor
xor
int
push
inc
sub
in
or
daa
jmp
movsl
push
cmpl
sub
in
outsb
rcl
out
test
mov
xor
js
arpl
popf
mov
lcall
aas
pop
popa
and
rorl
push
sbb
lock
sti
adc
pusha
jb
lret
xchg
mov
rorl
and
inc
data16
cmc
xchg
push
xor
push
loop
nop
ja
dec
ljmp
xchg
fcompl
movsl
std
scas
lods
enter
cmp
cmp
xor
mov
stos
cmp
pop
adc
stc
adc
into
movsl
imul
adc
add
pushf
jno
pop
lahf
or
fisubrs
cmp
xchg
lea
dec
mov
jg
mov
xchg
mov
pusha
std
sub
in
sub
std
push
cmp
inc
sub
movsl
fldcw
jle
repz
daa
push
xchg
adc
lods
int
loope
and
adc
adc
mov
jmp
pop
shrl
dec
and
inc
jge
adc
mov
aad
mov
mov
je
into
dec
jecxz
push
test
sti
lret
fscale
inc
movb
adc
fs
cs
pop
mov
cmp
mov
pop
mov
mov
mov
pop
das
xchg
pop
pop
mov
cltd
leave
xor
subl
notb
imul
test
cmpsl
ds
call
icebp
lret
sbb
ja
repz
je
mov
and
jecxz
test
inc
mov
rorb
push
sub
js
ret
shlb
stos
es
jbe
bound
dec
xchg
nop
lahf
pop
ljmp
loopne
in
aas
mov
out
mov
push
daa
push
popa
psubq
cmp
jecxz
fstpl
sbb
mov
jg
push
data16
dec
enter
push
xchg
sbb
mov
adc
scas
xor
adc
dec
ja
out
add
call
out
add
idiv
mov
push
xor
dec
pop
xor
jecxz
mov
sbb
inc
mov
mov
adc
aaa
or
inc
sbb
or
pop
xor
pop
or
push
adc
movsl
jne
insb
cmc
mov
stc
ds
outsb
je
bound
push
fnsetpm(287
add
repnz
mov
jbe
sub
mov
bound
jp
mov
mov
sar
and
mov
xor
in
jmp
pusha
push
rcr
jecxz,pn
xchg
loopne
and
movsb
aam
xchg
mulb
adcl
popf
dec
dec
int3
mov
add
fldenv
xchg
and
fistps
add
ja
jle
sbb
push
mov
xchg
xchg
iret
repnz
sti
ret
xchg
pop
jecxz
inc
cmp
cld
dec
push
idiv
mov
inc
and
inc
out
rcr
mov
xchg
and
push
sbb
mov
imul
sbb
sti
adc
mov
movsl
fs
mov
cltd
mov
mov
hlt
xlat
pop
xor
sub
jge
pop
jge
js
sbb
push
push
fbstp
or
add
das
clc
int3
aam
in
inc
fimuls
out
xor
popa
ret
xchg
xor
mov
pop
cmp
inc
movsb
push
add
jbe
insl
mov
enter
daa
ds
push
inc
jno
or
jl
or
push
mov
insl
movsl
stc
scas
mov
lahf
push
data16
fdivr
test
or
enter
enter
inc
js
push
mov
mov
test
loope
stc
jge
sbb
cmp
mov
js,pt
imul
sub
sbb
das
xor
pop
lahf
jmp
int
jnp
sub
out
pop
cmpsb
fimull
fidivl
pop
fdivr
xor
sub
fwait
outsb
xor
enter
jb
or
arpl
xor
mov
and
mov
out
and
lcall
arpl
cltd
fdivrs
pushf
negl
push
jg
mov
shll
stos
mov
jl
sahf
in
push
cmc
mov
sub
outsl
fdivrp
cmp
notb
stc
add
fs
lods
pop
adc
das
cli
ss
xchg
leave
mov
je
cli
mov
loop
lea
or
sahf
into
mov
sbb
pop
loopne
or
pop
mov
cmp
imul
lea
es
loopne
std
cmp
ret
pop
pop
sub
add
sbb
je
xchg
push
sar
movsb
movsb
and
xlat
nop
imul
dec
mov
adc
les
in
repz
arpl
gs
hlt
xchg
pop
call
movsl
arpl
pop
call
adc
cmp
loop
jmp
push
lods
xchg
inc
mov
mov
jb
mov
in
je
andb
xchg
sahf
sbb
addr16
cwtl
into
push
lods
mov
xor
dec
sub
andl
cmpsb
arpl
jne
mov
sysexit
lock
imull
das
jbe
enter
jne
push
insl
shlb
mov
pop
outsl
mov
cwtl
xchg
lret
insl
leave
mov
dec
aam
shlb
sbb
icebp
mov
sbb
lret
jecxz
stos
mov
mov
mov
pop
or
push
pusha
xchg
sub
aaa
aam
or
cmpsl
lds
clc
insl
call
push
ljmp
bound
cld
cltd
mov
iret
lret
add
js
mulb
cltd
dec
mov
test
int3
hlt
push
sub
rorb
sub
xchg
and
sbb
mov
add
popa
and
gs
faddl
lcall
xor
push
xor
vcmpss
dec
mov
pop
sbb
popf
outsl
pop
pop
mov
jg
push
dec
sub
push
or
in
sub
mov
inc
jne
out
mov
jecxz
out
dec
or
bound
lret
pop
jmp
mov
push
or
add
and
sub
addr16
out
jp
shrb
dec
or
mov
repnz
pusha
add
push
call
fwait
inc
pop
xchg
rcrl
and
mov
popf
jae
outsl
mov
aas
push
sbb
test
mov
jnp
andl
adc
mov
stc
ret
and
fs
inc
dec
cwtl
stos
jae
pop
jl
mov
sti
push
inc
fisubs
xchg
jnp
popa
sbb
outsb
clc
imul
test
rorb
mov
xor
fcmovnbe
hlt
and
arpl
add
rolb
sbb
fisttpll
inc
aad
add
xlat
int3
mov
mov
pop
xor
mov
rcrb
inc
cmp
add
jbe
push
mov
enter
daa
cmp
mov
dec
dec
fwait
jecxz
push
xchg
push
in
movsl
add
jns
int3
xchg
pusha
lahf
jne
and
lock
test
aam
pop
inc
daa
push
mov
popf
dec
pop
js
push
mov
out
popf
pusha
push
js
loope
or
sub
lret
mov
test
in
fwait
das
sbb
out
out
cmp
push
sbb
pop
addr16
add
xor
jg
int
int
sub
call
test
xor
movsl
adc
xor
test
dec
andb
fnstcw
popa
in
stos
pop
jno
orb
and
jg
and
outsb
cmp
cmp
neg
mov
push
sarl
daa
sbb
orl
outsl
mov
inc
out
stc
mov
pop
mov
xor
icebp
sub
lea
sbb
outsl
cli
mov
ss
arpl
or
cmp
imul
and
loopne
mov
pop
fucomp
in
popf
fstpl
adc
jne
add
popf
test
sbb
mov
outsl
das
sub
jg
in
ljmp
iret
incb
adc
xlat
lock
inc
das
testl
adc
sbb
les
movsl
repz
notl
pop
pop
jae
xlat
pop
imul
cmp
adc
loope
pushf
jo
nop
jmp
cmp
cs
jns
mov
into
add
aas
sub
cmp
adc
je
mov
movb
mov
xchg
jecxz
cwtl
mov
mov
mov
mov
xchg
cmpl
cld
arpl
or
inc
imul
sub
mov
xchg
pop
call
cmpsl
xchg
das
neg
mov
insl
mov
lods
dec
iret
outsl
or
mov
jns
leave
cld
int
sbb
push
adc
test
and
sbb
mov
shl
lea
sub
je
mov
test
sub
fnsave
clc
cmp
mov
mov
mov
sub
lods
xchg
push
mov
jbe
mov
das
negb
xor
mov
pop
repz
in
hlt
orb
inc
test
in
xchg
sbb
sahf
popa
rcrl
pop
jnp
lds
enter
or
dec
dec
push
lcall
cmp
or
sti
leave
lods
mov
and
pop
pop
sbb
ja
fisubrs
dec
sbb
dec
mov
push
inc
fwait
mov
add
mov
loopne
out
sub
mull
mov
jns
nop
mov
sbb
les
int3
jp
sub
scas
mov
addr16
out
xor
jg
mov
xlat
mov
push
and
in
addl
xchg
xchg
sub
xchg
push
and
in
out
mov
popf
lcall
push
jle
lahf
stos
inc
jecxz
and
movl
inc
xchg
push
dec
sub
adc
sub
insl
cmp
inc
push
jge
jae
cld
fcoml
jge
ljmp
inc
dec
inc
in
test
fs
xchg
and
add
mov
ret
rcr
loopne
clc
jg
repnz
mov
arpl
cwtl
inc
or
jge
jns
sbb
mov
aaa
into
in
jo
cmp
push
add
icebp
adc
pop
movsl
es
and
in
pop
mov
scas
inc
pop
js
fsubrs
iret
cmp
fisubs
lds
jbe
stos
mov
enter
daa
cmp
push
cmp
jnp
jno
pop
cmp
dec
or
xlat
push
jbe
inc
movsl
pop
clc
sahf
and
dec
lahf
xchg
enter
cmp
lock
and
insl
inc
mov
leave
cmpsb
jmp
cmpsb
pop
les
js
js
pop
cs
subb
out
in
mov
add
cmp
icebp
lret
ds
lret
adcb
cwtl
sbb
sub
xchg
xor
fcom
dec
xchg
int
add
sub
pop
movsb
dec
test
mov
or
and
add
test
das
mov
jg
xchg
mov
std
or
mov
cmp
and
movsl
push
and
lahf
cmp
cmc
gs
popf
mov
jo
dec
mov
mov
es
sub
xor
lock
pushf
xor
loop
jno
stc
jo
dec
fbld
adc
add
lods
jge
jp
sub
xchg
out
test
out
xor
fcompl
mov
or
jno
dec
pop
jns
sub
mov
jo
stos
imul
clc
mov
sbb
cmc
push
jmp
sub
pop
fwait
mov
push
test
jle
push
data16
notb
pusha
push
inc
idivl
sbb
pop
das
lods
repz
dec
xchg
pop
cmp
ret
call
mov
ljmp
sbb
jmp
into
adc
jae
addr16
adc
inc
aas
enter
mov
lahf
dec
mov
pushl
sbb
movb
std
cmp
xor
inc
and
ret
xor
adc
rcrl
cmp
cs
jae
jo
sbb
adc
sti
dec
das
xor
jnp
mov
mov
aam
testb
negb
inc
push
insl
xchg
jecxz
dec
lret
cmpsl
cmp
mov
push
mov
ror
cmp
mov
jne
mov
mov
movsb
ret
daa
rol
out
daa
sub
aam
nop
pop
ret
jge
inc
lods
mul
fst
fs
clc
jecxz
xchg
dec
lds
popa
lock
push
lods
and
cli
and
pop
adc
push
mov
pushw
add
stos
cltd
mov
sbb
mov
xor
push
scas
ss
dec
cld
xchg
cmc
test
or
sbb
sbb
mov
or
mov
pop
mov
inc
add
rcl
aas
decl
mov
or
cmp
push
xchg
sbb
mov
shll
call
inc
fwait
xchg
pusha
or
mov
fwait
call
sbbl
or
or
bound
mov
movsl
sahf
in
in
xchg
stos
test
xchg
sub
test
jp
jp
repz
cmpsb
jl
mov
jge
sbb
shlb
sub
jecxz
cmp
loope
mov
xchg
xchg
pop
mov
jmp
push
aas
push
inc
fisubs
out
outsl
popf
shll
push
mov
cltd
cmp
insb
and
mov
loopne
jle
shrl
cmc
push
pcmpeqd
pop
imul
pop
mov
jae
loop
push
inc
cmp
or
adc
inc
arpl
loope
sub
lcall
adc
push
adc
shl
stc
mov
fstpt
leave
lock
hlt
mov
movsb
das
inc
xchg
sub
push
shr
sbb
cmp
or
xchg
int3
xchg
xchg
std
pop
aam
pmaxub
lret
cmpb
jb
in
and
jne
imul
movsb
addr16
push
sahf
push
outsl
jbe
jns
in
mov
mov
daa
cmp
cmp
sbb
jl
sbb
jns
cld
push
pop
sub
and
popf
jmp
push
cs
test
push
movsl
inc
inc
pop
jb
outsb
imul
mov
andl
push
or
loope
sahf
shrb
or
loop
mov
loope
mov
movsl
inc
rorb
and
lahf
add
leave
sub
xor
adc
cmp
sub
xor
and
jl
movsb
pushf
pop
push
push
fdivr
jo
sub
cmpsb
mov
test
fildl
out
push
jmp
mov
loop
imul
and
push
push
daa
mov
jmp
negl
lret
stc
shl
ljmp
and
mov
jge
sub
outsl
jnp
lcall
lods
xchg
fs
mov
rol
jmp
lods
fs
add
sbb
je
and
mov
adc
or
mov
into
xor
xor
popf
loopne
dec
cmp
xchg
adc
adc
xchg
adc
lods
scas
add
enter
mov
cmp
imul
sub
sbb
aad
inc
sti
sub
popf
cmp
nop
cld
xchg
add
push
testb
flds
adc
and
sub
cmp
and
pop
jno
push
adc
cltd
daa
pushf
movb
push
fsubrl
jb
inc
cltd
dec
push
inc
add
mov
jb
mov
aad
pop
xchg
mov
movb
and
loope
mov
mov
push
arpl
insb
add
dec
mov
fldt
or
movsl
mov
mov
lock
sbb
das
adc
lret
xor
lods
es
mov
mulb
dec
insl
jle
adc
cmpsl
cmp
xor
mov
and
lret
xor
xor
dec
or
pop
ret
jl
rclb
push
aam
jmp
ret
or
cli
xor
imul
aad
xchg
mov
popa
pop
cmp
mov
jb
js
movsb
int
push
xchg
test
inc
add
pop
mov
test
mov
push
jb
test
test
ret
adc
bound
sbb
movsl
rorl
cmp
pop
rcr
cltd
stos
push
add
add
jmp
repz
or
xor
scas
rorl
sub
dec
mov
sub
pop
mov
outsl
dec
add
arpl
or
or
cltd
mov
push
lahf
cli
lods
jne
scas
adc
out
ljmp
jns
pop
and
das
out
xchg
stc
ljmp
fdivrs
pop
addr16
mov
pop
pop
mov
in
pop
xor
mov
cmpsl
outsl
pusha
popf
inc
fildll
roll
subb
and
hlt
adc
cwtl
out
mov
call
push
push
cld
call
xchg
and
and
jnp
add
ss
imul
push
scas
iret
outsb
mov
inc
pop
mov
inc
scas
jae
or
push
add
push
loop
daa
fcmove
repz
sbbb
imul
or
fsubl
adc
mov
xchg
leave
addr16
push
arpl
add
mov
outsl
sbb
jmp
or
cmp
add
inc
jo
adcb
pop
add
fisubs
jmp
inc
cmp
int
out
add
repz
cmc
xchg
movsb
repnz
jg
cmpl
enter
daa
cmp
cmp
jo
jno
mov
push
sbb
movsl
adc
shr
sarb
addr16
add
fiadds
push
xor
in
jbe
icebp
imul
mov
adc
loope
push
mov
out
cmp
push
adc
adcb
cmpsb
mov
cmp
push
int3
stos
inc
xor
mov
shl
int
sbb
sub
mov
mov
daa
sbb
test
sub
rclb
test
and
js
pop
jg
or
mov
stos
fs
ret
outsb
pop
jle
sub
leave
fsubrs
negw
add
jl
sbb
jge
mov
sbb
loope
sahf
jo
cmp
fsubr
mov
test
outsl
pop
jbe
loop
pusha
test
fidivs
rclb
and
lea
and
out
movsb
push
cli
push
mov
xor
xchg
sbb
in
jb
and
fs
adc
inc
gs
xor
pop
cmp
dec
adc
clc
add
jl
ficoml
push
add
je
data16
sub
imul
xlat
fwait
lret
jecxz
adc
in
inc
push
mov
lods
mov
stc
cmp
dec
push
pop
movsb
inc
sbb
mov
les
push
push
cli
lahf
xchg
in
cmc
lea
xlat
mov
mov
cmpsb
xor
sub
dec
pushf
jno
cwtl
jmp
inc
cmp
inc
and
inc
pop
or
aas
push
nop
mov
filds
dec
mov
fwait
shl
cmpsb
iret
or
std
mov
lods
mov
fs
mov
pusha
test
add
dec
jbe
ret
iret
int3
pop
mov
jle
lock
mov
mov
sub
fldenv
test
rcll
cmp
movsl
mov
movsb
inc
cmpsl
cmp
mov
incb
lret
lahf
loope
mov
movsb
imul
push
pop
sub
xor
ret
fwait
outsb
xchg
mov
cwtl
frstor
mov
adc
pop
xor
push
dec
and
pop
cmc
mov
jmp
pop
push
outsb
andb
in
add
inc
ret
sub
test
push
mov
cmpsl
cld
push
xor
int
xchg
pop
xchg
sbb
shll
dec
pop
jl
sub
icebp
les
mov
pop
sbb
int
and
dec
loopne
or
sbb
mov
sub
std
pop
dec
or
mov
imul
addb
sub
jnp
fwait
inc
or
inc
mov
mov
push
aas
out
leave
mov
jns
mov
clc
xchg
dec
jo
mov
out
sub
lahf
repnz
cltd
push
jp
outsl
cmc
test
stc
out
jnp
pop
inc
jg
xchg
cwtl
pusha
jno
dec
xor
ljmp
jb
ja
fwait
xchg
in
jb
sbbl
out
and
movups
push
cmp
and
add
fisubrs
fidivrl
push
xor
lahf
popa
push
sbb
cltd
pop
iret
int
pop
ret
push
pop
or
je
jle
mov
push
sub
inc
inc
subb
lret
inc
popa
pop
leave
fidivrl
outsl
xchg
xlat
ret
cmp
imul
shrb
arpl
daa
shrb
mov
add
hlt
dec
std
add
hlt
add
mov
sarb
sub
sbb
fs
aaa
or
or
jno
add
and
insl
fcomps
push
dec
fimuls
lods
xor
sub
ret
inc
xlat
and
jnp
movsb
jge
imul
outsl
pop
in
pop
test
mov
shl
pop
js
jno
int
jl
popf
sub
movsl
sub
pop
aad
movsl
sbb
call
lahf
icebp
jns
push
aam
out
test
add
dec
inc
arpl
cmpsb
je
aad
cmp
js
jnp
jmp
mov
pop
outsb
mov
sub
sbb
xor
pop
ds
adc
adc
pop
repz
dec
test
sbb
outsl
and
loope
xor
das
sub
xchg
push
ror
std
cli
scas
sub
into
in
pop
and
lcall
dec
fcoml
addr16
mov
je
gs
movb
dec
daa
mov
dec
mov
add
add
jge
adc
sub
in
fsubs
add
neg
js
lret
add
adc
popa
mov
mov
sahf
adc
cmc
lahf
and
dec
outsl
cmp
jl
aad
or
xchg
xchg
sbb
jo
xorb
pop
cwtl
lods
xor
sahf
mov
dec
out
cli
psubd
movsl
inc
cmp
cli
xor
xchg
shl
mul
andl
or
xor
adc
push
jg
push
xor
add
idivl
cmp
lock
mov
in
stos
push
dec
sti
mov
dec
outsl
and
inc
and
nop
mov
inc
dec
jge
dec
inc
xor
add
jns
jg
and
cmp
call
and
adc
movsl
or
dec
and
pushf
shll
inc
cmpsl
mov
jbe
movsl
adc
dec
sbb
je
repz
loopne
inc
or
into
or
jne
aam
ljmp
sbbl
add
pop
adc
shl
aad
sub
rcr
inc
mov
jecxz
or
jge
shl
loopne
mul
mov
insl
dec
fcoml
cmpsl
cmp
icebp
aad
in
jns
inc
lret
push
pop
xor
mov
jnp
pop
add
call
sub
cltd
aam
pushf
vcvtsi2sd
aad
ss
dec
mov
stc
xchg
or
mov
xor
mov
xor
xor
push
dec
imul
mov
add
lods
cltd
bound
xorb
mov
dec
xor
test
repnz
sbb
enter
xchg
ret
pop
daa
lods
adc
push
in
das
add
and
arpl
insb
mov
xor
subl
test
dec
xchg
ret
stc
movsl
hlt
pop
add
sbb
movsl
stos
dec
jmp
push
stc
or
xor
fwait
jne
rcrl
ret
pop
jne
sub
test
push
bound
cld
data16
mov
mov
xchg
cmp
sub
lcall
jp
test
sub
and
addr16
cs
pop
iret
pusha
or
mov
call
mov
jmp
mov
bound
ss
mov
ret
loopne
push
jp
mov
and
sti
test
jnp
sub
popa
push
fs
and
push
iret
sub
mov
pop
adc
add
push
mov
cmpsb
push
loopne
aaa
fidivl
lret
add
jb
sbb
mov
fs
aas
rolb
mov
aam
test
push
mov
hlt
cltd
jg
arpl
and
jnp
jge
sub
sbb
sbb
lret
or
pop
and
and
pop
popa
out
fisubrs
in
jo
test
scas
shr
and
or
aas
movsl
iret
movsb
or
push
mov
in
aas
lods
inc
enter
daa
cmp
mov
cli
in
jl
sahf
into
dec
call
push
add
or
roll
lahf
adc
jb
int3
mov
push
lret
cmp
push
cmpsb
test
pop
js
test
aad
int3
sub
std
sub
push
das
cmp
xchg
dec
ds
stos
movsb
adc
ss
push
sbbb
sbb
int
add
imul
popf
repnz
int
rclb
push
nop
lcall
fcomp
cld
and
sub
jb
outsb
xchg
push
subb
adc
mov
inc
nop
mov
popf
adc
mov
sti
push
xor
cmp
loope
dec
negl
or
shrl
pop
sbb
dec
ret
cmc
data16
and
cmp
outsl
sbb
mov
stc
dec
mov
imul
jp
mov
mov
mov
cli
mov
fnclex
cmp
das
testb
test
cmpsb
in
gs
test
out
pop
js
sbb
imul
popa
add
pushl
data16
pop
cmp
sbb
sbb
inc
mov
push
mov
sti
cmp
loopne
xchg
nop
enter
out
in
inc
or
les
iret
xchg
push
or
ds
lahf
es
mov
es
cmp
pushf
adc
jmp
movb
xchg
inc
push
sbb
aas
inc
xchg
xor
shr
xchg
orl
adc
cwtl
xor
xor
xor
dec
dec
sbb
mov
mov
mov
xor
hlt
das
mov
lcall
mov
and
cmpsl
loope
xor
imulb
sbb
insl
xor
es
mov
mov
aaa
inc
xor
lods
ficoms
lret
jge
and
cmpsl
jo
mov
and
adc
adc
sub
push
aam
repz
mov
enter
shl
clc
iret
cmc
cs
dec
ficoml
add
fnstcw
mov
fistl
jg
and
cmp
xchg
sbb
push
cmp
test
in
test
inc
dec
cwtl
sbb
xchg
sub
sbb
vmwrite
stos
shll
out
mov
mov
cmp
cmp
dec
jns
repz
or
dec
inc
mov
xor
mov
mov
loopne
dec
fcoml
std
or
mov
mov
jne
cld
shlb
loope
bound
pusha
xchg
in
out
xchg
out
jp
sbb
lea
or
shlb
aad
pusha
mov
out
mov
cmp
fs
dec
add
in
dec
andl
and
pop
cmp
xchg
movsl
jae
jmp
xor
cmpl
out
stos
push
popf
pop
add
stc
push
push
mov
jnp
and
sbb
xchg
iret
push
jle
dec
gs
stos
mov
adc
mov
out
pop
inc
loopne
inc
mov
repz
and
dec
cmp
or
cld
inc
addb
pusha
les
test
sbb
sbb
imul
xor
jno
loop
bound
repnz
hlt
in
cmc
arpl
dec
inc
xchg
mov
sbb
xchg
loope
stc
notb
std
dec
xor
inc
xchg
repnz
nop
inc
rcr
push
stos
xor
fsubrp
scas
lahf
popf
add
mov
lea
divb
movsb
xchg
cmp
fidivl
jbe
ss
in
es
fisubl
aaa
ss
cmp
movsb
lahf
jno
dec
adc
jl
xor
dec
jle
sub
fldenv
outsb
mov
mov
jp
test
xchg
mov
or
xchg
rcll
imul
push
loope
jae
sub
js
cmp
cmp
adc
adc
orl
inc
daa
sbb
dec
test
insb
stc
cli
sbb
inc
int
imul
pop
pop
in
lcall
xchg
fsubl
jmp
mov
jae
mov
pop
shll
mov
jl
mov
sbb
jnp
push
xor
pushf
push
imul
lock
lret
out
inc
push
lds
mov
sahf
pop
sbb
xor
jns
loop
dec
scas
stc
add
adc
out
ss
or
mov
or
cli
out
insb
je
outsb
xor
jb
jno
xchg
into
mov
dec
loopne
data16
ficomps
adc
adc
adc
or
add
stos
clc
mov
sbb
sbb
dec
xlat
pop
leave
xor
cmp
fsubl
adc
mov
adc
and
dec
cmp
inc
push
mov
xor
out
repz
aas
mov
mov
adc
cltd
adc
mov
mov
es
bound
inc
mov
lret
inc
jo
int3
aas
jecxz
jne
push
sub
je
mov
aad
adc
jge
pop
cwtl
jmp
mov
repnz
or
push
sbb
daa
mov
xchg
mov
das
mov
push
xlat
sti
and
and
roll
lock
imulb
cmpsl
ss
mov
addl
iret
imul
xchg
push
mov
in
and
mov
mov
shl
in
sub
lcall
dec
cwtl
jle
cmp
push
fstpl
jle
xchg
mov
mov
push
les
pop
push
mov
rcrb
psllq
jnp
dec
cltd
rorb
xor
push
push
dec
push
jle
mov
test
jo
xchg
rcrb
push
add
pop
jge
lods
stos
ret
out
sbb
mov
push
cmpsl
and
stos
sbb
xor
mov
xor
pop
push
mov
xor
jmp
inc
in
pop
jp
inc
ja
mov
fadds
movsb
or
sbb
add
test
xor
xchg
dec
bound
add
test
in
cmp
xchg
xor
push
iret
or
repnz
jp
mov
push
mov
mov
in
mov
inc
fbld
les
jmp
dec
ss
orl
out
sahf
fstpl
cmp
xor
dec
arpl
insb
aaa
scas
clc
jnp
xor
fwait
push
repnz
or
ljmp
pop
jle
jnp
xchg
mov
insb
push
maxps
or
ja
mov
ficoml
pop
movsb
sbb
leave
jl
sahf
mov
scas
adc
ss
add
mov
dec
bnd
cmc
leave
inc
jecxz
hlt
das
sbbb
xchg
or
sbb
mov
dec
jne
or
inc
xchg
add
cvtdq2ps
push
inc
xor
cmp
scas
jle
js
dec
cltd
lcall
arpl
push
sub
cmp
inc
push
in
or
inc
sub
ss
lea
cmc
enter
shrb
gs
dec
movsb
add
push
enter
xor
cmpsl
and
pop
mov
dec
dec
ficoms
sub
test
popa
xchg
sub
rcr
cmpsb
std
cmc
lds
inc
lds
mov
push
push
enter
andb
movsl
lahf
cmp
icebp
ds
mov
or
in
or
xchg
insb
jbe
add
jnp
xor
inc
cli
fistpll
scas
int
divl
lea
lcall
clc
fcoml
sub
ficompl
cli
mov
and
or
push
aas
mov
aam
shll
push
push
ss
cmp
push
cmp
pop
repnz
lret
inc
rcr
inc
mov
mov
je
cld
xor
notb
sub
das
stc
mov
bound
add
lods
out
sti
mov
adc
cli
and
xor
adc
cmpsl
into
mov
push
shl
setg
adc
or
iret
iret
adc
jne
add
data16
fcomps
push
jne
xlat
xchg
jnp
sub
jae
in
in
stc
sti
cwtl
jno
cmp
fcom
adc
clc
fisttpll
xchg
xchg
inc
imul
repz
push
xchg
lock
lock
scas
call
popf
xchg
pop
lock
pushf
sbb
pop
pop
lds
cmp
cmp
xchg
inc
mov
aas
subb
dec
jg
stos
je
hlt
add
or
cwtl
mov
and
pop
cwtl
cmpsb
outsb
jbe
daa
xlat
mov
in
bound
and
fistl
sbbb
mov
sub
jae
outsb
jmp
mov
or
cmpsl
rcl
and
insl
add
lcall
dec
push
mov
pop
enter
jge
lret
pop
pop
mov
and
push
cmp
pop
pop
push
fcmovnbe
mov
movsb
sub
inc
dec
aam
popf
inc
ret
xlat
fdivs
ffree
ffreep
clc
inc
lcall
jmp
insl
popa
jp
das
lods
cmpsl
imul
and
jl
and
rclb
rsqrtps
lar
xchg
jge
pop
mov
ret
sub
inc
and
xor
fstl
sbb
lret
mov
xchg
mov
out
jge
add
mov
jb
repz
sub
or
inc
xor
icebp
mov
aaa
xor
pop
xor
in
dec
ret
inc
and
dec
mov
push
into
xchg
lret
jne
int
mov
cmp
inc
dec
hlt
fcoms
jns
xchg
fsub
out
lcall
shrb
sbb
cs
xchg
pop
jp
push
mov
mov
and
pop
orl
push
cld
in
pop
and
mov
aas
xchg
dec
lea
push
lret
mov
sbb
into
sbbl
add
je
push
aaa
xchg
stos
push
int
insb
mov
pop
stos
jle
int3
xor
cmp
adc
mov
loope
dec
inc
cld
ret
insl
pop
mov
pop
inc
mov
fcoms
shl
cmpsl
or
repnz
inc
pop
adc
xchg
xor
imul
mov
rcrb
sbb
int
ror
mov
icebp
arpl
add
clc
mov
add
into
aaa
pop
or
dec
leave
add
add
int3
pop
adc
pop
out
inc
in
xchg
dec
mov
xchg
repz
pop
pop
jb
frstor
cmp
movsb
test
cmp
ret
jg
enter
daa
xor
mov
test
dec
adc
mov
movsb
sahf
lahf
insl
sahf
push
and
lahf
test
sub
lds
mov
cmpsb
cmpb
pop
aad
ret
js
pop
push
pop
out
mov
movsb
loope
test
mov
cld
push
cmpl
xor
adc
ds
popl
lods
ret
sbb
add
mov
push
faddl
sbb
push
outsb
fdivr
dec
sub
xlat
hlt
test
dec
xchg
jg
outsb
pop
mov
jge
mov
add
sub
lea
cmp
adc
not
ja
lret
sub
jo
xchg
mov
rcr
sbb
sbb
lahf
nop
enter
into
xor
pop
outsl
mov
out
and
jno
sbb
adc
ss
lock
lods
into
rorb
push
out
jp
cli
push
ret
sub
sbb
les
dec
or
and
sbbl
loopne
jmp
pop
aad
call
imul
int3
add
int
rol
sbb
xchg
add
mov
sub
mov
pop
in
push
lock
sti
inc
std
pop
test
pop
mov
nop
push
scas
dec
dec
stc
in
popl
shrb
movsl
dec
dec
repz
jno
xchg
mov
push
xchg
rol
scas
leave
sbb
push
pop
mov
and
pushf
enter
add
mov
inc
ret
inc
cld
inc
cmpsb
dec
aas
aas
and
mov
fwait
cmc
dec
divb
je
popf
ja
sbb
cmp
std
lret
clc
daa
cwtl
popa
sub
mov
jge
mov
mov
xor
push
cmp
pop
call
adc
inc
addb
cmpsb
mov
cwtl
and
sbb
div
cli
pusha
insl
call
aaa
mov
rcll
cld
and
jecxz
mov
inc
mov
jge
pop
rorb
mov
aam
lock
je
inc
push
fwait
clc
orb
push
aam
ljmp
lock
adc
mov
inc
xchg
xchg
dec
pop
int
mov
lea
mov
xchg
mov
and
mov
push
add
test
test
aas
xor
mov
and
adc
jecxz
shll
jmp
mov
adc
data16
lea
xorb
hlt
and
xor
test
mov
cmp
fdivrs
lock
dec
mov
jno
mov
push
cwtl
fwait
xor
jne
int3
gs
fwait
das
out
and
xchg
bound
pusha
jns
es
jno
mov
mov
lods
ljmp
jle
addr16
mov
out
mov
jae
mov
xchg
cmc
out
in
jns
pusha
js
sbb
in
xchg
push
call
mov
subl
je
add
jmp
rclb
mov
scas
mov
pushf
stos
fildl
and
add
fdivrs
dec
in
insl
stc
pusha
push
adcb
iret
test
mov
add
ret
addr16
stos
jne
jae
lcall
inc
stos
imulb
lret
filds
lret
cld
jmp
jmp
imul
fnstcw
jno
mov
dec
mov
and
insb
leave
xor
fdiv
arpl
lret
push
jg
mov
ret
rolb
ljmp
call
test
jo
xchg
loope
cmp
frstor
jo
sbb
movsb
xor
fistl
cmpsl
jg
adc
cmp
enter
daa
xor
imul
sub
jl
out
dec
adcb
push
mov
pop
and
cmp
lahf
mov
pop
push
xrelease
cmp
pop
cld
add
js
sbb
pop
es
mov
cwtl
xor
loope
or
sub
jl
cmp
lcall
mov
jno
subb
ret
fsubl
xor
movsl
xlat
gs
add
sub
out
pushf
movsl
adc
inc
mov
fsubrl
out
outsb
adc
mov
or
sbb
loopne
cmp
fs
lret
cmp
js
ss
cld
in
cmp
jl
jmp
fwait
movsl
notl
push
push
mov
ret
sub
dec
jo
sahf
inc
cmp
xor
outsl
xchg
mov
jl
sub
aaa
push
sub
sti
or
xchg
ja
mov
dec
mov
js
out
fs
cli
xchg
repz
or
fbld
lea
pop
hlt
push
pushf
adc
test
mov
inc
clc
add
sbb
pop
mov
cmp
pop
or
adc
cmp
mov
ret
sti
testb
sub
nop
stc
ja
dec
pop
dec
ss
adc
flds
movsb
cmp
mov
xchg
repz
mov
cli
mov
sub
fwait
clc
or
adc
push
out
jae
jb
repz
dec
cs
movl
das
pop
aas
ror
jb
negl
orps
movsb
jecxz
sub
sbb
lahf
std
jb
xor
movsl
test
mov
inc
jbe
lea
js
push
pop
and
pushf
cs
mov
jbe
pop
and
xchg
inc
shrl
imul
cmp
dec
dec
mov
pop
mov
hlt
jbe
icebp
or
cld
push
push
lahf
lret
cmp
ljmp
mov
rcrl
pushf
cld
mov
pop
dec
mov
aam
xchg
xchg
ret
cmc
and
jge
movd
clc
mov
das
pop
ljmp
jbe
jge
call
mov
xchg
aad
push
nop
sub
and
mov
out
jne
roll
push
orb
mov
imul
mov
imul
jle
fildll
inc
std
imul
jecxz
incl
inc
xchg
or
pop
xor
xchg
jns
iret
lods
jb
cmp
repnz
sub
dec
test
popf
inc
push
adc
or
sub
fwait
pusha
in
push
adc
outsb
jne
das
xor
rorl
add
sbb
in
jns
pop
mul
cld
sub
xchg
and
mov
std
ds
adcl
jp
fdivrl
pop
dec
sarl
cmp
in
cli
clc
pusha
adc
cmpl
icebp
jbe
jmp
scas
in
push
cmpl
rcrl
ljmp
stos
dec
popf
fsubs
mov
das
jnp
mov
push
mov
dec
pop
stc
or
lods
les
ja
xchg
mov
xor
call
pop
sbb
scas
mov
xchg
loope
cmp
lret
imul
scas
cmp
lds
enter
mov
out
leave
test
in
hlt
adc
ja
mov
inc
inc
sahf
dec
cmp
xchg
adc
jp
daa
aaa
test
mov
lds
add
xor
in
pop
dec
push
cmp
xor
dec
dec
dec
scas
sbb
repnz
adc
movsb
mov
push
test
xor
enter
daa
xor
cmp
negb
dec
icebp
aas
dec
push
jno
push
movsl
inc
adc
lahf
stos
dec
lcall
or
push
ret
inc
mov
pop
xchg
xor
js
test
pop
mov
loope
xchg
sub
and
ds
clc
and
jge
cmp
mov
inc
mov
or
sub
fxch
testl
pop
sbb
lcall
push
fcoml
pop
sub
scas
rolb
lahf
xchg
jg
sbb
call
push
lret
mov
jge
and
scas
lahf
push
aas
lret
push
cmp
mov
movsb
notl
lret
push
rcrl
and
js
mov
in
je
dec
movb
jae
jo
inc
or
fs
adc
adc
leave
nop
dec
lods
pushf
or
sbb
out
shlb
mov
add
cmp
movsl
inc
or
mov
gs
rcr
adc
insb
adc
push
shrl
bound
add
data16
fs
lea
xlat
push
stos
mov
or
sbb
fldlg2
sub
pusha
sar
mov
iret
out
aam
sbb
test
mov
ds
les
jl
xchg
cmp
lea
leave
call
sbb
cmp
or
in
adc
scas
pusha
jmp
jne
cs
aad
inc
rcrl
inc
fsubl
dec
aas
pop
push
inc
dec
in
or
cmp
cmp
and
sbb
out
cwtl
xlat
arpl
mov
push
sub
and
inc
dec
jecxz
add
jecxz
fcompl
jecxz
mov
or
imul
shrl
and
mov
sub
arpl
idivb
mov
movsb
dec
popf
mov
cmpsl
xor
and
fbstp
cld
jnp
mov
mov
mov
lret
mov
mov
test
sbb
add
cmpsl
xchg
retw
test
aaa
es
rcrl
mulb
xchg
test
jp
inc
cmp
popa
mov
test
dec
mov
fsubrl
test
outsl
ret
xor
loope
sahf
loopne
mov
mov
xlat
dec
fwait
or
pop
sti
xchg
mov
push
and
rol
add
dec
stos
jle
inc
out
cmpsb
fdiv
add
ret
pop
jg
shll
xchg
loop
or
int
xor
cli
mov
inc
mov
mov
data16
ja
aaa
dec
fwait
adc
ljmp
fwait
bound
mov
sub
testb
loop
js
xchg
jge
jns
xor
in
lret
ljmp
rcrl
jl
scas
addr16
lcall
xor
loope
mov
dec
mov
fildll
fbld
cmp
cmp
xchg
jp
incl
or
fistps
and
jp
stos
shll
insb
jecxz
pop
jnp
jae
jle
das
xor
push
and
inc
dec
movsb
iret
pop
pop
sub
cmpsb
inc
sarl
arpl
rcll
sbb
or
arpl
fisubl
test
je
mov
scas
lahf
andb
adc
pop
jmp
icebp
repnz
and
hlt
pop
jno
arpl
push
inc
mov
out
nop
sbb
and
or
es
int3
fdivr
mov
fidivrs
das
xor
movsl
push
pop
scas
cli
inc
lret
and
adc
movsb
dec
dec
mov
gs
mov
fwait
adc
in
test
or
daa
xor
cmp
popa
popa
jno
sti
in
jl
add
push
lods
push
movsl
dec
sar
and
lds
cltd
xor
test
lea
es
dec
repnz
or
inc
pop
dec
dec
jl
xchg
lret
movsb
scas
je
jle
loope
es
sub
mov
js
sbb
cli
adc
pop
dec
fimuls
rclb
sbb
mov
xor
push
jmp
or
adc
sub
mov
bound
out
fisubrs
sub
fisubrs
xchg
push
test
adcb
jg
jne
mov
add
mov
or
push
push
inc
jp
cmp
inc
mov
notl
and
lret
in
shll
je
cmpsl
push
sahf
mov
cmc
adc
mov
and
insl
stc
xchg
sbb
inc
adc
cmp
stc
dec
lock
les
in
or
mov
shlb
sub
sub
push
pavgb
cmpsl
pop
xor
adc
sub
adc
fs
nop
add
sbb
inc
sbb
insb
imul
push
and
in
cwtl
lret
mov
inc
push
or
nop
scas
inc
push
inc
inc
mov
fnstenv
fcmovnb
roll
lret
xchg
cld
xchg
xor
and
into
cltd
jns
pop
mov
dec
icebp
pushf
leave
push
int3
jmp
mov
cs
lods
lret
inc
pop
jg
inc
divl
enter
cmpsl
jb
dec
loop
pop
cs
je
mov
jecxz
ja
and
ljmp
fisttpll
mov
mov
cmpl
loope
pop
shll
les
push
ret
dec
das
ljmp
mov
nop
test
or
or
mov
dec
or
dec
mov
xor
mov
mov
sub
lret
pop
adc
daa
and
ret
pop
fidivl
jo
adc
aam
loopne
ret
adc
or
pop
lods
cmp
xor
cwtl
xchg
ret
jno
ljmp
xchg
lods
push
adc
mov
and
out
inc
pop
jl
into
cmpsl
lcall
iret
pop
test
push
jns
dec
mov
dec
add
leave
test
dec
insl
xchg
xchg
sbb
movsl
lret
shrl
aam
jecxz
insl
pop
or
add
fisubrs
inc
inc
stos
xor
mov
or
cli
xor
mov
mov
inc
sbb
and
ja
sbb
dec
mov
inc
sbbl
fwait
mov
or
jne
and
mov
jmp
out
rorl
and
mov
mov
in
ret
shrb
mov
stc
sub
ja
pusha
addr16
dec
popf
jp
pop
mov
or
pop
mov
roll
adc
popa
jbe
jb
test
jne
ffreep
mov
xchg
xchg
xor
outsl
cmpsb
xchg
inc
popa
mov
mov
popf
inc
xor
push
xor
stos
xor
clc
and
sbb
lods
push
jle
cmp
push
push
in
inc
adc
rcr
fdivrl
pop
xchg
imul
test
js
push
ljmp
xchg
ficoml
cmc
pop
sbb
lcall
add
lds
fistpll
int
sub
sbb
jno
xchg
cld
aad
cmpsb
aas
pop
arpl
aam
inc
movsb
popa
fdivrs
cs
push
xchg
aaa
add
mov
int3
ret
hlt
mov
fisubs
mov
xor
add
scas
sub
cmp
adc
jle
jbe
imul
daa
xor
and
hlt
or
jl
iret
repnz
iret
call
jle
push
repnz
adc
mov
insb
mov
test
pop
cmpsl
roll
pop
cmpsb
mov
insl
pop
jno
outsb
js
sbbb
push
repnz
sbb
loope
push
sub
hlt
dec
cmp
xchg
jg
xor
lret
std
sbb
jecxz
bound
jg
mov
das
bound
scas
hlt
int
push
stos
sub
or
push
inc
lods
rcr
test
sub
push
xchg
test
aas
add
aad
mov
out
loop
adc
xor
loope
push
inc
popf
in
fidivs
movsl
not
mov
lret
rol
int3
loop
mov
or
xor
xlat
sbb
xor
in
xor
insl
mov
xchg
fdivrs
adc
xchg
xor
dec
add
push
pushf
mov
sbb
adc
pop
cli
and
xchg
xor
fs
rcr
or
loope
setbe
gs
pushf
loopne
out
pop
push
arpl
adc
sbb
adc
jb
add
inc
cltd
data16
mov
jle
mov
shlb
cld
mov
add
and
add
pop
out
jne
js
inc
nop
mov
dec
jne
xchg
inc
enter
lods
inc
jbe
sar
adc
cltd
cwtl
lret
aaa
fimuls
fwait
xchg
pop
outsl
aas
mov
pushf
je
fs
mov
cs
adc
push
movb
jns
popf
movsl
cmp
inc
pusha
dec
shlb
imul
and
arpl
cwtl
dec
jmp
mov
inc
xor
adcl
in
inc
xor
xchg
mov
xchg
cltd
lock
stos
add
mov
fwait
or
and
cli
rcrl
ret
jg
insl
test
jnp
xor
jne
lea
icebp
lea
sub
xchg
popf
and
pop
pop
pop
pop
stc
xchg
arpl
aad
add
or
xor
cmp
pop
inc
es
ljmp
insb
shl
xchg
add
ljmp
pop
lods
mov
test
rclb
and
push
add
jae
cltd
sbb
mov
mov
fbstp
adc
dec
imul
xchg
ljmp
mov
push
stos
pop
clc
cwtl
out
insb
ja
add
stc
shll
jmp
xor
mov
or
push
fbstp
shl
cld
js
xchg
lcall
test
dec
adcl
sahf
fwait
in
test
push
std
or
mov
fsubs
mov
dec
insl
jns
shl
in
or
xchg
unpcklps
lock
and
jb
cmpsb
addr16
xchg
jp
dec
mov
stos
gs
inc
or
dec
add
in
in
loopne
push
push
inc
jmp
adc
cmp
push
fdivrs
popf
outsb
pop
aaa
mov
jb
dec
stos
cmpsl
fcomps
insb
mov
stos
fs
xor
pop
adc
push
mov
and
mov
pop
enter
xlat
roll
push
mov
add
push
fcom
ret
dec
lahf
xchg
out
push
sbb
aas
cwtl
imul
loop
gs
cmp
and
pop
rcrb
insl
mov
insb
adc
leave
or
popa
sub
xorb
cmp
sbb
lea
or
dec
inc
int3
scas
mov
or
lds
xor
pop
out
scas
mov
pop
add
testl
add
stc
pop
jbe
xor
enter
daa
xor
pop
cmp
popw
jno
jno
jl
outsl
sub
arpl
pop
js
and
outsw
push
aas
outsb
lcall
je
inc
push
andb
and
push
pop
and
push
jns
loope
rcrb
sbb
cmp
pop
ds
lret
jecxz
push
pop
xor
push
pop
or
test
sbb
mov
jno
pop
int
sti
sub
cmpsb
out
cwtl
xor
lcall
cmp
push
lret
push
lcall
and
and
xchg
movsb
mov
or
mov
daa
cmp
push
dec
xor
cmp
mov
sarb
lret
xor
arpl
mov
jne
sahf
into
arpl
adc
lahf
loop
cmp
stc
add
dec
arpl
test
aaa
mov
xor
out
ja
out
xor
cli
push
imul
cmp
test
or
je
repnz
push
gs
out
loopne
xchg
in
pop
jo
ljmp
mov
adc
aam
add
cmp
sbb
mov
jge
sub
xor
outsb
sub
sti
mov
add
or
aad
jmp
nop
gs
aam
inc
inc
fistpl
push
jae
push
dec
mov
push
mov
fistps
jg
adc
fldpi
scas
jne
cs
xor
lock
sub
dec
sti
jb
insb
lock
dec
fstp
je
rcrb
addr16
sub
cwtl
or
testb
push
mov
rcrl
adc
or
mov
mov
cmpsb
ret
cli
shrl
orl
add
ds
cmpsl
das
scas
dec
mov
fs
cld
cld
dec
ror
cmc
or
mov
in
inc
and
clc
int
pop
sbb
shrb
cwtl
test
or
ret
xor
mov
addr16
inc
in
popf
int3
add
lods
sub
ds
mov
mov
int3
push
cld
xor
jl
loope
cltd
push
int3
pop
test
jecxz
push
shll
outsb
test
jecxz
xchg
sbb
rol
mov
dec
stos
dec
lods
out
iret
xor
add
adc
xchg
incl
or
xor
cltd
push
xor
and
xchg
xchg
mov
xchg
int3
sub
dec
mov
inc
scas
xor
or
ficompl
fwait
sbb
dec
push
mov
mov
out
jg
repnz
jecxz
loopne
shl
stos
ss
pop
inc
cld
mov
mov
or
das
popl
jp
xor
cmpsl
and
mov
and
in
out
pusha
jg
push
cli
popa
xchg
cmp
cltd
xor
dec
out
xchg
mul
popf
xchg
mov
mov
mov
and
cmp
in
jnp
insl
sbb
daa
push
jecxz
rclb
sarl
iret
sbbl
pop
mov
outsl
jae
pop
push
add
dec
push
cwtl
push
push
and
xchg
cmp
mov
ret
iret
stc
lds
inc
sbb
mov
dec
scas
hlt
cmp
pop
arpl
je
inc
stos
dec
mov
loop
iret
sbb
aaa
orl
incl
mov
and
cltd
pop
aam
or
test
mov
insb
scas
xchg
movsb
jbe
dec
pop
sub
scas
lock
movsb
jmp
dec
push
push
mov
jbe
jo
in
pop
xor
enter
daa
das
scas
into
cmp
insb
jno
loop
jl
jecxz
dec
lods
mov
pop
movsl
bound
and
lret
int
push
adc
test
out
xchg
roll
xchg
push
cmpsb
xchg
pop
stos
pop
mov
test
xlat
push
mov
loope
fsubl
cmp
mov
test
push
adc
jmp
notb
orb
gs
icebp
loop
inc
or
xor
mov
repnz
lds
pop
pop
loope
lcall
pop
fdivr
clc
iret
sub
arpl
int3
out
test
das
push
jg
mov
aaa
mov
shl
out
mov
and
and
push
dec
aas
jecxz
sub
dec
fdivs
notl
mov
in
mov
sar
xchg
mov
sbb
stos
sahf
jno
mov
add
insl
mov
stos
loop
or
mov
jns
adc
inc
lahf
lods
cmp
mov
imul
cmpsb
dec
xor
adc
cmp
push
mov
jmp
dec
xchg
test
dec
pop
lret
scas
mov
daa
std
cmp
adc
mov
rclw
out
sbb
hlt
addr16
push
lret
test
aam
cmc
mov
fstps
mov
popa
push
cmp
mov
pop
nop
inc
xchg
les
push
pop
inc
out
lods
mov
out
adc
aaa
les
xchg
inc
aad
std
repnz
call
push
sbb
aad
dec
adc
mov
fucomi
sahf
std
and
inc
in
inc
pop
inc
dec
lret
inc
aas
fcomi
aad
jmp
stos
jp
loop
and
addr16
sub
sar
mov
outsl
cwtl
ret
ret
pusha
cmp
mov
fildll
fistpl
shll
stos
shl
arpl
cmp
or
imul
test
stc
scas
stos
testb
jns
mov
pop
mov
cmp
cld
daa
sub
decl
out
mov
aaa
bound
jnp
js
idivl
insl
ret
rorb
push
jecxz
fst
lahf
fwait
clc
loop
call
ljmp
icebp
lods
xchg
aas
sarb
push
sub
xchg
clc
add
jmp
add
addb
lret
mov
sub
push
xchg
leave
stc
dec
aaa
lahf
outsl
test
mov
push
mov
loop
rcrl
lret
pusha
pop
aad
jp
cmp
mov
xor
add
das
fmuls
jmp
pop
inc
or
fcomps
xchg
mov
push
cmpsl
das
ja
cs
dec
addr16
ljmp
push
inc
loop
jne
stc
pop
mov
fucom
sbb
je
mov
adc
jbe
add
or
lods
mov
mov
sahf
pusha
mov
and
dec
inc
outsl
shl
xchg
pusha
sbb
cs
adc
jmp
cmpsb
add
addl
popf
mov
loope
push
lock
ljmp
inc
fs
repnz
aas
or
push
sub
and
scas
mov
iret
loop
inc
ret
add
xlat
sbb
lock
mov
out
mov
lret
push
icebp
js
cs
xchg
xchg
lcall
push
imul
sub
xor
cmp
adc
ret
leave
sti
out
stos
hlt
xchg
fiadds
imul
mov
sbb
adc
mov
test
cltd
add
int3
test
das
pop
aaa
loope
fimuls
ret
fwait
scas
pop
jo
or
scas
jbe
ds
lea
andb
mov
and
in
inc
inc
inc
enter
daa
cs
imul
cmp
jl
sub
dec
sbb
pushf
push
loopne
jo
imul
std
push
in
inc
test
mov
push
mov
pop
out
cmpl
pop
push
push
push
jmp
or
cmp
inc
stos
ds
or
hlt
sbb
sbbb
sbb
icebp
add
fdivrl
testl
xchg
xchg
adc
push
dec
in
popf
fsubrl
mov
test
xchg
and
repnz
mov
xor
cmp
fwait
push
dec
mov
jo
das
int3
stc
testl
movups
xchg
xchg
lods
mov
sbb
arpl
cmc
sub
xorb
shrl
into
pop
inc
loop
or
stc
jb
xchg
fs
push
sbb
jmp
mov
out
dec
out
mov
cli
mov
mov
cmp
into
popa
or
mov
mov
mov
adc
test
enter
jnp
int3
cmpsb
lret
push
pusha
or
das
call
xlat
popf
stos
sub
jne
mov
inc
fst
sti
adc
push
sbb
aad
repnz
xchg
mov
fsts
mov
bnd
repz
inc
hlt
xchg
or
mov
call
xchg
stos
mov
adc
pushf
jne
sbb
lea
fisttpll
addb
mov
jp
mov
dec
aaa
sbb
je
addr16
test
loop
cs
int
cwtl
jle
fs
jge
mov
mov
jp
jle
into
leave
rcrl
out
out
decb
lock
and
mov
ror
and
push
push
rorl
mov
insl
cmp
dec
test
test
adc
pop
cld
push
fistpll
push
lds
in
fsubrl
pop
push
dec
out
rorb
shrb
jg
aam
arpl
xlat
or
cmp
dec
call
ljmp
inc
lods
push
cmpb
enter
iret
xchg
push
mov
dec
cmovp
add
push
dec
cltd
mov
add
mov
mov
mov
test
lret
aad
xor
xchg
rclb
jne
inc
pop
or
stos
sub
out
xchg
test
mov
incl
cwtl
xor
cld
adc
xor
loope
mov
dec
dec
popa
mov
or
xchg
dec
dec
pop
and
or
stos
or
out
jne
mov
mov
sbb
out
cmp
jg
jns
or
ds
xchg
cld
pushl
push
sub
arpl
repz
adc
mov
dec
cmc
mov
mov
out
in
xor
pusha
mov
pushf
fistpll
adc
jmp
jno
pop
adcl
push
out
xchg
daa
popf
jecxz
bound
das
mov
cld
and
cs
insb
cli
in
and
jle
in
push
jno
mov
mov
cmp
inc
cmp
mov
inc
clc
dec
mov
push
ljmp
push
push
inc
test
loope
popa
xchg
jmp
or
imul
mov
jo
jae
dec
xchg
insl
bnd
leave
jb
cmc
hlt
rol
inc
arpl
add
xor
sbb
sub
or
outsb
add
xchg
int3
outsl
sbb
fisubrs
andb
push
dec
or
jne
cmp
xlat
movsb
add
sbb
inc
jg
sub
jge
or
and
shlb
jl
inc
fimull
push
push
ret
fildll
and
lahf
cmpsl
lods
push
mov
add
inc
pop
push
mov
cwtl
scas
mov
js
and
fists
fisubrs
iret
in
cmp
orb
mov
sub
lahf
xchg
lret
loope
subb
xor
add
add
xor
pop
push
int
add
sub
enter
fcoml
dec
jne
push
shrb
outsb
adc
mov
outsl
sbb
jnp
mov
lahf
and
lock
mov
xor
push
push
mov
cmp
ljmp
lret
cmc
shrl
adc
dec
addl
mov
lock
repz
xor
cmc
out
lods
xor
loop
inc
sar
sub
rclb
and
dec
ss
push
inc
lods
push
inc
mov
or
add
in
cmp
xor
jae
cmp
and
or
rcrb
into
fwait
int
gs
es
andb
pop
int
cs
mov
adc
icebp
in
pop
cli
sub
and
ja
mov
push
push
xlat
into
repz
sub
pusha
sub
sti
mov
insl
and
nop
imulb
dec
icebp
aas
push
inc
adc
push
lock
aad
adcl
and
call
adc
push
pop
cmp
adc
mov
jl
clc
cs
sub
sti
or
inc
jle
and
sbb
jb
es
dec
scas
xor
je
scas
add
xchg
pop
xor
xor
xchg
std
add
sub
fiadds
mov
scas
subl
sub
lcall
adc
dec
mov
ja
mov
inc
sbb
cmp
testb
pop
insl
and
xchg
jmp
cmpsl
sub
ret
jb
icebp
jmp
gs
inc
mov
mov
daa
mov
jne
stc
shlb
or
in
movsl
aam
push
rol
ficoms
dec
es
lods
inc
frstor
mov
clc
pop
pushf
sub
divb
outsl
lods
push
jge
dec
test
mov
xchg
and
lea
popf
add
pusha
push
cltd
notb
test
aam
mov
mov
dec
add
fwait
mov
sbb
or
pop
sub
sbb
clc
sbb
add
gs
jmp
aam
xor
outsl
xor
ds
mov
push
notb
enter
jp,pn
dec
dec
push
dec
inc
je
ja
rclb
test
mov
xlat
rorb
mov
push
jg
sbb
mov
add
jns
mov
push
xchg
dec
popa
popa
mov
faddp
sub
pop
outsb
inc
mov
push
adc
mov
and
xlat
fimull
out
in
jno
pusha
push
dec
fistps
xchg
mov
aam
add
sub
out
push
pop
popf
or
dec
mov
outsb
push
mov
and
fsub
insb
outsb
loope
pop
dec
sarb
mov
push
mov
pop
pop
iret
mov
adcb
std
push
inc
add
jae
cmp
lods
cmpsb
scas
or
inc
dec
flds
push
popf
ficoml
lds
push
dec
imul
push
scas
icebp
mov
lds
fdivrp
rorb
add
leave
jmp
xor
arpl
mov
jge
ret
jmp
xchg
rol
aaa
mov
sbb
mov
pop
xor
pop
xchg
test
lcall
js
scas
xor
les
or
lahf
movsb
mov
stc
push
aas
mov
sub
adc
push
sbb
sub
loop
repz
aad
dec
jl
cmp
cli
hlt
sub
cmpsb
xchg
movsl
ja
stc
and
out
lahf
test
push
mov
test
dec
out
push
inc
cmpsb
popf
and
pop
xor
and
mov
push
push
lcall
sub
imull
and
jecxz
out
cmp
adc
jp
and
inc
sbb
xchg
xor
add
jl
xor
addr16
jge
jge
cmp
sub
aas
pop
xchg
add
push
clc
lret
add
sub
mov
outsb
sub
xor
cld
jg
out
shll
lds
dec
sub
inc
add
aaa
cmp
movsl
shrl
lea
lret
adc
mov
adc
sarl
cmc
mov
cmp
outsl
mov
jecxz
dec
stos
sbb
fs
dec
jno
jae
push
ss
or
lods
in
adc
out
inc
loop
pop
xchg
push
xor
inc
mov
ss
insl
into
jle
inc
gs
adc
xchg
aas
or
mov
insb
fists
mov
inc
pop
push
add
cmp
into
inc
sub
mov
repz
outsb
pop
gs
xchg
mov
aad
mov
nop
rcll
sbb
loope
fnstcw
rorb
add
lea
adc
call
xchg
pop
call
adc
jo
pushf
lret
call
cli
mov
mov
aas
mov
and
je
dec
shl
mov
cld
std
stos
xor
cwtl
hlt
fistpl
mov
fadds
push
mov
fldt
xor
mov
mov
stos
das
and
mov
rcll
jl,pn
and
xor
shl
call
add
dec
jp
inc
cmpsl
sub
mov
ror
cld
test
xor
mov
sub
xchg
out
and
fs
and
xchg
xor
pop
sub
neg
aam
popf
out
insl
cli
xlat
fnstsw
xchg
clc
xchg
sbbb
cltd
mov
popa
pusha
fisubrs
and
mov
int
mov
invd
pop
cmp
dec
popf
out
cltd
sub
clc
ljmp
repnz
dec
insb
sub
inc
add
xchg
out
sbb
sti
test
sbb
and
pop
sub
pop
test
add
xor
jg
cltd
xor
fdivs
xor
out
adc
xchg
cmp
je
dec
pop
subl
dec
inc
scas
mov
or
mov
sub
add
push
dec
mov
cmpsl
xor
sti
aas
sub
push
sub
adc
in
insl
mov
aas
iret
mov
pop
out
mov
jp
sub
push
addr16
mov
xor
adc
adc
jmp
dec
fistpll
repnz
mov
jmp
pop
pushf
push
xorl
mov
popf
xor
mov
lods
insb
out
out
loopne
inc
scas
shrb
jnp
sbb
test
mov
ljmp
adc
rcrl
ret
xchg
pop
fildl
adc
fnsave
pop
pop
push
jo
inc
or
rcrb
fiaddl
and
and
arpl
inc
dec
scas
push
cmp
inc
shlb
xor
pusha
movsl
sub
push
in
inc
mov
and
sbb
inc
aaa
jge
fimull
pop
sub
int3
inc
and
pop
les
pushf
fdivp
fs
xor
and
xor
fwait
arpl
cmp
mov
lods
jbe
in
in
cli
int3
or
ja
in
sub
cmp
mov
xlat
jl
cld
cs
imul
movsl
jle
push
and
xchg
xchg
push
pop
adc
push
sbb
push
sbb
inc
xor
shll
xor
fwait
pop
pop
or
loope
jo
sub
inc
jmp
sar
sarb
adc
jns
jno
out
rclb
cmpsb
aaa
fadd
adcb
sbb
loop
add
dec
xor
add
int
sarb
sub
fwait
pop
adc
adc
fsubrl
xor
outsb
lea
ds
insb
orb
jne
xorb
mov
sub
dec
fdivrs
push
push
repz
pusha
mov
testl
rcll
mov
ja
sbb
hlt
sub
cmpl
imul
loop
inc
push
stc
xchg
cmp
ret
ss
stc
jnp
or
mov
push
mov
je
imul
xchg
popa
and
mov
xor
adcl
cmc
xor
push
add
jmp
add
lds
push
xlat
dec
sub
sub
add
in
test
sti
sbb
out
ds
ljmp
scas
cmp
inc
cmp
mov
repz
xchg
cltd
in
call
adc
pop
mov
lahf
stc
pushf
jbe
and
pop
lds
inc
or
inc
mov
movsb
aas
push
mov
bound
dec
es
cmp
jecxz
pop
inc
aaa
adc
std
push
cmp
cwtl
scas
popa
movsl
mov
pop
xchg
mov
xor
dec
cmp
ficomps
add
lock
roll
add
sarb
pop
lahf
shll
pop
insl
insl
out
pusha
lods
dec
jne
imul
xor
xchg
cld
shr
sub
and
jp
xor
incl
pop
mov
jp
movl
jp
cld
es
es
inc
inc
popf
clc
into
clc
ss
jl
arpl
fdivl
popa
ja
add
mov
push
mov
push
inc
ja
packuswb
add
xor
divb
mov
clc
insb
push
mov
je
test
cli
inc
xchg
add
scas
mul
sarl
pop
orl
inc
out
mov
pop
jg
fwait
ror
lcall
les
sub
push
xor
cmc
aad
push
cmp
pop
lods
xchg
fidivl
aad
dec
xor
sbb
mov
sbb
push
iret
add
jne
cmp
mov
or
mull
mov
or
fildll
xchg
mov
xor
sub
push
repnz
mov
pop
mov
xor
add
shrl
ljmp
daa
mov
xchg
pop
mov
hlt
xchg
ror
pop
add
test
and
popf
pop
icebp
mov
in
or
stos
pop
dec
adc
pop
movsb
stos
insb
cmp
add
jle
sub
push
inc
shrb
pop
sahf
iret
pop
xor
ret
lret
adc
jae
enter
pop
out
dec
inc
pop
push
rcrb
outsb
rcll
test
imul
pop
scas
mov
pop
lds
rol
ret
cmp
repnz
mov
div
mov
dec
arpl
sub
inc
mov
aad
sbb
cmp
push
jmp
add
in
pop
repz
xor
jge
push
scas
repnz
inc
xor
push
jbe
outsb
push
in
loope
cmp
jb
push
daa
sub
cmp
mov
jl
xchg
stc
dec
fcoms
push
insb
aam
movsl
test
insl
and
loop
ret
push
xor
popa
test
in
stos
inc
idivb
cmpsb
and
pop
adcb
pushf
dec
push
push
jp
loope
das
in
sub
pop
insb
cmp
sub
adc
xor
addb
cmp
add
insb
movsl
xor
jge
add
xchg
sub
mov
lcall
aam
push
dec
ret
sub
lahf
sbb
mov
hlt
subb
xor
loop
mov
push
out
mov
sbb
out
ja
pop
inc
fdivrs
sbb
call
lret
scas
shr
imul
pop
sahf
mov
xchg
sahf
xor
outsl
dec
aam
loop
sbb
movsl
rcrb
adc
jp
ss
subb
iret
out
in
cli
test
pop
xchg
ds
or
inc
cmp
cmpsl
pop
mov
push
pop
ficompl
mov
adc
mov
in
mov
mov
bound
inc
sbb
sbb
xlat
mov
xor
adc
mov
in
lock
sti
int3
test
fcompl
test
imul
ljmp
enter
pop
repnz
xlat
fcoms
add
ja
xchg
sbb
and
pushf
icebp
lahf
pushf
and
imul
pop
aas
idivb
jb
mov
dec
adc
je
subb
cmp
mov
cwtl
push
mov
dec
scas
cmc
xorl
fisttpl
in
sbb
sub
pop
das
loop
adc
pushf
mov
dec
roll
subb
add
hlt
or
repnz
icebp
outsb
adc
cld
out
jae
vpmacssdd
and
lcall
rcrb
pushl
ret
mov
fcmovu
xchg
add
popa
xchg
mov
jmp
dec
lods
stos
sbb
mov
xchg
pop
lock
push
push
mov
add
add
add
xchg
push
outsb
dec
cmp
xchg
jb
sbb
sub
shrl
shrl
and
pop
add
shl
jge
xchg
adc
mov
mov
pop
mov
mov
stc
cwtl
xorl
dec
dec
or
or
cmp
push
jb
sub
xchg
popa
xchg
mov
cmc
adc
cmpsb
ftst
push
add
lds
dec
xchg
jno
mov
jp
dec
xchg
mov
jne
mov
dec
mov
push
pusha
and
fcomp
mov
aaa
arpl
out
sbb
mov
popf
jg
ret
pandn
xor
and
insb
cmpsb
out
jnp
or
lea
iret
mov
mov
adc
jae
jbe
push
negb
or
mov
movsb
inc
push
rorb
inc
sub
sbb
divl
imul
subb
xchg
inc
fcoml
mov
mov
cwtl
leave
dec
test
hlt
incb
and
jge
xor
aaa
sti
lret
inc
pusha
fiaddl
aas
sub
pop
and
xor
fdivs
add
shll
movsb
sub
shl
mulb
in
enter
insl
imul
cmp
add
outsl
dec
inc
sub
push
dec
arpl
call
mov
test
mov
dec
inc
push
or
cmpsb
movsb
enter
das
scas
js
add
pop
fisttpl
push
push
lds
sub
dec
mov
ds
adc
adc
or
mov
sbb
xor
xchg
cmpsl
xor
xor
sub
les
adc
clc
lcall
pop
faddl
jne
sub
into
jae
push
adc
test
aaa
inc
addb
jg
bound
mov
mov
mov
andb
dec
push
push
pop
add
pop
fcom
das
cmp
lret
xchg
roll
sbb
mov
cmc
movhlps
xor
mov
cmp
add
adc
ss
lods
mov
cmp
cli
mov
jecxz
cmp
lods
aaa
or
inc
dec
gs
cmp
pop
dec
hlt
or
sbb
cmpsl
imul
mov
add
scas
cmp
push
lahf
push
xlat
lret
sub
cmp
pop
adc
xchg
incl
aad
fdivs
dec
insl
dec
aad
pusha
jmp
adc
sub
mov
lea
je
jae
xchg
adc
pop
in
xchg
adc
negb
repz
inc
mov
inc
pop
push
cld
inc
ljmp
jb
dec
lahf
dec
mov
mov
movsb
sbb
cmp
clc
push
cwtl
and
xchg
mov
dec
orl
mov
fstpt
iret
scas
mov
push
sti
lock
loopne
mov
scas
mov
jae
dec
rcl
test
notb
dec
insl
insl
mov
ret
int
sub
mov
inc
insl
sub
sub
ror
add
mov
pop
and
xor
sub
shrb
and
sar
aam
imul
es
jo
mov
movsl
lea
ret
popa
movsl
icebp
sub
lahf
add
xchg
mov
mov
imul
shrb
test
push
push
sub
sbb
mov
test
test
pop
sbb
xor
sub
stos
aam
mov
add
rol
mov
xor
sub
or
sti
pop
mov
pop
xor
mov
mov
or
inc
lods
dec
sbb
lods
inc
rclb
mov
insb
xor
bound
jne
xor
jns
cwtl
icebp
push
bound
sarb
in
xor
xchg
dec
mov
pop
enter
cmp
dec
adc
xchg
jp
pop
cli
mov
flds
or
mov
inc
mul
mov
push
pusha
mov
cmc
repz
add
cmpsb
jmp
push
fistpl
cmpsb
cltd
lock
push
imulb
mov
je
adc
sub
outsl
jns
aam
call
iret
sbb
test
jmp
cli
xor
das
dec
fnsave
push
adc
xor
mov
fisubl
addr16
sahf
mov
sbb
cmp
mov
lds
dec
shl
cmpl
lds
and
dec
inc
xchg
arpl
cwtl
inc
mov
jbe
sbb
jecxz
or
mov
int3
push
out
pop
push
push
fwait
push
inc
sbbl
and
cmp
add
push
jnp
insl
jbe
int
in
scas
pop
stos
enter
daa
sub
cmp
call
aas
dec
mov
push
push
xor
test
sbbl
push
xlat
jl
test
jnp
pop
inc
loop
jg
daa
icebp
mov
cs
loop
imul
pop
jl
cld
out
loope
sbb
cmp
sahf
sbb
jp
fists
out
cmp
mov
add
lods
lea
lea
es
mov
int
ss
shl
pop
nop
movq
push
cmp
sub
rorl
pop
ljmp
lods
in
mov
dec
ljmp
mov
and
push
pusha
cmp
cmp
xchg
int3
loop
mov
test
sbb
mov
jge
lock
out
loop
repnz
ljmp
loop
pop
dec
stc
mov
movsl
repz
imul
aaa
xchg
out
xchg
pop
cli
jmp
and
pop
pop
dec
cmp
and
or
arpl
into
or
gs
ret
loopne
jmp
pop
push
cli
test
push
pop
add
cwtl
test
mov
sbb
xchg
scas
rcl
or
sub
call
shr
iret
iret
sti
sub
xor
and
aad
adc
int3
aad
inc
jae
jmp
fwait
mov
les
pop
repz
rclb
into
mov
call
out
sub
int3
das
adc
insl
pushf
ja
por
and
arpl
pop
addb
sarl
xor
test
pop
orl
add
jecxz
jecxz
movb
std
inc
lods
sub
mov
loope
mov
add
mov
or
fucomi
sahf
cmc
pop
das
movsl
ja
test
xchg
lock
aad
mov
aaa
cs
fildll
and
negb
fs
mov
es
daa
pop
int3
mov
sbb
cmp
lret
insl
jge
mov
and
adc
mov
adc
push
rolb
out
sub
add
ret
test
nop
xor
jecxz
push
clc
jg
insb
xchg
cmp
les
mov
lods
andl
loopne
jmp
divl
test
add
pop
adc
pop
shrl
jmp
push
dec
or
sub
movl
lds
out
roll
in
fdivl
sti
enter
add
cmp
xor
std
jnp
xorl
xchg
sbb
outsl
sarb
dec
or
ss
addr16
cli
cmp
xchg
dec
es
mov
dec
repz
mov
out
ja
shll
cmpb
xchg
in
outsl
sti
xchg
cmp
sub
inc
mov
xchg
les
jmp
mov
shrl
jl
in
jle
pusha
push
jnp
fcomip
mov
insl
jmp
xor
subl
out
inc
rcrb
scas
sub
cmc
stos
mov
in
and
pop
jnp,pt
or
push
sbb
inc
adc
popf
mov
cld
cmp
pop
mov
test
jae
sahf
fsts
jl
stc
or
lods
mov
adc
rclb
int
pop
imul
cmp
rclb
out
add
or
push
shlb
hlt
xchg
pop
fbld
xchg
sbb
or
sbb
ret
cmp
jns
jge
sub
add
fmulp
icebp
and
jle
sub
xor
mov
xchg
scas
stos
insl
and
lods
push
cmp
outsb
movsb
inc
adc
push
lret
jbe
stos
xchg
in
xchg
test
enter
daa
daa
add
repnz
out
or
jl
push
sbb
and
cmp
push
cmp
movsl
push
stos
or
push
inc
imul
jno
imul
sbb
and
nop
loope
inc
cmc
sub
scas
repnz
mov
dec
rol
push
pop
mov
jp
mov
adc
xor
dec
mov
sub
les
paddusw
stos
insl
sub
push
fildll
mov
stos
test
add
cmpb
jg
insl
jno
int3
inc
orl
mov
pushw
arpl
daa
cmp
dec
std
mov
dec
in
mov
shll
pop
sbb
sahf
cmc
popf
aaa
aam
inc
int
outsl
out
ret
movb
inc
mov
adc
sti
mov
in
arpl
lods
jo
xchg
mov
leave
cmp
push
xor
push
loopne
xor
repnz
cmp
mov
push
xlat
pop
xchg
subl
or
add
cs
popa
scas
sbb
xlat
dec
int
sub
mov
xor
sti
flds
incb
jne
ds
lea
sub
inc
xchg
les
mov
repz
adc
pop
imul
push
xor
push
sbb
adc
xor
jmp
int
cs
lret
and
aam
aas
rol
divl
push
and
je
inc
stc
jecxz
xchg
push
std
in
inc
cmp
pop
rolb
cmp
fistl
fwait
rcrl
outsb
mov
lock
push
das
jg
push
mov
mov
cld
negb
add
dec
popa
sbb
and
repz
lret
fdivrl
push
and
imul
cmp
adc
pop
sub
jmp
ret
cmp
push
fisttpll
pop
insl
clc
mov
mov
mov
lods
in
sub
les
mov
xor
push
scas
dec
xor
jecxz
incl
stos
fimull
test
cltd
xor
scas
inc
push
dec
outsl
mov
xchg
mov
jp
je
adc
jl
mov
icebp
out
dec
lods
hlt
add
pop
or
lcall
push
pop
or
fdivl
mov
xchg
mov
sub
ja
mov
jle
outsl
mov
fwait
ret
clc
add
pop
addr16
jne
mov
mov
push
roll
jne
cmpl
add
mov
dec
adc
inc
ljmp
cmp
and
sub
dec
pop
cs
mov
imul
jmp
rcl
cmp
dec
out
ja
popf
hlt
shl
mov
call
std
xchg
and
aam
jnp
mov
jle
test
push
cmc
notl
xchg
iret
fisubrl
gs
imul
loop
inc
xor
aas
sub
push
into
add
xor
js
dec
imul
and
push
outsl
cmp
repnz
jmp
sti
hlt
ffreep
sub
jmp
inc
jge
cmpsl
sbb
loop
aaa
cmp
lea
add
cli
int3
fdivrl
inc
pop
scas
into
fisubs
das
dec
xor
jmp
sahf
test
jp
ja
sbb
jnp
push
sbb
mov
fsts
enter
daa
es
cmp
sub
mov
xchg
inc
hlt
push
clc
in
movsl
mov
lock
enter
sbb
adc
outsl
cmpsb
sub
fnstenv
pop
jge
pop
cwtl
jbe
push
fbld
sub
sbb
cmp
jl
adc
pushf
jnp
adc
add
fdivr
jle
test
ret
xor
adc
sub
mov
fs
pop
mov
jb
push
movsl
mov
faddl
loope
sub
adc
test
adcb
mov
push
js
xchg
pop
sbb
lcall
cmp
pop
ret
pop
cs
lret
leave
rorl
mov
cwtl
imul
mov
mov
sub
addr16
insb
adc
cltd
ss
ljmp
mov
push
push
cli
push
jno
xor
mov
or
mov
shlb
mov
loopne
enter
int3
fstl
xchg
pusha
enter
sub
mov
add
data16
sbb
sbb
pop
mov
xlat
xchg
test
inc
adc
mov
mov
push
lods
xchg
nop
repz
dec
mov
faddl
lds
or
cmp
jle
and
pushf
pop
inc
call
iret
aas
pop
and
jp
int
sbb
cs
adc
inc
cmp
call
jb
dec
mov
je
flds
movb
std
xchg
ret
push
stos
ja
pop
and
or
xor
fildl
push
pop
jne
pop
mov
push
lock
iret
xchg
das
pop
pop
add
js
dec
and
scas
rolb
insl
jno
mov
test
cmpsl
and
loope
icebp
lret
cld
stos
inc
cwtl
lret
dec
ret
jmp
in
pop
mov
dec
dec
inc
shl
mov
mov
imulb
icebp
ret
movl
add
xor
add
sbb
movsl
lods
push
subb
push
stc
aas
xchg
ja
adcb
imul
mov
imul
mov
mov
mov
push
jno
inc
dec
dec
xchg
test
xchg
int
push
sbb
subl
out
lods
lock
add
and
cmp
les
leave
dec
fimull
in
std
xor
sti
hlt
mov
addr16
pop
mov
in
push
ja
inc
cmp
xor
or
or
imul
lcall
xor
lods
repz
subl
mov
hlt
shrb
cmp
dec
addr16
daa
jp
mov
xchg
cli
dec
dec
inc
adc
in
or
pusha
lea
xor
lcall
leave
cmpsb
push
orl
lods
popf
sbb
mov
and
fsts
ljmp
rorb
adc
jle
pop
push
test
cs
iret
cmp
add
and
push
inc
push
mov
lods
push
add
pop
or
mov
jp
fidivrl
mov
sbb
push
mov
cwtl
push
scas
cmpsb
outsl
push
out
push
cmp
mov
std
ss
sub
hlt
sub
add
add
jge
xchg
add
mov
xchg
aaa
testl
add
pop
jg
fiadds
xor
inc
jns
scas
dec
xchg
pop
and
jne
movsb
pop
aaa
loopne
push
rcr
fs
clc
enter
daa
and
les
jno
push
out
inc
stc
mov
add
dec
push
lret
add
and
lahf
pop
mov
push
push
mov
les
aam
sti
andb
test
xchg
and
pop
xlat
dec
dec
push
sti
push
loope
push
int
lea
cmp
and
jecxz,pt
dec
adc
ja
cmp
cmp
arpl
add
cli
filds
int
lahf
xor
pop
or
hlt
xor
inc
test
lods
push
lret
sub
dec
cs
pop
or
mov
rorl
push
and
cltd
lret
cmp
ret
test
add
mov
insb
jae
iret
jp
cmc
sub
fbstp
sti
pop
xor
adcl
ss
loope
andl
adc
mov
mov
cli
pop
cli
test
adc
jns
or
push
add
gs
loopne
push
test
sbb
adc
mov
pop
pusha
adc
mov
add
es
data16
jge
sbb
inc
push
xlat
xor
inc
mov
pop
idivl
sti
aaa
fcom
decb
gs
nop
into
stos
add
xchg
pop
inc
lods
and
inc
pusha
mov
push
cltd
and
dec
mov
xchg
jecxz
in
add
mov
or
xor
mov
icebp
pushf
js
outsl
jmp
push
test
fldcw
push
fmulp
aas
adc
jb
mov
dec
in
mov
rol
push
jecxz
int3
jns
dec
call
jecxz
adc
dec
mov
inc
and
mov
fbld
sbb
aam
std
and
das
cmp
subb
das
sahf
jne
lahf
adc
rorl
btc
and
stos
dec
push
sub
and
movsb
mov
mov
data16
mov
push
cwtl
and
mov
pop
aad
mov
dec
sarl
jb
jo
pop
scas
mov
xchg
mulb
ljmp
cmp
stc
push
xchg
mov
sub
pop
mov
rcrl
and
cmp
das
dec
dec
cmp
idivl
dec
inc
mov
loopne
daa
roll
aad
nop
sti
jno
adc
cmc
add
cmp
icebp
or
sbb
lret
sub
xor
stc
stos
mov
push
cs
mov
dec
mov
in
or
or
push
and
mov
sub
push
out
adc
push
bound
push
aam
and
mov
ret
mov
ss
ss
and
pop
xor
pop
push
mov
shlb
mov
adc
out
in
imul
fists
xchg
dec
xor
out
xchg
into
popf
sbbl
cmp
popf
inc
lcall
data16
fwait
and
pop
adc
jnp
inc
insb
jle
imul
cmp
pusha
push
ret
cs
pop
aaa
arpl
mov
push
lds
mov
and
inc
int3
jb
fisubrl
stos
sbb
fwait
cwtl
imul
or
shlb
mov
push
mov
add
jne
test
arpl
lret
stos
push
jge
imul
aaa
mov
sahf
or
xor
out
int3
mov
or
imul
popa
mov
jo
pop
push
scas
sub
sub
mov
outsl
std
movsb
in
insl
push
mov
lcall
out
enter
daa
and
mov
jno
add
jl
mov
dec
jb
aas
push
mov
cmp
out
xchg
lods
lahf
jl
call
in
test
cmpsl
movsl
insb
inc
push
bound
pop
insb
adc
into
pop
cmc
pop
push
movsl
jp
enter
or
xchg
sub
jb
cmp
ffree
adc
push
jno
rolb
sbb
cli
sbb
enter
xor
repnz
xchg
xor
jo
sub
faddl
pop
mov
lcall
inc
fcompl
xchg
sub
jg
test
iret
or
fnstsw
sbb
mov
push
jmp
pop
pop
push
mov
push
mov
mov
mov
outsb
fdivrs
pop
testl
push
pop
mov
add
jb
mov
repnz
sti
xor
cwtl
outsl
test
loop
inc
or
cwtl
mov
fs
or
jmp
sbb
lods
and
idivl
cli
mov
xchg
xor
js
xchg
ds
into
xchg
int3
mov
loopne
cmc
in
pop
in
mov
cmp
fwait
adc
add
add
cmp
push
stos
sbb
jge
cmp
add
mov
stos
in
jb
leave
sti
out
insb
scas
cmp
add
dec
dec
das
incb
mov
fnstenv
mov
repz
dec
xchg
cmpsb
popf
push
push
loope
ficoml
mov
adc
mov
jmp
pop
sbb
mov
je
inc
jno
fdivrl
mov
push
jb
dec
jle
ffree
mov
jecxz
dec
or
dec
dec
aaa
std
loop
pop
cwtl
int3
cmp
xchg
je
mov
adc
cmp
cmpsl
sbb
daa
add
addl
sbb
lock
xchg
and
sbb
xchg
mov
out
gs
into
pop
rcrl
dec
mulb
insb
insl
aas
sbb
dec
push
jp
cmpsl
and
scas
mov
js
pop
cld
add
lret
sub
pop
mov
pop
lret
imul
sub
dec
ret
in
fsubl
cmc
mov
pop
clc
imul
xor
push
lea
push
nop
lods
sub
mov
mov
push
inc
mov
push
add
aad
cltd
in
test
and
notl
dec
movsb
je
test
std
sbb
xchg
mov
test
xlat
stos
jg
and
jae
xor
cmp
roll
pop
add
xor
pop
or
outsb
into
xor
dec
inc
mov
insl
outsl
xor
pop
xor
xchg
std
mov
ret
or
or
push
fwait
push
cwtl
movsl
push
inc
mov
jne
jnp
mov
add
out
repz
jmp
je
mov
xchg
adc
fbstp
cltd
filds
or
jbe
orl
shrl
mov
stos
mov
mov
xor
in
sub
pusha
ret
lods
jecxz
jae
add
and
jmp
pop
dec
arpl
mov
stos
popf
imul
movsl
fmulp
stos
jle
push
and
dec
mov
jnp
cmp
push
aaa
mov
adc
inc
aaa
iret
idiv
dec
ret
ljmp
jg
jae
sbb
jbe
push
xchg
xlat
push
dec
out
sub
fucomip
pop
xchg
push
jbe
sbb
add
out
scas
insb
int3
out
rol
cmp
repnz
adc
sar
arpl
leave
in
jge
pop
xchg
sbb
mov
leave
or
loope
add
aad
int3
popf
imul
xor
cli
push
lahf
scas
or
leave
cmp
popf
movsb
outsl
stos
aaa
push
push
pop
in
mov
enter
daa
and
cmp
and
jl
in
mov
loope
mov
movsl
mov
int3
and
fcmove
push
idivb
out
cvttps2pi
inc
lods
or
cmpsb
mov
pop
pop
xchg
xchg
or
pop
push
cmpb
dec
fs
pop
fldcw
pop
push
cmp
jl
sub
adc
sub
addr16
ret
sbb
mov
dec
imul
lea
xlat
lods
push
pop
or
aas
lcall
repnz
sarl
cld
mov
test
inc
sti
and
ret
jg
mov
mov
adc
mov
rolb
push
outsl
sbb
cmp
cmp
jo
push
add
mov
in
push
inc
mov
xor
jg
loop
test
dec
jle
fs
mov
ss
aam
lods
or
mov
add
push
ljmp
cmp
xlat
fmull
sbb
nop
mov
loopne
stos
negl
leave
xlat
adc
jg
imul
fpatan
negw
cmp
scas
mov
mov
fstp
sar
xchg
mov
pop
aad
add
nop
test
push
dec
cmpsl
iret
addb
add
scas
mov
les
psllq
sbb
roll
into
or
mov
mov
adc
and
pushf
into
mov
jmp
adc
cs
pushf
pop
inc
inc
je
inc
mov
sarb
adc
dec
push
inc
sub
data16
dec
and
std
mov
cmpsb
mov
arpl
adcl
adc
sbb
pop
lock
xchg
enter
jo
cld
arpl
mov
mov
dec
shrl
jmp
cs
dec
shrl
and
imul
orb
sub
dec
lret
cwtl
addr16
and
xlat
loop
pop
stos
xchg
rcrb
mov
aam
fisubs
es
inc
frstor
mov
je
outsb
ljmp
sbb
mov
mov
je
push
sbb
maxps
or
mul
mov
test
ss
dec
cmp
out
dec
or
addr16
xchg
testl
xor
push
stos
outsb
mov
add
jae
in
push
and
xor
inc
mov
push
push
pop
xor
out
jns
into
jae
xchg
push
mov
push
add
dec
lret
icebp
fildl
fiadds
out
push
aaa
fwait
jg
cmpsl
push
out
fbstp
cmpb
fiadds
push
out
rol
mulb
xchg
sarl
filds
xchg
popa
mov
mov
andb
cmpb
mov
mov
and
mov
push
repnz
insl
sbb
fisttpl
pusha
pop
in
xchg
in
xchg
hlt
push
lahf
jmp
sub
push
cmpl
jmp
popf
nop
repnz
in
stos
icebp
out
jne
adc
and
out
xchg
and
jle
int3
adc
imul
pop
lret
inc
jno
push
jae
cmpsl
pop
push
dec
ds
test
push
lret
ficoml
push
sbb
inc
mov
scas
iret
call
jecxz
cltd
sti
test
repnz
leave
pusha
mov
arpl
pop
add
pop
mov
in
xor
ds
inc
mov
int3
mov
lret
pop
imul
xor
push
pop
shrb
fdivrl
cmp
dec
das
movsb
cli
popa
out
push
push
lea
lret
enter
test
enter
daa
and
shlb
sarb
adc
push
jns
push
test
dec
movsl
mov
xchg
jne
push
leave
iret
lahf
test
cmp
sti
push
cmpsb
cmp
pop
mov
mov
pop
xchg
jecxz
push
test
sub
sbb
cmp
mov
dec
or
insl
rorb
mov
mov
add
mov
dec
push
xor
pop
sbb
int
or
jp
pop
mov
push
pop
xchg
pop
fsubrl
xchg
outsb
or
incb
dec
xchg
or
mov
out
push
jb
daa
cmp
repz
loopne
add
lret
pop
shll
jbe
xchg
jge
sahf
mov
imul
inc
addl
or
and
push
jmp
dec
adc
adc
repz
dec
mov
add
cli
sbb
adc
or
jmp
loopne
jae
pop
and
lahf
imul
ret
data16
add
repz
sbb
mov
dec
xchg
adc
inc
rcl
hlt
out
aad
jmp
push
dec
push
je
inc
in
in
fxam
shl
les
jne
mov
add
lea
pop
and
rclb
xchg
mov
aad
in
into
popa
adc
pushf
jns
shr
rcll
inc
enter
cmpsl
subl
out
out
sbb
pop
dec
dec
lret
gs
je
jb
jecxz
sbb
push
jo
std
xor
das
mov
scas
mov
jg
sub
mov
pop
add
xor
test
xchg
mov
push
insl
data16
cmp
jno
in
inc
mov
fwait
jno
dec
pushf
inc
cmpsl
and
or
fldenv
cld
push
shr
lret
pop
jl
mov
loopne
inc
push
mov
pop
lret
shlb
sub
sub
insl
test
es
arpl
pop
sub
loope
into
xchg
mov
sbb
out
lret
popa
inc
adc
or
fnsave
xchg
xchg
repnz
movsbl
mov
pop
insl
mov
push
jge
sbb
das
stos
test
push
ficomps
stc
nop
mov
mov
cmc
stos
pop
negb
out
cmp
repz
add
adc
fistps
mov
jae
sarl
rcrl
ja
ja
dec
mov
rcrl
sbb
fwait
scas
leave
push
mov
fs
imul
stc
bound
jns
fwait
in
in
lret
mov
call
sub
daa
bound
subl
inc
mov
ret
ja
dec
into
pop
push
in
fsubs
stc
ds
xchg
cmp
notl
jb
out
inc
push
popf
mov
sub
push
and
shrb
lahf
and
clc
jnp
push
sbb
xorl
outsb
popf
or
lahf
inc
jl
adc
jne
push
push
in
or
mov
inc
dec
je
fiaddl
cmp
iret
push
xor
scas
xor
dec
lds
dec
xor
mov
cli
mov
dec
je
leave
push
push
mov
push
shlb
xchg
scas
inc
aam
jp
add
rcrl
sub
out
or
push
jecxz
imull
int3
jae
gs
lcall
xor
mov
pop
scas
leave
cwtl
pop
and
xor
mov
and
test
push
movsb
add
jbe
pop
inc
in
add
test
inc
popa
xchg
daa
and
cmp
sub
mov
push
sub
xor
and
sahf
xchg
lahf
fsts
push
pushf
xchg
dec
test
or
in
lret
sub
mov
loope
daa
js
test
pop
ror
shrb
jno
loope
cmp
cmp
xchg
lds
jecxz
jbe
in
mov
adcb
loopne
out
adc
add
bound
ss
jle
fisubs
mov
dec
jb
pop
or
dec
push
mov
lock
insl
sub
sub
imul
test
adcl
mov
mov
push
jne
fdivrl
scas
inc
cli
test
sarl
sarl
mov
adc
pusha
rcrb
inc
or
xor
jmp
and
mull
adc
sub
ss
or
movsb
pop
jns
add
icebp
xor
cmpl
or
and
out
leave
loopne
dec
scas
pop
inc
test
adc
dec
iret
adc
out
xchg
add
popf
cltd
data16
mov
dec
or
cmp
dec
lahf
xlat
ret
sub
adc
in
mov
das
sti
repz
jle
pop
stos
dec
aad
xor
dec
gs
inc
clc
cltd
xchg
aad
orl
xchg
out
jecxz
lea
out
out
or
je
lahf
lcall
and
mov
cs
push
inc
ret
aas
iret
fbstp
push
imul
bnd
stos
movsl
jecxz
fs
push
xor
cwtl
std
les
aam
xor
imul
or
pop
rorl
mov
adc
push
and
repnz
dec
fsubr
imulb
adc
insl
hlt
xor
inc
or
mov
std
push
sbb
addl
mov
adc
mov
jmp
or
jns
sahf
aam
dec
adc
xchg
sbbb
or
clc
sbb
iret
xchg
repnz
jne
pop
mov
popa
pop
stos
xchg
lods
outsb
mov
clc
mov
fcmovbe
xchg
push
rcr
sahf
nopl
add
filds
fs
inc
push
inc
outsb
mov
bound
mov
scas
sbb
out
das
lods
jno
dec
daa
dec
out
pushf
lea
add
pusha
test
push
push
std
xor
bound
jbe
into
mov
mov
ja
sahf
dec
mov
push
or
scas
sbb
fstpl
std
push
sub
mov
adc
nop
shlb
jns
cld
dec
in
push
and
mov
or
sub
and
data16
loope
mov
or
mov
shrl
jmp
movsl
add
rclb
adc
xchg
sbb
adcl
out
xor
loop
dec
into
adc
stos
stos
xlat
lahf
cmpsl
and
insb
imul
pushf
jle
test
push
or
nop
adc
repnz
pop
cmp
jae
xchg
push
sar
sub
push
enter
clc
inc
pop
xchg
push
add
sbb
cmp
imul
shrb
xchg
enter
mov
jae
pushf
jge
mov
arpl
or
xlat
fstpt
stos
fwait
dec
sbb
cli
aaa
mov
enter
roll
mov
push
pop
leave
stos
cmc
enter
iret
out
jo
lods
imulb
in
rcl
addr16
out
repz
add
out
adc
inc
lcall
push
leave
push
jno
pop
sbb
pop
dec
cs
push
dec
dec
inc
movsl
lret
clc
and
das
lahf
clc
mov
push
outsl
mov
test
shl
ds
pop
movsb
dec
cmpsb
aas
test
or
cld
js
push
sub
adc
add
adc
loope
imulb
adc
cmp
xchg
xchg
or
xor
mov
fstl
sbb
shll
add
int3
xor
add
pop
add
or
dec
sub
std
popa
pop
mov
scas
lcall
sbb
sub
outsb
into
int3
push
test
xlat
jg
xchg
add
adc
jmp
push
cmp
and
jno
push
js
sub
fsubrs
in
orl
mov
push
sbb
pop
sub
push
or
xor
lods
or
xchg
out
loop
jne
stc
je
int
adc
mov
ss
lods
shll
lahf
mull
cli
sbbl
inc
fwait
repz
inc
into
and
loopne
inc
mov
adc
adcl
data16
sbb
imul
and
mov
push
jae
sti
mov
bound
das
loopne
nop
adc
enter
cli
mov
les
sub
push
mov
call
xchg
push
pop
push
sbb
add
es
iret
cld
jp
lahf
aam
cs
mov
in
inc
fstl
aas
sub
iret
jb
rcrl
inc
aaa
shl
hlt
pusha
pop
fs
jle
jnp
mov
inc
pusha
mov
push
fisttps
lahf
pop
pop
inc
mov
and
mov
push
mov
ret
and
cld
sub
lcall
insl
fldt
cmpsl
pop
jg
mov
aam
pop
cld
lods
xchg
arpl
in
push
mov
pop
jle
dec
loope
mov
or
pop
rcr
sbb
aam
xchg
es
aaa
fstpl
popf
jno
push
dec
add
int
icebp
popa
je
lods
fptan
lret
fstpt
and
mov
lods
mov
and
xor
cltd
shr
test
push
mov
push
adcl
or
jp
test
fndisi(8087
xchg
icebp
mov
shll
stc
rcrb
stos
cmp
out
decl
adc
les
push
test
mov
jmp
jp
ja
sti
lret
jns
jle
dec
lret
mov
inc
fsubrs
loope
dec
dec
movsb
add
enter
push
fwait
or
xor
rol
icebp
jne
out
jno
out
ficoms
bound
push
push
add
xchg
dec
xor
xor
sahf
test
jg
xchg
add
mov
mov
mov
mov
pop
mov
lock
shll
and
xchg
insl
inc
mov
xchg
mov
mul
rorl
mov
mov
push
sbb
pop
jg
insb
aam
add
jle
fldcw
adc
mov
inc
pop
outsl
insl
mov
xchg
sub
jae
fdivrl
mov
push
inc
or
stos
sbb
icebp
sbb
hlt
imul
or
clc
cmc
inc
sbb
jns
sti
mov
out
dec
dec
hlt
es
hlt
in
fdivl
arpl
mov
inc
fcmove
inc
jge
loop
sbb
icebp
or
jno
mov
add
in
jbe
clc
cmpsb
ficomps
sbb
xchg
dec
cmp
in
cmc
movsb
fwait
addb
xchg
in
in
into
pop
cmp
daa
pop
sahf
xchg
cmp
movlps
clc
dec
popf
test
push
sub
and
lahf
pop
pop
push
inc
mov
test
sahf
inc
add
pop
push
cmpsb
ret
pop
das
cmp
cmc
sub
pop
push
pop
enter
push
loope
lods
sub
dec
sbb
push
xlat
aam
mov
jnp
rcrb
or
cmpb
dec
sbb
pushf
add
mov
xor
dec
cmp
test
sub
and
pop
fstps
cmp
fsubrl
rcrb
lds
push
icebp
dec
jg
cmp
mov
and
mov
insb
mov
pop
clc
and
jne
push
jnp
dec
cmp
and
dec
testl
xchg
shrl
mov
das
sbb
negb
aad
fdivl
sbb
cmpsb
pop
loop
andb
add
fs
mov
or
add
and
mov
cli
mov
xor
test
or
ds
add
les
cld
inc
sub
push
cmp
push
sub
imul
jo
add
sbb
movsb
cmp
inc
iret
insb
mov
mov
jl
pop
or
ficoml
and
inc
push
mov
pop
movsb
repz
popa
and
insl
cmp
call
push
and
add
ret
outsb
pushf
jp
lret
pushf
ds
lods
cs
pop
pop
adc
fdivl
lret
pushf
fidivl
popa
adc
xor
pop
jecxz
enter
or
std
and
mov
fmull
lock
aas
dec
ljmp
or
mov
cmpsb
jl
adc
das
ja
sbb
jns
inc
and
pop
mov
jmp
push
loopne
ret
dec
cmp
dec
mov
stos
mov
cld
xlat
scas
pushf
lret
push
push
and
push
mov
popw
daa
adc
shrb
stc
mov
adcl
ret
mov
loope
test
add
inc
adc
xchg
mov
xchg
jo
ljmp
lods
inc
push
cmp
inc
dec
rcll
mov
pand
gs
clc
mov
out
mov
push
mov
dec
cmpsl
jne
test
les
sbb
pop
lock
mov
bound
add
fistpll
cmp
xchg
scas
imul
shl
cs
fidivl
jo
xchg
mov
add
jnp
mov
leave
xor
mov
cli
or
push
push
fwait
cmp
push
push
jae
xchg
jne
test
mov
in
out
dec
lock
bound
stos
mov
arpl
xchg
popf
out
mov
ds
or
lcall
rcr
sub
add
orb
mov
mov
das
in
lret
cmc
pusha
lret
fisttps
and
cltd
jmp
push
mov
js
inc
arpl
popf
sub
js
rcll
xchg
stos
mov
and
lcall
out
lcall
iret
rclb
ret
mov
inc
popf
call
cmp
push
xchg
xchg
or
std
lock
sbb
add
lret
sbb
cmpl
pop
loop
lds
enter
xor
leave
imul
hlt
aaa
out
arpl
sub
jge
or
sbb
mov
aaa
xor
mov
add
dec
pop
daa
in
fidivrs
pushf
and
or
mov
scas
lds
adc
cmp
mov
rcll
lods
jbe
aad
in
mov
push
enter
daa
push
decl
mov
in
jl
dec
and
push
adc
movsl
fnstenv
out
lahf
ss
push
adc
movl
js
hlt
cmpsb
inc
jb
pop
push
and
pop
nop
nop
pop
push
imul
jp
cmpb
int
ds
pushf
adc
je
pop
orb
xchg
cmp
xor
and
int
push
mov
xchg
lcall
add
pop
ljmp
and
outsb
xchg
stos
cld
test
inc
xchg
jg
in
mov
ljmp
ljmp
push
jle
popa
cmp
fbstp
lret
lret
outsb
roll
rorl
mov
cltd
cmc
pushf
ss
xor
outsl
mov
les
loop
in
sub
adc
f2xm1
ss
xchg
mov
adc
xchg
out
sti
out
repz
jmp
scas
jg
cwtl
inc
lcall
scas
xchg
gs
sub
xchg
pop
test
sahf
mov
cmp
mov
adc
shrb
add
test
fists
jg
jg
jle
ja
dec
mov
hlt
mov
lods
incb
data16
lret
xchg
adc
subb
fld
mov
les
sbb
xchg
cmp
test
call
test
mov
adc
sbb
jge
mov
inc
in
jmp
aas
push
lock
xor
dec
cmpsl
push
jbe
fisttpll
jecxz
loopne
pop
sub
std
int3
mov
cwtl
cs
leave
pop
mov
sub
cld
fstpt
imul
lock
ret
push
nop
ret
mov
xor
and
or
sarl
cmp
insl
test
rclb
cmpsl
sbb
and
sbbb
ret
jne
mov
jo
and
fisubrs
pop
inc
inc
xlat
sarb
pop
sub
or
dec
lock
aas
xchg
sub
pop
push
imul
xchg
scas
jp
ljmp
dec
lods
scas
or
dec
mov
scas
roll
xlat
add
pop
cltd
das
cld
add
cmpsb
sub
lahf
cli
dec
push
push
ljmp
vminps
lds
daa
pop
xor
fldt
lds
add
cli
sbb
pushl
fnsave
or
push
push
mov
jg
mov
pop
mov
out
enter
stos
inc
dec
adc
or
imul
push
push
pop
iret
jne
adcb
sub
fdiv
jns
notb
xchg
in
fdivrl
mov
xchg
sub
adc
mov
jp
and
mov
mov
mov
in
in
pusha
gs
cmc
fildll
and
jmp
and
dec
out
stos
lea
cld
jne
push
pop
sbb
stos
xor
pushf
and
push
jns
pop
neg
jle
pop
or
movb
pop
stc
iret
xor
or
mov
lret
cmpsb
inc
test
sbb
push
xor
sbb
out
mov
push
inc
scas
call
xchg
pop
aam
sbb
jecxz
imul
lea
daa
fcmovnb
and
mov
cmp
sbb
loop
mov
arpl
in
inc
loopne
int
mov
add
aaa
out
sti
mov
cmpsl
mov
add
sti
int3
pop
daa
dec
pop
push
es
fidivs
xor
sbb
fsubrs
movsl
pop
mov
movsb
mov
jge
loopne
adc
cmp
in
pushf
movsl
in
enter
daa
sbb
aad
jno
fst
jl
stos
cmp
jnp
mov
rep
arpl
sub
jbe
push
mov
or
push
xor
jnp
pop
mov
pusha
pop
jge
pop
js
and
fildll
es
sub
cmp
cmp
ds
xor
rorb
mov
imul
sbb
in
add
add
ljmp
sub
sbb
pop
add
mov
sahf
faddl
mov
xchg
xchg
inc
mov
in
mov
add
xor
inc
cmp
cmp
lcall
lret
dec
rcrl
mov
sahf
out
div
arpl
xor
lret
popf
ror
loop
cmp
stc
cltd
lcall
adc
lock
jae
jbe
imul
sbb
mov
inc
mov
cmp
shl
or
sub
gs
imul
mov
pop
mov
aaa
lahf
imul
pop
add
cld
or
push
cmp
jle
xlat
mov
jns
mov
pop
jp
sti
scas
lds
aad
inc
stos
nop
cmpsb
sub
loope
faddl
push
ds
or
les
sbb
xchg
sti
out
dec
lea
ljmp
add
lock
imul
adc
in
out
pushf
shl
into
jmp
js
jo,pn
sub
imul
aas
or
jb
cmp
je
aam
jecxz
cmp
popa
mov
push
cwtl
jmp
iret
lret
mov
sub
xchg
in
nop
jg
xor
insb
lock
cmp
test
sbb
notl
or
idivb
fstps
nop
jne
dec
das
push
cmpsl
sbb
out
mov
fs
sub
pop
leave
mov
push
cli
mov
gs
rclb
mov
push
test
das
ret
into
jp
mov
fstl
inc
scas
xchg
out
mov
ljmp
dec
lods
sbb
sahf
mov
mov
insl
xchg
testb
cmp
adc
add
dec
cltd
data16
cmp
nop
jne
mov
mov
push
dec
in
lret
dec
jne
xchg
test
push
mov
inc
mov
sbb
insl
sarl
xchg
pop
cmp
sub
add
add
push
outsl
xor
jbe
pop
mov
mov
andb
cmp
in
ja
push
je
jge
mov
or
dec
push
fwait
cltd
fdivs
push
mov
fbld
mov
int3
lods
out
or
jae
xor
int
jne
xor
jns
lods
xchg
cmp
and
sub
push
dec
in
jl
cmc
jp
cmpsb
mov
fsubrs
mov
out
mov
cmp
bound
add
cmp
dec
inc
pushf
xchg
out
scas
jmp
in
fsubl
adcl
pushf
popf
jp
xor
pop
hlt
pop
stos
mov
fisttpll
pop
inc
mov
push
sub
dec
adc
mov
pop
adc
sahf
inc
mov
into
jae
jbe
push
out
out
test
inc
cmp
mov
cwtl
sbb
sbb
imul
mov
and
xchg
sarb
xor
call
mov
hlt
int
shll
in
inc
jecxz
lock
push
lock
sahf
aaa
scas
inc
lcall
sbbl
or
rcr
cmpl
shlb
js,pt
and
adc
cmp
aad
inc
dec
add
cmp
xor
jbe
adc
in
cmpl
daa
sbb
repz
inc
jno,pn
cli
jp
ret
dec
ljmp
movsl
out
mov
movl
push
mov
sbb
push
lcall
inc
xchg
es
cmpsb
dec
das
sub
pushf
loope
cmpsb
incl
pop
push
decl
push
xchg
or
les
sub
out
fistpll
adc
sarb
jle
adc
sub
xorb
sbb
xor
add
mov
cmp
lods
mov
xor
mov
pop
pop
test
xor
push
sub
add
pop
outsb
pop
pop
mov
mov
cmp
and
mov
adc
mov
in
sti
mov
popa
into
and
push
mov
test
inc
cmp
push
cmp
push
lret
shrl
rorl
xchg
sahf
mov
cmp
sub
pushf
xor
push
fisubrl
out
mov
jl
inc
stc
push
fs
xor
adc
stc
ss
or
lods
pop
push
xchg
mov
add
cli
dec
leave
mov
sbb
cmp
or
movsl
sub
or
or
int
cltd
pop
fsubl
xor
fadd
adc
pusha
sub
fisubrl
pop
data16
sbb
push
jge
xlat
std
xchg
stos
sub
stc
mov
lret
sti
pop
jne
inc
dec
aad
jge
nop
adc
jecxz
push
adcb
mov
pusha
outsb
xchg
mov
sbb
movl
ss
pushf
jnp
in
pop
mov
inc
repnz
jae
dec
ljmp
adc
dec
xchg
mov
mov
xchg
fmull
fs
xchg
lea
mov
stos
xchg
cmp
sbb
lcall
add
mov
ja
lock
sbb
adc
mull
sahf
push
out
subb
int
idivb
outsl
insl
ja
popf
dec
sub
lods
cmpsl
sbb
mov
icebp
xor
inc
cld
pop
add
mov
push
ljmp
xchg
pop
test
mov
aam
test
mov
or
leave
pop
clc
inc
mov
cltd
icebp
out
popa
shrb
idivb
scas
mov
mov
psubb
add
cltd
popf
cwtl
xor
or
push
imul
fdivrl
addb
icebp
out
rcll
or
stos
notl
roll
xor
stos
ljmp
xchg
xor
decb
xor
movsb
or
xchg
jmp
xchg
ja
sar
jo
movsb
inc
jnp
les
or
push
pop
sbb
jne
mov
shr
cmp
cld
jns
jl
in
test
mov
imulb
or
push
addr16
sub
cltd
xchg
mov
mov
mov
pop
lods
adc
dec
sub
or
dec
pusha
fwait
rol
fildll
pop
xchg
mov
sub
xchg
mov
mov
int
and
mov
je
push
popf
push
iret
stos
push
test
and
test
mov
fsubs
adcl
out
adcl
inc
mov
push
movsl
mov
inc
inc
arpl
or
sbb
and
imul
add
lds
jae
mov
cmp
leave
sarb
sbb
xchg
arpl
es
out
xchg
jge
in
sbb
push
pop
or
lcall
mov
in
fisubs
jb
pusha
xor
scas
add
push
and
or
cmp
or
xchg
stos
push
jle
sub
in
push
xor
daa
sbb
lds
push
bound
jl
fsubrp
dec
pop
dec
loop
mov
mov
and
inc
lahf
xchg
and
mov
test
lret
inc
and
cmp
lret
das
scas
js
insl
cmp
push
mov
sbb
ja
cmp
dec
fnstcw
inc
mov
nop
rolb
repnz
addb
and
and
xlat
xor
nop
scas
jo
pop
int
mov
pop
add
xchg
in
fcompl
fldcw
out
ret
xor
pop
mov
aaa
xchg
mov
add
mov
jne
mov
sti
mov
jl
and
sub
inc
insl
cmp
adc
idivl
adc
jmp
popf
inc
mov
push
aaa
sbb
cmpsl
sahf
sub
call
xchg
outsl
pop
push
mul
xadd
fs
adc
ja
lods
inc
inc
push
mov
sarl
adcb
xor
and
cmp
jno
or
jge
adc
insb
pop
sti
sbb
mov
in
adc
cmpsb
push
add
mov
sbb
nop
adc
cmp
sub
out
mov
xor
jmp
xor
xchg
push
sub
lahf
bound
inc
push
cmc
fldenv
fcmovnb
ret
mov
repz
push
xchg
subl
movl
and
adc
testl
ss
inc
jns
add
aas
inc
addr16
gs
dec
or
sbb
test
mov
xor
std
shl
cwtl
pop
pop
int3
mov
imul
dec
push
push
jmp
ret
fisttpl
jne
jbe
push
mov
test
jg
adc
repz
mov
push
cmpsl
and
sbb
shll
jae
insl
pop
outsl
sub
leave
int3
cmpsl
sbb
xchg
pop
sub
lret
adc
mov
adc
rcrb
mov
jg
sub
repz
test
ret
in
paddq
nop
dec
lahf
fstp
into
mov
jle
or
ljmp
subl
jbe
xchg
test
push
repz
insl
xorps
fcompl
cmpsb
xchg
pop
mov
movsb
xchg
push
shl
cmovge
out
test
xor
sbb
mov
adc
stos
out
sahf
out
out
mov
str
sar
jle
xor
sbb
or
mov
inc
lods
dec
xchg
imul
and
push
dec
arpl
mov
jnp
or
xchg
test
test
adc
aad
js
mov
xchg
out
lret
bound
stos
jns
mov
in
js
xchg
fsts
mov
sub
mov
push
cli
addr16
dec
jp
inc
jae
pop
adc
cs
cwtl
mov
lea
add
xchg
mov
fisttps
insl
jmp
subb
mov
cld
out
cmp
enter
lods
push
movsl
push
fdivl
nop
stos
mov
jbe
jmp
mov
gs
jle
sbb
adc
js
iret
dec
inc
jge
repz
in
pop
andb
jae
test
push
arpl
or
jmp
jmp
ret
fisubrl
ljmp
jl
mov
jns
scas
out
jns
mov
aam
mov
mov
outsl
leave
inc
in
push
arpl
lods
loopne
jmp
lahf
dec
sbb
or
aad
int3
loopne
rcrb
test
mov
xor
sub
cmp
pop
push
inc
cmp
out
mov
scas
lds
and
pushf
enter
daa
sbb
jae
repz
jl
mov
dec
enter
pushf
and
cmc
rcrb
std
jae
lahf
mov
out
popa
sahf
jmp
mov
adc
inc
mov
inc
cmpsb
push
mov
xor
jo
pop
mov
push
xchg
fs
inc
jae
es
cmp
mov
adc
loopne
ja
xchg
cltd
sbb
lahf
add
sub
outsb
xor
nop
int
push
sub
stos
data16
cmpb
lcall
inc
faddl
sbb
sub
outsb
fildll
fldcw
sbb
sbb
mov
orb
in
inc
and
mov
mov
push
cmp
lret
adc
idiv
jp
lret
cli
rcrl
mov
pop
loop
shl
sub
xor
pushf
out
cmp
mov
mov
dec
andl
adc
iret
loop
push
push
call
mov
and
cli
mov
adc
leave
mov
add
adc
je
lds
mov
loopne
mov
pop
sbb
xchg
imul
add
movsl
add
xchg
sbb
cmp
aaa
lock
jnp
sub
inc
stos
loope
pop
outsb
in
mov
and
decb
test
fldenv
out
aaa
fs
dec
es
fstps
push
repz
lea
pop
call
andl
adc
sbb
add
cltd
mov
inc
add
inc
jg
add
out
jbe
mov
cmpl
push
std
push
mov
mov
cld
sub
and
movsb
aad
jp
iret
pop
sbb
mov
testl
das
rorb
xchg
mov
or
xchg
and
sbb
je
cmp
insl
inc
inc
pop
dec
and
sbb
xor
ficomps
adc
jg
jno
lea
mov
mov
ret
ror
leave
ljmp
cmp
aam
mov
ret
jnp
enter
fldl
push
or
jg
leave
popa
lods
pushf
lods
pop
xor
dec
pop
push
mov
lret
hlt
rcll
fwait
out
mov
add
lds
mov
data16
adcl
mov
add
ror
sbb
addl
stos
aad
push
out
push
jno
add
bound
lods
mov
sub
addl
mov
mov
fidivrl
test
movsl
insb
dec
push
sub
or
stc
fwait
es
push
mov
push
sbb
out
test
dec
or
lcall
xchg
sub
mov
das
sbb
pushl
inc
addr16
dec
jp
fwait
push
mov
xchg
movsb
mov
cmp
push
in
xor
mov
jg
pop
inc
mov
push
xchg
cmpl
imul
push
popa
popf
out
xchg
sarl
sbb
imul
push
dec
xchg
jnp
leave
jle
add
push
std
dec
adc
movsl
push
mov
lods
or
jle
pop
mov
test
push
es
and
aad
data16
inc
inc
sub
fcmovu
sti
aam
mov
pop
sbb
mov
imul
sub
inc
or
mov
mov
loope
mov
mov
push
xchg
arpl
jbe
inc
in
loope
jge
test
js
sub
jmp
or
flds
scas
xor
int3
lret
mov
pop
adc
pop
fisubrs
dec
xor
mov
xor
icebp
leave
jecxz
push
cltd
mov
inc
cli
jbe
pop
test
cmp
enter
daa
sbb
xor
sub
jl
arpl
push
jg
into
movsl
cld
push
xchg
cwtl
sub
push
xor
test
pusha
push
inc
inc
push
std
cmpsb
aam
arpl
add
js
push
rclb
lret
xorb
dec
loope
fs
sub
push
stos
cmp
sbb
adc
adc
mov
jl
subb
imul
adc
scas
dec
addr16
testb
int
addr16
and
arpl
insl
sbb
fdivl
fstl
addl
xor
add
jnp
mov
cmp
mov
scas
push
and
jo
aad
cmp
xchg
idivl
xor
shl
orb
xor
cmc
jg
sahf
xor
pusha
jg
sbb
loop
sbb
fs
push
adc
mov
lods
adc
insb
mov
out
stc
jp
call
and
cmp
pop
adc
jae
xchg
push
mov
gs
add
pop
cmp
xchg
adc
int
push
jecxz
adc
sub
shll
push
or
push
repz
mov
and
outsl
sbb
in
or
das
adc
aad
fstl
pop
out
pop
inc
nop
dec
stos
mov
into
repz
add
xlat
sti
out
call
add
movsb
pop
aaa
dec
les
arpl
lock
jl
mov
sub
cs
pop
iret
inc
xchg
repz
lcall
jb
popa
les
sbb
mov
insl
xorb
aad
mov
lret
mov
cmpl
pop
fldt
mov
lock
xor
mov
ret
jb
and
outsl
dec
rol
sub
testb
insl
sub
mov
cmpsl
sbb
icebp
mov
xchg
cld
fxch
push
lret
out
cmpsl
xchg
sbbb
mov
loope
pop
rcrb
mov
push
ret
or
jge
sub
popf
clc
hlt
dec
mov
ljmp
popa
adc
dec
sarb
sbb
ficoml
test
and
inc
push
ret
test
les
lods
adc
test
popa
sbb
inc
pop
ret
rolb
les
dec
out
mov
jl
or
mov
andl
in
clc
xchg
jmp
mov
mov
inc
pop
fs
ja
fnsave
dec
dec
and
mov
das
lret
fwait
push
aad
push
inc
fadd
jne
inc
test
insb
mov
mov
dec
jns
adc
xchg
ja
and
xchg
or
movsl
popf
addr16
sbb
stos
data16
aaa
sahf
mov
stos
pushf
lret
dec
leave
inc
push
in
ds
pusha
insb
stos
std
aaa
lret
dec
mov
dec
test
lea
push
fdivl
push
sbb
mov
pop
jge
stos
outsl
adc
sti
std
arpl
aaa
jnp
and
jle
loope
push
inc
out
adc
aad
ret
pop
pop
lock
stos
inc
fistpll
or
movsl
nop
push
jmp
pop
imulb
clc
inc
inc
rclb
nop
sarl
push
rcrb
aaa
push
imul
mov
lret
shlb
add
xor
mov
hlt
stc
or
arpl
push
inc
out
sti
push
jge
rolb
push
mov
stos
adc
mov
inc
mov
int3
mov
adc
in
fimuls
sbb
fwait
scas
mov
jbe
cmp
sbb
movsb
push
and
in
pop
or
enter
daa
sbb
je
out
cli
bnd
aad
jl
jecxz
dec
cmpsb
lea
bound
and
mull
lahf
lock
and
lcall
sub
jae
shr
lock
push
sbb
inc
inc
adc
pop
or
push
pop
inc
loope
stos
xor
or
ds
unpckhps
ret
cmpsb
popl
cmpb
clc
add
in
scas
xor
mov
mov
lods
shrl
mov
rcrl
les
fcompl
sub
jne
int3
xor
jg
aas
mov
aam
mov
xor
insb
cli
addl
dec
adc
inc
cmp
idivl
push
lret
scas
rorl
sbb
insl
rcll
cmc
inc
pop
inc
xor
test
enter
sub
or
rcll
lahf
popa
sub
lods
stc
jg
mov
cltd
out
push
test
xor
sarl
adc
or
cmp
and
xchg
mov
lcall
dec
fcomps
jle
cmpsl
add
xor
cbtw
lods
push
sbb
inc
inc
lock
stc
and
sub
mov
jbe
fs
sbb
mov
aad
pop
adcl
mov
inc
imul
rclb
push
xchg
lret
lea
mov
inc
jg
bound
addr16
adc
dec
sbb
pop
test
cs
adc
aaa
xor
mov
insb
dec
dec
jno
mov
lahf
imul
jo
std
mov
sbbb
lods
push
mov
flds
lods
cli
push
fcmovnu
inc
icebp
pop
pop
lahf
divb
nop
ror
nop
popa
sbb
jp
cmpsl
and
sbb
daa
sti
testb
jo
push
divb
mov
mov
or
add
mov
mov
xchg
and
addb
movsb
mov
sub
xchg
sub
adc
jmp
sbb
fstl
push
clc
das
mov
push
gs
mov
cmp
lods
xor
mov
cmp
xchg
pop
pop
dec
push
test
cmp
enter
jns
cli
test
mov
mov
pop
xlat
push
sbb
inc
repnz
push
std
xchg
jmp
shr
and
stos
mov
jno
pop
mov
add
pushf
je
jmp
ljmp
test
mov
xchg
sarl
pop
pop
fiadds
fstps
adc
xlat
daa
repz
cmp
test
insb
push
call
xchg
mov
addr16
bound
inc
mov
in
clc
adcl
mov
push
or
lods
mov
jp
outsb
fdivl
scas
jle
mov
lret
lods
jle
in
scas
lahf
pusha
pop
lds
xchg
add
jo
xchg
jecxz
movb
fcmovnb
popf
cmp
popa
repz
cltd
jmp
mov
adc
inc
jnp
inc
cltd
jle
mov
push
mov
jbe
pop
dec
mov
imul
pop
daa
inc
ljmp
sbb
or
pop
shrl
aas
std
inc
fiaddl
repz
gs
gs
xchg
jmp
scas
adc
cmp
rol
sarb
xchg
loope
lods
adc
arpl
and
jge
daa
cmp
out
push
add
imul
fstpl
mov
fidivs
mov
jo
idivb
mov
aam
imul
push
mov
push
iret
in
push
xchg
insb
enter
daa
pop
push
mov
and
loopne
js
and
lcall
push
inc
imul
or
sbb
push
fisubl
test
notb
aaa
inc
popa
ret
movsl
pop
addr16
js
out
int3
pop
dec
sbb
push
dec
and
push
jae
addr16
cmp
mov
int
sub
jno
dec
mov
fs
sbb
dec
fnsave
dec
adc
jl
mov
sub
jmp
negl
sbb
pop
leave
pushf
sub
mov
movl
cld
push
mov
mov
xor
push
xchg
aaa
dec
cmp
cld
test
idivl
call
stos
shll
lods
mov
sbb
xor
movsb
jge
cmc
and
xlat
mov
loop
aas
nop
stc
jecxz
add
notb
out
adc
sbb
add
jl
divb
cli
dec
push
dec
mov
cmp
popf
or
push
dec
sub
sbb
in
inc
loopne
cmp
pop
ja
jae
out
inc
imul
add
movsl
pop
lret
addr16
sbb
jl
lret
roll
pushf
xor
mov
loope
and
leave
pop
cmp
mov
aad
mov
enter
sbb
flds
sbb
out
xchg
lea
lods
call
and
pop
popf
cmp
adc
jb
rorb
je
ret
inc
xchg
out
inc
shl
cmp
ret
jno
jb
stos
nop
dec
call
jmp
aas
jae
mov
cwtl
dec
cmp
mov
int3
mov
mov
dec
xchg
arpl
fildl
jle
pop
add
mov
jmp
ljmp
mov
mov
cmp
psrlq
shl
int
insl
cli
adc
adc
fdivrs
arpl
mov
lret
int3
in
mov
inc
inc
and
sbb
ret
fists
aam
aaa
pop
ret
sub
es
out
adc
jp
mov
xchg
push
in
cwtl
popa
inc
cmp
lods
pushf
add
pop
fistps
push
pop
sbb
add
mov
cltd
mov
sbb
mov
push
fiadds
dec
fbld
test
loopne
xchg
lods
sub
stos
insb
cwtl
roll
out
fstpl
and
jp
push
add
mov
ja
mov
or
sbb
xor
inc
out
subb
xchg
stos
pop
ficompl
xchg
cmp
inc
outsb
test
cmp
push
mov
jne
dec
xor
inc
cmovs
mov
in
lret
adc
xor
sub
lock
dec
addr16
fidivrs
in
mov
ljmp
mov
pop
in
test
pusha
mov
dec
jg
fadds
push
jmp
scas
outsl
insb
sub
jae
pop
dec
jnp
fs
mov
fcomp
push
stos
push
inc
and
data16
insb
xchg
sti
fs
sub
jle
ja
push
rorb
adc
pusha
add
ret
test
pop
in
inc
cmc
mov
lahf
push
outsl
notl
push
mov
push
inc
sbb
mov
and
fadds
fadd
frstor
xchg
mov
ficompl
jl
and
push
hlt
data16
testl
jb
sbb
int
or
add
int3
mov
dec
pop
lahf
gs
ficoms
ds
cltd
lock
scas
pop
in
xchg
and
pop
cmp
mov
push
in
in
pop
adc
daa
push
xchg
dec
cmp
sub
jl
pop
dec
dec
test
frstor
imul
fists
gs
test
shrl
loope
cmpsb
pop
inc
pop
pop
mov
js
inc
dec
pop
mov
xor
dec
movsl
loop
rclb
stc
ds
dec
jmp
sub
dec
jge
add
std
dec
xor
fimuls
aas
jb
int
in
sub
lds
jb
stos
mov
outsb
lods
inc
addb
enter
rol
mov
insl
fmull
inc
icebp
sbb
push
xchg
xchg
sti
cmp
mov
sbb
imull
lret
add
mov
cmc
jp
lret
stos
and
aam
mov
push
and
outsl
mov
popf
loop
and
stc
lcall
adc
push
add
outsl
jg
insl
out
stos
out
xchg
push
cli
andl
cmp
cli
lds
rcrb
xor
outsl
xacquire
scas
pop
adc
int
imul
out
push
add
shlb
xchg
int
clc
push
inc
cmp
add
sub
lds
mov
dec
in
dec
xchg
js
stos
cwtl
cmc
cmpsl
aad
and
dec
jp
sub
out
fnstcw
dec
cli
mov
rep
mov
xchg
push
je
lea
mov
xchg
nop
fadd
jge
jmp
adc
sti
pushf
jge
ret
jmp
pop
inc
cs
cli
bound
and
jb
pop
lret
out
ss
mov
ljmp
lods
fcomps
pop
outsl
sub
aas
mov
sub
ss
pop
movsl
cmpsb
divl
inc
mov
das
dec
movl
call
addr16
shll
in
insl
loope
pop
dec
or
sub
out
fs
cmp
and
pop
add
lret
cmp
jl
sbb
add
mov
pop
pop
cmp
sub
aas
mov
ret
mov
pushf
es
cli
push
frstor
popa
daa
xchg
cmpsl
movsb
or
popa
pop
pop
lods
pop
cltd
push
mov
sbbl
push
cmp
jb
out
inc
push
cltd
out
xchg
test
adc
mov
dec
inc
pusha
bound
mov
mov
test
stos
xchg
leave
push
out
ffree
insl
add
shr
lods
ljmp
ficompl
stc
repz
pop
push
pop
xor
xor
xor
xchg
dec
lahf
pop
xchg
out
ja
pushf
clc
dec
and
inc
add
enter
pushf
mov
jne
data16
xlat
out
and
add
sub
inc
icebp
lods
xchg
fs
clc
mov
sbb
or
jns
addr16
mov
fwait
adc
mov
divl
dec
jb
mov
ss
mov
and
cmpsl
jns
xor
daa
xchg
jns
cmpl
out
ss
popf
mov
stc
mov
pop
dec
mov
and
cmp
push
jnp
aam
jle
xor
sbb
sub
adc
ret
cltd
pop
xchg
in
inc
add
jae
rorb
push
mov
push
inc
in
inc
cmp
dec
hlt
xchg
adc
cli
imul
scas
adc
push
sar
cld
mov
sub
mov
hlt
fiaddl
scas
arpl
mov
clc
add
fsubs
out
aaa
out
or
sub
add
push
cmp
ja
push
pop
into
push
fdivp
andb
hlt
scas
scas
cmp
mov
cmp
movsb
or
cmpsl
jbe
mov
in
aam
pop
enter
daa
adc
out
jno
mov
jl
pop
jge
repz
push
or
aas
and
sub
sbbb
push
mov
cmpsb
loopne
mov
js
daa
mov
mov
and
pop
out
sub
adc
cmp
in
loop
adc
daa
shlb
lcall
test
addl
mov
ljmp
int
aad
sub
and
pop
std
jnp
lcall
rcr
bound
outsb
pinsrw
movb
mov
rorl
lea
and
imul
jb
pop
divl
rcr
push
iret
inc
mov
inc
sbb
mov
cmc
fsts
stos
xor
loop
ss
push
mov
std
adc
imull
push
jns
cli
mov
cmp
cmp
sub
or
mov
into
jecxz
jno
cmp
loopne
mov
adcl
mov
adc
sub
add
jg
and
std
sbb
repnz
mov
sub
xor
mov
stos
sti
daa
mov
mov
sbb
nop
jle
lret
cmp
fnstenv
ljmp
adc
rorl
minps
cld
lea
adc
adc
in
pop
mov
cmp
jo
aas
add
and
je
out
jecxz
lods
stc
jns
ljmp
and
mov
xchg
out
mov
ror
adc
mov
enter
add
mov
add
mov
lahf
cmp
and
or
pop
notb
call
dec
pop
push
cmpsl
adc
mov
adc
mov
lret
stos
xor
and
push
mov
push
shr
inc
clc
sub
mov
das
shll
js
mov
out
out
iret
ljmp
mov
mov
movsb
lret
mov
cs
push
setno
add
sub
test
lds
ror
cmp
stos
dec
lods
inc
fsubrs
cmp
lock
mov
shl
and
xchg
stos
subb
out
inc
ds
add
in
jle
dec
sub
or
xor
mov
out
mov
push
stc
mov
push
lret
push
in
dec
adc
sbb
fwait
adc
rcrb
fidivrl
jg
xchg
mov
xchg
lret
mov
jns
jge
in
imul
mov
and
and
das
or
cmp
pop
jp
out
insl
mov
mov
ljmp
cmp
mov
push
mov
sub
mov
out
xchg
out
mov
jns
shld
push
inc
fsubrl
push
pop
dec
insb
insl
call
mov
int
std
push
pusha
cmp
adc
lret
dec
iret
mov
and
test
int3
stos
add
mov
push
cmc
cwtl
scas
or
int
and
sbb
ficompl
xchg
push
mov
xchg
shrb
jmp
out
out
movsb
rclb
mov
sarb
xchg
repnz
adc
shl
and
fs
inc
sti
jmp
jge
mov
sbb
cli
ret
sbb
or
xchg
mov
sub
ficomps
and
jo
and
sbb
jge
shlb
pop
cmp
sub
cmpsl
xor
jbe
cs
mov
pop
shll
and
mov
jl
sub
dec
bound
jb
pop
mov
popf
lahf
insb
xchg
mov
test
push
adc
inc
push
jmp
cmpsb
arpl
pop
fsubl
mov
push
pop
push
popa
mov
sub
imul
ds
mov
rcl
jbe
add
pop
sbb
xchg
sbb
pop
mov
lds
int
stos
xor
mov
pop
lcall
aas
fmull
in
imull
js
dec
outsb
jb
push
test
in
cmpb
jg
jbe
mov
aad
mov
imul
pushf
mov
cmp
sub
stc
jmp
mov
shl
xor
cmp
xchg
pop
sahf
mov
mov
xor
pop
mov
loop
adc
or
or
ds
mov
ss
test
mov
stos
out
jecxz
cli
out
es
adc
xor
into
push
gs
scas
cmp
pop
aam
adc
jb
es
adc
mov
mov
sbb
sub
repz
cmc
or
mov
and
sti
orb
xorl
pop
repz
inc
out
push
pop
lret
adc
and
ficompl
xor
jnp
mov
adc
cltd
into
pushf
rcll
jmp
mov
sub
sub
inc
and
jo
mov
mov
lret
je
bound
jl
inc
std
push
shrb
jl
mov
mov
in
subl
in
xchg
lret
jmp
cld
mov
push
lock
stc
cltd
das
or
fldenv
push
lds
and
push
push
rorl
imul
scas
out
dec
add
cmpsl
adc
sub
icebp
call
mov
xchg
mov
or
and
in
bound
sarb
and
cmp
push
ret
aad
pop
es
loop
clc
sbb
xchg
and
lea
lods
fldl
mov
das
jg
jne
pop
push
lock
pop
int3
mov
adc
aad
push
stos
dec
test
leave
adc
mov
or
bound
mov
es
dec
sbb
pop
fiadds
ret
out
mov
jmp
add
daa
jno
xorl
mov
xor
push
xchg
out
pop
or
ja
scas
adc
inc
xor
push
or
test
fwait
inc
dec
sbb
jne
enter
mov
pop
bound
pop
jns
xor
in
cmp
add
dec
mov
inc
sbb
loope
pushf
addr16
stc
jp
orl
xchg
mov
daa
imul
pop
pusha
jae
call
xchg
push
xchg
sub
and
cs
xstore-rng
cmpsl
movl
nop
