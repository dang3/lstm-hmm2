jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
bound
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
cmp
jno
mov
lea
lea
dec
inc
xchg
mov
mov
mov
mov
xchg
xchg
xchg
mov
mov
xchg
dec
inc
mov
mov
mov
mov
mov
push
mov
push
call
cmp
jno
lea
mov
lea
mov
xchg
inc
dec
lea
dec
inc
mov
mov
xchg
xchg
mov
mov
dec
dec
je
xchg
movl
mov
mov
mov
push
mov
push
call
mov
pop
ret
xor
xor
xor
xor
add
add
xor
add
xor
xor
xor
cmp
xor
xor
cmp
xor
xor
add
xor
aaa
xor
xor
aaa
xor
add
push
mov
add
cmp
je
xchg
mov
mov
mov
lea
mov
mov
mov
dec
xchg
xchg
mov
mov
xchg
xchg
inc
dec
mov
mov
mov
mov
mov
push
mov
push
call
cmp
jp
mov
mov
mov
mov
mov
mov
mov
dec
je
xchg
inc
dec
xchg
mov
mov
mov
lea
inc
inc
dec
movl
mov
push
call
cmp
jno
mov
lea
lea
dec
inc
xchg
mov
mov
mov
mov
xchg
xchg
xchg
mov
mov
xchg
dec
inc
mov
pop
ret
add
xor
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
cmp
cmp
add
add
push
mov
add
mov
mov
cmp
jp
mov
mov
mov
mov
mov
mov
mov
dec
je
xchg
inc
dec
xchg
mov
mov
mov
lea
inc
inc
dec
mov
cmp
je
jmp
mov
cmp
ja
mov
mov
mov
mov
inc
dec
dec
jne
mov
mov
mov
mov
mov
mov
inc
dec
mov
xor
divl
test
jne
cmp
jl
xchg
lea
mov
lea
lea
mov
lea
mov
xchg
lea
mov
lea
dec
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jno
lea
mov
lea
mov
xchg
inc
dec
lea
dec
inc
mov
mov
xchg
xchg
mov
mov
dec
dec
je
xchg
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jno
mov
lea
lea
dec
inc
xchg
mov
mov
mov
mov
xchg
xchg
xchg
mov
mov
xchg
dec
inc
mov
cmp
je
jmp
cmp
je
xchg
mov
mov
mov
lea
mov
mov
mov
dec
xchg
xchg
mov
mov
xchg
xchg
inc
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jno
mov
lea
mov
lea
mov
mov
mov
xchg
mov
xchg
lea
xchg
mov
mov
xchg
dec
dec
mov
cmp
je
jmp
cmp
je
xchg
mov
mov
mov
lea
mov
mov
mov
dec
xchg
xchg
mov
mov
xchg
xchg
inc
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
push
mov
add
mov
cmp
je
jmp
cmp
jno
lea
mov
lea
mov
xchg
inc
dec
lea
dec
inc
mov
mov
xchg
xchg
mov
mov
dec
dec
je
xchg
mov
sub
mov
cmp
jl
mov
mov
mov
dec
dec
inc
dec
jne
lea
dec
lea
mov
mov
xchg
mov
mov
lea
mov
xchg
dec
push
mov
mov
xor
call
mov
cmp
jl
xchg
lea
mov
lea
lea
mov
lea
mov
xchg
lea
mov
lea
dec
inc
mov
mov
mov
call
cmp
jno
mov
lea
lea
dec
inc
xchg
mov
mov
mov
mov
xchg
xchg
xchg
mov
mov
xchg
dec
inc
push
mov
mov
xor
call
mov
mov
cmp
ja
mov
mov
mov
mov
inc
dec
dec
jne
mov
mov
mov
mov
mov
mov
inc
dec
cmp
jp
mov
mov
mov
mov
mov
mov
mov
dec
je
xchg
inc
dec
xchg
mov
mov
mov
lea
inc
inc
dec
lea
mov
push
jmp
cmp
jl
mov
mov
mov
dec
dec
inc
dec
jne
lea
dec
lea
mov
mov
xchg
mov
mov
lea
mov
xchg
dec
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
je
xchg
mov
mov
mov
lea
mov
mov
mov
dec
xchg
xchg
mov
mov
xchg
xchg
inc
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jno
mov
lea
mov
lea
mov
mov
mov
xchg
mov
xchg
lea
xchg
mov
mov
xchg
dec
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
xchg
lea
lea
mov
mov
lea
lea
mov
xchg
lea
inc
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
cmp
ja
mov
mov
mov
mov
inc
dec
dec
jne
mov
mov
mov
mov
mov
mov
inc
dec
mov
sub
add
add
mov
cmp
jp
mov
mov
mov
mov
mov
mov
mov
dec
je
xchg
inc
dec
xchg
mov
mov
mov
lea
inc
inc
dec
lea
pushl
call
mov
pop
ret
lea
push
mov
add
mov
mov
cmp
jno
mov
lea
lea
dec
inc
xchg
mov
mov
mov
mov
xchg
xchg
xchg
mov
mov
xchg
dec
inc
push
call
mov
push
mov
push
call
mov
mov
mov
cmp
jl
xchg
lea
mov
lea
lea
mov
lea
mov
xchg
lea
mov
lea
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jl
mov
mov
mov
dec
dec
inc
dec
jne
lea
dec
lea
mov
mov
xchg
mov
mov
lea
mov
xchg
dec
mov
mov
movl
mov
xchg
lea
lea
mov
mov
lea
lea
mov
xchg
lea
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
ja
mov
mov
mov
mov
inc
dec
dec
jne
mov
mov
mov
mov
mov
mov
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
xchg
lea
lea
mov
mov
lea
lea
mov
xchg
lea
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jno
lea
mov
lea
mov
xchg
inc
dec
lea
dec
inc
mov
mov
xchg
xchg
mov
mov
dec
dec
je
xchg
mov
pop
ret
add
add
jb
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
push
cmp
testb
mov
xchg
lcall
cld
mov
xchg
sahf
mov
mov
mov
mov
cld
cld
mov
mov
mov
cwtl
mov
xchg
lahf
mov
xchg
cltd
mov
lahf
nop
lods
mov
mov
xchg
lahf
mov
fisubl
cld
cld
xchg
cld
lahf
cld
mov
lcall
cld
into
cld
mov
cld
cld
cld
cld
cld
scas
jne
jge
add
mov
mov
xchg
test
loopne
sbb
mov
cld
out
fstpt
loop
mov
cld
fstpt
mov
fstpt
cld
jae
add
mov
mov
mov
shlb
mov
mov
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
mov
cmp
mov
xor
jae
or
cmp
mov
cld
scas
jne
jge
xor
mov
ja
sub
jne
aam
jne
xor
mov
xor
lods
mov
mov
jne
xor
mov
xor
mov
sbb
movsb
jne
sbb
or
cld
cld
jne
or
hlt
jne
sbb
enter
jae
or
mov
cld
cld
jae
and
mov
cld
stc
subb
and
cld
std
mov
adc
cld
cld
xchg
cld
xchg
cld
jne
xor
clc
std
mov
xor
lods
shlb
adc
xchg
stc
subb
cld
jne
xor
cld
nop
jecxz
mov
mov
jne
xor
in
std
mov
adc
jne
in
std
mov
jne
xor
in
std
mov
adc
adc
mov
or
cld
cld
lods
jne
adc
jne
xor
lods
les
sbb
adc
jne
and
jae
sub
mov
lods
jne
adc
jne
xor
lods
les
sbb
jge
sbb
jge
and
jne
and
cld
push
jge
xor
jne
xor
clc
cld
stc
jg
or
or
or
mov
jae
add
mov
jae
adc
cmp
insl
mov
mov
lods
jne
cmp
movsb
xchg
cld
jl
cld
xchg
cld
jne
xor
mov
xor
lods
mov
cld
jl
cld
xchg
cld
jne
hlt
lods
jne
xor
lods
mov
scas
add
lahf
adc
loopne
or
or
push
jnp
cld
or
or
cmp
push
jne
cmpsl
ds
cmp
jne
pushf
jne
hlt
jne
clc
or
lret
and
xchg
cld
cld
cld
lea
lret
xor
cld
cld
cld
call
cld
cld
cld
fisttpll
mov
cld
cld
cld
in
cmp
adc
adc
cld
cld
cld
shll
in
adc
cld
cld
cld
adc
nop
mov
xor
sbb
pop
adc
cld
cld
cld
cld
xchg
cld
idivb
lea
jge
mov
jae
dec
sti
mov
or
inc
or
cld
cs
pushl
ret
cmp
sbb
or
jmp
adc
or
or
ds
cld
ja
cld
jae
jae
inc
or
or
into
cmp
pop
inc
or
or
shll
xor
jnp
add
or
jae
or
hlt
insb
mov
rep
mov
add
mov
je
clc
insb
mov
jl
add
mov
or
or
or
add
stc
xorb
cld
inc
mov
jbe
push
jne
or
dec
jbe,pn
add
or
or
mov
mov
mov
add
sub
push
cld
inc
mov
jbe
push
int
jbe
add
add
or
std
ds
jbe
add
insb
mov
or
cld
cld
je
push
int
jbe
add
mov
int
jbe
push
jbe
add
insb
mov
jl
add
pop
cmpsl
cmp
jne
stos
je
or
cmp
hlt
insb
mov
cld
cld
cld
pop
hlt
insb
mov
rep
mov
out
hlt
insb
mov
clc
insb
mov
or
cld
cld
pop
rep
mov
hlt
insb
mov
insb
mov
int
pop
rep
mov
insb
mov
out
hlt
insb
mov
insb
mov
rep
mov
je
clc
insb
mov
hlt
insb
mov
clc
insb
mov
out
rep
mov
clc
insb
mov
or
cld
cld
je
pop
int
jbe
pop
jbe
clc
insb
mov
je
or
or
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jno
mov
lea
mov
lea
mov
mov
mov
xchg
mov
xchg
lea
xchg
mov
mov
xchg
dec
dec
movl
cmp
jl
mov
mov
mov
dec
dec
inc
dec
jne
lea
dec
lea
mov
mov
xchg
mov
mov
lea
mov
xchg
dec
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jno
lea
mov
lea
mov
xchg
inc
dec
lea
dec
inc
mov
mov
xchg
xchg
mov
mov
dec
dec
je
xchg
mov
mov
call
mov
cmpl
je
mov
xchg
lea
lea
mov
mov
lea
lea
mov
xchg
lea
inc
mov
cmp
je
mov
subb
mov
cmp
ja
mov
mov
mov
mov
inc
dec
dec
jne
mov
mov
mov
mov
mov
mov
inc
dec
mov
xorb
cmp
jno
lea
mov
lea
mov
xchg
inc
dec
lea
dec
inc
mov
mov
xchg
xchg
mov
mov
dec
dec
je
xchg
incl
mov
cmp
jne
cmp
je
xchg
mov
mov
mov
lea
mov
mov
mov
dec
xchg
xchg
mov
mov
xchg
xchg
inc
dec
mov
call
mov
xchg
lea
lea
mov
mov
lea
lea
mov
xchg
lea
inc
mov
push
mov
push
call
cmpl
je
mov
push
call
mov
xchg
lea
lea
mov
mov
lea
lea
mov
xchg
lea
inc
mov
cmp
ja
mov
mov
mov
mov
inc
dec
dec
jne
mov
mov
mov
mov
mov
mov
inc
dec
cmp
jp
mov
mov
mov
mov
mov
mov
mov
dec
je
xchg
inc
dec
xchg
mov
mov
mov
lea
inc
inc
dec
push
mov
push
call
mov
pop
ret
push
mov
add
cmp
jp
mov
mov
mov
mov
mov
mov
mov
dec
je
xchg
inc
dec
xchg
mov
mov
mov
lea
inc
inc
dec
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
cmp
jl
xchg
lea
mov
lea
lea
mov
lea
mov
xchg
lea
mov
lea
dec
inc
movb
mov
cmp
ja
mov
mov
mov
mov
inc
dec
dec
jne
mov
mov
mov
mov
mov
mov
inc
dec
mov
mov
pop
ret
lea
push
mov
add
mov
xchg
lea
lea
mov
mov
lea
lea
mov
xchg
lea
inc
call
call
call
test
jne
mov
jmp
movw
cmp
jno
mov
lea
lea
dec
inc
xchg
mov
mov
mov
mov
xchg
xchg
xchg
mov
mov
xchg
dec
inc
call
lea
mov
pop
ret
mov
push
mov
add
mov
xchg
lea
lea
mov
mov
lea
lea
mov
xchg
lea
inc
cmp
jl
xchg
lea
mov
lea
lea
mov
lea
mov
xchg
lea
mov
lea
dec
inc
push
call
mov
call
cmp
jl
mov
mov
mov
dec
dec
inc
dec
jne
lea
dec
lea
mov
mov
xchg
mov
mov
lea
mov
xchg
dec
mov
pop
ret
jne
dec
add
add
add
add
add
add
add
add
jae
mov
cmp
je
xchg
mov
mov
mov
lea
mov
mov
mov
dec
xchg
xchg
mov
mov
xchg
xchg
inc
dec
call
call
movl
mov
mov
mov
push
mov
push
call
mov
cmp
ja
mov
mov
mov
mov
inc
dec
dec
jne
mov
mov
mov
mov
mov
mov
inc
dec
call
mov
mov
mov
mov
mov
push
mov
push
call
cmp
jl
xchg
lea
mov
lea
lea
mov
lea
mov
xchg
lea
mov
lea
dec
inc
movl
mov
push
call
cmp
jl
mov
mov
mov
dec
dec
inc
dec
jne
lea
dec
lea
mov
mov
xchg
mov
mov
lea
mov
xchg
dec
movl
mov
mov
mov
push
mov
push
call
cmp
je
xchg
mov
mov
mov
lea
mov
mov
mov
dec
xchg
xchg
mov
mov
xchg
xchg
inc
dec
call
mov
mov
mov
mov
mov
push
mov
push
call
cmp
jp
mov
mov
mov
mov
mov
mov
mov
dec
je
xchg
inc
dec
xchg
mov
mov
mov
lea
inc
inc
dec
movl
mov
mov
mov
push
mov
push
call
cmp
jno
mov
lea
lea
dec
inc
xchg
mov
mov
mov
mov
xchg
xchg
xchg
mov
mov
xchg
dec
inc
movl
mov
mov
mov
push
mov
push
call
cmp
jno
lea
mov
lea
mov
xchg
inc
dec
lea
dec
inc
mov
mov
xchg
xchg
mov
mov
dec
dec
je
xchg
call
mov
mov
mov
mov
mov
push
mov
push
call
cmp
jno
mov
lea
mov
lea
mov
mov
mov
xchg
mov
xchg
lea
xchg
mov
mov
xchg
dec
dec
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
cmp
ja
mov
mov
mov
mov
inc
dec
dec
jne
mov
mov
mov
mov
mov
mov
inc
dec
movl
mov
mov
mov
push
mov
push
call
cmp
jl
xchg
lea
mov
lea
lea
mov
lea
mov
xchg
lea
mov
lea
dec
inc
movl
mov
push
call
cmp
jl
mov
mov
mov
dec
dec
inc
dec
jne
lea
dec
lea
mov
mov
xchg
mov
mov
lea
mov
xchg
dec
mov
mov
mov
mov
mov
push
mov
push
call
cmp
jno
mov
lea
lea
dec
inc
xchg
mov
mov
mov
mov
xchg
xchg
xchg
mov
mov
xchg
dec
inc
call
call
movl
mov
push
call
cmp
jno
lea
mov
lea
mov
xchg
inc
dec
lea
dec
inc
mov
mov
xchg
xchg
mov
mov
dec
dec
je
xchg
mov
mov
mov
mov
mov
push
mov
push
call
cmp
jl
mov
mov
mov
dec
dec
inc
dec
jne
lea
dec
lea
mov
mov
xchg
mov
mov
lea
mov
xchg
dec
call
mov
mov
mov
lea
call
cmp
jno
lea
mov
lea
mov
xchg
inc
dec
lea
dec
inc
mov
mov
xchg
xchg
mov
mov
dec
dec
je
xchg
ret
add
xor
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
cmp
aaa
ss
add
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
xor
xor
xor
aaa
add
add
xor
xor
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
add
add
add
add
add
add
add
xor
xor
add
cmp
xor
cmp
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lea
xchg
add
mov
or
cmp
lret
fnstcw
jl
xor
in
add
inc
call
mov
stos
add
not
pop
add
push
daa
lahf
sub
mov
or
loop
push
add
jmp
xor
iret
add
jl
cmpsb
in
push
sbb
fistps
bound
inc
add
add
repz
int3
sbb
add
daa
jle
inc
shlb
in
add
push
addl
add
iret
add
pop
push
add
rorb
push
add
fnstenv
add
sub
cmpsl
cmp
mov
and
lds
push
lock
add
or
xchg
inc
incb
mov
dec
xor
xorl
dec
fdivr
stos
arpl
leave
jb
in
add
and
dec
add
jo
sub
add
add
add
inc
xor
ss
add
push
inc
add
es
pop
adc
lcall
xchg
push
and
shrl
mov
adc
orb
je
push
popl
test
add
leave
dec
divl
mov
cli
adc
insb
inc
in
lret
add
dec
inc
add
adc
inc
sub
jle
testl
add
add
add
xlat
lcall
add
mov
mov
bound
xchg
add
sub
imul
sti
add
add
ret
pusha
add
sub
dec
fldl
das
lahf
push
sub
dec
add
xchg
add
rorb
pop
add
fs
add
add
jno
pop
test
add
xor
or
lret
mov
add
and
lea
add
add
add
outsb
xchg
lods
mov
rorl
popa
flds
mov
test
xchg
into
popl
sarb
or
dec
add
mov
pop
xor
mov
call
add
push
int
add
mov
lds
out
add
lock
into
add
cmp
sti
jne
add
sub
add
bound
andl
jo
aas
sbb
mov
xor
pushf
clc
mov
pop
cld
xchg
inc
mov
add
and
cmpsl
sub
inc
adc
add
hlt
adc
lods
add
mov
and
data16
adc
sub
hlt
roll
divb
insb
adc
add
add
frstpm(287
cmpsb
cwtl
out
add
add
fldcw
add
fwait
add
xchg
add
repnz
loop
add
add
xor
or
add
add
add
in
add
out
add
inc
add
addb
in
and
xchg
push
add
fildl
add
xlat
pop
out
inc
fwait
sbb
lret
out
add
add
imul
mov
ja
pop
movsb
pop
add
xor
insl
add
push
add
add
pop
add
pushf
xlat
mov
push
pop
sbb
ljmp
daa
add
push
mov
mov
mov
flds
sbb
mov
inc
repz
add
add
add
add
in
add
jbe
add
or
add
mov
add
xor
aam
add
pop
mov
shlb
add
or
sti
lcall
jnp
add
lahf
cmc
add
add
jo
xchg
push
aad
add
xor
cltd
mov
dec
cmpsl
add
out
daa
pop
sti
pop
rolb
dec
cmp
shr
xor
and
lret
fcmovb
xchg
mov
nop
insb
negb
mov
je
cmc
mov
pop
xor
xchg
outsl
sbb
lods
loop
popa
and
jge
fs
or
jb
mov
iret
xchg
adc
inc
xchg
sbb
mov
pop
test
mov
out
xchg
or
mov
gs
adc
sub
mov
adc
lret
das
xor
push
push
xchg
inc
cmp
fcmovnbe
cld
imul
clc
pop
in
cmc
pop
push
sti
int
test
notb
jo
push
mov
or
pop
cmpsb
mov
daa
lret
jbe
les
enter
xor
leave
nop
shr
in
mov
cmc
pop
xchg
int
adc
rcrb
movsb
pop
ss
popa
inc
cmp
enter
lahf
jb
testl
jle
xlat
jecxz
mov
testb
sbbl
inc
pushf
xchg
orl
test
push
mov
inc
loopne
aas
pop
imulb
mov
stos
mov
adc
push
in
shl
std
mov
insl
push
cmc
stc
dec
in
int
fisubrl
dec
icebp
push
cld
inc
pop
sub
rolb
sub
xor
mov
arpl
mov
pop
sub
jae
aam
rorl
ret
lods
pop
xlat
push
xchg
push
fstpl
xchg
xchg
sub
add
int3
pop
cmpsb
popa
cmpsl
out
test
mov
les
scas
adc
xchg
inc
xor
push
mov
dec
movhps
mov
cltd
xchg
mulb
mov
les
dec
fsts
sub
je
add
ja
sahf
mov
shrl
jnp
stos
cmpsb
or
push
mov
sbb
into
adc
xor
lret
imul
inc
adc
fsubrs
push
fsubr
mov
and
mov
scas
xor
dec
and
es
sub
ret
mov
dec
mov
xor
push
bound
les
mov
mov
xchg
cltd
xchg
leave
out
push
fwait
sub
les
jp
leave
mov
mov
mov
jle
in
adc
push
xchg
dec
pop
adc
and
sub
xorl
push
and
aas
popf
mov
mov
pushf
in
xor
and
dec
fwait
jnp
add
scas
cmpsl
mov
push
jbe
popa
adc
or
pop
inc
add
mov
aad
mov
in
test
fsubrs
cli
xor
dec
adc
and
dec
imul
sbb
shlb
sub
dec
add
pop
clc
hlt
and
mov
outsl
repz
adc
push
aaa
in
cmp
mov
fadds
or
mov
jl
push
pop
push
and
in
icebp
ret
sbb
and
mov
cmp
imul
fnstcw
enter
daa
ficoml
lea
popa
add
xchg
dec
mov
movsl
mov
lret
and
shlb
and
lea
push
loopne
inc
je
pop
repz
dec
pop
mov
sbb
pop
ljmp
sub
sub
dec
bound
xor
outsb
loopne
adc
mov
cmp
sbbb
sbb
push
jo
in
dec
lea
lahf
ljmp
ss
sub
add
inc
inc
mov
ja
test
rclb
fildll
sub
mov
lahf
xor
push
rcrb
mov
pop
adc
push
xor
cmp
mov
ror
pushf
inc
out
rcrl
stos
sbb
ds
into
xor
inc
cmc
js
popf
xor
adc
bound
stc
jle
mov
sub
rorl
lods
jmp
mov
mov
and
cmp
in
or
scas
lret
dec
cmc
shlb
mov
sbb
leave
adc
inc
popa
imul
dec
add
out
sbb
mov
xlat
cmp
int
sbb
enter
in
jl
xor
pop
lret
cltd
shll
mov
dec
mov
mov
les
repz
mov
sub
in
push
mov
pop
inc
test
pushf
xchg
inc
dec
jmp
addr16
shlb
inc
aas
dec
cmpl
js
jbe
inc
jmp
je
adc
jno
cmp
les
lahf
std
sub
or
lret
push
rorb
mov
sti
sbb
cmp
pushf
mov
mov
lock
mov
int3
adc
and
sbb
shll
insl
add
pop
fldenv
loop
jg
sahf
loope
cld
outsb
pop
push
mov
cmp
mov
pop
adcb
sub
or
ret
cmp
in
push
push
sti
xor
clc
jns
repz
imul
ljmp
cmc
and
adc
cmp
push
mov
pop
pcmpeqd
bound
push
test
dec
mov
mov
xlat
dec
push
lods
test
mov
in
push
out
rcl
add
pop
pop
pushf
js
stos
xchg
xchg
pop
push
bound
repnz
es
mov
xor
adc
xor
jno
mov
mov
mov
imul
insl
dec
push
loop
inc
imul
outsb
dec
cmpsb
repz
jne
push
pop
mov
out
insb
out
imul
sub
lret
out
in
lea
xchg
call
sub
fimuls
mov
mov
jp
and
mov
adc
mov
sti
cli
ret
enter
mov
imul
jmp
loopne
pop
push
out
or
pop
mov
out
xchg
popf
scas
jmp
mov
fistl
stos
mov
xchg
pop
insb
push
test
scas
or
push
mov
daa
add
insl
into
in
ret
inc
pop
jns
insb
inc
xchg
fs
jae
rcrl
inc
lods
pop
scas
or
lods
dec
inc
add
or
popf
and
xchg
ja
cs
cmp
imul
fisubrs
mov
ljmp
push
repz
jmp
sahf
arpl
in
jbe
movsb
sarl
insb
sbb
or
stos
adc
xor
add
test
mov
pop
ror
push
push
aas
es
jo
mov
scas
addl
cmp
in
lods
movsb
popf
sbb
push
fadd
mov
in
clc
repz
daa
or
ljmp
idivl
cmpsb
movsl
mov
out
mov
xchg
xchg
push
hlt
xor
push
and
mov
mov
negb
xchg
leave
js
icebp
std
pop
mov
push
mov
loope
mov
sub
jge
cmp
xor
inc
pop
xchg
jnp
sub
movsl
orb
imul
sbb
xor
xor
or
dec
xchg
push
int
lock
cmp
pop
rorl
sub
jo
sub
inc
lock
out
mov
add
test
push
cmpsl
clc
mov
lahf
cmpsl
mov
push
dec
and
xor
cmp
inc
out
idivl
xor
vphaddbw
jmp
incb
into
pop
sbb
xor
adc
loop
mov
xor
nop
adc
mov
data16
shrd
and
out
and
mov
pusha
and
das
stc
or
aaa
cmp
pop
int
ficomps
sub
pop
pop
adc
dec
cmp
or
imul
cmp
add
mov
inc
sbb
sbb
lea
jbe
stos
mov
lret
rcl
sti
sub
mov
sub
pushf
js
sbb
mov
fsts
pop
repz
lea
sbb
jns
div
mov
pushf
cmp
sbb
call
outsb
inc
inc
inc
sbb
inc
pop
dec
icebp
aas
inc
mov
push
dec
mov
in
jecxz,pt
inc
hlt
testb
pusha
std
iret
sbb
mov
outsb
pop
mov
pop
cmpl
mov
xor
adc
das
jno
insl
mov
subl
insl
loop
subl
es
shll
in
jle
dec
fldt
cmpsl
fcoms
mov
icebp
jne
mov
cltd
outsl
cmpsl
lret
scas
das
jb
fadds
and
movsl
xor
pop
mov
clc
popa
sub
inc
addr16
test
ret
lret
push
sbb
xchg
fucomp
lcall
stos
xor
ljmp
cmpsl
lods
xchg
mov
je
out
rcl
cli
push
imul
inc
cltd
add
test
mov
ret
dec
fistps
and
xchg
push
and
add
push
pop
inc
dec
lret
out
push
add
cmp
or
sbb
rcrb
mov
pop
add
mov
enter
push
repnz
and
xchg
ja
js
dec
or
add
mov
push
fwait
adc
cmp
and
mov
mov
aam
aas
dec
jns
dec
cmp
xchg
aaa
jecxz
out
mov
xchg
or
and
ret
mov
mov
orb
cmpsb
pusha
in
lret
cltd
pusha
sub
fisttps
aas
add
push
jae
xchg
fcom
into
orl
push
popf
jno
mov
sbb
aas
stos
das
fdivr
and
xchg
sub
sti
jg
insl
add
adc
pop
iret
int3
cwtl
and
fldenv
inc
lahf
sbb
jae
add
fmull
mov
sbb
ficoml
xchg
xchg
into
test
imul
fmulp
pop
pop
mov
shlb
mov
hlt
xor
leave
cmc
mov
pop
arpl
hlt
cmp
dec
cmpb
jne
repz
and
push
and
es
add
call
sbb
push
and
out
xor
mov
outsb
or
cmp
xchg
inc
movsb
sub
loopne
sub
jl
fisttps
stc
enter
daa
fadds
cmp
xchg
pop
jl
or
ds
movsl
ret
push
movsb
and
mov
xchg
push
lret
insb
jge
push
jmp
cmp
jns
sbb
xlat
push
js
sbb
pop
lret
push
hlt
insl
loope
cld
xchg
sub
cmp
pop
ret
outsb
cmpsb
cld
cmpsb
adc
push
js
add
xchg
sahf
outsb
mov
xor
or
int
rcrl
sub
add
inc
shrl
lcall
fcompl
sub
sahf
inc
mov
mov
inc
or
sarl
push
xor
jae
push
mov
xor
xor
cmp
add
in
idivl
push
cmp
cmpb
rorl
mov
sbb
or
cli
push
pop
cmc
push
popf
mov
outsl
mov
xor
in
or
sub
adc
pop
pop
or
lods
mov
xchg
cmp
mov
loopne
fstpt
xor
fsubrs
mov
mov
gs
loopnew
xchg
cmp
adc
pop
repz
jle
add
add
xchg
mov
sbb
add
xlat
mov
sub
inc
mov
fidivl
loope
pop
adc
daa
clc
loopne
lods
xchg
fmuls
push
inc
arpl
or
movsb
xor
pause
divl
xor
pop
push
call
aas
add
stos
adc
adc
inc
pushf
out
dec
jmp
jmp
pop
pop
test
inc
into
faddl
popa
enter
fnstenv
jge
dec
xor
je
sbb
jecxz
hlt
inc
testb
std
jbe
mov
push
icebp
cwtl
mov
or
adc
push
mov
mov
inc
xchg
mov
les
lock
mov
das
push
or
push
mov
es
call
dec
adc
cmpsl
xlat
push
lods
mov
dec
cmp
les
lret
sbb
fstpt
inc
xchg
pop
rclb
shlb
stos
dec
sub
and
rcrb
ret
pop
std
push
push
fldt
mov
out
daa
mov
ljmp
jbe
icebp
xor
mov
xlat
or
xchg
sbb
add
inc
sbb
xor
sub
mov
cmp
daa
dec
xchg
xchg
dec
cmp
sahf
test
adc
imul
shrl
in
lcall
iret
test
pop
loope
ljmp
js
or
add
mov
sbb
cmp
sahf
mov
fucomip
add
xor
dec
cld
lea
inc
xchg
sbb
or
iret
jb
inc
mov
dec
insb
jae
jne
xchg
cwtl
mov
popf
push
out
daa
xor
jns
jo
in
ss
xchg
xchg
out
mov
outsl
or
ds
cmc
negb
mov
gs
ja
in
cmp
pusha
movl
xchg
lds
jmp
mov
lds
insb
add
mov
pop
movsl
imulb
shlb
cmp
sbb
mov
adc
sbb
iret
sub
ret
test
out
xchg
or
jp
inc
mov
dec
or
sbb
push
inc
dec
jecxz
add
and
sbb
imul
fidivs
sbb
rolb
mov
leave
insb
cld
cmp
add
jo
pop
inc
mov
insb
imul
popf
xor
scas
imul
into
xlat
add
mov
pop
xor
icebp
xor
push
add
xlat
mov
cmp
imul
jp
jp
lcall
enter
daa
xlat
add
jno
push
or
aad
fstpt
lea
movsl
lret
and
sbb
test
mov
cmpsb
inc
and
cmp
in
daa
cli
pop
js
fldenv
adc
es
addr16
pop
cmp
adc
outsb
or
mov
xor
arpl
adcb
jno
or
mov
push
push
hlt
adc
imul
sub
and
nop
jle
push
fcmovnb
jge
cmp
sahf
jns
mov
jmp
sbb
mov
xlat
mov
ljmp
and
int
fnsave
cmp
mov
add
lret
xchg
shl
xchg
xchg
sbb
fisttpll
inc
xor
fldcw
sbb
xchg
stc
mov
jne
adc
ret
xchg
lods
mov
fs
out
pop
jne
push
pop
mov
cmp
add
or
xchg
cmpsb
xor
cli
pop
loopne
cmp
pop
aaa
push
cmp
scas
mov
imul
adc
add
jmp
sbb
cmp
pmovmskb
or
sub
mov
mov
mov
andb
nop
mov
inc
jbe
and
add
les
jle
xor
mov
mov
in
adc
out
pushf
xchg
adc
jmp
shl
pop
ret
inc
push
adc
inc
nop
mov
jb
mov
xorl
sbb
in
std
sbb
pop
xor
adc
subl
out
fcmovnb
cmc
rorb
lahf
hlt
lock
mov
xlat
mov
icebp
pop
jecxz
stc
adc
shll
andl
insl
mov
inc
test
mov
and
data16
out
pop
out
lret
mov
push
fs
mov
fbld
rolb
nop
popf
sub
mov
leave
ret
call
mov
fnstsw
loope
clc
sub
fcoml
cwtl
add
mov
mov
cmp
inc
push
pop
stos
mov
xchg
inc
jae
fwait
or
cltd
jo
push
test
iret
rolb
lahf
push
push
test
fwait
cltd
xchg
cmp
sbb
mov
pop
popf
data16
aam
push
dec
xchg
cltd
add
ja
call
xor
out
cmpsb
les
fnsave
sbb
out
imul
dec
ja
je
dec
out
icebp
roll
movsl
or
lods
rcrb
dec
mov
test
out
push
mov
bound
push
in
or
xchg
aad
lret
out
sub
sub
mov
mov
jp
outsb
and
jns
pop
mov
dec
or
inc
cmp
in
adc
ffreep
sti
or
cwtl
icebp
add
xchg
outsb
testl
and
fwait
mov
cwtl
xchg
mov
and
ja
insb
push
xor
loope
ljmp
xchg
lods
adc
xor
mov
and
pop
push
push
test
pop
jae
xor
inc
mov
daa
or
xchg
cmp
inc
jle
pop
fidivl
hlt
loope
call
icebp
add
adc
lds
inc
mov
repnz
hlt
dec
cmp
jbe
cld
lcall
leave
cmp
call
lahf
movl
dec
fisubs
pop
pop
adc
call
xchg
inc
jo
arpl
and
repnz
and
push
leave
and
in
lods
or
in
daa
sbbb
adc
pop
xlat
jl
xchg
inc
xchg
add
mov
mov
sub
jno
insl
xchg
sub
pop
subl
lcall
pop
dec
add
js
sub
pop
dec
cmpsb
stos
push
push
loope
idivl
xchg
or
cmp
sub
outsb
insb
sbb
adc
or
xchg
pop
outsb
xchg
andb
add
sbb
xor
jge
push
push
push
mov
rorb
xchg
push
ja
pop
jb,pt
lcall
cmp
sub
add
test
sub
jg
out
mov
outsb
mov
mov
and
imul
jecxz
cmp
ja
divw
pop
jmp
mov
or
sbb
mov
cmc
xchg
or
xor
aad
outsl
jbe
imul
pop
fwait
mull
pop
adc
ret
hlt
pop
icebp
jl
xchg
aaa
out
mov
jge
in
ss
popa
jl
andb
pop
cmp
das
cmc
in
push
loop
adc
negl
add
fwait
adc
mov
movl
popf
xor
in
or
fdivr
cmp
ljmp
mov
pop
dec
cmp
fnstcw
sbb
les
imul
ss
dec
int3
dec
arpl
push
or
cmp
insb
aas
adc
or
pushf
cmp
jg
pop
mov
inc
stos
ret
imul
ror
jb
das
jecxz
pop
pop
xchg
jcxz
and
shlb
pop
cwtl
mov
mov
lret
add
imul
div
sahf
mov
fwait
sbb
push
test
das
push
sub
dec
scas
mov
test
shll
popf
fists
lcall
push
mov
cli
and
cld
sbb
sub
push
pop
cmp
lods
xchg
test
fs
add
inc
push
popa
sub
frstor
cmpsb
clc
gs
push
xchg
and
xchg
popa
sbb
lods
cmp
popf
sbb
push
cli
push
orl
cltd
add
scas
rcll
out
test
mov
loop
push
push
mov
xchg
sbb
sbb
mov
push
stos
push
jno
push
out
push
lret
add
xchg
int
jmp
inc
push
sbb
pop
shlb
and
call
ja
cmp
inc
lds
or
pop
es
mov
ret
repz
fs
pushf
enter
data16
clc
and
push
in
xor
xchg
and
inc
out
adc
sub
stos
aam
addr16
cltd
lods
mov
jl
mov
mov
jae
push
mov
testb
std
mov
call
jmp
cmp
pop
cmpl
push
push
repnz
imul
or
mov
das
and
bound
nop
lods
fs
xchg
stos
mov
adc
pop
sub
jmp
shrd
aas
mov
shlb
jae
xor
or
adc
sti
inc
std
lods
imul
jae
xchg
shrl
dec
sbb
inc
xchg
imul
aad
pop
ja
sarb
fwait
repnz
cmp
leave
pop
lahf
and
lcall
jbe
add
cwtl
push
cwtl
sbb
pop
or
and
lret
inc
add
aaa
add
dec
push
lret
jmp
out
mov
add
and
adc
cmp
push
movsb
leave
push
cmpsb
push
sbb
jmp
mov
bound
daa
aad
cmp
aam
out
je
mov
xchg
mov
and
les
push
inc
lret
push
jns
push
dec
in
inc
aas
aam
ret
pop
jne
mov
pop
xchg
sbb
sub
mov
outsb
iret
cwtl
xor
dec
jo
shl
lods
mov
xorb
xor
and
xor
es
cmp
movsb
sub
pop
xchg
pop
mov
out
push
mov
adc
sbb
imul
test
push
arpl
cmp
add
dec
jae
and
lret
arpl
or
xor
pop
divl
cwtl
lret
ret
inc
push
mov
test
sbb
iret
xor
pop
push
jmp
imul
outsl
push
inc
inc
xlat
movsl
stc
adc
fs
ret
dec
sti
xlat
data16
sbb
sub
out
movsl
jg
je
cwtl
xor
xchg
or
cld
test
gs
insb
push
loopne
rol
jne
push
push
lcall
imul
cmp
shl
pop
sbb
mov
push
xlat
jbe
je
inc
out
mov
ja
xor
out
dec
cs
cmpsb
sub
nop
ds
loopne
cltd
jl
inc
pushf
ret
or
jo
hlt
lds
repz
mov
cmp
ds
mov
cmpsl
push
adc
fcompl
out
pop
pop
or
inc
arpl
cwtl
aas
shl
jb
xlat
fisttpl
into
adc
dec
jecxz
pushf
push
notb
lock
std
imul
sub
inc
mov
dec
into
adcl
mov
sub
lock
rolb
sub
mov
or
bound
jecxz
jno
cmpsl
aam
popa
mov
rorl
cld
inc
adc
mov
pop
pop
mov
sbb
idivl
sub
xchg
pop
aam
fmuls
push
and
fisttpll
cld
add
jle
fbld
jno
lods
xor
lds
add
xor
or
sqrtps
lret
add
stos
mov
test
in
push
xchg
xchg
dec
insl
jmp
jge
cld
arpl
sbb
jb
shll
and
xchg
decl
in
das
add
mov
pop
or
andb
add
xor
aad
ja
jg
dec
aad
inc
inc
pop
or
fwait
ror
mov
jne
jecxz
mov
mov
cltd
bound
mov
in
stos
cmp
jae
int
and
sub
cmpsb
cwtl
lret
addr16
cmp
js
mov
mov
mov
es
jle
mov
punpcklbw
sbb
xchg
jae,pt
jmp
add
xchg
or
cmp
mov
dec
popf
jb
hlt
mov
push
add
stos
sti
sub
mov
sub
sbb
stc
push
or
pop
sub
lods
sahf
mov
dec
ljmp
mov
inc
lret
xor
flds
push
xchg
push
jl
or
sbb
jmp
sub
xor
shrl
pop
push
pop
lds
loope
mov
inc
incb
hlt
in
jne
inc
aam
jbe
jnp
jge
sub
filds
data16
repnz
or
bound
int3
and
cs
mov
jl
xor
sete
scas
faddl
and
movsb
xchg
movsb
push
pop
insl
push
addr16
cmpsb
and
in
jnp
fcmove
clc
cmp
aam
mov
jno
mov
jl
push
adc
mulb
aam
filds
rcrb
adc
pop
loope
inc
into
jp
test
pop
pop
pushf
mov
out
pop
push
push
push
cli
mov
sub
loopne
cmp
pop
outsb
xor
mov
rol
jno
popl
push
sbb
jp
sbb
jl
xor
xchg
pop
insl
sub
mov
fiaddl
cmp
xor
test
cld
push
sub
lods
sahf
bound
cmc
test
push
xor
mov
mov
fwait
mov
pushl
into
inc
cmpsb
fwait
sarl
in
std
popa
divl
lahf
push
shll
outsb
sbb
int
into
xchg
daa
cmc
and
xor
rdmsr
outsl
xor
dec
loop
and
stc
enter
push
out
adc
test
lods
push
xor
and
mov
aad
cmpsl
jmp
xor
cwtl
jne
pop
pop
mov
sahf
xchg
aas
add
pop
xchg
push
dec
adc
hlt
jmp
adc
int
add
inc
and
sbb
in
jno
xlat
mov
xchg
sub
fs
sti
xchg
fcmove
cs
adc
aad
adc
rorl
pop
mov
xchg
neg
cmpsl
movsb
data16
shl
cld
repz
out
ret
cmp
repnz
cmp
cmp
xchg
xchg
pusha
adc
mov
pusha
jmp
and
stos
bound
loope
jmp
pusha
imull
dec
or
adc
jecxz
pop
sbb
push
mov
ret
cwtl
cmp
fs
pushf
pusha
mov
pop
lea
sbb
dec
fistl
mov
xchg
shl
mov
mov
jb
push
mov
pop
rorl
sarb
in
nop
insl
outsl
insl
jno
ret
cmpsl
shll
mov
test
fs
jo
sbb
mov
arpl
mov
cmp
cltd
sarb
sub
add
aam
decb
ret
xchg
xchg
out
lods
shrb
push
repz
movsb
lods
popf
cmp
mov
arpl
sbb
xor
fisttpl
mov
mov
cltd
adc
push
xor
aam
xor
jnp
push
sbb
jnp
pop
sahf
enter
notl
xor
inc
add
enter
daa
adc
jmp
xor
in
mov
inc
push
xchg
mov
lret
dec
adc
dec
mov
inc
repz
fwait
add
cwtl
dec
clc
loop
jne
loope
repz
push
mov
or
sbb
adcl
leave
add
or
int3
jp
or
mov
pop
mov
mov
inc
sub
add
out
pusha
xor
fbld
xor
jmp
iret
xor
xlat
push
js
cld
popf
cltd
insb
cmpsb
mov
push
jle
stos
outsb
add
and
mov
pop
jnp
dec
sub
pop
xchg
push
addr16
js
cmpsl
enter
scas
into
pop
ret
insl
jne
mov
jae
cli
mov
mov
sahf
mov
add
inc
sti
mov
sahf
xchg
cmp
inc
imul
lods
fdivrp
mov
lds
into
mov
xchg
repz
hlt
xor
mov
push
ss
push
pop
sbb
jecxz
or
dec
mov
int3
or
iret
xchg
add
jo
lret
mov
inc
push
cmp
push
movsb
filds
jb
mov
lea
bound
xor
rcrl
jno
xchg
adc
dec
xchg
push
inc
sbb
xlat
movsl
out
in
cli
fisttps
dec
pusha
inc
push
out
jne
aas
push
or
push
inc
pop
gs
dec
arpl
outsb
jb
jns
jno
add
mov
subl
jge
cli
push
or
outsl
xchg
adc
popf
dec
enter
pop
sbb
je
mov
repnz
sub
dec
jbe
push
pop
sub
pop
mov
sub
jmp
leave
lcall
mov
jae
and
daa
mov
sahf
add
mov
lahf
jg
popa
and
mov
jecxz
xchg
ja
leave
ss
xchg
sub
test
sub
hlt
and
lret
int
ds
mov
pop
sbb
imul
cmc
jmp
dec
rep
adc
push
loop
sahf
fwait
stc
jg
xor
adcl
out
daa
lods
cmp
add
mov
lahf
cli
fcmovu
lahf
xor
int
xor
or
ja
inc
scas
lea
outsl
clc
loopne
xchg
add
sahf
push
adc
sbb
imul
mov
add
out
les
sub
subl
xchg
fwait
mov
dec
sbb
insb
cs
ja
aad
or
push
cmp
pop
movsl
or
aas
inc
dec
lea
xor
call
mov
cmp
pushf
imul
dec
cmp
inc
jno
mov
in
adc
jb
shl
test
in
jecxz
pusha
negb
std
mov
and
lret
mov
and
add
cmpsb
fildl
inc
fdivl
pop
sub
movsb
mov
int
jnp
and
adc
insl
push
jl
dec
mov
xor
mov
jg
lret
cld
fwait
pop
dec
push
and
and
inc
pop
mov
pop
lods
psrld
mov
mov
jns
ret
and
pusha
push
stos
dec
inc
fst
sbb
notb
fs
jmp
pop
addr16
mov
pop
jb
jl
inc
push
mov
les
out
mov
test
sbb
pusha
roll
dec
cmp
add
xchg
xchg
sahf
sbb
ss
xor
bound
inc
stos
push
loopne
push
xlat
cmp
add
jecxz
and
outsb
pop
xor
xchg
mov
mov
mov
ja
fwait
cmp
mov
inc
mov
push
or
insl
mov
dec
fneni(8087
shll
or
mov
xor
bound
les
cmpsl
fwait
xchg
sub
cld
or
int3
jp
push
mov
aad
jg
inc
insl
fwait
mov
pop
jle
fdivs
pusha
into
clc
mov
xchg
in
cmp
xchg
lcall
push
cmp
icebp
mov
xchg
jle
stos
loope
xchg
and
fisubrs
enter
outsb
scas
mov
fdivrl
iret
push
stos
fadd
dec
dec
sbbb
in
loope
pop
jae
les
rcrl
push
jp
movsl
fiaddl
popf
inc
sbb
inc
jns
cli
rorb
mov
jmp
mov
out
push
mov
sub
jbe
leave
imul
adc
push
fisttpl
fsubr
mov
int3
clc
jno
pop
sbb
push
je
jge
pop
mov
repz
lcall
cmp
add
movsb
push
arpl
push
test
in
dec
mov
dec
daa
shrb
aad
imul
dec
add
mov
movsl
in
sahf
mov
xchg
and
mov
cmp
inc
in
xchg
push
or
dec
pop
ljmp
pop
inc
adc
push
xor
and
pop
iret
cmp
enter
jmp
add
xor
inc
sbb
pop
sub
inc
sub
xor
push
and
bound
int
daa
jmp
pop
cmp
lds
mov
fcompl
inc
sub
sahf
test
rolb
jo
es
cmp
mov
mov
movsl
shll
xchg
ss
mov
arpl
pusha
divl
pop
pop
rcl
push
mov
jae
sbb
stos
into
dec
fildl
xor
outsl
repnz
loop
dec
in
outsb
dec
fs
sub
adc
cmp
push
clc
lods
and
mov
sub
mov
sar
or
pmulhuw
push
dec
or
cltd
in
out
jbe
ret
pop
sarb
pop
adc
jns
imul
in
repz
add
xchg
sbb
push
sbb
arpl
xor
cmp
fwait
idivl
rclb
fsubr
mov
lds
jno,pn
xor
sar
rcll
mov
cmp
fsts
push
dec
repz
rol
inc
int
lea
pusha
call
cmp
pop
fcoml
push
pushf
jmp
xlat
jecxz
icebp
or
clc
pop
xchg
inc
pop
js
aas
sahf
sub
jb
add
and
push
jecxz
test
neg
gs
std
pusha
jge
cwtl
mov
push
mov
jge
mov
sahf
push
sbbl
insb
mov
mov
push
addr16
dec
das
mov
mov
mov
mov
insb
shrl
push
insl
cmp
push
xchg
jp
xor
push
test
cld
cmp
mov
jne
int
cwtl
and
loop
sbbl
or
shlb
sbb
sub
dec
mov
push
insl
cltd
sbb
es
push
add
jl
xlat
xchg
xchg
sbb
lods
jae
and
sub
sub
data16
movd
aad
cli
popf
mov
xorl
test
insb
or
arpl
shrl
jns
inc
sbb
fs
sarl
sub
or
jp
jae
jp
sbb
xchg
pop
jmp
daa
xor
push
sub
or
mov
int
jp
sub
inc
cmc
insb
ja
outsl
cmc
dec
scas
jno
inc
and
mov
fwait
pop
rcl
mov
mov
mov
mov
bound
jns
rcrl
adc
xchg
pusha
push
sub
stos
cmp
sub
xchg
pop
popf
xor
daa
dec
sub
jno
scas
mov
pop
jle
popa
in
pop
and
fbld
xchg
mov
out
jmp
gs
fcoml
popf
sub
mov
roll
sbb
pop
jb
insb
outsb
cmp
jnp
sti
cs
and
push
cmc
xor
adc
xchg
cld
ret
lea
sub
inc
in
cmp
jae
roll
inc
fimuls
push
stc
cmpsl
test
xor
lock
xchg
test
pop
sti
fiadds
icebp
lds
jne
shlb
repnz
leave
ss
aas
hlt
ja
arpl
push
jbe
sahf
or
mov
xorl
dec
movsb
or
aas
add
push
int3
jecxz
nop
pop
dec
lock
push
push
in
ss
and
scas
jns
lcall
sub
cmc
inc
repz
push
or
cmpsb
lods
roll
jmp
daa
rol
adc
jno
inc
cmpsb
jl
mov
mov
movsl
hlt
inc
jno
xor
lahf
mov
mov
test
js
stos
inc
jnp
adc
into
imul
js
jb
pop
cmpl
push
popa
pusha
loope
ficomps
sub
fcoms
pop
sbb
outsb
pop
push
add
push
cmp
popf
dec
sti
addb
mov
pop
jb
add
addb
outsl
lea
gs
mov
sub
add
mov
fmul
dec
mov
sahf
dec
fs
test
and
xor
mov
jbe
jns
mov
outsl
push
inc
cmp
push
cld
mov
jb
gs
aaa
shrl
mov
jmp
into
das
push
cmc
ja
sub
xlat
std
outsl
rorl
lea
test
clc
dec
pushf
adc
mov
inc
mov
out
mov
push
cli
inc
iret
push
xor
sarl
sahf
or
ret
push
add
ss
push
mov
les
add
mov
aad
sahf
mov
sub
adc
and
test
cs
ret
aad
test
stos
fwait
or
push
pop
inc
call
ret
icebp
cld
insl
repz
jge
mov
fistl
pop
sahf
call
fcmovnbe
inc
pushf
xchg
push
jno
pusha
push
xor
lret
addl
pop
mov
cmp
jl
dec
jb
sbb
stc
jecxz
xor
negb
jne
std
pop
scas
icebp
cwtl
insl
lods
test
mov
int
xor
xchg
mov
mov
int
pusha
das
imul
mov
cmp
mov
sti
jl
outsb
xchg
pop
insl
and
pop
dec
mov
mov
rcrb
mov
sub
lock
subl
js
sti
mov
cltd
imul
test
imul
stc
adcb
cmpsl
frstor
or
mov
shr
dec
lcall
fdivp
lds
mov
sbb
inc
shlb
or
fdivrl
insb
sbb
xchg
dec
or
test
mull
clc
jmp
pop
rcll
sub
push
stos
cld
std
mov
sbb
dec
rolb
sbb
incl
stos
xor
sub
jo
mov
mov
adc
mov
cld
daa
aaa
ja
fisttps
or
bound
inc
and
mov
shll
inc
xor
jns
popa
loopne
mov
mov
jne
jle
xlat
or
jb
jp
std
dec
mov
out
mov
loop
cmpb
jmp
pusha
add
scas
filds
out
jmp
xor
addl
es
sar
popf
push
mov
mov
adc
fldcw
jae
adc
cmc
jnp
js
scas
test
push
cmp
pusha
adc
dec
iret
les
ret
pop
pop
push
xchg
enter
pop
inc
cwtl
stc
or
jns
je
js
mov
call
dec
test
mov
out
in
mov
sarb
cmpb
or
lods
insb
and
adc
mov
xor
jbe
call
xor
lret
sub
dec
pop
add
xor
jns
repnz
cmp
xor
jnp
subl
mov
xchg
repz
movsb
and
push
mov
lret
pop
addr16
pop
xor
inc
cmc
mov
jl
fistpl
dec
fdivrp
jecxz
adcb
inc
std
and
out
lahf
test
sub
flds
push
inc
sbb
inc
or
pushf
pop
cmp
test
sub
jns
test
loope
inc
loop
adc
les
pop
fwait
outsb
mov
sub
pop
cld
mov
adcb
hlt
sbb
addl
shlb
int
push
loop
cmp
mov
jne
mov
cmp
mov
je
jbe
hlt
pop
gs
out
pop
addl
xchg
inc
jg
add
add
add
les
ljmp
js
fcomp
js
divl
fs
lret
mov
add
mov
shr
into
adc
lock
jne
outsl
mov
repnz
dec
add
movsb
scas
mov
add
adc
or
jo
push
lods
icebp
in
mov
push
mov
cli
jae
add
out
xchg
pop
cmp
hlt
jns
sbb
sub
loopne
in
clc
pop
adc
adc
imul
pop
test
xchg
mov
pop
enter
das
xlat
mov
mov
sbb
xlat
in
mov
sti
push
shrl
aaa
push
ret
aad
jb
nop
test
loopne
sti
fistpl
flds
sti
sbb
or
mov
lea
and
orb
aaa
out
pop
inc
pop
stos
adc
int3
fstps
fwait
jbe
aaa
subl
dec
lret
fdivl
jb
daa
dec
dec
jmp
dec
pop
jecxz
add
cmp
ret
sub
stc
mov
outsl
pop
mov
mov
dec
enter
or
sub
mov
mov
push
das
dec
mov
idivb
xor
dec
cltd
jbe
icebp
pop
push
insl
or
and
cmpsl
iret
mov
cld
sbb
into
lret
xchg
pop
mov
adc
inc
and
sbb
pop
mov
mov
sub
loop
ret
rcll
push
repz
fisttpll
test
xchg
loope
ljmp
and
mov
out
xor
xchg
push
jge
push
sbb
mov
sub
int
and
icebp
sub
test
shr
pushf
fnstsw
xchg
sbb
mov
test
lea
push
jns
dec
mov
pop
dec
jecxz
stos
jmp
push
shlb
xor
jmp
mov
or
rcr
xor
jp
mov
push
sbb
mov
mov
test
dec
xchg
pop
mov
or
out
pushf
fwait
mov
xchg
pcmpeqw
cmp
out
pop
or
push
jecxz
andb
xchg
push
out
add
sub
lea
cmp
scas
mov
mov
iret
lcall
lea
push
lock
aad
pusha
lahf
in
sbb
lahf
mov
xchg
pop
mov
insb
pushf
adcl
adc
mulb
xor
cmp
and
insl
adc
mov
fistl
push
push
adc
or
iret
and
ret
push
inc
add
add
mov
and
hlt
jno
inc
idivl
xchg
fstl
sbb
mov
imul
aas
fimuls
dec
mov
pop
dec
gs
addr16
and
jb
pop
adc
arpl
movsl
jge
loop
sbb
mov
pop
add
and
mov
and
xor
imul
aaa
movsb
push
and
pushf
cmp
cmp
or
test
cmpsb
mov
clc
in
adc
daa
iret
jns
cmp
fwait
jno
incb
jl
iret
jl
dec
mov
movsl
add
and
pop
lahf
in
push
xor
test
push
mov
sbb
push
int
pop
pop
and
js
fwait
daa
pop
add
mov
loope
shl
sub
test
outsb
and
add
or
pop
es
subb
cmp
lea
jge
sub
xor
pop
int
push
mov
pop
mov
mov
xchg
jg
fcompl
aad
sub
jbe
sahf
xchg
dec
ret
test
xchg
repz
mov
mov
xchg
mov
lret
and
ss
push
arpl
xchg
mov
lret
add
addb
mov
sbb
jge
into
cmc
jp
cmc
add
add
loop
pushf
xor
fs
mov
repz
lods
fmuls
mov
scas
frstor
cli
cmpsb
xchg
cs
nop
hlt
cmp
sbb
out
decb
adc
and
loopne
xor
pop
das
daa
cmp
inc
enter
xchg
pop
adc
xchg
or
fstpl
jo
gs
lret
push
fdivrl
adc
mov
lock
pop
sub
pop
jecxz
adc
ficoms
cs
nop
pusha
jecxz
dec
shl
les
mov
fnstcw
dec
or
xlat
fnsave
sub
popf
in
call
mov
fcompl
shll
adc
add
pop
fisubrl
cmp
mov
out
jnp
jp
or
decb
add
jecxz
sbb
mulb
mov
mov
add
nop
andl
sarl
fstpt
addr16
mov
into
test
lock
das
daa
or
add
test
shrl
stc
push
es
lahf
insl
repnz
mov
cmpsl
into
cltd
sarl
inc
adc
inc
fyl2xp1
lret
add
jge
ss
mov
mov
xlat
cmp
sub
lods
dec
ret
pusha
out
jb
mov
push
fnsave
pop
clc
add
xchg
and
ljmp
shrl
cld
leave
out
push
arpl
push
notl
or
mov
add
gs
test
push
adc
xlat
icebp
dec
test
mov
xchg
inc
bound
add
and
in
stos
fisubrl
lahf
push
arpl
adc
dec
jle
incl
xchg
xor
jbe
or
xor
mov
mov
xchg
das
mov
jb
jne
push
add
dec
xchg
inc
out
cmp
insl
fistpl
addr16
sbb
setne
shll
ss
jns
or
shrl
xchg
dec
pop
xor
in
sub
mov
outsb
sarb
ja
mov
fildl
repnz
rcrb
in
lret
cmp
xor
mov
movsb
xchg
int3
or
inc
or
pop
stos
aad
xor
push
nop
cmpsl
sbb
lods
shlb
mov
pop
ror
dec
fstpl
adc
shrl
pop
aam
xchg
int
pop
pop
popl
shll
xchg
push
inc
int
cmp
outsl
xorb
dec
dec
mov
xor
daa
sbb
addl
sub
jecxz
ror
add
jne
mov
repnz
xor
fwait
pop
sahf
hlt
cmpsl
pop
arpl
pop
jge
dec
inc
sbb
in
loopne
mov
add
mov
sbbb
int3
push
add
lret
and
std
scas
push
neg
and
rcl
add
pop
xor
ret
xchg
cmpsb
xor
movsb
sub
daa
into
sbb
jno
adc
mov
movsb
adc
and
cli
negl
add
xor
fnstenv
pop
lods
xchg
pop
xchg
js
lea
inc
rolb
jg
sub
inc
adc
gs
outsb
test
dec
shl
mov
mov
test
cltd
add
jl
xor
popl
outsb
fwait
xchg
int
test
sub
jecxz
pop
mov
push
ljmp
sub
push
rcrl
rclb
adc
roll
cmpsl
sarb
sbb
mov
sub
and
cld
mov
cmp
pop
fmuls
arpl
scas
and
xor
pop
sbb
in
or
fadds
cmc
int3
pusha
adc
call
cmp
loop
push
ret
stc
adc
mov
jne
jne
jbe
mov
add
pop
dec
cli
flds
add
cmp
sbb
jo
js
sub
out
loopne
mov
adc
cmc
imul
sbb
add
xchg
sub
into
sbb
dec
push
fst
das
popa
subb
xchg
xchg
mov
and
sti
mov
mov
aad
js
nop
cmp
hlt
inc
and
sub
adc
call
dec
test
lea
fucomi
sub
sahf
xor
stc
aam
loopne
mov
jmp
outsl
mov
inc
adc
sti
inc
subl
shll
sbb
dec
xlat
hlt
clc
je
fistps
and
pop
mov
cwtl
sahf
into
mov
jo
mov
pusha
push
dec
lcall
mov
adc
mov
adcb
push
bound
mov
fadd
mov
call
cmp
insl
fldenv
add
cmp
cmpsl
int
into
mov
mov
cld
jb
mov
mov
lea
mov
mulb
mov
aam
lret
and
out
into
push
jns
xor
clc
cmp
dec
push
ljmp
in
pop
sbb
mov
mov
loop
fbstp
pop
pminsw
add
ret
cltd
pop
mov
jp
cmp
lahf
dec
adc
imul
mov
rcll
call
or
push
jbe
add
push
jne
loope
push
xchg
mov
xor
cmp
leave
cmp
mov
sub
out
dec
jp
sub
jge
or
mov
popf
dec
dec
and
mov
dec
mov
mov
out
frstor
mov
jns
sbb
pop
xor
xchg
pushf
xchg
push
out
lahf
xor
or
mov
jp
inc
iret
mov
or
sbb
je
jle
push
inc
in
and
or
xchg
add
fucompp
stos
cmp
xchg
xchg
adcb
mov
pop
push
or
and
mov
iret
cmp
and
repnz
jnp
mov
scas
scas
std
aas
push
adc
adc
push
fs
loopne
or
mov
jae
mov
inc
sarb
or
ljmp
fiaddl
rorl
sbb
and
imul
fwait
lds
cmp
mov
test
add
adc
adc
repnz
pop
arpl
jl
jge
fwait
cmp
cld
sub
or
int3
ror
or
pop
push
popa
lods
push
jecxz
adc
add
jo
mov
scas
cmc
dec
mov
cmp
adc
cmpsb
mov
sbb
inc
mov
cmp
shrl
sahf
dec
cmp
movsl
dec
sub
loop
adc
and
push
fdivrs
sahf
push
movsb
cli
ljmp
add
lods
push
mov
adc
pop
jg
ret
push
push
mov
sub
push
cmp
push
outsb
out
out
adc
mov
adc
orb
sbb
inc
inc
add
and
xor
xchg
inc
push
jno
cld
int
xchg
dec
sub
ret
xchg
lcall
add
jne
mov
shl
sahf
xlat
incb
test
dec
xor
jno
xor
or
cli
cli
cmp
mov
fisttpll
rol
push
ss
cld
cmp
or
imull
fwait
lret
daa
ror
mov
sbb
and
into
mov
int
xor
pop
outsl
dec
xchg
fs
rcr
stc
leave
pop
inc
fs
add
les
data16
out
jb
cmpsb
orb
fs
out
gs
or
mov
je
mov
xor
adc
addr16
outsb
xchg
push
fsubs
aad
loopne
negb
insl
cmpl
in
push
das
imul
jnp
xchg
jmp
addr16
mov
pop
xlat
outsb
aaa
sbb
mov
iret
aaa
aas
sti
pop
clc
jne
pusha
leave
aaa
aad
xchg
jg
push
jnp
dec
xchg
iret
pusha
inc
xor
mov
sub
les
icebp
gs
xor
push
push
ljmp
or
mov
xor
pop
aad
adc
xchg
mov
inc
inc
shr
sbb
gs
and
inc
fwait
imul
pop
cmp
mov
popa
lock
dec
mov
cwtl
cmpsl
dec
jecxz
or
inc
std
mov
lods
xor
mov
add
dec
test
fistpl
dec
enter
push
lock
das
in
inc
mov
pop
andl
es
sbb
mov
cmpsl
int3
jecxz
mov
mov
mov
mov
xchg
dec
into
mov
adc
mov
sub
ds
jle
scas
push
cmp
mov
clc
js
mov
push
mov
int3
lods
mov
mov
out
sbb
xor
cmovns
add
les
add
mov
dec
movsl
adc
test
lds
xchg
scas
sbbb
or
insb
adc
pop
dec
test
negb
test
mov
mov
xor
add
push
cmpsb
mov
sbb
jp
insl
cmp
pop
call
dec
sbb
test
or
in
fwait
dec
add
jne
jmp
sahf
out
mov
mov
push
in
dec
or
cmp
movsl
or
add
jp
jp
ret
fistps
mov
sahf
or
cmc
in
loopne
pusha
jo
jnp
cld
cmp
xchg
cltd
in
xchg
pop
mov
inc
lahf
add
int
lcall
leave
and
stos
xchg
xchg
inc
and
lock
jnp
pop
xor
pop
fistl
test
iret
inc
dec
sub
mov
loopne,pt
and
divl
adc
or
gs
pop
inc
je
adc
mov
cmp
xchg
lcall
jno
lods
rol
stos
jp
mov
fcomps
leave
mov
inc
hlt
cmp
push
inc
jbe
xchg
test
sbb
int3
into
or
dec
jp
inc
pop
xor
arpl
xor
out
fisubrs
sub
xor
jae
mov
lods
stos
pop
push
fists
dec
in
mov
cmp
pushf
adc
daa
int3
call
xor
jl
movsb
leave
dec
lcall
movsl
pop
inc
mov
aaa
pop
pop
lahf
and
adc
shlb
add
scas
inc
inc
aas
mov
popf
enter
inc
jmp
push
cs
pop
mov
test
sub
pop
xor
outsb
dec
in
adc
lcall
andb
sbb
shl
add
sbb
xor
add
mov
sub
faddl
xor
scas
lcall
cmp
sub
pusha
test
imulb
adc
jg
mov
mov
imul
mov
in
and
and
mov
into
mov
lds
push
lret
aaa
rcrl
mov
mov
popa
pop
mov
sahf
scas
out
pop
sahf
icebp
xor
lock
insb
mov
fs
data16
mov
mov
xchg
push
out
out
cli
aas
add
push
or
ret
stc
mov
arpl
inc
movsl
loopne
ja
pop
mov
dec
adc
ljmp
ret
add
sub
sbb
lds
in
lods
xchg
push
sub
stc
mov
cmp
mov
cs
xlat
iret
aad
cmovno
lock
clc
inc
inc
fs
pop
outsb
jle
sub
repz
popf
adc
push
cltd
sub
and
xor
insl
pop
push
add
mov
clc
jmp
push
loope
ret
ffreep
inc
and
inc
mov
sub
jb
fisttpll
jecxz
jge
inc
in
imulb
sub
dec
std
cmpsl
cwtl
adc
pop
mov
addb
in
or
fcmovne
adc
mov
lods
mov
repnz
xchg
pop
mov
mov
into
sub
and
mov
icebp
es
jmp
insl
cmpsl
aam
dec
lcall
mov
pusha
and
lods
lret
push
jns
mov
fwait
xchg
mov
pop
xor
enter
lahf
sub
aam
add
ret
push
call
adc
out
out
clc
mov
inc
xchg
fnstsw
popa
add
stc
lods
cmc
add
add
jnp
push
xchg
insl
jle
push
mov
mov
add
cltd
int
jge
or
mov
cwtl
data16
xor
cld
adc
popa
stos
inc
xchg
lcall
and
push
stos
cmpsl
scas
push
push
dec
pop
xor
add
push
mov
or
add
push
dec
aas
mov
pop
and
mov
mov
cmp
dec
pusha
movsl
adc
je
or
fimuls
dec
adc
cmpsb
mov
inc
daa
out
fisttps
mov
ss
and
je
xchg
xchg
cmp
sub
sub
jns
popa
addr16
test
cmc
adc
jae
or
enter
cmp
or
lahf
in
fistps
jae
xchg
test
test
daa
in
adc
ficoml
nop
mov
popf
rorl
mov
dec
lock
push
or
and
inc
lcall
imul
adc
into
iret
lahf
dec
adc
rorb
pop
jnp
das
inc
cs
lods
jae
mov
add
loopne
mov
push
fisubl
icebp
xchg
cmp
push
sbb
in
imul
inc
lds
xor
mov
sub
mov
add
movsl
hlt
mov
mov
jbe
and
jge
in
sbb
fbstp
sbb
add
int3
gs
xchg
pop
fs
push
test
dec
pop
jo
dec
cs
mov
cmp
mov
orb
mov
loop,pn
cmpsb
mov
scas
add
xchg
insl
sbb
lret
adc
mov
dec
sub
jl
call
push
xor
movsl
push
inc
mulb
shrb
lahf
inc
test
add
cmp
repz
pusha
add
pop
sti
pop
nop
js
faddl
push
sub
loope
gs
sub
shrb
ljmp
jne
icebp
xlat
or
jne
xor
add
push
xor
mov
or
sub
mov
or
cmp
fmul
xlat
adc
lahf
jp
sahf
sbb
std
repnz
shll
jle
repnz
inc
test
add
cmp
adcb
fstps
scas
shl
sub
shrb
into
adcl
xor
cmc
xlat
outsl
or
loop
fisubl
aaa
or
cmp
dec
adc
scas
dec
xchg
lods
je
push
mov
push
pop
out
std
std
cli
jb
push
cmp
or
dec
gs
pop
cmp
fmuls
test
adc
fisubs
adc
mov
add
out
popa
xchg
jno
pop
sbb
add
and
in
outsl
je
shlb
jno
jne
movsl
loopne
sti
mov
fcmovb
aad
lock
nop
int3
bound
inc
pop
or
fsts
jecxz
repz
push
push
add
cmp
ret
mov
cltd
pop
shrl
pushf
xchg
fsubrs
push
pop
pop
testb
xor
aas
mull
push
mov
dec
cmp
divl
xchg
jecxz
adc
divb
test
cwtl
iret
and
mov
pop
cmpl
jg
mov
aas
push
lock
ljmp
mov
xor
and
in
rcl
and
insl
mov
ljmp
cmp
ja
aaa
mov
inc
lret
shrb
mov
mov
cld
mov
shl
sub
mov
pop
and
ret
pushf
or
fisttpll
push
lahf
clc
out
stos
movsl
xchg
sbb
int
cld
jle
popa
pop
loopne
lods
pusha
mov
shr
fisubrs
leave
push
arpl
call
cltd
add
sahf
test
push
std
mov
jno
xchg
xlat
dec
jae
lret
and
xchg
sub
rcrl
pop
lahf
pop
mov
mov
push
out
cmp
mov
lret
cmp
dec
xor
xor
int
mov
mov
fistl
ja
test
outsl
inc
inc
cmpsb
push
or
lods
cmp
repz
pusha
jne
push
and
sub
jp
stos
bound
aad
adc
push
out
out
mov
je
je
sub
pop
mov
jb
mov
jl
insb
jle
rorl
xchg
pusha
cmpsb
mov
cmp
jl
ja
nop
mov
mov
push
push
popf
dec
popf
clc
dec
dec
mov
mov
cli
stos
jns
sub
std
mov
push
adc
push
jae
out
xor
cmp
iret
decb
ret
and
hlt
addl
jae
mov
mov
push
jb
data16
mov
xchg
nop
mov
sbb
add
imul
fidivs
mov
and
jle
lcall
lret
jb
ficompl
jge
sbb
imul
dec
sarb
int3
push
pop
or
xchg
jg
push
mov
imul
push
and
add
movsb
ret
push
jge
cmpsb
inc
subl
enter
daa
lret
cmp
lret
iret
test
dec
js
push
push
mov
movsl
and
adc
push
push
insb
sbb
out
push
popa
inc
fs
mov
and
js
push
cltd
pop
cmp
mov
loope
movsb
loop
xchg
ret
and
loope
adc
pushf
adc
push
outsb
out
ss
pusha
orb
adc
or
xor
pop
pop
int
and
sub
jns
pop
xor
cmpsl
jno
push
inc
xchg
jbe
sub
xor
test
adc
scas
jg
stos
mov
repz
mov
lret
xchg
and
ss
data16
cmp
cmp
out
lret
mov
mov
add
into
fs
push
in
outsl
ljmp
stc
out
sarl
adc
imul
test
sbb
movsl
ror
xor
lea
or
mov
loopne
mov
pop
lret
adc
dec
imul
rclb
mov
xlat
sub
push
sub
imul
adc
sti
insb
adc
aad
ss
nop
cmpsl
je
dec
scas
shrb
loopne
fxch
enter
fidivrl
loop
add
jge
lea
leave
popf
xor
test
adc
out
pushf
inc
pusha
fsubrp
jmp
testl
mov
pop
jb
outsl
cld
dec
mov
or
dec
jecxz
jns
div
pushf
std
cwtl
repnz
cwtl
mov
rorl
mov
mov
sub
adc
dec
hlt
sbb
sbb
mov
cmp
cmp
roll
shll
test
add
insl
jne
inc
dec
nop
scas
pop
cmpsl
leave
mov
mov
push
outsl
inc
cld
push
sbb
lret
das
sahf
mov
and
mov
or
mov
mov
ljmp
push
test
out
fnsave
aaa
push
xchg
pop
aas
ss
loope
lret
inc
mov
inc
pushf
add
ds
pcmpgtd
clc
add
adcb
popf
lahf
mov
mov
xchg
push
dec
fidivl
test
xor
jno
xchg
sbb
lods
pop
dec
jecxz
stos
test
add
out
lcall
pushl
popf
and
lods
cmpsb
mov
in
or
sbb
push
dec
inc
add
inc
fsincos
or
fwait
pop
jo
mov
jne
sbb
and
pop
cmpsl
dec
fmul
es
mov
in
xchg
sub
ret
inc
sbb
outsl
sub
addr16
mov
mov
xor
leave
or
insl
jle
sti
push
in
outsl
adc
fistps
jae
dec
inc
or
xchg
xchg
mov
xchg
rcll
push
and
popf
pop
mov
push
lret
mov
stos
in
adc
insb
jmp
jnp
pop
mov
sub
test
pop
push
or
idiv
cmpsb
pop
jmp
adc
jge
fcompl
or
je
inc
icebp
pop
loop
int
cmp
sbb
repz
imul
ficomps
aad
jae
sbb
cld
pop
icebp
mov
shll
hlt
push
mov
mov
cltd
bnd
mov
and
fwait
jle
or
out
add
outsb
and
pop
ret
push
outsl
mov
xor
clc
xor
cld
and
push
push
cmp
jno
push
int3
dec
sbb
push
jecxz
daa
leave
sti
mov
jno
xchg
xor
mov
out
insl
ja,pt
sub
or
out
lahf
andl
pop
push
shlb
inc
repz
out
adc
push
js
hlt
aad
jnp
cmp
loope
pop
xchg
xor
cmp
std
lods
outsb
jae
cli
adc
sub
jge
xchg
push
out
sbbb
pusha
add
add
push
jge
or
or
push
pop
pop
mov
mov
popf
repz
fsubl
push
mov
jge
stc
sahf
arpl
mov
andb
jg
test
jo
insb
xchg
mov
repnz
pushf
es
fwait
cmp
notb
mov
push
cmp
mov
aam
mov
cmp
out
xchg
ror
inc
jbe
cmc
scas
push
lods
outsl
leave
sbb
stc
movsl
inc
lret
and
adc
dec
and
jge
lods
inc
and
mov
xchg
xor
test
or
fmul
lds
rcrb
cmp
js
or
into
or
pop
sub
gs
jmp
cmp
adc
loope
imul
jb
xchg
notl
pop
sbb
jbe
adc
mov
lret
lea
jnp
icebp
sti
sbb
cs
mov
outsl
nop
sbbb
inc
sub
flds
dec
les
push
repz
hlt
pop
sbb
das
call
mov
lea
dec
jno
xchg
xchg
and
out
pop
lods
sub
inc
mov
loop
or
xor
xor
xchg
dec
sub
je
adc
jo
ja
aaa
aas
test
aas
inc
sti
cwtl
inc
jmp
mov
cli
cmc
mov
subl
movsb
mov
hlt
mov
pop
js
movsl
cld
jle
popa
inc
and
repz
arpl
mov
jae
stos
xchg
insl
pop
or
inc
cmpsl
enter
inc
xchg
adc
in
movsl
cld
dec
jb
lret
sahf
sarl
mov
mov
push
jmp
pop
xchg
add
rorb
add
aam
push
loopne
mov
xchg
aad
pop
lea
clc
fs
or
loop
imul
jge
ss
pop
mov
movsb
or
inc
sbb
push
sbb
orb
pop
addl
jb
sbb
out
pop
xchg
into
dec
inc
or
test
ror
xchg
mov
sbb
jns
enter
div
ja
je
jp
xor
arpl
add
push
cld
lret
lock
ja
sub
xor
rcll
adc
xor
or
sbbb
std
ja
adc
dec
cmp
mov
add
dec
mov
dec
repnz
xor
out
cmp
sub
call
sub
adc
cwtl
jb
inc
adc
or
jae
sub
nop
jp
sbb
cmp
fdivrs
sbb
in
mov
fcmovu
js
and
jle
fists
sbb
in
popf
inc
hlt
idivb
or
xchg
stos
pop
mov
pop
insb
xor
scas
popf
jmp
push
je
pushf
adc
mov
iret
mov
cmpsb
xor
cmp
inc
dec
or
inc
fistpll
mov
inc
jo
sub
and
xchg
ds
push
sbb
mov
jno
std
mov
jg
pop
daa
push
mov
and
dec
leave
cmp
arpl
hlt
inc
jbe
sbbb
andl
or
xor
jbe
xor
es
push
pop
icebp
addr16
push
mov
xor
push
dec
fisubrl
je
int3
cmp
test
gs
inc
pop
cwtl
in
dec
mov
das
daa
enter
fbld
fwait
jno
test
jl
lods
daa
dec
push
pop
dec
ds
and
cmpsb
pop
push
mul
shrl
fwait
push
xor
test
jmp
in
pop
mov
mov
push
mov
insb
jns
cmp
and
mov
adc
push
les
hlt
mov
inc
sbb
jb
add
dec
outsl
xor
sbb
sub
mov
and
hlt
test
fmul
lret
mov
sahf
push
jb
test
push
cmpb
es
sub
mov
out
mov
dec
sub
sbb
out
ss
cmp
mov
stc
imull
ret
mov
popa
sarl
icebp
sbb
testb
add
outsl
test
in
mov
push
or
jae
dec
notb
data16
jb
sub
mov
adc
out
aas
cli
or
xor
outsb
lret
pop
push
incb
sti
gs
call
stc
pop
or
std
adc
popa
imul
lods
add
cltd
add
fisubrl
cmp
and
sub
nop
loopne
mov
shr
adc
cs
cltd
mov
nop
pop
aam
dec
insb
in
inc
xchg
sub
fnstcw
mov
les
repz
xor
lea
inc
call
das
lret
fisubrl
jbe
xchg
jmp
jmp
dec
test
dec
jle
inc
ds
cld
aas
aam
inc
jb
shl
dec
mov
jge
jecxz
adc
js
out
jg
add
int3
mov
jecxz
inc
inc
push
dec
sbb
xor
mov
inc
mov
mov
or
das
inc
mov
mov
stos
inc
xchg
and
push
cmp
ret
or
cmpsb
dec
xchg
inc
cmpsl
and
js
sub
cld
je
mov
mov
mov
lea
mov
mov
sub
addr16
push
push
push
or
fldl
or
mov
push
outsl
cmp
mov
out
mov
pop
pop
push
xchg
mov
adc
and
jno
mov
mov
ss
xchg
mov
add
arpl
outsl
inc
mov
out
push
rcrl
fistpl
mov
push
push
fcomps
xlat
add
stc
lcall
popf
adc
lahf
jne
xor
push
arpl
imul
mov
movsl
pop
hlt
je
mov
cli
dec
sub
fs
pop
adc
ja
mov
dec
pushf
mov
jne
fbld
mov
push
xchg
out
pop
jg
bound
cmp
jns
fmull
mov
gs
out
push
test
gs
addr16
push
and
mov
push
ja
pop
clc
in
mov
mov
in
insl
push
pusha
ja
push
fists
or
jne
jle
push
fwait
mov
push
pushf
lea
mov
dec
mov
and
add
popa
jnp
pop
xor
mov
clc
fcmove
sbb
ret
cmc
pop
push
push
cld
inc
pop
push
into
jae
imull
loop
fmuls
int3
adc
sub
xor
mov
imul
clc
fisubs
dec
outsb
shlb
out
mov
ja
dec
leave
xchg
hlt
mov
push
arpl
xchg
jbe
jge
daa
push
sbb
divl
sbb
or
roll
or
sbb
and
xor
leave
jo
outsb
repnz
das
stos
mov
pop
popa
mov
movsb
arpl
push
pusha
cmpsb
lret
in
ss
enter
daa
icebp
lds
adc
jno
xchg
lock
inc
mov
ds
adc
and
xor
push
lret
test
xchg
mov
insb
jnp
pop
xchg
dec
xchg
js
pop
pop
stc
or
loope
cmp
xlat
xchg
jne
cs
outsb
cmp
gs
mov
push
xor
jbe
sbb
mov
mov
aas
or
addl
mov
sub
fdivs
rorb
fdivl
pop
sub
mov
test
notb
mov
pushf
out
mov
enter
adc
sub
add
or
inc
fsubrs
imul
ljmp
rcll
mov
and
into
or
mov
xor
pop
outsl
xchg
xor
dec
pop
and
adc
adc
cld
jb
adc
jne
loop
mov
cli
ds
dec
xor
test
or
test
sub
loopne
es
pop
daa
clc
jp
ljmp
push
adc
adc
push
add
stos
sbb
in
and
xlat
call
mov
mov
push
and
sti
jns
repz
or
ficomps
nop
cmp
inc
dec
lret
cmc
push
inc
cmpsb
mov
xor
pop
mov
repz
sub
arpl
jnp
mov
pop
lea
pop
pushf
inc
out
jmp
jb
pop
repnz
inc
inc
lcall
mov
jg
je
cmp
inc
idivb
nop
repnz
mov
xor
mov
bound
pop
jmp
insb
mov
movsl
add
pop
dec
sbb
pop
and
mov
popa
and
rcl
mov
insl
sub
shll
stos
repnz
xchg
imul
lcall
dec
xchg
mov
sub
shlb
lea
sub
test
dec
shr
ret
fsubs
push
into
lods
test
stos
push
add
xchg
sbb
ljmp
xor
or
in
mov
push
sti
xchg
ror
push
push
iret
js
jae
mov
jbe
inc
jns
mov
jl
xchg
mov
out
push
fcomps
lcall
pop
dec
xchg
in
stos
push
andl
inc
nop
cwtl
add
scas
add
cmp
push
xor
dec
jg
lea
dec
mov
scas
and
pop
dec
out
les
nop
inc
dec
pop
rcrl
or
sub
fwait
arpl
cmpsb
jne
sbb
div
aas
bound
in
in
sar
xchg
lds
out
add
sub
pusha
add
addr16
data16
subl
dec
sub
mov
mov
pop
in
andb
add
xchg
enter
insb
je
xchg
push
fwait
xor
pop
jo
popf
xchg
sub
mov
mov
jp
pop
stc
iret
insb
pop
pop
cmpsl
jnp
jge
scas
arpl
xchg
adc
jg
ret
pop
pop
mov
ret
inc
lock
icebp
sahf
inc
in
sub
mov
leave
push
outsb
and
or
xchg
in
sbb
cwtl
sarb
mov
fiadds
ffreep
or
pop
rorb
mov
lret
leave
push
adc
jl
arpl
pop
fdivs
mov
jge
mov
sbb
gs
fcom
jl
cmp
cld
add
xchg
pop
dec
pusha
mov
sbb
ret
jo
test
mov
lcall
movsb
out
sub
mov
or
in
sbb
ljmp
inc
cmp
jno
lret
xor
fstpl
loopne
pop
movsl
inc
lcall
and
data16
fidivrs
enter
ds
xor
stos
inc
mov
sti
mov
js
out
imul
fidivrl
add
ljmp
subb
pushf
push
and
mov
cli
adc
xor
add
faddl
lret
dec
pop
push
xchg
push
int
add
pop
cs
addr16
push
and
adc
or
scas
xorb
mov
inc
nop
mov
xchg
xor
lds
push
sbb
stos
or
daa
and
mull
xchg
xlat
sub
sbb
addr16
lock
xor
push
outsl
imul
lret
fs
pop
or
in
sbb
data16
lods
divl
mov
leave
xchg
out
incl
jno
cmp
push
lods
mov
or
jno
mov
test
loopne
push
les
les
mov
ljmp
cmp
add
mov
xchg
inc
or
mov
daa
fistpl
xlat
daa
and
incl
in
mov
lcall
and
test
sub
movsl
inc
mov
sub
std
repz
dec
jno
data16
lea
dec
call
sub
xchg
pushf
in
movb
cs
xchg
add
outsl
inc
pop
adc
xchg
jb
add
dec
nop
push
je
push
loope
popf
shll
add
les
mov
and
outsl
push
loop
repnz
out
pop
mov
mov
lock
mov
cwtl
jns
arpl
or
and
pop
int3
shll
mov
pandn
dec
jl
xchg
cmpsl
lds
icebp
push
gs
lret
lret
jmp
mov
and
es
push
rolb
out
sub
cmpsb
aam
xchg
std
ret
arpl
data16
fst
or
clc
adc
je
ljmp
xor
ljmp
pop
cmp
stos
pop
cmp
loop
dec
add
mov
cltd
pop
mov
test
jp
mov
lea
jbe
loop
inc
xor
sbb
ror
lea
stos
inc
pusha
pop
push
push
fwait
dec
add
inc
outsl
cmp
xor
jmp
dec
xor
push
mov
mov
dec
ljmp
jle
ja
xchg
cmovp
sub
inc
xor
push
ljmp
orl
out
aad
pop
bound
jg
jns
xchg
in
cmp
adc
stc
out
sub
or
addr16
jp
in
sahf
mov
cltd
repz
cmpsl
scas
push
jle
daa
xchg
in
sti
dec
pusha
lods
sbbb
aad
inc
xchg
fwait
movsl
jnp
arpl
jne
jmp
inc
cmp
popf
mov
scas
fists
insl
test
mov
and
insb
jb
mov
andb
push
aas
push
dec
ret
adcl
mov
hlt
ret
loopne
lds
inc
jo
sub
das
xchg
inc
call
cmpsl
push
push
in
adc
jle
inc
mov
sbb
add
fsubp
lcall
shrb
mov
sbb
imul
hlt
dec
mov
mov
mulb
jge
and
xchg
stc
and
das
adc
add
push
imul
adc
jle
cmp
xor
notl
and
out
movsb
jns
ficoml
dec
pop
cmpsb
rorb
shr
rcll
enter
daa
cmp
sub
and
dec
mov
cmp
movsl
dec
push
int
je
or
jo
repz
cld
adc
inc
das
sbb
imul
xchg
js
adc
inc
push
inc
lret
loope
sti
jbe
lods
inc
pop
cmp
es
xchg
pop
adc
adc
out
in
sbb
and
xor
not
int
xor
sub
push
lcall
add
int
lret
js
sahf
out
repz
pop
adc
sub
nop
mov
sbb
inc
mov
inc
sbb
dec
mov
ss
leave
and
loop
add
popw
aas
lret
jns
sbb
mov
push
sbb
sub
push
xor
mov
out
jno
pop
stc
andl
adc
out
adc
lods
fiadds
sub
movsb
and
xorb
jl
or
xchg
and
stos
aas
mov
loopne
sub
pop
gs
dec
adc
or
adc
mov
inc
xchg
add
cmc
cmp
adc
data16
sub
mov
daa
mov
push
js,pn
mov
nop
out
stc
push
dec
mov
mov
int3
and
fchs
loopne
les
xor
imul
mov
pop
repz
adc
aad
pushf
cwtl
jb
jmp
push
loop
cmp
int
shll
movsl
inc
jbe
lahf
aas
mov
xorb
xchg
dec
push
inc
xchg
je
mov
ljmp
insl
gs
xor
mov
jge
mov
fsincos
addl
mov
fistl
bound
popf
inc
js
adc
mov
mov
iret
into
iret
and
add
shrl
popf
pop
insl
clc
rorb
dec
ja
inc
cmpsl
les
loopne
inc
sbb
cmpsl
lret
pop
pusha
sarb
jg
mov
or
je
sub
movsb
mov
mulb
neg
clc
test
mov
xchg
or
ljmp
subb
out
out
xor
push
push
test
cmovno
fwait
cltd
dec
out
test
mov
sbbl
movsb
dec
fnstsw
fildll
in
sti
lock
sahf
mov
pop
mov
add
push
rorl
add
pop
js
leave
xor
icebp
or
pusha
mov
xor
lret
sbb
pop
shlb
dec
add
ret
out
or
in
fwait
sarl
inc
xlat
dec
jne
out
sbb
mov
outsb
bound
loop
in
repz
push
xor
push
pushf
or
push
addr16
mov
mov
or
mov
mov
fadds
dec
sbb
fcomip
pop
and
pop
mov
xchg
mov
push
cmpl
add
loop
mov
push
push
cmpsb
popf
stos
sub
in
xchg
insb
ffree
inc
jnp
adc
push
nop
movsb
adc
iret
cmp
imul
es
push
mov
inc
jmp
jecxz
push
inc
sbb
inc
insb
mov
fimull
xchg
lcall
imul
fimuls
pop
loopne
adcl
mov
jo
sub
inc
jle
hlt
xchg
dec
inc
arpl
xor
jae
sbb
mov
mov
shlb
push
pop
lods
push
shll
mov
and
cli
aaa
cmp
pusha
jle
add
notb
jbe
cmpsb
push
mov
in
jmp
bswap
je
je
shlb
stos
pop
in
jno
mov
xor
outsb
sbb
data16
and
push
inc
dec
jg
mov
dec
inc
inc
mov
push
push
pop
or
pop
js
iret
xchg
pop
mov
out
push
xchg
add
lods
adc
sub
xlat
cmp
scas
imul
dec
adc
jb
ret
testl
sbb
push
testl
sub
push
mov
int
inc
push
sub
xor
pop
sub
or
push
xor
fdivrl
jo
sub
inc
sahf
xchg
pop
or
ljmp
mov
sub
dec
out
sahf
and
push
ss
lahf
call
fcomps
shrl
lret
push
rcll
stos
mov
pusha
ja
mov
mov
xor
lahf
outsl
and
das
loop
pop
mov
cmp
xchg
fs
ror
adc
mov
leave
mov
shl
out
iret
sbb
xlat
push
push
xor
xchg
nop
cmp
mov
or
sub
gs
shl
adc
push
imul
adc
xchg
mov
push
cmp
repz
sub
dec
mov
in
xchg
inc
mov
xchg
les
fistpl
or
call
xor
fsts
cmp
repz
or
or
js
cli
fildll
sub
adc
enter
jmp
or
fistpl
pop
push
out
inc
xchg
inc
in
push
popa
xlat
jb
pop
orb
into
je
jbe
jecxz
jge
testb
inc
cwtl
in
jnp
mov
push
jbe
popf
cli
or
enter
inc
in
mov
das
movsl
mov
push
adc
insb
push
in
das
mov
dec
ja
xchg
xor
movsb
mov
adc
cmp
jb
andl
leave
xor
sbb
lret
leave
insb
aad
mov
nop
and
pop
lahf
stos
pop
sub
cmp
lods
ss
aam
or
push
pop
ss
fstpl
sub
clc
mov
ljmp
xchg
lods
dec
rcrl
adc
popf
xchg
movsl
inc
loop
pusha
imul
add
loope
test
mov
arpl
mov
iret
sub
lea
dec
inc
inc
lock
cmpsl
xchg
mov
imul
dec
mov
stos
pop
data16
push
fs
popa
add
js
push
call
out
popl
in
jnp
jns
outsb
mov
sub
ja
cmpl
test
fisttps
hlt
mov
arpl
iret
or
jle
fwait
lock
dec
sub
add
adc
out
xchg
pop
bound
adc
in
add
xchg
mov
adc
sub
push
adc
and
or
mov
test
fnstsw
cmc
arpl
je
jl
jecxz
inc
fists
mov
xchg
inc
pmaxsw
push
dec
mov
orl
push
test
stc
popf
or
jg
mov
bound
sahf
or
and
cmp
jnp
xchg
push
xlat
std
push
iret
xchg
into
loopne
push
and
inc
xchg
jo
out
inc
cmpsb
or
mov
mov
decl
test
imul
pop
fisubrs
fld
popf
es
rcrb
inc
bnd
call
cmp
loopne
sub
ja
jbe
fsubl
jge
stos
out
sbb
pop
aaa
adc
mov
mov
mov
xchg
pusha
push
rcll
xor
sbb
push
scas
stos
mov
and
arpl
loop
jmp
ficoml
cmpsb
in
cmpsb
je
in
shlb
in
ret
or
popf
jno
inc
jp
mov
mov
ds
test
movsl
push
and
stos
jns
lahf
cmp
mov
sub
push
xchg
fisubrs
inc
dec
cs
xor
js
push
inc
pop
cmc
gs
pop
xchg
aas
loope
dec
sub
inc
fdivrs
ljmp
adc
dec
js
iret
xchg
inc
orb
pop
add
stos
pop
xor
add
push
js
int
inc
mov
pop
stos
ss
lcall
sub
and
add
lahf
inc
sub
jg
sti
inc
mov
outsb
aaa
mov
sbb
push
call
cmp
pop
push
mul
push
imul
scas
xor
and
or
into
cltd
shrl
shll
push
loop
pop
ja
out
dec
dec
fs
mov
fimull
popw
push
lods
lods
leave
orl
std
mov
xor
ds
cmp
mov
jle
icebp
add
gs
shl
mov
xchg
pop
mov
dec
push
imul
or
xchg
pop
mov
sbb
fdivrs
xlat
in
test
pop
cmp
mov
std
mov
dec
cs
int3
nop
movsb
and
inc
bnd
dec
les
xor
outsl
popa
xchg
lea
mov
jne
or
stos
pop
mov
adc
inc
pusha
jmp
mov
pushf
inc
loope
mov
aas
out
mov
lock
hlt
pushf
imul
jecxz
leave
fisubs
fcmovnbe
cwtl
cmpsl
and
mov
push
mov
xor
mov
pop
adc
sub
in
das
fwait
bndstx
cmp
lret
jmp
dec
xor
daa
insl
mov
cmpsl
ret
mov
out
pop
xor
lret
cmp
jl
fidivl
cmp
dec
pop
mov
sub
push
jno
ja
mov
push
fimull
fldl
cmp
cmp
xchg
adc
jecxz
xchg
mov
loope
mov
lods
arpl
div
adc
cmp
add
lret
mov
loope
mov
enter
roll
rorb
ljmp
rcl
daa
ficomps
aas
stos
push
push
push
pop
inc
pop
add
xchg
daa
add
mov
fdivl
loop
movsb
or
or
push
mov
mov
clc
inc
pop
mov
les
push
adc
in
mov
pop
repz
or
jne
cltd
jne
and
xor
jns
outsl
mov
xchg
add
pop
pop
mov
dec
cmp
and
and
test
mov
hlt
daa
insl
jle
lret
and
jnp
pop
pusha
jle
cmp
xor
inc
xchg
adc
mov
xchg
dec
loop
sbb
pop
push
imul
mov
test
daa
and
addb
out
dec
inc
push
push
xor
adc
iret
div
cmp
jnp
pop
push
dec
inc
xchg
lods
in
jae
cmpb
and
inc
popf
inc
push
or
mov
jmp
sbb
mov
pop
fmulp
fidivs
sarb
pop
repnz
push
pop
leave
das
jns
hlt
sub
arpl
cwtl
jbe
jge
jge
les
aaa
aam
pop
or
lcall
test
sbb
sbb
xor
jne
loop
mov
int
out
fnstsw
cltd
aas
dec
movsb
sbb
cwtl
push
cmc
xchg
in
pop
aad
in
mov
mov
daa
ret
cmp
aam
jno
add
mov
ds
xchg
out
pop
lahf
pop
and
stos
lahf
pop
or
ja
cmpsb
cwtl
movsl
push
pop
ret
ja
fcompl
pop
pop
cwtl
cmpsl
js
add
pop
xor
ret
push
dec
lods
loope
lods
in
sub
jge
cmp
inc
adc
sub
xchg
andb
inc
sbb
push
add
in
aam
pop
push
mov
xchg
out
int
sbb
int3
pop
sub
mov
loopne
fmul
psrlw
push
dec
sbb
es
lds
push
pop
bound
lods
sahf
shlb
jns
pop
test
cmp
adc
mov
lret
pop
roll
mov
fldt
jl
add
and
xor
cli
outsl
loop
dec
loop
or
stc
cmpsb
cmp
fs
mov
lods
xchg
add
mov
sub
cli
cmp
or
cmp
xchg
lds
sub
pop
adc
dec
gs
mov
dec
leave
out
ret
adc
out
imul
add
sbb
dec
or
sbb
adc
add
lret
ficoms
mov
push
pusha
mov
jo
nop
jg
cmpsl
dec
cmpsb
sbbl
test
or
repz
pop
jb
xor
lock
sub
mov
hlt
inc
xchg
pushf
cltd
insl
js
popa
mov
pop
and
inc
leave
mov
jb
ficoml
dec
imul
je
ljmp
or
xchg
shlb
cwtl
bound
mov
leave
stos
mov
out
mov
lret
das
push
dec
sahf
mov
lahf
mov
cmc
lock
das
jp
dec
mov
hlt
sbb
jmp
pushf
or
insl
lods
mov
mov
stos
xor
cld
jbe
sahf
lret
cmpsl
sar
mov
loope
or
pop
push
into
rclb
insb
sub
dec
clc
aam
aad
ret
mov
aad
clc
add
xchg
push
jmp
je
out
shrl
jne
out
pop
xchg
xchg
xor
pop
push
push
ret
call
add
sub
test
or
xchg
ljmp
das
outsb
jle
imul
shrl
mov
ret
jnp
push
stos
or
lds
scas
aaa
jmp
push
xchg
xor
sbb
jge
mov
lcall
ja
lret
call
inc
xchg
mov
je
dec
hlt
cmp
nop
xor
add
fdivl
push
lretw
jne
jns
lods
jae
loop
stos
xchg
push
leave
icebp
out
push
test
or
sbb
sbb
mov
inc
es
arpl
add
add
pusha
sbb
fists
bound
aas
xchg
imul
push
dec
cmp
ret
pushw
push
adc
int3
xor
push
lahf
cwtl
jnp
mov
scas
push
fimull
gs
xor
iret
push
pop
sbb
pop
mov
in
sti
jae
into
mov
fsubrp
or
scas
fcomps
jmp
mov
sbb
push
dec
imul
and
lds
dec
mov
imul
icebp
hlt
jbe
loopne
popa
xchg
cs
jbe
movsb
ret
out
shrb
aaa
xchg
mov
or
cs
add
divl
pop
cmp
aaa
push
xchg
xor
sar
scas
imul
or
push
inc
lea
fsubrl
mov
gs
daa
shll
cmp
jno
out
inc
jl
push
in
pop
test
ds
pushf
xchg
loopne
jne
jns
and
test
sub
movl
inc
dec
pop
adcl
pop
jae
lret
mov
cmp
insb
cmp
shrl
mov
xlat
std
mov
loope
xorb
sbb
addb
jl
push
xchg
lret
inc
fists
insl
fcoml
lcall
loope
jns
ljmp
dec
sbb
cmp
jg
cmp
and
iret
mov
fstpl
add
ss
ficoml
fmul
daa
test
bound
lret
fcmovnb
fsubl
xchg
mov
dec
sbb
ror
pop
and
das
xor
ljmp
pop
enter
cmc
mov
js
inc
sbb
lods
jp
push
mov
mov
out
in
cli
jo
out
mov
sub
push
pop
or
xchg
or
xchg
in
loopne
and
mov
shll
adc
add
imul
cmp
pop
xlat
bound
sub
aaa
jge
push
decb
rcr
scas
sti
xchg
mov
rcl
mov
mov
dec
add
popf
insb
fnstcw
or
jne
inc
lea
or
test
jmp
adc
pop
pushf
inc
imul
inc
out
std
popf
inc
loop
jl
sub
xchg
pop
dec
loop
mov
sub
testb
std
ja
mov
mov
inc
xor
bound
cmp
rcl
orl
jge
and
pop
sbb
fdivrl
jmp
loopne
jmp
adc
sahf
pop
gs
xchg
aam
dec
arpl
cmpsl
shr
mov
popf
xor
lret
push
sub
mov
call
enter
popf
push
shlb
loop
aam
cmp
push
pusha
shll
fstl
mov
jp
and
lods
mov
mov
mov
cmp
push
icebp
or
add
rcr
test
pop
xchg
mov
test
scas
mov
int3
dec
inc
pop
dec
dec
push
stos
in
sub
push
dec
int3
syscall
jno
repz
pop
jbe
hlt
or
mov
mov
dec
push
mov
inc
fisttps
pop
lods
repz
dec
shrl
sub
or
inc
cwtl
fwait
jge
pop
dec
shll
test
out
xor
adc
pop
xor
and
insl
and
mov
sub
inc
push
add
adc
mov
inc
sub
dec
ret
shl
mov
push
xor
mov
pusha
mov
dec
fbstp
jbe
mov
ljmp
neg
pop
push
icebp
inc
in
jle
adc
push
add
shlb
adc
mov
cs
mov
mov
lods
ret
icebp
adc
add
iret
mov
jno
mov
hlt
or
cmpsl
addb
pusha
inc
inc
neg
lret
popf
jbe
sub
test
ficompl
arpl
xchg
imul
es
mov
imul
insb
ficoms
out
shr
in
cld
enter
shrb
rcr
arpl
jbe
sbb
jge
cmpsb
aam
jnp
stos
aaa
push
insl
gs
ja
add
push
addr16
jle
pop
pop
imul
mov
sub
and
mov
push
xchg
call
in
xchg
mov
rorb
ja
sub
sti
push
jl
jle
dec
into
mov
push
movsl
imul
and
test
imulb
test
repz
inc
cli
inc
sub
sarl
test
xchg
and
mov
jp
mov
or
push
sub
je
cmp
rcrl
out
or
add
fidivrs
cmp
inc
cmp
jae
add
insl
xchg
xor
and
int
test
call
outsb
lcall
insb
fsubl
xor
in
sbb
xor
cmp
jg
pop
ret
mov
insl
jbe
fwait
sti
mov
je
clc
and
xor
mov
mull
and
shll
mov
cmpsb
sbb
inc
aas
cmc
scas
fistps
loop
insl
outsl
mov
mov
stc
adc
pop
xor
xor
jle
lods
popa
and
out
lahf
cli
mov
adc
cmp
out
or
inc
cmp
lock
loope
adc
mov
inc
sbb
add
data16
adc
repnz
add
sub
outsb
cmc
in
ds
sti
inc
fdivl
aad
cwtd
nop
xor
fadd
inc
sub
fpatan
cld
push
les
jae
js
add
out
push
daa
scas
insb
pop
jb
inc
adc
cmp
jmp
cli
dec
pop
addr16
inc
jbe
xchg
inc
std
fwait
cmp
jb
jl
dec
pop
insl
lock
scas
mov
notb
sub
sub
out
inc
cmp
mov
fildl
scas
test
pop
jmp
mov
pop
add
fmul
mov
cmp
dec
mov
jbe
jnp
cmp
and
jo
jnp
mov
cmpsl
mov
push
icebp
je
in
int3
mov
scas
mov
out
outsl
outsb
mov
test
dec
sar
inc
xchg
sub
and
aam
out
mov
sar
push
and
fnstsw
jge
xchg
sarl
add
cwtl
pusha
lods
stc
push
stos
mov
pop
mov
xchg
roll
push
int3
insb
jno
sbb
push
add
cwtd
popa
push
sahf
test
dec
movb
dec
mov
xchg
into
sbb
inc
rcl
add
add
lock
add
in
push
call
scas
lcall
das
cmpl
pop
addr16
fs
jle
dec
cld
clc
inc
mov
sub
aad
mov
cmpsb
jne
test
ucomiss
out
movd
jns
adc
in
sbb
out
pop
loope
stos
sub
cmp
mov
jp
xor
insb
fdivrl
test
jle
add
in
add
lret
xor
xchg
lea
jmp
stos
leave
mov
push
mov
sub
cmpsb
fnstcw
stos
push
gs
adc
insb
hlt
push
and
lcall
push
repz
iret
adc
ret
dec
pop
ucomiss
imul
ss
inc
cli
inc
imul
mov
and
lret
mov
push
sbb
lock
gs
mov
inc
add
or
div
shufps
or
and
cmpsl
mov
jge
insb
stc
sbb
repz
adc
xor
lds
imul
inc
push
dec
mov
xor
xchg
scas
daa
mov
and
pop
jp
mov
inc
insl
cmpsb
loop
movsl
in
outsb
add
enter
daa
mov
sub
sub
jl
mov
dec
cmp
test
push
add
push
bound
addr16
mov
xorb
iret
jne
js
pop
pushf
pop
icebp
add
push
stos
cld
loope
mov
cwtl
cmp
andl
mov
cmp
sbbb
sbb
push
push
add
stos
xor
je
push
push
fwait
in
jbe
adc
outsb
sub
aas
pop
cmpsl
aam
lcall
stos
fmul
pop
pop
sub
add
jecxz
mov
xlat
test
mov
jg
mov
and
mov
pop
xchg
and
fwait
jle
cmp
je
inc
xor
mov
cmp
pushf
or
inc
xchg
push
les
into
and
les
outsl
jg
push
loop
adc
cltd
fs
lock
and
outsl
lods
dec
or
mov
frstor
xor
dec
out
lea
or
push
jge
add
jae
loopne
sbb
ja
imul
mov
icebp
lock
xchg
xchg
cmp
or
jnp
and
xchg
mov
test
mov
cs
clc
sub
ret
or
inc
ds
xor
sub
xchg
repz
jp
jnp
xchg
lea
scas
insl
cmpsb
jl
pop
and
out
inc
pushf
lcall
pop
or
inc
std
mov
xchg
aas
imul
pushf
xchg
cli
jns
mov
outsb
jecxz
jp
not
add
std
lds
cwtl
xchg
xorb
lock
and
pop
add
mov
jl
mov
pop
adc
xor
mov
sbb
jb
add
rorl
cwtl
pop
insl
bound
mov
mov
dec
xchg
add
lret
hlt
es
mov
test
mov
jmp
ror
or
sub
add
mov
xlat
enter
fcomp
loop
cmp
mov
loop
adc
ljmp
fildll
addr16
out
cmp
xchg
or
push
cmpsl
xchg
filds
arpl
aam
cwtl
test
test
push
inc
xchg
mov
xchg
pop
das
sbb
push
ja
cs
mov
stos
lret
push
xchg
and
mov
fbstp
xor
fdivl
into
psubsw
add
mov
and
sub
mov
repnz
push
icebp
mov
fisttpl
das
jne
pushf
aaa
mov
add
out
out
jl
jns
cmp
in
ss
xchg
cmp
lock
cmp
jp
mov
mov
mov
lcall
cmpsl
push
in
cmp
ljmp
xchg
pusha
movsl
inc
jmp
jbe
insb
adcl
push
ja
mov
mov
or
stos
fldl
xor
adc
and
clc
jnp
cmp
jnp
aaa
push
cmp
xor
jle
in
jb
xor
pop
inc
or
inc
mov
push
rolb
sti
or
pop
or
fidivrl
mov
sbb
std
mov
cmpsb
xor
lds
mov
and
lcall
or
push
push
lahf
scas
arpl
mov
jge
pop
lds
icebp
xor
or
and
mov
push
adc
pop
loope
push
xor
xor
loope
jno
push
inc
pop
and
stos
test
jne
add
inc
cmp
cmpsb
fisttps
in
push
rcll
daa
mov
lods
sahf
jno
xor
dec
lods
subb
popaw
movsl
jns
mov
lahf
mov
sub
mov
inc
dec
std
pop
neg
jnp
push
push
or
push
xor
loope
xchg
scas
sub
mov
mov
adc
xchg
and
stos
out
das
subb
xor
mov
and
mov
sahf
sub
int
jnp
sub
mov
sub
or
mov
out
or
sub
and
sahf
fs
test
push
orb
mov
lds
call
mov
cmp
push
xor
int3
negl
in
mov
cmp
repz
into
or
cmc
cmp
dec
xor
lcall
orb
psraw
gs
stos
data16
and
sti
mov
lahf
lahf
cli
or
dec
cmp
lea
mov
pop
mul
mov
sbb
mov
adc
js
and
add
fcompl
add
xchg
pop
inc
je
pusha
pop
enter
std
xlat
pop
movsl
imul
js
mov
adc
repz
mov
mov
aad
in
lret
dec
and
mov
repz
mov
jle
sub
fadd
xor
and
adc
adc
out
inc
push
jns
sbb
inc
repz
test
inc
xor
push
jb
out
push
dec
inc
sub
je
ret
std
jecxz
adc
sbb
sub
dec
or
scas
mov
mov
dec
dec
sbb
test
push
mov
dec
das
test
mov
rcl
pop
and
jnp
rcr
add
es
orl
jno
dec
push
mov
cmpsl
mov
jb
icebp
and
push
cld
and
fwait
lret
arpl
jb
mov
and
movsb
int
out
daa
rcrb
xchg
pop
out
ret
fcomip
cltd
push
test
out
clc
in
loope
xchg
dec
sahf
or
rcrl
les
inc
inc
out
in
push
xchg
dec
mov
sbb
fimull
add
or
iret
pop
movl
push
mov
scas
daa
js
sbb
push
xchg
mov
in
adc
clc
pop
pop
push
push
es
mov
shl
push
mov
add
inc
lret
fs
cmpl
xor
outsb
cwtl
mov
or
jecxz
ss
push
ja
inc
stos
dec
stos
cmp
in
testb
or
fdivs
pop
fdivs
int
cwtl
shrb
in
cmp
out
out
mov
sub
xor
or
adc
jp
xchg
sbb
int
testb
inc
popf
in
roll
addr16
int
rclb
sbb
xchg
inc
pop
mov
push
cmp
into
popf
repz
fstpt
mov
push
push
and
test
insb
lret
jnp
inc
cli
scas
fisubs
add
pop
jmp
iret
rcr
test
fidivl
scas
pop
jge
addb
jae
lods
fs
add
or
lcall
fidivl
mov
sbb
fistpll
decb
stc
rolb
mov
mov
mov
hlt
mov
xlat
or
jo
jge
cmpsb
cmpsl
sbb
pop
or
mov
add
aad
int3
aas
sbb
pop
mulb
add
cmp
sahf
scas
in
andb
rclb
sub
mov
rcll
hlt
push
orb
cmpsb
call
mov
push
aaa
sub
mov
in
jno
cli
pusha
jl
xchg
decl
pop
lahf
sbb
stc
and
lahf
cmc
shlb
push
or
push
push
push
daa
sbb
cmpsl
rcll
sub
js
pop
jmp
push
outsb
inc
loope
movsb
iret
sub
sbb
data16
pop
dec
ficoml
outsl
mov
cmpb
sbb
in
add
and
adc
mov
loope
jp
pop
cmpb
mov
or
sub
jmp
scas
andb
aad
sub
mov
push
xlat
mov
mov
and
cwtl
mov
stos
sub
cmp
mov
lds
sarl
out
mov
mov
sbb
jae
into
jmp
push
xor
sub
outsl
cmp
int
stc
cmp
fs
insl
adc
cmp
push
addl
cli
cmp
clc
xor
sub
xor
push
inc
sub
mov
pusha
push
pop
pop
movsl
mov
imul
jbe
add
aam
xchg
sbb
xchg
cmp
push
xlat
pop
mov
lahf
mov
jg
mov
cs
aad
inc
out
js
dec
xorl
fstps
inc
gs
movb
imul
mov
lock
lahf
push
jmp
push
iret
pop
push
adc
inc
or
aas
test
jbe
dec
mov
int3
pop
jecxz
out
int
pop
into
cmp
adc
inc
mov
inc
push
mov
and
cmpl
into
sbb
aad
imul
js
das
aad
jl
mov
mov
pop
add
shll
sub
es
loope
insl
xor
rorl
leave
cmpsb
cmpsl
mov
add
icebp
stc
addl
adc
lret
shlb
push
mov
add
stc
mov
add
xor
sub
mov
aam
or
outsb
pop
outsb
push
insb
push
push
fnsave
mov
test
inc
scas
imul
jle
cmp
mov
dec
mov
xchg
xchg
lods
test
add
add
add
fsts
test
xor
xchg
imul
mov
in
inc
sbb
daa
jmp
sti
push
lds
add
xor
push
mov
or
mov
enter
dec
sbb
pop
cwtl
xchg
popf
in
inc
test
dec
or
jecxz
fwait
cmp
dec
pop
shll
cmc
sahf
mov
ljmp
push
cmp
in
xchg
sahf
xchg
fstpt
std
sub
cs
cmpl
mov
inc
mov
int
in
shlb
and
sbb
adc
xchg
or
push
xorl
or
std
aaa
mov
push
mov
or
aas
repnz
das
jnp
adc
push
enter
xor
push
iret
xor
or
in
inc
xor
mov
inc
rcrl
inc
jae
dec
aaa
inc
add
or
adc
loop
add
stc
push
sbb
xchg
or
fisubs
mov
rcrb
mov
or
ror
stc
leave
sbb
in
scas
packsswb
pop
jge
sbb
sbb
insl
aaa
dec
js
or
dec
outsb
int3
sub
pop
pop
and
xor
cmp
imul
xchg
scas
les
and
mov
jecxz
icebp
movsb
pop
inc
cmp
pop
inc
cmpsb
imul
dec
inc
call
cmp
dec
jno
xchg
daa
jl
inc
push
dec
mov
ds
js
xchg
mov
lahf
adc
dec
push
fcmovnu
jecxz
jo
inc
push
pop
add
inc
ss
in
pop
inc
push
add
jno
pop
scas
bound
loope
fstpt
jo
popf
cmp
fwait
rcll
dec
push
mov
push
mov
sbb
pop
jb
loope
iret
push
movsb
add
push
sub
fnsave
and
dec
lcall
add
shlb
add
sahf
stos
icebp
out
test
test
rclb
mov
out
lret
mov
jl
mov
out
ss
mov
and
jne
jecxz
sbb
push
ret
ror
inc
mov
stos
xchg
into
into
dec
pop
cmc
lret
xor
popf
outsl
sbb
arpl
pushf
testb
lock
xor
add
sbb
mov
scas
int
outsl
cmp
xor
test
or
lcall
test
and
pop
jl
std
adc
xlat
mov
push
add
mov
jp
clc
xchg
ficomps
stc
sbb
jne
xlat
xlat
popf
push
lcall
xchg
ljmp
add
repz
mov
nop
mov
mov
inc
ja
or
iret
add
fcom
sbb
xor
pop
movb
call
and
fstpl
add
adc
loop
pushf
fwait
mov
es
repz
inc
imul
push
jb
xor
dec
xor
sub
push
adc
sahf
popa
dec
std
mov
fldcw
mov
das
aad
and
sbb
mov
mov
out
mov
scas
cwtl
lock
test
mov
or
mov
xchg
mov
sub
mov
cmpsl
mov
dec
xor
xor
cld
js
jmp
inc
pusha
lds
or
andb
jmp
sub
jg
aam
adc
push
das
xchg
fstl
or
xchg
int
push
mov
in
lods
movsl
pushf
sarl
stos
lcall
push
cmp
test
cltd
cmp
cmp
enter
movsl
fs
jl
les
arpl
rcrb
dec
mov
shll
jnp
pop
cmpsb
sub
push
jl
lret
jbe
add
int3
decl
int3
shlb
daa
cltd
xor
xor
sbb
cld
mov
test
pop
push
dec
nop
inc
cmp
sbb
or
sbb
rorl
rorb
cmp
mov
sti
cs
mov
add
incb
int3
mov
and
ret
xchg
sub
and
sub
pop
jp
enter
je
mov
std
popa
adc
dec
popf
in
xor
mov
cmc
pop
xchg
fucomip
or
out
add
push
push
rclb
popf
inc
adc
mov
cmp
rsqrtps
push
test
jnp
movsb
xchg
js
mov
push
mov
add
pop
inc
ficoms
jae
xor
daa
or
nop
imul
mov
xchg
sub
xchg
test
push
push
imul
fiadds
pop
shlb
mov
pop
jecxz
leave
jo
mov
cmp
inc
arpl
xchg
and
outsl
jno
and
aaa
or
jo
add
int3
adc
je
push
fstps
add
push
push
scas
mov
mov
xor
out
cmpsb
out
sub
in
or
xchg
daa
mov
jno
jno
push
mov
push
lret
in
dec
stc
pop
inc
ds
lds
movsl
mov
and
add
lahf
xor
push
scas
pop
inc
test
ljmp
nop
pusha
jp
imul
add
pop
in
fistps
loope
sub
pop
mov
divl
fucom
lcall
andps
movsl
and
sbb
inc
int3
add
jmp
xor
mov
imull
dec
int
pop
mov
xor
fdivrl
xchg
sub
out
xor
frstor
jge
rcl
lock
sbb
mov
xchg
stos
and
jp
xor
fdivs
inc
clc
neg
sbb
lret
xor
mov
sub
andb
cmc
xchg
aas
xor
insl
cmp
das
push
fdivr
cmpsl
xchg
shll
jecxz
push
aad
data16
push
nop
lods
in
jp
cmpsb
adc
lcall
xor
cmp
mov
gs
ret
cmc
les
xchg
notl
ret
loopne
imul
enter
xor
sbb
mov
xlat
fdivl
sub
or
out
in
push
addr16
cs
mov
push
nop
jl
insl
dec
aas
repnz
inc
mov
xor
push
sbb
pop
repz
mov
xchg
lea
mov
mov
addl
cmp
or
xchg
xchg
jg
sbb
sbb
xchg
test
inc
dec
lods
cwtl
les
stos
jecxz
jb
mul
push
popa
cwtl
jg
inc
mov
fmull
mov
push
ss
or
jmp
inc
mov
inc
bound
lahf
movsl
repz
xchg
cmpsb
xchg
mov
cmc
xchg
or
inc
push
es
pusha
insl
adc
cmpsl
mov
inc
push
icebp
cmpsl
add
das
lret
mov
mov
and
iret
xor
clc
rclb
sub
aam
insb
ja
mov
loopne
repnz
or
jle
or
sahf
into
repz
or
sbb
sub
dec
popa
xchg
xor
bound
xchg
and
es
adc
maskmovq
testl
cmp
mov
push
test
dec
jecxz
cmp
loop
dec
sbb
loopne
rorl
rorl
push
pop
dec
ljmp
fcomps
xor
or
ret
out
xorb
push
sub
enter
lds
sbbl
mov
sahf
or
sub
fwait
xchg
insb
mov
and
pop
mov
and
out
push
inc
bound
je
addl
scas
dec
sub
jo
out
sub
and
add
mov
jp
out
cmpsb
mov
dec
xchg
mov
insb
ret
pop
jle
les
pusha
push
inc
pop
fildll
outsl
mov
add
xchg
mov
dec
mov
popf
push
jecxz
push
jl
inc
stos
test
cmp
or
push
pop
jge
push
push
fldt
ljmp
ret
lret
call
repz
pop
daa
inc
or
push
or
or
ss
bound
sbb
sbb
jl
imul
fsubp
lret
or
pop
hlt
xor
xchg
pop
cs
scas
in
mov
hlt
adcl
arpl
sbb
jp
xor
stc
mov
int3
xchg
or
mov
cltd
mov
add
sbb
adcb
call
mov
and
add
push
pop
call
push
insl
mov
or
icebp
sbb
daa
mov
lds
jl
and
test
movsl
xchg
lahf
in
and
jbe
push
orl
inc
push
mov
mov
push
push
ljmp
loop
pop
sub
in
push
pop
loope
mov
sub
cmp
cmp
jle
outsb
inc
sbb
enter
add
rorb
mov
pop
push
add
int
xor
push
push
stos
scas
dec
int
sbb
sub
push
test
and
push
mov
ret
fsubl
jne
sub
add
pop
xor
int
jg
or
and
sti
mov
dec
mov
test
ss
int
jg
arpl
jmp
std
negl
inc
aas
sar
aad
lahf
sbb
or
cmc
pop
sbb
xor
pop
outsl
ficoml
pop
loop
in
stc
pop
lahf
mov
sub
mov
jecxz
lods
lret
loop
mov
iret
sar
aad
lea
imul
test
sub
xchg
gs
nop
loopne
ficomps
mov
sbb
daa
adc
enter
cmpsl
push
xchg
fs
std
cmp
mov
arpl
mov
sarb
sti
pop
scas
int
mov
stos
adcb
ss
inc
popf
add
out
ljmp
mov
pushf
lea
xchg
test
and
pop
movsb
mov
ds
icebp
jp
jmp
and
adc
loop
inc
lahf
repnz
aas
xchg
mov
and
je
fldl
mulb
or
cwtl
cmp
mov
mov
movsb
mov
sbb
mov
cs
cli
flds
jb
fsubl
lods
lret
shlb
sub
adc
enter
insb
insl
in
cmc
dec
inc
jmp
mov
jle
pop
cld
into
faddp
lret
pop
add
int
sbb
push
jmp
shr
hlt
les
fiaddl
jmp
lcall
push
mov
sbb
movsl
xor
clc
fstps
or
lahf
daa
push
popa
sahf
loop
lods
jnp
mov
out
jno
mov
push
out
dec
int
push
dec
inc
add
pop
lahf
cltd
stos
and
dec
mov
jnp
xchg
lea
test
stos
cld
xchg
scas
sbb
lea
cld
dec
pop
stos
jne
mov
ret
add
xchg
icebp
xor
lds
xor
fistpl
mov
adc
sti
mov
ja
clc
push
dec
jbe
sbb
dec
jne
or
or
ss
push
jo
jne
ljmp
dec
and
pop
jns
mov
adcb
pop
xchg
sub
pop
int3
xor
dec
std
jp
lret
aam
jb
jns
cltd
mov
call
imul
icebp
mov
xchg
xchg
jg
jmpw
cmp
shlb
push
inc
xor
mov
mov
cwtl
ljmp
push
xor
adc
push
mov
xchg
stos
adc
loop
iret
dec
fisubrl
ret
inc
pop
pop
stc
rolb
std
jae
int
inc
or
bound
xchg
inc
loope
ds
lcall
inc
scas
jl
push
fucom
fimuls
test
outsl
mov
add
mov
hlt
into
and
mov
lea
sbb
ljmp
dec
js
int3
jmp
lock
mov
nop
push
lahf
inc
fwait
xor
test
push
scas
popa
pop
inc
and
jge
cmp
jecxz
movsb
std
leave
inc
push
mov
popf
push
in
fadds
enter
daa
mov
int
jno
inc
loopne
fs
dec
xlat
enter
sbb
jno
mov
mov
push
push
in
in
test
adcb
push
mov
pop
mov
clc
inc
pop
imul
fldenv
loope
pop
aaa
sub
ljmp
mov
nop
xor
fstpt
or
hlt
sbb
das
add
add
xor
js
lods
xor
jge
bound
inc
push
or
mov
cmp
jmp
push
sub
je
xchg
ret
mov
in
das
adcb
lods
jg
ret
pusha
mov
xor
mov
lea
std
insb
adc
mov
and
cmpsb
cmp
ret
out
rcll
sbb
out
into
ja
xor
push
xchg
xor
enter
mov
stc
adc
lret
lock
xor
and
out
and
mov
inc
popf
iret
cmp
sub
or
gs
decb
lock
fidivrl
cmp
adc
xor
loopne
daa
mov
xchg
cmp
lds
xlat
pop
cmp
sub
dec
popf
mov
sub
loopne
or
lret
add
xor
lret
inc
mov
insl
fnstenv
stc
jne
repz
mov
add
inc
in
jae
mov
cmpsl
fistl
add
cmc
pushf
pushf
push
mov
enter
fsub
mov
inc
mov
or
jb
pushf
mov
mov
cmpsl
jecxz
push
mulb
sbb
cwtl
cmc
mov
xchg
mov
dec
dec
loope
out
dec
pop
decb
icebp
sbbl
and
push
hlt
fisubl
arpl
mov
arpl
mov
jne
int3
fwait
inc
dec
cmp
jbe
jne
icebp
push
pop
out
stc
je
lret
mov
mov
and
cmp
add
ss
mov
shl
gs
dec
ret
stos
xchg
mov
jg
clc
adc
stos
xchg
mov
ljmp
js
out
jmp
xchg
notl
aam
mov
push
leave
xor
lgs
int3
add
mov
int
stos
mov
sbb
xchg
pusha
in
test
mov
sbb
sarl
dec
rcrl
stc
stos
fs
mov
add
mov
add
xor
sub
xor
dec
lock
pop
xchg
dec
mov
test
ja
mov
dec
imul
fwait
cmc
jb
dec
jmp
pop
cli
mov
cmpsl
and
sub
andl
mov
jns
pop
dec
jbe
inc
sub
sbb
jne
sbb
jp
pop
shll
jmp
mov
js
popa
mov
in
lods
mov
fildll
push
xchg
push
fimull
jmp
cmp
subl
push
or
popf
mov
insb
mov
cli
subb
xchg
fwait
adc
insb
loope
adc
icebp
pop
scas
int
pop
push
in
pop
adc
and
ret
rcrb
dec
inc
cli
mov
inc
psubw
sub
sub
add
faddl
insb
mov
xchg
scas
inc
add
imul
fisubrs
ret
dec
rol
aas
mov
push
fwait
fwait
leave
aad
jecxz
sbb
sub
cmc
cwtl
jbe
mov
jge
lret
mov
aaa
dec
ret
mov
add
jp
int3
test
fmull
addb
jo
push
push
scas
inc
or
and
push
mov
push
or
cmpsb
ja
sub
mov
sub
daa
mov
mov
inc
jb
jl
dec
fs
inc
and
ds
movsl
mov
insl
cmp
daa
add
sub
addb
adc
pop
loopne
int3
js
mov
sub
dec
and
loope
pop
jp
sbb
loopne
outsl
xlat
dec
outsb
push
imul
shlb
ja
sbb
inc
sbb
leave
add
lea
push
mov
mov
sub
adc
pop
and
lcall
fdivrl
sub
sahf
ss
pop
test
subb
inc
jg
pop
and
push
bsr
int3
in
ss
add
int
jno
popa
lcall
loop
fcmovb
sub
push
sbb
xchg
div
out
jae
mov
gs
loop
movsb
xchg
stc
int3
mov
dec
adc
lret
pusha
mov
lods
cltd
inc
push
mov
ljmp
cli
cmp
dec
cmp
pusha
mov
xorb
jb
ss
loopne
jmp
pop
clc
xchg
repz
add
add
adc
div
add
xor
sbb
popa
xchg
fwait
xlat
cltd
out
sub
push
mov
xchg
pop
pop
sti
mov
pop
and
pop
loope
nop
or
lret
mov
ret
int
fldcw
push
sti
repz
stos
nop
adc
fisubrs
call
pop
xchg
test
inc
pop
adc
lret
pushf
inc
xchg
mov
pop
pop
jg
fs
scas
adc
inc
aas
les
cmc
dec
adc
loop
mov
ss
imulb
loop
cwtl
mov
cli
mov
mov
xchg
xorl
decl
mov
jae
mov
jle
das
xor
in
sbb
jno
into
mov
shll
xchg
ss
cmpsl
mov
xchg
mov
sub
jp
and
stos
lret
std
mov
and
mov
sti
sbb
nop
and
sub
pop
sbb
xor
ret
cmp
push
cmp
mov
repz
clc
dec
out
mov
ljmp
jmp
push
fidivrl
aaa
mov
xchg
stc
inc
jg
movsb
xor
unpcklps
mov
cltd
sbb
adc
add
mov
fisttpl
sbb
std
add
sbb
sbb
stos
rorw
ret
in
push
fld
push
or
xor
jne
mov
in
xor
mov
bsr
xor
or
mov
fwait
adc
pop
aas
add
jns
decl
int3
jp
ja
cmpsl
or
dec
fstps
int3
out
in
jne
sub
mov
or
pop
jge
bound
adc
leave
in
dec
ret
xchg
pop
adc
stc
call
mov
adc
sbb
popf
dec
mov
mov
ret
mov
fildl
pusha
daa
fisttpl
xchg
and
pop
cs
add
out
std
lahf
adc
int3
sbb
popf
frstor
mov
cmp
stos
add
cltd
and
inc
pop
jnp
xchg
shrb
sub
cltd
iret
or
ret
jbe
movl
out
fdivs
adc
fisttpl
jl
in
inc
fistps
inc
xchg
add
lea
push
addr16
outsl
shl
dec
mov
cmpsl
inc
mov
hlt
fs
mov
mov
int3
push
fdivrs
mov
sbb
and
aaa
or
mov
jns
jle
jge
jae
shrl
push
gs
or
je
scas
pop
mov
cltd
cmp
push
movsb
adc
mov
cmpsb
jns
enter
daa
mov
cmp
jecxz
sbb
fs
and
mov
sarl
in
inc
sahf
movsl
stos
shll
out
int3
cmpsb
lahf
scas
aas
stos
push
cli
push
sbb
push
inc
hlt
inc
add
mov
pop
pop
lahf
mov
in
loopne
pop
jmp
xchg
enter
jp
xchg
das
cmp
stos
xchg
jle
adc
xchg
mov
aaa
xor
sbb
mov
xchg
add
imul
mov
push
int
imul
pop
lahf
shl
lcall
jbe
daa
movsl
aam
dec
dec
jae
fldcw
test
xchg
orb
jg
dec
add
lret
mov
dec
test
ss
pop
cmp
sbb
nop
neg
sti
or
aad
lret
rol
and
cmp
into
cmp
cli
fbstp
adc
adc
in
adcl
adc
xor
lods
orb
xchg
jecxz
out
pop
jno
outsb
inc
xchg
xor
sub
cmp
imul
xchg
lahf
xchg
gs
fwait
mov
pop
pop
lcall
loope
cmp
add
ljmp
sub
cmp
sub
cmp
add
out
loop
rcl
dec
xchg
ds
call
sbb
andl
repz
leave
mov
lea
dec
call
sahf
sbbb
mov
xor
adc
and
mov
inc
cltd
inc
lock
adc
arpl
jb
out
dec
mov
je
loop
jecxz
stos
mov
in
or
or
mov
aas
mov
orl
loope
cmpsl
mov
stos
mov
pop
div
or
sub
rsqrtps
mov
sarl
dec
and
push
push
add
inc
insl
lcall
cmpsl
mov
gs
add
pop
lret
insb
mov
and
mov
mov
mov
sub
pop
pop
ret
enter
test
fstpl
stos
clc
mov
xchg
or
ljmp
shrl
pushf
mov
lcall
push
jg
xor
jae
add
cltd
push
ss
test
cltd
shll
mov
cmpsb
dec
jg
out
test
or
push
mov
pop
std
mov
or
stos
stos
jmp
add
adc
ljmp
xchg
push
xor
mov
cmp
cmp
fiadds
and
cli
cmp
ja
lods
mov
dec
mov
inc
push
push
mov
adc
loope
scas
popf
mov
xchg
out
mov
jle
out
out
pop
jns
nop
sub
fistpl
jno
jl
subl
push
push
mov
mov
mov
sub
sarl
and
iret
repnz
mov
fbld
mov
jmp
into
aaa
mov
push
cmp
popf
add
fstpt
js
or
leave
jp
insb
mov
mov
scas
xchg
testb
adc
adc
sub
push
out
pop
sete
add
inc
adc
scas
jb
adc
push
cmp
dec
push
ficoml
mov
xchg
pop
aas
cs
cmp
imul
jle
jae
lds
nop
sar
dec
mov
cli
sbb
hlt
scas
shl
push
jbe
gs
jge
jl
sbb
add
or
add
jle
lods
jnp
pop
aas
arpl
dec
out
xor
mov
imul
lret
cmp
inc
jle
test
mov
in
lea
enter
daa
mov
or
jne
les
aaa
pusha
jl
lret
outsb
dec
and
jne
adc
and
mov
lahf
into
mov
test
loope
add
addl
cs
mov
pop
sub
into
push
mov
cmpsl
sub
testb
push
outsb
int3
xchg
in
mov
insb
xlat
dec
mov
and
add
popf
xor
jae
int
imulb
mov
out
push
loop
lcall
mov
sub
mov
sahf
jl
dec
test
int3
andb
jp
out
mov
dec
out
inc
cmp
mov
mov
sub
ss
cmp
xlat
xchg
std
std
lret
adc
pop
mov
mov
imul
into
and
adc
je
dec
xor
fwait
outsl
push
leave
mov
push
xor
stc
cmp
dec
mov
insl
pop
mov
lods
xor
leave
test
xchg
aas
pop
cli
mov
stos
pusha
cmp
inc
fisttpll
pusha
adc
shll
mov
cmpsb
fcoml
loop
adc
movsb
adc
ja
add
int
xchg
jo
jb
cwtl
imul
out
test
pop
adc
das
insb
dec
mov
insb
lret
xchg
sti
sbb
lret
aad
cmpsl
add
sbb
inc
jmp
inc
or
sbb
cmpsl
repz
and
test
mov
adc
sbb
mov
cwtl
pushf
popf
loope
jmp
cmp
cmp
mov
lods
aas
add
cmp
inc
ret
je
ss
jecxz
bound
std
movsb
ja
cwtl
es
mov
bound
mov
sub
mov
cmp
mov
js
mov
fnsave
lock
das
out
push
xchg
mov
mov
or
in
dec
rcll
mov
insl
sbbl
mov
fidivrl
int
jp
sbb
mov
xor
popa
xlat
pop
ficoms
mov
mov
mov
push
test
mov
shll
clc
lds
push
ljmp
mov
mov
std
notl
pop
insl
add
rolb
in
xchg
lds
xchg
test
out
pop
test
cmpsl
addl
cmp
mov
push
dec
in
add
repnz
leave
popa
inc
xor
popl
xor
mov
mov
and
mov
mov
mov
imul
in
inc
dec
fadds
xor
or
faddl
dec
xchg
aas
pop
jne
std
add
vandnps
fcoms
in
inc
or
incl
sub
or
addr16
aas
inc
mov
mov
mov
xchg
outsb
jle
pop
fs
stos
xchg
pusha
pop
dec
jae
lds
in
rcl
fsts
jg
push
push
rorl
sub
mov
mov
pop
stos
call
in
insb
and
scas
div
mov
mov
sbb
ret
dec
pop
xor
xchg
jae,pn
sub
inc
sbb
or
jb
cld
inc
fnstsw
fcmove
jmp
sahf
sbb
mov
or
sbb
sbb
jmp
repnz
daa
inc
leave
cmp
hlt
cli
aas
stc
arpl
ljmp
test
xchg
or
pop
add
and
pop
outsb
inc
out
push
sub
hlt
xor
adc
xor
pop
lds
in
js
sub
bound
rorb
add
in
je
into
enter
daa
mov
inc
cmp
rol
jl
dec
cmp
xchg
lret
xor
xchg
movsl
mov
enter
fstps
mov
mov
push
inc
pop
push
and
sbb
xchg
dec
js
sbb
mov
sub
add
clc
iret
cmp
outsb
das
test
adc
inc
or
add
aam
pop
repnz
and
add
and
xor
sbb
sbb
sub
mov
push
incb
fdivrl
lcall
fdivrp
test
popa
and
jg
ljmp
mov
sbb
and
cmp
cmp
xchg
sub
push
subl
ja
shl
mov
jb
jnp
lcall
cmc
cmp
and
lret
xchg
add
xorl
icebp
jo
fs
mov
inc
add
mov
movsl
fdivr
aam
sbb
pushf
dec
aad
cmp
rorb
iret
sub
fistl
push
fimull
mov
push
mov
adc
aaa
mov
add
push
xchg
xor
sbb
adc
xlat
push
std
fldt
mov
xchg
in
xlat
shll
test
inc
aad
and
dec
jns
push
inc
cld
test
fsts
mov
and
les
lea
inc
bnd
pushf
jmp
rclb
pop
pop
outsl
pushf
dec
int
jmp
sub
mov
inc
ror
inc
es
jb
add
mov
fninit
pushf
pop
add
jae
cmpsb
std
dec
cwtl
pop
cwtl
loope
pushl
pop
push
adc
cli
fildl
xchg
xchg
rorl
das
int
fldenv
aas
push
and
std
pop
rcrl
and
adc
xchg
icebp
cmpsl
mov
fidivrl
mov
imul
adc
aad
les
mov
std
or
outsb
sub
jno
ret
out
pop
push
test
enter
enter
sti
xchg
xchg
leave
popa
adc
xchg
test
mov
pusha
mov
rcll
test
rdtsc
pop
pop
add
or
adc
inc
inc
xchg
xchg
ret
fsts
xor
stos
rcll
mov
push
icebp
adc
add
or
xor
insb
ret
mov
xor
inc
xchg
mov
fs
inc
mov
jo
iret
ja
mov
dec
xor
jge
or
loop
fwait
mov
cld
dec
jne
push
jne
cld
mov
out
movsb
sahf
dec
jmp
sarb
scas
in
cmp
push
sbb
sub
push
pop
add
jp
sahf
push
mov
imul
pusha
stos
mov
and
jle
xchg
in
enter
and
lahf
push
xchg
sahf
or
insb
xchg
fs
subl
cs
push
ja
mov
testb
pop
mov
lods
insb
lea
pop
adc
pop
jmp
push
add
adcb
fisubl
ret
les
jmp
inc
sub
lods
jae
out
int
sbb
dec
or
in
in
inc
pop
ss
jl
xor
sahf
adc
imul
pop
fidivrs
adc
jo
mov
mov
adc
insl
arpl
mov
jge
mov
int
inc
dec
out
push
mov
push
int3
sbbb
push
push
sbb
xor
outsl
pop
cmp
lock
cmp
aam
inc
cmp
xorl
enter
daa
mov
or
jno
stc
jl
cwtl
and
add
sub
mov
sub
push
test
ja
mov
in
or
loopne
js
adc
pop
cmpsb
mov
add
sbb
dec
sub
int
cmp
mov
rclb
and
pusha
int
subb
test
pop
push
jns
mov
shll
pop
jns
push
mov
mov
clc
pop
sbb
addr16
out
fsubrl
dec
into
sub
dec
dec
sahf
ret
test
push
xor
cmp
mov
mov
add
dec
lock
ss
movsb
jae
imul
pop
notl
popf
insb
roll
inc
sbb
repz
out
adc
add
xor
cmp
outsl
adc
sbb
xor
mov
test
in
mov
repz
mov
lods
xor
push
push
out
loop
pop
push
sbb
jae
jl
data16
or
push
addr16
mov
cmp
pop
je
mov
imul
inc
outsl
add
js
xchg
testb
cmp
enter
mov
adc
cmpsl
mov
inc
mov
or
imul
jmp
dec
fsubs
flds
sbb
rep
test
pushf
jmp
inc
call
sbb
int
adc
mov
jmp
loope
pop
or
inc
lret
inc
inc
sbb
aas
inc
lret
push
jb
pop
or
je
fcmovb
jecxz
sahf
mov
mov
lret
pushf
stos
cwtl
pushf
aaa
adc
dec
sti
adc
js
sub
xor
scas
mov
popf
mov
sbb
fisubrs
lods
jl
mov
divb
and
jbe
shr
mov
inc
cwtl
or
dec
and
mov
mov
cltd
lret
mov
js
and
or
sbb
sbb
fdiv
pop
sub
mov
push
inc
bnd
clc
cmp
jle
push
adc
popa
sub
mov
out
ret
stos
adc
adc
lret
seto
add
sub
adc
aam
inc
cmp
xchg
fstl
xchg
mov
shr
and
test
push
xchg
ss
dec
sub
incl
or
mov
out
movsb
xor
push
push
mov
cmpsl
lcall
sub
ja
add
inc
shr
std
or
mov
repz
pop
pop
nop
jne
pop
mov
sbbl
imul
jl
fcoms
add
shl
add
cli
adc
and
xor
mov
xor
in
dec
insl
pusha
xchg
or
sub
rcr
xchg
das
out
cmpsb
cmpl
push
fcomps
jns
cmp
xor
adc
insb
clc
and
roll
mov
adc
adc
lods
in
iret
xchg
test
cwtl
xor
pop
mov
lock
jae
hlt
jo
push
movl
inc
fisubrl
leave
cli
xchg
popa
enter
cmp
imul
push
ficomps
lds
mov
mov
repz
hlt
nop
cmp
arpl
mov
mov
xor
sbb
pop
mov
or
ds
mov
fcomps
push
stos
push
icebp
pop
mov
lret
scas
fwait
pushf
add
cmp
and
aas
mov
push
xchg
jmp
jnp
inc
xchg
dec
pop
xchg
sub
mov
dec
cmp
ret
jl
je
ja
mov
jno
and
jns
or
pop
adc
push
inc
mov
test
inc
mov
test
pop
mov
mov
loopne
mov
xor
popf
sub
ja
cmp
pushf
dec
outsb
cmc
pop
jmp
mov
movsl
mov
cmp
call
pushl
sub
push
int
testb
sbb
pop
fwait
cs
lcall
mov
sub
shll
sahf
and
mov
jg
xchg
jae
push
int
mov
aas
mov
push
mov
cmp
or
xor
aam
fs
fadd
push
dec
xor
sbb
push
adc
leave
lahf
sbb
leave
cmc
fbstp
xor
sahf
loop
nop
xchg
pop
fiaddl
adc
pop
stos
inc
mov
ljmp
std
pop
cli
cmp
les
mov
and
call
push
pop
xchg
loop
adc
inc
imul
xor
xchg
mov
test
mov
aam
or
mov
aam
cltd
jmp
in
lods
sub
and
add
push
icebp
nop
push
lahf
push
dec
aaa
test
inc
and
fnstcw
pushf
lret
repz
sub
lahf
adcl
and
bound
adc
and
jmp
pop
ficomps
mov
inc
push
jmp
inc
pop
adc
aas
fbld
jb
in
and
xchg
or
adc
mov
bnd
cwtl
push
sbb
popa
mov
inc
cld
andl
mov
mov
mov
jg
mov
mov
lods
and
jmp
es
ss
pop
dec
sbb
push
push
mov
pop
lods
ret
cld
sti
pop
mov
sub
or
and
cmpsl
sar
pop
cmp
jae
scas
sub
sub
adc
add
lods
push
or
fnsave
pusha
xchg
xchg
add
jae
les
inc
popa
aas
dec
leave
lods
push
pop
pushf
out
mov
push
jmp
and
add
jle
sub
lret
add
mov
jne
xchg
mov
dec
sbb
in
fs
adc
xchg
mov
roll
jbe
test
cmp
mov
add
cmc
jmp
enter
xchg
pop
xor
mov
das
mov
pop
test
out
insl
ja
rcl
dec
sbb
inc
push
repz
push
fwait
sbb
jne
and
push
out
bound
shlb
add
in
sub
cltd
out
xor
cld
fwait
and
mov
mov
ds
mov
in
inc
jle
mov
cmpsb
pusha
cs
fbld
rclb
xchg
inc
pop
jno
mov
jle
or
ljmp
dec
mov
push
je
xchg
stos
inc
sbb
and
push
jnp
aaa
and
mov
sub
out
mov
pop
fisubl
inc
inc
sbb
mov
or
jecxz
xor
xor
inc
jge
mov
cmp
imul
in
fdivrp
mov
movsl
shrb
mov
inc
xchg
lahf
nop
jmp
loop
sbb
gs
inc
xor
les
mov
jo
arpl
pop
cvtdq2ps
xorl
aam
push
ret
mov
ja
push
stc
jb
or
movsb
lret
push
in
arpl
sub
xor
mov
idivb
inc
mov
jno
jae
jl
mov
dec
loopne
adc
pushf
pop
push
int
adc
cmc
mov
dec
fbstp
sbb
push
test
or
movsl
pusha
imul
pop
lret
js
les
jnp
push
arpl
loope
mov
adc
mov
outsb
pop
xor
add
fcoms
int3
push
nop
add
enter
movsb
lods
sub
push
ret
int
adc
sub
push
ficompl
outsb
xchg
hlt
fdivrl
dec
sub
sbb
mov
test
into
call
mov
jmp
ret
mov
into
mov
mov
cmp
ret
ljmp
xchg
add
out
xor
jmp
lods
pop
outsb
cmc
nop
out
mov
outsl
rol
repnz
ret
push
add
adcb
jecxz
lretw
lods
add
dec
mov
xchg
out
out
ds
insl
loopne
xor
or
cmp
add
incb
gs
cmpsb
loopne
repnz
adc
push
test
xor
pushw
xor
xchg
jl
fcompl
ret
xchg
out
adc
push
in
sbb
outsb
cs
adc
in
nop
das
xchg
lods
dec
xchg
jmp
sub
cmc
in
les
div
dec
cmp
mov
push
or
mov
in
pop
cmp
ret
xchg
pushf
dec
mov
push
xchg
fistps
ja
fmuls
movb
xchg
aas
jle
adc
scas
out
je
iret
jg
leave
ljmp
inc
push
ret
cwtl
adc
pusha
mov
cmp
xchg
dec
dec
adc
xchg
in
mov
xchg
scas
mov
int3
out
rorb
push
ljmp
jns
and
mov
outsb
icebp
es
fldcw
insl
sbb
cmpsb
sub
fidivl
cld
shlb
sub
add
mov
pop
out
xchg
rolb
movl
xchg
xchg
adc
fstp
mov
mov
inc
xchg
inc
cmp
adc
lods
shll
mov
mov
xchg
mov
shlb
add
fstpl
sub
pop
mov
icebp
pushf
xchg
sbb
dec
sbbb
test
in
xchg
xchg
sbb
xchg
rcrl
add
push
ficoml
add
pop
xor
push
or
ffreep
xor
jne
mov
sub
cmp
pop
mov
es
dec
push
mov
inc
add
mov
fwait
ds
arpl
dec
shll
xor
inc
in
bound
outsb
in
and
out
push
sub
negl
mov
xchg
sbb
shrl
cld
jle
mov
bnd
pusha
leave
push
cmc
filds
add
scas
jbe
xchg
lds
adcl
push
pop
mov
popf
xchg
adc
mov
cmp
cmp
sub
inc
jnp
jno
scas
addb
adc
popf
inc
ret
ret
xchg
push
inc
dec
sahf
aam
mov
push
inc
and
mov
cld
pop
xor
inc
fnstenv
ficoml
sub
in
leave
pop
adc
mov
data16
rolb
repnz
fs
push
inc
dec
hlt
es
jbe
xchg
adc
jg
jo
fnsave
andl
or
push
movsb
add
jge
int3
inc
push
movsl
pop
sub
push
mov
or
cmp
cmpb
pop
sub
test
and
push
xor
and
or
imul
adc
enter
daa
mov
clc
cmp
jno
pushf
add
dec
dec
or
ds
shll
nop
scas
push
lahf
imul
mov
push
fsubrs
cmp
cwtl
mov
pop
icebp
and
out
pop
arpl
inc
push
cmovns
popa
cmpl
cmp
rcll
mov
sbb
arpl
push
sbb
clc
roll
orl
mov
int
adc
inc
pop
cltd
cmc
push
lcall
std
fsubrl
popa
out
sub
sub
sahf
stos
cmp
sub
popf
jg
push
inc
mov
aam
mov
push
and
jle
iret
sahf
push
cmp
jle
out
push
ret
xchg
rorl
push
sbb
pop
into
popl
xchg
xor
test
add
in
daa
cs
int
and
pop
sahf
sbb
dec
adc
mov
out
gs
mov
cmp
cmp
add
or
xchg
mulb
add
push
mov
add
imul
ja
xchg
aas
adc
repnz
outsb
call
push
decb
outsb
pop
sub
and
sti
adcl
aad
in
push
nop
or
sahf
inc
dec
cmp
sub
pop
les
add
sbb
ret
movsl
or
pusha
call
cwtl
jmp
pop
out
push
aam
mov
ret
fucomp
inc
xchg
out
hlt
aas
roll
xchg
lahf
inc
xchg
cmp
sbb
cmpsb
mov
sti
popf
je
mov
fdiv
sbb
jg
aad
out
outsb
cwtl
int
or
int3
nop
mov
test
dec
cmp
mov
sarl
mov
inc
aaa
lock
lret
js
jb
mov
fisttpl
es
cmpsl
jecxz
add
inc
dec
adc
dec
cmpsl
mov
push
mov
or
notb
lret
push
shl
mov
pop
fadds
mov
jns
sub
push
xor
sub
add
ret
and
mov
fldl
sbb
in
int3
jae
andb
stos
mov
popa
insl
shlb
ds
loop
paddsw
and
xchg
ljmp
shrd
jb
insl
mov
in
xor
fidivl
notl
dec
jmp
addr16
xchg
sbb
sbb
jae
shl
push
in
push
or
jge
or
add
lret
jmp
mov
cmpsl
or
dec
xor
sbbb
jo
mov
pop
pop
mov
sbb
int3
mov
cwtl
or
or
inc
loop
insl
sub
dec
add
jecxz
fs
out
and
je
test
outsb
outsb
xchg
daa
das
out
adc
cwtl
or
das
into
adc
mov
mov
ret
mov
lods
push
jle
ret
jo
stc
and
pusha
fs
cld
fbld
out
ljmp
xchg
nop
lcall
and
cld
mov
repnz
mov
push
adc
jnp
outsb
ret
inc
adcb
out
js
inc
iret
movsb
pop
push
ret
cmp
push
adc
popf
outsl
inc
daa
sbb
or
flds
jae
pop
inc
fcmovu
dec
pop
insb
xchg
xchg
in
sbb
mov
imul
ffree
mov
jno
mov
in
jne
leave
lea
shll
idivb
jge
lock
sbb
arpl
inc
sbb
add
rorl
pop
sub
push
lcall
jo
jo
scas
cmp
adc
cmp
mov
ja
fisubl
mov
cmpsb
sbb
ret
fxch
adc
arpl
mov
inc
cmp
call
xchg
dec
mov
fsubs
fildl
and
lcall
mov
lods
enter
inc
inc
ljmp
pop
sbb
les
mov
outsb
inc
loope
push
jle
out
in
push
les
adc
mov
sub
jbe
cli
sbb
ja
add
lods
push
xor
xor
sbb
mov
cwtl
aas
pusha
pop
sbb
stos
lcall
dec
mov
xchg
sahf
dec
mov
test
int
xor
aas
mov
repnz
mov
and
and
pop
cmp
cmp
notl
faddl
cmp
pop
mov
pop
out
sbb
jecxz
cmc
push
or
xor
push
pop
stc
test
fs
xor
mov
mov
lods
shll
mov
mov
cli
sarl
aaa
xor
xchg
int3
cmp
or
sbb
std
add
pop
lock
push
adc
test
test
add
incl
xchg
add
int3
sbb
cmp
pop
xlat
xchg
enter
stos
dec
mov
out
std
adc
xor
cmp
xchg
bound
nop
in
xchg
mov
imul
pop
sbb
jb
test
mov
call
pop
jbe
pop
mov
push
sbbl
jecxz
xchg
jne
inc
out
dec
inc
lods
insl
mov
rorb
leave
and
je
adc
jecxz
inc
jle
ret
std
mov
out
mov
pop
in
pop
dec
into
subl
cmp
lock
sahf
mov
sbb
mov
cs
sub
into
mov
movsl
clc
shrl
arpl
es
ljmp
push
cwtl
cmpsl
scas
pop
inc
mov
in
cltd
cld
jl
mov
jne
jno
jae
shll
test
shrb
add
sbbb
aam
sti
enter
lock
push
add
sub
clc
daa
popa
fcoms
sbb
dec
mov
mov
dec
loopne
xchg
xor
inc
fisubl
andb
cltd
shll
test
adcb
jl
xchg
xchg
dec
aad
push
jecxz
test
jl
xchg
cmpsl
sbb
pop
pop
pop
stos
mov
push
push
and
add
xchg
mov
incl
aad
or
pusha
popa
xor
in
mov
mov
jp
pop
lock
push
mov
jno
hlt
dec
hlt
fwait
jmp
or
insb
xlat
fwait
pushf
cmc
adc
jne
shrb
mov
jnp
lret
jns
jge
in
or
xchg
ficoms
adc
jge
in
push
mov
movd
cmp
inc
mov
xor
jle
mov
in
shll
mov
jg
mov
mov
mov
sub
in
mov
mov
xor
stos
lcall
insb
movsb
cmp
jnp
xor
scas
dec
std
dec
push
arpl
arpl
push
lds
ret
push
jg
fiadds
xor
mov
inc
sub
daa
or
push
add
inc
xlat
mov
xchg
mov
sub
cmpsl
in
fsubrp
jmp
lds
cmp
es
aas
mov
fs
mov
call
mov
sbb
dec
mov
add
mov
int3
sbb
pop
mov
pushl
ss
scas
pop
rcrb
iret
pop
xchg
cs
pop
movsb
imul
cmpsb
adc
in
fdivp
or
or
daa
scas
pop
lret
lret
add
pop
in
jl
xchg
push
dec
sub
pop
movsl
loop
scas
and
cltd
or
xchg
call
test
outsb
push
mov
mov
cmpsl
pop
aas
enter
mov
dec
push
addb
jae
sub
fs
xchg
iret
mov
adc
imul
orb
inc
add
sub
push
lret
cmp
int
les
sub
pop
mov
lcall
dec
fdivrl
jle
ret
xchg
jbe
icebp
sbb
aam
and
xlat
mov
inc
outsl
mov
je
and
fisttps
fdiv
loopne
not
jns
lret
push
mov
jo
sbb
cmc
cmc
in
xor
stos
outsl
outsl
outsl
and
loop
mov
outsb
push
add
jle
mov
inc
and
mov
mov
xor
and
imul
call
loopne
add
pop
packssdw
adc
icebp
pop
adc
mov
add
mov
sbb
je
mov
rclb
and
push
stos
mulb
pop
in
jecxz
loope
imul
adc
aad
sub
nop
rcr
dec
mov
or
jb
fstps
lock
mov
clc
stos
imul
call
xchg
test
pop
push
mov
adc
sub
loope
pop
cmp
cmp
enter
pop
out
mov
imul
add
inc
jecxz
testb
xor
loopne
dec
mov
data16
dec
comiss
fistpl
sub
sti
mov
pop
jne
jecxz
imull
pop
imul
mov
mov
mov
es
test
mov
inc
cmpsl
scas
mov
pop
icebp
mov
fidivrs
lret
in
mov
xchg
cmp
and
adc
mov
sti
or
aam
inc
xor
push
push
daa
aam
push
jg
clc
bound
sub
nop
scas
daa
popa
fwait
out
lods
adc
or
mov
fcoms
push
lods
fwait
packssdw
sub
xchg
sbb
test
mov
dec
add
dec
mov
sbb
je
sbb
sub
pop
push
push
es
mov
das
push
add
scas
inc
in
jmp
jno
xor
xchg
or
xchg
ja
xchg
cltd
lret
repnz
mov
shl
xchg
ja
cmp
dec
out
pop
inc
sub
push
nop
fwait
lret
andb
pop
cmp
sub
mov
stc
loop
fimuls
bound
jbe
pop
out
in
lcall
xchg
sub
enter
push
je
call
scas
push
and
cs
mov
cltd
in
in
stos
punpcklbw
pusha
dec
xchg
nop
jb
jmp
es
and
cmpsl
mov
stc
mov
jo
out
stos
or
mov
sti
jnp
mov
scas
stos
test
mov
cs
outsl
iret
call
sbbl
sbb
jae
or
cs
iret
cwtl
inc
push
pop
mov
scas
inc
jle
adc
xchg
sbb
js
imul
aas
lds
lcall
fs
xchg
xor
leave
jnp
add
pop
in
arpl
enter
xchg
jge
loop
sbb
xchg
jle
add
cmp
int3
push
cmp
add
test
in
push
pusha
mov
xor
xchg
xchg
stc
scas
notb
push
movsb
notb
push
and
cmpsb
xchg
xchg
in
lds
out
push
jb
daa
scas
jp
cmp
out
pop
jl
fisttpll
pushf
imul
sub
and
sbbl
pop
adc
cmp
hlt
ja
fcompl
outsl
fstpt
adc
sub
dec
mov
cmpsb
mov
inc
cmp
cwtl
outsb
in
lds
inc
mov
lcall
sbb
enter
sbb
into
mov
sub
pop
lcall
jo
sub
sub
jle
test
scas
pop
jg
xchg
mov
lret
in
stc
mov
mov
push
add
cwtl
lods
mov
fsubrs
fwait
adc
pusha
inc
das
rcll
jp
fistps
sbb
adc
cmc
lods
mov
inc
outsl
dec
clc
or
stc
repnz
mov
mov
push
cwtl
and
popf
arpl
gs
push
out
fistpll
cmp
xor
add
add
shlb
loopne
fstl
adc
mov
adc
xchg
dec
add
xchg
mov
repz
jmp
popa
mov
les
bound
pop
mov
dec
nop
fwait
and
dec
adc
loop
ror
cld
les
cmp
xchg
mov
call
adc
xor
adc
mov
pushf
cmc
outsb
sub
fnstsw
inc
jecxz
jmp
jb
les
je
test
jecxz
mov
testb
std
fsubrl
incb
mov
or
adcl
int
mov
cmpsb
mov
sti
inc
lock
out
loope
sub
fnstsw
cmp
mov
enter
push
lret
shrb
mov
andb
cmc
xchg
icebp
xchg
xchg
cld
rclb
lods
mov
insl
lods
or
pop
mov
into
inc
and
outsb
pop
sbb
push
in
ret
iret
and
push
fld
fnstsw
jnp
popf
inc
stc
xchg
aas
repnz
ljmp
lods
jg
xor
adc
mov
in
bswap
sarb
aas
add
test
ja
sbb
ss
push
ds
pop
xchg
jns
adc
int
pop
add
add
add
lret
inc
pop
inc
xor
jno
xor
mov
inc
mov
add
pop
lea
ja
popf
ret
push
inc
inc
pop
jo
or
cmp
fwait
cli
rorl
jne
jecxz
mov
and
out
mov
add
jns
repnz
mov
jnp
out
shl
sub
jecxz
add
jb
jp
jmp
movsl
mov
punpckldq
in
test
pusha
xor
push
mov
arpl
scas
jmp
icebp
cmp
push
push
jmp
arpl
xchg
push
scas
add
stos
sbb
and
mov
shrb
icebp
mov
ret
iret
rcrl
or
scas
pop
in
mov
out
jae
stos
mov
or
dec
mov
inc
aad
rcr
popa
inc
insb
xchg
imul
imul
push
lds
movsb
sbb
lock
mov
in
je
bnd
hlt
push
add
arpl
outsl
jge
mov
sbb
aaa
jg
loop
idivl
add
in
int3
out
sub
out
adc
inc
dec
jecxz
loop
dec
jo
mov
dec
and
sti
xchg
pushf
pop
call
push
jo
jmp
lods
mul
enter
daa
lods
pop
inc
cmp
cmp
cmpsl
stos
jl
stc
sub
ds
aas
dec
movsl
lock
cld
aam
lahf
in
aam
cmp
test
add
mov
cmp
add
sbb
fnstsw
cmp
cmc
pop
sub
sarl
cmp
add
inc
sarb
pop
pop
mov
subb
xor
xor
lods
push
push
shrl
xchg
sub
lcall
out
ret
add
add
ret
push
sub
shll
cmp
adcb
jg
mull
mov
mov
and
out
inc
cmp
push
xchg
testl
std
shrl
negb
adc
loopne
sbb
out
xor
shlb
cmp
stos
stc
test
push
xchg
pop
pop
jp
xchg
mov
add
mov
cli
insb
adc
xor
cmp
push
and
inc
jbe
repz
imul
lret
dec
or
dec
mov
imul
sub
mov
test
add
dec
aas
or
cmp
mov
in
das
inc
pop
sti
aas
scas
ucomiss
push
inc
aad
sti
mov
jbe
jns
jno
test
xchg
mov
fmulp
les
mov
mov
orl
fldt
xchg
sub
loope
pop
sahf
push
mov
cmp
pop
or
inc
jnp
cmpsl
inc
jle
aas
cltd
dec
and
mov
dec
jns,pn
je
lock
adc
xchg
mov
std
subl
mov
iret
or
lock
mov
cs
hlt
dec
in
cwtl
fstpt
je
xor
push
mov
add
das
lds
mov
mov
stc
pop
rcll
rolb
fisubrl
insl
mov
pop
and
fld
jno
imul
lret
ret
mov
je
mov
cmc
jnp
shlb
jno
aam
xlat
push
ret
pop
lds
pushf
into
pop
frstor
xchg
adc
ljmp
push
lods
ljmp
out
js
dec
xchg
push
icebp
cmp
dec
out
sub
lock
jbe
aas
test
add
shl
xor
shrl
inc
xor
sbbl
dec
cmp
in
cwtl
sub
or
adc
in
pusha
push
loopne
add
jne
sub
bound
add
mov
jl
imul
scas
test
inc
hlt
fsts
inc
loop
fwait
sub
xchg
aam
jne
add
rcrb
out
pushf
std
mulb
aam
jns
mov
mov
lcall
or
inc
shlb
mov
inc
mov
sbb
mov
jle
sarl
mul
adc
cmpsl
push
ror
ss
jmp
mov
xchg
dec
push
sub
cmp
mov
out
fwait
inc
stos
repz
pop
and
aas
insb
jnp
or
movsb
push
cmp
adc
test
iret
and
out
ret
and
inc
orl
jae
mov
inc
xor
das
push
push
mov
ficoml
and
outsb
lock
mov
lds
mov
cmp
enter
xchg
hlt
popf
je
arpl
jnp
push
arpl
pop
mov
ds
or
shlb
add
xchg
add
fiaddl
adc
add
jo
add
mov
pop
and
stc
shll
sbb
sub
xchg
iret
imul
lods
dec
adc
jae
push
jno
test
jmp
pop
outsb
dec
xchg
movsl
testl
lahf
add
mov
sti
shrl
iret
jo
inc
es
inc
std
add
pop
mov
js
mov
pop
sahf
push
xor
loope
insb
pop
sub
dec
fnstcw
mov
push
push
adc
cli
inc
stos
pop
cmp
sbb
fdiv
add
popf
or
rcrl
mov
sub
lcallw
js
out
subb
nop
icebp
js
ficompl
jno
rolb
jg
push
mov
jae
mov
mov
push
sub
sar
ss
cmpsb
and
mov
or
testl
cmp
mov
cmp
ret
cmc
cmp
pop
xor
inc
sub
lods
dec
loop
das
mov
shrd
adc
mov
data16
mov
fucom
mov
cli
lahf
imul
sub
cmp
jbe
or
inc
push
sbb
loopne
lret
insb
sti
mov
and
jle
jle
or
movsl
cmp
push
cltd
xchg
push
add
call
xlat
lea
lcall
mov
mov
cs
cwtl
aad
clc
nop
push
loopne
dec
rclb
sbb
aas
xchg
ja
mov
repz
in
mov
mov
mov
sbb
sbbb
adc
rcrb
fwait
inc
adc
loop
dec
pop
imul
and
lods
inc
add
add
add
jb
xchg
je
lea
test
in
sub
jb
je
xchg
mov
sbb
jecxz
les
rol
fldt
jp
or
jo
hlt
ljmp
push
pop
inc
mov
push
adc
shll
arpl
pop
jl
insl
xchg
dec
cli
imul
stos
out
cmp
inc
inc
jl
sub
lret
xor
mov
jnp
movsl
mov
adc
psrld
sub
aam
push
fadd
in
lods
in
push
pop
push
rcr
jbe
clc
adc
xchg
mov
scas
adc
xchg
and
push
xor
mov
fistl
xchg
dec
xchg
push
call
mov
add
loop
cltd
lods
sbb
test
or
aad
movsl
dec
in
sub
rcrl
sbb
mov
mov
adc
stos
xchg
add
add
incl
xor
jl
mov
mov
mov
mov
push
mov
ja
icebp
dec
dec
shl
inc
mov
or
pop
xor
jo
shlb
test
out
jnp
mov
jns
clc
ret
into
inc
xchg
sbb
loop
loope
and
fnstcw
jp,pn
fwait
or
xchg
adc
mov
in
pop
dec
jle
add
sbb
jmp
imul
jbe
xchg
or
jmp
xchg
or
popf
mov
out
mov
sub
push
xchg
and
push
xchg
dec
jnp
fbstp
scas
aam
fs
jg
add
mov
push
pop
ret
adc
cs
mov
dec
inc
ss
rorl
mov
inc
shl
and
data16
mov
and
fidivs
lds
jmp
mov
mov
xchg
loopne
push
arpl
or
jge
stc
lahf
sbb
lds
or
fucomip
add
xor
push
or
or
pop
repnz
xchg
and
imul
movsb
xchg
lahf
sbb
push
in
jbe
push
xchg
imul
testl
cmpsb
adc
jno
test
jl
lods
jbe
jmp
inc
scas
movsl
inc
mov
xor
lahf
and
pop
push
fidivs
aad
lcall
sarb
mov
dec
pop
fst
inc
push
fadds
jmp
pop
sub
xchg
into
cmp
aad
or
testl
adc
cmp
dec
mov
add
imul
xlat
lock
pop
rorb
pop
xchg
stos
push
push
iret
daa
sbb
sub
out
jg
bound
inc
push
repnz
sub
pop
addl
and
lret
jbe
popa
shlb
dec
push
inc
fsub
jmp
test
xchg
jo
pop
jbe
mov
js
into
loope
dec
cmc
add
outsl
jmp
test
pop
int
stc
pop
and
fs
pop
ds
lods
push
pop
rorl
mov
aas
cli
sarb
xor
pop
pop
cmp
outsl
jge
and
jge
and
hlt
pop
mov
add
repz
out
adc
stos
pop
add
mov
sbbl
int3
ja
sub
mov
mov
add
push
dec
xchg
aad
pop
test
dec
das
sbb
inc
mov
lock
les
sahf
sub
mov
jp
sbb
std
outsl
ffreep
xchg
out
pop
and
adc
sub
test
pop
int
inc
mov
pop
inc
xor
and
xlat
mov
mov
nop
xor
jecxz
sarl
adc
std
rcr
cmpsb
cwtl
das
sbb
fsubr
pop
mov
leave
or
mov
inc
xor
mov
cmp
das
adc
mov
gs
and
and
mov
mov
loopne
jmp
outsb
and
cmc
adc
stos
pop
jle
aas
mov
icebp
pop
push
pop
cld
push
lahf
out
lret
mov
bound
mov
xor
rolb
ljmp
mov
dec
push
and
fucomp
cmp
dec
repnz
cld
arpl
ljmp
stos
lods
shlb
sub
inc
out
ds
xchg
xchg
and
movntq
jo
in
addl
test
mov
rcrb
sbb
mov
pop
add
enter
mov
add
sbb
push
lcall
cli
rorl
sbb
mov
mov
mov
add
adc
mov
loope
dec
mov
insl
inc
and
adc
stos
ficompl
push
sbb
jne
imul
xchg
push
out
pop
mov
dec
jns
lock
in
adc
xchg
imul
sub
aam
es
or
add
mov
pop
cli
adc
dec
mov
in
addr16
pusha
push
shll
sbb
fcoml
jo
adc
dec
jmp
mov
mov
mov
insb
pop
push
stos
fld
mov
fnstsw
test
je
scas
aaa
jecxz
push
das
add
lcall
ret
movsl
pop
xchg
fistpl
jae
sbb
inc
cmp
gs
mov
xor
jp
or
dec
divl
push
sahf
pop
ficoms
cmpsb
outsl
repz
mov
fisubs
push
sbb
hlt
xor
arpl
mov
jge
je
sbb
rorl
mov
add
mov
stc
pop
jae
mov
in
inc
and
std
ret
jb
push
and
cwtl
sbb
push
pop
cmp
mov
sub
push
stos
es
cmp
test
jno
stos
push
dec
pop
jns
ds
movsl
add
ret
mov
push
mov
aad
into
daa
mov
cmpsb
aaa
inc
inc
stos
cmp
sub
pop
add
ss
movsl
mov
sbb
mov
loope
mov
cmp
or
outsb
jo
and
mov
lret
cmp
sub
enter
cmp
xor
dec
push
fidivrl
lock
push
sub
and
adc
push
lcall
cs
aas
push
sub
es
and
sti
subb
in
mov
in
clc
mov
sbb
mov
sbb
fsubp
movsl
movsb
outsb
popa
cmp
fwait
pusha
pop
testl
lahf
rorb
test
mov
xor
or
repnz
jp
into
push
fs
int
loop
lods
cmp
shl
mov
or
xor
mov
or
data16
outsl
push
loopne
pop
and
outsl
fcoms
mov
adc
add
add
sub
cmp
pop
stos
sub
movsb
imul
add
sti
dec
dec
shrl
fmull
nop
pop
lock
mov
fldcw
sti
je
ret
mov
sbb
js
and
adc
and
sbb
mov
mov
add
pop
imul
mov
jbe
jl
or
movsb
dec
xchg
xchg
mov
jecxz
mov
repz
js
jns
ljmp
mov
fs
repz
cmpsb
inc
pop
fisttpl
divb
mov
mov
push
lock
mov
js
ja
js
sbb
jmp
push
mov
dec
insl
push
mov
dec
lock
push
cmpsl
test
jbe
icebp
out
mov
cld
jle
xor
push
mov
mov
pop
push
addr16
rcrb
xor
aam
test
ret
or
push
in
mov
clc
mov
fsts
iret
fimuls
lods
sub
mov
mov
push
sahf
push
movsl
cmovbe
call
test
push
mov
test
and
xchg
pop
sbb
mov
rcll
bound
pop
stos
bound
repnz
mov
sub
cmp
push
or
adc
mov
test
loopne
jns
daa
ja
push
or
inc
mov
int3
mov
mov
rorb
add
mov
mov
lret
out
cmp
mov
in
cmpsl
sub
and
sub
iret
imul
or
dec
mov
insl
movsl
mov
lret
pop
push
jle
pop
jno
sub
push
pusha
mov
out
mov
scas
pop
imul
addr16
xchg
sbb
or
push
jbe
in
pushl
push
push
stos
jl
stos
dec
pop
in
hlt
aad
insb
es
xlat
scas
lcall
adc
mov
ret
adc
sub
inc
movsb
jbe
jae
lret
cmp
ljmp
add
inc
shrl
pop
fisubrl
pop
inc
sbb
push
mov
mov
and
mov
xor
push
hlt
jle
pusha
arpl
sub
jbe
xorl
aaa
jnp
stc
or
adc
ror
fwait
lea
mov
sarb
push
inc
scas
push
in
xchg
and
and
js
pop
movsb
lods
and
push
lods
push
lahf
cmpsb
and
cmp
dec
mov
enter
daa
test
icebp
pop
jno
repnz
adc
stos
dec
dec
cld
xlat
pop
push
movsl
or
and
cmpsl
lahf
popa
sub
lret
lds
push
xor
mov
inc
nop
cmpsb
pop
sub
push
js
cld
inc
pop
pop
fidivl
push
mov
or
popa
mov
arpl
mov
lcall
inc
enter
js
mov
mov
xor
adc
in
xor
cmc
jg
pop
xchg
mov
lcall
cwtl
faddl
xor
test
int
ret
dec
push
jg
fucomp
mov
jbe
mov
mov
pushf
scas
and
cmp
sbb
fcoms
dec
testl
inc
roll
mov
dec
sbb
cmp
into
cmpsl
xor
cmc
popl
xor
xchg
imull
push
lret
loop
movsb
mov
fs
rclb
loopne
cld
gs
subl
adc
mov
push
xor
fidivs
add
addr16
jg
lock
loopne
inc
into
pop
leave
scas
sub
cltd
cmp
imul
dec
add
and
xchg
push
imul
xchg
mov
jae
dec
rorb
push
jb
mov
mov
cs
inc
nop
aad
dec
rcll
in
and
inc
loopne
aad
in
push
les
cli
sub
mov
mov
call
nop
scas
inc
pop
xchg
cli
adc
jmp
dec
jno
jmp
and
pop
or
cmp
inc
push
cmc
aas
adc
mov
dec
or
add
jecxz
out
notb
cwtl
pop
cwtl
movsl
loop
mov
adc
orl
push
mov
adc
lock
mov
fdivrl
repz
push
sbb
insl
cmp
mov
jmp
outsl
cmpsl
test
xchg
mov
kaddw
test
and
mov
nop
mov
mov
mov
shr
outsl
pop
sub
stos
aam
jmp
ret
lcall
fnstsw
xor
les
adc
inc
add
popa
and
dec
dec
mov
add
outsl
xchg
and
pop
shld
sbb
add
adc
fidivs
fisubrs
lea
mov
test
inc
ds
in
sbb
add
dec
stos
push
jae
push
xchg
fwait
out
sbb
fdivrl
ret
or
push
jne
push
mov
pushf
mov
cmc
xchg
mov
xor
mov
dec
cld
dec
cltd
sti
rolb
call
jbe
in
pop
dec
sbb
jne
gs
sbb
fisubs
sbb
jns
into
mul
jne
mov
out
rorl
xchg
ss
lahf
or
add
in
sbb
push
ds
jle
cld
stos
in
popf
pop
pusha
cmp
cmp
pop
mov
xchg
andb
jmp
call
pinsrw
mov
popf
es
lds
ljmp
and
adc
insb
xchg
mov
jnp
in
adc
push
push
addb
pushf
ljmp
add
cmp
ss
mov
jle
fwait
testl
fildl
mov
fiadds
js
ja
inc
mov
test
leave
inc
addr16
hlt
leave
test
arpl
imulb
jge
adc
xorb
outsl
push
or
clc
xor
insl
outsb
push
mov
insl
xor
mov
gs
xor
and
adc
das
enter
loop
push
sti
out
lea
das
sbb
enter
daa
test
jl
aas
in
fnsave
pop
adc
dec
ss
adc
jo
orb
push
and
push
sti
sub
inc
bound
arpl
or
add
out
pop
lcall
loope
mov
sub
xchg
cmp
xor
pop
mov
shlb
sub
push
bnd
out
js
add
into
cmc
xor
cmp
int
ss
sub
cmp
adc
lcall
out
fsubrl
fildll
dec
and
pop
test
stc
aad
sbb
popa
pop
mov
xor
mov
xchg
fsubrl
sub
fdivrs
adc
into
testl
cmp
out
popa
sub
sbb
shl
mov
pop
cmc
push
and
push
outsl
mov
loop
fidivs
cmp
cld
cmp
jae
das
mov
popa
lods
or
mov
cli
imul
xor
push
push
or
stos
mov
or
pop
call
and
imul
mov
cmpsb
lret
movsb
xchg
sbb
mov
cmp
sub
xlat
mov
icebp
mov
inc
mov
stc
cs
movsl
jle
ja
xor
dec
mov
inc
rep
mov
les
int3
mov
cmp
dec
xor
call
cvtps2pd
cmp
add
lret
pushf
mull
push
jmp
or
pop
scas
jb
inc
push
out
in
inc
test
lahf
aas
mov
and
scas
jl
dec
addl
push
neg
or
dec
mov
mov
insl
fmuls
and
cltd
dec
jl
rcr
push
nop
push
mov
cli
inc
lock
in
das
and
add
and
shll
mov
dec
cmp
and
cmpsl
cmpsl
ret
fsubrs
icebp
pushf
arpl
aam
jae
in
mov
jns
xchg
loopne
mov
nop
insl
adc
cmp
insl
aam
xor
push
imul
frstor
xchg
clc
call
cltd
xchg
mov
fucom
popa
cmp
fsubrl
xchg
add
xchg
imul
mov
add
or
sbb
cmp
xchg
repnz
hlt
insl
pop
xchg
and
lods
clc
and
inc
push
sub
incl
inc
stos
inc
dec
dec
push
cmp
std
add
insb
inc
add
xor
add
xor
mov
xchg
mov
mov
mov
out
or
ja
enter
imul
add
lret
iret
jg
cld
sub
arpl
idivl
bound
cmpl
rcll
out
orl
addr16
addr16
ficoms
mov
pop
inc
mov
test
out
cmp
jmp
xlat
and
fbstp
mov
push
es
jmp
mov
addl
movsl
lods
popf
dec
and
push
sub
stos
xor
dec
and
jbe
insb
cld
sub
xor
fwait
inc
out
sub
ret
sub
aaa
mov
push
jae
icebp
lea
xchg
add
push
iret
orb
adc
dec
sbb
enter
movsb
inc
fiadds
mov
aam
xchg
out
mov
xlat
xor
daa
hlt
adc
adc
or
jge
cmp
sbb
or
sbb
add
sub
jno
push
pop
add
inc
push
xchg
lret
mov
push
jp
scas
xrstors
cmp
aad
movsb
ret
cmc
test
dec
int
cmpsb
sub
in
push
push
pop
daa
cmpsl
rorl
jno
lock
jl
push
dec
dec
movsl
dec
jne
sbb
xchg
dec
and
sarl
test
in
cwtl
inc
icebp
lods
aas
int3
xor
js
mov
push
insl
cmpsl
loope
fdiv
sub
add
outsb
cltd
je
adc
inc
call
andb
add
and
in
test
fcompl
push
jecxz
popf
int
pop
lret
ljmp
and
sub
xlat
das
pop
sub
fsubr
sahf
or
pop
test
xchg
lret
call
or
sahf
xchg
and
shrb
add
cmp
int3
ss
test
xchg
shll
mov
sbb
es
sbb
sub
xor
loop
dec
fdivr
repz
adc
mov
lods
lock
xor
inc
mov
xor
xor
cmp
pushf
orl
vpmaddwd
in
add
movsb
stc
imul
or
aas
cmp
imul
fadds
xor
dec
dec
sbb
dec
lret
xchg
xlat
enter
in
dec
mov
mov
sbb
cs
mov
mov
sbb
lahf
inc
push
arpl
lds
les
retw
mov
inc
lea
mov
mov
push
and
sub
mov
mov
pop
push
cmp
inc
movsl
pop
mov
aas
push
ret
imul
insl
mov
jecxz
or
sbb
in
cwtl
sbb
jl
fmuls
mov
or
addr16
sbb
xchg
sahf
lock
push
lock
jg
mov
inc
pop
repnz
jg
shl
aad
es
movsb
daa
insl
or
cmovs
jbe
cmpsl
cmpsb
inc
mov
or
icebp
jae
jbe
lcall
fnstsw
sahf
pushf
cli
mov
scas
jbe
rclb
popa
rcl
insb
and
mov
movsl
jge
mov
ss
cmp
mov
sub
popa
push
fists
mov
lret
xchg
mov
cmpsl
push
das
adc
packsswb
push
add
and
rcrb
mov
lret
test
dec
out
mov
test
inc
addl
push
lret
rcll
and
clc
stos
xor
sub
add
xchg
lcall
dec
fnsave
div
hlt
or
pop
pushf
xor
adc
stos
dec
mov
ljmp
stos
xchg
sub
movsl
dec
jg
ja
jle
jmp
ret
fwait
inc
jl
dec
fistps
mov
mov
jae
out
insb
jbe
cmc
cmc
sub
iret
cmp
xchg
movsl
loopne
out
mov
sub
rol
addr16
cmpl
adc
mov
sbb
jns
xlat
adc
aas
arpl
jb
daa
fists
pop
cli
jmp
jle
popf
cmpl
mov
xor
imul
and
cld
lret
cmpsb
stos
jnp
jae
scas
ret
pop
lret
push
loop
lcall
or
nop
cmp
outsb
clc
sub
jae
imul
imul
fiaddl
and
clc
mov
imul
arpl
mov
pop
sub
lods
pop
xor
sub
leave
xor
hlt
pop
push
pop
arpl
pop
pcmpeqd
sbb
inc
inc
lock
push
aaa
mov
lods
addl
pop
dec
imul
inc
push
js
call
jo
xor
scas
out
mov
int
popf
xchg
movsb
dec
pop
add
cmpsb
lods
pop
paddsw
cwtl
ret
dec
jl
cmpsb
adc
movsl
add
jno
movsl
fidivrl
imul
mov
movsl
and
mov
cmp
adc
std
insl
fwait
test
xchg
add
xor
sahf
mov
iret
pop
sbb
push
aad
loope
sub
mov
lret
xchg
outsb
cld
mov
mov
sbb
dec
xchg
jo
xorb
sbb
add
pop
lahf
xor
add
int
in
aaa
sub
jmp
lcall
das
faddl
push
jne
lods
shrl
adcb
jg
je
mov
dec
jo
mov
or
out
ss
or
xchg
jle
xchg
lret
aaa
ror
mov
sbb
into
into
push
push
js
in
push
xor
xchg
insl
outsl
inc
daa
in
ds
sbb
stos
std
insl
fs
sub
adc
ret
out
pop
inc
lods
xlat
lock
out
jg
cli
roll
xor
mov
mov
gs
xor
pop
mov
adc
pop
adc
mov
add
out
xchg
mov
mov
cmp
or
sub
in
les
sti
or
mov
jne
in
add
lcall
or
outsl
inc
sbb
pop
lret
repz
add
jne
lea
lret
call
or
mov
adc
jmp
sbb
pop
cmc
stc
test
xor
aas
repnz
cmp
scas
mov
outsl
call
je
sbb
jecxz
add
mulb
into
std
adc
mov
mov
scas
into
mov
sub
dec
push
inc
cmpsb
fcmovnb
pop
and
mov
out
lock
pop
es
fidivs
ret
in
mov
xchg
nop
sbb
inc
sbb
outsl
outsl
mov
dec
faddl
cltd
cmpsl
movsl
inc
sarl
int
cld
sub
ds
lret
in
mov
movsl
mov
mov
shlb
fwait
sub
inc
adc
ret
inc
mov
push
icebp
fidivs
jne
jecxz
aaa
sbb
ljmp
lods
xlat
shrl
mov
sub
inc
movsb
push
or
cmpps
add
xchg
sti
cltd
not
cmp
cmpl
push
dec
adc
dec
xchg
das
sbb
cmp
stos
and
pop
push
jle
pop
add
mov
pop
std
xor
mov
xor
mov
mov
mov
gs
pusha
ja
dec
inc
dec
jb
cltd
inc
adc
fwait
in
fwait
jb
add
std
mov
mov
cmp
push
bound
push
or
das
pop
mov
or
and
jp
xchg
lahf
mov
aam
mov
xchg
sub
inc
pop
cmp
or
syscall
xchg
sti
mov
loope
dec
test
orl
jecxz
sbb
popf
fwait
and
adc
inc
and
std
insb
shl
cmc
jnp
scas
es
push
push
sub
adc
loope
lock
mov
push
in
movsl
fnstcw
sub
dec
jg
or
and
and
stc
movsb
adc
sbb
ja
imul
dec
fiadds
or
ror
inc
mov
jge
xor
stos
movsl
insb
hlt
stos
int
add
ficomps
jge
xor
pop
aaa
ja
mov
add
fs
int3
inc
xor
pop
pop
mov
pop
xchg
iret
xor
les
in
int
cmc
and
fldl
movsb
fstps
aas
push
call
loopne
in
in
insb
enter
daa
movsl
xlat
popf
cmp
sbb
jno
jle
jl
stos
aam
adcl
arpl
movsl
sub
xchg
and
loope
lahf
fucomp
mov
popa
int
mov
push
inc
imul
push
cmpsl
cmp
arpl
js
sbb
jnp
aad
inc
loope
sahf
sub
scas
sbb
insb
add
sti
in
fldl
divl
les
xchg
sub
add
and
xor
mov
jmp
sahf
adc
loope
jno
out
inc
lcall
dec
fsubrl
xchg
mov
jno
pushf
subb
aaa
jg
add
mov
cmpsl
lods
mov
mov
mov
icebp
xor
sub
ss
fidivrs
inc
push
adc
inc
call
lret
add
pusha
or
sbb
ljmp
jnp
mov
and
ret
popa
jl
fdivrl
data16
movsb
lods
mov
adcl
and
insb
xor
inc
cmp
stos
sub
mov
in
gs
fmulp
loopne
decb
inc
fcomps
adc
push
pop
imul
mov
add
mov
sbb
ret
xlat
inc
adcl
fldt
in
xchg
pop
sti
mov
mov
fdivrs
aad
aad
nop
dec
cmc
cmpsb
dec
imul
fld
xchg
aad
repz
je
leave
adc
fisttps
and
mov
pop
push
mov
outsb
pushf
clc
daa
mov
pop
cwtl
stos
mov
push
ljmp
push
lcall
add
jecxz
aas
pop
mulb
ret
xchg
popa
ljmp
divl
out
sahf
dec
cmp
loop
mov
mov
aas
fcomi
jno
je
mov
mov
mov
pop
testb
repnz
insl
fsubr
decl
and
cmpsl
movsb
lret
pop
mov
and
jno
cmp
sbb
and
jne
cmp
sub
ds
jns
push
mov
or
fmuls
aam
jbe
pop
ljmp
sub
cmp
xor
in
fmuls
and
cld
cltd
cs
xchg
test
je
xchg
stos
sbb
test
xchg
jle
int3
sub
hlt
push
roll
mov
add
inc
stos
adc
push
and
cmp
mov
insl
adc
pushf
test
or
repz
add
mov
and
test
push
dec
dec
repz
or
loope
fwait
mov
rcrl
test
movsb
out
xchg
pop
bound
mov
mov
mov
iret
inc
out
ja
sub
mov
andb
xor
xor
ja
dec
mov
not
mov
stc
mov
dec
mov
mov
aam
test
cmp
xchg
adc
xlat
sbbl
int
ret
mov
out
adc
mov
loope
cmp
or
scas
mov
pop
push
jo
mov
iret
sbb
ret
push
pop
fcompl
inc
fildl
cli
jae
sub
or
popf
in
push
inc
dec
fisubrs
lods
cli
popa
xchg
jp
sbb
or
neg
jmp
leave
mov
jecxz
sahf
mov
rcrb
mov
cmc
out
adc
movsl
jbe
pop
jns
out
xchg
cld
aaa
ss
sbb
sub
add
in
and
outsb
xchg
push
ds
xor
pop
in
scas
lods
stos
push
and
int
cmp
xlat
aas
movsb
sub
push
aaa
add
in
lret
cmpsb
and
aam
mov
cmp
out
jno
jnp
jl
cmp
dec
repnz
add
xchg
shlb
mov
mov
mov
cwtl
mov
push
daa
daa
push
inc
sahf
adc
xor
repnz
js
push
popf
pop
xchg
jo
push
shlb
js
cmpsb
cmp
ret
adc
sarb
lods
push
mov
mov
lret
add
ds
xor
das
push
in
popf
mov
sub
pop
or
inc
lcall
call
sub
cltd
pop
sahf
repnz
test
stos
loop
dec
fmul
jg
xchg
ja
inc
ss
mov
sbb
ss
cmp
std
inc
mov
add
pushf
xchg
imull
mov
sbb
mov
jb
push
mov
add
pop
loop
int3
loopne
sbb
jb
imul
data16
nop
call
mov
rorl
orl
aaa
test
push
jo
or
frstor
lret
daa
gs
in
add
jne
rcrb
sub
adc
lods
aam
jp
sbb
xchg
es
sbb
std
sub
xlat
test
sub
mov
repnz
sub
cmp
sub
sub
pop
dec
enter
aas
ja
fincstp
pop
pop
loopne
mov
pushf
add
cmp
call
or
pop
push
imul
pushf
mov
inc
ficomps
push
addb
adc
ljmp
cli
mov
dec
pop
push
cmp
fwait
aas
das
jecxz
mov
fwait
std
bound
hlt
cwtl
dec
repz
mov
add
cmpl
pop
aaa
mov
or
mov
leave
shl
sbb
call
mov
stos
scas
aad
fisubrs
es
cli
insl
mov
shrl
mov
iret
jnp
clc
call
lret
test
pop
jl
mov
mov
pop
or
adc
mov
sub
adc
and
adcl
out
jmp
cmp
orl
lods
lods
repnz
repz
test
push
rolb
sbb
test
or
mov
test
ljmp
xchg
js
dec
inc
cmp
adc
rcrl
sbb
scas
mov
incl
push
les
jne
mov
outsb
movsb
push
adcb
out
push
je
pop
ss
into
or
shlb
xlat
ds
sub
sahf
pop
fldt
ja
fbstp
inc
inc
in
or
sti
lahf
fwait
rcrb
dec
mov
ja
add
out
jae
fbld
inc
xchg
jns
lods
jl
sub
add
xor
pop
iret
or
jbe
jp
test
mov
gs
jle
pop
mov
push
jp
pusha
inc
push
push
fcomip
mov
xchg
mov
insb
js
fisttps
subl
and
popf
jmp
aam
push
and
sbb
jle
out
test
test
mov
stc
mov
mov
adc
xchg
mov
iret
ja
sub
enter
adc
xchg
jae
jno
inc
dec
inc
sbb
inc
inc
lret
pop
sub
pop
add
xchg
shrl
inc
imul
dec
fimuls
jne
and
mov
and
out
cwtl
pop
mov
arpl
stc
lods
jbe
lds
sbb
cmpsb
xlat
or
mov
dec
sub
es
mov
loop,pn
test
jne
jp
das
scas
mov
sbb
movsb
out
mov
push
xchg
cmpsb
ss
mov
mov
pop
enter
daa
mov
data16
fwait
cwtl
jl
lahf
lret
push
ds
mov
cld
lahf
sbb
and
test
repnz
dec
inc
sub
ljmp
mov
shrb
inc
and
mov
lods
or
lret
outsb
and
dec
pop
shrb
ret
insl
cmp
pop
add
lods
divb
sbb
jnp
push
lods
enter
push
pop
mov
lds
xchg
faddl
pop
setle
push
nop
andb
jg
das
mov
mov
xor
or
inc
hlt
bnd
cmc
cmp
mov
push
jecxz
shll
orb
dec
into
stc
jge
cmc
cmp
xor
dec
sbb
sbb
loop
or
stc
iret
gs
mov
fidivrl
mov
mov
out
std
cmp
xor
mov
or
or
cmpsb
add
pusha
lods
loopne
push
hlt
pop
addl
sub
test
into
xchg
jmp
mov
and
xlat
stc
adc
mov
pop
mov
sti
adc
leave
cmpsl
aad
jae
nop
add
sub
stos
or
cmp
fldcw
fidivrl
jmp
sub
imul
iret
mov
es
mov
pop
mov
pop
xor
clc
movsl
pop
fsubrp
xchg
inc
roll
inc
or
adc
iret
or
test
mov
out
movsl
jecxz
subl
or
pop
cwtl
pop
sbb
aam
repnz
or
adc
push
aaa
clc
mov
dec
int
or
es
jnp
adc
sbb
mov
push
es
xchg
insl
cmpsb
cmpsl
pop
dec
int
out
mov
test
jne
stos
loopne
lret
sbb
inc
and
push
or
pop
sub
sub
fbld
call
aam
pop
and
hlt
into
mov
frstor
jne
clc
test
ljmp
aad
sbb
inc
mov
push
and
push
fwait
daa
push
pandn
add
das
cltd
pushf
push
pusha
test
and
jmp
or
mov
sub
lret
sbb
popa
lret
shll
adc
push
addr16
or
repz
inc
sub
cmpsb
xor
mov
mov
sbb
mov
xchg
cmp
dec
dec
daa
jge
fidivl
es
fdivrs
imul
sbb
adc
out
push
pop
outsb
bound
and
in
cmc
xchg
loope
arpl
mov
out
or
sarl
mov
mov
aam
fnstcw
scas
shl
pop
lahf
push
pusha
ficoms
out
je
pop
jmp
stos
sbb
cmpl
popa
popf
adc
mov
fs
xchg
jl
insb
adc
outsl
jnp
mov
scas
dec
push
pop
push
fnstenv
jb
iret
jl
ret
inc
pop
dec
push
or
pop
jae
cli
dec
inc
push
fnstcw
push
dec
pop
pop
ficoml
ret
sub
xchg
mov
imul
inc
fisubrs
xchg
jge
add
sbb
sbb
push
mov
jbe
ror
push
stos
hlt
mov
jmp
pop
jno
dec
out
jge
pop
stc
sbb
hlt
aaa
mov
fimuls
push
inc
insb
int3
or
fstps
xchg
push
add
insl
xor
aad
cld
scas
push
and
cmp
mov
jp
cld
push
aad
daa
cmpsb
mov
inc
jle
lret
daa
mov
lcall
inc
xlat
and
ds
sbb
movsl
cmp
mov
lahf
cmp
fs
mov
scas
out
fwait
mov
fdivrs
xchg
push
jnp
loope
iret
repz
imul
jns
nop
outsb
mov
adc
mov
jno
sub
sbb
mov
fidivl
out
mov
int
or
pop
or
fcoml
dec
jb
movsl
xchg
sub
ljmp
push
pop
adc
jg
lret
jmp
dec
mov
arpl
ss
mov
fdivs
out
subl
les
mov
iret
and
pop
add
into
fdivl
or
mov
outsl
ret
loop
jnp
stc
xchg
mov
adc
cmp
jae
mov
sub
sti
out
das
cmp
popf
xchg
inc
xor
jbe
or
xor
je
ljmp
sbb
pop
mov
shr
and
pusha
adc
mov
xchg
lods
loopne
sbb
jae
mov
add
and
sub
xor
enter
les
sbb
and
nop
fisttps
dec
xchg
inc
xor
testb
shr
or
push
sub
or
scas
adc
lret
jp
stc
mov
sbbl
incb
addr16
daa
insl
xchg
aas
outsb
ljmp
dec
lods
je,pn
mov
jecxz
mov
std
mov
jmp
mov
popa
cltd
mov
nop
subl
pop
push
mov
orl
lock
das
pop
jo
mov
aam
jge
rcrb
sarl
es
lret
pop
or
enter
mov
cmp
cmpb
lahf
push
mov
shll
repnz
mov
shlb
inc
cmp
mov
pop
inc
push
std
dec
mov
dec
ds
popa
xor
xchg
xor
imul
jns
mov
mov
loop
push
jbe
cwtl
jns
add
sbb
mov
fisubrs
repz
push
dec
repnz
pop
aad
dec
or
sbb
sbb
or
pop
add
push
stos
fstpl
push
or
dec
add
jnp
pushl
cmp
xchg
stos
xchg
mov
pop
mov
mov
cwtl
and
sbbb
iret
cmp
or
stos
popa
fwait
cs
dec
dec
dec
or
call
out
xor
aam
out
bound
call
cmp
insb
or
fidivrl
jp
inc
and
cmpl
in
sub
pusha
jns
test
xor
xchg
inc
arpl
pop
xchg
xchg
jne
mov
mov
sub
mov
mov
bound
lods
mov
insb
jle
sarl
cmpsb
scas
mov
daa
push
inc
icebp
pusha
adc
push
ret
sub
lret
dec
add
enter
or
push
push
loopne
lds
cmp
dec
push
imul
ffreep
mov
jmp
mov
leave
flds
xchg
pusha
arpl
jecxz
mov
jge
fdivr
sbb
out
aaa
jae
and
pop
or
jne
repz
pop
sbb
in
ss
call
scas
dec
mov
and
mov
int3
movsb
add
xchg
sub
sub
enter
daa
mov
subb
insb
jecxz
dec
aas
xchg
jp
out
mov
xchg
and
inc
lahf
pop
push
add
cmp
test
mov
inc
dec
loope
pop
push
pop
popa
clc
fidivrl
jge
pop
push
xchg
inc
push
lretw
loope
shl
sub
cld
adc
sub
outsb
jmp
sub
arpl
insl
or
insl
sbb
cwtl
add
test
mov
jnp
cmc
push
int
dec
outsl
sub
or
lcall
cmp
sub
cmp
sahf
cli
test
ljmp
ds
mov
insl
mov
xchg
jmp
cmp
jg,pn
testl
aas
sarl
sbb
mov
mov
aaa
popa
xor
jle
outsl
mov
and
or
adc
pop
data16
fsubrl
and
adc
and
cli
shrb
repz
mov
or
fsin
xchg
cmp
inc
stc
ficomps
inc
jecxz
xor
lods
imul
lock
rclb
outsl
rorl
lret
push
cmp
sub
sahf
test
in
xor
xor
jae
and
fs
mov
testl
pushf
mov
inc
repz
and
aad
or
pop
cwtl
or
lret
or
mov
pop
pop
mov
adc
hlt
pushf
movsb
push
shr
xor
inc
iret
cs
aas
or
mov
push
je
in
xchg
jecxz
xlat
imulb
sub
sbb
push
pop
jb
push
jnp
addl
mov
mov
cwtl
mov
stos
inc
mov
mov
loopne
cmp
mov
mov
and
aam
ror
imul
das
insl
je
cmpsb
dec
ret
fs
mov
jp
icebp
jge
dec
cld
add
xchg
lret
divb
mov
enter
lea
pop
pop
imul
fldcw
stc
pusha
es
roll
ret
adc
push
ror
fnsave
clc
pushf
jo
xchg
jb
mov
fidivrl
popa
fldl
lods
out
hlt
cs
sbb
xchg
xchg
pop
test
ret
add
xchg
mov
xchg
addr16
pop
bound
xchg
mov
sbb
mov
pusha
insl
and
stos
int3
mov
add
sub
xor
aam
xor
xorl
xor
idivl
mov
fldl
pop
or
or
lcall
or
xor
inc
add
xor
xorl
addr16
in
in
mov
xchg
jg
add
mov
and
mov
push
in
jp
mov
mov
call
mov
mov
call
in
adc
rcr
push
pop
xchg
sbb
and
push
mov
inc
mov
adc
mov
push
fucom
popf
pop
cmp
mov
loop
sub
ret
adc
insb
jmp
imul
push
mov
sub
popa
iret
xchg
int
ret
xchg
pop
mov
xor
inc
push
pop
leave
or
mov
rolb
call
lret
cmp
sbb
stos
dec
imul
fcmovb
adc
rorb
mov
sbb
mov
std
xor
hlt
and
arpl
icebp
jbe
test
sbb
jle
aaa
xor
mov
dec
inc
add
jmp
adc
scas
orb
mov
lods
jo
ss
scas
sub
and
out
mov
nop
scas
addr16
jae
cmp
mov
jb
enter
daa
mov
push
pop
jno
mov
dec
scas
dec
outsl
adc
mov
and
repz
js
and
xor
test
push
bound
inc
ficoml
and
bnd
or
pop
xchg
std
pop
push
push
call
bound
cmp
out
outsb
dec
jp
adc
ds
das
int3
cmp
andb
addb
imul
mov
sub
mov
sub
jnp
or
imul
mov
push
sub
sahf
jle
push
test
xorb
shlb
dec
dec
mov
std
add
je
lret
mov
cmp
jmp
cwtl
jl
stos
cmp
rcll
mov
mov
cmc
mov
pop
xor
lea
xor
loop
cli
fdivr
hlt
xchg
mov
adc
outsl
xchg
pop
rcrl
cli
add
xor
pcmpgtw
int3
testl
mov
adc
loopne
jmp
int3
adc
xlat
imul
xchg
cmc
add
cwtl
pop
xchg
xor
lret
sbb
jmp
mov
adc
push
mov
sahf
inc
pop
sti
and
imul
scas
dec
in
nop
xchg
out
and
movsb
popl
mov
inc
or
push
repz
fsub
mov
xchg
xchg
call
pop
ds
pop
shrb
lcall
outsb
mov
pop
mov
addb
push
aas
lods
scas
pushl
daa
xchg
dec
cmp
das
je
js
jecxz
addr16
bnd
std
incb
sbb
adc
insl
mov
or
fld
mov
fneni(8087
repz
mov
fsub
lock
adc
inc
call
leave
rcrl
dec
aam
xorl
jmp
mov
push
push
cld
sub
out
gs
mov
iret
mov
mov
mov
push
rcrb
dec
sub
push
mov
cmp
xor
push
cmpl
clc
xlat
inc
add
dec
stc
bound
cli
inc
lods
pop
inc
sub
jg
mov
push
sub
es
mov
mov
cltd
inc
xchg
bound
and
xchg
clc
pop
dec
sarb
test
inc
fldl
sbb
lret
rcl
mov
loopne
pop
mov
mov
add
inc
xlat
je
jae
shll
cmp
inc
or
test
xor
cwtl
mov
jecxz
ljmp
adc
dec
and
mov
add
fwait
mov
mov
jb
repnz
cltd
pop
out
out
jns
cli
fidivrl
in
xchg
adcl
mov
rorl
popf
ja
decl
jp
ficoml
stos
cmpsl
lret
mov
and
jle
data16
jo
outsl
pusha
scas
leave
fildll
cmc
xchg
in
insb
hlt
jmp
or
lahf
push
adc
mov
mov
and
stos
lret
and
xchg
add
jnp
imul
js
out
push
rorl
adc
mov
ja
adc
mov
inc
adc
dec
jae
xor
inc
pop
inc
pop
or
add
xchg
je
fisubrl
xor
sbb
gs
xchg
arpl
ficomps
xchg
shrb
mov
outsl
mov
leave
je
shl
insb
push
aaa
arpl
mov
add
rolb
stos
aaa
icebp
adcl
add
repnz
js
cld
push
lods
rcll
lret
out
inc
scas
pop
into
cmpsl
and
pop
dec
cmp
bound
ret
cmpsb
inc
jg
in
dec
enter
daa
lahf
dec
mov
or
jno
xchg
dec
sbb
mov
movsl
push
repnz
and
fwait
lahf
xchg
lcall
imul
push
push
ret
mov
adc
pop
scas
sbb
pop
shr
pusha
push
pop
mov
sub
fwait
mov
xchg
xor
outsl
xlat
adc
sbb
das
sub
cmpb
sbb
jne
jns
push
and
sti
mov
int
jp
sub
mov
pop
xchg
daa
lcall
paddusb
jne
sub
mov
test
pop
mov
mov
or
mov
out
push
pop
leave
imul
test
adc
movsb
mov
test
es
into
adc
idivb
into
test
pop
xor
inc
icebp
loop
or
stos
call
pop
adc
sbb
lods
sub
rorl
jle
sub
ss
or
push
leave
cmp
loop
fstpl
lods
loopne
out
lea
or
adc
dec
sahf
imul
mov
xchg
cmc
faddp
sbb
and
adc
rcrb
sub
add
or
sti
shll
cs
mov
nop
jo
inc
dec
mov
push
iret
das
scas
les
shll
mov
in
mov
pop
movl
cli
aaa
pushf
cli
xchg
xlat
jmp
cmp
push
cli
inc
fucomp
push
inc
js
das
aas
dec
cwtl
fdivl
ss
mov
sub
jecxz
cmp
xor
mov
loopne
rcl
jnp
cmp
xorl
and
movups
fcoms
lock
out
das
notl
adc
popa
cmp
push
es
inc
lret
pop
dec
mov
leave
jno
mov
sub
sbb
aam
idivl
mov
pop
cmpsl
dec
adc
out
push
aam
xchg
es
xor
inc
ffree
icebp
push
clc
adc
popa
ljmp
lods
les
mov
loop
fstl
pop
jnp
cvtdq2ps
jle
ret
js
cltd
js
lahf
test
lret
cmp
mov
test
pop
mov
mov
xchg
lods
xchg
rorl
sbb
pop
add
cmp
repz
add
pop
mov
bound
mov
stos
xor
mov
mov
fsubrl
outsl
faddl
sub
ja
push
adc
jge
ss
jmp
icebp
dec
neg
cmp
mov
mov
out
out
out
into
mov
bound
xchg
cmp
jecxz
sub
sbb
mov
data16
int
jp
mov
mov
jae
mov
nop
inc
ss
mov
ja
adc
dec
pop
cmp
xchg
sarb
jmp
mov
adc
xlat
outsb
ficomps
inc
into
push
push
pusha
adc
stos
cmp
cmp
insb
mov
xor
scas
fisttpl
dec
push
sbb
push
iret
push
cs
daa
push
les
repnz
jae
lret
pop
test
sub
pop
sub
test
fcmovu
shl
test
test
xrelease
or
pop
lds
ja
rolb
jo
ret
leave
jmp
lods
hlt
mov
push
arpl
cmpsl
jbe
repz
lods
jo
push
push
aaa
mov
movsb
or
mov
cmp
or
mov
inc
pop
cmpsl
out
push
nop
fdivl
jo
xlat
xchg
scas
out
popa
and
and
enter
inc
cmpsb
lds
je
xor
and
cmp
pop
in
in
lcall
dec
mov
sub
pop
jmp
movsl
pop
cmpb
mov
jae
xchg
mov
pop
push
jmp
adc
xorl
js
fadds
adc
cli
pusha
add
push
mov
sub
test
cmp
pop
stc
adc
hlt
sti
push
or
mov
add
mov
ret
push
decb
int
push
addl
or
cmp
mov
sub
sub
test
outsl
push
sub
and
popa
pop
mov
rorb
mov
call
or
cmp
pop
icebp
pop
idivl
sbb
nop
les
add
movsb
sbb
and
movsl
cmc
sbb
loope
clc
pusha
push
outsl
ds
cmp
stc
sti
fs
in
loope
push
push
jle
movmskps
mov
pop
fdivr
imul
fidivrs
jae
or
xchg
and
add
mov
jnp
xor
pop
pop
daa
pop
push
jns
adc
mov
fwait
add
cmp
mov
lahf
add
pop
mov
xlat
ljmp
sub
inc
aam
jl
outsb
in
je
sub
sbbb
aad
aaa
nop
dec
fdivp
dec
add
and
flds
pop
les
sub
repz
dec
fisubs
sbb
cmp
pop
movl
std
loope
movsl
mov
std
or
inc
xchg
popa
mov
ljmp
dec
daa
fwait
mov
jecxz
push
outsb
idivb
jnp
dec
push
push
cwtl
scas
adcl
addl
cli
scas
fstpt
lock
aaa
xor
out
dec
iret
das
stos
add
mov
and
in
add
mov
adc
insl
sub
pop
dec
mov
xchg
cmpsl
popf
in
inc
mov
add
cld
adcb
inc
cltd
stos
mov
push
pop
cwtl
xchg
pop
jl
sar
jg
sub
xchg
into
jno
ret
mov
std
mov
clc
dec
test
add
xor
ret
popa
and
out
lods
das
pop
xchg
mov
inc
or
das
ret
mov
btrl
add
lea
cltd
scas
mov
repz
jp
xchg
jbe
dec
mov
jnp
jno
inc
rol
inc
inc
cmp
mov
and
xchg
push
lods
add
jp
scas
pushl
xchg
and
xlat
fisubs
imul
pop
cmp
stc
pop
dec
or
inc
int
pop
or
sti
adc
ficompl
add
das
out
lods
mov
xchg
jns
fidivrs
in
dec
or
inc
call
jle
xchg
add
jp
cmp
mov
arpl
sub
fmuls
jle
xchg
pusha
in
add
lods
adc
jmp
mov
aam
push
lcall
mov
lahf
addr16
stos
mov
sbb
insb
sub
sub
mov
mov
ss
adc
in
ret
in
pop
repz
icebp
jae
cmpsl
pop
inc
pusha
jg
or
cli
jns
inc
lds
push
ficoml
or
sti
push
imul
ficomps
inc
lds
xchg
mov
adc
rcl
hlt
add
jbe,pn
pop
pop
jge
mov
add
outsl
xchg
or
imul
pop
sub
push
jae
mov
jo
inc
add
and
fwait
ret
lds
dec
push
mov
sbb
jno
mov
sti
daa
popf
pop
cmp
push
jno
push
sbb
xor
adc
jnp,pt
out
movsl
pusha
jb
and
test
push
movsb
test
mov
jp
xchg
push
cmc
pop
std
int3
adc
jmp
xor
dec
push
pushf
push
sbb
loope
inc
or
mov
lret
inc
outsb
ja
lea
iret
or
sbb
mov
dec
lea
add
and
xor
mov
dec
sarl
sub
sub
lcall
jb
test
pop
sub
mov
popf
addb
adc
mov
lret
loopne
inc
mov
pop
out
and
mov
cmp
sbb
scas
idivl
mov
test
fidivrl
sbb
sbb
sbb
cmc
jecxz
push
xor
push
outsl
sbb
mov
out
fs
inc
adc
sub
idivb
mov
and
pushf
add
cmp
add
or
or
mov
loopne
xor
adc
shrb
aas
adc
jo
add
xchg
sbb
lcall
sub
xchg
fisttps
sti
das
mov
cs
mov
test
rcll
pop
pop
fnstcw
je
sub
jo
loope
jle
mov
inc
add
mov
pop
jmp
xchg
xchg
jl
push
push
shr
in
pop
in
pop
mov
push
inc
jmp
out
scas
adc
aas
mov
jb
mov
push
je
adc
test
mov
xlat
mov
mov
pop
and
xchg
imul
sub
dec
les
mov
mull
addr16
mov
roll
jne
es
lods
insl
adc
das
cmpsl
pushf
xchg
das
mov
fstps
push
cld
lods
sbb
lret
mov
add
in
jl
stc
mov
rcl
sub
mov
cltd
movsb
or
dec
cs
int3
dec
fcmovu
adc
cmp
cmpsb
popf
jno
cmp
dec
lods
lcall
out
test
nop
xchg
jbe
push
push
mov
jo
add
aam
out
adc
mov
xchg
fs
cmc
pop
jecxz
imul
mov
clc
mov
sarl
fisubrl
cmp
add
xchg
ja
call
or
xor
mov
pushf
testl
mov
loopne
mov
clc
sbb
pushf
dec
std
mov
mov
loopne
fwait
sbb
mov
push
test
out
mov
sbb
in
sub
xchg
mov
mov
xchg
mov
adc
jp
jnp
mov
ja
mov
outsb
xor
xor
mov
pusha
xorb
xchg
andw
pushf
xchg
insb
fisubrs
adc
fistl
pop
rol
popf
cli
mov
mov
stos
and
jns
pop
cmc
push
jnp
or
scas
mov
inc
add
iret
adc
dec
pop
xchg
cwtl
cmp
xor
loopne
lods
leave
testl
add
push
inc
xor
xchg
xor
cmpsb
mov
imul
add
aad
mov
repnz
clc
mov
dec
cmp
arpl
adc
lods
jne
movsl
lret
aaa
shlb
add
mov
mov
cmp
push
into
fwait
xor
test
int3
and
mov
movsb
mov
loop
cmpsb
lret
in
inc
in
add
enter
daa
pushf
clc
inc
cmp
jno
jl
mov
dec
push
xchg
ds
mov
and
das
lahf
hlt
cmpsl
leave
push
cmp
clc
test
jg
dec
inc
push
fiaddl
sub
jl
js
stc
jnp
mov
pop
push
mov
sub
aas
jmp
outsb
fiaddl
ret
adc
stos
xor
xor
aas
sbb
fdivp
xor
in
jno
add
addr16
out
fildll
xor
mov
lcall
repnz
mov
daa
sahf
or
test
rcrb
and
clc
mov
clc
insb
mov
loopne
add
outsb
and
stos
pop
cmp
aad
xchg
idiv
es
test
gs
insb
sbb
shr
into
mov
cmc
stos
and
scas
pop
outsl
cld
mov
loop
push
push
fs
pop
into
data16
cmp
or
lahf
out
das
addr16
iret
sahf
aad
fwait
into
pusha
cmp
imul
mov
loopne
je
pop
pop
pop
je
push
mov
imul
popa
adc
pop
pop
jg
ds
mov
cmp
idivb
jge
sbb
mov
dec
idivb
fidivrs
inc
cs
push
aad
in
jae
add
scas
dec
sarb
xlat
inc
pop
fldcw
repnz
cmp
call
add
ja
fisubrs
pushf
sti
hlt
fucomip
fldt
pop
push
into
popl
lock
dec
aas
sub
jb
faddl
je
icebp
inc
jecxz
push
jb
decb
out
std
lcall
mov
out
mov
mov
xorl
cld
les
jl
lods
lock
push
scas
das
xchg
loope
mov
push
mov
adc
push
popa
andb
inc
cld
insl
idivl
les
cmp
cmpsl
fwait
mov
jle
mov
fdivrp
fdivs
out
mov
jmp
das
mov
add
cmp
movsb
unpckhps
int3
jle
aam
sub
fstl
push
or
fnsave
test
icebp
xchg
lods
cmp
popa
push
inc
lock
add
xchg
int
or
push
cwtl
lret
and
js
dec
add
push
lcall
sti
out
mov
fisttps
dec
pop
mov
mov
inc
mov
sbb
es
push
fsubrl
fsubl
add
mov
jbe
out
mov
clc
or
pop
mov
mov
out
adc
pop
mov
es
int
dec
lock
fistpl
jp
mov
rcl
mov
data16
imul
bound
cmc
jns
arpl
in
push
push
xchg
or
push
sub
mov
lahf
addr16
gs
jp
outsb
pop
mov
scas
add
dec
dec
jle
mov
in
xchg
repnz
sbb
jmp
push
xchg
cmp
sub
jmp
cli
dec
andl
out
popf
and
arpl
pushf
or
ss
aaa
insb
add
jnp
sbb
push
out
mov
adc
aaa
iret
outsl
pop
add
pusha
adc
pop
lret
loope
inc
ds
mov
xchg
or
lock
arpl
into
adc
xchg
mov
stc
imul
fisubs
fld
pop
aas
mov
mov
shl
aas
andl
jg
jge
test
aaa
in
pushf
testl
add
or
jne
mov
push
cmp
jns
push
pop
repnz
xorl
and
dec
cmp
in
movsb
inc
js
push
lock
cmpsb
dec
stc
pop
in
ljmp
daa
fwait
in
cmp
mov
jno
mov
jl
nop
rorl
insl
addr16
movsl
outsb
subb
adc
push
push
adc
test
dec
mov
movsl
movsb
add
pop
dec
pxor
addr16
pop
int
jns
push
scas
insb
loope
fldcw
cmp
std
outsb
cmp
pushf
dec
rolb
dec
sbb
add
int
add
in
xor
nop
arpl
pop
inc
pop
int
mov
sub
mov
and
popf
out
sub
sub
test
sub
aas
jl
mov
pop
pop
mov
call
lods
and
adc
cmp
nop
xchg
mov
lret
pop
roll
mov
cmp
pusha
dec
mov
adc
test
xor
negl
fldt
pop
stc
xchg
or
xor
inc
data16
jbe
lods
les
out
std
es
add
dec
xor
sbb
or
iret
sub
nop
or
loopne
enter
aad
adc
cmp
adc
cmpsl
cmc
add
jns
xchg
add
mov
adc
int3
sub
js
sarl
mov
into
sti
lea
aad
mov
fistpl
dec
pop
ds
inc
ljmp
les
push
repz
in
out
arpl
lods
push
movl
adc
push
mov
testb
inc
stc
ud2
inc
in
sarb
bound
jb
dec
or
xchg
ds
jecxz
xor
testb
std
inc
test
cwtl
fists
inc
mov
hlt
sub
push
fyl2x
or
leave
in
lret
sub
mov
movsb
xchg
mov
xor
inc
das
jae
xchg
mov
aad
lods
and
stc
loop
movsl
xchg
cwtl
adc
jmp
dec
movsl
and
lcall
icebp
xchg
or
sahf
pop
mov
repnz
mov
and
shlb
repz
jo
aam
push
xor
insb
ret
cli
push
push
inc
mov
pop
scas
xchg
clc
adc
inc
ljmp
dec
lods
jo
mov
out
outsb
imul
push
jle
xlat
out
rolb
syscall
mov
test
mov
mov
js
xchg
lcall
in
lret
xchg
xchg
jb
sbb
sub
pop
mov
fsubrs
jg
nop
add
lret
fwait
cmpsb
decl
pop
mov
mov
xor
stos
imul
or
push
ja
std
mov
inc
xchg
push
cmpsl
or
sub
ja
je
sbbl
mov
or
out
dec
sti
jle
fldcw
dec
jns
pushf
pop
in
fisubl
out
jbe
sub
test
fisubs
cmc
std
jp
push
pop
mov
or
mov
dec
xor
in
xlat
lods
pusha
mov
mov
xchg
or
loopne
loopne
stc
xchg
add
xorl
pop
push
jecxz
and
sub
jl
stos
or
test
dec
cmp
iret
jnp
out
imul
dec
ret
into
pop
aas
ret
mov
add
popf
inc
dec
bound
fnstcw
imul
mov
out
pop
fisubrl
and
sbb
jno
imul
fiadds
enter
sbb
icebp
mov
xor
push
dec
leave
xor
jecxz
inc
arpl
inc
sarb
aas
push
sbb
in
adc
add
add
lds
push
sbb
mov
cmpsl
and
lods
or
scas
bound
ficoms
cmp
aam
movsb
ror
imul
jns
in
rcrl
enter
daa
lcall
jno
pop
jle
cltd
push
xor
in
mov
jne
lahf
and
dec
lahf
xor
movsb
push
loope
add
adc
mov
mov
push
pop
jb
mov
pushf
imul
loope
fsubrs
cmpsb
es
cmp
xchg
xchg
outsb
mov
or
pusha
mov
popl
xchg
stos
sbbb
int3
sbb
arpl
add
dec
lock
mov
or
or
testb
pop
add
lcall
mov
sub
or
push
xor
test
roll
pop
rorl
jg
aaa
lss
rcrl
into
jae
ss
push
fmuls
aad
jnp
pop
lret
pusha
rcr
iret
mov
pop
jecxz
hlt
inc
sti
cmc
cmp
xor
outsl
mov
pop
imul
and
jle
and
lods
stos
pop
lahf
mov
test
int3
cli
xor
xchg
les
xchg
decb
jge
xorl
pop
lcall
imul
inc
faddl
js
pop
xchg
les
stos
cmp
rcl
sti
popf
mov
mov
and
sar
cmp
js
sbb
and
pop
xchg
and
jle
mov
fstps
or
repz
ljmp
call
add
pop
add
imul
push
mov
jmp
jecxz
pop
cltd
xor
xchg
inc
call
xchg
jb
out
lds
leave
mov
icebp
jecxz
pop
mov
test
cwtl
lcall
mov
mov
andl
jo
cli
sbb
mov
cmpsl
into
lock
movsl
aad
push
daa
sbb
mov
ja
hlt
add
mov
dec
mov
mov
add
pop
pop
dec
cld
cs
call
inc
mov
stc
mov
mov
inc
pop
mov
sub
xor
ret
sti
jae
push
adc
xchg
sbb
cmp
xchg
sub
inc
ljmp
lods
fildl
out
rcrl
or
dec
gs
xor
add
ljmp
xor
sub
sub
out
inc
mov
sbb
pushf
and
sarl
pop
pop
and
push
sbb
and
add
out
dec
ljmp
adc
or
or
xor
inc
mov
jne
cmp
pop
sub
ja
mov
dec
pop
js
sub
or
mov
fwait
cmpsb
repz
dec
data16
jge
sbb
test
out
sub
les
aam
jns
jns
in
mov
xchg
test
mov
push
mov
sub
jg
andb
adc
jno
mov
mov
mov
mov
xchg
insl
in
addb
dec
ljmp
imul
mov
dec
xchg
popf
outsl
cmc
test
fwait
loopne
stos
jl
xchg
and
insb
pop
xor
mov
push
jge
iret
adc
out
ret
adc
pusha
lds
push
jae
ds
insb
pop
out
movsb
adc
push
rcll
xchg
aaa
lds
sbb
and
xor
inc
fsubrp
daa
xor
ret
lcall
xor
adc
leave
ds
sbb
arpl
jne
jge
fst
sbb
aam
aaa
imul
or
add
add
mov
int3
dec
pushf
sbbb
fimuls
lcall
xor
or
xchg
jno
fstpt
call
jnp
push
pushf
fxch
cmpsb
push
outsb
fsubr
mov
mov
daa
cltd
dec
popf
cmp
in
dec
mov
bound
jmp
movsl
jl
push
and
push
and
mov
adc
xor
jmp
inc
ret
add
push
pop
cltd
loope
js
call
pop
dec
dec
jns
cmp
xor
mov
add
cmp
xor
adc
cmp
out
fdivrs
sbb
sahf
mov
xor
sbb
movsl
int
sub
pop
subl
xlat
push
in
shr
fdivl
jno
sub
mov
repz
mov
jae
or
mov
mov
fwait
mov
jo
and
push
mov
pop
inc
mov
push
xchg
idivl
jl
lret
sub
je
push
mov
stos
sbb
mov
nop
inc
cmc
ljmp
cmp
cmc
fnclex
mov
sar
fs
pusha
sbb
adc
or
xchg
movsl
xchg
lods
xchg
sbb
mov
cli
push
sbb
repz
cmp
scas
mov
into
loopne
scas
xor
mov
call
ljmp
jge
xchg
xchg
push
sbb
xchg
cmp
ss
pop
mov
mov
cmp
jmp
dec
jl,pn
adc
cld
sbb
sbb
adc
jb
push
out
les
sub
adcl
lea
push
call
xorb
pop
mov
int3
adc
and
pushf
cld
lret
fwait
jmp
inc
rcrb
push
int
pop
jnp
inc
sbb
shll
loop
jp
mov
pop
jecxz
enter
sti
stos
std
pop
popa
cwtl
push
pop
in
inc
push
cmp
ja
fldt
int
mov
inc
dec
mov
jl
lock
sbb
xor
mov
inc
fisubl
mov
mov
pop
insl
lods
mov
bound
aad
inc
icebp
xor
jp
lret
outsb
lret
mov
add
jo
sbb
rcrb
inc
or
lds
mov
or
fs
je
test
ljmp
fsubrs
int
out
xor
das
xchg
xchg
out
push
sub
or
xchg
jge
add
clc
and
jbe
xchg
mov
insl
test
cli
push
xchg
jge
sbb
mov
rcrl
js
pop
pop
hlt
js
inc
mov
push
add
add
adc
int3
js
xor
pop
test
xor
mov
mov
cmp
ja
call
inc
shlb
fwait
aad
cmp
xor
mov
xchg
mov
or
pushl
shl
and
mov
out
sbb
sub
jp
xor
jp
andb
mov
fdivrs
inc
lcall
lea
in
push
mov
dec
repz
into
mov
xchg
cwtl
inc
jg
dec
mov
push
imul
add
fcmove
test
and
enter
dec
jnp
out
scas
sub
push
adc
add
mov
cltd
test
roll
add
clc
repnz
outsl
jns
or
popa
adc
ficoml
xlat
cmp
mov
imul
neg
ret
mov
dec
xor
shlb
pop
mov
mov
aad
mov
dec
hlt
jns
dec
arpl
testl
jge
pusha
xchg
sbb
sbb
out
movsb
add
or
loop
shl
push
loop
jg
xor
cltd
leave
scas
and
dec
cmp
jp
push
jmp
sti
cmpsb
xlat
movsb
in
lahf
leave
aas
enter
daa
cwtl
les
jno
dec
out
jl
xchg
pop
dec
es
sub
movsl
orl
and
pushf
adcb
leave
test
stos
cwtl
adc
pushf
hlt
cmp
pop
pop
shlb
js
sub
mov
cmp
loope
inc
in
sub
pop
push
cmp
fildll
aad
adc
push
lea
pop
and
cmpb
out
pop
jl
add
push
mov
std
pop
mov
adc
int
lods
mov
and
and
add
xor
and
scas
sub
sbb
dec
inc
into
orb
and
xor
mov
mov
pop
or
fadd
jno
idiv
cmc
or
inc
cmp
rorl
pop
mov
lret
mov
in
push
mov
mov
dec
xor
inc
bound
and
dec
pop
stc
lods
aaa
in
fs
lock
jne
data16
pop
lods
jns
pushf
mov
nop
pop
out
jg
cli
fwait
or
xor
int
cmp
inc
xchg
fidivrs
sar
mov
sbb
movsb
pop
fcoms
adc
sub
jo
add
or
sbb
sarl
sub
inc
ds
mul
mov
lcall
aad
leave
rclb
xchg
test
adc
jbe
repz
imul
lock
lea
int
jmp
mov
push
pop
adc
jmp
pushf
cmpsl
mov
pop
pop
fildll
mov
mov
aas
movsb
fs
jb
rcll
je
stos
jecxz
js
testb
adc
ss
cwtl
adc
stos
mov
cmp
xchg
jl
dec
sub
loopne
pop
inc
jle
sar
and
adc
das
adc
mov
cli
aad
and
cli
mov
xchg
mov
inc
insl
xchg
push
lahf
dec
xchg
dec
push
cmpsl
xchg
xchg
mov
or
sub
test
fldl
and
add
pop
sbb
shl
sahf
pop
sub
mov
push
fwait
fwait
pop
fst
adc
or
in
dec
popa
lods
shl
lods
mov
sub
out
xchg
popa
rclb
add
mov
add
and
inc
shrl
in
mov
clc
inc
or
aas
leave
sbbl
andl
stos
xor
mov
adc
test
xor
or
or
dec
push
xor
jae
mov
sti
pop
lea
lahf
pop
inc
ja
movsb
xchg
dec
mov
fmull
lret
add
out
sub
in
jne
les
mov
je
out
out
loopne
xchg
movl
mov
rclb
sbb
sub
jne
scas
idivl
mov
push
mov
neg
mov
cltd
insl
aas
jle
aas
inc
in
decb
xchg
fbld
js
test
jns
arpl
jo
sub
jmp
mov
sbb
lods
and
adc
jnp
or
nop
ss
or
adc
xchg
push
iret
jmp
int
lods
inc
adc
inc
push
adc
inc
jb
cmp
jb
mov
in
flds
push
sbb
std
add
imul
xchg
fidivs
push
add
xor
mov
pop
sub
leave
sub
push
arpl
dec
int
sub
sbb
or
outsb
fdivs
jmp
mov
add
xor
and
sbbl
in
xor
mov
aam
and
shll
movsb
jae
cs
cmp
stos
cmpsb
pop
mov
in
xchg
enter
daa
xchg
shll
mov
sbb
pop
dec
xchg
dec
fstpt
dec
dec
daa
movsl
mov
and
int3
lahf
arpl
push
pop
or
and
xchg
inc
loope
add
pop
out
sahf
js
call
sbb
inc
cmp
mov
xchg
sub
and
aas
jbe
leave
push
adc
icebp
adc
sbb
xchg
incb
int
pop
xor
out
push
adc
cmp
fwait
andb
jg
push
lcall
faddl
imul
cmp
je
test
and
jl
jecxz
stos
and
mov
repz
sti
adc
cmp
jl
lahf
idivl
iret
shll
out
sbb
mov
popf
add
cmc
rorl
xor
xor
push
lcall
scas
or
push
adc
jle
fwait
movsb
into
lods
pusha
inc
ljmp
pop
jge
into
sub
xor
cmpsl
and
in
inc
cmc
inc
dec
lods
cmp
loopne
jecxz
pop
neg
pop
adc
dec
imul
push
mov
and
jne
sbb
cld
sahf
cmp
mov
cmpsb
mov
in
popa
mov
sti
dec
and
inc
mov
adcb
addr16
inc
neg
ret
les
jge
pop
add
lea
jno
jle
ss
sbb
std
dec
pushf
push
jg
jmp
dec
les
jbe
inc
adc
iret
ret
insl
adc
adc
dec
push
sub
jecxz
insb
pusha
testb
std
fisttpll
push
mov
jl
subl
jne
fildl
scas
fdivs
imul
das
out
lods
les
mov
aas
and
divl
es
subb
and
xchg
xchg
cmpsl
xchg
push
lea
jecxz
ret
cld
scas
and
lret
dec
or
mov
push
jge
mov
lahf
sub
rol
test
aam
mov
jmp
stos
movsb
clc
ljmp
ljmp
jge
sbb
inc
mov
cli
lock
sti
rcpps
add
lea
push
mov
movsl
xchg
sub
pusha
imul
sub
rol
clc
pop
pop
adc
push
or
or
aaa
aam
decl
or
or
mov
mov
ds
push
mov
pop
shrb
dec
scas
outsb
jno
out
orb
test
fwait
xor
dec
setp
mov
imul
aas
out
in
sub
xchg
xchg
adc
pop
sub
jo
fwait
negb
jp
mov
jge
pop
mov
in
pop
add
sbb
popf
cwtl
filds
es
mov
jno
subl
out
aam
popf
in
stos
mov
pop
and
sbb
test
int
jnp
out
mov
repz
push
mov
fs
dec
push
mov
pop
fsubrp
push
inc
jne
inc
jae
sub
inc
jne
testb
pop
xchg
cltd
jbe
jbe
lock
cmp
or
xor
imul
or
rcl
lds
sub
pop
or
adc
shl
test
leave
mov
dec
lcall
int
jge
adc
aaa
test
sub
int3
pop
rolb
hlt
jle
int3
or
adc
push
test
js
ret
or
scas
fiadds
cmp
sub
cmp
jne
push
mov
cmpsb
fldl
ss
insl
out
mov
jle
xchg
inc
or
aad
sbb
adc
inc
adc
dec
add
cmc
jo,pt
mov
jmp
cs
sub
call
push
inc
out
cmpsl
inc
jo
xor
mov
dec
xchg
js
cmp
pop
or
push
in
shl
into
cmp
sub
in
cmp
hlt
into
adc
int3
mov
popl
lds
add
push
lret
xor
xchg
fcmovne
xchg
jecxz
sub
addl
add
enter
fsubrs
sbb
int
fdivrl
test
xor
pop
dec
mov
iret
push
mov
mov
ret
and
js
ss
lods
cmp
aaa
out
divl
push
lret
xadd
outsl
xchg
mov
xchg
sbb
cmpsl
into
subb
push
mov
push
outsl
test
loop
cmpsb
push
stc
sbb
xor
or
mov
rclb
lods
inc
scas
add
jne
sbb
add
cmpsl
xor
sub
or
cmp
mov
pop
loopne
fwait
pop
push
push
adc
ljmp
mov
adc
lock
add
lea
aaa
push
adc
sub
into
mov
sti
clc
push
movsl
inc
repz
nop
rcll
cli
cmp
inc
dec
lods
and
stc
addr16
out
fisubrs
not
mov
adc
mov
std
sbbb
fcom
adc
pop
mov
std
push
fwait
jmp
sti
pop
and
mov
inc
imul
aas
loop
adc
test
fbstp
nop
je
incl
insl
movsb
cld
notb
dec
or
xchg
ljmp
adc
push
mov
lock
ds
das
into
loop
mov
push
dec
inc
shll
jg
es
mov
insl
popa
xor
js
xchg
xchg
das
mov
mov
mov
lret
mov
imul
ss
mov
mov
sahf
mov
xchg
movb
cmp
ret
aaa
fidivrs
sbb
frstor
and
clc
and
jo
ljmp
out
lods
xchg
js
test
data16
pop
je
xchg
addr16
call
lss
add
inc
cltd
addr16
test
icebp
mov
jo
xchg
testl
xchg
xchg
xlat
rcrl
pop
fs
adc
js
push
idivb
push
adc
xor
jo
fstpl
xor
icebp
movsb
mov
xorl
mov
dec
mov
es
or
pop
sub
dec
repnz
mov
out
movsl
loopne
bound
push
loopne
push
pop
xchg
in
mov
pop
je
sub
imul
cmc
cmpl
mov
ja
jns
sub
dec
pusha
mov
adc
int
jmp
stc
test
sti
lock
push
mov
jo
or
mov
xchg
cltd
dec
stos
dec
sub
shlb
sbbb
push
cwtl
scas
push
inc
jl
cltd
xor
xchg
aad
iret
test
adc
xor
jae
es
or
rcrb
inc
mov
pusha
out
xchg
xchg
mov
iret
imul
push
fidivs
mov
fistps
sarb
mov
lods
adc
sbb
and
pop
dec
mulb
mov
inc
jge
inc
loopne
in
adc
addr16
push
mov
int3
idivl
inc
pop
dec
lret
lahf
push
mov
lahf
xor
je
stos
scas
mov
mov
sub
push
fcomp
cmp
in
push
sbb
enter
daa
xchg
inc
js
or
lahf
jl
or
mov
movsl
cwtl
adc
and
mov
test
or
push
inc
push
push
pop
xor
and
pop
inc
mov
push
dec
or
in
shrl
xor
outsb
jno
adc
cmpsl
arpl
xorb
sbb
out
push
add
and
xor
cmpsb
push
sbb
int
aam
sub
lods
lcall
movsb
push
mov
or
dec
test
jno
sbb
mov
stc
sbb
dec
mov
cmp
and
ljmp
jg
divl
jnp
lret
aad
shlb
and
jp
outsl
into
arpl
cmc
sbb
jmp
sub
jle
adc
mov
lret
dec
into
mov
std
push
mov
ret
je
dec
cli
xor
jo
jl
sarl
pop
pop
or
mov
gs
push
push
adc
xchg
lock
cs
add
xor
xchg
mov
ja
jb
xlat
ss
adc
aaa
iret
imul
or
sbb
repnz
adc
inc
pop
dec
jns
xor
add
repz
add
xor
jl
pop
pop
adcl
test
xor
imul
enter
and
dec
inc
xchg
aas
orl
add
mov
not
inc
insl
std
sub
negb
inc
and
mov
xchg
dec
dec
in
ret
in
imul
mov
in
das
lods
sbb
xchg
mov
iret
out
add
jg
out
and
loopne
dec
jl
dec
xchg
arpl
xchg
test
add
push
dec
mov
sbb
jnp
shl
pop
ffree
adc
imul
mov
ret
loop
push
in
cmp
xchg
data16
in
ds
andl
mov
repnz
jnp
xor
shr
xchg
scas
xlat
add
inc
lret
movups
add
subl
test
lret
mov
mov
mov
inc
xor
xchg
lods
shll
pop
mov
movsb
stos
add
xor
movsl
scas
add
inc
decl
mov
or
xor
das
cli
mov
les
lea
rolb
int
xchg
out
lret
inc
sbb
into
or
loopne
fwait
xchg
xchg
dec
dec
aad
push
jne
adc
mov
nop
jl
test
or
cmp
in
int
xchg
xor
sub
popw
addr16
sub
mov
and
arpl
dec
imul
mov
ss
ffreep
and
jmp
in
xchg
orl
fistps
push
push
push
xchg
push
stos
mov
jne
insb
in
mov
lea
loopne
arpl
insb
adc
rol
in
push
pop
dec
shlb
jae
push
js
cmpsl
testl
fcmovu
cmc
inc
xchg
ljmp
imul
pop
ficomps
mov
test
push
xor
repnz
pop
leave
xchg
inc
mov
arpl
iret
jbe
dec
dec
jge
push
sbb
aaa
cmpsb
rorl
mov
out
add
cmpb
jge
pop
push
outsb
mov
xor
iret
stos
cmc
scas
pushf
jns
and
mov
movsb
adc
mov
lds
cmpsb
jecxz
pop
in
cmp
enter
daa
xchg
shrb
cmp
jno
push
orl
sbb
movsl
lahf
mov
and
pop
lcall
cmpsb
popf
test
xlat
xchg
pop
inc
mov
iret
pop
pop
add
call
xchg
loope
dec
sub
mov
cmp
loop
adc
subb
popl
push
orb
imul
adc
sbb
or
pusha
stos
icebp
sub
stc
pop
cld
add
push
mov
fiadds
clc
out
sahf
and
std
test
mov
cli
pop
jge
cwtl
icebp
cmp
cmovs
and
adc
data16
in
dec
lret
pop
fsubrs
add
lret
push
shll
mov
sbb
into
inc
pop
lret
mov
pop
outsl
hlt
clc
clc
loop
add
jb
pop
mov
pop
lret
and
jmp
adc
push
xlat
out
cli
addr16
mov
or
mov
pop
fldl
gs
loopne
dec
or
adc
test
imul
stos
stos
xchg
push
addr16
fdivrl
lods
sar
jne
xchg
sub
xchg
mov
mov
inc
cmp
imul
nop
fnstcw
dec
mov
sbb
fldenv
mov
repz
cld
test
sub
xlat
cltd
sti
repz
pop
ss
adc
ret
push
lahf
lea
dec
faddl
fdivl
aas
and
les
lds
dec
movsb
out
jecxz
loopne
notb
hlt
shlb
cwtl
cld
scas
or
stos
cltd
push
dec
fsubs
orl
test
lock
std
das
mov
mov
sub
and
call
stos
movsl
sub
das
cmpsl
fmuls
mov
sbb
push
push
lretw
cltd
and
and
stc
mov
cld
sbb
sarb
sub
test
in
mov
sub
push
cmpsl
push
inc
clc
fwait
dec
dec
xchg
movsl
mov
sub
mov
sti
mov
and
xchg
cmc
int
push
jo
lahf
pshufw
add
push
test
mov
xchg
or
xchg
pop
cmp
inc
mov
mov
stos
out
mov
push
hlt
lret
sub
adc
mov
lods
xor
jbe
or
jge
xor
shlb
pop
jecxz
mov
mov
ja
mov
xlat
inc
mov
lds
cmp
ror
dec
mov
test
out
arpl
ficomps
jmp
fcompl
out
gs
cmp
mov
or
mulb
push
sub
pop
and
push
lret
xor
or
in
stos
jnp
repz
xor
mov
test
sbbl
push
cmp
popf
pop
jbe
mov
adc
and
and
cmpsl
shrb
mov
scas
sbb
rcll
cmp
inc
imul
pop
cmpl
inc
xchg
push
sub
in
cmp
or
enter
mov
aas
daa
xchg
inc
xchg
push
sbb
mov
imul
or
mov
shrb
pop
repnz
enter
xor
hlt
lock
test
cmp
jbe
cmp
pop
iret
inc
aaa
in
mov
add
or
lods
fisttpl
sbb
push
jo
loope
scas
jnp
and
cmp
jo
movsb
lahf
fs
jbe
add
and
enter
daa
xchg
fstp
cmp
pop
jno
leave
fnstsw
xchg
dec
push
jno
or
and
test
push
cmpsb
inc
inc
test
mov
mov
pop
cmpl
pop
lds
push
sbb
loope
ret
xchg
in
cmp
dec
unpckhps
add
sbbb
imul
inc
xor
stos
mov
int
arpl
sub
push
and
not
pop
fdivl
cmp
mov
test
ficoml
adc
leave
mov
mov
push
mov
call
fidivs
test
cli
xor
push
adc
lret
mov
mov
mov
into
sub
test
mov
aas
loop
addl
icebp
push
adc
adc
lods
cld
inc
arpl
jb
sub
lcall
cmp
cmp
or
clc
adc
mov
loopne
cmp
ja
mov
inc
aad
cmc
movsl
arpl
popa
out
xchg
sbb
jmp
xlat
mov
mov
mov
or
fimull
aad
test
nop
mov
pop
dec
pop
shll
fstps
cmp
lcall
dec
mov
test
inc
jp
pop
pop
jmp
pop
pop
pushf
aad
jmp
xchg
xor
and
cmpsb
inc
mov
mov
jb
push
push
dec
inc
xorl
xchg
je
jecxz
in
negb
dec
std
jns
cli
cwtl
mov
pop
mov
cli
pop
mov
inc
dec
ret
pusha
inc
sbb
mov
pop
mov
mov
lock
ret
loopne
imul
mov
in
loopne
sbb
rep
push
mov
dec
jge
mov
xchg
jne
mov
aas
inc
dec
cld
pop
arpl
lret
or
cltd
and
pop
inc
mov
rorb
and
sub
jp
xchg
push
push
movsb
fstl
cmpsl
jle
in
and
and
imul
test
mov
xchg
inc
push
dec
cmc
cli
bswap
mov
add
mov
test
and
and
push
test
loopnew
mov
or
shll
call
das
stos
ficomps
push
add
mov
push
jae
jb
hlt
or
xchg
xor
movsl
pop
mov
dec
daa
insl
mov
inc
test
dec
jnp
fs
dec
out
pop
or
push
sahf
dec
jne
ds
lcall
sbb
in
mov
jb
call
test
or
addr16
mov
mov
int3
xor
in
punpcklwd
pop
and
add
movsb
stc
je
cwtl
testb
pop
mov
rclb
sti
out
popf
adcb
test
push
push
push
cmp
add
mulb
jg
push
push
outsb
cmpsl
adc
shll
mov
ret
lock
mov
xchg
jae
mov
inc
sbbl
sbb
cmp
rclb
das
push
imul
push
lds
ror
lds
cmpsb
icebp
pop
leave
jg
pmuludq
cmp
arpl
loopne
jbe
lcall
adc
add
or
adc
pop
fisttpl
cli
xor
test
sub
jbe
cmp
jmp
pop
sub
lds
cmpsb
jmp
jae
enter
daa
xchg
outsb
mov
jno
dec
jl
stc
sbb
jecxz
ds
fmull
lods
mov
pop
lahf
sub
test
push
insl
mov
lret
push
cmp
dec
js
dec
dec
pop
add
stos
push
xchg
popa
loope
loope
sub
loope
cmp
inc
outsb
mov
jp
sarb
out
loop
cmp
xorb
into
add
das
xlat
test
push
and
sub
pop
cli
mov
adc
add
fisubrs
sub
mov
push
test
roll
movsb
inc
mov
hlt
xchg
mov
xchg
mov
out
idivl
ss
xor
cmp
and
out
jae
and
rcll
cwtl
sbb
adc
into
or
and
jo
shll
cmp
add
jl
loop
xor
stc
negb
daa
adc
mov
jecxz
add
jno
mov
xor
add
das
or
mov
movsb
pop
sub
pop
loopne
inc
enter
adc
adc
adc
fildll
lock
adc
and
and
jnp
pop
xchg
sub
js
cmp
xor
cs
movsb
aad
int
nop
or
dec
jbe
inc
xchg
push
jle
aad
lods
les
divb
add
lea
fs
call
stc
je
pop
pushf
call
inc
adc
jmp
push
jmp
mov
js
mov
mov
jb,pt
pop
sub
in
je
cwtl
inc
jecxz
sub
negb
repz
jb
pop
mov
lods
push
mov
in
jns
scas
in
imul
and
inc
clc
lock
inc
das
dec
fisubrs
mov
inc
xor
shrl
es
imul
dec
js
pop
cmpsl
xchg
enter
mov
test
lret
ja
and
xor
mov
cmp
es
or
iret
aam
jnp
ret
jae
dec
push
sub
lock
adc
ljmp
imul
inc
out
jmp
out
push
es
mov
cs
push
add
mov
pushl
and
dec
bound
test
aad
xchg
out
sbb
and
stos
int
dec
push
cmp
adc
cmp
adc
and
loop
or
fistps
mov
fists
mov
add
ja
dec
outsb
out
lahf
inc
loope
dec
or
push
fwait
push
decl
lret
mov
push
jmp
jle
and
inc
bound
sbb
outsb
push
in
xor
xchg
and
fucom
imul
or
packuswb
cmp
out
fnsave
xor
out
mov
xchg
jmp
in
fsubs
sub
dec
xchg
ja
xor
xchg
ficoml
fildll
mov
push
jb
inc
xchg
or
xchg
imul
js
insb
rcll
jnp
out
scas
loop
add
test
std
dec
xlat
iret
and
and
pop
icebp
stc
call
jae
lds
or
mov
inc
pop
out
inc
xchg
out
testl
test
mov
vorps
shl
mov
repnz
dec
mov
div
loopne
xchg
or
outsl
outsl
jge
loop
sbb
ret
arpl
push
or
adc
mov
cld
sub
pop
es
cmpsb
repz
loopne
jo
cmp
and
in
cmp
cmpsl
adc
sbb
cmpsb
insb
bound
in
lock
sti
enter
daa
xchg
sub
aam
leave
jno
div
jl
inc
int
das
sbb
pop
mov
data16
loope
lahf
dec
bound
dec
push
ljmp
cmp
ja
mov
add
js
adcl
push
mov
jo
imul
jae
daa
imul
out
xor
pop
mov
mov
add
test
xor
cmp
int
adcb
pop
pop
jns
xor
movsl
dec
mov
sub
dec
loope
or
xchg
orb
jg
test
outsb
pop
out
mov
mov
pop
cmp
ss
daa
das
cmp
fisubrs
fwait
lret
inc
sub
movsl
mov
in
sbb
aaa
into
out
aas
in
cmc
aaa
and
xor
les
stc
lods
ljmp
dec
aam
lods
andl
out
movsb
cli
add
cmp
push
or
nop
inc
or
inc
shl
mulb
pop
mov
adc
popa
mov
push
adc
insl
sub
jg
mov
sbb
pop
push
lods
xlat
xor
pop
sub
lods
mov
in
jecxz
mov
arpl
cs
xor
push
dec
dec
aad
repz
test
jae
or
inc
mov
jecxz
stc
and
sahf
lea
jo
js
test
or
fwait
out
pushf
push
jns
jmp
shrl
inc
aas
into
inc
repnz
pop
aas
std
hlt
add
dec
xor
mov
sub
ret
mov
std
push
jp
sub
in
mov
push
dec
cltd
dec
lods
fsts
or
xchg
lock
cli
mov
sti
cmpsl
fisubl
int3
aam
mov
mov
icebp
dec
jae
xor
insl
cmp
in
mov
in
lret
out
dec
mov
cmp
mov
shlb
and
sbb
popf
rclb
inc
inc
fucom
ffree
clc
dec
adc
xchg
bound
or
popa
dec
mov
lods
sahf
dec
dec
mov
dec
push
dec
xchg
lret
push
add
or
lea
add
sbb
cltd
jp
faddl
or
xchg
fsubrs
mov
dec
dec
sbb
rcl
orb
mov
push
add
flds
mov
les
repz
pop
insb
mov
rorb
daa
mov
mov
ss
popa
mov
or
aas
repnz
dec
adc
popa
mov
jne
clc
xorl
sub
bound
bsr
jge
xchg
xchg
outsl
xchg
sbb
out
lds
or
and
icebp
push
jp
dec
mov
inc
pop
bound
sbb
in
add
lcall
sbb
jmp
lock
movb
sub
popf
into
mov
mov
stos
xchg
int3
and
push
mov
jnp
fs
inc
adc
push
cld
inc
cld
adc
fcoml
ret
daa
pop
sub
inc
mov
test
popa
pop
xchg
inc
xchg
dec
push
cmp
fcoml
stos
cmpsb
pop
imul
lret
lds
aam
mov
dec
loopne
leave
insl
lret
shrl
jbe
mov
push
sbb
jno
or
cmc
add
das
int3
mov
pop
cmp
cmp
cli
mov
jo
cld
ret
repnz
xor
push
arpl
int3
cmpsb
out
push
in
xlat
and
daa
nop
sbb
cmp
subb
inc
pop
dec
sahf
adc
ds
pop
push
movsl
mov
dec
leave
lahf
push
dec
jne
in
pusha
push
add
sub
lret
push
ror
pop
clc
sub
ljmp
push
popf
xor
pop
mov
cmp
repnz
outsb
jle
loope
outsb
mov
inc
mov
stos
iret
sbb
jle
add
das
xlat
xor
movsl
push
sub
int
out
sub
out
sub
clc
mov
push
cld
mov
sub
sahf
scas
add
jo
adc
inc
mov
cld
push
mov
jno
mov
adc
and
ss
add
in
jl
cltd
daa
mov
icebp
push
cmp
fidivrl
cmp
ret
fadds
imul
pop
cmc
fs
xor
lret
mov
loop
xor
fs
fs
adc
addr16
mov
popf
mov
push
or
outsl
cli
xor
and
mov
dec
ljmp
loopne
xchg
xchg
push
dec
adc
sti
imul
xor
bound
ds
cltd
add
aaa
sub
jbe
mov
mov
adc
xor
pop
inc
lods
nop
inc
sub
dec
xor
jl
mov
mov
les
cmp
idivb
call
testl
mov
jmp
pop
pusha
pop
imull
inc
xor
inc
or
sbb
jb
jl
dec
test
fnstsw
and
std
outsb
insb
add
add
std
orl
push
fcmovnbe
xchg
aad
jmp
xchg
call
je
mov
mov
mov
rorl
sub
dec
insl
lret
cmp
outsb
aaa
mov
mov
les
cld
faddl
inc
mov
aas
push
add
js
add
mov
sub
adc
adc
ret
xchg
cmc
xchg
jns
fisttpll
scas
lcall
aaa
jae
jge
mov
lods
or
cmpsb
mov
scas
mov
adc
pop
paddsb
or
loopne
inc
cltd
mov
mov
mov
xchg
add
xor
aaa
test
insb
in
aaa
mov
sbb
aaa
mov
pop
or
jmp
sbb
add
hlt
clc
mov
xor
push
xor
dec
jecxz
imul
mov
lods
int
cmp
cli
pop
ja
push
ja
adc
dec
push
inc
paddb
or
jmp
jecxz
inc
mov
pop
dec
sbb
fbstp
bound
mov
jns
push
nop
in
push
push
xchg
mov
xor
dec
xchg
ja
out
sub
gs
inc
jns
xchg
mov
imul
in
xchg
andl
mov
pop
jmp
mov
out
adc
inc
clc
xor
mov
pop
push
adc
enter
add
dec
fdivrs
insb
add
dec
jnp
cmpsb
jne
test
mov
pusha
add
iret
jecxz
and
inc
fs
inc
ret
jae
lods
fiaddl
cld
or
mov
xchg
inc
mov
pop
ficompl
mov
sbb
mov
popa
fimuls
lahf
lds
cs
rcrb
aaa
mov
lahf
movsl
dec
in
out
sbb
aas
arpl
pop
jbe
jbe
jge
or
sbb
pop
aaa
loope
xchg
or
jecxz
adc
lea
pop
push
fbld
jo
or
neg
cmp
das
mov
cmp
dec
or
lret
cmp
mov
sbb
in
mov
xor
daa
cmp
cmp
adc
jno
mov
jl
pop
je
or
or
movsl
ret
and
int
lahf
xchg
push
repnz
and
into
outsl
lods
inc
pop
adc
mov
pop
insl
out
and
fdivp
push
xor
loope
push
into
sub
rolb
cmp
insb
outsb
loope
pusha
adc
leave
sub
sbb
sub
jecxz
dec
and
xor
push
sub
mov
arpl
out
jae
sbb
lcall
clc
cmp
mov
repnz
test
pop
mov
sbbl
mov
iret
and
bound
mov
sbb
dec
ss
mov
push
cmp
lret
and
pop
call
js
xchg
leave
addr16
mov
cmpsb
cmc
lds
pop
xor
jp
dec
pusha
psubw
je
fs
sub
adc
test
sar
cwtl
test
lret
out
fnsave
cli
bound
xchg
nop
or
adc
or
fs
sub
mov
adc
jge
imul
addb
jl
xchg
and
loope
cmp
mov
xlat
mov
cld
sub
sahf
in
mov
shlb
pop
mov
adc
xchg
jp
inc
into
xor
fnstcw
data16
xchg
sub
xchg
push
mov
or
push
call
jbe
adc
or
dec
add
stos
insb
cmp
push
sti
pop
lcall
inc
sub
sbb
cmp
jb
pop
pop
dec
and
std
je
std
loope
pushf
aad
gs
mov
adc
jae
mov
fnsave
mov
or
loopne
dec
outsl
mov
repnz
mov
xchg
inc
lea
out
push
mov
imul
iret
es
cmp
fldenv
push
adc
mov
or
fwait
jp
cld
pop
in
lret
les
inc
and
jae
add
xchg
add
pop
add
sub
mov
ret
and
sub
xor
ret
xchg
loopne
sbb
lock
sub
leave
fisubrs
test
out
adc
push
mov
jnp
dec
aaa
roll
repz
call
jmp
mov
pop
insb
xchg
jae
xchg
dec
jbe
mov
dec
xchg
push
mov
jle
icebp
pop
mov
scas
stos
lcall
add
syscall
cwtl
incl
in
xor
cmpsb
xorb
scas
mov
sarb
fists
dec
pop
xor
ja
jb
dec
inc
ficoms
cmpsb
popf
daa
or
addr16
fwait
stos
push
sub
inc
ja
jp
push
out
mov
fwait
push
jns
cmp
in
nop
xchg
xchg
or
js
sub
dec
rol
addr16
in
adc
les
mov
cmpb
pop
jle
in
mov
loope
fistpll
jl
lock
jmp
xchg
mov
pop
cmp
icebp
inc
ficoms
aaa
shrl
popa
mov
jnp
sbb
push
mov
loop
mov
ror
je
ret
cmp
in
inc
int
pop
jae
xchg
lea
or
das
lahf
dec
inc
lods
into
fimull
cmp
xchg
hlt
sbb
sbb
outsb
xor
int3
mov
jmp
imul
scas
outsl
shlb
shl
repnz
push
leave
pop
gs
hlt
insl
mov
jbe
cmpsl
lcall
push
push
aaa
mov
xor
add
fstps
ljmp
sti
xchg
pop
jo
sbb
scas
cs
and
gs
pusha
xchg
movsb
push
orb
xlat
pop
cmpsb
cmc
xlat
push
in
movsl
pop
cs
daa
mov
std
cmp
mov
jl
and
dec
jl
mov
mov
shll
shll
cmpsb
pop
cwtl
push
lds
test
cltd
fs
inc
call
sbb
inc
js
pushf
pop
pop
add
or
xchg
enter
mov
outsb
inc
and
movsb
imul
cld
in
sub
test
add
jg
xor
cwtl
mov
fsubl
sub
inc
in
imulb
lcall
mov
sub
sar
test
mov
jg
cmp
mov
aad
mov
fidivrs
sbb
and
mov
cmp
paddusw
outsl
adc
shl
sub
cmp
cwtl
mov
inc
xor
mov
loop
add
stc
shrb
fcoml
xor
mov
out
pop
mov
xor
fistpll
in
or
int3
scas
gs
data16
xor
pop
push
pop
inc
adc
test
jmp
in
push
cmp
xchg
call
shl
push
aad
out
jo
sub
cs
mov
and
cmp
cmp
cs
dec
test
repnz
xchg
inc
loope
iret
fnstenv
cmp
repz
lahf
push
push
ss
les
addr16
cmc
cmpsb
adc
data16
mov
movsb
or
pop
cmp
xor
lea
fisubrl
jb
outsl
adc
rorb
or
hlt
fcomi
test
stos
std
mov
mov
ljmp
push
mov
fldt
adc
mov
inc
mov
je
lock
xor
mov
and
and
movsl
rcl
test
frstor
mov
aaa
insl
cltd
pop
aas
dec
fs
cmpsl
lea
mov
jb
sub
lret
xor
outsb
mov
dec
in
sub
mov
inc
shrb
mov
ja
jle
push
ret
scas
jb
push
cmp
sub
pop
std
hlt
clc
std
or
xchg
pop
lcall
xchg
or
lods
fbstp
mov
jne
mov
xchg
iret
rsm
lods
add
jg
cltd
pop
inc
and
data16
xchg
cmpsl
pushf
dec
push
test
push
pusha
xchg
sub
rcl
js
pop
pusha
xchg
fsubrl
sahf
addb
and
mov
adc
or
or
mov
cltd
dec
sahf
mov
in
divw
push
jg
cmp
add
cmp
jne
jl
mov
lea
bound
pop
jns
leave
sub
push
push
push
xchg
pop
gs
ja
sub
repz
lods
addr16
xor
mov
andb
jae
mov
dec
push
jle
xlat
pop
in
in
pusha
xchg
les
xchg
ret
push
push
jmp
push
rep
xorl
push
lret
popf
inc
pop
mov
push
lret
push
stos
loopne
adc
js
xchg
insb
fimull
scas
outsb
xchg
out
ror
add
imul
ret
dec
pop
int
push
fmuls
jae
movsb
ds
nop
jg
or
stos
inc
lahf
inc
mov
pop
fcmovb
mov
mov
shld
jp
fimuls
xchg
add
enter
cmpsb
test
inc
int3
mov
shrb
pop
hlt
mov
push
insl
sbb
jge
lds
mov
repz
push
pop
adc
inc
repnz
int3
dec
inc
leave
pop
insb
xchg
mov
ljmp
mov
icebp
and
cmp
movsb
loope
xchg
popf
je
js
imul
popa
push
inc
daa
push
cmp
add
dec
jmp
xchg
ds
inc
xchg
pop
or
lahf
lds
cmp
sub
js
lods
cmpsl
inc
ja
cmp
lcall
js
and
push
jae
loope
cwtl
loopne
adc
xchg
aad
cmpsl
lods
push
adc
jg
fisttpll
paddusw
sbb
and
clc
push
xor
int
jo
sub
xor
jne
xor
add
xor
sub
sahf
xchg
cmpsl
mov
sbb
xorb
dec
mov
psllq
xor
and
js
cmp
lret
imull
cmp
mov
mov
mov
shlb
repnz
push
jg
xor
stos
sub
or
loop
mov
jo
in
test
test
push
lods
data16
mov
bound
cli
int3
clc
cmc
xor
imul
movsb
je
push
lahf
lret
gs
xlat
loopne
popf
mov
sub
or
adc
in
jmp
mov
js
sbb
dec
dec
sti
xlat
cs
add
lcall
in
push
pop
sti
pop
fs
aad
arpl
jno
dec
push
incl
js
fld1
test
fnsave
das
repz
in
lea
xor
stos
imul
sbb
adc
test
pushf
add
mov
inc
pop
int
inc
pop
mov
xor
mov
dec
push
push
imul
nop
imul
mov
std
arpl
in
cwtl
sbb
xchg
mov
inc
orl
sbb
xchg
add
mov
cli
stos
lock
jmp
cmp
xlat
out
xchg
and
jmp
shl
sbb
cmp
insl
add
dec
pop
js
cmpsl
mov
clc
mov
dec
in
inc
cld
pop
sbb
lret
mov
stos
jecxz
push
rcl
mov
aad
aas
rolb
stos
adc
aam
jno
ret
ds
inc
push
cld
int3
fldl
xchg
pop
adc
ljmp
push
dec
addl
out
fdiv
xchg
out
into
push
insl
ljmp
sbb
in
cltd
push
orl
leave
mov
xchg
aam
dec
outsb
subb
setno
sub
leave
pop
or
js
outsl
push
imul
mov
inc
pop
dec
incl
xor
or
push
xor
jmp
bound
sub
jmp
and
sub
dec
fimuls
filds
fwait
or
sahf
dec
in
ror
jne
sbb
dec
mov
jl
mov
jns
cli
shl
test
fsubrp
out
sti
push
sub
ds
out
addr16
stc
dec
jp
push
mov
lahf
aam
mov
pop
jmp
in
mov
jnp
mov
into
adc
bound
sbb
adc
push
lea
popf
push
pop
mov
into
jecxz
stos
push
scas
dec
and
lea
ja
int3
scas
shrl
fistl
inc
in
iret
add
ret
stos
pop
add
dec
inc
jecxz
sub
push
ds
xchg
or
ljmp
xor
neg
je
cld
xchg
mov
test
push
in
mov
xor
lds
inc
nop
mov
cwtl
sub
jne
std
std
cli
arpl
jbe
pushw
jge
clc
jge
ja
fdivs
push
jl
or
mov
fisubl
int3
cmp
mov
mov
push
xchg
jo
lea
scas
xchg
loopne
and
push
cmp
jo
movsb
insb
or
pop
cmpsb
sti
adc
in
jae
sub
pop
iret
imul
sar
jno
pop
sbb
loopne
pop
cmpsb
xchg
ds
int
movsl
xlat
dec
cmp
lahf
in
push
push
imul
push
das
dec
addl
cmp
xchg
mov
pop
jle
or
adc
insb
loope
popl
cmp
mov
cltd
rcrb
rorb
and
adc
repnz
xor
ss
cwtl
gs
sub
in
pop
hlt
pop
cs
and
loopne
xlat
sub
cltd
sahf
cmp
test
sbb
nop
push
ds
jle
mov
fisttpl
mov
aaa
pop
and
scas
or
test
int
in
loop
lret
lahf
rcrl
inc
mov
arpl
pop
daa
jno
sbb
xor
jp
in
addr16
sub
push
inc
adc
adc
xor
data16
clc
lods
dec
into
mov
imul
cli
call
pop
xor
dec
cmpsb
cmp
pop
ud2
xchg
pop
icebp
jbe
adc
test
loopne
sbb
xor
imul
aas
add
test
outsb
fisttpll
sub
daa
xlat
insl
mov
mov
cli
cmp
sti
into
push
out
xor
aad
loope
nop
mov
arpl
arpl
fstps
mov
shl
add
fcmovb
adc
or
loop
repz
inc
pop
into
rcrl
dec
xor
pushf
stos
into
mov
enter
enter
movsl
or
sbb
jb,pn
xor
je
push
das
jecxz
jno
imulb
fisubrs
or
daa
mov
mov
mov
into
andl
lahf
jae
ja
pop
mov
jecxz
lock
mov
das
test
cmp
mov
cmpb
test
es
push
dec
pop
or
mov
mov
and
cld
mov
popf
lret
adc
lods
and
inc
mov
hlt
push
data16
int3
dec
sub
xor
adc
xor
int
and
frstor
inc
push
xchg
popf
or
ljmp
fildll
mov
rclb
pop
and
push
lea
test
fldt
mov
dec
je
xor
push
sub
xor
rcl
cmpl
mov
mov
addr16
push
or
inc
add
pusha
mov
sbb
or
sbb
mov
pop
mov
mov
arpl
ret
ja
test
icebp
inc
imul
mov
cmpsb
fwait
cmp
je
sarb
jne
sbb
mov
bound
popf
jns
iret
lahf
in
loopne
xchg
cli
fwait
inc
out
imul
cmp
xor
inc
call
mov
dec
cmp
inc
or
gs
cld
ret
lret
lds
jp
xchg
imul
xchg
out
jge
xchg
cmp
push
push
mov
stc
mov
or
and
and
popa
jnp
es
out
xor
pushf
push
pop
vmovupd
fsubrs
ret
jle
cmp
mov
insb
lods
pop
inc
xchg
pop
push
or
mov
mov
fisubl
fucom
xchg
stc
test
sbb
iret
or
and
and
into
push
mov
jmp
push
leave
rcrb
arpl
repz
push
test
aaa
fisttpll
repz
push
int3
and
mov
shlb
add
jae
jo
jnp
nop
cmp
insl
shlb
cld
cmpsb
jle
ret
imul
mov
cmc
cmp
pop
pushl
loopne
jl
jae
dec
leave
je
ds
dec
cmpsb
movsl
fiadds
and
icebp
add
jno
test
cli
cmp
and
pop
mov
jmp
pop
mov
xchg
lret
stos
daa
sub
jl
xor
jmp
adc
xor
arpl
xorb
roll
insl
daa
xor
xchg
mov
ds
sub
push
pop
jae
and
scas
adc
fmull
mov
sahf
test
pop
addl
pusha
and
mov
push
movsb
mov
xchg
stos
and
pop
sub
inc
inc
jle
lods
adc
cltd
adc
push
mov
pop
sbb
adc
inc
lret
stc
cmc
loope
push
xor
sub
mov
ss
adc
adc
mov
lods
xor
xor
push
xchg
cli
xor
xor
aad
cmp
aad
or
and
loopne
mov
pop
imul
push
push
dec
adc
movsb
out
fsts
xchg
xor
push
cmp
pop
or
lods
jg
sub
fbstp
in
gs
sti
jge
stos
cs
movsb
aad
ret
mov
dec
pcmpgtb
sbb
repz
loopne
pop
rol
stc
lock
pop
aas
add
notb
adcl
aam
mov
inc
roll
sub
inc
xchg
mov
or
loope
dec
cld
jle
je
fucom
adc
outsb
std
mov
ficomps
mov
call
cmp
into
fstpt
push
sbb
lock
xchg
add
mov
inc
ljmp
xchg
mov
es
adc
dec
cmp
out
cmpsl
mov
mov
imul
add
mov
jmp
mov
lds
pop
pop
adc
movsl
shlb
mov
aam
push
mov
pop
lods
in
push
cmpb
and
xchg
fmull
andl
or
mov
mov
push
and
jl
and
add
mov
cltd
out
test
rol
mov
and
imul
fisubrl
mov
jno
mov
ja
fidivl
mov
push
scas
push
add
jnp
dec
jle
pop
xor
cli
out
xor
mov
pop
mov
cltd
outsl
mov
push
stos
cmc
ja
sbb
dec
adc
cmp
mov
jbe
leave
fwait
addr16
cli
dec
mov
data16
test
out
mov
cmp
and
inc
mov
inc
add
mov
popf
adc
add
sub
xor
sub
adc
leave
mov
call
push
mov
int
stos
lcall
data16
mov
xchg
cmp
push
jmp
mov
xchg
andl
pop
push
adc
std
popf
mov
ds
push
dec
mov
or
mov
or
jnp
push
scas
xchg
scas
nop
push
cmpsb
fsubs
fisttps
mov
xchg
clc
pop
jb
inc
inc
stc
ss
jae
xchg
xchg
jns
or
sbb
pminub
jp
xchg
push
inc
and
in
pop
imul
xchg
fidivs
adc
shlb
mov
leave
aaa
dec
lahf
hlt
xchg
fiadds
jbe
hlt
sub
or
sbb
int3
lods
aaa
pushf
sbb
xor
cld
add
negb
xchg
aaa
pop
push
mov
push
dec
fidivrs
pop
dec
add
and
inc
sub
movsb
sub
push
cmp
and
inc
mov
enter
daa
mov
jno
test
dec
cmp
test
adc
pushf
movsl
in
push
and
in
or
loope
test
lds
inc
and
rcl
jecxz
cmp
loop
adc
dec
sub
fwait
push
popf
shl
loop
ss
popf
xor
loope
lods
outsb
sarb
rclb
and
and
pusha
out
add
setnp
dec
jmp
push
cmp
int
cld
cmc
sub
xlat
sbb
repnz
cli
lcall
jb
ss
sub
mov
sbb
test
shrl
mov
testb
inc
inc
mov
ss
in
iret
mov
pop
imull
mov
mov
inc
dec
push
add
popf
or
and
dec
cmc
test
fwait
xor
jle
stos
sub
push
adc
test
adc
scas
inc
dec
sub
mov
iret
out
psubd
adc
mov
and
mov
nop
or
xor
pop
mov
cwtl
adc
gs
imul
add
jo
hlt
add
dec
sub
cmp
les
jmp
push
sub
pop
test
in
rorb
hlt
cs
jmp
xchg
outsb
push
adc
lea
xlat
sbb
repz
cmp
call
icebp
sbb
xor
gs
mov
pushf
add
jp
test
scas
adc
jmp
inc
scas
out
aas
push
dec
lods
jb
les
dec
jae
je
mov
jecxz
std
dec
divb
lea
jnp
cmpsb
mov
add
dec
push
and
aas
mov
jecxz
lock
mov
mov
enter
in
mov
insl
xor
in
fsubs
sarb
into
movsb
xchg
cld
fisubs
mov
out
cmp
mov
imul
pop
xor
sarb
jmp
aam
rcll
jmp
mov
sub
cmc
dec
test
jmp
cmpsl
ljmp
pop
lods
mov
test
add
popf
xchg
mov
jb
stos
cmp
push
fistpl
cltd
sti
test
pop
cmp
xchg
adc
dec
lcall
xchg
push
cmp
inc
xchg
pop
or
insb
stos
inc
inc
repnz
push
xchg
mov
add
xor
xor
pop
or
add
jns
mov
movsl
icebp
mov
fldl2t
lock
or
dec
push
jle
inc
cltd
loope
or
dec
and
xchg
stos
in
jne
dec
divl
sbb
sub
outsl
in
mov
aas
out
cmpsb
mov
or
stos
test
imul
mov
test
mov
stos
dec
mov
in
xor
add
cmp
sbb
add
inc
popf
add
jnp
push
push
mov
fbstp
cwtl
mov
mov
lods
sub
pop
insb
xchg
aaa
scas
cli
lahf
sub
dec
clc
adc
sti
xchg
iret
sbb
add
pop
test
fadds
inc
pushf
pop
push
or
xchg
xchg
lods
inc
mov
imul
int3
mov
push
fiadds
imul
lahf
ficomps
inc
mov
xor
and
mov
xchg
mov
sahf
hlt
fmulp
stos
push
jbe
imul
sbb
cs
or
hlt
add
lahf
xchg
adc
sti
stos
xchg
sbb
adc
mov
or
and
push
or
pop
cmpsb
test
in
sub
inc
daa
mov
pop
jno
dec
jl
ja
dec
cmpsl
pop
fwait
ds
and
movsl
in
aad
enter
inc
jmp
push
in
imulb
nop
sbb
inc
mov
mov
cmpsb
dec
or
mov
js
add
pop
cmp
aas
push
imul
rorl
cmp
stos
push
adc
jmp
xchg
pop
mov
jae
addr16
cwtl
push
cmp
popf
cmp
push
scas
pusha
pop
jno
stos
lcall
pusha
fsub
jnp
sub
andb
pop
xor
jg
adc
mov
add
sub
mov
xchg
inc
in
and
fbld
inc
or
jbe
rcr
shlb
clc
jbe
jg
ret
cmp
sbb
out
xchg
cmc
outsl
sbb
outsl
mov
clc
stc
gs
fs
notl
rcrb
lods
add
mov
cli
cwtl
xchg
mov
cmp
inc
cmp
jecxz
aad
fbstp
gs
sub
loopne
pop
scas
pop
test
xchg
xchg
imul
repnz
aad
xchg
mov
ss
shlb
data16
adc
hlt
movsl
sti
fstpt
fs
mov
nop
inc
xchg
or
inc
inc
jno
fld
cmp
or
repz
jno
sbb
inc
shr
push
and
jo
pop
pop
out
push
adc
inc
pushf
lods
es
jmp
negb
adc
ja
jns
lret
aas
cmc
mov
jb
fcmovnu
dec
ljmp
jecxz
test
lahf
std
in
dec
cwtl
add
sub
shlb
push
add
sbb
sbb
in
mov
jo
mov
stc
imul
and
sbb
push
adc
push
dec
jl
xor
es
jl
insl
sbb
dec
dec
dec
cmp
cmpsl
mov
mov
adc
movsl
jg
cld
or
lret
pop
jb
mov
jo
and
push
int3
das
rorb
stos
sub
add
ret
jp
out
or
mov
xchg
pop
push
ljmp
aas
lods
div
mov
fs
xchg
add
std
push
fstps
les
gs
cltd
xor
rolb
loopne
adc
xchg
mov
xchg
ffreep
rorl
sahf
jbe
xor
mov
cmc
scas
mov
stc
add
add
mov
xor
pusha
cmp
cmpsb
mov
call
hlt
sahf
pop
xchg
mov
lret
dec
stc
mov
xor
mov
fmuls
xor
mov
or
clc
or
inc
and
xor
push
jb
sub
sub
addr16
adc
mov
mov
mov
mov
sbb
sarb
loopne
in
jle
pusha
pushf
pop
out
fistpll
xor
test
add
cmpl
rcll
dec
fstps
push
xor
push
stos
pop
shlb
jmp
sti
insb
icebp
mov
scas
pop
test
adc
jbe
ret
mov
inc
bswap
and
xor
fmuls
adc
push
inc
xor
inc
shrb
sbb
movsb
scas
imul
stos
fidivrs
in
add
xlat
in
test
in
mov
hlt
sub
arpl
push
inc
jge
stos
push
sbb
push
aaa
sbb
add
push
popf
xor
ss
in
out
gs
mov
fisttpll
adc
test
adc
scas
adc
xor
lea
rep
cwtl
adc
push
fstpt
cmpsb
pop
call
enter
daa
mov
lahf
mov
jno
cmp
jl
aaa
adc
js
ds
jle
movsl
repz
and
sbb
mov
cs
pop
add
lret
loopne
pop
xor
sbb
insl
mov
push
call
pop
sub
push
outsl
cmp
clc
push
outsb
xchg
mov
rol
jp
mov
mov
outsb
xchg
test
into
jg
add
dec
int3
xor
lods
push
push
inc
pop
pop
int
and
pop
lock
lcall
adc
mov
push
sub
cld
sahf
sbb
mov
fildl
jg
adc
imul
pushf
ljmp
psubb
jno
repnz
mov
lret
jge
jnp
repnz
imul
outsb
add
ss
xor
push
lcall
push
sbb
andl
in
dec
jecxz
lods
jmp
adc
cli
lret
ds
cmp
cmp
or
adc
add
mov
loopne
call
out
adc
cli
and
dec
cmp
sub
push
xchg
jp
mov
cmp
fcmovbe
imul
shlb
cmpsb
cs
lss
aad
mov
mov
sub
je
push
mov
fsincos
add
adc
das
repz
enter
mov
lea
inc
fucomp
into
je
out
jmp
jno
stos
les
jmp
sbb
roll
in
inc
in
xchg
aas
xchg
into
adc
dec
popa
out
lods
je
cmova
aas
cltd
mov
std
cmpsb
and
mov
add
mov
push
fiaddl
fdivr
rcr
call
out
or
lock
mov
push
fldenv
xor
es
fidivs
dec
inc
pop
shll
cmp
icebp
jl
cmp
xor
jge
int
dec
mov
ja
push
mov
jo
pop
shlb
pop
movsl
sub
push
add
inc
fwait
je
or
push
lret
push
lock
mov
xchg
cltd
and
popa
sbb
sub
jmp
mov
push
mov
mov
add
cmp
divl
or
push
call
sbb
xor
bound
lods
push
cwtl
ret
sub
add
mov
pop
cmp
add
int
pop
xchg
xorl
xchg
mov
stos
mov
dec
and
ja
subb
in
test
lods
or
or
fwait
hlt
xor
dec
pop
stos
pop
jne
adc
imull
inc
out
xlat
jbe
mov
sbb
pusha
loop
xchg
cmp
mov
pop
or
popf
or
in
jb
rclb
aas
mov
repnz
in
das
adc
mov
inc
xchg
mov
and
xor
push
mov
int
test
pop
mov
sbb
or
das
stos
xchg
push
and
stc
aas
insb
pop
sti
inc
jnp
inc
inc
scas
rcrb
push
adc
test
test
pop
pop
and
inc
sbb
sub
jmp
inc
mov
mov
push
scas
push
js
repz
sbb
cmp
mov
lds
lret
lret
arpl
jbe
aaa
and
pushf
xor
je
and
mov
jbe
mov
jge
push
mov
aaa
inc
or
cli
mov
int3
rcll
loopne
dec
push
cmc
out
xor
outsb
test
scas
out
loop
and
add
sahf
movsb
and
mov
in
testb
push
gs
jecxz
jno
dec
cltd
jl
lret
inc
dec
test
jge,pt
pop
movsl
cli
adc
cltd
cld
lahf
jg
loope
mov
test
es
fiadds
aas
sub
aas
pop
push
xchg
imul
fdiv
push
sbb
loope
jg
sub
insl
push
cmp
mov
outsb
stc
pusha
pusha
adc
mov
mov
addb
push
add
in
jmp
push
inc
test
sub
jns
outsl
mov
adc
adc
fdivl
inc
in
sub
cli
and
test
movl
lods
mov
mov
mov
mov
dec
addr16
popa
jecxz
int
scas
cmp
sub
test
test
cs
pusha
rcll
adc
mov
into
int
lret
cmc
std
aas
cmp
and
outsl
outsl
loop
ds
sarl
pop
fs
aaa
adc
popf
lretw
fdivrl
rol
orl
pop
dec
cli
fwait
fwait
xor
gs
cmp
add
or
add
and
lea
pop
out
lods
adc
sub
adc
add
xchg
cmp
rcrb
xlat
test
test
dec
dec
arpl
adc
pop
jb,pn
sahf
das
mov
dec
mov
scas
fnstenv
insb
jg
pop
cli
lods
repz
lcall
and
call
outsb
cwtl
lret
pop
dec
sub
adc
add
jmp
out
mov
inc
test
aaa
aas
xor
mov
dec
fcomps
sbb
jle
dec
int
idivb
cli
std
dec
cmp
mov
arpl
mov
mov
cwtl
pop
and
add
ja
test
iret
push
out
sbb
leave
das
leave
mov
and
pop
rcl
pop
hlt
es
mov
insl
ljmp
cmpsl
xchg
mov
push
mov
xor
cmp
ljmp
pop
push
mov
ficompl
repz
aam
push
scas
ret
cwtl
push
lods
push
mov
idiv
lcall
ljmp
mov
fnstsw
xchg
nop
fildl
cmovae
add
pusha
jo
add
cmpsb
mov
xor
xchg
dec
iret
ss
mov
sub
pop
lods
push
shll
clc
repz
or
aas
lds
cmp
pop
add
out
das
cli
shll
mov
dec
xor
std
jmp
repnz
mov
mov
mov
or
jbe
or
push
dec
fisttps
inc
pop
mov
cmp
aas
sbb
mov
pop
out
mov
mov
jns
xchg
cmp
jmp
inc
xchg
test
out
gs
inc
pop
fimuls
and
scas
jp
into
mov
mov
fimull
aaa
negl
pop
inc
ss
shlb
push
fbstp
ljmp
mov
xchg
fimuls
daa
push
pop
mov
jmp
push
dec
dec
pop
stos
add
call
repz
jnp
imul
push
ret
adc
and
cmp
sub
fbld
inc
and
in
inc
movsl
leave
lret
or
pop
jecxz
inc
roll
cmpsb
stc
jb
lods
scas
cs
stos
aad
out
stos
js
add
rorb
mov
leave
adc
hlt
mov
pusha
push
jbe
and
sbb
rorl
cwtl
test
add
int3
mov
insb
out
fcom
cld
xor
leave
mov
jo
pop
pop
arpl
jge
jl
scas
mov
push
jns
add
out
enter
daa
xchg
cmp
cmpb
cmc
xor
hlt
clc
pop
mov
add
and
add
mov
push
icebp
inc
pusha
sahf
outsl
out
imul
jle
das
js
incb
push
add
add
cmp
sub
adc
jl
orb
push
adc
cmp
and
fisttps
mov
push
inc
and
int
fidivl
lods
lods
pop
out
mov
xor
xchg
push
jmp
xchg
sub
cmc
call
test
sbb
je
push
jg
sub
mov
inc
adc
cli
or
cmp
out
enter
fmul
pop
sbbl
xchg
movsl
xor
cmp
into
mov
sbb
les
xor
jecxz
loop
pop
leave
stc
mov
adc
dec
pop
lods
mov
mov
out
mov
xor
lahf
movsb
or
sbb
decb
enter
add
pop
push
dec
mov
imul
sub
fcoms
call
sub
xlat
out
mov
mov
outsl
loop
jl
fdivrp
call
dec
cmc
aad
add
nop
sarl
dec
ljmp
fldcw
sbb
sub
repz
mov
call
in
lret
add
call
pop
gs
lods
xor
pop
push
out
hlt
inc
or
nop
inc
sbb
shlb
jb
pop
dec
dec
dec
outsb
in
je
in
jecxz
inc
or
rclb
hlt
ss
cwtl
fisttpl
mov
jbe
subl
and
mov
inc
out
xchg
xchg
xchg
lock
call
mov
fcoms
and
add
es
js
roll
jmp
test
and
sub
mov
lret
stos
mov
mov
test
xchg
mov
scas
addr16
fildl
sub
inc
adc
xlat
ret
daa
pop
cmc
push
push
push
mov
xchg
loope
aad
add
sti
sbb
lods
aaa
add
out
lea
xchg
xlat
dec
nop
push
push
aam
mov
ja
cltd
xlat
sbb
mov
pop
add
ss
test
pxor
or
jecxz
pop
mov
sbb
push
faddp
lds
add
das
lcall
jle
or
add
lock
mov
loop
mov
lods
jae
movl
aaa
inc
cmc
lahf
add
push
les
jp
jne
bound
out
xchg
pop
pop
call
aas
push
in
pop
add
aam
ja
mov
or
repz
addr16
out
jp
cmp
orb
mov
mov
jle
lock
in
mov
sti
fists
ficompl
and
ficoms
sub
popf
jnp
add
xchg
test
xor
lods
insb
xor
test
push
mov
or
xlat
iret
cltd
lods
lcall
inc
dec
inc
xor
inc
test
pushf
or
andb
ficompl
jge
add
sbb
in
scas
imul
sbb
cmpsb
push
mov
mov
fldl
jnp
or
jb
in
pop
jbe
loopne
enter
xchg
pop
lahf
aaa
push
test
stos
add
jbe
int3
cmpsl
dec
inc
pop
ds
sahf
push
mov
cwtl
cltd
jo
push
xchg
in
loop
cmp
std
movsb
cmp
repz
enter
nop
mov
in
les
cmp
test
xchg
flds
and
dec
arpl
ds
inc
in
movsl
or
and
notl
sbb
test
mov
inc
fcmovnbe
mov
xlat
pop
movsl
or
js
and
pop
aaa
inc
push
lahf
mov
push
inc
cmp
cld
sub
out
adc
push
adc
shll
xchg
sbb
cmp
and
fildl
dec
aaa
cmpsl
int
or
sub
out
insl
fistps
push
mov
pop
add
stc
mov
sahf
scas
pushf
pop
test
mov
jge
jg
aaa
aad
push
xor
or
mov
lcall
push
fisubrl
adc
jle
mov
testl
roll
mov
xchg
sbb
xchg
cmpsb
and
mov
in
fistl
outsl
add
mov
stc
inc
xchg
scas
fs
fcoml
cld
jecxz
shrw
lock
sahf
sti
sub
fs
sub
in
add
cmp
adc
lahf
out
mov
imul
loopne
sarb
adc
cmp
lea
stos
add
or
xchg
ret
dec
loop
movzwl
and
xlat
es
sub
stos
outsb
mov
out
dec
sti
xchg
push
push
cmp
loope
scas
lock
mov
push
fldenv
fsubl
sub
lods
call
insb
sbbl
pushf
pop
fstpl
pop
clc
pop
sbb
cltd
lahf
inc
ss
aas
jno
xchg
jb
inc
jb
and
je
dec
lods
jecxz
add
testb
std
fwait
pop
lcall
lods
mov
mov
or
aad
scas
mov
into
lock
popf
leave
sahf
mov
cmp
and
out
shrl
cmpsl
es
mov
xchg
inc
jnp
test
in
mov
add
cld
mov
mov
sbb
stos
mov
mov
test
int
scas
rcrb
dec
paddq
dec
rclb
icebp
fnstsw
das
inc
xchg
push
pop
icebp
ljmp
data16
mov
adc
out
lock
push
inc
xchg
rorl
add
sub
push
jne
test
mov
inc
into
mov
dec
mov
popf
cltd
les
lods
pop
pop
sbb
dec
mov
pop
arpl
xlat
stos
lock
rolb
sbb
loope
xor
jb
or
add
xor
mov
jecxz
hlt
jbe
mov
or
ja
mov
lds
mov
clc
fsubrp
fwait
orl
cmp
outsl
and
mov
push
imul
jnp
das
jns
nop
cmp
add
and
adc
stos
sub
push
divl
addr16
mov
mov
xorl
pop
std
mov
inc
adc
in
lcall
mov
clc
xchg
cs
jg
sbb
jle
je
stos
cmpl
push
movsl
ret
mov
adc
stos
jmp
push
and
mov
popf
pusha
cmpl
mov
push
push
subb
mov
iret
clc
mov
pop
mov
jmp
cmp
test
sbb
std
sti
incb
cs
xchg
pop
mov
dec
imul
jle
dec
adc
mov
inc
jle
repnz
xor
push
pusha
arpl
fdivrs
jge
popf
xchg
sbb
push
aaa
push
push
adc
loop
push
xchg
leave
sub
xchg
mov
pop
insl
je
push
sahf
andl
jo
scas
mov
and
dec
xchg
movsb
les
push
pop
mov
cmpsb
adc
cmpsb
in
stos
add
enter
daa
test
cmc
jno
push
and
icebp
dec
rorb
int
wbinvd
in
iret
jo
lahf
fsubl
adc
les
test
xchg
mov
jne
fistps
pop
fstpt
fdivp
pop
jbe
xchg
push
out
loope,pn
pop
push
sub
mov
cmp
ficompl
and
xor
out
xor
cmpb
xlat
add
mov
sahf
push
dec
mov
add
mov
mov
sahf
push
adc
inc
fdivrl
sub
sub
ss
sahf
push
add
jmp
jg
dec
add
jg
jp
or
and
and
cmp
pop
sbb
mul
rorb
xlat
fistl
insl
xor
cltd
lods
mov
jbe
adc
push
out
xor
jl
outsl
in
out
loop
ds
clc
xor
insb
adc
jbe
push
andl
xchg
shl
out
iret
push
cli
xchg
jmp
xor
mov
cmp
push
loop
push
mov
xor
ret
loopne
repnz
pop
inc
lock
sbb
pop
adc
jl
add
inc
ja
xchg
sbb
pop
push
not
gs
sub
or
push
pusha
xchg
inc
popa
inc
cs
mov
aad
fcmovnu
nop
mov
dec
test
adc
mov
mov
inc
lret
xor
mov
or
mov
mov
xchg
adc
xchg
pop
pushf
add
jmp
incb
pop
fwait
inc
sub
sbb
aas
adc
lods
jb
pop
in
dec
cmp
or
jnp
or
std
inc
fdivl
cwtl
lods
push
mov
xchg
in
mov
push
dec
dec
mov
xchg
mov
inc
add
sub
sub
jl
mov
dec
jno
mov
or
lret
cmp
es
das
insl
lahf
jne
dec
xor
cmpsl
xorl
add
xchg
icebp
fsub
hlt
cld
loopne
mov
mov
mov
ja
cmp
sbb
out
in
insb
sub
hlt
std
jmp
insb
ds
push
xlat
es
fcomip
jge
dec
xor
xchg
xchg
jbe
ljmp
lds
push
or
push
lods
es
gs
pop
push
and
dec
add
std
ds
inc
jne
test
int3
xchg
dec
int
dec
add
into
test
test
sbb
xchg
sarl
es
push
pop
in
stos
fbld
cmp
and
pop
add
cmp
dec
xor
aam
cmp
xor
jne
mov
aaa
xchg
cmp
xchg
dec
mov
xlat
pop
or
js
fwait
mov
mov
jne
inc
jp
arpl
out
push
push
bound
jns
test
in
and
xchg
jb
mov
xchg
aaa
lahf
sub
adc
or
sub
mov
sbb
mov
aad
mov
fistpl
mov
call
xchg
aas
add
lods
push
push
cmp
mov
add
sub
insb
or
stos
jnp
jb
scas
dec
inc
jecxz
xchg
dec
dec
adc
inc
mov
push
out
ret
pop
pop
repz
icebp
inc
inc
adcb
scas
inc
fmull
js
and
sub
fidivrl
js
sbb
in
bound
popa
fsubrp
mov
lds
sbb
mov
cmpl
hlt
mov
jnp
jbe
lods
and
aam
sbb
sub
aad
sbb
add
inc
sub
jge
cmp
push
orl
jo
out
scas
imul
and
nop
cmpsb
cmp
cmp
or
xchg
pusha
mov
daa
or
cmp
testb
fs
inc
js
or
xor
push
rcrl
lahf
cmp
push
xchg
mov
cmp
mov
pop
mov
cmp
sbb
loope
xchg
push
sub
sbb
outsb
test
unpckhps
xchg
cmpsl
rorb
out
push
or
pop
sbb
mov
add
lods
loope
clc
cmp
dec
mov
jle
aaa
loopne
pop
imul
lcall
pop
fsub
fisubrl
xlat
jge
sahf
cmc
popa
cli
test
addl
arpl
mov
subb
add
mov
cmp
or
cmp
sbb
xchg
mull
cmp
outsb
fwait
orb
or
pop
cmp
xor
push
xchg
loop
cld
in
stc
scas
jl
fs
sub
lcall
lods
insb
ret
jne
mov
mov
cli
lret
xor
outsb
fisttpl
jge
out
mov
push
cmp
sbb
jo
movsb
pop
arpl
or
jmp
push
imul
mov
adc
cwtl
dec
xlat
movsb
add
mov
mov
xor
cs
push
repz
fdivrl
dec
pop
mull
mov
sti
cmpl
repz
cmpsl
mov
lea
xchg
sub
xor
jp
pop
sbb
movsl
pushf
scas
mov
jmp
sbbl
xor
inc
insb
inc
jo
scas
popa
push
jb
stos
ljmp
sbb
jecxz
inc
jge
mov
sub
cwtl
adc
mov
push
mov
xor
mov
xor
in
mov
fdivl
xchg
das
pop
sbb
std
ja
and
scas
or
xchg
pop
insl
xchg
pop
dec
sub
test
mov
scas
xchg
inc
cld
or
lods
lret
clc
fdivrs
and
mov
mov
sarb
and
jmp
sbb
aaa
stc
ret
aam
mov
fldl
pop
psubb
adc
or
push
pop
lods
js
jecxz
sbbl
xchg
lods
in
push
sti
ret
mov
mov
jl
ja
cs
xchg
add
mov
lahf
movsb
xchg
mov
sbb
jl
into
dec
aaa
push
imul
push
scas
inc
pushl
add
mov
sub
mov
jp
bsr
sarb
add
sbb
in
inc
mov
out
fistpll
fnstenv
lret
mov
fdivs
jns
sbb
inc
xchg
shll
out
mov
pop
or
cmpsb
loopw
ret
mov
mov
xlat
sub
mov
push
in
adc
ds
lcall
imul
mov
popf
lock
pop
mov
inc
xor
shl
jo
jne
cltd
insb
jae
scas
jnp
test
scas
scas
loop
push
fiadds
xor
mov
out
cmp
int
sub
inc
push
outsl
jb
mov
push
or
rep
inc
sub
outsl
xchg
or
sbb
stos
fwait
imul
pop
sarb
mov
es
out
pop
hlt
jmp
test
popa
pop
jbe
dec
les
out
ret
sbb
xchg
das
jne
enter
rcr
int3
push
mov
push
fs
cwtl
jo
jno
scas
dec
dec
mov
cmpsb
mov
cmp
mov
fidivl
mov
jns
sbb
in
jns
pushf
enter
daa
sbbb
jno
mov
loop
mov
int3
ds
stos
movsl
sbb
fs
lahf
sbb
push
test
push
add
sbb
rol
sti
repnz
pop
sbb
cltd
js
setae
hlt
push
lods
push
test
mov
pop
xor
pop
in
outsb
call
pop
jo
call
xchg
pop
and
push
sbb
test
das
xor
push
mov
int
divl
pop
ljmp
push
mov
cmp
sahf
cwtl
mov
test
in
hlt
and
and
jle
mov
stc
adc
insl
cmp
mov
mov
ss
out
ss
lea
shrl
xchg
lret
mov
add
or
or
cmp
insl
cmc
loopne
std
xor
xchg
loop
in
xchg
stc
data16
fnsave
jns
jmp
mov
mov
scas
ret
stc
add
jno
mov
pop
sti
or
or
pop
gs
pop
push
loopne
jo
pop
andb
add
adc
jo
or
xchg
or
mov
ror
mov
jecxz
push
sub
cmp
in
sub
aaa
sti
movsb
int3
mov
aad
inc
fists
sbb
lds
flds
sub
push
movsl
push
xor
mov
mov
insb
jmp
sbb
pushf
pop
fdivrs
loope
out
sub
add
adc
aas
dec
mov
lcall
jge
jecxz
int
test
in
std
nop
adc
cwtl
and
mov
stc
xchg
mov
sub
orl
dec
lods
mov
xchg
mov
adcl
das
cmp
outsl
mov
bound
nop
rcrl
enter
ja
sbbl
pop
icebp
xchg
cld
or
mov
mov
lea
sub
not
adc
sub
inc
or
add
mov
push
pop
mov
sub
idivl
adc
mov
sub
popa
cmpsb
setb
and
sbb
mov
push
stc
cwtl
nopl
add
push
and
test
push
dec
mov
mov
mov
rcrb
test
dec
jl
sub
inc
shr
clc
iret
pop
fs
xor
mov
ss
add
outsb
mov
jg
cmc
xchg
sub
sti
xor
adc
mov
mov
test
pop
mov
jg
ret
cmp
dec
sahf
or
dec
or
sub
dec
scas
mov
jne
mov
mov
xchg
mov
adc
bound
cmpb
aaa
in
cmp
mov
fwait
mov
sub
pop
jnp
loopew
fdivrs
out
dec
mov
mov
mov
and
xchg
pop
icebp
in
mov
fists
je
xchg
cmpsl
jge
jmp
aad
cld
andl
cmp
out
fidivl
pop
pop
idivl
xor
stos
inc
jno
and
cmp
mov
rclb
sbb
iret
adc
in
pop
popa
sub
push
jae
ret
mov
outsb
notl
fisubl
pop
jne
scas
cmp
fidivs
iret
xchg
lds
push
xchg
popf
in
sbb
les
hlt
comiss
mov
arpl
sbb
fs
or
cltd
xlat
int3
push
xor
pop
cli
ds
push
inc
mov
xor
nop
psrlw
cmp
sbb
mov
pop
in
pusha
fcmove
and
rep
cmp
fwait
jno
movsb
and
ret
mov
pop
movsl
and
popf
and
je
push
jl
cli
test
call
jae
mov
popf
cmp
test
push
adc
pop
sub
push
cmp
pmullw
gs
xchg
fnop
ret
pushf
fisttps
repz
push
add
test
xor
or
sub
pop
add
mov
and
inc
sub
cmp
mov
insl
fsubrl
jg
sahf
xorl
sbb
and
mov
cmp
mov
xor
pop
test
pushf
xchg
sbb
mov
cmc
cmpsl
adc
xor
test
bound
jge
or
sbb
cwtl
push
adc
imul
mov
cmp
dec
hlt
dec
cmp
sbb
or
or
neg
adc
loopne
int3
rcrl
test
xchg
insb
mov
adc
ljmp
iret
sbb
sbb
push
push
xlat
and
imul
push
sub
les
aad
or
nop
sbb
movsb
inc
fsubs
fcompp
jl
nop
shl
jmp
out
mov
call
push
pop
adc
insl
jno
add
ss
repnz
test
inc
scas
pop
cld
inc
mov
push
shlb
out
dec
mov
xor
in
testb
add
cwtl
fstl
divl
mov
dec
andl
std
jp
xchg
popa
mov
mov
mov
lock
aad
mov
imul
stos
lds
stos
mov
es
inc
pop
insl
push
push
and
test
mov
pop
data16
cld
popa
sbb
lds
and
in
scas
inc
pop
dec
gs
test
sub
fildll
aam
push
ret
repnz
mov
push
shr
clc
cld
mov
xchg
push
loopne
ljmp
loopne
dec
mov
mov
xchg
cmp
push
mov
push
push
jno
std
dec
pop
cltd
ljmp
mov
cmp
dec
cmp
les
test
sbb
adc
les
or
sbb
mov
inc
pushl
out
mov
loope
mov
add
mov
insb
and
adc
dec
xchg
jmp
outsb
or
ds
dec
xchg
scas
cmc
jne
add
mov
inc
xchg
out
lock
cltd
lret
jns
cmp
xchg
pop
inc
jae
push
push
aaa
sub
add
test
jp
mov
mov
xor
jle
sbb
in
notb
pusha
je
xchg
xor
dec
xchg
jp
lcall
lock
xorl
mov
mov
ret
stos
mov
jecxz
mov
sub
jnp
pop
push
scas
jne
scas
push
insb
adc
aam
je
sbb
popa
sub
pop
cwtl
ret
addr16
jb
push
push
popl
fsts
push
sub
neg
fmuls
xchg
mov
adc
imul
mov
repnz
push
inc
mov
jl
mov
frstor
hlt
xor
sub
in
add
rorb
cmp
les
scas
xor
add
jnp
int3
ds
mov
sub
xor
jmp
inc
scas
or
and
cltd
mov
movsb
lock
push
fistpl
in
inc
iret
out
and
daa
or
cmp
in
jno
mov
jl
or
mov
dec
jb,pt
inc
movsl
sub
cwtl
and
cmpsl
mov
pop
xchg
sub
test
mov
sahf
inc
mov
out
cmc
pop
push
ficoml
jb
movsl
push
xor
loope
sbb
sub
dec
lret
cmp
out
adc
sahf
icebp
jb
lods
in
addb
or
xchg
xchg
xor
popl
pop
bound
int
pop
pop
sub
inc
jns
gs
mov
sub
mov
adcb
jg,pn
ret
icebp
adcl
daa
popa
and
mov
mov
pop
mul
vmread
or
stos
shll
imul
ror
mov
out
mov
out
sbb
adc
stc
aam
leave
fs
stos
adc
pop
mov
mov
or
cli
arpl
lret
xor
or
cmp
mov
or
mov
gs
xor
loopne
cmp
rcll
fs
imul
or
add
leave
or
xchg
out
and
rolb
jnp
popa
adc
sub
lcall
shrl
add
cs
cmc
outsb
aad
cmp
nop
cmc
imul
fnstenv
iret
lret
repz
mov
xchg
call
out
iret
pop
xor
adc
pushf
scas
mov
inc
pop
daa
cmpsb
inc
ss
inc
mov
xor
cmpsb
ror
dec
sbb
je
inc
data16
test
test
cwtl
cwtl
jns
mov
push
mov
lcall
sarb
mov
movsb
inc
mov
push
push
lock
bound
das
clc
popa
fisubl
and
push
es
jg
cmp
jge
push
pop
jmp
jg
inc
mov
xor
nop
cld
mov
lret
inc
loop
mov
scas
icebp
clc
mov
push
cmp
sub
sbb
or
sbbl
adc
aaa
or
xchg
xchg
or
ljmp
mov
mov
lods
out
dec
xchg
adcl
sub
fdivrl
clc
cltd
and
mov
dec
and
mov
lahf
xchg
rorl
cmpsb
jge
in
mov
daa
lea
aas
mov
push
pop
mov
pop
fistps
mov
sbb
movsb
sbb
call
lea
fwait
inc
mov
xor
add
mov
push
and
pop
daa
sub
ja
out
jecxz
test
inc
jg
inc
or
sub
fwait
insb
push
jo
je
mov
mov
mov
add
out
iret
jne
bound
movsl
jns
mov
jp
scas
xor
out
std
icebp
sub
std
mov
fisttps
fidivrs
subb
mov
dec
mov
add
jle
lret
push
in
mull
pop
dec
fisttps
mov
in
dec
adcb
enter
sbb
mov
add
mov
sub
nop
insb
mov
scas
jnp
loope
scas
fsubrs
push
mov
in
adc
push
iret
roll
hlt
pop
iret
sti
testb
jae
sub
inc
mov
dec
out
push
cmpsl
inc
jbe
mov
or
imul
fidivrs
xchg
lds
es
pop
mov
iret
lcall
int3
daa
fwait
arpl
stos
jo
je
std
jge
xchg
daa
sbb
popa
mov
or
addb
sub
pop
pop
out
push
or
cmpl
mov
out
shll
pop
pop
outsb
cmp
fisubl
pop
xor
in
cs
in
jg
push
cmp
fidivs
loop
jl
cmp
add
xchg
lea
and
data16
lahf
ja
into
push
and
ds
jle
and
dec
movsb
int
inc
lcall
aad
ss
mov
push
push
pop
dec
loope
out
sub
or
cmp
imul
fstl
jns
jbe
or
sbb
lods
push
xor
cmc
push
pop
sub
sub
and
cmp
addr16
lcall
add
xchg
inc
iret
sahf
sbbl
xor
sbb
mov
xchg
dec
mov
mov
nop
and
int3
ss
jae
cld
mov
scas
mull
movsb
mov
lret
mov
pop
into
in
in
cmc
xor
lods
popf
outsl
aas
jle
loop
cli
pop
stc
mov
add
sub
inc
data16
arpl
jp
and
pop
ffree
cli
xchg
aad
xor
inc
sbb
adc
gs
mov
loopne
rol
fists
adc
stos
mov
adc
xorl
sbb
test
mov
mov
pop
in
imul
jmp
nop
rclb
dec
andl
fldl2e
aad
les
add
xchg
cmp
cmp
stos
int
ret
call
pushfw
addr16
in
add
mov
inc
jno
out
mov
aas
inc
mov
jmp
xor
lock
nop
fdivs
jb
mov
std
mov
xchg
push
pop
std
test
cs
push
outsl
loopne
mov
imul
xor
pop
mov
mov
mov
dec
cld
lock
mov
fstps
lods
rorl
sub
fs
dec
dec
sbb
pop
cmpsl
jle
and
icebp
or
cmp
mov
push
lret
mov
mov
mov
inc
mov
xchg
inc
sub
inc
aam
sub
ret
adc
push
cmpsb
sbb
clc
jb
dec
xchg
sarb
aaa
popa
jmp
jnp
and
fwait
mov
inc
push
ret
cmp
mov
cmp
add
cltd
pop
adc
test
mov
pop
ficomps
test
int
xchg
add
pop
shll
stos
mov
loop
aas
xchg
push
sahf
pushl
out
jo
or
ja
mov
xchg
pop
loop
adc
mov
ja
flds
xlat
cmp
jp
aad
fwait
pop
pop
dec
push
xlat
adc
into
test
out
scas
pop
adc
mov
jns
call
push
xchg
std
fs
and
xchg
sub
clc
xor
jp
xlat
sahf
mov
cs
mov
jo
xchg
jle
jo
in
cld
dec
pusha
stos
imul
cmpsb
cltd
xchg
and
sub
sbb
xchg
fdivrl
adc
and
popf
mov
stc
push
inc
pop
or
sarl
out
insb
pop
xchg
jnp
daa
mov
push
cli
aaa
nop
adc
push
xchg
xor
in
push
fxch
inc
jge
out
inc
das
inc
mov
cmp
push
es
fidivrl
mov
xchg
fs
into
sbb
call
fcomp
sbb
outsl
lds
call
call
repnz
mov
hlt
pop
mov
arpl
xor
pop
lret
jge
inc
lods
sbb
sbb
xchg
loop
add
inc
pop
xchg
mov
lock
xor
mov
jl
and
dec
dec
cmp
fwait
es
icebp
sbb
in
adc
cmpl
jno
ss
dec
inc
inc
dec
insb
pushf
clc
ds
orl
xchg
jmp
pop
test
dec
push
ret
and
pop
mov
push
js
pusha
dec
pop
lock
add
outsb
sub
xchg
mov
outsb
je
cmp
rclb
subb
sbb
jmp
dec
xor
gs
pop
insb
enter
mov
sahf
sbb
pop
out
stc
lcall
jo
cmp
sub
jge
test
add
orb
inc
adc
insb
mov
push
mov
adc
jb
repnz
cmp
fdivrs
dec
mov
lock
popa
jne
mov
mov
sbb
fnstcw
xor
adc
adc
stc
inc
jp
or
sub
push
shrd
int3
dec
mov
out
lahf
and
leave
xchg
int
add
js
mov
pusha
pop
sahf
gs
pushf
std
loopne
pop
sbbl
insb
adc
pop
mov
adc
dec
xor
sbb
add
and
int3
cmp
mov
sub
mov
aam
scas
sti
pusha
rol
cs
int
aad
mov
push
loop
add
pop
xchg
fldenv
add
sub
push
sub
and
pushf
gs
in
and
adcl
add
leave
or
sub
inc
inc
mov
aas
lret
jb
inc
push
dec
pop
or
mov
xchg
neg
decl
sub
jo
push
stc
daa
mov
in
int3
mov
out
sub
push
mov
mov
cmp
das
mov
dec
mov
nop
inc
std
and
pop
not
cwtl
xchg
sti
es
pop
insl
or
jl
jge
sub
ss
icebp
loop
adc
loop
jb
and
mov
mov
mov
rcrb
mov
aam
mov
lahf
fwait
push
imul
clc
lods
jo
xchg
pmaxsw
ljmp
test
mov
movsl
mov
xchg
bswap
or
popf
fimuls
lcall
cltd
gs
call
xchg
jge
outsb
subl
and
pop
mov
pop
adc
imul
call
fadds
fcmovb
in
xchg
dec
clc
xor
dec
or
inc
jne
jns
mov
leave
insb
les
popf
repnz
mov
mov
inc
lods
fmul
or
js
fwait
lret
dec
cmp
mov
loopne
jecxz
test
inc
out
lea
int
push
mov
in
pop
push
xchg
dec
out
sbb
out
or
inc
popa
fstl
jecxz
push
mov
sahf
jnp
lea
jecxz
jb
and
xchg
ja
inc
mov
fisttps
pusha
jb
fisttpl
mov
push
cli
std
cli
popf
mov
jl
fcoml
push
jg
stos
adc
and
mov
insb
mov
mov
xor
scas
sahf
cmp
push
inc
pop
js
sbb
iret
xchg
lock
lcall
inc
mov
lock
mov
push
or
pop
or
movsl
jmp
pop
xchg
mov
lret
push
jns
fidivrs
or
xchg
mov
jne
and
inc
addb
pop
cli
inc
fwait
jge
rolb
insb
jne
aaa
dec
pop
pop
or
sti
and
pop
mov
out
shl
aas
xor
cld
push
mov
and
xchg
arpl
and
in
cld
inc
ds
daa
jge
pop
cmp
jno
jno
scas
arpl
mov
sbb
fildl
movsl
inc
repz
or
das
lahf
mov
hlt
push
enter
cmp
push
adc
sub
in
lret
pop
fnsave
js
es
das
cmp
int
push
or
testl
xlat
and
adc
das
push
lods
cmpb
sbb
adc
add
and
dec
push
popa
pop
inc
int
cmpsb
sub
sbb
add
gs
lcall
jo
in
imull
jno
jnp
xchg
inc
test
sahf
cmp
inc
and
shl
mov
add
ret
cmp
cmp
jp
mov
lret
add
clc
or
mov
xor
sbb
mov
imul
jg
outsl
std
test
insb
stc
stc
cwtl
xchg
fs
bound
mov
lods
jp
mov
pop
out
in
cli
cld
jmp
xor
icebp
or
cmp
incb
out
loopne
pop
add
sub
iret
imul
imul
sbb
cli
sahf
push
xlat
push
lret
sub
cmp
sti
in
aas
pop
jmp
cs
sub
sbb
xchg
dec
inc
or
cwtl
fstps
mov
lea
movb
lea
adc
vcvtpd2psx
in
adc
or
cltd
sbb
std
roll
popl
xor
aas
imul
or
filds
jecxz
jno
negb
pop
mov
shrl
cwtl
leave
push
cmp
jae,pn
mov
shlb
fisttpl
sbb
xchg
jbe
lock
and
mov
xlat
jecxz
shl
mov
test
lock
pop
dec
invd
or
imul
mov
or
iret
les
les
mov
lds
popa
shlb
sub
aam
cmp
adc
inc
xor
lock
mov
call
movsl
sub
push
mov
sbb
stos
lods
cli
xlat
imul
push
mov
fmull
stc
fildl
add
cmp
jo
adc
bound
aad
add
movsb
cmpsl
pop
sbb
add
pushf
jge
pop
mov
push
aaa
push
cltd
ja
add
cmc
cmp
xor
les
pop
and
or
xor
pop
pop
mov
ja
pop
xor
popa
and
or
faddp
fwait
stc
inc
rorb
iret
lods
jne
daa
inc
mov
shlb
adc
dec
in
mov
push
out
push
pop
sub
out
out
fcompl
push
mov
push
mov
dec
mov
popf
in
xchg
repz
loopne
lods
fildll
clc
jmp
int3
pop
push
xor
mov
popf
fidivrl
add
xchg
stos
xorl
push
pusha
insb
cmc
xor
jnp
pop
scas
add
adc
hlt
or
ret
cmp
je
add
leave
jae
inc
enter
ljmp
jg
inc
and
mov
xchg
adc
jne
inc
sub
lds
xchg
je
sbb
mov
enter
mov
ret
insb
pop
out
jbe
lcall
daa
fnstsw
push
sub
or
or
dec
outsb
int3
ljmp
push
mov
mov
jo
push
cmp
sbb
out
mov
cmpsb
push
push
insb
aas
cmpsb
sub
loope
or
mov
cmp
pop
shll
mov
mov
insl
push
decb
test
and
dec
pop
push
fwait
push
fsubrl
fbstp
dec
lea
pop
add
dec
js
subb
xor
push
mov
shrb
sub
jbe
cmp
cli
pop
popf
rorb
or
or
push
rcll
sbb
dec
add
pop
lret
xor
inc
sbb
or
cld
sub
fcomps
enter
nop
dec
sbb
pusha
fmulp
sahf
push
scas
test
popa
leave
addb
xchg
aaa
add
mov
dec
hlt
and
mov
cmp
xor
sahf
int3
lret
sti
rorl
or
adc
pop
into
mov
mov
mov
push
xchg
faddl
loop
fistpl
pop
addr16
ret
or
data16
jge
lods
mov
adc
out
scas
adc
das
add
into
dec
push
xchg
pop
cmpsb
js
imul
sti
adc
ret
xor
mov
xchg
sahf
leave
push
sbb
xor
gs
cmp
sbb
in
stos
xorl
outsb
dec
cs
in
aad
aad
nop
popa
cltd
sub
mov
mov
dec
cmp
cwtl
adc
repz
insl
movb
add
movsb
jecxz
les
insb
hlt
adc
sub
mov
ret
push
mov
fstpt
or
in
jb
xchg
dec
cmc
pop
pushl
insl
jecxz
xchg
loop
pop
mov
std
jp
push
cwtl
test
int3
mov
jge
mov
popa
adcl
inc
out
cmpsl
lahf
shll
add
or
je
movsb
mov
jne
and
mov
mov
in
aam
insl
xlat
fsubr
dec
or
lods
cmpsl
jnp
pop
mov
nop
push
sub
add
sub
lret
mov
movsl
pop
in
xchg
rolb
mov
aam
inc
pop
ret
mov
test
clc
and
test
popa
xor
cmc
mov
imul
popf
adc
push
clc
out
addps
gs
std
xchg
test
mov
xchg
cmp
in
push
roll
iret
sbb
pop
xchg
repz
pop
rcrw
fldenv
add
adc
jo
iret
mov
xor
sub
out
xchg
xor
mov
pop
std
mov
adc
ja
test
inc
fistl
or
sbb
fwait
sub
xor
mov
cmp
dec
aad
bound
cmp
in
mov
out
add
sub
jmp
and
dec
mov
jmp
clc
mov
pop
cld
in
repz
jnp
jbe
lret
cld
and
jmp
xchg
mov
addl
mov
push
push
jle
std
arpl
and
mov
pusha
dec
push
jnp
nop
jecxz
fldenv
adc
mov
iret
dec
imul
stos
dec
inc
inc
sahf
sbb
pop
sub
movb
push
mov
sbb
xchg
imul
imul
neg
add
mov
xchg
test
shlb
add
sbb
pop
hlt
clc
dec
packsswb
enter
add
cltd
sbbl
fsubrs
aaa
int
rorl
sub
enter
cmpsl
pop
adc
cmp
cltd
rorl
xor
mov
cs
arpl
and
imul
push
fdivrp
and
in
lret
enter
daa
jnp
inc
cmp
push
jno
or
or
jnp
ds
shld
mov
lahf
repz
outsb
into
inc
test
stos
out
inc
test
mov
pop
sub
pop
lods
scas
imul
jl
sub
adc
and
lcall
in
shl
lds
gs
sbb
xor
push
push
loopew
int
cmc
cltd
sub
sub
pop
arpl
pop
push
pop
mov
fdivrl
dec
inc
push
sahf
or
cmpsl
pop
sbbb
dec
mov
in
mov
out
and
pushf
mov
cwtl
mov
shl
pushf
or
lret
pop
shll
jns
mov
push
sbb
xor
cmc
push
icebp
dec
xor
pop
outsl
mov
cmp
fs
mov
mov
lods
movsb
xorb
adc
out
std
cmp
shrb
push
xchg
adc
pop
fimull
cmc
jne
dec
jae
gs
shl
dec
pushf
cld
pop
pop
sbb
adc
dec
insl
adc
mov
mov
sbb
jo
xlat
pushf
xor
mov
popf
mov
adc
std
cs
mov
push
nop
cmp
pop
dec
decl
jno
push
les
jne
movb
lea
or
decb
adc
push
inc
jmp
test
push
jl
inc
flds
inc
inc
into
xor
cmpsl
mov
jb
jbe
dec
insb
jbe
je
imul
idivb
mov
fcmove
cwtl
aas
push
mov
neg
subl
movsl
mov
cs
pop
cmp
das
push
pop
mov
mov
in
ljmp
jo
inc
insl
mov
inc
sbb
iret
push
icebp
cmp
cld
arpl
and
mov
shlb
mov
rcl
pop
mov
aam
lahf
cmp
dec
xchg
and
mov
sub
ds
stos
clc
pop
pop
hlt
xchg
int3
lahf
jnp
in
sar
popa
inc
xchg
lock
shr
das
mov
into
xchg
or
shrl
addl
addr16
cltd
xor
and
rclb
push
not
test
cmp
xchg
lea
dec
dec
test
adc
inc
and
fbstp
add
sub
ljmp
insb
xor
sub
push
lret
xor
xchg
pop
mov
xchg
jge
mov
into
imulb
ja
xor
dec
inc
aad
inc
jb
aas
or
lcall
jecxz
dec
jne
adc
mov
testl
cmp
jns
repz
in
imul
xchg
xor
push
sub
in
or
xor
out
mov
je
mov
iret
jle
mov
in
mov
aaa
fucomip
jbe
xchg
insb
sub
mov
bound
adc
inc
lcall
lea
mov
sub
xor
jnp
in
scas
adc
sub
stos
std
sbb
scas
stos
pop
ret
jo
loop
lea
and
push
fiaddl
cmp
sbb
sub
inc
and
inc
fimull
testb
shrb
pop
packssdw
fistl
cmpsl
xor
lds
xchg
rclb
mov
outsb
ror
cmpsl
bound
inc
and
arpl
test
jge
roll
sbb
inc
sub
add
aas
int3
shlb
inc
mov
jl
mov
jo
xchg
dec
scas
inc
lock
ds
cmp
dec
xchg
movsb
xor
jb
sub
lret
mov
xchg
enter
daa
jp
inc
cmp
xchg
repnz
stc
lods
push
dec
sub
ds
xorb
mov
fstps
inc
jle
test
jne
out
inc
adc
adc
rcll
lock
pop
in
mov
push
mov
loope
sti
and
cmp
test
adc
rclb
cmpb
sbb
push
add
rcrb
push
push
fwait
int
bnd
mov
xchg
lcall
dec
fsub
lahf
icebp
sub
jo
sahf
mov
hlt
test
push
dec
cmpb
pop
mov
sti
daa
mov
jae
scas
xchg
mov
xor
sarl
stos
and
negl
cmp
sarl
ja
outsl
mov
into
push
orl
outsl
lcall
stc
push
int
fs
mov
jb
mov
popa
test
out
iret
cli
xchg
push
movsb
xor
andl
in
bound
loopne
test
pop
jp
adc
fldcw
js
adc
mov
xchg
and
loope
mov
fsubrs
lock
adcb
sbb
jns
push
aad
jl
nop
pop
sub
pop
into
addb
movsb
fscale
sub
repz
rcll
shrb
inc
loope
xor
sub
insb
stc
out
mov
xor
cltd
mov
cli
inc
pusha
inc
addl
xor
jb
cltd
movsl
dec
jecxz
adc
jecxz
sahf
dec
mul
xor
std
enter
cli
out
mov
pop
sub
inc
dec
cmpsb
dec
mov
adc
ficompl
mov
mov
ljmp
das
xor
data16
insb
cmp
js
adc
es
insl
movsl
sahf
cmpsb
dec
add
push
mov
xor
cld
mov
jo
fbld
and
sub
xlat
pop
and
pop
sub
dec
inc
ret
fcmovnb
jae
jne
push
frstor
iret
clc
cltd
sub
xchg
or
ljmp
adc
notb
out
xor
es
sub
push
scas
andb
or
cltd
imul
mov
das
rolb
or
mov
xchg
outsw
sbb
add
mov
clc
xor
sbb
add
inc
wbinvd
decl
pop
or
loope
fidivs
scas
dec
mov
aad
push
mov
mov
ja
push
movsb
inc
or
or
or
fwait
xchg
dec
push
test
out
or
sub
dec
test
cli
shll
mov
out
mov
insl
or
dec
sbb
jp
pop
mov
cmp
mov
cmc
inc
in
loope
pusha
mov
mov
xchg
aas
test
jmp
sub
mov
push
push
popa
dec
popf
dec
jp
mov
jnp
stos
stos
fdivl
insb
ss
jl
je
or
sub
push
pop
in
adc
repnz
out
mov
sbb
dec
inc
mov
add
shrb
pop
cmp
inc
pop
jecxz
mov
xchg
sbb
cltd
subl
mov
lds
push
das
mov
sar
leave
push
mulb
arpl
pop
mov
pushf
repnz
sbb
dec
aaa
dec
lcall
setle
stos
mov
cmp
xor
push
xchg
and
and
cmp
rcl
movsb
mov
jecxz
cmpsb
mov
jp
cwtl
std
jg
std
xchg
add
jns
sbb
pushf
pop
mov
sti
push
jl
fimull
in
ds
mov
lahf
xor
or
bound
adc
inc
push
inc
mov
and
pop
jns
fidivrs
pop
mov
push
rolb
sahf
fs
xor
outsb
arpl
lea
fwait
jae
popl
lods
orb
rolb
push
divb
push
aaa
addb
jae
int
aam
sub
sbb
lcall
cli
fcoml
pop
or
movsl
pusha
incl
pop
sub
mov
or
mov
int
cmp
data16
negl
je
lret
xadd
mov
xor
aaa
dec
aad
filds
push
xor
adc
or
adc
jnp
shrb
xor
cmc
adc
inc
mov
out
and
js
add
pop
or
shlb
cmovbe
loopne
cmpl
imul
jb,pn
out
nop
sbb
out
mov
sbb
xchg
out
mov
jmp
in
lret
xchg
loope
fcompl
cmp
nop
repnz
inc
jo
inc
fnstenv
or
popa
push
jp
dec
jb,pt
aaa
or
pusha
inc
mov
pop
adc
adc
das
cmpsl
pushf
pop
adc
pop
pushf
lret
enter
pop
inc
jp
lods
aas
in
pop
jb
lock
popf
lea
jcxz
mov
mulb
and
std
outsl
pop
sbb
sub
es
aam
fisttpl
xchg
ret
mov
dec
mov
jne
lock
lods
in
lcall
and
inc
lret
or
es
adc
aad
dec
sti
lret
add
mov
adc
jg
lret
dec
sbb
clc
adc
and
lds
xchg
sarb
and
xchg
mov
xor
push
xchg
add
fisttpll
notb
shr
fsubl
lods
cmpsb
dec
insl
mov
xchg
repnz
mov
pcmpeqw
push
add
mov
outsb
mov
iret
cli
xchg
xchg
dec
jno
jge
inc
push
xchg
or
clc
mov
dec
stos
and
lock
and
sub
xor
lods
in
mov
loopne
mov
pop
push
mov
les
cmp
inc
mov
dec
sub
stc
inc
mov
mov
cmp
cs
mov
mov
jle
out
call
out
jns
push
je
test
xlat
and
out
lret
out
fimull
fidivrl
inc
addr16
ret
cmpsb
pop
mov
jmp
insb
mov
scas
lret
jle
push
mov
subl
fildll
ja
xchg
adc
cltd
jmp
clc
jle
subl
movsl
push
leave
fwait
mov
jbe
sub
mov
xchg
and
push
insb
mov
fisttpll
push
movsb
call
pusha
leave
std
iret
insb
cmp
ret
add
jl
inc
mov
jb
inc
iret
stc
xor
shll
inc
and
fidivl
enter
cmp
sahf
cld
imul
and
in
ja
lds
movsl
pop
rolb
leave
xchg
sub
mov
test
test
xchg
inc
cmc
clc
sbb
inc
sbb
or
or
je
cmpsb
mov
mov
push
inc
mov
lcall
inc
cmpsb
and
cmp
push
push
lret
cmp
icebp
in
jg
mov
daa
js
mov
jno
sub
jl
ficompl
ds
std
movsl
arpl
lds
adc
mov
out
test
or
inc
xor
mov
mov
mov
pop
push
pop
push
sbbb
andb
fmull
cmp
add
adc
jbe
nop
movsb
iret
sub
adcl
pop
push
jo
lret
cltd
cwtl
sub
and
push
and
outsl
fdivrl
int3
sub
movsb
sahf
testb
shr
sub
sbb
outsb
xor
adc
insb
and
jle
cmp
and
neg
insl
mov
mov
push
scas
mov
adc
int
jle
sbb
enter
out
pop
fstpl
loop
mov
mov
mov
adc
push
inc
data16
scas
lods
pop
cmp
mov
addr16
push
cli
sti
jno
xor
enter
sub
or
imul
test
cmp
sbb
cmc
adc
out
imul
xchg
xchg
xchg
stos
in
sbb
and
rcl
testb
or
in
push
jne
sti
jp
cmc
cs
cmp
mov
nop
int
orb
addr16
adcl
imul
xor
add
call
fbstp
adc
mov
jmp
and
enter
addl
sub
test
xchg
jb
jl
dec
shll
sbb
das
mov
mov
cwtl
jo
lods
mov
rol
mov
and
xorl
ja
cmp
mov
lock
sub
lock
cpuid
sub
mov
imul
cmpsb
mov
dec
imul
out
ja
xchg
mov
in
mov
in
ror
push
aas
mov
out
cli
mov
pusha
ret
int3
rclb
and
mov
mov
stc
repnz
push
sti
adc
fnsave
jle
xchg
mov
xor
inc
xorl
mov
xchg
adc
out
testl
mov
add
outsl
jb
cmpsl
xchg
loope
les
dec
fdivs
test
fbstp
xchg
jns
sbb
push
mov
dec
xchg
adc
stos
adc
or
jl
sub
xor
push
ds
ficoml
mov
inc
mov
pop
mov
lods
pop
ljmp
push
ja
pop
aas
dec
sbb
fldl
repnz
fwait
in
decl
call
mov
cmpsl
fistps
out
je
jns
jns
cmc
es
imul
mov
add
aad
xor
jge
jp
ljmp
aad
mov
imul
pop
cmp
add
filds
adc
movsl
xchg
push
xchg
ret
push
cmpl
mov
mov
stc
cld
pop
stos
ret
and
sub
jnp
jle
scas
lock
cmp
iret
lret
mov
ret
sbbl
filds
xchg
jae
push
insl
or
cmp
push
inc
lahf
cmp
and
mov
sbb
js
imul
ja
nop
xchg
mov
pop
shlb
lods
repnz
hlt
and
test
mov
repz
and
jge
fisttpl
into
cld
aaa
leave
iret
cmp
cmp
jecxz
pop
rclb
push
and
icebp
lock
mov
and
scas
ja
ss
jg
push
sbb
fisubl
xor
ja
pop
cmp
xchg
jl
scas
sti
dec
jne
rep
dec
andb
xor
outsl
xchg
push
mov
ljmp
rorl
pop
dec
scas
pop
call
movhps
repz
xchg
push
cmp
movsb
pusha
cmp
aad
outsb
sub
adc
push
jno
popl
lahf
or
jne
mov
add
jae
cmp
or
sub
mov
pop
pop
mov
lcall
sbb
out
repnz
mov
sahf
cltd
adc
test
mov
shlb
mov
int
xlat
pushf
dec
and
mov
ss
int
cmp
fdivrl
push
cwtl
jmp
lret
movsb
roll
ljmp
rorb
xlat
jbe
aaa
lea
cmp
test
adc
add
adc
lods
inc
inc
add
push
pop
cltd
cli
cmpxchg
scas
and
cmp
xor
or
call
xor
mov
inc
pop
xlat
and
iret
rolb
sub
ljmp
int
sbb
pop
inc
dec
xlat
cwtl
and
sub
mov
rol
sti
sub
pusha
mov
fs
nop
test
lds
mov
inc
xchg
push
cltd
fldenv
lret
cmp
push
pop
lock
inc
pop
pop
mov
inc
adc
negb
lea
loop
sub
cmpsb
jno
mov
sarb
shrl
cmp
je
je
jecxz
cs
lods
pop
mov
mov
in
cld
mov
outsl
jp
xor
xor
hlt
mov
or
mov
dec
stos
lock
test
das
iret
or
mov
xchg
lods
lds
jmp
jo
jl
xchg
insl
pop
out
cli
dec
icebp
movsl
push
cmpsl
jbe
lds
ret
out
leave
cld
movaps
mov
out
cmp
int
jg
loopne
and
sub
data16
push
jno
mov
mov
mov
sub
xchg
enter
mov
mov
lods
jl
mov
out
pop
sbb
mov
jge
rdpmc
mov
mov
enter
inc
mov
frstor
xchg
dec
aas
or
mov
sbb
lea
pop
mov
out
ss
imul
add
xchg
xchg
lods
ljmp
or
xchg
xor
icebp
movsl
mov
sahf
xchg
test
mov
sbb
into
repz
shlb
xor
jne
xchg
sub
cmpsb
es
test
jns
ds
fwait
mov
out
out
cmp
mov
shl
addr16
popf
or
loope
mov
popf
gs
call
jmp
mov
xorb
xchg
mov
andl
dec
shl
push
dec
insl
xchg
popf
les
or
cmp
stos
xor
adc
ja
push
scas
push
and
bound
push
in
iret
sub
pushf
ret
outsb
pop
mov
and
inc
aad
adc
push
push
jmp
test
sbb
es
fidivs
mov
lds
add
sarb
mov
mov
mov
hlt
outsl
aam
arpl
loope
jbe
xor
leave
sbb
mov
or
popl
aam
push
int3
insb
mov
pop
ljmp
push
or
jne
mov
add
test
cmp
cmp
pop
cmpsl
xchg
push
imul
fcmovne
out
pop
inc
daa
jbe
sbb
xor
in
and
adc
aas
xchg
rcl
shll
cmpsl
sbb
lea
test
mov
cmpsl
icebp
pop
or
out
outsl
lods
js
sarl
repnz
scas
pop
scas
sub
shr
cmp
pusha
pop
adc
sub
mov
add
dec
sbb
push
xor
pop
push
jbe
es
shr
sub
insl
pop
faddp
cmpsl
lcall
fcoml
ret
enter
jns
cmp
daa
andb
mov
pop
inc
mov
ficompl
mov
fcompl
ljmp
cmp
xchg
mov
cs
fcmovb
sbb
scas
mov
pop
sbb
push
movsl
into
loopne
pop
cmc
xor
shll
xor
outsl
push
inc
test
into
sbb
cli
pop
test
popa
push
adc
ret
daa
sub
mov
adc
push
aas
in
popa
pusha
jne
test
or
outsl
pusha
js
xor
in
loopne
out
inc
pop
imulb
mov
adc
imul
sub
pop
cmc
or
xlat
xlat
out
sub
or
mov
sub
hlt
sti
fsubs
jmp
push
jns
nop
cmpl
dec
fiaddl
mov
mov
ficoml
repz
cwtl
push
push
xchg
bound
je
push
fstl
jl
xor
fcoml
enter
pop
dec
mov
pop
test
inc
jl
xchg
inc
lret
lods
sbb
jb
cs
dec
mov
leave
jecxz,pn
out
div
test
pop
cwtl
out
jmp
mov
in
dec
bound
mov
push
iret
jle
es
das
scas
mov
repnz
movsb
mov
and
incl
insl
inc
shlb
cmpsl
jne
cwtl
mov
lcall
lret
fwait
sbb
mov
cmc
sbb
fstps
sahf
pop
mov
sub
mov
xchg
ret
pop
xor
fldl
mov
test
in
xchg
pop
sbb
sub
lcall
pop
xchg
mov
mov
dec
pushf
push
sbb
add
push
ja
mov
dec
or
cmpsb
mov
xchg
or
cmp
push
or
push
push
push
pop
add
mov
pop
decl
and
dec
pop
mov
loope
inc
mov
jne
pop
addr16
add
adc
sbb
mov
xchg
dec
push
cmp
jne
das
aad
pop
ficoms
test
arpl
cmp
add
es
mov
lods
or
xchg
adc
inc
movsb
jp
mov
mov
sub
mov
push
add
xchg
insl
mov
jae
filds
out
jmp
pop
ds
fistl
adc
popf
jmp
xor
ja
inc
stos
test
mov
mov
or
push
adc
jns
xlat
adc
nop
push
ret
out
pop
cmc
jae
inc
loopne
test
and
fdivrs
or
xor
out
inc
popf
sbb
mov
sbb
cmpsl
fs
test
lds
mov
mov
or
stos
js
mov
cmp
jge
push
fcompl
inc
jecxz
aaa
inc
adc
sahf
add
cltd
int3
push
pop
adc
push
pusha
push
jmp
sbb
aam
jbe
popf
pop
jbe
sbb
dec
jb
jmp
in
cmpsb
rcrb
enter
daa
jne
mov
jno
xchg
rcl
xchg
dec
push
out
ds
repnz
js
xor
in
lds
pusha
stc
cltd
test
insb
lock
mov
pop
adc
sub
daa
jae
push
idivb
sub
shr
cmp
loop
out
pop
sub
pop
mov
stos
adc
sbbl
jne
add
sub
dec
ficoml
pop
mov
sub
in
addb
push
setp
sub
sub
fdivrl
ret
filds
pop
cmpb
icebp
jg
push
xor
js
or
and
les
cmp
push
xlat
clc
notl
jae
lret
xchg
shll
sbb
pop
call
fs
sti
loope
xor
clc
mov
stc
mov
and
adc
js
add
inc
lods
push
cli
loop
dec
inc
or
push
movsl
cli
xchg
gs
xor
cmp
ret
popl
adc
loopne
cmp
jne
je
cmc
into
adc
daa
and
and
xchg
repz
pop
sbb
ror
js
push
or
jle
sub
std
sti
xchg
cs
repnz
cmp
inc
mov
and
in
adc
pop
inc
mov
out
inc
cmp
pop
jecxz
aaa
adc
jno
pushf
or
xlat
jmp
test
int3
inc
add
pop
inc
out
icebp
aas
popa
fisubs
dec
ss
shll
lock
loop
divb
imul
cmp
sbb
pop
dec
dec
and
mov
dec
lods
mov
mov
lock
add
call
mull
loopne
rcrl
lods
addb
sub
jnp
je
cld
mov
jno
sti
cld
gs
lret
or
push
and
xor
pop
mov
out
sub
pop
aam
movsb
outsl
ret
cmpsb
mov
push
inc
add
clc
rcl
xchg
inc
out
sub
xchg
lods
push
add
adc
cmc
out
and
les
cmc
fsubrp
psllw
mov
loope
adc
enter
xor
pop
xchg
mov
test
mov
xchg
sbb
jne
rcll
pop
adc
mov
popa
add
int
repz
sbb
xor
lock
pop
xor
sbb
mov
pop
xor
test
inc
cld
fwait
jno
mov
xor
sub
imul
stos
insb
adc
mov
mov
adc
and
inc
subb
xchg
inc
or
push
jp
jmp
mov
loopne
mov
sti
add
dec
movsb
in
mov
fbld
jge
mov
xchg
and
adc
aad
pusha
popf
adc
repnz
mov
movsl
stos
sbb
mov
mov
push
insb
dec
pop
es
sti
scas
scas
sbb
adc
push
je
call
dec
cmp
mov
fdivs
loop
inc
fucomi
je
xchg
pop
push
sbb
outsb
fidivrl
sub
lret
sbb
std
shrb
dec
fidivrs
mov
shl
outsl
mov
pusha
cmp
imul
and
out
jbe
mov
jge
out
sbb
ljmp
adc
add
adc
pop
divl
into
push
sbb
das
add
mov
in
cmp
mov
je
xchg
push
pop
dec
lret
cmpsb
inc
push
arpl
sbb
ds
je
loopne
fwait
pop
inc
int
sti
and
dec
ret
ds
mov
movsl
jg
cmp
jg
negb
xor
mov
call
insl
push
outsb
mov
movsl
jecxz
pop
cmp
cmc
js
and
push
test
loope
jmp
adc
jmp
inc
outsb
push
dec
insl
adc
loop
and
ljmp
add
add
xor
lods
cmp
jl
xor
inc
xchg
repnz
pop
fdivl
lcall
lods
fsubr
jae
sub
test
subb
test
addb
movsl
int
aad
sbb
mov
xor
ss
mov
cmp
or
jl
lret
or
inc
mov
mov
aas
das
into
cmpsb
xchg
push
cmc
ret
xor
xchg
in
outsl
aam
call
stc
push
pop
out
cmp
test
lods
cmc
stos
sbb
push
sub
xor
or
or
popa
idiv
mov
push
mov
pop
xor
mov
imul
faddl
sbb
or
test
aad
mov
inc
sub
fdivr
ss
cs
cmp
nop
cmp
add
iret
pop
xchg
inc
sbb
lock
data16
sbb
pop
push
lea
sub
push
mov
xchg
cmp
mov
daa
jmp
pop
cmp
aas
jo
mov
in
aas
add
jb
mov
dec
lods
xor
je
insl
insb
jecxz
and
divb
inc
sub
in
popa
mov
cmp
dec
cmp
imul
fmull
das
insb
xor
mov
mov
mov
pop
inc
shrl
mov
in
loop
pushf
cmpsl
jae
loop
xor
lods
icebp
dec
out
mov
nop
fiaddl
mov
add
popf
mov
fdivr
xchg
rcrb
xchg
aam
dec
movnti
jecxz
fisttpll
lahf
clc
sti
push
cmp
adc
jmp
lods
mov
jle
out
addl
xchg
aad
je
shrb
test
hlt
outsb
pop
cltd
mov
lahf
test
lods
mov
xchg
stos
dec
je
add
sbb
ret
sbb
jnp
pop
mov
nop
jle
push
pop
cmp
call
lock
rorb
stos
or
xor
sub
mov
sub
mov
jmp
inc
ja
jae
dec
call
rcrb
fwait
mov
pop
push
jne
nop
xchg
mov
sub
xor
rcrb
inc
lock
cmp
jbe
bound
out
iret
jne
imul
inc
rcll
outsb
jp
incb
mov
xor
jo
in
or
pusha
push
xor
ffreep
cmp
test
sbbl
pusha
cmp
push
cwtl
lea
mov
cmc
aad
stos
mov
jmp
insb
mov
lods
jmp
jl
out
pop
fs
cmpsl
and
iret
inc
in
cmp
pop
ss
arpl
push
jae
out
inc
faddp
mov
sub
out
mov
xchg
and
sbb
daa
mov
stos
loopne
ficomps
stos
xchg
push
jns
mov
mov
mov
call
dec
addr16
mov
cmpl
xchg
aaa
lds
or
leave
sub
pop
mov
push
mov
test
clc
mov
pop
aam
and
mov
movsb
call
push
cmpsb
jge
in
add
enter
daa
jae
cmpb
dec
add
and
jl
inc
fwait
dec
xor
cmp
loopne
xchg
mov
lahf
jmp
sub
std
popa
test
add
je
std
sbb
pop
arpl
js
mov
pop
movsl
sub
loope
subb
or
lcall
adc
mov
add
cmp
pop
sbb
incl
cs
call
or
sub
ja
pop
pop
push
gs
test
xchg
push
adc
sahf
and
jmp
xorb
jg
std
dec
mov
dec
mov
stos
mov
xchg
test
pop
out
or
loopne
shrb
mov
enter
xchg
or
popa
je
rcr
cmp
pop
xchg
into
mov
pop
cmc
mov
cmc
outsl
mov
out
loop
jne
stc
pop
or
push
notb
mov
push
mov
repnz
out
std
or
cli
mov
cmp
mov
xor
gs
out
and
lcall
sub
imul
in
add
or
sbb
dec
fwait
ret
xlat
xchg
add
mov
pop
jno
in
insl
inc
xor
cs
aad
adc
adc
sub
negl
inc
loop
mov
jle
adc
sti
fidivs
repz
pop
add
lea
lcall
dec
pop
icebp
adc
imul
pop
outsb
cltd
xor
adc
inc
sbb
mov
jb
inc
jmp
and
in
je
mov
dec
idivb
das
ficomps
movsb
adc
andl
loopne
mov
lods
cli
lock
setb
dec
cmc
movsl
mov
insl
xchg
push
and
daa
daa
sar
in
stc
mov
pop
dec
fisttpll
cmpsl
jb
cmp
pop
loop
cld
mov
call
lret
and
addr16
imul
pop
pop
aam
inc
scas
ret
les
mov
jbe
jle
ss
mov
ljmp
shrl
ret
and
xchg
sbb
sbb
imul
mov
pop
inc
jns
in
jl
test
test
xchg
bound
xlat
cld
xchg
arpl
pop
imul
mov
add
adc
xor
pop
orl
mov
xor
push
mov
stos
out
and
and
add
inc
cmp
les
sub
or
or
sti
aad
jne
push
xorl
shll
jns
enter
dec
cld
xchg
mov
pop
out
xchg
stos
sub
mov
inc
jg
adc
stc
mov
mov
mov
movsb
cmp
jle
test
in
lock
pusha
out
xor
xlat
jns
add
dec
jmp
mov
scas
lret
sbbb
gs
pop
push
xor
call
and
add
and
cmp
dec
sub
xlat
xor
orb
cmpsb
dec
pop
ret
fistps
das
lock
add
movsl
jae
xor
inc
loope
rorb
mov
shrl
xchg
js
push
sbb
and
imul
rol
push
jb
shrb
jle
outsb
stc
jnp
push
pop
or
pop
out
ret
hlt
fwait
lds
loop
jbe
add
jge
mov
mov
test
or
add
pop
int3
sbb
pop
mov
push
icebp
xor
in
mov
and
popf
sarb
leave
push
mov
out
or
jmp
and
daa
jb
mov
add
or
xchg
jl
aas
jle
mov
popa
std
movsl
lea
test
push
jne
push
int
inc
mov
adc
sub
push
js
shrb
in
xor
shlb
pop
iret
lea
dec
outsl
add
push
sbb
cwtl
leave
dec
fsubp
fiaddl
mov
add
mov
xor
mov
sub
mov
lcall
ret
fdivrl
add
pop
sahf
enter
push
mov
adcb
xchg
mov
inc
mov
jecxz
mov
and
and
fidivs
dec
cmp
inc
fadds
sbb
lret
faddp
jne
mov
repz
sbb
cmp
push
mov
adc
xchg
cmp
loop
cmpsl
mov
xor
lea
dec
data16
lds
cmp
mov
push
out
dec
cli
sub
incl
jl
lcall
sub
gs
call
ret
xchg
imul
add
xchg
stos
xchg
cmp
push
sbb
and
xlat
rol
mov
mov
fxch
in
fdivs
pop
cs
repnz
aad
mov
nop
out
xchg
cmc
xchg
mov
les
mov
repz
lea
jno
call
flds
adc
in
or
fucomip
adc
pop
pop
adc
dec
inc
cwtl
jo
inc
aaa
bound
aas
ds
jb
add
dec
fwait
push
je
bound
mov
idiv
pop
addr16
add
mov
rolb
pop
mov
jns
cmp
lret
loopne
push
jo
mov
mov
cmp
sub
sbb
rorb
rorl
es
push
insl
fldl
dec
fsub
arpl
lcall
cld
out
hlt
lret
push
aam
mov
adc
lods
pop
sbb
sub
push
mov
inc
push
fisubl
push
lea
std
fstpl
pop
seta
lea
popa
push
inc
fsubrl
int3
imul
arpl
cs
xchg
mov
push
fcmovnb
add
inc
movsl
cltd
and
repnz
movsl
xchg
jb
test
les
sbb
call
cmp
bound
lcall
add
pusha
in
add
sub
stos
xor
dec
xor
sub
daa
popf
mov
popa
cmp
mov
gs
into
sub
inc
rcll
or
out
fwait
repnz
dec
fiadds
jne
andb
lret
mov
add
push
bound
jns
inc
ret
inc
repz
add
into
out
lret
aaa
cs
mov
inc
addr16
in
jp
inc
jo
dec
aam
mov
adc
dec
in
cmp
mov
filds
jbe
xchg
xlat
mov
test
xor
push
out
popf
xchg
pop
push
jae
lods
stos
je
mov
cld
cli
stos
insb
mov
add
xchg
scas
jo
pop
or
iret
add
cmpsb
popf
pop
shll
inc
or
jg
jb
.byte
ret
nop
