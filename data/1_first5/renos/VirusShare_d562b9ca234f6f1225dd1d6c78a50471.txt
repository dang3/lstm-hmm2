jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
xor
bound
bound
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
lea
push
call
call
mov
lea
cmp
js
mov
mov
mov
mov
mov
lea
lea
inc
dec
je
inc
inc
xchg
mov
lea
xchg
mov
dec
dec
dec
call
lea
push
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
call
call
call
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
movl
pushl
pushl
mov
push
call
mov
pop
ret
mov
push
mov
add
movl
pushl
pushl
mov
push
call
call
call
call
movl
pushl
pushl
mov
push
call
call
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
lea
push
call
call
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
movl
pushl
pushl
mov
push
call
call
call
call
lea
push
call
movl
pushl
pushl
mov
push
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
mov
cmp
je
call
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
xor
divl
test
jne
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jno
mov
mov
mov
xchg
mov
mov
lea
dec
inc
dec
jne
xchg
inc
mov
inc
dec
dec
xchg
xchg
lea
mov
lea
dec
mov
cmp
je
jmp
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
push
mov
push
call
mov
mov
mov
pop
ret
inc
gs
jb
arpl
fs
jae
add
push
mov
add
mov
mov
mov
mov
lea
cmp
js
mov
mov
mov
mov
mov
lea
lea
inc
dec
je
inc
inc
xchg
mov
lea
xchg
mov
dec
dec
dec
mov
cmp
je
jmp
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
mov
push
mov
push
mov
push
mov
push
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
cmp
je
call
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
mov
sub
mov
cmp
jge
mov
lea
mov
lea
mov
xchg
dec
inc
dec
inc
inc
dec
xchg
lea
mov
mov
mov
lea
dec
je
xchg
inc
dec
dec
push
mov
mov
xor
call
mov
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
mov
mov
mov
call
cmp
jno
mov
mov
mov
xchg
mov
mov
lea
dec
inc
dec
jne
xchg
inc
mov
inc
dec
dec
xchg
xchg
lea
mov
lea
dec
push
mov
mov
xor
call
mov
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
lea
mov
push
mov
jmp
cmp
jge
mov
lea
mov
lea
mov
xchg
dec
inc
dec
inc
inc
dec
xchg
lea
mov
mov
mov
lea
dec
je
xchg
inc
dec
dec
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
mov
lea
cmp
js
mov
mov
mov
mov
mov
lea
lea
inc
dec
je
inc
inc
xchg
mov
lea
xchg
mov
dec
dec
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
sub
add
add
mov
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
lea
pushl
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
call
push
call
mov
cmp
jno
mov
mov
mov
xchg
mov
mov
lea
dec
inc
dec
jne
xchg
inc
mov
inc
dec
dec
xchg
xchg
lea
mov
lea
dec
mov
call
mov
mov
mov
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jge
mov
lea
mov
lea
mov
xchg
dec
inc
dec
inc
inc
dec
xchg
lea
mov
mov
mov
lea
dec
je
xchg
inc
dec
dec
mov
mov
movl
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
mov
pop
ret
lea
push
cmp
testb
mov
shll
ljmp
stos
mov
mov
mov
mov
int3
int3
mov
stos
test
mov
ror
mov
stos
test
mov
shrb
scas
cmpsl
test
int3
xchg
scas
rcrb
mov
int3
movsl
scas
mov
ljmp
int3
movsl
int3
scas
int3
mov
int3
test
std
int3
dec
ljmp
int3
int3
int3
int3
int3
lahf
inc
sub
xor
cmp
or
cmp
lock
sbb
mov
sahf
in
mov
into
in
mov
enter
loop
mov
in
in
mov
out
mov
add
mov
cli
in
mov
test
mov
imul
int3
inc
xor
test
scas
int3
inc
xor
mov
scas
int3
inc
xor
add
scas
int3
inc
xor
out
cld
scas
int3
inc
xor
in
imul
int3
inc
xor
shrl
scas
int3
inc
xor
leave
imul
int3
inc
xor
iret
std
or
xor
xor
xchg
xchg
or
inc
add
inc
adc
or
mov
or
inc
sub
add
pop
inc
popl
sbb
inc
mov
pushf
inc
popl
popl
pushf
mov
add
mov
inc
vpmacssdqh
add
mov
pushf
inc
popl
pushf
xchg
inc
vpmacssdqh
inc
iret
cld
int3
int3
int3
inc
xchg
inc
test
inc
clc
int
sub
cmp
cmp
dec
int3
int3
int3
inc
adc
adc
mov
int3
leave
push
sbb
adc
int3
int
sub
and
or
int3
cmpsb
int3
cmpsb
int3
inc
and
enter
pushf
inc
popl
pushf
add
and
mov
cmp
push
pop
int3
int3
int3
inc
and
int3
rcl
and
int
sub
xor
and
fmul
vpmacssdqh
mov
int
sub
xor
and
fmul
vpmacssdqh
mov
dec
rcr
xor
out
cmp
int3
int3
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
and
inc
lahf
xor
into
inc
sbb
sbb
or
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
dec
sub
dec
xor
inc
xor
int3
mov
loopne
and
enter
idivl
cmp
inc
cmp
mov
int
sub
xor
popl
inc
adc
int3
cmpsb
faddl
add
or
pushf
inc
popl
pushf
xchg
movsb
int3
dec
int3
int3
cmpsb
int3
inc
popl
popl
pushf
mov
int3
cmpsb
int3
inc
pop
pushf
inc
popl
pushf
mov
scas
inc
inc
push
lock
cmp
cmp
ss
sub
cmp
cmp
or
cs
das
xchg
push
ror
or
inc
sub
enter
sti
adc
cmpsl
int3
int3
int3
mov
mov
int3
int3
mov
xchg
int3
int3
int3
mov
jl
and
int3
int3
int3
fmull
and
int3
int3
jecxz
mov
int3
int3
and
rolb
test
sub
push
int3
test
dec
cmp
mov
ror
mov
and
lret
mov
cmp
int3
push
mov
fcompl
or
sub
cmp
fildl
and
cmp
cmp
push
int3
inc
mov
inc
ss
adc
cmp
cmp
or
push
cmp
cmp
jecxz
inc
and
dec
adc
cmp
inc
cmp
iret
les
ret
mov
xor
xor
pop
enter
cmp
int3
mov
int3
inc
cmp
cmp
cmp
xor
leave
push
inc
int3
int3
int3
adc
inc
ss
lahf
cmp
into
std
push
inc
lahf
xor
cmp
cmp
ss
testb
ss
cmp
int3
mov
int3
adc
inc
ss
push
inc
lahf
xor
xor
cmp
int
std
push
inc
lahf
xor
mov
out
cmp
int3
int3
inc
ss
or
xor
int3
inc
xor
or
ss
lahf
xor
mov
xor
mov
or
inc
sub
or
les
int3
int3
int3
outsb
les
ret
mov
inc
ffreep
mov
pop
enter
int
out
cmp
int3
int3
outsb
ret
mov
insb
les
mov
aaa
std
or
ret
mov
enter
std
push
inc
ffreep
mov
enter
std
or
ret
mov
aaa
inc
pop
enter
std
or
les
enter
std
push
inc
ffreep
mov
pop
enter
int
out
cmp
int3
int3
inc
aaa
std
or
aaa
inc
dec
enter
decb
inc
cmp
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
lea
cmp
js
mov
mov
mov
mov
mov
lea
lea
inc
dec
je
inc
inc
xchg
mov
lea
xchg
mov
dec
dec
dec
movl
cmp
jge
mov
lea
mov
lea
mov
xchg
dec
inc
dec
inc
inc
dec
xchg
lea
mov
mov
mov
lea
dec
je
xchg
inc
dec
dec
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
mov
mov
call
mov
cmpl
je
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
cmp
je
mov
subb
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
xorb
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
incl
mov
cmp
jne
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
mov
call
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
push
mov
push
call
mov
pop
ret
mov
push
mov
add
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
movb
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
mov
mov
pop
ret
mov
push
mov
add
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
cmp
jge
mov
lea
mov
lea
mov
xchg
dec
inc
dec
inc
inc
dec
xchg
lea
mov
mov
mov
lea
dec
je
xchg
inc
dec
dec
call
test
jne
mov
jmp
movw
cmp
jno
mov
mov
mov
xchg
mov
mov
lea
dec
inc
dec
jne
xchg
inc
mov
inc
dec
dec
xchg
xchg
lea
mov
lea
dec
call
lea
mov
pop
ret
push
mov
add
cmp
jo
lea
lea
xchg
xchg
lea
lea
mov
inc
lea
mov
lea
mov
lea
mov
mov
xchg
dec
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
movl
pushl
pushl
mov
push
call
lea
push
call
call
call
mov
lea
mov
lea
mov
xchg
mov
mov
dec
jne
xchg
mov
lea
mov
mov
lea
mov
dec
dec
dec
lea
push
call
call
movl
pushl
pushl
mov
push
call
call
call
call
lea
push
call
call
call
mov
cmp
jp
mov
mov
inc
dec
dec
mov
xchg
inc
mov
xchg
lea
lea
mov
mov
mov
mov
lea
lea
push
call
mov
lea
cmp
js
mov
mov
mov
mov
mov
lea
lea
inc
dec
je
inc
inc
xchg
mov
lea
xchg
mov
dec
dec
dec
call
lea
push
call
lea
push
call
lea
push
call
mov
lea
cmp
js
mov
mov
mov
mov
mov
lea
lea
inc
dec
je
inc
inc
xchg
mov
lea
xchg
mov
dec
dec
dec
movl
pushl
pushl
mov
push
call
call
movl
pushl
pushl
mov
push
call
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
push
call
mov
call
cmp
jge
mov
lea
mov
lea
mov
xchg
dec
inc
dec
inc
inc
dec
xchg
lea
mov
mov
mov
lea
dec
je
xchg
inc
dec
dec
mov
pop
ret
jne
je
jae
fs
insb
and
add
in
add
lea
push
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
call
call
movl
pushl
pushl
mov
push
call
call
call
call
call
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
call
call
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
call
cmp
jno
mov
mov
mov
xchg
mov
mov
lea
dec
inc
dec
jne
xchg
inc
mov
inc
dec
dec
xchg
xchg
lea
mov
lea
dec
lea
push
call
lea
push
call
mov
xchg
mov
lea
mov
inc
inc
inc
dec
jne
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
dec
dec
inc
dec
je
dec
dec
lea
push
call
call
mov
pop
ret
subl
jae
mov
mov
cmp
jnp
lea
mov
xchg
lea
lea
mov
lea
lea
mov
lea
lea
dec
dec
inc
mov
lea
lea
dec
mov
mov
mov
lea
call
cmp
jne
xchg
xchg
lea
dec
dec
xchg
mov
mov
mov
xchg
xchg
jmp
mov
mov
mov
lea
xchg
ret
mov
ret
lea
push
xor
add
add
stos
fnsetpm(287
ds
insl
cwtl
cmp
cmpsl
jo
arpl
add
and
jb
ds
xchg
repnz
adc
or
pop
push
lahf
mov
fisttpl
add
add
add
movl
add
clc
add
gs
sbb
rolb
sbb
add
add
mov
add
loop
pop
add
xchg
add
in
add
and
ds
fiadds
add
addl
jecxz
dec
add
pop
adc
aam
add
in
sbb
jmp
add
ficomps
mov
repz
or
sub
pop
jecxz
xchg
add
add
out
and
and
push
jnp
inc
dec
add
add
cltd
in
xorl
imul
sbb
fmull
fadds
add
fmull
add
add
inc
add
mov
shrb
iret
add
add
mov
xchg
add
fcoms
push
jns
lea
sub
in
loope
mov
rorb
add
add
mov
cmp
push
roll
add
sbb
add
sub
sbb
pop
movsl
je
xchg
add
dec
add
fcoml
inc
mov
push
push
add
div
lods
cwtl
add
add
push
add
icebp
sti
add
push
mov
push
aam
mov
add
push
cmp
jmp
add
shrb
bound
inc
add
or
es
ds
loope
loop
cltd
dec
and
add
adc
add
lret
lods
jns
loop
pop
test
xchg
add
mov
jge
arpl
add
inc
pop
jle
add
add
xor
pop
add
fldenv
push
add
inc
add
inc
dec
aad
cmp
or
add
push
imul
jmp
iret
int
loopne
nop
push
fimuls
add
ss
xchg
dec
add
in
fcomip
xor
xchg
and
mov
daa
add
cwtl
rcll
sbb
dec
push
or
out
cmp
sub
sub
add
mov
add
sahf
mov
out
push
ret
mov
out
in
add
add
or
add
cltd
add
and
and
or
aaa
jge
push
add
aad
jmp
add
cmp
add
push
cld
mov
push
or
sbb
jo
jecxz
push
add
gs
js
add
add
sbb
cs
add
add
dec
xchg
lcall
mov
add
add
jne
jns
popl
movsl
pop
mov
add
mov
mov
dec
cmpsl
push
add
sub
loop
mov
add
sub
xor
push
adc
mov
inc
add
cmp
push
and
nop
xor
jle
add
pusha
jecxz
lock
xchg
mov
add
cltd
pushf
mov
or
adc
add
mov
add
rolb
lds
xchg
lret
and
mov
xchg
hlt
add
ret
add
push
stos
add
divb
lahf
add
jg
cmp
add
fs
sbb
jno
rolb
add
add
popa
sub
sahf
jo
add
loopne
add
rcr
mov
add
add
jmp
pop
or
cld
add
in
dec
xchg
iret
loop
add
or
clc
lock
icebp
add
das
aam
sti
adc
sbb
add
cmpsb
add
sub
adc
adc
lea
mov
dec
mov
daa
dec
mov
movsb
and
jg
fldt
jmp
sbb
inc
mov
inc
mov
das
loopne
sub
dec
dec
mov
shll
lcall
cwtl
and
xchg
cmpsl
addr16
mov
pop
sbb
cld
xchg
adc
mov
ret
mov
push
stc
lock
pop
push
mov
sbb
clc
aas
iret
aam
mov
sbb
sub
jg
cmpsb
mov
xchg
jns
in
jne
xor
stos
push
sarl
idivb
mov
push
aad
mov
les
add
xchg
hlt
cltd
dec
notb
mov
cld
stos
push
sub
inc
frstor
shrb
xchg
xchg
pushf
cmp
pop
rcrb
mov
mov
xor
daa
jecxz
xchg
sub
xchg
cmp
adc
arpl
scas
xor
sbb
ret
add
xchg
pop
std
test
dec
pop
ja
ret
aaa
pop
inc
cmpsl
mov
sub
jnp
clc
adc
sbb
sub
xor
bound
ret
fadds
in
mov
add
mov
xchg
icebp
in
addr16
sub
jp
dec
mov
aas
dec
sahf
mov
into
dec
mov
fmul
mov
insb
and
aaa
ljmp
adc
into
adc
jmp
xor
or
jmp
stos
repnz
and
ds
insb
mov
hlt
sahf
jle
xchg
xor
clc
add
iret
mov
imul
pop
imul
push
inc
jp
cmp
shrb
xor
jb
out
lods
into
inc
imul
push
adc
sbb
sbb
fistps
or
and
stc
push
pop
inc
outsb
adc
xorl
leave
jl
movsb
hlt
aam
ljmp
daa
xor
ret
push
mov
daa
cmpsb
add
sbb
faddp
loopne
lds
push
pop
rclb
scas
iret
sub
cmp
pop
push
push
or
jbe
ja
jge
stc
push
sbb
mull
addr16
push
cmp
mov
hlt
jl
js
dec
gs
xor
push
add
dec
add
lahf
pop
test
test
xchg
mov
ljmp
enter
pop
cltd
lret
or
cltd
lret
loope
in
sub
add
fisttpll
bound
pop
in
repz
pop
and
sbbl
sub
add
xor
mov
mov
pop
pop
aaa
dec
inc
js
stos
mov
lcall
xchg
fcoml
xchg
push
outsb
pop
int3
mov
add
pop
jg
cmp
mov
imul
xchg
and
push
xor
mov
dec
inc
sub
jb
lret
gs
push
mov
je
in
adc
sahf
leave
cmp
test
and
xor
daa
lock
lahf
cmpsl
stc
mov
mov
xchg
adc
mov
pop
cmp
mov
cli
pop
adc
push
arpl
cmp
dec
decb
mov
sahf
pop
cmc
fisttpll
xor
cs
adc
pushf
dec
imul
add
sub
mov
in
mov
cltd
push
xlat
mov
sub
lods
push
mov
jno
popa
sti
sbb
incb
mov
add
inc
jns
adc
les
and
out
mov
xchg
popf
pop
push
sbb
or
dec
repz
icebp
rcll
loope
sbb
cmpsl
jb
rorb
popf
nop
pop
imul
adc
jb
push
dec
mov
mov
out
sbbl
lea
and
test
push
cli
mov
lret
hlt
xchg
dec
daa
test
fistl
fistps
in
inc
gs
inc
pusha
fwait
pusha
das
mov
or
add
sub
mov
xor
push
xchg
sub
lahf
into
cmpsl
dec
push
mov
xor
adc
sbb
pop
mov
cmp
jnp
pop
outsl
test
inc
sub
cmpl
js
dec
lods
in
insl
lret
dec
mov
jecxz
ljmp
loop
sub
int
movsl
out
push
mov
pop
xchg
cmc
mov
and
add
sarl
test
loope
andl
out
hlt
test
dec
adc
clc
xchg
adc
push
es
pop
insl
clc
stos
repnz
sbb
mov
fcoms
out
mov
shlb
mov
or
insl
mov
movsb
in
dec
scas
ss
test
xchg
enter
ljmp
jo
or
lret
lahf
fwait
add
rcrl
fwait
pushf
flds
inc
nop
mov
xchg
leave
cmpb
mov
dec
dec
or
into
pop
sbb
pop
push
sbb
mov
mov
std
push
mov
fdivr
jnp
lahf
adc
jne
push
fidivl
push
mov
xchg
call
je
xchg
ds
cmpsl
cmpl
sub
cmpb
push
sub
and
in
daa
push
iret
jle
sbb
in
xchg
inc
pusha
xor
iret
sbb
add
test
inc
test
test
push
cmp
push
jg
mov
mov
push
pop
fiaddl
inc
xchg
mov
ss
pop
mov
into
movsb
cs
xorl
imul
mov
ljmp
hlt
pop
mov
inc
inc
add
test
adc
or
add
int3
sbb
jg
out
sub
fisubs
pop
lds
mov
scas
scas
sbb
and
pop
repnz
push
xchg
push
pop
pop
popf
jbe
enter
add
sbb
ret
popfw
sarb
sbb
into
jl
pusha
jmp
push
cmp
xor
sub
push
lahf
jle
push
push
mov
inc
inc
push
push
mov
lea
mov
lcall
sbb
push
add
push
xor
sub
outsl
xlat
cmp
xor
add
xchg
movsl
loope
aaa
and
xchg
fwait
push
jae
xor
dec
sbb
fildl
cmpsl
sub
imul
dec
add
cwtl
mov
push
push
inc
push
sbb
inc
fs
sub
or
fstl
fcoml
jg
cli
mov
xchg
dec
mov
mov
and
inc
or
cmpsb
jecxz
int
sbb
sub
aam
testl
fcmovb
mov
or
sbb
jno
insb
cmp
test
int
outsl
push
lret
incb
stc
push
adc
int3
adc
pop
add
inc
popa
pop
out
dec
jge
xchg
mov
aas
cmp
imul
sar
adc
outsl
xor
ret
pop
out
outsl
adc
jmp
les
lods
mov
test
add
scas
pop
shrb
std
mov
cmp
pop
mov
jle
leave
sti
enter
test
jnp
add
and
das
mov
inc
fsin
rcr
add
pop
repz
cmc
jmp
cmp
pushf
int
cmpsl
pop
pusha
cmp
adc
repz
sahf
cs
mov
out
mov
lods
jb
xor
je
xor
jecxz
mov
orb
cwtl
jb
push
imul
orl
movsl
cmpsb
fildl
mov
xchg
inc
jnp
shrb
sahf
push
and
mov
cmp
mulb
fisttpll
std
aam
mov
xchg
or
mov
or
sbb
mov
sub
enter
cmp
dec
pop
mov
or
out
xor
ss
ret
pop
hlt
adc
das
scas
push
dec
pushf
aaa
mov
ljmp
aas
lods
xchg
push
mov
xchg
into
inc
and
inc
fdecstp
jb
dec
cltd
mov
xchg
test
je
push
adc
cs
jno
ss
xor
aas
jo
insl
pop
insl
xchg
sub
stos
loope
push
out
in
jne
xchg
mov
mov
lret
jns
jne
or
and
sub
push
pop
mov
cmpsl
mov
into
test
jne
ja
inc
jp
xor
aad
aad
xchg
or
cmp
xchg
ds
mov
add
adc
jne
jp
dec
add
cmp
xor
mov
cmp
sahf
jno
pop
and
insb
bnd
outsb
mov
mov
inc
je
dec
xor
jne
and
jne
pop
xchg
mov
inc
xor
or
test
out
fstpt
or
cmp
stos
fmuls
insb
xchg
mov
jnp
add
jle
xchg
hlt
in
xchg
daa
pusha
int
sbb
jns
dec
ret
ret
pop
or
dec
fidivs
clc
push
inc
outsl
ficompl
sbb
inc
rclb
mov
icebp
es
leave
packssdw
mov
push
jmp
inc
mov
cmp
cmpsb
mov
arpl
pop
add
pop
sbb
loop
int3
aaa
aaa
or
or
push
add
int3
mov
pop
adc
push
dec
jl
push
pop
clc
lds
mov
rorb
xchg
and
fidivrs
adc
mov
push
test
cmc
jbe
mov
jge
repnz
hlt
jne
daa
gs
lret
xor
sbbb
sbb
add
fiaddl
lahf
popf
sahf
mov
nop
test
push
sbb
test
insl
jne
lock
fldln2
movsb
cmp
cltd
push
sbb
pop
repnz
xchg
sbb
loope
cmpsl
imulb
int
and
and
xchg
pop
cmp
addb
cld
sbb
incb
insl
dec
xor
ret
adc
pop
test
push
js
bound
lcall
mov
in
fidivl
outsb
pop
push
and
mov
sarl
in
mov
jmp
mov
lock
mov
lret
jmp
jbe
int
lret
out
mov
jp
lret
xlat
shll
xchg
mov
in
sbb
icebp
sahf
wrmsr
and
xor
sub
scas
outsl
in
shl
xchg
push
dec
stc
and
xor
fsubrl
ss
ja
repnz
fadds
mov
mov
out
xor
add
stos
pop
fisttpl
jg
sub
cmc
imul
xor
xchg
mov
adc
inc
stc
adc
stos
mov
adc
xor
jae
clc
js
xlat
push
pushf
inc
sub
mov
in
inc
or
inc
dec
dec
imul
or
mov
inc
in
pop
aaa
flds
les
xchg
and
xchg
sbb
adcb
dec
pop
adc
push
pushf
mov
inc
ucomiss
pop
inc
nop
push
inc
push
aas
push
repz
lcall
adc
cmpsb
mov
and
lahf
and
mov
push
iret
mov
mov
cmpsb
push
inc
dec
std
jne
push
push
inc
jae
lds
movsl
mov
mov
outsl
push
mov
fistps
outsl
mulb
xor
jnp
and
fs
arpl
loope
dec
cld
adc
inc
cmp
cmp
lahf
inc
pop
lods
daa
sar
adc
aam
js
ret
xchg
mov
ljmp
cli
sbb
xchg
ss
ljmp
icebp
lods
add
jl
mov
mov
insb
xor
and
add
repnz
out
sahf
or
add
je
jns
cwtl
imul
jo
test
sbb
mov
rol
and
pop
ret
in
stos
rclb
out
xchg
push
xchg
push
movsl
xorl
sbb
xor
or
ret
pop
xchg
jge
jne
fsubp
aad
dec
js
and
pop
and
orl
test
out
cmc
xor
add
jnp
push
jg
std
leave
push
in
outsb
call
push
push
pop
mov
loopne
mov
jp
or
fdivrs
lods
xchg
dec
gs
shlb
insl
push
mov
enter
push
popf
xchg
mov
jbe
cli
mov
xchg
aam
roll
jb
test
xacquire
jbe
lock
cmpsb
mov
and
cmp
fdivrl
xor
fldl
fwait
in
out
fsubs
push
iret
fdivr
ret
cmp
pop
pushf
int
fwait
adc
push
add
push
sbb
or
int3
fisubrl
xchg
cmp
aas
sbb
pop
sub
scas
dec
jmp
scas
adc
mov
nop
and
leave
loope
hlt
mov
test
inc
or
lods
or
pop
orb
out
inc
testb
repnz
pop
dec
xor
jo
mov
mov
scas
insb
push
inc
and
loopne
cmp
cmpsl
xchg
movsb
and
xchg
push
imull
jbe
sub
lds
scas
mov
pop
cmp
add
int
es
lods
sub
adc
push
leave
xor
scas
lahf
mov
lods
mov
out
dec
inc
pop
aam
cmpsb
jae
popa
in
mov
cltd
enter
pop
push
dec
fsubrl
in
call
sub
jg
fldt
or
inc
xor
movsl
out
jl
and
cmp
cmpsb
xchg
sbbb
mov
add
xchg
aad
xor
dec
sub
popf
xchg
pop
int3
jae
lcall
into
fcompl
dec
mov
test
rclb
ljmp
pop
popa
xchg
mov
repnz
clc
pop
daa
push
lods
jge
int
pusha
leave
sub
or
lret
mov
mov
jmp
int
lds
jns
cmp
mov
jbe
outsl
les
fsubrs
push
adc
movsb
and
notb
scas
fdivrs
sbb
cli
mul
sbb
mov
and
out
xor
xor
xor
pop
pop
adc
mov
testb
mov
nop
cmp
xrelease
add
adc
mov
mov
es
out
push
push
adc
movsl
dec
mov
inc
ljmp
mov
push
sub
out
xchg
mov
xchg
cltd
pop
in
adc
and
jmp
aaa
mov
sti
ds
aad
ja
nop
jmp
jb
xor
mov
jecxz
pop
mov
mov
mov
stos
sbbl
mov
push
aad
cmp
sbb
in
jne
sti
clc
or
cli
pop
or
enter
dec
add
test
mov
ret
pop
xchg
mulb
inc
lret
cltd
lock
arpl
xor
icebp
mov
add
lret
imul
fdivl
mov
dec
ror
push
sbb
aam
pop
dec
ret
and
mov
repz
xchg
or
ljmp
push
mov
xlat
and
jae
loopne
jl
mov
inc
mov
add
movsb
cltd
and
aam
mov
aaa
push
aaa
incb
mov
xor
or
loop
rorl
rcrl
aam
pop
outsb
lcall
mov
cmp
adcb
pushl
adc
or
test
mov
lods
int3
js
in
xor
and
decl
inc
add
push
push
test
xchg
add
cwtl
mov
xor
bound
sbb
mov
stos
in
cld
mov
mov
scas
cmp
pop
fwait
push
addr16
rclb
popa
mov
mov
and
xchg
or
adc
mov
mov
pop
xchg
popa
or
test
movsl
nop
out
xchg
sub
jno
daa
push
in
xchg
stos
mov
das
cmp
and
and
in
scas
pusha
add
loopne
mov
pop
sarl
pop
jae
aas
and
popf
test
mov
ficompl
add
xchg
inc
out
sbb
enter
fisubrl
scas
lods
adc
push
ja
int
push
pop
mov
mov
dec
pop
pop
xchg
hlt
add
int
jecxz
or
or
fsubrs
mov
cwtl
or
xchg
adc
fstpl
jl
pop
fimuls
lds
subl
cmp
mov
push
inc
pop
jnp
enter
idivb
sbb
daa
arpl
cmp
sub
jl
adc
push
loope
sbb
cmp
jp
fcmovne
jbe
or
push
movsb
push
mov
roll
daa
cmpsb
testb
jb
jl
mov
call
loope
stc
inc
sub
scas
cmp
mov
ds
sub
lret
outsl
lds
sbb
pushf
aaa
add
imulb
xor
sub
pop
rol
mov
pop
dec
push
or
inc
cmp
faddl
xchg
mov
mov
test
jmp
insl
loope
jg
orb
jne
mov
insl
cmpsb
and
push
dec
push
scas
clc
jns
pop
sub
xchg
add
xchg
add
rorl
mov
call
add
aas
addr16
andb
push
stc
jbe
fs
fsts
jp
cmp
cmp
cmp
js
clc
out
enter
mov
xor
cmpl
adc
cmc
stc
inc
pop
xor
jns
pop
inc
ja
adc
sti
imul
mov
sub
aaa
lods
dec
xchg
mov
xlat
test
sub
repz
sbb
and
jno
sbb
xor
in
daa
inc
adc
add
sub
sbb
clc
movsl
adc
dec
aad
pop
jns
rcll
jb
pushf
push
int
jmp
out
subb
popa
aad
clc
pushf
nop
les
aas
mov
dec
xchg
or
je
jmp
mov
lea
je
call
xchg
test
stos
adc
xchg
push
adc
pop
sahf
xchg
in
sbbl
das
cmp
mov
fstl
loopne
in
insl
insl
imul
ss
leave
insb
and
bound
mov
mov
cld
imul
lret
fsubs
bound
lret
fildl
out
inc
pop
jmp
push
rcrb
icebp
mov
xchg
cltd
rol
mov
xor
mov
mov
dec
lea
xchg
mov
mov
cmp
outsl
les
fcoms
mov
cli
cmp
imul
lahf
sbb
aaa
loopne
cltd
pop
inc
je
mov
xchg
mov
out
aad
out
and
sbb
stos
push
pop
sbb
call
out
push
clc
in
xchg
mov
arpl
mov
call
push
xor
icebp
outsl
or
or
mov
mov
dec
dec
dec
mov
aam
sbb
jmp
dec
inc
lcall
fwait
mov
aas
jmp
add
jg
bound
lock
in
fistpll
xchg
mov
mov
mov
push
pop
std
addr16
jp
push
add
mov
jb
fstl
pushf
mov
mov
sub
call
xchg
lock
out
mov
sub
insb
jno
push
and
xor
and
mov
inc
jnp
fldenv
and
arpl
rcr
iret
xchg
aas
xchg
ret
fcomps
xchg
inc
mov
or
leave
pop
push
mov
inc
mov
or
fcmovbe
mov
cmpsl
sbb
push
ja
mov
ucomiss
fdivrp
adc
sbb
repnz
iret
test
hlt
dec
xchg
mov
bnd
inc
adc
or
push
jmp
aaa
je
xchg
or
add
add
mov
xor
gs
sahf
scas
sub
shll
idivb
movsb
cmp
push
xchg
xchg
add
popf
push
mov
and
leave
loopne
xor
xchg
jl
dec
cltd
dec
nop
mov
push
les
add
shl
lahf
cli
arpl
test
jge
lea
insl
shll
pop
rorl
lret
mov
aam
mov
loope
fcoms
cmp
xor
lahf
movsl
std
adc
and
add
inc
sbb
sbb
adc
xor
mov
pop
cli
sbb
pop
lret
lcall
push
fsubr
ss
sub
ret
jge
xor
je
dec
mov
jg
sbb
push
mov
cmp
and
mov
mov
outsb
int
aaa
loop
adc
ja
inc
jecxz
lret
fcmovnb
in
adc
pop
jmp
test
jno
addb
outsl
add
loop
iret
insb
stc
inc
loope
fs
out
ss
adc
xor
out
cli
xchg
cli
pop
out
lods
xor
jnp
sub
mov
int3
mov
into
pushf
lods
xchg
sarb
dec
mov
adc
and
jns
rcrb
mov
lods
xor
mov
push
inc
xlat
ret
push
outsl
sub
sbb
mov
sub
xor
cwtl
gs
in
push
loopne
fimull
dec
inc
xchg
pop
inc
and
stos
clc
les
fstl
hlt
sbb
xor
pop
pop
sub
dec
adc
xchg
jmp
imul
ja
aad
fldl
nop
lahf
pushf
repnz
jge,pn
jb
or
je
int
jecxz
sub
lea
mov
mov
sbb
mov
sbb
jmp
dec
mov
dec
out
inc
and
inc
out
and
sbb
mov
xchg
and
inc
sarl
ljmp
jns
cwtl
cmpb
popa
sbbl
lret
icebp
or
xchg
je
lret
inc
ss
mov
sub
mov
or
dec
shlb
shrb
ret
aam
sub
ret
inc
sahf
mov
insl
dec
xor
sub
daa
data16
xor
test
mov
sbbl
sahf
paddd
add
dec
and
jg
cltd
pop
xchg
mov
insl
cltd
push
mov
sbb
or
cmc
ror
cmpsb
add
les
stos
popf
nop
pop
out
jns
cmp
ss
outsb
push
mov
push
add
or
xor
add
mov
mov
outsb
dec
mov
mov
ja
jge
dec
lcall
sbb
fwait
out
loopne
push
lret
add
into
cwtl
in
out
icebp
test
bound
jne
add
sub
lock
mov
sub
mov
adc
shll
jp
and
mov
je
mov
add
lods
dec
push
add
sbb
jns
aam
icebp
loop
xchg
pop
inc
sbb
mov
and
int3
sub
addr16
push
arpl
xchg
stos
movsb
dec
andb
jg
insb
ds
jnp
push
mov
inc
add
in
pop
sbb
iret
cmc
in
ret
dec
pop
inc
idiv
inc
mov
xchg
sbb
dec
push
out
div
xor
mov
loop
test
adc
prefetchnta
imul
scas
jb
dec
push
add
mov
mov
mov
hlt
xchg
lahf
or
inc
adc
and
into
std
data16
xor
lret
or
sbb
aaa
out
jo
mov
cmp
ficoms
mov
shl
repnz
or
push
cltd
into
cmp
insb
sti
movsb
lds
push
in
mov
dec
sub
sbb
or
daa
popa
sahf
mov
fs
push
jl
push
mov
push
cmpsl
iret
sbb
jo
icebp
rcrb
pop
shrl
dec
punpcklwd
mov
inc
jbe
enter
pop
adc
push
xchg
adc
sub
idivl
call
call
push
and
inc
xlat
sub
sti
push
sbb
sub
sbb
jbe
jle
push
into
mov
and
js
ret
or
lcall
lcall
lock
mov
jg
mov
das
mov
mov
dec
pusha
sub
and
dec
iret
int
js
sub
mov
xlat
sarl
mov
sub
fwait
mov
test
mov
outsl
popa
leave
cmp
fnsave
std
out
push
fs
sbb
mov
mov
push
push
out
mov
cli
nop
add
xor
repnz
imul
jg
shl
xchg
xor
xor
jne
imul
ljmp
cmp
jmp
mov
sub
xlat
add
popa
mov
repz
push
sar
es
dec
loopne
mov
dec
movsl
cmp
inc
cmp
test
pop
insl
sbb
sarl
leave
push
das
xchg
das
rcl
sbb
outsb
dec
adc
dec
fidivrs
pop
fildll
pop
adc
jp
pushf
fs
jmp
stos
dec
cs
jmp
sub
daa
nop
jp
xor
int
cltd
jb
aas
sbb
xor
je
push
mov
xchg
int
filds
call
adc
cwtl
mov
xor
test
loop
pop
in
mov
popl
das
stc
pop
push
mov
dec
pop
lea
jle
rorl
popa
cmp
cmp
sbb
icebp
cmp
ljmp
cwtl
bound
pop
jecxz
lock
enter
xor
rolb
pop
sub
or
es
js
sbbl
ljmp
int3
lods
scas
jbe
mov
inc
inc
outsl
and
dec
cmp
pop
and
ds
lret
test
into
push
sbbb
fnsave
dec
clc
pop
ss
mov
in
pop
add
and
inc
pop
outsl
mov
stos
mov
mov
xchg
sbb
adc
xchg
scas
aaa
xor
xchg
jns
outsl
push
inc
mov
mov
push
dec
sbb
aaa
test
je
ja
xchg
orl
in
cmp
jecxz
fwait
sbb
enter
pop
mov
jmp
mov
jns
je
in
mov
les
loope
inc
pop
int3
jo
rcrb
xchg
sbb
insb
cltd
leave
mov
or
stos
xchg
jne
push
add
adc
xchg
fidivl
insb
xchg
add
jg
xchg
dec
movsb
out
in
ljmp
bound
mov
and
sahf
sarl
nop
imul
dec
fs
aam
add
ret
dec
pop
js
inc
inc
insl
cmpsl
jae
test
rcrb
dec
pop
inc
or
jmp
cmp
xchg
xchg
shl
sbb
std
adc
hlt
scas
scas
aad
push
dec
jno
adc
or
mov
fsubrl
mov
hlt
loope
mov
push
addl
push
in
push
repnz
push
loop
add
push
push
int3
sahf
add
pop
or
fidivs
sub
rorb
push
scas
call
fcmovnb
cmp
fcomp
push
xor
out
xchg
xor
jge
negl
fwait
movsb
sub
pusha
test
jno
push
jl
xor
rorl
mov
xor
dec
and
lahf
cmp
xchg
test
adc
cmpsb
jg
cwtl
in
daa
pushl
subb
push
xor
test
mov
cmp
std
movsl
or
repnz
mov
or
data16
add
cmp
inc
enter
test
js
dec
push
pop
enter
push
dec
arpl
faddl
sub
cmp
and
jg
pusha
imul
mov
mov
xlat
mov
xor
push
push
mov
sahf
stos
sub
insl
sti
test
mov
adc
int3
sbb
inc
adc
jbe
xor
aad
loop
dec
pop
stc
mov
repz
in
adc
stos
add
cmp
test
ljmp
incl
mov
into
stc
cmc
dec
sbb
fstpl
xchg
inc
adc
cli
fsubrs
or
add
xchg
and
shrb
add
mov
icebp
xlat
inc
cmpsl
test
sarl
mov
pop
xchg
sti
loop
pop
jp
leave
gs
cmpsl
jle
add
sub
dec
xor
fsts
aaa
push
xchg
repnz
clc
cmp
test
pop
xchg
stos
sbb
inc
xor
gs
scas
sub
xchg
jbe
push
cmp
aas
insb
inc
lock
stos
lret
pop
es
xchg
mov
xchg
push
inc
cwtl
add
call
rorl
inc
sbbl
cmp
inc
push
scas
xchg
inc
sbb
push
das
mov
xchg
xchg
divb
movsb
cwtl
clc
cmpsl
sbb
xor
icebp
adc
push
cld
in
xor
lret
and
jg
mov
std
lock
add
pop
dec
pop
xor
sbb
mov
call
clc
inc
dec
ret
popa
mov
inc
repnz
insl
sbb
dec
jle
inc
xchg
jno
repz
mov
mov
arpl
iret
and
call
push
cmpsl
add
or
scas
sub
mov
mov
push
inc
or
dec
clc
xchg
or
pop
mov
shll
jns
sbb
leave
out
aas
push
gs
popa
iret
mov
pushl
aam
xor
mov
out
mov
popf
incl
andb
test
lret
and
mov
inc
pop
sub
or
dec
fistps
adc
faddl
add
in
out
scas
pushf
movsb
bound
jns
in
jg
xchg
mov
mov
ja
mov
xchg
mov
jp
mov
mov
mov
lret
mov
dec
cmc
dec
aam
lods
jne
add
das
inc
add
das
stos
jne
lods
push
pop
jmp
lret
cld
dec
andl
in
sub
pop
in
out
loope
dec
stos
mov
and
jecxz
jnp
xchg
cmpl
fwait
test
outsl
pop
adc
mov
jg
aam
lcall
lds
rcl
clc
jae
inc
push
aam
mov
inc
mov
scas
inc
xchg
cs
xchg
in
lahf
popa
sbb
mov
imul
scas
cmp
adc
push
jb
ret
jo
mov
das
mov
leave
xor
cmp
sub
arpl
dec
addb
inc
or
fisubrs
or
pop
inc
add
dec
int3
mov
cmc
pop
cmp
mov
fsubrs
mov
scas
xor
mov
and
movsb
fisttpl
sbb
mov
jge
ds
sbb
loopne
pop
aam
cmp
mov
jno
shlb
jmp
xchg
push
insl
or
jo
push
lahf
push
dec
inc
push
addb
push
fidivrs
sub
push
cmpsb
add
sbb
push
insb
mov
jnp
dec
pop
xchg
lds
test
mov
popf
dec
cmp
mov
cmc
shrb
and
mov
jmp
cld
cmpb
sbb
notb
movsb
mov
pop
outsl
ja
js
insb
cmpsl
pop
inc
out
inc
lcall
data16
push
jl
jae
pop
outsb
jno
sbb
jg
or
mov
dec
inc
mov
mov
cld
push
mov
cmpsl
push
testl
ja
mov
sbb
sahf
loope
addl
pop
in
loop
pop
sahf
stc
imul
fisubrs
adc
adc
faddl
jmp
ds
cli
testb
inc
aaa
cmp
addr16
or
cmp
lea
xor
fs
mov
mov
imul
cmpb
inc
mov
lods
call
clc
sbb
xorb
mov
leave
mov
sti
xchg
sbb
popf
and
gs
in
loopne
lods
outsl
dec
arpl
pop
fxch
fildll
xlat
dec
out
repz
mov
lret
sbb
in
sub
inc
test
adc
arpl
jmp
jbe
cs
nop
xor
bound
dec
mov
je
jb
jecxz
fwait
test
pop
call
nop
mov
xorl
mov
arpl
orl
movsb
jbe
mov
enter
enter
sti
and
in
shrl
push
pushf
div
pop
sub
notl
cwtl
mov
jp
pop
aam
mov
jmp
xor
lret
xchg
or
mov
jp
lock
push
out
xorb
shrb
cmpsl
mov
mov
es
call
mov
xor
xchg
mov
xchg
adc
popa
lret
pusha
cltd
lods
test
push
mov
xchg
push
and
cmpl
add
cmp
test
cmp
fldl
jb
xchg
push
sbb
stos
push
jl
mov
jns
push
or
call
std
in
xor
popf
or
push
xor
call
call
dec
out
dec
test
mov
ja
push
std
dec
xlat
lret
testb
jnp
fstps
mov
enter
adc
pop
rcrl
mov
or
inc
and
mov
sub
mov
inc
adc
mov
lea
inc
insb
push
mov
push
sbb
mov
mov
stc
sbb
mov
pushf
cmp
dec
xchg
stc
xchg
andb
jmp
xchg
sbb
xorl
sub
pop
jmp
subl
jg
or
push
call
in
push
pop
pusha
or
loopne
out
lcall
xchg
loope
iret
cwtl
cwtl
push
xchg
stc
popf
insb
iret
mov
push
jo
ficompl
nop
lcall
test
scas
fwait
daa
jo
ficoml
enter
shl
insl
jmp
stos
dec
out
hlt
ja
cmpsb
arpl
mov
mov
push
jo
cs
xor
cld
cmpb
scas
sahf
fidivrs
rolb
scas
cmpsb
inc
push
and
aas
cmp
xchg
scas
push
roll
cmp
mov
ficomps
adc
cltd
cmp
mov
jno
xchg
sarl
dec
dec
and
outsb
xor
add
sub
push
push
loopne
test
test
iret
leave
cmpsb
test
xchg
in
cmc
mov
mov
shlb
mov
loope
mov
test
cmc
ja
sbb
xchg
movsl
sbb
movsb
and
add
orb
add
or
addr16
hlt
pop
xchg
pop
cmpb
mov
pusha
pop
lcall
lret
fcompl
jne
outsb
aam
cmp
shlb
xor
sub
mov
ret
push
push
pusha
push
mov
xchg
mov
idivl
push
add
push
adc
inc
imul
cltd
push
sbb
nop
jne
loop
subb
loop
popf
jbe
and
mov
mov
mov
or
and
fcomps
push
sub
cmp
jl
xor
and
or
adc
mov
pop
fisubrs
adc
aam
rcrb
add
icebp
adc
adc
test
xlat
mov
mov
mov
xor
mov
inc
inc
in
rol
cmp
jg
xlat
les
ret
inc
jno
pop
flds
repz
repz
inc
sbb
pop
adc
pop
clc
imul
gs
data16
add
aad
pop
pop
nop
or
aas
stos
pop
fbstp
sbb
jo
sbb
bnd
sahf
lds
adc
aad
cld
sub
mov
setno
movl
inc
pop
int
cwtl
inc
and
scas
inc
push
aas
loope
xchg
mov
mov
jo
lcall
mov
ret
std
or
push
outsb
daa
clc
cmpsl
pop
testl
ret
cld
inc
inc
or
xor
mov
jns
scas
pop
call
pop
xchg
sbb
sahf
cmpsl
jnp
mov
push
inc
push
fwait
insl
jmp
pop
add
repz
popa
loop
fildll
jl
mov
popf
rcr
push
xchg
pop
mov
popf
cltd
outsl
xchg
hlt
test
push
gs
or
push
leave
dec
adc
test
outsl
inc
xchg
std
xlat
shll
cmp
stos
pop
in
shr
loope
xchg
out
xchg
push
mov
sub
or
stc
xor
xor
pop
sub
xchg
add
ja
hlt
inc
dec
lret
inc
lea
push
or
pushf
icebp
fwait
stos
lea
push
cmp
add
cmp
bound
xor
in
cmp
xchg
sub
lcall
jecxz,pn
std
shlb
mov
sbb
sbb
in
xchg
sub
lcall
mov
add
inc
xchg
push
sub
mov
nop
push
addl
out
push
and
push
jns
push
pop
add
jo
pop
and
iret
sti
insb
ljmp
jle
lods
cli
in
imul
iret
jno
xchg
cli
cmpsb
dec
pop
sbb
movsb
adc
jbe
push
pop
jne
popf
xchg
loope
mov
test
ficoml
xchg
mov
repnz
and
jg
jns
push
mov
aad
jns
and
icebp
hlt
ret
arpl
pop
and
mov
ret
out
pop
add
sbb
xchg
lock
push
imul
test
and
cmp
cmp
imul
out
dec
push
and
js
loopne
mov
int3
jecxz
daa
pop
sbb
cmp
inc
shll
repz
int
dec
mov
adc
xor
pop
xor
xchg
cmpsl
push
push
sub
sbb
ds
je
ret
inc
inc
adc
cmpsb
or
in
fdiv
mov
pop
cvttps2pi
sub
dec
pop
sub
mov
cmp
sbb
insb
insb
ret
aad
sbbb
icebp
add
outsb
sbb
sub
pop
mov
sub
inc
push
mov
push
iret
ret
faddl
fwait
sub
movsb
outsb
aaa
mov
adc
sbb
shll
dec
push
ljmp
xor
insb
push
rcrl
andl
idiv
aaa
mov
rcr
lcall
pop
hlt
sahf
daa
and
lods
add
shrl
adc
stc
fsts
adc
ss
mov
cmp
fimull
out
mov
cli
pop
popa
mov
test
mov
or
arpl
cmc
mov
add
adc
pop
sub
imul
mov
sbb
fstl
sub
mov
lahf
out
out
das
ret
jecxz
xchg
gs
sti
es
icebp
xor
and
inc
test
sub
in
insb
jnp
add
fcoml
daa
rcrb
inc
and
pop
stos
bound
inc
cmp
pushf
adc
bnd
push
call
aad
xor
nop
out
sarl
dec
or
jmp
dec
pop
jno
je
das
mov
les
mov
xlat
call
push
push
mov
pop
data16
dec
push
int
fldt
xor
inc
stos
mov
das
jne
data16
daa
movsb
adc
aaa
pushf
push
rol
arpl
idivb
jns
mov
or
sub
inc
cmpsl
pop
sahf
fidivrs
cltd
xlat
cmc
cld
insl
or
mov
sub
or
sbbl
loopne
rclb
push
in
aam
fimuls
es
insl
rolb
dec
outsl
push
es
fsubs
ljmp
cli
lods
pop
lods
pop
mov
int3
iret
cwtl
and
mov
repnz
add
nop
outsl
test
pusha
pop
mov
sbb
mov
pop
clc
dec
call
test
sbb
stos
push
sbb
xchg
push
cli
xchg
push
jge
jb
adc
xor
pop
jmp
xor
into
sub
xchg
ret
cltd
dec
mov
ss
inc
sub
sbb
dec
mov
mov
fcomps
stc
dec
movsl
add
push
xchg
cmp
dec
fdivrp
bound
sbb
pop
je
mov
pop
pop
mov
push
cmpb
add
jbe
cmp
sbb
js
jge
push
jne
jae
mov
subl
jne
xchg
es
jmp
sub
lock
mov
mov
out
sub
dec
popf
int
sahf
ficoml
jecxz
insb
and
mov
addr16
das
bound
mov
lds
out
inc
iret
shlb
ret
inc
pop
push
leave
add
cmp
cwtl
ljmp
xlat
mov
inc
add
ret
fiaddl
leave
xchg
repnz
data16
and
insl
scas
popa
fmull
adc
mov
sub
cltd
stc
scas
hlt
or
jbe
inc
and
or
xor
or
or
or
jecxz
dec
jne
pop
faddp
xor
outsb
sarb
scas
fs
and
mov
addl
push
outsl
push
stc
jbe
loope
jge
push
sbb
or
arpl
jnp
add
in
sub
or
xor
mov
sub
sti
cmp
push
aas
xchg
adc
cwtl
dec
cmpsb
mov
enter
pop
dec
movsl
test
loope
pop
imul
mov
push
mov
ds
shr
movsl
daa
cmp
rorl
mov
sti
sbb
pop
add
sub
in
in
js
in
sbb
out
mov
lcall
rcr
dec
mov
outsb
lcall
shrb
ljmp
cmp
mov
cmc
xor
push
int
sbb
hlt
bound
mov
push
lea
inc
sahf
lret
test
in
and
ljmp
mov
sbb
xlat
adc
lcall
xchg
fdivr
out
cli
std
cli
cli
jecxz
pop
inc
push
cmp
sbb
into
out
add
cmc
push
xorb
mov
adc
push
shrl
push
adc
pop
xchg
add
pop
and
mov
mov
push
sbb
cmp
mov
mov
or
xchg
sti
sahf
fisttps
push
fsubr
gs
sub
xor
add
inc
xchg
mov
cmp
clc
jnp
repz
pop
xchg
incb
sub
xchg
jl
mov
mov
adc
sbb
fwait
data16
adc
xchg
aad
jno
nop
shrl
call
pusha
cli
dec
aad
enter
dec
jecxz
out
inc
movsb
pop
and
repnz
mov
mov
jmp
dec
inc
adc
pop
inc
sub
jbe
inc
xor
inc
mov
pushf
mov
fimuls
fldenv
cmc
rcll
push
aam
mov
jns
cwtl
in
or
cld
in
call
cld
cwtl
movsl
mov
mov
jnp
mov
dec
sti
lock
test
fs
sub
pop
ret
popf
xchg
mov
insl
mov
testl
xchg
pop
ljmp
pop
lods
lds
mov
out
xchg
mov
stos
insl
mov
nop
add
mov
mov
outsb
cltd
push
dec
pop
pop
test
clc
andl
xchg
pop
sbb
imul
sarl
pop
movsbl
lret
xorl
jge
add
pop
out
ljmp
cmpsl
movsb
or
sbb
xor
mov
mov
sbb
push
test
call
orl
roll
mov
fwait
cmp
fwait
or
mov
pushf
dec
testl
sub
clc
bound
test
insb
hlt
hlt
in
inc
cltd
xchg
lret
mov
sbbb
and
sub
fisubrl
mov
dec
sahf
mov
cmpsl
ja
inc
pop
inc
mov
xor
jne
ss
fwait
adc
fildll
rcl
jmp
divl
andl
out
push
mov
or
loope
fnsave
into
stos
push
or
and
iret
jo
sarb
sbb
pop
pusha
fstpt
pop
ret
mov
mov
int3
inc
inc
pop
jae
decb
loopne
insl
popf
loope
icebp
mov
cmpl
xchg
dec
cmp
adc
inc
imul
imull
scas
mov
adc
enter
cwtl
mov
leave
adc
cltd
hlt
pop
flds
pop
mov
cmp
push
lods
xlat
pusha
or
pop
sub
rcrl
xor
rcl
fs
mov
rclb
dec
and
es
cmp
inc
lret
mov
jl
loopne
test
inc
out
inc
inc
inc
daa
pop
jo
cmp
jmp
jl
add
cltd
test
stc
in
leave
xor
adc
rcll
sub
aaa
fisubrs
or
inc
arpl
cmpsb
push
mov
enter
pop
lea
fsub
sbb
ja
sti
lret
add
xchg
adcl
mov
addr16
dec
add
fstps
jns
xor
xor
cmp
mov
lcall
insb
cltd
js
lods
sbb
inc
int
lcall
xor
fwait
or
das
outsb
std
and
adc
inc
js
jg
into
jo
lock
lods
mov
sbb
and
inc
push
and
dec
mov
sub
jl
fcmove
sub
push
roll
lods
mov
or
sbb
push
int3
sahf
insl
sub
ja
xor
fwait
dec
stc
loop
lcall
or
push
repnz
dec
ss
add
cmp
push
std
call
cli
ret
xor
xchg
pop
push
or
sahf
xchg
into
shll
xor
imul
and
pop
cmp
in
adc
sahf
test
adc
mov
test
lods
test
mov
mov
sub
enter
gs
jne
ds
dec
push
gs
sub
gs
mov
mov
inc
stos
pop
cmp
cmpsb
je
les
filds
mov
xchg
rcrl
cmp
imul
inc
pop
clc
pop
adc
or
ds
aad
adc
nop
pushf
sub
xchg
divl
iret
rorl
or
jecxz
rcrb
cmpsl
rol
lea
xor
insl
insl
ss
scas
adc
mov
cmp
mov
pop
mov
ret
inc
mov
mov
mov
xchg
pop
pop
and
mov
psadbw
shl
add
sti
cwtl
lahf
mov
or
das
addr16
pop
out
cld
ret
adc
lret
push
xor
xchg
mov
pop
lods
lock
dec
in
shlb
leave
pop
sub
aas
cmpsl
ret
sub
lcall
cmp
dec
gs
bound
dec
nop
add
daa
cmp
bound
adc
mov
mov
xchg
jno
add
mov
incl
pop
lods
push
adc
hlt
clc
mov
sbb
push
shrl
jbe
pop
jno
shrb
cs
hlt
xchg
les
ljmp
int3
sub
lcall
xor
add
xlat
xchg
stc
dec
dec
xor
test
and
fdiv
bound
loop
inc
push
jnp
or
lret
aaa
fnstenv
aas
inc
jbe
cmp
mov
dec
bound
sub
loop
sbb
cmp
cs
pusha
addr16
icebp
mov
add
add
mov
into
dec
inc
xchg
divb
pop
push
mov
mov
sbb
mov
jecxz
xor
xlat
out
idiv
sub
inc
mov
xchg
stos
leave
repz
or
movsl
insb
jnp
push
push
jle
mov
in
or
pusha
jbe
pop
iret
mov
outsl
ret
iret
pop
ret
inc
or
sub
push
mov
jo
mov
add
rcr
push
cltd
xchg
mov
ret
fisubrs
aam
scas
daa
popa
ret
push
testb
mov
into
pop
inc
leave
xchg
hlt
mov
ds
inc
sub
or
sub
jno
rcrb
pop
xchg
inc
int3
and
aam
pop
test
int
mov
arpl
sahf
push
cmp
movsb
jo
xchg
stc
xor
mov
jbe
lock
aad
ja
std
push
das
daa
pop
loope
cmp
cmpsl
or
jl
fiaddl
dec
or
mov
fadd
jne
addr16
aas
jo
testb
repnz
mov
mov
daa
push
push
aad
aam
hlt
jno
cmpsb
xchg
cmp
in
xchg
call
aad
int3
and
push
mov
loope
loope
sub
sub
cmp
inc
jle
xor
sbb
pop
xchg
mov
fadd
stos
sbb
cwtl
sub
pop
sub
lahf
pop
xor
lret
scas
lock
ret
lcall
xchg
inc
pushf
nop
sub
mov
adc
and
pop
jg
mov
mov
xor
test
push
xchg
push
lret
int
xor
sub
aad
idivl
add
lret
dec
rcrl
mov
sahf
adc
mov
outsl
jp
xor
loop
adc
incb
fs
add
adc
into
ss
loop
cmp
or
int
cmc
dec
and
or
pop
cmp
popa
fwait
or
into
mov
mov
xor
dec
pop
pop
inc
sub
mov
push
imul
leave
data16
pop
lods
imul
rcrl
sub
mov
loopne
popf
sti
cld
mov
decb
gs
mov
loopne
out
in
ds
cmp
mov
mov
les
xchg
pop
repz
sbb
test
cmp
or
pop
mov
insl
nop
adc
pushf
adc
or
fnstcw
aad
sbb
ja
dec
aas
repnz
jb
dec
ret
dec
scas
je
shr
icebp
cli
sub
stos
mov
outsb
call
dec
inc
orb
pusha
xchg
dec
push
sbb
pop
pop
fnsave
inc
inc
call
adc
adc
xchg
dec
roll
and
movsb
sahf
shll
sbb
test
sub
pop
stos
jge
bound
pop
cld
out
push
jnp
mov
xor
lock
out
add
sub
dec
aam
outsb
and
mov
test
insl
test
xchg
dec
pusha
rcr
xchg
jmp
mov
mov
into
stos
lods
fwait
push
cltd
mov
xor
test
popa
psadbw
or
test
mov
mov
in
push
aad
cmpsl
fldl
ljmp
popa
inc
sbb
push
test
adcl
inc
out
xchg
not
xchg
or
scas
in
or
in
shll
xor
sahf
out
xchg
ja
xchg
inc
rorb
ljmpw
fwait
stos
add
sub
inc
jmp
sub
fwait
data16
push
loop
push
add
cmpsb
jmp
out
sub
mov
or
in
lcall
xor
insl
lahf
pop
jmp
push
imul
adc
cltd
ja
mov
enter
jle
fsub
inc
mov
jae
fucomip
arpl
xchg
lahf
dec
or
xchg
out
lret
cmpsl
jbe
jg
sbb
sub
aas
adc
stos
cmp
xchg
and
sub
and
jle
cltd
inc
in
mov
pusha
adc
test
inc
aaa
mov
inc
adc
pop
jae
xchg
and
data16
das
adc
sub
inc
cmpl
xchg
negl
sbb
jne
imul
push
scas
mov
jg
cmp
imul
and
xlat
leave
incb
hlt
out
loope
arpl
mov
or
cmpsb
popa
push
or
repz
int3
or
pop
push
mov
sub
subl
int3
nop
outsl
scas
add
jp
xor
lock
movsl
es
pop
dec
ja
and
jl
fistps
mov
inc
cmp
das
sub
fnstcw
test
out
push
mov
push
jo
mov
lahf
adc
test
mov
les
in
js
movsb
enter
pop
or
and
cmp
dec
sub
pop
into
cmp
pop
ds
imul
fcom
decb
jmp
lahf
sbb
push
sti
add
dec
push
xor
sub
ss
pop
pop
and
inc
repnz
inc
push
hlt
lcall
das
fdiv
add
ret
mov
scas
sbb
cltd
jg
dec
aas
mov
incl
mov
mov
dec
ja
popf
insl
sti
push
int
outsb
int
xchg
push
sub
jg
cli
notb
lret
dec
shll
mov
int3
sbb
inc
sahf
mov
xchg
test
sub
pop
cwtl
test
stc
mov
push
and
es
xor
cmp
cli
dec
out
lock
cli
sub
xor
nop
test
scas
inc
or
or
xor
sub
dec
dec
imul
jnp
push
movsl
shrd
xlat
mov
dec
sub
add
mov
dec
das
pop
sti
stos
xchg
outsl
sub
gs
subps
fisubrs
dec
popf
or
fsts
add
sbb
loopne
inc
daa
and
inc
repnz
movl
arpl
mov
popf
and
push
and
aas
nop
push
loope
aas
jb
dec
dec
dec
cmp
nop
je
cwtl
push
jecxz
addr16
lods
sbb
out
call
or
mov
js
add
cmp
jmp
movsb
inc
iret
add
fidivl
das
icebp
xor
mov
add
inc
and
cli
popa
roll
lods
loop
xchg
sbb
dec
jmp
adc
sarb
push
cld
sbb
bound
mov
push
mov
mov
aad
and
jg
fstl
test
jg
dec
cmpsl
hlt
es
xor
insl
insb
lds
pop
loop
xchg
sub
pop
ljmp
jp
push
and
mov
pop
cwtl
xor
and
add
add
mov
cltd
sub
test
call
or
pop
inc
clc
xor
ljmp
jo
rcr
rclb
movl
stc
xchg
push
stos
fists
pop
push
decl
imul
sbb
mov
movsb
mov
xchg
call
push
mov
sbb
jecxz
dec
mov
popl
lret
pop
bound
push
test
sub
shrl
bound
mov
xchg
mov
outsb
mov
leave
iret
mov
movsb
dec
addr16
pop
xorb
ret
ljmp
jne
pop
mov
inc
clc
fisttps
data16
mov
fcoms
pop
arpl
xchg
cltd
jae
jecxz
cmp
adc
arpl
stos
scas
in
and
fidivrs
insb
add
cwtl
jnp
push
inc
jle
jbe
in
ret
lods
xchg
pop
iret
dec
jae
ret
mov
xor
or
aas
jae
jns
sub
cmp
add
or
dec
fistpl
sti
enter
pop
scas
in
mov
push
test
adc
pop
daa
mov
je
push
hlt
cmp
mov
mov
mov
or
and
mov
cmpsb
jns
add
sub
pop
xorl
fld
out
or
les
aad
test
out
stos
and
jbe
into
fdivrs
sbb
aad
pop
dec
imul
insb
inc
jno
test
dec
out
push
push
mov
jno
jo
xchg
xor
push
inc
arpl
push
imul
adc
cmpsb
xchg
xchg
or
pop
push
ror
pop
inc
add
dec
mov
push
jge
loope
dec
in
sub
pop
sbb
andps
ljmp
and
add
mul
sbb
in
movb
bound
mov
xchg
out
cmpb
shrb
pop
rcr
lcall
pushf
fcompl
int3
outsb
es
ja
lcall
jmp
sahf
mov
and
push
int
fldenv
idivl
mov
ror
push
shr
adc
lods
pop
sbb
or
lahf
orb
outsl
cmp
dec
loop
imul
dec
sub
jnp
fbld
inc
ss
jae
insl
icebp
test
adc
repnz
pop
addr16
xor
idiv
or
xor
js
xchg
data16
outsb
cli
pop
cwtl
dec
or
pop
jno
imul
arpl
lods
cmp
xlat
cmp
xchg
mov
mov
das
sti
pop
inc
mov
gs
loopne
cld
fs
cld
fxch
inc
jecxz
push
out
and
dec
repz
call
cmp
mov
cli
pop
and
pop
sub
lahf
ret
clc
aad
dec
mov
sub
divl
jb
push
dec
dec
mov
movsb
je
les
mov
or
call
leave
repz
xor
mov
pop
lahf
adc
inc
dec
sbb
cmc
test
mov
mov
mov
pop
test
and
div
and
push
popf
les
int3
sub
cld
inc
push
dec
lret
popf
push
jo
xchg
mov
mov
fistpl
pop
inc
adc
sub
cwtl
aam
enter
fbstp
es
push
push
insl
push
pusha
xchg
test
xchg
imul
dec
lods
jno
fistpll
jnp
or
shrb
mov
stc
add
add
cltd
mov
popf
xor
push
pop
jmp
fstl
jl
xchg
jae
sbb
cmp
xor
ret
stos
repz
shr
push
cmp
push
fmull
ljmp
xchg
cmp
xchg
sarb
scas
or
xor
int
mov
shll
or
icebp
cmp
ja
lahf
aaa
dec
jl
lods
inc
pop
sub
or
insb
test
sub
loopne
rclb
imul
push
fwait
xchg
jns
scas
cmp
jo
daa
xchg
push
jae
mov
leave
mov
pop
pop
std
stos
addr16
push
jp
pop
push
mov
out
inc
mov
pop
inc
or
jne
sub
pop
and
daa
insb
mov
jmp
and
xchg
sbbl
in
sub
xor
iret
sbb
push
subb
mov
adc
in
xor
pusha
inc
lods
sub
stos
inc
jge
insb
aaa
loop
addr16
xchg
mov
cmp
jmp
jge
mov
jg
xor
orl
adc
sbb
push
jne
iret
cltd
test
push
dec
test
lret
pop
adc
fwait
cmpsb
repnz
cs
in
pop
mov
test
pop
arpl
cmpsl
cs
pushf
orb
xor
or
sbb
dec
pop
mov
ret
jp
lds
mov
scas
mov
jo
cmp
mov
and
inc
mov
jge
xor
cs
out
daa
push
dec
dec
cmp
mov
push
cmpb
dec
push
ljmpw
xor
jle
jl
dec
push
sbb
das
adc
jecxz
mov
ss
mov
mov
jae
in
inc
jecxz
enter
pop
mov
outsb
loope
mov
sub
cmp
mov
xchg
mov
dec
loope
push
jle
jecxz
sahf
adcb
mov
push
outsl
ret
add
mov
xor
lock
cmpsl
mov
xor
lcall
faddl
lea
jmp
fisubrs
ret
cmp
and
jnp
leave
mov
xor
arpl
and
adc
int
add
idivl
jecxz
cmc
adc
bound
sbb
out
sahf
stc
movsb
imul
pop
hlt
adc
fwait
sbb
stc
and
xchg
adc
rcrl
ss
xor
lcall
sub
xor
and
into
pop
jl
cmc
dec
mov
jno
mov
lea
das
lret
sbbl
add
mov
pop
movsb
or
mov
aaa
in
fcoml
jle
fnstsw
ret
lret
mov
shll
push
loopne
mov
in
divb
fld
das
mov
repz
xchg
int
bound
mov
sti
fs
int3
adc
or
inc
add
aad
jg
nop
or
test
add
jb,pt
xchg
cmovns
out
je
inc
mov
mov
jmp
in
mov
pop
xchg
mov
popf
das
dec
xlat
fcmovu
inc
enter
push
dec
inc
aad
pop
inc
adc
xor
jno
pop
and
mov
testb
int
mov
jp
sti
push
loope
mov
adc
lret
or
rorl
pop
jns
lock
mov
subl
sub
loop
sbb
cltd
ret
push
in
stc
insl
cmp
mov
xchg
test
sti
ljmp
cltd
lods
dec
mov
sahf
mov
and
pop
aad
movlps
out
lock
movb
in
push
push
icebp
fnstsw
test
sbb
mov
cmc
pop
sbb
push
out
mov
fcomi
push
lahf
outsl
xchg
dec
fcmovu
xor
sbb
or
mov
enter
fiaddl
pop
or
and
fidivs
inc
scas
test
mov
repz
adc
lret
cmpsb
repz
div
outsb
out
xchg
mov
jns
ja
in
adc
pop
mov
cmp
out
sbb
push
jp
xchg
mov
stc
mov
enter
iret
xchg
aaa
jne
loopne
mov
pop
push
filds
lea
jl
pop
xchg
out
ljmp
pushf
or
sub
xor
jb
xchg
movsl
xor
insb
xlat
mov
adc
sti
in
or
pusha
loop
test
adc
ret
ja
sahf
sbb
inc
xor
divl
popf
movsb
push
mov
inc
incb
mov
sbb
addb
mov
jne
adc
addr16
sbb
or
iret
in
arpl
test
dec
push
push
flds
mov
mov
pop
fildll
ficoms
push
scas
scas
sahf
push
and
test
cmp
xchg
inc
movsb
mov
mov
insl
jge
into
jg
jmp
int
cmp
dec
cmp
dec
enter
mov
cwtl
jo
mov
inc
push
in
cs
ficompl
aas
inc
xor
popf
ret
pop
in
sub
scas
out
pop
enter
push
sbb
sub
out
cmp
mov
xor
and
leave
mov
sbb
call
jg
rcrl
cmpsl
popa
js
adc
mov
roll
or
fdiv
cs
sub
fmull
adc
mov
mov
mov
pop
mov
lret
jmp
orb
jae
int
adc
stos
pop
divl
lock
lret
ret
pop
sbb
ss
push
leave
outsl
mulb
jecxz
cs
inc
stc
fcmovu
cmpsl
fs
adc
mov
cmp
testl
rcll
gs
cmp
fidivs
or
sbb
into
inc
movsb
xchg
cmc
adc
outsl
xor
pop
pop
adc
push
sub
xchg
mov
push
ljmp
mov
pop
jl
mov
imul
in
mov
cltd
fmuls
or
loopne
pop
imul
and
fnstcw
mov
push
xchg
nop
popa
rcrl
fwait
mov
pop
nop
push
ret
cmp
pushf
mov
repnz
fcompl
aad
adc
lahf
aas
mov
or
dec
lahf
mov
je
sbb
sub
cmc
dec
lea
call
inc
mov
mov
cli
in
ret
fistpl
sbb
inc
pop
fisubs
das
mov
xchg
mov
sub
adc
repz
shl
insl
pop
notb
adc
cwtl
inc
inc
insl
cmpsl
push
lahf
sarl
jp
lret
cld
lcall
mov
sub
xchg
rclb
xor
push
out
aam
jno
ret
negl
insl
and
dec
dec
xchg
ljmp
enter
fdivrl
shll
and
notb
pslld
add
cmp
cltd
daa
data16
sbb
ljmp
push
loope
inc
fucom
add
clc
in
les
popf
repnz
rcr
popw
pop
enter
shll
out
sbb
or
push
jp
xchg
ljmp
xorb
popf
add
popf
fisttpll
test
loopne
roll
aas
xchg
out
rorl
or
test
in
adc
xchg
mov
pop
inc
inc
dec
jae
sbb
cmpsl
push
push
outsb
popa
and
adc
out
gs
bound
movsl
jns
in
in
cmp
xchg
movsb
pop
or
push
in
or
push
popf
addr16
out
jp
rcr
shr
mov
jmp
dec
mov
pop
jne
cli
jae
mov
test
jmp
mov
outsl
mov
pop
hlt
dec
sub
sub
and
xor
stos
or
and
sbb
jle
lds
pusha
jge
sub
imul
mov
inc
inc
std
sbb
cmc
jp
jb
mov
lret
xorb
adc
gs
jge
out
jmp
push
stc
sbb
test
push
pop
test
adc
test
insl
adc
sub
sbb
dec
arpl
pop
add
add
into
aaa
daa
js
or
mov
int3
mov
ret
pop
push
xchg
push
fidivs
jbe
lds
sub
mov
jge
repnz
push
cwtl
dec
xorb
arpl
std
mov
daa
push
shl
cmp
pop
push
fs
jl
jg
dec
xor
aam
dec
pop
in
dec
loope
jo
jbe
lahf
lea
lock
int3
push
pop
inc
mov
mov
in
adc
xchg
dec
inc
and
push
jae
loope
clc
or
cwtl
push
push
mov
movsl
pop
xchg
inc
jns
mov
dec
xchg
sbb
pop
push
add
outsb
shlb
iret
gs
inc
push
mov
js
bound
cmp
push
pop
push
or
fstp
popf
in
sub
pop
mov
adc
addr16
jg
jo
mov
xor
mov
lahf
jne
flds
push
int
add
div
cmc
into
lret
mov
mov
dec
daa
sahf
aas
sbb
mov
fnstcw
loop
imul
xchg
cwtl
in
fs
iret
jg
int3
std
mov
cmp
mov
push
out
jo
cli
hlt
ficoml
cmp
setnp
outsl
scas
inc
into
and
push
cmc
fucomi
popa
xor
insb
adc
in
imul
pop
sub
adc
sub
add
adc
test
jecxz
negb
mov
ret
mov
notl
lock
addr16
shll
arpl
loopne
es
dec
sbb
inc
sbb
mov
lock
repz
dec
xchg
push
mov
sbb
xor
mov
inc
nop
js
jle
pushf
push
bound
cs
jl
jne
mov
sbb
lcall
inc
xchg
jecxz
mov
insb
lea
mov
push
fsub
mov
or
dec
lods
and
or
xchg
aaa
das
insl
outsl
mov
fcomip
and
cwtl
sarl
ss
xchg
jo
std
jmp
mov
add
mov
icebp
push
ds
lds
lret
ljmp
mov
loopne
lock
dec
pop
popf
stc
adc
sub
in
aam
inc
jne
xchg
xchg
es
sbb
mov
xchg
and
popa
mov
dec
lods
mov
aaa
mov
in
cmp
xchg
in
psrlw
add
negb
sub
fistl
pop
inc
fisttpll
pop
jmp
xchg
sbb
inc
shll
add
stos
rol
out
add
xchg
outsb
pushf
scas
push
push
shll
xor
xor
mov
mov
fidivrl
dec
in
out
lock
sahf
jecxz
push
ljmp
fcompl
mov
or
ljmp
pop
outsb
add
cmp
pop
jns
cmc
jb
adc
lret
addb
nop
jmp
sbb
mov
stos
mov
cmpsb
fs
dec
xchg
leave
xlat
jne
jns
mov
ds
sbb
push
push
xchg
test
orl
out
dec
nop
sub
lea
stos
jnp
and
jnp
jnp
sub
jle
jae
in
fimuls
pusha
sbb
enter
movsl
cmp
pop
inc
dec
add
xor
cwtl
pusha
mov
cld
jo
ficompl
adc
pop
xchg
imul
push
mov
jecxz
mov
rcl
leave
push
inc
test
gs
sbb
or
or
or
loopne
or
pop
add
call
sbb
fcompp
loope
lds
push
stc
rclb
scas
pop
faddl
and
dec
or
cmp
movsb
aam
stos
push
out
imul
bswap
sbb
xchg
daa
push
pop
mov
jno
mov
push
dec
mov
in
out
adc
jo
cwtl
daa
lahf
lods
sbb
xchg
lret
enter
xchg
dec
out
dec
pop
or
sti
loope
enter
pop
inc
call
loope
iret
inc
sub
mov
mov
jbe
cltd
movsl
pop
std
pop
and
xchg
test
dec
lret
add
add
enter
and
pop
sbb
dec
js
loopne
pop
mov
xchg
lcall
jo
sub
cmp
adc
inc
ss
inc
loop
xor
mov
and
jo
push
fmull
ret
sub
push
in
mov
lretw
imul
jge
push
sbb
jge
loop
lret
or
outsl
mov
outsl
loop
pop
push
stc
dec
sti
and
mov
sbb
ss
das
cmp
insl
adc
xor
ds
daa
adc
xor
xchg
fimuls
into
push
rclb
xor
lcall
or
imul
add
mov
aad
fisttpll
xor
jmp
mov
bound
sti
push
in
imul
xorl
mov
fldenv
mov
mov
dec
mov
xchg
push
ja
sbb
insl
inc
cmp
mov
jg
adc
sbbb
mov
sub
ds
imul
cltd
mov
loopne
pop
jb
mov
dec
lea
je
mov
push
mov
mov
call
lds
ljmp
or
pop
sub
js
push
jg
popa
lcall
fsincos
xor
sbb
and
std
xchg
scas
cwtl
mov
mov
mov
sub
add
pop
mov
mov
lock
add
mov
adc
inc
pop
mov
jl
add
push
es
jae
inc
flds
xchg
gs
inc
ljmp
xchg
lods
sbb
bswap
mov
jecxz
jmp
sub
xor
cwtd
xchg
inc
mov
xor
in
push
addr16
pushf
clc
pop
adc
xor
add
rorl
test
scas
jmp
movsl
xchg
mov
and
mov
lahf
xor
cmp
or
sbb
out
loope
xchg
jl
dec
push
mov
test
in
ja
mov
dec
dec
sahf
test
push
call
fwait
adcb
mov
cltd
add
dec
scas
jno
and
bound
stos
call
xchg
inc
push
mov
pop
addl
dec
pusha
jno
mov
sarl
das
mov
jbe
mov
adc
rorl
mov
outsl
ljmp
lcall
dec
and
fstps
out
pop
iret
sub
and
jg
aad
sub
scas
jo
insb
sbb
sarl
sub
test
push
pusha
mov
xchg
iret
daa
mov
sbbb
lea
test
mov
xor
mov
leave
fimull
sub
add
sbb
add
imul
add
aas
pop
adc
aaa
cs
adc
jne
enter
mov
shlb
pop
fildl
addr16
or
mov
or
sub
jns
sahf
int3
jmp
pop
insb
mov
in
shrb
scas
cmp
mov
cmp
inc
inc
movsb
pop
mov
jbe
call
outsb
sbb
cmc
jecxz
push
push
inc
jno
add
dec
adc
ja
fdivs
ljmp
push
data16
test
bound
push
cmpsb
es
stos
in
loop
mov
aas
sub
test
push
inc
sbb
ror
imull
out
cmp
pop
ds
push
lcall
les
sbbb
sbb
loopne
add
jbe
xor
mov
push
js
out
stc
pop
cmp
lcall
fdiv
into
test
outsb
adc
xor
jg
sbb
mov
add
mov
ret
mull
daa
int
nop
xor
inc
push
push
je
push
lret
add
mov
clc
adc
sahf
test
test
sub
loop
pusha
stc
incl
mov
bound
push
jne
imul
out
enter
add
ljmp
or
xchg
into
jmp
mov
xor
sbb
adc
imul
and
and
mull
adc
mov
sbb
sub
negl
sti
lds
nop
mov
loopne
sti
dec
xlat
adc
pop
pop
loopne
pop
iret
repz
xchg
fldcw
jbe
test
lock
cmp
or
and
adc
cmpsl
mov
add
add
or
test
jb
lcall
push
mov
pop
adcl
loope
lea
loope
mov
mov
mov
jp
inc
call
cli
fildl
popa
fs
into
int3
filds
jo
inc
jl
imul
insb
inc
call
and
fists
negb
dec
cmp
pop
mov
push
addb
mov
cld
sbb
lret
enter
add
stos
lock
xor
ror
std
sub
xor
inc
out
ret
movsb
not
es
ret
cmp
pop
ret
lret
cmp
mov
lods
mov
sbb
sub
and
movl
add
mov
int3
cmpsb
sbb
pop
push
push
sub
dec
clc
xchg
insl
jne
jp
adc
mov
xor
pop
leave
dec
icebp
stos
sahf
shlb
inc
mov
cld
in
mov
xorl
inc
sub
xor
push
jns
add
xor
ljmp
xchg
icebp
xor
bound
test
out
cmp
inc
inc
or
jg
fimuls
rcrb
push
dec
inc
add
arpl
out
add
outsb
jns
add
daa
test
xchg
xchg
xor
mov
xchg
test
add
call
jp
jnp
mov
repnz
mov
ja
dec
mov
scas
ffreep
dec
xchg
fnstsw
pop
push
inc
xchg
sbb
lret
cmp
out
bound
sub
sbb
mov
stos
popa
xchg
in
and
xlat
insb
cmpl
jle
test
inc
pusha
dec
pop
and
xchg
xchg
pop
jp
inc
inc
popa
or
jae
xchg
inc
jno
mov
cli
insl
arpl
add
ss
pop
int3
sbbb
jnp
jp
mov
xor
adc
sahf
sbb
data16
ror
aas
shrb
loop
pop
inc
inc
cmp
xor
jae
aaa
fs
or
inc
add
jp
int3
js
sbbb
movsb
ficomps
xchg
mov
xor
or
scas
sbb
and
ffreep
cmp
test
jbe
dec
xor
or
movsb
mov
push
stc
push
cmp
inc
jno
xchg
dec
cmp
push
hlt
out
ret
aam
jo
sbb
cmp
test
sub
jbe
cmpsb
test
mov
pop
les
or
ljmp
cmp
rorb
and
movsl
insl
adc
les
jo
call
add
js
xor
mov
lods
inc
js
xchg
gs
mov
xor
push
push
fcmovb
fcompl
jo
outsb
js
cmp
clc
sti
mov
xchg
notl
mov
aaa
ret
mov
shl
and
sbb
int
sub
add
xor
mov
mov
mov
push
into
orb
inc
sahf
sub
test
cmp
xor
mov
loop
mov
stc
mov
push
fs
cmp
adc
and
cmp
jecxz
and
xor
data16
lea
ret
cmp
lcall
int3
lret
in
cmc
xor
xor
push
pop
push
mov
adc
sti
imul
add
cvtpi2ps
cltd
push
rcl
mov
adc
mov
cmp
je
xchg
fs
out
jl
loopne
add
dec
ss
sbb
enter
mov
push
repz
sbb
jecxz
mov
mov
jnp
adc
push
pushf
imul
aad
push
push
pop
nop
dec
pop
mov
push
addr16
jb
dec
jnp
fdivl
add
imul
in
call
imul
sbb
dec
pop
jno
pop
jno
xchg
inc
js
imul
enter
inc
mov
add
into
and
orl
pop
out
std
loopne
jae
xor
mov
xchg
pusha
cld
inc
aaa
repz
aaa
popf
lea
add
lock
shlb
out
aam
mov
ret
xor
clc
imul
dec
cmp
xchg
jecxz
std
ljmp
cmp
pop
insl
mov
icebp
cmp
mov
out
jno
add
or
dec
mov
stc
push
in
ftst
fnstsw
imul
stc
or
sbb
inc
sarl
jl
pop
je
mov
lea
out
test
stos
pop
push
out
hlt
jmp
xchg
xor
das
shll
cmp
mov
jecxz
push
dec
and
push
test
sub
xchg
fnstcw
dec
cs
jmp
ficoms
jmp
add
jle
dec
out
loope
adc
push
sarl
incl
xchg
loopne
lret
dec
repz
rorl
addr16
dec
jp
jbe
mov
xchg
dec
mov
repz
mov
mov
push
popa
in
xchg
aaa
push
or
dec
divb
in
adc
sub
stc
sub
pop
push
stos
push
push
sub
sbb
faddl
insb
out
xchg
sarl
or
in
or
fcmovne
in
inc
ret
sti
pop
mov
in
inc
insb
or
push
xchg
mov
popf
xor
pushf
jp
jns
pop
fidivl
nop
mov
mov
shrl
mov
mov
mov
push
jge
mov
repz
hlt
inc
and
arpl
call
call
push
and
dec
or
fiadds
cmpsl
clc
arpl
cmpsl
faddp
fadd
lds
or
and
test
movsb
jne
pop
push
aam
dec
jbe
pop
adc
mov
aam
nop
call
cmp
xchg
rcll
fdivl
ja
xlat
pop
cli
xor
mov
adc
stos
test
clc
cmp
inc
sti
call
inc
in
mov
inc
enter
pop
add
sbb
loope
sub
sbb
fsubrs
dec
movsl
je
clc
and
cmpsb
cmp
lahf
lock
into
popa
xor
push
dec
stos
jbe
xchg
daa
test
jnp
cmp
xor
gs
into
fmull
test
mov
fildl
adc
sar
jg,pn
xlat
shll
xor
test
aad
in
jmp
push
scas
lods
sub
xor
lret
cmpsl
shr
pusha
mov
cld
arpl
idivb
test
orb
mov
loop
outsb
ja
insl
sti
mov
js
mov
or
pop
cmp
sahf
adc
xor
add
shl
xor
sbb
or
mov
into
scas
mov
cmc
testl
pop
pop
jno
les
and
into
imul
fldl
aas
sub
insl
subl
mov
push
sub
jmp
in
mov
hlt
and
gs
test
dec
xchg
loopne
inc
push
rorb
jno
dec
repz
jge
sbb
push
pushf
ret
data16
pop
ja
int
adc
call
cs
enter
sub
xor
mov
push
or
push
je
sub
push
in
lds
lea
lcall
lahf
dec
mov
xorl
jns
popa
inc
daa
pop
adc
rolb
sbb
inc
mov
pop
das
jmp
ja
mov
mov
fdecstp
lahf
cmc
dec
std
xchg
cmpsl
push
stos
int3
mov
lods
push
cltd
cld
jno
push
lret
cmpsb
mov
mov
nop
pop
mov
pop
xor
dec
out
ficomps
sbb
shlb
xchg
sub
inc
adc
fst
outsl
ret
ret
es
idiv
insl
movsb
mov
xchg
and
test
or
int
mov
jo
mov
clc
lea
cmovge
test
iret
cltd
cltd
cmp
test
mov
fwait
rclb
xchg
inc
frstor
lea
sbb
lcall
pop
push
stos
jl
fwait
out
or
sbb
push
roll
fsubrs
sbb
lock
sub
movb
sub
outsb
dec
mov
test
sub
ja
xor
inc
cmp
aad
or
push
push
add
cltd
push
shr
rorb
aam
jns
mov
or
nop
jnp
mov
jl
pusha
addr16
or
and
mov
sbb
aam
vpmovsxbd
aad
test
filds
pop
xchg
or
insb
jmp
mov
jecxz
xchg
repnz
inc
inc
sub
adc
push
xchg
xor
or
repz
jnp
mov
jle
scas
out
cltd
cmp
pusha
test
scas
ret
jmp
call
pop
lods
jae
out
push
inc
mov
adc
inc
clc
jp
fisubrl
xor
push
jns
sbb
clc
mov
pop
xor
scas
add
inc
out
adc
mov
sahf
leave
sub
jnp
add
dec
inc
inc
cmp
or
stc
stos
outsb
aaa
loop
or
adc
add
fwait
aaa
int3
dec
push
arpl
clc
ja
sbb
mov
out
xchg
pop
inc
jbe
pop
mov
movsb
add
push
and
data16
inc
jp
dec
shlb
popf
data16
cld
pop
jl
fcoms
push
mov
rolb
sub
add
test
ret
mov
cmpsb
scas
sub
in
xchg
lods
mov
pop
inc
mov
add
loope,pt
xchg
push
cmp
movsl
push
movsl
jnp
ljmp
adc
adcb
mov
xor
mov
js
xchg
in
pop
mov
movsl
ret
cwtl
sbb
hlt
loop
sub
outsb
mov
adc
scas
adc
aam
aas
mov
inc
fimuls
inc
in
sbb
push
call
adc
sub
into
test
lcall
mov
mov
insb
sahf
outsb
insl
push
test
andb
cmp
mov
loop
xchg
stc
and
add
adc
hlt
xor
cmp
pop
lea
cli
repz
cmp
jno
or
xchg
sub
mov
stc
fwait
pop
nop
stc
adc
hlt
out
imul
cmp
into
das
int
lock
lods
jno
loope
popl
xlat
xor
sub
in
mov
push
int
sti
rcl
pushf
stos
mov
popf
push
loopne
push
nop
dec
hlt
int3
imul
push
or
mov
ds
and
cmp
pop
mov
pop
ret
adc
fimull
jmp
or
fs
enter
jp
aas
pop
lods
cmp
add
imul
jecxz
daa
push
enter
mov
push
call
rcrl
aaa
jns
orl
in
fistl
adc
inc
int
fsubrl
enter
and
adc
and
rorb
sbb
loop
imul
test
xchg
cmpsl
dec
add
pop
icebp
test
and
pushf
ja
lret
adc
in
adc
test
add
cmp
insl
rorb
loope
and
lcall
xor
es
imul
mov
xchg
popa
xchg
je
cmp
xor
and
xchg
sbb
mov
lods
dec
dec
add
stos
nop
test
sbb
jae
mov
clc
inc
out
lea
iret
repnz
shl
pop
lock
lret
stos
imul
xchg
rcll
push
pushf
mov
jae
sub
fisttps
addr16
xor
cmpsl
hlt
mov
jmp
mov
clc
ja
or
pop
inc
iret
and
or
mov
fwait
cmp
push
push
inc
lds
add
mov
stos
out
lahf
lcall
add
add
enter
jle
dec
mov
sbb
mov
aaa
add
scas
js
jp
mov
mov
cmp
inc
mov
aas
push
dec
add
das
jne
iret
js
dec
fistps
sub
shr
cmp
pop
repnz
dec
sub
or
roll
mov
mov
mov
jle
and
in
lret
mov
push
mov
mov
pop
xchg
pop
pop
jns
inc
addb
jae
jnp
push
add
cmp
mov
ja
pop
ficompl
push
xchg
pop
test
adc
pop
mov
push
add
adc
jo
sub
repnz
test
sbb
fdivrl
inc
dec
testl
je
dec
aaa
mov
into
inc
add
popa
sahf
int3
cmp
pop
sub
add
or
or
fisubrl
scas
mov
and
cmp
pop
inc
movsb
mov
jb
cmp
jge
leave
push
sbb
sub
daa
dec
fdivrs
cli
sub
adc
inc
dec
int
cs
popf
pop
in
xor
push
jo
lahf
inc
fildll
push
mov
mov
mov
xchg
inc
sbb
xor
jle
cmp
sub
sub
push
pop
jecxz
das
pop
jae
call
cmp
int3
inc
ds
daa
mulb
out
cmp
test
xchg
incb
mov
addr16
lods
js
out
addr16
aaa
out
lcall
pop
fcompl
imul
adc
mov
adc
mov
adc
and
loopne
xor
mov
jmp
sbb
and
sub
and
divl
sub
rcrl
jge
adc
mov
sahf
adc
test
jno
addb
outsl
lsl
loop
aad
stc
fildl
adc
push
idivl
adc
pop
out
test
cli
es
gs
lcall
jne
repnz
test
popf
xor
mov
out
cmp
loop
loope
daa
add
dec
data16
aas
lods
pop
push
imul
cmp
sub
mov
jns
and
xorl
movsb
sbb
loopne
xchg
adc
mov
mov
cmp
add
xchg
in
push
sbb
xchg
push
scas
ss
pop
jne
or
or
setl
mov
sbb
adc
sbb
nop
loopne
insb
aas
sti
aam
jb
fcomip
dec
loopne
mov
jecxz
cmp
lret
leave
mov
call
sbbb
andl
cmp
pop
pop
mov
into
inc
call
cmpsl
sbb
sub
push
rcrl
rcrl
jl
mulb
mov
inc
cmpsl
dec
in
mov
pop
xor
aad
lret
test
testl
add
mov
push
xor
rcrb
cmpsl
adc
pop
loope
aam
sbb
es
lock
dec
sub
mov
dec
mov
lods
xor
mov
mov
push
call
ud2
mov
cs
test
hlt
test
bound
outsl
imul
inc
scas
clc
adcb
sbb
push
xlat
pop
jne
aam
pop
push
cwtl
out
rclb
mov
inc
mov
xor
xor
fisubs
xor
fdivr
mov
in
dec
ja
push
clc
aas
test
jmp
ja
insb
add
inc
data16
jp
mov
sub
jecxz
pop
add
iret
and
bound
or
int
in
jp
xchg
int
sbb
push
xor
mov
repnz
jp
scas
cmp
mov
dec
idivl
push
decb
push
mov
imul
bound
xor
or
pop
das
out
clc
ss
or
push
adc
test
and
inc
jnp
shrb
filds
xchg
pusha
mov
aaa
sahf
ret
and
push
add
jae
push
pushw
lret
and
inc
notb
push
xchg
mov
jl
sarb
scas
lret
clc
push
dec
call
or
mov
adc
sbb
hlt
daa
pop
in
push
aas
je
dec
or
or
out
xor
aaa
pusha
sub
or
insl
add
int3
and
inc
pop
push
mov
fisubrs
test
scas
xchg
xchg
aam
cmpb
test
imul
mov
jge
xor
sbb
sub
daa
dec
gs
cmp
add
pop
xchg
das
dec
cmp
insb
push
andb
mov
or
lretw
test
test
pop
push
cmpsb
inc
test
mov
mov
test
gs
enter
pop
shrb
ljmp
sub
and
cmp
add
movsl
mov
mov
sbb
test
inc
xlat
pusha
add
enter
cmpsb
hlt
xchg
in
lret
pop
push
icebp
jns
and
popf
pop
mov
ficomps
push
inc
fmull
push
sub
pop
outsb
add
jne
mov
ja
jg
mov
mov
sbb
mov
push
push
and
add
out
mov
adc
scas
pop
pop
imull
mov
lret
sbb
mov
pushf
mov
mov
sbb
cmp
push
dec
cmp
outsl
out
push
in
push
pop
stc
xchg
mov
mov
ss
inc
push
fmul
inc
sub
das
aam
sbb
xchg
lods
or
into
pop
xor
cmc
dec
not
xor
inc
pop
into
dec
aaa
adc
mov
lods
or
in
or
lods
aas
fstpt
mov
mov
mov
in
ja
xor
lock
jno
stos
rolb
mov
sub
mov
fnstenv
ret
es
ljmp
pop
movsb
cmp
and
pop
pop
sub
inc
adc
mov
jmp
loope
jge,pn
push
insl
iret
ja
mov
add
dec
push
push
lret
mov
into
and
sub
mov
pop
aas
mov
out
cli
fucomi
pop
cmpsl
pop
std
pop
pusha
inc
xchg
mov
add
lea
loopne
xor
pop
dec
cmpsb
shrl
xor
std
jl
std
cwtl
push
arpl
cmpsl
dec
inc
ret
xchg
jecxz
xor
cld
repnz
jae
repz
in
mov
shll
pop
lahf
lods
pop
jbe
xlat
shr
pusha
pop
sub
daa
dec
aam
cmp
ret
outsl
mov
es
pop
insl
pop
imul
xchg
fcomip
sub
popa
push
xchg
cli
lods
lahf
idiv
mov
fldenv
and
into
movaps
push
push
add
xor
test
lds
stc
mov
clc
mov
ret
xor
rcrl
stos
dec
fstpt
xor
mov
push
sbb
daa
xor
out
inc
or
push
xor
add
out
push
orl
test
ja
push
mov
cli
popa
add
mov
fwait
lcall
add
ljmp
bound
mov
outsb
pop
in
inc
cmpsl
xchg
sbb
lea
inc
test
cmp
lods
jl
jp
imul
mov
mov
scas
es
dec
lret
jne
loope
mov
cmp
fistps
jnp
xorl
jmp
adc
xorl
dec
out
cmpb
mov
or
sbb
dec
data16
mov
xchg
and
adc
pushf
jle,pt
fistpll
pusha
push
add
ret
pop
lea
inc
cwtl
push
divl
jae
push
mov
mov
inc
jne
sbb
mov
lock
popa
dec
imul
sbb
iret
pop
adc
rorb
mov
add
sub
jb
mov
cmp
cmp
push
pop
rorb
pop
fs
add
int3
movaps
pop
xchg
adc
pusha
rclb
cmp
and
out
movsb
mov
or
jbe
cld
jmp
push
xorb
pushf
daa
dec
mov
cmp
scas
jno
cmp
mov
pop
dec
stos
mov
push
arpl
pushf
jo
mov
pop
push
pop
push
imul
aaa
pop
in
cmpsb
cmp
stc
in
dec
pusha
in
and
push
lahf
xor
pop
mov
dec
cmp
cltd
movsl
nop
daa
sbb
sbb
fwait
cltd
imul
jnp
push
add
outsb
cmp
mov
inc
mov
js
push
push
lcall
add
cmc
push
sub
dec
outsb
addr16
adc
aas
enter
jge
mov
push
mov
adc
and
push
push
icebp
cs
icebp
pushf
jbe
sub
or
dec
sbb
mov
repz
sbb
bswap
test
mov
xorb
outsl
int
fs
or
stc
dec
sahf
push
movsb
and
adc
ss
addr16
lcall
out
xor
xor
pop
xor
push
mov
cmp
int
adc
ret
xlat
add
in
std
in
adc
xor
pop
adc
out
add
ret
data16
pop
lods
es
int3
mov
popa
out
pop
xorb
xchg
insl
sti
fisttps
lret
daa
iret
gs
add
and
dec
adc
and
test
inc
les
fistpl
imul
cmp
shll
pop
fstpt
push
pushf
rolb
loopne,pn
push
aad
call
aad
cmp
xor
cmp
je
push
or
mov
mov
shl
cltd
jmp
sub
mov
mov
sbb
dec
add
ds
mov
and
push
andb
fimuls
mov
out
mov
mov
mov
std
and
or
cmpsl
dec
idivl
or
ret
mov
inc
mov
push
jle
mov
adc
rol
dec
out
sub
stos
outsl
ret
aad
es
mov
lds
scas
pop
xchg
push
insb
cmp
xchg
inc
stc
popa
imul
test
cld
jno
and
imul
add
mov
mov
addb
mov
inc
out
push
mov
push
lods
clc
clc
mov
sbb
jo
shr
shrb
cmp
cwtl
into
popf
xchg
cmpsb
loop,pt
sub
xchg
cmp
and
inc
or
mov
les
repnz
dec
and
cli
add
mov
stos
inc
xchg
jne
or
orl
sub
xlat
add
add
pushf
bound
mov
in
pop
mov
imul
mov
push
inc
aad
cmpsb
ljmp
enter
push
rorb
idivl
mov
clc
jl
dec
xchg
push
mov
jmp
fdivl
ret
out
jnp
sub
jl
push
mov
stos
adc
lahf
insb
add
sub
and
stos
pusha
lock
repz
shlb
ret
mov
les
inc
mov
aad
push
dec
lods
sbbl
hlt
les
xor
sbb
push
xlat
sbb
arpl
scas
xchg
ret
fcomps
add
add
sbb
or
pop
xor
hlt
mov
ja
inc
push
test
jecxz
in
push
aaa
fidivs
cmpsl
add
ret
cmpsb
pop
mov
js
icebp
mov
pop
mov
shrb
sub
and
inc
movsb
sub
mov
pop
push
ljmp
mov
sbb
out
daa
dec
xor
cmp
xchg
sarb
dec
sbb
jb
dec
inc
mov
lahf
movsb
lods
inc
push
sub
test
out
add
inc
and
in
xor
xor
ds
cmpsl
push
dec
cmp
je
popa
sub
cmp
cmp
xchg
mov
adc
mov
jl
clc
out
and
fstpl
mov
inc
add
imul
pop
push
jmp
js
cmp
mov
ss
mov
sub
inc
mov
adc
xchg
rcrb
sub
lea
xchg
mov
adc
and
fildl
hlt
adc
sub
or
rcr
sub
aad
push
sbb
imul
test
dec
adcb
push
loop
cmc
add
add
aam
das
call
adc
ds
pop
cmp
inc
dec
shl
mov
jge
lret
les
fimuls
mov
cmc
fidivl
xor
lahf
pop
or
dec
adc
add
xor
adc
sbb
or
cltd
data16
test
or
xchg
xlat
sub
push
xchg
mov
mov
cli
cmp
ss
push
gs
fstpt
inc
pop
and
fildll
test
push
repz
xchg
cs
lret
lret
inc
adc
pop
mov
adc
dec
dec
pushf
imul
mov
fisubrs
inc
mov
sti
ficoml
fsubs
jb
mov
dec
inc
and
jecxz
aam
cltd
lea
es
mov
or
sahf
dec
lock
fisttpl
pop
inc
jo
inc
mov
sbbl
jno
jge
dec
jmp
and
cs
push
xor
or
lret
cwtl
xchg
mov
cmpsl
dec
cltd
sub
icebp
loopne
or
dec
call
mov
aaa
jmp
imul
and
pop
mov
and
sub
sahf
ret
jno
ret
lea
xor
jge
mov
dec
sbb
xchg
pop
addr16
popa
addb
mov
pop
jbe
and
add
push
movaps
ss
js
cltd
dec
push
hlt
test
fcmovnbe
push
jg
out
addr16
dec
xchg
xor
roll
jae
jbe
and
sti
fsts
push
or
jnp
lahf
or
xor
or
adc
je
mov
cmc
aam
dec
mov
jl
loope
mov
movsb
les
in
es
sub
fwait
clc
scas
sti
push
int3
pop
jns
and
add
and
or
ss
mov
in
leave
push
xchg
mov
and
mov
and
cltd
stos
nop
sub
sbb
jle
repz
jb
lea
into
jne
andb
dec
lret
fwait
in
mov
jmp
cmpsl
rorb
push
mov
pop
sub
stc
je
push
int
stos
stos
xchg
jmp
adc
jnp
jnp
jle
insl
frstpm(287
mov
add
pop
es
ret
pop
pop
sti
lds
scas
repz
jae
jnp
push
adc
popf
push
je
mov
jae
sbb
xchg
mov
and
imul
out
hlt
lret
pop
lret
fbld
xor
movb
pushf
gs
or
xor
stc
cmp
cmpsl
into
or
pusha
fsubrs
or
leave
adc
int3
in
mov
ficoms
and
inc
sub
scas
xor
xchg
cmp
jp
push
scas
fs
adc
lods
sbb
mov
test
jbe
jno
sbb
jl
in
dec
mov
and
ret
lahf
ret
mov
leave
test
mov
sub
cmpsb
and
enter
pop
jge
aas
push
mov
loope
mov
sub
add
cmp
sarl
mov
cmp
push
adc
push
xchg
xor
outsb
sbb
subl
loopne
in
pop
jnp
sti
js
xor
xor
pop
lcall
repnz
or
pop
insl
scas
outsb
sub
test
shl
movsl
loop
out
push
ds
nop
movsb
mov
insb
pushf
and
push
push
divl
int
imul
pop
push
imull
lret
rol
jbe
jge
shl
sbb
and
xchg
test
xor
lods
mov
outsl
mov
loop
adc
stc
mov
sbb
mov
ret
orl
fadds
test
sub
xor
xchg
or
mov
into
add
cmc
mov
jp
pop
sub
adc
int3
sub
adc
sahf
outsl
add
scas
sti
lods
hlt
rcl
mov
mov
insb
lcall
icebp
daa
sbb
and
scas
inc
pop
test
std
loopne
jo
dec
iret
cmpsb
arpl
add
les
daa
sbb
in
dec
cmp
popa
cld
pop
inc
xchg
cmp
pushf
push
adc
jne
cmpsb
mov
aad
inc
ficoms
ja
xor
fs
dec
mov
loopne
jecxz
xor
lea
push
loop
jl
mov
divb
cmp
pop
mov
jnp
loop
out
cmp
jge
inc
push
lcall
add
popf
mov
std
sbb
rcll
xchg
xor
test
cwtl
dec
mov
push
mov
mov
cmpsb
cld
jae
call
mov
or
lock
add
pop
roll
jp
addr16
stos
sub
rolb
aam
mov
add
insl
push
dec
inc
dec
adc
out
ljmp
add
mov
mov
and
addr16
imul
xchg
popf
jb
daa
mov
push
inc
mov
mov
outsb
call
dec
sahf
jns
lcall
stos
push
stos
in
pop
fnstcw
xor
inc
push
jecxz
add
xchg
or
stc
sub
clc
jmp
push
test
pop
shll
adc
rol
mov
or
dec
ret
fwait
daa
int3
inc
push
outsl
dec
inc
add
cmp
loopne
cli
pop
inc
leave
adc
xchg
jg
das
xchg
or
add
cmp
pop
ficoms
imul
push
mov
loope
mov
cld
ds
dec
jae
divb
jmp
or
mov
inc
movsl
jmp
jb
and
ror
sub
hlt
add
stc
cmp
jge
jmp
fcmovne
sbb
xchg
dec
jle
mov
mov
iret
jle
cs
and
repz
repz
fs
rcrl
popf
js
xor
repnz
ficompl
sbb
ds
imul
ljmp
frstor
mov
decb
and
arpl
arpl
sbb
insl
jl
push
pop
push
or
lock
enter
shlb
pop
adc
fidivs
sbbb
jb
shlb
scas
adc
inc
cmp
mov
push
std
mulb
push
movsb
aaa
jge
sub
lods
repnz
daa
dec
adc
cmp
mov
jno
mov
out
dec
clc
sbb
or
jo
cmp
lahf
loop
push
test
test
mov
cmpsb
shl
in
add
es
pop
mov
leave
add
mov
lahf
adc
ds
jae
movsl
adc
or
mov
ja
or
repz
pop
lock
pop
xor
cli
mov
jne
js
jae
pop
mov
insb
lcall
or
mulb
sub
pop
mov
nop
adc
adc
shlb
push
jg
fs
mov
cmp
test
cmpsl
and
fildl
cli
aas
xchg
int
sub
imull
cmp
inc
or
lahf
test
sahf
inc
inc
dec
test
incb
push
ss
gs
stc
outsb
adc
adc
out
les
cmp
mov
pop
pusha
cli
and
cld
mov
xor
mov
xor
add
in
sbb
push
imul
enter
push
adc
ja
add
icebp
sub
dec
push
lods
fucomi
das
mov
out
xlat
stos
cld
cltd
sub
xor
in
nop
iret
cli
sti
in
and
stos
movl
cs
stc
inc
in
fadds
les
xor
mov
nopl
cmp
mov
andl
hlt
mov
pushf
rcrl
or
scas
nop
daa
mov
push
sub
dec
xor
scas
jecxz
fwait
cmp
ficompl
mov
mov
mov
mov
mov
adcl
cmpb
push
cmp
inc
mov
das
add
mov
mov
pop
push
shll
idiv
sbb
jne
or
cmpsl
dec
sti
pop
mov
mov
cld
sahf
sbb
lret
scas
rolb
mov
or
clc
fistpl
bnd
sarb
push
xor
aam
sti
xchg
ret
stos
fistpl
int
insl
cmc
pop
rorl
cli
xchg
fucomi
ljmpw
scas
decl
lods
dec
sbb
aad
gs
popf
and
cmp
sub
add
iret
cltd
mov
jmp
add
js
fnsave
mov
icebp
mov
sub
icebp
data16
pop
int3
lahf
bts
int3
jbe
jnp
pop
push
mov
add
or
xchg
int3
xor
shrl
test
xor
pop
jge
test
test
pop
adc
dec
dec
inc
pop
or
jmp
fwait
push
lods
xor
adc
add
push
mov
bound
jns
cmc
mov
or
push
mov
popa
jno
loop
pop
pop
cltd
iret
pop
addr16
mov
mov
dec
mov
dec
push
mov
arpl
fldenv
xchg
iret
pop
adc
xchg
cmp
cli
cltd
out
sbb
out
and
dec
filds
stos
insb
sbb
and
bnd
imul
lret
pusha
rcll
cs
jbe
add
imul
adc
push
xchg
in
popf
lahf
push
xor
jno
fimull
notl
pop
xor
scas
mov
push
xchg
xchg
leave
lods
mov
push
lea
hlt
sahf
data16
imul
xchg
or
push
sub
or
incl
int3
mov
in
imul
scas
icebp
imul
popa
or
cmp
es
movsb
int
in
dec
int
jbe
sbb
jge
movsb
sbbb
enter
xchg
cmp
mov
jp
fs
jmp
lock
out
and
xor
js
push
lahf
add
sub
push
sarb
or
push
in
call
pop
cmpsl
pop
sti
pushf
cmp
xchg
and
mov
adc
cmp
pushf
imull
movsl
lods
xlat
iret
and
jno
sbbb
lcall
dec
inc
xor
cmp
data16
js
dec
stos
pop
xor
push
lcall
jne
mov
push
jnp
repz
shrb
fs
mov
gs
mov
pop
shlb
lea
add
std
addb
std
sub
jb
lret
repnz
sbb
setle
jmp
dec
and
into
outsl
dec
ss
loop
ljmp
shrb
lea
pop
stc
mov
fdivs
scas
out
jo
cli
pop
icebp
stos
xor
movsb
cmp
cmc
movsl
or
data16
das
lcall
pop
imul
pop
imul
movsl
insl
add
pop
mov
mov
xlat
ljmp
mov
sti
xor
lahf
sti
shll
fisttps
dec
lea
inc
flds
mov
xchg
ja
pop
sbb
testb
xor
sbb
cmpsl
xor
adc
ret
fcomps
pop
push
cs
imul
add
cmp
mov
pop
jb
pop
push
dec
stos
cmpsb
lea
cmp
lock
jg
fnstsw
ds
cli
in
mov
pop
incb
mov
scas
fcmovnu
jbe
pop
sub
cmp
push
push
das
loope
das
mov
jae
mov
adc
jmp
repz
loop
mov
sbb
mov
jg
cmpsl
dec
repnz
cmp
leave
outsb
pop
lret
push
or
mov
daa
addr16
push
jo
and
ljmp
sub
and
ret
cmp
mov
insl
fcoml
dec
or
xchg
sbb
ljmp
mov
mov
ja
daa
lahf
push
mov
xor
mov
cmovne
cli
cltd
repnz
popa
test
cs
enter
fdivl
ret
clc
in
xchg
adc
mov
test
pop
ja
xor
and
mov
push
cltd
stos
in
jl
repz
push
or
add
xchg
outsl
gs
rcll
test
or
dec
jg
dec
mov
xor
or
push
fwait
test
push
mov
sub
jno
jle
mov
and
jns
mov
in
or
divl
mov
pop
push
mov
ja
jb
push
mov
test
mov
int
dec
cmp
adc
mov
mov
cmpsl
push
xchg
mov
pusha
jmp
cmp
push
out
icebp
jno
ss
pop
push
mov
subb
fistpll
insb
mov
cmpb
adc
in
mov
pusha
pop
fwait
or
cmp
into
ret
out
pop
mov
out
jae
add
push
pop
popf
sbb
mov
lock
ret
fiaddl
into
mov
ret
imul
or
hlt
das
pop
adc
lock
movsb
mov
aaa
hlt
jmp
pop
sub
pop
cli
or
shrl
popf
or
test
add
mov
out
jno
inc
fidivrs
call
rclb
ljmp
emms
movsb
pop
cmp
shlb
add
sbb
dec
xchg
daa
dec
call
cmp
ss
jae
jl
test
inc
push
shlb
push
xor
rorl
and
xor
sbb
cmc
cmpsb
mov
in
enter
pop
cmp
push
adc
loope
fsubrl
in
push
add
lcall
ds
sahf
movsl
mov
int3
and
clc
icebp
je
mov
cs
lock
cltd
pop
xor
mov
pop
lock
fnstcw
mov
pop
mov
add
je
movsl
fmull
sub
jns
outsb
push
jecxz
adc
xchg
lret
mov
add
arpl
fwait
mov
jbe
and
adc
hlt
dec
lea
nop
lock
imull
xchg
sarl
rorl
out
out
sahf
xchg
lret
cmp
loop
sub
mov
fcoml
fstl
iret
clc
mov
dec
dec
cmp
xor
out
or
cli
mov
push
cmp
ljmp
stos
out
cmc
negb
xor
stos
pop
adc
lds
daa
stos
add
fisubl
jecxz
lods
test
push
lret
dec
mov
cltd
cwtl
icebp
mov
data16
sti
dec
popa
inc
inc
xchg
call
loopne
cmpsb
add
mov
movsl
fnstcw
nop
cwtl
repz
add
cmp
movsl
sbb
xor
add
pop
xchg
mov
push
mov
pop
sub
cs
dec
dec
aad
inc
je
fstpl
or
push
popa
jb
stos
stc
dec
and
je
sub
jecxz
aaa
pop
loopne
pusha
out
lods
jbe
mov
push
mov
loopne
add
pop
xor
or
sub
push
push
mov
push
leave
das
rorb
mov
add
sahf
fsubrl
idiv
loop
std
pop
dec
cwtl
addb
inc
insl
mov
cmp
aam
hlt
cwtl
inc
lret
lea
jp
enter
sbbb
shl
call
aam
aad
ret
leave
mov
insl
ret
jno,pn
push
push
push
xchg
pop
jl
ljmp
pop
lods
and
push
stos
push
mov
aaa
push
fisubs
movsb
inc
mov
cltd
sub
aad
xchg
sti
push
mov
xor
pop
pusha
sub
addr16
rcrl
xchg
pop
stos
jecxz
xor
xchg
cmp
push
lcall
or
ret
cmc
int3
or
push
pop
xor
addl
add
rorl
mov
int
divb
jnp
dec
lods
jne
inc
xchg
lods
or
stos
lods
fwait
mov
lods
push
pop
stos
lahf
add
mov
inc
bound
sbb
and
xor
jmp
sarl
wbinvd
cld
cmpsl
call
int3
mov
mov
mov
dec
cmp
dec
sbb
insb
jne
jne
mov
xlat
mov
xchg
jne
and
cmc
addr16
xchg
roll
cld
out
xor
sub
in
sbb
mov
stos
push
repnz
insb
sbb
jl
mov
stc
stc
in
arpl
iret
fwait
inc
jl
pushf
js
pop
xlat
push
pop
inc
ficompl
xor
mov
lods
popf
in
les
inc
outsl
cmp
fidivl
clc
mov
imul
dec
push
cmp
adc
mov
repnz
inc
leave
pop
xor
xor
sbb
test
popf
or
dec
lret
cltd
push
aad
leave
add
jne
xchg
fistps
push
js
and
hlt
shlb
pop
and
popf
mov
push
ljmp
jge
push
jae
ficomps
daa
inc
cmp
cmp
test
jl
cmp
fs
mov
push
xor
jae,pn
lahf
aas
test
push
dec
mov
push
imul
xchg
pop
cmpsb
dec
fisttpl
shll
enter
pop
jns
aad
cmovs
loope
xchg
sub
outsl
inc
cmp
adc
movsl
mov
pop
cmp
rorl
adc
lds
pop
xor
in
mov
xchg
js
mov
pop
das
jecxz
lcall
or
not
dec
sub
mov
outsb
mov
mov
shlb
mov
imul
insb
cmc
lcall
and
push
add
int
mov
fincstp
push
push
repnz
das
mov
sbb
mov
lock
ss
sbbb
mov
loop
xchg
push
stc
xchg
dec
scas
fs
or
push
call
es
in
repz
sub
xor
fisttpll
mov
pushf
or
pop
pop
cmc
mov
scas
sbb
jb
adc
ss
std
cld
add
addr16
mov
into
lods
nop
nop
fmull
push
mov
ss
sarl
sti
stc
and
in
sbb
inc
ss
mov
dec
shlb
es
rcr
repnz
filds
push
sbb
insb
clc
addr16
add
or
sbb
jmp
in
xor
aad
mov
nop
mov
test
pop
dec
cwtl
je
jmp
mov
lea
call
js
push
mov
pop
inc
sbbl
dec
stos
adc
pop
cld
inc
inc
jecxz
inc
sarb
mov
loope
pop
and
sbb
idivb
ja
cwtl
cmp
and
sub
lret
xchg
xchg
lret
cld
lds
mov
jne
lock
pop
dec
or
sub
add
aam
aas
cltd
ret
pop
inc
xor
or
fsubrs
in
orl
or
dec
add
je
mov
fnstcw
ds
jmp
or
hlt
lsl
mov
cltd
pusha
push
dec
test
lds
mov
mov
nop
cli
pop
test
xchg
fcomps
sbb
shl
push
rcrl
stos
shlb
out
ljmp
push
dec
cmp
stc
xor
adcb
sub
mov
mov
add
movsl
dec
jecxz
test
pop
adc
cli
cli
dec
lahf
sbb
push
jecxz
or
enter
call
add
cmpsl
push
push
bound
and
in
fdivp
xchg
inc
jns
mov
and
mov
lret
cmpsb
enter
test
xchg
mov
mov
sysenter
jne
insb
pop
mov
or
js
dec
xlat
push
jmp
sahf
xchg
int3
in
sub
loopne
dec
push
or
mov
and
adc
nop
jnp
nop
pop
jle
decb
in
js
pusha
xchg
fs
cli
pop
inc
scas
xchg
inc
in
mov
mov
push
fbstp
pop
popf
adc
leave
mov
out
stos
mov
xchg
insb
dec
sti
sbb
std
sub
and
scas
jecxz
clc
push
adcb
adc
xchg
mov
ret
repnz
mov
clc
hlt
jg
bound
jg
inc
imul
aaa
pop
mov
out
add
adc
jl
pop
iret
xor
faddp
fcomps
ror
dec
scas
mov
mov
movsb
outsb
mov
insl
jbe
xor
cwtl
in
sbb
std
push
jno
mov
pop
dec
mov
inc
push
cwtl
or
xor
mov
ds
sbb
incl
inc
and
cmpsb
int
or
popf
subb
mov
das
test
sub
pop
dec
cmp
mov
movsl
shll
pop
dec
stos
xor
push
push
dec
inc
sbb
sbb
xor
insl
scas
cmp
pop
ds
js
inc
or
scas
mov
lcall
adc
mov
stos
cmc
outsb
sbb
dec
adc
cmp
cmp
mov
fwait
sbb
xor
loope
mov
add
int
push
shrb
adcl
daa
sub
lret
pop
shrl
mov
sbb
dec
xchg
mov
xorb
outsl
out
push
stc
dec
movsl
loopne
jno
xchg
adc
adc
shlb
cmp
cmpsl
cmp
and
or
xor
sbb
cmp
push
fimull
lock
hlt
into
jo
lock
test
xor
enter
push
adc
ljmp
test
add
adc
fs
daa
pushw
dec
shrd
mov
xlat
cmpsl
lods
enter
mov
fs
fwait
sti
test
adc
gs
mov
pop
andl
stos
in
inc
cmp
fldcw
sub
ljmp
xchg
ror
sbb
cmpsl
scas
je
lods
xor
cli
adc
jle
pushf
insl
add
jmp
shr
cs
loop
aad
mov
aas
xchg
idiv
jb
fnsave
je
jge
sbb
push
xchg
lea
xor
mov
push
sub
subb
adc
ss
cmp
mov
cwtl
gs
and
stos
push
shl
shlb
addb
cwtl
testb
mov
ljmp
lret
imul
mov
jnp
push
mov
lock
sub
outsb
lcall
data16
xchg
cmp
out
pop
es
aas
popa
insl
xchg
nop
clc
dec
cld
xor
mov
lods
jne
testl
and
cmp
bound
add
rcrb
popa
xor
push
adc
xor
xchg
test
int
rcl
dec
cmp
pop
js
nop
stos
rcll
dec
and
xchg
xchg
push
aas
push
sub
lcall
xor
push
or
cmpb
pop
pop
or
and
ja
pop
dec
xchg
jno
inc
mov
js
int
ja
adc
jmp
add
ret
out
push
andl
jns
shlb
xchg
xchg
into
and
jle
sbbb
add
sub
jp
adc
pop
mov
daa
bound
jno
jne
sub
push
xchg
sbb
rcll
test
out
or
sub
fldt
push
inc
cwtl
push
stos
cmp
and
repnz
sbb
jp
out
inc
pusha
sub
jo
ret
mov
inc
jno
inc
lock
test
push
mov
lds
les
add
sbb
mov
ret
mov
sbb
scas
inc
add
push
leave
sbb
adc
add
repnz
mov
dec
push
push
hlt
lret
arpl
pop
popa
or
inc
mov
aam
scas
fcomi
add
xor
aam
fisubs
push
lds
cmpsb
add
call
das
fldenv
lods
idivb
cmp
movsb
pop
movsb
stc
repz
jbe
jge
pop
lcall
push
sub
mov
jno
adc
jl
loope
dec
and
push
jnp
mov
mov
sti
lahf
lahf
jge
mov
test
jl
incb
pushl
in
test
mov
pop
neg
xchg
push
lret
adc
push
cmp
mov
orl
hlt
xchg
out
xchg
mov
andb
sbb
and
add
outsl
test
sbb
ljmp
gs
xor
pop
sub
fcomi
push
jns
sub
dec
lock
sub
aas
rcll
pop
pop
sbb
mov
mov
jbe
mov
mov
arpl
leave
push
jne
or
add
sub
inc
sub
stos
pop
mul
jno
lret
push
roll
push
inc
mov
and
adc
loope
loop
or
movsb
nop
fs
ja
adc
and
bound
fsubp
and
lahf
cli
and
fnsave
lods
jge
cmp
ret
pop
inc
sbb
push
push
jp
dec
fisubrl
xor
push
scas
adc
cmpsb
das
adc
movsb
popf
add
or
xchg
sub
lods
pop
enter
clc
pop
xlat
out
pop
sub
adc
mov
sti
push
clc
push
sub
mov
xor
cli
popl
std
imul
pop
fldenv
adc
cmc
gs
xchg
sbbl
iret
push
out
cmp
cli
push
sub
add
adc
bound
sbbl
aad
ret
outsb
ds
aas
xor
jb
les
dec
xchg
jecxz
mov
movsb
lea
add
call
mulb
mov
movsb
dec
pop
roll
xchg
out
enter
add
out
stos
inc
test
das
pop
lods
add
mov
aas
xchg
mov
test
add
pop
push
and
inc
notb
rorl
cld
jne
and
ficoml
lret
pop
or
xchg
ljmp
pop
or
sub
popa
adc
jbe
or
insl
js
inc
dec
divl
xchg
push
mov
ljmp
int3
lods
bound
inc
mov
adc
mov
dec
idivb
mov
roll
add
mov
test
push
jle
add
push
aam
jle
js
test
shl
cmp
addb
shll
imull
mov
jl
fsubp
sub
clc
mov
xor
xor
mov
inc
inc
xchg
in
xor
inc
push
test
push
test
xchg
dec
test
inc
dec
shrb
mov
lcall
fucom
push
out
xor
or
cmpsl
lds
and
sar
xchg
jecxz
fs
out
mov
inc
mov
movsb
adc
jp
xor
mov
jl
mov
xchg
sbb
dec
jne
xchg
mov
mov
fbstp
xchg
out
fdiv
jmp
xor
lds
shlb
loop
insb
ret
shl
stos
stos
std
fbld
pop
inc
ljmp
daa
xchg
jle
in
in
into
mov
iret
mov
ds
pop
jl
nop
inc
sti
repnz
jae
jae
push
gs
fistpl
call
loope
in
sbb
fcmove
in
adcl
push
aad
mov
mov
adc
push
mov
lock
hlt
adc
neg
inc
imul
xlat
lret
mov
mov
push
jecxz
push
xor
int3
push
imul
or
rolb
push
scas
dec
stos
int3
and
cmpsl
cmp
adcl
in
popa
jge
pop
pop
sbb
cmc
jle
inc
or
sub
pushl
mov
dec
xchg
mov
cli
xor
aas
pop
mov
pushf
aad
push
ret
out
test
inc
mov
add
imul
pop
ss
push
sbb
sub
mov
cmp
mov
movsl
iret
jge
and
push
and
push
jp
pop
or
xor
je
js
and
pop
lods
jecxz
lcall
int3
fdivr
mov
adc
lock
subb
repnz
jg
sahf
stc
mov
test
mov
mov
mov
sbb
cmpl
sub
mull
out
rcll
mov
pop
mov
sahf
adc
test
jns
outsl
movsb
jns
loop
xchg
sti
stc
mov
fsubrl
or
ss
mov
xchg
sbb
lcall
addl
cmp
pop
dec
or
loope
into
outsb
jmp
adc
bound
imulb
cmp
fdivr
xor
adc
jbe
add
adc
mov
dec
xlat
and
push
sub
xchg
push
in
adc
mov
gs
ret
xchg
mov
dec
push
sub
adc
add
repz
std
xchg
inc
arpl
sbb
sbb
xor
sbb
scas
sbb
ret
cs
add
js
pop
dec
pmullw
pusha
aam
dec
enter
fwait
jmp
dec
std
std
pop
je
and
cmp
lahf
lea
xchg
test
fwait
hlt
mov
sbb
clc
add
pop
pop
in
fadds
or
adc
cmp
insb
mov
push
pop
cmp
lret
jle
cli
testb
cmp
add
test
cmpsl
inc
adcl
cld
mov
lahf
popa
mov
lea
in
push
rcrl
rolb
iret
mov
mov
aam
js
ret
add
xor
insl
pop
adc
repnz
xchg
push
shrl
ljmp
out
int
jge
xchg
cmp
mov
push
pop
pop
mov
and
pop
cltd
add
xchg
ret
adc
xchg
jbe
fstpl
stc
aaa
xchg
mov
scas
sar
jle
pop
into
outsl
es
lahf
pop
shr
adc
movsl
push
loopne
dec
call
pop
sbb
sti
test
xor
into
or
or
dec
xchg
add
cmp
push
or
sbb
fwait
jo
push
in
xchg
add
clc
iret
jle
adc
into
lret
xchg
adc
sub
xor
mov
negb
int3
jge
pop
sti
imul
mov
pop
pop
mov
adc
mov
add
adc
jne
test
mov
and
or
shr
mov
pop
mov
sub
roll
push
lds
and
mov
insb
enter
pop
cltd
lods
jle
movb
pusha
arpl
fcmovne
pop
test
jp
mov
mov
pushl
cmp
push
sub
icebp
mov
imul
xchg
jno
rcrl
add
fadds
scas
or
and
push
movsl
adc
addr16
inc
shll
cmp
sub
pusha
loopne
arpl
cltd
in
inc
outsb
out
or
cmp
inc
aaa
xchg
mov
out
add
test
int3
cmp
gs
jnp
push
gs
sub
and
shll
cmp
packuswb
es
sub
jge
nop
cmpsb
sbb
push
xchg
daa
inc
pop
movsb
cmp
dec
jno
das
sarb
es
add
leave
xor
lcall
push
xchg
ret
push
test
adc
inc
int
cmp
push
in
jge
out
cltd
adc
jne
hlt
push
sbb
shrb
sbb
cli
ds
aam
movsl
xchg
jnp
sub
dec
icebp
aaa
orb
and
imul
xchg
clc
jb
pop
mov
cmpb
test
lcall
popa
fsubl
xor
outsb
inc
xchg
outsb
adc
int
cmpl
pop
mov
pop
ret
and
hlt
push
push
setns
testl
mull
lret
mov
cs
xchg
mov
xlat
mov
mov
xchg
test
js
addb
mov
pop
push
sbb
outsl
lea
adc
cmc
ss
ljmp
fdivrs
out
enter
je
xor
lock
and
or
mov
cmc
fstps
call
pop
and
add
aam
adc
pushf
iret
add
mov
mov
mov
cltd
xlat
fs
sub
inc
test
jge
psubq
shlb
loopne
in
dec
cmp
jb
gs
xor
les
cwtl
fs
sbb
sbb
dec
sub
iret
pop
fsin
rclb
jge
pushf
outsb
sbbb
repnz
cs
popa
jnp
and
cmp
outsl
hlt
out
jb
das
dec
dec
je
mov
jecxz
in
out
add
call
je
jl
mov
incb
xor
pop
fcomi
inc
xchg
pop
incb
iret
inc
popa
mov
sbb
mov
and
pop
lahf
ror
mov
testb
std
test
mov
cmpsl
inc
nop
or
outsl
dec
sar
lret
xlat
jae
mov
popa
hlt
mov
aam
lock
xlat
out
pop
lret
pop
and
inc
sub
xor
es
sub
rcrl
dec
in
outsl
icebp
xchg
xchg
jo
ljmp
cmp
aas
adc
pop
sub
mov
jg
imul
cmp
movb
push
push
pop
mov
clc
inc
xchg
pop
xchg
pop
sbb
jae
rcll
fstps
into
stos
mov
clc
xchg
insb
mov
push
mov
jecxz
xor
mov
jb
sti
xor
hlt
mov
xchg
loop
dec
sub
inc
test
cmc
sub
dec
imul
or
mov
push
xchg
add
adc
and
repnz
jl
popa
and
dec
scas
inc
in
jo
xchg
andl
mov
mov
addr16
jp
mov
mov
je
or
mov
jne
das
or
mov
jnp
xchg
stos
fucomi
enter
lret
sbbl
out
cmp
sub
int3
xor
add
jge
xchg
ficomps
xor
fbld
jle
fwait
add
sti
mov
pusha
out
iret
jbe
push
ret
jg
ljmp
jae
inc
sbb
popf
mov
lock
ljmp
xchg
enter
sti
push
imul
scas
outsl
cli
xchg
xchg
mov
jo
xchg
sub
hlt
stos
sbb
sarb
inc
jno
adc
mov
lcall
bound
addb
sub
pop
mov
fimuls
lds
dec
scas
or
cmp
loope
lcall
jbe
xlat
jge
stos
sbb
test
daa
inc
sub
xchg
jl
jno
hlt
test
dec
jo
les
and
push
xor
cmc
pop
jnp
fiaddl
and
test
daa
inc
pop
jg
cmpsb
fnstenv
or
ljmp
push
aad
loope
sti
sub
pop
fdivrl
sbb
ds
out
movsl
fstl
lcall
mov
cs
cmp
xor
ret
fidivrl
jmp
pop
stos
and
lcall
pop
fmull
xchg
xchg
xlat
outsb
test
call
shrb
rorl
mov
cmp
push
and
stos
dec
push
adc
lods
int
and
sub
and
lret
cmp
lds
sbb
sub
test
jno
outsl
bound
loop
inc
stc
es
fs
mov
jnp
fsubrl
out
xchg
adc
and
cli
mov
jnp
cmp
or
into
cld
jmp
sub
lods
mov
pop
inc
xchg
xchg
adc
fsubrl
loope
adc
push
xlat
add
mov
lods
adc
in
mov
repnz
mov
out
mov
call
jae
xchg
and
decl
loopne
sub
fiaddl
jmp
out
les
das
sub
fisubl
aas
xchg
int3
enter
pop
mov
xchg
push
jmp
pop
mov
repnz
sbb
cltd
and
nop
call
cmpb
push
inc
jb
mov
dec
jmp
icebp
je
xchg
icebp
jecxz
insb
cmp
repnz
lea
pop
call
xor
orl
mov
pop
mov
insb
mov
inc
out
subl
cs
mov
je
bound
cmp
testb
cwtl
loop
push
cmpsl
inc
and
mov
inc
and
cld
idiv
add
daa
add
mov
cmpsb
aaa
lock
testb
mov
inc
ljmp
icebp
enter
mov
lret
rcll
shlb
lods
mov
pop
out
mov
popa
pop
ret
mov
fsubp
dec
add
push
dec
test
sbb
mov
inc
popf
push
sbb
jg
clc
cmpl
inc
shrl
push
lahf
stos
jge
stos
out
fnstenv
in
push
xchg
xchg
xor
imulb
mov
adc
and
or
test
mov
mov
inc
adc
mov
jns
cmp
sub
pop
add
fdivl
hlt
lods
dec
jns
jmp
in
daa
lock
ror
lock
jae
mov
jno
xor
in
jp
leave
dec
mov
scas
test
mov
ffreep
dec
outsb
cmpl
mov
inc
add
shl
lock
addr16
sub
xchg
xchg
jb
and
adc
pop
xor
or
lock
xchg
outsb
stos
add
and
insb
sahf
sti
xchg
enter
fs
add
inc
iret
aad
fistpl
pop
jle
sbb
mov
inc
xchg
sahf
push
scas
push
popf
xlat
jne
mov
imul
mov
outsl
lea
pop
sar
scas
rorb
test
insl
js
mov
jmp
dec
outsb
hlt
imulb
ds
je
and
cs
lret
lahf
push
or
sbb
pop
add
adc
pop
mov
mulb
rclb
jmp
and
shlb
movsb
and
cvtps2pi
adc
and
jmp
daa
inc
jle
cmp
in
jno
frstor
dec
fbstp
lret
hlt
outsb
jo
std
lea
cmp
mov
sbb
push
sub
and
enter
pop
repz
jbe
roll
jno
sbb
imul
enter
paddsw
movsl
in
jmp
pusha
jns
or
sbb
or
iret
sti
xor
data16
jle
lods
pop
add
hlt
js
lret
jge
sub
xlat
push
aad
es
adc
sub
mov
or
mov
jg
icebp
cmp
movsb
pop
cmp
and
jmp
int
in
sub
adc
loop
fwait
lret
sub
pop
das
sub
nop
mov
test
or
loop
addr16
stc
fldl
add
jg
clc
pop
pop
ss
fisttpl
fmuls
pop
out
mov
cli
lock
mov
and
sbb
fists
popf
xor
pop
dec
pop
popa
ja
adc
repnz
subl
cli
out
mov
xlat
loop
or
mov
int3
xor
push
cmp
mov
jmp
push
enter
mov
dec
test
imul
and
lret
repz
sub
cmp
out
push
sub
daa
pop
aas
loop
adc
test
pushf
les
cmp
test
aam
or
inc
aas
lods
mov
jb
push
dec
imul
push
cmc
or
fucomi
jmp
sbb
je
jb
loop
in
dec
or
fistl
in
pop
inc
push
fiadds
mov
inc
int
das
fnstenv
xchg
mov
imul
imul
idivl
push
cmpsl
inc
cmp
mov
sbb
lock
xchg
pop
cmp
inc
lock
adc
shlb
add
ret
mov
scas
es
and
adc
xchg
dec
jecxz
ja
adc
gs
cmp
xchg
jge
mov
out
out
lods
lods
scas
xchg
add
ds
test
push
mov
enter
adc
clc
mov
mov
sbb
roll
icebp
into
pop
iret
add
inc
out
cmp
fistl
jno
xor
je
mov
or
push
or
xorl
push
mov
dec
stc
mov
mov
int
dec
push
mov
inc
test
pop
or
loopne
fwait
std
or
int
cmp
add
icebp
out
mov
or
insl
movsl
jns
lret
xor
in
xor
pop
jne
mov
fbld
sub
repnz
jp
mov
xor
int3
ds
push
test
jne
imul
fcomip
dec
pop
xchg
cmp
mov
xchg
pusha
push
xorl
out
popf
cld
sub
ret
push
sbb
stos
ja
xor
arpl
stos
insb
or
cmpsb
jnp
xchg
in
sub
pusha
xor
jmp
xor
out
ret
mov
inc
daa
dec
pop
jae
and
popf
pop
jns
jmp
xor
ficompl
push
rcrb
repz
scas
xor
sbb
adc
pop
mov
cmp
mov
popf
bound
inc
mov
arpl
pop
pop
inc
ja
rorl
mov
aaa
rclb
or
lcall
sahf
pusha
pop
jmp
jb
lds
fs
scas
enter
mov
lds
dec
jmp
icebp
pushf
pop
jge
mov
sti
fldt
cmp
add
mov
inc
dec
dec
repnz
push
ljmp
jo
scas
stos
lahf
sbb
push
jg
fstl
fwait
inc
jp
ret
push
nop
in
pop
pop
scas
enter
pop
xor
push
pusha
aam
mov
sub
ja
repz
mov
and
and
insb
out
add
mov
add
mov
xlat
inc
mov
adc
pop
test
std
lcall
fsubl
ret
and
pop
jmp
mov
lds
mov
fucompp
mov
add
and
xchg
sbb
int
mov
push
mov
shl
xor
mov
addl
and
aad
xchg
cmp
inc
jecxz
bound
adc
or
mov
pop
push
cli
and
xor
andb
mov
into
ret
cmc
jbe,pn
xor
outsb
pop
sbbb
and
je
mov
rcll
add
mov
lods
loope
push
mov
movb
xor
out
cmp
in
mov
out
mov
gs
sti
mov
in
stos
inc
stos
jne
fnstenv
jnp
sub
std
repz
pop
xchg
push
cs
or
imul
cmp
pop
repnz
adc
rorb
mov
mov
nop
mov
xor
jb
push
and
lret
xchg
je
pop
test
xabort
push
lea
mov
call
mov
enter
stc
cmpl
pop
fildl
or
negb
inc
jge
jp
mov
addr16
mov
idiv
pop
sarl
dec
iret
std
sahf
adc
cwtl
pop
pop
cmpsb
cmpsl
aas
aad
mov
hlt
cmp
push
lret
add
pop
loopne
add
lock
rolb
sub
push
sub
pop
inc
ret
inc
mov
adc
xchg
push
data16
insl
adc
lods
jns
add
ret
jmp
dec
loop
setl
cmc
add
sub
pop
test
out
fs
lea
fnstsw
mov
insl
xchg
aaa
push
rcll
mov
jnp
pop
xchg
mov
lahf
mov
xchg
push
dec
xor
adc
and
pop
or
xlat
mul
xor
pop
das
mov
sbb
ljmp
jmp
jne
aas
push
sub
lret
sub
xor
jo
pop
add
cmp
cwtl
into
bound
popa
nop
jns
push
in
nop
cmp
add
push
mov
out
pop
addr16
pop
fwait
jp
pop
push
mov
fldt
idivl
sti
dec
xor
cmpsb
jne
sbb
mov
mov
fisttps
scas
stos
xchg
or
scas
mov
addl
sbb
mov
movsl
inc
stos
ljmp
insb
je
scas
jnp
or
jle
rol
in
cld
shlb
lcall
xor
pop
pop
sub
inc
xor
inc
jae
clc
fistl
xor
cmp
es
sahf
inc
addr16
sbb
movsl
imul
aaa
fsub
scas
cwtl
xchg
jae
jl
and
repnz
sahf
mov
hlt
mov
pop
arpl
leave
add
jp
pop
or
and
jbe
xchg
xchg
rorb
popa
cmp
adc
pop
sbb
and
cmp
mov
scas
cmpsl
dec
or
pop
outsb
cmp
movsb
cmp
movsl
jbe
lcall
mov
mull
aas
mov
cmp
rcrl
jl
scas
and
lock
int
cmp
sub
jo
jbe
lahf
aaa
jno
push
loop
pushf
test
ds
lcall
cmpps
dec
cmpsb
enter
pop
jno
lcall
lock
sub
or
cmp
pop
xchg
ds
aad
movsl
repnz
and
xchg
mov
jge
out
add
testl
add
stos
pop
dec
sbb
js
jae
pop
daa
lcall
sti
fmull
ljmp
push
clc
outsb
shll
mov
cmp
jg
cmp
mov
fdivrs
xchg
fnsave
imul
xchg
adc
sub
mov
movsl
lret
movsl
rorl
xor
inc
mov
mov
icebp
jnp
outsl
jmp
or
arpl
stc
dec
adc
xchg
repnz
movsl
fwait
repnz
les
out
test
cli
push
xor
xor
int
or
pushw
into
movsl
dec
dec
cmc
cmc
pop
int
mov
inc
arpl
testl
out
dec
push
mov
iret
mov
js
xlat
pusha
cmp
mov
add
ret
jno
fdivr
std
fisubs
push
loopne
jg
dec
inc
jecxz
inc
mov
xchg
les
in
outsb
repz
cmp
aam
mov
loop
es
mov
xchg
adc
jns
xor
sbb
sub
dec
ljmp
nop
movsl
add
jmp
push
jb
je
dec
push
pop
in
xor
sti
jmp
icebp
call
jo
sbb
adc
dec
fistps
fldt
cmc
mov
jge
cmp
movl
mov
adc
lods
notb
into
std
inc
dec
inc
cwtl
adc
or
lret
cmpb
je
adc
jae
lock
cltd
pop
inc
out
rorb
xchg
xchg
or
and
ret
sarb
push
insl
loop
sbb
push
pop
xchg
nop
adc
inc
dec
lods
in
std
mov
out
mov
jecxz
orb
out
xchg
add
mov
sbb
lret
test
loope
fistl
rcr
bound
stc
xchg
fistps
mov
rcl
scas
fwait
mov
and
int
out
add
cmpsb
xchg
mov
inc
push
daa
movsb
stc
pushl
xor
or
inc
xor
rcrl
mov
sbb
mov
into
adc
and
and
mov
inc
lcall
cmp
out
adc
in
lcall
nop
add
or
outsb
sub
bound
jns
in
inc
enter
iret
mov
adc
mov
mov
pop
pop
jp
mov
mov
daa
mov
mov
mov
pop
iret
lods
jne
xor
ljmp
xchg
loopne
fucomi
movsb
jp
xchg
notb
adcl
sub
mov
testb
pop
adc
and
dec
push
jnp
dec
xor
in
xor
pusha
push
jle
bnd
ret
fistpl
or
inc
cmp
adc
notl
movsl
mov
out
mov
xchg
and
sbbb
lret
imul
insb
scas
sti
repz
mov
and
mov
xlat
insl
leave
mov
hlt
xlat
dec
jne
push
shrb
jge
insl
or
lahf
mov
cmpsl
or
add
adc
cmp
inc
rol
mov
inc
scas
xchg
pop
and
insb
mov
mov
push
mov
dec
jbe
or
sbb
mov
daa
ds
lds
pop
push
data16
outsl
out
or
mov
push
mov
xchg
xor
popa
push
ret
pushf
sbb
sbb
test
or
mov
cwtl
loope
cmpsb
in
jmp
enter
pop
mov
add
mov
mov
cmp
lea
js,pt
cli
movsl
stc
cmc
aam
xor
dec
sub
sbbl
pop
faddl
mov
mov
pop
jbe
push
js
movsl
sbb
cmpsb
shl
lcall
in
cli
fimuls
sub
push
outsb
xor
mov
rclb
mov
mov
mov
xor
push
push
dec
dec
int
andl
pop
lret
mov
pop
and
sti
mov
push
sahf
in
and
or
fsubrl
mov
loop
stc
add
xlat
adc
inc
addr16
pushf
mov
jg
sub
sbb
loop
xor
or
into
mov
cmc
mov
mov
lods
adc
jp
imul
and
es
lods
scas
cltd
mov
xlat
lahf
iret
sub
sbb
in
xchg
inc
xor
and
and
jo
sbb
loopne
sbb
dec
mov
rcl
fabs
mov
les
iret
repz
jns
xchg
fadds
ficomps
jg
mov
pop
std
fsts
shlb
mov
lods
gs
fldl
nop
imul
jb
enter
mov
je
jo
jecxz
xor
incb
push
mov
cmpsl
jno
dec
stos
xchg
andl
jl
pop
sub
jecxz
inc
mov
int
jbe
add
mov
or
pop
rcrl
mov
std
in
push
stos
cmpsl
cmp
sbb
icebp
mov
lret
jecxz
ret
jno
mov
aad
lock
test
pop
xchg
cmp
push
sahf
shrl
jle
mov
ret
pop
cmpsl
jecxz
insl
leave
mov
dec
aam
or
push
and
lods
dec
push
xchg
mov
or
inc
and
jle
dec
cvtps2pd
mov
test
loop
push
sub
jge
mov
xchg
sbb
sarl
add
stos
cmp
hlt
out
lea
iret
nop
and
sub
push
pop
mov
or
mov
xor
lcall
pop
aaa
jb
cs
and
dec
sub
sub
repz
mov
or
lcall
bound
fnstcw
inc
ss
dec
mov
mov
xor
mov
aam
pop
fsubr
addr16
fadd
jp
mov
xchg
mov
lahf
popf
xor
rcl
jne
lods
jmp
inc
jno
fisttps
mov
jmp
rorl
and
cmp
addr16
cmp
and
or
lret
rcrb
and
mov
jnp
push
mov
xor
jne
push
lret
add
mov
ret
je
std
mov
jle
push
push
mov
xor
gs
fidivl
outsl
clc
sbb
sbb
imul
ja
add
fldcw
and
xor
addl
cli
mov
or
sbb
js
inc
push
incb
jae
mov
mov
jbe
fidivrs
xchg
inc
loop
rol
scas
gs
and
push
cmp
je
add
sarl
mov
sub
add
cmp
lea
jl
xchg
inc
dec
fwait
cmp
xor
mov
lret
arpl
subb
xchg
xchg
inc
daa
movsb
push
cmpsb
push
into
or
pop
out
adc
push
negb
sub
stc
mov
test
fdivrl
fwait
lea
int3
lahf
mov
jmp
pop
add
outsl
cmpsl
xor
sbb
push
js
insb
in
and
mov
popa
fsubl
repnz
xchg
jp
adc
out
jne
jg
xchg
sub
stos
cwtl
mov
xorb
mov
fidivrs
and
sbb
and
test
popa
rorl
sub
mov
neg
das
lret
loopne
sarl
pop
sbb
stc
test
lret
andb
sbb
dec
dec
loop
add
pop
fs
int3
jno
xor
push
sub
cmp
cmp
pop
cli
mov
pushf
leave
cmp
sbb
into
imul
adcl
jae
jp
fstpl
mov
popf
sbb
mov
int
imul
test
lods
xchg
inc
mov
cwtl
insb
xlat
fsubp
stc
sub
gs
lcall
xchg
incb
std
and
dec
add
inc
in
push
les
shl
in
and
pop
test
and
sbbb
loope
daa
inc
jnp
jo
loopne
mov
mov
nop
inc
mov
or
dec
ds
scas
je
js
jecxz
adc
add
addr16
out
sub
add
ds
sub
or
movsb
movl
adc
das
push
add
mov
xchg
lea
shll
dec
mov
cwtl
mov
mov
jns
add
int
xor
push
data16
push
fwait
sub
imul
shl
lret
push
aam
ja
ret
out
test
sub
insl
mov
cmp
xchg
push
add
ljmp
stc
lods
mov
outsl
ja
sub
mov
sbb
inc
ud1
add
in
dec
cltd
xchg
test
mov
push
in
xchg
enter
test
jns
fs
sbb
sbb
pop
jnp
sub
enter
push
adcl
lock
cmp
enter
scas
mov
and
test
mov
ja
push
test
sbb
das
cmc
or
sbbb
pop
pop
incb
mov
hlt
out
sub
data16
jae
jns
mov
in
movsb
sub
int3
sbb
pop
pop
cmpsl
pop
sbb
outsl
jp
jge
mov
sub
js
cmp
dec
ffree
dec
jne
mov
fildll
xchg
xchg
hlt
jmp
mov
or
ljmp
or
and
stos
inc
popa
loopne
mov
cmc
and
daa
and
shl
and
add
ret
push
pop
xor
addr16
push
jmp
jae
adc
jge
push
popf
lcall
inc
in
data16
xchg
shlb
push
sbb
rol
imul
scas
shrl
adc
push
repnz
push
leave
jns
ja
insl
pop
icebp
arpl
mov
sub
or
xchg
adc
xor
cmp
or
pop
int3
stos
adc
fisubs
jmp
scas
rcr
aaa
scas
inc
adc
and
out
cmp
sub
fistpl
jbe
dec
ja
call
out
sub
cmp
pop
cmp
jns
jno
test
jl
inc
loope
or
xor
pop
inc
inc
lahf
xchg
fcoml
jbe
test
lahf
jo
inc
mov
cmpsb
jmp
xlat
in
mov
mov
pop
cs
cmp
sub
cs
cmp
push
mov
xchg
addr16
cmp
adc
xlat
add
test
add
dec
and
sub
leave
pop
movsb
aas
xor
mov
loop
push
loopne
sub
xchg
push
outsb
cli
lret
ljmp
sbb
inc
lret
es
inc
add
and
jge
push
mov
push
and
popa
int
or
sub
negl
data16
dec
jno
mov
cld
dec
sahf
sub
xchg
test
jne
addb
outsl
pushf
call
inc
stc
jo
xor
inc
adc
mov
int3
fdiv
mov
out
jp
cli
out
pusha
lret
inc
movsl
cmp
add
into
dec
cmp
loopne
into
mov
pop
cld
adc
jo
jbe
mov
pop
add
mov
sub
mov
mov
push
jnp
sbb
test
mov
push
lods
sti
jle
repz
data16
loopne
test
dec
pusha
mov
inc
idiv
fstp
dec
add
repz
sbb
cs
jo
cmc
mov
mov
call
negl
and
jae,pn
xor
imul
and
insl
aas
enter
mov
insl
dec
mov
or
xchg
jecxz
xor
add
orl
push
in
xor
jp
aad
lds
sub
cmp
in
pop
jae
in
adc
or
jmp
mov
cld
mov
and
shl
sbb
push
loop
std
cmp
cwtl
inc
outsb
loope
cmp
mov
push
and
lret
rcll
mov
lds
lock
cmpsb
rol
sub
push
test
ret
jge
add
lods
adc
insl
xchg
jmp
dec
xchg
dec
cmp
ljmp
lods
and
rclb
mov
sbb
sbb
add
or
cmp
push
push
scas
aam
fst
ljmp
jecxz
ret
sbb
shll
in
stos
pop
adc
xor
xchg
pop
mov
xchg
xor
test
mov
xchg
cwtl
mov
std
jg
dec
adc
xor
sti
mov
or
cld
loope
add
shl
lods
out
or
and
data16
test
dec
lret
mov
xchg
stos
mov
scas
mov
shl
pop
addr16
jo
jp
icebp
out
mov
loop
mov
jge
jmp
shlb
mov
jg
fisttps
out
psubsw
sub
or
insl
addl
test
decb
stos
mov
pop
and
push
sub
jnp
mov
jle
pop
jno
sub
cmp
dec
out
cvttps2pi
orb
inc
pop
and
jae
clc
adcl
shll
mov
arpl
jle
sub
sbb
pop
push
imul
lcall
ficomps
mov
fstpt
aad
mov
cmp
inc
xchg
aam
jbe
cltd
push
lea
mov
mov
shrl
aam
mov
lds
lods
shl
sbb
imul
sbb
mov
addr16
fcoml
imul
jge
push
pop
sbb
push
and
jno
inc
cmp
mov
lret
dec
jns
cmp
pop
or
cmpb
jo
push
loope
mov
ja
cs
push
push
imul
mov
in
mov
lods
enter
pop
insl
mov
push
mov
test
cmp
mov
loope,pt
mov
push
js
and
stos
mov
andb
lds
aaa
xchg
xor
mov
adc
inc
js
mov
pop
and
mov
fbld
fdivr
push
imul
cld
push
outsb
pop
adc
adc
movsl
shll
filds
xorb
clc
cmp
sbb
movsb
int
and
sub
add
pop
xchg
shl
jb
jo
jo
add
out
sahf
int
aam
push
mov
imull
mov
scas
mov
daa
shl
fs
add
rcl
dec
ss
mov
pop
lahf
xchg
fdivs
enter
mov
adc
cmp
mov
xor
cmc
adc
cwtl
xor
rclb
pop
sbb
imul
sub
scas
out
lods
fs
test
xlat
pop
sahf
or
mov
aad
xchg
sti
sub
sti
enter
out
or
dec
mov
loop
flds
subb
les
sbb
xor
test
insb
jno
aad
inc
pushf
out
mov
push
imull
push
push
aad
jnp
nop
cld
and
aas
addr16
outsl
jb
cli
mov
testl
ret
movb
adc
int
and
andl
out
dec
mov
jno
push
and
inc
cltd
xchg
sbb
lods
aas
das
adc
mov
jne
sub
lods
xchg
arpl
inc
lret
popa
jmp
fwait
cwtl
pushl
and
daa
hlt
cmp
sbb
dec
mov
cmp
pop
stos
gs
ret
mov
rclb
adc
dec
fxch
ret
or
arpl
xor
insl
jle
jbe
lds
xchg
mov
adc
popa
pop
and
mov
jb
gs
dec
sbb
add
sbb
cltd
hlt
cmp
inc
mov
stos
push
jb
outsl
stos
clc
push
and
xchg
push
sbb
mov
or
mov
mov
xchg
movsb
xchg
call
aaa
movsb
ljmp
inc
jmp
cli
in
sub
sub
mov
out
frstor
sub
or
movsb
and
ja
das
cmp
mov
push
or
mov
lahf
pop
or
sbb
sub
ljmp
jns
test
xchg
stc
add
mov
in
sahf
mov
mov
pop
addr16
mov
mov
cli
mov
jne
dec
mov
jne
mov
movsl
push
fildll
adc
jmp
and
sub
lock
adc
movsb
pusha
repz
cld
pop
bound
in
or
insb
mov
sahf
jnp
or
jle
xchg
and
in
lods
pusha
stos
adc
outsb
outsb
lock
stos
pop
mov
mov
jae
and
popf
call
mov
pop
fcmove
icebp
sbb
sbb
imul
cli
scas
xchg
mov
mov
cs
addr16
hlt
add
insb
inc
mov
mov
push
dec
subb
and
xchg
addb
push
cmp
addr16
lods
in
adc
scas
add
and
cmp
cmp
sbb
push
in
cmp
jbe
pop
adc
sbb
and
cmp
cmp
outsb
sti
jno
sub
dec
call
fs
xor
int
stos
lahf
shlb
push
add
rclb
ret
xorl
mov
in
jno
imul
lods
mov
loope
add
sub
adc
pop
ds
pop
movsl
adc
into
insl
cmpsb
aas
inc
cmpb
outsl
sbb
sbb
xor
repnz
rcll
adc
mov
lcall
mov
cmpsb
xor
outsb
rorb
dec
push
imul
jle
sub
in
and
and
adc
sub
mov
sub
dec
negl
jns
lret
pusha
sarl
mov
insl
sbb
mov
sahf
jo
pop
test
data16
outsl
pop
sub
loop
push
mov
out
cmc
aad
adc
cmp
ss
ljmp
imul
cli
push
scas
mov
jmp
inc
push
or
mov
adc
insl
cmc
fsubrs
insl
pop
cmp
xchg
adc
ss
jl
call
add
or
data16
lds
and
push
sub
pop
mov
in
inc
xchg
sub
fadd
arpl
lods
ljmp
mov
adc
mov
mov
repz
adc
xchg
in
mov
jl
sbb
imul
mov
movsb
pop
adc
iret
pushf
jno
shr
cwtl
add
cmp
dec
nop
xlat
jbe
aas
push
fdivs
sbb
fnstenv
enter
mov
or
lea
movsl
cmp
sbb
xor
jbe
pop
fistpl
shll
inc
and
mov
repnz
mov
sub
sub
push
pop
rcll
inc
std
mov
movsl
cwtl
mov
dec
les
ljmp
lahf
aaa
dec
mov
inc
xchg
lock
in
loop
jns
push
mov
aam
mov
fwait
add
es
push
insl
gs
rorl
jb
xchg
lret
cmp
dec
popa
push
xor
mov
xchg
mov
adc
mov
lds
push
dec
lods
mov
mov
dec
frstor
out
or
xor
test
popa
cmp
pop
jl
fs
cmc
gs
out
icebp
mov
ficoml
push
jecxz
int
hlt
xor
ja
mov
pop
mov
sub
xor
jnp
cmpsl
dec
imulb
inc
leave
or
shrl
pop
push
inc
ret
xchg
push
sub
xchg
bound
xchg
in
stos
xor
mov
test
bound
pop
dec
pop
sub
cltd
adc
jp
repz
stc
pushf
jg
pop
fwait
mov
jne
and
mov
cwtl
rclb
push
jmp
in
pusha
pop
sbbl
out
jbe,pt
mov
rclb
pushf
mov
das
insb
imulb
fistpll
std
cmp
cmp
mov
iret
int
xchg
cmpsb
mov
add
je
and
mov
lock
mov
and
jge
sbb
xlat
sub
sbb
ljmp
ljmp
adc
lret
movsl
xchg
repnz
aam
dec
jmp
arpl
adc
or
push
icebp
pop
aaa
or
inc
or
out
pushf
add
push
ljmp
daa
xor
or
shrb
scas
loope
and
mov
stc
push
cmp
ss
or
or
sbb
cmp
jno
xor
dec
inc
dec
push
sti
mov
pop
mov
xor
sub
dec
lahf
icebp
scas
into
push
aam
push
test
add
mov
cmpsb
je
sahf
in
pop
mov
enter
pop
jmp
aam
pop
in
mul
sub
mov
ds
outsb
xor
cmp
dec
popl
lretw
xchg
mov
xlat
dec
mov
into
inc
dec
xchg
hlt
repnz
cmp
add
dec
testb
inc
xor
push
lea
sub
adc
notb
pop
orl
mov
mov
mov
mov
hlt
jl
jge
dec
push
sub
add
neg
out
pusha
lret
push
rcll
mov
negb
pop
cmp
gs
adcb
jbe
aad
cmp
fs
adc
aaa
ss
mov
xchg
fsubs
push
movsl
out
lock
cli
mov
jns
rorb
cmp
test
or
les
cmc
lahf
jmp
xor
inc
or
or
adc
cmpsb
cwtl
imul
int
cmpsl
sub
test
mov
mov
fisubl
sub
jo
cmp
daa
sti
mov
dec
int
gs
loopne
aas
mov
jge
mov
inc
pop
fxtract
cmp
lret
mov
sbbl
and
inc
adc
push
jp
dec
js
cs
mov
aad
ljmp
movsl
inc
std
jb
je
dec
sbb
das
je
loope
jecxz
sub
divl
ret
mov
adc
sbbl
fstps
pop
pop
jae
inc
cmpsl
add
inc
cmp
dec
mov
jecxz
ret
and
jmp
shl
mulb
std
das
push
mov
cmpsl
cmp
repnz
aad
mov
lret
push
mov
mov
push
jno
jno
mov
aad
sbb
add
loopne
cmp
loopne
aam
mov
es
in
dec
loop
dec
mov
add
cmpsl
popa
xor
iret
in
pop
mov
and
test
test
push
sbb
bound
sbb
push
clc
push
clc
fisttpll
clc
xchg
dec
push
xchg
adc
in
dec
sarl
pop
xchg
stos
in
shr
lret
xor
push
dec
stc
mov
insb
mov
jae
sbb
or
jne
mov
loopne,pn
dec
xor
test
shlb
cmp
les
in
inc
pusha
cmp
inc
fwait
jne
popa
push
in
mov
and
sub
test
and
pop
mov
add
inc
push
cmp
xchg
dec
les
stc
sub
pop
add
jb
cwtl
sub
jp
adc
sub
inc
mov
lret
dec
imul
mov
call
repnz
outsb
mov
xchg
mov
clc
xchg
testb
cmpsb
cmp
push
jp
mov
and
loope
insb
popa
aas
inc
jnp
add
in
mov
adc
sub
adc
mov
lods
ret
repz
inc
or
mov
mov
mov
loopne
mov
xor
mov
sbb
lock
imul
aam
dec
orb
xchg
into
mov
aam
xchg
leave
push
cs
hlt
cltd
insl
inc
arpl
faddl
cltd
gs
xorl
cmp
or
push
into
pop
popa
mov
push
lret
jge
scas
shlb
aas
lret
mov
push
mov
jge
mov
sbb
imul
cmp
pusha
jns
cmovl
push
inc
push
add
pusha
xor
adcl
lahf
adc
imul
fsubrl
lret
sub
mul
jbe
aas
mov
enter
pop
sub
push
push
stos
ret
outsb
nop
sub
dec
sarl
imul
and
push
cmc
sarb
pop
cltd
js
repz
add
flds
xor
int3
popa
pop
pusha
mov
and
mov
push
fists
push
movsb
sub
enter
cltd
rcll
ss
jg
shll
shr
and
outsb
fiadds
xor
int
push
sub
negl
xchg
shrl
mov
sahf
mov
cmc
test
out
subb
fsub
push
fists
mov
add
loope
mov
pop
lret
mov
inc
leave
cmp
frstor
add
xchg
into
fiaddl
xor
lcall
mov
lahf
inc
adc
in
add
xchg
imul
or
mov
xchg
xlat
sbb
test
leave
jmp
push
mov
sti
cmp
repnz
add
out
je
dec
fsubl
sub
sub
les
inc
xchg
push
aad
lret
cmp
push
mov
das
pop
adc
mov
nop
jmp
sbb
cs
xchg
aad
aaa
lcall
lret
int3
jb
daa
mov
jecxz
pop
push
adc
cmpsl
call
test
scas
aaa
xorl
dec
jbe
clc
rcrl
pop
decl
addl
sub
das
mov
mov
lcall
shll
jae
imulb
mov
std
enter
std
in
aaa
cmp
xchg
icebp
lods
inc
xlat
cld
movsb
fistpl
lret
jge
sub
cmp
xor
das
rclb
mov
push
aam
loope
ret
mov
out
insl
xor
aas
dec
mov
stos
xchg
dec
push
sub
popa
dec
mov
mov
mov
cmpsl
mov
mov
xchg
cmp
push
pusha
add
inc
or
arpl
clc
iret
inc
push
xchg
and
xchg
adc
pop
sarb
stos
ror
push
out
mov
push
xchg
jns
or
clc
dec
decl
test
or
lods
mov
xor
imul
push
jg
fcoml
inc
negl
jno
cmpsl
jmp
jmp
mov
mov
out
add
or
bound
xchg
rclb
out
sub
mov
adc
addr16
enter
add
mov
xor
dec
dec
loopne
jne
ret
lea
filds
jo
xchg
movsl
mov
jmp
and
cmpl
out
leave
mov
xchg
cmp
push
mov
stc
sbb
xor
imull
push
jnp
movsl
dec
jle
lods
dec
in
xchg
jns
cmpsl
aas
inc
iret
mov
ret
jo
inc
push
aad
mov
jae
aaa
or
dec
popf
pop
xchg
incb
inc
pop
and
ret
test
aam
sbb
xchg
sub
push
stos
cmp
sti
sbb
adc
xchg
leave
int3
or
hlt
in
xor
ljmp
adc
stos
push
mov
insl
or
je
add
das
jg
inc
lds
nop
pop
repnz
add
jno
push
shlb
scas
lahf
push
inc
and
cwtl
scas
movsb
xchg
test
jae
dec
aam
jge
cwtl
sbb
sub
cmp
mov
add
cmp
and
je
push
in
pop
xor
fidivrs
lahf
das
cmp
push
jp
cmp
xchg
lods
mov
cmpsb
jp
xchg
in
rclb
imul
xchg
sub
cmpsb
fidivrs
sahf
cmp
ds
xchg
sub
outsb
mov
pop
mov
stos
sbb
mov
xor
sbb
jns
xchg
js
xor
cmp
cmp
fsubl
aas
inc
outsb
jmp
xor
adc
jg
or
pushf
mov
adc
adc
int
outsl
mov
mov
ror
push
nop
inc
roll
mov
imul
mov
pop
jns
test
jnp
leave
pop
jbe
imull
pusha
loop
or
stc
add
and
aad
push
std
inc
ss
lds
pushf
lahf
outsb
out
sub
out
push
xor
scas
cmp
out
or
fxch
mov
xchg
dec
xor
adc
adc
mov
out
lds
mov
lods
add
sub
pop
aas
jmp
cmp
popf
mov
addl
bound
xchg
jns
je
mov
mul
inc
push
jp
fldenv
xor
push
arpl
mov
fstp
sbb
sbb
enter
mov
cmp
and
push
mov
es
cs
call
sarl
jecxz
aaa
jb
mov
in
mov
mov
adc
call
push
es
or
xor
mov
pop
mov
sti
xor
shrb
in
fbld
push
std
test
xchg
xor
imulb
cmp
and
cwtl
jmp
cmpsl
ss
mov
andl
lret
in
in
pop
mov
ret
stc
mov
jno
lock
push
pop
aas
mov
push
sub
inc
xchg
aam
mov
ret
dec
mov
cmp
sub
cld
cs
mov
popf
xchg
mov
push
ljmp
jae
cmp
int3
mov
clc
scas
and
mov
or
jnp
rcrb
jb
pusha
mov
insb
push
push
jle
xor
lcall
xchg
sbb
or
data16
pop
jge
mov
out
sbb
fists
decl
sar
stos
dec
sbb
inc
out
or
mov
xor
dec
or
xor
cltd
dec
mov
xchg
ja
push
leave
dec
iret
clc
mov
or
inc
push
fwait
rcr
in
sub
lea
push
mov
out
dec
test
inc
adc
mul
pop
cmpsl
in
xchg
xor
push
pop
mov
jp
sub
call
mov
fsts
out
test
stc
dec
das
mov
ret
fbld
cli
xchg
js
movsl
jmp
dec
and
orl
out
mov
mov
nop
pop
sahf
push
clc
pop
subl
aaa
fmull
jle
icebp
or
dec
jmp
xor
ret
in
pop
jle
lods
inc
xchg
sub
ficoml
paddw
popf
test
mov
add
xchg
fsubrl
sbb
ja
imul
outsb
push
repnz
mov
mov
jp
out
leave
inc
mov
arpl
sub
or
ja
mov
dec
jmp
or
lds
int3
sub
test
mov
mov
fadd
jge
scas
jle
loope
dec
push
in
lods
or
movsb
push
shll
sub
out
jge
arpl
sbb
or
ss
jnp
outsl
xchg
rorb
push
mov
xor
cmp
xor
dec
imul
inc
adc
cmpsb
std
adc
in
or
push
rcll
test
jmp
mov
dec
loope
push
sarl
roll
movsl
xor
and
and
xor
sbb
add
jmp
adc
push
js
pop
rolb
sahf
in
cmp
push
xchg
ja
fcoml
xor
mov
mov
jo
in
fwait
add
mov
mov
cmp
clc
rolb
ss
mov
xor
add
notl
push
lods
rcr
xlat
mov
out
sbb
pop
cmp
cli
clc
mov
in
shrl
icebp
loop
insb
jnp
mov
shlb
pop
jo
ss
jns
fwait
leave
pop
fcoms
add
adc
mov
call
or
lds
cmc
hlt
stc
lcall
and
bound
or
jne
adc
arpl
add
ds
out
sub
xchg
icebp
push
sub
pop
mov
in
daa
inc
sti
cwtl
inc
push
cmp
or
push
cltd
mov
dec
lcall
fstps
repz
sbb
sbb
mov
pop
lock
adc
push
xchg
jmp
mov
cs
aad
pop
nop
inc
xchg
loopne
jb
mov
dec
jg
and
jecxz
test
push
mov
lea
sti
call
daa
dec
cld
mov
push
or
pop
int
dec
and
jmp
push
push
xor
adc
cmp
loope
mov
andb
rorl
shlb
hlt
divb
pop
lds
xor
pop
pop
icebp
pop
cs
cli
sub
lret
pop
mov
mov
repz
out
mov
shlb
out
aam
mov
xlat
outsb
imul
add
orl
enter
ljmp
inc
lods
cmpsl
cltd
adc
and
fistpll
mov
loope
push
inc
rsqrtps
rolb
mov
cltd
pop
lods
aas
test
xchg
mov
fsts
shll
inc
call
sbb
std
enter
adc
sub
stos
mov
fsubr
jge
inc
xchg
pop
adc
push
fidivl
iret
decl
mov
or
xlat
xor
mov
mov
aaa
dec
mov
cmp
ja
pop
xchg
dec
ret
inc
and
jns
fwait
add
roll
jb
adc
inc
jp
fcoms
xor
mov
clc
xchg
test
mov
outsb
mov
pop
xor
mov
cmp
mov
and
inc
mov
dec
adc
or
xchg
inc
mov
mov
xchg
dec
lret
dec
jmp
sbb
insb
out
and
sub
mov
stos
push
aaa
cld
stos
push
mov
insb
mov
xor
jle
sub
fnsave
mov
mov
mov
mov
out
pushw
rclb
dec
mov
pop
or
xchg
xor
or
stc
popa
imul
pusha
push
cmp
mov
push
enter
call
leave
mov
in
mov
inc
cwtl
pop
xor
repnz
testb
jmp
lods
pop
out
pop
ficoms
lds
iret
rcrb
add
fstpl
mov
and
push
js
popa
jbe
push
jge
adc
sbb
lock
xor
lahf
mov
mov
out
dec
adc
jge
stos
jbe
xor
xchg
sbbl
push
and
jmp
inc
lahf
dec
mov
in
hlt
test
enter
pop
out
dec
push
and
test
sbb
cld
sub
sbb
and
jp
xchg
push
sbb
jo
xor
jmp
popa
pop
aad
js
insl
mov
sbb
inc
push
jmp
cli
inc
sub
mov
adc
int3
bound
movsb
loop
inc
mov
or
and
push
cmp
sub
cltd
outsb
sub
in
pop
lret
fwait
shll
mov
add
sbb
fstpl
adcl
and
jno
xlat
lods
and
adc
es
adc
lock
push
rcrl
mov
xchg
or
mov
cmc
mov
sbb
pop
aad
notb
xor
inc
adc
and
add
arpl
lods
into
mov
cmp
daa
mov
and
add
push
push
movsb
sti
inc
roll
gs
add
loopne
stc
cmpsl
dec
stc
mov
aas
fnop
xor
movsl
mov
repz
xchg
xchg
mov
into
sbb
xchg
dec
mov
sbb
fistps
inc
mov
fisttps
loope
add
les
sub
cs
ja
nop
push
cmp
aas
and
jb
fsqrt
dec
negb
jmp
jecxz
addl
xchg
stc
call
out
cwtl
mov
xor
xor
addb
push
and
or
inc
cmpsb
pop
jb
dec
pop
lahf
mov
mov
mov
rcrl
andb
lret
jle
cwtl
popa
jp
cmpsl
xor
repz
xor
pop
cld
and
cmp
pushf
add
mov
lock
adc
rorb
xor
aam
ret
data16
inc
xchg
dec
cmpsl
add
fldl2e
pop
xor
adc
out
mov
mov
push
call
add
dec
aam
mov
adc
add
das
fucomp
inc
dec
clc
sbbb
sbb
popa
leave
pop
shl
lea
loopne
mov
dec
and
idiv
call
sbb
or
lret
push
jb
mov
cmp
int
xchg
test
or
enter
fs
mov
jg
fwait
xor
in
push
jno
in
add
leave
mov
and
inc
bound
mov
in
dec
fs
rcrl
mov
dec
sarl
addb
xchg
mov
jp
mov
mov
xchg
std
dec
cmc
vpcmpeqw
sub
sbb
xchg
push
es
dec
movsb
in
xchg
in
mov
out
add
or
je
stos
fcmovnb
dec
and
pop
insb
or
and
jle
push
loopne
pop
mov
dec
test
add
inc
fcomps
jmp
sbb
mov
push
xchg
sahf
in
rcrb
test
out
xchg
mov
sub
dec
out
jl
sub
fstps
adc
jle
and
leave
xor
lds
fiaddl
mov
or
insl
cltd
pop
aaa
cmp
add
jnp
int3
add
cmp
cmp
pushf
shlb
xchg
and
ja
sbb
ja
xor
rcll
mov
sub
movsb
inc
sbb
mov
push
jno
jl
jl
xchg
and
andb
mov
xor
out
and
mov
or
add
test
mull
adc
outsl
cmp
add
insl
in
fstpt
push
enter
pop
es
push
mov
loope
bnd
dec
stos
cltd
cmp
clc
lods
movsl
aas
incb
aas
dec
add
stos
insl
xor
fcmovbe
pop
add
dec
test
fnstcw
xchg
pop
cld
xchg
js
push
lcall
add
test
enter
jnp
adc
jbe
mov
clc
adc
xchg
or
mov
xor
and
xchg
push
int
les
mov
lret
inc
roll
jle
jecxz
dec
inc
dec
sahf
inc
xchg
cmpsb
test
lcall
xchg
push
jmp
mov
xlat
stc
sub
jne
sti
and
cmp
int
add
adc
cli
xchg
xor
orb
out
sahf
or
or
cmc
xor
xor
inc
rcll
or
les
fisttpl
adc
xor
inc
jns
lods
mov
dec
mov
inc
xlat
adc
mov
mov
sti
mulb
fdivr
jle
add
shll
loopne
pop
inc
dec
pop
cmp
flds
lret
mov
inc
repz
lret
xchg
jbe
adc
mov
int
faddp
fwait
out
ret
mov
adc
je
pushf
jae
dec
jmp
push
add
mov
rcl
mov
add
jns
dec
xor
mov
jecxz
shll
cli
xchg
outsl
call
movsl
push
cwtl
mov
ret
das
orl
pop
xchg
pop
mov
sub
dec
loop
inc
sarl
mov
jbe
pop
and
add
shrl
adc
ss
ja
jb
outsb
cwtl
sbb
mov
xor
mov
or
inc
lret
cmp
push
mov
and
pop
pushf
xor
pop
mov
and
faddl
es
insl
iret
push
pop
dec
mov
movsl
xchg
ljmp
pop
lods
jge
mov
mov
ret
mov
adc
test
xchg
jbe
mov
jle
push
xor
clc
mov
jns
sbb
int
imul
pop
jle
lret
addr16
inc
fistpl
xchg
fwait
lea
mov
xorb
test
or
xorl
add
cmp
in
test
ror
ja
insl
pop
dec
test
cwtl
inc
push
stc
fisttps
pop
ret
fwait
pusha
mov
test
test
lahf
out
add
mov
push
in
xchg
loope
and
or
cmp
mov
ja
addr16
pusha
cmpsl
jp
fidivl
pop
mov
mov
cmc
mov
jne
cmc
fwait
mov
fidivrl
xchg
icebp
mov
jmp
scas
fildl
test
sub
andl
stos
dec
sbb
insb
js
xchg
jnp
aam
jle
js
in
inc
pusha
adc
iret
pop
scas
loopne
sbb
test
inc
mov
int
xchg
mov
push
pop
sbb
push
mov
pop
std
pusha
fisubrl
neg
sbb
js
imul
scas
cmp
ss
push
popa
mov
jae
dec
test
push
adc
shlb
fiaddl
sahf
and
scas
jno
push
test
imul
in
or
dec
sub
jne
lds
jge
sbb
mov
add
cmp
aaa
aad
mov
insb
xorb
add
sbb
sbb
fsubs
xor
cmp
pop
das
jl
mov
enter
sysexit
mov
fiaddl
and
ret
inc
mov
cmp
push
enter
pop
gs
push
cmc
push
loope
insl
shrl
push
out
cmp
pop
ds
push
lea
rorb
mov
addr16
add
js
xor
iret
sub
mov
in
pop
sbb
lcall
fwait
pop
fcoml
push
xchg
int3
outsb
jne
jb
cmp
jge
int
xlat
dec
es
mov
mov
lods
arpl
inc
lret
jmp
dec
sub
test
rcrl
and
js
jae
in
dec
test
lods
cmpsb
outsl
jae
pop
loop
leave
or
fistps
dec
fs
adc
mov
cmp
mov
enter
popf
cli
mov
push
cmp
push
push
or
nop
ret
mov
xor
jnp
pop
adc
adc
aad
cmp
cltd
into
add
xchg
pop
movw
out
xlat
push
and
sub
ljmp
sub
ss
mov
push
loopne
into
xchg
pop
test
mov
add
dec
repz
xchg
int
cmp
iret
sbb
or
push
pop
or
dec
adc
pop
sub
out
mov
aad
xchg
add
pop
sahf
scas
jb
les
in
mov
jecxz
inc
push
pop
and
popa
inc
int
movsl
mov
mov
int
mov
cmp
dec
jecxz
xchg
fninit
sbbb
mov
shll
adc
or
push
mov
sub
sarl
fdivrl
idivb
aam
sbb
xlat
mov
cmpsl
xor
and
fistps
test
mov
jp
sbb
sahf
lock
mov
ret
sbb
push
ret
test
loopne
dec
insl
mov
inc
dec
popf
jg
xchg
test
popa
mov
xlat
jg
xor
imul
outsl
js
add
repz
lods
insl
pop
test
mov
push
mov
out
divb
sbb
pop
push
rol
imul
sub
or
cmpsb
mov
add
push
jge
es
mov
or
jae
xor
call
mov
fwait
lar
mov
inc
dec
fwait
nop
dec
inc
ljmp
fwait
cmp
push
mov
lret
jns
add
sub
ja
xchg
cmp
pop
mov
xchg
and
push
cmpb
add
xchg
nop
insl
jp
mov
mov
es
mov
dec
mov
mov
inc
fbld
ja
jmp
jp
jns
dec
cs
or
mov
or
push
hlt
lock
shll
insb
jecxz
adc
dec
insb
jle
shl
and
jmp
adc
ret
mov
inc
shr
jae
add
push
sbb
addr16
and
mov
fidivrl
imul
pop
mov
scas
lahf
pusha
jp
push
fsubrl
inc
fcmove
mov
pop
movsb
leave
pop
out
add
pop
pop
test
inc
mov
push
imulb
adcb
inc
xchg
sub
mov
or
int3
fsubrs
pop
pop
jnp
into
fidivrs
xor
adc
mov
jmp
stc
shll
xchg
mov
cmp
mov
push
gs
pop
jbe
mov
jge
jne
sbb
pop
cmp
pop
out
lret
popa
jmp
dec
pusha
mov
push
push
mov
xor
movsl
movsb
pop
lahf
lret
push
cltd
jo
test
lea
inc
dec
mov
cmpsb
or
enter
inc
enter
pop
movsb
and
jl
lret
sub
ror
cmp
cmpsb
ds
jmp
dec
push
mulb
jne
test
rorb
loope
dec
popf
and
and
stc
xor
jmp
pop
pop
dec
shrl
xchg
sbb
lcall
adc
xchg
fisubrs
jbe
js
fsubs
adc
pop
xlat
cmp
stos
push
mov
inc
adc
mov
sti
jno
out
and
int
sbb
sub
jno
notl
xchg
mov
adc
jne
xor
dec
mov
sahf
mov
mov
adcb
outsl
push
fildl
xchg
inc
jle
dec
or
adc
sub
test
inc
jmp
adc
mov
mov
add
pushf
mov
xchg
cmc
adc
ret
jns
adc
shrl
push
fwait
add
add
lods
orl
xlat
xchg
loop
sub
or
in
cwtl
stc
je
push
push
mov
les
and
push
les
fnstenv
ffreep
aas
xchg
lret
xchg
cld
xor
sbb
inc
push
aam
mov
mov
pushf
leave
les
roll
fldcw
push
mov
aad
cmp
nop
scas
aad
aas
cmp
jb
xchg
dec
pop
aam
je
jl
jecxz
or
sahf
enter
and
jle
mov
and
into
sub
fistl
mov
pop
rorl
pop
inc
idivl
push
das
ljmp
mov
nop
repnz
rorl
add
mov
cmp
cwtl
xchg
sub
xor
mov
mov
cmpsb
mov
sbb
inc
add
mov
loop
lock
push
mov
stos
rolb
sub
sub
out
aam
into
xlat
ret
adc
outsl
es
cmp
insl
popf
push
xchg
dec
cwtl
sbb
ret
out
ljmp
dec
lods
push
aas
pop
mov
lods
insl
fldenv
ret
bswap
pop
cld
add
clc
repz
jecxz
movsl
test
xor
push
dec
push
std
fstpl
mov
xchg
mov
cmc
rcrl
daa
dec
pop
aam
pop
stos
insl
pop
jp
or
loope
inc
xchg
cmp
lds
xor
lock
or
cs
mov
cmp
add
outsl
test
sbb
jae
arpl
clc
scas
inc
addl
fwait
mov
push
pop
add
jge
out
sar
bound
clc
jns
cltd
in
xor
xchg
rolb
lods
xchg
cltd
mov
and
dec
addr16
inc
xchg
jp
sbb
sub
push
jb
sahf
aas
movsl
jne
out
mov
jns
ffreep
call
test
das
adc
dec
adc
jae
mov
sub
ja
cld
push
xor
mov
and
adc
cmp
xchg
dec
in
outsb
ljmp
ja
ret
lock
xchg
xchg
mov
int3
push
jae
mov
push
fidivs
popf
inc
mov
out
inc
pop
add
ficoml
pop
sbb
dec
hlt
imul
scas
add
in
push
mov
adc
sub
repnz
and
cmpsb
sub
cmp
or
ficoms
add
fmull
stos
out
add
and
fisubs
adc
rolb
and
dec
cmp
xlat
movsb
aad
adcb
push
jbe
pop
push
jge
mov
sbb
lahf
shll
xor
fidivrs
hlt
pop
mov
jge
dec
iret
add
aaa
jp
xor
add
aad
insb
hlt
imulb
pop
xchg
push
inc
fstpt
cmpsb
mov
jbe
nop
rorl
jecxz
push
push
xchg
add
loope
mov
cmp
out
clc
movsl
push
cmp
adc
int
jecxz
adc
add
shr
xor
rcl
bound
jno
dec
js
into
adc
sbb
clc
lcall
mov
sub
insl
outsb
cmp
push
adc
xor
jg
or
mov
lcall
ja
push
inc
mov
les
popf
sub
not
sub
lret
mov
jecxz
sahf
sub
test
dec
mov
loop
pusha
outsl
stc
dec
adc
fsubrs
es
lahf
sub
addr16
out
xor
cli
and
in
js
and
addl
pcmpeqb
cmc
xlat
loope
xor
cltd
rclb
cmpl
adc
pusha
pushf
add
fisubrl
int
aaa
lods
push
push
mov
out
xlat
shrb
jg
out
in
mov
add
sti
add
push
gs
mul
push
hlt
stos
dec
jne
adc
notb
fldcw
sahf
repz
scas
aam
mov
jecxz,pn
jle
ffreep
sbb
pop
outsl
cmp
xor
pop
push
cs
mov
js
xor
popf
fucomi
jb
jg
dec
rcrb
je
je
jecxz
sbb
and
pop
add
fwait
push
push
mov
mov
mov
jge
mov
or
je
filds
dec
popf
inc
adc
das
leave
gs
mov
fwait
das
leave
and
push
popa
idiv
sbb
and
xor
mov
in
shl
mov
mov
in
jno
test
cmp
rcl
leave
cmpsb
sub
rolb
cmp
lods
inc
es
or
test
in
xchg
add
gs
lods
mov
jg
mov
fmuls
mov
sub
xor
cltd
sbb
mov
mov
cmc
cmpsb
push
adc
aaa
clc
insb
and
sbb
shll
dec
pop
jg
adc
pop
dec
scas
out
insb
push
lea
and
in
fs
js
cmp
push
or
lods
jnp
jg
inc
mov
inc
sbb
imul
daa
ja
imul
adc
push
fwait
in
jle
push
std
sbb
stc
loope
out
mov
push
in
sub
ja
popf
jp
xchg
cvtpi2ps
mov
inc
sbb
pop
addr16
jl
jp
dec
fwait
mov
adc
mov
inc
pusha
inc
dec
andl
enter
sub
fcoms
xchg
adc
pop
out
imulb
sub
jb
or
jge
stos
cmpsl
push
or
insb
mov
cmp
in
sbb
in
jl
and
xor
push
and
pop
enter
xlat
aas
mov
add
push
mov
faddp
mov
fmul
sbb
inc
xchg
xchg
out
cmc
sbb
in
insb
imul
popa
scas
gs
mov
adc
in
mov
insb
dec
cld
leave
or
dec
pop
arpl
sbb
or
pop
mov
mov
sahf
outsl
movb
cs
scas
in
xor
rcr
lds
push
and
scas
mov
push
jnp
imull
pop
movsb
pusha
mov
push
jbe
sarl
sbb
pop
inc
cmp
fs
jns
aas
jl
sbb
xor
sbb
xor
pop
jne
lahf
or
test
and
inc
push
int
mov
enter
pop
and
mov
loope
mov
sub
inc
iret
cmp
fidivrl
bound
in
pop
mov
pop
pop
mov
sbb
add
cli
cmp
adc
fimull
cwtl
stos
cmp
sbb
pop
cwtl
sub
push
pushf
add
push
js
sub
outsb
sahf
hlt
add
push
in
cmc
jg
outsb
hlt
mov
dec
mov
mov
adc
xchg
dec
push
and
pushf
add
sub
je
notl
test
shll
mov
dec
popf
sahf
into
shll
xchg
jg
adc
loop
cli
stc
add
push
arpl
push
ss
test
test
and
push
mov
dec
add
xchg
push
inc
or
push
into
repnz
cmc
sahf
mov
push
pop
jo
mov
imul
ret
scas
popa
ljmp
sub
out
inc
scas
xlat
adc
mov
popa
mov
mov
outsb
pop
cltd
sti
mov
insl
decb
scas
lods
gs
xor
mov
out
dec
aam
out
inc
fistl
movsb
mov
fsubr
inc
repz
ljmp
mov
add
and
adc
adc
jmp
lret
enter
repz
mov
nop
gs
popf
aas
cmp
aad
xchg
stos
sbb
je
shlb
imul
xchg
mov
call
mov
pop
arpl
movsb
ret
jo
pop
pop
pop
push
call
inc
sub
xor
mov
cmpsb
xor
testb
std
push
jle
cwtl
or
dec
cmpsl
das
movsl
enter
push
icebp
fs
es
cld
cld
xchg
lret
cmc
pop
xor
mov
xor
pop
sbb
imulb
add
mov
ret
xor
arpl
in
dec
mov
ljmp
mov
adc
repz
and
clc
fcmovnb
jl
lahf
dec
cltd
push
repnz
test
stc
ljmp
lock
cmpsl
mov
xchg
pop
sbb
leave
push
rol
or
sub
stos
dec
add
mov
xchg
push
cld
mov
fdivs
mov
pop
xor
adc
xchg
cli
dec
shr
in
push
mov
ja
les
dec
je
inc
inc
scas
pop
orl
dec
aam
mov
sbb
add
arpl
jg
imul
mov
inc
xchg
pop
push
in
mov
fs
mov
xchg
sbb
jp
das
cwtl
mov
js
mov
mov
movsb
dec
call
jne
push
sub
pushl
dec
xchg
cmp
aas
adcl
mov
xchg
adc
loopne
insl
dec
pop
push
mov
or
ljmp
jnp
inc
push
jle
test
pusha
jg
mov
ret
push
pop
inc
loop
out
shlb
push
mov
cmp
push
pop
jno
jnp
xchg
cmp
sbb
push
jmp
push
jecxz
xchg
adc
or
repnz
cmc
int3
hlt
cmp
lcall
addr16
push
addl
mov
cltd
mov
or
fisubrs
sbb
sarb
lcall
pop
lods
cmp
adc
push
jbe
push
add
fstpl
daa
das
movsb
fdivrl
pop
je
jno
dec
mov
dec
lods
imull
xor
mov
enter
add
cwtl
loop
jnp
imul
inc
cmpsb
xchg
ja
in
pop
aaa
test
lds
push
or
loope
ret
pop
inc
pop
cmp
bound
bound
loop
mov
mov
sbb
pop
test
aad
xor
arpl
outsb
lods
js
mull
or
cld
fdivr
cmpsb
sub
hlt
outsb
add
push
shr
xchg
mov
mov
popf
ljmp
mov
insl
push
dec
pop
int
lret
test
notl
mov
sar
stc
mov
sbb
pop
sahf
jno
addl
cmp
ss
mov
mov
out
adc
fbld
sub
aad
je
sub
push
test
cli
xchg
cmp
jg
jmp
daa
xchg
cmc
gs
pusha
xor
jle
in
adc
cmp
sbb
sti
add
xor
mov
aaa
test
push
inc
jg
aam
cmc
mov
sti
popa
sub
mov
loopne
imul
sbb
out
sub
aaa
fidivl
jae
sbb
hlt
mov
push
ud1
jo
adc
and
lret
jmp
push
and
jp
int
push
adcl
inc
and
jb
or
dec
rclb
loop
lahf
jecxz
std
push
sub
push
std
clc
adc
xchg
dec
pop
mov
mov
mov
lds
dec
push
fistpl
das
roll
xchg
inc
dec
fldenv
das
xchg
into
mov
or
xor
sar
lds
std
mov
xor
cs
mov
cmp
das
cld
daa
fs
out
lcall
arpl
pop
aaa
cwtl
mov
sub
pop
mov
shll
insl
es
add
push
add
xchg
subb
ljmp
loopne
xchg
insl
adc
push
mov
mov
jmp
inc
add
inc
dec
cltd
mov
test
divb
xchg
scas
fst
and
push
xchg
nop
sbb
imul
aad
int
cmp
xor
xchg
xchg
clc
dec
push
xlat
jno
jmp
cltd
cld
or
mov
dec
cs
dec
aaa
movsl
int
rcrb
ja
movsb
mov
inc
inc
cmp
ljmp
push
inc
inc
pusha
add
das
out
out
pop
push
mov
in
or
lods
enter
clc
or
push
cmc
push
mov
jp
cmpsl
mov
add
mov
and
cwtl
jne
mov
mov
push
fstpt
xchg
adc
fstl
dec
imul
lods
push
decb
push
sbb
stos
lea
and
mov
outsl
xor
mov
push
in
mov
xor
loop
and
ja
leave
pop
ss
mov
scas
jae
iret
int
daa
arpl
mov
out
fisubrl
loop,pn
xchg
add
imul
into
scas
sub
push
sub
lret
mov
adc
xor
xchg
daa
inc
lods
mov
push
inc
subl
int3
test
or
mov
fimuls
and
lds
cmc
in
rclb
scas
jbe
out
loop
in
cmp
lahf
movsb
jbe
jmp
jbe
mov
jge
and
daa
lds
jno
dec
sbb
pusha
push
loopne
sbb
adc
cwtl
push
in
add
mov
ljmp
inc
dec
stc
enter
pop
mov
rol
loope
icebp
cmp
push
sub
ds
sbb
loope
or
sbb
sbb
sti
add
dec
int
mov
ds
mull
adc
pop
xchg
or
mov
push
cmpsl
fsubrl
loop
outsb
fs
ret
mov
jno
repnz
pop
mov
and
mov
aad
cmp
or
int
js
sub
cmpsb
testl
lea
mov
sbbl
ficompl
xor
cmpb
loop
leave
leave
stc
jb
sub
popa
adc
lcall
shl
loopne
das
sbb
cli
mov
pop
mov
or
iret
into
mov
push
fs
dec
jle
scas
adc
imul
cmpb
push
jle
lods
pop
pop
push
mov
mov
into
sub
jle
mov
cmp
inc
or
sti
adc
fs
mov
out
dec
dec
xchg
jge
inc
add
push
leave
push
repnz
repz
push
notb
push
mov
pop
xchg
mov
and
inc
out
pushf
jne
mov
aad
mov
inc
aas
jp
in
cmp
inc
dec
aaa
ret
sub
aad
cs
lea
call
pop
repz
mov
jb
pop
ret
jp
jnp
into
lahf
mov
inc
je
adc
xor
das
data16
mov
mov
ljmp
pop
push
iret
cwtl
jle
loope
sub
sahf
mov
adc
cld
push
into
lret
shll
rcrl
mov
adc
mov
test
sub
and
mov
xlat
sub
push
decl
dec
imul
fldenv
lods
jmp
mov
cmp
ds
add
add
adc
xchg
test
jb
mov
iret
cltd
push
pop
add
ds
sbb
jb
sbb
jl
pop
cmpb
sub
mov
mov
sub
inc
sbb
xor
aad
xor
iret
popa
mov
dec
xlat
dec
sahf
inc
push
dec
cwtl
aas
ja
or
dec
pop
mov
in
aad
lcall
sbb
add
dec
xchg
bound
sarl
xor
in
push
mov
mov
add
mov
or
cmp
jp
adc
mov
mov
mov
adc
dec
sub
cmp
cmp
push
add
or
xchg
xchg
jno
jmp
out
mov
sub
arpl
push
das
mov
and
adc
insb
cli
sbb
jnp
adc
jle
inc
mov
pusha
mov
xchg
iret
inc
cmp
ret
push
pop
insl
mov
mov
push
ljmp
mov
push
cmp
das
outsb
xchg
jmp
and
lret
shrl
out
add
jno
dec
adc
int
repnz
jecxz
shrb
cmovbe
test
push
incl
faddl
jecxz
xor
pop
mov
scas
mov
lds
or
and
push
movsb
add
xchg
adc
das
jge
xchg
hlt
sbb
jbe
daa
sub
mov
jno
xchg
xchg
dec
dec
mov
inc
push
ret
mov
jne
insb
les
push
mov
cmpsb
loopne
test
testb
clc
cmpsb
cwtl
int3
in
sub
sbb
sbbl
mov
cmp
mov
cmp
ds
pop
movsl
jo
cmp
jns
and
pop
dec
add
jo
xor
stc
rcrb
mov
and
adc
sub
push
mov
subb
add
outsb
lock
jecxz
xor
lahf
and
jg
mov
mov
fucom
mov
sbb
and
or
push
push
iret
mov
rorl
jg
mov
scas
test
lahf
movsb
shrl
dec
mov
cmp
xchg
sbb
sahf
mov
cli
test
jge
outsl
lods
ljmp
sub
adc
and
in
pop
lock
ljmp
cli
in
cmp
xor
flds
sub
into
fwait
stos
insb
cmc
repz
xor
addl
inc
jnp
int
leave
imul
fildll
pop
nop
lcall
inc
loopne
loopne
inc
xlat
into
imul
in
scas
mov
and
jae
and
insb
loopne
subb
dec
icebp
cmc
jb
adc
jecxz
mov
push
std
pop
js
aad
cs
lret
loopne
sbb
push
pushf
adc
sbb
adc
aaa
push
jmp
scas
inc
cs
push
sbb
nop
idivb
out
jb
xor
xlat
or
scas
jecxz
icebp
ja
xor
repz
lret
sub
mov
mov
mov
dec
fsts
std
add
pop
add
inc
sti
push
cmp
das
inc
mov
mov
ja
dec
and
xchg
rcll
jecxz
std
add
cmpsl
sub
mov
pop
jo
icebp
jmp
adc
inc
or
push
mov
pop
cmp
pop
jne
rcl
and
sub
adc
ret
fisubs
mov
and
cwtl
dec
jg
jns
xchg
cli
ljmp
lods
push
dec
mov
pop
mov
and
leave
mov
pop
adc
add
push
fstpl
loopne
sbb
sbb
mov
and
clc
pop
ljmp
dec
pusha
ror
jmp
pop
sub
iret
out
clc
cli
pop
xchg
xchg
cmpsb
push
lea
push
jmp
or
test
pushf
or
in
mov
push
adc
dec
add
imul
dec
mov
call
mov
push
mov
sbb
gs
out
sbb
mov
jns
loop
in
in
repz
dec
ja
mov
jl
mov
enter
mov
mov
mov
mov
sub
xor
xlat
cwtl
lret
mov
in
fistps
xchg
mov
sbb
add
cmp
push
andl
cs
pop
cmp
push
outsb
cltd
stos
jae
sub
das
ret
gs
inc
jnp
and
in
mov
pusha
push
or
iret
mov
inc
sub
and
jae
dec
jns
lods
inc
xchg
popf
or
mov
aam
ficoml
inc
sbb
int3
aas
imul
jb
icebp
mov
adc
mov
mov
mov
and
jns
inc
mov
lcall
sbb
xchg
push
and
int3
pop
popa
pop
pop
xchg
jg
ficoms
lret
lds
and
rorb
mov
cmp
mov
movsb
mov
push
aas
mov
jp
xlat
dec
repnz
xchg
push
jno
jb
jl
out
dec
cli
dec
inc
push
cmpsb
jo
xor
movl
jp
mov
loop
dec
fstl
cmpsb
xor
cmpsb
sbb
leave
enter
pop
push
shrl
xor
loope
mov
bound
and
add
out
cltd
or
pop
cmc
or
fcoms
cmp
xchg
push
or
ljmp
jge
xchg
adc
pop
xchg
imull
push
clc
xor
faddl
sub
sub
in
outsb
sub
lahf
sarb
sub
mov
int3
pop
mov
or
fwait
cmp
push
ss
cmp
sub
out
testl
dec
mov
jp
pop
sub
test
and
mov
in
dec
push
ss
mov
nop
ss
cmpsb
xor
movsl
pop
or
or
xor
pop
xchg
lret
xor
repz
or
and
into
jle
fdiv
mov
lret
in
jne
adc
adc
add
daa
pop
pop
jne
lods
in
pop
aam
fildl
mov
mov
sbb
sti
outsb
xor
xchg
adc
gs
pop
nop
loopne
das
test
inc
daa
lahf
int3
fnstcw
cs
xchg
mov
sbb
sbb
movsl
aaa
in
xchg
push
fstpl
xorl
lret
xchg
es
sub
mov
dec
pop
nop
shll
aas
mov
pop
hlt
dec
and
cmp
xor
loopne
xor
jp
add
lds
arpl
adc
dec
fldt
jae
mov
into
std
inc
cltd
es
and
les
mov
loop
out
mov
std
stos
mov
stos
cmpsl
sub
sbb
shrb
cld
test
adc
mov
adc
xchg
lds
mov
xorl
xchg
imul
ljmp
xor
xchg
insl
nop
sbb
fstp
push
pop
mov
lahf
xchg
cmp
cmp
popa
pusha
in
lods
aad
mov
jg
pop
and
fs
invd
adc
cltd
sub
data16
mov
mov
push
fists
imul
shl
fistpl
sti
sbbl
iret
imul
xchg
xchg
int
daa
push
push
add
or
icebp
es
fstp
mov
push
xor
jg
inc
iret
test
in
pop
rorb
sub
inc
or
or
clc
stos
fcoms
push
sub
pop
add
addb
out
sti
cmc
inc
bound
ss
in
fstpt
mov
insl
sub
cmp
mov
jp
les
mov
xor
push
adc
test
out
stos
jne
sbb
mov
xor
jnp
mov
jmp
pop
mov
xorl
sub
popf
sbb
sub
pop
mov
push
lods
loop
stos
out
jge
inc
xchg
shrl
jnp
icebp
cmp
test
cli
in
pop
cmp
iret
pushl
fs
jae
fldt
inc
push
push
je
or
add
jo
mov
xor
icebp
mov
push
jno
fiaddl
inc
xchg
cltd
jmp
mov
scas
push
pop
cld
push
push
int
aas
popa
cmp
or
jmp
arpl
jnp
inc
mov
dec
or
shlb
jge
inc
or
or
adc
xor
pop
les
scas
fdivp
ret
lds
shlb
andb
and
cmp
sub
push
mov
jbe
mov
jge
loopne
sbb
xor
sub
cmp
mov
stos
jl
stos
xor
imul
add
and
lahf
mov
dec
cmp
push
ret
sbb
inc
xor
icebp
pop
in
cli
shlb
ja
and
pop
jle
push
pusha
mov
imul
or
cmp
aam
adc
pop
and
xchg
sub
leave
or
and
or
inc
std
and
arpl
cmp
pop
adc
hlt
push
dec
loope
stos
test
mov
adc
push
add
iret
pushf
lea
ficomps
mov
push
mov
dec
outsb
movsl
push
push
adc
int
fadd
sub
adc
dec
andl
push
push
mov
movsl
lret
sbb
lret
std
push
cmp
imul
stc
xchg
pop
push
sbb
adc
in
xor
loope
mov
fsubs
xchg
out
enter
mov
mov
or
jmp
cmc
addl
pop
or
shrb
fisttpl
insl
xchg
insl
add
mov
lods
aam
popa
mov
stos
xlat
dec
mov
push
shr
icebp
in
test
sti
sbb
dec
dec
mov
inc
mov
scas
repnz
fdecstp
out
lcall
popa
adcb
sbb
cmp
mov
adc
pop
mov
add
sub
sbb
aad
mov
nop
lods
mov
mov
xor
out
sbb
test
aaa
xor
cltd
ljmp
pop
rcll
sbb
mov
fistpl
les
pop
incl
scas
roll
cmpsl
das
add
mov
in
mov
out
inc
notb
roll
scas
jp
sub
mov
xchg
inc
cmp
fwait
push
lret
and
cmp
iret
dec
loop
mov
mov
sub
dec
sub
jmp
cs
arpl
dec
jne
lea
fdiv
cmpsb
popa
ja
xchg
lods
inc
inc
jle
test
mov
and
call
packuswb
in
add
sbb
neg
outsb
mov
push
adc
xchg
pop
clc
into
inc
test
scas
hlt
dec
sarl
pop
pop
cmpl
popa
xchg
adc
and
add
push
xor
push
mov
lcall
mov
pop
lret
sarl
test
enter
dec
ljmp
daa
sub
inc
and
iret
lds
fiadds
sub
jns
das
push
xchg
jmp
sar
mov
sub
insb
sub
in
fwait
xor
lods
les
or
jne
add
fistps
fmulp
jmp
sarb
mov
sub
push
shl
in
orb
pop
mov
cmp
idivb
xchg
in
pop
pop
pusha
xchg
mov
ret
mov
adc
jmp
jae
ficomps
popf
pop
ja
mov
rclb
insb
out
lock
imul
into
scas
mov
scas
push
inc
xchg
mov
pop
cli
clc
leave
xlat
jp
hlt
mov
xor
sarl
dec
dec
iret
push
cmp
into
or
mov
int3
xor
mov
repz
xchg
ficoms
jecxz
rol
sub
cs
movsb
mov
and
mov
addr16
pop
inc
sbb
jno
cmp
xorb
jl
inc
inc
dec
fsubrs
pop
xor
jge
xchg
lahf
ret
push
xor
cmp
in
aaa
inc
les
in
loope
nop
enter
pop
pushf
mov
sub
adcb
cmp
mov
movsl
test
cmpsb
and
loop
xchg
xchg
adc
add
add
fcmovbe
xor
xchg
dec
add
or
cli
pop
pop
xchg
test
xchg
push
cmpsb
lahf
jge
push
cld
pop
sub
cmc
icebp
outsb
lock
mov
push
test
mov
inc
lret
clc
pop
mov
inc
mov
pop
test
int
push
or
cli
pop
int3
testl
or
fisttpl
lret
mov
das
stos
subb
dec
outsl
dec
mov
jb
dec
stc
dec
test
cmp
adc
jmp
outsl
insl
push
sbb
out
ficoml
cli
test
xor
aam
xchg
mov
daa
into
inc
pop
mov
dec
pop
and
xor
fwait
pop
sub
dec
adc
adc
dec
pop
adc
icebp
sbb
or
mov
lods
mov
popf
pop
xlat
mov
mov
lock
xor
int3
pop
mov
fdivrl
cmpsl
gs
loopne
insb
mov
ja
inc
dec
sbb
fldcw
enter
in
jp
adc
sbb
sbb
xchg
adc
pop
push
mov
mov
jmp
ja
imul
loop
imulb
lods
dec
adc
fs
outsb
xor
cmp
mov
add
test
sbb
cli
mov
incl
es
mov
stc
pop
jmp
icebp
clc
inc
iret
push
jo
negl
mov
and
into
mov
not
mov
mov
cmpsl
sub
inc
icebp
outsb
js
cld
popf
in
sahf
fimull
sbb
add
shlb
rcrb
movsl
fst
lret
ret
mov
fildll
stc
leave
dec
jo
repnz
mov
movsl
popa
mov
lods
stos
dec
int3
mov
lds
adc
lcall
add
out
cltd
fwait
inc
adc
stos
rclb
lock
fstl
push
ja
shrl
sbb
xchg
rcl
adc
jne
stos
in
or
and
xchg
pop
mov
push
push
sbb
mov
ret
or
and
xor
cmp
mov
pop
sarl
dec
cmp
or
mov
add
std
push
or
push
inc
push
jb
popl
mov
and
mov
mov
jns
int3
inc
in
mov
xchg
cmp
sub
ret
pop
stc
out
mov
jp
inc
sahf
mov
mov
xor
mov
xlat
jne
dec
lret
mov
adc
fistpll
jne
jmp
popf
cmp
pop
out
push
inc
sub
dec
pusha
dec
push
sub
or
je
call
jnp
loope
jle
das
and
stos
outsb
pusha
and
out
iret
mov
jp
pop
dec
sub
jae
mov
popf
jg
mov
inc
push
mov
fisubrl
mov
sbb
movsl
add
dec
cwtl
scas
sbb
push
lea
adc
test
mov
mov
stc
leave
dec
dec
pop
hlt
outsl
int3
arpl
mov
mov
icebp
fldcw
mov
adc
inc
fisubs
aas
adc
int3
sbb
aad
cmp
and
fsubl
scas
roll
jle
clc
sbb
movsb
sub
xlat
jnp
testb
jge
mov
jbe
sub
mov
jno
loope
jl
scas
add
inc
cmpb
dec
inc
in
xor
fadds
lahf
loope
sbb
add
stos
test
mov
sbb
cmpsb
movsb
out
in
enter
insl
aaa
fsts
fildl
loope
clc
jl
loope
insl
cmp
adc
push
jo
movsl
mov
and
pop
xchg
cmc
pushf
jne
jnp
sub
add
push
and
mov
rcl
pop
test
push
pop
adc
push
std
mov
add
adc
outsb
push
out
xor
or
addr16
cwtl
std
mov
iret
lods
mov
xor
mov
enter
loopne
push
pop
and
aaa
clc
sub
lret
test
out
popa
roll
sbb
in
sahf
inc
mov
loope
inc
out
outsl
sub
loop
fucomp
stc
add
jg
adc
es
fcom
jge
out
jo
cli
mov
dec
or
pop
fisttps
subl
cmc
psubusb
pop
dec
sub
adc
push
or
pop
inc
adc
lahf
addb
xchg
in
and
int3
pop
inc
xlat
lret
sub
push
imul
pop
inc
lret
pop
xchg
lcall
and
out
test
dec
insl
call
fs
mov
repz
pop
sbb
push
in
ret
cmp
adc
int
pushf
int3
lods
in
cmp
aad
sahf
ficoms
xchg
jo
jb
mov
mov
or
rorb
adc
cmp
cmp
mov
cld
adc
cmp
pop
orl
in
fstpt
sub
adc
daa
aam
sarl
push
std
ja
jae
sti
rcl
fwait
lods
notb
call
inc
cwtl
and
adc
icebp
inc
roll
lret
push
fisttpl
loope
popa
lock
icebp
bound
sub
lahf
inc
aam
push
pop
ret
sbb
ret
int3
std
insl
mov
xchg
jg
cli
cwtl
xchg
ljmp
mov
jne
mov
adc
into
mov
and
dec
sbbl
movsl
mov
sub
fnstsw
imul
repnz
shrl
adc
stos
aam
or
xchg
mov
inc
inc
lcall
xor
lds
mov
xor
jmp
adc
mov
ja
ja
mov
dec
sbb
shl
cmp
pop
pop
fwait
gs
push
adc
ljmp
cwtl
cmpsl
loope
dec
push
js
loope
cwtl
in
sahf
pop
xchg
xchg
mov
mov
loop
mov
bnd
adc
idivl
cmp
dec
cltd
and
jne
sti
push
mov
mov
cmc
xchg
add
jmp
push
jno
out
mov
movsb
or
mov
push
jne
aas
cmp
insb
adc
sarl
cld
jle
int
in
xchg
jecxz
mov
lds
jmp
and
jae
jle
push
mov
pop
mov
inc
rcrb
pushf
xchg
sahf
push
push
sbb
jmp
imul
cmp
fadds
shlb
mov
add
hlt
leave
hlt
dec
xor
arpl
roll
flds
jle
push
mov
pop
inc
add
push
sub
push
adc
fs
stc
mov
shl
js
mov
andb
lret
cld
cmp
outsb
and
jno
jbe
imul
cld
in
sbb
pop
sub
mov
dec
jl
out
sbb
mov
or
xor
pop
xor
xor
stos
lahf
add
push
xlat
mov
dec
push
jnp
cmp
cmc
or
daa
cvtdq2ps
scas
popa
iret
enter
pop
sbb
inc
push
inc
out
mov
pop
sub
inc
push
cmp
je
jp,pt
and
subl
orb
icebp
add
sbb
lea
mov
dec
pop
shlb
pop
nop
add
jle
push
sahf
and
lods
sbb
mov
mov
scas
adc
out
gs
sbb
inc
adc
aas
and
push
pusha
pop
mov
aam
add
lock
shl
movsb
and
xchg
test
mov
int
jge
in
out
xchg
test
sbbb
outsl
or
loop
push
pop
stc
mov
adc
ss
pop
fidivrs
xchg
sbb
cli
jmp
mov
cmp
iret
repnz
insl
cmc
mov
mov
outsb
or
imul
mov
cmp
push
inc
push
mov
add
add
mov
std
jae
sub
adc
incl
mov
jae
int3
mov
fstps
mov
repz
ret
loopne
sbb
xchg
cld
add
in
pop
mov
push
dec
jmp
jnp
cs
push
iret
aad
sub
cmp
xor
out
dec
add
mov
out
repnz
fistpll
movb
into
mov
push
mov
push
rorb
mov
cmp
pop
das
add
add
sub
sbb
mov
shll
pop
jb
pop
mov
std
inc
xor
loopne
aam
daa
or
icebp
sbb
cld
push
push
ret
shrl
mov
add
mov
adc
lock
or
adc
rolb
fsubrl
mov
out
ret
test
scas
dec
insl
mov
hlt
jecxz
cmp
ljmp
aad
adc
movsl
mov
pop
push
aaa
mov
test
cli
add
test
test
aas
adc
jmp
fucom
mov
xchg
sti
push
sbb
jle
sarl
cmp
adc
out
and
aam
add
sti
shll
and
or
loop
xor
jmp
mov
popa
inc
rorl
push
test
sub
imul
adc
or
sub
and
push
mov
dec
incl
in
ljmp
loop
inc
jns
icebp
shl
sbb
xchg
push
shlb
aam
pop
outsl
and
xchg
loopne
jb
pusha
mov
sub
bound
push
inc
jne
push
cmp
div
cld
xchg
aad
fucomp
aad
adc
mov
mov
inc
pop
in
test
add
insb
jl
push
jnp
loopne
jle
pop
xchg
in
aad
push
mov
jnp
xchg
cld
cli
add
inc
cmp
pop
push
jl
mov
scas
jnp
inc
dec
or
xchg
cmc
ret
int
je
lahf
push
push
scas
loopne
insl
push
sbb
or
push
push
sbb
cmp
mov
arpl
stc
inc
ret
or
lods
pop
xor
jns
mov
sub
jae
insl
mov
jl
sbb
fiadds
out
sbb
adc
scas
popa
cs
imul
xchg
inc
movsb
inc
sbbb
dec
inc
jbe
dec
je
sbb
push
sbb
adc
daa
sbb
cmp
inc
les
jl
add
and
cmp
mov
lahf
pop
int3
pop
push
stos
inc
cltd
test
inc
pop
inc
inc
jno
lahf
cmpsb
stos
stos
dec
in
xchg
scas
ror
arpl
lea
pop
fwait
scas
push
testb
mov
dec
cmp
sbb
or
mov
jg
mov
cmp
xor
dec
je
pop
notl
adc
psrlq
push
stos
rorl
fcoml
dec
sub
movsl
mov
rol
lods
push
jg
mov
je
mov
lret
jg
mov
push
arpl
pushf
sub
pop
testl
dec
shll
mov
sahf
mov
fadds
jns
pop
outsl
out
loop
test
stc
jae
cmp
hlt
adc
adc
ss
add
fmuls
out
sub
push
fisubrs
ficomps
cmp
sbb
into
in
push
mov
popf
std
wrmsr
inc
pop
test
adc
addr16
adc
mulb
mov
lahf
data16
lods
lods
jo
pop
mov
xchg
mov
dec
inc
xor
insb
pop
mov
in
xor
incb
mov
loopne
pop
loope
sub
inc
xchg
ret
push
les
and
lock
pop
or
popa
xor
cmp
lahf
mov
pop
insl
pop
out
adc
loope
jmp
and
aad
sbb
xchg
sar
cmp
push
lcall
xor
out
sub
and
call
pop
and
cmp
movsb
fistl
jno
pop
ror
cmp
and
loop
das
jg
cmp
mov
mov
mov
negb
lret
cmp
cmpsl
mov
mov
sbb
repz
mov
lret
fcoml
enter
jbe
outsl
outsb
adc
cmp
das
rclb
and
sub
fsts
es
add
rorb
iret
xchg
js
imul
shrl
leave
mov
sbb
and
imul
add
sbb
and
fidivs
scas
in
fisttpll
clc
mov
mov
sbb
not
jnp
pop
sub
rcll
xchg
xor
js
scas
fmuls
xor
dec
or
mov
dec
xor
outsl
nop
pop
test
jbe
ja
xor
dec
call
loope
push
sbb
loope
ret
into
je
pop
cmpsl
pop
adc
pop
pop
xchg
out
push
xchg
jns
jp
in
jo
xchg
and
ljmp
sub
push
jp
rolb
dec
jae
mov
cwtl
fiaddl
dec
pop
or
jne
test
mov
clc
mov
xchg
test
pusha
jmp
inc
mov
cld
dec
add
sub
mov
in
ljmp
sub
stos
and
lret
out
push
jnp
xchg
jle
jecxz
in
pop
mov
bnd
iret
mov
jns
xchg
inc
inc
sahf
mov
push
aas
leave
lds
jmp
sti
out
fcmovb
jmp
xchg
dec
xchg
dec
sbb
repnz
imul
fsts
mov
xchg
stos
daa
cwtl
leave
mov
ret
mov
arpl
push
inc
vmovq
daa
mov
aaa
cmp
pushf
or
xor
fsubl
pop
scas
cmp
fisubs
lea
shrb
outsb
and
inc
cmp
jmp
dec
jbe
cltd
fnstsw
sub
xchg
es
and
and
xchg
pusha
jl
jmp
dec
xchg
popf
clc
push
clc
movsl
aad
roll
imul
cmpsb
lahf
ds
cmp
push
jns
sub
loope
add
cmpsb
sub
filds
pop
cwtl
in
and
pop
test
sub
dec
or
ds
movsl
mov
decb
adc
add
mov
or
fcompl
leave
add
stos
adc
sub
sti
pcmpeqb
push
pop
dec
js
lret
sub
lcall
xchg
faddl
sub
stos
dec
sbb
out
lea
pushf
or
jg
fidivs
xor
pop
mov
dec
out
and
and
int
repz
sub
xor
pop
movsb
test
js
mov
dec
and
mov
outsb
lods
sahf
sub
and
xchg
aam
outsl
movb
mov
cmp
sarl
cmpsb
adc
xor
cmp
pop
adc
out
dec
push
cli
push
outsl
dec
xor
mov
into
sar
test
cmpsb
xor
add
xchg
sahf
inc
imul
mov
pop
data16
cmp
mov
xor
icebp
mov
pushf
out
mov
push
sub
loopne
fisttps
mov
inc
cltd
adcl
or
les
fcomi
jle
arpl
mov
lds
and
push
pushf
int
out
add
out
xor
test
nop
repz
inc
aas
jb
pop
jb
xchg
dec
out
pop
cltd
je
sub
movb
lea
inc
mov
cltd
hlt
mov
mov
dec
rcrb
fildl
sbbb
jle
lods
out
inc
cmp
shrl
pop
verr
js
shll
gs
pushf
enter
loopne
xchg
dec
xchg
cwtl
push
clc
xor
and
fbld
mov
sub
dec
sbb
xor
xchg
pop
pop
pop
dec
jle
shl
stc
out
cmpsb
gs
notb
inc
ret
xchg
mov
insl
jno
repz
pop
jbe
xchg
mov
sbb
cmp
push
mov
mov
push
push
push
and
push
rorb
mov
push
push
test
das
push
jno
mov
clc
cmc
dec
cmp
sub
out
pop
fsubrs
out
lods
into
dec
xchg
ja
pop
push
mov
mov
cmp
mov
or
xor
xor
jmp
push
xchg
aad
dec
sbb
addr16
dec
repnz
and
mov
cmp
aas
pop
add
and
out
xor
push
jns
cmpsl
mov
xchg
je
pop
mov
xchg
lahf
mov
in
andl
sti
jp
mov
jb
push
aam
mov
push
dec
inc
out
outsb
jne
pusha
les
xor
fadd
jmp
leave
xchg
jbe
mov
inc
out
cmp
sub
cmp
std
stos
cwtl
test
add
push
dec
insl
jnp
out
xchg
jle
pop
shl
push
repnz
lea
iret
cmp
and
pop
and
pextrw
jae
jmp
push
add
xor
dec
jo
fidivrl
pop
xchg
mov
mov
imul
scas
cmpsb
dec
stos
push
test
mov
add
std
je
leave
sub
hlt
sub
arpl
pop
ja
push
jnp
push
idivl
scas
add
dec
loopne
ficomps
faddp
les
dec
add
and
fwait
test
fdivs
jge
sbb
sbb
mov
pop
ret
mov
sub
dec
add
xor
inc
pop
mov
pop
out
push
push
cli
mov
enter
push
cmpsb
mov
leave
in
fs
aad
pop
adc
pop
xlat
rorl
cmc
in
pop
sub
mov
in
clc
xchg
jecxz
movsl
test
movsl
and
jno
leave
add
xchg
adc
or
cli
cmc
rcl
out
pop
inc
or
js
jno
pop
or
repnz
push
pop
stos
fsubrl
mov
adc
ja
sarb
xchg
mov
add
mov
sbb
out
push
imul
inc
test
jg
shl
aam
mov
inc
pop
sahf
iret
fcomps
subb
outsl
loop
sti
or
loope
ret
leave
pusha
adc
sahf
cmp
ret
out
lock
cli
test
cmp
daa
rorb
aas
je
into
mov
or
sub
nop
pop
lds
adc
adc
add
fiaddl
sarl
lods
ds
mov
stos
mov
push
fs
mov
pop
and
je
mov
loopne
arpl
dec
jmp
fists
xchg
les
or
dec
movsb
or
sbb
inc
mov
cmp
shll
std
pushf
js
sub
mov
mov
int3
sub
into
cmp
jb
out
clc
dec
xchg
pop
je
scas
or
dec
push
jb
add
int
jg
mov
rclb
negl
dec
mov
mov
pop
sbb
inc
xor
and
in
subl
inc
add
lahf
sbbb
and
lahf
std
cmp
jg
and
mov
mov
adc
lret
mov
das
int
std
push
sub
icebp
xor
in
sarb
out
mov
shrl
es
push
insl
pop
xor
dec
push
xchg
xchg
neg
cmp
mov
jg
add
lods
ret
mov
je
jg
sub
sbb
mov
mov
cltd
scas
sub
test
xchg
stc
mov
mov
push
xor
push
fstpl
sar
xor
xchg
sbb
pop
mov
pop
adcl
out
adc
fistl
gs
xor
rorb
fs
xor
out
mov
push
insb
dec
cmp
lds
in
addl
jle
fwait
and
push
mov
aam
add
ja
bound
ja
in
xchg
fcoms
adc
mov
mov
push
das
jp
pop
mov
subb
mov
std
dec
and
lahf
dec
mov
lahf
adc
xchg
dec
jae
jmp
xchg
mov
inc
out
pop
sub
ss
push
data16
stos
or
insb
mov
sbb
xor
int
cld
pusha
sub
lret
inc
inc
pop
pop
pop
jecxz
pop
aam
jae
in
loope
popf
inc
and
int3
push
icebp
xchg
cli
lahf
imul
add
scas
or
adc
fistpll
push
mulb
or
arpl
out
mov
dec
push
mov
and
add
hlt
int3
mov
mov
or
lock
jbe
add
arpl
and
xchg
or
subb
cwtl
addr16
out
push
sbb
or
and
cmpb
mov
imul
dec
jb
xchg
push
mov
dec
sub
jmp
sub
and
test
cmpsl
xchg
test
push
clc
mov
in
dec
in
mov
push
cld
and
push
sbb
push
dec
repz
test
clc
mov
pop
ds
cmp
movsl
scas
jle
and
mov
mov
sbb
loop
mov
or
xchg
iret
cltd
pop
insb
cltd
or
stos
xlat
pop
mov
lcall
pop
fcompl
fldcw
mov
xor
bound
loopne
push
lcall
mov
mov
mov
incl
and
mov
or
fcoml
mov
shll
mov
sahf
jb
addb
jl
outsl
test
call
fs
aam
jmp
lcall
push
out
fdivrs
cmp
add
mov
xor
jle
xchg
in
or
stos
jl
repnz
xor
mov
adc
aam
imul
je
data16
lods
and
lds
add
and
mov
jb
sti
out
mov
scas
fwait
int3
gs
push
loopne
add
dec
in
inc
mov
pop
jno
pusha
jbe
repz
fstl
pusha
inc
cmp
pop
mov
daa
adc
fs
jmp
mov
cs
dec
mov
test
outsl
or
jp
or
insb
mov
cmpsl
jecxz
loop
dec
push
lea
jge
stc
mov
ljmp
std
pop
fs
test
dec
je
mov
xorps
sbb
in
imul
cmpsl
and
cmp
rcrl
outsl
mulb
sub
loop
pop
cwtl
int3
xchg
cmpsl
and
or
js
mov
lret
sub
mov
fcomip
lock
and
mov
sub
sub
in
pop
es
sar
aas
pop
dec
dec
push
dec
mov
ljmp
imull
nop
xchg
mov
xor
int3
str
loop
in
mov
jmp
push
imul
cmp
jg
jo
imul
xchg
push
cmp
xchg
mov
push
pop
cs
inc
stos
jg
ret
xor
push
inc
dec
mov
ja
jp
outsl
test
mov
dec
cmp
mov
testl
lret
in
ja
dec
call
inc
ret
repnz
or
cwtl
mov
inc
adc
cmp
ljmp
je
bound
jge
jns
in
jnp
lods
pop
jmp
adc
mov
push
aas
push
mov
pop
orl
shrl
insb
mov
in
cmp
mov
jne
inc
out
adcl
xchg
and
jmp
pop
cmp
out
out
sub
xor
movsl
push
adc
xor
insb
sub
ds
jle
sub
aam
inc
pusha
ret
mov
call
pop
xchg
xchg
in
out
jae
xor
push
mov
push
mov
dec
in
fcmovu
in
fs
push
fsubl
sbb
mov
imul
scas
insb
stos
ds
aaa
jge
adc
rcrb
mov
mov
mov
hlt
shr
arpl
out
or
cwtl
mov
or
pop
cwtl
add
mov
sbbl
jge
or
clc
push
sarb
scas
or
and
imulb
movsb
outsl
sbb
push
push
jno
jbe
inc
call
sbb
or
cmp
mov
dec
loope
mov
xor
cli
fistps
fwait
adc
test
jb
xor
mov
cwtl
in
xor
bswap
dec
jns
pop
push
clc
punpckhdq
int3
and
aas
hlt
sub
mov
cmp
cmpl
fnstenv
sbb
mov
aam
in
mov
sbb
clc
xchg
xor
sub
pop
xchg
or
js
jp
pop
or
rcrb
pop
adc
outsl
or
ja
adc
adc
sub
jmp
dec
mov
shrb
xchg
roll
outsl
cmp
int
mov
sub
cld
testl
rorl
lds
xor
sahf
adc
mov
and
push
outsl
arpl
das
stc
dec
movsb
pop
fs
mov
cmp
ss
jb
cmp
cmp
mov
add
and
ljmp
cmp
test
sbb
outsb
add
mov
rclb
add
mov
or
mov
lds
repz
xrelease
and
sub
xchg
out
mov
fsubrp
fisttpll
or
shll
fcoms
loopne
mov
xor
xor
fldcw
cmp
xchg
imul
cmp
cmc
out
cmp
lret
pushf
into
aaa
mov
cs
jp
aad
lret
test
aas
dec
dec
jae
int
mov
je
jl
jecxz
cmpsb
mov
dec
inc
pop
rorl
ja
push
mov
sbb
adcl
aaa
pop
pop
jnp
inc
inc
mov
add
sti
add
lods
mov
mov
scas
shrl
xchg
xchg
lods
mov
dec
call
mov
cwtl
mov
repz
int
lock
and
pop
stos
mov
into
sub
int3
lret
mov
es
insl
es
dec
dec
dec
mov
je
push
das
mov
lods
cwtl
scas
icebp
mov
mov
jmp
mov
pop
scas
lds
mull
test
add
mov
sbb
clc
cmpsb
fcomp
xchg
sbbl
lret
xor
out
pop
fxch
add
outsb
out
push
rcll
sbb
cmp
xor
test
or
stos
xor
mov
jo
movsl
dec
or
movsl
test
fs
ja
pop
xor
lret
outsl
pop
inc
pop
les
or
test
fwait
jg
mov
out
std
add
jae
shlb
vcvtps2udq
add
mov
mov
inc
sbb
push
dec
and
mov
jp
mov
mov
mov
mov
push
dec
cmp
dec
inc
jne
dec
or
xchg
or
xchg
hlt
inc
aaa
jmp
sub
dec
cmpl
cmp
sub
sub
dec
push
in
stos
icebp
insb
pop
and
sub
jnp
les
jecxz
je
fistl
insl
iret
push
push
fwait
ret
negb
push
xchg
jo
push
mov
jae
nop
js
mov
lret
ficoml
cmp
sbb
icebp
subb
popa
scas
iret
popa
push
jle
pop
adc
testl
notb
hlt
or
inc
sarl
or
adc
sbb
xor
adc
call
cmc
int3
mov
add
imul
scas
and
lds
push
scas
ljmp
cmp
je
movsb
cli
iret
notb
mov
jnp
pop
inc
push
sbb
ja
daa
and
jno
iret
dec
jl
shll
push
test
push
xor
push
ljmp
leave
or
stos
push
cmp
xchg
aad
cmp
pop
enter
pop
xchg
pop
add
loope
push
mov
inc
mov
stc
pusha
stc
ds
imul
push
scas
and
inc
stc
addb
sub
mov
mov
dec
sbb
jb
mov
fsubrl
lcall
lock
fstp
outsb
or
rorb
inc
sbb
test
mov
inc
or
or
aaa
and
int
push
jb
mov
sub
dec
and
add
push
lret
shll
inc
sbb
outsb
aaa
test
jne
outsl
inc
cmp
stc
push
push
fs
jb
adc
mov
cmp
repz
sbb
jbe
cmp
repnz
or
aam
xorb
xor
stc
pop
and
adc
fnstcw
imul
push
jp
cmpsb
lods
repz
lcall
and
stos
mov
mov
dec
shlb
push
hlt
inc
mov
sub
inc
dec
push
sub
in
sbb
in
je
jbe
cmp
mov
mov
adc
repz
mov
dec
adc
pushf
jns
mov
adcl
popa
aas
out
and
jb
pop
out
lret
or
je
pusha
lret
jecxz
scas
addr16
push
mov
shl
divb
loope
leave
subl
fwait
fildl
ficoml
add
out
inc
enter
cmpsl
xchg
ss
fimull
xor
push
xchg
ja
inc
stos
sar
push
call
std
xor
pop
cwtl
inc
addr16
and
mov
mov
repnz
es
push
cld
push
jg
lret
pop
rorb
mov
pop
inc
lock
ficompl
lret
shlb
imul
aam
pop
sbb
add
es
orl
dec
push
xchg
mov
ljmpw
inc
sti
xchg
pop
cmp
inc
fwait
mov
mov
ljmp
pop
push
jge
mov
int
adc
loope
and
leave
adc
sbb
mov
mov
cmpsl
pop
test
lock
pop
dec
or
xchg
xchg
mov
pushl
xchg
xor
leave
test
in
mov
jae
cmpsl
dec
jb
shrl
arpl
mov
inc
icebp
mov
out
scas
lods
sbbl
dec
add
jl
bound
jns
rcrl
mov
or
cli
sbb
shrl
jp
jo
mov
ljmp
ret
int
dec
into
std
add
mov
scas
jge
mov
hlt
xchg
jnp
jmp
cmc
sub
or
out
bound
sub
daa
xor
stos
imul
sub
xor
jo
pushf
ds
jle
leave
mov
loop
dec
pusha
stc
dec
pop
iret
mov
rol
outsb
pop
cmp
lds
jae
mov
push
cmpl
cli
dec
mov
dec
push
fiaddl
movsl
xchg
inc
sbb
imul
pop
scas
xor
stos
push
lds
adc
xor
mov
dec
mov
leave
push
cli
jle
push
mov
arpl
sub
or
mov
aaa
repz
or
aad
add
adc
int3
jae
out
lcall
lds
xchg
xchg
shlb
and
and
mov
imul
cld
push
jge
mov
ds
and
cmp
pop
jno
cmp
jl
fbstp
mov
or
mov
fnsave
or
push
pushf
shrl
std
mov
stc
inc
lret
ret
sbb
add
add
inc
das
mov
push
out
data16
and
cmp
icebp
mov
and
lods
lahf
in
addr16
adcb
adc
out
cmp
xor
fstps
fidivrs
je
loope
cmpb
cmp
lcall
inc
fcompl
mov
push
sub
outsb
imul
shl
add
push
mov
jno
mov
frstor
in
cltd
push
jne
test
push
and
test
dec
dec
sarl
mov
es
ss
sahf
pop
xor
or
mov
and
loop
pop
mov
mov
adc
inc
aaa
ss
ds
scas
xchg
sub
cli
push
rol
xor
out
cmp
xor
or
jns
into
aas
rcrb
cmc
inc
into
xor
imul
sub
imul
xor
data16
test
cmp
ret
sub
mov
mov
mov
lret
sti
repz
gs
mov
dec
rcrb
inc
clc
push
cli
fstps
rol
mov
xchg
xchg
out
cmpl
cs
dec
or
and
cwtl
test
stos
nop
lcall
es
mov
call
fldenv
jb
xchg
adc
shl
je
cwtl
mov
dec
cli
aas
push
dec
lea
mov
xchg
ret
dec
imul
inc
dec
in
inc
ret
das
mov
shr
mov
lret
pusha
adc
dec
out
or
das
mov
std
xlat
adc
cwtl
std
mov
cmpsl
and
mov
std
mov
push
lret
jbe
push
mov
aad
lock
pop
pop
jmp
inc
jl
jns
out
aam
cmp
push
es
adc
dec
inc
fdecstp
xchg
repnz
ljmp
nop
lods
outsb
sarl
jg
and
dec
scas
js
or
std
mov
sbb
add
js
sbb
or
xchg
idiv
sbb
in
xchg
and
shl
sbb
pop
das
pop
mov
dec
jge
out
pushf
imul
ficompl
cmpsl
call
xor
rorl
mov
xor
and
mov
jbe
sub
fldcw
test
push
push
ja
add
cld
inc
mov
test
fstl
pop
push
sub
pop
add
xchg
jns
and
dec
ret
push
fdivp
mov
test
mov
mov
inc
jp
fildll
mov
xor
xor
mov
pop
jne
andb
ror
call
xchg
daa
inc
xchg
shlb
out
dec
leave
sub
and
push
bound
test
inc
jecxz
insb
imul
mov
sub
inc
in
or
pusha
xchg
mov
iret
adc
jl
andl
sti
inc
xchg
mov
icebp
pushf
in
push
rcrl
in
mov
enter
clc
inc
rclb
jp
xchg
lock
scas
xchg
fisttpl
or
in
adc
xchg
mov
leave
jge
xlat
hlt
mov
sbb
xlat
stc
jg
push
icebp
xor
or
imul
into
sahf
cmpsb
add
cmp
pop
leave
andl
lds
xchg
scas
test
push
cmp
cwtl
movsb
adc
jle
repz
jbe
add
xor
pop
adc
push
push
jmp
shlb
sbb
dec
sub
jge
mov
cmp
lahf
clc
in
sbb
leave
cmp
ror
lcall
mov
jbe
inc
push
or
mov
loope
dec
dec
sub
ds
cmp
test
xchg
imul
lret
outsl
and
decl
es
into
sbb
stc
fldl
cmp
add
imulb
or
sub
mov
mov
push
or
xlat
faddl
sub
outsb
into
stos
fcoms
mov
enter
sarb
sti
sub
push
sub
and
pop
lret
push
js
iret
int
js
sub
lret
jo
addl
scas
rcl
xchg
mov
cwtl
sbb
fstpl
jmp
test
shrb
shl
xor
pop
stc
je
adc
adc
ss
cmp
imul
cmp
lcall
inc
dec
and
push
mov
cmc
push
iret
insb
xor
cmp
pusha
pop
pushf
adc
push
adc
jg
add
dec
aam
shll
lahf
lds
add
mov
push
mov
sti
cmp
xor
loopne
dec
cmp
inc
or
sub
mov
repz
lcall
js
jb
jmp
imul
pop
push
sbb
add
pushf
iret
stos
repz
sub
aad
cmpsb
push
nop
adc
ljmp
mov
and
sub
lea
mov
mov
mov
out
sbbl
mov
pusha
js
inc
add
adc
frstor
das
cwtl
and
jns
mov
push
push
rcrl
cmc
idiv
jle
aad
mov
jne
mov
aam
pop
cld
lods
aas
movsl
lret
in
sbb
loopne
mov
mov
and
rcr
pop
iret
sub
inc
aam
je
ret
and
iret
add
lea
mov
dec
ds
xchg
xor
pminsw
subl
mov
and
dec
and
test
jo
jl
push
add
adc
rcll
mov
pop
push
add
mov
sbb
sub
push
cltd
jmp
sbb
dec
shll
pop
cs
ficompl
stos
cmp
out
jmp
xchg
and
cld
push
lods
dec
call
xor
xchg
jp
mov
xchg
gs
inc
add
add
mov
lret
adc
or
inc
aam
or
cmp
shlb
test
pop
or
les
out
outsl
xchg
or
adc
push
daa
nop
in
mov
movsb
mov
or
dec
push
inc
pop
inc
es
addr16
dec
jp
add
mov
push
sbb
and
dec
xchg
cmp
stc
mov
sbb
out
xchg
insl
test
into
or
xchg
inc
out
lods
adc
sbb
insl
dec
stos
dec
test
insb
aam
or
jle
aaa
push
in
pop
mov
jno,pn
jae
mov
xchg
sbb
xchg
cltd
fnsave
repnz
xchg
sub
popf
add
adc
jecxz
stos
sbb
lods
xor
add
mov
clc
shrl
push
mov
push
sti
std
and
out
mov
hlt
in
lret
fisttps
inc
int3
or
test
mov
jno
or
rcrl
add
sbb
ficomps
in
inc
shr
js
xchg
and
push
cmp
adc
movsb
fwait
out
gs
inc
rolb
xchg
addb
push
aas
pop
daa
pop
xchg
and
mov
sub
jne
jl
je
dec
popf
decb
xor
andw
xchg
icebp
push
inc
cmc
pop
test
sahf
das
movsb
inc
jmp
fistpll
in
into
and
push
pop
push
xchg
clc
push
loop
loope
xchg
dec
sub
js
cmp
lods
jnp
mov
test
notb
push
stos
ret
cmp
mov
xor
bound
and
js
jp
pop
pop
iret
mov
arpl
shrb
xor
scas
outsb
xor
pop
rcrb
jo
mov
bound
mov
cmc
les
add
movb
lods
jae
jae
xchg
inc
jmp
testl
mov
push
insl
mov
rcrb
and
rcrb
sbb
and
fistps
ret
inc
sub
sub
shll
adc
into
ss
in
fsubs
adc
cmpsl
and
mov
fidivs
xchg
aaa
lret
xor
fsts
cmc
aad
pop
xor
xchg
imul
push
mov
lods
test
sub
inc
inc
or
add
in
mov
mov
std
sti
push
mov
gs
or
loopne
push
jae
and
mov
push
dec
dec
lea
repz
ja
xchg
jne
lods
sbb
movsb
mov
pop
add
sub
pushf
jp
mov
mov
mov
aad
mov
nop
lock
pop
jb
lahf
leave
dec
xor
je
add
and
pop
sub
lea
sbb
inc
xor
push
mov
repnz
jp
fisttpl
imul
inc
clc
ljmp
dec
push
inc
mov
loope
psrlq
ljmp
and
or
cmpsl
push
adc
mov
stos
sbb
cld
xlat
pop
es
push
cmpsl
xchg
mov
dec
mov
cmpsl
insb
repnz
pushf
pop
daa
dec
cld
shrb
lahf
test
ret
mov
stos
test
loop
ret
dec
cmp
xchg
jo
ljmp
xchg
lods
inc
inc
idivl
inc
lods
mov
inc
lahf
bound
fistpl
add
stos
cltd
clc
leave
arpl
out
pop
push
arpl
fldl
pop
clc
xchg
add
xchg
lds
adc
fistpl
xchg
bound
xchg
push
aas
jno
xchg
in
xor
ljmp
or
std
xor
mov
pop
xchg
dec
cmpsl
jnp
test
xchg
push
ja
shlb
mov
xchg
or
test
fwait
cmp
add
add
filds
out
dec
cmpsb
and
jns
rclb
xchg
popf
std
add
out
inc
adc
inc
and
cwtl
jg
rcr
nop
mov
loop
mov
adc
insl
dec
ja
jbe
mov
jae
fisttps
popf
mov
inc
pop
push
jmp
push
mov
je
insb
out
addl
sbb
push
loopne
cmpsb
stos
mov
or
aas
xchg
ljmp
pop
pop
in
adc
rorb
out
ret
in
pop
cmpsb
lock
inc
popf
push
fwait
jae
mov
push
das
jmp
mov
sysexit
ficompl
ss
add
sti
sbb
das
bound
xor
pop
rorb
in
adc
dec
mov
inc
inc
ror
lods
cmp
aaa
aad
arpl
shll
dec
or
dec
popf
aaa
xor
push
add
test
daa
mov
lds
into
scas
data16
and
xor
das
movsb
es
push
xchg
adc
jbe
jae
jge
xchg
and
daa
push
cmc
add
mov
dec
fwait
jl
cld
rorb
inc
orl
or
cmpsb
lahf
ss
sbb
push
test
imul
adc
mov
mov
ss
sahf
pop
nop
push
jo
jp
stc
loope
add
sub
test
mov
jl
fdivrs
movsl
fdecstp
xchg
and
imul
orb
xchg
popa
mov
xor
ret
push
test
js
sub
xchg
mov
je
sub
mov
outsb
xchg
mov
adc
je
push
jg
sbb
mov
sub
mov
adc
and
push
jp
jle
adc
fisubrl
sub
inc
mov
adc
and
js
sahf
inc
cmp
insb
push
adc
jo
loop
orb
and
fs
aas
adc
out
pop
ss
xor
inc
push
sbb
filds
in
jmp
adc
pop
or
pop
into
call
cld
shll
in
pop
sahf
repz
imul
push
lock
inc
lods
push
pop
mov
push
and
ja
shll
hlt
shrl
sti
add
dec
gs
jno
loopne
imul
xor
fld
fcoml
les
xor
cmp
inc
sbb
fbld
movl
sub
pushf
and
jle
cs
sub
nop
lret
and
push
lcall
stc
mov
fnstsw
push
jecxz
jbe
pop
inc
push
aam
mov
mov
aas
bound
xchg
jp
mov
outsb
inc
in
clc
inc
adc
add
xor
and
jns
sarl
dec
dec
idiv
xlat
jl
int3
cmp
lods
cmpsl
sbb
and
icebp
addb
cld
add
lret
ret
lret
mov
mov
dec
int
outsb
push
ja
inc
ja
sarb
pop
sub
xchg
aam
fdivp
ret
aas
sub
es
je
insl
test
sahf
pusha
xchg
scas
lock
ljmp
and
scas
cmp
mov
insb
mov
pop
inc
ja
fidivrs
cmp
test
test
mov
mov
clc
int
cmp
lds
gs
xor
cmc
stos
sbb
mov
bound
pushl
adc
xor
push
movsl
pop
lea
add
mov
jg
mov
push
pop
lds
pop
sbb
mov
ret
or
xchg
rcrb
push
gs
add
cli
daa
hlt
out
sub
xchg
add
sbb
in
pop
inc
xchg
in
repnz
xchg
sbb
mov
pushf
sarl
mov
lods
jg
cmp
dec
pushf
jne
inc
jmp
fildll
pop
lcall
add
addl
out
enter
icebp
lea
adc
repz
pop
xchg
jns
xor
and
adcb
pop
int
jle
jne
in
sub
pop
imul
mov
imul
incb
mov
push
sbb
stc
mov
inc
movsb
mov
xchg
pop
cmp
jnp
push
imul
test
loope
push
adc
jmp
mov
xchg
das
fcmovne
loop
daa
hlt
xorb
arpl
jnp
inc
loopne
gs
jp
inc
aaa
out
jno
or
ja
int3
pop
push
jmp
shrl
shlb
inc
scas
inc
xchg
or
movsl
fnsave
movsb
mov
in
push
loopne
jl
sbb
jge
mov
nop
daa
sbb
shll
outsb
inc
push
jl
pop
xor
inc
lahf
push
repz
adc
shlb
lahf
push
out
adcl
inc
or
scas
inc
pop
ss
enter
pushf
stos
or
xor
pop
push
movsb
and
xchg
les
pop
js
sti
xchg
inc
movsl
loopne
and
sahf
sbbb
sbb
or
or
xor
mov
pop
jge
push
js
jae
pop
add
mov
push
adc
pop
sub
adc
outsb
mull
adc
dec
shll
or
dec
mov
lea
fst
push
sbbl
idivl
pop
jge
cwtl
call
out
sbb
int
test
movsb
jns
xchg
daa
loop
idiv
stc
cltd
shlb
adc
push
mov
fcomps
scas
sar
movsl
xor
cmp
cmp
mov
xor
cmc
arpl
sbb
rcrl
pop
mov
jne
imul
pop
add
jmp
or
mov
jbe
inc
mov
in
lods
sub
mull
in
pop
test
sti
scas
fwait
jbe
mov
cmp
ret
fwait
jl
inc
adc
les
xor
sti
mov
out
cmp
sbb
lods
movl
aaa
adc
push
cmp
into
xchg
jo,pn
jo
add
mov
cmpsb
mov
shll
jns
dec
push
dec
or
sub
add
test
aad
popa
int
cmp
xchg
aaa
negl
mov
or
dec
adc
xchg
pop
xor
cmp
jmp
inc
cs
int
outsb
movsl
xor
idivl
roll
ja
std
jae
push
cmpsl
sbb
pop
mov
pop
or
xchg
lret
xor
mov
xchg
mov
leave
enter
test
rclb
stc
sub
imul
adc
ret
into
adc
insl
nop
jnp
dec
das
pop
push
ljmp
mov
inc
jg
mov
and
jns
insl
setns
js
imul
test
int
push
dec
mov
fstl
mov
xchg
sbb
inc
sarl
cmp
std
stos
or
outsl
out
sub
sub
cmp
inc
lret
xor
xor
mov
push
xchg
push
inc
test
and
ja
mov
dec
jge
jb
in
hlt
or
jge
fwait
cltd
scas
xor
mov
push
cld
out
or
loope
xor
in
jns
adc
sub
fnstsw
js
xchg
addr16
xor
movsb
mov
in
mov
out
in
dec
cmp
movsl
bound
dec
jge
xchg
out
ja
jb
scas
xchg
in
lret
xchg
insb
lahf
out
test
sub
push
sbb
push
pop
push
stos
mov
ret
movsl
insb
adc
sbb
mov
jp
add
push
jbe
nop
jns
ret
xor
xchg
pop
inc
mov
pushf
jae
mov
push
fstl
fidivrl
les
xchg
mov
xchg
sbb
imul
push
scas
and
push
sub
loop
fmuls
bnd
push
into
hlt
int
movsb
arpl
cmp
or
cmc
and
aaa
scas
mov
repnz
imul
add
lds
xor
scas
and
mov
cmp
push
movsb
cmp
in
push
das
gs
jbe
mov
jge
xchg
jbe
inc
cmp
sbb
stc
cmp
inc
fs
pusha
addr16
mov
ljmp
xor
ja
stos
lahf
je
sbb
mov
test
decl
inc
xchg
mov
pop
in
add
enter
pop
push
jne
push
adc
loope
dec
sbb
cmp
fstpl
push
fdivr
movsl
out
mov
xorb
sbb
pop
jecxz
push
sub
xor
arpl
lods
pop
leave
pop
movsb
and
js
dec
es
test
mov
xchg
fdivl
xor
pop
cmp
sub
adc
mov
push
bound
orb
xor
int
cmc
push
sub
sub
mulb
das
and
mov
fistps
mov
push
mov
test
cmp
xor
stc
push
add
fs
mov
mov
into
stos
dec
cmp
push
mov
cli
dec
movl
or
sti
sub
scas
jns
cmc
sub
aas
pop
fwait
adc
lret
outsb
cmp
push
dec
jp
fcmovb
sahf
data16
lods
pop
push
push
mov
pop
popf
sub
xchg
mov
lret
sti
pop
dec
lods
inc
and
or
int
cmp
pop
stos
inc
push
inc
out
fldcw
daa
scas
les
jbe
xchg
mov
mov
cmp
faddp
sbbl
pop
push
pop
adc
mov
jmp
loop
rcrl
movsb
aad
inc
sub
aas
test
divl
mov
dec
xchg
dec
sub
fidivl
call
shlb
xchg
jp
xorl
iret
mov
inc
repnz
push
inc
dec
clc
das
adc
test
sahf
jge
and
fsubr
rcl
jecxz
idivb
insb
std
sbb
sbbb
or
mov
cmp
cld
pop
mov
lret
mov
xor
mov
cmp
mov
test
mov
and
or
aam
xchg
out
pop
cmp
movsl
icebp
insl
ja
push
dec
sub
cmpsb
ljmp
xor
and
and
imul
mov
clc
pop
inc
add
cltd
popf
mov
divb
cmovge
fnsave
mov
xchg
mov
lret
aam
pop
xchg
sbb
mov
adcl
outsl
jp
xor
cmp
or
xchg
push
mov
test
or
lds
icebp
xchg
ja
aaa
lahf
dec
jo
pop
inc
jnp
cwtl
or
aaa
pop
fwait
enter
pop
jbe
add
xor
out
jmp
pusha
jmp
push
in
outsl
xchg
mov
adc
pop
xor
xchg
addr16
mov
xchg
adc
add
jecxz
and
jb
pop
jmp
fildll
popa
xchg
mov
ror
xchg
mov
jl
and
xchg
int
cmp
or
loope
popf
push
stos
push
es
and
xlat
cld
jnp
sub
jle
cmpl
mov
out
aaa
outsb
ret
jo
dec
loopne
inc
mov
icebp
lret
out
mov
mov
ret
inc
pop
fidivl
mov
or
rcrl
sarb
scas
test
data16
ds
mov
cmp
mov
arpl
mov
cmp
jo
and
insl
xchg
pop
adc
addl
jle
and
stos
lds
orl
lret
lret
cli
xor
movsb
movl
jbe
incl
out
push
sbb
mov
daa
sbb
repz
mov
jl
mov
pop
mov
loop
pusha
clc
shlb
bound
push
mov
push
lret
inc
and
pop
xor
push
and
daa
xor
push
aaa
mov
sub
movsl
repnz
pop
and
inc
sbb
fdivrp
daa
test
addb
out
and
inc
xor
cmpsb
jg
jo
insl
pop
lret
mov
js
mov
mov
push
mov
xor
sub
sbb
outsb
mov
jb
rolb
ss
mov
mov
mov
push
mov
push
and
mov
mov
jg
dec
idivl
inc
lret
and
movb
sbb
popf
and
aaa
int
cmpb
mov
stc
pop
ljmp
mov
pop
adc
cmp
adc
cli
adcb
repnz
cmp
pop
iret
or
frstor
cmc
icebp
scas
push
xor
dec
mov
mov
mov
imul
loopne
inc
dec
decb
cmp
loope
shlb
inc
dec
adc
xor
mov
mov
loopne
sub
testb
pop
fldenv
aaa
repz
cwtl
xchg
orl
cmp
jns
pop
shll
cmc
adc
movsl
daa
jmp
mov
xor
nop
pop
and
aas
inc
popf
divb
and
dec
or
lea
inc
jecxz
push
loopne
addr16
das
lea
xor
call
dec
ffreep
mov
cmp
dec
jmp
sbb
dec
sti
ficompl
cwtl
push
inc
jns
int3
inc
fs
and
repz
adc
mov
or
adc
test
test
shrl
pop
stos
and
out
jae
icebp
pop
cmpsl
cld
sbbl
lret
adc
rorb
ret
dec
pop
lock
jb
mov
mov
mov
scas
jb
ret
in
movsl
cmp
insl
pop
jne
dec
and
and
ljmp
nop
lods
lock
mov
rcl
jecxz
jb
xor
push
dec
lahf
add
add
cmpsb
ljmp
idivl
gs
push
repnz
jle
fildl
ficomps
mov
xchg
stos
out
and
out
fwait
ret
sbb
push
repz
xor
jae
or
fnsave
xlat
inc
mov
mov
insl
test
add
ja
addr16
dec
arpl
inc
adc
or
lds
push
ljmp
sti
cmc
push
add
cmc
out
lret
bound
sarl
fcmove
in
out
xchg
fldcw
mov
mov
mov
out
jae
addr16
fdivrs
divl
cs
push
mov
jecxz
dec
add
mov
mov
xchg
mov
xchg
xchg
adcb
mov
out
push
cmc
sub
add
mov
cmpsb
ds
mov
push
int
pop
insb
jmp
and
add
jle
js
in
into
les
mov
add
or
or
inc
leave
xchg
cmp
fwait
enter
and
mov
ret
fisubrl
call
xchg
sbb
scas
nop
imul
gs
out
nop
push
mov
adc
lret
mov
mov
dec
leave
inc
xchg
pmuludq
jmp
inc
dec
inc
jmp
scas
insb
push
sub
cmc
or
mov
dec
pop
jecxz
mov
adc
lds
cmp
and
jno
mov
jge
push
pop
aam
int
sub
shrb
lds
sbb
mov
jl
gs
enter
pushf
add
jo
or
mov
test
xchg
incl
xchg
add
push
mov
push
pop
mov
bound
bswap
loope
es
add
ds
or
std
subl
cwtl
or
jo
leave
add
fwait
or
fbld
xor
sub
sub
js
mov
mov
mov
inc
push
push
push
insl
faddl
out
sub
les
outsb
and
push
shl
jnp
jg
repnz
mov
dec
fisttpl
push
fidivrl
dec
push
dec
push
mov
and
jbe
sbb
idiv
lock
lret
inc
rcrl
mov
fldl
test
jne
outsl
cmp
pop
loop
nop
push
stc
mov
cmpsl
insb
adc
in
ss
repz
lret
pusha
test
cli
mov
sbb
leave
hlt
lcall
mov
lock
mov
sub
pop
sbb
or
jbe
je
pop
cmp
call
cmp
xchg
mov
lods
sub
mov
sbbl
mov
mov
test
or
mov
loopne
xchg
inc
dec
fmull
cmp
fstps
fcom
repz
ja
inc
push
push
sbb
lret
test
sbbl
adc
into
jmp
push
or
cltd
xchg
push
aad
jmp
in
out
shlb
scas
dec
andl
je
push
mul
mov
std
push
jae
jo
or
test
test
mov
addb
shlb
jp
fcompl
std
inc
add
inc
jg
dec
das
rol
jo
daa
movsl
xor
cwtl
xchg
je
hlt
testb
cwtl
sbb
sbb
fiadds
push
lret
jg
sub
mov
xor
ror
pop
pop
sub
and
fld
jnp
fisubl
adc
movsb
dec
and
int
stos
in
ljmp
adc
xor
mov
jns
fisubs
mov
xchg
mov
jmp
test
xchg
and
sub
fldl
mov
xchg
shlb
push
roll
in
mov
push
dec
sbb
push
into
sub
lods
icebp
movsb
xor
jmp
mull
mov
icebp
dec
stos
shl
out
cmpsl
ja
sbb
push
cmpsl
push
or
daa
negl
mov
rorb
test
or
jns
mov
in
mov
cli
mov
int
mov
test
aam
jp
cltd
fbstp
pop
ret
cmp
xor
sbb
fildll
subb
sub
xchg
dec
sbb
out
outsb
mov
lcall
stos
cld
scas
xchg
and
lds
dec
jnp
pushf
jbe
push
std
in
ja
pusha
shll
xchg
ret
adc
pop
mov
jae
mov
push
es
popf
out
sbb
mov
inc
push
daa
fcmovu
stc
adcl
mov
mov
std
adc
adc
mov
insb
leave
mov
hlt
aas
arpl
or
inc
in
dec
or
data16
jae
out
scas
sbb
pop
adc
xchg
lds
ffreep
mov
scas
rcll
cmp
scas
movsb
fldl
sbb
sbb
add
jge
imul
cmp
jl
adc
jg
lahf
xor
mov
jle
rcl
outsb
push
xor
cmp
pusha
pop
jmp
inc
call
sub
cmp
enter
pop
lret
clc
xchg
push
lcall
xchg
xor
cmp
icebp
xacquire
movsl
cld
cwtl
daa
and
xor
subb
incb
push
or
scas
pop
xchg
imulb
js
push
dec
pop
add
lcall
pop
fdivl
xor
andl
scas
pop
sarb
mov
mov
adc
mov
stc
mov
popf
shlb
pop
mov
push
repz
sub
out
lret
daa
shl
fmuls
loopne
sahf
jae
jmp
xor
popa
outsl
sbb
push
loop
sar
jne
into
fs
aaa
adc
pop
ss
inc
xor
xchg
dec
out
out
ret
lret
mov
or
jge
push
xorl
pop
cmp
dec
add
adc
sbb
adc
lods
adc
jecxz
jl
xchg
xlat
mov
mov
cmp
or
sti
imul
das
jb
gs
push
jg
sahf
adc
dec
pop
movsl
lahf
inc
nop
or
in
sbb
add
int3
xchg
pop
fdivs
cmp
inc
jns
add
xchg
pop
aaa
inc
cmc
adc
fcompl
mov
cs
cmp
xchg
test
test
je
sub
jecxz
ljmp
xlat
add
mov
mov
cmpl
add
test
out
inc
xchg
mov
mov
test
ret
cwtl
shlb
fldl
testb
std
pop
cmpsl
cwtl
aad
cwtl
cmpsl
sbb
xor
mov
push
fnstenv
lret
out
std
out
jo
popa
mov
xchg
outsl
lock
xchg
push
rcrb
pop
add
inc
and
ret
or
es
push
mov
call
dec
sbb
push
xchg
ljmp
popa
adc
jl
mov
sbb
fsubs
in
pop
unpckhps
in
mov
adc
mov
mov
jnp
sub
lods
clc
hlt
xchg
adc
inc
mov
rcrl
mov
stos
les
xchg
adc
adc
dec
xor
xor
dec
dec
or
aaa
inc
xor
pop
and
mov
push
dec
adc
test
das
test
push
dec
dec
dec
mov
xchg
or
pop
inc
fwait
push
stos
adc
inc
xor
xorl
jns
cmp
in
out
xchg
ja
sub
fldenv
out
js
idivb
test
sarb
repnz
dec
leave
and
jne
or
insl
dec
xchg
xor
cmc
xchg
sbb
push
or
mov
sub
cli
jae
push
pop
repz
outsl
add
and
jecxz
insb
rorl
inc
aas
in
and
iret
or
mov
pop
lock
or
divl
mov
out
popf
push
mov
fwait
inc
rolb
nop
mov
jno
shl
in
mov
dec
fcoms
lods
out
adc
cmp
repnz
mov
xor
mulb
arpl
or
sbb
push
stos
add
cli
add
pop
int3
mov
sbb
ret
sbb
or
ljmp
mov
xor
cmp
inc
xor
push
outsb
jbe
lahf
jno
jecxz
sub
xor
sbb
out
clc
dec
jno
cmp
jl
xchg
loope
cmpsb
jecxz
push
bound
mov
jecxz
out
lahf
lock
sub
pop
fmul
test
sub
cmpsb
push
aaa
mov
pop
adc
pop
or
mov
sub
cmp
ds
mov
movsl
add
and
add
sbb
sbb
cli
repnz
pop
out
xor
push
mov
cwtl
js
jle
pop
cmpb
push
rcll
sub
jg
mov
lock
jne
mov
adc
mov
mov
and
push
nop
push
int
mov
sub
pusha
dec
ret
rorl
mov
insl
cmpsl
add
push
add
test
js
orb
or
cmp
enter
sub
xchg
fs
adc
or
inc
xchg
testl
xor
mov
or
nop
xor
cmp
cmpsb
cmc
inc
in
xor
shrb
sbb
fsubrl
jle
adc
pop
adc
cbtw
lret
inc
lods
stc
test
mov
mov
sub
into
cmp
jbe
mov
sbb
adc
loopne
mov
fiadds
or
insb
std
in
jo
shrb
xchg
sbb
inc
nop
movsb
jg
ja
ljmp
pushf
daa
clc
shr
pop
fimull
pop
fdivr
aad
and
nop
in
rcrl
and
jne
pop
stos
ss
jno
pop
je
push
call
jo
adc
sahf
addl
adcl
sub
fcoms
dec
pop
pop
std
mov
jge
inc
mov
jl
nop
pop
inc
mov
jp
enter
mov
testb
sbb
nop
je
cmpsl
pop
frstor
mov
mov
cld
add
cmp
mov
mov
sbb
sbb
nop
dec
sbbl
jo
iret
sub
cmp
dec
ret
cltd
orl
ja
insl
adc
mov
sub
inc
ljmp
dec
lods
xor
cmpsb
push
push
and
adcb
je
lods
add
enter
cmpsl
sub
sbb
fstl
add
xchg
jmp
sub
stos
mov
out
out
pop
xchg
loopne
pop
and
push
test
sar
jmp
push
xor
in
or
fidivl
lahf
jno
jae
rolb
js
sub
xlat
dec
cmp
lock
xlat
or
and
call
mov
add
sbb
add
jns
pop
mul
xor
xchg
movb
jnp
adc
pop
sub
addr16
test
mov
fs
mov
sbb
mov
lods
pop
pushf
jne
pop
push
mov
clc
inc
jae
xchg
add
push
imul
stc
cli
sub
cmc
jnp
push
cltd
pop
and
loop
out
and
xchg
insb
sub
mov
sbb
in
cmc
xchg
pusha
pop
shll
ret
iret
pop
daa
insl
mov
ljmp
push
lods
repnz
popf
cmp
scas
mov
repz
fiaddl
mov
gs
sbb
aas
imul
in
push
mov
mov
xchg
ror
lods
mov
pop
arpl
xchg
cmpsl
mov
push
imul
imul
mov
popf
xor
mov
fcmovnb
push
call
imul
pop
and
adc
jnp
repz
ret
push
mov
mov
dec
sbb
insb
xchg
daa
pop
or
cmp
jmp
sbb
xor
subb
dec
int
jl
cmpsb
jo
test
push
fisubl
hlt
push
testb
cmpsb
ficoml
jg
push
popf
stc
enter
pop
dec
bound
int
loope
cld
insl
sub
adc
ds
jb
or
inc
and
in
mov
and
adc
mov
cmp
jl
rcrl
ljmp
dec
push
rclb
pop
push
sbb
faddl
ja
sub
fwait
sub
std
jnp
shlb
ret
cmp
das
mov
add
mov
pop
lahf
and
imul
push
mov
stos
fsubrl
sbb
ror
mov
or
and
mov
sbb
cmp
sub
pop
outsl
xlat
imul
jecxz
repnz
adc
es
sbb
cli
ds
idivb
cli
dec
push
sti
xor
in
lds
or
outsl
into
sbb
push
xor
mov
pop
ja
xor
out
jle
imul
mov
movsl
repnz
lods
loopne
jno
jb
dec
xlat
cmp
sub
or
loope
xchg
sti
leave
xor
shll
xor
aam
dec
dec
sbb
inc
mov
pusha
flds
sbb
out
cmc
xchg
lahf
lds
sbb
jl
inc
sbb
pop
popf
cmp
pushf
sarb
das
cs
aad
push
mov
aas
ret
cmpsl
inc
jb
jmp
cld
je
xlat
mov
fimuls
lret
lea
es
dec
inc
testb
inc
add
fildl
push
lahf
pop
add
lret
inc
xchg
sub
inc
shl
outsl
dec
sahf
mov
xor
and
test
shll
jg
int
push
pop
jbe
cwtl
dec
mov
cmpsl
push
pushf
cmp
arpl
cld
das
pop
xchg
lret
int3
cmp
and
mov
push
lock
push
pop
and
rolb
or
pop
mov
pop
sub
add
pushf
or
xor
xchg
push
push
popa
inc
pop
add
test
mov
dec
mov
shll
add
dec
mov
shlb
scas
mov
aas
push
fsubp
rcr
jp
fwait
clc
push
sbb
stos
push
roll
cld
pop
xor
jp
test
push
pop
cmpsb
pop
decl
mov
or
shr
sbb
mov
fisttpll
data16
test
scas
pop
ja
dec
icebp
dec
das
mov
inc
outsb
fimull
inc
inc
fwait
mov
push
mov
jecxz
pop
sar
mov
int3
out
inc
lds
jns
and
aad
adc
into
leave
mov
shlb
or
jecxz
mov
push
cmpb
int3
dec
icebp
adc
mov
out
mov
push
jle
xchg
fdivrs
dec
jmp
scas
pop
movb
insl
cmp
lock
add
dec
lahf
stos
push
ret
sub
xchg
sub
jnp
add
jle
aad
in
lret
mov
sub
or
pop
pop
ljmp
pop
jmp
push
outsl
xchg
sub
cltd
fmul
inc
mov
data16
mov
insl
or
jle
mov
jae
aaa
push
rorb
pop
adc
out
movswl
pop
jne
and
arpl
add
test
dec
push
sub
or
add
int3
mov
jbe
push
addr16
aaa
rcr
sahf
scas
pop
mov
sarb
lea
adcl
movsb
jbe
dec
inc
jge
clc
mov
test
lea
push
lea
jl
or
cli
push
sub
inc
xor
cltd
jle
lahf
sub
push
lods
mov
cmp
mov
cmpsb
pop
fs
or
add
mov
fisubrs
jne
loope
mov
rol
sub
sub
pushf
shll
imul
fadds
dec
mov
pop
xor
hlt
daa
aas
adc
pop
mov
pop
js
sbb
lcall
mov
mov
imulb
lcall
adc
dec
ja
jg
or
mov
stos
push
mov
fbstp
mov
stos
push
xchg
mov
int
ljmp
neg
cs
push
mov
cmpsb
sbb
and
test
mov
addb
mov
adc
out
fiadds
andl
push
cmp
mov
in
cmc
mov
cli
andl
bound
test
or
jae
into
add
push
xor
loopne
xchg
in
adc
or
adc
fstpl
xor
pop
data16
mov
lods
jne
mov
inc
xlat
ja
cld
sub
inc
push
mov
dec
mov
sti
js
and
cwtl
push
mov
fimull
push
loopne
leave
movsb
out
jns
mov
cli
cld
or
outsb
mov
cmpsl
sbb
mov
push
jge
dec
pop
push
rcr
push
push
or
cmc
insl
test
and
out
nop
mov
mov
jb
pop
dec
pop
xchg
mov
xor
movb
jbe
lea
add
xchg
pop
test
mov
xor
aas
mov
call
pop
movsl
add
inc
sbb
mov
jmp
push
das
dec
jge
mov
call
aad
shll
xorb
push
xor
cmpsl
adc
bound
icebp
cmp
cld
pop
mov
lret
cmp
mov
lds
mov
insb
inc
inc
adc
rclb
aaa
loope
push
in
aam
movsb
rol
rorb
sbb
or
mov
cmpsl
sbb
ljmp
push
lods
pop
pushf
mov
cmpl
pop
rdmsr
int3
xor
out
movsb
cltd
out
nop
test
orl
push
push
mov
lret
movsl
scas
fldl
pop
lahf
adc
mov
test
out
frstor
push
cmp
ljmp
adc
xor
xor
xor
push
inc
mov
xchg
scas
push
test
lret
scas
ja
adc
inc
add
negb
loop
cmp
mov
sahf
sub
add
clc
leave
out
and
ret
mov
xchg
mov
inc
pop
or
add
inc
pop
xchg
xor
or
push
pop
mov
pusha
mov
add
dec
jb
jne
sub
mov
notl
and
in
jmp
jns
rolb
fists
cmp
cmp
jmp
adcl
xor
and
sub
sub
stos
lock
mov
add
cmp
add
ret
sub
or
jae
call
test
mov
cmp
dec
rcll
outsb
imul
scas
repz
sbb
adcb
sbb
mov
sub
pop
cmpsb
hlt
jns
jne
inc
clc
pop
xor
push
adc
or
test
pop
int3
ja
out
into
popf
xlat
fdivp
fimuls
lds
xchg
sar
lret
scas
cmp
jb
cmp
movsb
or
pop
push
pop
pop
push
jbe
push
sarl
imul
rorb
adc
in
jno
sbb
jl
or
push
or
sahf
jo
mov
dec
clc
imul
and
mov
lods
inc
jg
xchg
cmpsb
loopne
cmpsl
in
aam
mov
pop
xor
push
loope
ds
cmp
ret
sbb
adc
jg
add
nop
popa
js
xor
jmp
subl
arpl
xor
add
add
pop
mov
loop
inc
jne
pop
std
jno
lcall
icebp
fcompl
and
mov
std
adc
daa
sub
jg
fadds
inc
push
mov
jbe
mov
repnz
cltd
lds
push
cltd
xchg
int
fstpt
adc
xchg
divl
ds
rcll
mov
mov
sahf
inc
mov
sbbb
outsl
xchg
xlat
pusha
loop
hlt
cmp
push
push
fs
adc
mov
jb
out
out
outsl
sbb
xor
xor
loope
das
or
jecxz
inc
cmc
fwait
lahf
loope
stos
ret
cmp
je
adc
xor
testl
and
scas
ret
and
xlat
mov
in
sub
sbb
in
mov
test
daa
mov
mov
movsl
outsb
loopne
int
dec
fldz
addb
sahf
fnstenv
pop
mov
cmp
arpl
sbb
repnz
lods
cld
sbbl
add
mov
pushf
sub
data16
aad
loopne
nop
jle
add
add
addr16
add
dec
or
je
aam
jecxz
inc
inc
jns
push
lea
std
call
or
cmp
adc
fistpll
push
pop
dec
imulb
inc
push
jle
das
sub
or
and
jnp
sar
leave
push
notb
pushf
std
stos
rcl
cwtl
shll
adc
cmp
and
sbb
test
sub
mov
pop
mov
lock
shl
jmp
scas
mov
jno
xchg
ret
inc
lds
mov
ret
pop
and
and
mov
test
lods
jb
insl
mov
movsb
sub
and
push
lret
and
xchg
and
ss
push
adc
test
xor
push
fs
in
daa
cmp
xchg
inc
sbb
mov
shl
mov
stos
addb
xchg
cs
add
or
xor
or
fsts
mov
sub
lcall
test
jge
ja
pop
xchg
dec
adc
push
enter
adc
lcall
sarl
or
in
mov
lret
jb
jns
mov
mov
mov
adc
mov
push
sbb
jp
in
and
xor
rorl
jnp
jg
adc
inc
sahf
imul
inc
fldenv
out
mov
sub
out
rcll
mov
inc
and
cmpsb
insb
insl
push
fidivrl
sbb
cmp
lcall
gs
ljmp
movsl
sub
cmc
ss
popf
mov
bound
mov
fidivs
sbb
inc
xchg
aas
jmp
cmp
push
pusha
add
adc
pop
ljmp
stos
mov
adc
arpl
pop
or
int
mov
or
loop
add
push
ss
std
ret
inc
ficomps
cmp
rclb
dec
scas
sbb
ss
out
mov
sti
push
inc
movsb
xchg
dec
dec
push
cmpsl
inc
dec
jbe
int3
sbb
cmp
pop
dec
lods
daa
adc
sarl
mov
push
lea
inc
dec
cmc
push
push
out
and
test
scas
rcrb
push
aas
pop
test
push
add
cmpsb
arpl
in
mov
sub
pop
push
iret
scas
push
fbstp
loope
adc
jns
mov
ds
movsl
pop
inc
and
rcll
sbb
lret
sbb
mov
jmp
pop
fsubrl
sbb
jl
add
and
mov
outsb
jb
adcl
sbb
mov
pop
and
into
xchg
int
mov
sub
cmp
mov
jmp
mov
insb
sub
call
outsl
je
lahf
loop
ds
or
das
fs
xchg
xchg
fcmovne
loop
out
ret
cmp
sub
fldl2t
cli
out
pop
xor
jnp
cmp
ffreep
or
dec
mov
bound
xor
jmp
pop
aam
or
push
mov
cmc
add
jnp
movsb
imul
mov
rcl
cmc
imul
mov
and
sti
pop
push
fisubrs
fnstsw
movsl
lods
insb
dec
cmp
roll
adc
adc
daa
repz
xor
daa
or
inc
add
cmp
jle
pop
mov
xchg
adc
inc
pushf
sar
imul
rcll
pop
cs
cmp
cmpl
aas
mov
fnstsw
dec
dec
and
je
push
dec
jecxz
add
jl
out
fisubl
xchg
mov
mov
mov
bound
insl
lds
pop
les
fistl
mov
sub
imul
rep
mov
push
jmp
and
je
rorl
adc
xchg
je
std
push
pop
movsl
cwtl
jl
outsl
cmpsl
adc
pop
mov
call
push
int
sbb
fucomip
mov
lock
xchg
jl
pop
sarb
mov
ret
aad
pop
es
in
pop
dec
add
push
xchg
and
or
popa
mov
mov
fnsave
mov
lea
in
jo
sbbb
push
rcrb
test
aaa
sbb
daa
stos
pop
fucomp
push
pusha
xchg
and
rorl
push
pop
fisubrs
mov
mov
movsb
mov
mov
addr16
xor
pop
xchg
in
icebp
mov
popf
cmp
cmp
aad
testl
in
addr16
and
je
inc
add
or
xor
push
mov
in
test
xchg
add
mov
jecxz
mov
or
popf
jp
orl
mov
aad
jnp
cmp
xor
mov
fbld
xor
jmp
setne
sbbl
push
sub
loope
test
xchg
cmp
and
inc
insb
fmuls
jnp
dec
push
jle
fcoml
inc
mov
das
iret
out
hlt
ret
mov
inc
push
push
data16
mov
push
mov
pushf
repz
cmp
or
movaps
sbb
out
sbb
push
adc
pushf
sarb
push
cmpsl
xchg
xlat
adc
lods
in
outsl
add
pop
leave
mov
and
xchg
pop
mov
or
dec
rcrl
aaa
gs
or
inc
xor
dec
test
scas
mov
cmp
fwait
lds
push
shrb
les
arpl
rep
pop
icebp
mov
divb
jbe
mov
test
fisubl
daa
adc
pop
cmp
mov
jno
mov
jl
jle
dec
shll
ja
cwtl
out
jo
in
lahf
mov
lcall
push
push
inc
popf
imul
or
scas
enter
pop
inc
in
jecxz
imul
sub
rorl
pop
pop
push
movsl
fldenv
cmp
inc
pop
xor
sbbb
push
add
jns
xor
xchg
js
std
das
pop
sti
sub
push
ja
mov
mov
jnp
loopew
outsb
aad
push
adc
ffree
mov
mov
push
xchg
mov
jnp
mov
adc
sbb
lahf
mov
push
sub
jge
divl
outsb
sarl
mov
jae
sbb
imul
adc
adcb
mov
stc
mov
adc
mov
cmp
call
sub
sbb
or
stos
in
cmp
mov
jno
test
add
popa
es
adc
ljmp
jne
enter
iret
data16
repz
lods
jl
orb
sub
push
jl
in
lea
incb
leave
xchg
gs
cmpsl
loopne
mov
mov
fstps
lods
ret
les
or
repz
xchg
cltd
pusha
push
sbb
push
cld
cmp
nop
xchg
insl
lea
jle
leave
jmp
or
dec
inc
jp
lret
nop
xor
arpl
aas
repnz
out
sbb
loope
je
and
sbb
pop
jg
fisttps
add
in
mov
sub
addl
sbb
in
scas
pop
mov
xchg
inc
cmp
or
jmp
mov
or
ret
popf
es
std
stc
shlb
test
inc
mov
mov
pop
nop
lret
mov
add
sti
leave
and
push
enter
outsl
imul
sti
cs
aam
sbb
ret
fs
xchg
cld
cmp
xchg
lods
mov
movsb
test
popa
lahf
jnp
lods
dec
test
mov
ljmp
mov
dec
in
add
push
mov
decb
jmp
fstl
mov
clc
push
cld
jge
cmp
pop
sbb
inc
shll
clc
pop
stos
pop
mov
xchg
mov
mov
xchg
xor
ljmp
dec
rclb
mov
mov
dec
jnp
sub
ja
jne
dec
sti
dec
es
lret
or
add
fwait
outsl
push
cmp
pop
jb
add
and
aam
ret
vcvtps2uqq
lret
push
add
sub
cltd
pop
addr16
adc
enter
push
out
mov
dec
sbb
adc
mov
mov
filds
adc
jmp
fisubl
out
ret
push
sub
fmull
push
aam
enter
out
test
jno
inc
push
data16
aas
out
jle
jb
in
push
test
iret
inc
popf
addr16
sbbb
cmp
jp
push
jnp
hlt
popf
add
mov
mov
and
dec
sbb
imul
cmp
fldt
out
test
adc
mov
inc
leave
lcall
inc
arpl
cmp
or
ret
xchg
mov
or
jo
add
lahf
or
leave
sbbl
or
mov
rorb
scas
ficoml
push
cmp
xchg
movsb
stos
call
in
sti
sbb
int
jmp
daa
adc
pop
jno
cmp
jl
divb
inc
push
push
push
mov
shlb
xor
stos
jge
push
stc
stos
fisubrs
in
cmc
add
lcall
mov
stos
pop
test
mov
sub
mov
jl
lea
aad
xchg
jle
int
xor
std
add
jnp
xor
or
pop
sub
sub
lahf
inc
pop
jp
sbbl
pop
sub
sub
add
adc
mov
pop
or
jge
jl
outsb
and
and
pop
mov
int
pop
sbb
div
push
sahf
lret
or
adc
mov
sahf
call
pop
adc
xor
jp
jbe
jne
lods
fildl
ss
xor
outsb
fsubs
cmp
cli
dec
outsl
mov
cmp
gs
or
into
mov
lock
mov
cmp
mov
adc
int3
pop
add
cmp
lock
arpl
rcl
jae
sub
pushf
lea
clc
xchg
sti
xor
in
and
test
loopne
stos
orl
xor
dec
mov
les
popa
ds
mov
inc
sbb
mov
jmp
call
movsl
pushf
sub
push
jmp
lds
adc
aas
fimuls
sbb
dec
cmp
je
inc
mov
sub
movb
jnp
orb
mov
cwtl
xor
adc
dec
cs
fcomi
cld
xchg
pop
xor
loopne
push
jecxz
das
lret
mov
out
mull
arpl
shr
mov
into
std
mov
mov
jecxz
mov
int3
ljmp
cmp
mov
pop
pop
lock
push
pop
mov
cmpsb
out
repnz
aam
out
ret
repz
es
cmp
out
inc
dec
clc
mov
out
pop
cli
pop
popa
mov
jmp
mov
or
mov
pop
fxrstor
add
fldt
test
cmp
mov
push
and
lret
cmp
call
jge
sub
sar
shrl
pop
xor
push
stos
dec
cmp
cmp
xchg
add
aam
movsl
outsb
jae
inc
cmp
cmp
xor
or
mov
mov
dec
pop
test
or
dec
out
addb
sti
or
push
cld
fwait
sahf
fists
add
sarl
cli
andb
in
jns
lods
cmp
jb
mov
or
xchg
inc
pop
cmpl
call
mov
pop
cwtl
mov
mov
pop
dec
mov
lahf
mov
in
fbld
mov
jmp
movsl
or
xorl
xor
or
iret
popf
push
adc
jg
pushf
inc
mov
jnp
stc
push
jle
sti
push
in
iret
adc
push
add
movsl
sbbl
sbb
pop
jno
or
sub
fdivs
mov
push
popl
daa
cmp
mov
cmp
pop
fidivl
mov
jg
arpl
int
scas
bound
push
xor
xchg
push
bnd
jp
jbe
jge
push
aaa
fldenv
in
push
inc
add
mov
ds
aaa
jecxz
jp
or
or
addr16
add
and
pop
mov
cmp
addb
jnp
add
sarb
mov
pushf
push
cmp
sahf
movsb
xor
sahf
arpl
lock
leave
sbbb
push
cmp
cmp
jno
in
jl
inc
ja
scas
dec
popf
push
xchg
xchg
hlt
xor
pusha
mov
lahf
leave
pop
jns
int3
scas
adc
mov
or
cmpsb
in
ret
jo
pop
enter
pop
ret
mov
push
inc
jge
shll
jmp
in
ds
repz
xor
insl
and
orl
roll
jbe
rol
xor
out
push
sbb
pop
push
jno
js
sti
pop
stc
out
int3
lcall
add
sub
xor
pop
mov
cmpsl
inc
xchg
rclb
mov
hlt
cmovo
sbb
int
mov
std
push
and
lret
out
shrl
sbb
sbb
cmp
adc
dec
loop
push
aaa
stc
sub
cld
pop
adc
mov
scas
daa
cmp
pop
mov
sar
add
xor
repz
out
or
adc
cmc
mov
push
xor
fsts
adc
xlat
cwtl
imul
pop
stos
add
mov
lods
dec
jecxz
mov
xlat
mov
clc
sub
and
arpl
sti
jecxz
and
gs
cmp
push
js
inc
sub
inc
les
or
repz
xchg
xchg
pop
cs
cmp
ljmp
iret
repz
adc
push
daa
pushf
aam
xchg
jmp
inc
fisubrl
adc
push
aad
lods
jg
ljmp
jb
test
mov
lods
mov
nop
movb
cmc
call
ret
mov
cltd
xorl
imul
and
aam
aam
mov
inc
jb
mov
test
pushf
jmp
and
pop
inc
sarl
xchg
clc
negb
std
inc
ds
lods
xor
cmpsl
adc
sarb
insl
xchg
push
push
mov
push
fdiv
or
sub
test
jmp
or
ret
cmpb
scas
sbb
in
repz
repnz
imul
pushf
mov
mov
fnstcw
add
push
cltd
cli
call
mov
jo
frstor
clc
int3
push
out
sbb
xor
rcll
mov
filds
shr
int3
or
push
cmpl
popa
or
cwtl
xchg
mov
cmpsb
clc
push
dec
dec
mov
sbb
mov
mov
or
fsubl
push
pop
jnp
add
pop
movsl
lret
out
addb
cmp
jns
dec
out
in
or
mov
or
mov
cmp
pop
addr16
or
jb
mov
lret
mov
into
call
jne
mov
ffreep
push
fcoms
push
ja
xchg
jo
mov
out
cmpsb
shl
sbb
stos
pop
in
and
loopne
jnp
ja
jle
js
in
cld
pop
pusha
inc
mov
leave
ret
jae
test
inc
inc
aaa
and
push
add
test
sti
mov
cmp
lods
sbb
jecxz
imul
add
jl
or
pop
and
dec
loope
repnz
mov
adc
push
inc
pop
cmp
push
mov
int
add
shlb
mov
mov
sbbl
sarb
scas
cwtl
daa
mov
cmp
lahf
js
rcl
push
jecxz
out
jbe
cmp
jge
insb
fistps
or
dec
daa
adc
cmp
mov
jl
bound
push
inc
inc
push
jp
inc
xor
mov
aas
jg
lahf
out
test
cmpl
inc
dec
ret
mov
outsl
lret
push
push
addr16
lock
fwait
pop
add
les
xchg
xor
hlt
ds
movsl
cmp
mov
cmp
or
xchg
cld
xor
jnp
xor
dec
push
rcll
pop
pop
js
sub
mov
pop
lcall
pop
fdivl
lcall
xchg
jo
outsb
enter
and
mov
sbb
test
repnz
out
push
sub
add
jno
fmul
pop
test
inc
out
mov
ss
sbb
jo
sahf
cs
int
add
sbb
lock
in
mov
ret
jo
adc
bound
cmp
sbb
out
test
dec
xor
sti
mov
cmp
or
mov
push
adc
cmc
jle
popa
xor
pop
pop
push
cmpl
ss
add
inc
adc
xor
mov
sub
adcl
in
into
out
sti
xchg
aas
dec
push
mov
pop
sbb
dec
mov
test
pop
sbb
mov
les
shl
dec
pop
inc
xchg
loop
lret
sbb
sbb
imul
nop
movsl
pop
xorb
pushf
jg
jmp
ja,pn
push
aad
lcall
sbb
xorb
scas
dec
sub
or
dec
jecxz
stos
push
mov
lea
cmpsl
call
orl
add
fistl
push
pop
ja
in
inc
jmp
int3
das
mov
cmpsl
mov
xor
insb
rorl
leave
mov
cwtl
push
inc
add
and
icebp
inc
mov
orb
imul
lock
xchg
xchg
or
fsubrl
loopne
outsb
aam
andl
es
sub
orl
ljmp
jno
mov
sarl
mov
iret
cs
and
add
fcomps
pop
nop
cmp
xor
sbb
pop
jge
xchg
lahf
add
cmpsl
mov
pop
mov
stos
sub
out
out
das
mov
push
pop
fcmovb
jmp
xor
mov
daa
into
sub
sub
mov
test
push
xchg
sarl
aam
add
or
fwait
cld
lods
popa
push
add
mov
add
out
pop
xchg
stos
bound
xchg
pop
in
sub
ds
lahf
mov
lods
inc
mov
divl
movsl
outsl
clc
push
mov
mov
mov
xchg
sbb
les
jne
add
lahf
rcll
fbstp
xchg
popf
adc
xchg
cmp
filds
icebp
inc
aas
sub
int
loope
xchg
push
sbb
lret
insb
test
ljmp
in
sti
pusha
fbstp
iret
arpl
les
filds
inc
inc
lret
mov
jl
les
nop
mov
aaa
out
fcmovu
push
inc
xchg
sbb
fdivrl
scas
sub
out
ret
mov
adc
lds
mov
pop
jle
leave
movsb
push
hlt
pushf
iret
push
arpl
mov
inc
or
or
xor
jns
popa
pop
ljmp
xchg
test
sti
fmulp
mov
lds
imul
imul
movsb
dec
jne
xor
jne
idivb
ret
sbb
lcall
mov
mov
mov
push
pop
push
loope
mov
mov
lahf
pop
daa
out
jb
or
dec
fsubl
cmpsb
repnz
and
ds
enter
pop
inc
mov
push
mov
fisubrl
scas
fistpll
div
push
ds
sbb
and
fdivrs
imul
push
xor
out
xchg
xchg
jle
pop
lahf
adc
js
xor
test
xor
add
pop
mov
sub
xchg
lahf
adc
dec
icebp
cmpl
daa
pusha
mov
xor
mov
dec
push
and
pop
bound
stos
std
int
jecxz
dec
sub
andb
fsubl
rcr
add
sbb
popa
sahf
roll
dec
test
roll
repz
int
dec
cmp
adc
sub
xor
or
fcom
dec
mov
out
cmpsl
mov
out
lds
push
cmc
mov
stos
out
into
xor
mov
dec
pop
outsl
sub
adc
out
in
mov
fildll
xor
xor
xor
sub
cltd
mov
cmp
sti
inc
jecxz
decb
pop
mov
lods
cmp
dec
adc
inc
dec
sub
cmp
inc
pop
movsb
repz
adc
xchg
movsl
lret
sbb
push
pop
add
push
fwait
pop
xor
jnp,pn
sub
push
ficoml
aad
jmp
nop
mov
jl
jb
xor
dec
mov
stos
add
push
mov
push
fldl
cmc
mov
enter
dec
jg
pusha
sbb
dec
out
test
fstpt
or
sbb
inc
test
movsl
das
addr16
nop
mov
jmp
inc
ljmp
shrb
and
and
push
push
push
icebp
sbb
cld
xchg
mov
mov
sbb
ret
xchg
mov
rcr
fwait
sbb
xlat
fisubrs
xor
mov
adc
insl
xor
movsl
dec
jmp
push
fucomp
jo
outsl
popa
sti
pop
outsb
lods
hlt
sbb
mov
jecxz
mov
lret
xchg
cmpsl
add
cmp
test
cmp
stos
pushf
mov
negb
fnsave
and
jle
inc
shlb
xor
fisubrl
xchg
fmuls
push
aaa
or
and
ds
or
scas
jo
cli
jbe
xchg
jmp
xor
lds
fmull
mov
lods
out
dec
add
fwait
sub
xor
dec
adc
add
in
bound
jnp
in
popf
mov
mov
shr
pop
jge
pop
mov
andl
cmc
jp
in
sub
mov
add
dec
jne
fadd
mov
push
sub
jmp
push
sub
andl
je
mov
enter
shlb
stos
in
in
and
mov
jnp
mov
jnp
sbbb
inc
aad
ret
ret
inc
pop
push
in
inc
dec
dec
inc
push
xchg
xchg
jno
push
inc
mov
fimull
dec
insl
sbb
stos
jmp
idivb
loopne
mov
mov
adc
jge
mov
jb
mov
fcmovnb
call
arpl
inc
ljmp
pop
adc
push
mov
or
sti
pop
add
add
in
sbb
pop
mov
mov
adc
shlb
or
inc
push
push
cmp
movsb
push
pusha
push
sbbl
jge
pop
mov
sbbl
or
mov
pop
dec
cld
xchg
inc
fwait
stc
xor
jno
aaa
lahf
adc
test
sbb
int
push
cmp
in
and
inc
dec
pop
cmpb
push
add
loope
adc
sub
cld
imul
cs
ds
xor
and
cmpsl
cli
dec
ret
cmpb
add
es
lret
in
xchg
ficoml
pop
cmp
loopne
or
jbe
sbb
sub
sub
adc
ficoms
and
push
jg
cmc
jecxz
out
jp
pop
mov
adc
add
sub
scas
cld
movsb
int
gs
imul
jge
lret
daa
shll
mov
mov
jecxz
test
outsb
rolb
into
sbb
xchg
add
fsts
adc
mov
cmp
icebp
jp
in
sub
cli
sbb
out
fstl
push
cmp
out
cmp
aam
or
xorl
jnp
pop
mov
and
pop
ret
lock
mov
insb
sti
add
data16
mov
call
jge
inc
mov
clc
sub
insl
xor
movsb
cwtl
sti
lock
adc
mov
daa
imul
loopne
xchg
ds
jb
inc
inc
popa
xor
jne
push
add
adc
xor
cwtl
cmp
xor
and
pushf
aad
out
jmp
pop
std
cs
mov
push
aas
pop
test
bound
xor
jecxz
pop
mov
jae
insb
repnz
mov
mov
xchg
dec
xor
test
in
pop
mov
in
inc
inc
ret
xlat
das
inc
mov
mov
mov
xor
sub
std
cmp
xor
or
movsb
add
repnz
lret
mov
fimuls
fimuls
cmp
imul
into
and
aam
push
ret
das
push
shll
aaa
mov
movsl
dec
in
jmp
ljmp
iret
lods
pop
push
arpl
cltd
ljmp
mov
xor
sub
lar
lds
mov
test
add
fldenv
daa
xchg
xchg
cmp
push
daa
icebp
pop
loopne
xchg
stos
or
xchg
adc
and
xor
adc
cmp
mov
scas
std
dec
jle
add
stos
xchg
dec
rcrb
mov
push
ficompl
inc
scas
dec
add
stos
leave
fs
sbb
out
popa
jns
or
in
arpl
xchg
fsubl
mov
dec
mov
insl
jnp
insl
cld
lahf
jp
mov
pop
mov
outsl
add
or
jne
adc
mov
adc
lea
jmp
rcr
pushf
xor
mov
sub
ret
xchg
repz
psadbw
stos
pusha
hlt
jge
clc
xchg
sub
mov
jle
cmpsl
shl
outsb
fistpl
iret
and
ret
mov
dec
and
jae
addr16
push
dec
mov
popf
ret
sub
inc
inc
xor
cmpsb
loope
lret
lahf
jmp
imul
lret
scas
out
inc
inc
push
push
and
adc
dec
fistpll
lds
hlt
xor
jnp
adc
fmuls
sub
bound
orl
and
iret
arpl
pop
inc
aas
outsb
fimuls
in
cmpsl
lds
in
sbb
aad
xor
cld
aam
movsb
popa
stos
cmpsl
push
rcrb
cmp
int
jge
lods
add
cmp
mov
or
mull
jno
lock
jl
mov
mov
xor
int3
iret
cmc
lahf
inc
add
test
in
mov
cmpsb
clc
pushf
mov
enter
pop
mov
cld
push
loope
out
sub
sbb
insb
sub
and
in
pop
ret
enter
rcrl
cmp
inc
add
jno
xor
adc
sbb
stos
js
ja
pop
cmc
lods
and
into
inc
adc
sbbl
mov
fisttpll
sar
jle
jg
in
mov
push
sbb
scas
pushf
push
mov
cmpsl
int
jbe
sub
std
push
imull
push
or
or
ja
jb
nop
sahf
pop
mov
data16
lcall
icebp
stc
or
push
fs
dec
adc
imul
js
cmp
dec
sub
in
das
dec
and
xor
jns
cmpsl
push
cmp
cmc
rcll
push
pop
lods
test
adc
dec
cltd
adc
fldenv
cmp
test
scas
jno
sub
pop
add
in
imul
sti
lahf
jbe
shrl
gs
push
loopne
add
dec
roll
inc
je
jbe
push
add
repz
adc
push
lods
sbb
hlt
loopne
fwait
sub
ja
iret
pushf
sub
jmp
in
test
aad
mov
lods
aas
stc
fnstcw
mov
mov
fsub
movsl
jecxz
mov
xchg
jbe
lea
pop
fs
shll
rclb
pop
dec
lds
sbb
xlat
pop
pusha
rcrl
fildl
fisubrs
and
outsb
js
push
lods
dec
and
ja
shll
push
imulb
pop
std
jecxz
stc
cwtl
cltd
das
lds
mov
fisubl
cld
fstpl
jle
and
mov
mov
jns
movsl
pop
push
fcmovb
rolb
push
gs
fnsave
ret
mov
fiaddl
dec
fucomip
ljmp
sbb
add
mov
mov
inc
cmpsb
mov
mov
cltd
cltd
add
test
xchg
mov
cli
ljmp
and
clc
mov
sbb
shrl
cmpsb
stos
clc
pop
aam
pop
daa
inc
xchg
push
sti
push
in
scas
idiv
sarb
in
rorl
fstpl
or
mov
mov
daa
dec
in
inc
test
fldcw
ja
sub
dec
lods
dec
sbb
or
jl
fwait
mov
lcall
jmp
xchg
lahf
add
std
sbb
bound
fidivrl
cmp
in
jle
xchg
sub
adc
mov
sub
or
les
data16
repnz
inc
pop
mov
ficomps
loop
mov
pop
mov
iret
jno
cmp
xchg
xchg
push
out
jmp
pushf
out
addl
pushf
sub
mov
push
pop
stos
shll
out
insb
vpsadbw
adc
cmp
jne
es
mov
je
cmpb
ret
outsl
pop
test
rolb
jae
leave
adcl
ljmp
inc
mov
mov
xchg
and
push
sbb
shll
push
pop
clc
push
cwtl
insb
adcl
enter
sbb
outsb
leave
leave
out
out
hlt
jge
jl
cld
jp
inc
adc
lahf
push
sahf
mov
stc
jae
pop
mov
int3
mov
test
fidivs
xchg
sti
shr
into
scas
adc
pusha
and
sarl
fisubl
sub
out
jge
sbb
push
xor
cmp
jp
mov
cmp
jae
adc
fdivs
xor
daa
xchg
jle
fs
rclb
mov
push
scas
mov
inc
xchg
cmpsb
jnp
leave
in
repz
enter
pop
sub
push
stos
jge
xor
mov
cmp
call
in
push
mov
in
mov
js
sbb
pop
add
imul
xor
fnstsw
pop
adc
jmp
pop
je
xor
push
fcomps
add
lock
adc
adc
mov
loopne
inc
mov
in
and
mov
add
sub
imull
call
rcrl
and
mov
adcb
push
mov
mov
lods
fiaddl
rorb
out
mov
push
aaa
and
scas
fdivrs
add
mov
jmp
cmp
fcoms
push
shrb
into
ficoms
dec
cmc
lcall
pop
int3
cmp
imul
or
mov
lods
int
mov
cmp
add
lea
pop
in
jp
mov
dec
data16
divb
mov
jl
loopne
and
xor
stc
inc
xchg
inc
fstps
dec
je
test
mov
sbb
add
loop
pop
dec
mov
rcrb
inc
or
add
xchg
xor
adc
or
je
add
jecxz
xchg
out
xchg
mov
pop
call
jge
test
and
mov
int3
pop
add
inc
bound
inc
stc
leave
popf
das
add
dec
mov
push
pop
out
xor
inc
rol
enter
pop
lret
std
mov
cli
cmpsl
or
sbb
mov
repz
xchg
inc
xchg
insb
cli
adc
aam
mov
je
inc
rclb
sub
pushf
ret
dec
loop
es
push
sbb
jg
xchg
sbb
cmpsb
push
popa
inc
inc
subl
loope
fisttpl
jmp
add
mov
mov
pusha
push
aas
or
clc
repz
roll
pop
pop
stos
roll
sub
pop
movsl
add
mov
data16
sbb
xchg
xor
popa
insl
or
or
push
inc
and
mov
lds
pop
adc
int
lock
mov
push
loopne
mov
inc
or
loopne
ljmp
ret
pushf
or
jbe
jp
test
lahf
mov
mov
jecxz
adc
adc
mov
mov
jno
dec
stc
add
push
imul
mov
mov
mov
dec
xchg
jmp
popa
pop
xchg
addr16
mov
std
dec
les
mov
stos
inc
stos
inc
sub
push
insb
xor
stos
jle
ss
sub
iret
fistpll
mov
inc
outsb
mov
jae
outsb
aad
sarb
popf
adc
mov
xor
fisubl
mov
sbb
or
scas
mov
hlt
push
fistps
bound
lahf
sbb
mov
imul
hlt
enter
or
movsb
inc
push
test
or
and
jb
pop
jae
or
or
movsl
insl
jne
movsb
adc
push
test
rolb
add
sti
jae
cmp
popa
movsb
ja
push
push
outsb
js
jbe
jae
jge
cmc
scas
sbb
and
cmp
into
cmc
jl
outsl
orb
mov
jmp
aam
jo
push
or
or
aaa
add
jp
mov
adc
shll
scas
mov
xlat
mov
jg
add
jbe
dec
stc
dec
sub
fcoml
jno,pt
fldenv
adc
pop
mov
lret
in
add
mov
cmp
mov
or
xchg
aas
fldl
rep
cmp
push
das
shll
mov
shrl
repz
adc
mov
arpl
shlb
mov
mov
cmp
mov
out
int
inc
push
sub
enter
jnp
lret
cmpsb
shll
sub
jo
sahf
pop
cmp
mov
dec
loop
loop
clc
movsl
stc
ja
sbb
pop
adc
pop
xor
test
arpl
rclb
ljmp
xor
push
cmp
push
and
test
ljmp
sbb
cmp
aaa
pop
jmp
std
adc
addb
cmp
nop
mov
data16
adc
mov
jle
ss
cmc
xlat
sub
adc
add
mov
in
dec
sti
std
sbb
sbb
sub
dec
loopne
pop
push
dec
test
test
xchg
js
jae
and
push
fwait
cmc
xchg
mov
jg
movsl
loopne
cmp
ds
repnz
incb
adc
jmp
pop
adc
mov
adcl
inc
inc
jb
mov
cmpsb
je
jae
jecxz
mov
xchg
jb
lea
mov
pop
mov
jmp
mov
loop
dec
fwait
adc
fstpt
fidivs
inc
jmp
loope
das
jecxz
stc
mov
lds
cmc
rcll
and
cmp
or
mov
icebp
ja
out
cld
xor
daa
mov
ret
xor
lock
fwait
pop
pop
xchg
enter
mov
loope
pop
mov
nop
shlb
into
subl
cmpsb
jecxz
pop
ss
cmp
inc
popa
push
hlt
mov
mov
xor
nop
and
pop
movl
mov
data16
addr16
add
fisttpll
imul
mov
xchg
xchg
cltd
sbb
dec
in
rcrl
fstpl
pop
stos
gs
xor
xchg
hlt
loopne
push
mov
insl
sub
mov
cld
xor
int3
hlt
mov
mov
daa
out
sbb
ret
sbb
xchg
ds
inc
sbbb
fwait
out
inc
push
das
ja
add
sti
mov
cmp
jp
jns
xchg
in
scas
stos
xchg
leave
lahf
stos
mov
cltd
sbb
sahf
mov
scas
jp
push
inc
mov
push
cmpb
cmp
jne
sbb
data16
xchg
mov
jl
xchg
xor
sub
mov
das
xchg
sub
mov
mov
stos
mov
int
fwait
data16
jge
jle
imul
cmpl
pusha
out
aaa
iret
ds
dec
ret
js
repnz
add
mov
mov
popf
cmp
pop
adc
inc
mov
cld
ficompl
popf
xchg
shlb
sub
dec
imul
push
es
xlat
adc
and
mov
test
and
ret
sbb
or
fwait
push
and
sbb
mov
add
mov
pop
rcrl
fdivp
ljmp
and
and
into
pop
movsb
add
push
mov
jne
jge
lock
insl
popa
in
or
sbb
mov
jae
jl
xchg
dec
mov
dec
repnz
fstl
lahf
mov
jns
test
inc
in
sbb
movsb
sahf
iret
cmpsb
addl
in
jl
subl
cmp
jns
cmp
and
xchg
push
into
movsl
gs
loopne
lods
pop
or
enter
loopne
pop
add
pop
xchg
xor
sub
out
pop
bound
addb
sub
push
mov
xchg
sbb
into
xchg
inc
outsb
push
in
cs
nop
jmp
lods
mov
dec
and
outsb
mov
push
mov
add
sub
xchg
jmp
mov
or
rol
pusha
fimuls
out
rcrl
cs
mov
outsl
sub
loop
dec
and
cs
pop
fs
cmp
test
cmp
jnp
shl
jmp
enter
repnz
sahf
lcall
push
pop
cmc
sub
pop
or
or
daa
sub
push
add
push
pop
retw
lods
fwait
in
mov
popf
push
xlat
imul
jae
mov
push
ljmp
cmp
push
xchg
or
inc
sbb
pop
inc
jmp
mov
sbb
jnp
jne
jno
cmp
cmc
iret
adc
pushf
addl
mov
leave
cltd
mov
nop
out
std
aas
cmpl
call
pop
addr16
aaa
or
mov
sahf
cmpsl
loopne
call
mov
mov
mov
push
out
xchg
cmp
push
test
inc
rolb
mov
shrl
ret
mov
jl
mov
dec
inc
outsb
shll
divb
repz
fadds
fwait
cmpsl
or
or
push
and
add
pop
and
lret
outsl
insb
cmp
mov
stc
dec
lock
ja
cli
inc
jle
stos
movsb
lret
cs
ret
imul
inc
out
mov
dec
shlb
xchg
fwait
cmp
scas
aad
popa
outsb
lds
lods
or
mov
and
dec
pop
mov
cmpsb
add
add
push
fistps
popa
insb
inc
mov
test
fnsave
call
xchg
out
lret
mov
pop
stos
lds
mov
xchg
cmp
inc
lcall
or
pop
xor
movsl
lea
mov
xlat
das
test
inc
ja
dec
xchg
test
lock
in
fwait
push
jns
push
shlb
ja
push
adc
mov
ljmp
sbb
push
mov
bnd
mov
sbb
xor
jp
in
aam
movsb
push
dec
mov
sub
movsl
dec
push
fwait
xorb
ret
jg
fistps
popl
cmp
xchg
std
imulb
subl
xor
add
mov
push
or
stos
sub
xlat
and
insb
push
jecxz
jnp
push
call
in
daa
cli
pusha
cmpl
ret
daa
pop
sub
dec
jae
xchg
popf
pop
pop
cmpsb
mov
xor
ret
pop
int3
sbb
sbb
dec
inc
scas
jp
jle
insl
cmpsb
push
adc
xchg
mov
adc
leave
cs
pop
hlt
pop
jns
arpl
int
inc
sbb
pop
or
push
dec
sub
fistpl
xor
add
and
int3
jnp
iret
pop
add
imul
ror
lds
dec
test
and
mov
cmp
adc
movsb
lea
push
or
shlb
ljmp
sub
daa
or
icebp
cmp
jno
cmp
jl
jae
dec
daa
nop
sahf
push
scas
pop
inc
xor
cmp
lahf
shl
push
fs
or
or
cmpsb
add
and
test
aas
enter
pop
mov
icebp
stos
loope
fwait
push
sub
jmp
cmp
mov
icebp
movsl
insb
dec
push
pop
aad
push
sbb
xchg
sbb
loopne
add
push
dec
xor
mov
pop
mov
js
pop
push
pop
icebp
stos
hlt
lcall
cmc
fsubl
das
sub
fiaddl
shrb
push
jg
lret
in
xchg
mov
jnp
dec
add
mov
movsb
subb
jecxz
imull
insl
mov
mov
repnz
xor
sahf
mov
mov
andb
enter
jmp
fs
rcl
adc
iret
ss
or
cmp
ss
out
outsl
ds
sbb
std
cmp
shrb
fdivl
xchg
in
out
mov
xor
ret
jae
sub
adc
mov
mov
jecxz
ja
leave
inc
jne,pt
and
mov
jae
stos
bnd
mov
mov
int
pop
inc
cmp
and
dec
jl
dec
dec
dec
scas
inc
shrb
inc
cmp
les
div
xchg
aaa
test
rep
stc
cmp
dec
push
pop
addr16
rcr
jp
sub
xor
cs
not
nop
pop
xchg
nop
ret
aas
jne
out
jb
mov
dec
push
jmp
add
sub
mov
mov
popf
fimull
rcr
push
mov
adc
mov
and
leave
fistpl
mov
inc
dec
dec
movsl
das
mov
sbbb
xor
and
aad
shll
adc
cwtl
test
cmpsl
or
dec
mov
and
jns
lret
fisubs
mov
psrad
in
xchg
pop
rol
push
ror
add
sub
lock
cli
mov
es
fmull
dec
lret
mov
xchg
fcmovb
test
and
popa
test
sub
dec
ret
arpl
xchg
mov
syscall
mov
mov
mov
in
push
mov
push
pushf
std
ret
cmp
xor
and
je
jbe
or
pop
aaa
pop
mov
mov
repz
in
push
xchg
addb
push
pop
loop
cmp
adc
xor
add
xor
rcrl
mov
push
test
out
ja
out
aam
jns
jl
mov
adc
fwait
inc
push
adc
jne
jo
jns
sub
xor
bound
jns
arpl
xchg
outsb
ret
mov
scas
pop
adc
jge
push
cmp
mov
cli
int
xor
xchg
stc
and
mov
lea
xchg
ficoml
jmp
enter
mov
push
repz
stos
push
pop
push
dec
xchg
jp
lahf
enter
in
insb
jno
jno
mov
hlt
jle
mov
in
je
pusha
sbb
sahf
iret
cld
push
icebp
ret
ficomps
pop
cmpsb
inc
cltd
divl
clc
in
sbb
cmp
rorl
jp
mov
lods
fcmovb
mov
icebp
sbb
loopne
imul
insb
push
mov
adc
jo
mov
fs
push
leave
movsl
hlt
mov
test
sbb
or
xchg
into
cmp
lcall
add
mov
pop
xor
fidivrs
mov
jnp
nop
push
and
movsb
sbb
jg
cltd
sar
jge
xchg
dec
sbb
mov
cmp
pop
or
adc
daa
jl
xor
dec
xchg
stos
jecxz
xchg
pusha
ss
xchg
arpl
loopne
adc
cmc
pop
sbb
inc
push
inc
ret
cmpsb
xchg
in
mov
rclb
cli
xor
dec
loope
and
cmp
into
jae
jae
bound
jecxz
ja
xor
hlt
sub
pop
sbb
xchg
add
fwait
in
insl
out
jp
jmp
fprem1
js
ret
jo
sbbl
or
fmull
mov
lods
mov
outsb
push
mov
or
inc
aas
push
jg
iret
dec
mov
xchg
mov
mov
leave
pop
and
push
sarb
mov
or
push
dec
fcomip
imul
sar
cmp
sahf
inc
sub
cmpb
dec
loop
mov
stc
pushf
roll
dec
add
cmp
icebp
icebp
and
or
dec
xor
out
call
or
addr16
into
push
aam
mov
inc
xor
stos
pop
dec
xor
adc
imul
pusha
lods
enterw
imul
mov
sub
arpl
mov
or
jg
sbb
gs
and
jmp
push
sub
fnstcw
sbb
xchg
rorl
repz
sbb
icebp
and
outsl
je
pop
sbb
sbb
sub
pop
pushf
xlat
xchg
xor
pop
cmp
bound
aad
adc
nop
popf
psubd
adc
push
jb
pushl
je
mov
faddp
mov
xchg
call
jns
lods
mov
je
dec
pop
pop
inc
fcmovne
mov
jge
jle
inc
inc
gs
loopne
addb
mov
pop
mov
idivb
or
cwtl
inc
xor
pop
lods
inc
mov
cld
insb
mov
lret
dec
mov
push
mov
mov
pop
lock
shlb
cmp
aam
pop
pop
ret
mov
insl
subl
xchg
adc
xchg
aam
popa
pushf
shl
lods
loope
std
mov
imul
mov
sbb
cmp
test
popf
mov
mov
push
dec
cwtl
cmp
clc
fucomip
dec
xchg
push
push
rcrl
inc
pop
loop
adc
inc
call
rclb
mov
dec
xor
jno
xor
push
shlb
shll
test
sbb
ja
ljmp
inc
pop
cwtl
or
movsl
lcall
shll
add
dec
cs
fnstenv
in
out
lods
xchg
mov
mov
stos
decb
mov
iret
aaa
or
push
les
pop
mov
les
lcall
ja
jmp
xchg
xor
movsl
fs
xchg
cli
sti
orl
out
xchg
loopne
or
inc
xor
add
insb
fcoml
jnp
push
loopne
xchg
ret
cwtl
and
or
pop
pop
mov
pop
xchg
and
inc
lcall
push
fdivrl
popf
lods
into
je
push
jecxz
inc
das
xchg
aad
out
sbb
jp
imul
scas
inc
or
adc
or
repnz
ror
nop
movsl
hlt
hlt
push
push
inc
lods
push
inc
and
fisttps
or
add
or
int3
jae
push
jno
pop
pusha
pusha
neg
loopne
ss
shlb
scas
outsl
jge
and
xchg
inc
mov
mov
pop
test
jge
aaa
pop
sbb
cld
out
push
mov
call
enter
mov
push
jne
repnz
out
mov
lahf
out
inc
push
or
imulb
cmpsb
mov
inc
push
and
cmpsb
or
jbe
add
ret
fdiv
pop
cmp
sub
cmpsl
int
sub
dec
movsl
cmp
outsb
ds
sbb
movsl
jp
push
and
push
xchg
jecxz
addb
movsb
sbb
cmp
xor
test
lods
sub
pop
xlat
cmp
js
shlb
out
ret
add
xor
mov
popf
sub
xchg
adc
and
inc
jg
xlat
shlb
lcall
and
stos
push
ret
movsl
int
xchg
pop
sub
dec
sub
sub
lret
jnp
xchg
cmp
sub
xlat
sbb
xchg
test
push
addr16
insb
outsl
mov
loop
jbe
stc
push
js
cmpsb
dec
das
adc
cmp
ss
mov
fsubrs
push
cli
jle
cmp
mov
jle
or
pusha
into
dec
rcrl
cmc
jge
xor
cli
loop
pop
lods
subl
cmp
add
mov
push
and
mov
sub
push
adc
xchg
cltd
push
sti
mov
data16
gs
sbbl
or
inc
out
neg
mov
add
xchg
repz
bound
sbb
sub
arpl
out
and
pop
int
xor
pushf
adcb
cs
aad
xchg
js
sub
mov
dec
jb
jle
dec
pop
mov
or
mov
test
fdivs
adcb
in
push
dec
inc
rorb
ss
pop
xor
inc
add
add
add
mov
cld
push
rcll
pop
idiv
lret
int
cmpsl
cwtl
sti
test
push
lods
hlt
mov
rorl
xchg
lret
mov
into
dec
mov
addr16
fwait
in
pop
pmullw
shlb
sub
jb
ret
sbb
daa
es
adc
mov
or
xchg
pop
pop
fwait
ljmp
dec
lods
dec
push
aas
mov
mov
and
lret
cmc
loopne
ret
lods
addl
sti
mov
test
jae
push
push
fucomp
ret
dec
clc
sbb
cmpsl
xchg
mov
repz
clc
sub
stos
mov
xchg
adc
aas
jp
pushf
xor
push
sbb
push
dec
divb
das
mov
dec
dec
cmp
xchg
ja
push
dec
pop
xchg
dec
inc
fmulp
mov
fwait
mov
fld
add
ficoml
out
add
aad
in
das
shll
xchg
add
mov
mov
mov
imul
inc
jp
idivb
sub
les
dec
pop
dec
mov
sahf
inc
mov
jecxz
fcomip
aas
dec
xchg
or
jmp
pop
cli
cs
nop
out
inc
aaa
sub
mov
jae
stos
test
dec
and
push
imul
enter
inc
pusha
push
mov
iret
mov
mov
pop
into
fisttpll
jg
jae
cmpsl
or
popf
aam
jmp
inc
scas
dec
dec
fisubl
loop
xchg
sub
xor
out
imul
scas
mov
fs
adc
or
or
sbb
aas
cmp
arpl
and
or
xchg
mov
jl
dec
add
fcmovne
cmp
inc
pop
ds
addl
dec
cmp
loopne
scas
dec
lock
and
adc
movsb
sbb
jbe
add
jge
ret
pop
push
jmp
jno
outsb
cmpl
rorl
inc
stos
xor
dec
lahf
push
sti
inc
push
fldl
test
jno
icebp
inc
loopne
inc
cmpsb
lea
in
pop
cmp
enter
pop
js
sbb
loope
pushf
mov
cmp
pop
push
movsl
xorl
bnd
adcb
sbb
jg
or
cwtl
outsl
lods
mov
incb
mov
lcall
stos
fsubl
xchg
sub
pop
sahf
adc
cld
in
jg
loop
mov
mov
mov
adc
and
cld
push
movb
loopne
sub
into
mul
sbb
fmul
rol
sub
orb
jecxz
mov
jns
dec
push
addl
push
cwtl
aam
or
sub
or
sub
js
cmp
addr16
out
leave
mov
jae
xchg
adc
cmp
sbb
xor
jmp
xor
inc
mov
adc
js
imul
jnp
data16
sub
lods
aaa
xor
mov
mov
jmp
cld
jnp
sti
push
in
mov
sub
dec
push
scas
inc
stc
vpsubusw
jns
les
jle
xchg
cmpb
push
adc
insl
push
sti
pop
sbb
adc
xchg
inc
pushf
sub
dec
ret
cs
sti
add
gs
int
push
mov
shll
xor
je
nop
sub
cmpsb
push
lea
call
divl
jno
jne
push
subl
ja
pop
aad
lods
inc
mov
dec
das
ds
mov
pop
rcll
and
mov
shll
add
je
fcomps
add
out
icebp
stos
fs
or
sub
fmuls
push
test
loopne
bound
rolb
push
sub
xor
es
pusha
ret
lret
mov
outsb
sbb
popa
lret
lods
mov
sahf
mov
mov
adc
add
mov
mov
jmp
push
lock
in
mov
lahf
xor
xchg
push
fstl
jge
clc
push
adc
xchg
mov
or
test
out
or
and
push
ljmp
xor
xlat
insb
or
ret
sbb
mov
fildll
mov
cltd
test
inc
inc
ja
outsb
dec
dec
push
out
jg
jne
testb
ficomps
pop
aam
add
sbbb
bound
xchg
jge
in
addr16
xchg
push
mov
ret
mov
inc
rcll
lods
cwtl
jp
popa
mov
jle
mov
out
loop
mov
stc
in
mov
sub
lea
mov
dec
jle
imul
stos
mov
dec
push
pop
sub
mov
jae
mov
mov
jle
shl
cmpsb
mov
pusha
in
or
push
or
pop
add
jo
jae
in
push
bound
cmpsb
mov
sub
add
xchg
adcl
subl
imul
scas
push
lcall
shll
and
jecxz
pop
pop
leave
or
arpl
loopne
sub
pop
or
add
mov
xlat
xchg
mov
outsl
cwtl
cmp
jnp
mov
daa
imul
mov
stc
add
xchg
scas
sub
fwait
arpl
mov
inc
movsb
mov
loop
jbe
inc
push
jge
xor
adc
jge
add
or
mov
xchg
cmp
cmp
mov
movsb
adc
lahf
cmp
mov
test
cmp
jecxz
outsl
and
adc
stc
in
inc
sarl
mov
test
insb
loope
popl
cmp
mov
inc
xchg
adc
mov
mov
push
push
jne
daa
push
test
repz
add
jb
xor
xcrypt-cbc
cmpsl
xor
stos
js
js
pop
in
jmp
pop
push
cmp
dec
sub
movd
sbb
rcl
aad
jg
repnz
mov
mov
mov
bound
mov
push
int
adc
cmpsb
popa
pop
lret
mov
rorb
add
sub
ljmp
test
mov
orb
outsl
test
loop
in
lahf
stc
rcl
fs
out
ss
jmp
fsubs
rol
in
stc
cli
in
add
cmp
mov
or
mov
outsl
cmc
or
pop
movsl
xchg
jecxz
lds
imul
outsb
test
or
lods
push
ret
sbb
cli
xlat
cmpsb
mov
sub
cli
lods
in
xor
pop
mov
gs
jne
loopne
ss
dec
leave
xchg
xchg
inc
or
sbb
and
lods
repz
bndldx
mov
or
das
sbb
pushf
fcomps
cmp
aam
pop
cs
xchg
inc
nop
cs
shlb
sbb
je
stc
push
jecxz
and
test
sbb
call
mov
push
mov
pop
addl
repz
ret
mov
inc
adc
inc
mov
sbb
rorl
and
jae
shr
outsb
aaa
testb
xlat
cwtl
jno
shlb
push
fcom
icebp
addl
lret
lcall
mov
dec
fdivp
push
sbbl
sub
jg
and
ss
rcrb
gs
cmp
dec
mov
add
out
sbb
loope
xor
movsl
inc
mov
or
xchg
sbb
leave
cltd
mov
bound
adc
push
xchg
cmp
mov
nop
addl
data16
inc
mov
shll
pop
jecxz
dec
stos
jo
das
out
jo
or
lds
mov
lret
sub
inc
loope
xor
sarb
mov
lret
dec
sbb
xor
ja
idivb
inc
or
mov
js
fwait
add
push
add
xchg
popf
outsb
push
out
hlt
repnz
or
jns
into
mov
andl
jae
je
jg
in
rcrl
jp
fs
jl
incb
loop
loopne
or
test
inc
jne
mov
mov
mov
xchg
scas
or
and
and
sub
xchg
jmp
push
inc
pusha
pusha
stos
imul
and
inc
subb
jnp
adc
jle
lods
mov
pusha
mov
ret
rcrl
movb
jae
addr16
and
and
js
lods
mov
das
xchg
push
sbb
aas
adc
scas
imul
adc
pop
repnz
loopne
cmpl
enter
js
sub
or
jge
mov
or
sbb
adc
int3
adc
lock
movsb
push
lds
inc
ret
sbb
add
cmp
sbb
inc
out
push
xchg
or
jbe
add
jge
subl
iret
arpl
daa
add
test
jno
inc
je
lret
jl
dec
push
mov
int
inc
xchg
je
lahf
pop
sbb
imul
decb
test
sub
enter
pop
testb
loope
cmpsb
push
sub
mov
cmp
cwtl
ds
jg
and
push
mov
push
cmp
js
sub
fiaddl
or
xor
pop
push
pop
dec
mov
lock
insb
ret
dec
lcall
jns
mov
sub
leave
rcll
ficompl
mov
cltd
repz
dec
push
mov
outsb
or
cwtl
lds
int
daa
add
cmp
aam
sub
lret
dec
rcll
mov
int
sbb
incl
rclb
mov
outsl
fs
hlt
loop
ja
stc
js
int3
fs
jg
adc
mov
mov
out
cltd
sahf
cli
pop
adc
xor
leave
cmp
rcll
into
mul
sarb
mov
in
les
adc
sub
inc
cmpsb
cmpsb
data16
js
add
vpmovmskb
sub
push
mov
sarb
decb
rolb
add
loopne
push
popf
dec
sub
movsb
fsts
pop
rclb
xchg
push
adc
sbb
lods
imul
out
mov
xchg
jmp
sbbl
sbb
repz
nop
or
aas
jb
xor
dec
mov
mov
jecxz
and
lods
sub
lea
inc
call
jne
decb
mov
jmp
pop
sbb
loopne
lcall
das
cld
loopne
mov
mov
and
lods
out
sarl
mov
out
ret
cwtl
sub
stos
cmpsl
add
mov
pop
rorb
lret
or
mov
mov
pop
div
lods
in
jle
insb
mov
in
ret
inc
sub
aam
stos
xchg
ret
lds
cmc
insl
pop
mov
cwtl
xchg
adc
inc
inc
popa
clc
lahf
xchg
lods
lea
js
push
out
mov
adc
add
loopne
push
add
cltd
test
lds
push
addr16
fstpl
xabort
xchg
xchg
pop
sarl
sbb
out
rcr
push
xchg
in
lahf
push
mov
xor
iret
xrelease
mov
mov
insb
xchg
in
outsb
dec
test
out
ja
add
inc
mov
adc
rcrb
movsl
or
sbb
out
mov
jo
bound
ret
mov
xchg
repnz
mov
xchg
mov
mov
add
jp
push
add
or
dec
push
fisubrl
fists
mov
jmp
mov
sti
ss
sbb
xchg
and
test
stos
fidivs
dec
and
mov
insb
mov
jg
push
test
jle
ds
rcr
pusha
and
iret
xlat
rolb
in
imul
jmp
jae
sub
or
dec
pop
mov
inc
sub
mov
sbb
sub
cmp
cmc
scas
int3
imulb
push
pop
cmpsb
add
mov
add
or
and
lret
arpl
call
in
push
push
imul
test
mov
pop
sbb
cmpsl
fisubrs
mov
scas
jmp
loop
xchg
dec
hlt
cmp
sub
iret
leave
rclb
jmp
jge
mov
sbb
cmp
push
test
in
jl
pusha
sbb
stos
in
push
add
add
pop
jmp
lahf
jnp
mov
cmp
out
adc
push
sar
pop
inc
lea
cmpsb
push
jbe
in
adc
and
xor
jp
loope
loop
sub
notl
cmp
adc
mov
pop
movsl
xchg
cltd
into
and
les
orb
sbb
lods
add
cli
aas
xor
jb
mov
mov
js
subl
lcall
push
fsubl
ret
jo
outsb
add
imul
cmpsl
sbb
adc
shrl
and
fsts
mov
test
mov
cwtl
mull
scas
lret
lret
shr
xchg
fimull
fistps
jmp
inc
jno
loop
xor
stc
das
mov
xchg
adc
mov
sbb
cwtl
sub
mov
xor
mov
fmull
std
pushf
push
into
fldcw
fs
cltd
shrl
xor
jl
pop
jecxz
cwtl
adc
test
xchg
jno
and
and
push
sub
mov
daa
add
and
fldt
cwtl
fists
mov
cmp
inc
jmp
xor
jns
mov
mov
inc
xor
mov
lret
repz
imul
fstl
cmp
pushf
icebp
ljmp
adc
xchg
lcall
test
jle,pn
jp
cmp
call
aas
das
pushf
push
jb
test
dec
xor
nop
je
lds
scas
adc
mov
sahf
call
xor
dec
mov
pop
xorl
out
adc
jmp
inc
in
imul
mov
jge
mov
dec
push
std
imul
cmpsl
add
pop
mov
das
andl
loop
lret
js
cmp
mov
jp
pop
outsb
xor
mov
mov
mov
outsb
push
aam
gs
ret
push
xor
fdiv
mov
dec
lods
scas
jne
push
rolb
aam
mov
lods
clc
pop
push
mov
sbb
add
aaa
fs
sbb
add
test
scas
mov
mov
mov
fldl
and
sbb
sub
pop
cmp
mov
ss
xchg
sub
daa
push
jnp
sti
push
lret
and
or
or
xor
sub
scas
jmp
xchg
mov
cltd
test
roll
test
mov
or
andl
adc
add
rcll
out
mov
jge
and
fsub
xchg
xchg
clc
xchg
inc
cmp
mov
jbe
sub
lock
jp
fucomi
mov
inc
stos
mov
xor
jne
dec
dec
fbstp
popa
cltd
mov
xorl
jmp
mov
sbbl
insl
out
fwait
jo
pusha
ljmp
les
push
sti
es
dec
jb
repz
jnp
mov
mov
mov
or
aaa
ret
cmp
inc
sarl
fwait
jae
aaa
enter
jmp
mov
stos
xor
sti
xchg
mov
std
imul
sbb
pop
adc
jbe
imul
outsl
xor
xchg
arpl
cli
movsl
or
jae
in
aaa
adc
push
add
xor
call
pop
dec
fimuls
fmuls
fs
stc
insb
mov
and
insl
sbb
fldpi
movsb
pop
add
xor
iret
out
jge
aad
sbb
fsubl
add
dec
cmp
mov
jl
sbb
dec
xor
push
in
and
mov
sbbb
dec
aaa
test
popf
loop
inc
sbb
outsl
cmpsb
cltd
repz
stc
out
enter
pop
je
inc
push
xor
loope
inc
in
cs
ljmp
pop
dec
and
in
movsl
andb
sbb
cmp
xor
jnp
cld
pop
lcall
pop
push
mov
push
ds
push
neg
sub
repnz
push
xor
sbb
cmp
mov
push
xchg
mov
sbb
mov
mov
inc
push
rorb
int
incb
sub
clc
jo
jecxz
insl
lret
vpmullw
jns
sahf
sbb
or
pusha
js
outsl
and
mov
stc
out
out
pop
inc
mov
imul
cmp
push
ret
loope
cmp
jge
mov
cmp
fmuls
insb
rolb
bound
cmc
pusha
mov
xor
pop
add
mov
ds
imul
dec
data16
lods
rol
xlat
mov
sbb
adc
or
in
test
sar
fbld
push
push
gs
aam
dec
out
add
outsb
xchg
fld
push
mov
jno
repz
sbb
push
mov
repz
dec
add
adc
inc
jmp
movsb
xor
loope
sub
sbbl
sbb
pop
push
dec
stos
jp
je
sub
jecxz
lock
mov
or
call
repz
mov
xor
fidivrs
fnclex
pop
mov
inc
test
mov
pop
xor
cmp
xor
sbb
mov
pop
jg
dec
mov
cwtl
mov
arpl
icebp
push
pop
cmpsl
cld
mov
test
out
mov
aad
cli
mov
cwtl
fdiv
bound
popw
stos
mov
and
bound
xorb
xchg
sahf
es
adc
dec
test
dec
xchg
xchg
jecxz
ljmp
outsl
lods
arpl
cwtl
mov
and
sbb
sahf
mov
fistpl
mov
sti
aam
fldl
mov
lods
dec
mov
xchg
gs
shrl
rcrl
nop
stos
cmp
adc
push
push
mov
push
xor
fisttpll
test
inc
mov
xchg
lret
sti
dec
push
bound
outsl
orl
shrl
fwait
mov
pushw
ljmp
add
bound
out
xchg
js
bound
and
dec
push
mov
add
mov
xor
sbb
fnstcw
push
push
mov
and
mov
jp
jne
dec
jg
cltd
sbb
xchg
out
or
jg
xchg
jp
out
xchg
cmpsb
sub
xchg
push
add
push
stos
les
and
xor
pop
xchg
test
jle
sub
cmp
loopne
iret
xchg
or
ret
pop
loope
das
inc
fdivrl
add
sbbb
push
jno
sub
fisubl
mov
sbb
js
imul
leave
scas
xchg
and
sub
dec
fptan
test
test
hlt
mov
lret
lods
roll
adcb
out
stos
xorl
cmp
int3
rorl
pop
jp
int3
fidivs
test
rclb
scas
test
lds
movsb
in
mov
test
push
jbe
in
jge
shll
daa
add
mov
test
jno
xchg
push
jl
movsl
dec
dec
lahf
rcll
xor
adc
lahf
mov
mov
test
push
push
push
cmpsb
sbb
daa
in
loopne
pushf
enter
pop
mov
add
popf
inc
loope
les
cltd
inc
cmp
cmc
movsl
movsb
stc
add
and
jnp
int
lret
xorb
sbb
shl
aas
shrb
testl
js
jmp
dec
cmc
push
xchg
repnz
fdivrl
dec
cmp
lret
xchg
aad
pop
pop
rolb
sbb
in
add
testl
push
aad
inc
int
mov
maskmovq
mull
int
rcrl
sbb
pop
flds
jnp
push
outsl
add
loop
dec
jmp
fs
imul
jmp
cmp
push
jmp
out
scas
or
xor
bound
or
cmpsl
pop
into
lahf
mov
daa
cmpsl
adc
scas
pop
and
adcb
test
adc
xor
out
in
pop
sbb
lods
mov
cmpsl
cmp
mov
fmul
mov
adc
sarl
dec
ja
cmp
or
loopne
xor
inc
pop
sbb
cld
popa
insb
vmovups
imul
fdivrl
mov
loopne
call
dec
push
adc
adc
jmp
fs
cs
daa
adc
nop
lcall
jb
mov
pcmpeqb
jecxz
mov
mov
call
mov
xchg
mov
andl
xor
pop
add
pushf
inc
das
push
sbb
adc
das
cltd
outsl
mov
jmp
leave
and
push
enter
sub
fimull
pop
lods
add
add
mov
fstl
loope
dec
lret
push
clc
pop
mov
int
lock
pop
dec
shlb
ret
sub
mov
dec
xlat
push
ret
jb
mov
fisubs
je
mov
mov
mov
jae
lods
into
jle
mov
pusha
adc
and
insl
xchg
cmp
std
push
insl
cltd
push
movb
jecxz
mov
jbe
clc
jl
xchg
in
cmp
or
sbb
rolb
mov
stos
sub
xchg
cld
xchg
pop
xchg
mov
or
xor
fnsave
enter
and
inc
xor
or
cmpsl
xchg
push
dec
test
ret
add
sub
inc
orb
lret
fwait
mov
add
pop
add
xchg
jo
or
rcr
jns
jns
in
push
stc
xchg
fisttps
mov
jo
mov
in
add
pop
push
jp
add
lcall
test
adc
lret
mov
movl
jmp
and
ret
xorl
ja
sahf
gs
add
push
inc
imul
and
out
insb
leave
xchg
jle
ljmp
hlt
cmpsl
iret
hlt
xor
ret
pop
pop
sbb
xor
mov
rcll
pop
push
xor
or
stos
add
test
mov
xchg
ss
sbb
fnstsw
imul
clc
scas
cmc
cmpsl
jno
in
imul
cmp
jle
cld
insl
push
leave
pop
shr
add
aas
inc
aaa
jp
or
imul
jecxz
cs
addb
or
pop
test
fcmovnu
lds
adc
das
sub
and
cmp
cld
movsb
jo
inc
push
rcrl
jbe
insl
test
sbb
pop
pop
cmp
lahf
and
push
dec
push
push
je
stos
and
pop
into
shll
mov
push
iret
add
test
xor
mov
adc
jmp
push
mov
call
cmp
nop
daa
ds
pusha
movsl
stos
aas
data16
aas
loope
xchg
lret
sbb
add
add
mov
push
pop
call
in
pop
push
popf
sahf
push
in
mov
inc
sub
pusha
adc
push
mov
jg
jl
mov
ficoml
mov
push
out
and
sub
push
fadds
mov
mull
jl
mov
orb
and
test
adcb
jnp
nop
movsl
mov
push
addr16
fs
add
and
push
fmul
cmpsl
pop
out
imul
xor
cs
or
mov
subb
xor
data16
inc
jecxz
adc
mov
jb
sti
adc
clc
add
adc
loopne
enter
sti
mov
les
sub
call
cmp
sti
sbbb
lcall
loopne
mov
inc
imul
fnstenv
dec
push
in
fwait
pop
repz
xchg
sbb
leave
insl
jmp
pop
mov
push
adc
aad
pushf
das
loopne
jmp
call
outsl
aad
mov
jne
dec
aas
or
fidivs
stos
inc
dec
cltd
test
jecxz
int3
mov
out
jbe
es
mov
push
ja
daa
test
cmpl
mov
fildl
clc
pop
cmpsl
hlt
push
inc
mov
dec
inc
cmp
cld
in
mov
mov
fcmovnb
sarl
pop
not
popf
out
std
pop
mov
mov
call
mov
mov
cmp
lret
lds
mov
jcxz
sbb
pop
call
rcrl
push
cmp
aam
mov
ret
add
cmp
mov
jnp
xchg
adc
popf
popa
push
lods
pushf
lods
cmp
mov
orl
mov
pop
push
roll
repnz
mov
jo
mov
inc
adc
arpl
xchg
clc
mov
mov
cmpsl
xchg
arpl
mov
or
cmp
inc
out
pop
adc
xchg
add
repz
or
lods
call
scas
or
or
bound
fnstcw
dec
and
mov
dec
add
out
inc
incl
pop
or
in
pusha
dec
push
xor
jnp
and
out
dec
nop
push
fcmovb
adc
and
cmp
fidivs
sub
pop
cmpsl
cmp
or
test
mov
push
pop
mov
adcl
or
dec
out
mov
mov
xchg
int
sub
insl
in
call
or
out
sub
jge
add
xor
add
insb
xor
mov
jle
fwait
scas
in
mov
sbb
push
bound
pop
dec
cli
push
inc
repnz
jae
in
cmp
hlt
inc
stos
popf
in
xchg
mov
daa
iret
push
fimull
xchg
notb
test
dec
imul
xchg
scas
pop
and
xor
inc
adc
mov
inc
repnz
jae
leave
aam
and
arpl
call
out
in
divl
push
inc
push
or
cli
lret
adc
cmp
fadd
and
clc
dec
mov
rorb
scas
addr16
and
adc
decb
ret
movsb
sti
lahf
fsts
fsubr
jbe
push
jge
jge
sbb
adc
pushl
cmp
pop
mov
rolb
mov
or
push
lea
xor
mov
push
mov
js
push
decb
popf
cmpsb
and
ds
pop
xor
push
nop
pop
mov
in
cmp
inc
jbe
adc
jmp
jbe
mov
sbbb
sbb
push
cli
movsb
xor
inc
pop
pcmpgtd
js
adc
out
dec
lcall
aad
cmova
sub
xor
outsb
xchg
mov
adc
stc
push
movq
movsb
fbstp
push
pushf
sti
mov
sahf
stos
and
lods
inc
push
fisttpl
int
out
out
sub
fsubrs
rorl
mov
mov
add
test
sbb
outsl
mov
xor
fs
popa
xchg
adc
int3
ss
addr16
test
popf
out
cmpsl
js
push
pusha
xor
imul
ret
ret
mov
jae
jge
dec
pop
pop
lret
sbb
imul
das
add
fldcw
lods
mov
sbb
cli
jbe
xlat
and
sub
mov
jmp
ds
mov
stos
fsub
pop
es
dec
add
inc
jle
jbe
push
hlt
imull
pop
repz
mov
xchg
aad
push
sbb
add
jmp
pop
add
adc
xor
pushf
fiaddl
aaa
or
push
nop
push
pushf
pop
aas
stos
es
jns
or
aaa
pop
je
dec
scas
jecxz
and
mov
int3
into
call
xor
imul
shll
outsl
test
pop
dec
fsubrp
inc
cmp
push
test
push
mull
pop
pop
xor
mov
std
notb
testb
add
cmpsl
xor
mov
mov
pop
lret
xor
and
xchg
lock
lock
pop
scas
mov
sub
fcom
jecxz
movsl
ret
nop
pop
repz
inc
insl
mov
xchg
je
push
gs
mov
or
movsb
icebp
inc
mov
cmpsb
lock
mov
pusha
add
nop
mov
dec
push
push
es
sti
frstor
jge
clc
repnz
out
es
mov
shrl
xchg
pop
in
ja
or
and
out
cmp
jb
aad
outsb
leave
das
or
or
xor
movsb
loopne
ljmp
dec
xchg
push
test
add
ja
clc
jmp
inc
xchg
in
or
addb
rcrl
add
aas
or
out
and
bound
or
out
std
in
gs
xchg
jge
inc
mov
movsl
or
iret
mov
pop
fdivs
pop
fsubr
jp
add
loope
xor
arpl
cltd
fs
mov
pop
mov
out
and
jmp
mov
addb
xor
cld
icebp
mov
push
rolb
and
loopne
lahf
jecxz
jnp
cmp
jle
inc
shl
xlat
repnz
rol
iret
mov
mov
pop
dec
int
xchg
and
jo
outsl
push
addr16
mov
cwtl
popf
or
lea
cmpsb
pop
pop
fidivrl
jo
sbb
and
mov
jp
lret
lcall
mov
fstpt
hlt
xchg
pop
add
ret
mov
cmp
ret
jl
pop
fstpt
aaa
adc
push
add
fs
pop
rcr
fwait
scas
cwtl
lds
cmp
and
insl
cmp
daa
sbb
sahf
movsl
jbe
fsubr
jge
daa
and
xor
daa
push
dec
cmp
and
mov
push
jo
push
xor
and
lahf
push
in
push
jne
xchg
test
leave
mov
dec
cmpsb
movsl
loopne
in
xchg
rcrl
xchg
cmc
mov
jo
out
push
pop
jle
jbe
loope
fidivl
cmp
shlb
mov
push
adc
lods
mov
sbb
add
mov
xor
cli
int
ss
js
mov
ret
nop
