xchg
inc
lea
jmp
mov
push
call
mov
or
push
pop
lods
test
or
enter
in
xor
and
and
and
enter
enter
mov
push
add
nop
inc
push
cmp
xor
inc
push
sbb
sub
inc
push
sbb
sbb
sbb
adc
or
call
in
add
mov
mov
push
push
outsl
mov
or
pop
ret
pop
mov
mov
mov
repnz
mov
mov
ret
nop
aaa
das
cmp
out
lock
mov
cmp
cmpl
mov
test
add
pop
dec
test
jb
out
adc
mov
sbb
add
rorb
cmp
or
cmp
or
clc
mov
and
xor
in
rorb
mov
and
xor
aas
icebp
sub
pop
lock
icebp
add
es
mov
fidivrs
out
mov
ret
mov
into
fcmovnu
pop
repz
jne
fcomi
mov
add
pop
xchg
dec
lret
mov
add
or
mov
or
or
divl
push
sti
sub
add
ja
outsl
aaa
or
addl
push
lea
lea
jp
cmp
push
mov
popa
or
jge
add
push
lock
mov
or
mov
mov
add
loop
clc
imull
imul
push
pop
sti
idiv
jnp
add
sub
pop
sub
pop
sub
and
add
mov
scas
or
aad
xchg
bound
adc
add
mull
jnp
stc
std
xor
in
push
sub
cmp
push
mov
mov
repnz
adc
fisttpll
scas
es
fucomp
and
in
dec
dec
rcll
and
or
mov
cmpsb
and
jno
and
jle
in
mov
aas
inc
enter
test
xchg
aad
sub
pop
mov
pushl
mov
and
scas
pop
je
cmovle
pop
sub
pop
in
jle
cmp
sbb
mov
testb
cmpsb
push
aad
lcall
jmp
lcall
roll
pop
in
cmpsb
cmpsl
and
pop
mov
ja
or
lea
and
test
loop
in
mov
orb
test
nop
jbe
nop
fstl
dec
mov
dec
mov
xorb
mov
pop
mov
adcl
stos
sbb
lret
xchg
div
int3
mov
sbb
in
push
mov
fisttpl
cmpb
adc
or
jle
int3
icebp
int3
loop
cli
bound
insb
loope
scas
gs
stos
daa
jae
out
in
idiv
scas
and
gs
cmp
addb
daa
sbb
fnstenv
push
jnp
pop
mov
lods
sbb
xchg
ljmp
aad
sub
pop
pop
pop
es
lcall
sub
mov
repnz
mov
lods
movsb
outsl
sarb
outsb
orb
std
repz
pop
sub
ljmp
mov
loop
mov
mov
mov
or
movsl
fwait
or
jne
sti
outsb
and
cmpsb
pusha
outsl
cmp
mov
mov
outsb
arpl
push
scas
mov
fdivrl
fmull
and
into
xor
das
mov
jp
lret
mov
jle
loop
idivb
or
test
dec
popa
inc
gs
mov
jp
sbb
inc
mov
pop
data16
and
dec
pop
out
xor
sub
addr16
scas
and
sub
test
or
aam
loop
pop
fnsave
jb
cmpsb
mov
repnz
sub
sub
out
xchg
adc
stos
nop
mov
add
pusha
push
pusha
in
pop
aad
add
lahf
cmpsb
push
push
sbb
movsl
adc
in
inc
in
sub
mov
or
inc
or
pop
mov
loope
movsb
mov
and
push
pushf
add
int3
jo
out
cli
cmpsb
pusha
xchg
stos
adc
sub
pop
inc
icebp
movsl
and
cmpsb
and
add
inc
xchg
adc
addl
mov
jne
test
jne
or
movlps
add
cmc
inc
imull
std
push
call
je
subb
jbe
cmp
insb
add
movzwl
dec
test
add
mov
add
in
movl
push
dec
lea
cmpsb
inc
ret
fdivr
push
mov
adc
pop
or
inc
rcll
cmp
or
or
sub
jb
or
dec
fdivl
push
mov
dec
cmpsb
mov
jmp
sub
fwait
dec
push
fs
or
jae
arpl
dec
rcll
add
xchg
xor
adc
or
decl
jne
add
pushf
mov
adc
sub
aaa
sbb
dec
lret
sub
je
in
call
outsl
arpl
fs
jae
cmovl
fs
imul
ljmp
mov
dec
dec
jo
outsb
push
push
outsb
insl
popa
jo
imul
jg
inc
imul
popa
insb
inc
insb
insb
inc
sub
insb
dec
ret
mov
outsl
jbe
dec
gs
outsl
cmp
jmp
rolb
outsl
addr16
push
dec
add
pop
lea
dec
lea
mov
lea
cmp
je
dec
cmp
jnp
mov
inc
lea
sti
lds
inc
cmp
or
mov
mov
inc
mov
inc
or
lods
mov
mov
mov
mov
dec
inc
mov
cmc
roll
in
das
dec
mov
lea
dec
lea
out
bound
shl
mov
call
outsl
jg
inc
sub
dec
mov
aas
inc
inc
lea
mov
mov
xchg
clc
inc
mov
mov
inc
daa
fcoml
jne
add
sbb
jbe
jbe
pop
lock
mov
iret
shr
call
fdivrp
xor
mov
sbb
inc
dec
sub
outsl
repnz
mov
pop
lock
outsb
in
jne
add
inc
rolb
adc
jnp
mov
sbb
dec
es
mov
lea
lea
std
incl
jne
dec
es
inc
mov
lea
in
mov
dec
call
inc
daa
stc
sbb
cmp
mov
out
aaa
mov
mov
dec
mov
lea
inc
pop
mov
xchg
scas
push
pusha
lahf
xlat
and
jge
idiv
xor
mov
mov
or
adc
sti
into
add
insb
outsl
decl
xchg
inc
jae
pop
pop
pop
mov
loope
cld
lea
push
call
movhps
pop
cmp
lea
lret
pop
shll
loop
sbb
or
negb
outsb
data16
or
in
push
std
outsl
pop
mov
inc
aas
xchg
repnz
push
mov
inc
mov
cli
jmp
mov
sti
inc
dec
dec
xchg
jae
in
mov
xor
fnstsw
jb
mov
xchg
mov
mov
and
cmp
js
add
inc
mov
and
jnp
ja
in
push
add
adc
dec
inc
outsb
mov
fdivrs
inc
dec
mov
add
mov
mov
aas
outsl
cwtl
mov
jle
cmc
pop
or
inc
add
bound
sub
idivb
sar
cmp
jg
jbe
icebp
cltd
stos
jge
mov
inc
ss
sub
push
lock
pushl
out
pop
jp
xchg
mov
mov
dec
sub
jle
fstpt
push
sbb
ss
pushf
cmpb
lcall
pop
clc
pushl
decl
jecxz
dec
ss
jle
push
inc
cmp
fdivl
imul
mov
or
jo
sbb
ljmp
pop
jg
inc
pop
inc
mov
mov
lcall
fisttpll
and
mov
in
sbb
xchg
nop
and
mov
out
fldt
cli
call
sbb
movsl
addr16
sbb
fldt
outsl
mov
lock
fmuls
push
enter
scas
fadds
and
cmp
xor
cmp
xor
lahf
xor
pop
xlat
insl
mov
or
add
insl
cmpsb
sbb
pop
xor
xor
add
dec
into
loopne
lret
pushf
leave
or
mov
ds
cld
or
call
fsubrs
push
adc
add
adc
push
adc
push
fcoms
xchg
cmp
in
fldt
xor
inc
lret
mov
mov
dec
test
std
add
inc
inc
xchg
leave
fiaddl
xchg
das
out
pop
cmpl
dec
cmp
sub
push
mov
pop
clc
mov
add
cld
push
push
out
push
std
sbb
daa
leave
test
or
sbb
cmp
in
mov
loope
inc
testl
mov
inc
fmull
push
mov
inc
in
ss
inc
xchg
add
dec
push
mov
lods
sbb
jae
mull
iret
mov
test
in
dec
test
sub
inc
leave
clc
inc
mov
dec
rcrb
pop
dec
adc
stos
hlt
mov
jnp
pop
add
std
mov
incb
rol
rclb
insb
test
icebp
nop
enter
aas
outsl
mov
repz
orl
jmp
aad
sahf
stos
dec
mov
push
pop
es
das
cld
mov
jmp
sbb
sub
push
mov
add
mov
lods
add
cmc
movsb
dec
dec
lock
ret
sbb
jo
add
out
pop
mov
mov
mov
sub
jle
pusha
or
cmp
je
fisttps
outsb
mov
bnd
and
ret
xchg
jp
icebp
mov
leave
fisttpll
jbe
ret
insl
mov
inc
or
mov
incl
push
sahf
lcall
adc
pusha
rorl
movsl
pop
les
pop
or
test
clc
inc
iret
ja
cltd
inc
or
pop
add
enter
std
enter
icebp
in
rcl
xor
inc
bound
sub
mov
sahf
enter
mov
or
dec
mov
mov
subl
pop
jne
in
sbb
inc
cmp
lock
or
push
test
adc
push
xchg
dec
push
xchg
push
filds
push
in
inc
inc
inc
jle
in
add
cld
jp
pop
in
repnz
dec
inc
cmp
mov
clc
jp
inc
or
inc
mov
inc
aad
stos
mov
jg
mov
inc
fistpll
ficomps
push
int
dec
fisttpl
inc
dec
pop
leave
arpl
mov
outsl
xchg
or
frstor
test
push
lock
inc
mov
jo
sbb
jo
adc
mov
mov
add
push
xor
adc
xchg
leave
jae
pop
cmp
aaa
orl
inc
repnz
cmp
mov
adc
dec
inc
repnz
cmp
push
inc
mov
jmp
les
add
and
push
or
clc
mov
lods
hlt
add
adc
sub
mov
fdivrl
add
push
stos
add
or
ret
test
sub
lock
inc
cld
mov
outsl
and
js
jne
add
xchg
sahf
jnp
push
push
push
or
insb
sub
jae
or
repz
add
mov
and
insl
lock
or
mov
pop
pusha
jbe
inc
jb
mov
in
cmp
adc
je
in
add
ss
adc
decl
decl
jne
add
popa
test
push
pop
and
or
jae
shlb
add
loopne
call
rcll
xchg
add
adc
xorl
ss
mov
or
pushf
add
sahf
cs
lods
in
and
or
mov
shr
cmp
shll
xchg
push
push
jne
push
adc
stos
les
je
scas
or
push
push
xor
imul
int3
pop
nop
vmulss
xor
aam
push
aam
or
mov
fldcw
sub
stos
mov
sub
pop
repz
cmp
pop
gs
xor
cs
insb
iret
fwait
out
mov
gs
add
ljmp
mov
add
push
imul
arpl
jo
jg
psubq
popa
jbe
cmovbe
add
inc
imul
lock
insb
jbe
jns
insl
jo
jo
jno
dec
arpl
jle
rcpps
jno
dec
pusha
push
cmp
insl
jae
mov
lret
addr16
data16
aaa
ja
outsb
add
adc
jmp
clc
cmp
int
inc
test
pop
adc
inc
inc
pusha
inc
loopne
xchg
dec
pop
sub
add
xor
adc
mov
mov
cwtl
sub
ret
jg
add
sbb
jmp
dec
add
fucomip
add
push
sub
and
out
insb
mov
add
push
and
mov
aam
push
ret
lahf
push
and
scas
sbb
jmp
inc
sti
adc
add
lods
nop
dec
aaa
stos
cmp
pop
push
mov
push
fcmovu
mov
sub
jmp
ljmp
jge
stos
xor
mov
test
cs
aas
das
mov
cld
int3
test
fmuls
sar
enter
push
sbb
xor
in
add
mov
popf
pop
lock
push
mov
add
cmpsl
adc
add
mov
js
mov
int
mov
xor
lea
lret
jle,pn
adc
jl
mov
icebp
fmuls
push
daa
add
ret
xor
jne
mov
xor
add
cmc
test
mov
xor
jno
ret
shrb
or
incl
push
mov
incl
cmpb
jne
mov
lea
and
xchg
cmpsl
mov
sub
xchg
add
add
sub
mov
jne
jbe
js
mov
sbb
jmp
sub
sbb
jle
or
inc
imul
mov
ljmp
and
pop
mov
ja
cmp
hlt
and
mov
les
pusha
fs
xchg
aam
rclb
call
movsb
adc
add
jp
jae
push
std
pop
push
loopne
add
rorl
ss
dec
es
shlb
pop
adcb
pushf
adc
fs
adc
sub
andb
int3
xchg
adc
mov
test
cmp
xor
xor
mov
xor
cmp
mov
nop
push
and
push
fcmovb
int
dec
movb
inc
je
push
add
pop
cwtl
imul
or
push
sub
ss
xor
sub
cmp
and
sub
in
and
mov
inc
call
push
hlt
movb
dec
adc
cmp
push
and
push
add
mov
out
push
jl
mov
jbe
test
inc
push
mov
add
jmp
rolb
mov
lcall
add
pop
loop
push
test
push
fcoms
sub
inc
xchg
imul
mov
or
aad
push
add
pusha
xor
and
test
ja
add
xchg
ret
adc
mov
mov
push
clc
pop
add
inc
push
loopne
inc
push
test
push
add
add
mov
push
jp
or
cld
sti
incl
pushl
inc
mov
dec
inc
mov
lea
inc
sbb
push
jg
mov
fdivrl
call
addr16
mov
clc
test
mov
dec
aas
inc
jmp
andl
dec
in
sbb
and
add
push
fbstp
clc
dec
sbb
cmp
cmpl
push
mov
pop
jmp
in
ja
in
mov
or
cmp
fbstp
int3
mov
lea
jno
mov
mov
pop
decb
les
dec
mov
mov
mov
fists
adc
imul
scas
inc
and
mov
mov
out
std
in
ret
stos
add
es
cmp
je
hlt
decl
jb
pushl
mov
inc
fwait
mov
inc
inc
cmp
jg
inc
or
aad
jg
dec
dec
fbstp
pop
mov
call
xor
testb
lods
pop
sub
fs
mov
pop
jnp
sbb
jns
cmp
add
adc
mov
inc
in
push
inc
xchg
cld
aam
cmp
orl
clc
cmp
add
and
clc
scas
push
cli
inc
inc
pop
cmp
ja
pop
mov
int3
movsb
adc
clc
or
pop
testl
lret
xchg
call
testb
stos
dec
out
dec
dec
dec
fcomip
je
pop
dec
jno
sbb
dec
mov
mov
mov
outsl
xchg
xchg
movsb
dec
pop
and
pushl
mov
loop
inc
mov
lea
testl
sub
add
pushl
cmp
test
dec
add
pop
mov
sub
or
jno
xor
out
dec
xchg
negb
mov
repnz
stos
sub
subb
loop
ljmp
add
push
jne
mov
sarl
push
push
call
mov
dec
aas
cwtl
adc
lods
sub
add
mov
mov
cli
inc
shrb
and
adc
xor
pop
cmp
mov
add
rolb
cmp
mov
pop
mov
adc
inc
add
adcb
fwait
mov
aas
inc
cmp
sbbl
decl
incb
inc
inc
add
movsb
inc
dec
sub
jbe
mov
or
add
push
jb
xor
add
add
and
jge
imul
and
pop
fadds
push
fstps
add
add
fisubrs
push
adc
mov
adc
push
sub
cmp
popf
add
daa
xchg
cs
push
movsl
outsl
je
add
jae
xor
push
out
lods
jnp
testb
add
inc
dec
pop
inc
dec
add
push
pop
in
mov
in
inc
add
adc
adc
add
je
mov
fstpl
sbb
jecxz
add
add
outsl
pop
xchg
rcrb
cmc
add
mov
outsl
in
nop
add
xlat
add
fcmovnu
or
add
loope
push
and
jmp
in
in
aas
das
lahf
jmp
jae
mov
pop
insl
fnsave
or
fildl
filds
cli
jecxz
jb
mov
xor
or
repz
and
sbb
scas
outsb
mov
add
imul
push
sti
lret
and
pusha
add
adc
insl
sub
es
and
mov
insb
lods
insl
jmp
fisubs
and
or
or
xchg
and
sub
insl
mov
and
or
add
mov
add
sbb
inc
pop
add
insb
fdivs
adc
xor
sub
inc
mov
inc
sbb
pop
incl
mov
sahf
cmp
inc
or
scas
push
cmp
adc
sbb
je
pop
pop
fisttpl
lahf
jae
jbe
inc
inc
cmp
jns
ja
dec
mov
fs
les
xlat
push
cmp
push
inc
push
imul
in
ja
and
fisttps
xchg
mov
out
push
xor
shrb
inc
adc
adc
mov
mov
loope
cmp
inc
pop
pop
dec
bound
sub
dec
lretw
xchg
adc
popa
sub
ret
add
sub
push
pop
pop
add
in
daa
pop
mov
movsl
test
gs
rcrl
shlb
and
shr
or
fs
imul
sti
idivb
jb
add
movsb
lret
or
adc
je
scas
push
ljmp
inc
cmc
or
sti
and
lea
daa
ret
mov
sbb
iret
add
negl
es
add
lods
hlt
pop
jmp
lahf
or
add
and
cwtl
jecxz
je
jo
push
add
test
push
and
sbb
push
mov
repz
filds
fistpl
fnstenv
cwtl
inc
movsb
and
xor
add
cld
stos
add
faddp
sub
es
dec
incb
or
frstor
add
fdivl
pop
cltd
and
ja
outsl
xor
lods
adc
fnsave
mov
add
and
add
out
cmp
lahf
push
add
shl
jno
xor
lret
das
fmuls
adc
ss
movsb
jecxz
mov
fs
in
shlb
icebp
push
xchg
repz
mov
out
js
jl
add
shll
add
ret
jmp
lea
les
lret
add
pop
add
dec
cmpsl
fsubl
mov
mov
pop
jbe
and
movsb
sub
xor
iret
pusha
ret
adc
adc
sarl
xor
pop
ja
movsl
inc
ret
push
es
ficoms
fisubrs
and
mov
shlb
bound
xor
mov
sbb
out
jg
mov
sbb
and
dec
push
daa
bound
sbb
mov
jbe
xchg
call
pop
inc
push
pop
jns
lods
fcmovnu
sbb
add
ret
std
jbe
mov
dec
push
fcomp
mov
jge
inc
xchg
jle
jbe
test
jbe
dec
pop
outsl
mov
and
add
inc
jg
inc
insb
pop
pop
mov
or
ja
in
mov
sub
add
out
pop
je
clc
sbb
cmpsb
add
xchg
sbb
idivl
xor
jle
cmp
or
jbe
or
pop
fbld
test
pop
aas
daa
clc
mov
lea
mov
or
fmuls
mov
adc
dec
mov
popf
cmp
iret
daa
add
mov
js
cmp
pop
sbb
mov
dec
test
outsl
fwait
cmp
fists
in
mov
xor
sbb
jo
mov
and
adc
mov
xchg
mov
movsb
sbb
or
dec
push
add
xchg
adc
sub
mov
fisubs
mov
or
push
loopne
sti
lods
sbb
sti
jo
sub
xlat
popf
lock
pavgw
movsl
popw
mov
or
jle
test
lods
inc
mov
cwtl
aas
ret
insl
ret
push
inc
push
push
xchg
in
jb
sahf
jecxz
inc
cld
add
mov
xchg
push
es
xchg
lods
adcl
xchg
sbb
rcrb
push
xchg
js
push
and
mov
sbb
sti
add
jbe
insl
and
jge
inc
clc
jle
lret
jl
xchg
jne
int
pushf
xor
mov
sarl
in
mov
inc
pop
gs
fisubrl
dec
out
and
out
inc
sbb
outsb
in
jne
pushw
push
sbb
shr
and
faddl
and
xor
test
sbbl
cmp
fs
sbb
mov
or
or
fistpl
js
jle
pop
sub
add
push
or
push
jbe
out
lret
add
sbb
adcl
ret
xchg
xchg
sub
inc
xlat
xor
ljmp
rolb
xchg
in
call
add
jl
jnp
imul
fistpll
idivl
and
xlat
push
jmp
inc
mov
add
cmpsl
cmp
je
or
xchg
cmpsl
cmp
out
pop
addr16
lock
ja
xor
push
and
jne
mov
jl
divb
add
ret
cmp
mov
arpl
push
xchg
sub
loopne
sbb
pop
jae
adcb
stos
push
pop
lahf
xorl
and
push
add
add
xlat
fdivl
daa
push
mov
push
mov
sbb
sub
test
shl
jg,pn
fists
and
lods
xchg
mov
fisubrs
jbe
inc
outsb
ja
fucomp
faddl
jmp
xor
adc
dec
aaa
sti
sahf
mov
iret
js
add
sahf
dec
jle
aaa
andl
xchg
js
add
xchg
fwait
xor
sbb
mov
scas
jp
aaa
outsl
arpl
shrb
arpl
dec
fucomip
push
add
lahf
fiaddl
je
aas
mov
cmpsb
fcoms
or
mov
sahf
daa
adc
or
lods
scas
repz
xchg
loope
and
xchg
cmp
out
cs
sbb
aaa
ret
inc
and
jne
mov
jo
aaa
mov
mov
fdivs
adcl
movsl
jne
in
ss
out
and
pop
jecxz
jmp
scas
pop
sbb
fisubrl
and
faddl
lahf
xor
dec
aad
push
mov
jle
mov
adc
push
stos
mov
or
add
and
test
add
and
fcoms
pop
std
cli
jecxz
push
or
add
xor
rcrl
fxam
or
fbstp
shlb
mov
pop
sbb
sbb
or
xchg
out
insl
call
cmpb
jno
ss
insb
test
mov
ja
xor
frstor
and
idivl
xor
and
ret
lret
in
lock
pushf
jp
daa
pop
cwtl
fwait
call
les
push
fisubl
cmpsb
shll
sub
and
mov
dec
dec
cltd
push
movb
inc
inc
fdivr
in
dec
xor
movsb
push
sbb
test
ret
jae
imul
and
cmp
aaa
loopne
loopne
out
mov
mov
xor
cmp
out
mov
adc
xor
stos
sub
out
arpl
mov
enter
mov
inc
fcmovnu
sbbb
or
and
cs
xor
mov
add
out
add
mov
je
adc
iret
jno
fmull
add
fwait
pop
loope
test
popa
dec
sbb
cmp
fs
mov
fisttpl
pop
insb
adc
fstpl
scas
add
mov
and
dec
dec
xchg
xchg
xchg
cmp
addr16
sbb
addl
imul
push
cmpsb
sub
and
inc
out
iret
cltd
pop
or
ret
stos
aaa
mov
ja
mov
js
jo
pop
pop
inc
mov
xchg
dec
lds
mov
cwtl
sbb
outsb
aas
mov
shlb
mov
arpl
loopne
pop
cltd
out
vxorps
jbe
lea
jb
add
xchg
push
incl
xor
sbb
rclb
cmp
scas
aas
aaa
cmpl
cmp
faddl
clc
xchg
and
xlat
mov
or
lock
inc
xchg
xor
mov
dec
xchg
dec
fdivs
fmuls
jp
and
out
es
push
sahf
rcll
daa
mov
insb
bound
inc
adc
roll
insb
in
sub
jmp
xor
xchg
int3
loopne
adc
pop
mov
imul
fwait
insl
mov
xlat
pushf
adc
pop
xor
lret
aaa
nop
ja
and
cmp
sub
adc
out
cmp
iret
mov
test
jmp
add
mov
cld
sahf
lahf
mov
xor
les
add
adc
push
fsts
fsubs
mov
jo
sub
je
loopne
pop
pop
lret
test
arpl
insl
mov
out
jg
ja
aam
dec
shlb
push
cmp
push
jae
sub
idivl
mov
jo
pusha
xchg
sub
ss
xor
in
shrl
push
jbe
mov
lods
mov
lcall
inc
sbb
inc
orb
push
ds
mulb
or
mov
jae
iret
sub
daa
jp
mov
and
and
les
jbe
and
cmp
repnz
xor
decl
jae
and
fsubrs
movsb
in
fmuls
mov
int
and
or
sub
sub
push
sub
cmp
es
clc
je
mov
lds
push
xor
fdivrs
push
loope
aam
pusha
or
jne
inc
push
mov
pop
sbb
inc
jne
out
xchg
outsl
mov
popa
xchg
repz
sti
scas
adc
mov
insb
imul
cmpsb
jnp
ror
jo
adc
adc
es
xchg
add
les
js
lods
xchg
gs
mov
sahf
cvtdq2ps
cmp
iret
push
cmpsl
add
mov
xchg
push
and
sbb
push
sahf
rol
sbb
jbe
ffreep
notb
fldenv
and
out
sahf
fmuls
push
out
xchg
fdivrl
pusha
xchg
mov
push
lock
or
push
or
mov
mov
xchg
adc
out
mov
aam
pop
sbb
xor
xchg
scas
add
lret
dec
dec
iret
pop
inc
test
inc
inc
stos
push
fisttpll
fildl
outsb
and
xchg
sub
sahf
movl
cwtl
xor
out
mov
mov
jle
push
or
bound
pop
pushf
jae
loope
inc
mov
pop
aaa
inc
pop
lods
es
fisubrs
stos
lds
add
cmp
nop
loopne
lahf
pushf
test
dec
sub
jge
push
mov
std
fnstsw
rcrb
sbb
xchg
lcall
jbe
cmpsb
or
pop
in
jbe
mov
pop
mov
jge
dec
mov
or
sub
insb
jl
iret
mov
decb
jb
cmp
pop
test
insl
ss
mov
hlt
bound
bts
mov
and
xchg
cltd
mov
sub
mov
or
jo
cmc
mov
pop
das
push
nopl
cmp
pshufw
sti
adc
outsb
fisubrs
fcomp
rcrb
xor
iret
jge
add
ja
jno
js
andl
push
lret
enter
push
inc
pop
pop
loop
int3
jno
pop
scas
test
stos
xchg
or
sbb
xchg
inc
ret
add
insb
bound
xchg
insb
hlt
inc
push
add
mov
orb
and
adc
pop
lods
mov
fcomps
stos
movsb
sbb
inc
pusha
sub
xor
pop
and
insb
add
push
loop
dec
lods
xchg
fstpl
fucomi
xchg
je
scas
or
pop
pop
sbbb
inc
and
push
adc
cmp
leave
imul
in
mov
mov
and
aaa
cmp
pop
mov
bound
sub
or
or
jl
push
lds
mov
imul
or
sahf
mov
cmp
fwait
adc
xchg
add
add
notb
lret
icebp
add
cmp
sub
add
cwtl
push
adc
jno
and
movsl
push
movsb
push
out
test
outsl
sbb
insb
loope
push
inc
mov
sbb
bound
sub
addb
and
lret
daa
xor
add
xchg
loopne
cmpsb
or
jb
ljmp
dec
push
iret
in
data16
pop
sub
mov
add
movsbl
xor
loope
ja
es
or
aaa
push
sbb
nop
iret
fcmovu
out
cwtl
xor
mov
insl
shrb
das
cs
shrb
das
out
cmp
push
movsl
dec
adc
push
sub
loopne
cmp
sub
pop
and
xor
cs
cli
jle
mov
cmpsl
pusha
fistpll
xchg
mov
inc
inc
fwait
pop
dec
outsl
push
mov
loop
jge
sbb
mov
push
mov
mov
jo
adc
ret
outsb
jle
fdivrs
add
push
and
adc
push
rcr
aas
insb
mov
push
push
xor
cmp
ds
add
push
jecxz
xlat
cmp
push
cs
jno
fnop
dec
dec
push
das
sub
arpl
jne
fisttpl
hlt
lods
push
aaa
scas
and
mov
pop
mov
iret
xchg
test
je
out
dec
xor
outsb
and
fidivrs
sbb
add
loope
mov
loop
fucomi
cmp
push
cmp
in
jle
mov
mov
xchg
mov
test
adc
cmp
push
and
jmp
cltd
push
or
sub
push
fcmovu
std
not
cmp
xchg
and
mov
add
loopne
leave
jne
inc
adc
in
cmp
insb
pcmpeqb
int
adcb
or
pushf
push
loop
sbb
fistps
out
fidivl
jno
je
jbe
sub
out
cli
iret
jmp
sbb
lods
push
lods
insl
movl
sbb
mov
dec
loopne
mov
scas
pop
or
or
and
ss
adc
push
and
adc
subb
sub
inc
in
sbb
or
sbb
es
push
mov
out
mov
ds
mov
cmpsb
sub
call
push
and
ja
xchg
cwtl
dec
cs
xchg
mov
push
out
lods
push
jmp
lods
bound
scas
das
adc
pop
inc
xchg
add
icebp
js
mov
sub
add
pop
rorl
sbb
pop
jb
and
das
jo
out
pop
push
push
iret
daa
das
aam
jbe
sub
and
xor
xor
cld
das
rcrl
out
push
cmp
mov
outsl
scas
sub
lret
iret
loopne
pop
test
ret
xor
dec
mov
jae
pop
push
sub
bound
pop
sti
inc
das
add
rsqrtps
jp
test
mov
or
pop
sbb
fldl
out
loope
cmp
cwtl
sbb
faddl
scas
xor
jns
dec
and
sbb
or
fcomps
mov
sbb
js
push
pop
roll
aad
aam
mov
jmp
adc
out
cmp
xor
inc
data16
test
and
clc
add
push
les
xor
sub
lock
pop
or
adc
int
cmpb
sbb
adc
mov
pop
sbb
test
and
pop
xchg
sub
sahf
aas
scas
add
shll
xor
jg
mov
sbb
sarl
das
push
pop
cmp
test
aas
ficoms
adc
out
jo
cmp
cmp
pop
cld
cld
outsb
and
push
outsb
fcomp
das
dec
jp
xor
bound
xor
add
mov
dec
inc
mov
xor
mov
scas
jp
jbe
push
inc
add
or
shlb
outsb
push
je
mov
decl
sbb
mov
xchg
cmpl
cs
faddl
jo
test
mov
adc
push
xor
into
lret
in
add
push
mov
mov
sbb
jle
adc
shl
test
ljmp
dec
mov
call
and
or
testl
xchg
das
lods
xchg
ss
fs
mov
jnp
inc
fidivrs
push
adcl
add
sub
xor
scas
mov
pop
xchg
mov
imul
dec
movl
in
movsb
pop
jo
pop
repnz
pop
jp
inc
pop
cmp
jl
adc
cmp
or
sub
fldcw
scas
or
mov
sub
stos
xchg
jo
jge
mov
jl
addr16
add
xchg
arpl
xchg
js
not
mov
xchg
xor
test
push
iret
mov
jp
dec
aad
loope
das
sub
pop
aas
push
out
stos
and
shl
adc
out
fcoml
sti
icebp
ret
loopne
sbb
jmp
sbb
pop
and
jge
push
sbb
push
pop
push
or
or
xor
push
push
or
push
add
pop
or
xchg
push
mov
inc
push
fwait
xor
cmp
sub
ljmp
adc
xor
or
push
mov
mov
add
jae
iret
add
inc
add
adc
sub
jnp
jl
sub
shrb
sbb
test
ja
pop
jo
out
cli
out
xchg
push
jbe
test
lret
xor
movl
add
push
arpl
mov
sbb
push
or
and
movsl
ret
mov
pop
fcomps
jne
push
and
fcomip
jb
sbb
mov
add
cli
xor
into
fidivs
arpl
and
add
sahf
jg
cmpl
inc
jle
outsb
test
cmp
rcrb
cmovs
jne
adc
push
mov
pop
pop
push
mov
test
push
fcoml
pop
sub
in
fcomi
daa
adc
xor
out
adc
mov
pop
adc
nop
cwtl
popf
ljmp
mov
ret
fstpl
sti
pop
cwtl
pop
fwait
mov
mov
and
sbb
aam
or
pop
add
sahf
scas
push
test
sbb
push
dec
jge
pop
iret
mov
es
fmuls
pop
dec
mov
jae
mov
das
mov
lahf
push
pop
mov
fstps
xlat
bound
hlt
mov
pop
lahf
xchg
adc
mov
sub
pop
cwtl
jl
test
repz
or
insl
jbe
cs
and
ficomps
ljmp
dec
mov
mov
cmc
mov
mov
shr
jnp
push
mov
iret
push
iret
push
mov
push
aaa
pop
xor
outsb
test
and
mov
test
lahf
mov
daa
add
addl
sahf
mov
lods
pop
ret
pop
adc
insb
jbe
sub
or
pop
mov
in
adc
jecxz
loopne
test
cwtl
aaa
or
add
cmc
mov
shrb
das
popa
in
roll
sub
das
cmp
mov
ds
mov
mov
dec
out
rorb
in
adc
sahf
or
pushf
push
sbbl
inc
xchg
sbb
test
subps
and
adc
lock
push
and
lret
cltd
js
push
mov
aas
je
sub
fsubrl
aaa
aas
ss
dec
test
daa
arpl
cwtl
and
lods
inc
and
fsubrl
push
loopne
aaa
lret
cs
test
push
insl
jbe
push
stos
sub
jp
test
mov
pop
dec
push
addl
cld
cmp
movsl
das
or
push
sbb
inc
mov
and
mov
push
and
xchg
mov
jnp
pushf
pop
cmp
add
pushf
sbb
cmpsl
mov
xor
outsl
xchg
sub
or
mov
lods
lcall
dec
xchg
stc
in
sub
push
arpl
sub
xlat
ds
ret
xchg
cmp
or
cmp
mov
push
jl
gs
cli
out
adc
test
or
stc
push
mov
adc
fsts
clc
add
xchg
lock
roll
sbb
loop
in
loop
clc
pop
das
leave
je
and
xor
aad
add
push
xchg
jge
xchg
mov
les
aam
pusha
arpl
ret
mov
jo
mov
pop
fsubs
lods
addr16
pop
int
jge
call
cmpsl
xor
xor
fwait
test
pop
push
sub
mov
int3
and
inc
scas
pusha
mov
inc
sub
scas
sub
or
mov
lret
je
add
fistl
mov
insb
pop
sbb
dec
out
jo
push
dec
popf
scas
cltd
pop
stos
stos
mov
lods
lods
xor
in
lods
jno
movsb
xlat
and
sub
std
scas
mov
hlt
cmp
test
cmp
add
lea
sub
pop
sub
sbb
sarl
sbb
and
jae
pop
inc
test
push
jle
lods
pusha
and
jns
test
or
mov
and
push
or
dec
mov
xchg
mov
sub
notl
movsl
cs
jns
add
rcr
sbb
jg
push
jae
add
ljmp
insb
pop
in
sub
fsubs
dec
and
xor
sbb
and
adc
das
adc
out
sub
mov
adc
add
aas
fstpl
imul
aaa
add
add
pop
roll
xor
cmp
ret
or
daa
inc
inc
scas
mov
cmpsl
mov
mov
iret
lods
sbb
and
call
adc
mov
mov
ljmp
xchg
and
xor
dec
cmpsl
inc
pop
dec
jp
jmp
xchg
push
mov
dec
add
test
aad
push
daa
fildll
and
addr16
add
sbb
daa
push
adc
sbb
dec
xchg
scas
and
jne
add
leave
repz
rcll
xor
aaa
cmp
jnp
addr16
mov
pop
pusha
sbbl
xlat
push
addr16
rorb
xchg
insb
test
popf
and
jge
test
addl
push
ljmp
gs
inc
mov
push
scas
push
leave
pop
enter
jne
push
pop
repz
jo
popf
loopne
fnstsw
mov
ficompl
pop
cmp
or
std
push
fiaddl
iret
stc
xchg
imul
cmp
icebp
add
sar
mov
and
ljmp
push
pop
addr16
mov
jmp
jg
sbbl
dec
cmp
xchg
push
push
faddl
decl
jno
push
std
loop
call
cmp
icebp
cmpsl
in
test
out
mov
je
jg
cmp
mov
loope
fildll
push
cmpsl
je
cmp
je
and
and
sbb
cmp
shr
mov
sub
movsl
and
cmpsl
push
rolb
sub
data16
mov
sbb
repz
add
inc
pop
jle
push
and
mov
jl
lret
fwait
sub
mov
ret
loopne
mov
test
mov
pop
js
mov
cltd
iret
data16
mov
xchg
addr16
insb
data16
cs
pop
aad
imul
inc
push
xor
scas
and
pop
push
fwait
inc
outsl
xchg
pop
mov
lret
xchg
mov
adc
in
cmpsb
lret
mov
mov
sub
iret
test
jne
in
ss
fucomip
jmp
loope
push
les
add
fdivs
sbb
mov
cmpsb
ret
fld
gs
sti
inc
dec
inc
rcl
popf
fucomi
call
and
and
rcrl
popa
pop
out
jno
jno
and
lds
daa
jbe
mov
cld
cmp
mov
mov
xchg
movsb
pop
das
cltd
mov
icebp
dec
aaa
fisubl
mov
pushf
or
nop
add
loopne,pn
push
fadd
adc
lds
xor
sar
int
add
or
mov
xchg
jo
fcoms
dec
sub
mov
iret
xor
xor
adc
xor
inc
js
mov
or
imull
andl
arpl
sbb
cltd
xorl
sub
mov
xor
mov
data16
call
imul
dec
push
mov
adc
dec
adc
sbb
shrl
and
adc
out
out
add
daa
in
xchg
push
mov
fstpl
sar
inc
negb
loop
outsl
inc
lock
jl
inc
insl
pop
adc
in
ds
fidivl
inc
jno
push
imul
xor
rorl
pop
adc
test
push
adcb
pavgb
push
mov
test
scas
roll
mov
jl
stos
cmp
ja
nop
dec
lcall
cs
mov
jo
pop
sbb
adc
loopne
out
xor
add
fsubrs
mov
push
stc
sbb
sarb
fcmovnbe
nop
adc
xor
std
js
jnp
push
pop
comiss
push
arpl
out
or
add
lret
and
bound
cmpsl
je
icebp
xchg
and
fidivl
mov
insl
loop
mov
inc
mov
cmpsl
jmp
in
mov
addl
cmp
imul
and
je
xchg
xlat
mov
sbb
pusha
mov
jo
jp
sbb
mov
test
cli
lea
mov
sbb
sub
insl
inc
sbb
xor
outsb
stc
push
add
push
out
imul
add
popa
pusha
cs
inc
fldt
mov
pop
hlt
hlt
push
test
pop
inc
out
shlb
fdivrs
enter
push
les
jmp
xchg
jl
sarb
mov
xchg
xor
sbb
jo,pt
loope
divb
mov
inc
sub
push
repnz
mov
dec
shlb
pop
inc
xor
sub
dec
cmpsl
adc
bound
adc
mov
inc
cmp
movsb
fimull
dec
fiadds
push
add
sbb
push
ret
mov
push
inc
rcrb
mov
repnz
dec
push
cmpsb
aaa
sbb
jo
std
push
add
push
dec
mov
pop
imul
adc
push
imul
push
mov
outsb
jnp
in
iret
cmp
sub
sbb
or
std
mov
sub
inc
test
push
andl
fdivs
jmp
adc
cmpsl
lds
pop
mov
pop
sub
jge
test
push
mov
dec
cmpsb
mov
faddl
int
subb
jmp
cwtl
outsb
mov
pop
add
sti
int
daa
mov
shl
icebp
sbbl
fidivs
jbe
jbe
arpl
cmc
or
add
in
icebp
xchg
xchg
xchg
fists
es
mov
sbb
gs
cmp
push
in
sbb
lods
pop
insb
mov
dec
mov
cmp
out
loope
jo
fistpll
push
sbb
mov
divb
lea
xor
xchg
imul
add
lea
pop
out
xchg
mov
stc
flds
shrl
push
xchg
shlb
dec
xorb
sbb
clc
ljmp
mov
add
pop
rcrb
inc
pusha
xchg
or
jne
jle
push
out
cli
xchg
push
pop
movsb
adcl
xlat
and
sbb
packuswb
stos
adc
neg
loopne
mov
add
xchg
cmpsb
jmp
out
jge
in
cmp
sub
sbb
daa
cli
xor
sbb
and
cmp
inc
add
ljmp
aaa
dec
jnp
sbb
dec
add
and
jle
dec
subl
mov
add
sub
xor
rclb
scas
mov
xor
shll
sub
arpl
or
mov
jge
add
daa
or
cmp
push
dec
fsubrs
push
bound
sbb
popf
cmc
mov
dec
divb
sbb
ret
outsl
testb
inc
jmp
sbb
int
add
sub
cwtl
mov
scas
adc
pop
jae
lods
imul
mov
jo
movsb
dec
lds
mov
mov
ret
jg
lcall
push
add
or
xor
dec
daa
aad
jmp
rcll
loop
cmp
repnz
gs
cmp
mov
mov
cmpsl
fidivs
xor
enter
xchg
cmc
pushf
imul
test
scas
sub
loope
jg
lahf
icebp
fimull
fwait
or
mov
sbb
jne
pop
std
outsb
sub
lods
sbb
pusha
add
loop
dec
inc
lods
xchg
ficompl
shl
je
jne
in
je
das
push
push
inc
outsb
clc
fistps
mov
sub
or
mov
or
jl
inc
push
into
scas
sbb
rcll
stos
jmp
push
cmpsl
jecxz
enter
sub
cmp
insb
xchg
jg
das
pop
inc
and
sarl
mov
mov
cwtl
inc
or
bound
shr
add
jb
je
sarl
in
xor
add
imul
xor
ret
cmp
add
fs
lret
dec
ljmp
lcall
std
repz
add
adc
sub
mov
push
inc
mov
xchg
les
call
cwtl
repz
shr
mov
dec
or
dec
iret
inc
imulb
pop
pop
popf
inc
sub
mov
sub
sbb
push
popf
jns
push
mov
sub
add
inc
add
inc
sbb
mov
lahf
aad
fxam
and
cmovp
and
xlat
sbb
sahf
mov
scas
sti
and
xor
fldenv
movsb
jmp
mov
int
outsl
das
mov
mov
push
cmpsl
sarb
cltd
dec
das
jmp
jmp
cmp
fildll
stos
or
lcall
jne
add
andb
repz
test
mov
inc
pop
cli
fsubs
adc
ret
shrl
inc
pop
pop
mov
or
shrb
push
ret
xlat
inc
pop
jmp
filds
push
pop
ret
testb
push
les
hlt
xor
jp
scas
ficompl
scas
add
xor
int3
shlb
lret
shll
gs
lret
aas
call
push
loop
testl
mov
push
push
lods
ret
sbb
sbb
test
mov
das
xor
loop
and
nop
out
inc
push
insl
divl
sub
sbb
xchg
mov
mov
jg
xor
cmp
xchg
and
cmp
sub
mov
push
into
push
mov
pop
sub
fidivs
loopne
lods
xor
ja
ljmp
or
sbb
xchg
inc
push
aad
jae
push
push
mov
or
pop
fstpt
cmp
loopne
sbb
xchg
mov
aaa
mov
mov
xor
jmp
addb
add
neg
popa
push
cmp
xor
or
sbb
out
lock
jne
xlat
mov
fstl
pop
pop
jmp
add
fabs
popf
mov
sbb
movsb
je
and
mov
sbb
xchg
out
inc
or
or
scas
das
clc
jmp
xor
sbb
push
call
add
in
xor
jb
mov
or
mov
cmp
loope
dec
xchg
sbb
dec
dec
daa
sarb
mov
pop
clc
mov
and
push
pop
out
pop
pushf
and
push
lds
es
leave
jb
cmp
stos
dec
scas
inc
add
je
push
inc
out
mov
aaa
or
lret
push
andb
out
lret
adc
fmuls
jecxz
inc
mov
xchg
mov
ror
sti
aam
aaa
cmp
shlb
cmp
dec
and
mov
adc
subb
sub
adc
stos
scas
aaa
sbb
in
cltd
mov
dec
sarl
pop
adc
iret
push
leave
jmp
push
jo
and
pop
dec
leave
add
mov
fldt
lds
push
pop
cmpsl
inc
movl
adc
mov
push
out
sub
popa
cwtl
daa
cli
sub
mov
sub
sbb
or
shl
add
adc
mov
adc
loope
push
fisttpll
std
and
or
sti
rorb
call
repz
mov
add
sub
xchg
aaa
nop
push
dec
push
fistl
jle
sbb
or
fmuls
testb
sbb
push
or
push
scas
out
mov
jnp
dec
xchg
lret
je
cli
aaa
mov
or
jae
daa
push
out
and
pop
dec
xor
push
lods
nop
int
xchg
xor
pop
cmp
fadds
xor
lret
jno
pop
xor
loope
xor
inc
and
testl
test
mov
nop
mov
ficoml
cs
nop
or
sub
adc
or
cmp
movsl
test
mov
sub
cmpsb
sub
jne
or
add
and
in
adc
das
push
arpl
jmp
pusha
or
loope
outsl
and
sbb
and
adc
imul
mov
ja
dec
aas
mov
xchg
cmp
xchg
jg
idivb
adc
add
mov
jns
loope
aaa
inc
cmp
jp
sbb
push
dec
xlat
test
int3
lock
aaa
xchg
andnps
out
into
cmp
jecxz
sub
adc
sub
in
pop
pop
xchg
adcl
jg
repz
jnp
jbe
jle
pop
and
jg
aas
push
imull
andl
enter
cmp
or
nop
mov
cltd
fadds
or
mov
jbe
xorl
jbe
cwtl
and
ja
and
and
stos
gs
xor
adc
arpl
iret
lret
pop
ljmp
gs
lret
jg
or
jnp
sbb
pop
stos
fildl
or
mov
and
xchg
sub
sbbl
leave
and
or
mov
and
jbe
sbbl
addr16
jo
data16
push
scas
fldl
mov
movntq
mov
out
sbb
mov
leave
push
xchg
scas
cmpl
xor
xor
ret
push
add
sbb
mov
adc
gs
repz
sbb
nop
push
lahf
das
iret
test
adc
lret
pop
out
xlat
int3
adc
pop
push
int
sbb
leave
push
fwait
add
fisttpl
mov
daa
bswap
scas
sbb
in
jae
hlt
inc
jno
sti
pmaxub
fistpl
sub
xrstors
sbb
aas
ret
mov
movsl
popa
cmpl
adc
xchg
in
and
adc
pop
push
jae
leave
popf
add
dec
fbstp
add
inc
insb
cmovg
jmp
out
xor
cmp
cmpsb
mov
aaa
mov
ds
mov
mov
pop
leave
aad
push
pop
mov
fistpll
in
aaa
and
and
fldenv
jbe
aas
mov
imul
outsl
fistpll
push
dec
add
imul
adc
fldenv
sub
pop
jae
pop
dec
fistpll
cmp
pop
pop
jnp
imul
mov
mov
and
dec
sbbb
insb
nop
sahf
adc
mov
jnp
push
cmp
push
and
mov
xor
out
jl
pop
and
fdivrl
jnp
jge
sub
out
sub
jnp
inc
daa
or
adc
data16
or
iret
str
sbb
in
push
fistpl
iret
dec
xchg
in
cmp
pop
mov
test
sbb
lods
or
sbb
ljmp
into
and
mov
ret
mov
cmpsl
jp
icebp
mov
and
sub
ror
iret
mov
add
jbe
pop
dec
clc
mov
or
aaa
loop
ja
in
sarb
adc
and
inc
fbld
out
inc
or
mov
out
shlb
je
insb
nop
cmp
or
out
sub
inc
sub
out
or
sub
mov
orl
or
or
jge
and
les
les
push
jbe
sbb
outsb
adc
or
xlat
jle
push
lods
ljmp
sbb
sbb
aad
dec
mov
mov
cmpsl
or
cmp
or
lret
test
or
cmpsl
or
lods
cmp
dec
inc
fchs
xor
jp
test
adc
xchg
add
in
loopne
fdivs
sub
mov
test
push
mov
xchg
and
mov
push
and
loop
or
sub
js
mov
and
mov
lret
cmpsb
stos
jle
push
push
xchg
sub
jecxz
xorb
bound
cltd
sub
mov
es
pop
jno
and
push
adc
scas
ficompl
iret
pusha
mov
icebp
pop
rclb
add
shll
mov
push
icebp
subb
aaa
jo
dec
mov
and
loope
pop
imul
popa
adc
aam
and
mov
scas
popa
incl
pop
add
ss
xor
adc
jmp
je
imul
cmc
push
dec
push
and
roll
mov
jg
add
imul
lds
jb
mov
and
or
addr16
outsl
sub
les
push
dec
test
cmp
fmuls
bound
out
scas
mov
xor
pusha
jp
jae
dec
xchg
and
scas
mov
xchg
aaa
add
dec
mov
jg
push
dec
sub
xchg
mov
out
enter
and
dec
lcall
stos
jnp
fadds
mov
dec
js
inc
es
loope
cltd
cmpl
ficompl
lods
out
mov
xor
daa
fwait
cmp
push
mov
push
inc
add
add
sub
aaa
jo
jno
loope
jno
dec
mov
pushf
aas
popa
in
popf
pop
es
outsl
mov
mov
xor
scas
mov
inc
testb
push
fwait
adc
xchg
sbb
mov
push
fnstcw
add
xor
cld
add
shll
adc
cs
adc
and
in
lcall
ret
inc
dec
rolb
mov
sub
cld
add
and
andb
adc
stos
push
ljmp
add
movsb
push
sub
add
pop
pusha
fcomps
dec
lods
push
dec
aam
mov
cwtl
lods
dec
mov
jp
sub
stos
push
ss
adc
adc
jns
and
mov
add
adc
cmpl
cmpl
movsb
mov
and
jae
cltd
cwtl
push
push
push
shlb
in
cmpsb
jb,pn
push
mov
inc
mov
jp
xor
xchg
dec
shlb
cli
test
aaa
mov
ds
xlat
cmp
mov
sahf
adc
jns
and
cmp
mov
cmp
add
fisubl
push
in
mov
loopne
fmulp
cmpsl
les
add
cld
jmp
adc
test
lahf
pop
adcb
mov
repz
and
pop
adc
push
pop
daa
notb
sahf
push
lea
subb
in
cld
sti
ret
adc
jae
inc
pushf
and
bound
jl
xchg
mov
mov
loopne
adcb
leave
mov
inc
xor
out
push
and
push
sbb
pop
nop
imul
sti
inc
in
push
xchg
scas
mov
add
xchg
lods
jmp
adc
add
leave
adc
push
push
insl
jne
jmp
mov
lahf
bound
sbb
test
jo
ds
lods
or
mov
loop
lret
inc
cmpl
gs
frstor
jo
out
xor
mov
xor
pop
inc
xchg
test
and
jecxz
adc
cs
lods
or
and
jmp
xor
jecxz,pn
fwait
inc
adc
pop
movsl
lret
sub
test
cmp
mov
adc
je
cmp
cwtl
mov
xchg
ret
dec
je
outsb
subb
iret
sbb
xchg
fsubp
sub
sub
push
or
xchg
imul
jnp
add
cmp
cmp
sub
add
aas
cld
adc
cmp
add
xchg
stos
inc
jne
cmpsb
outsl
dec
add
or
mov
in
aas
sub
mov
or
mov
js
inc
xchg
mov
mov
mov
ds
outsb
push
mov
sbbb
rcl
sahf
mov
cmp
pop
xchg
mov
inc
jecxz
xchg
repnz
mov
mov
addl
arpl
adc
push
xor
cmp
mov
cmc
iret
and
in
adc
out
gs
push
fisttpl
test
dec
add
jle
or
xor
mov
jns
mov
pop
xchg
mov
push
add
fists
sbb
push
das
lods
xor
inc
push
fistpll
movsb
aad
cli
fnsave
add
adc
mov
inc
push
rcrb
mov
mov
xor
arpl
pop
movl
push
shll
iret
mov
popf
mov
adc
ljmp
xchg
push
push
jno
int3
fldcw
jmp
mov
xchg
inc
sahf
iret
mov
push
adc
mov
jo
jb
imul
add
sub
pop
add
xor
push
sub
jno
sub
adc
arpl
xor
les
loopne
sub
jle
dec
je
leave
push
xchg
jmp
popa
arpl
add
mov
fwait
popf
mov
stos
filds
test
dec
push
popf
pop
sub
rorb
mov
mov
out
inc
sbb
sahf
push
and
clc
cmpsb
mov
rclb
neg
sbb
mulb
inc
mov
add
clc
inc
loop,pn
cmp
mov
and
pop
int3
inc
push
or
hlt
cmp
dec
loopne
shll
adc
and
push
mov
lea
bound
fldenv
aam
stos
je
rcrl
es
fiaddl
int3
popa
jl
sub
push
bound
mov
fstps
loop
sbb
jne
pop
adcl
inc
push
icebp
push
pop
les
clc
jge
dec
sub
dec
rorl
lods
jb
push
push
or
push
lret
pop
mov
cmp
mov
mov
push
stos
das
imul
cmp
push
add
ret
mov
lods
pop
inc
adc
cmp
cwtl
ja
sbbl
or
pop
pop
in
and
pop
cmp
popa
dec
sar
mov
xor
fdivrp
jb
jo
ret
or
or
incb
imull
stos
les
cmc
and
xor
or
cs
cwtl
push
fwait
mov
xor
inc
xchg
ss
add
mov
orl
cmp
pop
inc
mov
lret
fidivrs
imull
fnstsw
aas
mov
push
dec
iret
push
es
sub
lret
scas
xchg
and
test
sbb
add
push
push
test
inc
insl
scas
fsubl
neg
inc
sub
sbb
add
push
mov
or
adc
popa
inc
nop
ficoml
mov
xor
arpl
push
mov
add
push
lcall
das
cwtl
xlat
andnps
cmp
cs
jno
movsb
or
lods
and
inc
je
ja
out
cmp
sbb
rcl
pop
dec
sub
sub
xchg
xor
adc
les
xchg
hlt
push
test
pop
adc
mov
sub
cltd
enter
sbb
jle
inc
and
insb
and
ljmp
cmc
inc
aaa
xor
adc
jl
mov
sbb
inc
fwait
mov
add
pusha
shlb
in
js
xchg
rcll
sar
dec
cmp
lahf
or
sub
rorl
outsb
add
fmuls
dec
fcoms
pop
lahf
mov
adc
jp
jge
or
xchg
and
rorl
and
cld
subb
sbb
stos
push
jle
or
cmp
inc
hlt
mov
test
dec
cli
mov
pop
inc
icebp
add
and
or
pop
and
xchg
sbb
ljmp
ljmp
sub
iret
jnp
jbe
ljmp
xor
aas
fstps
xchg
and
add
add
orl
push
subb
cmp
or
fistpl
add
aaa
lods
pop
popa
iret
ds
mov
cmpl
push
lret
push
repnz
stos
clc
loop
push
xchg
xchg
xlat
xchg
rcl
xor
fildl
inc
jge
push
xchg
sbb
fs
jp
sbb
inc
push
nop
and
scas
sub
xchg
adc
pop
add
add
and
sub
in
sarb
fwait
and
iret
pop
and
cmp
movsb
jmp
or
mov
ja
xchg
mov
lahf
fwait
add
lret
xchg
stos
push
xor
xchg
sbb
and
test
cmc
int3
and
arpl
jg
jns
fldcw
cmc
cmpsb
pop
xor
call
scas
out
cmc
or
and
xor
shl
or
out
cmp
js
xor
dec
ljmp
inc
pop
xchg
and
lods
clc
ja
add
fnstenv
jp
aaa
mov
push
out
rcll
mov
nop
dec
adcl
sbb
adc
sbb
xor
sub
loop
into
loopne
or
ds
inc
add
pop
add
iret
lcall
mov
bound
movlhps
mov
js
pop
nop
inc
lods
sbb
inc
mov
sti
das
mull
mov
add
fistpl
ja
push
mov
sbb
sti
push
and
out
iret
insl
xor
movsl
addr16
insl
pop
test
xchg
mov
movsl
add
enter
js
cmc
pop
out
add
dec
push
das
mov
lods
pop
ja
movsb
add
jnp
or
xor
mov
xor
in
pop
rorb
pusha
fwait
les
inc
and
seta
push
ss
mov
inc
jle
sub
rolb
test
or
adc
cwtl
adc
cmpsl
adc
je
or
jecxz
bound
mov
out
mov
pop
dec
inc
xorb
mov
push
stos
aas
pop
iret
mov
jl
into
inc
and
sbb
bound
das
rcrb
jbe
ljmp
out
add
sub
addr16
aam
inc
std
xor
xchg
inc
popf
and
pop
sbb
pop
loope
add
jnp
sbb
push
mov
inc
sbb
repnz
fmuls
add
mov
ljmp
or
ret
add
insb
lock
jo
jmp
xorb
jnp
ret
icebp
insb
mov
call
adc
xor
fidivs
inc
out
and
sub
ret
in
xor
mov
out
scas
out
and
mov
inc
mov
sbb
sub
jg
outsb
loopne
fildll
add
xor
insl
iret
das
push
mov
into
int3
fidivrs
xacquire
or
add
add
fldt
lds
sbb
pop
test
adc
arpl
dec
push
mov
sub
pushf
outsl
add
dec
ja
movl
enter
out
sub
pop
inc
cmp
pushf
divl
or
das
push
imul
das
aaa
jns
push
insl
xlat
xor
rclb
aas
ficompl
or
add
mov
mov
xchg
dec
and
sbb
xor
pop
sbb
outsl
imul
sub
or
jns
xchg
sbbb
cltd
incl
pop
in
dec
mov
add
aad
mov
ljmp
sbb
popa
jns
call
gs
loopne
cmp
cmp
lock
sub
adc
cmpl
cmc
fsubs
or
xor
sub
es
sti
cmp
out
pop
insb
aam
push
mov
cmpsb
aam
pop
jo
gs
add
pusha
jge
stos
inc
bound
or
cmp
xor
rorl
xor
push
mov
inc
cld
test
cs
or
or
mov
pop
int3
bound
insl
mov
push
mov
add
sub
mov
fs
cmp
shll
and
js
movl
cmp
pop
mov
aas
out
lods
cmp
pop
loop
or
in
and
push
cltd
sahf
out
jbe
icebp
adc
jno
xchg
mov
sahf
add
sub
enter
andb
push
rolb
cmpsl
test
vrcpps
es
mov
jb
inc
inc
sbb
push
add
adc
pop
jmp
mov
add
rcrb
rclb
fcompl
sub
inc
inc
movsb
mov
pop
pop
jle
outsb
mov
sbb
test
mov
mov
outsl
mov
ds
out
sub
dec
aas
xor
xor
pop
das
jg
es
and
call
addr16
call
xlat
push
adcb
loopne
cmp
jmp
cmp
idivl
les
mov
mov
dec
stos
mov
add
sbb
test
test
push
idivl
push
mov
mov
std
ss
les
adc
out
sbb
lock
and
push
mov
adc
lods
or
pop
pop
inc
inc
adc
xor
push
in
add
dec
fstpt
ds
push
pop
sbb
clc
xlat
sahf
mov
iret
jmp
mov
into
popf
mov
mov
jp
cmp
adc
pop
rcl
add
push
rcll
outsb
divl
mov
push
ficoml
ja
sbb
mov
sub
sub
scas
out
faddp
pop
or
cmp
push
scas
or
adc
xor
pusha
or
add
int3
sbb
loopne
mov
sub
inc
push
add
imul
add
cmovg
dec
test
addb
mulb
mov
or
stos
seto
fiadds
lea
es
adc
lcall
mov
jecxz
jbe
es
insb
cmp
add
dec
adc
lret
mov
push
call
movl
add
dec
add
rcrl
add
dec
push
and
sbb
add
dec
sub
dec
and
hlt
and
xor
fdivl
or
jns
push
rcrl
ds
ds
subl
ds
lods
imul
out
cmpb
out
fisttpll
fcompl
fbstp
and
insl
add
out
push
mov
mov
and
stos
ret
push
test
xor
fidivl
push
and
jecxz
sub
and
xor
cmp
sbb
das
push
sahf
or
inc
jno
scas
and
orl
int3
shr
push
cmp
or
inc
jmp
dec
aam
stos
mov
fsubs
xor
das
pop
lret
movsl
jmp
pop
pop
and
shll
scas
fstpt
in
or
jp
inc
das
dec
imul
jne
pop
push
jp
out
mov
dec
rorl
mov
pushl
je
dec
pop
mov
cs
sbb
jl
xor
test
bound
popa
sub
xor
and
mov
movsl
inc
bound
jae
inc
push
xchg
out
and
pop
pop
and
movl
addr16
push
es
in
ret
xor
jne
jbe
push
pop
insb
adc
cmp
aad
mov
sbb
sbb
xlat
add
sub
dec
sbb
mov
jno
and
pop
ljmp
repz
sbb
iret
mov
cwtl
sub
fcmovne
fnsave
lods
sahf
pop
dec
xor
cmp
sub
lock
mov
sbb
sub
aaa
xchg
imul
xor
lret
je
mov
dec
loopne
shrl
inc
cld
fldt
sub
push
fwait
push
scas
sarl
shl
xchg
jecxz
bound
int3
in
ja
or
popf
sub
testl
movl
cmp
cmp
or
movsb
dec
xor
scas
adc
sti
mov
add
movsl
cmp
jnp
ret
sbb
cmp
fistpl
add
push
sub
leave
sahf
sbb
shrl
loop
addl
pop
hlt
sbbb
xchg
mov
inc
cmpb
jmp
in
add
filds
pop
stc
adc
dec
andl
xchg
sub
jge
jle
lock
mov
pop
int3
adc
jle
pop
fcoms
adc
loope
xlat
inc
inc
push
movsb
or
jmp
pushf
dec
dec
cmp
push
ret
sahf
mov
xchg
pop
addr16
cmc
stos
arpl
jp
setnp
adc
adc
enter
dec
dec
jl
jge
jge
rorl
mov
nop
pop
push
xchg
jle
sub
jg
subb
add
cmp
inc
and
in
jge
add
add
test
cmp
pop
mov
int3
xlat
jecxz
ret
in
in
pop
add
cmpb
in
mov
xor
scas
sbb
adc
test
jp
add
cmc
push
arpl
ds
push
sbb
xor
jae
xor
mov
js
jb
sbb
int3
les
jmp
das
add
sbb
rolb
inc
push
shlb
push
addb
xchg
jnp
jg
outsl
jno
lods
dec
xchg
je
test
test
mov
inc
cwtl
subb
dec
and
addb
stos
leave
inc
jg
adc
adc
mov
call
and
addl
xchg
pop
add
xorb
cwtl
mov
out
cmp
scas
or
cmp
dec
lret
int
adc
push
leave
sub
add
mov
sti
and
or
fs
xlat
aaa
bound
push
adc
fiadds
mov
or
std
shll
mov
sbb
inc
les
sbb
mov
inc
jl
mov
aam
aad
inc
aam
inc
cmp
jae
pop
cmp
fxam
mov
ret
add
sub
aam
mov
or
mov
add
sbb
jae
outsl
ss
inc
popf
bound
loopne
jnp
imul
pop
mov
subl
adc
sbbb
and
inc
es
pop
andl
or
inc
lods
mov
data16
in
stos
jns
test
fs
add
ss
addr16
mov
mov
pop
sbb
xor
push
js
dec
xlat
sub
dec
lods
loope
add
call
mov
jecxz
add
in
and
add
gs
in
test
pop
out
sbb
inc
jns
cmpsb
stos
xchg
imulb
jle
add
add
mov
jo
cmp
das
out
mov
cmp
out
sbb
lock
gs
xchg
call
cmp
inc
mov
adc
mov
mov
fnsave
xchg
sbb
adc
adc
fwait
pusha
mov
cmp
push
jmp
inc
mov
jne
jecxz
jge
push
icebp
sbb
push
mov
jbe
adc
maskmovq
testl
aas
repz
popf
or
ljmp
cmpsb
sti
fsubl
cmpl
lret
dec
int
nop
stc
pop
ret
inc
jle
xor
int3
daa
dec
adc
ljmp
rcl
push
daa
jbe
dec
add
xchg
and
xor
push
jg
dec
std
cmp
sub
fldl
test
outsl
add
add
lcall
insb
pushf
jo
xchg
fwait
icebp
data16
aas
popa
pop
push
pop
and
fbstp
daa
sbb
dec
mov
sarl
sbb
inc
call
imul
and
mov
aam
shrw
mov
mov
adc
or
xor
sub
sarl
add
push
mov
fcomps
sahf
pop
add
fistl
or
fisubrl
xchg
fldcw
nop
ret
inc
mov
dec
mov
testl
ret
mov
jmp
add
pusha
pop
sbbl
or
pop
jb
dec
jnp
inc
stos
es
sar
cmp
push
add
fildl
andb
aad
les
xchg
mov
arpl
das
cmpsb
stos
sub
jg
arpl
dec
sub
lcall
bound
leave
ror
inc
orl
mov
sarl
pop
lea
dec
or
jnp
das
fisttpl
add
inc
lock
mov
call
scas
cmp
mov
in
lret
and
adc
imulb
imul
xor
fcoml
loop
add
xchg
cmpsb
jle
add
push
mov
and
jbe
inc
mov
and
stos
jle
xor
mov
jno
lahf
and
dec
add
ds
ja
es
cs
or
ret
aad
adc
loope
loope
rcrb
mov
inc
xor
and
adc
popa
or
jno
mov
mov
nop
push
push
les
push
push
mov
stos
mov
scas
mov
cmpl
adc
inc
jnp
aaa
and
adc
sub
mov
push
push
popf
inc
cld
add
scas
pop
xlat
xchg
add
add
icebp
js
adcl
jb
push
push
xor
and
inc
sub
sub
aaa
dec
mov
loop
neg
and
scas
adc
fidivs
push
subb
stos
adc
ja
outsb
outsb
roll
and
or
mov
xor
or
jle
imul
mov
xchg
jae
add
sahf
push
int
ds
ds
xlat
add
loopne
and
mov
into
sbb
sti
adc
add
loopne
ss
sub
jmp
out
aad
push
jbe
sbb
push
pop
and
cmp
and
xchg
mov
adc
lret
int
mov
aam
push
jecxz
mov
inc
icebp
xchg
add
mov
cmpsb
lods
in
loope
shlb
mov
hlt
jnp
test
xchg
loop
cmpsl
repz
lahf
dec
push
adc
inc
gs
cld
add
and
jl
movsb
sub
cmp
fsubrl
inc
sub
pop
jbe
ret
adc
mov
mov
jl
sbbl
daa
lcall
cltd
out
sub
mov
mov
popa
iretw
xchg
mov
cmp
add
scas
xchg
adcb
or
fcoms
sbb
push
mov
jo
adc
sbb
xlat
dec
cld
je
add
js
mov
adcl
adc
mov
enter
dec
xchg
imul
xor
inc
pop
pusha
sbb
add
xlat
mov
jp
outsl
xchg
int3
xchg
adc
mov
arpl
fsubrs
aad
mov
fcmovnu
add
xchg
shl
sub
outsl
xchg
dec
and
mov
pop
lcall
and
adc
jnp
mov
cmp
leave
mov
ljmp
leave
inc
pop
loopne
pop
and
jecxz
sub
dec
and
js
sub
sbb
inc
test
jns
adc
pop
mov
mov
js
outsb
xor
cmpsb
scas
out
mov
and
inc
hlt
jo
pop
pushf
arpl
loop,pn
pop
push
sbb
and
out
mov
in
adc
xlat
push
sub
adc
push
mov
and
lcall
xchg
test
shll
sahf
inc
int3
push
ljmp
jnp
inc
adc
fstpt
sub
adc
adc
icebp
pop
xchg
das
in
int
fildl
xlat
pop
or
adc
fadds
sub
pop
sub
cmp
sub
andl
rorl
enter
lds
and
pop
js
aad
fistpl
add
lock
xchg
cmp
or
jae
inc
rcl
lcall
or
push
pop
test
inc
lods
adc
orl
cmp
pop
vhaddpd
add
outsb
xchg
fwait
movsb
mov
rcrl
dec
push
aam
push
dec
push
and
or
xchg
sbb
sbb
adc
mov
adc
push
sub
js
fwait
test
mov
lahf
mov
leave
mov
icebp
daa
push
inc
lock
arpl
xor
lock
xor
sahf
and
pop
cmpsl
pop
add
mov
xchg
push
push
mov
std
stc
int3
inc
add
and
mov
add
push
jnp
add
jmp
imul
lahf
sub
cmpsb
or
add
xor
sbb
insl
pop
inc
xchg
pop
dec
push
leave
cmp
iret
push
in
shll
fsubl
sbbb
mov
in
push
cmp
adc
outsl
inc
nop
add
jle
sahf
mov
lods
mov
sbb
jg
cmp
imul
decl
sub
int
cld
mov
mov
adc
and
fdivrs
leave
pop
addr16
xor
mov
sbb
in
sbb
test
lret
adc
das
addl
iret
into
xchg
mov
adc
sarl
scas
daa
xor
add
test
adc
rcrl
cwtl
adc
into
loope
stos
sub
xlat
sub
ds
mov
repnz
and
pop
lea
cmp
pop
popa
jle
push
xchg
ja
push
push
loopne
sar
ficoms
mov
in
add
sub
inc
movsb
mov
ror
aad
std
aaa
jb
movsb
out
adc
jl
or
mov
mov
inc
sub
push
mov
jbe
mov
push
in
add
fs
add
add
adc
sbb
and
ror
mov
mov
push
loope
ficoml
leave
inc
mov
mov
test
mov
ljmp
push
pop
and
lahf
xor
fisttpl
out
ret
popf
mov
movsb
fsubrp
inc
xchg
jae
xchg
jle
adc
dec
fmulp
jbe
icebp
add
jl
pop
and
movsl
fwait
imul
rorb
mov
mov
dec
mov
popa
sbb
loopne
dec
cmp
pop
in
cpuid
adc
fnstcw
and
xchg
xlat
mov
ror
test
in
sbb
mov
adc
in
das
jg
mov
cmp
add
mov
out
xor
in
ret
ret
dec
lcall
and
or
cmp
ds
into
stos
cmp
lea
imul
jo
adc
test
int
lods
pushl
push
fisubs
cmpsl
dec
mov
addl
and
jmp
inc
lahf
cmp
add
popf
out
fwait
das
inc
or
fisttpll
inc
add
xchg
pop
jo
in
es
xor
outsl
cmpsl
mov
sub
add
and
movsb
inc
mov
xor
faddl
es
fsubl
add
nop
add
sub
cmp
dec
into
in
orb
imul
add
add
test
sbb
add
jne
sbb
js
iret
test
fmull
and
sbb
imul
push
jp
in
pop
rcr
mov
inc
imull
ss
mov
and
sbb
inc
out
aad
or
add
push
and
sub
outsl
or
fstpt
mov
add
rcr
add
adc
pop
fsubrl
iret
mov
push
insb
xor
insl
faddl
leave
pop
xchg
pop
test
dec
test
mov
lret
or
icebp
pop
cmp
cmp
mov
and
cmp
in
adc
inc
sbb
gs
addr16
lea
lea
jno
js
lock
xchg
or
mov
insb
sbb
mov
dec
and
dec
sbb
mulb
mov
mov
popa
ret
mov
inc
sahf
lods
and
jl
inc
pop
add
sbb
jbe
roll
mov
and
jno
into
sub
push
mov
roll
movsb
and
mov
mov
mov
xchg
hlt
into
cmpsb
mov
add
mov
jb
sbb
lret
sub
into
xchg
sbb
push
jne
inc
mov
lret
dec
out
cltd
shlb
mov
test
dec
cltd
sbb
dec
inc
shrl
sbbl
ja
push
lcall
bound
mov
ret
popf
push
inc
ss
mulb
incb
and
xor
jb
pop
sbb
cmp
push
jbe
mov
and
ficomps
lds
mov
xchg
cmpsl
xor
in
clc
add
cmpsl
repnz
jmp
test
cmp
imul
js
inc
scas
xchg
jbe
imulb
leave
fisubs
mov
imul
pop
sbbb
sahf
stos
andl
ret
fisubl
or
fwait
fs
lcall
mov
js
dec
lea
out
iret
sub
rcrb
fwait
jl
es
sbb
add
lahf
nop
mov
cmc
in
add
xchg
arpl
insl
push
xchg
and
xor
mull
cmp
out
adc
fs
test
mov
pusha
push
and
test
fsubs
stos
push
int3
push
popa
pusha
adc
fldcw
fcoml
imul
outsl
push
add
icebp
es
sub
stos
push
xchg
sbb
in
in
or
add
inc
dec
cwtl
xchg
daa
fcoml
insb
mov
inc
lods
or
andl
mov
and
inc
imul
lods
inc
inc
pop
mov
mov
xchg
imul
add
pop
dec
lock
push
test
or
xor
les
rcrb
pusha
popa
inc
mov
xor
cltd
pop
inc
sbb
dec
es
and
xchg
sbb
icebp
test
outsl
pop
adc
jno
ljmp
mov
mov
xor
ss
andb
and
mov
jl
scas
dec
or
mov
enter
xor
out
jle
jg
addr16
add
xchg
push
bound
inc
pusha
xor
movsb
xchg
sub
add
sbb
mov
jb
sub
movsl
pop
add
cltd
and
xor
lea
test
loopne
mov
xchg
pop
push
or
xor
adc
mov
shll
adc
les
push
jo
es
xor
xchg
ret
jo
and
lods
and
and
out
lods
pop
pushf
adc
popf
mov
pop
in
into
dec
mov
inc
pop
jp
mov
aaa
jno
adc
xchg
push
and
andb
inc
test
pop
mov
mov
pop
pop
xchg
sti
shr
mov
adc
and
push
inc
push
xchg
popf
add
arpl
pop
test
addr16
push
sbb
jp
and
pop
jmp
push
pop
add
mov
or
das
jle
test
mov
repz
jnp
leave
or
mov
mov
adc
fdivrs
cmp
pop
iret
lock
pop
pushf
xchg
pusha
sbb
mov
aad
aas
rcrb
xchg
imul
mov
mov
inc
xor
fs
xchg
sti
inc
pushf
xor
icebp
sub
clc
call
or
jbe
jp
add
shrl
cltd
add
lcall
jb
pushf
js
fwait
adc
mov
test
std
and
xchg
test
lahf
push
popf
mov
dec
mov
inc
ret
sub
nop
insl
mov
add
jge
cmc
push
fsubl
pop
jmp
mov
inc
xchg
inc
ja
or
cmp
and
add
add
test
dec
pop
jnp
add
arpl
gs
mov
adc
inc
rcll
and
scas
adc
cmpsb
movsl
and
sarl
and
clc
cwtl
mov
rcl
adc
cmp
fwait
add
sbbb
push
jl
push
stos
pop
daa
out
out
scas
or
xchg
lds
gs
cmpsb
adc
stc
push
cmpb
and
sbb
dec
add
nop
inc
or
js
and
mov
jge
into
or
stos
arpl
loop
loop
test
sbb
movsb
test
mov
ljmp
jmp
mov
dec
adc
psubusb
pop
sub
xor
daa
sub
mov
mov
dec
or
sbbl
mov
pop
je
out
pop
mov
push
mov
xchg
cwtl
inc
mov
xor
dec
xchg
fiadds
in
and
cmp
sub
popa
pusha
pop
call
or
xchg
dec
sarl
loopne
or
or
sbb
iret
add
int
push
sbb
pop
mov
dec
and
test
and
inc
and
or
xchg
mov
xchg
gs
sbb
sub
fistpl
push
aas
and
jp
inc
push
lcall
xchg
pop
or
nop
int
outsl
mov
jle
scas
addr16
push
adcb
inc
sbb
scas
xchg
scas
sub
pop
lods
and
pop
mov
mov
cmp
icebp
pop
sub
daa
popf
pop
sbb
mov
imul
inc
pop
mov
push
andl
sbb
data16
add
mov
push
add
add
or
lods
dec
rcrl
popa
sub
xchg
jb
stc
cmp
pushl
sahf
mov
jo
mov
hlt
mov
jmp
xchg
xchg
xor
add
push
lret
les
ljmp
and
loop
pop
pop
aad
nop
mov
or
add
lods
repz
insb
out
xor
fimull
push
lods
jmp
xor
mov
into
cmc
mov
aad
adc
clc
or
shll
xchg
and
dec
push
push
cmp
repnz
test
mov
arpl
push
mov
pop
or
pop
subl
sbb
add
push
push
add
and
into
shl
sbb
cs
xchg
aam
adc
outsb
hlt
jge
sti
add
ret
cmp
pop
lock
pop
pushf
adc
or
xchg
sbb
std
push
test
in
and
mov
addb
add
imul
mov
cwtl
and
mov
push
xor
mov
xchg
xchg
mov
push
add
jns
or
stos
push
add
add
lcall
inc
popf
adcl
cltd
add
xchg
mov
push
mov
mov
adc
and
jg
cmp
push
mov
mov
iret
hlt
add
cmp
sahf
push
jp
add
stos
cmp
int3
mov
dec
or
or
into
js
out
das
add
fstl
xchg
mov
cltd
pop
test
or
cmpsl
out
test
movsb
cmp
mov
push
leave
movsb
imul
or
jo
pusha
add
inc
sbb
inc
xchg
push
xor
loopne
shll
imul
push
mov
jnp
xor
in
sbb
jp
xchg
add
dec
call
dec
inc
pusha
or
sbb
adc
cmp
xchg
inc
rol
xor
ljmp
mov
push
and
lcall
imul
push
daa
sbb
inc
ljmp
cmp
inc
mov
pop
inc
adc
sahf
rcrl
xchg
push
sub
xchg
loopne
add
sub
add
enter
xor
sbb
insl
jb
mov
mov
adc
or
movsl
nop
mov
dec
test
iret
jo
mov
pop
pop
or
dec
fadds
or
test
add
inc
pop
xor
lods
imul
sub
fsubrs
xchg
das
pushf
push
mov
cwtl
adc
daa
idivb
dec
dec
pop
cmp
xor
sbb
and
inc
cmpsb
xor
or
stos
push
pop
std
add
outsb
sbb
mov
outsb
mov
xor
xchg
rcrl
mov
push
cmc
nop
and
mov
ffreep
test
flds
popf
adc
mov
test
shll
xorl
mov
pop
outsl
xchg
adcb
pop
adc
and
mov
adc
testl
dec
scas
jne
inc
fwait
dec
data16
dec
xchg
pop
lcall
push
fwait
ret
and
out
out
xchg
clc
inc
addb
lahf
leave
inc
jnp
in
sub
sub
and
sbb
cmp
sbb
into
or
dec
adcl
icebp
sub
xchg
cltd
pop
and
in
lods
jg
and
dec
xor
or
mov
test
rorb
roll
leave
popf
mov
and
sub
testl
push
mov
es
dec
push
inc
lock
loopne
sarb
mov
arpl
and
testb
ja
call
rclb
jbe
or
scas
cwtl
pop
push
addr16
nop
sbb
sbbl
push
add
xchg
cmpsl
aaa
jmp
int
xchg
push
sub
enter
mov
cmp
loope
daa
jno
pop
leave
add
lds
les
push
insb
les
mov
or
daa
int
leave
push
jmp
add
adc
faddl
or
inc
inc
andb
js
adc
das
add
or
add
sbb
pop
adc
xchg
out
inc
ds
imul
or
hlt
xlat
jno
push
pop
push
in
jno
js
sti
andb
add
inc
and
fdivrs
fcompl
mov
pusha
mov
scas
sbb
les
icebp
adc
add
xchg
mov
test
push
mov
movl
inc
dec
adc
dec
or
fcmovne
cmpb
pop
sub
inc
add
inc
inc
mov
push
pop
cmp
inc
aas
loop
addr16
inc
push
sub
adc
or
inc
sbbb
add
inc
sbb
loope
addr16
xor
addb
jg
out
addl
test
testb
ret
test
les
ja
sbb
loop
pop
lds
jo
push
inc
pop
movups
and
pop
or
icebp
into
out
push
rolb
aad
jp
mov
test
cltd
int3
adc
jmp
aam
adc
inc
lahf
les
jnp
mov
in
mov
test
cmpsl
js
and
cmp
jle
or
lds
push
dec
pop
cmp
add
adc
pop
cltd
scas
cmp
mov
aaa
fstpt
les
mov
mov
xchg
mov
xchg
dec
sub
hlt
xor
add
test
imul
cmp
inc
adc
jp
xlat
loopne
adc
mov
xor
lock
in
lds
loope
inc
nop
mov
leave
ret
jne
mov
cmp
mov
adc
inc
dec
cmp
xchg
data16
daa
in
out
sbbb
jp
js
cld
xor
dec
rclb
or
roll
leave
enter
xchg
jo
cmp
and
shll
insb
or
pushf
mov
and
fadds
xlat
movlps
pop
pop
or
dec
incb
mov
mov
mov
and
ja
sbb
cmp
and
imul
sti
std
insb
mov
inc
lods
loopne
xor
lds
or
push
cmpsl
jo
push
andb
mov
fists
mov
pop
ja
lock
ficoms
mov
jmp
retw
or
scas
loop
xchg
mov
movsb
popf
adc
or
push
sbb
sbb
push
dec
push
sbb
push
add
fbstp
add
fadds
gs
loopne
les
xor
movb
js
mov
inc
mov
nop
cmp
mov
out
iret
mov
jb
adc
je
or
pop
pop
aam
lcall
xchg
fmuls
loopne
inc
inc
andb
out
out
or
dec
jns
sub
adc
jbe
sub
push
jecxz
bound
pop
and
jp
xor
xor
ror
cmpsl
jge
mov
adc
negl
pop
push
mov
out
addl
cli
mov
adc
je
loope
das
sbb
sti
int3
push
psrad
test
adc
mov
add
pushf
push
and
add
sti
lock
fstpt
cmc
iret
sahf
mov
add
rclb
push
jo
pop
sbb
nop
mov
add
xchg
sahf
fmuls
inc
xor
push
mov
adc
add
push
loope
es
xor
and
cli
int
sub
lods
and
pushf
fnstcw
and
stos
mov
pusha
inc
aad
fnstcw
xor
loopne
dec
js
out
dec
push
jno
ljmp
dec
lods
or
mov
adcl
test
inc
sbb
push
subb
push
es
xchg
xorl
mov
out
mov
add
sbb
or
sbb
shll
add
jge
mov
adc
cmpl
leave
mov
sub
sub
fmull
or
lahf
aam
ret
cmc
cli
fcomp
pop
or
inc
jne
pop
js
mov
mov
cmp
mov
shr
incl
sub
jle
jle
mov
cmp
lods
and
mov
stos
mov
adc
or
test
xor
adcl
and
sub
pushf
fwait
jecxz
ds
adc
fwait
lock
fwait
mov
mov
dec
call
push
fstpt
movb
mov
jmp
sub
and
cld
sti
pop
fwait
andb
push
je
leave
ret
lods
scas
cmpsb
es
repz
or
movsb
lea
or
pushf
ss
sub
or
pop
in
dec
adc
push
ret
and
push
ret
xor
adc
das
fucomi
and
and
and
xor
xchg
and
and
adc
ret
jmp
jns
add
mov
mov
mov
xor
nop
movsb
lahf
jge
cmp
dec
inc
jp
push
pop
adc
sub
js
ficoml
mov
aam
inc
iret
jne
push
pop
mov
cmpsl
pop
ljmp
mov
and
stos
dec
inc
icebp
mov
les
sbb
rolb
sbb
push
inc
inc
or
push
movsb
daa
imul
roll
jne
xor
xchg
push
dec
je
and
dec
stos
jno
and
push
mov
xchg
xchg
ss
lahf
stos
das
jb
bound
ffree
sti
test
rolb
add
inc
mov
addb
adc
add
jp
lret
aad
mov
inc
ud0
je
sbb
sbb
imul
data16
add
xor
cmp
add
adc
mov
cmpsb
repnz
mov
rolb
cmpsl
hlt
cs
sbb
cmp
popa
and
adc
outsl
pop
dec
rcrb
adc
cmpsl
enter
add
add
test
ss
cmp
stos
dec
ret
push
xchg
adc
dec
mov
popa
inc
mov
mov
push
orl
mov
lods
push
mov
mov
adc
clc
push
stos
adc
mov
mov
jo
sti
sbb
lret
lock
add
loopne
es
add
sub
and
js
popf
dec
cmpb
hlt
xor
sbb
jp
sbb
add
fwait
addr16
mov
mov
jg
sbb
sub
fsubl
bound
jo
inc
mov
mov
addr16
int3
add
jb
cmp
xor
push
and
sub
sub
mov
loopne
nop
dec
addr16
arpl
call
cld
and
jecxz
mov
flds
mulb
xor
inc
divl
add
popa
addr16
daa
iret
push
arpl
loop
jbe
cmp
push
je
sbb
add
repz
pop
outsb
inc
loopne
sbb
push
push
sti
rcll
loopne
fldl
test
cmp
js
jmp
daa
in
mov
mov
xchg
add
outsb
cmpsl
adc
fdivrs
jo
inc
dec
xchg
mov
cmp
mov
add
test
add
psubq
aam
fistl
dec
push
or
jle
xor
push
fldt
test
cwtl
adc
or
sub
mov
add
clc
mov
out
leave
add
stos
mov
mov
nop
inc
daa
mov
adc
inc
jno
jp
outsb
cmp
adc
mov
out
mov
roll
pop
test
or
pop
or
cmpb
addb
push
xchg
lods
jne
test
cmp
push
push
pop
pop
sub
adc
inc
sub
add
add
sbb
repz
ror
mov
mov
or
and
push
cmp
push
je
xchg
pop
push
movsb
jp
push
rolb
inc
sub
mov
xchg
push
stos
inc
sub
cmp
shlb
mov
mov
int
cld
pop
dec
inc
fdivl
das
add
pop
mov
push
pop
in
fwait
cld
rcrl
dec
sbb
xchg
inc
daa
jle
dec
adc
rclb
sub
rclb
iret
bound
xor
cmp
sbb
and
mov
jae
mov
icebp
add
es
push
mov
cmovae
stos
cmp
test
imul
aam
pop
in
jne
push
fbld
or
fistl
enter
mov
insb
imul
push
and
stos
cmpb
loope
xor
and
cwtl
fsubs
dec
inc
test
adc
dec
cmpb
testb
inc
arpl
rol
add
adc
pop
adc
xchg
les
icebp
lods
and
jle
jle
xchg
or
ficompl
cmpb
xor
jnp
pusha
inc
xchg
dec
jo
jmp
push
sbb
mov
inc
je
dec
test
adc
jbe
jno
shrb
cmp
pop
cmp
mov
out
and
stos
add
xorl
arpl
inc
es
sub
insb
js
add
add
sbb
push
mov
adc
bound
jle
scas
and
call
dec
hlt
add
cwtl
je
inc
sub
pusha
hlt
xchg
and
inc
cli
rcll
add
add
pop
andl
hlt
test
bound
push
mov
rolb
mov
cmovl
cld
xchg
adc
cmpsl
xchg
fnstenv
push
enter
outsb
adc
and
and
sarl
int
sbb
adc
addb
sub
les
jle
xor
mov
scas
mov
mov
inc
inc
sub
aas
ret
aaa
iret
inc
xchg
jno
int3
adc
or
jmp
pop
bound
insl
dec
cmpsl
in
jne
out
inc
jne
cmp
and
inc
xor
add
fwait
aaa
pop
pushf
clc
fstp
add
hlt
push
pop
push
fisttpll
cmp
sbb
and
push
push
pop
inc
mov
daa
or
sbb
outsl
mov
mov
xchg
rorb
es
pusha
mov
jns
ret
and
sub
pop
push
loopne
test
rcl
ja
mov
add
add
push
sub
inc
mov
test
lods
pop
inc
iret
sbb
sarl
mov
out
icebp
jmp
or
out
sbb
pop
dec
inc
pop
inc
pop
repnz
sub
and
xor
lds
lret
or
lods
push
data16
add
mov
pop
push
out
dec
and
pusha
xchg
js
mov
xchg
pop
jno
or
cmp
lods
call
adc
std
sarb
inc
cmpsb
add
push
pop
inc
push
daa
xor
test
pop
test
insb
xchg
lret
jns
std
pop
and
mov
cmp
adc
push
movsb
adc
fistl
xor
pop
mov
and
xor
mov
aam
stos
pop
inc
in
inc
inc
iret
movsb
mov
hlt
movsb
shll
test
fst
rorb
xor
mov
pop
mov
decb
cmp
jnp
add
sahf
sbb
mov
pusha
cmpl
sub
adc
test
adc
pop
add
cmp
mov
testb
dec
inc
adc
in
push
shll
add
out
ljmp
out
xor
pop
xchg
jmp
jbe
popf
push
mov
sbb
add
adc
and
mov
mov
out
addb
pop
sahf
add
dec
adc
or
dec
fiadds
add
jbe
add
jbe
and
lods
add
ds
inc
sbb
repz
ret
mov
add
dec
mov
mov
lods
jno
inc
les
out
sbb
lods
enter
in
or
pusha
data16
sub
rclb
ret
mov
xor
cwtl
add
mov
shll
lret
fsubl
loop
movsb
lds
mov
loop
jbe
fisubs
cmp
cmpl
and
push
adc
add
iret
dec
mov
sub
fs
lock
sbb
lret
subps
sbb
out
insb
mov
arpl
dec
pop
xchg
xor
aaa
push
pop
test
xor
lret
adc
stos
fimull
fsubs
mov
dec
mov
imul
aas
or
mov
mov
add
test
inc
xchg
and
jno
inc
adc
cmpsb
roll
xchg
add
xchg
addr16
adc
lds
in
mov
popf
out
jnp
sbb
adc
sbb
or
les
push
and
cld
inc
cld
xchg
jae
adc
roll
jg
mov
inc
add
pop
fucomip
jle
jns
jge
sbb
inc
or
sbb
daa
dec
mov
fcom
int
orl
dec
fidivs
and
orl
inc
lret
rorb
and
and
inc
cmp
daa
testb
xchg
insl
jbe
adc
xchg
xchg
test
or
shlb
add
lea
jae
mov
lcall
mov
fstpl
push
push
mov
add
mov
xchg
mov
jno
lods
dec
pop
or
cld
shrb
cmp
pushf
mov
and
js
ds
xchg
sbb
fsub
dec
sub
push
xchg
fcomps
fstpt
mov
ja
shr
or
adc
fwait
and
mov
stc
and
and
jne
xor
js
lock
xor
addr16
bound
scas
lret
push
add
jecxz
jno
jne
sbb
jnp
cmpsl
test
pop
es
fndisi(8087
sub
fistl
shrl
notl
xor
pop
dec
add
scas
mov
das
rcll
dec
and
jp
jb
jecxz
js
aas
mov
mov
add
lahf
cmp
lods
push
inc
mov
or
das
sbb
inc
ret
aas
sub
addr16
leave
xchg
js
cmp
and
cmp
add
insl
and
push
mov
adc
add
in
jecxz
pop
rcrb
scas
push
mov
inc
shll
sbb
xlat
jbe
and
fwait
mov
push
adc
aad
insb
inc
mov
rolb
rcrl
out
push
jo
shlb
sbb
mov
daa
add
and
ficoml
stos
sbb
and
mov
jno
mov
mov
or
test
inc
dec
fmuls
loope
push
add
aaa
push
mov
mov
add
sbb
or
adc
mov
orl
or
test
mov
ljmp
push
lods
rcll
fcoml
push
adc
xchg
inc
mov
sarl
or
jbe
test
sbb
fistpl
jl
and
jl
test
xchg
adc
lock
jecxz
dec
cltd
push
adc
div
and
icebp
lods
xor
stc
inc
fadds
lea
std
lret
xor
or
andl
jno
mov
and
fistl
jecxz
inc
pop
lea
scas
cmp
outsl
loope
adc
in
sahf
mov
adc
and
dec
jno
jns
add
add
mov
sti
jnp
shlb
inc
mov
addl
add
xorb
mov
jmp
jmp
cmp
pop
adc
or
sarb
push
add
inc
push
adc
lret
push
mov
xor
add
push
int3
orb
add
xorb
cmp
jns
idivb
and
xchg
xchg
cmpsb
mov
inc
xchg
and
and
jp
jbe
iret
push
mov
push
push
sti
mov
arpl
iret
cltd
loopne
push
sub
jp
mov
adc
gs
sub
mov
scas
add
mov
xchg
aaa
and
pop
ret
sbb
dec
mov
or
ficoml
aas
or
push
mov
aam
and
orb
ret
mov
jo
fsubrs
or
test
shl
repz
test
scas
and
jbe
add
dec
inc
inc
test
mov
pop
shrl
jns
adc
jae
jge
add
ljmp
sbbb
lds
int3
popf
jge
xor
add
lds
cmp
push
xor
or
vpmulhuw
xor
mov
popf
stos
sub
and
out
sbb
push
push
push
shrb
or
push
and
sbb
push
daa
fiadds
sub
clc
adc
xchg
outsb
outsl
and
and
mov
adc
insl
sbb
add
dec
push
pop
inc
inc
cmp
test
rcl
adcb
xor
and
sub
lds
jle
scas
sbb
das
gs
mov
jmp
js
fsubr
ljmp
mov
cmp
push
aas
lods
sub
or
push
or
push
insb
loopne
push
and
pop
jp
mov
int3
and
mov
inc
jo
xchg
add
sbb
xchg
or
mov
sub
mov
call
push
shrd
add
lods
cs
push
push
push
ljmp
jne
ds
cmp
push
das
adc
rolb
and
mov
dec
das
ds
aaa
dec
sub
outsl
int3
outsb
and
fstpl
adc
sbb
nop
scas
lret
and
sub
lds
in
pop
add
xlat
dec
and
inc
rep
cmp
popa
repz
xor
repnz
push
sub
mov
cmp
rcrb
cmp
add
add
inc
sub
mov
data16
push
cmpsl
inc
daa
pop
in
hlt
adc
sbb
dec
xor
inc
xor
stos
xlat
jnp
add
insl
cltd
shlb
add
in
int3
ja
add
lret
mov
fstps
dec
adc
cmp
out
dec
inc
outsl
pop
aad
ss
jns
enter
int3
rorl
std
mov
mov
mov
pop
xchg
jg
or
add
push
sarb
xor
dec
mov
xor
mov
in
pop
ret
or
push
add
push
xor
jge
and
cmp
pop
aaa
adc
sub
imul
lods
adc
push
pusha
adc
mov
ja
ficoms
enter
mov
outsl
add
ja
adc
cmp
mov
mov
imulb
stos
xlat
jne
insl
or
pop
mov
and
adc
bound
arpl
fidivrl
scas
push
sbb
ds
arpl
mov
xchg
mov
sub
and
mov
stc
add
push
and
push
aam
shrl
scas
ds
mov
xlat
jbe
pop
mov
mov
sub
insl
das
inc
sbb
gs
mov
and
lods
js
mov
rcrb
ss
mov
aad
mov
xor
push
mov
sbb
mov
mov
sub
pop
add
jno
sbb
js
cmp
adc
imull
mov
xchg
pop
cs
test
push
popa
push
adc
data16
sbb
imul
push
inc
inc
mov
inc
add
pop
sub
jg
or
inc
pop
mov
push
push
or
addr16
ja
sub
adcl
movsb
sub
mov
sub
repnz
test
lea
adc
scas
in
xor
cli
lret
jp
mov
xchg
cmp
movsb
pop
add
in
pop
mov
push
xchg
aad
fdivl
fsubs
pop
stos
pop
or
inc
adc
filds
and
ja
test
stos
cmpb
lgs
js
jns
inc
ss
or
scas
add
into
sbb
or
push
ljmp
shlb
insb
subb
les
xchg
aam
imul
cmp
lods
iret
mov
mov
push
cld
lods
and
adc
sbb
lods
fimuls
cmp
push
les
mov
loopne
add
jg
adc
jp
push
lea
popa
xchg
push
mov
xor
fsubrl
jae
sub
adc
push
xchg
cs
cmp
mov
push
lock
mov
dec
push
inc
unpcklps
rolb
dec
fbld
cmp
sbb
or
scas
loop
sub
repz
mov
push
mov
add
push
xor
inc
xor
xchg
leave
xchg
sub
scas
and
lods
andl
test
xchg
or
ret
call
jge
sub
jnp
pop
aam
mov
jp
xor
push
xlat
mov
xlat
pop
push
and
int
pop
push
and
pop
cmp
and
lea
xchg
in
add
stos
or
lret
out
loope
movsl
xchg
dec
pop
js
cmp
jge
scas
jbe
xchg
and
push
mov
inc
pushf
mov
mov
lods
popf
pop
jno
aam
mov
loopne
inc
outsl
inc
add
xchg
lcall
int3
adc
xlat
mov
sbbb
inc
pop
jmp
int
les
push
imul
lahf
and
fiaddl
das
mov
pshufw
inc
icebp
sahf
jnp
dec
lahf
inc
xor
xor
in
pop
xor
cmp
ret
fistl
stc
lods
jnp
sub
jmp
popf
push
sub
mov
mov
and
dec
jne
xchg
pop
out
cmp
xor
dec
or
gs
fsts
xchg
insb
add
jp
aaa
jno
push
mov
push
or
pop
loopne
in
sbb
pop
int3
sub
pop
les
ret
fdivrl
xchg
jmp
fisttpll
pop
dec
adc
pop
testl
insb
imul
enter
call
int3
push
add
das
arpl
push
push
add
sub
sti
ficompl
pop
push
loope
and
aaa
insb
mov
sbb
lods
ja
mov
shrb
cs
icebp
rclb
ret
adc
sti
cs
cmp
pop
gs
jl
jmp
loope
sub
in
ficompl
jne
xor
mov
cmp
push
gs
push
add
adc
sahf
adc
call
add
sbb
enter
hlt
ror
jbe
sbb
pop
jo
inc
scas
ljmp
or
aam
into
out
lahf
mov
xchg
cld
mov
add
inc
aam
inc
adc
push
inc
add
cmp
mov
xchg
adc
mov
jp
mov
imull
lds
lods
popa
stos
pop
adc
sbbl
or
adc
je
or
stos
loop
clc
lcall
inc
je
sub
in
sbb
add
pop
xor
sbb
data16
xor
sbb
xchg
push
lahf
cwtl
add
idivl
adc
mov
add
cwtl
push
lret
push
push
sbb
adcl
dec
lock
ret
push
ret
cmp
or
or
jbe
js
inc
popf
fsubrs
dec
rcrl
push
fwait
mov
fidivrl
lods
dec
mov
sub
sub
inc
stos
out
cmp
pop
aas
cmp
xor
stos
stos
inc
scas
mov
inc
mov
lods
push
adc
or
xor
mov
mov
xchg
orl
adc
loope
push
push
mov
mov
and
cli
jecxz
add
dec
std
daa
sub
xor
sti
xlat
mov
sbb
mov
sbb
out
fldl
mov
in
xor
pop
cmp
and
mov
aam
fcomps
repz
or
pop
lea
xchg
daa
lret
icebp
mov
sbb
lock
adc
pusha
mov
test
sub
adc
data16
push
nop
jnp
aas
sub
add
nop
mov
je
xor
sub
jle
mov
sub
xchg
popf
sub
or
adc
fcomps
cwtl
pop
xor
test
add
mov
mov
addb
addr16
js
andb
test
jnp
and
jp
jb
dec
jo
cltd
in
ja
pop
xor
push
hlt
or
scas
add
in
mov
loopne
push
in
or
sbb
inc
xchg
mov
add
outsl
xchg
mov
add
aad
stos
xor
jmp
sbbl
pop
push
outsl
ja
movsl
inc
out
scas
xor
mov
push
sbb
xlat
scas
daa
pop
push
lock
add
orb
mov
push
stos
push
jnp
inc
jns
sbb
push
add
daa
mov
adc
pop
sub
mov
sbb
cmp
mov
or
jge
mov
aam
iret
aad
add
sbb
fwait
xchg
test
ds
mov
pop
add
stos
jp
gs
and
pop
cmc
mov
pop
or
ss
in
arpl
arpl
fimull
jnp
insb
cmp
iret
daa
lods
aam
inc
cli
cmp
fisubrs
jnp
idivb
push
sub
pop
inc
sbb
mov
xchg
xor
inc
mov
or
or
mov
push
call
andb
push
cmp
mov
add
hlt
pop
sub
inc
mov
mulb
jno
and
xor
sarl
into
ds
mov
sbb
jle
iret
cli
dec
in
jecxz
adc
mov
addb
push
dec
repnz
jo
push
xchg
xor
inc
test
xorb
push
sbbb
inc
push
movsl
pop
pusha
inc
and
and
add
ret
jae
mov
fwait
addb
add
or
push
mov
or
lea
adc
jp
mov
scas
cltd
stos
pop
mov
loopne
inc
mov
add
mov
test
aad
pop
arpl
nop
fsubs
cmpsl
scas
hlt
cmp
arpl
xor
cmpsl
xor
out
xchg
sub
lea
jae
add
out
mov
add
and
shld
lret
push
rclb
sti
cmp
cmp
lds
cmp
inc
inc
inc
jmp
fcompl
shrb
add
ret
xor
daa
ret
js
pop
std
fistpll
inc
fcoms
int3
pop
mov
push
mov
mov
sub
icebp
les
and
je
jo
dec
mov
add
dec
orb
pusha
sub
push
imul
add
jmp
inc
dec
inc
adc
jne
fistps
jb
and
in
shl
mov
jae
or
adc
xlat
cld
xor
pop
das
pop
lods
add
adc
push
mov
scas
and
cld
aas
push
arpl
inc
sub
jnp
pop
push
mov
fistpll
adc
sbb
aam
lret
dec
fildl
and
std
or
repnz
cmp
and
test
add
nop
js
ss
movsl
xor
imul
lahf
and
pop
push
fimuls
rclb
fldcw
roll
adc
lret
daa
adc
jecxz
and
xchg
pop
and
clc
mov
daa
add
scas
xor
fisttpll
aad
xor
adc
mov
add
addr16
hlt
inc
xchg
cmp
push
enter
mov
cmpsl
loope
fsts
mov
xchg
mov
push
mov
inc
pop
xchg
inc
aaa
shl
cmp
daa
add
add
xor
pop
inc
out
mov
jl
fnstsw
loop
and
sub
or
jae
inc
pusha
in
test
xor
lock
xchg
mov
add
push
jnp
add
add
stos
test
add
sbb
mov
adc
faddl
push
inc
push
and
out
inc
mov
les
inc
mov
call
push
mov
lret
adc
loopne
and
roll
inc
into
push
sub
pop
lea
cmpsb
inc
das
xchg
sbb
jmp
dec
fisubrl
mov
add
cmovle
dec
add
mov
jg
xlat
xchg
xchg
and
add
sub
fstl
repz
inc
xchg
and
cmp
imulb
push
cmp
movsb
jp
mov
xchg
js
and
sub
out
or
add
rcrb
mov
daa
sbb
lock
lock
scas
lods
scas
sub
in
or
test
and
push
pop
mov
pop
sarb
or
pop
addb
pop
jo
in
scas
sarb
in
lcall
fwait
ja
jecxz
data16
sbb
mov
jmp
or
aaa
mov
ror
pop
inc
pop
jo
add
xor
fcmovbe
out
inc
pop
and
les
out
shll
inc
mov
addr16
outsl
or
pop
mov
daa
and
test
rol
mov
mov
mov
jmp
ljmp
stos
ret
iret
push
mov
or
pop
sbb
add
fcoms
inc
daa
int3
sub
mov
and
scas
xchg
mov
cwtl
add
lods
data16
cmp
in
push
xchg
cmp
mov
lds
loope
push
and
out
notl
xchg
and
pusha
sti
jle
mov
lock
sub
adc
bound
sbb
ficomps
test
adc
cmp
lret
dec
mov
mov
xchg
fsubl
mov
adc
mov
adc
ficoml
and
cmp
inc
mov
push
adc
xchg
xor
mov
lds
sbb
or
outsb
fstpt
dec
dec
mov
aam
test
lret
fiaddl
test
movsb
xor
or
fisubrl
enter
repnz
jbe
push
push
add
shll
adc
bound
jb
cli
lock
jne
and
add
icebp
js
je
in
lahf
xor
sbb
rclb
sub
icebp
sub
mov
es
sbb
cmp
and
outsb
pop
jne
jo
inc
mov
clc
jb
inc
sub
dec
jae
mov
sbb
inc
cs
xchg
stos
xor
xchg
mov
movsb
lcall
mov
adc
mov
les
add
push
or
xchg
sahf
into
sub
adc
mov
cmp
dec
sub
add
jae
jbe
sub
jg
dec
mov
int
and
or
enter
xor
subb
and
add
test
xchg
popl
push
lock
xor
into
rcrl
mov
shrb
out
mov
and
xor
sub
fcmovnb
dec
inc
xor
push
pop
or
outsl
pop
aad
sbb
imul
loopne
inc
and
testb
mov
roll
sbb
add
gs
in
fdivl
arpl
cmpb
cld
add
sub
xchg
cwtl
add
enter
inc
shlb
out
stos
int3
das
sbb
push
push
add
aam
mov
iret
inc
and
or
or
xchg
jns
sub
add
sti
dec
outsl
adc
dec
sti
sbb
daa
stos
into
fimuls
cwtl
push
test
cmp
xlat
pop
add
test
dec
jo
push
and
addr16
inc
add
imul
lcall
mov
sbb
adc
add
push
daa
fwait
push
pushf
mov
cmpb
mov
iret
push
movsl
push
mov
mov
clc
jo
cwtl
inc
mov
cli
popf
andb
imul
dec
add
xlat
and
test
or
lret
sub
lret
add
pusha
lods
imul
xchg
mov
movsb
jge
push
mov
push
insl
stos
outsl
outsb
lea
je
cmpsb
lcall
xor
mov
iret
scas
add
aam
dec
adc
dec
cmp
mov
xor
sub
xor
popf
jle
add
add
aad
sbb
loopne
add
cmp
loope
pusha
cwtl
lods
pop
cmp
adc
sub
jnp
iret
xsha1
cmpsb
mov
inc
insl
pop
adc
mov
add
lea
dec
dec
lock
sbb
and
sub
push
sti
push
lock
imul
inc
test
popa
add
mov
pushf
mov
mov
mov
cmp
push
dec
adcb
mov
xor
or
shl
incl
push
hlt
into
mov
cmp
cmp
add
mov
sub
out
js
push
fisubl
pop
rolb
xchg
shlb
into
inc
jecxz
sti
adc
cmp
aaa
add
jle
add
out
cmpsb
stos
ret
out
or
adc
pop
push
test
js
movsb
adc
mov
mov
stc
fimull
sbb
mov
cmp
lcall
das
fsubp
das
mov
pop
ret
and
inc
cmpsl
and
mov
add
fldl
sti
push
rcrl
pop
xor
or
jns
cmp
inc
dec
in
push
loopne
push
mov
fstl
and
or
add
shl
mov
inc
and
popa
push
sti
in
mov
outsb
sub
pushf
pop
arpl
sbb
test
adc
mov
scas
jg
or
cld
xor
adc
push
cld
fld
roll
inc
sub
xchg
sub
insb
js
sbb
jbe
imul
sarl
adc
sub
push
dec
jl
nop
and
xchg
nop
inc
jmp
pop
out
xor
or
icebp
and
movsl
inc
clc
add
adc
mov
faddp
dec
inc
leave
xorb
jle
fwait
test
and
push
sbb
pusha
adc
pop
mov
ret
rclb
lret
mov
popa
aaa
es
cmp
adc
add
scas
xor
sarl
sbb
push
push
gs
mov
and
mov
add
cmpsb
movsl
xor
xchg
daa
cli
and
add
lahf
and
add
mov
jb
cwtl
or
pop
pop
mov
and
insb
je
pop
lock
cmp
jle
mov
push
es
mov
xor
xlat
or
sub
stos
fwait
pop
adc
xor
adc
lret
mov
adc
dec
dec
test
jle
pushf
mov
loopne
dec
or
add
int
jnp
pop
jle
inc
or
shlb
in
pop
scas
xor
loop
jmp
sti
lods
ja
outsb
mov
sbb
fwait
or
nop
sbbb
stos
sbbl
dec
imul
movsb
pop
push
mov
shll
push
mov
pop
adc
mov
xchg
cmp
daa
xor
inc
or
pop
inc
push
int3
sahf
pop
add
jmp
pcmpgtw
mov
add
test
pop
call
xchg
xchg
pusha
mov
mov
out
fcom
nop
ret
mov
stos
iret
and
and
adc
iret
dec
pop
jmp
mov
adc
or
cmp
lea
pop
enter
jecxz
push
xchg
sub
add
daa
lret
sub
add
sub
popf
sti
scas
xor
jno
movsl
pop
jle
xchg
inc
jo
dec
fsts
adc
mov
lret
cli
and
and
cmpsl
and
mov
and
aam
sarb
sub
push
fimuls
sub
inc
icebp
sub
int3
jno
xchg
pop
push
xor
push
adc
add
sbb
ss
arpl
push
adc
mov
movsl
mov
jnp
aam
dec
sbb
sub
adc
scas
adc
push
and
or
add
cmc
push
mov
push
dec
mov
lds
icebp
dec
mov
test
test
and
inc
pop
fiadds
push
addr16
mov
sub
and
stos
pop
cmc
mov
xor
hlt
cmpl
sbb
jecxz
cmp
jecxz
fwait
mov
xchg
cmp
add
mov
cmp
push
mov
add
cmp
and
mov
xor
sbb
cmpb
cmpsl
test
mov
stos
aad
push
bound
mov
inc
jl
rorl
ljmp
rol
pop
leave
insb
jl
out
jecxz
push
jecxz
stos
bound
xlat
jnp
inc
lds
es
push
mov
add
testb
adc
jmp
push
or
add
outsb
je
les
lods
sbb
lea
fwait
xchg
arpl
rorl
or
mov
lcall
je
iret
add
push
mov
pop
push
lret
movsl
push
bnd
and
xor
or
jae
inc
adc
fistl
insl
inc
dec
and
fildl
cmp
pop
adc
cmp
fxch
loopne
pop
and
and
xchg
mov
cmpsb
or
xor
or
scas
pop
dec
sbb
sarl
mov
or
inc
cmp
dec
inc
enter
adc
cmp
je
stos
and
and
dec
lret
add
outsl
ficoms
fcoms
inc
xor
push
repz
push
daa
adc
dec
adc
push
jl
lret
push
sbbb
outsl
stos
fnstcw
das
or
dec
add
dec
xchg
mov
inc
ret
mov
cmp
insb
filds
inc
int
mov
add
loopne
pop
hlt
subl
pop
and
pop
insl
loop
and
sub
fisttps
push
jns
add
sbbl
sbb
xor
pop
jecxz
or
sbbl
sbb
or
movsb
and
outsb
or
and
xor
repnz
jle
aas
mov
pop
cmp
cs
push
adc
mov
and
add
lock
pop
cmc
pop
fiadds
cltd
ret
add
and
inc
pop
movsb
and
xor
dec
in
sub
push
sub
inc
ret
xor
add
inc
iret
loop
test
and
fwait
push
pop
stc
xchg
sbb
roll
mov
dec
xor
cmp
pushf
mov
add
andb
cmp
adc
push
pop
and
and
mov
and
nop
mov
adc
or
and
or
or
mov
lock
pop
or
inc
push
loop
sub
xor
aaa
sub
mov
push
mov
pop
imul
aas
jl
and
nop
lret
into
push
lahf
shlb
arpl
shlb
rol
dec
or
fwait
outsb
sbb
enter
cmp
mov
mov
or
icebp
mov
xchg
push
enter
mov
sbb
aad
push
mov
mov
inc
aas
pop
push
dec
xchg
rclb
xchg
cwtl
push
cld
pop
fcmovu
je
mov
incb
push
jo
inc
push
add
leave
les
xchg
mov
lds
movsl
loopne
loop
fs
or
push
mov
and
add
je
scas
pop
and
inc
ret
in
sbb
jmp
cmp
xchg
mov
int
inc
mov
inc
push
pop
jo
pop
popa
in
push
adc
in
lods
and
ss
push
fstpl
cmc
cmp
loopne,pt
mov
adcb
iret
lock
mov
xor
inc
pop
leave
nop
arpl
hlt
push
test
mov
pop
shlb
mov
or
pop
push
jmp
pushf
inc
shrl
aaa
subb
rorl
pop
and
icebp
xchg
sti
fcoms
inc
xchg
jmp
rcr
test
mov
rol
inc
adc
pop
jp
adc
mov
jns
aaa
mov
movsl
sub
jns
sub
pop
pop
fiadds
outsb
fwait
cs
mov
push
xchg
stos
sub
jns
mov
mov
dec
and
jb
or
ret
push
pop
mov
sbbb
adc
xchg
test
mov
sub
inc
pop
arpl
add
add
mov
dec
fisttpl
or
imul
add
stos
xchg
loop
adc
fists
add
mov
adcb
lods
dec
scas
sub
push
mov
les
push
xor
shr
mov
adc
mov
popa
pop
hlt
mov
in
fldl
sub
outsb
les
sub
sbb
and
mov
push
sti
daa
push
cmpsl
mov
roll
jno
pusha
sbb
add
int
sub
and
incb
add
ss
push
xor
notl
jmp
cmpsl
or
daa
test
in
sbb
mov
add
incb
jo
push
mov
or
mov
scas
and
pop
cmc
xchg
push
pusha
aaa
int3
pop
and
mov
mov
into
into
aam
mov
aas
aas
mov
orb
dec
jmp
adc
cld
mov
xchg
and
pop
cwtl
lock
in
push
pop
sbb
lods
adc
lock
inc
and
push
movsl
sub
xchg
push
idivb
lods
and
js,pt
xchg
mov
xor
sub
adc
add
lea
and
int3
js
add
test
or
pop
add
jo
push
add
inc
hlt
push
push
arpl
stos
mov
add
inc
push
xor
add
sub
fidivrs
sbb
pop
cmpsl
inc
sahf
or
into
andb
mov
xor
ss
mov
jb
jne
out
rorl
enter
scas
inc
dec
mov
cld
ss
and
xor
xchg
or
mov
lcall
aam
lds
js
loope
lcall
pushf
jbe
mov
mov
lods
sbb
movsl
sbb
cmp
mov
sbb
sub
rolb
aas
fldcw
shlb
mov
fnsave
xor
xchg
mov
scas
lret
es
mov
add
imul
mov
sub
lret
inc
xor
imul
and
dec
test
inc
inc
adc
or
sbb
shrl
and
lds
subl
add
lods
stos
pop
and
repz
push
shr
sbb
cwtl
sub
cli
inc
mov
loopne
sbb
mov
test
push
fistl
js
pop
cltd
inc
jno
inc
lds
les
sbb
push
addl
popf
push
mov
fs
fsts
hlt
inc
xchg
sti
mov
jae
test
or
dec
inc
popf
inc
inc
jno
roll
test
jns
sbb
push
es
mov
add
xchg
mov
out
adc
mov
ret
mov
cmp
in
dec
stc
inc
in
push
or
aaa
sbb
int3
mov
push
iret
inc
fs
sbb
loop
cmp
mov
inc
ss
sbb
call
int3
add
sti
add
inc
jns
push
adc
mov
mov
mov
enter
bound
cmpb
inc
rorb
addr16
sti
ljmp
ss
and
cs
adc
mov
movsb
cwtl
add
mov
xorl
mov
je
cmc
cmp
xor
and
lea
mov
jl
push
and
push
inc
aam
fs
out
xchg
movsb
sbb
iret
pushf
adc
sbb
aam
and
sub
pop
push
and
push
and
popa
call
mov
sub
loopne
sub
sub
inc
xor
nop
mov
in
mov
fnstenv
iret
aad
leave
sbbb
add
mov
addr16
shl
rolb
clc
sub
ret
push
or
es
arpl
mov
rclb
inc
mov
inc
insb
popf
and
iret
mov
jnp
daa
test
lock
aas
inc
mov
push
push
rolb
leave
fxch
xor
sbb
add
add
pushf
sbb
mov
out
jg
inc
je
sbb
sbb
movsb
add
pushf
cld
stos
cltd
sub
and
and
inc
sbb
add
or
adc
out
jne
adc
dec
cmpb
pop
aas
push
inc
loopne
xchg
iret
or
adc
pop
shl
adc
or
pop
enter
push
popl
xlat
mov
sti
mov
or
xchg
movsb
mov
dec
das
in
test
dec
xor
cmp
cmp
adc
aam
pop
jb
iret
add
adc
sub
and
cmpsb
loop
pusha
dec
add
orb
jl
mov
aas
push
push
and
pop
jl
call
inc
iret
or
xor
sbb
lods
je
out
adc
es
cmp
pop
nop
mov
out
and
add
sbb
sub
jb
ja
ja
and
cld
or
loopne
popa
jg
xor
adc
ja
push
rcl
dec
xchg
jo
sbb
lret
pop
xlat
notb
adc
or
lret
sbb
jno
outsl
push
xor
and
lods
pop
out
xlat
cmp
sub
stos
pop
adc
fnstenv
or
std
gs
mov
sub
mov
aad
push
shl
and
mov
pop
dec
jnp
pop
movsb
push
jmp
daa
xchg
add
mov
add
dec
popf
or
push
push
xchg
cs
push
dec
lods
jns
mov
add
stos
imul
aaa
int
adc
cmp
stos
inc
or
dec
pop
xchg
addb
mov
inc
andb
inc
sub
sbb
mov
es
cltd
xor
sahf
faddl
pop
rcrb
lods
negl
add
lods
mov
and
outsl
xor
add
enter
and
push
pop
ljmp
add
fcmovnu
xor
xchg
pop
insl
xor
push
mov
jne
lahf
dec
test
mov
int3
xchg
lods
sub
inc
movsb
cmp
aam
adc
jp,pn
iret
push
dec
fcom
insl
inc
in
adc
in
push
adc
aad
call
fcmovb
jae
push
scas
push
pop
pusha
add
into
sub
sub
sub
cwtl
lock
cmc
mov
dec
sahf
push
ret
and
push
js
adc
lret
ja
mov
shrb
out
out
imul
dec
xor
and
loope
mov
and
outsb
adc
imul
add
dec
push
push
packsswb
aad
jb
out
xchg
movsb
mov
loope
imulb
xor
jecxz
jne
sbb
pop
rorb
stos
add
lods
loopne
call
and
and
stc
xchg
sbb
int3
xor
out
call
sbb
mov
fwait
mov
pop
pop
sti
inc
jmp
mov
div
repz
xchg
adc
pop
shlb
pop
clc
ss
push
fcmovnbe
test
push
fildl
mov
push
dec
scas
in
or
xchg
imull
aad
jae
loope
jbe
xchg
inc
into
and
cwtl
test
cmpsb
xchg
pop
pop
or
cmc
cmpsb
mov
divl
out
call
mov
repz
xchg
mov
mov
pop
cwtl
sbb
and
xchg
lea
add
sub
cmovnp
jge
or
fildl
push
out
je
sbb
ja
ret
pushl
xchg
pop
ficoml
test
call
roll
xor
sub
mov
shlb
test
sti
scas
hlt
xchg
push
xor
jo
add
adc
leave
ss
cwtl
shl
in
add
call
cs
cmp
pop
pop
mov
jnp
lods
push
sub
loope
out
add
sub
ret
call
push
ss
push
iret
scas
mov
push
jb
repz
fdivl
add
push
add
xchg
fstpt
push
daa
gs
repnz
sbb
jp
cmp
inc
jo
sbb
int3
fsubr
sbb
sbb
mov
divl
iret
add
push
mov
roll
sbb
xchg
mov
cmp
test
out
pusha
sub
and
cmp
jp
cltd
sbb
lods
mov
xchg
das
push
sbb
dec
push
out
cld
or
lret
test
add
popa
lods
add
rorl
pop
push
push
loope
add
hlt
push
bound
int
lods
jp
mov
sbb
xchg
pop
insl
pop
lret
mov
add
aad
or
in
lods
mov
pop
fcmovne
dec
push
mov
or
andb
fisttpll
cmp
inc
sub
shr
enter
xchg
push
sub
push
fmull
or
bound
addr16
std
and
movsl
sbb
push
addr16
jmp
rcll
inc
aas
ficoml
inc
in
xor
mov
jbe
inc
dec
adc
loop
lods
adc
loopne
loopne
jo
mov
loopne
imul
adc
jns
fidivl
mov
sub
xchg
push
test
xchg
in
int3
notb
jge
stos
hlt
lock
sub
inc
loopne
or
xchg
xchg
pushl
lea
popa
jo
pop
xor
or
lahf
push
pop
mov
xabort
jp
mov
and
mov
or
add
jne
and
or
dec
pop
xlat
fbstp
and
lods
orb
xchg
daa
fildll
xchg
or
dec
leave
mov
loopne
push
and
xor
fimull
add
adc
sub
outsb
rorb
fimuls
sarl
mov
pop
divps
add
add
sub
sbb
cmc
popa
dec
inc
dec
xor
sbb
sub
scas
decb
mov
movsb
xchg
xchg
rcrl
les
xor
leave
add
out
out
sub
ror
jae
rol
xchg
iret
lret
pop
popa
lods
mov
dec
mov
or
or
jmp
mov
out
out
pusha
cmp
mov
push
lods
pusha
adc
icebp
mov
mov
inc
mov
test
push
mov
into
das
icebp
int3
adc
inc
test
les
push
loopne
arpl
loope
push
fcomps
and
jmp
in
out
mov
xor
lcall
sbb
sbb
sbb
sub
inc
inc
cwtl
or
xchg
add
arpl
inc
test
fstpl
lret
cld
xor
or
add
add
mov
sbb
cmpsb
add
add
inc
add
inc
enter
fildll
iret
xor
les
adc
push
add
mov
inc
fmul
notl
iret
fadds
into
loopne
loope
fld1
into
or
test
xor
lds
jae
test
mov
jns
sub
add
and
mov
rorb
xor
adc
and
fwait
inc
push
push
sub
jl
sbb
adcl
popa
xchg
jg
pop
add
mov
mov
xor
jo
or
sub
adc
adc
inc
fistpl
inc
xchg
jecxz
sub
pop
leave
pusha
ficoms
aaa
imul
pop
fidivl
and
sbb
mov
adc
mov
mov
or
loopne
loopne
fisttpl
sbb
gs
fnstsw
mov
or
sub
push
add
lcall
aaa
xchg
sbb
fisttps
idiv
dec
adc
inc
repz
adc
rcr
sbb
jne
dec
adc
lcall
das
cs
jecxz
add
dec
lods
aaa
insb
dec
push
pop
push
mov
rcrl
leave
pop
test
sbb
and
lods
inc
lret
mov
pandn
sub
call
xor
mov
mov
mov
lret
lahf
mov
je
mov
mov
mov
test
jb
sbb
loop
jecxz
pushf
loopne
shll
xchg
push
cli
push
dec
adc
bnd
mov
in
addb
frstor
loop
mov
push
lea
push
jecxz
pop
test
roll
lock
or
inc
insb
pushf
stos
testb
push
aaa
push
add
js
push
lds
and
adc
add
pop
inc
bound
xchg
add
shll
icebp
cmp
push
es
lcall
adc
popf
lock
sti
fsts
cwtl
cltd
push
insb
xchg
data16
jae
or
andb
push
scas
lock
pop
mov
test
nop
subl
pop
outsl
cli
loope
cltd
cmp
mov
dec
dec
adc
xchg
es
adc
out
pop
cmpsb
inc
call
cmp
roll
adc
je
shlb
pop
fwait
repz
ds
jge
jnp
push
cmp
sbb
pop
fstpl
loopne
das
jmp
fs
jmp
cmp
scas
and
mov
or
data16
mov
or
mov
or
add
xor
jo
xchg
push
pop
push
ret
or
dec
mov
xor
out
dec
ss
popa
ss
fidivrl
pop
xor
pop
lods
xchg
jecxz
cmp
add
mov
loope
add
mov
rol
xorb
rcrl
xchg
pop
and
in
pushf
inc
xor
rolb
stos
popa
dec
jne
call
adc
shll
add
pop
fstpl
adc
int3
fisubl
push
mov
and
pop
addl
dec
sbbl
adc
adc
in
fwait
add
sbb
add
add
lock
and
dec
push
cmpsl
push
out
mov
xchg
and
loopne
add
xor
push
js
fs
je
outsl
xor
call
scas
aas
inc
xchg
hlt
loopne
jmp
pop
mov
cld
push
out
dec
jo
fisubl
mov
mov
lock
sub
adc
mov
pop
inc
shll
push
push
fbld
js
sub
sbb
shr
inc
loop
xor
push
xchg
arpl
movsl
iret
incl
imul
mov
sahf
inc
xorb
ja
jo
scas
pop
sub
andl
sub
push
xor
shlb
imul
cmp
and
out
push
je
xchg
sbb
push
sub
test
add
sbb
adc
pushf
add
std
popa
add
adc
mov
sub
fsts
add
mov
or
push
adc
mov
jo
xor
xchg
push
sti
push
stc
jbe
aam
mov
pop
and
fcoms
mov
repz
cld
push
imul
int
std
xchg
or
into
dec
aad
lds
mov
pop
push
dec
lods
test
hlt
lcall
int
push
std
inc
dec
push
jg
nop
xchg
cmp
loop
xor
xor
psubb
xor
inc
inc
and
xlat
sbb
ret
mov
pusha
push
jne
inc
ja
pop
xor
out
push
and
pushf
cmp
push
inc
roll
or
sub
insl
add
or
pop
sbb
test
ss
test
jne
add
cwtl
or
add
iret
push
sub
cmp
pop
jbe
add
push
xlat
or
movsb
dec
add
ss
das
imul
mov
les
inc
nop
dec
je
cmp
xor
inc
cld
rolb
xchg
cmp
pop
adc
stc
and
jnp
and
dec
ficoml
inc
sbb
out
in
cwtd
pushfw
hlt
adc
sbb
cmc
lock
push
add
gs
iret
pop
inc
add
xor
cmpsl
cs
pop
lds
ss
test
dec
mov
aaa
xchg
push
fwait
aad
cmc
lock
icebp
orb
sti
adc
aam
call
push
aaa
jp
and
mov
adcl
adc
int3
ret
mov
mov
xor
pop
inc
xchg
mov
loopne
and
daa
pop
bound
cmpsb
sar
add
mov
sbb
cli
mov
popf
scas
push
mov
pop
sahf
mov
out
push
insb
mov
xor
lods
stos
xchg
bound
xchg
mov
pop
jno
lret
adc
add
mov
sbb
mov
popa
adc
xor
dec
shlb
scas
movsb
in
popa
xchg
add
aam
inc
shrl
popf
syscall
icebp
mov
aad
es
or
inc
call
inc
cmpsb
cmpsb
iret
clc
insl
daa
add
xor
cwtl
push
dec
xor
loopne
dec
jae
in
fdivs
dec
je
add
or
fs
lods
movsb
scas
popa
inc
or
inc
lods
scas
ss
push
insb
jo
pop
and
push
scas
and
filds
push
popa
sti
ss
into
push
aaa
cmp
and
es
cmc
mov
add
and
adc
xchg
aas
jo
xor
jns
loope
add
pop
add
push
inc
stos
add
sbb
cmp
mov
jo
lods
and
ficoml
daa
mov
adc
and
js
push
pushf
stos
fwait
sub
stc
es
fdivr
sub
cmp
sbb
push
push
daa
test
mov
inc
pop
mov
sub
imul
js
out
jl
push
lds
aad
mov
fs
cmp
fldl
lods
and
shlb
add
outsb
inc
das
sub
or
test
mov
iret
pop
sbb
mov
and
pop
push
push
and
add
jp
inc
sbb
push
inc
pop
insb
mov
lahf
mov
jo
ds
and
mov
rcrl
sub
clc
inc
sbb
call
push
xor
dec
inc
icebp
outsb
add
xchg
pop
cmp
add
test
cmp
jns
inc
xor
fnstsw
in
bound
xor
scas
mov
fldenv
or
cmp
aas
sbb
inc
add
jnp
test
add
lcall
shll
jbe
loop
mov
ret
push
add
inc
xor
out
mov
inc
ljmp
test
or
std
addr16
lods
mov
sbb
test
pop
lods
je
fimuls
aam
dec
adc
sti
cwtl
sbb
lock
cmp
pop
adc
fsubrl
mov
push
xor
push
add
mov
jnp
mov
xchg
xor
and
mov
jg
je
stos
scas
push
mov
mov
sub
adc
bound
adc
test
or
test
rcr
sbb
insb
fwait
pop
inc
jne
add
or
mov
sbb
push
sub
popf
data16
addr16
push
dec
mov
xchg
shlb
mov
les
bound
adc
pop
push
and
out
mov
enter
test
xchg
inc
xor
lock
mov
pop
xor
rorb
pop
add
push
repz
shlb
cmpsb
jp
mov
out
inc
cmpsb
and
adc
add
mov
cmp
comiss
and
add
sbb
add
mov
xchg
cld
test
ja
cmpl
pop
aad
add
dec
mov
adc
push
add
xlat
outsl
fstpt
fisubrs
adc
sbb
and
shlb
and
cmpsl
mov
fdivr
sub
call
sub
cmp
mov
aad
cwtl
sub
push
xchg
cmp
arpl
jge
or
sub
and
add
mov
inc
out
inc
dec
and
lock
out
add
mov
pop
out
in
clc
push
push
and
loopne
sub
adc
int3
xchg
pop
cmp
sbb
xchg
arpl
inc
sbb
in
jle
pop
add
jecxz
push
loopne
xor
or
mov
subb
jge
scas
pop
push
mov
popa
ss
movsb
push
fwait
hlt
add
jl
movsl
aaa
fdiv
stos
mov
jne
add
daa
sbb
lods
sub
popa
inc
or
lds
les
sbb
pusha
mov
or
push
repz
adc
push
mov
xor
inc
lods
and
fildl
pop
add
add
push
add
lret
add
xchg
sub
or
push
pusha
loopne
adc
add
mov
push
cmp
ja
faddl
inc
sti
xchg
call
or
sti
shll
int3
mov
pushf
cmp
mov
es
fnsave
cmp
lods
mov
xchg
or
adc
inc
jne
enter
sbb
xchg
pop
out
cmp
iret
test
and
adc
loope
and
es
push
sub
jge
adc
dec
aad
sgdtl
call
das
cmp
hlt
adc
push
jg
ret
adc
push
or
out
aas
push
pushf
sub
int3
aaa
stc
mulb
clc
jl
aaa
cmp
sub
or
push
cmp
push
adc
adc
xchg
andb
mov
push
add
ret
add
dec
mov
mov
push
xlat
imul
and
add
test
ds
in
mov
jno
mov
mov
jno
xchg
or
pop
call
aam
call
lahf
sub
adc
or
cmc
pop
fimull
andb
cmp
or
xor
cmp
mov
lock
push
sub
xor
inc
inc
dec
add
in
insb
sbb
xorb
sbb
xor
jg
add
pop
rcrb
arpl
mov
ret
icebp
push
cs
testb
cmp
pusha
sbb
adc
mov
fdiv
xor
inc
push
add
es
jl
mov
mov
sub
inc
mov
cmpsl
push
and
sbb
popaw
mov
add
mov
out
xorl
imul
mov
mov
jo
inc
and
in
data16
jecxz
dec
cmp
ret
xor
cmp
and
pusha
mov
xchg
test
into
lea
je
sbb
adc
xor
movsb
mov
leave
sub
enter
pop
or
cmp
mov
inc
js
cmpsl
ja
or
shlb
inc
cmc
inc
shlb
xor
lcall
iret
pop
xchg
daa
sbb
les
inc
and
cs
push
aam
scas
jno
or
cmp
pop
pop
lcall
scas
addr16
dec
repz
jne
and
fst
sbb
mov
sbb
daa
cmp
cmp
add
and
stos
dec
push
cmp
mov
adc
rolb
adc
push
inc
sub
rolb
loop
bound
dec
fistps
jnp
jle
test
lahf
pop
imul
xchg
cmp
insl
daa
mov
xor
xchg
and
push
cmc
inc
push
inc
adc
xor
sahf
add
cmp
inc
out
and
cmpsb
lods
add
rcll
xor
inc
mov
pop
and
int
jg
jo
gs
insl
out
xor
or
push
movsb
pop
push
inc
push
fmull
mov
push
fnstenv
add
xchg
ss
push
stos
mov
ret
and
rorl
lods
es
mov
mov
stos
pop
push
pop
sbb
sub
xchg
mov
sarl
mov
movsl
stos
test
jno
dec
aaa
popl
fsubr
pop
jle
arpl
lahf
mov
push
lret
fisttpl
sbb
mov
in
inc
mov
add
addb
mov
push
and
add
loop
push
xor
outsb
outsb
test
fstpt
fs
fimull
dec
roll
pop
add
jo
push
inc
movsb
jnp
pop
pop
jo
dec
lds
push
add
jl
fdivl
test
daa
divl
push
test
rorl
loop
adc
inc
xchg
nop
mov
test
push
inc
and
and
subb
adcl
mov
xor
aas
mov
or
into
ret
stos
rolb
and
aas
dec
lret
sub
mov
cmp
pop
jb
add
push
jno
sbb
mov
mov
jecxz
add
sub
mov
sbb
lods
add
sbb
cld
or
out
push
nop
xchg
xchg
add
inc
or
test
sub
or
out
sbb
call
sub
sbb
push
and
pop
dec
pop
jnp
jp
push
loope
fisubs
out
adc
push
xchg
test
add
adc
or
push
popf
adc
mov
stos
arpl
cmpsl
sub
fmuls
loope
add
jmp
dec
push
in
xchg
xor
shll
xchg
mov
add
sbb
mov
add
mov
sub
jno
mov
jo
mov
adc
adc
and
push
inc
adc
mov
dec
inc
lds
stos
inc
jb
xchg
fstl
sub
lcall
jne
adc
mov
add
cmp
jb
cmp
in
in
push
pop
ljmp
cmp
adc
pop
add
test
in
pop
push
daa
inc
outsl
mov
push
jne
hlt
outsl
enter
insb
dec
mov
add
mov
in
or
mov
fwait
lods
addr16
adc
and
and
testb
repz
dec
adc
sahf
fldenv
or
xorb
or
sbb
or
stos
lods
and
dec
adc
mov
push
lock
add
jp
cwtl
sub
aaa
jge
or
test
test
add
add
adc
xor
dec
cmpl
gs
jbe
andl
jg
lods
mov
mov
jp
in
add
out
add
mov
add
adc
adcb
xchg
and
xor
add
push
sbb
adc
sbb
leave
or
notb
add
mov
pop
xchg
bound
mov
les
sti
sti
mov
add
rol
and
xchg
xchg
push
fldl
outsl
hlt
xor
arpl
jne
hlt
pop
lret
cmp
stos
jne
das
outsb
push
and
movsb
and
fadd
pop
mov
cld
pop
les
push
xor
cmp
int3
push
ret
inc
repnz
jl
arpl
mov
xor
adc
and
sub
jp
and
pop
jo
test
lods
loopne
jae
cmc
add
fisttps
mov
int
dec
shrb
movsl
in
or
insl
push
mov
stos
fstps
aad
icebp
push
roll
aam
andb
inc
jecxz
mov
sub
inc
iret
addb
mov
xchg
jo
dec
subb
fwait
dec
fcomip
rcr
scas
sbb
mov
mov
inc
and
cmpsb
adcb
stos
fsubrl
pop
cmc
or
or
call
out
pop
movsb
jae
xchg
dec
jo
ja
pusha
repnz
cmp
enter
pushf
iret
cmp
pop
dec
add
mov
sub
xor
inc
rorb
push
xor
sub
pop
dec
and
les
adc
mov
jo
push
push
fcomps
loope
jns
jbe
movsb
ljmp
mov
lds
jno
arpl
out
and
hlt
push
mov
push
shll
push
dec
push
jl
push
adc
mov
push
jp
add
push
icebp
nop
stos
push
sbb
adc
sbb
enter
adc
push
push
adc
or
adc
inc
adc
xor
dec
rsm
dec
fwait
pop
roll
sbb
xor
shll
and
testb
fs
mov
add
and
push
je
aam
xchg
mov
xchg
mov
arpl
mov
daa
sbb
pushf
mov
testl
push
or
and
jo
je
jne
mov
lds
pop
inc
push
mov
or
push
or
xor
lret
xor
push
add
out
sub
lods
mov
cmp
popa
jnp
sub
add
xchg
mov
fbstp
loope
js
insb
test
jmp
call
mov
dec
ret
and
push
aam
or
test
push
mov
or
cmp
outsb
sbb
sahf
fadds
daa
test
loopne,pt
lods
jo
push
ja
jmp
sub
sti
xor
sub
mov
jns
xchg
in
push
jl
into
out
sbb
gs
sbb
sbb
jl
sub
mov
ds
sbb
movsb
mov
ss
fisubrs
jo
lea
popa
cmpb
mov
add
outsl
adc
add
sub
in
pop
loopne
or
push
sbb
push
and
adc
push
and
and
jo
ss
mov
ja
push
mov
adc
fistps
lcall
adc
mov
ret
inc
xchg
pop
adc
push
jmp
push
ja
ret
mov
mov
add
insl
subb
push
andl
xchg
aaa
data16
rcrb
jno
addl
mov
pop
jne
pushl
add
add
push
fwait
cmp
pop
sbb
sub
jo
add
and
js
adcb
ljmp
sub
xorb
je
push
add
cld
stc
jmp
sbb
xchg
xorb
in
add
mov
dec
push
xchg
testb
xchg
icebp
inc
stos
cltd
pop
jo
adc
mov
popa
adc
pop
data16
lock
shll
jbe
inc
insb
fdivrs
andb
or
and
xchg
inc
dec
and
pop
in
push
mov
inc
adc
xor
sti
dec
pop
int
test
lcall
adc
add
inc
out
sub
and
push
and
jmp
cmp
push
mov
rorb
mov
int
leave
mov
inc
dec
iret
xor
xor
jg
mov
arpl
xlat
sbb
add
mov
test
aad
push
ljmp
adc
ja
mov
pop
leave
and
pushf
mov
xchg
push
ja
or
add
and
adc
jl
mov
cmc
xchg
inc
xchg
test
inc
xchg
mov
mov
in
gs
pop
fdivrs
adc
bound
push
mov
mov
rclb
xchg
scas
insl
cmc
adc
adc
mov
pusha
add
mov
test
outsl
cmc
push
mov
and
lds
nop
or
ds
cmp
pushf
dec
out
in
popa
mov
cld
push
test
adc
int3
xor
adc
and
adc
sub
push
call
insl
popf
ror
sahf
and
mov
adcb
or
fimuls
fcmovne
inc
cmp
adc
jae
les
fadd
sbb
idivb
fidivs
adc
loop
pop
pop
pop
les
imul
aaa
cmp
movsb
inc
xor
pop
mov
hlt
sub
inc
mov
shl
adc
push
xchg
dec
add
test
outsl
lods
pop
dec
and
xor
loop
push
rorb
add
and
mov
call
or
js
pusha
add
pop
jo
and
vpcmov
stc
stos
sbb
aad
icebp
xor
ror
lret
into
sub
sbb
add
add
sbb
mov
mov
and
ds
cmp
push
and
sbb
mov
dec
add
inc
aad
pop
mov
into
inc
stos
mov
push
jge
das
mov
push
loopne
and
mov
aam
jmp
inc
mov
mov
pop
mov
mov
mov
mov
xor
push
into
or
pop
outsb
and
mov
sbb
filds
cltd
repz
mov
and
xchg
outsb
testl
das
jl
mov
pop
sub
jno
in
cwtl
sub
aam
or
add
test
mov
push
sbb
mov
mov
sbb
jmp
adc
into
aaa
xchg
xor
mov
sbb
lret
jo
shll
popa
sub
pop
cli
mov
add
daa
or
rclb
out
outsb
lods
or
rorl
pop
stos
std
lcall
in
inc
insl
stos
outsl
xchg
or
and
jno
jle
inc
shr
adc
or
add
cs
es
add
jne
and
dec
test
in
fldcw
jp
aad
push
dec
repz
insl
add
cmp
push
stos
jp
inc
clc
xor
popa
mov
das
pop
add
xor
adc
js
scas
out
mov
mov
jp
arpl
shll
cltd
fsub
lods
pusha
pop
mov
pop
fsubs
stos
je
pop
dec
push
orb
push
pusha
insb
jnp
cmp
cmpb
mov
inc
popf
push
inc
sti
lock
bound
daa
pusha
mov
mov
dec
mov
add
int
repz
mov
sahf
fimull
adc
out
pop
mov
sub
daa
lds
pusha
stos
popa
xor
cmp
imul
adc
test
or
add
xor
scas
jp
inc
aad
scas
or
sub
mov
dec
cmp
mov
xchg
sahf
rorl
mov
pop
out
push
iret
nop
jo
or
sub
iret
adc
jge
stos
xchg
inc
lods
and
adc
arpl
xor
mov
lods
clc
cmc
mov
jnp
jno
dec
inc
out
dec
sub
aam
stc
ficomps
jno
add
fldenv
icebp
push
jne
lock
fcomps
loope
cli
xor
out
rcll
fstp
cli
cmp
icebp
fs
mov
in
pushf
cmp
mov
pop
ljmp
push
lahf
pop
mov
or
leave
call
xor
fwait
pushf
cmc
js
add
out
movsb
dec
adc
addl
call
testb
jg
iret
mov
cs
out
dec
push
mov
jecxz
jne
das
mov
jae
add
add
push
lcall
or
enter
clc
jecxz
mov
iret
and
sbb
test
ret
arpl
addb
inc
sub
mov
mov
pop
pop
xlat
or
push
lods
mov
andb
out
mov
loop
out
int
add
sbb
add
xor
pop
add
mov
mov
dec
and
dec
in
fisttps
inc
and
push
aaa
lret
mov
add
push
aam
adc
push
push
adc
pop
add
inc
hlt
inc
add
or
enter
push
inc
adc
out
cmc
stos
or
cmp
inc
xlat
iret
pop
add
into
sub
bound
and
int3
or
outsb
cmp
inc
xchg
xor
pop
add
add
push
int3
cmc
pop
scas
inc
inc
repz
add
lahf
push
dec
push
add
stos
and
sbbb
push
mov
cwtl
mov
insl
dec
outsb
adc
lock
inc
test
jge
sub
out
and
add
add
add
sbbb
rorb
add
or
xor
adc
pop
jo
aaa
jge
or
cwtl
xor
add
jg
cmp
mov
or
xor
xchg
arpl
mov
shrl
dec
pop
les
inc
outsl
test
insb
sbb
lods
pop
daa
rclb
mull
xor
pusha
add
scas
fst
gs
iret
imul
movsl
add
xchg
jb
add
push
xchg
sbb
add
lea
in
xor
in
xor
pusha
iret
xchg
in
divb
add
xor
out
loope
fnstcw
adc
lea
andl
adc
inc
inc
fildl
jns
sbb
push
or
add
test
mov
pop
int3
lret
fmul
fisttpll
popa
add
scas
mov
adc
in
test
mov
and
add
jo
mov
into
mov
insb
pop
sub
adc
adc
int
sbb
in
and
int
enter
and
insl
rolb
push
add
mov
xchg
dec
fmull
lods
out
fistpl
shll
sub
rcll
dec
xor
or
cmpsb
aaa
jb
mov
jp
inc
lret
xchg
add
out
push
push
inc
dec
aaa
add
fdivrs
mov
test
push
or
xchg
mov
aad
push
add
and
fwait
inc
imul
xorl
ja
sbb
call
ficompl
jle
out
cmp
mov
addr16
xor
jg
aad
aad
in
jp
pop
hlt
mov
xor
cwtl
mov
jp
repnz
in
scas
mov
jle,pn
pop
out
jbe
arpl
jno
ss
scas
sbb
add
nop
and
cld
stos
cmp
movsb
push
loopne
pmaddwd
pop
hlt
test
sub
popa
pop
add
scas
push
fucomi
addr16
fbld
sub
fistps
in
test
lods
out
notb
imul
dec
insl
or
imul
jmp
push
jne
inc
je
ss
cmp
fcmovbe
or
mov
and
and
call
and
fcompl
jne
into
mov
stos
fmuls
cmp
in
pop
fcompl
pop
jb
fstpl
and
loope
dec
out
and
lret
jo
cmp
jmp
lock
jae
rorb
ja
out
or
ror
adc
sbb
ds
mov
push
std
inc
sbb
fisttpll
aad
push
cmp
push
roll
ficoml
xor
rcrb
lret
mov
popa
jns
loop
lock
ss
int
xor
xor
inc
fadds
lods
push
fucomi
inc
add
inc
mov
sub
js
adc
adc
cs
ljmp
adc
sbb
and
rorb
daa
bound
and
push
jno
xchg
cmp
xor
inc
and
sub
ss
sbbb
sbbb
int
mov
iret
and
inc
adc
lahf
lds
scas
out
add
xchg
dec
lret
test
mov
push
dec
jno
sbb
jb
mov
push
push
pop
rorl
or
xchg
cwtl
lods
test
sub
out
jo
ja
js
and
out
fsubs
sbb
or
sbb
ret
stos
mov
add
out
popa
cmp
cmp
and
cwtl
jmp
scas
and
cmp
jb
lods
jbe
sbb
and
push
add
bound
add
outsb
jb
dec
negl
es
test
clc
push
and
rolb
push
xor
or
jnp
mov
loop
add
add
xor
add
pop
jo
ret
push
or
inc
inc
mov
adc
shlb
and
mov
mov
mov
or
sub
add
stos
pop
test
loope
movsb
or
roll
add
mov
test
in
add
sub
ljmp
inc
sarb
pop
aad
jle
xor
iretw
cmp
push
sub
and
fiadds
ja
inc
and
push
fbld
or
pop
mov
mov
xchg
cwtl
sub
sub
lock
mov
addr16
push
xor
sub
jae
sbbl
inc
mov
mov
rcrl
adc
push
dec
mov
sbb
adc
mov
sub
je
push
pop
lods
push
and
push
lock
fnstcw
xor
or
repz
jne
adc
psubusw
mov
les
and
push
scas
lods
push
scas
adc
jb
inc
jno
int3
mov
outsb
mov
push
xor
insl
lds
and
clc
aas
push
mov
lcall
jg
xor
testl
lods
hlt
sub
jae
jo
ret
cwtl
push
adc
xchg
and
mov
adc
xchg
in
lods
aaa
scas
cmp
and
sub
push
sub
mov
aas
scas
or
pop
xor
inc
pusha
into
int3
cmp
lods
cmc
inc
icebp
push
in
adc
xor
sub
push
xchg
mov
adc
xor
cmpsl
js
subb
dec
add
int3
and
loop
jne
add
mov
sar
das
popa
add
and
aam
inc
jg
fimuls
push
adc
stos
cmc
in
jne
es
fwait
and
cmp
jne
pusha
movsb
ds
popa
bound
inc
sbb
cmpsl
fiadds
stos
out
loopne
pop
mov
gs
loopne
add
sbb
sub
bound
inc
sbb
orl
or
push
or
or
cld
cld
pop
test
sub
xorb
pop
jmp
jmp
pop
loope
or
stos
jb
mov
test
jmp
cmp
mov
mov
xor
lds
movsb
xchg
push
in
clc
xchg
add
subb
and
xor
and
adcb
enter
push
sub
push
add
sbb
js
mov
cli
test
and
cwtl
cld
jne
aam
mov
push
mov
dec
sbb
inc
std
mov
scas
pop
or
and
sub
push
test
mov
cmp
scas
inc
or
jo
push
pop
js
stos
sbb
in
add
mov
add
lods
call
sbb
push
push
push
push
sbb
in
lret
pause
cmp
pusha
inc
add
pop
add
dec
sbb
jno
test
mov
enter
test
xor
sbb
cmp
xchg
mov
nop
shll
fstps
hlt
jg
js
pop
push
pop
mov
lock
or
scas
inc
and
stos
add
cltd
add
push
lret
cs
xor
js
out
xor
lret
cmp
insb
pop
outsl
and
aas
add
sub
add
out
jae
scas
jge
in
jbe
adc
out
jnp
daa
jno
jge
je
dec
mov
and
rorb
push
mov
icebp
and
js
jne
mov
cmpl
les
sub
or
mov
push
inc
int3
or
ja
push
mov
adc
sub
adc
loopne
out
sti
insl
or
fsubrs
sub
or
mov
sti
imul
dec
mov
pop
cmp
lret
sbbb
xchg
mov
mov
hlt
lock
loop
test
fsubp
pop
and
sbb
jno
in
push
roll
add
imul
jbe
imul
insb
mov
and
outsb
inc
pop
fstpt
mov
pop
mov
mov
test
inc
xchg
xor
les
mov
lock
pop
decl
mov
push
xchg
fs
jne
sbb
int
mov
mov
push
pop
or
ret
mov
es
adc
loopne
sub
add
xor
sbb
inc
lahf
lahf
and
push
mov
cbtw
add
aam
ret
es
adc
movsb
call
mov
mov
or
das
daa
add
mov
icebp
inc
aad
inc
or
and
xchg
test
adc
push
jle
pop
outsl
mov
inc
fsts
adc
mov
sbb
stos
rorb
or
pop
mov
insb
stc
or
iret
lcall
lret
mov
jno
dec
out
out
xor
and
or
lods
test
aas
ss
rorl
popa
pop
add
cmp
mov
jmp
adc
xor
cmp
cltd
aaa
stos
or
imul
scas
mov
jbe
dec
jnp
pusha
sub
aam
add
mov
mov
sub
push
sub
cmpsb
push
aaa
xor
dec
bound
and
loop
sub
sbb
test
test
xchg
loope
js
jnp
repz
dec
jl
adc
loop
mov
push
ja
addr16
cmp
xchg
pop
adc
push
arpl
xor
or
scas
fcomps
jae
push
je
and
icebp
fmul
pop
sahf
inc
xor
addl
dec
cwtl
xchg
scas
add
push
xor
pop
fnsave
adc
rorl
lret
adc
or
jl
cmp
setp
adc
mov
adc
ret
pop
adc
adc
fidivs
and
jnp
imul
xchg
sbb
push
dec
or
insb
jno
push
dec
jge
lds
test
nop
mov
mov
and
mov
dec
js
adc
movsl
addb
mov
testb
mov
adc
jbe
lret
rol
mov
jl
or
or
dec
xchg
adc
adc
jno
addb
adc
add
dec
pop
push
daa
sbb
fbstp
aaa
sti
mov
adc
mov
sub
pop
lods
ljmp
and
aam
cli
add
call
xor
inc
aam
inc
shlb
out
add
es
sbb
stos
sub
cmc
mov
stos
aas
inc
popf
push
push
inc
ret
lods
loope
add
xchg
repnz
std
and
or
cmp
lret
mov
sub
add
and
mov
push
stos
leave
fdivrp
pusha
or
fwait
scas
and
and
pop
subb
adc
inc
inc
adc
xchg
sbb
mov
cmpsl
inc
inc
adc
and
add
cmp
arpl
and
sbb
mov
data16
es
stos
pop
pop
rcll
and
out
clc
xor
sub
aam
adc
shlb
ljmp
out
jmp
lds
fsubs
adcb
sub
pop
scas
xor
push
movsb
inc
jne
add
rolb
adc
push
stos
lods
rolb
addr16
in
jnp
pop
and
and
add
in
daa
mov
fsub
add
sbb
lods
stos
shr
push
int3
sahf
testb
fcom
mov
xorb
cli
or
push
and
shlb
adc
popf
sbbb
cmp
insb
scas
xor
popa
fucomp
xchg
adc
push
sub
iret
loopne
pop
mov
sbb
push
jo
and
add
sub
dec
or
mov
xchg
cmpsl
or
add
adc
clc
xor
jle
lds
inc
mov
or
fisubs
cmp
inc
outsl
pop
cld
xor
dec
jp
adc
and
fldl
lods
lods
daa
mov
adc
dec
data16
pusha
push
cmp
jb
add
push
and
mov
and
push
fwait
cli
imul
das
in
cld
sub
ljmp
xor
adc
sti
into
test
and
cli
pop
xlat
jo
stos
push
push
sahf
ja
test
stc
leave
daa
sub
mov
mov
add
inc
adc
call
out
add
sub
mov
in
jno
add
fisubrl
add
ja
xchg
cmp
cmovae
add
mull
dec
jb
adc
or
add
dec
inc
xchg
sub
push
sbb
rcll
mov
pusha
push
xor
test
shrl
icebp
sub
inc
and
nop
xchg
inc
iret
xor
inc
sub
sbb
sbb
xor
adc
cmp
fiadds
rcll
xlat
adc
mov
mov
stos
xchg
cmpsb
push
add
les
mov
out
pop
bound
adc
inc
pop
out
pusha
add
sbb
dec
push
aam
xlat
dec
and
outsl
pop
int3
sbb
cmp
das
stos
cmpb
daa
add
mov
inc
adc
inc
daa
add
sub
jno
out
pop
cmove
fsubs
push
sub
xorb
mov
xchg
jbe
dec
inc
daa
clc
mov
xor
and
out
psubw
cmc
gs
lods
pop
sub
sub
add
add
mov
sub
in
push
xchg
popa
jne
push
mov
sbb
test
jae
push
cmc
mov
sub
cs
aad
ret
adc
push
cmp
sub
stos
add
mov
repz
in
push
fsubrl
test
popa
lods
sahf
popf
mov
mov
daa
cmp
les
pop
push
adc
stos
js
jge
mov
cwtl
xchg
dec
adc
in
or
xor
sbb
jo
add
add
loopne
ss
push
cltd
cwtl
stos
adc
inc
xchg
add
cmp
xchg
xlat
cmpsb
iret
sbb
das
xchg
and
add
xchg
in
xchg
ficomps
push
inc
sbb
xchg
out
fldl
sub
das
add
mov
mov
and
ret
sub
sub
aaa
jbe
xchg
xor
inc
cli
jne
xchg
xchg
mov
stos
andb
mov
xchg
sub
stos
movsb
sbb
arpl
xor
sub
sub
add
and
add
imul
dec
insb
mov
cmpsl
imul
shlb
mov
aam
mov
add
in
es
aas
inc
push
js
adc
add
ja
jmp
dec
testl
add
pop
mov
dec
dec
mov
stc
rorl
pop
sub
add
jmp
fcoml
or
je
pop
ja
andb
sbb
dec
daa
lods
outsl
pusha
push
xor
out
pop
ljmp
push
and
outsl
cwtl
test
and
xor
push
lock
and
inc
mov
jle
mov
std
or
dec
mov
jo
and
mov
aaa
shrb
mov
shrl
sbb
jb
jb
mov
and
mov
fists
jb
sub
push
in
inc
cmp
call
ljmp
xor
jmp
lods
push
adc
mov
fisubrl
jge
adc
outsl
or
rorl
repz
jl
adc
jge
add
pop
aad
cmp
scas
mov
sub
push
push
xchg
pop
insl
loope
rorl
fstpl
jne
loope
out
sub
inc
fwait
pop
daa
adc
inc
xchg
add
sub
adc
lret
lcall
mov
sub
inc
push
mov
xchg
cs
xchg
cmp
dec
daa
gs
add
jne
cmp
or
lea
push
stos
cmpsl
into
add
or
sbb
ficoms
add
pop
xchg
arpl
sbb
sbb
push
aaa
mull
rcll
andl
lmsw
push
cltd
sub
push
add
cmp
pop
adc
out
dec
push
add
mov
xorb
fmuls
movsl
dec
xchg
in
mov
jno
aaa
arpl
loopne,pn
mov
jbe
xchg
push
pop
mov
pop
ss
addr16
cmpb
inc
test
add
cmp
and
movsb
push
in
mov
sti
into
ror
test
test
mov
jle
pusha
push
inc
or
repz
scas
cmp
jne
test
ss
push
cmpsl
inc
xchg
push
data16
shrl
dec
mov
adc
sarl
xor
pop
and
add
cld
and
mov
es
daa
nop
out
push
ret
inc
pop
xor
cmp
sahf
pop
sbb
mov
mov
out
fdivl
loope
cwtl
lea
adc
or
dec
jbe
mov
mov
add
mov
test
adc
push
push
subb
popa
stos
sbb
push
hlt
rorb
fistpl
xchg
stos
jge
aam
das
inc
pop
mov
psadbw
and
lcall
mov
adc
and
pop
into
add
repnz
int3
int
orb
leave
in
push
mov
mov
dec
fs
jb
test
pop
xor
sbb
push
cmpsb
mov
jb
icebp
add
pop
and
push
inc
ret
add
xor
cmp
lea
jbe
inc
mov
add
or
pusha
xor
and
add
push
xor
lock
ret
aad
mov
lock
dec
lods
insl
jp
inc
add
sbbl
movsb
jne
or
std
and
inc
xor
jl
into
adc
sub
into
popf
ljmp
and
add
mov
cwtl
ljmp
sub
cli
inc
ljmp
add
pop
sti
mov
and
loop
or
pop
adc
or
xchg
and
imul
pusha
sbb
arpl
or
sbb
push
stos
inc
or
jnp
and
add
or
push
inc
fwait
adc
cmp
iret
shlb
aas
mov
cmp
ljmp
es
dec
xor
jb
outsl
add
and
xorl
dec
sub
pop
push
add
or
and
push
and
sub
push
or
cmpsl
shlb
sub
jg
mov
ja
jns
sub
in
pop
mov
and
sarb
lahf
or
lea
cli
jmp
jmp
mov
and
or
in
lcall
into
cmc
mov
and
daa
inc
int3
inc
jo
in
mov
ret
sbb
rorl
inc
test
jne
imull
xor
cmp
jmp
outsl
xlat
push
add
scas
xchg
std
sub
add
out
sbb
xor
sbb
lods
jnp
clc
mov
mov
shll
icebp
outsb
mov
xchg
iret
cs
shrb
mov
xchg
mov
inc
mov
inc
and
jle
pop
aad
jle
mov
int
shll
rclb
stos
or
mov
and
testb
xor
dec
add
ret
xchg
into
popa
jae
xchg
or
test
iret
xor
and
add
or
pop
xchg
sbb
subb
sub
aaa
aas
sti
into
adc
adc
dec
in
popf
out
sub
lret
enter
sbb
inc
dec
or
leave
pop
loope
popf
mov
popf
adc
call
aas
xor
ret
jno
lods
sub
imul
mov
xor
cltd
mov
adc
mov
scas
int3
fbld
adc
data16
popf
out
testb
rcr
in
adc
sub
lahf
sti
rcl
pop
mov
popl
add
repz
mov
imul
roll
xor
sbb
enter
or
pushf
stc
pop
dec
add
push
push
jle
xchg
push
jne
sbb
pop
lods
fwait
insb
adc
dec
fadd
fimuls
imul
and
xchg
xor
mov
or
or
aaa
aad
movl
add
in
mov
aaa
jnp
pop
fisubrl
add
insb
push
shll
add
pop
orb
jo
xorb
nop
mov
and
push
and
mov
jne
mov
jns
popf
lcall
cmp
and
and
nop
jo
cmp
popf
loop
and
mov
inc
ds
fsubp
test
lods
pop
xor
ret
sbb
xor
add
or
aam
xchg
mov
aaa
lahf
or
push
xchg
fsubrs
push
negb
jbe
insb
inc
imull
mov
dec
mov
xchg
dec
mov
lock
push
jecxz
jp
retw
out
push
cltd
pop
ret
not
add
test
fwait
or
or
mov
push
movsb
xor
cld
add
sbb
push
push
shlb
cld
jg
movsb
adc
loopne
or
shr
fwait
shll
jae
aaa
jns
inc
mov
add
cmp
xor
fstl
push
mov
cmpsb
pop
inc
out
fsts
jl
movsl
or
outsl
lret
mov
in
inc
xlat
hlt
lahf
and
arpl
insl
xor
sbb
add
fwait
xor
inc
mov
dec
push
or
ss
add
jbe
dec
cli
or
add
stos
outsl
dec
xor
aad
push
push
mov
add
inc
pusha
dec
rolb
cmp
and
test
cmpsb
cmp
pop
add
fdivrl
lahf
mov
flds
sub
fsubrs
jg
pop
sbb
cmp
adc
sbb
loop
jae
sbb
or
add
ss
adc
fdivl
into
inc
jmp
sbb
sbb
pusha
jno
mov
mov
repz
outsl
push
sbbl
sarl
push
xlat
mov
leave
push
cmpsl
add
pop
add
jbe
mov
adc
pusha
jbe
test
mov
mov
adc
idivb
lahf
ljmp
jb
shll
jae
icebp
jle
outsb
or
mov
in
xor
scas
call
or
xchg
add
lods
jns
inc
mov
lret
into
orb
repz
sbb
jnp
inc
push
dec
pop
cmp
add
dec
pop
dec
cmp
adc
pop
addr16
adc
adc
add
jg
inc
insb
sbb
or
subb
pusha
rorl
and
idivb
add
adc
add
notl
mov
mov
sarl
mov
arpl
sti
xor
es
lds
cmp
sbb
outsl
adc
loope
and
jns
repnz
mov
xchg
aad
outsl
pop
add
xchg
adc
imulb
or
sbb
orl
xor
insb
in
and
xchg
lock
sub
mov
pop
add
inc
incl
les
mov
fidivrl
cmovo
popa
testb
lea
andl
sbbb
loope
xchg
pushaw
or
xchg
lds
mov
ds
adc
dec
aad
dec
pop
outsl
adc
insb
sbb
seta
lret
add
jecxz
pop
insb
sub
stc
push
popf
adc
sbb
mov
push
sbb
or
aaa
loope
mov
andl
mov
push
adc
sti
mov
jp
xchg
fsts
jbe
negl
sbb
add
or
or
outsl
mov
pusha
aam
adc
cmp
inc
das
xchg
jmp
sbb
cmpsl
movsl
ljmp
popa
adc
dec
std
lock
dec
push
jbe
sub
sbb
aad
dec
lcall
inc
push
xchg
mov
data16
pop
test
mov
adc
sti
inc
sbb
int3
mov
adc
shrl
dec
pop
mov
add
call
fstl
sbb
jmp
in
or
push
push
inc
pop
add
test
xchg
ss
xlat
mov
adc
cld
and
mov
add
lea
out
cmp
pop
dec
int3
xchg
lcall
mov
das
add
jo
in
out
jnp
jp
in
fistpl
rorb
xchg
sub
inc
push
popa
outsl
cmpsl
insb
stos
mov
jnp
mov
lea
lea
shr
sbb
adc
pop
push
mov
mov
or
mov
mov
ljmp
cmp
and
data16
hlt
mov
push
pop
dec
push
sti
and
mov
adc
jecxz
ret
xchg
mov
pop
sbb
daa
adc
mov
inc
pop
inc
daa
push
lds
lea
pop
ss
cmp
jp
subb
or
flds
xor
pop
jb
pop
add
gs
cpuid
pop
lret
add
sub
pusha
pop
shlb
sbb
pop
outsl
add
adc
popa
or
xor
or
sbb
je
cmpsl
add
imul
adc
cmp
mov
pop
add
push
push
sbb
jmp
adc
xchg
sahf
sbbb
pop
xor
jp
or
sub
es
or
in
lahf
sbb
mov
and
pop
xor
int
push
ja
or
xor
iret
testb
pop
icebp
daa
mov
sbb
or
movsl
add
mov
adc
cmp
insl
mov
mov
adc
fs
sti
mov
lea
fst
repz
outsl
rdpmc
cmp
mov
xlat
add
add
mov
xchg
or
mov
mov
scas
pop
mov
jbe
mov
arpl
das
outsl
xor
outsl
sub
adc
jge
dec
paddusw
add
adc
cmpsl
mov
dec
xlat
cmpsl
mov
add
sbb
cmpsl
adc
lods
xchg
pusha
pop
cmp
fiaddl
or
fs
inc
or
adc
out
insb
lods
sti
push
adc
sbb
xchg
dec
sbb
push
sub
movsb
call
jp
jmp
sbb
addl
stos
aad
pop
or
mov
xchg
mov
and
test
add
sbb
es
push
xchg
add
pop
loope
sub
mov
js
add
inc
sarl
js
jle
cltd
fsubrs
inc
mov
and
lahf
std
inc
aas
fwait
jecxz
stc
pushl
fnsave
jmp
push
mov
rorb
int
jmp
adc
jne
inc
mov
and
or
mov
je
andb
xor
jl
inc
loop
push
test
fisttpl
in
popf
add
xchg
cmp
sbb
aad
imul
idivb
add
loopne
inc
xlat
je
stos
imul
cmpb
inc
in
cmp
mov
imul
lahf
push
add
mov
cs
fcomps
mov
addl
jo
fcompl
aaa
into
data16
out
testb
cs
mov
add
jne
nop
xor
outsb
mov
pop
addl
inc
inc
add
adc
or
fsubrp
push
insl
or
xchg
rep
or
divb
mov
ja
mov
xor
pop
pop
push
or
mov
pop
insl
push
push
test
std
add
ss
out
and
cwtl
and
pop
or
repnz
jecxz
and
mov
popa
lods
xchg
push
or
fucomp
in
mov
aam
aam
jcxz
cwtl
cmp
push
jmp
cmpsb
fwait
xorb
ror
cmpsb
push
xchg
and
jbe
push
mov
dec
or
cmp
mov
in
xchg
test
int3
jl
cwtl
aad
cmc
out
sti
push
mov
mov
aad
and
outsb
fildll
add
in
and
out
mov
pop
inc
adc
out
dec
push
je
xchg
add
insb
mov
jecxz
cli
mov
sub
dec
cld
daa
hlt
lret
mov
jne
roll
mov
add
mov
mov
test
or
xchg
jb
mov
push
fstps
add
pop
dec
add
dec
dec
lds
pop
insl
pusha
loope
mov
and
daa
lds
ss
add
and
cli
push
sbb
mov
lret
inc
in
add
mov
lock
divb
xchg
jp
roll
packsswb
data16
in
loopne
imul
or
into
ffree
jne
mov
fwait
sub
jp
outsb
jnp
dec
sbb
scas
mov
push
fmull
mov
dec
fildll
bound
mov
dec
subl
add
stos
mov
in
and
mov
jne
int
cmp
in
movl
pop
xor
loopne
pop
cld
data16
iret
push
ret
add
mov
push
sbb
and
jo
dec
cli
lods
lcall
mov
xchg
rolb
clc
mov
nop
add
std
xchg
sbb
mov
mov
sub
jp
cmp
push
xchg
shll
fcmovnu
pushf
outsb
cmc
lea
mov
sbb
jle
stos
subl
mov
inc
mov
sbb
dec
adc
add
mov
cld
sbb
or
pushf
loope
cmp
stos
or
push
mov
shlb
mov
fdivl
aas
inc
mov
mov
in
mov
xchg
add
popa
jle
mov
xchg
or
mov
dec
into
push
ds
xchg
mov
lea
les
fisttpl
pop
mov
cli
sub
fdivs
pop
cmpl
cmp
jbe
fimull
dec
mov
cmpsb
xchg
mov
aaa
out
stos
in
mov
outsl
outsl
pop
sub
out
push
inc
add
inc
rorl
sahf
insl
sub
fldt
sahf
popf
stc
mov
inc
ja
jmp
in
push
and
or
mov
popa
jmp
xchg
inc
mov
mov
mov
inc
cmp
in
cmpsb
jmp
and
aam
jmp
push
inc
mov
out
imul
mov
push
pop
jnp
jnp
loope
vmptrst
les
push
outsb
mov
clc
push
dec
es
scas
cmp
fsubrs
mov
sti
xor
jnp
outsl
cmpsb
sbb
mov
sbb
cmp
push
or
arpl
cmp
push
dec
pop
popa
mov
jno
mov
adc
pop
mov
mov
sbb
xchg
outsb
scas
subl
pop
jnp
jbe
stos
jbe
jnp
mov
sbb
pusha
jnp
cld
std
add
mov
dec
stos
insl
add
mov
mov
scas
jp
mov
sbb
mov
js
adc
adc
push
push
add
nop
arpl
shll
mov
pop
xchg
fistps
fcompl
cmc
xlat
lahf
loope
push
mov
add
jne
cmp
imul
cmpsl
pop
sub
mov
in
mov
ret
fldenv
push
ucomiss
mov
jg
ror
fstpl
outsl
push
daa
data16
test
testl
outsb
js
enter
or
adc
push
fisttpl
jp
test
pop
in
or
sti
add
or
scas
mov
sub
pop
insl
jge,pn
mov
mov
pop
or
mov
test
int
imul
in
sbb
mov
add
inc
leave
dec
ret
aam
add
cmp
pop
pop
pop
mov
mov
test
sbb
shrb
fimuls
and
pop
pop
cld
ffreep
mov
xor
call
out
das
rcll
lcall
dec
cs
shl
test
xchg
inc
imul
cld
out
movsl
inc
rcl
sub
push
mov
push
ja
add
adc
scas
fcmovnb
push
pop
shl
shrb
push
add
dec
in
push
pop
pusha
add
mov
stos
mov
popa
aas
mov
sahf
arpl
addr16
pop
cmpsb
out
mov
lea
fstpt
mov
scas
cs
scas
cmpsb
js
inc
and
pop
fs
push
rcl
pushf
mov
sbb
in
addr16
mov
not
fnstcw
fdivs
pop
fdivrl
push
test
sbbb
pop
push
lea
and
inc
inc
icebp
int
ljmp
loope
mov
popf
in
xor
int3
ljmp
movsl
adc
outsb
pop
js
dec
stc
pop
testl
imul
sarb
xchg
addr16
push
adcl
dec
cmp
lods
cmpsb
lods
fldl
in
imul
mov
jl
pop
mov
in
push
adc
les
adc
cmp
shrl
out
or
cmp
dec
in
les
fldl
repnz
mov
icebp
push
jp
fdivp
je
fisubrl
xor
in
mov
ja
dec
add
into
sub
sbb
popa
push
cmpsl
popa
and
lods
mov
insb
xchg
cmp
mov
inc
dec
fidivl
lcall
cmp
pop
jo
mov
and
xor
cwtl
add
or
jg
xchg
test
shll
add
inc
inc
cmp
sar
inc
sti
xor
icebp
mov
xor
ja
xchg
adc
push
xchg
lcall
or
dec
lret
ljmp
add
cmp
mov
lods
mov
fucom
dec
mov
pop
ss
sub
pop
stos
in
sbb
int
and
out
dec
xchg
fcmovu
or
xor
scas
loop
inc
fisubrs
fstl
out
dec
and
adc
add
or
popf
ret
cli
jne
gs
dec
xchg
pop
inc
shll
imul
mov
jmp
adc
loopne
addl
xor
mov
mov
imul
fmuls
inc
sbb
ds
add
hlt
cmp
scas
or
cmpsb
fildl
xchg
mov
mov
lods
orl
je
jno
jne
push
adc
mov
int
adc
or
ret
and
mov
jle
mov
andb
imul
js
and
mov
cmp
cwtl
test
mov
jne
ret
dec
dec
mov
mov
sbb
ljmp
test
mov
mov
push
dec
out
aad
movsl
test
loop
sti
xchg
fidivrs
ja
stos
imul
stos
sub
stos
jo
cmpl
rorl
lcall
inc
inc
or
dec
mov
cmc
sbb
cmp
inc
sub
and
push
fnsave
mov
mov
jbe
push
cli
fs
add
stc
mov
ss
mov
mov
pop
scas
cmp
ret
inc
arpl
sbb
cmp
sbb
mov
cltd
out
out
and
jbe
jnp
cmp
mov
das
mov
push
out
push
cld
mov
mov
lods
dec
outsl
mov
roll
insl
jb
sub
xor
das
inc
rcr
test
or
sbb
roll
sbb
cmp
ljmp
xor
sarb
popa
adc
gs
cmp
xchg
mov
rcrl
xchg
cmpsb
and
push
cli
ss
or
addl
popf
addr16
subb
and
add
movsb
mov
rcl
sbb
sbb
push
fidivrl
ret
xchg
lods
sbb
das
sub
adc
xchg
xor
arpl
mov
mov
pop
push
push
enter
push
dec
outsb
fisttpl
iret
jnp
std
or
shll
sub
xchg
cmpsb
sbb
mov
cmp
rcrl
xor
sub
push
xor
ljmp
push
iret
repnz
nop
push
sbb
dec
or
adc
movsb
xor
pop
test
jbe
int
stc
sbb
in
sub
ja
ficoms
adc
mov
shlb
sbb
xor
adc
lcall
test
mov
mov
das
lods
icebp
mov
fsubl
ret
movsb
daa
leave
imul
cmpsb
cmp
mov
xchg
pop
lret
mov
lds
mov
dec
in
jg
rcl
adc
nop
aas
mov
xchg
jbe
lcall
jnp
jne
mov
adc
mov
fcmovne
or
mov
rolb
adc
cmpsl
cmp
xor
mov
sub
mov
xchg
pop
daa
cmp
sub
pop
sti
int
sub
rcll
xchg
mov
andl
dec
inc
sub
and
xchg
sub
stos
fsubr
sub
add
ret
scas
jmp
jno
mov
mov
jle
jo
xlat
and
or
jnp,pt
shrl
cmpsb
lahf
lcall
jp
in
push
aad
xchg
xchg
xor
dec
jp
add
fcompl
bound
popa
imul
push
xor
fistpll
xchg
or
insl
jle
testl
aaa
xchg
mov
and
test
or
fcoms
lret
dec
fldenv
dec
dec
sub
movsb
jecxz
rcl
and
ficompl
sbb
jmp
stos
cli
lret
adc
push
clc
out
mov
ds
xchg
pop
jmp
ds
adc
sbb
pop
fadds
cmp
add
lret
mov
aas
mov
push
orl
sarb
fistl
test
inc
dec
inc
loop
enter
pushf
loope
cli
sub
lods
mov
sub
sahf
daa
xorb
pop
in
cltd
mov
jnp
ret
dec
icebp
fdiv
lods
inc
cld
lods
pop
sbb
sbb
jo
stos
add
loope
xor
dec
pop
adc
lods
xchg
add
sub
lahf
push
mov
insl
push
aaa
ret
cmp
cmp
lea
imul
add
inc
mov
pop
sti
movsb
push
cmp
movsl
sbb
sbb
aad
fstp
mov
inc
push
ficoml
rolb
adc
mov
sti
xchg
push
push
loop
add
mov
and
cld
dec
push
jecxz
bound
pop
je
test
mov
xor
xor
mov
mov
movb
insb
int3
out
loop
mov
aas
xchg
sahf
inc
mov
jns
test
addb
enter
add
fwait
pop
inc
xor
push
pop
add
ror
ds
test
sbb
pop
daa
test
mov
ss
mov
dec
cmp
gs
fidivl
push
sub
jb
push
in
test
or
stos
fdivrp
stos
adc
inc
push
inc
push
mov
push
pop
jo
and
xor
xchg
test
mov
mov
call
inc
in
daa
outsb
repz
adc
inc
cmp
in
repnz
mov
test
push
sbb
cmc
xchg
loopne
push
js
xor
jge
pop
mov
arpl
ret
and
sub
mov
mov
in
iret
adc
sub
adc
aad
fistps
or
xor
gs
pop
mov
std
sub
lret
fcmovnb
scas
out
out
je
pop
jge
mov
mov
jbe
push
mov
xchg
ljmp
leave
jne
fildl
outsb
sbb
or
sbb
cmp
out
js
push
ja
test
jle
test
pop
sahf
xor
push
insl
shll
cmp
aam
sar
mov
pop
inc
xor
lahf
cmp
sahf
and
test
mov
fs
movsl
fnstsw
ret
inc
fs
and
imul
and
add
inc
push
and
inc
add
in
movsl
repnz
push
int
adc
rclb
jns
ja
arpl
push
sbb
and
das
shlb
xchg
xor
adc
jbe
sti
pop
loopne
push
jecxz
mov
orl
cwtl
cmp
lods
fisubrs
mov
sub
test
or
adc
addl
rorb
cmc
sub
push
mov
sbb
xchg
fcmovnb
imul
pop
xchg
sbb
js,pt
and
push
push
lea
mov
arpl
jmp
sbb
insl
mov
les
sbb
pop
sub
rorb
leave
arpl
stos
xor
jecxz
mov
outsl
subb
xchg
scas
cmp
inc
or
test
pop
sbb
push
mov
xchg
loop
push
outsb
jnp
pop
jle
stos
subl
mov
in
mov
pop
pop
cmp
rcr
sbb
jecxz
xor
mov
add
mov
dec
orl
loop
nop
mov
aad
jecxz
inc
mov
dec
stos
or
mov
outsl
mov
ss
cld
adc
mov
scas
cmc
lods
inc
fbld
dec
add
jmp
add
add
push
ss
jmp
sbb
push
xlat
gs
stos
pop
clc
out
shll
aas
cwtl
cmp
dec
in
pop
pop
ja
mov
ret
jo
imulb
add
adc
cs
popf
add
mov
popa
cmp
jecxz
sub
jl
cmpsl
and
jb
lea
add
adc
pop
imul
adc
movsl
in
xor
lret
outsb
sbb
adc
mov
icebp
push
shlb
sub
mov
pushf
out
push
and
cmpsb
lods
jo
mov
sub
jmp
adc
shlb
fistpll
popf
lock
outsb
fistl
mov
sub
xor
into
jle
xchg
sbb
fidivs
push
aad
mov
xchg
pusha
add
lcall
sub
dec
movsl
sbb
or
lahf
and
dec
aam
bound
jl
int3
jle
jle
sbbl
pop
mov
mov
insb
pop
push
mov
mov
mov
ja
ja
or
cs
cld
add
rorb
repnz
mov
add
inc
sub
das
lret
fiadds
lret
or
ret
cmp
pop
in
pop
addb
pop
data16
xor
mov
in
xchg
aaa
push
pop
rclb
xor
push
lahf
pop
jle
outsb
les
dec
adc
rorb
sbb
ret
fwait
push
lods
jp
lods
cmp
arpl
inc
pop
xchg
xchg
mov
scas
out
mov
dec
sbb
or
pop
loope
aas
insb
jbe
outsb
pop
mov
aaa
out
push
pop
mov
and
add
jge
sub
movsl
int
les
mov
sub
inc
movb
mov
int
ss
mov
push
aaa
mov
int
add
push
mov
mov
call
cltd
cmp
rclb
jl
pop
xor
push
movsl
rol
xor
movsl
ficompl
ds
shlb
lret
jmp
cs
addb
or
clc
adc
pop
xorl
sbbl
daa
sub
xor
movsl
jge
nop
and
add
loope
divb
mov
or
into
push
sbb
fcomps
sbb
dec
imul
nop
inc
rcrb
ret
dec
pop
popa
jne
lds
and
out
ret
idivb
lret
jns
lods
mov
xchg
in
in
mov
dec
sti
push
fnstcw
adc
jno
cli
add
fistl
mov
mov
and
mov
cmp
inc
inc
arpl
jmp
jge
shrl
push
pushf
cli
xor
pop
pop
and
adc
mov
filds
push
loope
pop
rorb
mov
mov
jbe
das
push
or
pushf
push
lods
fsub
in
xchg
fdivs
adc
jnp
inc
sti
cs
rcrl
scas
aas
sbb
adcl
sbb
shll
das
repnz
jge
mov
sbb
pusha
jle
jmp
dec
push
mov
aaa
fnstsw
lods
dec
loope
scas
cmpsb
shlb
dec
mov
outsb
fucom
insb
sbb
cld
inc
push
ss
movsl
sbb
or
fildl
xor
inc
ret
jbe
add
adc
and
sbb
jl
add
cmp
out
rorb
xlat
mov
lods
lahf
bswap
js
xchg
lret
jmp
xchg
insb
xchg
push
push
cmp
test
bound
sbb
xchg
shrb
fnsave
mov
sub
std
mov
mov
jo
mov
mov
and
xchg
add
mov
mov
rol
push
sub
cmc
lcall
xor
jbe
add
cltd
xor
jb
xorb
xor
loopne
icebp
sbb
insl
or
ret
mov
in
mov
mov
inc
sti
mov
mov
pop
jl
rolb
fucomp
pop
in
push
lods
subl
fucomip
lods
mov
sub
jg
jne
add
cmp
and
jo
scas
out
lcall
sti
or
sub
mov
leave
and
jne
rcl
aad
inc
dec
push
adc
mov
shll
dec
in
mov
fldcw
scas
fcmovnu
outsl
sbb
and
mov
enter
sbb
push
sub
stos
mov
sub
pop
adc
and
inc
mov
dec
mov
or
sub
ljmp
cmpsb
outsb
adc
mov
ret
xor
movsb
imull
add
mov
roll
pusha
mov
in
jg
mov
repz
outsl
sub
and
cmp
ja
xor
jmp
repnz
leave
loop
lods
fildl
mov
addl
mov
mov
rcrb
notl
shlb
add
aad
push
and
dec
ret
test
add
daa
mov
push
ljmp
add
mov
mov
enter
push
js
adc
jne
pushf
jl
test
mov
mov
pop
pop
cmp
mov
aam
sahf
lret
repz
int
pop
push
mov
mov
movsl
mov
push
push
cmpsb
push
jl
add
cmpsl
fs
out
sbb
jp
orl
outsl
lock
push
mov
xlat
dec
aad
and
xor
les
mov
outsl
lds
mov
inc
ror
jnp
dec
out
aaa
insl
fdivrl
cld
adc
xchg
test
dec
mov
xchg
jmp
test
or
xchg
repz
jno
xlat
adc
mov
sbb
in
dec
stos
pop
nop
and
sbb
mov
test
jo
and
sbb
lock
and
cmp
pop
inc
insl
ret
fs
movb
mov
test
pop
insb
xor
addb
inc
lret
xlat
jne
sbb
cmpl
jge
andl
inc
push
fwait
lea
icebp
fwait
stos
addr16
negb
xor
fnstsw
out
insb
lock
pop
mov
push
fidivrs
lret
xlat
stc
setbe
push
mov
lret
in
add
decb
jp
mov
cmp
insb
jbe
jge
rorb
dec
xchg
ret
lea
push
xor
xchg
out
add
add
push
push
movl
sbb
sub
add
xor
xor
daa
imul
imul
or
fcmovnu
mov
adc
xor
and
push
mov
xor
sub
xor
add
into
cld
dec
adc
add
pop
pop
xchg
iret
xor
pop
mov
adc
mov
das
sti
or
add
sub
xor
or
push
jnp
pop
pusha
into
or
mov
addb
xor
jmp
in
xor
and
and
out
add
arpl
sbb
xchg
or
jmp
jb
push
and
out
xor
pop
incl
inc
push
and
in
ja,pt
xor
xor
xor
outsl
adc
xchg
int
and
add
xchg
popf
jl
and
sti
sub
movsb
add
add
imul
addr16
inc
inc
xor
lea
mov
cwtl
add
mov
cmp
daa
cmp
ds
imul
outsl
or
jae
arpl
insb
adc
sbb
jae
jecxz
sbb
outsb
cmp
hlt
sub
cmp
scas
shr
negb
cmp
mov
xchg
dec
pop
push
adc
xchg
xchg
or
divl
sti
push
ret
xor
fstpt
pusha
cmp
xor
add
or
or
out
push
pop
sub
mov
add
mov
out
sub
pusha
fstp
repz
fildll
and
add
cmp
add
js
fistpll
incb
sbb
test
pusha
arpl
jnp
pop
or
jge
ficoms
pop
shrl
cmp
add
cs
adc
cmp
mov
popf
mov
mov
das
cmp
cmp
arpl
or
dec
xchg
cmp
push
push
out
rolb
adc
xchg
dec
es
mov
cmp
leave
jl
inc
mov
sbb
testl
add
ds
addr16
pop
test
testl
lods
pop
popa
or
adc
mov
and
mov
add
in
inc
adc
push
or
pop
repz
push
cmpsl
push
scas
into
pop
mov
xchg
pop
jecxz
sti
arpl
mov
xlat
add
sti
mov
add
push
sub
or
mov
cmp
dec
jnp
arpl
fisttpl
popa
jnp
shlb
push
fldenv
fisttps
sbb
or
add
adc
jnp
inc
sbb
jnp
pusha
add
out
pop
js
dec
jmp
incl
add
mov
dec
mov
add
add
lret
push
xlat
add
fildl
shrl
push
addr16
fists
inc
jo
addr16
scas
push
testl
iret
xlat
push
data16
scas
int
pop
push
sbb
mov
ja
inc
push
pop
or
sbb
or
sbb
out
loopne
je
std
adc
repz
rcr
inc
add
les
add
repz
sub
push
inc
adc
addb
aaa
fsubs
mov
addr16
sub
dec
dec
test
test
pop
dec
test
sub
xchg
xor
lock
push
das
add
neg
scas
adc
push
xor
adc
pop
sub
adc
pop
loop
xchg
sub
mov
mov
sbb
fstl
pop
sub
push
or
movsb
sub
daa
pop
ja
or
fisttps
jb
fstpl
push
negl
push
jnp
call
loop
in
mov
daa
fadds
push
mov
xchg
pop
test
adc
adc
cli
out
jae
pusha
adc
cmp
pop
jbe
mov
jne
clc
add
cmp
adc
mov
ss
xor
or
and
fnstenv
dec
out
adc
and
pop
lahf
ds
or
outsb
or
and
sub
or
and
mov
mov
mov
fsubl
xor
inc
outsb
int
xor
mov
inc
lahf
add
push
data16
mov
jb
cmp
and
jmp
and
mov
inc
cmp
jecxz
ljmp
inc
lret
or
ds
or
pop
insb
movl
clc
lds
dec
or
stos
xchg
xchg
add
xor
data16
adc
in
out
outsb
push
pushf
int
data16
mov
mov
sbb
scas
pusha
xchg
mov
andl
jo
mov
jp
jne
out
aas
and
and
aad
and
adc
mov
or
pop
cmpsl
inc
mov
fsubl
scas
pop
imul
aaa
in
mov
and
sbb
pop
insb
xchg
xor
and
xor
out
cmp
sbb
mov
or
xor
sti
fdivl
xchg
jae
cmp
or
adc
data16
pop
inc
or
ljmp
daa
sti
mov
enter
fmull
outsl
mov
cwtl
push
and
gs
push
xor
jl
adc
nop
push
mov
jg
sub
dec
sub
jp
seta
retw
or
arpl
sti
pop
inc
cmpsl
push
inc
pop
inc
xchg
adc
fwait
int
xchg
dec
mov
push
sbb
lret
add
outsl
push
or
push
add
pusha
insb
shlb
and
add
rolb
dec
rcr
jns
ret
add
sbb
icebp
lods
fcos
dec
cltd
fdivr
xor
incl
xor
and
test
sahf
ss
xchg
bound
daa
addl
push
xchg
ljmp
pop
cmp
fdivs
xor
sub
or
aad
mov
mov
jbe
in
mov
pop
inc
and
jbe
gs
inc
dec
pop
divb
or
and
pop
inc
imul
cmp
into
jp
add
and
jbe
movb
or
enter
cmp
and
xchg
jo
ret
push
or
aad
es
iret
loopne
mov
jno
ret
leave
add
jnp
data16
and
or
jbe
and
out
fdivl
jecxz
xor
outsb
cmp
je
fnstenv
fdivl
es
mov
ficomps
xor
xchg
dec
add
icebp
dec
jne
cmpsb
shlb
fdivr
lds
lods
push
and
push
scas
mov
ss
or
adc
mov
out
mov
in
in
cld
shll
add
fldenv
pusha
or
es
sub
pop
mov
insb
sbb
sti
insb
and
leave
mov
and
aaa
and
push
cli
push
xchg
sub
adc
fadds
sbbl
sub
shlb
popa
push
imul
stos
cmp
in
shlb
inc
jo
gs
push
mov
sbb
jmp
nop
out
insb
sub
inc
pushf
es
fistps
cli
std
data16
les
push
scas
scas
adc
mov
fs
scas
sbb
and
divb
dec
add
imul
adc
add
jnp
push
iret
aam
and
jmp
xchg
insl
sbb
insb
inc
ret
push
hlt
and
sbb
pop
cmpl
add
cmp
dec
cmc
jne
mov
jne
add
cmpl
cmp
mov
cmp
pop
das
mov
andl
mov
pop
popa
pop
into
or
in
addl
cmp
dec
adc
stos
fidivl
or
lret
xor
leave
or
lret
cmp
gs
add
aaa
out
dec
in
xor
pop
adc
lods
test
mov
and
or
in
sbb
pop
sbb
scas
or
out
jne
addr16
mov
imul
fmuls
inc
dec
dec
das
or
and
or
das
pop
js
sub
mov
sub
mov
imul
out
insb
ret
out
clc
mov
mov
add
ss
inc
insb
lahf
jnp
jmp
insb
cld
xlat
dec
cmp
lea
orb
lret
or
sub
lahf
cmp
sbb
hlt
sub
imul
pop
push
dec
sub
and
inc
enter
aaa
aaa
xor
sub
adcb
leave
adc
cmp
das
out
mov
aad
adc
jne
scas
or
test
imul
aad
fists
and
jnp
pop
inc
imul
iret
or
fwait
jno
adc
add
xor
mov
mov
mov
or
loop
lock
outsb
out
jae
cmp
add
icebp
cmpb
sbb
fstp
testl
mov
shl
and
test
mov
sbb
inc
loop
roll
aas
or
pop
and
push
push
aam
adc
inc
iret
push
adc
sbb
aad
or
jae
insl
adc
and
test
test
into
xchg
cld
sbb
pop
mov
pop
add
jmp
or
inc
and
pushf
popf
xor
jle
fldcw
ljmp
lret
out
and
out
mov
cmc
lcall
xchg
dec
pusha
gs
iret
insl
inc
test
ds
sbb
sbb
cmp
pop
add
orl
adc
bound
cmp
nop
nopl
and
mov
iret
mov
ja
leave
outsl
aaa
bound
daa
flds
and
imul
push
add
dec
loopne
dec
pop
cs
dec
mov
test
sbb
mov
inc
js
push
mov
lods
mov
popf
or
dec
pop
fcomps
mov
push
in
pop
test
cmp
ret
pop
jns
inc
inc
sahf
or
and
pusha
pushf
or
rcrl
lret
push
ss
push
jbe
cltd
xor
shrb
mov
scas
or
push
jg
and
mov
fisubs
sbb
arpl
mov
or
jae
es
mov
mov
mov
out
aaa
or
leave
or
mov
lret
sub
add
or
cmp
das
je
in
push
pop
xchg
loopne
je
das
xor
mov
mov
push
setae
push
cmp
js
shlb
add
add
sbb
daa
cmp
rolb
sbb
call
add
jg
aaa
mov
sbb
insl
movsl
xor
sbb
rclb
jno
fadd
mov
es
pusha
es
ss
dec
mov
adc
cmpsl
pusha
dec
jb
adc
and
insb
out
jmp
cmp
or
mov
subb
shr
dec
push
notb
push
test
jge
fbld
cmpsl
sbb
inc
adc
sbb
jbe
xor
lret
add
xor
bound
xor
cwtl
stos
pop
das
lods
adc
mov
sub
mov
fs
cld
xor
lock
aas
or
sub
jl
lods
daa
cs
sbb
or
lock
jb
pop
sbb
pop
lods
lahf
xor
add
jo
mov
inc
xor
es
pop
add
fildll
sub
gs
mov
add
movb
insl
push
jno
mov
mov
mov
lods
push
movsl
and
mov
cmp
in
js
xor
sub
loope
dec
push
inc
xlat
or
addr16
adcl
mov
pop
add
add
insl
or
mov
frstor
das
aaa
aaa
outsl
mov
popf
cmp
fisttpll
sbb
xchg
cs
and
orl
data16
adc
pop
xchg
dec
jle
pusha
inc
orl
add
iret
push
inc
add
gs
mov
pop
add
adc
sub
push
repz
cltd
das
jp
jo
add
and
jbe
loope
dec
es
pop
mov
into
daa
cmpsl
sbb
add
mov
add
inc
push
stos
js
push
xlat
mov
inc
addr16
insl
jae
sbb
js
inc
sbb
push
sti
lods
mov
dec
js
or
addr16
and
lods
in
fidivl
dec
inc
inc
push
dec
and
addr16
mov
jg
in
fbld
js
imulb
insl
jnp
xor
jo
dec
mov
push
dec
insl
push
arpl
insb
inc
add
inc
dec
xchg
xor
sti
cmp
insl
sbb
push
xchg
sahf
pop
push
insb
jg
imul
pop
and
inc
sub
mov
int3
adc
js
in
push
add
mov
ja
xor
outsl
out
insb
jp
out
in
into
fisttpll
jns
push
add
jecxz
jnp
xchg
or
lds
ja
xor
outsb
jle
jg
jge
insl
cmpb
dec
and
jl
mull
jns
adc
out
hlt
and
jno
pop
sbb
pop
jnp
or
cli
add
fwait
mov
data16
lcall
addr16
data16
mov
jg
and
mov
jecxz
lds
xor
lea
xor
cwtl
lds
mov
sub
adc
ret
add
dec
jg
inc
inc
nop
mov
xchg
jb
popa
ret
loope
add
jns
das
sbbb
insl
jns
insl
sub
xchg
push
adc
jne
push
adc
aaa
outsb
std
cmp
imul
add
imul
ss
repnz
mov
insb
mov
in
mov
ret
ds
jmp
mov
andl
fisttpl
xor
push
cmp
or
pusha
dec
jnp
xor
add
sbb
fimuls
jle
incb
ja
add
or
test
push
incb
data16
pusha
js
psubw
xchg
xchg
in
fisubl
sbb
inc
push
add
test
fdivrl
push
jle
ficomps
jg
pop
mov
or
sub
mov
dec
lock
adc
pop
add
or
inc
nop
andb
stc
add
dec
cmpsl
ss
ret
push
jle
loope
jmp
or
add
pop
pop
jp
push
outsb
push
out
pop
cld
idivb
xor
sti
dec
jb
scas
pop
add
rcrb
testb
insb
jp
clc
gs
popf
jle
js
jg
xor
jae
add
adc
cmp
cmc
jnp
sub
jnp
clc
xchg
xchg
jle
pop
pop
negb
or
cmc
mov
ljmp
data16
arpl
es
add
sub
ss
jl
jne
mov
jbe
jne
sbb
cli
cli
jno
out
jae
imul
js
aaa
leave
mov
aas
inc
mov
imul
jne
in
add
mov
test
and
add
imul
push
inc
in
incl
jbe
or
fs
repz
xor
rolb
add
insb
hlt
rorl
inc
arpl
inc
stc
sub
pop
mov
ss
inc
push
push
xchg
dec
js
pusha
int
adc
xchg
adc
adc
xor
cwtl
xchg
adc
pop
sbb
arpl
xor
cmp
push
jge
seta
xchg
xchg
push
xchg
mov
sbb
push
push
dec
bound
sbb
imul
pusha
adcb
dec
js
popa
sub
xchg
xchg
cmp
clc
inc
notb
xor
mov
cmp
rcrb
fwait
push
roll
arpl
push
push
aad
lods
lds
dec
pop
shrl
test
rorl
fwait
jl
and
add
add
mov
imulb
fucomi
mov
pop
pop
loope
mov
loop
sbb
and
pusha
pop
xchg
pop
adc
loop
outsb
add
push
jecxz
push
jecxz
add
call
scas
imul
jg
inc
andl
int
addr16
mov
xlat
outsl
and
push
add
lock
add
bound
popa
out
imul
sub
dec
jns
dec
js
adc
dec
inc
in
loope
sub
idiv
js
xchg
inc
mov
out
imul
xor
daa
stc
pop
lcall
ja
ja
or
cmp
lock
inc
jbe
push
nop
es
push
jne
xor
push
push
lret
pop
loop
dec
mov
outsl
rep
pop
push
addr16
push
test
pop
or
fwait
lock
inc
mov
loop
and
rcl
cld
in
add
pop
inc
add
sahf
xchg
aaa
sbb
inc
adc
mov
idiv
xor
pop
sub
or
sbb
pop
in
mov
add
iret
pop
pop
fiaddl
sbb
mov
lods
test
jg
adc
mov
pop
cmp
in
mov
popf
and
dec
mov
outsb
clc
dec
jle
loopne
loope
stos
xchg
inc
roll
mov
imul
fcompl
fwait
add
xor
jae
push
sub
pushf
inc
inc
push
push
push
lret
imul
sbb
jmp
jns
dec
xchg
inc
andl
jo
mov
jb
daa
js
cmp
pop
imul
popf
test
adc
mov
and
push
lcall
mov
movsb
ja
dec
inc
pop
sbb
xchg
popa
dec
dec
push
pop
hlt
xor
dec
push
shl
stos
test
inc
dec
les
lock
jne
js
inc
push
dec
in
dec
clc
inc
mov
sub
inc
dec
xchg
fnstenv
push
outsl
add
cs
push
dec
jge
mov
fldl
sbb
inc
dec
push
push
lods
fcoml
xchg
dec
add
or
imul
push
add
sub
fstpl
add
pop
pop
loope
test
dec
sbb
jae
add
lods
pusha
mov
fs
mov
pop
ja
int3
mov
push
outsb
mov
push
int
test
sbb
push
imul
ja
sbb
dec
adc
fcmovnu
int
ja
or
jb
push
sbb
fsubl
shlb
push
out
fst
jp
pusha
sbb
pushf
jmp
adc
cmp
jp
lods
out
xor
inc
inc
xor
jae
sbb
adc
jl
aaa
mov
sbb
imul
mov
fidivl
cli
cwtd
inc
mov
jl
jne
sahf
ret
inc
shlb
push
fwait
push
pop
xchg
ret
pop
imul
ja
and
ret
scas
int
cwtl
pop
jo
adc
out
push
jp
inc
xchg
jae
daa
push
sub
mov
bound
jo
je
or
dec
or
adc
dec
and
in
push
mov
sbb
clc
int
dec
pop
insl
mov
mov
pop
in
xchg
js
push
jb
mov
ret
lea
xor
push
mov
lcall
shrb
imul
jo
mov
xor
int3
lahf
aam
sbb
addb
cwtl
mov
mov
push
ljmp
jmp
imul
jbe
scas
cmc
nop
fs
push
dec
and
xor
iret
sub
ret
fwait
xor
sub
cmp
inc
fsubs
jo
inc
and
mov
add
imul
aad
aaa
popa
mov
pop
jmp
mov
add
cmp
xor
xlat
mov
inc
mov
pop
xchg
loop
pop
jg
pop
mov
jb
popa
icebp
cmp
xor
adc
cmp
pop
int3
fldln2
inc
push
mov
inc
dec
add
jb
bound
push
jnp
inc
gs
jno
fdivrs
adc
add
imul
mov
loopne
jae
inc
adc
pusha
in
mov
dec
push
in
cmp
insl
adc
adc
sbb
and
adc
cli
out
lea
sbb
out
dec
gs
and
sub
xor
test
stc
pop
call
inc
push
aad
cmpsb
push
xchg
dec
cmp
sbb
call
mov
test
les
shll
sbb
and
das
xchg
lods
add
shrb
sub
lret
jp
sbb
mov
sub
pusha
leave
inc
ss
add
adc
insb
add
cltd
adc
sub
repnz
lods
test
xchg
mov
xor
push
movsb
xor
sub
iret
or
mov
xor
inc
aas
lods
and
test
xchg
push
call
cmp
jne
adc
add
mov
add
imul
push
add
add
addr16
mov
push
jge
xchg
jns
roll
xchg
int
bound
jl
lods
jge
fnstsw
test
xorb
test
mov
pop
jb
inc
jbe
jae
pop
sub
stos
pop
or
lock
ret
ficomps
adc
sbb
pop
je
insl
in
pop
popa
pop
xor
sbb
insb
testb
xchg
je
stc
fs
lcall
add
add
add
xchg
xor
movsl
movsb
or
nop
xchg
push
cmp
and
jl
je
push
and
jo
fstl
mov
cmp
loopne
test
scas
inc
inc
jp
mov
outsl
es
sbb
push
je
jno
test
aaa
jbe
std
push
rolb
or
testb
inc
add
inc
js
push
adc
mov
mov
inc
or
adcl
lret
or
adc
mov
inc
or
adc
nop
je
dec
adc
mov
push
int
int
pop
and
ret
scas
add
jmp
leave
imull
and
les
push
test
push
sbb
dec
and
pop
adc
add
add
lea
aad
mov
inc
pop
addb
or
pop
jl
pop
or
xchg
in
test
sbb
inc
sub
pop
icebp
inc
sbb
sub
add
mov
push
pop
aas
pop
dec
dec
in
cmp
xor
dec
rclb
mov
ret
mov
notl
cmpsl
dec
push
cmp
pop
out
or
bound
and
inc
fisubl
pop
inc
xor
dec
xchg
jge
add
add
add
dec
enter
jno
mov
xchg
mov
mov
pop
sub
push
jne
xlat
mov
testb
mov
pop
xchg
push
pushf
cmpsl
inc
clc
decb
jg
adc
add
adc
fs
or
je
fs
push
enter
mov
and
sbb
sub
jo
outsb
inc
adc
or
push
in
hlt
push
or
push
or
jne
or
or
sub
mov
call
sbb
push
add
sbb
rcr
push
popa
rorl
aad
and
xor
das
ss
in
mov
sbb
adc
addr16
bound
add
fwait
cmp
test
les
sub
filds
data16
mov
and
inc
or
mov
sbb
xor
ret
cltd
xor
xchg
sbb
test
add
sbb
cmp
or
push
add
andl
sub
jno
mov
cmp
xchg
push
repnz
daa
les
sbb
xchg
adc
xchg
dec
mov
out
dec
sbb
mov
push
jl
mov
push
mov
shll
inc
call
mov
mov
push
inc
or
xor
or
fldenv
and
push
and
movsl
ret
outsb
lret
sub
nop
incl
test
add
sbb
jns
pop
jb
dec
movsb
cs
lret
mov
sub
inc
adc
mov
xor
sbb
pop
outsb
xor
flds
pushf
pop
xchg
mov
or
xlat
cmp
mov
xor
stc
inc
pop
or
mov
pop
out
add
cmp
and
mov
dec
sbb
xchg
outsl
jge
setge
inc
mov
pop
mov
rolb
jecxz
pop
enter
add
push
pop
pop
leave
out
sbb
mov
pop
imul
ret
pop
mov
sbb
adc
inc
icebp
ret
gs
nop
inc
add
dec
or
fisttpl
daa
cmp
xchg
xchg
dec
daa
orb
xchg
xor
fs
or
dec
sbb
imulb
pop
dec
mulb
jnp
sbb
dec
sub
pop
xchg
dec
pop
cmp
and
nop
addr16
jp
pushf
add
lret
mov
xor
add
shrb
jg
adc
add
add
pop
or
test
filds
jnp
lds
andl
inc
jnp
mov
sub
pop
jnp
insb
sub
or
out
or
movsl
xchg
add
mov
cmp
add
cltd
test
sbb
cmp
jle
xor
dec
push
fs
lret
add
add
xchg
jno
and
add
enter
inc
push
add
sbbb
dec
dec
add
and
jge
inc
popa
inc
xchg
or
sbb
add
loop
addr16
movsb
push
jb
je
arpl
mov
dec
add
pop
push
adc
ss
dec
jae
imul
test
add
jg
mov
dec
inc
dec
inc
push
or
jge
dec
outsl
fs
dec
popa
outsb
fs
outsb
jge
imul
xor
inc
mov
push
pushl
insb
jne
push
outsl
inc
dec
outsb
jo
je
jne
data16
mov
jb
inc
js
cmp
xor
push
imul
loopne
inc
cmpsb
jae
sub
mov
mov
shrl
je
push
dec
fdivl
gs
sqrtps
jns
push
pcmpeqw
sub
sbb
mov
data16
into
add
inc
sahf
je
lahf
data16
mov
or
mov
outsl
outsl
jbe
ja
cwtl
insl
push
outsl
or
jle
mov
insb
popa
movsb
dec
xor
push
pop
inc
push
ret
sub
jmp
movsb
dec
in
data16
mov
je
xchg
pop
push
jb
ss
gs
xchg
inc
cwtl
jge
addr16
adc
popf
mov
pop
dec
and
test
jo
mov
loope
popa
mov
insl
in
push
fldt
insb
adc
bound
inc
rcrb
jns
arpl
jle
fildl
jne
inc
jb
addr16
adc
pusha
mov
add
ja
in
imul
push
inc
mov
lahf
jge
adc
or
or
add
mov
dec
push
lock
add
sbb
or
lock
out
mov
add
add
push
add
sti
gs
push
lock
add
sub
roll
mov
lock
das
pushl
add
prefetch
or
lock
pop
lock
push
mov
daa
test
add
push
add
or
call
sti
out
push
and
lock
jp
add
adc
add
shrb
hlt
sbb
sub
mov
sbb
inc
cs
enter
adc
inc
or
add
pop
cmp
or
cs
into
flds
adc
das
pusha
dec
inc
imull
subb
pop
jo
add
inc
dec
inc
inc
insb
pusha
subl
nop
push
les
and
iret
pop
in
sti
out
xchg
or
pop
push
jbe
rolb
push
leave
xchg
iret
or
cmp
shrb
into
cs
enter
pusha
daa
push
imull
popf
sub
mov
dec
xchg
dec
inc
daa
push
mov
jb
cmp
daa
and
sub
pop
popa
add
mov
add
ret
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
