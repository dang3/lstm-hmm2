jmp
mov
jmp
mov
jmp
mov
gs
xor
data16
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
movl
lea
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
mov
pop
ret
push
mov
add
movl
lea
push
mov
push
call
call
movl
lea
push
mov
push
call
cmp
jnp
mov
xchg
mov
mov
mov
mov
mov
mov
dec
inc
xchg
mov
mov
inc
xchg
mov
inc
movl
movl
mov
push
mov
push
call
cmp
jae
dec
dec
inc
inc
cmp
jb
mov
lea
xchg
mov
lea
lea
lea
xchg
lea
mov
lea
xchg
dec
dec
dec
movl
lea
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
mov
pop
ret
mov
push
mov
add
mov
mov
mov
lea
xchg
lea
lea
lea
lea
mov
xchg
xchg
mov
lea
xchg
mov
inc
inc
dec
mov
cmp
je
call
xchg
xchg
lea
mov
xchg
lea
mov
xchg
mov
mov
xchg
mov
xor
divl
test
jne
cmp
je
lea
mov
mov
mov
mov
inc
inc
inc
dec
je
mov
dec
lea
mov
xchg
mov
lea
inc
inc
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jl
lea
lea
dec
dec
mov
mov
mov
mov
xchg
lea
mov
dec
dec
jne
lea
mov
xchg
lea
dec
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jae
dec
dec
inc
inc
cmp
jb
mov
lea
xchg
mov
lea
lea
lea
xchg
lea
mov
lea
xchg
dec
dec
dec
mov
cmp
je
jmp
cmp
jnp
mov
xchg
mov
mov
mov
mov
mov
mov
dec
inc
xchg
mov
mov
inc
xchg
mov
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
mov
lea
mov
xchg
xchg
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jp
xchg
mov
inc
inc
mov
mov
inc
dec
lea
mov
lea
lea
lea
mov
xchg
mov
mov
cmp
je
jmp
cmp
jnp
mov
xchg
mov
mov
mov
mov
mov
mov
dec
inc
xchg
mov
mov
inc
xchg
mov
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
cmp
je
call
cmp
jl
lea
lea
dec
dec
mov
mov
mov
mov
xchg
lea
mov
dec
dec
jne
lea
mov
xchg
lea
dec
mov
sub
mov
cmp
jle
mov
mov
xchg
mov
jmp
xchg
lea
lea
mov
inc
mov
lea
mov
mov
inc
dec
mov
dec
push
mov
mov
xor
call
mov
cmp
je
lea
mov
mov
mov
mov
inc
inc
inc
dec
je
mov
dec
lea
mov
xchg
mov
lea
inc
inc
dec
mov
mov
mov
call
cmp
jae
dec
dec
inc
inc
cmp
jb
mov
lea
xchg
mov
lea
lea
lea
xchg
lea
mov
lea
xchg
dec
dec
dec
push
mov
mov
xor
call
mov
xchg
xchg
lea
mov
xchg
lea
mov
xchg
mov
mov
xchg
mov
mov
mov
lea
xchg
lea
lea
lea
lea
mov
xchg
xchg
mov
lea
xchg
mov
inc
inc
dec
mov
mov
call
mov
mov
cmp
jl
lea
lea
dec
dec
mov
mov
mov
mov
xchg
lea
mov
dec
dec
jne
lea
mov
xchg
lea
dec
lea
mov
push
mov
jmp
cmp
jle
mov
mov
xchg
mov
jmp
xchg
lea
lea
mov
inc
mov
lea
mov
mov
inc
dec
mov
dec
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jnp
mov
xchg
mov
mov
mov
mov
mov
mov
dec
inc
xchg
mov
mov
inc
xchg
mov
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jp
xchg
mov
inc
inc
mov
mov
inc
dec
lea
mov
lea
lea
lea
mov
xchg
mov
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
mov
lea
mov
xchg
xchg
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
xchg
xchg
lea
mov
xchg
lea
mov
xchg
mov
mov
xchg
mov
sub
add
add
mov
mov
lea
xchg
lea
lea
lea
lea
mov
xchg
xchg
mov
lea
xchg
mov
inc
inc
dec
lea
pushl
call
mov
pop
ret
inc
gs
jb
arpl
fs
jae
add
push
mov
add
mov
mov
mov
mov
cmp
jae
dec
dec
inc
inc
cmp
jb
mov
lea
xchg
mov
lea
lea
lea
xchg
lea
mov
lea
xchg
dec
dec
dec
cmp
je
lea
mov
mov
mov
mov
inc
inc
inc
dec
je
mov
dec
lea
mov
xchg
mov
lea
inc
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jle
mov
mov
xchg
mov
jmp
xchg
lea
lea
mov
inc
mov
lea
mov
mov
inc
dec
mov
dec
mov
mov
movl
mov
mov
lea
mov
xchg
xchg
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
xchg
lea
mov
xchg
lea
mov
xchg
mov
mov
xchg
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
lea
mov
xchg
xchg
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jl
lea
lea
dec
dec
mov
mov
mov
mov
xchg
lea
mov
dec
dec
jne
lea
mov
xchg
lea
dec
mov
pop
ret
push
cmp
testb
push
pop
insb
jle
jle
jp
inc
jnp
adcl
test
arpl
imul
pop
pop
dec
jle
imul
inc
imul
imul
pop
imul
bound
test
pop
pop
pop
pop
jp
inc
imul
pop
cmpb
jp
sub
inc
jnp
adcl
pop
pop
adcb
pop
imul
adcl
pop
sub
inc
pop
jnp
adcl
pop
pop
pop
pop
pop
dec
mov
lahf
pop
hlt
sub
mov
pop
insb
jo
cmp
mov
ss
pop
ja
push
pop
xorl
push
pop
jne
push
pop
lahf
ss
pop
mov
push
pop
xchg
ss
pop
mov
insl
pop
pop
sahf
pop
out
add
inc
insl
pop
pop
sahf
pop
out
add
daa
insl
pop
pop
sahf
pop
out
add
sub
pop
sahf
pop
out
add
das
insl
pop
pop
sahf
pop
out
add
mov
insl
pop
pop
sahf
pop
out
add
mov
insl
pop
pop
sahf
pop
out
add
pop
insl
pop
pop
sahf
pop
out
add
sub
sahf
pop
out
mov
push
fsubs
ficomps
mov
mov
pop
fsubs
add
pop
sahf
pop
fbld
push
mov
aas
inc
mov
pop
inc
mov
arpl
pop
sahf
pop
add
cmp
pop
fbld
pop
add
pop
fcomip
inc
dec
mov
repz
sbb
pop
pop
pop
mov
pop
mov
xor
pop
add
out
xchg
pop
pop
pop
sahf
pop
iret
mov
sbb
and
enter
mov
sbb
sahf
pop
lret
lods
pop
pop
pop
adcl
lret
mov
add
pop
fcomip
inc
sub
push
and
mov
pop
pop
mov
pop
imul
pop
lret
mov
sahf
pop
sti
mov
pop
sbb
sahf
pop
testl
mov
add
lret
mov
add
mov
sbb
sti
mov
pop
pop
inc
mov
pop
fcomip
inc
das
mov
add
mov
sti
sbb
sahf
pop
mov
sbb
pop
incl
pop
fcomip
inc
das
mov
cwtl
pop
negl
cwtl
pop
sti
sbb
pop
push
cwtl
pop
lret
or
and
and
xor
hlt
hlt
mov
aas
sbb
sahf
pop
out
mov
inc
sahf
pop
jmp
pop
jecxz
mov
mov
and
pop
jecxz
mov
dec
jg
xchg
pop
pop
adcl
push
aaa
inc
mov
dec
jg
xchg
pop
pop
adcl
mov
dec
mov
jmp
fwait
cmp
repz
hlt
adcl
xchg
add
repz
hlt
xlat
hlt
stc
mov
pop
fsubs
add
push
mov
xchg
sarb
pop
pop
pop
push
jnp
pop
pop
push
push
pop
pop
pop
push
cmpsl
pop
jmp
pop
pop
xlat
push
add
jmp
pop
pop
ds
push
lcall
pop
pop
add
ret
ljmp
push
fiadds
adc
ret
incl
pop
pop
xor
jb
pop
push
push
insb
sbb
mov
sahf
cmc
ds
mov
leave
push
mov
fsubs
ficoms
add
fdivrp
cld
hlt
hlt
hlt
imul
pop
pop
mov
sahf
fsubrl
sub
jmp
hlt
hlt
fistps
mov
cmc
hlt
hlt
sahf
pop
repz
pop
xchg
pop
pop
pop
fstpl
push
xchg
pop
pop
pop
fstpl
pop
sub
mov
lock
xchg
xchg
pop
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
mov
hlt
hlt
hlt
pop
lahf
pop
out
xchg
jb
pop
and
mov
pop
lock
sub
mov
repz
mov
or
cmc
hlt
hlt
cmc
pop
icebp
mov
out
push
fstpl
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
fstpl
pop
sub
mov
mov
mov
out
cmc
hlt
hlt
sbb
sub
mov
mov
xchg
pop
pop
sbb
cmp
pop
pop
pop
lahf
pop
icebp
sub
mov
and
out
sub
mov
out
lahf
xchg
xchg
pop
pop
cmc
pop
lock
jb
pop
push
mov
push
pop
dec
mov
hlt
sub
mov
xchg
pop
pop
push
cmp
pop
pop
pop
mov
sub
mov
xchg
pop
pop
sub
mov
pop
and
mov
xchg
pop
pop
sbb
cmp
pop
pop
pop
mov
sub
mov
xchg
pop
pop
mov
pop
lahf
pop
repnz
mov
xchg
pop
pop
mov
pop
sub
mov
pop
lahf
cltd
and
mov
xchg
pop
pop
mov
and
mov
xchg
pop
pop
and
xchg
and
mov
pop
and
mov
xchg
pop
pop
sbb
cmp
pop
pop
pop
lahf
pop
repnz
mov
and
hlt
lahf
pop
cmc
mov
fdivr
and
inc
push
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jp
xchg
mov
inc
inc
mov
mov
inc
dec
lea
mov
lea
lea
lea
mov
xchg
mov
push
call
mov
movl
cmp
je
lea
mov
mov
mov
mov
inc
inc
inc
dec
je
mov
dec
lea
mov
xchg
mov
lea
inc
inc
dec
mov
mov
call
mov
cmp
jle
mov
mov
xchg
mov
jmp
xchg
lea
lea
mov
inc
mov
lea
mov
mov
inc
dec
mov
dec
movl
mov
mov
call
mov
cmpl
je
cmp
jl
lea
lea
dec
dec
mov
mov
mov
mov
xchg
lea
mov
dec
dec
jne
lea
mov
xchg
lea
dec
mov
mov
call
mov
cmpl
je
xchg
xchg
lea
mov
xchg
lea
mov
xchg
mov
mov
xchg
lea
push
push
mov
sub
push
mov
push
call
mov
mov
lea
mov
xchg
xchg
mov
mov
mov
cmp
je
mov
subb
xchg
xchg
lea
mov
xchg
lea
mov
xchg
mov
mov
xchg
xor
add
mov
xor
cmp
jl
lea
lea
dec
dec
mov
mov
mov
mov
xchg
lea
mov
dec
dec
jne
lea
mov
xchg
lea
dec
incl
mov
cmp
jne
cmp
jnp
mov
xchg
mov
mov
mov
mov
mov
mov
dec
inc
xchg
mov
mov
inc
xchg
mov
inc
mov
call
mov
mov
lea
mov
xchg
xchg
mov
mov
mov
push
mov
push
call
cmpl
je
mov
mov
lea
mov
xchg
xchg
mov
mov
xchg
xchg
lea
mov
xchg
lea
mov
xchg
mov
mov
xchg
mov
lea
xchg
lea
lea
lea
lea
mov
xchg
xchg
mov
lea
xchg
mov
inc
inc
dec
push
mov
push
call
mov
pop
ret
add
add
outsb
add
insb
add
add
add
add
add
add
add
jb
jne
insb
push
jb
je
arpl
push
mov
add
mov
lea
xchg
lea
lea
lea
lea
mov
xchg
xchg
mov
lea
xchg
mov
inc
inc
dec
mov
mov
mov
xor
add
mov
cmp
jne
pushl
call
add
cmp
jne
cmp
je
lea
mov
mov
mov
mov
inc
inc
inc
dec
je
mov
dec
lea
mov
xchg
mov
lea
inc
inc
dec
movb
xchg
xchg
lea
mov
xchg
lea
mov
xchg
mov
mov
xchg
mov
mov
pop
ret
push
mov
add
mov
mov
lea
mov
xchg
xchg
mov
mov
cmp
jle
mov
mov
xchg
mov
jmp
xchg
lea
lea
mov
inc
mov
lea
mov
mov
inc
dec
mov
dec
call
test
jne
mov
jmp
movw
cmp
jae
dec
dec
inc
inc
cmp
jb
mov
lea
xchg
mov
lea
lea
lea
xchg
lea
mov
lea
xchg
dec
dec
dec
call
lea
mov
pop
ret
nop
push
mov
add
mov
mov
lea
mov
xchg
xchg
mov
mov
movl
lea
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
jp
xchg
mov
inc
inc
mov
mov
inc
dec
lea
mov
lea
lea
lea
mov
xchg
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jle
mov
mov
xchg
mov
jmp
xchg
lea
lea
mov
inc
mov
lea
mov
mov
inc
dec
mov
dec
movl
movl
mov
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
cmp
je
lea
mov
mov
mov
mov
inc
inc
inc
dec
je
mov
dec
lea
mov
xchg
mov
lea
inc
inc
dec
push
call
mov
movl
lea
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
jp
xchg
mov
inc
inc
mov
mov
inc
dec
lea
mov
lea
lea
lea
mov
xchg
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jle
mov
mov
xchg
mov
jmp
xchg
lea
lea
mov
inc
mov
lea
mov
mov
inc
dec
mov
dec
movl
movl
mov
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
cmp
jle
mov
mov
xchg
mov
jmp
xchg
lea
lea
mov
inc
mov
lea
mov
mov
inc
dec
mov
dec
mov
pop
ret
popa
add
jo
ja
imul
arpl
jo
insb
add
add
add
in
add
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
cmp
jnp
mov
xchg
mov
mov
mov
mov
mov
mov
dec
inc
xchg
mov
mov
inc
xchg
mov
inc
movl
lea
push
mov
push
call
cmp
jl
lea
lea
dec
dec
mov
mov
mov
mov
xchg
lea
mov
dec
dec
jne
lea
mov
xchg
lea
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
lea
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
xchg
xchg
lea
mov
xchg
lea
mov
xchg
mov
mov
xchg
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
cmp
jle
mov
mov
xchg
mov
jmp
xchg
lea
lea
mov
inc
mov
lea
mov
mov
inc
dec
mov
dec
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jnp
mov
xchg
mov
mov
mov
mov
mov
mov
dec
inc
xchg
mov
mov
inc
xchg
mov
inc
movl
lea
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
pop
ret
subl
jae
mov
cmp
jnp
mov
xchg
mov
mov
mov
mov
mov
mov
dec
inc
xchg
mov
mov
inc
xchg
mov
inc
mov
mov
lea
call
cmp
jl
lea
lea
dec
dec
mov
mov
mov
mov
xchg
lea
mov
dec
dec
jne
lea
mov
xchg
lea
dec
ret
mov
ret
lea
frstor
fnstcw
cmp
jle
jp
pop
int
dec
push
cmp
add
sbb
push
mov
add
jg
xchg
sub
hlt
idivl
pop
nop
xchg
xchg
dec
ja
add
adc
pop
js
sbb
jge
pop
add
loopne
push
add
mov
test
jle
add
pop
movl
jnp
sub
add
ret
add
hlt
add
aas
add
das
or
ja
inc
ret
inc
mov
cmp
jg
repnz
or
test
push
repz
add
clc
dec
push
sbb
popf
push
sub
sub
mov
xor
xor
add
pop
add
leave
mov
sahf
sti
add
out
mov
inc
xor
popa
sti
movd
out
jno
cmp
mull
popf
inc
xor
add
lods
inc
add
mov
cmp
add
pop
add
rcll
add
cli
inc
popf
stos
add
add
sbbl
add
xchg
sub
mov
sub
xor
add
push
jecxz
jmp
add
add
sbbl
aam
or
add
add
add
rcl
pop
stc
and
or
add
add
dec
cmp
xor
aas
jg
xchg
pop
pop
lods
fs
add
lods
pop
add
scas
int
sub
mov
std
sub
mov
add
add
mov
add
sub
mov
faddl
cmp
adc
add
push
maskmovq
mull
jmp
xlat
cwtl
jno
mov
pushf
add
mov
inc
add
add
sbb
push
mov
out
ret
ret
add
add
aad
stos
sbb
mov
sbb
xor
push
and
popf
add
add
enter
push
add
xor
add
push
gs
xor
add
add
sub
jae
js
xchg
sbb
scas
and
push
imull
faddl
xor
add
jecxz
and
xor
or
andb
jp
mov
xchg
add
andb
mov
mov
mov
cs
push
add
xor
ja
add
icebp
data16
add
ljmp
inc
out
push
adc
or
mov
cs
test
inc
hlt
adc
scas
add
push
pusha
add
popl
aad
dec
fldenv
mov
xor
push
push
pop
xor
add
pop
pushf
xor
loope
add
xor
jae
adc
inc
ror
pusha
add
icebp
shlb
cs
mov
add
ds
jne
add
imul
dec
aad
lahf
add
add
mov
pop
loop
das
add
cmp
mov
add
add
popf
add
sbb
add
adc
push
stos
es
loopne
jmp
add
adc
mov
push
loope
cmp
dec
jecxz
and
sub
dec
or
daa
sbb
add
jle
mov
mov
add
call
test
add
data16
adc
jae
add
xchg
push
xor
clc
add
jnp
add
inc
mov
push
mov
and
add
add
cmp
mov
adc
imul
xchg
add
ret
mov
dec
add
add
in
sbb
add
je
je
and
out
outsl
roll
add
or
loop
and
add
mov
add
pop
adc
xor
mov
add
les
mov
notb
insl
std
inc
jl
cwtl
adc
cltd
mov
lret
mov
cld
ja
je
je
mov
mov
mov
loopne
xchg
test
dec
xchg
xchg
sub
popa
ret
shrb
es
ss
loop
push
dec
fld
je
movsb
sbb
loopne
or
jae
lods
in
sbb
out
scas
and
jecxz
sub
inc
xchg
dec
add
jle
cltd
sbb
push
test
inc
das
mov
inc
out
push
pop
cli
frstor
lock
xor
notb
mov
test
scas
lret
mov
and
jge
out
add
xchg
mov
dec
push
daa
adc
psubq
adc
dec
push
mov
mov
sbb
sbb
ss
xchg
add
aaa
jns
inc
das
adc
clc
pop
fwait
pop
xchg
or
adc
xchg
add
jg
jle
mov
dec
bound
test
pop
xchg
mov
add
mov
mov
cmp
jo
sub
and
mov
xor
push
dec
pop
mov
push
mov
testl
jmp
test
adcl
sub
mov
or
and
mov
std
jle
push
adc
sbb
ret
sti
pop
cmp
inc
cmp
ret
testl
arpl
cmpsb
add
mov
push
sbb
stos
lcall
jecxz
push
mov
xchg
dec
repnz
repnz
xchg
leave
mov
mulb
jo
inc
jge
call
push
out
in
or
add
inc
out
int3
aam
xor
fs
jo
movsl
loop
mov
mov
push
cmp
pushf
movsb
xor
push
mov
jbe
sti
and
and
jno
fdivs
push
add
xor
lahf
sbb
push
dec
sub
dec
push
mov
pop
xor
popa
shrb
xchg
arpl
or
inc
cwtl
xchg
mov
in
in
in
aad
and
daa
ds
ja
sbb
mov
or
cmp
cmp
aas
movsl
stc
and
cmpsb
lahf
push
dec
mov
in
bound
add
stc
sub
ret
and
pop
jbe
mov
pop
mov
inc
lcall
sbb
inc
ret
inc
outsb
xor
stos
adc
adc
int
sub
mov
push
and
mov
and
loopne
push
push
cmp
int
mov
sub
lea
cmpsb
add
mov
in
and
mov
add
test
inc
movsb
orb
jg
sbb
idiv
mov
add
mov
in
xor
call
int3
mov
negl
jp
cli
mov
movsb
xor
jp
or
loope
mov
cmc
mov
sub
outsl
fisubs
lret
imul
rcrl
lods
scas
leave
bound
sbb
jno
mov
xchg
mov
sti
and
inc
and
lds
subl
mov
rcll
loope
out
les
int
push
sub
fdiv
xor
loopne
imul
lahf
jg
pop
pop
in
mov
pushf
lds
stos
jmp
jo
lods
push
aad
jae
nop
imul
dec
mov
mov
scas
je
loopne
jecxz
in
jne
hlt
enter
jmp
movsl
or
andl
sub
pop
sub
adc
inc
mov
lock
mov
lret
mov
or
lahf
rcrl
mov
std
in
cwtl
jp
into
push
pop
mov
push
das
mov
mov
cmp
jecxz
cmpsl
mov
add
mov
jbe
sub
sub
or
ret
pop
mov
cmpsl
shrl
insl
leave
out
dec
aam
bound
push
adc
popa
ret
lods
dec
jle
mov
or
mov
inc
je
notb
or
and
xchg
jecxz
sub
scas
clc
insl
cmpsb
push
xchg
iret
clc
sub
gs
outsl
roll
jg
stos
cmp
out
gs
xchg
iret
shrb
fwait
cvtps2pd
xor
test
or
mov
cmp
pop
daa
sbb
test
nop
mov
dec
sub
inc
insl
xor
fcompl
mov
testl
push
iret
sbb
aam
jns
jne
in
mov
das
mov
int3
and
pop
dec
out
ja
pop
mov
mov
cmp
dec
push
jne
fstpl
mov
loope
out
dec
jo
xchg
mov
cli
jmp
sarl
out
mov
and
mov
cltd
addr16
mov
rorb
and
and
mov
in
cli
mov
cmp
fisttps
inc
ret
aam
std
mov
dec
jae
and
mov
xchg
out
mov
aas
jp
fidivl
lahf
add
imul
mov
add
iret
push
arpl
leave
add
andl
es
orb
or
sbb
jns
test
or
test
jae
jbe
mov
es
jle
add
adc
mov
inc
jnp
cmp
ficoml
inc
mov
loopne
jge
mov
cltd
aaa
cmovp
cmp
sbb
cmp
cltd
dec
fwait
jmp
pop
xor
mov
es
mov
out
test
aam
fwait
inc
daa
push
pop
cmpsb
push
daa
enter
daa
cmp
out
loope
and
sub
imul
ds
jge
movsl
add
xchg
lahf
jne
aas
cmp
loope
jmp
jl
stos
fists
xchg
jmp
pop
popf
loop
or
inc
pop
out
ret
lcallw
xor
fsubl
mov
mov
shr
in
vphaddbq
andb
aad
mov
inc
jmp
push
and
jae
popa
add
sub
es
pop
and
rclb
mov
jne
sahf
xchg
je
dec
ret
cmpsl
andb
in
jg
inc
xor
mov
jns
mov
cmp
adc
in
or
neg
fbstp
mov
int3
push
cmp
mov
xlat
inc
inc
into
imul
xor
mov
mov
or
imul
out
test
lods
xchg
ja
mov
or
sbb
pop
sub
xchg
xor
decl
sar
iret
xchg
cmp
gs
add
shlb
pop
fldl
cmp
stc
les
or
xchg
fwait
and
sbb
mov
xchg
iret
pop
or
add
daa
ja
pushf
jo
adc
mov
adc
mov
inc
sub
lods
jb
aas
rorl
nop
je
call
movb
lea
cmp
xlat
xchg
xchg
and
jmp
inc
fldcw
dec
mov
jl
or
xchg
in
mov
scas
inc
into
xorl
add
mov
xchg
std
xchg
shll
ds
xchg
cltd
cmp
out
fnsave
icebp
jns
push
cld
int
stos
lret
push
push
cmp
mov
lret
lret
lock
stc
shl
mov
repz
out
ret
out
out
xor
sub
pop
insl
mov
testl
outsb
and
popa
fstps
sbb
sub
das
and
sbb
pop
test
add
fstp
cltd
xchg
stos
mov
and
push
in
subb
jns
clc
test
cmc
xchg
push
mov
sbb
mov
pop
push
mov
out
sub
shr
aam
xchg
push
mov
push
fnsave
test
or
mov
mov
and
test
and
xchg
dec
sbb
pop
es
lock
mov
dec
sub
mov
out
lock
arpl
jns
out
in
adc
xchg
pop
jb
mov
or
pop
lea
ja
add
jp
insl
insl
mov
pop
dec
mov
push
daa
fmull
mov
jne
mov
mov
xchg
xchg
nop
jmp
mov
lock
pop
sub
scas
int3
pop
addr16
xchg
push
stos
inc
push
sahf
and
gs
jnp
aad
jle
mov
pusha
mov
test
hlt
pop
xor
cli
inc
push
pop
mov
push
jge
or
xlat
add
jle
jae
ficompl
rclb
sbb
inc
adc
push
je
rcrl
adc
mov
leave
jns
ds
insl
int3
repnz
pop
inc
sbb
or
xchg
test
in
jo
cmp
or
pop
int3
stos
orb
lods
fisubs
fabs
cli
rcr
mov
and
xlat
nop
cmp
daa
movsb
fdivrl
outsl
push
dec
mov
jbe
cmp
sbb
jb
aaa
into
adc
cmp
imul
dec
or
push
jbe
xorb
mov
scas
inc
sar
pop
pop
test
lahf
loopne
inc
mov
test
mov
and
daa
cmp
lea
or
in
in
lock
add
xor
ds
outsb
mov
lahf
xchg
scas
clc
adcb
mov
add
sbb
dec
adc
idivl
ss
cs
inc
push
mov
add
push
push
outsb
sub
inc
jnp
cli
mov
ror
mov
mov
ss
divl
mov
xchg
push
and
filds
and
insb
int
cmp
push
andb
xchg
push
jle
dec
mov
push
sbb
lods
sahf
sub
loopne
shlb
movsl
jg
jnp
loop
pop
sti
stc
jo
filds
adc
xchg
fdivrl
cmc
and
cli
out
push
and
cmp
cmp
jo
or
test
dec
sub
lock
and
outsl
pushf
cwtl
icebp
adc
xor
rcr
adc
inc
cmp
cli
mulb
insl
lods
jge
mov
jbe
out
sub
sub
jne
mov
push
clc
sti
jle
data16
jnp
loopne
cmc
add
cld
ret
rolb
in
popf
loope
pop
or
push
xchg
pop
leave
mov
cs
push
cmp
adc
pop
mov
inc
in
sbb
jnp
inc
jae,pn
lret
aad
mov
nop
and
dec
pusha
cmp
jb
cli
xor
or
adc
jecxz
loopne
movb
ret
call
mov
int3
pusha
adc
pop
mov
pop
jae
inc
inc
adc
stc
inc
jmp
andb
ret
mov
and
cmc
shl
leave
sbb
push
shrb
cmp
cwtl
inc
mov
call
ds
push
push
fdivr
clc
lcall
addr16
xchg
mov
cmc
push
lock
stc
in
das
xor
mov
les
cmp
test
loop
jge
icebp
lods
add
insl
xchg
sbb
cmpsl
cmp
xor
cmp
mov
lods
and
or
dec
dec
imul
movsb
test
fstps
cmp
leave
mov
clc
xchg
push
scas
lret
sbb
pop
mov
lret
or
pop
es
pop
stos
pop
shlb
and
push
mov
int3
scas
xor
flds
xor
cltd
insb
mov
and
enter
inc
lock
mov
es
fwait
lods
movsl
or
sub
fwait
call
rcrl
xchg
fmull
decl
daa
cmpb
and
movsb
ret
stos
outsl
cmp
add
sub
popa
fidivs
das
pop
jp
loope
mov
adc
mov
jge
lahf
dec
shlb
mov
out
adc
or
jmp
mov
xor
and
out
jae
sub
test
and
stos
mov
pop
and
addb
and
jnp
data16
js
in
pop
fisubs
mov
cmpsb
ret
mov
test
cltd
jae
test
push
inc
pop
popf
shll
adc
adcb
mov
xchg
sub
sbb
lret
out
repz
imulb
push
xor
repz
paddusb
fldt
fdiv
mov
ljmp
jbe
dec
push
arpl
mov
sub
popf
adc
xchg
xor
pop
aam
rcr
les
leave
lds
cmp
testb
and
add
sbb
movsb
addr16
rcll
gs
pop
cld
jge
xchg
mov
pop
test
testb
jno
jbe
jl
aaa
mov
push
pop
stc
scas
xor
jb
pop
scas
and
push
loop,pn
test
push
repz
inc
movsl
push
cmpsb
outsb
jns
in
mov
enter
daa
cmp
xchg
push
jns
loope
mov
sub
test
cmp
cmp
push
test
and
sbb
mov
rolb
pop
cmc
push
xor
cmp
adc
push
js
and
pop
insl
cmp
lcall
xor
sub
lods
outsb
pop
add
adc
movsl
inc
adc
push
sbb
mov
adc
int
push
daa
mov
int
push
push
sub
jno
pop
and
lret
dec
shl
orl
jo
int
popa
test
test
fbstp
gs
daa
add
fs
js
rolb
inc
cmp
mov
ret
aaa
mov
and
and
adc
cmp
sub
or
adc
cmc
adc
jmp
outsl
jnp
fstl
inc
jmp
lock
or
mov
cmpsl
scas
cmpsb
lods
fs
mov
js
out
js
sub
fsubs
aad
pop
sti
sub
jmp
xor
mov
inc
or
flds
lock
xorl
loop
sbb
xor
call
pop
dec
arpl
pop
adc
aad
jo
pop
arpl
push
hlt
cs
inc
mov
imul
add
daa
out
je
cmc
ret
inc
sahf
movb
insb
lea
aam
call
and
outsb
mov
jae
subl
fldt
inc
pop
push
adc
inc
cltd
lds
add
and
addr16
inc
mov
jne
pop
and
add
roll
sbb
popa
fnstenv
loope
popa
cwtl
jmp
pushf
mov
ja
mov
daa
and
cld
and
adc
jecxz
pop
lock
sbb
xchg
mov
sub
push
aam
dec
jns
or
xchg
xor
insl
jle
mov
vaddsd
lods
outsb
xchg
popa
pop
push
add
movsb
jge
jb
mov
dec
mov
pop
ret
bound
add
or
cltd
hlt
imul
pop
adc
push
jb
es
lahf
pop
clc
push
xchg
mov
sbb
cmp
or
dec
pop
sar
lret
stos
push
or
xchg
movsb
ret
pop
push
xchg
cmpsl
mov
ja
dec
xor
fnstsw
sub
xor
pop
iret
mov
sub
je
arpl
inc
test
add
xchg
nop
dec
add
or
aaa
in
fwait
pop
outsl
add
lahf
dec
mov
add
in
lcall
push
push
jns
mov
in
lds
stc
mov
mov
fisttpll
stos
lods
fs
mov
mov
or
mov
out
es
in
and
pop
jne
movsl
adc
out
ljmp
jmp
and
stos
out
xchg
add
fsubr
pop
or
sbb
in
cmp
insb
mov
jnp
mov
mov
pusha
sbb
cltd
mov
pop
mov
and
jae
rorl
popf
call
sub
fcmove
loope
xchg
xorb
sbb
pop
imul
xchg
scas
xchg
xchg
adc
cmp
outsb
push
push
repnz
leave
addr16
push
hlt
add
xchg
inc
mov
cmp
mov
adc
loop
loope
and
pop
int3
xorb
addr16
imul
adc
sub
sub
cmp
dec
sub
jmp
jbe
dec
aam
mov
sub
pop
jbe
dec
xor
sub
jno
pop
mov
dec
call
push
sbb
int
adc
add
adcb
inc
aam
add
jno
inc
enter
daa
cmp
mov
rorb
sub
test
xchg
rcrb
add
mov
and
and
sbb
mov
pushl
roll
pop
js
cmpsb
mov
lcall
dec
fsubl
pop
outsb
sarb
adc
adcb
cmpsb
out
icebp
mov
das
and
mov
add
outsb
movsb
xchg
sub
cs
dec
cltd
sub
dec
pop
mov
jle
sarl
mov
icebp
sbb
addr16
jo
daa
test
xchg
cmpb
jg
out
jmp
inc
push
jmp
fs
inc
movlps
jmp
ss
fiaddl
incl
fsubrs
cmc
negl
sub
cli
push
lahf
mov
jmp
mov
or
inc
into
adc
cmc
fcomp
pop
xor
push
adc
es
adc
and
add
mov
fsubrs
and
mov
sub
dec
sbb
js
sub
fdivl
lods
fidivrl
loopne
mov
pop
cmp
data16
daa
push
push
shlb
outsb
or
imul
xlat
lock
fwait
pop
and
cmp
sub
cmp
jno
mov
pop
dec
cmp
aad
xor
nop
xlat
out
dec
push
sarl
mov
stc
imul
or
lea
adc
mov
add
dec
jbe
jae
lcall
inc
and
pop
inc
pop
xchg
mov
sub
inc
and
xchg
mulb
stos
cwtl
mov
mov
ret
icebp
sbb
dec
dec
ror
lahf
out
mov
je
lock
insb
das
repnz
fwait
shrb
add
aam
clc
aas
ret
fwait
mov
es
inc
insl
fisttpl
shl
cmpsl
cmp
adc
popa
push
popa
and
lea
xchg
lods
ret
sbb
ljmp
add
adc
test
cmp
xor
or
pop
pop
dec
xchg
lret
in
sbbb
push
ja
popa
insb
fs
jl
jecxz
cmc
adc
cmp
outsb
jle
push
jne
dec
push
lret
or
ja
mov
sub
xchg
test
dec
sbb
dec
negb
inc
leave
mov
or
sbb
fwait
inc
nop
mov
add
push
popf
leave
dec
lods
pop
bound
and
sbb
xchg
dec
or
push
xchg
fcomps
lret
xor
adc
mov
out
leave
mov
pop
dec
dec
xchg
jne
mov
mov
dec
scas
out
leave
out
or
ja
cld
xchg
in
rcl
sbbl
out
cs
or
iret
stos
pushf
nop
lods
and
mov
jle
xor
out
mov
inc
jecxz
jno
pop
pop
pop
ret
fistps
daa
pop
inc
je
inc
jae
aas
std
push
loopne
popf
vmptrld
push
cmp
sub
jge
push
xchg
xlat
pop
int
pop
sub
sar
inc
scas
ljmp
adc
test
int
es
pop
hlt
dec
pop
outsb
arpl
jl
mov
inc
or
push
popa
adc
jmp
adc
and
iret
ss
int3
imul
pop
xor
loopne
or
arpl
pop
mov
xchg
and
inc
movsb
jge
pop
push
cmp
icebp
jbe
std
outsb
jge
fildll
aaa
or
divl
arpl
jl
mov
cmp
pop
mov
gs
xor
scas
loope
push
aam
mov
push
add
inc
arpl
cmp
pop
mov
outsb
daa
cmp
push
faddl
xor
xor
ds
pop
mov
sbb
jge
cmp
lahf
icebp
pop
stos
orb
sbb
xlat
mov
lods
xchg
in
pop
cmp
xchg
js
mov
pop
lcall
mov
sub
lds
adc
pop
icebp
jl
add
jns
mov
mov
fs
and
add
sub
xor
pop
and
dec
lret
out
adc
dec
mov
mov
sahf
adc
bound
xchg
sbb
jg
cs
aad
mov
xchg
mov
out
adc
inc
ss
lods
sbb
es
ficompl
xchg
xor
cmp
cmp
sbb
xchg
lods
into
divl
xor
mov
outsl
cmp
imul
add
add
add
sbb
push
mov
stos
lods
xor
mov
dec
mov
jmp
pop
pop
mov
fcmovu
hlt
insl
and
jns
pop
repz
xchg
cmpsl
outsl
sbb
cmpsb
or
pop
xlat
jg
adc
ret
test
cs
mov
push
nop
mov
push
dec
jge
into
jb
fs
dec
sbb
je
push
pop
jecxz
fsubrs
mull
and
mov
mov
popa
cmpsb
dec
fcmovne
mov
pop
arpl
inc
cmpsl
xor
movsl
notb
pop
adc
push
and
pop
dec
shl
cmpsb
xor
inc
mov
das
test
mov
and
mov
aad
sar
jns
test
adc
mov
lret
aad
fisubrs
sarl
mov
cmp
adc
ret
sub
ds
insl
dec
adc
dec
mov
xor
ljmp
aam
data16
cmpl
mov
stc
fcomps
add
pop
add
mov
loopne
test
mov
push
fwait
push
clc
inc
lahf
fisttpll
clc
xchg
mov
jp
in
adc
sub
stos
in
mov
push
mov
xchg
push
dec
imul
xor
pop
add
in
mov
cs
dec
xor
mov
jmp
insl
ss
iret
sub
in
mov
add
popa
sbb
insb
outsl
fldenv
stos
ss
adc
inc
push
xchg
xchg
ljmp
fadds
negl
fidivs
jp
jb
mov
adc
mov
lret
dec
imul
cld
mov
pushf
push
out
test
fcoml
outsb
loopne
xchg
mov
test
out
cmp
cmpsb
imul
lcall
stos
packsswb
insb
popa
scas
imul
out
jle
dec
jbe
inc
roll
or
int3
fucomip
cltd
outsb
ret
cld
pop
adc
push
inc
jg
push
jae
icebp
pop
push
mov
outsl
popf
ss
mov
jp
fidivl
mov
sub
pusha
imul
lock
dec
jb
push
fs
adc
pop
in
iret
sub
lock
xor
hlt
cltd
fldl
push
mov
stos
and
daa
push
inc
loopne
rorl
enter
cmp
push
ss
pop
popa
insl
arpl
lods
xchg
push
rolb
mov
and
out
cmp
sti
mov
or
push
mov
or
cld
jge
loop
sbb
fld
aaa
lret
cmp
nop
jl,pn
mov
or
add
popa
xor
addl
push
cmpsl
lea
push
lret
fwait
add
cmpsb
not
stc
in
aas
jecxz
enter
daa
cmp
push
fwait
nop
loope
sahf
stc
sub
mov
daa
ds
clc
sub
rol
aas
lahf
adc
sub
and
add
dec
out
xor
mov
pop
js
rcll
lret
mov
cwtl
out
fdivr
inc
test
fdivrl
outsb
xchg
adc
ss
subb
rcrl
push
mov
aad
xor
lahf
int
negb
pop
mov
jbe
shrl
mov
sahf
mov
inc
test
pop
js
scas
push
jg
jno
loop
int
stc
dec
punpcklbw
enter
stos
ss
ljmp
push
out
negl
mov
dec
cmp
dec
lea
add
cmp
mov
cmp
adc
adc
inc
adc
push
test
data16
inc
lods
sbb
sbb
out
jp
sub
out
frstor
push
daa
jg
cmp
repnz
fsubs
pop
jns
fnstcw
push
inc
inc
mov
fldcw
jne
les
xor
push
lods
sbb
loope
and
pop
mov
rcll
rclb
xor
jmp
int3
push
cs
mov
xchg
nop
movsl
dec
fcoml
jb
out
popf
dec
xchg
push
pop
je
incb
out
or
pop
jecxz
call
lahf
int3
xor
xor
dec
dec
mov
lods
pop
clc
fldl
cld
mov
aas
inc
jnp
mov
lcall
shll
and
imulb
cmpsl
dec
std
clc
fstpl
test
add
icebp
lods
je
cld
movsb
dec
ror
jge
nop
mov
andb
repz
mov
mov
outsb
rclb
lods
jmp
aam
push
push
ret
mov
jl
xor
andl
pop
pushf
popa
dec
out
lea
stos
fidivrs
cmpsl
out
mov
and
cmp
test
mov
repz
push
mov
xchg
iret
mov
xchg
dec
add
rorl
pop
shr
int3
stos
sarl
out
mov
xchg
jns
rclb
push
sbb
repz
or
cmpsb
pop
mov
xor
dec
test
movsl
rolb
add
inc
testl
fwait
movsb
push
int3
push
mov
mov
lods
add
inc
decl
xor
stos
jns
mov
in
jmp
mov
add
mov
mov
push
or
mov
pop
scas
mov
cmp
mov
rorb
jne
repnz
xchg
xchg
movsl
mov
std
xchg
adcl
mov
out
mov
xchg
xchg
lods
push
addr16
js
stos
sub
and
xor
insb
int3
adc
jnp
push
jle
pushf
inc
in
les
filds
and
ret
push
pop
inc
ss
mov
jae
out
push
dec
lret
pop
mov
mov
mov
mov
xchg
test
test
inc
mov
stos
mov
adc
mov
repnz
or
int3
cmp
hlt
in
jno
ja
xchg
inc
xchg
xchg
mov
push
pop
rcll
stc
cmp
std
pop
ror
xor
and
push
lahf
jg
jno
loop
bound
adc
and
enter
sbb
push
lods
jbe
les
sbb
mov
xchg
loope
jl
nop
stc
dec
xor
sbb
xor
fsubrp
or
jp
and
ret
mov
inc
inc
xorl
in
es
mov
mov
aaa
fdivrl
push
pmaxub
push
mov
sub
push
fidivrl
sahf
in
lcall
js
and
fwait
lahf
das
ljmp
xor
daa
cmp
insb
mov
sbbb
and
pop
imul
push
cmp
add
lret
out
in
outsb
jmp
arpl
rclb
out
out
ret
push
mov
mov
jmp
and
movsl
xor
lret
lahf
xor
mov
mov
lret
pop
roll
mov
scas
sbb
testl
pop
mov
ljmp
inc
dec
adc
lods
int3
ss
cmc
sbb
pushf
negl
add
out
pop
xor
je
gs
xchg
or
cs
mov
rcrl
neg
notl
adc
imul
add
mov
lods
add
xchg
mov
dec
jmp
sub
mov
in
xorl
adc
ret
je
cmpsb
pop
xchg
les
fldenv
movsb
les
cmp
sbb
sbb
xor
pop
cmp
push
sbbl
rclb
nop
push
cmpsb
cmpsb
jb
scas
out
or
fsub
jl
adc
lds
rol
mov
mov
enter
aaa
movsb
pusha
movsb
pop
mov
sub
jo
push
aas
jecxz
or
push
sub
lret
roll
jle
std
jge
movsl
cwtl
jmp
xor
pop
into
cmpsl
icebp
adc
cld
iret
mov
lret
in
pushf
lods
mov
mov
mov
mov
cltd
das
pushf
shl
adc
aas
jo
aam
cld
xchg
ret
dec
fidivs
insl
sbb
dec
mov
mov
ss
ljmp
mov
mov
call
adc
aas
outsl
push
add
loop
shl
mov
jb
scas
mov
sbb
push
jle
pop
fstpl
cmp
xchg
mov
mov
shll
scas
pop
jge
stos
ret
out
sbb
enter
inc
push
jp
psllq
dec
or
loop
xor
mov
cmpsb
xchg
add
jmp
jbe
pop
and
dec
iret
call
xor
mov
fwait
rorl
mov
aaa
lahf
mov
push
and
aas
bound
popa
jns
mov
xchg
xor
testb
inc
fwait
cmc
pop
jp
in
ja
xchg
jp
lods
jo
fld
iret
mov
test
out
dec
das
jle
jne
sub
ret
out
data16
fists
pop
adc
dec
xchg
sub
cld
lods
sub
nop
enter
cwtl
xchg
dec
jns
insb
aaa
dec
xor
inc
mov
aas
in
sbb
pusha
inc
pop
jo
es
mov
fcomip
or
xor
jae
and
popf
test
mov
clc
mov
ficoml
popf
loopne
enter
sahf
xchg
add
repnz
test
iret
ljmp
leave
inc
mov
sahf
arpl
sbb
ja
incb
orl
xchg
stos
adc
sub
pushf
pop
mov
mov
test
mov
dec
inc
or
lods
cmp
push
inc
xchg
fnsave
jge
xchg
movsl
sbb
pop
aaa
dec
fwait
jne
cmc
mov
jno
push
mov
dec
movsb
push
decl
enter
arpl
xorl
mov
push
dec
pop
shrl
icebp
and
push
push
cmpsb
std
add
in
or
jle
daa
fnsave
mov
popf
loope
cwtl
mov
jb
std
cmp
cltd
ds
or
movsl
xor
sbb
test
cmp
pop
leave
xor
or
pop
scas
cld
data16
ja
pop
test
xor
xchg
cmpsl
pop
fcoml
xchg
sub
test
adc
in
or
and
orl
and
inc
push
test
sub
lret
addr16
sahf
pushf
pop
lret
add
fsqrt
sub
or
sahf
cld
sub
and
push
jg
add
loop
pop
mov
mov
inc
daa
adc
xchg
ss
dec
cmp
push
xchg
call
cli
and
cmp
xor
or
jne
into
mov
sub
xor
hlt
pop
outsl
xchg
leave
adc
inc
imul
sbb
push
loopne
data16
lods
out
aad
or
mov
mov
in
xchg
or
cmp
popa
gs
leave
daa
loopne
sbb
xor
push
scas
fstps
dec
cld
repz
and
push
xor
xchg
mov
enter
lods
pushf
sbb
pusha
sti
cs
adc
testb
lcall
dec
jg
or
aad
int
or
cmpsb
loope
sub
mov
xor
add
popf
sub
jb
pop
std
mov
fistl
inc
pop
inc
add
inc
cmp
dec
inc
mov
xlat
aas
adcb
mov
fs
rcl
out
divb
mov
cwtl
cmpsb
sub
mov
std
mov
icebp
pop
pop
or
cli
fwait
pop
lret
pop
popa
cld
mov
and
outsb
push
stos
shlb
push
gs
sti
std
ret
xlat
push
fsubs
mov
paddd
xchg
and
jmp
out
jp
shrb
fcoms
and
push
mov
pop
pop
cmp
add
ffree
test
and
inc
roll
clc
inc
pop
gs
and
sbb
mov
xchg
pop
sub
push
xchg
pop
inc
arpl
mov
and
cltd
xlat
mov
jge
mov
and
jae
aaa
aas
popa
dec
imul
pop
xchg
notb
inc
and
jmp
mov
add
jb
ret
decl
add
jns
jmp
in
mov
in
mov
adc
ja
or
mov
push
sti
mov
pop
mov
adc
mov
mov
cld
int3
out
inc
scas
repnz
dec
mov
mov
sbb
ljmp
adc
sub
mov
addr16
cmp
stos
push
jecxz
insb
mov
in
jle
sbb
pusha
frstor
or
inc
cmp
ret
pop
pop
mov
or
stos
jae
sahf
jns
rolb
or
je
pop
push
aaa
lods
popf
fimull
add
jae
jno
lea
cltd
push
cmp
adcl
dec
cmpsb
addr16
cmp
mov
pop
jle
xchg
or
or
repnz
inc
pop
mov
jl
sub
ror
pop
scas
loopne
out
pop
ficoms
dec
fcmovnb
cwtl
orb
nopl
fs
pop
movsb
test
add
rcrb
jge
inc
in
add
test
pop
add
cmp
xchg
jno
out
loop
nop
mov
dec
adc
inc
xor
xchg
icebp
lds
and
fsts
inc
inc
lahf
clc
lret
dec
mov
enter
daa
xor
adc
loope
lret
ret
inc
xchg
cmp
fstl
ds
mov
and
and
sbb
loopne
xor
cltd
push
mov
lea
fisttpll
out
aam
push
push
push
jmp
push
sub
movsl
fists
cmp
popl
stos
sti
mov
xlat
bound
rol
push
cmp
cmc
int
sahf
leave
sub
xor
lret
xor
jo
push
mov
jno
sbb
lahf
ficomps
add
ljmp
repnz
jno
bound
or
lods
xlat
divl
inc
jle
cmp
adc
or
xor
daa
cmp
in
or
mov
subl
imulb
xor
xor
dec
cltd
adc
push
add
xchg
stos
add
adc
rcl
lods
into
testb
test
out
and
sub
sub
cli
in
push
mov
pop
rol
gs
xor
loopne
imul
jl
mov
les
aaa
xchg
xchg
mov
fs
xchg
mov
mov
ss
fistpll
adc
add
inc
cs
xchg
pop
cmpsl
mov
dec
stc
push
scas
jb
leave
jle
testb
and
jecxz
xor
sbb
lea
lret
xor
sbb
dec
mov
and
dec
or
add
call
mov
inc
cmpsb
lret
and
icebp
mov
mov
stc
pop
rcrl
xor
div
mov
popa
ljmp
sarl
xor
jo
and
jmp
mov
lea
mov
inc
sbbb
pop
rorb
pusha
xchg
aam
dec
push
ret
mov
or
aad
dec
cmpsl
jne
cmpsl
xor
test
pop
and
xchg
sarb
lods
adc
lds
inc
aad
and
icebp
adc
jge
jno
mov
jns
test
cmp
fucomp
jb
clc
orb
xchg
push
cli
sbb
xchg
inc
pop
rcll
stos
mov
fistps
xchg
dec
push
cwtl
push
mov
test
mov
pushl
in
or
xor
loop
mov
cmp
int
xor
xchg
dec
mov
sbb
mov
adc
jno
sbb
lea
cmp
imul
jns
jl
in
mov
in
mov
cmp
mov
lock
ja
rclb
mov
or
mov
mov
jne
ret
js
out
and
sti
xchg
push
push
sahf
jmp
in
jbe
sub
out
lock
or
xor
ja
rep
or
shlb
jle
inc
xchg
in
out
add
idivl
ret
js
in
sbb
inc
stos
push
ja
lds
push
xchg
mov
scas
jnp
push
jbe
mov
cld
xlat
and
push
mov
dec
scas
mov
mov
and
sbb
xor
arpl
and
push
fdivl
or
jae
add
stos
jno
add
jne
sbb
xchg
lds
clc
call
mov
jo
pop
cmp
or
xor
js
insl
int
adc
aam
sbb
call
sahf
jno
lods
loopne
mov
pop
mov
xor
out
xchg
cmp
repz
mov
push
notl
mov
fldt
enter
daa
xor
jecxz
cwtl
mov
loopne
dec
sbb
stos
cld
idivb
call
jl
aas
mov
subb
rolb
jno
fldcw
mov
or
fadd
pop
es
popa
lcall
pop
fsubrl
in
out
adc
lahf
shlb
xlat
push
mov
stc
jns
scas
pop
mov
inc
pop
push
cmp
mov
add
cmpsb
sub
pop
pushf
dec
pop
lret
pop
roll
dec
mov
popa
out
dec
testb
lret
sbb
jg
test
loop
mov
stos
fs
xor
loope
xchg
fmul
pop
notl
push
xor
mov
cmp
imul
into
data16
dec
cmc
andb
xor
pop
push
adc
xlat
subb
or
mov
mov
imul
add
mov
xchg
test
hlt
in
ret
sti
not
sar
jns
gs
add
inc
lret
hlt
hlt
cmp
mov
mov
repz
mov
sbb
int
or
adc
cmpsb
rclb
movsb
pushf
jae
mov
cs
insb
aad
test
nop
stc
jne
dec
pop
scas
mov
dec
insl
in
je
idivl
jno
sbb
pop
cli
les
fwait
sahf
insb
mov
mov
orl
or
pop
mov
mov
adc
aas
shlb
mov
jp
movsb
shrl
lods
divb
mov
hlt
cwtl
sbb
test
movsl
into
aad
hlt
fs
or
cld
push
cmp
lret
cmp
testl
pushf
sub
das
sub
int
pop
jl
sub
stos
aam
hlt
pop
ret
cmc
imul
sbbb
mov
add
rorl
lods
jge
cltd
mov
addr16
add
pushf
loop
add
movsb
test
sub
and
sysenter
or
mov
push
stc
sbb
aas
shrl
xor
stos
ja
out
inc
lret
add
nop
sub
movups
xor
je
or
mov
mov
cmp
adc
test
inc
push
fldt
pop
dec
test
mov
sub
push
leave
out
pusha
imul
int3
nop
mov
incl
xchg
jmp
in
push
aaa
xchg
and
hlt
mov
mov
stos
out
ja
sbb
scas
mov
loope
mov
cmc
aas
je
fdivrs
test
mov
dec
push
out
add
ljmp
stos
mov
cmpl
fldt
adcl
and
in
add
test
jle
push
xor
loop
filds
sbb
inc
mov
imul
or
popf
stc
inc
dec
mov
mov
mov
xchg
loope
insl
sbb
call
cli
scas
cmp
out
push
cwtl
aas
adc
ror
pop
add
jae
jecxz
test
jb
adc
arpl
push
pop
or
call
lods
stos
or
loopne
add
pusha
int3
in
js
pop
dec
fdivrs
gs
add
inc
mov
add
adc
sbb
jbe
roll
jp
in
aaa
test
cmp
mov
out
std
dec
icebp
inc
int
jno
push
xor
dec
dec
stos
scas
sbb
rcll
adc
lahf
loop
push
ret
inc
mov
sub
out
enter
daa
xor
js
or
fs
popf
jp
mov
jmp
ds
inc
xchg
movsl
inc
mov
and
addr16
lahf
stos
cs
cmpb
xor
call
mov
sub
dec
js
leavew
pop
gs
lcall
mov
push
push
mov
xchg
outsb
jne
cmp
jge
mov
mov
jnp
mov
fdivrl
mov
push
aas
fldcw
int
sub
dec
pop
sbb
xor
and
sub
adc
sahf
in
faddl
xor
ljmp
stc
fisttps
fs
adc
inc
ss
push
jp
nop
pop
mov
mov
mov
lcall
sub
adcb
dec
mov
mov
jae
repnz
jg
imul
inc
cmp
jb
lods
pushf
ds
push
sahf
out
js
sub
fidivrl
sbb
in
sub
out
mov
cmpsb
loopne
mov
inc
mov
xor
or
sti
inc
add
cmp
xchg
aam
push
shlb
or
lock
int
jmp
jnp
cs
mov
cmp
mov
push
dec
in
arpl
pushf
jecxz
cmc
pop
adc
call
sbb
pop
andl
push
jecxz
push
pop
xor
rcl
lods
inc
fsubl
mov
sub
inc
adc
mov
idivb
jae
sbb
mov
jge
mov
push
cld
jnp
mov
mov
fidivl
imul
cmpsl
das
or
or
sbb
adc
cmpsl
out
mov
test
es
iret
mov
dec
popf
out
mov
inc
stos
jle
mov
inc
fwait
mov
mov
mov
mov
jecxz
cltd
lods
popf
pop
test
sbb
js
fnsave
fsts
xchg
test
sbb
syscall
rol
fwait
iret
pop
sub
mov
out
cmpsb
stos
push
xchg
fsubl
mov
outsl
sub
or
mov
mov
inc
ret
fwait
aas
and
in
testb
addb
ja,pt
fwait
mov
ja
push
test
jmpw
dec
loope
xchg
sub
xchg
in
mov
dec
das
mov
data16
ja
in
push
jp
xchg
shll
decl
shll
sub
adc
out
loop
scas
xchg
les
jmp
jp
mov
dec
fimuls
sub
jl
sub
inc
iret
stos
rcll
insb
jecxz
mov
jle
jge
in
push
adc
loopne
fbld
cmp
pop
pop
nop
mov
ss
mov
push
sbb
sahf
popf
and
xor
hlt
mov
sub
je
iret
imul
scas
lahf
push
jae
push
or
adc
insl
iret
shlw
dec
enter
dec
hlt
pop
iret
sub
mov
inc
mov
inc
call
inc
fisubrl
or
cmp
int3
fcomps
aas
fidivrs
in
lds
push
shr
enter
xchg
mov
mov
push
gs
aad
fwait
mov
lea
xor
inc
dec
cmp
dec
mov
lret
xchg
push
jl
and
push
push
jnp
xor
movsl
adc
scas
cli
test
cmc
test
lea
cmpsb
or
lret
in
test
dec
out
xor
js
jle
lret
cmp
sub
inc
add
or
xor
jne
push
lahf
lret
adc
adc
dec
int
add
push
xor
clc
jmp
mov
js
mov
pop
movsb
aad
lcall
mov
incb
sub
outsb
fcoms
adc
pop
inc
imul
popf
push
loop
push
imul
inc
mov
int
dec
mov
and
fiaddl
lcall
shll
inc
sbb
mov
test
sti
aad
push
jecxz
jg
pop
lret
ljmp
dec
jp
adc
sbb
mov
notl
inc
stc
cli
in
clc
arpl
mov
lock
imul
adc
mov
adc
add
adc
ret
nop
inc
std
dec
lock
stc
lea
adc
sub
imul
imul
les
add
pop
xor
mov
fnstenv
xchg
scas
xor
scas
dec
xchg
cld
and
sbb
inc
fadds
mov
in
pushf
leave
xor
jmp
mov
cs
jp
aad
imul
push
je
jb
ja
dec
pop
add
je
in
aad
dec
mov
cmp
and
push
cltd
pop
decb
mov
pushf
or
adc
pop
sarl
inc
pop
cmc
leave
inc
imull
inc
mov
in
mov
nop
bound
idivb
fstps
and
sub
mov
mov
cmpsb
sub
lret
pop
sbb
mov
adc
loop
ljmp
dec
pop
rolb
sbb
sub
push
cmp
jb
rol
leave
frstor
lret
sub
insl
popf
orb
mov
ljmp
shrl
jmp
lods
pop
ds
ret
pop
ficompl
inc
cltd
jecxz
sub
in
push
dec
inc
fstpl
clc
xor
dec
sbb
xchg
out
sbb
pop
aam
or
xchg
and
sub
add
dec
xor
loopne
or
in
xor
movsl
mov
inc
sub
add
test
mov
fldcw
mov
and
or
stc
dec
fwait
mov
pop
flds
fsubrp
in
inc
sub
bound
dec
jns
push
test
adc
lds
mov
aas
pop
and
jno
pop
or
into
mov
roll
cmpsl
dec
sahf
das
push
jne
push
cmp
mov
lret
out
shrl
jmp
inc
mov
xor
mov
loop
imull
in
xchg
hlt
xor
mov
sar
jnp
xor
xchg
in
sahf
push
pusha
dec
repz
ffreep
cwtl
jl
mov
xchg
roll
int3
fimull
push
fisubs
popf
inc
call
mov
ficoml
mov
sbb
mov
and
add
sbb
adc
daa
jmp
leave
xchg
shrb
arpl
sbb
jl
repz
pop
mov
or
cmp
int3
ret
xchg
icebp
pop
stos
clc
sbb
and
jle
fwait
dec
xchg
rolb
and
cmp
movsb
aad
out
mov
or
negl
lock
add
sbb
mov
lahf
dec
iret
out
xchg
aaa
push
xor
add
cmp
insb
in
test
pop
add
xsha1
cmpsb
mov
mov
enter
daa
xor
xchg
loope
jmp
sub
xchg
push
cmp
fistpll
push
push
ficompl
jecxz
test
jg
lods
add
inc
xchg
xor
and
scas
push
fstpl
cld
xlat
js
jo,pt
jecxz
fcomps
inc
inc
jg
test
int
outsb
cmp
lahf
adc
xor
es
std
cmpl
mov
dec
add
cmc
daa
and
inc
stos
dec
int
dec
sub
mov
lret
clc
ror
movsb
mov
xchg
lods
sahf
sub
sub
popf
sub
imul
loop
push
out
dec
inc
jle
fcomps
mov
ss
cmp
xlat
jl
rcr
je
and
xor
addr16
icebp
sub
or
lods
cmc
xlat
adc
outsl
xor
adc
repnz
adc
shlb
data16
mov
hlt
push
out
loopne
sub
push
mov
add
out
out
jbe
mov
pop
push
dec
cld
inc
enter
lods
xchg
aad
rcr
fcomi
cltd
pop
xchg
fistpl
cmp
lret
xlat
rcr
push
pop
outsl
sub
fistps
mov
cs
pmullw
call
dec
jne
push
jb
outsl
or
mov
dec
in
jecxz
leave
cmp
and
mov
call
sbb
dec
mov
fimuls
pop
fildl
pop
je
cld
inc
fistpll
adc
cs
popf
mov
repnz
scas
mov
sbb
mov
idiv
or
push
dec
test
inc
mov
lea
cld
shll
lret
xchg
push
mov
mov
lods
test
rcl
mov
nop
aam
loope
ret
mov
clc
movsl
insl
test
cs
xchg
mov
pop
ljmp
out
lods
mov
das
addr16
fdivrs
mov
stc
jns
add
and
push
addb
test
fldl
or
jl
push
shll
leave
pop
jg
aam
pop
jp
insb
inc
notb
and
push
cmp
jmp
xor
pop
mov
cld
mov
fs
imul
xchg
lcall
dec
in
or
dec
cmp
std
push
dec
add
stc
push
sbb
fs
bound
daa
mov
xchg
pminub
lock
xor
pop
ja
sbb
jp
cmp
mov
inc
mov
mov
mov
jne
movsl
adc
out
mov
mov
jmp
adc
pusha
andl
out
out
sub
jb
xor
sub
stos
cmpsl
inc
lret
and
adc
insb
mov
xor
stc
and
jns
cwtl
pusha
in
aaa
fnstsw
cmp
ret
addr16
enter
xlat
scas
adc
adc
mov
push
mov
push
jb
cld
fcmove
ss
xchg
out
inc
sbb
pop
mov
scas
gs
push
pushf
push
lea
clc
push
arpl
and
adc
insb
mov
hlt
icebp
mov
push
inc
cmpsl
test
ljmp
sub
or
pop
addr16
scas
pop
movsl
pop
fldcw
cmpsl
lds
xchg
pop
push
cmpsl
mov
mov
pop
pop
movsb
pusha
adc
jbe
sar
cmp
dec
sbb
mov
cmp
push
pushl
pop
cmc
jl
lea
ds
xor
pop
in
scas
mov
pushf
lock
and
cmp
popa
sbb
packssdw
enter
daa
xor
jmp
clc
out
sub
mov
cmp
jae
bound
stos
movsl
pop
out
mov
lahf
or
divb
sbb
push
xor
lret
cwtl
fildl
js
mov
and
push
pushf
xor
sub
outsb
sahf
in
adc
push
pop
movsb
pop
insl
xchg
mov
cmp
mov
fdivs
cmpsl
jge
dec
inc
sub
pushf
xor
sbb
cmc
pop
cwtl
fpatan
lret
popf
shll
mov
sti
fstpl
and
test
mov
cmp
add
mov
add
loope
arpl
and
aaa
push
mov
fdivrs
notb
cli
push
push
in
dec
xor
cmp
insb
or
addr16
bnd
fdiv
sahf
shr
xor
xchg
lret
pop
pop
adc
imul
xor
scas
adc
lods
push
pop
push
out
mov
out
sub
or
outsb
lret
mov
push
decb
sahf
andl
adc
pop
jo
sub
push
fs
mov
ret
repz
fidivl
add
cmp
mov
out
adc
addb
jnp
cs
add
gs
dec
outsl
jb
lcall
xchg
xor
sbb
xchg
icebp
lea
mulb
xchg
mov
mov
sbb
dec
movsb
xor
jo
out
pop
pop
testb
pushf
inc
sub
xor
test
mov
cmpsb
mov
fdivp
inc
adc
std
push
scas
stc
cwtl
or
mov
mov
shl
jnp
cld
cld
insb
dec
lret
cmc
setp
jo
lock
int3
shrb
outsb
mov
or
movsb
ret
xor
xor
sarl
push
insl
imul
mov
das
push
lcall
enter
cli
xchg
mov
repz
and
clc
dec
xor
sbb
add
pop
cltd
push
and
test
test
aad
stos
and
xchg
inc
ljmp
cmp
pop
sub
push
stos
dec
mov
out
iret
add
push
cld
bnd
sbb
xor
subb
loopne
xchg
and
test
and
xchg
mov
cmp
inc
repnz
js
fwait
sbb
mov
mov
dec
movl
add
mov
jns
jmp
in
mov
mov
push
sahf
mov
xchg
mov
ja
je
jp
pop
adc
cmpsl
inc
clc
mov
out
inc
jne
cwtl
lds
jg
popa
xchg
cmp
outsl
and
mov
out
add
stos
or
ret
addr16
sbb
and
push
lcall
repz
jne
in
pop
pop
pusha
jg
mov
jmp
push
ret
xor
decl
mov
jae
and
popf
popf
xchg
sbb
push
rcll
mov
xchg
cmp
xlat
test
scas
enter
jecxz
das
adc
jns
iret
addl
repnz
and
fsubl
mov
testl
push
mov
add
cld
sbb
sub
fisubrs
lcall
ret
pop
mov
dec
pop
xchg
cmp
test
jbe
incb
sbb
jne
xorl
xchg
jno
js
jl
add
push
std
and
xor
mov
out
scas
xchg
or
push
adc
fcoms
jle
stc
fcmovnbe
cmpsb
xchg
addr16
pop
addr16
enter
daa
das
push
dec
push
cli
push
loope
xacquire
mov
cmp
adc
test
movsl
fdivs
lahf
daa
mov
orb
sbb
in
inc
sub
test
xor
push
mov
adcl
or
push
repz
pop
fdivr
push
push
sub
mov
adc
jmp
pop
inc
mov
fimuls
out
adc
push
dec
dec
fmul
add
sub
xchg
ret
jecxz
pop
xchg
sar
or
mov
stos
mov
andb
gs
mov
stc
mov
push
mov
xchg
lock
je
iret
notl
iret
cli
xchg
cmp
outsl
out
jmp
pop
in
divl
outsl
out
out
int
daa
sub
sbb
ficoml
call
xor
and
cmp
mov
cmpsl
or
push
pop
cld
sub
mov
push
in
fnstcw
mov
gs
in
dec
fldcw
inc
out
pop
jg
sbb
ljmp
arpl
cmp
and
aam
aad
jo
jmp
arpl
jmp
add
jp,pn
cmpsb
aad
mov
nop
inc
xchg
sub
mov
sti
dec
rolb
jecxz
lods
icebp
sub
js
std
sub
xchg
mov
mov
addl
scas
dec
pop
mov
mov
inc
dec
dec
push
aas
fcmovnu
stos
mov
or
adc
mov
jne
test
clc
cwtl
ret
cmpb
outsl
pop
icebp
cmp
cld
daa
dec
pop
lret
xor
aaa
mov
xlat
das
xchg
cmp
testl
pushf
es
icebp
inc
insl
push
xor
dec
mov
fsubl
adc
fsubl
sub
adc
mov
out
push
mov
aaa
dec
lahf
add
xor
mov
add
xchg
push
fst
push
imul
sbb
sbb
pop
sbb
push
popa
mov
aad
or
cmp
out
xor
push
push
xlat
loope
por
push
xor
mov
or
ss
sbb
xchg
dec
aaa
aad
test
lret
push
das
lret
pop
push
inc
inc
imul
fwait
dec
test
add
das
push
push
jmp
xchg
mov
in
jnp
xchg
lods
js
mov
call
and
sbb
push
outsl
jp
mov
mov
xor
mov
and
dec
inc
cmp
mov
out
pop
sbb
xchg
adc
jmp
cmpsb
bound
addl
sub
push
sub
stos
lea
and
mov
fistpll
js
jle
pop
fsub
xchg
adc
mov
mov
ja
jmp
inc
in
push
mov
jg
push
daa
push
negb
adc
or
cs
movsb
xchg
xchg
xor
and
imul
shll
loop
test
adc
and
sti
les
xchg
fsubl
lock
inc
lods
jns
or
dec
mov
inc
xchg
adc
test
std
int3
test
pop
aaa
addr16
or
xchg
xor
cmpl
fcomps
movsb
jbe
rcpps
scas
jge
clc
jecxz
and
or
inc
xor
cmp
or
xor
push
loopne
cltd
xor
adc
xchg
scas
jbe
outsb
push
in
sub
jb
aaa
push
mov
lcall
inc
js
enter
daa
jne,pn
push
ret
and
lret
cmp
enter
imul
loope
lahf
inc
push
xor
sbb
xchg
sbb
filds
mov
pusha
notl
arpl
mov
insl
addr16
dec
addb
cmc
sub
xchg
push
outsb
fs
lret
adc
sbb
mov
adc
jns
in
mov
lock
and
push
dec
int3
or
test
sub
aaa
cmpsl
pop
xchg
mov
push
rcll
pop
sbb
fwait
sahf
adc
mov
xor
jg
icebp
and
es
je
jns
push
adc
dec
or
sbb
pop
fsubrs
mov
testl
test
std
inc
mov
or
fs
mov
xor
enter
into
ret
cli
xlat
fldt
popf
xor
add
in
mov
push
outsb
pusha
lods
pop
mov
mov
sub
sub
inc
pop
fsubl
inc
jnp
sti
adc
call
mov
cmp
out
movsb
pop
scas
rcll
add
sbb
push
stc
or
repnz
add
push
push
imul
das
mov
arpl
or
adc
cwtl
pushf
jne
xchg
jmp
dec
mov
fstpl
aad
call
add
sub
mov
repnz
je
lds
cs
pop
lea
call
xchg
push
mov
pop
repnz
dec
jp
fcmovne
dec
rcrb
cmp
jl
arpl
mov
rcrb
and
xor
test
mov
cwtl
jle
push
mov
mov
je
adc
add
mov
dec
add
incb
lock
mov
sub
push
and
ret
dec
mov
xlat
sbb
dec
test
mov
popa
xor
lods
call
mov
in
push
push
mov
push
xor
push
test
loop
mov
jg
push
pop
icebp
inc
outsb
jbe
sbb
dec
ret
scas
push
shll
cmp
lods
stos
sub
out
xchg
push
mov
aas
lds
mov
jns
dec
lret
divl
xor
sub
xor
aas
xchg
mov
dec
push
orb
int3
test
or
aad
sbb
nop
push
inc
ds
jp
xchg
push
out
ret
add
dec
testb
leave
mov
jo
sub
popa
and
xchg
cld
sub
int
es
js
or
mov
hlt
mov
in
mov
pop
or
jg
jne
stos
push
out
cmp
inc
pop
jmp
jno
bound
xchg
mov
out
arpl
jo
in
sub
sbb
cli
mov
jnp
ret
bound
adc
pusha
mov
or
ret
mov
insl
out
dec
inc
clc
fdivl
sbb
lret
popf
jecxz
popa
mov
das
pop
jo
jmp
xor
inc
jecxz
add
ljmp
mov
sub
inc
jmp
pop
leave
jb
imul
push
push
arpl
mov
sbb
subb
insl
inc
push
in
xchg
ja
bound
jecxz
test
mov
pop
imul
cmpsl
lcall
jns
mov
jne
sarb
sbb
clc
movsb
add
push
lock
jge
lcall
mov
cmp
mov
cld
jl
cmpsl
dec
mov
push
ret
lods
pop
xor
insb
xor
scas
push
mov
push
mov
iret
push
test
add
popf
pop
cmpsb
cwtl
mov
xor
orl
jb
mov
je
sub
and
je
mov
movsl
jo
xor
jl
xchg
lahf
lea
and
pop
js
add
loopne
xor
jmp
jo
mov
aaa
fs
ret
fcoml
or
and
jge
jecxz
sbb
lahf
xchg
jge
jns
adc
lock
cli
mov
and
and
mov
push
int
cmp
pop
adc
cmp
sub
mov
sbb
roll
test
in
lods
jg
popa
pop
loop
out
fdivr
sub
andl
adc
out
ss
loopne
cmp
ljmp
cli
in
sub
cmp
ds
or
fadd
into
fwait
fwait
cmp
xor
repz
lcall
pop
push
cmpsb
adc
dec
add
data16
jne
push
jbe
mov
inc
dec
out
loopne
sub
jbe
in
scas
adc
sti
mov
mov
movsb
loopne
sahf
pop
pop
int
cmpsb
inc
adc
arpl
mov
std
into
mov
aad
loopne
lret
rcl
sbb
push
mov
into
sbb
cmp
xchg
cld
jne
and
shrb
divb
xchg
sbb
dec
icebp
movsl
mov
push
mov
scas
pop
xor
xchg
jecxz
mov
into
lret
pop
push
call
adc
xchg
scas
adc
mov
pop
add
inc
sti
sub
jle
cli
aas
sbb
inc
mov
ja
cmpsb
and
divb
add
testb
sub
add
add
fisubrs
mov
jmp
sub
inc
mov
xor
sbb
mov
shlb
cmp
aam
mov
ret
ficoms
es
mov
push
dec
jg
adc
negb
add
lods
push
out
dec
or
mov
hlt
mov
mov
jne
dec
add
push
insl
cltd
imulb
test
mov
mov
push
out
sbb
pop
frstor
insb
and
pop
pop
gs
incb
sbb
xchg
ror
sbb
pop
sub
call
out
clc
ljmp
lea
push
xor
mov
mov
push
add
dec
add
fxch
xchg
dec
dec
jl
inc
je
xchg
or
out
pushf
fwait
test
flds
jge
outsl
add
loopne
loopne
in
add
mov
in
pop
or
cld
insb
pop
mov
enter
mov
stc
mov
mov
lods
mov
dec
or
enter
push
push
out
sbb
pop
xchg
mov
mov
xchg
cmp
adc
sbb
sub
pop
lods
in
mov
jo
jae
out
das
repnz
insl
jnp
rorb
test
popa
in
out
pusha
push
jl
fistps
ret
leave
pop
movsb
push
and
add
cmp
xor
popf
or
nop
push
outsb
jbe
ficoml
xchg
sbb
cmp
imul
scas
icebp
jle
push
mov
pop
add
mov
mov
leave
jmp
xchg
and
sub
inc
mov
xchg
or
inc
lea
or
jmp
jp
dec
int3
pop
rcl
pop
xchg
das
ficoms
or
ds
mov
mov
mov
or
cmp
out
movsb
mov
push
aas
push
xchg
jbe
outsb
mov
sbb
mov
dec
jno
mov
mov
cli
cli
add
cmpsb
pusha
xorl
xor
les
subl
pusha
adc
push
dec
dec
popf
inc
cmpsb
jecxz
cmpsb
sbb
and
jl
inc
daa
sub
lcall
jmp
sub
xchg
sbb
ds
mov
movsl
ja
xchg
and
gs
lahf
test
xchg
addb
sbb
pop
sbb
push
xchg
mov
jge
dec
pop
xor
push
js
jns
pop
push
jno
lcall
inc
faddl
fwait
adc
outsb
sub
adc
jp
fisttpl
sub
fwait
lahf
mov
stos
fbld
inc
dec
xor
push
es
cmp
outsb
pop
xchg
cmpsl
pop
lret
sahf
sarl
jo
sarl
sahf
pop
sbb
test
cmp
jg
aad
loop
pop
jno
loopne
add
xor
jae
sahf
xchg
cmpl
lea
and
cmp
arpl
into
jle
in
cmc
mov
cmp
outsl
mov
adc
inc
pushf
adc
add
pop
gs
in
inc
decb
or
mov
sub
mov
in
sbb
outsb
loopne
xchg
add
gs
mov
in
and
mov
mov
sahf
mov
xchg
mov
mov
movsl
cmpsl
adc
or
jae
adc
push
mov
lret
push
xchg
jmp
xor
aad
jle
nop
rcll
jb
dec
mov
je
test
xor
sti
lea
dec
mov
add
xchg
inc
push
mov
push
dec
loope
sub
add
push
cmovne
xchg
push
aas
mov
add
shrb
and
push
shl
scas
push
testb
std
stos
call
lahf
mov
mov
mov
rcrb
test
lret
lret
mov
jns
xchg
mov
mov
mov
lock
leave
das
and
insb
shl
sub
int
aam
sti
out
ret
insl
inc
or
or
dec
jp
js
sub
in
ljmp
shrd
imul
sti
jle
mov
xchg
sbb
add
cltd
sub
cmp
cmp
push
filds
xlat
clc
xchg
mov
sbb
jae
shll
scas
popf
pop
aas
imul
jbe
xchg
int
out
push
push
ret
xlat
push
push
or
and
testb
inc
or
xchg
in
dec
insb
pop
popa
test
aas
dec
xchg
xchg
aad
inc
sbb
inc
or
iret
fadd
mov
add
xorb
jg
andl
data16
in
dec
adc
aas
pop
xchg
mov
subl
in
or
cmp
mov
insl
mov
dec
movsl
mov
movsl
adc
sti
movsl
cmp
stc
jb
xchg
pop
cli
mov
out
or
sub
pop
and
mov
mov
out
jnp
inc
les
jnp
mov
out
in
mov
pusha
jmp
leave
fistpll
xchg
mov
push
pop
fistpl
push
lds
jae
and
stos
popf
xor
xor
lods
xchg
mov
xchg
cltd
sbb
sbb
push
xor
inc
outsb
scas
push
pop
mov
jmp
data16
rcrl
repnz
lock
push
sub
inc
mov
mov
rcl
inc
push
and
add
daa
ja
inc
shlb
hlt
mov
and
cmpsb
jg
mov
fwait
adc
cmp
pushf
jle
mov
and
jnp
jge
adc
aaa
jge
and
lods
jnp
lods
mov
or
imul
xor
and
shrl
pop
aas
sub
sbb
daa
cmpsb
sahf
loope
in
cli
add
enter
daa
sub
mov
loope
xchg
or
and
rolb
movsl
jle
shll
mov
iret
lahf
mov
popf
and
leave
cmp
add
sub
xor
leave
ljmp
xchg
jp
xor
fstpl
dec
push
aas
fsubrl
cmp
idiv
adc
push
jno
aaa
inc
fwait
mov
fdivp
mov
dec
mov
xchg
push
push
add
int
or
jg
roll
adc
lret
imul
and
test
std
pop
xchg
test
je
orb
adc
fcomip
out
stc
xchg
mov
sbb
inc
adc
pushf
mov
cmp
pusha
jo
testl
xor
pop
mov
movsl
xchg
add
popa
out
xor
xor
xchg
sbb
push
mov
jae
into
imul
pop
xchg
jns
popf
data16
rep
aam
lret
mov
aaa
xor
or
sub
sbb
test
js
mov
fidivrs
mov
pop
lret
mov
fdecstp
push
push
les
sarl
push
push
pushf
sbb
loopne
dec
xlat
dec
push
mov
aaa
sti
adc
ret
cmp
jmp
lret
cmp
push
pop
std
aad
loopne
nop
lods
adc
jb
jg
dec
pushf
push
shlb
jecxz
movsl
pusha
aaa
and
lea
xchg
inc
adc
jp
push
sbbb
dec
dec
cmp
neg
pop
enter
dec
pushf
inc
or
in
inc
mov
mov
push
mov
jle
in
addr16
jge
shll
in
adc
push
icebp
push
cwtl
scas
pop
scas
mov
orl
mov
jno
cld
rorl
dec
lret
and
mov
cltd
mov
jg
lock
mov
sbb
sub
jg
aam
xchg
or
cld
insb
pop
es
push
mov
dec
jne
movsl
cmpsl
sub
ljmp
fldt
vmread
add
push
pop
mov
popf
add
sub
testb
pop
mov
pop
or
into
mov
xchg
jl
in
sbb
pop
pop
subl
xchg
out
mov
mov
push
inc
jne
packuswb
cld
xor
inc
enter
fdivs
push
fsubs
pop
mov
stc
test
cmp
dec
xor
inc
mov
mov
fwait
pop
bound
iret
push
jb
mov
add
stos
je
sub
add
jae
adc
fisttps
stc
mov
shrl
ds
xorb
mov
insb
sbb
mov
lret
xchg
mov
fcompl
sar
inc
jne
xor
out
fiaddl
call
xchg
shrb
adc
and
sub
push
xor
stos
pop
mov
sub
jnp
aaa
dec
jle
jbe
in
jmp
xchg
jo
ret
js
pop
adc
std
inc
sbb
jo
xor
adc
mov
in
xor
lock
or
mov
push
mov
test
inc
mov
adc
pop
cmpsl
iret
pop
fs
repnz
ljmp
mov
mov
cmp
inc
mov
jns
push
rolb
ljmp
and
int3
xor
add
xchg
es
lds
rol
sub
cs
push
cmp
mov
push
fnsave
pop
jbe
cld
and
sbb
pop
in
cmp
dec
jno
enter
mov
dec
fcomps
push
insb
mov
pop
jo
aaa
scas
repnz
mov
test
in
add
cmp
cmpsb
and
adc
enter
daa
sub
push
call
sbb
cld
sub
orl
movsl
test
and
lods
lahf
ret
subb
sbb
pop
add
dec
inc
xor
inc
insl
add
push
js
push
pop
pushf
outsl
push
lcall
sbb
push
insb
mov
outsb
lock
adc
xor
xchg
inc
shlb
sub
data16
and
add
pop
push
mov
push
inc
lret
int3
int3
pop
xchg
cmpsb
sahf
lret
int3
shr
sub
or
sbb
jp
sahf
mov
pop
inc
subb
fnstsw
enter
movl
adc
inc
mov
and
mov
fcomps
in
testl
push
out
pop
daa
fidivrl
sub
into
inc
pop
inc
cmc
dec
mov
outsl
dec
cmp
adc
dec
imul
popa
jbe
or
fisubl
sub
lods
mov
or
adc
adc
sub
lock
std
sti
int3
or
fsubrl
cmpsl
xchg
loopne
fsub
pop
sub
cmp
sub
cmp
inc
popf
in
xchg
adc
push
sbb
sbb
repz
mov
pop
push
scas
scas
adc
int
dec
daa
pop
imul
nop
xchg
jb
loop
dec
adc
dec
je
jecxz
jmp
lea
rcrl
xchg
ret
push
mov
xorl
xchg
fisttpl
cmp
inc
nop
and
iret
fadds
negb
mov
pushf
adc
roll
jmp
clc
fnstsw
mov
mov
repnz
sub
outsb
test
cld
decb
mov
mov
mov
lock
das
loop
cwtl
rcrb
aad
aam
test
mov
test
jecxz
add
sub
xor
sub
ljmp
int3
lods
stos
mov
pop
mov
or
sbb
lcall
add
aas
cltd
fwait
ja
test
sbb
mov
pop
xchg
push
gs
fstl
ret
mov
mov
or
pop
sub
or
and
xchg
pop
out
push
push
mov
shufps
xor
mov
xor
lods
out
cmp
ret
in
cmp
add
xchg
sbb
es
inc
cmp
outsl
fwait
ss
mov
add
mov
xlat
mov
mov
das
in
and
xchg
cmp
jp
ret
pop
stc
push
xchg
ja
outsl
into
jp
ss
mov
or
test
ret
mov
mov
jge
mov
test
mov
gs
jmp
popf
lods
movb
inc
js
das
sbb
or
xor
stos
int3
pop
xchg
je
inc
insb
cmpsb
test
jnp
xchg
sarl
pop
xchg
in
notb
fistpll
push
pop
dec
pop
loopne
and
movsb
jae
cmp
push
imul
mov
mov
sub
fisubrl
mov
adc
je
sbb
inc
push
lea
fmul
mov
addr16
leave
dec
jle
hlt
fisttps
inc
mov
and
mov
push
push
data16
inc
into
in
add
inc
hlt
int3
sbb
or
sbb
das
rcr
lret
mov
rorl
clc
dec
xchg
xchg
jbe
icebp
addr16
jmp
or
sti
lock
cmp
sbb
dec
inc
xor
push
dec
xor
jo
mov
scas
shll
cmp
add
push
test
mov
es
push
dec
mov
movsb
out
in
enter
insl
cmpsl
push
daa
sub
stos
push
xor
sub
in
call
ds
pusha
add
call
jno
cmpb
sbb
mov
xor
rcrb
in
js
shlb
lcall
dec
faddl
xchg
mov
fst
and
fidivrs
mov
aad
cmc
dec
gs
mov
jge
mov
iret
and
popl
pop
adc
int
addr16
sub
or
adc
lahf
fcomip
roll
sbb
in
sahf
inc
scas
xor
inc
pop
cltd
jg
dec
add
add
enter
out
jecxz
pusha
daa
xor
addr16
cmp
in
push
test
push
xor
jns
cmp
lret
sbbl
daa
adc
invd
xor
and
adc
inc
xchg
mov
adc
bndldx
xchg
ss
in
jbe
mov
ja
out
and
mov
pop
mov
sti
jnp
ds
decl
in
out
sbb
inc
pusha
xchg
and
shll
adc
xchg
xlat
sbb
sbb
push
pop
scas
xlat
lret
pop
pop
std
push
pushf
int3
sbb
or
int3
out
aad
into
xchg
nop
bound
dec
insl
scas
aam
fstpt
dec
mov
fwait
je
jbe
jecxz
mov
rorl
jae
pop
adc
cli
mov
add
adc
fstpt
sbb
mov
aas
xchg
and
mov
push
sub
adc
pop
fsubs
cwtl
and
lods
adc
inc
add
lret
incb
add
loope
add
test
shrb
xchg
sub
iret
rcl
xchg
movl
insl
mov
add
cmpsl
sub
dec
ljmp
push
lods
push
xchg
ret
mov
call
das
arpl
icebp
adc
add
ret
lock
std
mov
cmp
sub
test
xchg
cli
dec
mov
shrl
inc
adc
stos
aam
test
mov
stc
mov
rol
xor
push
pop
or
pop
imul
inc
iret
dec
mov
out
xchg
dec
dec
sbb
inc
shlb
insl
or
into
cmp
push
adc
sbb
roll
lcall
bound
adc
cmp
in
push
jno
xchg
mov
mov
es
addr16
jp
add
fdivrl
jmp
dec
cltd
adc
jne
sub
mov
adc
cwtl
push
cltd
xchg
add
stos
jmp
push
and
out
xchg
cmp
or
loopne
mov
aas
sub
adc
adc
jnp
scas
inc
jle
mov
inc
pusha
mov
fcmovnb
ret
sahf
pop
adcb
das
sub
push
mov
dec
mov
push
push
ljmp
inc
arpl
pop
scas
imul
mov
aam
pop
adc
movsb
fmulp
sbb
aaa
repnz
cwtl
leave
vpandn
dec
mov
ja
mov
scas
push
rorb
or
testl
pop
push
lock
jmp
movsl
shl
sti
mov
push
mov
mov
push
jnp
fwait
jbe
pop
pushf
jge
sub
sbb
or
jno
jle
jl
pop
mov
mov
rorb
xor
jo
dec
xchg
scas
mov
mov
stos
gs
jnp
test
movsl
pop
cmpsb
daa
fucomp
scas
xchg
sub
push
cvtps2pd
xor
dec
mov
cmp
and
jp,pt
out
xchg
cs
sbbl
lahf
add
orb
push
add
mov
xor
fcoms
pop
shl
in
js
stos
lret
jle
lcall
fsubrl
push
outsb
mov
cmp
out
adc
jns
mov
cld
psrlw
jl
ja
pusha
dec
xchg
int
insb
inc
sub
cmovno
nop
mov
lret
sbb
sbb
fimuls
les
out
loope
pop
pusha
insb
sbbb
jg
lret
loop
push
mov
fs
push
sahf
ss
imull
xchg
mov
testl
out
xor
ljmp
into
or
jle
call
add
adc
sub
adc
adc
add
pushw
lods
mov
mov
jne
out
cmp
sub
push
mov
in
insl
mov
and
dec
loopne
imul
jae
test
fwait
or
repz
mov
lcall
cmp
test
pop
mov
cwtl
sub
jmp
sub
cs
inc
push
nop
cmp
cmp
jb
inc
mov
add
pop
je
jecxz
sub
movb
into
jmp
arpl
xchg
push
andl
and
pop
das
repz
inc
add
in
mov
or
loopne
mov
or
std
inc
arpl
cwtl
loopne
leave
mov
pop
adc
sbb
push
cld
push
mov
insl
adcl
inc
lock
adc
mov
push
sub
pop
inc
ret
test
sahf
in
insl
mov
fs
ljmp
fisubrs
aad
mov
pop
xchg
mov
adc
mov
cwtl
inc
into
cltd
or
mov
pusha
lahf
push
jmp
stos
fucom
mov
iret
xchg
cmp
pop
sbb
outsb
sub
jg
cmc
pop
sbb
stos
ret
ljmp
jmp
cmc
rorl
test
leave
xor
xor
or
adc
xor
pop
push
mov
popa
xor
dec
or
cmp
iret
stos
or
movsb
xchg
inc
lret
or
cwtl
lahf
fwait
xchg
ror
push
mov
jg
add
pop
mov
sti
scas
mov
loop
sbb
and
xchg
add
mov
outsl
nop
fidivs
loop
jp
mov
jb
test
fsts
dec
jl
je
mov
mov
out
ja
jo
aad
mov
xchg
xor
shl
test
fisttpll
inc
int3
dec
xchg
stos
mov
cmpsl
and
cli
jno
adcb
in
hlt
jns
push
stc
insl
fcomip
mov
in
mov
les
adc
dec
fs
jl
sbbb
jmp
push
test
out
mov
int
add
jb
loopne
es
sbb
loop
stos
push
cmpsb
repnz
cld
leave
cmp
hlt
xchg
mov
filds
pop
adc
lods
leave
popa
inc
dec
mov
jns
insl
jmp
das
pop
orb
cmpsl
rclb
imul
les
inc
repnz
push
lret
jbe
cmp
jge
push
inc
sbb
andl
repnz
bnd
jb
dec
and
sub
xor
mov
pop
scas
adc
stos
test
inc
leave
lret
inc
jno
cmpsb
stos
fwait
adc
xchg
fisubrs
arpl
daa
daa
int3
shrl
pushf
loope
pop
sbb
dec
dec
cmp
or
lcall
lahf
pop
jl
andb
xor
dec
adc
dec
fs
test
in
pop
pop
dec
mov
mov
add
push
pop
insl
sub
xchg
xchg
rcrl
mov
out
mov
outsl
push
mov
cmp
mov
test
arpl
pop
int
push
push
sub
sbb
jae
shll
sbb
gs
jbe
cmpb
jg
push
lods
loop
je
stc
jae
inc
fs
insb
push
inc
ret
ss
icebp
xchg
cmp
dec
mov
aas
cli
push
into
pop
xor
mov
cmp
mov
or
xchg
into
in
push
push
cmc
popf
sub
pop
outsl
out
and
mov
xchg
adc
add
cmp
lods
jo
lds
push
fdivrs
sub
mov
xor
push
mov
mov
into
sti
pop
xchg
inc
xchg
repz
xchg
mov
scas
fsubs
xchg
pop
stc
popa
sbb
int3
cvtpi2ps
dec
xrelease
dec
xchg
adc
push
push
cs
cwtl
xor
ds
mov
dec
sub
sub
dec
js
inc
je
mov
and
inc
mov
call
push
ret
mov
cmp
mov
fistl
and
pop
sarb
inc
and
aas
shrl
jo
rorl
mov
shll
push
negb
sti
add
pop
out
mov
repz
cld
jg
fs
fadd
insb
mov
xlat
mov
sahf
xor
cmp
fwait
das
jg
and
adc
and
scas
scas
repz
dec
cmp
es
cmc
aad
mov
cli
dec
popa
pop
call
ljmp
fildll
dec
in
or
push
inc
test
das
and
add
dec
addl
xchg
aad
fisttpll
clc
mov
jecxz
sbb
test
pop
sub
and
dec
jnp
xchg
xor
push
scas
dec
lcall
cmp
or
add
std
push
xchg
dec
outsl
rolb
out
xchg
je
inc
pop
inc
incb
inc
fwait
ret
jle
push
pop
mov
add
pop
xchg
lcall
push
popa
jns
stos
or
xchg
and
fiaddl
mov
sub
outsl
ja
loop
jp
sar
dec
mov
mov
cld
jns
xorl
pop
xchg
test
jl
int3
loope
xchg
xor
cmp
and
test
inc
sub
xchg
and
cli
in
out
add
ss
in
mov
fists
insb
movsl
ret
xchg
pop
out
cmpsb
inc
inc
push
cwtl
jae
fisubs
aas
mov
jmp
fcmovnb
fcmovb
xchg
dec
ret
sbb
js
mov
scas
inc
std
rcll
jmp
adc
xchg
call
leave
mov
or
fbld
scas
arpl
inc
inc
vsqrtpd
daa
clc
mov
or
mov
push
pop
scas
call
lds
movsb
shrb
shlb
jp
imul
into
pop
in
push
sbb
leave
jbe
mov
stc
mov
mov
jno
ret
xchg
jl
pop
xor
push
clc
xchg
push
xor
jmp
add
push
jge
movsb
test
adc
stos
inc
add
sbb
sub
pavgb
pop
cs
daa
es
mul
fisubrs
dec
cmp
lret
mov
outsb
aad
ds
aam
mov
cmp
fmull
add
sbb
pcmpgtb
js
cmp
cwtl
pushf
push
push
add
faddl
decl
outsb
jl
xchg
adc
pushf
jns
adc
mov
xchg
in
mov
repnz
mov
mov
adc
data16
int
and
sub
mov
lretw
push
rorl
mov
push
outsb
sahf
sub
out
test
das
adcb
loop
adc
mov
pop
adc
xchg
xor
cmp
pop
orb
pop
push
repnz
push
pop
sub
mov
sbb
cmpsb
dec
or
int3
into
shr
adc
xor
icebp
push
adc
xchg
xlat
adc
adc
add
data16
sub
lods
push
out
mov
cli
push
sub
dec
dec
mov
pushf
pop
mov
mov
into
gs
pop
movsl
loopne
inc
cmp
mov
inc
cltd
jae
adcl
pop
fpatan
jle
xchg
and
phsubsw
xlat
xchg
cld
pop
and
mov
aas
mov
cmc
fimuls
test
decl
pusha
adc
aam
jl
out
lea
jecxz
aad
movb
lea
rol
lea
mov
out
dec
ror
adc
inc
loope
pop
jne
pop
inc
lods
pop
test
dec
idivb
jb
jae
inc
mov
js
fsubl
lea
mul
sbb
cwtl
cwtl
push
push
mov
mov
jmp
cld
stos
pop
popa
lret
dec
enter
mov
lock
int
das
pop
mov
xor
cmpsb
xchg
dec
aam
xchg
ret
movl
insl
jno
insl
dec
pop
out
cmpsl
and
and
lds
sub
push
inc
mov
mov
dec
cs
add
sbbb
adc
push
jno
and
clc
cmc
mov
rcrb
movsb
test
sub
pop
imull
lods
mov
mov
cmovb
shlb
leave
jl
or
arpl
xor
pop
lahf
mov
outsl
orb
jge
and
lret
dec
jg
repnz
xchg
inc
xchg
jmp
or
test
fwait
repnz
mov
add
and
xchg
cmp
sbb
or
jns
xlat
movsb
in
lods
xchg
je
xorb
mov
pop
in
mov
pop
jp
stos
addr16
jae
mov
pop
add
dec
inc
ficomps
jne
nop
hlt
mov
xor
out
xor
enter
mov
xchg
leave
add
orl
cmpsb
sub
cmp
xor
test
and
movsb
pop
insb
push
mov
lcall
adcb
ljmp
and
ficompl
or
out
push
push
add
lock
daa
adc
fidivrl
or
and
imul
scas
cmpsb
cmp
pop
adc
enter
out
repnz
fs
hlt
sub
xor
lret
xchg
inc
enter
push
stos
xchg
push
dec
and
add
mov
out
faddp
mov
vshufps
jb
mov
or
lret
inc
movsb
pop
adc
jb
add
jge
dec
or
mov
lret
imul
mov
lahf
jl
pop
mov
push
fcomi
sti
xor
inc
ja
scas
dec
sti
notl
ljmp
faddl
inc
popl
cmpsb
mov
or
fs
enter
daa
and
imul
sub
sti
mov
jecxz,pt
stos
movsl
test
cltd
and
lahf
pop
xchg
mov
jmp
sbb
fidivrl
add
loopne
xor
movsl
and
rcl
call
js
loope
pop
xlat
jno
lcall
adc
lods
jne
sub
sbb
shlb
cs
jno
mov
mov
lea
imul
addl
imul
loopne
mov
repnz
sahf
iret
enter
iret
and
scas
push
ss
outsb
xchg
loop
jmp
stc
loope
dec
fs
cmp
pushf
insb
divl
jae
lods
cmp
ret
test
movsb
mov
cmp
xchg
mov
into
mov
sub
mov
outsl
movsl
jmp
mov
xor
je
shrl
icebp
mov
mov
mov
xor
pop
xchg
sti
aaa
pop
sbb
gs
loopne
sarl
inc
lods
iret
aam
inc
mov
les
dec
repz
push
rclb
dec
jg
inc
adc
xlat
pop
fs
rcll
stos
pushf
js
scas
jmp
outsb
mov
pop
sbb
aad
pop
pop
nop
into
test
mov
daa
fistpll
ret
je,pt
pop
out
jecxz
adc
lea
mov
sahf
or
cmpsb
mov
mov
andl
cmpsl
mov
sub
inc
xor
inc
push
pop
in
adc
mov
das
hlt
test
rorl
aad
mulb
sbb
sti
cwtl
adc
mov
das
aaa
mov
mov
test
lret
mov
pop
scas
mov
test
lock
movsl
mov
sarb
pop
sbb
rcrl
ret
push
or
es
subb
mov
push
add
addr16
add
jg
mov
sub
lods
mov
insl
aas
push
cltd
scas
pop
js
cmp
mov
iretw
push
xor
cli
fstpl
add
xor
sbb
dec
in
roll
mov
out
adc
inc
xchg
mov
sub
mov
icebp
or
xor
push
frstor
push
push
dec
cmp
xor
sbb
sub
inc
sub
js
sbb
sbb
mov
add
add
xlat
leave
bound
cmpsl
jb
and
out
xchg
ret
orl
mov
mov
outsb
cmp
dec
ret
data16
cmp
and
iret
mov
out
adc
cmp
mov
sub
sbbl
aas
out
dec
jno
mov
ret
or
pushf
or
test
stos
or
out
xchg
sub
int
jle
mov
pusha
pusha
sub
sbb
push
or
ret
out
pop
lea
pop
inc
movsb
jae
popf
xor
popf
inc
push
mov
enterw
shll
xchg
cli
iret
mov
into
mov
inc
scas
or
push
lock
adc
dec
cwtl
test
leave
mov
repz
test
loope
mov
mov
inc
int3
sbb
add
cmc
cmc
int3
mov
and
fisubrs
jbe
jbe
push
shlb
mov
mov
lds
push
mov
push
jge
pop
sbb
fnsave
mov
mov
jno
cltd
jg
imul
push
mov
jle
jo
pop
lock
sub
imul
movsl
test
cmpsl
add
inc
push
test
cmpsb
xor
xor
dec
sbb
fisubl
and
mov
enter
or
mov
clc
adc
fwait
pop
icebp
ds
sub
movsl
scas
scas
or
out
adc
sbb
lds
dec
or
mov
mov
pusha
pop
insb
leave
js
sbb
lret
test
mov
jnp
fcompl
mov
outsb
inc
dec
mov
rclb
dec
shrb
stos
mov
das
popf
mov
mov
and
scas
pop
int
push
sub
test
add
shll
mov
mov
sahf
jb
iret
test
adc
sub
js
in
lahf
stc
cwtl
or
or
jmp
in
mov
mov
fdivrs
sahf
testl
cs
xchg
pop
out
or
lcall
push
inc
xor
test
movsb
adc
les
mov
cwtl
adc
pop
in
add
xor
popa
shrl
mov
scas
out
lret
lds
mov
jb
jno
jb
fdivr
out
popf
scas
mov
loopne
jae
pop
in
fadds
pop
mov
ja
movsb
les
mov
sbb
rclb
nop
fistpll
jge
mov
pop
xchg
adc
aam
jmp
bound
cs
jns
nop
test
xchg
add
dec
fstpl
jecxz
xchg
jge
dec
pop
jbe
push
or
mov
mov
addb
mov
roll
ljmp
mov
mov
mov
sub
mulb
xchg
loop
sahf
cwtl
int3
idivl
mov
js
adc
add
lret
sub
das
mov
psubusb
dec
xchg
jle
sbb
mov
mov
loopne
xchg
dec
leave
aam
add
es
mov
insl
aas
dec
inc
dec
push
mov
add
adc
lods
sub
inc
int3
mov
xor
cmp
mov
in
mov
in
popl
fwait
push
push
neg
and
jg
fdivrp
imul
xchg
xor
test
subps
mov
stos
jg
into
out
jae
dec
xchg
add
mov
mov
outsl
cltd
cmp
fildl
dec
test
mov
insl
jge
dec
movsb
stos
push
test
cmp
dec
fsubrs
inc
ret
and
or
or
push
inc
add
add
pop
addl
ja
pop
bound
insl
mov
in
popl
adc
lcall
mov
adc
stc
jne
rcrl
xchg
mov
in
lock
or
jne
jno
mov
add
repz
xchg
and
fucomip
mov
mov
subl
xor
or
mov
addr16
stos
jle
xor
shrb
es
mov
push
in
mov
movsb
fbstp
fld
dec
pop
jmp
xchg
mov
inc
pop
lea
jecxz
push
mov
dec
mov
movsl
add
fcmovu
fsub
xchg
push
or
sbb
and
pop
xchg
insb
lcall
pop
inc
js
mull
mov
out
hlt
rcrb
mov
xlat
nop
or
cwtl
sti
ret
inc
dec
xchg
cmp
cmc
dec
sahf
add
jmp
int3
popf
pop
aaa
pop
cmp
scas
fimuls
jne
std
std
ffreep
jle
pop
mov
xor
xchg
cmp
dec
movsb
outsl
mov
push
push
and
jge
aad
sbb
js
aaa
jne
push
cmp
mov
rorb
dec
rorb
mov
jo
dec
subl
lar
jb
mov
cmpsb
mov
pop
in
xor
test
daa
and
pop
push
mov
popf
sub
cli
int3
cmp
pop
ds
jns
mov
shll
mov
mov
in
movsl
sbb
push
pop
sbb
xchg
cmp
js
ljmp
insb
fwait
push
faddl
fildll
sub
ret
jb
adc
sub
int
mov
inc
inc
mov
xor
and
inc
or
outsl
sub
int
jecxz
sub
mov
lret
fcmovb
push
cmpsl
mov
lods
sbb
lea
mov
cmpsb
jg
cltd
cmp
ja
daa
stc
dec
aam
fs
daa
adc
daa
dec
ss
sarb
inc
das
testl
xor
pop
mov
shl
or
pop
push
cmc
mov
inc
pop
outsl
arpl
mov
imul
pop
shlb
stos
and
or
pop
mov
js
sub
addl
fnstsw
sti
xchg
inc
xor
fadds
cmp
add
sub
scas
or
imul
xchg
imul
cmp
aam
pop
cmp
clc
pushf
into
cmpsl
push
rcrb
xchg
push
push
aad
cli
and
cmpsl
xor
movsb
dec
push
sbb
je
in
or
dec
xor
call
or
dec
adcl
pop
pop
pop
imul
inc
ljmp
dec
clc
inc
mov
popf
das
adc
shrl
ja
std
mov
cwtl
xchg
pop
mov
dec
sbb
sub
lret
cwtl
insl
xor
mov
dec
lock
xchg
cs
sti
mov
rcrb
fisubrl
mov
leave
aam
cmp
ret
je
jl
js
loope
es
mov
jmp
ljmp
xor
mov
mov
sbb
xlat
pusha
push
pop
stos
insl
dec
add
xchg
xlat
cltd
sbb
push
test
dec
mov
adc
push
mov
dec
mov
xchg
je
cmp
inc
mov
in
pop
fnstcw
dec
out
inc
mov
push
sbb
pop
pop
aad
ret
or
and
dec
mov
xchg
adc
push
enter
jb
dec
mov
xchg
inc
pop
hlt
lock
cmc
inc
fwait
jg
xlat
push
out
stos
add
jae
dec
call
pop
leave
vcvtps2udq
xor
push
xchg
popa
adcb
lcall
pop
push
mov
add
movsl
cmpxchg
shl
mov
dec
jmp
mov
popf
js
mov
add
lods
xchg
hlt
xor
jmp
sub
cmpl
mov
sub
sub
clc
andb
icebp
pop
cwtl
and
pushf
cld
jnp
je
jle
outsl
test
pusha
pop
push
fists
mov
cltd
inc
jno
dec
jae
insl
mov
popf
nop
test
mov
in
lret
ficoml
insb
mov
and
push
imul
scas
iret
mov
push
jle
xor
repnz
push
pop
sti
repnz
or
arpl
imul
adc
inc
lret
or
mov
add
ja
mov
pop
imul
fisubrs
scas
sub
cltd
jns
mov
mov
stc
movsb
xchg
push
clc
jbe
push
cmp
jo
sbb
out
aaa
xor
das
cmp
xor
jl
inc
mov
push
test
shll
push
pop
mov
push
leave
std
in
push
cmpsb
pop
push
cmp
inc
movsb
cmpsb
cmp
in
sbb
sbb
and
ja
scas
repz
loope
dec
ja
into
mov
cmp
adc
ds
pop
xchg
and
pop
cmp
add
sbb
sub
xor
jb
sbb
mov
js
dec
enter
dec
lcall
mov
scas
shrl
data16
leave
outsb
or
rorb
mov
mov
test
imul
mov
decl
jge
push
jb
inc
int
inc
fsubrs
sarb
cmpsl
lret
mov
mov
les
xchg
add
test
in
jg
xor
inc
stc
push
aas
repz
loop
adc
mov
ds
pop
xor
add
adc
cmp
bound
mov
pop
push
gs
andb
or
lock
inc
jmp
ja
movsb
lock
adc
decl
sbbb
jp
mov
mov
stos
repz
repz
dec
xor
sti
inc
pop
sar
hlt
xor
fsub
sub
sahf
pop
and
testb
pop
fxam
daa
sub
jbe
xor
xchg
sub
aad
and
xor
repz
xlat
adc
pop
in
mov
or
xchg
sbb
addl
and
fisubl
and
dec
lret
cmp
je
shrb
pop
cs
push
jle
lea
xchg
pop
call
mov
mov
inc
das
subl
or
fildl
mov
add
lret
inc
enter
cmpsl
add
out
aam
mov
push
ret
xchg
and
sbb
in
sarb
std
xor
cwtl
inc
xlat
xorb
rcr
icebp
outsl
daa
cld
push
out
ror
pop
subb
loop
mov
dec
mov
das
fidivrl
sub
aam
lret
add
add
es
jno
insl
or
fcmovb
cmpsl
and
ljmp
adc
or
insb
and
jb
cs
lret
add
fiaddl
cltd
push
leave
sub
shll
jge
push
adc
clc
loope
pusha
xchg
mov
dec
sbb
jle
rorl
lcall
cmp
xchg
call
dec
movsbl
test
leave
mov
xor
inc
mov
xchg
push
dec
jb
xor
leave
les
inc
icebp
jmp
mov
mov
sbb
mov
sti
bound
jns
icebp
and
test
xchg
mov
je
cmp
sbb
ja
popf
int3
jp
pusha
bound
add
sbb
in
mov
fs
mov
pop
xchg
out
mov
sbb
lahf
push
sbb
mov
imul
mov
sbb
fs
xchg
and
pop
jnp
out
dec
jle
mov
jo
stc
mov
add
dec
cltd
pop
add
loope
jl
xchg
jae
cmp
push
jae
popf
mov
or
push
and
fiaddl
cmpsl
xchg
push
sub
jb
imul
ss
xor
jecxz
lds
adc
mov
jno
dec
mov
push
hlt
push
and
arpl
inc
aam
lods
or
mov
or
lds
add
inc
int3
jae
sbb
cmp
ficoms
dec
lds
lds
mov
pop
arpl
movsb
test
push
movsb
leave
jb
push
in
dec
jge
out
sbb
es
cmp
arpl
push
int
mov
clc
or
mov
push
scas
leave
rcll
rcl
std
in
push
or
add
jae
cmpsb
mov
pusha
sbb
inc
lahf
sbb
and
call
loope
push
scas
sub
dec
repnz
loope
movsl
les
stos
lahf
fsqrt
addb
push
add
inc
fnstenv
ss
fisubrs
sti
pop
loope
adc
inc
lcall
and
push
mov
pop
fcompl
sub
push
fcompl
outsb
imul
shl
jne
in
pop
push
mov
popa
aam
test
mov
and
and
clc
dec
push
jne
ror
andb
dec
mov
pop
or
cmp
aaa
aas
in
cmp
mov
dec
mov
sbb
out
sahf
pop
and
or
incl
loop
dec
xor
mov
ret
pop
adc
icebp
inc
ss
dec
cmp
scas
add
ret
cli
push
rcr
call
movsb
sbb
sti
sub
into
aas
ret
inc
pop
xor
lahf
outsl
and
repnz
and
adc
dec
adc
pavgw
std
cltd
mov
mov
pop
sub
jle
mov
mov
sti
repz
pop
stc
aas
gs
loopnew
int
pop
inc
imul
sbb
mov
subl
inc
xchg
out
jno
sbb
cs
cmp
ret
pop
lahf
mov
pushf
and
sbb
mov
mov
in
in
call
dec
cmpsb
dec
sbbb
test
cld
or
push
ds
lea
sub
mov
ret
dec
imul
inc
dec
adc
add
lea
jbe
or
sub
rcrb
imulb
mov
pop
cwtl
std
and
mov
repnz
jmp
jle
jbe
lea
sbb
les
mov
aaa
or
jns
jge
in
lods
icebp
ret
xchg
mov
jle
js
hlt
addr16
dec
inc
dec
cmpsl
and
popf
ljmp
ljmp
sbb
add
shlb
or
stos
dec
add
xor
inc
mov
sarb
inc
cld
push
shll
repnz
sbb
push
das
lret
jae
dec
sub
pushf
xchg
fcmove
jg
rcr
xor
xor
push
or
adc
xchg
mov
in
scas
jle
jbe
pop
dec
fstps
mov
dec
insb
fisttps
arpl
or
dec
aaa
frstor
sbb
test
inc
in
out
lock
push
mov
dec
xor
mov
cwtl
mov
mov
movhps
mov
jp
iret
addr16
sahf
test
test
mov
dec
jne
mov
mov
dec
dec
out
nop
cmp
xchg
push
mov
adcl
out
ds
dec
sbb
and
or
stos
xlat
or
fisubrl
cmc
jnp
sub
jle
div
in
cmp
xchg
and
jl
ret
mov
inc
xchg
aas
push
rorl
ljmp
sar
xor
push
cltd
mov
pop
xlat
imul
in
scas
xchg
lret
ret
repz
adc
pop
pop
repnz
repz
jge
sahf
hlt
mov
leave
jmp
xlat
jmp
cmpsl
push
enter
into
mov
cmpsl
mov
pop
lods
dec
pop
leave
xor
fdivp
push
test
xchg
ds
iret
aaa
adc
pop
inc
lods
and
outsl
jae
addr16
movsb
adc
stc
jbe
cmc
xlat
jge
push
push
sbb
pop
aaa
mov
mov
push
mov
jno
hlt
sbb
pop
xor
dec
sbb
jge
enter
lock
test
jo
outsl
mov
sbb
sarl
in
pop
ljmp
out
ror
inc
fcomps
push
jle
loope
js
sub
scas
add
ds
pop
fbld
pop
dec
dec
lahf
clc
popf
andb
jle
sub
ljmp
mov
out
or
pop
adc
lcall
hlt
faddl
push
sub
outsb
into
lcall
mov
inc
arpl
sti
pop
shll
mov
push
js
fcmove
or
adc
enter
mov
test
sarl
lret
lea
xchg
add
xorb
sarl
js
loop
and
je
loopne
adc
adc
cmp
cmp
imul
cli
orl
cmp
mov
mov
and
cmc
push
jl
ret
outsl
add
sub
test
sbb
add
aas
lods
rcll
out
cltd
add
xchg
or
in
push
adc
sti
mov
mov
gs
aaa
mov
pop
pusha
iret
pop
inc
or
pop
les
dec
xchg
mov
dec
sbb
imul
rcll
add
pushf
iret
sbb
lahf
fiaddl
inc
mov
aad
push
nop
adc
cs
dec
mov
xchg
cmp
push
cmp
jb
lea
in
into
call
xchg
mov
sbbw
push
and
or
lock
inc
inc
sbb
rcll
mov
daa
mov
push
fisubrl
lcall
std
jle
pop
cwtl
mov
insl
push
mov
aam
mov
lods
scas
pop
lret
in
jg
cmp
jl
loopne
xchg
lock
rorb
rcr
dec
fwait
sub
adc
mov
fistpll
insl
fnclex
sti
dec
ds
mov
pop
and
cltd
popa
je
je
fsts
out
and
mov
or
testb
add
roll
outsl
pop
add
add
popf
fstpl
push
xchg
clc
push
or
sbb
rcl
jmp
fcmove
add
call
xchg
and
lds
mov
and
mov
mov
xor
xor
mov
jns
nop
dec
inc
mov
test
sbb
xchg
push
dec
movsb
jae
inc
pop
inc
insl
or
mov
fwait
or
sbb
rclb
adc
add
jmp
push
imul
inc
jns
push
sti
in
adc
xchg
dec
cld
mov
dec
sbbl
popf
repnz
mov
inc
aas
mov
mov
sub
test
out
outsl
inc
add
cmpsl
xchg
mov
filds
rcrl
or
enter
je
and
or
js
cli
sub
inc
in
mov
fucomip
sti
ret
fs
outsl
ret
adc
jnp
shlb
popf
add
test
push
mov
or
xchg
lods
gs
sbb
adc
scas
clc
ret
daa
push
push
shrb
iret
jae
stos
repnz
js
leave
hlt
cld
mov
arpl
sti
jge
fcmovbe
pop
or
test
inc
inc
scas
sub
add
mov
pop
clc
jmp
ficomps
sbb
shr
cmp
jg
cmp
push
inc
inc
movsb
fwait
pop
dec
push
inc
cmpb
add
cwtl
std
sbb
scas
jb
jno
out
mov
mov
shlb
dec
popf
scas
xchg
push
sub
adc
scas
xchg
cs
inc
in
test
sahf
lahf
sub
cmpsb
ret
in
into
push
enter
daa
pop
inc
xchg
push
rcrb
sub
call
push
ds
mov
testb
cmpb
jl
pop
mov
cmc
push
dec
adc
js
ljmp
cmp
push
arpl
icebp
sub
pop
outsb
xor
xor
stos
jb
mov
push
jg
jb
sti
mov
gs
and
mov
mov
sub
mov
lret
int3
shrl
mov
push
sbb
push
sahf
mov
cmp
push
outsl
dec
jg
and
stc
sub
fs
cmpb
int3
pop
ss
sbb
mov
inc
nop
dec
cli
mov
js
xchg
addr16
cmp
mov
xor
cmc
aad
test
sbb
or
adc
subl
in
add
pop
loopne
test
xchg
mov
push
loop
add
or
mov
mov
push
cmp
pop
pop
jo
hlt
cmp
loopne
ret
jg
fs
push
cmp
std
sti
repz
daa
das
xchg
jne
ret
sbb
movsb
stc
sbb
inc
cmc
pop
pop
add
pop
pop
pushf
jp
cmp
mov
cmp
jbe
dec
nop
lock
dec
and
jb
sbb
add
pop
jecxz
push
cmpsl
pop
sbb
insl
outsl
push
inc
mov
push
mov
sahf
jmp
fisttpl
pop
addb
fs
clc
pop
mov
mov
jns
imul
adc
divb
ror
cwtl
jae
ds
insb
cmp
stos
dec
pusha
cld
xlat
int
lret
push
push
mov
cmp
mov
pushf
adc
adc
ja
adc
stos
mov
sub
mov
ret
mov
fisubl
test
les
inc
js
cmp
fsubs
inc
lahf
bound
push
fisubrs
jg
mov
push
xor
inc
prefetch
daa
cli
testl
clc
stc
cmpsb
test
sub
push
fldl
jno
xchg
jo
imul
mov
fcomps
stos
sub
iret
out
bound
xchg
push
scas
jg
fisttpl
add
push
out
inc
or
sub
inc
mov
jl
in
dec
cmpsl
stos
mov
inc
inc
decl
aaa
push
inc
mov
inc
or
cmc
jnp
cmp
push
jae
jge
fistps
sar
xchg
fwait
bound
add
arpl
popf
lods
sub
cmpsb
int3
icebp
mov
add
add
leave
dec
mov
adc
andb
mov
cmpsb
bound
mov
xchg
dec
push
pop
xchg
inc
dec
insl
jmp
push
ljmp
jno
sub
sbb
cli
addr16
loope
mov
cmp
jnp
repz
jle
dec
dec
in
inc
js
lret
fisttps
dec
add
cmpsl
cmp
cmpsb
and
inc
popf
js
cmp
push
push
pop
and
rcll
push
loopne
ficompl
clc
xchg
add
enter
xor
xor
push
lcall
iret
sarb
in
imul
hlt
aaa
inc
adc
inc
fnstsw
test
cmp
inc
mov
fwait
add
pushf
pop
daa
push
fidivrs
ljmp
add
sbb
and
and
stos
movsb
data16
jmp
xlat
arpl
jge
ret
shrl
aaa
xor
cmp
jp
jl
insb
ljmp
cmp
in
rorl
sub
push
adc
popf
inc
push
imul
inc
adcb
mov
gs
daa
push
movsl
mov
jp
inc
loope
xor
sub
cmc
popf
cmp
sub
fldenv
dec
and
lock
dec
add
mov
xor
mov
pop
push
fadds
js
popf
out
pop
nop
mov
lcall
sub
pop
in
sub
popa
sub
jns
adc
je
xchg
mov
testb
test
adc
icebp
push
jle
sahf
int
sahf
jl
mov
lock
lret
jmp
add
jne
je
jb
inc
sub
mov
lds
loop
jb
stc
loop
inc
sub
adc
lahf
sub
dec
and
inc
adcl
push
idiv
jmp
inc
sti
cmp
pop
add
dec
clc
stos
into
call
sub
xor
xor
and
sub
imul
add
pop
lods
popl
mov
cltd
out
ja
das
mov
hlt
inc
cmc
sti
add
incb
mov
adc
sahf
mov
push
fld
or
les
loop
xchg
cmp
fwait
sbb
das
xlat
jg
mov
mov
pop
xchg
add
or
pop
popf
nop
lret
xchg
add
xchg
jns
insb
std
dec
cmpsl
sub
jecxz
es
pop
ss
aam
sbb
movl
fldt
dec
sub
sbbb
dec
inc
in
fs
adc
sub
push
scas
mov
xor
and
jmp
data16
pop
std
int3
insl
adc
xchg
mov
out
pop
mov
xorb
cld
add
jno
ret
jnp
mov
cmp
outsb
sar
push
mulb
sarb
stos
sub
loopne
dec
dec
loopne
aas
fmull
es
fs
test
push
mov
ljmp
lods
lods
scas
stos
cmpsb
mov
imul
mov
inc
daa
inc
add
clc
cltd
das
push
inc
test
insb
sbb
sub
and
int
jne
scas
mov
in
in
mov
stos
sbb
out
lds
mov
scas
leave
call
test
or
je
mov
jg
pop
dec
push
mov
test
jg
xchg
jp
dec
mov
mov
test
je
push
adc
push
push
addb
xchg
cmpsb
pushl
ret
dec
bound
dec
int
out
lret
in
mov
in
mov
mov
adc
jp
push
mov
lods
dec
mov
outsl
dec
pop
cmp
sbb
sub
dec
imul
jnp
out
xchg
and
addl
movsb
out
mov
fmuls
adc
addr16
jae
xor
and
repnz
jnp
jge
jle
gs
pop
mov
fildll
fwait
lret
pop
frstor
push
inc
test
mov
push
sbb
mov
push
pop
inc
scas
ficoml
fcmovne
xchg
pop
push
sbb
add
cmc
popf
popa
scas
mov
mov
push
xor
repnz
pop
aas
leave
loop
scas
hlt
andb
inc
loopne
and
jp
testb
imul
and
add
lcall
lods
and
faddp
movsl
lds
add
shlb
xchg
movsl
int
cmp
push
push
loopne
aaa
jbe
leave
jge
shll
sbb
scas
cmp
ret
xorl
enter
mull
push
repz
xor
sbb
ljmp
fdivrs
push
xor
mov
cmpsb
enter
pushf
xor
hlt
daa
sbb
xchg
adc
lods
in
cmpb
push
sarl
sti
or
and
test
sbbb
sbb
cmp
loope
xor
add
ljmp
js
jecxz
pop
iret
stos
in
sahf
cmpsl
pop
push
adc
insb
faddl
rolb
notl
adc
dec
inc
in
imul
ret
mov
in
xor
lea
int
jo
sub
push
ja
add
dec
adc
cwtl
sbb
sbb
mov
push
addb
mov
jmp
lock
adc
adc
mov
fcomps
xlat
xchg
cli
sbb
mov
cmp
lock
mov
or
lret
stc
jp
arpl
xor
enter
cmp
adc
fildll
dec
sub
add
dec
or
push
lods
jbe
sub
cld
pop
add
ljmp
in
pop
sbb
sti
scas
dec
pop
mov
insl
stos
loopne
or
mov
add
fprem
pop
les
loop
xchg
sti
jl
sbb
sbb
xlat
mov
mov
out
rolb
dec
jmp
jle
jo,pn
leave
aad
imul
dec
mov
dec
push
jg
je
xor
jecxz
sbb
popa
test
cmp
pop
call
add
cmpsb
mov
cmp
dec
adc
push
out
xor
push
inc
imul
inc
movsl
xchg
aas
or
mov
out
push
and
out
movsl
roll
addr16
std
jae
scas
cwtl
jmp
cmc
clc
mov
pop
cmp
or
xor
in
daa
mov
les
leave
cmp
das
xor
mov
sub
cli
aam
xorl
mov
insl
nop
stos
xchg
dec
das
int
cmpsl
sbb
ljmp
jl
lods
sbb
mov
mov
and
jns
xchg
pop
gs
lds
imul
test
jge
push
dec
jnp
fstl
push
sbb
jb
cmp
mov
stos
or
xchg
xchg
idivb
cmpsl
push
cmp
jp
xor
sub
adc
mov
xorb
dec
out
jbe
popa
xchg
dec
jge
sub
shll
fwait
cltd
pop
rcrb
mov
cwtl
xchg
add
hlt
outsb
bound
xchg
jge
jne
adc
jns
daa
xchg
cmp
cmp
cmp
mov
cmp
xchg
cmp
fmuls
mov
xchg
fisttpl
mov
jne
aad
mov
lret
or
cltd
xchg
out
adc
jb
or
adcl
sahf
sub
push
mov
addr16
adc
lahf
rep
adc
lret
mov
mov
das
in
fcoms
fisttps
ret
rcrb
icebp
inc
mov
cli
jae
cmp
push
fldl
fnstcw
pop
sbb
fcmovb
sarb
mov
in
es
fildll
iret
outsb
scas
and
push
sub
mov
iret
nop
sub
call
xchg
arpl
in
jecxz
or
cmc
xchg
sub
insb
and
lcall
int3
or
insl
pop
test
and
scas
or
sarb
or
cmp
dec
movsb
cmp
xchg
push
das
adc
xor
les
stos
sbb
scas
push
cmp
xor
jl
clc
ret
dec
ljmp
xor
ja
xchg
scas
and
xchg
push
mov
icebp
push
push
mov
andb
hlt
jno
sub
push
daa
sbb
sub
add
loope
jl
sub
mov
ds
int3
ret
outsb
aam
mov
aaa
xorb
sbb
mov
push
fwait
in
inc
filds
pop
movsb
push
xchg
js
mov
jle
push
dec
fstl
xchg
mov
mov
nop
sub
jecxz
outsb
pop
sub
shrb
les
pop
inc
push
mov
ret
cmpb
push
test
adc
test
xchg
sub
or
notb
das
push
mov
in
bound
mov
stos
sahf
mov
test
lods
sahf
jg
das
test
stc
push
xor
adc
add
into
lcall
push
sti
repnz
sbb
dec
mov
xor
insl
or
push
adc
es
inc
into
scas
imul
xor
push
mov
jl
lea
sarb
std
adc
mov
cmp
lods
pop
xchg
jne
out
test
jo
sub
sbb
sti
pop
sti
xchg
inc
adc
or
pop
faddl
scas
fldcw
push
loop
mov
xor
push
loop
cmp
or
std
mov
pop
push
movaps
pop
int3
cmpsl
pushf
jnp
in
jmp
xchg
xlat
rorl
cmp
nop
adc
sub
movsl
jae
xchg
js
je
push
dec
jecxz
and
lea
daa
movsb
movl
shlb
add
dec
pop
rorl
inc
repnz
ds
dec
push
mov
sahf
lods
add
dec
scas
rcl
xchg
shl
jle
lret
std
sbb
cwtl
movsb
push
std
mov
xorb
insb
cmp
pop
and
mov
and
mov
insl
repnz
mov
shlb
fldcw
dec
int
aam
pop
push
ret
pop
jmp
xchg
insl
ja
adc
and
sbb
mov
lods
test
push
mov
imul
mov
test
xchg
cltd
popf
out
ret
mov
mov
rcrb
and
mov
push
clc
inc
and
sub
fistpll
xchg
add
pop
xchg
dec
stos
negl
sub
sbb
imul
mov
xor
sub
or
add
mov
test
xor
fdiv
cmp
ret
insl
jae
jo
push
inc
jnp
or
cmpsl
jg
enter
pop
and
xor
fpatan
jns
sarb
add
les
outsl
add
xor
ja
out
jp
xchg
mov
pop
mov
dec
and
and
jmp
pop
xchg
mov
add
mov
jbe
and
out
sub
or
jnp
scas
stos
push
push
push
and
inc
push
jle
jae
in
mov
fildll
insl
ret
dec
pop
dec
adc
inc
mov
mov
stos
popf
mov
xor
fidivl
cmp
roll
imul
test
push
outsl
aaa
adc
scas
pop
iret
out
out
repnz
test
sbb
sbb
out
jbe
push
inc
inc
or
or
mov
int3
cmc
dec
cmp
fisubs
je
push
icebp
or
and
mov
imul
out
les
lcall
insl
aaa
and
push
push
dec
jno
shll
jl
cld
dec
dec
pop
push
and
mov
sub
rcl
mov
add
mov
push
lret
inc
and
dec
repz
push
mov
daa
sbb
fs
daa
lret
push
sbb
mov
iret
clc
ds
or
and
xchg
test
mov
test
jo
je
lret
in
js
sub
dec
and
add
ja
mov
movsb
sub
leave
outsb
mov
mov
rorl
mov
pop
mov
sub
outsl
test
xchg
int
mov
or
add
lret
cmp
mov
mov
repz
sahf
sub
std
or
mov
outsl
lods
stc
pop
sbb
lret
adc
add
xor
adc
idivl
je
addb
repnz
cmp
or
int
cmc
icebp
fisubs
outsl
pop
je
adc
mov
add
imul
mov
ja
sub
push
in
mov
xor
outsl
mov
adc
sub
push
pushl
inc
push
pop
fldenv
stos
repz
pop
sbb
nop
into
xor
cmp
aaa
pop
rcll
xchg
adc
adc
inc
cs
aad
adc
nop
pop
nop
jns
lahf
enter
adc
dec
or
xor
jecxz
push
addr16
addr16
mov
sub
sub
mov
imul
pop
jbe
in
inc
jns
clc
inc
fs
push
aas
inc
dec
lret
mov
mov
or
les
roll
std
rcrl
mov
popl
out
arpl
pop
mov
mov
mov
jnp
lock
mov
shl
lods
aad
inc
mov
icebp
ret
in
push
insb
es
pop
jg
pop
movsl
les
pop
xchg
or
enter
fldcw
jp
mov
jb
inc
mov
mov
insl
push
cltd
aam
mov
push
push
shlb
fstp
test
xchg
insb
shlb
shr
sti
xchg
stos
out
jo
out
mov
push
repz
xor
push
stc
scas
xor
xchg
or
xor
inc
xor
xchg
orl
dec
arpl
inc
adc
repz
notl
lcall
sti
and
decl
bound
jmp
jecxz
jp
push
mov
mov
movsl
cmpl
pushf
pop
in
jp
cs
pop
test
fisttpl
add
jne
mov
stc
out
lret
xchg
mov
jne
add
xorl
call
or
ss
cmp
int
js
jmp
int3
jnp
mov
jle
push
test
ss
push
fisttps
stc
je
cmp
inc
leave
add
jae
dec
fwait
push
arpl
test
fcoml
fisubrl
fsubrs
xchg
pusha
jg
sbb
push
pusha
imul
add
mov
in
adc
jbe
iret
dec
stos
loopne
mov
insl
leave
inc
ret
arpl
outsl
inc
jmp
fistps
jmp
sub
sub
orb
add
jmp
int3
loopne
cmp
faddp
add
lds
inc
mov
pop
lcall
movsb
push
int3
stc
push
int
mov
jge
push
or
mov
mov
cmp
xor
enter
movsb
push
pushf
lock
sub
sahf
mov
popa
int3
jno
mov
outsl
leave
inc
mov
shll
push
shlb
and
daa
sbb
push
lcall
loope
push
pop
sub
jae
cmp
les
fs
movsl
cmc
inc
lds
std
icebp
xor
sbbb
lods
add
or
fists
or
xor
xor
rclb
mov
push
push
push
test
faddl
aaa
dec
sub
je
outsb
and
std
shl
jmp
popl
cmp
mov
iret
dec
mov
dec
mov
dec
mov
int
cmp
sub
ficoms
rcrl
mov
sahf
shlb
sbb
sbb
inc
jg
mov
push
stc
mov
pop
and
add
mov
fmul
rorb
cli
mov
repnz
and
cmp
pushf
add
add
hlt
into
je
xor
in
shrl
cwtl
xor
jbe
mov
pop
push
mov
xchg
movsb
adc
orl
call
in
mov
cmpsb
aaa
decb
adc
es
loopne
push
pushf
pop
sbb
jge
inc
fstps
dec
into
repz
xchg
inc
inc
test
cmp
cmc
rcl
js
pop
test
adc
mov
cs
subl
sbb
nop
aaa
bound
mov
push
jnp
or
xchg
jecxz
cs
push
push
lea
lcall
or
and
inc
xchg
jp
in
pop
sbb
es
jg
jb
out
aam
daa
xchg
js
or
and
imull
testb
cwtl
sbb
mov
and
icebp
fidivs
cmp
mov
in
pusha
lock
mov
ror
imull
aam
adc
ret
jnp
dec
adc
push
dec
and
insb
ljmp
pushf
lods
pop
shl
mov
cmc
jo
and
dec
sub
pop
ret
add
sbb
test
inc
jecxz
xchg
sbb
fldl
es
stos
xchg
jnp
xchg
hlt
inc
roll
and
or
push
aas
inc
xchg
lret
ljmp
mov
xor
sbb
cmp
sub
mov
fwait
dec
stos
lock
test
cmp
fimuls
xchg
fiadds
cmpsb
ljmp
notb
mov
add
add
clc
ljmp
cld
xchg
jns
out
in
sub
gs
mov
lret
pop
test
lret
imul
fnstenv
pop
xor
cmp
mov
jne
dec
inc
mov
mov
enter
jmp
dec
mov
cmpl
gs
pop
mov
or
outsl
xchg
test
and
xchg
push
insb
push
in
cmp
dec
jg
push
push
jb
sbb
xchg
test
sub
pop
mov
arpl
lcall
popf
out
dec
icebp
mov
sbb
adcl
rol
imul
add
inc
loopne
movsl
push
sbb
repnz
ror
mov
add
mov
mov
lock
inc
inc
into
lock
insb
add
sub
fisubrs
mov
inc
sub
mov
icebp
ja
cmp
push
fnsave
push
sbb
shlb
aam
cmp
imul
jmp
mov
jno
mov
repz
aaa
mov
pusha
xor
mov
and
push
xor
movsb
test
pusha
enter
cwtl
jno
aam
outsl
in
cmp
enter
test
mov
or
sub
movsb
jo
and
inc
movsl
cld
enter
test
dec
subb
and
sarl
negb
js
les
lcall
cld
fdivl
jecxz
outsb
adcl
filds
mov
loop
mov
add
mov
push
mov
or
popa
push
jecxz
int
popf
dec
sub
in
lret
mov
mov
nop
add
inc
mov
xor
xor
popa
repz
dec
stc
jne
pop
fs
sub
push
mov
inc
cmp
xchg
je
mov
mov
mov
outsl
jge
or
push
into
push
jno
cmc
jg
pop
xor
pop
jae
sbb
imul
icebp
sub
adc
mov
add
jbe
lods
adc
mov
out
lahf
add
mov
nop
mov
or
inc
das
bound
gs
addl
cmp
das
inc
nop
clc
sahf
adc
fsts
repz
inc
sbb
push
mov
xlat
mov
ss
adc
mov
data16
cs
sub
ds
adc
dec
pop
push
fbstp
sub
je
fwait
shl
rcrb
xlat
xor
and
test
insb
sti
cmp
dec
roll
fldt
xlat
enter
aaa
inc
lcall
mov
ret
enter
dec
pop
rol
lock
inc
insb
add
psubusw
cwtl
aad
dec
mov
cmp
icebp
mov
jg
mov
mov
inc
mov
ret
xor
lcall
xor
je
or
call
insl
sub
mov
xchg
jmp
sbb
ljmp
cmc
lods
in
fnstcw
sbb
jge
orb
pop
loope
int3
add
cmpsl
dec
test
cmp
cmp
hlt
push
xchg
xchg
ljmp
rcrl
and
out
mov
sub
test
mov
add
cmp
mov
mov
or
inc
cmp
dec
xchg
lcall
int
fwait
push
pop
mov
inc
es
add
andl
jns
push
in
ja
aam
cmp
mov
fs
ja
add
mov
int
mov
stos
mov
mov
mov
xchg
xor
jmp
sbb
mov
sub
cli
jecxz
addr16
fsubrs
sti
adc
jnp
test
cltd
in
mov
pusha
insb
sub
sbb
je
lock
sahf
inc
fistps
push
jae
imul
jmp
rclb
and
sub
nop
scas
jbe
push
in
mov
imul
push
push
inc
fldl
addb
or
xor
into
cs
xor
data16
dec
lret
out
or
push
shl
or
rolb
int3
or
mov
mov
jae
fimuls
sbb
mov
test
cmp
jb
movsb
push
out
jbe
mov
jecxz
adc
xor
sub
stos
mov
cmp
call
jle
outsl
add
cmpsb
xchg
pop
push
bound
divb
or
fcoms
enter
dec
daa
push
sub
inc
shrb
dec
cmpsb
push
daa
ss
pop
inc
icebp
enter
daa
sbb
mov
and
sub
cld
test
jge
stos
jl
movsl
add
sbbb
sub
add
lret
fdivl
jge
cmc
mov
mull
xchg
out
addr16
or
mov
sbb
add
sub
pop
adc
xchg
roll
inc
cs
mov
add
mov
scas
mov
and
and
push
nop
pop
std
int
jecxz
sub
insl
jbe
ret
rorl
mov
insl
push
inc
sahf
push
icebp
je
int3
test
orb
sbb
and
mov
sub
pop
imul
daa
aad
loop
sub
imulb
cli
sbb
xor
aas
cmp
xor
loop
inc
into
cmp
sub
lcall
adc
cwtl
imul
out
add
ja
cbtw
mov
daa
mov
jmp
sub
mov
dec
in
jbe
sar
sbb
push
mov
jg
cmp
es
pop
adc
mov
pushf
xor
in
in
repz
jp
lret
sbb
inc
add
xlat
stc
dec
and
push
mov
mov
push
leave
cs
int3
xchg
aad
push
or
mov
lcall
lahf
or
iret
dec
pop
jo
sub
ds
call
jg
and
adc
fisttpl
adc
fadd
fistps
in
out
push
lods
fwait
inc
mov
pop
aas
and
or
jp
arpl
testb
dec
call
cwtl
nop
in
mov
sarl
mov
mov
hlt
lret
pop
push
mov
shll
nop
mov
in
shlb
fwait
sub
insl
repz
imul
sbb
insl
adc
orl
mov
lea
sub
push
lods
xor
nop
mov
cmp
dec
mov
add
xchg
cltd
jns
sub
int
push
sbb
lods
fstl
jae
das
jnp
xchg
sub
adc
mov
es
mov
sti
out
pop
orb
test
jl
push
push
rorb
pop
adc
mov
jae
xchg
dec
js
or
mov
inc
out
xlat
cmp
inc
fwait
test
add
pushf
jl
jmp
repnz
lock
in
cmpsb
xchg
testb
cmp
pop
pop
pushf
jmp
fnstcw
repnz
xchg
cmpl
dec
int
sub
xlat
out
addr16
adc
inc
inc
or
and
out
jmp
out
or
jmp
addr16
lret
stos
loop
jmp
adc
hlt
jnp
lret
push
jle
add
in
and
scas
and
ret
scas
pop
daa
popf
test
mov
cmp
or
lods
loop
popf
cmp
pop
fcoms
pminub
inc
sub
xchg
gs
sbb
scas
push
imul
movsl
push
mov
xchg
adc
das
iret
imul
repnz
mov
lods
call
cltd
arpl
insl
inc
repnz
fisttpl
pop
adc
or
outsl
add
jb
int3
mov
dec
fidivs
sbb
rol
sarl
pop
add
mov
repz
mov
lods
scas
jge
out
fsubrl
cmp
fxch
jno
cmp
jl
push
or
xor
inc
cmp
xor
ds
mov
push
ficoml
arpl
movsb
inc
popa
or
add
push
int
enter
daa
pop
mov
psraw
sub
sub
orl
int
ja
or
mov
into
push
sbbb
adc
adc
sub
jl
fcomps
sbb
js
lods
mov
dec
aas
push
push
sbb
faddl
out
sub
mov
adc
jno
mov
mov
xor
mov
xor
mov
jo
jnp
mov
int
or
sub
daa
mov
lret
and
and
and
pushf
loop
sahf
mov
call
subb
scas
jg
in
jg
pop
in
lret
stc
jecxz
notb
ss
sub
idivl
push
add
dec
inc
xchg
xor
stos
cmp
mov
into
sbb
lcall
xlat
sbb
out
outsb
push
imul
rolb
movsl
mov
popf
lods
loopne
fisttpl
not
out
pushf
sahf
stos
mov
loope
sbb
leave
in
jne
call
loopne
mov
pop
ja
faddl
sub
flds
mov
out
gs
repz
jne
xchg
lea
je
jl
mov
cmp
push
pop
popf
sub
adc
shrb
inc
jmp
jb
cs
aad
xor
dec
sbb
mov
dec
call
inc
ljmp
stos
lea
xchg
mov
push
xor
jecxz
xchg
add
pop
add
pop
add
addr16
xchg
pop
ret
inc
shlb
aas
ret
push
adc
loopne
ja
xor
cmp
xlat
shll
pop
test
or
pop
cmpsb
inc
cwtl
dec
cli
ss
bnd
mov
jb
cld
das
mov
int3
ljmp
fistps
mov
outsl
clc
test
inc
or
out
fistl
xor
pushf
std
adc
dec
outsl
dec
adc
cmpsl
push
dec
dec
ljmp
lods
pushf
lahf
mov
push
mov
mov
mov
pop
mov
pop
roll
cltd
mov
repz
xchg
cld
mov
jbe
push
stc
fnstsw
dec
clc
push
adc
push
pop
dec
roll
stc
pop
fnstsw
sub
xchg
mov
push
push
shll
fdivl
cmpsb
mov
fs
movsl
mov
xchg
xchg
fists
cmp
das
cmpsl
icebp
inc
outsb
mov
cmpsl
fwait
mov
call
add
mov
decl
aaa
xchg
jns
push
sbb
xchg
adc
mov
pop
ficoml
ja
mov
mov
and
fimull
rorb
push
jne
inc
shll
inc
jne
xchg
fsubrs
imul
mov
xchg
scas
int
sub
and
sub
lock
stos
push
mov
and
jl
insb
xchg
cltd
mov
jle
lds
in
cli
scas
pusha
mov
cs
ret
push
pop
pop
sbb
inc
cmc
jle
jae
fwait
loopne
outsl
test
fs
mov
fdivr
xchg
push
out
mov
fstp
imul
scas
jae
xor
aas
xor
ss
scas
iret
lret
repnz
and
in
adc
mov
inc
cmc
cltd
xchg
or
xlat
jg
inc
mov
adc
add
int3
mov
out
push
push
fcmovnb
fdivrs
rcr
mov
and
mov
movsb
jle
test
or
jbe
cmp
cmc
sbb
repz
dec
xor
test
xor
cltd
out
xchg
scas
pop
push
xchg
xchg
mov
push
ror
inc
lock
jbe
pop
push
ret
in
in
cmp
cmp
push
cmp
add
sub
xor
sub
mov
movsl
adc
mov
and
in
sbb
add
fisttpl
aas
add
pop
mov
scas
js
cmp
mov
and
jb
sub
mov
push
sub
adc
adc
dec
out
popl
roll
mov
dec
test
mov
and
xchg
movsb
js
adc
add
xchg
jp
pop
jle
cmp
test
mov
mov
sub
lret
xor
test
mov
pushf
jg
mov
mov
adcl
shlb
pusha
in
cmp
mov
lret
pushf
cli
adcl
addr16
sbb
shlb
into
add
out
push
and
outsl
mov
call
imul
dec
jbe
xor
ja
sahf
mov
pop
mov
or
cmc
cmp
sub
xor
int3
ds
dec
and
mov
cwtl
inc
xor
ljmp
xchg
xchg
sub
fnstcw
arpl
cli
insb
or
outsb
push
fs
push
add
sbb
mov
mov
pop
push
mov
adc
mov
sbb
cmp
cmc
push
addr16
mov
fbstp
dec
or
lds
jecxz
jbe
jbe
test
or
xchg
call
jge
ja
inc
loopne
cmpl
ds
add
pop
movsl
hlt
js
sbb
push
inc
jmp
sub
bound
jae
sub
call
inc
mov
mov
sti
notb
jb
std
add
dec
cwtl
push
movsb
mov
mov
cmp
cld
pop
and
lret
cmp
mov
mov
pushf
cmp
inc
mov
das
dec
sub
sub
aam
adc
ret
mov
mov
insl
loope
rorb
or
dec
fsubrl
popa
pop
jo
lods
pop
aaa
clc
mov
subl
dec
pop
and
out
out
hlt
cltd
out
adc
fnstenv
mov
cli
lret
clc
movsl
pop
sbb
pop
jae
popf
in
arpl
sub
fstl
push
cmp
xorl
and
or
test
push
ja
xchg
xchg
lret
cmp
xchg
mov
push
or
data16
fwait
loop
pushf
push
jp,pn
add
shrb
ljmp
shlb
cmp
sahf
in
iret
fists
add
sbb
movsl
cmpsl
ja
ret
fwait
push
mov
nop
push
mov
divl
dec
jb
ja
mov
addr16
and
aad
jmp
jns
dec
cmpl
out
inc
inc
sub
jmp
imul
and
inc
subw
jnp
pop
stc
jle
jle
in
xor
fbld
cld
mov
cmp
inc
add
outsb
jae
cwtl
jne
xor
mov
pop
je
fisubrl
sbb
jbe
insl
popf
dec
scas
jecxz
push
sbb
cltd
adc
mov
iret
sub
add
hlt
fisubl
arpl
int
clc
por
push
adcb
mov
or
cltd
mov
int3
ja
sbb
dec
mov
test
lds
mov
mov
cmp
inc
int
or
push
pop
or
sarb
push
adc
xor
mov
xorb
cmpb
dec
repz
stos
xor
hlt
cld
add
add
test
mov
inc
jg
mov
in
aam
ror
or
daa
adc
rcrb
mov
cmp
jae
adc
jae
add
fwait
lahf
dec
test
xor
pop
sbb
loope
xor
mov
add
js
in
pop
in
lcall
into
fcompl
shrl
inc
movsb
outsb
setb
mov
pop
shlb
cwtl
mov
mov
xor
ss
bound
cltd
jne
push
cltd
ja
int
or
adc
pop
std
and
lret
jecxz
push
in
mov
jl
cli
inc
movsl
sahf
pushl
pop
sbbb
jg
mov
and
fsubl
repz
cltd
cmp
jb
adc
mov
scas
cli
mov
xchg
cld
gs
sbb
or
mov
adc
xor
xchg
xchg
mov
push
adc
mov
and
scas
repz
hlt
pop
pop
sub
dec
hlt
in
mov
mov
daa
cmp
mov
aad
loopne
cmp
mov
fnstenv
enter
jno
xchg
adc
sbb
repnz
in
fists
mov
das
and
in
jecxz
mov
aad
adc
nop
jle
decl
sahf
ret
hlt
scas
dec
cmp
je
inc
push
cld
repnz
jns
loope
jae
iret
call
cld
xor
adc
dec
outsb
pop
dec
out
inc
mov
out
pop
aas
add
mov
lahf
stos
and
jmp
sar
jns
notb
mov
cwtl
shl
mov
mov
cmpsl
icebp
adc
lret
stos
aaa
movsl
mov
dec
popf
mov
add
mov
inc
shr
je
sub
out
ret
inc
jne
mov
repnz
pop
xchg
dec
cmpsl
adc
into
ljmp
jmp
jb
or
movsb
sbb
pushf
inc
mov
push
cmp
pop
jno
add
fadd
cltd
push
inc
std
test
mov
push
push
cmp
clc
loopne
loop
out
dec
sbb
js
shl
mov
imulb
inc
or
xchg
fimuls
setno
bound
dec
js
aam
dec
xor
lret
cltd
mov
lcall
test
in
inc
xchg
add
mov
inc
pushf
cs
or
in
clc
fwait
adc
aaa
add
in
cld
pushf
dec
adc
lret
jns
rcll
rorl
xchg
mov
je
inc
add
mov
push
mov
ja
or
jp
fstpl
les
xor
xchg
mov
xor
jne
fildl
out
add
jp
jle
push
jmp
inc
dec
pusha
orl
int
bound
inc
or
jnp
addr16
jne
cmp
and
aas
insb
insl
xchg
jle
sub
in
shlb
pusha
fmuls
filds
ret
mov
add
jae
fidivrl
popf
mov
pusha
mov
push
insb
lock
xchg
push
sbb
mov
imul
cmp
push
pusha
xor
adc
leave
or
mov
leave
adc
mov
and
stos
push
inc
sti
stc
adc
int
xchg
inc
mov
rolb
int3
test
ficomps
push
lret
mov
rcr
pop
cmp
cmpb
mov
inc
jbe
mov
xor
pop
mov
fdivrs
mov
xchg
sbb
dec
bound
in
xor
dec
pop
mov
push
push
das
ret
test
push
jo
inc
push
xor
cmpsb
arpl
in
mov
pushf
scas
daa
adc
add
clc
iret
add
sub
pop
xor
ds
push
movsl
pop
das
stc
and
jnp
orb
fstpl
mov
cmp
xor
fcmovnu
pop
mov
pop
mov
push
jg
lcall
cmc
fmull
or
outsb
jb
or
add
pop
add
cmc
add
mov
leave
mulb
test
mov
pushf
mov
xlat
sub
pop
lret
mov
mov
sbb
sahf
mov
pop
inc
cmpb
jg
pop
fwait
loop
cs
or
fs
push
mov
ss
adc
sub
pop
daa
cli
out
mov
cmp
dec
in
or
cmp
cmc
bound
mov
adc
cmp
ljmp
push
mov
mov
xchg
and
sbb
xrelease
cmc
ja
mov
and
popa
sti
or
ficomps
in
movsl
sbb
ja
out
add
and
adc
repz
es
pop
jecxz
inc
xor
cmp
sbb
pop
mov
repz
das
scas
pushf
shrl
jmp
rcll
jmp
rcl
subl
pop
icebp
bound
jnp
jb
iret
movsb
dec
dec
push
jge
lret
shrb
mov
jl
add
mov
mov
mov
push
sub
pop
xor
fistl
or
inc
and
aas
mov
adc
mov
mov
dec
xchg
std
push
mov
cwtl
jl
arpl
push
imul
mov
test
sbb
mov
int3
movsl
lock
divl
or
dec
sarb
mov
cmp
and
aad
dec
es
sbb
sub
xor
popa
mov
mov
mov
jge
and
in
loopne
pop
jl
pop
add
pop
test
cmpsl
es
or
push
daa
fwait
inc
fucomp
cwtl
xchg
clc
sbb
sbb
adc
rorl
or
stos
outsl
push
in
out
mov
aam
push
lock
push
xor
lahf
mov
mov
mov
popf
sub
sbb
mov
or
xor
or
inc
inc
fwait
inc
shl
push
je
lods
add
or
pop
bound
xchg
jns
xchg
xchg
add
test
sbb
add
incl
aad
test
jno
mov
sbb
mov
aad
xor
mov
inc
mov
mov
out
jecxz
sub
and
jg
syscall
repz
add
or
loope
adc
sarb
and
sbb
fdivrs
mov
int3
inc
in
roll
pusha
jae
sub
arpl
js
sbbl
mov
jae
pusha
lcall
int3
xor
xchg
call
mov
shl
sbb
pop
stos
imul
scas
pushf
shl
cmpsl
shrl
sbb
adc
rcll
loope
jo
data16
push
cmp
dec
inc
dec
inc
cmp
or
jne
int3
dec
xchg
cmp
pop
loope
cmp
sbb
insl
mul
shrb
xchg
arpl
movsb
pop
popa
xchg
push
mulb
mov
sbb
shll
aaa
gs
xor
out
jl
out
jbe
rcll
push
rcrl
jo
push
imul
lret
xchg
and
cmpsl
inc
popf
sbb
cmpsb
out
out
mov
pop
cmp
adc
lret
xchg
jo
xchg
inc
in
adc
test
cmp
ds
dec
push
movsl
es
and
fwait
lret
push
sub
sbb
sbb
in
xor
ja
pop
add
or
inc
pushf
jmp
push
ja
adc
mov
fwait
sub
into
outsb
aad
pop
adc
fnsave
xchg
mov
push
mov
and
push
push
lahf
jns
int
lcall
sti
fsubs
lret
test
jle
movsl
mov
jecxz
sbb
jmp
inc
clc
test
mov
mov
int
cmpsl
stos
jle
mov
jg
adc
cmp
sub
push
divl
movsb
xor
sub
into
test
xchg
push
xor
jno
push
add
cmp
adc
adc
adc
add
add
clc
lods
data16
jecxz
lods
jl
in
mov
push
out
ja
sub
inc
mov
lea
sti
test
gs
xlat
or
inc
adc
pop
repz
push
inc
add
les
jp
repz
cltd
push
insb
sbb
push
fdivrs
adc
sbbb
jno
dec
xor
lret
nop
xor
loop
xchg
pop
jl
std
ficomps
les
dec
je
xchg
shl
sbb
cmp
add
lods
and
add
mov
push
fcmovnb
pushf
sbbb
icebp
inc
mov
les
enter
mov
or
xor
rcrl
mov
cwtl
aaa
sbb
mov
xchg
int
xchg
pushf
cld
fcmovne
xchg
mov
mov
stc
inc
lock
cmp
das
jmp
scas
rorb
pop
and
ret
fs
sub
insl
xchg
sub
dec
std
push
dec
cmpsl
adc
ljmp
lds
xor
and
xchg
add
inc
pushf
cltd
mov
push
mov
shrl
jo
fstl
mov
jp
fs
xor
jbe
repnz
push
push
out
push
xlat
pop
xchg
mov
sub
cmovg
or
mov
xor
inc
inc
mov
mov
in
dec
test
or
xchg
mov
pop
inc
lret
or
je
fwait
outsl
into
pop
push
pop
vpsubd
incl
shll
loopne
in
cmp
push
mov
mov
pop
xlat
mov
or
ja
and
pushl
xchg
dec
sbb
nop
mov
sti
clc
out
ret
xchg
and
dec
jmp
ficoml
subl
xor
push
jnp
or
mov
jne
and
insb
inc
ret
adc
out
mov
adc
in
lea
hlt
filds
cmp
inc
and
mov
push
jnp
sub
test
and
fcmovb
adc
sbb
lcall
push
out
mov
adc
dec
repnz
sub
arpl
sub
push
mov
pusha
lret
iret
add
cmp
ja
pop
or
in
pop
rorb
mov
divb
cmp
adc
cwtl
pop
jbe
or
jge
cmp
xchg
andl
sahf
cwtl
cmp
push
and
insb
or
lea
xchg
push
mov
inc
xor
add
inc
jl
stc
lcall
in
gs
sub
iret
cmpsb
imul
xor
cli
test
cli
push
or
sub
cs
cmp
fwait
sub
jl
shlb
aad
popa
lahf
stos
sub
fstps
sub
loopne
test
aam
push
ja
dec
xchg
es
hlt
minps
test
cmp
fisttps
sub
repnz
cmp
mov
pusha
xorl
jle
jge
fwait
cmp
mov
xchg
mov
xchg
bound
push
pop
push
mov
aaa
fildll
adcb
lret
pusha
rcll
sbb
xchg
adc
call
mov
jg
bswap
loop
pop
mov
jbe
shll
adc
imul
and
movsb
fsubs
mov
jnp
andl
cli
into
mov
cmc
lock
cmp
inc
jge
push
aaa
cmc
imul
jns
jo
pop
data16
loopne
lods
arpl
cwtl
out
jmp
jmp
adc
repz
xor
dec
and
gs
out
push
loopne
sbb
pop
adc
xor
fsts
popa
les
sarl
rep
push
cltd
sbb
mov
sbb
fsubrs
pushf
sub
jmp
jne
cs
loop
adc
xadd
jb
and
cmp
je
mov
jecxz
ljmp
lea
js
jns
mov
fwait
stos
xchg
out
fcomi
lods
test
xor
inc
cmp
push
aas
fidivrs
xor
lock
shr
push
negb
lods
std
mov
adc
mov
xchg
cld
mov
lret
imul
lahf
mov
mov
das
lret
shlb
xor
repnz
aam
push
cwtl
ret
repz
mov
rorl
push
adc
xor
pop
ljmp
mov
in
mov
or
jmp
mov
mov
lret
lcall
or
push
lods
mov
push
clc
xchg
pop
stos
xchg
mov
push
sar
add
xor
stos
dec
jmp
out
imul
aas
push
cmpsb
and
stc
mov
inc
sub
or
jge
xor
jnp
mov
mov
jnp
test
jns
xchg
testb
in
or
jbe
fwait
sahf
repnz
mov
notb
xor
jmp
test
es
mov
xchg
mov
sar
mov
subl
std
mov
aaa
cmp
mov
stos
or
scas
iret
mov
push
jo
mov
js
jmp
movsl
js
xorl
push
or
aas
xchg
mov
stos
xchg
loop
and
mov
test
jnp
push
pushl
fbld
or
pop
jno
pusha
inc
sub
divb
cmp
push
jg,pt
popf
daa
insl
push
mov
adc
fidivl
lea
jg
jae
sub
scas
bound
push
xor
add
movsl
xor
bnd
fmulp
jbe
add
push
cmpsl
lcall
jo
or
ds
out
cmp
popl
addr16
mov
pop
mov
fiadds
cmp
mov
and
push
pop
movsb
xor
dec
push
jbe
loopne
jge
stc
sbb
shll
jecxz
fdivrs
push
ds
jno
adc
into
dec
scas
cld
and
xchg
xchg
jo
jge
mov
sahf
jle
insl
lea
push
mov
mov
mov
enter
daa
adc
push
ss
shll
cmp
jecxz
movsl
xor
popa
and
mov
inc
shll
inc
outsl
xor
xchg
mov
pop
push
mov
pop
pop
ret
bound
push
and
mov
pop
outsb
fwait
lldt
xchg
and
loop
hlt
aas
xchg
mov
imull
push
movsl
dec
lods
int
mov
add
lret
add
sub
mov
out
sbb
or
push
or
test
cmc
out
loop
inc
scas
stc
sub
insb
push
adc
xchg
cmp
pop
das
mov
cli
xorb
push
fimuls
jmp
push
into
outsl
and
cmc
mov
out
xor
dec
int3
outsl
adc
adc
or
adc
lret
cmp
sub
adc
mov
out
fists
sub
shll
mov
into
incb
lea
imul
xor
nop
jle
jns
dec
xchg
pop
push
pushf
sbb
ficomps
xlat
mov
int
iret
jecxz
adc
inc
aam
aam
shr
cmc
push
cs
scas
aad
fnsave
nop
ljmp
jb
cltd
push
dec
mov
xlat
je
sub
xchg
movb
enter
pop
xbegin
ret
aas
xorl
fstpt
andl
inc
jb
jmp
jge
lea
jnp
aad
jnp
leave
sarl
inc
push
negb
sbb
cwtl
lods
mov
dec
mov
insl
mov
cld
xor
lret
add
mov
aaa
mov
cmpl
jno
shlb
outsb
push
aam
jp
ret
subb
es
or
dec
repz
adc
sub
lods
push
cwtl
adc
outsl
add
in
mov
dec
jecxz
mov
dec
test
test
push
mov
decl
frstor
clc
int3
fcomps
cmpsb
sbb
fsubl
xor
push
popa
das
pop
fbstp
stos
cmp
popf
out
int3
jno
xchg
dec
cmovae
sub
xor
jmp
xor
or
mov
cmpsb
call
push
test
jnp
xchg
add
dec
loope
outsl
inc
clc
mov
or
pop
imul
inc
push
mov
pop
adc
mov
pop
sub
in
jnp
xchg
out
inc
sbb
adc
test
ja
push
or
mov
sti
outsl
mov
and
dec
loope
and
mov
test
xor
xchg
lret
jmp
jo
jne
inc
push
shl
outsb
xchg
push
sub
rclb
addr16
jmp
pop
aad
and
push
inc
jnp
daa
jbe
pop
push
insb
pusha
inc
sub
mov
pop
test
xlat
inc
aaa
xchg
push
loope
push
push
add
cmp
sti
jg
push
push
jne
fisubrl
sub
cli
sbb
push
imul
push
scas
lds
bound
pop
xchg
outsb
iret
add
test
leave
in
pop
xlat
hlt
push
dec
nop
arpl
lret
pop
sub
push
mov
mov
and
pop
mov
jno
lds
notl
jg
xchg
mov
sbb
idivl
xlat
iret
jae
rolb
jecxz
jmp
jge
pushf
lds
or
inc
cmp
loop
jl
shr
dec
push
testl
xor
mov
xlat
ret
adc
subl
cmpsb
outsl
mov
mov
lock
push
daa
adc
push
push
adc
lock
movsl
push
cmp
lea
ret
movsl
cmp
in
and
mov
lcall
sub
add
jmp
xor
clc
rcl
add
pop
js
stc
js
adc
lcall
jp
mov
cmp
xor
pop
outsb
push
sub
outsb
cmp
mov
inc
and
add
inc
and
enter
std
int
push
xchg
sub
addb
dec
mov
roll
mov
cmpsb
lcall
push
sbb
out
sub
sar
loop
pop
movsl
stc
in
andb
adc
adc
ss
cmp
sbb
cli
mov
test
das
sub
cmp
stos
cld
or
leave
into
push
add
jle
jb
jb
shrb
adc
mov
add
aaa
cmpsl
lods
xor
pop
mov
add
out
pop
xchg
sub
jno
mov
into
push
or
push
xchg
dec
lahf
loopne
push
call
fld
in
les
push
repz
or
xchg
loop
mov
cmp
dec
cwtl
xlat
icebp
sub
pop
andb
pushf
jg
pop
jmp
cmp
ja,pn
jmp
lahf
lret
dec
mov
add
dec
sub
jb
idiv
outsb
jecxz
pop
cltd
mov
lea
mov
ja
dec
mov
movsl
cmp
add
clc
fistl
out
ja
inc
inc
inc
sbb
inc
lea
push
mov
xor
xor
mov
mulb
andb
cmpl
mov
inc
xchg
adc
pop
repnz
lret
aad
sub
push
lock
mov
test
loopne
cmp
ret
adc
int
dec
mov
dec
out
sbb
pmaddwd
ljmp
jnp
mov
jp
push
push
or
push
xchg
xor
pop
aas
cltd
pop
clc
inc
inc
add
test
xor
test
add
faddl
fcmovu
mov
inc
xchg
and
jae
cmpsl
in
pop
mov
sti
out
das
lods
and
xchg
xchg
mov
dec
rcl
xor
mov
daa
arpl
ljmp
test
inc
push
xchg
adc
inc
cmp
pop
testb
add
sub
je
sahf
jmp
in
bound
ret
mov
mov
mov
mov
lea
lds
lcall
mov
imul
bound
repnz
inc
jmp
xchg
popf
add
xchg
cmp
adc
push
out
xor
testl
outsl
test
stos
jp
xor
lret
insb
test
in
ljmp
in
mov
xor
ret
pop
fbstp
inc
inc
cmp
jae
pop
movlhps
test
popf
jne
into
mov
xchg
add
fcmovu
inc
xchg
sbb
dec
dec
imul
lahf
scas
sub
mov
adc
xor
mov
leave
fs
hlt
pushf
aas
pop
arpl
cmp
inc
or
or
xor
test
or
jp
add
sbb
pop
call
mov
stos
rcrb
and
cmp
pop
push
xor
idivl
and
aaa
popa
or
cmp
shr
jl
xchg
dec
lea
and
push
idivl
push
jb
imull
dec
dec
xor
insl
and
ds
fmul
jmp
jl
sysenter
bound
test
subl
fstpt
mulb
and
cmpsb
and
pop
xlat
inc
subb
sbb
into
ds
jmp
js
xchg
outsb
aaa
pop
lahf
inc
dec
js
outsb
push
pop
inc
cmp
lcall
fcompl
cltd
sub
push
fsubrs
xchg
xor
popa
jo
fwait
mov
mov
pop
push
mov
fs
mov
mov
cltd
push
stos
in
sbb
jecxz
lret
sub
repnz
divl
lret
fisubl
pop
mov
cmp
adc
loope
shl
aam
mov
jge
add
aam
xor
stc
fwait
loop
fs
test
mov
xor
cmp
fcom
mov
push
cli
out
pop
xor
and
push
or
pop
inc
into
xor
rolb
xor
dec
ljmp
sub
adc
push
and
mov
popl
xor
fwait
mov
mov
out
push
dec
sub
mov
push
and
and
inc
xchg
je
lea
sti
loopne
lods
sbbb
xchg
inc
dec
sbb
lods
les
popa
repz
cli
xchg
movsl
mov
repz
xlat
xor
outsb
pop
xor
pop
test
sub
jge
jle
adc
fiaddl
aad
sbb
dec
adc
rorl
outsl
xor
mov
lds
icebp
mov
test
mov
cmp
andl
enter
fstpl
xchg
mov
call
mov
mov
out
mov
xchg
mov
rcr
mov
int3
std
xchg
jnp
cwtl
and
mov
js
mov
sbb
mov
inc
jle
mov
jnp
pop
cltd
lahf
lock
add
das
addr16
fisttpl
jle
xor
es
mov
dec
jmp
aam
ljmp
mov
hlt
mov
mov
jbe
mov
mov
pop
lods
push
add
dec
cltd
push
test
mov
dec
cmp
dec
ljmp
xchg
or
inc
mov
sar
mov
pop
xor
mov
out
xchg
fdivrl
aaa
jge
bswap
inc
mov
ds
test
xor
pop
bound
lods
incb
test
cmp
dec
push
ret
fcompl
fwait
sub
push
mov
inc
xor
sbb
bound
stos
mov
xchg
loop
mov
mov
mov
mov
inc
ja
mov
jp
fucom
mov
out
inc
mov
add
cmovle
or
out
ds
loopne
jo
jbe
hlt
sbb
xchg
push
pushf
sub
je
jge
mov
inc
outsb
push
jmp
loope
scas
insb
out
sub
jnp
outsb
scas
jle
ds
addr16
pusha
jp
pandn
push
jns
xlat
mov
mov
dec
aaa
mov
push
xchg
mov
mov
rclb
scas
fimull
jnp
sbb
sbb
scas
mov
fwait
push
or
adc
in
jns
ret
bnd
fcmovne
fcomi
das
hlt
out
mov
inc
or
mov
push
mov
in
or
jmp
add
test
in
adc
insl
xlat
fisubrs
jno
adc
xor
mov
iret
and
cmp
fbld
or
sbb
orl
push
cmp
out
shll
call
jae
cld
aaa
stos
push
inc
mov
jnp
and
scas
push
jns
push
inc
loop
test
sbb
inc
push
sub
in
and
mov
daa
push
aad
push
lock
loope
inc
les
insb
cmpsl
cmp
out
jp
dec
daa
mov
lahf
es
jl
stc
sbb
push
xor
dec
stc
pop
push
js
pusha
sub
sub
lcall
xor
sub
xor
outsb
les
mov
cli
sti
jb
out
scas
mov
outsl
mov
sbb
and
xchg
mov
int
xchg
jl
outsb
out
pop
jbe
cmc
lret
jge
jno
aas
mov
cmp
test
sahf
pop
sbbb
jg
movsl
cmpsl
loop
sub
fs
daa
adc
cmpsb
or
popa
pop
imul
sub
shlb
inc
pop
cmp
rorb
into
sbb
xor
jmp
outsl
scas
jle
adc
mov
adc
imul
lods
push
mov
mov
leave
lods
incl
mov
in
fldcw
sub
popf
ljmp
cli
jns
mov
jl
imul
loopne
add
push
inc
popa
and
sub
push
jne
repz
test
xor
mov
in
xlat
outsl
dec
mov
ds
adc
mov
fsubrp
insl
or
imul
rorl
jnp
adc
jb
inc
jb
aaa
cmpsb
dec
pop
popa
xorb
jecxz
pushf
mov
add
jne
fisttpll
test
pop
fldt
xor
inc
push
sbb
inc
ret
inc
jmp
mov
mov
mov
mov
std
cmp
aaa
cwtl
faddp
xorb
xchg
jmp
repnz
mov
mov
ret
sub
mov
mov
mov
shrb
push
inc
aam
fimull
es
lods
mov
sbb
pop
dec
in
inc
cmpsl
or
aaa
or
mov
pop
ret
jl
mov
and
mov
pop
sbb
cltd
lahf
cmc
push
test
pop
sbb
imul
jge
arpl
cmc
test
rcll
cs
loopne
adc
cmc
ljmp
push
adc
sbb
sub
mov
adc
test
mov
scas
mov
dec
jle
data16
imull
mov
testl
mov
jge
pop
cmp
push
inc
lahf
xor
add
mov
mov
in
sar
xchg
fcoml
outsb
mov
cmp
push
ret
rcrl
outsb
ja
jo
jp
test
mov
pop
lds
mov
dec
mov
sahf
jne
inc
cs
sbbb
ljmp
jmp
int3
xchg
rorl
xor
pusha
out
shlb
sub
ret
pop
fsubl
lods
inc
stos
pusha
in
and
movb
dec
cmp
in
or
fistps
pop
adc
inc
pop
mov
jae
pop
pop
push
dec
mov
repnz
xsha1
cmpsb
or
inc
xchg
jecxz
lret
iret
negb
mov
test
out
ss
push
push
fstl
jmp
cmc
shl
xchg
pop
leave
push
mov
hlt
xor
pop
arpl
in
loope
adc
xchg
or
sub
inc
xor
adc
add
mov
int3
iret
rorl
fimuls
fsubl
rcrb
sub
cwtl
cmp
add
movsb
popa
sbb
jbe
mov
stos
sbb
dec
aaa
fisttps
sub
fisubs
mov
dec
imul
and
jle
inc
xor
jo
aas
pushf
scas
xor
mov
test
in
movb
and
clc
mov
in
or
stc
enter
daa
or
in
xchg
loope
pop
and
fld
sub
and
pop
rcrb
popl
sbb
jmp
mov
mov
inc
pop
in
jne
js
out
pop
mov
xor
push
or
mov
outsb
daa
int
adc
out
pusha
pop
jae
mov
pop
pop
mov
sbb
in
lret
pop
push
push
mov
jb
mov
sbb
jmp
pop
ds
mov
mov
outsb
xchg
sahf
pop
test
test
jno
jg
xchg
ret
loop
loope
stc
or
mov
adc
jbe
mov
arpl
fmuls
insb
imull
adc
xor
pusha
or
push
lods
cmc
roll
xor
xor
sub
jl
adc
dec
add
repnz
mov
outsb
mov
lods
out
fistps
sbb
mov
in
nop
sti
lahf
es
rcrl
gs
adc
loop
jb
lods
xor
neg
push
jo
repz
les
push
fdivrl
lret
xlat
scas
and
pop
fwait
sbb
pushf
sbbb
popf
es
ljmp
shl
leave
jb
jle
dec
mov
xlat
je
push
xchg
je
jle
xchg
testw
xor
hlt
ja
mov
xchg
dec
lds
sub
ret
jl
inc
aas
stc
mov
mov
push
shll
jns
imul
std
jecxz
inc
cwtl
cltd
lahf
jns
mov
out
icebp
leave
or
cld
fisttpll
lea
movsl
inc
sub
jns
insb
das
and
xor
leave
dec
pusha
ret
mov
lret
add
mov
fistps
or
adc
push
or
into
lods
lret
mov
mov
ja
mov
push
mov
cltd
jo
cltd
xor
test
pop
mov
stos
in
push
jl
mov
add
clc
mov
imul
test
pop
shrl
gs
clc
mov
xchg
data16
mov
mov
or
xlat
mov
mov
adc
movsb
jecxz
es
mov
lods
cmp
inc
push
mov
or
in
push
fwait
mov
lahf
push
jmp
rcrl
lds
inc
cs
bound
jb
in
inc
in
out
cltd
xchg
sub
xchg
sub
ja
fsubs
jp
daa
sub
pop
jae
mov
fimuls
dec
insl
mov
jne
loope
mov
aas
enter
fstl
loop
inc
xchg
pushf
push
dec
addl
cvtps2pi
mov
insb
je
stos
shll
mov
and
in
icebp
in
enter
fistpll
pop
test
arpl
and
push
or
xchg
and
dec
mov
sahf
xchg
and
sbb
xor
imul
adc
cwtl
pushf
fsts
les
pushf
repnz
adc
leave
push
mov
jge
jle
cld
sub
inc
adc
adc
pushf
pop
inc
mov
ret
or
jmp
lahf
int3
mov
xor
xor
push
lds
jmp
push
mov
push
pop
aad
in
or
jbe
sbb
push
lds
test
push
cmp
les
jge
jl
fwait
cmpsl
dec
fimull
pop
xor
daa
add
adc
push
test
scas
outsb
inc
xchg
out
jnp
dec
in
repz
icebp
daa
or
aas
push
fwait
dec
loope
push
or
cmp
cwtl
pop
ds
push
test
and
cmp
mov
ret
fildl
xor
pop
adc
mov
push
add
fmuls
push
fmul
inc
fsubl
loopne
lock
adc
ficoml
mov
xchg
mov
or
insl
sahf
push
mov
adc
sbb
pop
je
cli
rcrl
daa
sbb
jo
test
jg
adcb
jg
mov
lods
lret
sarb
out
cli
xchg
adc
push
sahf
daa
cmp
add
std
aad
jg
inc
xor
dec
jp
push
addb
pop
cmc
lcall
outsl
insb
xor
adc
test
imul
jnp
add
or
mov
lods
int
fimuls
jmp
adc
mov
jp
sti
dec
push
cltd
mulb
pop
gs
mov
jge
mov
inc
xchg
add
les
icebp
repz
test
cmp
jnp
pop
dec
stos
in
adc
xchg
mov
jmp
icebp
enter
jecxz
mov
adc
dec
xor
js
inc
cli
bound
xor
jecxz
inc
xor
lea
push
jo
iret
push
jae
mov
andl
and
add
inc
bound
inc
aas
cwtl
mov
jns
push
mov
rol
js
imulb
mov
out
mov
dec
ret
mov
mov
arpl
xchg
imul
mov
xchg
mov
insb
sub
lock
mov
rclb
sub
push
ret
dec
xchg
add
cmp
test
dec
leave
xchg
inc
popa
inc
ja
lods
xor
add
fucomip
and
fstl
je
incb
lods
sub
movsb
test
push
mov
aas
mov
frstor
mov
clc
repz
mov
roll
pop
lcall
or
out
mov
xchg
push
push
enter
call
push
inc
or
mov
xor
mov
mov
mov
lock
dec
mov
test
cs
mov
xchg
dec
mov
cwtl
jno
or
add
mov
jne
in
pop
add
mov
lcall
js
divb
lcall
dec
xchg
mov
movsl
in
push
lcall
int
jge
cltd
pop
sub
mov
mov
dec
push
pop
mov
in
mov
adc
mov
inc
jmp
addr16
adcl
push
std
cmp
inc
mov
mov
stos
inc
sbb
das
insb
xor
dec
jnp
pop
xor
or
jl
adc
lcall
adc
popa
inc
outsb
es
jae
push
push
popf
adc
mov
lea
fisubl
in
sbb
jnp
imul
test
push
fisttps
adc
in
fwait
repnz
hlt
enter
or
xlat
or
and
inc
xor
scas
or
cmp
movsb
aas
inc
ficoms
lds
arpl
mov
sti
arpl
cmp
pushf
movsb
ja
hlt
push
outsb
sub
shlb
jge
and
pop
aaa
pop
and
jno
ljmp
push
mov
xor
sbb
scas
xrelease
test
jp
ds
adc
mov
in
fcmovu
dec
enter
daa
or
xchg
push
incl
sub
dec
cmp
mov
movsl
pop
jmp
push
lahf
sbbl
sbb
sub
add
sbb
pop
cmp
jnp
xchg
scas
mov
lcall
mov
sub
pop
jle
in
jecxz
adc
mov
push
pop
outsb
inc
mov
push
lods
mov
das
out
and
shlb
mov
xlat
sub
cmp
pop
repz
xlat
lret
mov
mov
and
sub
in
insl
add
jg
cmpb
aas
call
and
adc
dec
ret
cmp
rol
imull
sbb
mov
lds
bound
leave
rorl
shrl
xor
inc
out
outsl
dec
xchg
in
adc
jo
imul
add
add
push
data16
jg
lods
mov
call
out
ja
sub
cld
add
in
in
aam
std
leave
xchg
sbb
cmp
loopne
xchg
pop
jmp
test
jae
loopne
push
dec
sub
movsl
adc
cmp
stos
xlat
sub
addr16
add
out
and
out
dec
jmp
or
cs
adc
add
nop
or
push
dec
out
inc
jb
test
dec
je
jecxz
jecxz
addr16
xchg
lea
or
frstor
repnz
mov
adc
dec
fwait
test
pop
cmpsb
ret
jmp
push
xchg
aas
aaa
notl
mov
vmovlps
jmp
test
cwtl
movhps
mov
ja
test
xor
push
lret
add
je
xor
lock
or
jecxz
loope
daa
stos
repnz
das
sub
fdivrl
mov
insl
into
mov
dec
aad
cld
cmpsl
or
ljmp
sti
lods
mov
in
mov
loop
sub
xchg
js
add
xchg
jae
push
nop
or
add
fisttpll
sbb
cs
xchg
pop
out
sbb
cmp
pop
loope
cltd
stos
adc
add
mov
das
xor
divb
mov
arpl
xchg
push
or
xor
dec
xchg
and
lret
divb
addr16
das
rolb
into
roll
adc
sbb
push
jns
mov
in
pop
inc
xchg
leave
dec
mov
mov
mov
sahf
das
divl
xor
mov
xchg
mov
mov
stc
in
jne
dec
inc
mov
idivb
mov
push
bound
dec
es
pop
mov
mov
popa
addr16
adc
cmp
lret
jnp
sub
aas
in
outsb
lret
mov
ffreep
and
pop
repnz
jns
jae,pn
or
push
xchg
jle
popf
cmp
push
int3
jp
ficompl
pop
xchg
shlb
imul
pop
push
es
scas
adc
ror
lock
repnz
fldlg2
hlt
adc
mov
inc
sbb
imul
mov
xchg
mov
cmp
mov
pop
rorl
adc
sub
inc
shlb
imul
and
aad
add
mov
mov
gs
sbb
cmp
sbb
mov
jno
mov
push
dec
mov
jae,pt
xchg
test
ffree
adc
shr
push
xchg
imul
inc
movsb
dec
sahf
cmpsb
xorl
enter
daa
or
outsb
loope
push
push
cmp
cmp
movsl
gs
xchg
and
xchg
add
loopne
cmp
xor
fucomp
arpl
pop
out
repz
icebp
sahf
pop
jl
lcall
push
fdivl
inc
xor
fnsave
adc
nop
pop
ret
icebp
push
mov
fmulp
and
push
rolb
jo
int
xor
sub
xchg
jb
pop
lret
adc
mov
xor
sahf
add
add
orb
jno
sarb
pop
stc
jo,pn
fs
jmp
std
cmp
jnp
mov
jmp
and
in
mov
cmp
mov
push
inc
or
lock
movsb
inc
mov
sub
add
xchg
xor
outsl
sub
inc
adc
push
test
add
add
retw
lods
fwait
adc
mov
or
xlat
sub
pop
mov
push
pop
test
lods
inc
adc
cmp
test
loopne
das
gs
or
inc
lods
dec
sbb
inc
mov
repz
xchg
je
cmpsl
sbb
jnp
and
imul
jl
and
jmp
in
cs
mov
aad
mov
nop
out
mov
jb
mov
dec
repz
mov
iret
loop
lcall
call
jno
mov
pop
test
xchg
xchg
pop
dec
xor
inc
das
jl
aas
xor
push
push
cmp
dec
mov
shll
divb
sar
fdivs
movzwl
insl
repnz
dec
ret
frndint
pop
xchg
xor
outsl
sbb
mov
sub
das
ret
sar
xor
sub
sahf
add
das
push
es
fsubp
insl
mov
fmull
rcll
ljmp
nop
lods
or
insl
mov
and
jnp
mov
mov
mov
rolb
cltd
jnp
fildl
xor
push
lds
fnsave
xlat
clc
imul
mov
pop
mov
inc
out
adcl
xchg
mov
xor
std
xor
icebp
loopne
xor
adc
pop
xchg
pop
xchg
test
mov
xchg
mov
inc
sbb
mov
loope
cltd
fwait
push
sub
push
rclb
mov
push
subb
popf
fwait
bound
inc
jns
shll
lret
xchg
sbb
fs
pop
outsb
and
daa
lea
fmul
mov
inc
out
mov
sub
xor
push
repz
out
and
xchg
jg
jmp
std
data16
subl
icebp
out
ja
sub
scas
packssdw
in
stos
sub
push
and
insb
push
push
push
jnp
pop
icebp
jle
test
mov
pusha
sub
out
ret
xchg
ret
test
jae
ss
push
push
add
fs
or
push
fimull
mov
sbb
mov
mov
inc
mov
insl
push
iret
popf
test
adc
leave
cs
enter
sub
lock
push
mov
cmp
mov
push
repnz
jnp
add
mov
lret
stc
or
cmp
jmp
movsl
jae
and
mov
repnz
rclb
jbe
fidivl
sbb
mov
aaa
fcmovne
xchg
cmp
iret
jecxz
cmp
hlt
jecxz
dec
daa
inc
and
scas
dec
pop
xor
cmp
pop
scas
mov
mov
test
adc
push
inc
xor
jb
add
fs
test
pop
enter
daa
or
cmp
jns
jl
inc
pop
int3
cmp
insb
lock
jbe
insb
or
and
addr16
rcll
sbb
adc
out
stc
xor
jns
pop
mov
scas
pop
mov
cmc
and
fsubl
into
sub
lret
filds
aad
imul
aad
push
mov
dec
cmp
mov
loop
and
ja
mov
aam
sub
push
js
icebp
pop
push
lret
aaa
shll
push
push
mov
jecxz,pn
sahf
mov
mov
loope
in
jnp
loop
mov
jecxz
nop
inc
leave
adc
fidivl
stc
add
fdivs
inc
daa
imull
scas
cmp
adc
inc
cmp
xor
arpl
cmc
out
loopne
xor
xor
adc
or
call
jge
ja
daa
inc
cs
mov
call
mov
lahf
in
mov
jge
pop
xor
mov
loopne
in
and
push
inc
inc
rcrb
inc
push
jnp
icebp
cmpsb
movsb
xchg
aaa
je
sbb
mov
mov
stos
mov
jge
rorl
sub
test
sub
push
aad
aaa
dec
nop
ret
dec
dec
sti
in
jb
movsb
push
dec
push
adc
or
popf
cs
inc
clc
xor
rorl
lock
jg
pushf
mov
sub
mov
fistpl
xchg
sub
idiv
adc
mov
inc
mov
xor
roll
shll
add
std
jg
cmp
mov
aaa
or
and
jmp
fisttpl
sarl
lock
pop
das
mov
repnz
aam
pusha
mov
es
int3
in
insl
pushf
mov
push
cmpsl
or
fldl2e
and
popa
test
mov
mov
dec
mov
and
xchg
sbbl
in
addr16
mov
dec
test
mov
xchg
jno
mov
icebp
clc
movsb
stos
int
fidivl
sbb
rorl
insb
lahf
pop
aaa
lret
jo
mov
shr
cld
mov
push
pop
push
orb
ds
xor
cltd
or
push
xor
inc
push
mov
mov
lcall
xor
fisttpll
repnz
cltd
inc
or
lret
loope
inc
into
mov
jne
popf
add
xor
xchg
cmp
mov
jns
xchg
fucom
push
mov
insl
mov
scas
out
dec
mov
pop
adc
ret
lahf
and
sub
mov
sub
mov
adc
mov
std
jmp
js
push
xchg
lret
mov
mov
mov
sub
stos
ret
xchg
mov
loope
imul
jnp
movsb
cmp
in
movsb
jg
sbb
pop
fistpll
xchg
jle
pusha
aaa
cmp
push
jae
test
push
sbb
out
popf
xchg
sarl
push
dec
inc
lock
stos
ret
xchg
ds
push
lea
jle
scas
frstor
adc
loopne
iret
cld
add
repnz
movsl
and
hlt
test
lret
sub
or
xchg
sub
sahf
mov
xchg
push
add
and
pop
xor
sbb
sahf
lcall
cmp
inc
ss
and
popa
movsb
sbb
cmp
stos
jp
cltd
ret
cmp
shll
jecxz
cmp
lcall
jno
pop
fdivrl
adc
pop
test
xchg
push
aaa
xor
xchg
shrl
nop
mov
mov
push
fndisi(8087
jg
ret
cmpsb
xchg
in
out
pushf
enter
daa
or
push
popa
pop
loope
push
cld
sub
mov
dec
fidivrl
xchg
and
into
rcrl
cld
or
dec
cs
add
or
xor
sbb
pop
mov
les
xor
lcall
dec
fmull
xchg
sub
lret
adc
inc
scas
add
flds
pop
mov
cmp
push
shrb
mov
dec
sub
pop
pop
jo
bnd
sar
stos
mov
jb
pop
ljmp
cmp
addb
jg
loop
js
stc
pushf
icebp
push
sbb
adc
add
fdiv
popa
out
imul
mov
out
insl
cmp
and
cmp
push
in
mov
push
xor
and
leave
cmpsb
adc
imul
adc
mov
lods
imul
add
out
out
sub
inc
mov
es
mov
incb
push
sbb
jmp
loop
inc
rcrl
push
les
test
sbb
add
jmp
icebp
jns
sub
dec
pushf
xlat
add
cs
push
mov
nop
popf
jg
dec
lods
pop
lods
jb
out
jbe
loope
or
imul
mov
mulb
outsl
and
mov
movsb
aaa
dec
pop
xchg
fcmovne
push
pop
out
inc
jle
sub
aas
adc
jecxz
jge
dec
mov
pop
das
xor
add
jo
mov
cmp
inc
mov
jmp
mov
pushf
or
lret
dec
push
call
mov
mov
adc
xorb
sub
ja
ret
mov
stos
es
das
sub
cwtl
decb
add
cmpsl
pop
pop
pop
ljmp
in
lods
loope
fdivrs
imul
mov
lock
dec
add
sub
test
stos
mov
cmp
push
dec
mov
fistps
xchg
sbb
daa
inc
nop
rcrl
add
loop
adc
inc
fdivrs
xor
orl
lret
xor
cmpl
fbld
andl
xchg
test
test
mov
dec
insb
loop
inc
inc
aaa
or
adc
and
sbb
popl
dec
sahf
int3
lea
clc
sub
loopne
add
stos
out
jle
lock
mov
cmpsl
mov
lcall
push
xor
mov
js
fmull
jnp
ja
sub
inc
mov
xor
aad
xchg
xchg
push
orl
out
adcb
movsl
or
sbb
jmp
and
dec
jnp
push
imul
push
pop
pusha
mov
add
xlat
movsl
pop
ret
lods
pop
xchg
push
ljmp
pop
movsl
push
fsubrl
popf
lods
mov
push
push
and
repz
jae
mov
sub
les
push
sti
lock
or
iret
pop
xadd
mov
movsb
leave
sbb
lods
hlt
hlt
shrl
and
sbb
or
ss
das
mov
or
cld
mov
push
loope
pop
pusha
adc
fsubp
insl
mov
rcll
shlb
mov
inc
scas
outsl
cmp
xchg
movsb
mov
or
jbe
and
jge
addr16
sahf
cmp
push
jl
jno
imul
add
inc
xor
out
stc
aaa
scas
outsl
sub
loope
adc
into
push
cmpsb
and
inc
push
sarb
in
jbe
popf
enter
daa
pop
lods
pop
push
xchg
ss
std
cmp
mov
inc
ds
or
movsl
jp
and
nop
lahf
lcall
xchg
sbb
test
addr16
lods
sbb
pop
xlat
insb
sti
js
xor
pop
cmp
lahf
lcall
neg
mov
mov
outsb
jns
pop
adc
and
xchg
xchg
cltd
mov
cli
adc
cmpsl
in
and
loopne
ret
xchg
adc
sbb
mov
pop
out
jb
lret
xchg
rcll
sbb
mov
push
test
xchg
sbb
mov
loop
data16
push
test
cmpsb
mov
jge
dec
jp
cmp
lods
adc
cli
jle
xor
out
xor
inc
addr16
dec
ret
imul
push
pop
xor
cmp
imul
jnp
dec
lods
lods
push
mov
sub
out
adc
int3
inc
xor
xchg
or
movsl
push
push
gs
mov
loopne
mov
mov
or
cmc
les
adc
sbb
sub
iret
xlat
sub
cmpsl
pop
int
xlat
adc
push
out
jmp
adc
repnz
aad
mov
nop
js
test
or
dec
jb
outsb
test
je
in
outsb
jecxz
lahf
push
mov
fnstcw
out
shr
mov
sbb
and
mul
jnp
xor
ljmp
jne
aas
mov
pop
mov
mov
insb
pop
rcll
repnz
mov
insl
cwtl
sti
cmc
xchg
mov
dec
mov
sarl
mov
mov
mov
dec
lock
push
fisubrl
pop
es
jae
inc
sub
loop
ret
sbb
shrb
enter
or
or
frstor
inc
xchg
lods
dec
jbe
mov
mov
and
lret
mov
jne
leave
cltd
and
or
and
push
into
neg
ljmp
xchg
pop
or
fiaddl
push
pop
lea
stos
xchg
loope
out
stos
cmpsl
fs
adc
pop
push
pmulhuw
ret
pop
xchg
xor
push
xor
push
js
xor
cltd
iret
mov
les
dec
dec
insl
inc
test
push
js
cs
pop
xchg
fdivrp
outsb
or
xor
fwait
mov
leave
outsb
add
addr16
mov
jp
shlb
std
jns
add
in
jno
xchg
add
mov
fcomps
mov
sbb
out
mov
pop
sub
clc
dec
dec
mov
into
xor
ss
xchg
or
jmp
pop
push
sbb
push
out
xor
bound
mov
clc
mov
and
rclb
sub
jle
mov
in
push
pusha
push
sti
fs
out
xchg
ret
inc
pop
into
or
sbb
push
loopne
lahf
push
cmp
dec
rorb
enter
rorb
sub
add
push
iret
imul
scas
mov
xchg
movups
jnp
iret
mov
subb
aas
lods
enter
dec
inc
and
aas
mov
inc
scas
sti
or
add
push
pop
int3
cmp
cmp
out
clc
fiadds
mov
rorb
push
and
add
movsb
mov
jbe
repnz
mov
fcoms
cmp
sahf
mov
jne
inc
dec
je
add
xor
dec
xor
scas
dec
mov
or
jno
mov
cmpsb
cld
cmp
enter
daa
push
insl
fwait
push
jl
loope
int3
mov
cmp
dec
lcall
and
adcb
sbb
in
xor
jno
outsl
pushf
clc
pop
mov
js
ret
js
arpl
loop
dec
fsubl
hlt
sub
dec
cmpsl
adc
cld
push
add
mov
mov
xchg
mov
jecxz
and
jae
xor
int
adc
sub
iret
pop
outsb
inc
xchg
lret
sub
sub
rorb
inc
movsb
sahf
mov
inc
test
sbb
jg
xchg
sub
push
mov
or
ja
xor
adc
push
xchg
fsubs
sbb
out
lret
lds
xchg
inc
fidivrl
mov
mov
cmpsb
into
xor
jp
inc
das
fidivl
add
jge
repnz
jns
les
mov
lods
aaa
fs
sbb
jns
sub
sbb
and
fucomip
cld
jmp
sti
push
aad
mov
lcall
stc
mov
fldl2t
test
repz
cs
subb
push
outsb
rcl
insl
stos
pop
or
adc
ret
mov
sub
cld
ljmp
push
jmp
aad
mov
push
das
and
jb
and
dec
iret
cld
push
je
add
jecxz
pop
jge
cmpsb
mov
call
insl
add
mov
dec
xor
jge
aad
mov
enter
lock
aas
push
dec
in
mov
add
and
decb
shll
je
ficomps
mul
cs
stos
push
cmp
or
loopne
sub
hlt
mov
fstps
lock
rolb
pop
sub
mov
xchg
es
push
in
push
cli
testl
fists
popa
lret
lods
mov
cli
mov
mov
jns
add
and
adc
push
loopne
cltd
push
xor
dec
hlt
push
roll
int3
clc
push
adcl
push
add
lea
rorl
cmc
sub
out
or
push
dec
push
ljmp
xor
mov
xor
ret
mov
xchg
iret
sbb
lods
sti
test
mov
xchg
fdivp
inc
jne
out
lea
aas
push
pop
les
push
inc
add
mov
fidivrs
lods
cmp
not
xchg
push
push
mov
andb
inc
xor
inc
push
pop
jp
push
clc
mov
scas
mov
mov
in
push
dec
mov
sub
mov
popf
shr
adc
loop
jmp
sub
ja
minps
stos
out
dec
or
pop
cmp
mov
int
mov
cmpsl
jnp
adc
insb
in
jecxz
pusha
in
jge
fists
mov
or
dec
jae
xchg
fsts
bound
fs
pop
fsubr
fcmovu
repz
sbbl
scas
push
mov
mov
outsb
iret
sbb
or
pop
dec
cmp
or
out
mov
xchg
arpl
inc
inc
sub
sbb
add
inc
sub
mov
add
je
daa
fcomi
pop
mov
jmp
fwait
shrb
xchg
and
lret
cmp
jmp
jbe
aaa
push
jge
popa
std
sbb
adc
xlat
inc
in
cmp
testl
cmp
dec
xor
movsb
cmpb
movsb
pop
test
cmp
in
inc
outsl
shll
adc
cmp
inc
add
daa
add
pop
cli
loope
mov
mov
int3
ds
cltd
movsl
mov
mov
mov
dec
lahf
cmp
push
hlt
sbb
pusha
sbb
adc
mov
fidivrl
inc
pop
and
call
pop
lcall
lods
fmull
push
cmp
aas
or
adc
xlat
inc
es
push
mov
jg
mov
mov
mov
push
leave
inc
and
jmp
jns
pop
in
cltd
push
lret
dec
rol
pop
mov
mov
sbb
xchg
scas
sahf
das
popf
mov
orb
or
mov
pop
stc
roll
fs
xchg
ret
lret
xchg
mov
fsubs
xor
mull
mov
xor
cmp
cld
lods
or
push
dec
adc
or
pop
or
outsl
test
daa
imul
push
in
push
cld
lcall
addr16
in
cmp
mov
mull
addr16
pop
adc
jmp
js
stos
movsl
dec
loopne
cmpsb
in
movsl
inc
cmovb
fldenv
pop
les
mov
xchg
inc
pushl
cmp
arpl
adc
dec
aad
fmuls
fisubrl
mov
cld
nop
movsl
pop
dec
leave
inc
shlb
or
je
imul
test
dec
cmpsl
call
in
mov
incb
sbb
sub
pop
js
jmp
adc
aas
aas
icebp
sahf
mov
movntps
jmp
in
shr
push
xchg
testb
push
cwtl
jno
test
push
enter
jno
cld
xor
fisubs
sub
xorb
icebp
fs
sbb
repnz
jge
push
aam
mov
ret
ficoms
rorb
enter
std
dec
mov
pushf
cmpsl
add
mov
popa
loope
sti
lods
and
addr16
aam
shll
cmc
mov
dec
mov
pop
cltd
mov
test
rcrb
xchg
mov
fnstsw
dec
mov
xchg
mov
sbb
adc
sarl
jecxz
or
jo
jb
sahf
and
jno
mov
dec
xor
inc
stos
mov
lret
dec
sbb
movsb
xor
sub
insl
dec
inc
ljmp
js
test
push
add
and
mov
sti
pop
jns
fsubp
adcl
scas
mov
add
push
cmpsb
or
jo
mov
and
mov
push
cmpsl
mov
jne
out
mov
cli
lock
hlt
mov
std
jmp
hlt
gs
cmp
sahf
out
clc
push
sub
xchg
pop
jle
fs
pop
stos
imul
and
jne
insb
sbb
ret
cmpl
outsb
in
rorb
adc
fbstp
rol
xchg
xor
cmp
pop
inc
mov
pop
adcl
and
mov
inc
adc
fimull
movsb
sbb
scas
imul
imul
lcall
push
inc
repnz
test
subl
arpl
inc
sub
mov
xchg
xchg
leave
push
lods
push
fiadds
adc
add
mul
fmulp
xchg
xchg
lds
dec
rol
fwait
mov
add
cmp
pop
movsb
inc
push
test
jbe
lock
out
mov
sbb
shll
cmp
inc
shll
je
jl
in
sub
insb
adc
push
in
xor
jmp
xchg
scas
or
adc
dec
adc
push
pop
fstl
inc
mov
paddsw
jp
enter
daa
add
fldt
addr16
loope
mov
cmp
xor
scas
mov
scas
dec
and
pushf
lahf
pop
int
cmpb
sub
sub
ds
jl
xor
test
js
mov
les
nop
out
fdivrl
fnstcw
adc
mov
inc
mov
lcall
jge
mov
ficomps
push
int3
into
pop
int
push
inc
sub
mov
rcll
mov
cmp
sbbl
sub
in
jg
mov
loop
addr16
stc
js
xchg
fs
out
ret
adc
push
mov
cmp
fstpl
cli
pop
add
xor
dec
cmp
inc
mov
into
not
out
cmc
shrb
outsl
mov
imul
push
inc
data16
or
adc
and
and
or
in
shrb
sti
and
mov
loopne
ja
les
sbb
mov
xchg
rolb
repz
xor
xchg
push
add
sbb
fstpl
jg
out
adc
xchg
fcomps
and
sbb
repz
and
sub
jb
and
dec
mov
and
imul
dec
fcoms
cmp
cmp
fstpl
dec
or
jge
test
sub
inc
lcall
aas
nop
repz
idivb
sarl
imul
ret
cwtl
sub
lahf
mov
xor
test
icebp
pop
add
cld
pusha
add
lret
or
and
movsb
mov
lock
pop
test
cld
nop
adc
in
mov
sub
aam
sbb
ret
lds
es
inc
cwtl
insl
pop
in
dec
dec
mov
jno
add
ljmp
lahf
lods
lea
mov
negl
and
pushf
fidivrl
insb
cmp
add
cltd
lds
push
test
jne
push
push
push
aam
pop
lret
xor
lret
mull
sbb
jg
sarl
mov
out
ror
mov
in
addr16
mov
sub
xor
jecxz
or
adc
xchg
fstpl
test
sub
dec
cmp
rorl
test
push
movsb
xchg
jns
sbb
mov
call
pop
bound
repz
in
mov
mov
mov
cmpb
or
lds
jge
scas
mov
xchg
push
or
jecxz
popf
out
shll
push
xchg
orl
mov
stos
jne
adc
shl
or
mov
stos
fisubs
inc
and
out
insb
mov
mov
jg
in
add
and
lods
ret
dec
pop
jae
mov
jae
ffree
push
call
cli
mov
test
sahf
fidivrl
push
cmp
fstps
push
scas
int3
out
push
pop
popf
adc
and
xlat
jo
repnz
pmuludq
arpl
inc
fcoms
adc
push
sub
or
pop
add
and
pop
sbb
fcomp
insb
xor
vpmaxsw
ficomps
insb
and
pop
mov
iret
cmp
jbe
sbb
xchg
sbb
sbb
push
inc
inc
adc
icebp
dec
rcrl
add
test
pop
imul
out
inc
push
shrb
inc
in
cmpsb
push
callw
xlat
lret
enter
daa
add
mov
loope
adc
ret
addr16
sub
hlt
ds
and
xchg
leave
inc
and
xor
lahf
jnp
jecxz
dec
enter
popa
push
add
push
xor
push
mov
loope
js
icebp
or
xor
mov
push
out
je
arpl
loope
push
and
adc
lea
psubw
mov
lret
add
mov
fnstcw
push
iret
leave
mov
sub
shlb
mov
loope
out
fstps
sbb
or
test
leave
pop
addb
jg
int
loop
and
stc
das
jmp
shlb
sub
pop
jmp
cmp
cwtl
popf
jo
and
dec
xor
cmp
pop
inc
or
dec
test
fstps
mov
cltd
add
adc
out
outsl
inc
and
adc
subb
mov
and
ror
push
sbb
mov
xchg
mov
loop
jp
cwtl
iret
xor
in
cmp
notl
xor
mov
daa
shl
lock
stos
pop
jecxz
inc
inc
xor
mov
lret
dec
mov
xchg
leave
jl
sbb
sbb
xlat
and
xor
pop
rclb
ffree
sub
cs
pop
jmp
pop
and
jle
push
aad
arpl
nop
in
ret
orl
xor
cmp
in
jecxz
sbb
scas
jb
lea
xlat
mov
mov
cmp
dec
repz
fbstp
inc
in
flds
mov
jge
gs
stos
adc
sti
inc
testb
push
std
imul
mov
das
mov
cld
mov
lret
js
loope
repnz
pop
fidivs
fistl
xchg
sarb
sahf
and
ret
push
xor
es
test
cmp
lods
push
mov
aam
out
setge
clc
lret
insb
mov
sbb
daa
and
aaa
aam
pop
mov
test
push
notl
scas
and
mov
outsb
jnp
sbb
fldl
nop
scas
xchg
push
jo
sbb
pop
xchg
pop
cmp
test
ss
addr16
sub
das
push
jnp
or
aas
lret
and
or
cmp
stc
ss
mov
rclb
mov
xchg
shl
dec
sub
xlat
inc
cmp
or
repz
inc
insb
in
add
rol
push
push
jp
bound
ja
jns
mov
xchg
inc
ljmp
xor
pop
jbe
icebp
ja
inc
je
fs
mov
mov
xor
push
dec
cmp
jge
mov
mov
mov
push
iret
jle
mov
sbbl
jmp
cwtl
mov
pusha
sbb
mov
dec
bound
push
jmp
and
jge
insb
repz
pop
jle
push
jmp
mov
jge
fbstp
sahf
ret
pop
pop
stos
push
inc
shrl
lcall
lods
jb
xor
or
nop
mov
sbb
push
int
sub
add
adc
adc
ss
xchg
repnz
out
push
leave
outsl
gs
hlt
imul
inc
xor
and
jae
pop
inc
stos
in
or
pushf
add
mov
call
bsf
bswap
add
sar
movsb
mov
es
inc
cmp
sbb
pop
jno
push
xor
mov
push
sbb
xor
adc
test
push
stc
imul
mov
push
in
mov
jo
in
scas
lret
push
sub
arpl
popf
push
adc
sbb
cmpsb
cltd
imul
stc
pop
adc
stos
pop
ds
add
cmp
sbb
sub
movsl
sarl
add
lods
fists
movsl
popf
inc
add
test
movl
xor
or
inc
inc
xor
jnp
inc
pop
lcall
pop
je
xchg
ds
mov
push
addr16
outsb
push
gs
push
pushf
push
mov
inc
lret
dec
loop
push
sub
and
cmp
int
cs
push
xchg
lret
mov
mov
sbb
ja
inc
sahf
sbb
das
andb
jg
jmp
push
stc
out
xor
insb
adc
pushl
pushf
test
out
fcoms
test
jecxz
jge
xchg
xor
mov
repnz
into
mov
mov
fwait
outsl
and
cmpsb
imul
insl
data16
lods
shl
orl
or
xorb
in
test
mov
and
mov
push
pop
adc
jle
loopne
inc
xor
iret
jns
inc
pop
aam
lds
loope
repz
sbb
push
adc
xlat
arpl
pop
dec
repz
xor
inc
pushf
flds
loope,pn
inc
aad
enter
jle
dec
out
add
notl
je
lcall
mov
test
sbb
mov
imul
cltd
orl
call
mov
popa
in
je
test
and
movsl
pop
aas
into
test
mov
xor
aaa
and
mov
testb
adc
pop
cwtl
mov
xchg
xchg
mov
push
mov
je
lret
out
xchg
mov
mov
cmp
bound
das
mov
shrl
bound
ret
jecxz
or
insl
in
insl
jno
test
mov
ljmp
clc
lods
arpl
arpl
cmp
or
mov
stos
outsb
imul
mov
adc
mov
stos
xchg
push
out
mov
rcrb
pop
push
cmp
imul
adc
cltd
add
push
push
cs
xor
xor
test
mov
mov
sarl
mov
xchg
inc
in
inc
rcr
dec
or
xor
push
ljmp
add
shl
call
add
in
mov
popf
mov
hlt
addr16
xor
ja
push
xchg
push
dec
mov
push
sub
imul
push
jne
jl
mov
mov
xchg
sub
xchg
daa
xchg
xchg
push
push
adc
sbb
lret
fbstp
popa
adc
stos
les
and
lea
xchg
jnp
xor
sbb
pop
pusha
pop
push
cmp
xchg
sahf
xchg
ret
pop
loope
addb
jae
xor
stc
popf
xchg
scas
repz
add
test
movsl
subb
fistpll
push
scas
xchg
adc
movsl
mov
test
repnz
fsubs
arpl
jo
or
out
sbb
inc
sub
or
movsb
pushf
add
push
call
pop
jp
jl
mov
loope
adc
loopne
popf
clc
mov
mov
xorl
push
test
or
jge
add
sbb
mov
in
cmp
jnp
dec
adc
adc
xor
adc
push
cld
jnp
test
push
add
push
loopne
mov
movsl
jle
daa
add
mov
loope
hlt
test
cltd
mov
cmp
in
movsl
movsb
sub
and
push
xchg
jae
sbb
iret
icebp
push
add
inc
pop
xor
mov
xchg
pop
shll
fisttps
pop
mov
test
xchg
and
fdivrl
cli
push
adc
inc
rorl
mov
in
and
fs
loopne
imul
jnp
aad
or
sub
pop
pop
lret
xlat
rcrl
sbb
mul
test
inc
mov
in
push
loop
cmp
popf
fs
sbb
ss
sarb
push
pop
mov
cli
mov
mov
enter
ja
ja
fistl
into
lahf
jle
cmc
daa
xlat
loope
push
or
adc
jne
imul
lret
xchg
adc
pop
or
mov
inc
out
pop
dec
sub
push
xchg
addb
les
ljmp
cmp
loopne
mov
lods
inc
pop
or
frndint
xchg
pop
repz
cmp
mov
rcrb
je,pt
mov
test
adc
cs
pop
outsb
aad
xchg
jne
lcall
jb
scas
inc
dec
and
ss
push
or
sub
mov
xchg
lea
cwtl
call
call
push
or
leave
mov
fistl
in
pop
add
mov
inc
and
mov
jmp
and
sub
dec
shrl
call
sub
mov
repnz
pop
sbb
mov
or
icebp
fldl
lret
push
test
mov
std
and
mov
pop
data16
dec
sub
inc
aam
inc
jnp
jb
cmp
ficoms
cs
mov
sub
popa
cmp
out
call
mov
sub
fs
leave
bswap
add
std
cltd
push
mov
sub
push
mov
cmpsb
push
clc
jl
jecxz
sarb
movsl
sbb
dec
rol
jbe
pop
and
stos
sub
push
out
cld
xchg
xchg
mov
jns
paddw
mov
enter
and
cmp
jge
mov
pop
fimull
inc
out
test
xor
xchg
pushf
hlt
dec
adc
loope
push
dec
scas
fwait
mov
cmc
cwtl
add
or
pushl
andb
jae
jns
dec
in
les
xchg
shlb
sub
inc
ja
in
fdivrs
cmc
test
xor
mov
adc
call
mov
aaa
xlat
out
jo
ret
jo
jmp
and
xorl
jne
sahf
out
fsubrs
xorb
addr16
or
stos
aaa
pushf
xchg
and
push
add
push
jle
in
sbb
pusha
hlt
ss
fbstp
adc
inc
out
adc
rol
lods
push
xor
mov
mov
inc
sbb
ss
sbb
dec
mov
push
adc
push
in
fwait
jecxz
or
xchg
iret
hlt
jecxz
repnz
pop
mov
pop
lock
add
daa
arpl
push
or
imul
or
in
dec
add
mov
pop
test
lret
sbb
jb
pop
shrb
sub
dec
inc
mov
inc
mov
movsb
jo
in
push
rorl
call
sbb
mov
cmp
iret
fdivrs
in
dec
push
mov
and
jo
mov
push
iret
repz
aam
mov
inc
cmp
cmpsb
lahf
jecxz
in
movl
daa
add
lea
lods
add
dec
fwait
push
sub
pushf
ja
aaa
inc
sarb
fbld
and
inc
add
push
xor
xor
inc
or
add
fistpl
adc
js
push
sub
repnz
lock
in
shll
fs
lea
cs
jmp
rcrb
mov
jno
inc
mov
cmpsl
mov
mov
jg
aam
adc
int
xchg
std
sub
jmp
pop
push
jae
shll
aas
sbb
mov
sahf
pop
xor
test
adcb
in
nop
xchg
push
push
xchg
enter
cmp
pop
out
and
or
leave
pop
mov
cli
jecxz
sbb
lahf
test
cmp
sahf
orb
add
cmc
out
push
lret
xor
hlt
outsl
loopne
rclb
in
fsubrs
aad
adc
push
mov
loopne
pop
lods
mov
xor
out
sbb
mov
jle
orb
lcall
loopne
adc
pop
inc
xchg
int3
inc
imul
fnstenv
jns
in
or
xchg
adc
fidivrl
leave
fstl
pop
mov
mov
loop
imul
xchg
or
movswl
dec
movsb
cli
push
jb
lcall
cmpsl
pop
clc
jecxz
jl
mov
stc
mov
es
pop
or
daa
jne
cmpl
mov
pop
cmpsl
in
inc
mov
cmp
ja
aas
or
jb
adc
lea
sarl
hlt
not
lea
pop
in
int3
cwtl
sbb
mov
add
jle
mov
xchg
cld
or
sti
lret
mov
xchg
ret
lock
sbb
js
xchg
sarb
ret
call
aam
incb
popa
xchg
fildll
jg
dec
sahf
jmp
cmpsl
inc
mov
popa
push
fsubl
mov
cmpl
das
cwtl
int
or
imul
mov
add
mov
test
loopne
mov
lock
push
arpl
mov
clc
mov
jno
adc
sbb
cmp
pop
cmp
dec
out
pop
add
xchg
add
mov
subps
nop
xor
lea
xor
sahf
adc
fldcw
dec
and
push
test
or
cmpsl
inc
pop
dec
add
in
pushl
iret
or
xor
das
push
xor
aaa
add
sar
pop
icebp
fidivl
mov
cmp
mov
cs
mov
inc
jmp
pop
cmpsl
lods
adc
rorl
jp
cwtl
out
or
push
mov
test
sahf
mov
stc
fwait
out
dec
inc
dec
xchg
int
pop
jmp
jmp
es
imul
adc
sbb
pop
mov
stos
addb
cmp
push
insb
xor
es
mov
movsb
in
in
jne
xor
iret
push
ret
pop
pop
dec
sub
inc
repnz
jae
pushf
int3
push
hlt
xor
popf
in
sarb
and
js
lea
dec
sbb
xchg
imul
icebp
scas
pop
adc
push
xor
fcoms
jecxz
jg
push
adc
repnz
arpl
aam
sub
dec
inc
xchg
arpl
fadds
in
daa
inc
daa
jg
or
ljmp
test
jno
fdivrp
cmp
dec
sbb
fcmovnb
jns
filds
sbb
cmp
movsb
sti
movswl
mov
jbe
pop
popa
jge
lods
sbb
jbe
sub
push
hlt
sub
jno
add
mov
mov
inc
xor
cld
cmp
mov
test
push
clc
xchg
ss
and
fmul
fwait
test
jmp
mov
addr16
pop
data16
sub
push
fstpt
out
dec
ds
sbb
push
mov
cmp
cmp
push
xor
dec
pop
setbe
js
repnz
xor
out
push
inc
test
adc
adc
sbb
jl
adc
stc
mov
mov
pop
mov
shlb
pop
jns
fstpt
jno
mov
outsb
in
jge
lods
rorl
mov
xor
add
test
dec
loop
mov
outsb
jg
push
arpl
and
popf
stc
or
fs
roll
adc
push
ss
idivb
test
mull
mov
cli
push
out
cli
xor
xor
jb
into
gs
cmc
mov
ret
xor
add
dec
adc
imul
dec
add
leave
add
cli
out
out
push
cmp
fs
push
mov
jmp
out
jbe
mov
fistpl
pop
xchg
xchg
jnp
inc
jle
jne
push
push
repz
popa
or
jns
pushf
cmp
push
xlat
and
add
repnz
cmp
xchg
jmp
loopne
or
inc
aad
push
jl
push
or
dec
add
xchg
jb
mov
add
repnz
ffree
mov
cld
and
mov
cmp
shl
xchg
jno
outsl
pop
dec
pop
dec
into
xchg
add
inc
pop
jle
aas
stos
inc
mov
pop
lea
ror
in
notb
es
cwtl
shll
mov
test
mov
mov
add
aaa
rcll
lret
xor
mov
fidivl
jae
ss
push
cmp
push
inc
dec
out
jecxz
dec
ret
nop
or
and
pop
sub
add
ljmp
mov
movsb
popa
pop
mov
cmpsb
loopne
and
mov
pop
mov
mov
ror
fcmove
jae
fwait
stc
fsts
dec
and
and
loop
push
adc
adc
outsb
and
stos
or
jmp
ret
xchg
dec
inc
push
out
inc
btc
xor
inc
or
cmp
xor
adc
mov
fsubr
mov
pop
jb
loopne
scas
xchg
ja
dec
div
sub
adc
call
push
rorl
add
aas
jnp
pushl
stc
bound
and
out
test
ret
aad
xchg
jge
outsl
mov
xchg
mov
pop
bound
ja
test
jp
lock
loop
mov
lock
jne
xchg
inc
mov
into
pop
out
shlb
mov
call
mov
out
and
js
sbb
mov
sbb
ds
insb
lahf
push
jle
mov
jle
xor
in
and
sub
fucomip
shl
ret
in
pop
xchg
xor
jae
mov
push
mov
iret
popf
or
or
and
fcoms
xor
mov
sbb
xchg
sbb
lods
sub
jp
mov
iret
mov
in
repnz
or
arpl
jae
inc
cmp
rep
push
cmpsb
pop
or
add
push
pop
pop
jo
ficomps
into
in
shlb
mov
jb
xchg
cmp
xchg
ds
jno
and
int3
lods
jge
push
xchg
xor
in
sbb
push
adc
dec
in
jle
push
jo
fdivs
and
inc
scas
inc
sub
jg
test
leave
sub
sbb
movsl
rolb
in
xchg
add
enter
daa
incb
push
pop
int3
loope
push
lret
loop
cmp
mov
movsl
mov
mov
lahf
push
xchg
ret
cmpsl
js
je
adc
xor
ljmp
nop
and
pop
jo
xor
dec
dec
xor
mov
xchg
sub
jmp
outsb
hlt
in
adc
aam
mov
and
mov
scas
sub
repnz
int
mov
push
mov
push
lret
ret
mov
mov
call
sahf
movsb
jge
test
enter
jg
loop
in
stc
ret
mov
scas
adc
sub
cmp
aas
dec
clc
neg
imul
dec
inc
loope
clc
inc
out
or
cmpsb
xchg
dec
mov
cmp
fadds
mov
mov
jnp
pusha
imul
sbb
xchg
add
stos
lods
outsl
ret
xor
fstpl
lock
or
sbb
sti
loopne
push
gs
hlt
loopne
xor
addr16
inc
xchg
inc
push
mov
xchg
xchg
cwtl
movsb
rcrb
aas
clc
cmp
pop
pop
or
nop
out
pushf
test
jmp
in
ss
outsb
inc
aad
inc
pop
nop
sub
cmp
pop
sbb
or
dec
xchg
add
push
push
or
call
sub
or
scas
mov
mov
sahf
mov
outsb
inc
les
jae
mov
mov
adc
ljmp
leave
pop
negb
lock
lods
inc
ds
mov
jae
out
xchg
mov
bound
cld
bound
lret
mov
sbb
lock
mov
rcr
addb
aam
aam
addr16
pop
cs
insl
mov
dec
dec
xchg
lods
pop
cmpsl
std
xchg
adc
adc
cmpb
mov
leave
cmp
and
loopne,pt
pop
or
add
cltd
jg
in
and
jmp
xchg
clc
sub
dec
cmpsb
sbb
sub
pop
nop
sub
out
and
sar
push
ret
bndldx
xchg
test
dec
xor
fstl
xchg
out
dec
out
mov
test
outsl
lret
xchg
in
fldl
sbb
or
test
dec
outsl
pop
push
jbe
faddl
pop
fistpl
bound
cmp
sahf
and
in
fsubrl
xchg
int3
mov
mov
sbb
int3
lods
jp
sti
int3
mov
cmp
mov
pop
sub
jne
mov
mov
or
pop
push
dec
xchg
subl
out
jmp
or
outsl
addr16
or
stos
nop
imul
rcrb
cmp
ss
leave
dec
in
mov
rcr
or
push
xchg
pop
mov
cmp
ds
push
jp
jp
xor
je
decl
ljmp
xor
out
aad
mov
push
frstor
adc
jnp
repnz
or
hlt
loop
movsl
arpl
lods
std
inc
inc
adc
push
sub
mov
add
mov
rcrb
xor
fidivrs
notb
rolb
mov
add
adcb
rclb
mov
jge
out
sbb
jns
aaa
iret
stc
xchg
cmp
mov
into
aam
clc
lret
add
sbb
mov
sub
lds
and
xchg
pop
test
xchg
mov
inc
out
cwtl
cmpsb
sub
in
jl
mov
xchg
fcmovbe
daa
std
imul
lea
sub
inc
and
inc
movsb
jl
pop
xchg
and
mov
stos
ret
imul
xor
sub
pop
pop
dec
jb
lret
ljmp
mov
sub
adc
icebp
fnsave
outsb
push
inc
je
xor
test
scas
pushf
lock
mov
popf
sub
mov
mov
pop
push
loope
scas
int
fnstsw
sub
aad
lret
loopne
js
rorl
sar
inc
xchg
js
or
xchg
and
imul
fidivrl
fs
fstl
hlt
loopne
ss
xchg
cmp
cli
lds
cli
jl
out
xor
sarl
push
scas
or
mov
cmc
inc
xor
outsl
jge
sub
pop
shrb
out
fadds
sub
imul
jno
mov
push
ds
pop
mov
mov
mov
add
incb
xor
gs
loop
xchg
fistpl
inc
movsb
ret
fadds
arpl
or
sbb
xchg
pop
aad
sbb
jp
js
sahf
movsl
inc
pop
lret
jne
adc
mov
pushf
xor
ljmp
ror
dec
aad
sahf
mov
push
and
dec
rcll
dec
insl
and
and
inc
fs
mov
call
in
jno
add
push
cmp
push
adc
int
cs
nop
jge
inc
dec
dec
icebp
inc
mov
add
jmp
daa
jl
js
and
loopne
shll
mov
std
push
inc
mov
dec
sbb
mov
cmp
lea
das
mov
mov
mov
loop
adc
mov
sub
sbb
ret
scas
xchg
push
es
dec
in
cltd
cmpsl
cld
lods
mov
popa
cltd
pop
jo
jp
inc
mov
in
mov
mov
inc
mov
push
cltd
inc
adc
cltd
mov
xlat
push
lods
jae
fnsave
mov
push
lcall
sbb
js
cmp
loop
call
sub
ret
push
popf
insb
jbe
jns
ja
adc
mov
cld
adc
xor
cli
adc
loop
mov
sti
les
and
je
fstpl
mov
shr
icebp
fwait
jns
xor
sbb
add
jne
inc
pushl
enter
xchg
and
fnstenv
pusha
xchg
sbb
mov
cltd
jae
sbb
cmp
jae
jp
mov
fdivrs
add
dec
popf
scas
cwtl
jne
out
sub
pusha
mov
out
in
add
jmp
dec
je
xorl
out
and
sub
outsb
dec
pop
addr16
adc
stos
add
and
imulb
mov
jle
push
test
in
arpl
cltd
inc
fildll
jg
sub
lods
js
adc
movsb
jae
mov
push
cmp
push
dec
mov
ds
cli
fisubl
jno
xchg
in
cmc
sbb
sub
imul
jns
xorl
jae
je
ds
jo
out
repnz
stos
or
mov
hlt
sub
sub
or
push
movsb
sub
mov
outsl
add
sub
int3
push
sbb
fsubp
inc
xor
mov
rcrb
ret
and
sbb
movsb
pushf
mov
xchg
jbe
or
daa
pop
adc
cmpsl
loope
aaa
mov
xor
xor
jno
imul
and
pop
dec
lret
push
ss
cmp
xlat
dec
scas
add
aas
push
sbb
shrl
pop
xchg
aam
jbe
cmpsb
stos
lea
in
arpl
enter
daa
cld
push
fsubrs
xor
loope
lahf
mov
mov
imul
jle
andl
jb
lahf
push
testb
loop
loop
jbe
jns
and
or
ja
js
inc
outsl
pop
out
mov
push
dec
add
fcoml
jnp
sub
cmpb
xchg
cmpsb
adc
mov
vpmacssdql
adc
mov
call
mov
int
adc
adc
dec
pop
fs
cwtl
lret
rorl
xor
inc
rcrl
clc
aad
ljmp
addb
out
add
mul
faddl
or
xor
jecxz
lahf
jecxz
adc
sbb
mov
test
negl
push
cli
scas
sbb
js
dec
cmp
into
push
cmpsb
jg
or
xor
adc
adc
xchg
push
imul
mov
data16
dec
ret
add
out
sub
or
test
sub
sti
xor
cmp
loopne
pushf
ja
mov
jb
jle
les
push
or
je
addr16
push
jp
sbb
mov
mov
pop
jle
adc
push
sti
pushf
fcmovnbe
adc
xor
jle
sub
loope
aam
jb
dec
xchg
out
je
xlat
aaa
jecxz
fs
mov
int
sbbb
adc
arpl
mov
or
adcl
les
pop
xor
inc
rolb
repz
mov
ret
push
enter
mov
shll
and
std
cli
daa
jmp
add
je
insl
sbb
sbb
xchg
adc
lcall
add
fsub
push
lock
mov
sub
inc
aam
and
ret
cmp
and
clc
dec
mov
das
ljmp
lods
in
loope
lret
mov
dec
pusha
fs
add
sahf
pop
cltd
jge
sub
lods
xor
mov
fstl
jmp
hlt
sbb
scas
into
pop
out
mov
jmp
mov
js
cmp
fsubs
add
xor
insb
repz
in
and
and
mov
stc
push
inc
pop
xchg
std
or
and
fwait
test
enter
mov
add
push
cli
bound
mov
jns
test
daa
xchg
push
jecxz
iret
dec
mov
pop
xchg
nop
cmpsb
ja
lahf
push
jp
sub
loopne
arpl
lahf
dec
sbbb
mov
jnp
lret
lahf
movsb
xchg
sbb
into
jmp
pop
adc
addl
push
out
aam
sub
imul
sbb
xchg
mov
insb
loopne
add
push
xchg
jle
fadds
sbb
sti
jecxz
fisttps
inc
ret
in
sub
inc
push
push
jb
fcompl
add
mov
jge
addr16
lock
xchg
jmp
mov
imul
xchg
push
dec
pusha
pop
adc
sbb
iret
rep
repnz
or
mov
add
js
inc
arpl
in
dec
inc
inc
sbb
push
and
or
in
in
add
jl
push
insb
call
fiadds
inc
shlb
mov
sub
jae
daa
lods
push
pop
sub
pop
jge
scas
adc
dec
shrd
xchg
add
sub
jl
ret
cmp
push
sbb
addr16
xor
scas
scas
jecxz
es
out
push
pop
test
sub
test
cmpsb
cs
in
dec
into
ret
andb
inc
push
icebp
loope
cli
icebp
sub
addl
gs
mov
test
xor
in
push
sbb
add
add
stos
insb
xor
outsl
sbb
pop
stos
mov
inc
xor
pop
sub
mov
push
lahf
xor
mov
out
outsb
sbb
jmp
shlb
jecxz
pop
test
mov
shll
adc
out
sub
sarb
pop
jecxz
fxch
dec
repz
pop
sbb
repz
lea
and
lahf
sbb
outsl
popa
ret
stc
out
jg
sub
adc
lea
cmp
jo
sbb
cli
loop
or
cmp
hlt
mov
jne
add
icebp
mov
cmc
shll
jbe
cmp
lret
sbb
adc
std
stc
add
pop
outsw
mov
lods
and
dec
mov
jbe
out
ja
sub
mov
cmp
xchg
dec
mov
decb
fwait
gs
mov
pop
fildl
inc
lret
flds
rol
and
outsl
repz
call
inc
sbb
lock
xlat
sbb
sbb
leave
ljmp
lret
sub
push
aad
jge
nop
mov
adc
jb
jae,pt
in
add
je
mov
jecxz
enter
cmpb
in
iret
call
loop
mov
out
lret
mov
push
fldt
jno
pop
cld
imul
cmp
bound
aas
daa
mov
dec
mov
insl
out
roll
sub
cwtl
mov
cmpsl
xor
dec
ljmp
jecxz
and
lock
out
or
mov
je
lock
leave
rclb
inc
sub
ds
aam
jl
ret
int3
daa
push
lock
test
add
ljmp
inc
lods
push
aaa
sub
xor
push
and
push
pop
subl
add
iret
inc
cltd
mov
add
les
imul
mov
and
dec
cli
fwait
sbb
out
ror
es
pop
xchg
test
stos
mov
out
dec
mov
loop
push
fiadds
xor
jge
xor
xor
mov
call
cs
fists
xchg
pop
icebp
dec
ret
or
sub
xor
xlat
cmp
push
pop
jno
add
stos
jae
out
xlat
mov
jns
popa
xor
out
out
xchg
mov
outsb
test
dec
jnp
ja
dec
jecxz
cld
push
stc
mov
fs
pusha
test
arpl
jne
xlat
imul
inc
jp
in
xor
repz
loop
or
out
negl
or
addr16
mov
stos
jmp
jns,pt
dec
std
sahf
jnp
test
jle
dec
push
in
fimuls
xchg
inc
cmpsb
fildll
popf
ret
out
pop
in
inc
sub
xchg
jae
lds
test
xor
mov
into
dec
xchg
inc
lret
fcoml
mov
mov
mov
push
xchg
mov
adc
mov
iret
cs
daa
icebp
es
ret
aas
sbb
hlt
pop
inc
dec
lret
popf
lods
inc
push
mov
callw
jge
int3
inc
out
loop
ret
adc
lds
movsl
mov
mov
cmp
mov
rcll
stc
jbe
sbb
jge
ljmp
or
in
cmp
ljmp
jns
sbb
xor
push
cld
mov
xor
lea
ds
ret
push
roll
test
cmc
dec
push
inc
xchg
push
scas
cmpsb
mov
outsb
in
xor
cmp
xorb
push
sub
cltd
sub
pusha
movsl
cmp
jns
ror
aad
and
sbbl
fwait
cwtl
sbb
jb
mov
xchg
icebp
insl
pop
rolb
adc
insb
or
pop
inc
stos
push
imul
push
fsubl
imulb
mov
adc
rolb
aad
inc
inc
mov
inc
int
movsl
push
out
jbe
and
call
add
push
sub
pop
bound
lret
dec
sarl
dec
sbb
mov
sahf
xor
mov
cmp
push
jg
push
sti
loop
repz
stc
sahf
cmp
mov
test
loope
jecxz
mov
int3
cmp
sub
xor
adc
pop
cwtl
cmp
adcl
aam
shl
cwtl
nop
ret
xchg
outsl
sbb
ficoml
imul
cmp
fcomps
push
lods
or
jg
loope
sbb
sub
xchg
sti
pushf
fdivl
testl
pop
cli
aas
jge
fnstcw
ljmp
xor
xchg
movsb
pop
sbb
sub
jne
in
inc
adc
push
gs
xor
pop
cs
sub
mov
fucom
dec
ficomps
jb
bound
je
mov
lret
lea
aas
call
popa
fwait
mov
add
dec
ss
fistpl
lcall
stos
ja
loopne
aad
mov
sbb
das
mov
clc
push
ljmp
popf
push
cwtl
jp
daa
mov
mov
jae
mov
push
sti
lret
pop
cmp
in
mov
mov
pop
lock
pop
das
mov
movsl
shrb
jb
sub
push
xchg
fisubrl
xchg
ret
pop
pop
fwait
es
insl
and
and
ljmp
test
mov
push
xor
mov
mov
xor
jne
adc
dec
push
cmc
xchg
imul
rolb
xchg
mov
out
and
outsl
pop
cmp
jge
mov
inc
out
mov
and
cs
setbe
inc
xor
test
xor
dec
test
xchg
push
fs
mov
ret
xchg
aad
inc
mov
insb
fwait
push
pop
cli
push
add
dec
add
and
lea
and
jp
push
in
sub
push
push
or
or
inc
ja
xorl
das
xor
adc
out
mov
sbb
mov
jne
loop
mov
and
xchg
xchg
mov
jnp
xchg
lods
inc
xchg
sbbl
shl
popf
sub
pop
scas
jecxz
pop
inc
test
les
inc
insb
mov
inc
jnp
shll
jle
push
in
pop
cli
pusha
xor
jl
data16
rcrb
cmc
push
inc
xor
les
xor
push
xchg
ret
popf
iret
sarb
push
sti
adcb
cmp
out
jp
xchg
imul
pop
push
adc
jl
repnz
push
leave
sahf
test
push
outsb
in
sbb
xchg
inc
dec
lock
or
jg
inc
and
xchg
pop
cmpsl
int3
sub
pop
repnz
fmulp
fdivr
lds
jb
shr
cltd
mov
push
lret
dec
mov
hlt
push
cld
adc
or
or
lret
xor
cmp
out
jno
sbb
dec
pop
xbegin
xor
call
loope
push
xchg
ljmp
shlb
inc
and
mov
in
sbb
jge
jb
stc
and
fsubp
jmp
adc
cmp
aaa
pop
ds
sahf
movsl
fmull
and
fsubr
lahf
mov
cli
orb
add
xchg
cli
add
ret
mov
ss
push
push
rcrl
add
mov
dec
pop
stos
nop
jmp
lret
push
dec
popf
int3
fcoml
mov
sub
inc
jmp
rcrb
test
pop
push
imul
shll
push
in
orl
mov
imul
sbb
sbb
ss
shrl
and
and
xchg
mov
adc
mov
idivl
pop
fsub
jo
negl
mov
repz
loop
or
pop
into
mov
fprem1
pop
int
xor
sti
pop
adc
sbb
add
shlb
out
lods
repnz
fdivl
icebp
out
lahf
jg
push
loopne
mov
imul
sti
dec
pop
xchg
decb
and
pop
sbb
inc
lock
xor
cmp
hlt
repz
or
sbb
pop
mov
lcall
adc
ljmp
movsb
pushf
cs
mov
mov
dec
cmp
mov
inc
je
in
jecxz
pop
lock
int
push
lea
mov
loopne
mov
pop
jns
dec
and
fisttpl
dec
test
xchg
push
inc
cli
dec
mov
gs
icebp
mov
mov
psrlq
xchg
push
std
out
sub
jl
stos
push
sub
xchg
imul
into
sti
outsb
mov
incb
mov
mov
push
das
xchg
idivb
sar
outsl
add
adc
sti
aam
sub
mov
insl
or
stos
dec
jnp
dec
cmpsl
clc
jno
ljmp
cmpsb
lods
es
js
mov
inc
loopne
pop
shrl
cltd
and
test
jmp
mov
and
clc
push
dec
sahf
xchg
lret
sbb
lcall
mov
inc
xchg
bnd
push
or
out
pusha
pop
xchg
fdivs
xor
mov
mov
out
nop
jae
icebp
lock
and
dec
test
push
jmp
fwait
xor
cmp
add
loope
mov
sub
or
push
aad
xor
xchg
push
rorl
cwtl
adc
mov
or
ja
cmp
jp
mov
aam
in
sub
sub
dec
jne
push
test
push
pop
jg
cs
cmp
mov
out
lcall
pop
mov
imul
push
add
stos
jnp
lahf
fistpll
adc
int3
cmp
ret
mov
inc
aas
cli
test
dec
in
push
dec
dec
lods
popf
not
cmp
subl
cmp
cmp
lock
ret
ss
xor
imul
insl
push
and
dec
adc
jge
iret
in
and
xchg
cmp
leave
adc
lock
arpl
int3
out
inc
dec
mov
push
mov
test
es
xor
push
jno
pop
and
fisubrs
fld
stos
mov
mov
in
cmp
call
repz
dec
jo
jbe
divl
xchg
dec
loop
mov
int
addl
dec
xchg
mov
xor
inc
cltd
cwtl
scas
orb
mov
imul
inc
mov
cld
cmpsb
mov
inc
in
lcall
daa
clc
push
mov
loope
in
sub
xchg
mov
or
shlb
xchg
sub
sbbb
mov
add
dec
sbb
pop
in
mov
sbb
add
pop
ljmp
push
movsb
outsb
pop
fdivrl
call
adc
negb
mov
or
xor
or
sti
and
push
lock
int
shlb
pop
pusha
ffree
lret
jns
imul
icebp
adc
sbb
rcrb
lods
cmp
jg
fsqrt
loop
mov
stc
or
jmp
adc
push
cmp
cmp
mov
mov
cli
jnp
push
xor
sarb
push
or
out
hlt
into
lcall
xor
pusha
dec
outsl
fsubs
pop
imul
inc
test
imulb
inc
lods
fnstenv
ret
hlt
mov
xlat
jns
sub
subl
inc
js
cli
xchg
loopne
mov
int3
gs
adc
inc
mov
fldpi
ret
inc
aam
repz
rcll
mov
int3
xlat
fnop
mov
dec
mov
adc
popf
jmp
inc
push
cs
cmp
nop
dec
mov
pushl
inc
daa
dec
push
xor
sbb
scas
mov
shlb
out
push
std
gs
pop
in
push
mov
or
imul
mov
pop
and
loopne
aas
add
ret
add
mov
push
push
mov
ljmp
cwtl
lock
or
mov
insb
stos
mov
lret
cmp
cmp
mov
jne
lock
shlb
xchg
aam
test
es
rep
repz
dec
jbe
fisubs
popa
or
test
xchg
or
mov
fwait
imul
mov
loopne
sbb
cltd
pop
push
in
daa
push
out
mov
cmpsl
cs
jnp
paddusw
push
and
popl
xchg
or
sbb
push
ror
fs
pop
xchg
lcall
ja
in
cmp
in
jns
push
shr
mov
or
shll
jns
mov
icebp
inc
mov
pop
test
test
test
xchg
cmpl
fwait
fs
jo
inc
add
mov
jae
jb
xchg
jns
arpl
xchg
cmpsb
loopne
mov
xchg
lock
jg
shll
int3
jp
add
mov
iret
in
cmpps
or
pop
jne
and
mov
aam
out
inc
aas
pop
xchg
gs
xlat
jmp
inc
insb
cmpl
in
sub
push
sub
push
clc
push
stos
inc
push
nop
and
cmp
jnp
inc
ja
les
or
push
daa
mov
mov
repz
dec
xor
sbb
test
or
xor
mov
xlat
ja
mov
mov
jbe
outsl
inc
les
imul
iret
dec
adc
leave
mov
adc
sahf
push
inc
push
cwtl
int3
or
mov
jae
or
test
add
pop
push
shll
lds
or
and
fidivrs
ja
adc
movsb
push
jl
push
lcall
jge
bnd
dec
xchg
repz
dec
push
cmp
xchg
mov
cli
sbb
cmc
aas
inc
push
movsl
push
dec
xor
sahf
inc
scas
pop
cmp
cmp
test
push
iret
push
inc
inc
fwait
imul
test
jle
negl
adc
pop
iret
jle
lock
pop
sbb
ds
jns
and
mov
xorb
cli
sbb
xor
xor
not
fdivrl
pop
inc
mov
cld
pop
sub
pop
lcall
jbe
addr16
mov
outsb
test
hlt
nop
rcl
movsl
lret
popl
mov
dec
mov
cmp
push
repz
int
jns
sub
mov
fildll
lret
mov
add
pop
mov
mov
sbb
sahf
sbb
imul
sbb
xor
mov
xor
push
out
adc
add
jge
inc
cmp
pop
mov
adc
scas
daa
int3
xor
shrl
and
or
jle
into
jge
mov
in
jb
xor
dec
outsl
mov
les
dec
leave
adc
and
lock
in
lods
sarb
mov
inc
adc
xlat
ret
in
imul
test
test
gs
mov
xor
jb
push
dec
inc
inc
push
out
rcr
outsb
add
dec
pop
mov
xchg
in
jge
sbb
fmull
jl
std
filds
adc
lds
scas
insl
cs
mov
nop
sub
dec
sti
cmp
std
dec
enter
dec
xchg
inc
jecxz
add
shr
into
lea
gs
mov
movsb
dec
negl
leave
dec
pop
bound
inc
jne
mov
xor
sub
mov
cltd
in
roll
into
imulb
sti
ja
stos
icebp
mov
sbb
push
icebp
inc
or
pop
lret
lods
cmp
xchg
insb
add
lock
cli
pop
das
dec
push
push
shlb
insl
mov
ret
or
jecxz
fisubl
dec
jno
mulb
cmp
popa
and
and
mov
mov
in
mov
pushl
movl
nop
jb
test
fstps
push
ds
pop
xchg
clc
lret
xchg
dec
pop
and
or
aam
cmp
nop
or
fidivrl
test
mov
btr
in
lcall
xor
mov
bound
xchg
pop
dec
mov
lea
push
and
roll
jbe
push
mov
fwait
xchg
push
ficompl
jmp
inc
add
pop
lods
in
push
repnz
lods
sub
sbb
mov
mov
xchg
pop
cmp
insl
ja
idivl
stc
in
cltd
cmp
mov
mov
jne
pop
divb
es
in
xchg
cmp
in
sbb
jns
push
pop
and
out
or
outsb
or
pusha
addr16
sbb
mov
adc
or
insb
mul
pop
jnp
cmpsl
fnstsw
test
or
test
mov
ret
gs
add
inc
push
pusha
push
jae
adc
push
iret
sbb
jmp
push
mov
dec
pop
xchg
pushf
xor
imul
scas
shrl
leave
push
mov
dec
adc
addr16
repnz
xchg
out
lock
mov
inc
push
sbb
cmp
or
sahf
and
jb
add
int3
in
inc
imul
into
fidivs
ljmp
jb
cwtl
and
in
mov
insl
sub
movsb
fisubs
xchg
jbe
cmpsb
and
mov
leave
aaa
or
cmp
or
jl
ret
push
dec
and
xor
stc
jns
scas
ds
mov
or
or
push
and
cmpsb
mov
lcall
negb
loope
fidivrs
sub
push
and
or
adc
movsl
icebp
cmpsl
mov
leave
sti
jp
push
jge
addb
sub
fadds
pop
mov
lahf
cmp
outsb
inc
test
xchg
pop
push
je
push
push
jge
fcoml
pop
sub
jns
or
popf
adc
lods
ret
loop
cmp
sub
mov
push
or
test
int
push
enter
outsl
pop
pop
jl
lret
dec
rcrl
sbb
sahf
mov
dec
sub
mov
inc
xchg
stc
jp
jecxz
loope
lock
in
inc
cmp
pop
inc
cld
not
pop
jge
loope
outsb
xor
sub
into
pusha
dec
lcall
dec
mov
adc
insl
imul
and
adc
inc
data16
xchg
test
cmpsl
and
sub
out
mov
repnz
lods
mov
sti
pop
arpl
clc
addr16
adc
jbe
iret
ret
fs
jbe
aaa
inc
sub
outsl
fstps
outsl
les
push
xchg
mov
test
fmuls
cmp
sbbb
mov
pop
mov
adcb
or
pushf
ret
jmp
fcmovnu
cs
lock
incl
dec
pop
xchg
xorb
les
xor
je
in
jecxz
mov
aas
in
and
ret
dec
push
mov
mov
dec
fistl
dec
sbb
jmp
jg
dec
inc
leave
aas
inc
cmp
shrl
jge
enter
and
mov
nop
jnp
divb
sahf
std
in
push
cwtl
sbb
mov
sbb
lret
sbb
test
xchg
inc
das
or
sub
adc
aam
cs
xchg
ret
jg
pop
insl
rorl
insb
aad
cmpsl
cmc
cs
ljmp
jl
sarb
mov
jne
mov
pop
push
add
add
out
push
test
cmp
push
add
mov
sbbl
xchg
xchg
sbb
xchg
ret
pop
call
lods
mov
cmp
push
mov
movlps
xor
fmuls
cmp
mull
mov
idiv
xchg
dec
es
adc
popf
push
pop
dec
cmp
inc
in
mov
fwait
ret
push
mov
mov
xor
bound
cltd
jle
cmpsb
loopne
xchg
inc
repnz
out
repnz
cmc
mov
mov
mov
lret
inc
mov
xlat
fs
rcrb
add
cmc
enter
push
out
add
lock
adc
sub
fstps
sbb
aas
jne
sub
dec
notl
stos
sub
insb
and
jmp
or
mov
add
jecxz
in
xchg
mov
inc
mov
ret
test
mov
xorl
mov
popf
imul
xor
sahf
push
idivl
or
or
call
imul
scas
xor
stc
das
inc
adc
loopne
or
mov
hlt
cmp
arpl
add
or
mov
mov
sbb
ja
add
ds
xlat
jmp
or
push
add
lds
xor
rcrb
mov
popf
mov
cmp
shlb
pop
push
jbe
sub
mov
out
aaa
scas
in
call
movsl
lods
jl
aas
pop
dec
ror
test
imul
jo
or
loopne
popa
test
in
int3
ja
pop
sbb
cmpsb
inc
jmp
inc
enter
daa
cmc
and
loope
adc
mov
xchg
clc
cmp
adcl
push
lahf
rcrb
and
add
loop
xor
int3
loop
bound
xchg
mov
js
in
cwtl
pop
cmpsl
int
lcall
mov
mov
gs
outsb
outsl
jle
adc
xchg
mov
mov
shrb
je
mov
or
jns
fiaddl
stc
pop
sbb
pop
js
sub
xor
fstl
sub
sti
lods
shll
adc
ljmp
inc
jmp
jg
mov
mov
xor
sub
insb
sub
cmp
rcrb
notl
jle
xor
loopne
cmp
scas
or
jmp
pop
cmc
jnp
leave
xor
outsl
jne
addr16
push
inc
imul
test
add
mov
lods
mov
pop
mov
cmpsb
pop
out
pop
pushf
sub
leave
out
stos
or
pop
test
xchg
sbb
icebp
sbb
loopne
adc
inc
cmp
dec
fsts
imul
xchg
jae
pop
sbb
push
or
or
mov
mov
jmp
lret
xchg
cs
jns
nop
fisubs
in
mov
scas
dec
mov
mov
jecxz
mov
lea
arpl
outsl
push
faddl
mov
mov
aam
inc
mov
test
addb
ljmp
enter
mov
and
fsubrl
ffreep
div
mov
adc
mov
cwtl
and
or
orl
es
mov
push
mov
sti
in
lock
in
or
outsl
lahf
sub
pop
jle
roll
es
testl
jne
ljmp
lods
rorb
mov
add
and
mov
fstps
cmp
cmp
cltd
incb
repz
jne
mov
and
les
and
test
in
clc
inc
xchg
cmp
jo
mov
aam
jle
xchg
add
stos
pusha
mov
out
mov
or
adc
inc
xor
jmp
mov
cli
or
dec
lea
sub
sbb
pop
dec
jne
les
mov
cs
icebp
jge
push
xor
ret
add
or
test
mull
xchg
and
sub
in
fildl
xchg
mov
aad
push
push
repnz
mov
adc
inc
mov
mov
jg
mov
inc
pop
or
scas
divb
hlt
inc
mov
jo
out
in
or
or
cs
movsb
sbbb
ret
sub
inc
cmp
stos
fwait
ror
and
ja
insb
int
ss
mov
lahf
in
mov
pusha
cmp
mov
and
outsl
ret
insb
pop
lods
out
inc
imul
jae
push
lea
push
mov
mov
push
ss
fidivrl
push
sbb
test
scas
cltd
and
push
inc
dec
add
cltd
repnz
adc
icebp
add
arpl
inc
pop
jp
or
sub
adc
xchg
xor
add
fs
fnstsw
fdivrp
out
pextrw
ffreep
jae
jg
mov
mull
xor
xchg
movsb
hlt
out
mov
xchg
push
jge
dec
sbb
xorb
cwtl
xchg
cmp
test
jno
popa
xor
jnp
dec
dec
inc
xor
xor
scas
stos
xchg
mov
fwait
test
mov
cmpsl
inc
out
inc
sbb
in
fwait
sub
sti
adc
push
stos
loope
push
cmp
ja
xchg
icebp
or
lcall
xor
subb
sbb
mov
aas
and
add
pop
out
xchg
lcall
pop
fsubrl
in
pop
sub
outsb
shrb
adc
bound
bound
push
push
je
outsl
movsl
stos
mov
pause
and
fimuls
sub
mov
lret
aaa
rol
or
inc
pop
sahf
add
sbb
enter
fidivl
jg
pmaxsw
je
or
call
xlat
push
adc
movsl
adc
test
or
notl
test
inc
aaa
repz
xor
or
pop
into
es
cmc
inc
fnstcw
xor
or
jg
adc
mov
imul
xchg
mov
xor
mov
add
lods
jne
std
mov
mov
out
or
push
inc
jnp
ret
in
xorb
mov
int
ds
and
loopne
jno
pop
mov
ret
inc
mov
movl
repz
mov
sbb
lea
pop
push
adc
adc
mov
fs
jg
cs
fiaddl
aad
push
out
nop
mov
inc
cmc
jb
jp
dec
sub
mov
fdivr
jne
mov
dec
nop
pop
mov
adc
mov
xchg
bound
shlb
je
inc
xor
jb
stc
and
shlb
shrl
push
mov
std
xor
cwtl
fsubrl
outsl
mov
adc
enter
adc
lret
stc
shll
aas
mov
mov
inc
insl
lock
ret
cmpsb
das
in
jle
rcrb
jnp
in
sti
aam
daa
xor
mov
test
shrl
and
daa
dec
cmpsl
repz
arpl
xchg
imul
cmp
shll
insl
and
dec
aam
pop
pop
stos
cmp
je
add
push
imul
xchg
iret
std
mov
jnp
xchg
add
jmp
shrl
pop
jbe
jne,pt
stos
dec
xor
add
xchg
push
fstp
push
push
bound
push
fidivs
decl
cmp
sub
push
xor
loop
mov
xchg
lea
test
and
fwait
mov
dec
push
psllw
negl
aam
cmp
push
pop
pop
bound
pop
ds
sub
loop
and
out
mov
imul
ja
lea
jp
pop
sub
mov
sbb
dec
cwtl
cmp
jne
push
shll
ret
push
jp
mov
and
add
in
xchg
outsl
mov
jmp
inc
mov
iret
or
sbb
stos
push
sub
dec
sub
jnp
jo
jle
xor
in
xor
rorl
jo
inc
push
dec
pop
jecxz
out
inc
jbe
jmp
push
pop
aaa
push
sbb
and
mov
jne
push
fisubrl
jae
mov
shll
scas
cld
or
push
xchg
das
adc
fsts
iret
jbe
repnz
leave
push
or
mov
inc
pop
pop
jecxz
outsb
cmp
test
cmova
dec
or
test
adc
lods
mov
pop
or
xchg
ficomps
adc
mov
ret
and
loope
cmp
adc
push
das
iret
jbe
xchg
int3
jge
jne
sbb
mov
aaa
inc
add
sahf
jno
inc
add
inc
dec
mov
xor
xor
dec
jo
popa
jnp
fistpl
movsb
push
xchg
loope
sbbb
inc
jge
cltd
cmpsb
inc
into
pop
in
add
enter
daa
repz
push
inc
dec
loope
jecxz
sub
sahf
outsb
cmp
or
mov
mov
and
jbe
cmpb
sbb
movsb
dec
add
ljmp
call
xor
js
jne
pop
and
mov
sti
fcoml
jg
sub
xor
push
rcll
cmp
push
dec
mov
nop
mov
out
inc
mov
sbb
xchg
cmp
int
pop
mov
pop
fcmovne
sub
loope
repnz
mov
pop
repz
movsl
int3
inc
test
pop
xor
sub
addr16
pop
sahf
leave
stc
lahf
jbe
fs
adc
data16
mov
dec
cmp
dec
dec
out
notl
xor
cmp
or
arpl
or
shl
or
xor
inc
subb
ret
adc
jno
adc
sti
sub
shrl
lods
pop
cmp
out
ja
sub
jbe
mov
in
adc
gs
sub
popa
pop
gs
loopne
in
pop
rcll
fsin
addb
jnp
div
mov
test
sbb
enter
adc
es
leave
xor
dec
enter
aaa
adc
mov
mov
xor
dec
ja
mov
dec
movsb
add
je
ficompl
cli
js
fists
test
gs
push
mov
inc
and
dec
xchg
sbb
xor
pushf
jmp
aas
pop
imulb
mov
lds
inc
sarl
xor
cmp
cwtl
xchg
adc
and
inc
mov
lahf
add
cmp
mov
mov
mov
push
lock
cmp
lret
aas
jg
out
cmpsb
jg
fcmovnu
leave
aam
and
es
add
dec
pop
cs
cmpsl
repnz
adc
add
sbb
jg
push
lods
test
pop
mov
dec
sbb
mov
pop
jnp
test
xchg
or
sbb
push
dec
imul
clc
mov
jbe
inc
test
xor
pop
jmp
pushf
out
add
push
sub
push
comiss
xor
or
mov
sub
sahf
or
xchg
adcl
movsb
jnp
xchg
jmp
add
or
jno
fwait
dec
mov
push
ja
sti
add
andl
out
cwtl
bound
lock
aaa
mov
inc
int3
sub
sub
dec
mov
mov
repz
fdivrp
mov
push
mov
and
scas
dec
jnp
or
mov
out
out
mov
pushf
loop
clc
arpl
xchg
cmp
orl
jmp
sub
cmp
fsubs
shrb
xorl
scas
insb
mov
in
jle
inc
jp
sub
cwtl
pusha
outsb
pop
test
bound
faddp
jmp
dec
pop
sbb
inc
sbbl
push
mov
in
push
mov
fisubl
or
xchg
clc
fcompl
xor
leave
imul
mov
pop
jmp
push
adc
ror
fldcw
xchg
leave
fistpll
sbb
mov
xorb
aad
in
push
lcall
add
lock
cmp
ret
fidivrs
mov
inc
test
jecxz
and
xchg
dec
push
adc
push
and
jae
jge
iret
mov
aaa
add
idivb
sbb
test
mov
and
adc
divl
sub
scas
mov
aad
test
dec
aas
scas
inc
or
icebp
cmpsb
leave
outsb
inc
in
imul
daa
repnz
cmp
loope
subb
leave
mov
fsubl
out
xor
rcll
adcb
dec
add
insb
xchg
xor
adc
stos
mov
sarb
inc
pop
movsl
imul
dec
fdivrl
cli
outsb
cwtl
cs
rcrb
data16
pop
repnz
pop
repnz
into
mov
mov
int
and
sub
aas
jbe
pop
ljmp
cmc
push
jo
jae
inc
sbb
xor
dec
pop
sub
sbb
adcb
les
ret
loope
lcall
fs
jmp
mov
fadds
push
mov
shll
cs
lods
lds
popa
sahf
insb
cmp
mov
jp
in
jo
cmc
shlb
xor
movq
add
imul
mov
add
lds
rorl
inc
mov
mov
imul
mov
pop
test
sti
adc
mov
test
pop
gs
loopne
outsb
cwtl
pop
repnz
inc
jne
xor
repnz
repz
dec
xchg
mov
xor
cmp
daa
or
push
mov
int3
adc
cmp
xchg
xor
aad
cmp
nop
outsl
cmp
dec
or
jb
int3
sbb
loop
je
jle
jecxz
inc
jo
loop
or
loopne
movsb
pop
aas
das
mov
pop
cmpl
es
bnd
xchg
addr16
sbb
inc
mov
jp
mov
in
sbb
and
inc
mov
idivb
std
adcb
cwtl
push
mov
mov
fistpll
icebp
jbe
pop
cld
data16
out
lret
xlat
mov
mov
add
lock
das
stos
add
rol
adc
sub
adc
xor
ret
shrl
mov
insl
pop
mov
outsb
cmpsl
icebp
bound
ljmp
mov
mov
insl
out
and
sbbb
lcall
cltd
mov
insl
shll
or
sub
clc
icebp
pop
stc
xchg
and
sbb
lods
fstps
push
stos
sub
adc
push
cmp
jle
jne
or
or
xor
in
mov
add
decb
test
test
imul
dec
dec
gs
inc
inc
push
int
jmp
cmc
pop
push
sbb
out
add
adc
jns
mov
in
ret
add
mov
sbb
dec
mov
mov
mov
jp
pop
push
mov
jb
mov
xchg
loop
dec
pop
sub
mov
shlb
lret
xchg
push
xchg
inc
jmp
add
arpl
dec
fwait
mov
or
jg
addr16
je
stos
hlt
lock
insb
push
insl
outsl
jnp
pop
lret
jle
dec
add
xor
pusha
or
or
andl
dec
inc
mov
es
sahf
xchg
test
mov
repz
fcmovbe
cmp
fstps
mov
add
ret
push
adc
mov
and
flds
xchg
leave
push
xor
hlt
data16
arpl
jo
or
sahf
jecxz
inc
sbb
or
pop
add
das
int3
or
pop
push
rcr
loop
outsb
lds
sbb
les
sbb
jmp
std
mov
xchg
push
and
jbe
enter
push
push
sbb
push
cmp
sub
dec
mull
icebp
jo
or
scas
cltd
test
push
sub
push
dec
int3
fstl
out
fwait
dec
adc
dec
orl
push
outsb
cltd
daa
icebp
pop
inc
push
in
loope
inc
fsubrl
insl
ret
cmp
pop
notrack
dec
movsl
adc
hlt
and
imul
sbb
mov
add
inc
xchg
xor
mov
outsb
ret
or
xor
js
dec
nop
pop
mov
push
push
add
mov
outsb
sti
sti
xor
repz
mov
xor
mov
mov
ja
add
and
sub
lret
ffreep
mov
mov
pop
sbb
loope
test
push
sub
sub
aad
and
xor
cmpsb
fs
mov
or
push
inc
cmp
mov
int3
dec
cli
loopne
stos
xor
rcrb
or
out
into
into
iret
fsubl
xchg
ret
cmp
ja
popa
outsl
icebp
lret
inc
and
imul
ret
mov
data16
ret
sub
xor
rcr
adc
scas
repz
mov
ret
lret
ret
vpaddd
or
loopne
or
inc
mov
fldcw
les
rcrb
xchg
jg
nopl
add
xlat
xchg
call
call
pushf
xor
jmp
xor
je,pn
and
cmp
nop
dec
inc
iret
dec
xor
les
xchg
cmp
ja
jecxz
dec
add
out
mov
loope
fadds
mov
adcl
cmp
add
pop
xor
mov
fidivs
aas
pop
xor
mov
pop
int
and
mov
cli
idivb
ret
xchg
cwtl
or
xchg
pusha
mov
dec
push
and
xchg
insl
mov
mov
xchg
jmp
imul
das
mov
nop
rclb
in
sbb
std
adc
ret
bound
frstor
push
sbb
dec
push
clc
and
ljmp
lods
jle
xchg
mov
nop
cmpsb
jecxz
cwtl
add
mov
lar
fistpll
je
jae
in
pop
adcb
rcr
inc
cltd
mov
xchg
ret
sbb
sbb
xor
stos
sbb
iret
out
sub
inc
xchg
sub
testl
clc
jns
or
repnz
mov
push
leave
jmp
test
ljmp
inc
addl
or
dec
sub
mov
test
add
hlt
push
bound
cmpl
pop
in
or
shll
icebp
mov
mov
jp
mov
mov
dec
test
inc
mov
movsb
lods
cmp
pusha
jo
xchg
sub
sti
xchg
shrb
andl
pop
out
inc
aad
sahf
je
or
adc
stos
arpl
pop
dec
insb
jns
pusha
jnp
sbb
loope
cmp
inc
fbld
adc
push
inc
xchg
jb
jae
add
popa
jb
popf
cs
mov
xor
push
xchg
cmpsb
mov
mov
imul
iret
scas
and
jo
adc
test
lret
leave
int
xor
mov
adc
int3
dec
inc
stos
decb
sbb
inc
cwtl
sbb
add
xorl
xor
mov
aad
loop
int3
rcr
sarl
jl
pushf
cmp
jne
push
ret
rclb
sti
xor
sbb
insb
aaa
andb
out
or
cmp
les
test
fiaddl
iret
jo
cld
adc
push
call
add
push
jecxz
fadds
test
cmpsb
iret
or
aaa
hlt
test
daa
lock
push
inc
sbb
mov
xchg
outsb
cmp
dec
mov
and
aaa
movsl
sbb
stos
and
cmpsb
lahf
enter
mov
enter
es
insb
pushl
aad
cltd
xor
pop
pop
pop
and
cmp
loop
and
pop
or
fcoml
jmp
outsb
pop
mov
xchg
ror
adc
mov
iret
pushf
mov
fmuls
and
ljmp
pop
or
fadds
pop
pop
mov
jno
and
add
inc
jo
mov
test
fnsave
inc
mov
jg
xchg
loop
into
arpl
and
xchg
push
xchg
inc
sub
xlat
notl
cli
adc
cmp
xchg
fmull
cmp
cmp
mov
xchg
cmc
pop
test
outsl
rclb
inc
imul
and
repz
subl
mov
out
flds
and
mov
cs
sti
jb
es
out
gs
mov
mov
fwait
mov
fldenv
pushf
sub
xchg
inc
mov
jns
daa
xlat
shll
mov
push
lret
mov
jmp
testl
aad
mov
nop
and
loopne
jb
out
rorb
xchg
dec
je
ret
aad
daa
popf
scas
call
add
xchg
jg
push
rcl
mov
clc
subl
pop
out
pop
xlat
ficoms
inc
es
in
dec
pop
aas
cld
xlat
shlb
adc
and
test
shrl
testb
idiv
into
push
fistpl
popa
shrl
mov
and
aaa
cld
mov
stos
leave
mov
jb
mov
push
repnz
push
sbbb
imul
or
ret
icebp
fptan
es
pop
gs
sub
dec
dec
mov
and
pop
pop
adc
hlt
lods
jmp
imul
lahf
cmp
pop
fsubs
call
cltd
adc
iret
mov
pop
xchg
push
xchg
and
clc
addr16
xchg
add
mov
out
gs
roll
ljmp
pop
jae
jno
dec
push
mov
mov
sub
pop
enter
repnz
or
mov
jae
test
add
dec
xor
xchg
sub
and
pusha
jb
add
aam
idiv
ret
fnstenv
jns
cltd
dec
in
stos
or
repz
mov
push
mov
js
sub
push
aam
addr16
mov
movsb
dec
and
ja
inc
lret
ljmp
cmc
xchg
std
sbb
jmp
fwait
cmc
movl
test
and
push
mov
stos
pop
das
insb
in
cmp
fiadds
jle
cmp
mov
aas
jnp
fistpll
iret
sub
fnsave
mov
sbb
push
and
fistps
xchg
and
push
jno
icebp
fidivrl
mov
add
add
scas
mov
outsl
push
mov
lock
inc
sbb
bnd
stos
leave
inc
and
cld
dec
and
scas
mov
icebp
or
xchg
inc
cmp
addr16
or
or
jne
enter
fwait
pop
enter
sub
add
imul
xchg
and
lods
pop
cmp
shlb
xchg
in
and
jge,pt
aaa
sbbb
ret
inc
loopne
cmp
icebp
dec
jno
cs
push
mov
dec
insl
ret
xlat
push
mov
cmpsb
lahf
jo
add
scas
push
inc
adc
cld
out
test
scas
movsl
xor
jnp
push
or
dec
hlt
sahf
daa
out
adc
loope
aaa
cvttps2pi
mov
ds
push
das
movsl
and
jl
push
push
scas
lahf
out
ss
loopne
lods
push
in
add
mov
aam
jg
addr16
jbe
pop
and
imul
mov
jae
outsb
shll
adc
mov
mov
mov
xor
shrl
sub
ret
aam
sub
scas
pop
xlat
mov
lods
sbb
sarl
mov
sahf
xor
imul
adc
mov
stc
jnp
frstor
int3
adc
cmp
xchg
loopne
cmp
xor
out
adc
xor
lahf
aaa
cmp
cmp
test
nop
cwtl
cmc
and
negl
outsl
scas
data16
imul
fldt
xchg
add
lods
clc
ja
mov
push
lods
sub
mov
cltd
rcl
sti
and
in
push
push
gs
sub
loopne
andb
scas
xlat
mov
idiv
pop
xchg
add
cld
sub
mov
push
xlat
adc
sbb
int
adc
into
jle
pop
jg
cs
mov
movb
repz
es
dec
jp
sbbb
mov
xor
jmp
loope
mov
pop
das
fidivs
dec
pop
fildl
dec
jbe
fistpl
jge
jp
ja
lods
sbb
or
mov
leave
test
and
mov
testb
std
jne
xchg
cwtl
subl
and
jo
sti
xor
cld
out
push
lret
and
mov
scas
inc
sub
lock
das
inc
imul
xchg
sub
push
sbb
xor
es
add
insl
pop
dec
dec
adc
out
repz
ljmp
aad
push
cmp
mov
cmpsb
aam
mov
testl
or
dec
and
test
cmpsb
mov
fstl
fmull
inc
sub
mov
mov
pop
xchg
sub
stos
cli
out
out
repnz
xchg
mov
sbb
stos
lods
sub
or
int
aad
xchg
mov
or
or
cs
xchg
mov
daa
aad
inc
push
dec
cmpsl
or
jno
fwait
or
push
add
add
out
fdivrl
jmp
lods
bound
add
jae
les
ss
mov
adc
jp
add
mov
stos
bsf
dec
mov
pop
cmp
and
mov
les
xchg
shrb
adc
loopne
out
stc
pop
sub
sub
mov
test
stos
dec
fs
and
mov
mov
jns
movsb
jle
and
xchg
std
pusha
fcmove
add
ficoms
stos
pop
idiv
pop
inc
lods
sbb
jae
jae
push
out
push
popf
jl
add
mov
popa
or
xchg
push
mov
cmovp
insb
sahf
scas
jmp
daa
push
ljmp
iret
mov
shll
mov
adc
inc
insl
jp
or
psrlq
inc
xchg
aaa
fmuls
inc
dec
xlat
add
jae
divl
fmulp
js
mov
push
pop
and
xor
xchg
and
xorb
dec
and
sbb
inc
popf
aaa
add
idivl
dec
mov
jno
ret
jge
add
lds
xor
rcrl
scas
ss
pop
test
jns
mov
cmpsb
aad
scas
in
add
adc
in
push
pop
sbb
out
hlt
sub
pop
cmp
jb
movsl
sub
xlat
and
dec
sbb
sub
in
lds
mov
and
mov
movsb
pop
cmpsb
call
cmp
or
fsubrl
jo
repnz
outsb
and
aam
pop
arpl
rolb
sub
cmp
mov
inc
jg
loop
into
push
push
or
sub
into
xchg
pop
push
cwtl
stos
lret
mov
mov
loopne
sbb
popa
sahf
aam
dec
test
jbe,pn
jl
push
jg
pop
cmp
stc
xor
adc
scas
in
xchg
nop
pop
fsubr
cmp
cli
jns
add
mov
mov
or
std
sbb
js
movsl
cmc
in
xor
xor
cmp
imul
in
add
add
movsl
sub
out
pop
cmp
pop
cmc
pop
mov
add
sbb
shlb
sbb
adc
push
loopne
pop
fstpl
dec
sbb
shll
adc
les
jns
xchg
enter
adc
cmp
or
xlat
dec
ror
pop
dec
jne
adc
sub
pushf
xor
lret
imull
popf
je
aad
mov
jne
push
cld
loope
dec
test
sub
inc
or
out
push
dec
lea
sub
mov
push
jno
mov
xchg
test
cmp
sbb
pop
sbb
int
inc
and
popf
aas
cmp
adc
jl
push
rorl
loop,pn
mov
call
cwtl
ds
mov
shl
mov
rcr
or
adc
lods
lret
xchg
mov
mov
xor
jle
jl
es
mov
sub
hlt
fcmovnb
xorps
xchg
cmp
insl
stc
outsl
push
dec
inc
std
adc
inc
cmpsb
shlb
jmp
lods
mov
fldl2t
mov
lods
aam
mov
push
std
xchg
add
leave
jecxz
jg
xchg
test
xor
push
sbb
pop
fnstsw
cwtl
cld
xchg
jg
dec
sbb
xor
xchg
ret
stos
jmp
lods
jp
call
xchg
push
jb
or
xor
mov
inc
xor
adc
jmp
sbb
test
out
xchg
or
sub
mov
js
mov
xlat
add
jge
incl
mov
bound
xchg
sbb
setge
in
xchg
mov
cmp
pop
int
ja
sub
mov
pop
aad
mov
mov
push
jne
fildl
out
std
in
xchg
mov
data16
xor
sbb
push
add
sub
and
addr16
insb
push
shl
and
dec
pop
insb
mov
scas
jg
and
dec
in
insb
sub
sub
inc
mov
dec
filds
mov
pop
jae
adc
popf
mov
dec
insl
push
out
insl
dec
fisubl
lcall
lds
push
xor
adc
mov
repnz
push
hlt
xchg
xor
inc
jo
aad
fdivs
push
adc
out
loope
mov
icebp
imul
arpl
outsb
adc
ja
in
shlb
inc
mov
xor
sti
mov
push
mov
cmp
movsl
es
lock
sbb
sarb
subb
jl
lock
mov
push
and
xor
sub
cmp
js
jbe
sub
inc
jecxz
inc
xlat
rclb
pop
jo
in
es
enter
daa
in
fldcw
jge
mov
std
mov
mov
xor
clc
mov
sub
cmp
pusha
lahf
and
ficompl
sbb
imul
shrl
jp
std
pop
int
nop
js
out
xor
lahf
pop
sbbb
mov
fcoml
in
outsl
outsb
xchg
vmaxps
cmp
xor
inc
jbe
and
ljmp
int
adc
dec
popf
test
aad
in
xchg
mov
shr
pop
mov
pushf
sbb
sub
ja
fildl
xchg
hlt
jp
push
leave
cmp
jns
jo
jmp
xchg
adc
jne
ss
mov
fsubrs
dec
sahf
cli
lods
notl
rorl
rorb
xchg
cmc
mov
mov
jecxz
sub
adc
adc
fistpl
add
movsb
cwtd
adc
outsl
mov
out
sub
andl
sub
sti
jg
scas
xor
gs
ficoms
loopne
inc
fstps
jns
inc
aam
pop
push
les
cmp
sbb
sub
inc
xlat
mov
in
pop
sti
shlb
adc
adc
loopne
arpl
cmp
pushf
add
jnp
push
push
outsl
nop
mov
nop
dec
mov
icebp
jb
test
or
cmp
mov
icebp
cmpsb
lock
sahf
add
xchg
subl
mov
mov
aaa
cmpsb
inc
mov
pop
fdivrs
out
mov
aaa
adc
and
fnstenv
rcll
inc
test
icebp
std
ret
insl
push
cwtl
stc
xchg
xchg
sbb
icebp
test
mov
add
mov
mov
cmp
lock
sub
loope
sub
out
ret
sahf
sti
es
lea
push
test
cmpsl
in
cmp
xor
shll
mov
sbb
cmp
mov
jmp
add
shlb
test
add
push
fsubr
mov
loopne
pop
clc
sbb
jmp
mov
fs
rorl
xor
mov
or
dec
mov
xor
or
xor
outsl
mov
xchg
lds
lds
test
mov
and
inc
xor
mov
sub
fwait
imul
pop
add
mov
idivl
mov
jp
or
fwait
mov
std
aam
lea
xchg
pop
mov
cmpl
sub
xchg
mov
lods
push
jne
cli
out
mov
sub
xchg
jbe
pop
jmp
cld
nop
fldl
fidivrl
cmp
addr16
mov
stos
xor
mov
daa
jnp
mov
push
in
test
data16
mov
pop
and
inc
ret
push
ja
std
repnz
push
insl
gs
lret
mov
cs
cmpsb
ficoml
xchg
add
imul
push
js
jno
and
jp
pusha
jnp
bnd
sub
test
mov
xor
jae
es
add
mov
sub
add
jbe
int3
sbb
pop
push
cmp
ficoms
pushf
sub
xor
sbb
enter
xchg
aad
movsb
dec
cmp
jbe
ds
jge
mov
lahf
aaa
jle
xchg
cmp
pop
pop
jl
loopne
dec
mov
cltd
or
jmp
lea
hlt
sbb
clc
jno
and
popl
pop
jl
mov
cmp
in
daa
in
add
push
leave
movsb
loope
xor
cmp
lods
mov
movsl
aaa
lock
xlat
lret
push
addb
sbb
push
xchg
cmpsb
add
pop
inc
xor
xchg
cmp
mov
pop
fiadds
lcall
int3
fadd
ror
xchg
outsb
ljmp
sarb
das
testl
daa
cmp
mov
std
imul
sbb
adc
insb
int
mov
pop
push
xchg
lret
sarl
mov
sub
sbb
lds
add
xchg
xorb
movsl
loop
cmp
ja
dec
int3
dec
adc
xchg
or
pop
cmpsl
popf
cmp
gs
testl
xor
imul
cmp
sub
cwtl
into
ds
cwtl
cmc
jp
mov
ds
stos
outsl
dec
out
xchg
adc
xchg
add
adc
hlt
jb
stos
cmp
lods
lods
inc
dec
mov
jmp
les
ficoml
jmp
push
dec
lods
gs
int
loopne
inc
inc
pop
lods
lods
ja
out
dec
fnstcw
mov
enter
fs
in
pop
leave
cmp
divb
int
jbe
scas
loopne
adc
jno
jmp
scas
imull
arpl
cld
nop
xchg
mov
jb
movsb
fisttpll
sahf
dec
je
cmp
jecxz
test
hlt
push
repnz
in
ret
push
and
mov
fcomps
addl
addr16
pop
arpl
xchg
inc
pop
fnstsw
mov
out
aas
imul
inc
out
push
testl
mov
mov
dec
repz
adcb
jno
insb
mov
fnsave
xor
das
in
adc
iret
ret
lret
sbb
ret
sub
in
loopne
and
dec
cmp
clc
ljmp
xchg
lods
xchg
ficompl
mov
mov
and
and
xchg
pop
push
jecxz
add
mov
in
pop
push
test
sbb
push
lahf
jno
fldl
pop
dec
clc
push
int
xchg
std
push
scas
sbb
add
pop
xchg
ljmp
sbb
test
push
sub
cmp
or
cmp
and
pop
rcrb
adc
mov
jne
xchg
cmc
fs
add
lods
or
arpl
push
in
hlt
add
inc
stc
aas
cwtl
jg
push
gs
jns
adc
in
outsb
xlat
xchg
pop
cmp
in
add
inc
pushf
dec
ja
jnp
jp
add
adc
das
mov
xlat
add
pop
jge
mov
jl
out
mov
mov
push
xchg
insb
popf
xor
jge
pop
insb
in
and
or
mov
mov
and
lret
nop
sti
mov
lea
in
dec
pusha
stos
sub
xor
pop
fwait
sub
inc
into
xchg
jae
sbb
xor
mov
insl
and
pop
sub
xchg
pop
scas
xor
imul
jne
mov
inc
sbb
mov
jne
leave
and
cmpsl
hlt
sub
arpl
cs
inc
jbe
testb
idiv
inc
adc
ljmp
dec
jno
add
lds
lds
inc
jo
inc
push
xchg
and
mov
movsb
xlat
mov
jbe
dec
fdivrs
cmp
sbb
cmp
cmp
cmp
jno
pop
lds
testl
inc
ja
mov
pop
jo
jecxz
scas
shll
jge
pop
jo
push
fidivl
inc
cmc
xchg
adc
mov
lock
daa
jmp
ja
arpl
adc
mov
sub
rcll
jle
jb
es
arpl
and
mov
add
sub
xor
cld
pusha
add
pop
sbb
or
mov
pop
sbb
ret
paddusb
fsubrl
fldcw
mov
sarb
xor
mov
inc
repz
sahf
sub
cmpsl
and
bound
push
pop
inc
add
pop
loop
sub
push
pop
lret
faddp
push
add
loopne
ret
das
sahf
mov
xchg
les
mov
loop
ficompl
push
mov
mov
xor
mov
push
pop
fsubs
pop
out
or
out
cli
adc
xor
into
cmp
daa
scas
or
mov
and
cmc
inc
and
xor
into
popa
adc
lret
xchg
leave
dec
adc
cli
jb
cmp
sbb
lods
xchg
notl
out
ja
sub
push
mov
inc
aad
sti
fnstsw
jns
in
gs
and
pop
lret
in
inc
cli
aaa
push
fnstenv
add
xor
pusha
sbb
mov
bound
popa
movsb
mov
pushf
movsl
mov
cs
pop
cld
aad
mov
nop
insb
or
dec
outsl
cmp
shrl
pop
cld
imul
jecxz
sub
mull
jp
cmp
inc
rorb
pushf
gs
dec
sti
loope
fistpl
push
mov
aaa
cltd
inc
leave
aas
jb
je
repnz
pop
dec
mov
and
lahf
mov
sbb
xor
notb
adc
adc
ret
mov
mov
mov
push
cmpsl
cmp
loopne
mov
mov
adc
lock
push
jecxz
ret
mov
xchg
cmp
mov
adc
and
scas
rclb
dec
xor
xchg
icebp
ljmp
stos
lods
add
add
bound
in
and
mov
fcompl
add
orl
test
jno
push
bound
fdivrl
xchg
cmp
ficomps
outsb
xchg
psrlw
mov
fwait
stos
mov
xchg
out
jle
mov
add
xor
xlat
std
or
lahf
xor
es
mov
sbb
dec
xchg
add
test
pop
adc
repz
addb
mov
mov
fwait
sub
fiadds
pop
aad
ficoms
fdivrs
or
jne
test
push
mov
fcmovnbe
or
mov
jp
push
ret
mov
pushf
cmp
jne
fs
mov
loope
out
lcall
jmp
xchg
pushf
or
loopne
and
adc
je
dec
rorb
sbb
mulb
sbb
and
xor
aas
pop
in
dec
cmp
int3
out
fistps
pop
ret
jnp
rcl
pop
inc
fsts
fwait
xorb
sbb
push
push
lods
ret
mov
out
ds
mov
imul
out
push
or
fcmove
sub
push
jl
repnz
mov
add
arpl
je
inc
jns
jbe
or
aam
inc
xchg
mov
dec
add
mov
pop
mov
adc
push
cmc
inc
rolb
or
out
mov
jl
bound
and
popf
inc
or
int
jge
mov
sbb
or
aaa
cld
or
jno
jle
jl
cmp
jo
sub
sbb
jo
dec
jnp
mov
sti
push
icebp
mov
or
sbb
test
cmpsb
loope
jae
mov
popa
std
daa
ljmp
loope
mov
xlat
lret
cmp
jp
hlt
cmpb
dec
pop
and
cmp
sbb
pushf
dec
add
dec
push
xor
lea
pop
inc
adc
js
jns
pop
pop
aas
lcall
mov
push
xchg
or
scas
loope
outsb
mov
push
adc
lock
push
popf
and
adc
or
push
jns
push
sbb
jbe
mov
xchg
insb
cli
shrl
xor
ffreep
jbe
pusha
xor
sub
stc
jg
xor
stc
push
pop
shll
mov
rcll
adc
fistl
leave
cli
inc
pop
dec
xor
sbb
inc
or
jb
into
add
ljmp
pop
adc
mov
adc
dec
adc
or
push
ja
enter
and
out
xchg
or
out
mov
mov
mov
pop
sti
mov
pushf
mov
xlat
loopne,pt
xorl
ljmp
fldln2
imul
add
jns
aam
add
mov
pop
adc
test
pop
popf
leave
pushf
loope
mov
or
jns
sub
nop
inc
fwait
daa
dec
into
mov
xor
std
loopne
sbb
jecxz
adc
cli
dec
pop
shr
call
push
jecxz
mov
pop
mov
dec
out
pop
fisttpl
das
pop
test
add
pop
xor
mov
dec
mov
pop
andl
and
notb
negl
fildl
sahf
icebp
ficomps
lret
dec
ljmp
fisubl
leave
das
mov
scas
cmpsb
sub
mov
ret
dec
subl
insl
xchg
arpl
cmpsl
jmp
xor
popa
dec
pop
in
imul
mov
leave
mov
inc
pop
xchg
fstps
add
es
cltd
pop
add
aam
xchg
push
gs
and
test
clc
leave
push
sub
and
dec
pop
in
cmc
stos
movsl
rolb
loope
adcb
ret
xchg
jl
shrl
xor
jg
mov
sbb
test
movsb
push
xchg
hlt
dec
inc
stc
adc
testb
add
jbe
aad
jge
bound
jns
test
add
mov
sub
mov
mov
fistps
pop
adc
test
decl
jbe
stos
jne
scas
jp
and
out
jns
adcb
mov
pop
and
orl
out
cmpsl
cmp
out
xchg
xor
addr16
movsb
mov
and
mov
or
in
and
call
cmp
jle
fistpll
push
ret
push
pop
or
imul
sbb
mov
lods
popf
aas
adc
mov
jmp
lcall
push
inc
sbb
add
imul
cld
push
dec
jmp
iret
jge
out
bnd
arpl
push
fsubrl
mov
incl
jl
aad
je
shrb
inc
cltd
inc
adc
push
or
mov
add
gs
push
dec
pop
loop
ret
fdivrp
negb
lds
pushf
pop
mov
xor
in
movsb
in
subl
jge
adc
aaa
mov
push
mov
sbb
push
jl
test
xchg
push
punpckhdq
xor
cwtl
int3
add
xchg
outsl
push
push
movl
inc
adc
cmpsb
fs
in
mov
mov
daa
jmp
nop
ss
outsb
jecxz
mov
add
movsl
dec
mov
and
mov
xor
notl
jne
jle
ret
xor
imul
jp
fwait
add
lcall
ljmp
adc
adc
and
mov
mov
shrl
mov
sbb
sub
push
xchg
int
inc
lahf
sub
dec
ja
pop
faddl
inc
stos
mov
mov
sahf
add
test
gs
int
loope
lds
jecxz
lock
adc
jnp
ss
and
sahf
lods
fcoms
or
js
sub
lock
cmp
xchg
sub
inc
mov
out
cmc
iret
mov
push
outsl
jmp
clc
pop
imul
lcall
bound
mov
mov
out
pop
add
inc
pop
sbb
sbb
test
mov
repnz
scas
mov
jb
and
fldenv
dec
jmp
loopne
xchg
xchg
int3
hlt
sbb
push
lods
add
mov
adc
mov
mov
mov
jo
lea
sub
into
push
dec
dec
mov
jle
nop
cmp
push
call
rorb
adc
or
mov
jns
stos
pop
dec
push
rolb
sub
inc
stos
fisubrs
aas
push
enter
add
and
aaa
xchg
rcll
sub
std
pop
pop
js
in
jno
lcall
icebp
add
out
and
mov
sub
xchg
lock
push
bound
andl
aam
cli
ds
fidivl
dec
insl
jl
cmovs
inc
fisubs
sbbb
gs
lods
lock
rcr
mov
shlb
stos
pop
mov
adc
inc
decl
test
mov
test
fnstsw
clc
add
add
aam
inc
shr
xchg
mov
stos
xchg
shll
xchg
bound
jle
in
movsl
xor
jle
xor
sub
mov
push
add
test
movb
add
fnstenv
mov
sub
aad
and
clc
add
xchg
leave
popf
lcall
pusha
bound
test
jns
ljmp
inc
mov
enter
sub
insb
pop
je
lods
ja
sarl
xor
xchg
jne
mov
sbb
or
loopne
jl
mov
pop
dec
mov
ret
jmp
sub
cmpsb
sbbl
pop
sub
or
cli
stos
incl
and
fldt
mov
lcall
jno
inc
pusha
jl
sbb
cwtl
jecxz
ret
cs
inc
push
pop
inc
out
ljmp
jns
fstpl
xor
push
sub
jbe
pop
fsubrl
imul
scas
cmp
pop
pusha
adc
mov
in
sub
test
hlt
or
repz
jg
inc
or
icebp
dec
sbb
or
mov
add
mov
ret
push
or
shlb
das
and
xchg
outsl
movsb
mov
js
add
xor
movsl
jge
push
and
inc
fs
jp
xchg
cmp
stc
jno
xor
jg
mov
push
repnz
fidivs
repz
sbb
xchg
pop
loop
cld
out
push
cmp
mov
in
outsl
dec
mov
daa
call
jne
sub
mov
cmp
movsl
push
xor
lahf
sarb
dec
lahf
mov
add
lea
dec
dec
dec
pop
nop
sub
mov
int
lods
ds
push
adc
out
insb
mov
mov
jbe
das
adc
cmpsb
mov
adc
fnsave
add
in
mov
bound
push
and
in
mov
into
pop
push
xchg
ss
push
rcr
push
mov
adc
sahf
cmpsb
outsl
out
sbb
and
jg
xor
pop
jmp
stc
jl
and
adc
adc
push
mov
fcoms
sbb
dec
inc
xchg
cli
stos
mov
ss
or
or
mov
stos
jbe
outsl
enter
lods
fisttpll
adc
add
out
int
sub
mov
cmp
sub
movsb
das
in
xchg
sbb
loop
stos
gs
jbe
dec
adc
inc
xor
sahf
fstps
jnp
hlt
fs
xchg
pop
subl
push
mov
inc
pop
jp
jns
or
fsubrp
out
cmp
out
pop
mov
sub
std
cli
test
mov
push
jb
cltd
or
in
test
and
lahf
lods
jg
add
icebp
lea
call
arpl
popa
ja
dec
mov
mov
pop
out
fistpl
lds
movsb
mov
lret
and
mov
in
sbb
aaa
std
push
or
dec
mov
aaa
xlat
mov
fdivl
pop
lret
sub
test
out
lock
xchg
rolb
pop
stos
sub
aam
xchg
adc
imul
xor
xor
cmpsl
out
out
cmc
xor
jl
mov
addl
mov
rcr
repz
sbb
xlat
xor
push
stos
add
mov
es
xchg
stc
and
sarl
mov
arpl
cmpsl
test
test
sub
cmove
mov
mov
sub
xor
enter
in
jnp
xchg
and
inc
daa
sub
or
xchg
sub
push
popf
sbbl
loopne
loope
lods
loope
mov
jnp
jns
iret
stos
in
jo
xchg
xchg
aad
mov
aaa
mov
das
mov
jp
aad
mov
insl
dec
mov
jmp
pop
xchg
jne
jo
mov
mov
xchg
xchg
arpl
xchg
repz
subl
mov
or
fdiv
stos
jb
lock
mov
jne
inc
jl
jle
push
sub
js
shlb
and
fbstp
out
inc
pop
ja
lahf
inc
cli
mov
jae
pop
test
cmp
stos
popf
lea
insb
push
imul
jmp
lea
imul
scas
mov
sbb
adc
sti
iret
cmp
ljmp
outsb
and
push
lret
lret
arpl
fildll
inc
mov
pop
inc
cvtdq2ps
or
nop
xchg
sub
pop
pop
inc
xchg
fiadds
inc
lds
inc
cmpl
add
cmp
mov
movsb
add
push
mov
pop
jbe
or
sbb
out
divb
cmp
cmp
les
jl
std
dec
in
pop
push
aad
pop
xor
dec
add
push
push
push
push
test
push
jl
inc
xor
push
mov
push
cwtl
pop
enter
daa
out
add
inc
mov
sub
daa
dec
cmp
lea
pop
adc
and
and
lahf
ffreep
xchg
andb
sbb
xor
xor
int3
or
ret
pop
mov
js
aaa
jg
sbb
cltd
lcall
sbb
pop
xchg
jnp
lret
outsb
fldcw
adc
adc
push
mov
test
mov
mov
and
sub
and
xchg
int
das
mov
sub
or
lret
shll
mov
mov
test
xchg
sbb
or
and
xor
das
adc
add
cmp
or
out
testl
lcall
aad
mov
into
lods
jg
cmc
pop
fistps
add
jne
adc
push
cli
adc
pop
jle
jne
inc
stos
sbb
jae
addb
out
xlat
imulb
sub
push
mov
icebp
push
sub
cltd
imulb
gs
ljmp
out
incl
rol
fsts
xlat
outsl
rep
dec
popa
xchg
sbb
out
les
mov
xlat
or
pop
sub
insb
mov
loop
ret
jmp
dec
xor
push
mov
aad
push
out
fmul
fwait
dec
jmp
jb
inc
cltd
test
ficoml
jecxz
popa
sbb
add
rorl
sub
into
loop
mov
bound
dec
cmpsl
lea
xlat
lods
fistps
movsl
lret
movsl
movl
push
inc
mov
xorl
out
negb
into
std
lods
movsl
cbtw
pop
in
adc
dec
push
cmp
cld
aas
pop
dec
pushf
pop
adc
mov
nop
cmc
lock
lahf
imul
roll
sub
cwtl
aam
jnp
ret
clc
push
es
jp
dec
je
dec
and
push
ljmp
shrl
idivb
mov
faddp
inc
mov
out
call
mov
test
stc
addr16
jge
push
outsb
dec
fmuls
jp
jge
cmp
sbbl
pop
jo
xchg
add
in
mov
mov
xchg
lock
push
outsl
jg
bt
or
or
xchg
sub
shll
and
xchg
dec
das
sbb
test
lds
dec
mov
imul
orl
sbb
push
add
or
sub
subl
pop
and
lret
add
in
adc
ja
cmp
cmp
push
or
mov
sbb
mov
pop
mov
cmc
xchg
jne
out
mov
aas
loop
push
das
jp
push
pop
pop
xchg
mov
fsubrl
movsb
pop
or
cmpsl
cwtl
addr16
cmp
and
or
jns
icebp
and
pop
pushf
xchg
in
dec
dec
pusha
mov
insb
jae
ret
mov
inc
add
shrl
popf
mov
dec
mov
test
and
xchg
sub
cmp
imul
scas
add
repnz
mov
repnz
push
hlt
lahf
xor
arpl
ficoml
or
out
add
dec
inc
or
and
cltd
cwtl
int3
pushf
adc
outsl
hlt
push
lds
and
in
mov
mov
cmp
in
frstor
movsb
mov
jbe
pop
fistpll
xchg
aaa
clc
jbe
cmp
es
jno
jns
jl
in
dec
push
imul
xor
test
cmp
push
cmp
imul
nop
sbb
inc
sbb
in
dec
in
cmp
in
pop
daa
out
jae
mov
out
imulb
xchg
mov
ds
movsl
popa
test
and
test
je
cmp
pushf
pop
fiaddl
sbb
imul
inc
js
dec
adcl
adc
jne
ret
fadd
sub
outsb
cmp
xchg
pop
xor
rcl
sbb
icebp
dec
mov
or
in
es
mov
std
subl
dec
mov
lret
sbb
or
inc
sbb
jl
test
adc
jg
inc
vmovq
dec
stc
ljmp
adc
jo
cmp
jae,pn
movl
xor
sub
add
or
scas
cmc
and
in
xor
mov
adc
jp
mov
adc
add
pop
or
or
mov
outsb
out
stc
jo
lahf
call
mov
pop
jns
sti
dec
jge
sub
or
sbbl
pop
data16
pop
clc
loope
leave
shrb
or
movsl
xchg
loopne
lods
sbb
xchg
mov
inc
cmc
imul
dec
push
jmp
mov
mov
nop
mov
lcall
int3
out
dec
scas
imul
mov
xchg
lea
call
dec
xchg
or
mov
dec
xchg
mov
pop
xor
jns
inc
sti
xchg
aaa
aas
xor
addr16
repz
aam
mov
mulb
and
xlat
js
mov
mov
or
lret
or
test
push
push
lock
cmp
push
ja
shlb
xchg
pop
aam
mov
adc
scas
loopne
insl
xor
shll
add
popa
stos
add
lods
pop
jnp
mov
adc
pop
and
push
inc
pop
push
divb
add
lods
cltd
aaa
push
pop
test
adc
push
push
xor
and
icebp
adc
mov
jg
ja
push
sbb
push
js
in
insb
test
stos
popa
pushf
mov
xchg
aaa
pop
mov
out
lar
mov
mov
and
lods
sbbl
popa
mov
xchg
xor
test
mov
push
dec
mov
and
push
sarl
in
mov
rcrl
mov
adc
test
stc
lods
mov
jns
test
jmp
mov
mov
movsl
dec
jle
daa
push
sub
pop
mov
call
push
mov
fstpt
add
ss
ret
lea
in
cmc
and
xchg
cmp
and
sub
xchg
mov
orl
out
fisubrs
sti
xchg
andb
out
pop
mov
and
pop
inc
jnp
mov
in
inc
and
adc
cmc
inc
mov
pop
in
call
jae
insl
push
ret
popf
fildl
loope
out
mov
cmp
xchg
arpl
sbb
push
xor
scas
data16
xchg
push
imul
gs
stc
inc
xor
leave
ljmp
arpl
push
inc
mov
into
or
fld
inc
or
data16
pop
dec
xchg
int3
xchg
daa
pop
sahf
push
out
fiadds
test
rorb
addr16
int
xchg
cmp
scas
push
sub
jge
jbe
sbb
aaa
mov
popa
cmp
aas
lods
jno
push
cli
jl
mov
femms
fwait
sub
adc
mov
or
pop
cwtl
test
pushf
stc
push
inc
dec
gs
jo
cmp
and
ror
sbb
daa
in
jg
adc
bound
cmp
push
movsl
push
popf
lock
sbb
xor
sbb
out
add
jecxz
xor
dec
je
add
lock
pop
xchg
inc
cmp
sbb
shrl
je
outsb
lahf
hlt
push
adc
aaa
mov
pop
mov
add
inc
mov
loopne
and
enter
or
scas
mov
pop
int
or
mov
dec
dec
sbb
cmp
push
subb
jg
jns
adc
jge
mov
fadd
adc
xor
cmp
addb
cli
inc
jno
xor
cmp
lock
jg
into
jae
jae
jmp
jmp
mov
popa
adc
repz
adc
add
add
insb
jbe
out
pop
mov
dec
out
lahf
subb
icebp
mov
scas
outsl
sti
test
pop
mov
loopne
jp
pop
test
xor
add
les
enter
push
rcrb
add
xlat
xchg
pop
xchg
mov
andnps
jmp
ljmp
mov
push
dec
test
xor
mov
shl
int3
xchg
pushf
or
ret
add
pop
rclb
int3
lret
inc
mov
in
aad
es
dec
jge
adc
inc
repz
inc
push
mov
or
out
popa
mov
aad
ror
push
insb
std
sti
adc
rcll
xchg
pop
loope
mov
shl
popa
or
cld
xchg
and
mov
shl
cmp
das
std
outsl
inc
sarb
aaa
sub
xchg
aam
dec
mov
xor
fildll
sahf
aam
pop
inc
icebp
cmpsl
in
sbb
dec
test
lods
andb
mov
in
push
cmp
add
ljmp
mov
lods
adc
sbb
add
lock
mov
sbb
mov
cld
cmpsb
pop
inc
stos
stos
stos
push
mov
jo
jle
fists
popa
add
popa
notl
or
cs
sub
mov
sub
dec
std
jl
test
adc
xchg
rorb
test
inc
in
pop
fisttps
call
jp
popa
mov
std
mov
push
bound
sbb
push
fnsetpm(287
loope
pop
xchg
adcl
aam
jno
lds
icebp
pop
pusha
jmp
ja
fucomp
jp
xchg
pusha
mov
faddl
inc
ljmp
in
test
mov
in
out
aam
pop
xchg
push
cwtl
in
jmp
push
lahf
xor
out
test
sub
negb
inc
addr16
test
and
jp
jnp
mov
ret
in
mov
popa
fists
adc
cmc
xor
int3
inc
sbb
mov
push
test
pushf
popf
add
mov
es
sub
xchg
mov
movsb
cld
imul
scas
leave
or
adc
mov
lock
js
xor
lods
xchg
mov
arpl
das
dec
inc
mov
mov
repnz
jb
cs
int
sbb
ss
xlat
shlb
ja
mov
sbb
cmp
mov
push
ja
jnp
add
dec
outsl
sbb
or
aaa
jbe
cmp
dec
or
jno
dec
arpl
inc
dec
xor
fisttpl
jle
jo
and
sub
scas
in
sub
push
test
addr16
inc
fmulp
stos
cmpsb
repz
mov
enter
daa
in
adc
mov
pop
sub
jmp
cmp
cmpl
outsl
mov
and
jno
sbbb
movb
xor
xor
pop
sub
idivl
sub
pop
lcall
jo
inc
fcompl
jmp
sub
insl
outsb
add
test
and
xchg
rclb
es
nop
add
je
dec
mov
pop
fsubl
js
movb
out
sub
xor
pushf
in
pop
dec
jecxz
lret
add
aaa
int
mov
push
sbb
aam
sahf
xor
test
xor
orb
sbb
stc
pop
cmp
adc
test
and
cmp
push
scas
cli
ja
push
xor
and
cmp
daa
fisttpl
outsb
fwait
into
push
adc
cmc
mov
enter
shrb
pop
add
clc
js
imul
insb
add
mov
xor
adc
mov
aad
ret
leave
adc
mov
xor
mov
gs
push
out
mov
adc
inc
jg
loope
aaa
fisttpl
les
sub
repz
rcll
sbb
cmp
gs
pop
inc
scas
imul
jg
pushf
jecxz
mov
jnp,pn
aad
dec
and
or
pop
dec
popf
jp
je
out
inc
jecxz
adc
pop
lea
in
call
dec
xchg
mov
xor
dec
push
cmp
jnp
jns
jp
fwait
inc
xor
les
jo
adc
mov
ljmp
mulb
loope
std
mov
out
mov
lret
in
mov
cmp
cmp
rorb
mov
mov
lock
fsubrl
fsubrl
dec
cs
sub
aam
xor
ret
movsl
mov
pop
insl
decl
mov
ljmp
iret
lods
in
movsl
dec
mov
push
and
and
cld
int
pop
dec
sbb
add
movsb
test
dec
jno
jo
inc
push
mov
push
fnstsw
xor
clc
sub
mov
rcrl
pop
imul
lds
push
add
dec
xadd
xor
cs
or
jnp
mov
sub
add
test
sbb
xchg
call
xor
add
fwait
adc
fs
add
in
add
sbb
movsb
pushl
aad
out
rcll
in
mov
xchg
shlb
adc
sbb
push
ja
imul
mov
hlt
jnp
imul
mov
jbe
jne
mov
xor
mov
test
loope
stc
jmp
pop
sbb
out
cmp
sub
icebp
xor
stos
ds
sub
mov
outsb
jnp
stos
int3
jle
jecxz
in
bound
fbstp
ljmp
push
test
inc
and
inc
xlat
jmp
dec
lret
sub
mov
gs
xchg
lahf
leave
pop
xchg
adc
cmp
andb
xor
adc
mov
iret
mov
push
repnz
leave
fadds
subb
iret
aad
mov
out
fisubs
push
or
pusha
add
inc
xor
fmulp
push
aas
sarb
xchg
repz
cmp
push
test
push
xor
jbe
push
cmpl
out
aaa
xor
mov
jno
jo
jl
xchg
arpl
push
cli
xor
mov
sub
push
mov
mov
push
xor
push
cmpsb
jbe
inc
in
repnz
enter
daa
jecxz
and
sbb
jecxz
nop
sub
aad
cmp
push
popf
ds
dec
inc
and
pop
lahf
pop
or
lods
ljmp
mov
xor
sbb
js
clc
pop
adc
enter
push
cmpsl
fadd
or
sub
mov
dec
fwait
adc
in
mov
lods
mov
push
cltd
mov
loopne
xor
int
das
push
int
mov
inc
pop
lret
shlb
in
mov
into
or
mov
jg
sbb
xor
test
in
jg
add
stc
lar
xor
aas
adc
jp
ss
loopne
fdivr
hlt
add
add
aaa
cli
stos
pop
mov
cli
dec
fs
sarb
jp
into
cmp
in
jns
repnz
sub
pop
adcl
insl
and
adc
clc
into
add
mov
lods
int3
mov
mov
mov
sub
sbb
cld
in
popf
cwtl
std
sti
push
lods
add
xchg
scas
xor
enter
iret
imul
aaa
inc
xchg
test
fldcw
fcmovnb
sub
xor
push
jns
sub
sbb
js
popf
xlat
add
mov
adc
adc
fiadds
scas
nop
inc
enter
int
jb
sahf
mov
je
jg
jecxz
fnstenv
mov
lea
cmpsl
pop
lret
mov
mov
out
fistl
push
or
dec
push
inc
dec
std
jne
push
jge
mov
popf
inc
and
pushf
rcl
inc
popa
imulb
xor
dec
lock
mov
mov
icebp
cmovle
cld
jmp
sbb
pop
or
mov
out
jbe
sub
das
mov
movsb
push
sub
adc
pop
outsl
lods
ret
xor
fsubs
cmp
stc
insl
out
lcall
lahf
xor
xor
add
lods
pop
jns
mov
jp
push
and
xchg
inc
cmc
pop
imul
cltd
fmull
loopne
aas
enter
gs
adc
data16
rclb
push
addr16
shl
xchg
pop
cltd
call
into
out
xchg
cltd
loop
or
xchg
push
fistl
mov
or
dec
xor
and
mov
xor
dec
lret
outsl
aas
test
mov
xchg
add
dec
mov
call
or
lock
fwait
aas
cmpsl
jg
cmpsl
cmp
xor
add
xchg
bound
loop
in
xchg
pop
xchg
and
pop
les
pop
in
dec
ja
jns
jp
icebp
pop
mov
xor
mov
adc
mov
stos
xor
jne
stos
test
sahf
fsub
out
xchg
push
into
xchg
mov
jp
push
ljmp
clc
cmp
inc
push
addr16
fdivp
addr16
loopne
stos
mov
add
aad
clc
insb
push
aaa
dec
jnp
pusha
cmp
cmp
in
xchg
pusha
push
xchg
jp
push
les
ret
je
mov
inc
xor
mov
or
gs
push
mov
mov
movsb
push
lods
ficoml
clc
xchg
push
dec
lcall
dec
adcb
lret
ficoms
repnz
dec
xchg
push
hlt
lret
es
jb
loope
xchg
push
or
rcrl
adc
test
pop
add
sub
int3
dec
movsl
jmp
sub
das
lds
rcrb
mov
xchg
add
mov
mov
sub
jge
lcall
hlt
and
cmp
mov
jl
into
add
fwait
or
inc
add
scas
lret
imul
das
lret
push
mov
test
std
sub
cmpsb
stc
push
add
fnstenv
or
fwait
push
push
mov
cli
xchg
mov
mov
add
or
push
jge
das
and
imul
jp
arpl
js
je
xchg
sub
add
fistpl
pop
jp
mov
pop
push
lcall
insl
fsubrl
pusha
sub
leave
add
enter
mov
pop
ror
imul
sub
int
imul
int
xor
int
sbb
pop
sysret
dec
and
shll
mov
push
adc
sahf
js
ja
inc
in
add
repz
popf
icebp
loop
mov
stc
insb
add
lret
adc
hlt
ss
mov
cmp
mov
sub
ret
jb
cli
fnstsw
xor
fwait
mov
lods
sub
loope
sbb
icebp
cmc
inc
adc
xor
cmpsb
xchg
outsl
add
adc
scas
cmpsl
adc
repnz
inc
ret
popa
data16
lods
mov
dec
mov
stos
out
test
icebp
mov
or
sti
add
push
mov
adc
lahf
push
loopne
xchg
adc
xchg
or
fldenv
add
jp
ss
in
inc
lahf
sbb
mov
inc
out
pop
lods
sub
adc
or
adc
cs
cltd
fcmovnbe
popa
mov
nop
pop
cli
into
dec
jno
jb
mov
int3
je
arpl
jecxz
loope
adc
loopne
clc
lods
xor
nop
out
sub
dec
xchg
mov
adc
jg
ret
pop
shl
inc
mov
scas
aas
scas
jl
mov
adc
insb
and
decb
sarl
mov
cwtl
add
loope
shrl
bound
out
popa
cld
push
cli
cmc
lret
sbb
mov
lock
das
lcall
sub
cmp
loop
push
ret
ret
xchg
sub
mov
or
or
iret
cmpsl
loope
cmpsl
movswl
icebp
jo
ret
and
mov
popf
dec
scas
and
xor
adc
mov
add
sahf
pop
cltd
adc
test
into
stos
mov
test
push
cmp
fisubrs
xchg
jae
sbb
or
inc
inc
add
stc
lods
push
push
cli
into
push
mov
sbb
xor
sbb
xor
sbb
popf
push
push
xchg
sbb
dec
xor
arpl
jle
hlt
inc
mov
jae
cltd
mov
fwait
outsb
sub
add
dec
push
lods
pushl
andl
mov
in
lret
icebp
xchg
jo
mov
cmp
mov
xchg
dec
mov
or
pop
mov
nop
jo
shl
mov
out
jne
adc
jl
jno
mov
jmp
mov
xchg
addl
pop
sub
out
dec
addr16
aam
stos
and
insb
and
mov
sbb
jle
xorl
pusha
mov
mov
les
ret
cmp
adc
mov
popf
ja
push
shl
js
jecxz
mov
add
xchg
imul
es
repnz
xchg
leave
repz
lds
leave
movb
arpl
jo
or
dec
stos
test
mov
rolb
mov
lcall
inc
out
adc
shlb
jge
add
sbb
mov
jo
shlb
fnstsw
jge
sbb
sbb
inc
aaa
mov
movsb
cmp
cmpsl
xchg
jno
sbb
lret
xchg
dec
push
daa
xor
jbe
imul
jnp
mov
mov
pop
ss
test
enter
mov
and
rcrb
enter
daa
loope
insl
push
cmp
sub
and
ds
ljmp
addb
adc
sbbl
lahf
inc
sub
idivb
pop
mov
push
or
xchg
mov
dec
push
jne
pop
fcompl
ret
push
sub
jb
adc
mov
outsl
js
jle
inc
mov
mov
jne
and
mov
xchg
sub
pop
add
idivl
fwait
sar
pop
mov
add
sbb
int3
and
sbb
lea
cmp
loop
cs
stc
jge
lret
data16
cwtl
inc
sub
aas
sub
outsb
mov
testl
or
and
mov
cmp
pop
mov
xor
lret
loope
aad
jno
mov
fbld
iret
inc
icebp
mov
lods
lcall
out
pop
push
sub
sbb
mov
jae
push
sti
mov
xchg
xlat
inc
das
cmpsb
fiaddl
loopne
je
pop
add
loopne
mov
cmp
repz
out
ljmp
dec
cmp
push
mov
subb
cmc
adc
imul
pushf
in
mov
jo
fldt
movsb
mov
sbb
cli
aas
pop
dec
and
fxch
dec
add
loope
mov
cs
adc
push
add
enter
xchg
jo
addl
test
push
inc
emms
or
aas
dec
pop
push
mov
lret
push
push
rorl
xor
xchg
in
push
cwtl
mov
and
icebp
mov
jo
lret
ss
mov
les
lock
jnp
rol
sub
cmp
push
ret
push
push
es
testl
dec
shr
sbb
jno
sbb
pushf
or
mov
or
mov
test
pop
pop
cltd
dec
ret
sbb
test
add
jecxz
mov
or
xchg
mov
dec
sbb
shll
jne
stos
or
push
out
pop
mov
xchg
lcall
paddusw
or
add
xor
repnz
cmp
cltd
repnz
int3
sbb
loopne
inc
dec
jmp
ja
popf
insl
pop
push
in
or
add
imul
jns
add
xchg
mov
sub
mov
dec
lds
and
jp
sbb
mov
adc
mov
repnz
push
jne
jecxz
mov
and
xchg
pop
or
xchg
addb
out
sahf
inc
sub
loop
cmp
dec
push
stos
xchg
sub
insb
sub
or
cmpb
ret
std
pop
pusha
push
dec
cmp
nop
test
push
fwait
pop
clc
xlat
mov
fs
inc
sub
xchg
mov
cmpb
popa
sbb
xchg
push
das
sbb
inc
mov
fwait
dec
scas
push
fs
int3
inc
adc
push
outsl
cmpsl
repnz
enter
pop
pop
hlt
popa
xchg
push
arpl
ljmp
leave
push
push
inc
mov
fimull
mov
add
push
int3
push
out
pop
mov
add
and
mov
lods
adc
cmp
add
movsb
rorb
push
jbe
enter
sub
sbb
lock
jb
mov
pop
inc
xchg
jno
stos
and
xlat
mov
in
or
cmp
rcrl
das
cs
test
xchg
icebp
roll
push
push
cmpsb
pushl
fsubr
cmpsl
mov
cli
daa
loopne
mov
loope
mov
cmp
pop
push
jb
push
fs
mov
and
scas
xchg
lahf
mov
xchg
out
gs
lods
inc
xor
fildll
popa
push
push
pop
enter
jp
fistl
shlb
lcall
ds
les
sub
ret
outsb
mov
adc
jle
loopne
or
into
mov
aam
mov
in
jmp
mov
jns
cmp
js
mov
mov
rcll
add
mov
ds
mov
lods
xor
mov
loop
pop
xchg
stc
xor
inc
rcrl
lods
orb
fsubrs
out
test
inc
mov
adc
cmp
test
or
mov
into
loop
mov
xor
je
adc
imul
rolb
pop
push
js
inc
and
lods
adcl
popa
sub
push
mov
fisubrs
add
bound
cli
clc
mov
lods
jns
loopne
gs
pop
and
inc
lret
sub
fsts
mov
sbb
sbb
test
xor
mov
xlat
shll
adc
adc
nop
cmp
push
fldt
pop
mov
ficoms
test
add
inc
rorl
dec
stos
je
sub
jecxz
mov
inc
movb
call
inc
cwtl
xlat
mov
sub
dec
adc
ja
and
sbb
fldenv
xchg
mov
je
in
inc
aaa
mov
addb
mov
lods
divb
ss
cwtl
js
and
mov
xor
mov
jmp
mov
loopne
mov
adc
das
pop
mov
rcrb
imul
loope
mov
shll
insl
fwait
sbb
dec
decb
or
popa
xor
lods
cltd
jmp
mov
jecxz
jmp
psubusw
pop
enter
lock
sti
cltd
adc
adc
ret
fimuls
fistpl
clc
pop
cwtl
lea
pop
rol
shl
in
pop
lcall
out
mov
and
insb
pause
mov
xor
leave
or
jo
cmp
and
xchg
lret
add
or
xchg
jb
lock
rorl
sub
int3
jbe
push
nop
cmp
add
test
pushl
push
mov
cwtl
xor
xchg
push
rclb
mov
mov
pop
lds
jp
aas
dec
mov
mov
pop
mov
and
cmpsl
jne
push
and
das
cmp
xchg
sub
cmp
xchg
dec
push
mov
out
sub
cmc
push
sbb
fstpl
addr16
dec
cld
stos
or
cs
xchg
mov
mov
lock
mov
dec
pusha
out
les
scas
push
ret
sub
xchg
xor
lahf
jae
xchg
adc
push
dec
xchg
popf
mov
popa
lods
dec
fisubrl
notb
in
jp
xlat
and
push
adc
adc
test
xor
div
scas
dec
sbb
mov
inc
hlt
lods
dec
or
call
inc
lcall
push
pop
dec
and
or
sbb
or
or
ficomps
rol
std
xchg
shrb
scas
and
push
iret
cmp
das
inc
movsb
pop
roll
push
inc
nop
jge
ret
sbb
test
dec
xchg
aas
jno
pop
dec
jl
outsl
popf
dec
pop
lret
in
push
xor
or
inc
push
adc
pop
cmp
pop
push
xor
enter
jo
in
mov
jl
sti
arpl
push
cs
aas
or
sub
ret
mov
jne
mov
and
mov
cmp
adc
sbb
imul
inc
nop
and
rcrb
cmp
js
stc
mov
adc
bound
xchg
ja
outsl
int3
xchg
repz
outsb
icebp
push
rcl
pop
ljmp
and
or
pop
mov
add
int
mov
add
mov
fstpl
shrl
mov
in
inc
sbb
inc
es
popa
xor
test
pop
xlat
adcb
loopne
add
ljmp
and
adc
and
lds
cmp
in
sbb
cli
jbe
dec
xor
bound
mov
cmpsl
cmc
xchg
adc
inc
outsl
lahf
test
adc
or
pusha
adc
xlat
fs
sbb
retw
cmp
lods
push
mov
sub
out
mov
dec
pop
out
sti
adc
gs
mov
mov
mov
jae
dec
stos
lret
les
mov
out
cmc
xchg
xor
fistps
xlat
add
mov
pushf
cmp
shrl
xchg
push
aad
mov
movsl
dec
jecxz
mov
dec
lock
cwtl
je
or
es
and
sbb
addr16
out
mov
test
jmp
pop
stos
inc
pop
inc
sbb
mov
imul
les
and
sbb
test
in
aas
std
in
repz
xor
mov
pushf
test
icebp
imul
lret
adc
mov
icebp
jae
mov
repnz
aaa
cltd
mov
sub
int
aam
mov
jns
inc
sbb
cmpb
stc
and
ljmp
sbb
sub
mov
push
mov
mov
out
addb
cmpsb
cmp
cmp
push
mov
push
out
xchg
add
push
xchg
xor
xchg
rorl
xlat
pop
inc
push
imull
and
pop
push
inc
out
setnp
out
xor
adcl
dec
lock
std
lods
mov
cmp
sti
dec
addr16
jge
push
cmpsl
sti
dec
push
mov
inc
jbe
fs
lock
fwait
sti
inc
xchg
push
xor
add
lahf
ds
call
data16
int
lds
lods
lahf
in
or
shll
pop
lahf
pop
ret
ja
loopne
jp
push
divl
inc
jno
mov
subl
mov
mov
adcb
xchg
xorl
out
sar
sub
fcoms
addr16
stos
mov
inc
clc
insb
jmp
inc
jle
adc
repnz
mov
push
sti
ret
sahf
pop
data16
and
jb
dec
xor
pop
push
dec
popf
in
adc
mov
mov
xchg
jmp
sbb
mov
sub
scas
sbb
push
pop
addr16
iret
xchg
rcrb
leave
sub
pmuludq
push
inc
arpl
cmp
or
mov
pop
xchg
or
add
int3
hlt
js
pop
out
jg
sti
push
stc
lds
add
lds
mov
ror
out
cmp
enter
fsubs
xor
jge
in
adc
xchg
fnsave
cmp
lret
jno
xor
jl
testl
push
shlb
xor
andl
push
aad
sub
sub
cmpsl
inc
cmp
push
in
jne
xchg
enter
daa
fisubs
cmp
and
push
js
sub
sarb
ds
xor
movsl
cltd
sub
push
inc
icebp
lahf
divb
loopne
or
adc
push
lahf
sbb
jge
xor
ds
out
test
push
and
lock
dec
pop
push
xchg
lcall
fcompl
mov
loop
sub
push
mov
shlb
out
lret
mov
sub
add
inc
dec
push
ds
pushf
int
js
sub
aam
inc
ror
lret
imul
iret
mov
sahf
add
iret
test
cwtl
subb
jg
xor
loop
push
pushf
stc
mov
pushl
or
cmp
lahf
and
idivl
add
push
cmp
sub
or
push
jno
test
mov
pop
fidivs
outsl
jle
les
ljmp
adc
and
inc
int3
lods
dec
inc
icebp
mov
mov
sub
faddl
in
mov
sar
ror
incb
gs
sbbb
icebp
mov
sbbl
repz
sub
clc
jl
sbb
lahf
pop
cwtl
xlat
aas
pop
sub
js
in
adc
lods
pushf
in
xchg
cmp
jp
aad
cmpsl
nop
mov
jb
mov
dec
addr16
sbb
cmpsl
jecxz
stos
popf
push
mov
lea
mov
inc
mov
movb
inc
iret
fstpt
repnz
dec
mov
out
inc
sarl
aas
sub
stos
mov
lock
and
int3
mov
idivb
pop
clc
cwtl
out
je
mov
push
xor
inc
push
push
mov
negb
lock
jns
push
scas
dec
sarb
std
sub
shll
aam
addl
insl
imul
push
ljmp
xor
test
and
sahf
shll
add
mov
dec
test
and
push
dec
push
add
sub
mov
cld
cmpsb
xchg
outsl
lock
test
shll
fisubrl
test
cwtl
push
and
and
cli
sbb
or
fbstp
inc
cmp
xchg
dec
dec
dec
into
in
test
pop
dec
xchg
sub
inc
or
add
push
jge
add
mov
stos
aad
pusha
jmp
jns
cli
aam
scas
in
xchg
test
xor
pop
jge
and
test
ret
mov
xchg
mov
aas
pop
lods
dec
sbb
dec
jne
test
mov
and
out
in
arpl
xchg
roll
ds
loope
cltd
add
sub
xchg
call
or
out
addr16
jns
and
subl
jnp
imul
and
inc
push
ret
sub
out
movb
jae
push
mov
popf
adc
cli
push
xor
rol
push
xchg
sbb
sub
cmp
mov
scas
jle
ficoml
push
test
stc
shrl
iret
icebp
xchg
leave
mov
mov
arpl
adc
cmp
and
fiadds
adc
xchg
int3
fcomps
mov
pop
pusha
shl
push
mov
gs
cmp
movsb
jno
xor
mov
cltd
jge
sti
jo
dec
xor
scas
rcll
jno
sub
pop
push
pop
dec
cmp
ds
mov
xor
sub
test
test
hlt
inc
or
mov
in
pop
xchg
into
enter
daa
fisttpll
push
icebp
push
loope
or
cmp
cmp
mov
sbb
and
test
leave
sbbb
je
mov
add
jecxz
xor
loopne
stos
or
in
xchg
js
repnz
pop
jnp
lcall
js
lds
jno
mov
xchg
psubb
sub
push
mov
dec
and
sarb
push
inc
rolb
stc
mov
pop
vpaddd
ret
dec
jle
pop
jle
mov
addr16
sahf
cmpsl
data16
inc
mov
loop
int3
xlat
stc
pop
push
sbb
adc
or
ss
mov
cmp
pop
sbb
cli
fsubr
out
xor
lds
ja
ror
jb
cmc
and
loop
xchg
pop
sbb
mov
adc
or
add
std
aaa
leavew
enter
outsb
xchg
mov
sbb
mov
test
mov
pop
xor
outsl
mov
arpl
scas
gs
loopne
scas
sub
fwait
rolb
test
fnstcw
jmp
test
xchg
mov
add
fimull
sbb
sub
adc
xchg
adc
jmp
cli
std
xor
aad
pop
mov
mov
mov
popf
je
les
inc
push
cld
and
sti
cmp
testl
faddl
aad
fldt
icebp
test
sub
inc
out
jmp
aas
leave
pop
in
cs
jl
mov
mov
inc
cmp
std
xor
jmp
mov
mov
cld
in
nop
mov
repnz
mov
adc
mov
or
cmc
fcmovnbe
adc
mov
ret
mov
dec
arpl
dec
out
or
ljmp
pop
lods
fcmovbe
push
mov
dec
shl
and
cmp
pop
and
add
cltd
fcompl
push
or
or
mov
clc
enter
scas
daa
test
cmp
enter
push
stos
enter
call
dec
jo
std
pop
xchg
mulps
xor
or
and
mov
inc
xor
xor
add
pop
dec
cmp
mov
or
call
mov
add
aad
out
call
cli
xchg
jmp
in
enter
scas
out
mov
popa
stos
mov
cmp
push
ja
stos
cmc
jp
loopne
mov
mov
cwtl
xchg
and
std
stos
jne
pop
pop
mov
mov
rclb
or
xchg
lods
lods
mov
out
aad
sub
into
or
cmp
lds
pop
stc
ds
aad
push
jle
cmp
in
cltd
inc
pusha
shrb
lea
pop
aam
popl
popf
jae
das
pop
push
popf
mov
popf
cmp
push
mov
push
stos
aad
test
xchg
sbb
and
movsb
lret
xchg
scas
loope
insl
push
call
jno
iret
push
inc
sahf
repnz
add
sbb
repz
lea
arpl
sub
insb
or
mov
js
test
or
cmc
add
pop
push
pop
inc
mov
adc
outsb
out
sbb
sti
push
mov
clc
dec
adc
movsb
cld
ror
push
out
sub
jbe
jae
jge
out
push
sbb
sbb
outsb
sbb
jecxz
aas
jno
inc
dec
jl
orl
xor
aaa
push
push
scas
in
sti
push
jnp
inc
test
mov
nop
lods
cmpsb
or
push
in
inc
scas
xchg
enter
daa
fdivl
test
js
adc
cmp
mov
adc
xchg
in
xor
imul
popf
pop
xor
adc
insl
mov
jnp
data16
imul
hlt
int3
lcall
fdivl
sub
push
mov
sbb
clc
adc
ljmp
mov
push
dec
mov
adc
and
lahf
roll
ja
int
fildll
je
sbb
inc
aas
cmp
mov
lret
mov
jo
jno
adc
jo
mov
jg
xchg
push
loop
jbe
stc
adc
pushl
mov
adc
idivl
test
cmp
and
into
outsb
loop
cmc
ljmp
outsl
cmp
hlt
adc
jo
adc
mov
add
ds
lods
sbb
je
out
test
popf
mov
mov
daa
sti
push
addr16
xchg
gs
loopne
out
sub
shld
mov
movsb
xchg
les
cmp
push
lcall
into
imul
mov
pop
fidivrs
adc
loop
pushf
cmp
jmp
push
xor
aad
inc
popa
nop
inc
leave
addr16
add
push
je
mov
das
and
popf
lea
je
jb
cmpsb
movl
cmc
xorl
add
pop
xchg
aaa
popa
inc
mov
jp
or
or
pop
sbb
and
sub
rcll
lret
std
pop
cwtl
fs
cmp
dec
mov
mov
lock
repz
popa
lods
push
mov
pop
dec
lock
ds
aam
push
shl
mov
or
popf
aam
cmp
es
aaa
insl
aaa
lock
dec
ljmp
ljmp
push
lods
inc
jno
mov
outsl
xchg
mov
mov
inc
push
mov
cltd
pop
jl
test
addr16
test
push
iret
sub
and
add
jmp
jmp
repnz
mov
stos
mov
mov
xchg
std
and
fdivs
pop
pushl
mov
int3
xor
aad
mov
inc
xchg
fisttpl
dec
jg
mov
mov
or
dec
xor
and
cmp
mov
sbb
and
lock
ljmp
adc
bound
jg
in
neg
xchg
dec
sub
mov
pop
repz
xorb
mov
aam
mov
ret
sarl
mov
loopne
xor
leave
pushl
stos
fwait
add
sub
xchg
ja
cmpsl
and
in
out
add
sub
leave
ret
cmp
stos
xor
insb
inc
loop
jnp
enter
cmp
in
jp
pusha
pop
ja
fildll
sub
ret
dec
pop
or
in
inc
jle
push
jae
xchg
pop
push
pusha
adc
popf
popa
cmc
push
mov
pop
push
rcr
aaa
sbb
sbb
sub
imul
inc
push
das
mov
scas
and
sti
push
leave
nop
mov
hlt
fsubrs
arpl
outsl
movsb
inc
cmpsb
sbb
xor
or
test
inc
add
mov
mov
jecxz
je
lcall
pop
pushf
rclb
arpl
mov
cmp
xlat
sbb
aaa
iret
jbe
rol
scas
les
sbb
xchg
mov
cmp
fldl
jl
xchg
jns
jnp
and
sti
scas
ret
mov
push
dec
adc
test
mov
ja
mov
in
sub
jns
fistpl
jmp
sub
lock
cmp
add
xchg
movsl
scas
sub
and
and
stc
mov
loope
mov
xor
stos
js
cmp
or
int
push
jg
mov
sbb
xor
scas
add
cmp
lds
out
pop
mov
mov
or
mov
rolb
inc
xchg
xchg
int
cwtl
pop
sub
mov
lret
jle
xchg
mov
cltd
cmp
negl
lret
inc
dec
jg
dec
xchg
loop
push
stos
stc
movl
adc
cmp
rcll
xor
ror
inc
idiv
push
and
inc
sarl
cmp
pop
jg
push
push
xlat
into
push
inc
jmp
xor
ret
outsl
sbb
and
arpl
jbe
and
idivb
add
lock
daa
cmp
add
ret
testb
ja
sub
add
cmc
pop
sti
int
clc
test
jo
loopne
inc
dec
pop
mov
sbb
les
and
xchg
inc
jmp
sbb
push
sbb
cvtps2pd
push
js
out
scas
jmp
out
cs
fst
push
out
nop
sbb
dec
dec
pop
pusha
push
jb
imul
bound
ss
leave
jp
call
ret
mov
inc
orl
or
pop
ss
inc
cmp
inc
and
mov
mov
adc
fadds
testb
lahf
cwtl
pop
or
mov
hlt
xor
lret
rcrb
mov
arpl
aas
cld
ret
das
mov
cmpsb
shlb
mov
rol
lods
stc
dec
es
jl
insl
push
fistps
fisubl
sahf
popa
cmpsl
clc
cmp
fdivrs
xor
pop
pop
arpl
push
cltd
xchg
rorb
mov
mov
arpl
fstpl
imul
sbb
push
stos
pop
icebp
std
fisubrl
scas
in
xchg
inc
pop
test
mov
daa
rcrl
or
mov
mov
dec
imul
sub
test
dec
and
cmp
or
xor
fwait
mov
mov
mov
ja
or
icebp
dec
dec
lods
bound
mov
jns
mov
push
xchg
cltd
out
push
mov
ss
mov
scas
adc
ja
xchg
jp
jnp
mov
pop
call
mov
adc
lock
mov
xlat
test
mov
pop
jmp
inc
cmp
jo
push
out
test
sub
les
pop
addr16
scas
stos
dec
sbb
or
sarl
cmp
xor
sarl
dec
fisttps
and
pop
inc
lret
dec
inc
mov
data16
aas
out
push
and
lcall
insl
ficomps
push
pushf
out
les
xchg
and
push
imul
xchg
push
jbe
dec
adc
ret
dec
hlt
mov
pop
and
arpl
cmc
pop
inc
test
jns
push
or
or
pop
add
adc
mov
push
cmp
lds
shlb
pop
mov
push
movsb
mov
jno
inc
movsb
adc
ficoml
mov
mov
jg
sbb
xor
in
aaa
fdivrs
dec
mov
jno
jmp
jl
pop
mov
push
pop
sub
out
cmp
xchg
int3
scas
mov
inc
movsb
test
push
and
cmpsb
adc
in
adc
daa
ficoml
mov
push
pop
movsl
loope
pushf
mov
cmp
add
ds
sbb
mov
or
sbbb
sbb
and
add
or
and
repz
pop
mov
lea
cmp
pop
dec
jae
lcall
xor
popa
out
sub
jg
adc
mov
repz
test
mov
pushf
xchg
and
or
dec
and
int
push
sbb
push
repz
inc
mov
leave
rcrl
in
sbb
fmuls
test
dec
sbbb
sbb
bound
stc
jle
fsubl
aaa
adc
call
cmp
mov
idivl
shrb
xor
decb
leave
jge
xor
cmc
cmc
js
imul
icebp
mov
adc
mov
imul
or
mov
test
lods
jmp
xor
mov
mov
mov
pusha
scas
xchg
jl
ds
inc
sub
addr16
loopne
lods
cmp
add
fstps
xor
mov
test
sbb
sub
mov
cmp
jnp
int3
loop
pushf
xchg
lret
addl
negl
dec
mov
or
dec
inc
xor
jecxz
jno
sub
je
push
sub
mov
test
out
xchg
std
fstpt
daa
and
sahf
in
rcr
inc
aas
jno
aas
cmpsb
icebp
shll
int3
ficomps
and
fidivrl
test
xchg
std
sub
cwtl
fisubl
mov
push
sub
sahf
imul
aas
push
hlt
mov
mov
lock
rorb
push
dec
aam
inc
mov
shll
outsl
dec
loopne
push
cmpsl
dec
ljmp
inc
lods
sbb
mov
cmp
jb
or
sub
or
add
sbb
test
push
mov
sti
ret
or
xchg
jns
js
imul
sbb
push
roll
insl
dec
pop
pushf
cli
inc
stos
xchg
scas
mov
adc
call
pcmpeqd
enter
outsb
or
mov
mov
dec
mov
dec
push
xchg
test
sbb
xchg
adc
inc
imul
push
bound
add
es
ljmp
cwtl
bound
sub
fimull
xchg
call
dec
stos
mov
imul
or
out
hlt
sahf
pop
mov
sti
adc
dec
cmpsb
vpcmpeqw
mov
nop
push
out
imul
pusha
jmp
or
cmp
out
mov
das
or
add
stos
mov
fwait
stc
insb
push
xchg
ficomps
imul
push
fildll
movsb
ret
add
jns
and
jae
sub
or
test
fs
fisttpl
ficompl
mov
out
imul
scas
or
lea
xchg
pop
adc
test
mov
leave
jle
sub
outsb
ja
arpl
mov
orl
add
or
jp
add
jge
mov
pop
shrb
fisubrs
adc
lds
arpl
rorb
jne
andb
sbb
cmp
mov
movsb
popf
fidivl
jbe
mov
jge
sbb
pop
aaa
stos
or
cmp
jno
je
jl
or
dec
not
out
push
aas
clc
mov
scas
jge
jo
push
ja
cmp
jecxz
jne
jb
and
inc
add
in
clc
push
lcall
add
inc
loope
mov
xlat
cmp
int3
jbe
inc
imul
mov
adc
lahf
xchg
lret
mov
sbb
fs
ret
mov
outsb
inc
xchg
mov
popf
pop
flds
xchg
js
sarl
pop
mov
lcall
sub
jno
stos
sub
sub
jecxz
jnp
mov
mov
sbb
mov
jmp
mov
push
dec
and
int
ja
sub
lcall
fadd
mov
pop
mov
es
sahf
xor
test
cmpsb
fs
leave
jecxz
cmc
stos
loope
xor
cmp
ss
inc
push
cmp
inc
enter
xchg
test
xor
pusha
lods
mov
or
push
int3
into
pop
ljmp
pushl
adc
cmpsb
shrb
ja
adc
jle
add
repnz
test
rorb
xchg
out
lahf
or
jbe
add
in
lret
aam
sti
sub
cli
out
stos
fbld
ret
pop
sub
inc
push
jge
fsts
jecxz
sar
xchg
js
sbb
incl
xlat
jp
sbb
mov
fistpl
loope
cs
push
lds
sbb
jecxz
dec
mov
cs
sbbb
sub
dec
sub
jecxz
sub
rclb
cmpl
mov
imul
ret
std
inc
pop
jo
aas
inc
repnz
mov
xorl
and
das
roll
testb
or
iret
subb
push
sti
mov
push
dec
icebp
jne
mov
cltd
icebp
aas
lret
scas
dec
loop
xor
mov
mov
lock
js
das
jno
cwtl
rcrb
dec
sub
mov
aam
jg
lret
es
cmpsl
insl
in
push
add
mov
movsl
popa
aad
out
xchg
mov
fcomps
test
pop
mov
xor
cltd
add
inc
mov
sbb
push
sbb
cwtl
fucomp
add
clc
mov
sti
xchg
stos
sub
sbb
and
pop
lods
cld
pop
inc
lret
add
je
xor
imul
push
or
mov
jl
dec
jno
dec
rcrl
nop
xchg
cwtl
xchg
dec
or
xor
lcall
daa
inc
push
add
in
add
sar
lret
mov
jns
push
push
in
jp
xchg
aaa
cmp
loope
cltd
mov
add
jb
jp
in
mov
inc
cmpl
std
dec
mov
test
and
mov
pop
cmp
dec
or
mov
xchg
fcoms
orl
mov
mov
pushf
push
stos
das
push
jo
mov
xchg
inc
jnp
xchg
outsl
jle
clc
dec
in
jne
pusha
sub
lcall
xchg
aam
mov
loopne
lahf
fisttpl
pop
jbe
test
push
sbb
push
ficoml
ficoms
xchg
inc
nop
imul
scas
insl
xlat
pop
push
add
fistl
inc
mov
aad
hlt
mov
dec
hlt
mov
into
cmp
scas
or
dec
shrb
je
adcb
add
repnz
int3
jbe
adc
jg
fmulp
lods
xor
mov
dec
shlb
mov
inc
leave
inc
cmp
pop
into
movsb
sub
pusha
push
sub
inc
jbe
pusha
mov
mov
ljmp
jne
jno
and
jl
mov
dec
scas
sub
and
in
mov
sub
cmp
test
jmp
out
inc
xchg
push
mov
in
test
fdivrs
push
es
push
inc
sub
test
pop
pop
ds
fisubl
repz
lahf
mov
stc
cmpb
sbb
into
test
jns
ja
add
js
std
movsb
pop
lret
lcall
jmp
sbb
sbb
jl
inc
outsb
cmpsb
into
into
adc
push
js
popl
shlb
or
insb
ja
and
popf
push
push
fwait
sub
add
add
pop
inc
dec
sub
xorb
dec
adc
push
push
lcall
cltd
dec
test
adc
fnclex
mov
stc
in
roll
adc
pop
ss
fadds
movsl
adc
cmp
jnp
fcomi
add
aaa
mov
mov
sub
cmc
push
pop
xor
loope
mov
lret
or
shrb
pop
pushf
js
mov
hlt
lret
out
stc
add
jmp
pop
in
ss
insb
sti
fcmove
sbb
adc
jg
in
cmp
stc
mov
jns
arpl
fxch
jmp
dec
pause
push
cmp
push
add
add
xlat
mov
ret
jp
test
add
fst
daa
and
dec
jl
mov
push
out
and
movsb
mov
jecxz
into
adc
xor
outsl
decb
xchg
call
aas
jl
mov
jnp
adc
push
adc
cwtl
push
jbe
pop
imul
cmp
andl
in
mov
cmp
xlat
and
fnstcw
rcl
addb
ja
cwtl
push
rcrl
mov
add
mov
dec
lds
cld
fldt
lret
sbb
sbb
mov
out
mov
push
push
and
push
jg
shlb
sbb
sub
push
aam
popf
ret
pop
xlat
xchg
flds
dec
jb
cmpsl
xlat
int3
xchg
ljmp
mov
lods
push
mov
inc
test
das
pop
rclb
mov
cltd
cmp
test
xorl
fstl
mov
clc
out
or
xchg
jmp
xchg
shrl
outsl
lret
adc
push
xchg
sbb
push
inc
mov
jo
adc
insb
or
js
xor
loop
mov
push
mov
xor
popf
jae
xchg
stos
dec
cld
mov
je
shll
fwait
inc
push
pop
push
test
hlt
add
pop
add
enter
lock
adc
cmp
das
mov
out
cltd
cs
jp
test
mov
or
mov
fldcw
mov
mov
aas
repnz
daa
cmp
jmp
mov
or
dec
cld
sub
mov
in
aaa
mov
add
sarb
dec
jnp
mov
jle
leave
xor
pusha
imul
in
xor
pop
out
lock
stos
in
jae
aam
push
insb
adc
mov
pop
lahf
and
xchg
and
lcall
shrb
push
dec
cs
adc
mov
add
leave
insb
inc
push
hlt
add
fldenv
and
mov
lea
sbb
lret
inc
incl
or
add
popf
cwtl
in
int3
popa
lea
fidivs
jnp
adc
pop
rolb
pop
and
test
movsb
mov
mov
sbb
insb
jge
jge
pop
push
sbb
inc
scas
cmp
gs
jl
loopne
dec
aad
das
push
add
icebp
lods
jo
or
scas
aas
push
push
push
lcall
push
mov
dec
inc
and
xchg
movb
daa
xlat
jnp
push
sbb
loope
jno
sub
pop
fstpt
ds
lea
push
and
push
sbb
aad
push
add
sub
xor
cli
pop
daa
fs
lea
pop
lcall
adc
sub
ja
or
mov
add
arpl
mov
mov
into
pop
mov
loop
and
cmpsl
xor
push
xchg
int
out
sub
test
pop
mov
sti
sbb
loop
data16
cli
sbb
sahf
jns
flds
jmp
push
repnz
sar
stc
mov
aaa
repnz
inc
scas
cmp
mov
std
xor
push
push
shll
push
cmp
cmp
xchg
lods
and
fstpl
cmc
int
pop
xor
xchg
inc
adc
add
pusha
add
pop
data16
lods
mov
fwait
out
xlat
scas
sub
mov
mov
push
xchg
xor
movsb
test
xchg
pop
rcrb
nop
mov
flds
adc
jnp
pop
jmp
dec
sbb
cmp
sahf
xlat
clc
push
mov
pop
xchg
test
shll
pushf
xchg
xchg
in
jmp
in
mov
aad
push
stos
nop
mov
dec
fisttpl
inc
dec
test
xorl
jecxz
ret
xor
inc
lea
daa
call
mov
jb
subl
push
fcmovnb
aaa
pop
ret
inc
push
mov
mov
cmp
mov
icebp
shll
and
loope
and
push
testb
cmp
or
in
mov
and
jbe
mov
xchg
mov
mov
lock
inc
iret
das
das
mov
rolb
add
sub
in
sbb
fwait
enter
push
pop
es
push
test
subb
shrl
dec
ljmp
stos
lods
pop
cli
inc
mov
push
mov
and
fistl
iret
pop
fistps
test
xchg
sbb
push
sahf
ret
cmp
clc
sub
leave
xchg
sub
sbb
in
push
xchg
aas
pop
popf
call
sti
out
cmp
xchg
pusha
das
jge
pop
dec
jno
xchg
shlb
ss
push
pop
xor
ja
mov
push
inc
inc
dec
lahf
lock
std
lods
xchg
mov
dec
out
and
movsl
lock
scas
jns
jae
fcompl
dec
call
xchg
ja
fdivr
dec
pop
bound
insl
jns
add
in
lret
sub
jle
les
lcall
jp
and
jns
mov
dec
popf
xchg
dec
dec
jae
jne
jae
mov
xor
out
push
insl
or
cld
out
pop
xchg
outsb
inc
lcall
mov
xor
mov
gs
fs
adc
subl
jnp
pushf
push
jle
mov
out
mov
or
ret
dec
pop
push
call
shlb
mov
das
mov
popf
and
cltd
mov
cwtl
popl
fidivl
jle
sbb
mov
scas
xor
xor
xchg
stc
adc
aam
iret
mov
or
lcall
hlt
dec
jp
arpl
mov
inc
mov
and
xchg
sahf
mov
jae
or
je
xor
in
int3
dec
loopne
pop
pop
test
lds
gs
mov
push
inc
cmp
popa
movsb
ds
push
leave
jp
jbe
push
adc
push
inc
sbb
divb
call
or
jno
out
jl
or
dec
inc
mov
push
call
rcrl
add
hlt
push
insl
or
test
cmpl
cmpsb
sbb
negl
pushf
lea
cld
movsl
push
roll
add
sub
or
cmp
fidivrs
mov
xlat
movsl
shrl
mov
andb
add
fiadds
xor
xlat
movsl
pushl
pop
dec
imul
enter
dec
mov
das
push
xor
jbe
jb
enter
inc
outsb
insb
in
gs
or
mov
cmpxchg
mov
mov
and
add
push
in
int
repz
sub
push
ds
scas
lret
movsb
sarl
mov
push
negb
mov
sahf
sbb
outsl
test
dec
sbb
lcall
stc
pop
gs
adc
sbb
ja
cmp
mov
divl
xor
cmp
cmp
jecxz
or
test
xor
ja
outsl
jbe
push
adc
inc
mov
add
jne
pop
cmpl
sub
cmp
sub
iret
aaa
mov
or
pop
sti
cmp
ds
loopne
pop
in
push
sbb
inc
mov
mov
cmp
or
mov
lds
adc
pop
cmp
dec
xlat
aaa
cmp
pop
adc
adc
pushf
cmp
cltd
call
aad
call
repz
cmp
jb
mov
popa
je
scas
arpl
ss
int3
xor
push
insl
lcall
sbb
jle
inc
stc
in
testb
inc
outsl
inc
stos
in
aas
and
mov
test
jns
test
psrlq
add
std
les
mov
les
scas
pop
add
cli
scas
lods
cld
sbb
lret
sti
lret
fldcw
mov
mov
lock
dec
aas
das
push
in
rcl
sbb
sub
adc
inc
cmc
ret
ja
mov
fildll
mov
mov
je
cmpsl
aad
movsl
ljmp
stos
lods
xchg
clc
mov
inc
xor
mov
out
add
mov
test
push
cmc
push
popa
cmp
frstor
es
gs
jae
addr16
sbb
inc
mov
dec
xor
mov
popf
in
repz
cmpsl
pop
mov
pslld
xor
dec
mov
popa
sbb
push
pusha
call
test
sbb
dec
loop
dec
inc
lds
or
popa
lds
out
mov
jns
xchg
out
fdivrp
jmp
pop
or
jo
in
repnz
and
xchg
mov
aaa
iret
mov
push
aam
ja
xor
mov
push
sarb
rorl
xchg
pop
jne
mov
cmp
mov
cmpsb
jmp
cmp
cmp
es
movsl
dec
sub
stos
or
jl
stos
mov
subb
jnp
inc
sbb
push
int3
in
hlt
sbb
inc
xchg
ret
push
pop
push
or
inc
shl
jae
mov
popf
dec
mov
xchg
fdivl
fisubrl
mov
shll
jno
sub
jl
push
fstps
adc
add
iret
jmp
scas
bswap
pop
jmp
movsl
arpl
adc
sub
push
std
daa
in
or
push
pop
add
push
pop
int3
aaa
pop
jg
mov
fidivs
and
sarb
mov
std
push
dec
cmp
push
push
sbb
pop
jbe
adc
sbb
shll
cmpsl
xchg
dec
int
out
push
mov
test
pop
push
lret
mov
push
jo
adc
std
rclb
inc
cmp
test
dec
mov
scas
test
xchg
dec
inc
enter
daa
aad
lret
sbb
aam
std
mov
cmp
and
fdivrs
fistps
mov
cmc
sbb
mov
xor
and
pop
jne
call
pop
xchg
loop
mov
imul
iret
push
adc
out
das
.byte
.byte
add
