jmp
mov
jmp
mov
jmp
mov
xor
aaa
xor
xor
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
xchg
mov
mov
mov
xchg
lea
mov
dec
jne
xchg
lea
mov
lea
xchg
mov
mov
movl
lea
push
mov
push
call
movl
lea
push
mov
push
call
mov
cmp
jbe
mov
mov
xchg
mov
lea
mov
inc
xchg
xchg
inc
lea
lea
lea
inc
dec
je
xchg
dec
movl
lea
push
mov
push
call
mov
cmp
jbe
mov
mov
xchg
mov
lea
mov
inc
xchg
xchg
inc
lea
lea
lea
inc
dec
je
xchg
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jl
mov
lea
mov
inc
dec
mov
mov
lea
inc
dec
inc
mov
lea
lea
lea
xchg
xchg
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
xchg
lea
cmp
jl
mov
mov
jmp
mov
xchg
lea
mov
inc
lea
lea
xchg
lea
mov
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
dec
inc
dec
xchg
jmp
xchg
mov
lea
movl
lea
push
mov
push
call
mov
pop
ret
mov
push
mov
add
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
mov
cmp
jnp
mov
mov
mov
lea
xchg
lea
dec
inc
dec
mov
mov
xchg
dec
inc
dec
je
mov
inc
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jbe
mov
mov
mov
mov
mov
inc
dec
je
mov
mov
inc
inc
inc
xchg
mov
lea
mov
lea
dec
inc
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jnp
mov
mov
mov
lea
xchg
lea
dec
inc
dec
mov
mov
xchg
dec
inc
dec
je
mov
inc
dec
mov
cmp
je
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
dec
inc
dec
xchg
jmp
xchg
mov
lea
mov
xor
divl
test
jne
cmp
jge
xchg
dec
lea
inc
cmp
jnp
lea
lea
lea
xchg
mov
dec
jmp
mov
xchg
dec
inc
dec
lea
mov
dec
inc
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jl
lea
jmp
mov
dec
inc
inc
lea
xchg
mov
mov
xchg
mov
xchg
dec
inc
mov
xchg
dec
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
inc
dec
je
mov
mov
inc
inc
inc
xchg
mov
lea
mov
lea
dec
inc
dec
mov
cmp
je
jmp
cmp
jl
mov
lea
mov
inc
dec
mov
mov
lea
inc
dec
inc
mov
lea
lea
lea
xchg
xchg
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
xchg
lea
cmp
jl
mov
mov
jmp
mov
xchg
lea
mov
inc
lea
lea
xchg
lea
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
xchg
mov
mov
mov
xchg
lea
mov
dec
jne
xchg
lea
mov
lea
xchg
mov
mov
mov
cmp
je
jmp
cmp
jl
mov
lea
mov
inc
dec
mov
mov
lea
inc
dec
inc
mov
lea
lea
lea
xchg
xchg
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
call
cmp
jl
lea
jmp
mov
dec
inc
inc
lea
xchg
mov
mov
xchg
mov
xchg
dec
inc
mov
xchg
dec
mov
sub
mov
mov
cmp
jbe
mov
mov
xchg
mov
lea
mov
inc
xchg
xchg
inc
lea
lea
lea
inc
dec
je
xchg
dec
push
mov
mov
xor
call
mov
cmp
jge
xchg
dec
lea
inc
cmp
jnp
lea
lea
lea
xchg
mov
dec
jmp
mov
xchg
dec
inc
dec
lea
mov
dec
inc
dec
mov
mov
mov
call
cmp
jbe
mov
mov
mov
mov
mov
inc
dec
je
mov
mov
inc
inc
inc
xchg
mov
lea
mov
lea
dec
inc
dec
push
mov
mov
xor
call
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
dec
inc
dec
xchg
jmp
xchg
mov
lea
xor
mov
mov
cmp
jnp
mov
mov
mov
lea
xchg
lea
dec
inc
dec
mov
mov
xchg
dec
inc
dec
je
mov
inc
dec
lea
lea
call
mov
cmp
jbe
mov
mov
xchg
mov
lea
mov
inc
xchg
xchg
inc
lea
lea
lea
inc
dec
je
xchg
dec
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jl
mov
lea
mov
inc
dec
mov
mov
lea
inc
dec
inc
mov
lea
lea
lea
xchg
xchg
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
mov
xchg
mov
mov
mov
xchg
lea
mov
dec
jne
xchg
lea
mov
lea
xchg
mov
mov
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
xchg
lea
cmp
jl
mov
mov
jmp
mov
xchg
lea
mov
inc
lea
lea
xchg
lea
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
dec
inc
dec
xchg
jmp
xchg
mov
lea
mov
sub
add
add
mov
mov
cmp
jnp
mov
mov
mov
lea
xchg
lea
dec
inc
dec
mov
mov
xchg
dec
inc
dec
je
mov
inc
dec
lea
pushl
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
inc
dec
je
mov
mov
inc
inc
inc
xchg
mov
lea
mov
lea
dec
inc
dec
mov
mov
mov
call
mov
mov
mov
cmp
jge
xchg
dec
lea
inc
cmp
jnp
lea
lea
lea
xchg
mov
dec
jmp
mov
xchg
dec
inc
dec
lea
mov
dec
inc
dec
mov
call
push
mov
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jbe
mov
mov
xchg
mov
lea
mov
inc
xchg
xchg
inc
lea
lea
lea
inc
dec
je
xchg
dec
mov
mov
movl
xchg
lea
cmp
jl
mov
mov
jmp
mov
xchg
lea
mov
inc
lea
lea
xchg
lea
mov
mov
call
push
mov
mov
push
mov
mov
call
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
dec
inc
dec
xchg
jmp
xchg
mov
lea
mov
call
push
mov
mov
push
mov
mov
call
mov
mov
mov
xchg
lea
cmp
jl
mov
mov
jmp
mov
xchg
lea
mov
inc
lea
lea
xchg
lea
mov
mov
call
push
mov
mov
push
mov
mov
call
mov
mov
mov
cmp
jl
lea
jmp
mov
dec
inc
inc
lea
xchg
mov
mov
xchg
mov
xchg
dec
inc
mov
xchg
dec
mov
pop
ret
add
je
jb
arpl
fs
jae
add
push
cmp
testb
push
adc
jnp
jnp
ja
inc
js
adcb
jae
pusha
jnp
data16
imul
adc
dec
jnp
push
subw
adc
dec
jnp
push
data16
adc
push
ja
ja
andl
ja
inc
xorw
data16
gs
jge
data16
es
js
adcb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
popf
add
icebp
and
xchg
in
sbb
insl
icebp
cmp
sbb
push
adc
aaa
push
adc
aaa
push
adc
aaa
push
adc
aaa
push
adc
aaa
push
adc
aaa
push
adc
aaa
push
adc
aaa
push
adc
dec
mov
adc
push
in
std
pop
mov
mov
adc
push
in
std
push
mov
mov
adc
push
in
std
sub
fwait
push
in
std
aas
mov
mov
adc
push
in
std
xor
adc
push
in
std
or
fwait
push
in
std
and
fwait
push
in
std
pop
and
popf
push
in
dec
dec
dec
aad
aam
dec
fistpl
mov
popf
aam
lahf
push
adc
lahf
push
adc
popf
add
sbb
push
fcompl
push
popf
push
fcompl
push
fcompl
push
fdiv
inc
pusha
popf
push
fcompl
add
cmp
fcompl
push
add
fdiv
inc
dec
popf
push
add
pop
and
adc
popf
pop
lock
pop
sbb
push
add
add
in
xchg
adc
adc
push
int3
popf
push
int3
xchg
insb
sbb
cwtl
lds
adc
push
int3
popf
adc
push
add
adc
adc
adc
adc
push
enter
adc
push
fdiv
inc
sub
cld
icebp
and
popf
push
enter
push
popf
adc
push
add
enter
adc
hlt
std
jl
push
enter
adc
clc
popf
push
enter
adc
hlt
std
bound
adc
push
clc
popf
adc
icebp
icebp
adc
inc
popf
push
cld
inc
popf
push
fdiv
inc
sub
inc
hlt
fwait
push
std
xor
clc
adc
popf
push
les
push
cld
inc
popf
push
fdiv
inc
sub
inc
hlt
fwait
push
xchg
push
hlt
sbb
push
clc
xchg
sub
addr16
popf
push
enter
adc
xchg
das
icebp
icebp
icebp
popf
push
in
push
cmp
push
add
fcompl
call
je
adc
add
push
fcoml
push
loopne
popf
push
fdiv
inc
dec
jl
xchg
adc
jle
popf
push
fcompl
push
fdiv
inc
dec
jl
xchg
adc
jle
popf
push
sbb
popf
push
fdiv
inc
dec
popf
inc
in
popf
ja
lahf
cwtl
cmp
icebp
icebp
jle
sub
addr16
xchg
add
icebp
icebp
and
icebp
negb
adc
lahf
push
adc
popf
add
sbb
outsl
and
cmpsb
xchg
and
mov
adc
adc
ljmp
adc
adc
aam
dec
adc
adc
xor
add
popa
adc
adc
aam
jmp
enter
adc
cmp
addr16
push
adc
adc
cmp
ret
cld
push
adc
sar
adc
adc
adc
adc
gs
xchg
lock
sbb
push
push
xchg
fwait
repnz
in
push
std
mov
sahf
or
aad
fistl
add
icebp
icebp
add
cld
stc
icebp
icebp
icebp
data16
jae
sbb
lahf
push
adc
out
fldcw
es
ret
icebp
icebp
icebp
cmp
fwait
leave
aad
inc
popf
add
icebp
fwait
push
lock
sbb
push
adc
ficoml
sbb
in
adc
aam
push
in
sahf
inc
in
pushf
test
movsb
push
adc
push
in
xchg
outsl
in
adc
sti
ficoml
adc
push
lock
mov
pushf
push
jmp
outsl
jmp
and
ficoml
adc
aam
push
out
popf
inc
lock
sbb
and
pushf
cwtl
pop
jmp
icebp
icebp
repnz
out
sahf
push
out
cs
jmp
sbb
push
out
adc
push
in
xchg
outsl
in
adc
ret
ficoml
adc
push
in
adc
aam
push
out
and
and
icebp
icebp
adc
inc
in
and
adc
aaa
icebp
adc
adc
push
out
and
sahf
xchg
and
and
sahf
inc
jmp
test
movsb
push
adc
push
in
xchg
outsl
in
adc
mov
lahf
push
adc
popf
add
push
icebp
and
push
adc
aaa
icebp
adc
adc
sbb
push
adc
aam
sbb
pop
sbb
push
adc
stos
xchg
movsb
push
adc
aaa
icebp
adc
adc
sbb
sbb
push
adc
xchg
and
and
push
adc
xchg
and
pop
sbb
push
adc
xchg
and
sbb
pushf
test
movsb
push
adc
aam
sbb
push
adc
stos
xchg
and
pop
sbb
and
icebp
adc
adc
push
out
and
sahf
xchg
and
pushf
push
repnz
push
repnz
dec
aad
and
inc
push
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
xchg
mov
mov
mov
xchg
lea
mov
dec
jne
xchg
lea
mov
lea
xchg
mov
mov
push
call
mov
movl
cmp
jge
xchg
dec
lea
inc
cmp
jnp
lea
lea
lea
xchg
mov
dec
jmp
mov
xchg
dec
inc
dec
lea
mov
dec
inc
dec
mov
mov
call
mov
mov
cmp
jbe
mov
mov
xchg
mov
lea
mov
inc
xchg
xchg
inc
lea
lea
lea
inc
dec
je
xchg
dec
movl
mov
mov
call
mov
cmpl
je
cmp
jl
lea
jmp
mov
dec
inc
inc
lea
xchg
mov
mov
xchg
mov
xchg
dec
inc
mov
xchg
dec
mov
mov
call
mov
cmpl
je
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
dec
inc
dec
xchg
jmp
xchg
mov
lea
lea
push
push
mov
sub
push
mov
push
call
xchg
lea
cmp
jl
mov
mov
jmp
mov
xchg
lea
mov
inc
lea
lea
xchg
lea
mov
mov
cmp
je
mov
subb
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
dec
inc
dec
xchg
jmp
xchg
mov
lea
mov
xorb
cmp
jl
lea
jmp
mov
dec
inc
inc
lea
xchg
mov
mov
xchg
mov
xchg
dec
inc
mov
xchg
dec
incl
mov
cmp
jne
cmp
jl
mov
lea
mov
inc
dec
mov
mov
lea
inc
dec
inc
mov
lea
lea
lea
xchg
xchg
inc
mov
call
xchg
lea
cmp
jl
mov
mov
jmp
mov
xchg
lea
mov
inc
lea
lea
xchg
lea
mov
mov
push
mov
push
call
cmpl
je
xchg
lea
cmp
jl
mov
mov
jmp
mov
xchg
lea
mov
inc
lea
lea
xchg
lea
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
dec
inc
dec
xchg
jmp
xchg
mov
lea
mov
cmp
jnp
mov
mov
mov
lea
xchg
lea
dec
inc
dec
mov
mov
xchg
dec
inc
dec
je
mov
inc
dec
push
mov
push
call
mov
pop
ret
imul
gs
xor
cs
insb
add
add
push
imul
jb
je
arpl
push
mov
add
mov
cmp
jnp
mov
mov
mov
lea
xchg
lea
dec
inc
dec
mov
mov
xchg
dec
inc
dec
je
mov
inc
dec
mov
mov
mov
xor
add
mov
cmp
jne
pushl
call
add
cmp
jne
cmp
jge
xchg
dec
lea
inc
cmp
jnp
lea
lea
lea
xchg
mov
dec
jmp
mov
xchg
dec
inc
dec
lea
mov
dec
inc
dec
movb
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
dec
inc
dec
xchg
jmp
xchg
mov
lea
mov
mov
pop
ret
lea
push
mov
add
xchg
lea
cmp
jl
mov
mov
jmp
mov
xchg
lea
mov
inc
lea
lea
xchg
lea
mov
mov
cmp
jbe
mov
mov
xchg
mov
lea
mov
inc
xchg
xchg
inc
lea
lea
lea
inc
dec
je
xchg
dec
call
test
jne
mov
jmp
movw
cmp
jbe
mov
mov
mov
mov
mov
inc
dec
je
mov
mov
inc
inc
inc
xchg
mov
lea
mov
lea
dec
inc
dec
call
lea
mov
pop
ret
push
mov
add
xchg
lea
cmp
jl
mov
mov
jmp
mov
xchg
lea
mov
inc
lea
lea
xchg
lea
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
jge
xchg
dec
lea
inc
cmp
jnp
lea
lea
lea
xchg
mov
dec
jmp
mov
xchg
dec
inc
dec
lea
mov
dec
inc
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
lea
push
mov
push
call
movl
lea
push
mov
push
call
mov
xchg
mov
mov
mov
xchg
lea
mov
dec
jne
xchg
lea
mov
lea
xchg
mov
mov
movl
lea
push
mov
push
call
call
cmp
jbe
mov
mov
mov
mov
mov
inc
dec
je
mov
mov
inc
inc
inc
xchg
mov
lea
mov
lea
dec
inc
dec
movl
lea
push
mov
push
call
movl
lea
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
call
cmp
jge
xchg
dec
lea
inc
cmp
jnp
lea
lea
lea
xchg
mov
dec
jmp
mov
xchg
dec
inc
dec
lea
mov
dec
inc
dec
push
call
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
jge
xchg
dec
lea
inc
cmp
jnp
lea
lea
lea
xchg
mov
dec
jmp
mov
xchg
dec
inc
dec
lea
mov
dec
inc
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
lea
push
mov
push
call
movl
lea
push
mov
push
call
mov
xchg
mov
mov
mov
xchg
lea
mov
dec
jne
xchg
lea
mov
lea
xchg
mov
mov
movl
lea
push
mov
push
call
call
cmp
jbe
mov
mov
mov
mov
mov
inc
dec
je
mov
mov
inc
inc
inc
xchg
mov
lea
mov
lea
dec
inc
dec
movl
lea
push
mov
push
call
movl
lea
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
call
call
mov
cmp
jbe
mov
mov
xchg
mov
lea
mov
inc
xchg
xchg
inc
lea
lea
lea
inc
dec
je
xchg
dec
mov
pop
ret
popa
add
jo
ja
imul
arpl
jo
insb
add
add
add
in
add
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
cmp
jbe
mov
mov
xchg
mov
lea
mov
inc
xchg
xchg
inc
lea
lea
lea
inc
dec
je
xchg
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
cmp
jl
mov
lea
mov
inc
dec
mov
mov
lea
inc
dec
inc
mov
lea
lea
lea
xchg
xchg
inc
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
mov
cmp
jbe
mov
mov
xchg
mov
lea
mov
inc
xchg
xchg
inc
lea
lea
lea
inc
dec
je
xchg
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
lea
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
lea
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
cmp
jge
xchg
dec
lea
inc
cmp
jnp
lea
lea
lea
xchg
mov
dec
jmp
mov
xchg
dec
inc
dec
lea
mov
dec
inc
dec
movl
lea
push
mov
push
call
call
mov
pop
ret
mov
subl
jne
mov
cmp
jl
mov
lea
mov
inc
dec
mov
mov
lea
inc
dec
inc
mov
lea
lea
lea
xchg
xchg
inc
mov
mov
lea
call
cmp
jl
lea
jmp
mov
dec
inc
inc
lea
xchg
mov
mov
xchg
mov
xchg
dec
inc
mov
xchg
dec
ret
ret
lea
add
inc
mov
xchg
mov
dec
add
add
add
inc
add
cs
ret
out
dec
rolb
add
sub
xchg
jo
mov
ficoms
add
aam
aad
jmp
roll
add
add
dec
jge
popf
xchg
add
mov
mov
xchg
mov
ret
div
mov
stos
imul
pop
sti
js
add
test
sarb
cmpps
cmp
dec
add
add
aad
in
andl
ljmp
mov
and
add
inc
movsl
lock
scas
rcrb
xor
add
add
lock
frstor
add
push
call
add
hlt
push
mov
pop
pop
add
out
xor
lea
mov
outsb
adc
mov
add
add
orb
add
dec
jg
arpl
adc
js
push
fucom
xchg
mov
sub
movsb
sbb
mov
jmp
sub
jmp
loop
xor
in
mov
add
mov
aad
sti
outsl
into
fiadds
fildll
lret
in
imul
les
loopne
insl
push
xchg
sub
add
outsl
jecxz
shlb
stc
loopne
sub
xor
out
loopne
or
mov
mov
push
add
add
adc
and
inc
popf
es
fcoml
or
movsb
add
jmp
xchg
mov
out
add
add
mov
pusha
add
mov
out
repnz
mov
loope
add
sub
jbe
add
in
push
add
jp
xchg
add
cmp
xchg
cmp
or
js
push
add
test
imul
add
add
mov
movl
fwait
pop
add
aas
push
bound
inc
inc
sub
test
out
pop
xchg
cmp
inc
mov
clc
popf
mov
adc
add
add
mov
add
cmp
test
sarl
loope
add
stc
psrlq
cmc
fstp
negb
fwait
imul
mov
int
aas
std
test
or
jmp
pop
stc
pop
jne
push
ja
movsl
add
dec
add
mov
push
add
adc
add
mov
mov
jg
jne
aam
dec
xor
int3
adc
add
xchg
add
add
dec
popf
add
out
add
loopne
cltd
inc
sub
mov
and
inc
imul
gs
rcrl
cmp
outsl
cs
sub
add
cmp
inc
add
add
dec
imul
add
ret
stos
fbld
hlt
insb
add
jp
rolb
dec
fwait
mov
cmp
add
add
sti
pop
push
mov
add
cmc
mov
push
inc
add
mov
stc
push
add
adc
into
dec
add
add
xor
jge
xchg
xor
jno
jnp
pop
add
add
leave
add
add
jne
add
leave
add
add
xor
pop
lods
mov
adc
orl
ja
aam
push
add
sbb
imul
mov
test
mov
cmp
xorl
jo
leave
add
lret
int3
out
add
movsl
enter
repnz
sbb
mov
ret
dec
int
add
inc
add
mov
pop
pushf
inc
mov
stos
bound
xchg
add
js
cmp
repz
das
xchg
lods
cwtl
inc
sub
and
inc
outsb
bound
outsl
shlb
jp
jo
dec
cmp
jns
ljmp
xor
sbb
mov
arpl
cld
pop
mov
sub
jmp
fsts
add
cmp
js
inc
sub
icebp
ficompl
sbb
inc
sub
adc
enter
in
das
mov
std
sub
pop
adc
insl
cmp
popf
xlat
insl
mull
cmp
rcll
dec
mov
xor
mov
jecxz
xchg
lcall
and
ljmp
into
or
outsl
adc
fidivs
lods
lds
fmull
mov
cmp
xor
fwait
hlt
cmp
pop
pop
or
push
into
and
gs
aam
adc
mov
pop
aas
subl
cwtl
mov
xchg
pusha
push
sbb
popf
jae
xlat
movsl
or
in
inc
mov
xchg
xchg
sti
xchg
fistpl
mov
leave
xor
dec
call
adc
fsts
je
adcb
repz
inc
mov
call
sub
ds
cmpsb
push
in
adc
leave
pushf
inc
rolb
fcmovnu
cmpsb
inc
pop
cmp
aas
push
aaa
xchg
jb
lea
in
je
test
jecxz
mov
testb
fistpl
xor
lret
popf
sub
enter
inc
pop
out
mov
sub
daa
lock
add
das
mov
sub
mov
dec
int3
or
pop
dec
es
loope
dec
jb
xor
ret
int3
cmpsb
mov
sbb
in
lret
leave
fdivrl
ror
dec
mov
sub
sub
lods
xchg
out
xor
aam
sbb
push
pop
hlt
fcomp
pop
push
add
mov
fcoml
and
popa
mov
pop
inc
mov
xchg
push
inc
xchg
movsl
cmpsb
in
pusha
pop
fmull
mov
pop
push
test
pushf
mov
test
dec
inc
in
imul
mov
sub
jnp
push
pop
dec
sbbl
add
js
sahf
call
mov
fs
or
push
xor
mov
mov
ja
or
jnp
es
cmp
dec
inc
arpl
or
int3
pop
fwait
lock
dec
sub
jne
js
mov
dec
or
bound
dec
jns
popf
clc
in
or
out
adc
sub
push
fsubl
dec
cmpsb
jp
cld
pop
mov
stos
xor
fsubrl
in
pushl
pusha
jecxz
fstp
adc
into
jmp
jg
push
orl
push
test
inc
popf
or
mov
inc
js
stos
sahf
test
je
dec
mov
fdivrp
push
mov
lds
aaa
jle
iret
xchg
and
ret
push
pop
xor
mov
jae
sub
and
mov
and
xchg
icebp
call
adc
pop
adc
lds
outsb
mov
bnd
inc
xchg
mov
inc
enter
xlat
jbe
lcall
dec
sub
aaa
adc
push
pop
add
fmul
mov
or
push
rorl
xor
sbb
scas
stos
in
and
jge
loop
push
movsb
cmpsb
lcall
rorb
outsl
adc
daa
ret
mov
jno
inc
or
mov
xchg
dec
adcl
movsl
push
pop
lock
enter
mov
test
xchg
in
call
js
negb
out
js
mov
pop
cmc
jnp
push
xor
ret
shrl
sub
mov
outsb
lds
adc
dec
and
or
imul
jmp
mov
cwtl
int
out
sub
les
stos
int3
and
cmpsl
jge
fsubl
imul
pop
cmp
sahf
xor
daa
push
add
rol
mov
int3
push
lods
jmp
xchg
clc
mov
addr16
sbb
cmp
pop
fadds
lret
push
shrl
sbb
mov
into
cltd
mov
push
outsl
add
jb
out
adc
fs
push
fcoml
fiaddl
jmp
test
lods
lods
outsl
decb
mov
push
xor
inc
cmpl
sub
mov
jg
gs
cmp
mov
push
pop
mov
test
imul
jne
xchg
xchg
mov
popf
movl
xlat
in
pop
fmuls
mov
std
icebp
adc
xor
cmp
aad
jo
nop
movsb
iret
lahf
dec
inc
mov
inc
repnz
push
in
mov
repz
push
outsl
lahf
adc
jno
jns
jne
fld
stos
lock
pop
pop
xor
adc
adc
jmp
mov
pop
jle
cmpsb
inc
loope
roll
sub
aas
out
mov
dec
hlt
loop
je
xchg
lret
test
repz
sub
rcrb
hlt
in
rorb
mov
mov
adc
jae
mov
and
lock
cmpl
dec
jmp
es
mov
insl
xor
insl
jmp
lods
mov
out
fs
dec
test
sbb
and
test
push
sarb
inc
sub
cwtl
cmp
ja
fcmovb
adc
pop
push
fimull
sti
fldl
clc
stos
push
xchg
adc
in
xchg
pop
or
fiadds
mov
div
mov
push
cmp
jl
cmp
adc
outsb
outsl
inc
mov
jle
xchg
fsubs
mov
lods
xchg
dec
jecxz
sub
shrb
mov
push
pop
shll
xchg
push
mov
sub
loop
fwait
or
push
jge
mov
mov
sarb
adc
ja
int
dec
jmp
jmp
cli
enter
cmp
fwait
pop
imul
jne
decl
rorl
ss
vcvtsd2usi
xor
jo
add
pop
cwtl
sub
dec
sub
and
xorl
hlt
sbb
dec
in
movsb
jl
jle
sbb
xor
les
dec
into
or
or
imul
xor
mov
test
cwtl
and
shlb
scas
out
inc
scas
push
push
xchg
push
adc
es
testb
jnp
sbbb
fiadds
cwtl
jae
ss
inc
icebp
xchg
sbb
xor
inc
push
or
xchg
dec
leave
cmp
imul
jns
iret
pop
inc
lds
pusha
sarb
xchg
repnz
mov
leave
das
mov
xor
xchg
sbb
cmp
jge
ljmp
aam
sbb
or
pop
add
cmp
pop
or
popf
push
movsb
lret
popl
jo
or
mov
and
in
jle
cltd
add
pushf
push
cmc
dec
mov
in
mov
movsb
adc
ret
cmp
repnz
fisttpl
inc
jl
pop
pusha
dec
lock
ds
adc
movsl
pop
test
and
push
lahf
pop
jecxz
push
jmp
fisubs
pop
sar
inc
movsl
cmp
pop
pop
mov
jmp
push
ljmp
out
lret
lcall
std
repnz
sub
cs
sub
pop
popa
stos
add
jp
xor
aam
push
xchg
and
stc
sub
push
adc
sub
pop
push
out
fmul
fnsave
sub
inc
add
es
andb
stc
jg
in
xorb
in
mov
inc
sub
jbe
xchg
pop
data16
inc
and
push
mull
and
roll
mov
push
je
jl
push
cmc
and
mov
mov
push
stc
cmpsb
lcall
fs
inc
ja
lcall
mov
pop
sub
mov
dec
jno
mov
and
or
pop
or
xchg
adc
cli
gs
test
dec
imul
pop
ret
adc
inc
jl
inc
mov
mov
mov
and
xchg
dec
xor
cmp
out
sub
and
lret
mov
push
dec
mov
push
nop
jg
add
fstps
flds
lock
pop
adc
mov
call
sub
add
int3
mov
hlt
inc
arpl
lods
mov
and
clc
inc
push
divl
aas
mov
lea
cmp
dec
imul
fnstcw
testb
std
rorb
jo
mov
mov
or
out
imul
aaa
hlt
mov
cmc
and
les
hlt
jecxz
and
cmp
mov
mov
arpl
dec
push
outsb
adc
stos
dec
pop
icebp
cmp
jbe
sub
cmpsl
push
mov
loope
mov
pop
push
push
rclb
cli
sub
mov
ret
mov
xchg
int
insl
push
clc
add
movsl
xchg
push
mov
popa
out
pop
lods
and
add
pop
test
xchg
xor
xor
jno
divps
xchg
sub
cltd
repz
xchg
test
dec
mov
mov
bound
test
test
pop
push
sbb
outsb
mov
sub
push
stos
std
jno
push
stos
mov
add
pushf
mov
xor
pop
push
xor
dec
cmc
mov
std
xor
mov
icebp
out
and
loope
dec
fisubrs
cmp
or
jnp
fwait
dec
push
dec
out
mov
jne
ljmp
push
mov
popa
jns
jb
in
test
xchg
push
jg
out
mov
pop
jl
or
and
push
mov
into
mov
arpl
int
adc
in
lods
in
sbb
mov
aas
lods
mov
adc
push
push
cs
mov
ret
jl
stos
test
or
int3
mov
cmpl
fadd
push
gs
adc
loope
iret
push
insl
icebp
ret
push
pop
mov
jnp
jae
test
hlt
sbb
or
scas
sbb
movsl
int
fstpt
sbb
push
subb
imul
in
lds
add
mov
imul
hlt
jbe
adc
mov
adc
jmp
inc
aaa
xchg
lret
sti
int3
pop
add
inc
xchg
pop
cmp
mov
jo
cmpsb
lea
jns
std
cmp
inc
movsb
movsl
sub
inc
inc
pop
cmpsb
fsub
push
in
mov
leave
mov
ror
cmp
jno
hlt
movsl
jl
in
push
dec
pop
jnp
ds
sbb
movsl
fs
loopne
xor
mov
cmpsb
jl
sub
adc
test
incb
test
cmpl
pop
jae
push
push
xchg
loope
mov
sub
ffree
cmp
pop
outsb
mov
daa
rolb
xchg
cmp
lea
and
sti
es
adc
push
xchg
or
inc
test
sub
and
lcall
loopne
jns
adc
cmc
adc
test
xchg
lds
or
mov
in
inc
mov
jno
sub
and
cwtl
sub
fmul
xchg
aaa
mull
mov
rcr
hlt
mov
and
data16
into
pop
and
xor
inc
lods
loop
or
stc
pop
mov
fs
mov
js
inc
sbb
lods
jp
push
mov
mov
sar
jo
mov
mov
cmp
and
fwait
insl
aaa
adc
xchg
xchg
rorb
cmp
xor
add
daa
insb
sbb
dec
mov
sub
aad
mov
shrl
jl
xchg
xor
cs
lret
aad
lahf
adcl
add
fnstcw
in
sub
rorl
imul
test
ljmp
pop
rcrb
add
les
lret
jecxz
inc
loop
push
aas
sub
out
mov
je
mov
jecxz
dec
jno
dec
mov
cwtl
sbb
push
out
mov
cli
call
dec
mov
decb
mov
mov
stos
fwait
adc
jo
shr
xlat
and
insl
xchg
jp
dec
arpl
inc
cmpsl
rolb
icebp
popf
ss
cld
mov
and
and
loope
sub
jae
shlb
sub
or
cwtl
xor
pusha
xchg
sbb
sub
clc
cmp
jbe
xchg
cmpsb
aas
ljmp
dec
lods
mov
or
xchg
jp
bound
mov
cmp
cmp
xchg
test
xor
jns
lods
test
popf
rolb
data16
orb
dec
pop
sub
dec
dec
insb
add
leave
mov
push
cmp
push
or
or
xor
sbb
mov
inc
popf
cs
lods
popa
aas
ja
js
dec
rorl
outsl
inc
sub
push
or
xchg
push
fwait
jge
into
dec
shll
mov
sbb
xor
bound
adc
jns
push
inc
in
mov
xchg
lahf
sub
out
mov
ds
and
mov
mov
mov
in
sarl
iret
jo
mov
fisubl
imul
xor
loopne
push
xor
cmpsl
push
icebp
add
jle
or
add
push
mull
and
xchg
hlt
insb
mov
lcall
pop
cs
lods
sub
iret
mov
in
ret
adc
fdivrs
jle
xchg
push
and
push
pop
or
sub
lods
inc
push
cmpl
imul
fcmovu
adc
int
shr
fistpll
mov
dec
and
shr
arpl
fwait
jbe
fcmovbe
jge
int3
sbb
push
aaa
push
xorl
adc
jb
jle
sbbl
outsb
push
push
sub
scas
dec
jns
and
sub
pop
jne
movsb
xor
inc
push
xchg
jge
cmpsb
pop
xor
in
xchg
fisubs
shlb
jno
add
into
mov
ds
xchg
jnp
mov
push
or
repz
loope
cli
jnp
sarl
pop
test
pop
js
out
jbe
mov
pop
push
jne
loope
pop
cmp
testl
adc
fsubrp
adc
inc
push
inc
sbb
cmp
add
sti
xor
pop
adc
lods
sub
sub
aad
pop
sub
in
lcall
push
fsubl
and
in
push
sahf
push
add
mov
push
inc
or
inc
xor
xor
inc
mov
loop
and
aad
xchg
js
fmuls
ss
lret
lcall
or
sbb
inc
mov
xor
cmp
loop
data16
stc
adc
and
jp
xchg
pusha
data16
leave
pusha
mov
xor
out
xor
pop
cmp
mov
or
cmp
pop
dec
cld
gs
mov
add
jge
movsb
sbb
xor
xchg
ds
xchg
xchg
sar
cmpsb
sbb
mov
pop
sub
hlt
pop
in
ds
nop
fidivl
aad
int3
loope
xor
adc
pop
in
fpatan
ret
lods
sbb
repz
cmp
js
xchg
lea
pop
adc
daa
inc
push
pop
jb
test
mov
push
shr
lock
pop
addr16
dec
inc
jbe
jecxz
std
leave
pop
aas
int3
mov
jb
ficompl
pop
mov
je
mov
sub
xchg
mov
cwtl
fdivr
jbe
xor
mov
sbb
mov
je
stc
fildl
and
mov
and
fdivrs
das
cmp
sbb
aad
mov
and
cli
jae
cmp
and
insl
jnp
outsb
dec
pop
mov
cmpsl
mov
mov
je
mov
lret
test
mov
out
push
ljmp
sbb
sar
mov
mov
fdivr
and
push
and
inc
fnstsw
jmp
xchg
rcl
gs
mov
mov
pop
mov
push
int3
sbb
sbb
roll
push
xchg
or
test
add
xchg
repnz
and
ret
mov
rcl
or
cli
fwait
stos
fistl
xchg
add
in
add
xchg
jecxz
xor
or
lret
xor
cmp
fnsave
call
push
mov
inc
mov
jnp
fwait
lods
mov
mov
jmp
mov
fcompl
paddq
lcall
in
adc
xchg
out
adc
les
cmp
and
jp
push
mov
mov
inc
jp
jle
subb
nop
jmp
pusha
dec
fs
or
xchg
lea
popf
xchg
stos
xlat
loopne
test
sti
push
mov
xchg
popf
movsl
and
inc
push
inc
xchg
mov
push
outsb
and
cltd
mov
jnp
imul
push
push
xrelease
adc
dec
ret
fcomps
hlt
mov
jae
in
bound
test
push
out
and
lret
fiaddl
dec
inc
sub
pop
mov
lds
jmp
mov
mov
xchg
add
jecxz
jg
mov
mov
cmp
xchg
arpl
ss
cmc
aaa
adc
push
or
adc
add
loop
int3
imul
jns
dec
mov
xor
xchg
mov
daa
or
and
and
push
loop
mov
in
outsb
test
enter
daa
mov
inc
xchg
xor
dec
cmp
add
push
cs
mov
call
test
mov
mov
test
cmp
fwait
jle
adc
sbb
push
dec
daa
loope
sub
das
jl
cmp
sub
sarb
xchg
iret
sbbb
sbb
sbb
adc
mov
xchg
int
mov
sub
pop
pop
cmpsl
push
lcall
jns
iret
sub
inc
sahf
shll
test
add
add
adc
mov
sub
out
and
js
fadds
mul
xchg
in
lret
push
rorl
cmp
test
cmc
jne
push
xor
pop
pop
loop
repz
lret
xchg
lcall
cmpsb
mov
and
lods
dec
scas
dec
mov
jae
cli
es
xor
push
sarl
stos
push
jge
int
xchg
pop
sub
sbb
sbbl
push
xor
mov
adc
jnp
xchg
inc
push
sbb
les
xlat
loopne
jb
and
fbld
test
xor
cmp
push
pop
fcoml
ret
pop
fiadds
outsl
jle
sub
les
xor
jnp
xor
popa
pushf
pop
cmpsb
adc
and
cmc
lret
stos
aaa
jmp
cmp
or
mov
std
sahf
test
sar
aas
imul
jb
cli
cmp
rolb
je
sbb
in
aad
jns
lds
les
adcl
rcl
jp,pt
mov
ret
sub
das
pop
xchg
jbe
push
imull
fsubrs
rorl
imull
push
xor
int
cmpsl
mov
mov
icebp
dec
cwtl
stos
cld
imull
adc
hlt
sbb
mov
divb
push
pop
mov
push
sub
dec
loopne
mov
or
inc
fucom
xor
mov
pop
xchg
adc
mov
lods
or
out
xor
xchg
or
or
add
add
lcall
xchg
inc
test
fmull
xchg
repnz
sbb
je
shrl
repz
movsl
hlt
mov
push
xchg
mov
sbb
pushl
shll
cmp
xor
mov
mov
shl
mov
and
and
xor
dec
mov
xor
ja
or
cmp
fildl
sbb
pop
add
out
out
arpl
sarb
add
in
les
cmp
cs
mov
mov
lods
jp
test
mov
mov
outsl
mov
and
sub
fildll
add
jmp
jbe
pop
adcl
push
ja
xor
loope
rcll
loope
stos
frstor
lahf
insb
pop
cmp
jnp
mov
scas
jnp
lds
dec
xchg
adc
cmp
jb
add
sub
pop
inc
rcll
mov
push
icebp
inc
std
popfw
or
pop
divb
inc
lretw
xchg
fidivrl
xchg
movsb
mov
sbb
lret
imul
mov
in
repnz
xchg
repnz
leave
or
hlt
push
lods
aaa
arpl
dec
jae
cltd
cmp
rolb
fildl
pop
or
push
pop
push
xor
xor
sub
loope
imul
fwait
dec
and
mov
jne
rep
inc
ficoms
mov
mov
push
jns
enter
daa
mov
lret
aaa
xchg
jl
mov
dec
lods
jbe
ds
in
movsl
jns
push
and
ja
push
xor
add
imul
or
inc
pop
jno
testb
js
mov
mov
rol
loope
pop
addr16
or
push
jno
outsb
mov
aam
lods
dec
jb
xchg
into
mov
subb
xor
loopne
and
cwtl
xor
in
push
sahf
imul
sub
test
pop
es
cld
lcall
fdivrl
lcall
push
push
orb
mov
and
mov
and
or
adc
ss
pop
xchg
fdivr
xchg
lahf
jne
lret
imul
das
mov
repz
into
or
cmc
cmp
jne
cwtl
jecxz
outsl
pop
lock
loop
mov
stc
adcb
fs
popf
aaa
adc
sub
arpl
lods
das
jns
mov
xor
push
xor
pop
outsb
or
fldl
mov
inc
imul
ds
adc
les
and
test
pop
idivl
xchg
pop
add
sbb
call
jo
pop
mov
ja
pushf
inc
jo
adc
sbb
mov
mov
aad
push
jecxz
jmp
inc
dec
and
fldenv
push
repz
insb
rol
and
lea
call
and
xor
adc
pop
pushf
inc
and
jmp
inc
jg
lods
shlb
xor
loop
or
nop
dec
inc
jb
je
shr
jecxz
dec
xchg
negb
insl
sub
cwtl
dec
js
mov
rorb
mov
jg
andl
imul
pop
and
and
ja
push
and
or
mulb
ss
mov
jmp
es
shl
dec
pop
fmuls
js
cmpsl
mov
nop
movsb
icebp
and
loop
and
mov
std
jno
mov
out
pop
rcrb
int
aam
data16
ret
fildll
mov
clc
in
dec
fcoms
shll
ljmp
jg
mov
in
repnz
dec
and
adc
pminub
ret
cltd
iret
and
test
push
jbe
scas
int
test
ficompl
cmpsb
rcrl
in
jb
test
dec
pop
push
and
push
ss
add
sbb
call
cmp
or
inc
xor
jl
mov
or
ret
xor
call
dec
stos
and
jl
or
lret
dec
fwait
or
jno
jp
int
and
mov
lcall
rorb
in
lret
lds
out
jl
mov
mov
addr16
mov
mov
cs
mov
pop
loope
jle
mov
push
test
fwait
xchg
xor
ds
inc
imul
cwtl
mov
cmp
or
mov
hlt
push
insb
lret
jnp
mov
push
push
xorl
iret
shrl
cli
ret
inc
pop
jge
lcall
arpl
or
lcall
fidivl
stos
xor
fwait
lods
adc
jae
fdivrp
mov
rolb
mov
mov
mov
hlt
mov
or
scas
jge
int3
loope
lods
je
aaa
pop
pop
or
sub
add
pop
xchg
int3
aas
imul
jb
ret
jo
call
insb
and
mov
cmp
mov
enter
dec
in
cmp
add
daa
mov
add
jno
add
mov
std
sub
sbb
stc
and
lahf
cmc
cmpsb
fistl
hlt
or
push
xor
in
or
pushf
js
test
outsl
jg
push
or
loope
sub
add
lods
push
outsb
pop
dec
xor
outsl
pop
testb
pop
sbb
incl
mov
xor
push
out
push
mov
jb
sub
jmp
movsl
shrl
push
mov
movsb
fsubl
cmc
pop
sahf
pop
addr16
andb
ds
sahf
rorb
rolb
jmp
imul
pop
sarl
in
mov
add
sbb
jmp
loope
add
xorl
call
loop
stos
push
stc
cmp
stos
fs
mov
mov
mov
lods
push
daa
insb
mov
jnp
cli
cmp
mov
cmp
insb
mov
push
aad
inc
cmpsb
add
mov
pop
pop
jnp
adc
push
adc
test
add
or
sbb
cmp
pop
sub
aas
cld
mov
jg
cmpsb
sti
dec
dec
sbb
nop
or
xchg
es
dec
or
push
fstps
iret
shl
gs
add
fildl
jmp
pop
mov
adc
insl
mov
or
dec
pop
push
xchg
fildl
ljmp
test
aam
dec
mov
fcmove
jecxz
and
negb
sti
std
adc
data16
pop
push
sarb
dec
xor
inc
mov
xor
jmp
mov
sbb
pop
pop
shll
loope
es
pop
xor
mov
dec
cmpsl
mov
and
icebp
stc
mov
lret
shrb
jno
lods
inc
add
lods
mov
add
xchg
inc
sub
idivl
sbb
outsb
xchg
rclb
adc
fnsave
leave
test
sub
xchg
mov
ljmp
xchg
lods
cmp
sbb
dec
mov
xchg
xchg
adc
pop
scas
out
cmp
add
lahf
sbb
out
xchg
adc
xchg
fisttpll
sbb
sub
icebp
stos
test
repnz
fxch
push
add
xor
in
divl
aam
mov
xor
cltd
push
mov
dec
js
fstpl
pop
cwtl
hlt
and
lcall
popf
xorb
nop
xor
dec
pop
aam
jne
pop
out
and
inc
bound
cmpb
add
cltd
and
stc
out
xor
sub
cs
lcall
jae
mov
ret
clc
test
jle
dec
pop
in
mov
pusha
and
out
fucomip
push
mov
adc
xorl
notb
std
cmc
or
sbb
mov
decb
xchg
and
js
insb
xor
mov
div
push
enter
xor
add
xor
ret
push
pop
mov
pop
inc
shrl
inc
add
cmp
inc
fs
pop
jne
push
jmp
sbb
arpl
imul
lds
add
pop
fidivl
repnz
stc
bswap
hlt
in
mov
mov
jge
ds
fdivl
aaa
dec
mov
or
into
sbb
sub
and
das
and
jo
ljmp
pop
or
mov
pop
shr
push
iret
push
or
and
xchg
enter
daa
mov
out
stc
jno
pushf
adc
test
mov
ds
movsl
xchg
pop
lahf
adc
cmpsb
push
fstpt
fisubrs
pop
adc
inc
ss
cmp
int
cmpsb
pop
inc
jge
js
fists
push
sti
mov
fs
push
sub
mov
adc
cltd
xor
dec
add
vprotq
xchg
push
sbb
jmp
xor
or
movsb
inc
mov
dec
test
sub
lret
sub
and
push
push
or
icebp
adc
mov
outsl
out
test
cltd
add
mov
shl
mov
dec
mov
ja
cmpsb
mov
pop
add
rcrb
and
xor
pop
fdivs
negl
mov
and
sbb
mov
into
dec
fdiv
lret
xor
and
loop
aam
stc
lock
fs
push
sbb
add
lods
ficoml
std
mov
into
out
inc
ret
push
sub
mov
push
aas
or
nop
into
out
ret
cmp
pop
jl
inc
adc
xor
push
adc
negb
xchg
jle
scas
insb
push
jne
fcmovnbe
popf
imul
lret
in
ljmp
cs
jmp
nop
mov
pop
lret
inc
ja
out
fxch
push
fcomps
repz
icebp
movb
call
and
daa
adc
call
enter
enter
add
and
inc
aas
dec
insb
or
nop
dec
dec
xor
ss
negb
lea
les
mov
cmpsl
mov
mov
dec
and
mov
mov
in
mov
adc
lock
xor
das
mov
andb
into
sub
shll
bound
sub
dec
cltd
dec
dec
mov
mov
push
pushf
cld
js
and
mov
or
pushf
mov
and
sbb
inc
repz
sub
lds
ret
std
cmp
push
das
push
mov
push
push
clc
arpl
xchg
int
add
mov
push
lods
movsl
ljmp
stos
std
jl
push
cmp
sets
add
pushf
dec
cwtd
cmp
data16
mov
jmp
test
xchg
lds
dec
into
lock
subl
xchg
adc
add
push
push
decl
mov
jecxz
xor
cmp
or
xlat
mov
stos
mov
push
dec
imul
loop
inc
sbb
fisttpl
imul
push
mov
stos
mov
test
shll
fdivrl
in
aam
xchg
sub
out
loopne
sub
sub
pusha
jp
out
mov
jp
mov
std
push
and
int3
add
lods
pop
ds
mov
lret
and
or
xchg
xlat
dec
xor
push
rcl
popf
inc
ss
push
cmp
lods
jp
push
or
insb
mov
sbb
movsb
fcoml
out
leave
adc
in
mov
cmpsl
jbe
add
pop
jmp
or
adc
pushf
jmp
inc
push
idivb
push
jecxz
dec
ficoml
fstpt
imul
fiadds
add
jbe
cs
pop
inc
jg
jo
dec
hlt
cmp
mov
push
jmp
mov
or
or
push
je
and
int3
adc
ljmp
add
jge
mov
popf
mov
movsb
out
mov
cmpsb
out
data16
in
or
inc
lret
sub
mov
pop
xchg
or
stc
push
sbb
popa
inc
leave
movsl
mov
repnz
adc
test
ljmp
nop
push
push
pop
imul
pop
in
cmc
xchg
sahf
pop
loope
mov
sarb
insl
scas
outsb
fstp
add
and
ja
andb
mov
inc
jns
xor
fiadds
shl
dec
mov
sbb
pop
mov
imul
lcall
dec
insb
cmp
fst
mov
pop
push
ss
cs
pop
cmp
mov
xor
cmp
xor
sbb
or
push
shll
mov
ja
sbb
outsl
cmc
xchg
movsl
sub
test
ret
fsub
das
xor
cmpsl
pop
je
ljmp
data16
inc
int
in
xor
out
xchg
jns
mov
mov
ret
adc
or
insb
loopne
and
pop
fwait
addr16
ret
sub
aam
adc
mov
fstl
aad
pop
cmp
mov
lock
mov
push
mov
sti
lods
insb
iret
cs
sahf
cmp
xor
mov
inc
mov
sahf
flds
jecxz
repz
ret
lea
jbe
mov
mov
popa
pushf
inc
adcl
xchg
adc
inc
sbb
outsl
inc
test
stc
jb
jg
dec
lods
ficoms
fsubp
out
jecxz
test
mul
cmpsl
std
popa
push
lahf
cwtl
jg
cli
mov
repnz
cmpsb
pop
pop
sub
mov
scas
mov
inc
lods
mov
mov
mov
xchg
cld
movsb
mov
cmc
pop
mov
rol
std
pop
es
and
mov
dec
inc
icebp
and
mov
arpl
icebp
cmpsl
or
cld
mov
inc
sub
adc
pushf
mov
inc
mov
rclb
mov
jecxz
mov
ret
mov
xchg
push
repnz
pushf
fnstsw
xlat
clc
sahf
cmp
xchg
or
pop
ljmp
adc
mov
push
cmp
rcll
and
maskmovq
xor
scas
subb
ljmp
mov
aam
xchg
inc
pop
test
dec
aas
xchg
fsubrs
cmp
mov
or
dec
stos
xchg
pop
jbe
fwait
push
sub
imul
ljmp
repz
or
sarb
mov
stos
fs
push
ss
rorl
divb
mov
loopne
data16
fwait
xchg
loop
dec
and
mov
into
sub
aad
bound
je
orl
in
cmp
jo
xor
and
push
sbb
jp
or
xchg
mov
insb
mov
pop
in
fdivl
fildll
inc
dec
xchg
lods
push
mov
xchg
mov
test
push
andl
popf
push
push
in
push
jl
sub
and
subl
jnp
jo
scas
pop
jnp
push
push
inc
outsb
adc
xor
iret
out
jmp
cli
pop
and
fbstp
adc
pop
or
or
jmp
fimull
inc
xchg
add
fstps
dec
jmp
aad
fsubp
dec
fld
pop
fidivrl
rclb
mov
leave
out
imul
lret
jbe
xchg
dec
jge
shrb
aaa
int3
stos
or
mov
pop
or
add
pop
cmp
push
mov
dec
sub
sub
orb
and
jecxz
push
and
jb
notb
outsl
mov
jno
int
icebp
movsb
es
daa
mov
jecxz
jno
inc
xor
imul
xchg
ds
jns
xchg
test
lahf
push
dec
nop
push
andl
push
mov
arpl
xlat
push
push
push
jle
xchg
xchg
pop
sub
subl
cmp
cmp
hlt
adc
sbb
adc
add
mov
sbb
and
add
pop
mov
jg
xor
stos
in
int
mov
or
and
lcall
sbb
es
adc
jle
sub
pop
push
cmp
pop
xor
gs
out
out
xchg
ss
mov
fsubr
loop
negl
jecxz
sar
mov
ficompl
push
lret
jle
xor
sub
addr16
ret
stc
pop
gs
fs
mov
data16
or
mov
gs
cli
aad
jmp
cmp
cwtl
jmp
movsb
push
jne
sub
xchg
les
pop
mov
jnp
imul
fiadds
cwtl
fstpl
fs
sbb
jmp
pop
xlat
sbb
sub
std
mov
rolb
cs
adc
nop
push
loopne
dec
sahf
mov
inc
popf
fisttps
out
js
repz
jl
mov
arpl
enter
and
and
frndint
adc
fldpi
fstps
test
inc
mov
and
aas
xchg
jb
mov
add
sub
jecxz
push
mov
and
in
or
insb
cwtl
cmp
mov
add
mov
mulb
sbb
mov
xchg
inc
lock
xchg
das
jb
xchg
mov
lods
xchg
inc
and
pop
rcl
adc
icebp
es
xor
or
dec
inc
in
push
mov
adc
jle
dec
cld
into
lods
nop
lret
pop
sti
mov
and
push
rcrl
dec
nop
shr
push
xchg
sub
dec
lcall
push
mov
mov
movsl
pop
sub
xor
dec
test
and
sahf
push
jb
call
jo
xchg
imul
out
idivl
push
sahf
in
add
in
cltd
stos
jmp
test
mov
mov
xor
stos
rolb
pop
cwtl
xchg
jno
mov
and
loope
inc
pop
cld
sbb
push
ret
add
xchg
es
and
and
sub
mov
adc
and
pop
leave
mov
ja
push
push
dec
jbe
add
sti
aaa
or
pop
jo
movb
dec
push
outsb
xchg
jne
push
mov
out
dec
jnp
bound
loope
cmp
in
sub
and
repz
pop
mov
xchg
jp
call
pop
mov
fcmovnu
cmp
ds
fsubp
mov
out
fisttps
sti
xchg
jg
xchg
jmp
insl
subb
inc
out
inc
popf
xchg
xlat
mov
mov
and
test
pop
jnp
mov
push
popf
clc
push
adc
nop
es
dec
xor
es
cli
pop
pop
mov
mov
cmp
sub
les
push
loope
sub
std
mov
repnz
jl
imul
fimuls
and
lods
jge
mov
add
nop
hlt
into
dec
xchg
arpl
popf
jae
inc
dec
jb
fsubr
mov
cwtl
mov
mov
or
decb
jmp
xchg
pop
mov
mov
xor
test
sbb
and
pop
or
or
dec
push
mov
fcmovnu
in
fsubr
add
cmp
add
cmp
jmp
jno
dec
cmpb
dec
xlat
mov
pop
movsl
pushf
xchg
and
mov
test
andb
push
jb
pop
mov
lretw
pop
imul
add
sub
cmp
sarb
outsb
mov
div
rcr
push
popl
lret
sbb
loop
push
xchg
add
dec
mov
ret
mov
or
mov
sbb
sub
sahf
xchg
inc
iret
test
and
adcb
xor
cltd
imul
adc
test
mov
cmp
cmpsb
stos
xchg
negl
adc
out
test
xchg
repz
mov
cmp
ficomps
into
ja
sbb
pop
mov
loope
mov
mov
stc
adc
pop
cld
adc
xchg
mov
xor
and
out
mov
cwtl
xor
sub
stc
imul
pop
dec
decb
ljmp
or
pop
fldenv
adc
xor
ror
adc
inc
mov
daa
add
daa
jge
sbb
xor
pop
push
cltd
sub
call
cmp
sub
out
sti
or
int
sar
nop
xor
dec
std
aam
inc
mov
ljmp
add
sti
stc
lea
fld1
inc
fistl
mov
vmovups
and
pushf
pushf
in
jmp
sti
jmp
inc
daa
xor
mov
loop
jb
cli
jno
lcall
jecxz
cmp
mulb
cld
std
scas
xchg
inc
cwtl
cmc
aam
mov
pushf
or
sbbl
insl
fisttpl
mov
mov
jmp
je
push
dec
cmp
arpl
and
in
cli
shll
loopne
mov
inc
insl
int3
inc
out
cmp
cmpsl
mov
jae
icebp
push
sbb
repnz
mov
mov
and
nop
mov
orl
sub
pop
lret
sub
ret
stos
int3
movsb
push
js
sub
int3
movsl
adc
fsts
adc
sub
out
imul
xchg
lahf
xchg
mov
jecxz
leave
loop
lgs
add
jle
cltd
loop
je
fsubrl
mov
rolb
scas
std
ret
dec
mov
fisubrs
loopne
inc
sbb
sarl
push
test
inc
stos
cmp
add
mov
fidivrl
or
push
jbe
add
dec
mov
dec
sub
test
ja
movb
loopne
push
or
adc
fwait
cmc
call
mov
add
pop
out
sub
jns,pn
push
sbb
jbe
xchg
sub
sbb
insb
jp
js
mov
jns
mov
dec
enter
or
rcll
fildll
and
out
push
mov
int3
cmp
or
fwait
popf
mov
mov
push
cli
xchg
cmpsl
stos
fwait
cwtl
mov
jnp
mov
sbb
adc
mov
jp
ret
add
je
inc
decl
xor
aaa
push
or
add
pop
inc
pusha
add
mov
sbb
cmp
fisubrs
test
jns
hlt
inc
sub
push
stc
inc
leave
aad
xor
sbb
arpl
sub
xor
sbb
popa
aaa
dec
add
add
pop
loope
sub
xor
add
and
enter
jno
or
leave
cmpsb
ja
sti
in
mov
sbb
cmp
test
jno
js
jl
sbb
inc
ds
movsl
mov
fwait
jl
nop
into
jge
daa
arpl
push
dec
int
inc
jb
sub
pop
loopne
pushf
js
adc
test
push
sarl
sbb
inc
cmp
ljmp
addr16
adc
mov
dec
in
jle
fdivrp
sbb
gs
sbb
xor
addr16
in
xor
rolb
pop
and
pop
lcall
std
fdivrl
sub
sahf
sbb
insb
xchg
testb
fst
mov
or
xchg
add
cmp
popa
or
negl
xchg
xchg
lret
shrl
sbb
mov
sub
or
xchg
xchg
cmc
out
wrmsr
mov
mov
push
mov
mov
lods
cltd
call
in
xchg
xchg
sar
ret
adc
pop
fsts
or
push
cmp
fdivrp
loopne
sbb
adc
jg
ljmp
add
icebp
popf
sbb
popa
add
sub
adc
xchg
test
sti
mov
sbb
xchg
nop
or
and
stos
out
stos
or
les
jo
ffreep
nop
dec
mov
call
pop
sub
or
adc
lods
pushf
inc
push
popf
jmp
lahf
mov
inc
scas
sti
adc
xor
jb
test
adc
daa
je
out
pusha
jecxz
insb
pop
imulb
or
mov
mov
mov
push
dec
int3
jl
fstpt
out
mov
mov
mov
and
xor
mov
sbb
ret
and
push
dec
shll
les
dec
ss
sbb
mov
sub
js
and
push
lret
std
scas
mov
daa
es
mov
orb
gs
xor
rcll
das
pop
clc
dec
pop
xor
test
int3
testb
inc
fisubrs
xchg
stc
test
adc
adc
mov
call
test
test
lahf
pop
mov
mov
xchg
mov
std
xchg
fstpl
pop
leave
test
ss
pop
push
xchg
clc
stos
push
iret
rcrb
or
fiaddl
mov
mov
orl
repnz
mov
fwait
iret
xchg
mov
aas
outsb
pop
ja
add
pop
push
inc
ja
mov
fwait
and
or
in
adc
xchg
pusha
mov
mov
out
pop
rcl
bound
repz
or
sub
out
mov
adc
xchg
add
mov
cmpb
jle
pop
push
in
addl
xchg
test
jmp
add
dec
cmp
enter
lea
jle
sub
adcl
mov
xor
adc
scas
xor
clc
push
sub
out
or
ffreep
dec
lahf
aas
pop
int
inc
or
sub
sub
inc
adc
or
jl
jns
fildll
aaa
fisubl
or
popf
pop
mov
pushf
dec
mov
loop
sarb
cmpsl
sahf
lock
dec
icebp
ret
movsl
mov
std
icebp
jbe
adc
jge
fadds
sbb
addr16
or
orb
dec
cwtl
add
cmpsl
int3
shl
pop
adc
mov
sbb
mov
pop
and
scas
pop
paddsb
aaa
call
pop
movsb
adc
sbb
cmpsb
pop
adc
daa
mov
jp
inc
sbb
jno
leave
jl
icebp
dec
dec
mov
dec
ds
ret
movsl
stos
mov
and
cli
xor
cli
scas
mov
push
push
dec
or
pushf
xchg
pop
pop
pop
in
dec
addr16
jmp
xor
loope
nop
mov
pop
pop
cmp
and
imul
xchg
push
add
sbb
stc
sti
xor
cmpb
shrb
sub
inc
fwait
pop
lahf
dec
lcall
test
daa
jae
sub
adc
rep
sbb
mov
shl
lret
mov
pop
pop
and
movsl
fnstenv
cmp
test
neg
adc
rol
lea
mov
into
cmp
pusha
jecxz
adc
imul
jnp
inc
stc
sbbl
push
push
dec
adc
jb
lods
sub
mov
rep
cli
outsb
pusha
xchg
out
xor
cmp
aaa
xor
icebp
mov
xchg
sbb
push
loopne
cmp
dec
adc
push
imul
sbb
inc
adc
xchg
lods
fidivl
jno
cwtl
cmp
jne
mov
cmp
sti
imul
sbb
dec
clc
cs
call
jno
inc
pop
mov
loop
lret
les
push
shl
jg
xchg
pop
into
lea
icebp
call
sahf
push
sub
mov
cli
pushf
repnz
cmp
cmpsb
pop
mov
inc
xor
fnstcw
jb
inc
adc
je
lock
loopne
imul
lret
jnp
std
pusha
jmp
imul
push
out
mov
sub
mov
neg
cmpsl
xor
mov
push
mov
rcll
popf
jecxz
push
jae
add
mov
pop
xchg
push
add
es
pop
push
dec
xor
cmpsl
mov
lret
mov
add
jge
insb
mov
mov
mov
mov
shlb
sub
mov
sub
adcl
in
push
clc
mov
jmp
or
cmpsb
popa
jecxz
pop
lods
mov
adc
out
lcall
push
jg
mov
jae
test
sti
dec
add
repnz
lods
mov
fistps
dec
jg
mov
js
dec
xchg
and
lret
shl
cmp
fs
inc
sub
stos
sub
add
ljmp
push
xor
in
adc
xchg
loop
cmp
jo
mov
ret
dec
mov
cli
test
ja
ret
dec
dec
mov
push
xchg
xchg
or
stc
cmp
scas
fwait
jecxz
xchg
enter
sub
out
out
jo
lds
pop
in
sub
mov
sbb
sub
adc
addr16
mov
jp
mov
mov
sub
sub
cmpsl
sahf
into
in
fcoms
pusha
ret
fbld
jmp
mov
orl
popf
add
loopne
mov
repz
stos
jne
and
leave
add
mov
inc
jnp
outsb
or
jb
mov
push
sbb
iret
push
hlt
ret
in
dec
pop
inc
adc
fs
adc
sti
adc
cmp
pop
ffreep
ficoml
cmpsb
push
xchg
pop
inc
imul
in
push
gs
jae
jnp
js
cmp
std
aam
mov
cli
ja
leave
ret
jo
hlt
scas
iret
scas
arpl
adc
jbe
and
shll
xor
enter
insb
fwait
xchg
adc
lcall
fnstcw
jecxz
mov
scas
inc
pop
and
jl
cmp
shl
push
test
icebp
aas
in
lea
sub
mov
daa
mov
lds
jne
sahf
jno
cmp
jne
and
sbb
adc
movsl
mov
lea
mov
lahf
into
pusha
out
push
int
ret
xchg
loope
loope
nop
mov
adc
dec
scas
js
and
push
pop
sbb
out
lahf
lahf
sub
inc
cmp
int
push
outsb
int3
test
adc
insb
test
mov
add
sbb
jecxz
add
sub
push
mov
int
pushf
arpl
mov
mov
push
js
lcall
mov
rcl
xchg
sub
jle
sahf
jl
jnp
jp
push
andb
jp
out
mov
cmpsb
add
bound
popa
subb
fcom
jge
notl
mov
pop
mov
jg
into
and
cmc
je
mov
jo
mov
pop
mov
stc
cmp
jne
mov
and
mov
lods
fadds
mov
aad
cli
mov
mov
cmp
adc
and
mov
mov
loopne
jbe
pop
ss
adc
jbe
imul
test
aam
in
xchg
jo
sub
xlat
pop
cmp
pop
sub
or
push
adc
sti
sbb
sbb
nop
ret
out
add
call
fstps
pop
jno
sbb
fwait
xchg
push
imul
dec
mov
sbb
shlb
or
xchg
jmp
xor
pop
inc
mov
xchg
lcall
cmp
je
inc
fninit
lea
inc
std
movsb
popf
xchg
cwtl
es
or
gs
adc
mov
mov
mov
jbe
mov
inc
div
and
out
pop
call
mov
in
adc
push
imul
ds
mov
mov
fiaddl
cld
jp
pop
lret
mov
xor
into
pop
fisubs
shlb
andb
sub
ret
push
ret
shll
inc
in
clc
lds
mov
ljmp
push
lods
daa
or
out
std
lds
xchg
xchg
int
rcr
loopne
push
sbb
xchg
and
std
add
xchg
fdivs
test
xchg
lret
xchg
pop
sbb
pushf
sarl
push
cmp
dec
arpl
or
add
ds
dec
aaa
sbb
sbb
in
std
rcll
xor
xchg
call
mov
sub
mov
mov
and
add
filds
mov
rcrb
xchg
cmp
and
lds
adc
jns
inc
insl
in
iret
add
out
adc
or
add
addr16
pop
add
mov
xchg
sbb
jle
xlat
stc
in
xchg
stc
pusha
pop
jp
ffreep
jecxz
xchg
lret
adc
jmp
cltd
fldenv
push
push
xchg
or
hlt
iret
mov
mov
mov
loopne
add
xor
scas
div
mov
mov
js
leave
jno
ret
and
insb
lds
add
loop
inc
sbb
subl
adc
fcmove
pop
rcll
mov
imul
push
das
rcrb
cld
mov
dec
test
hlt
cli
dec
mov
outsb
gs
test
jge
push
out
sbb
hlt
or
xor
stos
loopne
int3
xchg
jo
pop
outsb
mov
jmp
stos
jmp
push
scas
fnstsw
and
dec
cmp
daa
movsb
sub
push
clc
xchg
cmpsb
add
ret
in
enter
daa
mov
test
jno
add
or
rorb
mov
idivb
push
mov
incb
push
lods
dec
std
inc
pop
pushf
loopne
and
push
js
xchg
pop
addr16
cmpsl
loope
rcll
pop
inc
mov
jl
shrl
mov
rolb
insl
popl
dec
repz
ret
sbb
rolb
mov
xor
add
int
push
sub
jl
pop
popf
or
sti
push
imul
sub
jge
sahf
pop
pop
xor
add
cmpb
jg
rolb
push
fdivs
mov
ss
dec
inc
cmp
xchg
xchg
push
notl
pop
lret
xor
lock
icebp
mov
scas
sbb
mov
cmc
cmp
cmp
xlat
add
mov
xor
add
sub
xor
inc
sbb
mov
scas
out
cmp
aam
and
pushf
push
sarl
xchg
or
and
fisttpl
repz
ret
arpl
mov
adc
jge
adc
inc
in
arpl
insb
xchg
xor
hlt
sbb
adc
pop
xlat
push
adc
mov
or
push
sti
ss
cs
sahf
aad
xchg
sahf
movsl
push
dec
jns
fldl
arpl
push
cli
add
and
jp
cltd
add
lea
out
call
pushf
jg
pop
and
pop
popa
or
and
pop
push
mov
inc
es
aas
mov
pop
orl
in
iret
jecxz
xchg
mov
std
dec
mov
fs
pop
jbe
mov
mov
mov
add
sarl
mov
aas
xor
outsl
mov
rcrl
arpl
insl
push
jg
cmpsl
mov
nop
mov
mov
and
movsl
jecxz
lret
dec
std
xor
cmp
mov
std
cmp
sub
jg
ret
out
stos
push
test
xchg
push
mov
xchg
xchg
mov
ficompl
lods
xchg
notb
out
pusha
mov
in
push
xor
mov
add
jmp
cltd
mov
xor
mov
std
std
xchg
cmp
test
es
sub
out
rcll
es
and
cmp
icebp
xchg
xchg
add
or
or
xor
or
xor
push
cmp
or
adc
fiaddl
dec
xor
add
fwait
mov
mov
jne
bound
clc
push
cmp
movsb
hlt
scas
jmp
out
jns
shll
xchg
push
rolb
sub
push
inc
shlb
nop
jp
mov
fstpt
push
adc
add
in
scas
scas
pusha
clc
push
pop
jne
xchg
sahf
imul
shrl
stos
mov
adc
popf
inc
mov
negb
stos
pop
pop
push
and
clc
cmp
movsb
jnp
xchg
push
add
adc
iret
sub
pop
ret
and
inc
sub
mov
daa
ds
in
sarb
fidivrl
xchg
or
inc
sbb
loopne
imul
test
mov
idiv
shlb
xor
mov
pop
push
hlt
inc
and
arpl
jae
xchg
mov
mov
aas
ljmp
push
pop
movb
jae
int3
sub
pop
popf
popa
mov
xor
outsl
int
scas
mov
inc
cmp
fwait
loope
movsb
mov
leave
push
inc
icebp
dec
cmpsb
sub
in
pop
sahf
mov
daa
mov
sbb
and
mov
ds
or
mov
add
jae
sbb
adc
ret
in
iret
pop
jl
push
js
add
push
movl
sub
sbb
sub
xchg
outsb
xchg
je
adc
and
in
pusha
and
subb
enter
mov
mov
sub
mov
arpl
lods
ja
pop
sbb
lcall
mov
sub
push
sub
inc
arpl
mov
sbbb
or
das
aas
loop
clc
adc
dec
fnsave
push
bound
imul
notl
cmp
xchg
les
imul
cmc
add
adc
outsl
adc
push
loop
jno
stc
test
frstor
sbb
jnp
into
data16
into
lods
xor
aas
mov
xchg
and
movsl
xor
pusha
cmp
dec
adc
ds
and
ss
gs
mov
pop
je
aas
adc
orb
scas
and
out
xor
dec
pop
or
xchg
int
sub
sub
cmp
xchg
aad
adc
fdivrs
inc
rcr
xchg
iret
rep
pop
xor
pushf
daa
cld
lea
and
stos
jne
sbb
out
pop
jmp
adc
pop
aas
jmp
xlat
aam
or
lcall
inc
outsl
aas
inc
mov
lcall
call
ja
mov
sar
bnd
pushf
movsl
mov
mov
or
js
cltd
xor
aam
dec
lock
jno
lods
shrb
mov
idivb
add
cli
add
shr
aas
xchg
inc
add
dec
mov
dec
and
pop
cmpsl
mov
mov
icebp
mov
adc
mov
imulb
inc
outsb
inc
mov
sbb
dec
rcr
push
push
sub
nop
ret
jne
cmc
push
inc
mov
fisttpll
testb
adc
push
mov
popa
sub
call
mov
ret
test
xchg
adc
movsl
daa
seto
xor
adc
dec
xchg
orl
pop
add
out
jmp
fstpl
xchg
mov
add
sub
incl
fistps
or
xor
xor
gs
dec
xlat
divb
mov
rcl
ja
sbb
xor
inc
shll
or
or
dec
pop
pop
aad
out
jnp
push
add
out
xorl
jns
or
xchg
mov
lods
dec
sub
add
std
adc
jnp
and
fidivl
jnp
mov
jne
xchg
es
in
mov
filds
or
xchg
jno
ds
das
std
sub
push
fcomps
xor
mov
xor
mov
and
stos
xchg
insb
clc
outsb
cmp
scas
mov
js
adc
pop
pop
iret
xchg
mov
cwtl
mov
mov
jle
jae
stos
pop
inc
push
add
lea
jge
inc
fisttpl
xlat
fisubrl
out
xchg
popa
into
pop
sbb
or
ficomps
lds
loopne
mov
repz
hlt
nop
inc
adc
out
dec
jbe
push
ret
pop
negb
cli
test
aaa
add
ja
fldcw
iret
int3
insl
cmp
pop
int3
lret
ret
push
icebp
sbb
xorb
lock
fwait
bnd
xorl
push
aas
or
lahf
in
cmpsb
push
sbb
inc
cmp
enter
daa
mov
cmp
loope
jno
je
jl
mov
dec
jno
cmp
jns
icebp
movsl
mov
and
pop
lahf
sub
push
inc
out
test
inc
cltd
into
inc
cmp
dec
xor
cmp
js
pmaxub
in
or
loope
movsl
dec
sub
lds
ficoml
enter
xchg
adc
std
push
or
mov
or
sbb
mov
addl
out
jno
daa
pop
inc
pop
fwait
hlt
lcall
outsb
cmc
cmp
pop
data16
mov
jmp
jg
imul
ljmp
dec
pop
and
mov
dec
in
fwait
cmp
or
lret
cmp
push
aad
mov
ja
clc
test
popf
in
leave
pop
xorl
movsb
insb
outsl
repz
and
outsb
add
pop
mov
pushf
adc
adc
xchg
lods
sbb
in
jle
adc
xchg
xchg
cmp
cmp
in
dec
add
or
rclb
gs
cwtl
ja
xchg
mov
push
mov
mov
add
or
mov
jecxz
mov
mov
lods
js
sti
and
add
aad
movsl
adcl
and
mov
les
sub
lahf
mov
shr
ljmp
mov
push
adc
out
out
jmp
dec
call
inc
push
shl
inc
pop
les
fistpll
lret
dec
ss
fs
je
cmp
idiv
mov
std
cltd
stos
and
mov
clc
dec
mov
loopne
andl
dec
mov
pushf
mov
lock
pop
das
mov
or
and
rorb
sarl
mov
jb
sbb
jmp
mov
pop
mov
cld
sti
sub
lret
sub
mov
dec
jp
mov
cmp
mov
scas
xchg
fwait
xlat
outsb
aam
and
ret
add
mov
fnsave
into
outsl
xchg
add
hlt
ljmp
in
lods
push
lea
xchg
pop
add
leave
pxor
add
or
test
nop
in
ljmp
scas
inc
test
out
xchg
rcrl
xchg
aam
roll
cltd
pop
test
xor
push
aaa
lret
test
inc
mov
jmp
lods
or
mov
mov
ljmp
pop
out
mov
xor
imul
add
mov
pop
adc
fildl
lods
mov
mov
leave
aas
out
bound
adc
idivl
loope
in
mov
in
mov
sub
cld
mov
adc
push
xchg
test
mov
in
mov
in
adc
pusha
cmp
fbld
cmpsb
adc
inc
mov
cld
xchg
cli
mov
add
fwait
or
dec
mov
je
ret
mov
subb
jnp
lods
jl
pop
scas
inc
push
mov
out
adc
inc
loope
out
dec
ret
inc
pop
fisubl
push
inc
stos
sti
jae
repz
and
or
jecxz
daa
inc
pop
leave
jae
loop
out
mov
pop
sub
fidivl
fdivrp
lods
lds
inc
mov
inc
in
leave
lahf
stos
hlt
fcmovnb
and
adc
jbe
lock
insl
mov
sbb
rcrl
jo
pop
int3
pop
pop
sub
stc
mov
aam
jecxz
lcall
and
mov
and
xlat
xchg
cmp
inc
std
movsb
lret
push
in
mov
in
sub
daa
mov
push
cmp
mov
dec
jns
jl
subb
dec
push
ds
pop
movsl
int
mov
cmc
add
lahf
dec
mov
push
sbb
sahf
test
or
fldt
imul
pop
lret
js
xor
pop
and
or
incb
repnz
inc
ja
sahf
inc
daa
cmp
xor
adc
fadd
xchg
push
out
adcb
sbb
in
add
cmp
push
ret
int
mov
addr16
sbb
mov
outsb
pushf
mov
jle
sub
notb
les
xchg
jp
adc
fs
sahf
mov
inc
outsl
mov
fdivrl
and
jge
mov
fnstsw
ret
pop
notw
mov
fisttpl
fs
lods
adc
scas
xor
jae
outsl
rclb
jle
pop
mov
mov
adc
cltd
pop
lretw
lods
add
mov
and
test
cli
insl
decb
xor
adc
cmp
shrl
incb
gs
mov
loopne
and
adc
mov
imul
cmc
xchg
jl
mov
xor
insb
cmp
add
sub
arpl
in
sbb
adc
aam
pop
cs
hlt
aad
dec
cmp
dec
xchg
aas
addb
pusha
fprem1
stos
movsb
les
xchg
dec
repnz
mov
std
mov
sbb
pop
cmp
outsl
adc
pushf
dec
push
sbb
pop
push
jl
inc
fdiv
les
dec
mov
jb
or
in
sbb
in
cmp
dec
std
inc
js
cwtl
adc
hlt
mov
fcmovne
cmpl
pop
inc
fistl
xchg
inc
mov
xor
sar
les
push
fbld
fs
les
hlt
cmpsb
rorl
ss
sbb
xchg
jmp
mov
pop
mov
ss
lret
mov
sub
ljmp
pop
les
xor
sub
outsl
out
xchg
insb
mov
fstp
mov
clc
mov
addr16
inc
push
push
ljmp
cwtl
lods
shll
push
xchg
mov
jle
cmovle
add
hlt
cltd
arpl
push
mov
cmpsl
lret
xchg
pop
mov
mov
dec
xchg
xchg
sbb
loop
cltd
jle
pop
push
shll
pusha
pop
push
fcmovbe
mov
pop
movsl
scas
add
das
incl
xorb
notb
fldenv
pop
mov
sub
pop
jo
mov
cmp
dec
push
dec
mov
add
jno
ds
orl
mov
mov
mov
movsb
bound
sub
xchg
mov
xchg
inc
hlt
outsl
out
test
sub
testl
sti
mov
outsl
mov
push
lcall
repnz
add
dec
sahf
filds
lods
xchg
pop
mov
jmp
lds
adcl
push
pop
je
popf
mov
mov
mov
or
and
outsl
insb
into
push
lods
jnp
out
scas
cmpb
aad
jp
popf
aas
or
inc
repz
ret
mov
inc
dec
sub
jae
orl
push
fsts
lahf
fstps
fisubs
dec
repnz
repnz
ret
push
mov
hlt
es
cmpsb
arpl
sub
inc
jo
adc
cltd
sbb
mov
or
mov
sahf
int3
inc
push
xchg
in
orb
pop
and
subb
pop
jl
and
out
movsb
push
test
cmpsb
or
add
adc
cltd
enter
daa
mov
sti
cmp
jno
mov
dec
dec
dec
add
ds
cmpsl
add
nop
fmull
in
mov
mov
inc
pop
into
in
loopne,pn
pop
icebp
dec
test
pop
arpl
les
lods
jecxz
popa
pop
sub
xchg
xor
cmp
outsb
mov
mov
shlb
int
andb
sbb
mov
xor
push
int
mov
push
pop
cltd
mov
and
push
lds
fsubrl
das
xchg
sub
and
stos
mov
test
popa
jg
es
mov
xor
mov
mov
xor
iret
pop
outsb
cmp
jle
sbb
push
fmuls
lret
sahf
rorl
push
imul
popl
or
aaa
push
imulb
fidivs
loop
add
aad
pop
sub
adc
xor
dec
dec
adc
mov
out
sti
mov
xor
inc
cltd
cmp
shlb
mov
sbb
addr16
testb
pop
shl
xor
add
xor
stos
imul
add
shrl
cmp
fcompl
xlat
push
adc
sub
out
gs
xorl
sti
orl
aad
push
mov
or
dec
cmc
cmpsl
movb
neg
sub
dec
les
pop
repz
std
lea
mov
cwtl
add
adc
xchg
ja
inc
mov
hlt
mov
push
inc
xchg
push
lods
jb
add
dec
push
inc
cmp
leave
jecxz
sub
idivb
hlt
std
out
mov
mov
loop
mov
aaa
adc
aas
push
fcmovnb
scas
cmpsl
mov
test
lock
and
mov
sbb
xchg
and
imul
es
in
insl
add
and
cmpsl
mov
lods
mov
or
in
push
out
mov
pop
mov
std
pop
jns
xchg
rclb
jp
mov
mov
mov
add
push
nop
or
clc
clc
in
cmp
xchg
cmpb
ljmp
push
lods
ds
mov
out
in
and
xchg
ljmp
shrd
add
push
cltd
lcall
mov
push
mov
test
push
sti
xchg
scas
test
cld
xchg
mov
pop
inc
xchg
stos
fcoml
push
jge
jmp
add
mov
in
mov
mov
adc
xor
nop
mov
jo
ret
mov
pop
sub
add
push
inc
cwtl
xchg
sbb
nop
sbb
add
or
and
bound
lods
les
jle
in
cld
push
xchg
out
push
sub
repnz
mov
inc
pushl
cld
loop
mov
mov
cs
or
fs
fbld
cmp
cmpsb
jg
xchg
nop
test
and
popf
push
and
popf
out
fnsave
sbb
mov
push
mov
insb
cmp
scas
in
adcb
cli
adc
mov
movsb
pop
push
ret
mov
inc
push
add
jae
push
rolb
push
and
fxtract
testb
scas
fimull
in
data16
cltd
sbb
jg
imul
sti
lds
lahf
fdivrs
in
sar
leave
loope
hlt
jno
dec
arpl
push
jbe
push
fstpt
push
ficomps
sub
xchg
aaa
inc
das
inc
or
inc
adc
sahf
and
cmc
pop
pop
mov
jle
lea
jo
push
mov
cmp
in
ja
jns
loopne
cmc
push
addl
pop
in
imull
enter
daa
mov
out
cmp
out
mov
dec
mov
push
movsl
fldt
mov
mov
push
mov
repnz
mov
add
icebp
push
scas
pop
sbb
pop
js
xor
pop
mov
or
loope
out
push
sub
mov
fldt
ret
mov
mov
orb
out
sbb
cmp
inc
xor
outsl
out
int
mov
mov
sbb
jecxz
sbb
mov
aam
ss
repz
sahf
dec
das
jp
movsb
cmp
push
vmovdqa
xor
or
mov
idivl
test
jge
add
mov
jle
jp
insl
shl
pop
mov
stos
or
test
into
jb
mov
push
jb
xor
stos
lahf
loop
lahf
jae
test
fs
jp
mov
push
data16
mov
cmp
cmc
pop
jecxz
iret
xchg
push
cmp
test
or
adc
decb
out
loopne
outsb
lods
pop
lock
aam
movsb
imul
xor
mov
add
cmp
dec
ret
fidivrs
ficoms
sub
xor
cs
pusha
adc
aas
rcrl
pop
icebp
dec
push
adc
inc
pop
cld
lods
fldenv
or
pop
stos
mov
test
mov
push
outsl
call
pop
or
pop
mov
pop
movsb
pushf
lahf
mov
gs
xchg
repz
out
sbb
fwait
lods
aas
mov
xor
dec
leave
push
je
and
out
in
ret
std
mov
mov
mov
in
jecxz
imul
enter
ret
push
xchg
mov
loopne
sub
jbe
add
shr
and
xor
sub
andb
sub
jmp
dec
dec
push
xchg
cmpsl
scas
lock
mov
in
xlat
cld
jl
dec
lret
jne
cwtl
mov
pop
divb
mov
cwtl
mov
sub
or
push
push
mov
popf
clc
daa
iret
lea
sbb
iret
fwait
lods
test
repz
dec
fiadds
xchg
xor
push
jl
mov
add
cmp
aas
adc
jl
adc
dec
push
mov
test
push
xchg
cli
sbb
popa
cmp
dec
stos
lret
push
popf
push
and
pop
add
xchg
jecxz
incl
xor
cmpsb
pop
xor
repnz
mov
mov
mov
pop
pop
je
ja
jo
dec
hlt
cmp
inc
das
pop
or
mov
test
or
jne
cmp
mov
xchg
jbe
call
out
lret
jns
inc
xchg
in
lcall
adc
sub
in
inc
aam
int
in
and
mov
adc
mov
xor
jle
xor
pusha
ljmp
stos
xchg
mov
out
xchg
pop
xor
xorl
push
in
mov
mov
xor
stos
lcall
insb
movsb
mov
jnp
cmpsb
cld
scas
dec
sti
dec
push
arpl
push
iret
add
jb
in
jae
jg
test
bound
mov
push
imul
jp
push
xlat
and
adc
jae
cmc
clc
mov
cmpsl
fcmovu
fsubrp
imul
mov
aas
sbb
hlt
mov
push
jle
in
call
sbb
mov
dec
or
adcb
xor
mov
jne
jge
es
ss
xor
iret
cmp
cmp
push
jecxz
imul
push
rolb
xchg
ficoms
loopne
scas
out
sbb
fucompp
xchg
jno
pop
sahf
jl
arpl
dec
sub
test
pop
pop
and
rcrl
xchg
pop
mov
sti
inc
dec
push
outsb
and
inc
jns
push
mov
xchg
pop
aas
out
js
adc
pop
loope
sbb
loope
stc
loop
fbstp
xlat
outsb
xorl
shrb
dec
cmp
xchg
sbb
pop
add
mov
sub
lret
jp
int
push
sub
or
push
lcall
lcall
mov
icebp
fwait
pusha
test
xor
andb
jl
shl
outsl
mov
mov
mov
addb
dec
sbb
push
popf
cmp
hlt
dec
lahf
not
test
sarl
mov
mov
ror
push
xor
or
in
pop
pop
outsl
outsl
jp
loop
insl
push
stc
cmp
jg
outsb
imul
lods
mov
xor
out
jae
cli
push
lcall
cmp
sar
lods
xor
stos
cmp
pop
cmovno
cltd
aaa
enter
sub
mov
jo
sbb
je
pusha
xlat
shrb
sub
mov
pop
cmp
sti
loope
shrb
cli
adc
xchg
sbb
test
fstps
jle
repz
xchg
stos
cmpsl
dec
lea
psubsb
test
sbb
pop
push
cmpsb
jle
imul
jb
push
xlat
outsl
pop
cmp
jae
enter
pop
les
jb
jp
inc
cmp
adc
add
ss
cwtl
inc
ljmp
or
addl
jge
fistpl
mov
cmpsb
mov
mov
icebp
das
pop
mov
add
mov
sarl
enter
movsb
insl
shlb
dec
or
loopne
scas
dec
add
jae
xor
mov
lods
popf
lret
in
add
xchg
mov
and
adc
inc
sar
push
sub
jge
push
push
bnd
inc
div
push
push
in
fstl
clc
negl
add
push
popa
fwait
insb
aad
adc
pop
mov
mov
and
js
cmp
pop
pop
packssdw
lar
scas
cwtl
test
shll
int3
dec
sbb
mov
sbb
or
pop
adc
sahf
mov
stos
mov
lods
inc
add
scas
outsl
jmp
inc
xchg
pop
lahf
sub
fstpl
xchg
cmpsl
and
divb
fcomps
dec
clc
ja
push
adc
mov
mov
mov
testb
cmpsl
jne
mov
out
fisubs
jns
lods
dec
in
lea
out
push
cvtps2pi
inc
or
add
addr16
inc
cmp
mov
push
mov
mov
pop
mov
pusha
lcall
xchg
nop
rorb
jmp
es
addl
push
cmpsl
pusha
xchg
xchg
enter
add
icebp
and
popa
mov
scas
stos
cmpsl
aad
stos
mov
inc
iret
bound
out
imull
push
inc
insl
cmpsl
cmp
ret
inc
sub
scas
add
jge
inc
push
repz
scas
arpl
xchg
adc
adc
mov
inc
jbe
mov
pop
rcl
addr16
xchg
xchg
push
leave
jnp
fs
pop
repnz
jbe
std
jge
or
mov
lods
pop
or
push
add
xchg
int3
add
rcrb
jns
pusha
mov
sbb
push
jo
aas
sbb
bound
cmp
scas
jmp
add
lds
in
lds
daa
scas
adc
scas
mov
cmpsl
hlt
bnd
stos
nop
dec
pushf
mov
mov
jmp
fistl
push
gs
test
cmp
pushf
ja
rcrb
xchg
mov
pop
and
sahf
push
out
loope
sub
sub
xorb
cld
and
rolb
lcall
sbb
inc
xor
mov
push
into
stc
push
int
pop
or
mov
test
push
lret
fsubrl
mov
jp
xchg
cld
lret
test
jg
pop
ds
sub
stc
aad
mov
popa
mov
ss
imul
push
mov
fsubrs
mov
lret
xor
adc
jl
jecxz
aad
cmp
cmc
lods
pop
xor
jb
dec
dec
cmp
cmpsb
outsb
xchg
stc
repnz
fs
add
and
fisttpl
lods
lahf
aaa
cld
mov
fs
jne
cli
cmp
push
cmp
into
repnz
xor
shlb
push
loopne
or
cs
jg
jp
xchg
adc
adc
mov
jb
mov
sbb
scas
out
xlat
ud0
sub
std
mov
or
push
in
cld
dec
sti
nop
js
cs
mov
out
fwait
into
lret
dec
adc
fildl
fdivs
nop
mov
xrelease
scas
and
in
call
adc
dec
mov
pushf
cmc
cmp
jmp
and
fnstsw
jne
hlt
push
inc
jecxz
pop
aas
cli
jo
jb
and
mov
sub
jecxz
jmp
cmc
std
fcoml
push
mov
push
out
std
into
movl
dec
inc
xchg
jle
dec
lock
das
out
jbe
sub
loop
inc
testb
cmp
nop
ror
sbb
cli
insl
mov
enter
xor
mov
xchg
mov
cld
rcrb
lret
push
sub
mov
xchg
fldenv
pusha
mov
into
mov
in
aam
repz
ret
iret
push
movsb
push
fnstcw
fnstsw
mov
popf
mov
xchg
aas
or
popa
mov
je
jg
dec
mov
adc
and
push
xor
stc
bswap
push
dec
add
mov
inc
test
iret
test
dec
push
in
test
push
mov
sbb
shrl
stos
test
mov
add
lret
inc
xor
xor
mov
xor
mov
mov
cmp
mov
lea
mov
inc
pop
mul
or
mov
cli
dec
dec
dec
stos
pushf
xlat
jne
dec
and
jne
push
out
mov
loop
jns
mov
lcall
push
sub
jecxz
mov
or
pop
sbb
call
sbb
mov
pop
enter
mov
pusha
xor
in
xchg
arpl
hlt
xchg
icebp
inc
out
adcl
in
arpl
sub
scas
sbb
cmpb
cwtl
lret
out
insb
jp
sarb
imulb
icebp
pop
xchg
adc
mul
iret
shll
in
test
inc
js
add
pusha
xchg
inc
xor
lods
push
aad
mov
xchg
imul
test
fisubrs
movsl
dec
lds
mov
lock
repnz
test
mov
jmp
jbe
and
sbb
aaa
jg
push
notl
add
xor
out
ja
pop
out
sbb
inc
dec
sbb
in
insl
scas
scas
aad
mov
cmc
fsts
pushf
in
movsb
cmp
sbb
in
lods
pushf
xor
add
in
inc
fnsave
lods
sub
dec
or
movsl
lock
fisubs
cld
add
push
cmp
cmc
test
add
mov
inc
lods
cmp
pop
lea
dec
js
mov
push
arpl
loope
jnp
sub
and
outsb
inc
mov
fst
pop
or
sub
fisttpl
popf
xor
arpl
push
shr
xor
sub
mov
xchg
dec
push
lcall
dec
xchg
sbb
mov
push
in
test
dec
mov
jg
int
mov
jecxz
mov
jg
add
lahf
jmp
cmp
push
call
lret
mov
test
rorb
xor
sbb
add
mov
es
loop
movsb
push
stc
test
test
movsb
and
daa
lods
xchg
pop
out
sti
xor
insb
xor
xor
cmp
pop
and
repz
adc
add
dec
pop
dec
popf
daa
adc
pop
imul
arpl
xchg
dec
fidivs
cmp
adc
dec
push
iret
sub
xchg
mov
das
xchg
je
aas
and
rclb
adc
mov
jbe
mov
inc
xchg
xchg
imul
movsb
pop
les
sbb
push
or
mov
mov
dec
dec
add
xchg
ret
dec
pop
mov
movsb
inc
pushf
mov
xor
pop
orb
subb
cltd
and
jb
ljmp
clc
push
testb
pop
cwtl
mov
in
mov
dec
pop
subl
or
jge
adc
inc
addr16
cltd
dec
mov
lds
mov
jge
and
xchg
rcll
xchg
fisubl
push
dec
incl
cmpsl
lods
cltd
loope
fxam
push
icebp
imul
lret
ret
mov
je
mov
pop
cmc
push
adc
mov
mov
aam
in
ret
pop
sti
push
push
pushf
mov
mov
add
ljmp
call
mov
js
test
push
or
adc
add
add
pusha
test
xchg
xor
dec
test
test
and
sbb
jl
rorl
pop
stos
int3
xchg
stos
cwtl
mov
syscall
std
out
movsb
add
ret
jecxz
pusha
es
xor
sbb
xor
push
cmc
mov
jl
stos
mov
dec
rorb
int
xchg
inc
hlt
pop
dec
or
xor
sub
dec
rclb
push
push
pushf
out
pushf
push
sahf
bound
imul
xchg
lret
sub
out
mov
cli
shl
or
xor
pusha
jp
push
lret
mov
pop
mov
jle
sub
mov
ret
aad
xchg
mov
jmp
mov
mov
popf
mov
mov
out
mov
stos
repz
jno
in
mov
scas
jno
ret
roll
in
nop
iret
and
mov
sbb
jmp
inc
sbbl
inc
xor
std
or
lds
inc
push
and
adc
int3
xchg
ret
sbb
pop
inc
imul
shll
test
mov
or
mov
cmp
ror
imul
jge
lods
mov
jae
pop
clc
lcall
jo
add
pop
sub
ficoml
dec
push
es
xor
inc
mov
scas
mov
insl
and
mov
notl
shll
in
xchg
jne
enter
daa
lods
ficomps
jae
dec
jno
mov
dec
jp
xchg
outsb
mov
imull
int3
lahf
add
fs
or
test
iret
jle
inc
xchg
std
mov
scas
js
and
push
xchg
in
aam
fs
xchg
pushf
cmp
dec
xor
cli
icebp
and
ret
sbb
sahf
jae
out
sbb
rcll
push
aam
outsl
int
push
lods
sub
push
lcall
out
faddl
out
sahf
ficompl
aam
jb
dec
jg
inc
dec
mov
shrl
out
push
mov
sbb
and
cs
imul
or
mov
sub
mov
xchg
sbb
fxch
call
aad
repz
loop
or
inc
fs
outsl
adc
inc
pop
data16
cmpsl
lods
insl
idivl
out
add
int3
xor
push
arpl
inc
sahf
or
shlb
clc
into
pop
insb
sarl
and
jle
das
adc
mov
add
sbb
push
rdmsr
cmp
das
or
lods
adcb
std
lock
out
xchg
inc
cs
cmp
pop
pop
addr16
push
mov
inc
cmpsl
test
aas
pop
in
les
or
jmp
call
adc
pop
outsb
mov
mov
jmp
push
push
pop
and
inc
add
jo
sbb
pop
aas
cmp
cmp
in
dec
movsl
js
je
fwait
stos
jecxz
cmpsl
test
sub
sub
enter
test
jecxz
cli
add
pcmpeqd
lods
iret
sahf
mov
push
cmp
lock
cwtl
jno
movsb
dec
pop
mov
scas
test
test
data16
insl
xchg
repz
cli
pop
dec
cmpsl
stos
test
mov
inc
inc
pop
cld
sub
mov
mov
jnp
inc
mov
adc
mov
sub
aam
sub
ret
in
jecxz
push
pop
push
enter
repz
adc
stc
xchg
mov
dec
cwtl
popa
loopne
mov
mov
fistl
xchg
dec
in
xchg
push
call
or
leave
cltd
lods
loop
test
jns
mov
push
pop
dec
in
into
xchg
test
mov
sbb
or
mov
loope
stos
xchg
pop
add
add
xor
lods
or
mov
insb
mov
sub
mov
add
ja
pop
jns
rolb
or
stos
push
fwait
pop
cmp
jo
push
jne
jmp
mov
pop
das
out
jnp
punpckldq
mov
jns
mov
or
out
jns
sub
fldcw
idivl
mov
mov
dec
fdivrl
jg
in
dec
popa
pusha
imul
sti
dec
and
jns
adcb
movsb
push
lock
fstps
inc
sub
into
stos
data16
and
dec
xchg
insb
push
loop
jnp
push
stos
scas
aam
mov
add
adc
lods
pushf
ret
cmp
hlt
sbb
mov
sub
inc
ss
sti
or
inc
mov
aas
fcmovb
test
xchg
sbb
or
daa
and
sbb
fidivs
lds
or
sbb
pop
rclb
leave
loopne
xor
stos
mov
jge
pop
sub
shlb
cmp
std
xor
fnstsw
add
adcl
push
or
xchg
jo
push
jmp
and
inc
adc
movsb
xchg
sub
in
push
iret
movsb
in
jp
adc
idivl
mov
cmp
mov
dec
jmp
cmpsl
add
xor
loopne
ficoms
test
lcall
sarb
fnclex
push
js
push
pop
fucomp
mov
and
loope
lea
mov
pop
cmp
xchg
outsb
or
pop
rcl
ljmp
aad
inc
sbb
mov
stc
xor
cs
pop
js
sub
push
xchg
pop
xchg
inc
mov
push
pop
rclb
sub
aas
sub
loop
jge
or
lea
arpl
pop
xchg
mov
notl
and
add
popa
mov
cmp
loopne
jae
int3
cs
cmp
ret
mov
out
mov
cmc
add
jbe
pop
dec
movsl
outsl
jmp
test
pop
stos
cmp
fs
pop
jl
lods
push
lods
or
out
xchg
pop
cli
rclb
gs
cmp
fdivrp
cmp
add
sahf
cmp
outsl
adc
imul
in
mov
repz
rcrl
sbb
pusha
and
xlat
int3
lea
mov
add
push
xchg
mov
or
dec
das
outsb
or
fnstenv
int
xchg
adc
repz
push
lea
or
call
xchg
jl
pop
and
adc
pushf
negb
jmp
sahf
push
pop
dec
movl
sub
xlat
mov
mov
loop
sbb
inc
je
mov
jecxz
or
std
roll
gs
das
mov
mov
addr16
sbbl
fcmovnu
mov
int3
mov
sahf
jmp
dec
stc
stos
das
subl
mov
gs
and
push
dec
shll
inc
sub
lret
add
cmpsl
stos
repz
pop
pop
push
cld
push
insl
jno
mov
loopne
and
jg
push
pop
xor
rolb
mov
push
ja
aam
movl
push
and
clc
dec
pusha
repz
cld
jns
ljmp
shrd
scas
mov
rcll
xchg
xchg
out
push
ret
out
jbe
out
add
fbstp
aas
cltd
in
fadds
xor
dec
push
sbb
cmp
xchg
xchg
lock
cs
popf
sar
lea
pop
add
add
jbe
into
push
dec
ror
add
sbb
lcall
pop
mov
sbb
adc
les
fs
mov
mov
mull
inc
and
ret
aad
dec
push
sbb
jne
rcll
out
pop
adc
bound
mov
in
lahf
rclb
mov
cmp
mov
or
in
and
insl
xor
mov
pop
lock
dec
xor
in
dec
sub
fistps
pop
push
xchg
fsubl
pop
jmp
push
fisttpl
mov
int
fdivs
mov
insb
outsb
jns
fstps
and
inc
lret
or
cmc
ljmp
xchg
mov
lcall
ret
push
pop
xchg
mov
in
jae
sar
inc
cmp
test
int
hlt
push
push
pop
clc
fidivrl
mov
jo
sub
imul
ficoms
and
jle
inc
cmp
cmpsb
or
repnz
leave
push
xlat
hlt
xor
arpl
dec
aas
jge
lcall
mov
addl
jmp
push
pop
jae
or
in
aas
jno
aaa
imul
jo
scas
jb
outsl
and
pop
sub
and
push
pop
mov
cmpsb
mov
shrl
repnz
daa
stos
mov
lcall
adc
ds
mulb
int
aad
inc
push
outsb
push
mov
pusha
test
gs
inc
inc
loopne
subl
js
adc
sub
loope
dec
popf
sub
std
sbb
add
outsb
jo
adc
mov
rorl
call
cmpsb
mov
sbb
xor
test
fidivrl
int
mov
sub
sub
adc
push
push
testl
sahf
and
imul
std
inc
jg
xor
mov
dec
je
aad
pushf
mov
and
ficomps
jae
movsb
sub
cmp
fwait
into
dec
testl
and
and
lahf
in
ror
and
cmc
enter
mov
imull
bnd
stc
into
xor
fs
inc
insl
data16
mov
push
xchg
add
mov
loope
and
pop
sub
gs
push
out
shll
out
adc
call
xor
adc
mov
bound
insb
or
fwait
or
xlat
or
sub
sub
jo
lahf
sti
dec
mov
inc
aad
test
pop
sahf
rorl
repnz
inc
int
add
lods
mov
les
loopne
mov
rclb
push
cld
adc
or
hlt
movups
inc
pushf
mov
cli
ljmp
and
dec
jb
aas
jbe
inc
jb
js
dec
xchg
xlat
scas
je
iret
pushf
jecxz
icebp
notb
dec
std
js
lahf
cwtl
ljmp
mov
add
xor
xchg
fisttpl
insb
mov
lcall
das
bound
scas
mov
sbb
in
and
ror
roll
aad
arpl
xchg
insl
push
pop
dec
dec
lock
test
xchg
push
icebp
out
sar
jle
jge
punpckldq
inc
dec
push
and
sbb
push
rcrb
nop
jmp
dec
int
aam
mov
ret
or
rcr
adc
insb
aas
xchg
cmp
iret
ljmp
mov
mov
mov
inc
jne
sahf
add
mov
cltd
sbb
inc
mov
push
test
dec
mov
psrld
loope
iret
rcll
lods
pop
lods
xchg
gs
inc
push
bnd
add
ss
call
xor
enter
mov
mov
inc
addr16
pop
jns
divb
push
dec
cmpsb
fstl
mov
sbb
mov
pop
dec
ss
jne
sbb
mov
cmp
loop
cmp
jns
push
out
ljmp
out
mov
sub
iret
pop
loop
or
jp
cmp
mov
jae
mov
lret
push
out
jle
frstor
sub
xchg
fistpll
lds
jmp
sbb
aas
mov
popf
fsubs
push
stos
xchg
push
and
pop
subb
jnp
inc
fwait
scas
lcall
adc
test
mov
ret
dec
pop
leave
repnz
mov
sub
xor
xor
inc
push
rol
mov
sub
gs
sbb
ss
inc
sarb
lds
fwait
rcrb
inc
dec
in
xor
mov
hlt
jle
push
arpl
pop
xor
jbe
or
stc
cmp
dec
xor
jnp
and
ret
mov
add
mov
into
shlb
pop
out
lret
scas
push
inc
fwait
and
push
cmp
push
movsb
lods
mov
push
lods
or
and
xchg
dec
pop
test
in
mov
daa
test
psrad
clc
aad
adc
inc
cmpsl
xlat
popf
inc
movsl
or
dec
and
and
test
jns
lds
cwtl
inc
shl
and
inc
dec
ret
xor
dec
pop
pop
lock
pop
scas
loope
xor
sub
out
xchg
cmp
mov
loope
mov
stos
jne
movb
mov
cmp
ds
push
push
fldl
int
scas
sub
insl
add
xchg
inc
stos
lcall
push
faddl
sub
test
lcall
mov
mov
aam
mov
mov
stos
push
and
jae
ss
jp
xchg
les
push
xlat
shl
push
mov
roll
sbb
mov
into
cmpsl
xor
cmc
cmpsl
loop
cmovb
loop
orb
mov
xchg
adc
sub
sub
and
cmp
mov
sbb
cmp
mov
cmp
lods
xchg
or
repnz
jg
push
jo,pn
loopne
jb
pop
leave
test
adc
add
adc
rorb
pop
pop
pop
xchg
push
sub
sbb
xchg
xlat
dec
jno
push
adc
mov
sti
sti
jp
cs
inc
dec
aad
scas
jae
loop
xchg
dec
in
jp
inc
loopne
rcr
in
xor
test
mov
mov
pop
adc
repz
mov
pop
xchg
outsl
adc
fs
dec
aas
pop
jmp
sbb
pop
or
sbb
enter
xor
jb
jae
je
push
enter
mov
pop
mov
inc
mov
sub
orl
loopne
mov
adc
mov
data16
add
clc
je
or
mov
repz
rcll
xchg
out
std
insl
cmp
fisttpl
or
mov
cld
test
sbb
push
outsb
clc
mov
jno
pop
shr
int
sub
add
adc
xor
rcr
cmp
dec
clc
les
xchg
jp
and
inc
mov
lret
lods
xchg
xchg
dec
mov
add
jmp
and
xor
xor
add
fisttpl
or
mov
decl
xchg
insl
pop
dec
and
test
xor
xchg
jnp
sbb
xor
sbb
xchg
sbb
push
pop
inc
fcoml
xor
out
or
cwtl
lret
xor
lret
jmp
mov
mov
mov
xor
lahf
ja
bound
dec
cltd
cltd
ret
outsb
test
fwait
in
out
sbb
cmp
lret
int
cmp
sbb
iret
clc
cmpsl
jns
xchg
fnsetpm(287
jne
fistl
cmpsb
lcall
lret
or
push
or
mov
xlat
scas
mov
cmp
jle
jp
in
orl
pop
xchg
jmp
call
inc
rclb
cmp
popf
es
jnp
repz
test
or
xor
scas
std
mov
push
push
call
iret
pushf
inc
push
ret
inc
pop
add
pop
inc
scas
jns
jae
jno
inc
aas
ja
or
mov
xor
stos
in
stc
cmp
sbb
jl
imul
xor
pop
out
rol
ja
cld
mov
test
push
hlt
leave
xchg
enter
shll
leave
jge
cmp
add
aaa
cmp
fildl
push
dec
mov
xchg
pop
shl
ds
mov
int3
xor
mov
xor
xor
jns
aam
mov
das
mov
movsb
cmp
push
sti
movsb
jae
cmpsl
in
jg
das
shll
call
stos
data16
or
jno
gs
jl
shrb
loopne
ds
ja
movsl
adc
and
cmc
xor
push
xorb
mov
cmp
inc
bound
or
pop
push
xor
js
push
std
pop
lcall
loope
aaa
dec
sub
mov
cmp
push
adc
dec
ret
mov
push
sbb
loop,pt
adc
or
ja
int
fdivr
sub
roll
adc
sbb
cmc
insl
fsubrl
sub
sahf
inc
mov
sbb
push
mov
xchg
rorl
jl
dec
and
adc
sub
cmp
cmp
je
testl
fstpt
rcrl
fistps
std
aaa
or
mov
jge
push
mov
outsl
mov
lret
stc
cmp
aad
cmp
jecxz
call
daa
js
inc
pushl
xchg
cli
imul
xor
and
or
inc
mov
out
lock
ret
add
leave
push
adc
imul
or
cmpsb
add
xchg
sbb
loop
mov
xchg
push
mov
popf
sub
jne
xchg
cmpsb
sub
inc
out
aam
stos
cli
js
scas
mov
cmp
dec
pop
stos
inc
repz
inc
fstps
mov
insl
repz
les
lea
xchg
outsb
adc
ret
pop
cmp
call
lret
pushf
imul
hlt
jmp
lcall
aam
inc
test
aas
mov
aas
jb
ficoml
dec
add
mov
neg
enter
jb
cwtl
pusha
xchg
adc
mov
cltd
fmuls
mov
mov
pusha
mov
das
and
in
popf
sbb
mov
jle
out
shll
mov
dec
out
mulb
fmuls
cld
aam
dec
lret
in
xchg
and
xchg
bound
nop
inc
rcl
sarb
sub
gs
aam
cs
push
imul
clc
incl
xchg
mov
jnp
popa
cmp
clc
lods
add
mov
or
imul
insl
sub
cltd
mov
addl
pop
xchg
pop
test
push
jb
lods
out
xchg
clc
sbb
lret
mov
stos
inc
ficompl
cmp
add
jnp
leave
xor
dec
pop
xor
int3
mov
lret
jae
mov
out
jns
ja
ficoms
mov
mov
or
fwait
adc
cs
cld
sub
jne
fidivs
mov
insb
leave
out
not
mov
int3
cltd
jns
jns
in
pop
adcb
mov
xchg
or
push
cs
je
jp
mov
repnz
jp
jg
cmp
mov
in
in
mov
pusha
xlat
push
dec
fbstp
in
xchg
push
test
xchg
mov
push
in
mov
push
cld
arpl
popf
dec
dec
mov
push
sub
stos
xor
das
insb
cld
jnp
jnp
inc
inc
scas
pusha
push
and
fwait
cmpsl
mov
iret
sti
into
push
ret
je
aaa
sbb
jae
cmpsl
push
inc
inc
lds
push
iret
push
or
xchg
xor
sbb
xchg
lcall
popa
pop
xchg
rclb
add
xlat
xchg
push
leave
mov
stos
xchg
arpl
ds
jbe
test
sbb
and
in
mov
int3
jno
or
jle
push
xchg
enter
ret
push
sub
scas
nop
and
mov
movsb
ret
add
dec
addl
sub
ja
jecxz
lea
cmpsl
and
jb
pushf
jno
imul
jl
aam
dec
movsl
jo,pt
sbb
js
and
cmpsl
fcoml
or
test
cli
xor
jecxz
int3
icebp
ljmp
sarb
pop
flds
aad
out
or
sub
dec
imul
cltd
jb
adc
inc
xchg
lret
mov
andb
sub
add
jp
xor
packsswb
jecxz
jp
mov
fadds
pop
ret
mov
mov
sub
rorb
sahf
or
test
and
lret
mov
sbb
cmp
fidivs
imulb
cmp
int3
movsb
push
test
and
mov
sbb
sub
cmc
sbb
test
mov
sub
fs
jge
adc
mov
lods
lock
js
xchg
icebp
cli
sahf
roll
xor
cmpb
cmp
lds
gs
int
movsb
daa
or
adc
adc
xchg
subb
lea
sbb
add
push
jge
loope
daa
cmp
xlat
enter
in
pushf
fsubs
mov
cmp
pop
ds
cs
push
aad
sub
nop
cwtl
lret
les
xchg
push
inc
push
inc
sbb
mov
sbb
mov
mov
call
mov
aaa
pop
in
xchg
out
adc
jne
mov
cmpsb
xchg
pop
push
mov
xor
jmp
aas
push
cltd
sub
add
insb
dec
clc
mov
je
xchg
insl
jecxz
inc
cmp
sbb
or
sbb
mov
popa
pop
mov
xchg
nop
dec
addr16
scas
fistl
pushl
mov
mov
test
call
lock
inc
and
shl
mov
es
loop
insl
or
dec
loope
mov
mov
jae
fdivr
ljmp
lret
pop
xlat
insb
mov
sahf
sbbb
scas
dec
pop
rclb
cmpsl
jmp
ret
mov
arpl
clc
cmp
repz
clc
sahf
pop
ljmp
fwait
lods
insb
lret
in
enter
test
mov
jno
das
ret
arpl
add
fs
rcrb
mov
mov
dec
out
das
jl
sub
add
sbb
je
rcll
and
push
stos
xor
loope
sub
daa
rolb
xchg
mov
notb
or
mov
or
push
test
mov
stos
hlt
sbb
ficomps
dec
jg
ja
jle
dec
or
ja
fwait
inc
repnz
fistps
push
mov
and
out
ret
cmc
ror
jns
add
in
icebp
sub
lods
repnz
sub
shlb
jp
leave
or
mov
sbb
sarb
nop
fs
dec
jecxz
jb
call
xchg
sub
out
jle
dec
cmpl
mov
push
mov
push
adc
and
orb
addr16
lods
jnp
jmp
sbb
lret
push
cmp
iret
pop
popa
fcmovnb
outsb
or
inc
lds
jae
and
inc
xchg
or
cmpsl
roll
inc
and
xchg
int3
push
sbb
adc
push
and
fisubs
inc
push
shrb
js
sub
add
pop
adc
arpl
xchg
bnd
xlat
fnstsw
insl
sbbb
or
mov
dec
mov
int3
pop
cwtl
in
das
fsubl
js
push
xor
imul
or
cli
gs
cmp
jmp
push
cltd
movsl
add
in
std
ds
fidivs
stc
daa
cmpsb
test
cmp
stos
mov
xchg
mov
jbe
inc
or
cmp
lahf
mov
lret
inc
test
xchg
ud2
inc
add
icebp
stos
pop
sahf
fdivrp
js
in
pop
sbb
push
jae
loope
mov
sub
mov
pop
outsb
cld
mov
or
sbb
jb
xchg
lret
xorb
sbb
add
in
pop
xor
inc
enter
lods
sub
sysret
push
mov
lcall
cmpsb
faddl
dec
mov
test
jo
adcb
jg
dec
dec
mov
stos
or
adc
and
sbb
jge
mov
pop
fadds
dec
mov
clc
and
leave
fwait
mov
xchg
cmp
push
or
cmc
in
add
and
inc
jge
loop
lret
jge
stos
ret
push
fs
mov
cmp
xchg
daa
lods
xlat
xchg
jo
cmp
adc
lret
xor
xchg
or
movsl
call
sbb
loopne
mov
sub
imul
std
add
sbb
xchg
mov
mov
cmp
and
sub
js
les
adc
or
jne,pn
mov
add
lods
cwtl
dec
or
inc
sbb
lods
xchg
repz
mov
mov
xor
sbb
pop
call
or
js
inc
pushf
dec
lret
test
loop
cmc
ja
inc
sub
xchg
inc
mov
movsb
jb
or
insb
je
sub
jge
sub
pusha
imul
mov
mov
les
xchg
jbe
orl
add
aam
mov
inc
mov
jg
lock
pop
test
mov
clc
and
roll
js
outsl
lods
pop
insl
icebp
mov
fsubr
mov
mov
dec
shll
lret
lret
fucomi
mov
movsl
mov
xor
into
pop
mov
mov
lea
aam
mov
inc
push
icebp
pushf
in
fnsave
imul
push
and
mov
out
sub
cmpsb
push
or
sub
ret
add
jae
cltd
notl
in
mov
cmp
xchg
pushf
sub
push
out
mov
xchg
adc
lods
imul
pop
shll
and
push
jle
push
add
mov
xor
dec
xchg
add
insl
fwait
insl
xor
lret
or
push
push
idivl
add
out
pop
dec
jb
and
xor
or
jmp
add
sti
push
jne
das
shlb
mov
jno
xchg
jecxz
push
fadds
das
lcall
mov
mov
fbstp
aad
or
cli
or
in
inc
and
inc
jmp
mov
mov
inc
sub
dec
mov
orl
imul
fwait
dec
cmp
cmpsl
dec
inc
stos
sbb
pop
and
and
rolb
jnp
push
sub
es
je
sub
adc
and
jae
mov
lahf
xchg
inc
rcl
fnstenv
fistps
dec
mov
shrb
test
int
xor
stc
ret
and
sbb
inc
fsubrs
jno
fiadds
add
movb
shrl
jge
repnz
stos
jmp
hlt
stos
rcr
arpl
pushf
xchg
jge
pop
xor
xor
push
aaa
ja
orb
ljmp
pop
lods
push
pop
xchg
inc
xor
les
lahf
and
mov
jmp
call
push
int3
in
in
std
enter
daa
movsl
insl
cmpb
aaa
shlb
test
jl
js
dec
addl
arpl
push
and
movntq
sarb
js
pop
js
inc
pmulhw
push
gs
lds
adc
push
sub
cmp
jne
lock
std
push
cmp
outsb
pop
stc
cld
adc
mull
icebp
frstor
inc
popa
xchg
sbb
mov
xor
fadds
jmp
inc
out
sub
xchg
filds
lea
fwait
push
flds
test
sub
mov
sahf
dec
inc
loope
jno
or
or
push
mov
add
lfs
cmc
and
mov
cvttps2dq
inc
ret
inc
adc
into
shll
mov
adc
sbb
call
test
jnp
outsl
outsl
and
mov
cmp
adc
push
data16
xchg
lods
mov
jno
out
mov
lock
mov
or
shlb
loopnew
sub
pop
inc
scas
jge
in
icebp
imul
mov
cmp
das
sbb
xlat
inc
xchg
pop
sub
stc
xchg
xchg
or
mov
test
fdivs
aad
cmp
nop
dec
mov
add
sub
sub
rorb
aad
jge
int
mov
lea
cld
mov
clc
pop
push
xlat
mov
iret
out
pushf
clc
cmc
lcall
sub
inc
cmc
mov
jb
je
dec
out
or
push
adc
mulb
call
into
mov
stos
cltd
mov
out
xchg
dec
cmp
pop
mov
mov
movsl
mov
jno
ds
mov
data16
scas
lret
mov
pop
test
rorl
jmp
insl
fcoms
lahf
cmpsl
movsb
popa
xchg
mov
and
mov
mov
lods
es
mov
in
push
sarb
int
sub
dec
pop
scas
iret
push
mov
dec
fstp
mov
clc
mov
mov
ljmp
add
mov
out
nop
ror
xchg
ds
push
push
in
insb
mov
and
push
sbb
cltd
je,pn
test
sub
ljmp
test
jg
xchg
sar
pusha
adc
pop
add
push
push
and
add
mov
inc
adc
pushf
push
mov
xor
enter
mov
mov
insb
scas
mov
and
cmovp
ljmp
das
mov
mov
rcll
jne
outsb
enter
sub
mov
bound
jg
jns
call
in
adc
inc
test
out
mov
sub
mov
mov
jp
push
in
ja
cmp
int3
xor
ja
in
lahf
cs
test
pop
mov
xchg
into
mov
inc
xchg
adc
push
sbbl
push
popf
ret
mov
out
jo
mov
push
and
out
insb
cmp
subl
adc
rol
es
fsubl
inc
fistl
out
inc
dec
addr16
fidivl
inc
dec
je
fisubrl
movsl
sbb
jmp
scas
xchg
jecxz
js
pusha
rcr
sarb
leave
and
and
cmc
in
arpl
sti
jge
cs
aaa
adc
add
cmp
push
ds
xor
pop
xchg
sti
scas
lods
add
cmp
popf
mov
push
aaa
mov
cmpsb
mov
sti
in
lret
dec
sbb
daa
movsb
mov
cmp
add
jno
and
dec
repnz
jne
xchg
movsl
das
out
xchg
outsl
jmp
lahf
cld
push
movsb
push
mov
stc
test
inc
sahf
dec
jno
adc
sbb
dec
lds
pop
xchg
xchg
push
pop
xor
mov
stos
cmp
cmp
adc
shr
arpl
pop
movsb
dec
sbb
pop
pop
add
int3
arpl
dec
jl
push
in
fistl
sub
pop
or
es
das
popa
iret
sub
scas
sahf
repnz
test
xchg
mov
dec
push
cmp
insl
dec
mov
xchg
pushf
mov
or
cmp
lock
std
scas
mov
add
cmp
shl
pop
mov
cld
enter
mov
jb
sub
outsl
add
ret
stos
push
stc
sbb
fs
sbb
imul
lods
movsl
xchg
push
mov
mov
jecxz
aaa
mov
out
cmp
fisttpll
shll
gs
roll
jne
inc
pop
fs
adc
repnz
adc
add
inc
out
cmp
push
pusha
imul
lcall
inc
mov
mov
repnz
sti
mov
and
nop
sub
in
aas
push
stc
fincstp
and
loopne
aaa
repz
mov
mov
ljmp
or
and
adc
adc
jmp
ss
pop
cmp
addb
mov
aas
xor
cmc
jb
paddusb
push
mov
jecxz
cmc
daa
mul
frstor
std
bound
jo
adc
push
ret
dec
sub
dec
cmp
inc
das
xlat
lock
lret
imulb
pushf
rorb
popw
lods
and
cmp
add
jne
jno
mov
rcrl
mov
in
sub
clc
int3
push
cld
and
lret
test
fstps
mov
lcall
xorb
jp
aam
xor
gs
cld
mov
clc
jmp
dec
xchg
mov
arpl
sub
mov
mov
repz
sbb
push
shlb
jo
stc
cs
gs
aad
ret
cwtl
ret
pop
dec
xchg
stos
loop
and
xchg
test
test
xchg
imul
outsl
push
rcrl
xlat
pop
scas
push
cmc
stos
cmp
push
les
add
fcomps
xor
scas
jecxz
pop
jl
xor
sbb
aas
or
xlat
cld
cmp
fcmovnu
push
ja
cmc
push
dec
pop
roll
inc
inc
push
or
dec
add
mov
out
add
outsb
bound
jae
in
mov
add
xor
lds
add
aam
push
mov
or
mov
and
fcomp
in
pusha
js
inc
test
fcomip
lea
jmp
fistps
subl
sti
push
or
cltd
mov
and
mov
and
fsubrl
add
jb
scas
in
negl
xchg
cmp
ret
and
dec
in
out
js
add
push
inc
dec
test
sahf
mov
push
lret
lock
pop
and
sbb
inc
out
fistpl
fimuls
xlat
sar
sbb
repnz
mov
hlt
inc
dec
mov
and
or
addl
in
sbb
mov
inc
add
in
sbb
mov
and
xor
jp
scas
mov
or
cmp
cmp
out
sbb
xchg
in
mov
mov
daa
mov
test
jno
mov
test
ds
mov
and
lahf
sbb
call
test
repnz
or
testb
adc
pop
aad
jge
mov
jbe
sub
sti
aad
lret
outsb
and
mov
shrb
sbb
subb
sbb
repnz
xor
shl
push
out
push
ja
push
push
jbe
xlat
sahf
dec
pop
mov
push
xchg
faddl
push
iret
sahf
xchg
or
jg
int
gs
cmpb
sbb
cwtl
push
sahf
mov
jnp
mov
mov
fdivs
jns
cmpb
das
aaa
test
push
int
mov
or
sbb
push
cs
stc
jnp
cmc
cmp
add
xor
bound
jo
loop
out
stc
iret
sub
fs
mov
sbb
lods
mov
mov
push
or
mov
xlat
ret
or
and
gs
inc
pop
loopne
xorb
mov
adc
inc
mov
add
mov
sbb
cmp
insl
sub
shll
sti
adc
xchg
aad
dec
daa
add
push
sbb
mov
outsl
repz
iret
lea
in
call
mov
pop
mov
pop
sbb
out
das
pop
fisubrs
inc
shr
inc
or
push
aas
iret
jecxz
jb
fistps
dec
aam
xchg
je
imulb
lds
or
cwtl
pop
xchg
mov
add
dec
adc
and
adc
mov
sbb
subb
shl
jl
into
mov
xor
xor
mov
dec
int
loopne
mov
vcvtusi2sd
stos
scas
mov
mov
mov
cmp
pop
sub
out
sub
pop
inc
aam
insl
aas
ret
hlt
add
push
cmp
sub
clc
repnz
hlt
inc
lret
sarl
and
mov
push
push
fsts
fwait
aad
pandn
ds
pushf
sbb
test
mov
mov
xlat
xchg
xchg
dec
mov
push
xchg
jl
sbb
jg
shll
fbstp
stos
out
loop
push
addr16
add
repz
call
mov
or
bound
mov
jp
sbb
sarb
xchg
cmpsl
sti
ja
add
pushf
inc
fidivrl
stc
or
aaa
dec
fwait
decl
dec
imul
sbb
mov
movsl
bound
in
stos
mov
in
sbbl
mov
lea
lods
jmp
test
stos
test
push
mov
mov
mov
jle
sub
outsl
pusha
faddp
dec
fists
push
shr
insl
xchg
xchg
stos
sub
cmpl
mov
adc
mov
add
jno
aad
xchg
add
adc
xchg
jnp
sub
adc
push
aas
cmp
jb
cli
iret
shlb
pop
dec
sbb
jae
mov
inc
push
pop
cmp
add
inc
rolb
icebp
pop
ficoml
loopne
xchg
sub
sbb
orb
pusha
fisubrs
adc
sbb
jno
sahf
jno
bnd
sub
pmaxsw
hlt
mov
hlt
jbe
movsb
mov
sbb
or
or
jle
loopne
cmpsl
int3
or
pop
jmp
push
add
cld
xor
aad
jnp
push
and
fidivrs
jns
add
jp
add
cld
cmpsb
mov
ljmp
mov
mov
sub
int3
dec
rclb
push
movsl
cmp
fiadds
cmp
cs
mov
in
fwait
js
pop
cmp
xchg
js
cmc
xchg
pop
adc
test
sbb
mov
mov
mov
mov
adc
mov
adc
addb
jnp
push
cld
mov
out
cmp
int
mov
sub
push
pop
or
ficompl
ficoms
fsubrl
jae
sub
loopne
sahf
cmp
xchg
test
inc
mov
jg
mov
push
mov
jno
and
mov
cmp
jae
push
testl
push
ja
into
fdivl
and
add
xchg
xor
lods
loop
pop
sar
xchg
pusha
adc
out
mov
aad
lods
jae
cwtl
mov
pop
push
add
pusha
xor
inc
rorl
or
mov
gs
sbb
outsb
pop
mov
pop
sbb
push
roll
add
mov
cmp
fst
add
and
sub
mov
enter
les
cs
or
and
and
movsl
push
adc
gs
fdiv
cmp
sbb
shrb
xchg
lea
sbb
or
lret
pop
insb
add
adc
rorl
stc
jo
jmp
push
pop
xor
hlt
inc
daa
fwait
and
outsb
shlb
dec
repz
add
mov
and
std
mov
dec
cwtl
ret
mov
ja
mov
push
subl
jge
mov
jg
mov
outsb
and
and
das
pop
std
mov
aam
shlb
dec
sarl
es
push
insl
lea
or
jecxz
cmpsl
mov
push
push
icebp
cmpsb
push
pop
cld
push
add
xchg
lcall
push
pop
dec
mov
shlb
ljmp
xchg
jecxz
std
or
fisttpll
xor
popa
sahf
mov
ljmp
imulb
inc
xchg
out
mov
dec
mov
iret
and
mov
cltd
shl
xor
xchg
pop
xchg
mov
dec
repnz
test
dec
mov
sbb
ljmp
cmp
stos
fisttpll
push
or
roll
push
test
js
xchg
fwait
decl
dec
in
xor
mov
pop
jns
mov
push
push
xor
cwtl
sbb
insl
in
jno
pop
or
stc
push
fwait
cs
dec
dec
or
jne
andb
mov
mov
jns,pn
dec
dec
in
mov
ds
rclb
cmpsl
sub
add
jp
xorb
mov
inc
adc
jle
jbe
in
push
test
push
rcr
xor
xchg
inc
roll
int3
lock
jne
and
mov
pop
mov
mov
add
and
stos
jnp
mov
popf
push
inc
push
lea
dec
popf
out
xor
inc
movsb
pop
orl
inc
push
sbb
bound
push
push
inc
leave
jne
fcmovb
push
lods
xchg
jg
jg
dec
xchg
xchg
push
or
rcrb
jbe
mov
sbb
xor
and
leave
aaa
out
xchg
push
adc
jbe
cmp
test
xchg
sbb
push
enter
mov
pop
stos
xor
ja
cltd
int3
repz
sbb
stos
push
out
jnp
ss
xorl
or
and
cwtl
add
xor
movsb
add
dec
sub
orb
daa
mov
mov
dec
jl
mov
dec
aas
mov
out
push
xlat
movsl
inc
call
cld
lahf
pop
es
test
mov
inc
dec
pop
sub
pop
mov
add
jmp
pop
push
stos
inc
push
add
loope
pop
in
mov
out
cwtl
outsb
jmp
popa
adc
arpl
sub
adcb
or
pop
adc
xor
test
int
repnz
sub
stc
adc
lcall
cmp
fnstcw
lock
das
or
out
sbbb
and
add
lfs
faddl
cmp
cs
testl
sub
mov
leave
or
into
mov
popf
push
xor
sub
outsl
mov
jmp
fs
ficoml
pop
cmc
fs
ljmp
and
out
jnp
cli
rol
shlb
push
test
xchg
mov
gs
pop
loopne
daa
sub
rcll
adc
jo
imul
roll
popl
xchg
xchg
outsl
jg
sbb
scas
xor
xlat
inc
cwtl
enter
or
sti
jae
mov
aad
or
mov
dec
out
inc
js
jp
pushf
orb
jge
repz
lcall
mulb
mov
and
pop
into
add
sub
pushf
movsb
in
jmp
xor
add
adc
inc
inc
cli
daa
aas
or
sbb
dec
ret
je
cli
and
imulb
push
rcrb
push
outsb
mov
addl
neg
mov
adc
mov
and
lock
lret
das
cmp
push
mov
mov
mov
ror
and
insl
gs
je
or
push
jmp
cmp
shll
cld
add
call
mov
enter
lea
pop
imul
lock
cmpsb
mov
ret
adc
push
rorb
clc
pushf
xchg
jb
add
ficompl
xchg
dec
stos
out
sbb
dec
xchg
pop
sub
push
push
push
setge
aad
popf
enter
dec
testb
iret
xchg
movsl
cmc
dec
pop
or
or
or
shll
cwtl
pop
scas
insb
aad
int3
adcb
pop
add
sub
call
mov
xor
fistpll
or
sbb
xor
add
dec
mov
gs
mov
or
pop
ja
mov
dec
xor
or
or
mov
dec
xor
sub
adc
push
bound
fdivrs
stos
mov
int
mov
out
stos
imul
std
mov
call
xor
lods
xor
xor
mov
in
sti
and
fists
sub
jmp
inc
add
push
push
fwait
dec
popf
pop
pusha
mov
push
loop
and
push
mov
and
lcall
lret
filds
adc
rcl
adc
in
es
xchg
and
pop
mov
repnz
jae
nop
roll
pop
or
mov
roll
jle
fidivrl
ret
xchg
inc
add
jns
imul
jns
adc
lock
mov
sbb
sbb
std
js
hlt
and
arpl
lds
inc
push
jge
popa
leave
sbb
in
addr16
xor
pushf
or
xchg
add
outsl
sub
fisubrs
pop
dec
and
push
xor
mov
arpl
insb
movsl
aad
out
aam
nop
cmp
push
jae
bound
addr16
enter
daa
mov
cmp
jno
faddl
jl
xchg
inc
dec
scas
inc
cmpb
cltd
cmp
dec
scas
sub
negl
out
mov
je
iret
push
push
jo
inc
fimull
jae
mov
leave
pop
xchg
adc
loope
jg
sub
mov
cmp
pop
cmpsb
outsb
dec
js
adc
les
int3
mov
andb
fiadds
jl
xor
jg
int
pop
fisubrl
dec
test
or
lcall
xor
test
sbb
les
sahf
jle
xor
mov
mov
mov
aad
mov
shlb
fwait
daa
ss
inc
cltd
cmp
jmp
scas
ss
hlt
rcll
mov
add
into
mov
sahf
mov
inc
fs
outsl
orb
stc
hlt
push
mov
adc
lods
fwait
lods
inc
inc
mov
mov
repz
add
imul
call
pop
gs
imull
loope
fwait
pop
loopne
jb
add
adc
outsb
dec
adc
mov
jns
xor
xor
jmp
mov
lret
aaa
shr
xchg
hlt
sti
and
jmp
nop
xchg
pushf
or
inc
mov
push
les
div
fdiv
stos
fcomps
dec
lea
addr16
movl
dec
xlat
adc
cmp
jmp
scas
inc
pop
in
mov
inc
pop
insl
adc
lods
test
inc
test
dec
cmp
xor
movl
sbb
daa
push
cwtl
cmp
mov
jmp
mov
dec
aam
insb
fneni(8087
imul
mov
ds
lock
das
sbb
aad
xor
scas
aas
and
imul
sbb
or
insl
pop
adc
mov
sarb
jo
adc
cld
sub
add
or
and
sub
mov
mov
movsl
rcrb
in
sub
fs
push
stos
ret
mov
jnp
fstpl
mov
xchg
mov
cmp
dec
xchg
dec
popa
hlt
sbbb
scas
push
push
xchg
mov
and
cld
and
outsb
cltd
inc
pop
mov
out
lock
stc
ss
rcrb
test
bound
xchg
xlat
sbb
jmp
cmp
pushf
stos
mov
xchg
and
inc
add
adc
or
out
xchg
xor
cmpsb
lcall
lds
pop
jg
ja
dec
into
dec
and
inc
inc
lahf
mov
das
stc
xor
adc
xchg
jne
test
mov
inc
mov
cli
mov
test
pop
and
inc
or
sub
popf
gs
addr16
xchg
clc
ret
mov
lods
inc
mov
and
jle
in
in
dec
lds
negl
fildll
outsl
xchg
in
lret
or
xchg
pop
andl
push
adc
es
test
rcll
add
ficompl
insb
push
outsl
cmp
loope
scas
js
jne
shll
imul
rcrl
pop
out
pop
aaa
inc
adc
jae
out
inc
pop
test
or
add
roll
or
fisubrl
push
and
movsl
xor
xchg
pop
leave
ficomps
add
lds
into
mov
jp
outsl
push
std
leave
je
lret
hlt
insb
sub
arpl
mov
rorb
shlb
pushf
aaa
icebp
xchg
lret
or
int
movsl
cmc
enter
in
js
xor
lods
iret
std
xor
out
xchg
scas
pop
and
and
in
cmp
lock
push
ret
cmpsb
inc
mov
mov
filds
inc
enter
testl
pop
mov
push
fdivrs
jbe
out
xchg
jo
push
ret
test
push
shll
imul
pop
scas
inc
test
xchg
sbb
roll
scas
push
mul
loope
lret
xchg
pop
adc
sbb
lods
cmpb
pusha
add
cmp
push
sti
lret
repz
sub
movsb
mov
xchg
lcall
das
inc
sub
mov
xor
fwait
mov
jg
mov
mov
orl
mov
xlat
sbbl
cmp
movsb
cli
es
les
ljmp
sbb
mov
xor
cwtl
hlt
loop
out
stc
stos
scas
pop
fs
xchg
ljmp
push
lods
sub
out
jae
cli
ss
and
in
add
pop
fsubrs
fstpl
mov
cli
mov
jl
imul
loopne
xlat
lods
bound
out
adc
xchg
xor
lods
cmc
pushf
cs
and
aas
xlat
shlb
sub
or
or
sub
shr
insb
cs
lods
aad
mov
dec
mov
xor
or
jmp
pop
dec
or
cmpsl
push
fcmovnb
aam
in
pop
xor
shrl
xchg
pop
test
rcrl
sub
push
and
inc
js
xchg
aas
dec
outsb
fbstp
and
dec
mov
sbb
mov
out
dec
divb
loopne
cwtl
repz
mov
out
mov
adc
jo
rorl
stc
fisttpl
xchg
mov
mov
popf
das
imul
jo
enter
stc
sub
and
imul
lds
jno
dec
mov
pop
cwtl
mov
sub
cld
push
das
cld
lret
aam
mov
jb
mov
cmpsl
and
shrb
out
mov
ret
xor
push
push
inc
loope
ffree
pop
jl
adc
outsb
xchg
lock
ljmp
stos
lods
les
mov
loop
test
push
pop
sub
cvtdq2ps
add
push
lret
adc
test
pop
cwtl
mov
arpl
dec
daa
sbb
test
dec
js
and
sbb
push
dec
pop
add
cs
push
repz
add
pop
shll
xor
adc
cltd
popa
mov
lcall
sbbb
dec
pop
popf
mov
or
aaa
jno
mov
fsubs
mov
pushf
jnp
into
loope
bound
push
sub
xchg
sbb
fidivrs
pushf
xchg
mov
cwtl
popa
inc
addr16
arpl
push
iret
push
mov
nop
cmp
jle
or
in
add
pusha
dec
xchg
fisttps
popf
sub
rcrl
mov
xor
mov
xlat
sub
popf
lods
fsubs
push
pusha
sub
cmp
ret
mov
cmpsl
mov
sbb
std
adc
enter
test
ret
aad
es
jae
andb
pop
out
or
jg
mov
fcmovu
fdivrp
xchg
test
sbbb
adc
fidivrs
pop
sub
test
push
mov
ret
leave
jmp
hlt
mov
xchg
arpl
lret
mov
jge
rolb
push
fcoms
mov
add
xor
adc
int3
mov
lcall
pop
test
nop
fisubl
mov
dec
jo
test
out
mov
cmp
scas
movsb
cmpsb
imul
push
adc
cmpsb
lds
in
xor
cmovs
sahf
inc
hlt
cmp
jl
int
dec
mov
ds
imul
mov
lahf
mov
jg
xchg
sbb
test
jmp
inc
je
cmpsl
aas
movsb
pop
daa
jle
mov
es
adc
push
mov
push
cmp
sub
testb
xchg
outsb
adc
dec
adc
hlt
test
inc
or
mov
adc
add
dec
dec
xor
cmp
int
push
dec
sub
pop
jmp
lcall
scas
test
sub
cmpsb
and
in
fidivrs
jg
aaa
pop
mov
cs
lahf
mov
divb
ss
ret
adc
pop
pop
in
jg
and
nop
bound
mov
fwait
int3
into
push
int3
or
clc
push
iret
outsl
lods
call
stc
bound
loopne
inc
mov
mov
mov
mov
cli
imul
mov
sbb
or
mov
add
movsb
loopne
xor
sbb
stos
lcall
cmp
out
add
out
xchg
mov
pop
cli
insb
xlat
incl
sub
in
mov
je
dec
sti
adcb
lea
push
nop
dec
mov
add
inc
mov
adc
inc
movsb
add
mov
repz
xchg
fsubp
lea
call
add
imul
push
iret
jmp
add
pop
or
ret
xchg
pop
aas
ljmp
dec
daa
loope
je
fwait
sub
idivb
xor
dec
jge
cwtl
scas
out
jno
sub
mov
dec
fstpt
pop
mov
popf
mov
das
add
mov
mov
test
sarl
push
jb
sub
cmpsl
popf
adcb
xchg
repz
add
cli
cld
andb
lret
inc
mov
and
pop
dec
pop
push
adc
sub
int3
enter
ret
mov
mov
pop
clc
dec
pop
cmp
xor
sbb
or
out
inc
pop
inc
xchg
das
sub
loop
pusha
mov
add
imul
scas
imul
mov
xor
dec
mov
jae
jnp
jnp
inc
push
ljmp
test
test
xchg
shlb
add
jp
out
pushl
in
or
in
mov
imul
sbbl
pushf
ja
bsr
adc
out
add
jl
dec
ficompl
jne
push
cmc
mov
push
add
lods
notl
bound
cmp
jns
movsb
sbb
outsb
fadd
xchg
insb
cmpsb
cld
out
es
or
xor
pop
push
mov
imul
jle
and
jle
mov
fildll
movsb
jbe
sti
scas
dec
xchg
mov
or
popf
shr
adc
lahf
jge
stos
mov
and
lea
jnp
xor
scas
ds
and
popa
pushf
rcll
push
ror
cmp
cmp
cmp
sub
test
pop
mov
pusha
mov
lock
lds
jge
fistl
pop
sbb
and
pop
mov
outsl
shlb
push
repnz
pop
fwait
hlt
add
jns
lcall
sbb
xorb
popf
cmp
daa
pop
cwtl
add
outsb
cmc
int3
lahf
xchg
pop
lahf
jb
jae
outsl
xor
pushf
repz
lds
and
popa
cltd
movsb
xor
push
pusha
into
mov
dec
xchg
pop
in
sbb
inc
enter
daa
popf
and
je
out
pop
sbb
sbb
mov
jnp,pt
xchg
lods
sbb
lahf
aad
cmp
scas
push
test
mov
jecxz
xchg
jno
std
repnz
mov
insl
mov
lods
sub
fsub
cmp
inc
das
outsb
ja
in
rcll
ror
mov
pushf
sbb
xor
dec
push
aaa
add
mov
xor
outsl
dec
push
add
test
mov
sarl
insl
scas
push
xchg
cld
adc
test
sahf
cmp
test
dec
jns
add
fdivl
loopne
mov
jo
or
cmp
sbb
idivl
rcll
rcrl
mov
sbb
ss
dec
pop
test
jecxz
out
push
adcb
les
imul
pop
adc
pop
lods
mulb
mov
jl
jmp
xor
scas
cmpb
push
aaa
add
and
subb
mov
out
pop
cmp
mov
adc
jle
add
mov
xchg
lcall
sub
in
xchg
fildll
in
fistps
cmp
lock
iret
aad
adc
fwait
dec
popa
pop
lcall
testl
loope
sub
mov
xor
movl
aad
push
and
jmp
push
addr16
mov
lea
sbb
scas
and
mov
jb
inc
dec
sahf
adc
pop
jecxz
out
idivb
std
sub
dec
jno
mov
fisttpll
sahf
add
xchg
mov
scas
mov
mov
jecxz
lock
jb
das
mov
mov
out
lret
sbb
ja
test
or
pop
insl
adc
mov
scas
fsubs
or
xchg
cld
lods
out
lret
mov
and
in
xor
in
stos
rcl
mov
aam
mov
ret
dec
sbb
or
adc
inc
xchg
outsb
xchg
add
cmpsb
cmp
popa
cmp
mov
test
insb
xchg
jbe
sub
mov
or
jmp
sbb
inc
data16
mov
xor
neg
faddl
clc
cmpsl
pop
sarl
push
stos
mov
scas
push
cmp
mov
add
pusha
inc
xor
mov
pushf
cmp
daa
mov
lods
sahf
dec
mov
clc
mov
std
inc
sub
fs
or
cs
fwait
sbb
xchg
dec
mov
je
mov
sub
mov
bound
xchg
shl
mov
xchg
mov
loope
sub
mov
and
cltd
stos
mov
jge
mov
outsb
sub
xor
xchg
repz
sbb
fdiv
xchg
data16
jmp
insb
in
stos
adcl
leave
push
pop
mov
cli
loopne
mov
ficoms
stos
and
mov
xchg
xor
jnp
jle
scas
mov
cmpsl
cmp
xchg
hlt
xor
adc
cmc
ret
outsl
pop
xchg
pop
ds
xor
js
arpl
adc
outsl
stos
fldt
pop
or
enter
push
xlat
xchg
xor
sbb
pop
aaa
imul
add
adc
mov
in
repnz
ds
dec
inc
sbb
lea
jge
rcll
sbb
adc
sbb
int3
mov
inc
pop
add
int3
pop
xor
divl
scas
movsb
push
mov
movsb
mov
cwtl
jg
lret
sub
in
add
enter
daa
pushf
mov
cmp
ja
jl
pop
xor
aad
ds
or
scas
bound
inc
cwtl
push
lahf
hlt
jge
push
cmp
test
jg
jg
push
adc
sub
mov
sub
push
sub
loope
test
sub
lea
xchg
rolb
add
mov
stos
fildll
xor
inc
sbb
insb
test
shll
int
xchg
sub
xchg
pop
add
sub
call
xchg
xorb
sahf
or
out
xor
out
jg
lcall
push
cli
or
aas
repz
push
jmp
idiv
cmp
lret
mov
scas
fwait
push
mov
sub
xor
into
xchg
xor
fistpll
loop
inc
and
rorb
sbb
jecxz
sahf
data16
jo
fnsave
mov
cli
iret
mov
add
outsb
aaa
rorl
cmpsb
ds
rcrb
loopne
mov
mov
imul
outsl
testb
xchg
adcl
aad
jl
jge
or
fucomp
cmp
in
dec
inc
xor
fisubrs
aad
push
pop
nop
add
mov
rcl
inc
xlat
and
pop
les
subb
in
pop
lea
ds
call
add
xchg
pop
sahf
push
aam
fidivs
pushf
sti
ret
pop
push
dec
rolb
in
leave
add
jb
cmp
dec
adc
inc
jecxz
xchg
idiv
mov
lcall
mov
cld
js
adc
xorl
jb
mov
xchg
mov
lea
lock
incb
das
xchg
aaa
mov
push
test
add
sub
push
pop
pop
lea
xor
sub
cmpsl
fwait
push
aaa
mov
mov
cmp
fadds
ss
jmp
dec
mov
add
push
sub
les
aam
cmp
ret
fisttpll
fnsave
iret
pop
clc
ret
lret
inc
xchg
lods
dec
sbb
sbb
in
lods
add
or
or
xor
vmread
movsb
add
xor
sbb
mov
mov
xchg
sub
pop
mov
inc
dec
cmp
stos
movsb
rcl
adc
pop
push
int3
shrb
fsub
push
add
mov
inc
out
xchg
in
xchg
or
mov
cmp
out
into
push
mov
mov
in
pop
jecxz
dec
lock
or
call
or
cmp
aaa
xorb
das
dec
bound
insl
jns
sub
or
out
adc
push
hlt
js
mov
bound
sti
adc
mov
mov
fldl
jle
xor
mov
pusha
sbb
sub
jmp
or
push
and
js
and
or
mov
stos
xchg
mov
insl
insb
add
adc
nop
mov
push
out
push
adc
gs
outsl
mov
ret
pop
lret
cmpsl
aam
ds
cltd
jae
in
inc
lds
push
ret
fs
idivl
jg
push
fildll
cltd
sub
movsb
dec
push
lds
mov
repnz
or
cwtl
dec
popa
arpl
cmp
mov
aaa
in
mov
or
js
int3
jne
iret
pop
xor
jecxz
cmp
xorl
imul
jp
xchg
movsb
inc
push
lret
cmpsb
add
in
ljmp
daa
fwait
jnp
cmp
aad
jno
mov
repnz
fldenv
roll
outsb
push
negb
push
jb
test
dec
pushf
inc
inc
movsl
fisubl
pop
dec
xor
mov
int
pushw
dec
mov
pop
pop
pop
sub
pop
cmp
cmp
lret
xor
test
xchg
cmpsl
mov
pop
sbb
jp
xor
jg
int
cs
sub
cmp
lcall
push
inc
call
sahf
lods
inc
roll
cmp
push
xchg
mov
mov
xchg
mov
dec
and
shl
cmp
nop
add
push
lret
jnp
inc
sti
and
rcl
adc
xor
jno
xor
movsl
movsl
outsl
js
and
stc
xchg
fs
cld
mov
data16
mov
lods
les
lret
xor
cli
add
and
jb
test
or
dec
push
gs
out
lods
loopne
divb
adc
cltd
ja
in
pop
adc
mov
add
scas
dec
xchg
add
sbb
adc
mov
sub
in
roll
in
mov
dec
sti
lea
mov
aad
hlt
mov
fmull
mov
ljmp
les
popf
repz
mov
lea
inc
ja
addb
xor
ss
jmp
cmp
mov
inc
in
inc
aas
cmp
jb
test
je
xor
jecxz
push
testb
std
inc
stos
push
cwtl
filds
mov
ja
or
pop
fcmovnu
lret
sahf
pop
mov
mov
int
lcall
mov
mov
lea
lcall
aam
dec
movsl
adc
mov
xchg
test
nop
xchg
int
push
add
mov
and
aas
shlb
cmp
ret
mov
aam
adc
ret
insb
stc
scas
push
push
add
pop
aam
clc
incb
test
mov
sub
mov
outsb
imul
push
jae
loope
xlat
inc
aad
pavgw
cltd
push
dec
inc
test
inc
btr
mov
dec
ret
lock
in
mov
push
sbb
mov
push
sbbb
stos
mov
jg
sbb
jnp
es
leave
mov
xor
mov
scas
xor
mov
pop
mov
jae
mov
outsb
int
ja
adc
dec
jecxz
flds
fsubr
or
jbe
fwait
ja
sub
cwtl
xorl
sbb
dec
push
mulb
push
dec
jns
out
in
push
out
out
mov
sub
test
jmp
jp
xor
mov
adc
mov
dec
daa
enter
mov
ret
fisttps
leave
repz
or
mov
loopne
jl
add
xorl
popf
push
jecxz
mov
dec
jns
mov
pop
xchg
dec
stos
or
xor
imul
jnp
test
ss
into
jne
ret
in
add
dec
jae
imull
imul
inc
inc
test
loopne
movsb
sbb
aas
sub
inc
push
cmc
fiadds
xchg
lds
and
icebp
jmp
mov
push
mov
leave
jns
hlt
jecxz
jmp
jbe
movsb
jge
gs
gs
lods
add
or
out
add
adc
push
sbb
test
lods
mov
scas
bound
ja
xor
scas
push
dec
stc
aaa
cmpsb
shll
cltd
enter
daa
lcall
jno
sbb
lods
dec
dec
mov
ds
movsl
jne
xlat
and
lahf
xor
dec
push
loope
or
adc
jmp
jmp
jb
mov
pushf
xlat
pop
pop
or
jb
and
loope
pop
les
je
cmp
or
outsb
mov
outsb
cmpsl
shlb
pop
popl
out
sbbb
fistps
lock
xor
arpl
or
dec
int
stos
mov
sub
fildl
add
lods
push
xchg
lods
adc
sub
xor
push
mov
test
cmpsl
in
sbbb
jg
or
and
mov
mov
push
ss
cmp
fmuls
jg
jnp
or
pop
loop
rcr
test
add
into
hlt
inc
mov
cmp
imul
push
fldcw
and
stc
ds
stos
fs
cmc
adc
adc
add
adc
xor
mov
cmp
jge
or
sbb
xchg
in
loopne
pop
cmp
daa
int3
adc
push
mov
adc
dec
dec
add
mov
les
fsubrl
data16
sti
mov
sub
mov
shr
and
sub
sbb
push
aad
stc
fsts
jle
loopne
std
and
les
inc
repz
jno
ljmp
call
add
pop
add
xlat
adc
daa
jmp
f2xm1
pop
cltd
mov
inc
cmpb
inc
or
xor
cmp
dec
add
pushl
std
jecxz
xchg
testb
cwtl
lcall
mov
push
sbb
dec
push
add
mov
or
mov
mov
mov
and
mov
shl
mov
push
lds
lret
cmpsl
cltd
ss
mov
pop
sbb
ds
dec
fdivrs
stc
lcall
inc
das
and
dec
int
sub
inc
pop
ret
sti
test
data16
rcr
xchg
sub
ljmp
xchg
lods
fcmovnbe
push
mov
rcrl
push
dec
adc
add
enter
xor
test
dec
sbb
or
rorb
scas
test
xchg
xchg
dec
sbb
mov
ds
pop
icebp
ljmp
and
aas
add
out
test
xor
push
mov
mov
into
pop
mov
mov
mov
sub
nop
ja
dec
dec
cld
pop
inc
sub
movsb
or
fdivs
fwait
cmpsb
imul
jne
jmp
mov
sub
bound
jns
aas
push
in
add
push
int3
xor
jg
shlb
lahf
test
dec
nop
in
fsts
lret
int3
gs
pavgw
lcall
fildll
movl
xlat
roll
cmpl
sub
mov
fwait
testb
fs
pop
jnp
ljmp
lret
push
jge
cmp
and
cmp
ret
int3
pop
cmp
jg
push
mov
jae
jge
inc
insb
popf
mov
movsb
mov
push
shrl
ficompl
fsts
cmpsl
icebp
int
xor
int
ljmp
rorb
mov
popa
jb
leave
lea
arpl
xor
jge
add
aaa
imul
or
mov
inc
int3
dec
ljmp
lcall
outsb
sub
jo
jne
scas
inc
shrl
jno
inc
cmp
lahf
pop
movsb
pop
or
cmpsb
push
lods
cmpsl
in
mov
mov
pop
cmp
es
cmpsb
dec
jl
loop
dec
mov
adc
pop
mov
lock
sbbl
scas
outsb
push
mov
cmpsl
test
loopne
push
inc
ret
cmp
jbe
mov
js
insl
pop
pop
dec
fs
cmp
inc
sub
cmpsb
mov
outsb
add
mov
cmp
mov
gs
daa
fs
add
xchg
xor
shl
push
or
or
mov
cmpl
sub
xor
insb
sub
push
sahf
repz
sbb
jae
xchg
jg
int
mov
sbb
mov
jle
and
inc
and
cmp
push
add
lret
push
shll
es
sub
mov
mov
cmc
call
push
outsl
cltd
dec
iret
loop
jnp
stc
cmc
sub
fs
test
push
xchg
jecxz
lods
xchg
ret
xor
js
xor
push
push
sbb
pop
lea
xrelease
scas
pop
fisubs
inc
dec
loopne
fadd
pop
mov
inc
mov
xor
xor
fwait
xchg
xchg
out
sbb
xchg
and
cmp
sub
aaa
fsubl
mov
dec
sti
jmp
and
aad
bound
nop
xchg
inc
jbe
frstor
add
fsts
les
inc
repz
xor
call
or
pop
mov
rcll
sub
pushf
cld
cltd
cmc
jmp
cmp
pop
cmp
daa
inc
pop
popa
and
sbb
mov
add
and
dec
jp
ljmp
xchg
test
mov
push
int3
pop
mov
mov
mov
loopne
cmp
lds
mov
aas
stos
mov
loop
lock
inc
das
xor
mov
mov
je
es
xor
insl
lods
pop
mov
fwait
lcall
aad
lret
icebp
xor
dec
cli
lret
outsb
roll
dec
lds
gs
ficompl
popa
jo
rcrb
xchg
aam
lds
ret
mov
jmp
lods
mov
xchg
push
or
jb
lret
popa
xchg
orb
ja
pop
out
xor
sub
sub
setne
mov
cltd
ret
test
and
xchg
mov
test
call
adc
sarb
sbb
pop
pop
ret
inc
cwtl
and
add
add
mov
xor
lahf
pop
xor
inc
mov
in
inc
mov
pop
cmp
in
inc
ja
incb
leave
clc
inc
inc
shlb
or
push
ja
aad
inc
dec
dec
xor
mov
inc
icebp
out
or
push
jns
mov
out
xchg
imull
push
pop
sub
jp
shlb
aaa
xor
sahf
dec
mov
xor
mov
sub
and
in
shl
mov
cmpl
mov
movsb
jmp
cwtl
push
push
orl
push
imul
cmp
fcmovu
in
out
xchg
movsl
and
mov
inc
jle
jnp
pop
cmp
les
iret
mov
jno
cltd
xchg
inc
pop
push
jae
scas
adc
mov
or
popa
add
inc
inc
push
or
adc
jne
mov
je
and
movsb
fimuls
sbb
shlb
xchg
mov
mov
jle
mov
popf
hlt
jns
andl
fdivrl
arpl
or
sub
mov
add
xchg
int3
ss
dec
pop
shll
loop
pop
xor
arpl
scas
and
jmp
cmp
or
jmp
popa
cmpsb
xlat
adc
in
lahf
outsl
sbb
cwtl
jns
daa
cwtl
pop
js
outsl
outsb
xlat
jno
push
jns
out
rorb
cmpsl
iret
sub
xor
mov
lcall
xchg
ljmp
rorb
cmp
ljmp
in
and
out
mul
mov
stos
jns
dec
arpl
adc
push
cmp
les
cmpb
or
pop
inc
add
pushf
fs
adc
mov
les
sub
mov
pop
add
lcall
add
fdivrl
sub
xchg
sahf
xchg
outsb
jmp
dec
sub
jg
xchg
shlb
xor
and
and
pop
leave
xchg
cmp
rcr
idiv
or
inc
ficompl
mov
sbb
in
lret
mov
mov
xor
out
ret
ja
loop
cmc
stc
lods
std
inc
fs
notl
pop
sub
data16
pop
lods
jns
popf
out
adc
arpl
not
ret
adc
or
cwtl
shlb
movsl
incl
mov
sub
adc
jae
jle
add
lret
sub
lods
cmp
sub
sub
enter
xor
mov
fildll
adc
out
dec
nop
insl
cmp
dec
cmp
adc
add
repz
and
lock
push
mov
pushf
pop
push
fcoml
cmp
and
xchg
pop
pop
pop
fucomip
adc
lods
dec
inc
xor
cmp
jb
das
decl
jge
je
mov
pusha
testb
cli
std
frstor
mov
dec
dec
mov
and
adcl
mov
test
adc
aaa
das
adc
inc
mov
cli
fwait
gs
mov
rcll
push
pop
insl
xchg
stc
stos
dec
xchg
cmp
dec
mov
or
sub
test
imul
mov
lds
inc
pop
xorb
sub
pushf
aas
ret
sbb
adc
fwait
pop
add
sarl
mov
xchg
test
mov
popa
lods
pop
lea
xor
out
xchg
pop
aam
fnstenv
fisttpl
hlt
and
dec
cs
cltd
stc
out
or
nop
int
adc
dec
dec
clc
ljmp
aas
pop
xchg
sbb
ret
loope
pop
mov
xchg
stos
xor
pop
add
sbb
cltd
ljmp
and
shrl
or
xchg
adc
cmpl
mov
pop
jbe
add
push
ja
mov
mov
or
sbb
add
adc
sub
adc
sub
inc
and
out
out
dec
bound
in
in
out
xchg
inc
cli
inc
out
push
aaa
sub
jne
xchg
notl
jp
popa
mov
cld
xchg
mov
cltd
arpl
jle
mov
loope
xchg
xchg
test
loope
lds
flds
sub
xchg
popf
mov
dec
ds
sbb
stos
bound
push
insb
lods
bound
scas
nop
xor
push
or
iret
jmp
xor
lods
and
pop
cmpsl
xor
inc
push
pop
jae
and
inc
jb
push
or
gs
mov
outsb
fistl
std
ror
imul
push
loopne
inc
xchg
mov
pop
mov
sub
mov
arpl
jg
jbe
cli
add
sbb
mov
or
sub
add
data16
and
pop
lock
pop
push
xor
mov
sub
and
xchg
imul
icebp
in
xchg
mov
daa
xchg
push
dec
cmp
and
jl
mov
dec
xchg
inc
push
ds
enter
cmp
lahf
cmp
pop
imul
push
jbe
stos
inc
loope
inc
cld
dec
icebp
pop
out
aad
dec
push
mov
push
jecxz
loope
xor
cmp
mov
outsb
leave
push
pusha
shl
ret
push
mov
sbb
cli
xchg
xor
pushf
mov
adc
int
jl
sub
push
mov
push
fwait
mov
mov
sub
sahf
cmp
xchg
subb
cmp
stos
push
xchg
sti
inc
lret
add
cmp
jl
and
mov
fs
mov
or
sbb
jp
popf
add
cmc
lea
adc
jne
fsubrs
cmpsl
fucom
dec
fs
push
adc
adc
lods
pusha
jmp
mov
push
and
jbe
mov
xor
lods
dec
cmp
popf
pop
or
jecxz
cmc
rcll
and
loopne
adc
pop
divl
dec
imul
adc
add
xor
sbb
cld
or
xlat
mov
inc
dec
mov
popa
add
sti
dec
cltd
inc
cs
mov
jae
dec
dec
sub
fwait
mov
test
ret
les
and
pop
mov
out
and
pop
clc
jle
enter
pop
adc
dec
pop
jmp
inc
cs
xor
inc
adc
std
push
jb
outsl
clc
dec
push
cmp
jecxz
mov
movsl
std
fnsave
cmp
mov
sbb
dec
pop
ret
cmp
xchg
in
mov
inc
mov
mov
cmp
out
add
pusha
sahf
mov
mov
mov
es
popa
insl
jp
cltd
dec
xchg
je
cmpsl
xchg
out
mov
jecxz
test
lret
dec
adc
push
arpl
pop
lahf
push
rol
loop
sub
mov
push
pop
pop
xlat
rorb
clc
ljmp
ljmp
add
call
es
and
push
fisttps
dec
add
cld
cltd
xor
xor
cmp
adc
mov
push
sub
mov
and
rol
push
sbb
or
fiaddl
aaa
add
decl
xor
mov
or
inc
xor
push
pushf
mov
ds
mov
pop
inc
shlb
cli
adc
or
inc
out
push
sub
jb
insb
fwait
xor
pop
dec
sets
jne
loope
mov
pop
mov
movb
bound
lods
sbb
cmp
shl
fmul
shrb
adc
addr16
addr16
fdivs
mov
or
jle
sub
scas
mov
xchg
mov
pop
test
jmp
jg,pn
subl
out
xchg
loopne
in
mov
sbb
push
pop
cmp
stos
aad
in
and
sbb
jnp
fs
scas
repz
push
pop
push
adc
cmpsl
mov
out
imul
rorb
xchg
push
inc
jne
fmuls
push
dec
pop
inc
ds
pop
fidivl
cmp
test
imul
or
rcll
pop
jns
rcrb
mov
pop
loop
leave
mov
pop
bound
adc
loopne
mov
mov
aaa
test
leave
or
stc
jae
hlt
add
int3
or
cvtdq2ps
push
test
addr16
sbb
mov
sub
cmp
add
mov
jnp
fldl
in
insl
insl
jnp
xchg
fadd
cmp
add
jno
sbb
jl
fistps
dec
add
cwtl
jo,pt
pop
movsl
xchg
out
and
and
lahf
scas
add
push
sub
inc
jno
inc
cld
mov
lret
cltd
ret
lea
