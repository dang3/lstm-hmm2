and
movsb
pusha
inc
add
aas
xor
hlt
lock
mov
mov
push
cmpl
sbb
mov
jg
inc
and
push
push
or
add
add
das
in
enter
call
orl
fcom
orl
ror
enter
enter
mov
mov
lods
nop
inc
dec
push
adc
adc
push
sbb
add
sbb
sbb
mov
fs
inc
mov
jl
je
inc
push
sbb
push
fs
pop
push
sbb
push
push
dec
sbb
dec
inc
inc
fs
inc
push
cmp
xor
inc
push
sbb
sub
mov
mov
push
push
scas
pushf
pop
ret
lea
mov
mov
mov
lcall
jle
repnz
mov
mov
ret
nop
out
lock
mov
mov
ljmp
or
stc
hlt
add
test
adc
inc
repnz
sbb
rorb
cmp
adc
mov
sbb
add
rorb
cmp
or
jns
or
clc
mov
and
xor
ret
mov
fisttpl
mov
and
xor
aas
icebp
sub
pop
lock
icebp
add
es
mov
fidivrs
lods
cmp
clc
adc
add
out
icebp
fcmovnu
pop
repz
jne
sbb
mov
pop
ret
stos
ret
pop
out
xchg
clc
test
add
or
cmp
or
pop
pop
daa
in
mov
fcmovne
jge
jnp
cld
add
or
addl
dec
fcomps
push
lea
lea
jb
rcrb
cmpb
fistl
push
lock
jmp
or
into
and
roll
or
addr16
dec
and
cmp
je
inc
mov
outsl
ljmp
or
xchg
push
and
dec
inc
inc
dec
dec
inc
cmp
daa
dec
mov
mov
and
je
dec
mov
mov
inc
dec
xchg
lock
inc
inc
inc
pop
pop
dec
xchg
out
outsl
and
push
mov
insb
or
and
push
call
inc
dec
dec
lea
adc
clc
inc
mov
scas
out
inc
dec
dec
movl
inc
mov
push
lock
in
imul
call
hlt
push
idiv
neg
fstl
jbe
inc
mov
inc
dec
inc
dec
stos
test
incl
cmp
ja
mov
pop
lret
insl
add
cs
sbb
sbb
dec
mov
mov
dec
hlt
mov
dec
mov
sbb
lea
pop
fxch
in
dec
inc
dec
cwtl
in
jns
jl
xor
call
cld
jns
dec
loope
cmp
roll
mov
jg
sti
leave
inc
inc
inc
inc
mov
call
pop
repnz
jbe
lea
inc
lea
sti
mov
cltd
clc
push
lea
mov
mov
jae
push
push
jp
mov
mov
mov
clc
add
or
mov
imull
lcall
mov
cmp
js
mov
sbb
mov
lods
push
jecxz
lea
add
mov
mov
insl
clc
lcall
jns
inc
mov
push
rorl
sar
sub
test
aas
sub
jg
jecxz
inc
adc
xchg
not
repz
sbb
or
call
sub
scas
aam
aaa
cmp
and
mov
out
loope
xchg
loopne
sub
lock
js
in
lock
and
dec
adc
cld
lods
std
ret
jbe
push
push
std
sub
cmc
inc
aaa
mov
das
and
lds
inc
inc
inc
int
add
jge
jg
push
pushf
cmp
jno
mov
sub
pop
ret
mov
adc
mov
and
dec
fwait
jnp
faddl
push
lret
orl
ret
outsl
scas
lock
pop
adc
call
jnp
arpl
lahf
je
addr16
sbb
cmp
sbb
movsb
mov
lea
aaa
inc
dec
mov
push
inc
pop
pop
mov
insb
mov
push
dec
push
outsl
lea
dec
xchg
out
cs
jb
enter
sbb
jne
mov
mov
push
idiv
jg
in
les
les
pop
es
cmp
jo
scas
jecxz
xorb
paddsb
pop
imul
jno
pop
inc
outsl
clc
add
mov
loope
sub
mov
aaa
or
xchg
fiadds
xchg
or
mov
cmp
xchg
inc
insl
cmp
add
das
lock
outsl
mov
or
in
or
orb
mov
mov
divl
decb
and
out
dec
mov
xchg
push
lea
cmp
int
mov
xchg
inc
rol
pop
push
scas
add
xchg
dec
out
addr16
inc
shl
ret
sarl
adc
in
sub
push
rolb
adc
xor
xor
push
inc
dec
inc
pop
add
inc
ljmp
jns
lock
repz
fdivrs
fidivs
mov
dec
decl
ljmp
mov
das
pusha
mov
mov
push
jecxz
push
mov
inc
xor
rcrb
ret
hlt
mov
mov
dec
mov
mov
cmp
nop
mov
mov
and
sub
rcl
lods
push
mov
je
arpl
cwtl
jae
or
test
insb
enter
or
mov
xlat
xchg
push
add
push
enter
nop
sub
dec
mov
add
sbb
xchg
mov
outsl
test
pop
bound
test
data16
ljmp
push
and
in
or
in
sbb
mov
sbb
clc
test
add
inc
out
jo
je
mov
popaw
add
push
mov
mov
insb
stos
or
nop
add
cmp
shlb
or
mov
fdivrl
in
pop
out
pusha
xor
inc
fnsave
popa
cmp
jecxz
sbb
setae
mov
inc
mov
mov
xor
adc
imul
and
and
push
nop
xchg
pop
aas
xchg
cmpsb
pop
push
mov
add
testl
mov
push
mov
movsb
fstps
jns
fisubrs
and
std
xchg
add
das
lcall
popa
movsb
jo
inc
inc
mov
subb
pushf
xchg
sbb
xchg
add
adc
das
rcrb
add
mov
jecxz
cmp
int
add
add
push
xor
dec
aaa
shlb
sub
add
stos
jae
jbe
push
sub
repnz
leave
stos
in
adc
imul
sbb
or
cmp
sbb
and
add
mov
out
test
sbb
adc
sbb
popf
cmpsb
sbb
or
jae
jb
mov
sbb
add
std
lret
xchg
outsb
movsb
flds
or
clc
mov
hlt
lea
dec
into
push
cld
add
inc
nop
push
and
add
jb
push
xor
sub
cmc
and
add
scas
xchg
pop
adc
loopne
test
fcoml
pop
jb
and
pop
movsb
arpl
nop
leave
fdivs
data16
ds
xor
enter
rcl
cmp
jae
aam
fcomps
inc
jl
in
dec
cmc
jae
mov
inc
add
inc
shlb
leave
sbb
aad
dec
ret
dec
aaa
rorb
mov
fxch
mov
dec
in
pop
sbb
inc
inc
cmp
aam
mov
and
inc
into
mov
push
mov
xchg
sbb
test
dec
test
sbb
cmp
xchg
or
xor
sbb
cmc
inc
and
sbb
mov
in
mov
push
or
sbb
andb
dec
popf
xchg
das
mov
add
mov
loopne
lahf
cwtl
xchg
sub
push
xchg
push
cltd
pushf
dec
pop
and
mov
pop
das
push
addr16
and
scas
jb
and
decb
addb
jb
aam
lcall
jo
pop
cmpsl
imul
icebp
cmp
sub
sub
and
pushl
fs
test
std
divb
andl
bnd
xor
and
xchg
jmp
mov
cmp
pop
fs
rorb
fstl
add
pop
and
incb
add
mov
test
ret
movsb
cltd
push
cmp
adc
repnz
xchg
push
and
or
enter
roll
mov
daa
pop
inc
xor
enter
and
dec
aaa
shlb
or
mov
xor
xor
mov
jmp
cmp
mov
cmp
and
push
add
jmp
sbb
movb
mov
inc
pusha
jae
or
add
add
add
lahf
pop
shll
adc
xor
out
sarl
sub
jmp
fdivl
add
das
ss
add
pop
xor
mov
sbb
add
xor
xor
xor
cmp
or
ss
out
insl
out
xor
jae
xor
outsl
sti
mov
cmp
cmp
and
xchg
xor
xor
xor
lcall
sbb
mov
xor
xor
arpl
lods
xor
jnp
jge
cmp
sub
cltd
mov
add
add
loope
fidivrs
pop
or
mov
scas
adc
mov
mov
fldt
push
cmp
add
inc
imul
adc
xor
xor
xlat
pop
imul
and
sbb
inc
xor
xor
fnstenv
xor
dec
dec
xor
sub
jg
cmp
and
aaa
jmp
cmpsl
xchg
les
lsl
jecxz
cwtl
jmp
jecxz
shlb
insb
or
pop
push
push
mov
call
push
cmp
daa
mov
xor
pusha
xor
xor
out
push
imul
pop
pusha
outsl
in
cmp
fnstsw
push
arpl
adc
test
mov
ja
jmp
fs
push
push
and
mov
sub
xor
pusha
nop
push
pop
pusha
push
adc
mov
jb
loope
lahf
outsl
outsl
xlat
mov
mov
out
mov
jo
sub
lahf
aaa
lahf
sub
bound
pop
ja
push
sbb
adc
xchg
test
test
pop
ja
in
jg
fs
loope
cwtl
pusha
bound
inc
adc
add
mov
adc
jecxz
mov
add
nop
fucomp
mov
mov
jo
dec
sub
dec
jbe
mov
mov
push
leave
xorb
lods
push
fcomp
xor
pusha
or
fcomp
or
xchg
xorb
adc
adc
or
or
sub
mov
pop
pop
mov
in
or
in
insb
loope
push
push
in
sbb
fs
adc
in
inc
add
mov
popa
pop
daa
fadds
nop
adc
jnp
pop
mov
inc
out
or
lods
mov
sub
aad
and
mov
mov
mov
mov
sub
jns
sub
xor
jl
sahf
popa
pop
insl
bound
inc
repz
mov
adc
mov
jmp
arpl
scas
add
je
nop
jecxz
js
dec
nop
gs
sti
mov
fwait
or
scas
cmp
jne
pusha
xor
mov
push
inc
insb
arpl
dec
pop
orb
into
fdivrl
pop
mov
jo
fnstenv
or
push
mov
idivb
inc
jmp
fistpl
dec
popa
andb
mov
popf
mov
pop
movsb
bound
push
and
sub
fwait
pop
out
mov
into
insb
in
dec
das
mov
ljmp
and
sbb
mov
mov
into
ljmp
cmpsb
loopne
jmp
mov
das
and
lsl
xor
outsl
push
sahf
sub
dec
lahf
cwtl
fmuls
cmpsb
and
js
insb
and
test
test
and
mov
mov
pusha
or
inc
and
jecxz
insb
fcompl
xchg
cmp
inc
or
sub
dec
rcll
jmp
movsb
mov
dec
and
mov
adc
out
ret
ss
push
and
dec
cmpsb
xchg
push
loopne
mov
mov
cmp
and
mov
sub
lret
dec
or
push
nop
pop
data16
ljmp
je
jp
arpl
jo
outsl
push
push
xchg
mov
jecxz
inc
das
add
enter
push
repnz
sbb
xor
jl
push
sub
sahf
xor
xor
subl
jnp
and
cmp
dec
mov
mov
lahf
adc
cwtl
xor
xchg
jg
repz
imul
xor
sbb
cwtl
dec
data16
add
mov
lsl
add
adc
sgdtl
or
adc
adc
and
mov
das
adc
adc
adc
or
jg
incl
adc
movlps
or
pop
das
add
add
or
call
or
or
or
adc
repz
aaa
add
outsl
adc
repnz
es
pusha
xor
sub
add
mov
xchg
xor
cmp
cmc
sub
ds
and
add
mov
pushf
sub
or
jecxz
sub
sbb
in
mov
dec
inc
fsubrs
push
xor
adc
dec
add
add
ret
mov
jge
dec
fsubs
jo
in
adc
push
push
out
push
in
stos
or
dec
push
xchg
mov
adc
inc
shrb
pushl
or
xor
add
mov
jae
das
inc
sub
or
xchg
insb
mov
mov
adc
mov
xchg
adc
jne
bound
lods
and
xor
and
mov
lret
adc
push
fwait
sub
inc
inc
add
enter
add
mov
jge
mov
adc
add
add
mov
in
in
inc
mov
in
in
inc
mov
jecxz
in
push
mov
incb
jmp
add
or
les
in
inc
je
add
inc
xor
push
or
cli
scas
jle
add
mov
cmpsb
enter
cmp
push
outsl
lods
outsb
inc
dec
movzwl
xchg
lock
inc
call
fs
cmp
mov
push
mov
fxtract
sbb
add
and
inc
and
daa
sub
xor
out
xor
loopne
mov
push
movsl
sbb
or
aad
push
dec
test
jl
inc
leave
mov
cld
xor
fs
jbe
andb
je
ucomiss
in
inc
cmp
jae
adc
push
decl
jne
adc
movsb
mov
or
and
add
xchg
int
xor
jae
jl
add
punpckldq
xor
mov
cmpl
mov
or
pushf
add
or
or
xchg
scas
or
sar
cmp
jae
sbb
sub
xchg
cmp
test
fs
push
push
xchg
inc
and
stos
lcall
push
inc
and
fistpll
ret
inc
and
or
cmc
inc
adc
mov
add
mov
sbb
pop
aam
test
mov
inc
scas
fnsave
mov
push
enter
mov
or
inc
adc
loope
add
inc
lea
daa
nop
shrl
add
outsb
add
cs
or
je
std
mov
or
jb
inc
fs
imul
fs
insb
je
jns
insl
jb
fs
jo
jns
ja
outsb
xor
insb
outsl
add
cs
pop
hlt
xor
inc
ja
push
pop
jecxz
inc
mov
pop
pusha
sub
adc
les
out
rol
xor
add
sbb
fnstenv
call
jmp
push
subb
jbe
mov
nop
fmulp
ret
sub
push
mov
jne
jmp
push
hlt
cmpl
sbb
mov
stos
push
push
push
lret
xor
xchg
test
xor
xchg
mov
adc
sbb
pop
sbb
inc
daa
daa
jne
adc
xchg
sbb
mov
push
xor
mov
mov
add
enter
int3
push
out
cld
xlat
mov
mov
add
inc
loope
xchg
jmp
or
or
jmp
xor
fsubrl
inc
pop
sub
sub
sbbb
lcall
ret
sub
faddl
nop
push
fs
xlat
inc
push
or
fsubrl
adc
ret
iret
add
mov
inc
jmp
enter
inc
insb
sub
jb
bound
add
imul
pusha
push
popa
sahf
mov
adc
xchg
or
or
lods
cmp
add
adc
repnz
dec
jo
push
adc
mov
pop
inc
fisttpl
mov
out
mov
aas
cmp
in
push
arpl
mov
dec
sbb
dec
sbb
pusha
lock
sbb
pop
out
pop
jb
pop
sbb
push
lcall
dec
aam
adc
pusha
and
movl
nop
push
and
push
dec
lret
leave
shl
or
negl
push
dec
push
lret
cmp
add
add
sahf
push
adc
mov
adc
xlat
add
pop
enter
push
xchg
and
cs
das
inc
pop
leave
or
nop
push
repnz
mov
enter
inc
lret
or
daa
repz
inc
inc
scas
in
leave
sbb
inc
sbb
jne
sbb
inc
add
popf
sbb
sbbb
pop
mov
or
fucomp
inc
ja
int
sub
inc
pop
and
daa
xchg
in
or
addr16
add
jns
mov
cwtl
and
cmpsl
inc
mov
jae
loop
pop
repnz
adc
cmp
das
and
ret
inc
das
pop
inc
sbb
nop
or
scas
cmp
adc
in
popa
sbb
xor
and
pop
inc
jb
xchg
adc
leave
out
popa
cmp
xchg
jb
sarb
ss
or
cmc
sbb
pusha
adc
in
leave
or
mov
insb
mov
nop
xchg
mov
ljmp
icebp
imull
movsb
adc
mov
sbb
jp
pop
jbe
shrl
or
pop
dec
sub
in
test
inc
sub
subb
jg
jns
xchg
lret
sub
jae
adc
filds
sbb
fadds
jl
hlt
pop
or
das
aaa
xchg
pop
inc
xchg
sti
fldl
popf
jae
jge
add
and
jae
daa
and
daa
fcomp
lahf
or
pop
mov
fldl
or
or
sub
or
or
jg
pop
and
cmpsl
popf
add
xchg
cs
push
add
shrb
add
aad
add
pop
add
inc
push
dec
or
or
push
push
mov
fildl
push
push
or
dec
add
add
add
and
inc
or
sub
lcall
rolb
pop
sbb
cmc
mov
add
sbb
fists
mov
pop
adc
xchg
std
add
adc
fistps
or
mov
push
adc
mov
add
inc
or
adc
or
mov
imulb
je
jecxz
das
sub
fstpl
fmuls
adc
repz
fldl
pop
imul
mov
lock
cltd
add
aas
add
jne
xchg
int3
daa
sub
sub
and
fstpl
mov
xchg
xor
adc
sub
pop
insb
aaa
xor
mov
sbb
inc
and
jmp
and
and
outsl
neg
insb
xchg
dec
dec
sub
sbb
mov
out
dec
pop
and
stc
outsl
and
add
cmp
cmp
sbb
outsl
fxch
and
mov
pop
aaa
cmpb
aaa
mov
push
or
pop
push
and
add
or
bound
mov
sbb
or
pop
inc
jecxz
icebp
or
cwtl
push
inc
sbb
xor
sbb
or
fstps
jae
cwtl
or
lcall
imul
gs
sub
es
adc
mov
out
push
push
add
stos
inc
xchg
data16
sbb
mov
inc
jg
pushf
lret
push
mov
sysexit
mov
xor
sub
adc
xchg
and
fs
inc
ss
push
cmp
pop
mov
push
pusha
loop
ret
lahf
cmpsb
cmc
sub
test
xchg
and
mov
test
out
popa
or
and
inc
ret
movsb
sub
sarl
and
add
movsb
lret
or
fdivs
mov
push
test
fdivl
pushw
adc
mov
add
scas
adc
jne
idiv
lods
sub
pop
sti
pop
xchg
or
ss
cmp
sbb
cs
sub
mov
daa
sbb
out
sbb
pop
or
lret
mov
cmpsb
jb
mov
fiaddl
jno
mov
leave
push
mov
mov
pop
add
addl
in
jmp
ljmp
or
lods
in
ja
add
jnp
sub
ss
outsl
insl
dec
ret
add
push
jnp
add
in
mov
sbb
jecxz
adc
jbe
pop
stos
stos
test
sub
mov
dec
das
aas
xlat
mov
or
jg
mov
das
sub
cmp
push
add
inc
mov
jle
dec
push
lods
out
xchg
xchg
out
add
insl
fildl
dec
jne
jecxz
ja
sbb
outsb
or
std
gs
add
insb
xor
outsb
fnstenv
das
push
fs
add
loopne
add
in
xchg
cltd
pop
div
or
imul
imul
sub
jl
popf
mov
es
ret
aam
imul
xor
and
fcomp
ret
int3
std
fisttpll
dec
addr16
ja
or
xchg
scas
add
sbb
adc
shl
jmp
dec
addl
pop
ficomps
faddl
popa
fiaddl
jne
adc
ret
test
jbe
mov
scas
fildl
jne
icebp
insl
cwtl
mov
jnp
push
negb
and
add
add
jmp
fisubrs
pusha
inc
add
dec
dec
insl
aaa
mov
jbe
mov
into
outsl
or
mov
jg
ja
adc
addr16
repz
fcomps
add
sahf
test
jg
loop
cmp
push
outsb
js
adc
jle
jbe
jne
int3
inc
pop
fcomps
or
daa
je
mull
jg
push
addr16
adc
cmpsb
in
sbb
data16
mov
xchg
jb
in
outsb
popf
jne
mov
sbb
mov
jl
xchg
ret
arpl
in
sbb
sahf
int3
adcb
push
jg
es
lods
inc
inc
add
insb
iret
sbb
push
iret
das
out
jecxz
cltd
mov
daa
add
push
fdivrs
mov
xlat
scas
sub
imul
es
sub
out
out
inc
sbb
iret
xchg
sub
jg
mov
mov
enter
movsb
filds
mov
xor
test
bound
test
add
jnp
sub
or
or
xchg
lods
xor
dec
jp
pop
fimuls
sbb
xor
push
wrmsr
das
dec
jbe
adc
adc
jae
loopne
jmp
jg
mov
loopne
sti
sbb
sbb
push
out
or
ret
es
mov
dec
fistpl
es
jae
hlt
add
nop
inc
xchg
sbb
mov
add
int3
fs
pop
fcomps
add
out
add
ret
inc
dec
out
repnz
jle
jmp
cmp
add
and
or
aad
popa
imul
adc
mov
adc
sub
out
arpl
xchg
call
arpl
add
mov
fidivl
or
push
out
cli
out
imul
mov
or
pop
cmp
push
cmpb
or
xor
sbb
cmp
inc
mov
shlb
or
mov
sbb
pop
pop
data16
lods
push
lcall
js
inc
jle
imul
push
add
inc
ja
aas
pop
adc
test
imul
cmp
add
mov
les
jnp
fists
adc
iret
inc
ss
notb
dec
and
daa
jo
ret
cmp
or
sbb
jo
mov
test
pusha
pop
xchg
sahf
fbld
scas
sbb
popa
scas
lea
fildll
xchg
cmp
xor
insl
into
shlb
add
into
mov
push
inc
lock
push
repz
daa
add
bound
sarl
sub
and
dec
add
xchg
push
dec
inc
push
je
rcrl
rcrl
dec
cmpl
data16
add
xchg
sbb
arpl
sub
cli
leave
xor
sub
test
lods
sar
dec
jle
fistl
mov
xchg
dec
sbb
leave
xchg
ds
add
add
test
ds
jo
sarl
xor
xchg
into
scas
insb
je
cmp
cmp
into
lea
lahf
jmp
ja
je
in
iret
loopne
cmp
lods
push
ja
xchg
jae
push
xchg
scas
inc
xor
lods
adc
clc
pusha
ret
and
out
les
subb
jo
push
jo
lock
ret
scas
subl
jnp
mov
or
repz
sub
add
movsb
cmp
test
xlat
arpl
test
jp
outsb
mov
lock
xor
addl
push
dec
lock
cmp
ss
xchg
mov
inc
or
xlat
cltd
fidivrs
push
jp
jl
sti
andl
mov
mov
std
and
je
add
or
dec
pop
nop
jns
jnp
js
jno
xorb
xchg
xor
dec
sbb
jle
fcomps
xor
ret
daa
cld
test
pop
mov
cmp
pop
ret
jnp
jae
je
mov
sbb
jge
add
daa
js
cmpsl
dec
inc
bound
sti
mov
add
sub
out
cmp
lret
je
pop
insb
jg
imulb
iret
das
ss
adc
inc
jo
enter
add
jno
add
cmc
dec
into
hlt
icebp
dec
cmpsl
fs
popa
mov
dec
in
inc
jae
adc
mov
add
mov
sarl
ja
push
and
inc
fnstcw
sbb
nop
add
or
movsl
sbb
jno
aaa
jg
pusha
andl
add
iret
xor
jle
stos
and
out
dec
or
jns
out
inc
pop
pop
aas
inc
mov
imulb
xor
aad
and
imulb
call
adc
insb
fsubs
in
and
xchg
lock
leave
lret
mov
test
or
ret
data16
aaa
das
add
adc
xchg
sub
xlat
xor
inc
jg
icebp
sbb
mov
lods
sub
mov
mov
fcom
lock
movsb
or
xor
push
cmp
add
imul
cmpsb
add
mov
pushf
hlt
mov
mov
outsb
scas
mov
ja
mov
adc
repz
test
or
push
dec
popa
mov
aaa
xchg
fiadds
iret
mov
inc
incl
fidivl
clc
mov
xor
cwtl
jno
fnstcw
loop
sub
jnp
pop
cmp
dec
jno
shll
add
push
push
popa
icebp
sub
adc
push
jae
xlat
imul
pop
stos
mov
sbb
push
jle
outsl
cmp
test
and
xlat
mov
cmp
ss
fstp
out
icebp
cwtl
mov
jge
pop
bound
or
test
neg
push
pop
pop
aam
and
aaa
mov
jnp
ljmp
xor
inc
aam
push
jne
iret
dec
cltd
mov
pop
push
or
fnstcw
xchg
call
adc
jmp
cmp
nop
cmc
jne
aad
or
fldcw
negb
adc
test
adc
ret
or
ja
sub
iret
sub
int
push
lret
popf
mov
push
jbe
subb
jmp
leave
leave
inc
out
scas
cli
js
xor
pop
xchg
inc
enter
mov
push
popa
in
cs
sbb
popa
shll
cmp
leave
xor
xor
fstpl
sub
das
or
fsubrl
out
xchg
ja
jp
iret
adc
pop
sub
xlat
fadds
xor
test
cmpsl
add
ret
sub
or
cs
test
arpl
rolb
push
das
push
cmpb
cmp
jbe
fldl
repnz
lds
jmp
fldcw
clc
out
inc
iret
or
sbb
int
mov
xchg
rcr
loopne
jae
stos
loopne
mov
add
sbb
mov
shrl
ds
je
rcrl
pop
mov
push
sub
mov
fs
lock
in
jo
push
xor
pop
ret
adc
pop
cmp
and
cmp
lods
push
nop
sbb
inc
lods
scas
ljmp
add
push
fisubrl
cmp
shll
sub
lock
push
and
sbb
cltd
in
pop
xor
mov
arpl
adc
xchg
cmp
jnp
adc
call
inc
push
enter
cmp
sub
mov
repz
sbb
push
fs
in
fsubrs
cmp
and
jo
pusha
mov
jle
jmp
xor
fwait
pop
jae
and
mov
add
divb
xorl
cli
sub
xlat
push
sbbl
adc
xchg
aam
pop
jbe
adc
and
sbbl
andb
mov
xchg
push
adc
test
and
out
adc
adc
cwtl
fdivr
mov
out
out
lods
sub
add
ficoms
mov
in
xor
cwtl
push
and
fisubrs
sub
xchg
or
pop
mov
cmp
fcoms
test
mov
scas
mov
loopne
scas
nop
dec
cs
sahf
lock
add
push
push
js
mov
and
pop
jne
cld
inc
out
stos
adc
mov
sub
add
les
push
pop
sub
or
push
fistpl
es
fstp
popa
sub
jmp
adc
jecxz
test
jo
pop
lods
loope
outsb
xchg
dec
cmpsb
xchg
pop
les
push
sbb
icebp
and
sub
cmpsl
sub
sbb
test
add
add
iret
cmp
leave
movl
test
adc
cmpb
lret
jbe
jbe
das
dec
pop
cli
xchg
sbb
push
jl
adc
scas
sub
jp
fistps
push
push
inc
je
mov
jmp
and
lods
add
test
iret
test
xchg
dec
popf
inc
pop
jb
sbb
cmc
xchg
fisubs
sbb
pop
imulb
inc
push
adc
push
and
out
sbb
insl
fiaddl
movsl
lods
mov
fdivs
mov
imul
outsl
add
cmp
sbb
repnz
jp
inc
int
shrb
jbe
repz
or
clc
xor
sbb
repnz
sbb
pop
or
mov
out
loope
out
repz
je
push
int3
mov
pusha
iret
fucomp
arpl
mov
iret
cmp
mov
or
and
push
movsb
xchg
jo
ret
jle
jbe
in
jb
mov
ret
in
push
cltd
xlat
sub
jle
das
sarb
sbb
xor
lahf
stos
inc
jp
testl
push
xor
leave
inc
test
xor
mov
daa
push
push
lret
sub
loope
insl
mov
movl
add
push
add
les
ficoms
loop
dec
aaa
push
mov
cs
pushf
xchg
scas
lcall
fildll
sbb
data16
xchg
loope
ja
cmp
xor
jmp
xchg
aam
lods
sub
xchg
push
mov
mov
shll
xchg
dec
rcrl
push
add
xchg
jns
pop
iret
mov
bound
inc
xlat
int
adc
insl
cwtl
rol
ja
mov
aam
inc
lods
shll
loope
xor
stos
inc
loopne
pop
lea
jnp
icebp
fadds
fstpt
cmp
mov
jl
xchg
mov
daa
fidivs
cmpxchg
rcrl
push
ds
je
dec
lock
jp
jle
in
fimull
pop
es
push
das
fsubs
push
movsb
cmpsb
into
xor
cmpsl
adc
loop
movsl
lcall
ficompl
lds
iret
push
mov
lcall
push
fbld
add
sbb
mov
or
sub
push
jnp
inc
shlb
idiv
int3
pop
int3
ljmp
aad
fstpt
cmp
push
cmp
cwtl
and
loopne
cld
in
mov
jmp
mov
cmp
inc
jle
add
xchg
sbb
jp
rcll
cmp
std
mov
push
fstl
or
cmp
and
ret
aaa
test
push
cwtl
stos
lods
ret
xchg
jmp
or
push
mov
popa
add
cmp
fldl
rcrl
xchg
cmp
mov
and
lahf
push
sbb
clc
dec
cmpsl
pop
xor
in
lcall
jbe
imul
js
jbe
xchg
int3
call
cmc
outsb
lods
sbb
pop
loope
sub
in
insl
and
enter
mov
sarl
mov
outsb
adc
push
dec
xor
push
add
and
sbb
ficoms
inc
and
movsb
xchg
mov
cmp
dec
cltd
dec
xchg
scas
stos
add
out
sbb
mov
or
or
add
adc
mov
test
sahf
nop
rcrl
bound
cmp
add
adc
push
das
adc
add
arpl
xor
xor
es
xorb
cmpsb
addr16
lahf
daa
lahf
pushf
fistpl
movsl
sub
push
push
outsl
sbb
fnstsw
shll
cld
popf
jo
xor
das
pop
sub
jg
mov
jae
dec
push
sub
in
scas
aam
jno
clc
mov
and
sub
fisttpl
jno
loopne
fadds
scas
or
dec
and
dec
scas
sti
xchg
or
cmpsl
xchg
lds
insb
jo
xor
popa
pop
and
loope
insl
jmp
cmpsl
adc
out
mov
mov
fimuls
aaa
mov
js
cmp
jmp
xchg
dec
mov
ss
sub
int3
test
shl
mov
mov
push
shll
les
sub
cmp
gs
daa
cmovbe
pusha
fbstp
daa
js
xor
test
es
shll
ljmp
push
fs
and
mov
dec
test
adc
loopne
and
adc
cmpsw
xchg
dec
cmp
lock
sbbl
stos
pop
inc
pusha
iret
adc
mov
add
negl
cmp
ja
hlt
sbb
int3
imul
lods
mov
loope
sub
mov
movsb
fbld
pop
gs
cmp
in
xchg
loopne
insb
js
addr16
add
xchg
pop
out
pop
cld
rorl
mov
scas
mov
sti
ret
andb
jl
bound
and
shlb
cs
insl
lods
mov
enter
push
ja
aaa
fldcw
mov
outsl
fstpl
shll
jno
out
loope
into
adc
xchg
xorb
rcrb
push
dec
xchg
sbb
xlat
fisttpll
pop
fucomip
push
scas
xor
xchg
xchg
adc
sub
stos
cmpsb
dec
fdivr
sbb
inc
fisubl
adc
jbe
or
int3
push
cmp
push
and
jge
fistps
or
jno
mov
mov
rcrl
mov
sub
and
insb
xchg
sbb
jp
mov
sbb
pop
fisubrs
inc
and
lods
rep
outsb
fimuls
mov
push
pop
dec
cmpsl
popf
push
pop
mov
adc
insl
iret
movsb
adc
and
adc
sbb
or
pop
add
repnz
xor
mov
data16
xor
and
xor
add
add
push
imul
pop
cmp
push
inc
jne
adc
and
mov
rorl
pmaxub
push
and
jmp
pop
cmp
int3
adc
in
test
aam
xchg
rolb
add
jbe
sub
ja
sarl
mov
stos
and
bound
pop
adc
jns
pop
int
mov
adc
and
lahf
add
xlat
iret
and
into
in
jbe
add
daa
sahf
jg
mov
shlb
push
shl
in
inc
pop
cmc
mov
outsb
aaa
add
add
jae
xor
jo
fcoms
add
add
sub
pop
dec
bound
sub
mov
mov
adc
rorl
pop
add
mov
and
xchg
mov
add
addr16
mov
and
add
and
test
and
push
scas
push
scas
scas
xor
gs
push
out
roll
leave
fcmove
inc
ficompl
sbb
pop
mov
pop
push
imul
pop
pop
pop
mov
mov
pop
xchg
loope
repz
xchg
jo
or
push
sbb
out
pop
mov
outsb
out
popa
psubd
mov
fsub
sbb
mov
jl
js
lds
les
push
test
pop
out
xchg
add
add
imulb
fbld
inc
or
add
add
pop
ret
mov
fcomip
mov
daa
add
iret
inc
and
mov
xor
es
sbb
sahf
mov
lods
adc
adc
rcrl
mov
nop
aam
test
jo
test
and
and
mov
negb
dec
in
addr16
cmc
cmp
and
cli
sub
mov
sub
jp
flds
rorl
sbb
pop
add
and
in
test
adc
add
or
or
out
cmpsl
hlt
jo
push
push
std
sub
imul
ret
push
fstl
test
add
or
arpl
fidivs
xchg
leave
push
daa
shr
add
push
scas
sub
in
push
rol
and
mov
idivl
aaa
add
and
fcomps
add
pop
or
adc
and
lods
xlat
push
sub
subb
test
pop
cld
sbb
and
add
push
daa
adc
lods
jae
ja
out
push
test
and
je
lds
shrb
in
hlt
js
inc
push
mov
mov
push
sub
test
dec
lret
and
or
cmp
lds
or
lret
fmull
pop
inc
loop
pop
adc
mov
xchg
iret
loopne
out
mov
sbb
sbb
jne
jbe
out
cwtl
sub
in
xor
adc
in
fsubrp
cwtl
xor
out
rolb
div
hlt
iret
lock
les
dec
rcll
cmp
ljmp
test
inc
dec
mov
inc
mov
shl
adc
mov
jo
pusha
xchg
xchg
inc
and
pop
daa
xchg
into
and
adc
lock
or
cmp
into
and
or
ficompl
out
int3
lret
inc
shl
movsl
push
into
popf
cmp
or
adc
stos
jnp
dec
arpl
push
aas
jno
or
lds
cmp
ss
mov
xchg
and
or
jmp
cmp
es
andb
insb
in
stos
clc
jbe
and
or
pop
nop
push
mov
bound
or
mov
ret
jbe
dec
xor
fstps
and
or
addr16
sti
subl
push
or
cmp
xor
and
data16
enter
popf
dec
jo
sbbb
add
call
jle
lret
xchg
and
mov
in
push
cmp
mov
test
mov
fdivrs
icebp
and
out
test
inc
pop
addr16
pop
insl
mov
sbb
inc
mov
mov
fs
jae
shll
roll
pop
mov
shll
int3
popa
mov
and
sbb
sub
and
adc
cs
or
fcomps
fimuls
int3
shld
dec
outsl
int
pop
jmp
aas
add
shrl
mov
pop
sub
sub
sub
das
adc
data16
rolb
jne
and
pop
sub
scas
and
shrb
sbb
mov
jle
popa
add
sub
add
rclw
fnstsw
popf
iret
mov
cmp
sbb
add
ss
fcomps
jl
imul
dec
mov
mov
and
stos
push
je
imul
inc
push
inc
and
push
sub
dec
xchg
push
lcall
data16
mov
test
arpl
fcomps
push
or
ret
add
add
jmp
int
or
add
adc
sbb
je
repz
bound
xor
rolb
jmp
lcall
les
xor
nop
lret
push
adc
or
nopl
sub
clc
xchg
xor
push
sbb
sub
cld
cmp
cmp
mov
lcall
inc
lods
adc
xor
je
movsb
dec
rcl
lods
xchg
out
dec
rorb
sub
fildl
test
stos
pushf
clc
add
sbb
jne
iret
mov
dec
iret
jne
jmp
jno
sbb
xchg
pop
mov
stos
out
dec
aam
inc
sbbb
ss
push
fsubp
lock
sub
decb
cmp
mov
mov
cmp
mov
gs
inc
daa
and
pop
and
pop
fimull
fwait
jp
fdivr
lods
push
shrb
cltd
adcb
sbbl
lret
lcall
push
jp
and
popa
sbb
mov
mov
addb
sub
lcall
out
iret
mov
pop
icebp
add
es
out
xchg
fwait
sar
int3
xchg
pop
lods
lods
xor
push
popa
mov
dec
fisttpll
shlb
inc
push
inc
cmp
add
lret
cmp
shll
pop
repnz
push
cmp
dec
cmp
ja
push
adc
aas
cmp
test
xor
jo
or
xchg
mov
pop
movsb
in
outsb
pop
mov
mov
fidivs
pop
push
addr16
cmc
sbb
popf
adc
mov
mov
sti
addr16
jle
stc
imul
mov
pop
jmp
jno
and
xchg
js
out
push
xor
jo
sub
test
dec
movsb
pop
lods
scas
xor
sbb
shl
and
xchg
dec
add
out
inc
or
push
loope
push
mov
jmp
dec
xchg
fmull
mov
add
adc
repnz
push
test
jo
je
mov
cltd
imul
jl
outsl
lret
jo
mov
iret
and
jbe
scas
out
xchg
test
mov
ja
mov
sbb
fbstp
jne
call
sub
mov
test
fcomps
es
cli
cmp
popa
inc
leave
ret
jle
mov
pusha
mov
hlt
int
jae
lret
cwtl
mov
sub
xor
leave
inc
jp
ret
iret
and
dec
jns
add
mov
scas
adc
stos
sarb
inc
call
lods
jo
popa
aas
pop
loope
sti
mov
mov
repz
add
or
push
add
das
in
daa
aas
sub
or
jo
cmp
fsubp
mov
inc
fisttpl
addb
ss
lret
adc
call
arpl
pushfw
inc
jb
fldcw
push
xchg
xor
daa
adc
sub
lock
dec
and
neg
mov
out
mov
ret
loope
pop
pop
imul
mov
lods
add
jbe
cmp
test
mov
rorb
and
sub
out
hlt
and
ret
loop
lret
pop
test
dec
inc
xor
sbb
mov
ret
imul
popa
ret
je
and
push
xor
jne
sub
loope
movl
push
and
pop
test
fwait
pop
fnstenv
mov
add
daa
mov
negb
and
filds
fcoms
rol
add
mov
jle
mov
aam
push
jl
inc
sbb
test
rcr
and
ret
bound
fsubl
outsl
and
cmp
push
cmp
mov
es
fs
std
rcrl
aad
inc
scas
clc
repz
adc
sub
mov
lock
aad
cmp
addl
push
and
lds
cmp
ficomps
pop
pusha
sub
rcll
push
lock
dec
jp
sub
into
int
cmp
iret
popa
scas
jle
and
adcb
push
or
test
push
xlat
fcmovbe
into
add
es
fs
dec
jae
out
xor
pushf
rcrb
lds
add
mov
outsl
ret
jno
inc
out
push
xchg
shll
add
sarl
inc
push
inc
lret
sbb
add
xor
pop
push
clc
add
aad
cmpsl
add
xchg
icebp
push
push
jle
arpl
sbb
pop
and
xor
mov
xchg
mov
jno
in
loop
rcl
dec
inc
mov
nop
pop
xlat
jo
outsb
xchg
outsl
cmpsb
popf
loopne
stos
js
mov
push
aad
jp
add
jbe
popa
sti
andl
cmpsb
add
das
cwtl
mov
and
xchg
mov
into
lds
imul
add
test
setne
push
push
push
dec
addr16
lret
sahf
jle
xlat
js
jo
dec
dec
dec
add
inc
cli
lods
dec
imul
fs
xor
repz
movsb
divl
scas
cld
jo
aaa
ret
sahf
cli
lods
push
scas
lret
mov
mov
pop
scas
loope
cmp
and
lahf
add
fwait
aad
aas
jmp
or
rcr
repnz
cs
jbe
xor
scas
out
aas
pop
mov
pop
inc
cld
loopne
mov
fldl2t
add
xchg
test
loope
iret
cmp
jle
push
lea
jo
sahf
ljmp
jns
aaa
hlt
xchg
lea
push
xchg
faddl
mov
cmp
loopne
mov
mov
ja
push
mov
or
test
fnsave
jo
ret
or
sti
les
push
hlt
jmp
push
cmp
jno
sbb
cmp
mov
push
or
iret
ja
mov
in
in
pop
or
leave
or
sbb
or
fs
loopne
pop
outsb
push
js
loope
mov
rcl
inc
sbb
dec
dec
addr16
js
or
jmp
pushf
mov
lds
sbbb
xor
dec
mov
add
mov
imulb
fsubs
push
sub
dec
popa
inc
inc
fisubs
loopne
push
test
shrb
jne
lock
inc
loop
mov
andl
adc
enter
das
jns
xor
mov
cmovle
leave
test
add
inc
test
stos
jge
adc
adc
adc
fadd
cmp
jne
jbe
sar
jb
sub
adc
push
das
or
jbe
ss
xor
icebp
imul
fildl
xchg
adc
mov
inc
xchg
pop
dec
lock
pusha
add
add
and
aad
arpl
dec
iret
adc
mov
out
push
add
mov
ficomps
push
pop
dec
sbb
inc
inc
jo,pn
pop
adc
sbb
es
rcll
fdivl
push
cmc
xchg
inc
sub
in
mov
je
aam
ja
loop
loopne
imul
push
clc
xor
pop
lods
mov
fimuls
gs
out
aad
stos
jb
bound
mov
jmp
xor
pop
cmp
sbb
testl
jecxz
push
cmpsb
dec
mov
jno
mov
inc
xchg
ret
xchg
push
mov
icebp
adc
cmp
or
and
movsb
fstpl
jecxz
vmovddup
mov
sbb
movsb
dec
int
and
pop
jge
test
xchg
shlb
push
iret
and
cmpsl
fists
call
out
rolb
push
and
or
mov
fdivp
jns
mov
adc
push
sbb
adc
push
jb
jo
shlb
ret
sbb
aaa
loopne
js
hlt
in
push
mov
jmp
and
cmp
shll
rorl
fldcw
jbe
cmp
add
rdpmc
add
loop
bound
arpl
mov
outsb
scas
cmpsl
lahf
cmp
mov
pop
push
sbb
ja
int
shrl
imul
xchg
xor
sub
jmp
fisubrl
adc
jbe
adc
mov
push
lret
lock
jmp
data16
fcoms
inc
call
repz
push
aas
adc
insb
in
adc
fimull
scas
cmp
cltd
out
es
pop
ret
push
xor
jp
push
ss
fildl
loope
mov
int3
jmp
scas
xchg
mov
push
outsb
int3
cltd
js
push
aas
cmp
push
xor
lds
sub
or
lret
cmp
mov
and
sbb
cmp
sbb
pop
mov
fwait
loop
stos
or
sub
mov
mov
mov
dec
push
mov
test
xchg
mov
out
mov
mov
sbb
icebp
bound
loopne
sbb
lods
sub
lods
xchg
push
sub
fsubs
into
testl
cld
sbb
xor
bound
pop
movsl
jle
in
and
ja
test
xor
push
add
lods
jl
clc
push
into
cmp
jle
push
ret
push
xor
ret
mov
and
or
das
xor
dec
cmp
popf
mov
and
cmp
sub
jnp
repz
xchg
ds
mov
adc
xor
push
pop
add
out
mov
adc
xor
xor
das
cltd
inc
jl
xor
push
in
cmpsb
insl
xlat
loop
inc
scas
sub
jbe
mov
call
dec
xor
add
add
pop
xchg
jae
movsb
xor
and
sub
jae
or
enter
pop
or
pop
cmc
idiv
sub
ret
test
pushf
divl
mov
xchg
xchg
pushf
cmpsl
and
xor
fnstenv
push
xlat
mov
or
push
xor
mov
adc
mov
data16
sub
mov
add
js
outsb
sbb
add
adc
sbb
fldcw
cwtl
test
loope
inc
shlb
dec
and
outsb
sub
pop
pop
xchg
mov
addr16
orb
fidivs
add
add
mov
leave
loop
das
sub
sbb
or
ret
js
dec
xlat
addb
mov
and
loopne
inc
jl
ja
out
xchg
inc
pusha
cmp
sarl
push
js
or
push
and
push
bound
repz
je
out
scas
test
dec
fisubl
loop,pn
enter
lret
inc
mov
cmp
fsubl
lret
jnp
sarl
xlat
jb
push
pusha
roll
xor
mov
pushf
mov
and
lcall
mov
adc
leave
and
inc
into
pop
inc
sbb
or
loop
sbb
movntps
loope
daa
and
in
out
ljmp
adc
jmp
add
push
movsb
jmp
repnz
xchg
pop
push
stos
xlat
cmp
scas
mov
push
xchg
cmpsl
test
testl
bound
and
add
cwtl
into
dec
mov
faddl
sub
imul
sub
ja
rol
sbb
insb
and
jmp
imul
adc
mov
fsts
das
jae
sub
jnp
jl
jg
and
jnp
dec
mov
ljmp
sub
stc
outsb
inc
adc
and
mov
mov
sub
jnp
dec
add
push
es
mov
push
adc
adc
fistpll
or
mov
sbb
xor
adc
jmp
or
pop
pop
cmp
or
jne
inc
cmpsl
xchg
mov
pop
arpl
mov
ja
jmp
xchg
and
sbb
and
jne
xchg
push
repnz
add
ss
xrelease
lret
mov
sbb
fsubs
incl
and
sti
inc
fadds
pop
adc
imul
dec
into
and
addr16
mov
bound
imul
test
xchg
btr
in
mov
sub
in
stos
mov
jnp
pop
test
adc
xlat
dec
test
stos
adc
imul
inc
adc
cmp
xchg
jns
es
dec
push
mov
arpl
sub
test
out
cmpsl
je
jbe
aaa
adc
and
cmp
in
jp
jmp
dec
cmp
in
stos
inc
testl
repz
mov
scas
mov
mov
xchg
dec
xorl
dec
cmp
dec
sbb
xor
jno
loop
int
add
movsb
fwait
pop
lahf
pop
and
fwait
dec
cmp
and
cmp
paddsb
and
jge
mov
pop
cmpxchg
inc
sub
pop
repnz
cmp
mov
pop
push
repz
adc
gs
mov
loope
adc
or
adc
pop
and
ret
iret
ficoml
sub
iret
adc
cs
stos
cmovne
insb
or
in
test
pop
pop
nop
push
jbe
sbb
adc
ret
jmp
or
mov
mov
femms
inc
addr16
cli
jae
jle
pushf
imul
dec
add
jge
daa
add
sbb
sub
jge
aaa
dec
mov
negb
xchg
ja
arpl
add
in
cmp
jg
or
jnp
push
add
adc
aaa
cmp
mov
xor
xor
or
inc
mov
andl
inc
adc
add
jbe
sbb
shlb
andl
jb
xorl
gs
xchg
fiaddl
mov
scas
or
adc
jge
stos
rol
push
dec
ss
mov
js
inc
popa
repnz
inc
test
push
push
lods
inc
adc
les
mov
sbb
les
pop
sub
xchg
cmp
push
call
fnstsw
sbb
mov
imul
aaa
xchg
push
mov
pop
aad
xchg
sub
push
cmp
aaa
push
mov
mov
adc
add
pop
rclb
fistl
rolb
add
xchg
sub
sub
out
mov
loopne
pop
xor
call
push
aas
xchg
add
and
add
invd
cmp
out
jmp
pop
pushf
xor
pusha
popa
dec
mov
push
add
jne
or
xor
int3
test
mov
outsb
jne
pop
mov
cmp
sbb
movsb
sbb
fwait
or
or
mov
mov
stos
ja
inc
cmpsl
push
adc
rorb
in
push
and
push
test
jg
xchg
push
mov
dec
loopne
lcall
mov
xor
and
je
inc
push
sub
rolb
fmul
sub
mov
add
js
out
enter
in
pop
pop
rclb
cwtl
in
add
and
roll
jge
mov
inc
test
ljmp
test
pop
lds
cs
xchg
and
adc
sub
or
movsl
ljmp
lea
adc
xchg
fsubs
add
faddl
jo
add
insl
iret
popa
dec
mov
jns
je
daa
ret
sbb
sbb
xor
mov
outsb
in
fsubrs
xchg
inc
jp
stos
imul
add
mov
jo
mov
cmp
sbb
mov
add
aaa
sbb
ja
scas
add
pop
pop
or
add
pop
imul
arpl
push
subb
sub
inc
jnp
rcll
mov
inc
push
test
and
pop
aas
out
or
scas
rorb
adc
std
push
cmpsb
mov
xchg
xchg
mov
into
jo
inc
lret
add
mov
jne
inc
stc
jg
fistl
sub
push
xor
mov
xor
pop
das
cmpsb
aaa
and
or
scas
pop
mov
cmp
mov
sub
rcrb
cmp
data16
sub
add
jne
jle
xor
adc
jle
ja
pop
int3
pushf
jmp
jg
xchg
outsb
mov
sarb
ret
cmp
pop
add
push
rcrb
int3
jno
clc
je
jae
mov
aam
ficoml
rcl
mov
outsl
test
pop
mov
andl
lods
popf
xchg
imul
out
xor
push
and
in
stos
ja
or
dec
mov
ja
test
jo
xor
adc
mov
push
andb
addr16
sub
push
les
adc
stos
movb
mov
lahf
loopne
pop
mov
mov
mov
rolb
adc
sbb
mov
inc
les
cwtl
inc
add
or
ret
mov
and
shrl
stos
pop
adc
push
jae
xor
add
nop
or
cmpl
call
cmp
push
add
pushf
mov
out
popf
lahf
sahf
jle
testl
jae
cmp
fimull
and
jp
pusha
ja
sub
pusha
mov
fisubrs
testl
mov
adc
cld
mov
fadds
push
addb
iret
xor
mov
fdivrs
push
je
loop
dec
in
dec
int
xlat
sbb
mov
test
mov
fcmovbe
xchg
ljmp
out
subb
adc
rol
imul
mov
sbb
ret
xor
xor
andb
cmpsl
pushfw
and
cs
mov
inc
add
mov
push
and
shlb
push
rol
push
js
mov
notb
add
shl
out
loop
sub
cmp
push
sub
aad
in
pop
and
lret
insl
or
adc
lret
test
stos
add
lds
jae
mov
push
lea
insb
adc
push
nop
dec
lds
jbe
aaa
xor
sub
and
dec
sub
xor
adc
clc
insl
sbb
and
ja
adcb
rolb
es
inc
insb
sarl
jns
jbe
push
sbb
pop
xchg
mov
iret
mov
inc
test
in
dec
pop
aad
stos
xor
popf
inc
xchg
fcomps
sbb
int
add
nop
scas
jp
dec
arpl
dec
shrb
pop
xchg
push
cmp
pusha
mov
fsubr
adc
fisubs
fcompl
setp
iret
jae
inc
les
add
inc
hlt
ss
out
jmp
lcall
jmp
scas
adc
add
leave
in
cmp
or
push
and
xor
data16
push
aaa
cmp
cmp
or
arpl
cwtl
rcrl
test
push
cs
lahf
psubb
andl
xchg
add
mov
mov
inc
mov
fsubs
mov
in
test
inc
mov
pop
xchg
sbbl
arpl
push
dec
sbb
aad
lods
pop
int3
adc
jns
test
cltd
inc
insb
scas
out
push
add
and
call
test
out
or
jae
jmp
dec
fcomip
mov
and
push
or
inc
sub
pop
sub
jl
xlat
fmuls
mov
add
sbb
xor
inc
test
ror
sub
test
int
pop
imul
mov
mov
cmc
and
pop
into
and
or
mov
test
ss
unpckhps
dec
mov
les
movsb
and
adc
xchg
add
xchg
iret
loopne
push
adc
sub
cmpl
add
je
sbb
iret
fnstcw
sub
sbb
push
jp
jne
movsb
lcall
push
push
cmp
or
push
add
pop
loopne
push
movb
das
sub
xor
mov
push
cmp
add
and
mov
adc
das
jo
repz
outsl
push
inc
sahf
add
arpl
mov
mov
add
add
addr16
jge
mov
pop
xchg
in
movl
inc
movsl
inc
inc
fiadds
das
fcom
scas
mov
add
movsb
adc
out
push
or
mov
call
loop
out
xor
and
inc
in
xor
mov
xchg
shll
fdiv
add
sub
sub
dec
adc
adc
jle
mov
movsb
dec
cwtl
xchg
clc
js
test
cwtl
jp
add
out
popa
loopne
push
adc
and
xchg
cmp
cmpsl
add
stos
cmovae
sti
test
add
jecxz
cld
out
cld
stos
push
cmpsl
sub
das
jne
adc
add
mov
mov
jp
lret
cwtl
fcomps
insl
dec
mov
sub
jb
movsl
test
or
xchg
add
pusha
lea
int3
push
out
adc
insb
add
mov
mov
dec
hlt
push
jl
jle
jle
push
push
in
and
push
xor
fisubl
lods
shll
adc
stc
scas
cmp
sub
adc
push
xor
lret
insl
jbe
ret
ds
stos
arpl
je
clc
dec
out
lods
cmp
inc
bound
sub
arpl
je
pop
andl
jo
sbb
push
dec
xchg
jle
mov
fs
popa
cli
loope
mov
fldenv
jo
jne
lahf
push
gs
xor
or
sub
les
push
mov
or
pop
inc
xlat
push
inc
loope
adc
mov
mov
mov
fsubs
jno
jb
aad
das
sub
cmp
cmp
pop
je
enter
push
xor
jl
cmpsl
cmp
xchg
jmp
cs
addb
push
into
xor
dec
out
pop
fwait
jo
in
pop
inc
add
mov
push
adc
cmp
jnp
xchg
or
push
imulb
lret
sub
dec
lods
mov
fisttpll
push
iret
int3
cli
inc
jl
insb
mov
je
jl
outsb
mov
mov
daa
xor
ja
sub
getsec
mov
dec
mov
jl
call
rorl
fld
mov
shll
push
pop
push
fcomp
xchg
mov
sarl
addr16
mov
or
or
or
andb
cmp
sbb
jo
push
in
mov
add
fs
add
or
sahf
dec
push
or
lods
sub
scas
aaa
out
sbb
loope
ljmp
mov
mov
xchg
in
bound
clc
lret
arpl
jp
rorl
xchg
mov
paddusb
cwtl
int
mov
xor
enter
pop
xchg
shll
ja
or
arpl
scas
es
es
rorl
iret
mov
loopne
ret
stc
shlb
lcall
mov
add
add
lods
repnz
mov
sbbb
inc
sbb
add
fisubrs
test
pop
popf
lods
jmp
lods
push
mov
out
sub
xchg
inc
inc
mov
stos
add
ss
data16
gs
cmpl
sahf
dec
xsaves
movsl
lret
xchg
fwait
inc
add
mov
add
out
shl
mov
cmp
sbb
pushf
inc
sbb
cmpsb
dec
mov
add
adc
sub
xorl
imull
xchg
test
mov
add
jns
icebp
xor
adc
sub
out
mov
daa
add
mov
push
adc
mov
lret
scas
xchg
push
inc
daa
push
addr16
add
out
sub
inc
xchg
sub
xor
push
fstps
mov
cmp
fisttpll
and
jmp
fcomps
lcall
fdivl
cmp
add
aaa
adc
sbb
shll
dec
push
push
movsl
packssdw
push
or
leave
sbb
jmp
xchg
lahf
sub
and
and
dec
outsb
jbe
push
scas
sub
add
pop
mov
sbb
xchg
mov
lods
stos
jnp
add
jo
sub
jmp
les
sahf
sbb
and
sub
dec
push
cld
push
pop
and
jae
or
sbbb
and
dec
xor
mov
and
or
neg
jns
push
push
cmp
enter
push
loopne
std
dec
and
jge
int
and
or
pop
mov
add
add
sbb
sahf
sub
dec
mov
xor
daa
addb
sub
lcall
adc
add
push
xor
and
fildl
inc
sbb
outsb
push
add
orl
dec
mov
mov
mov
xor
adc
and
loopne
xor
sbb
dec
push
sbb
xchg
lods
js
ret
inc
sti
or
mov
pop
mov
call
fs
xlat
dec
es
js
mov
mov
mov
adc
mov
insb
xchg
jmp
mov
cmp
add
lahf
stos
push
mov
adc
mov
inc
cmp
add
scas
add
bound
xchg
sbb
cld
add
mov
jp
pop
pop
cmp
sbb
mov
sub
fldl
je
mov
loopne
cmp
jno
lcall
add
xor
js
imul
jo
pusha
adc
test
xor
lock
or
jecxz
cmp
sub
inc
adc
lods
loopne
push
lods
cmp
pop
push
sub
cmp
push
xchg
movb
add
inc
jle
div
loopne
adc
jb
jp
push
mov
push
out
int3
aaa
enter
icebp
mov
mov
fsave
ror
daa
push
cmp
cmpsl
imul
xorl
outsl
mov
pop
vmovddup
sub
outsl
stos
pusha
dec
addl
dec
push
ja
out
fisttps
sar
test
fistpl
pop
fcoms
push
in
mov
sbb
sub
cmc
push
in
inc
out
jp
jno
rolb
das
adc
jnp
call
int
add
out
mov
jo
or
pop
iret
sub
and
icebp
aaa
push
bound
xor
cli
sub
cmp
xchg
adc
mov
js
arpl
scas
es
xor
int3
adc
iret
iret
aam
inc
test
add
cmp
mov
incl
mov
add
ficompl
es
xchg
xrelease
lods
and
adc
or
in
adc
subb
pop
cs
and
es
stos
jge
mov
popa
or
add
and
and
fistl
xchg
mov
add
inc
mov
popf
jne
jne
xchg
aam
xchg
test
in
stos
push
mov
or
out
dec
icebp
cltd
out
sub
iret
add
mov
scas
dec
add
jl
stos
insl
inc
mov
icebp
lods
pop
ret
lods
adc
ljmp
adc
sti
push
sub
movsb
loopne
lock
pushf
popa
mov
sbb
add
insl
mov
lea
dec
hlt
jne
dec
sub
mov
insl
inc
nop
push
adc
push
scas
and
push
cwtl
inc
out
mov
aam
fimull
add
jns
pop
jo
mov
pop
adc
jno
mov
or
loopne
pusha
and
call
push
lods
jns
pop
and
lcall
adc
lock
rcrl
mov
daa
fistl
hlt
push
iret
hlt
pop
scas
add
mov
push
xor
inc
dec
add
mov
dec
pop
das
arpl
xor
lods
push
iret
outsb
and
ja
aad
pop
loopne
mov
or
sbb
push
mov
sbb
mov
fdivrl
mov
sub
pop
adc
enter
push
jnp
rolb
jp
or
add
sub
dec
loopne
jb
rol
add
pop
push
les
add
adc
jno
das
xadd
or
in
xchg
mov
cmp
inc
movb
scas
or
jnp
xlat
or
jmp
pop
add
roll
ja,pt
ret
rol
inc
fdivrp
or
out
push
sub
ret
js
sub
out
rol
orl
jmp
mov
adc
jbe
jne
scas
add
add
sub
push
sbb
and
sub
pushf
add
push
dec
mov
ja
xor
adc
and
inc
pop
or
jle
fidivrs
and
js
lahf
pop
and
jns
test
inc
adc
rcrl
xor
push
enter
fcomp
sub
add
movl
lahf
daa
push
sbb
rcl
xor
idivb
mov
cmp
xor
pop
sub
ds
sub
cli
out
jb
mov
data16
mov
and
push
fbld
cmp
and
mov
sub
and
clc
sbb
mov
cmpsb
mov
jo
js
and
mov
mov
push
xor
pop
loope
inc
test
cmpsl
pop
push
jmp
or
dec
cmp
shll
je
arpl
fdivs
push
fstpt
lret
jge
lcall
jle
in
jae
sbb
cmp
aaa
in
mov
lds
js
aad
mov
and
dec
rorl
mov
test
jmp
lock
fisttpll
mov
jle
jge
fistpll
push
js
push
and
adc
lea
add
jnp
inc
in
sub
loopne
and
cmpb
in
das
add
cmp
or
mov
mov
sub
das
das
push
ja
insl
jecxz
imul
jne
xchg
mov
iret
push
and
mov
in
test
shll
jl
or
subw
leave
add
or
and
push
push
sbb
xrelease
fwait
lret
push
imul
ror
imul
insl
pop
sbb
and
stos
je
test
mov
adc
int
mov
sbb
movsb
int3
in
cltd
dec
test
jae
or
pop
icebp
pop
sbb
idivl
pop
leave
or
or
call
cmp
pop
pop
arpl
dec
das
outsl
sbb
iret
test
add
jp
sub
icebp
cmp
cmp
bound
xor
pop
in
loope
mov
lods
bound
pop
push
or
repnz
lods
add
mov
pop
or
and
out
push
xor
dec
mov
xor
out
dec
call
mov
and
jmp
cmp
mov
dec
out
out
mov
mov
jae
lret
test
mov
rorl
sbb
and
mov
lret
test
lahf
icebp
mov
je
rcrb
mov
push
test
sub
mov
push
sbb
add
dec
xor
sbb
jl
add
sahf
jle
shrl
js
jmp
sub
pcmpgtw
mov
movsl
addl
jp
mov
test
pop
call
push
fwait
push
outsb
pop
jbe
mov
lret
dec
mov
mov
mov
ss
mov
push
stos
mov
mov
and
fcomi
xchg
cmp
xor
cmpl
or
sarl
shlb
or
loopne
and
add
daa
lcall
psubsb
ret
inc
sub
mov
add
add
inc
jb
nop
call
je
pop
xchg
and
pop
xor
or
xchg
popa
int
jno
jne
mov
aaa
push
loope
jnp
sub
hlt
dec
pushf
js
dec
mov
inc
add
jae
jb
cwtl
outsb
lds
rolb
inc
movsb
mov
cmpsl
mov
push
es
mov
flds
jno
cmp
mov
and
sbb
rolb
sub
in
mov
sbb
inc
push
shlb
push
or
add
dec
sbb
dec
xchg
sbb
cmp
addb
je
add
in
aad
cmpsb
or
xchg
dec
xchg
push
fsubrl
pop
cwtl
mov
sub
push
pop
cltd
sar
into
mov
mov
mov
scas
jg
das
jo
lods
js
add
or
and
das
stos
jo
sub
lods
subb
shrl
push
adc
pop
ja
sbb
pusha
and
ret
pop
lods
adc
add
sub
xchg
dec
cmp
rorb
orl
aam
sbb
mov
sbb
loopne
neg
xorl
loopne
int
test
mov
aaa
xchg
notl
adc
mov
in
jns
in
popa
adc
mov
jmp
xchg
das
ret
mov
sbb
inc
xchg
mov
sbb
mov
insb
jge
hlt
mov
inc
out
sub
mov
test
sbbl
imul
jmp
mov
mov
xor
inc
jmp
fcomps
lds
push
jge
cmp
mov
decl
sbb
notb
mov
pop
ret
enter
insl
iret
jp
ret
sbb
fmulp
lret
iret
sbb
insl
lret
movsl
cmp
lods
adc
sbb
fbstp
adc
shll
mov
pop
jno
fidivl
out
push
dec
add
adc
add
and
sbb
dec
and
leave
sbb
mov
jo
push
jmp
negl
mov
mov
xor
dec
pop
sbb
movsb
pop
imul
adc
mov
jnp
xor
fcmovnbe
push
xor
jp
mov
mov
dec
and
push
rcrl
mov
es
scas
pusha
jecxz
movsb
add
cmpsl
sub
push
sbb
lods
add
test
inc
les
cwtl
imul
cmpsb
push
xchg
mov
mov
or
cmpsb
data16
ss
xchg
cmc
dec
je
jecxz
pusha
mov
loope
stos
add
adc
into
in
inc
shlb
push
f2xm1
add
inc
xchg
or
jns
stos
inc
sub
iret
mov
mov
in
push
jo
test
sahf
add
adc
push
iret
mov
add
adc
add
jmp
sbb
pop
sub
xchg
mov
out
add
push
dec
aam
lret
sub
and
sub
push
pop
insb
and
lea
dec
sbb
sub
loop
cmp
mov
mov
cmp
inc
addr16
mov
inc
add
adc
outsb
lahf
add
and
jp
fcoms
orl
je
push
daa
prefetch
add
push
out
aam
pop
pop
mov
and
mov
xor
dec
inc
sti
sub
xor
into
mov
sbb
push
andl
lcall
fwait
mov
xor
and
addl
ja
dec
icebp
out
add
inc
nop
bound
mov
sub
pushf
cmp
sub
jge
push
shlb
push
in
or
stc
and
mov
dec
pop
call
jo
fwait
arpl
enter
sbb
les
jne
popa
iret
sbb
lds
adc
in
push
xor
loopne
or
jo
push
mov
push
mov
fs
mov
xor
arpl
mov
adc
cld
push
test
inc
aad
fnsave
cmp
mov
pop
pop
jl
clc
ja
arpl
cmp
outsb
cmpsb
faddl
dec
add
mov
notl
fwait
cmp
outsl
sbb
and
or
xchg
xor
stos
pop
sub
push
pop
push
adc
pop
ja
pop
in
adc
mov
push
push
xor
xchg
add
sub
mov
es
ds
rorb
add
cmp
xlat
sbb
mov
or
fisubl
add
scas
call
mov
inc
adc
movsb
out
cmp
nop
aas
mov
push
push
push
and
adcb
das
lahf
lods
dec
adc
js
or
mov
mov
add
xchg
repnz
sbb
mov
inc
in
inc
sti
xor
je
sti
out
and
push
rclb
fwait
xor
push
inc
dec
inc
fstpt
jp,pn
jg
push
cmc
shlb
int3
in
sti
sbb
pushf
add
xchg
add
add
fnsave
xor
stos
loope
loopne
push
data16
fcoms
mov
jno
test
mov
xchg
stos
xchg
ljmp
push
popf
mov
fsubrs
mov
and
sbb
and
inc
sahf
faddl
add
inc
push
out
add
add
in
jne
lcall
lret
outsb
insl
or
lock
test
sbb
das
inc
dec
or
pop
sti
add
aas
cmpsl
fsts
add
adc
push
repz
outsb
in
fmulp
mov
out
daa
adc
pushf
push
rcrb
jle
xchg
adc
clc
outsl
out
aam
push
and
icebp
int3
and
jo
inc
hlt
lcall
push
mov
cmp
push
hlt
test
adc
adc
clc
mov
outsl
sbb
iret
lcall
xchg
jno
fdivs
adc
xlat
or
dec
mov
aas
in
jns
loope
lret
jecxz
mov
mov
roll
lods
dec
scas
dec
stos
jp
fdivrs
or
xchg
lods
xlat
int
mov
add
xchg
mov
insl
leave
loop
jp
scas
rorb
lock
and
mov
jnp
fnstenv
out
adc
mov
mov
xchg
pop
faddl
icebp
or
scas
dec
add
add
add
pop
or
mov
or
push
or
scas
adc
mov
add
add
xlat
lock
xor
sbb
dec
push
dec
nop
adc
push
dec
xchg
mov
int3
dec
cmpsl
shrl
cwtl
arpl
lds
pop
mov
xor
int
sub
xchg
scas
loope
mov
stc
pop
mov
scas
pop
push
xor
out
ja
iret
xor
movsb
int
push
in
jns
cmpsb
cmpsl
dec
inc
cmp
inc
dec
jb
sub
jae
loope
xchg
xor
loopne
sub
iret
test
sub
es
popf
out
dec
dec
cmpsb
stos
xor
add
and
mov
test
in
movsb
popl
shll
test
fists
jge
and
mov
push
and
inc
out
xchg
or
js
lds
call
add
and
movsl
ss
or
cmp
add
push
dec
inc
scas
daa
add
adc
xchg
jecxz
cmpsb
rclb
and
push
cs
jno
testl
add
pop
xor
int3
imul
add
dec
dec
sub
sub
add
cmp
xchg
subl
cmp
sti
shlb
lahf
mov
jecxz
xor
iret
pusha
mov
xchg
adc
out
xor
enter
subb
mov
push
inc
jno
je
clc
xchg
jecxz
mov
xchg
imul
shl
xchg
add
xchg
jns
xor
cmp
sub
xchg
dec
lods
insl
cmp
subl
pushl
xor
inc
out
ja
dec
stos
jb
cmp
sbb
xor
lret
cmc
pop
and
sub
mov
add
test
in
dec
nop
int3
loopne
sub
xor
or
push
mov
sub
ds
pop
cs
mov
fists
arpl
add
mov
xchg
sbb
mov
and
je
jne
adc
call
mov
lods
ffreep
inc
xchg
pop
fnstenv
lret
jnp
cli
shlb
pop
mov
testb
mov
cmpsl
test
into
inc
jo
push
push
dec
cmp
rcr
movsb
roll
xchg
into
mov
mov
jb
xor
daa
inc
call
sbb
xchg
add
add
daa
add
aaa
lock
adc
and
jne
in
int3
leave
or
and
jbe
jb
fsub
pop
mulb
sub
jp
mov
mov
mov
pop
cmc
lcall
dec
cmp
mov
xchg
adcb
cli
popf
cmp
pop
mov
jl
insl
scas
dec
xchg
mov
ret
adc
add
and
adc
add
pusha
pop
push
fwait
out
adc
add
adc
ss
mov
mov
inc
sbb
fildll
adc
xor
sub
fildll
enter
daa
add
arpl
jae
sbb
out
mov
ret
mov
stos
lea
sub
add
mov
or
jbe
lds
adc
sbb
jmp
push
insb
aad
ds
push
fistps
stc
insb
nop
add
mov
jns
and
mov
enter
pushf
adc
mov
ds
and
xchg
test
adc
add
cmp
into
stos
adc
mov
ss
lock
in
rol
lds
test
xor
inc
out
jmp
dec
mov
arpl
leave
lret
fbld
and
test
lar
sub
cs
fs
daa
push
push
addr16
pusha
scas
out
dec
imul
imul
push
mov
sbb
loope
fmul
push
lods
mov
push
adc
jl
push
dec
pop
imul
cmp
daa
inc
lahf
and
js
add
mov
scas
popa
xor
rolb
imul
mov
jo
out
pop
jmp
mov
jne
jecxz
test
inc
xor
das
ret
imul
jecxz
outsl
ja
rcr
scas
adc
add
scas
aam
aam
mov
into
stc
push
sahf
cli
mov
lahf
test
or
std
xor
clc
inc
sbb
add
js
lods
sub
xor
dec
xlat
mov
jp
into
xchg
mov
and
cmp
adc
into
sbb
ds
and
mul
mov
jb
add
ja
xchg
xor
orb
enter
ljmp
push
mov
js
cld
and
dec
xchg
daa
in
sub
cmp
xor
into
nop
sub
pop
out
push
xor
jae,pt
cmpsb
cwtl
add
and
shlb
dec
push
xchg
cld
out
mov
pop
xor
push
or
pop
xchg
daa
xchg
je
add
jmp
push
in
jmp
movsb
testl
push
or
cmpsl
es
sub
inc
mov
push
aam
sbb
mov
sbb
test
les
sbb
int
mov
test
add
dec
das
mov
test
mov
xlat
insl
push
hlt
mov
and
mov
sub
add
mov
pop
es
cs
jge
and
xchg
addr16
sub
es
popf
mov
in
inc
mov
pop
mov
mov
insl
push
test
hlt
mov
sbb
pop
nop
in
jp
lahf
push
mov
iret
imul
or
das
and
cmp
jns
into
and
xor
sbb
cmp
outsl
sbb
addr16
leave
pushf
or
mov
loope
das
outsl
aad
mov
fimuls
adc
cwtl
xchg
cmc
add
dec
jmp
pop
xor
xor
mov
push
inc
pop
push
bound
or
xchg
subl
xor
rcll
rclb
sub
adc
in
or
pop
adc
jl
rolb
dec
es
mov
mov
aad
pop
add
sbb
addl
cmp
xchg
hlt
cs
push
sub
aaa
std
add
bound
daa
mov
and
or
xorb
mov
add
inc
mov
movsb
pop
fs
test
dec
inc
push
outsl
or
adc
push
iret
sti
lcall
les
add
test
stos
shl
je
jg
push
insb
push
leave
cmp
aam
insb
cld
pop
xchg
mov
je
fmull
dec
int3
dec
lcall
push
inc
bsr
xchg
add
jnp
mov
das
popf
jnp
movsb
and
out
shl
cmp
jnp
pusha
mov
pop
pushf
push
push
adc
popf
stos
ljmp
add
cmp
pop
cmp
shlb
cmp
pop
and
and
push
popf
loopne
call
js
addr16
push
mov
repz
jl
mov
xor
loopne
sbb
mov
jmp
data16
xchg
mov
lock
test
stos
sub
push
jge
clc
xlat
stos
dec
adc
sub
andb
insl
jecxz
jmp
sub
xchg
sub
cmpsb
xchg
cmp
xor
sbb
aam
lds
push
inc
outsl
inc
test
mov
dec
mov
outsl
and
in
lods
data16
inc
xchg
add
xor
lods
xlat
inc
mov
mov
mov
push
mov
mov
and
je
push
and
sbb
nop
xchg
rcll
xorl
sbbb
js
bndldx
inc
inc
mov
outsb
and
cmp
inc
and
enter
repz
add
mov
add
movsb
or
stos
pop
dec
call
int
jl
cmp
pusha
jbe
rorb
loope
pop
add
lods
lods
mov
and
pmaxub
ds
pop
inc
lcall
rclb
rcr
es
adc
inc
jp
jne
imul
lods
dec
das
mov
xchg
inc
ja
adc
test
orl
sbb
lret
sub
or
fildll
dec
iret
adc
test
out
push
rorl
sub
loope
test
mulb
sbb
in
hlt
pop
js
sbb
sub
add
in
test
cmp
push
xchg
push
xchg
mov
xor
inc
int
cmp
adc
cmpsl
out
or
je
cvttps2pi
sub
inc
cmp
push
mov
mov
and
lods
adc
mov
jmp
xchg
in
mov
mov
adc
dec
shlb
idivl
imulb
data16
sub
and
add
and
mov
enter
mov
pop
inc
lahf
mov
divb
int
add
or
sub
fucomip
bound
mov
jmp
pop
outsl
stos
pop
xchg
add
dec
js
fcompl
loop
mov
aas
mov
mov
lock
insb
inc
mov
mov
sub
scas
add
lods
iret
bound
repz
pop
add
pop
inc
mov
aad
mov
rcrb
sbb
sbbb
mov
or
xor
xor
cmp
xor
push
mov
fsubl
mov
mov
ss
lods
pop
orl
in
pop
cltd
mov
mov
inc
push
icebp
ja
jecxz
sbb
lahf
aad
je
or
xchg
and
pop
and
inc
scas
inc
popa
repnz
adcb
add
sub
cltd
scas
xchg
xchg
lds
and
dec
push
sbb
or
mov
test
int
xor
push
dec
sarb
dec
xlat
dec
loope
cld
in
sbb
jo
add
sub
xchg
shll
addr16
push
loop
inc
loop
test
or
add
sub
push
inc
mov
mov
lds
inc
push
cwtl
or
adcl
and
mov
sbb
mov
inc
mov
xor
or
mov
pop
jp
xchg
jb
jle
data16
adcb
push
sarl
jno
xchg
xor
xor
shlb
jge
sahf
adc
shr
aas
pop
rclb
mov
adcl
ljmp
xchg
cli
sub
sbb
pop
mov
inc
push
clc
sub
mov
mov
mov
sbb
sbb
sub
imul
mov
jmp
jne
pop
inc
lcall
cmp
fadds
push
bound
clc
movsb
mov
into
lcall
out
xchg
js
aaa
pushf
int3
rcrl
and
lods
scas
adc
js
out
push
mov
push
inc
sbb
mov
inc
sub
inc
out
xchg
sbb
dec
pop
lcall
cmp
pop
outsl
inc
insb
rorb
shrl
adc
or
xchg
js
pop
flds
sbb
lcall
in
jb
add
xchg
add
mov
out
dec
pop
add
inc
dec
inc
or
aad
sub
cmp
jne
or
sub
jp
jbe
xchg
pop
inc
out
mov
aam
add
stos
out
push
jnp
adc
mov
cmp
cmp
orb
cmp
and
inc
subl
adc
andb
add
or
dec
dec
dec
xor
mov
inc
and
or
sub
dec
pop
in
mov
mov
clc
stos
fiadds
enter
mov
shll
xchg
or
sbb
inc
sahf
dec
adc
jb
shll
mov
add
pop
or
xor
fsubs
mov
test
pop
add
add
add
xor
sub
sbb
jno
mov
addl
and
lds
shlb
mov
xchg
sahf
push
xchg
and
mov
popa
mov
add
jnp
adc
jp
jp
xor
jnp
sub
pop
repnz
addl
pusha
adc
dec
stos
or
sub
sub
xor
popa
mov
mov
mov
and
jae
cld
push
ss
adc
loopne
fidivl
mov
push
and
pop
dec
pop
aam
add
add
lret
bound
in
mov
sub
or
push
push
push
dec
popa
daa
in
std
pop
sub
fwait
imul
fidivrl
insl
test
xchg
jne
add
inc
and
push
int3
nop
jmp
adc
and
push
mov
test
jg
add
nop
jbe
stos
cli
je
adc
pushf
sub
xchg
or
push
xchg
mov
cmp
and
addr16
adcl
fisubrs
cmp
push
fnstenv
push
xchg
aam
pop
dec
mov
sbb
mov
test
and
add
add
add
insl
cmp
fs
mov
mov
adcl
fiadds
mov
cld
aad
and
xlat
mov
inc
jp
xchg
jno
ret
and
dec
es
dec
loope
pop
test
jmp
xor
pusha
sbb
push
rcll
cmp
inc
xchg
jmp
mov
dec
and
inc
xor
popa
cmpsb
psubusw
xor
outsb
push
push
xor
add
cwtl
in
and
dec
push
xor
push
mov
push
mov
adc
and
inc
nop
sub
iret
lahf
xor
sbb
clc
mov
jne
mov
rcr
jae
aaa
dec
aam
sbb
sbb
or
andb
xor
lock
icebp
mov
sub
mov
jno
sbb
imul
cld
mov
iret
loopne
mov
dec
push
add
push
push
jns
sbb
and
jno
add
fcoms
int3
mov
ljmp
sbb
popl
push
dec
push
cld
iret
rorb
add
and
cmp
hlt
fmull
push
xchg
pushf
pop
cmpsl
pop
mov
insl
inc
out
push
filds
fwait
xchg
addb
lds
setge
pop
mov
je
jp
fcomp
subb
das
iret
ljmp
inc
std
and
sbb
cmp
mov
adc
sub
cmc
lods
jp
xchg
femms
xchg
ret
outsl
mov
jns
cmp
jae
lret
push
cli
dec
adc
iret
mov
adcb
xchg
jb
in
je
cmp
sub
xor
lret
sub
testl
out
in
fdiv
sub
push
nop
rclb
scas
out
push
fwait
add
push
mov
mov
or
sti
leave
subl
fwait
or
cmp
data16
adcb
inc
outsl
push
je
pop
fdivl
mov
pusha
and
sub
and
into
out
addr16
mov
or
fwait
mov
sbb
push
rolb
push
add
ficompl
outsb
add
add
cmc
jns
add
sub
xchg
adc
mov
xchg
fcomps
add
jecxz
or
xor
push
add
iret
cmp
dec
mov
push
es
xchg
sbb
pop
xchg
icebp
jp
movb
loope
or
je
cli
xchg
add
dec
jo
dec
ret
pop
cmpl
addr16
lahf
inc
add
and
insb
movb
xchg
inc
fildl
adc
pop
add
sub
sbb
ret
inc
pushf
inc
cltd
mov
stos
xchg
mov
push
pop
jmp
or
sbbl
dec
push
adc
inc
loope
dec
aaa
das
ss
xor
lcall
fwait
mov
pop
sub
jne
pushf
adc
pop
test
test
add
sbb
sysexit
or
outsb
sbb
stos
js
les
xchg
leave
xor
es
test
jb
adc
ret
orb
neg
mov
cmp
dec
add
push
add
inc
ljmp
xchg
fmuls
lds
cmp
pusha
dec
iret
and
or
push
cmp
or
je
das
jp
jnp
dec
incl
mov
xor
lret
jae
dec
fwait
push
or
out
inc
or
inc
je
sbb
sbb
and
mov
xchg
pop
ficoml
and
and
rcrl
and
gs
sahf
aad
push
out
sub
cmp
and
cs
mov
lods
jbe
xorl
adc
and
es
mov
cmp
in
filds
out
and
inc
ror
mov
ljmp
dec
mov
stos
pop
ret
in
outsl
adc
pusha
jbe
ret
popa
and
push
xchg
mov
ret
aam
jle
cmp
and
and
clc
sar
push
dec
xchg
mov
xlat
pop
pop
xor
out
stos
insl
add
and
or
xor
push
adc
mov
es
adc
mov
mov
cmc
je,pn
push
adcb
lea
ret
lock
bswap
pop
ficoml
or
inc
cmc
and
ja
mov
push
pusha
push
cmp
mov
add
xchg
arpl
sbb
push
fnstsw
jmp
mov
jle
xchg
shlb
jo
push
add
fldt
insl
mov
and
outsb
shlb
xor
mov
xchg
pop
xchg
mov
xor
call
and
shll
xlat
scas
cmp
pusha
hlt
js
call
add
xor
call
or
xor
push
mov
imul
adc
dec
out
jbe
int
pusha
xchg
out
and
sbb
add
and
das
pop
inc
push
xchg
add
push
ret
mov
loopne
inc
xchg
dec
mov
insb
xor
xor
sbb
and
rolb
and
cs
pop
add
dec
xor
push
add
xor
pop
adc
popa
xchg
ljmp
cmp
adcb
sub
or
push
out
negb
adc
mov
push
mov
xor
mov
push
xchg
mov
addr16
iret
lods
cmp
bt
out
mov
int3
mov
fld
js
lock
ret
push
in
sbb
aaa
int3
clc
imul
popa
outsb
sbb
std
push
enter
add
cmp
out
int
notl
mov
or
mov
push
mov
nop
stos
data16
inc
inc
mov
add
movsl
pop
mov
xor
xor
daa
jnp
mov
mov
or
mov
mov
fstps
mov
je
push
lds
inc
scas
adc
adc
in
in
test
shrb
xor
push
inc
mov
lret
aaa
ret
ret
xchg
in
or
xchg
pop
add
aam
jp
xlat
jecxz
mov
add
sbb
icebp
inc
dec
xchg
lock
sbb
mov
inc
in
les
pop
imul
mov
icebp
dec
sbb
imul
adc
mov
push
in
or
inc
lahf
mov
les
add
jmp
cmpl
push
cld
test
test
jge
popf
dec
mov
push
dec
pop
outsl
pop
mov
jle
jle
and
pop
adc
enter
sbb
xchg
or
mull
mov
dec
bound
daa
add
or
xor
jae
mov
nop
pop
xlat
push
mov
dec
mov
inc
or
mov
outsl
into
xor
jae
arpl
stos
das
sub
push
mov
hlt
nop
std
cmp
or
std
movsl
sbb
inc
cmp
dec
push
dec
sub
xor
inc
roll
mov
test
or
push
pop
xor
add
test
in
sbb
add
pop
add
daa
icebp
push
add
push
adc
mov
jne
mov
push
nop
ljmp
stos
pop
jno
pop
add
test
and
insl
pop
xchg
lock
mov
cmpsl
push
cmpsb
and
xor
cltd
bound
pushf
orb
push
and
test
push
lock
dec
mov
fsubl
lret
inc
jecxz
int3
sahf
or
stc
inc
ficoms
pop
adc
aad
xorl
cltd
dec
lods
mov
or
jmp
or
cmp
lods
in
fldenv
gs
mov
add
inc
push
aas
add
sbb
call
jl
inc
ret
pop
mov
ds
mov
cmpl
sub
push
dec
out
push
aam
pop
xchg
out
cmp
fimull
adc
ret
and
xchg
pop
lods
test
and
push
dec
loopne
inc
or
aad
fmull
push
and
adc
jp
dec
xor
fldl
scas
push
jno
outsl
xor
xchg
enter
es
pop
dec
inc
adc
pusha
enter
mov
mov
mov
adc
iret
outsb
add
ljmp
shll
or
cmp
xor
outsl
lcall
jno
mov
out
add
adc
add
hlt
iret
cmpsb
mov
lds
jns
cmp
add
or
sub
out
push
inc
sub
sbb
ss
popf
xchg
bound
mov
xchg
mov
movsb
sti
imul
push
adc
adc
pop
orb
sub
push
mov
jbe
rcl
adc
mov
es
dec
rcl
dec
add
or
gs
mov
adc
mov
daa
cwtl
daa
movsl
or
int3
and
inc
add
imul
in
add
addr16
cmp
in
dec
jne
mov
inc
push
aas
jle
dec
adc
fcoms
and
inc
mov
mov
out
dec
fists
xorl
or
leave
and
es
mov
in
push
or
jbe
xor
inc
add
jl
pushf
push
fsts
jne
mov
sub
push
or
fnstenv
sbb
add
jno
adc
sub
push
xor
add
pop
inc
loopne
mov
ja
push
pushf
xchg
mov
fnstcw
out
sbb
orb
jns
jo
arpl
push
aas
dec
cmp
mov
adc
sub
fdivrl
gs
lcall
andl
nop
stos
movsb
enter
in
cmpsl
add
cmp
mov
pop
ja
shlb
jbe
pop
lret
inc
add
popa
push
jo
jmp
jo
mov
shlb
mov
dec
movsl
outsb
add
rorb
imul
mov
mov
pop
shll
fldt
into
and
fwait
sub
adc
loopne
rcll
leave
inc
jae
jo
mov
mov
rclb
jb
scas
mov
ret
subb
in
loopne
and
ds
jecxz
inc
inc
subb
or
push
xor
mov
outsb
daa
sub
dec
jge
jns
and
popa
or
rol
popa
test
aad
xor
js
push
fistps
sub
and
popf
inc
shll
outsl
pop
rcrb
cmp
cmpsl
out
push
jno
and
sbb
rcrb
and
and
dec
jl
push
mov
loopne
adc
xor
mov
cmp
das
cli
lcall
xor
lods
flds
pop
pop
push
add
test
pop
push
dec
xor
rcrl
pop
adc
adc
mov
push
inc
xor
sbb
daa
xlat
adc
mov
mov
test
push
adc
and
push
and
inc
cmpsl
fstp
test
inc
adc
iret
push
shl
sbb
into
pop
sub
imul
inc
xor
ja
cmp
mov
add
arpl
push
jl
popa
xor
lods
xor
adc
pop
push
addr16
and
daa
mov
sub
aad
movsb
fadd
loope
in
jne
xchg
sub
xchg
fsts
in
loopne
je
test
out
xor
dec
dec
add
mov
dec
add
shl
std
leave
push
scas
out
xor
test
sub
and
ljmp
scas
out
call
and
call
cmp
jmp
jecxz
loope
xchg
inc
add
test
in
push
cmpsl
arpl
sarb
cmp
pop
repz
loop
or
jnp
jle
and
cwtl
loopne
dec
push
jge
out
xor
and
outsl
jg
outsb
ja
lods
mulb
std
cmp
add
jp
movsl
test
add
call
xor
mov
xor
pop
andb
pop
inc
adc
or
adc
jne
inc
push
aaa
pop
sub
mov
adc
sbb
pop
push
jns
dec
shrl
fisubs
xchg
mov
call
dec
pop
mov
jnp
and
cmpsl
orb
je
lods
and
xchg
xchg
fstl
push
cs
pop
inc
or
sti
aaa
pop
bound
push
daa
sahf
fs
out
adc
bound
fistl
sub
and
flds
sub
inc
mov
and
xchg
pop
fs
daa
pop
add
adc
les
push
xlat
push
cmp
int3
sti
sbb
push
cmpsl
or
mov
out
sub
adc
mov
mov
add
scas
mov
sbb
xor
or
add
in
xchg
xor
cwtl
cmp
pop
add
mov
jmp
pushf
ljmp
int
outsb
sbb
test
mov
adc
inc
shll
inc
push
or
call
mov
in
testl
mov
jne
adc
rcl
test
js
mov
arpl
xchg
out
and
and
or
inc
jno
sub
xchg
and
movsl
outsl
dec
xor
xchg
lea
push
popa
dec
push
shlb
pusha
test
push
scas
gs
dec
repnz
jno
out
xchg
cli
pusha
mov
cmp
ret
in
aas
push
push
ss
test
add
dec
push
inc
mov
add
xchg
or
sahf
imul
rcrb
jecxz
aas
imul
xchg
ljmp
xchg
fistps
push
out
bound
xlat
and
add
push
lds
and
sbbb
enter
and
push
test
mov
loop
dec
sub
and
mov
cmp
mov
and
enter
aas
sbbb
dec
add
adc
jp
xor
xchg
sbb
test
hlt
inc
rolb
jne
in
inc
push
or
outsl
push
sub
cmp
push
and
inc
or
inc
fldcw
pop
inc
cmp
sub
add
test
add
dec
add
add
adc
xchg
dec
inc
xor
adc
mov
lods
filds
xor
xorl
pop
add
pop
xor
add
mov
int3
fisubl
lock
jo
adc
gs
mov
cmp
mov
sbb
call
roll
xchg
push
and
mov
mov
scas
ja
push
xor
pusha
pop
mov
push
pop
push
add
ljmp
leave
daa
test
add
sbb
out
icebp
adc
fisttps
pop
in
inc
xor
adc
mov
add
xchg
out
mov
sbb
ret
xchg
mov
jno
shrb
stos
push
ret
sbb
int
enter
xchg
jg
mov
mov
push
or
mov
and
mov
subb
mov
adc
adc
les
shrl
cmp
push
adcb
mov
pop
hlt
popf
cmc
mov
loopne
and
andl
pop
pop
loope
adc
inc
mov
xor
mov
inc
outsl
sub
sub
sub
dec
divl
push
sahf
call
jp
mov
ficomps
add
je
in
movsb
or
adc
xchg
or
mov
repz
push
rolb
dec
inc
jno
mov
pop
jp
inc
scas
subl
adc
or
aam
call
mov
insb
pop
mov
jb
or
clc
mov
pop
aas
mov
rcl
stc
mul
adc
lods
add
das
mov
vpshldd
dec
xor
inc
sub
xor
jno
loop
test
pusha
xchg
lea
pushf
adc
cli
mov
or
sbb
orb
mov
mov
mov
pop
jbe
fnsave
fstps
pop
lods
cmp
push
mov
sbb
mov
fldenv
add
lods
xlat
adc
jg
test
fsubrs
bound
in
scas
lret
adc
add
out
out
shrl
mov
mov
xor
xor
mov
add
push
add
stos
lods
cli
jg
es
mov
shl
jne
jecxz
shlb
xchg
xchg
test
fistpll
clc
mov
into
fsubrs
push
mov
xor
and
loopne
xchg
add
mov
sbb
jnp
sub
hlt
dec
andb
addr16
sahf
xor
inc
xor
sbb
mov
hlt
sbb
pop
jmp
adc
ret
call
push
scas
and
sbb
push
testb
adcl
xchg
mov
dec
mov
sub
pushf
in
adc
inc
loop
sub
xchg
mov
into
shll
mov
nop
test
dec
loope
adc
lret
pop
fcomps
inc
cld
stos
je
inc
mov
jno
in
mov
lea
sahf
mov
sub
jmp
mov
int3
xor
jmp
sub
add
sti
push
push
movsb
mov
lea
and
iret
cmp
call
sub
inc
in
sub
lock
pop
test
shlb
addb
add
mov
adc
mov
ja
xchg
mov
jbe
ss
adc
or
xchg
pop
dec
jl
mov
je
sbb
pushf
xor
xchg
jp
adc
dec
sub
sub
mov
fimull
mov
add
icebp
orl
out
mov
add
inc
dec
aad
mov
push
movsb
dec
shrl
mov
dec
fcom
add
and
in
inc
xor
or
cs
sbb
inc
xchg
in
scas
es
std
test
pushf
pop
fwait
je
popa
mov
cltd
or
je
dec
lret
mov
sbb
cmpb
xchg
xor
pop
cmp
sub
xchg
in
imul
data16
sub
or
pop
addb
roll
and
flds
pop
divl
sub
pop
xchg
pop
and
push
push
pop
aaa
add
fdivs
push
fisubl
out
sub
mov
or
jg
loopne
flds
scas
addr16
orl
fldl
sbb
adc
pop
jo
fdivp
sub
pop
mov
lds
pop
popa
cmp
mov
mov
mov
js
mov
icebp
mov
mov
ljmp
pop
addr16
dec
addr16
cmp
addr16
push
fldl
lods
sub
sub
lret
push
mov
mov
outsl
aaa
cli
lds
mov
and
and
mov
das
popa
das
js
cli
cmpl
inc
jbe
pop
inc
mov
lods
pusha
loopne
push
incl
lods
in
lcall
push
jno
hlt
push
outsb
jae
push
xchg
push
sub
pop
adc
pop
fcoml
jno
pop
cmp
push
lods
cmp
dec
mov
cmp
xor
outsb
sbb
sub
fcoml
addr16
call
aad
or
push
ds
ss
divl
imul
and
xchg
in
sbb
sub
or
mov
lods
pop
lret
nop
mov
mov
mov
add
inc
out
add
jge
andb
gs
dec
into
jo
sbb
cld
cmp
popa
inc
adc
sbb
popf
fists
xchg
xchg
adc
outsb
adc
das
adc
lret
jb
mov
cmp
adc
add
fnstsw
jnp
sbb
hlt
lods
or
pop
ja
push
sbb
pop
shrl
scas
lcall
andb
cmp
cmp
pminub
mov
mov
and
and
roll
test
xor
jb
mov
and
insl
fldt
sub
jp
add
xlat
pop
loope
pop
and
cmp
sahf
sub
push
push
aas
xor
pop
push
pop
lret
cmp
pop
ja
dec
test
add
push
call
outsl
jp
scas
imul
push
aaa
or
pusha
adc
int
or
sbb
pushf
outsl
test
mov
insb
das
sub
stc
mov
push
sub
std
jl
adc
into
hlt
in
ds
xlat
jbe
pop
das
xor
and
inc
sub
jnp
and
scas
insl
das
inc
loop
fstps
push
pop
ja
xor
fdiv
sbb
scas
pop
sub
daa
js
pop
mov
test
das
fs
fmul
fs
pop
adc
sbb
aam
add
sub
mov
addr16
movsb
cmp
daa
push
sub
test
mov
inc
in
movsb
inc
dec
stos
pop
das
inc
jmp
dec
stc
xor
cmp
push
pop
or
sbb
xor
ds
mov
inc
adc
fadd
cmp
pop
cmp
jae
push
orl
loopne
mov
lods
sahf
mov
push
xor
xor
sub
stos
repnz
int3
jb
fidivs
and
add
outsl
mov
pop
int3
test
xchg
scas
test
cli
mov
shll
or
lcall
add
push
jo
aam
lods
fisubs
out
adc
mov
xchg
lods
nop
pop
add
mov
cli
repnz
push
add
sub
lods
push
add
mov
aam
jno
arpl
roll
neg
insb
sbb
inc
add
or
mov
adc
jno
jle
push
lods
pop
add
mov
aas
shrb
enter
repz
mov
cmp
stos
push
movsb
ja
rorl
ss
cmpsl
pusha
jae
xchg
cld
inc
out
mov
mov
fimuls
test
xor
inc
jg
inc
aad
push
je
fisttps
loopne
add
andl
ljmp
xchg
push
xor
adc
sbb
insl
arpl
arpl
scas
jg
and
cwtl
clc
jnp
and
push
pop
push
fadds
xchg
dec
push
aam
int
stos
mov
mov
push
mov
movsbl
jl
js
jmp
jle
js
sub
hlt
pop
ds
divl
sbbb
popa
cmp
inc
mov
mov
inc
add
scas
shlb
scas
pusha
dec
push
add
and
aaa
xor
inc
gs
or
and
sbbb
add
add
lcall
cltd
sbb
lods
lret
sbb
jb
add
fnstenv
jge
ret
sbb
xor
aaa
shl
nop
mov
lods
cwtl
sbb
sbb
in
mov
add
jmp
xchg
pop
mov
sub
sub
cmp
ljmp
je
sarl
ja
jbe
cmp
daa
cltd
push
jmp
in
push
mov
inc
cwtl
jno
xlat
arpl
sub
test
xchg
addr16
fcompl
out
xchg
inc
out
cli
andl
adc
jb
mov
jo
xchg
push
loopne
ss
push
add
push
js
imul
push
xor
push
rorb
push
jmp
mov
je
adc
pop
cmp
movsb
inc
int
mov
mov
cld
sarl
push
cmc
or
fildl
push
lods
jbe
fstl
push
lcall
cmpsb
je
push
jle
push
das
int3
xchg
out
xchg
fsubr
aam
add
pop
and
jae
pop
jmp
outsb
pop
jbe
push
adc
fwait
ds
rcrl
xchg
push
lds
je
popa
lock
sub
insl
shlb
hlt
idivb
cs
and
bound
and
lea
adc
ret
loopne
adcb
int
pop
sub
sbb
scas
ret
adc
sub
jbe
jb
mov
and
das
inc
popl
shrd
leave
mov
andl
sub
xor
jb
dec
icebp
je
jmp
inc
push
in
mov
xor
dec
insb
fildl
adc
popf
sti
ret
test
cmp
or
mov
mov
mov
jae
or
cltd
jo
sub
dec
jo
sub
jne
push
aad
push
xor
or
cmc
jne
out
sbb
pusha
and
push
mov
pop
inc
pop
inc
pop
push
adc
add
rolb
imul
stos
cmp
out
lea
add
mov
mov
or
nop
mov
invd
adc
add
out
mov
mov
push
arpl
add
insl
shrl
sub
ficompl
and
pop
dec
daa
add
pop
dec
shlb
xchg
push
or
mov
mov
into
lret
pop
lahf
add
into
imul
inc
push
jno
cmpl
dec
mov
sbb
and
sbb
into
mov
sbb
sbb
dec
add
ja
mov
mov
sub
das
mov
and
inc
test
ja
call
jmp
ss
inc
imul
and
inc
jb
ffree
cmp
or
notb
adc
jae
cmp
out
pushf
add
iret
sbb
xor
loopne
xor
adc
pop
call
repnz
insb
adc
fcmovnu
mov
inc
inc
xor
xor
scas
stos
test
adc
shll
dec
iret
mov
mov
xchg
pusha
notb
xchg
sub
xor
pushf
mov
lcall
bound
add
sub
mov
imul
out
cmp
ret
or
int
jle
arpl
loope
scas
cltd
dec
iret
notl
rcrb
jmp
fisubs
mov
addr16
pushf
inc
test
jge
inc
mov
outsb
addb
inc
adc
mov
iret
push
xchg
push
inc
pop
xchg
add
mov
or
in
push
adc
adc
cvtps2pd
loopne
push
pop
dec
scas
mov
imulb
mov
fldenv
cmp
inc
movl
ret
inc
or
and
shl
mov
inc
pop
inc
loopne
and
loop
ret
mov
jnp
hlt
dec
xchg
mov
les
sub
or
mov
mov
xchg
test
ret
adc
sbb
dec
cmp
dec
hlt
adc
aam
nop
xchg
aas
imul
test
popa
in
and
pop
mov
pop
inc
push
push
jns
in
or
push
mov
dec
adc
daa
pop
lock
inc
movsb
fs
inc
daa
sbb
xor
notl
ret
inc
xchg
dec
add
jo
inc
shrl
jmp
sub
mov
push
subl
inc
aad
and
lea
push
lds
or
inc
loope
and
push
sbb
cmp
push
push
pusha
sub
stos
es
push
out
lds
inc
loopne
sbb
arpl
iret
test
and
inc
push
cld
into
jp
in
stos
pop
add
sub
je
dec
rcrl
lods
stos
and
ljmp
jbe
jno
pop
xor
adc
jmp
je
mov
adc
adc
add
popa
and
push
dec
int3
stos
adc
or
jp
push
inc
jnp
xor
dec
mov
jge
adc
icebp
and
pop
xor
clc
inc
adc
inc
ret
sbb
dec
jns
ret
es
in
xor
repnz
cmp
into
testb
aaa
cld
fidivl
mov
pop
xlat
addb
hlt
and
dec
xor
push
pop
mov
cmpsb
add
and
hlt
xlat
das
add
add
push
pushf
popf
cmp
arpl
inc
sahf
sbb
pop
mov
push
nop
test
mov
dec
mov
push
bound
je
push
fucomp
mov
xlat
mov
add
aam
enter
add
rolb
cmp
xor
cmc
xchg
dec
cs
adc
fdivl
and
dec
sub
xchg
in
jl
push
adc
pop
push
sbb
push
xchg
stos
jecxz
and
insb
jge
inc
into
lods
loop
lret
or
mov
cltd
dec
sub
adc
test
call
mov
addl
jne
mov
rol
and
outsb
xchg
pusha
dec
or
movsb
pusha
add
addr16
daa
inc
mov
faddl
mov
jmp
and
fcmovu
mov
jmp
inc
jmp
xor
sub
test
jp
scas
daa
rcll
pop
xor
fucomi
and
sbb
jo
mov
jns
cmp
xchg
pop
push
cmp
mov
sub
lock
jne
popf
pop
call
cld
hlt
scas
inc
or
pop
shl
pop
les
jns
or
mov
sbb
or
fimuls
inc
jno
cwtl
sbb
xlat
add
jno
xchg
xor
in
adc
fstpt
loopne
test
shl
mov
movsb
es
je
inc
cmp
mov
test
out
mov
lods
je
push
addr16
pop
insl
push
leave
push
or
mov
mov
add
lods
jns
xor
aaa
add
scas
bswap
sub
lock
adc
cmpsb
into
icebp
into
shlb
cmpsb
out
adc
xchg
jne
xchg
xlat
push
jl
clc
js
mov
mov
rolb
imul
xchg
sbb
sub
idiv
loop
or
push
lret
push
aam
add
sbb
iret
jle
cmp
les
loop
add
lods
xor
rcrb
adc
jo
cmpb
push
scas
frstor
push
mov
mov
rclb
cmp
shl
rorl
pop
lods
mov
roll
cmp
push
loope
or
scas
lods
xchg
and
shlb
sbb
push
push
adc
adc
sub
xor
imul
adc
mov
cmpsb
and
add
jp
and
faddl
unpckhps
dec
and
adc
popa
mov
les
call
xor
and
shl
push
adc
mov
pusha
dec
sub
inc
addr16
adc
pop
or
fldt
jne
xor
mov
sbb
cwtl
adc
cmp
mov
cmp
and
popa
cmc
and
inc
xor
ja
mov
xchg
bound
and
andb
scas
xor
loopne
jo
dec
sub
mov
addr16
nop
add
ss
bnd
or
sub
mov
jmp
dec
cwtl
dec
add
mov
jp
cmpb
add
roll
adc
shlb
je
add
data16
inc
push
pop
pop
cwtl
jae
push
xor
into
add
jmp
pop
aad
out
xchg
pusha
fidivs
cmp
test
je
and
pop
rol
insl
pop
jg
daa
stc
inc
outsl
push
mov
pop
mov
in
mov
add
pop
stos
mov
and
mov
daa
mov
mov
pushf
mov
xorb
push
push
loop
push
cmp
adc
dec
mov
inc
and
pop
mov
bound
scas
push
push
adc
or
cwtl
into
and
or
sub
dec
xchg
pop
cmp
jle
or
out
push
ret
ret
or
add
aas
add
sub
divb
dec
stos
cli
ret
mov
and
xor
and
sbb
clc
jg
aaa
add
jbe
xchg
lds
pusha
ret
xor
or
jno
xor
outsb
adc
mov
mov
bound
push
js
rcll
inc
insb
scas
mov
or
in
test
jg
mov
pop
or
popf
xchg
mov
out
mov
and
sub
and
mov
gs
pop
mov
sub
and
lock
add
ret
imul
fbstp
movsl
outsl
adc
lds
mov
push
adc
jnp
adc
push
cwtl
push
nop
add
fnstcw
fadd
pop
add
pop
and
push
mov
xor
adc
push
icebp
lock
rorl
popf
pop
mull
xchg
daa
inc
jnp
daa
or
push
mov
dec
cmp
jge
xchg
cwtl
leave
mov
cmc
xor
adc
popfw
pop
mov
cmpl
insl
xlat
lahf
dec
push
and
cmc
lods
cltd
dec
daa
mov
mov
sub
push
dec
mov
scas
or
dec
insb
es
shlb
in
push
push
es
aas
or
inc
cmp
and
call
lahf
cmp
add
add
shl
mov
inc
lods
fistpl
loopne
insl
popa
jns
jne
xor
addr16
test
cmpsl
insb
sub
adc
dec
push
xor
ja
sbb
ret
test
pop
outsl
mov
sti
push
add
es
das
fsubs
inc
add
jg
loopne
push
mov
add
cwtl
adc
mov
add
popf
or
insl
push
andb
mov
mov
out
in
addr16
xlat
inc
and
into
pop
les
sbb
inc
dec
and
xor
push
aaa
mov
outsl
xchg
int
mov
pop
sub
mov
cmp
sbb
ret
daa
xlat
hlt
loopne
aad
popa
cmc
mov
add
jg
xchg
inc
add
sub
or
sub
mov
mov
je
int3
sub
les
sbb
loop
lock
push
push
test
ds
out
push
pop
jmp
sbb
mov
sub
add
jne
cmpsb
addb
sti
jle
sarl
and
lret
cmp
loopne
adc
mov
out
adc
pusha
xchg
cmpsb
andb
mov
cmp
inc
cmp
cld
cmpsl
test
xlat
cmpl
push
and
adcb
adc
mov
lcall
rcll
xchg
sbb
pop
mov
jbe
pop
xor
adc
adc
repz
hlt
das
jo
shlb
pop
xlat
jbe
sbb
arpl
int
xor
rolb
jne
sub
mov
pop
push
xchg
int
adc
rolb
pop
loopne
test
add
int
out
fst
mov
loope
fdivl
push
and
sub
movsl
js
jno
dec
in
and
and
inc
sbb
fdivs
sub
out
mov
lcall
xor
out
stos
xor
into
popa
add
sbb
fidivrl
lcall
xchg
jae
dec
jb
xor
cwtl
ja
pusha
adc
push
mov
xlat
jns
mov
adcl
into
popf
mov
or
test
add
sahf
xor
inc
inc
xor
pop
aam
insl
test
mov
lret
mov
xchg
data16
and
mov
mov
cmc
xor
movsl
xor
fidivl
and
push
cmpsl
jle
daa
pop
xor
popa
adc
xchg
js
insl
push
and
dec
mov
es
insl
cmpsb
mov
xchg
or
push
push
jp
xchg
sbb
fs
jbe
add
pop
jbe
push
xor
aaa
popf
jno
or
and
and
ret
mov
rclb
or
xor
mov
ljmp
adc
inc
xor
mov
or
add
mov
sub
add
sti
pusha
adc
stc
or
hlt
rorb
and
js
pop
cld
inc
jo
fldl
pop
fcoms
orl
adc
xorl
and
inc
sbb
decl
dec
add
scas
pop
fcmovnu
lcall
sub
test
shlb
out
and
mov
es
push
dec
mov
lea
inc
sub
fistps
mov
call
adc
popa
mov
add
pop
aaa
mov
loop
mov
inc
mov
add
pop
sbb
or
jle
pusha
add
ret
into
adc
dec
cltd
lods
pop
popf
aam
sub
daa
lahf
and
andl
adcb
push
cmp
inc
andl
push
sbb
bound
mov
push
js
fildll
add
inc
cmp
fstpl
adc
ja
aad
sbb
mov
pop
jae
enter
dec
push
ret
out
jp
and
push
popf
sub
dec
sahf
test
push
mov
or
mov
adc
and
xlat
dec
stos
mov
loopne
jmp
aaa
mov
ljmp
inc
mov
dec
or
mov
push
adc
adc
mov
mov
ds
mov
ljmp
adc
mov
jno
xorl
jo
popa
les
sbb
or
test
push
sbb
mov
aaa
xlat
add
or
and
inc
add
daa
push
mov
pusha
roll
xor
sub
jnp
negl
or
push
aaa
xor
test
xchg
jmp
pop
les
add
aaa
sbb
jnp
mov
sbb
jge
sbb
mov
adcl
cmpsb
or
out
popf
add
int
aam
in
outsb
sbb
adc
sbb
test
bound
jmp
pop
push
aam
adc
and
inc
inc
int3
sbb
adc
pop
xchg
lea
push
scas
pop
stos
push
add
adc
arpl
xlat
fsubrs
es
push
adc
jg
cmp
in
push
mov
setl
out
into
bound
adc
xchg
fdivl
movaps
push
nop
stos
and
mov
loope
inc
mov
mov
mov
jo
dec
movsb
sub
inc
pop
ret
out
stos
mov
sbb
inc
mov
testl
jmp
rorb
sti
mov
adc
fiadds
stos
mov
inc
out
xlat
sub
mov
movsb
xchg
out
stos
adc
cmpsb
push
ret
and
rcrl
ljmp
jbe
loope
push
adc
js
cmp
insl
popl
inc
add
mov
lds
sbb
sub
sbb
push
xchg
scas
pcmpgtd
xlat
jno
insl
and
sub
imul
std
in
je
je
subl
in
pusha
les
fisttps
icebp
or
mov
daa
loopne
or
or
adc
xchg
jmp
mov
les
jmp
neg
pop
and
pop
push
add
dec
imul
sahf
stos
inc
ljmp
cmp
aas
sub
mov
iret
ja
inc
pop
and
and
sbb
adc
and
inc
or
lcall
jmp
fisttpl
imul
mov
and
mov
xchg
js
test
pushf
ljmp
mov
xor
mov
icebp
jb
imul
rorb
lcall
jmp
jl
sbb
nop
inc
stos
xor
mov
mov
add
adc
fwait
int
push
dec
fcmovu
into
push
xchg
lods
lret
mov
test
dec
fcomps
add
adc
movsb
xlat
stos
adc
mov
mov
loop
mov
sub
push
mov
xor
jmp
add
add
fsubrl
adc
hlt
cmp
push
cmp
mov
dec
lea
push
lret
call
mov
ja
and
xor
lods
cltd
and
sbb
pop
push
data16
push
scas
pusha
aaa
cli
add
mov
loopne
out
jle
adc
mov
xor
inc
sbb
add
or
xchg
add
push
inc
mov
js
adc
mov
ror
mov
jne
jg
pop
popf
sbb
xchg
sbb
stos
daa
push
xor
cwtl
outsb
mov
xor
push
inc
test
sahf
push
mov
add
sbb
mov
pop
scas
sbb
and
rolb
ret
push
and
xlat
xor
arpl
jl
cmpsb
add
les
and
fisttpl
xchg
push
xor
pusha
les
cmpsl
fs
jne
add
push
ljmp
in
and
aam
mov
inc
iret
jle
push
inc
and
cmpsb
rol
mov
outsb
sub
out
mov
xlat
fucomi
mov
fwait
imul
inc
adc
fwait
mov
test
and
mov
cmp
popf
and
cs
enter
jae
movsl
add
fisttps
adc
jp
mov
adc
into
sti
addr16
push
or
cmp
and
add
inc
fisubs
and
imul
push
pop
pop
xor
rorb
rclb
mov
jmp
sub
aas
sbb
std
stos
mov
in
or
movb
incb
aam
insb
cs
iret
push
mov
jp
inc
push
xchg
adc
and
dec
jne
push
bound
lea
sbb
scas
cmp
cmp
iret
fcoml
and
add
cmp
jp
mov
lods
shrb
das
cwtl
mov
and
dec
cmp
andb
fldcw
xor
inc
or
loop
inc
push
rol
push
aad
push
jo
mov
adc
test
sbb
pop
out
mov
orb
iret
mov
mov
push
inc
adc
test
mov
xor
sub
cmp
test
mov
or
lods
stc
daa
cmp
pop
mov
aaa
daa
dec
inc
cwtl
sub
push
dec
inc
and
pop
lods
repnz
mov
inc
lcall
add
test
pusha
rorb
stos
rorl
push
and
push
pop
movsl
sub
lods
push
cmp
imul
pusha
lret
pop
pusha
jo
fcmovnu
pop
outsb
dec
or
jno
shrl
movsb
push
mov
sub
pop
mov
pusha
inc
mov
or
pop
and
lods
insb
scas
inc
pushf
loop
xor
fincstp
lods
loope
mov
sub
stos
popa
fcmovnb
lods
sbb
fbld
xor
push
xchg
call
jg
mov
lds
outsl
ja
pop
loope
cltd
dec
imulb
xchg
sub
mov
xor
shlb
pop
sub
dec
lds
out
cmp
add
fsubrs
das
iret
adc
les
dec
rcr
and
xor
daa
jg
push
outsl
icebp
bound
inc
je
mov
jmp
jo
nop
pop
ret
out
enter
push
add
jns
adc
dec
inc
mov
inc
pop
push
adc
sbb
cmp
mov
adc
adc
cmpsb
add
jae
jnp
push
push
sbb
push
sub
movsl
jmp
outsl
mov
testb
adc
push
sub
jo
mov
jne
cmp
rcll
xlat
xor
divl
out
hlt
dec
fs
in
or
fldt
pop
mov
and
pop
push
pop
or
inc
scas
adc
rcrl
xchg
adc
pop
xor
xor
and
dec
shlb
jnp
and
out
xchg
push
cmp
movsb
push
dec
or
out
pop
xor
mov
adc
jge
test
sbb
pushf
jmp
or
add
sbb
aam
jne
ja
ss
cld
pop
pop
stos
lret
divl
andb
add
orb
rcrb
xchg
dec
test
sbb
faddl
sub
iret
pop
jae
lcall
in
cmp
ficomps
movsl
lahf
mov
add
sub
and
enter
or
inc
jge
pop
push
mov
movsb
call
add
adc
mov
sbb
add
jbe
das
and
loop
es
or
into
jo
imul
push
add
negl
xchg
inc
int3
leave
and
sbbb
outsl
imul
popa
adc
push
or
movsb
mov
and
iret
inc
andb
add
push
adcl
mov
inc
add
ret
add
xor
jecxz
inc
int
cwtl
mov
mov
push
rclb
popa
push
mov
push
push
xor
pusha
push
fsubs
jne
push
arpl
sbb
sbb
std
push
cmc
push
aad
insl
inc
mov
mov
xor
int
sub
test
lods
test
add
shl
lea
out
sub
or
dec
cmc
or
and
sub
or
fnstenv
lock
mov
fcmove
jno
push
fldcw
scas
lcall
pop
mov
test
push
out
xchg
add
aaa
sahf
outsl
fsubrs
dec
fchs
xchg
es
inc
add
or
aaa
daa
jns
xchg
lock
xchg
test
mov
mov
aaa
jne
sar
inc
shll
daa
fsincos
popf
mov
pushf
pop
push
mov
sbb
pop
sti
sub
adc
ret
mov
push
sub
sbb
xchg
clc
and
aaa
out
and
jno,pt
xchg
push
cwtl
mov
pusha
loop
or
js
imul
dec
insl
lods
and
sti
lods
add
out
daa
add
sbbb
mov
jnp
xor
fs
and
fs
sarl
cmp
fisttpl
ja
mov
stos
push
xor
outsb
push
xchg
add
mov
mov
sbb
mov
loope
xlat
sbb
push
scas
inc
sqrtps
movsb
mov
sahf
jl
nop
sbb
add
lds
jb
sahf
sub
dec
and
icebp
roll
test
rcll
cmp
mov
insb
gs
cmpsl
jnp
pusha
jae
sub
js
push
mov
mov
aas
xchg
push
cli
cmp
inc
pusha
test
or
xchg
push
scas
aaa
jae
adc
sbb
pop
invd
or
inc
ja
lds
inc
stos
arpl
out
pop
add
sti
js
jbe
loopne
sub
push
add
fistps
hlt
movsl
cmp
add
inc
out
dec
fadds
and
sub
adc
xlat
push
cs
jo
cmpl
ja
cld
fistpll
rcl
adcb
iret
mov
cmc
popf
add
mov
jl
in
xor
jno
mov
adc
call
sub
jne
cmp
mov
je
lods
imul
pop
inc
cmp
shrb
add
sub
fsub
push
pop
pop
jg
push
aaa
and
test
adc
add
aam
adc
mov
mov
xchg
pop
out
xchg
ret
or
xor
cmp
jp
xchg
pop
dec
inc
sbb
inc
cmp
pusha
stos
ror
add
ss
aaa
add
outsb
movsb
push
xor
jecxz
mov
adc
mov
sub
adc
jo
test
jae
mull
adc
inc
sub
aaa
jo
adc
adc
push
hlt
in
add
andb
lcall
dec
sub
dec
cmp
push
loopne
cmp
es
bound
or
push
cwtl
jmp
sbb
jo
ret
fisubrl
push
mov
ret
mov
fcmove
dec
mov
pop
int
rorb
scas
sbb
fisttpl
push
sub
mov
cmp
xor
sbb
rorl
jo
sbb
pop
mov
sbb
scas
gs
push
aam
pop
aaa
lock
daa
cmp
push
sahf
dec
lods
inc
dec
sub
outsl
mov
add
shl
add
pop
jae
mov
out
fbld
scas
in
lcall
mov
lock
nop
cmp
jp
icebp
and
jno
push
int3
daa
adc
lret
clc
rcl
push
dec
sub
and
and
or
xor
pop
push
int
int3
xor
call
test
je
and
dec
xor
add
xor
fnsave
pop
cld
test
pop
mov
add
sub
cwtl
and
ret
ret
push
mov
adc
js
test
push
hlt
push
pop
dec
fistpl
in
and
shl
adc
lods
jb
and
pop
inc
adc
mov
lcall
out
push
and
push
negl
stc
xlat
loopne
fisubrl
fisubrs
xchg
xchg
dec
cwtl
adc
inc
mov
sub
inc
mov
push
sbb
daa
das
mov
mov
xor
fldenv
mov
lods
sbb
out
mul
shlb
or
add
out
mov
addr16
fistl
out
lods
mov
add
mov
or
or
xor
movsl
sub
push
push
mov
out
nop
pop
push
outsb
mov
mov
jmp
fwait
sbb
fucomi
sub
lock
sub
shlb
lock
stos
push
inc
sbb
jae
pop
std
popf
insl
mov
and
std
ljmp
push
mov
mov
xchg
xor
lods
scas
lods
push
adc
testl
inc
push
dec
stc
aas
int3
fsubl
pop
fstpl
xchg
add
add
push
xchg
sbb
in
ja
outsb
dec
loop
cmc
add
clc
sub
inc
shl
test
repz
xor
push
or
mov
xor
inc
stos
pop
push
flds
es
rcrb
lahf
imul
mov
arpl
rcrl
insb
xor
sub
dec
mov
xor
sbb
call
jb
xor
icebp
inc
test
ja
cmp
sti
adc
movsb
ds
or
out
cltd
into
out
and
pop
sub
movsb
ret
cmpsb
cvtdq2ps
into
fistpll
negl
inc
popa
sub
lahf
imulb
dec
outsl
js
mov
jnp
lods
xchg
shlb
add
or
xchg
jecxz
out
mov
xor
int3
addr16
shll
divl
loope
loopne
dec
push
loopne
mov
stos
and
mov
negb
lcall
ljmp
xor
pop
adc
or
sbb
jbe
sbb
fsubl
fsubrl
es
push
mov
adc
push
dec
mov
mov
push
ret
dec
and
inc
inc
mov
movsl
lods
inc
outsl
cmpl
mov
or
fldt
fs
mov
test
pop
mov
push
repz
push
mov
in
shlb
mov
test
or
mov
or
hlt
in
out
jb
pop
insl
mov
cld
dec
lods
and
clc
aam
xchg
ds
push
sahf
in
outsb
lods
adc
ficoms
lods
idivl
jmp
xchg
imul
and
add
mov
rclb
sub
adc
add
inc
add
inc
add
shrl
fst
pop
pop
push
pop
pop
inc
dec
add
mov
cltd
or
sbb
lea
push
dec
mov
ficoml
rolb
pop
aas
xchg
insl
xchg
stos
mov
inc
out
cs
ret
jne
fcomp
movsb
xchg
lret
test
add
jo
pop
loopne
mov
push
jbe
jns
jl
pop
cmp
ret
jne
sub
adc
andl
aaa
jmp
jo
dec
lock
scas
sbb
loopne
int3
cmp
into
add
push
rcrl
sub
andl
jecxz
es
push
xlat
sbb
nop
sti
add
call
sar
mov
out
mov
mov
enter
pop
stos
lcall
xchg
es
pop
add
cmp
cmp
mov
jne
sbb
mov
add
pop
adc
sbb
cli
je
inc
xlat
lock
add
je
or
sub
aaa
mov
xchg
movsl
in
jg
mov
out
xlat
pusha
cmpsb
jne
push
push
adc
std
sub
adc
negl
in
cli
xor
inc
push
insl
bound
mov
mov
push
call
dec
mov
sbb
subb
insb
in
pop
pushf
out
push
dec
fcmovnbe
hlt
lods
insl
jne
addr16
mov
mov
inc
and
pushf
sub
leave
or
dec
xchg
mov
aaa
ljmp
fs
and
fwait
test
and
push
xor
push
rorl
jne
inc
outsb
lret
insl
icebp
dec
adc
incl
js
mov
sub
adc
lds
mov
cmpsl
jle
sbb
arpl
push
addb
xchg
andb
js
mov
xor
xchg
int3
mov
es
xor
xor
xor
mov
cs
into
lods
adc
adc
addb
repz
imul
push
into
inc
scas
outsb
or
and
fcmovu
mov
hlt
add
inc
ds
cmp
or
and
les
xchg
fisubrs
pop
inc
leave
jb
rcrb
push
es
add
call
addb
inc
xor
cld
out
sub
jo
in
bound
mov
pop
iret
xor
xchg
das
add
mov
testl
inc
inc
jnp
out
or
sbb
sbb
into
push
xlat
fcmovbe
sbb
mov
subl
mov
mov
jl
adc
jnp
lock
add
and
push
push
xchg
fdiv
aad
ja
adc
sub
inc
dec
pop
cmpsb
cmpsb
notb
adc
and
incb
in
fstp
xchg
cmp
mov
and
scas
pop
loope
push
insb
mov
xchg
adc
dec
adc
push
daa
jp
leave
sub
pop
add
push
repz
int
mov
rclb
cmp
sub
and
or
sbb
xor
push
mulb
fsubs
fwait
pop
add
sbb
xor
add
push
dec
movsl
mov
push
movsb
xchg
out
in
incb
add
sbb
inc
fmuls
stc
fldt
adc
ja
das
pop
lret
dec
xchg
xchg
sbb
out
cmp
clc
or
pop
xor
and
xor
adc
out
fsubl
lahf
jg
subb
pop
cmc
int
orl
inc
inc
jecxz
push
cmp
mov
sub
inc
push
jnp
cmc
test
mov
cli
pushf
or
mov
rolb
js
andl
and
adc
into
jmp
pop
mov
call
sub
push
out
and
jo
dec
sbb
ljmp
enter
dec
fwait
dec
inc
insb
pushf
shll
cmp
adc
aaa
dec
push
pop
sbbl
adc
lahf
fildl
ret
push
fwait
aad
mov
les
inc
adc
ss
movsb
popa
testb
jnp
imulb
je
inc
fs
lret
sub
adc
rcll
cmovl
out
and
je
inc
cs
mov
test
enter
sbb
inc
roll
int
ss
out
imul
out
mov
and
int3
push
inc
push
ss
roll
mov
rclb
xor
fldln2
loopne
pop
jg
out
out
jmp
xor
pop
bound
enter
mov
inc
mov
lock
or
sub
lahf
aad
test
shrb
push
adc
cmp
push
scas
inc
inc
ds
and
subb
xchg
or
xor
popf
clc
repz
cwtl
loope
sub
sbb
jo
xor
push
inc
cmp
cltd
pop
add
xor
out
sbb
es
pop
test
dec
ret
rorl
xorl
pmaxub
bound
sar
jo
adc
push
mov
call
shll
pop
call
outsb
sbbb
cmp
dec
sarl
bound
sbb
sbb
andb
out
adc
add
pop
mov
mov
inc
test
inc
cmpsb
cmp
mov
ja
push
clc
sbb
orl
inc
loopne
sub
xlat
pop
es
test
arpl
dec
jp
cmp
inc
pop
mov
inc
andb
jnp
into
push
in
cmp
push
cwtl
pop
push
cltd
addr16
push
mov
popf
dec
fbld
adc
sbb
insb
ljmp
dec
sbb
sub
inc
call
or
roll
movsb
sub
andb
mov
in
ss
sub
or
int3
adc
mov
les
or
add
ss
out
cmc
push
rcr
in
adc
xchg
out
xor
into
pop
mov
xor
add
mov
add
lea
add
xlat
pop
or
xor
pop
adc
jne
xchg
pop
fmul
or
and
inc
xchg
push
pop
xor
adcb
mov
add
sti
pop
add
inc
sbb
push
fnstcw
ficompl
lock
fistps
rolb
push
int
mov
xchg
outsb
jnp
jne
and
xor
roll
enter
jno
mov
or
adcb
les
mov
inc
push
sub
add
pop
fildl
or
sub
ficompl
lahf
bound
loope
repz
fcoms
test
jne
or
inc
xchg
jle
add
repz
push
pop
sub
add
xchg
enter
fmull
push
mov
add
xlat
sub
lea
or
cli
sbb
cmp
mov
or
add
jg
adc
adc
mov
mov
shrl
fs
imul
pop
shlb
pop
push
inc
push
add
or
or
fisubl
pop
or
ret
ss
loope
popa
imul
pop
pusha
loopne
lods
xor
mov
popf
das
movsl
push
je
mov
or
add
cld
adc
lods
xor
daa
sbb
ds
sbb
popa
rorl
mov
sub
insb
pop
sub
cmp
push
data16
ss
fldcw
and
xchg
in
mov
outsb
sbb
fwait
cmp
mov
insb
add
mov
cmp
and
mov
mov
mov
inc
adc
negl
filds
test
push
filds
mov
mov
nop
and
outsb
push
lcall
add
pop
test
inc
pop
pop
rcl
dec
xchg
lret
ja
int
lret
in
pusha
and
push
mov
add
js
aad
orl
add
sub
jl
sub
xor
sbb
add
mov
add
add
mov
scas
adc
xchg
xchg
aam
inc
iret
dec
add
adc
xor
adc
mov
arpl
add
push
mov
test
adc
mov
test
adc
jle
cmc
jle
add
cs
xchg
popf
or
test
lahf
dec
dec
rcrb
jno
mov
mov
mov
es
inc
cld
sarl
scas
popa
or
out
aam
xor
loopne
test
and
das
shl
add
stos
jo
lods
aad
out
loop
dec
lret
mov
and
aaa
pusha
push
outsl
xchg
adc
cmpsl
sbb
je
subb
xor
push
dec
sub
loopne
mov
aam
fbld
and
add
daa
and
adc
loope
loope
dec
adc
inc
pop
add
jne
xor
pop
mov
dec
jle
sbb
pop
rclb
jne
pop
lods
fdivrl
cmp
sub
sub
inc
or
es
lret
shlb
adc
and
dec
or
shll
loopne
inc
push
add
xchg
add
cmp
mov
lds
jns
inc
les
pop
xor
popf
dec
sbb
test
daa
mov
es
or
mov
push
es
adc
push
push
sub
test
pop
or
xor
mov
sbb
getsec
push
insb
clc
and
and
push
hlt
frstor
and
mov
lahf
jle
pop
push
mov
xor
pop
scas
mov
and
dec
mov
push
xchg
push
mov
or
test
push
adc
xchg
xor
dec
cmpb
pop
cmp
adc
jb
loop
outsb
mov
pop
adc
addl
fdivs
or
inc
je
sub
loopne
push
or
xor
mov
dec
mov
jae
jns
mov
int
stos
push
adc
push
das
pop
sti
adc
push
mov
cmpsl
add
movl
push
pop
aas
sub
int
mov
xor
packuswb
loopne
daa
and
adc
sbb
jnp
rolb
adc
movsb
sub
repz
push
sub
lods
pop
mov
or
or
aam
dec
mov
or
push
les
fwait
mov
mov
add
or
push
mov
inc
push
cs
xor
xchg
xchg
mov
mov
dec
les
mov
xor
xorb
and
and
cmp
xor
lea
mov
ljmp
and
sub
xorb
rolb
sbb
cmp
mov
bound
dec
cltd
addb
and
adc
and
mov
cwtl
cmp
ds
scas
add
aas
push
rol
mov
movsl
and
cwtl
mov
clc
loope
or
imul
push
rclb
pushf
jns
and
xchg
out
dec
int3
jno
adc
adc
inc
inc
es
mov
jnp
sbb
push
xchg
faddl
mov
push
leave
pusha
mov
mov
jp
xor
aaa
lods
out
fldl
pop
push
jno
das
out
lea
stos
add
dec
aaa
flds
fadds
jo
dec
fcomip
jp
xlat
or
cmp
adc
cwtl
lods
or
insb
mov
nop
cmpb
jbe
jnp
dec
andb
imul
xor
inc
cld
rdmsr
insb
or
mov
cmp
cmp
aad
into
push
xchg
jecxz
sarl
aaa
aam
jp
aaa
aas
andb
es
cltd
fisubl
push
das
imul
mov
push
inc
xchg
lahf
outsl
mov
xor
sub
mov
loopne,pt
stos
pusha
outsb
push
aas
sbb
xchg
adc
aad
lds
mov
call
cmp
orb
or
sbb
xchg
inc
pushf
bnd
adc
test
loop
loop
test
dec
xchg
out
add
je
ret
inc
les
or
push
scas
mov
adc
bnd
push
add
mov
push
jmp
enter
mov
iret
ret
mov
lret
push
fwait
push
insl
mov
jle
sahf
insb
cmpsb
sub
xor
popa
adc
sub
inc
cmp
pop
sub
bswap
add
rcrb
pop
add
add
or
test
pushf
pcmpgtb
rcrl
jl
or
nop
aas
pop
sahf
push
mov
jo
test
pushf
sub
xchg
repnz
push
or
or
fmull
mov
mov
inc
in
inc
push
popl
cmc
mov
add
or
test
xchg
inc
push
mov
fnstcw
mov
jge
pop
imul
inc
push
mov
push
push
fidivl
add
subb
orl
scas
outsb
call
data16
loop
in
lods
or
xor
jle
and
bound
add
fsincos
sbb
inc
cmp
minps
scas
addr16
xor
add
add
dec
add
pop
jne
and
mov
pushf
test
xor
int
dec
mov
pop
sub
xchg
pop
cmove
cmp
lcall
and
add
es
pop
push
insl
inc
aas
jle
mov
sub
mov
add
stc
mov
lret
add
cld
and
fidivl
xlat
and
mov
adc
sbb
fstpt
mov
andb
sahf
xor
cltd
xor
leave
inc
sub
inc
js
iret
outsl
es
and
adc
push
sbb
psubsb
add
xchg
xor
out
scas
jmp
push
aam
and
sbbb
hlt
push
add
scas
pop
push
pop
mov
sbb
pushf
cmp
inc
xor
out
mov
pop
inc
xlat
popf
dec
gs
hlt
lret
push
leave
shlb
je
cld
dec
in
add
ss
inc
cltd
jl
roll
add
sub
test
mov
sbb
or
and
sub
jle
jmp
inc
movsb
aas
mov
outsl
jnp
and
jb
and
cmpsb
fimull
push
inc
sub
scas
xchg
test
test
jno
test
clc
push
mov
pushf
dec
add
jo
push
bound
and
arpl
add
mov
jns
test
testb
and
add
pop
movsb
loop
push
fldl
repnz
iret
mov
into
sbb
popa
and
mov
cmp
cmp
ja
sti
popf
mov
and
and
mov
mov
and
orb
sti
push
sub
add
xchg
cmpsl
pop
sbb
lcall
stos
rorb
mov
sbb
inc
pcmpeqd
sub
sbb
push
movsb
js
loop
in
sub
mov
insb
sti
push
das
repz
pop
inc
adc
or
mov
mov
sbb
sub
paddb
test
add
popf
iret
push
jnp
mov
mov
arpl
inc
add
add
dec
out
jle
mov
add
out
mov
push
ja
or
xor
and
mov
lahf
out
push
nop
and
lahf
jmp
jne
push
out
sub
pop
sub
lds
adc
dec
out
add
xchg
mov
add
sti
mov
xchg
test
inc
jnp
test
pop
push
cmp
scas
je
stos
sub
scas
jmp
mov
push
xchg
test
sub
lds
es
mov
mov
cltd
and
add
loope
adc
dec
pushf
ljmp
push
add
rolb
push
or
push
loope
add
mov
inc
dec
mov
icebp
mov
jle
bound
adc
jle
aaa
mov
or
or
loop
sahf
dec
add
cmp
push
iret
push
mov
imul
iret
ficoms
jnp
clc
xor
dec
sbb
imul
push
dec
test
xchg
scas
mov
pop
xchg
sub
inc
stos
idivl
pushf
add
pop
out
out
and
add
in
dec
in
push
xor
or
icebp
fwait
cltd
mov
ja
in
xchg
jmp
aam
inc
hlt
xchg
cmpsl
es
push
pop
call
adc
jge
cwtl
add
stos
cmpsl
sub
repz
sbb
or
jnp
jnp
and
mov
jb
push
cmc
jge
jg
mov
adc
inc
je
inc
push
add
inc
xchg
sti
adc
push
push
or
shll
testb
imul
xchg
insb
cmp
sti
js
jbe
je
add
push
jb
xchg
pop
aad
inc
lds
sbb
lahf
push
cmp
mov
dec
ficomps
sti
in
fimuls
mov
or
pop
mov
popa
cmp
das
addb
fimuls
add
fdivl
push
iret
mov
and
movsb
addb
inc
inc
cmpl
mov
pop
loop
and
jne
xchg
add
add
mov
mov
or
adc
pusha
outsb
mov
add
xor
xchg
jmp
adc
ljmp
ret
je
jl
inc
insb
and
ja
ja
mov
outsl
ljmp
imul
adc
lea
ja
ja
adc
mov
dec
out
popl
or
or
add
neg
or
outsl
and
sbb
xor
outsl
shlb
ljmp
mov
test
adc
mov
out
dec
push
test
aaa
xlat
adc
sub
loop
add
mov
inc
xor
les
enter
jno
ret
or
cwtl
jo
es
mov
xor
or
scas
mov
mov
stos
cmp
rorl
cmp
sub
and
lods
js
sub
jnp
roll
or
dec
push
aaa
jmp
test
rorb
mov
fsubr
mov
lods
jne
pop
add
fcomp
nop
out
lds
in
or
fcmovb
addb
jbe
jne
or
iret
ret
in
pusha
cmp
xlat
pop
jb
or
stos
dec
add
cmc
out
mov
cmpl
fsubr
lds
xorb
loop
jecxz
lds
cltd
out
lock
es
inc
mov
push
lret
or
mov
iret
add
das
aaa
pop
jb
stos
xor
add
cs
pop
xchg
aam
push
bound
addr16
xor
lcall
sbb
jne
add
jge
sbb
out
jns
jo
add
rcrl
loopne
out
or
adc
nop
jbe
stos
sarl
sbb
jno
push
push
jo
mov
sbbl
inc
pop
pop
pop
adc
inc
insb
xchg
mov
adc
mov
mov
push
or
add
lcall
mov
push
xchg
aam
xor
mov
mov
es
lods
mov
and
add
test
jo
mov
mov
adc
outsb
shll
loope
pop
pop
cmp
aad
add
sub
fldenv
xchg
test
sub
mov
push
add
pusha
das
or
pop
icebp
outsb
xchg
push
enter
jo
lods
subb
mov
mov
mov
sahf
pop
inc
mov
mov
or
dec
adc
out
sub
int
pop
lock
xor
dec
mov
push
add
inc
sub
push
cmpl
mov
cs
and
or
xchg
jp
push
sbb
popa
xchg
leave
add
add
xchg
addb
test
out
mov
sbb
sbb
mov
lods
push
cltd
pop
stos
jno
add
push
xor
adc
fldcw
lret
out
adc
sub
out
mov
test
mov
dec
push
add
fmull
inc
adc
dec
push
sti
ret
shlb
data16
popa
mov
jp
and
adc
test
adc
add
addb
jmp
adc
and
setbe
add
adcb
add
adc
shll
mov
and
fwait
pop
xlat
es
jmp
rolb
mov
jns
pop
lods
add
mov
sub
sub
push
push
testl
int3
cmc
dec
adc
sub
add
cmp
xor
pop
or
sbb
jmp
inc
outsb
add
mov
cmp
aam
pushf
xchg
jnp
js
sub
xlat
pop
imul
xchg
inc
sbb
dec
loopne
and
stc
fnstsw
mov
and
inc
push
sbb
int3
jo
ja
xchg
add
inc
push
cmc
mov
xchg
sub
icebp
xchg
add
shr
jp
hlt
stc
stc
scas
sbb
lea
mov
js
push
mov
and
das
mov
xchg
xchg
fidivrs
cmp
cmp
adc
in
into
jnp
sub
addr16
das
fdivrs
sbb
add
fcomp
lret
adc
xor
sbb
popf
jg
ja
cmp
aas
jo
sbb
push
lret
aam
loope
add
or
inc
aam
and
je
dec
add
fisubrs
push
mov
dec
add
inc
push
jle
xor
test
and
pop
aam
xchg
testb
push
loope
daa
cltd
mov
or
pop
adc
xchg
xor
mov
inc
lods
aaa
loope
fldenv
dec
jno
mov
sar
inc
leave
cltd
jnp
push
adc
jle
and
xor
xor
add
xlat
bound
mov
loopne
daa
icebp
mov
pusha
mov
mov
xlat
xchg
mov
cmp
in
sub
sbb
mov
int
test
jle
add
cld
cwtl
jno
lcall
xor
stos
sbb
iret
push
ja,pn
or
test
aam
cmpsb
test
rclb
les
inc
mov
jnp
negl
scas
arpl
mov
inc
addr16
mov
xchg
movsb
xor
inc
pop
dec
add
stos
pusha
repnz
mov
add
mov
adc
out
jo
into
int
cwtl
imul
int
int
sti
sbb
and
filds
lods
sub
inc
test
adc
adc
xor
popf
jne
cmp
scas
mov
imul
dec
inc
dec
movsl
lret
insl
xor
and
cmovb
loop
or
or
idivl
add
sbb
or
roll
out
inc
or
sbb
imul
test
shlb
cmpsb
mov
lock
adc
push
aaa
pop
pop
aaa
add
jae
push
inc
mov
rorb
mov
dec
shrb
pop
push
mov
adc
push
roll
aad
or
push
jnp
cmp
bound
dec
inc
push
insl
mov
movsb
daa
cmc
push
lahf
xchg
popf
ja
mov
call
sbb
jp
call
cmp
gs
pop
negl
adc
cmp
into
xchg
push
sbb
test
scas
enter
xor
fsts
inc
xor
push
lock
sar
test
mov
pop
stos
in
and
mov
daa
mov
pop
xor
outsb
push
sbb
add
lods
sbb
jge
pop
mov
sbb
xchg
mov
lds
outsb
add
int
push
mov
or
pop
pop
jo
popf
add
or
jp
add
movb
push
pop
idiv
aad
shrb
cmp
and
cmp
mov
mov
pop
xor
inc
dec
inc
mov
cmpsb
add
sbb
adc
roll
pop
add
stos
adc
jp
jecxz
or
arpl
iret
shrl
fldenv
cs
in
es
loop
mov
add
icebp
lods
repnz
jae
inc
rclb
or
lcall
inc
dec
mov
adc
les
add
pop
mov
jae
sbb
rclb
daa
pop
aam
out
aas
xchg
popf
lea
or
xor
mov
arpl
add
add
xor
jl
lods
in
cmp
sbbb
add
out
pop
sub
mov
mov
cld
lret
pop
mov
sbb
jle
test
adc
jb
or
mov
insb
cwtl
movsb
stos
add
sub
adc
mov
pusha
adc
movsb
aas
xor
fists
jecxz
fsubrp
add
sbb
sub
xchg
or
dec
popf
fwait
xchg
inc
pop
outsb
jo
gs
fucomp
bound
sub
mov
fdivrs
mov
mov
fisttps
dec
arpl
outsl
push
je
dec
mov
pusha
inc
mov
jno
jo
adc
or
mov
iret
andb
mov
mov
or
push
add
sbb
or
fistl
xchg
jge
imul
xor
cmp
mov
ret
and
pusha
mov
jg
sti
shlb
push
xchg
or
add
stos
pop
shll
test
pushf
pop
iret
hlt
aas
adc
or
ficoml
add
mov
cmp
ss
sub
ja
data16
cwtl
popa
mov
out
push
push
mov
sbb
leave
pop
push
std
add
sti
push
clc
test
add
mov
mov
int
test
lcall
ficompl
dec
adc
dec
lock
or
cmp
iret
cwtl
popa
or
addl
push
dec
cmpsb
mov
or
push
test
in
loop
mov
add
pushf
inc
lods
bound
jge
mov
sarb
inc
cmpsb
xorb
xor
push
push
dec
mov
mov
aad
push
fbld
and
into
leave
es
jae
jmp
jbe
add
dec
add
inc
mov
jmp
test
sub
add
sbb
mov
fidivrs
jmp
and
das
pop
outsb
sbb
xlat
jno
add
and
dec
adc
cs
cmp
mov
add
stos
adc
sti
jnp
pop
loopne
stos
push
push
sub
inc
out
movsb
loopne
frstor
in
sbb
and
lahf
rorb
das
in
subl
mov
and
cmpsl
cwtl
rcll
rcr
or
pop
sub
loop
pop
dec
mov
xchg
add
xorl
inc
lahf
subb
mov
jbe
das
mov
out
pmaxsw
clc
ret
mov
insl
xlat
push
mov
sub
sub
sbb
iret
jge
ltr
jecxz
arpl
in
inc
rorl
stos
and
fcomp
stos
mov
pop
mov
xchg
imul
mov
fidivs
lds
or
fistps
pop
add
mov
out
mov
add
lahf
out
and
adc
pop
lods
jb
int3
insl
fmul
mov
sbb
push
int3
out
int3
insb
or
push
dec
call
and
and
pusha
shll
adc
and
jae
xor
lcall
test
fucom
fsubs
loopne
adc
or
jecxz
push
ja
mov
xlat
push
fs
mov
js
xchg
push
outsl
das
or
add
loopne
jecxz
sarl
xchg
ja
dec
push
mov
pop
clc
rcrl
cmpsl
push
inc
cmpsl
and
sbb
cmp
pop
push
add
movsb
dec
out
or
mov
and
into
and
and
sbb
and
rcll
and
mov
sbb
cmp
and
pop
cmpsb
lret
mov
jo
add
ja
movsb
loopne
aam
loope
and
je
ss
es
test
int
and
jo
fisubl
push
enter
mov
add
adc
xor
xchg
sbb
lcall
and
inc
idivl
adc
sbb
roll
fsubs
adcl
in
pop
dec
pop
mov
or
mov
and
andb
sub
push
cs
incb
add
pop
pop
add
sub
sbb
inc
scas
dec
adc
popa
das
sub
pop
std
inc
cmpsb
pop
push
lds
scas
pusha
and
cltd
mov
sbb
mov
jg
je
xchg
push
add
push
cmp
das
into
das
xchg
cmpsb
mov
js
push
cmc
push
push
ficompl
sbb
scas
sub
inc
orb
call
pop
sub
inc
lret
xor
fildll
add
pop
sub
push
imul
cli
push
mov
mov
add
adc
shr
or
out
sub
loopne
scas
fwait
sub
fcoml
movsb
and
and
add
push
mov
out
inc
push
xor
sahf
loopne
movsl
fnstcw
subl
fdivl
inc
pop
and
cmp
jp
mov
jl
xchg
bound
sub
lahf
sub
aam
scas
ret
aaa
jle
mov
mov
pop
xor
fcmovnbe
fidivrl
xchg
iret
in
sbb
push
in
in
mov
inc
add
out
sub
mov
sbb
sub
pop
push
cmp
sbb
add
nop
jle
xchg
test
adc
jnp
test
mov
mov
movlps
push
imul
cwtl
subb
cmp
add
icebp
cwtl
inc
xor
sbb
mov
or
pop
aaa
mov
mov
jno
in
xor
scas
inc
movsb
add
adc
in
adc
mov
cmp
and
xor
fldt
or
sbb
push
stos
inc
add
ja
push
lock
xorb
fcmovnu
mov
dec
stos
repnz
data16
imul
xor
sbb
insl
jb
fstl
loopne
sub
test
in
into
lods
jle
push
btr
jne
pop
push
out
dec
mov
sub
jnp
cmp
movsb
fidivrs
aam
inc
sbb
cmpps
out
xchg
or
shll
sti
sbb
push
fmull
inc
les
ds
fbstp
cmpb
mov
lret
push
mov
inc
mov
or
cmp
insb
xchg
pop
push
inc
mov
cmp
call
sbb
daa
pop
jmp
lea
adc
sbb
into
mov
jl
cmp
add
xchg
aad
mov
lock
mov
or
es
sbb
xchg
lahf
icebp
adc
jb,pt
std
aad
adc
dec
jo
adc
mov
pop
sbb
sbb
sub
mov
out
pusha
pop
and
adc
dec
adc
pop
inc
insl
add
into
jae
inc
sub
inc
and
push
loopne
in
aaa
or
or
xor
fs
sets
and
lock
sbb
and
sbb
fcmovne
xchg
xor
mov
clc
jl
pop
xor
fldl
hlt
sub
push
es
iret
in
mov
pop
sub
arpl
fs
and
xor
jnp
jl
stos
out
add
sub
push
int3
pminsw
add
cmp
push
sbb
xor
push
pop
jnp
ud0
add
xlat
inc
xor
add
test
add
add
leave
orb
mov
clc
xorb
push
sbb
xor
es
jp
and
test
sbb
add
push
push
sub
pusha
pusha
push
imul
ret
ret
inc
and
or
ds
jne
jne,pt
sbb
mov
xchg
add
mov
and
jo
outsl
rorl
jbe
sbb
inc
mov
push
inc
mov
shl
xor
add
and
pushf
pop
cs
mov
in
mov
mov
je
mov
push
add
push
int3
mov
xchg
lods
and
je
fcomp
mov
jmp
aas
mov
imul
rorl
push
std
cmp
loop
add
cmc
add
movsb
inc
lret
inc
les
icebp
jge
push
sbb
xchg
int3
mov
cmp
inc
sbb
or
dec
inc
sbb
pop
xor
push
mov
mov
inc
insb
inc
mov
mov
popf
jge
aam
je
sbb
cwtl
mov
fisubrs
jp
mov
adc
loope
push
movsb
pop
popf
cmp
push
sub
stos
jge
addl
icebp
and
push
shll
les
sbb
sbbb
fstps
iret
mov
fiaddl
into
push
nop
xchg
mov
or
push
xchg
insb
sbb
jno
jb
mov
mov
cwtl
cmpl
jb
add
nop
shll
ja
daa
bound
sbb
shll
pusha
adc
adc
sbb
mov
outsl
test
xor
fisttpl
sbbl
out
loop
cmp
sbb
xor
mov
pop
sbb
lea
mov
out
jo
cwtl
add
xor
bound
push
xor
mov
fsts
mov
jp
mov
and
iret
sahf
sbb
fldenv
mov
pop
jae
mov
push
adc
jae
mov
les
xor
out
mov
or
or
in
adc
adc
scas
aas
test
fstpl
sbb
push
movsb
sub
mov
jo
leave
xor
push
xor
fldcw
popa
xlat
stos
add
nop
push
arpl
pop
lea
jb
xor
xor
push
jne
and
js
inc
int3
mov
xor
inc
xor
mov
sbb
das
adc
fisttpll
in
push
sbb
sbb
test
mov
popa
es
pop
push
out
adc
jno
xchg
push
add
fdivs
cmpsb
lea
jnp
fstl
pushw
cmp
push
das
push
hlt
call
ss
adc
in
cld
inc
das
sbb
cmp
jge
sbb
pop
add
push
clc
adc
pop
adc
or
or
aad
xlat
add
cmc
roll
loopne
add
cs
add
xchg
adc
sub
rol
or
sbb
popl
jo
addl
sbb
pop
push
or
pop
mov
mov
orl
adc
pop
jne
sub
cs
mov
push
xchg
push
xor
push
lds
xchg
cmpsl
sbb
sbb
cltd
repz
pop
add
icebp
add
loop
popf
jno
outsl
rorl
pop
cmpl
outsb
mov
push
add
add
and
jg
jp
or
sbb
loop
mov
aaa
outsb
je
divb
sbb
imul
jns
addr16
add
daa
mov
in
fidivl
jb
out
shlb
or
adc
cmp
mov
push
adc
call
sub
jecxz
pop
insb
insl
fcomps
enter
in
xor
xchg
enter
cmpsl
mov
xor
ret
ret
out
and
adc
lock
pop
inc
cmp
push
adc
mov
or
testb
inc
mov
shll
xchg
sbbl
ret
xchg
daa
add
xor
mov
mov
adc
push
or
sub
adc
mov
stos
and
jle
bound
xchg
xchg
out
aas
sbb
pop
sbb
cli
les
mov
jecxz
addr16
mov
dec
es
outsb
jle
gs
jge
outsb
iret
dec
sub
mov
test
xor
nop
xor
cmp
daa
int
sub
pushf
sbb
mov
idivl
pop
mov
into
movl
dec
cwtl
out
repnz
roll
sbb
inc
cmc
adc
mov
addb
roll
mov
dec
inc
xor
jecxz
fsubs
cs
sbb
jo
cmpsl
jp
adc
les
mov
push
sub
lahf
or
push
mov
sub
xlat
out
test
push
dec
in
push
shlb
mov
inc
mov
lret
push
push
imul
imul
lcall
push
push
jo
rcrl
lret
jne
add
out
fsubl
add
je
lahf
adc
dec
lahf
imul
lahf
jne
jb
dec
adc
lret
add
mov
adc
sub
imul
xchg
fstps
sahf
es
js
sbb
push
xchg
mov
push
add
xchg
inc
leave
loopne
push
loopne
and
mov
mov
inc
pop
out
sub
scas
out
or
sub
sub
xor
les
pop
pop
and
fwait
loope
jb
or
xchg
sahf
jmp
leave
addr16
pop
test
and
jnp,pt
or
sbb
iret
popa
pop
adc
xchg
pushf
sbb
jecxz
add
jnp
adc
loopne
adc
inc
push
push
pusha
dec
cmp
xchg
sbb
mov
xor
adc
sub
xchg
call
repz
mov
addb
cwtl
dec
adc
rcll
xor
dec
idivl
iret
jle
xor
adc
or
decb
sbb
ss
jmp
test
push
add
mov
inc
dec
hlt
pusha
stos
movsl
imul
shlb
ja
dec
testl
sub
and
sbb
dec
adc
adc
pop
push
adc
push
or
xor
jne
sti
mov
and
iret
xchg
cwtl
or
pop
in
push
sbb
or
jo
inc
sub
adc
mov
dec
jp
mov
pusha
adc
mov
outsl
or
loopne
mov
mov
and
mov
sub
sub
test
popf
mov
addr16
rorb
adcl
das
testl
daa
add
add
ss
xor
add
aam
jl
mov
dec
nop
jo
inc
adcl
mov
pop
in
dec
loop
cmpsb
stos
stc
pop
repnz
push
cmp
ja
idivb
and
xor
or
loop
mov
and
cmp
arpl
adc
fildl
lcall
mov
and
lock
rcrb
jb
cwtl
adc
das
push
push
mull
sbb
cmp
ret
mov
add
push
push
pop
and
sub
jbe
dec
inc
and
jp
aaa
out
add
mov
leave
inc
inc
daa
mov
add
sti
add
sbb
frstor
mov
mov
iret
es
add
add
mov
ss
test
sbb
jne
dec
das
sub
inc
sbb
das
push
cmc
push
pop
test
and
and
aam
mov
and
jbe
jns
sub
pushf
lret
mov
test
xor
mov
add
js
jae
mov
adc
loope
push
push
add
fisubs
and
test
aad
fdivs
insb
jl
add
xlat
ret
mov
mov
cmp
xor
add
and
jle
sub
jmp
adc
mov
jmp
enter
sub
call
add
sbb
roll
jmp
das
sub
pop
in
ret
adc
push
sub
adc
sub
roll
and
mov
sub
jno
or
adc
mov
xor
ret
lods
adc
sub
xchg
cmp
mov
sub
adc
pop
add
dec
xchg
dec
pop
sub
ret
or
movswl
and
aad
les
xchg
test
push
push
fdivrl
xor
pusha
mov
and
push
and
fildll
cmpsb
inc
stos
sub
pusha
add
pusha
rol
movsl
fdivrl
sbb
xor
jo
adc
jae
push
scas
in
add
loop
cmpsl
ffree
jge
dec
inc
cmp
xchg
ss
inc
sbbb
sub
ljmp
add
push
add
xor
inc
mov
andb
lods
das
sub
mov
iret
pusha
test
insl
or
xchg
push
push
sbb
mov
in
enter
ljmp
push
in
lock
push
xchg
cmc
sbb
je
sbb
mov
test
and
lret
mov
or
xchg
insb
sahf
sahf
rorb
mov
push
inc
cmp
arpl
mov
adc
dec
adc
fstl
push
loope
ds
sub
sbbb
cmp
jno
or
cmp
pop
icebp
ret
arpl
jmp
add
ljmp
push
mov
loope
push
xor
das
push
sbb
movsl
popf
fwait
loopne
jle
pop
mov
jno
in
jo
add
or
popa
cmp
mov
adc
inc
fwait
cmp
mov
dec
push
add
adcb
pop
mov
add
jno
sbb
add
sbb
adc
xor
push
ror
lret
lret
mov
test
out
pusha
or
or
sub
or
jg
sti
stos
pop
les
sahf
inc
xor
in
mov
and
jne
popa
jbe
ja
mov
dec
xchg
cmp
addr16
add
mov
fsubl
mov
lret
loopne
imul
mov
int3
and
lods
sub
lods
sbb
outsl
xchg
or
inc
and
cwtl
mov
mov
sub
pop
adc
call
push
add
dec
ficompl
das
xchg
dec
lds
adc
aaa
adc
lods
xchg
fists
mov
lods
js
jb
adc
insb
pop
add
mov
pop
mov
mov
adc
repz
add
movsl
popf
in
and
pop
push
das
cmpsl
cltd
mov
cltd
loop
es
xor
add
dec
sub
push
fwait
xor
xor
lahf
jbe
popf
loopne
cmp
cwtl
repz
push
ficompl
push
aaa
push
mov
imul
je
ret
mov
mov
pushaw
push
daa
pushf
loope
rorl
push
stos
xchg
test
add
mov
sub
xchg
mov
xchg
xor
aaa
xchg
decl
js
addr16
mov
adc
es
inc
rorb
outsb
js
add
mov
sbb
or
adc
xor
or
add
cld
ss
int
jle
add
cmp
jmp
cmpsb
imul
stos
imul
push
xor
push
add
pop
mov
sub
adc
dec
push
push
sub
out
out
insl
addr16
xchg
fmuls
pop
adc
ret
sarb
enter
out
sub
xor
sub
mov
dec
xor
decl
xlat
dec
xor
push
push
sbb
outsl
jl
js
int
push
mov
mov
enter
xchg
outsl
add
test
ljmp
jmp
in
push
adc
mov
xor
add
jb
xor
shrb
push
insb
iret
mov
bound
or
inc
lcall
out
daa
inc
add
adcb
mov
jg
popl
or
daa
dec
ja
call
mov
imul
fmulp
cmp
push
mov
sub
bound
push
sbb
in
jl
pop
mov
push
pop
sub
or
test
jp
stos
push
ds
add
mov
pop
mov
and
jb
jbe
sub
ljmp
out
out
adc
push
mov
adc
dec
add
push
ficomps
cmp
test
cmp
push
jmp
xor
add
popf
mov
idiv
lret
out
jnp
push
daa
dec
pop
int3
add
add
add
faddl
push
notl
mov
stos
pop
int
out
mov
sbb
sbb
cmpsl
and
push
aad
push
and
sbb
push
or
idivl
lret
aam
jp
mov
push
std
loop
nop
pop
int3
sub
push
jmp
push
stos
add
sar
jg
adc
je
aaa
push
dec
sarl
in
cmc
ret
sbb
bnd
fisubrl
sbb
jbe
sub
inc
movsl
enter
ds
push
iret
mov
pop
data16
les
or
push
push
testl
mov
push
sbb
sub
es
mov
fcmovu
iret
in
cltd
out
lods
sti
aaa
add
add
rolb
aam
xchg
or
movl
shll
fildl
stos
fs
addr16
xor
loop
or
cmp
and
or
xor
cmp
cmp
imul
repnz
pop
push
xchg
inc
pop
adc
mov
add
sub
mov
shlb
in
es
pop
daa
xor
stos
mov
inc
test
sub
int
inc
addr16
mov
push
lods
mov
xor
jb
fnsave
cmpsb
mov
sbbl
movsb
pop
xor
pushf
inc
push
push
mov
add
and
stos
and
xchg
bound
mov
int
cmp
jno
dec
sub
add
aam
pop
mov
push
or
sbb
pop
pushf
sbb
push
icebp
lock
adcb
adc
or
and
mov
leave
jae
inc
inc
fnstsw
sbb
push
daa
mov
push
in
sub
mov
jle
int3
pop
js
mov
iret
pop
or
pop
push
and
sahf
sarl
jle
js
mov
aam
stc
mov
push
sbb
int
push
push
or
adc
sub
fstpt
add
add
test
mov
push
adc
add
addl
fdivrs
fsubs
xor
sub
add
das
fsubrs
lret
jo
iret
bound
sbb
lods
cmc
and
adc
dec
xor
sbb
mov
int3
adc
decl
cs
jmp
inc
jp
pusha
push
test
dec
movb
loop
mov
add
stos
shrl
cmp
push
sbb
fimuls
pusha
insb
lahf
imul
push
sub
sbb
pop
jmp
or
fstpl
cmp
or
arpl
or
or
adc
jo
push
add
add
je
je
das
inc
into
and
lds
pop
xorb
push
int
sub
and
orl
je
jno
inc
es
xor
adc
jbe
sub
ja
rorb
mov
ja
into
enter
fistpll
or
jl
fmuls
inc
lahf
xor
xchg
ficomps
sub
dec
int3
in
outsb
outsl
or
into
cwtl
dec
dec
push
adc
push
addr16
jno
push
loopne
sub
sub
aam
and
jbe
mov
out
fwait
ss
and
popf
add
es
inc
fildl
and
push
cmpl
push
orl
imul
cmp
push
in
pop
push
stos
pop
addr16
add
sbb
lret
mov
and
and
aaa
fcomp
sub
push
out
inc
push
mov
dec
into
add
xor
and
xorl
sarb
add
arpl
out
fsubr
xchg
xor
ret
mov
rorl
pop
xor
loopne
inc
sbb
testb
push
cmp
adc
xchg
add
mov
mov
imul
sbb
or
cmp
into
and
or
arpl
hlt
pop
je
dec
add
and
dec
mov
lret
int3
jle
mov
inc
adc
stos
stos
xor
mov
push
flds
leave
xchg
mov
pop
sbb
lret
push
mov
adc
push
lahf
add
fsubs
rorb
adc
xor
or
aad
arpl
sub
fsubr
and
in
or
movsb
push
les
or
sub
enter
xor
xor
xchg
bound
bound
cmpxchg8b
pop
push
xchg
pop
xor
sbb
lods
adc
loope
jge
into
sbb
cwtl
aam
iret
and
into
test
stos
xor
dec
fildll
test
imul
mov
jbe
adc
lea
mov
and
adc
testb
inc
mov
sbb
mov
shl
ficompl
test
mov
or
loope
ret
lods
add
dec
cmp
int3
shlb
adc
cmp
movsb
fcmove
fimull
in
jnp
stos
inc
xor
scas
ret
mov
fwait
into
mov
adc
dec
pop
mov
mov
fwait
pop
fwait
xor
jmp
in
loope
pop
cmpsb
mov
mov
movsl
gs
push
jne
cmp
outsl
add
nop
push
rorb
bound
and
insb
pop
and
mov
mov
popa
imulb
fcmovu
or
mov
cs
aaa
ja
and
fimuls
ds
lret
sbb
bound
fs
inc
add
mov
das
addr16
push
sub
leave
into
fcoms
insl
mov
mov
popa
sbb
scas
inc
popf
jae
lret
xchg
lds
in
aaa
loope
pop
jecxz
pop
inc
sbb
xchg
notb
dec
pop
mov
jo
jbe
inc
fldlg2
xor
xchg
jno
test
ficoms
pop
add
jg
shll
or
inc
xchg
ret
or
inc
decb
insb
xor
or
push
test
pop
sub
repnz
inc
cwtl
in
adc
in
pop
fwait
test
or
jb
repz
xchg
fwait
or
cli
and
adc
add
sti
arpl
inc
dec
sub
xchg
subl
push
mov
xchg
and
out
fnstenv
pop
adc
adc
ds
push
scas
mov
adcl
sbb
xchg
pop
dec
fucomi
xor
cmpsb
add
adc
pminsw
xor
lahf
adc
inc
popa
cmp
xlat
mov
xchg
cmpsb
cmp
ret
or
cmp
or
xchg
stos
or
sub
mov
mov
hlt
scas
mov
pusha
mov
cmc
or
stc
aad
fnstenv
dec
adc
ret
into
popl
add
add
jecxz
pop
xchg
pop
sbb
hlt
imul
inc
add
mov
push
jne
aaa
xchg
shll
test
and
pop
ret
invd
mov
inc
mov
addl
xor
frstor
pusha
xchg
push
pop
insb
jnp
push
iret
xchg
js
sbb
dec
repz
decl
add
xchg
mov
inc
mov
scas
add
inc
sbb
mov
inc
add
testl
lret
rclb
mov
dec
or
xchg
insb
mov
cmpsb
fimuls
xor
icebp
sbb
fdivs
fldenv
jl
imul
pop
in
das
loop
mov
into
lret
sub
sub
in
fisubrs
sub
fs
xchg
cmp
pusha
sarb
and
xchg
into
jge
dec
dec
and
sahf
adc
and
imul
jg
jno
mov
xchg
aad
ret
push
sbb
addl
sub
int
and
adc
scas
test
aam
xor
fisubrs
stos
dec
cwtl
aas
stos
int
loopne
fs
cmp
sbb
aad
loop
in
add
nop
insb
pop
scas
les
iret
shrb
push
mov
out
dec
add
xor
dec
pop
stc
inc
xchg
and
add
adc
xchg
xchg
xchg
fdivr
mov
cmp
scas
adc
mov
bound
sbb
outsl
pop
or
jo
out
bound
das
data16
push
orb
outsl
sbb
mov
test
incb
out
cmp
push
add
inc
mov
cmpsl
mov
in
xchg
inc
imul
sbb
iret
push
xchg
and
cmp
pop
jp
daa
jnp
mov
into
or
ret
mov
jecxz
ja
popa
inc
add
push
push
rcrb
push
xchg
idivb
cmp
imul
adc
dec
mov
pop
cmp
add
xchg
popa
push
xor
mov
mov
mov
add
push
in
push
lds
dec
sahf
pop
and
dec
or
mov
das
imul
testl
mov
jge
into
sbb
adc
sbb
jne
imul
inc
mov
pop
pop
jnp
testb
jge
pop
mov
je
cmp
imul
rcrb
popa
xor
mov
jnp
insb
dec
fwait
jp
jns
inc
push
and
mov
cmp
or
push
movsb
outsl
sub
add
sub
pop
mov
cmp
cmp
js
or
adc
sub
aaa
cmp
ficomps
out
outsl
dec
xor
scas
sub
fcomps
sahf
int3
mov
sub
jne
lahf
push
repnz
mov
push
add
lcall
in
sub
cmp
sbb
push
mov
test
int
or
sub
add
add
dec
or
or
call
add
or
call
popa
or
outsl
push
repz
or
jbe
jae
adc
add
outsl
in
aaa
inc
and
or
and
or
aas
fildl
lret
push
or
fdivrs
jb
cmp
bound
xchg
fnstcw
and
push
sbb
outsl
insb
mov
cmc
sbb
les
adc
neg
sbb
sbb
push
add
and
adc
pop
sbbb
pop
movsl
push
or
out
add
add
adc
in
sti
jne
adc
pop
add
data16
rcll
out
mov
sbb
or
gs
mov
fisubl
mov
loope
sub
sub
sarb
sub
pop
aad
or
push
or
fisttps
pop
add
test
add
push
mov
add
add
sbb
sahf
arpl
mov
popf
popf
mov
das
inc
adc
inc
push
cwtl
xor
aas
mov
outsl
lret
ss
push
adc
pop
fbld
sub
cmpsl
and
and
mov
daa
and
std
pusha
inc
inc
push
fwait
xor
mov
mov
or
adc
arpl
sbb
aas
sbb
mov
lods
enter
test
cmp
jp
jbe
inc
lcall
repnz
or
mov
sbb
aaa
je
jp
out
ret
loope
cmp
stos
fcmove
jg
icebp
ljmp
dec
js
pop
push
lahf
xor
jnp
outsb
mov
or
sar
roll
cwtl
push
dec
mov
add
push
sub
mov
test
dec
mov
mov
mov
aad
mov
lods
test
inc
or
fisttpll
ja
sub
jge
add
mov
cltd
push
fstl
fnstsw
es
inc
das
fsubrl
sub
dec
lret
in
call
jl
nop
mov
add
sbb
cmp
lds
mov
sub
xchg
jg
mov
mov
lret
icebp
mov
mov
pusha
inc
lret
fstpt
pop
push
sub
add
inc
xorl
ss
push
jmp
cmpsb
fiadds
jp
inc
xchg
xchg
into
ficoms
xchg
lret
inc
mov
mov
and
out
fimull
add
sbb
pop
cmpsb
dec
enter
sarl
fiaddl
ror
mov
lods
push
mov
dec
outsl
aaa
adc
mov
cs
scas
mov
popa
imul
add
lock
inc
jmp
sub
jl
in
sti
pusha
xlat
lock
les
inc
jecxz
je
xchg
out
inc
pop
pop
pop
in
adc
xchg
mov
data16
lock
mov
jecxz
xchg
jmp
addl
lods
cwtl
inc
test
mov
sbb
iret
ss
mov
shrb
inc
jnp
and
or
jno
cmp
push
filds
jp
loop
xor
push
ja
add
add
jns
adc
out
sub
pop
jae
xor
icebp
dec
cmp
pusha
cwtl
gs
add
jb
test
inc
movsb
mov
cmp
push
test
inc
movsl
add
or
insl
loop
loopne
add
cmp
push
call
jge
add
push
mov
add
push
mov
gs
clc
scas
pop
roll
and
ja
outsl
adc
cltd
cmp
shrb
add
xchg
insl
xlat
lods
loopne
sub
cwtl
jno
mov
decl
push
fcomps
pusha
adc
test
or
enter
in
sub
pop
in
loopne
dec
sbb
out
iret
push
cmpsl
ja
mov
pop
xor
sar
pop
add
sbb
push
mov
mov
sub
cmpsb
test
mov
loope
sbb
dec
cli
cs
loop
jns
jo
inc
mov
pop
jns
jo
cs
pushf
jne
prefetchw
fiaddl
ja
cmpsb
scas
xchg
xchg
push
imul
pusha
pop
mov
bnd
in
inc
push
jmp
aaa
fcompl
ja
cmc
pop
add
fsubrl
frstor
push
sbbb
clc
out
outsl
push
lea
pop
dec
mov
leave
cmp
fmull
lds
mov
mov
leave
mov
repz
mov
pop
jmp
decb
push
push
lret
lret
or
fdivs
call
or
int3
xchg
movl
outsb
arpl
jne
sti
iret
add
out
adc
xor
add
cmc
xor
fmull
cs
mov
add
sbb
pushf
cmp
fbld
and
ffree
pop
out
loop
sbb
sbb
sbb
jo
test
adc
xchg
pop
data16
pop
jmp
dec
mov
sbb
or
add
iret
add
nop
rcrb
scas
add
iret
out
or
fabs
xor
fildl
scas
xor
xor
add
bound
xchg
fisubs
or
gs
lret
lret
ds
mov
cmpsb
lods
or
ds
jge
sub
jecxz
mov
dec
mov
sub
mov
or
ss
pusha
mov
mov
lret
pusha
dec
cmp
pop
add
fmul
jo
ret
outsl
or
imul
divl
outsb
enter
cmc
mov
push
inc
add
repz
add
in
out
sti
cmpsb
pop
push
mov
sub
and
dec
iret
test
pop
sub
outsb
dec
cmp
jns
push
orl
xchg
mov
xlat
in
adc
enter
pusha
icebp
xchg
push
xchg
frstor
xchg
iret
dec
ss
out
mov
pop
jae
les
test
outsl
setge
or
rcrl
std
fcomi
mov
out
nop
testl
out
sbb
add
js
ljmp
pop
js
mov
es
int3
xor
or
add
lods
lods
shr
in
xor
and
xlat
xchg
stos
lds
ss
popf
imul
fisubrl
push
popa
popa
jae
pop
cmp
out
and
inc
dec
mov
mov
mov
and
push
hlt
push
push
pusha
or
sbb
fwait
cmpb
ja
mov
mov
fucom
mov
scas
mov
repnz
loopne
shl
sub
rolb
ljmp
cmc
inc
inc
pop
mov
dec
sbb
inc
movl
outsb
sarb
das
cmp
pop
jno
sub
cs
aaa
mov
dec
shl
lahf
push
sbb
in
push
adc
cmp
sti
add
pop
stos
popa
mov
cmp
push
fst
cmp
aaa
sub
mov
xlat
sbb
call
cmpsl
fld
sub
hlt
sbb
push
xor
mov
fisttps
mov
orb
leave
daa
dec
lea
icebp
push
leave
cmp
mov
xchg
cs
out
fistpl
sti
outsl
cwtl
push
rdtsc
lret
data16
out
push
mov
pop
rorl
shll
or
ficoms
mov
sub
test
sahf
dec
imul
mov
pop
adc
testb
mov
sbb
pop
ja
aam
movsl
jp
push
sbb
inc
roll
cmp
mov
loope
pushl
cli
mov
loopne
mov
fwait
loope
ficoml
out
cwtl
je
pop
mov
test
add
xor
arpl
iret
mov
dec
aam
call
aam
cs
cmpsl
out
add
orl
lods
jbe
push
std
dec
insl
scas
or
rcrl
pop
mov
fisttpl
rorl
roll
daa
ss
fisttpl
lds
vmread
pushf
mov
pushl
jg
inc
shll
add
cmp
subl
xor
sbb
jb
sub
fisubl
fnsave
orl
test
adc
add
lea
push
fistps
mov
ja
jns
sbb
fsubl
aaa
cmp
dec
push
mov
mov
cwtl
fstps
inc
cs
test
or
in
loope
scas
pop
push
sbb
out
js
xor
xor
clc
divl
popa
rorb
sti
jmp
orl
inc
sub
sbb
xlat
sub
call
xchg
fidivs
shl
pop
jns
xor
mov
out
add
add
inc
inc
iret
in
ret
fcomp
jb
loopne
mov
call
jle
mov
mov
ljmp
mov
imul
popf
fistpl
cmp
dec
and
int
xchg
shr
arpl
push
hlt
sbb
rorb
test
pop
cmc
aam
enter
pop
sub
cmpsb
xchg
sbb
enter
pop
mov
lcall
das
cmp
push
aaa
xor
hlt
aad
mov
sub
pop
push
mov
bound
and
call
test
ret
mov
lcall
push
sub
xchg
fisttpl
aam
outsl
outsl
sbb
imull
or
inc
push
repnz
aad
sub
jo
lret
outsb
cmpb
jecxz
roll
sub
sub
mov
pushf
into
mov
sub
pop
add
fnsave
imul
push
lods
es
cmpb
ja
clc
jle
mov
lds
cli
repnz
call
pop
sbb
mov
rolb
jae
pushf
cmpl
ret
lret
pop
fsubrp
in
mov
xor
push
mov
lea
mov
mov
mov
xchg
xor
fstps
dec
fcmovu
cmc
repz
divb
cmp
jnp
dec
mov
fwait
mov
lret
xor
int3
rolb
or
xor
addb
and
jcxz
out
pop
sbb
lods
xchg
and
icebp
add
out
sbb
push
loope
adc
add
cmpb
jae
shr
mov
ret
rcr
mov
pop
jle
xor
xor
xor
arpl
pop
or
pop
pop
ja
shlb
aad
mov
fsubrl
test
jmp
stc
imul
ret
ss
mov
pop
insl
jmp
aam
adc
dec
mov
push
add
cmp
mov
add
pop
negl
add
pop
pop
fsubr
mov
push
test
fiaddl
in
mov
xlat
pop
xchg
dec
btcl
or
or
test
mov
jne
clc
call
mov
cmp
xor
inc
adc
rcl
cmp
aas
lock
fwait
ljmp
jle
sub
mov
xchg
jg
bound
movsb
dec
mov
ret
ficompl
jl
adc
neg
dec
je
outsl
fwait
ret
dec
jl
mov
in
mov
dec
popf
stc
adc
jae
mov
mov
fildl
je
mov
add
jecxz
enter
add
mov
sbb
and
mov
negb
and
and
cmc
jl
lock
or
lock
mov
or
addr16
push
mov
push
decb
clc
xchg
sbb
jnp
or
jne
add
aad
mov
cmp
or
xchg
pop
dec
shrb
adc
in
sbb
or
xchg
add
pop
add
mov
cs
adc
mov
and
jecxz
daa
pop
cwtl
cmp
filds
push
inc
xchg
jo
inc
pop
push
ret
fldl
scas
mov
jmp
add
clc
stos
ja
adc
lock
sbb
or
pop
sbb
push
dec
sub
adc
adc
int3
cli
adc
cs
scas
jle
xchg
fwait
clc
insl
lods
jle
or
cmp
jmp
js
mov
or
push
mov
mov
sbbl
test
js
out
into
or
ret
pushf
lcall
push
and
call
in
xor
cwtl
fmull
jl
or
mov
aad
cmpps
fwait
das
mov
xor
mov
mov
xor
popl
jp
hlt
lods
fwait
and
lret
repnz
scas
xchg
bound
pop
sbb
daa
outsb
pop
push
in
fidivs
mov
addl
jne
in
adc
into
in
lods
lea
mov
inc
jp
sbb
or
or
pop
jg
test
bnd
or
imull
push
shll
dec
pop
mov
mov
sbb
lock
sbb
lods
push
ficompl
ret
xor
into
fsubl
in
pop
and
xor
jge
pop
lods
jge
push
pop
clc
adc
mov
lahf
xchg
inc
push
inc
test
jo
push
mov
pop
and
popa
pop
jle
xchg
or
das
cld
rorb
pop
stos
mov
add
xchg
popf
sub
dec
push
push
lock
mov
jp
sub
mov
jae
push
xor
sub
subl
lock
pop
mov
addr16
je
sbb
lods
sbb
es
and
out
add
lods
stc
mov
mov
pop
rcl
jne
fwait
xor
cmp
mov
mov
xlat
addr16
scas
dec
shrb
sub
mov
dec
mov
jecxz
adc
out
ljmp
ja
add
ja
lods
jb
cltd
xor
fldt
imul
rcrb
cld
lods
and
rclb
adc
inc
push
adc
push
into
and
xchg
das
or
mov
cmp
scas
repnz
mov
mov
stos
dec
sub
mov
xlat
add
cmp
pop
cmp
or
add
aas
cmp
repnz
rcrb
imul
daa
cltd
arpl
call
mov
outsb
xchg
and
or
jmp
mov
clc
cmp
cmpl
inc
addr16
xorl
cli
cmpsb
mov
fistl
insb
outsb
popa
jno
mov
out
inc
pop
or
cli
push
pop
sub
mov
fadd
mov
jns
mov
aaa
inc
xlat
lock
scas
sub
xchg
js
fs
ficompl
xor
xchg
inc
test
push
push
je
rol
jb
je
sbb
sarl
adc
jb
sbb
outsl
outsl
mov
jmp
mov
mov
jecxz
jp
and
arpl
xor
xchg
pop
in
outsb
and
push
mov
fsubs
xchg
test
dec
in
push
inc
sbb
fwait
mov
push
jb
jg
add
adc
mov
xchg
fidivs
and
fdivrp
push
mov
aas
inc
sbb
mov
mov
mov
mov
test
scas
arpl
push
arpl
ds
insl
inc
faddl
xlat
pop
outsl
add
sub
je
pop
call
jp
lahf
pop
cwtl
inc
jne
subl
repnz
aad
lock
cmpsl
jp
or
mov
jge
shll
pop
push
add
mov
int
or
mov
std
adc
int
imul
pop
lcall
mov
lods
xchg
sbb
cmp
shlb
xchg
mov
cmp
orb
nop
mov
imul
mov
frstor
hlt
enter
jnp
adc
add
cmp
add
icebp
and
mov
dec
orl
inc
inc
ret
or
push
cwtl
sbb
xchg
inc
lcall
and
pop
push
outsl
in
mov
fnstsw
pushf
push
xchg
mov
mov
add
aad
mov
in
test
repz
cmp
rcr
fwait
mov
add
or
or
fdivrs
mov
sbb
movsl
push
or
scas
or
lock
in
xchg
inc
inc
sub
mov
jnp
mov
addl
lds
mov
shrl
lret
cld
inc
sub
insl
pop
out
sub
das
dec
inc
mov
or
pusha
loopne
sbb
dec
movsl
sub
nop
lock
fs
mov
pop
cmp
mov
fst
inc
mov
mov
int3
sti
lret
adc
inc
cmp
popf
aad
andl
mov
push
cmp
enter
jmp
pop
sahf
sub
sub
mov
mov
popa
push
movzwl
xchg
jg
and
lock
dec
jecxz
mov
mov
loopne
pop
icebp
hlt
aad
mov
add
rcll
mov
out
repz
lods
jmp
out
repz
mov
push
xor
sar
lods
or
mov
mov
mov
pop
lret
mov
or
repz
push
aad
stos
xor
cmpb
jecxz
repz
outsl
lods
pop
push
ret
adc
fdivs
xor
adc
inc
fistl
mov
push
mov
rcl
clc
add
mov
and
sub
ret
inc
movsl
cmp
or
ljmp
movsl
lock
mov
xor
pop
xchg
mov
push
add
or
pop
inc
data16
mov
movsl
jb
sbb
fwait
or
lds
add
cmp
add
add
arpl
cmp
fidivrl
adc
ret
shll
jo
pop
inc
xchg
pop
xlat
movsl
mov
mov
push
popa
or
mov
lea
imulb
rolb
jb
sub
mov
push
lret
lret
pop
or
inc
insb
push
jae
iret
pop
cltd
dec
fwait
jmp
push
gs
aaa
iret
jmp
push
int
cmp
std
bound
inc
cmc
sub
scas
sbb
jmp
fcmovnu
push
xchg
leave
adc
pop
icebp
andl
pop
fmull
mov
xchg
dec
sub
push
pop
pop
jne
es
out
adc
mov
mov
sahf
loop
push
or
jg
dec
xchg
mov
imul
cli
jno
fs
xchg
fwait
mov
std
or
mov
inc
aas
lods
les
mov
sbb
mov
inc
rcll
dec
ss
mov
push
push
inc
pop
popa
scas
in
inc
fstps
fstpt
inc
aas
ja
mov
pop
lret
sbb
mov
mov
sarl
sbb
movsl
in
lock
daa
fwait
loope
xchg
mov
or
pop
test
mov
inc
sub
cmp
xchg
or
cld
inc
push
fcoml
lods
sbb
sbb
outsb
sbb
xor
bound
fdiv
cmp
xor
mov
cmp
cmc
sbb
fstpt
jnp
mov
mov
mov
lret
adc
sbb
mov
mov
cmp
mov
inc
sub
repz
hlt
sub
cmpsb
xchg
jbe
aam
xor
ljmp
in
rcll
into
push
dec
cmpl
mov
mov
mov
into
scas
jge
cmpsl
xchg
pop
lock
and
ljmp
jl
insl
mov
sub
push
sub
mov
xor
xchg
push
cmc
movsl
xor
mov
dec
stos
jge
aas
fildl
lcall
jbe
or
jnp
frstor
mov
ret
add
sbb
mov
xchg
mov
mov
push
and
inc
jnp
insl
insb
les
xchg
enter
add
push
pop
scas
sbb
inc
inc
stc
pop
mov
imul
loopne
in
in
pop
push
xor
jns
aam
push
mov
clc
notb
in
mov
lods
push
sub
inc
mov
sbb
ds
out
gs
inc
pop
mov
mov
mov
and
jmp
mov
aad
scas
adc
pop
loope
das
mov
or
push
inc
insb
or
sbb
addr16
and
mov
loopne
repnz
hlt
or
jne
mov
dec
xchg
push
in
jecxz
jnp
jae
hlt
inc
xlat
aam
cli
cltd
adcl
mov
int
jae
loope
mov
sbb
jns
mov
mov
sbb
comiss
sub
cli
sbb
push
call
ss
add
mov
fistpll
test
adc
mov
push
mov
cmp
pusha
mov
xchg
adc
and
mov
jae
cmp
inc
fwait
stc
ror
lock
mov
cmpl
aas
sti
fwait
mov
fldt
pushl
daa
adc
pop
inc
xchg
rclb
inc
add
jne
scas
mov
fdivrl
fadds
sti
xor
pop
addb
sub
rcrl
inc
jg
out
mov
inc
in
push
les
mov
push
pop
jns
fcomps
in
add
fnstsw
mov
mov
imul
jo
xor
mov
lock
nop
imul
pop
subb
push
xor
pop
shrl
stos
pmaxub
adc
mov
dec
aad
mov
push
mov
inc
jnp
add
out
cmp
mov
cmp
dec
cwtl
test
sub
mov
fisubs
or
lret
cs
call
pop
inc
dec
push
pop
sub
je
mov
jne
dec
jnp
sahf
leave
add
test
mov
mov
insl
mov
andb
adc
loopne
push
or
pop
ja
lea
scas
int
fldt
sbb
pop
pusha
push
lcall
in
stos
mov
dec
mov
lock
imul
mov
movl
mov
lcall
insl
mov
insb
jl
ds
pop
cmp
arpl
stc
jg
jp
call
loopne
fistpl
jno
shl
jbe
fwait
xor
push
les
add
pop
ret
ret
mov
test
fistps
jae
add
rcl
jbe
sti
aaa
sub
adc
pushf
fisubs
test
imul
or
mov
fisttpl
add
repz
or
or
jo
sub
sbb
out
sbb
xchg
cltd
enter
mov
ret
fcmovne
and
xor
xor
inc
pmulhw
fucomip
jl
xlat
sbb
mov
cmp
jmp
outsb
jo
scas
ds
xor
loope
scas
iret
cmp
in
icebp
push
cs
add
cmp
add
dec
fistpll
in
cmpsl
test
mov
inc
iret
jmp
das
push
jp
mov
push
jnp
in
xor
add
push
outsb
pusha
add
dec
push
pop
adc
bswap
pop
mov
std
add
mov
push
lret
notb
insb
into
cli
fdivl
mov
fcomps
cmp
sbb
jp
dec
enter
test
dec
cmpsb
cmpl
shll
frstor
sub
inc
adc
sahf
outsb
ret
push
mov
push
sub
pusha
out
and
xchg
add
add
xor
pop
adc
pop
xchg
notl
lahf
or
dec
aam
pop
out
maskmovq
divl
js
sar
pop
or
pop
scas
or
xlat
cmp
push
or
add
add
arpl
xor
and
das
addb
je
add
mov
sbb
adc
add
xlat
into
push
adc
pop
imul
inc
mov
adcl
add
jmp
add
pushf
sbb
xor
adc
imul
mov
xchg
scas
xor
scas
push
mov
jae
insb
mov
xor
or
in
sbb
pop
out
xor
ud1
lret
or
leave
setg
idivb
repz
or
push
sti
mov
decl
or
add
test
es
xor
or
daa
add
xor
int3
fcomp
or
or
testb
sbb
add
and
aas
aas
daa
add
or
out
ja
xor
sbb
cmpsl
or
xor
add
xlat
mov
pop
or
adc
ds
ds
pop
push
stos
jae,pt
mov
ja
or
add
sti
mov
jecxz
movl
test
daa
sub
add
push
pop
aas
dec
dec
cmp
jge
scas
pop
pushf
sbb
arpl
addl
sbb
and
add
lea
cmp
das
fucomi
stc
mov
adc
cmp
xor
add
and
or
mov
inc
cmp
cmp
pop
out
in
jmp
mov
mov
dec
or
in
xor
sbb
sub
outsl
int3
mov
fists
out
scas
imul
sub
add
adc
dec
mov
or
arpl
mov
mov
jnp
pop
add
cmp
sti
and
push
xor
xor
das
dec
pop
cmp
adc
push
sbb
and
or
jae
das
cmp
cmp
cmp
jl
pop
mov
or
cmp
stos
ja
in
fmuls
lret
adc
cmp
jo
jmp
cmp
jnp
jbe
dec
push
mov
cmp
fcomp
fcoms
pushl
iret
sub
pop
sbb
pop
sbb
les
shufps
pop
or
sbb
sarl
adc
das
ja
pop
repz
sbb
adc
push
pop
cmpsl
loope
jns
jge
mov
mov
loopne
mov
mov
and
pushf
push
inc
aas
add
push
mov
or
dec
xchg
scas
cmc
push
push
sbb
mov
mov
mov
xchg
push
arpl
and
mov
cmp
add
and
fnstenv
adc
mov
and
sti
pop
aas
add
testl
add
sub
adc
and
shrb
mov
cmp
add
sbb
aaa
out
xor
add
mov
sbb
mov
jbe
daa
add
aaa
add
add
jnp
popl
ja
push
pop
mov
fs
icebp
or
adc
insb
in
fwait
adc
sbb
aam
scas
repz
movsb
sti
ret
push
add
call
add
mov
push
fidivs
jbe
jnp
push
add
push
xchg
cwtl
cltd
ss
adc
fsubrl
lock
xor
push
adc
mov
addr16
mov
sbb
mov
xor
les
imul
inc
cmpb
add
push
push
dec
adc
mov
cltd
adc
cmc
mov
out
mov
push
adc
push
adc
add
dec
or
stc
ficomps
dec
bound
fsubs
jg
pop
pop
or
mov
fs
shlb
dec
out
insb
fmul
je
or
add
adc
push
lcall
lds
gs
mov
fwait
and
es
pop
outsl
cltd
cmp
jae
stos
out
inc
fldl
es
push
push
adc
lds
pminub
pop
and
sub
jno
ss
fldcw
nop
fdivrs
cs
aaa
repz
xchg
test
int3
popf
lock
cmp
or
shrl
add
mov
add
popa
outsb
insb
and
sbb
negl
ss
cmpps
outsl
fstps
int3
cmp
mov
iret
sub
or
mov
push
jnp
les
mov
and
mov
ja
add
mov
adc
pop
jns
mov
and
and
mov
outsb
or
fs
lahf
cmp
jl
xor
push
fcoms
xlat
sbb
lea
rcll
jmp
sbb
add
and
fcmovu
sbb
jno
fists
sbb
and
mov
and
add
cmp
pop
int3
lahf
and
das
addr16
scas
jne
sbb
jecxz
mov
call
data16
sub
aam
cmp
sub
sub
fistpl
add
sub
xor
sub
mov
daa
sub
sbb
xchg
pop
aad
outsl
jno
sub
movsl
inc
pop
or
cmp
data16
inc
imul
xor
add
cmc
es
sub
xor
lea
xlat
xor
int
pusha
and
jne
psadbw
pop
or
movsl
insb
pop
pushf
xchg
ret
daa
or
mov
xchg
xor
and
adc
and
xor
in
hlt
sbb
pushf
lea
out
and
jge
out
es
mov
mov
fcoms
pop
aad
imul
lahf
mov
movsb
push
into
outsl
or
data16
cmp
add
and
add
sbb
add
fcomps
sysexit
push
push
es
stos
xor
push
or
dec
outsl
popf
adc
in
cmp
and
loopne
adc
add
fs
mov
push
dec
ds
mov
fisubl
push
in
sbb
cmp
jp
sbb
imul
add
sarl
push
fwait
sbb
add
push
sub
loop
adc
js
mov
cmpsb
mov
lcall
sahf
mov
and
jmp
push
and
jns
or
pop
ret
js
and
sub
add
dec
leave
sub
loope
sarb
gs
bound
push
jg,pt
sub
nop
xor
insb
leave
cs
push
ret
or
sbb
outsb
fstps
ljmp
icebp
mov
cmp
and
push
sbb
lds
pop
popa
xor
sub
daa
sbb
dec
and
add
mov
fs
fsubs
jo
or
ret
xchg
or
push
icebp
cltd
mov
xchg
sub
cmp
xchg
call
push
mov
loopne
add
and
jnp
loopne
popf
sbb
in
xlat
push
lds
jo
sti
xchg
jo
ds
xor
in
adc
out
adc
xchg
repz
dec
std
adc
out
outsl
inc
and
or
rcl
stos
dec
imul
dec
rol
fidivrs
or
sbb
adc
daa
xlat
loope
cmp
arpl
xchg
jo
mov
nop
mov
jo
fmull
loope
push
negl
nop
push
ret
or
fisubs
mov
bound
mov
icebp
into
aas
mov
sub
xchg
test
push
add
arpl
push
popa
sub
sub
bound
jmp
pop
mov
adc
mov
cmp
or
lret
test
adc
pop
lods
and
push
sub
test
and
insb
fisttpll
adc
arpl
push
sbb
and
jnp
dec
mov
jne
in
adc
jne,pn
cmpb
arpl
call
sti
into
push
mov
xor
and
mov
out
mov
out
or
xor
out
mov
inc
sbb
js
lret
sub
xchg
lods
and
dec
push
filds
fcompl
cmp
inc
xchg
xor
mov
sbb
or
out
and
cmp
enter
ja
test
dec
clc
add
sti
or
insb
and
jne
sbb
xlat
cmp
cmp
stc
clc
adc
inc
and
dec
sub
test
insb
popa
mov
std
adc
fldenv
enter
sbb
lcall
ror
push
pop
xor
jmp
jp
pop
jae
inc
pop
pop
outsl
in
sub
pop
inc
push
ftst
aaa
xor
fcomp
icebp
adc
mov
loop
and
scas
push
enter
ja
sbb
mov
cmp
mov
and
lea
sbb
and
sar
cmp
fildll
ret
xchg
or
in
and
push
test
movsl
lahf
adc
mov
pop
cmp
ja
pusha
adc
fistps
and
jbe
adc
and
xor
xor
insl
pop
adc
mov
mov
mov
inc
cmp
mov
xchg
imul
jo
testb
xchg
shrb
imul
mov
es
jge
push
ss
daa
lret
js
push
sarb
insb
mov
mov
and
sbb
xchg
and
jno
xor
jmp
mov
out
test
lcall
pop
dec
iret
jno
in
gs
and
es
dec
test
mov
pusha
and
jg
int3
mov
mov
and
jl
sbb
xor
pop
imul
adc
mov
fiaddl
jmp
iret
outsl
outsl
inc
andb
stos
ja
int
arpl
or
or
fs
sub
pop
flds
xchg
adc
imulb
pop
jmp
cmp
lods
push
sti
cmp
jecxz
ret
add
adc
lods
adc
repz
and
push
sbb
push
add
je
xchg
xchg
fwait
das
or
shlb
ljmp
push
ret
add
or
aaa
add
or
mov
sahf
add
sbb
fmuls
and
jo
xchg
outsl
andl
cmp
into
js
es
cmp
push
lods
xchg
rcll
loopne
inc
xor
sbb
popa
push
mov
and
jmp
ja
sub
xor
loope
gs
sbb
inc
mov
movsb
sbb
aaa
adc
cltd
fldenv
fwait
ss
push
push
push
fwait
insl
les
sbb
mov
add
jg
push
xchg
add
add
lods
sbb
ja
jae
pop
add
arpl
cmp
imul
jne
inc
push
outsl
sbb
es
lods
test
jnp
and
sti
jne
shrb
or
ret
cs
or
jb
mov
add
mov
jae
jae
popa
or
jl
out
mov
or
daa
aas
add
repnz
into
cmp
lret
jno
bound
daa
out
bound
sub
das
mov
jo
cmp
enter
cs
add
or
insl
add
jae
add
cmc
add
or
sbb
mov
repz
addr16
addr16
cmc
dec
and
add
test
jae
mov
lcall
loope
mov
push
mov
add
lods
or
push
push
pop
add
add
cmp
in
sbb
jge
dec
push
leave
add
jo
mov
adc
sbb
daa
jge
ja
mov
cmp
add
adc
xlat
xchg
add
sub
fs
cmpsl
sbb
mov
daa
or
adc
adc
add
add
xor
or
sbbb
add
pop
inc
add
shrb
adc
clc
add
fistl
adc
imul
dec
xchg
sbbb
sbbb
push
and
sub
js
fstl
sbb
add
mov
dec
inc
push
js
add
mov
pop
dec
sbb
inc
addr16
mov
pop
jno
push
dec
add
inc
push
add
int
fists
add
add
stos
jp
bound
repnz
and
js
jae
sbb
mov
jnp
jl
int3
jbe
jge
jg
js
inc
jle
jmp
xor
jg
sbb
inc
inc
idivb
lcall
data16
sub
addr16
jae
dec
imul
jne
dec
dec
stos
int
and
jbe
fdivp
fdivp
je
add
icebp
adc
pushf
and
fnstenv
lock
out
jno
ss
stos
in
repz
add
ljmp
cmpsb
outsb
mov
add
push
or
out
jns
fisubrs
dec
push
jne
adc
lock
iret
out
je
fldenv
add
xor
cmp
data16
pop
xchg
insl
mov
jno
outsb
test
jae
insl
test
les
add
sbb
mov
mov
jb
lea
push
push
sbb
mov
mov
call
or
je
testl
jecxz
arpl
push
sub
ret
je
jae
jmp
and
pop
cli
add
adc
push
or
sbb
popa
ret
rcrl
je
inc
jbe
push
inc
jecxz,pn
push
ss
add
sbb
jo
xchg
pause
in
loope
mov
cmp
add
xchg
insl
insb
cwtl
cmp
xchg
adc
out
mov
or
aas
xchg
sbb
cmp
je
mov
xor
xorl
ret
test
addb
cmpb
dec
lcall
loopne
sub
push
pop
and
sahf
fisubl
add
fisubl
dec
fisttpl
jle
mov
cmp
adc
iret
xchg
xchg
cmpsb
adc
pop
orb
nop
push
das
jmp
jns
add
outsl
js
arpl
arpl
mov
bound
push
leave
inc
push
jge
sbb
adc
sbb
xchg
addl
jnp
outsb
jbe
jnp
aas
jbe
jnp
sbb
outsb
sbb
xchg
push
inc
or
addr16
adc
adcl
xor
add
mov
cwtl
xor
ja
jg
xorb
sbb
dec
cmp
cmp
adcb
add
xorl
add
addr16
notl
stos
adc
mov
arpl
jp
mov
int
outsb
or
or
loope
mov
js
out
and
xchg
sbb
xchg
and
jae
jl
insl
inc
popl
mov
add
sub
dec
or
adc
incl
push
push
popa
mov
or
and
add
mov
xchg
sbb
push
sbb
mov
inc
pop
ret
std
xor
jno
add
add
cwtl
xor
pusha
push
adc
rcl
fstl
cmp
jg
push
ret
push
pusha
iret
jle
jp
cmp
cmp
xor
mov
xorl
lods
mov
dec
bound
sub
and
cmpsb
sub
inc
sub
mov
popa
rorb
mov
xor
mov
xor
add
fldl
jmp
xor
xchg
sub
stos
test
popa
push
xchg
sarl
dec
dec
jg
add
mov
pop
cmp
or
dec
dec
lods
dec
stos
push
ja
adc
je
test
aam
xchg
outsb
sbb
ds
push
push
imul
loopew
pop
lret
pusha
in
add
xchg
arpl
je
xchg
adc
imul
pop
jg
fisttpl
adcb
test
mov
stc
dec
adc
or
sbb
or
sbb
mov
shlb
roll
push
inc
add
inc
xchg
push
ret
inc
and
xchg
cmpsl
mov
lcall
imul
add
loopne
icebp
add
test
fidivl
js
dec
push
or
mov
sub
bound
xchg
xor
arpl
xchg
lock
movsb
arpl
scas
add
enter
push
or
bound
xorl
add
jg
pop
mov
push
stc
dec
cmp
jg
test
inc
sub
add
outsb
inc
testl
or
adcb
loop
mov
and
add
xor
push
sbb
fstpt
dec
or
jbe
mov
sub
or
js
pop
cmp
mov
outsl
sahf
dec
gs
jge
je
pushf
and
lea
jbe
mov
imul
mov
sub
mov
out
je
in
ja
jg
xor
push
and
and
add
pop
xchg
mov
fwait
js
imul
dec
push
add
int
sarb
pop
sbb
sub
mov
jns
inc
jle
daa
adc
pop
jno
jne
adc
sbb
xchg
inc
jmp
adc
add
js
ret
aad
js
cld
into
push
pop
push
inc
shrl
loope
xor
pushf
jb
addr16
idivb
leave
hlt
mov
adc
xchg
out
jg
popa
dec
imul
outsb
test
rolb
mov
xlat
pop
lods
sub
js
xor
pop
push
push
sbb
xchg
mov
dec
and
jns
push
sbb
mov
loopne
fistpl
enter
dec
push
cmc
inc
push
rcl
cmp
fists
pop
ret
lock
mov
sbb
fildl
fisttpll
adc
inc
mov
dec
popf
mov
repz
nop
cs
mov
push
int
push
adc
loopne
inc
aam
ss
push
fsubrp
ficompl
mov
aaa
inc
or
ret
test
jno
outsb
dec
ss
xor
mov
dec
daa
ret
jb
push
arpl
ja
imul
inc
push
adc
inc
lds
rolb
push
aam
fsincos
bound
jmp
xchg
std
leave
outsb
js
or
std
aam
push
arpl
sub
mov
stc
add
dec
push
dec
packssdw
fs
mov
jle
mov
push
int
iret
push
mov
rorb
imul
push
pop
lds
arpl
test
les
dec
ret
fadds
out
dec
jne
idivl
jno
add
int
push
push
mov
orb
hlt
testb
lds
mov
inc
cltd
outsb
and
sbb
dec
dec
inc
inc
pop
inc
push
gs
push
test
or
mov
mov
dec
gs
push
jge
outsl
mov
movb
cltd
ds
jb
fld1
fidivl
hlt
imul
daa
xor
popa
stos
inc
mov
lcall
mov
and
xchg
pop
fildl
es
xor
fdivrl
jb
outsl
test
pop
rorl
sbb
fs
imul
cmp
es
push
ss
mov
inc
les
push
push
sbbl
sbb
adc
out
dec
cmpsb
repz
mov
daa
add
mov
jmp
inc
sub
sbb
cmp
xchg
insb
xor
je
test
lods
and
push
int3
sbb
mov
divb
mov
push
adc
dec
jne
test
push
mov
bound
ret
ja
adc
add
push
pop
dec
jb
jno
and
adc
xor
dec
adc
sbb
push
inc
push
jo
jmp
or
push
out
sbb
or
sbb
fistpl
push
and
rcrb
dec
sti
mov
rcrl
test
inc
sbb
into
int3
add
jnp
jnp
mov
cmp
repnz
push
sub
or
lds
dec
test
push
movsb
or
jne
inc
add
roll
pop
or
fxch
adc
mov
xchg
sub
fs
push
push
stc
adc
sub
push
add
popa
add
push
mov
adc
pop
or
xor
pop
lret
enter
or
add
scas
push
xlat
dec
movsb
add
xor
add
shlb
add
add
mov
mov
pop
sgdtl
sbb
adc
mov
xchg
sbb
xchg
mov
mov
xor
or
jnp
adc
fildl
fs
sbb
jb
stos
inc
dec
or
xchg
pop
mov
dec
adc
mov
xchg
push
sbb
push
fucomp
sbb
outsb
pushf
inc
pop
ret
pop
push
pop
push
hlt
add
rcrb
push
mov
movsl
adc
mov
sub
shlb
xor
push
adc
and
arpl
dec
add
cs
add
insb
and
sbb
addb
xchg
adc
scas
push
inc
push
mov
cli
add
dec
imul
mov
add
andb
addl
dec
and
lods
js
pop
nop
mov
and
xchg
mov
sbb
xchg
pop
xchg
sub
daa
add
popa
or
and
stos
cmp
inc
icebp
push
add
adc
or
repz
mov
cmp
cmpsb
outsl
adc
push
unpcklps
testl
dec
sbb
jo
and
lds
add
pop
insl
add
jo
movsb
inc
int
adc
outsb
adc
jae
or
sbb
or
shrl
lea
xor
push
add
mov
adc
jg
fistl
pop
pop
pop
adc
push
and
pop
dec
sbb
sysret
mov
mov
sbb
add
mov
sub
pushf
test
or
push
and
add
movsl
add
test
pop
je
pop
pop
js
cmp
enter
sub
sbb
testl
xchg
add
jne
cmp
push
push
add
mov
mov
or
adc
jne
or
dec
push
inc
sbb
shrl
push
or
add
or
mov
dec
dec
out
add
loopne
mov
jp
cmp
cmpsb
fdivrs
push
das
sub
nop
xor
push
dec
add
mov
or
sbb
or
pop
pop
mov
inc
inc
dec
mov
add
fdivrl
movsb
push
push
xlat
lret
mov
inc
dec
push
inc
xchg
mov
dec
sub
or
mov
push
add
test
jo
inc
sbb
or
push
mov
push
pop
in
jnp
call
xor
loope
aaa
push
inc
inc
test
andb
add
inc
xchg
dec
fwait
sub
xchg
xor
push
out
mov
fiadds
push
add
aam
pop
adc
data16
bound
movsl
add
jne
pop
ljmp
sub
jb
ret
sub
or
sbb
lret
sub
into
clc
popa
sub
adcb
pop
ror
pcmpgtw
fs
pusha
and
inc
pusha
cmp
pop
add
push
inc
enter
inc
fcoms
adc
daa
or
and
ret
es
fnstenv
faddl
call
imul
xchg
lret
lret
pushw
add
test
add
lahf
push
cmp
mov
add
enter
xor
add
mov
adc
lods
push
add
add
xchg
cld
call
jb
jne
insb
push
jb
je
arpl
insb
outsl
arpl
push
gs
pop
push
gs
outsb
outsw
inc
cmovl
fs
imul
popa
jb
inc
js
dec
jae
inc
inc
push
dec
gs
cmp
push
jae
jb
arpl
popa
jne
inc
popa
outsb
addr16
inc
adc
insl
arpl
notb
gs
jnp
inc
fs
jae
cmovle
fdivrp
in
jne
bound
dec
inc
outsl
outsb
jae
jp
outsl
jne
inc
jne
je
pop
fdivs
pop
xchg
cmovae
cmp
je
push
adc
mov
inc
adc
sti
mov
push
popa
adc
inc
xorb
jbe
iret
xchg
or
or
fisubrs
fbld
inc
aad
dec
fs
sbb
fcom
pop
push
insb
dec
push
out
faddl
dec
imul
std
loope
fstps
fstl
gs
dec
gs
cmp
push
iret
jne
imul
xor
aas
ljmp
or
je
das
sub
or
hlt
add
sti
push
dec
ds
stos
outsb
inc
outsb
xor
push
neg
gs
pusha
dec
popa
inc
jb
fstl
lods
mov
outsb
gs
push
push
add
xor
pop
adc
adc
fldenv
nop
xor
cld
sub
jo
stc
rclb
outsl
ja
es
outsb
pushf
fcoms
popa
insl
aad
jae
fiadds
cmp
push
imull
fucomi
inc
adc
jae
fdivs
cmp
inc
push
xchg
push
xchg
adc
add
popa
addr16
mov
addr16
data16
sbb
jo
and
je
movsb
adc
inc
fcmovnb
fnstcw
adc
lods
insl
sub
xchg
mov
push
mov
inc
insl
jo
jns
je
and
xor
sub
sbb
mov
popa
incl
pmaxsw
mov
pop
dec
jmp
fsubrs
addb
cmova
in
lret
xor
outsl
inc
outsl
js
movsl
fldenv
xchg
in
pop
xor
mov
sbb
mov
fcoml
test
out
sub
jo
arpl
lret
pop
mov
repz
pop
sti
pop
imul
inc
push
rol
inc
imul
or
add
dec
cmp
inc
dec
add
add
pop
inc
sub
pusha
add
cmp
add
sub
enter
dec
push
pop
adc
mov
inc
or
add
pop
jnp
dec
mov
cs
aaa
xor
add
ds
mov
mov
movsl
jo
ds
add
inc
inc
cwtl
dec
xor
les
je
inc
push
or
in
mov
push
jbe
rolb
or
push
add
add
imul
add
pusha
daa
or
cmp
mov
cs
xchg
cmpsb
add
push
cs
jb
scas
insb
inc
js
inc
inc
daa
add
add
ljmp
test
pop
sub
add
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
