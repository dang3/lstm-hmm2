jmp
mov
jmp
mov
jmp
mov
xor
aaa
fs
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
movl
mov
push
call
cmp
jo
mov
xchg
lea
mov
mov
lea
mov
lea
lea
mov
lea
lea
xchg
mov
lea
movl
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
cmp
jg
xchg
jmp
xchg
xchg
dec
lea
lea
dec
mov
lea
xchg
mov
lea
lea
lea
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
xchg
cmp
jae
dec
inc
inc
dec
inc
inc
cmp
jne
mov
xchg
mov
mov
mov
mov
inc
dec
je
mov
mov
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
pop
ret
add
add
xor
cmp
xor
ss
aaa
cmp
xor
xor
add
in
add
mov
mov
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
mov
mov
push
call
mov
cmp
jnp
mov
dec
inc
dec
lea
inc
inc
dec
mov
mov
lea
lea
mov
mov
lea
inc
dec
je
lea
xchg
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
cmp
jg
xchg
jmp
xchg
xchg
dec
lea
lea
dec
mov
lea
xchg
mov
lea
lea
lea
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
mov
push
call
xchg
cmp
jae
dec
inc
inc
dec
inc
inc
cmp
jne
mov
xchg
mov
mov
mov
mov
inc
dec
je
mov
mov
mov
mov
mov
mov
push
call
movl
mov
push
call
cmp
jno
mov
mov
mov
mov
lea
mov
mov
xchg
inc
inc
inc
dec
mov
movl
mov
push
call
cmp
jo
mov
xchg
lea
mov
mov
lea
mov
lea
lea
mov
lea
lea
xchg
mov
lea
mov
mov
mov
push
call
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
ja
lea
lea
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
xchg
mov
dec
movl
mov
push
call
call
mov
mov
mov
push
call
movl
mov
push
call
call
call
mov
pop
ret
add
ss
aaa
xor
cmp
xor
xor
add
add
xor
xor
cmp
xor
add
xor
aaa
ss
cmp
xor
xor
cmp
xor
push
mov
add
mov
mov
mov
mov
lea
lea
xchg
lea
mov
xchg
xchg
inc
inc
inc
dec
je
lea
mov
xchg
mov
inc
inc
mov
cmp
je
call
mov
mov
mov
mov
jmp
mov
lea
mov
dec
mov
dec
dec
jne
lea
lea
mov
xor
divl
test
jne
cmp
ja
lea
lea
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
xchg
mov
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
cmp
jnp
mov
dec
inc
dec
lea
inc
inc
dec
mov
mov
lea
lea
mov
mov
lea
inc
dec
je
lea
xchg
mov
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
jno
mov
mov
mov
mov
lea
mov
mov
xchg
inc
inc
inc
dec
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
xchg
cmp
jae
dec
inc
inc
dec
inc
inc
cmp
jne
mov
xchg
mov
mov
mov
mov
inc
dec
je
mov
mov
mov
mov
cmp
je
jmp
cmp
je
xchg
lea
mov
mov
lea
mov
lea
xchg
inc
inc
inc
lea
mov
mov
lea
mov
lea
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jo
mov
xchg
lea
mov
mov
lea
mov
lea
lea
mov
lea
lea
xchg
mov
lea
mov
cmp
je
call
cmp
je
xchg
lea
mov
mov
lea
mov
lea
xchg
inc
inc
inc
lea
mov
mov
lea
mov
lea
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
inc
gs
jb
arpl
fs
jae
add
push
mov
add
mov
cmp
je
call
mov
cmp
jnp
mov
dec
inc
dec
lea
inc
inc
dec
mov
mov
lea
lea
mov
mov
lea
inc
dec
je
lea
xchg
mov
sub
mov
mov
cmp
jg
xchg
jmp
xchg
xchg
dec
lea
lea
dec
mov
lea
xchg
mov
lea
lea
lea
mov
push
mov
mov
xor
call
mov
cmp
ja
lea
lea
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
xchg
mov
dec
mov
mov
mov
call
cmp
jo
mov
xchg
lea
mov
mov
lea
mov
lea
lea
mov
lea
lea
xchg
mov
lea
push
mov
mov
xor
call
mov
mov
mov
mov
mov
jmp
mov
lea
mov
dec
mov
dec
dec
jne
lea
lea
mov
mov
mov
mov
lea
lea
xchg
lea
mov
xchg
xchg
inc
inc
inc
dec
je
lea
mov
xchg
mov
inc
inc
mov
mov
push
add
jmp
mov
mov
mov
cmp
jnp
mov
dec
inc
dec
lea
inc
inc
dec
mov
mov
lea
lea
mov
mov
lea
inc
dec
je
lea
xchg
lea
mov
push
mov
jmp
mov
cmp
jg
xchg
jmp
xchg
xchg
dec
lea
lea
dec
mov
lea
xchg
mov
lea
lea
lea
mov
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
je
xchg
lea
mov
mov
lea
mov
lea
xchg
inc
inc
inc
lea
mov
mov
lea
mov
lea
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
xchg
cmp
jae
dec
inc
inc
dec
inc
inc
cmp
jne
mov
xchg
mov
mov
mov
mov
inc
dec
je
mov
mov
mov
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jno
mov
mov
mov
mov
lea
mov
mov
xchg
inc
inc
inc
dec
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
jmp
mov
lea
mov
dec
mov
dec
dec
jne
lea
lea
mov
sub
add
add
mov
mov
mov
lea
lea
xchg
lea
mov
xchg
xchg
inc
inc
inc
dec
je
lea
mov
xchg
mov
inc
inc
lea
pushl
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
cmp
jo
mov
xchg
lea
mov
mov
lea
mov
lea
lea
mov
lea
lea
xchg
mov
lea
cmp
ja
lea
lea
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
xchg
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jg
xchg
jmp
xchg
xchg
dec
lea
lea
dec
mov
lea
xchg
mov
lea
lea
lea
mov
mov
mov
movl
cmp
jno
mov
mov
mov
mov
lea
mov
mov
xchg
inc
inc
inc
dec
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
lea
mov
dec
mov
dec
dec
jne
lea
lea
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jno
mov
mov
mov
mov
lea
mov
mov
xchg
inc
inc
inc
dec
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jnp
mov
dec
inc
dec
lea
inc
inc
dec
mov
mov
lea
lea
mov
mov
lea
inc
dec
je
lea
xchg
mov
pop
ret
push
cmp
testb
push
pop
insb
jle
jle
jp
inc
jnp
adcl
test
arpl
imul
pop
pop
dec
jle
imul
inc
imul
imul
pop
imul
bound
test
pop
pop
pop
pop
jp
inc
imul
pop
cmpb
jp
sub
inc
jnp
adcl
pop
pop
adcb
pop
imul
adcl
pop
sub
inc
pop
jnp
adcl
pop
pop
pop
pop
pop
dec
mov
lahf
pop
hlt
sub
mov
pop
insb
jo
cmp
xor
push
pop
add
push
pop
jmp
push
pop
cmc
cmp
pop
cmp
or
push
pop
adc
push
pop
cmp
cmp
mov
fwait
pop
pop
sahf
pop
out
add
rcrl
out
add
negl
out
add
sti
fwait
pop
pop
sahf
pop
out
add
lcall
out
add
mov
fwait
pop
pop
sahf
pop
out
add
mov
fwait
pop
pop
sahf
pop
out
add
jmp
pop
pop
sahf
pop
out
add
sub
sahf
pop
out
mov
push
fsubs
ficomps
mov
mov
pop
fsubs
add
pop
sahf
pop
fbld
push
mov
aas
inc
mov
pop
inc
mov
arpl
pop
sahf
pop
add
cmp
pop
fbld
pop
add
pop
fcomip
inc
dec
mov
repz
sbb
pop
pop
pop
mov
pop
mov
xor
pop
add
out
xchg
pop
pop
pop
sahf
pop
iret
mov
sbb
and
enter
mov
sbb
sahf
pop
lret
lods
pop
pop
pop
adcl
lret
mov
add
pop
fcomip
inc
sub
push
and
mov
pop
pop
mov
pop
imul
pop
lret
mov
sahf
pop
sti
mov
pop
sbb
sahf
pop
testl
mov
add
lret
mov
add
mov
sbb
sti
mov
pop
pop
inc
mov
pop
fcomip
inc
das
mov
add
mov
sti
sbb
sahf
pop
mov
sbb
pop
incl
pop
fcomip
inc
das
mov
cwtl
pop
negl
cwtl
pop
sti
sbb
pop
push
cwtl
pop
lret
or
and
and
xor
hlt
hlt
mov
aas
sbb
sahf
pop
out
mov
inc
sahf
pop
jmp
pop
jecxz
mov
addl
xlat
and
pop
jecxz
mov
dec
jg
xchg
pop
pop
adcl
push
aaa
inc
mov
dec
jg
xchg
pop
pop
adcl
mov
dec
mov
jmp
fwait
cmp
repz
hlt
adcl
xchg
add
repz
hlt
xlat
hlt
stc
mov
pop
fsubs
add
push
mov
xchg
sarb
pop
pop
pop
push
jnp
pop
pop
push
push
pop
pop
pop
push
cmpsl
pop
jmp
pop
pop
xlat
push
add
jmp
pop
pop
ds
push
lcall
pop
pop
add
ret
ljmp
push
fiadds
adc
ret
incl
pop
pop
xor
jb
pop
push
push
insb
sbb
mov
sahf
cmc
ds
mov
leave
push
mov
fsubs
ficoms
add
fdivrp
cld
hlt
hlt
hlt
imul
pop
pop
mov
sahf
fsubrl
sub
jmp
hlt
hlt
fistps
mov
cmc
hlt
hlt
sahf
pop
repz
pop
xchg
pop
fstpl
push
xchg
pop
fstpl
pop
sub
mov
lock
xchg
xchg
cmc
pop
lock
jb
pop
push
fstpl
pop
mov
hlt
hlt
hlt
pop
lahf
pop
out
xchg
jb
pop
and
mov
pop
lock
sub
mov
repz
mov
or
cmc
hlt
hlt
cmc
pop
icebp
mov
out
push
fstpl
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
fstpl
pop
sub
mov
mov
mov
out
cmc
hlt
hlt
sbb
sub
mov
mov
xchg
sbb
cmp
pop
pop
pop
lahf
pop
icebp
sub
mov
and
out
sub
mov
out
lahf
xchg
xchg
cmc
pop
lock
jb
pop
push
mov
push
pop
dec
mov
hlt
sub
mov
xchg
push
cmp
pop
pop
pop
mov
sub
mov
xchg
sub
mov
pop
and
mov
xchg
sbb
cmp
pop
pop
pop
mov
sub
mov
xchg
mov
pop
lahf
pop
repnz
mov
xchg
mov
pop
sub
mov
pop
lahf
cltd
and
mov
xchg
mov
and
mov
xchg
and
xchg
and
mov
pop
and
mov
xchg
sbb
cmp
pop
pop
pop
lahf
pop
repnz
mov
and
hlt
lahf
pop
cmc
mov
fdivr
and
inc
push
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
xchg
cmp
jae
dec
inc
inc
dec
inc
inc
cmp
jne
mov
xchg
mov
mov
mov
mov
inc
dec
je
mov
mov
mov
push
call
mov
movl
cmp
ja
lea
lea
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
xchg
mov
dec
mov
mov
call
mov
mov
cmp
jg
xchg
jmp
xchg
xchg
dec
lea
lea
dec
mov
lea
xchg
mov
lea
lea
lea
mov
movl
mov
mov
call
mov
cmpl
je
mov
cmp
jnp
mov
dec
inc
dec
lea
inc
inc
dec
mov
mov
lea
lea
mov
mov
lea
inc
dec
je
lea
xchg
mov
mov
call
mov
cmpl
je
mov
mov
mov
mov
jmp
mov
lea
mov
dec
mov
dec
dec
jne
lea
lea
lea
push
push
mov
sub
push
mov
push
call
cmp
jno
mov
mov
mov
mov
lea
mov
mov
xchg
inc
inc
inc
dec
mov
mov
cmp
je
mov
subb
mov
mov
mov
mov
jmp
mov
lea
mov
dec
mov
dec
dec
jne
lea
lea
xor
add
mov
xor
mov
cmp
jnp
mov
dec
inc
dec
lea
inc
inc
dec
mov
mov
lea
lea
mov
mov
lea
inc
dec
je
lea
xchg
incl
mov
cmp
jne
cmp
je
xchg
lea
mov
mov
lea
mov
lea
xchg
inc
inc
inc
lea
mov
mov
lea
mov
lea
dec
mov
call
cmp
jno
mov
mov
mov
mov
lea
mov
mov
xchg
inc
inc
inc
dec
mov
mov
push
mov
push
call
cmpl
je
cmp
jno
mov
mov
mov
mov
lea
mov
mov
xchg
inc
inc
inc
dec
mov
mov
mov
mov
mov
jmp
mov
lea
mov
dec
mov
dec
dec
jne
lea
lea
mov
mov
lea
lea
xchg
lea
mov
xchg
xchg
inc
inc
inc
dec
je
lea
mov
xchg
mov
inc
inc
push
mov
pushl
xchg
push
jmp
xchg
cmp
jae
dec
inc
inc
dec
inc
inc
cmp
jne
mov
xchg
mov
mov
mov
mov
inc
dec
je
mov
mov
mov
mov
pop
ret
add
add
outsb
add
insb
add
add
add
add
add
add
add
jb
jne
insb
push
jb
je
arpl
push
mov
add
mov
mov
lea
lea
xchg
lea
mov
xchg
xchg
inc
inc
inc
dec
je
lea
mov
xchg
mov
inc
inc
movb
mov
mov
mov
add
mov
xor
add
cmp
jne
pushl
push
jmp
add
sub
cmp
jne
mov
mov
lea
lea
xchg
lea
mov
xchg
xchg
inc
inc
inc
dec
je
lea
mov
xchg
mov
inc
inc
cmpb
jne
movb
cmp
je
xchg
lea
mov
mov
lea
mov
lea
xchg
inc
inc
inc
lea
mov
mov
lea
mov
lea
dec
push
call
mov
mov
mov
cmp
jo
mov
xchg
lea
mov
mov
lea
mov
lea
lea
mov
lea
lea
xchg
mov
lea
jmp
cmp
ja
lea
lea
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
xchg
mov
dec
movb
mov
mov
mov
mov
jmp
mov
lea
mov
dec
mov
dec
dec
jne
lea
lea
mov
mov
pop
ret
add
jo
jo
ja
imul
arpl
jo
insb
add
add
add
in
add
cmp
jno
mov
mov
mov
mov
lea
mov
mov
xchg
inc
inc
inc
dec
mov
mov
cmp
jg
xchg
jmp
xchg
xchg
dec
lea
lea
dec
mov
lea
xchg
mov
lea
lea
lea
mov
call
test
jne
mov
jmp
movw
cmp
jo
mov
xchg
lea
mov
mov
lea
mov
lea
lea
mov
lea
lea
xchg
mov
lea
call
lea
mov
pop
ret
lea
push
mov
add
cmp
jno
mov
mov
mov
mov
lea
mov
mov
xchg
inc
inc
inc
dec
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
call
mov
mov
lea
lea
xchg
lea
mov
xchg
xchg
inc
inc
inc
dec
je
lea
mov
xchg
mov
inc
inc
mov
mov
mov
push
call
mov
mov
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
mov
push
call
mov
mov
mov
mov
jmp
mov
lea
mov
dec
mov
dec
dec
jne
lea
lea
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
ja
lea
lea
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
xchg
mov
dec
mov
mov
mov
push
call
xchg
cmp
jae
dec
inc
inc
dec
inc
inc
cmp
jne
mov
xchg
mov
mov
mov
mov
inc
dec
je
mov
mov
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
ja
lea
lea
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
xchg
mov
dec
push
call
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
call
mov
mov
lea
lea
xchg
lea
mov
xchg
xchg
inc
inc
inc
dec
je
lea
mov
xchg
mov
inc
inc
mov
mov
mov
push
call
mov
mov
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
mov
push
call
mov
mov
mov
mov
jmp
mov
lea
mov
dec
mov
dec
dec
jne
lea
lea
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
ja
lea
lea
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
xchg
mov
dec
mov
mov
mov
push
call
xchg
cmp
jae
dec
inc
inc
dec
inc
inc
cmp
jne
mov
xchg
mov
mov
mov
mov
inc
dec
je
mov
mov
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
mov
cmp
jg
xchg
jmp
xchg
xchg
dec
lea
lea
dec
mov
lea
xchg
mov
lea
lea
lea
mov
mov
pop
ret
add
xor
xor
cmp
xor
add
cmp
xor
ss
xor
xor
cmp
xor
add
popa
jo
ja
jp
arpl
add
push
mov
add
movl
movl
movw
mov
push
mov
push
mov
push
call
call
call
xchg
cmp
jae
dec
inc
inc
dec
inc
inc
cmp
jne
mov
xchg
mov
mov
mov
mov
inc
dec
je
mov
mov
mov
movl
mov
push
call
movl
mov
push
call
mov
mov
lea
lea
xchg
lea
mov
xchg
xchg
inc
inc
inc
dec
je
lea
mov
xchg
mov
inc
inc
mov
mov
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
call
cmp
ja
lea
lea
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
xchg
mov
dec
movl
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
mov
mov
lea
lea
xchg
lea
mov
xchg
xchg
inc
inc
inc
dec
je
lea
mov
xchg
mov
inc
inc
movl
mov
push
call
cmp
jo
mov
xchg
lea
mov
mov
lea
mov
lea
lea
mov
lea
lea
xchg
mov
lea
movl
mov
push
call
mov
mov
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
mov
pop
ret
add
add
xor
xor
add
add
xor
xor
cmp
xor
add
subl
jae
mov
cmp
je
xchg
lea
mov
mov
lea
mov
lea
xchg
inc
inc
inc
lea
mov
mov
lea
mov
lea
dec
mov
mov
lea
call
mov
cmp
jnp
mov
dec
inc
dec
lea
inc
inc
dec
mov
mov
lea
lea
mov
mov
lea
inc
dec
je
lea
xchg
ret
ret
lea
or
jbe
outsl
fildl
add
test
scas
mov
add
pusha
mov
clc
inc
mov
xor
icebp
add
insl
jno
add
or
dec
fisttpl
add
add
add
loopne
add
xchg
imulb
repnz
icebp
add
outsb
cmp
mov
fdivrl
jbe
xor
add
fs
imul
sub
das
add
add
js
add
fiaddl
out
mov
stc
outsb
std
fadds
fsubrl
add
push
dec
jl
pop
xchg
fiaddl
sbb
add
insb
ret
or
add
add
add
ss
rorb
push
loope
stos
jae
jle
add
fs
mov
pop
push
add
xor
xchg
sub
pop
fcompl
sub
xchg
sbb
add
inc
cmp
inc
arpl
daa
cmp
mov
jmp
mov
jle
insl
push
jg
std
out
dec
jle
pusha
add
mov
mov
lock
cmp
pop
pop
inc
addl
mov
lds
mov
pop
sahf
fs
mov
add
cmpsl
xor
adc
sbb
sahf
sbb
add
rolb
sbb
add
sub
dec
dec
add
add
add
add
aaa
adc
addl
aas
lret
push
mov
add
add
add
aas
cmp
fidivl
push
adc
mov
add
add
leave
jecxz
int
sub
in
cmp
or
add
inc
xchg
add
add
mov
rcrb
sub
cmpsl
fisttpll
loop
xchg
xchg
fadds
mov
add
add
mov
add
inc
les
std
add
adc
test
add
shll
push
mov
les
repz
adc
ret
loopne
test
xchg
sub
xor
sub
insl
xor
push
mov
pusha
loope
add
inc
add
stos
pop
sbb
add
flds
dec
or
and
add
aam
jecxz
dec
add
cmp
out
test
lods
data16
clc
inc
add
add
in
enter
lret
inc
add
mov
mov
add
add
loop
add
push
mov
adc
rclb
dec
popa
ja
sub
addb
flds
cmpsb
add
ds
cmpsb
add
pop
sbbl
add
mov
rorb
ror
shlb
inc
add
dec
hlt
out
mov
popl
in
mov
cmp
mov
add
mov
inc
xchg
cmp
gs
push
in
lods
jns
ret
mov
inc
add
add
add
add
sub
add
sub
pushf
push
xor
addl
add
xchg
cli
add
push
add
notb
push
add
dec
mov
and
xchg
xor
mov
nop
add
lods
inc
pushf
in
mov
int
push
repz
stc
scas
jp
cmp
or
add
mov
loop
push
add
mov
xlat
or
add
stc
add
sub
lcall
es
stos
cwtl
jo
mov
lcall
pop
add
lret
mov
out
mov
pushf
aas
ljmp
cmpsl
add
mov
cmp
add
add
xor
daa
lods
cli
loopne
aas
add
add
add
movl
sub
or
imul
add
icebp
mov
add
cld
in
movsl
lret
mov
lahf
mov
jl
iret
mov
cmp
mov
inc
aam
xor
ret
es
push
les
cwtl
inc
xchg
push
ljmp
insl
push
lods
shl
adc
out
mov
int3
mov
jne
pop
outsb
lahf
add
rcrb
push
xchg
mov
push
xchg
in
dec
jmp
test
sbb
pop
sbb
jl
aam
loop
xchg
push
jbe
pusha
imul
add
popa
ljmp
imul
xor
out
mov
movsb
fs
pop
mov
mov
mov
jne
aas
inc
jl
cmp
fwait
icebp
sbb
jne
fldcw
shll
in
in
bound
push
das
jns
in
int3
cwtl
xchg
xchg
popf
add
sub
inc
jl
addr16
icebp
mov
cs
insb
mov
xchg
cmp
mov
sbb
sbb
aas
stos
fbld
xchg
xchg
ficoms
and
pop
pop
push
push
fsubrs
mov
adcl
aaa
dec
int
inc
jnp
push
inc
inc
dec
adc
iret
push
cmp
or
lock
sarl
inc
pop
push
xchg
or
sub
popf
pop
fidivrl
mov
imul
fdivrp
cmpsl
pop
push
shlb
mov
loopne
cmc
leave
icebp
mulb
hlt
test
arpl
jbe
mov
aad
jg
popf
aaa
xchg
jbe
xchg
add
jne
pop
fstl
inc
push
dec
sub
xor
scas
or
scas
cld
or
and
cmp
cmp
lods
jb
hlt
fistpll
push
xchg
cmpsb
ret
cli
hlt
in
fwait
insl
ror
fs
daa
hlt
aaa
mov
sbb
jo
fnsave
jl
pusha
addr16
inc
nop
push
ds
sub
call
loop
aas
sub
push
mov
mov
mov
lahf
inc
out
ljmp
and
add
inc
pop
out
subb
cmp
pop
cmp
std
cmp
lret
outsb
shrb
adc
bound
add
push
ja
lcall
xor
mov
int
xchg
jge
in
dec
and
pop
mov
add
mov
fsubrl
or
pop
add
rolb
ficoml
jg
cld
shll
lcall
mov
loop
inc
ds
cmp
lea
fmul
out
jnp
rol
mov
fists
es
inc
cmc
inc
mov
sub
sub
loop
sub
call
enter
and
data16
in
jne
scas
mov
cmc
mov
rcll
push
inc
mov
or
add
fdivr
ds
pop
gs
add
add
jmp
mov
imul
lods
in
or
lea
imul
outsl
add
addb
mov
movsb
cs
shl
aad
mov
xchg
dec
sbb
dec
dec
outsl
fld
jl
les
add
in
or
lea
or
pop
dec
push
pop
push
cld
dec
adc
dec
stos
pushf
xor
push
jmp
pop
sbbb
jg
or
dec
aas
orb
or
dec
sub
mov
dec
div
movsl
push
std
xor
xor
gs
cwtl
mov
sbb
xlat
mov
xor
mov
sub
lock
and
das
in
sub
mov
cmp
shrl
dec
pushf
test
insl
ljmp
cmpsl
repz
pop
mov
enter
adc
sbb
stc
cs
daa
jnp
and
dec
cmc
rcrl
pop
pop
sti
rcrb
sbb
in
jo
pushf
fmuls
ret
mov
and
sub
add
clc
jnp
dec
xchg
add
xchg
les
push
cli
lods
cmp
fmulp
out
add
jns
push
inc
pop
dec
jae
je
lcall
push
fcmovu
mov
pop
gs
sbb
xor
test
jecxz
xchg
aam
shrl
out
add
stos
dec
adc
push
aam
mov
add
je
inc
dec
xchg
xor
shll
xor
not
mov
out
loop
cld
push
or
xchg
pop
ja
fimull
dec
push
or
aad
fwait
and
sbb
cwtl
mov
jne
cmp
mov
cmpb
sub
xorl
mov
mov
lcall
push
in
push
popf
sti
jp
add
push
insb
cmpb
add
push
in
xlat
sub
filds
setb
pop
lea
and
push
sbb
popf
mov
mov
push
jne
mov
push
push
shlb
dec
cmp
cmp
sarb
lea
scas
cld
add
add
daa
mov
inc
ret
pop
pop
jecxz
loop
jbe
jne
push
xlat
outsb
inc
pop
xor
or
test
cmpsb
inc
sbb
push
outsl
ja
xchg
mov
and
imul
jge
pushf
xchg
lds
cmp
mov
xor
push
cwtl
in
jae
jae
sbb
cmpsl
jge
cli
mov
cmp
or
fnsave
lods
les
xor
push
xor
or
xlat
scas
fcmovne
inc
and
push
cmp
add
sub
cmpsb
inc
daa
shr
or
enter
daa
repz
idivb
dec
push
repz
push
cmpl
js
mov
das
fisubl
lcall
push
xchg
mov
pop
aad
push
or
inc
jge
jae
call
cmp
jbe
pop
and
push
loope
mov
inc
cmp
sub
outsb
xor
mov
push
cmp
cmpb
sbb
fldcw
xor
roll
push
sub
sub
jns
fistl
lcall
mov
sub
jl
movsl
test
cmc
les
xchg
push
mov
mov
outsb
test
jbe
ss
lods
cmp
dec
lret
adc
enter
cmp
pop
dec
pusha
mov
cli
hlt
into
or
cmc
or
xor
mov
push
loop
daa
pusha
stc
lahf
sub
adc
arpl
xchg
mov
test
cli
jp
inc
xor
pop
jle
in
rcr
popa
xchg
dec
sub
jne
roll
xchg
adc
out
adc
lods
dec
add
addr16
xchg
stc
roll
imul
xlat
adc
xor
enter
flds
in
mov
or
scas
mov
aad
cld
jg
xchg
sub
inc
rclb
les
mov
imul
and
call
fimull
pop
leave
pop
ja
dec
pop
lods
pushf
fimuls
mov
inc
xchg
pop
mov
mov
aas
pop
jecxz
jb
rcrb
je
or
jecxz
mov
idivb
dec
je
fxch
cmp
and
push
mov
add
mov
inc
mov
xor
mov
xlat
sahf
lock
adc
lret
in
push
mov
in
bound
sbb
clc
insl
jbe
jns
pop
outsl
lds
out
in
icebp
lahf
adc
mov
push
push
adc
out
loope
jnp
xor
out
out
jp
fistl
aam
shll
ret
inc
fsqrt
push
dec
andb
mov
xchg
inc
push
mov
add
je
jg
shrb
and
xchg
pushf
sbb
push
sub
pop
add
pusha
cmp
pop
mov
mov
cwtl
outsl
xchg
pop
dec
dec
pop
pop
adc
sbb
sbb
movsb
sub
pop
jmp
jns
push
ja
sbb
adc
add
and
or
pop
mull
sub
mov
es
ja
stos
sbb
cmpsb
cmp
cmc
cmp
sbb
dec
push
mov
jnp
xor
add
mov
inc
out
mov
sbb
in
mov
inc
out
mov
rorl
cmp
sbb
int
jp
inc
jne
cmc
addr16
mov
and
mov
in
mov
cltd
fbld
popf
xchg
test
mov
clc
fsubs
orl
insb
push
fisttpl
popf
loopne
pusha
mov
mov
gs
insb
mov
add
pop
loop
push
into
ret
add
inc
ret
mov
inc
orl
and
aad
iret
push
lcall
xchg
clc
jno
sbb
and
fidivrs
pop
sub
aam
push
shrb
fwait
repnz
jbe
fbstp
hlt
sbb
dec
arpl
or
jge
push
sbbl
add
jo
js
int3
add
out
pop
cmp
shll
mov
mov
iret
loope
dec
or
movsb
or
push
and
mov
enter
daa
repnz
cmp
pop
xor
inc
dec
and
fisubs
xor
ds
push
pop
push
cltd
test
dec
lock
inc
or
push
stos
fmuls
or
js
cwtl
test
fs
push
bound
mov
sub
lods
push
cmp
into
or
adc
sbb
decb
nop
dec
stc
sbb
adc
fldl
push
add
push
sub
add
pop
pop
ja
lcall
rcr
mov
xlat
in
dec
push
sbb
adc
dec
mov
rsqrtps
into
out
sbb
cmpsb
insl
fnstenv
int3
sbb
fadds
lahf
cmp
lret
out
cmc
imul
jnp
flds
in
jmp
add
sbb
outsl
adc
push
stc
push
push
push
adc
das
data16
xchg
lods
inc
testl
cli
lods
cs
xor
mov
or
incb
loopnew
popl
adc
or
hlt
xor
mov
addr16
xchg
mov
cmp
xlat
push
outsl
mov
mov
pop
adc
jnp
adc
nop
outsl
sbb
xchg
inc
jne
jge
xor
arpl
repz
xchg
lea
mov
pop
int3
add
imul
adc
mov
pop
xchg
and
inc
mov
dec
aas
mov
xchg
dec
sbb
jbe
shrl
idivb
std
adcb
mov
sub
mov
cmc
cmpl
insl
fcmovnbe
mov
jmp
es
stos
mov
mov
movsb
mov
and
ss
int3
xor
mov
jmp
pop
or
icebp
outsl
pop
mov
jbe
pop
cld
data16
lret
xlat
adc
mov
xchg
shrl
pop
lcall
sub
mov
aam
and
ret
shrl
es
or
xor
xchg
xorl
xchg
xchg
dec
lods
adc
sbb
leave
iret
pop
xchg
jecxz
push
push
push
sbb
push
add
call
and
xchg
ret
test
sub
cltd
pop
or
mov
sbb
flds
pop
xchg
sub
sub
cmp
lcall
incl
jns,pt
sbb
nop
xor
adc
std
mov
mov
mov
loope
jnp
xor
push
inc
inc
stos
aas
or
add
fwait
jle
jb
pop
mov
loop
dec
and
out
adcl
jns
imul
add
out
hlt
xchg
sub
aaa
shlb
push
cmpl
mov
xchg
aas
sub
in
add
neg
orl
pop
xchg
add
and
sahf
mov
popf
pop
negl
and
push
repz
stos
hlt
sbb
jl
mov
jnp
cmp
scas
ret
push
adc
popf
je
test
xchg
ja
push
les
jae
scas
jne
fs
in
cmp
inc
push
sbb
mov
aad
or
fcomip
cmp
pop
mov
lds
sbb
in
out
leave
repnz
mov
push
and
arpl
popa
mov
push
xchg
mov
aaa
ret
mov
or
in
inc
mov
int3
sbb
pop
push
out
negl
push
xor
shrb
cltd
push
xor
jmp
mov
movsb
xchg
inc
ficoms
push
andb
lock
push
scas
aaa
daa
icebp
push
cmp
add
dec
addr16
jmp
test
rorb
push
sub
outsl
test
sbb
inc
fwait
or
outsb
fadd
pop
xor
js
dec
dec
pop
mov
or
pop
sub
decb
cmp
outsb
sti
hlt
leave
adc
repz
mov
andb
int
out
mov
xor
sub
inc
int
ljmp
fstps
lcall
aam
imul
xchg
sahf
jmp
xchg
test
call
jg
btrl
add
sbb
jmp
mov
cmp
fnstsw
mov
sbb
and
ret
mov
xchg
sbb
push
jb
xchg
test
xor
jne
icebp
ja
loop
mov
jb
cwtl
scas
sbb
test
out
lea
jns
sub
mov
add
xor
in
cmp
lea
or
dec
jno
cmpsl
test
gs
popa
loopne
sub
adc
push
imul
je
add
stos
xor
sbb
ds
xlat
xchg
mov
sub
cmp
ret
pop
push
sti
ret
loop
je,pn
loopne
cmp
mov
inc
mov
insb
sbb
mov
repz
dec
mov
in
xchg
out
push
call
fcom
jl
das
and
sti
in
pushf
xor
xor
pop
xor
jge
lahf
add
aas
pop
and
jb
lea
je
test
jecxz
mov
idivb
dec
adc
mov
jecxz
mov
adcl
dec
hlt
fildl
in
mov
push
lahf
mov
pop
dec
lock
mov
mov
mov
call
and
stos
cmp
sbb
shrb
pop
repnz
push
cmp
mov
dec
addr16
xchg
ds
inc
lods
xchg
cwtl
movsl
ljmp
scas
xor
xchg
divl
leave
bound
ret
bound
xchg
fldl
clc
sub
cli
xchg
ret
ljmp
loope
jle
sti
mov
sub
sub
push
loope
or
in
sti
add
adc
test
mov
aad
xchg
mov
lcall
shl
cmp
push
shll
and
pop
aas
sbb
stos
sbb
mov
mov
int
add
loope
xor
inc
rorb
nop
out
mov
aas
and
mov
mov
dec
mov
pushf
repz
aad
dec
inc
sub
inc
fadds
fwait
lods
xchg
ds
inc
pop
pushl
mov
into
out
pusha
sbb
jns
mov
in
sbb
into
lahf
sub
xor
push
mov
mov
cmp
inc
mov
dec
cmp
test
in
mov
pusha
movsb
popa
sub
mov
pop
add
xchg
rcrb
push
andl
notl
popa
mov
mov
xor
inc
and
cs
jnp
cmp
push
pop
aad
adc
mov
pop
mov
iret
jae
andb
xorl
mov
or
mov
xchg
cmpsb
push
pusha
sbb
cltd
gs
jns
test
xchg
mov
mov
sub
and
int
into
hlt
mov
and
or
jge
mov
sbb
ja
xorb
add
fcomps
outsb
test
int3
push
cli
xor
sbb
scas
js
jp
jl
mov
mov
stos
movsb
and
push
ret
iret
popa
cmpsb
iret
fs
aaa
cmp
daa
lock
out
cmc
jno
shlb
daa
jmp
xchg
and
movsl
sbb
mov
lcall
test
jecxz
roll
jo
xor
pop
sub
js
cwtl
jb
loop
cmp
and
sbb
mov
and
cmp
push
iret
adc
into
hlt
cmp
mov
pop
sbb
mov
aad
cwtl
push
or
pop
rcr
sub
add
pop
pop
inc
out
adc
sahf
sbb
adc
std
sub
sbbb
add
addb
jg
jae
mov
sbb
or
les
jne
push
pop
sbb
jns
xor
mov
pop
mov
addr16
jecxz
into
mov
cmp
pop
imul
outsl
rolb
loop
push
push
stc
les
mov
idivl
add
scas
cmc
pop
out
out
cli
adc
inc
cmp
bound
or
aaa
jmp
gs
fcompl
xor
adc
jl
loop
fsts
xor
xchg
inc
movsb
jge
ret
cmp
adc
jg
sub
imul
sti
jb
sub
aad
sbb
dec
xchg
or
dec
fldenv
or
repz
call
lds
push
pop
cmp
ret
push
pusha
hlt
pushf
fistpll
mov
pop
xlat
xchg
sahf
inc
es
enter
and
cld
les
dec
or
popa
testb
xor
into
fmul
cwtl
enter
popa
push
loop
push
in
dec
subl
cld
push
mov
jmp
mov
cmp
lock
push
push
outsl
mov
data16
shrl
inc
es
mov
insl
sub
or
cmpb
and
push
cld
mov
or
and
mov
xchg
fcom
push
loopne
aam
mov
ss
xchg
cmp
clc
addr16
xchg
add
je
pop
inc
jmp
stc
lods
jmp
mov
push
notb
mov
jmp
outsb
cltd
adc
xor
fcmovu
xchg
repz
dec
nop
cmp
test
shrl
dec
push
roll
loopne
stos
or
pusha
sub
aam
cmp
ret
pop
xor
test
pop
andb
test
mov
repz
mov
push
cmp
mov
orl
dec
inc
outsl
addb
fsubl
dec
and
outsb
jne
scas
jne
decl
lock
aas
jmp
bound
sbb
mov
pushf
or
out
mov
in
or
jne
jp
aad
mov
xor
addr16
mov
jle
jbe
in
ret
sub
fistpll
gs
jmp
fwait
cmpsb
std
xorl
popf
push
daa
sub
push
jno
test
stos
ljmp
jno
lret
scas
mov
sbb
je
adc
inc
push
ret
lods
pop
mov
or
jae
xchg
xor
or
xchg
add
fidivrl
cmpsb
es
std
stos
dec
sbb
adc
imul
mov
lds
addr16
adc
jg
pop
leave
inc
js
hlt
cld
jns
arpl
push
cmpsb
sbb
inc
imul
push
add
jne
fmulp
pop
dec
js
enter
mov
mov
jo
arpl
scas
push
out
in
sysexit
lret
cmp
or
mov
in
push
sub
dec
xor
cmpb
pop
adc
inc
loop
push
pop
push
dec
insl
and
inc
mov
and
jbe
lahf
out
lea
inc
lods
test
scas
push
inc
mov
aas
ret
in
jns
add
out
iret
push
cmpb
stos
sub
sbb
add
imul
adc
popf
sub
leave
jnp
lods
mov
add
pop
mov
push
or
int
cltd
sti
sub
xchg
pop
xlat
repz
enter
mov
sbb
mov
push
cwtl
sahf
xor
add
adc
mov
push
mov
sub
and
ljmp
in
icebp
xchg
fdivs
xchg
lret
pusha
sarl
test
hlt
push
jge
xchg
or
cmc
and
pop
and
loop
and
add
sub
inc
or
xchg
pop
pop
lods
clc
mov
shl
into
fs
inc
lret
out
repnz
or
in
mov
loopne
mov
mov
out
xchg
repnz
add
std
pop
xchg
add
add
cmp
push
sub
out
in
cltd
fs
and
cs
test
nop
add
dec
repz
inc
scas
call
inc
les
jp
jmp
rorb
sbb
imul
test
pop
sahf
jmp
pop
push
pop
jp
mov
inc
or
sbb
jb
pop
fimull
push
sbb
mov
testb
std
jne
in
cwtl
xor
mov
fisttpll
mov
or
dec
xchg
fistpl
mov
scas
mov
and
add
leave
pop
arpl
xchg
das
sarl
imul
mov
dec
dec
push
cltd
cmpsl
out
add
icebp
sti
dec
push
cld
out
cmp
and
mov
cmp
mov
idivl
cmp
dec
sub
push
lahf
ret
xorb
fstl
fldl
inc
testb
sub
add
mov
repnz
xchg
mov
stc
push
bts
mov
cltd
dec
pop
mov
mov
and
dec
div
jno
nop
push
xchg
sbb
sbb
dec
lea
fldt
add
push
add
out
jge
jmp
jecxz
sahf
out
or
adc
aad
xor
adc
mov
adc
cs
daa
jle
inc
push
movsb
popf
or
and
or
enter
int
or
icebp
mov
and
popf
bound
mov
in
popl
out
push
mov
sub
mov
jp
insb
daa
mov
mov
lds
lcall
in
cmp
jecxz
fdivrp
gs
sar
gs
data16
out
pop
popf
jl
jecxz
shrl
push
mov
inc
stos
dec
lea
insb
dec
or
jnp
cmpl
adc
and
mov
mov
das
test
jae
lock
inc
insl
push
inc
or
sete
inc
xchg
les
push
pop
add
pusha
pop
imul
pusha
fmulp
xor
rclb
inc
repnz
push
arpl
sbb
sbb
ret
add
mov
add
inc
mov
mov
xor
sarl
scas
ss
mov
jnp
movsb
mov
add
in
add
push
stos
daa
out
inc
xor
dec
push
adc
xlat
leave
jl
movsl
xchg
and
push
int
and
shll
movsl
gs
xor
jo
jns
add
jnp
mov
scas
pop
cmpsb
xchg
js
jmp
in
push
dec
shl
out
mov
cmp
adc
jns
test
fcmovbe
mov
sbb
push
jg
adc
sahf
xor
cmp
push
out
int
inc
xchg
sub
push
cmp
push
and
cmp
in
cmp
push
cld
sub
stos
sahf
aam
cmpsb
test
push
mov
jg
inc
fnstenv
cmp
and
icebp
xor
cmp
out
mov
inc
lret
dec
rcll
mov
icebp
add
and
int3
into
js
xchg
in
push
in
xor
out
loop
es
stc
xor
cmp
mov
lods
ffreep
pop
mov
adc
jns
pop
xor
mov
or
pop
loopne
adc
add
clc
scas
loopne
jns
pop
outsb
mov
adc
iret
adc
xchg
popl
mov
lods
sbb
out
or
xlat
dec
mov
or
in
add
stos
sti
rorb
cs
insl
stos
aad
pop
mov
fldt
inc
shll
adc
mov
test
imul
out
das
dec
lea
enter
popa
push
incb
dec
pop
mov
add
mov
jmp
test
pop
sbb
repnz
mov
sbb
cld
stos
dec
dec
test
xchg
jecxz
inc
into
testb
out
cwtl
ds
mov
in
jg
cmp
mov
mov
mov
sbb
jle
inc
das
es
inc
mov
addb
jl
pop
rorl
sub
insl
stc
mov
dec
inc
loope,pt
in
jecxz
mov
shr
jl
adc
iret
lret
xchg
or
loope
lods
jns
mov
push
push
rorb
or
scas
enter
movsl
sbb
unpcklps
push
sbb
je
mov
cltd
insb
xchg
jg
test
inc
iret
jbe
repnz
orb
push
movsl
xor
push
jb
adc
or
xor
out
or
xchg
mov
xchg
icebp
loopne
pop
xchg
mov
or
cld
sbb
cmpsb
shll
out
stos
jmp
in
movsb
add
or
jb
add
lret
xchg
xor
mov
jns
cli
mov
int
fnsave
jne
dec
sbb
dec
or
push
push
fwait
cmp
addr16
ljmp
mov
dec
fsubrp
std
xchg
in
bound
sbb
in
aad
xchg
mov
pop
ja
push
add
or
mov
dec
jns
jp
mov
mov
outsl
sarb
std
cmpl
or
dec
adc
jne
lods
insb
xchg
mov
fistpl
xor
loope
stos
shll
mov
push
cld
push
out
cmp
rcrb
and
push
xchg
sbb
sub
movsb
scas
dec
jl
push
xor
inc
adc
in
add
mov
pop
sub
pop
dec
jae
mov
inc
jo
pop
or
mov
push
fisubl
das
out
sbb
sbb
lds
fisubrs
adc
ja
mov
mov
and
pop
out
hlt
xchg
lds
stos
in
jbe
ds
sbb
or
cwtl
fadds
mov
add
pop
adc
xor
sub
jg
adc
rcrb
fdivl
es
mov
test
in
in
imul
in
out
cmp
nop
xchg
jl
shr
dec
jmp
mov
xor
and
cmp
and
mov
sbb
inc
xlat
jge
jp
and
pop
jp
jnp
ficoms
lahf
aam
push
ret
dec
loope
mov
sub
mov
cmp
mov
adc
pop
sub
cmp
mov
out
jo
sbb
mov
or
inc
push
lret
push
adc
das
int
fcomps
sub
bound
aad
and
popa
dec
in
fcoml
leave
add
jns
ja
xchg
xchg
mov
push
mov
mov
stos
icebp
mov
cmpsl
and
icebp
cmp
sbb
sub
stos
jb
testl
cmp
mov
lods
sub
push
mov
into
pop
lea
mov
mov
outsl
insl
mov
das
stc
jmp
js
adc
jb
cwtd
imul
mov
in
add
lods
pusha
enter
xor
or
cmp
pop
loopne
data16
out
adc
push
cltd
adc
repz
add
popa
fistl
aaa
cmpsb
outsl
cmp
cmp
xlat
mov
mov
mov
outsl
mov
fisubrl
add
stos
aad
mov
push
dec
mov
cmpsl
inc
aam
ret
sub
mov
mov
icebp
jg
lea
pop
rol
adc
pop
sti
mov
int3
pushf
loopne
cli
jmp
mov
pop
inc
mov
sti
xchg
aas
fxch
or
jb
dec
outsb
fiaddl
je
shl
jecxz
in
lret
mov
inc
cwtl
stc
pop
inc
mov
out
mov
dec
mov
dec
and
faddl
je
loop
test
fcomi
das
das
add
jns
mov
pop
lret
push
xchg
stc
sbb
insl
loopne
stos
dec
aas
mov
test
sbb
test
test
pop
stos
lret
add
lods
and
mov
pop
xor
jbe
sub
cwtl
mov
sahf
mov
rcr
cmp
ljmp
mov
mov
or
mov
out
mov
outsb
jne
dec
fwait
jl
imul
ss
mov
roll
sub
dec
lds
sbb
adc
xchg
or
rorl
cltd
stos
fadds
int3
push
dec
mov
jl
and
lock
or
xor
mov
jns
mov
mov
pop
mov
outsl
dec
or
push
add
cli
loop
imul
xchg
fistpll
adc
ljmp
mov
xchg
or
cmc
out
aad
sub
push
insb
and
rcrl
mov
mov
inc
mov
mov
add
pusha
adc
aas
fistps
sub
ret
xchg
cld
inc
inc
andl
push
insl
jle
popf
lret
mov
rcrl
and
int3
fsubrl
adc
fdivrs
push
js
mov
iret
pusha
test
ret
mov
inc
ret
jg
jae
outsl
clc
inc
jae
lret
xor
push
xchg
icebp
add
push
stos
aad
add
sbbl
cld
imul
vcvtss2sd
rorb
mov
js
out
leave
test
aam
arpl
imul
xchg
sub
aaa
jle
fmuls
sub
sub
cmp
sbb
sbb
and
data16
jmp
out
xchg
enter
xchg
mov
movsb
dec
sub
push
jmp
cmpsb
fisttpl
scas
in
roll
cmp
mulb
in
psrlq
mov
gs
insl
mov
dec
mov
lret
xchg
movsl
aaa
xchg
and
xlat
in
inc
lahf
inc
mov
push
dec
inc
inc
test
cmpxchg
les
cmp
mov
js
mov
fimuls
adc
adc
movsl
sub
add
jecxz
push
outsb
ljmp
sarb
adc
cwtl
je
add
sbb
mov
xor
inc
movb
inc
pop
int
dec
cld
sub
stc
roll
adc
lcall
movsl
fadd
push
ljmp
shrb
test
xor
popa
jg
sub
mov
cltd
dec
mov
cs
mov
cs
and
int3
fwait
ss
inc
ret
cmp
gs
outsl
lret
outsl
sarl
mov
cmp
sbb
mov
mov
outsl
dec
fwait
mov
stc
mov
mov
stos
data16
lods
lods
xchg
fwait
xor
idiv
fistpll
movsb
cmp
decb
or
mov
push
test
gs
jb
loopne
sbb
sbb
pusha
lret
das
imul
clc
ss
dec
jg
sbb
idivl
sub
mov
or
sti
imul
aad
mov
nop
xchg
insb
push
dec
adc
mov
fnstcw
das
enter
fs
cs
repnz
ret
push
scas
cwtl
pop
scas
leave
fcoml
scas
mov
pushf
mov
mov
pop
arpl
int3
inc
inc
test
inc
pop
jle
aas
js
lret
insl
push
dec
in
ljmp
ret
push
nop
lock
push
push
cwtl
mov
mov
xor
sbb
dec
adc
insb
fucomi
add
mov
pushf
mov
mov
lock
mov
mov
out
hlt
jnp
xchg
jecxz
shll
inc
xchg
insl
data16
dec
cmp
push
cmpsl
jmp
cld
mov
subb
lret
jno
mov
mov
repnz
push
inc
shlb
repz
fisubs
ret
sub
mov
fldl
sbb
clc
push
into
xor
ljmp
dec
lods
xchg
imul
mov
enter
add
push
sub
xor
or
nop
cltd
in
lea
test
xchg
jbe
adc
jle
test
fisttps
mov
cltd
push
pop
xchg
cmp
push
in
jge
add
inc
lcall
xchg
fs
xchg
push
xor
mov
xchg
pop
inc
sbb
in
add
inc
lret
loopne
or
je
fwait
cwtl
sub
imul
imul
push
out
outsl
jns
leave
in
pop
leave
xchg
pop
xor
popa
sub
sbb
add
lea
stc
imul
mov
sub
ret
xchg
in
out
add
dec
add
cmp
mov
mov
sbb
aam
xor
jp
or
push
insl
out
push
stos
cmpsb
push
bound
push
lahf
shrl
scas
jnp
stos
out
scas
adc
push
mov
sub
mov
enter
pop
sbb
mov
inc
jbe
mov
cmpsb
adc
push
adc
fiaddl
adc
xor
inc
push
imul
sub
test
and
inc
sti
lret
ds
and
popf
hlt
sub
add
in
jge
mov
mov
or
mov
dec
pop
test
push
dec
mov
dec
jo
inc
or
pop
aas
fwait
cmp
xlat
movsb
xlat
out
ficoml
das
inc
cmpsb
pop
mov
xor
daa
jmp
mov
jno
outsb
movsl
jl
jne
dec
sub
loope
ror
inc
movsl
ds
cmpsl
and
cli
lahf
arpl
test
fisubl
incb
dec
dec
add
pop
sbb
int
icebp
mov
pop
sbb
pop
loope
mov
add
xchg
int
outsb
dec
leave
mov
rclb
adcb
inc
add
pushf
add
loopne
sbb
pop
sbb
aas
sub
pop
rcl
xor
psrlw
imul
sahf
mov
mov
clc
jg
mov
pop
mov
or
lahf
and
mov
fmuls
and
iret
lret
add
push
push
jns
loopne
sahf
sbb
loope
cmc
inc
or
sub
loop
arpl
ficoml
adc
dec
mov
xchg
cmp
mov
test
cli
adc
cmc
xor
cmp
clc
or
jne
jns
mov
pusha
lds
pop
lret
push
push
adc
adc
imul
aam
xchg
adc
lds
mov
das
mov
mov
inc
data16
fstpl
aad
push
nop
nop
insb
ljmp
cli
inc
jbe
mov
add
je
repz
mov
idivl
lea
add
ror
mov
adc
test
sbb
pop
push
lock
fs
je
movsl
aas
pop
cmp
cmc
pushf
cmp
je
pop
or
jb
xor
xlat
fscale
adc
nop
cwtl
outsl
ja
sbb
daa
mov
push
add
fistpl
icebp
in
mov
mov
adc
lock
mov
das
ret
sbbl
movsl
les
and
push
aad
cmc
das
es
mov
dec
xor
movsb
inc
mov
push
mov
out
loopne
hlt
mov
ret
mov
jae
or
xchg
mov
aam
jns
ret
mov
xor
loope,pn
clc
mov
xchg
cmp
sbb
pushf
jmp
popa
aaa
fmull
mov
jle
pop
xchg
aam
js
add
sahf
add
mov
xchg
lret
inc
sbb
sbb
xchg
leave
push
jl
cmpsb
xchg
add
sarl
push
pop
pop
inc
and
stos
mov
rcrl
xor
add
pop
jbe
fidivrs
xor
mov
xchg
xor
push
into
mov
inc
jmp
mov
incb
ja
mov
xchg
inc
bound
sub
dec
xchg
outsb
push
and
inc
cmp
jmp
ret
lahf
mov
xor
loopne
mov
or
xchg
addr16
jp
roll
lods
push
inc
mov
pushf
xchg
sub
js
in
hlt
push
pusha
inc
in
mov
xchg
sbb
pop
jmp
xchg
dec
jmp
cmp
push
repz
pop
popf
sbb
push
push
lods
insb
stos
sbb
and
insb
sti
mov
jnp
inc
xor
push
insl
adcb
mov
iret
push
test
lret
pop
rorb
inc
fld
jp
fwait
call
inc
jns
push
or
sti
xchg
adc
cs
fidivrl
test
mov
les
cltd
push
ficoms
mov
or
mov
mov
push
mov
leave
xchg
std
cmpsb
hlt
jae
pop
arpl
mov
jbe
lretw
jge
cmp
sbb
mov
aaa
cld
pop
jp
adc
xchg
int3
lock
cld
pop
mov
jp
sub
xor
cmp
xor
fdivrs
add
adc
inc
and
mov
mov
pop
cmp
aaa
jbe
inc
xchg
lds
je
cwtl
aam
ds
mov
jb
or
cmpsl
in
push
icebp
in
push
test
movsl
out
inc
test
xchg
pop
inc
sbb
sub
cmp
pop
or
push
insl
pop
loope
pusha
subl
mov
outsb
mov
sti
adc
lock
enter
jg
rcl
add
mov
mov
int
in
sub
adc
push
data16
fcoml
call
inc
sahf
pusha
jmp
test
cmpsb
aas
sub
sub
sbb
dec
mov
cmp
ss
outsb
cmp
fistl
test
mov
decb
in
add
cmp
or
mov
outsl
or
loop
xor
push
fs
rclb
nop
xchg
data16
lods
jnp
rorb
leave
xchg
mov
inc
mov
sbb
popa
cmp
lds
aam
sub
pushf
out
sbb
jl
loopne
movsb
add
mov
adc
xchg
jb
lods
stos
or
add
add
repz
lods
lret
loope
dec
adc
sub
idivl
std
js
mov
fdivr
mov
aad
fdivl
nop
inc
jl
dec
into
jmp
inc
or
mov
pop
repz
jb
shrb
push
jo
pop
adc
xchg
pop
xor
pushf
loope
aam
or
imul
shl
mov
int3
jb
add
repnz
sub
orl
std
mov
test
mov
xorl
lahf
jg
dec
mov
scas
mov
xchg
das
mov
mov
int3
and
adc
roll
mov
test
dec
xor
push
icebp
cs
lret
dec
inc
into
mov
leave
popa
xlat
mov
xchg
inc
rcl
pop
clc
mov
aam
push
mov
and
mov
leave
push
mov
minps
lods
imul
out
loope
stos
xchg
sbb
push
fisubs
xchg
add
das
test
rorl
mov
mov
xchg
pop
sub
clc
subb
add
rcll
loopne
stos
movsl
popf
ds
xor
roll
add
jge
pusha
xor
fs
dec
mov
mov
test
mov
mov
sub
dec
out
ds
stc
mov
inc
in
fwait
imulb
push
jne
xchg
leave
mov
mov
sub
xchg
cmp
pop
mov
xchg
clc
jnp
out
add
sub
seto
jp
in
or
imul
jle
and
in
pop
aas
pusha
loope
and
xchg
out
loop
jmp
pop
shrl
bsr
ss
aas
sbb
mov
jmp
imulb
xor
fs
data16
jnp
cltd
jne
fiaddl
mov
mov
xchg
iret
jge
out
ret
std
pop
or
inc
in
pop
jae
lods
lret
inc
jl
into
or
jbe
or
xchg
scas
fisubrl
rcll
aaa
push
shrb
xlat
fcmovu
cli
scas
and
xchg
paddusb
pushf
cmp
daa
bnd
cmp
hlt
mov
cmp
jbe
pop
jge
cwtl
pop
sbb
in
ljmp
mov
nop
pop
loop
cmp
pavgw
ds
in
jo
sub
mov
cmpl
in
jb
push
in
xchg
xchg
cmpsb
shlb
in
mov
pushf
enter
daa
jmp
jg
jno
fmull
dec
pop
stos
push
ds
mov
clc
and
es
les
imul
jmp
adc
xchg
xchg
pop
imul
push
mov
xchg
pop
sub
lock
pop
outsb
adc
insb
ror
ss
mov
cmp
test
push
xor
xchg
push
sbb
push
sub
xor
fsub
lcall
dec
fadd
push
icebp
sub
adc
xchg
hlt
jnp
add
cmpsb
jg
pushf
jns
out
pop
mov
and
sbb
and
sbb
ror
pop
test
inc
add
sbb
es
into
out
fdiv
iret
sahf
mov
dec
inc
inc
outsl
jmp
cmp
stos
pcmpgtb
add
and
movsw
imull
mov
pop
cli
js
int
lock
inc
pop
mov
mov
xchg
mov
scas
loopne
pop
or
ret
adc
inc
push
imul
push
cmc
xchg
xchg
in
sbb
push
lods
mov
sub
adc
sbb
sti
cmp
cs
push
aad
add
lds
je
inc
and
iret
jmp
pop
mov
std
inc
out
lea
dec
add
xor
imul
xchg
xchg
pop
xor
mov
cmp
lahf
cs
dec
mov
dec
inc
stos
jg
aas
push
mov
jb
xchg
fmull
cwtl
mov
jecxz
jp
not
rcr
pop
fstpl
in
push
mov
sub
cld
push
addb
and
mov
cmpsb
fs
sbb
adc
adcl
mov
xor
mov
xchg
fdivl
insl
jl
rorl
sbb
in
fdiv
add
mov
or
rclb
mov
mov
xchg
shrb
inc
jg
push
stos
sub
push
call
pop
cltd
clc
add
ficoms
addb
lods
sbbl
inc
and
push
mov
incb
inc
or
xchg
xchg
int3
jle,pn
gs
ret
fimull
dec
popa
or
test
xchg
xchg
lea
sbb
ja
shr
sub
stos
xchg
scas
std
push
aad
xor
xchg
push
lcall
pop
xor
jae
xor
pop
add
enter
sub
stc
ja
and
dec
fstps
inc
nop
popa
scas
or
fiaddl
and
xchg
jne
inc
sbb
pop
cld
bound
xor
jns
lahf
mov
mov
pop
xchg
inc
test
out
dec
xor
or
lcall
mov
repnz
jp
mov
in
sub
pusha
jl
in
cwtl
push
jmp
jmp
sub
adcl
mov
popf
pop
icebp
mov
sub
ljmp
and
fisubrs
gs
mov
scas
cmp
mov
popf
iret
fdivrl
ss
inc
push
mov
out
pop
out
jae
lahf
scas
inc
jg
pop
or
icebp
push
or
jnp
fisubl
mov
xchg
pop
jno
sbb
xchg
loopne
jo
pop
ficomps
imul
mov
les
dec
hlt
or
push
arpl
or
stc
les
sbb
push
aaa
jp
push
or
pop
imul
shlb
push
repnz
mov
dec
and
jns
outsl
pop
popf
movsb
js
push
push
cmp
xchg
cmpsb
out
mov
outsl
nop
pop
enter
daa
call
jnp
jno
dec
push
dec
jbe
pop
cmp
push
aad
and
inc
lahf
shrb
test
cmp
mov
cli
pop
nop
xor
js
mov
dec
push
mov
sub
pop
add
lahf
insl
and
adc
cmpsb
rcl
imul
dec
test
sbb
push
add
incb
dec
mov
push
and
xchg
or
sub
and
lcall
jno
insb
or
sub
in
test
out
sbbb
sbb
mov
pop
lods
mov
fcoms
and
push
ss
push
cmp
push
mov
push
lret
adc
fisttpl
repz
add
cmc
xchg
jg
xor
xor
stc
jl
std
fs
adc
loope
sub
subl
movl
xor
stc
and
or
sub
jne
pop
loopne
xor
pop
sub
sub
lods
cmpsb
imul
decb
sbb
push
mov
xchg
sub
jns
in
xchg
add
ljmp
aad
xchg
lcall
add
inc
xor
aam
pop
mov
repz
fcoml
call
dec
inc
cs
jp
xor
or
pushf
aaa
mov
pop
out
xchg
or
pop
ret
push
sub
jb
out
dec
shl
je
es
ljmp
push
xchg
cwtl
mov
test
mov
push
test
dec
mov
dec
jae
jecxz
iret
mov
pop
pop
lock
adc
lret
and
xchg
inc
shl
cwtl
push
es
jp
dec
es
cmpsl
out
sbb
fmul
sar
adc
jmp
mov
xlat
lods
push
mov
rorb
add
pop
aam
inc
mov
imul
frstor
daa
out
stc
lock
cmc
pop
inc
popa
jl
out
lods
inc
xor
jbe
insb
out
cmpsl
jge
xchg
test
or
rolb
pop
adc
into
test
mov
xor
dec
enter
in
cmp
xchg
add
sarl
dec
inc
pop
inc
cmc
stos
addl
add
lods
sbbb
addl
mov
pop
jmp
or
jns
shlb
pop
das
inc
push
ja
lahf
xor
leave
loope
daa
jg
or
movsb
ficompl
cmp
addr16
push
ret
mov
ljmp
mov
test
inc
popa
lcall
or
or
in
jp
fbstp
mov
adc
hlt
dec
xchg
in
pop
mov
pop
inc
lods
fbstp
lods
gs
repz
subl
jno
lea
jecxz
imul
mov
jnp
cltd
mov
mov
jle
adc
sub
cmp
ret
cmpsb
pop
ja
mov
jae
aad
inc
xor
or
insb
test
rol
jl
mov
xchg
sbb
mov
imul
fiadds
add
es
shl
daa
mov
pop
pushf
scas
leave
cld
arpl
hlt
push
cld
js
daa
sbb
jbe
mov
iret
sbb
jo
aaa
cmp
cmpsb
add
movhps
xor
xor
dec
xchg
scas
dec
testb
es
movsb
add
push
mov
adc
in
push
fnsave
enter
daa
out
pop
cmp
fxch
jl
into
decl
mov
fisubl
fiadds
lahf
fbstp
dec
push
push
stos
test
push
sub
or
xchg
pop
mov
jo
fnstsw
adc
push
insb
pop
loope
jne
sub
mov
jge
fldenv
adc
xorl
sbb
mov
xor
push
int
hlt
adc
pop
iret
out
mov
pusha
push
loop
imul
pop
fmuls
sahf
dec
xor
or
or
je
jp
push
mov
mov
fs
fwait
jb
and
sub
or
hlt
testl
gs
jb
xchg
mov
xor
lods
clc
vminpd
cli
xor
and
loop
loope
stc
xor
push
add
mov
jbe
lods
xor
mov
out
in
cli
fiadds
shll
sahf
xchg
mov
or
repnz
incb
stc
mov
pop
inc
pop
jmp
imul
ljmp
and
sarl
mov
xlat
or
outsl
sub
pop
in
icebp
cmpsl
pop
sti
cltd
adc
aad
addl
test
lock
inc
fsts
xchg
jbe
decl
rep
leave
outsb
movb
cmc
sub
call
into
outsl
jl
sub
add
loop
ret
jmp
sub
pop
xchg
pop
aam
in
clc
inc
loopne
sahf
aas
xchg
inc
and
les
iret
xchg
je
jmpw
scas
sahf
mov
pop
jl
std
lods
sub
cwtl
pop
outsb
mov
sbb
mov
or
cmp
sahf
neg
xlat
dec
je
xchg
sbb
lock
add
aas
das
fldenv
subl
shll
cltd
in
es
mov
dec
and
lods
cmpsl
out
xchg
mov
cmp
pushf
mov
add
fisubrs
mov
out
push
lret
dec
jge
outsl
and
aam
sub
ret
clc
daa
lcall
fnsave
cmp
lock
arpl
adc
out
or
in
lock
in
outsl
pusha
cmp
mov
push
cwtd
add
popa
test
push
mov
cli
cmp
das
fucomip
test
xchg
xchg
sub
rcll
push
cmpsb
stos
jb
add
sbb
mov
lcall
mov
or
jl
xor
mov
mov
dec
add
mov
ljmp
dec
mov
shl
add
fwait
and
dec
pop
outsb
push
jne
int3
xor
push
faddl
prefetch
lret
repz
in
mov
add
stos
addr16
inc
mov
clc
jne
mov
cs
mov
pop
ret
pop
jle
aad
in
lock
mov
sub
xchg
push
xchg
jae
mov
cltd
mov
popf
mov
xchg
mov
test
pusha
stos
in
in
and
data16
cmpsl
sahf
lret
ds
scas
add
ret
cwtl
out
lcall
pop
scas
sub
add
dec
incl
mov
or
out
in
mov
sbb
or
dec
sbb
sahf
iret
imul
fsubp
sahf
int3
lds
dec
mov
mov
push
push
leave
jae
mov
arpl
jb
jbe
repz
sbb
ret
sti
or
lret
out
cmp
pushf
and
outsl
xchg
add
mov
mov
scas
cs
nop
cmp
sbb
mov
jmp
cmp
cs
daa
out
sbb
in
jno
mov
jl
mov
dec
push
mov
orb
jns
inc
lahf
mov
xor
ljmp
inc
sar
iret
in
add
frstor
sbb
pop
pop
cmp
loope
les
cmp
push
outsb
cmp
aam
xchg
mov
mov
sar
lock
pushf
xchg
hlt
add
mov
xchg
push
es
int
ret
cmpsb
ret
dec
inc
sbb
ret
fadd
jp
sub
bound
sub
cmp
jg
xor
mov
jae
mov
test
push
bound
pop
mov
icebp
cmp
scas
hlt
test
arpl
mov
dec
sbb
loopne
cmc
and
jbe
pusha
inc
mov
push
movsl
loop
orl
xchg
cmp
adc
fs
lods
pop
es
jge
aas
out
push
stos
cli
adc
jae
add
or
xor
addl
jg
pop
pop
cmpsw
notl
push
mov
mov
pop
adc
mov
add
in
loopne
popf
sbb
xchg
mov
sub
xchg
pop
or
sti
dec
sbb
cs
cs
fnstenv
mov
dec
and
rcr
leave
add
or
ds
movb
adc
movsb
push
test
dec
and
loopne
arpl
mov
mov
pop
xor
sahf
bound
xor
aas
xor
push
jb
xchg
mov
pusha
popa
je
sti
gs
xchg
push
mulb
cmpsl
ficompl
xlat
lds
aad
push
orl
or
mov
ss
lock
push
and
mov
cmp
and
pusha
in
sbb
es
cmp
sbb
jno
in
xchg
mov
mov
push
mov
or
jnp
adc
shll
aaa
add
push
arpl
shlb
or
aam
imul
test
push
xor
sbb
icebp
push
mov
mov
iret
xchg
ja
push
ljmp
mov
mov
insl
adc
xchg
aaa
mov
jl
add
jae
jle
mov
aaa
inc
dec
test
xchg
mov
cmpsb
ret
or
test
arpl
cmp
sbb
cmp
shr
add
stos
popa
jns
push
mov
cmp
add
out
lcall
lods
jbe
xor
pop
sub
xchg
lods
cmpb
leave
cmp
dec
mov
addl
add
pop
jne
add
jne
cmpsl
mov
imul
enter
cmp
push
fcmove
xchg
xor
into
out
out
sub
sti
xlat
adc
sub
sub
mov
std
dec
mov
cmp
jle
dec
add
xchg
pusha
dec
xor
fcomip
scas
xchg
cmp
jmp
mov
fldl
ret
popf
fisttpl
push
push
out
cmp
pop
and
jmp
jnp
test
scas
iretw
push
push
imul
mov
stc
jo
ret
in
pop
in
inc
inc
adc
dec
inc
mov
ss
bound
mov
xchg
arpl
mov
imul
rol
int
rorb
add
mov
xchg
ljmp
jbe
mov
fstpl
je
or
mov
mov
iret
psllq
pop
popf
popa
int3
xchg
pop
pop
sahf
mov
push
fwait
cmpsb
daa
xor
add
xchg
scas
or
data16
cmp
aaa
push
sub
sub
and
jge
sbb
jno
sbb
loop
add
dec
ret
lods
mov
pop
or
adc
lods
lahf
sbb
test
test
pushf
stos
push
inc
dec
and
xchg
popa
jp
add
icebp
sti
pop
xchg
push
cltd
push
out
inc
loope
aaa
cmc
sub
addr16
cmp
out
adc
aaa
adc
xor
ret
addb
push
add
push
xor
push
sub
xor
leave
jae
sub
push
pop
int
sbb
push
sbb
fsubrl
imul
mov
testl
xor
mov
jmp
popf
adc
imul
jmp
orb
testl
push
add
fidivl
cmc
jmp
pusha
xor
push
and
adc
stc
mov
int
adc
data16
sub
js
cltd
out
lods
add
xor
cmp
xor
or
fcoml
dec
es
gs
pop
loopne
fwait
sbb
testl
jg
push
adc
mov
add
jo
sbb
add
xlat
xchg
and
adc
cmc
mov
movl
sbb
mov
clc
dec
test
pop
jl
add
inc
les
inc
inc
or
ret
fwait
push
call
int3
pop
repz
xchg
out
adc
ljmp
mov
enter
dec
inc
repz
inc
push
inc
test
rcr
xorl
je
es
mov
nop
jecxz
jecxz
rclb
jecxz
sti
pop
arpl
xchg
lods
fmull
es
dec
jge
mov
xor
push
es
pop
icebp
lock
sbb
std
sbb
mov
out
push
dec
and
sub
xor
insl
sbb
xor
cmpsl
in
xor
popa
and
xchg
pusha
fs
jp
test
xor
test
popa
mov
pop
sub
xor
sbb
cmp
adcb
sub
sbb
clc
lock
xchg
mov
sbb
popa
rcr
lods
xorb
mov
rolb
xchg
jle
dec
push
and
and
add
pop
add
xchg
mov
dec
std
inc
shrl
or
xchg
sbb
xchg
lret
cld
lock
push
lcall
jne
dec
add
inc
idiv
cwtl
lods
cmp
fmull
or
mov
mov
enter
xchg
sahf
pop
pusha
insb
xor
sub
dec
movsl
push
in
inc
in
scas
lea
stc
jmp
dec
in
push
jne
in
mov
inc
daa
out
aam
cli
bound
in
jge
in
adc
xchg
adcl
repnz
jb
fisttpl
negb
addr16
xchg
data16
add
mov
icebp
leave
mov
ss
jle
mov
pushaw
call
cmp
jmp
push
push
jg
fiaddl
mov
add
mov
es
adc
cmpsl
dec
rep
jge
push
jnp
jle
leave
add
cld
add
pop
or
ret
and
nop
roll
sub
inc
mov
sub
inc
mov
test
xchg
mov
cmc
adc
mov
lds
mov
shlb
adc
adc
hlt
xor
ljmp
iret
int
sbb
mov
ret
add
outsl
push
pop
int
xor
jle
shll
shrl
and
fwait
cmp
push
movsb
movsb
js
push
ja
fsubs
or
enter
daa
in
push
cmp
or
fs
sub
sbb
ds
insb
ja
outsl
push
mov
lahf
cmp
add
test
addr16
inc
fimuls
sub
sbb
pop
addr16
into
fldcw
jl
cmp
xchg
outsb
add
sub
rclb
pop
icebp
nop
xor
sbbb
cmp
outsb
mov
push
sub
test
pushf
movsl
movl
jns
pop
push
jo
jle
sbb
sub
push
xor
aas
test
pop
test
mov
mov
pop
jno
ffreep
mov
and
movsl
ss
leave
cmp
cmp
mov
sub
aaa
and
dec
mov
sbb
jno
into
push
mov
cmc
mov
sub
push
std
scas
outsl
inc
or
stc
pop
lock
cmpsl
mov
adc
fwait
in
in
mov
ret
out
ja
or
cmp
clc
push
or
add
gs
cli
jge
mov
int3
pop
movsb
dec
mov
imul
xchg
add
inc
pop
xchg
data16
gs
cmp
xor
sub
and
in
xor
sti
cmpsb
jbe
jnp,pn
cmp
shrl
sbb
pop
das
inc
jg
xchg
aaa
adc
les
lcall
or
jo
sub
jge
dec
adc
pop
inc
xchg
xchg
adc
fstpl
mov
push
inc
jp
nop
inc
xor
aas
jo
pop
jb
cwtl
mov
popf
outsl
sti
je
pop
add
fistl
mulb
jp
std
mov
addr16
push
pop
mov
mov
xchg
push
adc
test
xor
mov
fcompl
daa
mov
cmpsb
bound
ljmp
es
hlt
insl
dec
test
cmpsl
jecxz
push
mov
cmp
gs
rcrb
jmp
pop
jle
repz
xchg
mov
dec
mov
rorb
sub
aam
in
ret
movsl
jne
push
mov
xchg
aas
xor
rcll
leave
push
popa
fadds
in
in
ss
out
xor
xchg
vunpckhps
shll
xadd
add
in
test
mov
sbb
fs
sub
mov
fcomps
push
aas
rcl
inc
xor
jmp
aas
jg
push
add
xor
sbb
pop
xor
div
or
lods
mov
pop
pop
and
pop
sbb
arpl
xchg
movsb
inc
sbbl
ret
adc
enter
xchg
mov
out
mov
push
out
pop
mov
in
mov
and
jne
test
icebp
jae
addr16
jge
jp
push
call
mov
movsl
outsl
dec
jle
sbb
in
pop
xor
jae
fbstp
push
inc
xchg
loope
das
jmp
pop
int3
popf
subl
push
dec
jecxz
popf
sub
mov
push
gs
stos
stos
ds
pop
and
incl
jnp
imul
xlat
xchg
cmp
mov
sbb
or
pop
push
mov
cmpsl
jae
push
jecxz
mov
insb
push
or
int3
ficompl
aaa
jle
cmp
imul
cmpsl
fmulp
and
mov
and
aas
inc
int3
repnz
dec
leave
fdivrs
lods
hlt
sbbb
jbe
lahf
sbb
test
sbb
addr16
aaa
xor
mov
add
push
loop
cld
inc
rorb
popa
inc
call
jo
mov
and
adc
movsb
das
fadd
push
xor
in
repnz
add
psubsw
daa
jecxz
lods
cmp
divb
test
push
addr16
mov
or
jbe
int3
and
mov
push
mov
mov
iret
hlt
xchg
fldl
xor
sbb
pusha
js
stc
dec
pop
adc
inc
jb
jecxz
cmp
cmp
jae
outsb
gs
mov
shr
lahf
rorb
repz
add
fsubl
pop
shl
das
inc
int
addb
jne
pop
lret
dec
cmpsl
lcall
or
ret
pop
or
aaa
sbb
test
xchg
jg
out
pushl
push
loope
xor
ss
gs
clc
jne
testl
mov
mov
nop
ret
sbb
int
into
cmp
cmc
jns
aas
xor
add
or
loop
mov
lods
fs
outsl
adc
ja
data16
mov
int3
sti
int
outsb
push
jmp
ret
cli
stos
adcb
bound
cmp
xchg
movsb
or
xlat
add
xchg
call
adc
push
lock
pop
ret
mov
fsubrl
xchg
mov
test
push
xchg
sub
pusha
sbb
js
inc
xlat
add
push
clc
inc
pop
mov
popf
sub
sti
push
lret
fidivrs
aad
xor
dec
addr16
out
xchg
mov
fldcw
les
pop
sub
stos
shlb
lea
push
js
stc
cli
dec
adc
arpl
pop
push
or
xor
dec
sahf
or
jge
outsb
dec
adc
movsl
je
mov
jecxz
push
inc
imulb
fdivr
dec
jne
cwtl
inc
shlb
out
jge
push
psubd
mov
mov
mov
aam
lock
sbb
mov
jne
and
insl
inc
nop
cmp
insl
out
rorl
jg
cmpsl
loop
jecxz
pop
mov
insl
cld
jmp
iret
lret
pop
sub
jne
and
xchg
push
sbb
pop
in
fldcw
dec
xchg
repz
and
ret
xor
aaa
push
jp
frstor
xchg
data16
ljmp
mov
lea
xchg
or
push
nopl
add
ret
addl
dec
and
xor
test
je
xchg
mov
shl
sbb
cltd
cmp
sub
cmpsl
cmp
add
xor
sar
fistl
adc
or
xchg
push
cmp
pop
pop
call
pop
insl
jg
fs
fmull
test
inc
sbb
lock
add
aas
inc
inc
dec
stos
lods
mov
mov
cmp
or
xor
in
test
out
xchg
in
sub
in
pop
stc
addr16
in
les
mov
inc
repnz
adc
xchg
jno
in
sub
pusha
push
mov
fists
mov
jmp
ljmp
push
or
mov
mov
movsb
and
mov
adc
aad
add
push
enter
jge
scas
ds
dec
adc
dec
fadd
sbb
movsb
pop
mov
clc
jae
fimuls
inc
xchg
inc
pop
or
rcrl
inc
mov
jl
push
jo
xchg
push
pushf
daa
imul
into
fisubrs
ja
inc
mov
rcrb
mov
mov
cmp
hlt
lret
push
add
jb
jbe
shlb
movsl
xlat
push
aaa
hlt
outsb
and
add
adc
pop
sub
lret
mov
jo
sarb
stos
fdivr
and
inc
andl
outsl
inc
in
fnstcw
xchg
daa
loop
jb
mov
add
sti
leave
jecxz
sbbl
lds
in
ret
adc
push
mov
push
std
fmul
inc
cld
and
jp
dec
js
pop
xchg
pop
push
cmpsb
push
push
jns
loope
push
fistpll
mov
pop
int
mov
pop
ror
dec
lock
dec
jne
add
rcrl
js
ds
sahf
and
daa
pop
test
xor
ror
sub
scas
setp
sbb
push
xchg
fsubrl
mov
sahf
js
and
add
add
mov
mov
mov
mov
sub
xchg
inc
ss
dec
pop
cmp
mov
cltd
test
arpl
lds
and
sbb
mov
sbb
and
inc
clc
adc
int3
pop
outsb
outsl
add
in
loop
adc
stc
and
fs
cmp
cmp
cltd
mov
imul
mov
cli
fucom
mov
shll
push
mov
push
gs
inc
mov
jmp
ret
push
adc
and
adc
mov
push
in
pop
add
mov
std
xlat
inc
mov
sub
out
mov
or
xchg
sti
add
add
inc
xchg
mov
nop
pop
sahf
sub
test
sbb
ss
repz
add
adc
sub
nop
mov
dec
adc
pop
lods
adc
aad
pushf
cmp
cmp
sub
add
aam
inc
addr16
psrad
fimuls
push
and
jno
inc
jecxz
push
adc
lods
mov
xor
mov
js
mov
mov
xchg
ret
mov
es
lock
das
lcall
mov
add
sub
mov
jmp
insl
int
and
pop
outsl
cmpsl
loope
mov
out
jecxz
push
lret
call
mov
add
pop
mov
mov
xchg
sub
lret
scas
pop
ret
ret
push
pop
push
cmp
jecxz
clc
mov
or
cmpsl
cmp
lods
ret
mov
mov
stc
movsl
jne
push
pop
add
sub
movd
xchg
cltd
adc
mov
add
dec
xor
xchg
adc
rorl
jo
inc
xchg
sti
stos
sbb
test
or
pushf
add
mov
xor
jecxz
or
dec
mov
popf
aad
mov
xchg
int3
cmp
pop
xchg
dec
jle
les
and
or
ret
jmp
outsb
lds
jne
cli
dec
mov
push
shr
jno
shlb
lcall
mov
xor
jnp
lods
sub
out
int
inc
loope
jp
adc
jge
rol
mov
mov
inc
pusha
mov
xchg
xchg
jmp
mov
jae
into
mov
leave
mov
jecxz
dec
stos
and
push
and
push
insb
mov
neg
scas
repnz
mov
adc
repnz
cs
push
pop
shl
inc
cmp
shll
stos
mov
xchg
dec
xchg
or
dec
insb
aam
or
fiaddl
sbb
scas
cltd
imul
test
adc
jne
je
lock
or
leave
jl
hlt
push
data16
mov
jge
popf
into
sbb
xchg
aaa
mov
sub
fwait
sub
add
in
es
pop
in
push
daa
stos
cwtl
xor
jo
scas
mov
scas
and
xchg
cmp
jae
inc
lahf
call
fidivrl
in
rcrb
add
fimull
jno
xor
dec
jg
addr16
and
movsl
test
and
scas
addr16
pop
jg
test
enter
mov
sahf
mov
js
push
mov
xchg
mov
loope
push
sub
mov
cmp
fisubrs
imul
mov
pushf
dec
adc
and
scas
lods
inc
add
mov
xor
cmp
xor
and
or
xchg
iret
lcall
fcompl
adc
sub
test
int
call
jg
sub
mov
aas
push
mov
mov
cmpsb
and
std
cmpl
adcb
sar
and
iret
test
cmc
pop
xchg
sbb
daa
sub
loop
mov
stc
jge
push
fs
push
enter
shlb
sarl
mov
out
insb
or
adc
fidivl
test
mov
or
jp
cmpsb
jg
loopne
xchg
addr16
add
adc
sub
push
mov
sbb
sub
iret
add
sbb
out
push
dec
xlat
cmpb
sub
inc
mov
ja
jae
jae
out
sti
mov
push
movsb
pushf
inc
aad
pop
call
and
aad
insl
jnp
inc
filds
repz
insb
inc
adc
sub
push
enter
pop
fmulp
adc
sbb
das
mov
inc
setl
inc
orb
dec
dec
leave
jb
mov
in
mov
imul
out
mov
cwtl
mov
outsl
fisttpll
orb
icebp
inc
into
mov
cmp
jne
sbb
sub
mov
mov
es
xor
mov
or
leave
cltd
cmpsl
loopne
sbb
mov
inc
test
ss
cmpl
int
dec
pop
test
je
sub
and
aam
xchg
pop
ret
push
daa
cmp
push
push
clc
fadd
push
ljmp
inc
lods
cs
aad
pop
lods
arpl
xchg
cmc
fmull
fnsave
sub
and
dec
mov
add
xchg
adc
dec
cltd
mov
test
arpl
sbb
shll
jo
or
mov
in
ret
xchg
cmc
and
imul
xor
sub
or
negl
mov
loopne
inc
mov
dec
mov
jp
jno
mov
ds
or
pop
leave
fwait
popf
or
dec
jno
outsl
jne
enter
test
out
push
fldt
bound
mov
in
inc
repz
mov
div
sub
loop
xor
jp
test
mov
repnz
sti
jle
imull
test
imul
nop
icebp
pop
xchg
pop
push
jecxz
push
or
xchg
xorb
adcl
loope
xchg
xlat
lods
popf
sahf
lahf
dec
mov
and
and
and
out
sbb
in
or
mov
int3
test
es
aam
rol
inc
pop
sbbl
inc
inc
inc
aam
jae
mov
pop
or
leave
adc
inc
mov
fidivrl
stc
sbb
xchg
nop
imul
mov
mov
add
push
inc
dec
rorb
push
repnz
xchg
sub
hlt
popa
enter
or
imul
sbb
jae
aaa
jb
pop
or
and
int3
push
clc
mov
push
or
xorb
and
and
aaa
movsb
sar
cmp
xchg
frstor
cmpsl
out
enter
daa
loopne
idivl
pop
lods
cmp
mov
cmp
test
ds
popf
iret
movsl
mov
aas
lahf
mov
ja
test
xchg
mov
popa
jo
pop
enter
jp
aad
shl
je
push
add
loope
xchg
scas
sub
sbb
outsb
mov
ds
aaa
sarb
das
or
insl
and
dec
sbb
imul
lds
cmp
int3
inc
int
mov
pop
dec
lcall
into
fadd
scas
push
sub
lock
mov
dec
xlat
xor
test
fs
mov
popf
cltd
mov
push
lods
and
daa
cmp
sub
testl
ret
clc
mov
xchg
je
mov
and
loop
or
into
xchg
mov
outsl
shlb
loop
nop
sti
stc
xor
js
rorl
fsubl
jns
lods
adc
daa
out
cmpsb
cli
inc
shlb
mov
push
or
push
or
cli
xor
lods
push
hlt
loopne
xchg
adc
imul
call
xchg
jb
in
sbb
sub
out
roll
push
rcl
mov
fidivrs
cs
fwait
cmp
out
or
nop
aad
mov
inc
lret
xor
stc
les
repz
les
xchg
rol
and
add
ret
pushf
aam
pop
xor
pop
pop
xchg
mov
xchg
xchg
inc
popf
mov
scas
jb
or
pop
je
pop
mov
pop
sti
adc
xor
adc
ds
jl
js
sub
xchg
dec
adc
neg
and
icebp
mov
cmc
push
lock
or
pop
xor
cltd
mov
push
scas
int3
rcrl
jg
sarl
popa
hlt
dec
dec
sbb
mov
xchg
icebp
xchg
rcr
cld
insb
mov
out
jo
jecxz
dec
and
push
add
aad
xor
jnp
js
out
ret
loope
nop
push
ret
imul
fstp
and
cltd
lds
lea
popa
xor
sub
cltd
jl
mov
mov
xchg
aam
fists
cltd
orl
pushf
mov
inc
and
add
adc
xchg
shl
jns
pop
lcall
push
nop
cmc
aam
sbb
add
test
jnp
in
ja
lret
xor
cmp
mov
and
cmp
pop
inc
dec
ja
or
bound
jnp
or
ret
mov
dec
push
lahf
pop
jne
sti
test
out
das
jmp
std
jns
mov
jl
push
int
out
push
cli
sub
fstpl
and
test
mov
shlb
mov
push
jle
sub
in
repz
in
fildll
repz
dec
mov
xchg
dec
add
push
push
cmp
inc
push
repz
popa
jp
stos
or
mov
jnp
or
adc
xchg
iret
xor
ret
insl
pop
das
xchg
inc
push
cmp
cmp
mov
or
inc
dec
daa
inc
pop
fdivl
imul
xchg
insl
nop
call
imul
pop
ficomps
ffree
fldenv
shrb
mov
scas
push
leave
mov
dec
hlt
lods
jle
arpl
fcompl
sbb
sahf
jbe
xor
mov
add
test
int3
or
stos
pop
mov
jecxz
xor
imul
cmp
in
movsb
pop
mov
push
add
in
in
mov
sti
movsb
in
fists
cwtl
cmp
ret
jno
jo
jl
inc
cmpsb
dec
pop
daa
add
jne
shll
mov
push
lahf
xlat
stc
dec
push
add
inc
push
pop
add
and
jle
out
aas
lahf
js
cli
sub
push
push
movsl
loope
fisubs
iret
push
fdivrl
movsl
test
adc
pop
lret
lahf
imul
cmp
outsl
sbb
fcompl
xchg
ret
fiaddl
cmp
sub
add
pop
jmp
lcall
fsubrl
cwtl
sub
fisubs
sahf
popa
ljmp
adc
in
add
mov
xor
mov
nop
ljmp
cmp
cmp
in
add
add
out
fldl
shrl
xlat
mov
out
sbb
loope
into
cmc
xchg
cli
push
data16
sahf
mov
jmp
mov
adc
sbb
push
lods
push
cmpsl
out
fs
cli
jbe
mov
push
jb
cmp
jg,pt
cltd
std
cmp
fucomp
gs
mov
pop
aas
sub
adc
push
sub
mov
cmp
in
xchg
xchg
xor
in
cmp
xlat
add
lods
sub
adc
in
dec
jmp
sti
adc
lcall
push
notl
jecxz
popf
inc
fmulp
in
dec
loopne
les
and
out
arpl
sbb
sub
add
pop
lds
push
pushf
cmp
sbb
dec
sti
mov
inc
sbb
inc
in
mov
scas
jb
lods
cmp
dec
hlt
je
cmp
jecxz
iret
and
jne
pop
std
in
or
mov
jmp
jno
mov
pop
dec
pushl
addr16
push
mov
jae
lock
das
aaa
inc
xor
cmp
and
or
shrl
jae
insl
add
dec
stc
bound
mov
imul
lret
adc
and
push
pop
sub
add
fs
out
call
imul
sub
inc
aaa
aam
push
add
pushf
or
pop
stos
fldl
xchg
daa
clc
push
add
ljmp
or
dec
js
and
dec
push
inc
sub
fwait
adc
add
sub
cmp
mov
shlb
cmp
loope
addr16
inc
mov
test
rcrb
add
movsl
stos
ljmp
add
lahf
fistpll
call
pop
xor
dec
mov
out
aas
divl
mov
mov
div
mov
ret
ja
sub
jns
jbe
sbb
add
sti
loopne
dec
aaa
sub
or
push
sti
in
int
mov
in
pop
xchg
add
out
fsubl
jg
ds
jp
jg
mov
pushf
cmp
inc
inc
aaa
mov
fisubrs
in
test
pusha
mov
into
shrl
inc
cld
aas
xchg
push
and
push
pop
imul
mov
mov
aam
and
push
mov
pushl
call
scas
sbb
push
pop
int3
sbb
push
daa
mov
xchg
std
pop
ret
ds
and
inc
pop
cli
addr16
lods
cld
inc
popf
adc
loope
inc
push
xchg
das
ficompl
outsl
aaa
xchg
les
int3
imul
push
fdivrp
or
rol
pop
mov
add
leave
sub
shl
mov
jbe
int
jge
jno
sbb
pop
testl
jl
pop
int3
hlt
mov
out
jp
shr
push
lret
pop
insb
jo
ret
into
scas
es
and
push
jp
xchg
mov
movsb
out
pop
push
push
aad
cmpsb
add
movsl
xor
daa
fidivs
cmp
sub
push
inc
push
jl
enter
imul
movsl
cltd
int
and
xchg
lahf
mulb
test
sub
mov
pop
push
daa
mov
pop
push
push
xor
loope
dec
leave
sub
popa
jl
jne
cmpsl
outsb
push
dec
in
int3
lods
pop
shlb
das
orb
sbb
add
out
rdpmc
arpl
push
jbe,pt
int
cmp
testb
pop
jl
stos
into
push
push
jp
outsl
fcompl
pusha
insl
sub
jns
sahf
add
out
test
fwait
subb
mov
divb
mov
or
rolb
lods
cmp
lahf
movsl
inc
idivl
mov
ret
jnp
into
test
push
cmc
pop
ret
cltd
xor
or
adc
stc
mov
lock
adc
and
test
mov
push
out
cmpsb
mov
xor
sti
mov
incb
jns
mov
mov
mov
imul
int3
add
xchg
clc
xchg
stos
sbb
lahf
and
sub
add
inc
in
mov
pop
sti
shr
cs
das
aad
xchg
dec
nop
mov
dec
inc
pop
jno
icebp
xchg
sbb
orl
and
lea
or
pop
js
aas
adc
stc
pushf
in
mov
pop
dec
pop
out
movsb
dec
imul
adc
sub
jb
adcb
and
into
jecxz
out
idivb
pushf
jle
out
cmc
push
mov
imul
push
popl
ljmp
mov
outsl
loope
cs
div
cs
xchg
mov
lock
jmp
sub
sar
shll
fisttpll
dec
hlt
out
fnsave
xor
inc
jge
cld
ret
lret
xorl
cmp
sbb
hlt
push
pop
push
pop
push
sarb
inc
mov
push
dec
je
push
xor
push
dec
aaa
sub
daa
clc
std
xchg
outsl
mov
test
xchg
fnstsw
test
xchg
outsl
inc
jp
and
ljmp
les
cltd
out
adc
test
sub
aas
and
into
test
sub
test
sbb
insb
add
lds
ss
add
mov
xchg
xchg
xor
sub
xchg
xor
ja
mov
test
mov
pop
jge
ret
ja
shll
inc
or
adc
dec
sbb
and
in
adc
jns
scas
cmp
scas
faddp
xchg
lods
jae
out
jb
sub
shll
ret
flds
mov
mov
insl
imul
jle
addr16
pusha
and
scas
adcl
loope
pop
add
sub
fcmovu
addr16
adc
or
fistps
or
dec
loopne
insb
push
add
xchg
jle
jl
mov
mov
iret
icebp
mov
ret
es
popf
and
inc
push
mov
inc
mov
fst
push
add
mov
xchg
sbb
jb
mov
mov
aam
loopne
into
mov
push
mov
xor
mov
xor
jge
subb
scas
push
inc
or
cli
add
and
int3
fists
out
pop
push
push
mov
mov
enter
add
xor
and
xor
dec
sub
movsb
jno
popf
push
mov
sahf
xor
pop
fcmovu
enter
daa
fstl
cmp
ds
pop
and
dec
cmp
ds
mov
popa
lahf
adc
xchg
cld
test
hlt
rol
mov
out
pop
cmp
repz
push
sbb
sub
inc
adc
and
mov
adc
psubusw
sbbb
mov
mov
add
push
xor
xor
push
inc
test
lds
stc
jne
pop
lds
lcall
out
lds
sub
fadd
sahf
cmpsl
pop
in
test
sbb
inc
xlat
fwait
jg
shlb
mov
cmc
jnp
and
or
in
cmp
pop
sahf
insb
idivl
pop
lret
stos
rcrl
mov
add
into
mov
xor
and
mov
xchg
sbb
pop
pop
inc
loop
push
push
stc
pop
rcrl
je
test
leavew
and
ss
mov
inc
out
insb
imul
add
popa
cmp
mov
arpl
gs
loopne
iret
lds
or
imul
jo
add
mov
push
sbb
fimull
stos
sub
mov
in
pop
fdivrp
outsl
aam
xor
aad
insb
and
mov
mov
fnstcw
sar
repz
sahf
and
jb
sti
mov
mov
adc
mov
xlat
adc
stos
lret
mov
cmp
leave
hlt
mov
dec
ficoms
je
cmc
push
jecxz
inc
adc
sti
push
aad
xor
addr16
jb
mov
addb
ret
or
lods
aas
xchg
mov
mov
das
cmc
jae
mov
cmpsl
mov
roll
test
dec
mov
cmp
dec
cmpsl
sbb
dec
cltd
sbb
ror
repnz
xchg
mov
and
mov
pop
and
hlt
cli
sub
mov
push
or
scas
fstl
jmp
scas
hlt
call
popa
jns
push
mov
call
mov
push
std
call
loopne
sub
push
test
mov
scas
sbb
dec
xor
xor
xchg
jge
cmp
sar
sbb
sarl
enter
jns
lahf
add
aad
out
nop
leave
dec
xor
or
sbb
mov
in
cli
cmpl
fdivrp
mov
inc
movsb
or
or
stc
in
pop
scas
dec
std
and
jne
in
popa
mov
add
out
int3
sub
xorl
mov
ficoms
or
cmp
or
dec
pop
addr16
sarb
dec
mov
mov
scas
int
jle
je
in
ds
pusha
ror
fisttps
or
jmp
lods
pop
int3
adcl
push
popf
lret
cmp
into
mov
push
ja
stos
arpl
push
insb
aad
adc
shl
scas
loope
stos
push
call
push
int3
iret
push
outsb
cli
ret
push
pop
aam
testb
jae
lods
sub
xor
or
mov
xor
cltd
out
fiaddl
and
imul
lds
js
sti
or
cwtl
push
pop
repnz
mov
sbb
std
hlt
lea
or
or
jge
jae
sbb
lcall
pop
and
int3
lret
pop
inc
pop
ja
xchg
loopne
xor
aaa
mov
scas
in
icebp
and
xlat
pop
cmp
inc
inc
movsb
cld
in
push
out
and
cmp
inc
repz
in
adcl
fdivrl
pop
jno
pop
mov
dec
stos
cmp
fimuls
mov
xchg
lahf
xor
pop
push
jnp
xlat
test
mov
dec
sbb
insl
xlat
and
mov
push
pop
into
rcl
and
push
sub
clc
dec
cmp
aad
outsb
sbb
pop
adc
ljmp
xorb
fcomps
ret
add
push
jp
add
je
push
push
xor
inc
int3
jg
adc
push
sub
popa
fdivl
mov
sar
sahf
dec
test
test
jl
bound
jg
orl
pop
and
mov
inc
xchg
and
faddl
mov
push
jecxz
fcoms
jle
lret
rol
out
push
ljmp
mov
jge
ljmp
outsl
cmp
fucom
cmp
cmpsb
stc
adc
xchg
jmp
mov
lods
sbb
mov
out
mov
cli
paddsw
cmp
icebp
mov
out
xchg
xchg
shl
adc
pop
pushf
jl
adc
in
adc
bound
xchg
jle
mov
cmp
xchg
inc
sub
xor
outsb
out
sti
push
test
cs
sbb
aad
stos
fists
add
mov
les
add
and
nop
lea
push
call
inc
ja
pop
fisubs
push
ja
pushf
cmp
jmp
jmp
pop
xchg
lock
inc
mov
iret
inc
or
aas
push
ret
push
dec
cmc
je
rorb
jecxz
jecxz
idivb
fs
cmpl
push
push
jbe
jne
ss
rorb
fcmovnu
cmpsl
cmp
mov
mov
das
mov
pop
shlb
rcll
push
scas
insl
aaa
xor
dec
cmpsl
fildl
imul
sbb
dec
lret
popa
or
and
aam
push
inc
ret
in
mov
or
xor
movsb
jmp
ret
sbb
inc
push
fnsave
outsl
clc
add
pushf
ljmp
lods
inc
add
mov
dec
push
outsl
xchg
std
mov
push
fcoms
pop
mov
pop
cltd
pop
mov
test
loope
call
outsl
adc
test
mov
jmp
xor
push
out
push
pop
inc
es
mov
mov
add
lock
bound
mov
pushw
mov
mov
sub
pop
repz
ja
movsb
orb
sbb
fidivrl
fwait
mov
imul
push
jne
scas
ss
xchg
fs
stos
dec
iret
bound
xor
in
out
xchg
dec
sub
out
pop
push
sub
leave
add
cmp
jp
cmp
mov
sbb
jne
in
pop
mov
fildll
cwtl
ds
jns
jmp
ja
lea
pusha
sub
popa
cli
cmp
xor
pop
push
pop
rcll
pop
leave
and
fldt
int
jbe
xchg
scas
inc
mov
cmp
scas
push
sub
scas
sub
ret
std
pop
or
add
xorb
ja
cmpsb
icebp
xor
push
cmp
inc
add
iret
fidivl
push
xchg
xchg
leave
sub
sbb
jl
imul
loop
cmc
and
push
pop
fdivrs
sti
xor
nop
movsl
movsl
hlt
fcomps
or
pusha
pop
inc
jge
dec
sbb
adc
xchg
or
mov
inc
sub
int3
mov
jo
je
mov
xor
xchg
dec
clc
scas
ret
pusha
in
mov
sbb
mov
enter
xor
cmpsb
mov
in
sub
cmp
out
mov
cmp
inc
jl
fcompl
jge
sbb
xchg
add
scas
iret
dec
and
rcrl
pop
ret
add
push
mov
roll
pop
jno
xor
aas
pop
mov
js
cmp
push
lods
repz
jb
sub
sbb
outsb
jge
cmp
lds
orb
cld
in
sbb
mov
xchg
xor
push
arpl
inc
imul
pop
shrb
out
rclb
leave
cld
lcall
dec
fcompl
and
sub
and
test
inc
nop
cmpb
jg
cmp
jo
pop
mov
mov
mov
and
out
popf
shrl
rorb
idiv
imul
test
outsb
push
mov
ss
into
push
mov
jl
dec
mov
loop
fsub
stc
cld
mov
mov
adc
es
addb
add
add
mov
cmp
mov
lods
cmp
sub
or
cmp
rclb
fistpl
hlt
adc
cmp
out
xor
lods
inc
xchg
inc
add
sbb
push
push
pmovmskb
xor
sub
xlat
dec
in
cmc
in
add
int
sti
cs
add
nop
sbb
dec
pop
lea
sub
pushf
fldenv
jne
les
lahf
jae
daa
pushf
inc
leave
aas
push
call
ret
pop
xchg
push
dec
pushf
out
jge
or
cmp
inc
cmp
inc
and
xor
pop
loop
jb
xor
int3
call
mov
testb
imul
inc
ja
orl
mov
mov
jg
adcl
aas
pop
ds
mov
dec
mov
adc
leave
rcl
push
mov
insl
push
and
dec
in
xlat
cmpsl
fidivl
icebp
or
cld
inc
push
lret
sarb
mov
xor
repnz
arpl
jno
mov
sbb
add
xchg
aam
movb
xchg
jl
fstpl
push
xchg
sub
mov
popa
cmpsl
int
lods
mov
aas
mov
scas
fisttpll
xchg
inc
ret
dec
push
mov
loope
pop
and
dec
cmp
cltd
xchg
cmc
popa
test
daa
mov
fwait
dec
xchg
fmuls
mov
std
xchg
sbb
sahf
and
test
jns
cmpsb
ljmp
mov
in
xor
or
loop
into
cmp
xor
push
je
lret
xor
dec
cmp
jb
push
pop
scas
xchg
adc
aam
dec
and
inc
ror
ja
push
inc
stos
fwait
mov
fmuls
in
aad
xchg
aad
mov
cmp
bound
aas
hlt
jns
insl
out
dec
push
xchg
cltd
jmp
out
add
js
lds
les
addr16
push
jp
in
mov
xor
mov
mov
aam
mov
fs
pusha
divb
fisttps
add
dec
sbb
jmp
inc
ljmp
and
xor
insl
push
pushf
mov
stos
dec
inc
push
insb
stos
fnclex
jnp
mov
or
adc
out
and
pop
inc
add
inc
mov
dec
jae
mov
dec
or
stos
sbb
lods
mov
cmp
mov
fiadds
push
xchg
shlb
lret
mov
dec
mov
jmp
arpl
xor
mov
add
sbb
jecxz
in
test
inc
outsb
cmpsb
add
gs
mov
mov
push
pop
mov
push
jo
hlt
les
push
sub
lcall
xchg
in
adc
fxch
loop
or
cmp
aas
jno
add
dec
mov
add
movsl
mov
sub
lahf
jb
jg
and
cmpsl
push
push
roll
je
and
repz
jne
mov
jnp
fdivrl
fsubrl
test
sub
fidivs
xor
lret
outsb
loopne
sbb
call
xorl
and
pop
inc
hlt
sbb
push
icebp
add
jle
xor
cli
add
sub
add
inc
dec
popa
lcall
and
mov
sub
xchg
push
test
sti
sbbb
cmpsb
mov
pop
lock
int
and
inc
mov
adc
in
lahf
out
fmuls
lret
mov
sbb
test
into
xor
push
cmc
js
add
movsb
push
pop
outsl
cli
mov
xor
jle
sbb
adc
in
push
fsubp
lods
jmp
fisttpl
mov
cmp
cmp
cmp
dec
orb
or
loopne
int
pop
fidivl
adc
imul
mov
mov
adc
mov
xlat
cmp
sub
mov
pusha
aas
sti
jl
dec
cs
xchg
jle
cltd
push
jecxz
idivl
repnz
mov
mov
leave
les
push
sub
sub
push
mov
ds
ja
pushf
xchg
sbb
jmp
pop
mov
inc
rolb
inc
aas
adc
cmpsb
ficoms
jb
aad
dec
inc
sub
leave
xchg
jecxz
out
nop
test
ss
sub
mov
add
lret
sahf
mov
push
sub
mov
push
sbb
les
dec
or
dec
les
das
xchg
xor
mov
pop
lret
mov
xor
out
rorl
inc
insl
add
add
cmpsl
movsl
mov
sahf
adcb
aas
scas
in
mov
cmp
mov
cmpb
rorb
cmp
cmp
cmpsl
ret
cmp
push
push
es
stos
clc
jns
cwtl
xchg
imul
popa
mov
mov
data16
adc
jp
mov
adc
cltd
lret
fstl
xchg
xchg
outsb
dec
push
and
xchg
mov
add
push
pop
pushf
dec
sbb
xchg
mov
add
or
xor
mov
inc
sub
xor
in
mov
mov
aad
repnz
mov
imul
ss
imul
sbbl
ds
pop
pusha
arpl
imul
inc
in
inc
pop
xchg
call
sbb
sub
mov
adc
aas
fdivl
sbb
mov
jno
jle
push
pop
in
or
push
fildll
dec
xchg
pop
lock
or
cmc
pop
push
out
pop
popf
scas
pop
aad
test
mov
stos
mov
jo
insb
push
sbb
jnp
push
repz
or
push
mov
stos
jmp
insl
mov
ret
jo
jns
nop
inc
xchg
xchg
pop
jae
stos
sub
leave
cmp
rolb
ficompl
dec
cmp
out
cwtl
imul
fisubrs
lret
add
sahf
mov
mov
sub
hlt
outsb
test
arpl
cld
mov
jge
mov
mov
stos
pop
or
xor
xchg
add
pop
int3
mov
rolb
mov
jo
mov
scas
subl
popa
movsb
popf
lret
rcpps
sbb
cmpsb
xchg
mov
push
enter
daa
fsts
xchg
cmp
jno
mov
jl
fisttpll
dec
divl
outsl
ds
movsb
mov
and
mov
xchg
cmp
test
and
inc
add
mov
repz
flds
lock
aam
pop
mov
push
adc
sub
adc
cmp
jmp
das
adc
jnp
lock
movsl
addr16
subb
sbb
cmp
xor
xor
and
dec
std
xchg
int
cmp
sub
pop
incb
rcll
sub
dec
fdivl
and
cld
cmp
add
inc
push
jg
mov
mov
loop
mov
fidivrs
sbb
fistpll
cmp
inc
dec
xchg
jp
xchg
lret
jp
mov
orb
xor
pop
arpl
xor
adc
mov
stc
xor
sub
adc
or
stos
lods
rclb
mov
mov
mov
lock
xor
inc
cmp
sbb
out
jecxz
fisubs
loopne
dec
xor
adc
out
dec
imul
das
ret
add
out
xchg
jae
inc
add
cmp
add
jbe
mov
in
lret
gs
sti
sub
adc
aad
mov
sbb
sbb
inc
push
xchg
fsts
jecxz
sarl
sub
adc
inc
push
mov
mov
pushf
cmp
fucomi
call
jns
inc
inc
call
inc
aas
inc
fbld
lods
adc
maskmovq
divl
xchg
sbbb
pop
push
int3
std
iret
pop
adc
mov
dec
cmpl
iret
test
imul
mov
lcall
jno
xlat
mov
sub
and
and
roll
mov
leave
dec
fistl
cmpsl
fcomps
gs
jne
cltd
cld
cltd
ret
scas
cmpsb
out
fcom
or
movsl
je
pop
mov
mov
sub
add
ret
lret
push
sbb
in
or
clc
mov
xchg
xchg
stos
stc
pop
ljmp
loopne
xchg
test
je
mov
push
imul
add
mov
test
mov
cltd
test
shll
test
aas
faddl
add
stc
rcrl
xor
sbb
add
or
decl
js
rcrb
xor
sarb
mov
clc
jae
mov
and
or
dec
or
pop
or
fdivrs
fwait
adc
test
mov
mov
mov
aas
lret
adc
adc
gs
aaa
cmp
out
movsb
sbb
mov
test
shlb
cltd
xor
push
inc
jle
xor
in
sbb
pusha
sub
and
mov
in
push
xor
fadd
lcall
std
in
popf
loopne
mov
sbb
mov
and
sub
jnp
mov
scas
insl
rolb
push
add
xchg
adc
mov
int3
jg
ret
pushf
pop
mov
testl
jno
scas
jecxz
or
mov
and
xchg
into
push
aam
xchg
xchg
jne
pusha
sbb
lds
mov
repnz
imul
mov
or
sub
push
jge
and
xchg
aaa
push
dec
or
mov
int3
jbe
push
pop
add
push
and
xor
mov
aad
and
cmp
adc
movsb
sub
jne
sub
xor
pop
and
fistpll
pop
enter
daa
fmuls
pusha
jno
ss
pop
orb
mov
push
dec
movsl
ret
push
mov
repz
jg
mov
mov
test
jmp
jbe
xchg
mulps
jns
jmp
js
jle
lret
push
dec
nop
loope
fcmovnbe
sub
adc
std
outsb
cmpsb
mov
rclb
mov
add
mov
sbb
aas
mov
cmp
je
int
cmpb
inc
fisubl
push
test
fcompl
into
sub
sahf
push
adc
into
adc
pushl
jae
scas
mov
test
and
or
lcall
fadds
es
idivl
dec
dec
sbbb
rorl
mov
ljmp
mov
nop
xor
nop
outsl
mov
lods
in
in
mov
adc
call
lods
mov
xor
arpl
fistpl
xor
ja
cmp
into
lods
or
cmp
gs
jecxz
stc
fcmovbe
pop
sbb
adc
adc
imul
jno
add
xchg
je
mov
arpl
add
xlat
mov
orl
ss
and
inc
cs
fcompp
aad
xchg
nop
lods
sbb
dec
jl
and
xchg
push
je
movsb
or
nop
into
jns
xor
call
aas
or
adc
ficompl
loop
pop
pop
cltd
inc
into
xor
jne
lea
in
popa
jb
mov
leave
je
mov
jecxz
or
testb
std
jbe
ljmp
push
ljmp
xor
jo
cwtl
lock
mov
rcr
lock
mov
das
push
sub
mov
cmp
pop
and
lret
sarb
es
int
rorl
dec
mov
cmpsl
xlat
icebp
dec
fisubrl
lods
je
sbb
ss
jecxz
inc
lret
sarb
sub
filds
rorb
ret
pop
xchg
notb
aad
fstl
mov
dec
xchg
jmp
xchg
sbb
in
mov
icebp
in
mov
xlat
shll
xchg
sbb
dec
push
inc
fwait
push
sysenter
ficoml
mov
test
fwait
xchg
aad
cmp
test
jg
dec
sbb
movsb
xchg
sbb
jae
imul
fimull
add
ljmp
mov
or
insl
fnsave
adc
xor
xchg
mov
fisttps
ja
jnp
dec
cld
push
pop
or
loop
fwait
inc
in
mov
jne
mov
pop
out
daa
call
mov
in
jmp
gs
mov
test
mov
cmp
aaa
cmc
adc
mov
pop
popf
mov
sahf
jle
add
call
mov
fbld
cmp
jmp
mov
lds
popf
std
dec
push
mov
pop
insb
fldcw
rclb
push
jnp
aam
scas
shrb
push
dec
xchg
in
sbb
pop
ret
add
lahf
mov
stos
push
pushf
jae
push
xchg
inc
mov
jle
mov
aaa
push
dec
in
add
scas
xchg
and
jmp
imul
fidivs
jbe
adc
push
rolb
fwait
repnz
xchg
clc
leave
insb
cmp
arpl
pop
loop
insb
push
dec
mov
scas
int3
mov
sub
sub
popf
in
and
popa
sahf
xor
negb
add
dec
jo
imul
aas
add
and
xor
xchg
bound
mov
pop
push
jp
mull
lret
cmpsb
enter
daa
xlat
mov
jno
pop
aaa
jl
mov
dec
aad
ds
int3
mov
mov
mov
push
lcall
push
mov
xchg
inc
and
mov
pop
daa
imul
pop
or
loop
pop
inc
pop
loope
inc
xor
out
aas
cmp
lret
xchg
pop
stos
adc
xor
popa
arpl
addb
out
jle
or
mov
int
stos
xor
pop
mov
sbb
fadd
fldcw
imul
sahf
jns
cmp
adc
sub
dec
jg
inc
loop
mov
ret
push
mov
xchg
and
in
ss
pop
cmp
mov
dec
add
jne
outsl
shl
out
cmp
xchg
pop
lret
cs
fst
mov
int
je
mov
dec
outsl
xchg
inc
daa
loop
pop
movsb
stc
mov
sub
adc
scas
aad
mov
pop
mov
mov
pop
cli
push
ja
xor
push
mov
or
or
xor
dec
sbb
xchg
jg
pop
aaa
std
adc
imul
pop
adc
gs
push
sbb
cmp
adc
clc
rorl
pop
fs
pop
iret
sbb
mov
outsb
leave
xorb
outsb
mov
push
dec
inc
flds
dec
movsb
les
callw
add
lea
and
fprem1
cmpsl
mov
jg
adc
push
inc
pushf
xchg
out
jmp
lret
ret
inc
push
jecxz
inc
nop
dec
out
aas
sub
jb
idivl
dec
test
aas
je
or
sahf
fdivp
lea
mov
or
mov
outsl
jp
push
int
fcmovnb
sub
mov
inc
push
mov
jno
lock
cmpsb
cmp
das
pop
or
icebp
xchg
stc
adc
and
xchg
je
shr
andb
lret
and
std
lret
mov
mov
dec
dec
cmp
filds
jne
add
sub
popa
or
ret
call
fildl
cmp
clc
sub
pop
xchg
sub
ljmp
cli
lods
pop
mov
mov
cmp
xchg
pusha
xchg
rclb
sbb
xchg
sub
cltd
jo
and
cmpsb
inc
xchg
dec
lahf
mov
test
mov
pop
sbb
jno
push
sub
pop
popf
cmp
stos
lret
sbb
dec
mov
repz
mov
xor
aas
or
test
mov
jle
inc
mov
lcall
dec
out
int3
movsb
inc
cs
push
or
shlb
jae
xor
in
outsb
jne
pop
jle
loop
push
out
push
sbb
bound
inc
jns
mov
xchg
sbb
mov
or
gs
jp
mov
mov
or
mov
cmc
jle
adc
out
pusha
jnp
bound
scas
xchg
cwtl
lods
adc
cld
arpl
outsb
icebp
sub
das
iret
sbb
pop
sbb
push
cwtl
pop
add
jmp
lds
loope
push
scas
xor
pop
push
xchg
testb
mov
sub
pop
push
sbb
movsl
jae
or
or
xchg
pop
cs
jle
mov
xchg
jl
cld
sbb
sbb
imul
sti
ficoms
jns
lds
push
xor
lcall
hlt
dec
stos
packsswb
repz
scas
cmpsl
sbb
hlt
sbb
cltd
aaa
call
jp
add
dec
int3
dec
icebp
add
xchg
and
call
cmpsb
out
pop
pop
scas
push
aaa
mov
push
mov
dec
push
data16
ds
imul
dec
imul
lods
cmp
enter
daa
or
adc
cld
jno
test
cmp
ds
andb
shlb
lahf
out
lea
push
fsubrl
subl
cmp
decl
mov
push
xchg
pop
dec
insl
or
ljmp
xchg
pushf
into
cmp
loope
outsb
insb
out
adc
or
mov
ret
andb
add
dec
mov
fistl
push
mov
lods
sub
insb
pop
jns,pt
lcall
sbb
jb
cmc
sub
jmp
test
out
sti
jg
or
adc
add
mulb
dec
dec
mov
and
outsb
fdivs
mov
lret
aad
jns
imul
xchg
into
sar
cmc
xchg
sbb
adc
pusha
outsl
jbe
push
loop
cmp
stc
pop
sbb
adc
sbb
pop
fcoml
sub
inc
cli
cli
inc
dec
ret
xor
dec
adc
mov
or
repz
cmp
mov
adc
mov
adc
lock
hlt
xor
mov
stos
cmp
aaa
push
mov
iret
clc
test
or
mov
cmp
lods
aad
dec
aas
nop
arpl
dec
cmp
fnstcw
sbb
mov
inc
popf
rolb
idivl
cmp
pop
dec
adc
sub
jmp
jbe
pop
gs
faddl
testb
sbb
and
sbb
les
dec
pop
cwtl
leave
je
jecxz
aaa
dec
not
pop
mov
les
mov
mov
lret
inc
or
mov
out
mov
jae
lock
stos
movsl
das
push
xchg
jp
xor
aaa
mov
test
cli
shll
push
filds
stos
dec
int3
mov
cmpsl
aad
xor
cli
ret
ds
sbb
cwtl
lret
sti
daa
mov
push
stos
into
mov
push
aam
subl
data16
rol
ja
xor
push
mov
clc
gs
adcl
loop
popa
sbb
sub
mul
out
popf
out
xchg
cmpsl
ret
cli
aam
pslld
insl
cltd
cmpsl
out
test
xchg
jno
push
cmp
dec
push
mov
test
fldt
jge
or
sbb
xlat
push
dec
xchg
stos
push
push
ja
pop
and
add
xchg
in
xor
ds
xor
xchg
adc
rcl
mov
push
push
insl
ja
jg
dec
loop
push
or
jb
fwait
mov
push
sub
mov
lahf
mov
in
mulb
mov
mov
push
jecxz
xchg
and
jg
lahf
xor
stos
ja
addr16
mov
mov
sbb
mov
mov
cmp
in
cltd
xchg
pusha
std
sti
mov
in
insl
xchg
imul
repz
xchg
cmp
test
repnz
popf
dec
lret
xor
xlat
shlb
and
inc
lret
push
mov
scas
xchg
jne
push
fnstcw
jecxz
jmp
or
inc
shlb
xchg
or
or
adc
inc
std
mov
fisubrl
push
xchg
roll
sbb
sbb
imul
lds
inc
mov
mov
mov
sbb
pop
fisubrs
arpl
lods
movsb
jge
add
repnz
cmpsl
aam
or
out
add
cmpsb
out
aaa
sbb
idiv
push
lret
xor
xor
mov
dec
scas
std
insl
mov
cmp
pop
movsb
leave
rcll
push
mov
mov
xchg
scas
enter
daa
aad
jl
dec
lret
jmp
jl
aad
dec
mov
or
movsl
fcomps
and
xlat
pop
lahf
or
test
test
dec
xlat
inc
inc
aas
imul
ret
pop
jne
bnd
cmc
and
xchg
jl
and
sbb
sub
arpl
shl
das
push
and
call
add
push
push
xor
xchg
ror
cmp
pop
pop
mov
cmpb
sbb
pusha
dec
sahf
mov
pop
addb
ffree
mov
adc
mov
cmp
mov
out
and
push
arpl
xchg
fdivs
xor
divl
mov
pop
aam
rcll
mov
sbb
sbb
xor
jns
push
lods
jecxz
inc
push
adc
sbb
int3
jne
adc
data16
add
mov
addr16
mov
cs
je
repnz
decl
out
jae
jnp
in
gs
mov
mov
jne
bound
push
mov
stc
adc
jbe,pn
and
xchg
rcrl
sbb
mov
cmp
jbe
push
sub
or
in
ja
pop
sti
out
cwtl
cs
jno
aad
inc
mov
jg,pt
dec
cltd
arpl
inc
pushf
mov
ljmp
popa
mov
cmp
jb
xor
call
mov
inc
je
jg
jl
call
out
pop
or
adc
aad
aas
rorl
jb
adc
dec
xchg
or
notb
fwait
push
imul
cwtl
adcl
mov
and
adcl
icebp
add
mov
fld1
lock
ret
subl
lret
cmpsl
ljmp
mov
arpl
bound
shrl
jno
dec
adc
cmpsl
aam
push
icebp
shr
sbb
inc
arpl
lret
push
jne
fldt
pop
outsb
push
mov
sbb
mov
sub
push
xchg
aam
lret
mov
push
lcall
es
clc
mov
ds
jle
dec
popa
xor
lods
xor
dec
out
add
xchg
out
push
inc
push
aad
enter
mov
cltd
fiadds
aad
test
xlat
mov
les
xchg
push
dec
insl
cwtl
sub
push
lea
sbb
or
pop
repz
aas
stos
inc
leave
popf
push
xchg
or
in
outsl
add
out
xor
fisttpl
xchg
sbb
xor
iret
test
add
cmp
adc
imul
mov
inc
pop
imul
fwait
roll
dec
adc
repnz
les
sarb
xor
cmc
xchg
jae
sub
sub
cmpsb
cmp
xor
fwait
jp
xchg
or
lock
gs
sub
jns
cwtl
push
sahf
filds
popa
xchg
ds
jmp
add
cs
xchg
push
mov
cmp
iret
xor
push
leave
ss
sti
mov
pop
dec
sti
insb
sub
rcrl
scas
stc
jmp
xchg
adc
or
and
add
lret
push
popf
inc
mov
or
push
jl
xor
xchg
sub
fldt
enter
pop
mov
cmpsb
outsl
repnz
fdivrl
inc
cmp
leave
shll
arpl
pop
jbe
es
aas
sbb
fbld
les
repnz
lcall
adc
mov
movl
seta
nop
or
cmp
adc
push
or
dec
or
jnp
adc
les
jne
jnp
push
jno
push
mov
cmpsb
dec
and
and
imulb
jmp
pop
repz
adc
mov
dec
aam
push
pop
aam
inc
into
adc
gs
pop
pushf
sub
pop
sbb
push
push
loope,pn
pusha
push
sub
jae
cmp
and
aad
adc
ret
popl
dec
xchg
sbb
mov
cs
daa
xor
push
push
pop
fmul
int
jg
sub
pop
cmp
cmp
loopne
dec
fmul
xchg
sub
mov
lahf
test
push
sub
mov
mov
loope
mov
test
cwtl
dec
or
push
inc
lods
cmp
in
pusha
mov
lret
imul
std
sub
sbb
add
into
xchg
fcomip
and
aad
adc
xor
scas
loop
fwait
mov
enter
push
lcall
fs
push
lods
push
fs
mov
cmc
sbb
mov
out
cmpsl
push
lods
xor
jmp
or
idiv
sahf
pop
mov
add
pop
loopne
in
pop
xchg
lods
sub
sub
int3
adc
rolb
xchg
loope
sbb
in
push
ret
xlat
mov
shrb
mov
xor
loop
jbe
xchg
xchg
ret
fbstp
inc
movsb
xchg
nop
sbb
mov
clc
aas
dec
inc
scas
mov
fldenv
sub
repz
lds
lea
pop
es
cmp
gs
jbe
xchg
adc
fnstenv
pushf
xchg
sub
pop
stos
insl
and
dec
out
loope
cmpb
push
les
in
adc
je
test
notb
adc
adc
mov
mov
aaa
daa
subl
jns
mov
mov
subl
pop
mov
mov
lcall
es
les
pushf
or
pop
and
adc
push
icebp
test
mov
jo
enter
jno
xchg
push
and
lods
call
lods
sarb
sub
mov
jmp
xchg
push
js
out
aaa
mov
dec
ljmp
icebp
lods
popf
int
mov
arpl
xchg
xchg
xor
pop
or
mov
ja
aam
push
cltd
adc
fwait
mov
pop
int3
dec
aam
inc
test
rcrb
sbb
lcall
das
out
push
push
xor
cltd
add
enter
daa
cmp
xor
decb
or
loopne
outsl
push
lock
std
fstpt
lret
scas
dec
ja
xchg
inc
dec
enter
repz
xor
push
push
fwait
add
call
jne
aad
mov
in
mov
bound
xor
jns
ljmp
ret
out
sub
sub
mov
pop
xchg
jp
es
mov
xchg
pop
jle
into
inc
in
cmp
and
jp
adc
or
xchg
push
push
js
mov
mov
push
inc
and
outsb
pop
mov
insb
cwtl
out
jnp
add
pop
push
es
addr16
adc
scas
hlt
ret
jbe
ret
insb
mov
shrl
mov
dec
int
or
cmp
fcmove
in
pop
xchg
sbbl
fdivrp
mov
jl
out
xchg
pop
mov
xchg
cs
dec
adc
arpl
mov
adc
lcall
or
and
add
out
sub
or
push
rorl
xchg
dec
cmpsb
xor
push
mov
mov
mov
and
ss
out
enter
daa
shll
jno
mov
jl
dec
xor
int3
ret
lret
scas
and
cli
and
push
out
loope
aas
adc
push
loop
fildl
cld
mov
pop
ret
fnsave
js
jge
pop
add
sbb
loope
pop
shrb
pushf
std
cmp
mov
cmp
popf
int
fbld
sbb
sbbl
cmp
xor
pusha
push
pop
xchg
aam
pop
cmp
or
pop
mov
mov
pushf
fdivl
lea
daa
stos
jno
add
mov
adcb
jg
mov
or
leave
mov
cmp
sbb
ja
push
ss
addb
and
hlt
imul
mov
outsb
in
sbb
mov
aas
cmc
jmp
dec
jle
adc
pop
loop
sbb
stc
jg
pusha
fs
dec
adc
mov
cmp
lods
mov
pop
mov
mov
push
cli
and
push
mov
xor
sahf
or
out
lock
cmp
or
fcompl
inc
adc
sti
xlat
cmpsb
imul
cmpsb
imul
pop
sbb
sbb
sub
sub
sub
mov
dec
mov
sti
inc
and
adc
mov
nop
hlt
es
dec
push
and
ret
pop
mov
repz
insl
rol
lods
mov
call
mov
into
adc
cmpsl
jmp
adc
inc
loopne
jno
inc
inc
cld
scas
push
aas
pushl
sub
cld
jbe
test
cmp
push
insl
jecxz
ja
negb
pop
in
cwtl
testl
lods
add
mov
nop
mov
rol
lock
xor
stos
dec
addr16
adc
and
lds
aam
push
stos
adc
mov
mov
jg
repz
fwait
stos
mov
mov
push
jp
inc
mov
or
dec
ljmp
insb
and
and
mov
fst
mov
clc
push
cld
inc
xchg
and
xchg
ljmp
outsb
lods
or
and
sar
scas
out
sub
push
mov
pfcmpge
cltd
dec
daa
imul
bound
cmp
fisubrs
cli
movsl
aaa
sbb
sti
cmp
bound
enter
out
xlat
inc
xchg
add
jecxz
lret
xchg
adc
mov
out
or
inc
shll
mov
mov
xchg
and
xor
push
fstps
fldt
pop
jne
sbb
dec
xor
out
orb
bound
inc
aas
in
dec
test
adc
bound
pushf
jg
xor
cmc
jp
insl
shll
rolb
shll
in
popf
insb
pusha
into
cmp
filds
test
in
cwtl
jmp
lcall
push
cmp
leave
popf
sarb
push
xchg
inc
fisubrs
inc
xlat
xor
scas
jnp
clc
push
scas
mov
imul
fisttpll
push
xchg
je
dec
dec
mov
inc
loope
je
add
push
or
and
inc
jp
lcall
mov
mov
mov
ficomps
out
ret
xchg
test
out
aaa
leave
mov
pushf
or
repz
mov
jmp
cwtl
aaa
in
pop
or
lds
nop
dec
mov
clc
test
sbb
xor
lds
xchg
scas
lcall
cmp
sbbl
xor
test
ss
dec
call
imul
xor
daa
jno
aaa
mov
dec
add
fistpll
cmp
mov
and
loop
push
mov
clc
sub
roll
sub
or
adc
je
js
pop
cmp
inc
fcmovb
push
nop
loope
jp
sub
lcall
clc
xchg
call
sarb
cmc
ds
mov
sbb
push
int
inc
pop
adc
pop
sub
push
pop
sub
sub
lcall
push
fcompl
sbb
sub
jne
sahf
test
and
mov
push
xorb
jg
fs
mov
sbb
sbb
and
iret
or
xlat
xchg
mov
divl
loop
rcl
lret
mov
xchg
inc
push
into
dec
es
mov
lea
jl
leave
outsl
repnz
cli
lret
ss
jmp
movsb
adc
nop
sub
push
pusha
lods
and
sbb
pop
out
imulb
xor
iret
cmp
jno
or
and
in
add
aad
loopne
loop
pop
shl
add
into
xor
imul
loopne
add
cltd
or
push
jle
cmp
and
xor
inc
sub
out
sub
mov
jl
jno,pn
mov
nop
iret
cwtl
orl
movl
mov
mov
movb
lea
call
cmp
fsubrl
add
into
inc
pop
icebp
adc
inc
clc
sub
inc
pop
cmp
push
xlat
jb
inc
mov
inc
jne
and
jecxz
mov
xchg
pusha
insb
out
cwtl
mov
cmp
ret
les
mov
jns
sbbl
je
mov
cmc
mov
dec
mov
bound
das
mov
loop
test
and
cmpsl
xchg
shrl
xor
sahf
aas
dec
mov
mov
push
inc
int3
cld
lea
mov
jno
jbe
loop
out
pop
jp
jmp
and
sub
mov
adc
xchg
cmp
push
insl
les
clc
push
call
sahf
ljmp
lods
jae
outsl
mov
sub
ret
arpl
movd
push
add
cwtl
sbb
subl
test
lahf
test
out
testl
jg
int
jns
sbb
mov
pop
hlt
add
or
into
outsl
add
pop
jne
repz
mov
or
sbb
jg
mov
int
mov
es
inc
pop
nop
ja
mov
dec
scas
dec
xchg
inc
and
adc
mov
adc
out
popa
dec
jae
inc
xchg
jns,pt
inc
nop
in
pusha
stos
mul
stos
and
sub
xchg
push
xor
jp
imul
jno
into
mov
jp
imul
sub
adc
pusha
imul
fcoml
iret
push
inc
xchg
gs
mov
dec
xchg
popf
out
sbb
ror
push
stos
push
sub
pop
push
adc
jnp
mov
scas
and
add
ret
cmp
js
ret
pop
pop
xor
mov
inc
jae
test
inc
les
or
xor
xor
sbbl
imul
sub
inc
push
inc
lds
inc
xor
and
adc
cmp
shl
ljmp
decb
jge
test
sbb
mov
aaa
mov
sbb
add
leave
data16
jecxz
xor
daa
pop
push
push
cmp
xor
and
scas
jns
xor
dec
mov
clc
movsb
cmc
divl
pop
xor
in
xor
out
mov
inc
daa
rorl
cmp
out
jno
loopne
jl
push
insl
dec
outsl
jne
ds
and
aaa
and
mov
or
pop
stos
test
js
rolb
popf
and
into
xchg
xchg
pop
adc
inc
js
push
push
pop
cmp
push
mov
jno
test
iret
lock
pop
loope
adc
push
mov
jo
add
out
pop
jno
add
mov
xor
inc
movb
gs
int
push
adc
mov
or
lcall
fcomp
leave
push
lea
add
outsl
test
call
ds
test
mov
mov
xchg
dec
jle
outsl
rcrl
push
pop
aad
jb
out
daa
movsb
mov
insb
out
mov
and
into
das
adc
cmc
ja
divl
xlat
add
outsl
shll
jge
in
cmp
fs
dec
adc
mov
or
mov
mov
cli
inc
ljmp
xchg
fmuls
stos
jns
incb
dec
jmp
push
push
mov
pop
icebp
xor
imul
insl
outsb
add
out
sbb
sahf
stos
pop
xlat
jb
adc
push
imul
out
lcall
cwtl
mov
aam
mov
nop
stos
push
dec
dec
adc
ss
icebp
das
xchg
repz
es
iret
repz
mov
loop
pop
cmp
lock
dec
xor
jl
jg
inc
inc
xor
mov
jb
mov
dec
jb
icebp
je
icebp
loope
clc
dec
sub
pop
and
cwtl
insl
adc
mov
sti
jb
les
push
dec
fldenv
scas
mov
mov
lock
xor
imul
lret
mov
push
outsb
orb
and
add
pop
inc
cmpsl
shl
mov
lods
dec
scas
icebp
sub
inc
int
es
ds
js
jecxz
jge
enter
dec
shl
icebp
jb
test
pop
dec
ret
inc
nop
and
subb
mov
xchg
mov
cmc
aad
int3
lods
fiadds
push
out
mov
lea
inc
inc
les
int
inc
add
aam
outsl
mov
das
mov
dec
or
pop
test
sbb
clc
lock
rcll
dec
aas
pop
lahf
jno
stos
cld
hlt
js
sbb
push
and
sbb
daa
xor
cld
or
xor
or
mov
adc
scas
mov
cld
mov
rorb
fadds
neg
or
pop
stos
fwait
lea
dec
mov
aad
mov
cli
push
out
inc
cltd
shll
cmp
loopne
in
and
cs
fwait
sub
xchg
adc
addr16
les
sbb
mov
loop
cmpb
add
sbb
stos
filds
mov
cmp
clc
movlhps
and
and
push
adc
ja
sbb
and
push
fnstcw
jnp
das
scas
test
push
cmp
adc
jmp
lock
sbbl
fadds
inc
jae
cli
lods
inc
movl
test
sbb
inc
js
insl
add
xchg
xchg
sbb
mov
fsubp
xchg
arpl
ret
sarb
stos
mov
mov
leave
lods
stos
cmp
adc
inc
jbe
xchg
xchg
jge
dec
mov
aaa
bound
jecxz
mov
imul
pop
xlat
push
cmp
mov
call
mov
cmp
xchg
add
cmpsb
das
mov
in
pop
xchg
loopne
mov
lahf
daa
shl
jp
inc
adc
sbb
jp
fisubrs
ds
movsl
sti
xchg
pop
and
sub
push
pop
xchg
test
and
dec
push
inc
js
xchg
mov
sub
int
ret
push
fwait
out
cwtl
and
sub
adc
cmp
jle
outsb
mov
mov
aaa
cld
popf
adc
push
outsl
sub
pop
into
xor
jl
int
mov
outsl
pop
cmp
outsb
push
cmp
movsl
fdivl
sub
push
and
les
push
jg
daa
cmp
sub
sbb
les
mov
ss
cmpsl
cmp
icebp
divl
stos
inc
lret
in
roll
jge
test
or
adc
into
cmc
ds
xor
outsl
mov
out
and
sbb
movsb
imul
adc
bound
lods
icebp
adc
mov
cmc
xchg
scas
data16
cli
jae
shlb
xor
call
sub
sbb
das
das
pop
adc
iret
adc
imul
dec
out
add
and
mov
cltd
mov
test
xorl
xor
mov
out
push
js
cs
and
aad
add
dec
je
xor
inc
flds
cs
or
sbb
lea
sarb
aaa
in
dec
pop
inc
stc
sub
xor
lea
xchg
sbb
mov
dec
in
fcompl
xchg
hlt
and
sti
jecxz
sbb
mulb
arpl
scas
mov
cwtl
sub
or
mov
pop
orl
inc
scas
mov
enter
mov
lock
das
dec
and
mov
repnz
and
out
rorl
add
icebp
inc
xchg
insl
or
int
scas
fwait
ret
inc
sarl
add
xchg
sbb
dec
lret
xchg
ljmp
push
xor
mov
inc
jb
mov
aad
ret
shr
sub
fisttpll
xchg
clc
jl
xchg
loope
mov
mov
lds
mov
out
xchg
xchg
push
or
push
sbb
inc
cvttps2pi
sbb
and
pop
cltd
icebp
sub
mov
mov
xchg
sti
dec
jo
and
xchg
rcrl
and
aaa
pop
dec
mov
stos
jmp
push
push
sarb
add
xor
stos
lds
out
fdivs
in
or
push
mov
mov
mov
xchg
jmp
sub
jne
or
add
mov
fldl
and
mov
jnp
out
pop
out
bound
enter
xchg
dec
scas
ds
inc
push
out
out
mov
gs
lea
adc
jnp
mov
outsb
adc
add
jle
fistpl
and
pusha
lahf
das
mov
lahf
pop
adc
mov
pop
mov
push
test
pop
popf
xor
mov
push
push
pop
aaa
stos
cmp
adc
mov
xchg
jnp
jno
scas
call
popf
or
repz
and
ret
pusha
pop
lahf
jns
inc
add
jae
nop
test
xor
or
hlt
xchg
and
ret
cmp
fwait
sbb
xchg
fnsave
sbb
mov
fimuls
sbb
pop
push
add
stos
dec
insb
repnz
icebp
leave
and
pmuludq
arpl
push
and
rcrl
aaa
and
push
add
and
mov
push
adc
sbb
inc
xchg
jo
outsb
or
outsl
xchg
dec
loopne
movsb
or
add
incb
enter
daa
iret
add
jp
sub
popf
mov
dec
dec
jnp,pn
movsl
sti
movsl
add
icebp
and
lods
lahf
mov
push
xor
imulb
push
mov
inc
cltd
dec
jno
push
clc
scas
pop
pop
xchg
test
gs
pop
add
aad
imull
and
scas
inc
sub
mov
cmp
pop
in
cmc
je
rorb
stc
sub
sub
xchg
sbb
pop
jo
test
push
imul
int
push
cmp
mov
icebp
pop
mov
sbbb
sahf
and
sub
insl
outsl
sahf
xchg
push
adc
rcr
jg
push
aad
push
cmc
aaa
mov
mov
mov
or
cmp
xchg
in
mov
lock
inc
stc
rcrl
nop
mov
into
cmc
lds
add
add
outsl
dec
imul
pop
lds
fs
cmp
dec
repz
fdivrs
jo
scas
fs
cmpsb
mov
xor
das
in
cmp
jo
or
das
sub
and
int3
loopne
je
pop
das
into
mov
inc
addl
mov
test
inc
sbb
adc
push
xlat
lock
sub
mov
mov
stc
jno
sti
add
cs
nop
pusha
adc
leave
cli
inc
push
stos
jb
mov
sbbb
dec
xchg
sub
popf
xchg
cmp
mov
sub
pop
cmc
insb
int3
adc
aam
jmp
lcall
lea
inc
push
roll
or
dec
pusha
inc
je
add
aas
jecxz
xor
mulb
stos
adc
add
push
mov
inc
sub
scas
in
fstpt
sahf
loope
push
sbb
mov
outsl
xor
cmp
das
daa
je
mov
test
test
es
clc
insl
repnz
or
test
and
mov
fninit
dec
cld
inc
sub
lret
add
pop
mov
xchg
shlb
xlat
loopne
rcrb
orl
test
mov
fnsave
mov
xchg
and
pushf
ljmp
xor
mov
out
push
cs
xchg
cwtl
imulb
notl
add
pusha
in
sub
aas
test
fbstp
insb
cwtl
pop
dec
xlat
mov
xchg
dec
push
sbb
inc
iret
sarl
into
inc
stos
fisubl
rcrl
arpl
or
dec
inc
or
inc
and
xor
mov
or
jge
xor
daa
pop
mov
fisubrl
mov
jb
je
push
dec
jp
xchg
or
or
jmp
push
dec
stos
sahf
jne
push
mov
cmp
std
mov
jns
push
or
shll
ficoms
xor
mov
or
cmc
mov
xchg
int
xor
mov
rclb
in
sbb
cmp
cmpsb
fistpll
xchg
arpl
mov
adc
xor
idivl
nop
outsb
subl
xchg
sub
cmpb
inc
scas
dec
test
push
lret
adc
inc
push
iret
addb
xchg
enter
push
pop
inc
or
push
inc
int
jecxz
push
jmp
push
jbe
das
fimull
iret
xchg
xor
popa
sbb
push
imul
xor
rcrb
mov
xor
mov
arpl
cmpl
inc
cli
loopne
loopne
rorl
movsb
push
jae
in
sbb
int3
movsb
pop
rcrb
cli
push
add
cld
jo
or
push
pop
and
add
movsb
xchg
ror
push
inc
sbb
xor
sar
enter
daa
into
mov
sti
jno
mov
jl
ljmp
enter
or
arpl
add
pop
push
add
lock
filds
lea
pop
xchg
mov
inc
xchg
push
jbe
loope
pop
sti
sub
xlat
xchg
cmp
aas
outsb
test
fwait
shl
xor
out
cmp
movsl
sbb
push
dec
add
scas
aad
push
cmp
outsb
push
xor
or
sub
push
dec
pop
ss
loope
fistpl
sub
push
lret
sub
sahf
xor
sub
fsubrl
jg
cli
mov
sti
jp
sbb
and
ret
cmp
cmp
dec
xchg
pop
imull
and
shll
fisttpll
and
into
fmuls
stos
xor
mov
js
inc
cltd
push
stc
adc
push
fs
pop
aad
jne
mov
lods
mov
insl
and
lods
out
cli
fldenv
jmp
popf
dec
scas
cmp
outsb
pop
or
pop
sar
jo
in
sub
adc
pop
int
pop
dec
jp
adc
mov
imul
aas
aad
sub
sbb
lock
test
dec
xor
xlat
das
sub
sub
xchg
fs
sti
mov
imul
jns
aad
pop
dec
nop
cmp
outsb
dec
xor
sbb
icebp
mov
sub
cmpsb
mov
dec
lock
call
xor
xchg
jge
loopne
pop
pushf
xchg
or
jmp
lea
rorl
inc
adc
pop
inc
subl
aas
sbb
inc
jb
push
lea
xor
dec
push
pop
jecxz
mov
imul
add
icebp
cwtl
sahf
xor
mov
mov
test
outsb
mov
fwait
mov
xchg
stc
lock
in
lret
mov
mov
fdivl
shr
hlt
frstor
mull
xor
fnstsw
int
xchg
mov
mov
cmp
jb
fwait
lret
jae
jge
pop
pushf
int3
and
dec
outsb
les
testb
outsb
sbbl
and
mov
gs
push
jns
mov
cltd
mov
aad
pop
adc
ljmp
dec
lods
pop
scas
add
out
mov
push
xchg
filds
rcr
aad
ljmp
cltd
pop
mov
call
xchg
daa
dec
ds
imul
sbb
inc
fstpl
jo
leave
push
push
xorl
add
pop
jmp
xchg
add
push
rorb
aad
xchg
xor
lods
mov
fldenv
mov
sub
sub
mov
or
shll
dec
dec
insl
sbb
mov
mov
fisttpll
push
jns
lcall
pushf
call
xlat
sub
add
addr16
pop
aas
mov
stos
repnz
das
jmp
jle
cltd
pop
in
jb
pusha
aad
stos
mov
xchg
add
sbb
stos
cli
aam
xchg
jae
xorl
fcompl
insb
mov
push
iret
add
sub
mov
test
scas
scas
enter
or
test
cmp
stos
push
pop
or
mov
push
inc
shr
out
or
ljmp
fiaddl
insb
mov
sbb
neg
imul
cmp
push
subb
les
repnz
mov
adc
mov
arpl
daa
fnstsw
mov
sbb
lea
or
sub
int3
pop
out
pop
push
cwtl
jle
jecxz
add
mov
jecxz
xchg
and
cmp
addr16
nop
loopne
cmpsb
mov
dec
dec
mov
adc
loopne
fnsave
jmp
jl
xchg
ds
int
adc
shlb
pushf
in
lahf
add
jae
test
movsb
in
filds
comiss
fisubrl
sub
js
divb
pop
jg
cmpsl
push
jno
loope
xor
sub
stc
or
adc
outsb
out
xchg
mov
clc
stc
orb
sbb
inc
jnp
jnp
scas
xor
push
push
jno
insl
int
inc
push
sub
lret
mov
push
inc
xor
push
sub
out
sahf
xlat
or
test
lea
xor
cmpsl
mov
xor
fidivl
fiadds
cmp
or
or
outsb
nop
stos
lret
enter
inc
mov
mov
xor
into
mov
fsubrl
xor
popf
outsl
dec
sti
add
stc
leave
fimuls
adc
pushf
dec
data16
fsin
lods
cmpsb
mov
mov
pop
push
out
in
push
cli
or
mov
je
mov
xor
pop
or
sub
xchg
loope
xor
loopne
cmp
pop
insl
sub
in
adc
adc
in
stos
add
adc
jmp
mov
mov
jmp
sub
aam
mov
iret
lret
pop
scas
in
pusha
xchg
gs
and
push
incb
dec
xchg
mov
inc
xor
jne
sub
jge
sbb
lock
push
rclb
vpsubsb
and
pop
pop
jo
adc
mov
pushf
inc
sbb
jmp
div
pop
and
inc
fwait
cmp
aas
mov
pushf
jmp
dec
leave
inc
je
sbb
jecxz
and
imulb
in
std
mov
mov
jle
cmp
nop
insb
adc
dec
pusha
cs
test
fistpl
xchg
loopne
gs
lret
push
ljmp
in
pop
mov
pop
add
addr16
push
es
sbb
mov
and
jns
repz
mov
cld
popf
fs
loop
inc
mov
xchg
sahf
mov
adc
jno
sub
xor
ret
jle
loopne
cmp
adc
rcrb
clc
js
xchg
xchg
sahf
mov
ljmp
xor
mov
sbb
xchg
imull
lods
ss
cmovns
adc
add
mov
xchg
mov
ret
iret
test
call
negb
push
xor
dec
jl
stos
mov
iret
xor
test
cmpsl
xor
mov
mov
fdivrs
mov
call
xchg
pop
dec
insl
pusha
pusha
inc
adc
call
fwait
dec
cmp
sub
clc
lods
mov
ja
out
mov
sbb
pop
in
add
jmp
popa
out
xchg
sub
jle
and
add
jp
frstor
mov
std
and
test
in
das
or
xlat
inc
jecxz
xchg
push
jmp
pop
jnp
addl
push
int
es
stos
mov
stos
push
push
sbb
and
iret
in
insb
test
lock
adc
push
push
pop
push
popa
adc
sbb
mov
cmp
inc
jae
jmp
dec
or
gs
inc
je
pop
fidivl
in
sbb
insl
nop
imul
inc
shrb
dec
repnz
outsl
hlt
cmp
imul
inc
outsl
jge
mov
add
pop
adc
add
pop
or
jp
in
pop
xor
scas
jnp
leave
aas
mov
scas
aam
xchg
and
inc
mov
movsb
lods
pop
or
cmpsb
cmp
in
mov
mov
pushf
mov
daa
int3
outsl
sbb
adc
loope
xor
cli
dec
lcall
movsl
pop
xchg
movsl
and
mov
aam
stos
jnp
test
outsl
mov
inc
dec
popf
repz
js
adc
pop
mov
and
shr
cmp
loopne
outsb
dec
mov
adc
lcall
andb
sbb
shrb
icebp
fcoml
je
add
fdivrs
mov
and
ss
xor
aad
inc
sub
fsubl
lods
jmp
sahf
jp
stos
test
lds
jg
fnstsw
mov
jge
mov
push
sbb
loopne
test
cmp
lds
add
rcrl
mov
cmpsb
sbb
stos
into
sahf
stc
cmp
xor
push
add
insb
cmp
fs
mov
adc
fisubl
sbb
lea
loop
sti
xor
out
jbe
cli
aas
and
cmp
in
or
cmp
mov
ja
cmp
jbe
mov
inc
adc
movsl
cmp
adc
push
sahf
add
push
mov
cmp
push
xlat
lods
pop
jg
dec
jno
mov
cmp
add
ret
mov
push
dec
lock
inc
inc
pop
scas
fstps
sbb
sub
repz
je
push
add
shlb
mov
and
xchg
xor
insb
pop
push
add
adc
negl
dec
push
pop
ret
ljmp
mov
push
cltd
jb
sbb
lds
movsb
je
ss
cmp
dec
in
or
cmp
pop
lds
jo
push
fcmovne
dec
sbb
sub
adc
das
les
mov
into
stos
jae
repnz
cld
roll
cmp
add
dec
lcall
mov
pusha
les
enter
push
lock
mov
fwait
out
mov
xor
std
rclb
popa
sub
aam
clc
pop
ret
or
add
fucom
sub
mov
inc
xchg
fldl
pop
popa
add
data16
cmc
cwtl
jecxz
lcall
xchg
insl
or
add
test
cmp
insb
sti
rcrb
or
xchg
popa
dec
or
inc
test
into
sbb
sbb
mov
pop
notb
inc
stos
cmpsl
movsl
jb
dec
adc
add
mov
jns
xor
scas
aam
ret
ret
push
mov
add
adc
inc
pop
mov
andb
stos
shll
lret
icebp
lcall
int
jne
sti
addr16
dec
cwtl
out
fwait
inc
ret
bound
mov
movsb
xchg
cmp
shl
mov
bound
sub
jp
adc
mov
or
daa
cmpsb
in
push
pusha
or
sub
xchg
test
inc
xor
out
ja
nop
mov
popf
sarl
push
dec
mov
stos
push
arpl
and
and
insb
lock
mov
scas
je
cmpsl
push
lahf
add
iret
lahf
xor
ret
mov
inc
cs
mov
lods
push
inc
jno
or
loopne
lahf
inc
repz
dec
xchg
cmp
sahf
sbb
mov
imul
nop
lds
jmp
lret
daa
nop
sub
leave
add
hlt
mov
jbe
int
jge
aam
sbb
mov
sbb
fdivr
add
sub
call
add
inc
push
cld
scas
mov
sub
mov
cmp
cmp
in
lcall
daa
lret
pushf
pop
cmp
lea
leave
jl
cmp
ds
sbb
shrb
lahf
inc
push
insb
push
jle
or
push
cmp
inc
aad
pusha
das
lea
xchg
push
mov
sbb
test
sub
mov
pop
outsb
lods
mov
adc
jne
push
xlat
repnz
xorb
sbb
dec
add
popf
jns
rclb
int
adc
sub
rorl
shrl
out
pop
icebp
fmul
stos
push
sub
jb
addr16
mov
jg
aad
mov
inc
or
cmp
pop
ss
fnstsw
xor
imul
addr16
shl
mov
inc
pop
lock
popf
sbb
xor
clc
add
mov
loop
push
stc
aaa
mov
adc
fs
mov
rorl
stos
test
and
cmp
pop
sub
inc
jp
fldenv
gs
data16
loopne
dec
and
xchg
rcll
xchg
outsb
pop
imul
xchg
sbb
add
xchg
xlat
in
cmp
rol
mov
movsl
jae
sti
mov
movsl
fwait
aad
jg
nop
int3
in
dec
dec
mov
inc
pop
add
fsts
push
pop
repz
push
mov
xchg
popf
ret
push
mov
cld
pop
roll
in
xor
popa
fistpl
fs
inc
aam
sarl
testl
in
cmpsl
mov
push
sub
mov
xchg
std
icebp
je
cwtl
iret
xchg
cld
pop
mov
jbe
test
dec
pop
push
xchg
mov
mov
dec
dec
lock
add
das
mov
lods
jne
test
pop
and
inc
add
aad
stc
es
insl
mov
dec
xchg
xchg
pop
cmpsl
lret
mov
aaa
push
test
repz
ret
mov
pop
and
pop
aas
push
pop
push
lods
out
leave
sub
adc
pop
adc
pushf
lahf
xor
js
fisttpll
pop
clc
out
lea
ljmp
dec
lods
pusha
dec
jg
dec
scas
mov
fidivs
xchg
mov
xchg
sub
sysret
xor
add
in
cltd
add
popf
test
test
xchg
fisttpl
jbe
test
inc
out
repnz
sbb
shrb
rcrl
jl
pop
mov
scas
push
out
dec
dec
add
mov
repnz
dec
imul
cmp
shll
inc
cld
mov
mov
lret
pop
fbld
dec
push
push
inc
inc
inc
add
cld
fwait
cmpsl
mov
dec
repz
jne
bound
mov
cs
out
jp
add
jns
sbb
pushl
sub
inc
fldcw
or
sub
stc
jp
testl
sahf
test
inc
jle
pop
pop
in
aad
pusha
cmpsb
add
xchg
jl
jno
nop
pop
stos
xchg
xacquire
pusha
in
nop
push
push
enter
mov
sti
push
mov
lock
jns
pop
and
xchg
xor
pop
add
jnp
sbb
out
inc
adc
in
sahf
iret
xor
ret
pop
mov
arpl
jno
jnp
adc
jecxz
or
pop
movsl
outsb
inc
jb
jnp
sbb
push
xchg
nop
iret
xlat
sbb
aam
imul
fidivs
mov
shl
add
leave
shl
repnz
leave
ja
iret
hlt
sarl
insl
arpl
mov
jbe
into
ljmp
shll
mov
or
add
dec
int3
push
insb
sbb
mov
push
mov
shll
cmp
scas
xchg
rorl
cmp
mov
inc
push
jge
mov
cmp
scas
daa
lret
cmp
mov
jl
push
cmp
js
stos
ds
inc
test
and
pop
lahf
bound
push
push
daa
mov
push
add
das
rcl
pop
and
mov
add
ss
jo
and
add
outsb
adc
sti
rclb
jg
ss
orb
roll
aas
int3
xor
mov
sbb
lcall
xchg
jbe
movsb
sub
aas
jg
out
sbb
push
sar
mov
sbb
mov
or
mov
bound
ss
adc
cmp
cmp
cmp
stos
sbb
int3
mov
mov
sbb
xor
scas
xor
outsl
ljmp
stc
out
push
mov
fwait
adc
push
cmp
pop
push
lret
dec
test
test
out
pushl
stc
sub
cmp
stos
rorl
mov
add
cld
adc
inc
popf
arpl
jae
mov
adc
lea
mov
pop
jle
add
jge
sbb
cmp
xlat
sub
shlb
adc
test
insb
lret
mov
clc
nop
cmpsl
negl
dec
scas
mov
inc
insl
fstpt
movsb
les
or
rol
call
pop
call
xor
jno
je
test
pushf
inc
xor
pop
or
ds
xor
inc
out
arpl
aas
xchg
enter
stos
mov
mov
jnp
jns
pop
jecxz
nop
jg
hlt
cmp
loope
cwtl
mov
cltd
mov
ljmp
adc
testl
leave
mov
daa
mov
add
lock
notl
das
addb
int3
xor
or
add
insl
jne
orl
push
cmpsl
leave
aaa
addr16
push
push
mov
push
outsl
loopne
das
adc
jle
test
lods
imul
sub
sarb
inc
push
aam
xorl
test
fnsave
sbb
pop
push
js
outsl
lret
mov
nop
push
lods
lret
sarl
clc
push
gs
inc
rcll
push
ds
fwait
add
sbb
mov
gs
jnp
sub
and
and
xorl
pop
dec
mov
stos
test
push
xchg
jae
add
test
mov
or
sbb
mov
in
xchg
mov
sbb
jb
or
mov
fsub
inc
fstps
or
popa
xchg
fwait
xchg
sub
cld
adc
sub
mov
daa
jl
pop
push
mov
inc
test
xor
lahf
xchg
fsubs
out
xor
outsl
iret
in
sub
jp
xchg
popa
mov
shl
mov
jmp
out
push
xchg
pusha
inc
xor
xchg
dec
std
xchg
jmp
mov
cs
popf
pop
popf
cwtl
mov
lret
jnp
stos
in
imul
adc
loop
jle
jnp
sysexit
scas
cmp
jecxz
sub
or
cmp
pop
jmp
dec
cmp
cmpsl
int
fmul
sbb
xchg
xchg
inc
icebp
bound
int
rclb
xor
aad
ficomps
mov
add
cld
and
mov
repnz
ja
out
jg
hlt
push
sub
mov
push
inc
xor
insb
lods
jge
call
lds
add
int
int3
cmp
jo
outsl
out
xor
clc
cmp
and
into
xchg
cmp
and
push
int3
mov
mov
enter
daa
leave
add
lods
lds
jl
aas
test
mov
movsl
sub
and
dec
xor
orl
test
rcrb
inc
repz
out
dec
pop
dec
fxch
js
xlat
mov
jnp
mov
test
out
sub
das
cmp
mov
outsb
jae
jecxz
lahf
cli
int3
shrb
xchg
orl
xlat
push
movsl
add
xor
clc
push
jge
int
or
jae
pop
mov
fistpl
popf
adc
and
sub
xor
jne
inc
andb
jg
rolb
mov
daa
xchg
mov
mov
gs
and
mov
cmp
imull
fxch
mov
xor
sbb
lret
fmul
inc
shll
dec
xor
and
and
rcrl
push
aam
adc
mov
sahf
lods
inc
push
cmp
out
sub
cli
fsub
rdtsc
sar
push
cmp
lret
rorb
and
pop
mov
gs
cmp
push
mov
pop
jmp
pushf
mov
sbbl
adc
lods
add
or
xchg
idivl
pop
cmp
push
push
cmpsb
jle
mov
jnp
inc
sti
sbb
lods
cs
test
aad
outsb
arpl
or
out
flds
jne
dec
pop
sbb
mov
push
pop
mov
lea
xlat
jp
xchg
test
mov
mov
adc
mov
jmp
fstl
pop
lods
xor
inc
or
fbstp
sarl
xchg
je
adc
jo
xor
aaa
ljmp
inc
dec
inc
mov
inc
das
mov
subl
fucomi
mov
pop
mov
push
xor
movsl
out
das
popa
lods
int3
mov
xrelease
and
sbb
shll
xor
xchg
insl
pop
cmp
dec
mov
nop
mov
in
cmc
cld
dec
lds
lret
sahf
dec
xchg
mov
shlb
stos
scas
rorb
roll
inc
jg
mov
sarb
cld
cmp
cmp
xchg
lcall
popa
inc
test
lods
ss
cmpb
dec
ficoms
sbb
pextrw
inc
or
movsl
push
cltd
jb
and
mov
inc
mov
js
lock
dec
ror
push
push
pop
test
test
xor
xor
icebp
sub
xchg
xor
jg
or
sbb
testl
mov
fmul
mov
aam
mov
lret
dec
cmp
jecxz
jo
daa
or
xlat
or
mov
pop
jg
fdivl
out
cmp
bound
dec
jns
testb
mov
xchg
daa
out
and
mov
inc
or
bound
dec
mov
mov
mov
mov
pop
xchg
lods
jle
mov
adc
jns
fistpll
cmp
jle
addr16
mov
mov
popf
inc
arpl
push
or
and
lock
jnp
lods
ds
popf
mov
push
je
xor
lock
mov
mov
loop
dec
cmp
jns
fbld
xchg
or
push
push
lret
lret
push
fiaddl
mov
fisubrs
push
fs
mov
add
pop
ljmp
and
loop
gs
hlt
imul
jbe
sub
cmp
mov
pop
sbb
push
mov
dec
int3
outsb
pop
icebp
sahf
adc
push
add
jo
dec
add
push
mov
mov
movsb
fsubs
push
sbb
in
dec
in
sbb
mov
dec
cmp
inc
mov
shll
mov
dec
push
rcl
ds
and
dec
pop
push
mull
into
push
fwait
inc
scas
inc
sbbb
pop
jo
cmpsb
js
inc
rclb
add
sbb
stos
loope
insl
icebp
sub
or
cmp
sahf
outsb
jge
adc
push
inc
ret
hlt
mov
scas
dec
stos
sbb
jno
add
jg
xor
test
sub
fists
xor
push
push
hlt
mov
bound
insb
jle
sahf
push
jge
test
aaa
movsb
cmpb
jg
aam
mov
gs
mov
es
sbb
jns
sbb
push
ss
cmp
mov
stos
imull
or
sarl
mov
sbb
inc
sub
jbe
pop
xor
add
loop
out
stc
pop
aam
fs
cmc
adc
xor
in
and
out
out
movb
cmpsl
hlt
cmp
rcr
xchg
rolb
inc
dec
pusha
gs
aaa
int3
loopne
test
pop
or
mov
or
into
imul
xchg
add
xor
sbb
mov
push
xlat
test
jmp
mov
out
sbb
lret
cs
fs
aad
jnp
nop
pop
push
cwtl
dec
insb
int3
inc
inc
xchg
daa
or
cmp
mov
subb
pusha
pushf
test
push
stc
insl
das
rol
pop
fiaddl
adc
int
pushf
xchg
mov
insl
pop
dec
mov
and
dec
or
dec
or
popa
je
lock
jg
jl
jp
clc
std
out
repz
add
cs
sbb
mov
insb
addl
inc
fisttpl
incl
dec
nop
enter
sub
inc
sbb
mov
stos
ret
push
add
bound
or
outsl
dec
xchg
jp
js
shl
mov
out
ror
or
dec
inc
and
lock
or
shlb
aam
pop
fists
sbbb
dec
cmp
fldl
out
ds
fstps
movsb
popa
pop
sahf
fwait
lods
mov
hlt
push
out
pop
sub
mov
push
hlt
sub
and
faddl
mov
mov
fdivl
subl
movsb
test
sub
xchg
sbb
out
cmp
pop
cli
lock
mov
popa
lods
push
fsubs
add
lcall
fcoms
lahf
mov
xor
enter
fldt
mov
push
and
push
xor
or
pop
jb
or
and
fwait
xor
decb
cld
sub
mov
push
fsubr
pop
out
bound
mov
jns
pop
out
mov
mov
pop
sub
gs
mov
jp
in
mov
mov
adc
jle
mov
in
mov
pusha
fists
adc
jne
mov
jle
push
pushf
mov
xor
dec
push
mov
rolb
inc
rolb
jnp
scas
add
dec
adc
jnp
iret
sbb
sbb
lea
push
push
jae
into
add
icebp
dec
or
int3
cmp
fidivl
cmp
sbb
and
fisubs
pop
xor
xor
sub
mov
xchg
fcoml
dec
hlt
mov
imul
mov
jge
push
stos
sbb
mov
or
add
sub
cmc
push
xor
mov
jo
jno
scas
das
adc
and
fmull
movsb
arpl
and
sbb
in
ss
mov
cmp
jb
jno
xor
jl
xchg
xlat
dec
lds
sub
jbe,pt
lahf
mov
scas
sub
data16
inc
adc
repnz
xchg
mov
push
pop
stc
iret
jmp
loope
sbb
cmp
push
push
outsb
cmp
adc
loope
cmc
push
sbb
sbb
incb
push
lods
push
subl
sub
fisttps
push
dec
pop
fdivl
cli
sub
aas
sahf
test
into
stos
sbbb
mov
pop
sub
mov
push
cmp
cmp
insb
inc
or
call
jecxz
rcll
mov
xor
out
into
or
popf
push
xor
push
outsl
xchg
loop
aam
stc
adc
leave
adc
out
lods
adc
push
mov
adc
cmpsb
in
cli
ds
xor
and
pop
lcall
daa
lahf
ljmp
sub
add
xchg
add
inc
xlat
call
or
in
push
mov
sti
jns
cmp
mov
das
aad
in
lods
nop
cmp
stos
inc
cmpsb
fwait
insb
fnstenv
pop
les
adc
dec
add
aad
dec
call
scas
jg
pop
lea
adc
xor
imul
inc
inc
inc
pop
push
aas
jae
aam
mov
mov
aam
mov
idivb
jg
cwtl
mov
jp
mov
add
pop
cld
rcr
punpckhbw
movd
lock
dec
jae
pop
mov
mov
popa
mov
movsl
rcll
jecxz
mov
insl
sub
sbb
cmpsl
test
mov
xchg
or
lret
jl
fistpll
mov
insl
cli
pop
iret
mov
mov
aam
out
ret
fdivr
cmp
ss
xchg
sbb
ret
xlat
pop
popa
jae
mov
or
js
add
stc
mov
rcrb
push
iret
sti
push
jae
mov
test
push
xchg
xchg
lea
out
push
movsb
sbb
shll
fs
push
jp
push
jnp
pop
add
daa
jb
cmp
mov
or
mov
xor
popf
sub
scas
int3
mov
pop
dec
push
fs
xlat
fisttps
lods
ret
xor
or
aas
push
arpl
sbb
push
jne
in
mov
mov
notb
bound
arpl
in
test
out
out
cs
pusha
cmpsl
pop
test
jp
pushf
addr16
call
das
mov
xor
ja
and
adc
fbstp
jns
jmp
push
mov
pop
fwait
sbbb
nop
or
andb
inc
aas
add
pop
fcoms
pop
in
jnp
xor
scas
arpl
push
add
adc
data16
ret
dec
pop
mov
mov
and
inc
in
jne
mov
or
sub
xchg
in
cmp
sbb
xchg
add
cmpsl
cwtl
fiadds
int3
lds
mov
sub
repnz
leave
push
push
lcall
je
jbe
pop
jg
popa
mov
dec
aaa
fcomps
mov
cmp
movsb
add
jno
dec
xchg
add
sbb
fnsave
or
and
cmp
out
fimuls
cmpsb
dec
testb
sbb
daa
cmp
jno
imul
dec
xor
sub
loopne
xchg
movsl
inc
dec
int3
and
test
and
out
mov
lret
push
xor
mov
adc
pop
mov
shlb
pop
cmp
out
loope
out
sub
adc
cmp
insb
xchg
outsb
pushf
sbb
adc
mov
stos
cmp
jl
arpl
psubb
lret
and
int
scas
out
sub
jb
pop
cs
lcall
test
and
movsb
sub
xor
test
leave
lret
out
dec
jg
out
mov
jle
mov
rcll
mov
fbld
cmp
lods
ss
adc
fsubs
xchg
mull
popa
rol
jmp
cmp
pop
into
lock
cmc
add
cltd
xor
insl
dec
outsl
data16
fdivp
sbb
fs
or
jno
mov
mull
in
movsl
xchg
cli
jno
mov
cmp
daa
mov
decb
popa
or
fbld
pop
inc
imul
push
sub
xchg
inc
cmp
cmp
mov
sahf
sub
fcomip
mov
mov
push
repnz
ret
adc
xchg
icebp
fiadds
inc
rcr
test
xor
repz
pop
aas
data16
lea
in
add
add
pop
inc
and
adc
cltd
loope
movsl
push
cmp
adc
dec
dec
fwait
inc
pop
fsubrs
adc
daa
jb
aas
std
dec
iret
aad
movsl
les
testb
gs
xor
rcrb
pop
xchg
outsl
mov
dec
bnd
dec
cmpsb
mov
aad
mov
scas
pusha
lock
subb
dec
mov
sbb
pop
and
shlb
pusha
cmpsl
jl
bswap
fs
adc
dec
jl
movsb
cmpsl
lds
push
mov
push
ret
mov
pusha
mov
mov
out
inc
xchg
rolb
mov
cltd
aam
test
push
xchg
xchg
rcr
sarl
clc
adc
cmp
ljmp
mov
ja
leave
mov
int
rclb
stos
loop
psrad
jge
fisubrs
test
andb
popa
dec
jbe
stos
test
push
adc
dec
adc
ror
lods
pop
pop
clc
lock
push
push
cmpsb
xor
into
or
add
lret
add
dec
mov
icebp
hlt
mov
add
fisttpl
inc
xor
xor
dec
int3
or
aas
mov
out
aad
sub
cli
ret
jns
adc
xchg
adc
jne
iret
push
fsubrs
pop
pop
xor
jmp
scas
mov
cmp
mov
mov
in
dec
mov
lods
lds
mov
xchg
fwait
pusha
pop
jmp
jmp
fnsave
popf
mov
xchg
adc
xor
stos
mov
add
mov
push
scas
sbb
push
dec
push
in
cmpl
and
inc
lret
mov
inc
jo
data16
push
jno
call
push
dec
push
in
sbb
ficompl
lods
inc
sbb
aad
imul
loopne
mov
int
loope
and
sbb
xor
mull
mov
and
jb
aam
outsl
aaa
xchg
inc
mov
add
mov
int3
out
pop
pop
jle
cs
sti
ret
cmp
cmp
cli
push
scas
in
sti
cmpsb
and
gs
movsb
jns
int3
push
or
ja
add
enter
daa
lds
cmp
jle
push
ret
pusha
cmp
ds
in
movsl
dec
mov
push
lahf
std
outsb
xor
bound
rcl
push
cld
add
repnz
pop
in
or
clc
loope
ja
inc
push
popf
imul
lods
aam
cmp
pop
adc
xchg
fucomp
adc
and
adc
mov
flds
push
sub
lcall
int
loopne
sub
push
fcomps
stc
das
pop
fmul
push
push
sub
outsl
mov
out
pop
test
cmp
jg
testl
dec
and
and
inc
ss
je
cmp
loop
xchg
mull
outsl
lret
mov
mov
sbb
sbb
js
cmc
lret
push
push
xor
roll
dec
test
stc
and
sub
cmp
jl
adc
push
lods
fidivs
mov
movsb
lods
movsb
rcrb
sub
stos
cmp
cwtl
repz
or
stos
lret
push
shl
jp
gs
cmp
imul
testb
aas
dec
xchg
add
push
sbb
bound
cmp
inc
add
jb
fldenv
daa
dec
out
xlat
pushf
loope
js
mov
insb
sti
sub
mov
iret
inc
int3
pop
arpl
loopne
cmp
jne
lret
jle
imul
jecxz
lods
push
xchg
adc
hlt
jae
cwtl
inc
jmp
add
mov
inc
jbe
add
mov
divb
daa
sub
je
sub
jecxz
xchg
testb
std
fistpl
xor
xor
sub
dec
dec
fistl
lods
sbb
adc
ljmp
fnstsw
mov
iret
dec
xchg
and
mov
shrl
mov
insl
clc
lcall
ja
inc
cmpsl
les
and
inc
mov
pop
lret
pop
xlat
add
and
sar
pop
or
das
mov
cmp
xchg
and
idivb
notl
mov
fdivrp
push
sbbl
rclb
ljmp
or
push
cmpsb
out
xor
pop
cltd
movsl
push
test
mov
add
mov
pop
cmp
xor
mov
test
inc
mov
sbb
cmp
shll
push
pop
mov
clc
mov
rcll
pop
push
pop
js
divl
cmp
mov
add
and
inc
cmpsb
mov
xor
jnp
movsl
or
pop
rolb
ja
bound
inc
int3
and
fwait
shll
inc
and
jne
mov
dec
xor
out
mov
and
jmp
cltd
in
cmpsb
and
push
mov
sub
push
sbb
addr16
push
jp
es
mov
push
loopne
jle
lahf
movsb
in
daa
lock
dec
pop
ss
add
xchg
outsb
jnp
jmp
mov
xor
in
das
popf
loop
mov
push
insl
in
stos
sub
and
pop
add
int3
js
sub
popa
push
nop
mov
or
cmp
mov
inc
jnp
mov
inc
jmp
aam
push
repz
push
insb
xchg
fimull
lcall
ljmp
mov
jb
adc
mov
jo
adc
inc
mov
jns
xor
sti
jbe
pop
cwtl
jge
bound
aaa
push
jmp
test
rolb
jge
shlb
pop
lods
lahf
gs
ficoms
lea
pop
jno
int3
jbe
and
jne
cmp
filds
movsb
add
pushf
push
push
int
cmpsb
push
jae
in
jmp
test
je
out
daa
les
cmp
aas
sarl
dec
adc
xor
es
arpl
cmovge
push
inc
or
push
movl
mov
mov
or
xchg
js
mov
pop
mov
push
push
in
mov
lods
icebp
xchg
push
cmp
data16
bound
sbb
jb
or
cli
push
outsl
sbb
push
rolb
out
add
imul
pop
int
testb
push
rolb
sub
push
lcall
cmp
sub
repnz
sahf
xchg
repz
ljmp
enter
in
mov
dec
bound
ss
dec
add
popf
int3
adc
and
jns
rcll
push
mov
xchg
mov
mov
cltd
cmc
xchg
inc
in
jbe
imulb
aam
add
mov
fs
sbbl
mov
lods
lds
sub
mov
cmp
xor
xor
cmp
or
lods
dec
xor
gs
sahf
loopne
cmp
setle
pop
pushf
and
mov
adc
jge
add
ja
xchg
int
sbb
popf
call
dec
sub
movsb
pop
mov
xchg
fsub
sti
xchg
aad
cwtl
push
nop
leave
push
dec
call
das
push
fsts
aaa
jns
cmpb
insb
je
lea
mov
call
sub
aas
adc
lods
pushf
inc
vpor
jcxz
pop
and
aas
push
mov
jb
inc
scas
dec
jge
pop
je
jmp
xor
xchg
cmp
cwtl
in
fsubrp
mov
scas
outsb
mov
pop
push
sbbl
sbb
mov
jp
mov
pop
and
insb
push
mov
mov
xchg
fsubs
icebp
xor
sti
out
es
push
dec
jb
js
ret
mov
es
sbb
cld
and
fmul
leave
jecxz
mov
shll
iret
mov
sub
shrb
cmpsb
aam
fcmovb
test
mov
popa
pop
fstpl
lcall
aad
adc
and
mov
push
lods
dec
test
xchg
pop
push
xchg
movsl
iret
jp
pusha
in
add
mov
xor
cltd
test
dec
test
popa
mov
cmpsb
dec
xchg
testb
lret
imul
sarl
lock
dec
xchg
pop
pop
add
fs
add
js
jg
pop
mov
xor
out
xor
adc
gs
mov
jge
jnp
and
outsb
movsl
dec
clc
iret
cmovno
jge
and
jae
sub
jbe
out
mov
dec
or
aaa
in
mov
xchg
mov
fsub
aad
mov
cmp
or
and
inc
mov
inc
mov
test
jle
add
je
imul
pop
mov
inc
lret
push
or
xchg
jg
fiaddl
test
clc
popf
or
fstl
sub
stos
sahf
xchg
and
int
jnp
cmp
cmpsb
push
xlat
mov
aaa
push
or
xchg
mov
ret
rcrb
and
jae
dec
cwtl
inc
out
mov
or
mov
xchg
sbb
ljmp
insl
xchg
icebp
add
sbb
aam
imul
inc
fisubrs
ret
cmc
xor
sahf
add
bnd
and
leave
mov
cmpsb
push
arpl
jle
test
pusha
jge
cltd
push
sbb
shlb
adc
xchg
xchg
imul
pop
fmul
cltd
push
rcrl
dec
adc
rol
scas
stos
cmc
or
push
pushw
cmp
cld
mull
cmp
cmpsb
pop
push
in
rcl
ret
enter
xchg
cmpsl
cmp
cmp
jno
loopne
jl
sub
dec
adc
sub
stos
mov
push
push
push
out
test
xchg
shrl
dec
js
fistps
xor
js
add
pop
cmc
sub
push
lock
sub
rcrl
outsb
lds
test
dec
nop
fcmovnbe
dec
sti
fmull
or
movsb
mov
jmp
fimull
int
out
push
sub
mov
stos
cmp
push
push
cmpsl
xchg
dec
fsubl
jo
sub
cmp
sahf
xor
adc
add
and
mov
test
xchg
imul
fcomps
pop
mul
gs
lret
in
scas
xchg
mov
sbb
jae
into
cltd
or
cmc
pop
cwtl
enter
or
add
loop
xchg
push
stc
out
int
fs
cmp
mov
cmp
into
cld
out
test
or
xor
fstpl
loope
insb
or
mov
gs
loopne
mov
scas
pop
mov
add
adc
add
inc
out
sbb
fcomps
xlat
in
push
pop
xchg
test
in
std
ss
sti
xor
or
nop
movsb
movsb
daa
dec
inc
inc
mov
xchg
mov
mov
outsl
int3
inc
lea
xchg
call
stos
popa
inc
pop
pop
mov
adc
sbb
pop
jle
das
inc
loope
mov
lods
rorl
loopne
jb
xchg
mov
hlt
xchg
xchg
jecxz
fdivs
leave
mov
std
sub
sbb
hlt
sbb
xchg
xorl
outsb
popf
mov
int
lock
aad
das
fwait
jbe
mov
cmp
jle
rorl
ds
popa
jo
mov
mulb
ja
adc
cld
dec
jle,pn
cmp
and
neg
outsl
pop
dec
push
clc
sarb
xor
sub
lock
mov
jge
fidivl
fldl
sbb
pop
mov
xchg
adc
jb
mov
arpl
idivb
dec
push
cmp
iret
ud0
jmp
pop
lds
cltd
mov
adc
mov
lahf
inc
xchg
loope
test
jecxz
xchg
mov
dec
rcl
inc
xchg
add
push
pop
dec
inc
add
xchg
ljmp
loop
mov
repnz
data16
cmp
mov
out
pop
ss
out
dec
jmp
ds
cli
mov
adc
pop
sub
jne
test
mov
sub
jb
mov
loope
call
in
pop
call
pop
inc
dec
sub
dec
fildll
and
cmc
mov
add
notb
arpl
push
shl
jnp
nop
pusha
jle
mov
xor
pop
jmp
dec
aad
sbb
ds
imul
mov
test
stos
adc
std
and
adc
mov
push
shrb
sti
stc
iret
not
adc
jnp
or
insl
dec
inc
xchg
filds
repz
mov
ret
xor
xor
inc
push
cmp
xchg
dec
loop
sbb
xchg
les
jbe
fmulp
jmp
scas
sarb
or
push
lea
das
mov
arpl
mov
jge
mov
sbb
sbb
or
add
adc
int3
test
pop
or
mov
jo
pop
les
out
sub
cltd
mov
movsl
push
cmc
in
push
cmpsb
pop
rcrb
push
xlat
daa
ret
cmp
out
std
jno
movsb
mov
loope
repnz
lock
insb
and
pop
out
loope
inc
inc
sbb
pop
mov
push
jmp
push
push
pop
mov
inc
fdivl
dec
cmp
push
fs
pop
xor
repz
cmpsl
xchg
fimull
cld
cmp
lret
nop
pop
iret
shrb
sub
and
and
sbb
incl
pop
pop
xor
cmc
pop
push
xchg
push
iret
int
int3
pop
sub
xchg
lcall
loop
sub
inc
iret
sahf
fcoms
test
fwait
lock
sbb
mov
pop
orl
lods
xchg
and
push
cmp
adc
mull
popa
test
inc
js
mov
adc
into
jl
mov
xor
cmp
leave
mov
sub
fs
in
lcallw
xor
leave
int3
mov
dec
sub
mov
sbb
in
or
sar
adc
movsl
gs
pop
loopne
or
pop
ret
adc
mov
push
adc
sbb
add
mov
xchg
dec
xor
cmp
arpl
xlat
and
dec
sub
cmp
mov
push
pop
pop
mov
ljmp
dec
cmpsb
push
inc
add
ror
les
ss
jb
mov
fdivrs
call
sub
adc
pop
jle
cltd
inc
in
popa
lods
pushf
pop
and
mov
mov
mov
push
imul
rcrl
jecxz
pusha
lock
cwtl
bound
mov
or
mov
lock
mov
sahf
lock
das
jp
xor
mov
pusha
pusha
push
rcrl
and
lods
in
aas
dec
push
pop
pop
mov
aam
cld
jbe
repnz
cmpsl
dec
sub
std
inc
xor
xchg
jmp
jmp
push
adc
sub
pop
sti
aam
enter
movsb
lds
add
mov
xchg
push
mov
ljmp
data16
and
idivb
pop
push
jg
xor
push
push
inc
rorl
pop
je
add
mov
cltd
repz
mov
fstpt
xchg
push
rorl
mov
test
xchg
fiaddl
sbb
sbb
sub
cmp
mov
push
stos
sbb
ljmp
call
jo
xor
push
xlat
xor
mov
mov
std
sbb
aaa
pop
icebp
jecxz
ja
adc
fisubrs
inc
xchg
pop
fisttps
inc
or
out
jne
xchg
inc
mov
ret
push
int
bound
jns
sub
in
int
xchg
push
and
out
cmp
sub
inc
lahf
mov
and
daa
mov
loopne
mov
arpl
in
push
aam
sbb
mov
jmp
adc
lret
mov
popf
push
mov
jecxz
ret
sub
cli
and
adc
insb
push
xor
jnp
insl
pop
scas
push
movsl
inc
push
gs
adc
in
mov
iret
push
fadd
mov
popf
pop
mov
and
jae
movsl
clc
inc
hlt
dec
push
or
scas
sti
testl
pop
insb
xchg
lahf
out
sbb
and
imul
xchg
fidivs
mov
stos
mov
inc
mov
imul
hlt
jbe
das
arpl
stos
jbe
ds
jge
mov
sbb
xchg
inc
aaa
xchg
sti
jo
sti
or
int3
xchg
or
pop
cmp
push
xchg
add
jo
sti
sbb
imul
mov
push
and
movsb
movsl
push
ds
inc
in
cmpsb
fcoml
enter
daa
sarl
jno
lea
jl
jno
dec
pop
cld
sub
daa
arpl
loopne
pop
lahf
jns
mov
mov
pop
sbb
sub
sub
imul
jo
pop
add
mov
push
adc
icebp
push
shrl
and
outsb
mov
adc
add
enter
mov
sbb
mov
xor
push
mov
int
mov
pop
test
push
insl
push
push
lea
fdivrl
sub
adc
sahf
jnp
add
cmp
adc
mov
leave
mov
inc
mov
push
cwtl
and
test
cmp
into
mov
mull
insl
lret
insb
rcr
dec
mov
jge
data16
into
pop
jo
cmc
out
cmp
xchg
sub
push
dec
loop
test
or
and
js
pop
sbb
lods
jp
jns
les
out
insb
mov
xor
movsl
orl
aaa
pop
mov
loopne
push
push
adc
jb
imul
ljmp
sete
sbb
dec
incb
xlat
bound
sub
xchg
jo
push
fucom
in
shrl
sti
xchg
jae
cs
out
aad
enter
sbb
dec
add
cwtl
inc
fnstcw
jb
sub
fwait
lea
mov
mov
test
xor
mov
jbe
pushf
inc
cmp
jmp
insl
imul
ljmp
imul
xchg
int3
add
ret
sbb
push
jecxz
sub
testb
std
ja
lea
jb
mov
fists
mov
fcmovnbe
or
mov
adc
jge
xor
pop
test
mov
jmp
cld
shr
js
es
or
xchg
add
dec
arpl
mov
fisttpll
inc
icebp
popf
iret
icebp
cld
mov
mov
int
call
or
mov
and
mov
leave
ret
xor
push
push
pusha
data16
add
jp
sbb
lods
mov
sub
pop
mov
stos
xchg
jp
mov
nop
mov
add
mov
in
mov
repnz
dec
jns
xchg
test
rcr
xchg
mov
sbb
jecxz
roll
sbb
stos
in
and
push
dec
xlat
lahf
add
leave
push
inc
push
mov
xor
add
jmp
mov
mov
lods
push
inc
ja
test
fiaddl
mov
or
push
popa
fwait
jge
orl
sub
loope
mov
outsl
mov
xor
bound
mov
jns
or
in
fsubs
out
test
sub
inc
pause
and
mov
fnstsw
insl
leave
jle
fmull
pusha
mov
xchg
jo
mov
mov
test
lahf
xor
adcb
outsl
pop
popf
jle
out
mov
add
stos
mul
mov
insb
mov
jns
jmp
lahf
scas
mov
clc
push
lods
push
cmpsl
adc
xchg
mov
adc
mov
repz
cmpsl
mov
jae
aaa
inc
testl
push
push
clc
xchg
testb
sbb
mov
enter
adc
mov
shr
push
mov
mov
inc
push
arpl
ss
out
dec
xchg
xchg
jnp
pushl
push
mov
or
push
adc
cs
int3
jle
outsl
pop
imul
outsb
xor
sub
loop
or
in
cmp
cmp
push
mov
in
xchg
pusha
aaa
std
daa
rclb
jno
lcall
into
ss
ds
movsl
imul
and
ficomps
mov
test
repz
inc
cli
fcompl
pop
test
sarb
arpl
mov
jb
mov
fucom
or
adc
testl
or
fidivrs
mov
sbb
jb
add
mov
sbb
cwtl
mov
call
outsb
inc
lcall
lahf
fsubl
jl
in
push
sahf
push
xchg
push
test
out
adcb
jg
xor
mov
inc
call
ss
fwait
cmp
mov
mull
addr16
dec
sbb
shll
mov
or
xchg
pushf
into
inc
nop
xchg
scas
out
test
loop
xchg
outsl
mov
add
adc
add
adc
aaa
jb
mov
push
in
mov
es
cli
mov
mov
cmp
cmp
or
lea
loopne
fnstenv
movsb
ja
imul
or
add
std
in
xchg
shrb
sbb
mov
pop
sub
dec
xchg
in
ds
enter
xchg
cmpsl
mov
nop
xor
mov
xchg
fpatan
sti
fadd
lods
mov
sbb
js
sub
out
jno
daa
mov
pop
jb
pop
adc
or
xchg
js
inc
std
pop
loop
int3
add
jb
mov
dec
pop
lods
mov
xchg
jecxz
cmp
notb
sbb
cwtl
fsubr
js
xor
outsb
cmp
lret
add
pop
mov
pop
mov
outsb
and
fmul
cmp
cmp
add
mov
jbe
dec
sarl
aad
and
mov
imul
mov
test
icebp
je
pop
cld
int3
adc
lret
test
bound
enter
test
sub
sub
fists
ret
rcll
fnstsw
pusha
mov
roll
or
adc
std
lods
stc
test
or
pop
push
rclb
int3
out
inc
nop
mov
cltd
popa
dec
dec
test
and
cltd
add
dec
loopne
sbb
addr16
sbb
int
xlat
and
pop
cli
mov
ja
lock
add
in
xchg
call
ljmp
lcall
mov
push
mov
addr16
mov
add
cmpsl
inc
mov
inc
int
lods
jns
dec
mov
sbb
xchg
ds
xor
out
pmulhw
lcall
in
ss
xchg
out
mov
out
xchg
sub
cmp
adc
aam
lret
mov
inc
sti
fstpt
lea
pusha
dec
jns
fisttps
or
int
stos
mov
rcll
mov
jp
movsl
outsb
jbe
cmpsb
mov
push
stos
push
jbe
cli
repnz
hlt
out
jnp
lods
cmp
push
repz
adc
push
lods
ret
xchg
sub
jecxz
pusha
or
jg
pop
pop
lahf
push
out
sbb
push
into
xchg
dec
pop
mov
pop
mov
adc
rorb
sbb
sidtl
hlt
or
fldenv
mov
sbb
pop
outsl
sbb
push
dec
aaa
adc
mov
loope
gs
mov
mov
sbb
push
dec
add
xor
xchg
daa
sbb
and
fistl
push
loop
dec
cmpsb
loop
push
in
outsb
xor
pop
test
daa
mov
inc
inc
jno
lret
pop
jl
add
mov
aad
sbb
push
inc
push
lahf
mov
fistl
pop
push
push
mov
pop
dec
test
iret
in
js
add
pop
icebp
leave
push
push
push
adc
pop
orl
cmpsb
cmp
dec
rclb
mov
and
sbb
push
jnp
adc
fstl
push
fwait
push
or
mov
std
pop
cmpsl
pop
stos
push
add
fmul
xor
sub
cld
sbbb
xchg
repnz
jg
test
mov
mov
popa
mov
xchg
and
inc
mov
fadds
mul
les
lret
rol
or
lret
mov
sbb
xchg
cmc
jne
and
outsl
jg
jo
jecxz
dec
stc
lret
push
pop
fs
inc
mov
lods
dec
cmp
mov
fs
and
ss
push
cmp
mov
push
jge
pop
gs
ret
sbb
mov
jo
adc
or
sub
clc
adc
andb
mov
xchg
xchg
mov
sbb
lock
loopne
out
sub
scas
mov
test
jbe
cs
aad
xchg
nop
adc
push
dec
ret
out
pop
inc
mov
fldcw
xchg
mov
jnp
nop
lea
shrl
cmpsb
xorl
and
push
cmp
cmp
pop
or
inc
std
xchg
inc
sbb
aas
imul
cmp
lcall
cmp
push
xchg
stc
not
scas
mov
cwtl
xchg
jecxz
mov
add
adcl
sbbl
mov
insb
je
xor
fwait
mov
sbb
out
rorl
xor
frstor
cmpsl
mov
scas
shl
dec
xor
imull
push
mov
negb
adc
xchg
pop
ror
sub
aam
in
ds
push
outsb
icebp
push
out
fucom
jnp
clc
mov
inc
xchg
adc
or
pusha
xchg
push
popa
sub
subb
jg
add
xchg
or
adc
jnp
dec
add
cmp
lcall
xchg
in
mov
arpl
sbb
icebp
adc
cs
pop
movsl
stc
mov
lret
push
xchg
xor
add
jmp
pop
xor
pop
lods
or
dec
test
in
mov
stos
cwtl
mov
mov
sub
clc
js
inc
gs
mov
mov
push
push
orl
push
dec
xchg
sub
jne
stos
insb
mov
push
inc
out
out
jbe
bound
mov
mov
fildl
sub
cmp
addr16
adc
scas
mov
push
pusha
mov
mov
outsb
jle
xor
mov
fildll
pusha
xor
and
mov
mov
popf
int3
sbb
mov
adcb
and
sbb
insb
pop
jg
jnp
repnz
cmp
adc
or
jb
popf
ret
aas
pop
inc
or
inc
mov
daa
pushf
inc
std
xchg
jecxz
rcll
pop
sub
inc
data16
fidivrl
sbb
movsb
lret
inc
sbb
rcl
imul
movsb
lds
mov
and
sar
bound
or
or
hlt
push
adc
arpl
xor
lcall
icebp
xchg
fbstp
shlb
ret
out
int3
push
daa
sbb
sbb
push
xor
lock
dec
and
xor
movsl
movsb
inc
jmp
push
xor
cmpsb
gs
push
add
daa
mov
jg
aaa
and
jl
or
pop
ds
icebp
cmp
mov
jne
dec
jo
xor
dec
ja
mov
lcall
dec
dec
js
xor
pop
xor
cmp
ss
sub
dec
cmpl
mov
outsb
mov
or
xchg
mov
nop
subb
xor
movsl
add
jo
xor
xchg
push
sahf
xchg
int
sub
pop
es
lcall
dec
fdivrl
lret
pop
add
test
mov
adc
mov
add
mov
xor
and
aam
cmp
jl
negl
mov
sbb
ss
into
or
xor
add
loop
push
cmp
lret
mov
adc
xor
cmpsb
adc
mov
es
cli
or
inc
xor
loopne
or
pop
jb
mov
test
js
ds
adc
lods
imul
dec
inc
add
xchg
pop
outsb
add
incl
xlat
pop
insb
inc
sub
cltd
and
adc
test
mov
adcb
pop
jl
nop
jmp
movsb
dec
and
inc
push
aam
fldenv
adc
ret
repz
lea
jle
decb
fsubr
and
and
scas
outsl
adc
jecxz
inc
daa
mov
sbb
dec
sub
sti
pop
inc
xor
into
jb
sub
dec
inc
imul
std
ss
jecxz
sub
std
insb
jno
cwtl
dec
insl
mov
int
repz
xor
pop
loope
mov
dec
dec
mov
into
pusha
lock
cmp
sti
adc
mov
mov
cwtl
rcr
pop
sub
daa
outsb
mov
dec
push
sub
jbe
jbe
xor
and
mov
mov
std
fimull
mov
out
aam
sahf
shlb
incb
aam
dec
dec
ret
fisttps
push
fisttpll
push
leave
clc
in
les
dec
gs
ljmp
imul
daa
int
dec
dec
sub
jmp
ret
add
pop
cltd
iret
pop
jp
movsl
clc
cld
mov
ja
xchg
pusha
test
xchg
add
in
xor
test
fstpl
lock
mov
lret
outsb
add
sbb
hlt
call
mov
xorl
xor
loope
mov
or
das
pop
frstor
dec
ja
mov
dec
stos
adc
inc
in
push
dec
or
nop
mov
dec
jp
bnd
es
mov
out
xor
int
mov
es
pop
xchg
in
lock
xchg
mov
out
mov
popa
or
addr16
sbb
mov
mov
mov
mov
bound
mov
repz
and
pusha
test
mov
xor
test
sbb
cmpsl
xchg
inc
push
addl
clc
lds
sbb
sahf
push
mov
mov
and
arpl
jnp
sti
push
scas
fisubrs
push
sbbl
ret
push
pop
jge
adc
enter
incb
or
lcall
fidivl
daa
adc
fwait
mov
imul
rol
cli
data16
mov
mov
xchg
leave
andb
mov
out
in
cmp
and
sbb
into
or
gs
add
xor
int3
aas
les
fimull
push
adc
xor
cmp
les
lds
cmp
movsb
rol
test
gs
cmpsb
call
mov
enter
daa
mov
add
jno
cltd
pop
jl
jmp
xor
sbb
enter
adc
dec
out
cmc
ja
push
or
test
push
sbb
cmpsl
pop
jae
or
loopne
sbb
cli
aaa
pop
outsl
xor
push
leave
and
xorl
mov
cmp
mov
repz
mov
cmpb
sbb
popa
add
push
jge
adc
push
mov
jnp
sub
jecxz
movsl
inc
cmp
mov
inc
fsubl
notb
test
sub
andb
mov
sub
mov
xchg
pop
mov
and
pop
ss
int3
cmp
mov
or
lret
cltd
sarl
mov
sbb
hlt
sbb
stos
fcmovne
jmp
stos
cmc
add
or
repz
cmp
dec
inc
stc
cmp
pop
fs
lods
adc
or
mov
hlt
out
insb
ret
cmp
xor
int3
sub
icebp
jl
push
push
inc
mov
mov
mov
clc
adc
fisttps
adc
imul
sbb
add
cmp
xor
pop
orb
mov
out
jg
jle
dec
mov
aad
aad
nop
sti
jle
sbbl
cwtl
mov
repz
mov
call
movsb
lods
pop
mov
in
adc
jb
jmp
adc
sub
or
pop
inc
dec
mov
aas
test
mov
dec
mov
aas
adc
and
cmp
pop
jns
std
adc
cwtl
or
testl
xor
add
dec
mov
xchg
push
lock
iret
mov
xchg
not
daa
andb
int3
ret
inc
add
cmpsl
mov
pop
cmp
stc
and
cld
dec
addr16
stos
mov
lods
dec
leave
and
cltd
pop
or
add
out
jnp
cmc
jo
aam
jne
outsb
repz
jge
fnsave
adc
clc
sub
into
xchg
mov
ljmp
lods
cmp
dec
mov
dec
jg
xchg
xchg
cmp
push
pop
test
cmp
out
add
fadds
mov
push
mov
pop
dec
xchg
sbb
test
mov
hlt
sbb
inc
lods
pop
sti
es
stos
test
push
add
xor
cmp
icebp
or
xchg
mov
dec
ret
or
cwtl
jmp
cltd
dec
popf
mov
adc
mulb
cmp
aas
jne
add
mov
in
sub
push
mov
jns
testl
out
fidivs
or
or
sbb
inc
jp
jo
mov
pop
or
cmp
jle
pop
cmpsb
in
pop
xor
loope
fucomip
and
mov
adc
rolb
std
bound
sbb
mov
mov
inc
and
shrl
jnp
leave
mov
inc
ret
in
push
enter
xor
sub
xor
cmp
in
inc
and
mov
sbb
jae
es
inc
add
push
fs
loop
push
sbb
sbb
push
fcomp
mov
test
pop
outsl
aam
js
inc
repnz
leave
stc
or
arpl
pop
jge
pop
rcrl
rcll
mov
pop
add
or
and
jl
xor
xchg
aas
das
scas
fnstsw
pop
stos
dec
cmp
mov
adcb
mov
and
enter
daa
mov
in
pop
jno
xor
ret
enter
xchg
mull
out
pop
lahf
adc
dec
push
fistpl
sbb
into
inc
ss
int
and
pop
js
push
and
scas
sub
push
mov
sub
in
cmp
data16
adc
dec
fstps
adcb
sbb
ss
cs
sub
push
movsb
jo
int
mov
sub
add
pop
and
scas
lcall
inc
negb
mov
cld
js
push
push
inc
add
loope
shlb
mov
sub
ja
test
xchg
ss
dec
sbb
jne
add
lret
mov
iret
rorl
add
loope
into
into
xchg
repnz
lret
xor
xchg
outsl
sbb
sub
pushf
jno
stc
lock
jo
pop
ja
adc
or
mov
mov
ss
cli
outsl
push
sub
cmp
xlat
je
adc
out
xor
loopne
arpl
jl
cmp
lock
adc
les
jp
inc
xchg
fiadds
sbb
jne
xchg
xlat
popf
sbb
sub
adc
ljmp
repz
xchg
push
nop
mov
cwtl
cld
inc
ja
leave
fxch
add
fadds
add
movb
call
and
sbb
ficoml
incb
ja
fwait
xchg
imul
test
pop
repz
inc
xchg
push
inc
inc
imul
xchg
insl
iret
dec
xor
fwait
sbb
xor
mov
cwtl
les
mov
xchg
lock
mov
dec
and
add
mov
xor
pushf
mov
imull
mov
pop
mov
ds
and
lea
es
shlb
dec
aas
sti
cmpsl
mov
gs
cld
js
jbe
inc
xlat
into
mov
or
movsb
pop
and
pop
rolb
sub
ds
aam
add
lret
mov
dec
clc
arpl
xchg
int
and
mov
ret
sub
hlt
test
stos
lret
fstl
push
sets
ret
clc
int
mov
fadd
xchg
inc
xor
xchg
call
shll
lcall
xchg
adc
push
jl
incb
push
psllq
xor
aam
or
or
outsl
enter
sbb
test
insl
pop
push
inc
ja
pop
dec
dec
nop
pop
cmp
int
or
xor
fwait
push
or
jnp
fucomip
mov
out
mov
int3
or
in
stc
setae
adc
out
lea
or
inc
mov
sub
lea
and
mov
fadds
in
adcb
sub
or
jmp
xlat
xor
add
das
push
rolb
inc
jg
mov
cmp
push
and
pop
insb
mov
pop
sub
movhps
adc
ret
cmp
ret
mov
jmp
mov
jae
or
inc
push
repnz
nop
mov
ficoml
hlt
mov
icebp
adc
pushf
dec
fiadds
push
shlb
mov
pop
push
xchg
jo
mov
arpl
inc
cli
jge
pop
negl
and
adc
or
dec
incb
and
sub
adc
stos
inc
push
lods
xor
repnz
adc
mov
cmp
movsb
out
cmp
xchg
or
loope
inc
andb
mov
mov
push
xchg
dec
stc
sbb
popa
push
cmc
movsl
mov
and
loop
push
scas
adc
test
ljmp
nop
mov
imul
js
inc
xlat
pop
in
cmpsb
test
pop
cmp
jnp
fsubrs
out
adc
outsb
test
and
or
movsl
push
or
flds
add
push
mov
mov
mov
int
lret
dec
lock
pop
mov
int
push
pop
shll
sub
stc
jne
jg
outsl
and
out
pop
mov
jmp
pop
and
xchg
pop
xor
cmp
xor
cs
shll
mov
cmp
sbb
jnp
cmc
xchg
dec
imul
sti
aam
loop
iret
pop
stc
cmpsl
adc
ljmp
data16
icebp
add
cmpsb
mov
out
test
xor
nop
arpl
xor
mov
gs
icebp
loopne
cmp
fwait
cmp
adc
fwait
aaa
imul
pop
and
aad
mov
mov
mov
fdivrl
mov
mov
push
cli
push
sti
lods
lods
ds
imul
jl
cmpsl
dec
aas
inc
mov
sbb
sbb
repz
adc
xchg
push
lea
stos
mov
mov
push
imul
inc
xchg
ljmp
inc
sbb
test
out
mov
test
lods
xlat
bnd
dec
or
inc
mov
mul
adc
jg
pop
mov
and
in
mov
dec
or
fucomi
cltd
in
mov
xchg
bound
lahf
test
das
xchg
or
daa
mov
sub
sahf
xchg
es
dec
insl
incb
dec
inc
cmpsb
jne
mov
pusha
stc
icebp
cmpsl
movsb
inc
cld
mov
imul
iret
js
pop
inc
pop
push
rclb
out
sub
mov
aam
pop
out
ret
mov
dec
fnstsw
or
xchg
or
cmp
sub
mov
lods
adc
xchg
mov
push
or
xchg
and
and
not
maskmovq
imull
add
mov
cmp
test
push
dec
jecxz
insl
test
jg
xchg
dec
lret
sbb
jnp
rorl
movsb
rep
xchg
push
pop
push
jb
fwait
cmp
pop
ljmp
shrb
xor
xor
std
mov
xchg
mov
push
sub
ja
or
dec
xorl
inc
mov
jo
data16
and
mov
out
movsb
mov
and
out
push
frstor
jno
jns
les
in
sti
sub
jo
dec
sub
and
dec
sbb
and
mov
out
pop
mov
insb
cmp
sbb
in
inc
cmpsl
pusha
push
mov
sub
sbb
lods
mov
jmp
mov
out
push
adcl
int
stos
push
jl
js
test
sbb
insb
or
aad
add
dec
int3
push
push
push
adc
or
out
jp
ret
out
and
pop
inc
jmp
ss
inc
or
push
bound
lret
xchg
add
sbb
dec
xor
fsubp
out
pop
ret
push
xchg
sbb
push
repnz
daa
push
leave
out
pop
hlt
addl
jbe
subl
xor
pop
xchg
aaa
int3
fsubr
or
clc
fmulp
add
addr16
cmpl
xor
dec
andb
sbbb
and
out
cmp
cwtl
movsb
jb
pop
push
insl
adc
jno
fucomp
icebp
sub
in
mov
loopne
jno
fildl
dec
push
add
movsl
xchg
out
iret
and
sbb
mov
push
mov
repz
push
cmp
pop
xchg
rolb
pop
sub
cmp
data16
loope
xchg
hlt
sub
int3
cmp
xor
cmp
add
es
mov
sbb
pop
push
add
add
push
stos
sbb
push
enter
jae
pop
and
push
push
mov
push
fsubl
dec
repnz
xlat
sahf
lock
sahf
cmp
sarb
stos
push
mov
and
mov
pop
mov
divl
je
xor
jmp
push
negl
and
movsb
test
sbb
push
js
pop
daa
mov
outsl
fidivrl
loop
pusha
xchg
stc
pop
push
mov
adc
into
or
mov
push
or
aad
add
imul
stc
or
xchg
gs
add
and
mov
xor
adc
jns
adc
mov
lcall
xor
jmp
xor
sbb
subl
lods
mov
ror
sti
pop
gs
aad
cmp
push
mov
dec
sahf
sbb
jge
cmp
sbb
adc
lea
inc
jno
enter
and
pop
movsb
push
enter
dec
pushf
icebp
dec
push
jmp
sbb
pop
cmp
mov
mov
aas
xchg
lods
dec
and
cwtl
jecxz
xor
std
or
icebp
cwtl
cmp
stos
ss
mov
add
dec
imul
add
mov
cmp
subl
inc
push
mov
lods
dec
xor
cmp
rcll
push
xor
jne
inc
mov
lods
mov
jle
lods
cld
into
xor
mov
sbb
xor
pop
bound
sub
or
ret
sbb
sub
movsl
mov
jae
dec
pop
mov
lahf
adcb
jnp
jmp
out
jno
mov
push
out
int3
push
orps
es
add
cltd
stos
and
test
xor
mov
push
pop
xchg
cmp
test
int
xchg
mov
mov
adc
loope
inc
pop
cld
and
push
ret
add
xchg
decl
ljmp
mov
and
adc
ljmp
sti
aas
add
sti
inc
inc
dec
aam
or
and
mov
dec
push
mov
ret
pop
xchg
dec
mov
or
idivb
and
cmp
xchg
enter
repz
sub
pop
outsl
insl
addr16
jmp
mov
out
aas
mov
fistpl
jle
mov
xchg
pusha
icebp
cld
ljmp
or
xchg
insl
addr16
fbld
push
inc
pop
repnz
fistpll
mov
mov
repz
test
push
insb
jbe
jnp,pn
lret
push
sbb
popf
and
lds
iret
dec
rorl
es
je
hlt
clc
test
cmp
or
xchg
inc
loope
neg
std
xor
sti
sbb
andl
sub
mov
add
leave
pop
xlat
sbb
into
mov
arpl
jle
jbe
cmp
jge
mov
sbb
xor
or
xlat
inc
int3
jmp
jb
mov
xor
lahf
lea
xor
test
or
popa
cmp
cmp
bound
mov
mov
enter
daa
mov
call
out
jl
mov
idivb
cmpsl
test
movsl
pushf
lock
and
pop
jmp
test
addb
push
fistps
pop
mov
imul
loope
aaa
out
sub
jge
cmp
jg
outsb
mov
pop
adc
fstpt
popl
call
mov
push
divb
dec
ficoml
push
lods
popf
ja
jge
mov
pop
mov
xchg
ret
push
or
cs
sub
in
sahf
xchg
into
cmp
in
mov
jg
ljmp
fsubrl
imul
mov
pop
cmp
cmpsb
mov
mov
rcll
sbb
push
dec
into
ja
pop
cmc
pop
shll
rcrl
mov
es
stc
adc
jge
adc
ss
xor
lods
mov
mov
cmp
or
xor
pop
cmp
jle
or
fsub
decb
inc
gs
sbb
push
imul
adc
sub
add
bound
sbb
es
xlat
pop
add
movsl
xor
sub
sti
or
or
sbb
push
aad
and
nop
xor
add
gs
inc
mov
out
je
aas
stc
test
repz
sub
lea
call
mov
inc
sub
add
add
jmp
cld
xor
in
jl
daa
sbb
inc
mov
xor
sub
pop
dec
lcall
jecxz
sbb
or
scas
pop
sub
push
mov
sbb
loope
add
dec
ds
mov
xchg
pop
lock
and
lds
arpl
or
adc
arpl
push
es
push
insl
int3
lret
cmp
andl
push
mov
cld
stc
movl
and
add
fldl
mov
adcb
stos
sub
outsl
out
lret
faddp
xchg
mov
adc
adc
popa
mov
xor
scas
mov
xchg
mov
in
push
leave
mov
clc
xchg
add
fwait
jle
loop
adc
fcoml
fidivs
scas
sub
mov
test
xchg
push
and
fs
dec
sarl
insb
mov
stos
fs
push
gs
add
mov
sub
or
mov
mov
jns
rcrb
mov
in
dec
imul
or
stos
fwait
cmc
test
push
jne
push
cs
sub
in
lahf
cld
dec
jns
and
in
cld
loope
pop
movsb
cs
push
dec
sub
sbb
addr16
jl
and
mov
adc
mov
dec
dec
xlat
jle
adc
xchg
pusha
mov
push
jmp
cmp
lret
sub
adc
mov
gs
cli
inc
imul
icebp
xchg
inc
jnp
test
scas
int
inc
push
in
xor
iret
lods
or
pop
nop
lods
jo
ljmp
les
fs
or
add
or
jae
fidivl
popa
xchg
sbb
xchg
imul
fisubrs
xchg
or
sbb
hlt
xchg
div
push
jo
aad
pop
hlt
sbb
arpl
or
jbe
popa
cld
jge
mov
insl
aaa
dec
or
xchg
arpl
out
ror
mov
and
adc
xor
add
subb
and
cmp
cld
mov
or
mov
enter
daa
mov
movsl
mov
jl
mov
mov
lret
movsl
mov
mov
lahf
nop
lahf
adc
daa
shlb
dec
mov
inc
jb
test
fnstenv
aaa
js
test
push
jle
loope
xor
sbb
fnstsw
outsl
mov
outsb
push
xor
adc
mov
jmp
sbb
out
sbb
rolb
rclb
popf
addl
in
sub
shlb
pop
and
lcall
sub
jl
lret
int
sahf
cmpsl
xor
cs
jg
jo,pn
leave
ljmp
int3
shr
and
inc
ss
lods
cmpb
std
mov
sbb
fmulp
loop
pop
shrl
jb
mov
push
sbb
cmc
out
jecxz
mov
int3
mov
stc
int3
pop
lret
rorl
adc
and
mov
lods
cltd
jno
mov
xchg
cli
cmp
inc
xor
jb
cmp
mov
or
pop
inc
sbb
pop
fistps
cmp
imul
ljmp
ljmp
cmp
sub
cltd
lods
sahf
sub
mov
fisubrs
sti
mov
ljmp
or
mov
inc
ret
enter
inc
test
jo
jo
nop
jl
popa
call
pop
cltd
push
pop
or
mov
pushf
inc
pop
lock
mov
xchg
inc
scas
in
inc
aad
mov
les
adc
adc
popf
je
push
inc
jecxz
dec
push
imulb
rcr
cwtl
mov
call
mov
pop
xorl
mov
mov
dec
adc
das
xor
push
mov
sbb
jg
mov
inc
cmp
insl
mov
sbb
cmpsl
mov
lock
sub
push
cld
and
pop
lret
std
xor
and
mov
mov
mov
aam
push
mov
pop
movsl
clc
dec
ror
xchg
leave
insb
mov
popa
int3
dec
test
push
cmc
jo
inc
pop
jb
aaa
subb
mov
unpcklps
addr16
push
faddl
fdivs
mov
lcall
and
xchg
jb
pop
inc
mov
dec
jle
push
xchg
out
push
shlb
add
mov
icebp
scas
xor
cmc
or
cld
cmp
mov
fwait
mov
ljmp
xor
pop
cmpsl
leave
inc
ja
test
pusha
jbe
and
sbb
jne
cmp
mov
or
bound
nop
mov
in
sti
fists
stc
rorl
sub
adc
test
jp
mov
mov
mov
iretw
in
in
or
daa
push
xchg
jmp
add
out
std
adcb
inc
rcrl
jle
in
push
cmp
stos
add
mov
sbb
mov
scas
xor
adc
jnp
jmp
ret
dec
pop
movl
cli
jae
dec
mov
adc
or
jl
push
inc
fistps
xor
popf
pusha
dec
imul
xchg
sub
icebp
pcmpeqw
loop
int
xchg
fwait
repnz
jnp
leave
dec
ljmp
neg
push
jge
mov
pop
aaa
or
or
push
add
ror
sarl
push
gs
divb
pop
ja
scas
pop
and
and
test
jbe
push
movsb
adc
inc
push
pop
pop
xchg
cmpsb
test
enter
daa
mov
jne
inc
adc
jnp
mov
mov
shll
unpcklps
cli
or
push
push
xor
add
pushf
add
pop
pop
push
loop
in
ret
push
pop
jmp
icebp
jle
xlat
jmp
pusha
cmp
popa
in
imul
rclb
cs
icebp
adcb
jbe
add
sahf
xor
mov
cli
int
sbb
sub
jbe
pop
lahf
xlat
cmp
push
mov
js
sub
xor
repz
adc
mov
popf
lock
xchg
test
xchg
cmp
sbb
jne
fadds
lret
and
ret
mov
je
cmp
or
outsl
ja
xor
stc
adcl
fs
jp
adc
pop
mov
xchg
xchg
xchg
in
cli
outsb
pop
inc
xor
lret
add
or
ss
xchg
sub
loopne
push
sbbl
and
adc
add
jne
xchg
lods
inc
sbb
jno
data16
shrb
mov
xchg
cli
in
add
loop,pn
xor
nop
call
add
inc
jl
lock
repz
mov
mov
cmp
sbb
pop
mov
adc
repnz
stc
jmp
or
pop
and
roll
int
arpl
jb
and
dec
mov
mov
imul
mov
test
call
cmp
dec
mov
sahf
sti
mov
push
lock
shrb
mov
movsb
mov
pop
mov
es
in
dec
xor
jmp
mov
and
fistl
icebp
add
cld
dec
jo
lret
insb
xor
and
cmp
shlb
stos
sub
adc
push
rcl
fstpl
xor
das
xchg
or
ljmp
xchg
lods
mov
push
cmp
lcall
push
jg
push
xchg
xchg
add
imul
mov
add
xchg
xor
js
and
fisubrs
sbb
inc
cmc
shl
push
inc
pop
std
mov
push
stos
mov
add
xlat
roll
leave
xchg
or
xchg
shll
fidivs
mov
popf
mov
cmp
lea
mov
adc
lds
call
inc
mov
sbbl
jns
jns
xchg
mov
or
jl
das
sub
adc
or
jp
scas
mov
mov
sub
jle
stos
jecxz
iret
inc
je
ret
fbld
inc
stos
jmp
into
sub
mov
popf
add
pop
mov
js
iret
stos
jne
pop
and
pop
jge
mov
push
jnp
scas
sub
jb
inc
adc
jmp
push
outsl
ret
add
add
inc
adc
test
adc
add
push
pop
push
vmovshdup
push
xchg
pop
pop
enter
fisubrl
data16
fidivs
mov
sar
aas
mov
cli
push
cmp
ret
imul
jbe
adc
shrl
sbb
arpl
or
add
loope
lods
mov
push
dec
xor
xor
mov
rolb
cmp
idiv
push
test
sahf
jg
lea
loope
mov
jl
jne
inc
jno
jp
in
sbb
fwait
test
adc
movsl
mov
test
mov
push
int
test
loope
and
sbb
ret
cs
add
xchg
dec
pop
sub
lods
push
sbb
loope
clc
imul
notl
int3
push
mov
insb
pop
out
mov
push
jo
in
sbb
add
sarb
push
mov
mov
adc
mov
cmp
push
jmp
cmp
call
sub
jg
sahf
jl
int
jp
daa
andb
jp
add
mov
insb
mov
cld
sbb
sub
adcb
fcom
jb
notl
loopne
rcrl
mov
inc
out
into
and
mov
xor
dec
outsl
push
xor
loop
scas
xor
cmp
ss
les
mov
lods
addr16
sbb
out
es
mov
dec
mov
or
sub
mov
icebp
add
mov
loop
out
fcoms
push
add
fs
xchg
jo
lahf
sbb
xlat
sar
xlat
pop
mov
sub
sbb
insb
pop
ret
sti
sbb
adc
inc
add
nop
ret
dec
sbb
inc
jmp
inc
std
les
inc
enter
and
xchg
xor
lods
add
call
sbb
cmp
mov
popf
mov
jmp
xor
pop
lds
dec
inc
or
fnstcw
add
ss
adc
xchg
xchg
jecxz
jns
divb
add
std
movsb
mov
cmpsl
test
sbb
dec
mov
jb
mov
ret
fwait
mov
in
stc
lock
das
out
insl
sub
mov
and
push
or
es
adc
add
fwait
cmpsl
mov
cli
mov
fcmovu
imul
fcomi
clc
mov
xor
movsb
repnz
fidivrs
push
shlb
fildll
sub
adc
ret
push
and
push
ror
fldl
cmp
jbe
xchg
inc
push
cwtl
popa
cli
insl
data16
daa
push
scas
mov
std
xchg
inc
xchg
xchg
adc
pop
lock
psrld
push
lahf
jg
xchg
inc
mov
insl
fwait
xchg
loope
test
lret
pop
inc
adc
jge
mov
pop
test
ljmp
dec
lock
ds
pop
add
shl
dec
mov
xor
lret
std
int3
out
mov
and
xchg
mov
mov
mov
ss
inc
and
movsl
xchg
mov
std
out
xchg
xchg
mov
jne
or
mov
or
pop
push
cmpl
xor
data16
xchg
add
scas
out
cs
or
addr16
pop
xchg
mov
push
imul
in
in
cli
cmp
stos
ffreep
mov
xchg
lret
insl
add
rcll
push
sbbl
and
push
in
sub
mov
mov
test
loopne
and
mov
scas
test
push
mov
popf
ror
leave
add
xor
lds
inc
sbb
insl
or
jb
add
fcmove
test
xchg
mov
cmp
imul
ffree
pushl
stos
rcrb
push
mov
dec
leave
cmp
mov
adc
xchg
xor
js
xchg
sbb
orl
fldl
add
xor
and
sub
xor
adc
imulb
pop
loop
cmp
loopne
movsb
sub
push
clc
daa
push
cmpsb
add
int
je
ror
push
daa
mov
sbb
test
enter
loopne
adc
jbe
xor
popa
movsl
mov
or
lahf
in
sbbb
ja
push
lods
xor
inc
pop
std
dec
and
in
push
add
js
cld
xor
addr16
push
hlt
or
add
mov
jl
cmp
push
test
inc
mov
adcb
insl
sbb
adc
adcl
mov
push
mov
pop
je
xor
jnp
push
cltd
pop
push
imul
loope
pop
jmp
les
sbb
xlat
mov
popf
testb
cwtl
shlb
cmp
cmp
xchg
mov
lret
gs
fwait
mov
sbb
lcall
cmc
cmp
pop
xor
xchg
and
loop
inc
sti
stc
icebp
out
fs
adcl
inc
out
sbb
mov
sbb
xchg
sub
cli
aam
divb
pushf
jmp
cmp
dec
mov
fistpl
loopne
fsubrs
pop
push
pop
lods
adc
divb
adc
daa
lret
add
cltd
xchg
xor
sbb
adc
xlat
push
les
sub
data16
in
xlat
push
mov
ja
cs
push
aad
scas
add
jns
mov
cld
andb
sbb
fadd
cltd
xor
lea
out
call
pushf
lock
pop
and
outsb
adc
pushf
dec
mov
push
pop
push
lahf
jge
es
pop
aas
mov
cmp
dec
jbe
pop
je
push
je
pushf
jne
divb
loope
dec
xchg
dec
lret
push
inc
mov
jecxz
jbe
jnp
lea
fildl
fdivrl
or
push
nop
das
int
push
mov
aas
jmp
ljmp
adc
insl
push
xor
cmpsl
mov
popa
mov
mov
or
movsl
push
pop
mov
cmp
in
mov
std
or
sub
fs
out
xchg
push
test
popa
clc
add
in
xchg
ljmp
lea
or
out
pusha
mov
push
xor
inc
mov
and
loope
mov
fldcw
jno
addb
inc
push
xchg
lcall
xchg
rcrl
push
cld
pop
stos
and
mov
icebp
push
push
add
or
pop
fidivl
insb
mov
xor
mov
icebp
mov
cmc
xor
jo
xchg
ja
sub
outsl
sub
fcoml
cmc
sub
mov
sub
and
pop
or
out
movsb
add
inc
jns
mov
xchg
push
jno
out
or
ret
or
sti
add
jno
jp
mov
dec
mov
push
xchg
fdivrs
adc
fstl
lret
pusha
clc
gs
in
cmp
sahf
enter
les
cmpsb
mov
adc
out
mov
notb
es
pop
pop
popa
and
push
ja
call
scas
pop
mov
push
add
dec
iret
sub
ret
pop
pop
insb
ljmp
inc
lds
inc
sbb
flds
inc
pop
cmp
push
xchg
or
fstps
in
imul
sbb
lds
or
repnz
push
in
hlt
inc
test
arpl
sarl
mov
aas
fists
or
and
inc
dec
mov
pop
popf
and
jno
pushl
and
mov
fimuls
movsb
mov
mov
cmpsb
sbbl
enter
daa
mov
inc
cmp
popf
or
sub
jl
jmp
dec
add
movsl
mov
cmpsb
push
lahf
or
jmp
jae
lods
test
ja
sub
and
pop
jl
pop
js
divb
push
test
loope
adcl
enter
sub
outsb
xchg
inc
lahf
adc
and
xor
subb
jle
pop
push
xchg
add
xor
xor
stos
push
mov
insb
scas
sub
in
lcall
push
fsubrl
sbb
sub
inc
negl
mov
pop
sbbb
xchg
mov
in
ljmp
jbe
and
xchg
push
dec
into
cmp
dec
cmp
notl
js
roll
adc
leave
sub
out
dec
cmc
add
xor
ds
adc
loop
push
cld
stc
test
or
adc
mov
les
js
xor
out
push
jne
pop
insl
pop
xor
fistpll
shrb
incb
gs
inc
loopne
cmp
adc
sti
mov
add
cmovl
out
adc
dec
jl
xlat
xchg
jle
sub
xchg
inc
pop
and
cs
int3
aad
lea
jns
sub
or
flds
dec
pop
rep
jg
pushf
push
and
stos
stos
xor
sbb
pop
push
dec
pushf
repz
inc
jmp
fadds
inc
lret
inc
inc
faddl
jb
xchg
jl
in
xchg
jge
jmp
pavgw
neg
std
repnz
pushf
lcall
dec
sub
or
fisttpll
xor
aad
call
or
sbb
shrb
lods
jecxz
mov
div
fwait
and
sub
es
add
dec
cmp
and
dec
mov
mov
cld
shlb
lret
out
and
or
pop
pop
sbb
jo
fsubrl
add
pop
or
ret
jne
fstl
sbb
into
clc
cmp
xchg
vaddpd
push
outsl
xor
lods
std
cli
and
add
or
adc
seto
mov
xor
in
cltd
cmc
or
adc
mov
adc
xchg
mov
test
shr
pop
jbe
sbb
sbbb
inc
xchg
jnp
bswap
jp
xchg
inc
inc
add
sub
add
pop
xor
xor
sub
aas
mov
cmpsl
inc
movsl
mov
sub
lea
dec
mov
outsl
push
inc
rorl
or
iret
es
loopne
ret
dec
pop
stos
icebp
jne
insl
lods
mov
pop
dec
out
add
bound
sarb
rcrl
mov
pop
std
sub
add
in
adc
aaa
jp
int
mov
loope
mov
jne
enter
xor
in
lcall
xchg
jno
and
xchg
das
loop
cmpl
lds
fadds
or
xor
insl
and
add
insb
clc
mov
jnp
js
scas
mov
mov
or
xchg
pop
pop
mov
and
jae
lret
fadds
xor
push
fstpt
fisubrl
fs
sbb
bswap
imul
mov
lds
jne
mov
repz
sub
es
nop
stos
sbb
iret
mov
fdivr
xor
and
cli
jp
aaa
add
add
flds
push
insl
call
push
icebp
push
xor
lret
scas
fwait
add
orl
cmp
jo
aas
sbb
inc
dec
cmpsb
push
enter
les
pop
cmp
daa
mov
ljmp
or
sbb
jns,pt
jge
xor
and
in
lahf
sub
fcoml
inc
loopne
pop
push
icebp
push
inc
jle
inc
cmp
mov
jge
flds
push
fucom
xor
imul
or
ficoml
outsb
cmc
es
mov
sub
cmpb
add
pop
rdpmc
sub
push
mov
movsl
sub
cmp
pop
fwait
xor
dec
push
pop
or
cli
push
sub
enter
cmp
mov
ljmp
outsb
adc
mov
mov
and
push
ss
fnstcw
fmuls
jns
not
popa
pushf
lret
test
push
scas
and
dec
sub
sbb
inc
xor
leave
ljmp
cmp
push
stc
pop
pop
mov
inc
fs
adc
mov
inc
lea
lods
sbb
adc
out
test
fcmovbe
xor
sub
xchg
sub
or
fbstp
gs
lods
xchg
pop
xchg
mov
imul
lret
and
sbb
mov
mov
sub
lret
lods
mov
or
outsb
into
and
nop
push
and
aaa
insb
pop
inc
and
fnstcw
iret
or
jnp
mov
loope
popf
call
lcall
adc
repz
jmp
push
pop
pop
scas
mov
xchg
roll
jb
daa
and
rcll
ss
adc
mov
popf
int3
std
cltd
je
cwtl
push
cmpb
sub
mov
sbb
xor
pop
outsb
mov
jmp
jbe
ja
out
mov
mov
test
cmp
imul
cmpsl
mov
movsb
mov
pop
dec
insb
cld
sti
mov
lret
sub
dec
mov
dec
jecxz
mov
cmp
sub
push
pop
ret
add
xchg
jae
fnsave
inc
arpl
les
lods
push
into
fucomi
es
lock
pop
cs
push
jmp
fisttpl
out
add
add
aad
sub
sub
dec
data16
sbb
dec
sbb
mov
sbb
fcompl
test
xor
push
aaa
pop
loopne
rcll
sti
add
sbb
cmpsb
or
or
dec
xor
das
sti
mov
ljmp
pop
out
sbb
dec
sbb
std
inc
push
in
mov
sbb
scas
jne
xor
mov
push
sbb
bound
popa
jns
lcall
icebp
out
shl
sbb
rorb
cld
or
dec
dec
jp
xchg
fnsave
cmpsb
gs
jle
dec
repnz
jge
pusha
cs
pop
fbld
ja
xchg
inc
sbb
push
sbb
bound
fwait
jp
popf
mov
cmp
je
out
stos
inc
js
and
cmp
jnp
out
mov
mov
adc
sbb
ret
lea
pusha
cwtl
inc
inc
push
addr16
adc
inc
and
push
pop
cmp
loop
lret
xchg
mov
or
imul
clc
fdivrp
ret
sbb
xchg
pop
inc
imul
loop
inc
ret
lahf
iret
jnp
dec
jbe
fnsave
sbb
repnz
or
and
add
aad
pop
and
pop
sti
mov
sahf
xor
and
stos
and
je
cmp
cli
movsb
lret
push
in
adc
mov
in
sub
enter
daa
mov
idivl
inc
rorb
jl
pop
jg
loopne
mov
pushf
jecxz
movsl
int
push
and
sbb
dec
xchg
sbb
inc
push
or
cmp
imul
lret
js
cmpsl
aas
pop
and
cmpsl
push
mov
mov
sahf
xchg
mov
das
outsb
pop
add
adc
fcoms
adc
enter
movsb
loopne
xor
rcrl
dec
ret
jns
mov
push
sub
outsb
mov
fdivrl
push
sahf
or
es
dec
jg
pop
movsl
mov
and
mov
inc
push
ss
lret
cmp
ret
dec
and
lret
and
mov
and
dec
cmc
nop
std
stos
xor
enter
daa
mov
stc
push
test
fs
jnp
sbb
cmp
or
lods
add
cmp
xchg
jbe
cli
insl
sti
mov
and
fwait
or
inc
incb
gs
cmc
pop
loopne
xor
adc
rsm
imul
push
xchg
jl
pop
sbb
ret
jbe
xlat
adc
sub
and
in
sbb
mov
aam
sub
shll
nop
das
adc
dec
xchg
rorb
inc
xor
in
les
out
dec
adc
lea
icebp
call
sbb
jb
cmp
fwait
adc
pushf
dec
pop
clc
jmp
mov
fcomp
inc
inc
ja
mov
jle
jae
jo
jge
jecxz
add
idivb
jmp
cwtl
adc
mov
xor
or
dec
and
fistl
fisubs
lock
das
push
adc
fs
xchg
and
sbb
mov
mov
dec
les
dec
sbb
cmpsl
mov
pusha
mov
bound
cld
adc
mov
push
push
shlb
pop
xchg
out
rolb
xchg
ret
xchg
int
push
int
mov
adc
mov
push
xchg
inc
add
ljmp
pusha
lods
shl
push
mov
mov
jb
mov
push
loope
dec
ljmp
arpl
test
popa
jnp
fmulp
inc
xchg
test
test
or
mov
xor
cltd
xchg
push
pop
push
fisubrl
fisubl
add
pop
pushf
sub
inc
out
xor
adc
fstps
aaa
xor
call
in
mov
inc
int
or
sub
ja
insl
cs
push
mov
add
aad
ds
jnp
push
lcall
or
shr
inc
dec
in
movsb
dec
and
push
in
call
or
sub
idivl
or
add
mov
std
xor
sar
inc
mov
xlat
jle
push
aad
repnz
mov
leave
popa
std
filds
cwtl
xchg
pop
adc
jmp
lds
adcl
push
pop
loope
popf
movl
inc
push
mov
cmc
stos
mov
pop
and
insb
into
cwtl
fidivrs
sub
scas
orb
aad
jg
popf
adc
iret
inc
test
pop
adc
pop
jae
mov
fs
pop
ret
out
fnstcw
ficoml
dec
add
fisubrs
fisubs
xor
mov
cltd
lahf
insb
leave
push
sbbl
test
pop
mov
xor
adc
lods
sbb
jge
andl
sub
out
add
fdivl
inc
sbb
pop
sub
sub
addb
and
lahf
out
movsb
push
test
clc
cmpsb
or
cmp
enter
daa
mov
pop
cmp
jno
cmp
mov
xorl
aam
push
nop
icebp
jbe
imul
mov
or
sbb
inc
pop
das
dec
cs
xor
xchg
enter
scas
pop
arpl
sbb
push
loope
pusha
push
sub
fnstcw
outsb
mov
mov
shlb
pop
lds
push
js
scas
mov
xor
pusha
testb
add
call
pop
cltd
cld
rcrb
lds
inc
sub
and
stos
inc
mov
sbb
imul
ja
mov
bswap
mov
iret
and
shll
iret
dec
sub
jle
xor
or
xchg
add
dec
sbb
mov
xor
sbb
enter
imul
pop
loope
aaa
lods
nop
outsl
mov
xchg
loop
mov
fisubl
int3
adc
or
cld
inc
lods
ljmp
out
in
xor
mov
fisubrl
push
decb
mov
andb
lods
loopne
rolb
lds
imul
push
setbe
inc
and
push
cmp
push
lds
sub
pop
mov
xorl
orl
xor
xor
clc
jl
nop
or
inc
dec
cmc
cmp
sub
loope
push
shll
movsl
js
lea
les
cwtl
repnz
pop
out
out
rclb
sti
sbb
mov
hlt
dec
dec
inc
pop
gs
inc
xchg
std
int
sbb
loope
dec
push
cmp
je
cmp
jecxz
or
popa
std
out
jge
int
cmpsl
mov
adc
mov
incl
cmp
fcmovnb
outsl
mov
mov
push
push
lock
xor
mov
fwait
mov
rcr
sbb
adc
add
movsb
dec
adc
cmpsl
mov
outsb
mov
or
dec
fxch
push
dec
push
mov
pop
daa
insb
mov
jns
insb
rclb
inc
sub
negl
push
nop
jp
fldl
scas
sub
sub
ljmp
cmp
movsb
cld
out
in
out
mov
push
mov
rcrl
insl
mov
cltd
lcall
mov
mov
bound
test
mov
xchg
and
cld
push
xchg
shl
jbe
pop
inc
ja
fcoml
push
jge
fldl
jns
fcos
in
imul
xlat
testl
push
hlt
mov
jo
loop
mov
inc
pop
pop
and
ja
inc
dec
dec
add
rorl
jmp
insl
arpl
add
ja
cmp
shlb
and
inc
jns
aaa
jle
sbb
jle
out
add
pop
xor
adc
jl
mov
inc
popa
mov
ret
jle
dec
or
stc
jae
pusha
mov
pusha
mov
xchg
ljmp
xchg
nop
lea
and
cmp
and
mov
repnz
and
js
cmp
cmpb
jae
in
or
daa
fcoml
js
ror
out
xor
pop
dec
addr16
inc
push
cmpsb
xorl
arpl
call
inc
pop
inc
pop
fimull
loop
data16
sbb
test
imul
add
mov
xor
mov
in
mov
leave
fidivrl
hlt
jno
push
arpl
imul
fisttps
sub
pushl
inc
pusha
orb
andb
cs
pop
pop
arpl
push
lcall
jo
jae
scas
cmp
and
imul
loopne
xchg
push
and
cmpsb
popl
lahf
enter
daa
mov
push
cmp
xchg
jl
jae
dec
mov
arpl
movsl
fistl
lret
lahf
mov
push
mov
imul
mov
gs
icebp
les
js
cmpsl
ja
mov
leave
xchg
js
les
sbb
out
mov
adc
mov
push
sbb
jbe
add
loopne
xor
pushf
iret
int
stos
repz
rcrl
je
mov
aam
iret
sahf
dec
mov
adc
xor
scas
mov
sub
out
and
test
test
adc
add
cmp
test
shl
push
mov
jo
sbb
cs
push
sbb
outsl
nop
mov
sti
stc
test
cmp
xchg
adc
popa
sub
outsl
hlt
add
out
cli
rcrl
xor
xor
adc
cld
decb
dec
orl
jmp
xor
mov
enter
xchg
xchg
add
sbb
cmp
mov
xchg
ds
add
adc
out
nop
jle
xor
inc
aad
ljmp
push
movsl
js
pop
sbb
fldenv
les
repz
insb
or
xchg
hlt
cmpsb
pop
jge
pop
mov
jbe
pushf
lahf
cmpsb
popa
jmp
push
or
subb
lods
xor
aas
mov
or
cwtl
je
xchg
test
arpl
mov
jge
and
mov
sub
subl
sub
lock
mov
lock
das
sub
pop
mov
rorb
or
sub
dec
insl
jmp
sub
cmp
cmpsl
scas
loope
mov
in
dec
cld
jl
mov
jne
sub
pop
pop
out
js
xchg
pop
cwtl
pop
push
shrb
mov
fcom
mov
sti
ret
mov
xor
mov
test
sbb
sub
mov
stos
add
jl
push
shrl
andb
cltd
shll
test
mov
mov
mov
dec
push
xchg
imulb
push
or
sbb
jp
pop
stos
mov
push
and
push
js
incl
adc
or
lahf
fdivl
push
xchg
mov
mov
mov
pop
imul
dec
hlt
jbe
inc
das
push
adc
pushf
sub
dec
in
jecxz
add
sahf
mov
out
out
jmp
cmpsl
lret
jns
cld
add
test
mov
out
and
or
cli
jae
pmaddwd
in
and
mov
xor
fs
aas
in
test
pusha
inc
jl
jg
push
xchg
mov
pop
xchg
pop
sbb
xorl
push
in
dec
popf
adc
lock
es
stos
lcall
insb
movsb
int
jnp
out
scas
dec
enter
pushf
adc
jo
add
ret
loop
jg
stos
inc
iret
out
push
mov
inc
sub
jl
lret
push
xlat
xchg
push
xchg
ret
xchg
mov
std
pushf
imul
or
sub
sarb
cmp
aas
notb
xor
mov
outsl
call
jbe
cmp
sbb
mov
aaa
add
inc
or
mov
hlt
int3
sbb
lds
jge
xor
ss
scas
pop
daa
stc
and
cmp
xlat
mov
push
shlb
mov
ficomps
xchg
enter
daa
scas
loopne
cmp
out
jno
clc
and
gs
sub
xchg
sub
fcoml
push
xchg
mov
in
outsb
or
inc
jns
insb
mov
imul
addr16
test
loope
jmp
push
fstl
push
jno
fcomip
or
xchg
xchg
outsb
addl
imul
mov
test
insl
cwtl
lock
pop
lea
fs
push
lret
cmpsl
push
int
jae
sub
inc
sahf
pop
xchg
shr
lcall
ret
mov
push
sahf
icebp
sub
test
sbb
andb
in
roll
mov
jg
mov
out
and
mov
hlt
inc
not
shr
insl
ret
jp
cld
mov
add
mov
or
adc
in
cltd
xor
scas
dec
outsl
outsl
mov
adc
ljmp
mov
push
cmp
lods
mov
out
out
fs
push
xchg
or
cmpsb
stos
jne
cmp
inc
insl
lods
roll
loopne
inc
mov
adc
mov
adc
jle
add
sbb
je
fcom
rcr
sub
mov
pop
jg
sti
loope
adc
cli
fcomip
aad
mov
adc
adc
sub
lcall
repz
add
stos
aam
lea
pop
call
xchg
mov
push
and
imul
jmp
fmuls
inc
insl
mov
mov
pop
adc
cwtl
dec
inc
xor
bound
adc
div
dec
testb
cwtl
inc
ffreep
mov
or
mov
inc
in
add
fistpl
and
mov
sbb
jecxz
das
das
pop
rcl
mov
mov
out
mov
adc
aam
pop
insl
shr
es
or
cmp
icebp
mov
xor
in
adc
data16
mov
adc
std
pop
mov
xchg
sar
ret
xor
aam
cmp
inc
push
lret
push
push
push
add
push
out
test
bound
add
ljmp
icebp
lods
adc
jne
insl
mov
xchg
js
ficoml
xor
packssdw
les
dec
mov
xlat
leave
xchg
js
dec
mov
jge
push
dec
sub
sbb
push
rcrl
and
stos
mov
cmp
add
scas
add
jmp
cwtl
fidivs
pop
jl
or
jbe
xchg
or
mov
mulb
test
ja
adc
inc
mov
push
add
cmpsl
aas
jne
aaa
mov
sbb
ja
fidivs
jns
gs
in
mov
xchg
sub
mov
sub
call
xor
inc
mov
xor
test
mov
cli
nop
pusha
lcall
xchg
nop
sub
cmpsl
xchg
es
jbe
add
and
cmpsl
int
popf
cmp
fwait
mov
jo
aad
or
lcall
cmp
scas
stos
je
push
stos
leave
xor
cs
iret
inc
ret
lea
std
movsb
inc
insl
dec
push
jae
in
inc
sub
mov
dec
inc
push
fs
xchg
adc
push
sbb
dec
adc
fimuls
or
out
mov
xchg
outsl
clc
leave
jnp
movsb
hlt
pop
push
pop
arpl
mov
jge
shll
aaa
rcr
or
les
int3
scas
mov
pop
mov
inc
push
pusha
fnstenv
jo
xchg
jmp
idiv
mulb
bound
inc
cmp
push
mov
and
in
lds
xor
push
adc
or
or
lea
dec
pushf
ds
sub
and
add
sbb
push
gs
test
cmp
inc
or
jne
data16
js
clc
fsts
and
sub
movsb
sbb
cmpsb
or
cmp
mov
adc
inc
adc
sbbb
add
xor
xor
cmp
int
and
pop
push
add
in
push
lret
fsubrl
shlb
xchg
mov
mov
fwait
cmpb
jg
scas
xor
pop
push
cmpsl
mov
into
divb
xor
hlt
cmp
scas
push
cmp
pusha
and
adc
jge
fildll
sbb
dec
add
cmp
jbe
lods
enter
into
nop
outsl
dec
pop
dec
loop
or
stc
repnz
lret
sub
push
out
in
data16
mov
mov
xchg
lea
cli
cmp
jge
push
mov
shlb
cwtl
or
push
loopne
and
adc
das
imul
jno
xchg
mov
pop
sbb
scas
pop
leave
xlat
cmpxchg
sub
mov
enter
jbe
nop
mov
jae
int
outsb
nop
fwait
mov
push
inc
xor
push
les
cld
xrelease
scas
mov
in
outsb
call
adc
lret
adc
pushf
cmc
inc
jmp
and
pop
ffree
cmp
push
insb
inc
jecxz
mov
cli
rcrl
lcall
je
sbb
add
scas
std
fcompl
cwtl
test
mov
dec
ja
std
or
xchg
xchg
ret
dec
cli
sahf
jmp
mov
jmp
jle
sub
imul
mov
cmp
call
enter
push
mov
insl
mov
jge
cmpsl
lods
and
mov
xchg
and
mov
push
test
xchg
scas
popa
loope
xor
ror
std
cmp
outsb
outsb
aam
fsubrs
fldpi
leave
fnstsw
jo
popf
sub
ljmp
lods
lods
jg
sarl
adc
dec
sbb
mul
bswap
cmpsl
push
add
fiadds
adc
push
in
mov
lret
xchg
sbb
in
add
inc
stos
test
adc
pop
add
movsb
pushf
inc
test
xor
mov
xor
adc
xchg
mov
stos
push
cmpsb
ficomps
mov
ja
in
dec
fidivl
pop
inc
pop
iret
jecxz
push
dec
bound
stos
jmp
jge
jne
lret
out
mov
jg
jns
jno
in
clc
test
pop
mov
dec
or
push
lods
addr16
add
mov
in
mov
psubusw
jle
std
jle
push
roll
pusha
xor
mov
xchg
arpl
insb
jmp
icebp
sub
adcl
and
int3
push
cmpsl
push
scas
lret
cmpb
and
push
mov
scas
push
adc
or
or
lcall
in
dec
pop
in
mov
or
cmp
or
dec
aad
inc
aad
cmp
popa
loop
xchg
imul
sbb
insl
and
jae
fisubrs
xor
lds
jae
shl
mov
repnz
cmpsb
leave
repnz
ja
lea
loope
mov
aaa
sbb
aaa
jg
notl
arpl
je
out
cmp
pop
out
arpl
inc
cwtl
push
xor
in
ret
aad
mulb
cmc
jbe
cmp
clc
push
jo
arpl
lods
and
mov
lods
cmpsb
aaa
cmp
jo
jle
ljmp
add
mov
lock
mov
push
cmp
addr16
add
push
inc
xchg
mov
push
pop
lea
js
rclb
pop
movsb
fisubrs
and
loope
aam
sub
data16
hlt
mov
outsb
inc
mov
adc
pop
loop
stc
and
scas
mov
sbb
enter
push
mov
push
rcrl
jnp
push
mov
sub
mov
sahf
lcall
test
sub
fsubrp
test
xor
adcb
jg
push
mov
mov
xorb
ja
fistpl
imul
dec
mov
shrl
xor
into
sbb
push
cmc
jae
dec
xor
aaa
cltd
loop
inc
add
test
sbb
pop
dec
xchg
pusha
xchg
out
in
mov
insb
sub
cmp
movsb
scas
or
and
gs
push
loopne
or
mov
imul
clc
xchg
dec
dec
push
sbb
ljmp
sub
and
in
das
fmuls
aas
gs
shlb
aad
mov
jbe
or
add
inc
xchg
mov
frstor
jge
pop
repz
sub
lea
or
pop
decb
xchg
xor
pop
mov
mov
push
jmp
xor
inc
jnp
ja
incb
aas
cltd
jb
jb
aas
dec
cs
insl
jecxz
out
testb
lea
pop
push
ss
mov
cs
dec
in
and
jge
pop
mov
scas
mov
adc
cltd
mov
push
mov
divl
jp
lods
xor
pop
daa
mov
insl
mov
sti
add
xor
imul
inc
lret
ret
mov
je
add
cmc
and
shlb
xor
lret
pop
pop
and
stc
xor
mov
js
xchg
jle
popa
ljmp
cmp
ljmp
out
js
nop
xchg
push
sub
or
mov
mov
test
movsb
mov
xor
xchg
pop
cmovge
pop
aaa
xchg
out
sbb
stc
jmp
pop
stos
shll
stos
cwtl
mov
xor
in
mov
xor
adc
xor
jae
mov
jl
cli
mov
dec
mov
ja
int3
pop
dec
int
icebp
inc
hlt
cmp
inc
cmc
out
sub
aam
lea
mov
adc
shlb
out
pushf
or
dec
pop
jns
and
dec
xchg
popa
xchg
lret
lret
fsub
lcall
or
ljmp
xchg
inc
mov
mov
insl
mov
iret
jle
lret
loopne
adc
ljmp
ss
cmp
subb
mov
andl
dec
push
sub
cmpsl
inc
mov
out
hlt
stos
repz
and
rorb
jnp
les
scas
jno
jl
cmp
cwtl
adc
sub
and
pop
ret
pop
pop
and
daa
inc
addl
mov
hlt
fwait
or
lds
leave
ficoml
stc
xchg
ret
sbb
bound
gs
sarl
or
mov
cmp
leave
imul
enter
sarl
push
sbb
in
mov
imul
cli
lock
ficoml
pop
adc
dec
dec
xor
inc
add
call
cmp
mov
push
mov
scas
xchg
in
xchg
aas
enter
daa
lods
iret
insl
cmp
addr16
and
dec
jp
outsb
aam
movsl
notl
xchg
lahf
add
lret
mov
test
iret
arpl
std
sub
mov
cltd
js
cwtl
out
sahf
push
dec
xor
sub
faddl
mov
sbb
adc
cli
rorb
ret
sbb
xlat
xor
rolb
xor
jbe
push
aam
or
daa
imulb
test
pop
adc
or
mov
mov
and
nop
call
cmp
jb
xor
xchg
mov
lods
scas
in
mov
lret
movsl
mov
subl
ss
push
pop
cmp
and
mov
lret
aaa
sarl
rorb
je
into
xor
stc
xor
dec
pop
outsl
or
push
loop
stos
stc
pusha
clc
push
punpcklbw
adc
loope
data16
lods
insl
xor
pop
xor
out
testb
lahf
xchg
cmp
leave
xchg
or
int
sbb
pop
insb
mov
sbb
xor
and
and
sbb
and
loopne
sub
xchg
popa
in
lcall
and
cmpsb
nop
push
arpl
dec
sarb
inc
cmpsl
mov
xchg
les
cs
mov
insl
lea
jle
adc
dec
pop
outsb
ss
adc
es
dec
sub
in
and
int3
inc
add
adc
aas
cmp
js
jno
je
add
test
xchg
std
sub
push
cwtl
je
cmc
mov
popa
xlat
mov
mov
dec
dec
rcl
xchg
lods
nop
and
or
loopne
hlt
in
xor
movsb
pop
mull
scas
sti
and
int3
shll
std
es
stos
insl
xchg
scas
cmpsl
stos
jne
mov
inc
filds
sub
enter
sarl
daa
bound
adc
shlb
sub
aam
adc
ret
in
inc
rcll
push
in
clc
adc
xchg
mov
or
lods
push
and
jp
xlat
out
sahf
xchg
dec
push
int
call
sahf
push
add
fucom
cltd
lods
sbb
imul
mov
jg
dec
in
xlat
or
push
loop
sbb
sahf
shll
out
stos
xchg
enter
cltd
add
and
ljmp
push
stc
mov
mov
and
mov
mov
std
ja
add
insl
cmp
sarb
or
outsl
aas
fwait
pop
stc
xor
jo
aam
push
xchg
divb
jnp
mov
push
push
aaa
jns
ja
in
or
out
lods
sub
fldenv
or
xchg
jp
mov
mov
mov
mov
in
iret
std
jle
mov
pusha
imul
sti
sbb
shr
jns
loope
xchg
sub
lock
popf
mov
fnstsw
sub
jno
and
movsb
int3
insb
push
daa
pop
jnp
xchg
sbb
aam
nop
push
jg
dec
adc
lods
ret
fstps
sub
or
mov
gs
inc
sbb
in
push
fcmovb
add
xchg
sbb
fwait
sbb
sub
imul
fidivs
lds
pop
shlb
push
pop
and
adc
leave
loopne
xchg
hlt
call
outsl
leave
jbe
mov
jge
call
add
std
notl
or
mov
jo
lds
pop
inc
outsb
xor
or
dec
xor
mov
mov
or
sub
inc
and
jp
mov
imul
hlt
daa
stos
jl
cmp
and
jl
add
fisttpll
movsl
adc
lahf
and
fidivs
test
lcall
shl
pop
fldt
lahf
js
mov
fstpl
in
loope
out
sub
and
loop
or
xchg
rcl
mov
ja
aad
push
add
sahf
inc
xor
pop
adc
pop
sbbl
push
fsubrs
fsubrl
shlb
rcrb
inc
fnstsw
orb
push
mov
rorl
mov
pop
mov
iret
loop
ss
jnp
cmp
loopne
out
int3
pop
stos
lret
mov
mov
scas
pop
into
loope
jns
add
inc
outsl
jmp
outsb
loop
dec
add
pop
lahf
scas
fs
pop
sub
mov
lahf
out
test
rclb
loopne
jmp
test
cmp
andb
and
cmp
out
pop
mov
pusha
adc
enter
cld
stos
adc
popf
mov
xchg
rorl
int3
cmp
xlat
int3
lds
and
lahf
mov
add
or
aad
call
mov
das
cmp
lds
jbe
or
repz
mov
or
std
xchg
ljmp
cli
mov
pushf
mulb
jmp
lahf
bound
fsubrs
mov
mov
xor
dec
aas
xlat
jb
icebp
das
dec
sbb
mov
jecxz
ljmp
ror
dec
cwtl
das
jle
mov
das
dec
mov
movsb
flds
mov
jl
mov
inc
inc
mov
inc
lock
dec
cwtl
das
cmpl
mov
xor
and
xor
mov
jae
loopne
adc
dec
jb
cmc
mov
cmpsl
stos
in
mov
pop
repnz
push
repnz
lret
mov
in
jne
adcb
jg
pop
pop
xor
rolb
mov
aam
lods
loopne
jl
inc
push
and
fucomp
stos
sahf
clc
dec
aad
xchg
cld
sub
pop
enter
mov
jp
sub
xchg
xchg
adc
ret
ret
jmp
add
dec
addr16
in
add
mov
cmp
test
mov
xchg
popa
cmp
sar
cmpsb
fstps
outsb
stos
jbe
cld
push
dec
pop
mov
sbb
sahf
cbtw
xor
sbb
inc
in
mov
jl
mov
mov
sub
mov
rolb
and
mov
inc
dec
push
shlb
jp
mov
sbb
bound
outsl
loop
pop
les
imul
jo
aam
lods
or
jp
sbb
scas
mov
pop
jno
jle
inc
popf
in
mov
pusha
push
adc
fistps
fsubrs
jmp
push
shlb
inc
fildll
mov
outsl
popf
fdivrs
lock
insb
pop
test
fstpl
mov
sub
scas
aaa
scas
sbb
mov
sub
faddp
or
inc
mov
pop
xchg
inc
cltd
mov
inc
cmp
int
fisubrs
mov
inc
push
into
fidivrl
stc
xchg
jo
ficompl
lret
push
xchg
mov
pop
mov
insb
rolb
mov
ficomps
push
pop
xchg
xor
int
mov
aaa
fidivrl
arpl
sbb
or
sarb
add
ret
mov
mov
mov
mov
std
lds
jb
bound
scas
call
push
movsb
and
push
pop
push
or
in
popa
pop
inc
enter
daa
stos
lods
mov
fld
shll
dec
mov
jmp
lock
ds
movsl
add
push
hlt
lahf
inc
out
dec
push
mov
cmc
test
gs
enter
adcl
pop
add
js
mov
push
lret
add
sahf
cmp
shl
jo
cmp
mov
fimull
call
fistpll
cld
sar
outsl
sub
push
fisubrl
jle
jp
in
adc
mov
push
adc
sub
cmp
into
movl
mov
daa
or
out
mov
fdivrp
hlt
movsb
sbb
fwait
ret
push
lret
rol
insl
rorl
scas
fmul
les
cmc
enter
mov
outsl
lret
loop
sbb
fs
in
data16
dec
lods
cmp
push
mov
aam
mov
mov
cmp
nop
repnz
mov
loopne
dec
pop
stos
push
sbb
movb
insb
imul
mov
xchg
xchg
push
mov
cmp
and
xchg
hlt
mov
jo
jnp
dec
add
jmp
jae
dec
mov
mov
lods
out
inc
les
add
lea
cmp
adc
fwait
adc
lcall
sti
jne
imul
int
dec
pop
dec
aas
jbe
cld
jb
push
fisttpl
shrb
jecxz
shrb
notb
std
js
in
ljmp
mov
aas
cwtl
xor
pop
test
or
jno
lcall
das
bound
mov
mov
push
clc
or
insl
push
loop
dec
lock
mov
out
sub
cld
jle
gs
pavgw
mov
mov
mov
push
push
rcl
sbb
push
sub
outsb
aam
fwait
adc
or
lcall
push
popf
clc
mov
ds
cmp
dec
popa
push
repz
lods
sub
das
mov
mov
outsb
arpl
fisubrl
inc
movsl
mov
bnd
sbb
push
test
aas
add
mov
inc
xchg
js
loope
jle
push
subb
mov
stos
gs
ljmp
adcb
in
inc
cmp
movsl
add
xchg
add
or
outsb
mov
inc
push
outsl
mov
jns
imul
sti
dec
cmpsb
sbb
mov
fildll
fwait
mov
clc
dec
ss
jne
lds
out
cmp
add
negb
ljmp
out
popa
imulb
iret
push
mov
xor
jp
cmp
mov
lret
or
ljmp
mov
xchg
imul
sbb
mov
insb
popf
jmp
lret
mov
stos
inc
xor
hlt
mov
insb
es
add
test
lcall
adc
pusha
iret
cmp
jge
pop
leave
sub
inc
movsb
test
filds
lret
xor
xchg
daa
ja
shll
sbb
sub
jle
sbb
cmp
imul
fidivrs
icebp
rcrb
inc
pushf
aaa
repnz
or
cs
jle
arpl
aas
jae
jbe
jb
dec
ret
dec
pop
push
aaa
jnp
orb
lock
add
mov
mov
iret
sbb
xor
pop
inc
jnp
push
push
lret
and
cmp
shll
stos
xchg
cmpsb
and
and
dec
loope
enter
daa
test
or
jno
xchg
add
clc
dec
mov
leave
movsl
or
xchg
and
insb
lahf
popa
outsb
pop
push
test
xor
aam
rcll
inc
mov
cmp
fbld
push
push
mov
sub
xor
cmp
mov
adc
mov
fimuls
sti
jns
sbb
aaa
out
xor
out
push
int
fisttps
cmc
mov
in
mov
std
daa
faddl
sub
ret
mov
pushf
add
jg
add
mov
mov
mov
mov
bswap
and
push
mov
out
xchg
cmp
push
int3
mov
dec
inc
lock
mov
add
sub
sbb
jno
into
cmpsl
jge
cmc
push
lcall
mov
fs
test
mov
adc
lret
jns
gs
lods
and
mov
out
sub
cli
cmp
and
mov
inc
cmp
xor
or
jae
jg
andl
xchg
adc
jp
adc
movsl
add
pop
mov
rcrb
sti
dec
xlat
dec
xchg
sub
int
mov
fstpt
sti
sti
mov
mov
xor
inc
nop
loop
xchg
dec
in
or
ftst
xchg
lods
les
rorl
mov
arpl
nop
mov
pop
xchg
cmp
sbb
pop
or
pop
inc
xchg
mov
inc
push
add
jb
in
call
je
int
jecxz
incb
pop
xchg
mov
pop
push
mov
popf
test
xchg
fstpt
cmp
and
lock
or
mov
sarl
fcom
push
jo
es
jg
cmp
cmp
mov
iret
mov
lds
loopne
jle
adc
nop
xlat
lods
mov
jno
fcom
in
sub
inc
inc
xchg
aam
fisubs
lcall
fnstsw
clc
clc
les
ss
lods
xchg
fdiv
mov
add
add
jns
pop
shld
cmp
mov
arpl
and
test
data16
xchg
in
sbbb
and
shrl
sbb
stos
push
push
push
xchg
cmpsb
push
add
push
icebp
lret
fbstp
push
dec
pop
or
xchg
mov
xor
mov
mov
push
ja
xchg
dec
dec
cltd
dec
inc
push
inc
xor
aam
fwait
in
cmp
sbb
jne
je
mov
and
iret
xchg
mov
dec
mov
jne
popa
xchg
pop
pop
pop
out
lods
xchg
sub
lret
or
push
or
sbb
mov
cmp
jle
xchg
in
in
js
cmp
pop
fistps
lcall
and
xchg
call
cmpsb
dec
push
cmp
aad
es
fists
jmp
stos
mov
repz
xchg
sbb
jnp
mov
dec
push
push
adc
pushf
ror
ret
push
pop
add
mov
jae
xchg
push
inc
aas
movsb
sahf
or
mov
faddl
sbb
loopne
fwait
xchg
push
pop
scas
sbb
subl
pop
je
jp
ja
lea
test
hlt
leave
clc
repnz
or
cld
jge
add
sbb
push
mov
cmp
lret
and
xchg
sub
movsb
repz
mov
jg
lds
daa
jo
imul
aas
in
aam
fwait
cmp
inc
in
movsb
cmp
cmpsb
cmpsb
cmpsl
cltd
out
das
dec
mov
daa
test
cmp
or
mov
addr16
inc
testb
pop
ds
test
movsl
adc
pushf
and
or
push
push
fstp
test
sti
push
sbb
stos
xor
pop
push
jge
js
leave
pop
lcall
loope
nop
pushf
sub
stc
int
pop
cltd
sub
ss
data16
aam
rolb
ja
add
add
xor
movsb
call
sub
in
adc
rcrl
aam
pop
fsubrl
pop
sub
sahf
shlw
test
enter
lcall
stc
outsl
orb
out
and
repz
sub
sbb
or
mov
fwait
icebp
add
clc
push
into
mov
cmc
push
xor
xor
inc
outsl
mov
mov
cmp
push
cmp
xchg
callw
lods
or
mov
cli
imul
xor
cmpsb
lods
or
sbb
mov
pop
lret
fadds
pop
call
fcmovnb
imul
out
add
dec
sbbb
or
sub
fsubs
inc
xor
sti
stos
cmp
scas
jo
aad
fs
cwtl
mov
imul
les
rol
rcrb
loop
call
punpcklwd
cmp
adc
pop
cwtl
pushf
div
pop
jmp
lcall
inc
push
mov
and
mov
insl
jb
mov
dec
cmpl
jbe
fidivl
mov
pusha
xchg
mov
mov
mov
jb
dec
jl
fldt
cmp
sub
lock
out
das
and
outsb
mov
mov
and
je
shll
cmp
insl
and
cmpsl
cmpsl
dec
ljmp
add
cld
aam
push
lret
in
pop
xchg
mov
xchg
das
repz
nop
adc
rol
pushf
cmp
xlat
aam
je
ret
sub
xor
arpl
clc
pushl
gs
fldcw
dec
push
out
addr16
xlat
xchg
imul
mov
out
cltd
mov
test
inc
addr16
mov
test
sbb
dec
clc
dec
sbb
nop
sar
movsb
das
pop
add
jl
cmp
roll
or
jnp
lds
mov
inc
fs
xor
add
cwtl
mov
out
outsb
ja,pt
cmovo
inc
aam
out
dec
or
sahf
cmpsl
fwait
adc
add
js
jne
xchg
mul
bound
xchg
xor
in
test
xchg
push
cmpsb
clc
out
insb
sub
in
lds
cs
test
mov
mov
test
sbb
cmp
fbstp
xor
push
cmpsl
or
sub
dec
push
cld
rcr
popf
dec
xchg
pushf
mov
sub
cld
stos
xor
and
push
xlat
insb
cld
ror
add
pop
push
fwait
sarb
adc
aaa
cld
iret
sti
pop
push
ret
inc
pop
aaa
mov
cmpsl
jae
enter
repnz
or
sub
cli
inc
iret
xchg
ficoml
mov
sbb
fwait
imul
pop
fiadds
les
lds
sbb
xchg
stos
cmpl
mov
pop
arpl
pop
xchg
jbe
jb
jge
sub
aaa
stc
push
xchg
or
mov
int3
jno
sbbl
adc
iret
jo
jge
scas
ucomiss
cmp
push
movsb
ret
test
push
dec
and
cmpsb
sub
repnz
push
xchg
pusha
enter
daa
cmpsl
pop
fstpt
jb
ja
mov
decl
mov
dec
movsl
sbb
cmp
lahf
lahf
js
push
sub
test
filds
icebp
inc
ss
int3
pop
and
pusha
and
pop
fnstenv
popf
loope
mov
cmp
lods
cmp
aas
pop
adc
inc
imul
inc
add
and
pop
sub
fdivl
mov
jecxz
xchg
mov
or
je
and
rclb
inc
rcr
add
sahf
or
lret
test
faddl
lret
psrad
cmp
mov
xlat
and
cmp
int3
cltd
jae
enter
add
mov
sbb
sub
mov
cmc
sbb
fldenv
loop
stos
stc
repz
jae
jle
push
lods
lock
cwtl
out
in
cli
sahf
sarb
pop
mov
xchg
out
inc
or
dec
mov
lds
cmp
and
cmp
pop
pop
jecxz
adc
hlt
jle
push
mov
add
jae
sbb
dec
scas
push
xlat
enter
in
pop
mov
mov
pop
sti
pop
jg
cs
xor
mov
mov
jne
push
pop
push
fsts
mov
repz
cmp
and
jmp
cwtl
pop
in
adc
adc
pop
test
cmpsl
xchg
pop
push
inc
add
inc
mov
ljmp
clc
lods
and
stc
jecxz
and
negb
aam
cwtl
sbb
mov
xchg
adc
mov
pop
xchg
aad
mov
push
lock
out
mov
inc
fnstenv
and
xor
shl
sub
es
mov
dec
loope
jge
cmpsb
enter
xchg
or
jae
dec
cld
push
sahf
lret
pop
pop
pop
mov
sahf
jmp
mov
scas
sbb
int
das
and
ret
mov
rorb
mov
notb
sub
les
mov
pop
mov
lret
xchg
mov
repz
das
xchg
xor
arpl
and
sub
mov
test
lods
std
xchg
lock
cmp
xchg
xchg
sbb
icebp
inc
rcll
cmp
outsb
stos
xor
lcall
fstpt
clc
add
jne
xor
cs
xor
xchg
mov
push
xchg
mov
stos
jmp
rorb
sbb
cmpsb
or
ret
fwait
inc
mov
dec
fbld
jne
mov
out
shl
cmc
jo
jns
mov
mov
lods
lahf
movsb
sub
shlb
push
mov
mov
or
xlat
popf
cmp
aas
mov
pusha
jb
sub
xchg
call
rclb
jle
xchg
cmpl
mov
mov
dec
push
push
int
and
fcmovne
insb
cmp
sub
scas
ret
daa
fwait
push
loop
aaa
adc
xadd
pop
repnz
ret
call
inc
lds
jae
inc
movb
pop
or
cmpsl
testb
inc
sahf
pusha
xchg
int3
and
clc
mov
fisubs
sub
mov
sub
and
pop
jns
arpl
jne
jbe
les
sbb
jb
mov
xchg
int3
pop
pop
leave
pop
das
popf
adc
js
mov
jo
aaa
xchg
scas
out
and
and
add
push
aad
dec
adc
push
cltd
inc
xor
std
xor
fsubrp
daa
cmpsb
cltd
cli
cmp
inc
xor
dec
adc
mov
movsl
and
and
pop
xor
mov
sub
test
xchg
hlt
or
and
pop
mov
sahf
daa
adc
pop
or
sbb
lds
xor
sub
add
mov
mov
rcrb
sub
xor
dec
sbb
add
xchg
shll
stos
mov
mov
sub
jl
push
and
lcall
lret
movsl
jge
sub
sahf
lods
fisubrs
ljmp
jg
fwait
and
lahf
mov
mov
xchg
lods
and
mov
cmp
xchg
testl
je
mov
jnp
sbb
inc
into
push
pop
inc
cmc
in
dec
xor
cltd
pop
outsl
inc
mov
ds
iret
fs
adc
sbb
data16
inc
sbb
cmp
push
add
shll
xor
or
or
jo
call
andb
mov
pop
es
dec
adc
inc
test
test
in
mov
xchg
mov
std
cmpl
pop
sar
sub
repz
sbb
sahf
sti
or
add
sbbb
mov
mov
lret
repz
fmuls
loopne
lea
jecxz
movsl
aad
or
pop
sub
js
jno
dec
iret
jno
test
pop
pop
cmc
add
inc
sub
fs
mov
mov
jb
ljmp
add
sbb
mulb
jbe
adc
ss
mov
mov
xchg
xchg
inc
mov
aaa
mov
sub
lock
pop
jb
xchg
clc
fsubl
roll
mov
insl
icebp
adc
cmpsl
movsl
lret
and
ds
leave
icebp
dec
insb
xor
lret
lret
pop
push
mov
movsl
or
push
adc
shlb
push
sub
push
mov
jbe
jge
inc
dec
cmc
push
icebp
or
mov
cwtl
clc
jne
sbb
fwait
pop
shlb
cmp
idivl
out
sub
iret
xor
or
js
ret
add
nop
cltd
not
dec
test
pop
push
xchg
leave
jmp
push
clc
pop
test
inc
push
xchg
fistps
lods
out
shrl
mov
push
jle
mov
mov
add
dec
outsl
dec
or
add
xor
mov
cmp
dec
pop
gs
jae
out
mov
inc
adc
scas
xor
ret
jne
fdivr
mov
inc
pop
out
mov
mov
jns
out
in
std
into
xchg
hlt
or
out
inc
jl
dec
push
or
test
das
mov
jae
mov
xchg
jle
push
pusha
in
stos
and
pop
pop
fbstp
jp
jmp
dec
fwait
jl
or
push
orb
popf
fwait
xchg
sarl
cmpsl
cld
stc
stos
sbb
pop
and
add
add
xchg
test
sub
adc
cli
addr16
mov
dec
and
movsl
fdivs
jae
add
or
and
lods
aas
push
sbb
dec
stc
imul
lods
fiadds
into
lds
mov
mov
jge
add
stos
in
hlt
stos
aaa
int3
arpl
mov
jge
and
sbb
daa
aaa
ja
rorb
int3
sbb
sbb
push
int3
inc
inc
mov
pop
mov
fnsave
les
mov
cmp
movsb
fxch
mov
call
lret
xchg
in
in
sahf
enter
daa
movsl
pop
mov
fdivs
jl
std
icebp
dec
or
ds
lret
and
aam
loope
fstl
shrl
pop
pop
sbb
inc
jns
push
rolb
js
add
pop
push
fdivrp
push
dec
pusha
loope
jge
sub
inc
icebp
cmp
outsb
pop
popf
adc
idivl
push
icebp
outsb
imul
xor
xor
push
push
jmp
dec
mov
pop
mulb
push
fstps
jmp
sub
rcrl
jno
jnp
das
mov
data16
loop
mov
out
repnz
fs
and
imul
xor
icebp
fadds
sbb
lret
ret
xlat
inc
sbb
xor
shlb
jnp
sbb
xchg
sarl
xchg
fsubrl
adc
clc
data16
push
lods
mov
es
test
xor
loop
jmp
push
or
outsl
pop
gs
sub
add
jg
adc
roll
scas
movsb
repz
sub
das
popa
iret
cmp
mov
xlat
inc
dec
repnz
mov
mov
xchg
sti
mov
mov
aad
fs
nop
dec
js
dec
imul
fld
xchg
aad
fcomi
int
out
leave
rcrb
call
mov
pop
push
push
cli
adc
dec
pushf
clc
cli
icebp
jmp
inc
insl
pop
cwtl
mov
inc
mov
dec
inc
mov
aas
xchg
xchg
cmpsl
push
mov
out
push
je
jbe
jecxz
push
sub
mov
mov
cwtl
xchg
hlt
mov
fadd
mov
movl
cmc
sbb
mov
dec
daa
lock
xor
mov
add
mov
pop
test
add
repnz
imull
sbb
dec
xlat
ret
mov
movsb
push
and
jno
mov
and
cld
push
imul
hlt
ror
lods
outsb
mov
in
cmp
cmp
movsl
sub
xor
ret
adc
mov
fstp
std
xbegin
jbe
adc
push
std
hlt
popa
andl
out
nop
mov
mov
js
mov
inc
add
imul
jns
mov
dec
mov
dec
mov
mov
xchg
xor
roll
rcrb
and
and
cmp
mov
xchg
shll
jecxz
or
xor
mov
xchg
pop
pop
mov
and
sub
into
movsl
inc
lods
xchg
xor
cwtl
hlt
xchg
fwait
mov
push
test
pop
fidivs
xchg
ret
pop
bound
sbb
jns
mov
jbe
inc
es
bound
or
adc
push
dec
shlb
push
loope
testb
sbb
or
pusha
test
mov
xchg
into
adc
out
adc
xor
inc
push
js
ret
mov
out
jecxz
mov
loop
addr16
jmp
cmp
ret
mov
adc
je
mov
daa
pop
fcompl
inc
fstpt
imul
xchg
cwtl
or
popf
seto
in
fisubrl
cli
sbb
loopne
imul
cli
fsubrp
push
popf
shl
mov
repnz
leave
and
js
cmc
dec
cltd
arpl
add
ret
imull
aaa
ss
xchg
or
xchg
and
xor
call
push
xor
loope
jo
call
add
and
cmp
push
dec
movsb
fldt
push
aaa
push
sub
lret
aad
enter
daa
movsb
cmpsl
cmc
cmp
add
or
lea
dec
bnd
xchg
movsl
das
push
sbb
outsl
add
lahf
cld
and
imull
daa
sbb
inc
sahf
lods
fwait
adc
popa
or
pop
xchg
aaa
and
sbb
loope
adc
sub
push
mov
sbb
ret
adc
sarb
insb
sbbb
sbb
pop
clc
add
jno
xor
mov
int
loop
sub
pop
or
or
push
xor
sub
nop
add
clc
jp
orb
jg
mov
jnp
lahf
pop
xchg
mov
mov
and
sbb
ss
or
fdivr
mov
out
fidivs
shl
jecxz
or
mov
jmp
jb
xor
push
mov
subb
inc
insb
stc
sbb
inc
fs
inc
adc
xchg
data16
jnp
lods
movsl
pop
in
xor
adc
cli
aaa
mov
das
cmp
ret
xor
cs
gs
cs
pop
gs
cmp
loopne
loop
pop
rcll
imul
notb
loop
iret
xchg
cmpsb
xor
cmp
xlat
test
sub
lds
repnz
data16
cmp
aad
xor
dec
enter
aas
jb
fincstp
pop
xchg
loopne
xor
fsubl
ljmp
or
mov
adc
sub
mov
aaa
mov
cmp
cmp
inc
inc
icebp
lods
data16
xor
cli
in
jge
pop
dec
inc
je
mov
jecxz
shl
out
ljmp
push
inc
mov
inc
cmp
jnp
mov
dec
sub
mov
mov
push
repnz
fcoms
int3
and
das
pushf
roll
mov
stos
bound
faddp
and
jne
out
insl
mov
jbe
cmpsl
mov
ljmp
andb
test
out
and
mov
push
pop
rorb
in
sub
aam
sbb
push
ja
incb
xchg
mov
and
andl
cltd
mov
repz
mov
test
outsl
push
rolb
jo
push
stos
cltd
gs
pop
mov
orb
and
call
xchg
mov
adc
dec
rcrl
inc
pop
scas
pop
push
stos
cmp
add
fdivs
xchg
push
test
dec
or
pop
xor
jle
mov
xlat
jmp
xchg
pop
fcmovnbe
mov
testl
inc
jge
orl
fwait
rclb
dec
mov
mov
push
mov
mov
jae
mulb
mov
test
sub
cs
xchg
andl
sbb
or
std
dec
jp
mov
pop
mov
gs
and
inc
in
in
leave
das
pusha
inc
lcall
mov
sub
fistpll
subl
bound
or
popf
jmp
mov
push
and
je
and
hlt
insb
test
sbb
mov
scas
in
les
adc
shll
adc
mov
inc
dec
mov
or
sbb
je
lret
popa
jl
pop
lahf
mov
ror
xor
dec
fildll
pop
cmc
fimuls
lret
out
mov
and
loopne
cwtl
xchg
in
hlt
inc
mov
arpl
adc
jbe
jo
jge
scas
xor
stos
scas
aaa
cmc
in
mov
jne
lock
inc
int3
sbb
dec
jae
and
xor
jp
sbb
and
repz
inc
or
mov
adc
iret
cmpsl
hlt
daa
mov
orl
dec
popa
loope
ds
icebp
jg
or
jns
sbb
lods
test
repnz
inc
sub
adc
stc
js
or
push
sahf
imul
jecxz
dec
cmp
sahf
outsb
and
fsts
shrb
test
lret
sub
add
filds
sbb
xor
out
xorl
sarl
lcall
and
addl
sahf
xchg
cwtl
inc
test
testl
cwtl
xor
mov
push
pusha
and
ds
fs
mov
pop
pop
lret
fcmovb
mov
scas
mov
or
call
enter
jno
xor
dec
outsl
jecxz
mul
testl
adc
lds
mov
push
dec
out
test
xor
pop
test
popf
xor
push
xor
adc
adc
imul
movsb
popf
xchg
jmp
aad
cmp
add
sub
sub
in
pop
inc
repz
adc
xchg
popf
aad
add
dec
daa
xchg
outsl
inc
push
ss
fldcw
fnstenv
jmp
movsl
repz
or
lea
mov
aad
pushf
mov
pop
mov
js
pushf
dec
into
clc
jmp
out
push
pop
fdivp
test
inc
or
fdivrs
iret
xor
jb
mov
fnstenv
out
stos
lcall
or
daa
cwtl
pop
jl
mov
xor
jbe
adc
loopne
adc
fistl
add
or
out
daa
and
das
jnp
xchg
mov
sbb
jo
shrl
jno
insl
cmpsb
and
mov
xchg
mov
iret
cwtl
pop
cld
stos
xor
sbb
fidivrl
mov
dec
mov
sub
rcr
loope
sub
nop
jl
xlat
push
jns
hlt
rcll
outsl
sti
frstor
in
clc
es
xchg
hlt
mov
ljmp
out
sbb
mov
push
jmp
xchg
int3
repnz
push
fwait
stos
cld
pandn
or
ja
cltd
pushf
push
incl
clc
int
lock
dec
mov
cwtl
xchg
in
inc
sbb
cld
xchg
shll
in
stos
out
jecxz
push
bound
inc
mov
popa
call
push
aad
sbb
mov
sbb
pop
mov
xchg
pushf
and
and
adc
add
ficoml
or
cld
pop
fwait
decl
das
dec
imul
mov
adc
out
push
ret
imul
inc
xor
mov
test
loope
lret
out
cmc
jnp
add
mov
lods
sahf
add
jp
cmpsl
jns
and
cmp
mov
or
jle
cmp
pusha
cmp
xchg
je
jae
sub
outsl
xchg
stos
push
movl
adc
and
fs
stos
jno
mov
insb
adc
jnp
imul
push
cwtl
iret
arpl
fcmovne
inc
pop
dec
push
mov
fidivs
rcll
inc
push
inc
rorb
xchg
js
inc
dec
bound
xchg
sub
mov
lret
fisubrs
sahf
cmp
add
mov
sbb
mov
leave
movntq
mov
arpl
jbe
jbe
xchg
sahf
jge
dec
mov
aaa
mov
and
push
cmpsb
push
int3
or
pop
pop
jmp
sub
add
ja
outsl
and
aad
pop
scas
push
lcall
xor
mov
ja
cmpsb
mov
jae
enter
daa
mov
mov
jno
jg
jl
sub
dec
rclb
sarl
movsl
call
and
pop
jge
dec
xor
xchg
int
mov
inc
xchg
fwait
in
pop
cmp
js
push
pop
adc
fildll
and
mov
push
outsb
mov
repnz
mov
jle
push
int
addb
push
add
mov
ja
bnd
int
mov
insb
pop
or
xor
push
fsubrl
js
sub
loope
sahf
cmp
test
sub
addb
test
lea
mov
lea
push
inc
sbb
mov
mov
shl
subl
shll
popf
sbb
cmp
into
faddl
dec
xor
mov
mov
stc
xchg
fs
adc
and
lods
jae
in
sub
fwait
out
mov
cli
popf
scas
lcall
leave
decb
or
js
je
gs
xchg
loopne
pop
ja
mov
jl
imul
add
in
xchg
lods
or
sbb
jae
adc
add
in
sub
or
mov
enter
les
add
arpl
xchg
mov
gs
divb
push
rcrb
lea
dec
mov
pop
insb
jg
adc
ljmp
inc
imul
dec
xor
xor
aas
outsb
adc
mov
in
inc
je
daa
sub
mov
or
jne
ret
mov
test
mov
adc
xchg
xor
cmpb
mov
int3
cmp
rclb
push
lock
mov
aam
push
and
ror
sarl
es
insl
lea
mov
mov
cmpsb
out
pop
cld
aad
lret
xchg
add
shll
repnz
pop
dec
xchg
shlb
push
mov
ret
xor
push
std
js
fisttpll
clc
popa
adc
xor
ljmp
jle
orl
push
cmp
mov
jno
push
jbe
add
ds
std
add
sbb
test
shll
mov
xchg
mov
dec
repnz
xchg
aas
sbb
clc
rorl
insl
xchg
pop
add
int
fstl
push
or
sbb
push
ds
xor
js
or
cmp
sbb
adc
jp
push
pop
push
sti
add
dec
ds
inc
inc
jno
test
pop
mov
cmpsl
dec
dec
pop
mov
sub
mov
sub
mov
jns
add
inc
fists
out
insl
cltd
sub
cmpsl
fsubrp
add
jp
bound
mov
sbb
mov
sub
adcl
jns
icebp
fbstp
pop
jl
inc
push
add
pop
inc
imul
in
push
popf
aaa
inc
mov
ds
mov
mov
sub
pushf
jnp
jecxz
scas
mov
lcall
jb
iret
xor
pop
mov
inc
cld
orl
insb
insl
mov
mov
leave
out
fcmovb
into
fstl
dec
cltd
pop
imul
lock
jge
mov
leave
adc
leave
xchg
xchg
hlt
js
arpl
lods
jbe
or
push
and
aaa
jae
or
hlt
add
sub
repz
dec
pop
sbb
ret
loop
xor
xor
cli
scas
dec
sbb
and
xor
popa
movsb
add
out
aas
cmpsb
cmp
fs
sbbb
enter
daa
mov
popf
shlb
call
cltd
dec
aas
or
ds
sub
and
cmpsl
lahf
pop
testl
test
mov
inc
dec
js
pop
sub
js
pusha
cmp
push
pop
pop
push
sarl
shll
mov
outsb
jmp
xor
arpl
ret
hlt
cmc
adcb
jge
pop
mov
xor
aad
int
sti
sub
int
fiadds
mov
push
addr16
xor
ds
sub
xor
sahf
fldt
rolb
test
pop
mov
bound
mov
popf
cmp
loop,pn
testl
dec
sarl
sbb
pop
into
mov
inc
in
xor
orl
loop
pushf
cmp
cli
lret
xchg
cli
data16
fsubrs
and
test
subb
ret
xchg
xor
mov
or
xchg
ret
cmp
sarw
inc
cmp
pop
shl
adc
int
imul
jecxz
add
in
lcall
movsl
pop
xlat
inc
dec
adc
mov
xor
sti
jae
ret
mov
aad
xor
nop
mov
fidivs
pop
xchg
fstps
sub
aad
jecxz
pop
inc
cmc
call
mov
pop
pop
dec
jns
sub
bnd
stos
daa
pop
and
mov
inc
inc
popl
aas
or
mulb
jl
cmp
enter
scas
fsub
std
push
sbb
cwtl
jge
divb
push
push
ret
xor
jmp
shr
mov
cmc
iret
mov
int
lock
das
cmp
andl
dec
xchg
ror
ret
sbb
je
dec
dec
ret
pop
enter
xchg
mov
jge
cmp
add
imul
movsbl
xchg
lea
pop
imul
sub
ret
adc
ja
shl
fnsave
clc
pushf
push
jmp
jb
stc
ljmp
sub
out
xchg
decl
les
push
sub
setge
dec
cltd
or
leave
mov
mov
xchg
shlb
test
inc
push
sbb
test
pop
scas
jno
stos
int3
sbbl
push
xchg
jbe
sub
cmp
call
adc
xor
push
mov
mov
int3
dec
pop
or
fbstp
loope
dec
xor
stc
inc
or
or
push
dec
fwait
pop
xor
mov
stos
cli
scas
mov
pop
mov
adc
xchg
bound
sbb
arpl
int
mov
out
pop
inc
sub
mov
fstps
mov
sahf
or
in
fs
adc
jge
push
stc
adc
sbb
jo
inc
stos
lret
adc
xor
push
or
popf
pop
test
bound
mov
out
ret
repz
jnp
and
scas
adc
sti
je
sub
sbb
xchg
mov
ret
mov
inc
pop
xchg
jno
jno
hlt
inc
push
les
push
dec
out
xor
js
adcb
jle
imul
aas
lds
daa
ja
dec
data16
mov
sbb
push
hlt
and
arpl
loopne
shrl
call
sbb
loope
aaa
xor
or
loopne
push
dec
fmul
fidivs
cmpsb
pop
dec
out
push
lret
xor
mov
lahf
scas
sub
cmp
insb
inc
sbb
out
into
movsb
nop
popa
pop
push
jae
je
mov
mov
jne
mov
cmp
imul
dec
scas
les
movsl
dec
pop
sub
int
js
adc
jmp
test
push
push
test
mov
and
aas
pop
mov
sub
xchg
les
adc
in
call
cmc
cmc
cmp
sahf
dec
outsb
dec
inc
push
adc
ds
int3
pop
sbb
cmpsb
jns
add
and
xor
lods
fmulp
mov
jae
dec
mov
rcrl
test
hlt
sub
inc
dec
sahf
jle
or
adc
cwtl
xorb
outsl
mov
mov
mov
shll
xorl
jne
cmp
jmp
fbld
lret
cmpsb
rcll
mov
ret
mov
inc
daa
xor
xor
sbbb
stc
hlt
adc
fs
cs
adc
pop
push
lods
inc
iret
lret
mov
je
out
cmpsb
add
add
sbb
pop
es
imul
gs
pusha
sub
loope
cld
pop
loopne
clc
adc
imul
test
add
das
push
xchg
xor
sbb
jmp
push
loope
adc
mov
sahf
xlat
or
and
stos
cs
mov
aad
faddp
nop
xchg
jno
dec
inc
mov
and
or
out
repz
fadd
fmuls
xchg
inc
call
pop
inc
inc
pop
ror
ficoml
cmpb
pushf
dec
inc
jecxz
pop
scas
movsb
pop
jp
inc
push
sub
lods
addr16
bound
je
jmp
jecxz
jle
div
pop
adc
lock
mov
sbb
sbb
cmpsl
mov
loopne
dec
mov
out
lock
mov
inc
addr16
and
nop
sbb
sbb
aam
pop
fwait
scas
dec
mov
mov
mov
push
or
sub
and
gs
mov
iret
call
sub
pop
mov
jp
pop
jnp
sub
fnstsw
aam
sti
cmpsl
ret
mov
call
mov
xlat
daa
in
xchg
mov
in
ljmp
pop
lods
pop
xlat
lahf
mov
jg
sub
sub
jns
cld
mov
add
xchg
lea
sti
flds
shrb
test
xchg
insb
xchg
or
fbld
shll
jbe
stos
mov
push
and
inc
lcall
cmp
aam
cli
or
mov
jecxz
ds
je
ja
jge
dec
and
mov
or
mov
mov
jne
sub
mov
cli
push
popa
jns
addr16
pop
dec
jle
into
mov
mov
or
aam
jp
cmc
pop
mov
inc
add
jmp
in
jo
in
pusha
scas
or
fildll
xchg
xchg
in
daa
lret
jmp
or
andl
push
adc
mov
push
and
push
and
and
fidivl
insb
push
mov
jnp
and
push
rcr
sti
adc
es
iret
repz
adc
jb
out
xchg
stc
inc
adc
jae,pt
pop
stc
inc
pop
mov
or
add
mov
jnp
fisubrl
into
insb
xchg
sub
cmp
imul
push
lds
arpl
repnz
jmp
leave
je
das
hlt
insb
xchg
insl
arpl
mov
jge
jo
sbb
enter
cs
movsl
into
xchg
int3
leave
adc
push
lods
sbb
xor
out
scas
pop
xor
aad
sahf
sarb
sbb
movsl
cmpsb
inc
push
in
dec
push
cmpsl
enter
daa
lahf
rcrb
cmp
mov
jl
lret
sbb
adc
movsl
push
inc
pop
and
call
push
ret
test
push
mov
inc
imul
sbb
jne
sub
shll
push
loope
and
cmp
cmp
rcrb
cmpb
dec
sbb
mov
fisttpl
add
fistps
push
sti
negl
sub
pop
xchg
loope
mov
inc
fsubrl
dec
outsb
sub
xchg
push
test
sbb
pop
mov
inc
sahf
mov
sub
lea
cmpl
test
iret
cmp
movsb
out
test
lret
movsb
shr
push
mov
sub
test
cmc
push
lods
jo
popf
add
outsl
pop
test
mov
fs
mov
adc
jo
xorw
sub
mov
jle
out
cli
or
cmp
or
pop
pop
cwtl
frstor
dec
loopne
xor
pop
pushl
mov
adc
jnp
add
or
sbb
and
ja
shl
sub
and
or
test
sub
daa
nop
jo
sub
inc
sahf
dec
push
jl,pn
pop
hlt
icebp
repz
mov
fcomi
mov
in
addr16
call
xchg
sbb
fstps
mov
cli
fs
jmp
ja
pop
push
pop
inc
fnstsw
enter
sub
add
dec
mov
int3
je
int3
ja
out
loopne
xor
test
mov
mov
push
sbb
dec
mov
inc
out
sahf
and
mov
gs
xchg
ljmp
enter
stc
out
and
out
shrl
daa
es
aas
insl
inc
cli
mov
mov
xchg
mov
sub
push
cld
push
mov
lret
aam
xchg
mov
fstpt
pop
cmpsl
test
sub
jno
out
fs
xchg
xor
push
inc
dec
mov
ret
clc
adc
outsl
ljmp
xchg
hlt
xchg
out
loop
mov
call
incb
pop
call
sbbb
std
js
cmp
dec
daa
and
test
subl
xchg
inc
mov
push
aaa
inc
pop
add
das
pop
push
repz
sahf
add
pop
data16
call
push
xor
or
add
mov
xchg
pop
orb
dec
pop
fcmovb
inc
ss
ja
sbb
fstps
mull
pop
mov
icebp
ret
out
into
repnz
bound
adc
in
jp
xchg
sbb
mov
sub
cwtl
push
push
addr16
push
jne
push
int3
mov
add
cmp
out
push
add
ja
aad
dec
fwait
loope
mov
in
sar
jmp
xchg
roll
cltd
sbbl
pusha
fiaddl
icebp
jmp
icebp
sbb
mov
call
mov
adc
popf
mov
push
adc
adc
icebp
mov
jae
mov
aas
or
jg
sbb
fcmovu
pop
rcll
push
sub
add
fidivrs
inc
push
mov
ret
leave
jmp
hlt
mov
clc
arpl
fnsave
sahf
mov
sbb
cwtl
aaa
mov
js
xor
jnp
cmp
into
int3
mov
inc
pop
cmpsl
push
adc
nop
daa
or
mov
scas
out
data16
movsb
loope
cmpsb
sbb
push
adc
ret
sbb
xor
les
daa
sahf
xor
cmp
sti
pop
jl
push
test
mov
sub
pop
iret
or
lahf
mov
sub
test
jmp
cmpsl
xchg
cmpsl
lods
or
jo
js
mov
subb
scas
loope
xchg
imul
enter
and
adc
hlt
jle
or
outsl
sbb
dec
add
icebp
push
xor
mov
dec
int
pop
cltd
sub
lea
lcall
mov
fimull
lods
sahf
les
xchg
test
ds
sub
xchg
jg
mov
mov
or
mov
pop
push
and
fcompl
fcomps
adc
jg
test
nop
lahf
jns
andl
out
sbb
pop
mov
cmc
sbb
cmp
clc
arpl
loop
les
fs
inc
jmp
push
add
lods
movq
mov
cmpsb
add
imul
lcall
or
incb
jnp
adc
pop
push
and
adc
jge
adc
lds
add
rclb
push
cmp
push
xlat
push
es
mov
xchg
in
je
cmp
adcb
mov
aad
gs
nop
dec
popa
dec
dec
add
incb
push
push
flds
lods
les
pop
jecxz
jbe
mov
lea
call
add
out
adc
sbb
pushf
movsl
pop
sbb
std
add
or
lods
xor
xchg
and
aas
ljmp
dec
daa
je
add
jecxz
push
idivb
ret
std
dec
inc
mov
mov
fwait
xchg
mov
jl
dec
stos
or
movsb
mov
inc
pop
lock
dec
mov
mov
mov
test
sarl
mov
sub
ret
cmpsl
popf
jae
mov
add
or
adc
mov
fstpl
fbld
and
cmp
fiadds
aam
fs
mov
sub
fucomp
mov
dec
xchg
das
or
ja
and
jne
or
in
inc
aam
xchg
das
push
push
loop
sbb
mov
scas
mov
and
jmp
jbe
mov
repz
sbb
sbb
shlw
dec
pop
mov
push
cltd
lods
aas
push
xchg
pop
mov
add
pop
pushl
rorl
nop
dec
nop
mov
imul
jo
cmp
inc
std
dec
or
inc
int
mov
fwait
ljmp
jne
mov
js
lods
or
bound
fldenv
ds
and
add
insb
inc
test
inc
rorl
sbbl
xchg
cmpsb
js
std
pop
adc
mov
add
mov
dec
aaa
jle
xor
in
sbbl
lods
mov
xchg
xchg
add
sti
sub
xchg
mov
imul
lcall
mov
lahf
cs
mov
and
out
insb
sub
dec
scas
ds
notb
mov
lret
mov
pop
pop
repnz
sub
dec
jae
jle
inc
pusha
ljmp
cli
pushf
dec
inc
lds
ficoml
sub
sti
daa
add
ficomps
mov
shlb
cmp
adc
adc
hlt
add
mov
jge
mov
add
jge
stos
lods
sbb
mov
outsl
into
or
inc
mov
roll
int3
lahf
dec
ljmp
es
pushf
dec
stos
scas
lds
and
sbb
xor
push
pusha
outsl
mov
in
sbb
ret
enter
daa
popf
push
nop
cmp
jno
repz
jl
scas
in
dec
sti
mov
jnp,pt
lcall
xor
push
push
out
push
mov
das
inc
xchg
push
mov
js
add
pop
dec
sbb
insl
ja
loope
xor
addb
add
adc
iret
vfrczss
dec
mov
add
push
pop
xor
nop
outsb
push
add
das
int
call
sbb
lcall
xor
test
jae
addr16
cmp
addb
clc
jg
cmp
mov
add
dec
mov
into
jns
mov
pop
jl
push
xor
sbb
idivl
add
lret
push
rcrl
add
push
sahf
into
dec
fs
jecxz
out
xor
pop
outsl
sbb
cmp
stc
sbb
cmc
fs
call
xchg
pop
andl
lods
mov
out
insb
sub
pushf
and
les
cmp
push
mov
aaa
test
and
adcb
pop
cmp
sbb
imul
arpl
xchg
jnp
ljmp
fiaddl
sub
dec
mov
outsb
sti
das
inc
xor
lock
nop
imull
inc
les
or
js
dec
les
inc
mov
mov
gs
test
adc
sub
jmp
push
ds
mov
pop
inc
jmp
testb
stos
aas
mov
dec
sahf
das
sti
je
mov
jecxz
jno
mov
sbb
dec
mov
pop
sbbl
lret
jne
and
dec
int
mov
shlb
rorb
and
movsl
roll
int3
push
es
insl
insl
adc
scas
mov
pushf
sbb
mov
fnstcw
mov
mov
in
xor
stc
int3
out
pop
in
xor
shr
int3
sub
out
mov
ret
dec
lds
fstl
not
clc
mov
xchg
outsb
inc
out
cmpsb
clc
cmp
fnsave
lcall
out
test
adc
mov
push
lar
shl
cltd
out
leave
test
lret
fldenv
xchg
iret
decl
push
testb
xchg
jle
sbb
and
sarl
pop
stos
mov
movsb
push
cmp
add
xchg
cmp
call
xor
outsb
or
mov
lods
mov
mov
cmpb
std
jge
inc
repnz
repz
mov
sbb
mov
mov
sub
call
ret
in
fcmovnu
xchg
mov
mov
sub
mov
repz
loopne
jp
xchg
out
das
push
dec
mov
outsb
test
pmulhw
hlt
jmp
xchg
data16
jmp
insb
shrl
adcl
adc
pop
sti
adc
mov
add
push
hlt
stos
and
and
aam
insb
xchg
jns
jnp
mov
call
rorb
xchg
leave
iret
adc
ret
xchg
aam
xor
out
jae
mov
jb
outsl
mov
push
inc
cmp
fiaddl
xchg
xor
sbb
pop
and
movsb
xchg
fiadds
sbb
sarb
cmp
push
aaa
pushf
hlt
dec
lods
push
arpl
cwtl
jge
pushf
mov
or
cs
inc
or
fldl
push
or
add
sbb
jo
lret
movsb
jns
and
xor
mov
cmp
in
add
inc
daa
pushf
jg
cmp
adc
jl
dec
push
dec
ds
push
test
addr16
aad
inc
lods
fcomps
cmp
das
test
jg
mov
push
jno
sub
jmp
js
fdivrl
pop
mov
jmp
inc
fisttpll
cmp
shrb
sbb
xchg
shrb
cmc
lds
sbb
add
adc
xor
ret
push
push
add
insb
int
sahf
outsb
sub
mov
lcall
mov
xor
sahf
or
test
lahf
mov
jg
jmp
mov
xor
mov
xchg
lods
and
push
cwtl
cmp
aad
aaa
idiv
insl
ret
lret
imul
je
mov
pop
sbb
pop
int
cs
cmc
stos
xor
xor
lock
cld
jecxz
stc
rolb
fs
mov
data16
pop
lods
fnstsw
mul
jnp
pop
cli
iret
mov
and
outsb
mov
insl
incb
lea
les
dec
mov
pop
pop
add
adc
pop
imul
push
jmp
xchg
ds
sbb
aad
mov
sub
cmpsb
xor
dec
mov
sti
fsubrp
adc
aad
jnp
nop
add
dec
inc
xlat
inc
lcall
and
ja
in
lahf
lea
inc
jl
xor
movl
roll
adc
mov
pushf
sti
movl
push
fldz
inc
jb
dec
inc
leave
xchg
ds
sub
rorb
sub
jecxz
addr16
mov
std
lcall
mov
sub
jmp
dec
add
fistpl
jnp
jl
pop
lock
push
subb
dec
xchg
mov
push
ds
add
xor
push
mov
xchg
insl
imull
dec
stos
fdivp
cmpsl
fwait
inc
fs
mov
loop
fadds
out
lret
and
jns
jmp
sub
add
sub
sub
cmp
mov
push
aaa
mov
aaa
sbb
lods
mov
popa
push
es
mov
or
xchg
mov
dec
inc
vmread
cltd
sbb
test
add
outsb
shrb
mov
sub
adc
pop
push
rorl
push
fdivl
add
mov
or
out
out
xor
cltd
test
fldenv
mov
out
mov
pop
mov
ret
adc
dec
lock
sub
mov
dec
fwait
dec
lods
stos
dec
mov
loopne
mov
imul
jns
loop
in
or
xchg
or
cld
out
mov
sbb
mov
insl
jp
mov
push
dec
dec
mov
ffree
cmp
ds
mov
jg
sbb
cmp
cmp
scas
xchg
aaa
in
incb
and
popf
and
mov
sbb
js
and
out
insb
add
lea
rcl
scas
add
repnz
out
aas
ret
adc
aaa
iret
outsl
inc
xchg
ret
ss
lret
loopne
inc
ds
cmp
push
jns
data16
roll
sbb
xchg
idivl
xchg
mov
cmp
lcall
mov
dec
rcl
outsb
mov
mov
add
arpl
sub
sbb
jecxz
or
push
fxch
jne
push
pop
xor
in
cmp
loope
loopne
lret
jo
popa
subb
lea
cmp
cltd
movsb
inc
sub
push
incb
cmpsb
dec
in
in
ljmp
daa
fwait
insb
es
sar
jno
push
jge
outsb
jecxz
dec
ftst
ret
push
test
loop
test
adc
xchg
push
push
iret
daa
test
dec
subl
lock
sub
js
dec
inc
pop
int
in
push
or
pop
mov
pushf
cmp
dec
outsb
cmp
sub
test
xor
add
int3
sub
pop
and
nop
cmp
push
pop
lods
xor
aaa
push
sub
test
call
mov
fsubrl
outsl
push
fstpl
mov
mov
aas
mov
push
mov
daa
mov
mov
and
mov
and
nop
cli
push
idivl
call
mov
and
pusha
xorb
cmp
xor
cli
pop
outsl
fistl
jmp
pop
push
stc
xchg
mov
adc
push
mov
popa
shrb
push
ss
jp
jge
add
xor
jb
in
cltd
cmc
dec
or
pop
push
gs
push
mov
call
jl
adc
testb
in
adc
lcall
add
cmp
insl
cmpsb
xlat
mov
mov
mov
mov
jl
lea
cs
adc
adc
fmuls
and
cmp
out
mov
inc
mov
repz
mov
lea
jp
movl
sti
enter
xchg
jmp
ds
pop
notb
and
fisubs
aas
mov
jb
xchg
dec
mov
clc
je
xchg
scas
jecxz
dec
pop
testb
std
inc
je
cwtl
fistpll
mov
cmp
push
mov
or
fcompl
fcmovne
pop
pop
mov
out
adc
lock
mov
jae
mov
aad
sbb
call
push
insl
ficomps
dec
movsl
lds
lcall
icebp
xchg
and
lret
nop
adc
and
das
in
cli
pop
and
inc
shlb
or
ret
das
data16
stc
es
insb
pop
xor
insl
jo
pop
sbb
cld
xchg
in
loope,pt
mov
lods
popa
addr16
jns
jo
ss
outsb
ss
xchg
add
mov
xchg
adc
xlat
aad
add
add
cltd
push
andl
es
mov
dec
fildl
ret
stc
je
in
out
sbb
sbb
xchg
shrl
call
stos
mov
jg
cwtl
add
lret
pop
lods
decl
lcall
jno
aaa
mov
xor
mov
outsb
ret
sbb
insb
dec
jecxz
or
xchg
mov
or
cmp
fwait
ja
dec
dec
and
jne
pop
enter
mov
dec
bound
jns
sbb
in
lea
xchg
pop
mov
lock
test
movsb
addr16
jl
jp
xor
mov
test
dec
mov
jle
xor
in
es
mov
push
fisttps
lcall
loopne
cmp
fsub
push
jecxz
push
popf
dec
ret
sub
inc
adc
and
dec
insb
imul
in
xor
ss
adc
or
into
push
mov
jae
push
pop
add
cmp
jae
mov
inc
imul
push
inc
divb
fisubrl
aas
adc
inc
icebp
imul
fiadds
and
shl
es
push
xchg
jl
jb
hlt
jecxz
cld
arpl
jmp
jge
and
cmp
xor
or
sub
add
fdivrs
mov
pop
xor
lods
or
scas
bound
add
xor
movsb
rolb
xor
rorl
or
lcall
jno
mov
jl
mov
xor
in
pop
movsl
jne
add
jge
fcompl
loope
pop
test
adc
dec
das
mov
jg
jb
adc
pop
or
lods
push
loope
loope
mov
sub
mov
test
push
sub
pusha
cmp
popl
js
sbbb
int
lock
lods
adcl
divb
pop
add
xchg
lcall
mov
xchg
or
pop
leave
pusha
sahf
push
mov
sbbb
jg
pop
push
mov
sub
mov
sub
xchg
and
and
mov
cmp
dec
scas
pop
idivl
pop
lret
std
rcr
and
rol
hlt
mov
xor
outsl
mov
sarl
fs
pop
adc
mov
out
mov
dec
dec
out
xchg
xor
and
rorb
cmp
mov
cmpsl
gs
dec
jno
xorl
clc
mov
imul
xor
add
jb
fdivl
cmp
cli
xlat
sti
fs
ret
jnp
mov
and
sti
cmp
xchg
sbb
xchg
nop
mov
or
jmp
sbb
sbb
aas
ret
fimuls
lock
inc
call
add
pop
pop
add
and
mov
and
mov
inc
and
andb
lcall
aas
data16
cmp
cmp
je
sbb
testb
cwtl
lcall
mov
mov
arpl
es
push
leave
fcomp
cli
dec
mov
mov
lock
test
das
push
mov
mov
sbb
cmc
es
xor
insl
lds
push
dec
mov
daa
ret
mov
pop
mov
cld
cs
lret
decl
mov
stc
add
pop
inc
add
dec
sub
mov
daa
faddp
sti
or
push
adc
push
popa
clc
cmp
xchg
sub
inc
ljmp
sti
lods
fistl
dec
mov
shr
xchg
dec
call
inc
add
in
cltd
mov
test
repnz
mov
sub
xchg
dec
cmovge
imul
sbb
aaa
mov
pop
pop
notb
push
and
add
out
ret
ljmp
dec
test
add
xor
mov
mov
jne
mov
sub
lds
idivl
cmp
inc
sub
rorb
popf
mov
cmpsb
sub
jne
xchg
mov
xchg
enter
mov
bound
jns
clc
sub
xchg
test
ss
jns
sub
jg
cmp
nop
jl
dec
mov
mov
sub
fstps
aas
jle
sbb
in
iret
sbb
nop
rcr
sub
or
xlat
dec
fists
fldenv
cmpsb
jae
popf
outsl
cmp
fwait
cmpsl
or
fs
insb
mov
jnp
inc
xchg
scas
lret
push
jge
loope
and
int
ret
inc
pop
cmp
inc
push
pop
xorb
dec
inc
insb
lret
movsb
rolb
rcrl
xchg
aaa
in
sbb
idiv
imul
push
fsubrp
xor
add
or
mov
repnz
dec
push
leave
xchg
arpl
and
jge
int3
pop
sbb
aaa
gs
imul
or
add
ljmp
xchg
adc
push
ljmp
in
jo
lret
inc
loop
and
fidivrs
call
test
xor
cmpsb
push
pop
add
mov
push
mov
cltd
shlb
cmp
test
jl
addr16
dec
mov
lea
pop
lods
imul
push
orb
bound
test
loopne
add
pushf
std
jbe
sbb
push
ret
js
loop
pop
dec
adc
loope,pt
fidivrl
adc
push
mov
mov
sarb
fwait
stos
gs
lds
daa
popf
mov
xor
hlt
or
or
push
inc
sub
xor
push
in
repnz
sub
scas
sahf
repz
fiadds
jge
insb
mov
div
mov
jle
frstor
inc
cmp
push
clc
or
cmp
ror
inc
fld
je
scas
mov
mov
insl
into
xlat
fistl
cmp
xor
pop
int
mov
test
cmc
jecxz
fs
into
leave
adc
pusha
mov
nop
lods
xchg
dec
mov
out
lods
gs
push
mov
cmp
jecxz
or
or
scas
sub
gs
test
push
pop
mov
mov
lock
and
pop
adc
xchg
xchg
sbb
xchg
xlat
cmp
xor
ss
jb
out
adc
sti
jmp
or
jl
mov
nop
xchg
push
ss
fnsave
insb
fsts
les
mov
sub
fisttpll
mov
ds
pop
mov
cwtl
adc
inc
xchg
pushf
cld
sahf
pop
jmp
cmp
inc
pop
dec
sbb
aas
add
add
dec
jp
inc
je
icebp
cmpsl
jecxz
fists
test
push
std
mov
cwtl
push
rcll
in
mov
sbb
into
dec
inc
mov
fldt
add
mov
mov
rorl
dec
das
xor
sub
mov
adc
imul
rorl
dec
push
cmpsl
cwtl
fidivs
xor
int
lret
outsb
inc
mov
add
cmp
popa
inc
jb
sbb
pushl
aam
stos
jne
mov
or
xor
inc
xchg
push
fucomp
jb
inc
popa
xchg
fsts
lods
inc
xor
ja
in
xor
add
sub
setne
xor
mul
test
pop
mov
dec
xor
dec
xchg
mov
movl
sbb
stos
inc
cltd
or
lds
add
add
std
dec
lahf
or
subb
or
fdivl
movsl
pusha
mov
mov
sub
pop
in
and
lcall
inc
rolb
or
shll
aad
push
dec
dec
jge
jne
addb
or
idivl
js
in
mov
testl
push
or
in
clc
sub
jp
fwait
mov
mov
sub
shl
mov
xchg
out
dec
lcall
into
outsl
adc
pop
ljmp
ljmp
fimull
add
jnp
add
stc
jnp
sahf
loopne
sub
in
adc
adc
iret
mov
cmp
jo
jns
pop
psrad
iret
es
outsl
in
or
popa
xor
adc
adc
xchg
mov
imul
test
lds
dec
shlb
in
aam
jo
mov
sub
mov
inc
hlt
jns
imul
adc
jge
dec
in
mov
xchg
aaa
sub
or
dec
in
insb
sbb
ss
sbb
daa
mov
loop
shll
arpl
and
in
lahf
add
call
or
rcrl
cwtl
adc
cwtl
dec
aaa
cmp
out
and
cmpl
les
sub
shlb
mov
xor
push
xchg
push
test
stos
mov
xor
cmp
sub
js
or
aad
lods
lods
ss
and
sub
lock
cmp
sbb
mov
mov
pop
or
ds
lock
inc
ret
xor
movb
mov
int
pop
sub
and
or
add
dec
push
inc
inc
scas
jle
sub
mov
xchg
sti
and
dec
adc
orb
lock
cmc
mov
mov
sti
lret
and
add
ss
mov
cmp
rcl
idiv
cmp
lret
lods
rorl
mov
adc
or
in
mov
into
mov
pop
lds
sbb
js
add
dec
xchg
or
lods
mov
fs
xor
pop
int3
stos
data16
ja
jns
jae
divl
xchg
ja
or
fwait
es
cmp
cltd
push
or
sub
rolb
fnstsw
mov
cld
aaa
adc
mov
arpl
xchg
sti
mov
dec
aaa
sti
sbb
rcrl
sub
and
idivb
sti
lcall
aad
pop
mov
dec
cmp
mov
and
pop
test
ja
lock
lea
lock
ljmp
add
sbb
cmp
jne
cmpsl
mov
jmp
pop
pushf
pop
fbstp
inc
mov
aam
movsb
mov
jb
or
dec
icebp
jbe
je
push
fdecstp
or
fs
adc
mov
addb
fbld
adcl
jl
mov
dec
sahf
mov
adc
das
adc
mov
cli
push
or
rcll
add
dec
xchg
repnz
cmpsl
xchg
sbb
or
inc
cld
test
cmp
mov
rclb
pop
addb
sub
sbbl
fst
test
xchg
test
outsl
js
lods
mov
lods
mov
inc
mov
xchg
sub
xchg
rclb
rclb
add
adc
inc
push
aam
in
fldl
clc
repz
aas
shrb
shrl
add
mov
add
push
push
pop
add
or
imul
xor
inc
push
or
mov
xor
out
mov
sti
add
mov
lahf
jp
ja
jmp
dec
mov
pop
cmp
sub
jge
stos
shrl
out
out
cmpsl
bound
popf
or
mov
pop
xchg
inc
fwait
mov
pop
add
sub
jne
push
testl
mov
xchg
xor
in
jle
lret
test
jmp
fbld
ss
test
jmp
arpl
push
sub
pop
popf
mov
mov
fs
bound
and
cmpsl
mov
repnz
cmp
in
adc
adc
iret
jmp
icebp
ret
insl
pop
cmpsl
insl
pop
inc
push
test
inc
jb
jo
jb
shrb
jnp
mov
jmp
xchg
in
arpl
sbb
fidivs
pop
fld
roll
and
inc
sbb
mov
pop
data16
sub
in
les
arpl
pusha
pushl
out
jge
mov
sbb
fidivl
jmp
gs
add
adc
and
in
pop
lock
lds
and
cld
inc
pop
jo
andb
xchg
xlat
dec
cmp
fbld
sub
cmpsb
pop
sahf
sub
xchg
fwait
inc
daa
xchg
dec
lds
mov
mov
push
dec
xchg
mov
dec
aad
movsl
mov
mov
push
pop
imul
loope
cmp
cld
mov
dec
js
lret
or
push
mov
shrb
leave
sarb
notb
leave
xor
mov
icebp
cwtl
es
and
adcb
sbb
lahf
fbstp
int3
mov
xchg
sub
add
jg
das
lcall
faddl
bound
cmp
test
or
inc
jg
test
repnz
xchg
and
daa
add
popf
lock
cmp
jl
add
lret
test
mov
rcrl
into
popf
dec
cmp
loop
xor
jmp
push
mov
push
stc
arpl
inc
adc
andl
adc
repnz
arpl
into
inc
insb
xor
inc
sti
cmp
and
or
fs
cmc
into
shlb
outsb
loopne
lcall
test
imul
stc
jecxz
and
mov
call
xlat
mov
add
mov
popa
dec
insb
sti
dec
fisubl
cs
mov
aad
mov
dec
fwait
dec
loopne
ss
sbb
ret
les
push
pop
fidivl
repz
lea
xchg
jecxz
jle
jmp
adc
push
xchg
jmp
inc
in
pop
addb
inc
push
xchg
sti
aas
inc
xchg
jl
xor
push
sahf
mov
pop
andl
loope
std
fnstsw
cwtl
lret
pop
lret
mov
sahf
mov
push
sbb
dec
pop
mov
fildl
cli
test
pop
arpl
out
adc
mov
mov
mov
shl
push
dec
es
cmp
add
xchg
sub
mov
jecxz
scas
jne
lret
dec
jg
mov
push
int3
ret
mov
lahf
iret
inc
rol
aas
and
lahf
pop
adc
lods
add
push
pop
int3
xor
clc
ljmp
ljmp
mov
mov
cli
mov
jno
fbld
push
add
cltd
xor
mov
pop
sbb
pop
ucomiss
mov
popf
dec
rol
adcl
and
popa
add
aaa
xchg
fwait
decl
das
int
es
mov
xor
jnp
mov
jns,pt
mov
pop
xor
jbe
scas
dec
push
inc
out
fildll
fwait
xor
cwtl
jne
mov
out
adc
and
data16
in
filds
out
ja
sub
jo
xor
in
jp
aad
mov
adc
mov
or
nop
and
and
pusha
and
xchg
adc
mov
fs
subl
out
pushl
in
lods
mov
pop
in
lods
stos
aad
bound
test
pusha
cmpl
or
push
dec
adc
cmp
ret
add
inc
jne
xchg
jmp
jne
decb
push
jle
inc
mov
outsl
xchg
cmp
and
test
add
loope
lds
hlt
rcrb
mov
pop
mov
fcomip
movsbl
out
out
outsl
js
jge
add
test
sbb
int3
cmp
hlt
fldl
or
mov
pop
mov
jb
ret
pop
dec
jo
jge
scas
fisubrs
and
in
cmp
or
sub
push
mov
fsubr
insl
notb
xchg
leave
cld
cmp
lcall
iret
mov
jl
fs
dec
add
test
jo
andl
scas
aad
push
sub
mov
dec
inc
jo
mov
mov
mov
pop
pop
or
sbb
into
sbb
cmp
mov
sbb
int3
xor
dec
andb
int3
and
fcoms
xor
fmul
xchg
xchg
or
push
stc
push
pop
pop
jae
add
sbb
push
mov
sub
sbb
cld
test
or
jg
jne
mov
rorb
ret
and
lods
ss
fistpll
aaa
dec
mov
ja
lcall
into
hlt
mov
cltd
lret
pop
into
xorb
push
lret
mov
outsl
ss
mov
outsb
and
stc
sbb
add
adc
mov
pusha
mov
imul
inc
arpl
add
idivb
jg
or
jp
sbb
pop
gs
and
out
ficoms
adc
adc
push
imul
xchg
cwtl
xchg
sarb
js
inc
cmp
stc
or
notl
andb
jmp
sti
clc
and
aad
pop
push
nop
and
dec
cli
and
inc
dec
cmpsl
fyl2xp1
cmp
jp
xchg
repz
mov
testb
mov
mov
std
mov
jae
adc
ds
pushf
std
jmp
xchg
pop
and
pop
fiadds
int
aas
loop
pusha
jb
mov
shlb
stos
jecxz
mov
lods
std
test
cwtl
xchg
sbb
lds
push
cmpl
mov
mov
gs
lock
into
dec
call
mov
inc
cld
cwtl
shll
cltd
es
mov
and
hlt
inc
cmpsl
xchg
sbb
mov
mov
pop
js
mov
hlt
adc
ss
dec
pop
mov
pop
scas
sub
sub
aaa
jne
push
and
frstor
xchg
xchg
clc
and
aaa
and
lret
mov
xor
xchg
mov
pop
aas
push
xchg
addr16
push
mov
pop
sub
outsb
andl
pop
push
mov
inc
aad
pop
cli
fimuls
push
xchg
cmp
shll
or
dec
stos
adc
push
scas
test
push
pop
pop
ljmp
adc
or
pop
shll
mulb
andl
pop
adc
out
fmull
popa
add
or
insl
mov
bound
dec
repnz
push
jne
movsl
mov
out
movsl
inc
in
mov
rolb
movb
out
pop
jl
mov
divb
jp
add
adc
push
mov
inc
jle
dec
pop
in
pop
outsb
pusha
mov
mov
hlt
jmp
stc
ja
cmp
rclb
mov
mov
push
lods
or
pusha
rep
dec
cmpl
sub
jnp
dec
les
cltd
movlps
xchg
pop
adc
test
push
xor
adc
es
inc
js
sub
rolb
xor
sub
adcl
in
jno
fidivs
mov
fbld
xor
js
xchg
mov
lods
dec
arpl
sbb
hlt
pop
mov
mov
jge
das
jle
in
popa
aaa
test
mov
addr16
notl
pop
dec
add
mov
xor
je
icebp
scas
mov
xor
cmp
xlat
icebp
movsb
mov
push
fdivs
add
push
dec
popa
enter
daa
xchg
into
int
or
jno
lret
jo
sahf
dec
jae
out
ds
int
movsl
cwtl
popa
and
jle
add
lret
test
or
pop
inc
decl
sbb
movsl
test
pop
inc
push
mov
loope
into
sbb
call
stos
adc
cmpsl
out
loope
popf
xorb
sbb
out
insb
add
push
xchg
xor
dec
push
sbb
aad
stc
sub
xchg
loopne
pop
jge
dec
lcall
test
frstor
mov
sahf
jg
lahf
test
inc
xchg
sbb
cmp
inc
stc
mov
sub
mov
cmp
sbb
xorb
shl
mov
loop
divl
ret
sbb
rcl
or
sbb
leave
into
arpl
cmpsb
xor
inc
and
and
loop
aaa
jmp
mov
sub
or
sbb
pop
cld
lods
cs
mov
lods
out
sub
cli
xor
lret
data16
fwait
mov
or
inc
clc
gs
stos
jmp
xor
outsl
sbb
push
push
adc
and
inc
dec
cld
xchg
xchg
int
sbb
jb
mov
ss
das
sub
fidivs
dec
sub
aaa
bound
cmpsl
sub
mov
nop
jne
dec
pop
sti
test
inc
ret
fnstenv
les
aad
stc
jo
repz
call
jl
xchg
pop
subl
pushf
test
bound
inc
and
jp
xchg
aas
xorl
enter
jecxz
aaa
or
shr
sub
sub
jbe
inc
inc
mov
inc
push
inc
adcl
popf
frstpm(287
jl
mov
mov
lret
and
das
lods
adcb
int3
jmp
and
mov
mov
insl
dec
stos
movsl
dec
xchg
cmpsl
xchg
loop
mov
xchg
and
cld
add
int3
dec
mov
sbb
push
mov
shrb
add
lea
aam
std
push
ret
jns
push
in
jnp
dec
lock
pusha
outsb
stos
xchg
mov
ljmp
add
fists
shlb
push
xchg
sbb
adc
sub
push
js
xchg
xchg
sub
imul
lret
nop
mov
outsb
pop
mov
ret
test
add
insl
stos
add
xor
enter
cmp
xor
mov
pop
mov
mov
mov
shlb
ja
ss
xchg
sub
cmp
repz
aad
fbstp
and
out
test
cmpb
stc
in
sbbb
loop
xor
mov
mov
xchg
jp
loopne
mov
les
mov
add
jle
test
mov
jns
ffreep
lret
jmp
xchg
fbstp
orl
lret
jmp
mov
pop
and
and
push
subl
jnp
mov
cld
push
loopne
leave
adc
iret
or
lahf
ret
sub
shrl
mov
dec
jae
aas
xchg
inc
jnp
sub
dec
pop
pop
inc
cmp
adc
fcoml
aas
sbb
fimull
fadd
ficomps
push
dec
rclb
fdiv
add
add
xchg
subl
add
insl
jbe
imulb
incl
sbb
in
mov
mov
jle
and
test
pop
jge
insl
push
outsb
add
xor
iret
lods
scas
scas
pushf
loopne
and
mov
jnp
pop
movsb
adc
icebp
push
daa
sbb
cmpsb
jecxz
cmpsl
in
cmp
daa
xchg
push
sub
cmp
jge
jl,pt
xor
ds
in
movsl
lahf
xlat
jmp
lahf
in
ja
push
shll
test
xlat
xchg
mov
out
pop
pop
je
js
jge
pop
xchg
int3
push
mov
loope
movsl
cwtl
sub
dec
in
cmp
xchg
outsb
repnz
add
push
push
hlt
rolb
pusha
and
cmp
out
mov
xor
ljmp
pusha
pop
mov
pop
cld
pop
mov
imul
call
sub
sahf
and
cmpsl
test
push
cmp
jne
cwtl
sbb
mov
xchg
mov
mov
jno
push
sarb
psraw
cmc
dec
inc
lret
imul
mov
push
dec
inc
mov
insl
xor
pop
pop
loop
adcb
mov
fs
cmp
mov
lods
adc
repz
out
xchg
adc
shll
xor
mov
or
sub
pop
push
mov
pop
push
xor
mov
fiaddl
sub
xchg
xchg
push
xchg
lret
sbb
lods
mov
shrb
jne
or
mov
std
cs
aad
jbe
nop
fnstcw
loop
outsl
adc
fldenv
sbb
nop
insl
cld
repz
fcmovnb
cld
adc
lea
popa
call
sti
cli
xor
ss
adcl
out
icebp
pushf
push
xchg
scas
jmp
xchg
mov
inc
stos
stos
sub
jg
aas
and
mov
inc
mov
int
mov
dec
pop
mov
notb
lahf
outsl
std
shlb
cwtl
cld
adc
add
je
sub
mov
sub
mov
push
jl
jno
mov
outsb
mov
pop
fwait
gs
stos
movsl
movsl
adc
dec
addb
xchg
sub
loopne
push
test
lret
cltd
cwtl
cmp
and
insb
iret
mov
sarb
dec
sub
mov
push
cmpsl
xchg
jle
outsl
xor
xchg
movsl
imul
jg
lods
pop
sub
mov
and
dec
xchg
cmc
pop
add
xchg
popa
pshufw
add
mov
jae
fdivs
sbb
mov
addl
push
xor
lret
out
pop
pop
pop
inc
ljmp
hlt
aad
add
mov
jmp
and
pop
mov
or
mov
out
mov
pop
mov
mov
mov
sbb
dec
mov
xor
dec
inc
fwait
rolb
jne
push
push
out
arpl
cmp
cwtl
push
in
dec
in
xchg
cmpb
gs
sub
popa
adc
repz
jp
jae
mov
sbb
mov
push
inc
inc
jle
xchg
in
in
stc
sub
jecxz
loopne
xchg
shll
jmp
fwait
stos
sbbl
inc
push
cmp
scas
mov
adc
jl
and
xchg
insb
pop
xorl
sbb
ficoms
lret
inc
in
dec
iret
addr16
mov
clc
scas
pop
pop
cmpl
inc
xchg
test
inc
jle
and
push
mov
xchg
inc
mov
sbb
test
imul
repnz
lods
shrb
xchg
repnz
add
hlt
lock
arpl
push
in
jbe
in
jge
cmp
sbb
jnp
in
xlat
or
adc
sbbb
xchg
push
xchg
xor
sub
scas
jnp
mulb
jecxz
inc
cmp
out
dec
movsb
lahf
pop
call
dec
push
cmpsb
cbtw
jg
and
mov
cmp
xchg
jno
push
push
dec
push
call
add
mov
dec
call
std
scas
test
mov
and
pop
andl
js
mov
lds
shrb
jne
loope
mov
bound
mov
adc
rcrb
sbb
sbbb
mov
pop
shlb
or
xchg
int
adc
jnp
mov
div
inc
fdivl
adc
sub
in
sahf
lds
inc
test
test
sbb
lock
xchg
dec
mov
pop
je
aaa
pop
imul
lock
shl
pop
sahf
lret
jecxz
loopne
mov
jmp
into
sub
xorl
movsb
das
outsl
rcrl
mov
mov
loopne
cmpsw
std
imul
adc
mov
xor
push
xor
icebp
mov
or
sbb
enter
rolb
adc
add
adc
cwtl
lea
popa
jge
xchg
sbb
stos
sbb
call
les
call
jmp
or
xchg
and
into
pop
or
dec
aaa
mov
mov
jno
pop
mov
ljmp
jo
repz
loope
ljmp
sar
call
jp
dec
pop
jmp
jge
pushf
test
jmp
mov
pop
push
xor
inc
xor
pop
inc
mov
fisubrs
dec
inc
ret
xchg
out
jecxz
sti
inc
negb
mov
jns
add
les
mov
pop
mov
ret
jae
fildl
pop
mov
jnp
jnp
mov
das
imul
mov
fisttpl
and
call
inc
sub
insl
push
in
dec
jge
pop
cmpsl
xchg
cld
push
mov
aas
out
cld
pop
mov
lret
or
das
mov
sub
pop
sbb
rorb
ffreep
sub
mov
ret
in
fs
push
add
xchg
push
and
mov
xchg
in
fucomp
and
stc
popa
pop
or
lods
enter
xchg
movsb
sbb
xchg
loopne
dec
js
bswap
jo
add
mov
test
or
xchg
std
push
dec
sti
fs
xchg
cmpsl
pop
jge
or
mov
ficoms
cli
add
mov
jge
xor
pushf
or
add
sbb
ds
xor
inc
xchg
jle
inc
call
push
inc
dec
dec
xchg
or
jnp
fwait
out
add
jne
dec
iret
mov
or
bound
out
jns
icebp
leave
in
jno
xchg
rcrl
out
int
sub
pop
mull
mov
mov
cwtl
sub
push
or
mov
inc
in
jle
sub
in
pop
push
pusha
mov
filds
sti
out
xchg
movsb
mov
jmp
pop
stos
push
subl
xchg
popf
add
mov
push
aad
stos
mov
fisttpll
ret
mov
jg
mov
outsb
mov
test
test
sub
mov
xor
inc
addl
push
cmp
mov
push
add
mov
js
lds
ror
or
cmpsb
sub
leave
jg
pop
hlt
cmp
sub
inc
jge
adc
adc
dec
imul
xorb
push
jo
int3
mov
rorb
fistpll
mov
scas
pop
bound
jmp
psubd
mov
mov
or
xchg
daa
xchg
cmc
cmp
mov
in
cmpb
dec
rcrb
cld
addr16
movsl
lods
out
lods
and
cmp
jns
test
divb
push
insl
jl
inc
lods
dec
popf
lret
addl
js
cs
pop
add
fwait
push
in
sti
loope
sarb
je
cmp
pop
outsb
mov
or
sarb
jno
and
mov
and
test
outsl
add
bound
xor
pop
adc
int
mov
sub
pop
pop
cli
int3
lcall
inc
push
sub
mov
sahf
push
hlt
mov
jg
lret
push
mov
shll
out
push
and
pop
ss
fistps
xchg
std
fsubs
and
inc
lret
jne
xchg
test
xchg
add
dec
or
lahf
xor
push
pop
xor
ljmp
jecxz
loop
scas
lret
sbb
fs
jecxz
data16
insl
lods
jecxz
jno
fxch
jno
xchg
cli
int
pusha
xor
movsb
xlat
cmp
cmp
or
sub
inc
gs
push
sub
pop
mov
pop
xchg
imul
xchg
rorb
add
cld
xor
adc
pop
cmp
sahf
mov
repz
test
pop
out
mov
js
add
mov
sbb
xor
xlat
nop
pop
dec
jbe
pusha
inc
xchg
dec
test
aad
das
les
int
movb
out
sub
stos
call
stc
jnp
pop
pushf
lcall
test
dec
dec
pop
mov
pop
inc
mov
subl
jb
xchg
inc
dec
mov
or
test
popa
sbb
and
mov
mov
hlt
or
sbb
dec
scas
add
jb
repnz
push
push
lock
mov
mov
inc
scas
mov
jo
xchg
insb
popl
insl
std
xlat
cwtl
dec
js
mov
mov
push
jge
cld
xchg
adc
lea
xor
pop
cmp
shl
enter
test
ret
jae
leave
push
sub
pop
cwtl
clc
adc
xchg
and
popa
ss
test
jmp
jne
push
outsl
cmp
cs
xchg
add
mov
sahf
mov
mov
in
hlt
lods
test
clc
jp
cmp
sbb
inc
negb
xchg
stos
int
xchg
push
cmp
adc
mov
fistpl
or
push
inc
mov
lea
les
xchg
dec
outsb
leave
out
loope
ret
jge
fwait
push
les
jne
clc
sub
imul
bound
xlat
jns
in
ret
in
out
xchg
and
out
test
sub
push
jle
addr16
rcl
out
std
mov
cmp
xor
jnp
mov
dec
in
daa
cltd
pusha
sub
clc
fbld
sbb
sub
jmp
and
jbe
push
mov
test
inc
jns
push
xchg
pop
cmpsb
stos
adc
xor
insb
cs
jnp
sahf
loop
loop
mov
mov
mov
std
iret
pop
iret
and
pop
cwtl
pop
icebp
clc
sub
lods
xor
xchg
pushf
filds
dec
fmull
mov
dec
pusha
mov
out
push
je
call
imul
adc
sti
and
pop
mov
stc
mov
leave
divb
jne
xchg
sub
loope
jbe
sbb
jge
rorl
sbb
and
cmp
mov
lods
add
out
or
mov
xor
pop
jno
xor
loopne
xchg
or
cmp
pop
xchg
push
adc
lret
cmpsb
insb
dec
in
lock
jne
push
daa
xchg
or
cmp
shrb
add
cli
dec
das
xchg
or
movsl
mov
sub
lock
lahf
dec
or
push
dec
rcll
push
cmp
inc
cmp
test
mov
fidivrs
fs
pop
inc
iret
pop
push
sbb
sub
inc
mov
sbb
jecxz
sbb
not
adc
pop
mov
add
hlt
sbb
jle
add
mov
ss
and
xor
jge
hlt
pop
jns
gs
nop
fmull
aas
stc
sahf
or
incb
dec
out
gs
stos
jbe
outsb
cltd
jne
je
out
cmp
cmp
push
mov
cmp
fimuls
sbb
out
dec
shrl
mov
fistpl
outsb
mov
out
mov
xor
sub
loop
xchg
mov
fs
sub
lods
insb
loope
lret
mov
adc
loop
add
std
cmp
mov
mov
gs
xchg
sub
mulb
fwait
adc
imul
rclb
lahf
cwtl
xchg
pop
stc
xlat
xor
jae
into
pop
push
mov
jecxz
imul
add
cs
sti
xchg
aad
in
nop
push
nop
dec
aad
popa
inc
test
or
les
cld
pop
movb
ret
xchg
sbb
js
nop
pop
dec
cmpsb
in
fwait
push
rcrl
lret
push
mov
push
inc
repnz
std
sbb
jb
or
dec
xor
xchg
stos
jecxz
iret
push
neg
jo
std
movl
mov
sub
mov
cmovl
xor
sbb
or
lock
test
sti
es
sti
jg
sarl
mov
aad
jae
lds
insl
pop
inc
icebp
in
aaa
push
cld
mov
xor
mov
cmp
test
pop
fisubl
sub
popf
aam
xchg
cmp
push
lock
fucom
dec
jmp
xchg
bound
loop
or
sub
lods
sahf
mov
dec
sbb
xchg
lret
push
add
jge
push
fstps
xchg
and
mov
jecxz
xchg
inc
cmp
addr16
test
stc
mov
pop
gs
shlb
dec
stos
mov
jne
add
fld
ds
cmp
xor
mov
loop
pop
filds
mov
shlb
xor
mov
jge
dec
popa
gs
inc
js
ss
push
jnp
dec
dec
lods
dec
popa
cld
ljmp
rclb
add
and
mov
outsl
call
mov
jo,pt
or
jo
lock
jp
gs
inc
cld
sarl
xchg
cmp
xor
in
push
insl
pusha
les
int
dec
inc
jmp
lock
filds
adcl
jnp
push
push
shlb
stos
xchg
mov
xor
push
insb
cltd
push
or
mov
fmull
push
cld
iret
jno
fcomps
iret
test
ret
mov
dec
mov
jae
out
jmp
or
cmp
push
inc
cmp
rclb
stos
jns
imul
jo
sbb
sar
mov
int3
int
repnz
sbb
insl
or
hlt
rcrl
fwait
jbe
fs
jge
je
sbb
mov
aam
jle
sub
mov
sbb
xor
cmp
dec
scas
sbb
outsb
and
mov
insl
inc
cmpsb
out
push
pop
in
xlat
dec
out
enter
daa
nop
mov
and
bound
mov
loop
inc
call
push
and
in
push
push
pop
or
push
add
add
push
std
cmp
cwtl
xchg
jb,pn
cmpb
inc
clc
cmc
loope
push
sub
jmp
cmp
test
jge
outsb
dec
das
shr
xchg
mov
cmpsb
cwtl
sbb
jge
add
bound
push
sub
sub
adc
lcall
fdivl
outsl
sub
jp
test
insb
jg
xor
jmp
inc
mov
test
ss
das
cmp
cltd
mov
div
lcall
ret
aaa
mov
sbb
imul
jae
xor
into
mov
loop
scas
test
fs
pop
adc
xchg
mov
data16
lods
mov
xchg
mov
repz
outsl
data16
xor
stc
xor
adc
or
inc
push
ljmp
loopne
mov
adc
enter
sub
inc
push
add
enter
sub
inc
cmp
pop
or
inc
aam
mov
dec
push
addr16
adc
idivl
arpl
pop
rol
nop
inc
scas
mov
jno
inc
mov
mov
les
mov
imul
adc
testb
testl
adc
add
fstpt
jmp
push
add
inc
movb
inc
or
inc
mov
dec
test
push
pop
jecxz
lahf
test
and
xor
outsb
pop
push
cwtl
call
out
mov
out
dec
nop
pop
dec
test
or
jmp
mov
lock
gs
ja
mov
mov
rorl
test
insl
lret
imul
cmpsl
popl
test
cld
lretw
push
jb
mov
aas
mov
mov
rorb
fisttpll
call
mov
movsb
jo
or
xchg
xchg
jmp
ljmp
inc
lods
or
mov
scas
push
inc
xchg
adc
mov
fcompl
push
add
add
cltd
mov
and
mov
push
ds
xor
call
sbb
shr
shll
and
mov
sub
add
hlt
mov
mov
imul
cmpsl
jno,pn
stos
shrb
and
cmp
aas
pop
ja
sbb
pop
es
push
mov
inc
cvtdq2ps
push
fwait
jl
ret
dec
inc
push
jne
jns
mov
push
mov
bound
das
cld
jns
rorl
in
rcll
out
push
sub
and
cmp
jp
enter
in
mov
adc
ret
mov
ds
pop
push
mov
xchg
sbb
jle
xchg
mov
test
push
inc
and
cmc
mov
mov
adc
lret
fst
and
xchg
insb
add
sarb
pop
dec
scas
test
in
inc
out
mov
iret
jecxz
push
pop
pop
inc
in
inc
ret
jae
test
mov
rorl
mov
rolb
arpl
or
xchg
popf
or
sbb
jae
imul
cwtl
lds
std
in
rcrb
aad
imul
loopne
leave
in
xor
xchg
mov
dec
subl
sbb
gs
loope
inc
or
xlat
add
mov
mov
call
jo
test
scas
testl
cmp
into
call
push
mov
mov
in
mov
sar
daa
pop
lret
cmp
sub
sbb
or
dec
add
gs
and
and
adc
lahf
xchg
dec
push
bnd
test
into
bound
inc
pop
jb
adc
clc
pop
pop
fdivl
pop
shll
loope
cmc
sub
aas
gs
cmp
push
loope
push
adc
leave
scas
adc
sub
inc
sbb
movl
dec
push
int
loopne
sub
fwait
pop
ja
pop
lcall
out
shlb
mov
std
dec
test
sub
addb
mov
or
mov
loope
iret
nop
and
data16
xchg
push
fwait
test
mov
xor
int
lcall
inc
iret
sbb
add
lds
lods
xor
aad
dec
popf
loop
cld
mov
fs
fildll
adc
test
lods
cwtl
mov
mov
gs
out
fs
data16
xor
cmp
or
xchg
or
mov
loopne
sbb
out
push
mov
pop
cmp
jns
adc
js
add
ss
mov
cmp
imul
mov
mov
aad
in
mov
xchg
aad
and
nop
and
dec
xchg
popa
xchg
inc
into
das
scas
fnstcw
je
mov
adc
lea
or
jno
xchg
jbe
jecxz
mov
lahf
adc
and
adc
movb
or
sub
xchg
jb
xchg
das
dec
and
fdivl
xor
mov
mulb
cmp
cwtl
mov
and
mov
or
outsl
lahf
mov
mov
rorl
inc
nop
sbb
out
pop
mov
imul
mov
es
xchg
insl
mov
rorl
mov
cmpsl
mov
mov
fwait
sbb
cld
pop
aaa
jnp
les
fstpt
inc
mov
enter
push
rcrb
loope
push
jg
aam
rcl
ret
and
dec
push
jbe
fnsave
shl
clc
ret
xchg
loopne
push
popa
jnp
aas
lods
je
mov
adc
push
mov
orl
repz
cltd
call
push
push
mov
xor
xchg
daa
dec
xchg
cli
pop
test
mov
pop
sbb
repnz
pop
mov
add
lcall
add
bswap
or
xor
in
xor
cmc
sub
push
imul
xor
std
ja
mov
aam
cmpsb
cld
test
lret
fwait
stos
lahf
lret
movsb
mov
test
out
out
mov
push
cwtl
jns
mov
test
hlt
arpl
or
mull
je
jp
fisttps
mov
xor
jle
or
in
fidivrl
cli
and
fistpll
ds
lock
into
jmp
xchg
pusha
and
sub
pop
data16
sbb
iret
mov
push
aaa
stos
insl
cmp
popa
popf
insb
outsl
repz
arpl
inc
je
mov
adc
pop
cltd
ret
pop
xchg
in
inc
int
inc
jae
pop
or
aam
or
das
ret
ss
fimull
xlat
cmp
add
imul
fsubrp
dec
mov
shlb
iret
repnz
pop
movsb
sbb
loopnew
arpl
inc
jbe
push
mov
sbb
imul
fs
out
lods
inc
add
fs
pop
pop
xchg
and
xor
icebp
pop
mov
and
loopne
cmp
fcomip
movsb
push
xor
sbb
movsl
cld
enter
daa
mov
cmp
inc
jno
push
xchg
dec
jl
pop
mov
xchg
movsl
leave
iret
arpl
shll
push
lds
test
cltd
push
xchg
mov
xlat
dec
adc
add
js
jg
pop
add
push
shl
loope
movsb
sub
mov
cmp
pop
adc
shlb
movsb
cmp
sbb
test
add
mov
xor
outsl
push
push
cs
inc
int
or
push
pop
divb
fwait
inc
adcb
popf
fmull
test
sahf
hlt
frstor
sbbb
mov
adc
mov
lock
adcb
clc
pusha
mov
fmuls
inc
js
outsl
pop
push
lret
imul
jp
mov
test
xor
cwtl
push
cmpsl
cmc
mov
fidivl
test
sbb
loop
jle
stc
shrb
adc
jns
lods
jg
and
insl
out
cli
cltd
out
jge
pop
inc
fstpt
cmp
xor
gs
mov
jae
pop
push
add
fisubl
jo
popf
adc
add
add
inc
xchg
call
xor
cmp
subl
aaa
fisubrs
daa
mov
mov
and
sar
jo
std
cs
fldenv
nop
sti
push
rorl
lods
inc
loope
and
shrb
repz
push
jno
les
in
pusha
push
cmc
lods
dec
pop
push
popa
push
pushf
push
ja
jmp
loope
pop
cmp
add
inc
inc
jbe
aas
ficoml
js
xchg
adc
in
in
test
xor
mov
and
mov
out
mov
rolb
pop
jl
fldt
dec
cli
mov
sub
sahf
xor
das
movb
mov
pushf
pop
lret
shrl
inc
fs
cltd
mov
fs
cmpsl
ret
cmp
jb
push
xor
lret
xor
mov
dec
cmp
mov
mov
scas
shrb
js
sub
dec
aam
icebp
insl
ret
scas
or
cmp
pop
insb
imul
pop
popa
hlt
ljmp
sahf
lods
fisttps
out
mov
jne
clc
xchg
lahf
push
and
adc
stos
xchg
ja
push
jp
cltd
pop
inc
xchg
test
cmp
and
sbb
test
jbe
xchg
psrlw
xchg
mov
pusha
data16
mov
int3
add
sub
sub
mov
addr16
xor
jg
mov
cltd
repz
in
leave
ljmp
jno
inc
cmp
int3
popa
fidivl
dec
or
jne
mov
mov
nop
cmp
popf
xchg
push
xor
in
or
out
jmp
sub
inc
inc
fsubs
mov
test
enter
ffree
mov
out
movb
bound
out
xor
fistps
push
xchg
jmp
push
out
xorl
push
lret
popf
inc
jbe
mov
xchg
and
js
stc
insb
ficompl
fnstsw
sub
scas
outsb
popa
ljmp
xchg
iret
mov
outsl
outsl
pop
int
mov
jae
jnp
inc
nop
ljmp
stos
fs
inc
fcmovb
pop
push
xchg
dec
nop
int3
sbb
loop
imul
fimuls
fs
push
mov
mov
inc
pop
addr16
shlb
hlt
mov
dec
arpl
inc
jbe
divl
mov
cmp
push
xor
add
mov
pop
mov
jo
ret
jo
into
mov
and
cmpl
loope
fcoms
hlt
pop
cmpsb
js
sub
add
popa
test
insb
cmp
mov
add
jmp
call
movsl
rolb
sub
pop
dec
inc
lahf
lds
pop
test
mov
fcom
lcall
js
add
and
loope
ja
sub
aam
cmp
dec
sbb
ja
adc
jg
adc
psubusb
mov
pop
loop
loop
roll
mov
je
imul
cmc
lcall
xor
and
sahf
xchg
mov
test
inc
imul
mov
dec
mov
and
and
cmp
lret
imull
andb
mov
rorl
xor
repnz
xor
mov
xor
lods
insb
outsl
or
xor
fs
cmpsl
adc
rolb
cli
int3
adc
xor
mov
daa
sbb
push
sub
loopne
pop
sub
lds
imul
dec
add
mov
fwait
cmp
xchg
cs
add
lcall
in
in
sti
pop
sbb
and
push
nop
hlt
pop
dec
push
dec
std
inc
hlt
jae
fld1
adc
frstor
repz
inc
push
lea
fbstp
je
lds
fstpl
add
xor
dec
in
pop
pushf
fadds
gs
jb
icebp
arpl
cmpsl
jg
pop
lods
and
hlt
cmpsl
repz
xor
mov
ds
mov
push
push
push
pop
dec
inc
sub
cwtl
mov
pop
lock
in
das
movsl
fsts
push
xor
insl
cmp
shl
jo
cmp
insl
xor
dec
pop
sbb
mov
ds
dec
mov
lret
mov
xor
int3
mov
aad
nop
rolb
inc
sub
jnp
dec
fs
ds
cld
icebp
and
sub
clc
cmp
stc
xchg
pop
fdiv
ljmp
shrl
push
scas
out
fadd
mov
insl
insl
mov
add
add
push
addb
leave
mov
xchg
aas
fs
gs
mov
mov
add
shrl
dec
pop
or
popa
stos
js
jmp
add
inc
sbb
incl
inc
xor
or
fdivl
pop
insl
mov
fsubr
cmp
test
nop
ja
add
dec
sub
stos
addr16
repnz
fwait
or
imul
divb
sub
mov
dec
lods
out
jl
dec
adc
in
and
xchg
stos
xor
lret
sub
ds
or
in
or
out
cmp
or
jp
pop
pusha
pop
jle
scas
xor
cmc
lock
incb
mov
mov
jmp
sbb
push
addl
and
lea
popf
push
mov
addr16
push
into
stos
ja
push
or
aad
insb
inc
and
scas
shll
push
sbb
dec
iret
add
jge
pop
pop
add
es
jecxz
jp
popf
frstor
inc
xchg
je
or
and
loope
fidivl
xchg
mov
pop
test
push
jecxz
fidivs
jb
lds
add
mov
cwtl
push
popf
hlt
std
jo
arpl
jbe
adc
jge
out
sbb
mov
or
out
fiaddl
cs
cmc
jmp
out
mov
mov
call
out
out
insb
rcl
lahf
bound
jae
or
mov
sarl
rcll
fdivrl
adc
sbb
out
movsl
xlat
xchg
push
and
push
xor
imul
test
das
cmp
enter
or
std
mov
pop
jle
push
push
jle
loope
outsb
lock
leave
mov
outsb
or
jo
pop
mov
jnp
and
sub
repnz
push
mov
mov
xchg
push
xor
int3
int
adc
sub
pop
adc
hlt
arpl
pop
imul
scas
sub
in
cmp
test
fstl
nop
inc
mov
mov
sbb
mov
stos
xchg
mov
pop
test
test
imul
sub
cmpsb
notb
pop
dec
int3
mov
lcall
sbb
xor
xor
into
mov
stc
inc
popl
outsl
xor
rorl
pop
lods
dec
std
xchg
mov
jbe
cli
in
insb
xor
jmp
cmp
scas
dec
or
icebp
daa
gs
aam
loopne
pusha
sbb
xor
sbbb
pop
adc
adcb
add
mov
outsb
or
pushf
scas
cmp
push
dec
mov
cli
iret
sti
into
or
cmpl
nop
mov
call
inc
pop
in
fstps
mov
jns
add
iret
adc
inc
lea
int
repz
inc
pop
into
insb
sub
dec
push
repnz
stos
bound
pop
adc
inc
loop
jecxz
jns
cmp
jb
insb
and
loopne
je
leave
fwait
jecxz
mov
imulb
mov
cwtl
aam
add
mov
or
xor
cmp
in
repnz
push
mov
cmp
mov
adc
aaa
in
roll
jmp
mov
cmp
shlb
insb
outsl
and
test
mov
lret
adc
and
inc
int3
xchg
pop
hlt
sti
lcall
cmp
mov
int
jp
mov
dec
mov
xchg
popf
rorl
dec
jns
popa
rcl
lods
mov
mov
pop
jne
out
cmp
xchg
sub
faddl
add
enter
and
mov
and
xor
add
test
lods
xchg
xchg
popa
sbb
mov
sbbl
stos
addr16
pop
push
or
cmp
pusha
fs
fbld
xor
loopne
xor
lea
cmpsl
xor
mov
pusha
in
mov
arpl
ja
lock
dec
and
scas
inc
imul
fwait
cmp
dec
rol
inc
jne
sub
mov
pop
das
out
pop
ds
jns
dec
sub
xor
dec
xchg
cli
bnd
sub
cmp
int3
jp
pop
outsb
mov
jmp
mov
int
cmp
in
adc
pusha
lret
or
push
xchg
imul
and
shr
push
push
out
popf
xchg
mov
mov
stos
jg
and
hlt
into
jnp
or
scas
xor
dec
push
pop
push
lahf
adc
pop
insl
iret
pop
dec
test
nop
dec
pop
cmp
jae
andl
jb
or
mov
mov
cmp
sbb
mov
jno
lds
xchg
test
jmp
sub
hlt
dec
mov
arpl
sahf
jne
fdivrp
out
sbb
loopne
aaa
pop
or
fisubl
and
hlt
pop
push
imul
fidivs
addr16
jae
pusha
and
stos
cmp
in
lods
movsb
testl
sub
pop
cwtl
mov
push
iret
push
daa
mov
push
jbe
jno
jg
jl
imul
cmp
xchg
rcrl
ds
test
cli
sub
and
pop
mov
into
pop
pop
mov
loope
loope
mov
cmp
ja
insl
mov
adc
xor
dec
filds
sub
adc
mov
les
aaa
cld
lret
int
in
in
sub
insb
pop
jae
stos
lcall
mov
sbb
pop
lods
stos
sahf
fnsave
mov
sub
sarb
cmp
fmuls
sti
add
clc
ret
lea
