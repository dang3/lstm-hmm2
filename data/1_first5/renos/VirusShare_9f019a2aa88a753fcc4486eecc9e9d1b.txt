jmp
mov
jmp
mov
jmp
mov
xor
fs
data16
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
lea
cmp
jbe
jmp
xchg
xchg
mov
lea
mov
lea
xchg
xchg
dec
dec
inc
lea
mov
mov
mov
mov
movl
mov
push
call
movl
mov
push
call
movl
mov
push
call
movl
mov
push
call
movl
mov
push
call
cmp
jg
mov
xchg
mov
inc
inc
inc
dec
je
mov
lea
mov
mov
dec
dec
mov
mov
lea
mov
mov
movl
mov
push
call
movl
movl
mov
push
mov
push
call
movl
mov
push
call
lea
cmp
je
mov
mov
mov
mov
xchg
mov
mov
inc
lea
mov
lea
xchg
xchg
dec
movl
mov
push
call
lea
cmp
je
mov
mov
mov
mov
xchg
mov
mov
inc
lea
mov
lea
xchg
xchg
dec
movl
mov
push
call
movl
mov
push
call
movl
mov
push
call
mov
pop
ret
nop
push
mov
add
lea
cmp
jbe
jmp
xchg
xchg
mov
lea
mov
lea
xchg
xchg
dec
dec
inc
lea
mov
mov
mov
mov
movl
movl
mov
push
mov
push
call
cmp
jb
lea
lea
dec
inc
jmp
inc
dec
inc
lea
dec
dec
dec
xchg
lea
mov
mov
lea
lea
lea
lea
inc
movl
movl
mov
push
mov
push
call
movl
mov
push
call
movl
mov
push
call
movl
mov
push
call
call
call
movl
movl
mov
push
mov
push
call
call
mov
pop
ret
push
mov
add
mov
mov
cmp
jl
mov
lea
mov
mov
xchg
xchg
dec
dec
dec
jne
mov
lea
mov
lea
mov
xchg
mov
mov
mov
cmp
je
call
lea
cmp
je
mov
mov
mov
mov
xchg
mov
mov
inc
lea
mov
lea
xchg
xchg
dec
mov
xor
divl
test
jne
cmp
jo
mov
lea
mov
lea
mov
inc
lea
mov
mov
mov
inc
dec
lea
xchg
mov
inc
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
lea
cmp
jbe
jmp
xchg
xchg
mov
lea
mov
lea
xchg
xchg
dec
dec
inc
lea
mov
mov
mov
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jg
mov
xchg
mov
inc
inc
inc
dec
je
mov
lea
mov
mov
dec
dec
mov
mov
lea
mov
mov
mov
cmp
je
jmp
cmp
jb
lea
lea
dec
inc
jmp
inc
dec
inc
lea
dec
dec
dec
xchg
lea
mov
mov
lea
lea
lea
lea
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
lea
cmp
jo
mov
jmp
inc
mov
mov
lea
lea
mov
lea
xchg
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
je
lea
inc
mov
dec
mov
xchg
jmp
mov
lea
mov
lea
mov
mov
dec
inc
inc
xchg
mov
dec
dec
dec
mov
cmp
je
jmp
cmp
jb
lea
lea
dec
inc
jmp
inc
dec
inc
lea
dec
dec
dec
xchg
lea
mov
mov
lea
lea
lea
lea
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
call
lea
cmp
jbe
jmp
xchg
xchg
mov
lea
mov
lea
xchg
xchg
dec
dec
inc
lea
mov
mov
mov
mov
mov
sub
mov
cmp
jb
jmp
lea
inc
mov
lea
xchg
mov
mov
lea
xchg
lea
mov
mov
lea
mov
xchg
push
mov
mov
xor
call
mov
cmp
jo
mov
lea
mov
lea
mov
inc
lea
mov
mov
mov
inc
dec
lea
xchg
mov
inc
dec
mov
mov
mov
call
cmp
jg
mov
xchg
mov
inc
inc
inc
dec
je
mov
lea
mov
mov
dec
dec
mov
mov
lea
mov
mov
push
mov
mov
xor
call
mov
lea
cmp
je
mov
mov
mov
mov
xchg
mov
mov
inc
lea
mov
lea
xchg
xchg
dec
cmp
jl
mov
lea
mov
mov
xchg
xchg
dec
dec
dec
jne
mov
lea
mov
lea
mov
xchg
mov
mov
lea
mov
push
mov
jmp
cmp
jb
jmp
lea
inc
mov
lea
xchg
mov
mov
lea
xchg
lea
mov
mov
lea
mov
xchg
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jb
lea
lea
dec
inc
jmp
inc
dec
inc
lea
dec
dec
dec
xchg
lea
mov
mov
lea
lea
lea
lea
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
je
lea
inc
mov
dec
mov
xchg
jmp
mov
lea
mov
lea
mov
mov
dec
inc
inc
xchg
mov
dec
dec
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
lea
cmp
jo
mov
jmp
inc
mov
mov
lea
lea
mov
lea
xchg
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
lea
cmp
je
mov
mov
mov
mov
xchg
mov
mov
inc
lea
mov
lea
xchg
xchg
dec
mov
sub
add
add
mov
cmp
jl
mov
lea
mov
mov
xchg
xchg
dec
dec
dec
jne
mov
lea
mov
lea
mov
xchg
mov
mov
lea
pushl
call
mov
pop
ret
push
mov
add
mov
mov
mov
mov
cmp
jg
mov
xchg
mov
inc
inc
inc
dec
je
mov
lea
mov
mov
dec
dec
mov
mov
lea
mov
mov
mov
mov
call
mov
mov
mov
cmp
jo
mov
lea
mov
lea
mov
inc
lea
mov
mov
mov
inc
dec
lea
xchg
mov
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jb
jmp
lea
inc
mov
lea
xchg
mov
mov
lea
xchg
lea
mov
mov
lea
mov
xchg
mov
mov
movl
lea
cmp
jo
mov
jmp
inc
mov
mov
lea
lea
mov
lea
xchg
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
cmp
je
mov
mov
mov
mov
xchg
mov
mov
inc
lea
mov
lea
xchg
xchg
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
cmp
jo
mov
jmp
inc
mov
mov
lea
lea
mov
lea
xchg
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
cmp
jbe
jmp
xchg
xchg
mov
lea
mov
lea
xchg
xchg
dec
dec
inc
lea
mov
mov
mov
mov
mov
pop
ret
add
inc
gs
jb
arpl
fs
jae
add
push
cmp
testb
mov
shll
ljmp
stos
mov
mov
mov
mov
int3
int3
mov
stos
test
mov
ror
mov
stos
test
mov
shrb
scas
cmpsl
test
int3
xchg
scas
rcrb
mov
int3
movsl
scas
mov
ljmp
int3
movsl
int3
scas
int3
mov
int3
test
std
int3
dec
ljmp
int3
int3
int3
int3
int3
lahf
inc
sub
xor
cmp
or
cmp
lock
push
out
mov
cli
in
mov
sub
mov
xor
mov
into
in
mov
enter
loop
mov
in
in
mov
out
mov
add
mov
imul
xor
test
inc
int3
inc
xor
mov
inc
int3
inc
xor
add
inc
int3
inc
xor
out
adc
inc
xor
in
imul
int3
inc
xor
shrl
inc
int3
inc
xor
leave
imul
int3
inc
xor
iret
std
or
xor
xor
xchg
xchg
or
inc
add
inc
adc
or
mov
or
inc
sub
add
pop
inc
popl
sbb
inc
mov
pushf
inc
popl
popl
pushf
mov
add
mov
inc
vpmacssdqh
add
mov
pushf
inc
popl
pushf
xchg
inc
vpmacssdqh
inc
iret
cld
int3
int3
int3
inc
xchg
inc
test
inc
clc
int
sub
cmp
cmp
dec
int3
int3
int3
inc
adc
adc
mov
int3
leave
push
sbb
adc
int3
int
sub
and
or
int3
cmpsb
int3
cmpsb
int3
inc
and
enter
pushf
inc
popl
pushf
add
and
mov
cmp
push
pop
int3
int3
int3
inc
and
int3
rcl
and
int
sub
xor
and
fmul
vpmacssdqh
mov
int
sub
xor
and
fmul
vpmacssdqh
mov
dec
rcr
xor
out
cmp
int3
int3
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
and
inc
lahf
xor
into
inc
sbb
sbb
or
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
dec
sub
dec
xor
inc
xor
int3
mov
loopne
and
enter
idivl
cmp
inc
cmp
mov
int
sub
xor
popl
inc
adc
int3
cmpsb
faddl
add
or
pushf
inc
popl
pushf
xchg
movsb
int3
dec
int3
int3
cmpsb
int3
inc
popl
popl
pushf
mov
int3
cmpsb
int3
inc
pop
pushf
inc
popl
pushf
mov
scas
inc
inc
push
lock
cmp
cmp
ss
sub
cmp
cmp
or
cs
das
xchg
push
ror
or
inc
sub
enter
sti
adc
cmpsl
int3
int3
int3
mov
mov
int3
int3
mov
xchg
int3
int3
int3
mov
jl
and
int3
int3
int3
fmull
and
int3
int3
jecxz
mov
int3
int3
and
rolb
test
sub
push
int3
test
dec
cmp
mov
ror
mov
and
lret
mov
cmp
int3
push
mov
fcompl
or
sub
cmp
fildl
and
cmp
cmp
push
int3
inc
mov
inc
ss
adc
cmp
cmp
or
push
cmp
cmp
jecxz
inc
and
dec
adc
cmp
inc
cmp
iret
les
int3
adc
ret
pop
int3
int3
adc
inc
xor
pop
enter
cmp
int3
mov
int3
inc
cmp
cmp
cmp
xor
leave
push
inc
int3
int3
int3
adc
inc
ss
lahf
cmp
into
std
push
inc
lahf
xor
cmp
cmp
ss
testb
ss
cmp
int3
mov
int3
adc
inc
ss
push
inc
lahf
xor
xor
cmp
int
std
push
inc
lahf
xor
pop
int3
int
out
cmp
int3
int3
inc
ss
or
xor
int3
inc
xor
or
ss
lahf
xor
pop
int3
cmp
int3
mov
or
inc
sub
or
les
mov
cmp
int3
int3
outsb
les
std
or
ret
pop
int3
std
push
inc
ffreep
pop
int3
leave
sbbb
int3
int
out
cmp
int3
int3
outsb
ret
pop
int3
std
or
les
inc
dec
enter
inc
aaa
std
or
ret
pop
int3
inc
dec
enter
std
push
inc
ffreep
pop
int3
inc
dec
enter
std
or
ret
pop
int3
inc
lahf
aaa
inc
pop
enter
std
or
les
leave
orb
int3
std
push
inc
ffreep
pop
int3
leave
sbbb
int3
int
out
cmp
int3
int3
inc
aaa
std
or
aaa
inc
dec
enter
decb
inc
cmp
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
je
lea
inc
mov
dec
mov
xchg
jmp
mov
lea
mov
lea
mov
mov
dec
inc
inc
xchg
mov
dec
dec
dec
movl
push
call
mov
cmp
jo
mov
lea
mov
lea
mov
inc
lea
mov
mov
mov
inc
dec
lea
xchg
mov
inc
dec
mov
mov
call
mov
cmp
jb
jmp
lea
inc
mov
lea
xchg
mov
mov
lea
xchg
lea
mov
mov
lea
mov
xchg
movl
lea
push
push
mov
sub
push
mov
push
call
mov
mov
call
mov
cmpl
je
lea
cmp
jbe
jmp
xchg
xchg
mov
lea
mov
lea
xchg
xchg
dec
dec
inc
lea
mov
mov
mov
mov
mov
mov
call
mov
cmpl
je
lea
cmp
jo
mov
jmp
inc
mov
mov
lea
lea
mov
lea
xchg
mov
mov
mov
cmp
je
mov
subb
lea
cmp
je
mov
mov
mov
mov
xchg
mov
mov
inc
lea
mov
lea
xchg
xchg
dec
mov
xorb
lea
cmp
jbe
jmp
xchg
xchg
mov
lea
mov
lea
xchg
xchg
dec
dec
inc
lea
mov
mov
mov
mov
incl
mov
cmp
jne
cmp
jb
lea
lea
dec
inc
jmp
inc
dec
inc
lea
dec
dec
dec
xchg
lea
mov
mov
lea
lea
lea
lea
inc
mov
call
lea
cmp
jo
mov
jmp
inc
mov
mov
lea
lea
mov
lea
xchg
mov
mov
mov
push
mov
push
call
cmpl
je
lea
cmp
jo
mov
jmp
inc
mov
mov
lea
lea
mov
lea
xchg
mov
mov
lea
cmp
je
mov
mov
mov
mov
xchg
mov
mov
inc
lea
mov
lea
xchg
xchg
dec
cmp
jl
mov
lea
mov
mov
xchg
xchg
dec
dec
dec
jne
mov
lea
mov
lea
mov
xchg
mov
mov
push
mov
push
call
mov
pop
ret
add
imul
gs
xor
cs
insb
add
add
push
imul
jb
je
arpl
push
mov
add
cmp
jl
mov
lea
mov
mov
xchg
xchg
dec
dec
dec
jne
mov
lea
mov
lea
mov
xchg
mov
mov
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
cmp
jo
mov
lea
mov
lea
mov
inc
lea
mov
mov
mov
inc
dec
lea
xchg
mov
inc
dec
movb
lea
cmp
je
mov
mov
mov
mov
xchg
mov
mov
inc
lea
mov
lea
xchg
xchg
dec
mov
mov
pop
ret
mov
push
mov
add
lea
cmp
jo
mov
jmp
inc
mov
mov
lea
lea
mov
lea
xchg
mov
mov
cmp
jb
jmp
lea
inc
mov
lea
xchg
mov
mov
lea
xchg
lea
mov
mov
lea
mov
xchg
call
test
jne
mov
jmp
movw
cmp
jg
mov
xchg
mov
inc
inc
inc
dec
je
mov
lea
mov
mov
dec
dec
mov
mov
lea
mov
mov
call
lea
mov
pop
ret
push
mov
add
lea
cmp
jo
mov
jmp
inc
mov
mov
lea
lea
mov
lea
xchg
mov
mov
movl
mov
push
call
call
movl
mov
push
call
call
movl
mov
push
call
cmp
jl
mov
lea
mov
mov
xchg
xchg
dec
dec
dec
jne
mov
lea
mov
lea
mov
xchg
mov
mov
movl
mov
push
call
movl
movl
mov
push
mov
push
call
call
movl
mov
push
call
lea
cmp
jo
mov
jmp
inc
mov
mov
lea
lea
mov
lea
xchg
mov
mov
movl
movl
mov
push
mov
push
call
call
cmp
jg
mov
xchg
mov
inc
inc
inc
dec
je
mov
lea
mov
mov
dec
dec
mov
mov
lea
mov
mov
movl
movl
mov
push
mov
push
call
call
call
lea
cmp
jo
mov
jmp
inc
mov
mov
lea
lea
mov
lea
xchg
mov
mov
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
jo
mov
lea
mov
lea
mov
inc
lea
mov
mov
mov
inc
dec
lea
xchg
mov
inc
dec
push
call
mov
call
cmp
jb
jmp
lea
inc
mov
lea
xchg
mov
mov
lea
xchg
lea
mov
mov
lea
mov
xchg
mov
pop
ret
add
jo
imul
add
in
add
lea
cmp
jo
mov
jmp
inc
mov
mov
lea
lea
mov
lea
xchg
mov
mov
movl
mov
push
call
movl
mov
push
call
lea
cmp
jbe
jmp
xchg
xchg
mov
lea
mov
lea
xchg
xchg
dec
dec
inc
lea
mov
mov
mov
mov
movl
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
movl
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
movl
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
cmp
jb
lea
lea
dec
inc
jmp
inc
dec
inc
lea
dec
dec
dec
xchg
lea
mov
mov
lea
lea
lea
lea
inc
movl
movl
mov
push
mov
push
call
movl
mov
push
call
call
lea
cmp
jo
mov
jmp
inc
mov
mov
lea
lea
mov
lea
xchg
mov
mov
movl
mov
push
call
call
movl
mov
push
call
movl
mov
push
call
movl
mov
push
call
movl
movl
mov
push
mov
push
call
mov
pop
ret
lea
subl
jne
mov
cmp
jb
lea
lea
dec
inc
jmp
inc
dec
inc
lea
dec
dec
dec
xchg
lea
mov
mov
lea
lea
lea
lea
inc
mov
mov
mov
lea
call
lea
cmp
jbe
jmp
xchg
xchg
mov
lea
mov
lea
xchg
xchg
dec
dec
inc
lea
mov
mov
mov
mov
ret
mov
ret
lea
popf
pop
and
fs
int3
cmpsl
out
testb
lcall
dec
jbe
add
std
add
mov
stc
pop
add
add
mov
movl
mov
mov
or
pushf
popa
mov
add
mov
dec
or
pop
out
add
push
cmp
cmpsb
jno
sbbl
and
add
pop
jl
inc
mov
jne
add
gs
add
imul
mov
lret
mov
daa
mov
add
lret
and
pop
or
sub
lds
mov
xchg
enter
or
aad
jne
jnp
jl
and
add
mov
shlb
add
push
imul
add
leave
adc
ljmp
pop
add
add
xor
cmpsb
xor
in
xlat
flds
leave
movsl
inc
jno
popl
add
mov
sahf
dec
add
mov
xor
push
add
outsl
add
mov
dec
add
xchg
pop
jle
fucom
lcall
jne
inc
aam
add
dec
mov
stos
sub
loopne
insb
lcall
lock
add
rclb
add
fldcw
xchg
mov
cmpsb
in
fsts
ja
fnstsw
sbb
jge
pop
sub
cmp
mov
sub
sarb
add
arpl
add
repz
add
add
add
add
loop
loope
mov
add
mov
in
outsb
sti
push
inc
or
add
icebp
daa
add
add
testb
add
cwtl
icebp
add
dec
iret
mov
and
dec
movsb
cwtl
lret
add
push
les
cmpsl
xor
inc
push
dec
rclb
add
mov
imul
add
test
out
cmpsb
xchg
add
cmp
xor
mov
ljmp
lcall
add
add
frstor
call
test
fimuls
mov
pop
jge
jne
jp
and
adc
or
adc
inc
cld
rcrl
mov
rorb
lret
dec
jmp
sbb
mov
add
cmc
loopne
add
add
fs
add
push
add
dec
sbb
xchg
rolb
sbb
add
add
shll
rorl
fimuls
add
pop
popf
sbb
outsl
mov
sub
loopne
push
aas
xor
and
loopne
inc
inc
stos
add
aam
roll
or
or
jo
cs
add
pusha
test
lock
loope
lret
add
xchg
icebp
add
cmp
sbb
addl
push
add
lret
movb
inc
push
aad
adc
add
pop
dec
add
add
mov
push
les
sbb
xor
add
out
adc
mov
repz
mov
add
in
fdivr
loope
inc
pop
add
adc
xchg
push
rolb
adc
movsb
sub
pusha
add
add
popl
mov
and
sti
or
rolb
add
add
add
testl
adc
or
and
xor
test
jl
cmpsl
scas
inc
flds
mov
add
push
add
add
add
out
jnp
jns
inc
cld
outsb
mov
fwait
mov
movsb
add
add
insl
insl
pop
adc
sub
dec
xchg
mov
filds
add
test
sub
adc
push
imul
mov
bound
stos
jns
dec
leave
in
sti
dec
xchg
xor
out
lods
pop
sub
movsw
dec
addr16
fists
mov
dec
ljmp
mov
dec
in
scas
jmp
ffreep
sbb
stos
or
xchg
les
push
jne
add
mov
sub
xlat
sbb
in
cmpsl
int
lcall
mov
loopne
test
insb
arpl
ret
and
mov
or
or
inc
cmpsl
or
dec
cmpb
cmp
fcmovu
mov
xchg
ljmp
imul
stc
ficomps
fcomp
lds
cmp
xchg
jbe
mov
add
es
xchg
stos
stos
hlt
movsl
dec
clc
arpl
xor
test
sbbl
rcll
mov
smsw
es
int3
loop
mov
xchg
xor
iret
clc
cmp
and
push
cmp
cmpsl
movsb
adc
adcl
out
cmpsb
jecxz
cmp
cmp
cli
enter
daa
xchg
xchg
cmp
pop
push
jno
mov
jl
dec
push
loop
sarl
mov
inc
movsl
lahf
mov
pop
in
lahf
in
in
shll
push
xlat
inc
ljmp
or
pop
dec
mov
test
pop
xchg
push
xchg
aaa
loope
insb
pushf
sub
test
mov
orb
dec
mov
popl
rolb
cmp
add
lods
lods
xor
jmp
sbb
pusha
jo
sub
les
cld
mov
lcall
lret
dec
aam
clc
std
repnz
and
push
test
mov
cli
daa
or
out
mov
mov
in
pop
fildl
sub
data16
dec
adc
fsubrs
cmp
lret
test
test
mov
scas
movsl
into
inc
imulb
cmc
loop
dec
xor
outsb
pop
loop
xor
mov
frstor
iret
adc
and
lods
lods
adc
fdivrp
out
lds
addr16
xor
xchg
cmp
shrb
or
lret
pop
sti
mov
loopne
pop
aam
push
test
imul
add
xchg
push
lds
and
cmp
jne
sub
xor
bound
sti
push
fdivl
aad
insl
mov
mov
xchg
rcr
fdivrs
les
cmp
cld
xchg
lea
lods
call
sti
test
adc
xor
push
mov
pop
imul
stos
loop
inc
mov
xchg
stc
jb
add
daa
je
push
push
jecxz
ss
push
push
mov
cwtl
cld
mov
test
sub
xchg
ret
fs
mov
mov
lock
sub
mov
hlt
mov
adc
pop
push
ret
sub
push
ljmp
insl
rorl
xchg
cmpsl
xchg
pop
cwtl
mov
push
ret
lock
cltd
aaa
sahf
mov
and
int
insb
pop
repz
cld
adc
insb
pushf
sub
insl
ret
push
or
sbb
fwait
pop
mov
ljmp
lods
pop
orl
and
stos
xchg
cmc
push
lcall
sahf
add
xchg
or
cltd
aad
movl
sti
loopne
xchg
shlb
xchg
aad
sbb
mov
lret
divb
stos
out
enter
call
addl
pop
jg
out
pushl
pop
je
or
jecxz
xor
outsb
scas
mov
pop
inc
aaa
mov
mov
xchg
dec
mov
jle
mov
xchg
or
sub
dec
mov
jge
mov
psubb
arpl
xchg
ficomps
or
fmul
sub
out
jge
sub
popa
std
jle
repz
mov
mov
mov
jle
sub
pusha
rep
mov
xchg
shll
xchg
push
push
sbbl
fcoml
cmp
pop
popf
pop
mov
js
adc
pop
shlb
out
dec
insl
insb
pop
fsubl
jnp
int
scas
sbb
leave
push
daa
shll
addr16
xor
clc
xor
inc
xchg
jg
jae
ret
sbb
or
enter
mov
std
sahf
xchg
inc
mov
lods
imul
push
fidivrs
inc
shrb
and
push
and
or
adc
nop
xor
jge
pop
sbb
loopne
in
jns
movsl
inc
mov
mov
notl
lods
jno
push
push
xor
sub
dec
scas
jnp
fs
fs
xor
movsb
lahf
xchg
and
cmpsb
mov
in
and
jbe
jg
cs
xchg
xchg
jb
outsb
adc
out
jge
out
mov
fldcw
lea
mov
sahf
cmp
inc
cmp
mov
fistpll
or
data16
mov
pop
lds
push
pop
dec
loope
push
adc
mov
out
adc
pop
dec
stos
lahf
dec
mov
sbb
xchg
add
pop
mov
or
mov
sub
xchg
or
jnp
jns
sbb
out
idiv
xchg
xor
scas
sahf
lds
cmp
adc
mov
push
mov
xchg
jle
aaa
fwait
push
ss
inc
cli
fsubrs
fcomi
mov
xor
add
mov
dec
xchg
into
sub
mov
xor
out
outsl
shrl
clc
stc
aas
xlat
cmp
cld
adc
lock
fiadds
dec
out
mov
cli
lcall
cmp
test
je
adcl
mov
rorb
pop
jae
add
mov
stos
push
adc
push
dec
add
xor
in
mov
cmp
add
xlat
mov
hlt
sub
insl
mov
or
jo
cs
sub
or
pop
inc
and
lcall
fwait
imul
lahf
sahf
rcll
call
jp
push
jmp
test
pushf
incb
jmp
lods
into
pop
push
inc
mov
xor
inc
inc
mov
lods
bound
adc
dec
inc
jmp
cmp
lcall
std
jns
cmp
mov
xor
mov
movsl
loope
ret
dec
fildl
mov
jnp
movsb
lock
adc
das
imul
mov
lea
and
arpl
jp
sub
insl
push
jl
dec
jge
shlb
pop
stos
xchg
aas
insl
and
pop
shrl
mov
sub
mov
sbb
rorb
and
xchg
ret
in
pop
push
push
js
xchg
sub
cltd
xchg
in
cli
ljmp
out
lods
enter
xchg
andl
cmp
push
push
dec
inc
call
add
pushf
jae
jle
nop
mov
movsb
adc
and
dec
sti
jnp
test
cmc
xlat
xchg
lret
and
jne
or
pop
push
xchg
jg
add
mov
dec
in
xor
push
or
adc
leave
push
leave
mov
dec
test
mov
inc
xchg
inc
ja
inc
fisttpll
inc
adc
xchg
push
or
push
push
fwait
out
popa
inc
dec
fwait
ja
jne
les
mov
push
fucomi
inc
adc
jns
pop
popa
in
in
rclb
call
dec
in
pop
jmp
cmp
pop
jl
xchg
pop
xor
loop
jle
mov
xlat
pusha
mov
xchg
filds
dec
fstl
cwtl
pop
clc
xchg
pop
push
subl
cmp
add
inc
pushf
stos
mov
movsb
std
insb
ret
in
jnp
ret
pop
scas
jg
push
outsb
mov
adc
pop
ror
cmp
ret
or
adc
xchg
jae
lea
or
inc
imul
cmp
xchg
cwtl
pop
mov
popf
pusha
imul
mov
leave
fs
mov
cmpsb
out
ss
jg
ljmp
divb
clc
push
jge
push
sbb
cmp
or
mov
int3
mov
pop
mov
xor
test
scas
pop
jno
and
mov
jmp
mov
jmp
cmp
enter
daa
xchg
and
cmp
je
jl
addr16
dec
sar
ds
cli
push
movsl
lods
cmpsb
pop
and
insb
lahf
sub
push
jns
cmpsb
test
insl
aaa
roll
or
rcrl
xchg
jp
je
leave
pop
add
lcall
xchg
dec
and
imul
mov
cmp
mov
xorb
pop
add
pop
insb
xor
pop
jb
and
int
sub
jp
pop
cli
jne
lcall
test
sub
iret
les
jbe
mov
jg
lcall
std
cli
call
and
enter
popa
cmp
and
push
jae
cwtl
lret
jmp
xchg
lret
jo
xchg
fdivrl
or
xchg
cmc
jo
jl
cmp
dec
outsl
mov
add
mov
subl
stc
xlat
lods
jecxz
rorl
and
lea
add
mov
push
clc
or
int3
lcall
int
loopne
adc
pop
xchg
mov
dec
imul
nop
xchg
fsubrl
push
cmp
leave
icebp
xlat
repz
sub
js
int
mov
test
xor
nop
pop
cmp
sub
inc
xchg
rcrb
les
int3
nop
movb
test
sub
ds
stc
sub
adc
pushf
test
imul
inc
mov
mov
rclb
dec
mov
inc
cmp
test
adc
std
and
cwtl
jb
shll
xchg
sbb
sbb
pop
and
inc
lret
xor
das
dec
push
and
mov
jo
or
insb
push
push
es
inc
lea
outsb
xor
roll
mov
push
add
cld
xchg
jge
pushl
mov
cmp
mov
sub
lret
aam
sub
ret
jae
inc
push
sub
ss
adc
call
popa
test
mov
jmp
insb
or
cmp
outsb
add
movsb
cmp
mov
xchg
dec
bound
or
cmp
test
test
dec
push
pop
mov
cmp
jb
cmp
adc
and
loopne
or
lea
mov
lea
stos
pop
add
add
adc
dec
outsb
sub
inc
loope
in
or
pop
pop
fwait
push
and
jle
insb
jne
outsl
and
and
bound
pop
jns
push
aas
in
in
and
xlat
out
js
sub
push
imul
jp
pop
movsb
mov
mov
pop
mov
test
jle
dec
jne
rcr
shll
stos
fbld
push
jne
sti
das
xchg
and
xor
aam
cmpsl
pop
xchg
mov
xchg
enter
sub
sbb
insb
roll
jge
scas
loop
or
or
lcall
push
mov
add
lods
sub
filds
mov
pushf
push
mov
lods
leave
xchg
out
sbb
call
fiadds
rol
vsubsd
shl
xchg
mov
stc
dec
xchg
leave
negb
hlt
xchg
cmp
and
int
jge
sub
shlb
mov
sbb
out
into
int3
mov
xchg
mov
xor
loopne
adc
or
cmp
aad
push
adc
pop
cmpsb
insb
inc
mov
lock
test
xchg
cmp
cmp
arpl
jl
mov
dec
das
xor
ds
ror
mov
jle
lock
jb
dec
pop
xchg
adc
test
cmp
jns
cmp
es
rcll
xor
pop
pop
inc
loop,pt
sar
cmp
inc
lret
imul
pushf
adc
adc
test
sbb
testl
jns
push
and
dec
sub
addl
adcb
fmull
pop
and
or
stc
test
dec
cli
idivl
jp
mov
pop
xchg
mov
mov
or
push
int
ss
test
ds
imul
xor
ss
mov
mov
pop
sbb
int
into
out
fucom
cmc
aaa
stos
and
xchg
mov
loop
cwtl
cld
stc
lods
rcl
fs
stos
and
pop
ljmp
aam
enter
xchg
cli
add
xor
fcoml
cmp
fmuls
imul
sub
divb
out
pop
mov
out
adc
push
imul
jg
xchg
lahf
lret
aaa
sbb
pop
and
xlat
xor
sub
ljmp
jecxz
dec
sti
arpl
fwait
cs
into
aad
fcoml
loopne
dec
aad
xor
ds
or
int
mov
dec
repz
sti
leave
movb
jp
jnp
sahf
js
aaa
pop
dec
leave
add
fwait
or
xchg
jmp
jmp
xor
int
inc
repnz
aas
std
ljmp
xor
je
mov
out
fbld
dec
std
popf
mov
inc
sbb
mov
add
cltd
cmp
ja
mov
shll
into
popa
das
sub
cltd
mov
sti
cli
enter
test
insl
in
xchg
dec
jae
loop
nop
push
cltd
mov
in
mov
push
lret
out
dec
mov
cmp
mov
pop
sub
sub
mov
ret
add
jae
lock
sub
in
push
clc
dec
and
ljmp
mov
mov
dec
out
mov
lret
push
add
jge
cltd
ret
cltd
jp
xchg
loop
xchg
mov
dec
leave
jle
test
add
pop
mov
rcl
test
pop
pop
mov
stos
mov
mov
add
fxch
jp
les
or
or
inc
mov
mov
shrb
mov
mov
insb
adc
inc
js
lds
sub
bound
dec
dec
jne
jle
mov
sbb
add
sbb
cmc
adc
jge
sbb
out
mov
orl
jge
lock
push
jp
or
inc
andl
mov
lds
pusha
les
popf
filds
inc
xchg
dec
sbb
jmp
lock
push
addl
push
rcl
ljmp
xor
jnp
cli
cld
scas
inc
scas
nop
push
cld
loopne
fsubrs
or
or
ret
push
pop
sub
aaa
jae
in
insl
inc
xchg
or
cmp
fisubrl
push
scas
sbb
adc
imul
push
lds
mov
into
repnz
fisubrs
insl
xor
rcr
test
inc
dec
outsl
jbe
pop
pop
jge
lret
sbb
mov
pop
or
xor
int3
mov
cmp
push
push
cli
es
insl
mov
sub
pushf
scas
push
cmp
data16
inc
jne
push
arpl
pop
cmpsb
out
dec
insb
in
xlat
out
enter
daa
nop
shlb
pop
inc
jns
fldl2t
cmpl
sarl
inc
jnp
movsl
mov
sbb
push
pop
dec
subb
jge
inc
lret
push
xor
clc
outsl
add
pop
dec
pop
and
push
xor
aam
xchg
cmp
mov
outsb
jle
xchg
adc
out
push
test
mov
sub
add
pop
clc
xor
pushw
sub
popf
int
lods
jmp
pop
clc
inc
sbbl
xor
push
sub
test
andb
jg
pop
mov
mov
xlat
mov
int3
pop
ss
popf
cmp
cltd
xor
sti
lret
inc
ret
jle
mov
mov
gs
into
sarb
push
outsl
jo
cmpsb
loop
mov
stc
fs
in
fs
xchg
fsts
xchg
xor
enter
sub
iret
fimuls
outsl
xchg
out
xor
xor
sub
dec
ljmp
loopne
popa
outsb
pop
sar
dec
adc
lret
std
out
adc
std
lret
xchg
bound
sbb
cltd
adc
sub
cmp
dec
jns
sti
adc
jne
testl
nop
inc
jp
dec
xor
loop
mov
popf
mov
repz
or
out
call
idivl
in
repnz
mov
jmp
sub
in
cmp
inc
or
mov
jbe
mov
stc
mov
jecxz
ficomps
std
outsb
mov
cwtl
call
aad
mov
inc
orl
shrb
mov
sbb
das
or
cmp
mov
xchg
or
xchg
mov
adc
add
dec
outsb
lds
cmpsl
mov
mov
les
xchg
lret
push
adc
mov
aas
push
je
fdivrs
iret
rorb
test
call
dec
rcll
xlat
add
or
adc
xchg
das
xchg
mov
outsb
out
fs
or
imul
adc
paddsb
mov
cltd
mov
int3
test
addr16
xchg
xchg
xor
cld
test
cli
xor
pmaddwd
shll
sub
pop
or
cld
stos
stos
add
push
cmp
add
hlt
xor
arpl
xor
lcall
sti
jl
imul
adc
sub
ja
sbb
dec
out
push
sbb
or
xlat
mov
dec
inc
sub
jne
lock
mov
popf
fucomip
push
bound
xor
inc
cmp
or
mov
inc
fsubrs
dec
and
lds
imul
imul
xchg
mov
adc
jle
ss
loopne
scas
pusha
pop
loope
fistps
aam
sbb
and
in
adcl
push
inc
push
add
mov
jge
adc
stos
cli
ror
dec
jle
insb
add
iret
jnp
cmp
scas
test
sahf
push
inc
out
adc
negl
pop
pop
mov
lea
sbbl
movsl
rorl
mov
adc
adc
pop
sub
xchg
popf
adc
imul
scas
lds
xor
rcrb
mov
repnz
mov
clc
hlt
sbb
ljmp
aam
jge
push
hlt
sbb
sbb
loope
testb
add
adc
jnp
pop
push
jge
xor
xchg
sar
scas
notl
and
das
xlat
cmp
xor
rcll
sub
jb
in
in
mov
mov
push
cmp
rorb
jno
fisubl
or
sub
and
fwait
lahf
xchg
xchg
push
repnz
test
into
sbb
inc
adc
in
pop
mov
js
mov
pop
push
outsb
jo
outsl
mov
push
cmp
add
loope
cltd
adc
leave
jp
sbb
push
sub
pop
sbb
pusha
add
pop
add
inc
adcl
mov
mov
pop
ja
pop
lcall
insl
jno
mov
adc
addb
inc
mov
int
mov
adc
punpcklbw
mov
test
fcoms
divl
mov
in
mov
sbb
mov
lds
sbb
dec
in
loop
jmp
stc
sbb
fs
pop
mov
out
movsb
data16
bound
lret
out
xchg
jo
data16
xor
push
xor
dec
btc
or
push
loopne
cmpsb
dec
pop
out
movsb
mov
pop
jnp
imul
mov
popf
rclb
mov
std
cmp
xchg
xlat
mov
in
sub
push
in
mov
es
aas
cmpsl
aad
sbb
and
rorl
lock
inc
into
mov
fnstcw
add
repz
daa
ffreep
or
or
jno
mov
pop
mov
cmpsb
adc
rcrb
xor
pop
lcall
inc
sub
push
jb
pop
aam
and
je
stos
mov
repnz
mulb
or
cwtl
mov
adc
and
jp
mov
mov
fmuls
lock
out
jns
clc
ljmp
loop
rcrl
fsubs
xor
xchg
lahf
aad
imul
icebp
fwait
mov
mov
mov
inc
jae
mov
xchg
divl
pop
add
push
es
aam
lea
jbe
sbb
xor
nop
xchg
loopne
xchg
ljmp
imul
pop
push
xchg
pop
jmp
cmovnp
inc
cltd
call
sbb
mov
xor
dec
xchg
adc
mov
arpl
ret
sarl
repnz
mov
mov
and
add
psrlq
incl
fcmovne
xor
or
xor
xor
mov
push
push
and
xor
dec
inc
sbb
inc
cmpsb
inc
decl
push
xor
dec
daa
idivl
test
xor
bound
and
xchg
mov
mov
hlt
push
in
sub
dec
popa
xor
mov
or
icebp
jbe
mov
adcb
in
xchg
xchg
pusha
cli
scas
lret
fistpll
cmp
je
call
and
pop
push
pop
cltd
repnz
sbb
xchg
push
insl
aad
insl
sbb
and
stos
insb
outsl
dec
inc
jnp
inc
sbb
mov
adc
ljmp
xchg
lret
incb
jp
lcall
lea
or
das
sub
in
push
cli
mov
sbb
fcompl
jbe
sbb
jmp
add
nop
mov
shlb
mov
repnz
push
leave
pop
lret
je
sbb
jbe
jbe
add
jb
add
or
add
dec
pop
xchg
and
ror
xor
icebp
push
scas
movsb
fwait
and
jecxz
cmp
inc
xchg
movsb
push
mov
push
add
fs
movsl
and
enter
daa
mov
xorl
cmp
dec
jl
push
ds
and
leave
xchg
lahf
cmpsb
or
lahf
test
cltd
adc
xlat
jnp
pop
inc
ficompl
pop
add
insl
push
mov
loope
imul
and
sub
das
shlb
out
cmp
cmpsl
sbb
shll
adc
push
cs
aam
out
iret
pusha
pop
mulb
popa
lcall
xlat
fmull
mov
aaa
test
cmpb
push
xor
rcrl
inc
dec
mov
sub
adcb
cmp
por
lret
mov
icebp
shll
aas
test
ret
into
repnz
cwtl
pop
mov
mov
jns
cs
loop
or
fs
ja
adc
insb
lods
jg
decl
insl
adc
jp
pop
lret
enter
mov
ljmp
incb
push
push
lcall
adc
add
scas
xchg
call
pop
ret
cmp
scas
xlat
out
cmpsb
pop
sub
insb
into
mov
and
out
sti
jo
popf
cs
shrb
repnz
inc
loope
mov
mov
fs
shlb
repz
les
call
cmc
pop
ds
push
push
fucomip
in
add
cmp
cmp
cmpl
dec
xchg
cmp
or
dec
add
test
mov
mov
lret
mov
xchg
ja
fimuls
mov
mov
cli
or
sahf
jg
das
mov
mov
pushf
rcrl
es
or
and
cmpsl
repnz
push
mov
or
xor
mov
dec
rep
mov
mov
pop
shrb
mov
adc
jle
mov
scas
enter
xchg
cmpsb
fstpl
cmp
std
sbb
ljmp
sub
fbld
mov
jne
mov
xchg
frstor
push
std
and
mov
cltd
mov
cmp
xchg
test
test
loope
xchg
ljmp
pusha
add
stos
mov
std
add
sub
popa
jmp
sub
xchg
xorw
sub
cltd
cmpsb
or
in
je
ja
mov
inc
cmp
cmpsl
and
fcmove
jae
or
mov
popf
xchg
jnp
push
xor
mov
xchg
pop
cmp
sub
inc
xor
addr16
out
jp
dec
pop
mov
cmpsb
fstpt
gs
jle
cmc
push
pusha
xchg
xchg
push
xchg
ret
push
mov
imul
xchg
push
mov
cmp
lret
popf
inc
dec
jg
sub
xchg
push
popl
subl
outsb
mov
jnp
or
push
rcll
adc
mov
repnz
pop
int
es
fdivrs
jae
jp
inc
nop
pop
out
or
stos
iret
mov
mov
pushf
fcmovb
jnp
xchg
dec
xchg
xchg
sbb
jge
imul
fimuls
fwait
push
rclb
mov
inc
lret
rorb
movsl
arpl
mov
jge
or
sbb
mov
push
xchg
insb
add
repz
dec
xor
lcall
jo
jo
sbb
and
xor
jl
test
push
push
jae
cmpsb
js
add
mov
stos
daa
lea
push
jno
sub
dec
jmp
loop
stos
popa
movsl
sarb
push
lahf
push
cwtl
sub
push
fs
sub
ja
test
lcall
js
xor
push
mov
loope
ds
sub
das
push
cmp
sub
outsb
cmpsl
dec
popf
adc
jg
xchg
inc
orb
pop
sbb
push
adc
loop
mov
xor
repz
jbe
jne
jl
dec
cwtl
push
push
add
jge
xor
inc
inc
sahf
xchg
lds
sbb
mov
and
icebp
and
mov
or
mov
fisubrs
xchg
popa
jle
cmp
mov
lret
imull
outsl
nop
lret
jge
mov
int3
mov
sar
repnz
into
jnp
lcall
clc
pop
outsl
or
ss
mov
fs
sub
test
mov
lods
inc
enter
inc
out
sbb
cli
int3
mov
xor
adc
repz
or
mov
sbb
loopne
imul
sub
or
adc
lcall
stos
je
xlat
lret
mov
dec
pop
adc
jge,pn
sub
loope
in
popl
sti
pop
cli
lret
and
adcb
fstp
inc
hlt
imulb
fld1
push
frstor
repz
mov
lea
idiv
call
je
jl
sbb
mov
test
out
fcoml
cld
inc
pop
rcll
aas
jns
shlb
mov
dec
push
into
das
je
call
xchg
imul
call
sahf
cwtl
sbb
pop
mov
mov
dec
inc
or
fistpl
fmull
and
aaa
xchg
das
movsl
call
sarb
daa
sbb
shl
out
xchg
cmp
insl
orb
cmpsl
mov
mov
dec
adc
lret
mov
enter
xlat
jmp
aad
test
add
sub
dec
pop
add
ds
test
and
fldl
jmp
xchg
pop
inc
movsl
ljmp
lds
xor
xchg
push
xchg
out
sbb
cmp
or
cltd
push
imul
mov
ret
mov
dec
gs
test
xor
mov
in
sbb
jae
shrl
lcall
cmp
add
inc
daa
xor
xor
or
cmp
fsubl
pop
test
or
mov
jae
sub
repnz
int
fwait
or
dec
in
outsb
es
mov
out
jl
gs
in
lahf
call
cli
fsts
or
xchg
out
addr16
scas
ljmp
cli
clc
mov
pop
call
jle
inc
pop
in
cmpsl
pusha
pusha
xor
dec
xchg
xchg
int3
jg
bound
rolb
lea
popf
push
mov
cmpsb
xchg
push
into
sbb
and
jnp
jnp
cltd
xor
sbb
iret
add
cmp
jge
negb
bnd
jecxz
fidivl
fdivl
or
and
nop
pop
fidivl
xchg
mov
repz
add
sahf
in
shrb
mov
cwtl
sub
idivb
arpl
jbe
les
aaa
ds
ja
out
aaa
push
mov
or
push
add
lret
cmp
mov
dec
loopne
xchg
and
mov
cmpsl
jo
fstpt
and
call
push
movsb
insb
cmp
push
lahf
jge
cmpsb
sti
repnz
jae
pop
enter
daa
mov
cmp
mov
xchg
jl
pushf
push
dec
pop
mov
out
xlat
dec
frstor
notl
out
imul
test
das
clc
dec
inc
push
mov
adc
aam
js
dec
push
pop
jle
ljmp
xor
clc
cmp
pop
cli
adc
pop
insl
push
cmp
andb
sahf
sbb
les
xor
adc
int
sub
in
roll
adc
push
pop
adc
fsub
jno
sub
and
cmp
pop
adc
dec
jg
adc
mov
jl
mov
inc
lods
mov
in
and
or
cmp
test
xchg
imul
sbb
cmpsb
pop
add
adc
stc
daa
into
pop
lds
cmc
sbb
insl
xor
je
in
fst
loop
and
inc
mul
outsl
lods
js
rorl
out
data16
cli
lods
dec
xchg
mov
out
movsl
scas
cli
decl
mov
or
test
gs
mov
loopne
jmp
pop
dec
mov
adc
mov
sbb
xchg
outsb
cmp
jae
cmp
xlat
lea
or
mov
or
into
jmp
and
cmp
nop
mov
push
dec
mov
popf
inc
pop
addr16
mov
mov
adc
cmp
call
repz
movups
int
stos
std
mov
lret
in
pop
and
inc
loop
inc
inc
jns
enter
divb
das
and
pop
pop
je
add
jecxz
imulb
cmp
std
or
addr16
aam
mov
mov
xor
xor
orl
imul
mov
mov
jmp
es
aam
dec
pop
cltd
adc
insb
adc
and
push
mov
pop
pop
xor
hlt
dec
rcl
aam
ljmp
cmp
lahf
aam
out
ret
int
adc
es
frstor
dec
in
popf
inc
ljmp
mov
mov
cmp
test
dec
cmpsl
test
push
inc
negl
lret
or
xchg
sbb
xchg
inc
push
sbb
scas
mov
andl
stos
sbbb
or
roll
pusha
outsl
sbb
fildll
scas
xor
pop
push
xor
enter
jno
mov
adc
pop
arpl
out
ja
fistps
dec
and
inc
imul
or
push
fwait
cmp
movsl
jne
mov
pushf
out
pop
dec
js
jbe
adc
mov
in
push
sub
cli
jno
out
dec
test
cmp
mov
sbb
int
jbe
cmpb
jle
adcl
xchg
sbb
xchg
imul
xchg
out
addb
sbb
xchg
popf
mov
or
bound
and
dec
sbb
es
scas
xor
rcll
dec
inc
adc
es
ret
rcrl
jnp
inc
out
pop
lods
jae
cmpb
in
or
mov
insb
sbb
daa
fwait
lcall
cmp
sbb
lds
pushf
mov
bnd
push
hlt
dec
bnd
jbe
push
mov
sbb
mov
or
and
pop
and
mov
xor
add
out
and
inc
cmp
push
stc
movsb
idivl
push
out
lret
shll
pop
das
mov
push
mov
leave
cmp
sbb
jno
push
jl,pn
loope
dec
leave
mov
ds
imul
xchg
popa
push
lahf
add
add
outsl
insb
test
cli
call
std
and
push
pop
mov
stc
pop
pop
mov
les
sub
in
out
cmp
outsb
and
popa
sub
xor
fprem1
xorb
cmp
fwait
mov
add
push
aaa
outsl
mov
incl
pop
jae
mov
push
scas
cmp
mov
sub
out
sahf
fisttpll
test
and
pop
jg
or
mov
push
mov
ds
mov
inc
mov
scas
ret
add
shll
fadds
push
imull
in
shll
js
push
mov
into
inc
imul
xor
cmp
addr16
negl
fs
les
mov
lods
xor
inc
mov
mov
cli
xor
jle
dec
inc
push
or
aas
sbb
pop
sti
loopne
sbbb
insl
jmp
push
data16
imul
or
xchg
xor
sbb
shrb
lods
mov
sub
test
gs
or
out
pop
aad
dec
fs
mov
jp
sbb
sub
push
jge
repz
mov
shrl
jnp
stc
mov
call
jb
hlt
pop
adc
sbbb
std
pop
es
inc
inc
imul
clc
aas
mov
clc
jb
fists
cld
in
je
je
jecxz
jmp
divb
adc
mov
pusha
cwtl
and
mov
ss
mov
es
cmpl
mov
mov
push
lock
in
das
arpl
lret
shl
and
mov
push
insl
dec
add
cmpsl
mov
aam
lahf
int3
sbb
notl
sbb
mov
cld
lret
sbb
mov
lret
jae
fbstp
cmp
cmpsl
and
sub
push
jmp
ret
pop
add
data16
clc
scas
inc
mov
fadd
aaa
ljmp
xor
mov
sahf
lahf
ds
je
scas
push
and
stos
xrstors
push
cltd
int
test
add
addr16
arpl
xor
daa
test
xchg
movl
fcmovu
xor
mov
push
mov
push
scas
test
jmp
mov
jle
adc
or
push
or
dec
sub
dec
cmp
mov
jecxz
divl
or
ja
dec
lcall
xor
or
xchg
mov
mov
shll
or
mov
dec
xor
cmp
add
shrl
cltd
xchg
dec
jae
out
sub
mov
xor
mov
jp
out
mov
push
loop
pop
packssdw
stos
mov
and
data16
stos
ljmp
inc
mov
mov
fildl
adc
popf
mov
dec
aam
dec
stos
cmp
imul
scas
xchg
dec
dec
push
cmpsb
pop
mov
iret
mov
adc
test
inc
stc
xlat
jae
insb
dec
inc
cltd
push
bound
sbb
jge
xor
cmp
xchg
push
insb
pop
sbb
pop
stos
imul
fidivs
int3
lds
cmp
mov
leave
aaa
mov
hlt
xchg
mov
jbe
push
xchg
jge
dec
mov
in
ficoml
pushf
dec
xchg
xor
out
int3
adc
rorl
dec
jl
xor
pop
pushf
sbb
and
mov
adc
adcb
push
cmp
add
enter
daa
mov
cmp
sub
jl
stc
sbb
in
in
jle
sub
loop
push
adc
fwait
test
lds
cmp
jecxz
adc
loop
pop
js
cmp
pop
cld
mov
push
fildl
loop
xchg
sub
mov
cmp
mov
outsb
rcrb
adc
adc
negb
dec
pusha
mov
add
cmp
mov
int
ret
fisubl
pop
repnz
push
push
addb
inc
xor
dec
mov
sahf
cmp
test
mov
xorl
into
sub
pop
add
add
lods
cmp
sti
inc
ja
imul
lret
icebp
rorl
mov
imul
and
cld
cmc
test
xchg
adc
or
mov
mov
scas
out
test
adcb
or
cmp
sbb
fmull
imul
xor
nop
ret
or
mov
xchg
xor
xor
jbe
mov
mov
es
imul
add
inc
xchg
hlt
pusha
mov
sti
rol
xlat
jmp
adc
repz
pushf
mov
sarb
sti
sub
ljmp
dec
xchg
nop
addr16
arpl
jecxz
dec
and
mov
faddl
call
icebp
into
or
adc
fnstenv
add
insb
jmp
fmul
pop
leave
int
inc
lock
push
inc
scas
mov
aas
push
aas
les
ret
jae
int3
je
cmp
and
divb
negl
jnp
in
sub
adc
adc
mov
imul
das
inc
or
mov
cld
ret
andb
mov
in
mov
imul
push
pop
dec
push
jnp
cmpsl
mov
jmp
cld
ficoms
mov
imul
xchg
xor
sarb
stos
sub
in
jae
stos
outsl
xchg
ret
jmp
ret
push
inc
xchg
imul
ror
xchg
sbb
jmp
popa
out
sbb
lods
mov
mov
xchg
mov
rolb
push
pop
cmp
loope
xor
cmp
out
lcall
xchg
les
shll
xor
pop
or
scas
stos
inc
push
and
push
scas
pop
add
xchg
cmp
lcall
mov
or
sub
daa
mov
movsl
dec
sbb
fincstp
lods
ja
inc
rorl
mov
or
aaa
sub
xchg
dec
loop
mov
push
mov
dec
xor
sbb
stos
jns
dec
sahf
in
out
xchg
cwtl
mov
xchg
sub
das
cmp
addr16
add
and
lea
arpl
jle
loope
in
aaa
mov
fistps
jmp
cmp
inc
add
subl
mov
fistpll
mov
mov
stos
lods
imul
aam
ret
insb
xchg
test
xchg
scas
cli
cmp
xor
aad
std
iret
sbb
subb
add
or
lcall
adc
test
xchg
and
inc
mov
dec
fimull
push
cld
sbb
dec
cltd
imul
js
sbb
lds
sbb
sarb
repnz
xchg
hlt
fidivrs
arpl
sub
sbb
lods
or
xor
lahf
cmp
int3
sti
cwtl
pusha
pop
xorb
xor
mov
jg
and
cmp
movsb
or
xor
cmpsb
test
in
sub
enter
daa
mov
cmp
jno
jae
jl
in
dec
cmpsl
jae
ds
inc
xchg
movsl
in
push
sbb
inc
loope
push
in
cmp
nop
fs
mov
mov
pop
or
cmpsb
js
adc
push
cmpsl
mov
sub
cld
mov
outsb
xor
adc
jmp
popa
push
in
sbbb
sbb
xor
push
add
push
cmp
arpl
push
cmp
xchg
lcall
popf
fsub
jmp
add
xor
fwait
add
pop
lea
sub
mov
xor
sarb
into
xor
cs
lret
mov
mov
mull
scas
jbe
into
pop
int3
cmc
outsl
mov
jecxz
mov
or
in
stc
gs
jge
adc
cltd
adc
je
lds
scas
lods
add
in
mov
nop
cli
cwtl
push
les
nop
jnp
cmp
mov
or
aas
insl
fists
inc
loopne
in
pop
test
xchg
cwtl
imul
test
xchg
mov
stc
sbb
ss
in
xlat
sub
daa
sub
dec
mov
cmp
jp
fistl
lods
jno
aad
aaa
ja
inc
fistps
int
dec
inc
inc
out
sub
les
pop
les
xchg
sbb
jno
mov
sbb
pop
imul
push
mov
jo
cli
pop
out
push
adc
sbb
js
pop
insb
das
aam
ja
sub
hlt
sbb
jb
flds
je
push
cmp
xor
cwtl
div
in
push
std
pushl
sahf
cwtl
add
pusha
loope
sbb
fiadds
icebp
adc
mov
push
mov
inc
jg
lock
das
and
push
pop
mov
push
ja
shll
cmp
es
pop
imull
or
fsubs
add
movsl
fs
or
lret
lret
pop
mov
mov
jo
in
mov
push
ret
dec
push
mov
jne
inc
ret
jp
lret
in
fstpl
lock
pop
dec
int3
ljmp
cmp
dec
push
out
fs
xchg
add
lret
jne
mov
cltd
xor
stos
test
in
jl
add
out
enter
and
mov
int3
sbb
popf
xchg
rorl
or
stos
xor
lea
cmc
int
add
mov
and
mov
xlat
adc
call
push
pop
mov
call
cmp
xchg
lret
mov
mov
add
dec
lods
stos
fwait
lds
dec
jns
add
add
mov
push
push
out
clc
jle
bound
lret
xor
or
in
push
stc
xchg
out
mov
sub
sub
adc
negl
mov
cmc
mov
mov
mov
sbb
stos
in
test
pushf
sub
fistpll
sub
jmp
dec
adc
ds
push
push
cltd
lods
pop
popf
push
inc
outsb
mov
lret
stos
pop
and
jmp
icebp
les
xor
scas
pop
and
xor
and
mov
jl
mov
leave
sub
pop
loopne
iret
inc
psubq
jae
or
inc
lahf
xchg
addr16
adc
fiaddl
js
pop
add
adc
fidivrs
repnz
xlat
mov
mov
in
jmp
and
mov
data16
mov
jge
lock
sbb
mov
sbb
jge
push
int3
out
xchg
or
push
adc
icebp
jo
lods
jmp
and
pop
cmp
and
xchg
dec
jp
pop
fst
in
pusha
enter
daa
mov
outsl
cmp
pusha
add
dec
push
mov
ds
pushf
sahf
movsl
repz
lahf
pusha
in
push
mov
jnp
pushf
inc
fs
pop
mov
inc
inc
jnp
imul
fstpt
jnp
pop
jp
mov
es
loope
jp
sub
inc
mov
outsb
xchg
sub
rol
enter
outsl
or
outsb
adc
sbb
gs
add
jge
xor
adcb
cmp
int
jmp
lds
lock
push
mov
mov
sub
daa
sahf
cmp
test
hlt
jg
or
mov
cmp
dec
mov
dec
mov
mov
cmp
jno
jmp
jns
sarl
mov
push
pop
sbb
jge
into
ljmp
xor
movsb
mov
push
into
call
fs
push
lods
adc
and
jmp
sahf
sbb
cli
lret
cld
aas
xor
cmp
cmpsb
pop
or
push
incb
sub
loopne
mov
pop
enter
int3
clc
das
imul
xchg
jp
in
sbb
jno
fcmovnbe
imul
mov
cmpsb
sbb
sti
mov
cs
and
push
inc
dec
nop
sbb
repz
das
add
sti
out
les
mov
nop
mov
call
out
lahf
stos
pop
lcall
pushf
push
jmp
fsubr
pop
jne
test
inc
jae
xchg
les
push
and
dec
je
mov
mov
cmp
imul
addr16
cwtl
shrb
mov
xchg
pop
addl
call
or
mov
stc
dec
lock
das
add
mov
std
int3
xor
fisubs
roll
mov
orb
mov
cmp
out
icebp
jl
xchg
xor
push
mov
ja
add
mov
pop
pop
jo
shlb
pop
jbe
sbb
ret
or
pushf
fldl
jo
pop
test
xchg
cltd
push
iret
ljmp
mov
jg
out
push
fcoms
mov
sub
in
movsl
add
push
imul
add
inc
pop
fimuls
mov
sub
cmpsl
stos
movsl
rcr
push
inc
pop
cmp
push
cwtl
loopne
add
int3
push
xor
pop
cs
xor
xor
or
jns
add
inc
mov
sub
jo
xor
xor
dec
mov
dec
in
out
inc
sahf
pop
or
test
dec
pop
dec
pop
jne
xchg
arpl
xlat
in
stc
clc
outsl
sbb
pusha
adc
ss
out
push
or
push
jbe
in
mov
fbstp
xchg
adc
in
xor
mov
push
jno
xchg
mov
mov
xor
mov
jp
pop
sbb
popf
sub
sbb
push
or
stos
xchg
inc
int
add
add
scas
sar
push
jnp
clc
adc
cli
mov
faddl
cmpsb
pop
pop
or
sbb
test
addb
mov
loop
sub
ret
scas
push
cmpsl
dec
imul
pushl
dec
lds
aad
repnz
stos
mov
aaa
push
or
je
push
arpl
loopne
jbe
push
push
jp
call
aaa
fstps
jmp
add
jecxz
int3
roll
pop
loopne
dec
push
cmc
test
xor
outsb
rorl
out
pop
in
movl
test
sub
cmp
enter
daa
xchg
cmp
mov
sbb
rorb
insb
inc
jge,pt
cmp
addr16
lahf
jg
adcb
mov
es
adc
xchg
outsb
sub
mov
push
fcoml
std
jns
pop
mov
pop
or
daa
and
jmp
outsb
stc
fcoms
mov
call
sbb
sbb
push
inc
arpl
sub
insb
pop
outsl
outsb
lea
or
pop
fdivl
mov
sub
adc
sahf
imul
mov
stos
adc
mov
scas
call
mov
mulb
mov
ss
adc
sub
xor
lret
push
adc
testb
jbe
int
adc
xor
in
loop
mov
mov
adc
cld
lretw
mov
cmp
adc
cli
pop
mov
mov
or
sbb
sbb
mov
pop
out
sbb
lahf
xchg
jecxz
xor
add
call
cmp
mov
dec
mov
lea
in
adc
stc
sti
cmp
jb,pn
ja
sahf
mov
nop
clc
xchg
dec
mov
movl
push
pop
les
sub
repz
cs
and
sbb
call
outsb
dec
push
pop
dec
ljmp
add
add
jbe
and
into
and
inc
add
dec
jb
movsb
cli
dec
fadd
dec
je
jle
jecxz
and
jge
mov
cwtl
jnp
dec
mov
cltd
mov
add
rolb
xchg
adc
ja
fisttpl
iret
lock
push
das
fists
mov
and
and
sahf
pop
rcl
cmc
cmp
dec
xchg
cmpsb
into
dec
inc
and
cmpsl
xchg
outsl
mov
push
call
lret
cmp
jl
push
sub
in
mov
rclb
sub
inc
aam
mov
ret
cwtl
pop
loopne
mov
jns
push
xchg
clc
lcall
ljmp
push
lods
int3
pop
inc
mov
sub
inc
push
std
dec
cmovae
push
add
inc
sub
push
inc
xchg
dec
iret
cld
imul
pop
imul
ss
xor
stos
adc
push
cmp
cmp
pop
cmp
add
add
cli
mov
xor
jnp
iret
test
mov
outsb
adc
mov
or
ja
ss
dec
fisttps
in
and
cmp
mov
jne
mov
mov
jns
js
in
and
out
inc
ljmp
adc
xor
sbb
mov
clc
stos
dec
jle
adc
mov
hlt
lock
jmp
jmp
fidivrs
lds
pop
mov
mov
dec
jg
stos
add
movsl
cmp
or
lcall
and
lcall
adc
mov
out
adc
inc
and
mov
push
dec
dec
ret
push
ja,pn
fisubl
aad
sbb
sbb
out
rorl
iret
and
rorb
repnz
mov
arpl
mov
jbe
fildll
and
pop
sbb
loope
aaa
cwtl
mov
add
fcmovne
mov
add
xor
leave
or
mov
pop
fdivrs
cmp
mov
push
jns
sbb
in
fnstsw
clc
daa
xchg
in
cmp
cmpsb
and
add
push
inc
mov
pop
repnz
notb
cmpsb
fwait
test
icebp
mov
pusha
hlt
jbe
out
leave
lcall
and
js
or
pop
clc
fildll
loope
hlt
jne
add
cmp
enter
or
sarb
jb
imul
mov
xor
add
int
mov
imul
xor
cli
fsub
aad
sub
or
inc
mov
xorb
dec
push
test
xchg
cwtl
test
pop
jl
adc
scas
cmp
out
inc
mull
das
lret
lods
shrl
mov
into
mov
in
cmc
out
xor
pop
fsub
sahf
fucom
stc
mov
fs
jg
lods
inc
add
dec
sub
mov
mov
cli
xor
xor
or
lahf
decb
shlb
pop
iret
loopne
xchg
mov
adc
jecxz
sub
adcl
mov
xchg
add
sbb
out
int3
xlat
out
or
mov
adc
mov
call
call
mov
dec
ljmp
fldcw
arpl
sub
repz
and
les
in
adcb
pop
mov
jmp
lock
pop
push
or
inc
or
testl
pop
mov
dec
dec
aam
je
xchg
push
test
jp
hlt
jl
cwtl
ss
push
subl
push
loope
cmpsb
cmp
leave
loopne
mov
sbb
jbe
add
mov
jbe
mov
hlt
das
shll
mov
mov
dec
orb
xor
sahf
sti
or
cld
mov
js
stos
leave
repnz
test
push
mov
scas
pop
xchg
sub
lods
out
aam
jb
ret
daa
pop
rclb
mov
fstl
int3
inc
xchg
pop
cli
imul
sti
pop
sub
dec
leave
ljmp
sub
out
call
xor
in
cpuid
pop
rolb
sahf
cmc
push
cltd
xlat
test
xor
xchg
arpl
cmp
test
popf
push
xchg
loopne
rorl
ss
stos
add
mov
add
add
xchg
lcall
jl
or
leave
xor
aam
mov
mov
nop
mov
lds
call
inc
cmc
inc
orb
in
dec
and
pushf
jne
call
inc
out
xchg
aam
call
and
mov
out
push
sub
sbb
test
mov
xor
add
pop
push
fsubp
es
mull
ja
fists
fdivr
jmp
test
jg
push
loop
into
popf
jnp
add
xchg
repnz
js
inc
and
iret
stc
insb
xor
mov
or
pop
iret
cltd
and
add
pop
test
inc
inc
xor
fdivs
stc
sbb
pop
ret
or
xorb
ficompl
fs
add
sbb
pop
gs
xchg
fisubs
xlat
xchg
shrb
jle
mov
test
leave
mov
out
arpl
rclb
jge
nop
push
xchg
adc
dec
or
or
adc
pop
movsb
icebp
push
mov
push
shll
pop
xchg
in
pusha
mov
xor
cmpsb
movsb
cmp
and
xor
test
les
enter
daa
test
cmp
push
scas
jno
call
dec
arpl
ds
frstor
xor
push
mov
sbb
test
mov
xchg
mov
mov
push
pop
movsl
dec
push
js
xor
push
frstor
loope
out
sub
or
dec
xchg
push
outsb
mov
lods
dec
rclb
sub
shrl
addl
cwtl
adc
push
fdivs
pop
mov
mov
imul
imul
xchg
and
out
out
push
mov
int3
or
stc
leave
pop
sahf
scas
mov
dec
orb
jmp
push
xor
mov
in
mov
dec
sub
or
ss
cmp
cmp
mov
sub
jbe
inc
out
mov
sub
cmc
mov
xor
int3
outsl
add
xor
inc
jns
fs
sahf
adc
mov
stos
lods
sahf
shrl
fistl
xor
sub
dec
jle
or
cmpsb
push
sub
aaa
pop
and
pop
pop
imul
pop
adc
xchg
ret
lods
les
and
push
sub
call
in
out
ds
xchg
out
cmp
xor
dec
xor
mov
push
fldenv
or
lods
icebp
rol
test
lea
jno
aas
insb
stos
insb
aaa
mov
mov
mov
pushf
pop
dec
cmc
jmp
mov
mov
inc
ss
jbe
pop
aas
cmp
mov
je
cli
dec
jecxz
push
lock
sar
fwait
pop
mov
ss
mov
push
push
add
pop
test
mov
jnp
ror
pop
das
popf
aas
mov
mov
jg
movsb
shrl
inc
es
pushf
stc
insl
mov
into
mov
shr
mov
cld
mov
dec
lret
sbb
lea
mov
icebp
mov
int
xor
cltd
lods
sub
mov
aam
test
push
adc
xor
clc
adc
sti
ljmp
add
test
imul
fildll
add
pop
or
sbb
jle
dec
push
dec
popf
pop
subb
adc
in
lahf
pop
arpl
xchg
push
adc
xchg
add
xlat
sbb
cld
jo
or
push
fsubl
hlt
aam
mov
sbb
ja
shr
inc
mov
or
int3
pop
fwait
sbbl
fidivs
je
cmp
push
fidivrl
jbe
in
inc
or
adc
sub
push
test
in
lahf
jp
push
jb
push
test
adc
jge
sub
sub
push
push
fbstp
sub
sbb
xchg
je
movsb
cmpl
push
movsl
and
aas
and
imul
jmp
je
inc
sbb
sbb
out
xchg
bound
push
push
xor
sbb
jno
clc
cmp
cwtl
pop
mov
pop
jg
adc
xchg
or
std
mov
inc
sub
fimull
iret
xchg
pop
loop
sbb
jo
imul
lahf
fimuls
or
inc
mov
inc
test
mov
xor
mov
arpl
and
fisubs
jge
jecxz
sbb
insb
aaa
push
mov
or
xchg
add
ja
pop
insl
or
sahf
and
xor
jg
mov
and
xor
push
pop
pusha
xor
stos
leave
ds
daa
test
sarl
imul
in
jnp
jl
out
push
dec
rcrb
inc
movsl
pinsrw
ds
lahf
fcompl
sub
add
jl
js
rcll
inc
jle
cltd
jne
call
js
in
fs
jbe
mov
test
shl
insb
aam
fcomps
sub
and
sub
xor
xor
lret
out
sbb
in
pop
xor
ss
push
dec
pushf
jae
shl
mov
mov
outsb
inc
lcall
mov
cmp
sahf
push
and
fadds
subb
inc
mov
ds
jg
pop
mov
lock
sbb
ss
push
cmp
pop
es
in
cs
clc
rcl
jno
insl
pop
dec
sbb
xchg
div
push
insb
sub
ss
in
iret
loop
mov
fwait
fs
mov
int
push
pop
movsb
lods
test
mov
xchg
pop
fwait
out
test
xchg
test
push
or
mov
mulb
adc
loopne
shlb
xchg
xchg
icebp
jo
fisubrl
xchg
add
cltd
cmp
ss
pop
bound
xlat
cmp
mov
push
dec
sti
inc
idivl
cs
push
add
jae
pop
nop
mov
clc
dec
test
push
inc
lahf
aaa
push
imul
jl
lret
sub
jl
lret
call
jmp
into
pop
pop
test
push
mov
inc
jmp
adc
pop
fwait
arpl
sbb
aas
adc
mov
pop
pop
mov
je
mov
jecxz
push
ret
testb
std
inc
and
mov
int
mov
cmpsb
lds
mov
mov
enter
aaa
xlat
das
jl
fisubl
inc
out
cmp
dec
sarw
into
push
insl
lahf
cmp
dec
xor
jns
subl
add
enter
loope
loopne
xchg
lret
mov
cmp
xchg
outsl
in
mov
in
orl
hlt
arpl
ret
inc
sub
push
xlat
test
cmp
clc
dec
inc
int
xchg
lods
loopne
loope
push
popa
js
lods
or
jmp
jnp
gs
push
and
dec
punpcklbw
cltd
inc
pop
sbb
pop
cmp
add
je
stc
adc
sub
mov
cmp
push
int3
loopne
fbstp
push
push
and
and
add
cmpb
pop
xor
or
sub
mov
aaa
in
mov
cmp
dec
mov
jge
or
data16
dec
call
lret
arpl
int3
jne
jns
push
in
push
jg
jb
xchg
adc
xchg
or
sbb
adc
jmp
sub
fmuls
jle
fdivrl
in
loope
pusha
mov
mov
xchg
add
jmp
aas
mov
orl
inc
push
push
jle
mov
add
data16
and
sti
insb
or
mov
or
scas
dec
in
push
xchg
aad
adc
xchg
iret
push
pop
sub
pop
repz
inc
inc
mov
jae
inc
push
scas
and
sub
inc
stos
loopne
fidivrl
sahf
nop
sbb
pop
test
mov
shrl
pop
push
enter
lea
cmpl
hlt
mov
shll
push
sbb
sbb
cmp
or
mov
add
out
int3
jge
pop
pushf
xor
push
sub
and
scas
imul
adc
fwait
cmp
imul
data16
sbb
in
xchg
es
das
jb
daa
addl
jno
sbb
jl
rcr
dec
inc
mov
or
sti
and
lock
sti
das
adc
popf
lods
test
push
aas
adc
test
cmp
loope
repz
jmp
jmp
imul
cmpl
sub
or
stos
adc
test
cmpsl
adc
or
xor
loope
or
fldt
push
dec
xchg
inc
int
loopne
sub
outsb
inc
pop
imul
lcall
or
jecxz
jb
xlat
xchg
lahf
sahf
cmc
jg
test
call
jg
pop
je
clc
addb
jmp
and
in
add
fstps
cmp
sbb
mulw
mov
mov
into
pop
fadds
xor
int3
popf
loop
jp
stc
scas
bound
push
pop
mov
data16
sub
mov
mov
cli
lret
xor
or
ja
mov
mov
loopne
cmc
mov
arpl
mov
pop
loopne
movsl
push
in
push
adc
add
cmp
aaa
xchg
sbb
arpl
mov
lret
rep
aad
fsts
pop
insl
roll
jnp
addr16
repz
jge
das
shlb
xor
xor
sbb
adc
in
pushf
scas
push
pop
jmp
dec
sahf
pop
jge,pt
inc
mov
adc
aas
scas
push
dec
jb
test
arpl
hlt
jecxz
fcomi
mov
cmp
addr16
xorb
lods
call
dec
jae
loope
xor
push
lock
outsb
mov
std
pop
inc
and
fdivrl
es
jne
insl
xchg
scas
cmpsl
cmpb
mov
scas
mov
dec
clc
out
in
mov
lcall
pop
or
pop
sub
mov
aam
cmpsl
dec
ret
aam
jae
lcall
clc
xchg
insl
xchg
aam
xchg
ljmp
ret
lods
js
cmp
mov
hlt
xchg
lods
jb
push
sti
adc
mov
or
cltd
jl
rolb
push
inc
xchg
fisttpll
push
ljmp
int3
int3
sbb
jbe
rcll
aam
stos
into
pusha
push
mov
add
push
jl
pushl
std
xor
xchg
and
mov
jp
push
mov
neg
mov
add
clc
dec
stos
and
or
aam
fists
lret
cmc
xchg
push
cmp
xor
bound
add
in
mov
xchg
rorl
sub
or
ja
loop
repz
jo
mov
std
sbb
sbb
jle
mov
in
xchg
pusha
ja,pt
fcomip
or
xchg
aam
jg
or
xchg
or
jne
cwtl
or
push
sub
int
lock
adc
push
inc
push
mov
insb
jae
xlat
jnp
loop,pt
scas
addb
or
adc
cmp
iret
mov
out
cmp
pop
sub
mov
icebp
jae
dec
jo
mov
push
in
movsl
push
sub
fidivl
outsl
xchg
or
sbb
sbb
imul
push
rol
push
inc
mov
and
leave
out
cmp
hlt
jmp
fsubs
mov
jbe
lods
imul
jns
lds
sbb
xchg
fimuls
enter
rolb
pop
lret
and
xor
xor
mov
imul
fisubl
cmpsb
sbb
jns
loope
sub
in
daa
adcb
push
adc
loope
jl
mov
dec
mov
push
ds
xor
add
dec
xchg
lods
sahf
test
sbb
push
imul
sbb
int
and
xchg
pop
hlt
dec
sbb
out
loope
cwtl
sub
inc
sub
pop
jp
outsb
call
in
shr
test
stos
and
xor
sbb
inc
xor
daa
xchg
push
push
push
dec
int
mov
jae
ljmp
push
mov
test
sub
sahf
rcrl
out
inc
and
mov
mov
divl
mov
push
mov
cmp
ss
xchg
cmp
sarl
mov
and
jecxz
add
sti
xchg
idivl
cmc
loopne
sub
in
aam
outsl
mov
imul
dec
cli
frstor
adc
mov
pop
data16
lods
push
ret
jno
mov
or
std
mov
xor
stos
cmp
leave
inc
or
and
gs
pop
shl
adc
lcall
add
xor
add
aam
xchg
or
add
test
outsl
cmp
fdivrl
jecxz
dec
sub
in
sub
add
movsb
bound
cs
mov
add
out
aas
sbb
dec
xchg
faddl
repz
flds
adc
push
rorl
repz
lea
or
jmp
fsubrs
pushf
pop
inc
out
jmp
dec
fcompl
mov
inc
sub
pop
inc
xchg
addr16
dec
mov
jb
sub
and
sbb
cltd
and
test
push
std
nop
push
mov
jae
adc
orl
jecxz
mov
test
lock
repnz
cmp
dec
mov
mov
mull
mov
fisubs
fisttpl
add
and
cmpsl
or
popf
icebp
xchg
cmp
adcl
in
and
push
pop
adc
sub
sahf
sub
stos
test
add
adc
and
add
or
data16
cmpsb
mov
lods
jecxz
imul
jle
xchg
repz
push
inc
into
nop
inc
add
roll
test
jle
mov
mov
dec
shlb
push
test
fidivrl
sbb
mov
sbb
mov
mov
push
jl
stos
jle
add
jae
adc
test
or
pushf
arpl
rorl
mov
out
mov
mov
in
sahf
dec
in
inc
push
inc
imul
out
push
push
cmp
jne
cmp
mov
in
out
adc
nop
bound
inc
jns
inc
cmpsb
in
imul
jae
out
nop
dec
sub
pop
or
loope
xor
lods
xchg
mov
mov
and
or
jp
in
or
dec
pop
fists
push
xchg
cmpsl
jnp
jmp
aad
iret
andl
and
out
cmp
mov
subl
inc
scas
and
stos
jnp
aaa
push
push
and
clc
add
adc
arpl
popa
adc
pop
ficomps
inc
mov
and
outsb
test
inc
test
push
pop
sbb
test
mov
xor
push
lds
in
xchg
imul
add
repnz
test
ss
dec
jbe
rcr
xor
subb
mov
aas
adc
push
and
pop
cli
aam
push
inc
push
leave
xor
nop
pop
icebp
scas
sub
and
mov
gs
ja
cmpsb
pushf
sub
in
pusha
mov
enter
daa
subl
adc
add
mov
ds
ret
pop
movsl
and
xor
lahf
cmp
push
jl
jg
pop
inc
int
call
leave
or
mov
jecxz
js
xchg
push
pop
xor
movsl
loope
sbb
sub
pop
dec
cmp
movsl
popf
outsb
dec
add
xchg
adc
clc
dec
scas
and
dec
sub
xchg
xchg
push
jmp
xchg
sub
adc
push
adc
out
sbb
sahf
cmp
loop
sti
cmp
jg
xchg
cmp
in
mov
jmp
sahf
ss
dec
fnstsw
mov
loope
and
pop
ret
lods
rcrl
sbb
and
cmc
cmpsl
xchg
xor
push
outsl
sbb
dec
stc
sbb
aaa
adc
aas
fldenv
pop
mov
mov
out
cli
xor
xor
cmp
mov
idiv
lea
sbb
loopne
lcall
xchg
push
imul
cwtl
movb
fcomps
sbb
push
js
xlat
and
leave
sub
adc
in
xchg
in
sti
push
mov
pop
aad
xchg
mov
sbb
pop
dec
lds
add
les
mov
xor
ljmp
push
and
adc
xchg
mov
or
pop
test
inc
mov
adc
jb
in
dec
mov
jecxz
jecxz
out
fwait
testb
clc
std
aaa
enter
and
data16
and
cmp
xchg
testl
mov
cmp
repnz
sbb
mov
imul
and
repz
shrl
push
shrl
aam
dec
and
mov
and
mov
pop
mov
cld
popa
insb
cld
lret
fistpl
mov
test
or
dec
pop
in
in
imul
int
ret
repnz
icebp
push
and
repz
clc
cld
push
push
xor
cmp
lods
dec
nop
sub
jl
out
cmp
pop
push
mov
adc
jge
js
std
lret
ljmp
mov
movlps
cmp
and
test
jae
mov
les
nop
stos
lods
mov
or
pop
adc
mov
std
xor
xchg
or
pop
mov
add
in
mov
insb
xor
orb
dec
xchg
daa
mov
or
sub
fwait
cmp
dec
mov
mov
or
pop
xchg
jns
and
sub
sbb
out
cld
aam
scas
and
or
inc
mov
mov
loopne
mov
xchg
call
xlat
in
cld
fldenv
xor
fbstp
int3
ds
jp
gs
mov
adc
mov
jg
test
ret
stos
mov
and
mov
sbb
scas
jne
mov
adc
iret
insl
ret
xchg
pop
cwtl
test
inc
addr16
jae
sub
inc
mov
or
mov
jmp
out
cmp
fmuls
pusha
sbb
mulps
adc
push
movsl
shrb
push
bnd
hlt
leave
ffree
push
hlt
sbbl
mov
sbb
les
or
and
int3
ds
js
sub
push
sub
bound
jmp
sub
and
pop
lods
cmp
orb
lock
lods
cmpsb
pop
jno
in
inc
xchg
sti
enter
daa
addb
jno
xlat
adc
add
mov
and
jb
cmp
lahf
pop
out
dec
imul
inc
mov
dec
push
pop
push
popf
imul
je
jp
enter
test
subl
out
adc
sahf
aas
push
lods
pop
mov
xchg
add
popf
aaa
xor
roll
pop
inc
aam
insb
and
sub
cld
leave
lcall
mov
sub
dec
test
xor
adcb
pop
jg
mov
orb
aad
and
mov
add
fmuls
xor
inc
mov
shll
daa
mov
daa
cmc
sbb
xchg
add
outsb
pop
loop
mov
fs
loop
jmp
stc
aam
push
fs
adc
cmp
sbb
pop
push
sbb
arpl
hlt
cmp
and
lret
sbb
add
cmp
inc
or
outsl
mov
adc
mov
outsb
xchg
xchg
dec
scas
sbb
dec
cmpsl
mov
sub
fisubs
mov
stos
cs
xchg
rcl
mov
jmp
and
push
inc
jmp
xchg
fnstenv
std
repz
or
or
call
out
sub
and
adc
push
pushf
scas
adc
decl
icebp
inc
adc
aas
mov
jb
iret
mov
je
lock
jecxz
jmp
notb
and
ficomps
mov
mov
cmpl
fcmovnb
iret
push
mov
inc
imul
clc
xlat
movsb
mov
and
and
cli
out
es
ret
insl
cmp
test
xchg
loope
jg
loopne
shlb
icebp
xor
sbb
mov
out
lret
inc
clc
js
add
and
mov
inc
sarb
cmpl
cwtl
iret
pop
ret
xor
push
fnstsw
or
aaa
sbb
xchg
xchg
inc
cli
ljmp
push
lods
mov
xchg
jno
filds
sub
icebp
lock
xchg
add
clc
imul
dec
aam
xchg
inc
dec
mov
icebp
addl
pusha
aas
rcll
out
stos
fwait
jae
push
mov
push
add
movsb
call
pushl
fwait
inc
jno
pop
popf
scas
xor
mov
mov
inc
scas
add
daa
aaa
movsl
ja
and
dec
test
xor
push
mov
dec
je
shll
cmp
sub
iret
jmp
bound
js
mov
mov
mov
or
sub
std
inc
loope
ffreep
xchg
xorb
jp
mov
jbe
jle
jmp
movsl
pusha
movntps
xchg
dec
test
jmp
imul
addl
push
je
imul
mov
push
add
stos
sub
cmp
mov
fdivl
scas
fmuls
cmp
arpl
ret
test
iret
loope
inc
jb
int3
jae
add
inc
mov
push
cs
cmpsl
cli
in
mov
xchg
or
dec
push
fidivrs
and
jns
jno
lret
mov
iret
cwtl
fwait
leave
push
subl
int3
aad
arpl
add
jge
fcoml
aaa
rorl
dec
add
or
push
or
or
jo
and
pop
fadds
movsb
jnp
aad
mov
sub
sub
daa
jg
sarl
jae
jno
or
jl
stos
xchg
dec
std
out
cmpl
xor
and
xor
lahf
ja
scas
push
and
call
cwtl
inc
dec
cli
insb
inc
clc
cwtl
pop
popl
lea
mov
cmc
push
inc
adc
fisttps
repz
test
cli
xchg
adc
jns
pop
or
roll
mov
fcomi
xor
filds
pop
or
sub
je
pop
addr16
lcall
push
fmull
push
loop
cmpl
xorb
adc
fistpll
mov
and
jg
into
and
pusha
ss
adc
fadds
lahf
mull
loop
ror
enter
cmc
sbb
ja
xor
cli
mov
loop
js
stc
mov
mulb
pushf
adc
sbb
jecxz
dec
lods
or
cld
mov
lods
out
xchg
jle
xchg
xchg
sub
imulb
cmp
mov
es
cmp
mov
negb
inc
jecxz
aaa
test
imul
das
cmp
lea
mov
cmp
lahf
sub
fisubs
imul
mov
cmp
dec
adcl
inc
xchg
je
ljmp
repz
push
cmp
imul
and
xchg
push
ljmp
sub
jmp
sarl
lret
inc
mov
mov
aas
sub
add
out
lods
dec
nop
ds
jecxz
push
mov
xchg
mov
std
test
cwtl
push
jge
mov
pop
popa
mov
flds
out
imul
rolb
pop
aad
lock
push
pop
mov
rcrl
dec
mov
insl
and
push
cmpsl
jle
in
mov
or
cs
mov
lret
mov
cltd
mov
mov
and
xchg
pop
sub
gs
arpl
popf
ret
adc
cmp
jns
frstor
add
xchg
shl
push
ljmp
xchg
test
mov
push
addr16
jecxz
add
pop
lods
cltd
pop
clc
add
pop
mov
test
pusha
pop
or
cmpsb
jb
sbb
shlb
gs
mov
push
insb
push
add
mov
xchg
cltd
xor
outsb
fisttps
mov
loopne
push
inc
mov
add
mov
loop
data16
les
inc
push
jge
or
aam
fwait
fwait
icebp
and
jne
jne
push
add
scas
jge
in
xor
jns
into
xchg
inc
xchg
xchg
std
cmp
sub
clc
shrb
mov
std
mov
push
sub
bound
mov
adc
mov
push
add
pusha
stos
cmp
outsb
pushf
fcoms
in
xor
sub
push
aaa
movsb
popf
mov
mov
mov
xchg
mov
shl
adc
inc
jnp
mov
dec
push
cli
mov
test
xor
test
xchg
mov
inc
jge
scas
jae
sbb
inc
mov
add
inc
mov
xchg
fs
pop
imul
ficomps
cmp
lds
out
mov
in
mov
cli
mov
repnz
sbb
lret
loop
hlt
pop
pusha
xor
testl
pop
xchg
sbb
push
xchg
xchg
and
int3
adc
xor
xorl
stos
xor
mov
repnz
and
int3
cmp
leave
dec
push
icebp
icebp
adc
adc
pand
jle
loope
popf
notl
jno
pop
xchg
jl
mov
dec
insb
mov
ds
xchg
lahf
xchg
push
cmc
hlt
movsb
test
dec
jle
fdivrs
pop
sbb
insb
and
pop
lock
push
push
int
loope
jl
sub
test
cmp
arpl
insb
movsl
rclb
subb
add
insl
jnp
add
ja
pop
dec
mov
cmp
fsubrs
sahf
cmpsl
pop
out
lcall
ljmp
xorb
and
ja
add
rolb
inc
or
xchg
fsubrs
mov
mov
das
sub
xor
mov
test
lock
mov
mov
jno
enter
cld
inc
aam
pop
outsl
push
mov
cmp
pusha
sub
cmp
and
in
lods
out
xchg
sub
pop
push
push
cli
leave
inc
loope
int
cmp
daa
or
jl
gs
mov
jp
xor
adc
adc
inc
adc
stc
add
sbb
mov
sbb
sbb
mov
ljmp
pop
out
in
aam
fwait
sti
pusha
imul
stos
cmpsl
dec
dec
loop
cmp
fldenv
jmp
les
add
lea
sub
pushf
repz
in
int
cwtl
aas
jnp
adc
jecxz
fstp
insl
pop
insl
dec
inc
inc
inc
xchg
dec
inc
repz
jb
inc
push
dec
pop
jo
je
add
jecxz
jmp
neg
pop
sub
mov
mov
and
mov
xchg
rorl
fistpl
int3
xchg
mov
push
mov
lock
add
mov
mov
nop
sub
and
mov
cwtl
insb
sub
out
imul
loope
adc
add
ss
outsl
cld
loop
sub
mov
mov
pop
nop
pop
cmpsb
push
lock
fsubrl
mov
cmp
lahf
icebp
test
roll
clc
lods
jle
xchg
sub
xchg
mov
popa
add
sbb
addl
push
in
push
inc
jmp
setp
mov
test
cmp
xchg
add
inc
inc
test
pop
inc
xchg
aad
roll
jo
adc
jns
dec
push
testb
add
ficoml
xor
or
add
out
push
mov
leave
lret
imul
clc
pop
popf
add
ja
out
dec
push
test
orb
lret
dec
cmp
jne
into
and
lea
add
mov
in
lea
out
testb
repz
fldl
jp
mov
jno
hlt
mov
faddl
jle
daa
adc
pop
fwait
cmc
pusha
inc
pop
or
lea
aad
repz
push
jmp
add
andl
push
cli
pop
pop
popf
mov
mov
push
jg
subb
das
pushf
insb
mov
sbb
scas
sahf
fcmovu
push
inc
in
adc
mov
iret
xchg
data16
ret
mov
cmp
sub
jae
ja
inc
rcrb
call
xchg
add
lahf
cmpsl
ss
xchg
mov
cmp
imul
fidivrs
adc
rolb
and
bnd
test
inc
out
hlt
bound
int3
arpl
fdivl
sahf
ljmp
sub
dec
xchg
mov
xchg
dec
incl
pop
mov
jp
rcll
push
jo
sahf
cld
scas
movsl
mov
test
test
in
ja
movsb
xchg
movsb
and
cmpsb
test
lods
in
cld
pop
or
adc
cmp
das
add
jl
cmovnp
cmp
movsl
inc
stc
sbb
or
sti
lahf
mov
and
test
adc
sub
lret
pop
fnsave
mov
das
outsl
mov
loope
nop
jg
cmp
notl
adc
das
mov
cmpb
sub
sub
add
push
jb
shrb
mov
mov
outsl
lds
shrl
push
jno
mov
in
aas
sub
ficomps
mov
jg
cmp
ljmp
mov
mov
and
lcall
jp
and
push
jmp
lret
pop
sar
or
ficompl
sti
sbb
push
je
stos
jae
cmc
ret
icebp
cli
xor
pop
sub
leave
das
sar
stc
jle
fs
nop
adc
jmpw
lods
inc
adc
pop
fwait
mov
xor
mov
incb
in
ss
aad
pop
sbb
mov
imul
pop
mov
xchg
fildl
outsl
cmp
lods
in
xlat
push
add
mov
aas
inc
push
sti
pmullw
cs
aad
sahf
stc
nop
xchg
push
inc
and
loopne
pop
mov
repz
push
cli
lea
mov
les
pop
sbb
addr16
ret
js
jmp
scas
sub
sbb
inc
push
add
imul
cwtl
je
or
fwait
negb
jge
std
shll
cwtl
leave
and
mov
test
clc
cmpl
inc
fisttpl
add
xchg
cld
jbe
test
xchg
lds
inc
jo
and
adc
es
subl
fmuls
xchg
push
cmpsl
jl
pop
mov
mov
fmul
xchg
in
mov
les
cmp
lds
shlb
es
aam
jmp
ret
cs
rcll
mov
gs
call
push
lret
sbb
jo
fwait
push
out
or
jns
sbb
push
scas
add
ret
dec
outsb
test
mov
mov
and
test
ljmp
pop
sahf
xor
pushf
mov
sub
cltd
xchg
incl
cmc
or
pushl
hlt
push
xor
xor
cmp
mov
or
stos
mov
pop
ret
mov
jle
add
lahf
addl
jg
push
int3
jb
stc
xlat
loope
sbb
lods
push
loopne
cmp
bound
push
gs
or
in
call
pop
out
xor
sub
out
je
fmull
jp
pusha
in
mov
pop
mov
mov
mov
jle
mov
in
cwtl
pop
pusha
loopne
push
fildll
jecxz
rolb
iret
xchg
int3
lds
push
mov
add
add
mov
sub
lcall
repz
xchg
inc
scas
add
js
mov
adc
iret
push
iret
lock
pop
pop
je
cmpsl
inc
xchg
psubw
sbb
inc
ret
daa
aad
addb
mov
xchg
adc
mov
inc
inc
sbb
popa
fcomip
lds
popf
ja
sbb
mov
enter
mov
jo
arpl
jbe
clc
je
cmpsl
mov
aaa
push
pop
jns
jp
jmp
dec
adc
int3
ljmp
push
mov
mov
jo
mov
mov
sbb
cmp
aam
push
popl
cmpsb
sub
jbe
jecxz
xchg
enter
daa
jl
pop
cmp
sbb
jno
jb
jl
aas
pop
dec
dec
or
sub
add
cmpsl
jmp
lahf
aam
mov
fwait
push
mov
fbld
testb
lea
out
js
mov
pop
outsb
push
aas
loope
fisubrs
sbb
cmp
xchg
adc
adc
or
adcb
sbb
leave
add
lea
fs
int
mov
jmp
lcall
cli
fcoml
hlt
ficompl
adc
addb
add
mov
imul
and
adc
icebp
pop
imul
fst
scas
lret
pop
rorl
pop
sbb
mov
cmc
mov
xorb
aad
outsl
fdivrl
or
mov
mull
leave
adc
fistpll
mov
sahf
ret
gs
cli
das
ret
push
xor
mov
or
xchg
mov
loopne
xchg
je
cmp
push
adc
sub
add
out
xchg
sahf
daa
sti
sbb
xor
fwait
cltd
sub
ret
stos
jno
sti
mov
adc
aad
pop
add
mov
or
inc
pop
repz
inc
add
inc
fcoms
call
jecxz
mov
adc
cwtl
sub
mov
loopne
inc
push
cmpsl
addl
sbb
or
jb
test
dec
cmc
mov
xchg
jecxz
out
negb
cld
std
jp
imul
mov
mov
inc
adcl
fdivs
cmpsl
cmp
and
das
je
cpuid
loope
mov
and
jmp
shll
add
insl
xlat
mov
ret
cmpsl
jnp
sahf
mov
nop
mov
cld
cmp
repz
lret
mov
push
pop
in
test
add
in
sub
lret
ret
mov
loop
fstl
push
or
and
pop
xchg
lea
sbb
jns
sti
popa
xor
lods
gs
mov
imul
xchg
popf
lcall
pop
bswap
add
cltd
std
insb
add
push
xchg
int
cmp
push
test
emms
xchg
sbb
sbb
sbb
pop
inc
nop
stos
push
out
add
cmp
mov
aam
addl
iret
test
pop
or
dec
shlb
outsl
mov
dec
mov
mov
adc
lahf
ja
mov
push
inc
jmp
fwait
sub
dec
add
jne
lock
mov
and
dec
shlb
imul
jecxz
in
daa
xchg
ljmp
sub
jmp
fcmovnbe
jp
sarl
mov
mov
xor
jp
jnp
loopne
lret
repnz
leave
mov
addb
movsl
clc
popf
add
mov
std
cltd
mov
and
xor
jnp
es
fs
push
iret
pop
ret
add
ret
pop
stos
cs
inc
sahf
dec
shll
jmp
or
push
sbb
inc
mov
sbb
mov
jne
xor
lds
push
es
sbb
mov
clc
negb
jnp
xchg
jbe
lds
dec
fists
aaa
int
inc
or
insb
add
stos
jno
aad
jno
adc
sbb
cltd
outsl
xchg
xor
mov
scas
arpl
xchg
stos
loop
cmp
lock
cmpsl
push
stos
push
jp
scas
cmpsl
in
lret
enter
daa
jnp
lcall
xor
jl
ret
testl
in
dec
movsl
dec
or
and
rcrb
outsb
int3
sti
test
stos
xchg
mov
push
das
fcomps
cli
cmpb
inc
pop
lods
in
push
fwait
mov
sub
and
cmp
mov
mov
shl
adc
xchg
outsl
andb
sbb
sbb
xor
fldl
addr16
jae
btr
arpl
lcall
fcmovu
cmp
mov
dec
pop
rcrl
lods
add
pop
cmpsb
icebp
mov
jecxz
mov
xchg
pop
and
cli
jno
cwtl
call
loop
pushf
inc
sub
shll
cmp
sbb
inc
into
jno
out
push
ja
xor
fwait
outsl
mov
mov
stc
addr16
fs
in
adc
out
les
lods
movsb
dec
lret
mov
jmp
pop
mov
cli
bound
or
jne
or
mov
leave
xchg
adc
loopne
push
pop
pop
jno
imul
dec
rolb
leave
orl
loop
cmp
pop
xlat
pushf
mov
or
adc
clc
fildll
push
push
mov
nop
cmp
pop
dec
ljmp
dec
in
enter
rol
mov
dec
xchg
movb
lea
lods
call
bound
adc
mov
stos
fwait
scas
pop
push
lcall
inc
pushf
cmp
cmpsl
lods
gs
je
dec
insb
faddl
sahf
sbb
mulb
and
cwtl
aas
sbb
mov
inc
hlt
mov
movb
adc
fldt
sahf
fs
mov
lock
mov
mov
mov
dec
and
sbb
roll
stc
sub
mov
shl
cmpsl
jp
sarl
addr16
movsl
cld
arpl
cmpl
stos
add
rcl
sbb
fcmovnbe
dec
icebp
ret
dec
jmp
push
mov
mov
clc
pop
imul
int3
aad
ljmp
fwait
lods
rcr
mov
into
xor
sbb
shl
cmp
mov
jp
outsl
in
cltd
xor
mov
mov
test
xchg
dec
mov
leave
aad
mov
dec
mov
dec
outsb
leave
pop
adc
in
stos
inc
cmp
fisttps
pushf
add
sub
cmpsb
xor
sub
or
or
inc
loope
cmpsb
xlat
fidivs
jmp
in
into
add
ja
push
dec
inc
adc
inc
jb
aaa
or
adc
fwait
push
into
movsl
dec
jecxz
aaa
jne
xchg
sub
out
sub
cmpsl
bound
fpatan
jns
fstps
xchg
cmp
aam
sbb
cmp
addr16
loope
jl
gs
jmp
mov
sub
jmp
fldt
leave
pusha
push
cmp
fucomip
insb
enter
jnp
rclb
xchg
bound
adcl
nop
push
inc
clc
inc
popf
sub
adc
cmp
scas
stos
imul
sbb
dec
jnp
jnp
scas
mov
push
push
mov
adc
and
rcll
add
loopne
sub
and
pop
dec
or
lret
mov
inc
and
jns
or
sbb
aad
imul
add
cmpsl
push
lds
rclb
mov
outsb
mov
adc
inc
shrl
jbe
push
loope
cmc
sbb
sbb
jnp
or
mov
int3
rclb
inc
and
push
jl
xor
or
push
and
cmpsl
xor
movsb
xor
mov
cmpsb
xor
pop
enter
daa
jp
sarb
adc
jno
sbb
jl
sbb
inc
sahf
cmp
and
push
lahf
adc
test
jne
lret
inc
adc
push
adc
in
pop
push
icebp
lret
js
in
pop
in
out
push
repz
loope
mov
loopne
sarl
jmp
adc
shl
out
daa
cmpb
sbb
push
sbb
xor
mov
push
push
jl
mov
xchg
pop
loop
aad
xchg
cmpsl
notl
aaa
lahf
fsub
or
sbbl
mov
loope
mov
stc
test
testb
xor
sbb
fsubrs
xor
lret
ret
sarl
pop
sbb
lock
push
pop
mov
xor
pop
adc
call
stc
push
mov
fs
jmp
jb
sbb
popa
mov
cli
xchg
adc
xor
cmpsl
add
or
in
cmp
ja
movsl
loopne
push
repz
jp
jno
push
rcrb
mov
push
sbb
mov
out
xlat
fistpl
sub
sub
dec
in
addb
sbb
mov
aad
add
dec
pop
inc
push
inc
pop
add
fscale
bswap
les
xchg
scas
dec
cmp
shlb
call
loope
jle
fs
adc
pushf
mov
movsl
jmp
mov
pop
stc
inc
jne
pusha
dec
enter
gs
inc
sub
cwtl
xchg
lds
popf
arpl
jcxz
hlt
xchg
mul
xchg
push
std
enter
cli
cmc
lods
mov
push
out
pop
nop
stos
addl
leave
fcmovnu
hlt
sub
ljmp
das
xor
mov
insb
pop
pop
and
lcall
repz
insl
movsl
fs
dec
add
mov
mov
ds
cld
mov
lret
fbstp
jecxz
fsincos
xor
pop
and
jge
stos
out
sub
cld
inc
ret
fistpl
das
push
jne
outsl
frstor
aaa
clc
cltd
aaa
xchg
xchg
or
push
ljmp
and
mov
xor
xchg
sub
push
scas
into
sbb
push
xchg
mov
orb
imul
mov
add
and
test
push
mov
sbb
dec
shll
data16
stos
xor
stc
faddl
inc
decl
pop
jmp
loope
xchg
pop
sbb
aad
pop
mov
mov
cwtl
dec
fistpl
inc
or
fmuls
negb
dec
movb
jne
mov
int3
out
or
sub
in
out
push
xchg
mov
pop
sub
cmc
fnstcw
jp
aad
mov
jmp
mov
fiaddl
jle
adc
in
out
pusha
mov
pushf
fisttps
jmp
xchg
aas
and
mov
mov
sbbl
leave
popf
dec
shlb
mov
push
jnp
imulb
inc
rorb
fldt
scas
sub
mov
adc
push
cwtl
pop
sbb
pop
jae
xchg
pop
inc
int3
cmp
lods
push
mov
inc
in
pop
mov
sbb
pop
cltd
imul
adc
dec
jp
lds
in
mov
sar
leave
push
pop
movsb
hlt
mov
repnz
mov
cmp
pop
lcall
push
and
add
inc
loopne
stos
cmpsl
mov
push
pop
sbb
dec
add
jo
and
and
lahf
sub
enter
mov
mov
mov
cwtl
ret
in
enter
daa
jns
mov
jno
and
jl
dec
lret
dec
xchg
cli
jle
addr16
pop
movsl
pop
test
ds
xor
fistl
pusha
shrl
inc
repz
mov
orb
int3
cmp
adc
pusha
push
std
loope
inc
stos
sub
mov
cmp
mov
daa
rcrb
jp
orb
mov
xor
xor
or
push
int
lcall
popa
iret
cmpsb
lcall
mov
xchg
hlt
insl
sub
mov
adc
arpl
and
mov
mulb
mov
sub
fsubs
negl
stos
imul
and
mov
leave
mov
aaa
jmp
cmc
fisttps
outsl
jns
mov
stc
aad
lret
rcrb
data16
repz
mov
out
fldt
xor
mov
cs
dec
decb
fs
dec
sbb
cltd
or
adc
inc
inc
imul
test
out
rcrb
out
imul
orb
lcall
lret
sub
fdivl
push
nop
repnz
mov
push
scas
fnstenv
test
out
repz
daa
ds
dec
sbb
lea
into
fsubr
add
fwait
pusha
std
and
rcr
adc
push
pushf
pop
out
jmp
xchg
lea
jmp
xchg
xchg
test
xor
add
jbe
jecxz
loopne
mulb
cmpb
outsl
pop
in
cwtl
mov
pushf
mov
in
mov
fisubl
dec
mov
sub
push
cmp
mov
sti
insl
lock
and
mov
and
jp
add
shll
fidivrs
insl
mov
je
js
int3
mov
adc
in
loope
dec
das
out
mov
loopne
andl
jge
imul
and
jl
push
jmp
fisttpll
popa
xchg
dec
loopne
ljmp
inc
lods
cmpsb
cmp
xchg
nop
mov
push
mov
data16
movsl
outsb
test
test
outsb
pop
mov
test
clc
mov
and
test
clc
enter
mov
stos
and
inc
push
and
xor
add
mov
xor
mov
mov
mov
sbb
in
pop
inc
xchg
mov
jp
call
inc
mov
stos
ficompl
test
adc
mov
int3
dec
out
call
fs
jns
ss
test
pushf
out
test
sub
fcmove
in
fcoms
ljmp
movsb
loopne
or
aaa
jle
jno
in
je
pusha
dec
xor
push
xchg
adc
outsl
xchg
clc
sub
subl
jb
leave
stc
mov
mov
mov
lds
insb
mov
jae
scas
lea
xchg
push
movsb
test
adc
lods
iret
insb
mov
ret
in
pop
push
bound
inc
mov
dec
jge
iret
xlat
inc
or
shrl
fidivl
sbb
mov
pop
imul
and
in
xchg
mov
stos
inc
xchg
aas
mov
adc
mov
xchg
xchg
mov
flds
inc
jbe
in
jge
cmp
aaa
or
jne
cmpsb
inc
mov
xchg
rcrb
mov
pop
sahf
xor
ret
jb
scas
add
dec
cmp
pop
movsb
dec
fcmovu
push
lret
adc
cmpsb
aaa
add
bswap
clc
js
daa
js
mov
iret
aam
jno
dec
cmpsl
jl
dec
gs
push
push
xor
mov
aad
arpl
test
adc
mov
ja
test
or
arpl
add
cltd
pop
and
mov
jb
outsb
pop
push
pop
push
mov
lahf
sub
cmp
das
cltd
outsb
adc
jbe
mov
movsb
inc
pop
sbbb
mov
and
filds
jo
mov
sub
fdivrs
lcall
xchg
fdivrl
jnp
sbb
dec
sahf
mulb
test
inc
sub
mov
fs
mov
ret
adc
jle
mov
and
gs
cmp
and
neg
mov
dec
shr
test
sbb
adc
cmpsb
sub
subb
test
call
fs
out
push
adc
hlt
jp
js
push
lods
pop
add
mov
insb
out
mov
cli
sti
das
stos
xor
out
jno
jp
ljmp
cmp
loopne
pusha
jbe
mov
in
imul
in
xor
sbb
and
inc
xlat
pop
sub
sub
rclb
out
arpl
push
arpl
cs
fcmovnbe
cmp
nop
int
adc
inc
adc
fldcw
mov
repz
xor
push
jo
lea
stos
xchg
fbld
pop
lret
adc
mov
pushf
pop
pop
shr
ja
xor
inc
outsb
jge
inc
xchg
sbb
jb
jp
dec
rorl
je
and
das
adc
imulb
jp
push
sarb
jo
mov
push
aad
aas
bound
jno
mov
fstpt
and
mov
jns
mov
mov
lock
ss
lock
sbb
fidivl
and
cltd
mov
es
test
insl
jae
add
jl
cmpsl
ja
jae
push
mov
cld
in
sub
mov
inc
and
mov
pusha
mov
jno
mov
inc
ret
stc
dec
push
push
sti
jno
fnsave
mov
xchg
mov
inc
ljmp
push
mov
imull
ja
fs
addb
mov
cltd
fsts
test
mov
dec
fdivs
sbb
mov
das
repnz
adc
lahf
pop
adc
mov
push
enter
lock
or
jl
jg
dec
test
xor
push
xor
iret
inc
int3
xor
mov
pop
add
loopne
loope
cmp
ja
xchg
dec
sbb
arpl
cwtl
rorb
xor
pop
dec
mov
popa
mov
sub
ret
divl
push
cltd
fwait
xchg
es
out
daa
ret
sub
aad
cltd
xlat
xor
jp
test
mov
push
out
popl
mov
jge
inc
ret
mov
pusha
out
mov
xchg
in
out
movsl
cld
cmp
fsts
mov
fistpll
stc
xor
stos
ret
and
and
jnp
adc
scas
lock
jmp
xchg
adc
fwait
aam
lret
add
ret
ja
xchg
sub
addb
add
cmp
pop
inc
lahf
out
add
and
test
pop
out
imul
and
nop
movsl
cmp
mov
out
mov
xchg
sub
adc
or
test
and
adc
mov
pop
jbe
subb
into
popf
jp
leave
add
inc
add
roll
shl
clc
push
and
ja
jo
fnstcw
fbld
and
sub
cmp
scas
pop
movsb
shrl
iret
cmpsb
mov
stc
lock
daa
ja
or
add
jno
sahf
popf
jl
sbb
dec
jne
mov
lods
insb
loopne
push
or
scas
add
push
mov
push
dec
push
mov
cmp
pop
cmpsb
sahf
pop
cs
js
std
cmpsb
pop
test
xor
sub
xchg
jae
fisubrs
outsb
sub
iret
adc
push
mov
jb
jne
sub
jg
jae
mov
or
aas
sub
aas
roll
pop
xchg
lcall
movsl
fsub
cmp
cmp
cltd
das
xor
or
sbb
mov
mov
dec
int3
and
or
ss
sub
fcomp
inc
das
negl
subb
xorb
pop
push
sbb
sbb
std
pop
cmc
insl
xor
xor
and
xor
cmp
fsubl
and
dec
and
data16
repnz
lods
inc
or
mov
jecxz
push
adc
xor
mov
xchg
push
push
lret
gs
xchg
loopne
test
adc
mov
xor
scas
mov
add
sub
sbb
pop
push
xchg
xlat
cwtl
pop
stos
sub
mov
shll
mov
ljmp
jnp
jp
xchg
test
fldenv
clc
jmp
call
add
cmp
add
into
add
pop
push
cmpsl
pop
jge
pushf
adc
sbb
jmp
mov
cmp
cmc
lods
jo
mov
call
jb
cmp
dec
dec
mov
pop
jecxz
test
lods
mov
add
test
scas
mov
dec
ja
inc
lret
mov
stos
shll
sar
das
iret
jg
mov
xchg
xchg
shlb
pop
cwtl
rol
sbb
es
mov
dec
icebp
xor
jbe
int
fwait
add
ret
adc
cld
setbe
lret
sub
test
ds
or
sti
sbb
pop
jg
xchg
shlb
jge
sub
pop
aam
add
mov
push
mov
aad
clc
dec
adc
xchg
enter
mov
pop
add
fdivrp
out
pop
mov
push
aas
lret
in
xor
icebp
add
stos
add
mov
xchg
dec
aas
shl
test
ja
xchg
push
nop
shll
aam
stos
add
push
imul
add
xchg
gs
ljmp
or
jbe
std
lahf
inc
mov
sahf
hlt
sub
mov
push
push
dec
packssdw
inc
into
cltd
or
rclb
ss
outsl
xor
jne
sbb
mov
mov
bound
mov
pop
in
jmp
xchg
jne
mov
sub
shlb
addr16
push
sbb
mov
ret
xor
loop
jle
pop
xchg
in
mov
or
data16
xchg
mov
out
xchg
mov
orl
dec
lret
test
les
mov
cmp
inc
and
or
jnp
jp
scas
push
sub
adcb
xor
iret
sub
ret
imul
push
mov
js
inc
aad
xor
mov
clc
incl
lahf
repz
xor
xchg
sbb
rcrl
xchg
stos
imul
cli
fidivs
test
enter
addr16
mov
out
sti
hlt
outsl
adcb
aaa
jb
iret
xchg
push
jge
in
pop
sbb
out
or
lahf
add
mov
int3
insb
movsb
push
pop
incl
push
or
sti
jo
push
in
scas
mov
rcr
in
pop
or
xchg
sbb
dec
ljmp
jbe
aaa
cmp
adc
dec
in
in
ds
test
and
pop
lahf
mov
jg
lea
test
mov
std
js
pop
data16
pop
out
mov
js
iret
sbb
call
pop
pop
loope
add
inc
cmp
incb
shrb
imul
lods
adc
cmp
xor
sub
jbe
daa
int
xchg
dec
sub
test
lcall
pop
fcoml
fld
sahf
cmp
jb
cmp
push
andb
jg
clc
out
mov
pop
les
and
xor
inc
pop
mov
fcoms
and
lret
insb
rcrl
jns
inc
mov
sbb
jmp
into
loopne
scas
cmc
xor
fdivl
xor
xchg
loop
xchg
or
fs
xchg
dec
adc
mov
jae
dec
push
cmpsb
out
cmc
or
popa
push
sbb
test
data16
jg
or
test
js
mov
loopne
mov
jae
mov
cli
imul
xchg
xchg
xor
fwait
cmp
or
sub
inc
jp
adc
fucomip
sub
and
fdivs
cmp
aad
lcall
nop
addl
inc
test
je
fidivrl
repz
outsb
adc
push
je
lea
call
pop
xor
aas
adc
shl
pushf
pop
mov
movsl
pop
test
jp
lret
jnp
aas
ret
jb
sub
dec
mov
ja
jecxz
cmp
div
pop
fscale
fs
out
xchg
mov
enter
add
sbbl
pop
or
push
push
lock
subl
xor
mov
dec
push
cmpsb
and
call
xchg
jmp
mov
cmpsl
jne
mov
lcall
lret
fwait
xor
mov
cmc
and
xchg
push
add
sahf
dec
lcall
sub
aam
incl
pop
xchg
xor
insl
clc
test
mov
pop
dec
jle
sub
mov
mov
add
jle
mov
aam
push
sbb
orb
shrl
cltd
inc
mov
iret
mov
and
dec
cmpsb
push
fldcw
sbb
lret
jbe
std
fisubs
push
and
sub
add
mov
inc
decl
and
xor
or
icebp
fcompl
loope
jo
cs
fistpl
inc
aaa
ja
xchg
dec
dec
add
stos
inc
gs
rcrb
push
jnp
sbb
out
test
bound
mov
dec
in
xchg
sbb
out
or
fwait
pushf
rorb
and
addr16
fnstsw
dec
lea
in
orl
xchg
jae
pusha
sbb
or
xchg
mov
mov
xchg
pop
in
jo
fstpt
add
mov
xchg
push
ja
xor
mov
adc
jnp
movsb
scas
mov
cli
push
jns
xor
icebp
fisubrs
mov
repz
cmc
pop
add
loopne
lods
jae
mul
inc
fcomps
or
xor
inc
popf
sarl
mov
sbb
adc
mov
lds
adcb
or
adc
hlt
mov
xchg
jae
adc
cmpb
pop
sbb
aaa
inc
dec
or
std
mov
imul
int3
push
dec
mov
out
push
jmp
shll
aam
imulb
sbb
xor
jl
mov
jbe
in
xor
lods
enter
daa
jne
cld
cmp
or
lods
fdivrl
xor
push
cld
sarb
repz
in
rcrl
pusha
idivl
icebp
fwait
ds
insb
sahf
dec
inc
rcl
cltd
push
pop
adc
ss
daa
test
shl
lds
test
cmp
xor
pop
or
incb
jecxz
sbb
push
loope
dec
mov
push
jns
inc
int
pop
int3
sub
jp
pop
pop
or
stos
push
sub
and
cmp
fcom
sahf
fbld
cmpb
mov
flds
mov
jne
mov
or
sbb
cmp
push
in
notl
test
xor
mov
pop
mov
into
push
into
ret
mov
xor
outsb
clc
loop
sub
stc
mov
sub
adcl
dec
nop
add
jge
push
shr
dec
shlb
pop
adc
xchg
and
xor
cmp
xor
or
js
gs
pop
adc
or
imul
mov
mov
cmp
push
xlat
push
inc
fisubrl
bound
sbb
xchg
lret
xchg
int
push
js
nop
pop
cmp
dec
cmp
test
mov
push
pusha
repz
push
fcmovnb
pop
and
rcrl
dec
call
pop
mov
mov
pushf
or
dec
pop
sub
out
inc
add
daa
inc
out
test
jb
push
je
add
je
pop
adc
pop
cmp
std
or
xchg
mov
outsl
fmull
mov
dec
push
xlat
fcmovnb
mov
cmpsl
mov
cmp
lock
push
out
in
mov
das
push
rcrl
lds
andb
sub
dec
out
or
add
cld
mov
lret
or
pop
and
xor
sbbl
and
leave
in
sub
loop
push
push
fadd
cmpsb
or
inc
pop
push
lods
stos
clc
shl
xchg
inc
and
sub
mov
xchg
mov
and
into
push
cmc
sub
psllw
cltd
jle
stc
test
push
pop
mov
shrl
dec
or
inc
sbb
lock
rcll
pop
adc
stos
loopne
mov
add
int
popf
ljmp
adc
push
cli
or
or
loopne
add
pop
mov
xor
mov
inc
cld
or
or
lret
jg
jno
add
xor
mov
mov
leave
aas
out
fs
bound
mov
sbb
inc
pop
addr16
sub
pop
sub
scas
test
pop
mov
adc
in
nop
pop
xchg
fbld
test
mov
mov
aad
xchg
out
adc
push
mov
mov
and
cmc
jnp,pt
xchg
aad
sbb
or
ficompl
adc
sahf
inc
iret
call
lret
sub
incl
dec
jae
mov
mov
push
sbb
xchg
fidivrl
pushf
xchg
lret
sbb
imul
pusha
or
jns
and
inc
stc
cmp
mov
pusha
cmp
jno
jne
add
das
push
jbe
adc
fildll
xlat
aaa
push
xor
or
mov
add
mov
dec
pop
pop
in
push
into
out
pop
xor
das
test
jl
lret
and
out
inc
movsb
je
mov
and
inc
in
sbb
enter
daa
je
dec
cmp
imul
ds
iret
cmp
jg
lret
lahf
int3
push
push
xor
mov
push
aaa
sbb
inc
outsb
push
add
movsl
inc
in
pop
cmp
fdivrs
xor
retw
fadd
sbb
fmull
sti
cmp
jnp
outsb
push
in
std
adc
loop
bound
ljmp
add
cs
xor
sbbl
lods
inc
int
pop
and
insb
jbe
pop
fsubl
das
lcall
jno
call
fwait
pop
sahf
orb
dec
mov
pop
sub
mov
ret
test
out
cld
jl
mov
mov
adc
fmuls
mov
lret
scas
roll
mov
aad
into
cmpsb
xor
xor
fbld
loop
cmc
push
stc
push
mov
cmp
data16
lods
cmc
jno
mov
into
out
inc
mov
xor
cs
mov
or
ja
mov
and
loopne
push
pop
xor
and
dec
addl
add
popf
push
cmp
std
shrb
aad
push
mov
add
test
lret
xlat
aaa
aad
push
push
nop
cmp
dec
dec
cwtl
xor
inc
iret
fcoms
lock
rep
repnz
pop
dec
nop
lea
out
jge
push
fstpt
nop
pop
xchg
clc
notl
jbe
fs
mov
dec
jmp
jae
pop
lret
pop
sbb
xchg
out
add
insb
aas
add
jb
scas
lcall
sbb
jecxz
js
divb
mov
cwtl
pop
xor
mov
cltd
push
mov
jbe
or
jae
fcomi
test
xor
fcompl
mov
mov
int
mov
repz
insl
int
loop
repnz
jae
popa
mov
dec
adc
or
mov
add
jno
int3
dec
popa
pop
fdiv
mov
sub
aam
stc
mov
push
pop
inc
sbb
dec
insl
jbe
sti
and
xchg
test
punpcklwd
test
lods
mov
adc
out
andl
push
sarb
mov
cltd
mov
adc
movb
jge
orb
and
xchg
test
sbb
mov
je
iret
cmpsb
sbb
add
call
out
xor
in
stos
jb
xor
xlat
mov
mov
mov
jmp
ja,pn
test
jno
xchg
jbe
or
movsl
sbbb
div
jne
push
loope
adc
out
inc
lret
ds
lea
shl
cmp
and
jno
lds
pushf
or
cmp
addr16
idivl
mov
adc
mov
mov
pusha
push
add
ffreep
xor
xor
fucomi
addl
jmp
cwtl
jmp
popf
cmp
mov
cmc
or
and
shrb
jnp
inc
mov
push
pop
ljmp
inc
bound
pop
arpl
or
mov
inc
or
sub
inc
fwait
enter
jae
xchg
and
imul
lcall
inc
cmpl
mov
leave
call
stc
repnz
adc
jbe
jg
jge
movsb
aam
mov
mov
fadds
cltd
outsl
pop
int3
sub
mull
xor
mov
lcall
mov
cmp
dec
imul
pop
jge
add
daa
jae
adc
into
or
je
es
dec
xor
pusha
movsl
xchg
jmp
lahf
jmp
in
push
push
sti
push
test
add
dec
inc
std
jo
push
mov
mov
movsl
pop
jle
dec
pop
push
sub
aas
aas
cmp
rcrb
adc
mov
jp
cmp
scas
sbb
and
xor
cltd
movb
out
int
xchg
enter
or
pop
les
push
xlat
call
sub
and
ljmp
jne
add
repz
mov
inc
aam
shlw
add
and
cmp
loope
shlb
fmul
rolb
popa
mov
rcr
cmp
sbb
mov
cmc
mov
ja
mov
ja
xchg
cmp
out
cs
bound
popa
mov
faddl
inc
mov
adcb
dec
pop
xor
sbb
or
cmp
gs
call
pop
push
pusha
sub
imul
aam
inc
out
notb
int
xor
dec
test
pushf
sub
bound
insl
xor
sti
in
push
cs
push
nop
adc
cmpsl
dec
notl
dec
fnstcw
adc
sti
or
repz
iret
pop
loopne
lea
sub
pop
cmp
pop
dec
sbb
adc
fcompl
jmp
pop
outsb
mov
inc
adc
inc
sbb
push
aas
lahf
add
jb
ds
dec
and
adc
add
jp
sub
mov
jne
cwtl
pop
sbb
mov
dec
xchg
mov
mov
je
and
mov
xor
lock
pop
xchg
dec
imul
ret
loope
insl
jns
and
push
mov
std
ret
bound
mov
insl
negb
and
addr16
icebp
pop
or
cld
mov
adc
fbld
xchg
sti
into
mov
sub
icebp
aam
repz
ret
push
lret
fnsave
ds
ss
aad
les
ljmp
mov
mov
out
fcoms
stos
fimuls
add
mov
rolb
mov
adcb
fldt
pop
test
gs
xchg
and
roll
cmp
stos
mov
xchg
xchg
add
add
sar
rclb
rcrb
or
sbb
xor
cmp
push
mov
dec
ljmp
sub
dec
fildl
cld
inc
sub
adc
jle
mov
sti
jae
jne
fnstsw
out
and
jns
scas
in
jge
xchg
mov
lods
out
jno
sub
mov
sti
xor
test
mov
movsb
push
xchg
jle
mov
and
add
loop
cwtl
xchg
add
sub
sti
pop
xchg
mov
add
aad
pusha
lahf
lock
xor
dec
stos
add
and
cmpsb
bound
xor
cmp
out
push
dec
pop
dec
adc
fcmovnb
imul
pop
lcall
jae
pop
gs
loope
adc
mov
mov
xchg
js
or
xchg
lds
push
int
mov
js
shrb
stos
mov
push
pop
out
pop
push
sahf
hlt
fwait
jae
arpl
cmp
jge
pushl
sbb
pop
aaa
test
inc
add
dec
mov
sbb
test
and
inc
xor
in
xchg
scas
cmp
dec
cmp
dec
test
lds
dec
cld
in
in
jmp
mov
daa
jb
inc
cmp
add
push
lods
hlt
dec
mov
jg
movsl
lea
push
lahf
or
lret
test
int
repz
mov
cmp
sub
test
mov
out
pop
in
push
push
in
or
or
dec
add
mov
rcrb
pop
cmpsb
adcb
mov
add
fisubrs
mov
stc
push
adcb
sub
sbb
mov
das
dec
sbb
fdivrl
jae
sub
jp
test
inc
adcb
mov
mov
dec
push
dec
iret
adc
es
ss
fwait
inc
cmp
andl
lret
nop
shll
mov
sbb
into
insb
cs
push
cmp
pushf
push
outsl
xchg
scas
je
sbb
xor
cmp
data16
xchg
lods
ret
addl
out
movsl
adc
sub
and
arpl
fdivrl
incb
sub
scas
out
loop
mov
jl
adc
push
and
push
test
pop
jo
shr
cmp
cmp
push
sbb
xor
xlat
sar
sub
mov
jg
in
fsubs
daa
cs
nop
pop
aad
cmp
nop
out
aad
dec
push
not
inc
cmc
adc
fnstenv
in
repz
cmp
pusha
xor
pop
cld
repz
and
adc
or
jmp
daa
dec
pop
adc
bound
xor
aas
ds
push
jb
add
je
adc
mov
dec
idiv
mov
fstpl
arpl
mov
mov
cmp
mov
cmp
and
xchg
xor
das
sub
jbe
lahf
rcrl
and
fbld
jbe
rorl
es
pop
insl
fisttpll
mov
fdivs
cmpsl
jno
ret
jg
icebp
negb
ret
cld
out
bswap
push
ljmp
adc
pop
sbb
sub
in
mov
inc
ret
push
xor
push
lea
fstpl
imul
ljmp
lods
xchg
stos
push
mov
dec
push
or
xchg
femms
push
and
sbb
xchg
jmp
jnp
xchg
cmp
xchg
enter
cmpsb
jo
pop
hlt
add
stos
lods
cmp
push
lcall
add
cs
add
sub
arpl
mov
in
test
mov
popa
dec
mov
int3
in
dec
into
push
inc
sarl
fwait
decb
xor
or
out
add
bound
jns
sub
xchg
add
enter
shrb
mov
pop
shrl
inc
pushl
mov
cli
or
xchg
ljmp
aas
mov
filds
insb
icebp
xchg
xlat
mov
jmp
test
mov
push
inc
add
mov
nop
cmp
cld
mov
and
scas
inc
mov
push
xchg
xor
adc
pop
iret
add
and
pop
roll
inc
or
jae
xchg
dec
inc
in
ds
push
dec
xchg
int
ficoml
repz
iret
call
call
fisubs
popa
cmp
inc
pop
xor
pop
aaa
leave
pop
dec
hlt
out
mov
adc
or
cmp
scas
aaa
inc
push
push
or
sbb
add
dec
js
add
push
pop
ljmp
xor
inc
jecxz
scas
sbb
or
imul
push
hlt
sti
mov
in
sar
dec
enter
daa
jno
sarb
xor
ljmp
jns
dec
jecxz
jg
pop
movsl
xchg
leave
push
and
mov
sub
lods
into
das
test
cwtl
mov
out
lock
mov
pop
js
xchg
pop
and
ja
xor
jns
leave
push
or
clc
outsl
mov
jns
adc
jae
aaa
cmp
stc
arpl
mov
mov
xor
mov
mov
fucom
jmp
lcall
rcr
jmp
jl
sahf
imul
test
ljmp
push
scas
aad
into
out
mov
mov
mov
and
or
jle
adc
notl
call
push
rorl
mov
test
sbb
jae
into
dec
lcall
testl
loop
mov
stc
out
sbb
adc
aam
or
lods
stos
ffreep
mov
repnz
sbb
cli
pusha
inc
xor
cmp
mov
gs
xor
push
add
pop
xchg
pushf
pop
adc
pop
mov
imul
jmp
inc
add
mov
sbb
lock
inc
jo
cmp
in
inc
in
enter
repz
pop
scas
aad
inc
je
lret
dec
mov
xchg
inc
or
and
in
pushf
add
adc
xor
gs
test
outsl
mov
call
pop
rorl
jnp
jge
mov
mov
pop
mov
and
cld
inc
push
dec
jg
fnstsw
mov
dec
adc
dec
je
or
cwtl
rclb
cmpsl
repnz
and
push
mov
data16
stc
cltd
pop
fildl
shll
jmp
sbb
mov
fcmovnb
fsubs
in
rcrl
cmpsb
mov
dec
shll
hlt
mov
int
sub
adc
lret
movb
and
popf
or
cmp
jnp
dec
add
cmp
loop
mov
push
sahf
xor
les
test
lods
imul
popa
sub
out
mov
lods
sbb
xchg
stos
pop
ret
push
popa
loopne
cmp
sub
pop
push
test
pop
inc
mov
cmp
xchg
sub
test
aam
xchg
fdivp
shll
or
stos
pushf
sub
jo
mov
xchg
mov
movsb
jg
xor
cmp
adc
xor
add
cmp
mov
mov
sbb
push
ja
movsb
jo
roll
or
sub
sub
dec
pcmpeqw
xchg
mov
out
loopne
outsl
divl
pop
in
mov
mov
dec
push
jno
push
inc
arpl
mov
cmpsb
addr16
stos
jp
cs
mov
sbbb
in
in
frstor
cmp
xchg
stos
mov
jmp
push
mov
pop
push
loope
pop
popf
scas
pop
mov
mov
shrl
adc
push
jnp
lock
outsl
xchg
cmp
iret
fs
loop
xchg
stos
push
pop
or
inc
pop
fs
jae
movsb
inc
out
sti
or
cltd
mov
inc
sbb
lods
xchg
es
ss
or
fiadds
xchg
rcrb
mov
lods
dec
lods
leave
dec
pop
cmc
hlt
xor
and
jbe
jg
jge
pusha
addr16
fildll
aaa
add
pop
or
mov
out
stc
cmp
into
push
push
pop
ret
xor
fwait
aad
scas
clc
sahf
lcall
ds
movsb
mov
jbe
cmpsb
dec
cltd
sub
mov
popf
enter
daa
jo
cmpsl
cmp
test
mov
sbb
jle
xor
mov
dec
dec
and
into
movsb
lahf
dec
fbstp
jg
mov
les
adc
dec
mov
pop
fcoms
pop
bound
push
or
cmp
xor
in
cmp
cmp
dec
push
rcl
sub
xchg
imulb
add
fmulp
xor
jg
mov
int
lcall
fdivs
push
fcoml
fcoml
or
push
js
test
add
jns
hlt
adc
mov
divb
out
jp
shl
sbb
stc
or
not
add
lret
nop
shll
or
into
xor
cmc
fiadds
xor
outsl
push
inc
cwtl
loop
and
stc
inc
pop
pop
mov
filds
lods
xchg
and
mov
fsubrp
out
adc
loop
lods
js
rclb
inc
or
inc
push
gs
mov
pop
mov
pop
adc
push
adc
jbe
add
mov
mov
stc
cmp
push
push
pop
sub
mov
adc
repnz
movsl
cs
sbb
pushl
inc
dec
adc
movl
les
sbb
aaa
repz
push
cmpxchg
push
sbb
xlat
dec
int
bound
test
ljmp
cmpsb
jmp
mov
jb
and
dec
mov
je
push
jmp
cmpsl
and
testb
jae
dec
inc
and
loope
jo
xlat
leave
inc
subl
dec
dec
mov
mov
xchg
f2xm1
dec
push
sbb
call
pop
mov
out
jno
ljmp
insl
stos
popf
testb
inc
cmpsl
outsl
push
push
icebp
movsb
mov
sbb
xor
cmp
mov
pop
jb
shr
cmc
add
inc
or
dec
faddl
jno
jp
adc
fucomp
pop
loop
out
bound
fstp
andl
test
jle
ds
pmovmskb
xchg
icebp
sbb
xchg
bswap
daa
outsl
add
rcrb
pushl
cwtl
mov
inc
push
xchg
add
xchg
jmp
pop
sbb
stc
roll
xlat
fistpl
mov
push
loopne
mov
add
incl
in
lret
addr16
xchg
shlb
gs
jae
dec
mov
xlat
inc
les
add
dec
mov
jp
out
xchg
cmp
push
xchg
fwait
pop
push
pop
dec
movsb
movsl
lods
jne
mov
mov
or
bound
adc
push
pusha
out
jae
sub
lods
fs
mov
jl
cli
movsl
out
out
add
jle
fwait
push
in
std
jmp
je
fistpll
mov
xchg
jge
adc
pop
inc
mov
sbb
xorl
dec
popf
aad
jg
push
ljmp
pop
iret
bound
sub
dec
insb
fs
gs
mov
scas
or
adc
mov
iret
ret
add
aas
xchg
fldl
pop
jae
jge
inc
ljmp
push
xchg
loop
fidivrl
fstpl
imul
fisubrs
and
sarb
mov
decl
or
jl
mulb
inc
jb
movsb
mov
sbb
cmpsb
lret
cmp
sarl
rcr
es
mov
int3
fstps
pop
push
cmp
out
jo
fistpl
xlat
insl
dec
and
sub
movsb
sub
sub
cmpsb
rclb
sub
daa
outsl
iret
mov
lcall
jl
lea
dec
in
not
lds
pop
and
inc
int3
push
push
jb
test
ja,pn
inc
cmp
je
rcrl
mov
test
adc
sbb
lock
sub
outsb
inc
lock
sub
pusha
sti
pop
dec
orb
sbb
pop
inc
xor
xchg
int
adc
rorl
sahf
pop
push
bound
dec
add
add
aas
cmpl
pop
sahf
mov
addb
insl
popa
jg
jns
mov
push
pusha
mov
outsl
mov
jne
and
movsb
ss
sbb
fdivs
stos
lret
je
cmp
enter
dec
sbb
into
adc
push
ja
das
adc
stc
sti
jo
fs
add
cs
adc
lods
lods
js
in
mov
sar
out
xchg
adc
movb
xor
fwait
cmp
mov
gs
insl
scas
inc
les
xchg
loopne
jns
pop
iret
call
inc
imul
cmp
xchg
test
pop
sbb
xor
xor
nop
pop
sub
pop
mov
sbb
sahf
sti
mov
lret
aam
inc
test
dec
jae
push
inc
jne,pn
fstps
popa
les
popa
sub
imul
lea
ret
push
pop
inc
pop
adc
xor
jmp
jb
pop
cli
movsl
mov
inc
mov
xchg
aas
sbb
dec
add
push
je
cmc
mov
test
jnp
cmc
ljmp
add
mov
sub
add
xlat
dec
fcmovnu
dec
lea
ja
mov
mov
xchg
mov
dec
mov
rcl
cmp
or
dec
leave
mov
or
icebp
jnp
push
cld
addr16
lahf
lret
movsb
jmp
and
shll
js
mov
movsl
movsb
aam
daa
or
add
inc
fstl
std
clc
and
pop
xchg
rolb
push
lret
pop
push
lods
aam
adc
sub
xchg
xchg
cmp
mov
add
inc
cltd
enter
or
mov
mov
mov
test
xchg
dec
xchg
insb
test
pop
adc
pop
add
xorl
scas
xor
add
in
jmp
dec
outsb
xor
aam
or
sbb
xor
sbb
or
mov
out
mov
xchg
sbb
ret
dec
cmpsl
inc
xchg
mov
xchg
cmp
loopne
mov
sbb
clc
bound
jns
in
dec
jbe
in
outsl
mov
sub
test
mov
jp
test
mov
xor
mov
pusha
gs
subb
jb
pusha
pop
ret
fistps
jns
push
movsl
insb
jmp
out
jo
les
repnz
addr16
popf
cld
dec
mov
xor
jge
inc
addr16
fwait
adc
stc
aaa
dec
scas
imul
push
push
push
adc
rcr
and
ret
lcall
mov
inc
sub
pop
inc
in
in
icebp
push
cwtl
inc
push
mov
fisubrl
daa
xchg
aam
ret
sbb
shrl
fimuls
inc
jo
mov
xchg
xchg
fistpll
push
pop
sbb
cmp
cli
hlt
movsb
add
jbe
insl
mov
leave
push
jbe
popa
dec
mov
cmpb
iret
lahf
add
out
pop
ja
int3
push
and
xor
push
neg
scas
mov
push
and
mov
cmp
loope
push
loope
xor
push
push
sub
subl
outsb
lock
cmp
ficompl
addr16
std
aad
dec
pop
stc
stos
ds
xchg
and
loop
lahf
xchg
fisubrs
stc
jmp
inc
enter
aaa
mov
pop
call
loopne
xor
mov
mov
mov
sub
sti
sub
add
cltd
push
adc
add
int
pop
adc
sbbb
fs
or
jns,pn
repz
outsb
push
mov
mov
sub
loopne
xchg
push
lcall
cwtl
fsubr
test
jb
sbb
test
mov
cld
andl
in
mov
mov
push
ljmp
sbb
cmp
outsl
ret
dec
rcrl
das
rcl
ja
lahf
shll
clc
xchg
or
insb
icebp
jge
or
outsl
push
out
loop
repz
mov
pop
fs
ret
xchg
pop
ja
pop
push
aaa
mov
xchg
jo
stc
idiv
xor
cmp
or
push
dec
gs
xor
pop
out
adc
adc
subb
dec
ss
xchg
std
xchg
dec
mov
push
cmp
lcall
cmp
mov
test
jg
sbb
mov
sub
mov
inc
inc
std
dec
fsts
mov
repz
fldl
outsb
movsb
mov
call
aad
loopne
enter
xor
pushf
mov
mov
pop
popf
ret
arpl
in
addb
mov
mov
pop
mov
je
jmp
test
std
pushf
pop
lds
pop
outsb
rorb
push
jg
dec
mov
out
mov
adc
mov
jae
lock
das
cmpsb
imul
jmp
mov
add
rorl
lret
jns
push
dec
les
aam
data16
xchg
or
mov
sub
sarl
rorb
imul
faddp
inc
ret
sbb
psubusw
cmp
pop
xchg
pushl
ljmp
das
lods
aas
xchg
cli
mov
aad
lcall
clc
jp
filds
test
push
lret
xchg
pop
imul
aad
xor
pop
rcl
stos
imul
xor
mov
mov
xor
fisttpll
jne
adc
and
imul
ja
dec
mov
scas
inc
jae
lcall
or
and
orb
out
push
fwait
pop
mov
inc
cmp
bound
xchg
jle
pop
xchg
cmp
mov
sub
mov
cmpsl
mov
hlt
or
cmp
push
fnstcw
pop
stos
in
dec
cld
pusha
cmc
and
inc
xchg
and
dec
ficoms
aad
push
sub
popf
and
fistpll
outsl
leave
add
and
mov
jnp
sbbl
leave
or
mov
lret
pop
lods
jae
inc
cmp
push
jae
je
inc
lock
jo
pop
sbbl
xchg
pop
aaa
fisubl
repnz
xchg
sub
sbb
repz
push
fsubrp
lods
cltd
sbb
mov
ret
mov
repnz
mov
leave
mov
aaa
hlt
adc
inc
arpl
pop
jbe
xchg
mov
jo
call
aaa
aas
add
or
stos
das
int3
scas
push
and
mov
push
add
xor
lods
and
scas
xchg
pop
shll
mov
or
pop
repz
movsb
inc
std
daa
push
xor
cmpsb
fsubr
int3
in
insb
jbe
enter
daa
insl
xchg
aas
cmp
push
mov
jl
repnz
or
movsl
mov
and
bound
in
test
les
cli
xchg
pop
dec
mov
js
aaa
fists
pop
jecxz
push
pop
iret
loope
loope
sub
pushf
fistpll
mov
xor
aaa
or
fbld
mov
jge
sbb
push
and
push
xchg
int
int
mov
test
push
dec
arpl
loope
ret
pop
dec
sub
cmp
negl
lds
rcll
sbb
stc
mov
xchg
and
adc
fwait
pop
je
mov
jnp
testl
xchg
repnz
mov
cmpsl
ret
into
fcmovnbe
sbb
xor
or
arpl
inc
loop
sub
fs
cmp
adc
sbb
jae
inc
aas
cmp
and
out
sbb
cli
sub
mov
cmp
mov
pop
call
dec
sarb
pushf
pop
or
arpl
inc
jae
adc
xchg
dec
add
das
bound
stos
add
push
test
cli
mov
inc
in
out
dec
cmp
ljmp
xor
aam
aam
ss
inc
inc
push
mov
mov
cmp
popf
inc
jno
rorb
movl
nop
pop
jnp
pop
adc
fnstcw
jmp
into
in
inc
aad
inc
cmp
inc
mov
jmp
fs
out
mov
push
jecxz
test
testb
std
inc
popf
lods
cwtl
jns
fidivs
mov
add
out
lahf
into
dec
movsl
gs
fstpt
pop
mov
jns
lock
adc
test
jle
cmp
xchg
pop
rcl
cmp
insl
pusha
cmpsb
jecxz
mov
stc
lods
mov
sub
or
mov
xor
fisubl
mov
lret
shlb
sub
mov
gs
pop
sbb
sub
cwtl
xor
xchg
outsl
ljmp
imul
xor
cmp
sahf
xchg
mov
psubsw
lea
jns
ret
xor
mov
out
xchg
loope
test
mov
or
mov
into
rorl
loop
imul
stos
pop
cltd
cli
push
leave
pop
mov
movsl
ljmp
les
or
jae
xor
addb
mov
lods
mov
or
adc
xor
or
lret
sbbl
pop
mov
out
pop
imul
inc
aaa
popa
in
xor
xchg
mov
inc
out
mov
sub
sahf
push
pop
addr16
out
add
repz
jg
lea
insl
lods
jle
es
in
mov
fistps
jp
inc
push
outsl
xchg
jl
sahf
and
ret
adc
dec
mov
push
scas
popa
mov
mov
in
outsl
lahf
pop
insb
movsl
enter
sbb
clc
inc
aaa
adc
and
dec
pop
in
addb
jae
push
push
inc
repz
or
test
imul
sbbb
mov
push
imul
ficoms
push
ffree
lret
jb
mov
clc
xchg
mov
sub
push
pop
mov
jbe
sub
jge
shl
sbb
push
lds
decb
cld
or
pop
jae
lcall
push
out
adc
pop
fldt
mov
dec
mov
lea
pop
xchg
cmpsb
pop
inc
insl
in
push
dec
mov
mov
mov
push
jno
pusha
call
dec
cmp
ds
movsl
mov
mov
push
inc
iret
lahf
les
leave
test
shrl
mov
stc
cli
js
shrb
pop
sbb
push
data16
pop
int
loopne
cmp
arpl
dec
outsb
push
mov
sarb
push
inc
addb
lods
add
into
hlt
xor
xor
int
sbb
inc
and
lcall
icebp
faddl
inc
sub
push
sahf
lcall
xorb
sti
jg
enter
xchg
mov
bswap
and
adc
cmp
in
shl
nop
xchg
lret
in
sar
mov
insl
sbb
pop
sbb
mov
divb
mov
cltd
loop
xchg
icebp
stc
and
outsb
adc
push
shrb
sbb
shl
and
jg
jmp
scas
cmp
scas
adc
jbe
and
test
fldcw
pop
sub
addr16
ja
imul
inc
jno
sub
xchg
into
adc
sbb
in
and
dec
pop
sub
insl
mov
mov
pop
mov
xor
jecxz
aad
push
and
nop
movsl
test
test
icebp
les
push
in
and
je
lea
pusha
call
rcrl
hlt
adc
in
pushf
or
popf
jmp
mov
fadds
jg
inc
fsts
cmpb
popf
jne
and
fmull
jbe
je
into
cmpsl
jecxz
or
testb
push
cwtl
xor
xorb
pop
or
test
lret
dec
nop
push
fldt
mov
stos
inc
mov
loop
lock
shrb
and
mov
outsb
aaa
xchg
and
and
shll
out
es
jno
dec
mov
in
mov
add
lret
icebp
clc
xor
and
movsb
dec
jmp
shlb
repz
dec
ret
lods
cmpsl
pop
push
pop
lahf
sbb
xchg
arpl
test
add
lods
adc
stos
pusha
out
fwait
dec
pop
xchg
or
ret
dec
add
sub
sub
add
xchg
mov
dec
lods
dec
hlt
test
pop
rolb
xchg
push
sub
stos
inc
pop
stos
push
insb
loop
add
shlb
xor
push
testl
xor
mov
pop
jecxz
mov
lret
pop
ret
and
lea
sahf
jle
dec
repz
fwait
sbb
jne
cmp
mov
aad
out
cmp
mov
imul
pop
ja
ficompl
out
jns
sub
cltd
int3
fisubl
mov
data16
lods
pop
mov
lods
dec
iret
jle
out
in
sub
pusha
sub
mov
xchg
leave
xchg
cmp
xorl
push
mov
hlt
popf
jno
and
add
mov
es
and
sbb
mov
xchg
popf
fistl
je
adc
sub
aas
in
ret
push
pop
sbb
cmc
inc
dec
jns
jae
jl
inc
mul
movsl
or
add
inc
xchg
cmp
fiaddl
jbe
sbb
mov
imul
test
xor
or
add
jg
mov
dec
stos
push
leave
mov
sti
pop
arpl
mov
jge
imul
aaa
mov
fidivl
add
xchg
test
add
pop
push
leave
jge
xor
bound
and
fisttpl
mov
aad
cmpsb
fimuls
xchg
in
cmp
enter
daa
imul
pop
push
jno
pusha
dec
jl
cmpsb
push
dec
test
outsb
sub
and
xchg
data16
jecxz
mov
test
pop
inc
add
push
cmp
orb
js
add
pop
popf
fldcw
loope
repz
dec
pop
out
cmp
add
outsb
int
adc
xchg
inc
mov
ja
out
adcb
jno
mov
xchg
xor
inc
push
xchg
setbe
fbstp
sub
inc
sbbl
jmp
fldcw
aas
ljmp
pop
lds
cmovo
mov
test
mov
test
mov
ljmp
and
out
cmp
mov
ds
lret
dec
rcll
cmp
xor
into
mov
jecxz
xor
inc
fsubrs
jns
loop
xor
stc
xlat
xor
adc
adc
popw
std
mov
mov
pusha
and
dec
mov
cli
xchg
add
cmp
test
or
mov
push
gs
xchg
loopne
push
dec
pop
dec
mov
adc
popa
scas
adc
dec
jmp
mov
insb
js
add
adc
sub
dec
jp
sti
pop
push
ja
inc
sbb
into
nop
in
mov
jecxz
jp
lcall
cmc
cmp
ja
xchg
flds
call
push
mov
das
adc
sub
lcall
inc
dec
pop
inc
inc
hlt
lods
xchg
aas
xchg
push
xlat
jb
or
je
mov
int
shrl
mov
cwtl
out
pop
dec
mov
dec
rorl
sbb
push
dec
jnp
or
mov
mov
lock
ljmp
inc
add
mov
and
xchg
jno
jne
andb
add
insl
and
mov
xor
call
icebp
xlat
scas
push
cld
adc
inc
lret
pusha
sub
and
aas
and
pop
repz
ret
sbb
sub
xchg
jno
aas
lcall
loop
and
clc
push
popl
ljmp
and
mov
dec
add
push
add
xstore-rng
cmpsl
push
pop
add
xchg
adc
push
dec
xchg
xchg
pop
test
add
xchg
jo
sbb
mul
sarl
adc
stos
ss
push
setns
add
fisttpl
cmp
push
loope
ficompl
xorl
push
mov
mov
in
pop
jle
lock
xchg
dec
jae
movb
mov
fwait
inc
shll
adc
fnsave
sbb
aam
imul
or
pop
bound
xchg
sub
shl
pusha
sub
xchg
fmuls
lret
jp
or
mov
sbb
xor
popf
pushf
in
shll
lds
fisubrl
stos
xchg
pushf
clc
cwtl
jmp
adc
mov
push
jae
test
cmp
push
or
popf
repnz
jnp
xchg
jnp
negb
sbb
push
xchg
stos
adc
cltd
iret
sahf
addr16
ret
ja
push
outsl
inc
pop
inc
jae,pt
out
inc
stc
xlat
scas
or
jnp
dec
inc
adc
mov
or
jecxz
adc
inc
lds
add
repnz
hlt
repz
pop
loopne
hlt
repz
int
repz
sbb
dec
aaa
jl
test
add
cs
jo
push
pop
xor
and
lods
sbb
jo
daa
les
outsb
nop
mov
subl
sbb
push
outsb
in
and
sbb
push
sub
jno
test
jl
adc
stos
and
je
mov
clc
bound
jno
cmc
test
and
and
inc
mov
je
lods
ret
fcompl
shrb
or
ret
sub
js
cmp
lret
xor
adcb
dec
orl
inc
aam
add
mov
xchg
lcall
sub
adc
jae
repnz
push
out
sbb
xchg
fadd
sub
push
xor
loopne
test
movsb
jg
scas
mov
rorb
cmpsb
sbb
ss
cmp
pop
sbb
es
dec
shrl
jecxz
pop
pop
fs
test
cmpsl
xor
outsl
mov
loop
add
jle
fs
lret
adc
add
lods
sti
pusha
push
mov
ss
dec
lds
cli
xor
jne
or
sbb
sbb
mov
loopne
jl
pop
push
pop
adc
into
lret
movsl
imul
push
cmp
sbb
pop
cli
adc
lahf
int3
sub
loopne
sub
or
xor
inc
sti
or
inc
cs
jbe
nop
xor
dec
dec
stos
dec
inc
lea
rol
insb
shl
je
jp
test
cmp
rcrl
pop
xchg
add
adc
fs
pushf
popa
outsb
mov
mov
roll
mov
scas
aas
adc
enter
push
aad
je
add
jecxz
xchg
pop
notb
cmp
cmp
cli
mov
mov
out
mov
lret
dec
data16
lret
mov
loop
lock
aas
das
and
dec
mov
fdivrl
and
push
into
rol
or
insl
adc
sbb
cmpsl
imul
icebp
scas
in
cld
sbb
mov
dec
sbb
mov
adc
sub
jmp
aam
mov
lret
inc
ficoms
pop
fst
hlt
out
dec
fwait
repnz
sti
insb
cmp
stc
lock
into
jg
lods
jmp
jnp
cwtl
aaa
mov
xchg
fwait
ja
push
pop
fadd
clts
or
add
cmp
test
jns
push
bnd
jp
mov
adc
mov
filds
stos
and
inc
push
add
idivb
std
sbb
xor
mov
nop
mull
add
cmpsb
dec
pop
cmp
ja
cli
loope
data16
ds
jns
or
shll
test
jne
outsb
push
mov
mov
out
stc
adc
cld
pop
jecxz
push
mov
stos
clc
cwtl
xchg
js
scas
out
mov
sub
js
addr16
fbld
jp
sub
add
lock
mov
jle
inc
dec
in
xchg
adc
in
ljmp
and
fnsave
orl
push
popf
mov
bound
inc
fwait
stos
or
leave
and
xchg
jnp
push
add
push
int
mov
xor
in
add
push
add
pop
inc
fs
jae
xchg
roll
cmp
xchg
push
xchg
andl
sbb
shrl
je
jp
popa
lds
or
mov
icebp
jno
leave
mov
add
orb
ss
jge
inc
push
sbb
jbe
aaa
cmp
or
dec
fxch
pop
mov
pop
bound
inc
push
cmpsl
xchg
xor
sbb
mov
cmp
xor
insl
mov
push
insb
add
or
and
lods
pmaxub
imul
jno
into
sbb
jle
xchg
push
movsl
int3
jmp
je
and
fwait
test
lock
in
xchg
ss
push
pop
sahf
pop
jmp
sbb
push
push
mul
fsts
adc
jo
xchg
xor
adc
dec
outsl
fimuls
mov
into
or
xor
xor
sbb
push
popf
and
mov
rolb
inc
cmp
push
cmp
ljmp
xorl
outsl
and
dec
cmp
mov
mov
pop
test
icebp
pushf
out
lods
xlat
mov
cmp
push
es
or
or
or
les
or
sbb
into
addr16
inc
cmc
dec
jns
xor
cmp
outsl
imul
stc
inc
insl
mov
adc
lods
adc
or
cmp
dec
pop
push
cli
clc
cmp
xor
idivb
push
movsl
or
insl
ljmp
shll
cs
sbb
pop
out
sub
fistpll
xlat
fnstsw
pop
jp
sbb
xchg
jne
xlat
or
jne
dec
inc
mov
fwait
out
int3
sti
mov
xchg
aad
lahf
cli
nop
mov
xor
fldenv
mov
jge
jo
cmpsl
xchg
lahf
call
push
test
pop
inc
sub
add
or
call
pop
int3
mov
dec
inc
sub
jg
aad
jmp
sbb
dec
lret
je
lcall
push
push
cwtl
std
filds
xor
jl
sbb
push
jno
mov
subb
and
lock
das
add
adc
lret
mov
mov
mov
cmpsb
push
insl
cld
sub
stos
jmp
jge
gs
icebp
test
cld
imul
gs
push
adc
jne
mov
xor
fst
lods
bound
aam
lret
or
pop
stc
dec
push
push
sbbl
ljmp
jb
push
xchg
mov
les
ds
cmp
or
gs
inc
cltd
adc
cs
rolb
dec
loope
stc
test
scas
loopne
nop
sti
lods
sbb
shrl
xchg
pop
pop
bound
adc
les
push
loop
add
adc
lea
adc
sbb
mov
dec
in
mov
hlt
popa
adc
push
cltd
dec
pop
mov
inc
adc
lods
stos
ficomps
fxch
mov
mov
inc
pop
out
fdivr
and
jns
ret
xchg
stos
fucom
data16
push
rorl
or
aaa
xor
adc
xchg
mov
insb
lcall
jp
jle
jecxz
in
fs
cld
ds
sbb
dec
jmp
test
push
sbbl
sbb
stc
inc
mov
mov
lret
ljmp
lret
mov
dec
jnp
outsb
pushf
scas
mov
pop
adc
mov
iret
pop
js
ret
pop
rcl
inc
outsl
fsubrl
inc
call
xchg
or
jno
jl
adc
fisubl
mov
sti
imul
sbb
arpl
shlb
adc
inc
and
add
inc
arpl
sbb
mov
enter
test
or
jmp
push
nop
stc
int3
inc
and
pop
xchg
push
jb
or
test
test
scas
lock
cmp
fwait
rep
clc
jb
push
mov
sub
mov
daa
push
aaa
in
jno
insl
jl
ljmp
mov
vprotq
lahf
inc
mov
test
mov
clc
leave
jbe
pop
adc
push
push
push
mov
lock
sub
das
call
outsb
notb
int3
shlb
movsb
jnp
xchg
sbb
or
or
scas
insb
rolb
push
xor
sbb
push
mov
xchg
xor
pop
rclb
xchg
push
xchg
jmp
fsubr
stc
inc
sub
cmp
pushf
and
sbbb
fidivs
cmpl
mov
je
and
sarl
ret
leave
pop
xchg
lret
vcvtps2dq
mov
mov
dec
cmp
push
pop
adc
sub
pusha
outsl
dec
xor
loop
inc
sbb
cld
jmp
fs
xlat
dec
adc
leave
popf
data16
shrl
pop
sahf
dec
out
jne
cli
sub
xor
or
mov
xor
bound
gs
push
xor
pop
test
inc
adc
inc
imul
push
xor
test
xchg
fisubrl
mov
cmp
test
xlat
dec
lock
sub
cmp
in
push
stos
gs
push
sub
outsl
pop
xchg
aaa
sub
ja
or
add
jno
or
xchg
repz
movb
push
iret
das
lock
cli
or
adc
stc
jp
addr16
ficoms
inc
inc
jmp
aas
je
jle
outsb
iret
mov
inc
les
je
xchg
jecxz
xor
lcall
cwtl
and
cmpsb
mov
shrb
loope
push
fldt
les
mov
xor
and
xchg
loopne
xchg
dec
dec
js
rclb
sub
insl
jecxz
fs
cmpsb
dec
inc
cmpsl
addr16
jl
pop
mov
ret
push
fnstsw
push
push
addr16
push
sub
adc
sub
xorb
bound
jmp
cs
repz
mov
incl
jne
cmp
lea
roll
not
scas
out
daa
add
sub
push
adc
imul
fsubs
aaa
cltd
dec
jns
test
push
mov
negl
dec
dec
into
mov
xchg
pop
sbb
sarl
out
stos
add
fwait
push
clc
je
add
sub
cmp
js
arpl
or
mov
xor
aas
inc
mov
mov
pop
scas
dec
mov
outsb
lock
dec
es
cmpsl
xchg
imul
outsl
fwait
aam
mov
les
mov
jecxz
out
mov
bound
rorl
fadds
in
and
push
stc
dec
out
mov
pop
or
adc
jp
jnp
mov
hlt
outsb
mov
imul
in
xchg
xor
sbb
fbstp
jne
xchg
adc
mov
subl
gs
or
adc
jmp
push
sbb
loop
mov
mov
dec
adc
pop
sbb
iret
mov
test
outsb
pop
inc
jp
push
inc
add
or
in
push
aam
in
push
shlb
push
xchg
sbb
and
imul
cmp
sarb
lds
and
push
jl
mov
xchg
or
leave
jl
push
hlt
aam
outsb
arpl
mulb
lods
repz
sbb
or
testb
imulb
pop
shrb
xor
into
fidivrs
daa
inc
cmp
xchg
or
and
out
enter
daa
addr16
sarl
call
inc
jl
call
dec
gs
ds
jp
ficompl
xchg
lahf
pop
bsf
and
test
xchg
inc
mov
dec
mov
add
adcl
cltd
not
push
or
test
jb
pop
jmp
adc
add
or
loope
push
add
sbb
xor
push
int
mov
int
dec
pop
pop
lcall
push
sub
sub
adc
mov
inc
pop
mov
cmp
mov
lahf
xchg
lret
pop
shlb
jo
cmp
mov
mov
lret
cmpsb
shl
testb
jecxz
sub
sahf
data16
and
stc
mov
mov
adc
cmp
sub
call
mov
xor
out
adc
cli
pop
inc
xchg
xor
push
cld
cmp
aad
or
pop
jns
cld
xor
loopne
outsb
negb
mov
subl
stos
fiadds
cmc
jo
xchg
popf
push
ficompl
or
jbe
mov
sub
shr
jno
sar
lret
shrb
fcoms
imul
gs
fsts
stc
pop
les
inc
repz
scas
adc
lea
cmpsb
call
dec
pop
les
mov
sub
inc
sub
inc
inc
inc
lds
aas
adc
jb
into
adc
je
shl
cs
neg
rcrb
cwtl
fcomi
push
mov
mov
mov
cld
cmpl
dec
fistl
jg
inc
pop
scas
mov
iret
scas
lock
in
das
mov
sbb
add
shll
mov
insb
dec
mov
aaa
scas
mov
xor
cld
mov
xchg
cwtl
mov
pop
and
mov
outsl
xor
rclb
adc
out
les
imul
js
xor
out
repz
dec
dec
out
cli
aaa
adc
ljmp
aad
sub
inc
mov
mov
xchg
jo
mov
out
cwtl
nop
mov
roll
jmp
inc
cltd
orb
mov
pusha
dec
xchg
cmp
mov
out
rcll
dec
cwtl
pop
insl
lcall
repnz
push
fwait
sti
adc
out
aaa
add
xlat
fisubrl
jp
mov
pop
or
xchg
aad
rol
and
imull
pop
push
fidivl
insl
aad
aas
dec
movsl
inc
rcll
adcb
fwait
add
cmc
dec
lahf
mov
jne
cmpsb
or
xchg
fimull
bound
iret
xor
dec
mov
xchg
gs
out
repz
and
or
jae
jp
mov
mov
mov
pop
mov
sbb
jle
stc
cld
in
sub
pusha
xor
cmp
push
aas
sub
or
das
xchg
ds
rolb
jg
or
sub
push
sub
push
stos
gs
and
cmpsl
push
insb
daa
das
lods
jnp
cmc
push
scas
adcl
adc
push
xchg
iret
sbb
bound
lods
inc
inc
test
mov
inc
add
sbb
push
push
or
push
scas
jae
mov
mov
imul
outsl
fisubs
adc
shrb
mov
ljmp
hlt
pop
dec
arpl
inc
mov
add
push
aaa
js
inc
or
add
int3
sbb
mov
push
cmp
xor
sub
sub
cmp
mulb
fstps
insl
fidivl
enter
daa
data16
jno
adcl
aam
pop
add
scas
and
dec
pop
lahf
jle
scas
push
mov
adcl
push
inc
inc
push
mov
pop
pop
dec
mov
pop
fadds
push
jo
loope
pop
or
cmpl
mov
aad
rcr
dec
ss
push
ds
ja
sbb
sub
xor
inc
push
cmpsb
and
int
mov
sub
jmp
pop
into
scas
pop
lcall
inc
imul
test
sahf
insb
lcall
aam
mov
rcrb
pop
pusha
sahf
mov
jnp
rcrb
inc
and
subb
dec
insl
push
fadds
inc
pop
pop
lret
ffreep
mov
ds
rcr
sbb
lahf
into
adc
mov
outsl
push
adc
addr16
push
je
adc
jae
in
push
data16
sbb
xchg
mov
mov
push
sti
out
xor
mov
cmc
ret
inc
cmp
bnd
adc
add
add
loopne
out
pop
out
sahf
adc
cmp
imul
push
dec
add
cmc
sbb
inc
pop
aam
push
or
pop
arpl
fcompl
jno
xor
jae
nop
xor
lret
inc
test
mov
aam
fdivrl
test
int
cmp
pusha
call
sbbb
push
inc
in
cwtl
pusha
inc
jnp
sbb
mov
gs
add
das
inc
pushl
clc
jecxz
fstpl
and
aam
pusha
cwtl
xchg
pusha
add
push
adc
mov
or
adc
adc
mov
mov
xchg
lock
cmp
sub
mov
mov
cltd
es
outsb
xor
dec
pushf
into
aam
cmp
incb
dec
icebp
or
or
ljmp
mov
gs
sub
mov
shlb
push
sbb
out
jle
mov
pop
scas
mov
sub
push
clc
xor
mov
out
sub
lods
xchg
sbb
mov
in
xchg
xchg
xchg
mov
scas
push
lret
jb
xlat
mov
test
jno
push
or
or
test
mov
xchg
mov
shrl
imul
stos
loope
sahf
push
jbe,pt
add
bound
add
jns
xorl
cltd
or
cmp
test
sahf
and
pop
and
icebp
cmp
and
insl
test
xor
dec
adcb
or
rclb
jns
cld
push
in
lcall
out
lcall
jnp
pushf
lds
jp
popf
aaa
mov
jo
mov
inc
stos
jle
jb
in
and
pusha
int
add
jne
loopne
mov
xchg
or
movsl
push
inc
outsb
test
pop
jae
mov
addr16
clc
stos
fdivr
jmp
adc
insb
xchg
jnp
jnp
pop
pop
scas
out
mov
jmp
cmp
iret
jns
pop
aad
pop
lea
nop
xor
jae
repz
inc
or
or
loop
jo
lea
rcr
mov
adc
sbb
shlb
fiadds
mov
test
jb
mov
cmp
imul
lds
jbe
or
cs
int3
add
aaa
mov
or
fiadds
fldt
jne
pop
pop
lods
pop
push
sub
push
sbb
xor
test
scas
lea
and
ret
mov
movsb
cltd
test
dec
cmpsb
lock
call
enter
daa
gs
jecxz
cwtl
fs
jl
mov
jge
and
movsl
call
push
dec
lahf
popf
sub
nop
aam
test
sbb
int3
inc
iret
sub
adc
pop
test
sarl
cmp
pop
pop
sbb
cmp
xor
ja
cmp
mov
jb
adc
mov
mov
mov
jle
pop
inc
imul
repz
xor
mov
push
int
ds
mov
test
push
cltd
imull
in
loope
sub
out
sahf
jg
cmc
sub
bnd
popa
movsl
mov
mov
shll
jmp
ss
ss
add
pop
testl
jno
shll
push
mov
sub
sbb
xor
repz
cmc
imul
push
shrb
push
loop
and
ret
fs
lea
xor
lods
jle
pop
mov
psllq
inc
fistpl
cli
les
fbstp
int3
movsl
dec
cmp
jecxz
or
dec
dec
dec
xor
or
aaa
loopne
jae
pop
add
mov
popf
adc
push
xor
adc
xchg
and
repnz
jecxz
xchg
ss
mov
inc
sarl
ja
out
cs
das
aad
or
out
push
cmp
dec
sub
in
jmp
jl
xchg
stos
mov
mov
xchg
lahf
cmp
dec
inc
inc
pop
adc
adc
add
xor
in
pop
pop
mov
inc
jae
ret
inc
xchg
fsubrl
jb
imul
je
inc
daa
jecxz
sbb
jnp
jle
push
pop
dec
mov
sti
lods
mov
insl
andl
add
mov
adc
xor
mov
jge
cmp
outsl
pop
loop
filds
rorl
mov
mov
push
insl
cwtl
in
push
dec
xchg
in
push
cmpsl
shll
je
icebp
loope
std
cld
adc
pop
lcall
enter
loope
pop
lods
push
jg
stc
popa
ljmp
pop
jp
xchg
jae
push
je
ljmp
test
xchg
ss
jge
inc
xor
lods
add
mov
push
int3
test
push
movsl
jp
psraw
add
xorl
js
xor
stos
dec
dec
dec
jge
dec
test
std
aam
mov
sbb
pop
loopne
les
pop
ret
in
arpl
loope
sub
jge
adc
sbb
xor
or
cmp
push
popf
cwtl
mov
loopne
ret
ja
stc
or
scas
repnz
insb
ret
pop
lret
popa
test
dec
gs
jne
shlb
lret
fildl
lods
in
aad
xchg
add
out
mov
sub
jbe
je
les
imul
mov
cmp
fstp
mov
pusha
push
xchg
mov
pop
xchg
aam
movb
mov
sbb
cmpsb
mov
stos
dec
fsubp
and
and
insb
std
fwait
xor
scas
dec
or
adc
iret
fmul
pop
ret
and
adc
inc
fwait
clc
fs
hlt
mov
or
or
pop
cltd
adc
or
pop
fisubrl
xchg
cmp
and
lods
lahf
xor
lds
or
repnz
lock
hlt
mov
fldenv
xor
jbe
inc
or
sbb
fildll
or
sbb
jb
jb
repnz
pop
dec
adc
push
mov
dec
jo
dec
lock
insb
pop
leave
and
out
int3
cmp
stos
andl
andb
es
xchg
aam
daa
fs
dec
cmp
xor
int
push
jl
xor
ds
adc
movsl
out
psubusw
das
repnz
lahf
mov
cld
cld
test
out
jnp
pop
mov
aad
fs
lods
adcb
je
pop
push
jbe
push
pop
sbb
sub
icebp
cmp
xchg
mov
aas
xor
sbb
fldl
outsb
call
push
lods
mov
jp
sbb
fwait
pop
int3
ficomps
push
lock
jp
cwtl
sub
sub
ljmp
mov
lods
adc
push
dec
dec
mov
aas
mov
sbb
and
lcall
cltd
mov
out
lds
lret
sbb
mov
lahf
mov
pop
arpl
jns
xchg
into
shlb
xor
push
xor
or
loop
das
fdivr
fdivs
rclb
pop
icebp
data16
out
lods
gs
mov
pop
xchg
out
add
mov
cmp
test
or
dec
in
out
xor
adc
sbbb
in
adc
mov
adc
movsb
cmp
mov
mov
cmp
shll
mov
insl
in
mov
cmp
es
pusha
aad
dec
pop
nop
jmp
sbb
jns
fnstenv
sbb
mov
sbb
sbb
lret
add
pop
xchg
push
adc
inc
negb
shrb
inc
cli
imul
mov
pop
aas
lock
jb
add
dec
sbb
adcb
pop
cltd
push
cmpsb
into
sar
neg
cwtl
or
xchg
mov
xchg
cmp
popa
inc
fnsetpm(287
dec
push
mov
bound
add
data16
outsb
das
pop
cwtl
mov
test
movsl
add
rcrl
pop
pop
insl
jg
test
xchg
mov
or
fs
inc
mov
imul
andb
inc
mov
int3
addr16
int3
mov
aam
add
mov
aaa
std
aaa
fnstsw
or
xchg
jne
xchg
ljmp
aaa
lods
insl
inc
sbb
mov
sub
mov
notl
orb
cmovo
negl
cmpl
xchg
xchg
mov
xchg
pop
adc
sarl
out
outsb
mov
test
test
add
cwtl
ret
mov
mov
push
scas
jecxz
or
mov
insb
mov
xchg
sub
into
pop
fwait
stos
mov
dec
sbb
js
add
or
in
fwait
nop
jge
dec
dec
xor
jne
arpl
mov
xor
bound
mov
mov
lods
in
arpl
xchg
push
inc
out
inc
sub
jno
iret
addr16
stos
pusha
jp
nop
mov
mov
and
inc
sub
adc
or
fbstp
pop
push
jmp
lahf
insb
mov
push
enter
test
mov
push
in
jb
mov
adc
jle
pop
scas
lods
xor
ja
mov
iret
aaa
push
pop
pop
sarl
add
jae
cmp
inc
push
es
pop
jno
push
mov
daa
xchg
xchg
imul
fwait
jne
fimuls
lds
mov
mov
jecxz
push
leave
pop
sbb
hlt
add
loope
jecxz
enter
je
imulb
test
push
jge
mov
mov
xor
stc
mov
pop
jl
inc
push
loope
sbb
cmp
scas
dec
pop
xor
jae
hlt
cmp
sbb
push
inc
fdiv
cmpsb
test
in
jb
or
push
jno
arpl
cmp
mov
jno
ja
jl
xchg
mov
pushf
xchg
imul
pop
lahf
fistl
push
ss
xor
dec
xchg
adc
rolb
cmp
pop
shl
lahf
js
inc
jns
xchg
push
push
fiadds
loope
fmull
sub
jbe
cmp
enter
popa
imul
outsl
nop
subb
out
or
in
fsubs
dec
push
scas
aaa
ror
dec
pop
sub
mov
fists
pop
jle
inc
dec
mov
sahf
push
push
dec
test
jp
andb
out
mov
or
cmp
mov
jae
pop
mov
cmp
xchg
cmp
js
aaa
testl
cwtl
mov
ret
test
mov
cltd
add
icebp
lock
loop
insb
push
stc
jns
fs
sub
jp
lcall
xchg
out
mov
cli
sub
pop
cmp
inc
adc
pop
cs
adc
cwtl
loopne
enter
add
dec
push
inc
imul
dec
pop
add
mov
sbb
clc
jl
xlat
test
sub
pop
mov
sbb
orb
leave
aad
lret
cmpsl
nop
les
dec
out
aas
inc
adc
mov
out
or
repz
rorb
adc
dec
inc
fcomps
negl
adc
aam
jmp
mov
inc
subl
aas
stos
xor
aam
dec
xchg
iret
gs
adc
pop
shl
mov
std
leave
pop
call
mov
push
mov
cs
in
adc
fiaddl
mov
mov
cmp
out
std
das
cmp
jb
fstl
shr
call
jg
cmpsw
call
cmpsl
bound
mov
push
sti
cld
imul
fdivrs
mov
jp
adc
jmp
push
rcrb
xor
aam
inc
push
ret
mov
imul
test
clc
out
rclb
mov
push
popa
outsl
cmpsl
xlat
lods
fcomps
sub
push
pop
mov
mov
cli
push
pop
lods
mov
add
outsl
push
cltd
pop
ja
mov
pop
mov
stos
outsl
xchg
ljmp
xchg
int3
ret
shll
outsb
pop
sbb
into
stos
scas
mov
xor
add
xchg
call
sub
add
mov
xchg
mov
mov
fidivl
hlt
mov
push
jbe
ja
xchg
mov
inc
lcall
fwait
mov
repnz
mov
movsb
out
adc
stos
bound
lcall
in
inc
adcl
shlb
or
addr16
jp
xchg
fs
mov
mov
xchg
xchg
in
frstor
mov
xchg
xor
mov
xchg
push
lods
cmpl
push
mov
scas
mov
and
ljmp
sub
insb
rcrl
jnp
xor
scas
cmovge
push
mov
js
iret
xchg
or
ret
rcrb
fs
mov
lods
jae
les
or
push
add
or
ljmp
or
mov
out
sbb
les
and
repnz
leave
iret
imul
mov
test
adc
rcrb
and
mov
sbb
mov
push
pop
pop
stos
sub
push
les
sub
xchg
dec
jp
sub
and
add
sbb
or
in
pop
les
daa
bound
jno
mov
in
nop
into
dec
mov
movsl
std
cmpsl
imul
cli
out
bound
call
rcll
addl
mov
pop
cli
dec
push
js
movsb
fists
aam
cmpsb
push
adc
dec
sub
xor
cmp
nop
and
loop
adc
dec
test
into
mov
addb
sbb
xchg
dec
add
lahf
out
cmpsl
shll
jle
sti
sub
add
lret
lcall
out
out
cmp
aaa
sahf
clc
and
test
test
jg
sub
mov
add
mov
and
jl
pop
cmp
xor
repnz
lock
lods
mov
loop
into
pushf
dec
int
rcl
xor
outsl
orb
dec
fsubrp
stc
inc
in
fs
popa
lods
mov
lods
xor
mov
mov
out
in
cli
pop
push
xor
dec
cmp
scas
push
or
shl
xor
gs
jg
loopne
xchg
xor
bound
adc
je
imul
inc
js
rolb
xchg
insb
out
adc
xor
xlat
ret
inc
mov
jmp
shll
insb
lock
test
inc
aad
mov
nop
lahf
xchg
mov
inc
and
sub
sti
repz
in
xchg
dec
scas
lea
shr
pop
xor
leave
add
pop
sub
jo
xchg
pop
stos
pushf
mov
push
sbbb
fildl
iret
and
cmp
jb
xlat
cmc
dec
or
cltd
je
hlt
shl
jns
mov
sub
ret
sub
cwtl
or
mov
and
imul
mov
sub
mov
and
inc
pop
push
das
sbb
jg
xchg
sub
das
hlt
sarl
rep
dec
pop
dec
dec
mov
dec
cmpsl
popa
outsb
popf
mov
data16
out
xchg
sti
mov
inc
push
or
subl
shlb
out
sub
stos
out
iret
jno
inc
pop
outsl
push
mov
dec
xchg
clc
and
xchg
xchg
repz
loope
daa
aad
popa
xchg
sbb
mov
jns
add
arpl
paddd
add
dec
mov
cltd
xchg
mov
cltd
aas
pop
mov
push
jnp
mov
xchg
test
lret
or
in
sbb
xchg
dec
ror
leave
adc
call
push
lret
add
into
iret
outsb
push
xchg
lods
xor
int3
or
sub
and
inc
mov
sbb
jecxz
pop
adc
sub
sub
decb
aam
sbb
dec
push
movsb
add
aam
mov
dec
cltd
out
icebp
iret
test
jns
pop
pusha
in
jge
xchg
lock
cmpsl
out
ror
cmpsl
shl
or
shlb
psraw
push
mov
inc
jne
mov
or
pmulhw
lock
fcomip
insl
and
jmp
xor
loopne
push
dec
push
les
push
mov
push
stos
movsb
mov
adc
jae
fsubrl
rclb
leave
movups
mov
ret
jns
inc
jp
inc
mov
xchg
ljmp
push
jge
into
adc
inc
mov
xchg
xchg
aas
dec
and
pop
imul
ficoms
test
dec
sbb
repnz
hlt
xchg
jmp
jbe
stos
stos
jge
dec
ja
loopne
or
xor
or
or
int3
mov
outsl
pop
ficompl
push
cmpsl
outsb
es
lock
ljmp
outsl
inc
movsb
push
in
push
cmpsb
cld
clc
clc
in
inc
imul
popa
mov
cmp
jno
and
addr16
inc
jle
scas
movsl
add
shlb
add
jbe
sbb
adc
dec
mov
inc
or
push
int
pop
and
lock
adc
xchg
loope
mov
xchg
cmp
cmp
outsb
stos
out
mov
ja
test
and
sub
mov
sbb
mov
add
mov
xor
mov
mov
push
int
jmp
sub
add
adc
and
cltd
add
sub
jmp
sbbb
jg
enter
sub
mov
dec
jne
dec
xchg
ss
sbb
out
cmp
testl
inc
mov
jl
dec
mov
mov
cmc
xchg
xor
adc
loop
orl
enter
sbb
cmp
lods
sbb
pop
mov
mov
ss
nop
xor
sub
outsl
or
cmp
push
lahf
sub
loopne
outsb
mov
cmpl
fcoms
xchg
or
xchg
das
shlb
mov
cmp
xlat
add
lcall
in
stos
in
repz
sti
xor
and
cmc
aad
cli
cltd
nop
jp
sahf
dec
movsl
add
jbe
pop
lock
rcrl
leave
push
lret
xchg
or
fbstp
call
dec
dec
negl
fiaddl
jmp
xchg
pushf
mull
inc
jl
in
mov
xchg
jb
add
inc
aas
int
divb
push
dec
xorb
jecxz
mov
imulb
mov
pop
sbb
xor
adc
cli
addl
dec
push
cmp
mov
ss
popf
aas
push
das
stc
cmpsb
cld
mov
dec
pusha
and
in
rorl
cs
xor
dec
dec
xorl
cmpsl
pusha
add
ss
cmp
jno
lret
mov
or
mov
sti
mov
sub
shrb
les
shrb
loop
xor
repz
pop
or
sbb
lcall
lods
scas
cmp
loop
fdivl
push
xchg
sbb
adc
minpd
xor
cltd
lret
test
iret
xchg
sbb
lret
xchg
or
shll
jmp
fldt
insl
daa
mov
adc
add
jae
call
adc
xor
js
mov
pusha
xchg
sub
int3
sti
ja
inc
fs
icebp
in
inc
enter
add
push
fwait
sbb
dec
pop
jne
mov
sub
rcr
pop
bound
dec
sub
ja
in
pop
dec
xchg
aas
xchg
out
lods
subl
rolb
mov
fwait
lcall
push
jle
sbb
in
fldl
aam
and
adc
xchg
fiaddl
scas
jmp
add
add
adc
push
mov
mov
stos
pop
jo
and
gs
scas
aad
notb
inc
out
adc
add
iret
push
pop
pop
ret
mov
inc
push
adc
movsb
movsl
inc
pop
cmp
push
or
mov
cmp
xchg
xchg
imulb
sbb
add
imul
fidivs
aas
and
mov
fdivr
cltd
leave
mov
sub
adc
jbe
mov
jge
stos
loop
fwait
sti
dec
aaa
repnz
les
push
rorl
add
mov
int3
sahf
dec
iret
pop
or
push
mov
adc
scas
call
ljmp
push
aas
bound
cmp
cmpsb
jg
cmp
daa
repnz
addb
pusha
loop
cmp
mov
jl
mov
or
rolb
movsl
or
fbld
fwait
sub
lahf
cmp
add
mov
sub
test
loope
aam
dec
cmpsl
jns
cli
and
pop
push
add
push
mov
pop
sub
sub
xchg
test
xchg
sbb
mov
xchg
data16
add
sub
mov
inc
ret
jno
mov
adc
or
lcall
mov
sub
push
xorb
jg
imul
push
mov
mov
incb
and
out
ss
add
fsubrs
mov
out
adc
out
jns
cli
sbb
cwtl
adc
dec
jo
xor
pop
sbb
and
stc
mov
or
push
dec
leave
adc
enter
and
fistps
out
aad
cli
ret
cld
pop
xor
sub
cmp
add
jle
jp
jmp
pop
jnp
mov
and
les
imul
xor
xchg
repnz
sbb
test
rorb
shr
inc
mov
pop
dec
sub
xchg
sbb
dec
add
inc
inc
dec
ret
xchg
push
inc
int3
push
repz
xchg
lea
addr16
adc
pop
xchg
pop
les
inc
pop
and
dec
outsb
pop
xchg
inc
push
ret
sbb
dec
mov
dec
stc
pop
cmp
jecxz
inc
add
mov
sub
mov
decb
cmp
sbbl
adc
les
clc
jnp
das
fdivs
or
xchg
out
adc
fidivl
subb
dec
dec
jle
xor
xor
push
icebp
adc
lret
mov
loopne
arpl
push
and
call
in
rcrb
mov
sub
call
xor
inc
or
fstpl
mov
xchg
jno
out
ljmp
push
lods
sbb
iret
out
aas
sub
repnz
in
or
bsf
push
add
sub
mov
scas
mov
dec
sbbb
xchg
repz
lahf
ss
pop
sbb
push
adc
add
add
mov
xor
int3
xor
mov
xor
sbb
mov
mov
sbb
pop
xchg
ja
fsubrl
in
outsb
inc
pop
mov
out
xchg
aas
fwait
dec
or
dec
aam
jnp
xor
pop
mov
mov
mov
mov
jl
in
out
xchg
mov
inc
out
or
sub
pop
test
addr16
in
mov
inc
cmpb
jle
dec
aas
in
cs
fildll
ss
xchg
lods
lahf
xchg
jmp
lret
mov
aaa
push
aam
pushf
popf
inc
aam
mov
loope
jge
mov
cmp
lcall
jnp
in
xchg
scas
cmp
push
xchg
and
adc
addr16
mov
mov
pop
scas
dec
cld
inc
sarb
mov
or
cmc
sub
lret
jmp
xchg
in
ret
gs
out
or
lds
pop
shrb
ljmp
addl
sub
jp
pop
orl
xchg
icebp
test
push
daa
daa
aaa
mov
adc
add
add
daa
out
pop
cmp
out
insl
test
xor
cmpsb
loope
scas
jnp
and
daa
jnp
fcomi
fcoms
cmp
cmpsb
add
inc
in
push
pop
adc
jnp
lret
daa
pop
mov
movsb
jno
arpl
xorb
in
cmc
scas
jecxz
adc
or
ss
in
push
or
test
fisubs
addb
nop
movsb
mov
pop
outsl
stos
ss
inc
rclb
xchg
lock
inc
hlt
outsb
loope
xor
dec
fs
inc
fmul
outsb
jno
imul
add
cmpb
sbb
fstp
xor
enter
jmp
sub
pop
lods
lcall
fsubr
or
icebp
sahf
loope
fildl
xchg
das
les
adc
mov
leave
inc
and
sub
cmp
fs
mov
lret
mov
mov
sbb
into
inc
sub
cmc
adc
cmpsb
inc
outsl
pop
xor
loop
imul
imul
fs
mov
inc
inc
subb
in
ds
es
idivb
xor
in
cmp
out
out
sbb
popf
add
pop
pushf
loopne
arpl
adc
les
xor
xchg
add
xchg
xchg
mov
jae
fxch
add
in
pusha
xlat
andb
inc
sub
cmp
leave
jnp
sti
xchg
ja
cs
nop
xor
push
inc
pop
push
mov
lret
xlat
xor
repz
cmp
fwait
call
jge
subl
daa
adc
push
jmp
adc
sub
es
popf
push
incb
fstpt
aas
or
addr16
sbb
dec
jo
mov
cltd
jecxz
adc
pusha
std
gs
lods
cwtl
mov
shlb
cli
out
pop
xorl
push
ds
xor
mov
int
lock
int3
sub
mov
mov
dec
dec
shrl
shlb
les
ret
lret
pop
cmpsl
pop
mov
mov
jmp
mov
lret
xchg
es
xchg
xchg
and
subl
addr16
mov
aam
jae
ret
lock
add
addb
clc
rorb
xchg
mov
pop
ljmp
sub
test
push
out
mov
dec
lret
push
ljmp
sbb
add
mov
jo
sti
ss
dec
out
pop
test
lret
xchg
arpl
into
xchg
pop
pop
lds
push
mov
and
pop
clc
xchg
rorb
inc
xor
lock
jl
add
jge
mov
lret
das
or
pop
inc
imul
xlat
mov
sub
shl
fwait
jnp
sahf
dec
mov
mov
insb
xchg
mov
adc
out
mov
cmpsl
bound
sti
jns
and
pop
xchg
frstor
sub
pop
sbbb
aas
jp
mov
cmpb
jg
scas
jb
in
jecxz
pusha
or
fisttps
push
xchg
xorb
les
lods
xchg
xchg
ret
dec
xorl
popf
insb
add
mov
and
xchg
mov
push
insb
jg
mov
scas
fwait
inc
add
fisubl
adc
mov
xchg
pop
out
int
fnstsw
jae
xchg
es
sbb
iret
dec
push
push
fucomi
ficompl
mov
sbb
dec
shrl
pop
rcr
jnp
imul
inc
inc
pop
mov
cmpb
stos
adc
cs
lahf
jbe
and
cmp
sbb
out
aaa
jo
outsb
or
jle
add
in
int3
je
jle
addr16
push
push
mov
xor
add
scas
cmpsb
mov
and
cmp
cli
cld
push
sarl
cmpsb
test
lods
enter
daa
pop
and
std
mov
cmpsl
jl
clc
rorl
inc
sti
sbb
aam
sbb
inc
lahf
jbe
daa
push
push
das
dec
test
test
mov
pop
xchg
xchg
call
pop
shlb
push
sti
sub
sub
jno
cmp
shlb
outsb
aam
xchg
adc
mov
movsb
orb
add
out
lret
aam
push
mov
or
lret
cwtl
lcall
das
fcompl
adc
sahf
test
rolb
lods
test
mov
loop
mov
cmp
sub
xor
push
dec
and
mov
and
pop
scas
sbb
lret
jl
inc
into
int
dec
loopne
sbb
mov
cmc
fcompl
inc
outsl
incb
loop
lods
pop
stc
and
mov
test
add
aam
lods
iret
movaps
cmp
stos
lret
ret
fsubrs
cmp
shlb
loopne
jnp
pop
fdivp
xchg
adc
jno
shl
adc
jb
add
lods
mov
add
cmp
jmp
pop
sub
sub
xor
jno
inc
lahf
adc
aad
sub
pop
dec
ret
inc
jno
neg
add
ret
repz
testl
lds
pop
clc
jne
adc
cmp
pushf
bound
mov
cmp
sbb
jbe
aas
stos
and
jb
in
mov
je
into
push
jecxz
sub
cmp
inc
mov
outsb
jle
mov
mov
add
push
pop
adc
mov
scas
scas
xor
das
xchg
fld
mov
jo
clc
and
std
xchg
js
xor
insl
jmp
idivb
cmpsl
pop
loop
mov
ret
cld
inc
int3
adc
add
mov
popf
push
mov
xchg
push
sarb
ljmp
jg
xchg
dec
and
test
inc
test
out
lret
inc
ljmp
data16
out
cmpsl
cs
add
pop
int3
push
mov
test
add
pop
mov
mov
add
dec
dec
je
test
dec
add
add
pop
jl
jo
stos
stos
pop
xchg
push
push
fwait
scas
add
cmp
or
jno
dec
xor
mov
add
mov
adc
loope
pop
std
pop
sub
lahf
lahf
dec
lret
inc
lea
or
jecxz
fwait
stos
push
mov
shlb
in
jp
insl
nopl
inc
mov
jno
in
lahf
rcll
pop
daa
ret
push
or
cmp
jp
inc
adc
in
sbb
mov
mov
in
cld
pushaw
movsl
out
xchg
insl
push
mov
jmp
popa
aaa
addl
xchg
adc
mov
pop
sub
jle
enter
ljmp
scas
es
push
and
test
jns
das
iret
jno
insb
ret
mov
cmpsl
push
inc
call
jno
inc
and
or
mov
outsl
dec
ficoml
sbb
mov
lea
lds
lods
shlb
mov
aad
and
and
adc
jbe
xchg
jge
sub
sbb
cmp
das
insl
ret
or
arpl
xchg
mov
int3
pop
popa
cs
xchg
lret
xchg
xor
push
jo
stos
add
in
cmp
outsb
jge
icebp
push
jle
and
daa
cmpsb
or
pusha
in
fsub
addr16
daa
pop
add
pop
jno
xor
jl
push
loopne
mov
push
and
repnz
xchg
xor
test
je
sub
int
sub
mov
cmp
push
mov
loope
xor
sub
push
loop
movsb
lea
adc
adc
test
push
insl
sbb
sbbl
mov
add
rcrl
sub
pop
pop
inc
rcrl
repnz
inc
addr16
sub
pop
sahf
daa
test
imul
ss
frstor
mov
pop
andl
aam
ss
and
fcomp
cmpsb
pusha
idiv
loop
lret
cmp
fsub
stc
mov
fsubrl
ret
into
or
cmc
mov
jns
outsl
fstpl
loop
and
fs
loope
adc
dec
je
mov
dec
mov
scas
xchg
out
fwait
lods
cli
pop
nop
mov
test
push
cmp
cmp
jnp
jecxz
gs
mov
loopne
test
pop
std
dec
adc
mov
add
fildl
sbb
pop
push
pop
xlat
decb
lcall
test
in
lahf
push
cs
out
mov
cs
cmc
aad
pop
adc
and
jge
test
jmp
cmp
in
push
xor
mov
sbb
ja
xchg
movl
adc
loope
adc
push
jmp
in
pop
jo
or
pushf
push
inc
outsb
and
add
push
in
dec
pop
xor
je
push
xchg
jecxz
mov
jnp
mov
cwtl
sub
mov
roll
loopne
ret
sbbl
dec
fldt
sub
pop
lock
pusha
mov
daa
cmpsl
out
aaa
add
fimuls
insl
shlb
dec
outsl
mov
cmpsl
pop
mov
icebp
cltd
jp
cld
insl
xchg
push
lret
jb
mov
and
mov
imul
sbb
xchg
xchg
dec
aam
test
push
sub
mov
sar
dec
ficoml
mov
stc
imul
jnp
leave
out
push
int
push
jge
push
psubusw
negl
rolb
mov
adc
xchg
add
dec
mov
scas
test
pop
dec
xchg
push
sarl
pop
sbb
loopne
dec
enter
test
leave
add
bnd
push
les
pop
jnp
xor
cmc
les
insb
iret
and
mov
movsl
dec
mov
pop
fisttps
leave
fstcw
xor
xchg
mov
cli
gs
dec
sub
bound
xchg
jns
bound
xchg
jnp
mov
sub
dec
xor
addr16
xchg
mov
cs
jle
cwtl
cmp
inc
jns
pusha
inc
cmpsb
lock
inc
jmp
sub
add
sbb
or
ja
cwtl
push
sahf
add
push
and
mov
loopne
inc
mov
push
push
or
ret
lds
dec
incb
xor
xchg
mov
or
xor
mov
xchg
repnz
sbb
jecxz
imul
faddp
xchg
sbb
out
or
xchg
mov
sub
leave
cltd
mov
frstor
mov
jbe
pusha
iret
jge
sbb
push
aaa
out
mov
or
cld
mov
sub
lods
pop
push
push
movsl
jbe
fscale
add
mov
mov
js
cli
cmp
add
andl
insb
in
shll
pop
outsb
pop
cmp
and
dec
dec
jl
test
ds
mov
movsl
daa
sarb
lahf
movsl
lahf
mov
dec
push
sti
mov
push
aas
ds
inc
push
inc
in
jmp
pop
in
jmp
out
push
pop
dec
rorb
loope
ljmp
push
or
outsb
lcall
shrb
mov
xorb
xor
xor
inc
jo
call
jns
pop
les
test
xchg
fdivl
lock
lods
sub
xchg
sahf
lret
test
testl
mov
or
pop
mov
loopne
jo
ss
sbb
cmp
xchg
xor
mov
push
xor
outsl
and
mov
mov
into
out
lahf
cmp
push
shlb
outsb
add
loop
lret
or
nop
fadds
fs
adc
data16
dec
imul
cmp
cli
pop
ljmp
mov
push
mov
lahf
loopne
jmp
mov
adc
imul
sbb
sbb
xchg
push
or
cmp
es
push
jb
or
cmp
sahf
cmp
aad
inc
test
shll
orb
fldcw
hlt
clc
int3
repz
xchg
movsb
cwtl
cmpsl
loop
adc
repnz
dec
mov
popa
jne
sahf
test
jecxz
fwait
add
inc
xor
inc
mov
cld
aas
call
das
or
sub
push
jecxz
sub
mov
sub
cwtl
in
into
mov
dec
mov
shrl
xor
pop
mov
pop
push
cmpsl
mov
sbb
lahf
pop
lock
jmp
inc
push
sbb
ficoms
pop
and
pop
rcl
push
lret
es
inc
subl
dec
dec
push
fbld
cld
sbb
jo
cli
cld
cwtl
sub
lret
loope
cmp
out
jb
and
push
inc
enter
repz
sub
sbb
popf
push
in
dec
pop
jno
idivl
call
flds
fsubs
mov
lods
lds
dec
mov
lret
mov
pop
push
pop
push
jbe
cmp
mov
mov
mov
test
stos
mov
push
arpl
dec
sbb
jnp
xor
pushf
xchg
leave
jmp
imul
rcl
mov
pusha
stos
aaa
int
push
pushf
lods
pop
add
jo
in
ljmp
jbe
or
fnstsw
out
ljmp
aas
mov
jae
mov
dec
mov
pusha
inc
mov
addl
pusha
shrl
mov
mov
sub
bound
xchg
mov
in
test
xchg
lret
out
adc
or
test
mov
jns
mov
dec
jl
inc
in
mov
lcall
fildll
and
jmp
negl
addl
mov
inc
mov
frstor
stos
push
js
and
mov
insb
rolb
jnp
fwait
mov
push
scas
mov
adc
mov
jmp
and
cmp
jae
stc
xchg
inc
add
mov
mov
fidivl
pop
pop
sbb
in
mov
fisubs
lds
insb
rclb
imul
adc
cmp
repz
lods
or
hlt
repnz
sbb
lods
sbbb
dec
test
int3
xor
fwait
pop
push
stc
mov
xor
adc
mov
or
lret
or
mov
js
in
stos
cli
cmc
enter
daa
pop
pop
enter
xchg
jno
mov
dec
cltd
lahf
add
xor
imul
cs
lahf
rcrl
test
or
mov
gs
rcl
out
pop
or
aam
int
push
dec
cmc
loope
sti
xchg
stos
cmp
dec
ljmp
inc
jae
and
sbb
lds
out
sbb
addl
or
push
insl
call
int
sub
pop
inc
cmp
push
lcall
shrb
das
jns
sahf
insl
mov
cmp
xchg
jg
fnstenv
lock
in
mov
aas
sti
and
shll
sbb
js
xor
push
push
dec
idivl
lret
pop
push
xor
sbb
sub
dec
cmc
xor
xor
fwait
sub
xchg
xchg
dec
test
push
or
ficoms
repnz
dec
xor
orb
mov
cli
ret
xor
xor
cmp
or
mov
in
gs
push
mul
test
pop
pop
cmp
adc
in
adc
adc
add
cwtl
stos
sbb
shl
jb
jl
xor
adc
mov
jne
dec
sti
dec
scas
shrb
jbe
enter
cltd
nop
pushf
and
stos
scas
mov
les
adc
mov
adc
lea
es
inc
les
adc
pop
mov
fstps
mov
scas
inc
mov
mov
dec
jb
sahf
and
je
bound
or
cmp
add
cwtl
lahf
adc
mov
pop
ss
push
jle
mov
popa
dec
sub
fisttpl
cli
aaa
mov
lods
cmp
das
xor
dec
mov
xchg
and
and
or
rorb
push
insl
sahf
cs
dec
gs
add
pop
arpl
das
xchg
mov
inc
cld
sub
ret
lcall
adc
add
out
pop
sub
shlb
sbb
adc
aam
out
ret
sub
jno
adc
sar
mov
std
pop
ljmp
shrl
jns
out
cs
xlat
xchg
frstor
push
xor
cmp
iret
inc
xchg
out
cmp
enter
subl
lods
cmp
sbb
mov
bound
fsubrs
aas
mov
mov
decl
aad
lcall
xor
sub
mov
repnz
ficompl
pushf
shll
mov
and
ficomps
xchg
es
aaa
mov
dec
inc
xor
jne
mov
mov
xor
out
or
bound
xor
in
sub
sbb
dec
out
mov
sub
inc
cmp
fsubl
mov
mov
or
cmp
cmp
inc
pusha
jbe
dec
lock
xchg
int3
mov
mov
push
mov
mov
push
push
sbb
jmp
leave
bound
jmp
lods
jnp
jno
scas
daa
andb
pop
mov
iret
mov
pop
ret
inc
or
xchg
inc
sub
sbb
push
inc
add
fisubrl
jns
mov
lret
add
fiadds
pop
jmp
cld
dec
insl
shlb
and
into
sub
mov
jns
jbe
outsl
fdivrs
scas
aaa
sbb
lods
sub
insb
roll
or
dec
insb
add
or
out
fistpl
sub
fsubl
xor
insl
insl
mov
and
into
and
cmpsl
in
xchg
pusha
adc
sub
xchg
xchg
fldt
daa
pop
int3
push
cmp
movsl
jno
repz
insb
dec
or
gs
and
movsl
xor
rcr
lahf
repnz
cld
push
mov
push
push
aad
call
jae
cli
pop
xor
add
xchg
pop
int3
dec
pushf
push
and
xor
dec
sub
out
inc
cmp
std
adcl
pop
sub
mov
mov
insb
jg
xor
sub
lret
int
movsl
fisubrl
ljmp
lcall
mov
sub
and
sahf
adc
mov
sbbb
fdivrs
xchg
mov
add
scas
test
mov
pop
cmp
or
dec
idivl
lods
pop
lret
test
popf
add
mov
aas
sbb
pushf
into
mov
and
clc
test
xor
popa
outsl
jp
adc
loop
mov
decb
fs
imul
inc
or
data16
jno
shll
cli
cmc
ja
xor
mov
pop
or
decb
gs
inc
mov
inc
cmpsb
sub
iret
dec
adc
mov
fwait
add
xchg
nop
xchg
test
lahf
cmp
push
inc
xlat
mov
sti
pop
cwtl
jno
in
loopne
psubq
in
fstps
push
nop
ja
xor
inc
mov
ss
les
jge
repz
stos
cld
mov
mov
adc
call
cmpsb
ljmp
stos
add
jne
pop
pop
cmp
inc
inc
sti
inc
inc
mov
std
test
dec
ret
or
je
out
jecxz
xor
in
test
inc
cwtl
pop
insl
fidivl
mov
ret
iret
dec
push
pop
mov
mov
iret
push
mov
push
jge
sbb
jge
addr16
movsb
mov
fmuls
outsl
shll
hlt
insl
test
push
dec
pusha
push
cmpsl
pop
xchg
pushf
mov
push
jae
cld
out
fcompl
mov
mov
mov
pop
add
sub
sub
add
ret
mov
cmp
fldl
jp
stc
loope
jmp
test
mov
mov
lods
fwait
int
mov
xchg
adc
and
push
ljmp
loop
or
icebp
outsl
lcall
cmp
test
push
sub
sbb
push
clc
roll
cmp
stos
adc
roll
and
in
adc
xor
mov
cs
lds
mov
xor
and
jmp
push
scas
dec
xchg
sbb
inc
jmp
jae
fwait
push
stc
dec
andl
cmp
mov
ljmp
sub
int
fimull
xchg
push
int
sub
aas
sbb
addr16
jl
mov
es
mov
jnp
dec
jle
js
in
dec
fldenv
inc
movsb
fucomip
out
mov
jmp
lea
cmpl
push
data16
push
popf
das
inc
or
pop
cmpsb
ret
stos
cmp
and
insb
xchg
test
jnp
or
scas
mov
daa
push
cmp
bound
in
jae
ret
or
adc
inc
adc
add
nop
xchg
inc
sub
in
fs
push
sub
sub
addr16
imul
cwtl
fisubrs
sbbb
int3
mov
repnz
mov
decb
mov
arpl
and
movsb
push
sbb
test
or
push
test
vcvttps2dq
fisttps
mov
mov
mov
and
repnz
test
loope
sbb
ret
mov
in
js
cmp
pop
incl
rorl
pop
test
jl
jl
or
mov
dec
movsl
cmp
xchg
and
mov
push
je
cltd
test
mov
jg
cmp
pop
jno
js
sbb
pop
or
stc
lods
mov
sub
and
ret
stos
ret
lock
sti
sbb
and
sarb
sbb
xchg
xor
xor
testb
icebp
sbb
test
stos
cld
push
lods
iret
push
fdiv
or
sub
pop
add
xor
jg
push
out
xchg
into
rorb
mov
test
xlat
mov
cmp
push
repnz
mov
inc
shll
mov
adc
into
xchg
cmpsl
out
cmc
mov
push
loopne
pop
jecxz
loop
add
mov
push
fs
inc
adc
outsl
lods
push
fstp
mov
jp
sub
scas
leave
out
or
or
gs
mov
jne
jns
push
adc
push
pop
adc
iret
xchg
add
ss
xchg
inc
es
ret
jmp
cmp
and
cli
mov
sub
jae
mov
dec
divb
sti
stos
loope
cs
aam
pusha
push
push
nop
push
fdivrs
inc
rclb
push
fsts
adc
repz
popa
sbb
lods
pop
cwtl
lea
pop
dec
call
inc
or
imul
mov
aad
pop
cld
pop
xchg
inc
loop
inc
fisubrl
shll
daa
dec
cmp
shlb
mov
testb
xor
adc
add
mov
movsb
dec
add
mov
mov
hlt
xchg
jne
cmc
das
icebp
jge
mov
add
call
roll
sub
es
repnz
insl
insb
mov
cmpsl
pop
dec
mov
xchg
cmpsb
inc
icebp
cmc
or
mov
jge,pn
mov
shlb
and
pop
rcr
fcomip
sub
adc
test
hlt
push
cwtl
pop
out
insb
je
clc
xor
xchg
sub
and
xor
pop
popa
push
lds
pmaxub
hlt
mov
jg
jmp
lret
daa
add
inc
inc
cltd
subb
iret
test
into
ds
test
addr16
xchg
pop
out
rcr
repz
pop
or
stos
add
add
add
shll
push
pop
xor
push
or
fnstsw
mov
js
cmpl
pop
mov
dec
mov
sub
fwait
xchg
mov
add
sub
mov
mov
out
enter
mov
lea
xchg
mov
out
pop
adc
or
mov
mov
mov
mov
lret
les
mov
xor
adcl
pusha
lods
dec
push
fisttps
icebp
es
jb
and
mov
pop
lretw
ret
sub
stos
mov
lcall
and
roll
add
out
in
aam
push
test
leave
adc
push
test
dec
ds
pop
sub
pop
xor
inc
pop
int
jae
ret
das
pop
push
or
and
xchg
fcmovbe
xorl
add
loopne
pusha
fimuls
popa
lds
sbb
shl
cli
mov
je
arpl
jne
cmp
cmp
cwtl
arpl
dec
jmp
and
mov
jae
pop
aaa
ljmp
add
outsl
mov
xchg
popf
push
mov
les
jo
decb
loopne
sbb
les
xor
popf
cmpsl
cmpsb
xchg
push
int
pop
dec
sbb
pop
fdivrs
pop
cmp
das
fwait
arpl
sub
scas
cli
dec
out
loope
ljmp
and
data16
xor
lods
push
inc
mov
test
imul
inc
adc
sbb
stc
xchg
dec
pop
xorb
pop
dec
fisttpll
loope
xor
es
outsb
es
gs
xchg
pop
popl
sbb
jo
add
aas
in
mov
push
leave
sub
scas
sub
rorb
pop
outsl
push
push
add
mov
sub
push
mov
test
hlt
orb
jg
sbb
jmp
popa
aam
in
mov
sbb
cmp
subl
pushf
lret
test
ja
mov
xor
lods
ss
into
jp
in
xchg
push
outsl
cmp
fsub
or
stc
insb
dec
loope
stos
rcrb
fsubrs
xor
aaa
xor
lcall
jle
or
push
daa
xchg
pop
pop
gs
sbb
jns
icebp
pop
cwtl
rcl
adc
imul
push
jg
or
sub
ljmp
xlat
cmp
mov
mov
imul
lahf
loop
aad
and
nop
sub
movsb
jle
jecxz
sbb
mov
leave
repz
mov
call
mov
test
adc
cmp
addr16
imul
push
stc
or
inc
dec
cs
cmc
mov
test
and
dec
mov
pop
je
jmp
jecxz
push
add
lret
std
mulb
sbb
lahf
add
push
enter
mov
fistpl
les
push
mov
cs
lock
jmp
shrb
cmpl
push
and
es
adc
stos
dec
push
sbb
cmpsl
push
mov
icebp
int3
int3
or
inc
mov
or
pop
inc
popf
dec
shlb
cmpb
fstps
cwtl
fstl
push
into
xchg
imul
out
popa
insb
aas
mov
jmp
xchg
cltd
in
push
shll
lfs
inc
add
xchg
imul
test
xchg
outsl
inc
dec
mov
pop
xor
aaa
in
loop
das
push
pop
jb
cmc
stos
xrelease
sub
pop
add
fdivrl
xor
iret
pop
xor
hlt
inc
mov
mov
xchg
in
pop
pop
push
mov
dec
mov
lds
mov
or
mov
fwait
in
add
jne
jl
mov
cltd
xchg
out
cmpsl
out
bound
pusha
jns
mov
in
stos
cmp
sbb
sub
xor
repz
dec
test
out
push
mov
movsb
es
mov
fbld
notl
xchg
inc
out
jmp
and
sbb
in
shl
jge
mov
sahf
mov
push
fsqrt
jmp
and
fs
insb
popf
loop
mov
enter
pop
push
lret
sub
cs
stos
or
ret
mov
addr16
inc
sub
stc
jae
cmp
xor
add
xor
push
jg
dec
fiaddl
xor
subb
adc
lds
out
js
xor
leave
in
sbb
sbb
xchg
mov
nop
jge
ss
sbb
push
push
aaa
test
test
sbb
out
addr16
mov
cwtl
push
test
cmpsb
jo
in
scas
mov
jg
cmp
movsl
inc
movsb
xor
push
cli
mov
shr
mov
daa
push
aaa
sti
cmp
jo
mov
loope
dec
push
sbb
movsl
dec
pop
and
xor
pop
push
sbb
test
ss
jo
mov
pop
xlat
pop
cmpsl
rorl
or
ljmp
ja
xchg
incl
cmp
loope
adc
mov
push
adcb
sbb
loope
lea
lods
push
rcll
int
jne
sub
pop
pop
aas
push
and
pop
xchg
dec
faddl
jno
jmp
setle
add
test
adc
mov
dec
mov
inc
mov
hlt
xchg
and
mov
cmp
cmp
fdivp
js
movsb
lret
rol
bound
mov
inc
into
pop
sbb
xor
aas
out
loop
daa
dec
stc
and
or
adc
dec
jno
pop
arpl
and
scas
out
adc
cli
mov
pop
cmp
or
or
stos
sbb
test
pop
mov
test
das
sbb
imul
dec
cltd
xchg
int
sub
mov
bound
sub
adcb
frstor
popa
sti
or
xchg
aad
push
mov
dec
pop
jne
inc
testb
or
les
lcall
mov
add
pop
sahf
jmp
pop
fnstsw
adc
push
pushf
adc
jmp
loope
pop
inc
jge
inc
aad
xor
adc
ss
add
jecxz
icebp
arpl
sub
hlt
jecxz
inc
and
or
jg
cwtl
mov
ret
mov
pop
sub
sbb
testl
sub
repz
scas
mov
jno
call
shll
stos
subb
xchg
dec
push
push
sub
sti
xchg
icebp
mov
fwait
xor
or
dec
mov
into
add
mov
pop
out
rolb
add
aam
lcall
push
lock
mov
pop
add
sbb
pop
popa
cmpl
fcompl
js
mov
scas
push
lahf
push
movlps
add
adc
cltd
lock
test
mov
xchg
adc
dec
pop
cmpb
out
xchg
bound
ljmp
pop
sbb
popa
or
add
imull
std
dec
in
xor
jmp
or
data16
xor
mov
mov
mov
leave
pop
sbb
loope
fmuls
out
inc
scas
or
or
xchg
xchg
fwait
repz
iret
xor
jne
xor
out
xchg
shll
repz
jp
in
jl
xchg
push
mov
js
xchg
std
mov
addr16
popa
jp
lds
mov
enter
jmp
in
fwait
mov
loop
jns
inc
add
sbb
jmp
out
xchg
xlat
subl
push
scas
arpl
popf
movsb
adcl
jmp
stos
xchg
adc
and
cltd
insb
xlat
push
cmp
scas
mov
sub
xchg
imul
outsb
or
or
jo
jg
mov
lahf
jg
xor
repnz
xor
sub
pop
or
fidivl
sub
sbb
mov
imul
sti
lds
jnp
rcrb
pop
repnz
leave
arpl
mov
jbe
cld
xchg
orl
aaa
push
push
sub
int3
int3
inc
ss
fisttps
rorb
pop
jno
addl
jo
faddp
scas
sahf
mov
and
xchg
cmpsb
cmp
xchg
mov
push
in
popf
subb
sub
inc
mov
push
mov
fdivl
out
ret
or
xor
movsl
push
or
and
insb
loope
in
jge
test
add
inc
xor
dec
jg
cmp
into
fisubl
dec
push
inc
pop
enter
push
xchg
sub
lods
nop
cmp
push
outsb
in
push
adc
mov
imul
cwtl
dec
xor
pop
mov
inc
int
and
ret
mov
jo
push
mov
mov
repnz
iret
sahf
pushf
inc
ret
jnp
addb
mov
lods
mov
mov
mov
mov
and
adc
bound
cmp
mull
xor
call
jp
mov
adc
into
inc
inc
or
adc
divl
nop
shl
outsl
divb
loop
or
stc
fcmovu
dec
shll
jge
xchg
nop
mov
mov
jne
cli
roll
xor
or
xor
fsubr
push
jae
pop
loopne
adc
pop
out
adc
cmpsb
call
adc
xchg
xchg
add
xchg
nop
pusha
or
cmp
jb
xlat
mov
into
sub
add
mov
sti
mov
sti
push
aad
call
push
dec
mov
scas
sbb
fwait
mov
cmp
dec
mov
in
lea
call
mov
add
test
xor
out
pop
in
faddl
icebp
stos
inc
sub
ds
mov
xlat
imul
inc
jecxz,pt
jle
notb
icebp
std
inc
cmp
cwtl
inc
pushf
or
test
out
dec
ret
iret
mov
fidivs
xchg
mov
mov
sub
lods
shl
call
aaa
insl
and
test
test
mov
cld
lcall
mov
aad
inc
mov
jle
int3
rclb
subb
sub
not
push
push
loope
outsl
fucom
xor
clc
in
inc
xchg
out
sbb
mov
popa
lcall
mov
sbb
fldl
push
jp
icebp
mov
cmp
sbb
cli
xchg
xchg
test
add
xchg
add
rcr
mov
stos
sar
mov
outsb
shlb
adc
into
xor
insb
mov
xor
jb
mov
inc
movsl
mov
aad
ret
dec
cmpsl
dec
bound
inc
inc
mov
or
inc
sbb
and
pop
jne
dec
push
mov
xchg
loopne
gs
daa
bound
clc
jns
out
in
mov
mov
sub
sub
addr16
sarb
lock
mov
lea
inc
and
mov
push
and
movsb
sbb
pusha
jge
push
fbld
xlat
xchg
jmp
enter
pop
xchg
mov
sub
push
jb
ret
popf
lret
mov
mov
push
pop
inc
stos
or
inc
loop
jnp
sbb
scas
push
jp
push
pop
pop
stos
adc
into
iret
imul
push
inc
in
jae
lock
cmp
or
xchg
or
fucompp
or
xchg
push
jp
sbb
mov
lods
mov
fidivs
aad
lds
fs
insl
in
leave
fcmovb
add
sbb
fsubl
adc
jbe
add
jge
mov
sbb
and
jg
mov
int3
mov
movsb
pop
push
insl
add
dec
stc
sbb
dec
xor
jo
in
adc
jge
push
cmp
sub
les
and
in
adc
in
enter
daa
push
mov
jno
pop
fidivrl
or
ds
imul
inc
xor
lahf
lea
and
test
int3
negl
inc
push
stos
pop
cmc
lds
cmpl
push
loop
loope
fldt
sub
cs
cmp
dec
outsb
dec
call
pop
shlb
adc
xorb
cmp
add
push
out
xor
lret
flds
loopne
push
stos
jb
cmp
incl
or
aad
popf
in
gs
negb
sahf
aas
jns
test
adc
mov
jmp
pop
fwait
cmp
and
mov
xchg
cmp
mov
div
mov
ret
rcll
mov
cmp
into
and
cmc
fildl
xor
jecxz
outsl
aad
aaa
loop
push
movsb
stc
xchg
fwait
add
dec
adc
js
popaw
xor
mov
pop
mov
xor
ljmp
lret
sti
sbb
gs
sahf
loopne
cmc
ja
adc
imul
pop
iret
add
insl
ret
xchg
push
mov
sbb
xor
xlat
testb
ret
mov
not
push
sti
addr16
cs
jl
push
nop
mov
and
sbb
scas
f2xm1
push
xchg
inc
cld
cmp
jge
fcmovnb
mov
lods
mov
dec
mov
pop
pop
inc
aas
mov
jmp
mov
pop
mov
jecxz
les
outsb
mov
jb
jle
dec
push
lock
xchg
jecxz
cli
mov
xchg
out
mov
cwtl
add
pushf
mov
xchg
mov
pop
adcl
imul
cmp
jb
lods
xor
loope
stc
das
insl
dec
or
fcomip
xchg
and
decl
sarl
mov
es
stos
insl
or
inc
jge
cmpsl
push
push
std
mov
push
loope
cld
lds
mov
fsubrl
in
xchg
fwait
sahf
pop
popf
test
sub
in
aam
jmp
ret
xchg
loopne
movsb
push
repz
xchg
std
clc
and
dec
xchg
es
mov
mov
popa
mov
lods
mov
mov
repz
xchg
outsb
outsl
pop
push
push
enter
sbb
inc
mov
cltd
pop
add
pop
mov
sub
xchg
mov
or
jl
pop
sbb
mov
xor
ja
jae
xchg
stos
rcrb
adc
add
sub
test
or
ja
repz
in
loopne
xchg
mov
loop
nop
inc
fdivl
xchg
loope
push
or
lods
or
leave
inc
fwait
push
divl
xchg
push
sbb
out
inc
mov
jns
clc
inc
in
push
xor
out
push
inc
sub
es
addr16
sarl
shlb
cmpsl
rcrl
mov
xor
push
ja
jge
pop
pusha
sbb
inc
filds
ds
test
and
popf
repnz
mov
push
xchg
push
pop
stos
jnp
sub
xchg
and
insb
lods
inc
add
xchg
scas
jns
cs
mov
fisubl
enter
movsl
int3
xor
inc
dec
jmp
inc
inc
cmp
or
or
fldt
pushf
mov
ret
pusha
into
imul
lds
push
rclb
mov
shlb
hlt
gs
ja
les
xorb
jge,pn
ret
pop
xor
out
ja
jb
xor
loop
lret
arpl
cmp
mov
pop
scas
pop
daa
lret
and
pop
je
cmp
movsb
aam
loop
out
xchg
cmpsb
mov
aam
enter
daa
push
inc
int
sti
xchg
jno
inc
jl
sbb
hlt
out
jbe
movsl
pop
nop
jns
fisttps
lahf
lods
push
sbb
sbb
push
xchg
hlt
push
inc
dec
sbb
pop
sbb
mov
pop
inc
sub
push
repnz
mov
cmpl
mov
adcl
sub
lret
pop
negb
cli
push
mov
scas
scas
dec
xor
sbb
push
fmul
cmp
and
sub
and
xchg
lcall
cmpsl
fmull
xor
mov
mov
fiadds
pop
dec
cs
into
sbb
mov
cs
and
stos
fidivl
sbb
fsubrs
movsl
divl
shll
in
mov
sbb
adc
push
outsl
push
cmc
mov
or
loop
push
stos
xlat
pop
arpl
sbb
push
lods
aad
mov
daa
inc
cmp
adc
cmp
fwait
in
fisubs
stos
addl
pop
adc
mov
imul
or
xchg
fs
push
jbe
sbb
insl
sbb
clc
sub
push
mov
sti
push
dec
arpl
sub
jl
ret
adc
js
mov
fldenv
es
push
stos
mov
mov
sti
fucomp
lret
mov
cs
adc
lods
pushf
adc
call
inc
push
icebp
inc
popa
shll
loopne
pushl
pop
icebp
dec
lea
inc
je
in
jecxz
mov
push
std
xchg
popa
sbb
lds
test
lods
subb
cwtl
push
push
fcmovnbe
out
sub
mov
std
jecxz
cmp
push
das
dec
xchg
xchg
and
sbb
dec
rorl
daa
or
cmpsb
push
cmpsl
push
pushf
cmp
sub
add
lock
lret
pop
shrl
and
sub
pop
pop
mov
pusha
and
inc
bound
aam
adc
adc
mov
fs
pop
in
lds
jno
lahf
popa
enter
sbb
push
out
jecxz
movsb
xchg
mov
les
xchg
pop
wrmsr
jbe
add
cltd
xchg
xor
xchg
mov
xor
xchg
xor
sbb
daa
push
rorl
mov
stos
scas
test
push
mov
and
dec
in
jmp
or
mov
xor
mov
rcr
mov
dec
mov
ja
popa
jp
dec
lea
jae
aad
repz
fwait
xorb
dec
js
jne
scas
cmp
and
lds
add
in
in
imul
fiadds
and
mov
dec
jp
arpl
jle
pop
mov
adc
repz
in
jb
pusha
mov
add
mov
jmp
dec
xchg
dec
leave
ja
fstps
or
clc
add
sbb
lods
mov
aad
dec
stos
out
jnp
and
ja
jnp
mov
ret
adc
adc
cs
ret
fs
inc
out
sahf
inc
push
inc
xorl
out
cmpsb
std
or
mov
cmpsl
inc
jnp
das
fimull
addr16
add
sbb
or
fidivrs
lds
sub
repnz
dec
hlt
mov
and
jbe
addr16
sbb
dec
fidivl
movsl
js
or
leave
add
mov
lea
and
jge
push
adc
mov
jo
inc
cmp
mov
inc
out
pop
cmc
fcoms
fisttpll
es
in
loop
pop
enter
daa
push
push
cmp
push
aaa
jno
movsl
cli
jl
jp
dec
adc
add
jp
dec
lahf
lret
in
push
data16
test
bound
inc
fldl
cmp
enter
inc
dec
sarb
test
push
mov
loope
lods
add
lods
mov
outsb
adc
push
insl
rcrb
cmpsb
mov
pop
adc
sbb
arpl
mov
mov
push
filds
sub
pop
pop
cmp
push
mov
insl
fdiv
aad
sub
mov
inc
adc
push
jg
es
mov
jns
arpl
pop
and
fisubs
cmp
sub
jle
je
gs
xchg
sarl
pop
sbb
jb
cmc
imul
sbb
es
out
incl
fs
mov
rclw
lods
mov
ljmp
out
mov
cli
pop
xor
xor
xchg
inc
cmp
je
or
adc
gs
lods
loopne
mov
pop
xor
imul
scas
add
mov
lock
test
aam
je
push
sub
fisubl
in
int
xchg
sti
mov
aad
add
dec
xlat
fdivrp
inc
inc
pop
push
fstps
stos
les
mov
mov
sub
pop
cmp
pop
test
lcall
add
movsl
pop
into
sub
inc
icebp
andl
jg
sub
imul
je
mov
jecxz
mov
call
cwtl
ja
imul
inc
dec
cwtl
dec
orl
fildl
cmp
mov
push
and
lock
test
das
sub
cwtl
mov
dec
mov
and
inc
and
fisttpll
xchg
mov
dec
cmp
imul
mov
icebp
jmp
jmp
enter
sub
and
cli
lods
pop
push
ror
push
sbb
cmp
inc
lea
mov
push
sub
enter
bound
in
push
popa
fistps
pop
mov
inc
lods
jnp
cld
mov
orl
xlat
lods
add
mov
ds
lock
pop
imul
aad
test
aam
xchg
pop
sbb
arpl
leave
push
pop
stos
sahf
insl
jb
push
test
add
arpl
inc
xor
and
xor
lods
mov
or
jb
add
pop
push
ret
aam
popa
dec
cmp
mov
or
or
push
inc
fwait
scas
sub
jnp
dec
neg
mov
sub
out
add
fisubs
sbb
in
pcmpgtb
test
icebp
sub
sbb
scas
addr16
aaa
jp
stos
les
jo
mov
mov
pusha
dec
adc
ffreep
push
fs
fs
jmp
sbb
lds
mov
movsb
push
mov
adc
or
popa
push
jns
lds
push
sbb
mov
push
cs
gs
xchg
dec
iret
xchg
ret
mov
inc
popa
out
pop
jae
sbbl
or
add
popf
fiaddl
call
pop
sbb
mov
jp
pop
ficomps
hlt
lcall
sub
les
aas
and
sti
cld
xchg
arpl
cmp
jbe
leave
pop
jge
xchg
push
sbb
sti
into
aaa
fs
test
int3
js
lea
sub
push
hlt
lea
xor
inc
nop
jne
sbb
mov
test
in
mov
cmpsb
test
repnz
cmp
pop
daa
push
in
cmp
std
jno
sub
jl
repnz
adcb
movsl
insl
test
and
rcl
cmp
lret
ljmp
mov
sbb
xor
fs
call
pop
loope
int3
xchg
sub
stos
cmp
outsb
js
mov
sar
repnz
jo
pusha
sbb
ds
pop
mov
xchg
mov
int
mov
sbb
lcall
xchg
fcompl
or
test
dec
jg
lock
sub
xchg
add
mov
push
push
mov
clc
shll
push
push
outsb
lods
mov
cmp
jecxz
divl
lret
mov
add
mov
fstpl
cmc
add
int3
push
cmc
xor
xor
xchg
shrl
cmc
loop
xchg
enter
xchg
jg
mov
into
and
mov
and
stos
xor
and
cmp
and
or
push
gs
andps
sbb
and
dec
loope
imul
add
pop
inc
sbb
jecxz
xchg
xlat
mov
je
sbb
mov
cmp
movsb
sti
je
mov
icebp
pushf
sbb
push
and
mov
ss
lds
push
xor
xchg
inc
loope
add
ljmp
call
sub
mov
sub
add
gs
imul
movsl
inc
js
inc
inc
xchg
shl
aas
push
jb
jb
lods
orl
fldcw
pop
movsl
std
loopne
sub
mov
adc
push
push
xor
dec
outsb
xchg
popf
dec
pop
mov
movsb
mov
mov
cmp
or
mov
add
pushf
and
call
push
imul
mov
adc
cmpsl
push
mov
or
cmp
cld
inc
mov
push
dec
mov
and
enter
sti
shlb
sub
ret
xor
and
jge
lcall
push
ljmp
das
lods
repz
out
test
jle
push
out
in
out
cmp
add
and
dec
mov
cmpsb
xchg
sbb
mov
stc
ja
sbb
aam
cmp
ds
lea
rcrb
xor
cli
aaa
mov
jle
or
in
mov
or
fidivs
pop
mov
mov
into
inc
mov
shll
xchg
test
inc
mov
push
jns
fsubrp
mov
ds
jne
mov
gs
loope
mov
jns
add
xchg
loopne
leave
out
fnstenv
sub
pop
call
jle
cmpsl
movsl
cltd
mov
xor
fisttpl
jbe
in
mov
xchg
outsl
pop
xchg
aaa
mov
in
xchg
in
lock
movsb
push
jle
cld
popf
data16
xchg
push
push
pop
mov
fsubl
xor
xchg
jnp
push
sti
push
jne
push
adc
ss
fisubs
in
insb
lock
lret
inc
inc
mov
cmp
faddl
jns
fidivl
xchg
scas
mov
sbb
fnstenv
imul
faddp
cmp
lds
inc
sbb
repnz
mov
hlt
inc
dec
ja
icebp
and
jge
push
call
aaa
and
push
or
add
int3
arpl
lret
push
xlat
cld
inc
xor
mov
out
int3
and
push
cld
cmp
sub
add
mov
enter
daa
push
stc
in
xchg
lock
shl
jl
ds
dec
out
dec
fidivrs
mov
and
mov
sub
clc
loop
inc
sti
mov
jne
xchg
pop
push
js
sahf
sahf
pop
add
sbb
xchg
pop
sbb
add
mov
jl
cmp
add
dec
adc
shl
lock
sbb
sbb
lahf
jae
add
mov
xor
movl
push
and
pop
cmp
lcall
xchg
fmull
sbb
test
clc
test
add
jg
loop
mov
jno
mov
and
xchg
imul
addr16
repnz
in
clc
das
mov
inc
outsb
sbb
sbb
scas
push
shl
pop
xor
xor
mov
loop
jge
stc
insl
fwait
fs
jecxz
or
lcall
mov
and
shlb
xor
mov
push
xchg
gs
mov
mov
ja
jno
adc
jb
imul
das
add
jecxz
xchg
pop
jl
sbb
push
jae
xlat
repnz
dec
sub
into
xor
mov
dec
pop
cs
out
aad
scas
and
xchg
stos
or
ret
cld
fxch
inc
ret
les
add
mov
lods
testl
cmp
jmp
adc
rcrb
fs
pop
adc
loop
ljmp
dec
inc
mov
sbb
mov
and
je
push
or
js
push
negb
inc
push
cwtl
in
cwtl
cmpsl
mov
dec
mov
xorl
sbb
popa
and
enter
leave
mov
lock
gs
das
jmp
xchg
mov
fstl
jnp
mov
out
mov
insl
movsb
jg
dec
xor
mov
mov
lods
hlt
pop
cld
jno
clc
lret
cmpsb
shrb
mov
clc
and
mov
sbb
sbb
sub
test
aam
jle
ret
ret
push
mov
pop
frstor
ret
rclb
lret
popa
or
xchg
jg
scas
add
out
or
sub
sarl
dec
cmpsb
sbb
lea
cltd
cmp
and
mov
xchg
adc
mov
xchg
test
inc
push
xchg
rcrl
sbb
icebp
rcll
bound
stos
jl
iret
push
popf
mov
add
cltd
push
incl
and
lock
stos
xor
in
lea
nop
cli
jne
push
pop
jl
cmp
dec
and
inc
cmp
pusha
or
sub
fwait
or
dec
mov
mov
repnz
out
rclb
jns
mov
pop
xchg
das
cmp
sub
adc
cltd
addr16
adc
push
and
sbb
iret
mov
in
cltd
mov
cltd
int
pusha
test
filds
xchg
dec
xchg
or
jmp
mov
cmpsb
addl
mov
mov
xchg
pusha
mov
inc
aaa
pop
and
sarl
or
jnp
out
scas
add
sbb
inc
and
ret
lcall
inc
push
jae
loope
inc
inc
js
or
stc
ret
clc
in
fisubrl
mov
sbb
jns
pop
into
leave
fisubs
mov
sarb
div
or
mov
hlt
xchg
in
jnp
add
jbe
out
jge
cmc
inc
sbb
push
aaa
loop
scas
or
add
add
std
int3
dec
xchg
cmp
rcr
push
mov
adc
scas
fdivrs
pushf
and
cmp
mov
movsb
add
or
and
inc
cmpsb
scas
jmp
mov
xor
daa
push
xchg
ljmp
lahf
cltd
jl
pop
in
pop
inc
test
add
and
fistpl
ffreep
mov
movsb
dec
push
push
ret
das
xchg
inc
mov
adc
adc
stos
push
sub
loope
ja
sub
and
outsb
cmpsl
rclb
or
jl
mov
jno
add
pop
in
xor
jo
int
xchg
mov
and
lcall
fcomp
hlt
jmp
push
outsb
int3
in
inc
push
andb
lock
orl
lock
adc
and
cmpsl
ss
gs
pop
in
divl
jbe
roll
mov
into
xchg
ss
mov
jo
outsl
xor
cltd
loop
xchg
sub
and
pop
add
push
lock
jno
cmp
das
xchg
aad
repz
xchg
outsl
test
cmp
clc
mov
lcall
gs
imul
pop
nop
test
hlt
bound
mov
insl
add
ljmp
and
xlat
xor
add
push
xchg
sbb
shrb
out
mov
mov
fistps
xor
xchg
mov
flds
jmp
les
repz
scas
enter
mov
add
mov
arpl
mov
sahf
pop
ret
adc
loope
jmp
test
pop
mov
rolb
lcall
pop
mov
jb
iret
lcall
push
loop
xchg
mul
negl
cs
jl
test
or
aaa
push
jb
inc
sub
fistl
mov
mov
or
lock
in
enter
and
pop
ret
daa
or
lret
es
nop
insl
mov
test
add
cmpsl
dec
lock
test
xlat
cld
pushf
repnz
adc
cld
jbe
fsubrs
pop
cmp
rorb
sub
sbb
test
or
push
jae
std
mov
out
popa
mov
in
popa
and
push
lods
leave
and
outsl
sbbl
es
push
pushf
lcall
mov
cs
test
scas
mov
sbb
dec
lock
outsl
test
fsubr
xchg
lret
iret
mov
es
lret
stos
imul
push
inc
and
add
mov
mov
and
xor
mov
or
pop
xor
into
pop
mov
rcrl
mov
ja
mov
pop
inc
iret
xchg
cmp
inc
dec
add
aas
jne
and
fbstp
out
lahf
in
ljmp
in
outsb
mov
jle
jb
xor
or
arpl
jp
mov
cmp
mov
pop
pusha
jle
jmp
mov
or
xchg
jmp
jnp
lcall
xchg
mov
ss
shr
ja
mov
test
jnp
sub
push
add
adc
xchg
iret
mov
out
pop
pop
cld
mov
jae
jbe
inc
dec
cmpsb
in
or
je
add
ja
int
sbb
aam
pop
test
sbb
stc
lock
fimuls
cmpsl
cmp
leave
adc
int3
mov
pop
js
leave
movsb
or
pinsrw
add
adc
jl
sbb
subl
xor
pop
int3
cmp
jp
popf
mov
xor
push
out
scas
mov
lea
out
sarl
movsb
mov
fcoms
ds
cmpsb
xor
in
jle
fxch
sub
daa
dec
scas
sub
cli
pop
jmp
jl
push
cli
dec
int
mov
movsl
cmpb
lahf
inc
push
push
mov
xchg
test
mov
je
sbb
aam
outsb
pop
lahf
js
rclb
and
sub
das
add
lcall
mov
std
rorb
dec
push
subb
mov
xor
and
jmp
mov
and
movaps
cmp
lcall
iret
fcompl
add
sahf
adc
mov
jg
lods
cmp
aam
mov
and
mov
push
jle
xor
ss
push
cmp
adc
divl
mov
lea
xor
adc
jae
push
stos
mov
cmc
test
xor
dec
popa
loop
in
stc
fildl
adc
jg
lods
pop
inc
ja
mov
out
xchg
sar
in
adc
inc
mov
jbe
or
dec
push
mov
lods
or
in
dec
arpl
sub
adc
das
subl
and
jo
in
sbb
xchg
in
xlat
jo
shrb
je
jns
loop
adc
rcl
es
push
nop
loopne
pop
dec
push
mov
inc
mov
pop
fnstcw
ss
les
fwait
xor
lea
xchg
pop
ss
pop
jne
mov
pushf
push
xchg
jmp
mov
pop
pop
sbb
inc
call
fistps
jb
scas
jb
loopne
insb
je
ds
xchg
jbe
mulb
push
adc
addb
sub
adc
mov
xor
jge
mov
cli
mov
lret
add
das
cmpsl
repnz
mov
sub
xchg
and
les
sbb
fsubs
hlt
scas
arpl
dec
sub
fisubl
xchg
sub
pop
adc
pop
ror
test
mov
push
cmc
movsb
mov
push
mov
cmp
pop
and
aam
shl
loopne
test
outsb
xor
bnd
clc
subb
mov
mov
mov
xor
xchg
mov
shlb
dec
push
ja
aaa
ud2
test
add
and
push
in
mov
push
imul
jbe
inc
sbb
sub
pop
jne
mov
jecxz
testl
ret
xor
or
sub
mov
or
push
scas
sarl
repnz
ja
pop
rorb
cltd
ja
sub
mov
fwait
imul
dec
out
lret
stc
jo
cmp
fucomp
jle
pop
bound
cmp
ror
in
loope
xchg
int
xlat
out
mov
sub
or
xchg
scas
and
jp
iret
or
jb
add
fbld
cmpsl
push
sbb
mov
loop
xchg
mov
sub
xor
fists
adc
jno
faddl
mov
adc
leave
stos
sub
push
insb
das
jmp
xchg
scas
lret
lods
int3
push
dec
mov
iret
iret
add
jo
pop
push
pop
pop
push
cltd
pop
inc
jmp
jae
push
xor
dec
dec
dec
or
out
dec
jmp
testb
fcmove
out
xchg
mov
jecxz
rol
imul
in
fisubrs
xchg
iret
shl
jb
lret
repnz
mov
sbb
adc
daa
lods
arpl
jp
jbe
pop
jge
out
sbb
orb
and
loope
insb
scas
xor
and
loop
push
mov
push
addb
xor
mov
scas
xchg
fcoml
cmp
adc
rol
cmpsb
mov
outsl
in
gs
enter
daa
dec
push
xchg
cmp
movsl
addr16
sbb
cmp
dec
aam
movsl
mov
mov
test
in
test
pop
lds
test
xchg
in
push
pop
push
and
js
mov
or
adc
sub
call
sub
push
or
outsb
mov
mov
pop
xchg
add
scas
jo
shll
xor
mov
cmp
scas
cs
mov
pop
lcall
ljmp
fucomip
sahf
mov
out
test
lcall
cltd
sub
daa
call
xorl
add
mov
hlt
repnz
cltd
adc
das
cmp
lret
jle
mov
dec
mov
incb
sbbl
into
pop
rcrb
dec
dec
std
xor
add
mov
das
stc
xchg
ret
sbb
test
cmc
imul
dec
shrb
push
mov
sub
pop
dec
xor
push
and
js
jne
lock
gs
push
cmpsb
loopne
movsl
lcall
pop
insb
imul
scas
pop
add
lds
test
les
iret
cld
pop
xlat
scas
mov
sub
or
lods
lret
in
lcall
jle
aad
mov
sbb
jl
inc
mov
and
push
repz
add
fs
call
mov
xchg
pop
sub
cltd
pushf
adc
jl
pop
std
mov
inc
xchg
popf
adc
aas
lcall
dec
push
push
or
shl
into
pusha
imulb
add
jl
xchg
aas
push
sub
aaa
push
orb
fucomi
xor
mov
stos
mov
in
inc
lock
push
fsubrs
xchg
mov
loopne
shlb
mov
shrl
lahf
es
inc
insl
pop
pop
adc
cmpsl
dec
xor
mov
xor
ja
repnz
repz
mov
or
movb
sub
shr
scas
lret
push
aam
fbld
push
stc
xchg
fstpl
or
xchg
and
insb
popa
push
jbe
lods
lahf
mov
add
xor
pop
push
push
push
adc
punpckhdq
loope
mov
cltd
fistpll
and
out
inc
fimuls
mov
jmp
roll
xchg
repz
lods
xor
push
xchg
rolb
ljmp
xor
mov
cs
mulb
pop
aaa
pop
mov
lods
mov
dec
dec
cli
push
inc
inc
std
out
ss
mov
mov
jne
xor
mov
mov
out
pop
lea
jns
pop
shl
fisubs
fucom
aaa
aas
mov
add
add
lcall
popf
sub
mov
mov
xor
fistps
xor
addl
xchg
adc
push
mov
sarb
dec
xchg
cwtl
stos
mov
je
insb
lcall
scas
cs
push
xchg
mov
jb
popa
clc
sub
sub
inc
pop
fisubrl
jae
outsb
ds
push
pop
ret
into
movsl
push
jne
loope
subl
sbb
push
jl
dec
loop
vhaddps
imul
stos
leave
xchg
in
shl
int3
aaa
arpl
jnp
jge
xor
imul
fldenv
add
mov
cvtdq2ps
inc
sub
or
movsl
scas
jne
xchg
and
ljmp
adc
push
enter
daa
dec
jne
cmp
cmp
fisubrs
mov
mov
imul
nop
mov
or
pop
mov
loop
and
sub
push
xchg
pop
inc
enter
add
pop
dec
mov
pop
push
add
pop
test
sub
or
outsb
and
add
sarb
mov
inc
or
fistpl
jnp
cli
add
push
xchg
mov
insl
fcmovne
icebp
andps
sub
pop
lcall
cwtl
fdiv
jno
sub
inc
sahf
push
outsb
push
fstps
adc
mov
mov
psrlw
movsl
mov
cmp
mov
fdivp
out
pop
mov
jae
cmp
dec
jg
mov
cmp
sbb
mov
adc
imul
mov
pop
sbb
stc
dec
mov
adc
inc
ret
xchg
mov
lods
es
mov
sbb
cli
mov
or
out
bound
out
mov
adc
push
gs
pop
loopne
adc
adc
push
imul
lea
cltd
push
xchg
imul
cmp
test
xlat
out
mov
pop
icebp
cmc
mov
dec
pop
hlt
sti
fbld
loopne,pn
lods
aad
mov
adc
jne
inc
mov
fldcw
movsb
ret
repz
test
shll
jmp
clc
call
xor
mov
fldt
mov
es
rorb
pop
mov
xor
in
aas
cmp
test
je
jnp
jecxz
push
imulb
repnz
cwtl
fsts
popf
mov
dec
aaa
or
ret
or
sbb
pop
sbb
lock
mov
ja
xchg
inc
ljmp
cmpl
inc
ret
cmpsb
dec
pop
inc
repz
dec
sbb
mov
or
cld
sbb
fcmovb
mov
adc
inc
mov
xchg
popf
and
rcrl
aam
push
mov
nop
push
push
mov
mov
clc
jns
xchg
push
xchg
repz
mov
mov
cwtl
in
mov
push
sub
jae
add
dec
pop
cltd
push
notl
test
inc
jg
bnd
dec
and
adc
je
cmp
call
jecxz
pop
lret
insb
jns
cmp
pop
push
sub
add
add
mov
popa
or
sbb
dec
push
mov
pushf
xor
mov
push
arpl
inc
xchg
fadds
enter
xor
jne
sarb
mov
outsl
sbb
cmp
jge
mov
mov
xchg
imul
sub
adc
lods
das
sub
mov
jo
mov
push
fistl
in
imul
push
add
and
fwait
xchg
fcompl
mov
push
dec
stos
xor
daa
jne
push
mov
jo
dec
mov
xchg
jnp
test
scas
xchg
loope
push
fsubr
sahf
adc
sub
shl
ret
jb
les
dec
jae
shlb
push
call
mov
and
inc
hlt
das
test
xor
mov
bound
jb
adc
dec
fdivp
in
xchg
lds
aam
sub
int3
mov
pop
add
leave
or
mov
mov
jbe
xchg
sub
addr16
aaa
fisubs
or
sub
add
or
mov
sub
inc
jae
xor
addr16
scas
push
mov
cmp
inc
pop
movsb
sub
or
pop
xchg
mov
mov
lods
xchg
enter
daa
dec
push
mov
jno
cmp
jl
daa
pop
dec
sbb
and
movsl
xchg
push
iret
and
aaa
and
test
out
stos
pop
inc
sbb
push
mov
pop
ds
push
mov
push
sub
dec
cmp
sub
xor
adc
sbb
and
in
sbb
push
shll
inc
nop
push
hlt
push
loopne
pop
add
fiaddl
mov
pop
lcall
dec
fsubl
loope
sahf
cli
ss
test
adc
xchg
out
cld
jg
jl
mov
nop
pop
mov
cmp
pusha
mov
ss
inc
fadds
cmp
lods
or
lret
sub
mov
sbb
inc
push
into
push
ds
fiaddl
or
push
lret
loop
add
stc
add
adc
inc
jbe
or
sbb
and
mov
addr16
xchg
jmp
push
xchg
enter
frstor
int
loopne
xchg
cld
pop
or
push
adc
imul
add
mov
xchg
cs
ds
inc
out
xlat
sub
lea
in
mov
push
aad
inc
cmpsl
aad
cmp
dec
jo
jge
jmp
out
lcall
pop
das
aam
pop
lea
movsb
call
mov
pop
mov
test
pushf
imul
mov
pop
inc
iret
xor
xor
aas
fdivs
jb
test
inc
in
je
xchg
enter
push
out
mov
xchg
or
mov
cld
mov
gs
dec
lock
outsl
fisttpl
mov
mov
adc
xchg
das
inc
std
fisubs
dec
out
dec
and
xchg
sbb
push
mov
es
out
insl
daa
push
decb
fmuls
dec
test
mov
loopne
nop
cld
dec
outsl
cltd
lret
rol
pop
mov
sbb
mov
rclb
xlat
aam
sbb
push
jg
cmp
addr16
clc
xor
xor
or
aam
andb
test
test
xchg
in
daa
lcall
icebp
outsb
add
pop
sub
test
testl
loope
or
sbb
idivl
jbe
push
stos
daa
cmp
push
int3
jbe
add
and
scas
lcall
fwait
ret
or
aam
xchg
fwait
cmpsb
mov
fbld
sub
ja
dec
or
fdiv
inc
sub
lds
ret
clc
mov
nop
adc
jne
aad
mov
inc
jae
sbb
bound
insl
mov
fsubl
in
xor
xchg
mov
stos
scas
sub
stc
or
stos
jnp
jp
dec
shlb
repz
mov
dec
arpl
mov
mov
sbb
jmp
cmpsl
ja
adcl
push
adc
popf
push
cmpsl
dec
mov
int
imul
hlt
call
jnp
subl
fistps
ret
sbb
dec
sub
cmc
jae
jbe
inc
push
out
or
pusha
out
stc
inc
jae
and
out
lret
xchg
mov
daa
popf
imul
inc
ficoms
rol
inc
arpl
mov
stos
xchg
je
sbbb
or
xlat
jbe
and
sbb
stc
mov
or
mov
sbb
in
mov
pop
push
push
sub
dec
jo
enter
in
data16
ficomps
stos
inc
lods
movsb
mov
lods
push
scas
fisttps
in
sbb
ss
daa
dec
dec
and
jno
mov
jle
mov
les
push
enter
adcl
loope
ja
jg
mov
out
loopne
add
jnp
mov
pop
jge
xor
loope
xchg
imul
cltd
jnp
sub
pop
xchg
shl
pushf
jl
push
xor
xor
ret
sbb
add
add
sahf
into
xor
roll
imull
pop
sub
xorl
je
mov
fmull
sahf
sub
or
sahf
popf
repz
test
inc
je
lods
rcl
out
jae
mov
xor
mov
xchg
leave
and
fbstp
add
or
add
fincstp
insb
ss
pop
push
add
lcall
adc
into
add
ljmp
icebp
mov
mov
loop
and
fs
cmp
xchg
lods
hlt
ret
mov
jbe
dec
out
mov
cli
bnd
test
push
imul
shlb
shlb
pop
sub
pop
adc
sbb
imul
or
xchg
icebp
les
in
cmp
cmpb
sub
xchg
and
or
cmpsb
test
leave
nop
dec
sahf
jb
iret
jno
inc
fimull
mov
repz
and
xlat
xor
mov
insb
rol
int3
in
pop
inc
inc
sti
adc
rcrb
js
pop
out
arpl
nop
sbb
aas
ja
jb
xor
dec
mov
pop
push
jecxz
outsb
jle
xor
jno
jg
dec
movups
mulb
cmp
mov
mov
sbb
adc
outsl
jnp
das
and
mov
add
sbbb
lods
add
pop
insl
push
cmp
imul
mov
and
jae
loop
inc
ja
mov
and
mov
rorl
in
repz
ret
sbb
hlt
push
inc
lea
mov
cli
clc
outsb
mov
ljmp
movsl
lods
loopne
stos
mov
pop
clc
pushf
xchg
xor
mov
ja
clc
push
cltd
test
test
scas
inc
xchg
sub
dec
repz
ja
pop
jo
xchg
sbb
push
pop
and
stos
push
inc
xchg
push
outsl
lods
repnz
cmp
ds
jae
lret
or
and
mov
and
stos
pop
fsubp
inc
ja
mov
xor
ret
or
nop
push
fwait
daa
cmpsl
fwait
dec
jae
sbb
cmp
mov
es
cli
cmpsb
cmp
and
jns
fcmovnu
in
repz
or
out
lea
or
xchg
scas
stos
dec
imul
js
or
pop
fimuls
imul
pusha
fstps
mov
xchg
jo
adc
repnz
pushf
push
rcrl
js
jns
popf
sbb
or
dec
stos
stc
test
or
pushf
jnp
in
add
data16
adc
repz
ret
push
xor
inc
mov
pop
xor
pop
int
insl
out
dec
push
repnz
scas
ficompl
add
sbb
inc
insb
imul
pop
fidivs
loope
lds
shlb
mov
pop
test
testl
call
jbe
and
sbb
fisttpl
lock
roll
enter
sarb
push
or
jno
xlat
xor
mov
and
bound
popa
jecxz
movsb
inc
jns
push
std
jno
cmpsb
shll
enter
daa
dec
cld
xchg
cmp
mov
dec
jl
test
ds
jmp
in
stos
push
push
rcll
test
test
cmc
inc
in
xchg
mov
test
js
dec
sahf
pop
mov
cmp
loope
aad
sub
scas
cmp
xor
fadds
rcl
sub
mov
orb
mov
and
repnz
inc
pop
xor
cmc
popa
push
cli
jle
int
pushf
subl
les
lcall
jle
imulb
sub
repz
inc
movsb
sti
test
sub
mov
mov
or
mov
push
mov
inc
mov
ss
in
cmp
mov
call
jb
or
out
sbb
jg
into
in
shl
push
pop
xor
loopne
outsl
push
pop
loop
je
stc
outsb
adc
adc
popa
push
data16
jb
fcmovnu
mov
out
inc
dec
cli
and
lahf
addr16
pop
xchg
or
cmp
jl
cmp
xlat
dec
loopne
iret
loop
dec
mov
adc
pop
shrl
lods
cli
adc
push
and
sub
sbb
mov
daa
cltd
sub
adc
in
nop
xchg
lods
sti
in
adcb
mov
nop
daa
mov
dec
jbe,pn
inc
in
outsl
xchg
les
cs
lea
pop
movsl
call
mov
out
hlt
aaa
sbb
pushf
shll
pop
mov
sbb
outsl
cld
jl
push
out
jb
pop
sbb
inc
add
jns
loope
mov
je
add
sbb
mov
cmp
mov
jge
adcl
pop
arpl
cmp
lock
das
add
mov
xchg
sbb
mov
mov
arpl
movsb
aam
orl
adc
mov
icebp
mov
mov
lret
scas
jmp
mov
sub
mov
repnz
sarb
lahf
mov
ljmp
ret
stos
xchg
or
ja
fnsave
bound
fistl
ljmp
movsl
lods
dec
in
mov
shr
xchg
jnp
ret
push
mov
negl
adc
or
mov
lret
dec
xchg
mov
dec
pop
lock
xlat
jge
xchg
and
sbb
repnz
icebp
mov
pop
int3
cmpsb
mov
push
adc
and
push
ret
fisttpll
loope
sbb
push
js
sub
scas
mov
gs
mov
cltd
es
ja
mov
dec
cmp
or
xor
fwait
push
mov
jne
pop
jbe
add
adc
bound
jns
clc
pop
in
or
out
in
sub
out
mov
addr16
iret
and
dec
adc
imul
jle
stos
aam
lret
pusha
rorl
lock
xchg
iret
test
pushf
xchg
cmp
mov
push
xchg
jecxz
popf
lahf
xchg
mov
dec
or
insb
mov
xchg
add
insb
inc
jnp
movb
daa
mov
iret
jns
jbe
nop
pop
imul
jae
lea
or
push
inc
cs
jno
adc
dec
ja
xchg
addr16
sbb
aaa
nop
imul
sbb
enter
cli
jmp
mov
push
pop
cmpsb
leave
outsb
bound
hlt
sahf
lea
jbe
cwtl
mov
sbb
daa
aaa
sbb
or
out
int
pop
pusha
aaa
int3
mov
mov
int3
xor
js
loopne
icebp
mov
and
inc
cmp
sub
movsb
int
call
cmpsb
inc
aad
in
call
out
aas
daa
dec
xor
cmp
dec
jno
sub
xor
popa
dec
addr16
idivl
testl
and
sub
movsb
test
push
push
jns
inc
jae
in
popw
mov
js
and
pop
sti
xlat
push
add
loope
cmp
sub
xlat
xlat
cmp
insb
outsb
repz
pop
adc
stos
adc
fs
push
push
cld
add
and
fidivs
sub
std
shl
lea
or
xor
negb
sbb
adc
sub
mov
sub
jecxz
add
outsl
or
mov
sub
push
inc
lds
lea
ss
js
cmp
jbe
xchg
imul
sbb
sub
movsb
inc
iret
mov
ret
movl
push
outsl
dec
addl
rclb
test
lods
ret
mov
out
pop
es
pop
and
xor
dec
cmp
jl
or
fisubl
into
jb
loopne
mov
adc
mov
add
rclb
sbb
negb
xlat
ljmp
mov
sti
cld
outsb
sti
fwait
mov
or
rorb
push
nop
add
add
lea
inc
add
test
leave
fdivrs
xor
xor
adc
xor
aas
adc
out
pushf
insb
lcall
jmp
hlt
arpl
sbb
aaa
jnp
inc
mov
xor
mov
pushf
jb
jo,pn
stos
imul
jecxz
orb
fsubrl
cwtl
mov
cmpsl
mov
dec
sub
mov
jno
fsts
mov
push
mov
jno
lock
sub
mov
adc
shl
int3
xor
push
jnp
insl
faddl
dec
or
mov
mov
fstpt
leave
cmc
sbb
push
and
mov
xor
xchg
mov
adc
mov
loope
and
xor
lret
fists
aam
fstp
inc
clc
in
sub
bound
cmp
cli
call
xchg
ret
push
cltd
mov
push
add
dec
xchg
test
jbe
roll
xchg
lahf
sbb
sbbb
stos
hlt
mov
fldl
jno
add
jl
test
jo
orb
in
xor
daa
push
mov
test
pop
mov
push
stc
ja
sub
inc
lock
or
test
fwait
test
inc
jne
ss
pop
sub
or
das
sarb
dec
in
je
xchg
cmpsl
adc
push
sub
ljmp
jp
push
add
je
test
mov
mov
roll
pusha
pop
push
test
clc
xor
jmp
or
cmp
pop
fimuls
adc
aam
mov
mov
and
pop
lret
jnp
arpl
scas
sbb
add
adc
iret
cmp
cwtl
ret
mov
inc
iret
mov
out
pop
cwtl
mov
rol
incb
mov
xor
ret
imul
movsb
fidivrs
sbb
jp
out
xchg
xor
test
repnz
lea
hlt
jmp
push
xorb
jecxz
xchg
sbb
aaa
fisubrl
add
and
cmpsb
mov
inc
push
rol
ret
xor
rol
nop
scas
shlb
lahf
and
pop
pop
cmp
adc
movsb
pop
movsb
loope
fwait
jmp
in
iret
divl
or
hlt
daa
dec
ljmp
push
push
gs
xor
sbb
pop
and
scas
xchg
lahf
and
push
ja
pop
test
sbb
inc
add
lea
ret
orb
push
xor
sarb
cmp
mov
cltd
adc
xchg
je
jb
mov
add
or
lods
mov
push
add
int
ret
nop
pop
jae
mov
js
lea
int
je
add
dec
pop
sub
adc
sahf
xchg
incl
scas
mov
mov
push
jns
pushf
popf
mov
ss
jle
cmp
xor
sub
xor
sarl
xor
sbb
test
xor
in
fsub
cmp
test
cmp
iret
jae
data16
mov
out
cmc
cli
mov
and
daa
addr16
jno
or
daa
dec
inc
jno
gs
arpl
sub
pop
mov
das
imul
into
add
inc
mov
xchg
cmp
sub
xor
sub
jnp
data16
inc
sti
dec
mov
mov
nop
fisttpll
js
in
mov
inc
adc
aam
push
repz
adc
loopne
xor
call
scas
mov
xchg
adc
dec
pushf
pop
das
inc
jmp
pop
mov
inc
mov
mov
push
insb
jb
jns
dec
and
push
je
push
push
jecxz
jb
idiv
popa
std
adc
mov
push
mov
iret
xchg
add
mov
xor
ret
ret
push
lock
mov
add
adc
or
es
and
and
dec
push
in
push
cmpsl
inc
pop
fnstsw
cmp
sub
hlt
pop
insl
lret
lea
xchg
mov
aaa
test
ret
pop
xor
dec
shl
dec
cltd
sub
sub
ret
leave
inc
push
mov
imul
pop
cmpsl
ret
push
popa
fdiv
lods
and
mov
xchg
dec
push
je
cli
shld
add
add
cltd
sub
xchg
shll
add
dec
dec
sub
popf
test
push
or
addr16
pop
rcrl
pushf
shrb
pop
or
inc
xchg
jae
mov
sbb
push
xor
les
or
pop
fwait
xor
test
mov
jmp
inc
mov
punpcklbw
ja
es
lods
fs
inc
xchg
fwait
mov
cmp
jne
enter
dec
sub
xchg
in
bound
sbb
test
dec
lock
in
mov
cmpsl
rcrl
mov
das
ljmp
push
cli
jle
fcoms
pusha
imull
xchg
jne
mov
xchg
shrl
orl
repnz
in
div
mov
leave
fisubs
stos
push
popa
xor
insb
sbb
sub
lds
adcb
adc
stc
iret
fwait
adc
pop
xlat
aad
inc
fiaddl
fbstp
mov
inc
bound
or
dec
loope
inc
outsl
cmpsb
xor
mov
dec
xchg
adc
xchg
xchg
imul
mov
shlb
fs
ror
cmc
lcall
in
jbe
fildll
jge
rorl
cltd
leave
and
leave
hlt
je
lea
ror
xchg
jge
pop
mov
mov
and
ljmp
xchg
aad
xchg
pop
push
ljmp
in
mov
jb
add
mov
jno
daa
add
scas
dec
inc
mov
movsl
mov
into
sbbl
push
scas
lods
push
out
lea
mov
and
sub
mov
pop
jns
sbb
mov
loope
push
sub
or
scas
dec
or
xlat
insb
adc
popa
dec
fisttpl
inc
jle
sbb
xor
add
push
add
sub
pop
jg
das
dec
mov
inc
mov
pop
fdiv
fnsave
fisttpl
sahf
sub
test
dec
mov
jg
jp
mov
les
mov
lea
out
cli
and
clc
pop
cmp
in
dec
xchg
imull
sbb
and
addb
int3
xchg
popa
into
stc
shl
mov
es
outsl
pop
pop
push
loop
mov
sbb
out
dec
adc
arpl
mov
mov
adc
cli
mov
sbb
mov
int
xorl
gs
inc
mov
adc
lock
movsb
ss
and
xchg
std
scas
out
sbb
insb
iret
sti
xlat
push
sub
in
roll
sti
stc
jg
xor
mov
pop
xchg
mov
fwait
stos
inc
sub
fildll
repz
jmp
lea
or
mov
push
inc
adc
ds
pushf
ret
jmp
addb
mov
inc
inc
imulb
shl
aas
repz
jb
stc
add
mov
imul
cmp
sub
cwtl
cmp
adc
ret
sbbl
aad
aaa
xchg
mov
enter
les
lahf
or
mov
sub
lds
or
mov
dec
add
cmpsl
inc
push
mov
adc
adc
lret
cld
loopne
mov
ds
mov
dec
cwtl
mov
mov
adc
iret
inc
inc
aam
out
ret
pop
add
sub
jg
cwtl
ss
dec
je
popa
repz
fwait
mov
ljmp
push
dec
xor
lsl
dec
cltd
pusha
aam
test
lods
shlb
add
lahf
dec
push
popf
test
push
dec
xchg
or
shl
jae
pop
int
sbb
sti
bsr
cmpsl
mov
mov
push
add
xor
jle
mov
mov
push
pop
lret
ja
movsl
gs
lahf
or
inc
push
inc
pop
or
bsr
ljmp
lds
jbe
jbe
adc
es
in
inc
sub
out
mov
xchg
or
popl
jp
fcoms
mov
pop
popf
mov
mov
frstor
xchg
sbb
fbstp
ret
jl
dec
es
jmp
sahf
xor
fildll
and
adc
loop
mov
push
or
popf
stos
lds
and
stos
add
mov
scas
jecxz
in
push
and
adc
mov
ret
out
pop
push
xchg
pop
inc
in
sbb
scas
adc
gs
or
jl
out
push
lret
fisubl
fs
insb
imul
sbb
imul
aad
mov
les
dec
mov
hlt
jg
dec
arpl
mov
jge
dec
mov
aaa
pop
push
or
arpl
jl
test
or
inc
xor
mov
scas
mov
mov
sbb
cmp
pop
cld
push
cmp
cmpsb
int
adc
popf
jne
enter
daa
inc
call
out
lcall
jl
sub
dec
mov
cmpl
xor
cli
and
xchg
lahf
pop
sbb
sbb
dec
inc
sbb
push
inc
and
pop
scas
cmp
js
sbb
push
sahf
aad
cmp
sub
and
mov
add
cmp
or
push
fldln2
sbb
fwait
pop
add
adc
push
push
inc
dec
ret
sub
pop
xchg
lcall
push
fsubl
inc
jnp
int3
out
push
test
or
jg
xchg
mov
add
mov
cwtl
cmp
cmpsl
pop
mull
xlat
nop
lret
loop
imul
push
sbb
and
into
jo
cmpsb
cmc
test
stos
outsl
out
pop
ret
dec
test
fs
mov
pushw
or
lods
ja
pop
mov
popa
out
mov
cli
icebp
aaa
xchg
xor
mov
outsb
or
mov
jl
gs
dec
loopne
cmp
leave
call
xor
std
imul
into
xor
sarb
ror
sbb
cmpsl
xchg
cmpsl
fcoms
sub
push
mov
cmp
fdivrp
test
daa
cs
add
nop
xchg
mov
and
fldcw
scas
sbb
ljmp
out
insl
lea
lods
mov
mov
sbb
ja
and
cmc
pop
inc
int3
dec
pop
inc
aas
xchg
add
jb
lods
pushf
dec
lss
je
and
pop
testb
push
cwtl
not
mov
mov
inc
fisttps
lcall
cltd
jb
push
or
or
jle
mov
cwtl
push
not
loopne
outsb
es
lods
insl
xchg
add
cld
insl
cmpsl
inc
fcmovb
mov
ljmp
lret
imul
icebp
jno
and
cmpsb
adcl
and
pop
sub
test
xchg
ret
out
pop
push
adc
sar
xchg
pop
insl
xchg
xlat
dec
sub
mov
fsubrl
fsubs
dec
inc
gs
xchg
loope
push
sub
punpckldq
or
int
mov
xor
fiaddl
notb
mov
sbb
mov
pop
js
lret
in
lea
sahf
or
dec
xchg
ret
lcall
sbb
or
cmpsl
into
mov
jno
enter
pop
pop
test
gs
test
cli
inc
mov
mov
fwait
adc
shll
sbb
out
push
int3
mov
jns
rorl
lods
xchg
dec
lret
cld
sub
jnp
movsl
pop
xchg
jp
inc
test
inc
stos
pop
mov
daa
jge
jle
xlat
sbb
out
mov
fists
rclb
jecxz
mov
subl
push
popf
cmp
sbb
inc
ret
rsm
cmp
mov
lock
insb
repnz
jecxz
add
cmp
leave
in
cld
adc
clc
sbb
pop
cmp
ret
push
pop
inc
hlt
adc
pop
jae
in
rolb
pop
jg
jo
jbe
inc
rorb
ficompl
mov
sbb
inc
xor
mov
out
xchg
lds
mov
inc
mov
popf
pop
inc
leave
dec
sbb
lret
arpl
cmc
out
jge
mov
sub
pop
lret
mov
ja
pop
scas
xchg
push
jnp
xor
in
mov
and
cmpsl
push
movsb
stc
pop
jge
mov
cmpsb
push
das
clc
in
test
fs
daa
inc
sub
dec
jno
mov
jl
push
push
subl
enter
hlt
dec
jg
jge
in
push
lock
push
jl
movl
add
cwtl
fnstsw
inc
xchg
pop
testl
loope
sub
push
cmp
shrb
pop
mov
pop
push
mov
addr16
or
push
hlt
xor
xlat
push
push
or
int
stos
shrb
ret
sub
mov
push
jns
fmull
subl
outsl
arpl
test
mov
movsl
jg
xchg
outsl
mov
inc
xchg
jge
call
adc
cmp
bound
mul
sbb
lret
cltd
roll
stos
mov
adc
sub
into
push
mov
sub
fwait
mov
pop
loop
pop
jns
add
sub
mov
ljmp
pop
lret
out
fldt
xor
daa
or
mov
gs
pop
in
mov
add
jmp
lahf
add
lds
xchg
sbbl
iret
xchg
xlat
out
subb
test
mov
cmpsl
fiadds
sti
push
push
jl
clc
mov
sub
outsb
xor
pop
inc
dec
lods
fldenv
xor
rep
gs
add
lea
jae
call
sub
out
pop
jae
xchg
adc
xlat
pushf
sbb
js
mov
add
inc
idiv
jecxz
xor
jb
xchg
pop
dec
xchg
je
lea
sub
daa
test
mov
cwtl
mov
jg
notb
fimull
xchg
mov
fistl
jb
mov
mov
lock
popa
push
das
pop
neg
mov
dec
nop
jmp
shrl
push
jmp
adc
dec
testl
mov
shrl
lret
fisubrl
push
and
inc
push
lret
mov
rcrb
imull
mov
mov
popf
push
aam
outsl
fnstsw
cld
clc
ror
sbb
ljmp
daa
lods
cmc
push
mov
mov
mov
fidivs
nop
xadd
dec
add
inc
cltd
into
call
fbstp
or
xor
test
insl
add
insb
jno
sbb
outsb
pop
pop
and
stos
mov
rcrb
inc
stc
syscall
aad
jecxz
fstpl
xor
xor
and
mov
jl
mov
imul
or
ja
xor
test
dec
xor
out
inc
push
dec
lds
jne
fsqrt
mov
sub
out
xor
stc
bound
mov
jns
and
shll
jecxz
out
shlb
sub
add
movsb
jmp
mov
pop
xchg
mov
xchg
ss
in
popa
xor
enter
je
pop
xchg
out
daa
pop
jmp
xor
cmp
gs
lods
popf
bound
mov
xchg
outsb
stos
stos
insb
and
pop
and
insb
pop
jmp
scas
test
pop
aaa
adc
ja
iret
mov
int
pop
jl
insl
inc
sti
fstps
inc
imul
push
in
cmpl
sbb
sbb
pop
dec
imul
lds
outsl
movswl
pushf
push
repnz
add
hlt
adc
xor
jge
or
xchg
aaa
aaa
inc
or
xchg
inc
int3
push
mov
pop
sub
pop
ja
subl
scas
dec
cmc
shlb
inc
ret
stos
and
movsb
test
mov
jae
cmpsb
shll
cmp
hlt
xor
cmp
imull
lods
xor
or
dec
xchg
mov
into
movsl
iret
adc
movsl
in
lahf
pushf
pusha
jno
ret
ss
test
inc
popa
addb
fcmovnbe
xor
cmpsl
js
sti
add
push
mov
loope
inc
pop
sub
jp
cmp
sysenter
adc
repnz
lock
cmpb
sbb
xor
xor
imul
nop
rcl
jl
fs
lods
dec
or
rolb
stc
fdivr
rcr
test
rcrb
and
dec
test
mov
jae
mov
inc
frstor
fdivrs
cmp
sbb
out
lret
or
xchg
out
mov
mov
ss
xchg
xor
and
outsl
movsb
into
loop
mov
clc
xchg
adc
leave
and
adc
or
push
pop
loope
and
outsb
xor
mov
decb
into
gs
push
loopne
scas
pop
add
nop
adc
dec
mov
adc
sbb
push
xchg
inc
bound
testb
sbb
dec
shrb
rcll
aaa
xor
adc
sti
push
arpl
cs
push
aad
xor
nop
dec
mov
cmp
fsts
cmp
repz
pop
in
call
fs
stos
xchg
in
pop
es
roll
jmp
nop
jmp
pop
dec
pop
inc
ficompl
inc
adc
lret
scas
push
std
shlb
mov
fisttpl
push
ja
std
add
cmp
mov
add
fwait
jecxz
sbbl
xchg
into
mov
mov
in
int
das
cmp
lcall
pop
popa
and
xor
sarl
sub
xchg
out
cs
pop
jne
dec
repnz
fsubs
les
test
lret
dec
mov
fdivrl
pushf
pop
lods
dec
jno
sub
sub
xor
add
jne
fstpl
rolb
push
cld
push
ljmp
lods
int
mov
out
adc
push
loopne
xor
and
test
cltd
add
jl
mov
or
xchg
rclb
jmp
mov
sar
mov
sub
in
pop
add
clc
push
cmp
xchg
push
lds
ucomiss
xor
cmc
jecxz
fisttps
mov
jne
mov
sti
ret
add
sub
inc
jecxz
jg
mov
jecxz
dec
test
dec
jne
sti
mov
pushf
out
adc
sbb
fldenv
in
jne
xchg
xor
mov
sub
rcrl
mov
mov
mov
mov
add
movsl
out
in
mov
mov
xchg
mov
aad
shrl
pop
xchg
jmp
adcb
nop
fs
mov
add
mov
stos
push
xor
push
xchg
pushf
insb
enter
pop
hlt
out
scas
or
and
daa
push
adc
je
ret
sahf
pop
mov
faddl
cmp
inc
outsb
mov
cmp
mov
imul
xchg
jno
movsb
sbb
inc
jae
fisubrs
mov
lahf
jb
repnz
nop
mov
cmp
sub
pusha
pop
mov
jbe
fdivrl
inc
xchg
sbb
cmpsl
lret
sbb
xchg
jo
add
or
cmp
inc
lret
and
dec
movsb
and
dec
sub
shll
sbb
bswap
xlat
push
es
cmpsb
push
xchg
jb
push
loopne
enter
daa
inc
inc
in
pop
testl
dec
add
inc
movsl
sub
and
adc
xchg
push
xchg
adc
push
adc
loope
int
cmpsb
clc
jno
pop
mov
in
test
cmp
loope
jg
sub
in
cmp
inc
outsb
inc
mov
adc
int
cmp
lea
popa
sbb
fidivs
mov
fmuls
int
mov
out
sub
push
daa
dec
sbb
xchg
iret
or
pop
mov
test
sbb
sarb
xchg
sti
mov
adc
out
addr16
imul
fcom
pop
mull
lret
pop
shrl
mov
sbb
push
ss
fnstenv
xor
xchg
inc
push
loop
pop
fyl2xp1
outsl
nop
imul
xchg
or
sub
decb
and
pop
xor
dec
cmp
cmpsl
pushf
or
mov
gs
dec
and
pop
and
adc
pop
adc
inc
cltd
add
jns
xchg
or
rcrl
pop
and
xlat
fs
imulb
fdivs
test
sti
mov
mov
mov
xor
nop
and
fisttpll
add
inc
jb
sub
into
mov
les
jg
repz
push
out
inc
sbb
cmc
sub
pop
fldcw
test
movl
sub
call
jb
cld
dec
je
divl
and
dec
pop
mov
dec
ficomps
std
test
or
orb
hlt
pop
dec
xor
jp
repz
add
stos
daa
in
inc
dec
es
sbb
scas
mov
mov
mov
and
sbb
or
push
hlt
cmpsl
inc
jnp
mov
outsl
lock
lret
pop
lret
mov
pop
leave
and
ja
jnp
lret
in
sar
adc
aam
fldcw
push
pop
mov
clc
inc
push
cs
jnp
cmp
imul
insb
test
mov
or
lock
cmp
scas
test
adc
mov
add
cltd
dec
sub
xchg
in
out
stc
rcll
jae
jns
xor
mov
push
xchg
mov
adc
cmp
out
arpl
bound
shll
sbb
out
mov
cli
arpl
mov
cmp
int3
mov
mov
mov
fwait
lahf
and
dec
mov
mov
mov
and
bound
mov
dec
mov
in
xlat
lcall
stc
mov
or
xchg
addr16
jp
mov
das
mov
je
pop
jle
jp
in
inc
andb
iret
fbstp
stc
jmp
lret
sbbl
push
jmp
test
mov
fnstcw
add
mov
xchg
dec
sub
xor
cmpsb
inc
jnp
sub
push
sahf
pop
or
xchg
mov
iret
jbe
rol
sti
push
out
ljmp
jae
fildl
cmp
push
ljmp
xchg
enter
les
xchg
imul
fimuls
mov
movsb
and
mov
xchg
stc
jne
scas
lcall
sarb
inc
jge
pop
mov
aaa
push
adc
jmp
andb
pop
mov
push
push
and
fdivs
cmc
aad
scas
or
jne
data16
cmp
sbb
movsb
lcall
cmpsb
fxtract
addr16
cmp
into
enter
daa
inc
adc
cmp
xchg
aas
jl
adc
push
ds
lds
and
cwtl
push
lahf
ficoml
mov
fst
fwait
inc
pop
cmp
mov
jno
js
sub
mov
inc
push
inc
cmpsb
loope
fiadds
outsb
and
outsb
test
lods
adc
test
lret
scas
pop
mov
mov
pushf
rolb
and
xor
inc
test
jb
jle
stos
lea
mov
mov
fmull
sahf
sub
jns
test
test
jg
fdivrl
mov
or
mov
lea
and
out
fsubl
cmc
cmp
xchg
push
mull
push
insl
lret
int
lds
negl
mov
pusha
into
cld
mov
cmc
mov
sub
outsl
enter
push
xlat
stc
es
fs
or
data16
lods
adc
iret
out
gs
cli
mov
push
cmpb
mov
xchg
add
lcall
cmpsb
pop
inc
and
imul
mov
cmp
sbb
xchg
sub
xlat
mov
push
mov
call
into
and
and
sub
dec
es
inc
test
flds
push
cmp
ficompl
repnz
lea
loop
jo
ds
test
inc
push
adc
pushf
sbb
xor
jae
inc
call
and
lret
addl
push
mov
push
testb
cwtl
loop
shlb
movsl
mov
dec
and
dec
push
add
cwtl
mov
stc
fdiv
mov
jns
mov
je
jo
loopne
fst
sbb
mov
insl
sub
popa
pop
cmpsl
inc
push
loopne
sub
cwtl
icebp
inc
pushf
cld
testb
mov
popa
in
and
ljmp
sub
call
fstl
adc
cmp
xchg
sahf
xchg
sarl
fbld
jnp
lods
mov
bound
lret
xchg
mov
cmp
jle
pmaxub
mov
test
add
mov
inc
mov
xchg
jnp
test
mov
jno
cltd
addr16
test
pop
imul
push
incb
adc
xor
mov
push
mov
jge
sbb
jno
and
dec
pop
enter
sub
or
adc
into
and
jne
insl
or
ror
shlb
mov
test
xchg
rolb
out
icebp
pop
sub
movl
pop
mov
push
jne
mov
cli
and
inc
nop
in
push
sbb
jo
jno
xchg
addr16
jmp
xchg
sbb
push
scas
imul
push
inc
mov
hlt
and
insb
sahf
ret
mov
test
adcb
outsl
ror
aad
fcmovb
push
push
mov
sbb
mov
inc
je
push
or
movsb
jle
imul
jle
outsl
xchg
sbb
fdivp
push
test
push
xor
mov
jmp
push
push
hlt
test
arpl
in
jbe
xchg
dec
jge
pop
cmp
aaa
adc
or
addb
gs
adc
pop
mov
mov
inc
jo,pn
je
scas
jmp
das
sarl
shlb
movsb
and
mov
pop
leave
ret
inc
insl
enter
daa
inc
imul
xor
push
dec
add
bswap
xlat
movsl
in
cli
and
xor
cmp
ja
sbb
divps
in
mov
pop
add
loopne
repz
fnstenv
sub
outsb
or
fcoml
andl
xorb
pop
add
mov
xor
sbb
int
pop
xchg
sub
daa
faddl
sub
xchg
lcall
cs
sbb
jne
cltd
sahf
sti
mov
sub
and
mov
mov
icebp
and
pop
fdivrs
dec
xchg
push
mul
pop
xchg
lret
add
xchg
aaa
mov
mov
ror
fbstp
xor
iret
popa
outsl
inc
push
pop
loop
jbe
stc
fisttpll
sub
sbb
clc
xchg
arpl
clc
lods
cli
fidivl
inc
aas
or
and
sub
or
aaa
cmp
push
lods
or
addr16
mov
popf
gs
pop
jne
inc
dec
pop
popa
add
imul
cmp
xchg
imul
cmp
jb
loop
jnp
mov
scas
fsubrp
push
add
test
adc
test
inc
cwtl
and
fnstcw
lcall
mov
cmc
dec
dec
lea
add
sub
pop
aas
xchg
out
adc
test
pushf
les
pop
inc
jne
inc
outsl
mov
add
aas
lods
mov
push
je
jbe
jecxz
jae
test
cmp
divl
cwtl
popf
adc
mov
aad
mov
and
cmpsb
mov
mov
pop
js
cmp
and
std
mov
das
flds
cmpsb
mov
sub
shrl
ljmp
push
jecxz
jecxz
ret
and
jno
sbb
ja
lret
xchg
ja
mov
push
arpl
pop
or
mov
movsl
fwait
out
cltd
inc
lret
dec
pop
ret
mov
mov
adc
clc
mov
or
mov
jge
lods
push
jmp
mov
cmp
es
cli
in
push
jno
or
cmp
pop
cltd
stos
shll
add
inc
mov
ret
fwait
xchg
out
dec
stc
sub
push
pusha
jl
add
pop
iret
or
stos
insb
mov
adc
dec
aaa
xchg
pushl
xor
fildll
pusha
push
and
rcrb
roll
ja
js
dec
push
movsb
fadds
ret
and
daa
test
std
out
dec
push
inc
mov
fwait
out
mov
inc
bound
into
adc
in
cwtl
mov
out
pop
sub
ret
addr16
jp
call
cmc
mov
push
les
or
xchg
lock
cmp
mov
xorl
push
jno
xchg
popf
decb
mov
addb
ja
test
arpl
push
insb
or
test
sub
in
adc
sbb
xor
pop
ret
scas
pop
pop
jbe
inc
daa
ss
jae
push
je
ja
jae
jae
lret
call
cli
rcll
sbb
sub
dec
or
aad
mov
xor
outsl
fwait
sbb
cmp
bswap
popf
and
add
push
push
jbe
sbb
jge
aas
test
sti
xor
rolb
sbb
outsb
das
movb
inc
inc
int3
in
pop
jmp
sub
shlb
cld
scas
enter
mov
movsb
mov
or
lds
in
pop
dec
fcmove
loopne
add
cmp
das
xor
or
xlat
dec
dec
or
pop
movsl
jmp
ss
fistl
pmaxub
push
jae
fadds
jecxz
inc
mov
xchg
js
lods
sahf
pop
xor
push
iret
cwtl
loope
or
inc
sbb
outsb
outsb
pop
out
adc
pop
test
insb
mov
add
loope
inc
jne
add
mov
and
sbb
jbe
push
fcoml
and
icebp
xor
movsb
xor
sub
sahf
sahf
notb
mov
pop
adc
dec
jg
pop
hlt
mov
xchg
mov
mov
daa
jmp
adc
mov
cmp
or
mull
jne
shl
ss
mov
leave
into
ret
cmc
cs
scas
xor
sub
fsubl
stc
xchg
cmp
fs
or
data16
hlt
lods
loope
mov
aas
pop
lods
out
push
sbb
and
xor
and
daa
or
jp
gs
mov
pop
and
adc
or
sub
adc
lods
test
mov
std
rcrb
or
cli
xlat
and
sub
mov
jg
mov
dec
sub
out
aas
aad
nop
and
in
ds
stos
add
fnstenv
jecxz
sub
fpatan
js
or
clc
add
and
cmpsl
mov
xchg
and
rcrl
xchg
pop
out
lods
inc
divb
inc
jge
sbb
dec
and
dec
pop
jecxz
xor
adc
add
sahf
push
cwtl
pop
jbe
mov
rorb
addr16
pop
cmpl
mov
mov
cli
out
mov
leave
sbb
das
mov
jbe
mov
negb
sarl
inc
adc
or
cmpsl
aas
rclb
nop
inc
cld
dec
inc
pushf
lret
add
and
dec
cltd
inc
pop
sub
sub
js
js
nop
sbbl
inc
cwtl
jae
mov
icebp
enter
push
xchg
push
xchg
cmc
ljmp
call
mov
lahf
fnstcw
inc
stos
dec
push
dec
sub
setl
push
add
mov
mov
mov
mov
xchg
clc
cwtl
dec
pusha
mov
movsl
rorb
sbb
or
rcll
add
or
push
jo
xor
outsl
call
shrl
or
mov
lcall
aas
jmp
pop
out
cltd
ja
xchg
mov
inc
xor
inc
aas
andl
fwait
sub
fs
xor
divb
outsl
scas
mov
sub
out
jecxz
bound
jo
jns
push
loopne
js
stos
xchg
outsb
fucom
out
cmp
sub
mov
inc
mov
cmp
jle
mov
rcll
in
mov
in
pushaw
iret
push
push
fisttps
cmp
xchg
or
repnz
xchg
sub
addl
sahf
popf
and
test
rcl
stos
ljmp
insb
je
jl
sbb
scas
cwtl
cmpsb
push
adc
and
xchg
adc
lea
scas
and
jae
repz
inc
jp
push
or
and
jb
addr16
int
clc
sbb
xor
aaa
jae
fidivrs
inc
jge
cmp
aad
mov
ret
mov
insl
inc
leave
adc
jb
mov
jle
incl
jbe
sbb
jge
push
add
mov
mov
or
in
inc
dec
adc
jmp
xchg
rorb
int
int3
xor
push
in
jbe
cmpsl
xchg
mov
pop
jge
cmp
push
xchg
movsb
cmp
cmpsb
into
push
enter
daa
aas
lahf
test
jno
mov
sbb
or
push
mov
movsl
bnd
and
cld
cmp
mov
test
jge,pt
inc
or
add
repnz
dec
dec
in
js
dec
addr16
jno
subb
pushf
loope
shrl
cmp
jb
outsb
rcl
adc
cmp
lret
popa
fldl
jge
out
add
ficoms
xor
inc
roll
dec
repnz
xchg
jecxz
cmpsl
pop
daa
dec
lret
mov
fmull
inc
sub
adc
cmp
lds
inc
lds
xchg
rorl
jae
and
movsb
or
movsl
sbb
mov
mov
inc
lret
xchg
mov
inc
sbb
into
movsl
call
add
mov
imul
arpl
stc
dec
adc
adc
mov
lods
enter
cmp
insb
out
xchg
fdivrp
push
pusha
and
mov
out
or
andl
gs
pushf
ss
pop
lahf
into
pop
adc
pop
insb
imul
setno
mov
mov
xchg
sub
mov
sti
jno
jp
dec
push
mov
nop
nop
pushf
xor
inc
scas
mov
sbb
fldcw
shrl
repz
cmp
sti
sub
lea
jns
es
pop
movsl
inc
add
jns
popa
pushf
sbb
sahf
jmp
dec
and
push
or
sub
cwtl
inc
aas
jmp
fdivl
inc
sbb
push
sbb
je
jecxz
jecxz
xlat
into
notb
xchg
inc
lcall
adc
jo
jno
pop
push
movb
arpl
mov
movb
pop
popa
das
xchg
and
call
repnz
cmpl
cmp
loop
aam
fldl2e
out
cmpsl
filds
icebp
lret
and
je
push
out
inc
and
jecxz
cmp
inc
jno
rorb
lock
or
jnp
pushw
frstor
into
clc
xor
outsb
ljmp
bound
push
pop
out
add
xchg
mov
cs
daa
fwait
adc
add
sbb
addl
adc
dec
movl
xchg
mov
mov
repnz
ljmp
adc
xchg
add
cli
pushl
add
or
in
xor
clc
addr16
xchg
mov
xchg
bound
mov
xor
bound
cmp
aas
fwait
pop
mov
add
test
out
outsb
jne
bound
jl
in
stos
sbb
out
daa
sub
mov
inc
jo
leave
mov
lret
and
std
jle
push
out
pop
clc
pusha
push
popa
fildll
movsb
jae
loopne
xlat
jmp
idiv
sti
adcl
popf
dec
pop
pop
mov
add
xchg
stos
pop
jg
and
jae
scas
sti
adc
adc
sbb
repnz
jno
inc
push
pop
mov
jae
or
sub
lahf
shll
out
sub
xchg
and
sub
inc
lcall
movsb
sbb
shlb
push
repnz
push
leave
mov
hlt
xlat
jb
arpl
sti
dec
jbe
mov
jge
mov
sbb
outsb
aaa
push
add
push
fisttpll
add
js
int3
aam
sbb
insb
push
mov
sub
popa
pop
scas
xchg
pop
and
outsl
xlat
movsb
sub
push
mov
sub
in
aad
fmulp
int
daa
subb
pop
test
mov
dec
jl
ds
dec
sub
out
js
mov
stc
mov
xor
lahf
push
daa
xchg
push
mov
ret
test
or
aaa
mov
pop
jbe
cmp
jl
pop
mov
mov
loope
ret
sbb
cmp
call
ja
sub
imul
sub
dec
sbb
push
ret
outsb
ljmp
hlt
iret
sub
jbe
cmpsb
cmp
push
fidivrl
mov
inc
scas
jp
in
incb
or
sbb
add
mov
in
loop
or
and
imul
call
dec
cmpsb
fdivrs
fwait
negl
jne
lret
xor
and
push
sbb
push
into
mov
out
cmc
mov
xor
outsl
fdivrp
jge
negb
mov
add
push
adc
shrb
lds
lods
scas
mov
out
push
cli
mov
test
lea
jno
push
lds
gs
dec
loopne
iret
and
mov
lcall
in
sbb
xchg
fadds
mov
jg
lahf
xlat
lahf
cli
in
sub
lock
mov
xchg
or
lods
test
imul
inc
shll
fabs
cmp
repz
je
inc
stc
hlt
or
movsl
les
pop
pop
lods
mov
rol
sbbb
mov
xor
add
jne
mov
mov
mov
or
dec
dec
inc
je
xchg
test
xchg
outsl
mov
std
in
sbb
cwtl
into
cmc
cmpsb
mov
push
fwait
mov
sub
lret
fcmovnu
push
movsl
mov
sub
lock
cld
pushf
das
jbe
sub
push
xchg
dec
and
outsl
sbb
pop
add
cmpsl
mov
out
dec
aam
shlb
dec
inc
icebp
mov
push
inc
lret
jecxz
xor
jge
xchg
mov
pushw
pop
rcrb
in
subl
out
imul
xchg
xchg
push
sub
or
mov
stc
xchg
iret
jae
ljmp
inc
lods
dec
aad
mov
lods
rcll
add
cmp
pop
jo
add
mov
cltd
dec
pop
test
fstpl
pop
jbe
dec
mov
adc
in
pop
sbb
pusha
roll
push
xchg
stos
cmp
push
mov
ljmp
sbb
call
out
add
lds
xor
sarl
cmp
imul
pop
das
outsl
ja
push
test
jo
inc
insl
push
loope
mov
aad
cli
outsl
sub
mov
call
dec
bound
mov
dec
jno
mov
push
out
push
lret
daa
push
mov
mov
popf
movl
dec
aas
or
xor
xor
push
pop
push
fisttps
mov
mov
fucomp
fwait
sub
xchg
shl
andl
jl
mov
cltd
sahf
mov
aas
cmc
cmpsl
stos
ror
mov
insb
dec
jl
jnp
mov
scas
pop
jae
push
add
dec
adc
es
jle
ret
das
pop
std
or
jae
imul
sbbb
test
inc
push
gs
std
fidivl
xchg
xchg
sbb
and
adc
cld
out
inc
cmc
inc
rorb
pop
into
adc
leave
add
and
arpl
outsl
sarb
aas
data16
adc
cmovne
inc
inc
jbe
jae
xchg
int3
mov
push
mov
xor
mov
sar
inc
lcall
push
pop
daa
push
add
cmpsb
push
rcll
xor
cmp
mov
jl
sbb
dec
fwait
push
mov
movsl
add
inc
and
push
cmp
mov
test
aam
jp
daa
pop
ss
mov
pop
popf
add
js
inc
fcoms
out
outsl
push
gs
sub
shlb
and
adc
out
insb
dec
cmp
jle
jmp
inc
add
push
xor
ds
popa
inc
es
int
pop
and
push
dec
push
xor
cmp
movsl
jl
sub
out
sahf
xchg
test
pushf
andb
jg
mov
in
mov
add
repnz
push
cmp
lock
ficoml
lret
call
mov
mov
cld
cmc
andl
outsl
mov
adc
stc
mov
xor
test
lods
xchg
cmp
mov
das
out
fwait
jbe
xor
cmp
mov
scas
incb
mov
loopne
jnp
pop
lds
add
adc
or
add
pop
xchg
fwait
xor
mov
adc
mov
jmp
sti
iret
inc
pop
cs
push
aad
jo
nop
inc
mov
dec
add
std
inc
in
or
les
push
repz
movb
or
pop
jno
xlat
ds
enter
push
pushf
jo
sub
inc
mov
and
dec
lahf
aas
sub
jb
push
cltd
dec
and
jecxz
dec
pop
neg
int
std
xchg
sbb
cwtl
mov
test
out
fdivs
cmpl
jno
fisttpl
mov
push
out
aam
imul
or
push
and
pop
ficoms
shll
add
insl
mov
pop
dec
iret
aam
cmpsl
cmp
mov
sub
fwait
icebp
jns
aad
int
movsb
lret
push
sbbl
mov
test
rcl
icebp
sbb
jne
inc
aam
push
inc
out
stc
mov
in
xchg
mov
sar
test
jle
push
sub
ljmp
hlt
lods
mov
lret
enter
push
push
loop
fnstsw
add
jl
cltd
xchg
inc
test
mov
jns
cwtl
xchg
jecxz
dec
xchg
in
test
leave
or
fs
fcmovnbe
pop
stc
pop
pop
jnp
out
sub
mov
pop
mov
sahf
add
fstpt
xor
or
pop
xor
faddp
mov
int3
xchg
push
pop
sbb
push
ja
lcall
sbb
xchg
into
or
cmpsb
fwait
mov
cmpsl
jne
fisttps
mov
movsl
cmc
orb
sbb
inc
xchg
pop
cmp
mov
or
adc
scas
repz
addr16
iret
pop
jp
lods
adc
js
pop
mov
xchg
sub
in
pop
and
fildll
xchg
xchg
jmp
mov
lret
xor
inc
popf
lcall
push
jle
sub
mov
mov
das
scas
rol
push
dec
ret
mov
inc
iret
mov
cltd
ret
push
pop
xor
in
push
sarb
subl
or
xchg
sub
inc
in
fcomp
fs
repz
rorb
sbb
fcomps
add
loopne
and
vmovq
fildl
pop
mov
mov
mov
arpl
clc
jbe
enter
mov
sbb
pop
pop
aaa
into
or
dec
add
cmp
int3
stos
pop
ds
movsl
xlat
pushw
jbe
sbb
mov
mov
xchg
and
divb
movsb
fdivl
pusha
push
dec
push
daa
cmpsb
jmp
or
mov
dec
test
cmp
push
jno
sub
arpl
add
or
shlb
addr16
mov
pop
lock
pop
push
lahf
pop
mov
mov
mov
dec
and
pop
les
ja
inc
popf
loopne
cmp
loope
or
sub
cmc
push
cmp
and
outsb
cli
ljmp
lret
adcb
inc
sbb
xor
nop
and
push
and
int
jnp
sub
pop
movsb
stos
xchg
lcall
scas
fcoml
sub
xor
popa
jns
rorb
sbb
push
mov
adc
xchg
mov
dec
push
and
push
outsb
and
mov
push
fdiv
or
negl
push
aad
dec
aam
mov
xlat
fdivl
dec
mov
xor
sub
loop
ds
jo
pushf
fbstp
push
adc
cmp
lods
jge
mov
out
gs
cli
out
or
cmp
scas
cmp
xchg
or
sar
fistpll
sub
jecxz
insl
cmp
pop
cld
sahf
pop
adc
sbb
mov
pop
adc
jnp
add
dec
jbe
pop
fcoms
cmp
jp
xlat
sbb
hlt
js
dec
dec
pop
in
push
xlat
sti
jle
int3
jae,pn
rcl
imul
dec
pusha
push
incl
mov
dec
and
pop
test
movb
ret
call
mov
xchg
xchg
adc
add
mov
dec
inc
adc
pop
inc
jmp
fistl
mov
cli
dec
mov
jo
adc
jecxz
imul
push
popa
dec
std
cmp
popa
cwtl
inc
lds
mov
lret
cwtl
adc
ss
cmp
call
mov
sbb
les
fwait
das
xor
mov
mov
into
mov
lods
ror
insl
xchg
fcoml
cmpsl
cmp
pop
and
icebp
push
les
clc
mov
lret
shrl
and
mov
ret
test
les
insb
loope
aam
and
push
scas
sarl
xlat
sbb
cmc
xchg
dec
data16
ljmp
in
lods
and
sub
sub
xchg
pop
lods
nop
push
mov
out
add
cld
cltd
mov
insl
and
and
or
test
out
adc
lret
xchg
shll
in
jg
pop
stos
cmp
cld
inc
add
rclb
xchg
xchg
xor
insb
int
inc
push
mov
push
pushw
cmovs
add
mov
rorl
ja
sub
dec
adc
filds
or
add
call
dec
mov
mov
negb
bound
jecxz
dec
into
fsub
movsb
mov
or
insl
inc
sbb
icebp
dec
sbb
test
pop
mov
and
mov
jge
lds
cmp
sub
lahf
pusha
cmp
fisttps
cmp
add
push
aam
addl
push
inc
sahf
popf
shrl
adc
push
stos
mov
andl
and
adc
adc
scas
and
push
push
mov
adc
imull
sbbb
pop
imul
inc
pop
or
sbb
dec
inc
xchg
or
adc
int
arpl
scas
ficoml
ret
sbb
jno
push
imul
ss
xchg
not
fwait
mov
fisttpl
jbe
mov
jne
jbe
xchg
cmpl
in
mov
pop
push
or
rcrb
pop
aam
cmpsl
push
pop
test
xor
jb
scas
and
push
and
sub
sbb
push
push
sahf
in
cmpsb
outsb
dec
mov
mov
pop
enter
daa
cmp
push
cmp
dec
sub
cmp
jge
mov
dec
jns
push
loope,pt
jge
push
or
lahf
mov
in
push
cs
inc
test
push
sbb
mov
adc
inc
js
mov
push
clc
cld
loope
addr16
sub
jmp
outsb
pop
xor
adc
movsl
lret
inc
inc
addb
dec
xchg
add
push
call
push
daa
add
iret
sbb
pop
and
mov
filds
aas
sub
xchg
mov
int
mov
sbbb
jg
or
les
imul
and
inc
ss
sbb
mov
std
negl
lret
sub
out
cmp
sarl
xor
jle
adc
popf
xor
inc
add
loop
fwait
dec
stc
daa
ret
nop
notb
rclb
scas
movsl
stos
lods
fs
lds
sbb
xor
scas
mov
or
ficoml
loopne
adc
pop
sbb
iret
imul
in
xchg
and
insl
sbb
xor
js
jo
ret
mov
aad
and
sub
outsl
test
mov
pop
nop
cld
sbb
mov
jno
flds
addr16
movb
cltd
lea
pop
das
call
and
mov
jno
outsl
adc
and
mulb
push
push
pop
push
orl
jecxz
aas
addr16
inc
jb
leave
pop
dec
sub
and
xchg
ret
mulb
pushf
std
loope
sbbb
jb
mov
jb
subl
fldt
orl
pop
and
mov
jne
data16
sti
iret
roll
test
xor
dec
insl
jle
decl
push
arpl
sbb
icebp
daa
xchg
ds
and
pop
mov
xchg
sub
leave
pop
ret
cmp
cmpsb
sub
or
dec
xor
or
mov
mov
seta
loope
pop
add
mov
mov
mov
xchg
cs
emms
test
add
stos
pop
cltd
hlt
mov
btr
pop
movsb
xchg
sbb
dec
arpl
test
bound
mov
or
mov
adc
lahf
mov
add
jmp
cmpsb
ljmp
dec
adc
or
repz
adc
je
push
insb
enter
popa
pop
mov
push
ja
ficoml
inc
xor
or
push
pop
fwait
pop
lcall
cmc
enter
sbb
out
ljmp
jns
xchg
das
mov
adc
lock
movsb
negl
lcall
mov
popa
cmp
nop
pushf
jle
jae
in
addb
bound
sub
sub
adcb
and
mov
add
push
popf
call
ficoms
mov
stos
sub
movsb
and
jmp
insb
mov
std
scas
xchg
add
adc
cs
outsb
cmp
xchg
xchg
xor
imul
inc
mov
mov
mov
push
inc
loop
jb
lret
xchg
andb
sbb
shr
loop
stos
fisubs
sbb
fdivrl
dec
mov
cs
ror
addr16
add
dec
arpl
xlat
lahf
jge
inc
add
aaa
dec
sub
or
test
inc
int3
orb
push
cmp
cmp
jo
clc
shrl
decb
cmp
push
mov
push
in
mov
cmpsb
icebp
dec
pop
in
jno
int3
enter
daa
cmp
jno
into
mov
dec
call
cmpsl
sub
popf
test
lahf
sar
jmp
add
add
xor
ds
rorl
js
or
mov
loope
out
sub
fdiv
cmp
imul
adcb
cmpb
inc
sbb
add
xor
shll
xchg
xchg
adc
dec
pushf
movb
sub
push
aam
push
ss
shrb
inc
in
jo
dec
test
jns
cmpb
jg
dec
cld
mov
push
repnz
adc
mov
xlat
aas
and
movsl
ss
imul
imul
negl
and
lret
adc
mov
je
das
xchg
pop
into
adc
push
cmc
fadds
enter
add
ja
loop
sub
aaa
fs
cmp
adc
mov
data16
repnz
xor
mov
xor
pushf
and
or
sub
lods
leave
xor
aaa
push
scas
pop
cmp
push
imul
add
lds
xchg
in
insl
sbb
imul
sub
leave
mov
inc
pop
pop
sti
fcompl
gs
cmpsb
nop
xlat
insl
pop
dec
push
faddl
sbb
pop
jb
outsb
sahf
mov
or
sbb
dec
mov
addr16
and
sbb
sub
rcrb
cmp
xor
inc
pop
dec
add
push
roll
jb
in
hlt
dec
mov
mov
jecxz
ja
mulb
aas
cwtl
mov
test
sbb
xlat
addl
cmp
fistpl
lods
jns
stos
xchg
f2xm1
jp
loope
repnz
mov
sub
fsubs
jge
rcll
lcall
or
cmpsl
cmp
arpl
decb
ss
lahf
push
or
xchg
fwait
sub
cltd
jge
mov
loop
in
shrb
ja
pop
imul
push
xor
or
clc
pop
jl
lret
push
mov
adc
lods
sti
cli
repnz
icebp
shll
test
push
outsb
add
inc
add
inc
cltd
sub
pusha
test
fnstenv
sub
movsl
dec
lret
test
cmc
pop
xchg
jnp
sbb
fnsave
popa
pop
push
pop
jl
dec
stos
cmc
add
inc
and
mov
fs
int
jae
dec
in
popf
or
mov
xchg
add
mov
dec
mov
ja
push
dec
notb
inc
leave
out
or
lock
fwait
inc
mov
xlat
jne
shll
mov
push
std
out
leave
mov
bound
mov
xchg
dec
add
jae
adc
lahf
push
and
incl
outsl
and
push
popa
xchg
mov
pop
mov
jle
fmull
in
test
sti
repnz
ja
aaa
xchg
in
pop
pushf
sbbl
push
out
test
mov
cmp
stos
pushf
pmaxub
add
subl
jnp
sub
push
sbb
push
add
int
cmp
cmpsb
dec
dec
pop
fnstcw
inc
je
dec
jae
mov
inc
mov
push
or
popa
mov
inc
xchg
xlat
dec
sub
icebp
fildll
ljmp
arpl
shrb
mov
adc
pop
hlt
dec
adc
arpl
sbb
mov
pop
std
sbb
or
aaa
or
and
iret
imul
pop
push
xlat
xor
sub
sbb
xchg
inc
scas
cmp
mov
cli
cmpsb
je
pop
in
pop
jge
enter
daa
cmp
leave
jno
popf
jl
rclb
ds
dec
add
cmp
in
push
aam
xor
add
xchg
repz
pop
cmp
insl
js
and
jmp
mov
pop
pop
pop
loope
mov
sub
mov
cmp
add
adc
pop
js
popl
cmc
out
sbb
xlat
cmpsl
xor
inc
mov
int
jae
sub
mov
pop
and
rclb
mov
bound
in
mov
sahf
adc
inc
test
test
sbb
pop
xor
mov
sbb
ss
cmp
cmp
es
stc
lret
leave
rcll
mov
pusha
sbb
dec
into
mull
cmc
lahf
mov
outsl
cmp
sub
aad
mov
cmpb
data16
mov
sbb
lods
out
fistl
mov
pop
xor
scas
stos
cmp
das
add
xchg
xor
lods
xchg
gs
loopne
negb
adc
cmc
or
insl
mov
leave
jle
cmpsl
call
rcrl
jo
xlat
ficoml
add
stos
add
mov
xor
inc
mov
popa
dec
jge
outsb
inc
xor
fxtract
rol
jns
loop
and
inc
mul
dec
call
and
lret
imul
sbb
out
jmp
adc
pop
pop
shlb
inc
cmpsl
adc
inc
cmp
cmpsb
aas
movsl
push
jp
stos
inc
in
dec
sbb
icebp
je
or
loopne
repz
shlb
das
pop
or
mov
sbb
or
cmp
lcall
fcmovne
mov
mov
cmc
fwait
mov
in
das
lock
mov
rcr
adc
jecxz
in
ret
push
shl
jno
es
insl
dec
aad
dec
mov
insl
stos
mov
aad
pusha
cld
jns
or
mov
xor
pop
add
sub
fcmovbe
in
test
sub
push
clc
push
sbb
dec
pop
icebp
clc
xchg
es
xchg
or
popf
ljmp
lods
xchg
push
mov
push
jmp
cs
dec
lock
xor
test
cltd
bound
out
pop
adc
mov
pop
mov
dec
xor
in
test
xlat
push
xchg
fstpl
in
add
pop
daa
stos
in
rcrl
in
addl
insb
lret
mov
in
imul
rorl
adc
mov
add
stos
ja
mov
jmp
mov
loop
jne
push
dec
imul
adc
test
add
pop
leave
movsl
jns
in
in
mov
aaa
out
or
sub
lcall
jp
mov
mov
test
mov
lahf
lret
cmp
pusha
or
int3
fucomip
je
xchg
rolb
jmp
mov
mov
push
mov
mov
mov
jp
xor
and
les
jnp
pop
scas
dec
mov
sub
and
sbb
mov
xor
inc
jg
std
jae
cmp
inc
fdivs
or
or
jp
xor
xchg
cs
cmp
imul
lods
fisubrs
mov
inc
mov
mov
aam
or
hlt
cltd
xchg
movsl
arpl
jae
or
cmp
rol
scas
aaa
lret
or
movl
pop
popa
cwtl
mov
add
sub
mov
scas
shr
and
push
cmp
into
cwtl
movsb
or
outsl
cmpsb
mull
mov
mov
lcall
roll
jl
rcr
dec
jo
ds
out
movsl
and
imul
or
lahf
adc
push
cmpsl
in
add
lret
rcrb
inc
repnz
sub
pop
lret
inc
pop
pusha
aad
js
into
lret
pop
sub
push
sbb
sub
adc
out
les
adc
ss
push
fs
sbb
jbe
add
rolb
popf
add
int
cmp
sub
push
pop
mov
add
insl
fdivr
fldenv
mov
jmp
in
cli
xor
mov
xlat
mov
mov
mov
and
cmp
loope
aad
cltd
xchg
cmp
bound
shrl
mov
lea
fisubl
adc
xor
adc
sbb
in
push
loop
or
sahf
data16
sub
pop
mov
cli
mov
in
cmp
fs
add
xor
repnz
inc
adcb
flds
mov
adc
dec
adc
mov
ss
fcoms
lret
cmp
aas
test
sub
outsb
push
mov
push
jle
sti
cmp
fsubrs
out
inc
aad
or
lea
dec
fdivl
inc
inc
push
fcompp
sub
mov
test
xor
lock
xchg
adc
cmp
ds
cmp
pop
mov
test
fcmovb
inc
pushf
leave
imul
jmp
inc
cs
inc
push
pusha
mov
inc
popf
jb
into
ja
xchg
ljmp
out
xchg
imulb
ss
std
jnp
cwtl
xor
test
sahf
xorl
xchg
fstp
clc
lods
addr16
xor
cmp
out
das
mov
in
in
cli
gs
dec
jl
shll
out
dec
es
lock
mov
cmp
sub
icebp
lods
out
cld
movsb
bound
mov
cmpsl
dec
shll
orl
dec
cmpl
ret
mov
fcmovu
jae
popa
clc
iret
sbb
xchg
dec
jnp
ljmp
inc
lods
roll
aam
mov
lds
and
loopne
xchg
add
add
jo
cltd
jecxz
test
mov
xchg
rol
dec
cwtl
xchg
out
jge
jae
fisttps
rorl
add
rolb
jg
mov
dec
add
cmp
js
or
cld
or
pop
aaa
mov
sbb
mov
imul
stc
add
faddl
push
inc
idivl
or
xor
dec
dec
jg
jne
adc
fsubr
xchg
push
bound
mov
sarb
xor
jns
xor
xchg
rorl
jp
hlt
scas
mov
int
mov
cmp
jle
mov
cmpsl
mulb
xchg
movsl
add
xchg
orl
push
dec
fldenv
pop
mov
jns
mov
push
xor
inc
jnp
add
push
stos
push
ficoms
sti
adc
iret
mov
ffree
int3
dec
les
mov
jae
xor
inc
xchg
out
or
cld
sub
inc
pop
mov
xchg
test
sub
xor
ficoms
jnp
jno
adc
mov
push
leave
int3
int3
xor
in
je
ja
push
inc
jge
dec
xor
mov
aaa
mov
inc
add
xchg
sbb
inc
or
pop
nop
repnz
push
in
sysexit
pushf
jmp
imull
mov
ljmp
adc
fcmovb
pop
cmpsb
jp
pop
in
es
enter
daa
aaa
pop
sti
cmp
shll
cwtl
push
push
jl
cmpsl
cmp
adc
insl
jne
movsl
sub
dec
and
cwtl
lahf
das
lds
test
xchg
push
incb
sbbb
sbb
loopne
xchg
js
or
pop
imul
js
push
cmp
sub
insl
in
sahf
xchg
cli
outsb
jmp
push
in
adc
pop
insb
and
xor
sahf
repz
push
xor
fmul
lret
loop
sub
inc
les
cmp
dec
sub
sahf
pop
fsubs
jae
test
pop
adc
mov
mov
mov
popf
mov
fwait
dec
or
mov
js
fcomps
adc
push
jg
roll
mov
inc
into
mov
in
xor
jp
loop
sbb
stc
add
into
fs
cmp
push
js
mov
lods
add
push
mov
outsl
lret
adc
cli
out
cltd
test
cmp
insl
lcall
dec
cmp
dec
and
cmp
adc
sti
lret
adc
mov
ficoml
icebp
test
cmp
pushf
xlat
pop
push
sub
mov
mov
int3
and
jmp
add
into
mov
es
cmp
outsb
inc
push
or
fldenv
lods
les
xchg
adc
dec
call
push
jbe
pop
cmp
inc
and
pop
jne
mov
push
mov
pop
aad
jecxz
pop
jb
mov
dec
or
xor
incb
push
insl
or
xchg
cwtl
jmp
divb
repnz
gs
aaa
jnp
imul
mov
sti
lock
das
aaa
push
mov
push
add
roll
mov
xchg
jb
cmpsl
ss
mov
orl
iret
mov
add
scas
lds
pop
aas
dec
enter
fisubrs
aas
subl
jnp
lahf
ret
dec
jmp
pop
fstpl
mov
push
ljmp
lods
cmp
add
jne
add
sbb
xchg
shlb
push
incl
or
repz
add
sbb
jb
cmp
xor
rorb
sub
test
push
or
sbb
inc
shll
mov
stos
ret
push
sub
incl
push
in
cmp
pop
xchg
xor
sub
push
jne
xor
jb
mov
pop
test
pop
jp
test
dec
iret
out
inc
mov
or
mov
dec
das
sub
cmp
xchg
das
bound
fdivrs
rcrl
pop
push
arpl
cld
jnp
sub
nop
out
cltd
addr16
shll
mov
cmp
mov
shl
in
jl
pusha
inc
movsl
cmp
test
jmp
dec
lret
faddl
paddb
popf
test
or
xor
and
mov
fnstcw
data16
repnz
adc
test
jae
fists
loope
xchg
adc
jae
insb
mov
push
and
pop
into
inc
fidivrs
jo
xchg
pop
jmp
fcoml
nop
imul
mov
sarb
mov
jp
repnz
inc
dec
jo
das
xchg
inc
arpl
mov
push
dec
sbb
adc
dec
xchg
mov
in
mov
add
movsl
pop
mov
testb
cmp
scas
jle
jge
dec
inc
cmp
cmp
sub
jno
or
movsl
adc
cmp
cmc
mov
jl
dec
dec
dec
movsb
jno
ds
testl
lahf
dec
adc
dec
mov
icebp
push
popa
sub
and
push
pop
scas
lcall
pop
test
inc
push
mov
loope
dec
jbe
jb
sub
dec
cs
dec
xlat
push
shr
xchg
adc
test
ja
insb
pop
push
clc
shlb
xor
push
and
int
jo
sub
jb
pop
sahf
push
popf
lcall
inc
fcoml
cld
sub
cwtl
loope
cli
or
and
and
pop
ret
mov
outsl
fs
fnstsw
stos
xor
cmp
push
jnp
notl
adc
dec
cmp
arpl
ss
into
mov
dec
mov
outsl
mov
stc
mov
aaa
fsts
pop
jmp
addw
lret
push
jb
adc
jmp
xor
stos
cmp
dec
sub
loopne
pop
cmp
ljmp
fs
pop
mov
adc
inc
imul
and
push
jmp
xchg
lock
cmp
mov
xchg
sbb
sub
cmp
in
in
out
sti
cwtl
mov
out
aad
rorl
lcall
fstps
ret
mov
xchg
push
cmc
bound
xor
inc
popf
call
mov
pushf
sbb
dec
dec
pop
inc
outsl
roll
mov
mov
jb
addl
je
or
jecxz
sarb
pop
and
das
cwtl
cmpsb
adc
mov
clc
lds
pop
xor
dec
and
sbb
push
jmp
cli
mov
inc
push
lock
inc
das
outsb
in
dec
mov
or
or
lret
xchg
rcl
mov
es
rclb
cmpsl
xor
mov
icebp
pop
shll
lret
pop
int3
and
and
ret
movsl
mov
push
std
inc
pop
pop
pop
push
shlb
sub
aam
xor
push
inc
loop
ffree
cwtl
push
xchg
popf
ret
ljmp
in
lods
cmpsl
pusha
mov
and
xor
xchg
pop
out
push
fisubrl
scas
rsqrtps
or
test
push
mov
aam
xchg
mov
data16
xchg
test
repz
fnsave
pop
sarl
dec
xchg
stos
mov
sub
into
push
roll
jb
ret
daa
jo
cltd
mov
or
xchg
xor
fdivrl
mov
in
js
out
xchg
cmc
pop
xor
add
daa
inc
and
shlb
adc
xorb
addr16
add
fcomps
add
mov
push
xchg
test
hlt
sub
mov
xlat
jp
xchg
outsb
mov
enter
dec
into
mov
hlt
pop
jle
or
frstor
filds
rcll
push
mov
xchg
sbb
sbbl
push
popf
stos
cmp
je
cltd
push
aaa
daa
popa
stos
push
xchg
es
mov
push
scas
jbe
cwtl
push
cmp
jge
dec
ror
repnz
pop
mov
popa
inc
mov
jmp
nop
or
repnz
hlt
inc
pop
jae
fimull
xor
sbb
add
ficoms
xor
rcrb
cmp
int
sbb
mov
adc
arpl
jmp
add
add
push
aaa
pop
sti
lock
mov
xchg
int3
pop
xchg
pop
out
repnz
stos
adc
enter
jl
pop
or
and
cs
cmp
movsb
test
into
jne
adcb
in
hlt
js
enter
daa
xor
into
je
inc
bound
nop
lret
int
adc
adc
movsl
cmp
ss
insl
pop
mov
and
mov
xor
inc
inc
lahf
add
mov
push
js
inc
ret
pop
out
jge
and
jle
sub
fwait
call
outsb
scas
aam
adc
mov
adc
sbb
push
dec
xor
in
push
cmp
sub
cltd
loope
sub
in
or
push
jmp
add
test
dec
xchg
test
xchg
sbb
cltd
scas
pop
mov
mov
mov
push
mov
jo
and
or
xor
adc
lret
and
jo
or
repnz
dec
sbb
lret
sbbl
cmc
mov
pop
outsl
mov
xchg
and
cmp
mov
lods
xchg
lods
mov
push
lods
into
mov
adc
cli
push
lock
sbb
cltd
cmp
sti
into
or
xchg
pop
rcll
pop
xchg
lcall
mov
adc
sbb
add
push
xchg
mov
push
sbb
xchg
and
sbb
and
in
push
in
sti
inc
cs
aad
dec
gs
push
xor
stc
insl
lahf
inc
jl
mov
les
sub
sbb
movsb
call
sbb
pop
pop
mov
lods
push
pushf
enter
add
arpl
loopne
inc
ret
cltd
icebp
inc
cmpsb
xchg
pop
aas
and
imull
jnp
and
fcomip
repz
idiv
lret
xor
mov
sahf
ss
pop
push
xor
leave
aad
test
or
lea
lock
xchg
das
dec
movsl
mov
mov
out
lock
inc
mov
dec
cmpsl
pushf
aam
xor
mov
sarl
cld
and
push
insb
mov
mov
push
or
jge
or
mov
lret
sub
test
data16
popf
push
add
pusha
fucomp
jne
clc
subb
push
jne
ljmp
or
aas
pop
out
loopne
sub
push
mov
jp
mov
xor
mov
int3
adc
mov
mov
icebp
test
xchg
fwait
xlat
dec
int
sub
pop
or
sbb
test
stos
mov
xor
inc
mov
in
call
ljmp
push
cltd
cmp
in
add
lock
leave
ja
int
dec
mov
iret
inc
mov
pop
fwait
xor
stc
dec
cmc
fs
mov
mov
jae
imul
dec
dec
push
in
scas
mov
out
mov
leave
or
lahf
xchg
mulb
mov
xchg
arpl
ss
in
push
outsl
pusha
js
dec
fbld
xchg
push
jne
jmp
in
jo
sub
push
xchg
popf
negl
scas
loop
push
jbe
or
ja
jb
or
jge
scas
fnstcw
mov
mov
fadd
add
insb
test
mov
lds
or
inc
and
push
fsubrl
aam
cld
xchg
fcoms
push
push
sahf
imul
cmp
sbb
shlb
cmc
repnz
add
xor
mov
arpl
int3
jge
push
mov
aaa
jecxz
or
jb
add
fsubp
int3
add
pop
sbb
sub
jo
lcall
jo
pop
cmp
frstor
movsb
xor
mov
cmp
add
mov
enter
daa
xor
pop
cmp
add
sbb
sbb
addb
movsl
aas
xchg
out
aas
pushl
mov
push
repz
inc
test
test
push
gs
pop
cld
mov
pusha
pop
es
popf
push
and
pushf
aad
sub
jno
cmp
fcoms
mov
repnz
ficoml
add
xor
xor
mov
push
cmp
add
add
sub
push
lcall
outsb
fsubrl
xlat
push
test
lods
int3
sbbb
sarb
add
mov
fsubs
scas
lcall
enter
xchg
xchg
cmp
int
fdiv
xchg
mov
mov
pop
shl
fnstsw
inc
sbb
arpl
stos
aaa
cmc
orb
cmpsb
ss
xchg
mov
nop
stc
sub
movsl
adc
popf
and
inc
cmp
mov
push
mov
frstor
inc
cs
xchg
mov
or
push
xchg
loopne
adc
pop
hlt
iret
adc
mov
push
loop
dec
fisubrl
xchg
jbe
call
cmp
inc
push
xlat
adc
sub
in
ret
sti
idivb
cs
xchg
aad
daa
stos
nop
stc
cld
pusha
dec
pop
lret
pop
xor
pop
dec
dec
les
imul
leave
addr16
cli
pop
into
call
fwait
pop
mov
adc
xchg
sbbl
mov
mov
inc
dec
cmc
mov
je
aas
rclb
jb
add
dec
insl
js
je
scas
mov
divb
dec
fdivr
jb
inc
cwtl
sbb
sbb
lret
mov
orl
xor
xchg
mov
jbe
lock
xor
sub
xchg
mov
jbe
test
push
shrl
test
lds
xchg
dec
mov
cmp
mov
or
cld
push
push
ss
cmp
ja
ret
xchg
addr16
sub
rcrb
sub
rcl
fsubrl
push
ret
cmc
jbe
push
xor
getsec
jecxz
mov
sar
ljmp
in
lods
jge
and
inc
cli
fcoms
nop
mov
movups
add
push
test
jns
xchg
push
aam
imul
dec
sbb
push
shrl
pop
pop
jle
or
fistps
adc
mov
test
lcall
push
in
imul
mov
daa
sbb
cmp
or
ja
sbb
push
pop
dec
or
mov
cli
dec
fsubr
divl
dec
es
push
imul
add
jne
mov
jns
test
cld
std
add
test
fisubrs
cmpl
clc
mov
push
xor
stos
cmp
push
aas
in
rcll
cmpl
xchg
icebp
add
jmp
scas
sbbb
mov
push
pop
sbb
popf
stc
dec
cmpl
fwait
mov
mov
fisubrs
adc
dec
das
fildll
cmp
addr16
mov
sbb
mov
jae
mov
inc
sahf
cmpsb
mov
call
push
add
loope
add
jg
imul
aam
lds
or
adc
jae
iret
leave
test
stos
hlt
adc
arpl
push
sub
into
out
sbb
dec
aaa
test
or
fisttps
int3
in
dec
jg
dec
add
xor
dec
push
sub
add
sarb
cmc
movsb
mov
out
cmpsb
xchg
push
in
ret
enter
daa
xor
mov
mov
adc
int
icebp
mov
ds
xor
mov
fisubrl
adcl
add
lahf
cmc
pushf
push
ret
inc
mov
into
mov
js
int
pop
gs
xchg
push
psraw
sbb
jne
jae
cmp
sarb
aas
rol
cmpb
incb
pop
xor
test
je
aas
sub
int
jo
sub
movsb
jne
cmp
sub
xchg
mov
pop
sub
xchg
pop
test
in
jg
pop
inc
mov
pop
sbb
ret
xchg
pop
and
subb
lods
jb
nop
fistpll
notl
lret
loopne
sahf
rolb
js
sahf
into
dec
das
cmc
dec
filds
outsl
jae
or
inc
fmuls
stc
fistps
lds
push
adc
fisubl
inc
inc
lods
pushf
add
out
mov
cli
mov
or
push
or
add
loopne
test
pop
adc
mov
fcmovnu
fisubrs
xchg
adc
inc
fadds
add
xchg
cmp
daa
sbb
or
lret
xlat
push
dec
sbb
or
mov
sub
xchg
shrb
out
rcrb
aad
push
rorl
addb
xor
ds
les
lea
pop
popa
cmc
lea
fucomip
movsl
pop
sbb
pop
or
add
push
fs
jmp
data16
mov
cmpsl
inc
fsubrl
aas
pop
test
dec
dec
in
ss
incb
idivb
mov
cwtl
xlat
or
mov
js
mov
sahf
dec
dec
jecxz
repnz
add
mov
mov
lock
fsubrs
or
leave
mov
sub
cmp
sarl
sahf
rep
mov
outsb
dec
popf
push
mov
xor
cli
icebp
fistpll
add
test
es
lret
mov
mov
adc
aam
es
ret
test
cmpsb
fnsave
fsub
clc
testb
ljmp
add
add
out
xchg
fmull
push
imul
add
orb
sahf
xor
xchg
stos
dec
fwait
addb
in
sbb
sbb
into
mov
pop
sub
xchg
push
mov
aad
push
mov
add
fs
jmp
test
xor
sbb
seta
push
leave
mov
pop
mov
call
aas
inc
ljmp
fwait
adc
mov
seta
loop
dec
bound
pop
jmp
xchg
jno
scas
out
sar
sub
jl
push
addr16
jnp
jp
shlb
mov
fs
jle
insb
lods
in
mov
jle
mov
lcall
adc
orl
push
sbb
sbbl
hlt
sbb
stos
rcll
jecxz
lock
movsb
add
push
scas
adc
inc
roll
ret
dec
pop
pop
jecxz
inc
rcl
jae
sti
filds
clc
xor
arpl
fisubl
call
sbb
jge
imul
fidivrs
mov
shr
or
repnz
cs
hlt
pop
xchg
ret
jbe
xor
sbb
inc
fmull
mov
outsl
jmp
fdivs
pop
jnp
mov
push
sub
jo
sbb
and
cmp
movsb
dec
push
mov
cmpsb
or
inc
enter
daa
xor
rorl
jl
cmp
ds
fsubs
jne
inc
lahf
lret
push
cltd
mov
test
inc
dec
inc
xor
jmp
push
pop
dec
add
js
out
sub
movsb
push
push
push
pop
stc
loope
out
xchg
sub
cwtl
ret
xor
fadds
rcrb
fmuls
rcrb
pop
add
loope
xor
cmp
inc
xlat
add
into
int3
sub
mov
lcall
push
out
addr16
popf
sub
lea
push
fiadds
push
stos
jg,pn
mov
mov
adc
mov
and
and
ja
ss
outsb
cmp
inc
push
and
adc
lret
dec
shll
in
cmpsl
sbb
cmc
adc
xor
outsl
push
es
fimull
sbb
xchg
inc
outsl
fs
jno
adc
mov
inc
mov
mov
out
movsl
pop
cli
in
aaa
jae
mov
pop
sub
pushf
or
les
push
loopne
push
pop
xor
imul
mov
nop
push
lds
mov
popa
cmp
pusha
xlat
xchg
or
sti
mov
cwtl
rolb
push
test
cmp
push
cltd
hlt
fnstenv
lahf
es
lret
and
enter
and
and
cltd
fidivrl
mov
xlat
inc
pushf
leave
lret
gs
mov
push
inc
pop
fdivs
aas
incb
jb
push
xor
je
mov
mov
mov
jmp
cwtl
xchg
adcb
and
out
mov
jae
fistl
xchg
xchg
mov
mov
lock
enter
out
mov
in
jmp
rorl
popf
es
clc
insb
insl
popf
inc
outsl
dec
cwtl
mov
cmpsl
xor
mov
mov
sub
lret
pop
xchg
lods
dec
enter
arpl
fidivl
rolb
jnp
sub
sub
aam
jne
ret
adc
cli
push
dec
push
mov
clc
xor
call
mov
lahf
popa
lods
mov
mov
or
insl
push
inc
mov
fiaddl
inc
test
das
mov
inc
jp
dec
add
jnp
fldenv
cli
sbb
push
or
sbb
pop
aam
stos
insl
clc
sbb
pop
sti
add
fidivs
xor
mov
mov
mov
lods
push
addr16
and
ja
cmp
dec
mov
inc
andl
jle
sahf
fisubrs
mov
cmp
rorl
and
fstpt
flds
xchg
mov
out
or
imull
or
lods
addr16
das
inc
jp
dec
int3
mov
jo
mov
shll
jle
jne
in
add
dec
cmp
ffreep
jae
xchg
xchg
mov
and
mov
inc
jmp
mov
xor
ljmp
cmpsb
fldt
push
jnp
fisubs
push
push
xchg
sbb
inc
lahf
ret
fcompl
adc
inc
int3
push
mov
xor
ds
fisubrs
inc
pop
insl
pusha
ficoml
jle
sbb
dec
xlat
imul
fisubs
jo
lds
and
mov
sbb
leave
xchg
gs
hlt
cmpsb
push
mov
movsl
loopne
fiadds
jbe
lock
or
outsb
jl
ret
imul
xor
add
jg
sahf
and
pop
fidivrl
inc
loop
movsb
aad
in
mov
mov
mov
inc
enter
daa
xor
pop
cmp
or
sub
mov
ds
into
jmp
and
dec
das
lahf
jmp
inc
imull
pop
cmp
inc
aad
jno
push
js
movsl
mov
jecxz
shrb
push
inc
loope
mov
sub
jmp
fldt
push
pop
adc
xor
std
pushf
mov
sbb
filds
mov
xor
mov
inc
cli
int
push
sub
imul
pop
lds
xor
sub
xchg
sahf
sub
mov
imul
mov
out
mov
pusha
mov
add
xor
dec
push
mov
fdivr
mov
dec
pop
jg
ror
arpl
mov
in
xlat
xor
xor
out
shl
outsl
hlt
stc
dec
adc
movsl
adc
daa
jo
int
aaa
lods
push
ja
hlt
jle
out
sbb
and
test
or
incb
out
inc
gs
loopne
stos
xor
push
and
adc
add
outsb
add
xchg
jecxz
mov
popa
sbb
jle
mov
rclb
sub
aad
mov
add
mov
add
adc
pop
arpl
jne
nop
inc
enter
lods
ljmp
cltd
test
push
lea
lret
jp
fwait
insb
ffree
sbb
pop
pop
outsl
in
rclb
cmp
mov
je
stos
jmp
mov
jb
fistps
inc
adc
or
dec
decl
sbb
je
fwait
push
jecxz
push
and
lcall
cwtl
dec
nop
dec
mov
popa
xor
push
fwait
leave
dec
mov
out
mov
mov
lods
mov
das
leave
mov
mov
fwait
xor
rcrl
es
arpl
pushf
add
cmpsl
xor
popf
icebp
lea
lret
xchg
mov
rorb
and
pop
sbb
add
aad
leave
sub
add
cmp
push
scas
fldl
inc
xchg
add
dec
ljmp
xchg
lods
mov
fisubrl
out
insb
je
xchg
push
pop
push
and
clc
cvtps2pi
lock
ror
sbb
in
mov
lock
lret
test
xchg
dec
sbb
shll
push
pop
jg
subb
lds
add
stc
sbb
fs
outsl
jnp
jg
or
cld
dec
pusha
mov
ret
xor
pop
fsubrl
jno
xor
dec
addl
add
fwait
in
pop
loope
addl
in
lock
mov
adc
xchg
in
loope
xchg
shld
out
mov
sub
jb
frstor
mov
jnp
mov
mov
mov
inc
jnp
jle
jb
in
scas
aad
in
push
fnstsw
adc
and
sbb
andl
push
mov
adc
fwait
lcall
jb
mov
and
les
mov
fdivrl
push
pushf
roll
and
ffree
push
scas
negb
jmp
fbstp
pop
inc
inc
cmpsl
clc
fmuls
pop
rolb
xor
fwait
xchg
out
hlt
sbb
hlt
mov
cmp
lds
inc
and
rcrb
mov
insb
pop
and
insb
sbb
fcomip
icebp
jbe
arpl
push
in
and
jge
mov
ret
or
xchg
lods
int3
scas
xor
pop
mov
sbb
sub
jo
in
popa
scas
mov
and
fldenv
mov
in
ja
or
nop
iret
xlat
daa
xor
cmp
jno
jp
jl
movsb
popf
dec
ds
bound
fisubl
stos
xor
int3
push
aas
sti
mov
and
outsb
inc
push
aaa
jno
dec
pop
cwtl
fdivp
js
lock
pop
and
repz
data16
clc
cltd
xchg
sub
push
xchg
cmp
sahf
outsb
sahf
adc
adc
push
in
pop
mov
sbb
loope
xor
xchg
mov
pushf
je
sub
mov
cwtl
xchg
icebp
lcall
mov
push
jg
sub
sahf
into
and
xchg
jg
jns
mov
sbb
mov
jp
movsb
cmp
and
jecxz
xchg
add
cmp
mov
icebp
xor
shll
mov
es
bnd
cmc
sahf
cmc
sbb
adc
loop
or
stc
add
out
arpl
lods
adc
xor
push
push
mov
out
fcoml
unpckhps
cli
push
xchg
sti
xor
repnz
fnsave
jp
xchg
decb
lea
loopne
pop
sbb
jo
cmpsb
adc
imul
imul
xchg
sub
sbb
mov
push
cmp
popa
and
in
outsb
and
fs
xor
aad
test
dec
aam
ret
inc
test
repz
loope
lea
popf
cli
xchg
imul
xchg
test
pushf
pop
pop
lret
jmp
lretw
pop
pop
gs
dec
jb
sub
mov
xchg
jns
dec
dec
inc
lcall
movsb
int
inc
mov
adc
mov
pushf
out
mov
dec
rorl
adc
jo
dec
mov
imul
lock
jecxz
test
mov
cmpsb
cwtl
out
shrl
or
insl
imul
dec
mov
scas
mov
fs
pop
cld
cld
sbbl
cmc
jp
mov
fistps
and
clc
xchg
sbb
sbb
scas
shrb
addl
push
roll
mov
ljmp
out
sub
mov
iret
das
mov
cld
mov
jl
jb,pn
push
jne
test
hlt
aas
xchg
iret
dec
rcrb
push
enter
jp
sbb
js
rol
sub
pop
sub
dec
sahf
pop
push
mov
sub
in
incl
dec
sahf
xor
add
xor
aaa
imul
fmuls
aas
pop
xchg
jno
ja
outsl
lcall
jp
or
dec
cmp
fs
mov
mov
fcomip
out
jg
cmp
dec
dec
into
jns
mov
cmc
xchg
pop
rclb
or
push
addr16
and
mov
sbb
mov
fs
cmpb
mov
push
jmp
fstpt
or
fs
dec
popf
xchg
sbb
mov
stc
stos
sbb
add
ljmp
jnp
sahf
sub
jecxz
sbb
roll
dec
iret
sbbl
ret
enter
xor
hlt
jae
jo
inc
stos
cmpsb
xor
aam
je
push
andb
cmp
outsb
lds
bnd
push
push
sub
cmp
das
repnz
mov
arpl
inc
ja
lea
jge
nop
sbb
data16
subl
mov
mov
jmp
cltd
rcrl
pop
or
std
rorb
aam
push
jo
repnz
scas
xchg
movsl
fbld
dec
es
movsb
jmp
aam
push
dec
fisubs
pop
sub
daa
das
lods
cmp
mov
jmp
jl
sbb
dec
lods
adc
movsl
bound
and
mov
adc
push
jnp
push
inc
stc
out
xor
ljmp
into
pop
popa
int3
lods
push
jns
loope
movsl
aaa
sub
or
outsb
add
rclb
jmp
ja
orb
in
sbb
lcall
in
mov
int
ds
sub
inc
lahf
lcall
sub
ljmp
inc
sahf
jno
pushf
test
je
jg
loope
mov
insb
fisttpl
out
in
and
cmc
pop
ss
stc
cmp
je
mov
lret
cmc
sar
xor
push
or
movsl
cmc
gs
xor
sbb
out
mov
loop
stc
mov
dec
ficoms
xchg
mov
cmp
mov
into
or
cli
xchg
fbstp
es
adc
jmp
clc
pushf
test
loopne
and
jo
adc
mov
adc
pop
xchg
add
jb
sbb
hlt
mov
insb
fisubrl
aam
das
mov
jne
popa
mov
jp
lahf
aad
push
lods
nop
inc
sbb
dec
xor
push
inc
out
stc
xchg
fstps
out
sub
aaa
aad
sub
std
imul
xchg
popa
sub
push
jp
pop
aad
cld
adc
inc
ljmp
out
aaa
pop
mov
lcall
popf
jb
fdivr
dec
rclb
je
xchg
jbe
xor
pop
enter
xchg
pusha
pop
mov
addl
fidivrl
cmp
arpl
loopne
sbb
mov
or
fbld
mov
sar
inc
icebp
es
rorb
mov
xchg
cmpsl
cs
mov
repz
fwait
icebp
cmp
cld
daa
bound
fs
mov
out
inc
mov
aaa
and
sub
mov
or
rcrb
xchg
data16
fst
pop
xchg
loop
adc
adc
xor
mov
sub
xlat
push
std
add
iret
mov
mov
cmp
mov
cmp
mov
test
jno
xchg
movsl
sbb
sbb
rcrl
push
pusha
pop
aad
add
inc
lahf
jnp
outsl
cmpsb
add
sbb
jmp
or
in
sbb
jbe
gs
push
dec
clc
ja
dec
in
dec
addr16
fildl
pushf
lcall
mov
dec
inc
in
sub
adc
lcall
fnsave
mov
std
xchg
lods
inc
add
adc
ret
or
lahf
mov
jp
cmc
ds
cmpsl
mov
fisubl
aas
dec
mov
pusha
sbb
push
fistps
data16
adc
mov
adc
xor
pop
push
push
daa
jmp
mov
lock
fsubrl
add
insb
movsl
jnp
and
scas
sub
push
sub
scas
cmp
iret
loop
jbe
ja
sbbl
int3
mov
inc
lods
enter
add
inc
push
xchg
fisubrl
fnsave
xchg
and
push
pop
outsl
fimuls
jg
lds
or
push
pop
push
mov
adc
and
sti
push
mov
xchg
xchg
sarb
jnp
sbb
mov
test
add
int3
test
pop
aaa
xchg
aam
loopne
in
xor
adc
and
loop
insb
cmp
add
dec
pop
cmpsb
adc
cmp
enter
daa
cs
cmp
adcb
mov
ds
pop
movsl
imul
push
push
in
int
jb
sti
push
mov
movsl
jmp
mull
pop
out
cmp
inc
cmp
mov
inc
push
loope
aam
sub
aad
cmp
jae
outsb
fs
adc
les
sbb
sbbb
sbb
scas
add
xor
push
dec
sbb
sub
fmulp
pop
xchg
jae
lcall
lret
fsubrl
jge
sahf
adc
add
mov
dec
and
jns
divl
cld
xchg
sbb
cmp
testl
jl
rcll
cmp
arpl
into
mov
mov
shrb
dec
loop
fcomps
stc
jb
ljmp
adc
fldcw
in
shl
or
les
std
mov
xchg
or
cmp
push
push
bound
je
loopne
clc
mov
adc
ss
imul
sub
add
test
sbb
das
and
xlat
ds
sub
jnp
mov
addr16
adc
fisttpll
stos
nop
sbb
xchg
dec
sub
add
in
repnz
push
push
push
cs
push
call
xchg
or
pop
mov
adc
inc
or
lea
jp
pop
lods
imul
imul
cmp
mov
test
je
jl
jecxz
adc
test
pop
std
pop
push
fstps
pop
sahf
xchg
mov
dec
adcl
out
lret
jp
mov
mov
lock
and
mov
shl
and
daa
dec
gs
xlat
ljmp
test
popa
cmpsl
sub
int
icebp
adc
xchg
push
adc
lret
sarl
mov
in
mov
mov
push
adc
rorb
insl
sub
push
push
ret
dec
mov
scas
jno
clc
sbb
movl
xor
jecxz
jmp
mov
xchg
andb
aas
push
sub
dec
out
add
movsb
ret
add
test
pop
pop
mov
lret
dec
cmpsb
mov
sahf
mov
test
scas
cli
xchg
fisttpll
shll
fwait
pop
addb
push
out
cmc
add
dec
mov
mov
or
not
mov
mov
push
pop
pop
or
mov
dec
pop
mov
or
pop
sbbl
cs
jne
int
mov
sbb
in
jo
jns
xor
in
mov
xchg
outsl
jl
xchg
add
lea
mov
inc
push
mov
push
jl
std
push
inc
mov
and
pusha
mov
pop
fistpll
mov
pop
xchg
jno
fadds
ljmp
mov
das
pop
cmp
sbb
mov
jnp
insl
out
mov
pop
push
jno
xor
mov
ret
push
pop
insl
inc
inc
inc
clc
popf
xchg
jae
push
in
sbb
mov
inc
push
cmpsl
pushf
faddp
xchg
jmp
lcall
fldl
add
push
lds
inc
mov
mov
fdiv
rcl
js
or
arpl
xor
sbb
int
aaa
pushl
xchg
add
rclb
outsl
lea
xchg
push
push
ret
pop
aaa
xor
insb
cmp
push
dec
imul
sbb
adc
add
push
lock
mov
in
sub
mov
daa
sub
fisttps
call
fstpt
lret
outsb
les
jl
jns
gs
fildll
test
inc
pop
test
mov
aam
js
inc
push
pop
fbstp
add
cmp
ja
cmp
outsb
cmovle
lahf
sbb
jns
pop
subb
push
sbb
sub
push
cmp
sub
push
push
push
test
sub
sub
outsb
fldt
push
mov
xchg
sahf
mov
sbb
mov
mov
jg
mov
pusha
mov
fnstsw
mov
fimull
ss
outsl
mov
jp
scas
fsubr
sub
lret
dec
shrl
imul
test
fwait
dec
xchg
repz
xor
and
ljmp
or
sub
adc
xor
loopne
adc
or
sbb
in
imul
cmp
push
mov
movl
gs
pushl
pop
int
pop
adc
pop
imul
jmp
xlat
xchg
add
gs
lret
fildll
push
fcom
into
xchg
xchg
sub
sub
in
scas
push
sub
inc
and
daa
nop
divb
inc
inc
adc
sbb
std
inc
inc
repz
fcmovb
xor
lret
pushf
iret
call
adc
out
cmp
push
pushf
and
cmp
jl
sbbb
test
sti
gs
inc
jle
fs
sbb
mov
je
les
xchg
sub
testb
or
add
cwtl
cmp
push
mov
cmp
and
std
fidivrs
mov
lock
inc
das
inc
cld
out
ds
mov
inc
in
rcl
xchg
int
es
mov
insl
and
stc
dec
jg
xchg
cmpsl
sub
pop
mov
jmp
lcall
pop
xchg
jae
hlt
sbb
leave
imul
jne
mov
and
ss
jmp
ret
fisubs
push
sbb
add
and
clc
pop
shrl
negb
imul
sbb
push
lea
testl
cmp
adc
fwait
cmc
xchg
hlt
dec
add
orb
jnp
dec
jbe
ror
push
and
es
sbb
push
mov
add
gs
jmp
adc
or
inc
mov
cld
sti
cmp
enter
cs
jnp
dec
jnp
inc
je
jl
rol
fwait
test
shlb
jmp
mov
pop
mov
bound
sbb
jns
in
in
push
push
xchg
dec
repnz
out
jmp
sub
pop
shll
mov
jp
inc
fidivs
sub
mov
out
scas
in
dec
adc
ret
neg
pop
hlt
xchg
mov
fucomip
add
sub
lods
inc
enter
xlat
mov
outsb
icebp
push
stos
jae
lret
and
movsl
aaa
insb
arpl
pop
jnp
scas
icebp
lods
sbb
xchg
xchg
adc
iret
mov
iret
push
inc
add
jg
cmp
push
sahf
push
aam
mov
xchg
xchg
ljmp
rcll
imul
cmp
push
mov
pop
rorb
xor
push
leave
jmp
dec
xor
mov
jbe
std
cmp
xlat
cld
or
xchg
jne
aaa
mov
mov
int3
pop
test
pop
xchg
pop
addr16
cmpsb
minps
jge
scas
xor
mov
cmp
mov
pop
push
aas
sbb
cmpsb
sbb
shr
adc
add
jl
cmp
sub
mov
repz
jno
adc
orb
mov
out
js
movsl
ja
mov
lahf
test
fistl
loop
test
dec
test
cmpsb
out
int3
jge
lcall
loopne
pop
push
in
shrb
in
or
push
sahf
out
sub
in
mov
and
adc
dec
sarb
mov
addb
sbb
rcr
xor
ljmp
repnz
sub
pop
pop
xchg
bound
and
scas
push
clc
push
faddl
xor
sub
jg
sahf
pop
mov
test
data16
dec
jg
xor
mov
fwait
aam
adc
pop
and
in
sahf
and
inc
fsubs
orb
push
xor
mov
push
into
jle
cli
cmc
mov
inc
dec
outsl
mov
dec
ja
stc
loopne
fbld
dec
adc
mov
lods
in
or
sbb
out
and
dec
xor
jp
or
aas
jl
xchg
icebp
or
loopne
out
pop
in
add
imul
cmp
add
loop
xchg
mov
pop
sbb
movsl
push
inc
xlat
or
pop
push
mov
sbb
loop
outsb
mov
aad
and
dec
push
cmp
scas
fnstcw
adc
dec
xor
and
call
xchg
mov
das
adc
stc
setl
popf
scas
jmp
push
inc
pop
mov
loope
inc
cltd
pop
in
mov
cs
push
je
pusha
cmp
mov
xor
fcomps
popf
scas
std
mov
das
addl
fldt
scas
mov
aam
lock
mov
and
shlb
movsl
xchg
and
push
stos
shl
jns
fstpl
or
cmpsl
sub
mov
rcl
cld
test
sub
mov
jmp
and
fs
pop
xchg
divb
shl
cmp
aam
xor
push
fisttps
push
clc
xchg
movsl
dec
xchg
cmp
cmpsl
call
lods
aad
adc
pop
movsl
ficoms
push
fldl
dec
ljmp
jmp
aam
cmp
cmpsl
dec
insb
mov
stos
xchg
push
insl
sbb
xor
and
int
pop
sbb
push
sub
addb
cmp
jg
mov
xlat
in
or
mov
xor
add
mov
aas
in
or
pop
adcl
push
cltd
dec
inc
sbb
or
aas
pop
fsubr
fwait
dec
lock
sahf
outsb
pop
mov
lods
out
sti
inc
bound
cmp
in
inc
std
xchg
lcall
sub
pop
dec
mov
cmp
jp
repz
push
pushf
mov
jle
mov
in
jmp
pusha
jmp
fstp
jnp
pop
xchg
mov
add
stc
test
xorl
rclb
jo
push
xor
mov
lods
or
in
inc
ja
insb
shlb
pusha
scas
push
ss
push
inc
push
adc
pop
insb
iret
cld
mov
mov
negl
scas
in
inc
push
cmp
jae
jo
inc
mov
rorl
sarb
push
fdivrl
xchg
cltd
or
sbb
popf
fldt
xor
fdivp
and
vpcmpgtb
shlb
jp
or
lret
push
jl
sub
outsb
jge
xchg
mov
push
mov
aaa
jge
rorl
xchg
dec
add
pop
inc
int3
inc
xchg
mov
push
mov
cmp
aam
scas
adc
mov
cmp
xchg
push
push
mov
ret
cmpsb
sahf
mov
in
cli
lds
pop
repz
sub
imul
in
test
push
sub
dec
imul
and
push
pop
push
pop
sahf
aam
push
add
leave
inc
xor
cld
mov
js
jno
push
iret
mov
imul
sub
fstpt
shrb
shrb
push
adc
push
clc
xchg
aaa
pop
push
adcb
sbb
mov
xor
adc
push
push
push
sbb
lahf
dec
mov
jg
cmpsl
pop
adc
inc
lcall
loope
stos
mov
sub
and
das
test
push
mov
or
cmpsl
dec
mov
mov
repz
cmp
in
loope
addr16
pusha
push
mov
dec
cs
lret
test
push
int
mov
in
lods
sbb
movsl
repnz
popa
sahf
push
cmc
adcl
loop,pt
adc
stc
xchg
popa
jo
sbb
mulb
fnsave
lods
aam
mov
out
mov
cli
push
sar
xor
jae
or
sub
mov
cli
adc
cmp
imul
ds
add
mov
push
sbb
inc
cmp
popa
data16
dec
int
sub
int
in
test
lret
sti
sbb
ss
aad
adcl
cltd
cmp
mov
ljmp
cmp
aaa
jno
lea
cmp
faddl
pop
mov
sub
pushf
jbe
jo
pop
mov
pop
inc
mov
xchg
hlt
mov
jb
pop
leave
dec
pushf
mov
je
push
pavgw
inc
