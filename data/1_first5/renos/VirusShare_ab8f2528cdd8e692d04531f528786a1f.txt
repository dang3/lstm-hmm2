ljmp
call
in
cld
inc
dec
lea
or
jge
jle
mov
mov
and
lea
mov
adc
mov
mov
ljmp
aas
inc
dec
lea
dec
hlt
dec
dec
mov
push
call
mov
dec
int3
jnp
lea
pop
xchg
mov
mov
jg
mov
dec
dec
inc
dec
inc
inc
cmp
jbe
dec
and
jb
aaa
fstpt
lea
fs
mov
insb
and
xchg
faddl
scas
or
mov
jns
lea
fdiv
jg
insb
dec
dec
jnp
ds
insl
int3
js
lea
sbb
nop
push
sbb
dec
mov
std
mov
xchg
dec
lea
jl
dec
cmp
jns
mov
testb
dec
mov
rolb
add
jle
inc
mov
test
scas
or
jae
mov
xorl
add
mov
pop
ret
jmp
mov
push
roll
add
or
aad
push
es
xchg
xchg
xchg
mov
clc
hlt
lock
jg
in
addr16
mov
push
cmpl
sbb
inc
and
push
sbb
popf
mov
mov
ret
pop
call
mov
aam
cmp
cmp
int3
enter
cmp
sarb
mov
test
inc
cmp
pop
pusha
pop
cmp
cmp
pop
push
push
dec
cmp
cmp
dec
inc
inc
cmp
cmp
cmp
xor
sub
cmp
cmp
and
sbb
cmp
cmp
insb
push
add
in
cmp
add
xchg
dec
or
dec
pop
xor
mov
jge
ljmp
inc
push
cmp
ds
add
jp
ret
into
pop
data16
std
mov
sub
jb
dec
test
dec
add
cltd
popf
addr16
in
mov
dec
xchg
jae
test
ret
xchg
ss
mulb
scas
mov
ret
inc
jp
inc
cmpsl
ret
test
sub
pushl
inc
add
adc
adc
movb
adc
inc
add
sbb
mov
and
gs
ret
ret
std
ret
fstl
jg
jge
cs
inc
and
iret
iret
ja
ret
add
cs
in
fnstsw
pop
les
outsb
aas
lea
mov
jo
pop
sub
test
scas
mov
xor
dec
push
dec
and
adc
or
cmp
fidivrs
repz
fld
in
sbb
mov
or
mov
inc
insl
mov
orl
sub
and
push
inc
ret
fmul
pop
sti
sub
sub
pop
sub
les
shlb
or
sub
rorl
fbstp
dec
push
jo
pop
lret
xchg
lods
ret
lock
test
ret
jl
ss
mov
mov
and
xchg
sub
adc
lods
xchg
lods
sbbb
add
add
or
lret
test
inc
add
inc
push
mov
xor
loop
decb
loop
xor
xor
push
pusha
iret
imulb
mov
jge
mov
jne
xor
mov
push
sub
cmp
es
in
add
mov
jno
dec
lea
xor
xlat
enter
aas
int
iret
fsub
cs
jbe
mov
lds
lret
cmp
pop
push
adc
pop
mov
jl
inc
add
adc
xor
aaa
sahf
jnp
lcall
rorb
push
ret
sti
imul
mov
ret
shr
cs
addr16
and
and
push
cmp
jo
jg
in
push
imul
sub
test
add
ficoms
shr
mov
ret
repnz
xor
scas
arpl
dec
xor
aaa
arpl
push
push
lcall
xchg
bound
or
mov
inc
into
pushf
into
aaa
cld
xchg
subl
xchg
andb
mov
pushf
jbe
dec
mov
adc
inc
inc
dec
xchg
sub
fsubrs
popf
xchg
cs
xchg
pop
aas
mov
mov
or
aas
cmp
mov
cmp
add
sbb
ficoml
mov
xchg
out
loop
adc
stos
fidivs
push
xchg
add
rorb
cs
jle
sub
daa
mov
and
dec
cs
push
ljmp
inc
shll
lret
ret
lea
push
mov
hlt
mov
mov
mov
shl
jne
test
jne
push
jbe
or
and
jmp
daa
inc
imull
hlt
mov
repz
ret
outsl
call
call
cs
mov
or
enter
clc
jge
loope
movzwl
dec
test
jb
in
movl
in
add
mov
mov
sbb
mov
add
mov
testb
fidivs
xor
jl
mov
adcl
add
jl
je
pop
or
adcb
adcl
push
cmp
jle
adc
sbbb
fbld
loopne
sbb
adc
insl
nop
test
ljmp
jmp
cmp
in
jne
ret
clc
adc
mov
sbb
inc
mov
mov
add
rolb
inc
gs
jb
arpl
fs
jae
jae
pop
pusha
lea
pop
pop
or
and
cli
lods
cmpsl
dec
outsl
popa
fs
imul
fnstcw
inc
fisttpl
outsb
push
push
imul
jne
insb
inc
insb
insb
test
inc
push
bound
incl
sub
adc
dec
and
mov
dec
mov
pop
mov
dec
mov
cmp
jp
inc
lea
dec
mov
adc
mov
mov
xchg
lods
scas
dec
cld
fucomi
mov
in
mov
ss
pop
dec
push
fdivrl
nop
mov
les
fstpt
inc
add
pop
xchg
add
jo
dec
lea
push
clc
icebp
sbb
pop
enter
jbe
or
add
mov
inc
dec
cmp
jo
fiadds
add
les
mov
inc
cmp
je
dec
dec
mov
in
cwtl
cmp
or
push
inc
lea
dec
mov
jnp
dec
jle
fcoml
mov
mov
push
mov
dec
inc
call
lret
jmp
dec
inc
inc
mov
call
js
in
push
call
jge
movhps
sbb
cld
mov
call
in
or
mov
push
in
dec
or
aas
enter
mov
pop
arpl
out
sbb
push
call
add
ja
dec
idiv
or
push
mov
ja
xor
lea
mov
pushf
xchg
sbb
mov
or
jecxz
add
sub
xor
or
pushf
ja
or
pop
aam
push
aam
push
fadd
lret
fsub
mov
lahf
mov
fadds
or
inc
test
outsl
lock
clc
add
fadds
cmp
ja
mov
insl
loopne
mov
jle
or
cld
into
dec
add
clc
mov
inc
xor
mov
fistpl
out
lret
push
sub
clc
inc
mov
cmp
mov
mov
push
scas
pop
lock
push
shlb
mov
enter
js
sub
inc
int3
xchg
mov
pop
jmp
mov
out
lods
mov
ljmp
jp
lea
inc
dec
mov
js
js
lahf
add
lock
inc
in
sbb
mov
stos
pop
sub
xchg
out
pop
jb
push
sar
enter
mov
mov
lods
sbb
insl
inc
test
outsl
js
loopne
dec
fs
jnp
inc
pop
lea
andl
pop
hlt
jnp
dec
aam
push
jecxz
add
mov
xchg
fwait
in
dec
cld
pop
shr
sbb
je
inc
cmp
ja
movd
ss
mov
mov
mov
xor
iret
loopne
mov
sarl
mov
mov
push
cli
add
pop
push
movsb
push
mov
push
testb
pop
mov
push
in
shl
mov
rcll
push
push
mov
clc
std
pop
push
mov
add
mov
sbb
and
inc
inc
mov
stos
cmp
add
jl
adc
les
dec
dec
cmp
outsl
push
lods
test
and
lea
or
push
inc
stos
pop
jne
pop
sub
jecxz
xor
cmp
loopne
dec
mov
idiv
xor
xchg
les
dec
scas
inc
dec
inc
dec
jo
std
or
enter
idivb
jmp
fdiv
add
mov
inc
inc
icebp
outsl
fbld
pop
push
cmp
and
in
pop
scas
sbb
pop
fdivrl
inc
inc
notl
mov
pop
pop
sbb
or
push
mov
ljmp
xchg
loop
dec
cs
aas
mov
xor
xor
xor
andb
xor
aaa
sub
int
call
push
repnz
jge
lock
loopne
add
test
pop
mov
outsl
add
jle
add
xor
xchg
scas
std
mov
or
add
je
repnz
in
mov
add
xor
mov
dec
cld
mov
and
xor
faddl
pop
aas
lock
icebp
add
mov
hlt
mov
js
clc
sub
int
ret
sbb
repz
jne
inc
push
cmp
inc
add
mov
adc
add
push
aad
inc
cmp
cmp
push
sub
stos
sahf
pusha
scas
push
add
push
fisttpll
andb
mov
pop
in
xchg
cmova
cwtl
cmp
mov
movsb
inc
mov
adc
dec
jnp
mov
dec
rcpps
adcl
enter
dec
rclb
pop
test
pop
pop
iret
loopne
inc
inc
cmp
es
popa
push
imul
jg
pop
xor
outsl
js
imul
arpl
lcall
outsb
outsl
jns
dec
imul
add
insl
imul
addr16
fs
arpl
idiv
push
insb
pop
sbb
popa
push
jb
jbe
imul
lcall
fists
jbe
inc
insl
jbe
dec
gs
jb
xor
dec
imul
outsb
mov
jo
dec
and
data16
jae
outsb
je
insb
insb
cs
inc
pop
cmp
sub
adc
mov
aaa
mov
clc
leave
inc
dec
out
mov
stc
icebp
add
jnp
jbe
push
pop
add
pop
hlt
cmpl
add
mov
push
inc
and
dec
scas
mov
enter
cmpl
xlat
in
or
sahf
xor
loopne
mov
push
or
or
mov
lret
dec
pop
lock
push
or
or
out
shr
jecxz
out
subl
lock
jg
incl
pop
add
xor
xor
cmp
sub
gs
gs
xor
pop
xorb
add
cwtl
add
stos
add
cld
adc
mov
mov
dec
lods
pop
aad
sbb
call
inc
inc
xor
test
add
sbb
add
int3
test
sub
enter
aas
pushf
test
add
push
cmp
hlt
loope
pusha
sbb
or
pop
inc
mov
mov
mov
xchg
test
enter
or
rcr
add
rorb
or
jg,pt
mov
add
clc
imul
ret
ret
mov
shr
dec
mov
or
mov
mov
mov
addl
sbb
test
inc
and
mov
dec
pop
pop
and
lock
nop
push
and
sti
lock
lock
adc
add
imul
movl
add
pop
repnz
aaa
fdivs
and
shlb
insl
jo
loope
jle
pop
or
mov
out
mov
mov
testb
push
fwait
push
in
push
cmpsb
mov
dec
adc
addl
push
cmp
fildl
adc
push
pop
das
add
inc
or
mov
in
inc
cmpsb
imulb
jb
jmp
aas
or
or
fs
cmp
test
sub
movsl
push
adc
push
sub
aas
ret
and
lea
dec
mov
mov
stc
dec
add
int3
cs
push
ret
dec
fwait
or
rclb
dec
cmpl
or
pop
adc
sub
mulb
push
pop
sub
pusha
fdivs
outsb
add
adc
gs
pshufw
lea
ret
jne
loop
cwtl
add
or
and
inc
adcb
mov
sbb
ja
xor
push
daa
cmpsb
notl
sbb
inc
movsl
imul
push
fdivs
push
xor
or
mov
hlt
inc
rorb
xor
sbb
rcl
fcmovnb
add
pop
lods
inc
xor
adc
sub
mov
adc
repnz
cmp
mov
mov
jg
out
aaa
cmp
cmp
xor
xor
ss
xor
xor
push
xor
cmp
xor
push
cmp
neg
imul
push
cmp
xor
xor
push
xchg
xlat
imul
xor
adc
sub
cmpb
sub
es
inc
sti
xchg
hlt
add
mov
jl
cld
add
jbe
out
inc
inc
jne
push
add
or
mov
cmpl
mov
ja
and
test
ja
int
push
sub
jns
cmp
cld
xor
xchg
clc
test
orl
xchg
add
mov
mov
xchg
mov
sub
add
faddl
pop
pop
cmc
pop
inc
and
lock
sub
test
inc
stc
test
arpl
add
loope
test
fs
bound
mov
sbb
jbe
push
pushl
add
outsl
or
int
push
pop
pop
ja
rclb
jo
out
arpl
daa
testb
cmp
lock
and
push
ss
insb
iret
xchg
clc
cmpb
add
loope
pushf
pop
sub
test
add
pushf
cs
sub
out
inc
movb
stos
sub
cmp
jne
push
jne
inc
popf
popa
out
jmp
push
je
mov
or
or
je
decl
xchg
push
andl
cwtl
jno
mov
clc
cli
adc
and
inc
lea
sub
cmp
or
insb
or
call
add
in
std
lret
inc
nop
sub
jge
push
sbb
add
mov
rcrb
scas
icebp
jecxz
dec
mov
addb
sbb
push
sub
test
imul
add
xor
xchg
lahf
scas
test
hlt
mov
sub
or
ficoml
pushl
add
test
jb
das
stos
repz
push
cmp
add
test
and
test
xor
ss
xor
ss
xchg
push
mov
movb
shr
les
daa
stos
in
cmpb
xor
outsb
sbb
pop
adc
push
stos
add
repnz
hlt
or
hlt
add
mov
rorb
push
js
and
out
loope
decl
add
pop
mov
mov
or
cwtl
add
pop
push
mov
mov
imul
ret
das
test
jmp
call
adc
cmp
and
xor
push
jae
loopne
xchg
sbb
push
lock
cmpl
pop
push
add
inc
mov
add
mov
mov
adc
icebp
test
pusha
and
sbb
or
mov
fsubs
inc
or
add
cmp
orb
sub
cs
add
dec
and
adc
pusha
mov
add
dec
xlat
lods
loope
mov
xor
insb
mov
xor
lea
add
sub
cmp
movzwl
outsb
mov
addb
push
push
xchg
loope
jmp
orl
pop
icebp
test
scas
notl
cmp
aad
scas
jmp
push
aad
sbb
sti
xor
stos
pusha
imul
jmp
push
mov
in
mov
add
lock
push
dec
inc
mov
add
nop
jb
mov
sbb
jb
js
mov
push
lahf
dec
jo
or
jl
call
mov
pop
cltd
mov
dec
jns
data16
inc
jecxz
pop
xchg
add
data16
add
fsub
mov
mov
or
jns
int3
push
add
ja
in
fidivs
dec
aam
sbb
cmp
ret
sub
hlt
jle
aaa
mov
sub
adc
inc
in
data16
xchg
and
mov
xor
shlb
ja
pop
sbb
dec
cmp
jbe
fadds
inc
xchg
jno
sub
jl
cmp
xchg
pop
cmp
outsl
rol
dec
inc
in
cmp
das
fcoml
cmpsb
xchg
lea
fnstenv
and
or
push
out
mov
test
and
and
mov
shlb
inc
mov
push
shrl
cmpb
je
aad
cmpb
adc
adc
pop
loope
xlat
mov
or
jo
mov
fisubrl
mov
aaa
jge
inc
inc
mov
call
out
aas
cwtl
jb
clc
mov
or
mov
cmp
or
cmp
inc
mov
jmp
and
inc
sarl
sub
push
adc
push
nop
add
push
add
mov
push
cmc
push
xchg
lods
les
add
pushf
ret
nop
stos
aas
lock
mov
jge
adc
and
push
or
test
lods
xor
push
out
add
and
add
mov
imull
sub
add
adc
aam
aam
out
jnp
xchg
or
sub
fdivp
mov
and
arpl
arpl
sarl
and
xchg
out
aam
addr16
add
out
test
inc
pop
add
pop
pop
inc
dec
int
pop
test
add
dec
adc
inc
pop
out
jge
rorb
in
xor
inc
xor
outsl
xor
js
loop
dec
add
mov
out
mov
sahf
pop
loop
pop
insb
xchg
add
add
add
cmpsb
or
lcall
add
and
sub
xor
sbb
pop
movsl
fistpl
lock
sub
movsb
pop
bound
mov
mov
sub
out
jne
or
sub
xlat
dec
cld
faddl
and
incl
gs
jge
cmp
je
stos
jg
int
sbb
shll
aad
sbb
test
jns
jns
dec
inc
cmpsb
mov
sub
jnp
sbb
sub
inc
mov
sub
dec
lret
push
and
js
mov
push
sti
add
sub
scas
cmpsl
in
fwait
adc
ret
lret
inc
in
jnp
aas
imul
fstpl
mov
das
pop
sub
cmp
sub
push
lds
popa
mov
insl
mov
cmp
ret
sbb
xchg
sbb
push
xor
push
sbb
mov
inc
mov
lods
insl
sbb
mov
fcmovbe
aas
cmp
lret
sub
cmp
adc
or
ficompl
fcmove
cmp
push
or
mov
das
movb
sti
push
xor
or
leave
jns
dec
jmp
dec
aaa
stc
pusha
mov
pop
mov
xor
sub
fisubrs
imul
xlat
cmp
jnp
subb
pop
xchg
jns
jmp
adc
xchg
mov
int
xchg
sub
and
imul
add
out
pop
shll
cmp
divb
adc
out
sub
mov
inc
lahf
push
lods
loope
fsts
lods
sub
pop
pop
inc
lcall
sub
dec
mov
pop
jae
mov
xchg
addr16
push
pop
mov
movb
addr16
add
scas
mov
xchg
sub
test
push
pop
inc
mov
ret
sub
lahf
stos
mov
add
arpl
out
sub
imul
jns
imul
vorps
cmc
ja
lods
insl
or
stos
js
imul
and
or
test
sbb
push
push
mov
or
jecxz
mov
dec
xchg
shrl
insl
stos
pop
mov
sbb
add
pusha
inc
imul
push
dec
stos
or
or
insl
ret
and
mov
mov
je
cmpsb
insl
mov
loope
xchg
subb
jne
pop
ret
stos
pop
mov
test
in
movsl
add
push
mov
add
fwait
cmc
sub
pop
insl
jne
pop
sbb
gs
bound
sti
cmpl
ljmp
push
push
xchg
cmp
sarb
mov
dec
xchg
insl
push
cmc
add
stos
mov
pop
push
shlb
mov
outsb
or
inc
sbb
fbld
pop
mov
and
sub
push
dec
mov
mov
inc
mov
mov
mov
lahf
sti
pop
in
or
add
shll
mov
push
and
push
mov
and
jns
xchg
or
pop
sub
imul
xor
dec
mov
push
inc
jecxz
daa
or
inc
lds
mov
mov
xor
adc
mov
pop
inc
and
movsl
in
call
mov
pop
sti
mov
lds
outsl
or
push
sbb
jne
mov
inc
jno
add
adc
adc
jo
adc
dec
mov
call
mov
pop
iret
sub
or
or
mov
pop
jmp
stos
sbb
dec
inc
arpl
imul
insl
inc
xor
push
arpl
jecxz
ljmp
mov
sub
inc
or
add
insl
stos
aad
inc
xor
lahf
lret
or
iret
mov
adc
mov
lods
sub
mov
outsl
insb
test
movsl
add
cmp
push
push
arpl
inc
outsl
stos
xor
popa
dec
shrb
push
ljmp
mov
push
xchg
jge
sbb
push
stos
inc
pop
in
push
dec
fstps
mov
pop
sub
rcll
xor
push
adc
rep
aad
aad
inc
mov
lds
lods
scas
fstpl
mov
frstor
mov
inc
insl
pop
push
mov
inc
test
orb
cmp
push
fxch
xchg
sub
pop
lret
inc
loop
xchg
test
scas
mov
push
addr16
imul
push
pop
jne
xor
insl
test
pop
jnp
lods
movsl
nopl
adc
mov
mov
sub
mov
mov
leave
stc
sbb
adc
push
push
sub
pop
imul
fldt
stos
push
xor
mov
xor
adc
pop
pop
jecxz
sub
leave
loop
popf
or
lds
cmp
push
and
outsl
addr16
mov
jecxz
push
xor
jne
scas
or
push
sub
lea
xor
lods
bound
lea
and
arpl
aas
stos
add
and
dec
adc
fstl
mov
cltd
lea
mov
adc
cmp
and
sbb
pop
mov
imul
push
xlat
push
push
imul
or
test
sub
pop
xlat
push
pusha
leave
rorl
iret
or
and
adc
mov
push
push
cltd
jbe
dec
sbb
inc
ret
sti
ret
jns
hlt
add
out
adc
mov
sbb
jmp
xchg
mull
adc
mov
fwait
adc
mov
jo
pcmpeqw
call
or
jp
ret
add
dec
jb
iret
out
jle
xchg
addl
ret
es
ret
in
ss
mov
imul
mov
sub
mov
je
cmpsb
das
out
out
jne
ja
pop
mov
push
scas
repz
sahf
jge
cmp
xor
sub
out
inc
popa
or
notl
insl
jbe
push
mov
lods
testl
add
adc
dec
xor
jnp
mov
add
cmpsl
sti
mov
out
dec
jo
fwait
ret
push
xor
aaa
jnp
cmpsl
mov
add
jecxz
push
rol
pop
fistl
mov
mov
mov
out
cmp
sbb
aad
dec
mov
dec
popa
ret
leave
push
fists
pusha
insb
aad
pop
mov
adcb
mov
or
stos
fwait
loopne
jl
daa
clc
arpl
cs
adc
pop
add
jl
jbe
cmpsl
pop
aas
aad
sbbl
outsl
ja
sbb
cmc
add
cmp
xchg
shll
cmp
xchg
idivb
shll
and
out
repz
add
mov
mov
mov
mov
aad
or
outsb
push
xchg
inc
imul
je
xor
cmpsl
pop
pop
push
out
ja
pop
mov
cmp
sbb
and
iret
fldl
lods
mov
cld
sti
pushf
pop
insb
mov
sub
xchg
add
mov
decl
mov
shl
cmpsb
pop
add
loop
cmpsl
sbb
add
cmp
jl
imul
xchg
pop
sbb
arpl
imul
sub
dec
mov
lods
es
filds
sub
jnp
das
mov
xor
es
or
insl
xor
sub
mov
fidivs
out
shlb
fnsave
ss
icebp
pop
jnp
icebp
mov
mov
lcall
sbb
mov
ds
mov
sbb
cmp
test
out
pop
rolb
mov
filds
xor
aad
pop
jmp
ja
imul
out
pop
ret
add
xor
stos
rcr
sbb
cmp
lods
mov
mov
or
adc
cmpsl
mov
add
ficoms
test
mov
xor
mov
fisttpl
repnz
mov
cmp
inc
rcrl
push
and
ja,pn
sub
fcmovnu
or
cmp
xchg
in
xor
fwait
xor
mov
or
imul
xor
jbe
aaa
fwait
xchg
cltd
xor
rorl
jmp
xor
ret
add
imul
dec
mov
lea
add
or
adc
xchg
out
push
es
aaa
bt
jae
add
add
mov
cmp
dec
pop
lods
jmp
addr16
icebp
enter
mov
push
fdivr
lret
sar
lret
mov
sub
sbb
or
imul
ss
adc
insb
das
cmp
insb
js
scas
add
icebp
mov
jnp
sub
clc
ficomps
rcr
xor
xchg
jae
cmp
jge
aam
das
jae
ja
cmpsb
sbb
or
push
rorl
aam
fdivl
daa
sbbb
dec
pop
mov
stos
push
inc
pushl
lock
jae
aaa
xor
mov
pop
mov
mov
pop
lds
pop
push
jmp
aaa
fisttpl
daa
icebp
setno
adc
jl
push
aam
jne
js
jne
xor
pusha
cmp
cmp
pop
popa
mov
xchg
and
test
fistl
mov
push
cmp
addl
mov
or
jae
mov
sub
fsubl
mov
scas
mov
popl
sbb
mull
xchg
mov
mov
sub
mov
dec
jmp
aaa
push
mov
inc
xor
inc
push
xor
icebp
ret
ret
fdiv
shlb
mov
mov
dec
out
inc
push
xchg
jp
sub
dec
mov
std
stos
push
pop
fisttpl
sti
cwtl
and
loope
jmp
or
popf
repnz
cmpsl
jae
repz
mov
jecxz
dec
mov
jns
cmpsb
pop
xor
shr
add
xchg
lea
sti
mov
and
jle
jl
jg
sub
outsb
aad
jo
cmpsb
iret
mov
pop
mov
in
adc
nop
xchg
xor
add
fsubl
mov
fmull
out
test
adc
add
int
dec
cld
ret
filds
mov
rolb
xchg
adc
popf
lods
call
jb
xor
fmuls
mov
int3
sbb
pop
cmp
jecxz
scas
imul
rcl
ljmp
add
lret
test
mov
out
pop
xor
mov
scas
mov
sti
imul
aas
shrb
lock
sub
lea
fiadds
jecxz
stos
fmuls
dec
sahf
xchg
orb
shll
rol
sbb
mov
loopne
je
xor
mov
cli
insl
jnp
bswap
add
pop
inc
popa
add
xor
adc
popa
jo
mov
or
adc
imul
and
stos
inc
orb
or
xchg
cs
push
daa
sub
or
xor
ljmp
mov
orb
call
lods
sti
out
xchg
dec
pop
mov
sbb
test
out
sub
clc
mov
jle
in
xlat
loop
inc
and
mov
and
xchg
negl
add
repnz
cs
fwait
addr16
imul
or
add
jne
mov
jb
jbe
and
add
xor
xor
inc
cmp
repz
add
xchg
or
test
jns
ds
dec
xchg
jbe
lret
add
and
shlb
jo
outsb
inc
add
xchg
jbe
inc
outsl
jae
or
sti
add
clc
in
xor
movaps
imul
cmc
xor
rcr
ss
cmp
mov
jle
pop
imull
test
arpl
lret
xchg
sbb
dec
mov
sahf
repz
std
pop
push
test
mov
jge
sub
cmpsb
outsb
stc
bound
inc
sbb
scas
out
push
jo
push
dec
je
in
cmp
xchg
and
pusha
ljmp
sub
sti
ret
cmpsb
adc
inc
sub
jmp
sub
loopne
sbb
inc
loopne
add
ds
jns
mov
das
lret
rclb
leave
add
adc
mov
add
push
rclb
decl
cld
jle
shll
mov
loopne
stos
dec
jbe
jge
jge
sahf
sbb
jge
jl
push
stos
dec
pop
jne
pusha
cltd
mov
cmpsl
mov
mov
xchg
inc
or
push
sbb
aad
hlt
loop
mov
cli
imul
add
mov
sahf
dec
js
and
inc
sarl
lret
test
adc
mov
xchg
cmp
std
mov
mov
xlat
fwait
cld
cmp
fsts
sti
mov
in
je
stos
leave
sub
xchg
mov
mov
cli
imull
sub
cmc
imul
mov
and
fwait
maxps
pop
lret
and
int3
in
outsl
sbb
aam
fwait
arpl
mov
sub
push
jl
ja
popf
imul
xlat
adc
add
popa
lock
cmp
imul
ja
hlt
mov
and
mov
mov
push
jns
add
mov
dec
hlt
stos
add
mov
in
push
fstpl
add
cmpsb
dec
ffreep
loop
mov
add
mov
inc
pop
out
pcmpeqb
sub
mov
rcll
or
js
adc
dec
mov
lret
mov
jbe
or
orb
dec
test
sub
cmp
cmpl
aam
addl
xchg
neg
in
test
mov
xlat
jecxz
loopne
xchg
int3
mov
cmp
int3
sarb
jno
setg
sbb
sahf
cmp
out
jns
sbbb
enter
jmp
cs
pop
adc
mov
and
mov
sub
sbb
in
jo
add
ret
fsubl
pop
cmp
or
xchg
xadd
pop
xor
cmp
mov
xchg
ret
in
xchg
mov
test
mov
push
pop
cmp
js
stos
jmp
mov
leave
pop
lret
imul
mov
mov
jno
loope
sbb
jge
add
push
pop
add
mov
outsb
jae
jno
ja
cmp
hlt
test
js
mov
out
add
mov
sahf
pop
shl
daa
imul
lock
cmp
ljmp
stc
stos
loope
sbb
imul
jb
jle
lds
add
pop
addr16
mov
push
testb
adc
or
mov
cmp
repnz
loopne
sub
sub
jno
call
xchg
dec
loopne
add
sti
adc
decl
aaa
cmp
pop
adc
xchg
cmp
stc
popa
push
adc
push
dec
iret
pop
pop
in
aad
inc
mov
push
or
nop
ror
jns
call
dec
sti
pusha
fildll
add
cmp
cmp
test
pop
test
dec
pop
in
je
stos
jge
sub
test
sub
pop
mov
lahf
push
dec
add
je
jp
bound
dec
fadd
pop
cmpsb
xchg
ret
inc
mov
adc
xor
jecxz
fst
cld
jge
loope
and
or
rcrl
inc
adc
mov
call
sub
mov
xlat
jg
pusha
lds
aaa
ret
sub
je,pt
cmpsb
out
xlat
call
mov
ret
sbbl
sub
or
in
test
mov
mov
fiadds
jne
xor
or
or
mov
xlat
xchg
aam
push
imul
mov
push
stc
loopne
mov
pcmpeqw
mov
mov
mov
and
mov
and
dec
js
rorl
cmp
scas
jnp
cmp
mov
and
sti
leave
cmpsb
outsb
faddp
loope
jle
dec
aaa
stos
paddusw
sub
xchg
in
outsb
cmp
mov
ficompl
push
ja
std
iret
mov
lods
jecxz
mov
cmp
dec
mov
mov
fwait
std
test
and
mov
sub
pop
out
rcrb
daa
cmpsl
cmpsl
int3
lock
into
jo
cmp
mov
popf
cmp
rcr
mov
sahf
dec
cwtl
pop
ret
std
cmc
clc
jecxz
in
xchg
cmpsb
dec
test
xor
idivl
lea
mov
in
mov
inc
rep
outsb
lods
clc
mov
bnd
mov
jnp
adc
loope
iret
jb
sti
pop
fwait
movsb
xor
mov
mov
mov
insl
xchg
jnp
in
sbb
push
bnd
and
out
mov
jmp
cld
push
mov
mov
out
std
add
xor
cs
jl
pop
mov
out
fldenv
pop
jb
lock
addl
or
popa
dec
lahf
int
js
incl
add
lods
ficompl
ret
shl
shrl
xchg
popa
nop
inc
stos
and
clc
ror
xor
pop
mov
add
insb
addl
or
mov
dec
icebp
sub
mov
ficoms
push
sub
push
and
ss
cmp
pop
pop
or
mov
xlat
shl
mov
call
fistps
pop
fsubs
xchg
jb
xorl
daa
or
fstl
jo
or
adc
xchg
out
les
fsts
adc
push
cs
jne
xlat
test
pop
cmp
sub
add
mov
sub
mov
dec
int
mov
loopne
enter
mov
icebp
rol
inc
jmp
cmc
mov
test
xor
pop
out
xchg
test
push
and
push
xchg
loop
aaa
inc
clc
jne
fidivrl
mov
and
mov
call
add
js
adc
and
es
jecxz
and
mov
ret
movsl
out
sub
dec
sbbl
jnp
lds
lods
mov
sbb
or
lods
pusha
movsl
mov
mov
sbb
push
mov
or
mov
or
sub
mov
stos
sub
jno
imul
xor
mov
sbb
sbb
in
lea
icebp
add
fnsave
push
push
dec
inc
daa
ret
hlt
mov
inc
cmpsb
movsb
idivl
movsl
add
ja
pop
sahf
inc
jbe
jnp
aam
jne
add
dec
movsb
sbb
inc
push
cmpsb
push
stos
jg
cmp
cmp
xor
clc
jno
jge
push
nop
mov
rcrb
fldt
push
pop
push
scas
adc
aam
xlat
shlb
daa
daa
ljmp
or
ja
jnp
stos
add
lds
add
ja
shl
mov
add
mov
mov
sbb
aad
push
pop
enter
sub
add
lods
cmpsl
mov
mov
mov
sub
fstpt
popf
mov
outsb
mov
mov
jge
sbbl
push
jge
xchg
loope
dec
adc
cmpsb
arpl
repnz
aaa
lods
mov
pop
aaa
push
jl
aam
dec
cwtl
mov
and
mov
lret
adc
cmp
int3
orl
jnp
shlb
fcom
add
mov
icebp
shll
mov
les
push
mul
out
clc
sbb
sub
lea
jmp
lds
out
xchg
inc
ret
adc
mov
cmp
push
xor
dec
ja
call
bound
jmp
lret
jno
lea
inc
sbb
icebp
add
shrb
or
in
dec
fldenv
and
cwtl
mov
push
out
sbb
data16
dec
mov
cs
cli
jmp
jg
ret
enter
movsl
movsl
into
loop
mov
mov
shlb
icebp
mov
js
mov
in
mov
in
ret
and
push
stos
lods
fwait
add
rcrb
add
push
iret
inc
sub
rol
orb
push
fnsave
call
call
pop
inc
sbb
fsub
add
cltd
xchg
sub
inc
jbe
xchg
pop
inc
jne
sti
mov
pop
mov
cmp
adc
es
aas
ljmp
retw
lret
outsb
fs
sub
int
add
imul
movsb
into
imul
jb
push
add
lret
pop
and
push
sbb
push
or
fs
xchg
enter
add
mov
push
roll
pop
xor
es
and
push
xor
ljmp
and
or
jb
or
mov
in
arpl
mov
ljmp
je
mov
ss
add
push
or
jne
sub
inc
scas
xlat
dec
inc
sbb
add
mov
call
ret
mov
add
cmp
aad
lea
or
mov
cmpsb
rorl
das
insl
mov
sub
jb
lds
xor
jnp
pushf
or
sbb
fiadds
cmpsb
xchg
mov
jo
sub
mov
fbstp
and
xor
lds
stos
hlt
in
ret
rorb
dec
les
or
mov
cmp
push
fisubrs
aam
mov
sbb
sbb
icebp
jl
rcpps
jecxz
mov
sti
mov
test
dec
add
mov
fsubl
and
xchg
bound
and
sub
inc
sahf
push
pusha
dec
jmp
ret
push
loop
adc
xor
xchg
pushf
lret
mov
sbb
test
icebp
push
call
js
test
sbb
idivb
push
push
pop
and
lods
push
test
rorb
pop
xlat
pop
call
in
insb
int
bound
add
mov
daa
mov
popl
fwait
in
mov
out
jb
add
stos
fwait
cmpsb
aam
aam
addl
dec
sbb
jp
add
pop
test
mov
inc
das
negl
mov
call
jecxz
int
push
inc
mov
jge
fldt
ds
fcmovne
insb
cmp
daa
jge
or
aam
adc
js
lock
outsb
fistl
dec
push
sub
dec
test
jl
stos
push
test
xchg
popa
sub
pop
iret
sbb
and
test
loopne
lods
enter
push
add
adc
dec
ja
pop
addb
mov
dec
pop
leave
mov
ret
subb
jns
inc
cmpsl
or
xor
add
nop
pop
pop
mov
test
mov
ret
and
and
int
rclb
jge
pop
sub
push
mov
cmpsb
pushf
sub
movb
sub
add
push
test
shrl
push
jmp
ret
pop
cmpsb
mov
adc
enter
pop
lahf
test
loopne
js
test
sbb
jnp
bound
mov
jo
and
jne
and
cmpsl
push
js
inc
arpl
sbb
in
popl
jne
xor
pop
xor
inc
adc
cmp
xchg
call
xor
sub
mov
add
push
pop
sub
int
cmpsl
dec
and
push
pop
cmc
pop
out
test
jo
jo
leave
push
adc
add
add
call
mov
fsubrl
sub
add
adcl
and
int
imul
xchg
dec
sbb
stos
mov
push
or
stos
sub
dec
out
xlat
and
add
das
xor
je
sub
lods
scas
mov
in
lcall
stos
pop
in
inc
roll
and
je
mov
adc
ljmp
lcall
mov
push
jl
sbb
pop
dec
test
and
jo
add
add
mov
pusha
push
mov
hlt
out
and
inc
imul
js
mov
adc
fadd
dec
pop
lock
sub
out
cmp
jb
inc
mov
mov
pop
jmp
cmp
push
idivl
rcll
and
pop
into
leave
push
jp,pt
push
nop
repz
mov
sub
inc
out
hlt
xchg
fstl
loop
pop
cwtl
adc
or
nop
sar
jne
scas
ss
xlat
ret
push
cmc
add
das
ret
loop
stos
es
icebp
jmp
jnp
sub
sti
inc
scas
es
xchg
jnp
jmp
pusha
mov
fs
adc
test
push
xchg
adc
arpl
hlt
pop
mov
push
jp
lods
mov
mov
loope,pn
ljmp
mov
sbb
add
out
test
dec
gs
int3
adc
lds
out
mov
xor
add
xchg
insw
adc
call
mov
imul
cmc
cmp
sub
jmp
cmp
cmp
test
add
xchg
popa
mov
cmp
jns
pop
out
sub
outsb
insl
jo
popa
cmpl
cmp
or
jl
cmpl
pop
dec
iret
inc
sbb
mov
rcrb
orl
mov
add
test
xor
jno
sti
xor
stos
mov
mov
inc
sbb
mov
dec
xchg
mov
sbb
fwait
cmpsl
xchg
fstl
sub
aam
imul
mov
jecxz
pop
fisubrs
sbb
mov
sub
pop
push
sub
xchg
push
jns
push
lods
mov
jbe
test
mov
mov
jno
xchg
and
enter
jl
rorl
jle
mov
cmpsl
jns
cmc
add
add
mov
je
movsb
ret
mov
sbb
ret
js
fildll
rcr
jb
xchg
jbe
loop
add
jnp
push
outsl
and
aad
lods
aaa
pop
sbb
sub
daa
mov
xchg
in
call
mov
andb
loopne
jge
mov
fwait
call
pop
push
imul
jge
test
push
sbb
aaa
add
iret
daa
aad
mov
and
js
sbb
mov
daa
jnp
mov
dec
or
insl
push
cmpsl
in
adc
out
scas
stos
je
sub
mov
mov
lret
pinsrw
addr16
add
xchg
roll
push
outsl
add
out
or
pusha
mov
jbe,pt
imul
inc
in
lods
mov
push
arpl
inc
sbb
data16
adc
lar
add
lods
push
mov
aas
sub
jmp
cmpsb
mov
sbb
aas
jp
inc
and
aam
fcmovnbe
jo
jo
sbb
inc
das
in
outsb
lods
inc
sbb
test
jge
sub
mov
jmp
cld
pop
mov
repnz
sbb
or
pop
pop
rcll
and
sbb
loope
ret
out
icebp
addb
repz
aad
test
jge
cmp
cmp
or
jg
and
sbbl
std
add
ficomps
jl
cmpsb
adc
inc
or
jno
and
push
jg
mov
sub
out
mov
cmp
pop
orl
adc
pop
pop
inc
or
mov
pushf
cld
or
add
loope
test
cmp
jecxz
icebp
jo
push
inc
mov
outsb
fisttpl
sub
push
jecxz
xchg
jmp
jb
and
adc
in
pop
sbb
adc
xor
test
ja
jecxz
sbb
es
or
pop
sub
mov
cmp
xchg
xchg
mov
shlb
test
addl
sbb
add
clc
and
mov
adc
loopne
mov
mov
ret
xchg
ret
test
mov
pop
add
adc
ret
sbb
xlat
sub
inc
adc
fistl
push
gs
loopne
cmc
test
mov
mov
xchg
cs
push
cmpsl
push
test
pusha
pop
push
sbb
loop
push
ret
dec
sub
adc
imul
cmp
popl
fstps
pushl
mov
jns
jbe
sbb
cs
xchg
lea
mov
imul
mov
scas
pop
sub
adc
hlt
js
push
es
push
icebp
dec
pop
test
sti
leave
cmp
dec
dec
and
addb
mov
imul
iret
cmp
mov
divl
inc
fld
popf
pop
in
jmp
xchg
mov
rcrb
aaa
cmp
lock
ljmp
xlat
fnsave
daa
adc
inc
lret
push
jg
xor
dec
mov
lods
pop
push
and
or
loopne
lea
add
enter
mov
arpl
push
pusha
sbb
push
pop
or
cmp
out
add
sub
adc
or
cmc
dec
dec
cmc
hlt
dec
pop
idivb
aam
lret
lock
push
in
adc
lock
hlt
jnp
mov
sub
rorb
add
mov
jo
lock
dec
jnp
in
inc
mov
and
mov
add
add
push
cmpsl
mov
cmpl
cmp
pop
les
nop
add
mov
pop
mov
mov
ds
cmp
add
iret
cmpl
xchg
scas
leave
fwait
mov
mov
test
jbe
add
aad
or
sbb
arpl
filds
dec
js
fcoms
scas
sub
adc
xchg
out
jmp
sbb
and
sahf
es
aam
adc
add
mov
xchg
insb
mov
or
lcall
xor
mov
cmp
add
adc
mov
js,pt
push
or
rorl
ja
call
inc
ret
or
add
bndldx
arpl
aad
or
mov
sub
es
pop
sbb
pusha
test
pop
xor
sub
sub
push
mov
loope
lahf
jno
ret
jp
inc
mov
loop
or
xchg
push
out
add
ret
js
jns
or
xlat
mov
aam
movsl
aam
loopne
jmp
pop
sbb
pop
dec
mov
add
and
and
push
push
sbb
pop
add
and
jecxz
iret
push
ljmp
jp
pop
sbb
arpl
adc
loop
xor
stos
ja
mull
xor
inc
adc
sub
add
pop
ret
push
shll
mov
popa
xor
fistl
fwait
lds
pop
sub
add
adc
jne
lea
xlat
je
lods
jno
out
mov
loope
jnp
stos
dec
lods
mov
adc
in
add
push
lahf
jb
or
inc
mov
cmp
inc
add
ret
les
pop
xchg
sbbl
rorl
add
cmp
add
add
xchg
xorl
lock
test
orb
ffreep
rclb
ror
pop
sub
mul
lcall
inc
push
sbb
movsb
adc
call
xchg
pushf
das
shll
cmc
xlat
mov
nop
ljmp
xchg
jmp
fwait
cmp
mov
dec
pop
mov
mov
add
inc
inc
pop
pop
dec
add
and
xor
add
jp
pusha
imul
mov
nop
pop
js
std
xchg
dec
paddusb
jmp
sbb
cmp
push
mov
cld
ret
jno
jno
pop
jb
xchg
mov
ret
data16
jnp
adc
mov
shr
arpl
loope
cmp
movsl
pop
pop
push
jnp
pop
pushf
mov
lods
pop
mov
ss
adc
or
stos
insb
push
sahf
mov
cmpsl
mov
pop
cmc
popa
lds
adc
ret
sbb
dec
leave
jmp
jno
aaa
fsubrl
loope
loope
and
js
push
cli
adc
sub
loope
pop
shrb
xchg
and
or
test
loop
pushf
cmp
ret
addr16
xor
push
mov
and
push
add
cld
inc
arpl
pop
push
xchg
pop
lods
add
and
test
pop
lods
ljmp
iret
mov
mov
lods
dec
lods
jp
stos
mov
jo
loope,pt
nop
xchg
push
sub
daa
insl
xlat
in
add
xor
das
test
cmpsb
aam
sub
and
inc
hlt
jecxz
dec
or
and
out
adc
in
flds
mov
and
inc
pop
loopne
aas
lret
sbb
je
pop
pop
mov
clc
subb
push
dec
out
mov
sub
mov
jae
das
daa
push
jle
test
scas
sub
std
jb
sub
jle
fwait
and
xchg
and
fistl
hlt
sub
cmp
adc
stc
js
in
jl
cmp
mov
les
ret
stc
xchg
pop
sub
orb
sub
or
addr16
xor
cwtl
adc
jnp
inc
mov
insl
pop
js
fdivr
mov
pop
stc
cli
and
inc
cwtd
sbb
ficoms
cmp
pop
popa
adc
mov
push
in
xchg
and
lock
jecxz
pop
push
ret
movsb
or
popa
dec
add
lock
pusha
adc
add
jmp
pop
outsb
mov
xchg
fldl
dec
mov
xor
dec
push
es
inc
nop
out
and
push
cli
fnstenv
pop
mov
push
jbe
sub
adc
pop
orb
dec
push
js
pop
inc
js
int
aaa
cmp
xchg
xchg
add
mov
scas
jb
mov
repnz
jbe
add
push
and
nop
jno
xor
jb
sbb
push
int3
adc
cmp
aaa
pop
dec
aam
inc
xor
fwait
ljmp
xchg
roll
bound
mov
xchg
or
or
mov
add
ret
jle
jge
aas
rclb
sub
imul
test
dec
and
mov
push
clc
push
in
add
or
jecxz
bound
cli
jp
mov
std
hlt
icebp
js,pn
imul
jl
adc
jnp
ja
pusha
pusha
ret
lret
add
push
sti
inc
aaa
or
in
xchg
ss
cmpsl
or
inc
test
push
adc
icebp
jp
add
push
icebp
jle
pop
aam
stos
lret
call
jl
cmp
push
jmp
jecxz,pt
jmp
popa
orl
je
xchg
pop
mov
jge
xchg
push
mov
inc
ja
push
testb
aas
sar
inc
add
lock
pop
das
mov
fcoml
and
jp
jge
sub
cmp
orl
ljmp
out
loope
lret
mov
inc
pop
sbb
push
jmp
push
mov
pop
sbb
sahf
shrb
sbb
inc
mov
int3
xchg
movl
pop
lock
pop
adc
mov
xchg
scas
das
inc
cmpsb
pop
xchg
iret
repz
inc
scas
fstpl
movsl
push
mov
daa
in
dec
cmpsl
es
jl
cmp
inc
cmpsb
lock
scas
cwtl
or
sub
add
push
rcrb
movsl
bound
and
shrb
jmp
push
ret
arpl
pop
mov
push
xchg
mov
aad
lods
push
xor
push
xchg
fmul
stos
lret
shl
imul
std
adcl
jl
adc
imul
dec
xchg
cmp
cmc
cmp
filds
popa
test
mov
inc
arpl
imul
xor
add
sub
xor
addb
sub
pop
popa
in
movsl
stc
test
add
inc
inc
adc
test
ss
pop
ljmp
inc
popa
mov
lcall
mov
jp
nop
cmp
aas
aas
cmp
cmp
movsb
loopne
pop
inc
or
icebp
sbb
fistps
loope
dec
lock
adc
lock
cmpl
adc
orl
jno
shll
xadd
mov
rclb
xchg
out
stos
push
mov
sbb
xchg
sbb
pop
jns
add
sti
xor
stc
jne
mov
enter
push
iret
js
ret
push
jbe
jge
xor
lock
ret
shrl
imul
std
fcmovnbe
dec
mov
push
ret
inc
out
sub
mov
in
push
mov
leave
js
mov
fdivrl
mov
daa
sub
xchg
out
sbb
outsl
mov
mov
or
roll
add
cmc
push
add
jo
push
cmpsb
and
sbb
pop
xor
pop
shll
test
jecxz
leave
pop
cmp
test
mov
push
mov
sub
xchg
push
aad
test
lods
and
into
mov
inc
pop
push
xor
sti
mov
jg
xlat
shrl
aad
add
dec
fdivs
adc
or
push
add
inc
push
pop
out
sbb
ret
lea
aad
cmpsb
pop
popa
or
sahf
push
push
or
push
xchg
sbb
push
roll
out
and
nop
inc
gs
mov
and
stos
sub
addl
sub
outsb
xor
je
cmp
dec
cmp
aad
pusha
outsb
ss
add
or
loopne
inc
jmp
mov
fildl
movsb
fwait
js
sbb
mov
mov
dec
jno
test
ja
mov
mov
lcall
cmc
rcrb
xlat
ja
push
cs
push
pop
inc
pop
les
and
bound
dec
out
imul
jno
repz
sub
sub
mov
jp
jnp
or
mov
ret
cmp
push
mov
add
mov
pop
bound
fisttps
mov
dec
add
mov
mov
sub
mov
roll
mov
push
sub
inc
ret
or
cmp
or
loopne
scas
fwait
mov
sbb
pusha
mov
repz
js
or
movsb
push
lahf
mov
mov
sub
sarl
ror
lds
push
mov
add
cmpl
cmp
int
jb
xor
sbbl
mov
sub
ljmp
adcl
scas
fwait
les
lret
pop
jne
adc
adc
dec
or
pop
fbld
mov
ljmp
sub
jbe
call
rclb
lods
cmp
xchg
test
fisttpll
lret
repz
xor
mov
push
lods
add
mov
cmp
nop
gs
push
xchg
into
or
adc
xor
dec
scas
pop
in
or
lea
daa
or
orb
jae
imul
or
push
sub
xor
call
sub
je
cmp
arpl
mov
aad
xor
and
sti
popl
pop
inc
jnp
test
ret
push
pop
xor
mov
mov
sub
sub
and
stos
add
adc
cmp
sub
push
pop
adc
in
adc
inc
scas
movsl
scas
cmp
add
dec
out
jae
enter
inc
mov
dec
repz
pusha
repz
bound
xchg
imul
jecxz,pn
std
scas
xor
pop
loope
sub
push
or
and
fbld
in
flds
rcrb
push
and
shlb
jns
cmp
aam
rol
push
jg
or
mov
mov
cmp
lcall
mov
mov
xor
mov
lds
out
inc
push
adc
dec
fs
add
les
popf
cmpsl
add
sbb
jns
mov
xlat
frstpm(287
xlat
lds
add
sub
cld
mov
pop
cwtl
add
ret
shrb
xchg
sub
aam
xchg
js
and
jl
pop
rorb
cmp
ret
or
or
arpl
subb
rorb
ljmp
or
push
fmuls
mov
push
push
cmp
mov
mov
xor
sub
push
jo
pop
sub
daa
in
pusha
outsl
cwtl
and
push
mov
sbb
mov
fistpll
xchg
xchg
jecxz
ret
jmp
add
pop
das
pop
bound
pop
lods
js
dec
inc
mov
xor
pop
out
movsl
mov
cmp
dec
cmp
in
add
xorl
sbb
sub
mov
inc
cs
stos
cmpsb
movsl
shll
pop
scas
ucomiss
adc
jmp
imulb
shlb
inc
push
push
nop
clc
les
clc
add
sub
cmpsl
xchg
insl
sub
ljmp
push
stos
imull
mov
in
xor
lods
or
dec
shlb
push
sarl
sub
xor
mov
jmp
adc
arpl
and
lock
pusha
repz
bound
sub
shll
adc
cs
outsb
cmp
ljmp
cmp
rorb
pop
faddl
lea
sub
lds
cmp
aaa
mov
add
sub
subb
sub
inc
jg
xchg
icebp
lret
sarl
jno
imul
stos
ss
mov
in
dec
fldenv
push
rclb
add
rclb
xchg
xor
out
ret
les
mov
daa
jle
cs
jno
mov
add
cmp
mov
adc
and
push
jmp
sahf
bound
jg
out
pop
sbb
test
push
push
out
rorb
inc
insl
icebp
xchg
pop
xchg
or
sbb
in
jge
pop
frstor
push
inc
dec
test
sbb
xchg
insl
cwtl
adc
cmp
xor
std
nop
sbb
popa
adc
sbb
aas
loope
pop
ret
sbb
imul
dec
xor
out
or
jp
push
loope
sbb
adc
adc
lds
mov
mov
faddl
adcl
ret
mov
or
jp
xor
push
maskmovq
testl
addb
ss
mov
pop
enter
mov
jmp
loope
cmp
mov
xor
push
add
arpl
dec
xchg
add
mulps
or
dec
inc
add
mov
mov
cs
xchg
mov
dec
mov
and
rol
or
inc
fcoms
repz
daa
jno
data16
bound
icebp
adc
add
arpl
sub
sub
inc
push
sub
cmp
test
mov
bnd
std
jmp
leave
ret
add
dec
inc
jns
aaa
xor
jmp
add
pushf
dec
cmp
xchg
jmp
jp
mov
shr
testl
sbb
xor
movsb
dec
cmc
or
les
xchg
and
aam
cmp
pop
cmpsb
dec
adc
aaa
and
jne
sbb
adc
inc
lods
test
pop
mov
lods
jmp
inc
mov
notl
lods
pop
fstpl
push
popa
add
xor
hlt
rcl
in
shll
rcrb
xchg
pop
sub
ljmp
jmp
aad
mov
rol
push
loopne
inc
cmp
and
and
ja
cwtl
in
adc
in
jb
adc
out
ds
cmp
popa
rolb
fwait
pop
and
stos
cmpsb
push
xor
push
xchg
sbb
inc
dec
mov
shl
mov
in
sub
inc
cmp
inc
lret
add
gs
adc
pop
aad
je
test
movsb
pop
dec
lret
das
sbb
inc
inc
and
add
mov
xorl
mov
mov
or
and
xor
test
ret
push
sub
mov
loopne
jge
and
popf
outsb
daa
das
mov
cmp
mov
test
sbb
or
lock
xor
adc
mov
adc
push
es
pop
and
sub
adc
aad
adc
das
movsl
call
jns
jge
mov
imul
cwtl
mov
pop
movsl
dec
push
sub
subb
pop
inc
insl
fistl
fsubl
sub
sahf
test
cmp
pop
mov
shl
aad
fcoms
and
push
mov
cmpl
jnp
and
inc
lea
mov
dec
inc
in
and
mov
add
pop
dec
cmp
and
lods
jns
inc
jo
ret
jo
pusha
sub
mov
xchg
stc
jl
popa
or
dec
fnsave
mov
imul
cmp
mov
js
mov
push
daa
mov
add
ret
mov
movw
sbb
gs
sti
ret
jecxz
mov
pushf
sub
icebp
jno
and
jmp
jo
inc
scas
adc
xchg
je
mov
mov
add
movsb
sbb
aam
push
stos
dec
push
or
out
les
mov
pop
jmp
icebp
popa
mov
aaa
leave
mov
aad
andl
add
inc
pop
pop
out
shll
lds
mov
je
push
dec
mov
popf
mov
adc
mov
cmp
fcomi
pusha
movsl
mov
sub
pop
pop
cmpsl
movsb
out
outsl
movsl
imul
mov
and
test
push
mov
jmp
add
sbb
push
pop
or
test
add
js
adc
fcompl
push
mov
add
leave
cmp
dec
or
sbbl
pop
dec
mov
xchg
movb
ficoml
test
cmp
fwait
sbb
sub
daa
lock
cs
pop
pop
inc
mov
lock
mov
mov
loop
add
push
ljmp
adc
pop
sbb
sbb
decb
es
mov
and
mov
pop
push
push
or
loope
mov
mov
movb
int
add
fsubl
xor
mov
dec
lahf
fwait
xor
pushf
lea
jecxz
sub
cmp
push
ljmp
pop
in
cmpsl
test
sub
mov
and
sbb
sub
sbb
xchg
jp
adc
and
daa
dec
sbb
dec
jo
pop
fstpt
sbb
jnp
pop
mov
mov
pop
or
dec
mov
mov
dec
adc
test
sbb
or
jns
into
push
cmpsl
loopne
dec
hlt
int
push
arpl
mov
cmp
stc
imul
push
pop
pop
sub
sub
and
jbe
in
cs
aam
cmp
jmp
dec
sub
inc
mov
frstpm(287
std
and
shrb
jnp
lret
inc
daa
nop
pop
dec
rclb
dec
imulb
iret
push
pop
push
nop
cmp
bound
test
iret
sub
cmp
jb
mov
mov
fildll
testl
or
pop
adc
fists
fidivl
cmpl
sbb
call
xor
mov
daa
stos
sub
push
jmp
xlat
sbb
mov
mov
movsb
and
mov
fcoms
sbb
int3
mov
pop
inc
xor
mov
xchg
inc
mov
test
cwtl
mov
add
scas
mov
leave
inc
cmp
cmc
lock
lods
in
jmp
es
dec
adc
stos
ret
imull
out
orb
stos
popf
adc
pop
in
ljmp
xor
or
or
add
jp
xchg
loop
or
lock
push
cmpl
dec
mov
ret
or
hlt
dec
outsl
adc
loopne
cmp
cli
add
test
fidivrs
rcrl
mov
lods
fs
mov
cmp
push
scas
xchg
inc
es
add
push
jnp
test
add
inc
mov
mov
inc
cmp
xchg
sub
add
adc
scas
jne
xchg
xchg
push
test
lock
add
or
test
mov
inc
scas
add
mov
scas
mov
add
or
fmull
imul
push
add
loopne
ja
mov
lock
xor
fsts
add
mov
ret
dec
jmp
mov
dec
das
es
pop
xor
push
dec
push
mov
jnp
into
daa
jno
ds
ficoml
sbb
push
cld
rcl
pop
mov
jno
xchg
movsb
ja
ja
dec
dec
sbb
xchg
push
xchg
imul
in
je
lahf
xchg
dec
loop
sub
lods
cs
add
inc
or
aam
push
push
or
mov
pop
cmpsl
cmp
js
test
sub
or
cmp
push
mov
daa
adc
pop
in
mov
les
das
dec
imul
nop
jg
pop
pop
push
adc
mov
xor
sbb
testl
jecxz
and
dec
lret
or
mov
ret
leave
scas
mov
mov
xchg
inc
shr
jnp
mov
xchg
pop
outsb
add
or
test
pop
jecxz
mov
mov
sub
outsl
adc
jge
pop
mov
jge
push
andb
pop
xchg
dec
pop
out
or
sbb
sbb
popa
shrl
mov
xor
aas
arpl
pop
bound
xor
sub
icebp
add
mov
mov
adc
orl
pop
rolb
jo
shl
xor
mov
dec
inc
movsl
pop
inc
lea
ret
jge
inc
inc
sbb
ret
push
xor
shl
inc
dec
imul
adc
xchg
mov
fmull
scas
inc
aaa
shlb
sub
fstl
dec
dec
jl
xlat
xchg
mov
cltd
xchg
lds
adc
icebp
mov
add
add
inc
jno
dec
dec
stos
sbb
and
test
or
cmpsl
pop
outsl
jecxz
in
xchg
cs
pushf
mov
adc
pushf
jp
ffree
jle
mov
adc
imul
pop
sarl
mov
imul
xchg
sub
popa
movsb
sarl
dec
inc
push
and
stos
mov
adc
cmp
test
jecxz
mov
and
addl
rcrb
jo
imul
sub
dec
or
aad
icebp
fs
mov
xchg
inc
mov
pusha
mov
cmpsl
xchg
dec
or
add
xor
shlb
adc
stos
inc
sti
mov
aam
test
or
push
orl
jo
fsubl
xrelease
push
pop
fdivr
mov
inc
popf
lcall
xor
shll
fistpl
out
pop
mov
jno
xchg
loop
jmp
ret
xor
sub
fstpt
cltd
jno
jecxz
dec
push
sbb
jecxz
sti
add
adc
add
sahf
adc
pop
mov
call
cmp
loop
jne
cmpsb
dec
sub
xchg
fadds
mov
pop
rclb
out
imul
fisubl
bound
lcall
inc
loope
mov
sarl
rorb
test
and
push
repz
cmp
loopne
rol
jmp
repz
ret
pop
mov
add
add
pop
xchg
push
xor
cs
mov
ljmp
or
mov
jmp
loopne
inc
arpl
pop
insl
mov
add
xor
and
inc
pop
fmul
and
ret
inc
sub
icebp
adc
fldenv
xchg
in
icebp
xchg
test
xlat
xchg
mov
rorb
insl
ret
aas
outsb
xchg
jp
xchg
shlb
jo
mov
pop
jae
adc
pop
jge
sbb
add
push
mull
daa
fucomi
or
es
jo
mov
adc
or
insl
sub
dec
adc
dec
dec
or
lods
dec
mov
xlat
inc
jmp
jnp
arpl
push
sbb
adc
pop
mov
sub
testl
ffree
loope
testl
pop
xor
xor
mov
xor
outsl
pusha
inc
ret
lock
inc
movb
mov
insb
xchg
fs
stos
pop
xchg
icebp
icebp
ret
dec
push
mov
xor
pop
sub
fsubs
insb
mov
test
dec
icebp
ss
mov
adc
pop
pop
loop
imul
jns
sub
jmp
sub
or
add
cmc
xor
mov
mov
lret
adc
sbb
sahf
jp
add
jecxz
push
aam
in
xchg
in
in
cmp
push
cmpxchg
mov
sahf
loopne
sub
fisttpl
sbb
lock
adc
inc
push
adc
pop
pusha
filds
je
jne
push
add
test
test
cmc
jp
cld
adcl
mov
loopne
cmpsl
push
fadds
les
pop
addl
add
dec
in
ljmp
mov
stc
sbb
lret
xchg
dec
fstpt
inc
clc
outsb
or
inc
pop
jge
stos
add
xor
lahf
dec
lods
jl
addb
pushf
jge
push
push
testl
les
roll
repz
imul
mov
out
lahf
cmp
dec
pop
aam
adc
xor
jb
arpl
and
daa
int3
adc
push
lods
mov
loopne
pusha
sarl
pop
push
jnp
xor
into
fs
mov
aam
shll
mov
pop
jo
push
movd
mov
pop
dec
sbbl
dec
xor
fimuls
daa
inc
or
add
or
xorl
nop
xchg
or
jne
add
adc
loopnew
jno
pop
in
inc
loopne
or
jnp
add
sbb
fbld
push
add
xor
fildl
pop
inc
mov
cli
outsl
lods
sbb
notl
sbb
cmp
popa
mov
mov
pop
xchg
sub
imul
xchg
cwtl
add
xchg
mov
sarb
dec
fwait
add
sbb
sub
push
inc
aam
push
dec
mov
std
xor
push
cmp
pop
or
and
sarl
pop
jo
xchg
js
adc
push
inc
push
adc
dec
jo
jp
mov
mov
mov
mov
jl
jo
aad
sub
shlb
or
lea
shrb
add
inc
das
mov
aam
fwait
inc
out
jmp
aaa
mov
mov
data16
in
jno
mov
pcmpgtd
fdivrs
inc
lods
test
decl
je
sbbl
dec
and
mov
mov
sub
push
inc
dec
or
loopne
push
ret
mov
mov
or
and
or
ss
push
jge
add
mov
or
mov
push
push
adcb
aam
xor
movsb
pop
xchg
pop
or
xor
imul
cmp
cmp
aam
cmpsl
pop
je
xchg
dec
js
icebp
pop
and
sbb
pusha
dec
add
addr16
inc
cmp
fwait
sahf
pop
sub
mov
push
push
jecxz
adc
pop
movsb
mov
inc
push
push
in
pop
pop
lock
add
mov
pop
push
inc
scas
jne
sbb
jae
adc
movsl
lcallw
push
in
fisubl
mov
mov
arpl
shrb
test
adc
ret
ret
popa
dec
push
and
jle
mov
cmp
mov
fidivrl
cmp
push
ds
xor
inc
sbb
mov
vpcmpeqb
insl
dec
sbb
and
push
or
data16
lds
sub
std
cli
jne
pop
ja
nop
adc
inc
mov
adc
rorb
jno
pop
fisubrs
adc
pop
mov
add
andb
dec
lea
inc
mov
ljmp
inc
mov
push
add
add
loopne
repz
test
inc
out
sbb
repz
mov
inc
cmp
iret
outsb
adc
mov
jns
mov
test
loope
jle
js
jae
mov
adc
adc
sub
lods
into
mov
mov
dec
jo
xlat
adc
movsb
inc
out
inc
mov
mov
add
cmp
sub
fisttps
add
cmp
jno
push
mov
sub
rep
mov
ror
roll
xchg
push
lahf
leave
clc
mov
dec
inc
testb
clc
pop
jbe
inc
mov
arpl
divl
std
mov
sub
and
mov
inc
mov
pop
daa
test
es
jne
loopne
sbb
mov
jo
xchg
xorb
loope
lock
arpl
leave
shl
jb
or
ret
pop
or
fstpt
jb
out
test
and
xchg
or
pop
in
sub
repz
inc
pop
and
mov
pop
and
lods
inc
jbe
dec
lcall
shrl
shr
xchg
mov
daa
xchg
sbb
pop
fdivrs
mov
pushf
orb
push
sub
int3
or
scas
adc
sub
xchg
fsubs
frstor
and
push
fidivl
aas
adc
xchg
stos
pop
sbbl
imul
ja
jl
les
pop
sbb
sub
push
stos
iret
inc
push
cmp
sub
fmuls
loopne
cwtl
push
and
adc
add
jo
or
int3
pop
pop
popf
jecxz
int3
mov
xchg
and
dec
imul
pop
inc
jo
add
dec
cmp
add
arpl
jb
cmpsl
add
mov
mov
in
jno
or
jne
inc
arpl
loope
je
jo
jge
arpl
inc
jae
xor
sti
sub
jmp
xlat
sbb
arpl
jge
out
xor
mov
mov
jno
gs
sub
mov
out
push
insb
and
movsb
fisttps
popa
loopne
push
roll
adc
mov
add
orb
sub
cmc
or
add
sbb
add
ljmp
add
ret
iret
jo
push
shlb
push
jmp
movsl
mov
out
sbb
ret
test
pop
mov
shlb
mov
cmpsl
push
mov
and
dec
or
dec
adc
sub
or
mov
ret
push
pop
cmp
std
push
xchg
or
scas
pop
pop
mov
adc
xchg
mov
movsb
jnp
push
outsb
js
sub
inc
leave
xchg
xchg
data16
loopne
nop
push
sarl
mov
push
mov
add
mov
xorb
add
inc
pop
add
xchg
aaa
sbb
std
and
push
out
sbb
js
loopne
mov
sahf
sbb
fst
bound
loope
test
ret
filds
mov
mov
fs
push
mov
pop
loope
sbb
push
pop
test
popf
add
push
sahf
mov
jp
mov
test
jbe
jecxz
fwait
rcrl
push
nop
dec
int
pop
add
or
adc
push
jno,pt
and
adc
mov
xchg
dec
in
lock
jne
shl
sbb
xlat
cmp
add
xchg
pop
mov
push
scas
mov
mov
xchg
dec
dec
scas
sub
out
arpl
lods
or
push
jnp
sub
ds
daa
daa
fwait
jecxz
ds
ss
or
out
das
sbb
shll
in
add
push
add
xchg
ss
sub
or
push
cmp
in
nop
sarl
sbb
divl
adc
outsb
mov
sti
stos
pop
cmp
mov
dec
sbb
fwait
loope
or
int
pop
mov
inc
fnstsw
xchg
mov
add
cmp
lds
mov
inc
jae
in
sub
pop
add
jno
sbbl
cmp
add
js
das
lret
or
push
mov
add
and
fwait
mov
jb
sub
jae
rorl
fstpt
test
sbb
rclb
pop
cmp
or
fwait
pop
sub
jg
movsb
je
dec
add
pop
sahf
inc
sub
rcrl
mov
jge
call
push
arpl
jecxz
shr
jecxz
lahf
xchg
ficomps
sub
cmp
jle
or
jecxz
decl
xchg
mov
aam
xchg
cmp
subb
out
aaa
mov
cmp
lahf
jmp
aad
push
and
lock
loope
jbe
mov
flds
es
push
inc
movsb
inc
cmp
xor
out
popa
sub
sbb
inc
xchg
mov
jnp
sbb
movsb
jl
inc
mov
inc
xchg
repz
mov
and
dec
jecxz
dec
mov
pop
dec
lods
rcrl
test
into
bound
pop
mov
les
or
sub
mov
push
sub
dec
repz
mov
cmpsb
stos
rolb
jo
and
pop
scas
and
or
fists
addr16
add
adc
adc
inc
repnz
lds
test
jge
aad
daa
retw
insb
add
and
inc
loope
inc
mov
sub
test
mov
sti
push
pushf
movsb
xchg
andl
mov
ret
cld
xchg
xlat
mov
fcoms
add
sbb
imull
repz
mov
loopne
inc
sbb
dec
sbb
sti
push
inc
adc
lds
loop
ss
sub
lods
adc
xorl
dec
jge
mov
dec
mov
addr16
sbb
mov
ret
arpl
das
ss
das
dec
jo
movl
mov
add
fstpl
add
cmp
jp
imul
mov
aad
xor
cmpsb
mov
mov
and
xorb
out
and
dec
das
sarl
cmp
int
jge
jnp
add
mov
sub
dec
add
int
jns
cli
fstpl
sub
ja
ds
ss
ds
and
daa
push
add
repz
cmpsb
lock
jnp
movsl
into
or
rorb
stc
add
dec
cmc
or
in
imul
mov
scas
xchg
jecxz
push
je
xchg
fiadds
sub
or
inc
xor
push
push
mov
lock
add
iret
push
sub
imul
repnz
jg
inc
cmp
xor
xor
mov
test
and
pop
out
jg
lea
call
jg
pop
add
xor
imul
aam
dec
cmova
jns
lret
cmpb
xchg
add
pop
push
jmp
ret
adc
dec
les
xchg
and
push
pop
mov
mov
jge
sub
pusha
sarl
or
arpl
pop
movlps
or
insl
add
xor
test
pop
push
adc
notl
jb
inc
cmp
jge
fistpll
adc
mov
movsl
daa
rorb
mov
jns
fiaddl
dec
inc
scas
aad
shrb
flds
adc
or
sbb
testl
cmp
popa
and
pushf
loop
je
adc
jb
aas
dec
mov
push
in
cmp
pop
imul
xchg
jnp
divb
sub
test
nop
in
daa
xchg
xor
mov
fsubrs
movntps
sbb
xchg
add
pop
cmp
adc
loopne
rcrl
test
das
jl
cmp
imul
inc
shlb
sahf
divb
insb
cmc
sahf
inc
sbb
je
inc
mov
js
aas
scas
mov
je
int
test
out
jb
mov
inc
pop
ljmp
lcall
xchg
test
scas
jno
sbb
or
sub
cmp
or
mov
pop
orl
pop
add
jge
xchg
pop
jae
jne
clc
lock
dec
imul
adc
inc
outsl
and
mov
or
xchg
jnp
ret
sub
test
sub
push
lods
imul
cmp
or
jmp
lock
fs
in
test
jecxz
inc
popf
fwait
sbb
addr16
mov
push
xchg
and
push
dec
loopne
inc
or
loopne
das
sbbb
ja
test
add
jb
mov
sub
cld
ret
cmpsl
xchg
sbb
andl
xor
inc
test
inc
mov
jne
add
push
fwait
popa
xor
cmpsl
sbb
sbb
loope
rorl
mov
das
shl
and
inc
pop
fldenv
mov
dec
inc
loopne
xor
insb
mov
sbbb
mov
jo
add
mov
leave
xor
sahf
dec
jle
mov
addb
jmp
aaa
je
pop
popa
stos
scas
add
or
jp
sbb
sbb
inc
roll
and
sbb
clc
popa
mov
gs
xchg
call
jo
adc
add
jo
sbb
push
xlat
add
sub
mov
iret
push
push
add
cmp
jg
fdivs
sbb
mov
mov
in
lret
dec
mov
mov
xor
popa
aam
sbb
fwait
test
je
fwait
cmpb
daa
push
cmp
aas
movsb
mov
pop
adc
xchg
push
push
setno
jae
mov
shlb
mov
cwtl
or
je
push
ret
add
imul
fistpll
dec
inc
loop
jl
repnz
test
mov
xor
jl
and
push
jno
imul
jo
xor
movsl
iret
sub
in
sbb
cli
fldenv
dec
out
ljmp
enter
rcr
add
mov
and
dec
pop
fldl
aad
jne
mov
dec
ja
pop
loope
add
jb
outsl
out
add
push
sbb
subl
mov
mov
jno
imul
push
mov
aad
dec
lds
sub
dec
jp
pop
daa
js
sbb
push
jns
jge
popa
mov
lea
xchg
sub
jge
js
mov
cmpsl
jge
push
subl
sbb
jnp
test
mov
es
arpl
or
ljmp
movsl
call
cmp
ja
push
or
mov
outsb
mov
in
inc
jle
add
in
adc
jmp
ja
add
lahf
in
inc
xchg
or
loope
xchg
sbb
pop
lret
cmovno
mov
or
inc
push
iret
cli
sub
fs
arpl
shll
ja
xchg
pop
xchg
xchg
cltd
aad
cli
xchg
xor
into
insb
sub
inc
add
pop
jmp
fidivl
rorl
mov
ds
imul
cmp
dec
shl
jge
push
jecxz
xchg
push
jo
addb
cmp
aaa
cmp
adc
arpl
enter
cli
inc
adc
jnp
cld
mov
jg
aam
pop
hlt
mov
aam
add
cmp
push
sbb
push
xchg
inc
rcrb
or
fmull
inc
lods
or
add
jg
lahf
ret
xchg
outsl
mov
lods
cmp
sbbb
repz
sbb
inc
or
add
jo
fwait
test
jno
cmpsl
imul
jl
movsl
sti
pop
adc
jne
inc
mov
std
mov
je
pop
or
mov
sbb
adc
shlb
aam
pop
and
inc
popa
add
dec
popl
inc
ss
xor
sub
push
push
cmc
cltd
add
sub
aaa
aam
sbb
sti
and
or
add
add
dec
fnsave
push
and
scas
or
dec
cmp
or
in
push
jbe
jbe
dec
xor
shl
push
adc
dec
xor
cmp
jb
push
jmp
sbb
insb
mov
out
int3
push
dec
cmp
mov
les
cmp
imul
cltd
int3
add
stos
xchg
dec
and
adc
pop
and
movsl
jae
mov
push
jmp
bswap
repz
and
inc
lea
inc
jo
add
popf
movsl
ret
outsl
inc
cmp
adc
sub
mov
pop
dec
int
mov
xchg
cld
or
les
sbb
shll
sbb
sub
fists
ja
nop
pop
mov
jnp
bound
sbb
mov
and
inc
test
lods
push
pushf
jbe
sub
int
jns
mov
fcoml
xor
lret
adc
mov
inc
xorb
lock
sarl
les
add
inc
out
pop
mov
and
out
out
pushf
rcrl
repnz
lea
lret
or
test
jmp
bnd
fcompl
arpl
in
xor
lahf
and
mov
or
adc
ds
stc
push
roll
inc
pop
popf
or
inc
push
js
imul
fildl
inc
jbe
add
adc
adc
pusha
push
xor
sub
out
rcll
jl
and
es
sbb
sahf
jbe
cmp
cltd
jecxz
add
pop
add
shrb
dec
in
push
test
jo
pop
dec
add
daa
in
aam
add
fsubs
cmpsl
testl
pop
or
cmp
add
mov
or
push
inc
gs
js
jo
inc
or
lret
fwait
mov
repz
mov
add
loopne
je
cs
lret
pop
lret
aaa
xchg
cmp
sbb
or
hlt
or
sub
add
movsl
lea
pop
jmp
mov
sub
inc
adc
pop
sub
xchg
inc
sub
in
mov
addr16
fildl
sti
cmp
push
loop
mov
xchg
cs
xor
xor
mov
add
sbb
iret
arpl
sbb
or
xorl
jge
imul
movsl
ror
shlb
fildll
lock
fstpl
addl
xor
or
sub
lret
add
cmp
sarb
sbb
movsb
pop
jns
pusha
mov
and
sbb
adc
fwait
push
pop
xlat
aam
shrb
adc
add
push
push
rcll
add
ficoms
pop
fiaddl
data16
pop
sub
dec
out
jne
insb
xor
ja,pn
mov
rorb
mov
xor
stc
adc
push
cltd
push
or
popa
stos
int3
jbe
fisubs
xchg
inc
subl
push
fsubl
or
je
xor
test
test
jno
ljmp
cmp
daa
orl
jnp
popa
icebp
or
mov
call
or
jecxz
enter
in
mov
js
xchg
or
gs
jecxz
or
lods
inc
dec
call
jecxz
mov
imul
ret
lret
es
or
test
cmp
add
xchg
pop
shrb
bound
pop
popa
mov
push
das
or
and
add
cwtl
sbb
add
sub
push
rorl
sub
add
dec
and
jo
add
pop
pop
mov
je
outsl
dec
add
sub
icebp
jp
mov
sbb
pop
sti
jecxz
inc
lea
mov
pop
inc
outsl
mov
icebp
repz
enter
cld
sub
pusha
xchg
iret
in
cmpsl
loope
or
aam
cmp
dec
aaa
pop
push
out
jge
mov
lock
test
jmp
mov
sbbb
addr16
dec
out
in
mov
test
sbb
ret
and
xor
cmpsb
and
int3
lock
mov
sub
xchg
xchg
or
mov
sub
js
addb
fisubs
clc
push
mov
test
xor
jl
adc
push
rclb
in
out
ficoml
add
pop
dec
inc
lahf
bound
mov
mov
or
test
inc
lret
mov
dec
mov
dec
or
in
iret
sbb
inc
and
sub
dec
movl
loop
adc
add
ss
mov
shrb
push
add
movsl
aam
bound
or
sub
cmp
push
mov
pop
lods
push
xor
add
pop
mov
pushf
shr
fisubs
cmpsb
cmp
xor
aam
in
and
rep
pushf
pop
imul
sbb
es
stos
cs
add
cli
nop
repz
es
inc
pop
pusha
call
push
mov
mov
call
adc
inc
pop
push
sub
lahf
add
fwait
adc
push
add
neg
xorl
pop
cs
mov
fcoms
mov
mov
dec
mov
xor
sbb
popa
repz
ficoms
xchg
add
scas
pop
or
push
fwait
lock
and
dec
add
sbb
arpl
mov
sub
jb
lret
xchg
xchg
push
je
sbb
cmp
inc
inc
and
enter
sarl
jecxz
mov
cmp
inc
jg
pop
add
push
out
sbb
push
ret
retw
fsubl
cmp
and
pop
mov
enter
cmp
dec
mov
sahf
xchg
dec
incb
arpl
jns
sbb
xor
adc
jmp
and
js
push
cwtl
or
in
sti
pop
ffreep
dec
pop
test
lcall
jno
inc
lahf
jne
mov
jmp
das
jne
ja
mov
xchg
in
mov
add
lret
mov
pop
sbb
add
jg
jbe
dec
movb
add
mov
xchg
mov
sub
sbb
fsubs
stos
mov
ret
addr16
dec
add
int
dec
mov
out
scas
ret
or
sub
add
mov
arpl
jge
dec
dec
imul
jge
inc
pop
jnp
test
jnp
jmp
mov
mov
dec
je
inc
test
aas
lahf
inc
psllw
sti
mov
and
adc
xchg
inc
xor
scas
test
mov
xchg
test
aam
or
xor
pop
out
lcall
jmp
pop
push
sbb
cwtl
das
mov
xlat
jg
inc
fldcw
mov
add
movsl
lsl
mov
gs
or
or
dec
pop
mov
movsb
imul
sub
fadd
pusha
inc
push
sbb
fistpl
ret
cmpsb
fcmovb
sbb
sbb
imul
xor
mov
and
es
mov
ret
fwait
inc
push
pop
lods
fcmovb
adc
imul
aad
arpl
jp
xchg
movsl
sbb
nop
inc
insb
add
xor
pop
fs
xor
sub
imul
inc
cmp
mov
mov
mov
pop
mov
mov
add
imul
pop
and
je
pusha
inc
out
push
or
dec
roll
popa
lds
jmp
insb
xchg
sub
in
ret
mov
sbb
loope
movsl
ret
les
mov
add
add
pop
jmp
insl
popa
mov
cmp
push
ret
subb
jecxz
call
lock
jecxz
xlat
inc
ss
jl
adc
mov
lock
or
stos
sub
lret
inc
sub
jo
lods
inc
mov
scas
iret
cmp
int
fldl
inc
cltd
ret
dec
or
sbb
mov
mov
fldt
orl
sub
subl
bound
inc
jno
leave
aam
xor
stos
jecxz
xlat
pop
xchg
xchg
mov
popa
adc
inc
cmp
in
sbb
clc
cmc
loope
pop
out
aaa
push
data16
imul
adc
add
xchg
shrb
lds
decl
pop
push
jle
adc
jb
mov
inc
cmpsl
cmpsl
hlt
lds
mov
lock
es
mov
inc
into
adc
mov
lret
jbe
repz
repnz
adc
ss
rcl
fnstsw
jne
mov
inc
out
push
inc
popa
test
jae
or
hlt
insb
and
adc
pop
inc
fst
or
add
jmp
int
arpl
push
inc
push
and
push
movl
mulb
xlat
jecxz
das
loop
or
adc
sbb
or
jne
lret
fmuls
lret
shlb
pop
sbb
fs
mov
sub
push
mov
lea
loope
dec
adc
sbb
push
dec
add
imul
cs
cmp
icebp
jne
dec
sub
mov
adc
shl
cmp
mov
outsb
jmp
test
out
jb
inc
ds
add
je
or
loop
mov
bound
lock
mov
mov
std
and
movsl
lods
push
dec
cmp
inc
ds
mov
push
push
sbb
or
orl
lds
loope
push
add
xor
add
pop
jb
mov
jb
and
mov
inc
pop
js
xchg
add
mov
daa
ss
inc
add
lea
pushf
add
add
aas
negb
cmp
push
ljmp
pop
sub
xor
pop
js
cmp
movsl
mov
jo
xchg
sbb
call
sbb
sbb
and
popa
xchg
mov
iret
xchg
push
shlb
lea
pop
mov
cmpsl
cmp
rcrb
pop
push
sub
subb
repz
add
sbb
xor
xor
xchg
jb
mov
push
or
arpl
mov
jmp
push
pop
mov
ljmp
bound
ret
lock
jge
cmp
mov
add
shlb
sub
adc
lcall
sbb
insb
mov
pop
or
popf
jbe
add
sarb
int3
icebp
repnz
repz
xorl
mov
add
dec
jp
jns
fwait
add
mov
js
loop
and
sbb
xchg
inc
sbbb
xchg
push
cwtl
popa
xor
sti
dec
pop
xor
dec
mov
iret
leave
pop
imul
nop
dec
cli
mov
insb
jae
ret
pushf
insb
sub
ret
icebp
or
push
and
mov
inc
into
test
lcall
mov
stos
add
xchg
pop
data16
test
shl
xchg
js
dec
pop
cmpsl
push
mov
sub
push
adc
xor
pop
or
loop
mov
sbb
loop
lds
sbb
std
pop
add
pushf
pop
sbb
test
out
add
jbe
ds
push
in
mov
cltd
sbb
scas
mov
jecxz
enter
pop
add
or
pop
cmp
in
sbb
mov
cmpb
movsb
arpl
mov
lock
popa
fbld
lret
sbb
sti
les
mov
mov
inc
clc
add
lea
and
jb
add
push
cmp
push
sbb
loopne
pop
or
cmpsl
jle
xor
insb
mov
imul
inc
or
jne
addl
pushf
xor
mov
loope
clc
add
out
arpl
sbb
fnstenv
adc
pop
gs
notl
sbb
jb
or
mov
mov
aaa
add
fcomp
lods
push
push
out
sbb
or
stc
imull
mov
imul
sbb
or
pop
out
mov
cmp
lahf
adc
pop
ret
scas
or
mov
push
add
hlt
loopne
push
cmp
or
sub
sbb
or
dec
inc
ds
xchg
jnp
in
xchg
mov
popa
negb
or
xor
adc
pop
inc
sbb
mov
cmp
xchg
cmc
addl
sub
pop
pop
dec
jl
ja
sbbl
dec
sbb
add
mov
test
test
jno
jne
dec
dec
xchg
enter
adc
nop
mov
hlt
inc
mov
rolb
ss
mov
sbb
js
push
mov
les
leave
cs
mov
and
xor
xchg
aas
xor
xlat
xor
adc
xchg
movsl
mov
sti
fiaddl
lock
dec
outsl
in
sub
adc
dec
mov
sbb
mov
cmpsb
jno
mov
sbb
push
sbb
inc
mov
add
repnz
loop
or
inc
mov
mov
mov
cmpsb
test
mov
incb
jecxz
or
and
adc
loop
iret
sub
xchg
jns
jnp
mov
scas
stos
adc
sbb
mov
mov
loope
dec
xchg
sub
push
das
pop
inc
jmp
dec
mov
and
mov
push
rolb
rcrl
sub
test
inc
xor
and
pop
pop
popf
cmp
pop
adc
xchg
push
shll
push
stc
arpl
dec
add
fbld
push
pop
sti
imul
or
jo
mov
add
ret
adc
fidivrl
add
clc
subb
xchg
nop
insl
gs
loopne
lods
shl
out
imul
mov
repnz
mov
sar
bound
mov
lods
sub
sbb
ror
adc
scas
mov
test
sbb
cmp
lret
add
xchg
popa
mov
xchg
push
sqrtps
push
mov
movsb
loopne
pop
test
and
subb
fldz
inc
add
and
imul
jo
xchg
or
aaa
add
or
and
jb
fsubrs
jmp
cs
mov
and
mov
xor
pop
addr16
imul
cmc
ret
push
adc
mov
sbb
pop
dec
rorb
sub
mov
sarb
push
iret
pop
in
lahf
and
adc
sbb
pushf
jecxz
inc
cmp
mov
sbb
std
add
jne
xchg
jns
stos
fadds
rorl
jge
cmc
fimull
inc
or
rorb
cmp
adc
stos
dec
push
mov
daa
and
cmp
mov
rcr
orb
mov
test
lret
add
int
ret
xor
loope
mov
fwait
daa
and
imul
test
cmpsb
mov
shll
cmp
sbb
ljmp
sbb
outsb
jns
jbe
adc
push
xchg
xchg
xorb
jns
mov
les
push
lods
mov
rolb
cmpsl
pop
xor
jnp
fldpi
adc
popa
add
nop
or
scas
adc
push
sti
fistl
adc
les
cmp
aad
inc
mov
das
pop
cmp
mov
rcll
inc
cmp
ret
nop
int3
and
xor
int3
nop
rol
subl
pop
rcrl
push
sbbl
push
or
pushf
orb
cmp
stos
sub
or
inc
mov
mov
fwait
push
js
mov
xchg
popf
aaa
dec
push
dec
mov
mov
test
push
lret
pop
xorb
pop
pop
incb
rorb
or
inc
nop
add
clc
lea
dec
mov
pop
and
mov
adc
lret
mov
mov
xchg
sahf
xchg
xchg
pop
aam
pop
mov
pop
mov
pop
not
push
xor
call
mov
mov
out
orl
dec
jmp
ud1
les
mov
sub
bound
cmp
loope
lods
je
xchg
or
mov
aaa
aad
and
inc
cmp
pop
pcmpeqd
adc
xorl
pop
jnp
add
stc
xchg
fildl
ds
imul
hlt
jg
sbb
pop
mov
fwait
jge
ljmp
aam
mov
xchg
scas
adc
mov
or
push
sub
subl
pusha
aad
imul
cltd
adc
jmp
pop
data16
bound
cmp
mov
lock
cmp
lea
push
cmp
orl
jo
enter
jbe
movsb
xor
jne
outsl
add
pop
mov
aad
addb
mov
cmp
adc
inc
fsubl
nop
les
fnsave
xlat
jno
xor
xchg
jecxz
xchg
inc
aas
xchg
jb
add
mov
xchg
mov
inc
addl
fmuls
sbb
dec
out
add
dec
jae
aaa
arpl
dec
jmp
sub
stos
xchg
inc
sub
inc
rol
loope
or
mov
or
push
pop
bound
hlt
push
mov
add
mov
outsb
pop
jecxz
mov
mov
jb
jb
or
or
outsl
sbb
add
stos
jb
or
sub
loop
mov
cwtl
pop
mov
dec
mov
jmp
or
je
movsb
mov
adc
xchg
mov
cmpsl
add
cmpsl
push
mov
js
add
and
jl
sub
mov
jo
pop
es
jae
sub
xchg
scas
pop
add
fldt
rcll
xor
xchg
orb
lret
sahf
es
push
sbb
jno
outsb
xchg
jmp
stc
mov
pop
pop
add
jp
adc
test
les
inc
das
dec
lea
or
xor
ja
cmp
and
or
ds
push
loopne,pn
aaa
int
xor
and
xor
or
fisttpl
loop
mov
xchg
shl
loopne
xchg
jl,pn
sub
rol
inc
in
imul
rclb
dec
pop
test
aas
repz
sub
inc
ret
mov
push
fldt
ret
pop
or
add
addl
int
mov
cmc
aas
into
test
add
dec
pop
jb
mov
lods
hlt
cmpsl
adc
dec
pop
dec
sbb
imul
loop
test
popa
or
sbb
insl
add
sub
adc
xor
lods
adc
mov
jne
hlt
mov
test
cmp
frstor
stc
imull
cmpb
mov
mov
or
dec
rcrb
je
movsl
pop
sub
sbb
sub
stos
inc
imul
push
mov
mov
aam
incl
mov
cmpsb
add
das
push
cwtl
js
mov
call
sbb
aad
push
movsl
andb
ss
inc
jmp
pop
add
sub
cmpl
push
js
pop
aam
lods
pop
pop
sbb
jb
pop
sbb
rol
xchg
adc
jge
clc
in
lds
or
jne
aaa
aas
sti
in
mov
pop
loopne
popf
and
sub
and
cmp
rolb
pop
neg
imul
repz
stos
call
ret
jmp
dec
int
push
push
loope
sbb
hlt
cli
inc
loope
lods
or
push
mov
push
movb
sbb
cmp
lods
pop
imul
add
pop
test
jae
mov
inc
mov
arpl
sub
es
addb
sub
jle
sub
sbb
push
sub
push
mov
jmp
mov
jg
fcmove
inc
jl
sub
stc
mov
stos
sbb
adc
push
pop
jl
aaa
mov
xchg
dec
fldt
enter
mov
push
pop
dec
fsub
xor
in
jns
push
lahf
aad
jae
ret
and
iret
icebp
mov
adc
xchg
add
xchg
sub
mov
or
sub
movzwl
pusha
andl
jbe
std
test
or
aaa
cmp
call
push
mov
frstor
cmp
je
repnz
js
add
mov
jbe
and
xor
loope
mov
loope
cmpl
jo
popf
hlt
inc
loopne
xchg
inc
and
sbb
insl
stos
loope
cmpsb
and
mov
pop
sbb
xchg
les
push
sahf
cmpsl
push
cmp
das
push
ret
stc
lock
cmp
mov
jbe
mov
lahf
jo
jge
lahf
sub
add
cmp
es
fiadds
xchg
lcall
mov
add
mov
push
stos
daa
jecxz
push
aas
cmp
cmp
divl
pop
adc
movsb
hlt
inc
fwait
jle
or
dec
test
pop
out
push
or
or
dec
insb
sub
shlb
pop
cmpsb
push
mov
or
push
push
jle
inc
sti
fucom
add
cs
addr16
push
lcall
sti
fldenv
ret
loop
dec
jg
lds
and
add
dec
adc
xor
lods
xchg
sub
xor
or
mov
xor
pop
mov
pop
fsubs
mov
xor
adc
or
iret
and
and
push
outsb
iret
inc
jmp
daa
cmp
lds
cmp
sub
dec
aas
jge
fadds
divl
xchg
in
sbb
mov
add
addr16
nop
add
addl
mov
mov
xor
sbb
leave
outsb
mov
aam
mov
xor
fwait
cs
sub
xchg
add
inc
aaa
notl
loopne
pop
cli
add
push
test
sub
hlt
add
test
fadds
push
add
ja
pop
sub
into
xchg
fsts
les
loope
test
ret
xor
xor
mov
dec
xor
mov
and
pop
imul
mov
mov
xchg
inc
test
and
cmp
push
dec
and
sbb
mov
cmp
rol
in
ss
sub
jmp
aaa
dec
push
mov
mov
adc
and
pop
and
or
aas
mov
xor
xor
xor
and
xor
mov
sub
arpl
jmp
mov
push
sub
jmp
inc
fcoml
cmpsl
rcr
cmpsl
xchg
movsl
dec
sub
es
xor
inc
dec
inc
popf
mov
inc
dec
mov
nop
jp
iret
fimuls
js
xchg
daa
xchg
mov
adc
sbb
enter
aad
add
xor
stos
in
rcll
mov
ret
ret
inc
mov
xchg
mov
xorl
and
subb
adc
jne
cmp
jo
in
adc
ret
adc
dec
imul
add
xchg
lcall
popa
fmul
inc
outsb
adc
pop
imul
mov
movl
pop
or
inc
movsb
popa
xor
sub
iret
scas
inc
add
inc
sub
std
les
ljmp
cmp
xor
mov
outsb
mov
popl
rclb
or
or
scas
or
mov
iret
cmp
fldt
xor
ret
mov
or
and
sbb
lea
sub
vaddsd
enter
sbb
int3
shll
and
flds
fsubrp
cmp
cld
addr16
hlt
mov
movsb
scas
addr16
mov
in
pop
push
jnp
add
sub
scas
pop
push
mov
imul
aas
sti
and
mov
add
shrl
ffree
mov
les
mov
movsb
jns
cmp
lcall
push
call
mov
stos
or
cmp
xchg
les
stos
or
in
int3
mov
sub
and
fsts
sbb
bound
mov
clc
dec
lods
pop
xchg
divl
pop
fldt
mov
ret
popl
sbb
mov
jmp
clc
xlat
dec
pop
mov
mov
xor
mov
scas
push
icebp
or
pop
xlat
lods
pop
aas
cmp
jno
cli
cld
ljmp
dec
mov
pop
jecxz
call
mov
adc
jl
jo
pop
rep
xor
repnz
sbb
int
je
inc
mov
xor
add
push
mov
sbbl
addb
imul
cwtl
sarb
negl
imul
movsl
aas
xchg
sbb
mov
loop
sub
or
mov
jno
cmp
pop
pop
push
or
fmuls
dec
and
ss
dec
push
outsb
sbb
clc
or
icebp
inc
dec
test
mov
add
aaa
inc
das
ljmp
jno
dec
scas
xchg
roll
add
lods
jp
lret
sbb
dec
in
and
insb
fidivl
jo
jbe
or
pop
dec
and
and
pop
frstors
dec
cmpsb
pop
add
xlat
mov
movb
xor
dec
decl
repz
or
in
xorl
mov
andl
fdivrl
mov
add
dec
lea
loopne
xchg
inc
inc
mov
inc
add
jo
sub
inc
or
stos
insb
ljmp
jnp
sub
shr
jnp
add
sub
sbb
mov
or
ret
ret
rorb
pop
mov
mov
xchg
mov
js
jb
xchg
sbb
mov
popa
mov
leave
jne
les
lock
lods
pop
add
scas
mov
leave
in
sahf
push
fldcw
out
sti
shrl
xchg
jbe
stos
xor
fiadds
fwait
pop
and
and
loop,pn
xor
dec
push
add
call
test
cmp
add
or
add
pop
popa
orl
sbb
push
negb
scas
rolb
jns
cwtl
ret
out
push
xchg
sbb
popl
xchg
hlt
shrl
mov
mov
int3
sbb
loope
pusha
hlt
jns
adc
imul
pop
fimuls
mov
xchg
in
or
jo
sub
and
adc
dec
push
cmp
test
jno
xchg
out
stc
fdivs
dec
mov
or
adc
sub
arpl
mov
inc
or
ljmp
out
jle
jb
jg
test
xlat
jnp
aam
xchg
jns
dec
mov
in
inc
aaa
aad
js
xor
dec
fistpl
add
pop
pop
mov
xlat
es
movsb
rcll
fmuls
ljmp
aaa
pushf
aad
stos
lcall
and
xchg
enter
xor
pop
inc
fistl
ret
mov
jne
sub
pop
inc
or
push
dec
push
invd
sub
and
mov
cmpsb
sahf
push
imul
pop
xchg
std
add
orl
clc
push
or
insb
cmp
add
loop
push
and
xor
and
mov
push
and
pusha
loopne
fdivrl
and
mov
push
mov
popa
outsl
jnp
sbb
repz
cmp
imul
movsl
mov
jge
inc
push
mov
insb
xchg
and
mov
and
cmp
xor
es
sbb
sbb
pop
push
mov
add
push
or
mov
pop
add
out
push
into
shlb
shlb
cmpsb
lcall
or
hlt
popa
xor
mov
add
and
or
fmuls
jno
mov
adc
push
dec
add
mov
or
sbb
inc
mov
call
cmp
mov
pop
sarl
rolb
movsb
js
sbb
jbe
je
or
test
rorl
shlb
imul
add
movsb
push
push
pop
jge
je
daa
loope
and
cmp
out
mov
lock
inc
movsl
mov
imul
gs
xchg
mov
inc
cwtl
pop
lahf
mov
pop
xor
divl
inc
mov
cmp
inc
loopne
push
cmp
inc
push
push
imul
rolb
xchg
lea
and
js
insl
mov
inc
rcrb
mov
jo
movsb
in
xchg
xor
sbb
aam
dec
adc
sbb
push
daa
repz
hlt
xchg
push
xor
pop
adc
cwtl
inc
ss
icebp
inc
jecxz
add
inc
jg
push
adc
jmp
sub
mov
xor
lock
dec
add
rorl
andl
les
test
ret
mov
sbb
push
sti
mov
mov
mov
cmp
imul
cmp
loopne
add
sbb
mov
dec
jns
aaa
shll
repz
call
scas
sub
inc
sbb
aad
fstl
mov
cmp
xchg
jg
or
cmp
aad
adc
fdivr
pop
rorl
js
sahf
adc
cmpsb
inc
in
lods
aad
add
inc
gs
fs
jo
cltd
insb
inc
inc
dec
or
incl
push
sarb
inc
jmp
test
stos
repnz
xchg
sub
ret
and
rcrb
stos
sub
xor
adc
lea
sbb
mov
sub
aad
xchg
inc
mov
inc
xor
test
subl
addl
xor
xchg
aam
inc
jne
mov
mov
ret
je
add
test
shll
cmp
fiadds
or
cmp
xchg
mov
adc
mov
lcall
test
sub
and
ffree
popa
cmc
or
mov
test
mov
push
inc
inc
or
xchg
imul
aas
push
pop
shlb
pop
pop
dec
shrb
jnp
js
add
xchg
inc
popa
and
mov
mov
dec
popa
popf
jno
cmp
aam
stos
or
ret
outsl
xor
push
push
push
cwtl
mov
pusha
movlps
sub
pusha
test
frstor
mov
jbe
pop
ffreep
jo
testl
and
xlat
aam
lock
gs
lock
jecxz
enter
pop
add
xchg
lret
jae
orb
stos
dec
je
and
dec
cmp
cmp
ret
arpl
call
js
in
inc
test
xor
movsl
fstps
popa
jmp
mov
lods
fldcw
lea
mov
test
nop
addl
sbb
int
nop
icebp
ret
pop
ja
loope
shrb
lds
in
outsb
inc
sahf
pusha
mov
sub
add
add
xor
mov
adc
jb
into
test
dec
popf
lcall
pop
pop
test
popf
fsubs
mov
decl
es
rol
adc
lret
add
test
xor
scas
sbb
and
mov
arpl
popa
popa
and
push
ja
jecxz
lret
inc
in
ret
mov
icebp
mov
pop
pop
jmp
or
fiaddl
sub
bound
push
mov
addr16
xchg
rorl
jge
sub
dec
add
push
cwtl
sbb
jmp
mov
rcr
or
mov
clc
xchg
mov
sub
loop
xchg
mov
add
push
inc
or
pop
push
add
test
dec
imul
ljmp
mov
mov
arpl
mov
insl
pop
shr
push
aam
fadd
xchg
jno
pop
sarl
sub
fstpt
repz
push
icebp
cmp
lds
rclb
pop
xor
sbb
subb
push
inc
es
jno
sub
add
inc
rcrl
cmp
out
cmpsl
xor
pop
in
jo
jo
stos
in
imul
dec
mov
test
and
push
add
lar
ja
mov
push
pusha
loopne
cmpsl
mov
aam
push
mov
test
ret
adc
jmp
push
xchg
fistpll
mov
outsl
cltd
imul
add
or
jne
das
adc
cmp
sbb
jmp
scas
mov
cmp
add
push
or
mov
lret
les
test
xchg
or
cmp
mov
in
dec
clc
orl
sub
int
fwait
jnp
orb
jns
loopne,pt
lds
iret
push
and
mov
jbe
lods
test
xorl
push
and
test
xchg
xor
mov
test
sub
repnz
sbb
fstpt
loopne
or
mov
mov
shrb
mov
or
sub
jns
out
sub
pop
add
or
cli
or
sarl
add
sarl
mov
addl
leave
xor
decl
mov
cli
xlat
subl
mov
rorb
int
sbb
xbegin
dec
rclb
shrl
or
jns
dec
mov
lock
repz
das
insl
xor
aad
aad
pop
cmp
mov
je
pop
movsb
mov
and
jge
shl
rcll
xchg
lret
push
fcomi
xchg
cmp
imul
out
sbb
adc
mov
mov
test
shlb
lahf
imul
pop
les
pop
xor
mov
mov
js
jg
dec
sahf
sti
test
das
sbb
testl
into
sub
jg
sbb
out
xchg
mov
mov
sar
ja
cmpsb
test
nop
cmpsl
in
enter
sar
in
sbb
in
lret
add
xor
popl
sub
add
scas
call
ret
cmp
das
lret
call
mov
mov
xchg
mov
mov
stc
inc
movsb
pop
test
cmp
popa
inc
mov
cmp
lahf
mov
cltd
fimull
push
mov
adc
or
iret
sbb
sub
cmpsl
mov
sarl
ret
sarl
sti
inc
outsb
lods
push
cmpsl
stc
fcomps
pusha
mov
ret
orb
fldt
mov
adc
loop
test
and
fisubs
xchg
mov
orl
mov
push
sub
adc
cmp
xchg
std
stos
push
mov
and
popa
mov
add
enter
add
inc
lock
filds
or
imul
inc
lret
sub
int
push
push
xor
fisttpl
jb
xor
lock
adc
push
pusha
imul
inc
and
mov
cmp
pop
mov
mov
sub
xor
mov
or
out
sub
push
mov
jo
jne
mov
test
mov
add
mov
int
push
les
mov
mov
in
scas
out
jle
sahf
xor
aaa
arpl
add
pushf
dec
test
xor
pop
dec
or
mov
xchg
js
xor
push
imul
push
test
mov
xchg
sub
sbb
or
jmp
sub
cltd
popf
rol
adc
test
into
or
rorl
xlat
xchg
push
mov
jp
ret
sub
jge
jne
mov
pop
sbb
mov
aaa
hlt
add
arpl
imul
dec
icebp
movhlps
imul
push
outsb
pop
push
ret
fwait
or
setge
test
out
jo
sbb
stos
sub
ljmp
sbb
mov
jp
jns
pop
jge
ret
inc
popw
dec
inc
insb
dec
jns
pop
mov
inc
dec
or
mov
fwait
sbb
rep
jnp
add
cmp
jmp
jle
mov
ret
test
mov
dec
movntq
out
jp
cltd
adc
packsswb
popf
sbb
mov
mov
inc
sub
pop
pop
into
imul
xchg
xor
sub
add
jne
or
cmp
mov
mov
aam
daa
enter
push
js
movb
add
mov
notb
lock
jg
std
out
pusha
xchg
xchg
jo,pn
aaa
inc
adc
dec
pop
push
cmpb
pop
orb
pop
pop
or
dec
and
jno
sarb
adc
jp
push
cmp
add
mov
ficompl
movsl
push
cs
test
add
inc
add
cli
sbb
lcall
sbb
in
inc
cmp
dec
sub
cli
popa
fldl
add
xor
shll
pop
sub
add
add
cmp
in
pusha
adc
insb
lods
add
out
jnp
pop
idivl
mov
sub
push
or
add
imull
xor
mov
or
imul
pop
sbb
mov
push
insl
or
sbb
dec
imul
push
insl
push
sbb
jmp
test
dec
mov
es
test
inc
rorb
xchg
jp,pt
or
or
les
movsb
fsubrs
rolb
addl
adc
movsb
dec
rclb
or
jnp
cmpsb
dec
push
adc
dec
mov
and
loope
popa
lds
andb
cmpsl
dec
and
int3
test
das
jg
mov
movzbl
rorb
data16
pop
pop
xor
dec
in
popf
mov
mov
pop
rol
adc
mov
sarl
mov
or
repz
or
adc
outsl
out
mov
pop
mov
or
outsb
pop
or
pop
push
push
jns
and
xor
stos
sub
inc
testl
shlb
jo
shl
pop
mov
push
jo
clc
dec
add
sub
ss
ja
pop
sub
fildl
jno
test
adc
popf
sarb
jae
push
mov
cmp
ja
or
cmp
xorl
pop
andl
sub
pop
pop
and
mov
and
je
push
ljmp
add
mov
iret
repz
lock
mov
lea
sahf
mov
mov
sub
adc
pop
cli
mov
sbb
mov
or
aaa
sahf
or
in
pop
pop
pop
mov
inc
mov
sbb
les
cmp
or
cltd
outsb
js
xlat
stos
sbb
xchg
push
seta
or
sti
pop
jl
cmpsl
inc
inc
bound
scas
inc
sbb
clc
inc
dec
je
add
bound
rclb
push
shrb
jge
es
adc
cmp
xor
daa
lods
xor
push
xor
mov
adc
fiadds
xor
ljmp
pop
call
push
int
jno
test
rol
or
cltd
pop
jecxz
push
add
mov
adc
adc
push
pop
inc
out
das
pop
rolb
mov
popa
dec
add
sbb
lahf
xchg
sbb
cmpl
jb
push
in
or
ror
xchg
iret
outsl
and
iret
mov
add
mov
subb
add
mov
or
std
dec
mov
stos
das
mov
mov
add
lcall
mov
jno
xchg
int3
mov
cmc
aas
mov
ja
negb
in
mov
push
add
xor
xchg
std
xor
jmp
subl
daa
test
push
add
leave
mov
loopne
dec
loopne
sbb
sub
pop
hlt
movsb
push
js
mov
repz
dec
sub
lods
arpl
push
add
push
nop
sub
shlb
sub
in
inc
add
out
adc
mov
mov
lea
lret
icebp
stos
je
pop
or
mov
or
dec
scas
inc
and
or
xor
and
addl
pop
imul
mov
mov
xor
daa
xchg
shlb
sbbl
push
lods
xor
sti
pop
mov
jecxz
ret
aam
in
dec
mov
aad
pop
inc
pop
sti
or
add
pop
inc
pop
cmpsl
add
xchg
pop
mov
cmp
dec
imul
push
adc
test
pop
xor
inc
pop
stos
xor
mov
test
cmpb
add
dec
dec
pop
xor
aad
test
push
lret
test
cmp
push
and
adc
dec
sub
xchg
mov
inc
test
and
sub
cmp
fiaddl
int
pop
out
adc
movsl
lea
gs
add
aaa
push
hlt
icebp
dec
movsb
adc
jp
cmp
xchg
test
xchg
fcoml
or
sahf
mov
xchg
mov
cli
add
sub
adc
and
mov
mov
adc
adc
xchg
das
negl
pop
cmc
sbb
sub
xor
adc
sub
jnp
mov
mov
nop
cmpsb
mov
add
cltd
fs
sbbb
jb
xchg
loope
adc
push
rclb
add
pop
xlat
lret
cmp
mov
push
fucomi
test
js
or
or
pop
mov
xchg
jnp
mov
pop
rorb
xor
add
cmpsl
cmp
inc
in
jae
sub
loopne
cmp
and
imul
add
sub
mov
jle
fs
cmp
mov
adc
icebp
and
stc
sub
movsl
mov
or
sbb
jge
push
jnp
xchg
inc
stc
jmp
add
add
or
jge
and
test
cmp
hlt
ffreep
inc
ret
dec
in
dec
sub
add
pop
in
stos
mov
mov
or
shll
and
pop
sub
xchg
mov
ficompl
imul
ret
push
mov
insb
xor
pop
ret
sbb
loop
aaa
in
adc
addb
loope
pop
aaa
mov
mov
add
gs
pop
dec
ret
daa
testl
or
scas
or
inc
lods
jle
ret
outsl
je
mov
subb
mov
fs
add
jne
pusha
and
syscall
pop
popa
xchg
push
es
xor
add
adc
pop
ljmp
adc
shll
arpl
cmc
dec
arpl
and
sbb
pop
scas
sub
das
inc
or
test
xchg
xor
sbb
loope
in
or
pop
inc
cs
xchg
lahf
cltd
xchg
addl
bndldx
push
pop
cltd
xor
insl
sbb
cltd
and
add
or
or
xchg
jne
sub
push
iret
cmp
mov
pop
add
and
xor
inc
ja
je
mov
aam
xchg
adc
cmpsl
sti
jge
adc
xlat
jl
orl
int
lret
adc
adc
xor
int
mov
or
je
sbb
mov
jecxz
pop
mov
jmp
mov
add
jnp
add
andl
add
adc
fwait
inc
pusha
inc
imul
repz
adc
mov
iret
lds
push
js
fadds
dec
loopne
xchg
and
das
mov
add
xchg
sub
jecxz
mov
aaa
push
xor
cmp
ja
movsl
or
call
lea
xor
xchg
icebp
jne
cs
orl
mov
aad
loopne
jo
or
ljmp
fsubl
adcb
jge
fs
push
pop
lret
sub
lea
fdivs
pop
or
cli
and
sbb
mov
jmp
mov
xchg
and
xchg
inc
push
add
stos
aad
add
adcl
popf
arpl
xchg
mov
jbe
cmpsb
jo
pop
ret
mov
popf
push
mov
rorb
nop
adc
sarl
cs
dec
in
xor
or
fs
push
ss
outsl
shr
scas
add
gs
xchg
insb
jb
add
fcoms
adc
popa
add
xchg
sbb
pop
jmp
scas
or
xchg
mov
or
adc
dec
pop
bound
push
sub
jg
jl
dec
xor
adc
add
ret
mov
fs
xor
mov
sbb
cmpsb
pop
pop
in
push
fnstenv
sub
scas
sub
ja
mov
adc
xor
add
scas
or
cmp
mov
fldenv
dec
iret
push
push
push
ret
ss
outsl
jecxz
cmp
xchg
cmp
lock
clc
cmpsl
jo
in
lods
jecxz
cmp
jnp
subl
fldenv
push
ret
sub
cwtl
jmp
shlb
loopne
js
fwait
sbb
stos
xor
sub
jo
inc
cmp
mov
dec
pop
mov
mov
mov
push
mov
decl
sbb
jbe
addl
add
or
enter
scas
lea
adc
mov
mov
sbb
sbb
push
sub
sub
add
push
clc
call
orb
or
adc
mov
idiv
adc
add
loopne
loope
pushf
punpcklbw
repz
cmp
in
test
out
push
pop
sub
push
sbb
cltd
imul
jmp
lea
ret
loopne
rclb
bound
jmp
xchg
repz
daa
sub
lcall
int
cli
add
pop
jb
or
enter
imul
fstpt
movsb
sub
dec
cmp
andl
ss
jge
push
mov
lea
pop
hlt
hlt
mov
mov
jns
or
sub
outsl
mov
pop
stos
xchg
shll
fwait
dec
pusha
or
inc
adc
push
xor
lcall
push
pop
out
fucomi
add
mov
ret
sti
fists
js
xlat
pop
aas
adc
lock
dec
sub
or
lahf
repz
loop
inc
jge
sub
ret
mov
mov
pop
jecxz
and
mov
jecxz
jge
out
adc
fimuls
or
push
add
sahf
add
xchg
xchg
jg
mov
inc
cmp
dec
or
in
pop
add
cld
pop
mov
fimuls
mov
add
test
cmpsl
add
xchg
inc
ja
or
jnp
pop
insl
decl
gs
rcll
cmp
jo
jo
ljmp
mov
jmp
fdivl
out
jno
popl
int
jecxz
cmp
push
scas
adc
pop
push
movsb
mov
ljmp
adc
or
ffree
sahf
xchg
xor
stos
pop
lret
pop
in
mov
add
pop
inc
pop
push
xchg
rcrl
dec
ficoms
add
push
lds
mov
cmp
xchg
imul
jns
sbb
push
mov
popl
cltd
jns
mov
incb
jge
mov
test
lret
jmp
ljmp
fstl
in
test
in
inc
add
das
imul
je
xor
mov
or
shlb
xor
lret
mov
gs
jp
xor
xor
or
rol
adc
fs
inc
rolb
mov
movsb
dec
shlb
sbb
mov
or
adc
pop
jg
adc
push
dec
or
fstl
xlat
dec
sub
mov
mov
mov
pop
mov
daa
scas
inc
cmp
mov
or
icebp
jnp
and
rol
jecxz
shlb
xchg
les
jmp
imul
dec
and
jnp
fucomi
in
mov
filds
nop
fbld
add
cmpsl
and
scas
flds
lds
add
jp
mov
shlb
jl
xlat
adc
test
lds
test
sbb
jg
inc
loope
lcall
sbb
sbb
cmp
lret
mov
adc
push
push
xchg
sbb
push
xlat
xor
test
mov
xchg
inc
sbb
test
jnp
lock
ss
jp
lods
shrb
jmp
repz
jne
jmp
mov
and
hlt
cwtl
xor
fcmovbe
cmp
add
addb
cli
push
daa
inc
jmp
adc
adc
ja
ss
or
add
inc
out
xchg
mov
setl
mov
mov
xchg
dec
cmp
dec
sbb
mov
sbb
lcall
sub
xlat
scas
aam
add
js
scas
insl
lods
mov
push
ret
stos
mov
inc
inc
inc
add
andl
fsubs
sbb
jge
imul
les
push
mov
cmp
es
ja
loope
test
jge
jle
mov
cs
lods
jnp
add
jp
daa
imul
aaa
jbe
xchg
out
test
je
mov
mov
jne
pop
push
sub
dec
icebp
iret
push
jp
add
rcrl
aas
shrb
cs
ja
pop
leave
lret
es
dec
mov
jne
inc
mov
dec
jne
cmp
test
mov
adc
cli
sub
insl
call
adc
pop
clc
loope
sbb
das
fistps
inc
je
push
push
lret
sub
dec
xor
fwait
pop
fistl
sub
in
mov
push
scas
dec
mov
popa
add
loop
xchg
das
stos
pop
or
inc
loop
sub
sbb
jecxz
jne
jnp
test
push
inc
mov
mov
aam
jmp
aaa
inc
scas
jmp
mov
loop
xor
sub
sbb
push
sbb
mov
push
or
add
jnp
mov
clts
add
pop
push
lahf
pop
or
adc
add
jnp
or
in
add
rcr
jge
fcoml
adc
push
pusha
xchg
jle
ret
mov
pop
mov
insl
ds
and
mov
cmp
lea
push
adc
std
test
loope
mov
adc
aaa
cmpl
loope
mov
mov
loop
mov
ret
outsl
adc
aaa
jp
push
and
sbb
adc
movl
loope
les
scas
decb
lock
cld
ret
jae
sub
js
fldcw
push
es
add
cmp
cmp
push
jl
push
jns
in
fcoms
jnp
sub
mov
cmpsb
cmpsl
and
add
sbb
fsubrp
fisubrl
roll
mov
push
ja
imul
fnstenv
push
pop
cmp
into
inc
cmp
pop
push
jp
push
addr16
mov
mov
int
ret
mov
mov
lea
out
sbb
add
in
ljmp
or
push
push
scas
or
arpl
lods
xor
sub
rorb
pop
push
sbb
enter
scas
das
sbb
jae
repz
inc
stos
or
xlat
test
pop
jle
xchg
or
jne
and
aas
adc
imul
cmp
aam
xchg
push
inc
mul
add
adc
adc
sub
fst
dec
js
and
cmp
xchg
adc
mov
mov
jecxz
pop
xor
sub
jno
xor
cmp
cmp
sbb
das
cld
loop
loope
inc
stos
or
verw
addb
sub
inc
loope
nop
xchg
sarl
push
das
jnp
and
cmp
incb
push
jne
daa
jb
int3
add
mov
test
adc
cmp
mov
sbb
sahf
add
lds
inc
shrb
mov
test
into
add
sub
out
adc
scas
pop
jge
std
xchg
icebp
pusha
and
js
je
mov
mov
jb
mov
test
sbbb
mov
cmc
or
inc
mov
adc
test
sbb
mov
xchg
mov
insl
dec
test
pop
mov
pop
add
pop
orl
fdivrl
negb
mov
mov
xor
push
rclb
rcrb
push
inc
xorl
jne
cwtl
test
imul
jb
dec
xchg
cmp
xorb
out
jb
xor
push
orb
movsl
push
scas
cmpsb
popa
or
jb
rorl
inc
cmpl
jg
fiaddl
es
inc
shll
pop
mov
sub
inc
jmp
das
mov
sbbl
mov
sarl
fsubs
push
jp
test
or
mov
mov
xchg
add
pop
pusha
test
jne
movsl
inc
sub
test
xor
mov
mov
lods
jo
push
imul
dec
mov
or
xor
insl
outsl
jo
xor
jnp
ss
sbb
xchg
cltd
xchg
or
jge
call
loop
xchg
jl
mov
lret
inc
roll
and
mov
shrl
dec
dec
loope
xor
cs
lods
loopne
pop
xor
test
push
push
ds
inc
lea
adc
push
shrl
sti
test
and
mov
push
pusha
jmp
call
test
leave
cmc
push
or
adc
pop
sbb
inc
cmp
xor
mov
lahf
jge
add
inc
adc
and
outsl
xor
push
pop
movsb
imul
sbb
sbb
dec
mov
xor
adc
inc
pop
xchg
cmp
add
call
add
inc
push
das
jmp
sbb
addr16
push
ret
in
aam
inc
and
and
ja
cmp
cmpsl
mov
jne
rolb
and
pop
inc
fstps
cmp
cmp
cmp
xchg
xor
or
add
adc
or
and
out
or
bound
repz
lahf
rcrb
fstl
mov
dec
jnp
js
adc
mov
sbb
jae
mov
jo
and
mov
fdiv
outsl
and
dec
aas
add
xchg
dec
xchg
pusha
pop
dec
jno
arpl
loopne
and
sub
lock
mov
cmpsb
push
lea
out
or
popa
sbb
inc
rcl
test
scas
cmc
int3
lock
stos
in
shrl
call
sub
mov
cmc
pop
xlat
cmpsl
add
ds
test
add
push
andl
push
sbb
pop
or
add
fbstp
test
pop
cmp
add
shrl
pop
jno
nop
loopne
inc
push
lds
cmpsl
mov
sub
push
or
vmwrite
pop
pop
jp
jecxz
mov
jno
int
xchg
insb
sbb
outsb
xor
test
out
pop
rol
into
push
out
mov
or
mov
sbb
inc
mov
inc
cli
mov
bound
push
sub
aad
sub
xor
push
pop
xor
sbb
out
in
daa
fsubl
cmp
repz
push
add
sbb
mov
push
pop
and
dec
jns
jecxz
cmp
cmp
xor
rorb
das
dec
rcr
outsb
outsb
or
adc
pusha
push
and
jne
xor
jl
sbb
add
mov
jbe
sub
or
pop
xorl
cwtl
sub
and
ljmp
and
cs
cmp
xchg
daa
dec
fdivr
push
stos
cmpsl
cmp
jge
cmpsb
jl
lock
cmp
mov
sub
add
inc
push
push
xchg
into
sub
xchg
loopne
xor
dec
sub
cmp
cld
jne
dec
and
pop
mov
sub
add
loopne
lret
sub
test
cmp
out
test
es
dec
jbe
call
jmp
jo
test
sbb
sbb
loope
rcll
sub
aam
jecxz
inc
inc
lods
and
mov
sbb
lret
jecxz
push
mov
add
xor
ljmp
test
mov
push
fnstcw
adc
xor
push
cld
int3
ret
pop
push
rcr
shlb
mov
dec
mov
jl
or
pusha
add
mov
and
cmp
jge
cmpsb
outsb
xchg
shrb
loope
dec
xchg
and
scas
pusha
fbstp
jmp
insb
add
push
push
imulb
ds
sub
ror
push
push
gs
out
inc
mov
js
lret
or
test
addr16
movsl
xorl
mov
int
nopl
das
push
pop
sub
call
inc
jmp
ss
jne
je
test
out
mov
mov
sub
in
and
clc
jge
inc
cld
xchg
mov
loope
mov
dec
jmp
mov
stos
fimull
mov
fucomip
and
push
rolb
aaa
testl
jo
dec
xorl
ja
lcall
pop
outsb
into
adc
pop
movsl
leave
cld
test
lret
iret
loope
jl
fs
rol
jmp
push
cmp
mov
dec
lock
sub
rcl
in
imul
shrb
adc
stos
dec
cmp
js
notl
scas
call
add
leave
add
mov
jge
test
cmp
mov
loopne
jnp
inc
enter
rcll
lods
shlb
addr16
stos
leave
push
pop
faddl
sbb
cld
in
cltd
mov
xor
cmpsb
popa
das
icebp
add
mov
popa
push
dec
pop
inc
clc
sahf
pop
inc
mov
push
enter
add
sbb
add
bound
in
sti
push
ljmp
xchg
mov
pop
pop
sub
mov
in
ljmp
rol
dec
out
xor
jne
je
loope
adc
push
sarl
fucomip
scas
cmc
cmp
in
pop
adc
xchg
sbb
int
inc
jge
jno
adc
mov
adc
repz
fsub
mov
jl
add
int3
fisttpl
out
ljmp
out
or
sbb
out
idivl
sbb
test
ss
mov
movsb
mov
push
or
add
ret
sub
dec
pop
jmp
aaa
cmp
lret
pop
fldenv
mov
andl
cmp
cltd
data16
setl
lcall
adc
sbb
subl
daa
pop
jl
orl
pop
jne
xor
gs
jne
pop
sub
call
in
in
lcall
sahf
repnz
cs
daa
xlat
sub
jp
xchg
and
int3
jnp
daa
jle
aaa
and
jne
stos
dec
push
xor
push
cmp
add
xchg
jbe
jle
movsb
inc
cmp
ret
push
int
cmp
iret
enter
pop
cmp
bound
scas
pusha
cmp
sbb
js
ja
adcb
and
or
das
sbb
js
jg
xlat
ret
ret
das
xor
js
movsl
mov
data16
sahf
xlat
add
flds
add
dec
sub
test
push
and
int
pop
xor
adc
stos
outsb
dec
jbe
ljmp
loopne
orl
and
out
ret
pop
daa
or
xchg
data16
mov
mov
sub
out
shl
pop
scas
fcoml
ljmp
ja
jge
lret
jbe
fld
bound
fucomi
push
pop
gs
push
adc
test
loope
je
adc
std
mov
sbb
add
and
mov
xlat
or
bound
ret
cmp
cmp
int
jecxz
mov
imul
fs
jne
shl
out
aas
mov
mov
push
jb
repz
es
les
addb
push
xchg
mov
hlt
imul
sbb
ss
inc
daa
dec
cmpsl
jne
push
mull
cmpb
andl
loopne
sahf
imul
scas
mov
ljmp
jnp
loopne
cmpsb
and
adc
mov
xor
js
inc
cmp
jae
loope
iret
jbe
push
decb
cmpsl
mov
sbb
jne
jp
cltd
rolb
aam
cld
mov
sbb
arpl
movl
int3
loopne
adc
cmp
add
dec
jae
rolb
in
loope
inc
shlb
sub
or
decl
ret
inc
dec
mov
or
push
negb
jbe
xor
push
fbld
insl
pushf
add
outsl
cmpsb
pop
xchg
push
std
mov
cltd
adc
imull
data16
fldt
mov
stc
mov
test
andl
ljmp
fdiv
ds
es
int3
in
movsl
imul
sub
fistpl
sub
inc
or
or
adcl
test
sub
and
ljmp
inc
mov
cs
inc
iret
sarb
je
movsl
and
add
fisubs
xlat
mov
imul
mov
mov
loopne
rep
movsb
cld
in
pop
imul
orl
mov
fdivs
dec
adc
outsl
daa
inc
mov
test
mov
add
inc
popa
sbb
sub
xchg
xchg
xchg
pop
les
push
xchg
cmp
gs
mov
add
jbe
lcall
mov
xor
pop
ret
jp
cmp
and
or
fistl
or
cmp
fadds
ja
jne
dec
add
xchg
push
push
not
pop
xchg
xchg
inc
and
push
add
cli
cs
ret
pop
stos
insb
cmpsb
adc
in
movsl
dec
adc
mov
mov
xorl
jo
mov
kmovd
sbb
daa
xchg
iret
iret
pop
mov
jp
lds
shl
add
imul
mov
dec
xchg
sbb
add
and
movb
xchg
daa
sbb
push
inc
adc
add
aaa
jno
jns
jbe
nop
negl
mov
test
mov
inc
push
dec
cmp
jge
xchg
push
or
pop
pop
mov
dec
iret
jne
xor
ljmp
outsl
lret
inc
fistl
jp
ja
jmp
or
mov
arpl
sub
iret
jmp
adc
ret
or
loop
fmull
jb
cmp
dec
sub
js
xor
xchg
enter
cmpl
insl
loope
jge
ret
js
mov
in
mov
xor
dec
adc
addb
push
shr
push
pinsrw
push
cmp
rorl
sbb
add
or
jp
fcomi
xchg
sbb
jecxz
inc
add
mov
cmp
icebp
movsb
push
add
mov
cmp
add
aaa
push
sub
cmc
add
rcr
push
fsub
xor
inc
mov
inc
loope
jecxz
mov
stos
fistl
xchg
adc
test
cltd
cltd
push
mov
push
mov
mov
lahf
mov
and
loopne
gs
fs
mov
or
pop
sti
rolb
pop
pop
mov
rcrl
push
je
nop
nop
sbb
xor
adc
nop
dec
pop
fmull
jg
jo
mov
push
and
push
je
push
sub
call
shr
mov
fiaddl
push
push
loope
lea
movsl
jp
insb
add
das
jo
jge
mov
jge
iret
mov
test
call
or
pop
cmc
mov
jns
push
nop
negb
adc
test
pop
pop
loopne
and
mov
int
int
push
and
test
dec
cmp
mov
ret
cmp
addr16
cwtl
inc
xlat
jo
out
in
xchg
sub
adc
enter
pop
je
out
xor
and
and
out
inc
aam
sub
aam
add
xor
por
les
xchg
std
movsb
call
outsl
call
dec
xchg
orb
or
ljmp
dec
arpl
mov
inc
xchg
add
std
sbb
inc
aam
mov
pop
mov
sarb
dec
movsl
call
cmp
orb
ret
cs
cltd
or
idiv
mov
cmp
sbb
cmpsl
xor
cmc
or
push
or
in
imul
fmull
insb
insb
pop
movsl
cmc
repz
or
inc
cmp
xchg
cwtl
loopne
cmc
xchg
mov
outsb
enter
inc
jmp
in
mov
data16
jnp
sub
insb
imul
lea
cmp
fldl
jge
in
xchg
inc
loopne
pop
loop
xchg
jno
movsb
aad
outsb
aad
outsl
cmp
sub
mov
in
out
cmp
arpl
iret
into
xor
out
fsts
mov
inc
sub
sub
lock
rorl
or
and
cmp
icebp
rcr
addl
jo
push
out
pop
pop
loopne
mov
pop
gs
aam
add
mov
push
inc
adc
pop
mov
rol
popf
adc
insb
stos
add
add
pop
stos
js
pusha
xor
cld
fdiv
and
imulb
xor
jg
andl
std
in
clc
pop
xchg
out
lret
in
sbb
adc
inc
js
dec
dec
icebp
pop
adcl
loopne
jmp
leave
sbb
xchg
call
cmp
xchg
pushf
mov
ljmp
pop
out
pop
add
jl
mov
cmpsl
icebp
imul
scas
push
inc
scas
pop
pop
add
xchg
aam
push
orl
jae
icebp
mov
es
cmp
sub
inc
lret
fldl
gs
test
sbb
mov
or
ja
xchg
and
shlb
mov
adc
xor
aam
mov
or
lock
or
dec
and
dec
stc
roll
mov
sbb
inc
add
or
subl
les
daa
or
jns
mov
in
mov
aam
mov
or
or
mov
mov
mov
movl
sbb
sbb
push
cmp
icebp
jmp
insl
inc
cmpsb
pop
das
sbb
mov
loope
daa
mov
sub
inc
xchg
or
cmp
jge
and
jp
dec
push
inc
sbb
stos
rcrl
pop
das
call
pop
cwtl
js
or
fldl
jecxz
jns
mov
lds
lods
cmp
aaa
xchg
sbb
adc
cmc
lods
sbb
mov
cs
dec
inc
mov
push
inc
pop
stc
inc
sub
lods
push
fmull
mov
dec
mov
add
repnz
inc
lods
mov
add
pop
call
lcall
push
outsl
mov
fldl
sub
cmp
push
call
sub
loope
dec
in
xor
and
rorb
out
cmc
add
sbb
ret
xchg
mov
mov
imul
sub
idiv
jmp
sub
clc
push
add
shrl
add
es
pop
sub
xchg
push
std
mov
add
les
rclb
sbb
jno
jo
jne
pop
mov
js
insl
mov
add
ss
jbe
xchg
int
shrl
dec
popa
dec
sti
pop
dec
add
mov
fwait
das
jne
lret
cmp
and
in
jns
mov
dec
stos
dec
jg
shlb
insl
mov
lods
movsl
in
jbe
faddp
movsl
in
or
jmp
xor
cmp
sub
lds
push
push
or
arpl
adc
testl
push
out
add
popf
cld
sbb
push
jmp
add
gs
lcall
jmp
mov
pop
inc
ficomps
pop
mov
pop
push
pop
or
ret
test
mov
push
dec
xor
inc
popa
loope
es
push
xor
les
mov
xor
leave
add
test
sub
lcall
cmp
lods
mov
pop
xchg
mov
fwait
pop
dec
adc
rcr
clc
dec
push
inc
jo
xor
push
pop
and
cld
jge
mov
aad
pop
dec
xchg
mov
cmp
jae
push
cmpsb
js
jecxz
add
cmpsl
or
adc
mov
xor
pop
pop
gs
es
cmp
and
out
push
lods
fs
sub
xchg
sarl
aam
push
fmul
adc
xor
and
push
sub
sub
imul
cmpb
insl
push
sub
add
adc
xchg
icebp
nop
mov
add
sub
mov
sbb
aam
pop
dec
je
fldcw
scas
mov
or
mov
aam
repz
or
mov
andl
in
lret
xor
mov
jp
jb
mov
xchg
gs
sub
sbb
rcr
push
xor
jmp
jg
xchg
mov
icebp
dec
pop
mov
jo
js
in
mov
aad
lea
jl
cmp
add
aam
hlt
dec
lcall
loope
das
dec
add
imul
dec
in
sub
pop
push
shr
arpl
sbb
dec
xchg
data16
fwait
popa
pushf
xor
or
jmp
or
xor
insb
sub
jno
imulb
ficomps
adc
push
adc
sti
pop
and
lcall
sbb
ss
test
movb
aas
dec
mov
shrb
fcoml
push
push
dec
and
jp
divb
mov
pusha
xchg
cmpsl
mov
jge
cmp
inc
fistpll
ja
ss
sub
daa
cmp
mov
test
adc
adc
or
pmaddwd
aad
xor
jmp
orl
shrb
mov
push
ret
cmpsl
inc
movsl
ret
mov
fisubs
mov
cwtl
or
push
leave
je
dec
mov
aad
xor
or
dec
inc
repz
ret
les
jge
cmp
lcall
sarb
je
push
aaa
andl
xchg
pop
out
daa
inc
imul
jnp
daa
iret
rcrl
mov
and
dec
arpl
xor
ret
mov
out
addb
daa
aaa
aad
mov
sub
je
cmp
pop
dec
sbb
push
cmp
fiaddl
xor
out
cmpsb
pop
dec
mov
add
pop
pop
inc
sbbl
xor
cmp
int
fs
inc
mov
enter
sbb
sbb
std
pop
ss
pop
test
lock
and
inc
stos
test
aam
movsb
imul
sub
imul
popa
jge
test
adc
iret
or
fdiv
orl
shll
mov
add
sbbb
std
jecxz
add
xor
movsl
ljmp
and
loop
pop
add
lea
xor
add
iret
cmp
nop
insl
popa
cmp
jb
movsb
jp
adc
jne
je
xor
push
dec
icebp
xchg
mov
roll
icebp
or
mov
add
cmp
popa
cmp
xlat
leave
lret
subb
loopne
lds
arpl
sbb
sbb
test
test
and
sbb
xor
xchg
xchg
adc
std
pop
pop
les
xchg
and
add
add
cmp
xchg
inc
mov
add
cmp
mov
out
mov
xchg
add
loope
pop
mov
jge
and
cmpsl
lds
inc
xchg
add
pop
pop
sarb
cmp
pop
imul
ds
mov
jnp
fstps
sub
test
hlt
push
pusha
push
pop
out
inc
push
sarb
dec
imul
mov
push
dec
lahf
jmp
inc
cs
mov
mov
fstpt
and
dec
and
sub
pusha
add
or
loope
push
movsl
into
js
add
lock
jnp
dec
push
cs
repz
lds
loopne
arpl
dec
sbb
jecxz
adc
mov
pop
test
icebp
dec
sub
push
inc
rclb
jnp
jp
stos
sub
and
add
mov
test
shll
xchg
fldcw
jge
push
iret
insb
cmp
aad
daa
test
ss
imul
push
subb
add
arpl
xlat
in
cmp
js
or
mov
aas
jmp
ds
imul
test
mov
gs
mov
or
xchg
in
jge
fldcw
loopne
ljmp
or
leave
js
ss
bound
popf
insl
rcrb
and
and
and
es
push
xor
sub
iret
mov
sub
aam
and
add
scas
sub
push
jnp
xlat
enter
xchg
and
inc
mov
xchg
or
gs
mov
mov
mov
xchg
incl
je
or
out
out
pop
inc
fiaddl
sbb
shlb
xor
in
sbb
popf
pop
add
add
adc
mov
outsb
inc
dec
mov
sub
mov
out
gs
pop
scas
fbld
testb
ret
sub
in
or
add
and
inc
aam
sbb
lcall
roll
xchg
out
push
xchg
mov
insb
pop
or
mov
ret
sub
push
mov
fucom
les
aaa
pop
sbb
jae
fnstcw
jecxz
fwait
add
sub
adc
mov
dec
cs
xchg
xor
and
fisttpll
aam
sub
xor
xor
cmp
xchg
add
jge
sub
inc
mov
mov
inc
jg
adc
lods
sub
pop
mov
mov
rol
sub
jmp
jne
xchg
mov
icebp
loopne
add
sbb
xchg
push
mov
in
mov
mov
mov
adc
out
pop
jne
ss
aam
orl
jl
mov
mov
and
xor
in
mov
jnp
adc
call
jno
and
outsb
shlb
and
sub
dec
and
ljmp
push
lds
xchg
add
nop
pop
inc
mov
dec
orps
push
roll
pop
cld
push
ret
es
sub
inc
jmp
push
mov
jmp
fs
xor
sti
in
add
jns
movsb
jae
imull
add
add
inc
pushf
jns
clc
dec
mov
fisubs
aaa
mov
or
pop
jp
jb
cs
imul
shlb
push
call
orl
das
aas
rol
add
sub
xchg
jp
int3
sti
jl
inc
cli
es
sbb
popf
mov
pop
cmp
imul
clc
and
icebp
xchg
scas
test
sub
jns
pusha
adc
xor
jp
cmp
cld
xor
popa
xchg
mov
imul
js
stc
das
add
adc
movb
adc
jcxz
dec
push
or
lock
xchg
or
mov
shrl
mull
lcall
push
cmp
dec
mov
int
push
ss
ret
call
loopne
fidivl
and
lahf
push
sub
push
xchg
loop
push
cmp
mov
push
fs
sbb
push
inc
adc
inc
adcl
dec
sbb
mov
loope
push
add
lds
dec
cmp
add
xchg
add
lods
add
or
push
mov
cmp
les
add
arpl
clc
push
or
xor
es
cli
xchg
in
push
push
pop
xor
push
mov
or
mov
jmp
or
pop
sub
dec
xchg
repz
mov
lcall
lahf
jp
sbb
orb
add
inc
cmp
sub
in
cmp
xchg
xchg
mov
mov
cmp
pop
and
cs
loope
xor
cmpsl
and
xchg
pushf
insl
gs
cmp
arpl
sbb
cmpsb
addl
mov
or
ret
cmpsb
fsubrl
push
insl
neg
dec
ret
mov
push
nop
pop
test
dec
mov
dec
dec
lods
bound
and
dec
xlat
inc
and
mov
test
add
dec
or
movsl
sub
mov
dec
flds
add
push
ss
aaa
pop
movsl
shr
arpl
repz
shrl
push
cwtl
enter
das
jmp
dec
push
push
xor
or
xor
cmpsb
cmp
lret
movsl
pop
inc
mov
xchg
mov
mov
dec
inc
sti
adc
inc
stc
or
in
xor
push
jae
sub
lahf
xor
ret
pusha
adc
inc
adc
lret
ror
pop
inc
cltd
sub
adc
mov
mov
push
mov
add
ret
test
test
mov
push
inc
es
mov
pop
jge
jns
shrl
lret
adc
es
sub
xor
dec
mov
sub
add
pop
inc
fs
aam
mov
xor
movsl
insl
jae
mov
mov
xchg
mov
pop
lcall
dec
std
inc
mov
test
mov
shll
pop
push
jmp
jb
dec
adc
sub
mov
pop
js
cmpsb
pop
jp
sbb
ret
inc
scas
mov
push
adc
lods
xlat
popa
fisubrl
or
sbb
xor
push
mov
fcoml
jno
mov
js
dec
or
stc
popl
push
sub
subl
pushl
sbb
jno
add
in
push
bound
movsl
insb
test
pop
idiv
mov
adc
xor
pop
out
mov
pop
out
inc
inc
mov
mov
lret
loope
mov
add
dec
dec
pop
mov
or
stos
push
push
daa
sbb
adc
cld
andl
inc
or
sub
test
insl
popa
xor
inc
dec
and
mov
pop
pushf
or
loope
pop
call
mov
push
stos
comiss
lods
inc
mov
int3
or
fisttpll
push
and
movsb
imul
popf
daa
mov
orl
cmp
notb
inc
cmp
fistpl
push
sbb
lods
mov
addr16
lret
ficoms
sub
jl
sub
mov
xchg
push
sub
gs
sub
int
imul
push
cmp
cmp
scas
adc
jmp
shrb
inc
insb
addr16
loop
js
testl
inc
add
fimuls
out
imul
dec
pop
mov
pop
fistps
xchg
dec
aam
push
ja
je
rcrl
pop
rcll
les
xor
loope
cmc
daa
jp
aam
hlt
mov
and
in
adc
test
push
test
xchg
roll
fnsave
ss
pop
mov
jmp
xor
dec
xor
repz
adc
and
inc
and
jno
add
push
mov
cmp
adc
into
sbb
daa
sbb
xor
inc
mov
mov
push
sbb
inc
aaa
inc
or
idivl
xorl
cmp
ret
pusha
xor
fcmovbe
ret
data16
mov
add
jecxz
rcrl
or
es
jno
cmp
and
push
jo
or
sub
mov
stos
jle,pn
dec
or
aam
outsb
imul
es
daa
aaa
adc
adc
bound
push
adc
loope
fdivrp
xor
aam
sbb
jmp
inc
mov
je
fiadds
jecxz
mov
out
mov
push
jne
or
sub
sarl
ljmp
gs
pop
clc
xor
jbe
arpl
addl
or
test
dec
jns
pusha
and
movaps
mov
xor
movsb
setg
cmp
hlt
jbe
dec
outsl
repz
jns
push
or
popa
pushf
je
mov
xchg
mov
add
mov
pop
in
or
pop
xchg
outsl
ret
mov
aaa
jae
leave
sub
insb
jmp
jno
push
in
nop
cmp
xchg
and
push
fbstp
icebp
leave
enter
out
dec
dec
test
push
xchg
fs
fsubs
mov
xchg
pushf
movsl
roll
sbb
adc
movsl
xor
test
xchg
xor
pop
mov
ds
iret
lret
mov
inc
decl
adc
in
movsb
push
xor
iret
xchg
sub
cltd
movsb
add
fstps
lods
and
sbb
jmp
push
fistl
jmp
lods
fstpt
fs
or
pop
pop
inc
gs
or
movntps
dec
sbb
test
cmpb
pop
sub
cmc
sub
cli
test
and
das
clc
add
adc
mov
dec
insb
test
mov
cmp
ss
ret
stos
add
sbb
mov
or
pop
je
sbb
mov
jo
jne
insb
xchg
loopne
mov
scas
daa
fnstcw
js
xchg
out
in
or
jp
ljmp
or
jo
inc
xchg
ds
jge
sbb
jp
sub
push
popa
mov
stos
mov
test
dec
aas
mov
add
test
pop
loopne
sub
xchg
mov
movsl
xchg
ljmp
mov
out
lds
sub
cmpsl
pop
jbe
cwtl
cli
shrl
sti
fsub
pop
ja
mov
shlb
in
cmp
and
out
fisubrl
xchg
xchg
cmc
sbb
and
push
push
add
add
mov
dec
aam
jecxz
lods
movsb
cmp
pop
fmuls
xor
movsl
push
fdivrs
int
stos
mov
movsb
dec
push
arpl
dec
and
loopne
jecxz
push
xchg
pop
enter
pop
shrb
sub
add
movsb
or
xchg
xchg
fisttpll
push
mov
ljmp
or
cld
mov
dec
rorb
ret
mov
rclb
jecxz
aad
cltd
jp
rcll
icebp
inc
cmp
call
aad
xor
pop
mov
repz
adc
mov
inc
inc
add
mov
add
xor
in
imul
xchg
stos
int
mov
adcl
or
push
fsubr
movntps
dec
nop
add
fs
sbb
inc
cli
addb
mov
aam
outsl
gs
js
das
cmp
rorl
inc
aaa
mov
outsl
or
or
loope
cmp
dec
test
ret
xor
in
add
add
xor
mov
imul
lahf
cld
call
ret
sbb
jp
xor
xchg
mov
aas
loopne
jae
mov
jle
loope
iret
mov
sbb
aad
inc
and
jnp
test
add
lcall
lcall
and
aas
jge
popf
ret
setb
sarl
push
out
lret
and
and
fs
dec
les
adc
outsb
xchg
jne
mov
sbb
inc
aaa
mov
rol
imul
mov
lock
cmp
jno
adc
inc
sarl
cmp
mov
dec
sub
add
sbb
popa
mov
or
cmp
into
leave
or
or
out
loopne
lods
and
add
push
add
pop
push
mov
dec
or
imul
xlat
jecxz
ret
cld
adc
push
or
aaa
das
lret
in
sub
dec
je
mov
xor
inc
ret
arpl
rorl
xor
outsb
push
pop
cmpb
pop
inc
repz
push
sub
jb
add
add
xor
adc
into
loope
sahf
push
std
dec
inc
inc
hlt
stos
test
iret
mov
and
or
jae
dec
pop
sarl
fldz
pop
ja
movsl
xor
or
sbb
faddp
mov
push
add
sbb
jecxz
sbb
pop
sub
lret
push
xor
cmp
mov
xor
adc
rol
icebp
cltd
add
pop
mov
out
nop
mov
and
mov
mov
mov
inc
push
pushw
or
xchg
shlb
aaa
addr16
xor
and
pop
mov
call
mov
inc
push
repnz
test
pop
adc
je
adc
lea
stos
pop
mov
daa
loopew
jl
insl
movsl
ret
jmp
and
mov
and
not
loop
cltd
jne
xchg
mov
hlt
mov
les
pop
lret
dec
or
push
pop
sub
std
xor
lods
add
popa
or
dec
ljmp
cld
mov
aaa
lods
inc
push
xor
cltd
jo
fwait
or
imul
stc
add
push
mov
mov
pop
lods
rorl
insl
sub
aaa
fistl
cmp
inc
or
cmovge
movb
out
mov
adc
push
les
subl
pop
sub
sub
dec
dec
add
outsb
or
and
push
jecxz
jns
shrb
jmp
aas
jbe
clc
or
add
or
push
sbb
imul
rcrb
and
dec
sbb
dec
mov
ljmp
jl
push
push
push
push
ret
jmp
add
les
daa
pushf
daa
mov
and
mov
aaa
les
and
bound
and
cmpb
mov
popa
sub
xchg
adc
ret
add
sub
mov
cmc
ret
fwait
in
cmpsl
jg
mov
xlat
jo
dec
aaa
push
xchg
adc
mov
aad
dec
leave
movsl
add
dec
ljmp
outsb
pop
outsb
xchg
jl
stos
test
lahf
mov
jo
or
push
dec
mov
xchg
cmp
js
leave
testb
and
xchg
add
stc
sbb
ja
xchg
push
add
lcall
pop
cmp
sub
sbb
iret
aad
fisubrl
or
pushf
inc
jnp
and
pop
or
jo
push
out
icebp
jge
loope
test
sbb
or
mov
cmp
fistpl
out
inc
icebp
pop
rclb
pop
mov
or
dec
xor
and
sbb
ds
jmp
ret
ret
jp
cmp
fs
jns
sbb
out
push
shl
roll
pop
ret
lea
enter
mov
adc
inc
and
aas
push
dec
xchg
subl
xor
popa
mov
cmpsl
daa
mov
mov
sbb
repnz
test
mov
pop
lods
mov
pop
xor
or
push
mov
popa
adc
ret
xchg
pop
and
push
insl
cmpsl
insb
add
adc
sub
and
or
mov
xchg
mov
xlat
pop
or
dec
mov
adc
dec
arpl
or
xchg
adc
push
sbb
push
jge
fisubs
lods
add
fwait
outsl
je
add
pop
sub
add
inc
aas
shll
adc
mov
rolb
out
cltd
jmp
nopl
movsb
popf
mov
dec
pop
add
xchg
push
lcall
mov
adc
dec
out
ljmp
or
stos
push
shlb
pop
out
bound
xchg
aas
jle
idivl
xor
xor
xchg
jecxz
mov
cwtl
cwtl
cmp
and
repz
iret
mov
dec
sbb
mov
bound
hlt
xchg
sbb
mov
ret
pop
aad
enter
cmp
xor
ret
xchg
das
int3
sarl
add
scas
les
data16
iret
inc
mov
fildll
cmp
jae
daa
mov
inc
sbb
in
adc
out
xchg
mov
in
push
and
lret
push
adc
stos
cmp
and
je
xor
lods
push
jne
stos
in
push
and
ret
lods
pop
pop
sbb
cmp
cmp
sarb
push
mov
inc
add
dec
mov
and
fmull
shl
push
cmpsb
cmp
push
mov
dec
push
add
mov
and
inc
in
adc
push
inc
pop
int3
adc
mov
adc
call
xchg
orl
xchg
adc
sbb
xchg
jb
orl
inc
cmp
ret
fildl
cli
ret
jno
out
xchg
js
std
ficoml
push
add
or
in
inc
mov
pop
popf
das
mov
dec
mov
movsb
sub
das
ret
lods
mov
das
add
mov
add
sbb
mov
movsl
nop
inc
add
lock
inc
lds
cmp
xchg
dec
sbb
jecxz
mov
xor
loopne
daa
pusha
cmpsb
ret
vmwrite
popa
arpl
sub
cmp
lret
inc
ret
xchg
fwait
push
enter
aaa
sbb
mov
add
fcmovnb
add
cmp
lahf
push
mov
mov
adc
mov
jb
ja
iret
int3
mov
orl
arpl
jge
ret
adc
clc
mov
and
insb
jno
mov
push
cmp
sub
sub
jae
mov
hlt
inc
cmp
push
adcl
testl
xchg
and
xchg
mov
jge
push
mov
rcll
add
cmp
push
mov
jp
das
mov
out
ret
jl
bound
mov
js
push
mov
mov
loope
lods
xlat
inc
leave
mov
mov
adc
dec
pop
test
popf
mov
dec
mov
xchg
push
out
sbb
jmp
pushf
pop
add
insb
jae
add
mov
negl
lahf
sti
adc
nop
sub
mov
rcll
push
nop
adc
push
movsl
or
mov
in
mov
test
mov
mov
xchg
mov
pop
sbb
shlb
lock
je
shrb
and
lods
push
gs
adc
and
nop
mov
addb
fidivl
push
jo
arpl
mov
and
jne
or
add
lds
pop
xchg
jbe
insl
fs
dec
dec
mov
or
pop
or
pop
cld
fisttpll
jne
xchg
or
dec
sbb
add
push
inc
test
pop
pop
inc
jo
add
stc
sub
leave
jmp
lret
mov
inc
jge
dec
popf
jp
repz
inc
aaa
fsts
mov
and
add
xorb
lret
fldl
sahf
fcmovnb
sub
std
jne
jecxz
js
dec
loope
jmp
fsub
mov
gs
or
loopne
sbb
push
jge
sub
lea
inc
imul
shrl
pusha
lods
mov
jno
adc
or
imul
lock
dec
sbb
xchg
ss
lds
sub
jo
mov
in
shrb
outsl
jb
xchg
cmc
sub
es
test
push
xchg
jl
push
out
adc
cmc
orb
sbb
scas
add
in
or
jno
cmp
push
pop
shrd
daa
orb
int
adc
pusha
sub
and
xor
cmpsl
test
or
aaa
mov
imul
std
daa
mov
sub
ret
int
dec
xchg
jmp
mov
mov
mov
mov
fisubs
pop
stos
lret
movsl
mov
cmc
or
aad
mov
add
fstp
stos
loopne
adc
rorl
popa
cmp
pop
adc
mov
jp
jge
insl
aaa
add
cmpb
add
das
cwtl
pop
das
cli
push
hlt
scas
ror
sub
addl
and
mov
ret
push
sub
and
mov
rorl
loope
push
pop
sahf
push
loop
push
xor
push
out
sub
and
mov
cmp
fildl
jge
jbe
sbb
push
push
mov
wrmsr
inc
in
adc
and
nop
adc
xchg
call
movlps
jge
addb
jmp
js
lret
or
movsb
cmp
sbb
js
jns
jl
xchg
mov
and
mov
push
fiaddl
add
inc
xchg
addr16
jecxz
jnp
push
cmpsb
mov
icebp
xchg
insl
loopne
xchg
lods
clc
mov
and
or
ret
mov
test
or
mov
gs
test
jae
les
je
stos
or
or
and
sub
scas
das
test
cmpsb
test
xor
mov
pop
fnstcw
in
jno
mov
sti
lret
adc
ficoml
das
or
pop
adc
pop
xchg
mov
and
loope
test
add
lret
or
mov
push
les
mov
mov
test
das
jp
lret
fwait
pusha
in
test
jb
iret
pushf
iret
adcb
pop
or
inc
pop
cmp
ja
xor
jecxz
scas
pop
mov
mov
lcall
cmp
mov
loopne
sub
push
lcall
cmc
cmpps
mov
push
call
rcrb
mov
or
adc
sbb
mov
xchg
imul
jp
mov
mov
or
or
ret
mov
dec
add
xchg
test
xor
sbb
mov
aas
add
sbb
sbb
out
jge
cwtl
pop
js
xchg
mov
je
push
in
cmp
dec
imul
push
je
sbb
rcr
pop
ja
mov
ss
adc
out
push
xchg
pop
and
ja
sbb
loope
fstl
and
js
inc
testl
adc
negl
sub
test
push
push
adc
adc
jl
das
sub
mov
jle
sub
das
adc
mov
xor
push
and
and
xchg
push
mov
frstor
or
pop
sbb
aaa
and
fs
adc
mov
inc
mov
push
mov
repz
jbe
mov
or
or
mov
scas
aas
ds
rol
add
xor
jne
scas
popa
cmc
repnz
and
lds
movsb
xor
jne
sahf
inc
es
jns
pop
enter
jnp
hlt
adc
js
and
data16
and
cmp
cmp
dec
icebp
pop
jb
pushf
push
es
mov
je
jge
insl
int
and
mov
and
and
cwtl
test
jne
cmpsl
push
repnz
in
rolb
in
cmp
pop
insl
fimuls
clc
push
pop
je
add
sbb
lock
sarb
das
and
fists
shl
and
push
mov
fcom
adc
loope
sbb
lock
rcrl
pop
cld
and
pop
insl
loop
cmp
cs
xlat
cmp
loopne
dec
mov
jb
dec
scas
inc
orb
sti
arpl
ja
int
and
sbb
mov
mov
mov
add
dec
out
aam
test
mov
or
ret
adc
loopne
rcrl
pop
das
ret
inc
mov
cmp
add
cmp
mov
outsl
lcall
cli
loope
sub
mov
jg
or
sub
test
dec
adcb
jbe
int
pop
adcl
and
push
sbb
js
mov
test
pusha
ds
jb
add
add
mov
pushf
cmp
xchg
jae
dec
lock
sti
movsb
pop
mov
xor
xchg
add
ds
mov
cmp
or
sbb
lds
adc
fcoms
dec
push
jg
sub
fldl
jne
test
shrl
xchg
push
test
inc
xchg
dec
xchg
cmpl
and
movsb
inc
test
jne
push
pop
pop
aam
pop
xor
push
pusha
cltd
inc
loopne,pn
mov
adc
add
mov
mov
cmp
or
jmp
outsw
or
add
pop
dec
and
repz
push
loope
dec
mov
addl
jae
jne
sub
pop
cwtl
mov
jl
adc
push
push
mov
dec
fnsave
les
and
arpl
inc
pop
cmp
fsubrs
daa
cmpsb
sarl
popa
fs
into
inc
inc
xchg
in
xchg
je
popf
mov
cs
repz
das
xor
rcrb
and
and
add
in
xor
cmp
outsl
adc
cmp
or
cmp
inc
sub
sti
push
lock
loope
fldl
out
jo
fcomps
rorl
jmp
xchg
pop
into
ret
add
ficoml
daa
cwtl
dec
adc
test
imul
mov
popf
push
jle
push
mov
loopne
ss
cmp
test
mov
xor
roll
sub
lret
in
outsb
loopne
inc
iret
push
sub
cmp
inc
and
in
in
pop
or
pop
test
imul
cmp
scas
loope
rorb
sbb
mov
js
dec
adc
cmp
and
pop
add
sbb
or
dec
icebp
les
lock
xlat
xor
and
arpl
dec
and
inc
jo
pop
and
inc
cmp
add
push
loope
adcl
adc
fnstenv
or
pusha
or
lret
frstor
js
bound
dec
nop
pushf
scas
insl
loope
and
aad
nop
fstl
adc
ficoms
outsl
adc
sbb
push
mov
and
out
cmpsl
pop
add
xor
jae
push
pop
fdivs
sbb
clc
cmp
add
pop
scas
xor
pop
pop
lds
or
nop
aas
add
repz
jo
and
push
fsubl
pop
das
lret
pusha
pusha
sbb
and
pop
lcall
dec
pop
inc
jo
sub
sbb
clc
mov
or
in
sbb
or
fwait
cmpsl
lret
test
mov
add
nop
pop
xchg
mov
xor
xchg
pop
add
mov
adc
dec
lock
enter
imul
insl
bound
pop
addl
jle
das
sbb
mov
inc
ret
loopne
pop
push
ret
scas
mov
rclb
push
ret
or
and
addl
ret
ret
inc
repz
mov
push
test
loopne
mov
xchg
lods
add
sub
je,pn
out
mov
sbb
xchg
dec
ret
mov
sbb
mov
mov
mov
sbb
idivl
or
mov
mov
mov
fisttpll
mov
dec
push
lods
mov
data16
push
pop
adc
add
jge
pop
out
or
mov
js
out
xor
lcall
sub
sub
ret
inc
xchg
outsl
add
jb
sbb
pop
movsb
rcrb
mov
aas
cmpsl
mov
sbb
insl
das
inc
dec
cld
rcrb
mov
roll
shlb
jbe
or
jne
insl
dec
adc
jecxz
push
mov
testl
int
xor
push
jnp
sub
adc
cmp
je
shrb
inc
dec
out
adc
cmpsb
or
inc
sub
adc
mov
decl
or
dec
or
adc
jmp
sbb
push
xchg
jmp
fcomi
xor
push
cmp
lock
or
jne
daa
pop
mov
test
jmp
push
sbb
jl
cmp
mov
cmp
pop
inc
cmpsl
sub
add
inc
je
and
hlt
sbb
loop
mov
xchg
leave
icebp
adc
and
pop
scas
test
into
sub
shrl
or
cmp
mov
cmp
jo
loope
xor
lods
icebp
in
es
aas
xor
mov
bound
das
and
arpl
lret
aas
push
jg
inc
ret
xchg
pop
and
rorb
ret
adc
push
pop
mov
jne
insl
mov
inc
pop
jae
lcall
lock
mov
daa
scas
das
sahf
push
pop
das
inc
repz
pop
lods
loop
xor
push
cmc
loop
add
lods
push
mov
fists
jecxz
sbb
orl
leave
dec
push
and
pusha
inc
out
daa
sub
ret
lret
inc
sbb
mov
jae
jno
adc
ret
jnp
xor
mov
xorl
add
test
sbb
sbb
aam
fucompp
sahf
add
jp
pop
xor
rorl
jo
cwtl
leave
daa
sbb
sbb
loope
mov
mov
sub
subl
inc
shr
inc
out
mov
mov
std
inc
mov
push
pop
adc
jb
push
loope
mov
xchg
std
xchg
enter
cmpsb
xorl
out
je
cmpsl
and
or
ret
dec
dec
jae
aad
lock
dec
jmp
in
cmc
outsb
sbb
nop
addr16
or
push
mov
or
jle
cmp
pop
sbb
sub
push
mov
sbb
in
mov
pop
lods
mov
mov
jae
cmovne
inc
sub
movsl
popf
fst
or
lods
pop
pop
xor
mov
mov
out
repnz
jg
loop
stos
or
shr
test
mov
jmp
cwtl
test
loope
dec
jb
mov
lods
or
movsl
jmp
sbb
mov
nop
mov
call
xchg
dec
jg
fs
or
xor
movsb
adc
adc
dec
popa
das
jp
cli
aam
cmp
jno
mov
adc
and
or
mov
cmp
sub
mov
push
cmp
testl
sbb
pop
lret
or
inc
jge
mov
lock
sub
mov
dec
or
pop
gs
pop
pop
xlat
lea
push
insb
repz
loope
mov
sub
call
and
dec
add
cltd
rcll
test
jmp
stos
dec
mov
jmp
push
adc
adc
adc
sbb
aad
out
push
inc
dec
lods
cmp
push
or
or
adc
sti
test
insb
shll
jnp
and
pop
xchg
aam
je
bound
cs
aad
cmc
add
daa
and
ljmp
popa
xchg
push
divl
push
sbb
cmp
mov
stc
add
cmpsb
cs
div
sbb
pop
call
mov
sub
xlat
jmp
xchg
lcall
subb
adc
cltd
rcrb
jns
dec
pop
ss
movsl
jno
loopne
stos
pop
std
mov
dec
fiaddl
dec
subb
mov
mov
outsl
pop
stc
add
in
aad
icebp
sub
in
adcb
push
jmp
cs
dec
mov
rcl
out
mov
jp
xchg
lea
imul
rclb
aas
push
push
jno
stos
ret
jae
xchg
loopne
ljmp
and
lds
lret
aam
rclb
jnp
leave
mov
lret
leave
dec
test
comiss
ljmp
test
popf
inc
popf
xlat
cwtl
ret
ljmp
test
lea
lret
adc
addb
scas
mov
in
pop
loopne
lahf
mov
mov
das
enter
jp
popa
push
adc
push
test
adc
int
or
lret
adc
inc
cmpb
scas
int
dec
cmp
and
jecxz
pop
pusha
mov
pop
xlat
adc
add
pop
xor
push
fistl
pop
fisubrs
scas
add
jnp
ss
adc
or
and
xchg
cmpsb
inc
xor
push
call
fstpl
pop
xor
add
test
leave
cmp
pop
packssdw
insb
jo
mov
push
in
or
pop
sti
rolb
dec
sub
fwait
rcr
in
clc
push
nop
sbb
in
mov
into
push
bound
pusha
fimuls
adc
add
add
and
cs
add
cmp
scas
xchg
stos
loop
and
mov
dec
rcrl
cli
xor
in
iret
xor
lock
shrb
sub
cmp
sbb
mov
xor
mov
repnz
sbb
lds
jbe
js
and
push
or
add
push
rclb
and
and
rcll
or
repz
testb
jb
or
rol
or
mov
shrb
gs
fldl
mov
rcll
aam
ja
mov
int
imul
into
xor
cmpsl
and
jb
add
mov
add
cmp
mov
or
pushf
mov
add
enter
adc
and
rcrl
or
sbb
sbb
sbb
jmp
insl
daa
movsl
and
xchg
cmp
insl
add
rcrl
mov
push
in
aad
cs
xchg
jmp
fadd
mov
xor
add
jl
or
sbbl
cmp
addl
push
push
js
cli
or
push
cmp
pop
roll
jg
popa
and
pop
int
add
cli
adc
and
ret
ljmp
clc
icebp
out
inc
lock
movsb
mov
add
fs
les
addl
out
leave
lock
and
dec
ljmp
xor
jo
sarl
in
sbbb
dec
xchg
jnp
pop
push
jl
inc
dec
sub
movsb
sahf
sbb
shr
mov
aaa
out
and
mov
cld
push
push
bound
mov
leave
pop
xchg
push
sub
ds
adc
pop
inc
xlat
fcomps
gs
fs
movsb
dec
arpl
pop
mov
ret
mov
or
lea
or
outsl
rclb
rorb
daa
inc
add
adc
add
mov
or
push
pop
aas
mov
add
fimull
ja
enter
adc
adc
adc
bound
ret
xchg
fwait
xchg
repnz
pusha
aam
xorb
adc
adc
es
into
push
js
sbbb
mov
adc
out
stos
aad
ja
loop
sub
cmp
adc
pop
pop
iret
push
das
pop
dec
xlat
push
mov
and
inc
mov
js
sub
cmpl
loopne
ret
hlt
or
out
mov
adc
and
pop
mov
popa
inc
cmc
add
dec
push
test
pop
jecxz
push
mov
mov
mov
adc
or
dec
into
pop
mov
sbb
sbb
aas
ds
xor
dec
sbb
ja
xor
jge
in
cwtl
xchg
lods
in
sbb
mov
and
mov
cmpl
push
dec
xlat
xchg
fucom
or
loopne
loopne
mov
mov
rorl
in
imul
lret
cmp
xor
lret
ret
ret
mov
icebp
lahf
fdivl
js
mov
das
sub
add
loopne
jge
mov
scas
shll
test
add
neg
pop
jmp
mov
iret
sbb
push
cli
adc
xchg
xlat
loopne
inc
cs
add
ljmp
push
push
pop
lds
sub
mov
pop
pop
sbb
sbb
loopne
jle
aas
pop
and
dec
dec
pop
mov
in
adc
test
sbb
sbb
ja
xchg
xchg
mov
shlb
push
lret
and
mov
popl
jne
xlat
sarl
lahf
pop
push
and
ret
ja
push
sbb
bound
mov
pop
xchg
push
mov
pop
push
mov
fisubs
mov
adc
inc
test
mov
add
popf
sbb
mov
clc
mov
jnp
test
pop
stc
mov
sub
clc
pop
sub
pop
negb
sub
hlt
jp
mov
jbe
arpl
cltd
jno
icebp
push
and
sbb
je
cmc
mov
jge
push
loopne
pop
push
push
mov
mov
ret
cwtl
cmc
int3
call
push
inc
pop
xchg
neg
outsl
and
jmp
sbb
fmuls
jae
rorl
mov
jg
lret
inc
ret
add
aam
test
push
ja
mov
push
dec
popa
in
add
xor
fistps
int
daa
add
push
addr16
lea
xor
add
xor
and
ljmp
push
xchg
lock
sbb
pop
pop
hlt
lods
lods
pusha
cmp
push
pop
repnz
dec
push
and
jnp
fnsave
shrb
imul
mov
cmpsl
xor
pop
sti
xchg
adc
fdivrl
loop
and
sbb
jp
ror
fsubrs
sbb
imul
aam
mov
jge
cs
xchg
sub
adc
mov
std
mov
xor
mov
iret
sbb
scas
cmp
movsl
push
adc
xorl
inc
cmpl
das
je
pop
jo
loop
add
sub
and
aad
roll
ror
jne
leave
roll
cwtl
xor
mov
lds
aas
mov
ret
adc
shlb
add
rolb
mov
inc
ss
mov
dec
mov
cmpsb
jnp
fld
or
imul
inc
mov
jle
push
jno
mov
cli
daa
loopne
js
dec
push
cmp
and
push
test
lock
adcb
inc
jmp
mov
loope
pop
sbb
push
fldt
jp
pop
clc
mov
mov
data16
mov
inc
stos
mov
sbb
and
addl
sti
js
add
leave
rcll
mov
jne
mov
mov
inc
orb
cwtl
mov
sbb
outsl
leave
push
mov
dec
mov
xchg
inc
adc
cmp
loope
in
cmp
ljmp
in
and
shrb
js
jo
jle
shll
add
add
pop
movsl
cltd
js
xchg
xor
and
inc
xchg
loop
pop
jo
in
adc
fdivrl
dec
mov
cltd
sub
mov
push
jl
loope
xor
fmuls
dec
dec
roll
dec
rorb
cmpsl
pop
sbb
or
mov
lret
xchg
ret
add
inc
stc
add
pusha
and
ds
sub
mov
daa
mov
loop
cmp
cmpsb
scas
mov
lock
in
mov
test
popf
icebp
fcompl
add
or
idiv
mov
jo
adc
rol
shr
in
je
pop
inc
scas
jg
add
rorb
sbb
jl
cmp
pop
inc
jmp
movsb
ss
or
std
sub
sbb
stc
add
cld
adc
test
lcall
mov
jnp
adc
jecxz
dec
jne
insl
rcll
clc
adc
xchg
dec
repz
sbb
shlb
xchg
ss
xchg
mov
sbb
push
sbb
xor
mov
cli
movsb
jbe
rol
add
aam
scas
shll
fbstp
outsl
inc
mov
imul
xor
adc
cmp
addb
fs
and
add
popa
xchg
sbbb
shll
loope
and
add
sub
inc
sbb
ret
mov
mov
dec
jl
mov
cmp
push
adc
jecxz
insw
jne
data16
pop
cmp
les
jl
xor
loop
add
int
add
out
sbb
js
mov
pop
xor
adc
sub
ret
pop
subb
dec
sarb
scas
add
ss
xor
rcrl
enter
loop
jne
out
add
or
or
and
or
dec
scas
push
xchg
ss
or
sub
stos
or
xchg
dec
and
sahf
movsb
sbb
jecxz
pushf
cmc
push
inc
mov
scas
add
lds
sbb
add
pop
cmp
jge
ds
sub
movsb
pop
in
mov
test
sbb
ret
std
xchg
fstps
fisubrl
jecxz
mov
mul
add
or
mov
mov
jo
gs
jnp
dec
fadds
inc
inc
cmpsb
pop
adc
or
inc
inc
xchg
xchg
aam
stc
mov
fcoml
gs
lods
jp
or
sbb
in
data16
xchg
mov
and
movsb
push
mov
loope
adc
in
push
loopne
outsb
mov
aas
add
push
les
imul
xchg
and
sbb
ret
jae
loopne
in
jbe
add
fnstenv
inc
out
dec
mov
xor
adc
pop
inc
pop
aaa
mov
test
leave
mov
sub
mov
mov
sub
mov
outsl
jnp
fwait
lds
pop
add
in
fidivs
lods
dec
and
mov
push
and
out
fstl
jmp
xrelease
add
mov
dec
xchg
jnp
or
es
out
inc
js
xchg
fiadds
sbb
loopne
jecxz
cmp
scas
pop
aam
das
jle
dec
es
adc
es
aas
inc
mov
xor
mov
dec
mov
pop
test
addr16
adc
shll
subl
mov
dec
in
add
pop
call
or
xchg
mov
fsin
rcl
imul
xor
repnz
ja
dec
add
push
jo
fs
pop
push
fwait
jne
lods
pop
mov
test
mov
cltd
popa
lds
mov
sbb
sti
adc
addl
xor
je
test
aam
arpl
ljmp
aam
lods
or
mov
sbb
loop
imul
mov
dec
adc
dec
jmp
jbe
mov
lea
cltd
dec
insb
sbb
pop
pop
add
push
rcl
push
imul
mull
enter
sbb
and
ljmp
mov
inc
xchg
into
jecxz
jne
cli
fstl
lea
lds
inc
out
cs
and
lea
lret
inc
loop
mov
cltd
lcall
adc
jecxz
cld
adc
or
adc
sub
xor
push
lea
push
xchg
and
or
sbb
pop
or
pop
dec
pushf
lcall
adcl
in
xor
cmp
fadds
fstps
jnp
mov
sub
cmp
pop
sbb
xchg
dec
mov
mov
or
rcrl
icebp
or
lods
sti
xorl
lea
ret
xor
pop
pop
dec
inc
loopne
mov
push
das
pop
and
fadds
sbb
mov
popf
add
inc
jb
fdivrl
push
nop
jne
mov
les
iret
and
add
inc
ds
pop
cmp
cli
dec
loop
outsb
insl
sub
jne
sar
sbb
shll
js
stos
ret
adc
mov
int
mov
cmp
mov
shrl
imul
add
popa
loope
xchg
sbb
faddl
ds
xor
push
shrb
lods
push
or
mov
inc
inc
xchg
cmc
or
lods
and
cmpsl
clc
or
lahf
xlat
loopne
aam
out
stc
mov
jae
push
daa
mov
and
test
and
pop
insb
dec
lock
adc
insb
pop
push
jo
sarb
adc
sti
mov
add
ret
sti
sub
xor
pop
mov
cwtl
cmp
jns,pt
mov
cmp
mov
xchg
add
cli
inc
sbb
mov
sbb
push
pop
inc
orl
add
sub
xor
mov
dec
jecxz
jecxz
inc
fidivl
xchg
push
cmc
stos
and
add
imul
rcrl
mov
cmc
cmpsb
xor
lea
push
out
mov
xchg
push
push
int
adc
add
inc
ret
ret
add
mov
dec
loopne
xchg
lea
xlat
add
imul
dec
lds
fstps
push
fstpt
scas
dec
pop
sbb
ret
mov
idiv
daa
rcl
dec
sti
in
rolb
jmp
or
sub
xor
jnp
ret
mov
jbe
cmp
out
xor
mov
lcall
push
fstps
mov
add
in
add
push
sbb
cmpl
jne
cmpsl
andl
cmp
adc
cmc
dec
inc
mov
ror
mov
xchg
or
ja
frstor
mov
test
addr16
sbb
sub
cmp
add
call
jb
lahf
mov
movsl
add
add
and
bound
xchg
dec
fwait
lods
iret
sbb
jge
xchg
mov
lea
dec
imul
inc
dec
mov
and
test
xor
xlat
mov
mov
inc
cmp
sbb
cmp
je
push
sbb
in
ja
dec
pop
test
sbbl
inc
shlb
insb
test
or
dec
xor
mov
jne
push
ss
ret
xor
xor
cmp
mov
jp
popa
cs
pop
jmp
shr
in
out
mov
cmpsl
dec
jmp
sub
sbb
push
mov
xor
movsb
adc
adc
orl
imul
mov
stc
sahf
pop
in
repnz
and
add
outsb
call
mov
fwait
push
mov
sub
push
lahf
add
push
sbb
scas
and
pop
inc
push
cmc
dec
imul
mov
mov
push
pop
cmp
push
rolb
arpl
frstor
int
ret
mov
mov
cld
int
loopne
gs
pusha
mov
rorb
ja
loop
mov
dec
mov
orl
adc
adc
scas
lahf
outsl
add
add
adc
sbb
mov
es
je
jbe
push
push
lea
cmpsb
cmp
mov
outsl
imul
or
pop
fidivl
ss
shlb
inc
mov
pop
mov
sbb
jp
mov
add
lret
add
jmp
pop
sub
mov
push
adc
lret
pop
mov
les
mov
subl
mov
jle
mov
frstor
cmp
dec
add
xchg
xor
pop
js
cmp
aam
add
lods
sbb
or
xchg
add
xchg
jge
cmp
or
lds
adc
loop
pusha
lea
inc
insl
push
call
sub
lret
and
jp
cmpxchg
popf
push
mov
push
pop
mov
mov
add
jne
push
push
sub
mov
pop
inc
sbbl
imul
test
mov
pop
cmpsl
push
push
adc
out
loopne
loop
and
and
loopne
sbb
jmp
int
pop
insl
xor
inc
cwtl
lahf
or
test
sub
popa
leave
bound
sbb
pushf
mov
cmp
add
popa
mov
mov
push
push
ja
jo
ret
xor
rorl
pop
inc
pop
and
outsl
lea
aaa
popa
mov
xchg
or
xor
cltd
and
and
sbb
jns
stc
in
mov
jp
xchg
lods
pop
and
jmp
or
movzwl
dec
push
inc
push
adc
add
cmp
cmp
outsl
mov
or
or
addl
gs
lret
and
imul
popf
clc
outsl
or
push
repnz
call
sahf
mov
popa
add
ja
jb
jp
sub
mov
gs
mov
nop
out
add
xchg
inc
xchg
cmpsb
mov
xor
cwtl
pop
mov
mov
rolb
aam
fnstcw
lret
subb
jnp
push
lcall
pop
adcl
xchg
ret
jne
jbe
lock
mov
mov
add
mov
iret
jb
lds
jne
pusha
cmp
test
popa
push
add
fcom
in
sub
movsb
icebp
inc
ljmp
outsl
mov
out
jnp
jb
xor
xor
fdivs
sbb
sbb
pop
mov
sub
lods
test
push
sub
xor
mov
add
push
jecxz
dec
cs
mov
cmpsl
pop
sub
mov
jecxz
xchg
pop
and
adc
sbb
xor
stos
jg
pop
xchg
mov
mov
lcall
pop
pop
scas
add
xchg
fisubrs
stc
lods
test
and
xchg
pop
cs
mov
pop
mov
jg
pop
jnp
int
js
rcll
adc
add
std
add
sbb
dec
sbb
push
das
push
cmp
jbe
mov
sub
fldl
js
or
xchg
daa
sub
rolb
adc
push
arpl
add
push
mov
ret
and
imul
test
loope
xor
enter
and
pop
and
ret
add
leave
mov
pop
cmp
std
fs
push
hlt
or
jmp
call
pusha
je
sub
or
or
pop
rcrb
les
sub
daa
icebp
mov
push
jb
cli
adc
xor
js
scas
jne
xchg
and
js
shll
fimuls
jno
jbe
clc
mov
cmpsb
daa
pop
fists
imul
test
pop
adc
idivb
jne
insl
mov
mov
xor
das
imul
cmp
imul
inc
pop
jge
aas
inc
insl
xlat
das
sub
dec
sbb
clc
adc
mov
sbb
pop
shlb
push
dec
daa
cmpl
ret
adc
pop
lods
mov
loopne
sbb
sub
dec
or
ret
adc
mov
sti
or
rcrb
out
pop
mov
mov
sarb
jl
push
sbb
xchg
mov
push
add
and
inc
or
sbb
std
roll
aaa
or
leave
ja
mov
sbb
push
into
xor
js
push
fdiv
sub
and
sub
xchg
xor
pusha
js
clc
cmp
rcrl
stos
mov
or
pop
or
and
jmp
inc
xchg
aam
pusha
das
sub
ja
ja
mulb
ret
in
cltd
mov
mov
xchg
outsb
sti
ljmp
nop
cmp
sbb
lock
clc
mov
xor
xchg
or
push
xchg
pop
push
jle
shll
cli
xlat
push
mov
sub
aas
addl
addr16
jecxz
pop
ds
data16
mov
sbb
fcomip
nop
fdivp
push
arpl
shl
imul
mov
mov
sbb
pop
pop
ja
mov
loop
jne
daa
xchg
fwait
pop
lock
scas
push
lret
adc
mov
pop
int
sub
xor
jp
and
int
js
mov
test
mov
and
cmp
rorl
roll
mov
or
mov
cmp
xor
pusha
es
push
inc
mov
ds
xchg
ror
push
jne
loope
test
mov
lock
data16
sub
adc
adc
cmp
in
sub
sub
mov
movsb
xor
pop
mov
mov
iret
jge
xchg
cmp
fnstsw
xchg
add
add
dec
popa
adc
lea
outsl
mov
inc
lods
int
in
jp
jns
hlt
nop
jg
inc
cmp
mov
or
or
sbb
pop
push
add
sbb
jo
adc
ret
dec
leave
sub
outsb
stos
inc
push
push
mov
jno
jno
out
nop
aam
sbbb
or
gs
ret
rol
dec
xchg
add
inc
pop
lret
and
pop
add
push
addl
rorb
and
fstps
popf
or
jae
sub
pop
xchg
lahf
sub
pop
and
push
pslld
or
imul
xor
push
add
xchg
mov
loopne
xchg
sub
sub
out
js
shlb
push
sbb
push
sub
adc
mov
jl
loopne
nop
leave
mov
popa
inc
or
test
ret
testb
mov
out
imul
push
cmpsb
in
jns
add
sbb
cmp
xor
inc
lea
jecxz
arpl
loopne
into
xchg
sub
or
push
lea
jb
xchg
sbb
add
sub
jl
xchg
xchg
sub
mov
mov
cmc
mov
xchg
mov
pop
addr16
and
adc
lea
mov
jg
fidivrl
adc
loop
sub
lea
rol
push
pop
xor
pop
cli
test
xor
stc
mov
mov
loope
stc
or
call
add
push
xchg
mov
mov
and
xchg
mov
addr16
push
pop
xchg
push
filds
xchg
jl
xchg
push
mov
in
pop
xor
fsubs
mov
ja
jo
popf
movsl
stos
leave
add
cmp
or
rcl
das
in
mov
scas
xor
mov
jo
out
sub
out
lret
push
dec
nop
popa
jmp
test
or
pop
mul
dec
and
enter
pop
test
cltd
cs
add
and
mov
insl
mov
rcll
loop
repnz
or
add
xchg
sbb
loopne
call
xor
sub
push
jmp
mov
ret
rcrl
subb
xor
inc
cmp
jne
clc
insb
lea
adc
int3
xchg
jle
xchg
bound
and
arpl
bound
add
das
jmp
push
jns
and
int
aas
pcmpgtb
xor
movsl
xor
and
cmp
mov
jecxz
fadds
mov
xchg
jg
inc
loope
and
or
sub
xor
or
das
ja
pop
jo
or
xor
cli
xor
sbb
and
pop
pop
push
jbe
pop
xor
mov
and
adc
pusha
test
fnstenv
imul
shlb
pop
lods
fadd
pushf
ja
xchg
mov
adc
movsl
or
mov
les
push
xchg
or
or
push
popf
sbb
cmp
mov
test
add
sub
sub
bound
test
sbb
imul
sbb
mov
orl
test
pop
aad
out
and
mov
and
insl
aad
lods
testb
add
or
inc
aad
pusha
test
test
mov
je
xor
adc
jge
inc
test
sub
movsl
inc
fadd
cwtl
pusha
ficoms
inc
aad
orb
inc
ret
cmc
and
pop
pop
dec
xor
cmp
ret
push
mov
iret
lcall
imul
push
cmpsb
jp
outsb
cltd
out
push
fnstenv
call
jne
add
jo
nop
mov
xchg
in
mov
cmp
sbb
orl
sbb
push
jmp
imul
or
stc
push
and
lods
mov
cmc
repz
mov
add
xorl
pop
adc
pop
push
scas
adc
test
rolb
adc
inc
in
pusha
les
mov
jle
loopne
js
or
imul
pop
inc
sahf
sub
add
inc
adc
jno
clc
or
mov
ret
push
dec
out
lret
in
sbb
dec
subl
inc
add
adc
pop
pop
pop
mov
jge
jo
add
xchg
popa
pusha
mov
sbb
push
and
cmpsb
aas
mov
or
test
js
mov
jnp
stos
xorb
mov
mov
popf
pop
dec
xor
jmp
push
dec
aaa
jnp
imulb
pop
lock
js
lcall
data16
mov
shrl
cmp
jno
push
test
pop
and
popf
sub
xor
adc
cs
add
add
aad
je
xchg
sbb
addr16
in
iret
mov
nop
xchg
add
imul
dec
rolb
xchg
mov
add
or
cltd
out
fs
mov
pop
pop
jl
mov
rcl
ds
rolb
mov
mov
insb
add
dec
loop
dec
pop
and
pop
inc
je
aas
mov
xchg
and
cmp
pop
daa
testl
outsb
ret
out
lea
inc
ds
adc
es
pusha
sub
aad
call
push
push
nop
popa
ret
adc
fisubs
mov
jne
jecxz
push
jecxz
popf
es
pop
test
cli
int
xchg
ficompl
sahf
mov
lahf
hlt
push
inc
inc
adc
jb
decb
imul
mov
mov
sub
bound
ret
jns
sbb
mov
icebp
or
or
mov
addl
sbb
mov
mov
jbe
cmc
mov
lahf
and
xor
sarl
rolb
add
fnstcw
jp
neg
clc
mov
cmp
jbe
ret
jmp
sub
ds
in
outsl
out
aad
je
add
sub
stos
fwait
inc
lahf
push
cmpl
inc
cmpb
enter
sahf
dec
push
mov
cmp
jle
daa
sbb
arpl
jns
test
jns
clc
mov
daa
xchg
mov
jns
mov
add
cmp
ret
or
dec
push
xor
cmpsl
add
jbe
sarl
push
pop
mov
cmp
lahf
lahf
repnz
pusha
cmp
and
popa
pushaw
stos
jmp
sbb
mov
push
xchg
pop
rclb
dec
xor
or
repz
or
and
mov
gs
cwtl
sbb
inc
subl
or
and
xor
mov
hlt
pop
pop
iret
adc
inc
push
cmp
adc
arpl
adc
ret
pop
ret
std
adc
bound
cmp
pop
cs
xchg
jge
jge
mov
push
mov
adc
mov
fsubs
repz
push
bndstx
push
mov
and
test
in
leave
push
stos
and
mov
daa
lods
call
dec
addl
xchg
inc
ss
cmpsl
out
sbb
push
jg
mov
add
pop
sub
arpl
js
sub
das
xchg
inc
add
xlat
rolb
lea
aaa
dec
scas
adc
push
rol
jmp
cmp
xor
test
sub
call
add
dec
sub
test
jns
push
imul
or
adc
or
or
or
xchg
xchg
addl
test
ret
adc
inc
push
iret
push
dec
and
xchg
cmp
fnsave
into
fstps
cltd
dec
mov
popf
sbb
inc
jge
and
cmp
aam
and
lods
mov
and
lret
pop
sub
jnp
adc
mov
mov
dec
sub
jge
cmp
aas
mov
xchg
enter
xchg
cltd
sub
mov
jl
cmpsl
orb
push
mov
xchg
outsb
push
sbb
cltd
loopne
push
mov
mov
cmp
push
push
das
mull
xchg
addl
lahf
cmp
mov
stos
adc
gs
inc
sub
mov
in
in
cs
push
dec
and
sbb
push
inc
addb
mov
icebp
lcall
gs
rorl
xchg
mov
adc
lea
push
rolb
loope
cs
popl
into
sbb
jp
cmp
add
push
subb
mov
and
and
inc
adc
xor
test
xor
leave
xchg
push
insl
add
cmp
sahf
push
jmp
mov
xor
insb
lcall
pusha
lcall
rolb
cmpsb
mov
mov
loope
or
movsl
fwait
jg
xchg
leave
add
mov
and
adc
push
outsb
daa
xorb
push
enter
movsb
sbb
dec
lock
rcrb
mov
lea
inc
add
setg
enter
das
test
adc
dec
pusha
in
imul
push
cmp
imulb
xor
cs
or
lock
jge
push
adc
je
mov
sub
push
mov
out
lds
sub
jnp
fldenv
popa
shll
jns
lret
add
das
push
sbb
bound
ja
ljmp
fisubrl
and
inc
add
cmp
int
lret
aaa
jp
out
lea
dec
mov
cs
subb
mov
and
je
xchg
test
xchg
int3
or
push
push
mov
add
mov
pop
xor
ds
ret
sbb
das
sub
inc
ds
xor
xchg
lahf
or
popf
pop
mov
lret
lods
cmpsl
mov
cmpsl
or
adc
ret
add
movsb
xchg
pop
insb
cmc
divl
mov
and
fwait
xchg
inc
mov
cltd
xchg
and
sbb
jmp
int
pop
adc
prefetch
mov
or
test
and
clc
adcl
adc
mov
orb
cmp
shl
mov
adcl
mov
les
xorl
fildl
scas
and
js
pop
sub
outsl
dec
jnp
stos
popf
pop
data16
jmp
adc
inc
ret
stos
daa
add
add
mov
es
rorb
dec
decb
xlat
ret
or
mov
add
flds
mov
push
das
jmp
iret
or
jo
or
cwtl
add
imul
daa
shrb
mov
dec
adc
outsb
sub
xchg
repz
adc
stos
jns
imul
xor
scas
repnz
pop
push
ja
push
pop
or
push
rorb
and
aaa
pop
jne
ret
dec
in
test
pop
pop
outsl
hlt
outsl
aaa
cmp
and
das
add
fidivrs
cmp
push
fimull
sub
or
xor
jge
addb
pop
movsb
pop
sub
mov
sbb
andb
xor
add
xchg
sub
daa
add
insb
enter
sub
inc
xchg
and
pop
test
pop
stos
and
mov
ss
jl
inc
pop
js
pop
rcrl
dec
faddl
lahf
mov
imul
xor
mov
mov
and
xor
arpl
xchg
xchg
repz
aad
arpl
iret
ret
arpl
pop
dec
cmp
or
mov
mov
fldcw
loop
pop
and
leave
cli
lds
inc
jp
mov
adc
fsubp
es
sbb
lret
bound
call
pop
and
sub
loopne
or
pop
cmc
enter
jno
stos
or
movsb
sbb
xchg
inc
pop
pop
mov
data16
mov
sbb
lahf
stc
inc
dec
sub
xchg
cmc
cmp
pop
cmp
fnstenv
mov
jo
jecxz
mov
xchg
mov
inc
movsb
sti
lcall
clc
loopne
loopne
iret
cmp
stos
jmp
clc
out
lea
mov
pop
or
adc
jne
ss
dec
and
jb
movsb
sbb
lock
fistpll
sbb
mov
sbbb
sub
and
xchg
cmp
or
movsl
test
cs
aaa
gs
andb
bound
fwait
pop
int
adc
les
in
dec
inc
sbbl
out
push
ret
and
div
push
or
push
cli
add
mov
call
and
mov
dec
jne
hlt
add
push
aaa
sub
jmp
out
cmp
fstps
shrl
jns
out
and
sbb
pop
dec
scas
jmp
mulps
jmp
stos
rorl
ret
jnp
sti
xor
mov
sbb
inc
js
gs
std
mov
adc
mov
std
and
mov
cwtl
iret
sub
xorb
jnp
nop
push
and
inc
add
lods
ljmp
cmp
xor
sub
lods
inc
popw
cltd
mov
pop
add
xchg
pop
jbe
nop
mov
pop
jo
gs
fisttpll
pop
test
xlat
pop
xor
ljmp
orl
cmp
pop
pop
mov
loopne
adc
dec
adc
mov
mov
sub
in
loope
inc
mov
pop
and
pop
sub
mov
adc
aaa
fcmovnb
pop
jo
cmp
sbb
push
mov
std
mov
or
dec
pop
or
rcl
lods
lds
or
insl
cmp
push
sbb
aam
arpl
xor
xchg
xor
xor
scas
add
pop
mov
xchg
bound
pop
pop
das
shrl
mov
cwtl
test
pop
mov
cmp
outsl
loopne
push
xchg
ret
shll
cmp
cltd
jne
rcll
xor
loop
loope
or
aam
int3
or
pop
jmp
push
lcall
testl
and
sub
and
pop
jp
xchg
js
and
cs
add
lea
add
dec
or
jle
mov
les
jmp
nop
addb
lods
test
sbbl
xor
loop
dec
lahf
cmp
shrl
inc
inc
adc
and
insl
sbb
shlb
ror
das
mov
loope
lahf
xchg
iret
add
pop
or
rcl
iret
pop
add
fiadds
sbb
in
add
popf
add
pop
lahf
add
push
inc
lea
mov
adc
push
mov
inc
lea
movsb
das
push
pusha
jp
mov
pop
dec
dec
aam
insb
mov
dec
mov
cmp
mov
sub
push
aad
es
into
mov
sahf
cmp
or
fsubrs
push
mull
fildll
xor
es
push
xchg
es
scas
sub
adc
add
add
stos
adc
mov
add
icebp
js
insb
fimuls
or
sub
push
mov
sbb
icebp
es
xchg
in
add
adc
fldl
xchg
dec
jmp
call
lds
push
add
ret
xchg
orb
sub
mov
icebp
dec
shl
out
sbb
leave
jo
popa
arpl
inc
movsl
pop
icebp
dec
fdivrl
inc
add
inc
or
arpl
test
scas
insl
add
cmp
xchg
sbb
and
add
aas
call
data16
repnz
les
pop
dec
shll
stos
push
popa
hlt
lcall
popa
push
cmc
mov
xchg
lods
hlt
jle
pop
cmp
pop
sbb
je
cmp
es
pop
push
dec
add
pop
jns
xor
popa
or
mov
push
aas
test
mov
aam
jne
scas
test
imul
adc
mov
push
sub
jge
insl
inc
shl
fsubs
call
pop
loopne
popa
sarl
pop
call
lock
pop
aaa
xor
rcr
imul
mov
iret
pushf
data16
imul
add
jne
jmp
jnp
xchg
dec
xchg
icebp
xlat
jno
movsl
adc
dec
arpl
aam
and
cmp
add
cmp
int3
xor
push
lret
sub
loope
pop
js
jne
and
insl
and
sub
test
jg
fdivrs
popa
pop
pop
cmp
pop
jae
andb
cmp
or
dec
movsb
inc
and
adc
jno
pop
mov
mov
jecxz,pt
jne
enter
dec
jmp
dec
aam
xor
xchg
rcll
cmp
mov
cld
cmp
sub
cmp
jge
shr
push
ret
enter
mov
or
cmp
mov
fcoml
mov
add
or
inc
or
sbb
movsl
mov
jmp
les
je
pop
dec
leave
sbb
lcall
lock
dec
xor
xorb
sahf
pushf
xor
sbbb
push
sbb
test
cmp
inc
stc
frstor
pusha
mov
imul
sub
loope
mov
jno
inc
mov
jl
cmp
jo
jb
clc
imul
test
mov
loope
imul
jo
ljmp
insb
shll
lods
mov
loopne
mov
and
pop
and
out
iret
subl
xchg
in
jnp
cmpsl
adcb
inc
lcall
fsubs
mov
push
mov
add
xchg
pop
leave
fcomip
push
jge
fld
mov
bound
pusha
xchg
inc
insb
lods
scas
cs
cs
jns
inc
mov
mov
outsl
imul
inc
mov
inc
or
cmpsb
push
addl
insb
or
jge
pop
pusha
cltd
fwait
mov
sub
insl
ljmp
mov
mov
mov
fcompl
aaa
sub
movsb
aas
or
pop
lock
enter
mov
fnstcw
cs
mov
push
jecxz
pop
faddl
bound
sub
jg
add
dec
dec
leave
push
dec
ret
loope
pop
setbe
mov
xchg
mov
ret
ds
dec
add
pop
cmp
pop
cmp
ret
cmp
xor
repz
mov
mov
xchg
sub
pop
cmp
scas
jnp
mov
cli
inc
push
testl
in
hlt
addl
xor
lods
xor
mov
and
sub
icebp
push
popl
jg
mov
xchg
mov
push
inc
xchg
jb
es
pop
pop
cmp
lds
or
mov
push
push
cmc
or
mov
jecxz
and
mov
lea
mov
movsl
clc
dec
add
loop
in
mov
cmp
xchg
jo
sub
mov
outsb
ret
stos
icebp
jg
mov
mov
cmp
jg
clc
push
pushf
or
xor
das
add
lds
jno
jp
orb
xor
sbb
imul
imul
cmpsb
aaa
lfs
fwait
jg
loope
jmp
cmp
jne
pop
mov
sbb
cmpl
arpl
and
inc
imul
add
xor
xor
sbb
add
sub
int
add
jg
or
ljmp
mov
lods
lods
incl
mov
cwtl
mov
adc
pop
ja
pop
aam
dec
inc
sbb
loopne
pop
cmpsb
push
mov
mov
mov
xchg
mov
xor
test
fwait
pop
push
sbb
mov
arpl
das
or
mov
loopne
int
cmpsb
push
mov
pusha
cmpl
mov
sbb
sub
rcrb
sti
and
mov
jne
xchg
mov
dec
ret
rolb
and
add
rorl
call
arpl
outsl
movsb
addb
adc
jmp
fwait
mov
ret
sub
mov
jno
movsl
fadds
mov
imul
cmc
aad
mov
daa
sub
or
xchg
outsl
in
jl
test
fwait
lods
scas
test
sbb
call
hlt
add
push
push
and
sarb
out
mov
cwtl
add
mov
xchg
inc
test
gs
dec
ret
and
mov
jns
and
adc
fisubrl
or
sub
pop
out
mov
add
add
out
jge
bts
inc
push
add
add
inc
fadds
add
scas
add
aam
mov
sbb
fmulp
call
pop
jl
mov
outsb
lret
cmp
jmp
imul
sub
mov
arpl
jae
push
lock
lret
scas
fst
mov
rorl
jecxz
sbb
imul
and
insb
xor
lahf
cs
insb
imul
push
sbb
jp
jg
or
sub
sbb
sbb
enter
movsb
pop
add
mov
roll
jbe
aaa
outsb
pop
lret
and
mov
ror
mov
jae
push
test
inc
mov
mov
ret
lds
nop
jmp
sub
cmp
mov
roll
dec
sbb
pushw
scas
mov
or
dec
add
call
add
dec
and
nop
shrl
sub
xchg
out
stos
pop
push
jno
pop
cmp
je
fcoml
lock
mov
roll
imul
push
imul
mov
stos
mov
outsb
push
adcb
sbb
dec
pop
or
jb
push
push
xor
arpl
push
add
add
xchg
leave
or
mov
fcmovnb
mov
insb
cmc
mov
hlt
sub
lock
adc
lea
xchg
in
and
fisubrl
push
scas
xchg
push
mov
lds
adcl
jo
xchg
and
push
pop
pop
lea
and
loopne
xchg
mov
or
xchg
or
in
sbb
xor
pop
scas
mov
ret
cmp
adc
ret
scas
fwait
mov
xchg
icebp
fisttps
aas
and
lods
sub
inc
nop
ret
aaa
mov
xchg
mov
mov
inc
xchg
dec
lret
out
xchg
lods
xchg
mov
mov
ret
mov
movsl
out
mov
sub
mov
data16
sbb
or
xchg
push
popf
xchg
xchg
mov
das
cmp
push
imul
lret
push
sbb
and
cltd
mov
movsb
push
jbe
mov
push
xchg
rorl
mov
xchg
cmpb
mov
cs
imul
cwtl
ret
push
rorl
xchg
mov
mov
inc
inc
cmp
call
jp
mov
jbe
inc
push
inc
jnp
xchg
or
fwait
scas
cmp
add
mov
add
jbe
sub
popa
aad
pop
xor
cmp
push
sub
push
dec
test
imul
xor
xchg
rcl
ret
fistl
cmc
dec
sub
mov
ret
jmp
shlb
mov
test
mov
and
pop
xor
jne
adc
pusha
sysret
xor
xchg
add
xchg
mov
pop
mov
fldenv
push
xchg
cltd
dec
and
and
sbbl
fwait
lods
sbb
jo
dec
cmpsb
mov
jmp
pop
and
lds
xchg
jo
movsl
mov
sbbb
in
mov
sbbl
cld
xchg
and
popf
jmp
xor
movsl
popa
mov
and
add
push
sarl
ds
lods
inc
xor
mov
sub
ret
lock
sbb
pusha
or
out
push
add
mov
testl
les
adc
mov
jmp
mov
push
adc
popa
leave
xchg
adc
fs
jmp
ret
mov
rcrb
shrl
jp
or
ret
or
mov
mov
out
jb
push
lea
add
pop
fistps
popa
add
cmp
mov
icebp
pusha
lret
pop
cwtl
push
addr16
test
arpl
test
inc
and
sub
jle
std
inc
or
cmc
or
test
imul
orl
ss
loop
orb
adc
pop
les
call
pop
flds
loopne
das
shrl
es
xor
push
icebp
pop
inc
fdivrl
mov
pop
les
add
add
je
mov
sahf
sub
rclb
mov
xor
daa
ret
sbb
std
xor
push
pop
movsl
pop
adc
sub
add
push
incl
or
push
hlt
mov
sub
ss
lods
test
rolb
sub
xchg
jno
add
cmpsb
jecxz
xor
into
pop
or
or
cmp
or
ljmp
movsb
or
sbb
inc
dec
loop
jl
pop
push
lods
mov
inc
sbb
das
jl
ja
mov
or
pop
cmc
ljmp
jmp
mov
push
sbb
nop
add
add
data16
test
dec
cmp
mov
out
cmpsb
dec
add
add
pop
jmp
jns
imul
inc
cmpl
movsl
xchg
inc
ret
ss
sub
jl
xchg
mov
xorl
and
loopne
push
js
mov
mov
sub
cmpsb
mov
add
imul
popa
mov
add
xlat
jns
and
mov
dec
dec
adc
add
dec
jmp
push
pop
jns
pop
fwait
or
pop
mov
sub
clc
adc
xchg
test
shll
sbb
mov
pop
mov
pop
sbb
jmp
mov
imul
outsl
pop
add
shl
cwtl
push
test
mov
sbb
add
mov
add
pushf
add
adc
and
mov
cmpsb
add
xchg
push
rorb
pushf
xor
inc
adc
adc
jb
adc
push
std
add
test
mov
in
cld
jo
add
mov
mov
jno
mov
test
jae
jp
sbb
loope
pop
jmp
push
cmp
dec
imul
rcll
mov
insb
jle
mov
test
in
adc
xchg
lds
xlat
sub
jno
inc
pop
mov
mov
test
xchg
shlb
pop
push
sbb
mov
mov
mov
test
jbe
in
add
outsl
inc
dec
dec
sbb
mov
xchg
xor
ja
in
imul
push
jns
and
add
and
cmp
cwtl
data16
scas
aam
call
gs
notl
and
mov
fisubrs
xchg
pop
ja
or
fstpl
dec
call
lock
mov
in
mov
out
jne
jge
fbstp
sbb
push
insl
pop
scas
push
jg
add
mov
int
mov
mov
jne
addr16
jbe
and
loope
loope
and
mov
adc
mov
push
xlat
scas
scas
mov
insl
and
mov
mull
push
popf
cmpsb
test
mov
lret
and
xor
sbb
push
mov
aam
push
dec
push
or
outsl
ja
inc
pop
outsl
test
inc
rorb
add
nop
stos
add
lods
mov
add
xchg
cmpsl
aad
or
dec
pop
cmc
mov
dec
sub
andw
cmp
push
push
sbb
std
xlat
packssdw
repz
outsb
ret
and
cwtl
push
inc
dec
das
addr16
push
push
mov
aad
cmp
popf
push
jecxz
test
mov
imul
lea
loop
and
mov
sbb
cmp
out
add
lods
les
je
out
or
nop
ljmp
push
pop
push
xor
nop
pop
cmpsl
xor
loopne
mov
pop
sub
adc
lods
add
lcall
repz
pop
fisubs
jl
mov
dec
jl
jnp
dec
push
adc
int
xor
push
fisttpll
int
repz
shlb
hlt
mov
bound
aaa
push
add
aaa
and
dec
out
mov
add
dec
dec
scas
and
fs
imul
xchg
dec
ja
or
xor
aad
sbb
cmp
sub
cmp
hlt
add
pop
pop
popf
jne
orb
lods
jp
adc
lcall
cmp
sub
lods
add
int
xchg
xor
stos
cs
aad
jl
and
jno
mov
sbbl
iret
jb
jnp
and
and
rcrb
fisubl
jge
lods
inc
or
out
mov
psrlq
or
dec
movsl
pop
pusha
lods
push
ret
mov
std
sbbb
lods
cmp
std
xchg
xor
adc
loopne
lret
sbb
xor
dec
inc
das
mov
add
mov
mov
pop
add
and
popa
out
jns
js
sbb
sub
test
shll
ret
mov
adc
xchg
sub
push
lds
mov
lock
outsb
dec
jo
and
rcrb
xchg
fdivp
testl
cmp
xor
loope
xor
add
xchg
lods
and
and
mov
pop
aaa
imul
das
mov
xchg
dec
or
icebp
int
sub
mov
xchg
mov
or
test
mov
or
arpl
mov
mov
or
lea
rorl
test
adc
mov
cmpsl
mov
jno
dec
or
das
sbb
lcall
xor
repz
inc
arpl
jge
push
sub
pop
and
es
push
pop
jmp
xchg
xor
fwait
into
xor
nop
daa
adc
dec
pop
and
in
inc
xchg
mov
add
sub
sub
nop
icebp
repz
xchg
jne
mov
jns
jno
rolb
mov
icebp
mov
sbb
orl
dec
jo
mov
jecxz
push
mov
lcall
addr16
ret
jecxz
mov
jl
push
xor
scas
aas
or
pop
cwtl
cmp
andl
pop
fsts
inc
jno
stos
and
sbb
in
popa
push
sbb
mov
push
mov
sub
into
mov
in
jb
scas
and
cwtl
mov
hlt
rcl
sbb
arpl
push
cmp
gs
pop
or
pop
les
loope
mov
insb
jp
imul
add
xchg
idivl
rorb
test
cmp
subb
cmp
lea
pop
add
rorb
cmp
cmp
xchg
sti
xor
shll
pop
inc
js
sbb
or
mov
insb
mov
adc
mov
cwtl
sub
push
aaa
wrmsr
aas
scas
pop
add
xchg
mov
shrd
pop
push
add
and
cs
lods
pop
js
xor
inc
cmp
imul
xor
inc
pop
outsl
dec
sti
in
lret
mov
pop
es
inc
cmpsb
mov
or
loopne
loope
insl
data16
mul
xor
addl
and
or
lods
mov
test
adc
sub
add
popf
rcl
mov
scas
nop
adc
cmpsb
xlat
pop
scas
lods
add
push
or
xchg
test
dec
rorl
inc
aad
xor
mov
dec
xor
lds
jg
dec
mov
xor
ret
xchg
fdivp
cmc
aas
dec
pop
xchg
or
inc
nop
lods
adc
cmp
movsb
xor
mov
arpl
mov
inc
lret
cmp
aam
push
ret
cmp
fucomp
pop
js
adc
and
rcrb
add
shll
add
dec
stos
and
cltd
mov
test
push
sub
iret
pop
inc
mov
fs
test
clc
mov
push
mov
jmp
pop
mov
and
pop
dec
test
pushf
arpl
sbb
fadds
cmc
add
push
xor
inc
inc
loopne
pop
push
aam
xor
adc
jb
jno
add
jmp
or
inc
out
rcrb
fs
push
lea
bound
imull
fstp
adc
jb
inc
loopne
cmpl
and
jge
outsb
loopne
or
adc
movsb
mov
xor
ljmp
jno
leave
lahf
pop
cwtl
outsb
or
jecxz
jo
pop
out
popf
pop
xor
pop
push
jg
cmp
aaa
pushf
loope
mov
ljmp
inc
mov
rcrb
clc
mov
shrb
sbb
dec
loope
stc
iret
mov
xchg
add
xchg
call
xor
inc
test
aad
mov
shlb
sub
inc
mov
das
in
inc
outsb
sub
js
pop
or
insl
mov
push
daa
sbb
pop
and
bound
and
add
xorb
mov
xchg
pop
sar
mov
fisubrs
mov
popa
sub
mov
jb
push
xchg
and
inc
inc
add
mov
aaa
xchg
mov
test
mov
jmp
jns
pop
stos
cmpsl
cmpsl
aad
cmp
daa
mov
aas
lods
mov
push
test
fisttpll
lcall
test
std
test
popf
xchg
push
clc
ret
aas
shlb
push
ret
adc
cmp
orl
inc
cwtl
add
jl
cmp
ret
or
stos
out
sub
popa
jl
fs
jmp
fldt
orl
ja
sbb
popa
mov
or
mov
adc
cs
xor
push
cltd
push
xchg
bt
mov
pop
cmpsb
and
cwtl
add
push
nop
fxch
jmp
aam
mov
out
mov
inc
sub
or
xor
pop
ret
gs
je
mov
iret
jbe
rcrl
add
push
iret
pop
aaa
xorl
rol
iret
dec
stos
das
mov
pusha
into
xchg
movsl
sub
outsb
pop
pusha
push
lods
imul
stos
imul
add
lcall
pop
sbb
es
sbb
clc
jecxz
sub
jmp
sti
or
push
mov
lret
ret
sub
jb
imul
sbb
scas
aam
push
cmc
push
js
das
or
and
push
loopne
push
int
fdiv
out
imul
pop
nop
add
pop
in
mov
test
test
or
cli
mov
and
std
add
mov
lahf
sub
adc
push
dec
pop
imul
mov
or
jmp
pop
cmp
mov
push
xchg
fdivrp
hlt
sub
and
cmp
sub
lahf
lock
fsubs
fmuls
aas
subb
sti
add
xchg
pop
inc
xor
sarl
popa
aam
mov
xchg
add
cmp
xchg
add
dec
and
and
fsubl
fwait
add
inc
sbb
xchg
jg
ds
push
stos
stos
mov
and
inc
es
punpcklbw
adc
cmc
add
add
or
out
loop
rol
jle
imul
outsb
mov
jg
stos
dec
aam
lahf
imul
jp
jmp
dec
or
xor
xor
and
subl
push
test
adc
jae
push
clc
or
add
sti
shr
sbbl
aam
jmp
orb
sbb
mov
ja
jecxz
sbb
pusha
cmp
xchg
adc
inc
out
fcmovb
sub
lea
jp
pop
push
adc
stos
mov
loop
xchg
and
mov
js
scas
sbb
sub
or
insb
pop
movsb
mov
xchg
sti
sbb
push
or
add
pop
rclb
xor
mov
lods
dec
inc
test
ss
jmp
push
mov
add
jecxz
and
pushf
xor
mov
add
inc
pop
popa
pop
loopne
inc
add
pop
mov
mov
xchg
cmp
dec
lahf
call
ja
cltd
daa
inc
push
sbb
ret
addr16
and
dec
in
popa
int3
dec
dec
adc
jl
add
inc
add
sbb
push
xor
and
leave
lods
adc
rorb
xor
mov
or
xchg
and
mov
push
pusha
adc
leave
add
stos
add
in
aaa
loopne
xor
in
test
jge
jo
pusha
jmp
or
lock
mov
xchg
pushf
mov
aas
leave
movsl
sarl
adc
and
or
mov
and
pusha
pop
jo
lods
dec
push
adc
or
and
or
shlb
jmp
in
add
pop
and
minps
jp
out
mov
gs
pop
inc
daa
xor
loope
cmp
sti
ror
mov
das
sahf
sbb
xchg
icebp
mov
jl
jns
dec
pusha
dec
jl
mov
roll
int
mov
adc
pop
xor
ds
mov
push
dec
movsl
or
xorb
sub
into
adc
inc
jno
ljmp
mov
mov
aaa
xchg
jno
movsb
ds
mov
pushf
lods
movsl
xor
cmpsb
add
mov
les
aad
ror
les
pop
fnstenv
sub
mov
add
add
xor
xchg
cmp
push
movsb
fadd
pushf
pop
xor
aas
adcl
sbb
mov
mov
jns
mov
xor
aas
cmp
add
ret
pop
dec
add
sub
aaa
and
test
jnp
pop
ret
pop
mov
lea
pcmpeqb
aas
dec
enter
xchg
dec
adc
sahf
test
xchg
xchg
arpl
jne
sub
xchg
push
xor
pusha
and
pop
dec
or
shrb
xchg
mov
push
out
shlb
cwtl
inc
or
insl
sbb
sub
outsl
cmpb
sbbb
pop
nop
rcl
xor
mov
inc
mov
sub
or
xchg
push
out
test
xor
add
popf
jg
sar
inc
arpl
jl
inc
outsb
jl
insl
and
mov
cltd
imul
add
add
mov
sub
adcb
push
sbb
push
and
or
mov
pop
adcb
jg
lods
mov
iret
ret
inc
stc
push
shl
mov
enter
sub
jg
dec
or
xor
fs
rcrl
mov
arpl
adc
cli
jo
mov
cwtl
jmp
daa
inc
rcrb
jo
test
mov
inc
out
sbb
jmp
lret
push
adc
dec
dec
aaa
and
xchg
lret
pop
adc
xor
clc
iret
inc
rclb
mov
add
cs
mov
mov
shlb
test
pop
or
mov
cmp
or
lock
sbb
or
dec
cwtl
pusha
insl
nop
cmc
sarl
ret
clc
push
in
nop
bound
pop
fnstcw
and
mov
sbb
adcb
and
add
cmp
mov
fmuls
insb
and
jnp
cmp
jnp
pop
sti
xor
das
test
imul
push
ret
pop
addr16
out
dec
leave
js
push
adc
out
xchg
adc
xchg
sarb
xorb
sbb
lods
xchg
xchg
jo
xchg
out
adc
lret
mov
ficoml
mov
inc
or
inc
mov
shrb
cmp
bound
pop
cmp
push
mov
shll
inc
inc
test
jne
jmp
xor
adc
xor
clc
mov
ret
mov
lret
mov
fldl
add
ret
fsubl
inc
ljmp
mov
jmp
out
icebp
inc
ret
or
rclb
pop
sub
ret
out
xor
pop
movsl
mov
mov
mov
mov
pop
movsl
mov
xchg
fistl
notl
subb
gs
sub
aad
mov
movsb
xorl
inc
bound
in
das
adc
cmc
xor
cmp
jp
cmp
or
lds
sti
test
or
cmpb
adc
aad
mov
adc
add
mov
lahf
push
inc
add
sub
aam
or
adc
repz
xchg
xchg
gs
cmp
fxch
arpl
pusha
jmp
mov
or
jnp
push
push
xchg
add
push
xor
cs
sbb
lret
aaa
sbb
ficomps
gs
in
punpckhbw
movsb
das
rol
pushf
js
andl
pop
outsl
mov
push
or
push
add
test
push
aam
pop
daa
stos
sti
icebp
cwtl
dec
cwtl
adc
or
pusha
push
xchg
fisttpl
and
adc
and
sahf
dec
into
pop
xchg
inc
js
adc
je
jl
loope
xchg
adcl
add
push
push
into
test
fwait
and
jo
iret
sub
outsb
test
add
adc
negl
test
jecxz
add
call
mov
push
mov
jmp
int
jns
lea
out
mov
jb
xor
mov
loope
dec
adc
push
arpl
repz
js
pop
inc
xchg
mov
adc
out
xchg
ja
sbb
rclb
shlb
arpl
pop
mov
adc
jo
loopne
add
cmpsl
hlt
adc
hlt
mov
dec
into
push
xchg
lods
xchg
test
sub
mov
xor
xlat
int
dec
gs
xchg
sti
enter
and
jcxz
ffreep
adc
mov
mull
inc
addr16
lods
scas
dec
or
and
popl
add
aaa
lods
aam
sbb
sbb
cwtl
or
ret
sbb
mov
dec
fcoms
repz
jmp
mov
sbb
lods
mov
cmpl
test
js
mov
int
mov
pop
nop
mov
mov
mov
adc
dec
sbb
pop
ret
push
roll
xchg
cmp
sub
out
xchg
push
and
sub
dec
and
cmp
arpl
mov
add
ret
shrb
insl
rcr
movsl
inc
fwait
xchg
cwtl
sbbl
scas
dec
fcmovb
mov
jl
mov
mov
pop
pop
imul
mov
xor
outsb
lods
push
sub
xlat
inc
fcom
loopne
cmpb
sub
movsb
test
mov
sub
les
daa
adc
cli
leave
add
test
aas
cmp
xchg
orl
ret
lea
pop
xchg
or
std
or
mov
pusha
popa
jne
push
addr16
xorb
mov
push
rcrb
mov
arpl
daa
enter
or
pusha
aas
mov
movsl
cmp
add
push
js
add
nop
push
ret
xor
pop
jge
sbb
ds
imul
push
push
cmp
lock
fnstcw
stos
push
loope
add
gs
mov
pop
lahf
mov
aad
xor
or
hlt
sub
dec
jno
adc
jo
push
fs
test
xchg
push
cmpsl
mov
fldt
aaa
dec
sbb
inc
pop
pop
mov
inc
xor
cmp
sbb
sub
in
push
daa
mov
inc
and
mov
call
xchg
aaa
hlt
js
pop
xchg
jne
and
popa
or
shl
lock
loop
stos
adc
es
repnz
stc
xchg
xchg
ror
lock
ucomiss
adc
pusha
adc
jle
nop
or
inc
out
inc
loope
sbb
sbb
push
movsl
loop
leave
daa
sub
ds
xor
sbb
dec
mov
mov
ror
add
mov
or
pop
xor
sbb
inc
add
or
sub
dec
jmp
add
jne
ffree
lods
test
sarb
xchg
push
adc
dec
nop
dec
ret
icebp
stc
add
mov
roll
xor
jecxz
mov
fwait
clc
jnp
loop
rcl
dec
scas
inc
sbb
cmp
dec
imul
jecxz
cmpsl
imull
sub
xchg
xchg
dec
mov
cmp
out
mov
call
lahf
dec
lea
arpl
pop
notb
gs
lahf
scas
orl
movsl
pop
add
xlat
jecxz
mov
or
lcall
add
mov
fmuls
lea
scas
mov
push
imul
dec
add
adcl
and
out
daa
fmuls
jecxz
xorb
fnstcw
fadds
pop
insl
cmpsl
aas
xchg
jp
nop
imul
movsb
sbb
mov
lcall
adc
pusha
and
aaa
inc
mov
fs
fsts
dec
dec
or
jns
insl
and
popa
icebp
icebp
fisttpl
scas
inc
jae
ja
ds
scas
movsl
or
nop
aas
mov
dec
push
fnstenv
jb
mov
or
sbb
je
xchg
push
mov
ret
xor
ret
jb
or
xchg
mov
adc
jg
push
jl
outsl
or
sbb
call
lods
xor
add
shrl
insl
xchg
push
rolb
test
add
sbb
pusha
mov
xchg
mov
shlb
rclb
test
push
sbb
packsswb
xchg
push
sbb
mov
cmpsb
dec
inc
imul
mov
mov
xor
or
lret
jno
sbb
aad
lods
aad
ret
mov
pop
push
xor
add
sbb
fnstsw
xor
jecxz
lods
jmp
and
movb
dec
mov
movsb
dec
mov
xor
xor
rolb
in
push
ret
xor
or
pop
fidivl
aaa
mov
push
lahf
mov
ret
xor
fistpl
inc
psrad
or
hlt
js
fcoml
fldt
icebp
imul
sub
pop
mov
test
add
and
sarb
stc
adc
popa
ficompl
icebp
inc
add
or
cmpsl
es
sub
outsl
push
les
or
or
std
or
movsb
ja
es
cmp
adc
lret
sahf
inc
xor
push
lcall
popf
xor
clc
pop
add
fwait
pop
arpl
jmp
push
notl
dec
nop
rcrl
xchg
mov
roll
and
cltd
ret
mov
adc
dec
movsb
aas
cs
cmp
cmp
scas
pop
sub
shll
mov
mov
sub
dec
lods
mov
mov
xchg
bound
sub
adcb
outsl
ret
sbb
mov
dec
push
adc
mov
mov
sbb
jmp
cmp
repz
xchg
push
add
xchg
push
push
ret
pop
ffree
cltd
mov
xor
loopne
add
orl
ffree
andb
shll
imul
xchg
inc
int
dec
xchg
icebp
gs
sbb
lea
frstor
movl
daa
cmp
scas
push
loop
jne
fnstsw
xchg
jo,pn
or
enter
rolb
cmp
jmp
mov
xchg
sbb
aad
pop
push
sub
sub
cmp
movsb
pushf
out
jne
or
nop
cmp
roll
ficomps
add
out
sbb
loopne
out
xlat
mov
xlat
or
mov
mov
rcrl
or
cmp
mov
aam
test
data16
cmp
push
fwait
repz
lea
cmp
jge
bound
fadd
xor
sbb
fwait
jnp
cmpsl
xchg
cwtl
mov
inc
loopne
mov
mov
jns
aas
mov
roll
cmp
push
sbb
rcl
int
sub
sbb
rorl
arpl
pop
test
scas
sub
cmp
test
jne
cmpsl
or
jnp
xchg
ret
sub
push
stos
push
fwait
xor
pop
push
add
mov
adc
movsb
stos
dec
or
adc
and
cmpsb
gs
push
dec
xor
xlat
jecxz
pop
pop
and
add
or
pop
push
inc
in
jmp
bound
rcll
shr
shl
das
xchg
sub
or
push
es
ret
cmp
mov
ret
adc
sub
adc
popa
xchg
test
push
das
dec
cmp
shrl
sbb
pop
sub
in
push
lds
lea
insl
cmp
push
push
xchg
fbstp
sbb
aaa
fsub
mov
cmp
test
mov
push
pop
xchg
mov
je,pn
dec
gs
subl
jo
inc
in
adc
sub
cltd
xchg
cltd
scas
sbb
and
cmpsb
mov
popa
sub
fisttpl
xor
inc
mov
int
loopne
dec
and
jge
enter
cmpsb
adc
test
inc
fadds
movsb
jecxz
pop
mov
std
scas
das
inc
mov
pop
mov
push
insl
pop
mov
or
jmp
mov
dec
sti
repz
add
loop
or
scas
or
xor
bound
imul
jo
xor
rorl
mov
nop
jg
je
mov
insl
jge
push
add
les
rorl
packsswb
jb
out
lods
cmc
subl
rcll
out
or
aaa
jne
out
mov
jmp
aam
jmp
or
jecxz
add
lea
pop
stos
adcb
dec
push
add
in
aad
mov
xchg
lea
mov
pop
xor
mov
xlat
xchg
xor
pop
stc
add
xchg
jnp
cmp
push
push
push
lds
inc
sbb
mov
mov
and
and
pusha
repz
push
call
ret
daa
pop
jno
sub
stos
cwtl
lods
outsl
fistpll
xchg
les
xlat
test
aad
clts
shll
push
jo
pop
jo
mov
pop
inc
rclb
stos
fwait
addr16
and
pop
push
pop
jo
ret
fwait
andl
inc
and
lret
mov
lcall
pop
jecxz
mov
jno
push
fdivrl
add
arpl
sbb
cmp
pushf
mov
push
or
repz
xchg
stos
sub
push
mov
jecxz
mov
rol
xor
or
xchg
mov
dec
scas
push
sbb
xchg
add
and
fs
test
xchg
popa
push
and
sbb
aaa
int
or
ret
les
out
adc
adc
jmp
xchg
add
mov
and
ss
or
add
dec
test
arpl
push
sbb
or
rorb
pop
pop
adc
jp
lock
daa
rorb
add
imul
sbb
ljmp
pop
test
cmp
xlat
dec
pop
lea
xor
in
pusha
adc
rclb
inc
cmpsb
mov
lret
test
jne
and
push
orl
sahf
inc
daa
icebp
pop
lea
xor
fucomp
push
loop
push
inc
rorl
dec
push
fsts
sbb
ret
xchg
imul
mov
xor
bound
xchg
add
adc
sbb
and
mov
jo
push
into
mov
or
ljmp
jae
mov
dec
jbe
sbb
mov
mov
mov
call
mov
out
add
repnz
add
cli
das
mov
and
mov
pop
scas
outsl
cmp
insl
imul
pop
xchg
ret
fisubrs
xor
out
popf
xorl
out
ret
out
das
mov
shll
xchg
notl
les
xchg
ret
mov
daa
cs
fildll
jae
sbb
sub
pop
das
jo
rorl
and
add
xor
xor
scas
aad
inc
sbbl
adc
pop
repz
popa
cmp
mov
pushf
aad
adc
mov
das
aaa
and
jp
cmp
push
mov
outsl
dec
lods
sbb
push
push
scas
mov
cmp
stc
sarl
decb
cmp
adc
add
addb
inc
adc
lret
jmp
mov
jecxz
sbb
fwait
jnp
out
jae
clc
sbb
scas
ss
pop
and
inc
lret
mov
or
mov
iret
inc
lds
rorl
roll
adc
mov
cmp
das
fstps
add
das
fwait
and
mov
cmp
jnp
jle
inc
aaa
mov
pop
lea
jle
scas
xor
or
pop
or
inc
push
pop
arpl
lock
pop
fstpt
out
push
sbb
mov
imul
cmp
fstpt
inc
and
imul
addr16
xchg
jge
inc
sub
adc
loope
push
mov
sub
mov
inc
xchg
mov
outsl
test
cmp
cmpsl
sub
push
add
mov
cs
add
pop
mov
sub
add
cmp
add
xor
dec
addb
adcb
scas
inc
int
mov
stos
stos
call
cmpsl
sbb
push
ret
or
jne
sub
dec
mov
xchg
or
xchg
dec
adc
mov
sbb
inc
jnp
pop
push
je
lds
cs
inc
push
cmp
xor
cs
inc
popf
sarl
or
push
xchg
data16
xor
outsb
icebp
call
mov
mov
mov
or
dec
rorl
stc
add
mov
sub
adc
push
mov
aaa
sub
rclb
sarl
fsubrs
jp
push
xchg
mov
xor
arpl
dec
xchg
sbb
sub
out
imul
pop
add
and
and
xor
xor
aaa
sbb
ds
rcrl
outsb
jecxz
sub
push
in
sahf
call
dec
mov
jl
pop
and
sub
adc
push
mov
test
test
push
addl
xchg
ror
sbb
inc
je
xchg
loopne
lods
into
push
sbb
sub
mov
mov
imul
sbb
inc
add
mov
sbb
inc
dec
fcmovnb
pop
insb
inc
push
mov
add
or
inc
jecxz
jno
call
push
inc
jns
adc
jmp
sti
stc
fcmovnu
das
sbb
es
out
sbb
add
add
inc
xchg
adc
subb
mov
add
and
bound
and
fsubr
cltd
repz
inc
add
cld
ret
add
and
and
push
add
clc
icebp
stc
mov
adc
arpl
xlat
hlt
pop
xorl
inc
push
daa
ret
or
daa
pop
inc
and
or
add
and
repz
call
jp
mov
jg
add
jb
and
or
sub
repz
call
gs
ret
cld
dec
loop
xchg
pop
jo
adc
jg
and
xorl
pop
pop
mov
adc
xchg
or
xor
fildl
dec
adc
ret
les
pop
jl
mov
mov
leave
mov
jecxz
xor
ret
dec
xchg
jne
dec
sbb
mov
sahf
push
inc
fidivs
xor
adc
xor
cmpsb
test
and
jl
aam
lock
shl
sbb
lret
ret
inc
out
sbb
ret
jmp
shrb
pusha
outsl
mov
or
push
movsb
loopne
outsb
outsb
adc
xlat
push
sub
dec
cmp
xchg
mov
or
pop
mov
roll
ret
cli
mov
or
xlat
mov
push
arpl
loopne
rorl
jmp
adc
or
pop
leave
push
mov
test
push
jecxz
lahf
push
mov
das
adc
mov
mov
mov
out
lods
sbb
shlb
jp
mov
aam
jnp
xchg
jle
push
shrb
cmp
jns
enter
mov
in
lds
cltd
xchg
lds
xchg
or
cwtl
push
push
cmp
cmp
jo
ret
popf
pop
jmp
jge
rcl
out
cs
and
xchg
inc
fbstp
inc
xchg
popl
or
pop
add
push
sbb
push
and
push
sbb
jnp
and
and
inc
ss
push
push
mov
pop
testl
insb
pop
in
dec
add
xchg
jae
clc
mov
pop
pop
push
and
pop
mov
fadds
sub
push
xchg
imul
sahf
in
jnp
je
dec
and
push
fwait
adc
sub
int
mov
mov
sub
push
arpl
sbb
hlt
cmp
fldt
pusha
jo
cmp
cltd
pop
ret
xchg
mov
inc
fs
dec
pop
das
mov
fiadds
mov
sbb
xor
bound
inc
jnp
or
imul
dec
mov
inc
jle
jb
enter
push
out
sahf
jnp
push
mov
pop
mov
adc
popa
movsl
mov
orb
hlt
adc
sbb
and
push
out
jne
push
cmp
cmp
cmp
jno
arpl
inc
add
pop
and
xor
fndisi(8087
cmp
cmp
push
mov
and
adc
inc
pop
aas
add
dec
mov
nop
and
jnp
insb
sbb
js
aaa
inc
mov
xor
xor
mov
lods
adc
and
add
outsb
aas
inc
sbb
mov
ret
imul
mov
xor
cltd
sbb
loopne
dec
lods
inc
lods
enter
ss
fdivs
dec
subb
jo
sbb
add
and
fcoms
fnstcw
add
lahf
cmp
fcoml
hlt
or
fadd
pop
lcall
xor
aas
pop
and
fwait
mov
jge
aaa
xor
testl
sub
pusha
dec
daa
loopne
out
fidivrs
ja
add
imul
inc
aaa
arpl
stos
jo
gs
adc
cltd
pop
mov
push
or
imul
cwtl
sbb
lock
and
mov
xchg
lea
push
out
add
pop
add
hlt
aas
mov
fdivl
ljmp
les
push
mov
test
out
cs
cs
sub
stos
push
fcomps
jmp
inc
ss
pop
add
test
and
and
insl
bound
pop
jecxz
adc
dec
sbb
out
push
xor
test
and
in
rorl
sbb
push
rcr
inc
loopne
adc
dec
and
enter
sarb
pusha
mov
cmc
pusha
jge
lcall
pop
and
cmp
push
rcl
add
push
bndldx
aas
imul
iret
cmpsb
mov
popa
lock
or
push
js
iret
pop
mull
icebp
xchg
inc
and
pop
dec
imul
imulb
arpl
xchg
sbbb
cmp
pop
stc
clc
out
xor
mov
xor
dec
cltd
add
sbb
push
sbb
add
out
adc
push
and
add
dec
and
adc
add
rorl
rcrl
jbe
cmc
mov
pop
mov
fidivs
scas
add
roll
inc
jecxz
insl
add
aaa
mov
mov
mov
aas
add
frstor
adc
push
js
jmp
cmp
loope
gs
test
add
ja
adc
stc
test
jb
lahf
mov
in
jo
ret
dec
pop
jb
cli
and
fldl
das
ret
out
sbb
or
cmp
sub
and
pop
inc
jae
mov
mov
aas
imul
fldl
ret
arpl
loop
push
mov
push
loop
pop
push
mov
mov
add
add
icebp
and
fs
inc
cmpsb
jge
test
test
pop
xchg
adc
dec
inc
loope
icebp
xor
mov
repz
jp
and
adc
adc
push
and
mov
lahf
sbb
bound
insb
cmp
pop
push
inc
rcrl
loopne
add
xchg
icebp
ret
sbb
add
shl
and
pop
icebp
pusha
test
orb
adc
and
clc
xor
jg
out
sub
rcrb
mov
xor
xchg
mov
orl
test
movsww
mov
pop
mov
movsl
scas
cmpsb
sbb
mull
xor
mov
mov
mov
or
add
push
insl
loope
add
fistpl
sarl
in
add
cltd
gs
jl
add
lea
imul
es
add
rolb
aas
push
cmp
or
sub
jnp
bound
fwait
sti
addb
ror
test
push
popa
adc
sub
or
mov
cmp
inc
push
test
iret
out
pop
ja
je
addb
push
rorl
adc
sbb
loop
insb
jl
stc
xor
inc
push
decl
repnz
add
cmp
cmp
aaa
ss
jge
or
adc
std
cmpl
fwait
aad
enter
cmpsl
lea
out
sbb
pop
adc
sbb
pop
xor
xchg
push
fs
adc
add
into
call
fldl
adc
rol
sub
mov
xor
or
gs
leave
mov
or
gs
daa
movnti
aas
push
xchg
pop
jnp
ret
icebp
pop
jne
mov
std
lods
aas
or
js
xchg
in
rorb
or
std
xchg
mov
shrb
sbb
jnp
orb
stos
xor
aaa
scas
gs
add
std
mov
in
ljmp
sub
iret
jnp
pop
outsb
jg
xchg
sbb
fcmove
icebp
mov
test
or
adc
roll
das
mov
outsb
push
inc
mov
shlb
xor
pop
xor
movsb
popa
jbe
in
and
inc
fisttps
push
inc
outsb
sbb
fsubrs
mov
test
jge
test
push
sbb
rcll
das
pop
push
push
sbb
or
and
sbb
add
cmp
enter
add
fidivl
in
xchg
sub
push
enter
add
rolb
pop
mov
pop
das
add
pop
or
sbb
pop
dec
inc
fs
pop
mov
popa
arpl
xchg
pop
sub
xchg
loope
sub
mov
mov
inc
fs
jecxz
jno
jecxz
inc
sub
loopne
cmpb
insl
push
sbb
out
sbb
or
loope
adc
pop
lea
jae
jno
div
adc
push
pushf
cmp
jp
inc
mov
and
sahf
pop
mov
push
lret
fsub
mov
scas
xchg
sahf
negl
imul
lret
cmp
je
movsl
mov
pop
xchg
pop
mov
cmp
fbstp
jns
pushf
out
int
jmp
fsubl
cmp
fcmovnu
jno
jecxz
loopne
data16
xor
pop
icebp
add
xor
imul
addr16
pop
or
fmull
add
sbb
imul
dec
pop
ret
jg
cmp
cmp
lea
das
sub
movsb
hlt
add
inc
pop
pop
sub
inc
sti
fcomi
add
jno
mov
pop
inc
jge
add
arpl
or
arpl
mov
sub
movsl
sbbl
push
cmp
loopne
inc
pop
es
push
sbb
mov
dec
pop
mov
inc
sbb
xor
sbb
sbbb
test
mov
pusha
in
int
test
adc
mov
mov
cwtl
pop
push
inc
adc
cwtl
cmp
hlt
inc
add
dec
in
enter
xchg
push
fmulp
pop
cmc
sbb
aad
mov
sub
push
addb
xchg
jb
loop
mov
dec
xlat
xor
or
pop
add
jmp
fistpll
repz
sti
or
xchg
or
jmp
stos
test
inc
and
push
pop
fwait
inc
xor
aas
stos
repnz
shlb
in
je
jp
repz
rorl
or
int3
jecxz
cmp
pop
sbb
push
insb
pop
and
das
inc
or
out
scas
mov
aad
pop
jg
push
rol
jmp
xchg
cmpsl
mov
xor
mov
ds
aad
pop
push
pop
imul
and
dec
shl
adc
xor
stc
hlt
inc
js
sahf
popf
cltd
jle
adc
pop
repz
pop
js
out
or
sbb
popa
rcrl
mov
rcrb
adc
sub
lods
adc
mov
pop
cwtl
or
shll
mov
ds
sub
jl
fnstenv
sbb
mov
test
dec
dec
or
mov
imulb
and
or
sub
cltd
dec
lahf
fwait
jnp
hlt
inc
lock
lds
inc
push
lods
lods
adc
dec
inc
ljmp
dec
loopne
stos
sub
in
xor
in
dec
insb
shrb
and
je
pop
sub
fisubs
movsb
xor
sub
push
mov
ret
mov
inc
fwait
add
and
mov
adcl
lods
fs
xchg
mov
pop
imul
mov
mov
std
xchg
jle
add
in
out
add
cmc
nop
adc
clc
nop
in
lods
mov
cmp
cmpsl
xchg
xlat
sti
xchg
mov
xor
bound
mov
pop
mov
out
popa
pop
and
ja
pop
popa
das
lods
fsubrl
inc
pop
xor
xor
jmp
mov
lret
jae
stos
sbb
inc
ret
inc
pushf
call
cmp
add
dec
rol
lret
mov
lods
dec
jl
dec
ss
add
mov
daa
mov
les
popa
orb
cltd
pop
push
xor
push
std
mov
jecxz
adc
ret
push
adc
mov
jbe
dec
jnp
ret
jno
jecxz
cmpsb
adc
and
add
test
out
adc
jnp
and
or
out
xchg
jae
sbb
outsb
and
mov
out
inc
int
push
mov
sub
inc
dec
adc
push
daa
dec
js
cmp
loopne
jg
jmp
insl
pop
mov
add
pop
mov
push
add
sub
lret
add
js
popa
pushf
sub
cmp
pop
fwait
mov
rol
push
cmp
dec
push
xor
dec
into
add
push
xchg
or
mov
cmp
shr
inc
dec
ret
fwait
pop
inc
loop
cmp
imul
cmp
mov
into
mov
sbb
fnstenv
mov
rcrl
mov
movsl
rolb
fisubrl
pop
sub
xchg
and
jp
mov
xor
or
lea
and
insl
mov
add
pop
ja
or
cmp
ret
mov
mov
dec
cmpsl
xor
icebp
adcb
rorb
dec
out
inc
call
add
push
mov
push
xchg
dec
mov
mov
mov
lock
lret
icebp
fildl
add
add
mov
xchg
or
cmp
mov
ret
inc
mov
jecxz
cmp
stos
pop
stos
dec
pop
or
jmpw
jno
or
pop
shlb
mov
popf
leave
leave
jmp
loope
mov
dec
dec
cmc
jg
adc
loop
int3
shlb
ficoms
pop
pop
inc
in
daa
jl
cmc
dec
add
push
dec
insl
jb
and
mov
mov
adc
and
aam
push
adc
arpl
pop
xor
imul
sbb
xlat
shll
cmc
rcl
sub
into
mov
and
movsl
pop
sub
rorl
fwait
adc
rol
mov
pop
sbb
dec
jg
adc
scas
in
sbb
sub
aad
ret
les
loope
xor
pop
mov
movsl
and
jne
scas
sub
adc
jmp
scas
sbb
cmc
inc
pop
addl
lret
popf
into
inc
and
mov
dec
aad
pushl
or
jno
mov
cwtl
ret
shll
scas
push
cwtl
fwait
sub
test
unpcklps
iret
popf
es
or
icebp
push
pop
int3
jno
add
in
scas
test
cs
popa
cmp
pop
mov
pop
aad
mov
dec
ret
mov
jb
out
in
shrl
pop
sbb
push
ffreep
repz
adc
pop
inc
out
es
push
loope
adc
mov
mov
dec
push
movsb
addb
cmpsb
and
loope
outsl
inc
mov
mov
inc
cmp
mov
out
cmc
xchg
inc
mov
addb
ret
movsb
mov
inc
lea
sbbb
dec
xchg
orl
in
pop
aaa
fwait
mov
xor
repz
xchg
test
test
aad
ljmp
xchg
mov
add
add
xchg
mov
sub
test
fcmovbe
nop
sti
inc
xor
mov
mov
or
rcl
cmp
pop
xchg
les
adc
imul
movsl
adc
popf
jecxz
mov
shlb
jecxz
sarb
adc
arpl
hlt
dec
stc
mov
add
xorb
or
xor
sub
inc
insb
icebp
mov
add
pop
xchg
push
jmp
in
in
xchg
andl
add
jmp
xor
sub
jo
add
cmp
push
das
sub
xor
dec
cmpxchg
pop
adc
lods
lret
dec
movsb
dec
les
ret
es
or
in
xor
popa
sub
cmp
inc
cmpsl
or
jae
push
or
loope
or
ljmp
imul
xchg
push
jbe
nop
push
jb
lcall
imul
stos
lea
inc
and
jae
and
xchg
dec
inc
push
dec
or
sub
add
sub
lahf
mov
pop
and
mov
mov
and
movsb
dec
rcr
add
push
fwait
mov
mov
and
dec
or
sahf
jb
xor
cmp
and
subl
shr
pop
nop
nop
subl
xlat
movsl
test
je
mov
ds
mov
lods
ret
sub
push
das
jmp
icebp
test
or
add
mov
and
ret
add
dec
and
subb
fwait
insl
cmovs
pop
sbb
pop
mov
sarl
and
xor
inc
mov
adc
xchg
scas
imul
mov
pop
out
sbb
ret
pop
ret
jge
push
sub
aam
sub
jg
cmp
mov
adcl
mov
push
pop
rol
lds
fbstp
dec
jl
mov
mov
pop
pop
cltd
xchg
loop
rolb
mov
test
add
mov
cs
jno
cmp
stos
scas
fstpl
sub
mov
movsl
je
jne
pop
push
js
push
sarl
stc
sbb
jmp
jmp
mov
lret
out
movsb
xchg
push
mov
xor
fstpt
test
and
adc
jnp
mov
insb
test
add
pop
test
ret
aaa
dec
jecxz
jbe
cmp
push
sub
cmp
loope
xchg
adc
sub
nop
cli
and
iret
xor
fimuls
out
subw
xor
sbb
scas
adc
out
add
push
cmp
add
pop
dec
push
dec
mov
xchg
ror
mov
fwait
mov
je
rcrb
push
cmp
aas
lods
xchg
ret
add
mov
add
dec
and
adc
pop
dec
pop
cmpsb
dec
adc
mov
dec
and
out
mov
xchg
rcr
iret
or
inc
adc
fidivrs
es
pop
ret
ret
loop
and
fcom
sub
jmp
roll
mov
movaps
lret
lds
fwait
jno
jne
jo
push
cmp
inc
test
or
dec
jb
aas
leave
dec
test
dec
push
push
lea
mov
arpl
lds
mov
scas
aam
mov
popf
dec
adc
test
pop
adc
cmp
xchg
jp
rorl
xor
or
aas
push
push
shlb
dec
and
fs
mov
and
jp
push
pop
sbb
sub
les
or
xchg
test
mov
mov
pop
test
add
mov
mov
mov
fdivr
xchg
je
outsl
cmp
ljmp
mov
pop
lock
out
ret
xor
ret
mov
push
in
sti
repz
mov
movsl
outsb
jmp
sub
jle
mov
iret
je
xor
mov
mov
cmp
in
pop
pop
mov
sub
out
or
inc
mov
lcall
or
push
lret
ja
and
rcl
jno
lcall
cmp
or
and
push
jmp
xchg
push
add
and
add
or
or
add
pop
push
mov
addr16
int3
jecxz
notb
sbb
stos
scas
xchg
jp
add
or
jns
divl
cmp
dec
movsl
fildll
jbe
and
dec
jp
or
out
lcall
add
push
mov
ret
pop
stos
ret
in
sub
add
sar
lret
mov
incl
icebp
sub
adc
adc
xor
mov
data16
in
mov
lods
push
and
mov
inc
mov
imul
shlb
mov
lods
mov
ds
cltd
mov
sbb
imul
inc
lods
xor
or
fnstcw
imul
ljmp
rolb
sbb
pop
mov
push
dec
jbe
mov
test
test
inc
sub
movsb
or
les
add
sub
push
in
mov
mov
or
jns
aam
jo
push
out
cmp
insb
test
inc
movsl
inc
gs
test
ss
stos
add
clc
push
bound
es
mov
or
sbb
or
cmpsl
pop
test
mov
pusha
xchg
xchg
fdivl
clc
cwtl
cltd
xor
movd
or
fsubs
scas
and
pop
xor
mov
adc
lea
pusha
mov
sub
or
xchg
mov
adc
inc
das
xor
popf
mov
loopne
iret
pop
lock
sbb
cltd
out
cltd
xor
ljmp
subb
push
sbb
nop
aas
jmp
and
lods
fnstsw
and
rcl
xchg
test
adc
and
in
pop
bound
movsb
repz
ret
fidivs
mov
test
aas
pop
or
lcall
ss
das
dec
inc
sbb
jp
cmp
mov
add
repz
cld
rclb
cs
sub
and
insl
push
test
lea
test
stos
add
dec
adc
jbe
or
mov
add
xor
call
mov
and
or
cmp
jo
cmc
hlt
popa
or
scas
xor
mov
xor
add
sti
or
inc
sub
rcrl
lods
movsb
sbb
fsubrs
sub
bound
and
pusha
and
jno
imul
enter
in
call
mov
pop
or
out
ja
and
adc
std
stos
ret
inc
or
jmp
test
jle
lods
or
ja
or
xor
in
pop
inc
lods
jne
fistpl
and
and
inc
jo
mov
or
and
xchg
xor
roll
mov
jecxz
imul
outsl
test
fadd
cmp
push
adcb
sub
outsb
lods
sub
push
sti
adc
push
adc
insb
jl
jno
jo
movsl
sub
push
push
mov
dec
push
xchg
or
xor
xchg
sbb
or
mov
icebp
inc
jno
or
jl
push
into
sahf
or
cltd
movb
or
icebp
loopne
pop
inc
mov
sbb
fsubs
add
mov
dec
mov
mov
inc
add
mov
js
xchg
and
into
sti
and
sbb
jge
sub
call
js
add
push
imul
insb
aas
add
sub
popf
xchg
nop
cmp
sub
mov
inc
sbb
dec
jmp
jg
or
rcrl
lret
std
cwtl
insb
popa
or
imul
daa
bound
dec
loop
scas
jmp
mov
popf
pop
sbb
add
xchg
or
pop
mov
ja
pop
push
mov
ret
xor
push
fisubrs
push
clc
adc
push
aas
add
push
lcall
ret
sti
add
scas
push
dec
and
xchg
ja
sbb
push
and
jns
mov
lods
orb
ja
ja
shl
in
enter
ja
mov
jbe
pop
pop
shlb
dec
adc
or
or
insl
and
sub
mov
mov
jmp
rorb
mov
scas
inc
add
jg
add
xchg
mov
inc
cmp
dec
xor
fnstcw
aas
movsb
int3
mov
xor
out
xchg
mov
aam
in
sub
cmpsl
js
aad
clc
test
cmc
inc
mov
jge,pn
notb
add
pop
clc
jp
outsb
adc
adc
inc
cmp
push
or
pop
ficompl
push
dec
mov
sahf
or
xlat
pop
mov
mov
xchg
cltd
add
mov
movsl
push
add
sbb
adc
sub
dec
pop
add
stc
daa
push
pusha
rcrb
cmp
pop
mov
sbb
xor
push
test
lcall
js
inc
xor
jle
jno
aam
dec
jo
jnp
loop
or
fs
fmuls
mov
xor
mov
cmp
add
pop
add
arpl
insl
xchg
cmc
js
das
mov
jmp
sub
ror
insb
pop
xor
dec
cwtl
dec
iret
sub
pop
cmp
inc
lock
and
mov
dec
mov
popa
setae
add
daa
add
lahf
stos
loope
stos
popa
jne
add
pop
lahf
mov
in
rorb
mov
sub
leave
jno
movb
xchg
inc
inc
mov
shlb
jno
or
lret
out
ja
popa
rclb
xchg
cmp
dec
cmp
sub
add
mov
inc
in
loop
xchg
jp
enter
add
mov
shlb
cmp
cmpsb
mov
xchg
clc
js
rcrl
int
inc
outsb
and
sub
in
xorl
xchg
sub
lret
rcrl
sbb
movsl
push
xlat
dec
lds
pop
push
mov
xchg
pop
shrl
sub
leave
cmc
sub
push
test
sahf
add
inc
std
iret
js
add
mov
sbb
sbb
movsl
push
and
gs
mov
cmpsl
or
mov
pop
jl
movsb
js
jnp
dec
outsl
test
adc
or
xchg
adc
adc
fisubrs
imul
xchg
pop
sub
fidivs
mov
push
sbb
cmp
cmp
out
and
push
lock
or
icebp
subl
popa
adc
jle
xor
inc
dec
jmp
sub
scas
add
nop
dec
jns
shrl
jb
pusha
lret
or
jge
cmp
push
or
xchg
pop
js
fadds
ret
ljmp
inc
imul
mov
jno
inc
aas
lret
jl
hlt
xchg
icebp
out
aam
arpl
lcall
or
jns
ret
pop
mov
addr16
adc
es
out
push
popa
xchg
inc
inc
pop
mov
xor
call
sub
sbb
add
rolb
adc
sbb
and
jge
adc
sub
pop
mov
ficoms
ret
lea
adc
pusha
xor
jno
jnp
sub
icebp
xor
not
cmp
mov
xor
and
adcl
dec
pop
mov
mov
add
aad
push
push
ret
xchg
xchg
pop
movsl
add
rclb
fadds
inc
lahf
subl
mov
js
pop
data16
sub
fstl
pop
lods
sbb
mov
lret
movsb
inc
or
dec
lds
add
clc
add
repz
pop
mov
shlb
lret
cwtl
fwait
mov
pusha
roll
test
xor
add
mov
pop
jbe
iret
xor
jge
dec
sbb
rcrb
lods
and
sbb
jae
arpl
outsl
clc
dec
add
jecxz
sub
jmp
xchg
xor
ja
pop
push
pop
sub
es
dec
lods
movsb
mov
aam
sbb
mov
aam
or
sarb
fstpl
mov
jnp
or
inc
fbstp
pop
andb
mov
int3
sbb
sbb
mov
jecxz
mov
in
sub
pop
push
and
cmp
xchg
jo
add
xor
in
mov
jno
sbb
int3
je
inc
xor
push
adc
movsb
stos
adc
add
adc
mov
fisttps
loope
jno
sub
jnp
les
jbe
jmp
dec
mov
test
inc
jecxz
adc
push
dec
inc
imul
push
mov
outsl
sbb
ret
loope
sub
mov
sub
xchg
pushf
outsl
inc
scas
aas
insl
sbb
adc
lock
cmp
and
and
out
and
insl
or
add
push
dec
loope
sarb
mov
pop
push
fldl
arpl
dec
ljmp
lret
movsl
iret
bound
adc
jp
sbb
xchg
or
aad
and
out
add
aaa
lods
or
add
mov
test
sub
pop
popf
cmp
test
mov
dec
push
cwtl
imul
out
and
pop
jno
std
aam
sbb
rcl
dec
stos
test
lea
jno
xorl
loope
and
sub
jge
cmp
add
xor
push
add
movsl
test
ror
push
scas
jo
imul
ret
or
mov
mov
push
adc
adc
hlt
lret
jno
and
lea
pop
out
inc
add
pop
cltd
fcomps
imulb
jno
clc
mov
sbb
and
sbb
sub
jmp
xor
das
les
adc
ret
ljmp
mov
or
inc
fdivs
dec
popa
push
adc
mov
mov
popf
orb
add
dec
fwait
aas
jne
filds
mov
xchg
bswap
pop
inc
xchg
add
subb
mov
and
adc
push
and
ds
mov
add
or
dec
and
dec
inc
sub
add
push
adc
mov
test
adc
sar
shl
ret
push
sbb
lock
unpcklps
jnp
inc
and
lcall
push
sbb
jbe
mov
adc
outsb
leave
jmp
adc
push
cmpsb
popf
icebp
add
test
jp
sub
push
fistpl
pop
hlt
stos
subb
scas
movsl
sbb
call
mov
xchg
icebp
dec
push
es
int
push
or
out
mov
nop
cltd
add
mov
mov
xchg
mov
push
adc
lods
test
adc
dec
adc
xchg
adc
jl
cld
mov
jb
xchg
push
mov
add
ljmp
inc
xchg
add
push
ffree
push
fnstenv
rolb
and
fldcw
adc
movsl
jnp
inc
sub
stos
enter
pop
jecxz
cltd
aam
sbb
jb
push
test
les
inc
jge
pop
rorb
ret
or
adc
mov
aam
add
stos
outsl
adc
push
aam
in
mov
das
push
sbb
add
rcll
inc
imul
loopne
jne
push
idivl
jecxz
xor
ret
add
cmpl
imul
adc
mov
mov
mov
mov
sbb
dec
adc
xlat
adc
ds
sbb
sub
fwait
jge
insl
cmc
push
ucomiss
into
or
inc
setbe
das
sub
mov
inc
addr16
fldt
add
mov
and
and
xor
or
es
jns
arpl
xor
loopne
negl
cmp
insl
lods
arpl
shlb
cmpl
shlb
or
int
lock
inc
sub
cmp
pop
add
add
mov
lea
cmpsb
imul
outsb
pop
daa
and
ret
jns
or
adc
xchg
and
push
loopne
mov
stos
sub
imul
xchg
add
imul
fstl
inc
xor
pop
push
mov
lret
add
js
and
testl
xchg
test
jmp
xchg
jmp
adc
jg
mov
es
xchg
pop
popf
jnp
inc
and
fs
rclb
inc
xchg
push
lahf
test
sbb
inc
outsb
stos
popa
fwait
push
dec
lock
sbb
loopne
xor
mov
jp
nop
pop
xor
pop
xchg
sub
ret
push
mov
stos
sub
ds
sub
repnz
fsubrs
sbb
mov
mov
sub
pop
test
cmpl
mov
movsb
rcrl
cmp
rcll
inc
cwtl
aas
add
scas
adc
add
inc
fs
pop
inc
sbb
call
adc
xchg
pop
mov
or
lods
js
bound
and
sub
jl
xchg
mov
or
mov
lea
cmp
or
setbe
js
mov
shll
in
xorb
movsb
cltd
imul
rcl
jns
xor
add
repz
and
dec
xlat
aaa
mov
sub
add
ret
push
and
pop
sub
mov
jecxz
push
shl
adcb
pop
adc
and
ret
dec
jl
mov
xchg
mov
ret
push
or
xlat
mov
lret
dec
adc
sbb
aas
dec
pop
adc
pop
mov
pop
inc
xchg
sti
in
and
mov
data16
xchg
int
lods
in
inc
mov
cmp
dec
mov
stos
xor
mov
pusha
jecxz
test
inc
fwait
mov
jecxz
pop
inc
test
xlat
push
xchg
fwait
mov
pop
insb
pop
pusha
ss
scas
push
cmp
inc
ret
pop
insl
pop
jp
les
add
push
mov
jns
adc
or
imul
inc
pop
lret
pop
rcrl
orl
int
mov
roll
add
push
ss
push
jno
sbb
std
sbb
add
sub
add
adc
push
sbb
outsl
movb
adc
or
scas
and
test
in
jnp
lods
scas
pop
push
or
add
add
xor
add
nop
popf
and
mov
pop
pop
ret
add
or
adc
add
add
pop
sub
sub
enter
inc
movsl
sbb
xchg
stos
add
sbbl
pop
or
mov
pop
cs
mov
adc
rol
cmpsb
lret
push
pop
cld
popa
ret
and
lods
in
mov
lret
rcl
xor
mov
add
ret
and
xor
mov
add
push
imul
or
pop
mov
test
cli
and
or
loope
mov
adc
mov
push
leave
xchg
mov
adc
mov
icebp
xor
in
add
add
jmp
jno
and
js
test
mov
mov
push
aaa
loope
movsl
mov
dec
ret
mov
pusha
and
sti
push
or
pusha
out
xchg
arpl
fisubrs
xchg
add
mov
loopne
fsts
cmp
dec
aam
add
lock
stos
imul
pop
push
cmp
cmc
dec
jge
inc
sub
and
rcrl
fsubs
rol
lahf
imul
mov
sub
rolb
push
mov
push
orb
sbb
fidivrl
sub
push
mov
lahf
and
jo
mov
daa
jnp
cli
js
adc
lods
lahf
pop
pusha
lds
add
sbb
and
dec
push
gs
and
xor
sbbl
pop
push
adc
stos
ret
rcll
xchg
pmulhw
and
shrb
and
xchg
lods
shlb
jge
rorb
fcomp
pop
inc
xlat
rcll
or
push
dec
jl
sbb
push
mov
xchg
pop
lods
pop
mov
cmp
les
push
inc
inc
cmpsb
dec
std
test
mov
sbb
and
js
cmpl
cmp
das
rcrl
pop
sub
dec
mov
xchg
lcall
cmpsl
sbb
push
pop
mov
outsl
lret
cmp
inc
decl
mov
xchg
cmp
outsl
push
fstps
push
lods
jae
lods
daa
nop
adc
mov
lahf
xchg
inc
stos
pop
iret
cmpsl
pop
shlb
and
in
dec
aad
or
jl
scas
dec
jle
test
dec
imul
mov
dec
loop
leave
movsl
xor
and
mov
sbb
imul
ss
or
fisttpll
ret
jl
mov
sub
sub
lret
cld
movsb
and
jo
scas
inc
insl
or
rcr
sbb
or
dec
cs
sub
mov
mov
sbb
sub
sub
push
jne
shll
or
cmp
or
test
and
inc
js
mulb
inc
push
add
or
add
sbb
mov
pop
fmuls
add
cmp
jo
pop
add
xor
xlat
mov
pop
jp
pop
cmp
xchg
shrb
push
jo
in
and
sbb
lcall
add
mov
test
mov
mov
jmp
loopne
ret
fldl2t
or
outsl
mov
mov
mov
fildl
movsl
mov
sub
adc
add
jns
push
and
jge
arpl
lods
fs
xlat
outsb
aad
mov
pusha
sbb
imul
push
stc
add
dec
mov
inc
sub
mov
out
es
fwait
sub
inc
xchg
and
inc
fsubrs
in
mov
aaa
mov
inc
dec
pop
sub
lock
cmp
jge
pop
test
hlt
in
add
test
xlat
cli
roll
xchg
xor
out
sub
mov
xor
imul
push
push
sub
dec
xchg
xchg
cli
fstps
add
pop
mov
leave
test
pushf
addl
inc
stos
sub
insb
daa
push
sub
xchg
nop
mov
shl
js
or
add
outsl
test
mov
fcompl
test
add
popf
add
sub
dec
sbb
dec
fisubrl
lods
in
jge
add
outsl
push
mov
jmp
mull
adc
insl
cmp
mov
aam
dec
xchg
jmp
inc
xor
pop
pusha
cli
clc
and
mov
push
les
sub
adc
xlat
fldt
enter
mov
xchg
imul
sbb
faddl
or
daa
bound
inc
mov
mov
jmp
hlt
jecxz
or
fs
jno
inc
loopne
mov
js
pop
pusha
or
inc
mov
mov
jge
xchg
push
adc
lock
aaa
out
test
mov
or
cmp
or
dec
popf
lahf
xchg
rolb
and
pop
xchg
sub
mov
mov
xor
add
dec
jb
test
out
jmp
roll
inc
insl
sub
and
pop
js
sub
mov
test
sti
ret
jnp
add
mov
jg
xchg
mov
ret
sbb
cmpsl
mov
insl
das
and
aas
int
or
into
outsl
jb
add
sub
bound
lret
jae
xchg
scas
xchg
pop
test
loopne
adc
ret
clc
leave
sahf
lock
or
xchg
dec
or
pop
push
pop
incb
lods
xchg
push
push
cmpsl
inc
rclb
push
pop
mov
int
push
orb
add
sub
sub
loopne
and
test
jbe
arpl
add
shrb
or
das
or
jns
pop
in
std
imul
adc
adc
sub
inc
lods
pop
imul
js
sti
and
mov
bound
popa
insb
mov
mov
ud1
lock
add
mov
xchg
data16
jmp
mov
subl
cmpsb
or
sbb
shr
cmc
or
adc
ss
jg,pn
stos
sub
mov
push
sbb
pop
mov
test
scas
dec
in
lds
xchg
xlat
in
fsubs
and
test
sbb
push
or
ljmp
leave
add
scas
add
insl
xchg
fucomi
or
movsl
lret
jecxz
pop
pusha
adc
lea
inc
call
pushf
icebp
aad
mov
ljmp
scas
hlt
and
and
pop
inc
add
dec
shrb
dec
orb
cmpsl
mov
ret
subl
movsl
lods
addr16
sbb
xchg
icebp
outsb
or
pop
push
jp
in
insl
jno
cltd
es
mov
jge
rorb
push
cmc
push
popf
test
js
dec
jnp
test
and
std
cmpl
rcl
dec
imul
test
cmp
loopne
push
push
pusha
aam
dec
sahf
pop
xor
pop
mov
xchg
xchg
cwtl
inc
sarb
jmp
daa
cs
dec
push
jns
pusha
mov
rcll
push
and
dec
cmpsb
mov
or
mov
adc
xchg
pop
push
xchg
mov
movb
or
xor
stos
mov
inc
sbb
dec
imul
ret
add
push
mov
test
test
inc
int
xchg
clc
add
jle
arpl
xchg
xor
mov
adc
mov
aam
pop
dec
ljmp
jmp
mov
sbb
jbe
xor
mov
insl
pop
xchg
shrb
mov
xorl
cmp
leave
fadd
dec
xor
sbb
add
or
cmp
xchg
sub
lea
lods
psrld
jl
push
mov
cmpsb
je
shll
call
pop
dec
xor
jmp
inc
xor
mov
outsl
inc
xlat
dec
pop
lahf
and
jp
je
shl
xor
mov
or
jge
or
jg
mov
mov
shrl
jecxz
insl
repz
lods
dec
or
and
arpl
inc
loopne
pop
pop
jbe
push
fistl
add
in
andl
pushf
jno
sbb
andb
add
shrb
ficomps
lods
gs
inc
xchg
adc
les
jo
loope
aad
fstl
addr16
ret
test
mov
xor
inc
mov
sub
xchg
sbbl
ret
inc
fldenv
stos
imul
jno
rcrb
popa
adc
rol
cmp
fstps
add
add
and
push
jnp
fildl
add
mov
movsl
sub
dec
add
icebp
xchg
fwait
or
push
test
das
add
scas
gs
cltd
push
xchg
or
jnp
add
dec
pop
adc
jae
jl
je
out
add
add
mov
sbb
out
sbb
ja
scas
cmpsl
cmp
jl
and
pop
ds
inc
cmp
jbe
xor
or
adc
mov
sbb
roll
sub
mov
xchg
in
inc
mov
dec
mov
es
xor
test
mov
rol
stos
lcall
daa
call
ret
adc
push
mov
nop
lea
aad
das
aam
xor
imul
arpl
es
pop
mov
push
inc
mov
add
inc
pop
into
scas
mov
mov
jl
imul
mov
gs
add
mov
add
shld
push
or
hlt
and
xchg
xor
pop
in
cmp
inc
jle
stos
add
push
adc
or
scas
jne
and
and
add
test
dec
int
sub
sbb
cmp
sub
icebp
and
js
cltd
cmp
jnp
jbe
fstl
adc
cmp
ret
orb
sub
mov
je
mov
push
sub
pop
jns
cmpsl
sub
mov
js
vmwrite
adc
pop
add
pop
sbb
sub
ret
lods
sub
and
xor
push
ret
mov
add
mov
icebp
jo
cmpsl
test
mov
jmp
imull
enter
push
push
pop
rcrb
mov
shrb
je
fiadds
mov
lds
nop
add
arpl
push
push
fldl
mov
jmp
lcall
and
push
pop
xor
addr16
loope
popa
aad
adc
jno
andl
jno
lcall
cmp
in
in
es
sbb
xor
imul
inc
addr16
js
loop
jecxz
jo
cs
cmpsb
pop
adc
js
push
in
shlb
push
addr16
xorb
ja
divps
add
sahf
dec
sbb
adc
pop
push
xchg
aaa
inc
ffree
push
gs
cmp
mov
mov
gs
push
aam
mov
add
loop
jl
aam
or
loopne
test
cmp
mov
lcall
hlt
dec
cmpsl
sub
cltd
cld
ret
mov
cltd
lds
xchg
ret
shrb
mov
out
lret
mov
arpl
loope
inc
pusha
inc
adc
in
push
add
push
cmp
add
dec
sub
jo
or
push
fsts
adc
push
ljmp
adc
xchg
push
into
insl
pop
and
cmp
xchg
jne
in
pop
sub
ja
enter
or
rcrl
fildll
sub
jae
mov
movsl
into
insl
mov
xor
test
lods
loopne
or
mov
bnd
or
lahf
cmpsb
popa
lahf
dec
in
adc
in
jle
xchg
add
es
test
data16
dec
pop
fisubl
ret
mov
hlt
fidivrs
adc
mov
mov
lahf
cmpsb
cmp
add
xlat
mov
and
jne
and
add
xor
add
push
sub
dec
repz
cs
jns
xor
add
and
rclb
and
mov
push
mov
push
xchg
push
mov
ljmp
shl
xor
aas
push
inc
jge
mov
jmp
dec
xor
sub
mov
xor
lret
popa
outsl
inc
dec
cmp
out
pop
or
scas
iret
mov
push
mov
ret
xchg
fwait
test
lret
das
sarb
xor
icebp
leave
addr16
jg
ret
cmp
sub
inc
mov
and
adc
dec
pop
inc
hlt
xor
and
mov
sub
cwtl
jl
loop
lret
add
push
jns
pop
dec
roll
lret
test
rcll
arpl
nop
xor
xchg
outsl
mov
repnz
fdivrl
test
movsl
vmwrite
loope
loope
xor
push
ret
and
jnp
int
push
xchg
xor
daa
pop
in
lock
pop
or
das
push
add
push
dec
sbb
xchg
fstl
lods
ljmp
push
and
add
test
cmp
aad
inc
mov
or
dec
sub
int
xchg
hlt
and
fldenv
jg
rcr
jp
mov
sub
adc
popa
add
mov
roll
mov
rolb
inc
jmp
pusha
jo
push
xor
icebp
scas
imul
test
add
sbb
dec
xor
lock
or
loopne
adc
adc
lcall
cmpsl
xor
das
cmp
mov
pop
or
dec
inc
jo
pop
fimull
test
cmp
pusha
push
adc
jmp
mov
sbb
loop
test
push
cmpb
inc
outsb
rcl
inc
add
out
iret
xlat
ds
lahf
jge
cmpsb
and
mov
loop
xchg
cmpsb
repz
loop
in
mov
ljmp
les
push
ja
sub
imul
loopne
pop
pop
hlt
mov
sbb
je
xchg
xchg
sbb
cs
or
clc
pop
enter
xorl
js
ja
xchg
push
popf
or
add
xchg
jecxz
rcll
hlt
jecxz
ljmp
push
xchg
fdivl
mov
inc
ja
into
and
push
leave
push
loopne
push
subl
loopne
fucomi
pop
adc
and
sbb
push
subl
jne
inc
cli
ss
cmp
push
mov
hlt
enter
and
mov
adc
sar
push
push
dec
lods
push
fldenv
repnz
enter
cmp
movsb
mov
loope
cmpsb
rcrl
jnp
jmp
mov
popl
pop
aas
insl
je
cmp
inc
xor
inc
mov
inc
dec
mov
sbb
pop
push
ret
std
cmp
push
jne
stc
sarb
lcall
mov
add
sbb
arpl
jmp
test
dec
sub
jb
aad
mov
pop
test
icebp
jecxz
push
mov
pop
andl
aam
adc
clc
div
test
cmpsl
mov
adc
add
enter
sub
xor
mov
fisttpl
rcrl
sub
xor
ss
test
mov
mov
mov
loop
mov
rcl
roll
imul
adc
dec
js
rorl
in
or
ds
fildl
fdivr
push
jecxz
leave
pop
mov
sbb
arpl
daa
lods
push
sarl
add
pop
sbbl
paddusb
das
cmp
inc
mov
jmp
dec
gs
mov
cltd
loopne
fcom
adc
xor
or
or
or
sbb
jo
and
or
cmp
ds
sti
xor
mov
adc
sarb
xor
jbe
rol
leave
push
fnstenv
push
rcrl
jbe
imul
mov
daa
mov
adc
andl
test
pushf
cmp
fadds
lods
les
shr
push
pop
push
shrb
mov
fwait
mov
rcrb
sbb
pop
fstpt
out
orb
jecxz
jmp
cltd
aam
mov
push
adc
pop
dec
add
jnp
xchg
mov
and
jo
xor
or
daa
or
push
adc
sub
lods
fcom
sub
adc
ss
dec
loopne
push
push
push
and
movb
or
add
cmp
cmp
fmull
call
pop
inc
das
push
pop
mov
mov
or
pop
mov
dec
dec
ja
jno
fidivrs
aad
test
or
mov
and
cmp
int3
daa
loope
mov
xor
pop
pop
aam
dec
ljmp
sbb
cli
adc
mov
aad
jmp
jg
mov
or
jbe
mov
dec
push
xlat
adc
in
mov
in
aas
in
add
flds
mov
pop
inc
xor
popa
xlat
cmc
or
inc
lock
stos
jnp
mov
mov
mov
test
sub
test
cwtl
testl
push
jo
dec
inc
lods
sbb
push
in
pop
lahf
movsb
mov
mov
ljmp
imull
cld
sub
imul
shr
adc
popa
mov
pushf
movsb
out
jbe
ret
xchg
jle
jmp
or
xchg
adc
jnp
fildll
mov
sub
pop
xchg
adc
sbb
sbb
inc
andb
push
mov
hlt
aam
aad
mov
test
and
mov
test
popf
movsb
cmpsb
loopne
lahf
add
in
mov
cmpb
das
cli
pop
rorl
adc
or
test
jnp
mov
sub
jo
push
cmp
aaa
hlt
fwait
addr16
push
fs
adc
mov
dec
add
sub
dec
push
fmull
xchg
and
fsts
xchg
add
cmp
cs
std
aaa
loopne
scas
sarb
enter
dec
inc
push
and
pop
dec
ljmp
cs
imul
divl
rclb
mov
test
push
and
mov
lds
and
add
addb
pop
arpl
lds
in
adc
add
shlb
adc
xor
gs
fldenv
in
gs
mov
push
stos
lret
lods
cmove
inc
cmpsl
jno
fsts
scas
subb
or
adc
push
add
adc
or
mov
mov
mov
out
cld
cmpsb
and
aaa
pushl
movsb
dec
mov
inc
dec
ret
outsb
sbb
rclb
shlb
lods
pop
and
cmc
loopne
fwait
and
mov
jl
xor
arpl
adc
cmp
add
test
je
push
fsubrl
imul
mov
dec
xchg
fcoms
lea
popa
mov
add
into
adc
mov
sbb
sub
and
jmp
adcl
ja
icebp
push
test
insl
adc
xchg
test
pop
adc
and
push
sarl
inc
adc
aas
mov
scas
push
or
shll
push
sub
mov
pop
movsl
pushf
jecxz
cli
add
insl
fst
mov
push
cmp
mov
inc
rcl
inc
pop
cmc
mov
cmp
std
or
loop
ljmp
sbb
out
sbb
xchg
xor
cltd
jecxz
cmp
dec
push
loopne
aaa
test
inc
mov
jl
nop
push
pop
lods
xchg
and
xchg
mov
push
push
xor
aaa
cli
mov
adc
cwtl
jg
jmp
xor
jmp
hlt
test
mov
xor
xchg
lret
popf
pop
mov
push
add
lret
and
ffree
fadds
xchg
mov
icebp
js
and
xchg
fsubrs
data16
sub
mov
add
lods
adc
fwait
jmp
sub
imul
mov
jnp
ret
xchg
pop
dec
xchg
sbb
or
decl
mov
insl
mov
test
stos
sbb
dec
in
push
and
and
cmp
shr
leave
clc
orb
mov
add
xchg
fisttps
fisttpl
aaa
lret
xchg
dec
enter
ret
popa
cmpsb
rcrl
jmp
inc
or
xor
pop
insb
mov
aaa
jmp
dec
filds
add
mov
mov
sti
cwtl
add
jbe
sbbl
mov
jmp
mov
and
mov
xor
jp
movhps
lods
inc
outsb
xchg
ret
imul
je
rdmsr
pop
sbb
pop
add
or
mov
jae
loope
in
pop
and
idivb
das
imul
das
outsb
inc
sub
sbb
lods
movsl
jecxz
cmp
xor
jge
stc
inc
ret
push
fimuls
inc
lods
pop
cmp
daa
mov
jae
xchg
mov
lahf
push
push
inc
mov
scas
lret
es
enter
ret
ret
and
xchg
sbb
cwtl
nop
fucomi
inc
push
push
mov
mov
xchg
setbe
repz
stos
add
rcl
sub
lds
loop
ljmp
sbb
xchg
cmpsb
mov
out
testl
popw
pop
and
adc
adc
pushf
bound
dec
inc
addb
movsl
icebp
or
xchg
lds
or
mov
fwait
in
pop
jo
or
xchg
orl
scas
sbbb
mov
int
test
lods
das
fldl
mov
jo
and
leave
sbb
sub
mov
inc
xchg
popa
dec
inc
jecxz
dec
mov
lahf
mov
inc
cmp
dec
arpl
icebp
jbe
push
ret
sbb
mov
push
es
dec
xchg
xchg
loopne
test
jmp
xchg
fstpt
dec
add
mov
pushl
or
cld
ja
mov
inc
cmc
jle
mov
sbb
sub
pop
push
pop
xchg
dec
inc
hlt
add
or
scas
cmp
or
xchg
pop
sub
jne
mov
icebp
fstpt
mov
mov
cmp
cmp
mov
xor
testl
into
sub
and
xor
inc
sbb
packssdw
fsubrp
mov
mov
test
lcall
xchg
sbb
mov
ja
jge
mov
jl
jns
cmp
jmp
adc
rolb
loop
add
imul
andb
adc
lcall
dec
dec
inc
xorb
mov
in
inc
jns
loopne
pop
add
leave
dec
fwait
add
pusha
mov
and
faddl
mov
imull
adc
shll
pop
in
mov
mov
aaa
or
outsl
int
das
and
push
add
outsb
imul
addr16
sbb
pop
cmp
inc
and
rcrb
jae
fwait
pop
out
cmp
mov
movsb
mov
ljmp
add
js
cmp
mov
inc
inc
fdivrl
inc
add
add
xchg
std
js
cltd
cmp
mov
xchg
and
add
fdivrs
xchg
adc
into
add
jne
scas
shlb
mov
or
cmp
sbb
data16
xchg
daa
inc
mov
mov
pop
movsl
imul
js
dec
adc
dec
pop
enter
or
sbbb
imul
ret
pop
rol
repz
dec
adc
and
or
jle
stos
jmp
shl
mov
pop
das
mov
push
adcl
cltd
jno
add
jl
ret
test
add
repz
fwait
pop
xor
sub
movntps
lods
lcall
jl
and
test
mov
mov
cltd
and
mov
les
dec
pushf
pop
inc
jne
stos
mov
cwtl
imul
cli
push
popa
leave
and
ret
push
sub
add
hlt
pop
test
sahf
and
frndint
addl
aam
xor
or
cmp
xchg
add
lcall
xor
add
inc
loope
adcb
push
mov
mov
fidivs
and
sbb
mov
mov
sbb
aaa
adc
mov
scas
pusha
aad
sbb
and
sbb
sbb
inc
adc
mov
xchg
adc
xlat
mov
sub
push
xchg
add
inc
sbb
mov
iret
and
dec
orb
ds
psrld
jecxz
orb
dec
adc
inc
add
aam
add
mov
test
push
pop
ret
ret
sbb
inc
lret
adc
jb
mov
pop
add
and
xor
and
and
or
fadd
out
mov
ljmp
loopne
loopne
mov
or
xchg
dec
repz
xlat
add
js
sahf
push
push
cmpsb
push
je
rclb
shrb
je
mov
dec
xchg
push
cmpsb
aad
and
divl
orb
cmp
add
outsl
jl
fsubrl
pop
cmovbe
pusha
push
into
mov
fldenv
inc
push
ret
scas
mov
mov
jp
jecxz
xorb
sub
mov
sbb
adc
xlat
sub
sbb
addr16
or
dec
jl
or
adc
ss
xlat
sub
push
and
or
add
add
add
xor
and
sbb
das
sub
js
subl
aas
mov
add
pop
jle
lds
pop
pop
leave
popa
push
hlt
ret
mov
ss
fs
dec
mov
mov
push
lods
sbb
notl
cs
sbb
mov
pusha
loopne
or
daa
cmp
jmp
dec
ss
rclb
jo
fldt
mov
mov
sub
xchg
dec
scas
sbb
xor
add
jecxz
dec
popf
pusha
pop
adc
adc
stos
mov
or
mov
mov
popf
adc
es
shrl
stos
and
dec
fsubs
mov
pop
sub
cmpsl
adc
pop
add
and
dec
pop
pop
and
pop
mov
mov
sbb
and
movb
fs
popa
add
cmp
pop
sub
rcrb
lea
sahf
xor
mov
push
cmp
or
lods
in
mov
push
mov
dec
je
aad
jnp
jbe
mov
push
mov
in
mov
jecxz
push
add
sub
mov
push
iret
cmpsb
pushf
adc
dec
scas
add
test
aam
stos
sbb
pop
sbb
mov
inc
testl
inc
add
fwait
pop
stos
and
faddp
or
jno
sub
rcr
es
std
test
sbb
xchg
aaa
in
xor
mov
push
pop
cmpsl
jns
stc
cmc
or
push
dec
test
fstpl
and
push
outsb
push
pop
push
or
jp
dec
cmp
add
mov
loopne
push
out
inc
rclb
add
sub
pop
mov
popa
shr
dec
fistpl
fdivp
push
loop
mov
scas
lods
out
ficomps
popf
mov
lret
add
adc
imul
lock
xchg
iret
test
aas
xchg
iret
xor
xor
jne
in
push
hlt
popf
jb
jo
ds
or
pop
sbb
push
fstl
add
faddl
fistpl
mov
push
xchg
or
or
dec
add
jle
xchg
ret
mov
or
xchg
dec
pop
dec
outsb
test
outsl
sbb
adc
divl
cmpsb
mov
fsincos
lcall
and
mov
mov
lahf
sbb
sbb
xchg
push
outsl
repz
lods
test
sbb
sbb
subb
test
loop
test
adc
repz
loope
mov
lods
test
add
push
adc
arpl
and
jo
adcl
jle
add
ss
and
cmp
mov
or
push
push
outsl
dec
inc
sbb
xor
jecxz
dec
shld
lods
gs
and
ja
and
lret
shll
pusha
shrb
pop
test
popa
insl
sbb
pop
push
sbb
xor
inc
mov
jbe
hlt
outsb
add
push
fisttpll
inc
test
lret
imul
ficoms
data16
and
into
in
jb
jle
mov
daa
pushf
or
dec
push
mov
pop
adc
inc
mov
jmp
xchg
add
out
inc
inc
cmpsb
add
sbb
xchg
and
jge
mov
and
fistpl
mov
push
lock
push
sub
int3
orb
cmp
inc
dec
fnsave
les
jle
fcoms
call
jae
nop
xor
aaa
cmp
mov
sti
orl
stos
imul
shrl
add
insl
bound
add
mov
shll
ret
push
int
push
popa
imul
push
or
test
insb
mov
shlb
mov
xor
pop
fisubrl
mov
sti
push
popf
addb
push
sbb
int
jb
cmp
lcall
popf
shlb
out
mov
dec
add
mov
mov
popa
mov
call
mov
mov
adc
push
ljmp
pop
mov
pop
popf
jae
xchg
mov
mov
fcomps
adc
xchg
test
jb
jae
and
lea
iret
and
pop
dec
cmp
mov
icebp
mov
rclb
and
inc
sbb
xchg
or
jmp
loop
xlat
jne
xor
push
fistps
out
outsb
and
sub
mov
xchg
xchg
mov
lahf
cmp
out
sub
jmp
rolb
or
cmpsb
ffree
inc
insb
pop
jp
fiadds
fbstp
mov
repnz
lahf
cmc
sub
fs
cmc
adc
imul
decb
test
loop
and
test
sub
mov
lea
shlb
pusha
inc
popa
mov
and
dec
cltd
leave
mov
daa
shl
add
adc
imul
aas
sbbl
rcl
xor
les
aaa
pop
adc
xchg
fcoml
cld
popf
jp
rcrb
or
sbb
rcll
add
push
lahf
add
jecxz
xor
xchg
sbb
pop
add
push
adc
jmp
fsubrl
sub
mov
jnp
cs
pop
pop
xor
mov
aad
lods
adc
insb
pop
fs
mov
inc
ror
or
adc
gs
lods
popf
nop
leave
jmp
inc
test
mov
adc
fisttpll
jge
mov
das
sbb
nop
addb
aaa
or
dec
lea
inc
daa
dec
loope
inc
test
mov
pop
mov
imul
aas
xchg
subl
jb
loope
into
lock
jae
cmp
mov
lods
jno
sbb
movsl
push
ljmp
pop
sub
mov
sbb
lods
push
pop
popf
stc
mov
add
push
sbb
pop
int
adc
adc
movl
addl
jecxz
aam
mov
shlb
popa
sub
mov
repz
add
ret
dec
popf
data16
loopne
loop
push
stos
and
and
arpl
pop
outsb
lcall
inc
rcl
rorl
mov
cmc
test
inc
add
and
js
mov
adc
jno
xchg
adc
pop
imul
xor
sub
sub
push
popa
add
inc
subb
mov
out
mov
pop
push
cmp
sub
or
loopne
push
inc
pop
add
or
outsb
mov
std
or
sub
cmp
xor
mov
add
out
xor
adc
leave
sub
add
cmpsb
test
jno
mov
jecxz
fnsave
out
or
shrb
push
test
pop
and
loope
aaa
mov
ds
jecxz
pop
xor
add
dec
fcmovnb
popa
and
xchg
rol
cmp
xor
cmpl
test
mov
out
pop
ja
xchg
or
mov
hlt
rcll
xor
or
pop
subl
les
pusha
pop
inc
popa
xorb
mov
mov
pop
xor
sub
fwait
inc
dec
gs
jno,pn
lods
inc
rcrb
in
jmp
dec
sub
jge
jo
mov
aam
lret
call
mull
push
mov
pop
add
adc
cmp
adc
es
insb
adc
fstpt
test
idivb
test
shlb
adc
add
sbb
int3
cli
push
stos
or
cltd
movsl
push
adc
dec
and
gs
push
pop
push
push
add
ret
pop
fwait
jmp
add
and
fidivrl
rcrl
lods
add
and
pop
adc
push
add
arpl
jae
and
popa
fistpl
and
das
cmpsl
pushf
jl
sbb
mov
das
xor
nopl
add
sub
loopne
stos
fstps
movsl
leave
pop
add
dec
stos
push
in
xchg
xchg
mov
fisubs
popa
xchg
push
add
fwait
popf
mov
pop
and
lock
loopne
mov
mov
fisttpll
add
int3
je
sbb
add
mov
andb
xor
inc
outsb
cmp
popf
loop
ds
pop
and
inc
dec
jmp
aas
lock
cmpsl
add
mov
gs
adcl
jmp
pop
mov
or
mov
mov
cmc
aam
lock
clc
outsl
movsl
cmp
pop
outsl
adc
leave
mov
addr16
addb
adc
popf
jno
and
jbe
mov
pop
movsb
rcl
iret
dec
test
sbb
sahf
push
sbb
jmp
fsts
call
push
push
outsl
and
fistpl
movsb
shll
push
xlat
dec
je
je
popf
aaa
inc
xchg
or
and
inc
ret
insl
arpl
xchg
movsb
stos
inc
xchg
xchg
jne
dec
movsb
cli
iret
or
sbb
sbb
sbb
dec
and
xchg
mov
sbb
xchg
mov
inc
and
clc
ret
pushf
orb
jp
or
add
lock
xor
lods
sbb
adc
and
dec
addb
cmp
sub
addl
push
jecxz
imul
xchg
aam
dec
xor
in
into
or
adc
mov
mov
hlt
mov
sti
and
or
in
arpl
jo
jecxz
inc
pop
push
xor
pop
and
inc
mov
dec
lds
jae
add
imul
into
pop
addr16
sub
push
pop
stos
adc
xor
and
jecxz
lock
clc
sbb
into
aas
lods
xor
lock
push
jne
inc
inc
jecxz
pop
sub
push
pop
fcoms
stc
sub
jns
sub
fnsave
inc
jb
adc
mov
andl
mov
inc
sbb
mov
pusha
sbb
incl
dec
jge
push
or
rcrl
and
dec
add
or
mov
std
sub
lahf
stc
sub
test
xor
xchg
mov
test
or
xchg
xchg
rorl
pusha
sbb
push
dec
mov
je
add
dec
or
xor
sub
and
push
lahf
insb
sub
fldcw
mov
inc
push
jle
frstors
add
or
cmpl
sub
mov
dec
shrb
test
inc
scas
push
aaa
clc
or
addl
loopne
mov
adc
sub
add
icebp
clc
adc
enter
or
lock
dec
xchg
test
lea
insb
rolb
cmp
push
and
sub
jnp
cmp
lcall
adc
add
mov
cmc
add
pop
sub
cmp
push
sub
or
dec
mov
out
push
sub
jnp
lret
popa
and
jbe
and
int3
pop
neg
daa
dec
mov
push
push
cmp
stc
mov
enter
lds
add
cltd
lods
push
xor
dec
arpl
dec
fidivl
in
sarb
lret
sbb
daa
mov
je
cltd
daa
js
add
imul
mov
add
das
dec
pusha
mov
mov
fst
mov
es
mov
pop
insl
aas
dec
or
cmpsb
inc
arpl
icebp
rcrl
adc
add
xor
fucomi
inc
sub
mov
adc
mov
ret
fmull
addl
loope
cmp
shll
xor
fldenv
daa
sbb
aad
dec
flds
and
daa
mov
xorb
cmpsb
popa
cld
add
lret
or
mov
push
sbb
mov
mov
mov
mov
mov
xor
mov
xor
add
fucom
adc
shl
cmpsb
pop
imul
scas
or
inc
lods
call
lods
ficoms
or
sti
icebp
stos
push
mov
sub
aaa
test
inc
pop
xchg
sbb
test
inc
inc
mov
aad
adc
fcomi
mov
sti
jge
push
and
pop
add
aad
test
inc
jl
lock
in
mov
loopne
mov
xchg
or
pop
push
test
aam
fistps
adc
mov
andb
or
inc
lods
cmpl
aaa
pop
pusha
cmp
mov
and
jo
lret
movsb
test
inc
sbb
or
rorl
jne
add
inc
data16
push
mov
mov
out
dec
sbb
or
sub
mov
adc
lock
mov
in
mov
mov
sbb
test
sbb
push
push
cmpsl
insl
mov
adc
xor
js
mov
fnstsw
mov
adc
inc
add
icebp
das
add
or
in
repz
vmread
push
sarl
lock
cltd
xchg
pop
pop
les
dec
lods
dec
stos
das
inc
jnp
pop
daa
mov
add
mov
test
aaa
add
xchg
sub
mov
les
or
inc
dec
test
mov
xorb
mov
sub
xchg
out
test
push
mov
adc
mov
loope
push
lock
inc
mov
ret
test
les
mov
mov
sbb
push
jmp
mov
popf
rcrl
mov
push
jmp
adc
das
or
sbb
stos
xchg
hlt
cmp
and
or
jl
nopl
add
popa
xlat
and
cli
jmp
adc
mov
out
sbb
sub
fcompl
out
mov
or
push
xor
addl
cld
mov
lea
mov
loop
pusha
ret
das
sbb
sarb
jne
cwtl
sbbb
jge
inc
sub
add
cmp
jae
push
cmp
xchg
mov
push
inc
dec
adc
mov
aaa
les
cmc
roll
and
test
movd
inc
add
mov
sub
sub
mov
orl
or
das
mov
lea
stos
pop
in
lods
inc
insb
adc
mov
dec
mov
mov
xchg
movsb
pop
mov
das
scas
in
sub
push
pop
rep
mov
ja
js
pop
fistpll
jl
inc
data16
mov
inc
scas
into
imul
hlt
jno
es
mov
cmp
div
push
sub
add
cli
inc
ret
sub
dec
cmpsl
pop
out
rorb
xor
sbb
movsb
push
add
orl
es
push
out
loope
gs
xor
pop
test
test
jge
ret
into
xor
xchg
jmp
xor
xor
push
add
jmp
sub
fistpl
fwait
daa
mov
mov
sbb
popa
popf
roll
inc
xlat
ret
sub
dec
sti
aam
decl
sub
add
out
insb
add
sarl
adc
test
fisttpll
jmp
add
adc
jne
out
outsl
out
xchg
and
repz
adc
inc
lods
jno
lods
sbb
or
add
pop
pop
pop
lods
out
pusha
sbbb
or
inc
push
mov
inc
xchg
ucomiss
jae
arpl
lahf
cmp
fdivs
add
arpl
sbb
fnsave
sbb
iret
sub
insl
ret
cmpb
js
and
rorb
pop
ret
xor
pop
filds
xchg
adcl
mov
inc
ljmp
adcb
cmp
cmpsl
mov
dec
cwtl
pop
dec
ljmp
pop
sub
aad
out
inc
cmp
mov
dec
mov
pop
pop
pushf
fsubs
mov
idivl
xor
pop
xor
sbbb
push
xchg
aaa
movsl
int
cmp
lahf
pusha
mov
jnp
inc
pop
sbb
shl
jo
stos
add
inc
jp
mov
vmovaps
fisubs
js
clc
idivb
jo
mov
mov
arpl
cmc
ja
pushf
dec
andl
cmc
xor
add
or
dec
aam
ja
sbb
push
pop
dec
adc
xchg
daa
cmpsl
adc
mov
pop
js
inc
fcompl
mulb
cmp
sub
inc
aaa
dec
dec
mov
inc
lea
cmp
xor
push
pop
jb
test
mov
loope
jnp
add
xchg
jae
jmp
in
in
push
xor
ja
mov
add
dec
dec
movsl
mov
add
addl
ja
adc
in
movups
add
adc
scas
shl
dec
xchg
jmp
mov
pop
lods
xchg
lcall
adc
inc
clc
test
or
mov
stc
sbb
lea
shr
add
pop
push
xchg
dec
pop
mov
mov
mov
lock
adc
adc
outsl
iret
pop
cmp
inc
push
sbb
inc
dec
mov
adc
jns,pn
js
add
mov
dec
mov
and
loope
adc
sbb
ret
daa
loope
push
xchg
or
xchg
cwtl
push
loope
adc
out
ret
jbe
test
sub
push
jmp
mov
inc
pop
arpl
xorb
jne
cmpsl
subb
jecxz
dec
roll
shlb
insl
les
xor
push
rorl
clc
mov
insl
push
xor
test
test
scas
loope
mov
jge
dec
lds
jmp
pop
sub
hlt
imul
dec
dec
pop
call
pop
ret
xchg
jl
and
add
shll
dec
cmc
xlat
push
inc
xchg
jo
adcb
mov
push
inc
popa
and
adc
cmc
add
pop
mov
and
jns
pusha
mov
jmp
fs
pop
fwait
stos
and
adc
xor
inc
outsb
cmp
push
das
clc
mov
test
and
sub
bound
fwait
and
int
arpl
or
lcall
add
or
mov
xchg
popl
shl
mov
call
xchg
inc
shlb
mov
je
cmp
cmp
popa
cmp
in
mov
or
and
sahf
push
pop
mov
sqrtps
sub
pop
mov
cmp
loop
xlat
xchg
fldcw
xchg
enter
sbb
add
jne
mov
test
sbb
or
mov
je
enter
fcoml
sub
sbbl
or
xor
push
aad
mov
data16
push
fdivs
aaa
das
add
ficomps
ja
adc
and
jno
mov
cmpb
mov
or
jne
dec
insl
popa
int
adc
aaa
lret
cmpsl
mov
dec
dec
jle
inc
push
add
ret
test
xor
jge
dec
sub
add
push
pop
dec
movsb
and
jnp
sub
xchg
add
sbb
dec
sub
rcll
daa
jae
fadd
mulb
fists
gs
cmpsl
mov
sbb
jle
push
pop
shrb
mov
shll
js
xchg
push
or
sarl
aam
adc
and
aam
insl
loope
loope
push
mov
shlb
xchg
mov
aas
out
xor
dec
hlt
mov
negl
or
ret
test
inc
imul
add
dec
test
push
xchg
iret
addl
ljmp
xlat
sti
jecxz
add
shll
jbe
push
scas
rolb
lcall
or
or
mov
cltd
jecxz
mov
xor
rcll
jae
rolb
sub
and
insb
push
es
xor
sub
scas
rcrl
mov
movsb
sub
or
hlt
ljmp
jbe
adc
jo
insl
imul
test
mov
jno
loope,pt
in
popa
bound
or
inc
sub
pop
loopne
xchg
inc
lds
push
xor
popf
imul
dec
adc
insb
dec
cmp
dec
pop
out
sub
fdivs
movswl
mov
mov
xchg
in
push
xchg
push
imul
insl
xchg
sub
pop
imul
imul
negl
ret
lds
das
test
stos
nop
or
dec
pop
loope
mov
push
add
mov
dec
add
sub
mov
inc
imul
or
movsb
inc
cltd
jmp
xchg
xor
les
xchg
dec
pop
xor
dec
adc
mov
sbb
popf
add
add
orl
pop
xor
push
or
popa
sub
shll
push
loope
jmp
xchg
sahf
mov
out
test
sti
test
shrb
jno
stos
push
sub
cmpl
sbb
jo
popf
adc
sbb
xor
jo
push
cmovs
add
and
cmp
inc
adc
movsb
jl
call
add
cmp
jae
loop
sub
lods
in
outsb
inc
and
mov
inc
icebp
cmp
xchg
mov
mov
in
sbb
lahf
xchg
movsl
mov
hlt
push
xor
popf
dec
stc
and
jnp
jge
ret
pop
insl
and
out
rcrb
push
sub
rclb
push
aam
lods
subl
movsl
add
xor
xchg
dec
lret
cmp
inc
lahf
xor
outsl
leave
pop
popa
xorl
xchg
push
js
lock
rorb
mov
scas
out
xchg
sub
les
loop
dec
shll
pop
gs
add
ja
sub
add
mov
jecxz
mov
add
lret
pop
and
jo
sub
jecxz
xchg
sub
mov
out
push
sbb
lods
mov
cltd
ret
adc
adc
add
cs
popa
loope
outsl
insb
hlt
aam
es
ret
cmc
adc
xchg
nop
es
mov
lds
cwtl
dec
pop
pushf
addr16
jle
loop
dec
or
mov
adc
pop
jmp
xchg
fwait
pop
imul
sbb
faddl
jmp
add
sub
sub
add
mov
add
dec
iret
inc
add
lods
loop
lods
add
insb
or
pop
adcl
xor
movsb
rcl
cs
fidivrl
decl
test
pop
jmp
arpl
push
test
rolb
popa
inc
push
xor
cs
mov
mov
dec
cmpsl
loope
test
pop
fldt
lret
pushl
push
hlt
and
es
fwait
jns
test
lods
pusha
xor
fcoms
lahf
outsb
shll
xor
jno
movsb
rclb
adc
enter
aad
and
sub
cmp
sub
xor
and
jle
cmp
daa
add
movsl
shl
in
repnz
mov
inc
dec
xchg
mov
adcl
test
mov
dec
and
int
sub
pop
cmpsl
lods
dec
pop
mov
jb
xor
sbbl
push
std
xchg
lcall
arpl
inc
jp
cmp
xchg
mov
sbb
or
push
cmpsl
das
mov
aad
je
aad
push
pop
jle
js
adc
orb
mov
mov
pop
mov
mov
subl
pop
inc
xor
xchg
out
sti
add
push
loope
movsl
pop
xchg
add
movsl
dec
add
lea
cmp
cmpl
rorb
jns
and
adc
stos
jl
inc
jo
xchg
cltd
jmp
push
mov
xchg
fwait
dec
add
dec
pop
ret
sbb
push
or
lcall
jnp
addb
fiadds
xchg
cmp
lahf
pop
ret
or
push
or
mov
and
adc
out
dec
or
add
imul
jne
mov
aad
mov
inc
sub
inc
dec
or
pop
pop
sbb
scas
test
jno
xor
push
fsubr
sbb
mov
cmp
fs
imul
ja
out
jle
jl
lea
push
inc
mov
mov
inc
test
add
xchg
xor
cmp
ss
shll
movsl
inc
outsb
test
sbb
mov
orb
push
sti
icebp
aad
push
test
pusha
xor
fwait
stos
and
es
mov
xchg
imul
mov
dec
xchg
ret
inc
jle
jp
mov
cli
lock
cmpl
mov
mov
lods
adc
fwait
inc
popl
pop
ret
or
sub
push
adc
push
out
repnz
mov
das
xchg
aam
lret
jp
sti
inc
rolb
daa
adc
cmpsb
inc
lret
inc
push
inc
sub
lods
pop
out
add
ret
icebp
sub
pop
insl
ljmp
lods
xchg
cmp
or
add
stos
mov
jb
aad
jne
mov
nop
jb
ret
test
and
adc
fcmovb
loopne
lods
shlb
mov
mov
inc
adc
js
hlt
aas
jecxz
jbe
lcall
push
andl
jmp
mov
js
pop
lds
int3
std
xor
inc
cmp
sbb
push
dec
sbb
adc
adc
add
jecxz
insl
xchg
in
gs
xchg
popa
popa
icebp
and
mov
or
mov
jmp
cmp
sahf
insb
add
scas
mov
pop
xchg
adc
and
push
loope
and
sbb
jne
lcall
add
pop
and
adc
push
out
mov
out
xchg
pop
xor
or
ret
movsl
test
cmpsb
add
add
sub
push
mov
mov
or
and
mov
add
push
les
jmp
pop
and
ret
inc
test
adc
popl
mov
nop
sbb
ret
sub
mov
mov
sti
dec
push
int
sub
lods
ds
mov
or
mov
lret
mov
and
ss
lods
xchg
test
and
sbb
mov
jne,pn
cld
ds
dec
lock
push
jl
test
das
mov
lds
mov
jl
sbb
jl
add
xchg
mov
cmpsl
or
lret
movsb
sbb
adc
or
adcb
pusha
mov
adc
dec
call
jmp
into
aam
xor
or
arpl
shlb
outsb
or
mov
jae
imul
pop
mov
dec
mov
aad
jl
sarl
or
or
cli
dec
dec
das
in
jae
lods
adc
push
xchg
test
cmp
mov
insb
adc
or
mov
int3
or
stos
shlb
es
dec
sarl
and
pop
xadd
xchg
int
pop
dec
jl
mov
popa
push
pop
pop
nop
movsb
xchg
shrb
fsubs
pop
sbb
jne
dec
inc
cmpsb
jno
roll
lea
xor
xor
push
es
sbb
icebp
lcall
push
pop
push
fists
lods
xor
pop
daa
push
lret
sbb
cmp
scas
dec
rolb
jbe
and
lcall
mov
and
dec
mov
or
shlb
jno
lock
es
scas
cmp
xchg
jno
inc
fstl
jl
sub
es
add
sbb
scas
lods
push
out
xadd
xor
leave
xor
rcll
cmpsl
rcr
or
je
mov
mov
push
ds
fdivs
stc
test
jmp
and
aad
sbb
pop
or
addl
pop
stos
aad
loopne
mov
cmp
idiv
mov
adc
int
hlt
or
subl
flds
les
push
adc
mov
sub
mov
bound
or
sbb
dec
sub
scas
dec
imul
mov
or
es
push
repnz
mov
dec
andl
push
xlat
mov
jnp
push
sti
mov
mov
mov
push
pop
gs
arpl
jecxz
movsb
and
or
ss
add
fldl
sti
jge
xchg
jge
das
rolb
sub
ret
jecxz
fdivr
and
pop
mov
lret
icebp
cmpsl
sub
xor
pop
pop
aaa
sub
jecxz
xchg
mov
adc
xor
aad
add
mov
mov
pop
inc
xor
jg
outsb
aam
mov
push
or
orl
rolb
inc
push
inc
sub
inc
test
dec
icebp
loop
shl
cltd
ret
sbb
aam
mov
mov
cmpsb
test
xlat
mov
or
xchg
out
push
decl
mov
aaa
jmp
fdivrl
and
mov
add
push
lahf
cmp
hlt
inc
out
daa
nop
mov
inc
mov
and
add
jo
pop
arpl
xchg
push
das
or
pop
insl
ret
test
loop
fcoms
jecxz
push
addr16
enter
and
pop
add
cmpsl
mov
popa
cltd
add
test
js
pushf
dec
cmpsb
add
dec
add
mov
add
into
jp
mov
xlat
inc
and
add
sub
adc
lahf
add
sub
mov
and
mov
out
mov
repz
ret
sub
and
arpl
xchg
mov
aam
or
xlat
mov
nop
and
sbb
add
cwtl
inc
fisttpll
lret
pop
add
jge
inc
add
faddl
xor
mov
dec
rcrl
pop
fistpl
sahf
inc
jge
mov
les
jb
xchg
outsl
mov
xchg
and
adc
mov
or
mul
pop
and
inc
cmpsb
imul
iret
adcb
jmp
xorl
push
pusha
mov
jae
pop
xchg
add
add
jne
sub
cmpsb
and
sti
dec
iret
and
xor
call
sbb
fwait
daa
mov
hlt
and
and
adc
stos
movsb
xlat
movsb
mov
jl
and
les
in
mov
push
mov
imul
mov
adc
dec
and
sub
sub
ret
dec
ret
adc
adc
xchg
jmp
test
cmp
testb
sbb
xchg
and
sbb
add
nop
pusha
repz
fwait
ret
popf
or
test
add
jecxz
movsb
inc
in
cmp
inc
mov
mov
leave
mov
out
cmp
lret
cmp
push
leave
rolb
push
test
jnp
jns
adc
sbb
sub
and
nop
push
and
lds
mov
ja
and
sbb
dec
test
insl
adc
imul
loope
ja
dec
fists
inc
pop
dec
aaa
or
jo
in
mov
and
mov
xchg
decb
mov
loop
inc
mov
and
add
imul
les
mov
adc
test
or
mov
sbb
imul
insl
xchg
aaa
mov
xchg
mov
xchg
and
sbb
adc
mov
inc
jle
mov
jecxz
in
orl
adc
pop
ret
mov
mov
jmp
sub
dec
and
fstpl
insb
pop
shll
jo
dec
jo
into
inc
rorb
dec
push
adc
nop
push
mov
push
cmp
filds
pusha
mov
sub
push
daa
lods
and
adc
mov
and
sub
rclb
adc
imul
mov
repz
sbb
loope
fdivr
push
sub
push
jbe
add
cmp
dec
loopne
xchg
cltd
pop
mov
mov
enter
mov
jg
sbb
sti
cmovne
mov
cmp
pop
insl
arpl
push
pop
jmp
add
xlat
add
jp
cmp
adc
cltd
jmp
ret
sub
jne
sub
adc
lods
ljmp
sbb
add
sub
stos
jno
push
cmpsl
cmp
jae
adc
movsl
xchg
dec
and
cmpsl
or
mov
adc
test
fldl
jg
push
pop
adc
mov
pop
imul
xor
mov
or
xor
mov
mov
dec
dec
sbb
rclb
xorl
inc
cmp
dec
arpl
lods
xchg
mov
sub
add
xchg
xor
pop
das
mov
arpl
lea
push
dec
lahf
cltd
jecxz
pop
mov
sbb
inc
jg
push
cmp
loopne
pop
pop
call
sub
test
sbbb
out
mov
ret
loop
loope
lods
xor
insb
and
and
popa
jecxz
sbb
fiaddl
pushl
cmpl
xor
push
cmp
jmp
and
mov
sbb
cwtl
jl
xchg
add
mov
jmp
fsubrl
sbb
cmpsb
inc
dec
xchg
jecxz
arpl
loope
iret
jg
mov
sbb
push
je
lods
xchg
adc
bound
test
pop
ret
orl
je
cwtl
adc
jmp
push
dec
andb
das
lods
mov
pop
and
aam
push
rcrb
push
inc
daa
dec
push
div
mov
mov
in
icebp
inc
leave
daa
pop
pop
jo
imul
pop
and
loop
inc
iret
mov
and
inc
int
inc
and
rorb
nop
les
test
bound
aam
push
ficoms
shlb
sbb
das
rorb
or
outsl
gs
inc
inc
xor
cmc
inc
cmp
mov
or
mov
add
sub
xor
mov
popa
inc
mov
and
push
jg
rclb
cs
lods
sub
loope
xor
pop
decl
push
imul
or
mov
jmp
and
jecxz
and
mov
add
cmpsl
sbb
mov
jl
mov
push
xor
mov
emms
xorb
mov
fdivs
sbb
add
cs
inc
and
pop
and
rorb
ja
mov
or
mov
std
data16
ja
or
lret
fiaddl
imull
inc
jbe
movsb
sub
or
sbb
xchg
pusha
inc
mov
push
sbb
jbe
mov
lods
push
xor
aam
fs
js
mov
dec
arpl
dec
stos
xor
sbb
fcmovbe
pop
cmpsl
mov
shl
mov
push
div
mov
add
or
movsb
mov
dec
adc
ror
and
mov
sub
mov
dec
adc
mov
js
in
pop
nop
pop
push
add
out
sub
sbb
push
mov
jne
pop
in
or
and
and
rolb
mov
cmp
loopne
jecxz
sti
inc
cld
aas
sbb
push
sbb
jnp
sub
dec
add
push
or
and
or
cmpsl
cmc
aam
pop
mov
mov
xchg
mov
daa
orl
mov
cmp
jp
sub
sub
bound
insl
lahf
sub
jmp
mov
cmp
and
imul
push
adc
inc
ret
fisttpl
or
sub
dec
adc
dec
add
inc
jle
add
mov
sbb
es
addl
xchg
subb
and
inc
loopne
and
inc
movsl
lods
pop
and
movzwl
pusha
rdpmc
and
xor
mov
andb
sbb
jno
pop
sub
lahf
or
push
adc
outsl
mov
jns
xor
mov
mov
sub
daa
mov
and
fcompl
dec
out
lods
aas
js
popa
inc
inc
mov
nop
lret
pop
xlat
sub
mov
dec
cmp
imul
int
ss
inc
xor
push
data16
daa
rcll
pusha
das
and
loopne
sbb
fldenv
insb
push
and
sub
cltd
inc
mov
shrb
movb
adc
imul
js
in
xchg
xor
movsl
cmp
inc
into
and
xor
mov
adc
insl
iret
aam
movsl
mov
mov
pop
roll
ljmp
push
js
cmp
pop
insl
push
or
imul
dec
fwait
andb
add
adc
dec
or
mov
pop
and
imul
push
adc
cmp
ror
ljmp
test
int
test
push
lods
rolb
cmpl
inc
dec
jl
lret
mov
movb
xor
movsl
mov
imul
inc
adc
aam
xchg
scas
add
daa
lods
xor
cmp
mov
pop
and
adc
adc
push
mov
mov
pushf
movsl
pop
and
outsb
xchg
cmp
xor
fs
subb
repz
dec
loope
or
push
mov
or
or
jp
mov
inc
add
das
pop
xchg
xor
jl
scas
imul
sbb
inc
daa
mov
jmp
aad
cmp
test
sub
adc
aad
das
in
push
xorl
add
and
jne
mov
cmp
pop
dec
test
lea
inc
out
push
rcrl
add
shlb
movsb
mov
das
inc
mov
inc
add
dec
pushf
and
scas
cmp
push
mov
mov
xchg
inc
push
pop
mov
push
sbb
popa
adc
pusha
mov
lods
xor
inc
mull
add
pop
popa
sbb
mov
sub
pop
imul
xlat
add
inc
push
loope
and
sbb
and
addr16
pop
add
dec
add
xchg
mov
cmp
or
adc
pusha
adcl
dec
adc
outsb
xchg
xchg
fisubl
cmpsl
es
out
add
pop
shl
or
sub
mov
ret
adc
orb
or
adc
rorb
or
push
cwtl
cltd
xlat
dec
jne
adc
add
push
push
adc
scas
nop
pop
in
or
fwait
jmp
ret
xchg
sub
nop
ret
push
call
iret
pushf
inc
add
add
jle
dec
add
test
pop
mov
sar
lods
das
push
push
add
or
or
clc
js
icebp
mov
add
dec
mov
push
nop
xor
scas
and
mov
sub
pop
push
adc
adc
sbb
mov
ja
mov
pop
ds
je
into
loop
dec
dec
lods
xchg
out
pop
sub
cmc
cmc
xor
sub
mov
inc
mov
popa
mov
jl
adc
pop
xor
mov
inc
and
jnp
pop
sbb
js
inc
mov
arpl
push
pop
lea
cs
mov
add
sub
push
mov
je
pop
mov
or
and
sub
mov
in
push
aad
mov
and
sahf
fmulp
sbb
movb
mov
sub
push
in
cmc
fs
test
add
inc
push
xchg
jl
popa
and
add
add
mov
jmp
push
jl
add
stos
mov
ret
lret
mov
adc
jecxz
pop
loope
and
gs
or
xor
and
call
cmp
test
ret
xor
rolb
pop
cltd
add
popa
imul
add
pop
add
push
xor
outsb
pop
pop
push
jge
xor
cltd
add
data16
sub
inc
jns
enter
popa
cmp
pop
or
scas
add
sub
pop
lret
and
stos
mull
dec
ret
or
test
cmpsb
jne
in
addl
sarb
enter
lods
mov
stos
repz
into
xor
jge
jl
mov
jle
sbbb
mov
out
sbb
dec
push
push
pusha
lock
cld
sbb
adc
push
pop
int3
or
insl
xchg
cmp
sub
jb
arpl
call
mov
jbe
and
in
add
hlt
popa
add
mov
ret
add
xchg
xor
lret
les
inc
divl
shlb
out
xchg
pop
gs
subl
mov
test
loope
cs
sbb
adc
scas
xchg
es
mov
movsb
mov
sbb
pusha
aam
mov
xlat
xchg
adc
dec
andb
pop
or
add
and
adc
loop
and
inc
and
xchg
adc
test
inc
xor
repz
mov
xchg
adc
push
enter
int3
rcll
jno
jle
and
out
mov
cmp
or
jg
sbb
shlb
dec
push
bound
mov
ret
fbld
je
adc
rolb
jo
xor
add
rsqrtps
nop
xchg
in
test
sbbb
inc
sbb
adc
call
jge
cmp
jbe
jnp
add
inc
enter
insl
push
xorl
adc
mov
mov
push
sub
movsl
and
adc
cmc
xchg
inc
test
and
pop
xchg
add
and
fistpl
pop
push
lret
imul
sbb
dec
sbb
dec
popa
xchg
add
pop
lods
cmp
or
or
sbb
and
cmp
negl
and
mov
dec
and
push
dec
shll
ret
rclb
fnstcw
test
adc
adc
fmuls
test
and
push
dec
inc
xor
mov
imul
or
mov
lea
xchg
adc
pop
mov
jae
mov
pop
adc
push
divps
mov
aam
iret
movups
enter
jnp
pop
ret
mov
or
mov
mov
loope
and
pop
mov
push
pop
ret
jne
jno
push
push
mov
addr16
or
cmp
stos
sub
adc
out
jmp
xchg
movsl
nop
cltd
ss
xor
adc
mov
xchg
test
mov
ja
mov
test
xchg
pop
sub
popa
xor
dec
pusha
std
arpl
dec
dec
popa
mov
mov
mov
push
das
aaa
rcrl
fildl
mov
add
out
xchg
add
dec
inc
jns
push
add
dec
mov
repz
adc
push
jl
mov
jnp
shl
sub
scas
jbe
push
mov
adc
adc
push
sub
out
cs
pop
roll
js
inc
sub
add
push
sti
jae
adc
ret
adc
loop
nop
ret
xchg
xchg
lds
and
movsb
sahf
sbb
sbb
jbe
movsb
dec
jl
adc
fbld
push
lock
inc
and
dec
std
xor
or
movsb
add
fldcw
push
and
andl
sbb
mov
movlps
xchg
mov
push
mov
pop
enter
inc
call
dec
enter
xchg
add
adc
inc
xchg
or
lods
stos
adc
and
aaa
iret
scas
loopne
add
aad
ss
imul
xchg
mov
xadd
or
mov
xchg
je
adc
jb
jno
jg
sub
dec
push
dec
subb
mov
add
idivb
jnp
xchg
orb
mov
lret
fmull
loope
ret
les
outsb
movsl
inc
cmp
xchg
push
cmp
cwtl
roll
xor
and
mov
imul
xor
add
roll
xor
repz
xor
ss
xor
lock
jns
pop
popa
ret
arpl
sar
dec
shl
andl
adcb
scas
sbb
stos
push
mov
jns
ds
in
mov
push
lods
orl
fadds
popa
sarb
sub
xor
fwait
insl
cmpb
test
push
dec
sbb
dec
fs
lods
aad
xchg
pushl
shr
loope
imul
enter
push
mov
and
sahf
mov
loopne
mov
push
out
sbb
in
pusha
xorl
lods
sbbl
push
loopne
dec
aas
ljmp
lahf
push
and
push
mov
sbb
scas
adc
or
test
test
jbe
outsb
clc
mov
out
out
aaa
sbb
jae
in
mov
ja
daa
pusha
adc
loop
lods
ds
rcrl
mov
daa
xor
je
ret
mov
nop
cmpsb
and
in
push
in
aam
jo
add
ljmp
hlt
pop
ret
mov
or
ds
lahf
sub
popa
xorl
lret
inc
call
in
and
and
inc
pop
push
xor
pop
nop
adc
dec
mov
mov
pop
aas
stos
jne
mov
lock
inc
and
xchg
sub
repnz
add
outsl
dec
push
adc
xor
push
sub
jns
mov
icebp
cltd
add
fists
dec
cmovo
aam
mov
xchg
shlb
mov
imul
or
lods
sar
fdivr
cwtl
add
cltd
sarl
jbe
xchg
std
add
mov
cs
add
xchg
adc
rcrb
push
sbb
lcall
fs
push
sub
sbb
push
sub
rcl
js
pop
lods
fdivs
inc
dec
call
sub
and
in
pop
and
clc
adc
and
mov
mov
fstl
pop
jae
add
xchg
arpl
loope
leave
adc
movsb
adc
xor
mov
inc
out
mov
fwait
sub
ret
daa
inc
push
insl
sub
lret
push
outsl
sub
fimull
shll
loopne
in
mov
sub
xchg
fdivs
or
add
jbe
mov
sbb
add
shll
jns
shl
dec
sub
xor
stc
lret
test
dec
pop
xchg
xchg
push
adc
dec
adc
jbe
xor
xchg
inc
jns,pn
imul
sub
into
mov
mov
icebp
insb
push
add
inc
aaa
adc
dec
and
and
jge
and
inc
add
lds
add
xchg
pop
sbb
and
jecxz
jae
fwait
add
push
and
out
ficoms
cwtl
cmp
add
loopne
push
or
pusha
int3
push
dec
stc
ss
adc
sub
push
or
lods
and
rol
push
jo
shrl
jecxz
jo
adc
mov
in
xor
mov
or
or
ret
loope
xchg
add
jns
cmp
sub
arpl
icebp
mov
xor
pop
adc
jne
xchg
mov
mov
add
mov
mov
mov
and
sbb
sub
loopne
fistps
mov
das
mov
inc
mov
gs
mov
aam
call
and
outsl
subl
jne
xchg
inc
and
pop
push
fildl
mov
pop
leave
sub
inc
sub
sub
cwtl
adc
sbb
cld
cmp
jnp
add
dec
xchg
js
and
or
or
push
sub
bts
xchg
sbb
movsb
and
popa
and
movlps
fists
pop
stc
sub
les
cmp
movsb
fnsave
xor
mov
addl
mov
cltd
xchg
push
or
add
or
clc
adc
ss
xor
mov
inc
push
add
pop
iret
add
sub
xor
or
loope
aas
jl
sub
jp
adc
push
lahf
adc
dec
shlb
and
adc
dec
sbb
sub
pop
adc
addl
inc
xor
mov
mov
and
mov
dec
push
jg
sbb
pop
add
cmpsl
ljmp
test
or
ret
push
mov
cmp
or
sahf
push
iret
stc
mov
push
cwtl
gs
sub
xor
popa
pop
xchg
bound
jo
xchg
mov
mov
xorb
sbb
sahf
xor
cmp
jecxz
ret
inc
push
dec
lea
loopne
dec
dec
enter
xchg
mov
add
aad
adc
xchg
push
jb
push
mov
pop
imul
mov
inc
jl
push
mov
jns
fucom
andb
sbb
loope
mov
push
sub
rorl
mov
adc
xor
pushf
pop
jne
mov
mov
ret
push
loop
pop
push
xor
pop
inc
pop
xchg
dec
xchg
outsb
inc
outsl
adc
loopne
pop
lea
add
inc
pop
insb
int3
mov
dec
adc
sub
push
shrb
xor
or
mov
add
dec
stos
xchg
sarb
popa
pop
xor
sub
dec
movsl
mov
and
lcall
dec
daa
dec
inc
and
xlat
push
dec
sbb
stc
sbb
fistps
mov
mov
outsb
pop
ja
xor
insl
and
mov
and
jg
pop
mov
arpl
fwait
lods
pop
mov
ret
xor
jmp
xchg
jmp
xchg
test
popa
or
ss
push
pop
imul
pop
test
xchg
fnsave
pop
rclb
dec
setl
xor
test
xchg
mov
pop
in
test
xchg
dec
movsb
sti
mov
inc
cmp
inc
inc
push
mov
mov
ret
and
js
mov
xor
and
push
and
loope
adc
xlat
mov
pop
rcr
aad
fisttps
xchg
xchg
xor
xchg
sub
dec
ret
out
sub
lds
or
stos
cltd
adc
loope
xlat
jp
push
imul
loop
mov
and
rolb
addr16
dec
sbb
sbb
aad
stos
cli
jecxz
fldcw
sbbb
call
push
in
or
add
outsl
test
and
and
and
push
das
loope
dec
daa
jo
add
les
fcom
std
movsb
push
or
popa
sbb
xchg
xor
sbbl
clc
loopne
xchg
fcomps
lods
push
and
add
sub
ss
mov
dec
mov
inc
inc
fmull
ljmp
test
int3
movsb
dec
and
mov
fs
lods
mov
data16
inc
pop
rorl
dec
icebp
cwtl
mov
pop
push
ss
xchg
fnstsw
inc
push
xor
popa
jle
dec
jge
xchg
cmpsl
sub
xchg
fstpl
push
insb
and
sarb
or
test
sub
pop
add
and
push
je
out
adc
lret
std
xchg
loop
inc
test
lods
stos
dec
jp
inc
addr16
mov
cltd
icebp
sti
and
mov
fnstsw
lahf
or
lods
and
adc
sbb
sbbb
cmp
fldl
and
cltd
sbb
or
xchg
rorl
add
push
dec
insb
xorb
mov
adc
pop
outsb
cmp
sub
imul
mov
mov
fildll
fidivrs
inc
lea
cmc
cmpsl
in
loope
or
fisttpl
jp
xchg
nop
or
xchg
movsb
dec
aam
mov
xor
mov
adc
inc
fdivl
xor
pop
xchg
dec
js
inc
and
adc
pop
add
icebp
sub
add
sti
test
jl
das
iret
je
mov
fs
push
imul
les
sbb
add
sbb
sbb
and
or
popa
insl
aaa
incl
in
int3
mov
out
fwait
add
cmp
mov
sub
sbb
shr
pop
and
out
inc
or
jne
add
add
flds
mov
sbb
scas
xor
xlat
cmp
rolb
push
xor
mov
sub
or
lds
jno
stc
jmp
dec
fcomi
test
adc
fbstp
pop
daa
mov
sub
dec
outsb
icebp
sti
lret
sub
das
rolb
adc
sbb
lret
insb
jge
pop
sub
adc
mov
jnp
mov
add
outsb
mov
movsl
sbb
adc
sti
mov
inc
ret
xor
fwait
or
adc
jl
jns
mov
cmp
dec
and
outsl
subl
divl
sbb
and
adc
add
push
pushf
inc
pusha
stos
imul
jb
icebp
pop
inc
bound
xor
je
imul
inc
insb
and
insl
outsl
jecxz
inc
jl
test
enter
adc
lods
stc
sti
imul
push
cmp
add
pop
add
aam
test
adc
into
cmp
dec
jo
ret
lret
xor
dec
push
add
xchg
xchg
icebp
add
push
mov
xlat
push
lret
mov
sbb
xchg
pop
add
mov
xor
mov
shlb
ja
adc
das
loope
std
add
xchg
cwtl
aam
leave
inc
xlat
dec
js
dec
cmp
push
lret
subl
or
xor
push
sbb
iret
lret
js
add
inc
add
mov
out
lds
jns
movsl
mov
shlb
mov
lahf
add
cmpsb
xchg
mov
insl
adc
iret
adc
cmp
aad
sub
roll
pop
and
pop
pop
jne
inc
aam
or
and
cmp
mull
test
gs
popa
mov
test
lods
jp
ret
or
sbb
push
stc
mov
loop
sbb
jbe
rol
imul
push
cmp
lods
jg
arpl
and
dec
lea
scas
fdivrp
mov
push
xor
mov
jmp
add
pushf
dec
fists
sub
cmp
subl
dec
imul
and
mov
mov
dec
in
xlat
std
int
lods
orb
out
fs
ret
jge
or
dec
incl
insl
and
inc
notb
popa
mov
imul
in
test
dec
mov
gs
out
push
dec
mov
test
rcl
mov
nop
sbb
mov
adc
or
xor
inc
cltd
sbb
test
frstor
addr16
jno
addr16
jno
mov
lds
xchg
jmp
adc
sbb
jns
mov
jg
stos
stc
cmp
add
or
inc
pusha
cmp
inc
cmp
xchg
mov
add
inc
inc
popa
and
pop
add
lahf
push
outsl
scas
pop
inc
call
mov
fisubrl
or
cwtl
pop
je
mov
je
sbb
cltd
pop
push
or
insl
das
mov
dec
jl
dec
jne
fldt
and
or
outsl
imul
lods
pop
mov
cmp
les
or
jp
inc
jecxz
push
dec
test
icebp
adc
rol
adc
inc
popa
jo
daa
mov
cmp
xchg
add
xchg
lcall
in
cmpsb
sub
scas
ret
cmp
cmp
push
add
dec
fildll
xchg
cmpsl
in
and
sbb
mov
mov
shlb
ss
add
iret
fisttpl
mov
daa
aam
pop
mov
shlb
jne
out
insl
mov
lds
mov
add
repnz
cmp
adc
outsl
fistpl
imul
call
push
lret
push
inc
and
adcl
sbb
inc
xchg
sub
jo
scas
push
shll
out
filds
sbb
xor
mov
daa
or
xor
pop
jb
and
sub
movsl
cwtl
push
or
or
ja
and
jp
cmp
mov
jl
loop
cmc
jmp
loope
lds
bound
pop
inc
xabort
cmp
jp
sti
mov
pop
mov
movsl
inc
push
or
insl
and
lods
adc
sahf
imul
add
mov
mov
push
frstor
lahf
nopl
cmc
ljmp
js
and
sti
jmp
popa
lcall
aam
das
leave
enter
dec
jge
lock
sub
add
out
std
add
pop
inc
hlt
dec
arpl
and
and
add
ret
mov
or
push
and
inc
test
mov
stos
adc
xchg
neg
cmp
je
or
ret
ss
or
jne
sbb
shr
dec
test
or
push
add
mov
dec
jle
mov
popa
add
cltd
aaa
pop
jecxz
cltd
inc
inc
add
imul
sub
out
push
push
mov
rcl
xchg
xchg
adc
jne
jge
push
icebp
inc
int3
sub
add
lea
dec
xchg
xor
int3
dec
adc
pop
xchg
inc
dec
push
js
lods
or
mov
and
rcrl
add
pop
xor
jge
mov
lea
jo
addr16
dec
or
and
mov
push
push
inc
sub
adc
or
jecxz
xchg
and
sbb
and
cld
test
nop
jecxz
rol
dec
leave
les
sarl
sbb
jne
inc
lahf
pop
xor
out
test
les
adc
dec
mov
push
imulb
inc
pushf
rorb
xor
adc
add
and
aad
xchg
popa
gs
sub
inc
mov
repz
repz
mov
test
jne
xchg
or
pop
jo
test
adc
xlat
test
es
mov
xor
sbb
xorb
mov
push
xor
addl
cmp
sbb
dec
pop
imul
pop
pop
repz
sti
xchg
loopne
repz
dec
sbb
cwtl
push
cmp
mov
xor
jb
rclb
mov
adc
flds
adc
cmp
or
shl
jge
sub
inc
roll
stos
imul
addr16
sub
sbb
pop
sub
and
adc
testl
gs
mov
repz
xchg
pop
bound
inc
shll
scas
dec
cmp
adc
inc
sbb
inc
and
adc
jmp
pop
adc
cmp
inc
adc
push
leave
data16
sbb
sub
xchg
jno
push
fucomp
fdivs
ret
test
mov
sub
or
add
pop
out
and
cmp
adc
add
loope
adc
sahf
sub
mov
inc
mov
sub
negl
repz
xor
inc
adc
xorb
imul
stc
pop
add
pop
lods
movsl
pop
xor
ds
jno
sub
daa
shlb
stos
popf
mov
xchg
pusha
and
mov
inc
lods
mov
fdivrs
insl
push
jne
inc
test
push
jecxz
sub
sub
aaa
jno
dec
je
test
das
daa
test
push
and
adc
mov
repz
add
mov
jle
mov
ficoml
push
or
gs
jns
mov
adc
mov
push
push
ror
imul
sub
fwait
jl
push
out
and
mov
sbb
loope
dec
mov
ret
sbb
adc
sbb
mov
daa
test
aas
mov
aas
jno
mov
imull
push
insb
adc
inc
mov
das
lret
adc
pop
jo
xchg
movsb
jl
cmp
test
jmp
or
mov
lds
inc
jge
mov
jo
jg
push
jecxz
jne
jno
inc
or
data16
movsl
out
add
pusha
lods
dec
add
and
jne
mov
mov
push
out
fdivp
add
test
pop
xchg
fistpl
sbb
adcl
or
jnp
sbb
mov
add
push
jecxz
push
jnp
pop
fdivs
arpl
pop
cmp
mov
test
leave
sbb
add
cmp
xor
jle
mov
mov
insl
pop
cmp
and
out
andb
aas
xor
daa
xorb
stc
aam
dec
sub
mov
or
mov
sub
addr16
xchg
mov
or
mov
into
xor
cmp
fwait
inc
lods
sub
icebp
pop
inc
ret
push
add
add
pop
cmp
jne
jp
lds
mov
sarl
pushf
lret
loope
dec
cmc
fcoml
mull
mov
jne
bound
xor
fsubl
test
add
mov
js
mov
movsb
push
mov
movsl
daa
les
int
out
pop
pop
and
imul
pop
cmc
insb
pusha
nop
popf
mov
roll
popa
cltd
add
mov
push
pop
movsb
ret
orb
jnp
sbb
loopne
sti
add
sti
ret
sub
xchg
imul
pop
sbb
mov
sbb
ret
sbb
mov
roll
push
inc
pop
sbb
imul
adc
mov
shlb
sub
xchg
mov
push
mov
pusha
outsl
dec
dec
mov
in
mov
sarb
test
gs
or
shlb
lretw
dec
pop
or
dec
ror
pop
adc
or
push
push
cmp
mov
jae
fists
mov
push
sahf
les
dec
push
fidivl
cmpsb
sbb
loop
and
mov
push
push
mov
pop
add
jo
cli
dec
add
cmp
imul
cmc
cmp
ss
aam
sub
adc
push
in
dec
jae
in
rcl
adc
pop
int3
pop
leave
aad
mov
jno
add
rcl
and
dec
add
inc
push
mov
cpuid
insl
jno
andb
adc
ret
xor
adc
nop
sarl
loope
fldl
mov
cmp
out
dec
xchg
inc
out
stos
inc
pop
sub
std
nop
add
daa
iret
sub
insl
pop
jne
or
test
and
push
or
or
fcoms
add
lret
and
ja
test
adc
movsl
xor
lds
mov
int3
arpl
mov
movsl
cli
ret
jecxz
dec
icebp
xchg
add
xchg
sbb
inc
or
dec
popa
dec
xor
cmp
fs
mov
xchg
roll
call
nop
jns
and
xchg
push
arpl
mov
mov
xor
push
adc
push
or
stos
or
push
sub
or
mov
sbb
test
dec
pop
and
lds
dec
mov
das
mov
jle
sbb
lret
jns
cwtl
add
jl
mov
xchg
or
aas
in
mov
inc
mov
xlat
and
lret
dec
mov
jo
jbe
ss
xchg
sbb
iret
adc
pop
popl
lea
sbb
mov
cmc
cltd
dec
pop
jo
pop
cmp
cld
add
pop
push
xor
add
sbb
dec
pop
rcrb
add
out
iret
mov
push
inc
jmp
test
insb
push
nop
lock
jmp
pop
pop
int
inc
fsubs
sbb
mov
addr16
and
ffreep
dec
fs
push
jmp
test
jno
test
adc
leave
les
lahf
cmp
inc
sub
test
js
jg
dec
jnp
jo
fldcw
adc
cmp
scas
xor
jne
inc
lret
jbe
and
dec
add
movsl
dec
lock
sbb
mov
sub
xchg
aas
mov
shrb
pushf
je
jns
mov
sub
xorl
pop
loope
sbb
adcl
xchg
mov
std
inc
test
gs
mov
sbb
mov
mov
jno
adc
or
and
sub
mov
sti
stc
jecxz
out
sub
jnp
rcll
and
out
push
cmpsl
add
lods
ret
sbb
ret
adc
mov
in
mov
das
add
xchg
sti
arpl
fs
jbe
mov
fwait
adc
test
push
pop
cmpsb
je
adc
imul
xrelease
dec
adc
and
push
test
pop
inc
enter
mov
push
cmc
hlt
xor
push
cltd
fs
dec
scas
mov
xchg
jge
pop
adcl
fwait
loope
fs
addb
shll
push
incl
add
cli
movsb
and
mov
leave
aam
je
add
int
or
fsts
inc
aad
mov
mov
pushf
sbb
movsb
mov
xlat
daa
adc
sbb
pop
lret
sub
inc
cmp
test
xlat
out
out
mov
xchg
and
cmpb
icebp
cltd
sub
test
int
call
pop
push
dec
and
or
nop
movsb
sbb
xor
or
into
cs
sbb
push
notl
leave
stos
cmp
call
push
sbb
jle
inc
arpl
or
lcall
jo
test
jmp
mov
daa
inc
push
inc
mov
add
add
xchg
adc
xor
sbb
xor
jmp
fs
mov
sbb
pop
mov
shll
mov
cmp
loope
shld
inc
sbb
in
lcall
push
mov
leave
dec
sub
mov
mov
pop
xlat
dec
xor
sub
xor
out
mov
int3
add
sbb
add
pop
cmpsb
lods
aad
xlat
cmp
lds
test
mov
dec
pop
arpl
jge
je
dec
pusha
mov
int3
inc
push
or
adc
add
cmp
or
add
and
sarl
sub
fcmovb
mov
xor
mov
sbb
sbb
sbb
jb
sbb
call
xor
lea
or
adc
and
xor
cmp
nop
mov
jne
mov
lds
or
xchg
pop
cmp
pop
sbb
mov
add
inc
sbb
mov
xchg
sbb
and
stos
adc
cwtl
add
outsl
bound
mov
inc
pop
andl
ja
pop
enter
sub
jnp
sbb
adc
scas
mov
in
mov
xlat
push
inc
mov
cmp
adcb
inc
or
cs
fnstenv
or
mov
lock
mov
xor
jnp
repz
pop
sbb
stos
imul
mov
push
jno
out
das
icebp
shlb
jge
push
mov
xor
std
cmc
bnd
inc
jl
je
cmp
arpl
hlt
mov
insl
or
xor
pop
fisubrl
in
dec
insl
inc
ret
nop
scas
sbb
in
mov
loope
inc
ffree
aaa
mov
mov
lods
sbb
cmp
jbe
push
sub
add
pusha
in
cli
test
xchg
out
mov
faddp
mov
cltd
jl
dec
or
jns
mov
and
sar
test
add
or
add
ror
xor
jg
sbb
and
fadds
lods
inc
inc
inc
jne
xlat
adc
pop
jae
inc
push
mov
outsl
stc
je
adc
or
scas
add
jno
mov
shl
cwtl
or
hlt
adc
xchg
add
sbb
stc
xor
lret
xchg
xbegin
add
mov
cmc
out
jg
lock
sub
insl
jge
push
lret
push
xchg
and
cwtl
loope
push
mov
ja
push
test
ret
pop
or
add
mov
push
or
es
jle
or
mov
repz
mov
shl
or
mov
insb
test
push
std
or
or
shlb
add
mov
fmuls
inc
sbb
cmp
ja
nop
adc
lds
jne
or
sub
dec
mov
pop
sub
push
das
call
scas
and
mov
mov
inc
icebp
sbb
cmp
push
inc
jecxz
cwtl
adc
enter
or
jbe
jb
bound
xor
adc
imulb
push
adc
dec
adc
test
sahf
mov
mov
pop
das
pop
add
add
shll
or
leave
jge
cwtl
adc
mov
sahf
jg
and
xor
fdivrl
cmp
mov
lods
nop
adc
and
add
sbbl
cmpl
sub
xchg
jbe
pop
or
xchg
mov
and
xor
in
out
and
mov
aas
or
xchg
in
icebp
js
dec
sub
fisubl
sub
ret
push
lods
xor
ss
addr16
lahf
ss
mov
pop
inc
aam
or
xchg
addr16
add
xchg
ja
sbb
fcoms
in
pop
jp
jno
adc
jno
imul
movsl
jmp
fiadds
insl
xchg
mov
mov
xor
insb
xor
sbb
mov
dec
jmp
sub
test
push
daa
sub
mov
in
popa
push
add
adc
iret
or
add
je
mov
inc
imul
imul
je
add
sbb
inc
and
mov
and
test
sbb
arpl
add
mov
mov
fisttpll
loope
aaa
jp
fsubrl
sub
pop
aaa
andl
cmp
jge
sub
sti
out
jmp
pop
out
dec
sub
scas
sti
xchg
int3
ljmp
pop
out
in
or
pop
jge
mov
jmp
push
sub
jns
add
cmp
popa
icebp
in
out
test
and
icebp
cmp
addr16
div
aaa
dec
ret
ret
and
not
sti
rcr
rcrl
lods
jnp
arpl
and
xchg
enter
dec
xor
icebp
pusha
mov
dec
clc
loopne
pushf
insl
fadds
fstpt
rolb
repnz
push
gs
lds
shl
adc
aam
xchg
mov
dec
pushf
mov
addr16
test
lods
jl
mov
mov
out
push
lods
aaa
test
aam
inc
pop
lock
mov
push
je
out
adc
pop
in
adc
or
pop
lcall
dec
xor
adc
push
adc
xor
add
imul
test
jmp
jmp
xchg
xchg
insl
push
mov
pop
push
rclb
fdiv
ret
sti
or
xchg
adc
pop
das
pop
call
pop
inc
mov
xchg
xchg
sub
mov
inc
cmp
cld
push
cmp
repz
add
add
shlb
ds
addr16
aam
je
inc
cmp
cmp
xlat
or
jp
sahf
es
rcr
push
pop
sub
mov
mov
dec
rolb
sub
nop
pop
lods
lea
xchg
lahf
sbb
jg
shlb
int
xchg
add
rolb
push
pop
inc
imul
mov
arpl
test
das
scas
in
addb
and
xlat
stos
mov
sbb
xchg
inc
loopne
xchg
lock
sbb
jge
out
lods
iret
and
fildl
jo
push
dec
add
add
inc
orb
mov
fcomps
pop
mov
ret
imul
mov
or
mov
cmp
and
loope
ud2
cmpsl
mov
popa
cmpsb
xorl
or
mov
std
pushf
sub
push
sarb
mov
pop
jecxz
fs
loopne
add
sub
xchg
das
scas
jge
mov
les
pop
push
sbb
cmp
xchg
pop
fstl
out
adc
sbb
loope
mov
jl
ffreep
sub
inc
xchg
mov
cmp
adc
xchg
les
aad
cld
jno
cs
adc
mov
add
adc
mov
aaa
test
cmpsb
add
pop
pop
orl
inc
inc
fimull
movsl
or
ucomiss
sbb
rcrl
add
bound
nop
cmp
push
dec
sbb
and
dec
push
subb
fs
js
inc
add
out
sbb
adc
xchg
jb
jecxz
fdivrl
ret
mov
std
xor
jmp
mov
mov
test
xor
mov
out
add
mov
ds
cmpsb
sbb
jnp
gs
or
rolb
test
dec
mov
lahf
je
mov
loopne
add
push
push
les
xor
addr16
adc
pusha
loopne
outsb
shlb
dec
ret
stos
sub
or
lods
pop
xchg
sub
dec
call
outsb
call
push
les
incb
dec
push
mov
inc
pop
lds
xor
cmpsb
pop
sbb
outsl
jge
shrb
pop
or
aaa
mov
adc
adc
mov
adc
sbb
addl
adc
sbb
adc
push
pop
push
inc
sub
ret
or
incl
adc
jno
jo
fstpl
stos
sti
sub
jge
mov
mov
mov
jbe
test
and
mov
push
sub
cmp
adc
add
pushf
mov
and
adc
cmp
pop
dec
call
mov
test
or
and
xor
push
or
stos
mov
sub
leave
fdiv
push
repz
add
xchg
push
inc
mov
sbb
or
rolb
ds
ljmp
pop
gs
sti
rcrb
cmpsl
loopne
outsb
call
int
int3
les
cwtl
jmp
sbb
int3
mov
fldl
je
mov
inc
and
mov
or
dec
fldenv
jno
outsl
push
fistps
mov
outsb
or
add
add
lds
ds
bound
and
or
push
sbbb
sub
hlt
aas
push
icebp
sub
pop
subb
dec
pop
xchg
lahf
test
movsb
dec
jmp
dec
sbb
adc
daa
lcall
sarl
or
sbb
mov
pcmpgtw
push
jp
icebp
cmc
dec
add
jnp
into
mov
cltd
in
inc
call
add
adc
enter
pop
lea
clc
jno
sbb
bound
sahf
mov
xchg
mov
movsl
and
xor
in
fwait
stos
fs
testl
pop
mov
sbb
pusha
leave
or
femms
fsubr
add
mov
or
inc
mov
adc
push
jmp
mov
pushf
mov
adc
out
xchg
daa
pushw
daa
stos
push
int
sbb
sub
mov
pop
aaa
test
xchg
dec
gs
sub
popa
xchg
cmc
xorb
mov
inc
push
or
hlt
fisttpl
push
and
dec
xorl
sub
enter
fdivr
add
mov
cmc
and
sbb
add
loopne
adc
xlat
or
xlat
xchg
lds
mov
jge
sbb
sub
loopne
xchg
pop
sub
and
add
mov
pop
jmp
fwait
daa
mov
dec
jo
or
sub
xor
test
hlt
enter
cmpsl
inc
adc
xor
ss
cwtl
sahf
stc
outsb
shlb
jg
mov
add
je
arpl
int3
aam
mov
cld
xorb
loopne
sub
pop
xchg
test
fisubrs
dec
and
lods
adc
imul
sarb
mov
jbe
shl
addl
imul
aas
mov
inc
cmp
push
cmp
xchg
insl
and
xchg
xor
mov
add
mov
jns
inc
pusha
mov
hlt
popa
xchg
lds
sbb
out
sbb
xchg
filds
cmpsl
decb
out
scas
cmp
jle
sub
outsl
in
jge
dec
sbb
pop
pushf
pop
push
pusha
loop
ret
push
cli
adc
daa
fstl
adcl
cmpsb
rolb
jb
add
inc
iret
xlat
ret
mov
mov
xchg
mov
pop
inc
movsb
xor
adc
lea
cmpsl
jne
in
test
add
enter
movsb
in
enter
insl
outsl
push
sub
sub
adcl
mov
test
data16
andl
and
iret
rorb
fldt
ret
shl
aas
jnp
mov
movsb
aaa
inc
mov
insb
or
push
add
fwait
aad
dec
ljmp
xchg
mov
sub
arpl
mov
rcll
and
inc
xchg
add
fsubp
leave
or
test
sti
lds
popf
pusha
stc
add
add
adcb
push
lock
shl
jl
sbb
lds
pop
mov
xor
dec
xor
add
dec
add
je
add
lea
sub
es
sbb
sti
cmp
lret
xor
adc
and
xchg
dec
jmp
cmc
pop
lret
add
add
out
inc
or
mov
inc
ret
in
pusha
and
aam
jns
xchg
and
pop
mov
pop
popf
and
jp
imul
push
pop
cmp
mov
mov
rclb
addl
ret
cmpsl
inc
sbb
call
das
call
inc
gs
test
xchg
xchg
sub
jnp
mov
adc
xor
fmuls
ret
sbb
repz
andl
test
and
cmp
and
mov
push
addl
sub
and
add
push
mov
dec
pop
pop
push
push
and
push
clc
rclb
iret
arpl
xchg
outsl
rclb
call
inc
adc
push
xchg
and
inc
outsb
and
adc
inc
sbb
dec
imul
xorl
fdiv
das
aad
sub
jbe
jno
sub
mov
push
push
scas
adc
pand
dec
mov
pop
lahf
mov
movsl
jge
add
and
scas
nop
rol
test
sub
and
mov
add
jbe
add
sbb
fldl
cmpsb
jno
pop
sbb
sarl
dec
jne
enter
outsl
dec
or
pop
push
pop
and
into
test
popf
scas
inc
jle
push
jp
data16
cli
mov
call
pop
les
pop
pop
lcall
loopne
xchg
jae
cmp
frstor
gs
js
push
xchg
clc
ret
mov
dec
jge
xor
pop
adc
mov
and
inc
lahf
lcall
jl
cltd
xor
out
add
push
cs
ret
and
lods
ret
mov
inc
pop
cwtl
mov
mov
cmp
jecxz
sbb
stos
xor
cmp
inc
mov
and
fidivrl
out
pusha
and
push
push
pop
fisubrl
xchg
stos
rolb
xorb
imul
or
mov
jmp
mov
js
rorl
dec
push
js
add
outsl
pop
lea
aaa
inc
fbld
fildll
sub
enter
sarl
mov
mov
mov
and
and
push
add
adc
aad
inc
gs
sar
dec
rol
rorl
call
test
and
push
sub
inc
outsl
daa
mov
jmp
imul
lahf
pop
jge
push
dec
or
or
daa
cmp
pop
mov
int3
rorb
add
clc
sbbb
test
push
rcrb
arpl
pop
int
lods
dec
aas
inc
gs
mov
xorl
insb
andb
les
sbbb
test
sbb
add
popa
push
insl
adc
push
adc
jl
sub
sbb
rorl
cmc
xchg
cs
jecxz
hlt
sti
cltd
insl
dec
add
sti
add
popa
adc
jne
adc
pop
pushf
add
inc
xor
add
mov
mov
imul
and
sahf
dec
shlb
imul
or
lea
insl
arpl
lret
mov
add
stos
popf
or
mov
lcall
iret
in
je
call
fucom
aad
xor
push
sarl
ret
mov
or
push
pop
push
sbb
pop
add
ficoml
dec
push
jno
ljmp
pop
mov
scas
mov
dec
xor
xchg
jb
pop
pushf
insl
or
in
mov
add
xchg
hlt
int3
dec
fcmovnb
xchg
test
pop
test
pop
inc
rolb
lret
pusha
lock
sahf
inc
popa
loop
mov
pop
mov
inc
pushf
idivl
out
jecxz
aaa
and
cwtl
inc
add
xchg
in
xchg
mov
pop
iret
imull
nop
lock
or
sbbl
add
out
rol
fdivs
fnstcw
push
sbb
mov
repz
cs
mov
aaa
and
insb
mov
add
mov
inc
imul
ret
xor
inc
cli
push
test
push
rcrl
shl
inc
sub
cmp
cmp
jmp
or
mov
mov
hlt
in
ret
nop
cwtl
adc
imul
pop
cltd
and
cmp
push
movsb
push
xor
cmp
add
xchg
addr16
stos
xor
ljmp
inc
ja
repz
mov
push
fcoml
int
outsl
inc
inc
xchg
sub
shlb
pop
dec
jo
pop
jp
rolb
adc
add
mov
sub
jp
jp
and
fdivrp
ja
enter
jns
insb
stos
cmpsl
ss
pop
sbb
pop
jbe
push
push
pop
pushf
das
or
add
pop
add
xchg
addr16
add
and
aam
arpl
loopne
pop
daa
in
ds
iret
test
add
xor
out
mov
das
adcl
add
push
adc
fisttps
jmp
mov
xchg
lret
xchg
push
rolb
inc
in
mov
aad
mov
adc
adc
jge
and
fstpt
adc
sub
xchg
ljmp
xor
outsl
inc
fildll
clc
add
arpl
push
nop
outsb
nop
jmp
xchg
add
daa
roll
xorb
adc
iret
cmp
data16
xor
jle
push
add
scas
mov
push
arpl
xchg
mov
fs
rol
movsb
xor
pop
add
inc
sub
and
mov
cmpsb
push
mov
mov
sbb
inc
and
icebp
and
daa
cwtl
dec
movsb
pusha
negl
pushf
test
repz
addr16
js
cmp
sbb
mov
sbbb
les
sub
mov
mov
dec
inc
xchg
mov
cmp
jp
loopne
clc
fcom
jl
xchg
pop
sub
dec
pop
into
xor
loope
mov
movsb
or
jle
pusha
insb
sub
out
movsl
movsb
nop
xor
out
pop
sbb
lock
jle
adc
in
xchg
iret
nop
mov
outsb
push
jo
ja
add
es
or
inc
xchg
adc
int
pop
adc
add
or
jge
mov
and
adc
jo
xchg
mov
mov
add
es
mov
sbb
enter
pop
loop
insb
adc
loop
insb
cmp
add
inc
testb
dec
fsubrs
pop
adcl
test
sahf
lea
pop
lock
fisubs
je
pop
fidivl
xchg
sub
inc
popa
jecxz,pn
dec
loopne
cmp
and
in
and
frstor
push
jo
mov
out
fbld
pop
mov
aaa
loope
popa
leave
or
mov
jmp
out
xchg
frstor
leave
sahf
jo
fs
movsb
pop
call
jne
push
data16
jge
decl
xor
cs
addr16
rorb
stc
fisubs
xchg
pop
or
xor
fwait
jnp
jns
or
and
arpl
cmc
xchg
push
or
outsl
std
or
ds
test
aam
or
sub
orl
mov
nop
ds
notl
ret
add
dec
mov
pop
fxch
mov
xchg
xchg
subb
sbbl
ret
ds
shll
jo
in
idiv
cli
jge
pop
loope
pusha
mov
mov
fnstcw
mov
adc
add
ret
mov
cmpb
jae
add
cmpsl
daa
jnp
je
test
ret
shl
and
movsb
jo
push
mov
leave
shrb
jle
pop
jns
rcrl
shlb
pop
pop
out
xor
xor
rcl
movsl
sbb
adc
or
ficoml
sarl
popf
and
mov
xchg
das
inc
imul
dec
inc
ja
hlt
imul
out
daa
xor
rcrb
jp
out
insl
mov
pop
icebp
ret
or
mov
aad
push
mov
rorb
push
aad
lock
imul
js
mov
xchg
ret
inc
cltd
and
push
call
push
push
xorb
repz
cmp
push
mov
mov
cltd
test
add
pop
sbb
cli
ret
andl
push
jo
and
xchg
xchg
aaa
test
ret
mov
pop
push
ss
dec
or
test
inc
ret
lret
icebp
aad
iret
xor
mov
push
mov
rorl
sub
pop
insb
mov
jecxz
mov
fldt
insl
mov
aas
fisubs
pop
push
sbb
or
mov
or
mov
addr16
js
jnp
test
inc
or
sbb
subl
jle
stos
xchg
or
outsb
jecxz
fwait
js
jp
jmp
mov
shrb
fmull
ss
iret
loopne
or
ret
enter
test
shr
shrb
ret
adc
xor
sub
push
pop
xchg
sub
xor
lods
sbb
arpl
mov
push
sub
add
lcall
aad
shll
or
and
dec
mov
add
leave
daa
push
mov
mov
push
jo
jns
mov
addr16
loope
gs
sub
add
sarb
lods
rcrl
in
and
lret
xchg
js
xor
sub
and
inc
mov
mov
xor
sbb
mov
mov
aad
jmp
arpl
pop
mov
das
mov
lea
or
xor
mov
or
adc
fs
adc
push
inc
mov
and
cmpsl
or
lret
and
dec
andl
gs
sub
imul
ss
leave
and
fnop
ljmp
arpl
sbb
or
orl
movb
mov
pop
mov
sub
jns
xor
push
inc
daa
push
in
subl
in
stos
mov
add
jle
xchg
xor
push
push
lcall
pop
lret
pop
and
xlat
inc
sub
sub
jl
adc
shl
mov
rcrl
pusha
inc
push
icebp
pusha
cmp
xchg
dec
cwtl
rol
lcall
fistpl
jo
mov
adc
jnp
jb
cmp
and
ret
fld
sbbb
outsb
mov
or
xor
jecxz
adc
dec
cltd
inc
rol
push
rolb
lret
les
test
sub
and
out
push
sbb
mov
pop
xchg
sarb
or
pusha
aad
fdivrl
xor
out
in
sub
mov
xchg
ret
push
lods
test
inc
adc
fstpt
jbe
push
sbb
push
cs
pop
lea
imul
add
adc
mov
cmp
les
xor
pop
inc
cwtl
or
insl
jecxz
add
pop
aaa
xor
xor
or
rcl
push
sbb
inc
inc
mov
aas
sbb
or
adc
sbb
popa
imul
add
add
add
sbb
js
in
jl
imul
sbb
cmc
mov
add
fldln2
inc
mov
icebp
dec
cmovp
and
xchg
push
xor
jmp
jecxz
adcb
ret
popf
adc
jmp
out
or
xchg
push
push
jmp
movsl
or
add
cli
shlb
ret
add
movsl
arpl
bound
cmp
adc
add
dec
add
stos
into
add
sub
and
dec
rolb
inc
xor
out
insl
adc
jno
cmp
xchg
aaa
mov
adc
ret
mov
out
add
mov
cli
pop
int
nop
sbb
pusha
sub
add
fldl
push
pop
xchg
xchg
in
jnp
js
lret
dec
addr16
add
adcl
mov
imul
std
cmpsb
jg
cmp
fldt
popf
mov
push
inc
fs
push
add
fsubr
mov
rcll
cmp
cmp
fisttpll
stos
push
bound
in
pop
cmp
es
jge
lret
pop
jmp
clc
lods
adc
imul
out
icebp
ret
stos
and
out
loop
std
lahf
outsl
stos
js
dec
xchg
divps
in
dec
aam
and
push
push
pop
push
and
mov
and
ficomps
test
cmc
xchg
adc
jg
insl
test
pop
pop
clc
mov
outsl
push
jp
in
dec
jb
pop
cmp
inc
outsl
imul
adc
mov
fnstsw
and
add
mov
inc
popa
push
sti
leave
xchg
mov
jns
push
daa
xchg
push
pmaxub
xor
bound
adc
xchg
pusha
frstor
es
ret
fsubl
out
mov
fstp
inc
mov
into
inc
pop
pop
aaa
cltd
jnp
mov
sbb
out
jns
sbb
lret
insb
movsb
and
push
addb
add
jmp
pop
xchg
add
jne
sub
mov
mov
lret
sahf
rolb
jne
fs
dec
stos
xchg
daa
fs
push
arpl
js
cmp
push
movsl
push
add
pop
pop
mov
push
sbb
mov
add
sahf
add
pushf
jp
xor
and
sbb
pop
cmpsb
fbstp
maxps
sub
add
mov
mov
lea
add
ret
int
js
lahf
inc
sbb
ret
jmp
mov
or
cmpsl
mov
loope
push
or
and
out
addb
scas
movsb
jp
jae
add
jbe
or
add
mov
inc
es
sbb
xchg
cmpsl
idivb
or
insl
xchg
and
xor
or
add
jns
es
fmuls
push
iret
iret
in
movsl
fnstsw
adc
outsl
insl
jns
dec
shlb
cs
push
jno
mov
imul
xchg
loopne
adc
fdivrl
xor
pop
rol
or
ret
addr16
push
cmp
dec
or
cmp
fnstsw
inc
xorps
xchg
mov
in
movsb
mov
jb
rcrl
add
inc
lds
dec
push
mov
in
mov
jne
cs
aaa
pop
cmp
adc
popf
aas
ret
add
mov
push
or
jo
push
std
inc
sbb
add
cld
sbb
adc
xchg
pop
js
jge
lods
sub
sarb
mov
lea
cmp
rorb
push
ret
cmpb
cld
out
insb
cmpsb
adc
mov
xchg
add
scas
jns
cmc
sti
or
sub
movsl
lods
and
jmp
rclb
or
inc
and
pusha
sub
xchg
inc
inc
pop
mov
lea
add
sub
sbb
mov
leave
pop
or
pop
mov
cmp
ret
daa
sub
addl
adc
jnp
and
in
imul
push
or
fisttpl
loope
inc
ret
cmp
scas
scas
jl
push
repz
pop
xor
ret
les
fildl
lcall
jb
add
lret
fwait
mov
or
rcrb
or
jp
adc
decl
testl
sub
dec
js
jle
cmp
and
sbb
mov
lods
fistl
test
mov
pop
aaa
jp
and
or
xor
mov
or
dec
pop
mov
push
adc
sbb
or
fwait
pop
jno
into
inc
add
pop
je
mov
lret
pop
pop
mov
into
rclb
ret
pop
inc
and
sahf
pop
in
jp
inc
pop
jle
push
or
or
into
mov
add
pop
pop
and
punpcklbw
mov
cmp
mov
sub
xchg
inc
fs
xchg
in
mov
gs
mov
mov
inc
cmp
cmp
cmp
aas
out
add
sub
addl
jo
inc
sarb
xchg
adc
cld
sbb
test
jo
sub
outsb
dec
insl
fstp
inc
shrl
and
cmp
jmp
xor
xchg
jmp
push
call
cli
or
popa
add
dec
pop
inc
das
or
in
aas
les
dec
shlb
push
iret
adc
sbbb
xor
adc
aaa
int3
fstl
jno
dec
aad
xchg
and
jl
jne
push
repnz
dec
sub
lods
addl
or
mov
mov
fsts
mov
les
stos
pop
loope
pop
test
jnp
mov
data16
add
xorb
imul
jge
and
add
inc
xlat
add
imul
jge
mov
aad
add
jns
arpl
mov
add
mov
jmp
loop
cmp
mov
cmpb
call
out
jge
jns
inc
inc
or
jp
popf
mov
or
sbb
xchg
dec
or
pop
push
call
pcmpgtb
ret
jb
sub
test
pop
push
xor
outsl
mov
in
jp
in
cs
mov
mov
ja
add
lahf
insb
arpl
jp
push
cmp
mov
popa
mov
inc
lcall
sbb
std
nop
mov
insl
iret
lock
test
pop
dec
pop
scas
cmp
loope
fs
push
rcll
movsl
pop
mov
aam
push
inc
fildl
enter
je
loop
call
push
in
or
mov
hlt
movsb
or
jne
pop
mov
inc
rcr
jle
rcll
iret
mov
lret
push
mov
xchg
sti
orl
add
insb
push
mov
leave
xlat
pop
or
mov
inc
iret
vorps
sbb
divl
xchg
loope
adc
inc
inc
and
mov
xor
adcb
inc
and
xor
xor
adc
inc
ljmp
pop
out
mov
pushf
and
mov
nop
cmova
lock
rol
dec
aas
and
sub
jbe
sbb
mov
insl
or
add
arpl
aam
je
mov
or
pop
pop
int3
or
xor
jge
add
int
rcrb
test
push
stos
ret
xor
adc
fisubs
jmp
lcall
push
addr16
adc
mov
inc
mov
inc
add
xor
dec
xchg
adc
mov
lock
mov
out
lods
mov
inc
xchg
cwtl
negb
and
push
rclb
rcl
mov
sub
add
xor
mov
jmp
add
int
outsb
nop
std
jb
mov
cs
cmp
lea
jp
inc
pop
push
testl
lahf
adc
stos
cltd
mov
inc
inc
iret
mov
mov
cmp
push
pushf
int
push
sbb
and
mov
sub
xor
adc
push
imul
adc
out
and
out
jle
mov
mov
xchg
and
loope
fwait
shll
in
xchg
mov
push
arpl
or
or
jecxz
add
adc
ss
popf
xor
jmp
scas
aaa
das
mov
mov
test
jbe
mov
pop
dec
arpl
das
jb
fisubl
sbb
divb
push
addr16
fnsave
inc
repz
aas
movsb
pop
nop
sahf
mov
psubsw
test
sarl
hlt
or
in
xchg
lret
xlat
rclb
adc
sbb
cmpsl
sti
jne
sub
scas
push
push
and
je
jge
repz
mov
pop
out
add
dec
ljmp
and
or
repz
add
lcall
inc
aaa
cltd
add
mov
mov
inc
sub
ds
pop
or
or
pop
movb
cmp
pop
cmp
adcl
leave
sub
ret
sub
mov
nop
icebp
lea
or
cs
jno
popa
xor
addl
pusha
sbb
shl
andb
rcrb
pusha
icebp
addl
and
dec
mov
aas
adc
popf
cmc
popf
and
jecxz
test
mov
ja
pushf
dec
push
cltd
push
out
add
add
imull
mov
sti
xchg
adc
inc
dec
aas
xlat
aam
adc
mov
sar
rcl
inc
pop
ror
call
imull
or
sbbl
sub
xchg
jge
cmp
or
shl
lret
sub
mov
stos
pop
xlat
outsb
or
dec
or
test
xchg
lds
pop
jno
mov
pushf
in
mov
sub
arpl
sub
mov
mov
test
pop
aam
add
shrb
icebp
jo
cwtl
lret
add
push
or
jg
mov
fistl
inc
inc
sub
mov
push
aaa
test
jl
aam
inc
adc
aaa
sbb
and
int
fistpll
inc
sbb
jns
addb
xor
add
pop
fwait
roll
adc
xor
lds
sahf
movsb
push
xchg
ret
lock
lahf
outsb
cmpsl
mov
test
js
out
jecxz
sbb
jnp
ret
loopne
xchg
ret
leave
sbb
dec
mov
or
sbb
cmpsb
jl
adcb
sbb
and
jnp
ret
and
pop
mov
lcall
daa
push
xchg
push
jmp
mov
sub
lcall
mov
xchg
mov
adc
lret
in
add
cs
ret
mov
adcl
add
dec
sub
shr
mov
xchg
fnstenv
in
cmp
push
into
sub
leave
inc
push
push
mov
inc
sbb
les
popa
pop
sub
and
dec
stos
dec
fcoml
mov
pop
in
out
sub
leave
les
push
pop
xor
add
lret
sbb
daa
pop
or
or
sbb
push
mov
mov
or
xor
sub
ljmp
bound
inc
orl
jmp
ss
je
xchg
mov
adc
pop
out
js
mov
test
cltd
sbb
xchg
add
xchg
pop
push
adc
cmp
xchg
faddp
scas
lahf
mov
and
dec
inc
push
rorb
sti
push
mov
imul
and
dec
and
add
pop
jge
xchg
jno
cwtl
xchg
call
or
add
pop
call
sub
icebp
test
clc
leave
push
ret
fs
sbbb
xorb
pop
pop
clc
add
inc
inc
leave
sub
sarb
add
lods
clc
test
inc
cmpsl
dec
sub
arpl
jecxz
or
std
int
and
adc
mov
call
mov
inc
sbb
addl
faddl
push
xor
popf
cmp
or
xchg
pop
flds
sub
test
ret
xlat
shll
cmp
sbb
iret
and
sub
jl
daa
and
icebp
pop
xor
inc
cmpsl
sbb
lahf
mov
inc
mov
push
pop
lret
dec
lock
mov
aas
cltd
xor
sub
test
mov
xchg
repz
test
loope
sub
mov
out
sbbl
les
and
mov
add
mov
mov
jo
out
shlb
jnp
rcl
dec
in
arpl
loop
popl
push
push
scas
push
jmp
aad
and
imul
adc
add
in
lcall
rclb
inc
fists
or
adc
fs
sub
rcpps
popf
mov
cmp
cmpsb
cmp
test
pop
jmp
mov
push
xchg
cmpsl
or
jmp
aam
frstor
in
nop
and
in
test
mov
scas
xchg
mov
or
push
sub
push
ficoms
cmc
push
and
xor
repz
testl
shl
enter
push
test
mov
aaa
adc
out
sbb
dec
or
push
pop
or
jo
cmpsb
or
sub
cmpsl
xor
xor
js
sti
inc
or
push
add
sub
and
je
mov
fimull
or
ss
or
sbb
xchg
jae
les
sub
cwtl
mov
mov
test
mov
mov
push
mov
icebp
lcall
inc
das
fistps
or
pop
and
sbb
mov
aaa
add
inc
sbbl
insb
sub
add
scas
jno
test
or
sub
pop
push
push
push
rcll
and
lret
cmp
addl
fcmovne
bound
xlat
aad
push
in
lcall
mov
mov
xor
sbb
repnz
jmp
mov
addr16
mov
mov
lret
loop
call
and
add
testb
sbb
inc
sub
sbb
sub
xor
xorl
lods
roll
jle
mull
and
in
out
test
and
jns
stos
loope
sbb
pop
or
ficomps
rorb
iret
or
jecxz
mov
dec
movsb
enter
xor
dec
sub
add
jl
arpl
mov
xchg
shlb
sbb
sbb
dec
outsb
frstor
pop
dec
sub
outsl
jge
inc
cmpsb
inc
mov
mov
mov
sub
lea
insl
mov
test
sub
pop
and
xchg
mov
ds
add
jp
mov
lret
sub
dec
dec
pop
or
je
inc
ret
stos
sbb
jo
xlat
aad
jo
jae
aaa
mov
dec
push
ret
sub
fnstsw
adc
mov
sarb
mov
dec
out
jmp
movsl
xchg
push
std
dec
or
or
sub
sbb
adc
jno
daa
xor
arpl
push
adc
xor
xor
lahf
aad
jmp
popf
shl
aas
jne
outsl
call
cmp
xchg
and
divl
lods
push
cmp
lret
ficoms
or
and
or
or
test
add
jno
adcl
ret
in
movsl
lds
mov
xor
dec
enter
test
rorl
adc
movsb
xchg
cmp
inc
iret
aam
cmpsb
lock
lret
jmp
dec
popl
std
lret
xor
adc
lret
mov
jb
pop
xchg
daa
and
push
lods
add
lcall
mov
test
cmpsl
push
push
iret
imul
fistpl
mov
adc
ret
adc
rcrl
cmp
stos
pop
out
jl
imul
mov
mov
movsl
ds
aad
cs
mov
push
jmp
mov
adcb
test
sbb
add
jmp
mov
test
pop
test
or
mov
cld
xchg
lret
js
jns
pop
mov
in
sti
mov
push
and
gs
push
cmp
mov
dec
test
inc
add
mov
repz
mov
out
aaa
loop
inc
test
or
adc
dec
scas
or
xor
push
sub
xchg
sub
shrb
sub
sub
xchg
mov
cmp
xchg
addb
push
sub
std
aad
movsl
lods
add
loopne
pop
push
mov
xchg
xor
rorb
fsubr
in
cmp
enter
mov
sub
inc
or
adc
xchg
test
mov
test
sbb
test
dec
rorb
xchg
mov
hlt
mov
dec
mov
pop
or
add
mov
lods
stos
or
fwait
xor
adc
pop
add
int3
jnp
or
jge
rorb
xchg
mov
sbb
adc
jnp
ret
or
hlt
pop
mulb
adc
and
pop
test
clc
pop
push
lahf
jns
aaa
mov
sbb
adc
or
cmp
jns
ret
mov
jne
ja
test
roll
out
aad
pop
daa
lods
shll
mov
sub
in
push
cmp
pop
jmp
pop
xchg
jne
sbb
sbb
push
mov
popf
jno
sbb
pop
insb
pop
sbb
adcb
sbb
add
lahf
jb
jb
mov
daa
sarb
das
in
jecxz
cmp
fisttpll
fisubrs
rolb
mov
mov
outsl
ss
pop
mov
mov
cli
and
shll
cmpsl
cmp
sbb
add
sti
movsl
pop
cmpsb
mov
and
lds
inc
pusha
or
pop
mov
cmp
daa
je
jo
cmc
sti
mov
mov
cmpsb
mov
testl
shll
push
adc
ljmp
xchg
cmc
xchg
inc
daa
push
inc
xor
sbb
jne
mov
xor
imul
and
or
pop
add
xchg
sub
inc
call
test
fstps
aam
cs
and
mov
lods
cld
scas
dec
pop
loopne
mov
imul
pop
sub
jnp
and
push
fildl
or
mov
mov
dec
test
sbb
adcb
mov
adc
xchg
xchg
inc
mov
pop
addl
or
fbstp
sbb
iret
mov
iret
pop
dec
das
in
jecxz
arpl
loope
add
imul
pop
lahf
pop
dec
ss
dec
inc
cmc
jo
repnz
clc
dec
mov
fidivs
mov
sbbl
push
cli
outsb
xlat
lretw
adc
pop
dec
mov
lds
xlat
inc
movl
lods
or
lcall
pop
pmaxub
imul
cmp
push
popa
dec
test
xchg
mov
hlt
bswap
mov
arpl
movsl
outsl
fwait
loopne
dec
aas
push
cmp
movsb
adc
loope
dec
push
and
adc
pop
ss
in
jge
add
imul
pusha
lods
jne
jns
std
ret
subl
mov
push
loope
cmp
ret
imul
dec
mov
test
in
leave
test
push
push
adc
shl
outsb
xchg
cmp
addr16
roll
nop
shr
lds
fisttpl
insl
or
jecxz
in
pop
sbb
push
out
cmp
int
pop
xchg
inc
jle
pop
mov
sub
jg
pop
cmp
andl
sbb
dec
adc
inc
insl
rol
js
arpl
lea
jmp
inc
sbb
js
and
cmp
add
add
mov
lahf
xchg
jp
clc
std
scas
lods
test
test
lds
sbbb
add
mov
xor
and
adc
aad
je
pop
pop
jge
aam
or
dec
insl
xor
mov
and
orl
pop
ja
mov
dec
nop
pop
mov
call
in
jl
or
sub
ret
jb
adc
bound
ss
mov
push
pop
ret
adc
loope
mov
sbb
or
adc
ret
sbb
mov
jo
iret
jg
andl
insl
sbb
sbb
arpl
ja
push
and
mov
dec
outsl
xchg
sarl
loope
mov
xor
or
in
jmp
nop
sahf
cmp
enter
cmp
rorl
ja
int3
sbb
and
insl
xlat
cmp
rolb
jns
stc
mov
and
cli
fsubrs
icebp
mov
inc
adcb
int
je
mov
std
ljmp
loop
xchg
cmc
mov
arpl
lods
test
daa
cmpsl
xchg
adc
sbb
inc
inc
repz
mov
mov
shll
xorl
rcll
into
or
cs
sbb
and
int3
jmp
dec
fnstsw
pop
sbb
cltd
fldcw
sbb
fists
mov
sub
adc
xchg
adc
push
mov
sub
outsl
ja
fcoms
mov
pop
sub
add
mov
xchg
jle
push
fbld
jae
pop
lods
push
xchg
loope,pt
lds
sbb
sub
push
xchg
iret
xchg
rcrb
add
outsb
flds
nop
xchg
sbb
fisubl
mov
nop/reserved
insl
cmc
or
inc
adc
int
js
mov
std
aam
rorl
and
inc
push
sub
jmp
and
mov
cli
and
ret
cmp
fisubrl
cwtl
aas
test
pop
rclb
sub
outsl
or
xchg
pop
shl
int3
mov
pop
pushf
icebp
movsb
push
adc
push
popa
jecxz
adc
push
and
mov
test
mov
nop
mov
mov
inc
sub
add
jne
sbb
addb
sbb
mov
mov
sub
lcall
add
mov
mov
lods
test
nop
adc
rcll
dec
mov
mov
js
aad
rorb
or
clc
fmuls
pop
adc
jno
lea
sbb
inc
dec
sub
cwtl
test
mov
or
lock
jae
mov
nop
lock
fbld
rcrb
push
repz
and
mov
dec
push
mov
sbb
sub
xor
adc
or
dec
bound
aad
jne
test
mov
sub
mov
sub
stc
dec
enter
scas
add
fwait
and
mov
xor
out
or
mov
aam
daa
dec
dec
dec
cmpsl
dec
sub
jnp
stos
imul
mov
inc
cmp
jecxz
or
mov
xlat
push
je
movsb
and
faddl
lea
lret
pop
rol
call
in
add
call
cmp
aas
pop
mov
inc
sub
cmpsl
setne
mov
cmp
push
lret
insb
js
inc
mov
jle
stos
add
mov
sub
lret
clc
xchg
rolb
mov
icebp
mov
lods
stc
mov
hlt
jmp
mov
rcr
rcrl
out
cmp
test
cmp
jmp
shll
inc
shlb
fidivl
loope
cmp
pop
dec
jmp
sahf
cmp
pop
sub
mov
dec
cltd
ret
push
mov
cmp
inc
dec
mov
out
xchg
push
pop
std
inc
sbb
mov
ja
rcl
scas
push
in
dec
inc
scas
inc
xor
stc
xor
fsubrs
call
test
scas
or
xor
pop
popf
xor
or
cmp
aas
aaa
or
loope
fadds
inc
mov
dec
mov
push
mov
mov
pop
movb
inc
filds
mov
sbb
iret
push
or
leave
stos
fistpl
cmpsl
movsb
push
xadd
cmp
in
jno
data16
pushf
xor
adc
dec
mov
sbb
pop
or
jns
dec
mov
mov
imul
xchg
jp
jge
and
idivl
fadds
xlat
xor
pop
lret
push
nop
rcr
and
add
xor
cmp
sbb
arpl
adc
mov
pop
mov
inc
jmp
adc
in
lret
push
push
stos
lods
scas
jg
lcall
mov
adc
adc
std
pop
sbb
xchg
push
daa
daa
fildll
jae
ret
rcl
je
or
mov
push
call
sub
add
xchg
push
out
dec
cmp
ror
xchg
ljmp
inc
mov
leave
je
mov
mov
or
jne
cmp
jo
fsubrs
mov
adc
push
push
or
bswap
mov
push
cli
inc
js
lahf
shlb
jb
scas
cmc
add
mov
inc
jecxz
gs
sub
cmp
mov
inc
js
ret
dec
mov
or
jb
and
push
sbb
adc
jl
inc
add
imul
sahf
lret
xchg
ror
test
faddl
flds
mov
push
pop
stos
insl
jecxz
divl
sub
es
loope
inc
mov
jg
push
jmp
addr16
or
sti
loop
loopne
pop
pop
mov
sub
push
pusha
inc
dec
femms
or
ss
imul
cmp
add
pop
cmp
cmp
sbb
sar
sub
test
mov
ds
les
nop
movl
dec
fmuls
cmp
popf
pop
mov
add
inc
cs
add
and
adc
inc
xlat
xor
jge
stos
insl
mov
cli
mov
inc
lea
jo
stos
sub
insl
cmp
outsl
mov
cmp
jbe
rcl
jecxz
stos
and
and
into
aad
sarb
jge
jne
shr
add
cmp
lods
jecxz
sbb
xor
mov
xchg
or
jbe
cmc
cltd
and
lods
inc
adc
fwait
rcl
xor
sub
adc
fimuls
mov
sbb
xor
bound
or
stos
sahf
stos
add
addr16
xchg
and
add
add
jo
pop
cmp
and
or
jp
iret
outsl
bound
outsl
jp
inc
or
inc
inc
pop
clc
imul
pop
xchg
add
push
aas
pop
sub
mov
jo
nop
or
pop
movsb
xchg
andb
sbb
flds
sub
adc
xchg
clc
movsl
insb
jmp
enter
out
movsb
xchg
jno
mov
cmp
aad
or
jmp
lret
mov
add
fldt
and
ret
fsubrl
nop
insb
sub
xchg
ret
dec
adc
pop
pop
stos
xchg
and
xorb
out
lds
jge
movsl
imul
ret
add
pop
add
push
xchg
dec
test
mov
ja
dec
push
imul
adc
push
and
mov
and
mulps
add
setg
mov
mov
mull
rcl
lea
add
or
mov
loope
sbb
push
jecxz
jo
out
cmp
lock
xchg
in
aad
pusha
push
movsb
push
and
add
xchg
mov
test
sub
leave
dec
and
je
sti
jae
push
lea
jne
in
inc
jmp
insl
and
jp
imul
pop
icebp
scas
xor
mov
inc
ffree
push
aam
fadd
arpl
scas
add
sbb
sbb
mov
adc
iret
xor
icebp
adc
dec
pop
cmp
or
push
jg
pop
lahf
inc
mov
pop
cltd
addb
jbe
and
jnp
cmp
sub
pop
mov
pop
xchg
loope
and
aaa
fs
xchg
mov
add
mov
push
ror
loope
rolb
xchg
or
lods
mov
mov
out
mov
movzwl
aad
inc
mov
insl
dec
fisttpl
inc
das
ret
xchg
sti
jp
addr16
or
add
cmpsl
lcall
sub
xor
aam
aam
push
inc
movsl
ret
or
insb
pop
mov
pop
dec
or
pop
and
cmpsl
sar
sub
insl
mov
xor
lock
mov
mov
pop
inc
and
cmpsl
cmp
fistl
ret
lds
bound
mov
push
cmpsl
mov
jno,pt
loop
mov
insb
mov
pop
mov
dec
into
sub
sub
mov
mov
lea
cmp
mov
xorb
add
sub
imul
andb
arpl
or
test
xchg
sub
sbb
shlb
shl
adc
cmp
xor
ret
ljmp
imul
mov
clc
ret
cwtl
das
mov
ret
xchg
xor
movups
adc
hlt
sub
mov
ret
jg
push
inc
inc
push
jle
ja
xchg
sbb
or
sbb
addb
mov
sbb
adc
mov
jmp
sbb
jmp
xchg
inc
pop
mov
mov
and
mov
pop
add
cli
inc
add
push
sub
repnz
rclb
inc
sbb
shl
loope
jp
lea
in
pop
insb
loope
mov
rolb
jecxz
arpl
sbb
stc
pop
xchg
and
and
lock
cltd
sub
add
dec
ret
xor
pop
sbb
inc
pop
in
sub
inc
into
xchg
cmp
push
dec
test
mov
fistl
rcrb
cltd
scas
cmpsl
movsl
stos
jmp
xchg
cltd
pop
cmp
mull
push
fimull
cmpsl
lret
das
lods
rcll
loope
push
add
sub
xchg
and
push
cld
jmp
push
dec
dec
repnz
mov
and
xchg
mov
sub
xor
or
adc
push
or
or
push
ja
insb
xor
xchg
mov
int
repz
jg
jno
arpl
pusha
mov
sub
imul
dec
pusha
push
sar
jge
jne
sbb
mov
out
jae
popa
jge
inc
add
js
mov
pop
sbb
imul
rolb
std
inc
pushf
adc
pushf
in
int3
or
or
outsb
pushf
into
pop
outsb
jno
popa
sbb
loopne
fidivrs
sub
and
xor
mov
ficoml
scas
jne
dec
xchg
lahf
sti
push
int3
dec
ss
mov
arpl
dec
push
insl
mov
xor
js
xorl
mov
roll
or
std
xor
mov
rclb
inc
je
pop
or
jge
pusha
aad
add
sbb
fwait
sti
outsb
jb
fiaddl
cmpsl
jmp
movsb
ret
es
lods
inc
test
cmp
das
dec
pop
ss
mov
ret
xor
fcmovnbe
mov
dec
inc
pop
or
and
xchg
lret
xorl
nop
push
cmp
dec
jb
aaa
push
stc
sub
lcall
imul
jno
sbb
lock
popf
jmp
faddl
rcr
or
ret
jbe
in
js
pop
mov
pop
daa
cwtl
dec
push
lahf
cs
sarb
mov
and
out
mov
cli
in
loope
jo
ret
sbb
sbb
inc
adc
push
shlb
imul
push
loop
les
mov
stos
pop
lahf
mov
inc
inc
pop
or
add
pusha
hlt
aam
outsl
xor
stc
decl
bound
mov
pop
cmpsl
out
sbbb
pushf
dec
mov
rolb
stos
add
pop
push
lds
xchg
mov
aam
mov
popf
inc
es
cmc
fstpl
sbb
sbb
dec
shll
or
jmp
ret
push
jmp
xchg
movsl
xlat
iret
dec
fs
lods
mov
pop
mov
les
int
sub
fmuls
and
or
xchg
adc
movsl
out
lahf
xor
std
dec
daa
add
adc
insb
sbb
loope
pushf
rolb
sbb
mov
lds
movsb
and
jge
push
sub
mov
adc
cmp
dec
xchg
and
pop
add
arpl
loopne
cmp
in
cmp
jg
sti
mov
popl
arpl
lock
test
xchg
pop
push
std
cwtl
ja
gs
test
jns
inc
maxps
xchg
push
sbb
notl
sbb
in
jmp
test
sahf
mov
ja
add
mov
sbb
movsl
mov
test
imul
scas
inc
mov
fwait
movsb
outsl
add
cmp
mov
add
inc
addr16
jo
or
pusha
mov
push
lock
lahf
lcall
or
es
cmp
ret
cmpsl
xor
cli
jge
push
lahf
insb
mov
and
xchg
mov
or
addb
rcl
xchg
jp
inc
mov
cwtl
js
mov
test
inc
popa
mov
or
or
cmpsb
stc
dec
and
jge
xchg
out
imul
pop
pop
sub
push
mov
pop
iret
xor
add
rorb
jae
xor
int3
in
das
stc
or
movsl
push
addl
pop
shlb
sub
jnp
popf
add
adc
ss
js
shrb
mov
push
xchg
pusha
test
jp
pusha
sub
push
or
jo
subl
stos
jmp
cmpsl
push
cmpsl
push
lret
fs
test
xor
jb
sti
stos
sub
add
pop
sbb
sarl
fldcw
dec
sti
add
adc
movsl
or
popa
sub
xor
nop
xor
jb
sub
fwait
sub
dec
jg
pop
pop
inc
inc
mov
sub
les
jo
pop
movsb
xchg
jp
cs
dec
cmp
push
inc
xor
sarb
call
es
xor
pop
sub
xor
adc
addr16
mov
adc
xchg
pop
push
lret
sub
dec
mov
ds
mov
sub
pop
jo
pushf
mov
in
jae
mov
jecxz
add
out
xchg
lods
mov
xor
push
add
das
imull
jecxz
mov
inc
pop
pop
inc
pusha
or
rorb
mov
add
das
pop
lods
insl
inc
ljmp
repz
pop
pop
mov
not
mov
lret
mov
inc
sti
aas
xor
inc
cmp
mov
cli
mov
nop
adc
mov
movsl
je
adc
push
mov
dec
lods
xchg
lea
sbb
jmp
inc
loopne
test
icebp
pop
push
movsb
rol
dec
cltd
lret
pop
push
sbb
in
mov
into
lret
leave
js
imul
cmp
add
cmp
xchg
push
jbe
mov
fwait
or
mov
or
xchg
xor
jnp
and
xchg
sar
lea
je
push
push
ss
adc
sub
xchg
lods
mov
cmp
jmp
out
cs
pop
mov
test
stos
mov
xor
xlat
mov
je
aam
add
mov
shr
fyl2x
mov
inc
fbld
jae
push
aaa
nop
dec
xor
stc
and
je
mov
jo
ret
ret
inc
movsl
push
jl
or
or
fstpt
js
xchg
adc
xchg
dec
repz
cmp
add
lahf
in
lret
add
out
nop
mov
fidivs
xchg
out
adc
xchg
testl
mov
lcall
test
or
gs
adc
ficoml
scas
add
iret
xor
fsubs
mov
ret
icebp
jno
mov
jecxz
dec
dec
rorb
push
xchg
mov
incb
xchg
mov
sub
mov
push
leave
test
push
inc
dec
out
xchg
or
fistl
push
mov
and
mov
lods
fldt
lret
push
scas
mov
jno
aad
xor
aad
inc
inc
or
lahf
aas
push
lea
xchg
sub
adc
jge
imul
sub
add
or
rol
pop
cmc
mov
push
dec
mov
mov
fcom
jnp
outsb
or
xchg
push
xchg
add
jle
fsub
sti
push
mov
bound
ret
nop
rclb
sbb
inc
add
and
mov
rcrb
jbe
sub
test
clc
rolb
and
icebp
inc
jmp
ret
jge
sarb
loope
test
cmp
orb
cmp
imul
or
nop
adc
sbb
dec
xchg
shl
mov
inc
cmp
push
xchg
push
add
xchg
sbb
jno
xchg
pop
mov
cli
jne
outsl
xor
incl
or
out
sub
imul
and
mov
add
adcb
ficoms
xchg
outsl
or
fwait
out
js
cmp
mov
xchg
ljmp
add
mull
divps
jns
lahf
sbb
cwtl
imul
aaa
mov
mov
cmpsb
arpl
push
push
sbb
jbe
popa
fcomps
pop
stos
jge
and
add
adc
add
jns
iret
rorb
ss
iret
xchg
mov
mov
pop
cmp
in
imul
shll
cmc
cmp
pop
mov
cmp
add
sbb
mov
outsl
and
sub
pop
popf
add
add
shr
xor
or
jnp
xchg
lret
ret
push
push
adc
pusha
push
cli
scas
xchg
dec
js
inc
xchg
jg
cmp
xchg
mov
or
orb
pop
lock
dec
mov
daa
push
lock
cmc
lret
inc
mov
or
add
fsubrs
mov
inc
lahf
outsl
pop
jne
and
out
jmp
ficomps
inc
dec
out
xor
dec
add
pop
test
dec
jnp
push
sti
sarl
addl
sarb
sysret
ja
inc
jecxz
or
inc
adc
adc
addr16
pop
sbbl
add
jnp
cli
push
jge
push
aas
addr16
arpl
xchg
data16
cmp
jns
lret
sbb
inc
das
inc
add
sub
movsl
jo
mov
mov
imul
ss
xchg
lds
sahf
sub
pop
xor
push
mov
jnp
loope
rcll
jbe
mov
insl
xorl
fwait
inc
xchg
mov
pop
xchg
loopne
rolb
and
ret
add
add
popa
xor
inc
cmp
dec
mov
imul
and
lods
sub
and
out
mov
gs
pop
adc
xchg
jne
adc
les
sub
inc
inc
dec
cmp
and
pushf
push
jp
push
or
stos
mov
insb
fistpl
inc
ficomps
add
xor
test
lods
dec
addr16
add
ret
in
loope
or
cmpsb
jg
flds
sub
push
sub
add
jbe
fwait
inc
fdivs
clc
scas
pushf
xchg
mov
inc
xor
mov
iret
jp
push
rcr
iret
sub
popa
xor
outsl
xchg
sbb
je
iret
insl
sbb
lock
test
dec
dec
push
adc
shll
shll
arpl
aaa
sbb
jnp
and
sbbb
or
clc
and
inc
jge
jle
sub
adc
or
sub
hlt
iret
and
loopne
dec
fstpt
inc
es
jnp
add
sbb
mov
ret
daa
mov
fstps
test
fldenv
adcl
cmpsl
pop
mov
xchg
popf
mov
push
xor
loope
xor
daa
mov
fstl
sub
stos
add
hlt
nop
inc
cmp
ud2
pop
repz
mov
int
outsb
dec
inc
rol
cmp
jae
jns
inc
sub
mov
jp
imul
mov
jae
divb
imul
lods
cmpsb
add
outsb
enter
adc
xchg
shrb
xor
movsb
movsb
push
add
mov
jno
mov
sbb
inc
jmp
cltd
lea
lods
rolb
loop
jae
and
inc
sbb
mov
movsb
mov
adc
shl
shrb
outsb
adc
jnp
mov
pushf
cwtl
adc
jo
scas
jno
push
mov
in
push
ja
push
or
or
in
ret
sub
xor
jle
mov
mov
call
and
rcll
add
sub
dec
sbb
adc
xor
movlps
xor
push
lret
mov
or
xchg
int
add
pushf
shrl
jns
push
cmp
loopne
mov
cvtpi2ps
add
sti
jge
pushf
push
roll
sbb
stos
shll
xchg
cmpsl
inc
or
and
push
push
rorb
pop
add
daa
shlb
outsl
mov
pop
mov
inc
cmp
in
sbb
cmp
mov
pop
mov
stos
push
jle
xchg
imul
xchg
ret
mov
sbb
add
dec
mov
addl
inc
adc
and
aaa
cmp
inc
mov
cltd
sbb
into
pop
pop
xchg
lret
mov
pop
mov
movsb
xchg
mov
dec
and
sub
mov
and
psubusb
fisubrl
stos
in
pop
pop
addb
shlb
cmp
cmc
and
enter
dec
ss
sbb
push
shrl
or
es
cmp
lcall
ja
mov
in
mov
dec
int3
lock
outsb
push
pop
dec
mov
sbb
neg
sub
sub
or
insb
sub
inc
cs
sbb
xor
xor
dec
cmpb
pop
mov
sbbl
js
iret
cmp
addl
call
sbb
push
mov
pop
xchg
cs
inc
lea
outsb
jne
ret
push
out
xor
inc
xchg
sarl
sub
pop
shlb
dec
dec
xlat
mov
pop
das
fadds
sub
lcall
cmp
mov
out
mov
stos
fucom
pop
cmp
enter
mov
int
in
mov
pop
sub
jo
sti
cli
movsb
jnp
mov
push
or
lock
cmpb
xchg
sub
fcmovnbe
mov
or
icebp
mov
xor
push
or
pop
test
in
in
dec
jo
jmp
and
fcompl
negl
or
or
push
mov
sbb
adc
icebp
pop
inc
jnp
xchg
adc
or
sti
lret
or
pop
and
addl
or
stos
shl
add
inc
scas
test
or
dec
lcall
mov
mov
xor
sbb
es
add
jno
xchg
jb
imul
dec
test
popa
adc
scas
lods
arpl
jno
push
inc
pop
mov
cmpsb
and
insb
cmpsb
dec
mov
adc
pop
pop
pop
popa
xor
incl
dec
inc
cwtl
fs
subl
sbb
cs
mov
sar
sbb
bound
xor
push
pop
pop
jmp
rcrb
ss
adc
cwtl
add
test
ltr
in
jge,pn
jno
insb
push
sbb
ret
mov
or
mov
ds
jo
pop
lea
inc
lods
add
fildll
pop
or
in
in
xchg
loop
or
out
pop
mov
push
out
inc
dec
dec
dec
shr
mov
sbb
or
mov
cmp
jb
jb
pop
or
push
sbb
or
lock
lds
cmp
mov
insb
mov
leave
dec
das
aam
ret
push
mov
insl
mov
mov
dec
sbb
adcb
pop
mov
or
jmp
mov
pop
test
inc
fs
pop
or
sbb
mov
cmc
and
nop
notb
lret
adc
fs
inc
stc
leave
and
ja
mov
and
inc
push
mov
and
test
test
dec
enter
mov
mov
ljmp
push
je
sub
sub
jns
clc
test
out
popf
enter
mov
sub
jge
faddl
xchg
cld
inc
sub
and
xchg
jno
jbe
dec
adc
ret
dec
nop
lret
pop
in
es
fs
in
dec
loopne
mov
pop
pop
movsb
ret
pop
jp
mov
push
xchg
xchg
jo
push
inc
jmp
aaa
mov
lods
dec
inc
sbb
lods
mov
add
loop
mov
xchg
fisubs
ss
push
adc
es
je
aad
cmp
lcall
and
adc
enter
enter
push
inc
orl
mov
push
mov
test
outsb
mov
ss
loope
inc
sbb
movsl
jo
les
out
and
push
mov
jnp
call
fsubs
roll
cmpxchg
jne
aaa
xor
divb
arpl
xor
loopne
inc
mov
aas
mov
mov
pop
in
ja
add
pop
xor
lds
xor
push
lds
ljmp
loop
fidivrl
mov
popa
push
sti
add
dec
mov
das
sbb
and
inc
and
push
fists
adc
js
xor
mov
insl
mov
imull
das
mov
mov
pop
inc
loope
loopne
or
pop
fsubr
loope
sti
imul
shlb
cs
dec
les
sub
xchg
dec
sarb
imul
push
fcmovu
inc
shl
lea
into
mov
out
inc
stos
loopne
lds
loope
add
insb
mov
sbb
sub
push
xor
xor
cmp
mov
sarb
xor
dec
and
or
xlat
popa
scas
and
or
or
mov
xchg
rcrb
push
mov
ret
xor
push
aad
dec
subl
imul
push
add
jne
mov
insl
jl
jno
insl
loope
rorb
scas
mov
jge
lret
neg
loop
int
shl
aaa
dec
rcrl
jb
cmp
sub
push
and
mov
unpckhps
push
xor
mov
imul
not
add
and
cmp
xorb
xchg
shrb
test
push
sub
pushf
aad
pusha
fdivr
test
add
daa
scas
mov
adc
sbb
imul
popa
fsubs
adc
loop
push
mov
add
mov
int3
inc
xlat
daa
xor
add
cmp
lock
and
adc
dec
sbb
andl
rcll
scas
lods
push
jge
mov
adc
add
arpl
mov
out
push
inc
cmp
mov
and
and
jecxz
sub
nop
jo
mov
iret
add
mov
inc
enter
mov
sub
sbbl
lcall
push
jnp
scas
cmpsl
add
cmovns
scas
sbb
inc
or
adc
bt
dec
push
scas
adc
outsl
dec
mov
sbb
jnp
inc
jge
adc
imul
sahf
sbb
jb
js
scas
in
xchg
push
lods
fnstenv
xchg
out
jns
xchg
cmpsb
push
sub
and
xlat
inc
shrl
jne
adc
mov
pop
sub
lods
lret
push
or
adc
xchg
js
and
sbb
arpl
repz
mov
pop
add
mov
ret
imul
jns
movsb
sbb
into
cmpsl
mov
imul
call
nop
inc
fisubl
and
or
int
mov
cmpsb
in
or
test
inc
push
mov
sub
xor
cld
adc
stos
mov
shll
jno
pop
cmp
fs
mov
shll
push
sbb
pop
lahf
mov
out
pop
inc
loopne
push
xor
test
ret
outsl
inc
inc
lcall
xchg
rolb
mov
sub
movb
dec
adc
mov
mulw
jb
aas
ror
sub
add
ss
imul
jmp
fldl
pusha
mov
mov
les
test
xchg
movsb
add
je
fldcw
push
and
scas
bound
mov
jmp
adc
lret
cmc
xchg
imul
xchg
sub
scas
js
and
sub
inc
sbb
mov
scas
pop
xor
mov
xor
inc
cmp
fdivl
icebp
inc
and
mov
dec
out
neg
mov
es
addl
inc
or
jg
add
cld
push
mov
out
bound
pusha
pop
jp
mov
push
in
adc
mov
add
insb
jne
arpl
sti
in
jecxz
outsb
xor
aad
fmuls
add
in
xor
and
xor
stc
and
in
push
fidivrl
ret
ror
mov
and
pop
adc
loope
repz
dec
push
push
pop
jge
stos
push
pop
shll
adc
and
mov
and
or
fistl
sub
cmp
jg
sub
pop
mov
sub
movsl
and
and
movsb
dec
dec
sub
dec
imul
mov
sub
mov
pop
cltd
ss
and
shll
jne
call
sub
sbb
dec
rorb
xchg
xlat
jge
cmp
mov
add
in
xchg
xchg
popa
push
imul
sbb
clc
fs
cmp
mov
or
jbe
jl
mov
inc
dec
or
movsl
test
stc
and
lock
push
sbb
jb
sub
enter
adc
xor
mov
popf
sub
imul
je
sbb
dec
cmp
popa
in
sub
hlt
dec
mov
test
lea
popa
sub
xlat
mov
sbb
push
pop
mov
xor
les
icebp
dec
aas
add
or
call
fists
scas
jle
or
sub
mov
pusha
imul
xor
mov
fistl
ror
cmp
insl
dec
ret
xor
mov
sbb
lea
add
stc
rclb
ljmp
xchg
sub
mov
fistpll
iret
push
cmp
mov
mov
aaa
xor
push
fiaddl
jge
lret
enter
push
or
sub
jb
dec
nop
cmpb
add
leavew
pop
sub
jne
sub
jbe
cmp
pop
and
rol
jp
cmp
jmp
test
xlat
daa
jno
out
mov
sbb
mov
or
push
lock
das
sbb
adc
jge
inc
call
pop
pop
das
jmp
fcoms
sar
adc
addl
inc
jo
lds
sti
sahf
dec
enter
aaa
les
sub
pop
adc
divb
xchg
gs
mov
jle
adc
incl
jge
das
jne
pop
jbe
roll
nop
xchg
cmp
mov
mov
out
dec
mov
mov
mov
lea
out
push
mov
push
xor
jge
sub
imul
daa
mov
mov
pop
xor
rcr
scas
inc
pop
or
mov
in
and
daa
iret
call
mov
cmpsb
leave
ret
stos
adc
dec
mov
daa
pop
loopne
add
repz
push
das
mull
loopne
std
fcmovnb
adc
or
add
push
sub
inc
dec
add
sub
push
and
pop
fwait
inc
mov
lock
dec
aam
addr16
add
pop
add
and
mov
or
aad
pusha
add
adc
cmp
fimuls
mov
adc
xchg
popa
outsb
mov
out
pop
js
push
sub
repz
jl
mov
cltd
test
bound
push
inc
les
mov
sub
gs
sarb
add
push
inc
sub
insl
pushf
daa
dec
mov
jmp
cmpsb
add
inc
pop
subl
gs
pop
loopne
xchg
xor
test
sbb
jno
sbb
push
dec
add
cmp
lods
sub
push
mov
inc
inc
inc
or
ljmp
push
test
cmpsb
in
js
inc
sbb
rolb
les
mov
insl
or
sub
dec
cmpsl
hlt
test
popa
loopne
sbb
jae
imul
push
ret
jno
jne
in
sub
insl
mov
pushf
outsb
or
xor
adc
test
and
sahf
faddl
mov
cwtl
add
xchg
sub
sbb
and
aaa
adc
push
adc
bound
inc
sub
daa
daa
cmp
jge
cmp
pop
out
dec
pop
adc
cmovae
scas
icebp
pusha
lret
add
add
jo
test
pop
and
jne
adc
ret
sbb
in
and
aad
inc
jge
loopne
pop
fs
add
and
cli
in
inc
dec
popa
xchg
sbb
mov
shlb
adc
jmp
xchg
enter
mov
add
pushf
xchg
lods
jae
and
loop
in
jne
je
jno
test
mov
jns
add
movsl
push
lret
jo
daa
cmp
jns
int
xor
jg
push
js
adc
lea
mov
imul
shll
mov
or
in
nop
jle
and
adc
pusha
insb
inc
popa
adc
add
xor
xchg
loopne
idivl
sub
loopne
cmp
push
mov
scas
mov
repz
mov
pop
loopne
in
add
test
shlb
fwait
mov
mov
sbb
aad
mov
mov
xlat
push
sbb
pop
sub
ss
sar
daa
xchg
lret
js
add
add
leave
in
loop
or
pop
jae
das
or
sbb
js
dec
out
cmpsb
jne
jb
je
enter
mov
sbb
test
clc
push
cmpsb
mov
inc
inc
mov
orl
shl
jmp
rcrl
insb
jo
add
jne
lret
sbb
roll
lock
int
fcoms
ja
push
repnz
or
mov
adc
ret
and
sub
pop
xorl
push
mov
test
fadds
jmp
arpl
push
aaa
push
add
mov
push
pop
inc
inc
sub
mov
clc
mov
inc
aad
cmp
jbe
mov
jge
rcll
pandn
cmp
lret
add
push
inc
sahf
mov
jl
sarl
mov
xchg
cld
cmp
les
cmp
aas
push
sahf
inc
clc
sub
cmp
adc
xor
lock
mov
and
xchg
adc
sub
mov
and
lock
and
sub
and
bsr
notb
in
mov
shlb
adc
mov
pop
push
jp
cmpsl
das
add
xchg
add
daa
sub
mov
add
fbstp
ret
mov
jnp
mov
sub
test
addl
jl
push
iret
lret
sbb
ss
sbb
cmpb
sub
xor
fdivs
shr
aam
xor
jno
lahf
sub
add
stos
push
mov
add
iret
mov
and
sti
push
add
and
lret
fsubrl
and
ljmp
pop
jns
les
sbb
adc
ficompl
stos
daa
and
xor
mov
mov
aam
stc
jmp
mov
into
pop
pop
mov
inc
sub
dec
dec
cmpsb
imul
and
jno
lds
adc
cmpsl
cli
sub
pop
sbb
sti
pop
decl
adc
outsl
sub
mov
rcr
xlat
mov
fcmovbe
mov
mov
adc
cltd
js
test
jb
push
dec
inc
popa
inc
adc
cmp
mov
or
sub
pop
inc
mov
repnz
icebp
cmp
in
bound
cmp
dec
out
loope
and
ljmp
jne
pop
add
inc
sbb
mov
push
ja
mov
insb
or
sbb
dec
push
loop
nop
sahf
lock
sub
in
mov
add
xchg
add
mov
dec
inc
lock
push
outsl
orb
xchg
rolb
adc
pop
sub
scas
pop
cmpsb
jo
and
xorl
outsl
push
sbb
xchg
ret
movsl
pop
sbb
sub
andl
insb
jno
in
addr16
ret
fwait
mov
insl
sub
adc
mov
daa
sub
add
sbb
mov
or
fs
push
rorb
or
in
adc
push
frstor
es
sbb
shrb
int3
ss
xchg
inc
repnz
adc
add
rorb
pop
dec
add
xor
cltd
xor
or
mov
sub
les
sub
sbb
rcl
aad
mov
xchg
sbb
dec
fldl
stos
jo
andl
js
lret
shrb
lea
stos
lds
ss
andl
pop
dec
loope
mov
nop
cmp
lahf
add
xor
mov
aaa
mov
test
sub
mov
das
in
cmp
mov
adc
cmp
dec
popf
mov
dec
cmp
xor
call
push
adc
rcr
addb
lds
popa
cltd
dec
pop
lret
call
insb
pop
fcmovnb
jo
push
dec
jecxz
loope
int
nop
xchg
pop
push
jl
jl
repz
mov
jmp
loopne
mov
daa
and
pop
js
sbb
movsb
lods
push
insb
popa
sbb
adc
ljmp
add
call
xor
mov
rorl
cmpsb
ret
inc
mov
jmp
test
xchg
js
sbb
rcrl
push
lret
mov
inc
sarl
mov
test
and
ret
rorl
sbb
arpl
aad
add
adc
add
or
adc
fs
leave
je
dec
sbb
iret
popf
xor
imul
xlat
popf
pop
les
xchg
push
jo
int3
adc
gs
decl
mov
test
sbb
jmp
push
mov
xchg
mov
xchg
or
fisttpl
mov
mov
mov
fstl
loopne
pop
out
insb
lds
mov
push
xor
mov
scas
inc
fisubl
stc
insb
adc
mov
cmc
push
push
insl
sbb
mov
pop
rorb
pop
fisttpll
pop
xor
enter
jne
pusha
test
std
dec
sbbl
sbb
adcl
add
subl
movsb
dec
test
jnp
sbb
adc
xor
dec
mov
pop
nop
sbb
push
je
xchg
hlt
add
xor
cwtl
add
sbbl
push
inc
sbb
jecxz
pusha
mov
sbbb
inc
push
xor
xor
cmp
test
push
stos
push
aad
mov
rolb
mov
icebp
add
into
xor
std
and
inc
rolb
loopne
push
aaa
push
loopne
push
push
aad
mov
cmp
inc
es
push
outsb
notl
fcomip
aas
jg
ret
xchg
xchg
adc
sub
push
lahf
and
and
ja
movsl
lahf
rclb
or
mov
inc
or
push
cli
adc
scas
pop
cmpb
or
sub
push
popa
aad
adc
test
cmp
scas
xorb
mov
lea
inc
xchg
jo
sub
shlb
filds
rclb
push
lea
inc
jo
dec
fucomp
cli
jno
xor
test
popf
add
mov
movsb
sub
and
and
inc
inc
cmp
jmp
adc
jns
rol
insl
pop
mov
mov
lds
lahf
mov
inc
or
jno
stos
sub
and
jmp
or
mov
xchg
outsl
xor
lahf
sub
xor
xchg
lret
jo
test
push
scas
dec
arpl
imul
mov
ret
push
popa
push
xchg
sbb
imul
imul
lret
xor
hlt
test
mov
mov
inc
cmpsl
inc
jmp
xor
inc
icebp
shrb
mov
cmovno
pop
je
ss
mov
inc
mov
xor
adc
mov
cmpsl
sub
inc
inc
xor
dec
sub
cmp
cmp
inc
pop
sbb
enter
add
mov
or
dec
test
cmc
rcl
dec
or
inc
aad
pop
sub
cmp
mov
or
into
je
push
in
xchg
out
outsb
push
dec
inc
jp
add
and
jmp
aad
xchg
dec
mov
mov
xchg
jo
mov
jo
xlat
in
cmp
push
std
test
movsb
sbb
sbb
inc
ja
mov
cmp
icebp
dec
add
inc
shlb
pop
jg
cmp
pusha
push
or
or
insl
dec
mov
cmpsb
js
and
pxor
cmp
outsl
add
daa
inc
xorl
mov
xor
add
xor
pop
mov
in
mov
or
or
push
adc
dec
inc
aam
std
mov
pop
push
cmp
les
push
test
mov
imul
xor
sub
mov
inc
loop
daa
jbe
sbb
inc
or
frstor
lds
cmp
fwait
lods
sti
adc
adc
mov
dec
loopne
adc
daa
test
mov
add
sub
xor
gs
inc
push
loope
mov
cmc
orb
and
sub
mov
add
and
std
shlb
fiaddl
clc
inc
sbb
dec
or
movsb
inc
lods
fadds
adc
fbstp
aam
imul
sbb
enter
inc
dec
or
pushf
clc
mov
cmp
mov
hlt
test
jbe
mov
inc
sbb
filds
popa
test
loopne
push
mov
popa
inc
jmp
push
mov
xchg
or
and
bound
outsl
mov
sub
xor
jp
inc
pop
xchg
and
das
sbb
jae
inc
out
add
cmpsl
pop
lcall
imul
aaa
outsb
adc
loope
orb
xorl
sti
mov
push
xor
in
lea
loope,pt
jmp
gs
popf
and
adc
and
outsb
mov
adc
js
and
jb
aaa
sbb
out
mov
inc
adc
dec
jge
call
jne
aam
or
das
pop
cmp
inc
in
xor
pop
and
cmp
xchg
xchg
inc
xor
sub
je
sbb
icebp
cld
inc
jno
xchg
mov
xchg
jle
andb
add
dec
lret
add
xchg
mov
pop
call
pop
xchg
inc
cld
loopne
sti
or
mov
sbb
mov
inc
das
xor
dec
pop
popa
inc
mov
cmpsl
or
add
push
mov
cltd
or
mov
fcom
dec
adc
orb
dec
xchg
mov
rolb
rclb
loopne
adc
xchg
adc
cmp
jb
jecxz
dec
mov
pop
loopne
sub
cmp
movsb
loope
inc
add
shll
scas
and
pop
cmc
pop
les
mov
test
add
adc
or
pop
dec
xlat
sbb
dec
roll
cmp
in
push
jo
sbb
mov
mov
dec
loope
jns
or
or
scas
pop
call
fdivs
js
cltd
rolb
pusha
cmp
jl
jecxz
or
and
cwtl
xchg
dec
lds
and
mov
pusha
add
inc
or
daa
sub
push
sbb
jg
ljmp
adc
lret
mov
mov
pop
popa
cmp
out
inc
popa
jp
cmp
xchg
add
sahf
pop
pop
or
lret
jle
lea
and
loope
add
rorb
xchg
sub
scas
div
pusha
sub
mov
cmc
test
xchg
sbb
and
jecxz
andl
and
jno
mov
xor
sub
inc
mov
jae
mov
mov
and
adc
outsl
cmp
and
pusha
pusha
add
cmp
jbe,pn
fsubs
mov
lock
mov
repz
jo
aad
pop
xor
mov
enter
adc
or
leave
hlt
xchg
in
dec
clc
push
inc
subl
mov
inc
xchg
pusha
mov
aad
mov
or
mov
cmp
mov
rcrl
push
cwtl
jne
mov
arpl
pop
les
repnz
lods
xchg
add
in
cmp
subl
icebp
cwtl
arpl
mov
sub
jne
test
jbe
sbb
push
mov
cmp
or
pop
sbb
xor
jne
gs
test
or
xchg
jnp
ffreep
and
in
sbb
dec
xchg
jns
cmp
jnp
push
xchg
mov
fidivs
lahf
mov
mov
push
scas
push
imul
movb
popf
imul
mov
or
push
icebp
arpl
sub
jns
orl
cmp
lock
sti
pop
add
lods
inc
or
and
add
sub
test
cmp
ljmp
and
add
fcmovnu
mov
mov
push
dec
jns
and
les
js
adc
std
call
daa
fdivrs
cmp
arpl
sub
sbb
inc
mov
cmp
lods
shlb
mov
jge
js
test
in
lret
outsb
fbstp
mov
or
dec
in
add
xchg
out
xchg
mov
push
seta
cmp
clc
push
popl
mov
dec
ret
loopne
cld
cltd
cmp
ret
ljmp
sbb
inc
imul
fbld
enter
add
add
mov
mov
or
and
cmp
mov
push
es
jecxz
add
xor
mov
push
iret
or
mov
mov
lock
test
pop
and
addb
xchg
inc
stos
xchg
stos
jae
mov
repnz
mov
mov
xor
clc
pop
shlb
or
test
cmp
mov
push
cwtl
call
mov
std
out
mov
mov
inc
jecxz
cmpsl
movl
jo
add
aas
or
daa
rclb
sub
cld
pop
subl
lcall
loopne
lea
inc
data16
and
ljmp
sub
sahf
adc
das
cli
mov
insl
and
aad
les
xchg
ds
sub
dec
mov
insl
mov
in
cmp
xor
xchg
jmp
jl
or
jecxz
and
xor
xlat
orl
gs
out
loopne
ljmp
inc
dec
dec
xor
jecxz
das
sub
outsb
lahf
sub
and
js
mov
aad
fst
mov
sbb
sti
fisttpl
push
fidivrl
fisubs
cmp
repz
cmp
in
cmpsl
cmpsl
shl
popa
ret
int3
or
mov
cmpsb
clc
and
andl
loope
inc
jo
stos
xor
mov
adc
sbb
movaps
adc
cmp
loop
dec
jmp
sahf
stos
jmp
or
xchg
pop
xchg
cmp
sub
mov
movsb
cmp
and
ja
rcrl
jp
sarl
push
xor
fstpl
in
sbb
push
addl
add
push
in
cmp
cmp
sub
lret
inc
add
pop
mov
mov
jp
adc
dec
push
mov
clc
in
fwait
mov
lods
sbb
scas
cmp
adc
lahf
push
mov
push
mov
mov
loop
jg
in
push
lock
push
adc
js
sub
xor
cmp
push
popa
add
rorl
lods
test
js
xor
in
mov
push
and
jp
loopne
inc
movsl
insb
push
lea
add
leave
inc
mov
out
sbb
sbb
cld
scas
xchg
pop
add
fistps
xchg
and
iret
add
push
leave
ret
rcrb
je
cmp
or
ret
lea
mov
sbb
jo
popa
inc
jno
movsl
adc
push
mov
or
inc
jnp
or
xchg
popa
ja
std
enter
add
mov
movsl
lds
push
xchg
mov
sbb
out
push
xor
inc
inc
in
xor
loop
inc
jbe
outsl
pop
add
sbb
xchg
or
sbb
arpl
rcll
add
mov
sub
adc
cwtl
imul
lahf
jp
lret
ljmp
inc
and
outsb
movsl
pop
push
notl
dec
cld
pushf
cli
mov
roll
mov
enter
outsl
insb
cmp
jmp
notl
addr16
lahf
fistpll
mov
cltd
rclb
out
addr16
stos
je
and
mov
mov
or
sbb
add
or
pop
adc
sub
cld
dec
fwait
mov
jbe
push
xor
popf
bound
loope
mov
inc
in
xchg
adc
dec
and
in
cmpsl
fistps
sub
test
lds
test
loope
js
icebp
pop
inc
cmp
rolb
lock
fdivr
fsubrl
arpl
loop
xchg
std
idivl
loope
inc
push
push
outsl
adc
js
ljmp
ljmp
jae
add
xchg
push
or
sub
bsf
xchg
cmp
pop
stos
mov
mov
in
jb
nop
and
xchg
lods
ljmp
adc
inc
pop
sub
inc
lea
int3
xor
sub
xchg
movsb
mov
lret
fwait
xchg
mov
loopne
pop
push
xor
fsubl
pushf
sub
test
jl
out
mov
ds
notb
push
sbb
dec
add
dec
add
icebp
inc
inc
add
ret
cli
div
push
nop
cmp
sub
mov
or
inc
lds
rclb
add
sbb
lahf
adc
push
lahf
lods
sbb
ret
daa
pop
sbb
mov
or
shr
imul
ljmp
adc
cmp
and
fists
pushf
fmuls
push
sarl
mov
adc
fists
sbb
dec
sbb
cli
adc
sub
ds
andl
sbb
jb
and
popf
cmpsl
mov
shll
or
cvtps2pi
mov
pop
popf
loope
test
jle
clc
xchg
in
ds
mov
mov
mov
jo,pn
sbb
shll
cmc
add
gs
pop
cmp
push
cmpsb
aas
add
jl
daa
sub
or
pop
cmp
rorb
dec
sub
adc
movsl
enter
sbb
xor
fldt
or
inc
dec
add
inc
cmp
ss
fstps
mov
mov
mov
aad
or
icebp
add
add
add
mov
rolb
or
sti
add
inc
add
cs
pop
call
or
ficompl
push
addr16
adcl
push
call
adc
xchg
es
andl
pop
cli
dec
stc
pop
push
dec
lea
adc
xor
mov
xchg
push
add
sub
pop
xlat
push
sahf
add
push
mov
xchg
imul
sub
outsl
add
pop
dec
loop
inc
or
adc
jg
fs
inc
sbb
cmpsl
xchg
push
dec
test
stos
je
hlt
imul
inc
push
push
aaa
test
adc
mov
fstpt
jmp
and
fnstenv
sbb
sub
in
mov
mov
xchg
mov
cmc
or
jecxz
in
sub
or
pop
dec
lods
mov
and
bswap
xlat
jge
xor
movsl
ljmp
or
jl
cmpsl
sbb
push
call
sub
stos
push
jle
cmp
ds
and
mov
adc
mov
insl
or
dec
pop
shll
or
int3
popa
cmp
push
mov
jmp
lret
js
lock
dec
adc
inc
imul
xor
dec
xor
mov
pop
pop
stos
or
cmp
sub
and
das
xor
or
test
xor
cmp
cmp
ret
aad
pop
xlat
sub
jbe
daa
outsl
sbb
bound
sub
cmp
les
hlt
lds
lea
es
or
mov
jecxz
xchg
dec
xor
fld
sbb
cltd
icebp
mov
scas
in
lods
andb
inc
movsl
and
sbb
and
push
add
adc
in
dec
sbb
xchg
mov
outsb
in
cli
out
ljmp
nop
frstor
int3
xchg
mov
xor
das
fiadds
rep
shrl
sub
je
mov
jb
fiaddl
add
xchg
dec
jp
popf
roll
rorl
inc
dec
test
sbbb
loopne
mov
aam
jmp
and
xchg
hlt
inc
or
jge
cmp
aaa
xchg
mov
je
jge
ljmp
or
jno
xor
rcr
add
repz
scas
js
or
pop
sub
dec
pusha
stc
nop
frstor
adcl
sub
lahf
pusha
jno
rol
lods
adc
pop
sub
xor
add
in
out
sti
rcll
cmp
jno
mov
xor
arpl
enter
pop
sub
leave
jmp
stos
inc
and
sbb
fs
sti
xchg
sarl
cmpl
sbb
mov
scas
sub
std
mov
jg
cmp
cmp
shrb
notb
and
jae
cltd
shrl
or
push
xlat
fs
imul
sti
push
pop
lock
lret
js
lods
daa
xlat
jo
test
jne
dec
sub
push
rcrb
inc
jp
nop
sub
cltd
mov
ret
sub
in
aad
outsl
inc
cmp
cwtl
xor
dec
lods
dec
add
pop
cmp
call
mov
inc
lea
in
lahf
or
jg
rcll
xor
andl
mov
cmp
cmp
jge
pop
test
pop
shlb
loope
or
xchg
push
sub
mov
and
sbb
imul
mov
out
sbb
les
addr16
movl
and
cs
dec
add
mov
and
inc
mov
cmp
mov
jmp
xor
inc
cwtl
stos
imul
xor
add
dec
cmc
xchg
rolb
push
sub
aam
dec
sub
test
mov
xlat
jno
call
dec
or
xor
xor
jg
fwait
dec
pop
clc
push
or
movsl
xor
out
ljmp
jp
xchg
andb
les
dec
jb
push
push
add
adc
adc
sub
dec
out
jmp
stos
adc
rol
fwait
or
test
scas
icebp
outsb
sub
mov
xchg
jge
popa
movl
adc
jmp
inc
sub
out
mov
fildl
adc
movsl
push
adc
xlat
pop
mov
lock
sbb
shlb
push
lea
sbb
fldcw
fdivl
cmp
ret
scas
iret
movsb
sar
pop
add
and
in
inc
xor
outsl
mov
cmp
mov
add
mov
loopne
pop
pop
adc
jl
bound
popa
dec
sarl
mov
sbb
and
inc
sti
sub
popa
adcl
out
push
sbb
mov
fidivs
mov
add
xor
pusha
mov
ret
notl
adcl
add
int
dec
jbe
scas
jae
faddl
sub
pop
repnz
add
dec
cwtl
mov
adc
add
cmp
xchg
cwtl
adc
rol
sub
jnp
shl
xchg
pop
loopne
loopne
or
and
and
xor
push
notl
push
orl
add
lret
jp
cmpsl
sub
xchg
in
xchg
and
cmp
cmpsb
and
loop
aad
mov
cmp
xor
jmp
mov
and
rorb
and
sub
ret
test
adcl
mov
cs
dec
xchg
sub
and
cltd
fiadds
jbe
aam
clc
push
mov
aad
and
mov
mov
sbb
cs
add
xchg
ret
cmpsb
or
outsb
and
pop
mov
ret
jmp
mov
ret
add
sbb
jne
outsl
and
clc
inc
pop
or
and
sbb
jno
adcl
pop
xchg
outsb
out
popf
fcoml
or
cmpl
pop
mov
pop
mov
into
mov
add
bound
push
xchg
nop
add
lods
adc
les
cmovne
stos
jne
loope
jnp
mov
or
aam
inc
pusha
mov
pushf
shl
aam
inc
sub
add
nop
jmp
sbb
out
cmp
shlb
and
and
xchg
rclb
lods
shr
movsl
je
mov
in
in
xor
aaa
pop
sub
rcrl
dec
in
dec
mov
mov
jmp
notb
jns
jmp
dec
int
push
les
mov
cmc
xorl
daa
ret
push
cmp
inc
mov
or
pop
fwait
hlt
and
aam
imul
aaa
push
push
inc
lahf
add
sbb
add
aaa
aam
scas
stc
pop
cmp
or
jecxz
xchg
inc
das
in
jne
dec
test
fwait
xchg
push
gs
jno,pt
cs
mov
lods
jg
or
inc
cmp
out
or
fucomi
adc
mov
push
adc
pop
clc
test
push
mov
addr16
add
es
pop
dec
movsb
imul
cmpl
adc
jmp
ret
push
push
lret
imul
adc
outsb
sub
add
or
adc
add
jg
lods
xchg
fs
jne
loopne
fsubrl
fdivr
push
pop
cmpsb
loopne
sbb
xchg
shlb
xor
cmp
fwait
adc
lahf
shlb
hlt
inc
orl
push
add
and
enter
or
sbb
jne
movsl
or
rcl
sub
insl
ds
in
jmp
and
and
arpl
daa
jo
cmp
stc
pop
je
int
stos
xor
push
aaa
sub
lods
mov
jno
push
popa
sahf
scas
pop
push
test
das
cmpsb
jnp
and
push
test
xchg
subl
mov
jge
jno
xchg
adc
jb
subl
xor
adc
nop
jmp
das
dec
in
jae
dec
outsb
fst
sub
sbb
mov
movsl
ret
ret
hlt
xchg
enter
xchg
and
mov
lret
jg
inc
pusha
call
inc
mov
popf
and
mov
xchg
rclb
xor
push
sbb
lahf
cmp
iret
mov
lock
ss
je
jae
push
cld
sub
stos
aaa
inc
add
push
push
or
aas
cmp
clc
js
fistpll
popa
jl
jb
scas
inc
imul
inc
setb
jne
inc
push
aas
dec
mov
adc
push
and
leave
xlat
daa
add
jo
add
out
test
sub
imul
loope
adc
fsubrs
pop
jns
cli
mov
out
push
sub
xor
rol
lcall
xor
hlt
xor
push
lds
jno
outsb
and
and
je
nop
movsl
mov
jne
or
rep
add
stos
ret
sub
add
lods
test
push
inc
negl
dec
iret
jno
and
mov
arpl
push
or
jne
fisubl
imul
pop
das
sub
sbb
or
jnp
xchg
sub
test
jmp
push
test
test
faddl
xor
and
js
mov
cmp
or
pop
fiadds
and
cmp
popa
scas
ret
dec
mov
rcrl
and
push
adc
popa
mov
xorb
add
lret
arpl
faddl
xchg
add
push
sbb
push
push
ret
stos
sbb
fldl
xchg
inc
ss
scas
aam
jno
pop
aaa
pop
movsb
jno
lods
sub
or
dec
or
je
jp
js
xchg
jle
insb
add
or
imul
pop
les
mov
movsl
mov
js
out
test
rorl
mov
pop
inc
adc
or
fwait
jmp
pop
outsl
insl
jmp
mov
dec
pop
cmpsb
loopne
shll
popf
fiaddl
out
stos
gs
aam
or
adc
fsubl
or
push
push
adc
arpl
sub
outsb
stos
out
mov
fadd
adc
xor
cmp
jmp
or
loopne
fisubrs
or
sbb
mov
add
add
test
mov
in
mov
mov
xchg
push
inc
rcrl
dec
adc
add
xchg
rep
lea
pop
add
jo
lods
sti
mov
fcmovnbe
push
je
dec
lea
cs
inc
out
inc
or
and
or
push
cmp
push
fbstp
adc
and
shll
add
fsubs
adc
push
sbb
pop
aas
rcl
xorb
xorl
dec
mov
sti
hlt
imulb
xor
mov
rcl
dec
push
ja
adcb
inc
push
mov
mov
rolb
cmp
ret
xor
insl
dec
cmp
pop
das
cli
int3
cmc
dec
fs
mov
dec
dec
add
cmpsl
rcll
xchg
sub
or
pop
xor
test
addb
xchg
pop
fisubrs
or
cwtl
xchg
add
xor
rcr
sbb
jne
add
add
jb
ret
loope
daa
sbb
into
pop
ljmp
mov
inc
dec
and
popa
sbb
ffreep
add
rorb
sbb
inc
xor
rorl
or
call
sub
or
cmpsl
inc
or
shll
lods
adc
mov
pop
ss
add
jl
and
push
addl
adc
pop
mov
repz
cmpsl
aas
xchg
push
xchg
nop
test
or
movb
push
pop
mov
js
mov
aaa
ret
roll
add
ret
aad
pop
xorb
hlt
clc
and
stos
stos
xchg
out
xchg
outsb
or
lea
jne
xor
xor
adc
dec
dec
arpl
mov
enter
iret
add
js
in
lds
pusha
rorb
aas
push
adc
and
dec
popa
push
cmp
fsubs
mov
xor
gs
dec
dec
add
insl
mov
push
test
rclb
pop
or
and
outsl
std
or
xchg
je
xor
mov
iret
mov
daa
stos
or
jge,pt
cli
pusha
push
lret
jg
dec
sub
pop
jecxz
inc
test
imul
add
aas
loopne
mov
pop
dec
xchg
mov
xchg
mov
adc
lcall
rolb
mov
add
adc
popa
dec
hlt
fcomps
dec
aad
test
daa
lret
mov
js
cmp
nop
push
jp
cmp
scas
lret
lods
inc
mov
cmp
or
imul
jns
aaa
orl
clc
arpl
ss
pop
dec
jb
pop
sub
mov
and
std
or
ja
sbb
xchg
pop
jno
test
and
lea
icebp
movsb
aam
test
inc
movsb
and
inc
or
out
push
loope
rcrb
jo
xor
jg
das
add
xor
pop
jle
xor
and
jle
sahf
add
mov
pop
add
sbb
int3
lret
sarl
inc
fcoml
lods
xor
sub
inc
adc
push
jp
sub
xchg
sub
daa
popa
mov
adc
or
mov
or
sbb
pop
sub
loopne
test
loopne
mov
add
inc
push
cmp
pop
or
sbb
rorl
cmpb
inc
xor
je
pop
test
sub
push
adc
dec
ret
in
dec
or
or
inc
dec
insl
loope
icebp
gs
mov
xor
push
insb
inc
pop
ret
pop
pop
mov
int3
sti
add
inc
adc
xchg
movsl
fistpll
stos
adc
outsl
insl
lods
mov
add
aam
movsl
xchg
orl
adc
shrl
inc
pop
ja
add
cwtl
dec
xchg
rorb
popa
rcll
fucomp
cltd
add
in
popa
xchg
adc
sbb
mov
clc
or
add
call
adc
test
fiadds
shlb
mov
pop
add
cmp
sub
mov
pop
mov
mov
aas
pop
add
rorl
dec
insb
cmpl
pop
ds
add
pop
pop
inc
add
mov
xor
mov
out
mov
sbb
pop
inc
pop
push
adc
and
imul
pop
fdivr
imul
aam
cli
js
push
out
lods
adc
cmp
dec
sbb
insb
and
sub
aaa
sub
jo
ret
lcall
insb
sub
in
inc
rsm
dec
clc
sub
in
les
dec
cmp
adc
jecxz
xor
add
xor
mov
cltd
jb
sbb
cmp
out
aaa
or
push
imul
test
mov
jno
in
cs
add
call
mov
sbb
add
mov
and
mov
jbe
inc
xor
xor
sbb
jmp
jns
and
cmp
xchg
ss
mov
sbb
and
add
pop
ret
clc
in
and
add
and
sub
xorb
mov
add
inc
push
add
pop
in
fstp
xor
push
adc
xchg
and
xchg
jb
adc
sub
adcb
or
ja
pop
adc
pop
mov
jnp
sarb
sarl
push
inc
andb
iret
cmp
sbb
aad
nop
fiaddl
addr16
xor
mov
outsl
fnstsw
lea
jo
loope
ret
shlb
leave
in
mov
adc
xchg
or
ret
xchg
push
and
inc
imul
adc
mov
jae
loopne
inc
loop
add
sub
push
push
dec
xchg
mov
shll
and
popf
cs
rolb
iretw
je
packssdw
imul
pop
cmp
sti
int3
clc
adc
out
dec
aaa
nop
adcl
pusha
inc
pop
sub
test
add
xor
or
cmp
inc
pop
sbbb
push
mov
iret
xchg
and
sub
jo
jae
arpl
lods
mov
or
push
cli
and
bound
xchg
adc
pop
dec
inc
mov
cmp
add
shll
adc
mov
test
lahf
addr16
or
add
pop
scas
or
es
fsubs
and
push
test
mov
and
test
in
dec
popa
stc
sbb
or
jl
jp
je
sti
mov
loop
fildl
xchg
mov
lret
adc
daa
cmc
pop
bound
cmpsl
hlt
sbb
jge
or
flds
in
icebp
jnp
adc
adc
insl
adc
or
lods
inc
mov
mov
insl
movsl
jae
and
js
adc
aam
cltd
push
add
in
or
fisubl
jns
jno
mov
lret
sbb
jnp
enter
lock
ret
sbb
mov
add
push
bound
in
jb
loop
add
dec
inc
adc
sbb
mov
cmp
nop
jb
les
mov
cmp
pop
mov
insl
arpl
jmp
adc
or
rclb
lds
mov
add
les
jge
inc
sbb
push
xor
lock
mov
adc
sub
lea
lahf
movsb
xlat
cwtl
inc
xchg
jb
inc
sub
adc
mov
loope
push
sub
sbb
jge
push
inc
roll
mov
mov
sbb
enter
dec
je
test
adc
rolb
add
push
es
gs
fwait
mov
jge
push
cmp
xor
sub
dec
pop
sahf
lcall
fstps
enter
bound
xchg
leave
jo
jmp
rol
fstpl
icebp
test
fistl
sbb
cmp
loope
push
or
lcall
sbb
mov
add
andb
dec
dec
mov
jecxz
xor
or
pop
cmc
fstps
aad
inc
mov
add
int
or
and
mov
popa
adc
and
movsb
sbb
inc
adc
pop
mov
iret
or
sub
dec
and
adc
inc
cli
xchg
call
xchg
pusha
sub
loopne
mov
outsl
cmovge
sub
out
addl
pusha
lret
pushf
mov
aam
pop
add
sbb
popf
xor
mov
imul
inc
stos
aas
subl
fcmovnbe
cmpsl
mov
jle
fstl
and
mov
adc
jg
sub
scas
js
out
or
or
and
add
les
add
loop
mov
es
les
cmp
jnp
pop
mov
adc
in
fs
sub
xchg
sbb
dec
mov
mov
jmp
add
inc
xor
dec
sbb
or
adc
mov
adc
xchg
sbb
rcrb
mov
cmp
cmpsb
mov
dec
es
add
mov
sarb
fsts
xor
insb
leave
and
pop
dec
add
push
subl
enter
xor
or
xor
push
cmp
xchg
mov
add
stos
es
jge
mov
xor
xor
imul
inc
stos
mov
arpl
mov
push
stos
or
or
je
sbb
ret
mov
cmp
fnstcw
adc
sbb
mov
sub
mov
pop
ret
adc
mov
mov
inc
jns
or
cmp
mov
or
jae
setbe
mov
insl
pop
mov
ret
out
push
add
xor
or
rcr
mov
pop
jb
and
xchg
shl
mov
or
jmp
lcall
mov
ss
inc
insb
jne
aaa
jo
jmp
stos
popa
xor
adc
or
xor
cmp
sub
cld
or
jmp
dec
xchg
push
mov
mov
inc
pop
jle
ret
imul
sub
stos
add
mov
and
push
pop
add
gs
shll
or
out
fwait
insl
sub
and
fucomi
mov
adcl
inc
adc
call
xchg
fistps
inc
in
ds
mov
sub
aad
xor
iret
aad
pop
je
inc
push
out
daa
pop
out
mov
xlat
movsl
or
add
cmp
xlat
add
gs
cmp
pop
mov
mov
in
fmuls
or
iret
add
dec
popa
in
pop
mov
jno
rorl
rcrl
lar
popa
subl
dec
cmpsl
hlt
push
push
ljmp
arpl
andl
add
test
mov
outsl
xchg
clc
cmp
jl
mov
cmpsl
je
sub
ret
call
shl
rcll
mov
inc
and
ljmp
stos
es
and
addl
mov
fldl
lahf
pop
jns
sub
loopne
mov
popa
xor
push
and
aam
add
mov
hlt
imul
inc
cmpsl
into
jne
push
in
das
sbb
shll
ret
lret
repz
iret
ret
adc
es
sbb
xor
add
and
sub
jp
cmp
outsl
jl
sbb
adc
gs
push
and
adc
mov
das
loopne
cmp
push
xor
cmp
flds
mov
push
or
ss
mull
mov
adc
ret
pop
or
test
arpl
popf
pop
jno
sbb
sbb
test
inc
cmpsl
pop
rcrb
sub
aam
jge
inc
sbb
or
inc
lcall
rolb
pusha
add
stos
add
mov
push
cmp
cmp
xchg
cltd
xchg
or
xorl
leave
testb
pop
sub
mov
enter
xchg
sub
dec
cmpsl
shlb
jnp
outsb
add
mov
fucomi
sub
dec
sbb
aad
push
pop
std
dec
cmpsl
orl
mov
scas
enter
ret
clc
jnp
dec
lods
pop
lds
mov
or
cwtl
cwtl
push
and
xchg
add
mov
jbe
mov
test
lea
inc
negb
pop
sti
or
sub
inc
rcll
rcl
int3
inc
rcr
xor
pusha
xchg
or
popa
pop
rorl
mov
loopne
xchg
aam
aaa
rorb
out
mov
push
maxps
add
sbb
test
mov
add
imul
xchg
or
jecxz
ror
add
jns
push
jns
test
add
adc
popa
jo
hlt
gs
mov
sbb
xor
lock
add
add
popa
outsl
push
sub
sahf
test
push
mov
dec
xor
jle
bound
adc
inc
out
lods
dec
ljmp
inc
insb
dec
add
lahf
pop
or
fldl
add
mov
jno
or
dec
push
in
adc
sbb
or
sub
add
jno
adc
sub
dec
pop
or
fisubs
shlb
rol
and
mov
xor
mov
pop
sbb
jo
and
and
push
and
inc
cmp
add
loop
pop
dec
jns
sbb
pop
add
pop
sub
xchg
lock
out
imul
fwait
hlt
sti
ja
xchg
jmp
fs
out
daa
rorb
mov
ss
das
bound
pop
orb
dec
mov
aaa
je
sbb
lods
pop
and
pop
lods
ja
in
sbb
xchg
or
cmp
sbb
pop
ja
push
ja
add
fidivrs
sub
inc
cmp
mov
jae
mov
xor
sub
and
cmpsb
dec
nop
push
jp
jg
add
scas
mov
add
sub
stos
nop
lahf
push
and
cmp
lret
and
sub
test
mov
mov
and
out
pop
inc
adc
imul
push
mov
rep
jp
jne
mov
push
int3
pop
adc
dec
xor
push
sub
ret
push
xlat
rclb
ds
or
scas
jl
cli
mov
lds
jecxz
mov
shlb
daa
add
orb
inc
push
stos
sub
mov
clc
mov
and
cmp
arpl
adc
mov
loop
icebp
inc
xor
inc
pop
call
mov
rcrl
fdivrl
and
cld
mov
orb
lock
js
sub
cmp
xchg
mulb
leave
ret
cmp
adc
and
lods
mov
mov
xchg
stc
cmpsb
dec
push
mov
fwait
dec
cmpsl
dec
inc
add
leave
test
xchg
xchg
xor
pop
iret
dec
push
xor
push
pop
or
cltd
mov
mov
jns
cmp
add
cmp
test
and
push
add
ljmp
cmp
in
add
add
jmp
push
add
dec
icebp
cmp
inc
test
mov
icebp
xchg
or
pop
and
and
fsubr
pop
or
cmc
pop
mov
inc
lock
leave
pusha
pop
clc
jo
repz
xor
movsl
imul
in
mov
sub
mov
inc
push
bound
mov
insl
sbb
add
or
push
in
dec
lahf
dec
jl
pop
pop
loope
add
ss
mov
push
xchg
sahf
ret
jo
cmpsb
xchg
and
and
outsb
lret
jl
in
dec
xor
clc
out
mov
mov
pop
mov
xchg
push
pop
cltd
mov
dec
jbe
pop
dec
mov
lods
roll
rolb
push
mov
lea
cmp
push
cli
aas
outsb
or
adc
stos
pop
ret
xor
sub
sub
jl
xchg
xchg
sbb
add
xor
or
inc
scas
fbstp
das
pop
test
movsl
into
hlt
xorb
dec
lret
mov
add
push
mov
add
sub
mov
add
sub
cmp
pop
fildl
fs
cmpsl
xorl
or
jg
jns
jp
sahf
mov
push
jp
cmpsl
addr16
stos
insb
call
add
aam
jns
loopne
ret
ss
mov
fs
mov
pop
das
mov
inc
dec
scas
sbb
cmp
bound
push
sahf
not
mov
outsl
gs
pop
stos
xor
cmp
add
mov
ljmp
add
sub
adc
sbb
jbe
inc
mov
movsb
add
ljmp
nop
and
call
jns
fimull
xchg
sub
push
xlat
and
add
mov
ret
outsb
imul
and
mov
push
mov
pop
push
sub
gs
mov
push
addr16
sbb
js
sbb
mov
nop
icebp
adc
iret
fs
pop
or
lods
pop
and
mov
xchg
sub
jne
insb
pop
iret
icebp
sub
aaa
mov
cmp
adc
mov
jg
insl
and
inc
loope
in
push
cwtl
cmp
lea
stos
cwtl
mov
mov
idivl
in
mov
dec
add
dec
push
dec
gs
dec
mov
xor
loop
pop
in
jg
dec
repz
pushf
scas
or
push
gs
add
jecxz
jg
sbb
test
or
xorl
leave
inc
movsl
test
xor
sbb
mov
jmp
out
jmp
pop
insl
gs
out
fs
loopne
insb
addr16
add
add
fstpl
ljmp
fucomp
negl
es
ss
jmp
ja
mov
lock
and
sbb
pop
enter
ja
add
fsub
loop
addl
fisubrl
or
xlat
daa
sbb
sbb
iret
adc
add
movsl
or
mov
fidivs
repnz
inc
cmpsb
pop
and
sbbl
daa
ret
xchg
xor
jo
sub
mov
sub
inc
in
lods
or
lods
lock
lds
push
imul
xcrypt-cfb
cmpsl
gs
scas
sub
shll
ret
popf
bound
das
add
sti
gs
test
div
xchg
mov
mov
icebp
add
call
dec
add
adc
xor
or
jmp
xlat
addr16
fldenv
mov
in
xor
cmp
rcll
sarb
add
mov
mov
iret
and
pop
fdiv
add
push
ljmp
adc
out
es
xor
jecxz
out
fisttpll
mov
or
je
int3
lea
rcll
stos
jo
mov
jne
xchg
cmpb
sti
pushf
and
inc
dec
pop
stc
add
mov
jnp
stos
fs
js
push
xchg
addb
sbb
cmpsb
or
popf
jae
dec
xchg
enter
xchg
pop
jne
enter
je
pusha
fwait
aas
xchg
and
cli
mov
xchg
imul
and
inc
fnstenv
cmp
insb
dec
dec
lock
jns
addb
outsl
gs
sub
imul
rcrb
sbb
inc
testl
lods
insb
mov
adc
aas
ja
stos
or
repz
inc
xor
icebp
mov
in
xchg
mov
add
push
cmova
inc
gs
add
sarb
add
scas
and
test
divl
xor
hlt
dec
or
rcrl
jnp
pushf
lret
inc
xor
and
push
adc
push
js
subb
and
pmullw
add
jle
and
addr16
icebp
xor
inc
sub
fwait
iret
aaa
cmpsb
push
add
stos
xchg
push
pop
imul
xchg
and
push
dec
loope
lahf
cmpsl
popa
ljmp
push
and
sub
push
xchg
fisttpll
lock
pop
add
jb
push
xor
popa
push
pop
pop
icebp
inc
xchg
cmp
cmpsb
push
dec
ja
inc
mov
sbb
sarl
je
mov
rol
mov
popa
out
and
dec
mov
loop
adc
xchg
sub
lcall
aam
and
lds
dec
dec
jmp
jl
subl
add
sub
mov
sub
mov
dec
icebp
rorl
rorb
cld
lcall
mov
dec
sarb
les
add
xchg
pop
add
dec
push
into
xchg
loop
and
cltd
sub
push
outsb
cmp
lea
push
nop
outsl
addl
movsb
rcrl
cmp
cli
pop
das
add
in
pop
mov
xchg
add
add
out
outsb
push
mov
dec
mov
jbe
mov
mov
or
sub
inc
pusha
mov
scas
mov
push
sti
mov
stc
mov
cmpsl
mov
mov
sub
mov
bound
lret
out
mov
sarb
push
cwtl
and
mov
clc
xor
movsl
cli
mov
aam
fldenv
mov
js
mov
out
mov
push
mov
lret
or
xchg
adc
ret
xor
xor
or
dec
mov
jo
sar
xlat
push
push
dec
sub
xchg
dec
jg
rclb
push
push
dec
cli
cs
sub
xchg
and
inc
sbb
nop
cltd
pop
pop
add
jmp
iret
jnp
add
addr16
out
mov
flds
fcomp
sbb
xor
jns
popf
insl
xor
jnp
outsl
fistl
pop
dec
inc
arpl
aaa
dec
xor
mov
in
in
jno
cmc
loopne
icebp
es
test
jae
sub
shlb
lret
and
out
loopne
sbb
jne
fistl
mov
or
fistl
inc
push
stc
ret
push
arpl
xchg
jne
xor
fildl
into
lods
mov
imul
cwtl
add
cmpsl
movsl
adc
mov
pop
mov
sbb
pop
push
outsl
xlat
dec
xchg
push
pop
push
inc
enter
movsl
andl
cmp
mov
arpl
lds
orl
pop
xorb
adc
test
jnp
or
dec
inc
sbb
mov
leave
ror
pand
call
sbb
add
lods
in
lods
std
xchg
lock
mov
mov
sbb
mov
push
and
lds
pop
mov
pop
and
mov
movsl
inc
add
mov
sub
add
sub
sub
aas
ja
xchg
test
xchg
xor
movups
fstl
mov
gs
push
push
fidivrl
pop
mov
add
je
mov
dec
mov
repz
jmp
jmp
mov
cmc
shll
adc
addr16
fistps
or
pop
repz
inc
xor
mov
pop
or
lea
or
cmp
mov
negl
aas
xlat
and
aas
lods
mov
inc
je
hlt
loope
jno
repz
cmp
push
xor
adc
cmp
mov
lods
sbb
test
rolb
shll
mov
pop
rorl
ljmp
loope
movsl
scas
inc
sbb
das
xchg
and
sbb
and
pop
mov
fnstcw
ja
mov
lret
mov
inc
adc
push
scas
pop
rolb
sub
sub
int3
outsb
int
mov
adc
pop
dec
xor
mov
inc
sbb
adc
dec
dec
and
ret
cltd
xchg
and
push
ds
mov
outsb
push
xchg
sbb
in
aaa
mov
cmp
jbe
jns
add
add
pop
sti
and
add
pusha
and
add
push
push
jecxz
adc
in
pop
sub
mov
sbb
repz
cmpsb
add
outsl
adc
mov
in
shrl
jge
xchg
cmp
pop
jno
test
jne
lock
sti
or
jg
and
adc
ret
jno
ret
mov
ds
test
roll
stc
pop
inc
sub
push
or
outsb
xchg
push
sbb
sbb
inc
and
jecxz
mov
cmpsl
xchg
cmp
adc
fidivs
dec
sub
lcall
mov
push
jecxz
sbb
xchg
sbb
or
mov
lahf
or
and
and
add
add
jne
and
mov
sahf
imulb
and
add
ljmpw
xchg
push
or
mov
sub
sbb
sub
xor
xor
push
cld
test
test
movsb
xor
roll
outsb
mov
ret
ror
and
mov
xor
xchg
imul
push
and
mov
push
or
sub
push
push
pop
gs
xorl
loope
inc
dec
iret
mov
and
inc
jnp
sub
addr16
fildl
jge
fstl
outsb
pop
js
lcall
jb
sub
mov
popa
adc
ret
jb
sub
sub
sbb
cmp
loope
push
imul
das
dec
lock
and
rclb
lock
jmp
sub
ja
stos
xor
jge
jp
pop
movsb
ret
lea
popa
add
cli
rclb
inc
add
xchg
xor
jo
or
jne
loopne
fnsave
mov
or
ja
sub
ret
add
dec
aad
lcall
push
and
adc
mov
dec
inc
inc
adc
xchg
inc
pop
mov
pop
pop
mov
cmp
inc
js
cmp
pop
dec
add
je
test
pop
add
ror
push
arpl
imul
sub
xchg
push
adcb
adc
and
and
roll
push
push
mov
mov
test
mov
or
xchg
ljmp
xor
add
inc
xor
or
add
mov
sub
popf
jge
pusha
or
mov
dec
mov
sub
inc
arpl
inc
sub
movsl
xchg
out
js
jle
sbb
xor
les
push
loopne
aaa
shll
rol
mov
or
and
lret
ret
jnp
and
mov
dec
rcrb
sbb
adc
lods
aas
pop
hlt
cmp
add
add
sub
mov
mov
mov
ret
inc
mov
pop
call
or
loope
jo
lret
xchg
cmp
test
and
fistpll
lret
ljmp
std
push
test
mov
mov
xchg
xor
sbbb
mov
addb
or
in
ret
sbb
or
inc
add
mov
repnz
pop
pop
jp
test
cmp
rcrb
mov
or
lret
add
mov
shlb
push
mov
incl
lret
push
add
fnsave
dec
xchg
out
jp
bound
mov
mov
inc
loop
fldt
push
les
adcb
push
pop
repz
xchg
mov
mov
and
insl
subl
mov
mov
dec
into
push
clc
inc
dec
orl
scas
lea
sub
lahf
aad
loop
lahf
push
mov
mov
test
pop
lods
xorl
inc
inc
arpl
sbb
xchg
aaa
popa
loop
rolb
sbb
arpl
clc
push
jp
or
fld
sbb
cvtps2pi
test
add
sbb
xor
outsl
je
pop
push
mov
cs
les
add
mov
js
rcl
lret
lods
sbb
add
aad
xchg
xchg
add
movsb
inc
push
jge
jo
push
cmp
sub
out
dec
lret
jp
scas
shrb
or
adcl
xchg
add
xchg
mov
mov
fisttps
shll
inc
mov
jne
ret
mov
addb
add
imul
push
fs
xchg
inc
mov
dec
and
movsl
das
movsl
sub
test
sub
xor
dec
aam
cmp
push
mov
ret
mov
cltd
lret
adc
jno
repz
xchg
fdivl
cmp
or
roll
sbb
sar
orl
cmp
rorl
jge
cmp
add
jg
scas
pop
mov
xorl
fwait
push
pop
rol
movsb
js
pause
and
js
push
or
fmull
dec
ret
dec
sbbb
cmp
jb
rorb
loope
sbb
xchg
ret
push
ja
cmp
and
fyl2xp1
or
xor
fmul
aam
or
cmp
lea
loope
loope
loopne
mov
dec
test
push
push
adc
test
sub
mov
xchg
les
add
adcl
test
adc
lods
lcall
cltd
js
pop
test
addl
nop
sbb
fsts
dec
xor
pop
ret
std
inc
sub
xor
arpl
dec
and
mov
and
mov
adc
sub
outsb
pop
andb
rorb
sbb
push
and
dec
cmp
cwtl
sbbb
lods
dec
mov
xchg
addb
out
clc
or
mov
lds
push
outsl
insb
jb
jno
aam
adc
imul
add
ret
fcoml
xor
pop
mov
in
xor
add
dec
fmull
jmp
and
rol
pop
ret
adc
scas
mov
int
lods
push
push
fadds
mov
sti
xchg
and
imul
and
push
dec
pushf
in
mov
call
sub
xor
in
push
fldlg2
jnp
jp
in
dec
or
pop
pop
push
mov
pop
insb
sbb
faddl
fs
test
adc
dec
cmp
sbb
aad
adc
mov
jecxz
and
jmp
or
cmp
cld
pop
ss
test
mov
adc
mov
int
cmpsl
loopne
push
dec
repz
cmp
addb
xor
dec
stos
mov
push
out
outsl
xlat
push
aam
subl
dec
jge
pop
add
mov
sbb
adc
jae
adc
icebp
sbb
jo
fcomps
std
push
cmp
xchg
mov
movsb
jno
stos
ljmp
jle
jecxz
add
shll
in
int3
add
xchg
ret
sbbb
sbb
sarb
jmp
xor
sbb
cmp
cmpb
std
and
pop
jle
and
cltd
add
inc
int3
and
push
xchg
mov
and
inc
or
cmp
call
mov
xchg
push
shlb
and
mov
mov
cs
fwait
mov
add
xchg
ja
ljmp
sar
popa
cmpsl
movsb
sub
in
inc
addr16
in
push
xchg
lret
dec
cmp
pop
adc
orl
inc
dec
or
jecxz
in
scas
adc
lcall
push
inc
movsl
jbe
dec
ljmp
stos
push
add
pushf
cltd
dec
push
cld
test
pop
and
popf
cmp
add
mov
fdiv
fists
xchg
add
add
clc
add
sub
insb
leave
ret
and
inc
push
rol
sbb
xor
in
jbe
dec
and
loopne
out
xchg
push
sarl
xchg
xchg
test
mov
cmpsl
inc
inc
xchg
outsl
out
xor
mov
push
mov
out
sarb
and
adc
jg
inc
pusha
pop
inc
or
ret
cmc
mov
lea
inc
pop
sub
push
xchg
shr
adc
xor
dec
xor
mov
ret
mov
or
pop
movsl
or
sub
pop
inc
push
iret
lds
cmp
or
mov
jns
shl
ss
sub
jmp
push
mov
shlb
sti
mov
stos
lods
dec
test
jno
push
or
or
mov
cltd
adc
shll
inc
sbb
popa
adc
push
sbb
loop
jge
sub
ficoms
iret
mov
mov
cmp
pop
jo
adc
imul
fsubs
adc
arpl
dec
xchg
es
sub
lcall
ffreep
and
push
add
adc
lret
std
adc
xchg
loope
shlb
ret
xor
cmp
inc
insl
sbb
jno
lods
aam
dec
adc
add
xor
nop
clc
fcom
ret
push
or
push
sub
push
push
imul
adc
mov
xchg
mov
and
cmpsb
xchg
lods
push
push
dec
ja
jae
orl
or
mov
xor
sbb
rolb
add
xchg
sub
adc
insb
push
sub
ds
mov
rorb
cltd
aam
or
icebp
push
xor
movsb
addr16
rorb
mov
fucomi
push
dec
lahf
dec
jecxz
add
fcompl
adc
push
pop
je
pop
stos
test
adc
shrb
pop
dec
jnp
das
push
inc
xlat
sbbb
xor
ret
aaa
push
aas
mov
xor
test
andl
push
int
xchg
test
add
pop
jge
stos
push
jge
arpl
sarb
fiaddl
data16
test
dec
stos
cltd
jo
sbb
cmp
sbb
add
insb
pop
rcll
divl
sub
adcl
movl
push
or
movsb
pop
or
or
mov
push
pop
roll
testb
push
or
sbb
dec
sarb
push
fsubrs
push
fwait
xor
movsb
push
pop
mov
es
dec
adc
dec
pop
pop
pop
test
push
mov
ret
cmp
sahf
and
dec
popa
xchg
mov
add
pop
push
pushf
adc
sahf
ret
test
pop
add
mov
xor
ret
lea
sub
jnp
mov
ds
jo
imul
cmp
sbb
imul
xchg
fldcw
inc
adc
push
sub
popf
mov
aas
and
push
js
push
cmpsl
inc
inc
pop
push
mov
xchg
pop
or
push
inc
hlt
add
adc
xchg
subb
call
rclb
push
movsl
push
popf
inc
call
and
xchg
xor
ljmp
je
test
mov
test
mov
cmpsb
fstps
icebp
push
ds
pusha
pusha
mov
enter
gs
sub
cs
enter
jmp
in
and
leave
dec
and
inc
dec
test
pop
cmp
lods
ja
imul
mov
sbb
push
add
ret
xchg
inc
shrb
je
ret
jp
test
insb
and
add
stc
pop
xor
test
aam
icebp
mov
pop
lahf
cmp
jmp
jnp
rcl
data16
and
movsb
push
add
inc
push
shlb
cmpsl
cmp
inc
sub
icebp
stc
test
add
clc
cmp
dec
dec
scas
sub
sub
mov
inc
jns
imul
add
pop
jo
adc
dec
mov
movsb
or
add
and
enter
jp
pop
fisubrl
xchg
nop
loope
mov
dec
jno
xchg
mov
inc
out
adc
or
rcrl
hlt
adc
fwait
inc
aaa
insl
or
gs
dec
loope
or
aad
test
xor
mov
push
movsb
ret
jg
dec
push
lahf
add
push
movsb
scas
shrb
inc
pop
bswap
lods
nop
cwtl
push
test
dec
pushf
or
loopne,pt
or
mov
sub
aam
adc
sub
push
push
lcall
cltd
call
inc
sbb
inc
mov
and
enter
inc
push
cmp
outsb
call
inc
xor
mov
sbb
mov
stc
jns
imul
imul
test
in
daa
or
rol
pop
xchg
mov
push
addb
sbb
imul
sub
sub
xor
scas
popl
add
pop
xor
jmp
push
je
dec
pop
push
fstpl
das
xchg
stc
lods
sbb
nop
jmp
xchg
sbb
mov
and
fbstp
push
jo
dec
pop
sbb
push
out
or
dec
and
out
mov
xor
test
pop
mov
cli
scas
add
jecxz
frstor
fwait
enter
pop
movsl
sub
xor
cmp
mov
mov
divl
push
imul
je
xchg
xor
inc
out
jae
fisttpl
int3
and
arpl
rcrl
and
push
xor
cmp
js
movhps
pop
push
rorl
pop
insl
loop
push
pop
les
shrb
push
push
dec
outsl
push
iret
mov
adc
out
jnp
or
cmp
pop
adc
or
fcoml
inc
addr16
or
xor
dec
cmpsb
push
pop
bound
pop
push
inc
sub
sub
rcl
xchg
pusha
nop
push
aam
sub
push
mov
mov
xchg
iret
pop
push
imul
test
insl
xchg
cmp
add
pop
inc
lods
orl
aas
inc
sub
add
mov
loope
push
shrl
sub
jb
and
xorb
adc
imul
sub
add
popf
mov
jmp
sub
out
outsb
ret
insb
dec
loope
dec
and
shll
clc
sub
inc
add
add
jo
pop
pop
ja
sbb
mov
cli
pop
ret
push
movsb
movsl
sahf
shl
pop
mov
cmpsl
adc
adc
adc
push
out
arpl
and
cmp
mov
movsl
out
or
sbb
cmp
jecxz
jecxz
mov
insb
dec
mov
in
addl
iret
dec
js
pushf
insb
pusha
cmp
jmp
loope
sub
adc
sub
add
ret
fldcw
and
pop
adc
lods
or
shll
popa
mov
icebp
add
sub
pop
insl
loop
pop
push
sub
push
cs
push
and
or
xchg
xlat
xchg
push
mov
sub
icebp
loope
mov
sbb
loope
cmp
xor
dec
jecxz
dec
aas
sbb
ret
cmp
or
and
adc
and
sub
sbb
mov
push
imul
xor
jecxz
adc
mov
stc
jne
imul
and
jmp
xor
hlt
sahf
inc
shll
push
test
cmpsl
mov
int3
fwait
cmp
and
or
data16
ljmp
xchg
add
pop
xor
icebp
subl
lea
mov
add
sahf
push
call
cltd
imul
or
push
cmp
mov
inc
sbb
insb
mov
pop
inc
mov
mov
cmp
mov
or
jg
mov
ja
push
cmpsl
push
ret
xchg
fidivrs
shrl
adc
xor
int3
sub
mov
pop
pop
push
ficoms
xor
mov
mov
cmp
push
enter
fwait
les
lea
inc
mov
aad
jp
push
cmpsb
xchg
jne
adc
sbb
test
xor
bt
push
adc
frstor
inc
sub
cltd
repnz
mul
test
xor
js
xchg
cmp
add
pusha
inc
jmp
int3
push
pop
neg
cwtl
cld
int
add
adc
xor
cltd
xchg
xor
sub
and
ljmp
aas
in
in
cmp
xchg
mov
js
xor
sbb
leave
nop
les
push
inc
faddl
sahf
cwtl
cwtl
test
mov
aad
mov
xor
out
xchg
add
pop
imul
aam
sub
mov
test
sub
push
adcb
subl
insl
adc
jge
lret
jno
daa
pop
cmp
xor
mov
sub
sbb
and
inc
test
lea
inc
or
rcl
pusha
inc
into
shll
adc
and
add
stos
sahf
or
fsts
or
mov
fildl
mov
xor
roll
scas
jbe
add
jl
or
jo
inc
addr16
push
mov
xor
jnp
lret
mov
cmpsl
repz
jbe
xchg
inc
imul
mov
out
xchg
adc
sbb
mov
into
lea
fdivl
inc
js
xor
sti
mov
xchg
ds
push
push
mov
ljmp
rclb
mov
mov
insl
mov
xor
sti
lahf
repz
inc
or
inc
fwait
pusha
aaa
pop
dec
pop
xchg
cmp
mov
roll
addr16
gs
xchg
jno
rcr
ja
data16
lea
fiadds
cli
pop
call
rolb
out
negb
inc
mov
mov
stos
test
adc
lea
mov
cwtl
jge
imul
mov
dec
dec
pop
andl
lock
xor
xchg
sub
xchg
pop
inc
add
stc
sbb
cvttps2pi
jb
push
jae
lea
add
ret
or
sbb
orl
push
ret
insb
shrl
test
cwtl
imul
push
ds
dec
ret
outsb
and
jno
mov
dec
sbb
pusha
lds
gs
jnp
mov
lret
add
sbbb
shrl
imul
popf
add
xor
leave
test
insl
in
mov
xor
xor
sub
pop
mov
inc
dec
mov
andb
xchg
inc
inc
and
xchg
es
xchg
cmp
pop
pop
xchg
sbb
or
cs
adc
dec
mov
cmp
jmp
xor
xchg
pop
shrb
jg
call
movsb
xor
add
ret
je
dec
sbbl
fucompp
aad
dec
jne
test
mov
fabs
sbb
sti
adc
bound
stc
dec
mov
add
sarl
lods
jnp
adc
mov
xor
mov
jg
in
xchg
adc
and
and
pop
cmp
into
xor
or
stos
sub
fcmovnb
imul
push
push
test
cs
or
loop
ja
sti
inc
js
les
xor
pop
pop
xchg
pusha
in
lds
xchg
pop
scas
or
mov
inc
inc
daa
lea
rorl
lods
mov
add
insl
add
pop
and
add
lret
addr16
cmp
xor
sahf
mov
shrl
or
mov
sbb
push
ret
xor
push
jb
imull
mov
xorl
inc
mov
push
ret
mov
test
mov
add
sub
rcrl
int
fimull
jge
mov
push
dec
out
leave
or
rclb
jecxz
ffreep
cli
jg
dec
ret
hlt
adc
push
add
ss
sub
jnp
jl
ret
repz
in
sub
and
lds
rcrb
repz
sahf
mov
mov
inc
fisubrl
add
adc
mov
fwait
sub
inc
jb
cmp
sbb
fisubrs
mov
pop
rolb
loopne
aad
nop
filds
repnz
sti
xor
adc
stos
inc
or
outsb
daa
orb
mov
loopne
or
lds
inc
sbb
leave
test
inc
fistl
loop
mov
inc
imul
ror
push
aaa
mov
pop
mov
and
jmp
test
dec
mov
pop
addr16
cmc
lret
push
daa
lods
addb
gs
dec
clc
insl
xor
add
xchg
shlb
cmp
xchg
jecxz
fucomi
jnp
mov
pop
fldt
inc
enter
add
shrb
sbb
cmc
dec
sub
adc
adc
or
test
inc
xchg
inc
cmpl
jecxz
mov
mov
fcompl
or
loopne
cmp
lahf
cwtl
cmp
adc
aaa
xor
push
ficompl
and
sub
push
add
sbb
les
lods
mov
sbb
aas
and
xor
rcrb
push
sbb
jecxz
jmp
adcl
pop
mov
jno
and
bound
xchg
mov
andb
pusha
add
mov
add
adc
push
mov
sub
mov
push
ja
insb
cld
rolb
push
shrb
hlt
xchg
add
sbb
insb
and
inc
mov
mov
mov
mov
popa
xor
xchg
fwait
test
jl
es
dec
pop
repnz
cmp
shr
mov
cs
inc
insl
sub
loope
mull
jo
dec
sub
adc
bound
mov
or
daa
dec
test
inc
aas
jb
ret
bound
add
in
pop
sbb
jo
test
arpl
xchg
fisttpll
aam
and
imul
ret
mov
adc
mov
sub
mov
jno
push
or
mov
aaa
js
add
inc
daa
cwtl
int3
and
loop
inc
push
mov
pop
mov
daa
test
or
cmp
pop
or
mov
pop
int3
or
push
cmc
xchg
inc
psubb
xor
and
xor
inc
inc
es
mov
popa
dec
inc
fiaddl
sub
ja
and
je
jecxz
xor
test
dec
adc
lret
ret
jle
mov
aad
push
push
movsl
dec
shr
shlb
cmp
dec
adc
dec
push
push
xchg
fmuls
ret
aam
lock
jl
and
js
cmpl
lods
ret
subl
push
mov
add
sub
repz
idivb
jo
shrb
push
mov
jmp
mov
in
test
xor
xchg
mov
xor
or
jb
mov
enter
sbb
push
dec
and
mov
stmxcsr
inc
add
xchg
jmp
cmpl
test
xor
test
enter
push
lods
js
into
dec
adc
imul
pop
test
or
fsubs
aas
dec
and
xchg
and
sbb
adc
jmp
stos
pushf
xchg
test
jg
rcrl
das
lret
jns
or
mov
test
in
outsb
push
cmp
ret
jbe
out
insl
out
movsl
in
and
push
aam
add
enter
add
lea
sbb
popf
mov
xchg
xchg
push
arpl
ret
sub
in
jmp
and
push
and
push
push
jl
idivl
cmp
ljmp
dec
lahf
rcrb
xchg
push
movaps
jp
and
xor
cmp
sub
loop
adc
inc
inc
jl
aam
adc
popf
or
inc
sub
insl
shll
ret
jmp
mov
adc
popa
cmp
or
insb
popf
das
inc
cmp
jecxz
fbld
mov
leave
push
insb
pusha
mov
es
pop
icebp
mov
dec
inc
inc
lods
jp
cwtl
pop
icebp
out
sub
test
inc
loop
out
push
test
jmp
pop
or
pop
xchg
or
out
jp
add
mov
xor
mov
sub
jno
xor
jnp
and
test
jne
pop
pop
sub
sbbl
push
or
mov
xchg
push
push
cmpsl
pop
ds
and
fisubrl
push
leave
jno
dec
cmp
sub
das
lret
sub
adc
fnstcw
dec
mov
out
push
push
cmpsb
inc
lret
add
cmc
and
bound
pop
xchg
sub
aaa
adc
add
mov
scas
mov
cmp
jae
dec
les
or
sub
pop
sbb
pop
dec
mov
inc
and
pop
movsl
sarl
rorb
inc
insb
jb
jo
add
ret
in
inc
or
pop
sub
add
xor
jae
jecxz
push
mov
or
push
ret
inc
xlat
fildll
xchg
pop
adc
and
jg
inc
xor
xor
pop
mov
add
sub
pusha
int
adc
inc
sbb
sub
add
popa
scas
jge
jmp
xchg
cwtl
push
div
xchg
and
or
lea
ljmp
arpl
lret
pop
or
loopne
add
and
lock
jmp
arpl
sbb
add
fwait
and
imul
fcom
in
xor
mov
pop
test
add
xchg
fwait
pop
push
out
dec
add
je
mov
jp
mov
fisubl
and
xlat
or
mov
pop
nop
and
outsb
xchg
mov
adc
movsl
pop
mov
nop
movsb
adc
xor
jge
add
dec
xor
andl
inc
or
hlt
cwtl
inc
xor
mov
inc
and
in
pop
pop
jecxz
push
xchg
shld
xlat
adc
ret
xor
outsb
inc
pop
test
mov
movsl
sbbb
cmp
add
jo
mov
sub
bound
or
jmp
jecxz
out
mov
mov
mov
scas
faddl
inc
scas
push
xor
pop
or
std
xor
xchg
pusha
xchg
cmp
add
je
push
push
ja
cmpl
adc
ret
sbb
cmc
xchg
je
sub
addl
or
push
sbb
outsl
fcmovb
sbb
aad
adc
pop
ss
dec
mov
test
jmp
stos
test
ror
pusha
adc
and
outsb
or
or
leave
mov
imul
lock
in
add
push
adcl
dec
pop
push
faddp
or
add
xlat
pop
movsb
cmpsl
int
adc
int3
add
popf
mov
jmp
inc
adc
push
rolb
and
cmp
ret
sub
xorb
or
xchg
or
insl
sbb
push
sysenter
push
mov
sbb
lcall
les
add
mov
aad
dec
insb
and
jle
push
mov
mov
add
or
dec
pop
ss
and
jns
cmpsb
xchg
mov
mov
imul
test
sti
sbb
std
and
rorb
punpcklqdq
pop
dec
sbb
mov
jno
out
dec
mov
dec
adc
imul
mov
fimuls
pop
pop
xchg
ret
jle
pop
xor
or
pushf
or
jno
add
add
mov
xchg
dec
shrb
les
int
aad
lea
mov
pushf
dec
rcl
repz
add
dec
leave
shlb
iret
jno
dec
popa
out
xchg
repz
inc
mov
push
or
sbb
inc
movsb
xor
push
jbe
mov
add
pop
mov
inc
test
pop
jae
pop
add
sbb
daa
dec
mov
xchg
and
xor
inc
orl
xchg
or
or
cmpsl
dec
pusha
or
ljmp
pop
mov
rorb
cld
cmp
mov
sub
jno
sub
scas
inc
jae
mov
and
push
imul
lds
mov
or
sbb
jns
cs
jnp
mov
add
outsl
daa
sub
cmp
mov
sbb
xorb
adcb
xor
lea
jp
push
inc
sbb
call
leave
mov
js
sbb
pop
in
sub
push
mov
inc
mov
add
mov
ret
cmpsl
ss
inc
or
xchg
pusha
mov
mov
sti
or
or
sub
sbb
jae
dec
pop
adc
cmp
test
xchg
cmc
sti
sarb
mov
sti
sub
fwait
mov
dec
jmp
ss
shrl
adc
mov
jbe
or
sbb
lcall
dec
cmp
adc
mov
mov
out
xor
lahf
aas
and
mov
stos
cmp
ljmp
in
sbb
pusha
stos
sar
or
mov
loopne
adc
popa
dec
inc
lods
roll
ss
movsl
shll
or
cli
cmp
adc
pop
xor
dec
push
sti
and
mov
sbb
inc
adc
sbb
mov
cmc
ds
loope
fisubrl
addr16
mov
shlb
mov
adcl
or
mov
dec
popa
mov
jb
rcl
push
and
cmp
addl
mov
push
inc
jg
push
push
fadds
dec
les
test
xchg
pop
mov
sub
pop
push
or
lahf
jns
xchg
xor
ljmp
clc
add
mov
and
pop
pop
xor
sbb
mov
ficoms
add
cmp
sbb
retw
mov
mov
fxch
adc
push
mov
mov
movsb
movsl
and
sbb
jge
js
xor
rorb
add
add
insl
test
lret
pop
in
imul
fwait
call
popf
mov
add
iret
es
enter
sub
negb
sub
ja
add
and
jg
mov
pop
and
icebp
int
int3
dec
mov
lea
shrb
imul
lret
and
movsb
cmp
insl
lret
sbb
subl
jmp
lods
push
push
pop
and
test
pop
xor
shlb
fbld
es
cmp
test
inc
lock
push
addl
xor
and
jne
push
ja
and
adc
inc
jno
add
mov
pop
mov
xor
or
pop
mov
or
jbe
jne
mov
jnp
xor
aam
push
pop
ja
into
or
adc
inc
test
add
jno
lods
fsubrs
icebp
mov
bound
inc
stos
adc
call
adc
ret
xchg
xor
jbe
mov
lods
dec
xchg
jne
inc
xchg
sub
out
add
pop
adc
mov
das
mov
push
mov
and
mov
adc
and
sub
test
pop
mov
mov
loope
jecxz
movsl
jno
loope
dec
sbb
cmp
stos
mov
push
cmp
inc
enter
hlt
push
xchg
bound
and
nop
div
inc
or
add
pop
aad
test
ret
xor
lods
daa
ret
loopne
and
pop
add
hlt
xor
adc
mov
and
push
cmc
dec
popa
daa
ds
mov
jle
ret
inc
add
in
repz
mov
jno
mov
cmp
imul
mov
out
in
mov
and
dec
test
bound
lods
ret
xchg
jmp
mov
dec
in
insb
xorl
jno
xchg
and
pop
pop
mov
pushf
je
mov
sbb
adc
or
xchg
pop
push
test
das
rcll
sub
nop
push
add
sbb
pop
mov
push
lods
adc
les
dec
jno
xchg
jnp
imul
arpl
lea
push
dec
jge
dec
lods
mov
sbb
or
and
push
fsubs
nop
mov
or
mov
xchg
icebp
add
and
loope
notl
sbb
mov
sbb
cmp
aam
icebp
lds
mov
movsl
and
bound
aas
loopne
mov
es
out
frstor
int
popa
test
enter
adc
or
out
ja
mov
jge
mov
lock
subl
push
dec
in
adc
and
icebp
adc
ret
push
mov
nop
dec
cwtl
sti
inc
ljmp
dec
popf
inc
jmp
or
repnz
aaa
add
dec
xor
faddp
in
adc
cmp
test
xchg
pop
jbe
and
push
imul
aam
fsub
sub
sbb
add
or
add
stos
add
mov
js
sbb
mov
xor
or
movl
sbb
mov
add
add
out
inc
cli
loop
or
lcall
mov
loopne
add
and
leave
les
popa
imul
rep
clc
clc
rcrl
leave
inc
inc
punpckhwd
cmp
cmc
les
inc
rorb
imul
fistpl
pop
add
add
inc
rorb
sub
jmp
nop
sbb
fidivs
dec
add
adc
xlat
and
pop
and
push
add
ret
mov
out
dec
arpl
jle
std
mov
and
movsb
test
ss
pop
push
js
and
xchg
add
add
sbb
jbe
xchg
push
push
and
mov
inc
fldenv
les
xchg
inc
call
add
xor
pop
jg
arpl
fidivl
testl
sbbb
loop
xchg
sbb
je
inc
gs
daa
scas
pop
add
add
jne
lea
je
push
mov
sti
movsb
add
add
out
add
sbb
push
mov
mov
std
xchg
movsb
mov
dec
ret
and
or
scas
inc
clc
pop
or
cltd
les
or
dec
inc
add
ret
cmpsl
push
pusha
inc
loopne
adc
lret
mov
dec
dec
fidivrs
xor
sbb
es
pop
nop
out
mov
sbb
es
insb
or
pusha
pop
insl
test
push
add
pop
mov
outsb
and
leave
push
and
std
aam
add
cmpsb
insb
sbb
add
inc
jmp
push
and
cmpsl
xchg
cmp
cmp
jmp
cmp
loopne
sub
gs
add
or
and
cmp
fwait
sub
bound
add
add
scas
or
stc
fisubl
inc
push
rorb
arpl
or
inc
scas
sub
or
pop
ret
sub
imul
stc
sub
push
push
hlt
add
xchg
sub
inc
jns
push
or
add
imul
pop
mov
sbb
sub
xlat
mov
insb
loopne
pop
aas
and
mov
pop
pop
rcr
push
out
mov
inc
sbb
and
xor
sub
cmpsb
xchg
adc
shll
ud1
in
jbe
xchg
pop
js
in
addr16
cwtl
ret
add
test
inc
sbb
pop
imulb
outsl
jnp
and
imul
and
jecxz
mov
jmp
inc
xchg
gs
jo
nop
loope
xchg
aaa
push
rorb
sbb
stos
mov
inc
lock
lret
and
cmp
adc
shlb
fs
insb
imul
xchg
mov
push
xlat
push
add
or
ret
jl
daa
and
shll
nop
ret
movsl
sub
mov
test
inc
or
or
nop
add
insb
ret
notl
das
push
test
add
std
ja
push
push
add
call
add
xchg
inc
adc
add
pop
and
aad
lock
jge
lods
imul
mov
adc
push
push
mov
and
sub
daa
sbb
loopne
pop
cmp
aad
and
lds
push
and
mov
or
ss
lods
les
cs
aas
rcl
add
add
add
dec
add
mov
push
loop
cwtl
addr16
cltd
rcrb
es
or
sti
adc
hlt
xlat
icebp
jae
mov
mov
pop
psrlw
pop
mov
push
add
sahf
outsb
xor
jbe
ret
cmpsb
xor
xor
aas
aas
dec
pop
lock
mov
push
mov
addr16
pop
push
sub
mov
jp
add
sbb
jp
add
push
fimuls
inc
lahf
and
or
mov
inc
das
stos
add
xchg
popf
and
xor
fildll
test
jnp
add
repnz
push
push
jo
cmp
or
or
sbb
sub
pushf
push
xchg
add
idiv
push
imul
pusha
xchg
mov
adc
xchg
xor
mov
push
insb
loopne
add
aam
jnp
push
jp
jmp
fadd
jg
ret
loope
mov
fsubr
or
push
ss
or
sbb
dec
or
or
fadd
pop
or
in
inc
lods
adc
push
stc
test
int
ss
add
mov
xchg
mov
fadd
dec
nop
mov
xorl
xchg
push
test
xorl
daa
js
stc
xchg
pop
addl
inc
pop
mov
loope
push
call
add
outsb
add
cmp
push
popa
pop
mov
or
mov
add
das
add
insl
and
sbb
adcl
das
stc
dec
nop
pop
pusha
xor
push
fnsave
pusha
bound
add
testl
testl
into
fsubr
push
sub
cmp
testl
mov
pushf
or
cmp
pusha
mov
test
add
scas
mov
mov
inc
inc
movsl
fistpll
js
movsl
add
pop
sbb
sub
adc
fldl
test
push
and
aad
fdivs
adc
rolb
repz
pop
shlb
pusha
mov
adc
enter
fildll
fistpll
pop
fimuls
sub
ret
ss
xor
es
and
cmp
fadds
outsb
aad
inc
in
jmp
sbb
mov
popf
and
xor
loope
jmp
mov
fsubrs
dec
jb
jg
sbbl
into
adc
in
imul
aaa
mov
or
mov
sub
test
or
ret
sub
cli
inc
mov
jmp
mov
add
xorb
roll
and
rorb
mov
inc
daa
enter
xchg
es
adc
ret
dec
xchg
test
cmc
test
sub
addr16
xchg
rolb
jecxz
je
adcb
adcl
decl
dec
dec
sbb
aas
mov
orb
adc
icebp
sarb
sbb
mov
cmc
adc
cmp
add
inc
stc
loopne
dec
jmp
mov
add
adc
popf
jnp
or
mov
xchg
add
sbbl
ja
scas
das
inc
addr16
cmp
push
adc
xchg
popa
sub
cmp
enter
test
scas
cmc
cmp
je
add
dec
popf
and
jo
scas
jo
test
outsl
icebp
xor
orl
cmp
pusha
sarl
std
test
out
aad
sbb
mov
lods
xchg
xor
add
xchg
xor
cmp
inc
out
jae
inc
rcrb
bound
jo
add
and
or
pop
inc
scas
adc
mov
call
pop
and
in
popf
cmp
or
jae
aas
in
out
imul
fildll
shrd
sbb
cmp
mov
adcb
or
repz
dec
sarb
jnp
adcl
push
loopne
sbb
ds
xchg
sub
add
js
mov
adc
ljmp
lcall
sub
jl
cmc
pusha
adc
sub
mov
xor
push
push
push
nop
push
fidivrl
test
mov
mov
cmp
fdiv
shlb
mov
mov
lcall
add
mov
shlb
loopne
lahf
mov
xor
clc
mov
cmp
fwait
dec
aam
xchg
jae
dec
stos
lods
and
ret
cmpl
enter
aad
or
cmp
dec
popa
adc
lods
lret
push
sti
push
cmpsb
aaa
dec
mull
and
sbb
jge
mov
jns
or
iret
nop
jb
push
cmp
fisttpl
test
ja
inc
adc
dec
push
loope
lock
push
jmp
sub
outsl
hlt
xchg
xchg
jp
cmc
dec
outsl
sub
push
out
xor
dec
adc
push
jo
aas
mov
jp
pusha
arpl
sbb
and
inc
lods
insb
test
shl
push
mov
out
add
cmp
pop
out
sbb
loope
cli
add
pop
jl
sarb
not
imul
mov
aam
cmp
andb
add
lret
fmuls
dec
test
roll
inc
and
cmp
pop
add
jecxz
inc
stos
dec
jns
cltd
test
cmp
pop
loop
xor
test
pop
int
leave
shrb
fadds
leave
mov
pop
jb
xchg
sti
push
mov
cmc
xor
sub
and
sahf
cmp
aad
mov
mov
cmp
out
xchg
inc
pop
jecxz
in
lods
fstl
mov
adc
jbe
stos
pop
inc
sbb
scas
pusha
mov
adc
mov
pop
arpl
fistl
popa
movl
push
cmp
pop
mov
jle
das
arpl
test
fistpl
cwtl
jae
mov
push
or
push
gs
dec
or
lods
add
cmc
nop
or
inc
fcompl
dec
dec
add
xor
mov
shll
mov
push
test
int
cmp
sub
pop
cltd
and
jecxz
sbbl
lock
ret
test
loop
or
fldl
pop
mov
dec
xlat
outsl
rclb
sub
mov
and
add
add
dec
ret
jae
push
shrb
adc
lret
xor
fcomip
xchg
inc
popa
add
int3
sub
in
dec
sbb
je
pop
in
and
push
in
cld
and
int3
call
fstpl
mov
mov
xchg
push
icebp
cmp
xchg
sub
cmp
out
ljmp
insl
xchg
cmc
insl
mov
jnp
int
leave
lcall
lret
in
lcall
cld
sub
cwtl
mov
push
dec
jno
push
cmpb
mov
lods
or
inc
stos
imul
dec
fwait
ret
or
dec
lods
push
cmp
shll
imul
adc
mov
test
cltd
aam
lods
mov
movsb
pop
out
lds
inc
lea
movsl
insl
sub
test
pop
sub
xchg
mov
pop
clc
xor
add
scas
adc
cmp
xchg
fidivrl
iret
ret
dec
and
or
mov
rcrl
outsb
mov
dec
sti
stc
cmp
adcl
pop
inc
adcl
test
inc
add
sbb
mov
jmp
mov
sub
mov
add
xchg
sub
xchg
cmpsl
je
and
or
scas
int3
jp
mov
pop
add
mov
jmp
test
fwait
xor
mov
jno
daa
ret
mov
and
rol
xchg
or
xchg
mov
sbb
or
xchg
icebp
xor
js
fwait
xchg
jns
ja
rcl
fsubl
or
les
jecxz
sub
rorb
xor
mov
and
jo
inc
mov
stos
adc
and
test
add
leave
repz
hlt
andl
sbb
in
mov
lret
scas
fldcw
jle
fs
mov
inc
push
or
push
push
aas
push
mov
dec
imull
cs
adc
cmp
xorb
push
scas
push
xor
movsl
in
push
and
xchg
push
les
add
pop
leave
jae
mov
ror
jg
call
mov
xchg
and
push
ret
jecxz
les
dec
ror
or
jne
rol
popf
inc
xor
cmp
movsb
lods
fists
push
pop
cmp
iret
aad
dec
xor
les
push
sub
mov
cmp
push
leave
popf
dec
test
xlat
mov
xor
mov
and
cmpsb
mov
xchg
pop
xchg
push
lds
jmp
pop
and
push
push
nop
flds
add
addl
adc
or
mov
push
sub
andl
push
mov
jno
and
sbb
pop
and
pop
xor
ret
adc
add
ret
cmova
jecxz
insb
dec
mov
cmpb
xor
int3
hlt
sub
sbb
das
push
and
and
push
setns
in
add
push
pop
xchg
dec
adc
pop
jge
loopne
inc
inc
push
xchg
testl
pop
js
mov
push
add
ret
sbb
jl
sub
lods
add
pushf
rcl
inc
sbb
enter
push
pop
mov
dec
mov
lock
js
cmpsl
mov
mov
sti
pop
and
pop
rorb
and
fisubs
mov
jno
loope
faddl
mov
mov
pop
mov
inc
aaa
mov
mov
ret
mov
add
mov
add
aad
lods
or
sub
stc
mov
push
insl
sbb
dec
cmp
add
shlb
outsl
cmpsl
outsb
orl
scas
add
insl
xchg
mov
out
iret
jecxz
xchg
adc
mov
adc
in
test
pop
sub
stos
outsl
push
outsb
sbbb
mov
inc
pop
push
mov
movsb
inc
xor
mov
xor
adc
add
xchg
adc
sbb
inc
cmp
ds
sub
adc
fisubs
sub
xor
pop
mov
add
jg
insl
imul
call
adc
xchg
mov
inc
inc
push
or
push
leave
addr16
or
mov
insl
mov
push
add
sub
add
aaa
adc
out
out
sbb
cmp
xor
inc
icebp
je
mov
popf
xor
dec
in
add
adc
and
mov
dec
sbb
xchg
cmp
mov
sbb
dec
pop
addl
mov
sti
inc
jp
mov
repz
push
sub
out
inc
incb
insb
rcll
jmp
mov
bound
dec
pop
pop
dec
lds
jbe
mov
and
xlat
or
adc
hlt
pop
sbb
scas
inc
pop
in
add
lret
xchg
sahf
cmc
inc
jne
cs
dec
mov
and
add
jbe
sub
fs
pop
mov
daa
shlb
adc
mov
jecxz
mov
js
leave
sub
insl
push
cmp
add
or
push
and
mov
sub
cmp
push
cmc
inc
sbb
pop
add
mov
sbb
push
mov
movb
fisubrs
dec
scas
or
in
outsb
movsl
mov
in
or
cmp
mov
inc
mov
xchg
in
dec
mov
add
mov
and
lea
imul
cltd
xchg
cs
iret
daa
push
add
daa
addl
dec
xchg
bound
das
add
inc
mov
xor
sti
lock
mov
inc
adc
negl
add
and
sbb
mov
add
jg
fistpl
xchg
jae
movsb
je
mov
pop
adc
imul
mov
and
inc
mov
js
lods
lea
inc
cltd
cmp
xchg
add
push
inc
jnp
outsb
fimull
packsswb
xor
and
dec
sub
inc
ret
jae
fs
inc
test
outsl
stos
movsb
movl
dec
xchg
les
add
daa
gs
and
in
out
jno
push
fs
push
imul
sub
dec
jo
pop
int
lock
push
dec
add
test
test
mov
outsb
pop
add
in
imul
inc
mov
jecxz
scas
pop
jns
add
sub
sub
xchg
les
sbbb
xchg
loope
lea
adc
pop
nop
ret
jne
mov
icebp
adc
mov
scas
xchg
sub
fstpl
popa
cmp
xlat
or
shll
cmp
mov
pop
mov
mov
mov
loope
or
mov
je
stos
inc
sarl
js
lock
mov
mov
inc
mov
xchg
mov
nop
lret
sbb
adc
std
push
das
and
sbb
mov
mov
xchg
clc
mov
mov
ss
push
xchg
sbb
or
pop
add
orb
sbbl
leave
cmpsb
ss
call
aam
stos
adc
leave
pop
push
sbb
dec
xor
mov
or
dec
imul
pop
sub
sbb
clc
or
adc
ss
test
xchg
movb
rclb
and
or
rol
lret
stos
cli
or
je
push
rcll
bound
jb
sti
lea
into
xor
roll
rcrl
repz
or
lods
les
inc
xorl
dec
or
pusha
and
dec
mov
mov
call
cmpsl
mov
in
mov
sbb
sub
aaa
or
xchg
test
inc
adc
pop
add
pusha
and
jl
popf
jp
int
mov
or
int
dec
fcmovb
cs
inc
popl
jns
sub
and
jmp
mov
popf
outsb
lock
ss
pop
mov
push
inc
popa
xchg
pop
inc
jb
xchg
bound
xor
or
pusha
enter
and
xchg
sbb
sub
and
xor
add
lret
push
push
xchg
shll
lcall
in
xchg
inc
mov
jae
or
out
call
cwtl
xchg
push
mov
dec
mov
cltd
mov
pop
jmp
dec
ret
mov
jmp
rclb
push
cmp
les
and
dec
xor
inc
mov
xor
jmp
mov
inc
jg
nop
aad
test
in
mov
aas
pop
imul
rolb
xchg
cmpsl
push
popa
xor
rol
xchg
xchg
mov
test
test
mov
std
sub
fsubp
sub
xor
leave
outsb
dec
fmuls
cld
ficompl
outsl
bound
out
imul
lods
mov
inc
or
movsl
shl
cmp
and
adc
mov
push
cltd
addb
jge
xorb
insb
insb
fs
sarl
mov
cmp
or
xchg
jno
test
fistpl
sbb
push
dec
lret
in
das
aad
icebp
and
add
cmc
fisubl
sub
sub
xlat
adc
or
fildll
ffreep
loope
sahf
in
jb
mov
adc
pop
into
and
or
mov
insb
loopne
dec
pusha
mov
xor
and
scas
or
dec
or
and
or
sub
add
test
jge
aad
mov
mov
adc
push
or
add
cmpl
sub
aam
inc
ss
xchg
xchg
push
mov
popf
xchg
xchg
pop
clc
or
sub
xor
xchg
jecxz
dec
scas
dec
fs
dec
push
xchg
rorl
pop
xor
lods
pop
popa
bound
cwtl
cltd
dec
inc
cmp
sbb
sub
in
dec
outsl
push
notl
sub
outsb
mov
jno
iret
push
test
cmp
loopne
insb
lret
loopne
imul
pop
loope
jo
lods
movsb
adc
and
adc
mov
inc
sbb
add
mov
rolb
imul
xchg
and
dec
loope
cmp
pop
rolb
or
inc
adc
jne
push
mov
xor
ret
push
aam
mov
mov
pop
adcb
jg
push
inc
out
sub
cmp
sub
cmp
xchg
and
test
lret
and
mov
mov
andb
fs
inc
pop
arpl
push
or
aad
gs
adc
sub
mov
or
dec
addl
adc
lods
cmpsl
xor
mov
loopne
test
pop
iret
sub
pop
cmc
push
movsb
cwtl
arpl
aaa
dec
jmp
ret
sub
dec
movsb
adc
mov
or
outsl
lret
push
sub
push
xchg
ds
and
sbb
mov
movsl
dec
and
xchg
add
popa
testb
or
shrb
push
addb
outsl
jmp
inc
jnp
shll
lods
lret
aad
imul
cld
and
aaa
dec
arpl
outsl
xchg
stos
rcll
push
add
inc
daa
ffreep
popa
ret
jne
add
jo
test
fs
jmp
jns
andl
add
push
or
fucom
xchg
push
dec
mov
orb
pusha
test
mov
cmc
or
mov
sbb
mov
pusha
nop
jo
dec
into
stos
jl
add
incb
loop
inc
sub
sbb
sbb
in
ret
cmpsl
sbb
jbe
sbb
inc
aad
inc
test
sub
push
adcb
aaa
add
imul
xchg
cmpsl
rolb
mov
mov
test
mov
rcr
jo
jge
js
or
xor
addb
fs
cmp
movsl
cmc
sub
lods
cli
jmp
jb
test
xchg
inc
adcl
insb
jne
popf
insl
ljmp
dec
movsl
pop
and
add
inc
adc
mov
cmpsb
out
or
jmp
jp
cmc
mov
fwait
mov
outsl
movsl
sbb
adc
outsb
xor
mov
sub
sti
lret
and
shll
inc
add
inc
aam
push
sbb
pop
or
dec
movsl
hlt
nop
add
xchg
jmp
fidivl
pop
aam
sub
aad
sub
mov
out
jns
mov
inc
pop
sbb
clc
push
xor
add
sub
rcrb
rol
cmpsl
loopne
add
or
jl
xchg
xor
dec
add
mov
and
pop
js
cmpsl
push
and
rol
popf
jae
xor
push
push
fldenv
lahf
movsl
movsl
push
sbb
leave
cmpsl
sbb
mov
aaa
inc
pop
test
int3
lods
mov
jge
jge
rolb
and
or
xchg
mov
mov
add
mov
xchg
jne
fwait
lea
push
push
jge
jae
call
das
sub
inc
negb
call
pop
add
notl
adc
arpl
push
dec
inc
sti
neg
jb
pop
pop
out
pop
mov
cmp
sub
mov
scas
pop
stos
sub
ror
mov
rorl
jg
dec
cmp
add
dec
mov
rorl
mov
popa
lea
push
push
mov
loopne
outsl
dec
cld
xor
xor
out
inc
shll
iret
mov
ret
pop
and
int3
push
jle
add
hlt
loop
arpl
push
inc
pusha
mov
jnp
daa
pop
sbb
es
sub
fisttpl
adc
xchg
bound
in
addr16
pop
lcall
jnp
jns
pop
scas
push
inc
dec
test
pop
cmp
pusha
and
xor
js
stc
mov
mov
sbb
popa
fbld
inc
inc
loop
rorl
incb
test
shlb
aad
cmpsl
pushf
nop
daa
adc
sub
iret
adc
loopne
arpl
add
nop
rcll
mov
push
out
sub
sub
and
dec
pop
movsl
adc
negl
aas
push
mov
sbb
fistpll
jae
iret
push
jae
movsb
xchg
xchg
jmp
lahf
in
imul
fucom
das
sbb
or
lods
cmp
mov
jnp
xchg
mov
test
rolb
mov
out
or
add
addl
sub
data16
jno
fwait
jb
sub
nop
push
icebp
out
add
mov
ss
icebp
insl
imul
adc
roll
pop
inc
mov
adc
daa
cmp
into
arpl
imul
sub
ret
lahf
mov
xchg
push
cmp
int3
sbb
iret
lcall
rclb
sbb
and
adc
and
into
sarb
into
or
lret
sub
jmp
mov
xchg
outsb
int3
rorb
jmp
cmp
les
pop
movb
lea
jmp
adc
xchg
adc
mov
les
or
sahf
and
push
int
js
and
dec
ret
mov
mov
push
push
lret
fcoml
dec
push
test
jne
push
push
aaa
sub
cmpsb
cmpsl
nop
shlb
dec
cli
mov
cli
lock
roll
mov
inc
jns
ret
dec
push
jecxz
mov
in
mov
pop
insb
dec
arpl
dec
pop
sub
sbb
and
gs
mov
mov
add
lds
sbb
pop
and
push
fdivl
js
push
aad
pop
mov
sbb
sbb
es
clc
ret
lret
sbb
xor
repz
inc
pop
xchg
str
mov
mov
push
mov
cmp
pop
negb
jne
ja
adc
aas
sbb
mov
shrb
dec
bound
mov
ret
xchg
xchg
stos
jmp
jne
lea
leave
xchg
cs
lds
stc
aam
loop
cmp
movsb
cs
cltd
or
xor
push
das
pop
pop
xchg
das
sub
sub
or
cmc
fimuls
dec
mov
les
inc
ds
pop
imul
dec
inc
sbb
dec
icebp
and
mov
jns
shlb
jbe
ss
add
fcmovne
insb
and
jecxz
out
stos
xchg
aam
pop
xchg
cltd
imul
or
dec
sbb
or
hlt
stos
loopnew
test
mov
cmc
or
test
mov
movzbl
dec
popa
and
dec
mov
test
and
int3
mov
sub
lret
int3
dec
dec
xlat
xchg
ret
scas
inc
call
lds
lds
adc
cmp
mov
jle
mov
or
fisubs
pop
das
push
mov
mov
dec
or
inc
jp
clc
dec
dec
pop
and
loop
inc
out
lcall
popf
jnp
add
push
cmpsl
fidivs
or
inc
clc
rcr
inc
dec
cld
xchg
and
enter
icebp
xchg
jg
and
inc
out
mov
and
mov
push
sub
mov
add
jp
sub
jo
ja
jecxz
pop
cmpsl
fwait
mov
out
mov
xchg
mov
out
mov
mov
jle
sub
inc
sarb
punpcklwd
fcoms
mov
sub
test
out
imul
jno
int
inc
jne
roll
jne
xchg
int3
mov
ret
insb
mov
in
ja
test
xchg
daa
popa
sub
jecxz
cmpsb
jbe
dec
dec
push
sbb
mov
or
sbbl
adc
mov
scas
rcrb
pop
aas
call
movsl
mov
xor
add
in
xor
xchg
xlat
movsl
xchg
daa
adc
mov
sub
clc
rolb
mov
sbb
or
test
cmp
and
sub
push
imul
dec
mov
sbb
jl
aaa
dec
cmovp
inc
sbb
or
push
addr16
rorl
addb
pusha
mov
lock
outsl
pop
sub
push
or
jne
inc
or
mov
mov
sub
lods
inc
and
push
xor
cmc
inc
ss
incl
or
or
test
mov
lret
dec
test
das
xor
push
sub
stc
jbe
js
adcb
push
fists
xor
sti
xchg
lea
je
push
cwtl
jp
out
das
xlat
insl
push
mov
push
clc
fistps
bts
jns
das
mov
inc
aas
mov
push
mov
dec
cmp
mov
or
jle
repnz
cmpsl
xor
fiadds
push
mov
add
daa
out
pop
add
adc
push
mov
les
icebp
pop
mov
in
fbstp
pop
mov
popf
mov
arpl
push
insb
cmpsb
sti
and
sub
sbb
pop
and
push
cmp
stc
fldenv
jo
cmpsb
jl
sub
lds
aad
aam
or
ljmp
mov
mov
sub
jl
pop
movsb
or
outsl
dec
pop
fdivr
pop
dec
fdiv
xor
lods
mov
jge
addl
mov
jmp
mov
xchg
mov
sbb
xchg
pop
xlat
arpl
pop
aam
ljmp
outsb
xchg
add
or
outsl
rcrl
inc
mov
insl
jmp
icebp
or
bound
add
stos
xchg
sub
pop
mov
add
inc
fs
jns
push
loopne
test
jle
lahf
mov
test
adc
in
sbb
incb
xor
addr16
loopne
sub
and
sub
jne
dec
sub
jle
aam
adc
lret
pop
sub
pusha
outsb
xchg
pop
movsb
jle
stos
push
sbb
call
adc
dec
js
lods
sbb
call
and
inc
shlb
lret
fstpt
jo
push
push
es
dec
dec
imul
jns
ss
ja
icebp
out
imul
ja
leave
xor
out
cmp
jae
push
or
mov
and
ss
mov
add
add
mov
pop
xor
mov
mov
out
iret
or
outsb
xchg
pop
fidivs
sarl
imul
ja
or
fildll
mov
lea
into
divl
js
aaa
inc
ret
ret
jns
lret
cs
cmpsl
inc
mov
aas
imul
sbb
push
sbb
mov
data16
mov
xchg
mov
cmp
psubq
fisubrs
pusha
cmpl
shlb
popa
inc
stos
lea
dec
mov
into
pop
sbb
cltd
add
inc
inc
hlt
inc
sub
sub
or
insb
jns
jp
push
fbstp
dec
movsl
push
neg
fcmovnu
mov
stc
mov
xchg
mov
add
push
add
mov
insb
and
mov
cmp
mov
fistps
cmp
and
lock
mov
inc
popf
aaa
dec
test
sbb
mov
aaa
sub
pop
enter
adcl
pushf
xchg
xchg
xchg
xchg
add
ds
cmpl
cwtl
adc
adc
sbb
add
or
fucom
out
xor
iret
jnp
inc
sub
xlat
and
cmpsl
mov
push
sarl
test
xchg
es
fimuls
stc
pop
add
jae
mov
xchg
test
sub
or
fcoms
jg
mov
add
lret
push
pop
jno
shlb
test
jecxz
push
ret
test
sub
ljmp
xchg
lods
fadds
mov
cmc
lahf
and
xchg
inc
and
jecxz
loopne
mov
js
push
nop
ja
mulb
test
js
xor
fbstp
add
mov
dec
out
scas
lahf
addr16
gs
push
add
call
xor
sbb
sti
sub
rorl
cwtl
mov
xorl
mov
outsb
cmpsb
jmp
mov
sar
fiadds
sbb
mov
add
push
fwait
cltd
mov
add
push
loopne
or
stos
pusha
or
xchg
push
and
fs
push
repz
xchg
cmp
adc
subl
pop
test
je
in
cmp
rcr
add
cmp
xchg
xchg
xchg
jmp
dec
mov
inc
ret
pop
sti
inc
lcall
fcomps
bound
and
icebp
scas
mov
sbb
and
out
call
and
sub
xchg
push
aas
fldl
repz
and
imul
or
arpl
xchg
es
xor
in
xchg
ret
ret
fisubrl
addb
in
cmpsb
fnstsw
ja
push
in
ljmp
ret
test
notl
xchg
mov
mov
pop
fwait
mov
pop
adc
mov
aam
xchg
pop
ret
push
xchg
jl
xchg
sbb
movsb
je
adc
ljmp
test
ss
jae
add
inc
add
and
das
xchg
mov
dec
and
lcall
mov
sti
adc
fsubp
pop
mov
icebp
xlat
mov
lahf
fcomps
xlat
popa
cmpsb
cmp
andl
jge
lods
and
and
dec
shl
mov
cmpsl
ret
test
cmp
pop
sub
cmp
inc
jbe
stc
ffreep
roll
mov
cmpl
fucomi
jge
lods
push
jmp
loop
xor
cmpsb
addr16
cwtl
and
cmpsb
in
and
jb
inc
mov
sub
cmp
scas
ret
push
sub
hlt
lea
mov
cmp
insb
pop
xor
xor
and
jnp
xor
aaa
scas
fisttpl
push
xor
or
mov
add
xor
pop
daa
adc
pop
sbbl
xchg
rorb
stos
lock
ds
xor
aam
lods
addr16
fwait
std
mov
lods
mov
fsts
xor
loopne
xchg
lods
mov
mov
xorl
and
xchg
arpl
sbb
flds
lret
dec
or
add
mov
ret
dec
jns
addb
dec
and
adc
cmp
add
bound
xchg
test
sarl
outsb
test
cmp
cmp
es
add
or
imul
cmp
loop
push
iret
inc
jne
imul
inc
idiv
pop
jge
gs
jb
imull
aam
dec
mov
icebp
cmp
xlat
or
jae
leave
xor
xorl
dec
fdiv
inc
inc
mov
insb
and
insl
scas
jb
aas
push
sub
das
add
sub
in
lds
add
ret
inc
loop
mov
mov
ret
loope
mov
in
pop
stos
add
cmp
mov
cmpsb
add
nop
inc
das
sbb
test
mov
add
add
loope
pop
adc
sbb
push
aam
xor
xchg
pop
pop
or
and
ljmp
pop
xor
xchg
ds
daa
jnp
mov
pushf
stos
add
testb
push
repnz
cmp
fisubrl
and
jnp
scas
inc
pop
push
sub
pop
gs
sbb
ljmp
inc
lds
sub
sub
subb
or
ret
pop
and
xchg
outsb
and
call
and
adc
sbb
popf
movsl
adcl
into
jno
xlat
popa
andl
or
divl
cwtl
into
sub
popa
xchg
push
jge
sbb
xor
mov
sbb
sub
aam
mov
shr
cmpsl
cmp
jle
call
push
pop
inc
inc
add
hlt
push
out
mov
push
out
sub
les
or
add
xchg
ret
enter
lret
dec
mov
call
mov
popf
sti
or
inc
add
cmp
rcrl
and
or
pushf
push
repnz
add
ret
xchg
mov
maskmovq
notl
in
mov
icebp
mov
jb
xchg
xchg
das
gs
sub
push
or
mov
add
mov
push
ljmp
ret
xchg
test
mov
sbb
push
mov
push
jge
rorl
or
stos
mov
push
dec
or
pop
lret
xchg
div
pop
arpl
or
push
jp
xchg
sbb
cmpsl
push
fcmovnu
scas
insl
sbb
cmpsb
fdivs
pop
mov
rol
enter
rcrl
mov
xlat
and
shr
adcl
test
jmp
and
pushf
ljmp
int
push
test
add
movsl
sbb
outsb
loop
insl
fsts
adc
popf
mov
or
or
cmovge
mov
sbb
test
inc
mov
movsb
test
and
dec
or
cmp
mov
xchg
lret
inc
jno
lock
xchg
or
cmp
inc
aad
ss
daa
pop
and
call
and
adc
and
cmp
popf
cmp
mov
fwait
sub
sub
pop
test
dec
in
mov
pusha
cmp
and
jno
inc
aad
sbb
mov
sub
and
xchg
aas
gs
movb
lahf
faddp
mov
rclb
js
fsubs
mov
popa
push
test
sbb
cmpsl
testl
xor
push
cmpsb
and
xor
dec
inc
ret
mov
sbb
aas
fwait
mov
add
pop
ja
dec
mov
sub
loop
outsl
dec
ds
mov
dec
mov
mov
lahf
mov
dec
pop
stos
pop
pop
mov
add
shll
jnp
inc
int
aas
sub
jmp
mull
addl
loopne
gs
or
leave
lea
push
lret
mov
adc
lock
js
or
out
ret
jo
bound
sbb
lret
inc
es
pop
add
sti
rcr
pop
insb
mov
dec
lret
jbe
in
sub
add
xor
repz
shll
sub
mov
stos
aam
rclb
and
leave
pushl
pop
or
inc
or
sbb
sbb
js
jns
add
sub
aam
inc
imul
xor
test
outsl
cmpsl
jmp
pop
lret
addb
and
mov
cli
or
inc
test
push
lea
les
inc
lods
aaa
mov
aaa
sub
stos
lock
mov
incl
mov
lods
in
adc
sub
jecxz
bsr
or
rcrb
andl
aad
ret
push
mov
fnsave
je
adcl
mov
xchg
out
cmp
stos
jnp
scas
test
fisubrl
out
stos
dec
push
std
es
adcb
pop
lock
movsl
in
push
pop
fmuls
in
in
add
call
adc
stos
push
add
les
icebp
xor
loopne
in
mov
add
xor
shll
mull
lea
addb
in
out
roll
inc
pop
adc
sbb
inc
lods
ss
aad
repz
nop
ja
and
inc
sti
mov
mov
mov
inc
jbe
lret
inc
popf
loope
add
mov
aad
and
pushl
loope
out
inc
sub
aad
push
stc
jmp
add
adc
pop
stc
mov
loopne
xchg
lahf
xchg
mov
jo
or
or
mov
cmpsb
pop
pop
sub
ret
mov
aam
jne
dec
movsb
int
dec
loop
movsl
or
cltd
shlb
in
icebp
fs
sti
cmp
imul
dec
int
pop
and
or
cmpsl
xchg
roll
mov
xor
inc
scas
mov
daa
push
out
sbb
mov
cltd
icebp
aam
cmc
outsl
rcr
inc
add
pop
pop
mov
pop
pusha
orb
testb
pop
pop
lock
popf
mov
push
and
cmp
mov
bound
xor
enter
fst
movsb
imul
cmp
sbb
inc
sub
xor
in
dec
lods
sbb
mov
xchg
lret
aad
stc
or
jle
sub
push
or
das
aaa
jo
add
fsubp
adc
pop
inc
xchg
movb
sti
inc
add
push
xlat
cmpsb
adc
push
mov
fwait
sbb
mov
loopne
adc
pushf
ret
js
cli
cmp
xor
outsb
mov
imul
jbe
imul
lds
xor
push
imull
cltd
addl
xorl
jmp
loopne
orl
or
movsl
push
fldenv
xorl
cmp
mov
cmpsl
cs
mov
mov
sbbb
incb
ret
aas
ja
loope
fists
dec
shrb
shll
test
leave
int3
int3
lods
xor
das
pusha
mov
js
mov
aaa
aas
pop
ret
xor
enter
pop
push
mov
pop
lock
pop
mov
test
mov
inc
sbb
or
dec
insb
addr16
sbb
cmp
sub
repz
mul
in
adc
loope
sarl
and
cmp
movsb
loope
jo
add
cmp
fistpl
stos
dec
mov
out
sub
add
sbb
or
int3
cmc
aam
push
mov
push
cmp
push
stc
bound
repz
or
imul
xor
int3
cmp
adc
or
or
arpl
mov
mov
aaa
jmp
add
daa
shll
pop
jo
pushf
ret
pop
jmp
add
xchg
push
lret
push
andb
sbb
or
test
rcrb
inc
in
inc
mov
aam
aam
xor
jecxz
iret
add
out
je
add
addl
sbb
mov
out
mov
jns,pn
movsl
push
jb
lods
sbbb
xor
sbb
xchg
cs
insb
roll
enter
les
imul
fimull
repz
or
and
push
jg
call
aaa
adc
dec
sub
test
lahf
bound
lret
sub
sti
adc
dec
xchg
push
jg
repz
push
sub
fcoms
xchg
shrb
sub
adcl
push
sub
subb
push
outsl
jmp
aaa
push
ret
pushf
addb
enter
sbb
sbb
xor
outsb
mov
and
jnp
pop
mov
push
repz
cmpb
jns
add
arpl
lret
mov
dec
mov
inc
and
xchg
and
subl
rolb
or
les
fldl
jb
fdivs
movsb
into
sbb
pop
xor
sbbl
shll
mov
inc
int
in
sbb
cmp
clc
xor
or
xchg
stos
mov
mov
lea
shlb
pusha
mov
mov
imul
subl
jno
xor
add
push
or
rcrl
and
mov
adc
in
xor
pop
or
cmp
mov
inc
adc
notl
mov
inc
fdivrs
sub
out
movsb
into
push
push
dec
mov
inc
lcall
test
rorb
test
add
and
into
or
orl
pop
add
pop
push
jb
jno
fadds
scas
mov
gs
fadd
cmp
add
inc
es
iret
ret
push
aad
sub
add
test
js
mov
dec
jl
jge
movsb
stc
lret
xlat
into
mov
pop
sbb
and
ficomps
gs
cmp
js
push
sti
push
and
pusha
movsb
sbb
test
dec
out
push
scas
cmpsl
das
sub
xor
aas
mov
mov
movzwl
lods
mov
jae
daa
inc
adc
iret
imul
sub
andl
cli
pop
ret
cmpl
push
sbb
jg
pop
movsl
insl
pop
jo
mov
add
add
adc
pop
bound
or
jnp
add
sub
xor
icebp
pop
ljmp
into
fdivs
cmp
push
jo
xor
sbb
push
mov
mov
mov
adc
dec
daa
push
sbb
jo
dec
test
xor
xor
push
dec
in
xlat
bound
jp
fcomi
aad
dec
leave
pop
adc
cmc
lahf
imul
mov
or
dec
lahf
sbb
test
test
add
inc
test
xor
xchg
and
sbb
cmp
mov
sbb
pop
mov
sbb
add
pop
xlat
mov
pop
sbb
add
enter
das
je
loopne
fnstenv
push
je
movsl
pop
pop
cpuid
sub
fisttpl
lods
pop
lods
lods
stos
mov
in
or
leave
sbb
or
fdiv
jnp
testb
aaa
mov
cmpb
cmp
inc
inc
mov
add
inc
gs
jge
inc
test
ret
in
fnstcw
sbb
cwtl
clc
rorb
xchg
lahf
jg
leave
jnp
and
or
lahf
mov
test
into
cli
gs
icebp
or
clc
and
fldl
in
mov
je
imul
mov
sub
packsswb
mov
out
push
or
int3
in
movsl
cs
pop
mov
rorl
push
sbb
mov
lods
into
addr16
and
xor
popa
ret
ret
push
jge
pop
jb
cmp
push
sub
in
addb
xchg
shrb
push
sub
cmp
shlb
inc
ret
and
xor
sub
dec
cltd
inc
mov
pusha
mov
popa
ret
adc
stc
jnp
outsl
xchg
lret
test
lea
stos
inc
push
insl
dec
sbb
dec
popf
rorb
in
mov
pop
sub
loope
xchg
lret
adc
outsb
dec
popa
lahf
nop
imul
arpl
sub
ret
jle
xor
jb
inc
iret
ret
fistpl
add
dec
xchg
and
pop
push
outsl
or
test
or
jo
xchg
test
mov
aaa
loope
sub
push
out
xor
cmpsb
fiadds
mov
pop
pop
scas
xor
sub
jne,pt
or
clc
or
inc
ljmp
in
inc
and
mov
call
mov
test
or
cmp
mov
push
or
ja
jo
imul
jle
fs
jbe
jae
mov
lds
nop
shlb
seta
xchg
pop
or
lods
repz
mov
lahf
xor
pavgw
test
sbb
jo
or
dec
inc
mov
xchg
in
xchg
das
ljmp
adc
dec
fwait
or
cmp
xchg
aam
lea
jecxz,pt
sbb
in
adc
andl
adc
shrb
push
adc
sbb
adc
xchg
lods
or
adc
scas
push
sbb
sbb
imul
arpl
cmp
add
sbb
loope
or
mov
jl
inc
ljmp
mov
cwtl
pop
js
shll
vorps
push
sbbb
mov
pop
loopne
cmp
or
lret
add
pop
push
leave
dec
hlt
mov
orl
xchg
rcrl
insl
adc
testl
popf
test
add
js
inc
hlt
lods
xchg
push
insb
pop
mov
loop
stos
repnz
jno
pop
jno
scas
mov
out
movsl
mov
es
repz
mov
cmp
fbld
sbb
cmp
loope
mov
mov
gs
pop
sbb
push
divb
test
sub
sub
ja
mov
push
mov
pop
js
aam
add
out
xor
or
add
cmp
xchg
add
in
jno
jmp
inc
xor
cltd
pushf
cmc
lret
dec
and
and
cmp
aam
and
or
sub
mov
aas
jge
add
iret
sbb
sbbb
test
test
psubusb
es
xchg
sbb
sub
out
mov
out
jnp
xor
mov
jecxz
mov
out
mov
cltd
lds
jge
lahf
sbb
cvttps2pi
dec
adc
aad
pusha
lea
clc
mov
push
xor
fwait
pop
dec
testl
jmp
aas
popf
popa
mov
daa
ljmp
sbb
sbb
out
daa
ret
xlat
jecxz
cmpsb
push
imul
cwtl
jnp
call
jns
movsb
add
testl
aaa
idivb
pop
out
adcl
adc
lds
fisubl
aaa
jbe
xor
imulb
xor
stos
sub
mov
loop
notl
mov
jmp
cmc
add
or
dec
mov
mov
lods
add
ret
or
jnp
leave
add
cmp
pop
cltd
jmp
sbb
into
dec
aad
add
adc
dec
stos
ja
pop
in
xchg
add
jno
lret
mov
push
inc
loope
cli
sbb
fsubrs
lahf
push
xor
out
push
inc
ss
addl
pop
mov
sti
jg
mov
fmuls
cmp
in
lods
sub
mull
lods
push
outsl
lods
in
pop
add
out
and
ret
xor
jecxz
push
out
popa
lods
aam
jecxz
sub
stc
or
push
sbb
mov
iret
iret
cmp
call
adcb
mov
enter
xchg
xchg
in
mov
roll
stc
and
lcall
push
cmp
inc
push
cmc
dec
sbb
xlat
ret
ret
sub
shr
push
mov
rep
mov
fldl
jmp
add
mov
stc
ljmp
mov
mov
push
in
and
add
ja
cmp
push
mov
cmc
adc
std
daa
shlb
int
lods
mov
out
mov
rolb
out
push
addl
xchg
push
cwtl
or
cmpsl
dec
add
aad
ss
adcl
fisttps
sar
jne,pt
insl
in
jae
addb
push
xor
cltd
addl
dec
mov
inc
mov
int3
sbb
shlb
cmp
jg
leave
sub
adc
imul
sub
inc
lret
and
mov
push
fdivl
add
add
ljmp
je
pop
repz
and
sub
test
jmp
lahf
sbb
push
loope
lret
mov
std
add
mov
sarb
push
cmp
mov
add
pop
ret
add
push
push
mov
mov
sbb
xor
or
outsl
lea
ret
arpl
jnp
stos
pop
push
in
mov
sub
and
jg
int
fildl
movsl
mov
push
dec
pop
jo
xor
add
icebp
lods
sub
xor
pop
add
adcl
push
int3
mov
stos
jg
add
mov
push
mov
sahf
or
pop
shrl
dec
pop
adc
add
ds
in
dec
shll
add
mov
cltd
sub
sti
insb
mov
clc
or
or
in
dec
adc
fadds
pop
arpl
ret
xchg
dec
js
add
mov
dec
out
cld
fmuls
lahf
mov
xchg
jb
mov
xor
or
mov
leave
out
cmpsl
xchg
inc
mov
lcall
mov
aad
aaa
into
rclb
dec
repnz
adc
aam
gs
inc
test
shrl
movsl
ljmp
enter
or
push
and
lea
add
les
mov
daa
or
jbe
aaa
adc
cmp
cmpb
inc
jmp
jp
mov
iret
jge
fldpi
push
xor
sbb
inc
imul
push
cltd
inc
mov
gs
sti
push
rclb
jecxz
and
sbb
push
aam
sbb
lea
jnp
out
adc
add
clc
pop
jmp
push
pop
jmp
ret
add
adc
scas
and
sub
movl
sbb
negl
mov
mov
cmc
push
aam
fmull
inc
addr16
test
loope
int
roll
out
and
ljmp
mov
jmp
adc
push
fs
ret
dec
gs
mov
imul
add
mov
xor
test
add
test
add
add
push
adc
push
mov
iret
rcl
dec
add
addr16
insl
mov
jnp
cmpsl
pop
add
ret
add
arpl
enter
in
cltd
rcrl
and
imul
rolb
add
mul
insl
sub
pop
out
add
test
push
shlb
mov
cmp
xor
add
test
jmp
pop
ror
adc
mov
stos
pop
sbb
test
sub
and
ljmp
push
popl
test
imul
bound
imul
shrl
insb
inc
repz
outsl
xor
mov
jae
ljmp
mov
dec
adc
xor
push
test
mov
push
pop
test
push
mov
lds
mov
or
and
sub
out
add
mov
jmp
movsl
cmp
sbb
push
jmp
loopne
out
push
xlat
mov
push
mov
jno
imul
rorb
push
inc
and
push
das
inc
fisubl
xchg
jg
adc
mov
daa
adc
lret
sbb
cwtl
ror
jmp
mov
add
shll
rorl
stos
push
pop
and
inc
add
push
or
movsl
or
addr16
adc
lods
arpl
push
pop
adc
jne
stos
les
aas
mov
test
xchg
cmpsb
push
inc
movsl
das
inc
adc
cmc
inc
mov
lods
pusha
xchg
sbb
adc
sbbl
lea
cmp
out
sbb
or
popa
xchg
add
loope
lea
lods
push
insb
cmp
shll
movsb
sub
and
push
inc
subb
cmpsb
adc
inc
fstps
xor
and
pop
dec
or
shlb
pop
mov
and
cmp
aaa
push
insl
mov
aaa
xlat
or
rorb
test
mov
sbb
cltd
iret
adc
push
daa
adc
mov
les
cmp
xchg
daa
and
push
ret
pop
sbb
push
lea
in
bound
insl
push
mov
dec
jmp
jno
adc
test
and
fst
rorl
mov
sbb
mov
insl
dec
mov
rolb
push
or
stc
rcll
stos
fcmovnu
cmpl
xchg
xchg
sub
fpatan
mov
sub
lds
xchg
stos
aam
inc
daa
fwait
jmp
movsb
data16
mov
lea
sub
sub
test
je
sti
xchg
pop
sub
push
jecxz
shrb
push
mov
mov
xchg
test
lds
aad
adcb
add
sbb
and
push
ja
mov
das
inc
stos
push
add
daa
add
push
pop
or
lahf
xor
aam
leave
lahf
adc
jge
bound
adcl
add
shll
sub
inc
and
or
subl
mov
mov
xor
sbb
add
or
mov
xor
cmp
push
ja
inc
sti
int
sbb
cs
sbb
mov
add
aam
pop
in
mov
icebp
int
xor
ret
pop
push
or
xchg
lahf
adc
cltd
mov
fldln2
gs
pop
jl
pop
push
dec
jg
in
out
fcmovnu
jle
add
and
add
cli
push
in
ja
in
and
inc
cmc
outsb
ds
stos
xor
aas
cmp
sub
sti
jge
addr16
or
popf
sbb
outsl
or
imull
add
or
inc
jne
push
mov
sub
xchg
fnstsw
jns
aas
aaa
pop
xlat
fsts
lea
xchg
jnp
cld
outsb
push
jno
dec
push
mov
push
imul
or
and
adc
lods
ret
in
das
push
add
push
adc
adc
call
add
jecxz
inc
movlhps
add
xor
inc
pop
mov
out
adc
and
adc
mov
cmpsl
push
out
shll
adc
into
mov
cmp
outsl
add
jmp
xor
xor
adc
cwtl
aas
fsubrs
inc
mull
bound
add
and
adc
adc
syscall
and
xor
sarb
or
sbb
xchg
bound
sbb
xchg
in
xor
subl
mov
shll
xor
and
add
jbe
push
jno
jnp
outsl
insl
add
xchg
ja
fadds
sub
cwtl
loope
in
pop
inc
mov
sbb
xchg
add
sub
xlat
mov
insl
inc
mov
jne
ja
pushf
adc
mov
or
and
lds
and
xchg
int3
ficoms
sub
pop
fildl
das
adc
subl
pop
or
js
imul
pop
mov
es
push
sub
lds
xchg
or
mov
cld
adc
sbb
test
sub
fldcw
ja
jmp
sbb
jno
sbb
clc
adc
dec
pop
pop
or
inc
xor
inc
shlb
sarl
jmp
ja
nopl
pop
pop
lahf
dec
xor
xor
xchg
dec
cmp
push
mov
xor
xchg
jg
cmpsb
jns
adc
add
sbb
enter
outsb
inc
jne
aaa
mov
xchg
ss
mov
jne
or
sub
insb
mov
filds
lret
ficoms
fildl
sub
pop
cmp
pop
mov
xor
int
in
out
mov
sub
out
loope
or
mov
add
mov
xor
push
xlat
das
mov
mov
adcl
popa
mov
jno
xor
sahf
test
inc
shrb
or
inc
dec
sbb
in
adc
xchg
xlat
jmp
mov
lea
movb
inc
add
adc
shrb
ds
or
cmp
adc
jns
sub
jle
or
test
xor
push
jb
mov
cmp
xchg
ficompl
outsb
loopne
inc
add
movsb
and
sbb
int
jb
fldt
cli
xor
add
sub
xchg
sub
adc
testb
js
fdivl
sbb
loope
jnp
jmp
mov
inc
in
fildl
lret
add
in
in
cmp
xorb
scas
mov
or
sbb
js
divb
sbb
xchg
dec
jo
in
loop
add
aas
mov
jo
rclb
popf
cmp
jl
and
jnp
mov
add
sub
and
loopne
es
test
sbb
xchg
and
adc
jecxz
mov
adc
mov
fimull
sbb
rolb
pop
ret
nop
cmp
push
or
sti
inc
jno
adc
ss
mul
mov
xchg
lcall
negl
or
mov
xchg
mov
in
mov
adc
mov
stos
lods
in
mov
mov
lahf
in
sub
iret
or
loop
pop
popf
mov
or
inc
mov
and
xchg
in
pop
fcomps
outsl
imul
sbb
pop
cmp
jle
lock
insb
jmp
xchg
adc
ret
jae
mov
push
int
shll
sbb
mov
mov
cmpsb
mov
ss
adc
or
pop
cmp
fstl
cs
jnp
add
xor
pop
jmp
hlt
xlat
mov
insb
mov
arpl
xchg
mov
test
cmpsb
loop
mov
mov
add
je
pushf
add
adc
sahf
insl
fiadds
jmp
gs
and
push
lock
arpl
test
jnp
test
jp
orl
adc
pop
mov
sub
hlt
mov
ret
xor
dec
fldcw
std
mov
incl
sbb
jmp
inc
pop
repz
imul
dec
ret
dec
insb
int
jb
clc
adc
dec
pop
fmull
pop
mov
jo
xchg
adc
add
les
popf
inc
and
jecxz
movsb
xor
fdivs
sbb
call
xor
js
icebp
andb
js
fmuls
lock
rcl
into
data16
aas
dec
adc
scas
out
clc
adc
sbb
pop
or
out
mov
fisubrs
push
lods
pop
sub
lock
push
pop
fsts
incb
mov
pop
cmp
cmp
cs
add
aad
inc
push
push
sbbb
mov
push
cwtl
sub
push
pop
jno
call
mov
jg
push
in
rcl
aas
pop
test
sahf
test
mov
add
cmp
mov
ss
lock
cmp
mov
rorl
es
imul
jmp
jecxz
sub
lock
pushf
data16
cwtl
adc
pmullw
sub
mov
add
xor
es
dec
jmp
adc
pop
and
and
mov
push
sub
pushf
outsb
rolb
aad
shlb
xor
sbb
xchg
jl
fadd
cmovle
rolb
ss
addb
and
push
cs
push
jb
adc
or
add
loope
pop
push
fdivs
mov
das
je
cld
mov
mov
add
inc
push
int3
sahf
les
xor
jle
mov
mov
mov
dec
lds
dec
xor
push
and
loopne
sub
push
data16
ljmp
cwtl
jle
dec
xor
push
pushf
mov
xchg
cmpsl
mov
rsqrtps
add
pop
cmc
mov
mov
test
or
cmp
fdivl
jl
sub
out
mov
fiadds
pop
and
dec
cmpsb
jnp
cmp
sbb
mov
enter
inc
mov
scas
or
push
xor
jecxz
inc
or
jmp
cmp
inc
mov
and
push
cmpsb
sub
mov
std
dec
rol
or
sarl
xor
clc
jbe
cs
loop
sub
xchg
push
test
shrl
push
mov
loopne
push
lea
jl
loop
outsl
loopne
mov
mov
imul
xor
imul
pop
sub
cmp
bound
push
inc
mov
gs
les
pop
hlt
push
dec
lcall
jp
aam
adc
lock
lret
xor
mov
sub
push
push
push
je
js
pop
loopne
dec
jecxz
clc
mov
mov
mov
addl
mov
cs
cmc
loope
jbe
out
jns
cli
fsubr
lds
mov
push
lcall
jmp
push
mov
pushf
mov
jecxz
xchg
or
sbbl
loopne
cmp
sbb
lret
mov
mov
mov
push
gs
loopne
xchg
orl
pop
inc
ljmp
sub
aaa
out
mov
imul
movl
push
inc
out
cmc
sub
adc
pop
and
jb
cli
jo
fidivs
ret
test
pop
inc
or
mov
pop
iret
or
cmp
xor
jno
cmp
add
call
lock
sbb
bound
fisttpl
out
adc
js
ficoms
dec
insb
push
or
pop
jo
lea
loope
loop
push
mov
cmp
in
mov
push
push
pop
jmp
ja
frstor
mov
mov
out
pop
mov
adc
mov
nop
jb
xor
xchg
inc
inc
adc
je
insb
bound
push
popf
out
cmp
stos
push
faddl
push
movhps
adc
mov
mov
push
mov
push
sub
int3
pop
test
push
mov
adc
cs
cmp
xor
sub
push
fnsave
adc
sbb
pop
mov
fiadds
jge
push
cwtl
sbb
out
icebp
mov
xchg
dec
js
lahf
sbb
test
cld
rorl
push
ret
outsl
cld
push
mov
arpl
jecxz
push
cltd
mov
mov
pop
cmp
pop
mov
nop
lock
mov
xor
or
dec
cltd
cmp
xlat
push
inc
jo
xchg
lret
sub
in
cmc
or
rorl
push
jmp
jmp
shrl
hlt
fs
xorb
sbb
scas
test
scas
push
dec
fidivrl
mov
stos
jl
iret
pop
jecxz
mov
jl
add
notb
out
add
in
data16
xor
in
icebp
shl
xor
fwait
pushl
jg
lds
pusha
sbb
or
mov
inc
mov
icebp
xor
rcll
or
xchg
sbb
ja
jge
jl
cli
or
or
cmpl
pop
mov
jmp
rcr
dec
subb
test
imul
push
inc
lods
pop
outsb
xor
mov
xchg
jecxz
mov
inc
aaa
push
test
lock
mov
or
cld
lcall
iret
outsl
fcmovb
addb
imul
fwait
push
jo
js
lahf
inc
sbb
pop
jp
xor
mov
mov
mov
cmp
popf
fnstenv
mov
loopne
xchg
adc
pop
test
sbb
mov
jb
loopne
xor
jge
sbb
xor
sahf
xchg
cmpsl
pop
rorl
push
mov
ficoml
and
ret
fcompl
mov
jbe
arpl
push
sbbb
sub
inc
cmpsl
xchg
in
mov
push
cmp
push
dec
aaa
cmp
call
dec
push
or
adc
or
xor
test
pop
lcall
xchg
int
divl
or
cmp
je
mov
xor
cmpsl
test
nop
push
pop
test
push
push
outsb
jnp
mov
movsb
rcrb
pop
dec
jg
sbb
jbe
test
test
ja
inc
and
cli
cmp
idivb
xchg
test
adc
push
jo
imul
out
imul
leave
jp
push
push
jp
sbb
or
dec
ss
hlt
loope
push
adc
sbb
mov
pop
or
pop
pop
pop
sbb
mov
rcl
cli
add
rolb
xor
xabort
sarl
fsubs
push
outsl
cli
and
pop
sbb
and
rclb
nop
inc
clc
fiadds
das
in
stc
insb
enter
mov
fs
sub
and
aad
mov
scas
pop
jl
loop
adc
fistpl
jae
mov
das
sub
mov
sbb
daa
sub
add
cli
sarl
pusha
pop
mov
push
push
daa
fsubs
popf
mov
rorl
mov
push
fidivrs
pop
mov
fnsave
repnz
scas
loop
stos
jno
insl
xor
and
les
ret
mul
or
movsl
jae
loopne
lods
in
out
xor
dec
fidivs
pop
cmovbe
cmp
das
dec
dec
push
xor
add
std
nop
movsb
jb
pop
sbb
mov
sarb
jmp
sbb
cltd
inc
xor
cli
lea
sbb
andb
sarb
nop
mov
and
xor
mov
push
sub
pop
cmp
aam
or
repnz
xlat
xor
push
or
nop
xchg
pop
out
cmp
js
lahf
fdivrs
push
cmpl
sub
cmp
push
push
aam
xchg
mov
push
in
or
pushf
mov
mov
adc
mov
jae
add
push
lahf
pop
adc
fwait
jnp
cmc
shlb
push
adc
inc
dec
cld
mov
sar
mov
call
out
cmpsl
sbb
sbb
ss
nop
add
lea
lea
aam
and
aas
fimull
fistps
inc
ds
inc
xor
lods
and
sarb
sar
cmpsb
xchg
push
adc
shll
xchg
cmp
movzbl
sbb
xchg
sar
enter
adc
push
jecxz
sti
test
roll
xor
xor
mov
mov
push
mov
outsl
pop
cs
dec
jl
loopne
stos
jb
sbb
mov
lds
sub
xor
adc
jno
dec
fdivl
arpl
fs
lods
dec
lcall
adc
adc
mov
shlb
aaa
xor
push
cli
sahf
jg
popf
add
pop
mov
fimuls
aaa
mov
jo
lds
div
hlt
pop
loopne
xor
cwtl
nop
pop
bound
mov
or
repz
fwait
or
jo
js
and
pop
into
pop
in
loope
leave
cmp
add
ficomps
mov
push
rcrb
stos
aaa
jmp
xchg
dec
je
scas
and
out
enter
rcl
push
push
pusha
lds
inc
pop
shll
push
push
inc
int3
sub
add
mov
xchg
cmp
add
push
ja
sub
add
pop
enter
loope
dec
jp
mov
ja
mov
push
add
sbb
loope
sub
xor
popf
cmp
push
mov
mov
les
dec
xor
or
shlb
sub
arpl
sub
sahf
xor
push
mov
pusha
mov
sub
xchg
inc
lret
add
aaa
aad
pop
sub
cwtl
js
and
xchg
jbe
cmp
orl
adc
lea
cmpsb
sbb
inc
pop
sbb
imul
push
adc
pop
outsb
and
sbb
pop
push
insb
adc
sub
jg
je
dec
fisttpl
xchg
or
dec
lret
jae
pop
and
movsb
dec
push
inc
sub
xor
inc
iret
subb
dec
sbb
fistl
pop
pop
in
jp
dec
jp
gs
sbb
enter
dec
lea
stos
shlb
stc
fwait
das
mov
inc
xor
sbb
imul
lahf
jo
andl
scas
cltd
xor
or
cmpsb
dec
pop
mov
xlat
jecxz
cmc
cmp
inc
nop
mov
add
pop
mov
adc
jo
mov
daa
sbb
xchg
hlt
xor
pop
add
mov
or
popa
push
sbb
popl
cmpsl
push
scas
jp
or
cli
adc
imul
std
jg
or
xchg
sub
pop
sbbl
adc
ljmp
ds
sub
cmc
andl
icebp
fiadds
sub
xor
and
inc
mov
mov
add
xor
dec
scas
aaa
xchg
mov
or
loop
and
adc
xchg
lock
mov
sbb
sti
sarb
subb
inc
jnp
pop
jl
sub
addr16
lea
push
jne
jle
loope
jp
push
loope
aad
jp
sbb
aas
inc
in
or
rolb
and
into
ds
dec
clc
cs
xor
xchg
or
or
lods
cmp
sbb
mov
loopne
int
jp
mov
fsubs
stos
push
sahf
icebp
sub
test
pop
jne
clc
pop
xor
xor
decb
push
fildl
into
shr
jle
ret
out
mov
mov
popf
das
shll
cli
or
cmp
mov
and
add
cmpsb
xchg
mov
scas
aas
adc
adc
mov
mov
push
dec
push
idivl
adc
xchg
sbb
or
jecxz
jne
mov
inc
xchg
fcomps
in
dec
xchg
ss
xchg
mov
or
xchg
lea
ss
xchg
lea
pop
lods
pop
mov
mov
inc
cmp
mov
icebp
cmc
es
cmpb
inc
jecxz
mov
pop
or
test
ds
or
xor
sbb
cs
inc
and
pop
cmp
xchg
and
cmc
hlt
lcall
pop
or
loop
cmp
loopne
pop
fs
inc
pop
inc
jne
fwait
mov
rorl
roll
mov
aam
xor
xchg
andb
adc
into
cmp
xchg
rcll
in
sarb
cwtl
leave
popf
pop
les
sub
pop
cmc
sbb
ss
and
xchg
or
pop
mov
pop
fs
add
je
cmpl
mov
js
adcb
lock
clc
je
out
rol
or
loopne
pop
ds
push
popa
cmc
ss
mov
jb
push
clc
dec
mov
cmpsl
dec
imull
add
in
xchg
lods
or
pop
pop
je
roll
xchg
popf
adcl
or
sti
or
fwait
add
mov
clc
outsl
hlt
sub
mov
dec
lock
call
and
clc
pushf
hlt
cmp
cltd
and
sbb
aas
dec
mov
mov
mov
jle
lret
and
bound
arpl
sti
rorl
out
mov
adc
fnsave
and
sbb
mov
jge
adc
js
pop
stos
pop
adc
shll
gs
insl
adc
lcall
out
pop
adc
or
std
jmp
push
outsb
gs
negb
in
lret
nop
and
stos
daa
ja
aas
mov
push
addr16
push
fisubrs
nop
int3
dec
loopne
test
jbe
adc
bound
and
sbb
inc
push
std
jmp
cmpsb
lcall
adc
pop
and
inc
fisubrs
or
jnp
into
dec
mov
enter
mov
jns
sbb
test
push
mov
insb
xchg
jl
jp
push
loope
cmpsl
scas
cltd
cwtl
or
inc
adc
clc
cwtl
sti
popa
fs
test
orl
cmp
aad
mov
rcll
push
enter
fisttpl
or
jecxz
mov
popf
jbe
scas
sbb
add
fnstcw
clc
mov
iret
or
rolb
mov
int3
pop
inc
aad
idiv
adcb
addb
shr
adc
lcall
movsl
pop
add
add
mov
xor
pushf
ds
aam
into
xor
inc
cmp
mov
adc
sbb
addr16
in
inc
aas
sbb
mov
xor
or
cmc
inc
mov
and
mov
sub
rcrl
into
pop
mov
jo
outsb
pop
out
hlt
pop
sub
pop
pop
mov
mov
add
push
lods
cmp
aas
mov
je
and
push
call
xlat
pop
jbe
ret
jg
xor
dec
mov
in
or
loopne
test
fadds
fbstp
inc
push
push
fstl
lods
push
xor
js
sbb
pop
rorb
iret
pusha
neg
sbb
aam
fsubs
push
mov
pop
pop
xor
lods
push
mov
addb
adc
arpl
in
les
mulb
popa
gs
gs
mov
jnp
sub
imul
test
inc
sbb
mov
add
cmp
xor
ljmp
out
xchg
fidivl
aas
nop
add
mov
inc
lcall
lcall
or
loope
mov
popl
mov
pusha
mov
ja
ret
stos
cld
add
std
push
ficoml
and
mov
dec
in
js
add
inc
mov
and
ret
scas
int
jne
lea
shll
fcoml
es
test
push
jecxz
xor
inc
mov
xor
fcompl
rorb
and
sysexit
fnstsw
pop
mov
pop
jae
addl
stos
rcl
xchg
pop
enter
inc
addl
cmp
das
xchg
sbbl
jb
sub
aas
add
mov
clc
fbld
xor
mov
mov
sub
or
and
clc
mov
cmp
dec
adc
fs
mov
sarb
jl
mov
ja
pop
shrl
cld
sub
arpl
sbb
test
xor
push
gs
shll
lcall
mov
hlt
lods
mov
sbb
shlb
clc
stos
popa
and
fwait
sub
and
dec
sbb
jge
add
lock
mov
lret
xchg
roll
xlat
test
inc
cmp
mov
test
call
pushf
xor
mov
mov
xchg
mov
sahf
inc
inc
pop
jb
das
push
xchg
or
mov
ljmp
mov
mov
dec
adcl
es
cmp
lods
dec
mov
push
fs
sti
mov
add
faddl
dec
lret
andb
rcl
inc
push
push
orb
daa
or
or
or
pop
push
pop
dec
or
sbb
mov
mov
fs
dec
or
test
std
xchg
ret
in
add
mov
cmp
test
adc
lea
cmp
sbb
pop
or
push
add
and
cmc
scas
icebp
xor
fs
jb
scas
stos
pusha
ja
mov
add
and
lahf
aas
andl
cmpsl
rorl
push
les
xchg
push
ds
loopne
ja
inc
xor
gs
push
push
or
and
dec
sbb
addr16
jg
cmp
not
mov
scas
popa
dec
scas
adc
pop
push
jl
xchg
mov
call
push
lock
add
int
jo
frstor
nop
mov
pop
subb
xor
fwait
sahf
mov
out
out
adc
lcall
sbb
dec
or
mov
pop
mov
or
pop
xchg
subb
mov
pop
jl
push
and
add
sbb
sbb
scas
sub
xchg
fcmovne
lock
pop
mov
jecxz
push
nop
call
icebp
loop
in
lods
xlat
imul
mov
cmc
mov
add
or
out
sahf
lret
pop
cmp
mov
mov
inc
es
mov
add
stos
fistl
push
jae
inc
mov
sahf
sbb
repz
pop
jbe
int
stos
pop
movsl
add
outsb
cmpb
mov
mov
jp
nopl
pop
mov
loop
push
jnp
adc
sbb
xchg
jbe
mov
dec
shrb
sarl
scas
adc
rol
test
xchg
dec
cli
out
rcrb
les
sbb
and
jle
lds
test
imul
mov
push
cmpl
sub
inc
inc
mov
ds
lods
fiaddl
pop
mov
inc
ficoml
je
cmp
call
outsb
sbb
popa
add
mov
pop
rcll
and
xchg
mov
cli
in
jb
push
or
sbb
pop
loope
mov
push
out
sbb
dec
scas
in
movsl
cmp
icebp
push
push
mov
and
jmp
dec
inc
adc
cmp
in
stos
push
ret
sbb
orl
data16
xchg
xor
xor
mov
sysexit
pop
rolb
sub
lret
inc
or
push
mov
push
pop
pushw
xor
insb
or
add
aas
mov
popa
aaa
xor
add
fisttps
mov
stos
enter
aas
dec
adc
pop
loopne
lcall
ret
aad
js
out
or
mov
pop
lea
lds
cltd
sbb
pop
loop
mov
sbb
cmpsb
and
cmp
pop
sahf
xor
ret
mov
jle
and
aad
ss
jbe
xor
mov
faddp
adc
insb
push
mov
ja
lods
add
adc
jnp
cmpsl
movsb
test
gs
subl
pop
sub
sub
mov
jmp
jle
sbb
test
sbbl
test
adcb
addl
ja
outsl
das
xor
scas
bound
ffree
and
pusha
adc
rorb
mov
inc
mov
int3
cli
sbb
jecxz
or
dec
push
lods
dec
inc
push
add
sbb
adc
mov
ljmp
rep
xchg
xor
sbbl
mov
mov
mov
push
aas
add
dec
repz
or
mov
dec
mov
fbld
std
and
shrl
inc
xor
mov
mov
loopne
clc
or
rclb
or
inc
rcl
in
fldl
pop
je
in
xchg
imul
andl
pusha
and
or
mov
add
cmpsl
ficoml
popf
jle
out
ss
pop
sbb
popf
or
xor
pusha
cs
jnp
inc
jecxz
lods
dec
jo
xchg
mov
xorl
mov
add
sub
or
sbb
js
daa
xchg
mov
pop
ljmp
int
add
xchg
xchg
mov
dec
jp
pop
ja
or
bound
imul
mov
or
mov
lea
inc
adc
dec
push
hlt
out
into
int
pop
inc
add
add
into
jno
cmp
sbbb
in
fdivs
pop
das
fdivl
xchg
imul
pop
pop
add
divl
lret
sub
pop
jecxz
lcall
or
sub
mov
mov
mov
mov
imul
sbb
or
subb
jne
pop
sbb
lds
ss
pop
and
out
cmpsb
rorl
mov
jns
jge
repnz
dec
mov
mov
push
imul
push
dec
xchg
add
jecxz
add
int
cmp
pop
fprem1
pop
in
imul
xchg
cmpsb
push
mov
daa
sub
xor
pop
loopne
cwtl
and
xorb
icebp
inc
mov
sbb
out
xor
xor
xor
add
in
and
mov
push
stos
jbe
jno
mov
ds
mov
loopne
gs
jecxz
sbb
mov
and
nop
pop
ljmp
ljmp
mov
xchg
mov
pop
in
pop
pushf
push
pop
loop
mov
mov
ja
pusha
test
mov
mov
pop
lcall
or
mov
lods
xchg
lret
inc
lock
push
sub
outsb
cmp
or
jg
std
shlb
incl
xchg
inc
sbb
test
rol
and
daa
frstor
push
or
in
loop
cmp
push
or
and
mov
in
jle
sub
fs
in
or
cmp
xor
out
aad
fcoms
dec
loopne
inc
fstpl
stos
aaa
mov
repnz
not
adc
xchg
shll
fldl
jnp
push
dec
imul
insb
aas
push
loopne
call
sarl
notb
in
or
or
sbbb
daa
daa
or
andb
xor
dec
xchg
cmp
daa
leave
nopl
test
push
shl
mov
rolb
or
sub
scas
int3
inc
ret
ds
dec
ljmp
mov
mov
arpl
xchg
movsl
insb
mov
cmp
pop
data16
dec
js
int
xchg
divl
insl
in
cmpsb
les
lods
or
jl
ret
mov
cmp
jecxz
add
or
arpl
call
pop
orl
inc
test
adc
inc
andb
cmpl
mov
dec
xchg
imul
aam
inc
push
jge
add
mov
inc
out
mov
mov
sub
mov
loop
js
lock
add
mov
jne
and
mov
sbb
into
inc
cmp
rcl
out
jb
add
dec
push
je
xchg
inc
dec
push
pop
fcoms
xor
or
add
es
jg
dec
or
js
push
fimuls
arpl
mov
adc
or
mov
xchg
test
pop
sub
mov
ds
inc
cli
lods
fdivl
mov
xchg
add
orb
cltd
mov
and
mov
test
cmp
enter
std
or
push
push
xchg
xchg
xchg
mov
subl
pop
pop
add
test
int
mov
xchg
pop
pop
test
mov
pop
sbbl
mov
push
hlt
mov
pop
addb
in
ficompl
push
insl
jmp
fcmovnbe
mov
aad
ficomps
movsl
test
adc
sub
add
mov
pop
ds
mov
jl
sahf
loop
dec
cmp
push
mov
in
mov
repnz
cltd
dec
push
jbe
imull
push
jb
dec
insl
xlat
push
popl
fisttps
sub
cmp
inc
data16
sbb
mov
in
cmp
cs
sbb
lock
sahf
aad
sbb
add
in
jecxz
jno
pop
je
push
je
pop
subb
push
inc
pop
ret
dec
inc
sti
mov
push
mov
aam
dec
or
push
push
imul
insl
pushf
or
jp
es
scas
inc
sti
xor
cwtl
jmp
out
aas
cwtl
sub
add
movsl
mov
aad
cmp
push
jne
cmp
pop
mov
and
cmp
aad
out
jbe
xchg
cmp
out
jnp
push
sub
inc
pop
mov
shll
movsb
sub
popf
shll
incl
das
dec
andl
lcall
or
popa
addr16
cmp
jl
pop
sub
inc
sub
adc
push
loope
xchg
or
jp
add
lock
addb
pop
fldcw
and
or
push
or
ljmp
cmp
fisttpl
daa
mull
dec
scas
enter
push
xor
or
cmp
adc
push
sub
cmpsb
sbb
enter
mov
cld
and
scas
sbb
fcomi
xor
add
iret
xor
adc
xchg
addr16
iret
sbbl
movl
lahf
cmp
jae
or
push
js
ret
int
cld
movsl
sti
cmp
adc
pop
xchg
mov
push
inc
out
pop
sbb
sbb
cmp
jmp
cmc
popf
std
into
jae
adc
pop
movnti
ret
insl
rcr
in
inc
sbb
pop
imul
pop
mov
sub
ja
pop
lcall
fidivs
jmp
push
cmp
and
outsb
mov
pop
fwait
shl
data16
jmp
repz
cmp
jnp
aaa
fisttpl
adc
scas
imul
addr16
adc
or
fcmovnu
in
ret
jmp
std
cmp
xor
iret
outsb
lcall
shl
jge
sarl
xlat
or
push
sbb
or
out
fstl
sti
adc
adc
daa
idivl
or
mov
jnp
adc
dec
or
rclb
xchg
xor
jne
jae
and
pop
rcrl
ja
in
jle
mov
adc
das
imul
arpl
testl
jo
loop
es
adc
outsl
ss
sub
jnp
test
and
or
dec
out
mov
das
mov
fistpll
sbb
or
push
ljmp
xchg
mov
mov
lds
jbe
ja
nopl
and
imul
loop
out
fdivrp
pop
out
inc
and
push
adc
mov
or
pop
lahf
and
data16
ljmp
cmp
cmp
int3
mov
adc
pop
fidivrl
add
jnp
outsb
mov
add
cmp
lock
fwait
mov
ret
fiadds
xor
mov
jne
xchg
and
and
adc
shll
sti
or
cmpsl
fistl
mov
mov
daa
and
push
mov
mov
xlat
cmp
and
add
adc
outsb
mov
cltd
fcmovu
loope
push
mov
lahf
xor
cmp
jmp
ja
fdiv
pusha
fnstenv
or
adcl
pop
jnp
sub
cltd
inc
idivb
mov
fwait
lea
imul
push
cmp
mov
and
outsl
das
mull
mov
push
dec
cmp
mov
addr16
inc
test
mov
sub
fildll
negl
hlt
adc
or
push
sub
ja
daa
and
adc
das
jp
jmp
jg
ja
jp
xchg
insl
dec
sub
mov
jno
pop
test
mov
push
rcll
popa
jmp
inc
data16
out
mov
shr
cs
enter
xchg
adc
in
fistl
daa
jg
loope
push
mov
and
cmp
loop
mov
add
iret
daa
out
push
mov
xchg
fisttpl
adc
mov
adc
jno
pusha
rcll
outsl
jg
or
adc
fisttpll
sub
imull
inc
xchg
or
xchg
into
add
sub
shl
fucomi
ljmp
adc
outsl
inc
sub
push
daa
fdivl
add
fsubrl
dec
dec
pop
fcoms
adc
mov
cmpsl
push
xchg
and
pusha
cs
cmp
fwait
mov
xlat
cmp
stos
pop
jl
cmp
pop
outsl
and
adc
mov
pop
iret
fisttpll
pop
int3
inc
stos
adc
mov
mov
mov
out
idivb
fbstp
pop
rclb
xor
adc
in
in
pusha
out
rorb
add
jmp
adc
adc
push
data16
imul
packuswb
insb
fs
dec
hlt
sbb
sbb
insl
pop
orl
jno
jns
and
sub
cmp
test
fistl
mov
adc
mov
push
pop
insl
add
push
loopne
mov
sbb
fbstp
xchg
repz
dec
push
xchg
mov
rcrl
cmp
aad
xlat
jmp
push
and
lods
loope
lods
lahf
icebp
cmc
mov
cmp
push
dec
and
mov
mov
stos
sbb
push
ret
sbbl
rolb
xchg
push
ds
xlat
ljmp
mov
sbb
jns
jp
cmp
loopne
jns
shll
or
sahf
fcmovu
xor
adc
arpl
push
outsb
adc
add
dec
pop
cmc
shll
in
push
aad
xchg
sbbb
int
inc
push
andb
cmp
sbb
sub
add
xor
add
jns
sub
popa
adc
and
test
js
sbb
lea
out
ror
and
adc
adc
fwait
push
test
sbb
push
leave
stc
dec
cmp
cmpsl
inc
cli
aaa
loop
xchg
and
sahf
das
in
popf
sti
cmp
cmpsb
xor
sub
add
loop
mov
ljmp
sbb
cs
mov
iret
into
aas
lcall
add
fisubs
js
je
inc
sahf
lret
insb
test
mov
inc
inc
cli
lock
idivl
xchg
aaa
cltd
testb
pusha
shrl
imul
ds
cs
inc
mov
or
jne
stos
mov
jo
dec
aaa
cmp
mov
push
jo
adc
jno
dec
aam
dec
push
sub
js
jg
mov
adc
jg
push
push
std
jecxz
imul
outsb
pop
jge
fwait
inc
sbb
and
pop
aad
jp
imul
pop
cwtl
jp
sub
jns
sub
jns
adc
jns
push
das
jbe
lret
js
data16
or
sbb
paddusw
aaa
aad
into
shlb
sub
adc
pop
lret
jmp
fs
jmp
je
push
insb
inc
dec
shlb
orb
inc
outsb
pop
sub
addl
adc
sub
or
test
mov
test
clc
sbb
scas
add
jne
loop
add
insb
xchg
lcall
xor
popf
mov
stos
sahf
fsts
dec
enter
inc
cmp
add
cmp
dec
inc
xor
or
inc
dec
ffree
mov
jns
xchg
push
inc
cmp
jmp
jg
leave
pop
or
and
ret
popf
mov
mov
fdivl
sbb
shrb
in
movsb
sti
cmc
push
cmc
adc
das
cmp
outsl
out
pop
pop
out
loopne
loopne
inc
mov
sub
leave
or
ja
insb
xor
pop
pushf
inc
scas
dec
pop
orb
negl
shrl
jle
shrb
jp
sbb
cli
xchg
cmp
cmp
les
mov
aad
xchg
in
xchg
add
inc
insl
lds
test
call
cmpl
loope
jne
xor
dec
in
xchg
jp
loop
stc
movsl
in
push
popa
lds
fadds
test
adc
jecxz
adcb
xchg
mov
frstor
hlt
xchg
xor
lods
or
in
lcall
push
aaa
aad
pop
push
aaa
jne
add
cmp
jg
imul
insb
rorb
mov
cmp
out
mov
test
ret
xchg
mov
mov
shlb
push
inc
mov
mov
push
push
nop
loope
pop
rorl
in
sub
sub
sub
shll
sahf
inc
pusha
cmp
or
sbb
popf
jbe,pn
push
mov
xchg
test
and
pop
and
push
sarl
sahf
lret
sub
data16
les
fucomp
mov
das
pop
or
push
cmp
xor
lods
or
xor
adc
xor
imul
dec
outsb
iret
jl
cmpsl
aas
sub
mov
sub
mov
sbb
or
add
cmp
out
pop
sub
jbe
mov
and
and
jns
add
das
inc
ret
ficompl
popa
pop
shrb
and
push
mov
inc
stc
push
sub
push
jns
sub
jnp
jne
pop
call
ret
popf
jmp
fdiv
mov
ret
and
loope
aam
add
cli
adc
jbe
sub
arpl
sub
insl
jmp
insb
vpperm
pop
sub
arpl
push
call
enter
xchg
cmp
xor
push
mov
sub
fst
fbstp
rcll
add
notl
xor
jns
jae
push
lods
scas
fldt
xchg
xchg
sub
ret
nop
mov
mov
or
jae
mov
push
aad
xchg
cmpsb
mov
pop
mov
mov
orl
jecxz
fwait
or
insl
movsl
sub
inc
add
mov
lods
add
mov
or
adc
or
mov
daa
xchg
negl
mov
mulb
adc
loopne
xchg
xchg
enter
arpl
loopne
daa
dec
and
sub
in
or
or
sub
int
aam
cwtl
lcall
or
ja
pop
sbb
sbb
mov
dec
roll
lds
ficomps
int
xor
aad
and
xchg
mov
push
jecxz
aaa
lea
xchg
and
xor
add
mov
adc
xchg
pop
xor
arpl
inc
and
jae
inc
and
sti
mov
add
or
cmpsl
or
add
and
out
mov
rcll
je
and
mov
and
cmp
pop
out
pop
iret
loop
in
mov
dec
arpl
sub
in
enter
ret
ret
std
mov
shrl
dec
jo
mov
ja
pop
xchg
and
push
lods
pusha
add
adcl
setae
pop
add
xchg
push
and
ror
xor
sub
jnp
inc
sbb
or
jae
adc
imul
mov
test
add
adcl
pcmpgtd
fistpl
sbb
xor
inc
idivl
insb
sub
cmp
rolb
stos
push
cltd
std
mov
stc
std
and
and
jg
xchg
mov
sbb
ja
mov
jo
insb
xor
int3
dec
negl
shl
pop
sbb
jae
mov
mov
mull
in
xchg
sub
rol
sbb
mov
push
popa
adc
mov
and
add
sub
inc
sbb
shlb
aaa
rolb
or
jnp
xor
fldl
mov
add
push
cmc
sub
xchg
out
fcompl
inc
pop
adc
fcomp
mov
fcomp
jmp
mov
push
sbb
jge
pop
mov
jo
push
jns
push
push
mov
outsb
popa
imul
sbb
cwtl
fs
xchg
mov
addr16
gs
out
xchg
jmp
arpl
and
mov
add
dec
into
sub
fstpt
ficomps
cs
and
test
xor
sub
cmp
jp,pn
cltd
and
or
xchg
sbb
and
jbe
xchg
int3
xchg
popa
sub
and
stos
mov
xor
adc
pop
popf
cmp
sbb
sub
sub
frstor
jbe
pop
out
je
pop
push
dec
sbb
jo
rcll
sub
lock
mov
ljmp
fstpt
xchg
lret
and
fists
je
mov
sub
outsb
outsb
andb
loope
pop
sub
je
jno
test
dec
lods
inc
or
push
and
stos
addr16
xlat
push
scas
aas
cmp
iret
mov
sbb
or
jne
sbb
xorl
in
fnstsw
cmp
push
movsl
inc
loope
or
nop
ja
repz
insl
lods
xlat
add
cmpsb
dec
mov
ret
pop
shll
bound
ja
or
outsb
call
and
aaa
mov
fistpl
push
push
push
add
adc
or
adc
mov
clc
and
xor
test
inc
adc
add
pop
mov
cmp
nop
cmp
lret
push
xchg
sti
imull
inc
jbe
xchg
imul
lret
add
cs
mov
fisubrs
and
mov
jmp
xchg
sbb
mov
xor
and
xchg
jmp
movzbl
lock
daa
arpl
and
xchg
enter
ss
pop
or
test
arpl
ret
movsl
lds
jae
or
rcrb
inc
inc
add
pop
cld
les
jo
jge
shll
sbb
cltd
imul
popa
xchg
data16
fwait
ja
xchg
mov
movsb
shl
push
and
cmp
jl
in
mov
mov
sbb
jmp
xor
sbb
xchg
jns
movsl
loope
imul
stos
xchg
inc
movsl
pop
test
inc
or
sti
call
insl
roll
xor
sbb
fmuls
fistpl
in
movsl
sti
lahf
cmp
sbbl
add
or
jl
xchg
adc
adc
mov
push
out
pop
xor
xor
jp
or
xchg
pop
ja
mov
sub
jnp
rolb
cmp
addl
jno
lock
push
pushf
pop
jp
jecxz
add
xchg
in
movsl
jmp
add
mov
pop
dec
jl
ffree
xor
lds
imul
mov
cwtl
push
jmp
jnp
jg
sbb
mov
into
repz
orb
rorl
dec
cmp
sbb
push
jecxz
jmp
aam
movsl
mov
outsl
loopne
lret
sarb
push
js
stos
mov
js
pop
sbb
cmc
jno
sbb
loope
jno
xchg
mov
mov
sub
push
in
cmp
vmovapd
shl
sub
mov
mov
adc
repz
mov
push
test
xchg
jecxz
dec
or
loope
mov
popf
mov
jno
or
pop
ret
and
dec
lret
xor
mov
pop
arpl
jno
sbb
add
outsl
xchg
xchg
in
jne
mov
cmp
mov
xor
or
imul
sub
dec
sbb
popa
rorl
jno
or
andb
cmp
jno
inc
sahf
movsb
imul
stos
inc
add
jmp
and
mov
cmp
mov
inc
xorb
cmp
mov
pusha
inc
or
cs
sbb
pop
insl
adc
mov
sub
adc
sbb
outsl
or
shll
lret
shll
mov
xor
lret
xchg
popa
dec
sbb
inc
call
testl
push
out
cmp
mov
arpl
in
loope
adc
int
jno
test
mov
jne
cmp
cmp
sub
rolb
fucomip
shrd
mov
lret
pop
les
xor
xor
lock
sub
push
fsub
xchg
fldt
pusha
add
aaa
xchg
int3
jo
mov
xor
mov
out
push
loopne
add
pop
mov
adc
or
test
pop
inc
cmp
dec
mov
nop
dec
movsl
popa
inc
popa
push
lods
pop
lea
ret
mov
push
cmp
push
mov
inc
dec
movsl
daa
adc
sbb
inc
inc
divl
push
cmpl
mov
adc
pop
adc
push
inc
test
aaa
xor
aaa
rclb
add
data16
pop
push
fildl
jne
das
cmpsl
sub
jmp
inc
sub
xchg
lods
lds
mov
daa
or
repz
push
lods
inc
adc
cmc
fcoml
dec
mov
lret
jge
ret
sarl
xor
cmp
and
or
sbb
loope
push
sub
imul
lret
push
or
push
jne
es
daa
push
mov
dec
inc
or
mov
or
mov
jae
shr
test
mov
dec
inc
jge
stos
sub
and
popf
mov
pop
jmp
push
mov
dec
mov
lea
push
mov
or
int
std
mov
dec
lods
xchg
inc
ret
sbbl
test
sub
cmp
jge
scas
imul
mov
and
push
push
pop
jae
mov
pusha
pop
sub
xor
inc
mov
sbb
sahf
imul
pop
insb
daa
sti
inc
mov
js
pop
imul
xchg
lahf
and
ljmp
dec
mov
and
xchg
test
jbe
add
mov
xchg
mov
or
xchg
sub
shl
inc
or
sub
or
push
or
add
in
cmpsl
fld
mov
add
gs
ljmp
testb
mov
das
add
lahf
xor
cmp
pop
mov
sbb
jg
int
icebp
aaa
fmull
adc
test
in
popf
adc
add
aaa
sub
fwait
sti
or
das
pop
jmp
pushf
cmpsb
lahf
add
icebp
xor
jae
imul
notl
pusha
shll
ljmp
loop
sub
lods
loop
dec
sub
adc
stos
movnti
xchg
loop
xchg
dec
rol
repz
xor
call
idivl
out
test
jns
cmpsl
fadd
dec
adc
adc
xchg
dec
cltd
outsl
xchg
xchg
and
fcmovnb
insl
sub
int
add
stos
adc
imul
xchg
cmp
fwait
das
jne
xor
rcrl
jne
test
popa
bswap
fildl
pop
stos
mov
pop
roll
jns
xor
gs
push
jmp
xor
mov
outsb
lods
push
pop
xlat
pop
cmp
jnp
std
mov
rclb
lcall
or
lret
inc
and
pop
mov
mov
inc
mov
push
mov
xchg
mov
ja
sbb
pop
lea
aas
mov
test
test
cmp
and
ljmp
call
mov
aas
shrb
jecxz
jge
loope
pop
icebp
add
jmp
mov
fdivrs
ja
ja
ja
call
sub
nop
pop
inc
or
or
push
ss
cltd
test
and
jge
pop
inc
sub
insl
pop
mov
pmaxsw
pop
faddp
adc
jne
pop
mov
inc
dec
fsubrs
data16
fildl
pop
stc
and
fsubs
daa
push
cmp
mov
or
and
fnsave
rcr
inc
mov
or
in
and
lahf
loope
jno
mov
sbb
lods
inc
mov
add
sti
add
cli
sbb
ret
icebp
daa
and
fbstp
imul
ss
fldl
fcmovnb
xchg
shl
add
jecxz
fstpl
jns
jne
push
aas
out
stos
in
mov
out
pop
xor
sbb
test
xor
jnp
mov
inc
mov
sysexit
add
sbb
mov
scas
lods
xor
sbb
push
mov
mov
or
cltd
cmp
mov
xor
jge
lea
mov
insl
dec
and
xor
push
daa
test
mov
addl
push
andb
pop
imul
mov
sbb
push
mov
xchg
mov
in
jo
enter
push
sub
fisttpl
out
and
and
mov
push
leave
pop
stos
sub
fadd
xchg
outsl
mov
ja
aaa
jnp
loop
mov
cmpsl
out
push
incl
mov
or
or
js
add
lods
sub
into
mov
push
es
sbb
sub
hlt
fldenv
sbb
and
movsl
xlat
xchg
mov
dec
out
out
adc
fsubrs
mov
adc
push
and
lods
add
dec
adc
push
lods
popa
mov
xor
popa
sbb
imul
adc
and
and
int3
scas
in
sub
or
rolb
lcall
dec
inc
andb
or
cs
test
shl
sbb
fcompl
lock
push
test
mov
push
pop
lea
out
sub
sub
mov
xchg
push
sahf
dec
add
arpl
adc
imul
out
dec
or
lret
ds
adc
sbb
imul
xor
push
xchg
xchg
push
stc
imul
fwait
mov
lret
in
xchg
leave
push
lods
in
cmp
cld
mov
sub
or
in
in
pop
and
xchg
sub
cmp
add
xchg
negl
pop
arpl
adc
jnp
mov
insb
push
pusha
cmp
dec
pop
out
ret
push
inc
mov
push
fisubrs
pop
and
out
stos
mov
pop
repz
aad
das
push
test
imul
sub
ja
out
push
cmpsb
aad
cmp
insl
sbb
es
aad
rcrl
sahf
stc
push
ds
lock
push
in
jnp
adc
add
fnstsw
pop
jle
pusha
das
shl
insl
fistpll
cltd
mov
jge
shr
sub
inc
sub
mov
pop
xor
jnp
rclb
add
das
mov
jnp
sbb
stos
and
adc
fwait
insl
aaa
dec
iret
push
mov
jg
mov
sbb
xlat
or
xor
pop
pop
stos
dec
mov
in
jmp
inc
mov
std
in
xchg
ljmp
mov
cmp
in
sbb
pop
mov
sbb
sbb
test
mov
cwtl
or
cmp
mov
pop
jns
in
in
mov
ja
scas
stos
mov
jp
test
sbb
add
movsl
push
add
sbb
push
or
ja
pop
rorl
aas
push
imul
leave
pusha
jecxz
xchg
pop
pop
int3
inc
mov
aaa
repz
aam
mov
aaa
push
mov
incl
push
rolb
cmp
and
sub
aam
push
ret
inc
je
mov
xor
loope
test
sbb
jmp
sbb
test
sub
push
adc
xor
xchg
add
mov
sbb
mov
fldcw
gs
rolb
or
jge
mov
insl
xchg
mov
pop
cmp
sbb
mov
repz
movlhps
dec
test
mov
mov
imul
mov
sub
cmpsb
stc
fistpl
bound
in
adc
fistl
inc
test
or
mov
loop
mov
notl
lret
inc
mov
int3
and
mov
or
insl
adc
jmp
dec
popa
shrb
xchg
push
cmp
inc
loop,pt
add
aad
xchg
je
sbb
dec
lea
mov
ja
and
aaa
call
fsubl
bound
push
inc
inc
mov
in
mov
rolb
xlat
sti
popa
sbb
push
push
std
sub
pop
pop
push
xchg
stc
aam
inc
arpl
xchg
lea
add
push
sub
loop
outsl
push
cwtl
adc
add
mov
jne
sarl
and
adc
add
or
jnp
rorb
insl
cmp
icebp
loope
dec
mov
inc
add
push
adc
mov
mov
jae
cmpsl
imul
jmp
jae
daa
jae
pop
fnstenv
stos
sti
or
sub
scas
loopne
push
movsl
fstpt
cmpsl
mov
xor
hlt
shrb
xchg
rcr
bound
dec
lock
pop
jne
pop
cmp
cmp
loope
mov
inc
out
out
cmp
mov
adc
stos
and
jecxz
and
or
sbb
lock
insl
cmpsb
mov
ss
push
pushw
pop
xchg
xor
in
mov
mov
ficoml
mov
sbb
cwtl
cmc
daa
loopne
dec
mov
adc
dec
dec
test
pavgb
push
pop
adc
inc
addb
mov
sub
bound
sub
lea
lea
push
inc
dec
popa
or
or
inc
adc
loopne
out
loopne
rclb
push
or
dec
push
aad
push
sbb
arpl
pop
jno
dec
or
pop
popa
shll
pop
negb
js
lock
xchg
mov
xor
lea
cmp
loopne
shll
fcompp
pop
mov
cli
jge
adc
loope
jno
repz
test
add
jne
out
jbe
daa
push
inc
mov
sbb
pusha
and
rolb
notl
test
test
test
inc
xchg
push
sti
adc
pop
adc
push
push
pop
das
popl
dec
popf
dec
mov
ja
mov
sub
cmp
and
xchg
mov
mov
out
hlt
xor
popa
stos
mov
arpl
sub
push
push
shll
mov
dec
pop
loope
inc
mov
fcmovb
jmp
mov
xor
mov
xor
push
adc
cltd
bound
xor
and
loopne
loope
push
adc
inc
cmp
xchg
add
dec
insb
lds
divl
lds
xor
dec
jecxz
mov
je
test
imul
mov
cmp
adc
and
cmpsb
adc
ss
add
add
xchg
mov
lds
inc
and
xchg
adc
loope
xor
loope
xor
or
imul
imul
cmpsl
mov
in
jne
xchg
loope
lods
inc
imul
mov
inc
lea
push
push
out
inc
jge
cmp
jecxz
bound
cmp
add
out
push
loop
fistps
sub
xor
movsl
ja
cmp
mov
test
fwait
adc
in
popf
xor
jo
testl
pop
dec
xchg
cltd
in
sub
mov
and
add
cwtl
push
mov
inc
js
add
out
lea
adc
out
cmp
mov
dec
aaa
jmp
inc
mov
and
aas
cmp
sbb
inc
cmpl
jns
faddl
inc
mov
mov
inc
cmpsl
and
adc
xchg
sbb
cmp
mov
cltd
cmp
jge
xchg
mov
sub
ds
in
and
mov
xchg
inc
das
sub
xchg
inc
insl
arpl
push
popa
mov
fldt
popa
or
or
mov
shlb
mov
inc
jno
sub
mov
fucomi
dec
mov
fwait
mov
ret
andb
xchg
sbb
aad
mull
insb
jecxz
and
inc
cmp
negl
jge
ret
xorb
pop
popf
mov
add
sub
imul
pop
test
ret
and
sbb
negb
pop
outsb
sub
mov
fisttpll
arpl
sub
imul
mov
jbe
imull
jp
sbb
and
cmp
add
ljmp
ret
addl
inc
pop
sti
jo
mov
fdivs
imulb
cmpsl
and
mov
mov
fnstenv
mov
sub
fcompl
fistpl
xor
xchg
rcr
mov
imul
jne
sub
out
push
adc
stos
les
faddp
int3
add
mov
push
sbbb
xor
clc
lret
gs
or
and
mov
enter
shll
pop
bndldx
test
sti
add
addr16
adc
jns
add
pop
ret
pop
imul
inc
fs
dec
rorl
sub
push
xchg
jg
jecxz
xor
jno
dec
pop
cmpsb
lods
or
daa
lea
xor
out
aad
add
aad
ret
adc
mov
fwait
test
outsl
ret
sub
shrb
mov
dec
test
xor
test
or
pop
sub
adc
imul
cmp
pop
inc
cwtl
adc
leave
push
mov
pop
xchg
mov
sub
repz
mov
or
mov
sbb
xchg
push
or
xor
leave
aaa
push
jmp
mov
imul
jmp
xchg
push
and
shrl
sub
sbb
or
fdiv
fadd
into
sbb
mulb
sub
fmull
lret
cmp
loopne
cwtl
iret
fildl
mov
and
xchg
out
cmp
pusha
ss
filds
dec
push
daa
ss
in
mov
add
iret
pop
and
movsl
xor
je
stc
imul
or
and
push
add
pop
ljmp
stc
jg
cmpl
pop
popf
ja
sbb
rorl
inc
movb
mov
cmc
push
jbe
jno
mov
xchg
loope
fildl
fisttpll
adc
cmp
rcrl
inc
mov
xor
or
aad
cmp
lahf
sub
aas
inc
in
cwtl
in
sub
cmpsl
call
and
add
outsb
and
dec
test
push
and
cmp
fbstp
sahf
lret
iret
jne
stc
imul
rolb
push
jmp
sbb
dec
loop
push
sub
pop
mov
insl
xchg
xorl
mov
insb
inc
add
bound
add
pusha
ja
jmp
scas
dec
cmp
fcoml
jg
cmc
jge
push
fwait
outsb
sbb
xchg
add
sub
inc
filds
mov
sbb
xchg
add
out
clc
pop
jne
or
or
mov
dec
inc
leave
mov
adc
lahf
and
dec
mov
test
push
inc
xor
xchg
ja
outsb
pop
out
cmp
cmp
imul
dec
mov
push
inc
mov
jecxz
mov
mov
xchg
inc
xchg
jne
mov
in
pushl
inc
gs
sub
iret
enter
imul
or
and
repz
sub
add
push
popa
sarl
mov
adc
and
or
test
sbbl
sbb
and
imul
push
xchg
sub
ret
push
or
pop
mov
xor
or
sti
stos
dec
add
test
std
sbb
dec
xor
iret
mov
imul
lea
xor
loope
clc
movsl
sub
fildl
jns
sub
and
daa
lcall
adc
mov
dec
mov
jne
add
push
xchg
mov
sub
rcrl
arpl
and
ret
std
jg
pop
mov
sub
ffreep
inc
jge
testl
mov
testb
mov
lea
pushf
push
popf
inc
pusha
je
xor
aaa
pop
loope
loop
sbbl
xor
mov
mov
popl
test
jg
add
xor
sbb
push
dec
mov
repz
mov
icebp
jcxz
xor
outsb
rcr
sti
cmp
xchg
mov
adc
imul
cltd
test
movsl
scas
aas
incb
push
imul
mov
dec
test
and
pop
or
adc
sti
lock
xor
incl
adcl
scas
cmp
mov
jbe
scas
sbb
rclb
stos
test
cmp
jo
or
imul
in
or
shl
test
pop
nop
push
cs
sub
mov
lock
push
inc
adc
pushf
add
push
lods
rcl
mov
daa
dec
mov
adc
movsl
lcall
movl
sahf
add
ret
lods
jle
and
xor
cmpsl
lret
inc
fistpl
sub
push
mov
and
icebp
pop
leave
and
lock
into
add
xchg
or
inc
mov
push
imul
pop
inc
adc
gs
daa
cmp
movups
add
or
shlb
stos
or
xchg
cwtl
cmp
fucomi
adc
bound
inc
lret
dec
in
arpl
pop
mov
mov
sbb
adc
cmc
push
popa
lcall
sar
mov
stos
cwtl
mov
fdivl
mov
cltd
pop
xchg
adc
sub
pop
xchg
pop
and
adc
and
mov
sub
fdivrp
push
sub
lea
adc
jbe
dec
daa
in
popa
mov
sub
fisubs
or
push
and
or
mov
fndisi(8087
add
insl
mov
insb
push
sub
cmp
lds
in
aad
inc
stos
dec
and
push
mov
outsb
xor
outsb
test
push
adc
pop
iret
and
push
outsl
inc
popf
and
pop
mov
arpl
push
jbe
add
sub
ljmp
jne
pop
adc
push
int3
test
jno
sub
fcompl
xchg
das
pop
adcl
das
mov
or
push
imul
les
insl
cmc
aaa
inc
add
jle
xor
mov
jecxz
xchg
mov
jno
pop
or
in
mov
inc
sbb
push
mov
aaa
out
dec
dec
loope
pop
into
mov
fdivl
adc
adc
mov
adc
sbb
mov
stc
xchg
push
and
adc
push
aas
dec
loop
adc
dec
cmp
inc
jns
popa
pop
sub
xor
test
fsts
stc
inc
loop
outsl
iret
adc
dec
aad
notl
in
in
outsl
int
xchg
xchg
test
stos
adc
mov
pop
scas
arpl
sarb
arpl
fdivl
add
jo
push
xor
loope
and
or
dec
out
sbb
jmp
pop
fstpt
es
arpl
and
jne
fxch
pusha
jnp
dec
aas
pop
xor
push
adcl
out
mov
jne
cmpsl
xor
xor
stos
mov
in
xor
sub
mov
stos
mov
lret
adcl
and
mov
mov
loopne
sub
and
stc
push
and
lret
mov
mov
loope
daa
add
popa
xchg
push
xchg
mov
adc
jne
iret
std
adcb
mov
ja
rcrb
mov
shlb
test
mov
shufps
js
jmp
int
test
cmp
sub
imul
and
fcoml
scas
mov
xchg
push
or
rcrl
inc
adc
dec
cmp
pop
push
pop
add
jbe
mov
insb
pop
jnp
inc
dec
mov
dec
cmp
push
push
xchg
addr16
stos
mov
insb
inc
cmp
push
pop
mov
pop
inc
inc
out
lcall
dec
rolb
mov
icebp
inc
inc
add
dec
addr16
dec
sarl
adc
js
fdivrl
lret
push
inc
push
into
jne
in
outsb
outsl
ss
dec
pop
outsl
inc
dec
dec
jo
call
aad
mov
andb
rcr
in
lcall
loopne
jg,pt
sbb
out
mov
dec
iret
enter
pop
add
jae
mov
mov
inc
addr16
push
ficomps
ret
jge
lock
xlat
loopne
inc
dec
stos
dec
mov
in
pushf
pop
jecxz
sub
in
out
cmp
insb
dec
and
addl
cmpsb
sub
sbb
xchg
mov
mov
add
mov
sub
stc
mov
xor
jnp
or
dec
iret
pop
inc
push
testl
pop
ja
fld
pop
gs
inc
imul
jl
decl
inc
dec
pop
cwtl
loopne
vfrczps
pop
inc
lahf
push
out
loopne
cmp
insl
dec
inc
inc
jnp
push
jnp
dec
dec
xchg
pop
inc
cs
mov
fs
push
jmp
lret
outsb
pop
or
cmp
sbb
int
jbe
out
in
lock
cmpsl
pop
mov
hlt
sbb
imul
lods
mov
icebp
push
add
cmpl
inc
push
xchg
push
int
push
or
dec
sbb
add
inc
pop
add
sbb
inc
dec
pop
sbb
inc
cmp
dec
jns
push
out
dec
into
arpl
xor
pop
mov
jno
cmp
push
inc
mov
and
cmp
sbb
mov
cmc
pop
fs
push
jae
outsb
push
ja
mov
data16
sbb
add
movsl
or
push
dec
or
dec
cmp
inc
inc
jp
orl
insl
rorb
stc
ret
es
mov
push
xor
adc
pop
hlt
xchg
mov
out
ljmp
in
jno
and
and
rol
clc
inc
adc
adc
fcomps
mov
dec
push
test
addr16
stc
daa
aaa
jecxz
imul
bound
pop
out
fimull
add
mov
sub
jns
xchg
and
mov
gs
shl
js
add
xchg
pop
sub
pop
dec
fsubl
jl
fmuls
adc
les
dec
xor
push
sub
jo
pop
lret
aad
push
ja
lods
add
cmp
aaa
sub
sub
jnp
dec
xorb
data16
sbb
test
js
fistpll
dec
xor
xchg
loope
cltd
movsl
mov
loope
inc
pop
sub
lods
xlat
push
test
in
add
sbb
add
lods
cli
inc
sub
xchg
inc
shll
jbe
mov
test
sub
dec
pop
mov
cmpsl
imull
insl
mov
ret
add
sti
insb
imul
mov
addr16
inc
xor
dec
xor
out
loopne
mov
and
sub
add
xor
pusha
mov
jle
pop
imul
and
push
ret
add
or
loopne
cmpsb
cmovns
sub
aas
jl
shl
mov
inc
mov
inc
je
or
inc
pop
fstpl
ds
sbb
jmp
inc
pop
sub
fcompl
dec
hlt
imul
adc
jo
cmp
mov
imul
jo
sub
adc
push
pop
addl
and
adc
dec
inc
je
rcr
jns
dec
adc
outsl
adc
mov
push
neg
roll
pop
and
out
pop
inc
add
imul
ja
xor
sbb
outsl
bound
out
jnp
int3
adc
ficoms
aam
push
jae
addl
pop
cmp
je
ja
addb
inc
pop
pop
por
xor
inc
pop
add
lock
popa
movsb
push
sbb
popl
xchg
inc
inc
jo
pop
dec
ret
adc
xchg
add
cmp
fsubl
push
push
mov
mov
add
dec
jg
lods
pop
add
in
pop
fistl
sbb
pop
xchg
jle
or
cmpsl
data16
adc
dec
jmp
xchg
push
mov
cmp
dec
inc
dec
data16
cmpsl
loope
push
jge
sbb
sbb
jns
out
add
add
push
or
mov
popa
hlt
xor
xor
in
dec
mov
lock
pop
add
push
pop
add
stos
xchg
pop
lock
shlb
popa
and
movntq
aas
das
adc
add
or
jae
mov
push
ds
out
in
push
pop
fwait
push
popf
jge
fldl
push
push
sub
imul
mov
mov
test
jnp
adc
or
out
jge
xor
negl
mov
aad
pop
inc
mov
push
mov
adc
gs
add
rcrl
lock
inc
es
pop
roll
or
and
add
pop
inc
or
inc
add
nop
push
cmp
xor
int
jno
pop
push
jmp
rorl
cs
push
push
jb
daa
insb
adc
xor
push
ret
lods
inc
nop
jmp
loop
ss
dec
or
insb
scas
sbb
fimull
cmp
dec
add
testl
jg
ds
ja
cmp
xchg
push
es
pusha
enter
jns
js
stos
icebp
ja
jnp
pusha
mov
stc
inc
ds
mov
test
pop
jnp
je
test
jae
gs
pop
sub
notl
sti
in
enter
adcl
inc
mov
addl
insb
mov
xchg
pop
aaa
jno
rorl
jb
aas
inc
add
insb
pop
outsl
pop
sbb
and
jne
cmp
pop
pop
and
imull
pop
lahf
pop
cmpsl
imul
call
aaa
sbb
out
aad
sbb
push
add
jmp
into
sbb
adc
sbb
mov
cmp
or
mov
add
xlat
cmp
leave
push
pop
fwait
es
lods
subl
maxps
fldt
add
jne
jecxz
add
fdiv
pop
sahf
pop
pop
leave
fs
jno
or
push
sbb
dec
xchg
add
fidivrs
push
cmp
rcrb
loopne
dec
test
shll
pop
sarl
dec
push
pop
mov
xor
mov
ret
push
pop
das
cmp
outsb
push
push
add
rcl
mov
addl
mov
sbb
sub
mov
loopne
cmp
mov
adc
push
icebp
inc
inc
xchg
sbb
jmp
push
push
xchg
or
rclb
sbb
lret
sarb
jb
sub
mov
fs
pushl
das
mov
fs
dec
mov
sub
inc
out
push
test
imul
imul
loop
xchg
push
pusha
shlb
push
add
adcl
jecxz
sbb
cmp
sub
enter
xlat
shrl
pop
adcb
pop
repz
xchg
es
add
lods
cmp
or
dec
cmp
add
cmp
adc
nop
cmp
cwtl
xor
hlt
aad
mov
rcll
das
or
es
outsl
imul
or
cmp
insb
pop
loop
mov
sbb
xor
rorl
and
les
xchg
test
movups
add
jae
lcall
dec
sbb
pop
jg
adc
push
push
push
lea
sbb
outsl
stc
inc
fneni(8087
or
mov
cmp
inc
mov
cmpsl
jno
and
xor
lret
pop
cmovb
mov
mov
aad
outsb
adc
rolb
adc
and
cs
mov
dec
pop
dec
loopne
int
xor
fcoms
sub
xlat
add
push
push
adc
push
cmc
mov
cmp
arpl
arpl
adcl
sbb
adc
hlt
sub
jne
imul
jo
lahf
test
mov
dec
mov
fstps
jno
roll
lods
pushf
pop
sbb
mov
aad
inc
subb
sbb
popf
dec
jge
mov
xor
xor
xor
popa
push
or
stos
adc
mov
fnstsw
mov
pop
adc
cmp
out
mov
shlb
jno
push
jae
xor
rcr
xchg
dec
dec
xor
jmp
mov
arpl
xor
inc
rorl
pop
pop
sbb
loope
inc
dec
mov
sbbl
mov
in
add
sbb
mov
jp
test
mull
adc
mov
adc
mov
inc
mov
je
push
test
xchg
sub
adc
dec
jge
iret
cmpsb
add
xor
das
lret
aad
ret
cltd
jb
dec
pop
shll
dec
mov
jnp
movsl
and
in
pop
xchg
lds
rorl
insl
test
pop
cmpsl
mov
int3
pop
dec
lds
add
jno
loope
or
xchg
adcl
pop
insl
test
shrb
push
sets
add
sbb
xchg
inc
leave
pushf
add
lea
jle
add
out
test
push
mov
std
popa
maxps
sub
mov
add
inc
sub
pop
jl
hlt
dec
push
in
dec
fldl
fbstp
sub
xor
sub
adc
and
inc
mov
sarl
cwtl
xchg
js
sbb
sar
cs
repnz
pop
pop
loope
js
repz
mov
dec
cmp
jecxz
jb
pop
outsl
std
or
pop
and
jns
and
mov
rcll
out
jnp
or
ds
fidivs
out
mov
mov
test
mov
frstor
cwtl
mov
add
dec
rcrl
lcall
xor
loope
mov
xchg
dec
inc
outsl
inc
lods
xor
sbb
cmp
inc
pop
dec
jne
daa
into
push
xor
dec
sbb
cmp
adc
dec
mov
adc
xchg
lea
jle
lock
xchg
sbb
cmc
lock
xor
adc
or
and
push
sbb
sbb
testb
mov
pop
jae
sub
push
xchg
push
jnp
pop
jbe
sbb
cmpsl
imul
gs
stos
gs
adc
sahf
pusha
jnp
add
dec
mov
pop
es
mov
and
out
fcompl
add
insb
push
mov
int3
push
cltd
mov
mov
pop
sub
xchg
out
bound
xchg
add
imul
sub
jae
xchg
cltd
jnp
adc
inc
jmp
inc
das
cmp
sbb
out
shll
push
add
and
lods
fadds
out
pop
cmp
or
sub
arpl
mov
mov
push
jg
sti
inc
jge
pcmpgtd
outsb
dec
add
test
aam
loopne
cmp
mov
loopne
roll
ja
dec
nop
enter
mov
scas
cltd
pop
movsb
aad
jno
dec
jnp
add
ss
cs
mov
ja
adc
cmp
jb
loope
dec
and
jmp
test
bound
fistl
and
dec
test
mov
sbb
sub
mov
sub
jmp
les
xor
push
dec
dec
rclb
xor
lea
jg
sbb
subl
xchg
adc
int
pop
pop
ret
gs
push
fimull
fildll
jp
stos
icebp
imul
ret
mov
xor
imul
and
icebp
rorl
inc
push
pushf
push
inc
aad
add
fsts
arpl
sub
repz
add
addb
in
mov
movsl
inc
mov
in
xchg
push
push
xchg
add
dec
mov
jns
push
iret
push
out
push
call
lahf
mov
push
dec
fwait
jbe
pop
inc
mov
and
cmp
in
add
icebp
mov
scas
mov
cmp
aad
mull
pop
adc
jae
inc
add
lahf
xchg
pop
xchg
mov
jmp
das
dec
mov
stc
dec
cmc
dec
pop
pop
sub
cltd
xchg
push
add
jge
xor
sub
inc
aaa
addl
dec
js
pop
out
xchg
xchg
imul
jmp
fistpl
roll
mov
sbb
dec
add
mov
adc
test
aam
rcr
mov
popa
sbb
in
notb
repz
jl
or
and
or
mov
test
pop
or
pop
addl
lea
stos
lret
rep
inc
outsb
cmp
pop
mov
pop
push
fstpt
mov
dec
pop
orl
shlb
in
push
mov
lock
subl
mov
xchg
adcb
imul
jecxz
inc
arpl
xchg
into
daa
pop
inc
mov
xchg
jl
inc
push
pop
shll
inc
dec
inc
test
sub
push
add
sub
dec
insl
inc
dec
test
popa
popl
jne
loope
popa
shrl
sbb
dec
or
je
stos
dec
pop
fsub
dec
dec
sbb
sub
sub
in
outsb
sub
test
rcrl
mov
into
dec
pop
push
or
sub
mov
test
fstps
mov
jae
push
scas
and
mov
out
and
rclb
shlb
xchg
inc
cmpsl
inc
xchg
push
scas
dec
jbe
adc
push
ja
icebp
inc
inc
lea
push
xchg
push
jne
leave
mov
imul
xchg
into
incl
pop
mov
and
xchg
dec
rolb
inc
dec
jbe
or
repnz
jne
dec
rorl
adc
push
mov
les
sub
sub
inc
sub
sub
mov
mov
fsubrp
popf
or
out
jne
or
mov
pop
sub
xor
inc
fldt
sbb
jge
in
gs
sub
sub
sub
daa
add
mov
leave
inc
and
je
jle
je
dec
mov
push
inc
dec
mov
es
pop
cli
leave
test
jns
add
insl
sub
dec
out
lock
dec
lret
data16
dec
pop
lods
xor
inc
fiadds
cmp
sub
pop
cwtl
sub
clc
movb
cmp
push
insl
imul
test
mov
sub
dec
sub
dec
shlb
lahf
dec
or
shl
lret
je
je
rcll
push
or
sub
cmp
and
out
pop
push
dec
popl
fsubr
pop
js
fstl
push
and
jne
inc
sbb
jbe
sbb
sub
push
out
add
mov
push
addl
push
jle
les
pop
or
rol
dec
cmp
sbb
pop
in
jp
stos
aas
pushf
inc
mov
sub
xlat
bswap
push
arpl
loope
or
jl
push
loope
xor
sub
mov
push
sahf
lahf
sub
add
lcall
out
push
fsubr
jbe
adc
dec
add
push
fmull
jbe
out
sub
xchg
push
into
cmp
scas
pop
mov
adc
sahf
cwtl
inc
inc
ja
xchg
jno
xchg
cli
insl
loope
insb
insb
mov
push
jle
dec
xlat
or
add
or
xor
aad
xchg
xchg
push
call
mov
sbb
push
mov
pusha
jnp
rclb
and
lret
push
jne
push
dec
addb
outsl
push
or
ja
daa
adc
imul
xchg
dec
pop
sub
add
test
jns
in
lods
dec
inc
or
or
mov
fstl
imul
movsl
dec
add
add
add
mov
fidivl
int
cmp
inc
mov
fwait
dec
add
or
and
nop
pop
jge
add
or
sub
pop
xchg
icebp
pop
inc
inc
andb
or
mov
das
inc
xor
push
out
inc
push
sub
les
rcl
push
test
cmp
and
mov
xor
and
add
jnp
dec
sbb
push
mov
inc
xor
inc
rcrb
pop
not
push
adcl
imul
mov
outsl
stos
pusha
push
inc
das
rcll
pop
adc
inc
ljmp
pop
pop
aad
adc
push
mov
loope
xor
or
push
sbb
adcl
bound
dec
sbb
mov
sbb
adc
push
call
sbb
jno
add
sub
lahf
add
lods
mov
adc
mov
xor
das
pop
sbb
andb
inc
adcl
or
push
push
test
loopne
dec
stos
aad
push
mov
push
xlat
cmp
push
aad
adc
in
les
cmp
or
popa
gs
sti
mov
cwtl
mov
outsb
pushf
adc
inc
sbb
jns
and
ljmp
jno
pop
push
push
cli
adc
lea
inc
lea
mov
es
dec
pop
repz
mov
push
es
mov
cmp
orl
mov
jne
das
xchg
or
mov
adc
push
scas
popa
jbe
pop
push
adc
push
xchg
adc
xchg
mov
pop
int
sbb
roll
or
cli
dec
fists
pop
sbb
imul
testl
jl
pop
mov
test
adc
sub
jmp
push
sbbl
add
mov
push
add
aaa
jmp
or
sbb
arpl
xor
and
jle
adc
and
inc
and
mov
sbb
std
and
adc
das
in
and
sbb
push
and
push
push
xor
cmpl
arpl
dec
stos
push
pop
cwtl
rol
sub
jmp
outsb
or
rol
pop
dec
adc
or
pop
jne
push
mov
dec
sub
adc
adc
inc
enter
dec
xchg
loopne
into
add
inc
pop
add
xor
insb
mov
pop
add
adc
jg
add
sbb
or
or
dec
cmc
jno
lods
xor
jnp
inc
sbb
in
nop
fistl
dec
cmp
xlat
mov
sbb
in
test
pop
daa
ds
stos
jne
sbb
sbb
pop
insl
pop
or
jecxz
add
sbb
pop
mov
cmpl
mov
mov
call
push
dec
jmp
or
sub
and
push
mov
add
nop
test
sbb
repz
push
out
inc
inc
mov
cmp
jl
hlt
sub
call
sub
bound
cmp
addr16
insb
jge
add
jo
sub
xchg
push
js
xchg
xchg
sub
push
xor
xchg
lods
lds
dec
bound
pop
push
mov
push
clc
jno
iret
dec
dec
mov
inc
sbb
in
and
lds
das
push
adc
or
and
push
xor
adc
out
dec
pop
pop
xor
in
andb
inc
fucomi
push
lcall
inc
xor
stos
pop
sub
inc
and
push
imul
cs
or
pop
jae
jp
sahf
mov
fdivp
jnp
clc
jnp
mov
sub
movsl
stos
push
pop
or
sbb
xor
ljmp
movups
jb
or
push
push
sbb
outsl
and
mov
stos
outsl
pop
dec
sti
mov
insl
jg
push
push
ja
lret
sahf
sbb
dec
pop
or
sbb
sbb
sbb
inc
dec
mov
cld
flds
in
cmp
cmc
xor
mov
popa
cmp
jno
ret
inc
les
jno
sub
pop
icebp
fildl
addr16
std
loopne
loopne
lret
or
das
loopne
sbb
scas
xor
pop
mov
adc
push
mov
add
fisttps
inc
lods
inc
cmp
jp
jp
popa
dec
pop
dec
adcb
mov
pop
pop
pop
jle
in
aas
leave
or
dec
outsb
dec
lret
mov
xacquire
lods
sbb
xor
add
stos
push
pop
xor
mov
in
addr16
and
sbb
sub
roll
pop
mov
es
sub
arpl
sbb
sbb
xchg
cmp
or
sbb
dec
fwait
out
mov
jle
pop
pusha
clc
loope
push
sbb
rcrb
mov
lret
sub
sub
hlt
movsb
out
push
cli
add
cli
dec
add
movsl
and
xor
push
add
arpl
rolb
xchg
out
mov
and
stos
sti
xor
and
add
imul
stos
xchg
dec
mov
sbb
adc
mov
xchg
sub
add
std
sbb
cmp
adc
add
adc
mov
dec
mov
or
test
dec
xchg
movsb
push
lds
ja
lea
mov
mov
or
popl
or
imul
mov
pop
std
fstp
stos
pop
or
das
or
mov
pop
jmp
je
popa
ja
movsl
inc
mov
iret
bound
push
mov
mov
xchg
test
push
nop
add
addr16
fs
jns
mov
and
mov
sbb
push
sbb
pop
loop
insb
ret
idivl
inc
mov
lret
out
push
add
jne
push
test
mov
pop
arpl
roll
dec
test
les
or
ret
aaa
sbb
dec
out
add
push
sbb
mov
stos
mov
pop
adc
xchg
and
stc
cmpsl
sub
movsb
jmp
mov
push
lods
add
xor
dec
and
sub
int
aam
pop
or
and
sub
add
sub
xor
mov
inc
fs
xchg
and
or
movsl
bound
add
dec
loop
adc
test
mov
lods
shll
icebp
mov
lcall
mov
push
shrb
mov
add
adc
bound
push
lods
scas
jne
cltd
sub
pusha
imull
or
sub
inc
dec
daa
lods
bound
dec
push
mov
sub
orb
pop
ret
stos
mov
loope
xchg
fisubrl
mov
sti
stos
push
sbb
inc
fldcw
adc
sbb
call
jne
xor
pop
lea
jge
dec
adc
add
sbb
bound
inc
dec
or
push
ljmp
sub
mov
jmp
mov
in
dec
jmp
lds
repz
mov
push
sarl
xor
xchg
ret
push
ret
or
pop
stos
mov
mov
jns
shlb
inc
or
pusha
lret
mov
sub
mov
outsb
arpl
aad
adc
test
xchg
push
aad
gs
dec
icebp
imul
xor
push
mov
add
fwait
xchg
push
and
adc
fadd
lret
ljmp
inc
sub
aas
adc
sbb
adc
mov
mov
xor
push
lods
adc
rorb
inc
test
sub
movsl
adc
movsb
mov
add
mov
in
int
sbb
shll
or
fsubrs
inc
daa
popf
push
adc
inc
mov
push
xor
xchg
ja
xor
sub
and
inc
jmp
or
push
pop
insb
mov
adc
mov
dec
or
fwait
jg
push
shrb
sub
movsl
add
das
cwtl
and
adc
outsb
or
adc
movsl
mov
or
xchg
daa
pop
push
sub
add
add
xor
dec
sub
shll
sub
add
push
and
add
and
sbb
lea
scas
popa
imul
push
pop
inc
xor
mov
push
iret
pusha
rolb
push
jnp
mov
xchg
add
pop
sub
add
dec
clc
int3
push
sub
mov
xor
jb
aaa
push
cmp
ja
repnz
mov
dec
cmp
aas
push
inc
pop
cmp
clc
dec
fs
inc
sbb
pop
pop
jg
dec
insl
mov
fs
outsb
stos
js
jp
ret
xchg
insb
dec
pusha
jge
mov
movsl
unpcklps
daa
push
mov
mov
and
mov
pcmpeqd
inc
clc
pop
sar
inc
std
pand
sahf
jbe
std
daa
mov
add
mov
mov
fistps
mov
pop
insb
in
fiaddl
sbb
insl
and
cmp
scas
popf
popf
in
cmp
cmp
adc
sahf
xor
mov
pop
or
mov
mov
sarl
aas
cmp
mov
das
cli
lahf
lret
int
pop
jge
test
inc
leave
mov
movsb
inc
aas
xor
aas
dec
cmp
jae
sub
pop
inc
fwait
and
push
dec
push
pop
enter
das
jg
cmpsb
data16
outsl
add
dec
mov
je
js
lea
mov
mov
daa
out
pop
pop
lods
inc
lods
pop
cmp
cmp
stc
scas
wrmsr
scas
mov
fwait
xlat
push
icebp
push
mov
pop
mov
imulb
daa
push
jnp
pop
cmp
out
cmpb
inc
sahf
mov
jg
mov
mov
nop
pop
fstp
xchg
xor
mov
out
icebp
xor
mov
mov
pop
popl
add
int3
adc
sti
mov
sub
add
mov
ds
out
mov
xlat
daa
rorl
push
xor
push
pop
pop
rcll
popa
pextrw
mov
orl
jbe
mov
pop
pop
xchg
daa
sub
mov
aaa
xchg
dec
cwtl
pop
cmpsl
insl
dec
jb
sahf
fsubs
pushf
jbe
imul
aad
in
sub
push
shll
fwait
divb
enter
mov
int
outsl
xchg
cmp
out
sbb
mov
in
imul
push
in
inc
adc
add
xor
in
lea
push
xchg
pop
rcr
cmc
in
mov
jns
flds
rcr
aaa
pminub
xchg
daa
cmp
cmp
xchg
fldt
sti
nop
cld
aaa
sub
push
dec
add
test
fcompl
add
add
pop
add
ficoml
rorb
pavgw
inc
inc
dec
jb
mov
daa
popa
and
sub
ss
xor
add
xchg
xor
cmpsb
popf
jbe
aas
das
xchg
gs
mov
jge
mov
pminub
addl
mov
lret
scas
add
hlt
out
add
pop
int
in
in
call
push
lods
lock
adc
icebp
cmp
xchg
cli
inc
or
js
push
call
inc
imul
jae
mov
daa
xchg
pushf
in
xchg
pop
adc
cmp
mov
xor
xor
pop
cmp
mov
inc
push
pop
dec
daa
mov
outsb
xor
fucomi
push
pop
xor
pop
pop
testb
and
loopne
imul
push
push
daa
fsts
lods
dec
push
push
fwait
mov
leave
adcl
sbb
int
insb
pop
outsb
pop
mulps
pop
add
pop
rcrl
stc
mov
adc
jnp
outsl
xor
rorl
pusha
pop
ss
add
in
enter
xchg
imul
insl
jae
jbe
mov
mov
xor
cmpsl
popf
jbe
jl
jge
pop
lret
mov
fnstcw
leave
out
iret
mov
insb
rcrb
repz
dec
push
push
xlat
pop
inc
fistpl
and
add
loope
out
out
testb
cmp
xchg
cli
jecxz
sub
pop
jmp
cmp
sahf
popa
cld
push
cld
push
std
test
in
nop
cmpsl
inc
inc
jmp
aas
add
daa
jns
add
add
aaa
leave
lret
in
pop
add
or
fsts
insl
xor
into
adc
xchg
sbb
jnp
lcall
push
jb
xchg
rcll
jg
arpl
pop
mov
daa
cmp
mov
ds
leave
pop
loopne
sahf
dec
jb
cmp
pop
fmul
out
int
enter
outsl
pop
sbb
xchg
rorb
outsb
cmp
push
movhps
cmp
loop
mov
cs
in
fisttpll
leave
jae
das
jecxz
in
out
and
dec
mov
xor
push
out
call
test
ljmp
and
leave
test
jl
iret
in
psllw
push
mov
lcall
hlt
add
cmp
imul
mov
insl
push
jne
mov
push
daa
scas
pop
pop
pop
push
push
repz
pop
testb
sbb
clc
push
add
adc
jl
int
daa
lret
inc
pusha
test
inc
add
pop
inc
rolb
mov
or
adc
xor
add
insb
jae
jb
cmp
or
outsb
inc
sbb
push
jb
je
arpl
and
mov
and
dec
or
add
roll
lods
add
fstpt
jno
gs
jae
jb
gs
jne
je
popa
outsb
addr16
fadds
push
jns
gs
das
inc
sub
push
add
mov
std
jnp
fldcw
or
out
push
imul
sbb
jb
outsb
je
sarl
outsl
insl
insl
pusha
and
jbe
fisttpl
jb
cmp
jne
outsl
jb
adc
sbb
je
push
and
push
xor
arpl
insl
sbb
push
js
dec
outsl
ret
out
pusha
imul
outsl
outsb
push
outsb
je
dec
jb
out
cltd
mov
stos
imul
or
mov
push
inc
push
sub
or
inc
or
mov
cmpsb
repnz
mov
imul
push
inc
out
je
in
js
push
pop
fdivrp
push
jns
addr16
sbb
outsl
ja
jb
out
xor
push
andb
push
pop
jo
push
jne
movsb
xchg
je
gs
jo
sbbl
popa
test
insb
push
sbb
push
add
push
jb
fistl
sbb
mov
push
int
cltd
pop
xchg
mov
or
push
arpl
dec
outsl
push
imul
daa
inc
push
dec
dec
xchg
bound
idiv
mov
outsl
js
inc
mov
adc
jo
xchg
jecxz
jecxz
push
ret
ret
pusha
mov
sbb
sub
inc
rcrl
pop
lret
shl
jns
insb
incl
sub
aam
push
lcall
jbe
imul
dec
mov
inc
push
cmp
mov
xor
add
add
pop
inc
mov
xor
sub
pop
popl
push
imul
pop
xor
addr16
fildl
xor
add
nop/reserved
ss
pop
cmp
jnp
mov
pop
push
add
ss
xchg
add
cmp
inc
dec
inc
inc
add
stc
rcl
jmp
sub
inc
adc
pop
je
push
test
and
xchg
aaa
rolb
or
pop
push
jnp
pop
xchg
pop
shrb
fs
popa
xor
jno
gs
sahf
dec
push
inc
fmulp
fwait
rolb
notl
add
push
jae
push
jae
add
push
mov
aaa
jl
adc
mov
das
ds
xchg
and
incl
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
