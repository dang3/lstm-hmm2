jmp
mov
jmp
mov
jmp
mov
xor
xor
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
ja
lea
lea
xchg
mov
mov
mov
lea
mov
mov
xchg
lea
xchg
mov
inc
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
cmp
ja
lea
lea
xchg
mov
mov
mov
lea
mov
mov
xchg
lea
xchg
mov
inc
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
cmp
jge
mov
lea
xchg
mov
lea
mov
lea
lea
mov
lea
lea
mov
lea
mov
inc
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
pop
ret
nop
push
mov
add
cmp
jg
mov
lea
lea
lea
mov
dec
dec
mov
mov
lea
mov
xchg
dec
dec
dec
jne
lea
xchg
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
lea
lea
cmp
jg
mov
xchg
mov
inc
dec
inc
dec
jne
dec
inc
dec
dec
dec
mov
mov
lea
lea
mov
mov
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
ja
lea
lea
xchg
mov
mov
mov
lea
mov
mov
xchg
lea
xchg
mov
inc
mov
cmp
je
call
cmp
jg
mov
mov
mov
lea
mov
mov
dec
mov
mov
lea
xchg
xchg
dec
mov
mov
lea
xchg
mov
xor
divl
test
jne
cmp
jg
lea
xchg
mov
mov
lea
lea
lea
mov
mov
mov
mov
lea
mov
inc
inc
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
lea
cmp
js
inc
dec
inc
inc
dec
dec
cmp
jl
lea
mov
mov
mov
lea
lea
xchg
mov
inc
lea
xchg
inc
dec
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
lea
lea
cmp
jg
mov
xchg
mov
inc
dec
inc
dec
jne
dec
inc
dec
dec
dec
mov
mov
lea
lea
mov
mov
mov
mov
cmp
je
jmp
cmp
jge
mov
lea
xchg
mov
lea
mov
lea
lea
mov
lea
lea
mov
lea
mov
inc
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
cmp
jbe
mov
lea
lea
lea
mov
mov
inc
inc
inc
xchg
mov
xchg
xchg
mov
inc
inc
inc
xchg
dec
dec
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
lea
cmp
jb
xchg
xchg
lea
mov
dec
inc
mov
mov
mov
dec
dec
dec
xchg
mov
mov
mov
inc
dec
mov
cmp
je
jmp
cmp
jge
mov
lea
xchg
mov
lea
mov
lea
lea
mov
lea
lea
mov
lea
mov
inc
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
call
mov
lea
cmp
js
inc
dec
inc
inc
dec
dec
cmp
jl
lea
mov
mov
mov
lea
lea
xchg
mov
inc
lea
xchg
inc
dec
mov
sub
mov
cmp
jg
mov
lea
lea
lea
mov
dec
dec
mov
mov
lea
mov
xchg
dec
dec
dec
jne
lea
xchg
push
mov
mov
xor
call
mov
cmp
jg
lea
xchg
mov
mov
lea
lea
lea
mov
mov
mov
mov
lea
mov
inc
inc
dec
mov
mov
mov
call
lea
lea
cmp
jg
mov
xchg
mov
inc
dec
inc
dec
jne
dec
inc
dec
dec
dec
mov
mov
lea
lea
mov
mov
mov
push
mov
mov
xor
call
mov
cmp
jg
mov
mov
mov
lea
mov
mov
dec
mov
mov
lea
xchg
xchg
dec
mov
mov
lea
xchg
mov
mov
cmp
ja
lea
lea
xchg
mov
mov
mov
lea
mov
mov
xchg
lea
xchg
mov
inc
mov
mov
call
mov
mov
mov
lea
cmp
js
inc
dec
inc
inc
dec
dec
cmp
jl
lea
mov
mov
mov
lea
lea
xchg
mov
inc
lea
xchg
inc
dec
lea
mov
push
mov
jmp
cmp
jg
mov
lea
lea
lea
mov
dec
dec
mov
mov
lea
mov
xchg
dec
dec
dec
jne
lea
xchg
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jge
mov
lea
xchg
mov
lea
mov
lea
lea
mov
lea
lea
mov
lea
mov
inc
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
lea
cmp
jb
xchg
xchg
lea
mov
dec
inc
mov
mov
mov
dec
dec
dec
xchg
mov
mov
mov
inc
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jbe
mov
lea
lea
lea
mov
mov
inc
inc
inc
xchg
mov
xchg
xchg
mov
inc
inc
inc
xchg
dec
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jg
mov
mov
mov
lea
mov
mov
dec
mov
mov
lea
xchg
xchg
dec
mov
mov
lea
xchg
mov
sub
add
add
mov
cmp
ja
lea
lea
xchg
mov
mov
mov
lea
mov
mov
xchg
lea
xchg
mov
inc
lea
pushl
call
mov
pop
ret
add
je
jb
arpl
fs
jae
add
push
mov
add
mov
mov
mov
mov
lea
lea
cmp
jg
mov
xchg
mov
inc
dec
inc
dec
jne
dec
inc
dec
dec
dec
mov
mov
lea
lea
mov
mov
mov
cmp
jg
lea
xchg
mov
mov
lea
lea
lea
mov
mov
mov
mov
lea
mov
inc
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jg
mov
lea
lea
lea
mov
dec
dec
mov
mov
lea
mov
xchg
dec
dec
dec
jne
lea
xchg
mov
mov
movl
cmp
jbe
mov
lea
lea
lea
mov
mov
inc
inc
inc
xchg
mov
xchg
xchg
mov
inc
inc
inc
xchg
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jg
mov
mov
mov
lea
mov
mov
dec
mov
mov
lea
xchg
xchg
dec
mov
mov
lea
xchg
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jbe
mov
lea
lea
lea
mov
mov
inc
inc
inc
xchg
mov
xchg
xchg
mov
inc
inc
inc
xchg
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
lea
cmp
js
inc
dec
inc
inc
dec
dec
cmp
jl
lea
mov
mov
mov
lea
lea
xchg
mov
inc
lea
xchg
inc
dec
mov
pop
ret
lea
push
cmp
testb
push
pop
insb
jle
jle
jp
inc
jnp
adcl
test
arpl
imul
pop
pop
dec
jle
imul
inc
imul
imul
pop
imul
bound
test
pop
pop
pop
pop
jp
inc
imul
pop
cmpb
jp
sub
inc
jnp
adcl
pop
pop
adcb
pop
imul
adcl
pop
sub
inc
pop
jnp
adcl
pop
pop
pop
pop
pop
dec
mov
lahf
pop
hlt
sub
mov
pop
insb
jo
cmp
cmp
cmp
idivl
push
pop
add
push
pop
jmp
push
pop
cmc
cmp
pop
cmp
or
push
pop
adc
push
pop
mov
mov
out
add
add
out
add
out
push
pop
sahf
pop
out
add
jmp
push
pop
sahf
pop
out
add
out
mov
out
add
mov
mov
out
add
mov
mov
out
add
sbb
out
add
sub
sahf
pop
out
mov
push
fsubs
ficomps
mov
mov
pop
fsubs
add
pop
sahf
pop
fbld
push
mov
aas
inc
mov
pop
inc
mov
arpl
pop
sahf
pop
add
cmp
pop
fbld
pop
add
pop
fcomip
inc
dec
mov
repz
sbb
pop
pop
pop
mov
pop
mov
xor
pop
add
out
xchg
pop
pop
pop
sahf
pop
iret
mov
sbb
and
enter
mov
sbb
sahf
pop
lret
lods
pop
pop
pop
adcl
lret
mov
add
pop
fcomip
inc
sub
push
and
mov
pop
pop
mov
pop
imul
pop
lret
mov
sahf
pop
sti
mov
pop
sbb
sahf
pop
testl
mov
add
lret
mov
add
mov
sbb
sti
mov
pop
pop
inc
mov
pop
fcomip
inc
das
mov
add
mov
sti
sbb
sahf
pop
mov
sbb
pop
incl
pop
fcomip
inc
das
mov
cwtl
pop
negl
cwtl
pop
sti
sbb
pop
push
cwtl
pop
lret
or
and
and
xor
hlt
hlt
mov
aas
sbb
sahf
pop
out
mov
inc
sahf
pop
jmp
pop
jecxz
inc
push
pop
addl
xlat
and
pop
jecxz
mov
dec
jg
xchg
pop
pop
adcl
push
aaa
inc
mov
dec
jg
xchg
pop
pop
adcl
mov
dec
mov
jmp
fwait
cmp
repz
hlt
adcl
xchg
add
repz
hlt
xlat
hlt
stc
mov
pop
fsubs
add
push
mov
xchg
sarb
pop
pop
pop
push
jnp
pop
pop
push
push
pop
pop
pop
push
cmpsl
pop
jmp
pop
pop
xlat
push
add
jmp
pop
pop
ds
push
lcall
pop
pop
add
ret
ljmp
push
fiadds
adc
ret
incl
pop
pop
xor
jb
pop
push
push
insb
sbb
mov
sahf
cmc
ds
mov
leave
push
mov
fsubs
ficoms
add
fdivrp
cld
hlt
hlt
hlt
imul
pop
pop
mov
sahf
fsubrl
sub
jmp
hlt
hlt
fistps
mov
cmc
hlt
hlt
sahf
pop
repz
pop
cmpsl
push
pop
pop
fstpl
push
cmpsl
push
pop
pop
fstpl
pop
sub
mov
lock
xchg
cmpsl
push
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
mov
hlt
hlt
hlt
pop
lahf
pop
out
xchg
jb
pop
and
mov
pop
lock
sub
mov
repz
mov
or
cmc
hlt
hlt
cmc
pop
icebp
mov
out
push
fstpl
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
fstpl
pop
sub
mov
mov
mov
out
cmc
hlt
hlt
sbb
sub
mov
mov
cmpsl
push
pop
sbb
cmp
pop
pop
pop
lahf
pop
icebp
sub
mov
and
out
sub
mov
out
lahf
xchg
cmpsl
push
pop
cmc
pop
lock
jb
pop
push
mov
push
pop
dec
mov
hlt
sub
mov
cmpsl
push
pop
push
cmp
pop
pop
pop
mov
sub
mov
cmpsl
push
pop
sub
mov
pop
and
mov
cmpsl
push
pop
sbb
cmp
pop
pop
pop
mov
sub
mov
cmpsl
push
pop
mov
pop
lahf
pop
repnz
mov
cmpsl
push
pop
mov
pop
sub
mov
pop
lahf
cltd
and
mov
cmpsl
push
pop
mov
and
mov
cmpsl
push
pop
and
xchg
and
mov
pop
and
mov
cmpsl
push
pop
sbb
cmp
pop
pop
pop
lahf
pop
repnz
mov
and
hlt
lahf
pop
cmc
mov
fdivr
and
inc
push
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
lea
cmp
jb
xchg
xchg
lea
mov
dec
inc
mov
mov
mov
dec
dec
dec
xchg
mov
mov
mov
inc
dec
push
call
mov
movl
cmp
jg
lea
xchg
mov
mov
lea
lea
lea
mov
mov
mov
mov
lea
mov
inc
inc
dec
mov
mov
call
mov
cmp
jg
mov
lea
lea
lea
mov
dec
dec
mov
mov
lea
mov
xchg
dec
dec
dec
jne
lea
xchg
movl
mov
mov
call
mov
cmpl
je
mov
lea
cmp
js
inc
dec
inc
inc
dec
dec
cmp
jl
lea
mov
mov
mov
lea
lea
xchg
mov
inc
lea
xchg
inc
dec
mov
mov
call
mov
cmpl
je
cmp
jg
mov
mov
mov
lea
mov
mov
dec
mov
mov
lea
xchg
xchg
dec
mov
mov
lea
xchg
lea
push
push
mov
sub
push
mov
push
call
cmp
jbe
mov
lea
lea
lea
mov
mov
inc
inc
inc
xchg
mov
xchg
xchg
mov
inc
inc
inc
xchg
dec
dec
mov
cmp
je
mov
subb
cmp
jg
mov
mov
mov
lea
mov
mov
dec
mov
mov
lea
xchg
xchg
dec
mov
mov
lea
xchg
xor
add
mov
xor
mov
lea
cmp
js
inc
dec
inc
inc
dec
dec
cmp
jl
lea
mov
mov
mov
lea
lea
xchg
mov
inc
lea
xchg
inc
dec
incl
mov
cmp
jne
cmp
jge
mov
lea
xchg
mov
lea
mov
lea
lea
mov
lea
lea
mov
lea
mov
inc
dec
mov
call
cmp
jbe
mov
lea
lea
lea
mov
mov
inc
inc
inc
xchg
mov
xchg
xchg
mov
inc
inc
inc
xchg
dec
dec
mov
push
mov
push
call
cmpl
je
cmp
jbe
mov
lea
lea
lea
mov
mov
inc
inc
inc
xchg
mov
xchg
xchg
mov
inc
inc
inc
xchg
dec
dec
cmp
jg
mov
mov
mov
lea
mov
mov
dec
mov
mov
lea
xchg
xchg
dec
mov
mov
lea
xchg
cmp
ja
lea
lea
xchg
mov
mov
mov
lea
mov
mov
xchg
lea
xchg
mov
inc
push
mov
push
call
mov
pop
ret
add
add
outsb
add
insb
add
add
add
add
add
add
add
jb
jne
insb
push
jb
je
arpl
push
mov
add
cmp
ja
lea
lea
xchg
mov
mov
mov
lea
mov
mov
xchg
lea
xchg
mov
inc
mov
mov
mov
xor
add
mov
cmp
jne
pushl
call
add
cmp
jne
cmp
jg
lea
xchg
mov
mov
lea
lea
lea
mov
mov
mov
mov
lea
mov
inc
inc
dec
movb
cmp
jg
mov
mov
mov
lea
mov
mov
dec
mov
mov
lea
xchg
xchg
dec
mov
mov
lea
xchg
mov
mov
pop
ret
lea
push
mov
add
cmp
jbe
mov
lea
lea
lea
mov
mov
inc
inc
inc
xchg
mov
xchg
xchg
mov
inc
inc
inc
xchg
dec
dec
cmp
jg
mov
lea
lea
lea
mov
dec
dec
mov
mov
lea
mov
xchg
dec
dec
dec
jne
lea
xchg
call
test
jne
mov
jmp
movw
lea
lea
cmp
jg
mov
xchg
mov
inc
dec
inc
dec
jne
dec
inc
dec
dec
dec
mov
mov
lea
lea
mov
mov
mov
call
lea
mov
pop
ret
push
mov
add
cmp
jbe
mov
lea
lea
lea
mov
mov
inc
inc
inc
xchg
mov
xchg
xchg
mov
inc
inc
inc
xchg
dec
dec
mov
lea
cmp
js
inc
dec
inc
inc
dec
dec
cmp
jl
lea
mov
mov
mov
lea
lea
xchg
mov
inc
lea
xchg
inc
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
lea
cmp
js
inc
dec
inc
inc
dec
dec
cmp
jl
lea
mov
mov
mov
lea
lea
xchg
mov
inc
lea
xchg
inc
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
call
cmp
jg
lea
xchg
mov
mov
lea
lea
lea
mov
mov
mov
mov
lea
mov
inc
inc
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
cmp
jg
lea
xchg
mov
mov
lea
lea
lea
mov
mov
mov
mov
lea
mov
inc
inc
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
call
call
movl
lea
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
jbe
mov
lea
lea
lea
mov
mov
inc
inc
inc
xchg
mov
xchg
xchg
mov
inc
inc
inc
xchg
dec
dec
movl
lea
push
mov
push
call
call
call
movl
lea
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jg
lea
xchg
mov
mov
lea
lea
lea
mov
mov
mov
mov
lea
mov
inc
inc
dec
push
call
mov
mov
lea
cmp
js
inc
dec
inc
inc
dec
dec
cmp
jl
lea
mov
mov
mov
lea
lea
xchg
mov
inc
lea
xchg
inc
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
lea
cmp
js
inc
dec
inc
inc
dec
dec
cmp
jl
lea
mov
mov
mov
lea
lea
xchg
mov
inc
lea
xchg
inc
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
call
cmp
jg
lea
xchg
mov
mov
lea
lea
lea
mov
mov
mov
mov
lea
mov
inc
inc
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
cmp
jg
lea
xchg
mov
mov
lea
lea
lea
mov
mov
mov
mov
lea
mov
inc
inc
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
call
call
movl
lea
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
jbe
mov
lea
lea
lea
mov
mov
inc
inc
inc
xchg
mov
xchg
xchg
mov
inc
inc
inc
xchg
dec
dec
movl
lea
push
mov
push
call
call
call
movl
lea
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
cmp
jg
mov
lea
lea
lea
mov
dec
dec
mov
mov
lea
mov
xchg
dec
dec
dec
jne
lea
xchg
mov
pop
ret
popa
add
jo
ja
imul
arpl
jo
insb
add
add
add
in
add
movl
movl
mov
push
mov
push
call
lea
cmp
jb
xchg
xchg
lea
mov
dec
inc
mov
mov
mov
dec
dec
dec
xchg
mov
mov
mov
inc
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
cmp
jbe
mov
lea
lea
lea
mov
mov
inc
inc
inc
xchg
mov
xchg
xchg
mov
inc
inc
inc
xchg
dec
dec
movl
movl
mov
push
mov
push
call
call
call
call
cmp
jge
mov
lea
xchg
mov
lea
mov
lea
lea
mov
lea
lea
mov
lea
mov
inc
dec
movl
lea
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
cmp
jge
mov
lea
xchg
mov
lea
mov
lea
lea
mov
lea
lea
mov
lea
mov
inc
dec
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
mov
pop
ret
nop
subl
jae
mov
cmp
jge
mov
lea
xchg
mov
lea
mov
lea
lea
mov
lea
lea
mov
lea
mov
inc
dec
mov
mov
lea
call
mov
lea
cmp
js
inc
dec
inc
inc
dec
dec
cmp
jl
lea
mov
mov
mov
lea
lea
xchg
mov
inc
lea
xchg
inc
dec
ret
ret
lea
mov
fcoms
xchg
add
movsb
add
lods
and
testb
es
aaa
sbb
data16
fdivl
mov
xchg
add
into
rcll
notl
stos
enter
push
add
add
cmp
leave
addr16
or
clc
sbb
sub
call
mov
inc
mov
xlat
add
jl
add
shll
adc
cld
xchg
ror
add
add
test
aad
jno
jne
cmp
sub
pop
add
mov
or
dec
stos
das
icebp
ljmp
add
sub
popa
sub
add
mov
je
mov
sbb
pop
add
cmp
ljmp
xchg
arpl
aaa
xchg
mulb
add
pop
mov
mov
add
cmpsb
enter
andl
xor
mov
add
add
sub
shlb
cmp
jb
rorb
add
add
add
stos
in
xor
ja
add
mov
ret
ret
pop
push
dec
das
aad
jmp
and
mov
mov
mov
daa
add
popa
fs
add
and
nop
xlat
pop
cmc
add
add
add
mov
inc
add
jo
dec
pop
and
hlt
xor
mov
cwtl
fadd
rcrb
sbb
jp
push
inc
mov
shll
pop
add
mov
shlb
lods
adc
jo
add
ret
repz
lcall
add
lds
popa
add
add
adc
addr16
inc
xchg
loopne
add
movsl
rolb
sbb
add
enter
fdivl
push
xchg
das
inc
addr16
clc
add
push
add
or
mov
add
into
add
jo
add
sub
add
add
add
add
mov
jo
jo
sbb
shrb
dec
inc
add
inc
mov
add
add
sub
pop
add
add
jno
imul
push
cwtl
jns
push
pop
add
in
add
dec
and
add
xor
add
push
add
add
xchg
mov
mov
add
mov
and
adc
mov
sbb
xchg
movsl
mov
addr16
add
lds
fisubs
xor
and
mov
or
or
jae
lds
jbe
or
xchg
cs
int
add
in
clc
aaa
add
roll
pusha
test
add
shr
pop
iret
icebp
out
popa
test
lcall
sbb
mov
mov
add
mov
jecxz
xor
jl
add
add
add
sti
mov
adc
add
add
stos
or
ljmp
leave
movl
into
pop
scas
add
inc
test
std
fucom
xchg
pop
cmp
pushw
pushf
ficoml
pop
pop
add
add
add
add
pop
add
fnstenv
sahf
mov
add
insb
add
add
mov
add
pop
push
xor
add
jecxz
mov
ljmp
std
aad
lret
lret
jl
xor
ds
insb
fnstcw
xor
lcall
fs
adc
js
add
ret
sti
adcl
dec
nop
add
outsl
add
dec
add
sub
pop
add
or
orb
add
push
pop
in
add
cmp
inc
inc
rolb
and
insb
jg
jmp
outsl
imul
mov
jb
rclb
or
xlat
adc
and
in
ret
sti
not
mov
aad
aas
push
nop
stc
xor
dec
pop
mov
push
flds
in
les
mov
in
cli
pop
mov
fwait
xor
adc
das
cmc
pushf
jae
push
repz
les
mov
in
inc
shrl
dec
cld
add
adc
je
insw
jecxz
push
dec
divb
ret
ret
dec
mov
movsl
mov
xchg
clc
in
cli
mov
mov
das
sub
dec
mov
jbe
lods
and
and
shrl
in
lds
nop
insl
iret
pop
fmull
inc
sbb
mov
or
lcall
stc
lods
mov
ret
test
adc
pushf
xchg
xor
sub
push
aam
jecxz
ret
cmc
into
rcll
test
movsl
clc
mov
test
ljmp
sub
jge
into
mov
inc
jb
xchg
xchg
xchg
nop
ljmp
mov
cltd
jne
mov
xchg
adc
mov
dec
xor
nop
test
and
fstpt
shrl
aaa
pop
jle
or
adc
pop
add
test
loop
xchg
or
fidivs
bound
mov
xchg
sarl
stos
push
lock
lock
inc
push
hlt
inc
or
pop
and
pusha
out
fisttpll
out
pushaw
test
out
add
lahf
jns
sbb
in
mov
xchg
and
cs
xor
inc
jp
add
pop
in
mov
mov
add
jle
iret
shl
fs
pusha
adc
filds
sti
fucompp
inc
push
add
jecxz
push
pop
xchg
test
stc
bound
push
mov
stos
stos
dec
andb
mov
insb
js
or
xchg
push
push
iret
adc
xchg
iret
pop
push
add
and
addb
jae
or
sahf
push
sbb
push
pop
inc
outsl
fisubrl
mov
sbb
aaa
inc
imul
dec
lds
inc
xor
jae
enter
lret
out
mov
test
enter
out
sbb
sub
test
inc
or
xlat
mov
pop
sub
cwtl
pop
dec
pop
inc
push
jno
inc
xor
dec
mov
add
rcl
in
movsb
mov
aas
insl
cmpsb
xchg
ret
enter
daa
xor
inc
cmp
xchg
push
jl
divl
dec
icebp
or
movsl
inc
add
lahf
stos
loope
push
add
out
push
ret
inc
mov
inc
fcompl
add
add
push
pop
mov
sub
rol
cmp
inc
outsb
jne
scas
adc
jge
lods
aas
stos
loope
mov
subb
sbb
stos
xor
mov
ljmp
cmpsl
pushf
icebp
pop
sbb
cmp
fcoml
push
fcoml
in
sub
or
test
sbb
jg
xor
mov
push
sbb
es
enter
in
xlat
fcomp
ss
and
fmuls
or
lret
adc
sahf
pop
inc
mov
mov
sbb
ror
dec
cmpsl
ret
cmc
dec
neg
xor
sub
jae
aaa
loop
rorb
fbstp
push
dec
xor
mov
mov
mov
out
mov
mov
movsl
fidivrl
xchg
rorl
sub
jnp
gs
mov
lods
adc
jecxz
cmp
clc
add
add
jmp
cmp
xor
push
and
mov
sub
jmp
ljmp
dec
mov
ret
inc
mov
and
mov
in
pop
fstps
call
sbb
bound
andl
push
sbb
jmp
mov
mov
inc
fsubl
xor
mov
in
and
jecxz
fsubrs
idivb
ret
std
sbb
test
fs
xor
and
ja
jecxz
finit
pop
or
mov
cmp
lock
jmp
or
pop
mov
sub
lock
mov
push
fsubrl
ljmp
xor
mov
jnp
std
lret
test
lods
mov
lret
mov
mov
or
aam
faddp
ret
test
inc
push
mov
lock
hlt
inc
clc
test
xchg
test
test
lods
call
pop
jmp
cmpsb
push
cmp
imul
outsl
sbb
add
jp
cltd
lods
mov
sahf
in
push
mov
or
dec
fwait
lcall
pop
sbb
sbb
popa
rol
es
sub
stos
jle
in
push
mov
ret
add
ret
pushf
cli
jmp
cmpb
into
outsl
xor
scas
mov
push
pop
mov
xchg
mov
dec
fwait
ja
inc
ljmp
fwait
imul
sub
dec
sti
out
loop
int
xchg
inc
pop
jns
hlt
sbb
xchg
xchg
jno
push
out
dec
imul
xchg
push
cmpl
call
mov
fs
jle
in
in
rolb
pop
dec
fbld
mov
push
xchg
jp
mov
dec
inc
mov
popf
and
mov
hlt
repz
inc
and
jecxz
add
scas
lahf
notl
adc
ret
mov
ret
lahf
pop
pop
jnp
inc
rorl
inc
mov
mov
sub
add
fisubl
mov
cmp
xchg
sbb
xor
std
fidivrs
xor
adc
sbb
jmp
out
jecxz
es
pop
dec
jne
pop
shll
fbstp
test
lds
xor
sbb
or
pop
out
fsubrs
and
mov
xor
movsl
push
dec
scas
cli
sbb
and
aam
movsb
dec
stos
push
xor
or
sti
enter
daa
xor
cmp
xchg
lret
pushf
push
jl
lock
dec
pusha
sti
xlat
ds
adc
jne
aad
lret
push
cltd
mov
test
lea
inc
dec
fwait
ljmp
sbb
js
daa
pop
pop
movsb
sub
loope
xchg
push
push
pop
cmp
mov
fdivr
jmp
xorb
pop
push
fisttps
rclb
roll
cltd
ljmp
dec
inc
int
movsl
clc
sub
rolb
out
jno
push
out
pushl
sub
aaa
sahf
mov
incl
jbe
pushl
popf
jg
mov
fimull
ss
or
fadds
in
adc
push
adc
pushf
shll
sbb
pop
mov
xor
outsl
push
push
loop
add
xchg
fisubrs
dec
sub
cltd
mov
add
mov
in
mov
cli
in
das
xor
mov
mov
les
adc
dec
add
jnp
pop
pop
xor
movsl
adc
lods
xchg
mov
add
stos
in
sbb
inc
ja
xlat
xchg
in
sub
shll
cwtl
js
sti
push
sar
push
and
nop
scas
add
dec
push
lods
inc
mov
pop
fnstenv
rol
fidivs
and
mov
and
stc
cltd
mov
pop
mov
outsl
negl
cli
add
shll
inc
pop
lock
inc
imull
cmpsl
jb
dec
pop
dec
pop
das
sub
dec
jecxz
mov
out
std
rolb
cwtl
xchg
mov
cmp
mov
sub
adc
adc
loop
dec
lock
add
das
ljmp
mov
nop
adc
or
cmp
insl
popf
pop
testl
ss
mov
xchg
cld
cmpsb
sti
mov
mov
shll
outsb
pop
fimull
rolb
jae
sub
rorl
adc
fstpl
push
clc
xor
insl
xchg
ret
ljmp
inc
aas
lods
push
mov
sub
or
cmp
inc
les
into
add
add
jg
cltd
jecxz
filds
xchg
dec
add
sbb
leave
dec
call
pop
aam
cmpsb
stos
insl
push
adc
pop
aas
or
fsubrp
add
xor
mov
or
mov
xor
mov
lods
mov
pop
and
cld
dec
mov
enter
xor
mov
fwait
mov
push
pop
jne
push
shll
and
and
dec
jns
jno
in
dec
adcl
cmp
or
das
addr16
pop
sbb
inc
xor
push
gs
ror
loope
in
pmulhw
aad
dec
jb
ffreep
dec
ret
mov
jmp
inc
scas
test
fsubrp
mov
mov
xor
inc
stos
xor
sbb
mov
loope
jnp
ss
scas
add
pop
push
push
sahf
push
adc
sbb
ret
push
pop
xchg
lods
xor
pop
jae
loope
inc
movsb
adc
fisubs
enter
sahf
xchg
push
arpl
pop
pop
imul
fisubs
call
out
rolb
mov
sbb
leave
xchg
std
stos
hlt
cmpsb
or
arpl
std
out
fdivrp
cmpb
aam
lock
aaa
add
sbb
int3
ret
and
pop
stos
jnp
push
aaa
xchg
sysexit
inc
mov
inc
scas
in
sub
cmp
sbb
movsl
cmpsb
mov
outsb
in
nop
int3
cwtl
enter
daa
xor
ja
mov
mov
pop
ds
inc
inc
movsl
push
jecxz
and
and
jmp
cmp
stc
rcll
inc
fisttpl
dec
pop
jno
es
fnsave
push
xor
loope
jle
mov
jp
cmp
ficoml
xor
adc
jg
dec
add
outsl
fidivs
inc
pop
cld
push
inc
jb
int
cmpsl
sbb
pop
sbb
lcall
rcr
test
adc
sahf
sub
dec
test
mov
xchg
mov
repz
mov
es
mov
loopne
dec
xchg
ja
fiadds
lahf
fdivr
testb
pop
ja
ror
data16
push
jb
jnp
add
mov
xor
xor
insl
addr16
dec
lods
clc
fs
adc
jg
data16
fsubrs
hlt
mov
out
repz
xor
inc
cmp
sar
or
out
and
jbe
dec
loopne
jecxz
pop
push
cld
fwait
adc
popf
adc
add
in
in
mov
jns
cmp
push
xlat
shrb
loopne
out
int
mov
add
sbb
mov
adc
das
ljmp
iret
adc
jge
fldcw
aam
cltd
add
lea
jecxz
call
sbb
lret
or
cli
xor
inc
fbstp
inc
adc
jmp
jb
inc
dec
dec
shlb
jecxz
lods
jbe
call
std
addr16
cwtl
dec
enter
cmp
fwait
and
push
xor
fildl
imul
lods
call
xchg
mov
fwait
lret
sbb
shlb
dec
aas
mov
mov
dec
xchg
sbb
xor
sbb
lea
and
shll
dec
xchg
mov
fdivr
xchg
stc
sub
rcl
adc
sub
fwait
mov
cmp
rorb
adc
cmp
test
cmp
xchg
add
and
sub
popa
in
cltd
mov
mov
xor
out
insb
in
mov
push
and
cvtps2pi
lcall
cmp
xor
inc
iret
ss
imul
sbb
shll
pop
jg
loope
pop
inc
sti
push
std
cmp
push
add
push
mov
fs
pop
xor
mov
adc
mov
mov
cmp
fsubl
ja
in
rorb
out
inc
sbb
inc
fwait
in
mov
dec
cmpl
out
mov
or
pop
in
cltd
pop
xchg
paddw
sub
jb
andb
jp
jae
mov
dec
inc
mov
inc
shll
stc
ljmp
in
arpl
loopne
lock
push
jne
es
xchg
adc
out
enterw
enter
sub
mov
jb
mov
and
pop
shrl
dec
jnp
xor
scas
mov
push
pushf
adc
adc
iret
and
mov
push
cmpsl
lea
sub
jae
mov
inc
cmpsl
jo
or
pop
or
inc
fmuls
mov
sbb
lods
pop
imul
sbb
lds
pop
rcrb
and
insb
xor
repnz
adc
fdivp
icebp
jge,pn
loopne
mov
enter
mov
imul
xchg
add
sub
int3
scas
in
lcall
xor
push
sbb
or
and
scas
mov
sbb
mov
pusha
rorl
lss
ja
add
nop
pop
inc
daa
xor
fnstcw
daa
mov
jno
adc
jl
pop
push
bound
std
and
jl
aas
repz
test
mov
push
xor
jno
out
cwtl
imulb
or
mov
push
pop
xor
clc
xor
addr16
outsb
sahf
mov
rorb
sbb
pop
pusha
pushf
xor
cmp
add
cltd
xor
push
dec
or
int
mov
sub
ret
movsl
pop
cwtl
insb
and
pushf
mov
pop
sub
sahf
into
cwtl
stc
test
xlat
addb
aad
loope
lret
mov
hlt
bound
add
xor
xchg
jl
cmp
mov
leave
out
lret
mov
arpl
cmp
jle
into
repnz
adc
clc
outsl
adc
imul
and
arpl
addr16
mov
xor
mov
adc
out
in
test
push
mov
cmp
xchg
test
jp
push
decb
add
pop
loopne
xchg
mov
adc
imul
and
add
popa
mov
cmp
testb
pop
fnstcw
sti
mov
sbb
aad
pushf
loopne
gs
dec
aam
out
fistpl
sbb
repz
pop
jge
push
aad
xchg
inc
fcomps
and
adc
iret
add
scas
mov
inc
inc
data16
sub
arpl
jb
jno
dec
dec
fisubrs
xchg
lahf
pop
jecxz
cld
ret
testb
std
push
dec
jecxz
or
mov
je
mov
out
dec
movsb
rcrl
jo
push
mov
loope
mov
popf
pop
lock
outsl
das
test
sbb
push
pushaw
and
push
mov
stos
mov
push
insl
imul
dec
mov
jle
das
push
adc
cld
cld
cmp
rcrb
mov
fbstp
stc
mov
sbb
scas
shrb
sbb
xor
pop
les
inc
cmp
inc
popa
add
cmpsl
lods
sub
fdivrs
iret
cmpsl
aaa
xchg
mov
lcall
xlat
push
add
and
mov
dec
je
dec
and
je
test
add
sbb
jo
rol
les
sub
push
mov
inc
jecxz
adc
mov
add
and
inc
lcall
or
divb
fsubs
cmc
pop
xchg
test
movsb
dec
je
es
scas
adc
or
pop
mov
fs
adc
shll
aas
pop
xor
jg
fwait
bound
cmpl
cmp
xchg
pop
sub
sub
insl
sbb
addr16
sti
and
push
cmpxchg
rdmsr
mov
fcompl
pusha
jg
gs
xchg
add
cmp
sbb
xchg
xor
std
push
fs
jg
xchg
xor
push
mov
xchg
stos
sbb
sub
ljmp
jnp
mulb
enter
jecxz
movups
cmp
iret
xor
ret
jg
cli
je
loop
mov
inc
stos
push
inc
or
aam
sbb
push
pop
dec
fidivrl
repnz
cmp
mov
dec
push
fisubrs
mov
test
ret
or
repnz
push
jl
cmp
mov
jbe
add
mov
data16
aaa
addl
add
mov
push
std
dec
inc
xor
mov
add
dec
push
movsb
cmp
xor
push
push
mov
add
pop
inc
lods
enter
daa
das
addr16
jno
and
xchg
sar
dec
lods
push
test
or
inc
insl
jle
daa
data16
adc
out
jnp
cmp
mov
xor
movsl
pop
mov
push
int
popa
movsb
jae
xlat
jno
loope
cmp
cmp
outsb
add
adc
jmp
dec
add
sbb
xor
inc
pop
mov
push
dec
adc
int
push
stos
sub
sbb
or
and
rcll
jmp
sub
iret
sahf
jno
cli
test
lods
mov
mov
fs
mov
shl
out
jg
and
dec
dec
ss
idivl
je
fcomi
push
addr16
in
push
cmpsl
sar
je
je
int3
sbb
xor
cmc
xor
outsl
out
popa
loop
xchg
into
xchg
mov
push
js
xchg
shlw
lods
cmp
mov
push
popa
out
imul
xchg
xchg
xor
mov
cmp
ds
or
lock
sub
gs
loopne
pop
and
dec
aas
adc
adcb
sbb
adc
xlat
inc
add
ljmp
hlt
les
push
inc
enter
mov
fld
jns
popa
loopne
jp,pn
jecxz
push
outsb
jae
inc
push
dec
dec
xor
fstps
jne
out
push
aaa
sub
cli
std
sub
xchg
cltd
pusha
push
push
rcrl
pop
xor
jmp
mov
jmp
inc
imul
mov
inc
dec
dec
leave
aas
fisttpl
sub
rolb
je
aas
nop
push
testb
cmc
cwtl
ret
lahf
mov
mov
dec
dec
lahf
xor
mov
mov
mov
fildl
das
xchg
mov
sbb
cmpl
stc
cwtl
jno
push
cmp
insl
push
push
sbb
mov
mov
movl
cmp
mov
lret
repz
out
mov
pop
aaa
sti
push
sarb
gs
cmp
adc
ret
shlb
fst
jo
clc
loop
loopne
subb
sbb
mov
in
pop
shr
xor
xchg
clc
mov
push
xlat
mov
call
cltd
mov
xor
dec
in
dec
aaa
xor
shrb
lds
loop
or
push
in
pop
pop
aad
mov
push
inc
pop
jmp
add
push
mov
xor
pusha
mov
xor
movsl
mov
sbb
shlb
jg
in
push
test
dec
addr16
popf
inc
inc
xor
or
add
popf
dec
inc
fs
mov
sub
out
pop
mov
in
sub
xchg
lods
fwait
sub
adc
mov
lods
and
mov
jno
mov
aas
cmp
xor
jle
rcl
xchg
sbb
mov
xchg
adc
dec
jmp
cmpsb
push
push
addl
popf
mov
ds
lock
stos
lea
pop
insb
out
cmp
jnp
scas
sub
mov
jl
adc
gs
ja
pop
pop
sbb
in
test
lahf
and
or
dec
xchg
push
inc
sub
fisubrl
aad
xchg
xchg
mov
mov
fimuls
negl
xor
iret
rclb
mov
adc
mov
hlt
xchg
arpl
shrl
mov
jge
xchg
imul
repnz
aaa
inc
add
or
and
pop
aaa
ljmp
fildll
adc
scas
jbe
dec
and
push
inc
cmp
sbb
jbe
imul
pop
movsl
in
inc
push
add
xchg
and
lea
jno
sbb
mov
insl
fnstcw
test
shlb
loope
imul
imul
mov
and
pop
out
in
js
js
pop
mov
cmp
sub
lea
outsb
fs
les
sbbb
sbb
cli
add
jmp
adc
int
add
sub
push
pop
pop
xchg
dec
in
mov
or
lods
sub
aad
sahf
adc
jg
xor
dec
cmpb
mov
ljmp
cmp
and
push
and
sbb
arpl
das
test
iret
lret
outsl
rcll
cmp
arpl
sbb
sub
jg
enter
into
xor
std
stc
jb
push
jns
mov
push
mov
lods
pop
arpl
in
inc
out
insl
inc
cli
mov
push
cltd
cmp
mov
xor
mov
pop
scas
je
adc
mov
adc
loope
add
dec
lods
xchg
or
and
cmp
pop
cwtl
xlat
push
mov
inc
iret
shll
inc
mov
fldl
mov
dec
mov
test
inc
add
fsts
cltd
repnz
fcmovb
cs
in
lea
call
xchg
in
pop
mov
mov
jmp
xchg
dec
pop
pop
and
inc
je
pop
inc
arpl
sub
xor
sbb
or
test
test
add
pop
push
out
jle
daa
mov
jbe
mov
and
jp
adc
into
ror
mov
jbe
mov
jl
lock
sti
pop
mov
rorb
rorl
pusha
xlat
bound
dec
test
or
adc
mov
rcl
scas
mov
in
int
mov
push
call
sbb
out
add
aam
mov
ret
dec
push
orps
cwtl
mov
xchg
mov
inc
jb
xor
lods
jmp
js
xchg
cli
or
aas
sbb
mov
inc
cmovp
mov
mov
adc
xchg
orl
out
xchg
mov
sbb
aaa
xor
stos
sub
add
dec
cmc
jno
inc
cld
rdmsr
xor
fisttpll
xor
scas
mov
mov
imul
outsl
mov
inc
fnstsw
or
xlat
adc
sub
cmp
out
cmp
inc
mov
in
jno
xchg
cld
push
fsub
xchg
out
sub
arpl
lret
addr16
fidivrs
cmp
mov
out
leave
mov
popl
icebp
in
and
in
lcall
aam
xchg
jno
xor
adc
and
ljmp
mov
das
xor
stos
add
and
lcall
mov
imul
inc
fsubl
mov
pop
insl
fxch
inc
clc
push
xorb
or
cmp
lret
inc
push
jg
sub
lret
xchg
dec
imul
push
lds
js
mov
adcl
arpl
faddl
call
add
push
es
data16
mov
xor
insb
jae
scas
push
daa
xor
jne
daa
cmp
int
add
or
call
insl
in
sub
jns
subl
cmp
xlat
js
rcl
jl
xor
dec
mov
outsl
ds
out
movsl
jo
sub
lahf
gs
rsqrtps
sbb
inc
pop
add
mov
in
push
js
jle
pop
fisttps
jb
cmp
das
fistpll
je
push
adc
lahf
push
xchg
das
mov
push
add
movq
addb
push
xchg
sub
add
outsb
rcrl
fcoml
or
and
and
test
in
xchg
jg
xchg
push
mov
movsb
and
test
popf
ss
out
cmp
ljmp
lret
aas
shrl
out
mov
jne
xchg
dec
pushf
into
fwait
ret
repz
inc
xor
xor
outsl
lods
or
std
stc
sub
fs
push
adc
push
lods
push
push
xchg
mov
cmpsb
movsl
out
repz
xor
adc
cmp
or
or
jae
test
pop
test
sbbb
adc
wrmsr
imul
ds
xchg
lret
push
das
sbb
push
sbb
sub
roll
scas
and
mov
popf
jp
xchg
cmp
nop
imul
inc
dec
icebp
cwtl
inc
inc
adc
mov
mov
ret
std
mov
xor
pop
lret
mov
call
adc
sbb
adc
not
jmp
mov
into
inc
sti
jge
inc
jle
lds
sbb
jb
sub
je
jl
jecxz
test
std
add
cwtl
cmp
xchg
mov
cmp
mov
xor
scas
fldl
fsubrs
fimull
lds
pop
das
inc
aam
mov
ja
data16
movsl
cmc
rcll
add
dec
jg
out
cmpsl
sub
jecxz
pop
xchg
jo
jmp
push
in
inc
xorb
or
cmc
mov
jne
push
sub
push
aam
mov
adcl
xchg
pop
stc
cmp
notb
or
or
scas
xchg
xchg
sub
add
movsl
ficompl
loopne
mov
xchg
loopne
add
mov
fistpl
dec
outsb
ror
cmpsb
pop
pop
sub
stos
sbb
jmp
add
mov
loopne
clc
xor
xchg
xor
or
cmp
mov
enter
jae,pn
dec
dec
jae
inc
je
iret
or
jge
fwait
test
fcompl
mov
xchg
push
out
sbb
mov
add
jns
jge
in
or
out
arpl
or
dec
mov
jp
cmp
mov
ret
push
mov
mov
and
xchg
bound
fistps
xchg
mov
mov
add
mov
andl
pop
popf
or
cmpsl
push
outsb
leave
test
das
cmp
dec
jnp
shrl
scas
icebp
and
insl
adc
iret
mov
jg
movsb
jae,pt
add
jae
mov
adc
inc
insb
inc
inc
aam
cmp
xchg
mov
inc
mov
imul
cld
ficoms
movsl
lds
dec
in
rorb
lahf
repnz
sbb
sbb
or
jbe
jne
jge
adc
sbb
xchg
inc
or
stos
add
and
pop
pusha
cmp
push
cmpsb
xchg
mov
scas
xor
or
or
cmp
push
adc
jae
cmpsb
sbb
adc
jl
jl
es
sub
sarl
repz
jno
lods
cltd
jl
and
and
out
lock
pop
in
lahf
test
scas
test
dec
cmp
inc
cmpsb
inc
inc
jge
mov
xor
add
pop
push
les
xor
xchg
loope
ss
sub
movsb
sarb
and
adcb
aaa
imul
xchg
jno
add
mov
xor
dec
push
push
in
sbb
cmp
mov
pop
xchg
cmp
push
clc
jmp
faddl
ljmp
pop
add
test
filds
xor
jne
sub
xabort
rcrb
jg
inc
cs
sahf
popf
mov
and
xchg
lea
lret
inc
sarl
sub
rol
into
jle
fprem1
mov
jns
outsl
mov
insl
loop
outsl
mov
loopne
mov
adc
jbe
pop
lods
sub
in
and
mov
push
xor
or
aaa
cli
pop
mov
or
xor
xchg
imul
pop
in
fmuls
imul
lock
ljmp
sbb
movsl
inc
test
sub
add
sbb
out
mov
cmp
nop
rcll
dec
push
adc
aad
mov
int
rep
insb
pop
xor
test
call
xchg
xchg
push
pop
out
sub
adc
xchg
sbbl
cmp
inc
cltd
xchg
gs
mov
es
dec
and
sbb
jecxz
in
testb
std
stos
andl
hlt
mov
pop
mov
dec
addl
in
fldt
ljmp
in
lock
test
and
mov
cs
in
shl
shrl
fstl
call
dec
jp
pop
cmpsl
sub
mov
icebp
shrb
test
add
mov
into
mov
sti
stc
dec
mov
xchg
into
mov
sub
js
aam
ljmp
filds
push
fldl
adc
xchg
fnstsw
cmp
lahf
xchg
pop
je
aad
mov
out
pop
sbb
jp
push
mov
add
cltd
sub
add
imul
mov
or
sti
sub
shll
cmp
mov
stos
pop
jb
push
sub
dec
add
xorb
jg
dec
xor
fstl
and
idivb
mov
fs
je
push
pop
orl
inc
adc
or
or
imull
fadds
dec
lock
mov
out
sti
sbb
xchg
pop
jbe
mov
cli
xchg
popf
push
dec
sub
pop
or
mov
sarl
jmp
mov
mov
fisttpl
test
xchg
in
add
pusha
jmp
mov
jnp
add
jmp
pop
jmp
inc
push
jo
sbb
xor
ret
push
lods
in
stos
out
mov
inc
unpckhps
cmpb
pop
scas
push
scas
andnps
fstl
iret
call
movsb
ret
cs
fildl
inc
push
hlt
aas
jae
enter
pop
push
push
push
mov
fiaddl
ret
xchg
cltd
movsb
sbbl
mov
hlt
cltd
jg
lds
cmpsb
jle
mov
or
leave
pusha
cmpsb
call
arpl
push
lret
andb
rcrb
push
jmp
jae
pop
je
adc
fwait
int3
inc
dec
aam
les
push
mov
push
xor
and
and
rclb
pop
dec
and
cmpsb
sahf
sub
enter
daa
sub
daa
cmp
in
jno
scas
and
dec
imul
movsl
jle
mulb
mov
icebp
lahf
mov
xchg
shrl
sbb
add
inc
je
pop
pop
scas
inc
js
inc
ds
pop
adcl
sub
out
pop
cmp
xchg
outsb
lea
mov
push
xor
aaa
xor
dec
sbb
and
xor
insb
jnp
push
enter
arpl
pop
adc
nop
lcall
mov
stos
push
arpl
outsl
int3
orb
xor
fidivrs
jmp
ss
in
enter
pusha
push
testl
rcll
mov
movsb
push
sbb
std
and
cmc
subl
insl
loop
or
stc
xchg
stc
shlb
sbb
ret
data16
lods
aam
mov
out
mov
xor
sub
or
movsb
cmc
mov
xor
or
mov
imul
test
jns
je
push
xchg
mov
cmp
cltd
jmp
dec
movsl
dec
sub
paddsb
pop
test
push
scas
leave
aad
fwait
lcall
xchg
es
cmp
fdecstp
or
les
lock
repz
add
aaa
jmp
std
call
adc
adc
jecxz
jbe
inc
jmp
push
push
pop
inc
xor
mov
sub
aas
push
shlb
push
rorb
dec
and
mov
push
notb
mov
mov
push
jns
sbb
mov
fistpl
out
mov
and
iret
decb
mov
in
iret
and
sub
shll
lcall
jne
mov
mov
jl
cld
rcr
lret
and
pop
and
incl
pop
mov
and
movl
push
aam
test
ret
cld
iret
xor
std
pop
clc
into
push
pop
xchg
jl
mov
popa
ja
xchg
lods
inc
ret
test
pushf
dec
xchg
adc
inc
push
inc
xor
packuswb
ficomps
idivb
mov
popa
sahf
xchg
sub
add
dec
xchg
out
sbb
icebp
dec
pop
xorl
push
iret
cmp
add
fwait
dec
stos
lcall
fucomp
xor
sbb
or
ret
push
xorb
adc
ds
ja
into
scas
dec
xor
inc
mov
inc
daa
fwait
pop
in
dec
shll
test
insl
cmpsb
mov
dec
mov
sub
dec
jns
lret
fistpll
xchg
jmp
mov
sub
push
popl
jp
push
dec
mov
sbb
pop
and
fnstsw
mov
and
fistps
and
xchg
rcrb
xor
xor
popf
pop
ret
std
cmp
push
in
test
pop
xor
insb
cmp
adc
inc
jno
adc
sbb
pop
push
jmp
ret
je
inc
sbb
dec
jae
xor
inc
mov
aam
push
rclb
xchg
lock
sbb
repnz
imul
rcr
or
cmp
rcrl
repnz
roll
aad
hlt
mov
push
jbe
add
and
mov
jo
push
push
or
test
push
int3
xor
fwait
pop
repz
push
insb
leave
xchg
xor
jge
mov
and
sub
adc
push
movsb
cmpsb
and
in
loope
jmp
jb
jbe
sub
cmp
and
adc
jl
cmp
ds
jle
test
adc
dec
xchg
push
lahf
ret
push
xor
ficoml
cmovae
lahf
adc
pop
and
js
or
pop
pushf
ret
push
pop
xchg
loope
nop
sti
sub
or
orl
adc
xor
add
add
add
jns
xor
out
push
pop
pop
adc
push
mov
xchg
pop
xchg
cmp
xchg
sub
pop
mov
sub
call
xchg
sub
push
jg
sti
ds
or
mov
jb
data16
and
insl
ss
mov
outsl
cmp
testl
hlt
mov
mov
fmul
sbb
std
scas
into
inc
cs
cmc
dec
lea
xor
fsubrs
lods
mov
stc
dec
inc
push
movsl
pop
mov
adc
bound
lods
mov
insb
mov
or
imul
xchg
clc
inc
or
pop
out
cmpsl
adc
push
pop
in
pop
sub
adc
mov
adc
push
jbe
or
movsl
xchg
adc
cmpsb
sbb
sbb
subl
test
mov
lock
sti
int3
push
mov
aad
pusha
lret
nop
xchg
dec
push
sbb
inc
dec
mov
sub
push
addr16
repz
inc
das
cmp
xchg
clc
sbb
xchg
push
sbbl
cmpsl
adc
and
pop
jmp
sbb
inc
iret
xlat
pop
aas
notb
sub
dec
xorb
jecxz
jo
not
scas
mov
cwtl
push
jl
sbb
aas
xorl
daa
fisttpl
adc
lock
das
loop
sbb
mov
call
test
jecxz
movsb
insl
aad
iret
dec
jo
xor
sub
mov
outsb
mov
cld
lret
adc
mov
or
lock
rol
xchg
rcrb
sbbb
mov
push
gs
xchg
clc
or
xchg
mov
into
add
fstp
lods
stos
leave
add
pop
cmp
out
and
scas
xchg
pop
mov
rorl
mov
sbb
add
mov
std
xchg
xchg
je
cmp
repnz
stos
dec
sbb
movsl
rcl
int3
sti
pop
sub
cmc
stos
in
inc
push
jb
lret
add
mov
ud0
mov
or
jge
xor
sbb
mov
lds
xchg
jne
ja
inc
stc
dec
outsl
cmp
clc
jns
andl
dec
mov
scas
jne
mov
cmc
out
mov
mov
pusha
in
rcll
out
lea
or
mov
jp
insl
insl
mov
push
xor
test
out
xchg
in
jno
pusha
and
xor
mov
mov
mov
orl
push
divb
popf
jg
or
sub
frstor
je
fs
cmpsb
xchg
mov
scas
sbb
adc
cmc
mov
iret
mov
add
inc
and
pop
jae
filds
inc
mov
jl
push
push
stc
clc
fisubrl
dec
and
mov
inc
fidivrs
jne
sub
in
lds
stos
leave
dec
test
or
fdivrp
jbe
clc
in
jge
test
sbb
sbb
aaa
sti
ret
daa
or
cltd
add
or
int3
sbb
push
push
dec
pop
lea
fdiv
sub
shll
clc
mov
movsb
sub
stos
jo
movsb
sbb
cmp
insl
push
cmp
cmp
inc
jl
in
ds
inc
cmc
cmp
push
out
mov
out
call
and
push
add
pop
test
mov
stc
inc
push
mov
movb
test
pop
xchg
pop
fildl
int
cltd
jae
sub
cld
cmp
flds
outsb
push
test
adc
or
cmc
aas
pop
cmpb
sbb
je
add
out
xor
mov
fcmovbe
int
ret
jne
fadds
adc
dec
lcall
aas
faddl
loop
sub
pop
or
aad
sbb
or
xchg
jbe
int3
push
mov
cmpsl
mov
ss
cmp
or
test
mov
test
sub
rclb
cmp
cmc
cmovae
pop
sbb
xchg
inc
loop
in
stc
add
sahf
inc
adc
test
in
in
mov
mov
cli
mov
test
cmp
cltd
mov
push
xchg
gs
sub
pop
dec
lea
sbb
adc
fldl
xchg
cltd
pop
xchg
xlat
mov
cmp
push
cld
push
xlat
lret
sub
cltd
cmp
pop
ret
jnp
xor
int3
mov
mov
cmp
insl
mov
xlat
fldenv
les
xor
cmp
push
call
adc
pop
pop
xchg
add
repz
pushf
int3
insb
mov
cmp
xchg
inc
pop
les
aas
xchg
push
test
dec
mov
movsl
je
in
jecxz
pushf
hlt
notb
std
lahf
dec
std
cwtl
and
jg
mov
jg
or
lret
in
fstpt
fwait
mov
lock
or
rcrl
mov
gs
jae
adc
shrl
add
mov
pusha
add
mov
inc
push
imul
mov
lret
dec
mov
call
stos
js
xor
insl
dec
lcall
mov
ret
sbb
sub
sub
fnstsw
into
xchg
cli
fwait
cmc
ljmp
mov
push
movsl
in
pop
sub
out
test
xchg
mov
jne
lds
cltd
shrb
mov
fidivrs
xchg
ret
dec
imull
push
xor
shrl
int3
mov
xlat
les
push
adc
adc
xchg
lcall
xor
rorl
mov
xlat
enter
sbb
mov
in
ds
mov
int3
ja
cmp
dec
sbb
push
inc
shl
clc
or
pop
addr16
imul
repz
mov
jns
cmpsl
in
mov
jo
es
sub
dec
arpl
mov
shll
stc
in
mov
and
in
ds
pusha
mov
mov
add
rclb
test
popf
cmpsb
push
mov
push
xor
mov
insb
adc
jnp
mov
scas
jge
mov
aam
dec
adc
arpl
sbb
je
jmp
cmp
das
push
and
sarl
or
xor
pop
inc
shl
cmp
pusha
imul
sahf
rcl
sbb
stos
insl
imul
and
pop
pop
xor
negl
scas
repnz
or
lds
push
hlt
dec
adc
pop
lods
dec
jbe
bound
sbb
fmull
add
dec
dec
int3
push
adc
pop
push
jae
push
xor
and
xor
fwait
and
cmp
lea
cmpsb
daa
inc
push
in
scas
insb
ror
push
and
mov
mov
jl
sub
mov
movsl
xchg
test
add
add
jnp
cmp
stos
push
jnp
sbb
or
mov
pop
sar
out
js
dec
xor
sbb
pop
push
test
or
dec
ret
fbld
jnp
mov
ja
inc
push
shl
xchg
mov
push
dec
and
mov
into
sbb
imul
test
push
pusha
adc
sub
out
adc
nop
dec
popa
lcall
xchg
lods
fsubrl
sahf
out
pop
test
sbbb
jg
incb
jns
add
cld
jle
and
ss
out
cmp
xchg
test
mov
xchg
insb
push
rcrl
xchg
mov
pushf
sbb
dec
or
cli
cmc
and
ljmp
loop
sbb
cli
fs
jne
pushw
lods
mov
mov
aam
out
dec
pop
cli
jmp
fnsave
pop
cli
pop
cmp
push
cmp
repnz
and
sub
stos
push
loopne
call
insb
adc
jg
imul
ljmp
xchg
lcall
cmp
fdivrs
stc
int
mov
jl
sti
sub
cs
in
loopne
notl
push
nop
cmp
sub
out
sbb
repz
repz
ffreep
inc
dec
mov
call
daa
add
jno
adc
dec
pushf
ja
cwtl
jmp
outsb
mov
inc
sahf
iret
les
push
aas
xor
popf
jb
sbb
dec
add
std
je
rcrl
jecxz
or
negb
cld
std
inc
push
cwtl
loopne
mov
cltd
ficoml
andl
cmpsl
sbb
test
in
lock
add
mov
cld
push
mov
insb
jle
and
mov
jmp
lahf
dec
retw
lods
cmpsl
daa
sar
mov
sbb
jnp
push
pop
ret
inc
mov
and
rolb
pop
adc
push
rolb
iret
sub
dec
mov
push
jmp
push
fucom
aam
clc
jg
mov
ljmp
xchg
lods
adcl
out
jnp
jmp
mov
je
fsubrp
cltd
or
stos
mov
add
dec
or
test
jl
xchg
jo,pt
and
out
subb
stos
ret
sub
jle
and
add
pop
lock
sti
loope
xor
pop
arpl
cmp
cmpsl
mov
dec
lods
insb
mov
outsl
scas
mov
mov
dec
or
xchg
inc
bts
push
daa
or
dec
jl
bound
jns
mov
repnz
ja
dec
cwtl
mov
xchg
and
out
cwtl
aas
sub
inc
sub
xchg
jp
shlb
add
mov
sub
in
outsl
or
js
fcomip
push
push
xchg
aad
imul
xor
jl
jl
sbbl
test
addr16
and
or
scas
loopne
adc
andl
daa
imul
cld
adcl
cmp
push
jae
pop
push
inc
ret
or
lods
test
inc
dec
dec
cmp
adc
arpl
or
andb
enter
mov
push
aad
leave
cmp
pmuludq
stos
jbe
aas
inc
jge
out
push
sbb
mov
xchg
sub
insl
add
int3
icebp
push
out
pop
orb
xor
mov
cmp
cmp
dec
movsb
inc
mov
sahf
cmpsb
stos
loop
in
xchg
mov
jns
daa
cmp
insb
adc
or
les
orb
or
popf
outsl
push
movsl
lcall
lahf
pop
das
scas
push
stos
lea
push
inc
mov
xlat
dec
jmp
pop
mul
sahf
js
enter
sahf
cmp
pop
movsl
loope
movsl
clc
sub
pop
dec
cmp
cmp
adc
rcr
mov
dec
andb
sbb
out
jb
arpl
sub
out
pop
movhps
lcall
add
push
stos
add
mov
mov
dec
cmpb
jg
xchg
mov
stos
les
mov
out
ss
clc
mov
fmuls
testl
inc
shll
push
sbb
data16
popf
push
xor
jo
loop
mov
fs
sbb
in
data16
mov
jo
pop
mov
mov
push
jmp
cli
push
add
and
adc
cld
xchg
incb
fsubl
lea
pop
xchg
aad
mov
inc
inc
adc
push
mov
mov
and
pop
adcb
int3
scas
xlat
dec
inc
sbb
mov
xor
inc
sti
aad
or
dec
sub
stc
fisubs
les
les
repz
jnp
movb
lea
iret
push
push
pop
pop
insl
add
dec
pushf
and
popf
pop
shlb
lret
push
bound
shl
sub
sbb
js
clc
je
adc
negb
xchg
mov
mov
mov
jnp
cmp
fcomp
pop
movsb
push
mov
mov
mov
fldln2
lock
das
jg
mov
shll
shll
mov
insl
mov
frstor
mov
icebp
repz
lret
fcomi
lret
faddl
mulb
imul
das
aam
rclb
insl
sub
cmp
cmp
notb
pop
jl
or
sbb
mov
ss
ljmp
call
mov
dec
and
xor
push
scas
pop
decb
jecxz
pusha
add
xor
and
bound
outsl
sbb
test
arpl
jp
mov
or
add
mov
jmp
pop
pushf
mov
add
xchg
lcall
adc
or
out
insl
pop
in
mov
mov
loopne
mov
push
sub
sbb
dec
mov
add
ret
add
jne
lock
jb
cmpsb
out
push
stos
jmp
jne
jmp
dec
adc
push
xchg
and
int3
or
inc
xchg
jp
test
mov
cwtl
dec
sub
push
cmp
mov
data16
push
pop
cmpsl
xchg
test
push
jmp
pop
sbb
aas
inc
bound
jmp
jno,pn
and
inc
add
jp
xor
push
scas
inc
movsb
mov
adc
mov
pop
out
adc
inc
inc
cmp
mov
or
daa
xlat
jp
into
loope,pt
xchg
insl
xchg
dec
dec
cmp
mov
imul
pop
lds
pop
shrb
dec
repnz
out
je
mov
and
arpl
add
mov
clc
add
stc
mov
or
add
jp
fsubl
pop
scas
imul
mov
xor
out
scas
outsb
ja
and
mov
movsb
into
or
sbb
cmpsb
sub
ljmp
and
and
into
mov
dec
xchg
adc
shlb
movsl
mov
in
mov
jge
add
adc
leave
inc
add
addr16
push
stos
ret
fidivrl
push
les
sub
leave
xchg
cmp
test
rcrb
movb
cmp
test
xor
sub
push
data16
sub
andl
lcall
and
add
sub
mov
dec
adcb
mov
insl
scas
mov
sbb
aaa
and
addr16
or
inc
fadds
lahf
aas
testl
mov
rorl
mov
mov
pop
cmc
adc
outsl
fs
stc
sub
pop
rcll
adc
in
outsb
jno
lods
push
ret
mov
or
cmp
mov
xchg
cmp
jne
or
popl
push
aam
loopne
lds
cmpsb
mov
xchg
in
imul
ljmp
add
xchg
and
jle
pop
out
xlat
xchg
les
ffreep
mov
pushf
insl
movsb
sti
mov
mov
test
nop
repz
dec
mov
inc
cltd
or
or
les
cmp
movb
lea
lods
lea
push
pop
and
adc
ret
push
pushf
int
cmp
pop
jne
inc
inc
lods
adc
inc
cmp
jb
inc
jb
dec
inc
dec
out
mov
ja
std
mov
and
xchg
adc
push
xchg
mov
mov
dec
rcrb
fildl
das
mov
in
popf
mov
fwait
or
xchg
or
das
pop
xor
inc
movsl
ss
adc
xchg
shrb
out
push
jg
jno
dec
dec
pop
inc
inc
cmpsl
and
push
or
lret
cld
stos
sub
xchg
and
scas
ljmp
inc
mov
aam
jbe
ret
stos
mov
fnsave
arpl
cmc
pop
addr16
mov
xchg
ljmp
and
xchg
ja
cmpsb
push
mov
cmovb
mov
cltd
ja
aas
test
sbb
xchg
lahf
dec
fidivrl
xchg
loope
sbb
mov
lock
mov
push
in
outsl
xchg
add
cmp
sbb
leave
push
add
in
mov
mov
mov
mov
in
cmp
cmp
xchg
ljmp
aaa
aam
bnd
dec
inc
add
imul
or
jns
inc
and
xchg
je
dec
out
jae
sub
cmp
test
imul
mov
jle
mov
pop
ret
outsb
jle
mov
in
std
int3
pusha
lea
fbstp
pop
sbb
ret
pop
adc
sub
aas
popf
sbb
adcb
adc
cwtl
adc
shr
iret
insb
push
into
push
jnp
mov
xchg
push
test
jmp
iret
cmp
dec
ret
mov
repz
inc
push
scas
test
out
loope
enter
push
push
fsubrs
cltd
fiaddl
mov
fidivrl
jecxz
mov
jae
imul
faddp
fwait
pop
push
rorb
mov
std
cmp
leave
sub
hlt
sub
arpl
push
fidivrs
out
sbb
pop
jo
fwait
in
add
dec
pop
pop
fimuls
imul
mov
scas
dec
outsb
daa
and
ss
pop
les
cmpsb
mov
jo
fs
enter
daa
and
jmp
sbb
mov
add
les
jecxz
and
push
mov
lahf
pop
dec
pop
push
push
inc
jbe
and
push
fdivl
cmpsb
rcrb
pop
inc
push
lret
js
addb
push
loopne
loope
addr16
dec
cmp
stos
inc
outsb
ffreep
test
ja
pop
jno
jg
movl
xor
cli
dec
insb
push
imul
sub
pop
pop
or
cltd
push
push
pop
gs
fsubrl
jnp
sahf
iret
scas
jle
icebp
lret
scas
or
out
mov
mov
cld
xchg
test
dec
pushf
cmp
ret
test
push
shl
pop
mov
jne
into
mov
add
xor
pushf
mov
loop
add
stc
loope
mov
adc
mov
mov
mov
cli
test
pop
xor
mov
decb
jg
loopne
push
push
pop
lds
xchg
imul
iret
inc
xchg
jecxz
fistpl
inc
mov
xlat
scas
pop
sub
in
mov
pop
movsb
daa
sti
aaa
popa
loope
pop
rolb
into
push
jmp
flds
rol
push
cmpsb
jno
dec
test
lea
sbb
call
or
fstpl
dec
sub
dec
lret
js
pop
jmp
mov
pop
sbb
imul
pop
iret
aas
adc
jb
mov
dec
data16
cwtl
je
mov
or
mov
and
std
cmp
adc
data16
mov
mov
shrb
cmp
inc
xchg
mov
lahf
mov
sbb
jb
pop
insl
pop
aas
movsl
dec
push
fs
cmpsl
and
movsb
mov
mov
push
ss
mov
fimuls
mov
insl
repnz
mov
lret
rorl
ret
push
outsl
or
xor
iret
fstpl
enter
mov
mov
mov
ret
mov
adc
jne
gs
dec
add
cmp
repnz
xor
xchg
fimull
jle
test
adc
xchg
sbb
add
test
int
orl
nop
inc
and
mov
decl
fmuls
jge
sbb
pop
or
xor
mov
mov
cmpsb
pop
mov
mov
inc
addr16
in
cs
sub
push
or
jge
fwait
and
das
jne
or
mov
dec
mov
adc
das
bound
adc
in
mov
xchg
ret
movsb
iret
out
mov
or
sti
mov
pop
fwait
jp
or
mov
jbe
nop
jle
and
in
pop
stos
pusha
sub
pop
xchg
dec
mov
fcoms
inc
enter
dec
popf
inc
imul
sbb
out
dec
insb
mov
shlb
push
lock
cmp
mov
cwtl
mov
mov
inc
pop
jae
jae
inc
mov
lret
cmpb
and
push
int3
stos
cmc
fisubrl
mov
cli
pop
jp
into
or
imul
imul
sub
mov
push
mov
es
jne
push
jbe
and
mov
push
aaa
mov
jnp
add
data16
mov
mov
or
outsb
push
xor
lahf
cwtl
lods
scas
sub
dec
and
xor
in
mov
push
data16
xor
in
dec
clc
push
enter
daa
and
mov
mov
dec
jl
jbe
dec
jb
adc
push
xchg
inc
movsl
scas
sub
and
nop
gs
jl
pop
push
and
test
cmpsl
repnz
inc
push
or
pop
insb
in
js
mov
lret
push
scas
mov
or
mov
pop
cmp
hlt
mov
push
cs
shlb
in
dec
repz
xor
pop
push
push
insb
jne
int
lds
pop
mov
ficoml
push
adc
pop
nop/reserved
mov
sahf
jb
test
lret
jg
xor
mov
pop
pop
xchg
mov
and
and
lahf
adc
jge
testl
xor
mov
or
into
xchg
rcrl
push
test
loop
or
cwtl
js
fs
cmp
data16
xor
mov
das
out
fstpl
mov
add
arpl
daa
cmp
sub
or
bnd
rorl
dec
pop
in
pushf
adc
sbb
mov
int3
adc
dec
test
bound
mov
jge
je
add
xchg
mov
jb
jl
out
aad
mov
xor
nop
test
mov
inc
mov
js
les
jne
sbb
lret
and
es
mov
in
pop
xchg
pop
adc
and
pop
mov
in
inc
jno
push
jb
push
loop
ffree
push
je
lret
stc
jecxz
jne
mulb
mov
loop
ja
int3
push
mov
xchg
insl
hlt
mov
jns
cmp
aam
hlt
mov
dec
push
lock
sarl
sbb
dec
mov
out
jne
sub
rcrl
andb
negl
push
pop
jnp
and
dec
mov
js
mov
add
lret
sub
loope
xchg
add
and
cmp
mov
mov
jge
mov
mov
mov
push
ret
in
int3
push
mull
fnstsw
mov
xchg
xor
cmp
popa
sbb
and
jae
mov
inc
js
xor
add
sbb
fldl
lds
movsb
add
outsl
xchg
xchg
imul
pusha
or
fnsetpm(287
push
pop
cs
stos
jg
xor
inc
call
mov
pop
adcb
and
xor
pop
or
outsl
dec
xor
pop
mov
mov
les
pop
adc
ja
int3
fmuls
inc
ret
in
xor
xchg
sub
or
xor
cmpl
out
repz
mov
test
in
ds
xchg
adc
push
out
push
leave
sub
xor
jmp
addl
jp
aam
mov
mov
stos
popf
cmc
mov
stc
cmpb
adc
aam
pusha
ret
stos
test
jae
notl
mov
pop
xchg
pop
xchg
mov
mov
scas
popf
imul
adc
scas
in
insb
sub
insb
jnp
ret
insb
inc
jb
aaa
push
mov
notl
ret
in
xchg
mov
xchg
or
cwtl
fisubl
fcmovu
xchg
or
jns
imul
fimuls
adc
sarb
mov
mov
adc
hlt
ror
arpl
cmp
jge
jo
sbb
xchg
inc
aaa
jne
inc
or
inc
and
leave
mov
int3
popf
xchg
add
push
mov
jne
jo
mov
scas
or
and
std
push
cmp
push
outsl
aaa
mov
cmpsb
mov
xchg
xor
mov
dec
dec
out
daa
and
push
mov
vhaddps
sub
mov
mov
xchg
and
jae
push
test
test
jb
and
pop
mov
dec
js
mov
push
sti
imul
sub
and
in
dec
sub
out
test
dec
das
shlb
cmp
sbb
xchg
shll
mov
push
outsl
lock
int
ds
push
xor
pop
or
insb
push
mov
pop
int3
mov
sub
pusha
sahf
adc
mov
and
mov
mov
sbb
xchg
outsb
adc
jae
test
sub
ss
imul
cmp
testl
rorl
xor
stos
into
jns
inc
cmc
mov
jg
outsl
arpl
loop
dec
scas
stc
dec
aas
and
adc
dec
jnp
div
jmp
mov
mov
ljmp
cmp
les
or
int
fadds
dec
loopne
cmpsl
ficomps
fcoms
or
imul
orb
stos
mov
std
xlat
dec
cmp
daa
xor
cmp
add
in
fisttpll
cs
adc
test
mov
mov
hlt
les
div
jmp
in
dec
stc
call
call
or
jo
cmp
std
inc
mov
jmp
pop
inc
pop
pop
push
mov
inc
mov
xor
dec
push
inc
or
add
sub
shl
test
loope
cwtl
xchg
mov
add
dec
xchg
dec
out
sarl
mov
cmp
cmpsl
shll
mov
popf
lcall
lods
aam
es
inc
insl
es
mov
cmpsl
and
mov
dec
and
cld
sub
lret
cwtl
xor
and
xlat
fists
stos
and
pop
push
mov
mov
test
push
sub
ret
je
out
push
mov
test
out
xchg
je
test
je
add
add
mov
out
xchg
dec
and
rorb
push
fldl
imull
lods
cltd
sbb
jno
dec
push
mov
jg
dec
xchg
pop
dec
or
test
mov
xchg
sub
inc
jno
shll
mov
or
out
ss
jae
and
push
cmp
xor
dec
and
push
push
pop
xor
mov
and
push
lahf
mov
push
frstor
lret
push
aam
pop
mov
add
jmp
adc
mov
mov
inc
mov
pop
jmp
sub
scas
xchg
popa
mov
sbb
sub
jle
xorb
add
pusha
mov
lds
mov
jle
push
in
inc
nop
pusha
pop
jmp
cld
xchg
hlt
mov
xchg
sub
cmpl
sub
dec
push
mov
mov
in
dec
stos
icebp
shrl
adc
stos
xchg
ja
scas
iret
pop
mov
adc
es
push
cli
outsl
ret
xor
inc
jno
pop
jae
adc
or
adc
inc
lret
ficoml
negl
and
cmpsb
imul
fisubrs
stos
das
rcrb
pop
repnz
leave
popa
aad
or
push
jbe
pop
jl
pop
or
sbb
push
mov
xor
push
or
cmpsl
aam
pusha
rorl
pop
imul
out
xchg
lret
jo
cltd
subl
stc
vmwrite
jbe
cmpsb
cmp
push
enter
daa
and
icebp
imul
dec
push
inc
inc
ds
ret
mov
test
mov
push
shrl
cmp
movsb
adc
sbb
pop
mov
jmp
pop
xchg
pop
aad
scas
push
loope
cltd
cli
sub
pop
cmp
adc
outsb
or
ret
adc
or
mov
mov
mov
pop
mov
addr16
xchg
push
jb
ror
pushf
pop
sub
xchg
or
mov
lods
lcall
into
fsubrl
rcr
sahf
mov
mov
inc
jg
push
xchg
mov
outsb
nop
and
pusha
ret
ss
cli
cmp
repz
testl
mov
shll
sub
xchg
xchg
into
pop
cmp
pop
xor
push
outsl
inc
pop
mov
stc
push
stos
fldenv
sbb
mov
loop
repz
ljmp
mov
mov
cmp
xor
or
jp
sbb
sub
pop
and
out
imul
repz
sub
jge
and
icebp
cmp
mov
xlat
subl
sub
ds
in
dec
aas
pop
sti
inc
pop
repz
nop
pop
ret
push
int
inc
in
or
in
test
repz
inc
aad
cmp
cmpsl
call
mov
push
pop
in
jae
adc
pushf
jns
and
rcr
pop
add
inc
inc
enter
cmpsl
add
aas
out
pop
and
dec
lret
lds
and
imul
fldcw
cwtl
inc
testb
loope
sub
jle
fildl
or
add
addr16
fisubrl
cmpb
lret
cld
sub
sti
mov
pop
dec
dec
cmp
cmpsl
and
sub
es
cld
push
mov
dec
mov
inc
inc
pushf
mov
lret
shlb
mov
sub
mov
push
jge
pop
das
add
xchg
mov
lock
mov
mov
cmp
rclb
not
inc
movsbl
add
jno
cltd
push
mov
test
push
dec
je
xchg
add
rol
psraw
xchg
push
inc
sbb
xor
iret
pop
test
js
pop
aas
out
mov
dec
add
push
lret
pop
call
xor
mov
mov
fnsave
lcall
cmp
ja
jo
dec
mov
mov
or
inc
nop
fwait
scas
fildll
jne
push
sbb
mov
sub
outsb
jns
pop
push
in
push
notl
mov
fimuls
daa
push
andl
mov
and
rorb
push
and
pusha
stc
cmp
xchg
mov
pop
xchg
cmc
mov
add
cmp
popf
mov
push
mov
and
rorb
insb
incb
jnp
icebp
sub
lds
cmp
int
adc
mov
lcall
loopne
inc
jl
imul
mov
or
mov
inc
dec
lods
or
inc
ret
adc
iret
shr
cmp
lahf
ficoms
mov
or
cmp
mov
in
mov
jns
leave
push
push
inc
hlt
push
xchg
xchg
arpl
mov
cmc
jge
mov
sbb
stc
sahf
or
mov
xor
jae
jo
lcall
xor
mov
lcall
jp
cmp
cli
inc
push
movsb
in
dec
cmpsb
mov
cmp
inc
and
cmp
add
jae
jl
push
rorb
cmp
outsl
dec
dec
movsl
les
sbb
rcrb
push
pushf
sbb
test
or
testb
mov
fidivs
sahf
js
loope
pop
roll
push
push
aad
push
pushf
test
pop
xchg
cmp
inc
push
adc
jecxz
ret
in
or
out
push
mov
fildll
xor
sub
push
jne
mov
sub
cmp
or
and
ret
pop
out
sub
mov
test
popf
jg
or
mov
andl
xchg
cmp
in
dec
ss
int3
cmp
scas
and
lret
cltd
sarl
sbb
imul
cmp
addr16
outsl
and
popf
pusha
add
mov
jb
adc
adc
data16
loopne
lods
fimuls
add
cli
push
clc
and
call
jae
or
in
repz
pop
pusha
mov
loopne
dec
lods
pop
inc
push
push
imul
inc
cmpsb
xchg
out
clc
sbb
cmpsb
cld
xlat
ret
sub
cmc
adc
in
mov
inc
sti
repz
cld
cs
lcall
or
dec
gs
inc
clc
fimuls
sbb
or
sbbl
push
add
ja
dec
or
or
pop
lahf
aas
arpl
stos
dec
mov
and
aad
mov
push
pop
movsb
popa
dec
inc
dec
adc
ret
aas
call
adc
sub
je
ja
jecxz
ret
imulb
test
jae
std
inc
and
aam
movl
xor
mov
lock
push
push
das
mov
fimull
mov
lret
jg
rorl
mov
insl
hlt
inc
xor
inc
test
cmpsl
and
stc
icebp
std
hlt
cmp
xorl
mov
dec
pop
ret
jb
rolb
pop
loop
in
pushf
mov
sub
push
inc
cmpl
sbb
outsl
xchg
bnd
popa
pop
or
lods
outsb
push
push
mov
pushf
add
push
rcrl
add
and
cmp
mov
jne
xchg
sub
repz
xchg
mov
lods
scas
scas
shl
test
das
sbb
stos
dec
jo
push
sub
sub
call
xor
fisttpll
inc
xor
add
mov
lahf
loope
mov
fdivl
mov
dec
mov
cmp
into
loope
faddl
dec
mov
jbe
sub
insb
mov
mov
test
push
jns
mov
popa
xchg
pushl
sti
sub
and
add
fistpll
push
add
sub
sub
xor
gs
mov
pusha
xchg
mov
add
jmp
rolb
adcl
push
rcll
popf
fisubrs
notb
and
stos
xlat
test
inc
pop
lock
imul
jmp
adc
dec
cmp
subl
scas
jae
out
mov
mov
or
or
dec
inc
enter
clc
call
mov
imul
leave
fdivp
std
rol
xchg
cmp
ror
sarl
pushf
lret
jge
mov
mov
lods
bound
cld
loope
stos
in
mov
pop
mov
adc
add
cmp
pop
leave
mov
push
dec
inc
cmp
jo
ljmp
in
xchg
movsb
adc
push
repz
cmpsb
aas
fidivl
in
out
sbb
inc
aaa
test
cmp
divb
cmp
add
repz
xchg
ret
lret
jmp
pop
lahf
clc
push
sbb
test
shrl
rcl
insl
dec
pop
or
mov
mov
stos
shrl
insl
loope
ret
mov
leave
outsb
into
inc
rcll
or
dec
lods
andb
sub
add
fldcw
dec
movl
or
mov
pop
mov
lcall
add
lea
inc
xor
test
jno
movsb
stos
cmc
mov
xchg
enter
sbb
push
or
and
lcall
cmc
cmp
fsubrs
mov
addl
mov
sbb
adc
into
and
and
ret
outsl
add
loop
cmp
stc
je
outsb
adc
mov
lods
shll
lahf
xchg
inc
out
lods
idiv
add
xor
mov
cmp
insl
gs
mov
loopne
cmp
fwait
adc
mov
add
dec
mov
cmp
ja
add
xchg
mov
push
and
sti
mov
xor
das
xchg
fcoml
les
outsl
inc
or
mov
push
cmp
pop
repz
push
sbb
pop
cmp
dec
jg
jl
movl
push
in
iret
imul
inc
xlat
or
cmp
inc
fst
adc
sub
jb
mov
mov
add
jecxz
sbb
adc
jle
test
xchg
inc
sti
mov
int
sbbl
pop
pop
mov
dec
shll
mov
inc
cltd
mov
ret
and
mov
add
insl
fstpt
shll
aas
loopne
aam
jl
lods
jle
lret
in
inc
mov
dec
ror
mov
or
sub
dec
aam
rorl
push
add
fstpl
outsb
ret
clc
push
test
xchg
xor
sub
je
leave
lods
fstps
dec
out
std
cmp
and
aas
push
lods
jnp
int
add
xchg
mov
outsl
dec
scas
mov
mov
push
dec
inc
or
add
sub
pop
fisttpl
aaa
sbb
ficompl
xchg
stos
cmp
push
sar
dec
add
ljmp
mov
loope
xor
movsb
add
arpl
cmpb
mov
ja
and
dec
movsb
push
inc
pop
or
or
inc
test
xchg
push
mov
repnz
xchg
mov
int3
cli
out
outsl
mov
bound
enter
jae
fadd
popf
xchg
dec
pop
adc
shl
sub
sbb
jp
sub
mov
mov
mov
pusha
das
sbb
jmp
jmp
mov
imul
add
and
push
mov
jmp
and
jae
aam
into
jnp
xor
scas
clc
push
push
push
into
adc
stc
cmp
xchg
mov
and
fnstenv
inc
flds
sahf
xchg
or
test
inc
inc
add
stos
ret
lods
lock
sbb
popa
mov
pop
leave
popa
ficomps
pop
nop
shr
jl
sti
loopne
repnz
dec
dec
leave
hlt
daa
mov
in
test
call
jge
xor
aaa
jno
movsl
or
add
int3
dec
sbb
pop
clc
outsb
sub
dec
mov
scas
xchg
xchg
push
lods
mov
fwait
or
cmpsb
ret
in
into
xor
enter
daa
pop
push
jno
mov
fwait
jno
mov
jl
mov
dec
popf
jno
ds
push
movsl
rclb
inc
and
push
xor
inc
cmp
test
sahf
mov
fs
adc
or
js
mov
push
dec
enter
jae
maskmovq
cmp
pusha
jae
xor
inc
adc
cltd
repnz
cmp
push
sbb
jmp
xor
mov
push
jnp
addr16
or
sub
lods
pop
pop
adc
lcall
mov
sub
or
sahf
mov
mov
jg
push
inc
mov
sub
mov
aam
and
sahf
in
add
mov
add
inc
arpl
push
sub
jl
into
add
sahf
fbstp
sbb
jg
loop
inc
cmp
sub
cs
das
adcl
add
jne
lcall
cli
mov
pop
xor
jno
or
pop
sar
pop
ret
hlt
mov
loopne
inc
inc
pop
jg
stos
adc
arpl
sbb
add
push
xchg
sbb
movsb
cwtl
call
sub
pushf
mov
mov
sti
push
cmp
aad
mov
dec
dec
and
fldl
shll
dec
xchg
les
lret
pop
loope
lea
cs
push
pop
rcrb
loop
pop
in
pushf
jp
jle
mov
inc
pop
ljmp
inc
clc
pop
sarb
mov
jb
xchg
dec
xor
or
data16
or
mov
add
and
fwait
dec
mov
aas
adc
lock
fisttpl
pusha
dec
mov
xlat
outsb
lock
push
mov
jns
ret
out
shr
mov
mov
ret
dec
cmp
cmpsl
push
xlat
cmc
mov
stos
push
jl
xlat
pushf
lret
sbb
inc
add
push
scas
and
daa
lods
in
shrb
jp
aam
pop
or
push
ficoml
inc
jecxz
clc
xchg
adc
xchg
jo
stos
ljmp
xchg
sbbb
push
outsb
add
flds
inc
js
cltd
clc
in
test
lcall
aad
dec
cmpsl
push
push
test
loope
xchg
cmp
adc
pop
test
fwait
stos
sub
js
jae
cltd
add
fbstp
xchg
push
adc
cs
lds
cltd
adc
out
or
mov
mov
fldl
insl
sbb
test
cmp
int
ja
fnstenv
mov
mov
and
dec
leave
mov
ret
pop
imul
popf
shlb
sub
sbb
xchg
addr16
mov
mov
sbb
das
mov
imul
in
mov
test
push
add
jmp
push
out
cmp
push
cmpsb
movsl
popf
sub
push
mov
loopne
jmp
and
dec
insb
aas
adc
nop
scas
pop
push
xor
rcrb
iret
shrb
mov
inc
popf
cmc
lcall
add
and
add
ficompl
dec
xchg
add
sbbl
xchg
imul
push
fidivrs
rcll
rolb
daa
repnz
or
hlt
aaa
mov
arpl
push
in
jbe
push
jge
pop
push
sbb
lea
xor
inc
or
xchg
int3
xor
mov
push
adc
or
mov
mov
scas
data16
sbb
adc
cmp
jle
movsb
es
mov
in
mov
enter
daa
push
mov
push
jno
test
dec
or
cmp
fcoms
lock
mov
cmpsl
test
imul
daa
cmp
pop
push
repz
cmp
pop
nop
or
push
push
adc
xchg
jge
sub
add
cmp
and
adc
je
dec
orb
xchg
jl
add
stos
outsl
xor
and
sub
xorl
mov
xor
and
test
les
loop
daa
mov
out
xlat
mov
jo
mov
repz
and
in
ss
sub
cmp
fists
lret
mov
add
jb
repnz
ror
call
addr16
outsl
mov
mov
stc
loop
jge
sub
adc
ret
xchg
clc
mov
lods
inc
cli
jmp
push
push
cmp
loope,pn
dec
mov
lret
gs
sbb
loopne
pop
dec
pop
sahf
push
mov
sub
adc
sbb
dec
xchg
cmp
sbb
fildll
xlat
jg
push
sub
mov
hlt
push
xor
add
cs
pop
fwait
nop
lret
push
call
inc
xor
xchg
les
test
aam
imul
mov
sub
pop
mov
out
pushf
and
jno
pop
lea
addl
mov
push
and
cmp
dec
cmpsl
push
mov
jecxz
or
idiv
into
int3
or
movsl
xor
lods
das
testl
mov
gs
mov
mov
adc
push
imul
and
cwtl
call
cmp
xchg
es
stos
mov
dec
xor
shlb
push
dec
mov
cmpb
lret
ret
ds
mov
pop
out
cmp
fisubrs
pop
inc
sarb
cmp
pop
add
dec
cmp
inc
push
mov
clc
int
xchg
mov
push
popa
mov
mov
jno
xchg
scas
test
xor
cltd
das
cmp
mov
xchg
lcall
pop
xchg
xchg
or
mov
in
fstpl
mov
push
cmp
add
cli
xchg
push
pushl
imul
xor
mov
movsl
jb
xor
jecxz
mov
jmp
jecxz
pop
mov
out
dec
mov
fmull
mov
dec
pop
and
mov
mov
mov
bound
mov
in
jns
xchg
in
vcvtpd2dq
pushl
or
jbe
jge
imul
or
mov
jg
mov
in
aad
pusha
gs
sub
cmpsb
push
jmp
and
addl
fsts
sbb
push
mov
pop
xchg
xor
mov
insb
stos
add
jnp
sbbb
loope
mov
cmp
xchg
iret
xor
ret
sahf
pop
fisttpll
jae
mov
ja
mov
test
jge
inc
inc
out
ficoml
xchg
leave
xchg
pop
cmc
xchg
sbb
push
adc
loopne
test
lds
rol
and
mov
xchg
idivb
leave
loop
ds
adcb
arpl
push
pop
jbe
shlb
mov
mov
out
hlt
or
jb
int3
pop
push
sbbl
sbb
repz
rdmsr
jo
stc
inc
scas
inc
mov
and
hlt
inc
movsb
mov
mov
loopne
loope
enter
pushf
mov
enter
daa
sbb
cli
scas
jno
jle
jl
xchg
pushf
dec
jnp
or
sti
call
xchg
and
add
call
and
xor
mov
ljmp
js
sbb
iret
jae
in
or
sub
in
cmp
outsb
idiv
cmp
push
mov
rorb
das
sbbb
sbb
movsb
add
adc
xor
in
push
adcl
sub
xor
mov
push
adc
faddl
add
out
addb
lods
jg
scas
xchg
pusha
pop
test
and
jo
mov
lahf
fcomps
stos
dec
lret
pop
rcrl
push
sbbb
cmc
arpl
outsl
popf
stos
sti
loop
sar
cltd
pop
lret
fs
mov
adc
mull
das
and
jbe
xor
nop
out
out
jb
cli
sbb
xchg
xor
cmp
mov
mov
call
pop
pop
mov
mov
sub
xchg
js
sti
add
sbb
outsb
xlat
mov
pop
sbb
pop
daa
cmp
dec
subl
jecxz
aad
icebp
cld
nop
cmpsb
out
dec
loope
popl
xchg
ja
clc
dec
or
lods
dec
cli
repz
xor
aaa
inc
push
pop
imul
pop
or
sbb
insb
roll
push
cmp
movsb
sahf
aas
or
fimuls
stos
sub
jecxz
gs
cmp
std
jae
adc
jmp
enter
out
ret
sbbl
xchg
mov
pop
sub
leave
ja
das
xor
lods
loope
out
push
and
popf
rolw
mov
insl
nop
xchg
dec
das
sub
cmpsl
sbb
mov
pop
dec
jbe
sub
daa
sarb
fs
mov
or
rclb
cmp
push
sub
ret
into
and
dec
add
clc
or
outsb
ljmp
mov
mov
sub
fstl
nop
xor
add
ficomps
nop
xorb
and
dec
jne
xlat
test
jo
xchg
sbb
out
cmp
inc
pop
stos
or
int3
push
mov
xchg
stos
add
daa
ret
mov
pop
xor
sub
sub
int
cmp
shll
jge
aas
inc
in
mov
fwait
cltd
loope
dec
cmp
adc
or
or
das
bound
lods
outsl
jns
test
in
push
sbb
dec
mov
pop
or
jmp
addr16
cmp
ss
popa
mov
and
mov
out
push
lcall
push
add
add
push
xchg
out
dec
jmp
in
sub
jg
push
fldl
push
popf
jp
xchg
pop
insl
in
mov
movsl
insb
adc
into
aam
and
push
sub
lods
iret
nop
sbb
ret
enter
addb
jae
fisttps
jecxz
or
cmc
jae
inc
call
xchg
mov
dec
sbb
xchg
imul
sbb
xorl
cmp
std
bnd
mov
hlt
int
adc
or
sub
test
dec
sbb
mov
scas
cmp
mov
int3
or
pop
push
push
jmp
jo
jnp
scas
and
pop
and
rcll
push
movsb
cmp
mov
das
cmp
cmpsb
dec
test
in
or
enter
daa
sbb
mov
jno
fwait
mov
sbb
test
ds
xor
cmp
out
push
mov
pushf
jae
ljmp
cmpsl
lods
aam
pop
movsb
insl
test
pop
pop
pop
push
js
push
jnp
loope
movl
cmp
nop
jb
pop
iret
adc
lcall
xorb
sbb
jne
add
lret
inc
and
test
in
test
xchg
sub
inc
lcall
jmp
mov
adc
add
sahf
sahf
mov
lahf
andb
push
mov
sbb
xlat
in
sbb
subb
and
aas
mov
into
mov
sbb
sbb
jge
add
testb
das
pop
pop
mov
ficomps
mov
hlt
into
scas
nop
push
cmc
sub
xor
jl
std
loop
test
stc
push
sahf
xchg
mov
arpl
xchg
lods
pop
popa
lcall
mov
push
xor
js
cmp
and
or
outsb
cmp
jnp
or
and
pop
fdivrl
imul
adc
imul
or
fcmovbe
pop
xchg
mov
std
js
push
xlat
std
or
mov
lret
sti
pop
insl
shll
dec
nop
adcl
aaa
fldcw
inc
pop
les
leave
int3
fs
mov
call
sbbl
push
pop
adc
mov
jnp
cld
jmp
aad
pop
shll
test
xor
test
gs
jl
dec
xchg
mov
lahf
jecxz
add
pop
std
sbb
sbbl
xchg
popa
xchg
xorl
add
dec
in
mov
test
lock
fsubrs
adc
mov
sahf
sbb
and
divl
rcl
mov
es
xchg
mov
sub
cmpsl
sbb
cmp
xor
cld
pop
out
or
mov
jae
and
adc
lock
test
shlb
mov
dec
js
aam
idiv
ret
pop
dec
adcb
jp
mov
lcall
out
ljmp
loopne
test
out
mov
xchg
cmp
mov
add
jl
cwtd
popf
fnstenv
mov
jne
xchg
push
ds
adc
dec
sbb
xchg
push
rcll
jns
stos
mul
sub
pop
dec
jmp
je
or
xor
add
pop
add
or
jno
mov
outsl
or
pop
xor
das
dec
jo
adc
push
or
ss
dec
and
push
rcrl
pop
lcall
lock
cmp
jp
mov
int
mov
or
mov
or
mov
pop
cld
mov
pop
jne
jle
ficoml
or
pusha
fwait
iret
fildll
sub
imul
loop
mov
push
fs
popf
leave
hlt
stos
push
lea
insb
adcb
mov
sub
test
push
push
outsl
repnz
adc
insl
mov
out
ret
push
dec
sti
mov
dec
jae
inc
jno
out
xchg
or
jo
push
inc
inc
pushf
jnp
ja
jp
or
jg
rorl
lret
fisubs
jmp
rclb
mov
cmp
leave
sarb
hlt
sbb
and
sbb
jbe
test
out
xor
add
insl
or
add
pop
mov
push
mov
arpl
scas
add
jno
lret
rcll
movsb
and
jle
mov
into
nop
aas
in
push
imul
sbb
xchg
jl
lret
jecxz
pop
adc
ds
jno
movsl
out
mov
call
push
mov
cwtl
test
lret
inc
and
sarb
lret
add
pop
dec
jne
push
sahf
and
mov
and
outsb
mov
pop
in
rolb
dec
mov
sbb
addr16
add
fmuls
xchg
cmp
bndldx
das
adcb
add
lret
pop
loop
mov
repz
out
or
sahf
sub
clc
addl
mov
insl
mov
cwtl
mov
dec
mov
aas
push
cmp
cmp
adc
movsb
idivl
xchg
lret
mov
jle
mov
cmpb
shlb
xchg
hlt
xor
mov
jl
pop
out
loop
xchg
test
fs
adc
mov
mov
mov
cli
cmpb
xor
shll
xchg
insl
stos
jmp
stos
je
push
mov
adc
imul
in
xchg
add
adc
xlat
cmp
cmp
ror
push
mov
xor
jb
cs
aad
iret
cmc
nop
pop
dec
in
dec
lahf
mov
pop
fldenv
test
arpl
addr16
lea
mov
mov
add
adc
fs
dec
lods
sahf
pop
jbe
mov
inc
fs
inc
sbbb
jmp
dec
or
xlat
je
lods
mov
test
sar
shll
cwtl
pop
cmp
dec
in
mov
xor
dec
jmp
jl
dec
cs
mov
mov
lock
pop
das
repz
test
and
movsl
adc
and
mov
jnp
and
jnp
mov
pop
lret
sbbl
adc
shrb
pop
and
scas
jl
pop
mov
add
sub
pop
aam
rcrl
in
mov
dec
fstp
lahf
xor
jle
cmc
xchg
insb
and
push
popa
out
shrb
jge
out
out
xor
xchg
test
or
repz
xorps
push
add
sbb
cmp
mov
dec
inc
fsubrl
xchg
inc
sbb
inc
xor
ljmp
stos
out
call
add
dec
scas
pop
decl
xchg
cltd
xor
out
or
mov
mov
lods
or
out
add
pushf
ljmp
adc
inc
aam
not
clc
dec
add
dec
mov
aas
cmp
bound
and
in
add
out
mov
sub
add
fsubl
or
pushf
and
mov
jle
iret
out
adc
pusha
ss
aad
mov
xchg
xchg
mov
dec
jmp
xorb
push
arpl
jb
enter
lods
scas
rclb
test
fwait
and
xchg
jnp
mov
scas
out
or
vmovups
xor
cmc
ret
mov
sub
inc
leave
xor
lret
out
mov
or
jmp
xor
mov
setno
insl
sbb
insl
imul
xchg
faddp
out
lds
adc
repnz
aad
inc
in
hlt
arpl
sahf
jbe
mov
jge
lock
mov
pop
xlat
or
mov
int3
loopne
outsl
pop
jecxz
jne
pushf
pop
inc
xor
sub
adc
cmp
jnp
push
int
sub
push
lods
ss
daa
sbb
mov
jno
inc
xchg
jl
movsb
cmpsl
dec
enter
mov
mov
lahf
mov
pop
push
popa
and
mov
pop
sbb
test
xor
pop
bnd
js
int
pop
mov
shrb
jbe
loope
mov
dec
cmp
daa
outsb
and
adc
loopne
cwtl
popl
nop
mov
add
cmp
fbstp
dec
int
xchg
add
stos
and
xorb
mov
and
faddl
xchg
fidivs
mov
sbb
cld
jg
aad
mov
adc
mov
mov
push
push
ljmp
lret
out
in
idiv
jae
lret
enter
ljmp
adc
into
je
jne
mov
fstps
cmp
or
mov
fs
std
adc
mov
pop
lods
sub
movsb
mov
fcompl
mov
mov
leave
das
or
imul
add
aad
or
lret
gs
mov
loop
sbb
rcll
push
inc
imul
add
dec
adc
pop
jns
cmp
xchg
mov
sub
lods
mov
mov
test
pop
aad
aam
nop
aaa
and
inc
jge
adc
into
ja
repz
ret
lea
ret
inc
inc
movl
pop
mov
jmp
dec
adc
sbb
xchg
inc
jg
or
out
push
jb
mov
addl
jecxz
adc
testb
std
push
xchg
lods
mov
cmc
jo
jns
add
rcrl
jp
cld
mov
sub
das
shl
pop
mov
or
jns
cwtl
cmpsb
mov
es
sbb
push
jmp
cmpsl
sbb
cmpsb
icebp
fiadds
cld
scas
lahf
ds
jg
mov
jns
repz
ret
ror
dec
leave
sub
add
ret
jnp
push
push
xchg
mov
mov
mov
call
push
popa
decb
ljmp
out
out
push
out
xchg
lret
movsl
push
into
pop
int
mov
xor
mov
push
jl
mov
lea
mov
xchg
roll
sbb
mov
xor
mov
std
pushf
add
jo
lods
aam
xor
inc
and
cmp
jb
push
into
fnstenv
xor
xor
add
sahf
dec
push
mov
inc
test
rcrb
repz
jne
test
out
test
adc
jns
push
icebp
in
fdivl
out
movsl
ss
dec
xor
xchg
push
mov
xor
mov
cmp
fnstcw
mov
dec
pusha
shll
mov
push
pop
test
mov
les
call
push
jmp
cld
adc
subb
jnp
dec
stc
scas
dec
inc
gs
std
cld
ja
movsl
adc
lods
arpl
ret
rcrl
jns
inc
aam
push
jae
inc
in
mov
or
iretw
bound
popa
std
fcmovu
mov
mov
imul
pop
lds
and
mov
stos
mov
loope
pop
leave
mov
sarl
jbe
in
lcall
clc
bound
jmp
mov
jae
pop
add
mov
pop
adc
mov
jg
jg
out
inc
ret
jp
scas
sarl
and
mov
frstor
lock
sbb
cmp
cmp
enter
daa
sbb
cmp
fidivrs
push
dec
aaa
jl
ds
movsl
cld
inc
cmpsl
and
ss
test
pusha
mov
inc
inc
sti
jb
mulb
mov
shll
js
arpl
lret
sti
js
mov
lds
xchg
mov
cmp
movsb
and
sti
inc
adc
mov
aad
subb
mov
xor
stos
dec
int
clc
test
and
ja
lcall
xor
mov
and
int
stos
sahf
jae
js
inc
mov
xor
insl
jg
xchg
mov
mov
gs
jl
and
add
xchg
cmp
cmp
xchg
fdiv
mov
xchg
xchg
shl
or
adc
cmc
jg
or
aas
popf
jge
sbb
clc
loop
fnstsw
stc
jne
mov
loopne
int3
adc
sbb
mov
daa
mov
out
mov
cli
call
shll
dec
push
or
cmpsb
das
leave
cmpsb
gs
cld
mov
sahf
add
adc
call
adc
jp
add
dec
jae
orl
xlat
mov
or
mov
or
fdivr
imul
aad
and
pop
dec
addb
xchg
call
flds
cmc
insl
push
mov
call
add
repnz
xchg
pushf
jl
cs
test
inc
inc
xchg
lcall
jb
data16
dec
cli
addr16
je
or
sarb
inc
jae
std
pcmpeqb
mov
or
cmpl
jo
test
leave
shll
xor
or
push
mov
and
xlat
rol
adc
es
mov
insl
sub
insl
dec
sbb
sbb
push
stos
insb
icebp
mov
xchg
cld
fnstenv
std
mov
orb
mov
loope
clc
rcrb
cmp
ret
or
push
pop
shll
hlt
movsl
mov
ljmp
popa
adc
sti
cmp
mov
cmp
test
jnp
add
xchg
mov
mov
or
mov
dec
adc
xrelease
sbb
rcrl
outsl
add
inc
or
lods
add
push
lea
add
or
xchg
mov
mov
cmp
mov
fs
adc
aaa
dec
dec
mov
inc
stos
xchg
or
pop
fwait
push
ficoms
dec
leave
cmp
jne
jae
mov
lock
mov
lahf
jns
roll
movsl
push
out
ja
add
sub
cli
inc
cwtl
addr16
sarb
shr
mov
fcomps
mov
stos
gs
jle
xchg
sub
and
in
pusha
insb
cmpsl
mov
xchg
xor
fsubrp
dec
sub
xchg
sbb
mov
jmp
in
push
mov
pop
divb
and
pop
insb
insb
rorl
jnp
lods
dec
scas
lods
in
push
inc
cwtl
jae
addb
iret
or
inc
sbb
sti
pop
lock
jge
filds
jae
push
icebp
inc
out
rcr
or
loope
lahf
inc
rorb
xchg
push
ja
sbb
movsb
xor
orb
sub
cmpsl
dec
iret
mov
xor
xor
aad
arpl
jbe
xchg
fidivrl
adc
xor
shll
stos
mov
sbb
inc
xchg
imul
inc
testb
test
adc
jecxz
ret
arpl
test
fidivrl
pop
push
or
cmpsb
push
outsb
scas
in
pop
sbb
enter
daa
sbb
xchg
cmp
pop
cmc
jno
jbe
jl
rcr
dec
cmpsb
push
xchg
stos
jecxz
movsl
add
mov
lahf
lock
into
push
pop
pop
int3
test
sub
rclb
test
js
lea
pop
or
xor
and
sub
mov
enter
xchg
xchg
sbb
inc
and
cmpb
stos
add
cli
inc
xor
mov
int
and
mov
add
les
mov
sahf
push
fcomp
test
mov
fnstcw
pop
cmpsl
mov
fstps
mov
xchg
jp
insb
and
fiaddl
out
sub
adc
movsb
lret
push
rorl
ret
sbb
pop
into
cmp
jae
inc
push
outsb
xor
pop
adc
enter
sub
mov
xchg
adc
add
lods
stc
nop
xchg
mov
lcall
pop
jg
ja
push
cmp
add
or
add
push
and
and
xchg
je
pop
xor
adc
pop
adc
mov
jecxz
lret
sbb
inc
lahf
mov
sub
xor
das
in
jbe
cmpsl
sti
sbb
cs
jae
aad
or
dec
mov
mov
or
or
rolb
stos
lea
dec
sbb
sahf
shlb
pop
ljmp
pushf
daa
mov
jmp
int
pop
pop
aam
inc
push
test
inc
mov
mov
jb
jno
dec
jno
loopne
lahf
ss
iret
sub
std
mov
insb
cwtl
nop
add
mov
mov
dec
lods
daa
outsb
fcmovnu
dec
mov
dec
mov
cmp
nop
std
mov
nop
cmp
mov
jp
xchg
movsl
sbb
adc
test
sbb
jbe
push
xchg
mov
mov
mov
jge
pop
sub
dec
and
addb
add
add
sub
int3
aam
pop
outsl
ret
cltd
xchg
sub
push
xchg
fstl
inc
clc
das
sbb
sub
pop
ljmp
dec
lods
xor
xor
out
pop
sub
pop
push
mov
pcmpeqb
inc
add
dec
hlt
cltd
jns
imul
test
dec
js
pop
test
jae
xchg
nop
sub
out
inc
sbb
stos
mov
iret
push
call
loop
add
leave
xor
mov
outsl
test
jle
mov
jnp
ss
pop
mov
aaa
dec
cmp
xor
or
or
data16
test
imul
mov
addr16
bound
pop
pop
jns
clc
jp
xor
test
sub
cmc
dec
ret
addr16
stc
jp
xchg
dec
mov
lahf
ds
sbb
aaa
in
mov
mov
xchg
add
icebp
xchg
xchg
jecxz
jnp
pop
xchg
push
lods
imul
mov
cltd
bound
and
add
jnp
into
subb
xchg
push
adc
jo
imul
ret
pop
pop
daa
mov
inc
ljmp
inc
repnz
mov
pop
lock
inc
aas
lods
fiaddl
add
jge
xchg
imul
test
rol
xor
xchg
mov
lods
adc
hlt
inc
sub
arpl
ja
lods
mov
jge
js
sbb
sti
push
aaa
imul
add
cmp
cmp
rclb
push
inc
pusha
cmc
xor
xor
scas
jg
outsb
and
sbb
cmp
sub
movsb
repz
push
mov
dec
push
in
push
test
enter
daa
pop
iret
inc
cmp
adc
jno
inc
and
mov
adc
icebp
movsl
or
into
shl
lahf
xadd
xchg
test
mulb
popa
insb
cmp
pop
addr16
pop
pop
dec
xchg
cs
xor
loope
ja
sub
xchg
sarl
jle
or
xor
std
push
shlb
adc
shrl
jecxz
dec
pop
ret
jl
push
xchg
or
int
addr16
sub
push
into
pop
decl
ljmp
ss
stos
push
outsl
sahf
mov
cli
subb
lock
and
mov
pop
xchg
mov
and
jnp
sub
sbb
lds
cld
test
cmp
in
lret
cmp
mov
sbb
fcomip
or
pop
push
outsl
xlat
mov
pop
add
stc
jecxz
add
add
sbb
mov
mov
imul
scas
cli
dec
js
xor
adc
adc
jne
dec
gs
or
aam
aaa
pop
ja
ret
adc
lds
imul
pop
add
lods
xor
cmp
xlat
cmp
sub
mov
loope
xor
leave
call
pop
aad
cmp
nop
enter
sbb
ret
inc
mov
pushf
flds
sub
out
xchg
and
lahf
sbb
jae
or
sbb
pop
or
loopne
adc
out
pushf
sarb
jmp
mov
pop
add
stos
inc
xchg
push
out
inc
shlb
aas
ret
mov
mov
jo
call
mov
jecxz
and
std
pop
inc
and
dec
sbb
push
sub
subl
xchg
mov
aaa
mov
lock
arpl
outsl
imul
jg
mov
cmp
ss
inc
pop
insl
cli
and
adc
jecxz
push
pop
popa
mov
arpl
cld
das
pop
pop
lret
int3
lods
lret
xchg
lods
and
sbb
lcall
lcall
sub
push
push
ficomps
fnstsw
sub
push
inc
xchg
push
shl
popa
inc
lcall
push
mov
addr16
mov
aad
psrlq
push
add
shlb
cltd
mov
add
mov
sbb
xchg
cmp
ds
sbb
int3
jg
fisttpll
push
mov
mov
mov
inc
decl
js
or
sbb
adcb
mov
stos
mov
ja
rol
dec
das
sahf
loopne
outsb
mov
or
inc
cltd
fwait
mov
das
dec
mov
repnz
popf
fsubr
inc
call
pop
jns
rorb
mov
jmp
out
movsb
aam
push
pop
or
out
addr16
int
push
mov
mov
mov
in
jne
pusha
mov
loope
xchg
fadds
mov
push
push
push
outsl
or
popf
movsl
out
mov
fcoms
stos
push
sub
sub
insb
xchg
test
jnp
mov
scas
jae
aas
push
sar
xchg
ss
cwtl
ret
pop
pop
pop
add
jo
pop
ds
or
xlat
pop
hlt
inc
mov
or
fcomps
sub
imul
ficoms
adc
fdivs
fstpl
repnz
xchg
leave
and
inc
hlt
pop
arpl
and
jge
ret
pop
sbb
adc
add
int3
mov
pop
lahf
outsb
or
sub
xchg
xor
cltd
sub
inc
and
sbb
movsb
jle
arpl
mov
pop
fwait
add
in
sbb
push
cmp
movsb
cmp
pop
jno
cmp
jl
dec
inc
dec
test
ds
and
cwtl
lahf
cs
push
lods
ljmp
sarl
aas
xchg
js
sahf
jmp
push
fdiv
loope
push
mov
cmp
mov
das
rorb
popl
flds
dec
mov
xorb
inc
filds
xchg
imul
xchg
pop
fildl
jle
scas
lcall
pop
fdivl
or
pop
gs
test
mov
addb
leave
mov
jb
mov
mov
pushf
ss
jmp
cmp
mov
cmp
mull
lret
jg
mov
and
into
add
cmc
aam
push
xor
insl
outsl
mov
nop
loop
in
stc
lcall
adc
jmp
out
mov
ret
out
dec
aam
orl
cmp
out
or
out
cwtl
stos
jp
xor
loopne
out
mov
inc
leave
adc
push
pop
imul
cmp
add
push
sbb
mov
stos
xlat
ja
cltd
sub
stos
shll
dec
xor
sti
js
sbb
and
roll
mov
mov
mov
jns
aam
cli
fwait
scas
rep
hlt
mov
jbe
out
lea
or
jge
mov
adc
xchg
pushf
jge
movsb
jmp
pusha
test
fistpl
inc
jmp
iret
aas
bound
push
dec
pop
lock
je
mov
notb
jns
std
add
cmp
pop
push
inc
cmpl
int
xchg
mov
xlat
lret
repnz
dec
mov
push
mov
hlt
int3
shll
dec
push
insl
loope
fisttpl
xchg
inc
cmpsl
adc
mov
icebp
cmp
lret
cmp
push
mov
xchg
inc
mov
shll
sub
rcrb
in
ret
mov
xchg
push
mov
adc
dec
xchg
cmpsl
sbb
call
lods
pop
inc
and
out
fnstsw
cs
out
mov
jl
rdmsr
outsl
scas
add
test
test
and
mov
push
loopne
xchg
data16
inc
icebp
inc
test
sbb
xchg
inc
rcrl
fldenv
xchg
adc
add
shlb
ljmp
repz
stc
clc
lock
mov
mov
add
rcrb
les
dec
and
sbb
movsl
push
dec
jb
insl
jne
xchg
mov
and
lret
jbe
pop
in
jle
xchg
add
fisttps
and
addr16
inc
jp
xor
mov
mov
cmp
jle
in
in
scas
jns
cmp
out
inc
xchg
stos
sub
jmp
jns
jnp
jnp
out
push
xor
sub
aam
inc
push
pop
insl
stos
enter
inc
mov
insb
add
inc
scas
mov
push
sbb
adcb
dec
pop
iret
sub
jl
xchg
es
inc
add
jae
cmp
clc
bound
push
popa
insl
inc
cmp
out
fcoml
shrl
and
lds
sub
clc
bound
xor
and
lcall
arpl
shlb
sub
icebp
mov
fs
push
aaa
out
aas
or
nop
sbb
or
jbe
ja
mov
push
or
js
hlt
cmp
cmp
jns
cmp
movsb
or
push
cmpsb
loopne
mov
aam
test
adc
or
jno
push
cmp
cmp
ds
pop
movsl
sbb
and
adc
dec
pop
ljmp
lock
mov
inc
jg
je
add
rcrb
out
js
test
cmp
push
aaa
sub
sub
rorl
jb
mov
ljmp
sbb
xor
xchg
sbb
adc
xor
push
std
push
cltd
ds
jns
add
pop
std
mov
lcall
push
fcompl
sbb
mov
mov
sbbb
jg
mov
lock
rcrl
and
or
dec
fdivs
xchg
mov
add
fwait
and
rorl
sbb
jecxz
jge
fwait
or
outsl
xchg
cli
aam
cmp
xchg
mov
and
mov
out
xor
xor
jo
cmp
sbb
mov
push
repz
mov
or
xchg
adc
adc
jns
add
sub
adc
mov
repnz
xlat
mov
std
sub
xchg
shr
mov
push
sti
daa
cmp
mov
xchg
aad
lret
or
fsts
mov
les
adc
jns
mov
mov
pop
add
pushf
sub
jmp
shl
pop
dec
int
inc
mov
in
xor
add
fisttpll
gs
je
mov
jecxz
aad
notb
ret
std
stos
sahf
and
mov
adc
fidivs
mov
je
mov
cmp
mov
sub
adc
lahf
cli
dec
and
lcall
mov
int
dec
pop
hlt
mov
and
icebp
adc
stc
lret
stos
cli
mov
and
push
mov
pusha
shr
lret
or
ret
fcoms
enter
loopne
pop
xchg
out
xchg
ljmp
insl
adc
xchg
cs
pop
push
adc
enter
outsl
xchg
cltd
push
sub
mov
ss
xchg
aam
test
int3
pusha
xchg
inc
sbb
das
mov
pop
xor
jae
xorb
rorl
cmp
in
sti
test
enter
dec
lods
mov
aam
sbb
cmp
mov
or
mov
push
cmpsl
clc
ja
fisttpll
adc
stc
mov
enter
adc
rorb
flds
jg
int
fadd
sub
pop
mov
lret
jns
jns
ds
sar
xchg
mov
jne
out
sub
out
mov
jp
adc
mov
iret
cli
mov
data16
jle
xchg
push
in
dec
scas
pusha
fmuls
fists
sub
jg
inc
cmp
or
popf
mov
lods
mov
push
mov
into
and
inc
insb
insl
xchg
inc
jnp
lret
mov
cmp
jge
pusha
in
lods
adc
mov
iret
mov
ret
mov
inc
or
movsl
jge
inc
sti
shr
daa
or
push
mov
test
sbb
add
imul
cltd
and
cmp
adc
mov
xorb
adc
mov
and
lea
jbe
ret
adc
add
sbb
xlat
aaa
aaa
cmpsb
adc
or
leave
mov
int3
bound
pop
std
testb
cmp
xor
dec
pop
mov
sbb
popa
and
cmc
xor
sti
jmp
movsb
xchg
insb
xor
sbb
in
mov
sti
out
daa
adc
sbb
mov
xchg
push
jl
sbb
bound
ds
movsl
pop
stos
push
lahf
insb
rclb
test
mov
inc
push
xchg
xchg
lds
pop
fdiv
sbb
insl
pop
push
rcl
push
inc
cmp
jl
shrb
dec
cmp
stos
sbb
add
pop
jbe
orb
cmp
mov
push
xor
test
sub
cmp
and
fmull
pop
cmp
sahf
mov
push
les
sbb
pop
mov
cmp
and
mov
add
sub
repnz
lret
enter
stos
mov
lahf
push
into
pop
adc
bound
pop
outsl
je
pop
loop
inc
mov
or
js
xchg
mov
adc
lahf
test
movsb
mov
das
mov
repz
iret
cli
out
push
xor
mov
cmp
push
je
sahf
fldenv
fiadds
gs
lahf
cmp
movsl
pushf
movsl
pop
aam
jnp
push
xchg
aas
adc
or
xchg
sahf
add
sub
insb
inc
sub
out
xor
in
and
inc
sti
or
aad
sub
pop
mov
dec
cmp
inc
out
xchg
sbb
out
les
cmpsb
shl
or
pusha
jl
adc
mov
ret
jnp
pop
mov
add
push
mov
xchg
jmp
add
pop
jmp
cld
inc
sub
mov
jb
cmpsb
testl
das
or
sbb
push
and
jl
pushf
mov
cmp
mov
dec
sbb
dec
pop
ret
xor
xchg
roll
mov
pop
pop
lock
ss
or
dec
mov
push
xchg
and
xchg
push
rorl
arpl
and
clc
xchg
dec
add
insb
cmpsl
adc
icebp
call
nop
sbb
mov
mov
pop
outsl
pop
jl
enter
xlat
sub
mov
cmp
jmp
push
daa
and
clc
sbb
shr
xor
popa
mov
lods
dec
mov
mov
mov
and
xor
test
add
popf
hlt
dec
dec
adc
mov
xchg
lret
into
rorl
nop
pop
fsubrp
dec
stos
outsl
cwtl
xchg
push
je
xchg
add
or
xor
mov
xor
lret
test
xchg
sub
or
inc
ja
test
dec
or
dec
inc
xor
dec
or
aad
fwait
inc
push
mov
jecxz
jne
stc
and
jecxz
adc
pop
pop
jns
repnz
xchg
add
jns
in
xlat
sub
loope
shll
jecxz
jp
test
mov
daa
and
lock
xor
dec
and
hlt
dec
fbld
lahf
xchg
push
push
cwtl
jmp
pmuludq
mov
out
mov
xchg
cmp
stos
scas
nop
push
and
jbe
fmul
movsb
jnp
std
shrb
jl
adc
fcoml
js
mov
inc
push
mov
dec
inc
push
js
mov
push
cmp
xchg
fimull
iret
sbb
sub
xor
cmp
stc
lds
xchg
shrb
clc
mov
shll
leave
mov
mov
arpl
mov
jge
sti
jno
in
aaa
gs
or
inc
jbe
dec
and
popa
push
rol
das
xor
stos
xchg
in
scas
sti
jne
and
sbb
mov
mov
dec
out
cmpsb
out
push
in
mov
mov
daa
adc
adc
jno
repnz
jl
mov
out
pop
mov
movsl
es
and
sbb
add
nop
test
and
cltd
mov
out
pop
add
enter
jg
imul
loope
mov
adc
cmp
js
outsb
aad
adc
add
sbb
or
jns
sub
push
lahf
inc
or
inc
cmc
sub
pop
int3
in
sti
imul
pushf
pop
ds
ja
cmp
sub
lods
sahf
inc
filds
test
mov
jg
data16
mov
mov
add
and
js
mov
stos
sub
rcr
call
add
sarl
mov
jb
sbb
dec
into
test
sarb
popa
aad
outsl
push
jbe
loop
ret
mov
cs
adc
pop
pop
data16
sub
pop
ss
repnz
xor
notl
or
and
loopne
xchg
int3
pop
repz
adc
xor
jne
jge
loope
fs
cltd
xlat
out
sbb
push
sub
push
testl
cs
xlat
jg
lret
nop
xor
jne
xchg
dec
push
inc
add
les
test
pop
jg
lods
lea
shr
add
aas
add
aaa
fcoml
insl
dec
sbbb
insb
pop
mov
inc
cmp
push
aas
aas
aad
jb
mov
dec
les
je
add
jecxz
lcall
stc
mov
cwtl
aaa
cmp
mov
push
jg
add
mov
fcmovnb
pop
mov
mov
xor
lock
ja
das
jmp
pusha
mov
or
loope
rcrl
sbb
pop
iret
dec
std
insl
xchg
cmpsl
adc
cld
icebp
mov
sahf
fs
mov
mov
stos
jbe
mov
fwait
ror
rorb
or
aam
js
ret
lods
loopne
ljmp
clc
push
or
ljmp
pop
lods
dec
add
mov
push
jle
xchg
mov
call
roll
daa
fnsave
test
cs
mov
fs
xchg
inc
or
cmp
jbe
iret
shll
mov
stos
pop
sbbl
add
and
incl
hlt
rdmsr
repnz
or
fucom
xor
mov
mov
lret
mov
sub
ja
clc
dec
dec
sti
xor
cmp
sahf
add
dec
sbb
sub
inc
add
ret
vcvtps2udq
jmp
outsb
out
cli
inc
sub
fcompl
and
xchg
cmpsl
jp
out
nop
mov
mov
mov
jle
leave
cmp
dec
mov
pusha
push
jae
filds
pop
repz
fiaddl
xor
jnp
popa
popf
add
adc
aam
jnp
and
cmp
test
insb
inc
rcr
jnp
repnz
scas
inc
aam
out
outsl
adc
inc
jl
mov
pop
cmp
inc
and
jae
int
inc
add
xor
ret
loopne
inc
mov
int3
xor
aam
cmp
and
cmpsl
rorb
mov
es
icebp
leave
js
hlt
mov
xchg
xorb
mov
sbb
jno
or
push
xor
rcrb
leave
pop
pop
insl
push
mov
pushf
xor
add
mov
push
cmp
inc
movsb
stos
pop
notl
mov
out
in
mov
xchg
enter
daa
adc
and
jno
ja
jl
xor
jp
jl
xor
aad
addr16
stos
loopne
push
stc
icebp
aaa
test
in
push
cmp
sub
jl
dec
push
rcrl
inc
xor
scas
sbb
test
mov
stos
stos
shrl
cmp
sub
imul
jle
lahf
xorb
sbbl
test
fdivs
push
sbb
int
xchg
mov
pop
jp
mov
push
into
push
fcompl
nop
sub
inc
sahf
call
xchg
mov
js
push
inc
xorl
into
je
outsb
add
and
icebp
bound
insb
sub
cmp
mov
xchg
cld
lret
mov
adc
mov
into
mov
cmc
lock
lds
mov
mov
sahf
stc
jbe
out
lods
cli
adc
into
data16
daa
xor
arpl
xlat
mov
pusha
out
cld
mov
xor
movsb
push
or
and
fldenv
imul
adc
mov
adc
sub
add
add
xchg
or
sahf
pop
xlat
jae
inc
sub
add
mov
clc
add
lods
cs
repz
packsswb
divb
ret
aam
fsts
and
es
rep
or
movsl
lea
push
jnp
jns
mov
adc
cli
addr16
sub
push
pop
xor
inc
cmp
pop
aas
fdivp
adc
stc
loope
cmp
push
jecxz
loop
negb
loope
mov
xor
mov
sbb
adc
or
in
repnz
push
mov
lcall
fwait
mov
mov
lock
in
int3
sub
pusha
insl
jge
sub
mov
mov
xchg
pop
and
push
cmpl
or
data16
mov
mov
in
jb
repnz
jmp
push
lods
inc
fnstsw
imul
xchg
mov
popa
sbb
cmpsl
pop
lods
mov
sub
imul
rclb
fistps
scas
in
lods
add
bound
cltd
ret
push
add
popa
ret
push
mov
loop
inc
test
pop
flds
sub
in
sar
mov
stos
dec
jge,pn
mov
icebp
lds
ds
jmp
add
cmp
xchg
mov
or
pop
sbb
ja
int3
mov
out
sbb
add
mov
jle
rclb
mov
xchg
pop
out
mov
rol
push
dec
aaa
in
pusha
mov
out
mov
sub
xlat
sahf
push
addr16
out
jp
ljmp
mov
decb
ss
dec
in
jp
pusha
test
dec
dec
xchg
test
adc
push
addr16
ds
push
popf
daa
mov
push
adc
mov
and
pushf
jnp
lods
jns
bound
push
xor
rcrb
sahf
mov
or
or
adc
xchg
inc
add
dec
or
xor
inc
cmp
aaa
xchg
outsl
loope
sbb
jl
imul
mov
sbbb
jnp
call
mov
jns
mov
jbe
test
push
push
jne
mov
xor
out
jge
xchg
repnz
xchg
aaa
jecxz
jo
or
int3
and
lods
pop
mov
push
push
xchg
lods
hlt
xor
pusha
cmp
lds
mov
pop
movsb
xor
jno
cmpsb
in
stc
out
in
jo
jmp
cmc
in
cmpsb
daa
adc
aas
jno
and
jl
adcl
ds
dec
inc
movsl
xor
lea
jo
pop
lahf
leave
mov
iret
test
mov
pop
sub
push
xchg
jg
push
mov
sbb
ret
mov
push
lods
sub
shr
sub
push
inc
cmp
mov
adc
xchg
loop
frstor
sbbb
sbb
xor
cmp
push
movsl
adc
int
adc
sub
cmpsb
xor
stc
xor
add
push
and
repnz
inc
cs
mov
push
test
push
or
add
and
mov
jge
mov
push
mov
data16
and
lods
add
scas
push
xchg
cmp
pop
dec
aas
divl
cmc
js
lods
imulb
mov
jne
sbb
inc
sbb
mov
xor
mov
outsl
adc
xchg
loop
pop
mov
cmp
adc
enter
sub
out
jmp
out
repnz
sub
xor
xchg
cmp
and
dec
incb
dec
gs
in
loopne
mov
pop
xor
adc
push
out
imul
mov
stos
xchg
pop
movsl
out
mov
stc
cmp
mov
fldcw
dec
sbb
mov
arpl
out
jecxz
mov
aad
cwtl
mov
dec
push
sbb
div
jns
pop
movb
movsb
call
clc
enter
lcall
aam
mov
pop
aam
ja
mov
icebp
es
jge
and
mov
mov
cmp
negb
mov
inc
or
ret
mov
sbb
dec
sbb
add
mov
mov
insl
das
test
mov
lds
js
sarl
out
scas
dec
and
dec
repz
jp
adc
icebp
insl
ret
xor
sbb
les
xor
sbb
mov
nop
push
shlb
sbb
ret
adcb
frstor
clc
int3
ja
xchg
loop
xor
mov
popa
int
jne
push
cmpsl
xchg
mov
int3
sbb
lret
sub
addb
sbb
cltd
cli
add
adc
jg
or
scas
xchg
dec
dec
dec
call
xchg
xchg
mov
rcll
lods
pop
ffreep
je
cmp
popf
push
pop
push
jae
inc
push
nop
add
inc
mov
xor
push
jb
fbstp
mov
push
add
mov
cmp
imul
mov
push
or
fistl
dec
loope
mov
stc
push
mov
add
out
andb
pop
inc
cmp
jmp
mov
out
fisttpll
mov
mov
addr16
test
cltd
xchg
fdivl
mov
inc
mov
iret
stos
in
cmpsl
inc
pusha
inc
lods
inc
ffreep
jno
xchg
lret
jmp
jo
jnp
inc
mov
cmp
sti
push
lret
push
push
enter
dec
clc
and
pop
xchg
jnp
sub
lds
push
jl
adc
dec
iret
add
mov
test
push
inc
aaa
rolb
in
pop
icebp
repz
mov
pop
fisubrl
in
xchg
leave
dec
sbb
mov
cmp
and
bnd
sarb
mov
int3
jg
leave
in
subl
push
mov
jge
xorl
movsl
sbb
mov
push
or
mov
add
mov
sahf
pop
mov
adc
in
pushf
jp
mov
dec
mov
sbb
bound
xlat
cmp
shl
push
jecxz
mull
push
jb
enter
daa
adc
cmp
jno
in
jl
mov
aam
ret
movsl
cmp
and
and
push
lahf
sub
test
inc
dec
xchg
rorl
fstpt
scas
jne
add
push
mov
fcoms
push
mov
cmp
js
test
shrb
jge
cmp
ret
stos
push
sbb
sbb
xor
fwait
or
int
jns
sub
mov
js
lcallw
jl
mov
sub
inc
sahf
cs
lahf
test
or
xchg
add
cli
mov
sti
mov
push
push
and
stos
jge
repnz
adc
fcomps
lret
mov
lret
mov
mov
xor
fmul
push
daa
sub
jle
push
xor
subb
fsub
pusha
jae
stc
in
push
fs
bound
pop
xor
fsubrs
dec
adc
out
insb
enter
shll
das
lds
jp
or
xor
push
sub
ret
inc
loopne
out
pop
push
in
adc
jle
lcall
loop
push
sbb
sbb
mov
sub
call
jmp
sti
xchg
bnd
ja
ret
aad
test
lds
cld
inc
cmp
jnp
ret
rclb
dec
scas
inc
mov
in
lea
stos
call
ja
leave
pop
sbbb
jb
xor
jl
pop
ja
roll
das
inc
lea
jb
sbb
sub
je
push
dec
mulb
sbb
lea
negl
dec
add
je
push
pushf
jge
imul
lock
xor
in
repnz
push
ret
mov
cwtl
insl
dec
mov
dec
out
jp
cmpsl
invd
push
mov
inc
mov
ljmp
std
dec
and
pop
mov
ret
rorb
pop
das
sub
pop
mov
push
jmp
push
xor
jecxz
mov
mov
std
pop
dec
popa
in
adc
sbb
xchg
xchg
push
dec
push
pop
or
ret
cmp
pusha
or
cltd
xor
pop
das
xor
xchg
mov
ret
add
sbb
outsl
lds
push
stos
sub
outsl
push
add
mov
add
jmp
sbb
or
sub
sub
mov
xchg
mov
add
ja
decl
or
add
push
fwait
cld
loopne
dec
les
pop
mov
sbb
pop
mov
bound
sub
nop
xchg
ds
out
jl
sub
int
sbb
outsl
mov
mov
mov
xchg
mov
in
cmp
pusha
fbld
xchg
rcll
std
cmp
xchg
cmp
mov
push
les
cmp
ss
mov
xchg
push
sub
lret
insb
test
jnp
ljmp
push
ret
mov
cli
iret
arpl
mov
fbld
inc
inc
imul
pop
pop
or
xor
faddl
sub
fcmovu
std
mov
sbb
fwait
mov
pop
dec
xor
enter
mov
stos
rcrb
or
pop
inc
pop
leave
fs
cmp
arpl
pop
pop
jbe
in
movsl
jge
mov
iret
aaa
popa
fcmovnb
or
jno
add
test
pop
call
sub
mov
xchg
jo
ss
scas
ja
enter
lahf
cmp
out
push
xor
loope
ds
jns
jmp
iret
daa
cmova
mov
ficomps
dec
lea
ds
das
movsl
inc
aam
and
mov
jb
nop
test
dec
cmp
inc
fnop
test
pop
lahf
pop
aas
js
or
pop
push
and
out
filds
mov
stos
dec
outsb
popa
sub
aaa
rorb
repnz
fwait
jnp
subb
sbb
mov
int
les
push
stos
mov
int
ret
repz
or
push
sarl
mov
and
test
xor
jg
in
loop
repnz
sub
ss
roll
divl
pop
loopne
dec
xchg
lahf
rcr
add
dec
bswap
xor
or
int
xor
popf
sbb
fwait
dec
jnp
dec
pop
ficoms
data16
xor
dec
lods
sbb
mov
pusha
out
push
cli
out
xor
xor
sbb
push
and
lea
gs
xor
lods
sub
outsl
mov
xchg
ljmp
shl
add
inc
icebp
sbb
push
insb
sti
xlat
xor
xor
mov
cmp
pop
sti
inc
xchg
xor
adc
pop
nop
mov
clc
stos
inc
dec
mov
fsqrt
sbb
les
popa
repz
addr16
mov
fstl
pop
call
mulb
pop
xor
jmp
add
jle
ficomps
jnp
inc
int
lds
imul
mov
sti
lcall
push
push
inc
mul
mov
std
xchg
push
sti
cwtl
and
imul
out
cmpsl
mov
jg
out
dec
push
cmc
mov
aam
lock
inc
das
addr16
js
ud1
faddl
and
pop
push
es
call
dec
jmp
out
mov
sbb
lret
inc
inc
push
mov
mov
mov
pop
pop
mov
fnclex
shrl
xlat
mov
jb
mov
push
fnsave
xor
xchg
pusha
push
add
jo
xlat
popa
sti
xchg
mov
mov
xchg
xorl
fdivrs
loope
aaa
cmp
bswap
xor
add
repz
push
xlat
push
mov
out
xrelease
push
test
sbb
xchg
repnz
inc
addr16
sar
push
dec
pop
xor
int
push
mov
aas
arpl
sbb
xor
sub
xor
mov
mov
mov
mov
mov
push
ja
pop
ret
or
lods
or
add
fwait
sub
ret
pusha
in
jne
inc
jbe
cli
pop
mov
bound
push
das
in
mov
gs
nop
inc
sub
enter
outsb
jnp
jp
adc
mov
cli
hlt
mov
add
sub
addr16
rcrl
insb
stos
jmp
push
mov
push
xchg
popf
pushf
sarl
fs
in
dec
and
pop
scas
insb
out
cmp
jnp
jno
scas
mov
mov
push
lods
pop
iret
ret
ret
push
pop
push
fiaddl
sbb
pushf
popl
shll
scas
mov
fimull
push
ss
imul
imul
shlb
sub
jb
hlt
leave
fistpl
sub
out
enter
scas
jbe
pop
scas
jge
sub
sbb
pop
mov
in
popf
add
jb
pop
lock
push
inc
mov
xor
jno
mov
push
in
in
and
jmp
movsb
sub
pop
cmpsb
jne
xor
and
adc
daa
push
call
sahf
jno
repz
sbb
cli
pop
or
movsl
dec
mov
xchg
inc
cmp
test
sbb
push
inc
push
aad
pop
movb
pop
cmpb
loope
xlat
sub
jnp
cmp
push
dec
adc
and
xchg
jl
xor
add
cmpsb
add
push
xor
mov
int
lock
into
pop
jbe
or
sub
fmull
inc
sub
jae
sahf
je
bound
sbb
inc
jg
fsubrs
out
iret
mov
mov
and
jbe
ss
idivb
popl
movsb
lret
pop
shll
mov
mov
or
or
pop
xor
sub
loop
inc
mov
fnstenv
mov
mov
lods
fistps
inc
mov
cli
sbb
xor
fisttpll
cmp
mov
or
mov
out
imul
pop
mov
dec
adc
add
es
adc
pop
xor
lods
subl
sbb
popl
xor
mov
movsb
pop
stos
sti
lock
test
aad
mov
dec
jb
movsl
inc
popa
mov
cmp
push
movsb
es
jbe
mov
lea
call
jne
rcrb
xchg
adc
sub
pushf
aad
cmpsb
jmp
push
jns
mov
pop
adc
inc
mov
pop
mov
jb
push
rorl
mov
je
std
aaa
jecxz
stos
xor
std
cmp
enter
shll
fnstsw
xor
test
sbb
xor
mov
cmc
adc
push
in
das
inc
xlat
loopne
or
sarl
sbb
out
shrl
xchg
es
repz
insl
sbb
fwait
cmpsl
or
lret
pop
icebp
repnz
mov
loop
mov
mov
cltd
inc
push
and
mov
repz
ss
xchg
shrb
jmp
dec
jmp
das
push
cmp
fldz
inc
clc
jge
mov
lahf
inc
xor
popa
adc
xchg
lods
pop
rorl
mov
cmc
cmpsb
mov
adc
sub
xchg
cltd
lahf
loopne
test
cld
enter
daa
dec
jle
subl
cmpsl
sbb
cmp
rcll
test
loopne
push
or
jne
lret
dec
add
lock
xchg
dec
mov
xor
pop
mov
mov
inc
sbb
insl
or
dec
mov
insb
and
mov
mov
lock
mov
rcll
pop
shl
jns
mov
xchg
fdivrl
sbb
notl
dec
sub
ret
data16
insl
mov
xchg
mov
sub
mov
outsl
jne
jle
mov
pusha
adc
lock
inc
mov
jmp
sarl
push
push
dec
sub
ret
js
mov
psubw
stos
pusha
pop
inc
and
adc
insb
pop
push
pushf
scas
out
fisttpll
adc
ja
iret
and
cli
ret
daa
pop
dec
inc
hlt
inc
pop
mov
jae
mov
sub
sub
inc
xor
dec
sbb
sbb
or
fimuls
ret
ffree
xchg
jbe
rcl
in
sub
dec
repnz
leave
push
loop
hlt
xor
je
dec
les
sbb
dec
or
pop
add
jnp
int3
iret
bound
and
dec
xor
int3
jle
scas
xor
or
data16
popa
leave
stos
push
shl
frstor
or
mov
daa
or
push
fwait
jno
sub
jl
cli
xchg
dec
imul
sub
pop
movsl
push
aam
and
fldt
inc
fs
sbb
dec
push
in
or
xchg
xchg
sbb
pop
in
nop
push
js
xchg
push
arpl
sbb
pushf
pop
cmp
outsb
daa
je
adc
ljmp
pop
orb
aad
mov
pop
lahf
push
mov
and
mov
inc
sub
dec
into
pop
cmc
lock
adcl
sub
adc
pop
cmp
aaa
jo
jg
enter
das
movsb
mov
inc
ja
in
and
inc
arpl
mov
lods
fmuls
add
scas
es
lret
and
mov
icebp
cmpsb
into
sti
jle
cmc
roll
les
dec
das
loop
clc
fdivrp
or
fs
adc
popf
cmp
imul
in
repnz
cli
dec
dec
adc
mov
pop
cmp
jb
or
and
loopne
lock
pop
lods
call
pop
imul
cmp
cmp
xchg
sub
fidivrs
lret
xlat
scas
je
sub
xchg
ucomiss
mov
movsl
das
nop
push
in
dec
shl
faddl
clc
lcall
lahf
mov
mov
stos
xchg
sub
imul
lods
jno
hlt
or
fwait
rcrl
adc
jbe
subb
pop
pusha
stos
cmpsl
inc
fldt
mov
stc
mov
push
mov
adc
push
jecxz
inc
or
imul
std
jecxz
in
cltd
mov
loope
sarb
orl
cld
sbb
movsl
jnp
lock
inc
das
and
jne
mov
cmpsl
xchg
sub
ja
frstor
mov
adc
loopne
or
xor
leave
adc
push
and
out
mov
aam
jg
sub
movsl
pop
push
cmp
call
ret
mov
jle
fldl
insb
sahf
clc
mov
mov
mov
sub
pusha
lods
lret
mov
pop
mov
cli
push
in
fstl
mov
add
sbb
test
cltd
mov
dec
nop
xchg
call
es
xchg
mov
pop
mov
add
jmp
mov
cmp
shlb
in
lods
or
adc
sbb
xchg
sub
xor
xor
inc
push
push
xchg
or
jnp
fwait
mov
insl
fmul
jne
sbb
mov
jle
out
cld
mov
bound
movsb
jns
sarl
sub
popa
out
adc
or
xchg
mov
jle
mov
fimuls
cmpb
xor
jne
mov
mov
jmp
cmp
lods
xchg
push
cs
jmp
pushf
inc
addl
mov
mov
dec
adc
stos
rcrl
das
insb
lds
jnp
enter
repnz
cwtl
push
cmc
adc
push
add
and
ret
inc
pop
test
sbb
popa
icebp
or
movsl
jnp
inc
mov
jae
hlt
cmpb
sbb
xorb
aam
fidivs
rolb
aam
mov
sbb
jb
leave
dec
pop
hlt
jge
sub
cld
or
cmc
jge
test
loopne
sahf
jmp
jns
pop
scas
lock
mov
mov
adc
daa
inc
subb
sub
leave
movsb
in
mov
sub
in
repz
enter
daa
or
idivb
push
lret
mov
lahf
jl
push
dec
fimull
ds
jne
movsl
push
push
and
push
lahf
fs
rcll
adc
test
scas
adc
dec
sub
adc
jmp
pop
sub
loope
pop
enter
add
add
fwait
adc
ficoml
iret
mov
lcall
add
or
push
mov
and
sub
pop
je
or
or
mov
sub
je
sahf
mov
jp
adcb
jg
mov
decb
xor
and
push
mov
cmp
add
sar
lret
and
lahf
clc
mov
call
cmc
lcall
outsl
insb
movsl
xchg
loop
loope
stc
shr
fs
test
xchg
pushf
jb
int
cmp
cmp
jmp
sbb
jg
pushl
mov
mov
sahf
pop
and
push
inc
jge
testb
loopne
jno
pop
int3
pushf
int3
adc
call
fmulp
push
adc
push
add
insb
sub
jle
sub
add
into
sub
lea
jmp
lcall
sti
dec
sbb
aad
and
nop
xor
pop
dec
xor
aas
inc
xchg
fstps
out
cmp
xchg
jno
lea
mov
call
jae
add
adc
sbb
pushf
sub
lock
add
xchg
inc
bound
cwtl
icebp
mov
dec
add
loop
jecxz
es
scas
push
mov
mov
cwtl
push
xor
jge
jns
ret
xor
dec
mov
xor
or
ret
mov
mov
dec
lock
sbb
add
lea
push
hlt
xchg
and
xor
rol
fwait
in
es
pop
cmc
dec
fimull
cmpsl
or
icebp
mov
xor
lret
xchg
mov
jb
fstpt
add
je
dec
rclb
sub
out
ret
dec
cmc
pusha
push
aas
adcb
movsb
jmp
ljmp
outsl
lods
xor
add
mov
push
pop
push
enter
call
rcrl
dec
sbb
mov
aaa
dec
dec
out
test
or
lods
sbb
jne
add
mov
stos
out
push
mov
jge
in
dec
add
mov
lcall
mov
or
fildl
push
es
daa
push
xchg
push
xor
mov
int
rorb
jbe
jmp
orl
lods
out
dec
push
andb
pop
xorl
test
jns
test
in
or
xchg
jp
sub
std
subb
jle
or
ror
jp
xchg
aaa
mov
cmc
sarb
insb
sub
or
shlb
sbb
pop
pop
push
xchg
jmp
cmp
xchg
addr16
adc
setge
leave
cli
mov
lea
insb
and
xchg
sub
lock
sbb
scas
mov
xchg
push
stos
adc
loopne
ret
ficompl
scas
add
outsb
push
lods
jae
sarl
pop
repz
xor
xchg
jns
iret
sbb
lret
ret
xchg
ficoms
lds
bound
addr16
mov
hlt
enter
or
xchg
jge
rcrb
mov
cli
aaa
pop
divb
insl
mov
int3
movsl
insb
push
pop
movsb
ret
jmp
aas
sub
pop
dec
scas
repz
and
cmp
cltd
movsb
ja
sbb
dec
cmp
fidivrl
sbb
or
jl
xchg
xorl
scas
xor
dec
sbb
jno,pt
jnp
pop
test
adc
lahf
orl
mov
fdivr
push
jp
or
arpl
mov
push
sarl
xchg
pop
cmp
jbe
loope
je
sub
pop
push
cmp
mov
adc
mov
jecxz
pop
popa
push
xorb
cmpsl
add
pop
mov
push
mov
mov
jg
es
pop
push
pop
repz
lcall
mov
or
sub
fwait
cld
sahf
pop
adc
test
add
scas
mov
mov
aas
jns
jnp
shlb
das
mov
fidivrl
shl
imull
jne
sbb
shll
je
andb
shlb
icebp
cmc
popa
xchg
cmp
push
loop
incl
fs
sub
mov
or
mov
pop
mov
push
out
mov
cli
mov
and
bound
cmp
nop
jbe
test
gs
loopne
push
sub
push
add
rol
hlt
imul
out
nop
add
stos
xchg
mov
cmp
inc
inc
xlat
sub
stos
sub
jae
mov
in
sbb
std
int3
push
data16
add
dec
loope
inc
lcall
les
lock
out
cmc
xchg
sub
jns
pop
call
bnd
pushf
pop
add
jae
jecxz,pt
cmp
cmpsb
test
addl
jmp
jb
addb
cmp
je
push
ljmp
sbb
std
xor
lret
cwtl
out
mov
outsb
jecxz
mov
push
cmpl
popa
mov
fnstcw
xor
inc
das
jecxz
xor
lds
and
sbb
xor
shrb
dec
aad
popa
cmpsl
or
pop
icebp
ja
xor
xor
add
add
mov
loop
xchg
mov
xchg
sub
shlb
add
sub
push
fld
fsubl
imul
cs
pop
xchg
pop
cmp
ljmp
xor
mov
call
xchg
mov
and
mov
xorl
out
mov
mov
mov
test
xchg
xchg
fcomps
sbb
repnz
int3
mov
push
das
dec
lods
add
sti
adc
push
inc
xor
and
mov
loop
xchg
mov
sahf
dec
adc
dec
xchg
and
dec
or
inc
push
fwait
out
push
dec
xor
scas
jne
xchg
xor
mov
addl
xchg
leave
jb
out
data16
mov
dec
addr16
jecxz
int3
js
mov
xchg
out
ficomps
mov
ret
sub
pusha
out
fistpll
xchg
xchg
mov
push
mov
xor
andl
insl
popf
cmp
mov
int3
int
stos
mov
or
jnp
xor
scas
pop
negl
adc
mov
jecxz,pt
ret
pop
pop
repnz
inc
jns
mov
inc
sbb
sub
sub
movsb
fadds
in
ficompl
test
sub
aam
mov
xor
test
sub
and
jle
push
call
lcall
push
arpl
push
mov
adc
add
lock
sbb
ret
scas
les
mov
int3
nop
scas
sbb
nop
xchg
push
int3
gs
xor
fldl
cmp
mov
push
cmp
imul
cmpsb
cmpl
test
or
jno
scas
jo
leave
and
ds
gs
movsl
gs
lods
dec
clc
lahf
mov
sar
loopne,pn
push
inc
dec
jne
movsb
mov
arpl
jecxz
bound
dec
js
nop
jle
jl
xor
lea
loope
mov
sub
clc
or
outsb
push
test
adc
nop
sbb
jbe
sub
loopne
sub
cli
daa
xor
sub
mov
lea
sub
into
pop
jb
in
lcall
fdivl
xchg
sahf
add
jecxz
cs
orb
mov
push
push
mov
dec
jbe
cmp
dec
in
mov
jnp
push
imul
scas
mov
or
xchg
int
mov
sbb
and
movsb
push
cmc
sub
pop
xor
pusha
loop
push
addr16
fldt
add
or
retw
lods
fwait
out
orb
sbb
cli
in
mov
cmp
jno
hlt
xchg
cmp
mov
loopne
scas
jmp
or
ret
adc
add
cwtl
leave
into
add
lds
scas
sbb
jnp
inc
xlat
imul
sub
popa
mov
push
imul
cs
xor
out
repnz
out
in
inc
lods
in
mov
and
in
lcall
call
jno
pop
pop
mov
sub
jl
sbb
sub
pop
dec
pop
xchg
int
inc
das
jnp
aas
data16
arpl
dec
repz
mov
divb
es
fmuls
cwtl
lret
mov
inc
adc
push
ljmp
push
jecxz
mov
fs
das
ret
mov
jl
mov
pop
add
rcrb
mov
out
shlb
std
cmpsl
or
push
mov
dec
into
frndint
pop
bound
outsl
mov
jmp
and
sar
mov
sub
repz
imul
fnsave
mov
xchg
fwait
cmp
ljmp
push
lods
or
lret
xchg
or
xchg
cmp
in
cmpsl
sub
rcr
mov
popa
or
mov
xrelease
ljmp
mov
jo
rcll
pop
mov
inc
stos
lds
cmp
push
and
xor
aam
or
or
xor
test
inc
jg
mov
jmp
rcrl
inc
ja
cli
aaa
dec
xchg
outsb
or
in
fwait
push
lods
out
dec
push
mov
jne
push
cwtl
mov
cs
cltd
fcompl
jns
ds
in
xchg
sbb
sub
or
not
jp
adc
movsb
push
inc
mov
sub
jle
jmp
in
rolb
subl
xchg
test
push
or
icebp
xor
popf
pop
test
sub
stos
sub
sub
push
mov
test
or
push
insl
xchg
inc
adc
out
iret
popf
jmp
sub
lods
daa
inc
test
jae
fxam
inc
sbb
add
push
xchg
and
xor
test
or
adc
sbb
mov
test
test
cmp
test
adc
inc
leave
cs
add
pop
pop
ret
arpl
pusha
lea
loope
jge
cltd
or
sub
jmp
fistpl
lret
add
push
aas
int3
jnp
mov
push
scas
je
xor
cmp
add
and
mov
xchg
movsb
lea
push
or
inc
cmpsb
add
mov
enter
daa
or
xor
jno
ja
jl
mov
dec
daa
add
ds
dec
inc
adc
fs
test
adc
imul
add
pop
addr16
pop
mov
pop
jp
jns
xor
inc
push
cmp
outsl
pop
outsb
mov
lods
adc
imul
sbb
in
sbb
sti
sti
add
lock
sahf
mov
das
int
das
cld
sub
xor
pop
icebp
out
daa
lcall
inc
fsubl
pop
sub
imul
mov
scas
repnz
and
mov
cmp
dec
adc
in
testb
ss
imull
push
dec
shll
push
movsl
mov
into
xchg
into
cmc
out
sbb
xor
jb
outsl
or
lods
loop
xchg
stc
in
jle
nop
out
test
inc
je
inc
jne
lods
sub
mov
push
cli
sbb
fbstp
adc
inc
cmp
inc
or
pop
fwait
scas
gs
mov
dec
imul
jns
add
xchg
adc
arpl
rolb
dec
xchg
aaa
sti
js
repz
or
mov
aam
stos
cmc
imul
fistps
mov
cmpb
sbb
nop
repnz
out
rolb
lock
push
in
les
dec
pop
popf
cmc
push
lea
mov
shll
jae
lock
addr16
cltd
adc
xchg
jno
sub
sub
in
js
inc
div
push
inc
dec
mov
jns
cmp
dec
push
pushf
je
das
ljmp
pop
mov
jg
sub
mov
xchg
out
mov
sti
dec
jno
jne
cltd
xor
stc
mov
jp
lock
inc
das
mov
xchg
mov
shl
icebp
shll
adc
cwtl
dec
dec
lret
jg
cmpsl
or
mov
and
mov
or
and
xchg
movsl
in
pop
shrl
not
int
sub
aam
dec
out
ret
cli
fists
cmp
jmp
xchg
fcmovb
xchg
and
in
test
gs
in
or
sub
push
pop
adc
xor
xor
cltd
mov
testb
in
mov
cmc
jg
adc
rolb
out
in
rorl
idivl
stos
mov
pusha
push
jne
push
add
xor
sbb
xor
orb
lcall
push
cld
jle
push
es
adc
call
dec
jns
sbb
fs
or
pop
mov
stc
aaa
adc
jg
mov
cmp
out
js
lds
mov
jns
popa
in
dec
in
xchg
addr16
fsubp
xchg
or
iret
cltd
jp
arpl
mov
xor
and
lcall
in
pop
cli
pusha
sbb
and
xchg
bound
mov
xchg
enter
mov
xchg
rcrl
sub
stos
lahf
das
pop
and
aas
insb
jno
push
jnp
cmpsl
imul
insb
add
xor
ret
inc
pop
pusha
and
cmp
pop
dec
push
or
xchg
sbb
cmp
shlb
jle
xor
lahf
lret
imul
inc
lds
into
sti
rclb
mov
fs
ljmp
lcall
cltd
lret
push
pop
mov
jecxz
and
lcall
add
mov
pop
xor
push
xchg
ja
xor
xchg
adc
nop
xor
and
fisubl
into
sub
enter
or
clc
jno
fidivrl
mov
fisubl
mulb
jecxz
out
lahf
loopne
cmc
push
aaa
cmp
test
fcmovnbe
xchg
inc
ret
jmp
and
js
roll
push
fdivr
loope
popf
pop
sub
scas
out
cmp
push
mov
inc
outsb
and
out
xchg
sbb
dec
sbb
xor
or
shlb
int
mov
sub
scas
pop
jo
sub
xor
adc
or
sub
mov
cmpb
dec
mov
pop
mov
mov
enter
pop
or
push
cmp
icebp
orb
repnz
sar
loopne
inc
add
or
jbe
cmc
mov
aad
dec
mov
outsl
call
xor
sbb
adc
cli
and
daa
aam
out
int3
ret
mov
xor
hlt
sarb
sbb
rcr
inc
incb
lret
pop
loopne
cmp
adc
imul
jae
xchg
cli
das
sbb
icebp
xor
sub
mov
es
sti
or
mov
xlat
call
nop
popf
ja,pt
lods
cli
inc
inc
shll
adc
jnp
pop
les
sub
lea
js
outsl
mov
pop
sbb
call
jmp
sub
pop
into
jns
jle
add
gs
int
mov
jns
loope
push
jecxz
dec
jbe
mov
shll
mov
jno
popl
addl
in
push
mov
hlt
cmp
inc
arpl
subb
mov
ljmp
roll
cmc
cwtl
es
jbe
insl
xorl
bound
pop
jo
mov
cld
cmpsl
mov
mov
or
dec
adc
mov
testl
pop
lock
imul
cmp
cwtl
pop
or
shlb
mov
fistl
cmovge
ret
cmp
clc
jo
sbb
imul
cmp
popa
pushf
dec
and
cs
out
inc
jg
xchg
leave
xchg
repz
xor
loop
fs
sub
jmp
lahf
mov
push
fnsave
rcrl
call
imul
scas
out
jno
daa
cld
js
pop
lcall
mov
stos
daa
add
dec
popf
mov
fcmovnbe
inc
xor
int3
xor
xor
mov
cmc
jae
lock
push
pop
iret
mov
leave
insl
imul
add
mov
stos
fwait
je
xor
mov
jne
adc
ja
nop
out
push
mov
bound
jae
js
test
loopne
or
or
push
sub
movsl
push
addr16
jp
data16
pop
incb
jle
sbb
pusha
mov
push
pop
daa
xchg
xor
adc
xchg
pop
filds
fdiv
scas
popf
lods
sbb
push
repnz
inc
loopne
adc
and
add
or
scas
inc
movsb
adcl
test
or
mov
pop
add
ret
xchg
pop
xchg
cmp
inc
lcall
inc
and
or
or
mov
push
cmpsb
fidivl
fwait
xchg
aad
ret
sbb
cmp
imul
fsubp
push
inc
inc
jb
out
mov
mov
mov
hlt
hlt
xor
arpl
mov
daa
lods
jge
add
sbb
push
lret
test
test
pop
pusha
xchg
sbb
jne
pop
xor
out
cmp
scas
outsl
mov
push
cmp
loopne
mov
sub
cmpsb
or
fcmove
ret
stos
pusha
daa
pop
mov
cmp
jl
pop
mov
ds
jae
movsl
jp
mov
lahf
call
push
or
test
cmpsb
adc
lods
mov
xchg
js
iret
stc
pop
cmp
mov
sub
leave
daa
cmp
inc
outsb
jns
cld
adc
and
xchg
xchg
add
push
add
fsubrs
ret
pop
sbb
sbb
inc
sub
popf
inc
pop
out
add
cld
push
mov
fdivl
fisttps
sahf
jmp
or
fsts
inc
jg
mov
das
mov
push
xlat
and
test
dec
sub
fsubrs
jae
in
out
rcll
stos
sbb
dec
cmc
jge
xor
lods
mov
stc
push
adc
adc
push
pop
dec
hlt
jecxz
push
xchg
xchg
mov
out
out
ljmp
mov
mov
xor
movsl
mov
mov
pop
addr16
mov
pop
repz
mov
stc
dec
addb
fdivrp
xchg
mov
inc
xchg
sub
cld
xlat
sub
sub
mov
test
xchg
sbb
sti
mov
lret
and
push
jno
nop
js
imul
xchg
inc
out
jae
mov
rol
lahf
gs
mov
mov
xor
call
out
gs
int
cmp
sub
xchg
jmp
push
pop
xor
insl
inc
add
je
aas
mov
mov
dec
pop
push
fdivs
shl
into
sbbb
shrl
adc
mov
roll
sbbl
mov
mov
inc
mov
rolb
das
pop
cltd
or
adc
repz
jmp
jne
es
dec
push
insl
push
cmovs
fnstcw
push
outsl
pop
mov
ror
enter
xchg
lret
mov
mov
and
lret
in
pop
shlb
or
aam
roll
cld
jns
push
push
test
ljmp
xchg
pop
pop
popa
ljmp
sbb
and
stos
dec
jp
adc
xor
ret
dec
dec
add
orb
and
mov
fwait
xchg
cmp
in
test
xor
add
fidivrl
pop
lea
ret
push
mov
xchg
push
add
int3
jp
mov
fstpl
push
mov
movsl
mov
out
test
mov
ja
in
pop
dec
pop
jge
inc
faddp
and
ret
mov
pop
jno
popa
or
out
ss
aad
pop
jns
insb
std
in
and
xchg
add
jl
sub
mov
or
cwtl
sbb
jp
mov
lock
push
jle
push
xchg
in
in
pusha
push
jp
fcomip
mov
loop
lods
sub
xchg
pop
pop
push
sbb
das
push
lahf
fcomps
mov
enter
test
and
iret
push
jnp
das
jns
mov
dec
mov
iret
mov
adc
into
clc
es
movsl
push
fwait
jae
cli
testl
lcall
scas
mov
xchg
sub
pushf
sbb
cmpsb
xchg
imul
fiadds
lods
sti
rorb
dec
repnz
leave
xchg
sub
hlt
aas
sbb
arpl
mov
stc
pop
jge
lea
aaa
sbb
mov
add
shll
pop
jno
push
pop
pop
ss
dec
jae
scas
dec
adc
and
sbb
movsb
cmp
cmpsb
lea
in
pop
inc
sbb
daa
push
orb
mov
outsl
jbe
je
pop
and
xchg
sbb
or
fldl
lds
pop
inc
loopne
xor
outsl
and
pop
dec
push
js
popa
lods
pop
js
popf
push
repz
pop
push
sub
mov
cmp
icebp
cs
cld
adc
repnz
adcb
sbb
pop
xor
adc
push
sti
xor
subb
inc
xor
pop
outsb
xlat
inc
lcall
mov
sub
lfs
hlt
inc
in
lret
mov
ja
mov
insb
push
and
das
ss
outsl
loope
jmp
add
addr16
mul
sahf
sub
fdivs
scas
mov
inc
xor
mov
push
ds
inc
push
xor
cmc
xchg
and
push
lahf
test
or
xor
in
adc
popa
and
mov
mov
cli
mov
loopne
xchg
dec
aad
mov
.byte
xchg
ret
nop
