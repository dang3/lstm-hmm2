and
pushf
push
inc
add
orl
nop
mov
loopne
xor
and
fcom
xor
and
and
and
mov
or
enter
cld
or
enter
lock
and
nop
inc
push
sbb
and
push
sbb
sbb
jg
nop
adc
push
mov
add
mov
mov
test
std
push
push
call
clc
clc
pop
pop
pop
ret
pop
sti
fucomp
decb
incl
xor
repnz
mov
mov
ret
nop
aaa
lret
into
std
push
lock
mov
and
pushl
incb
test
add
inc
dec
test
jb
adcl
inc
lock
add
rorb
cmp
or
je
or
clc
mov
and
idivb
or
rorb
mov
and
xor
aas
icebp
sub
pop
lock
icebp
add
es
mov
negl
mov
adc
add
mov
divb
lock
fcomi
mov
sti
mov
decb
cmp
or
add
in
mov
fstp
lcall
xor
lock
lea
lea
jb
and
mov
jge
add
push
lock
jmp
or
mov
int3
pop
addl
pop
dec
cmp
jg
lea
dec
lea
lea
incl
inc
or
add
dec
inc
mov
lea
mov
mov
mov
lcall
dec
dec
lea
mov
mov
sbb
clc
and
and
jp
mov
clc
lock
sbb
jne
push
xchg
outsl
hlt
mov
jg
cmp
jae
pop
jae
mov
dec
mov
push
and
in
jmp
jmp
cmp
je
mov
inc
aad
lea
dec
mov
enter
jo
inc
dec
mov
lea
dec
dec
dec
cmp
jnp
mov
lahf
das
mov
rcrl
paddq
mov
dec
mov
mov
xor
mov
push
gs
mov
and
dec
inc
dec
pushl
fcoml
movsb
or
adc
dec
mov
fcmovnu
fildll
and
mov
sbb
push
mov
mov
mov
inc
mov
push
xchg
sarb
mov
dec
mov
jbe
test
lea
in
lea
decl
lock
dec
xchg
mov
mov
mov
decl
nop
mov
inc
dec
mov
mov
xor
in
sub
sub
xor
in
in
or
or
cmp
jns
pop
js
add
inc
mov
cmp
push
push
aam
inc
inc
lea
inc
dec
dec
dec
cmp
add
dec
inc
dec
cmp
jl
testb
push
mov
je
push
dec
mov
mov
fidivrl
mov
xor
mov
mov
pop
incl
mov
mov
cmp
mov
mov
outsl
outsl
gs
xchg
cld
inc
movl
fcoms
sub
mov
add
loop
jne
sub
pop
shlb
mov
mov
dec
arpl
pop
fnstsw
xchg
xor
jl
pop
outsl
mov
xor
in
call
enter
flds
int3
xor
cmp
pop
mov
in
js
mov
andl
or
jnp
incl
in
inc
dec
sti
push
xchg
movsl
dec
sub
sub
int
scas
nop
jo
cld
jg
mov
xchg
inc
inc
clc
mov
lea
push
testl
sbbb
mov
and
div
inc
sti
mov
leave
je
jbe
shl
push
mov
daa
test
mov
mov
in
inc
cmp
mov
decl
dec
add
xchg
mov
insb
xchg
js
test
cmp
jo
repnz
cmp
das
clc
dec
dec
mov
adc
dec
psubsw
mov
push
xchg
ficoms
lcall
aas
popa
out
mov
inc
fldl
mov
lods
iret
iret
iret
fildll
inc
push
test
pop
movsb
popf
xor
iret
iret
iret
mov
sub
nop
push
or
xor
shll
mov
shrl
aam
iret
fisttpl
andb
cmpb
in
inc
test
mov
mov
fdivrl
xchg
aam
test
insb
arpl
mov
jbe
add
sbb
je
ret
js
inc
mov
das
or
or
insl
add
es
decl
scas
add
xchg
dec
mov
cmp
sbb
push
mov
xchg
cwtl
sub
mov
mov
insl
add
add
pop
cli
idiv
cmp
js
lea
dec
scas
movsb
fidivs
rcrl
call
in
dec
mov
in
mov
pop
inc
sbb
adc
mov
lea
and
cmpsb
outsl
jo
cmpsl
cltd
xor
inc
or
or
ret
fs
lahf
or
dec
push
int3
or
cmp
pusha
fs
cwtl
mov
pop
fwait
int
insl
mov
push
arpl
or
or
inc
test
int
pop
cwtl
add
lea
fs
shll
in
in
in
inc
push
inc
mov
xor
add
inc
popl
enter
sub
xor
in
or
inc
adc
sub
cmp
and
popf
andb
jns
iret
and
sbb
mov
jmp
lret
adc
push
cmp
cmp
sbb
and
sub
adc
cmp
orl
mov
adc
in
xor
and
or
aas
and
add
inc
es
add
enter
jb
insb
mov
add
rolb
xor
into
mov
fistpl
or
addr16
mov
or
mov
xchg
daa
cmp
xchg
lock
push
sub
sbb
je
lods
mov
in
dec
in
in
adc
roll
incl
sbb
cmp
pop
js
dec
fsubrl
nop
cmpsl
rorl
loopne
insb
cmc
es
outsb
aam
or
mov
fwait
rolb
dec
les
enter
cmpsb
sub
cmp
cltd
mov
jmp
testb
inc
adc
inc
incl
mov
xor
add
xor
xor
mov
aaa
xor
xor
pop
xor
or
add
mov
xor
add
pop
add
and
xor
xor
sub
fistpll
add
daa
xor
add
lea
xor
pop
imul
xor
jbe
das
xor
std
in
int
popa
and
xor
cmp
lods
std
xor
xchg
lods
aaa
xor
xor
pop
or
xlat
mov
xor
ss
mov
xor
pop
fcmovnbe
cmp
push
and
loope
ficoms
add
cmp
add
jge
mov
xor
xor
push
pusha
xorl
lahf
mov
or
cmp
loop
mov
sub
js
addr16
push
incl
lsl
sub
pop
sub
pop
sub
arpl
add
push
aad
xchg
jg
mov
bound
adc
add
stc
std
xor
in
push
sub
mov
mov
push
mov
mov
xchg
adc
sti
jge
pop
jo
scas
es
mov
jge
dec
dec
rcll
and
or
sub
cmpsb
and
jno
mov
sti
dec
and
jle
and
sub
incl
mov
ds
pop
mov
and
outsl
incl
scas
pop
je
cmovle
pop
aaa
pop
in
jle
sub
cmp
sbb
in
push
dec
fdivs
mov
std
jmp
je
lcall
pop
pop
in
cmpsb
cmpsl
and
pop
mov
mov
add
and
test
loop
jecxz
xlat
fldl
test
nop
adc
fwait
xchg
mov
mov
dec
mov
push
test
mov
das
lret
mov
adc
mov
lret
clc
sbb
in
push
insb
in
mov
sbb
adc
adc
or
xchg
mov
sahf
int3
icebp
int3
loop
cli
bound
pop
js
imul
or
push
stos
daa
sbb
jnp
idiv
scas
and
pop
fmuls
fldenv
aaa
addb
daa
sbb
mov
orb
push
jnp
pop
cmp
fisttpl
cmp
sbb
mov
out
dec
imul
lcall
sub
mov
addr16
insl
fptan
xorb
mov
lods
fwait
xor
mov
outsb
orb
cld
adc
sub
ljmp
scas
mov
mov
push
and
xchg
or
movsl
fwait
or
fucomp
mov
pusha
outsl
cmp
mov
fcmovnu
dec
adc
push
scas
mov
sahf
sub
pop
xor
and
mov
xor
das
mov
jp
lret
das
inc
mov
lock
loop
not
mov
mov
jmp
popa
inc
outsl
jecxz
xchg
test
sub
sbbl
sub
and
dec
xchg
cmp
sub
out
mov
out
into
scas
and
sub
test
ret
rorb
dec
aam
loop
pop
fnsave
mov
repnz
sub
sub
out
xchg
test
insb
adc
shufps
and
pusha
in
pop
aad
add
test
pop
and
adc
mov
xchg
xchg
xchg
insl
inc
or
pop
mov
imul
mov
and
push
shrl
xchg
int3
jo
out
mov
adc
sub
pop
inc
jg
dec
fwait
movsb
cmpsb
and
add
ret
lea
stc
mov
xor
popa
pop
in
divl
test
jne
or
cmp
imull
hlt
xlat
call
mov
into
push
cmp
inc
push
dec
sbb
or
sub
ljmp
adc
movl
xor
lea
mov
inc
ret
in
call
push
or
xchg
mov
add
cmp
or
jmp
jl
test
fs
sub
insl
sbb
or
push
mov
xchg
jmp
sub
push
test
insb
xor
lods
shl
dec
rcll
push
mov
sbb
aas
ljmp
jne
add
push
pop
nop
add
sub
leave
lcall
in
xchg
add
je
jb
cmc
ss
arpl
fs
jae
add
mov
clc
sbb
push
dec
push
jg
incl
fs
imul
insl
dec
jo
outsb
or
fistl
popa
outsb
insl
popa
jo
imul
push
imul
popa
insb
inc
insb
insb
sub
insb
dec
outsl
ret
mov
std
jbe
dec
gs
outsl
cmp
push
lods
insl
mov
outsb
fs
outsb
je
inc
push
xchg
add
sbb
jecxz
mov
test
mov
sub
fsubrs
push
psubusb
aaa
add
mov
int3
or
test
fdivrs
cltd
push
or
ret
popf
push
pop
push
inc
xchg
adc
adc
push
test
xchg
rorl
hlt
xchg
xchg
daa
sub
xchg
cmpl
pop
shlb
in
sub
jns
pop
je
add
in
sub
imul
mov
push
in
mov
pushf
shlb
xor
mov
icebp
add
or
sbb
leave
xchg
xor
and
add
inc
cmp
push
adc
dec
dec
sub
cmpb
pop
cmp
mov
cmpb
mov
rolb
sub
or
hlt
add
mov
cmp
xor
addb
cs
out
mov
add
sub
in
dec
repz
lahf
inc
cld
clc
fsubs
cmpsb
and
pop
add
dec
lods
mov
lock
and
daa
and
mov
test
add
sub
loopne
cli
shlb
shlb
inc
mov
pop
sbb
mov
and
and
aas
cmp
jae
adc
adc
test
aas
push
mov
sbb
jae
xchg
int
pusha
shlb
jl
popf
ja
jle
xchg
xchg
cmove
jmp
mov
adc
cmpl
xor
or
pushf
add
rorb
push
ss
and
mov
lock
popa
xchg
sbb
pop
push
push
dec
shrb
sbb
and
and
jmp
sub
orb
pop
sbb
mov
nop
daa
je
add
pushf
test
int3
pop
pop
xor
adc
and
adcl
sub
aam
or
inc
pop
cld
pop
es
aas
test
sbb
imul
gs
xor
cs
push
outsb
lcall
jne
cs
adc
push
add
arpl
inc
insl
jo
imul
pusha
push
popa
jbe
inc
imul
outsl
pushl
dec
arpl
outsb
cmc
push
imul
or
insl
aam
popa
scas
pop
sbb
inc
jo
sbb
mov
out
filds
ss
jle
inc
sti
add
fidivs
hlt
nop
adc
push
mov
inc
jne,pn
sub
jmp
in
out
fisttpl
sub
jge
in
xor
mov
or
or
insb
dec
rclb
std
fcomp
clc
sub
mov
jl
pushl
xchg
dec
cmp
clts
or
mov
or
add
test
pop
mov
jbe
pop
jne
add
clc
jmp
sub
sbb
pop
adc
jle
outsb
fsts
push
lcall
sbb
xchg
lods
adc
push
aaa
xor
mov
or
shrb
push
outsb
add
inc
in
es
mov
push
sub
cmp
out
sbb
leave
fcomi
pop
add
adc
xchg
or
mov
testl
test
das
ljmp
decb
mov
mov
inc
mov
or
push
pusha
xor
cmp
test
inc
nop
xchg
push
or
mov
or
jecxz
test
jg
sub
data16
pop
ja
xor
add
lock
nop
xchg
add
rclb
or
pop
pop
mov
cmp
add
jle
push
in
bound
mov
test
es
sbb
mov
arpl
clc
push
fildl
sbbl
icebp
movsb
adc
nop
mov
rolb
jo
adc
add
dec
mov
inc
and
cli
mov
mov
mov
rol
and
pop
mov
sub
call
or
mov
jne
jmp
add
call
push
jne
lahf
stos
movsb
imull
repnz
sbb
mov
push
mov
or
adc
repz
xor
mov
invd
mov
ja
mov
jo
xor
inc
inc
mov
pop
into
cmp
popa
das
push
xchg
sbbb
leave
adc
xor
xlat
ds
add
mov
add
daa
daa
add
or
add
or
add
and
fsubs
adc
filds
sub
add
aaa
xchg
cs
ljmp
add
xchg
push
push
add
inc
add
pop
add
dec
jmp
mov
add
pop
adc
add
dec
add
pushl
je
dec
sbb
add
add
sub
sub
filds
xchg
rolb
pop
sbb
add
add
outsb
das
aam
sqrtps
add
add
xchg
std
add
push
add
push
push
and
pushl
or
or
mov
movhps
mov
sub
stos
ljmp
rep
sbb
cli
add
pop
sub
shll
add
mov
and
dec
inc
dec
sbb
daa
sbb
pop
and
incb
lods
add
or
addr16
je
lret
sub
sub
and
insl
ja
negb
sub
add
test
adc
add
popa
ret
push
push
push
in
or
push
cmp
fadds
aaa
and
adc
clc
mov
xchg
or
inc
pop
aas
inc
es
outsl
and
add
xor
xchg
mov
or
sub
fnstenv
dec
add
je
add
mov
xor
inc
js
mov
pop
add
xchg
rclb
or
xor
mov
or
inc
jg
adc
lret
shll
xchg
fwait
jne
pop
and
cwtl
jo
adc
sub
ja
dec
sub
jo
adc
daa
pop
je
mov
push
push
or
sub
mov
rcrl
divb
addr16
sub
or
push
and
or
pop
lret
xor
test
or
fnstsw
mov
dec
sub
popf
xor
fwait
add
sbb
rol
dec
mov
sub
and
test
xchg
mov
addr16
and
ret
or
xchg
lds
clc
inc
jb
lret
movsb
lret
or
adc
mov
cmp
movsb
data16
jno
jo
sub
mov
push
cmp
sbb
or
fucomip
jl
int3
and
lods
sbb
and
outsb
scas
mov
push
adc
lods
jbe
in
fnstsw
popl
push
or
ret
add
xor
in
or
add
imul
sub
and
std
fdiv
adc
push
xchg
and
lret
ss
pushl
fistl
xlat
sub
test
dec
sbb
js
cmp
inc
cmp
outsb
pop
adc
dec
add
loopne
xor
add
xchg
outsb
out
test
or
xlat
mov
mov
lods
sub
push
jbe
out
std
stos
add
xchg
pop
push
sub
adc
fcmovu
out
jbe
in
aaa
lods
jnp
insl
and
lods
and
add
push
mov
and
iret
nop
rcll
jno
iret
or
into
in
mov
jge
dec
add
je
jae
fnsave
mov
xor
lret
adc
outsl
jnp
xchg
cmpsl
push
daa
jbe
adc
or
js
add
in
sub
add
push
sti
cld
aaa
test
daa
mov
inc
add
add
jle
cmpsb
int3
lock
cmp
outsl
dec
pop
or
or
rolb
push
xchg
ja
dec
add
fcmovnu
adc
jl
add
cmp
ljmp
iret
dec
out
nop
test
push
out
ret
sub
mov
bound
in
lock
jge
cli
scas
lods
ret
push
mov
sub
andl
out
sub
and
fsubr
jg
mov
push
sbb
mov
int3
and
mov
sbb
jg
inc
mov
data16
orb
mov
mov
jb
pop
sbb
insl
fistl
pop
in
sbb
mov
inc
jbe
adc
and
ja
imul
in
and
or
add
shr
mov
lods
and
add
cmp
mov
push
ja
in
outsl
push
dec
mov
fcompl
xchg
jne
jg
in
pop
int
cmp
stc
inc
sbb
sub
iret
jb
pop
ljmp
adc
jle
paddusw
inc
lods
and
scas
or
cmp
shlb
or
xlat
fidivrs
loopne
dec
push
xchg
ss
mov
sbb
data16
mov
cmp
in
sbb
push
arpl
inc
popf
aaa
ds
out
jb
lcall
add
loope
xchg
rdpmc
shlb
add
xchg
add
negl
jmp
xlat
movsb
js
loopne
jl
dec
mov
xor
push
or
sbb
xor
add
cmp
lock
fildl
cwtl
mov
push
mov
xor
or
popa
jne
cmpsb
mov
add
cmp
jp
mov
pop
je
adc
int
stos
pusha
adc
inc
data16
imul
test
mov
movsb
mov
jle
aad
jnp
add
or
lret
or
mulb
push
jp
je
ss
jge
les
add
sub
jl
mov
fcmovbe
addr16
cmp
add
movsb
in
inc
xchg
jnp
lds
xchg
pop
and
test
jg
pusha
out
push
movsb
pusha
popf
jo
xor
pop
sahf
dec
divl
dec
push
aas
adc
clc
movsb
mov
add
sbb
cmp
mov
fs
cmp
and
sbb
pushfw
inc
es
and
pop
pop
in
das
push
sub
rcll
icebp
es
jecxz
sbb
pop
and
iret
jl
mov
pop
shlb
jmp
jle
add
mull
dec
orl
xorl
outsb
mov
dec
mov
cmpsl
jle
daa
jo
cmp
xor
daa
cltd
mov
mov
out
test
push
fnstsw
into
jle
xor
iret
fbstp
mov
lods
outsb
into
cmp
push
int
xor
bound
pop
pop
popa
mov
pop
push
fbstp
jb
subl
and
ja
pop
pop
imul
fistl
push
rol
daa
push
mov
push
push
sbb
aaa
jnp
pop
sub
mov
loopne
pop
dec
iret
lods
push
lods
int
jnp
sub
dec
ja
rol
shlb
flds
pop
sub
jecxz
fadd
in
add
pop
mov
shll
js
stos
jmp
movsb
insb
dec
and
mov
push
pop
sub
leave
inc
xchg
insb
add
xlat
pushf
insb
add
xchg
rcr
popa
add
sbb
iret
pushf
xor
insb
fistpl
or
jbe
push
lahf
push
aaa
jns
jne
ja
test
fmuls
mov
imul
pushf
mov
ret
daa
jo
jmp
test
decl
or
mov
insl
mov
hlt
add
sub
ret
int3
icebp
mov
jno
nop
sub
fwait
cmp
and
xor
and
jbe
and
lods
fistpll
fdivs
cmpsb
jp
jb
mov
xchg
lcall
lods
add
ljmp
je
shrb
xor
data16
pop
sbb
popf
sti
xchg
sub
dec
push
mov
mov
sub
mov
aaa
add
mov
insb
cmp
ss
mov
in
jg
adc
mov
inc
loopne
cwtl
xor
mov
cmp
mov
pushf
lds
mov
or
dec
cmp
adc
inc
jae
pop
xchg
xchg
jl
mov
inc
sbb
test
sub
mov
out
add
xor
imul
add
mov
jb
sbb
iret
inc
adc
push
push
filds
cmpsl
sti
cmpsb
test
and
jle
add
dec
inc
mov
movsb
out
scas
daa
repnz
data16
dec
and
jmp
xchg
fidivs
mov
iret
stos
add
push
push
ja
push
cmp
mov
sbb
push
dec
and
sbb
xorl
inc
or
mov
aad
jno
aaa
clc
cmp
mov
loop
push
jp
pop
ss
mov
xchg
adc
mov
adc
cmpsb
inc
addr16
int3
sub
or
stc
cmp
push
cmp
jo
mov
insl
and
xchg
mov
adc
jge
mov
fwait
adc
int3
ja
in
pusha
add
fcompl
sbb
sti
mov
das
insl
or
je
or
mov
adc
mov
mov
aaa
push
out
fisubl
orl
dec
cld
mov
lret
fisubrs
sar
cmp
adc
sub
and
pop
xchg
les
inc
out
out
pop
inc
xchg
pop
lds
ror
add
cmpsb
aas
sub
sub
fwait
and
push
int
out
ret
and
xor
mov
test
cmpsb
push
sub
imul
and
adc
push
ljmp
xor
aaa
xchg
or
hlt
in
sbb
add
sbb
je
inc
jne
add
test
test
nop
es
mov
jnp
jmp
test
and
test
cmp
rcrl
jl
jp
and
rorl
dec
movsb
and
scas
and
sub
sub
scas
xchg
push
adc
mov
out
test
stos
mov
pop
or
rorb
add
and
out
mov
aas
inc
dec
imul
insl
adc
shll
sti
ss
in
nop
js
mov
fldenv
adc
inc
jmp
jl
hlt
xor
shrb
mov
roll
data16
scas
adc
shlb
mov
and
popa
add
movsl
pushf
adc
sbb
inc
jecxz
aam
test
cwtl
les
loope
lret
jge
and
pop
fildl
xchg
stc
jb
mov
inc
movups
xor
xchg
fcoml
cmpl
mov
xor
lock
sub
pop
pop
test
dec
mov
mov
dec
mov
aaa
mov
cwtl
and
sub
lods
fchs
mov
sub
cmpsb
lahf
push
test
fildll
les
insl
insb
idiv
pusha
jnp
insl
or
mov
xor
sbb
sbb
sub
sbb
xchg
dec
shrl
sbb
in
adc
pop
cmp
sahf
inc
sub
fstps
inc
jnp
sub
addr16
mov
iret
ja
pop
push
cmp
jbe
into
aad
jne
push
mov
aas
cmpsb
les
xchg
adc
sbb
sub
and
dec
mov
ss
aam
pop
loope
leave
cmp
iret
add
xor
sub
stos
inc
cli
and
fimuls
mov
aas
inc
aaa
pop
add
pusha
push
outsb
jge
int3
xchg
xchg
mov
popl
jl
rolb
pop
sub
mov
jmp
sub
fndisi(8087
je
addr16
leave
cmp
and
dec
scas
divl
scas
adc
mov
nop
pusha
into
lea
xchg
add
int3
xor
jbe
ret
iret
mull
lret
sbb
iret
dec
push
push
xlat
daa
aaa
outsl
lods
lds
add
ret
xchg
shrl
jnp
pop
jmp
pop
das
or
lock
sbbb
in
int
sbb
lods
or
imul
mov
xchg
test
jns
mov
xchg
mov
arpl
push
add
aaa
xchg
adc
add
cs
jmp
mov
inc
pop
ljmp
popf
sub
mov
outsb
cmc
shll
lahf
pop
notrack
movsb
fidivs
or
arpl
adc
mov
pop
jno
inc
aas
inc
pop
push
push
ret
lods
je
data16
ds
mov
in
in
sub
js
addb
imul
add
and
nop
xor
and
mov
xchg
imul
lods
aas
fildll
mov
xchg
xchg
stos
and
push
dec
dec
popa
mov
fsubs
mov
cmp
xor
jne
cltd
fnstcw
xor
push
clc
pop
popf
sarb
inc
and
sub
enter
shrb
xchg
mov
inc
cwtl
inc
pop
sub
jmp
insb
test
xchg
daa
jecxz
dec
push
push
in
daa
xor
js
sub
jmp
push
jge
add
aas
and
icebp
test
aaa
or
test
iret
jne
dec
inc
adc
fs
jno
cmp
lcall
mov
clc
addr16
jb
loopne
into
scas
paddq
add
xchg
adc
das
fs
ljmp
and
movsl
test
mov
clc
dec
loopne
or
pop
inc
pusha
roll
xor
fcmovb
pusha
inc
ret
cmpl
cmpsb
cmp
loope
sti
push
cmp
insb
daa
lock
cmpsl
inc
fsts
push
cmpsb
xchg
cli
jne
cmp
mov
cmpl
pop
sub
push
je
mov
das
scas
pop
and
loop
ljmp
enter
cmp
sbbl
pop
cmp
or
rcr
test
insl
mov
add
xor
lock
test
cmp
add
ret
movsb
xchg
and
mov
lret
out
in
mov
jl
sub
push
sarb
inc
lods
and
xor
stos
add
cmp
cli
movsl
cmpsl
or
daa
push
jl
mov
sbb
out
repnz
sub
sub
shrl
es
ljmp
test
enter
ljmp
dec
jmp
xchg
dec
negl
push
mov
mov
jno
push
jmp
daa
mov
sbb
ret
iret
mov
repz
xor
cs
out
popf
mov
sbb
sub
sbb
repz
add
aad
bound
sub
into
adc
test
outsb
daa
add
sub
out
and
andl
fistps
or
pop
cwtl
adc
ret
xor
mov
subl
mov
daa
addr16
and
or
cmp
push
mov
mov
das
mov
xchg
push
and
dec
jb
fwait
sub
sub
scas
loope
scas
pop
jae
inc
dec
scas
pop
pop
cmpsl
adc
fdivl
fisttpll
or
push
and
and
pushl
sbb
ficompl
dec
iret
and
xor
pop
cmp
mov
mov
push
aaa
scas
and
in
test
adc
mov
iret
xor
inc
ret
push
adc
addl
scas
movsb
test
push
mov
fsubrs
push
xlat
xor
push
pop
lds
inc
jmp
aam
jle
xchg
sbb
cmp
ja
aas
or
insl
inc
mov
mov
mov
dec
and
fdivs
mov
push
popa
add
out
and
xor
loopne
lret
fdivrs
pop
in
daa
shl
and
jbe
daa
je
sbb
insb
daa
push
repz
mov
push
ss
push
inc
dec
xchg
push
shr
jo
test
bswap
lock
test
inc
mov
popf
pop
scas
sbb
mov
sbb
cmp
jbe
and
insb
mov
and
imul
ret
dec
mov
bound
fisttps
lcall
idiv
push
push
mov
notb
mov
fildl
lret
scas
mov
push
sub
out
xor
sbb
lods
notl
push
clc
mov
les
mov
xchg
sbb
push
mov
lock
push
sub
mov
fwait
jge
pop
sbb
int
repz
push
and
movsb
and
jmp
mov
push
nop
add
popa
fsubrp
jle
shlb
cmpsl
stos
movsl
sub
mov
aam
sub
test
push
outsl
jbe
repnz
cli
scas
mov
in
loopne
mov
jb
add
test
aas
or
ret
or
movb
aam
roll
sub
movb
data16
and
mov
mov
scas
ljmp
das
sbb
cs
arpl
pop
cs
xchg
je
popa
sar
push
mov
popl
and
sbbb
sbb
or
inc
and
mov
inc
adc
les
scas
and
sub
pop
inc
bound
loope
inc
sub
rcrb
insb
cmc
mov
das
sub
jmp
mov
arpl
xor
dec
lret
add
rclb
outsl
inc
jb
shrb
jg
in
rol
stos
or
fnsave
or
mov
xchg
fstpt
cmp
mov
sub
lds
popf
lea
out
test
or
iret
loope
test
sub
xor
ljmp
xorl
loope
addl
pop
push
in
cmpsb
sub
push
jp
inc
sub
mov
push
mov
mov
jmp
push
xchg
inc
cmp
int3
mov
ret
mov
jns
and
cmpb
out
das
aam
dec
mov
clc
aam
out
jmp
mov
loope
out
fmuls
scas
test
pop
mov
ret
mov
sub
ret
rol
fcomps
movsb
int3
adc
data16
sbb
mov
or
pusha
lods
sbb
dec
out
fbstp
aad
imul
and
or
ss
add
pop
rolb
cmp
lret
in
mov
in
sahf
mov
xlat
cmp
ja
aaa
sbb
cld
test
iret
scas
repz
fbld
mov
push
jae
xor
adc
dec
xor
push
les
mov
push
xchg
mov
xor
jo
cmp
jbe
iret
in
rcr
test
sub
pcmpeqd
movsb
loop
pop
or
imul
pop
push
and
lods
jno
push
cmp
and
lds
mov
jmp
pop
and
push
pop
inc
cmpsl
outsl
stc
lods
fisttpll
jge
pop
add
pop
or
pop
pop
or
push
or
or
fcoms
cmp
push
jno
sub
in
shll
add
mov
pusha
shl
mov
push
sbb
dec
data16
cmp
pop
mov
push
add
filds
and
jg
mov
loopne
stos
sub
loop
add
popa
out
aaa
push
fcomps
sbbl
and
jmp
fdivrs
mov
repz
mov
or
cwtl
mov
mov
sub
arpl
lret
xor
pop
insl
mov
xor
stc
cmp
push
mov
movsb
out
fadds
xchg
or
test
xlat
add
clc
in
sahf
movsb
inc
jg
scas
or
inc
in
pop
in
movd
hlt
daa
adc
or
int
sub
pop
push
clc
popf
pop
pop
daa
add
jbe
in
ror
fcomp
and
or
testl
out
addr16
cmp
xor
push
int
pop
pop
add
cmp
pop
sahf
pop
lret
fucomip
jnp
pop
or
jle
flds
pop
jmp
cmc
push
in
sub
fwait
sbb
adc
mov
mov
or
fsubr
mov
cltd
sbb
mov
lret
pop
shll
testb
mov
add
lods
arpl
sti
data16
adc
lahf
scas
pop
stc
dec
shlb
out
cltd
pop
add
pop
dec
or
or
push
mov
mov
pop
out
lods
test
xor
lods
fwait
push
mov
push
xor
in
cmp
daa
scas
in
sbb
mov
and
pushl
jnp
inc
pop
incl
lds
xacquire
add
daa
add
mov
mov
sbb
and
inc
or
sbb
outsl
or
adc
add
add
pop
sub
es
mov
test
mov
ret
popa
testb
and
push
stos
dec
adc
mov
test
xor
sub
pop
mov
mov
mov
insb
mov
xchg
xchg
pop
pop
mov
loop
int
sub
mov
daa
mull
sub
adc
pop
and
or
or
xchg
mov
xchg
mov
push
dec
push
scas
ss
or
jl
scas
sbb
push
mov
jnp
push
and
shrl
test
lods
shll
add
rolb
jmp
push
insb
int
mov
mov
dec
imul
sub
sub
sbb
sub
lock
fimuls
sub
pop
in
sbb
mov
addb
cs
into
cmp
inc
xor
sbb
and
fldenv
inc
cmp
xor
mov
xor
rorb
jae
jbe
adc
sbb
fisttpl
inc
inc
dec
lods
or
cmp
fisubl
push
daa
aad
or
sub
insl
cmpsb
insb
sub
mov
test
or
int3
and
mov
or
ds
out
add
add
xchg
fists
cmp
fidivs
or
cwtl
sub
daa
xor
hlt
mov
adc
in
aaa
xchg
rorb
pop
test
push
psraw
ret
mov
mov
addr16
ds
and
jne
mov
cmp
add
push
sub
fwait
push
adc
mov
adc
icebp
push
int3
clc
mov
cmp
mov
ret
cmpsl
inc
sti
mov
mov
push
ffreep
test
or
and
bound
add
xchg
in
pop
lahf
fwait
adc
test
ret
jae,pn
adc
ss
test
fcmovu
mov
mov
inc
imul
imul
test
mov
dec
xor
ds
push
mov
enter
mov
mov
cmpsb
ss
mov
or
out
mov
xchg
add
add
xor
jo
jle
imull
jnp
add
jo
addb
int3
jmp
scas
mov
jbe
jle
push
xor
and
and
lret
mov
jae
and
repnz
add
shlb
mov
pop
in
push
iret
jnp
dec
sbb
scas
add
mov
xor
push
fstl
add
push
mov
out
lods
dec
mov
add
inc
jle
push
push
movsb
out
outsb
imul
iret
cs
andb
or
fs
loopne
divb
mov
in
int3
insb
mov
and
cmp
pop
and
sbb
adc
das
adc
add
mov
lods
mov
mov
aas
add
outsl
push
and
fnstcw
sub
xor
insb
pushf
scas
mov
sub
call
inc
cmp
call
outsl
and
mov
fs
push
dec
xlat
ja
repnz
sbb
stos
cmpb
roll
mov
pop
test
jb
sti
add
clc
jo
push
push
xchg
or
adc
addr16
mov
inc
xor
push
test
dec
in
fcoml
repnz
cmpl
leave
movsb
adc
adc
cltd
aam
les
insl
inc
xor
xchg
mov
dec
les
popa
jle
loopne
add
pop
or
and
cmp
or
adc
xor
add
sbb
or
mov
sub
jmp
or
leave
negl
jecxz
fsubrp
push
out
mov
jo
rcrl
fnsave
movsl
lret
push
idivb
or
xchg
sbb
dec
inc
push
push
js
movsb
sub
add
inc
pushf
daa
lods
filds
les
xor
cmp
push
movsb
push
sbb
mov
imul
adc
push
sti
push
cltd
xor
stos
jmp
je
pop
in
lret
push
jno
mov
loop
jo
dec
push
cmp
insb
mov
pop
aaa
jge
mov
sub
pop
inc
adc
and
je
dec
sbb
cmp
pop
dec
inc
out
imul
lods
fsubrs
shrl
jmp
adc
add
pop
and
scas
or
add
fdivrs
aam
mov
stos
and
jo
mov
mov
mov
mov
cs
add
outsb
and
pop
loop
fimuls
and
add
push
mov
sub
add
repz
xor
and
repz
neg
lcall
fsub
aaa
push
xor
fwait
in
movsb
pusha
add
cmpsb
lret
xchg
and
add
cmp
lea
roll
xor
lock
mov
ret
jmp
adc
or
cmpsb
insl
ret
sbb
and
pop
inc
sub
and
fisttpll
or
nop
push
in
mov
cs
pusha
inc
cwtl
lods
mov
push
orl
add
call
inc
int3
icebp
std
add
mov
pop
push
daa
add
outsb
movsb
pop
mov
sbb
je
lea
repnz
and
mov
test
sub
test
sahf
stos
mov
movsb
sbbl
xchg
into
and
pop
sbb
add
pop
add
xrstors
add
jo
out
jae
add
mov
iret
fcmovnu
xor
mov
rcr
enter
jmp
or
lds
sbb
mov
sbb
jne
mov
pop
jo
ficompl
je
daa
xor
add
roll
jl
or
pusha
or
jecxz
push
xchg
ljmp
add
shll
jo
jmp
dec
cmpsl
and
lret
orb
or
jns
sub
fisubl
insb
out
daa
test
icebp
pop
pusha
xor
les
outsl
push
xor
jo
enter
and
fistpll
movsl
cmpsl
fadd
scas
bound
cmp
xchg
jg
bound
push
out
sbb
out
and
push
sbb
add
and
mov
xchg
pop
sti
inc
popf
es
mov
xchg
ljmp
outsl
and
sbb
cvtps2pd
rorl
or
xor
jns
ljmp
imul
push
mov
mov
add
inc
out
cmp
ljmp
or
shll
mov
pop
lods
sbb
pop
push
ficomps
cs
jne
aam
mov
mov
loopne
mov
jo
sbb
aam
ja
leave
mulb
mov
ret
out
jae
adc
test
mov
mov
sahf
lret
sbb
sbb
dec
inc
leave
add
dec
cmc
and
cmc
and
add
call
mov
adc
sti
mov
out
loope
fcom
push
adc
jl
or
mov
stos
mov
mov
dec
loop
xchg
andl
iret
xor
scas
cli
sbb
daa
rcr
sub
xchg
fcmove
sbb
add
repz
repz
into
repz
test
cmp
jp
mov
mov
adc
rclb
js
enter
mov
or
xlat
daa
xor
mov
dec
movsb
push
ret
mov
mov
dec
jne
push
xor
addr16
int3
push
sub
mov
or
adc
mov
pop
cmc
mov
xor
addl
pop
fistpl
mov
fsin
cwtl
adc
xlat
fucomip
mov
pop
stos
pusha
es
loopne
nop
jp,pt
push
xchg
xor
jmp
and
mov
adc
or
adc
jmp
xlat
pop
je
aad
fistpll
jbe
cltd
fldt
cmpsl
loope
mov
xchg
test
movsb
or
movsl
fiaddl
call
inc
cmpsl
dec
add
add
mov
aas
inc
cmp
test
pop
rcr
inc
xchg
test
or
sbb
in
je
daa
aaa
subb
ja
das
add
repnz
inc
mov
push
sub
pusha
push
je
in
movsb
pop
adc
pop
in
es
loope
into
in
and
leave
sub
inc
sahf
loope
mov
into
sub
fidivrs
insb
aas
fnsave
daa
cltd
add
das
in
mov
push
das
fldcw
or
fidivl
mov
cmp
or
dec
and
and
mov
cmpsb
push
jnp
adc
sub
ljmp
add
push
loope
stos
iret
xchg
loop
std
dec
std
pusha
and
decl
rcl
rorl
mov
pop
iret
iret
js
and
inc
jmp
das
dec
or
adc
add
cmp
leave
dec
frstor
js
inc
addr16
sub
cmp
mov
pop
leave
test
leave
ret
dec
pop
cmpsl
andb
push
and
xor
adc
loop
mov
ljmp
popf
inc
sbb
jp
pop
in
jge
nop
jecxz
aad
out
or
xor
mov
jnp
add
jecxz
fisubrl
mov
cmpsb
push
cmp
and
add
xchg
popa
inc
cmp
and
movsl
outsb
sub
mov
sub
jno
loope
jle
or
push
sub
lcallw
or
movsb
mov
dec
scas
sbb
addr16
subl
aam
aam
push
sub
pop
loope
lds
jle
or
ds
push
scas
fistpl
xor
push
andb
stos
add
fdiv
cmp
inc
mov
rorl
lods
lods
imul
mov
das
jo
ja
and
loopne
mov
dec
clc
in
stc
or
iret
jno
add
ljmp
pop
jle
push
cmp
popf
sbb
push
fcoms
add
into
rorl
lret
lods
dec
mov
imul
jbe
insb
jecxz
sbb
rcll
mov
jg
int3
and
add
aaa
es
pop
mov
stos
inc
jmp
and
mov
mov
popa
adcb
xchg
cmp
lods
out
js
jp
mov
sarl
sbb
loope
add
lcall
daa
push
xchg
inc
push
add
iret
adc
roll
clc
lods
lock
inc
mov
and
sbb
pop
cmp
movsb
test
divb
and
imul
mov
sarl
sub
and
iret
ret
shrb
ret
mov
dec
cmc
xor
fstps
push
icebp
ljmp
jge
add
outsb
xorl
adc
jmp
and
mov
push
in
mov
jo
dec
jb
jle
push
fadds
test
jb
dec
jb
inc
shr
sbb
mov
push
push
push
in
pop
fisubrl
rolb
sbb
nop
scas
gs
adc
ds
xchg
test
and
stos
shl
rcl
add
sbb
lcall
das
loopne
lock
lcall
scas
int3
and
adc
clc
loop
cmp
sub
or
adc
addb
sbb
ret
xor
xchg
mov
dec
cmc
mov
lods
loope
adc
sbb
int
xor
lds
mov
ret
iret
sub
mov
shl
or
adc
sub
sbb
adc
jmp
pop
je
mov
or
cmp
xor
sub
push
xor
or
sbbl
jmp
push
fildl
out
loope,pn
mov
les
pop
test
inc
xlat
sbb
mov
push
adc
pop
or
call
stos
scas
fdivrs
xor
repz
jnp
pusha
nop
sbb
push
in
sbb
mov
pop
and
lcall
int
mov
ss
bswap
sub
in
stos
adc
in
add
adc
popa
inc
loope
fimull
push
xor
push
scas
test
mov
add
int3
add
ret
scas
das
pop
dec
inc
es
mov
addb
cmpsl
ljmp
inc
sub
lcall
sub
in
fnsave
imul
push
xor
pusha
les
int
and
xchg
mov
inc
push
xor
add
into
inc
sahf
fildl
ss
cs
cmp
add
ret
imul
pushf
ss
cwtl
aaa
xor
rcrl
mov
sti
andb
jnp
sub
rclb
add
fistl
decb
int3
add
push
add
adc
ja
in
or
ja
inc
add
div
jne
xor
xchg
xlat
adc
scas
sub
lock
mov
sub
loope
ret
adc
imulb
pop
mov
divl
add
pushf
dec
cmpsl
mov
sub
sbb
jae
adc
into
pop
inc
xor
pop
insl
jp
dec
cmp
pop
xchg
iret
daa
enter
cwtl
aad
stos
mov
sub
roll
loopne
inc
nop
push
push
inc
jb
pop
inc
addb
add
sub
or
mov
hlt
xchg
push
dec
dec
pop
sar
nop
cmpsl
and
add
mov
xor
cs
scas
or
mov
cmp
pop
xchg
push
lock
fcoms
ljmp
rcll
add
cmp
pushf
sub
test
or
pop
adc
out
cmp
stos
loop
and
sub
scas
mov
sub
call
sub
jl
push
test
shll
test
xchg
push
lds
enter
inc
shrl
mov
aaa
push
gs
add
call
push
dec
add
add
cmp
out
in
cmp
jno
loopne
jns
mov
xorl
mov
dec
cwtl
mov
and
add
stos
and
shlb
xchg
or
in
mov
mov
js
std
mov
adc
ljmp
push
lds
sbb
mov
lret
aaa
add
push
pop
jbe
dec
cmc
sub
bound
or
sbb
add
arpl
cmpsb
inc
cmp
inc
mov
aad
mov
mov
cmp
xor
test
movsl
ds
lods
mov
xchg
lods
movsl
or
push
and
shll
shlb
push
sub
jmp
adc
xor
add
xlat
je
scas
jg
pop
sbb
aaa
xchg
rep
mov
cmp
addl
mov
fadds
mov
imul
data16
lods
inc
fpatan
inc
mov
fistpll
and
fdivr
mov
pop
push
pop
mov
inc
sub
inc
imul
pop
sbb
inc
aaa
jle
sub
push
xchg
orb
fbstp
xlat
mov
xor
cmp
adc
mov
pop
pop
inc
fwait
inc
inc
push
dec
mov
add
inc
fcomp
dec
rcrb
pop
dec
negb
subb
mov
or
xchg
mov
test
pop
xchg
adc
jecxz
fdivp
push
aaa
adc
inc
mov
xor
xor
sbb
sbb
in
xor
lods
push
pop
out
loope
idivl
or
in
or
mov
dec
arpl
test
jg
push
jecxz
cmpl
sbb
inc
sti
fildl
sbb
stos
mov
or
ja
aaa
enter
mov
lret
xchg
inc
cmpsb
leave
push
sbb
xorl
ljmp
fldenv
or
pop
push
loope
test
mov
clc
sahf
test
daa
inc
jl
mov
xchg
sbb
dec
pop
mov
dec
js
popf
xchg
mov
or
lea
mov
pop
xchg
enter
fldenv
fstpt
inc
scas
adc
popf
xor
xchg
ljmp
cwtl
imul
mov
or
jne
or
dec
fiaddl
insl
fsubs
pushf
jg
jl
dec
jbe
sbb
mov
xchg
push
mov
xchg
push
ret
pop
dec
xchg
scas
lahf
arpl
cwtl
and
jnp
fldenv
out
or
movsb
jecxz
push
out
ds
arpl
or
mov
fisubl
negl
and
or
das
adc
enter
cmp
rdmsr
sti
add
adc
lcall
pusha
fucomp
aas
addr16
iret
sarb
adc
sbbb
data16
fcomps
push
pop
aaa
in
test
fbld
lods
sbb
fildl
push
or
or
fcompp
jge
pop
cmp
and
mov
cmpsb
mov
ret
lds
jge
mov
cmp
pop
adc
jge
adc
add
popa
frstor
inc
pusha
mov
sbb
jge
sbb
add
jnp
out
adc
jae
shrb
and
lock
popa
cmpsb
pop
stos
lods
adc
fcomps
mov
inc
cmpsb
mov
inc
xor
insl
inc
sbb
lock
dec
mov
push
mov
mov
adc
cmp
xor
xor
push
or
fcomp
xor
cmpsl
xorb
lret
mov
and
xor
push
inc
out
clc
jbe
mov
xchg
stos
or
dec
mov
xchg
mov
fxch
xor
rcpps
lret
sahf
test
fcomp
mov
xchg
sbb
jp
xchg
add
pop
es
mov
nop
test
push
push
iret
cli
jmp
std
cmp
mov
cmp
addl
shlb
and
sub
out
push
add
stos
mov
sub
push
cmpsl
js
icebp
and
dec
fwait
inc
mov
inc
arpl
and
dec
in
dec
add
mov
dec
outsb
xor
test
dec
scas
add
nop
jp
pop
sar
insb
add
stos
pop
scas
cmpsb
mov
adc
andb
xlat
mov
fdivrs
daa
cs
add
movsb
loop
aas
jb
lahf
adc
push
lds
enter
mov
sbb
daa
adc
pop
fs
and
insl
cmpsb
sub
cmp
or
sub
inc
push
push
add
testl
nop
div
lret
shlb
test
or
pop
rcr
outsl
or
mov
sarb
scas
mov
pop
cltd
pusha
mov
adc
and
cmp
shlb
xor
cmp
mov
sbb
push
adc
rorw
cmp
inc
xchg
pop
and
xor
sub
and
movsl
pop
sbb
and
rolb
repz
add
inc
ret
push
and
loop
pop
inc
mov
mov
mov
outsl
mov
in
inc
fisubrl
xchg
popa
add
addb
xchg
lret
add
sub
jo
cmp
in
sbb
add
jo
pop
fldt
fwait
fwait
jecxz
sbb
jo
sbb
test
xor
sbb
cmc
fisubrs
xor
stos
mov
jae
sbb
outsl
sbb
pop
lods
dec
mov
cld
imul
inc
push
dec
inc
mov
add
mov
add
jb
data16
inc
pop
cmpb
xchg
adc
add
mov
jl
jo
fwait
addl
mov
mov
xchg
aam
test
cli
jnp
testl
push
cli
int
xor
push
mov
mov
dec
push
sub
ja
and
adc
adc
fcoml
inc
sti
pusha
mov
pop
sbb
stc
dec
imul
popf
push
push
add
xchg
push
lcall
adc
cmpsb
mov
jle
lcall
ljmp
jle
pop
ds
sqrtps
xchg
add
data16
dec
mov
xchg
cmp
loopne
or
ret
and
push
ds
outsl
dec
test
addr16
jae
loopne
dec
sbb
std
mov
sub
push
outsl
inc
imul
xchg
sar
xor
xchg
lock
adc
sub
pop
adc
mov
xor
sub
bound
adc
jg
insl
push
sti
or
mov
out
xor
stos
popf
mov
clc
sub
and
cltd
into
popa
mov
add
sub
mov
xchg
sarl
iret
jle
stos
pop
repnz
lods
jmp
push
pop
and
sub
sbb
aad
scas
cmp
insb
mov
outsl
inc
adc
dec
and
jg
testb
cmp
xchg
or
hlt
subl
popa
cwtl
add
sbb
jmp
jg
fs
sbb
mov
inc
push
inc
outsb
push
into
dec
or
add
adc
or
pushl
movsb
pop
roll
inc
jle
mov
pop
jp
mov
out
jbe
jmp
sub
sti
mov
ljmp
cmp
dec
insl
inc
movb
mov
stos
add
and
or
xchg
xor
jmp
mov
testb
sahf
push
out
ret
sub
jnp
repz
int
lds
jp
pop
jnp
mov
dec
mov
out
pop
imul
loop
cmpsb
sbb
inc
inc
lcall
adc
icebp
test
xor
sub
xchg
scas
aam
push
or
xor
out
and
inc
sub
xchg
mov
orl
and
punpcklbw
cmpsl
les
lods
mov
push
movsb
scas
add
xor
and
xchg
cmpsl
pop
les
das
ds
out
in
adc
insb
dec
bound
fidivrs
push
inc
sub
aam
aas
sbb
xchg
ljmp
out
mov
test
icebp
push
mov
movsb
iret
fadds
in
and
outsl
fwait
out
test
lret
xchg
jo,pn
mov
vxorps
mov
aad
push
sub
or
sti
mov
inc
sti
ja
test
sub
ficoms
add
fsubs
lcall
lds
adc
jo
inc
jp
pop
hlt
movsb
fcmovbe
sub
mov
mov
subb
cmpsl
dec
ret
imul
imul
movsl
sub
std
cmp
icebp
cmpsl
inc
les
or
setae
in
sahf
adc
xor
in
mov
add
xchg
sbb
push
pop
sub
hlt
rolb
pop
push
and
add
adc
adc
lods
jge
out
ds
or
sbb
dec
outsb
std
jo
inc
scas
or
mov
and
sbb
mov
push
cmp
test
rcll
add
jno
mov
adc
aam
jb
inc
fildl
pop
mov
or
nop
cs
sub
daa
lahf
out
iret
adc
sub
and
call
lret
fnstenv
out
pop
mov
xor
xchg
lret
out
mov
pop
adc
mov
mov
fisttpl
xor
or
mov
lods
scas
dec
fcmovnb
add
jl
pop
addr16
sbb
push
mov
and
mov
int
testb
mov
fldcw
push
aam
or
iret
and
mov
iret
and
int
test
es
lret
or
pop
pop
hlt
sub
and
push
pushf
repnz
idivb
cmp
dec
pop
adc
stos
jae
cmpsl
scas
lret
xor
cmp
inc
or
lds
xchg
or
out
cmp
out
mov
or
rclb
add
inc
add
cmp
adc
inc
loopne
int
fadds
pop
mov
pop
inc
mov
and
sub
ret
out
stos
sbbl
adc
lcall
das
pop
sbb
ja
lcall
jle,pn
mov
arpl
dec
xor
hlt
add
xchg
mov
ffreep
mov
jg
dec
int
mov
aam
sbb
or
cmpsb
repnz
out
cmpsl
pop
dec
clc
push
int3
out
lcall
mov
dec
or
sbb
and
adc
add
dec
rcrb
add
mov
dec
push
in
mov
inc
and
out
mov
out
insl
xchg
js
push
add
jge
mov
add
and
xchg
lods
loope
xor
cwtl
xchg
test
jae
cmpsl
lods
and
sti
push
mov
jmp
and
shrb
int
jbe
stos
xor
test
inc
or
subl
xchg
xlat
loop
xor
pusha
push
xor
or
add
inc
bound
ds
addl
add
data16
lods
mov
cli
add
fdivp
jge
mov
int
cmp
xchg
sub
sub
lret
jecxz
outsb
sbb
push
arpl
and
jp
movsl
mov
daa
push
leave
xor
xor
orb
and
mov
fisubl
es
or
jne
dec
mov
fdivs
jle
outsl
mov
jno
mov
cmp
mov
pop
shr
jl
push
lods
inc
lock
stos
js
sbb
xor
inc
fcmove
and
arpl
dec
scas
xchg
dec
pusha
jb
pop
sbb
movsl
mov
xchg
es
test
stos
or
push
hlt
push
mov
add
imul
mov
es
add
inc
cmpsb
ljmp
sahf
adc
mov
sbb
pop
mov
cmp
pop
stos
sbb
repz
aas
ret
sbb
push
ss
add
daa
push
cmc
loopne
shr
data16
ss
pop
xor
fildl
adcl
inc
rcrb
adc
push
fadds
jno
xor
pushf
xor
mov
jnp
ja
movsb
xchg
sub
cs
xor
data16
cmp
add
push
ljmp
fmul
xor
pop
mov
and
jo
scas
aaa
jmp
es
mov
testl
fiaddl
sub
push
or
mov
and
mov
mov
into
hlt
stos
jl
push
or
mov
or
js,pt
jbe
lock
test
lcall
out
js
mov
xor
and
sub
loopne
scas
push
addr16
addr16
pusha
inc
outsl
xchg
sub
lods
jnp
push
les
arpl
shll
xchg
shll
fsubl
cmp
movsb
fldl
or
mov
fstpt
hlt
and
test
xchg
lcall
mov
push
lods
inc
sub
mov
or
sbb
xchg
movsl
addb
fcomps
xchg
or
inc
push
xchg
out
int3
jb
mov
jp
xor
and
es
pop
fscale
in
mov
outsl
push
movsb
scas
scas
stc
lods
cmp
stos
lods
sub
sbb
aas
mov
fldz
loop
in
inc
loop
inc
into
addb
shl
xchg
pusha
add
push
aad
add
sbb
jl
add
out
frstor
xlat
mov
push
jo
mov
inc
push
push
adc
adc
lahf
lea
dec
inc
jb
sub
mov
call
xlat
cmc
into
imul
push
adc
shlb
sub
test
jne
cwtl
mov
mov
mov
shl
mov
ret
lea
pop
xchg
out
cmc
cmp
pusha
js
iret
nop
sub
sbb
sti
sbb
add
lret
jecxz
mov
stos
ds
je
mov
lea
lcall
movl
cmp
add
lods
cld
nop
fmulp
add
in
push
sahf
jecxz
push
dec
xchg
and
cmp
shrl
in
mov
cltd
arpl
lret
in
es
dec
sbb
cs
pop
xchg
icebp
inc
lock
in
scas
cmp
in
ret
lcall
sub
pop
test
pop
fiaddl
mov
and
mov
push
mov
loop
bound
sub
lds
cmp
or
inc
jae
scas
sub
inc
jl
ja
mov
es
mov
loopne
ret
in
add
scas
jmp
mov
jl
push
daa
cli
xor
inc
test
fdivrs
xchg
cmp
sub
mov
mov
xor
mov
sarl
pusha
or
mov
cs
fisttps
jl
mov
lret
pop
jae
push
outsb
lds
orl
cmp
iret
dec
or
stos
cs
or
rolb
cmp
jp
and
fwait
sbb
ja
add
or
icebp
rorl
push
idivl
cmp
adc
adc
popf
xor
adc
je
xchg
dec
filds
adc
mov
arpl
push
dec
repnz
dec
mov
add
inc
pop
push
push
mov
mov
into
pop
xlat
mov
sbb
push
loop
push
push
stos
out
daa
push
ja
fadd
loope
cwtl
dec
repnz
push
adc
push
mov
xorb
or
insb
lahf
inc
sbb
lcall
addb
jno
push
leave
pusha
jae
xor
and
jb
inc
mov
lds
imul
and
xor
mov
sbb
and
jns
or
sbbl
mov
sahf
add
pop
jle
jo
push
xlat
dec
es
add
fisttpll
add
decl
sbb
inc
jo
lcall
lods
jmp
out
daa
inc
gs
xchg
in
jmp
xorb
ljmp
in
insb
xlat
fimuls
jle
dec
in
outsb
sbb
sbb
jp
jp
ljmp
cwtl
loop
aaa
imul
xchg
out
aas
jl
loopne
push
push
jo
inc
dec
mov
loope,pn
dec
add
scas
inc
mov
dec
aaa
cmp
jb
in
mov
adc
add
push
dec
push
movb
test
pop
arpl
pop
sub
mov
rolb
das
outsb
pop
xor
adc
ljmp
sti
divl
mov
cmp
xor
shrl
test
dec
mov
out
jo
arpl
sbb
xor
ljmp
add
pop
or
mov
lods
pop
int
test
outsl
lahf
subl
add
mov
pusha
and
lret
inc
sbbl
test
lcall
and
lcall
xchg
orb
or
push
dec
sbb
mov
jne
sub
and
roll
movsb
inc
fisttps
pop
mov
imul
pop
push
mov
adc
pop
mov
nop
sbb
jo
dec
pop
icebp
or
cmp
sbbb
decl
into
dec
pop
in
cmovg
iret
lret
sub
and
cmp
pusha
sbb
push
sarl
aad
push
push
ljmp
test
add
out
add
or
test
dec
pop
add
and
data16
mov
fimull
jo
fwait
add
pop
pushf
pop
mov
mov
xchg
mov
adc
push
popa
lods
jo
pop
je
jmp
shl
daa
into
jp
andb
jb
adc
mov
mov
shld
cmpsb
stos
push
xchg
jl
mov
xor
cmp
subb
sub
pop
mull
sahf
adc
xor
sbb
enter
pop
movsb
loopne
mov
push
push
and
push
out
mov
lds
test
mov
lods
pop
das
sub
test
lret
inc
and
cltd
adc
ret
or
xor
dec
add
push
mov
cmp
aad
pop
les
inc
mov
jo
and
adc
jns
pop
scas
sub
jne
fcompl
loopne
int3
xlat
lret
iret
inc
out
inc
cltd
lahf
stc
out
scas
add
daa
scas
add
add
in
and
mov
push
push
xlat
adc
adc
fcoms
pop
das
imul
je
in
lods
and
add
add
pop
and
push
pop
test
push
dec
dec
int
push
xchg
insl
jnp
mov
push
ss
fwait
arpl
dec
pop
subb
enter
inc
lds
adc
repz
jbe
mov
mov
scas
push
add
adc
fistpl
insb
push
jbe
add
sub
sub
lret
outsb
jbe
adc
sub
add
jno
ficoml
fdivrl
shr
xor
cmpb
adc
test
into
and
adc
adc
add
fildll
arpl
push
xor
in
je
into
push
scas
xchg
push
in
fwait
pop
xor
push
add
push
jo
test
add
mov
mov
xchg
jnp
cmp
lldt
bound
cmp
mov
cwtl
mov
sbb
add
shrl
push
add
insl
mov
outsb
or
ret
lea
or
and
add
in
pop
fnstcw
add
adc
add
inc
push
cwtl
imul
or
inc
inc
inc
mov
sbb
ret
jecxz
je
aas
jbe
xchg
stos
loopne
pop
cmpb
xorb
mov
das
ds
imul
push
sub
jl
rcr
test
push
fbld
fildll
in
int3
push
std
or
pop
mov
dec
pop
or
push
and
jns
pop
movsl
scas
xorb
fmuls
shlb
mov
lods
fwait
imul
stos
pusha
sbb
out
and
pop
mov
pushf
inc
lods
xchg
mov
and
ja
push
pushf
dec
ss
jo
xor
sub
lret
sub
out
jge
adc
cmp
in
cmp
aaa
or
lds
inc
mov
jne
pop
add
in
sbb
dec
shrl
popf
inc
popl
inc
iret
ficomps
dec
push
insl
push
fwait
or
mov
push
fwait
jo
adc
dec
add
dec
push
push
sbbl
ret
test
popa
aas
popa
das
dec
cmp
cmp
sbb
mov
pushf
addr16
add
into
in
insb
js
mov
pop
shrb
int
xor
push
pop
stos
out
xchg
xor
adcl
push
pop
popa
fsub
sti
iret
fcomps
jecxz
imulb
or
push
xlat
in
les
push
imull
pop
in
or
into
or
push
lods
daa
inc
add
cmp
sub
jle
fsubrs
jo
movl
fsubs
xor
sub
fdivl
fmulp
sbb
movsb
ret
fwait
call
pop
out
fldt
push
aaa
push
rclb
push
ja
out
loopne
es
int3
and
inc
pushf
aad
dec
iret
popf
jno
das
rorl
push
out
or
mov
dec
mov
sahf
fmull
mov
cmp
dec
add
pop
inc
cli
adc
clc
arpl
fdivrs
adc
mov
clc
push
movsl
lret
cmp
ret
mov
add
es
jne
repnz
jb
cmp
jp
icebp
push
jnp
add
add
pop
add
jns
inc
sub
daa
add
add
xchg
dec
xchg
jns
add
fcompl
movsb
mov
out
inc
jnp
mov
lods
mov
jmp
add
bnd
xor
xchg
jge
xchg
popa
pop
and
add
mov
push
pusha
test
sbb
and
jle
mov
sub
sarb
mov
in
fistl
cmp
jns
dec
xor
jns
jp
and
in
push
mov
scas
cmp
es
iret
inc
in
nop
fnstsw
add
out
push
jg
sbb
jne
pushl
xor
test
addl
sub
dec
jg
sbb
out
test
hlt
fs
add
sar
mov
push
in
cmpsl
mov
xchg
ja
das
and
mov
jnp
mov
scas
mov
push
lds
divb
insb
sub
imul
xor
leave
mov
les
xchg
js
and
test
hlt
xchg
pop
dec
xchg
pop
jmp
push
add
dec
or
shrb
ret
xlat
fmul
jb
or
dec
pop
test
xor
xchg
jnp
int3
sbb
push
test
lds
or
push
xlat
gs
mov
leave
inc
add
aad
das
inc
sahf
in
mov
mov
ja
mov
daa
jp
ret
call
imull
cmp
in
mov
cmp
imul
pop
test
push
lahf
cmp
repz
mov
adc
leave
xlat
lods
ret
popa
jl
call
mov
mov
add
xchg
mov
adc
inc
inc
inc
out
inc
addr16
out
lods
loopne
js
mov
aas
cmp
insl
push
pusha
out
nop
or
out
and
int3
mov
push
and
xchg
je
scas
aam
push
inc
into
mov
jo
popa
mov
sub
negb
mov
sbb
inc
sbb
and
mov
into
ja
jmp
or
lods
jg
mov
xor
jo
and
int3
stos
add
sbb
mov
jns
aad
xchg
ret
sbb
aas
cmp
sbb
mulb
adc
inc
push
sub
rorb
pop
js
cmp
aaa
add
push
xchg
mov
xlat
xorb
mov
inc
test
mov
mov
mov
pusha
lret
bound
dec
cwtl
add
cwtl
fwait
sbb
hlt
inc
outsb
sub
insl
jne
pop
lahf
rep
icebp
xchg
icebp
adc
ret
mov
popa
inc
in
std
cmp
and
rolb
jmp
sbb
mov
sub
add
xor
out
fwait
cld
cmp
ja
push
jecxz
out
add
sub
xchg
cmp
adc
jge
pop
jmp
or
push
jno
ss
sti
cmp
ss
xor
push
sti
add
sub
or
dec
vaddsd
mov
sbb
js
insl
repnz
add
push
fistps
or
inc
push
xchg
daa
add
jecxz
add
xchg
cmovge
sbbb
push
out
dec
iret
add
loopne
fwait
shrb
add
or
adc
sub
sbb
insl
dec
les
cmpl
mov
hlt
adc
stos
inc
fbstp
mov
mov
sub
cmpsb
fisttps
or
lahf
mov
and
push
pop
mov
cwtl
mov
daa
mov
test
pop
xor
lods
call
adc
push
fisttpll
or
clc
mov
pop
sarb
lock
push
or
xchg
adcb
aam
xorl
shll
adc
xchg
xorb
js
adc
test
ret
movnti
cwtl
push
xchg
mov
jns
pop
orb
mov
xchg
or
sbb
jmp
scas
fistpl
je
imul
rclb
ret
inc
cmp
ljmp
add
cltd
pusha
adc
cpuid
adc
dec
mov
in
push
adc
pop
stos
je
es
lods
add
push
bound
push
pop
inc
dec
into
xor
lcall
add
jne
out
in
fisubs
adc
xchg
inc
aas
mov
xor
imul
mov
fistps
or
imul
int3
push
add
cltd
push
shll
scas
xor
or
test
jne
and
sub
xchg
sub
push
sub
dec
inc
cmp
cli
push
mov
stos
xchg
dec
imul
sub
dec
icebp
pop
iret
addr16
loope
jecxz
dec
cmpsl
ljmp
cmp
out
in
js
movsb
dec
push
and
and
mov
jle
xor
or
ret
test
popa
dec
xchg
jg
inc
fcoms
fcoml
push
sbb
bound
jge
push
xor
lahf
or
es
push
pop
stos
loopne
mov
dec
push
daa
sub
add
shll
loopne
adc
sub
fdivrl
mov
insl
or
add
aaa
arpl
push
imul
mov
cmp
test
scas
insl
mov
jle
xor
sbb
sbb
mov
fsts
imul
insb
push
inc
pop
testl
ja
adc
mov
ja
fs
sub
or
xor
jae
or
push
sbb
lods
push
les
xchg
and
mov
addl
ds
out
push
sbb
fildll
aad
loope
or
xor
stc
mov
sub
push
rcr
xor
js
out
cmp
sub
mov
fidivrl
out
adc
inc
xor
dec
aad
lock
imull
adc
insl
sub
pop
xchg
sbb
push
les
mov
mov
enter
push
ds
je
sbb
sarl
xchg
pop
mov
sub
mov
add
lds
inc
xchg
xor
js
or
daa
jecxz
aam
xor
mov
lret
lret
fs
mov
rorb
test
arpl
sar
out
cwtl
cmpsl
lcall
sarb
loop
in
adc
dec
out
jmp
add
xchg
sbb
mov
push
push
xor
cmp
rol
test
mov
aad
xor
aas
cld
je
push
arpl
mov
jecxz
test
outsb
inc
pushl
lock
aaa
xchg
test
stos
inc
cmp
or
mov
pop
jg
in
or
adc
mov
scas
and
add
movsb
pop
test
je
aas
je
loopne
mov
jl
mov
and
push
addr16
xchg
xorl
js
sbb
cmp
sbb
stos
data16
xchg
sbb
pop
push
and
lret
add
xchg
jg
aas
int3
mov
mov
movsb
lcall
and
jecxz
add
test
xor
shll
xchg
nop
cmp
mov
inc
push
imul
test
lods
shll
mov
mov
mov
ss
xchg
iret
jb
mov
lods
daa
jp
mov
xchg
lods
ret
lods
mov
or
scas
mov
sbbb
shll
mov
cmpb
add
mov
adc
sbb
dec
enter
cli
dec
fsubs
das
pop
roll
xor
shlb
lcall
data16
and
cmp
pusha
xchg
subw
xor
jmp
lfs
aam
and
iret
in
int
clc
add
mov
shll
scas
mov
push
rolb
xor
add
mov
push
aaa
sbb
xlat
adc
lods
imul
inc
lret
add
mov
cmc
int3
pop
xchg
jae
inc
adc
push
loop
loope
mov
or
add
sub
jnp
scas
xchg
lods
stos
jo
test
and
scas
insb
in
stos
test
cmp
in
test
cmpsl
outsl
inc
in
mull
jb
push
xor
push
scas
sbbb
outsb
inc
or
fwait
adc
sub
adc
xchg
and
mov
adc
bnd
loop
push
in
popa
mov
and
lret
inc
call
adc
jo
fldl
and
jecxz
xor
add
sbb
test
mov
gs
xchg
out
ret
dec
push
dec
pop
int
adc
and
push
cmp
jmp
push
int3
and
pop
sbb
or
add
mov
sahf
leave
scas
pop
mov
loop
jmp
clc
sbb
pop
mov
sub
das
push
fwait
hlt
ficoms
pop
lcall
mov
iret
popf
or
pushf
sub
mov
out
cmp
in
loope
xor
xchg
lods
adc
data16
outsl
pusha
or
roll
add
adc
daa
mov
mov
mov
lret
rolb
iret
mov
add
stos
and
mov
insb
and
jle
mov
push
jp
push
or
jmp
sbb
sbb
hlt
lret
push
xor
or
addr16
push
xchg
adc
sbb
add
leave
add
and
test
leave
xchg
stos
jo
inc
daa
mov
jne
stos
or
inc
lret
lcall
sub
xchg
xor
inc
or
into
inc
sbb
xchg
mov
xor
mov
dec
add
xchg
add
mov
sub
mov
cmpb
pop
mov
cltd
xchg
stos
cltd
cmp
pop
jae
outsl
fwait
lcall
pop
and
fs
in
imul
into
mov
mov
outsl
leave
ror
je
cmpsb
out
int3
scas
dec
add
cwtl
mov
leave
mov
je
lret
mov
divl
lds
ret
and
mov
fiaddl
dec
lock
push
mov
sbbb
and
and
jp
iret
push
push
scas
daa
mov
pusha
js
pushf
fisubs
and
xlat
mov
xorb
mov
popa
sub
pusha
sub
imul
add
popf
fs
popf
movsb
mov
das
xor
lock
sub
mov
mov
sub
test
lock
into
shrl
cmp
xchg
mov
sub
arpl
or
inc
mov
lea
push
aam
mov
adc
pop
push
je
or
dec
iret
sbb
lahf
xchg
cmpsb
and
pop
and
loop
mov
popa
out
test
in
add
dec
jb
enter
movsl
or
and
xchg
fcoms
push
xchg
push
xor
and
pop
pop
decb
out
add
mov
das
push
dec
xchg
jmp
xor
adc
fisttpl
push
imul
mov
dec
sub
movsl
adc
jmp
mov
scas
xlat
sub
adc
and
cltd
test
stos
mov
xchg
rclb
xor
ds
dec
xor
enter
lds
push
jb
inc
out
sbb
and
outsb
inc
jle
add
cwtl
jno
out
jl
add
imul
js
hlt
sbb
adc
adc
movsb
fildll
outsl
add
imul
insl
pusha
sub
or
ja
pop
lea
outsl
push
xlat
add
mov
cltd
mov
nop
es
or
cmp
lahf
test
push
pop
sbb
add
insb
add
xlat
add
stos
fmull
inc
sub
cmpsl
push
je
movsl
and
in
xor
jo
into
jbe
enter
cwtl
mov
mull
ja
insl
lods
xchg
arpl
mov
pop
dec
inc
cld
shll
xchg
fnstenv
push
cmp
or
js
dec
inc
pop
jmp
adc
out
stos
mov
ds
adc
push
leave
hlt
fmull
in
mov
sbb
jecxz
popa
fmul
jle
cmp
mov
add
mov
popa
nop
pop
das
setle
or
adc
mov
fmull
xchg
mov
scas
in
and
mov
nop
aad
stos
mov
insb
xchg
fadd
sub
xchg
dec
ret
and
xor
cmp
and
pushf
hlt
stos
adc
hlt
push
mov
push
xchg
or
xchg
adc
std
pop
push
movsl
and
repz
ds
add
fnstenv
mov
fsubs
jmp
or
scas
mov
add
cmpsb
pop
out
cld
movb
adc
xor
sbb
sbb
jne
or
push
and
lods
out
flds
mov
mov
stos
or
xor
fiadds
dec
pop
movsl
movsb
int3
stos
andl
pcmpgtd
loop
push
adc
cld
jp
push
in
daa
dec
cwtl
mov
push
repz
add
cli
xor
lcall
add
repz
cs
loope
cmc
lahf
jb
xor
popa
cld
add
mov
pop
and
andl
ret
cli
cmp
inc
sub
cmp
xor
sub
push
jo
outsl
jg
or
inc
dec
push
call
lock
and
test
xchg
gs
inc
mov
ds
mov
adc
xor
mov
inc
mov
mov
sbb
add
jge
xchg
sti
stos
pop
les
mov
dec
add
push
in
pushf
or
and
inc
cmp
jbe
fwait
sbb
lock
push
shl
xchg
addr16
or
mov
and
push
lcall
mov
xor
mov
adc
pop
push
pop
jno
mov
lahf
ret
popf
ret
aaa
mov
xchg
movsl
fs
mov
push
jecxz
icebp
cmp
test
fisubl
mov
inc
pop
push
add
fnsave
hlt
and
ds
repz
or
test
imul
rorl
or
gs
push
lea
imul
jo,pt
and
aaa
jnp
and
loop
add
dec
cli
loop
icebp
and
dec
jle
inc
out
pop
jg
pop
sbb
and
ss
push
iret
jge
pop
or
decl
daa
lods
pop
push
std
arpl
nop
jae
cmp
dec
dec
or
lods
es
push
sub
xor
sbb
mov
sub
xadd
mov
mov
adc
aam
jg
ss
sbb
jo
sarl
sbb
repz
lret
jg
fwait
cmc
or
mov
cmpsb
inc
lcall
adc
js
shlb
dec
fucomp
or
xor
adc
andl
push
int3
jmp
jnp
insb
or
push
jno
in
inc
cmp
lret
pop
push
lds
dec
shl
outsb
and
mov
rcll
or
adc
xchg
xchg
imul
push
inc
and
sub
sbb
inc
add
xor
xchg
das
xchg
jo
ret
push
pop
scas
pop
cwtl
adc
ret
test
ja
iret
or
popa
adc
pop
leave
int3
cld
pop
mov
or
pop
cwtl
lods
push
mov
js
dec
jne
mov
std
lea
scas
ja
cmp
fwait
popl
cltd
sub
sub
pusha
xchg
rolb
inc
nop
jae
adc
loope
xchg
es
sub
mov
mov
addb
mov
lock
daa
out
lahf
mov
cmp
inc
cmpsl
clc
push
jecxz
sub
mov
cmpsl
inc
mov
dec
jo
mov
fadd
or
or
mov
sahf
inc
dec
repnz
sub
xchg
add
mov
dec
test
jae
lock
lahf
fcmove
sti
insl
lahf
mov
cmpsl
sub
cmpsb
jp
push
mov
or
push
ss
cwtl
movsb
mov
and
pop
dec
lcall
and
insl
pusha
mov
sbb
dec
or
sbb
ja
mov
lods
dec
fsubl
pop
outsl
mov
cli
stos
push
call
scas
inc
xchg
call
and
fdivs
add
xor
pop
xor
jne
stos
sbb
nop
fisttpll
add
lock
and
or
or
sti
pop
add
jae
fcoms
into
stos
pop
add
or
mov
mov
repnz
jge
cwtl
loopne
fcmovnb
ja
lock
das
or
jp
les
lods
fsubrs
xchg
sub
jle
lcall
sub
push
sub
or
and
xchg
mov
mov
jns
push
jg
rcll
sbb
enter
push
mov
add
inc
dec
sti
cwtl
xchg
lcall
sbb
popa
cmp
cmp
and
cmpsb
pop
imul
add
insl
adc
test
push
xor
flds
xlat
cmovl
jnp
jp
and
sub
add
pop
xchg
pop
add
cmpsl
inc
sbb
push
dec
jo
or
hlt
das
movsb
lret
jne
int3
xor
nop
add
pop
mov
lea
jae
xor
dec
mov
xchg
pop
gs
divb
repz
mov
cmp
cwtl
imul
jge
lcall
mov
or
repz
cmp
lock
xchg
cwtl
mov
xchg
mov
add
inc
pop
xor
cmp
aas
data16
mov
xchg
push
repz
icebp
sub
cmp
gs
cmc
mov
mov
and
scas
lods
dec
adc
mov
bound
and
pop
add
pop
inc
xchg
inc
mov
sarb
scas
aas
pop
jle
aaa
dec
adc
shrb
rorl
nopl
loopne
push
das
add
add
adc
imul
daa
inc
mov
or
mov
test
test
fldl
aam
cmp
and
push
pop
push
add
add
sub
sub
cmpsb
les
and
push
mov
xlat
xorl
mov
stos
add
inc
je
mov
sbb
pop
add
insl
shlb
jmp
inc
sahf
add
pop
lods
ja
movsb
inc
adc
mov
insl
add
fwait
jecxz
mov
inc
inc
push
add
cmp
sbb
cltd
inc
push
test
or
mov
roll
in
shll
dec
mov
cmpsl
sub
push
dec
insb
mov
xchg
or
fs
add
or
push
cmp
xchg
jno
lret
xlat
and
invd
insb
adc
dec
inc
push
cs
hlt
shll
sbb
inc
pop
adc
xchg
in
vdivps
xchg
jl
mov
adc
fwait
scas
test
gs
add
mov
out
adc
adc
fsubs
push
add
xchg
fcomps
xor
fstl
in
lods
inc
push
xor
loope
ret
xchg
movsb
roll
out
inc
inc
mov
add
cmpsb
xor
mov
xor
push
cmp
cld
in
jns
cli
call
xchg
sbb
scas
fiadds
dec
cmp
inc
scas
push
sarl
xchg
jmp
movsl
int
test
inc
add
sbb
inc
scas
test
and
and
push
ss
push
mov
pop
push
fnstcw
jmp
out
adc
mov
mov
movsb
fs
mov
in
inc
push
jge
fiaddl
add
or
daa
fisubrs
inc
or
pop
orl
or
shlb
leave
push
pop
xor
cmpsl
add
sbb
movsb
dec
push
pop
aas
flds
or
xor
ret
and
pop
je
pop
or
add
test
pop
add
sbb
andl
and
es
inc
movsb
adc
lock
mov
pushf
jns
es
sub
je
outsl
fidivs
xor
xor
jp
ret
mov
xchg
push
cmpsl
fbstp
int3
lods
push
add
call
mov
mov
std
cmp
int3
push
das
sbbb
jge
mov
sbb
sub
outsl
xchg
adc
cmpsl
ret
lcall
hlt
popa
jbe
lret
push
mov
into
xchg
movsb
xchg
push
loop
push
sub
pop
xchg
inc
jp
inc
cmp
lcall
xchg
mov
fs
add
inc
rorl
mov
rcrb
jmp
lds
aaa
leave
pop
aam
rorb
insb
loop
push
mov
pop
fidivl
pusha
adc
movsb
fs
out
xor
inc
sub
fmuls
add
mov
sarl
xor
xchg
mov
push
sbb
xor
fstpl
jne
mov
rcrb
sbb
jl
push
mov
add
and
and
mov
or
xchg
into
sbb
dec
xor
mov
mov
inc
dec
push
or
push
mov
and
and
push
test
adc
cltd
orb
xchg
lods
inc
shl
push
cmpsb
xchg
fcmovbe
sbb
add
and
aaa
stos
lret
sbb
mov
adc
outsb
jg
cwtl
sbb
testb
cltd
icebp
imul
mov
frstor
and
xchg
jo
mov
mov
mov
lret
dec
push
stc
mov
fld
popf
popf
pop
mov
mov
xchg
mov
insl
mov
aad
adcb
das
or
inc
add
adc
and
aas
push
dec
out
mov
fdivs
mov
mov
jne
mov
vpaddusw
dec
pushf
and
fiadds
mov
xlat
filds
hlt
clc
add
push
sub
jl
test
mov
jns
arpl
out
scas
sahf
ret
ja
stos
adc
jb
mov
dec
cmp
cli
call
add
aam
mov
push
les
jge
and
mov
in
adc
stos
addb
push
inc
stos
shl
sub
mov
mov
fstp
cmpl
dec
inc
addr16
mov
dec
add
add
inc
clc
jl
jge
filds
daa
pop
pop
inc
sub
and
fs
add
push
inc
dec
xchg
add
dec
xor
or
mov
mov
or
inc
cmpsl
dec
roll
inc
cmpsb
or
sbb
popf
adc
sti
movb
push
out
add
push
push
test
ljmp
mov
adc
mov
je
aad
rdpmc
stc
scas
jp
jo
mov
mov
lcall
jno
mov
clc
push
lcall
pushf
adc
jnp
add
cltd
popa
cmp
mov
cmp
and
mov
scas
aam
cmpsb
mull
sbb
sbb
cli
xchg
ds
and
xchg
mov
sti
fadds
das
inc
push
lods
push
add
cmpsl
sbb
data16
fisubs
push
sbb
add
lret
cmp
scas
cmpsb
pop
or
pushf
inc
adc
mov
call
jno
sbb
out
dec
mov
addr16
lock
lcall
lret
xchg
imul
xlat
xchg
push
mov
mov
dec
sbb
sub
andb
or
stos
jo
mov
sbb
cmp
lods
sbb
mov
cmp
popf
xor
sbb
adc
dec
cwtl
daa
js
addl
pop
xchg
in
cmc
std
movsb
sbbl
mov
push
jb
movsb
orb
test
lea
gs
pop
sub
clc
and
mov
sbb
lahf
fistpl
xor
or
test
insb
jae
add
lods
fisubs
pop
sbb
inc
stos
lods
sub
shll
dec
ficompl
lock
loop
xchg
add
jae
add
inc
mov
mov
sub
movsl
mov
dec
fldt
or
shlb
cmpsl
cmpsl
data16
jae
clc
mov
repnz
xchg
sbb
sbb
xchg
pop
jecxz
pop
cmpsb
loop
pop
sub
jecxz
dec
push
jo
push
pop
ja
and
and
into
adcb
inc
call
mov
cmp
jle
mov
stos
cmp
imul
add
push
ss
ss
jg
or
push
jo
or
sbb
pusha
lcall
jle
add
jp
lcall
pop
nop
push
add
into
inc
aaa
xor
aaa
mov
xchg
and
inc
sbb
int
jo
in
lock
stc
ljmp
fmuls
in
fidivl
push
push
iret
enter
push
and
add
dec
hlt
into
inc
leave
cmp
add
push
cmc
lahf
mov
stos
loop
js
inc
adc
inc
lods
mov
iret
insb
dec
pop
andb
fistpl
aam
jne
and
shr
xor
jg
inc
das
push
pop
fcoml
sbb
xor
sub
push
lock
xchg
cmp
xchg
jno
push
aam
lahf
pop
aas
fisubrl
adc
xor
add
mov
jnp
xor
mov
aam
add
shr
mov
dec
fstp
jae
cmp
movsl
jle
arpl
popa
cmpl
sub
loopne
loope
mov
icebp
mov
pushf
push
lret
dec
mov
or
add
and
add
pop
sbb
aad
mov
out
add
pop
std
dec
rcrb
fsub
fdivs
insb
dec
mov
rcrl
xchg
orl
adc
ret
iret
push
mov
aaa
notl
es
and
jbe
into
xor
into
shrl
out
pcmpeqw
xchg
dec
xlat
add
xor
es
ljmp
call
push
and
cltd
add
ja
xchg
sti
fimull
jp
data16
popf
mov
or
or
mov
lds
and
pop
in
add
add
ljmp
adc
push
sbb
std
inc
adc
add
inc
ljmp
mov
adcl
push
js
mov
cmp
enter
int
inc
mov
iret
vfnmsub231sd
or
outsb
pop
mov
adcl
pop
push
pop
aad
pushl
inc
sub
cmp
inc
cltd
add
xor
and
push
lea
xchg
iret
rorl
clc
mov
leave
push
mov
push
mov
xor
outsl
add
and
in
adc
icebp
and
pop
rcr
cmovno
fmuls
in
fcmovnu
clc
sub
in
mov
lock
loopne
add
fisubrl
fimull
scas
jl
inc
xor
dec
movsl
mov
je
inc
shlb
fabs
std
out
mov
xor
rolb
es
fmul
popf
pop
xor
icebp
enter
in
leave
cld
in
out
xchg
adc
test
andb
adc
cmp
and
add
add
or
mov
xor
pop
push
adc
jl
jecxz
cmc
adc
push
jo
out
nop
test
icebp
addr16
mov
filds
popf
push
movsb
mov
xchg
mov
mov
inc
call
and
dec
mov
add
sbb
push
pop
push
stos
popa
add
xchg
es
scas
jl
mov
or
push
insl
sbb
ja
stos
mulb
cmp
jns
xor
int3
icebp
add
jge
insb
into
mov
notb
fxch
test
dec
out
in
push
sbb
sbb
popa
pop
xor
scas
inc
je
mov
mov
sti
inc
push
add
cs
andl
fmuls
das
cmp
test
mov
bound
flds
mov
xor
outsb
movsb
outsl
dec
or
or
adc
in
mov
adc
push
and
or
cmp
push
sub
mov
lods
scas
popa
ret
mov
das
cmc
fbstp
arpl
mov
scas
and
push
or
shlb
movsb
xor
mov
loop
push
fchs
adc
mov
adc
aaa
popa
mov
jp
dec
imull
loopne
leave
jne
ja
cltd
flds
adcb
jb
adcl
fmull
xor
adc
jae
mov
xchg
pusha
inc
scas
xchg
rolb
or
movsb
pop
sti
and
jno
pop
or
mov
and
mov
xchg
and
call
xchg
jecxz
add
aas
insl
shlb
cmpb
cmpsb
dec
std
ljmp
shlb
jno
dec
and
shrl
shlb
push
push
dec
add
jno
sti
iret
adc
xlat
hlt
sbb
fucomp
cmpsl
lcall
jmp
push
pushf
daa
or
rclb
inc
pushf
push
xchg
add
inc
push
adc
mov
or
jb
ja
outsb
sbb
and
jp
adc
outsb
add
out
idivl
outsl
add
cmp
outsb
insl
mov
mov
insb
sub
push
mov
sub
gs
es
cmp
push
ljmp
lea
jnp
jmp
and
mov
add
inc
xor
les
xchg
hlt
out
dec
push
lods
mov
and
pop
xor
fmuls
insl
cmp
dec
mov
dec
mov
inc
call
ja
test
int
cld
add
aam
les
mov
or
adc
lahf
jg
into
adc
je
pop
inc
andl
cwtl
xchg
scas
cmp
stos
push
adc
out
xchg
iret
or
xor
or
mov
ja
inc
ljmp
rcl
dec
and
xchg
dec
jp
xor
adc
push
fsubl
jle
push
and
inc
call
roll
popa
lods
jae
enter
xorl
push
popf
add
pop
test
negl
bound
and
mov
sbb
cmc
mov
and
push
sti
push
adc
stc
xchg
imul
mov
push
or
inc
jp
or
mov
mov
add
cltd
xor
icebp
nop
mov
pop
adc
mov
das
inc
aaa
repz
adc
pop
js
mov
out
cmp
add
decb
ss
cmp
jns
insl
xor
aaa
and
push
pop
je
outsb
pop
push
xchg
gs
add
lods
add
pop
imul
xlat
jle
adc
push
mov
or
push
xor
inc
push
inc
out
enter
stos
aas
loopne
xor
jns
daa
jle
testl
push
mov
push
es
pop
push
cmp
mov
sub
adc
scas
sbb
jecxz
mov
arpl
lods
or
cmpsb
xlat
insb
adc
stos
add
adc
fstpl
xor
shll
imul
xchg
sbb
pushf
inc
pop
cmp
push
imul
jo,pt
es
add
popa
add
add
and
xchg
cmc
bound
pop
ljmp
in
adc
cmpsl
in
sub
cmp
xor
test
xor
adc
fstpl
push
jmp
push
mov
add
sub
and
mov
scas
and
sbb
mov
sub
lds
mov
mov
pop
xor
scas
push
jmp
data16
pusha
stos
sbb
sbb
mov
or
adc
add
rcrl
and
imul
fsts
outsl
add
cmp
pop
jo
mov
add
push
pop
xchg
adc
xor
sub
mov
mov
jb,pn
jle
not
outsb
insl
shld
adc
pop
sub
add
adc
adc
cmc
pop
inc
rolb
fisubs
xchg
add
pushf
cld
mov
add
iret
mov
push
sbbl
aam
pusha
xchg
das
jae
push
inc
jecxz
xor
test
xchg
dec
arpl
jl
mov
dec
iret
sti
dec
or
dec
adc
sub
pop
leave
jo
inc
or
pop
push
pop
in
dec
pop
inc
mov
movsb
lods
adc
adc
dec
add
pop
pop
bound
add
push
shlb
inc
adc
adc
pop
mov
push
adc
add
xor
test
jge
sahf
or
mov
imul
adc
xchg
or
mov
sub
xchg
test
outsl
subb
test
jo
push
xor
pushl
subb
sbb
inc
ja
loop
mov
push
sub
ljmp
bound
inc
pop
dec
bound
mov
xor
rep
mov
push
out
std
sahf
xlat
push
in
push
iret
dec
and
imul
and
mov
sub
mov
push
push
or
xlat
and
lea
xchg
add
and
sbb
sti
test
stos
insl
arpl
out
mov
inc
or
cmpb
mov
adc
jl
push
jecxz
jecxz
push
rolb
jo
push
adc
push
adc
lods
inc
mov
ficomps
aaa
sbb
xchg
dec
push
push
and
fisubl
dec
rorb
cmp
xlat
outsb
ds
add
mov
les
sbb
jle
add
and
fcoml
clc
lret
int3
sub
out
add
lcall
cmc
xchg
pop
adc
jle
xor
add
jp
rclb
cmp
and
xchg
popw
bound
mov
lds
test
inc
add
xor
or
sub
movsb
sub
push
mov
es
popa
mov
or
and
hlt
addl
pushf
add
arpl
jo
pop
js
cmpsl
pushf
or
out
xchg
add
add
xchg
mov
mov
bound
push
jp
in
sbb
lods
push
mov
mov
xor
add
mov
xchg
hlt
and
shlb
adc
mov
out
loop
scas
adc
xchg
or
jns
or
popf
mov
bound
mov
addl
fimull
jle
sbb
cmp
pop
cmp
and
shll
mov
les
push
ret
js
sbb
stos
dec
xchg
jle
orb
dec
jns
imul
xchg
out
add
adcl
xor
push
rolb
out
jmp
xor
in
mov
sbb
je
cmc
fdivrl
mov
fstpl
ret
mov
add
adc
mov
pop
inc
out
add
cmp
xchg
and
mov
insl
mov
jmp
lcall
sbb
xchg
loopne
sub
jp
pusha
pop
fisubrs
mov
out
das
clc
jne
mov
and
daa
aam
pusha
inc
inc
xchg
jle
aaa
test
mov
lret
push
xchg
pop
or
jle
inc
cs
sub
or
lock
dec
call
mov
inc
sub
call
fbld
mov
mov
dec
rorb
sub
sub
divb
add
aaa
jnp
mov
int3
popa
sbb
or
sub
cmp
jo
xor
sbb
loopne
addr16
inc
jae
cmp
bound
adc
ljmp
or
ja
call
ret
mov
add
jnp
insb
daa
jo
dec
mov
or
fwait
rolb
ret
add
push
jb
aaa
imul
pop
xchg
sub
fadd
cmp
ret
stos
add
xchg
fwait
cmc
and
icebp
and
loopne
and
pop
add
xchg
mov
mov
iret
sbb
enter
xchg
and
mov
scas
and
push
ja
fldenv
stc
fmull
call
leave
jb
add
pop
pop
les
out
imul
lods
es
clc
sub
call
and
call
imul
loopne
push
inc
addr16
jl
insl
push
xor
cmc
jl
inc
mov
or
xor
xor
push
fimuls
or
pop
mov
inc
loopne
add
es
and
add
cmp
cli
addb
loopne
roll
push
daa
push
mov
pop
jecxz
sbb
pop
stos
inc
int
loope
xchg
and
hlt
loop
or
arpl
inc
sub
pop
mov
cmc
lahf
fisubl
rorl
xor
fdivr
lcall
je
inc
sbb
sbb
sbb
addr16
xor
and
xor
add
dec
jmp
pop
push
xchg
add
cmp
or
push
pop
and
push
mov
pop
pop
lret
ja
in
iret
cmp
iret
ret
and
xchg
push
inc
jo
push
or
test
adc
addb
inc
mov
insl
cmp
sti
in
mov
sbb
ss
push
mov
outsb
or
inc
daa
inc
xor
out
stos
add
jno
xchg
int
inc
or
mov
mov
and
add
cmp
cmpsl
and
push
and
push
outsb
shlb
xchg
jle
mov
movsb
out
push
inc
add
mov
add
jne
mov
lret
jae
inc
aam
add
es
inc
mov
dec
es
pop
or
mov
sbb
pop
gs
sbbb
add
inc
sub
test
arpl
cmp
adc
cwtl
add
inc
test
les
adc
mov
insb
push
cmp
andb
add
js
add
adc
daa
dec
adc
xor
adc
sub
ficoms
mov
cmpsl
cmp
add
cltd
push
mov
and
push
or
or
or
pop
test
xor
mov
sub
scas
outsl
in
lret
add
jmp
adc
sub
int3
add
aaa
js
xor
dec
jo
fidivs
adc
add
loope
add
dec
push
sub
in
aam
add
push
xchg
mov
mov
push
and
add
shrl
dec
daa
loope
aas
sbb
add
sbb
push
je
mov
or
mov
or
sub
or
jl
int3
and
data16
sub
outsl
hlt
jo
and
shrb
imul
mov
fisttpl
pop
sub
idiv
add
push
mov
xchg
jb
mov
jno
stos
sarb
hlt
jp
xchg
sbb
mov
jno
in
aam
mov
lods
das
fcomip
sbb
push
pop
cmpsl
pop
xchg
jge
pop
das
daa
lods
sub
sbb
mov
jp
int3
add
sbb
pop
and
ss
cs
ds
push
sub
sub
pop
sub
or
mov
lea
xor
xchg
outsb
cmp
pcmpgtd
ja
mov
inc
mov
imul
mov
push
or
xchg
mov
ss
add
scas
mov
xor
pop
mov
mov
loop
inc
pop
ret
add
imul
xor
mov
adc
add
js
sbb
scas
pop
lret
jmp
rcl
cs
cmp
sub
out
push
xor
ss
mov
ss
int3
rcll
mov
sbb
xor
mov
stos
aam
loopne
inc
movaps
rcl
pop
in
and
push
push
mov
mov
xor
push
mov
outsl
notl
jge
sub
xlat
or
mov
or
pop
and
insl
sub
adc
push
xor
lods
mov
fwait
adc
ret
add
pop
add
mov
xlat
add
cwtl
into
lods
cli
arpl
add
lods
jae
in
insl
and
bound
push
arpl
arpl
mov
push
push
push
jae
push
pusha
jne
int
jp
iret
mov
pavgb
and
mov
outsb
inc
stc
hlt
testb
insl
dec
jg
push
scas
ds
or
pop
repnz
mov
in
inc
add
sub
arpl
dec
jns
fisubs
neg
sbb
push
pop
fmull
pop
out
pop
mov
js
pop
add
push
cmp
arpl
push
jle
mov
pop
add
aam
popa
int
or
cmpb
cmp
pop
dec
inc
mov
or
movsb
inc
add
negl
xchg
xor
push
test
mov
mov
jmp
aad
push
sbb
pusha
cmpl
dec
push
loop
xor
push
mov
dec
das
push
push
imul
xlat
xchg
inc
inc
push
into
push
repz
ret
addr16
and
xor
sahf
sub
shll
neg
mov
or
dec
inc
outsb
imulb
scas
inc
sarb
mov
jg
and
lea
jle
fs
add
movsb
xchg
mov
in
and
ss
cmp
add
das
es
push
sub
or
loope
insb
les
jp
sahf
xor
scas
mov
mov
push
cld
test
and
sbb
add
insb
call
dec
sbb
hlt
add
stos
xor
popa
jecxz
in
sbb
test
lods
shlb
jno
push
ret
or
xchg
cmc
rcrl
stos
push
aad
ret
fldl
sbb
dec
sub
jle
sbb
cld
addl
pop
stos
icebp
shl
imul
sbb
sub
adc
fildll
loopne,pn
add
pop
xor
adc
cmp
inc
imul
fisubrl
stc
scas
jg
leave
sbb
and
aas
xchg
dec
push
xor
cmpsb
or
fadds
sbb
add
jle
mov
nop
push
out
lcall
fcomps
outsb
cmpsl
pusha
scas
ret
pop
pusha
es
push
xor
sub
mov
fnsave
add
lret
sbb
xor
rclb
gs
stc
pusha
mov
ss
cmp
mov
push
sub
lods
and
mov
xchg
dec
add
fbstp
pop
xor
sbb
mov
pop
bound
leave
mov
or
add
sbb
add
and
jmp
test
sbb
xor
outsl
or
sbb
sub
in
xor
pop
mov
and
xchg
orl
test
xchg
cmp
jge
roll
jbe
adc
and
test
inc
xchg
xchg
sub
sbb
into
popf
fs
loopne
xchg
push
sbb
es
add
add
aas
fdivrs
daa
mov
fimuls
adc
mov
pop
rol
rorl
xchg
loopne
out
int
jp
push
adc
push
into
push
add
inc
push
mov
dec
arpl
je
ss
ficoml
xor
or
pop
data16
and
pop
aaa
shl
outsl
jbe
ret
lods
mov
sub
sbb
jbe
frstor
sub
orb
sahf
je
inc
outsb
sbb
mov
sbb
mov
aam
xchg
and
pop
cli
mov
rclb
scas
push
lahf
pop
rolb
arpl
sub
lret
xor
jns
jbe
xorl
pop
mov
ss
inc
insl
shrl
ss
shlb
addr16
push
lea
movsl
sbb
adc
pop
imul
scas
mov
outsb
or
mov
ficoml
mov
and
jo
fisubrs
lods
es
push
jnp
ret
xor
pusha
and
jns
in
into
iret
sahf
push
jl
icebp
cmp
sbb
sub
in
xchg
or
int3
ret
jle
pop
inc
sbb
cmp
scas
aam
sub
adc
inc
iret
mov
int3
sbbl
add
inc
imul
in
insl
lahf
rcl
add
cmp
mov
add
jecxz
jo
push
sub
xor
scas
add
pop
or
sub
jg
push
arpl
cmp
negb
ljmp
inc
lods
add
lcall
mov
je
mov
outsb
and
dec
add
testl
inc
sub
jo
lods
and
pop
das
dec
xchg
lret
das
in
xor
roll
aad
mov
push
test
add
test
add
in
cmp
hlt
fdivl
out
lds
cmp
lahf
jge
pop
jb
or
aas
lret
clc
lret
xchg
or
sub
and
lods
jns
lds
mov
daa
je
testb
mov
stos
or
inc
cmp
mov
cmp
push
xor
add
dec
loopne
pop
clc
fildll
lahf
push
mov
sub
insl
pop
sub
jo
bound
aad
push
enter
cmpsl
sub
add
movsb
pop
xlat
in
add
sub
fcoms
stos
and
scas
xor
cmp
and
mov
cmc
sbb
add
lahf
pop
iret
sub
mov
test
aam
push
sub
sub
and
int3
cmp
mov
xor
dec
and
dec
iret
or
test
jp
ds
cld
test
mov
pop
aas
xor
or
or
or
or
pop
and
inc
add
mov
mov
adc
in
and
sbb
inc
outsl
adc
push
lods
dec
hlt
stos
dec
adc
sarb
outsb
test
add
push
pusha
inc
stos
xchg
cmpsl
cmp
mov
sub
xor
rcr
push
adc
pop
or
mov
fimull
orl
mov
mov
bound
push
test
and
inc
mov
aam
cmovbe
test
xchg
adc
in
enter
sbb
int
jnp
add
test
and
imul
pop
addr16
mov
and
iret
inc
and
fcoms
lahf
sbb
jp
mov
add
add
xor
xchg
and
push
pop
mov
stos
sbb
xchg
cmpsb
out
js
cmp
push
xor
je
scas
and
loopne
jae
inc
mov
dec
shlb
data16
test
popf
shrl
fidivl
hlt
cld
je
mov
mov
mov
adc
push
push
xor
xorl
jl
das
pop
inc
add
mov
adc
xlat
test
jne
loopnew
sbb
daa
sahf
shlb
dec
ss
les
xor
jmp
adc
xor
jmp
fwait
add
sub
pop
cmp
arpl
xchg
lods
adc
iret
inc
adc
or
pop
mov
insl
jbe
jno
addl
outsl
pusha
fcmovnu
add
and
add
test
std
notl
xchg
scas
lret
inc
cltd
jge
test
push
ret
pop
jecxz
aaa
xor
test
add
stos
sti
das
sbb
or
call
mov
inc
pop
xchg
aas
aaa
loopne
scas
and
dec
push
nop
loop
inc
push
lods
in
mov
push
je
repnz
out
sub
add
mov
stos
roll
aaa
outsb
sub
addb
mov
test
jb
jb
push
xchg
fistps
mov
dec
push
lret
push
arpl
or
add
lret
add
mov
dec
cmpsl
or
pop
fdivs
jl
xor
fwait
test
lods
iret
stc
or
icebp
and
sti
orb
rclb
xchg
fildl
cli
xor
ja
push
negl
jo
inc
in
stc
call
mov
inc
pop
pop
scas
lea
test
jns
out
in
xor
mov
ficoms
inc
lods
lcall
and
mov
add
xchg
and
dec
clc
jle
mov
and
xchg
pop
lcall
lret
popa
loope
inc
or
aam
push
xor
or
jo
ds
adc
sbb
das
jbe
lods
mov
add
xor
addr16
jo
fldl
in
inc
mov
mov
sub
loopne
xor
lret
xchg
sub
iret
fdivl
inc
mov
inc
dec
mov
test
mov
mov
test
push
arpl
stos
fsubs
nop
addr16
dec
add
stc
pop
add
into
sbb
je
stos
icebp
and
adc
sbb
adc
sub
test
xor
mov
mov
or
cmp
push
mulb
test
scas
jb
call
lahf
pop
xor
add
cwtl
icebp
stos
and
push
insb
dec
add
jge
arpl
imul
jle
pushf
dec
and
inc
aam
sub
sbb
xor
pusha
mov
notl
test
fdivrs
xor
or
cmp
scas
adc
pop
or
pop
mov
inc
iret
movsl
cmp
push
bnd
hlt
mov
sub
lcall
xchg
inc
hlt
pop
or
and
pop
les
xor
cwtl
loope
fxtract
add
and
or
mov
push
inc
shl
dec
mov
add
jne
shll
notb
pop
scas
cli
push
and
outsl
sub
es
inc
xlat
or
inc
add
cmp
cs
in
mov
mov
shll
push
imul
mov
lds
sbb
inc
jo
sbb
jle
shl
jo
push
iret
or
orl
loopne
lcall
dec
aam
outsl
insb
test
test
jl
or
in
daa
mov
cs
ret
mov
shr
cmc
xor
add
add
mov
roll
mov
mov
pop
adc
jb
push
mov
push
or
sub
es
mov
add
jg
cmp
mov
and
cmpsl
mov
sbb
loopne
aam
rorb
fwait
cwtl
stos
or
addb
ret
fistps
jmp
adc
in
lock
mov
jno
popa
and
dec
inc
and
rcrb
arpl
js
dec
mov
pop
sbb
ds
inc
sbb
push
mov
jno
push
push
mov
mov
push
inc
adc
push
pop
pop
mulb
shrb
pop
push
push
and
push
dec
push
pushf
sti
bound
shrl
or
sub
fwait
pop
push
push
dec
mov
jne
imul
adc
and
jb
inc
push
xacquire
mov
xchg
loope
loop
lahf
mov
je
push
xor
and
sbb
rorb
daa
movsl
xchg
add
gs
push
mov
add
es
xor
stos
mov
adc
mov
stos
push
sub
cmp
add
mov
andl
int
loopne
in
loopne
push
stos
push
xor
xchg
aaa
adcb
jecxz
pop
push
adc
rcl
fildll
fsts
pop
mov
mov
sbb
pop
adc
jle
adc
and
js
lods
jl
shl
pusha
jle
lods
jl
sbb
inc
in
popa
push
mov
jae
mov
xchg
test
push
jnp
xor
andb
or
into
out
fsts
leave
cmp
dec
and
sub
aaa
adcb
pop
sub
add
dec
lret
or
rol
push
sbb
mov
mov
cmpsb
sbb
dec
cwtl
iret
out
sub
sbb
sarl
sbb
int3
rorb
dec
jae
dec
push
sbb
in
in
ror
loop
aaa
mov
push
cwtl
push
mov
jae
mov
cmpxchg
add
stos
cmp
sbb
subb
mov
stos
jns
lret
add
lcall
lea
sub
sub
or
sbb
movsb
or
inc
xchg
mov
jnp
dec
cli
mov
scas
dec
mov
popa
out
mov
lea
in
mov
inc
popf
cwtl
push
jle
and
je
aam
inc
andl
pop
pop
test
or
adc
popa
push
popa
and
je
mov
rolb
and
out
mov
daa
js
xchg
or
fiaddl
in
add
ja
jo
aam
or
dec
mov
sub
push
xor
push
or
loope
outsl
mov
ss
xchg
jb
test
and
mov
add
dec
add
js
pop
push
and
mov
push
and
fcoml
jbe
ret
xchg
cmp
adc
stos
ret
dec
push
ds
clc
int3
arpl
sbb
adcb
jl
sbb
push
push
out
in
mov
or
sub
cmovo
sub
mov
arpl
iret
pop
and
popf
sub
and
sub
xor
sti
pop
inc
bound
mov
aaa
pop
cmc
sti
sbb
mov
frstor
or
std
pop
xchg
add
pop
xlat
int
cmp
mov
sub
pop
jne
xchg
push
xadd
jnp
adc
push
lods
out
push
loope
mov
jp
mov
and
add
addb
adc
xchg
bound
mov
rolb
cltd
sub
mov
xor
sbb
ds
insb
das
loope
or
hlt
loop
cmp
icebp
dec
push
andl
jbe
and
push
orb
cmp
sbb
push
cmp
inc
xchg
jle
rcrb
xor
arpl
mov
fxch
jbe
push
ja
xchg
repz
lods
iret
sbb
sub
xchg
bound
jnp
mov
call
test
add
dec
subb
cs
cmpsl
out
lock
jb
shll
icebp
push
data16
inc
mov
idiv
adc
mov
mov
je
fdivs
mov
pusha
lock
adc
cmpsb
jp
ret
mov
sub
sbb
xchg
or
test
push
mov
xlat
jo
and
adc
lcall
add
movsl
pop
xchg
push
dec
xor
sub
sub
into
js
adc
xor
xor
cli
inc
xor
dec
decl
add
shll
and
push
mov
cmp
cld
es
mov
imulb
imul
movsl
lret
inc
and
mov
xchg
cwtl
push
repz
fdivs
xchg
xor
push
and
adcb
bound
push
fwait
jno
jnp
or
mov
aas
mov
push
push
jno
or
xchg
push
mov
cmp
outsl
mov
pop
inc
mov
mov
mov
int
xchg
xchg
xchg
int3
cmpsb
xor
arpl
add
mov
pop
add
mov
push
dec
sub
out
in
cltd
pop
push
insb
popf
or
cmpsb
pop
enter
jmp
xchg
shlb
push
inc
lods
lret
adc
movsl
leave
pop
inc
mov
outsb
dec
xchg
mov
inc
xchg
add
call
add
stos
push
xor
push
mov
sbb
inc
les
mov
add
push
inc
iret
mov
test
addb
aam
push
push
sbb
and
and
push
jg
pusha
sbb
fiaddl
cwtl
sub
sbb
mov
cmp
push
sbb
xchg
xlat
fimuls
arpl
mov
cmp
imul
out
sub
inc
or
adc
dec
xchg
inc
adcb
stos
add
test
dec
push
mov
repz
lods
sub
or
mov
sahf
dec
dec
daa
jp
ret
xorb
es
push
xchg
push
jno
dec
insl
jnp
inc
adc
and
push
icebp
mov
push
jle
xchg
add
outsb
mov
sub
and
or
rolb
xchg
mov
cltd
in
adc
rolb
and
outsb
imul
pusha
shll
sbb
or
xchg
ss
mov
mov
fs
aad
aad
je
or
and
mov
cmp
dec
or
xchg
lret
ljmp
mov
push
hlt
adc
xlat
adc
push
movsl
push
add
rolb
loope
inc
mov
lea
sti
cmpsb
rolb
ss
push
movsb
addb
and
movsl
mov
jg
adcb
inc
fnstcw
outsl
sahf
sti
and
fadd
inc
mov
out
daa
and
and
bound
gs
xor
push
popa
adc
jo
xor
adc
out
adc
loop
mov
jo
add
adc
imul
xchg
adc
push
fwait
mov
mov
and
aam
fsubrs
loopne
dec
push
popf
orb
pop
xor
push
xor
adc
dec
sbb
adc
adc
push
jle
outsb
inc
mov
pop
imul
sub
pusha
pop
cli
ret
pop
xchg
out
dec
and
adcb
xor
andb
aam
fildl
sbb
push
dec
push
mov
jle
sub
xor
lods
add
jo
bound
dec
mov
aaa
push
sub
ret
imul
arpl
xor
mul
cmp
mov
ljmp
aaa
negl
pop
adc
mov
pop
fldl
push
das
xlat
mov
mov
or
lea
mov
fcomps
adc
push
push
es
mov
sbb
add
inc
popf
movsb
sbb
jmp
xorl
outsb
mov
push
or
shlb
and
lcall
ljmp
dec
push
adc
cmp
cltd
xchg
test
adc
inc
xor
adc
lea
jb
mov
in
daa
and
fwait
stos
jo
or
cmp
loop
into
add
mov
mov
stos
mov
cmc
jge
xchg
and
mov
cli
idivl
jb
popf
push
shrb
insl
push
roll
xor
mov
pop
mov
adc
adc
loope
jo
fcompl
jne
mov
decl
mov
jle
xchg
or
dec
dec
and
insl
jp
or
add
xchg
xorb
fs
jle
mov
pusha
push
adc
fs
add
mov
push
push
push
push
xchg
pop
add
rcrb
inc
and
test
incw
pop
shll
xchg
sub
mov
add
orb
int
xlat
adc
inc
dec
mov
xchg
cmp
fadd
loope
inc
cmp
pop
jae
fs
pop
xchg
je
sub
and
push
hlt
xor
or
cltd
les
js
add
pavgb
loop
sbb
mov
cs
sub
mov
mov
mov
pop
add
mov
add
stos
inc
jmp
sub
je
push
cmp
test
je
adc
pop
pusha
sbb
dec
xor
cmp
or
es
push
mov
subb
lret
xchg
inc
add
outsb
stos
push
fwait
call
dec
push
ror
je
xchg
push
and
les
hlt
pop
push
sbb
stc
push
clc
es
mov
mov
push
sbb
outsl
push
add
pop
mov
or
inc
mov
lods
jb
outsb
inc
xor
mov
outsb
subl
jo
xorl
mov
xchg
push
ljmp
inc
push
pop
jl
xchg
adc
dec
fcomps
and
add
xchg
outsl
divl
adc
push
xchg
adc
dec
mov
push
rorl
ljmp
cmp
mov
mov
imul
push
adc
mov
dec
push
inc
or
adc
push
adc
popf
into
jmp
iret
arpl
push
push
xor
inc
das
lock
inc
sub
and
push
fmuls
rcr
ret
jl
mov
out
lock
inc
add
inc
inc
xor
out
in
mov
shr
je
inc
mov
mov
in
lods
loope
loopne
adc
movzbl
xchg
loopne
or
lds
inc
add
jp
sbb
mov
mov
jmp
adc
sahf
pop
jge
fs
rorl
gs
inc
sbb
xor
pop
fwait
mov
xchg
in
mov
ret
fwait
adc
and
test
push
cmp
shrl
ja
leave
test
ret
movl
testb
push
cmp
cmpsb
or
sub
xchg
push
jo
cs
cmp
and
gs
out
sub
and
sbb
and
inc
test
andl
out
testl
add
aas
and
shrl
testl
sub
add
inc
sbb
in
dec
pop
jbe
mov
sub
mov
iret
add
cmp
lcall
imul
pop
cmp
xchg
add
iret
mov
rcll
push
out
cmp
test
mov
shrb
bound
push
and
mov
icebp
mov
inc
ss
sub
call
or
push
adc
ret
pop
or
insb
adc
push
fs
jno
sbb
and
leave
cmp
push
out
pushf
add
cmp
and
jl
aaa
mov
adc
fiadds
pusha
ret
lods
mov
bound
xchg
ljmp
dec
jns
adc
jno
daa
sub
dec
movsb
loope
and
ret
ret
fdivrs
cmp
pop
cwtl
add
cmp
outsl
ja
sub
scas
pop
push
jnp
sbb
mov
cmpsl
jbe
add
repz
pop
cmovns
mov
adc
fs
or
mov
scas
inc
push
daa
and
cmpl
sbb
push
sbb
movl
cmp
mov
cmc
lahf
inc
sbb
int
out
rolb
jno
mov
mov
inc
pop
in
lret
out
test
outsb
dec
lds
out
lds
lods
mov
sbb
clc
es
out
cmpsl
iret
jns
push
add
shll
orb
stos
adc
data16
mov
jbe
aam
add
imul
popa
cmp
scas
add
enter
fwait
je
fs
jae
scas
cwtl
jne
inc
les
and
fiaddl
mov
sub
scas
sbb
adc
jns
and
cltd
dec
inc
xor
loope
push
mov
sbb
sub
jg
stc
jne
jae
push
inc
in
insl
fdivrs
movsb
pop
imul
stos
fistl
adc
adc
inc
jae
sahf
sub
or
pop
inc
jmp
aad
bswap
and
nop
mov
sub
or
ret
lods
jns
add
and
hlt
push
mov
sbb
pop
mov
ljmp
mov
aaa
add
movb
stc
add
gs
insl
mov
imul
data16
into
inc
pop
or
aaa
ja
leave
xor
popa
push
mov
shl
jle
add
cmp
fcomps
mov
bound
sbb
or
hlt
addb
mov
dec
and
xor
mov
ja
mov
push
aaa
dec
sub
adc
ljmp
xor
fsubr
lods
in
mov
xor
movsl
mov
add
es
add
lahf
test
addb
sub
and
call
push
or
add
je
jbe
fcomp
sub
dec
add
out
or
sbb
sbb
outsl
jae
addr16
jo
movsb
add
add
or
mov
mov
fdivr
pushf
and
nop
and
fsubl
call
addl
mov
sub
mov
and
jns
and
int
lds
add
push
sub
mov
adc
dec
repz
add
mov
push
cmpl
jno
stos
gs
xchg
xorb
js
push
mov
js
push
jp
xorb
jg
cmp
mov
adc
push
xchg
sbb
and
pop
dec
and
in
mov
sahf
sbb
test
push
aaa
mov
push
xchg
inc
cmp
iret
jle
or
test
inc
arpl
lahf
push
jp
pushf
shll
xchg
push
mov
mov
fidivrl
jmp
add
popa
popa
push
in
xchg
adc
loope
add
pop
loopne
jmp
jo
insl
mov
push
push
jg
lret
inc
sbb
add
pop
push
aam
mov
ljmp
pop
push
xlat
and
xchg
sbb
addr16
mov
jo
subl
jae
lret
adc
test
addb
pop
daa
roll
pushw
push
ret
xor
cwtl
int
cwtl
test
push
sbb
push
aaa
and
enter
adc
mov
fistpll
mov
mov
in
out
pushf
cmp
and
or
sub
push
mov
mov
loopne
lds
mov
cmp
rclb
xor
jo
add
cmp
call
and
push
outsb
push
arpl
aad
dec
pop
or
adc
ret
loopne
push
mov
movsl
sbb
fldenv
add
gs
push
in
jae
ret
iret
insl
das
add
add
arpl
aas
xchg
and
movl
aaa
ds
lea
jecxz
ret
and
pop
push
outsb
jmp
mov
stos
jge
push
les
mov
and
cmc
add
mov
cs
jle
es
cmp
inc
stos
arpl
out
xchg
add
xchg
rorl
adc
dec
dec
sub
add
mov
int3
inc
popf
int3
and
pushf
jno
xchg
sbb
inc
movsl
dec
or
out
add
es
cli
or
and
leave
add
cmpsb
pop
rcl
xor
sub
movsb
subl
mov
sbb
aaa
data16
or
lds
mov
lcall
aaa
jb
insl
sub
add
lods
cwtl
jne
and
pop
repnz
pop
jl
pop
add
sbb
jecxz
dec
out
mov
iret
or
fs
cmpb
push
dec
jne
or
rcrb
fldcw
cwtl
push
sub
push
or
mov
sbb
aaa
cmp
jb
in
subl
jmp
sub
mov
scas
dec
mov
or
jg
aaa
and
pop
sbb
jge
or
lret
cmp
inc
push
push
xor
out
pop
jae
jb
adc
sub
lea
insb
add
fsub
sbb
or
sub
sbb
lret
scas
cmp
add
js
and
push
int3
lahf
pop
hlt
in
cmp
sbb
js
movsb
loope
adc
sbb
sbb
popa
adc
xor
mov
dec
fildl
ss
icebp
and
add
pop
or
adc
lret
xor
loop
sbb
or
cwtl
cmp
mov
add
in
test
sbbl
pop
pop
or
fs
push
xchg
or
inc
stc
andl
pusha
rcr
das
lods
mov
sarb
add
add
or
and
xchg
out
push
fisubrs
std
inc
lock
das
leave
add
mov
jmp
insb
sub
jae
mov
xlat
adc
out
dec
jmp
sub
xchg
xor
push
nop
loopne
fisttps
sub
pop
sbb
mov
cmp
sbb
and
bound
xor
cmp
andl
push
dec
sar
out
sbb
pop
adc
pop
jno
adc
clc
inc
js
sbb
mov
mov
sahf
add
pop
fdivs
fistpl
es
jmp
popf
xor
into
sub
adc
dec
arpl
lea
je
out
push
es
xor
aam
enter
dec
mov
imul
xchg
pop
push
pop
stos
stos
popf
sbb
pop
mov
mov
mov
daa
sub
adc
sub
sbb
out
dec
adc
clc
cmp
enter
jecxz
loope
pusha
adc
pusha
popa
stos
mov
int
test
iret
dec
mov
stos
push
or
xor
add
ss
push
out
stos
add
imul
adc
push
decl
push
jl
divl
clc
aad
shrl
pop
mov
rcrl
lcall
out
lods
arpl
pop
lds
mov
push
dec
in
and
xor
pusha
jmp
sub
in
out
and
arpl
ljmp
inc
mov
hlt
scas
add
ret
and
inc
mov
mov
dec
add
sub
jge
add
loope
movsb
add
lcall
and
push
or
cmp
cmp
pusha
xor
xor
or
pop
sbb
repnz
jle
js
ret
push
lock
push
std
inc
aaa
adc
jmp
push
jp
add
mov
xor
push
jbe
jo
push
add
cs
jne
sbb
into
xor
scas
push
mov
dec
sti
sbb
jne
xor
rorb
cmp
jecxz
out
and
and
jno
or
cltd
dec
xchg
jne
and
mov
push
xchg
jae
and
xor
loopne
push
xor
and
dec
fisttpll
fldl
and
push
repnz
cmp
push
and
push
or
sbb
lock
jmp
ret
push
mov
mov
inc
or
mov
cmp
mov
mov
test
ficoms
rclb
sub
icebp
push
and
mov
or
push
cmpl
mov
les
in
adc
mov
adc
add
insl
xor
popf
adc
ds
sub
lods
jp
jb
lret
mov
int
mov
or
les
js
cs
std
and
mov
cmp
out
jmp
fmul
add
or
lods
xor
scas
pcmpeqd
add
sub
pop
fstpt
daa
pusha
push
lock
cmpsl
hlt
outsl
je
push
or
mov
movl
and
and
pusha
push
mov
mov
in
aam
out
mov
push
mov
addr16
xchg
sbb
in
pop
dec
xor
sub
sbb
inc
xor
repz
add
dec
lcall
scas
sahf
das
xchg
sti
lock
inc
sub
jbe
jns
add
arpl
add
push
xchg
add
out
cld
rclb
loopne
icebp
jne
into
mov
xchg
jb
mov
cltd
lods
out
lods
mov
jb
popf
iret
sub
jbe
pop
hlt
mov
dec
pop
xor
push
mov
addr16
inc
dec
mov
pop
in
in
arpl
sbb
sub
xor
popa
or
loope
push
shll
test
call
pop
es
scas
push
jbe
pop
mov
dec
aam
add
out
xchg
lods
jnp
icebp
jb
stos
fwait
xor
xor
adc
push
cmp
lods
shl
xor
xor
jge
cs
rclb
mov
inc
loopne
jbe
add
sub
xor
or
pop
gs
adc
insl
mov
xchg
testl
fdivl
mov
pop
arpl
xchg
gs
add
popf
inc
je
sbb
enter
shrb
pushf
cmp
inc
cltd
jb
adc
sbb
pushf
fldcw
shrb
out
mov
sub
jge
in
lock
push
mov
out
add
loopne
test
jbe
inc
jmp
sub
data16
cwtl
adc
jmp
shll
adc
icebp
or
adc
cmpsl
cmp
aaa
fistps
out
insb
xor
adc
int
popf
sub
in
rcll
mov
enter
xchg
xorl
pop
xchg
mov
fisubs
test
mov
push
mov
setle
and
jae
jo
xchg
lds
add
outsb
in
ret
adc
test
fstps
les
test
cmp
jbe
out
sbb
in
mov
inc
cmp
adc
ss
sbb
add
or
popa
mov
fbstp
out
xlat
insl
in
sub
or
and
jne
cli
adc
hlt
xchg
jnp
xlat
add
int3
out
inc
add
sarl
mov
cld
add
and
call
sarb
jns
cmp
cmpsl
push
stos
or
imul
testb
xor
or
stos
sbb
pop
xor
or
sub
test
insl
test
in
mov
cmp
pop
dec
adc
ljmp
es
cmp
mov
add
inc
cwtl
adc
jecxz
into
cmpb
add
mov
mull
xchg
xor
cwtl
adc
into
stos
push
push
imul
subb
mov
call
test
jg
add
lods
dec
aaa
pop
cmp
mov
scas
pop
das
mov
adc
test
cmp
or
push
cmp
dec
cmpb
jno
mov
jmp
iret
roll
push
lods
test
or
mov
inc
sub
dec
in
pop
test
cltd
cmpl
push
jo
inc
jmp
fldenv
fcoml
or
cs
mov
add
sbb
and
jo
xor
cmp
inc
mov
dec
mov
repnz
inc
jp
sbb
cmp
scas
fistl
iret
inc
add
pushf
roll
aaa
mov
addl
jg
sbb
mov
cmpsl
adc
sbb
push
loope
call
sbb
pop
fdivrp
cltd
or
add
lods
mov
sbb
cmp
inc
pop
cmp
iret
pop
push
pop
sub
cmp
fs
sub
loopne
es
aam
adc
rolb
stos
imul
sub
inc
sub
lret
add
push
bnd
xorl
in
inc
in
xor
sub
cmp
add
mov
iret
xor
cmp
pinsrw
hlt
dec
dec
adc
mov
mov
fwait
xor
mov
pop
cs
dec
or
push
fsts
pop
inc
add
cmp
or
leave
cmp
inc
ss
mov
or
sub
mov
xor
cmpsb
arpl
scas
and
adc
into
push
stc
ljmp
or
popa
mov
push
adc
ss
jle
sub
out
cmp
and
mov
push
negl
pusha
jnp
jp
stos
push
or
cmp
push
push
mov
gs
cmp
fidivrs
sahf
rcrl
adc
call
mov
sub
filds
es
rcrl
lea
cli
pop
test
add
xchg
pop
sbb
add
jmp
ja
inc
add
mov
and
ficompl
aas
dec
loope
dec
pop
adc
lahf
mov
pushf
mov
sbb
mov
insl
insb
enter
add
cmp
mov
cmc
inc
dec
iret
sub
push
dec
es
popf
lahf
xchg
push
lret
jg
xor
jne
push
sbb
rcr
or
inc
test
mov
outsb
sti
shlb
aam
add
loope
jo
pop
mov
lret
imull
adc
fs
negb
dec
setp
push
sub
movsb
xchg
mov
add
jge
rolb
clc
push
mov
and
adc
adc
pop
jle
mov
mov
add
mov
add
cmp
push
fildl
aad
add
shl
or
cmp
dec
aad
mov
add
xor
fiaddl
jo
test
adcl
test
fmuls
lods
and
sub
dec
pusha
adc
pop
leave
pop
dec
movsl
pusha
rcrl
out
ja
fldt
imul
and
push
add
stos
enter
dec
sub
add
push
adc
push
iret
sahf
rorb
adc
test
push
pop
mov
push
fwait
mov
addb
aaa
xor
sarb
test
dec
dec
outsl
aas
lds
dec
orb
push
fmuls
or
pop
ljmp
jo
xor
pop
and
pop
sbbl
ja
ret
cli
push
test
test
dec
js
or
out
mov
cmp
push
xchg
movsb
add
adc
pushf
testl
fmull
adc
and
push
push
dec
cmp
xor
je
dec
out
fldt
rorl
or
jae
inc
mov
jmp
xor
xor
jne
adc
push
mov
sub
pop
test
dec
adc
mov
popa
push
or
das
push
test
inc
and
fbld
fs
mov
mov
insb
push
lcall
jae
inc
insl
or
inc
aaa
and
inc
pop
xchg
push
add
dec
ret
scas
add
mov
imul
mov
xorl
push
scas
cltd
mov
pop
mov
xchg
pop
sahf
movsl
pop
dec
rcrb
cs
sub
lods
sbb
icebp
shll
aaa
jmp
inc
fists
jmp
add
aad
sbb
das
iret
rcrl
sbb
sub
lahf
pop
pushf
sub
or
test
out
ret
push
lahf
dec
sbb
pop
inc
or
icebp
aam
mov
popa
adc
xchg
jbe
das
call
mov
mov
push
scas
stos
scas
inc
and
mov
xlat
sbb
mov
and
xor
or
js
ret
add
pusha
ss
jle
fwait
das
mov
mov
subl
adc
mov
roll
pop
add
inc
rcll
lods
inc
or
mov
and
sbb
pusha
repnz
repz
mov
mov
mov
js
lcall
fadds
xor
mov
xchg
pop
in
movsb
mov
add
cmc
or
add
stos
mov
scas
gs
ljmp
in
push
push
fidivl
das
scas
xor
and
cmp
jp
mul
push
adc
and
aaa
push
push
pop
pop
lock
xchg
cmp
jmp
cmc
sbb
sub
ljmp
pushf
stos
adc
push
test
sbb
mov
lcall
sbb
xchg
push
popa
mov
in
pop
bnd
sub
adc
adc
lea
gs
and
cwtl
in
xchg
sbb
stc
sbb
jo
xchg
lret
push
jb
mov
add
xor
fnstcw
push
movl
ljmp
out
or
mov
lock
hlt
rol
fcmovb
add
and
cs
or
das
lea
xchg
mov
cltd
scas
dec
iret
sbb
mov
jo
fsubs
lock
pushf
es
sub
js
push
cmpsl
mov
clc
bound
push
jae
pop
andb
adc
lahf
push
and
inc
jp
mov
xchg
xchg
cmp
into
or
add
cwtl
mov
inc
iret
jl
das
ret
and
push
and
insb
xchg
sub
add
out
xor
cld
stos
push
test
loop
jle
xchg
arpl
ret
loope
add
out
rcll
scas
jp
cmp
mov
nop
jno
lcall
test
call
int
and
jmp
mov
flds
sti
and
lods
mov
jl
inc
mov
cwtl
in
pop
inc
out
mov
mov
test
dec
xchg
test
and
ja
not
mov
mov
cmp
adc
adc
push
push
pop
push
loopne
loop
sub
mov
mov
add
inc
jecxz
xchg
mov
dec
xlat
or
aad
add
jle
call
aam
fcomp
mov
jo
ret
and
and
nop
out
add
add
cwtl
mov
mov
mov
insb
testl
push
sahf
dec
out
xor
mov
fs
loopne
test
mov
cmp
jp
cmp
lods
bound
xchg
adc
push
cmpsl
bound
add
rorl
push
stos
jbe
push
pusha
adc
pop
add
fcompl
adc
sub
jmp
pop
cmp
jo
and
add
push
sub
cmp
pop
fidivrs
sbb
imul
pop
sbb
sbb
and
popa
sbb
push
and
test
fldenv
mov
lret
adc
repnz
dec
and
scas
lahf
jmp
mov
lds
push
aam
cmpsb
sub
sbbb
rcr
adc
or
and
out
pop
test
push
push
pop
or
orl
ljmp
push
add
and
xchg
inc
movsb
movsl
and
inc
push
aas
adc
fstps
push
out
sub
sub
xchg
in
aas
insl
cwtl
sbb
push
and
mov
js
and
outsb
push
mov
and
sub
divb
adc
out
out
xchg
imul
lds
push
shl
pop
xchg
sbb
jno
sahf
arpl
add
mov
xchg
and
std
mov
loopne
mov
insl
push
aas
jnp
sbb
or
sub
in
mull
aas
inc
sub
xor
cli
push
mov
mov
jle
dec
push
daa
sub
add
loopne
daa
xchg
or
cmp
stos
pop
jb
add
test
or
jne
jl
or
dec
inc
cs
outsl
sbb
and
sti
scas
in
inc
adc
jno
pop
add
dec
lods
std
test
push
ror
sub
xchg
sub
subl
add
pcmpgtd
into
mov
fdivs
fmull
inc
dec
or
in
cmp
rcl
jge
xchg
sbb
add
xchg
rcl
stc
xchg
add
iret
sbb
lret
dec
sbb
add
or
daa
ss
mov
jg
rorl
or
lea
and
cmc
dec
mov
es
fisubrs
jmp
pop
addr16
add
jnp
mov
pop
adc
and
xor
imul
add
cmp
jge
xor
push
test
out
xchg
leave
ficoml
inc
add
fildl
inc
xor
movsb
mov
or
sbb
dec
pop
mov
push
sbb
jp
sub
jl
adc
int
jge
adc
and
hlt
stos
aas
aaa
add
lock
add
jge
and
sbb
mov
fidivl
clc
sbb
shr
aas
xchg
jg
pusha
rol
inc
cmpsl
andl
mov
sbb
add
mov
fimuls
jge
inc
or
loopne
and
mov
mov
rorl
mov
test
cmp
xor
add
jl
inc
push
and
or
loope
test
adc
and
pop
jmp
lods
xor
sub
testl
or
adcl
mov
sbb
out
aam
andb
add
or
insb
jl
rcl
xorb
cltd
in
fisttpl
jbe
cmp
je
push
fwait
aad
pop
les
sbb
out
daa
into
dec
inc
test
dec
adc
test
les
in
adc
xchg
mov
pop
push
add
xor
fiadds
movd
push
xchg
sbb
lahf
push
jp
iret
outsb
mov
cs
ja
inc
movsl
ja
or
jno
jecxz
cld
dec
lods
mov
stos
setnp
push
cmpsl
loop
inc
and
add
daa
jmp
fildl
ja
xchg
daa
daa
mov
test
sub
jle
les
inc
gs
adc
jecxz
cmp
jno
into
mov
adc
push
popa
or
lea
sub
out
mov
or
adc
test
sbb
jne
js
shrb
fcomps
mov
add
test
cwtl
sub
into
ret
movsb
mov
test
or
sahf
dec
inc
int3
mov
or
rcrl
bound
out
jle
ja
test
sbb
daa
shlb
or
pop
loop,pn
adc
ret
sbb
xchg
and
add
bound
stos
jno
adc
addr16
inc
inc
roll
and
sarb
faddl
mov
push
stos
xchg
das
jge
inc
xor
cmpb
and
inc
mov
xor
ret
arpl
negb
lret
adc
and
out
out
inc
test
sub
cmc
hlt
or
and
rcll
and
push
in
sahf
pop
add
sub
mov
subb
mov
insb
hlt
or
push
mov
xchg
add
leave
das
jle
push
xchg
or
cli
adc
xchg
dec
mov
xor
in
mov
sbb
sbb
sub
dec
adc
ds
je
dec
add
in
data16
shlb
sub
pop
pop
pop
add
insb
iret
mov
loope
add
or
mov
aas
outsl
push
push
push
sbb
fsubl
shl
ja
add
inc
sub
sub
sub
add
xor
sahf
imul
int
sbb
sbb
pop
or
xchg
fidivs
lods
and
mov
add
lcall
cmp
add
rolb
add
or
and
cmp
xchg
scas
popl
andb
xchg
add
lahf
mov
call
add
or
imul
adc
add
pop
jle
push
les
fimuls
add
xor
hlt
test
sbb
or
lss
or
jle
add
bound
rcr
adc
cli
popf
mov
lods
xchg
xor
and
push
add
adcb
inc
jae
push
es
jg
dec
inc
cmp
adc
test
das
push
lock
pop
push
mov
sbb
addr16
dec
add
ss
mov
xor
xor
or
cwtl
adc
push
rorl
js
xlat
scas
fisubs
push
popa
xchg
xchg
sbb
add
enter
or
or
lcall
push
cmc
lcall
bound
mov
push
in
ret
add
lret
lret
gs
repnz
imul
pusha
jmp
divl
test
loop
in
data16
inc
dec
xor
cwtl
jo
iret
pop
xor
adc
mov
xor
std
sub
aaa
fadds
mov
adc
pusha
das
in
pop
lret
ja
popa
out
mov
or
icebp
mov
rolb
pusha
add
fucomip
data16
sbbb
scas
fldenv
jns
add
add
push
shl
and
add
and
sub
inc
add
and
rcll
icebp
or
bound
pop
ret
cmpsb
dec
sub
rcrb
push
cmp
popf
and
mov
mov
inc
lcall
mov
adc
faddp
clc
add
push
push
jo
leave
mov
sbb
mov
push
shll
jns
mov
aas
rcl
in
pusha
ja
inc
add
jbe
popa
jecxz
lods
add
mov
aad
test
mov
or
pop
iret
mov
dec
int3
sub
into
cmp
push
icebp
repnz
jl
adc
push
add
ret
leave
jmp
sbb
test
movsb
push
mov
sub
outsb
inc
inc
jbe
mov
dec
lret
popf
sub
inc
add
shlb
rclb
iret
into
push
sub
pop
add
and
shll
adcl
push
aaa
stos
jns
loop
call
inc
and
pop
ljmp
int
add
jge
nop
mov
inc
adc
test
in
das
push
dec
and
lcall
lret
testl
dec
mov
je
mov
or
xor
cmp
and
jo
dec
rorb
and
adc
mov
mov
insl
jbe
xor
or
mov
push
push
add
or
test
ret
ret
cltd
push
push
aam
and
xchg
push
jnp
cld
dec
int
pop
xchg
stos
xor
and
push
int
xor
mov
pop
push
xor
ficoms
cmp
sbb
cmp
inc
stos
js
imul
inc
cmc
fwait
int
sub
test
sbb
out
stos
add
mov
sub
cmp
adcb
clc
and
shlb
push
mov
add
sub
push
inc
push
fisubl
rcrl
sbb
jne
sbb
jl
ja
xlat
xor
ror
rcl
or
mov
xor
sbb
test
pop
mov
xchg
or
fisubrl
jbe
or
shll
nop
stc
adc
js
in
sbb
push
or
shrl
insb
and
sbbb
sahf
jns
jmp
xor
and
jmp
dec
sub
movsl
and
mov
leave
push
cmovle
fwait
int
bound
cmpsl
test
out
mov
add
inc
xorb
add
loope
or
test
and
ror
xlat
cmp
in
jecxz
xor
popf
mov
scas
mov
lds
sub
push
sub
or
adc
ret
adc
mov
lea
xchg
cmp
lock
add
jmp
jno
adc
ds
mov
and
pop
into
imul
pop
cmp
aam
aam
je
scas
popa
popf
jmp
sub
test
sub
pop
inc
les
inc
add
and
into
and
add
imul
int3
jp
adc
subb
daa
sbb
push
or
subb
cmp
shrl
sub
shll
fsubrs
call
ror
mov
ja
jp
sbb
jle
ret
inc
in
pop
adc
pop
mov
xchg
and
stos
add
add
push
cmp
clc
insl
dec
dec
cmp
dec
jl
pop
sub
popa
jmp
sbb
lcall
pop
push
pop
push
adc
pusha
push
fldt
int3
and
test
sbb
test
repnz
inc
ljmp
mov
sub
push
xor
xchg
aaa
addl
and
or
jne
pop
mov
loope
jp
pop
mov
pop
add
push
jp
lds
jnp
dec
mov
sub
jmp
cld
dec
loope
inc
and
push
adc
pusha
testb
loopne
xchg
loope
jb
popf
es
inc
stc
pusha
cmc
jno
lea
sub
clc
rcrl
lods
lret
pop
and
add
das
and
lods
xor
ja
add
mov
jge
mov
ret
pop
test
add
cs
push
adc
push
push
testb
adc
inc
rolb
testl
lcall
mov
push
lock
mov
push
mov
les
gs
jmp
jo
or
xchg
out
ret
cwtl
aad
fdivl
in
rclb
add
lds
leave
jbe
stos
shrl
sti
cmc
inc
out
stos
fcoml
lret
cmpsl
add
sti
adcb
jo
sbb
inc
or
aam
stos
and
cmp
adc
add
jno
push
sub
test
je
xchg
div
rorl
push
sub
mov
or
scas
and
mov
and
loopne
jmp
rclb
cwtl
loopne
adc
stos
adcb
xor
and
and
xor
xchg
jno
adcl
adc
out
mov
push
cmp
mov
dec
adc
imul
or
or
mov
xor
das
push
adc
dec
sub
lcall
dec
pop
fadds
cld
iret
xor
imul
or
dec
faddl
je
fdivrs
loopne
mov
ror
xchg
je
adc
out
addl
rclb
cmp
out
in
fists
xor
add
decb
sbb
or
cwtl
outsb
test
pop
pop
lock
lahf
adc
inc
and
rcrl
lds
mov
dec
sahf
dec
rorb
adc
inc
movb
or
push
aaa
or
mov
push
adc
add
movsb
dec
sub
mov
sti
or
adc
std
nop
cli
stos
ret
mov
imul
mov
hlt
xchg
adc
push
orl
popa
xor
dec
int
cmp
addr16
adc
pop
cmp
shll
ljmp
sbb
add
imul
mov
push
loopne
xchg
adc
xor
aaa
movsb
das
sub
cmp
popl
js
ret
xlat
mov
bound
adcb
bound
ret
sub
out
hlt
mov
add
xchg
ds
ds
add
pop
push
or
sub
not
jmp
pop
fisubrs
push
xor
adc
shrl
aam
jnp
cmc
add
mov
rcrb
mov
aas
sbb
sbb
add
test
inc
xor
imul
jae
push
sub
and
lock
out
xor
scas
in
pop
and
lcall
out
in
mov
jo
adc
mov
inc
or
mov
mov
arpl
outsl
push
inc
leave
in
or
movsb
pop
xchg
call
ror
adc
and
cmp
or
jno
jecxz
and
repz
pop
setl
scas
stc
rcrl
inc
push
jo
add
mov
aad
inc
mov
and
pop
jo
push
loope
rorb
add
push
sub
push
test
shlb
jb
ljmp
add
mov
cmp
iret
push
outsb
and
jnp
fmuls
hlt
unpcklps
inc
xchg
jb
cmpsl
orb
pop
or
xchg
data16
negb
fcmove
push
cmp
xlat
and
mov
fdivrs
lods
jbe
lahf
leave
call
lahf
sti
in
inc
pushf
add
bound
aas
dec
add
mov
sahf
push
jmp
cmc
ja
mov
cmp
out
daa
scas
sub
insb
test
or
iret
xor
push
mov
xchg
dec
add
push
outsl
pop
or
xchg
cmc
fs
lcall
cwtl
hlt
xchg
jl
stos
or
cmp
ret
hlt
inc
adc
jl
push
or
push
movl
rcr
add
jo
loop
jne
add
lods
adc
mov
mov
cwtl
imul
mov
lret
mov
lds
push
fldl
add
lods
ja
dec
popf
ss
cmpl
scas
and
sub
test
stos
out
ja
popf
inc
xchg
inc
fs
sahf
and
push
and
fsubrs
rolb
pushf
add
push
pop
inc
fs
icebp
dec
inc
jmp
pop
cmpb
ja
sbb
in
ljmp
arpl
fisttpl
mov
cwtl
je
cwtl
push
dec
and
xor
sbb
push
mov
iret
in
add
and
ja
add
push
cwtl
adc
and
sarb
jne
imul
and
or
les
pop
inc
enter
add
and
pusha
sub
rclb
popa
and
mov
ja
adcl
pop
test
cmc
stos
pop
sbb
mov
pop
pop
pushf
pop
jecxz
xor
jecxz
sbb
shll
shl
out
test
std
add
push
das
fistpll
pop
push
leave
cmp
test
xor
adc
or
sbb
mov
adc
dec
dec
dec
cwtl
jo
inc
sbb
add
jno
and
shlb
sbb
xor
popa
add
mov
and
push
rcrb
dec
cltd
jo
or
or
je
push
adc
shll
dec
inc
add
shll
sbbb
sub
add
or
xor
mov
out
addb
push
add
ret
adcb
andb
idivl
inc
inc
xor
outsb
je
jo
add
sbb
gs
inc
add
repnz
sbb
dec
jns
cmpsl
or
insb
dec
mov
jp
es
and
lods
repnz
dec
iret
or
stos
and
inc
jg
or
adc
jno
adc
or
adc
mov
xchg
mov
mov
out
shld
push
mov
in
sbb
adc
fsubp
pop
add
sbb
adc
adc
daa
cmc
jns
push
push
fwait
ret
test
push
mov
push
and
cmp
push
lock
and
imul
inc
mov
xor
jns
and
sub
and
sbb
inc
hlt
enter
cmp
xchg
ss
jae
xchg
mov
adc
andb
pop
cltd
lods
jp
push
push
and
add
scas
dec
mov
sub
cmp
jns
dec
icebp
inc
aad
lret
jb
sahf
xor
jle
scas
mov
push
xor
mov
sub
and
nop
and
or
ljmp
stos
pusha
jae
ja
imul
sbb
addr16
xor
imul
sub
in
and
ja
lock
rclb
cld
pop
adc
pop
fdivl
cmp
outsl
pop
mov
subl
lds
or
inc
inc
lods
arpl
or
add
xor
pop
ss
out
test
mov
sarb
jae
push
fisttps
ljmp
mov
mov
lret
add
jbe
xchg
push
adc
add
mov
cmpsl
aaa
ja
aaa
or
sub
pop
iret
shrl
mov
mov
lods
xor
ret
movsb
jle
xor
jl
adc
lods
and
push
cltd
jb
aad
lea
mov
aad
das
gs
aad
push
add
jno
gs
add
outsb
mov
add
inc
arpl
sahf
jmp
mov
jb
pop
sti
mov
adc
sarb
pop
leave
ljmp
fbld
js
aaa
popa
and
out
gs
jle
pop
stos
fisubs
or
das
add
jge
fisttpll
mov
jmp
movsl
cmp
test
xor
lahf
mov
ds
cld
sub
jno
xor
mov
push
mov
mov
mov
mov
je
shrb
or
bound
pusha
lret
lret
fucomip
xor
js
loopne
xchg
int
inc
aad
push
sti
adc
fdivs
lock
aam
dec
add
aaa
cltd
sahf
jae
adcb
ret
std
jnp
js
push
les
jl
stos
sbb
xor
mov
inc
xchg
push
push
adc
adc
adc
xchg
sub
aam
mov
lahf
int
mov
push
ss
jbe
push
xlat
pushf
cwtl
aam
push
jl
mov
stos
sub
or
xchg
mov
cmp
jle
mov
add
cmc
ret
pop
and
jae
inc
movmskps
pop
ss
jno
or
lds
add
mov
inc
je
aaa
push
iret
xchg
adc
push
add
push
xor
mov
xor
add
aaa
xor
pop
xor
das
inc
jae
jge
lock
mov
adc
push
cmp
sti
xor
js
es
dec
mov
das
fs
push
adc
xor
ret
pop
jmp
pop
add
loopne
cwtl
adc
pop
adc
sub
je
movsl
add
add
inc
or
mov
inc
in
pusha
jg
icebp
pop
adcl
lock
les
push
aaa
addb
add
or
sub
jnp
lock
jmp
cmp
push
leave
push
xor
sub
push
fs
sbb
mov
or
xorb
loop
sbb
scas
iret
das
lock
bound
and
popa
divl
dec
xchg
das
mov
mov
push
idivl
inc
xor
test
stc
fstl
loopne
inc
lods
sbb
or
pop
xchg
test
adc
fisubs
add
in
mov
shll
jecxz
or
adc
mov
xor
pop
xchg
sub
add
adc
push
mov
mov
nop
jp
cwtl
or
inc
jo
js
or
dec
sbb
push
and
add
movsb
jmp
and
cwtl
popa
pop
mov
pop
aad
pop
adc
fimuls
ficomps
shl
scas
scas
push
shrl
sub
scas
stos
push
mov
popf
sub
push
shll
mov
fdivr
fcomps
loopne
sarb
sub
jmp
push
dec
mov
xchg
sub
mov
mov
aam
sub
orl
xchg
or
or
push
cmp
and
ret
sbb
pushf
call
mov
sbb
adc
adc
rclb
inc
jno
js
lods
and
ficompl
dec
pop
jle
insl
popf
mov
adc
arpl
mov
inc
fsubrs
inc
out
inc
ja
scas
movsl
sahf
movsb
inc
mov
orb
scas
pusha
aaa
imulb
jle
mov
sbb
out
mov
dec
mov
sbb
cli
in
or
xor
xor
lods
in
inc
add
lcall
adc
pusha
ja
dec
jge
ss
mov
jg
fldenv
les
pop
repz
mov
cmp
push
call
daa
dec
arpl
push
mov
cmp
lods
mov
loope
sbb
out
mov
fwait
adc
sub
aam
test
xor
mov
sub
sub
rcrb
and
scas
mov
stos
add
pusha
push
push
mov
out
adc
fs
mov
mov
xor
pop
xchg
imul
aam
andb
inc
pop
pusha
scas
jge
aad
sbb
daa
push
xor
pop
sbb
pop
or
add
sahf
mov
or
mov
daa
fisttpll
push
sub
fldt
stos
retw
jbe
or
jmp
test
fstl
faddl
arpl
inc
call
mov
adc
repz
cmp
into
xchg
aam
mov
outsl
das
je
mov
mov
cmpsl
dec
rsm
or
push
or
stos
xlat
add
or
and
pop
pop
pop
rclb
out
inc
ret
test
sub
mov
loope
mov
or
icebp
insw
mov
pop
add
arpl
cmp
mov
addl
mov
cmp
sub
das
js
loopne
sub
enter
push
in
mov
in
xlat
inc
mov
xchg
or
fisubs
pop
mov
push
and
or
push
cmc
or
push
shrl
fidivrl
xor
adc
mov
sbb
sbb
fadd
cltd
or
dec
test
add
xor
sbb
shrb
jge
lock
adc
cmp
add
or
push
cltd
out
out
addb
sbb
in
and
sbb
stc
jge
add
fsubl
sbb
popa
jecxz
adc
inc
xor
adc
std
xor
or
popl
dec
xor
push
mov
sub
bound
cmpsb
mov
or
pop
push
push
je
int3
sub
xchg
daa
push
and
add
cmp
sub
stos
xor
dec
clc
or
or
stos
xchg
loopne
movsb
loope
dec
add
aaa
sub
popa
adc
ljmp
je
out
adc
out
dec
mov
jle
cmp
js
fstpt
sub
test
ljmp
sub
shrl
sub
mov
dec
scas
sub
js
pop
inc
add
adc
inc
faddp
mov
xor
push
add
jbe
mov
in
movl
xchg
mov
sub
mov
xchg
and
ret
leave
inc
arpl
popf
pop
cltd
xor
push
ss
add
xchg
dec
test
push
jo
pop
and
push
add
nop
xchg
jb
or
lds
inc
push
stc
popf
aam
mov
xlat
add
sbb
ja
or
add
clc
into
pop
adc
push
adc
cwtl
jmp
push
xchg
add
lret
xor
dec
inc
stos
mov
sub
or
hlt
push
adc
in
test
mov
mov
fcompl
or
lahf
fistpl
or
push
dec
lcall
addb
xchg
jo
in
push
dec
or
mov
cwtl
mov
xchg
jno
mov
adc
and
push
loope
les
sarl
mov
lods
push
push
mov
fistpl
mov
iret
push
pop
xor
push
popl
stos
sbb
es
sahf
rcrl
push
lods
cs
sbb
iret
jne
fsubr
or
adc
xor
push
pop
jae
orl
in
adc
sub
bound
das
pop
gs
or
jns
adcb
mov
adc
dec
mov
data16
mov
adc
int
add
push
ror
ret
test
adc
or
jnp
adc
push
sbb
out
sub
fs
push
pop
out
pop
aaa
test
and
or
and
fldl
or
push
inc
jb
inc
jne
sub
push
jl
add
xchg
in
cmp
push
add
pop
xor
inc
xchg
xchg
mov
xchg
ja
test
add
sarl
and
xlat
popf
out
add
sbb
push
sub
xor
inc
or
leave
mov
push
jg
and
push
or
fimull
dec
icebp
mov
movsb
fistps
jp
lods
xchg
test
sbb
sti
and
rclb
pop
add
cmp
dec
pop
sbb
push
sbb
push
mov
stos
jle
or
xor
and
adc
pop
adc
test
xchg
adc
push
add
mov
cmp
mov
adc
inc
rcrb
pop
and
xchg
add
cmp
das
lret
or
fsub
pop
clc
or
inc
leave
push
add
stos
test
add
data16
aad
orb
mov
sbb
and
call
fimuls
adc
pop
push
popa
aaa
sbb
rclb
mov
movsb
iret
or
hlt
ret
clc
out
iret
mov
jle
xchg
add
int
rcr
iret
pop
adc
fs
aam
popf
repnz
ljmp
push
lods
lds
cmc
loope
add
mov
push
jo
pop
hlt
and
push
insl
or
mov
loope
inc
sub
add
jmp
and
in
dec
nop
mov
repz
add
xchg
fdivs
push
xorl
inc
push
in
rclb
xor
cmpsb
mov
and
dec
mov
arpl
cmpsl
mov
cltd
aam
add
movsb
lret
mov
test
call
arpl
sti
fisubl
push
xchg
sbb
ja
and
or
push
andl
mov
lret
and
mov
jl
sbb
dec
jne
dec
aaa
repz
xor
or
inc
push
iret
icebp
imul
test
xchg
adc
cmp
xlat
vmovshdup
or
sbb
or
sub
inc
inc
cmp
add
aam
imul
call
bound
psrad
xor
dec
add
xor
push
xchg
push
xor
add
jmp
push
and
inc
push
xchg
out
add
jp
iret
dec
adc
call
and
orb
js
sbb
jmp
mov
and
push
dec
das
xchg
and
sub
add
pop
cmp
test
pop
cs
mov
xchg
adc
subl
pop
sbb
inc
lea
xchg
andl
jae
mov
pop
notb
add
mov
mov
stos
push
lahf
clc
out
sub
push
je
iret
cwtl
and
mov
add
fdivrl
in
add
push
fcmove
enter
push
and
ljmp
test
sub
adcl
es
andb
sbb
push
push
jbe
push
sbb
fstps
add
sub
jb
movsb
or
or
fneni(8087
pop
add
cmp
cmc
sub
push
mov
cltd
sub
lock
adc
lret
pop
std
xchg
out
and
fs
mov
rolb
sbb
mov
add
lea
adc
out
and
cmp
pop
jae
mov
fsts
sub
out
bound
call
sbb
jecxz
jno
mov
int3
pop
shrl
or
popf
data16
imul
imul
cmp
aad
loop
or
cmpsl
daa
and
mov
or
ljmp
movb
cmpsl
push
test
dec
iret
leave
stos
inc
push
test
push
repz
and
scas
in
cmpsl
dec
daa
push
gs
int
loopne
imul
and
stos
test
or
shll
push
out
xchg
mov
add
lods
testl
jnp
repz
adc
xchg
or
pop
and
dec
and
cmp
enter
into
cmc
push
cmp
sub
mov
pop
aad
push
xchg
mov
sub
sub
icebp
and
xor
push
or
rorb
pop
adc
jp
mov
mov
frstor
jo
out
sbb
adc
andb
xchg
mov
sub
pushf
cltd
cltd
sub
cltd
pop
and
out
pop
out
sub
inc
inc
add
ja
cltd
cwtl
add
mov
cmp
add
mov
addr16
mov
pop
adc
fbld
sbb
jbe
xor
mulb
pushf
fwait
sub
xor
jbe
lcall
jp
mov
sub
cmp
sarl
or
inc
sbb
shl
and
arpl
mov
adc
mov
nop
das
movsb
popa
xchg
out
mov
addr16
push
jecxz
inc
aaa
nop
clc
push
adc
sub
xlat
insb
or
and
dec
mov
ja
mov
adc
sbb
xor
inc
mov
add
call
mov
mov
out
or
dec
xor
fldl
sbb
shrb
mov
mov
sbb
and
push
xchg
out
add
push
add
in
add
sbb
or
hlt
loop
mov
pop
adc
add
or
pop
adc
ds
fdivl
js
adc
cli
add
scas
dec
pop
stos
mov
movsl
scas
sub
cmpb
sub
add
mov
mov
sti
into
test
arpl
loopne
and
clc
mov
mov
or
in
es
cmp
rclb
adc
scas
lock
out
outsl
in
add
or
mov
jmp
jae
repnz
mov
pop
rorl
or
dec
add
fldl
fistpll
add
lret
mov
push
test
std
push
mov
imulb
pusha
and
jbe
iret
adc
sub
and
dec
ret
cmp
sti
sub
sub
or
add
insl
add
lea
cmp
sbb
mov
aaa
pop
das
xchg
sbb
lock
pop
daa
test
mov
imul
fisubs
cmp
dec
fwait
in
inc
fwait
sti
push
pop
inc
mov
pop
sub
jg
scas
bound
scas
mov
mov
mov
out
jnp
int
lds
xchg
and
fistl
scas
pop
insl
mov
pushf
roll
or
sbb
ret
adc
sbb
fsubs
lods
sbb
outsb
sbb
bound
jle
xor
outsl
aam
iret
add
es
ss
mov
int3
sub
mov
pop
int3
shlb
jg
imul
and
insb
shrl
xchg
data16
ja
and
adc
xchg
fwait
stos
cs
push
ja
iret
cmp
pusha
lods
mov
out
scas
repz
inc
frstor
add
adc
call
jecxz
cmp
inc
iret
bound
adcb
and
fistl
sti
js
add
push
das
rcrb
addr16
add
jns
movsl
int
mov
addr16
nop
add
call
mov
adcl
stc
adc
dec
inc
push
mov
ljmp
shll
ja
cmp
fldl
cmpsb
jnp
fildl
mov
sbb
mov
lock
addr16
mov
scas
and
dec
xchg
sahf
cmpsb
iret
sub
pusha
fnstsw
sbb
out
outsl
sub
xchg
inc
fstps
punpcklwd
or
adc
data16
and
mov
or
adc
sub
sbbb
aas
add
cmp
insl
addb
add
cmp
adc
mov
adc
add
dec
sub
add
mov
inc
frstor
push
xorb
sbb
orb
stos
inc
popa
dec
orl
loop
mov
inc
imul
pop
sbbl
enter
shl
enter
xor
iret
lea
test
xchg
fadds
call
pop
hlt
ja
fwait
jge
sbb
pop
lock
sbb
idivb
or
mov
sub
popa
push
ror
sbb
mov
mov
insl
push
out
fsubs
jne
sbb
or
test
add
sub
bound
fidivrl
mov
and
mov
daa
int3
cmp
and
test
xchg
mov
rcr
loopne,pn
jle
or
int3
sub
pop
les
stos
call
jne
push
inc
mul
jge
mov
hlt
stc
sub
inc
or
sub
stc
sbb
pop
arpl
push
je
test
push
and
sub
imul
and
sub
adc
or
and
add
sub
sub
cmp
std
sbb
rclb
push
inc
push
jo
outsl
out
imul
movsb
inc
dec
sub
popa
jg
sbb
inc
inc
push
sarl
sub
sarl
dec
mov
adc
pop
jmp
jmp
or
fimull
dec
flds
data16
lahf
orb
imul
sbb
repnz
ds
in
or
mov
mov
cmc
add
mull
cwtl
sbb
jmp
aaa
xor
ss
inc
dec
mov
jb
cs
cmp
out
sub
cmp
xlat
or
mov
or
out
adc
dec
insl
mov
es
sub
cmp
pop
and
pop
pop
or
cmpsl
add
pushf
fnstsw
jbe
mov
inc
or
out
fwait
sub
cmp
scas
out
mov
mov
aaa
push
test
test
rcr
orb
mov
int
fsubrs
fwait
imul
pop
xchg
inc
mov
xchg
nop
sub
mov
int
stos
leave
and
repnz
jbe
loop
jg
cmp
pop
fldl
xchg
pop
adc
adc
mov
mov
andb
xor
insb
lods
jno
hlt
subb
inc
cmp
sbb
pop
mov
inc
xor
dec
ret
xlat
push
ljmp
mov
xor
xchg
xor
stc
fldenv
mov
mov
jecxz
sbb
popa
fadds
int3
pop
popl
fiadds
sbbb
rcrl
push
out
mov
test
or
pop
inc
js
cs
mov
xor
fists
push
in
jne
jmp
mov
sub
aaa
and
lods
and
and
scas
test
mov
or
adc
lea
bound
loop
int3
mov
cmpsl
mov
fcmovu
mov
bound
in
cmp
cmp
or
addr16
add
adc
rcr
scas
test
vpmaskmovd
inc
or
mov
lds
sub
mov
push
pop
or
add
sar
or
pop
lahf
xchg
add
cmp
or
add
add
shrb
pop
sar
sti
sarb
sub
pusha
sar
loopne
das
std
in
arpl
or
lods
stc
adc
adc
push
xor
and
subl
out
sbb
add
adc
movl
jge
shrb
lods
xlat
pop
jb
pop
les
sbb
xchg
shl
movsl
xorb
dec
mov
and
aad
cmpsb
in
lock
movsl
in
call
imul
fwait
dec
sbb
fcmovnb
sbb
sti
or
cmp
in
shlb
pop
jno
lock
pop
add
or
out
or
idiv
decl
les
std
pop
in
into
inc
insb
fistl
push
fxch
addr16
mov
xchg
in
sub
push
test
es
and
xchg
cmp
cwtl
mov
adc
jae
cltd
call
inc
or
fcmovnu
and
nop
pop
adc
xlat
inc
mov
cs
xchg
xor
pop
add
arpl
ds
out
mov
xor
xor
daa
add
test
ds
rclb
or
xor
jbe
xor
repnz
jbe
jecxz
ds
mov
mov
xchg
bound
fcoms
scas
push
sbb
xchg
fsts
out
loope
sbb
adc
sbb
and
call
pop
add
dec
and
ret
gs
cmp
inc
cmp
ret
cmp
jbe
add
fsts
lods
jle
in
rcrb
scas
push
addl
mov
push
or
and
xor
mov
or
lahf
xor
negb
adcl
or
sbb
sbb
xchg
popa
mov
and
ss
adc
mov
push
push
or
adc
into
push
add
outsb
fucom
test
jmp
mov
out
inc
loop
cmp
out
add
jl
add
jns
clc
ja
cmc
addb
sbb
mov
imul
pop
movsb
pop
adc
or
sub
iret
into
mov
push
lock
mov
outsl
cmp
mov
dec
mov
and
jne
arpl
adc
mov
setg
adc
aam
jecxz
jbe
mov
insb
mov
xlat
pop
mov
xchg
mov
add
or
dec
pop
fwait
mov
and
inc
stos
test
add
fistps
in
mov
rcll
into
cmc
cmpl
aam
cli
idivb
add
jne
js
adc
xor
or
scas
dec
sbb
sbb
xchg
rorb
in
and
cmp
xchg
sbb
cwtl
int
aad
aas
xor
adc
outsb
enter
call
mov
aad
fsub
imul
ss
add
push
add
insl
push
or
pop
into
pop
sbb
sub
int
sarl
pop
mov
mov
in
out
cmp
lahf
das
adc
inc
mov
pop
mov
or
inc
or
arpl
or
loop
mov
dec
jl
pop
adc
sub
inc
dec
scas
adc
adc
pushf
add
inc
daa
add
ljmp
mov
or
stos
aas
faddl
andb
pop
push
and
popa
popa
lea
xchg
jne
shrl
into
cmp
pop
mov
rorb
lds
fistpl
sub
inc
mov
andl
mov
xchg
and
jl
dec
loop
dec
dec
push
adc
xor
dec
inc
cs
cmpsl
jne
negb
in
pop
insb
adc
imul
mov
xchg
mov
inc
inc
push
mov
lds
xor
lahf
mov
std
or
mov
fildl
mov
orb
fs
fldlg2
or
enter
xlat
push
js
xchg
mov
xchg
imul
and
inc
pop
xchg
hlt
push
pop
in
add
xchg
lock
leave
fidivl
push
aaa
pop
mov
int
inc
mov
jge
and
shrb
cmp
jge
out
jnp
xlat
fsubl
out
les
dec
movsb
das
out
int
push
std
arpl
fwait
sub
xor
add
mov
sub
sub
insb
scas
lea
aaa
ja
jbe
cmp
rorb
fildl
enter
arpl
cmp
add
cmp
lea
call
adc
loope
mov
add
cmp
and
push
fldl
fwait
or
push
xchg
adc
add
fnstenv
sub
sbb
shll
pop
outsl
es
jg
xchg
push
out
mov
repz
push
fwait
or
lea
or
sti
jne
arpl
jno
xor
xor
sbb
and
mov
jl
push
jmp
jno
and
xor
inc
add
xchg
mov
sbb
xor
fsub
mov
sub
jnp
jmp
cld
mov
or
add
sbb
sbb
pop
or
addr16
push
popf
push
add
fwait
add
loopne
jne
data16
or
imul
add
add
add
xor
daa
jno
inc
jl
fstpt
pop
shlb
lods
fnstsw
ljmp
xor
and
push
pop
arpl
out
jbe
jmp
xchg
inc
push
pushf
sbb
add
into
dec
mov
jae
insl
jo
xor
push
das
inc
aaa
outsl
jge
sarb
add
or
xor
in
adc
mov
push
out
push
mov
cmpsl
mov
fisttpl
xchg
and
sbb
pusha
cmp
cmp
lods
xor
idiv
jle
push
add
jns
jne
adc
xor
sbb
outsl
sbb
add
scas
push
ret
mov
test
stc
push
jo
rcr
pop
call
rcrb
dec
outsl
dec
faddl
or
adc
mov
stos
add
ja
xchg
neg
or
xchg
xchg
jae
popf
scas
imulb
test
rolb
mov
pop
pusha
mov
shll
ljmp
dec
fyl2xp1
or
or
xchg
test
fs
add
add
test
xchg
pop
sub
mov
cld
mov
loopne
or
test
mov
jbe
and
push
push
xchg
mov
adc
xor
add
repz
jne
inc
xchg
fistpl
lods
fistps
jo
ljmp
push
test
sub
adc
or
sub
out
add
cmpsb
sbb
and
adcb
lods
add
mov
mov
rsqrtps
sbb
imul
dec
xor
lods
sub
push
mov
out
jne
orl
xchg
inc
aam
sub
data16
inc
or
or
inc
aaa
std
pushf
cmp
leave
mov
push
mov
and
mov
popa
pop
cmp
int3
add
add
push
mov
xchg
cmpsb
les
jae
push
scas
shll
addb
loop
mov
xchg
arpl
mov
pop
lret
mov
lods
aam
jne
sub
adc
aam
ret
enter
jmp
push
mov
test
into
stos
inc
fistl
shll
int3
nop
fdivs
cmpsb
fimuls
or
rcl
jno
repz
loopne
inc
push
inc
pop
sub
hlt
jg
push
cmp
xorb
je
das
and
shlb
outsb
jg
aad
mov
xorl
jae
mov
imul
out
jno
subl
pushf
loope
mov
mov
aad
jae
or
addb
outsb
adc
addb
push
aam
xor
mov
add
mov
das
mov
push
and
sbb
shl
inc
push
mov
push
in
movsb
ljmp
outsb
fucomi
cmp
xlat
mov
cltd
pop
es
or
or
inc
add
fisubrs
xlat
cs
pop
pop
inc
insb
push
ja
repz
outsb
push
ds
insb
adc
sub
clc
sbb
lret
mov
and
stos
inc
shrb
push
ja
jae
pop
add
cmp
cli
push
fwait
nop
mov
lods
push
ljmp
rcrb
or
mov
outsb
mov
popf
test
dec
jl
push
inc
stos
cltd
test
frstor
aam
mov
pop
cmpb
xor
and
mov
movb
aam
cmp
inc
adc
arpl
ljmp
dec
outsb
mov
push
in
xor
or
inc
jo
pusha
push
aaa
lcall
jg
roll
add
push
or
pushl
out
insb
shlb
push
outsb
sbb
imul
outsl
pushf
test
add
push
add
outsb
mov
mov
push
ss
sub
push
push
lahf
add
arpl
imul
addr16
xlat
pop
inc
and
cmpsb
outsl
mov
mov
add
cmp
addl
pop
int3
jge
pop
cmc
adc
pusha
mov
sbb
out
sbb
push
sbb
cmp
icebp
push
adc
shll
sub
sbbb
mov
jb
sbb
add
outsb
sbb
outsl
fcmovnb
divb
add
sbb
fcomps
pop
lret
cmp
data16
mov
scas
dec
stos
fldl
jb
jbe
lea
pop
movsl
pop
lcall
xor
and
mov
loop
out
jmp
cmp
sahf
shll
push
filds
sarb
push
pop
push
pop
mov
sbb
andl
fidivl
mov
pop
lret
test
mov
je
js
gs
jbe
sbb
ss
adc
es
add
jmp
bound
xchg
sub
fadd
push
xchg
mov
into
jmp
pop
insl
outsl
mov
dec
cmc
jmp
pop
mov
dec
xor
add
dec
dec
mov
fucomip
jae
fadd
and
mov
push
or
rdtsc
fldt
jle
mov
iret
int
sub
add
stos
mov
cmp
pop
lcall
mov
popa
outsl
jno
ljmp
ficoml
stc
clc
cmp
faddl
fisttpl
mov
push
pushf
pusha
test
test
and
js
xor
in
out
pop
pop
inc
jb
lods
adc
xrelease
fidivs
or
cmpsb
aaa
sbb
pop
fcoml
lods
andb
data16
mov
cmpsb
adc
add
xor
push
aam
rorb
mov
and
mov
add
xlat
jp
lcall
jmp
adc
pusha
mov
inc
add
sbb
push
adc
xchg
fldt
aaa
pop
pop
movsb
mov
dec
daa
lahf
push
pop
cli
pop
mov
imul
test
aam
movsl
pop
insb
sti
outsb
in
aaa
dec
ds
pop
cmp
and
push
push
or
jl
or
inc
push
cmpsl
or
push
aad
das
pop
dec
shrl
aam
mov
xchg
inc
cmc
sbb
fisubrl
test
stos
aad
in
mov
sti
dec
imul
xchg
rorb
outsb
cld
xchg
sub
jle
sub
stc
cmpsb
std
fwait
sbb
std
cmp
adc
mov
xchg
jg
xchg
addb
mov
lcall
fstps
sbb
jmp
icebp
iret
xchg
ss
and
imul
cld
push
arpl
pop
insl
xor
popf
scas
inc
sbb
sbb
or
sbb
sbb
push
movsl
loop
out
mov
jb
or
push
aas
xlat
cmpsl
into
mov
lods
cs
out
lods
xchg
rol
mov
in
stos
jbe
jmp
nop
pop
loop
jmp
imul
mov
adc
xchg
rolb
sub
push
mov
rcrb
fisttpl
out
mov
mov
push
jno
cmp
mov
jb
inc
lahf
fucomi
jo
pushf
add
pusha
ret
insb
mov
loopne
popf
fdivs
sub
test
pop
shll
addr16
hlt
and
push
pop
xchg
sti
mov
sbb
pop
dec
ljmp
cmp
sbb
sti
or
mov
xor
xor
dec
in
xchg
pop
sub
inc
pop
mov
insb
insb
pop
mov
adc
into
adc
jg
cld
xor
mov
orl
pop
jb
jno
push
mov
outsb
fildl
lods
lcall
jecxz
sbb
push
push
aaa
sarl
loopne
adc
je
sbb
fnstenv
ss
mov
mov
popf
adc
push
cmp
add
sbb
in
frstor
adcl
mov
fucomi
cmp
jmp
add
subl
push
and
mov
and
fcmovnb
mov
cmp
adc
movsb
repnz
fiaddl
lea
mov
scas
jmp
clc
ss
xchg
mov
fisubl
insb
in
lds
mov
pop
aaa
data16
outsb
pop
jb
and
jp
and
jmp
popa
inc
test
mov
test
sbb
mov
jo
pop
ficompl
adc
das
hlt
cmpsb
ss
jae
xor
scas
xchg
ffree
fists
in
mov
mov
rcll
mov
stos
lret
add
add
lea
push
insl
dec
lea
or
pop
ret
in
cmc
sub
iret
fisubrs
mov
jbe
repnz
add
xor
xor
call
cltd
push
into
test
xor
pop
mov
scas
lock
daa
insb
push
xchg
push
hlt
imul
mov
out
loop
xchg
mov
adc
iret
add
loopne
cmp
rcrb
mov
push
sbb
insb
or
jle
data16
and
imul
push
mov
shrb
addl
in
aas
addr16
xchg
fs
add
fiaddl
mov
sub
test
out
jmp
les
inc
clc
xchg
fstps
pop
ss
inc
aaa
mov
pop
fdivrs
mov
mov
lea
jbe
insl
sub
or
inc
mov
and
adc
int
repz
inc
or
sub
ror
xchg
das
out
add
mov
ds
inc
cmpsl
mov
popf
stc
ret
push
inc
loop
inc
add
gs
dec
pop
xor
pop
xor
or
in
pop
cmp
and
or
out
ljmp
push
in
adc
jbe
pop
mov
adc
add
xor
ret
aas
lret
or
pop
mov
lahf
js
dec
shrb
pop
jle
pop
adc
pop
or
xor
outsb
inc
popf
and
cs
mov
pushf
mov
cmp
lea
outsb
xchg
and
pop
and
or
ljmp
xor
ljmp
popa
sbb
insb
jp
daa
dec
lahf
or
push
out
jge
xor
push
fwait
sub
ffree
lods
popf
jne
jno
add
mov
cmpsb
push
adc
lcall
jg
mov
lds
scas
adc
mov
push
pushf
xor
cs
andb
mov
clc
xlat
adc
add
cmp
mov
or
testb
adc
pop
arpl
push
call
push
xor
xor
add
mov
outsb
xor
mov
sub
ljmp
int3
dec
lods
mov
dec
sbb
pushf
inc
jl
jmp
inc
mov
rcrb
add
sahf
adc
sbb
out
mov
mov
repnz
sbb
imul
ret
je
jno
rorl
pop
sub
and
psraw
jae
fiadds
pop
test
pop
adc
xchg
jb
jle
dec
inc
or
outsb
scas
mov
into
adc
pushf
dec
mov
movsl
clc
pop
test
inc
bsr
out
cmpsb
or
mov
jp
jb
adc
adc
mov
mov
or
in
xor
xchg
adc
fmull
jle
jnp
pop
xorb
add
pmaddwd
mov
nop
pop
out
mov
fildl
nop
jmp
callw
xchg
push
loopne
adc
inc
repz
in
mov
cmp
test
and
mov
and
pop
or
mov
js
insb
xorl
int
ss
jbe
ret
jp
std
xchg
call
cmp
dec
sub
cmpl
orb
dec
adc
sbb
add
pop
jno
pop
pop
test
xor
cmpsl
add
inc
inc
lods
mov
cmp
mov
add
mov
test
movsl
push
dec
cs
loope
mov
jbe
fwait
cmp
pop
int3
xor
hlt
mov
rolb
or
inc
nop
push
jb
insl
jecxz
pop
add
pop
test
ja
loope
inc
pop
call
cmp
pop
outsb
rolb
jne
pop
in
test
js
movsl
imul
pop
mov
or
movsb
shll
in
test
loop
gs
adc
mov
and
mov
int3
xchg
xor
sub
inc
jl
adcl
push
movsl
outsl
cmpsb
or
insl
xor
pop
xor
mov
nop
push
jecxz
jge
arpl
nop
iret
adc
popf
lock
sbb
add
fcmovnbe
cmp
pushf
test
or
in
add
xchg
and
icebp
sub
or
mov
and
push
gs
push
mov
cltd
dec
jp
dec
je
popf
jns
mov
cmpsb
push
outsl
popf
push
out
jne
adc
mov
push
add
nop
sahf
sbb
dec
xchg
in
fisubrl
aaa
stos
dec
loopne
xchg
mov
mov
add
rcr
sub
jmp
nop
insb
arpl
cmp
add
aas
mov
icebp
roll
pop
cmp
xchg
faddl
adc
imul
pushf
mov
out
imul
mov
mov
hlt
mov
adc
dec
mov
lret
adc
add
and
aam
push
mov
lret
out
mov
xor
je
leave
call
mov
fiadds
lcall
pop
jb
xor
sub
out
mov
dec
push
out
dec
fildl
push
sbb
int
sub
jg
pop
sbb
aas
push
sbb
jge
sbb
js
adc
fsubs
jne
shrl
movsb
jo
jo
mov
rcll
insl
mov
into
out
pop
push
cmc
jno
lahf
test
subb
sub
rcl
dec
jp
and
cmp
sub
pop
push
mov
adc
adc
or
mov
pusha
jae
pop
gs
imulb
jne
pop
jmp
mov
icebp
push
inc
test
dec
xchg
call
xchg
inc
sub
mov
add
xchg
push
adc
outsb
movsl
jecxz
fcoml
sbb
sbb
icebp
lret
jmp
pop
sbb
mov
sbb
call
sbb
and
lcall
pushf
in
call
lahf
xchg
jne
adc
fcmovbe
xor
aas
fcomps
xor
mov
or
fistpl
mov
std
jbe
mov
imul
js
fiaddl
jmp
shll
inc
mov
fucom
mov
arpl
jbe
sbb
sbb
or
enter
and
and
push
jo
push
daa
fnstsw
insb
xchg
or
cmp
ret
sub
mov
loope
sbb
fwait
mov
xchg
push
jl
lret
aad
xchg
and
and
pop
push
or
sub
sub
push
rcrb
cli
xcrypt-cfb
cmpsl
movsl
shl
cld
xor
jo
mov
adc
dec
mov
cmpsb
lret
mov
push
call
pop
dec
mov
mov
bound
call
in
in
scas
sbb
pop
std
dec
mov
xchg
sbb
enter
sub
pusha
test
mov
sarb
xchg
jle
sbb
jecxz
xorb
add
int
and
adc
xor
sub
sarl
mov
mov
push
jbe
out
pop
data16
dec
pop
xorl
in
xchg
push
push
fucom
mov
je
aad
in
in
mov
pop
dec
fstl
cmpl
add
push
pop
sbb
fwait
and
lods
lods
xor
or
bound
fdivs
cs
xor
ja
cmp
pop
add
shl
sarb
mov
shlb
sahf
lret
fwait
int3
imul
pop
fcomip
mov
xor
mov
xchg
sbb
sbb
rcl
dec
fcomi
les
xchg
mov
ficoms
mov
fsts
or
pop
aas
xlat
mov
mov
xchg
fdiv
enter
xchg
pop
push
cwtl
ret
sarb
decl
fwait
jecxz
pusha
jmp
pop
cmp
clc
adc
cmp
loop
sbb
xchg
jbe
in
and
imul
add
fucomi
sub
pop
sbb
sub
sbb
add
cmpsb
rorb
sbb
push
call
aaa
and
add
in
out
insb
call
push
push
std
adc
fstps
xlat
push
notl
mov
pop
pusha
sti
add
push
adc
mov
xor
add
sub
push
mov
adc
adc
sbb
testb
cld
cmp
push
and
fnsave
bound
xchg
sbb
xchg
push
jmp
popa
sti
push
xchg
jbe
inc
rcrl
call
mov
dec
add
rclb
xor
or
pop
iret
adc
jmp
icebp
incl
xor
or
xchg
push
cmp
lods
mov
jle
cmpsl
ficoms
xchg
or
bound
notl
inc
test
rolb
inc
loope
in
popa
jbe
fs
jns
mov
push
xchg
loope
loope
mov
mov
out
je
insb
add
stos
mov
dec
shrl
out
jno
imul
mov
ss
add
nop
mov
fucomp
lea
xchg
ds
xchg
in
and
mov
fdivs
andb
rorl
jbe
mov
jge
test
xchg
imul
shlb
inc
mov
mov
shr
notb
arpl
imul
aam
mov
shll
or
push
inc
jge
aaa
adc
call
or
mov
dec
mov
sub
call
mov
stos
shll
jecxz
test
mov
jg
scas
cmp
cmp
jns
adcb
mov
mov
pop
iret
push
pop
addr16
add
in
mov
jle
xor
ds
mov
fst
adc
into
sub
stos
inc
aad
xchg
aam
jno
push
mov
mov
aaa
aam
mov
outsb
mov
outsl
sbb
js
test
stos
or
movsl
or
icebp
inc
inc
fs
int
push
out
dec
xor
fisubl
pop
mov
scas
push
push
icebp
sub
jns
push
dec
mov
subb
aam
mov
sti
ja
pop
inc
sub
sub
and
jle
fcoms
or
out
inc
sti
cmp
xchg
bound
stos
je
popa
xlat
pop
leave
jns
into
popa
inc
mov
mov
or
pop
ljmp
push
mov
sbb
mov
aas
dec
pop
in
jns
lahf
shll
cmp
mov
jne
lret
arpl
cmp
push
pop
out
push
fistpl
lods
cs
add
mov
mov
cltd
dec
hlt
mov
adc
mov
sub
dec
test
mov
rolb
shrb
mov
popa
xor
sbb
jbe
out
inc
jnp
loop
dec
aam
out
lcall
mov
xchg
push
cmp
xchg
sub
mov
mov
aas
rcr
sub
fildl
mov
dec
add
or
mov
cmp
sub
pop
inc
xor
test
mov
lahf
loopne
pop
sbb
xlat
dec
lahf
ret
pushf
insl
popa
loope
push
negb
jb
push
jg
sbb
scas
xchg
movsb
push
jmp
fcmovne
inc
jge
jg
into
outsb
adc
test
movl
movsbl
mov
sbb
jbe
sub
adc
imul
xchg
adc
and
pop
xchg
jo
pushf
push
cmpsb
adcl
adc
cmp
or
out
add
adc
push
fidivl
mov
mov
repnz
push
insl
jge
adc
fistpll
fwait
push
bound
mov
jmp
icebp
mov
adc
add
inc
mov
jmp
pop
out
movl
pop
fwait
jo
mov
nop
and
xchg
lds
outsl
out
bound
enter
sbb
inc
test
or
inc
ja
xlat
repnz
ss
mov
sbb
pop
fadds
pop
inc
cltd
jb
int
fbstp
sbb
add
outsb
inc
push
jg
sbb
in
pop
adc
out
xchg
fs
mov
fildl
or
inc
inc
pop
imul
hlt
xchg
lcall
xchg
mov
mov
gs
or
cmpsl
mov
insl
dec
mov
test
test
push
lea
data16
mov
jge
pop
movsb
pop
pop
push
cmp
sbb
jno
mov
xlat
pop
hlt
ret
pushf
in
ret
dec
stc
push
xchg
in
xchg
popa
mov
push
push
sub
fdivrs
inc
mov
icebp
fistpl
mov
or
mov
cmpsl
pushf
add
aad
mov
aas
jno
in
mov
add
scas
addr16
xor
ja
mov
jmp
mov
movsl
out
sub
mov
mov
push
add
iret
inc
xchg
ffree
rorl
cmp
push
mov
je
mov
dec
jne
call
cmp
insb
das
xlat
cmpb
inc
in
adc
mov
push
rolb
fmull
sub
movsb
dec
shl
aas
cmp
xchg
xchg
iret
or
push
decl
imull
iret
jl
mov
call
shll
push
push
repz
in
cltd
mov
dec
pop
dec
les
test
push
rclb
scas
mov
dec
fiaddl
loope
mov
jge
shr
adc
jne
fdiv
push
in
cmp
sar
aam
pop
or
jecxz
or
pop
fsubrp
popf
ja
outsl
mov
insl
sub
add
mov
push
repnz
call
or
hlt
mov
inc
or
xor
mov
mov
mov
mov
imul
mov
js
ret
cmpsb
in
pop
fwait
cmpl
cs
cmpsl
fcmovu
sub
js
cmp
scas
inc
rcl
pop
sbb
add
aad
pop
sbb
out
xor
imull
in
mov
out
add
arpl
sub
pop
mov
or
xchg
lahf
inc
popf
push
out
out
sbb
add
jge
arpl
add
jbe
stc
fildl
aas
jb
add
lods
add
arpl
jg
insl
out
xor
lret
jb
mov
add
mov
sub
sbb
add
jmp
out
xchg
xor
adc
test
imul
sbb
mov
add
sbb
cmp
mov
cmp
xor
xor
je
sub
pop
add
pop
sbb
in
cmp
sbb
sub
xor
push
xor
repz
pop
adc
in
sahf
mov
or
xor
push
add
fmuls
adc
xlat
out
sti
mov
and
cltd
movsl
xor
or
sbb
adc
and
jbe
insb
xchg
xchg
sbb
xor
sub
or
and
inc
aas
dec
or
addr16
ja
inc
push
push
add
add
mov
xchg
mov
pop
repz
or
push
mov
sub
add
in
add
push
in
xor
push
aad
inc
and
cmp
push
mov
fbstp
jecxz
aaa
xlat
sbb
insb
out
sub
cmp
mov
push
add
mov
add
xchg
aaa
negb
or
and
add
into
fcomp
ret
dec
lret
add
jo
sti
das
xor
sub
add
jge
scas
sbb
or
stc
dec
mov
sbb
cmp
adc
addr16
aaa
fwait
add
and
or
aaa
lret
arpl
cmp
cmp
sub
mov
popf
insb
cs
pop
push
or
dec
addr16
add
push
jnp
popf
inc
push
or
xor
xlat
lea
sbb
and
das
das
cmp
cmp
fistpll
sub
adc
int
mov
add
fwait
mov
cmp
cmp
mov
jg
mov
cs
rcrb
stos
cmp
push
es
lret
add
negb
push
imul
testl
data16
xor
add
jecxz
inc
xchg
jmp
cmp
pop
aaa
arpl
ret
adc
movlps
pop
lea
andl
push
outsl
push
ja
jg
add
or
dec
jge
fmuls
pop
scas
popf
lea
inc
mov
mov
jle
jl
push
fisubs
xlat
or
push
mov
push
pop
or
xor
jae
jae
arpl
popf
and
push
cmp
cmc
sti
mov
pop
add
add
aad
sbb
xchg
out
lods
and
add
sbb
push
add
xchg
mov
dec
out
sbb
xlat
add
add
add
je
pop
loope
or
adc
xlat
or
addb
js
out
add
add
jmp
cltd
js
xchg
push
stos
pop
ss
add
daa
imul
add
add
scas
addr16
add
add
add
mov
popl
pop
mov
shrb
enter
push
divl
add
lret
or
int3
fisttps
cmp
pop
add
sti
bound
pop
adc
mov
inc
dec
pop
mov
mov
sub
sbb
jle
push
inc
sub
cmp
divps
xchg
bound
bound
pop
add
out
sbb
xor
add
sub
adc
out
sub
adc
mov
or
sbb
mov
sbb
push
int3
outsb
mov
pop
cmc
pop
sub
mov
leave
rorb
jg
fisubs
adc
cli
mov
pusha
pop
mov
add
or
lods
popf
lds
or
xchg
push
and
xchg
add
mov
out
sbb
push
cmp
fdivl
adc
adc
or
inc
aaa
repnz
and
test
and
add
sub
es
push
icebp
int
aas
push
sbb
mov
aaa
inc
or
and
hlt
push
fcmovnu
loope
mulb
xor
sub
lcall
data16
add
daa
add
lahf
inc
arpl
insb
flds
adc
pop
dec
aas
test
dec
add
out
movb
in
lcall
adc
in
add
dec
pop
cwtl
testl
fwait
loope
and
addr16
mov
into
mov
andl
push
mov
and
shlb
psubusw
mov
pop
negb
clc
mov
and
cmp
or
sub
sti
push
out
adc
or
jl
pop
test
pop
push
push
fisubl
jg
gs
sbb
out
outsl
outsb
sti
xorb
inc
sti
int
cwtl
push
pop
fcmove
add
arpl
sbb
popf
out
int
push
sbb
jge
sbb
or
mov
in
and
lock
lods
sbb
sbb
movsl
leave
push
pusha
ss
or
insb
les
jne
or
cmp
fsts
push
fstps
ljmp
jge
test
inc
movsl
or
jnp
and
aam
imul
sbb
push
das
push
xchg
push
push
insb
jbe
and
dec
mov
hlt
push
fsts
xchg
push
mov
shrl
mov
xor
push
or
pop
pop
inc
adc
or
in
adc
fildl
xchg
sub
mov
or
pop
out
movsb
sub
pop
rolb
jmp
test
or
lods
es
dec
jle
add
stos
popf
adc
jnp
xchg
inc
push
adc
mov
cmp
add
and
lret
jno
out
dec
out
xor
ss
bound
mov
xor
in
jge
and
in
in
sbb
add
and
mov
fnstcw
test
pop
inc
sub
pop
ficompl
outsl
nop
stos
mov
dec
out
add
adc
or
or
test
xor
and
adc
outsl
xor
aam
xchg
sbb
sbb
jp
mov
outsb
lock
out
jmp
cmp
and
sbb
adc
xor
push
mov
mov
data16
cmp
dec
or
int
cmpsb
xchg
cmp
inc
pop
data16
mov
inc
adc
cmp
push
jmp
xchg
mov
loope
in
xor
dec
cmp
incl
xor
inc
xor
push
into
cmp
sbbl
or
lods
dec
insl
pop
or
mov
aaa
shll
outsb
inc
js
sahf
mov
inc
xor
mov
xchg
xlat
testb
xchg
loop
lcall
xlat
or
aad
fldl
imul
add
int
getsec
pop
les
jle
mov
and
nop
dec
mov
sub
push
and
mov
inc
pusha
lahf
push
fstpl
dec
pop
mov
pop
mov
test
and
insb
add
nop
dec
dec
or
xchg
fsts
and
mov
inc
xor
dec
outsb
aas
adc
andl
popa
rol
or
addr16
pop
fwait
orl
or
push
inc
sub
add
jnp
mov
ja
and
mov
mov
inc
movsl
cmp
hlt
pop
add
daa
mov
or
jbe
cmp
jmp
repnz
pusha
dec
cmp
mov
lret
adc
sub
outsl
shll
add
cmpsb
pusha
jecxz
add
pop
and
pop
aad
aaa
mov
jo
mov
in
add
aas
and
or
bound
mov
popa
inc
out
mov
int3
sbb
sti
mov
popa
jno
and
out
sarb
jns
lea
inc
or
and
fcomp
and
sub
pop
mov
cmp
and
es
orl
add
out
mov
outsl
mov
xchg
jno
add
js
stos
pusha
inc
adc
adc
int3
jp
sub
add
aas
adc
inc
lret
xchg
cmp
sti
jle
and
imul
inc
push
add
aas
adc
int3
xor
ds
push
int3
cld
js
ja
add
xchg
and
sub
add
int
sub
cmp
pop
cmp
out
test
xchg
sub
int3
fisubs
adc
jge
add
and
cwtl
jge
pop
adc
fstps
add
sbb
dec
inc
and
adc
adc
adc
mov
lea
int
hlt
inc
jmp
mov
add
sbb
mov
out
and
sbb
lods
and
mov
into
and
daa
jno
inc
add
pop
xchg
jg
or
xchg
rclb
adc
mov
add
xor
pop
sub
loope
insb
inc
pop
insl
and
sbb
or
add
sub
popa
or
loop
push
dec
sbb
out
or
neg
or
push
cltd
inc
adc
aaa
or
andl
pop
adc
pushw
stos
mov
add
or
ficoms
xchg
sets
or
adc
mov
xchg
and
dec
push
mov
adc
sti
push
mov
push
adc
inc
jle
jae
addl
fcmovnbe
cmp
cmp
aas
idivb
xchg
lods
cmp
cmp
fistpll
and
or
adc
jecxz
stc
iret
add
nop
inc
inc
add
and
or
push
push
out
imul
and
dec
cmp
inc
pop
and
lcall
test
das
jno
sub
fisubs
xchg
scas
mov
les
xor
adc
mov
mov
pop
dec
int
test
in
xchg
mov
mov
iret
cmp
fistps
adc
xlat
jo
jp
pop
test
iret
pop
movsb
js
mov
nopl
imul
jp
and
dec
dec
inc
enter
lret
or
adcb
or
pop
dec
outsb
shrb
pop
push
lock
lea
push
or
or
jnp
es
clc
xor
sti
xor
mov
inc
fs
push
mov
pop
out
popf
sub
inc
shl
pop
and
andb
test
sbb
push
mov
icebp
aas
lret
adc
dec
daa
aas
sbb
or
lods
fbld
pop
inc
out
jbe
xchg
aaa
aaa
mov
xor
fucomi
sbb
data16
and
mov
xor
cli
fimull
leave
jg
sbb
or
icebp
and
testl
fisubrs
bound
sbb
sbb
or
fs
pusha
sub
sti
push
aas
sbb
add
outsl
sbb
add
sbb
pop
outsl
rcr
sbb
daa
repz
sti
mov
or
adc
mov
and
stc
or
or
xor
aaa
sub
pop
inc
and
fs
inc
pop
add
add
sbb
cs
and
sub
in
add
mov
add
fistps
cmp
mov
ficoms
push
or
std
push
mov
sbb
and
std
lea
daa
pop
data16
and
movsl
xchg
sahf
gs
sbb
mov
bound
jno
dec
xorb
minps
popf
sarb
add
sbb
jmp
pop
arpl
xchg
push
sbb
loopne
xor
popf
lea
jae
insl
cmp
das
popf
xor
mov
add
add
outsl
adc
leave
das
cs
push
push
loopne
aam
mov
cmc
add
es
jne
xor
add
add
push
or
ja
jns
jne
daa
gs
mov
aas
or
xor
add
test
rcl
mov
sarl
add
inc
inc
push
xlat
js
fcomip
mov
push
push
dec
add
shll
inc
lret
inc
push
pop
and
pop
adc
pop
lods
jne
out
add
addr16
inc
dec
dec
and
cmp
push
addr16
and
jmp
mov
cmp
jg
jge
and
js
jne
in
pop
pop
inc
pop
sbb
insl
dec
push
lds
push
adc
out
mov
outsb
dec
push
pop
push
add
test
push
jno
inc
and
jno
and
jne
lods
xor
xchg
data16
jg
ja
lret
lock
sbb
add
pop
imul
jbe
icebp
push
jns
in
cld
ficoms
add
add
js
in
in
jnp
add
add
jne
mull
je
jne
ja
imul
fucomp
outsl
outsb
outsb
ja
sbb
repnz
notl
addb
jnp
dec
testl
mov
gs
mov
add
roll
inc
jno
cmp
mov
data16
fdivrl
repnz
pop
es
or
mov
shrl
dec
push
inc
inc
add
inc
test
dec
add
jo
mov
addr16
js
js
jge
add
add
add
mov
popa
push
xor
cmc
or
xor
insb
jno
testb
movl
mov
fstpt
sbb
imul
cmp
orb
fcomip
jnp
lea
push
mov
xchg
loope
fsts
lea
into
icebp
push
add
mov
outsl
jb
mov
mov
push
lods
jno
data16
xchg
push
shll
or
and
popl
sbb
xchg
push
mov
jg
nop
jle
test
inc
adc
sbb
adc
push
pop
aas
ficoml
push
sbb
fisubl
inc
adcb
sub
push
add
add
or
or
fxam
sbb
xor
cmp
mov
data16
gs
mov
and
add
in
add
data16
push
js
pop
jns
sbb
js
mov
xor
mov
in
sbb
sub
sub
imul
xchg
lods
popa
or
stc
jle
movsb
ret
dec
adc
or
sbb
xchg
add
xchg
xor
cmp
cli
inc
mov
sbb
int3
or
or
jg
mov
call
in
adc
and
arpl
sbbl
pop
inc
push
or
and
cmp
test
mov
out
or
and
jno
ljmp
jbe
add
cld
dec
push
mov
and
fcom
mov
inc
push
inc
push
push
out
dec
inc
sbb
lds
mov
adc
xchg
cld
aaa
or
add
and
xchg
push
sbb
push
sub
or
add
insb
inc
jo
push
add
push
jbe
addl
or
add
add
or
or
addl
jae
and
sarl
into
lcall
jge
ss
fwait
or
das
fwait
push
sbb
mov
rol
push
lcall
and
and
or
mov
add
test
lods
adcl
sbb
sub
lods
mov
xor
outsb
cmp
mov
inc
xadd
dec
ret
xchg
mov
sub
xor
dec
pop
or
loope
orl
out
out
add
push
js
xor
ljmp
mov
pop
pop
daa
dec
stos
dec
pop
adc
pushl
mov
divb
andl
into
inc
add
orl
pop
push
cwtl
inc
shlb
sub
and
jne
cmpsb
and
iret
fisubrl
adc
popf
add
or
pusha
add
xchg
xor
sbbb
jnp
dec
or
jns
push
sub
push
sub
or
jmp
or
sub
dec
dec
adc
xchg
pop
or
inc
data16
sahf
mov
dec
sub
jo
seto
nop
pop
push
adc
xchg
addr16
out
jbe
adc
ja
jp
dec
jo
and
enter
jl
jge
xchg
xor
fdivrl
insl
and
pop
mov
jnp
enter
sub
sub
mov
pop
pop
pusha
adcb
or
mov
test
jp
popf
or
fucomi
daa
xchg
lahf
inc
push
sbb
sbb
dec
mov
dec
mov
add
cmp
sti
pop
dec
or
and
mov
pop
repnz
es
outsl
inc
jecxz
inc
int
ds
and
in
jecxz
fwait
xchg
ja
ljmp
push
data16
test
inc
push
popa
xchg
sub
xor
push
inc
xchg
sbb
mov
push
mov
js
outsl
int
lock
push
dec
andl
popa
push
dec
dec
subb
lods
sbb
dec
jl
and
mov
fidivl
dec
sbb
mov
js
cmp
in
imul
or
pop
dec
ficompl
jb
imul
shll
mov
adc
iret
jge
pop
mov
mov
cltd
push
push
inc
popa
dec
jnp
cltd
test
inc
loope
push
daa
test
fs
test
pop
add
jp
popa
inc
cmp
sbb
inc
ret
xchg
mov
and
mov
and
mov
push
push
and
imul
cmp
jmp
add
xlat
ficompl
dec
sbb
sub
adc
int
imul
insl
scas
mov
sub
cs
add
cmpsb
xlat
inc
mov
sub
inc
nop
inc
out
jbe
je
dec
pop
dec
movb
les
pusha
je
idiv
xchg
jb
mov
inc
cmp
imul
jo
add
and
push
mov
push
jnp
push
les
pop
jnp
or
jno
dec
mov
jae
daa
ja
adc
mov
gs
dec
sbb
aas
sbb
mov
gs
sub
lock
lret
outsb
insl
cmp
add
and
pop
rcrl
iret
mov
mov
add
cmp
or
test
jge
std
mov
mov
jne
mov
xor
mov
or
inc
adc
call
pop
xchg
ret
jno
out
shll
lcall
icebp
aam
rolb
data16
fs
mov
in
test
jo
in
inc
inc
mov
mov
sbb
push
cwtl
psraw
sub
fnstenv
inc
inc
in
dec
xchg
sbb
rcll
inc
shll
sub
or
sbb
je
hlt
fs
ficoml
push
outsb
dec
add
mov
imul
sub
jae
fs
jb
push
and
movsl
push
mov
mov
xor
flds
mov
popf
mov
pop
inc
inc
push
pop
mov
push
aad
jo
add
push
push
mov
dec
push
pop
sarb
lcall
sub
pop
sbb
imul
add
out
inc
mov
dec
xor
insb
sbb
push
push
aas
pop
pop
jnp
sbb
push
mov
add
data16
fsubrl
jle
sahf
mov
mov
xchg
das
jmp
cs
enter
aam
subl
subl
xor
cmp
push
push
or
dec
lahf
sbb
and
or
jo
and
data16
push
mov
and
sti
jb
adc
xor
xor
sub
icebp
pop
into
sub
adc
daa
mov
sub
push
mov
hlt
ret
adc
push
jae
out
sub
jmp
dec
sub
movups
mov
jae
jb
inc
pusha
nop
jo
daa
jnp
scas
dec
sub
adc
adc
dec
cmpsb
push
inc
and
push
lret
es
lods
mov
xchg
or
mov
fwait
mov
sub
inc
imul
mov
pop
or
xchg
test
bound
test
inc
test
or
movsb
cmpsb
inc
xchg
and
insb
ja
xchg
lods
and
dec
lret
fld
inc
ret
popa
subl
jae
scas
cmp
xor
or
add
pop
stc
mov
outsb
pop
mov
add
sbb
add
jo
sbb
inc
sbbl
or
sub
sbb
arpl
adc
repz
or
jecxz
cmp
dec
add
popf
push
pop
fsin
imul
imul
add
adc
hlt
push
pop
jp
pop
add
fidivrl
jo
fadds
push
adc
adc
push
mov
cmc
add
mov
mov
jmp
push
cmc
add
add
add
xchg
lods
bound
mov
add
mov
adc
jp
test
aam
adc
pop
mov
rorb
push
ret
inc
inc
push
aam
mov
mov
dec
sbb
test
in
in
pop
push
int
inc
das
daa
or
testb
dec
jo
and
xchg
cmp
add
or
addr16
pop
adc
add
arpl
adc
sub
xchg
xchg
inc
add
dec
sub
mov
add
sbb
mov
pop
sub
aas
and
pop
mov
ja
outsl
adc
adc
cmp
andl
cwtl
dec
insl
aam
loop
pop
push
mov
dec
sbb
add
inc
or
push
pop
xchg
inc
data16
cmp
lahf
sbb
cmovle
fists
inc
pop
inc
adc
pop
push
add
inc
adc
dec
mov
pop
shrb
loope
ds
inc
fs
sbb
or
and
sbb
xchg
dec
inc
mov
jb
outsb
jnp
adc
push
test
push
inc
lea
movsb
mov
outsb
pop
cmp
pop
add
jae
add
int3
enter
fs
jnp
pop
jnp
xor
mov
cli
fiadds
loopne
int
adc
mov
jb
in
inc
mov
shrl
jg
adc
add
int
jae
mov
or
push
ja
add
subl
imul
sbb
sti
arpl
cld
arpl
dec
dec
stc
dec
jb
mov
add
fisttpll
and
pop
pop
push
push
mov
pop
jnp
inc
lahf
pop
popa
outsb
pop
not
jnp
push
fwait
push
mov
je
pop
popf
sti
inc
inc
into
arpl
push
insl
or
ret
xor
add
mov
ss
mov
cwtl
inc
bound
imul
cmp
inc
dec
cli
mov
cmp
push
cli
dec
ss
filds
or
cmp
cltd
sbb
push
push
mov
fidivrs
pop
ja
xor
jnp
xchg
xor
sub
jge
loope,pn
hlt
push
aad
dec
cmp
test
outsb
pop
dec
dec
fstpt
inc
jg
sbb
insb
add
or
and
adc
je
dec
bound
pop
fldenv
mov
pop
dec
fcmove
dec
flds
mov
pop
int
add
movsl
sub
mov
add
push
pop
lret
mov
inc
sub
push
sub
or
or
movsb
sub
mov
dec
sbb
sub
inc
mov
sbb
outsl
test
inc
cltd
add
or
add
push
add
push
repnz
aaa
add
gs
mov
sbb
inc
daa
cli
inc
and
fsubrs
or
sbb
xchg
or
sub
das
push
leave
xchg
sbb
jae
jb
dec
into
pop
test
add
adc
fimuls
out
inc
xor
pusha
pop
fadds
adc
and
push
aaa
inc
sbb
sbb
outsb
aas
pop
ret
jge
jnp
nop
mov
leave
mov
mov
rolb
mov
inc
inc
sbb
sub
xchg
in
sbb
inc
dec
pop
aaa
in
in
or
lods
inc
nop
xor
sbb
inc
int
pop
leave
sub
repnz
mov
cmp
dec
or
dec
add
inc
outsl
pop
xorb
mov
pop
mov
enter
add
inc
jmp
cmp
dec
pop
sbb
dec
addr16
push
repnz
pop
push
popa
insb
popa
xchg
gs
scas
jp
and
test
addb
addr16
js
cmp
fwait
cmp
leave
xchg
and
mov
add
call
in
repz
add
or
jnp
sub
adc
outsl
and
in
das
pop
pop
cmp
jns
cld
push
pop
bound
jnp
pop
push
jge
dec
adc
and
jg
gs
mov
les
lret
scas
in
lcall
gs
fnstenv
pop
inc
xchg
dec
iret
push
fldenv
insl
pop
in
aaa
push
xchg
das
nop
pop
and
sbb
mov
cwtl
cmp
insl
je
cwtl
sub
test
mov
shll
lret
adc
lret
and
sub
add
and
test
inc
and
adc
push
sbb
faddl
dec
and
pop
adc
push
sub
add
add
sub
add
mov
sub
movsb
inc
add
add
xchg
add
outsl
je
arpl
pop
push
inc
push
add
push
or
push
or
je
jns
xor
push
imul
push
in
mov
fisttps
dec
outsl
fs
gs
popa
outsb
fs
jno
in
lret
arpl
outsb
outsw
cmovae
sub
push
inc
loopne
adc
imul
outsb
jne
dec
cmpsb
in
aas
inc
outsl
jb
popa
je
push
adc
mov
outsl
scas
arpl
dec
jge
lods
mov
xor
push
imul
inc
lret
adc
out
fsubrp
lahf
mov
addr16
outsb
cli
dec
testb
popa
jbe
jo
mov
or
jo
popa
arpl
imulb
cmp
jns
push
xorb
insb
mov
jbe
gs
je
pop
ljmp
daa
imul
jb
movsb
inc
imul
push
outsl
xor
adc
dec
aaa
push
inc
jae
and
mov
push
pop
inc
pusha
lods
loope
push
outsb
outsb
les
adc
pop
xchg
cld
loope
test
or
mov
arpl
insl
outsl
std
mov
mov
imul
js
adc
jo
int3
xchg
lock
js
xor
std
popa
jae
fs
push
cwtl
insl
mov
addr16
xchg
pop
add
push
aas
sub
push
in
adc
add
jmp
sbb
sub
loopne
popl
add
jnp
enter
dec
shlb
or
data16
add
pop
adc
jae
into
xchg
cmp
cs
adc
das
push
cmp
mov
sub
add
add
dec
inc
inc
mov
or
jmp
jge
inc
inc
push
inc
mov
fstp
loope
sti
loop
inc
jbe
jns
sbb
rolb
or
cmp
and
imul
daa
stos
jno
movsb
push
inc
test
xchg
xor
fsincos
pusha
daa
add
dec
cmp
cmp
lods
mov
sub
aam
cmp
pop
mov
add
loopne
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
