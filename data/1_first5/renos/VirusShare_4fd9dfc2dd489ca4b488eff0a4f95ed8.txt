jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
bound
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
cmp
jnp
xchg
xchg
xchg
mov
lea
lea
dec
dec
dec
mov
lea
mov
mov
lea
mov
dec
dec
movb
xchg
mov
cmp
jns
lea
lea
dec
mov
inc
dec
inc
mov
lea
mov
xchg
lea
mov
xchg
xchg
movw
call
cmp
jo
lea
mov
xchg
lea
inc
mov
mov
lea
mov
inc
inc
dec
xchg
mov
mov
mov
mov
inc
push
call
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
inc
dec
je
xchg
lea
lea
mov
lea
mov
xchg
inc
dec
movw
push
call
xchg
mov
mov
mov
mov
mov
lea
mov
lea
inc
dec
je
mov
dec
inc
dec
call
mov
mov
mov
mov
xchg
lea
lea
lea
xchg
lea
dec
inc
dec
je
mov
mov
dec
inc
call
cmp
jns
xchg
lea
xchg
xchg
mov
mov
mov
xchg
mov
mov
mov
lea
inc
inc
inc
incb
cmpb
jne
pop
pop
pop
ret
lea
push
mov
add
movb
xchg
mov
mov
mov
mov
mov
lea
mov
lea
inc
dec
je
mov
dec
inc
dec
movw
call
mov
mov
mov
mov
xchg
lea
lea
lea
xchg
lea
dec
inc
dec
je
mov
mov
dec
inc
movw
push
call
cmp
jns
xchg
lea
xchg
xchg
mov
mov
mov
xchg
mov
mov
mov
lea
inc
inc
inc
push
call
incb
cmpb
jne
pop
pop
pop
ret
push
mov
add
mov
mov
xchg
mov
cmp
jns
lea
lea
dec
mov
inc
dec
inc
mov
lea
mov
xchg
lea
mov
xchg
xchg
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
xchg
lea
lea
lea
xchg
lea
dec
inc
dec
je
mov
mov
dec
inc
mov
add
add
mov
mov
mov
mov
cmp
jle
dec
inc
inc
dec
xchg
cmp
jbe
lea
mov
lea
xchg
mov
lea
mov
mov
inc
dec
lea
dec
inc
inc
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
xor
mov
cmpl
jbe
cmp
jp
mov
mov
mov
mov
dec
jne
lea
mov
mov
inc
dec
dec
xchg
mov
mov
xchg
lea
lea
xchg
mov
test
jbe
mov
movl
mov
add
mov
dec
shl
add
mov
mov
mov
add
push
mov
push
call
test
jne
xchg
mov
mov
mov
mov
mov
lea
mov
lea
inc
dec
je
mov
dec
inc
dec
mov
add
mov
dec
add
add
mov
mov
movzwl
mov
jmp
incl
decl
jne
jmp
mov
sub
mov
mov
add
mov
shl
add
mov
mov
mov
add
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
xchg
mov
cmp
jns
lea
lea
dec
mov
inc
dec
inc
mov
lea
mov
xchg
lea
mov
xchg
xchg
mov
cmp
je
jmp
mov
mov
mov
mov
xchg
lea
lea
lea
xchg
lea
dec
inc
dec
je
mov
mov
dec
inc
mov
xor
divl
test
jne
cmp
jns
xchg
lea
xchg
xchg
mov
mov
mov
xchg
mov
mov
mov
lea
inc
inc
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
inc
dec
je
xchg
lea
lea
mov
lea
mov
xchg
inc
dec
mov
mov
pop
ret
push
mov
add
mov
mov
mov
cmp
jo
lea
mov
xchg
lea
inc
mov
mov
lea
mov
inc
inc
dec
xchg
mov
mov
mov
mov
inc
mov
cmp
je
jmp
mov
cmp
jnp
xchg
xchg
xchg
mov
lea
lea
dec
dec
dec
mov
lea
mov
mov
lea
mov
dec
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jp
mov
mov
mov
mov
dec
jne
lea
mov
mov
inc
dec
dec
xchg
mov
mov
xchg
lea
lea
xchg
mov
cmp
je
jmp
mov
cmp
jnp
xchg
xchg
xchg
mov
lea
lea
dec
dec
dec
mov
lea
mov
mov
lea
mov
dec
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
je
call
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
inc
dec
je
xchg
lea
lea
mov
lea
mov
xchg
inc
dec
mov
sub
mov
cmp
jle
dec
inc
inc
dec
xchg
cmp
jbe
lea
mov
lea
xchg
mov
lea
mov
mov
inc
dec
lea
dec
inc
inc
push
mov
mov
xor
call
mov
cmp
jns
xchg
lea
xchg
xchg
mov
mov
mov
xchg
mov
mov
mov
lea
inc
inc
inc
mov
mov
mov
call
cmp
jo
lea
mov
xchg
lea
inc
mov
mov
lea
mov
inc
inc
dec
xchg
mov
mov
mov
mov
inc
push
mov
mov
xor
call
mov
mov
mov
mov
mov
xchg
lea
lea
lea
xchg
lea
dec
inc
dec
je
mov
mov
dec
inc
xchg
mov
cmp
jns
lea
lea
dec
mov
inc
dec
inc
mov
lea
mov
xchg
lea
mov
xchg
xchg
lea
mov
push
mov
jmp
cmp
jle
dec
inc
inc
dec
xchg
cmp
jbe
lea
mov
lea
xchg
mov
lea
mov
mov
inc
dec
lea
dec
inc
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
mov
cmp
jnp
xchg
xchg
xchg
mov
lea
lea
dec
dec
dec
mov
lea
mov
mov
lea
mov
dec
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jp
mov
mov
mov
mov
dec
jne
lea
mov
mov
inc
dec
dec
xchg
mov
mov
xchg
lea
lea
xchg
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
xchg
mov
mov
mov
mov
mov
lea
mov
lea
inc
dec
je
mov
dec
inc
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
xchg
lea
lea
lea
xchg
lea
dec
inc
dec
je
mov
mov
dec
inc
mov
sub
add
add
mov
xchg
mov
cmp
jns
lea
lea
dec
mov
inc
dec
inc
mov
lea
mov
xchg
lea
mov
xchg
xchg
lea
pushl
call
mov
pop
ret
mov
push
mov
add
mov
mov
mov
call
push
call
mov
cmp
jo
lea
mov
xchg
lea
inc
mov
mov
lea
mov
inc
inc
dec
xchg
mov
mov
mov
mov
inc
mov
mov
call
mov
mov
mov
cmp
jns
xchg
lea
xchg
xchg
mov
mov
mov
xchg
mov
mov
mov
lea
inc
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jle
dec
inc
inc
dec
xchg
cmp
jbe
lea
mov
lea
xchg
mov
lea
mov
mov
inc
dec
lea
dec
inc
inc
mov
mov
movl
xchg
mov
mov
mov
mov
mov
lea
mov
lea
inc
dec
je
mov
dec
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
xchg
lea
lea
lea
xchg
lea
dec
inc
dec
je
mov
mov
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
mov
mov
mov
mov
mov
lea
mov
lea
inc
dec
je
mov
dec
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
inc
dec
je
xchg
lea
lea
mov
lea
mov
xchg
inc
dec
mov
pop
ret
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
shll
ljmp
stos
mov
mov
mov
mov
int3
int3
mov
stos
test
mov
ror
mov
stos
test
mov
shrb
scas
cmpsl
test
int3
xchg
scas
rcrb
mov
int3
movsl
scas
mov
ljmp
int3
movsl
int3
scas
int3
mov
int3
test
std
int3
dec
ljmp
int3
int3
int3
int3
int3
lahf
inc
sub
xor
cmp
or
cmp
lock
dec
lock
inc
lock
jb
mov
jl
mov
jbe
mov
adc
mov
or
mov
adc
mov
cs
sub
mov
imul
int3
inc
xor
test
rorl
mov
rorl
add
rorl
out
or
int3
inc
xor
in
imul
int3
inc
xor
shrl
rorl
leave
imul
int3
inc
xor
iret
std
or
xor
xor
xchg
xchg
or
inc
add
inc
adc
or
mov
or
inc
sub
add
pop
inc
popl
sbb
inc
mov
pushf
inc
popl
popl
pushf
mov
add
mov
inc
vpmacssdqh
add
mov
pushf
inc
popl
pushf
xchg
inc
vpmacssdqh
inc
iret
cld
int3
int3
int3
inc
xchg
inc
test
inc
clc
int
sub
cmp
cmp
dec
int3
int3
int3
inc
adc
adc
mov
int3
leave
push
sbb
adc
int3
int
sub
and
or
int3
cmpsb
int3
cmpsb
int3
inc
and
enter
pushf
inc
popl
pushf
add
and
mov
cmp
push
pop
int3
int3
int3
inc
and
int3
rcl
and
int
sub
xor
and
fmul
vpmacssdqh
mov
int
sub
xor
and
fmul
vpmacssdqh
mov
dec
rcr
xor
out
cmp
int3
int3
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
and
inc
lahf
xor
into
inc
sbb
sbb
or
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
dec
sub
dec
xor
inc
xor
int3
mov
loopne
and
enter
idivl
cmp
inc
cmp
mov
int
sub
xor
popl
inc
adc
int3
cmpsb
faddl
add
or
pushf
inc
popl
pushf
xchg
movsb
int3
dec
int3
int3
cmpsb
int3
inc
popl
popl
pushf
mov
int3
cmpsb
int3
inc
pop
pushf
inc
popl
pushf
mov
scas
inc
inc
push
lock
cmp
cmp
ss
sub
cmp
cmp
or
cs
das
xchg
push
ror
or
inc
sub
enter
sti
adc
cmpsl
int3
int3
int3
mov
mov
int3
int3
mov
xchg
int3
int3
int3
mov
jl
and
int3
int3
int3
fmull
and
int3
int3
jecxz
mov
int3
int3
and
rolb
test
sub
push
int3
test
dec
cmp
mov
ror
mov
and
lret
mov
cmp
int3
push
mov
fcompl
or
sub
cmp
fildl
and
cmp
cmp
push
int3
inc
mov
inc
ss
adc
cmp
cmp
or
push
cmp
cmp
jecxz
inc
and
dec
adc
cmp
inc
cmp
iret
les
int3
adc
ret
dec
int3
int3
adc
inc
xor
pop
enter
cmp
int3
mov
int3
inc
cmp
cmp
cmp
xor
leave
push
inc
int3
int3
int3
adc
inc
ss
lahf
cmp
into
std
push
inc
lahf
xor
cmp
cmp
ss
testb
ss
cmp
int3
mov
int3
adc
inc
ss
push
inc
lahf
xor
xor
cmp
int
std
push
inc
lahf
xor
dec
int3
int
out
cmp
int3
int3
inc
ss
or
xor
int3
inc
xor
or
ss
lahf
xor
dec
int3
cmp
int3
mov
or
inc
sub
or
les
mov
cmp
int3
int3
outsb
les
std
or
ret
dec
int3
std
push
inc
ffreep
dec
int3
leave
sbbb
int3
int
out
cmp
int3
int3
outsb
ret
dec
int3
std
or
les
inc
dec
enter
inc
aaa
std
or
ret
dec
int3
inc
dec
enter
std
push
inc
ffreep
dec
int3
inc
dec
enter
std
or
ret
dec
int3
inc
lahf
aaa
inc
pop
enter
std
or
les
leave
orb
int3
std
push
inc
ffreep
dec
int3
leave
sbbb
int3
int
out
cmp
int3
int3
inc
aaa
std
or
aaa
inc
dec
enter
decb
inc
cmp
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jp
mov
mov
mov
mov
dec
jne
lea
mov
mov
inc
dec
dec
xchg
mov
mov
xchg
lea
lea
xchg
movl
cmp
jle
dec
inc
inc
dec
xchg
cmp
jbe
lea
mov
lea
xchg
mov
lea
mov
mov
inc
dec
lea
dec
inc
inc
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
inc
dec
je
xchg
lea
lea
mov
lea
mov
xchg
inc
dec
mov
mov
call
mov
cmpl
je
xchg
mov
mov
mov
mov
mov
lea
mov
lea
inc
dec
je
mov
dec
inc
dec
mov
cmp
je
mov
subb
mov
mov
mov
mov
xchg
lea
lea
lea
xchg
lea
dec
inc
dec
je
mov
mov
dec
inc
mov
xorb
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
inc
dec
je
xchg
lea
lea
mov
lea
mov
xchg
inc
dec
incl
mov
cmp
jne
mov
cmp
jnp
xchg
xchg
xchg
mov
lea
lea
dec
dec
dec
mov
lea
mov
mov
lea
mov
dec
dec
mov
call
xchg
mov
mov
mov
mov
mov
lea
mov
lea
inc
dec
je
mov
dec
inc
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
xchg
mov
mov
mov
mov
mov
lea
mov
lea
inc
dec
je
mov
dec
inc
dec
mov
mov
mov
mov
xchg
lea
lea
lea
xchg
lea
dec
inc
dec
je
mov
mov
dec
inc
xchg
mov
cmp
jns
lea
lea
dec
mov
inc
dec
inc
mov
lea
mov
xchg
lea
mov
xchg
xchg
push
mov
push
call
mov
pop
ret
nop
push
mov
add
xchg
mov
cmp
jns
lea
lea
dec
mov
inc
dec
inc
mov
lea
mov
xchg
lea
mov
xchg
xchg
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
cmp
jns
xchg
lea
xchg
xchg
mov
mov
mov
xchg
mov
mov
mov
lea
inc
inc
inc
movb
mov
mov
mov
mov
xchg
lea
lea
lea
xchg
lea
dec
inc
dec
je
mov
mov
dec
inc
mov
mov
pop
ret
nop
push
mov
add
xchg
mov
mov
mov
mov
mov
lea
mov
lea
inc
dec
je
mov
dec
inc
dec
call
call
cmp
jle
dec
inc
inc
dec
xchg
cmp
jbe
lea
mov
lea
xchg
mov
lea
mov
mov
inc
dec
lea
dec
inc
inc
call
test
jne
mov
jmp
movw
cmp
jo
lea
mov
xchg
lea
inc
mov
mov
lea
mov
inc
inc
dec
xchg
mov
mov
mov
mov
inc
call
lea
mov
pop
ret
mov
push
mov
add
xchg
mov
mov
mov
mov
mov
lea
mov
lea
inc
dec
je
mov
dec
inc
dec
cmp
jns
xchg
lea
xchg
xchg
mov
mov
mov
xchg
mov
mov
mov
lea
inc
inc
inc
push
call
mov
call
cmp
jle
dec
inc
inc
dec
xchg
cmp
jbe
lea
mov
lea
xchg
mov
lea
mov
mov
inc
dec
lea
dec
inc
inc
mov
pop
ret
add
cs
jae
jae
gs
xor
pop
jne
je
jae
fs
insb
and
add
add
jae
mov
mov
cmp
jnp
xchg
xchg
xchg
mov
lea
lea
dec
dec
dec
mov
lea
mov
mov
lea
mov
dec
dec
mov
mov
mov
lea
call
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
inc
dec
je
xchg
lea
lea
mov
lea
mov
xchg
inc
dec
ret
lea
ret
lea
add
add
or
mov
add
or
add
mov
push
int
mov
push
xchg
push
mov
loope
sub
xchg
push
cmp
add
mov
add
add
leave
mov
adc
cmpsb
pusha
scas
and
adc
cmp
add
test
push
add
shll
xchg
loopne
repz
add
add
or
add
inc
cmp
jne
lock
pop
pause
add
add
pop
imul
pop
xor
in
rolb
xchg
stos
add
sbb
sub
xchg
jo
push
repz
push
dec
add
inc
add
arpl
cmpb
add
sub
push
sub
xor
push
test
data16
add
xchg
addr16
inc
pop
cli
add
mov
into
fistpll
test
push
xor
jno
jnp
sub
popf
add
out
jg
scas
jb
test
push
add
aas
add
imul
add
dec
xor
out
push
test
pop
fidivs
add
push
push
add
dec
adc
je
and
mov
sub
jne
push
add
mov
add
popf
in
sbb
mov
add
popf
clc
mov
mov
mov
or
negb
pop
add
ljmp
mov
jmp
pop
push
add
mov
test
sub
mov
mov
fldenv
pop
sbb
mov
inc
scas
lea
cltd
mov
in
sbb
dec
add
adc
mov
stc
add
add
jb
dec
add
add
enter
mov
lret
sub
sti
add
add
out
testb
xchg
add
pop
push
xor
sub
jp
insl
push
add
add
add
cld
mov
add
mov
add
mov
push
pop
pop
mov
cmp
add
or
sub
imul
add
push
gs
mov
jnp
adc
roll
rcl
ds
jns
rcrb
pop
adc
dec
cld
add
roll
enter
jl
jge
mov
outsl
stc
jmp
adc
icebp
fiaddl
add
mov
add
in
cmp
add
sahf
cmp
mov
push
ficoml
add
in
add
pop
cmp
jno
pop
and
dec
xor
icebp
add
pop
stos
xor
aaa
and
add
add
cmpsl
and
out
add
add
or
xlat
and
data16
cli
push
in
or
add
call
inc
stos
fwait
push
push
push
fsubrl
add
rcrb
push
dec
pop
push
add
mov
movb
filds
jae
add
fidivl
add
add
fildl
shrb
pop
jmp
xchg
add
imul
add
add
mov
pushf
add
add
mov
arpl
mov
fs
add
push
icebp
xchg
jecxz
add
jno
mov
add
push
pop
mov
push
loope
popa
test
shrl
lcall
ret
stos
add
loopne
mov
sahf
iret
add
add
data16
add
push
add
enter
push
add
mov
add
rol
data16
popf
and
add
sub
pop
xchg
insb
nop
dec
mov
lret
ret
outsb
push
add
and
insb
push
jbe
push
add
data16
sub
insb
pop
js
xchg
mov
dec
add
add
cmpsl
push
add
fiaddl
rorl
loop
pop
dec
call
push
dec
ljmp
ret
inc
push
mov
repnz
and
adc
push
maskmovq
mull
je
je
roll
sbb
push
repnz
outsb
fnstsw
enter
bound
repnz
pop
mov
out
push
in
xchg
and
pusha
add
ljmp
xor
mov
xor
cmp
out
movsl
xchg
lret
test
push
push
mov
cmp
xchg
dec
sbbl
inc
mov
mov
loope
fwait
xchg
sub
add
mov
out
push
jb
jns
lods
jns
adc
xchg
jns
repnz
push
arpl
and
cmp
jp
xor
jl
dec
pop
cwtl
mov
dec
and
jne
ret
pop
rcr
or
addr16
mov
int
out
lods
add
pop
daa
mov
int
loop
jl
mov
insl
enter
dec
jnp
mov
into
in
fs
adc
sbb
iret
out
mov
ret
lahf
pop
and
dec
jae
pop
insl
push
or
popf
push
loopne
inc
std
cmp
dec
dec
aad
add
mov
imul
scas
pop
and
rclb
loop
scas
jb
leave
out
fwait
hlt
addl
inc
or
sbb
fisttpll
aaa
int3
jae
or
daa
test
pop
addl
out
xor
pop
jo
adc
adc
and
repz
cmpsl
movsb
jb
lods
push
insl
mov
jbe
movsb
jge
pop
dec
enter
daa
mov
or
jno
dec
adc
inc
dec
push
cltd
inc
xor
sbb
adc
push
orl
add
pop
sahf
cmpsb
jno
cli
in
icebp
sub
js
cmp
pop
sub
pop
push
push
xchg
loope
inc
aaa
sub
out
movsl
cmp
cmp
test
xchg
add
add
sbb
sub
add
ret
mov
jg
pop
push
mov
pop
xchg
movd
lret
pop
and
push
lcall
cmc
fsubl
stos
mov
jle
fildll
shlb
sub
xor
and
mov
jno
ss
iret
and
iret
xor
stos
xchg
out
push
inc
imul
lret
fwait
in
insb
lret
add
std
shll
mov
xlat
mov
scas
and
lock
test
push
xor
push
outsl
fisubrl
shl
ret
stc
pop
insl
aas
fs
lock
push
push
cmp
mov
sub
cmp
imul
test
xchg
scas
adc
pop
push
fsubp
and
push
pop
mov
mov
inc
adc
adc
cwtl
and
lea
jmp
inc
xlat
sbb
daa
sub
pop
mov
shr
sti
pop
insb
sti
sub
out
mov
jl
push
enter
push
push
inc
popf
pop
loope
cmp
loopne
repz
xchg
fs
sbb
enter
and
cmp
lods
icebp
and
arpl
aad
cwtl
xor
or
xchg
dec
jb
lret
and
adc
push
cwtl
mov
adc
cmp
mov
int
mov
xor
dec
testb
pop
cmp
inc
mov
outsl
sub
jb
repnz
lods
cltd
arpl
jg
rcll
mov
and
jmp
or
loope
mov
cmp
cld
into
adc
lret
pop
inc
xchg
sub
mov
bound
aas
shr
jp
sub
push
jp
lcall
xor
and
f2xm1
jo
dec
jno
ljmp
arpl
or
sbb
outsb
push
out
fisttps
orps
add
or
pop
test
repz
mov
jns
push
mov
in
movsl
loopne
test
subb
mov
cmp
loope
or
jo
jne
xchg
out
jno
std
xchg
imul
add
loope
xor
dec
clc
or
lret
pop
push
cmc
mov
stos
push
fcomps
pushf
cmp
repz
jbe
rolb
add
or
ret
imul
fcomps
and
mov
dec
inc
jg
or
jns
cmp
in
xchg
fsts
adc
test
adc
sbb
ds
pop
and
es
jne
fsub
pusha
icebp
iret
fisttps
loop
jg
movsb
jmp
insl
ljmp
repz
adc
or
sub
stos
sbb
fsubl
test
and
mov
jg
ds
out
in
lea
iret
dec
clc
test
pop
push
inc
hlt
mov
jb
inc
xchg
iret
popf
push
and
adc
inc
loope
js
std
loopne
xchg
push
or
imul
scas
push
in
popf
cmp
lods
gs
mov
add
mov
arpl
in
inc
or
lea
cwtl
jae
aaa
mov
xchg
in
roll
dec
push
iret
int3
jmp
es
mov
add
mov
call
jo
push
push
scas
popa
jge
and
cmpl
mov
movsb
std
mov
sub
repz
jbe
enter
daa
mov
adc
jl
test
push
lahf
call
jl
mov
push
lods
push
push
jae
test
orb
inc
jecxz
out
hlt
andl
jno
js
dec
cmp
imul
sub
loope
out
sub
mov
fidivrl
cmpsl
inc
shll
push
jno
test
inc
or
imul
in
add
stc
xor
mov
push
sbb
pop
mov
ds
lcall
fs
xchg
mov
outsb
mov
jle
adcb
ja
popf
popa
movsb
mov
mov
mov
mov
clc
and
ljmp
jge
aas
fsubs
bound
lret
mov
mov
mov
jae
xchg
jmp
jns
pop
push
sub
loop
mov
stc
adc
shrb
mov
push
cmp
pushf
test
test
or
dec
xor
loop
popa
cmp
into
ja
cmc
pop
inc
in
mov
sub
adc
lock
stos
dec
add
dec
jb
xor
dec
cmpb
sbb
sub
adc
in
sub
decb
stos
gs
cs
dec
std
pushf
fadds
push
sahf
fnstenv
stc
imul
daa
and
iret
call
mov
in
outsl
adc
sub
jmp
inc
ss
and
rolb
aas
and
and
je
pop
jecxz
test
lea
jo
cmc
mov
push
mov
xchg
dec
loope
xor
dec
lds
or
daa
mov
fsubrs
push
adc
fidivl
mov
inc
push
inc
shll
xor
scas
sbb
mov
fwait
xlat
icebp
push
and
pop
lret
mov
jnp
icebp
jno
mov
adc
imul
gs
stos
adc
es
subl
push
jbe
mov
movsl
ljmp
cltd
lods
out
cli
mov
cmp
rcll
sub
mov
jnp
aad
mov
xchg
js
mov
test
popa
push
xchg
stos
cmp
movsb
dec
sarl
pop
das
pop
cmpsl
aam
stos
orb
mov
xor
mov
mov
decb
cwtl
cwtl
fnstenv
mov
stc
xchg
mov
pop
test
add
bound
inc
loopne
mov
fwait
cmc
xor
push
gs
rolb
mov
shll
es
jo
in
aas
cli
xchg
pop
dec
xchg
mov
imul
mov
sbb
cld
jp
mov
cmpb
bound
fisttpl
jne
inc
in
pusha
mov
fildll
out
push
pusha
ss
cmp
shl
dec
sub
inc
mov
push
cli
pop
lds
fwait
mov
sub
scas
pop
jle
mov
in
sbb
iret
lods
inc
xor
cmp
pop
inc
push
fs
jge
push
or
test
add
sbb
lret
mov
or
bnd
inc
scas
int
push
push
in
sti
rol
pop
mov
push
and
leave
aad
es
sbb
je
call
fists
or
push
sub
aaa
dec
mov
cmp
out
adc
pop
mov
loope
push
fisubrs
xor
scas
inc
sub
cmp
aas
call
jbe
sbb
jge
jns
enter
daa
mov
shlb
inc
orb
inc
popa
pop
push
subb
xor
push
adcl
daa
mov
test
dec
xor
insl
cmpsb
ja
call
js
clc
and
stos
dec
addr16
jmp
ljmp
add
outsl
xchg
test
lret
movsl
mov
inc
push
sbb
movsb
sbb
roll
cmp
sbb
icebp
mov
sub
jmp
mov
push
fs
dec
js
pop
adc
outsb
push
push
adc
cs
mov
cmp
in
mov
xor
jno
int3
aam
and
cmpsb
push
mov
sub
in
fsubs
lods
negl
pop
xchg
loop
imul
inc
jne
mov
mov
sahf
ss
insb
pop
aam
mov
adc
call
outsb
icebp
mov
adc
leave
cltd
ss
push
sub
xchg
pop
sar
jmp
xor
loope
cmp
xchg
and
subb
pop
cmp
loopne
add
pop
clc
das
adc
cmp
popf
imul
insl
call
mov
lods
cltd
jo
cmp
mov
sub
fsubl
xchg
adc
daa
imul
cli
push
lds
nop
or
jmp
cli
fldcw
dec
xor
xchg
ljmp
call
pop
lock
aam
pop
cmpb
inc
mov
int3
jg,pn
sbb
pop
iret
dec
inc
aad
pusha
aas
les
mov
dec
adc
or
mov
nop
imull
ficomps
cwtl
mov
ja
sub
mov
sbb
dec
int3
in
fstpt
mov
sahf
xchg
inc
scas
subl
adc
das
xor
sbb
into
jle
shll
pushf
in
push
nop
testb
push
cmpsl
mov
mov
sub
pop
cld
and
ror
std
testl
mov
mov
stos
inc
sub
insl
aaa
aam
jmp
ret
cmp
jo
cmp
mov
aam
dec
inc
cs
leave
subl
insb
std
popa
int3
aam
push
sbb
mov
pop
movb
movsb
leave
bound
adc
repz
jae
cltd
sbb
dec
mov
incl
push
cmp
in
test
inc
xchg
mov
pop
icebp
pop
rorl
stc
lea
aaa
pop
pop
xchg
stc
xor
decl
dec
jecxz
ud2
jnp
bnd
mov
mov
cld
dec
sbb
pop
aas
push
popa
ja
lret
pop
xchg
incl
lcall
and
pop
push
or
pop
mov
sahf
test
pop
fwait
sub
sbb
jns
adc
insb
xchg
pop
int
fwait
ja
mov
adc
pop
jno
push
jecxz
mov
leave
or
mov
int3
jne
sbb
icebp
jecxz
xchg
dec
jmp
add
cmp
xor
stc
into
jl
or
leave
ds
cmp
stos
add
ja
dec
std
pushf
jnp
push
adc
add
in
or
adc
dec
iret
or
add
aad
inc
or
jae
jb
push
int3
jg
popf
fisttpll
xor
inc
fcomip
inc
fisubl
mov
sbb
ret
in
imul
das
scas
xor
ffree
loop
mov
repnz
sub
dec
stc
xchg
hlt
fs
xor
or
push
ja
aaa
or
sbb
jns
std
add
call
pop
adc
jmp
divl
or
scas
pop
xlat
jl
aaa
adc
jbe
sub
push
pop
or
mov
inc
enter
daa
mov
and
inc
inc
shll
rcll
mov
jg
push
gs
enter
push
and
loop
lahf
scas
cli
popa
test
push
mov
inc
add
cmpsb
cli
enter
cmpsl
mov
in
ss
pop
jmp
pop
test
xlat
cwtl
sub
jg
cmp
push
lea
xchg
push
dec
popl
mov
icebp
lea
mov
fs
popa
push
xor
lret
pushf
cmp
imul
sub
pop
lahf
cs
lcall
add
daa
fistl
outsb
imul
orb
jg
in
push
mov
call
fs
shlb
in
aam
mov
es
xchg
stos
fcomps
dec
neg
fnstcw
or
mov
data16
aad
adc
xor
loop
fmuls
andl
push
mov
dec
ss
or
jne
xchg
mov
cli
xor
cmp
in
ret
std
popa
into
cmp
call
cmpsb
pop
pop
cmp
setb
loope
mov
imul
lret
jbe
cmp
loop
mov
inc
mov
sti
imul
and
or
dec
mov
xchg
mov
jnp
aas
lahf
xchg
lods
subb
fsts
sahf
fisubs
adc
call
loop,pn
das
aad
add
lock
arpl
decl
les
je
pop
xchg
jecxz
sub
lea
dec
cwtl
imul
sbb
inc
orl
jp
cmpsl
jns
pop
and
push
inc
xor
test
das
pshufw
dec
mov
pop
cld
jo
add
mov
dec
xor
jecxz
fstpt
icebp
add
mov
lret
insb
clc
hlt
mov
xlat
mov
dec
cmpsl
mov
mov
adc
aam
xchg
leave
adc
mov
jecxz
clc
mov
dec
xchg
or
ljmp
test
pop
sarl
cs
push
jg
arpl
jae
les
sti
je
cltd
push
add
test
pushl
decb
dec
fstpl
je
test
loopne
xchg
sbb
icebp
cltd
shl
inc
pop
pop
std
icebp
pop
stos
inc
jo
out
lcall
add
es
ljmp
xor
or
xchg
add
and
das
dec
jg
jg
cli
nop
bound
mov
dec
dec
jbe
inc
push
pushf
mov
fwait
push
inc
push
stos
rcrb
add
inc
adc
out
out
test
jns
pop
push
in
nop
fists
fisubrs
mov
adc
shlb
jl
jp
fcmovb
mov
xor
in
mov
das
lret
dec
scas
inc
std
jne
push
jno
ret
fbld
adc
jmp
into
lods
jo
mov
out
ret
hlt
scas
leave
mov
js
jno
jne
sti
and
or
jnp
mov
jle
inc
in
pusha
jp
push
add
iret
push
dec
ret
or
rorb
adc
lods
fcoms
mov
enter
testl
into
pop
xchg
pop
dec
into
sbb
jno
imul
clc
scas
xchg
pushf
aam
jb
adc
std
mov
shl
lahf
nop
leave
ret
js
hlt
scas
aaa
andb
pop
inc
adc
sbbl
push
mov
enter
insb
ret
dec
add
mov
pop
aas
and
lds
pusha
jo
test
and
movsb
loop
sub
cmp
push
test
lret
and
enter
daa
mov
dec
cmp
cltd
jno
inc
sbb
iret
dec
and
lock
dec
lea
mov
lahf
into
sub
test
loope
std
inc
nop
add
cmpsb
jge
in
in
lea
inc
pop
sub
sbb
test
loope
cmpsl
mov
cmp
fwait
ds
jns
mov
outsl
shrb
mov
sub
sbb
jmp
add
xchg
xchg
mov
std
adc
cs
sub
inc
push
lcall
or
sarb
sub
mov
jp
lret
into
jae
inc
mov
and
aam
push
mov
popf
int
and
fcom
gs
notl
lret
je
pop
dec
jae
xchg
push
sahf
jl
scas
test
out
xor
imull
out
loop
cmp
add
mov
imul
sbb
adc
xchg
popf
add
mov
mov
or
mov
and
jno
pop
or
adc
sahf
jge
fsubs
adc
in
push
add
dec
movsb
mov
lods
addr16
sti
cmp
inc
fst
pop
movsl
aas
sub
xor
mov
insb
orl
mov
adc
sbb
push
fstps
setne
sbb
add
cwtl
sbb
mov
ja
sbb
call
pushf
pushf
popf
pop
push
jmp
jnp
cs
ficoms
inc
or
aas
add
and
add
call
fninit
loopne
xchg
sti
fwait
lea
mov
mov
xchg
mov
stc
rcrl
cmp
inc
push
lock
das
out
and
mov
mov
into
and
int
rcll
mov
test
sub
in
mov
fnstsw
fimull
cld
jp
xchg
lret
fstpt
mov
lret
sub
fisubrs
fcom
ss
pop
sub
xchg
xchg
push
or
or
pop
clc
vpcmpeqw
imul
lods
daa
jae
mov
mov
or
push
pop
add
psrld
xchg
std
imul
xor
or
inc
insl
iret
test
jge
xchg
fwait
sbb
xor
cmp
mov
pop
out
std
insl
fsts
repnz
leave
jmp
sbb
lods
xor
incb
xchg
pusha
fistps
pop
in
ja
int
dec
inc
push
sub
or
xchg
dec
fwait
cmpb
dec
or
ds
cmpsl
mov
popf
add
lds
bound
push
jns
dec
add
xchg
add
shlb
sub
or
adc
jp
test
mov
xchg
outsl
dec
xchg
in
jne
jmp
pusha
pop
bound
ffreep
stos
adc
shll
sti
xchg
cltd
inc
mov
ljmp
mov
hlt
mov
push
mov
dec
stos
call
jb
insb
and
jnp
loopne
jle
jg
in
sbb
xor
add
jb
movsl
pop
xor
mov
sub
push
push
cmp
popf
sub
xor
fstpt
xchg
mov
pop
sbb
repnz
or
pushf
mov
mov
add
repnz
lods
or
pushf
cmc
hlt
cli
mov
arpl
fmull
test
push
aaa
xchg
or
push
add
fsubs
ficoms
inc
mov
call
xor
adc
or
pop
insl
aas
cmp
das
pop
movsb
sub
fwait
jbe
push
xchg
jge
fptan
enter
daa
mov
adc
test
lock
fiadds
adc
dec
xchg
or
sub
and
cmc
lahf
in
ja
push
mov
push
adc
jns
pop
in
cmpsb
add
into
in
je
inc
js
outsl
ficoml
subl
add
scas
push
jl
out
xor
mov
sahf
lods
popl
adc
pop
clc
pop
sbb
faddl
sbb
xor
xor
pop
push
aas
xchg
sub
fs
popf
aad
lcall
sub
sub
vmovd
sub
adc
jg
ss
mov
mov
call
bound
dec
push
mov
xchg
add
notl
in
lret
sub
mov
pop
sbb
add
test
iret
xor
sub
outsl
xor
iret
ja
icebp
ds
adc
pushf
ss
repz
mov
in
out
add
cli
aam
push
xor
jecxz
iret
push
add
cmp
xchg
loopne
stos
mov
push
push
jmp
imul
stos
clc
add
add
jmp
pop
cmp
shlb
push
fistl
mov
xlat
ja
sti
jle
ret
fidivrl
nop
sahf
lea
inc
cld
mov
les
ret
xor
xchg
call
pushf
inc
mov
and
pushf
dec
add
test
cs
jae
fmull
xlat
inc
es
iret
aas
mov
xchg
dec
jbe
inc
je
push
xor
pushf
fcoml
cltd
stos
push
lea
outsb
sbbb
out
mov
and
lea
in
add
pop
sbb
ds
shll
mov
aas
cmp
lahf
sti
inc
divb
mov
dec
inc
decl
xor
push
icebp
mov
push
cld
movsl
dec
ds
dec
inc
pop
mov
test
jno
hlt
pop
std
add
sub
out
ret
out
cli
es
insl
push
lcall
fidivs
popa
adc
add
mov
les
cmp
jle,pt
xor
add
adc
test
pushf
in
jno
sti
push
test
xor
outsb
scas
mov
xor
pop
rcll
fsubrl
pusha
xor
or
rcll
insb
dec
cmpsb
or
xor
mov
icebp
xchg
ret
mov
into
dec
xor
or
or
cwtl
out
mov
xchg
push
icebp
cmp
add
clc
cmp
out
movsb
mov
push
in
xor
mov
mov
mov
push
cs
addr16
mov
mov
jns
mov
push
pop
repz
jne
outsb
jne
ljmp
in
dec
xchg
sahf
xchg
xchg
lret
xchg
sub
stos
sarb
addb
mov
mulb
adc
testl
dec
jnp
into
aam
in
lods
cmpsl
in
fsts
or
dec
iret
sub
pop
insb
mov
repz
in
inc
push
adc
and
cmp
xchg
push
fidivrl
xchg
or
addr16
dec
insb
imul
in
pop
xchg
and
icebp
cmp
xor
mov
mov
arpl
hlt
inc
mov
and
push
inc
sbb
jle
pop
sbb
rclb
aaa
inc
sub
or
dec
add
pop
int3
adcb
popf
test
sahf
lds
mov
scas
mov
imul
push
inc
cmp
jbe
dec
mov
pop
insb
fwait
enter
daa
mov
pop
cmp
enter
fwait
inc
jl
into
aam
add
push
push
mov
and
lret
jecxz
jae
push
test
ja
out
inc
scas
or
in
pop
es
sahf
imul
loope
xor
sub
addl
js
ds
into
dec
movsl
mov
jecxz
pusha
jmp
subb
test
pop
and
add
repz
pop
ja
in
xchg
pop
jl
je
lods
pop
roll
out
stos
lcall
rcr
sub
sub
mov
xchg
sbb
adc
lcall
mov
aaa
decb
clc
jns
and
js
mov
jmp
fmuls
or
adc
arpl
mov
dec
sbb
mov
sahf
ret
test
ror
outsl
adc
mov
stc
test
inc
fs
test
jnp
sbb
push
or
imul
push
out
in
xchg
cli
pop
cwtl
cmp
jae
ja
data16
or
inc
je
out
pop
cmc
add
loopne
or
je
notb
mov
mov
lret
add
negb
lods
xor
out
jo
xchg
xchg
sub
xor
pop
sti
jbe
fdivrp
gs
aam
jns
lds
inc
add
fsubl
cltd
aad
xor
stos
rep
cmpsb
push
xchg
div
push
sbb
stos
pop
outsl
sbb
or
adc
adc
ret
jae
subl
and
dec
inc
inc
das
lods
aas
inc
imul
in
movsb
stc
je
push
aas
jecxz
sbb
pushf
iret
in
lea
sbb
and
sarl
js
cmp
xor
dec
pop
or
inc
lret
lock
mov
lods
lcall
testb
cli
insb
fcom
out
xchg
std
repnz
xchg
dec
and
adc
mov
jne
je
pop
icebp
mov
inc
cld
rolb
xor
mov
cli
inc
mov
sbb
cmp
fdivrl
sub
pushf
ret
jne
and
inc
jle
insl
dec
cmp
cmp
xchg
ljmp
mov
std
sbb
sub
inc
not
push
adc
cmpsl
add
popf
cltd
cmc
fsubs
mov
cmp
push
inc
pop
and
or
test
je
xchg
ret
sbb
sub
pop
shl
stos
movlps
xchg
adc
arpl
xor
cmp
xor
int
mov
mov
or
pop
sub
push
dec
sub
inc
sarl
or
jb
fwait
loopne
xchg
push
xchg
pop
flds
push
in
cli
out
cmpl
jle
dec
jns
adc
in
andb
mov
add
or
push
int3
addr16
push
and
sbb
mov
jne
inc
dec
pop
add
out
xchg
and
xchg
jno
jmp
das
rolb
add
out
fs
xor
fcomps
insb
clc
inc
jnp
jg
jle
into
mov
in
lods
adc
inc
inc
iret
xchg
jge
cwtl
aaa
fs
mov
out
jae
repnz
push
fadd
lcall
push
shlb
das
ud2
xchg
popa
pusha
sbb
jb
imul
out
mov
add
rorb
mov
repz
hlt
nop
scas
add
adc
lods
and
cli
insl
scas
aaa
add
out
pop
add
xor
pop
int3
adc
pop
or
jo
imul
and
inc
pop
movsb
aas
test
pop
jbe
mov
jge
loop
enter
daa
mov
daa
cmp
or
jno
jl
jl
repnz
dec
jno
mov
icebp
lds
xor
pop
sub
and
inc
push
inc
add
inc
cmp
ret
inc
in
inc
ret
add
testl
loope
lods
or
sub
scas
jns,pt
cltd
movsl
dec
rcl
std
cmp
mov
xor
add
and
xor
mov
test
push
pop
mov
out
xor
fwait
mov
push
pop
sti
imul
pop
outsb
cmc
add
adc
mov
mov
mov
mov
mov
and
sub
mov
and
fmuls
insb
not
clc
test
push
mov
loop
clc
int3
mov
gs
pop
test
cmp
xor
sbb
loop
xchg
mov
pop
test
fs
cmpsl
mov
lret
ss
xchg
ljmp
leave
adc
xchg
pop
lcall
or
or
inc
into
cmc
leave
jecxz
loopne
orb
pop
std
push
adc
and
add
mov
cmp
rcl
sub
jns
in
lods
loopne
sti
and
jp
gs
xor
push
inc
and
fnstcw
xchg
int
jnp
sub
or
rorb
pop
mov
adc
push
int
bound
outsl
aad
sub
bound
filds
jge
sbb
loop
je
mov
mov
addr16
out
xchg
cwtl
push
jae
mov
rcl
or
andl
dec
pop
scas
aad
push
pop
pushf
lock
das
mov
mov
lods
repz
and
cmp
idiv
pop
sahf
std
cltd
xor
dec
sbb
mov
mov
pop
mov
mov
mov
inc
add
cmpsl
call
pop
shrb
fildll
daa
mov
add
mov
enter
movl
notl
lods
push
aad
mov
dec
add
push
jmp
clc
pxor
cmp
inc
sbb
test
clc
mov
cmpsl
push
or
adc
fs
pop
xchg
sub
sbb
lret
test
subb
xor
add
add
cmpsb
adcb
adc
or
fdivl
xor
mov
rclb
pop
out
popf
ja
mov
dec
sbb
push
inc
push
push
or
and
fwait
shld
aaa
jae
add
scas
mov
out
bound
bound
or
jns
jmp
jp
icebp
xchg
jle
ljmp
or
jno
adc
mov
mov
dec
cmpb
pop
dec
cmp
xchg
and
and
xchg
inc
in
jmp
cli
hlt
pusha
or
xor
mov
add
movsl
repz
movsb
and
and
pop
pop
jnp
cmc
mov
jecxz
in
pushf
sub
iret
out
and
stos
push
out
fisubrl
push
inc
inc
adc
jecxz
sub
fwait
mov
popf
mov
mov
loop
jne
mov
outsl
cmp
jl
scas
pop
push
mov
jae
shrb
mov
inc
or
fldt
je
inc
pop
mov
push
or
mov
int3
aaa
les
mov
int3
pop
lds
inc
pop
fdivrp
fimuls
lds
mov
and
jmp
lret
push
in
or
cwtl
into
jge
cmp
xchg
daa
mov
pop
cmp
sub
dec
addl
aam
aam
jmp
aaa
and
in
add
sbb
test
or
and
cmpsb
mov
in
sub
adc
add
and
mov
loope
dec
adc
sahf
stos
cmp
jle
movsl
int
out
rcr
test
push
scas
and
push
popf
dec
sbb
in
insb
add
mov
rcl
imul
mov
scas
sub
push
outsb
movsb
data16
into
sub
pop
js
pop
fcmovnbe
adc
shl
dec
jg
mov
mov
outsl
popa
mov
inc
and
data16
push
ret
int
inc
xchg
fadd
inc
jg
xchg
or
lret
shll
fcomps
daa
lods
cwtl
sahf
or
das
test
pop
cmp
fisubs
stc
push
shl
fs
test
sbb
push
cmp
jns
fsubp
xchg
dec
add
insl
bound
and
stos
cmp
cmp
into
lods
mov
ljmp
pushf
push
adc
fimull
adc
fmull
adc
and
ret
jmp
lahf
sub
mov
in
sbb
sti
aam
fdivr
inc
or
gs
adc
nop
das
daa
decl
pop
movl
mov
les
and
dec
cmp
sbb
mov
inc
add
imul
fs
sbb
sarl
sarl
aad
shlb
ja
sahf
aas
jle
xor
xor
pop
je
inc
dec
jecxz
push
fwait
lea
outsl
cwtl
adc
push
mov
repz
mov
add
cmpl
movsb
fistl
and
inc
fdivrs
shl
enter
inc
mov
fs
in
adc
mov
cmp
dec
std
inc
add
dec
sbb
mov
sarl
rcrl
lret
xchg
jbe
mov
cmp
mov
mov
aaa
pop
pop
mov
rolb
adc
mov
xchg
mov
es
mov
repz
mov
movsb
xchg
inc
sbb
aaa
leave
dec
popa
push
or
mov
sub
jb
push
data16
dec
and
add
and
sub
mov
out
push
fstp
cmp
fistpll
stos
sbb
stc
rcrl
cmp
stos
in
test
out
mov
push
xchg
mov
out
inc
incl
dec
xor
stc
or
sub
jno
insl
or
xchg
dec
addb
mov
add
dec
push
jbe
inc
add
scas
or
mov
adc
fidivrl
add
or
cmp
jns
gs
in
sbb
cmp
mov
std
xlat
mov
divl
addr16
cmp
cmp
mov
insb
ss
push
loop
dec
push
cmc
pcmpeqw
pusha
leave
xor
filds
xchg
xchg
pop
fsubl
jmp
adcl
out
push
pushf
sub
loopne
rcll
test
stos
mov
bound
cmp
hlt
insb
into
mov
sub
push
in
push
in
in
adc
mov
mov
inc
dec
xchg
xchg
jae
leave
fists
pop
sbb
popf
aas
imul
aad
ficoml
cmp
sbb
inc
pop
imul
mov
andb
push
aad
rolb
repnz
ljmp
notl
push
scas
inc
and
and
jo
push
aaa
cmp
or
in
add
or
int3
inc
mov
int
mov
aam
jo
adc
scas
pop
inc
lds
test
out
popa
movsb
push
in
mov
jbe
in
es
jl
enter
daa
mov
jecxz
je
sahf
jno
stos
cmpsb
jl
mov
dec
dec
dec
adc
mov
je
sub
nop
les
imul
pop
test
fcomps
dec
cmpsb
or
mov
adc
and
push
aad
loope
sub
cld
nop
cmp
insb
mov
movsl
aam
inc
shlb
xchg
jnp
arpl
sbb
push
add
jns
xor
xchg
pop
icebp
shrl
sbb
push
cli
lcall
aaa
fsubrl
xchg
pushf
sub
push
mov
jmp
cmpsl
jg
out
lret
pop
fmull
fldenv
and
outsl
push
lds
mov
jle
xchg
notl
sbb
xchg
jns
push
rcr
sbb
adc
sbb
aas
inc
outsl
mov
inc
loop
sub
frstor
dec
adc
sbb
cmp
je
out
ret
sar
sti
push
xor
dec
push
cmp
cmp
or
sub
loopne
movsl
mov
adc
jmp
imul
cmc
or
idiv
lods
ljmp
xlat
push
fsubl
sub
push
mov
sbbl
mov
cmovns
cmc
outsl
jmp
dec
add
fldcw
int
push
xchg
push
repz
aad
aas
jnp
sbb
sbb
cwtl
dec
sbbl
ljmp
inc
rorl
clc
fisttpl
sbb
sub
dec
push
dec
cmp
int3
cmp
dec
movsl
repz
cwtl
int
and
and
mov
cmp
popa
pop
hlt
xlat
inc
pop
add
lock
jmp
sbb
and
sarl
fcmovnb
dec
idivb
pop
std
out
xor
stos
sub
mov
add
or
or
cld
push
sub
lret
push
sets
sub
cwtl
mov
jns
and
push
mov
sub
jp
ret
and
es
lea
insl
add
idiv
in
and
addb
ljmp
les
stos
in
mov
pop
inc
leave
push
mov
or
insl
mov
dec
test
divb
nop
mov
fldl
test
pop
cmp
pushf
sbb
mov
sbbb
stos
fcompl
mov
ljmp
jmp
aas
xor
sbb
xor
clc
frstor
fisttpll
dec
jmp
adc
orb
xchg
inc
cwtl
cltd
orb
jne
insl
ljmp
loope
test
out
and
out
bound
aam
jns
xchg
xchg
and
cmpl
adc
sbb
mov
mov
mov
ret
dec
add
jne
int
pusha
fs
out
fbld
call
cmpsb
xchg
and
and
mov
mov
mov
repnz
stos
daa
adc
and
xor
or
sub
jle
jmp
notl
js
xchg
iret
movsb
and
and
add
divb
fwait
add
popf
out
gs
sahf
fcmovnu
dec
movsb
xor
mov
pop
imul
test
xchg
rcrb
daa
repnz
sti
fxch
jmp
pop
arpl
jno
daa
jmp
or
sub
add
push
insl
pop
add
xchg
pop
pop
ljmp
mov
push
push
scas
cmp
xor
cmp
mov
ja
imul
mov
jge
sahf
inc
enter
daa
mov
mov
cmpsl
add
jl
push
loop
mov
xchg
xor
sub
pop
push
mov
cli
inc
push
mov
dec
imul
icebp
mov
mov
mov
push
xor
loope
imulb
cmp
lcall
mov
xorb
sbb
inc
jnp
mov
push
icebp
push
pop
sbb
leave
pop
sbb
lcall
dec
icebp
fwait
sub
cmp
outsb
push
push
adc
push
lods
jg
xor
dec
mov
js
mov
jno
mov
pop
daa
and
pop
int
sub
fdivrs
cmpsb
je
adc
dec
shl
js
or
xchg
sbb
xlat
in
test
shrb
mov
add
stc
test
fs
mov
mov
sbb
adc
jmp
add
daa
pop
out
mov
divb
iret
lahf
out
adc
aam
cli
pop
fxch
jb
xchg
cmc
push
cli
std
loopne
push
fistps
loopne
adc
das
ret
push
xchg
adc
dec
push
jge,pn
data16
rorl
cmpsl
xlat
xchg
cmpsb
dec
sub
jo
mov
out
mov
sti
xor
push
gs
outsb
gs
in
sub
fdivrl
pop
and
fldenv
outsb
les
repz
nop
dec
sbb
xchg
cmpsl
mov
pop
aam
pop
mov
gs
pushf
lahf
or
xchg
or
aad
dec
adc
subl
jecxz
jb
pop
orb
and
pop
mov
test
daa
lea
pop
out
mov
mov
adc
stos
dec
and
in
fcomi
push
pop
pop
xchg
fwait
dec
inc
out
jo
mov
movsb
das
sub
inc
mov
es
pop
shrl
popa
add
ret
std
mov
dec
push
outsb
dec
cmpsl
scas
mov
aad
in
data16
jl
sbb
jne
and
lock
mov
cwtl
push
lods
shrb
mov
subb
mov
ret
mov
or
push
sar
insl
jmp
add
daa
mov
xchg
shrl
sbb
xlat
call
mov
jae
mov
push
jl
or
add
inc
fiaddl
mov
push
push
addr16
sub
sub
xchg
into
sbb
imul
stos
lret
dec
sub
xor
xchg
lret
pusha
incl
pop
or
scas
cmp
pop
lock
leave
cs
push
adc
pop
pop
pop
cmp
dec
hlt
popa
scas
inc
das
xchg
or
and
push
and
add
mov
cltd
dec
lret
jns
dec
push
test
in
xchg
ficoms
mov
leave
sarl
sub
cmp
in
dec
test
mov
xor
push
jne
shr
call
push
xchg
mov
out
hlt
xchg
pop
pushf
testb
sbb
mov
xor
cmp
insb
movsb
lock
out
stos
jle
fisubrl
add
iret
add
pop
jg
cld
inc
bound
mov
in
out
popf
adc
xlat
aaa
inc
xlat
ljmp
mov
pusha
loope
cmpsl
and
dec
mov
xchg
mov
xlat
adc
aas
inc
test
mov
rolw
bound
out
pop
aaa
add
adc
sub
sbb
jbe
mov
call
stos
jge
ss
ret
fs
cs
imul
rorb
jbe
repz
jge
movsl
popf
enter
daa
scas
mov
cmp
adc
jno
addr16
dec
sub
imul
and
scas
dec
lahf
cmpsl
cmpsb
rcll
test
sti
dec
fwait
push
outsb
mov
inc
jns
xor
in
ficomps
sub
pop
loope
push
push
dec
std
loope
add
sub
sbb
cmp
sub
pop
shrb
lret
jo
orb
push
add
and
mov
xor
sub
cmc
mov
xchg
sub
mov
push
jae
adc
sub
shrb
adc
and
push
mov
push
mov
ljmp
lret
and
int
repnz
hlt
ss
rclb
lret
and
jp
jecxz
hlt
rcrb
loope
sahf
icebp
inc
xor
sub
outsl
outsl
inc
outsb
loop
xchg
pop
stc
cmp
inc
outsb
shr
adc
add
push
inc
or
push
imul
push
ret
cmpsb
sbb
cmp
mov
scas
into
push
fldl
in
in
int3
sbb
wbinvd
stos
adc
aas
push
adc
add
mov
shrb
aaa
movsl
xlat
shl
push
sub
mov
pop
mov
lock
lods
outsb
mov
add
mov
shlb
dec
push
fstps
out
repz
sbb
test
insb
test
push
into
fstl
imul
iret
jmp
pop
jl
cli
mov
xor
lret
pop
mov
imul
test
negb
stos
dec
sbb
inc
shlb
mov
sub
addl
in
fistpl
jmp
pop
cmp
pushf
inc
insl
aas
test
das
pop
xchg
mov
mov
add
mov
add
jns
sub
add
mov
ja
scas
pop
sbb
jae
jle
mov
adc
lret
in
insb
mov
addr16
inc
data16
mov
sar
mov
push
mov
xchg
aam
mov
clc
fistpll
add
ljmp
add
nop
pusha
mov
data16
push
push
inc
packssdw
sub
xchg
int
cltd
or
and
push
lea
fstl
jo
push
cld
cltd
xchg
shrb
sbb
dec
rcrl
xchg
stos
mov
xor
inc
add
psllw
pop
jmp
ds
xor
mulps
int3
repz
dec
mov
call
ja
sbb
in
inc
mov
je
lret
inc
sub
ret
push
movb
sub
fisubrs
bound
mov
mov
in
cmc
sub
negb
mov
call
or
jp
in
mov
movsb
jne
push
popf
pop
mov
add
jne
push
add
in
fistps
clc
cmp
xchg
stc
push
xchg
es
addl
out
scas
arpl
xchg
mov
push
jo
xchg
stos
or
dec
ret
leave
mov
jle
mov
mov
cs
or
ret
ss
mov
cmp
and
pop
or
or
popf
cmp
daa
push
push
mov
push
xchg
adc
ja
mov
mov
scas
stos
dec
fwait
push
stos
sub
rcl
mov
sub
or
leave
jnp
push
hlt
pop
pop
lea
pushf
mov
iret
rorl
mov
je
or
jecxz
int3
fidivs
pop
mov
arpl
mov
xorl
mov
and
cmp
in
scas
movsb
testb
and
jbe
movsl
sahf
jge
nop
lahf
enter
daa
scas
fdivr
cmp
cld
push
jl
adc
dec
pushf
add
mov
and
jo
adc
test
cmp
mov
xchg
in
lds
push
js
imul
push
mov
lret
loope
xor
sub
call
and
sub
movsl
jmp
and
lcall
sbb
enter
adc
dec
rcrl
sbb
outsb
pop
push
pop
int
cmp
push
lret
fsubrl
and
sub
enter
mov
pusha
jg
and
mov
stc
fnstsw
mov
leave
and
mov
mov
lret
pop
insb
testl
imull
mov
push
add
sahf
xchg
movsb
incl
dec
popa
fisubrs
push
loop
cmpsb
xchg
cli
stc
repnz
fs
insl
xor
push
xchg
lods
ss
adc
mov
inc
out
cmp
jne
jge
lods
cmp
ss
fdivrs
cmp
dec
loopne
repz
adc
imul
pop
sub
orl
scas
into
dec
xlat
inc
sub
and
imul
fs
sti
nop
shr
ror
fsubl
pop
scas
nop
fwait
mov
dec
adc
mov
cwtl
mov
or
insl
xchg
mov
inc
call
adc
jbe
adc
lds
jmp
imul
popa
and
int
pop
inc
jecxz
xchg
aas
cli
cmp
dec
mov
iret
je
push
scas
sub
in
cld
cwtl
fwait
mov
lahf
out
mov
idivb
xchg
rcrl
cli
inc
xchg
fisttpl
loope
fucom
add
repnz
lock
enter
push
mov
inc
mov
ror
gs
dec
imul
mov
cmpsl
lods
cli
loope
cmpsb
cmp
cld
rol
pop
lret
push
jo
mov
jnp
jle
jl
scas
xor
pop
sub
sub
or
push
pop
jecxz
iret
sahf
adc
push
mov
insl
mov
fwait
sti
xchg
aas
rclb
popa
mov
subl
sti
nop
and
xor
or
lret
add
into
cmpsl
test
or
fldenv
jb
jns
fildll
push
mov
adc
pop
add
jb
test
fldcw
mov
testl
or
sbb
mov
iret
sub
dec
push
insb
cmpsl
pop
lea
ret
sbb
lock
repnz
pop
push
data16
mov
mov
lods
lock
into
shr
mov
jns
mov
lds
jecxz
les
shl
jp
das
lahf
mov
push
mov
jge
dec
mov
mov
push
jne
ror
pusha
xor
lods
arpl
mov
rolb
pop
mov
sub
int3
xchg
add
loope
stos
andb
insb
jp
pop
jnp
mov
dec
in
repnz
or
or
sarl
clc
dec
pop
in
lea
jae
test
push
push
lock
arpl
arpl
mov
inc
aad
insb
fisubl
in
xchg
imul
test
push
icebp
std
shl
mov
leave
xor
in
lock
repnz
leave
hlt
push
js
arpl
gs
or
pop
cmp
aaa
jg
ret
or
aas
mov
arpl
int3
out
fists
fisubrs
dec
mov
aaa
adc
in
push
bound
cmc
add
pushf
in
into
movsb
andl
jbe
lret
mov
mov
daa
lods
jge
cmp
cmp
mov
jl
das
testb
lcall
pop
and
lahf
in
cmpsl
push
cmp
pop
test
add
push
inc
xchg
mov
lods
and
js
jno
pop
pop
mov
dec
loope
cmpl
mov
hlt
mov
dec
movsl
lock
lahf
rcrb
cmc
sub
scas
shlb
fistl
xorb
stos
xchg
cmp
stc
pop
lea
mov
xchg
adc
out
or
push
and
test
aad
sahf
sub
unpckhpd
mov
jg
xchg
inc
mov
or
jo
or
out
push
rcll
fsubrs
loope
dec
pop
mov
push
sbb
mov
sbb
test
test
rcrl
xor
out
shl
cmp
pop
stc
test
pop
cli
adc
cli
inc
or
mov
sar
insb
pop
xor
cmp
xchg
inc
mov
into
sbb
cmc
jae
sahf
loopne
loopne
pop
dec
gs
adc
cltd
imul
stos
andb
mov
ljmp
sub
mov
and
or
das
sti
jmp
aas
insb
movsl
repz
gs
mov
dec
jno
adc
lods
pop
les
xchg
repz
push
ja
dec
xchg
imull
call
xchg
mov
pop
lods
jbe
mov
jp
cs
aad
jmp
les
cltd
jmp
mov
cs
jb
clc
leavew
jecxz
dec
fcmovb
mov
inc
lea
sbb
pop
lods
mov
lock
subl
jb
fstpt
dec
pop
xor
inc
jnp
movsb
lock
xor
das
lds
mov
testl
cwtl
testb
push
dec
ljmp
mov
mov
imul
lret
ret
mov
push
mov
out
popf
mov
cmc
sbb
shlb
mov
or
pop
inc
movsb
fimull
insl
mov
jmp
xchg
jle
mov
popa
leave
sbb
lods
ljmp
mov
je
outsb
push
or
fcoms
cltd
jbe
ret
test
mov
push
pushf
xor
frstor
or
aam
inc
sbb
movsb
rorl
pop
stos
xor
stos
cwtl
add
xlat
xchg
push
fbld
in
fcos
pusha
out
xor
lahf
or
xchg
xor
jbe
mov
rcr
int3
dec
test
mov
test
ja
arpl
dec
int
inc
inc
hlt
xor
inc
cwtl
inc
fwait
sub
push
add
shl
xchg
out
pushf
sbb
jns
jno
in
jmp
mov
loop
mov
ficomps
jo
xchg
scas
mov
daa
in
mov
jle
or
jp
jne
lock
mov
add
ss
xchg
xchg
mov
pextrw
xor
cli
pop
sarl
jns
stos
repz
and
cmc
fs
lret
jle
retw
in
das
in
adc
ds
and
mov
pop
and
inc
inc
addl
push
sub
out
push
push
call
fwait
xchg
ret
sbb
lds
jno
dec
push
cmp
rorb
jg
push
dec
sub
imul
pusha
inc
xor
or
pop
loopne
aaa
add
add
pop
or
pop
adc
fcomps
lds
cwtl
and
mov
andb
xor
lods
arpl
push
adc
cld
inc
shll
lods
cmpsb
cmpsb
cmp
add
xchg
fnstsw
popf
dec
jp
sub
cmpsb
divl
xchg
es
add
loop
or
sbb
std
inc
es
clc
cmpsb
fwait
stos
enter
fs
or
pop
sahf
hlt
iret
push
mov
inc
sub
fstpt
mov
outsl
std
movsl
divl
rorl
arpl
sbb
cmpsb
pop
add
xchg
pop
xor
popf
not
std
data16
pop
mov
iret
sub
ljmp
nop
or
andb
stos
testl
jg
or
mov
stc
lahf
mov
fidivl
push
test
push
aam
pop
int
cmpsb
sub
and
dec
add
inc
jecxz
sarl
add
sbb
cmp
shl
xor
fistl
or
xor
int3
xor
stos
fs
adc
mov
cmp
pop
addr16
mov
dec
cli
lahf
mov
xor
pop
jp
mov
scas
mov
cmc
cmp
push
loopne
loopne
pop
insb
cltd
xor
and
imul
adc
push
xchg
data16
lods
insl
jg
cmp
notl
sub
inc
in
lcall
push
push
dec
nop
push
jbe
dec
shlb
adc
aas
arpl
les
push
daa
xchg
push
imul
push
xchg
lret
xor
adc
mov
outsb
loope
adc
mov
dec
nop
push
and
sahf
inc
sbb
fwait
aas
cmp
jg
movsl
orb
and
fimull
je
hlt
mov
clc
ja
jecxz
das
add
ja
fldt
mov
lock
xorb
push
pusha
push
mov
push
or
into
fwait
jno
sub
add
or
push
inc
dec
imul
xor
push
mov
pop
cmp
adc
scas
shlb
sub
aam
xchg
std
ret
in
sub
es
bound
clc
adc
jbe
mov
jne
popa
loopne
outsb
lods
push
jmp
mov
and
call
aad
add
call
xchg
test
in
mov
jo
push
pop
mov
ffree
and
test
jo
xchg
rcrl
jnp
pop
shll
dec
fs
xchg
adc
clc
xchg
dec
jne
add
je
jmp
push
xor
mov
mov
daa
jns
aaa
js
aad
movsl
dec
in
push
add
aas
out
insl
iret
pop
dec
shrb
or
adc
push
lods
sar
test
sub
out
jnp
out
push
ficoms
cmp
inc
in
lret
xchg
sbb
bound
fsts
out
mov
pop
nop
mov
in
xchg
pushf
dec
jo
xchg
jne
jae
pusha
imul
sti
adc
xchg
or
fsubr
jns
push
xchg
xchg
loopne
mov
mov
sbb
sbb
icebp
push
sub
fdivl
and
push
pop
insb
push
dec
insb
jnp
popf
fnstcw
daa
jl
sbb
push
mov
jne
ret
jle
pop
cld
lock
mov
jae
mov
push
lock
inc
mov
roll
lods
push
xchg
sbb
or
imul
scas
aam
jo
jg
inc
shlb
int3
mov
mov
leave
loopne
shl
call
inc
inc
ss
fwait
or
rcrb
fnstenv
std
mov
frstor
mov
vpminsw
cmc
jl
je
inc
lds
shlb
out
pop
scas
xchg
inc
push
and
outsl
lds
or
movsb
xchg
xchg
outsl
push
push
ljmp
cmpsl
out
enter
daa
stos
push
cli
cmp
xchg
adc
mov
movsb
lds
or
xor
xor
lahf
and
push
fidivrs
push
lcall
cmpsb
push
ja
in
jp
xor
cmp
mov
push
sahf
loop
jmp
pop
sub
dec
stc
cmp
jns
xchg
insl
jle
das
test
aad
mov
aad
bound
dec
pop
pop
add
popa
or
mov
and
sub
cmp
lcall
add
sub
test
jg
mov
or
in
orb
fidivs
pop
iret
fbstp
dec
xchg
push
xlat
sub
pop
add
loopne
sub
int3
mulb
lret
leave
rcl
jl
mov
ss
sahf
jge
pop
test
sub
pop
aaa
xor
test
out
dec
fs
ss
ss
dec
add
mov
cli
sarb
pop
cmp
movsl
pop
or
mov
cmc
add
sbbl
add
imul
pop
add
push
dec
pop
and
lods
push
xor
call
int3
push
test
and
mov
add
pmaddwd
cmp
aam
sub
and
inc
mov
mov
push
repz
insl
xchg
rol
or
std
inc
jp
xchg
inc
fistpl
movsl
nop
adc
in
pushf
test
jmp
out
xchg
inc
xor
enter
push
jb
cmp
dec
sbb
xorl
jecxz
push
loopne
mov
or
das
jno
mov
jp
pop
dec
dec
mov
add
repz
mov
lock
loope
das
xor
mov
andl
mov
sbb
adc
mov
rorl
sub
aas
into
mov
cld
push
aad
lret
mov
fwait
push
mov
es
pop
xor
push
rolb
xchg
push
jg
aam
das
jae
jl
es
cmpsb
insl
outsb
dec
dec
dec
rclb
pop
xor
popa
notl
lods
rcrb
sub
mov
push
ret
cmpsb
movntq
out
lahf
add
pop
or
jbe
inc
mov
leave
mov
and
test
push
xchg
mov
push
sar
xchg
push
pop
add
jp
jbe
adc
jnp,pt
xchg
xchg
outsl
mov
lcall
or
sbb
dec
xor
sub
mov
fmuls
jp
mov
mov
mov
or
pusha
pop
fwait
xchg
roll
xchg
bound
mov
out
xchg
imul
arpl
aam
loopne
or
jp
dec
in
insl
cmp
mov
dec
push
ret
in
loop
push
out
fistps
iret
and
fmull
jmp
push
inc
xchg
addl
out
test
lds
insb
xlat
stos
flds
outsl
insb
mov
xor
jle
fsubl
adc
notl
pop
xchg
test
push
jae
sbb
fwait
clc
popf
fdivr
sub
addr16
fidivrl
inc
xchg
jo
adc
sub
cmp
sbb
inc
mov
fisubs
or
xor
lret
arpl
fildll
sbb
lahf
lds
shlb
add
icebp
lahf
int3
mov
xchg
inc
je
pop
int3
sbb
int3
lcall
jb
pusha
and
pop
movsb
and
and
repnz
jge
and
enter
daa
stos
test
cmp
out
adc
jl
jnp
dec
pop
mov
push
in
out
xor
int
das
lahf
inc
out
push
mov
out
into
jne
push
gs
inc
inc
sub
cmpsb
mov
pop
jo
in
sti
adcb
repz
push
xor
cmp
gs
add
ljmp
push
scas
shlb
pop
pushf
sub
xlat
sbb
cmpl
outsl
dec
aad
adcl
add
jnp
adc
lcall
loopne
jne
sub
subb
mov
cmp
pop
subb
sub
aad
mov
mov
and
pusha
into
push
fisubl
mov
testl
sub
out
sbb
scas
push
test
data16
mov
jecxz
lret
loop
movsb
cmpsb
stc
into
cmp
fs
mov
movsb
aam
cmp
push
jg
out
insl
adc
add
xchg
sarb
jae
or
cli
cmc
enter
rcrl
gs
adc
imul
add
inc
adc
fwait
repz
sub
xor
in
jo
ss
dec
pop
outsl
pop
shlb
gs
ffree
nop
pop
xchg
mov
push
fldcw
icebp
fdivp
ret
xchg
xchg
nop
jbe
insb
xchg
shr
js
data16
adc
jecxz
aam
dec
adc
pop
pushf
mov
inc
push
cs
or
inc
dec
pop
std
aas
jbe
fidivl
mov
shll
sbb
mov
dec
or
fwait
sbb
leave
sub
xor
std
fisttpl
mov
pop
imul
add
das
xlat
push
mov
sbb
or
roll
xchg
notb
std
js
xor
lock
cmpsl
test
mov
lahf
cld
jle
xchg
rsm
xor
lcall
pop
push
add
and
dec
aad
aam
push
sbb
or
leave
es
jno
push
loope
clc
mov
cmp
aad
iret
movsb
add
mov
daa
mov
inc
hlt
or
mov
inc
push
sahf
in
pusha
cmovbe
cmp
repnz
imul
push
jp
push
inc
push
in
add
test
notl
mov
out
push
jno
pop
lods
out
cmp
mov
int
add
inc
cmp
lock
xchg
xchg
mov
mov
fistpl
push
ja
xor
inc
mov
andb
jle
push
repnz
add
loope
pop
out
cmp
jnp
cmp
pop
jns
pop
in
popf
add
inc
bndldx
iret
inc
jno
or
lea
imul
imul
ss
jne
movsb
ljmp
lea
addr16
pop
xchg
sbb
xchg
and
scas
push
in
mov
pop
cmpsb
stos
dec
in
and
arpl
jnp
mov
in
ds
adc
sahf
iret
cmp
mov
leave
cli
movb
jae
enter
mov
jmp
ficoml
rorl
fwait
xchg
insl
or
sahf
jecxz
inc
sbb
push
or
push
mov
repnz
dec
hlt
jle
add
cmpsb
mov
cmp
xchg
or
dec
dec
xchg
aaa
jnp
sti
or
fstpt
add
inc
add
mov
xor
lds
and
xlat
ljmp
inc
lods
jle
js
data16
lods
sbb
lods
push
mov
out
jge
add
daa
test
aaa
mov
jl
call
fisttps
iret
jbe
xor
push
sbb
push
pop
test
xor
andl
daa
push
mov
push
cmpl
sub
push
cmc
cmp
inc
lods
movsl
or
nop
rorb
pusha
mov
sti
test
mov
popa
add
cli
popf
xor
push
and
inc
mulb
cmc
push
mov
xchg
ucomiss
jge
adc
sbbl
adc
ret
pop
popf
jg
jnp
mov
cld
push
mov
mov
adc
push
fucomp
fmul
in
pop
into
fcoms
cmp
dec
fidivs
roll
sbb
clc
jecxz
ret
rcll
push
mov
xor
sub
outsl
test
stos
sar
test
jecxz
mov
aas
adc
jb
ss
mov
dec
jmp
cmp
cmp
outsb
xor
adc
or
cmp
into
cmpsl
fsubrs
outsb
pop
lods
pop
leave
dec
inc
adc
or
adc
sub
shlw
cmp
outsb
push
xlat
dec
sahf
pop
sub
cmp
in
fistpl
jg
sub
clc
adcb
inc
incl
mov
ftst
pusha
mov
repz
clc
jl
push
shll
sbb
repz
pop
xchg
adc
pop
pushf
dec
cmpsl
mov
mov
in
lahf
aad
ss
inc
push
jmp
jb
aaa
lods
dec
or
jecxz
gs
out
cmpsb
cwtl
movsl
cmp
mov
lock
mov
int3
fmuls
in
fstpt
sub
inc
xchg
push
add
add
shlb
rorl
and
dec
adc
push
pop
sub
xchg
int
std
pop
inc
pop
dec
jmp
mov
movsl
pop
mov
cld
test
les
popa
out
dec
mov
jno
scas
shr
cmc
les
inc
iret
adc
popa
lahf
ret
lcall
insl
cmp
scas
clc
hlt
sub
inc
lret
and
fdivrl
push
imulb
push
jns
orl
in
add
jecxz
test
mov
repz
fnstsw
cld
test
sbb
xchg
inc
ficomps
xchg
iret
inc
shrl
jg
stos
push
mov
out
add
cltd
xchg
and
mov
xor
lock
mov
bound
ficoms
cmp
jnp
ja
sub
push
jbe
or
ja
fwait
in
pop
push
xchg
rol
sbb
jb
cmp
cltd
out
sbb
mov
in
mov
mov
pop
mov
jmp
jne
or
jp
xor
mov
cmp
nop
dec
sbb
xchg
jne
push
fldenv
pusha
outsl
fistps
pop
xchg
subb
xchg
call
lea
cmpsb
cmpsl
mov
xchg
sarl
ljmp
and
mov
pop
jnp
stos
iret
jle
and
in
or
iret
pushf
or
pop
add
rolb
pop
jae
mov
xchg
mov
sub
and
sbb
in
imul
lock
std
pop
push
push
jo
shlb
mov
test
and
inc
mov
hlt
leave
sti
fsubs
je
inc
aas
pop
xchg
or
add
aaa
cmp
or
push
out
int3
xchg
imul
fucompp
cmp
imul
and
sbb
movsb
cmp
inc
push
sti
in
test
push
loopne
repz
fcmovne
call
jb
cmp
xor
mov
mov
dec
sub
push
mov
jge
lds
mov
add
dec
lahf
sub
push
push
test
test
sti
mov
cmp
das
dec
repz
cmp
pop
lcall
loope
aas
cmpsl
sub
sbb
cmp
out
ds
pop
mov
shlb
loop
aam
cmp
out
inc
dec
add
in
or
push
inc
pop
push
mov
in
adc
lcall
or
sub
hlt
sub
outsb
lds
adc
fsubrp
or
mov
mov
mov
and
pop
push
int
fs
fcoms
pop
popa
testl
add
rcrl
push
std
jg
sahf
data16
sub
push
lret
popa
mov
stc
cmp
mov
adc
sahf
lods
sub
cmp
inc
out
out
sbb
je
xchg
cmp
mov
or
sbb
mov
xchg
push
adc
pop
call
cmpsb
repz
add
cmpsb
dec
mov
lods
or
dec
xlat
mov
aas
mov
inc
push
sub
stos
inc
mov
mov
ja
nop
mov
iret
scas
inc
repz
fstps
test
les
es
sbb
loopne
outsb
sti
test
pop
pop
cmp
adc
inc
cmp
inc
cs
dec
not
ja
repnz
test
cmp
mov
xchg
jb
add
je
mov
nop
mov
add
pusha
jp
mov
dec
mov
mov
ret
fldt
popa
pop
scas
cwtl
cmp
lock
jp
das
and
mov
and
mov
shll
jo
std
cli
push
dec
out
sub
mov
pushf
jno
cld
aam
pop
lret
in
fisubrs
mov
call
mov
nop
or
shlb
cmp
aam
divl
imul
clc
ljmp
mov
mov
cs
cmp
inc
lods
add
lds
xchg
dec
je
push
push
mov
add
in
cltd
mov
filds
imul
push
frstor
test
lods
into
sahf
xchg
int3
sbb
mov
pop
add
jo
inc
xchg
xchg
imul
push
xor
push
loope
mov
movsb
push
xchg
push
dec
dec
mov
pusha
pop
out
popa
jp
imul
repnz
inc
fwait
adc
sbbb
push
inc
add
xchg
push
movsl
out
negl
icebp
jns
orl
mov
sbb
nop
sbb
or
cmp
imul
add
mov
dec
cld
rcl
jne
pushw
pusha
xlat
cmp
xchg
push
lods
jecxz
push
ss
xchg
mov
mov
sub
sub
cs
push
sub
mov
and
add
insb
cld
jecxz
jnp
mov
jle
mov
in
cmp
adc
dec
mov
ret
cmp
mov
inc
mov
out
imul
or
popf
dec
rol
push
iret
ficoms
ficoml
mov
or
loop
scas
pusha
mov
push
fwait
das
dec
rclb
repnz
mov
mov
adc
add
xchg
or
mov
jmp
fiadds
in
mov
pop
pop
add
inc
fiadds
lds
fdivl
adc
scas
pmulhw
cmp
mov
fwait
push
dec
lret
divl
sub
lods
enter
daa
cmpsl
das
enter
aaa
jno
insl
jl
cmp
dec
movsl
xchg
xchg
jo
xor
sahf
jl
lahf
lahf
outsl
mov
test
out
inc
icebp
sub
cmpsb
sub
or
push
xchg
sbb
mov
or
xor
loope
push
sub
mov
cmp
mov
ds
add
inc
jle
xor
andb
leave
sbb
loop
xor
push
xor
int3
cltd
lea
lahf
out
sub
sarb
and
dec
push
sub
xor
xlat
gs
sub
sbb
cltd
sbb
stc
vphadddq
mov
or
and
ds
push
jecxz
repnz
dec
mov
int3
mov
lret
in
shll
enter
mov
sub
out
sahf
or
flds
lds
addr16
push
loop
push
sar
lock
in
adc
fs
addr16
cmp
inc
jns
out
mov
jae
pop
clc
stc
cmp
rol
or
adc
into
insl
int3
mov
loopne
setnp
fidivl
adc
mov
rcll
xorb
xor
adc
dec
and
xlat
enter
in
les
mov
mov
icebp
sti
pop
xchg
lds
jmp
pop
inc
nop
cwtl
mov
dec
stos
pop
cmp
push
imul
les
fs
sbb
jmp
out
pop
in
mov
jmp
jmp
out
lahf
adc
mov
mov
popa
pop
jb
add
clc
mov
or
mov
jo
mov
jnp
sbb
mov
sub
mov
cltd
rorl
fistl
bound
movsl
lret
gs
popf
icebp
mov
inc
sub
or
shl
rorl
sbb
xchg
sahf
dec
loope
push
cmpsl
cmpsb
lahf
mov
or
dec
cld
call
fwait
lret
pop
pop
aad
xchg
mov
pop
scas
adc
rclb
scas
daa
aam
loop
ret
mov
mov
clc
cmp
dec
xchg
clc
mov
xor
popa
push
insl
enter
xor
scas
lock
sahf
or
packsswb
add
es
shlb
mov
aam
push
or
fisttpll
sbb
sbb
pushf
sub
push
fisttpl
stos
xor
cmpsb
out
lret
xchg
mov
addl
sbb
hlt
xor
jns
or
test
xor
mov
adc
adc
out
mov
pop
stos
faddl
jg
fs
jle
jne
ret
fwait
inc
cmp
push
fcmovnu
scas
add
repnz
out
mov
cmc
sti
test
or
xchg
movsl
fisubrs
push
push
gs
rcrb
jp
in
lock
adc
stos
push
test
ffreep
xorl
sub
xchg
sub
jo
dec
popa
sbb
jle
roll
lods
lcall
imul
fisubrs
cmp
xchg
jnp
xor
jle
cmp
push
and
ret
xor
push
inc
jae
imul
je
mov
inc
dec
iret
mov
xchg
int3
jb
sbb
jmp
imul
pop
scas
ret
add
push
loop
inc
shrb
sbb
sub
fxch
xor
das
arpl
fcoml
or
jns
iret
aaa
mov
jb
add
cltd
pop
das
and
fisubs
enter
lret
out
xlat
jnp
cli
fistpll
popf
push
xor
in
jbe
jg
jge
cmc
cmpsb
enter
daa
cmpsb
jo
cmp
mov
jl
and
dec
adc
dec
push
js
enter
enter
inc
lahf
mov
repz
test
xchg
ja
inc
orb
cmpsb
lods
inc
pop
in
std
insl
js
int3
cmp
push
fwait
loope
mov
mov
ds
mov
movsl
and
rcrb
push
xchg
mov
xor
jmp
pop
outsl
sub
push
fbstp
stos
loop
cltd
scas
pop
sahf
pushaw
sub
loop
push
js
lcall
add
orb
sub
xchg
icebp
outsb
cld
arpl
adc
adc
mov
mov
sarl
mov
int
adc
push
out
mov
fadds
pop
inc
lret
sbb
leave
mov
xchg
sbb
ficompl
ljmp
outsl
inc
inc
stc
loop
repz
stos
lret
mov
adc
rol
mov
stos
cmp
cmp
fstpl
rorl
cmp
out
mov
push
test
into
push
mov
cmc
in
mov
pop
es
adc
imul
mov
les
out
aas
sub
xlat
push
imul
pop
pop
xlat
pop
jmp
add
sbb
sub
or
inc
gs
mov
nop
dec
or
xchg
inc
sbb
and
lret
repz
ljmp
mov
cmp
call
or
add
adc
cltd
pushf
dec
xor
pop
into
jne,pn
sub
add
into
aas
repnz
decl
dec
push
je
xchg
jge
jge
mov
lea
xchg
cwtl
mov
sub
xchg
sahf
loopne
dec
mov
dec
push
stc
out
sbb
pop
cmc
pop
add
sub
lods
lock
out
sub
ficoms
in
mov
xchg
xchg
roll
mov
std
adc
xchg
dec
mov
movsl
mov
icebp
dec
fcomi
cld
sub
xor
lret
and
mov
push
mov
into
and
shlb
mov
aam
and
xor
icebp
adc
clc
jne
es
aaa
cli
and
fwait
jb
popa
push
xor
jp
shrl
and
or
cmp
ret
add
fwait
push
cltd
negl
sahf
mov
sub
fnsave
cmc
fiadds
lods
xchg
push
shrl
sub
sub
movb
enter
stc
pushf
xor
and
insl
mov
movsb
mov
out
mov
push
ja
pop
gs
ja
sub
inc
adc
push
cmp
jle
aaa
add
dec
shl
out
mov
stos
bound
ss
push
inc
adcl
clc
aad
fisubs
push
addr16
fsubs
mov
lea
xchg
adc
mov
imul
or
xchg
sti
inc
loop
inc
xor
orl
xchg
out
inc
pop
sub
movsb
imul
sbb
and
sub
push
jnp
fwait
lcall
lret
loope
jbe
mov
pop
rcrl
stos
inc
sarb
and
data16
xor
addb
fwait
roll
push
int
std
ljmp
mov
mov
lcall
repz
and
leave
stos
repz
stos
cmp
arpl
rorl
cmpsb
cmp
ja
fimull
mov
add
repnz
int3
inc
out
pop
pop
inc
js
inc
pop
mov
jo
cwtl
ds
int
out
and
stos
daa
movsb
adcb
adc
inc
lret
jecxz
enter
daa
movsl
xor
sub
jl
loopne
dec
orl
xor
aam
and
shl
gs
pop
loopne
inc
cvtps2pi
cmpsb
xor
fsubr
in
pop
js
jae
pop
push
cmc
int
aad
dec
loope
sub
sub
xor
insb
and
arpl
movsl
sub
shl
dec
stos
icebp
movsl
iret
addb
sbb
sbb
xor
gs
push
or
mov
loope
adc
lea
lcall
in
sub
aam
outsb
pop
mov
lret
adc
jg
mov
mov
mov
addr16
push
jmp
int3
fadds
fwait
testl
lret
shll
mov
jp
sbb
out
je
jno
xchg
jnp
cmp
cmp
adc
popa
dec
lds
sbb
sbb
mov
cmp
cmp
out
cmp
add
and
or
cmc
cmp
loopne
or
nop
in
stos
or
adc
pop
inc
jbe
adc
mov
imul
daa
popa
add
shlb
mov
out
ret
xlat
inc
pop
mov
shlb
jo
fcomi
jno
xchg
sti
mov
xchg
or
add
dec
mov
dec
imul
aad
clc
repz
out
arpl
das
mov
lods
mov
xor
call
adc
out
mov
jmp
mov
fcomps
insl
aad
ret
push
inc
fnstsw
xchg
decb
dec
out
mov
mul
mov
adc
xchg
mov
mov
jae
mov
testb
cmc
mov
jo
mov
xchg
lock
and
mov
mov
scas
shll
and
in
mov
mov
mov
div
cmpsl
movsb
sub
jno
xor
mov
lret
cmp
mov
dec
gs
mov
sub
test
in
xor
sarb
cmc
arpl
sbb
mov
ret
negl
es
add
sbb
clc
mov
mov
ljmp
in
lods
inc
mov
mov
hlt
pop
mov
in
fmull
and
incb
push
inc
pop
cltd
jl,pn
test
jb
push
mov
pop
fstp
cmp
test
addr16
mov
pusha
cmp
pop
add
out
adc
cli
xchg
andl
lcall
cmp
pushf
cs
xor
xor
xor
cltd
xchg
xchg
testb
sub
mov
ja
xor
dec
gs
and
fwait
mov
les
add
test
jl
xchg
jp
bound
cmpsl
jns,pn
pop
mov
mov
int
mov
adc
mov
mov
sub
call
mov
pusha
mov
notb
dec
movsl
jns
jne
notb
test
mov
aam
xchg
into
loopne
jmp
adc
pop
sbbl
lea
filds
or
and
aad
cmp
leave
sti
jle
pop
pushf
in
daa
pop
adc
aad
mov
sbb
sub
inc
mov
push
inc
nop
jns
ret
push
dec
cmp
fisubrl
enter
repnz
add
jo
sti
shl
xchg
shlb
xchg
hlt
cmc
dec
dec
arpl
fisttpl
out
in
lds
ss
or
mov
lods
fsubrp
test
insb
jo
jnp
scas
lods
leave
aad
and
sub
or
jno
aaa
cltd
jbe
jge
jge
mov
enter
daa
movsb
jle
cmp
sub
jno
mov
jl
jo
dec
repnz
push
ds
ret
xor
outsl
roll
push
mov
add
inc
sahf
xchg
xor
lret
aam
js
lods
pop
pop
xchg
dec
adc
dec
xchg
sub
jp
cmp
xorl
das
jbe
rcl
rolb
push
shll
int3
or
lret
add
xor
xor
out
adc
mov
testl
cmp
int3
push
xor
mov
or
mov
adc
dec
out
pop
jg
xor
into
mov
mov
and
jg
push
in
subl
lock
mov
std
xchg
in
add
bound
shl
mov
inc
sub
clc
sbb
outsl
add
sub
sarb
insl
mov
adc
cmp
ss
out
fstps
leave
out
lods
arpl
aaa
lret
xor
jecxz
push
cmp
cmpsb
mov
cs
into
push
pusha
ds
jb
test
pop
fs
mov
cli
and
jns
add
pop
data16
jbe
lods
movsl
push
or
std
add
test
sub
jnp
repnz
add
repnz
cs
push
nop
sub
push
aas
jge
fincstp
sub
loopne
adc
pushf
add
sbb
pop
add
inc
pop
push
scas
adc
sbb
arpl
cmp
aad
loopne
inc
icebp
add
xor
jb
aaa
out
pop
pop
add
sub
fwait
cmp
movsb
ljmp
mov
fdivrp
mov
push
cmpl
jmp
and
push
pop
cmp
inc
cmp
lock
mov
das
pushf
mov
mov
stos
movsl
aam
fisubrs
out
push
dec
shrb
adc
clc
aam
cld
orb
test
mov
mov
mov
mov
or
sub
jae
gs
es
mov
push
mov
jmp
lret
lods
test
popa
cwtl
jl
lods
lods
mov
mov
pop
adcl
rcrb
jo
and
test
add
push
ja
outsl
cmp
xchg
xchg
mov
rcrl
loop
scas
mov
xchg
repz
stos
xchg
test
or
fadds
xor
lds
pop
test
aas
push
aas
xchg
push
sub
mov
xchg
ja
mov
adc
jb
or
mov
fwait
rcr
out
les
pop
add
add
inc
bound
jnp
in
or
xchg
xchg
sub
mov
mov
andb
ret
jp
lret
dec
mov
out
adc
sub
js
gs
dec
mov
jne
cltd
push
pusha
inc
insl
into
fcomip
push
sub
mov
mov
add
xor
dec
sarb
or
stos
fistpll
and
mov
jnp
mov
sub
push
call
lcall
js
pop
adc
inc
out
xorl
mov
or
popf
jmp
lods
dec
inc
lret
mov
xchg
sarl
xchg
imul
pusha
scas
in
lahf
add
adc
sar
mov
and
leave
cwtl
cmpsb
dec
hlt
inc
mov
arpl
ja
inc
dec
sub
rcrl
leave
daa
aaa
cmc
test
or
sub
dec
mov
int3
pop
mov
movsl
push
lds
popf
jo
jno
scas
mov
sbb
cmp
inc
mov
push
xchg
pop
jbe
sub
enter
daa
mov
lods
sbb
jl
aad
dec
popa
test
push
and
cli
xor
or
and
jbe
ljmp
lods
inc
inc
sub
sub
in
mov
fnstsw
jnp
pop
aad
xor
or
loope
jle
sub
arpl
lret
ds
adc
scas
loopne
subb
sbb
cli
xchg
mov
inc
fcoms
pop
adc
sub
xchg
mov
push
xchg
faddl
popf
mov
adc
gs
jg
int
mov
jle
mov
sub
repz
and
push
push
out
outsl
int
fcmovnbe
fdivrs
hlt
test
jl
rorl
sbb
lahf
jo
xchg
mov
test
or
xor
out
outsl
jecxz
cltd
loop
cmovle
iret
xor
fs
sahf
adc
fcom
cmp
cs
out
pop
aas
cli
push
xor
aas
aad
popf
cli
inc
into
stc
and
loopne
push
pop
andl
adc
jecxz
adc
pop
faddl
jno
pcmpgtd
pop
lods
mov
dec
cmp
jbe
xlat
xlat
pop
sub
pop
addr16
sti
adc
int3
lods
gs
into
adc
daa
leave
movb
dec
fldcw
test
jmp
stos
repz
jmp
adc
call
mov
ret
adc
adc
or
jmp
ss
aad
popa
mov
aas
iret
stos
pusha
jb
pop
test
je
inc
lret
add
iret
xchg
push
xor
mov
int3
call
adcl
cwtl
fistl
push
pop
ficoms
dec
inc
shll
daa
mov
das
jnp
popa
mov
sbb
mov
shrl
insl
push
std
or
adc
lock
xlat
out
sub
cld
stos
push
dec
lret
sbb
jecxz
adc
sbb
push
and
sub
rcr
lods
les
or
add
ret
hlt
dec
ds
insb
aaa
insl
cmpsb
aad
clc
es
xchg
hlt
lret
scas
ljmp
lods
sbb
cmpb
loop
push
fwait
mov
or
ja
or
into
sbb
push
cmp
pop
test
push
jne
lret
sbb
cmpsl
leave
shll
inc
cmpsl
stos
out
sub
push
mov
int3
push
out
repz
xor
xor
shrb
xor
daa
iret
mov
lock
pop
xchg
in
and
ds
dec
in
or
inc
mov
fwait
call
pop
add
pop
cmpsl
add
push
jp
bound
sbb
in
jmp
xchg
loope
enter
into
mov
lods
rorl
add
jp
shrb
mov
sub
mov
aam
jb
imul
jne
mov
mov
adc
outsl
xchg
je
outsl
jmp
stos
xchg
cmpl
adc
push
addr16
enter
sub
and
xchg
jnp
jo
jle
aad
in
or
inc
iret
lcall
dec
and
icebp
sbbl
lret
sbb
push
dec
mov
cmp
sbb
ljmp
dec
mov
inc
rcrb
ds
jbe
inc
leave
psadbw
arpl
fstl
or
cmp
aaa
mov
cwtl
or
ret
add
aad
int3
or
fisubrs
mov
mov
jnp
scas
push
mov
inc
call
xor
jp
mov
aad
dec
jbe
dec
cli
jge
pop
ror
lret
daa
mov
loopne
jno
out
pop
jl
or
cld
push
add
out
xor
movsl
mov
push
dec
sti
mov
xchg
mov
cmpsb
mov
jb
js
frstor
push
inc
mov
mov
and
ds
inc
pop
movsl
cmp
push
jne
push
add
addb
daa
add
fs
fwait
and
cmp
sub
mov
lcall
fsubrl
fistpl
outsb
mov
or
and
jg
push
clc
mov
push
repnz
jmp
mov
sub
testl
pop
jb
jecxz
cli
sbb
mov
dec
test
lret
xlat
xor
aad
mov
xor
scas
adc
ss
ss
bound
sub
enter
cmp
fnstenv
cmp
lods
inc
or
int
imul
stos
xor
pop
mov
inc
jns
and
cmp
add
lret
fsubs
jge
lods
jae
adc
jae
add
add
icebp
sub
jae
mov
enter
les
je
sti
gs
movsl
call
dec
xchg
inc
gs
fldenv
std
idivb
repz
add
movsb
and
call
or
sbb
aam
push
pushf
stc
fadds
add
test
andl
outsb
mov
or
dec
dec
sti
test
and
or
rcl
inc
lea
sub
mov
or
xor
fildl
sahf
sbb
dec
aad
lock
das
pop
mov
into
mov
rclb
jl
and
insb
enter
ljmp
mov
jle
icebp
cmpsb
pop
cs
mov
jo
cmc
daa
mov
mov
dec
jle
shlb
xchg
mov
mov
fst
es
cs
lea
stc
xchg
xor
ljmp
subl
mov
rcll
xchg
mov
cltd
shr
into
test
test
into
fdivl
dec
in
add
dec
push
add
or
add
insb
stos
fstl
jnp
adc
sub
pushl
ret
mov
xor
and
mov
repz
dec
repnz
cmpsb
pop
push
out
jns
jecxz
mov
inc
jno
in
pop
popa
dec
fwait
sbb
add
mov
cmpb
aam
jns
push
in
and
xchg
xor
stc
mov
cmpsl
adc
add
inc
jp
lea
mov
inc
pop
mov
dec
mov
jne
or
jns
jae
xor
mov
inc
jmp
xchg
and
out
push
in
mov
mov
sub
insb
jle
jb
sbb
xchg
jle
push
push
in
xchg
dec
adc
mov
xor
push
fadds
aas
jae
insb
push
mov
adc
push
ds
fcmovb
jns
xchg
jg
inc
sbb
cld
hlt
imul
inc
push
inc
fbstp
rclb
cmp
pop
pusha
leave
xchg
jl
jnp
arpl
adc
insb
in
or
and
bound
pop
rcl
add
sbb
repz
sbb
shlb
mov
xor
xchg
and
shlb
push
movsb
add
xchg
pop
jbe
loope
jge
xchg
enter
daa
mov
enter
push
or
insb
sbb
rcrl
xor
inc
fidivs
push
sbb
outsl
test
mov
inc
inc
dec
pop
xchg
adcb
js
shr
pop
push
jb
push
sub
loope
pusha
bound
mov
cmp
aaa
aas
ds
movsl
inc
jo
shlb
in
insl
sub
adcb
cwtl
add
jp
xor
fs
pop
popa
cmpsb
ret
loope
pop
mov
inc
lcall
neg
fldenv
mov
adc
fwait
add
test
pop
mov
lahf
push
mov
sbb
and
push
cmc
push
ror
and
aad
testl
cmpsl
sarl
sbb
in
fisttpl
test
adc
outsl
mov
daa
in
stc
cmp
cmp
dec
ss
xor
and
mov
addb
shr
xorl
xchg
cmp
in
xchg
jnp
jg
mov
and
pop
rcr
adc
cwtl
pop
imul
pushw
dec
test
lods
pop
dec
aad
scas
sbb
sahf
dec
xor
xor
sbb
xchg
pop
test
loopne
nop
mov
adc
fstps
sbb
or
mov
outsl
daa
mov
call
mov
fistps
mulb
pushf
movsb
push
mov
xor
mov
fs
sbb
push
loop
aas
or
inc
or
shlb
bound
jecxz
push
jp
aad
stos
lea
aaa
cwtl
jge
mov
push
ss
push
inc
popl
jmp
pop
iret
pop
and
insl
inc
iret
pushf
popa
lock
cs
cmp
test
dec
lret
lret
imul
std
push
fildl
cmp
cmpsl
mov
shlb
add
push
lret
divb
fs
lods
xchg
mov
imul
cmp
ret
adc
mov
clc
pushf
jl
jb
ljmp
iret
hlt
lods
out
stos
std
mov
andb
push
push
aas
mov
popf
shlb
popf
lock
in
push
mov
fisttpll
xor
je
mov
enter
sub
test
pusha
jnp
pop
scas
aam
stos
int3
enter
loope
xchg
pop
mov
add
xor
push
xor
pop
cmp
xor
insl
jnp
insb
fcomi
xchg
dec
pop
dec
pop
nop
push
pop
or
pop
ja
js
dec
xor
cmp
push
imul
adc
lods
push
pop
add
adc
inc
out
adc
sarb
mov
in
lods
cwtl
xchg
jg
jbe
mov
mov
in
add
ljmp
mov
mov
xchg
dec
xor
jne
fnstenv
adc
xor
push
lock
sbb
push
xlat
rcll
dec
pop
out
push
add
lret
popf
loopne
loop
inc
stos
push
fildl
and
mov
and
jle
pop
dec
in
or
sub
cs
xchg
jmp
ret
cld
pop
mov
pop
cwtl
jae
fdiv
push
push
inc
xor
mov
into
inc
dec
inc
fidivrl
adc
cli
loope
imul
lret
push
mov
rorb
mov
sbb
test
adc
and
ljmp
aas
sbb
rcrl
sub
xor
xchg
add
ja
int3
sub
fidivs
xchg
lds
push
jo
int3
imull
insb
int
cmp
repz
dec
jae
shr
imul
sub
daa
mov
fs
imul
fmull
mov
xor
fisttpl
adc
out
mov
test
push
fdivrs
aad
cmpsb
mov
mov
xchg
pop
xchg
fildl
push
int3
cmc
loope
xchg
sub
sbb
cmp
movsl
sub
adc
movsl
dec
ss
sarb
lods
es
int3
push
mov
cmpsb
loopne
sbb
in
xor
sbb
pop
mov
and
dec
insl
fs
or
mov
faddl
jge
dec
and
xorb
dec
mov
std
jp
jnp
mov
and
push
clc
daa
push
int
lahf
fcomp
jmp
jbe
lret
rol
push
fimull
dec
cmc
sahf
jle
cmpsl
test
mov
outsl
adcb
mov
sbb
hlt
pop
mov
adc
out
pop
cmp
pop
cmpsl
mov
jg
repz
add
add
add
ljmp
cmc
mov
scas
loopne
dec
pop
loopne
test
imul
or
data16
lods
inc
into
add
jmp
push
sub
fcoms
in
sahf
cli
dec
sti
and
data16
mov
jg
nop
xchg
test
inc
ret
mov
mov
shl
mov
or
push
repz
push
xchg
xor
repnz
movl
jne
adc
movsb
insl
jmp
imulb
mov
inc
pop
push
sarl
lods
dec
lods
jb
lods
dec
dec
cmp
push
je
out
add
xlat
in
fadd
mov
cwtl
cmp
mov
mov
mov
push
sbb
dec
nop
fneni(8087
mov
pop
xchg
outsb
inc
push
enter
sub
mulb
inc
mov
and
shrl
sbb
div
fcmovu
std
scas
movsb
dec
mov
mov
jo
add
push
js
cld
sub
lret
push
mov
or
sub
lcall
mov
adc
pop
inc
jecxz
lock
xchg
aam
jle
ret
mov
cwtl
ret
insl
pop
lcall
mov
add
dec
mov
jmp
pop
cli
pop
mov
mov
push
stc
push
sub
jb
cld
in
stos
add
gs
test
pop
jmp
push
andl
fstpl
dec
xchg
stos
sbb
adc
pop
pop
fnstenv
stos
mov
fdivl
mov
in
cli
pushl
mov
or
divb
cli
push
jae
jnp
inc
xchg
fiadds
shlb
ja
adc
dec
and
roll
nop
movsb
or
popa
out
fwait
mov
push
push
cmp
mov
jge
out
xchg
pop
cli
loopne
jns
mov
in
mov
xchg
into
inc
divb
enter
popf
dec
mov
jp
and
mov
and
dec
jne
or
pusha
scas
fistpll
outsl
adc
jmp
or
cmp
inc
mov
sub
push
xchg
push
and
stos
lret
and
and
insb
push
xlat
ret
sub
jle
mov
in
aam
adc
cmp
iret
repz
adc
adc
pop
pop
out
bound
jae
fists
adc
jo
test
push
push
ror
fisubrl
jns
xchg
sub
fwait
imul
leave
ficoml
cmp
shrb
mov
outsl
ss
leave
je
popf
hlt
insb
xchg
arpl
int3
inc
pop
sub
push
sbb
pop
or
xor
movsl
std
or
leave
mov
pop
js
aas
ficomps
lods
rol
mov
mov
decl
mov
push
ret
jbe
push
ja
mov
cmpsl
sub
or
inc
jl
lods
lock
sbb
ja
xor
jbe
pusha
lahf
xchg
cmp
push
ret
test
push
cmp
inc
imul
cmpb
inc
pop
ror
jecxz
xchg
ss
shrb
cmp
scas
fsubs
sbb
pop
cmpb
lods
add
mov
cld
in
add
enter
mov
lcall
pop
fsubrl
stos
out
sub
adc
inc
adc
xchg
jg
push
repnz
mov
aas
in
and
push
sti
jb
int
test
fsubs
jnp
popf
in
mov
mov
jge
and
stos
xor
pusha
mov
stc
stos
mov
fs
cli
pop
adc
pop
mov
test
stos
mov
fsin
out
cmp
xor
xlat
fwait
cmp
jmp
or
sbb
test
cld
loopne
add
pop
ljmp
loopne
or
add
incb
subw
sub
cmp
test
sar
sub
inc
in
or
loopne
shll
mov
ffree
or
xorb
jo
or
inc
sahf
pop
nop
std
das
les
mov
repz
mov
xchg
cmc
inc
sub
rcll
xchg
or
test
xor
cli
fsubrp
push
mov
ret
aad
dec
push
inc
js
mov
dec
adc
dec
dec
mov
fdivl
sub
out
inc
fldt
in
out
cwtl
repz
mov
scas
xchg
mov
cmp
dec
mov
into
xchg
pop
push
push
inc
fstl
lock
jge
das
divl
mov
popa
xor
shrl
jl
xor
push
adc
mov
cmp
push
xchg
and
mov
inc
scas
mov
cmpsl
in
pop
shrb
mov
sub
into
cld
aam
or
xor
in
add
ret
stc
and
adc
lret
xchg
lock
ljmp
xlat
lods
les
lea
cli
pop
push
pop
adc
pop
pop
std
add
jle
cltd
js
adc
stos
rcll
mov
ffree
lahf
in
test
xor
xchg
ljmp
push
es
add
jbe
out
loop
push
xchg
call
mov
mov
or
add
mov
cld
jecxz
dec
daa
mov
int
and
dec
pop
lds
or
lahf
mov
repz
add
lret
out
into
test
enter
in
jecxz
mov
mov
inc
lahf
mov
cwtl
dec
hlt
addr16
sub
mov
andl
dec
testl
add
mov
or
rol
jmp
sbb
out
xchg
sub
inc
and
push
pusha
icebp
inc
stos
cmp
lret
mov
out
sbb
mov
in
mov
adc
mov
iret
push
dec
and
pop
rclb
bswap
adc
popf
lods
pusha
jbe
inc
jecxz
fcmovu
push
or
push
sub
scas
test
test
movsb
mov
ret
leave
jmp
aas
hlt
mov
data16
out
inc
pop
stc
or
push
rclb
xor
fiaddl
cmp
or
mov
mov
cmpsl
movsl
outsl
fidivrs
in
jo
insl
mov
xchg
adc
push
repz
movsb
cmpsb
pop
and
nop
mov
pop
addr16
pop
addr16
daa
sahf
or
mov
pop
jl
xor
addr16
nop
adc
mov
and
popf
push
lahf
mov
cmp
test
jmp
mov
lds
add
cs
adc
dec
push
es
sub
pop
enter
inc
ds
adc
movsl
pop
out
xor
hlt
xchg
cwtl
or
lods
sbb
das
add
mov
xor
leave
stos
cmpsl
out
pop
scas
fisubrs
ds
mov
lcall
or
in
sub
jmp
mov
movsb
jg
stc
mov
push
mov
dec
mov
pop
pop
and
xor
int
xchg
push
fcomps
jge
jg
aam
nop
mov
adcl
sbb
jecxz
sahf
les
test
fnsave
outsl
je,pt
loop
dec
push
stc
bound
scas
adc
ljmp
cwtl
push
mov
jge
cli
imul
cmp
test
loope
push
push
enter
ds
push
pop
adc
stos
ret
add
adc
dec
mov
pushw
cld
cmpsl
lods
movd
pop
loop
xlat
decl
mov
mov
je
data16
sbbb
add
gs
std
nop
dec
je
dec
add
mov
and
flds
movsb
les
push
sub
jbe
stc
xchg
mov
dec
aam
cmp
cmp
add
xchg
adc
xor
cmpsb
pushf
movsl
mov
shrl
lea
aad
movl
and
dec
daa
jmp
jecxz,pn
sarl
fimuls
and
xor
mov
stos
lret
mov
fstpt
scas
mov
or
dec
popf
lock
loope
das
leave
mulb
mov
dec
and
loop
sarl
mov
and
in
cmpsl
popf
dec
push
mov
add
dec
cld
orb
mov
and
push
pop
sbb
add
out
into
out
ret
mov
stc
into
insl
sub
clc
dec
push
xchg
das
and
ljmp
sub
push
inc
mov
fnstsw
mov
pop
jo
mov
xchg
popf
cltd
scas
jno
test
js
push
or
fucomp
clc
test
xchg
jle
inc
xchg
pop
mov
fisubrl
inc
scas
adc
jp
test
mov
pop
xor
or
or
dec
adc
xchg
pop
loopne
mov
gs
xlat
fimuls
cmp
lock
mov
fwait
ljmp
add
and
mov
push
jns
lods
mov
outsb
inc
ret
out
cmc
mov
mov
or
das
popa
jp
adc
pop
jno
mov
call
dec
dec
fiaddl
dec
jne
sahf
mov
fildll
int3
add
sti
mov
xchg
mov
push
into
leave
sub
jl
ficoms
inc
or
mov
outsl
and
xchg
cmpsl
insb
sub
jp
fdivrs
jle
lret
or
jle
add
iret
mov
jle
cmp
push
inc
sub
mov
lcall
push
lds
ficoml
sbb
imul
scas
ds
dec
push
popa
and
shlb
cltd
repnz
pop
sub
arpl
jl
pusha
decl
or
arpl
outsl
gs
or
das
mov
int3
lahf
out
dec
pop
out
ficomps
xor
cmpsl
mov
fistpl
and
imul
push
pusha
push
addr16
mov
outsb
enter
daa
popf
in
in
jo
iret
jno
bound
sbb
pop
push
jae
inc
xor
lods
add
lahf
aad
fcoms
jl
pop
jne
push
mov
pop
inc
xchg
cwtl
cmpsb
dec
cmp
sbb
movsb
js
je
pop
dec
das
das
push
loop
loope
aad
sub
inc
cmp
mov
jnp
outsb
movsl
pusha
loopne
ror
mov
or
dec
pop
inc
add
sbb
xor
mov
push
rcrl
jp
sub
mov
push
xchg
add
faddl
pop
iret
outsb
ja
bound
pop
xor
jg
scas
xchg
mov
push
insl
mov
jno
mov
sarl
push
add
int
addr16
fcomps
inc
jnp
ds
and
sbb
rcrl
mov
jp
push
add
mov
test
push
outsl
sbb
lds
sbb
fs
mov
xchg
add
or
popa
cmp
adc
mov
cli
pushf
dec
xor
mov
cmp
cmp
dec
mov
and
dec
inc
pop
cmp
jecxz
imul
out
add
add
mov
mov
cmp
mov
int
xchg
out
in
filds
mov
das
inc
sbb
and
mov
nop
es
dec
popa
fistpll
inc
les
test
sub
outsb
out
jnp
inc
sbb
mov
dec
movl
or
cltd
xor
lock
movsl
aad
popf
mov
scas
es
aas
mov
in
jb
daa
insb
dec
sahf
ds
je
mov
loope
mov
cwtl
imul
mov
add
cmp
pop
fldt
jmp
inc
jmp
lock
pop
pop
das
mov
jne
out
repnz
mov
ja
outsl
roll
jae
idivb
test
cmpsl
pushf
icebp
jge
or
dec
icebp
fldcw
cld
lods
dec
inc
lret
mov
dec
mov
mov
imul
stc
lahf
jmp
rcl
mov
sub
jle
aam
sbb
or
sbb
arpl
clc
mov
push
popa
cmp
mov
or
test
in
loope
mov
mov
add
fcompl
cltd
out
push
test
out
mov
mov
int3
mov
fstl
ss
test
xchg
aad
sbb
iret
push
sarl
mov
out
test
lcall
lea
xor
cmp
pushf
inc
cmp
ljmp
add
dec
cmc
inc
ret
pop
clc
jae
ja
jmp
inc
fs
or
xchg
aam
sbb
mov
cmp
push
mov
imul
mov
mulb
jae
jns
pushf
cmp
stc
push
test
mov
inc
mov
mov
addr16
mov
jp
rorl
pop
xchg
or
mov
cld
jnp
add
mov
in
jmp
insb
push
lock
shl
lret
sub
mov
dec
push
ficomps
mov
pop
sbbl
sbb
fdivs
in
pop
sbb
iret
adc
push
pop
xchg
data16
in
lods
sub
popf
cli
push
test
nop
pop
fiaddl
xchg
xor
sbb
rolb
push
push
test
add
pop
lods
cmp
push
inc
hlt
dec
scas
stos
arpl
push
or
sti
aam
cs
nop
or
enter
imul
add
xor
lds
xchg
cmc
jo
pop
subl
ret
addb
scas
loopne
jbe
xchg
insb
jge
pop
cld
enter
daa
pushf
push
push
cmp
jg
jl
ret
push
jecxz
push
je
xor
inc
sub
hlt
inc
movsb
push
cmp
jge
jg
pop
inc
push
pop
cmp
add
pop
mov
popa
loope
mov
sub
cmc
imul
or
sahf
mov
movsl
addr16
stos
dec
xor
sbb
aam
xor
ljmp
and
das
sub
sub
add
or
shll
push
call
out
pop
sub
lods
add
and
movsb
mov
jle
mov
jne
add
mov
add
xor
sub
or
std
add
lret
out
scas
mov
xor
xor
fildl
scas
icebp
xor
cmpsl
mov
stc
rclb
cmpsb
adc
pop
out
dec
adc
cmp
or
pop
out
iret
in
xor
lahf
orb
xchg
into
cs
sub
stos
adc
pop
pop
sti
jo
push
cmp
out
xor
add
clc
data16
xor
cmp
dec
loope
jge
sbb
fstl
xchg
dec
lods
pop
sti
fdivp
pusha
incb
cmp
jecxz
nop
add
inc
xlat
dec
aad
scas
testb
call
jnp
ds
pop
sbb
xor
jge
add
lods
pop
sahf
jl
adc
jnp
pushf
sti
sub
fldt
ret
aad
ficoml
aas
sub
inc
jb
fimull
cmp
addr16
in
dec
lea
push
cwtl
and
repnz
les
mov
js
xorl
mov
sbb
lock
out
das
xchg
fisubs
push
frstor
inc
push
rcll
pop
idiv
outsl
cld
std
lcall
cmpsl
fwait
sbb
mov
mov
dec
cld
fsubr
addr16
and
inc
imul
xchg
movsl
pop
pop
add
push
shlb
call
mov
mov
insl
imull
clc
ret
mov
xchg
lods
push
popa
ljmp
mov
mov
das
repnz
popa
push
vmread
pusha
add
pop
int
sbb
icebp
push
mov
fldl
push
jb
fnsave
push
imul
adc
rcll
xor
pop
push
xor
stos
ja
outsb
out
or
xchg
mov
xchg
pushf
out
pop
out
xor
test
xor
fcoml
xchg
in
negl
dec
outsb
ja
stos
inc
dec
lock
nop
inc
sti
out
dec
or
push
ficomps
fmull
lds
imul
bound
inc
jns
xor
in
dec
pop
xchg
or
out
mov
mov
add
mov
mov
mov
testl
mov
mov
xchg
cmp
jmp
aaa
jo
andl
les
repnz
mov
stos
xchg
jecxz
and
xchg
xor
sbb
fmul
jle
fstps
adc
dec
iret
outsl
jnp
ret
sbb
scas
test
ds
mov
push
and
mov
shrb
out
xchg
mov
mov
loope
scas
add
adc
sahf
std
rcl
movswl
and
repnz
adc
arpl
insl
sub
xorb
in
jp
or
sbbb
js
pop
xor
insl
fisubs
inc
jo
hlt
fsubrl
dec
sbb
jp
in
inc
outsb
and
out
jbe
and
ljmp
xchg
lds
fwait
inc
ret
cmp
std
stos
jno
rol
outsb
imul
mov
xor
loop
lock
adc
nop
push
push
lcall
dec
add
inc
movsl
and
dec
in
ljmp
pop
int
sbb
push
jne
loope
fsubrl
cmp
cmp
and
shr
movsl
outsb
lock
rolb
imul
dec
xor
mov
loop
xor
jle
pop
dec
mov
popa
pop
addl
lcall
push
lods
sub
outsb
cmp
mov
cmpb
adc
into
fidivs
lcall
mov
fcoms
repnz
cmp
inc
add
mov
sub
pusha
or
sahf
lods
call
ret
lea
outsl
fcmovnb
shl
dec
and
xchg
fs
fs
xor
popa
ss
jp
cmp
push
imul
cli
add
adc
cmp
fdivrs
or
xchg
sbb
jno
and
fiadds
jnp
xchg
adc
shll
cmp
adc
sbb
movsb
data16
pop
lods
les
adc
pop
push
sub
mov
mov
cmp
push
imul
cmpsb
nop
fdivl
dec
pop
pop
sbb
ljmp
les
fdiv
jecxz
cmpsb
xchg
add
insb
sbb
lods
sub
mov
or
xor
sahf
jecxz
lret
cs
ds
jl
inc
in
in
movl
dec
dec
mov
sbb
xor
and
jb
mov
iret
cwtl
fildll
int3
shlb
push
lahf
les
imul
lret
out
pop
imulb
pop
lock
and
aad
xchg
jnp
inc
idivl
dec
movsl
clc
test
mov
xchg
cs
nop
fdivl
mov
and
pop
and
movaps
mov
stc
ret
insb
inc
mov
insl
ficomps
imul
in
push
stos
ljmp
fisubrl
test
push
stos
adc
repnz
jmp
or
add
or
cltd
push
push
cld
test
test
jl
push
test
fstpl
dec
test
mov
xchg
pop
jge
shrl
insl
pop
mov
or
outsb
adc
xchg
add
inc
add
mov
decl
in
or
and
mov
or
xor
mov
ja
fstpt
inc
xchg
loopne
or
fisubrs
ja
fstpl
jg
and
mov
scas
fldcw
xchg
push
in
rcl
xchg
pop
xchg
or
push
or
mov
mov
sbb
mov
dec
outsl
push
jne
out
pusha
mov
add
xchg
or
aaa
jmp
add
xor
rcrb
cmp
sub
pop
cmpsl
stos
or
lea
dec
lret
fldcw
cwtl
jnp
lods
xchg
jle
into
je
xchg
inc
hlt
adc
push
iret
into
cmp
mov
popf
and
mov
push
jecxz
fistps
imul
inc
inc
dec
adc
stos
inc
fs
loopne
xchg
cmpsl
cmp
fwait
icebp
scas
addr16
mov
jb
shl
sti
mov
push
fldl
leave
movl
sbb
lahf
lods
or
cmp
lret
or
add
lods
add
jnp
pop
arpl
fiadds
repnz
leave
jo
sahf
bound
ficomps
xor
fs
dec
inc
mov
cmpsb
sti
jge
in
insb
enter
daa
lcall
jno
and
test
decb
xor
jge
pop
lahf
xor
nop
test
adc
xor
rorl
imul
daa
or
dec
popa
loope
popaw
sub
fsubl
icebp
push
mov
movsl
jne
cmp
pusha
dec
mov
sbbb
pop
sbb
xor
lods
inc
adc
pop
sbb
mov
insl
pop
jb
xchg
sub
cs
add
adc
mov
faddl
adc
outsb
mov
mulb
sbbb
jg
aad
mov
ja
mov
mov
and
icebp
stos
push
or
icebp
fmuls
cwtl
idivl
cmp
pop
or
rcr
push
mov
adc
or
ds
or
fs
outsl
mov
pop
pop
stc
ds
fs
inc
adc
pop
in
cmp
add
out
lods
push
cli
xor
xchg
mov
in
or
aad
cmp
loopne
inc
lods
pop
lcall
imul
mov
add
call
lods
stos
lea
dec
pop
mov
sti
jnp
sub
out
mov
and
sti
cmp
cmpsb
decb
imul
std
dec
fstps
add
repz
push
xchg
cld
mov
call
add
dec
pop
add
push
adc
fs
and
sbb
roll
stos
or
data16
outsl
jb
jne
dec
add
and
jle
xor
jne
ljmp
cwtl
lcall
mov
jns
andl
xchg
pop
cltd
pop
jnp
addb
lock
cmp
cmpsl
repnz
sbb
push
shl
add
std
call
jae
cmpsl
cltd
xchg
mov
pop
and
inc
lret
call
mov
mov
xchg
cmpsl
mov
inc
test
sub
stos
and
sti
icebp
lods
es
sub
lds
xor
xchg
sub
xor
lcall
popa
jle
pop
lods
fstpt
cmpb
push
push
and
dec
sti
int3
push
or
and
imul
inc
push
mov
adc
inc
and
inc
adc
sbb
loop
rol
inc
or
aad
push
stc
out
rol
dec
xchg
dec
rorb
ljmp
xchg
dec
or
pop
iret
xor
mov
sub
sub
fcompl
mov
ja
mov
dec
and
inc
sub
sub
fwait
cmpsb
mov
push
and
add
xchg
pop
into
out
sub
jl
insb
fidivrl
sbb
in
cmpsb
adcl
mov
cmp
jg
popa
addr16
addr16
jp
mov
mov
cwtl
stos
mov
mov
xchg
mov
jno
pusha
push
arpl
fildll
out
cli
jmp
int
addl
je
sub
push
mov
andl
and
and
inc
push
jle
mov
in
out
xchg
adc
add
ret
rcrb
adc
aad
sbb
mov
cmpsb
scas
mov
outsl
mov
mov
ficompl
enter
sbbl
cmp
sbb
push
jge
and
or
mov
popa
lcall
cs
mov
or
clc
sub
aaa
imul
add
sbb
int3
dec
push
mov
xchg
cwtl
push
fsubrp
dec
std
jo
pop
ret
cltd
cmp
jno
mov
call
jno
push
pushf
xlat
aaa
jbe
fcmovne
jge
mov
enter
daa
cltd
test
add
scas
or
les
dec
mov
dec
push
incl
and
imul
push
ja
push
mov
lea
loopne
add
sbbl
push
xor
mov
push
int3
pop
dec
sub
push
fcomps
loope
mov
sub
push
sbb
ds
dec
lea
cmp
and
sbb
insb
clc
add
cli
sub
sbb
jbe
pushf
pop
cltd
pop
sub
xchg
lcall
in
xor
lcall
mov
jge
les
mov
out
and
mov
or
xchg
inc
fadds
jmp
idivl
pop
sub
shll
es
pop
sbb
mov
sbb
mov
adc
loop
mov
jmp
adc
pop
add
pop
stos
ja
push
out
mov
sub
js
push
cli
push
es
cmp
pop
or
shlb
into
xlat
ss
lcall
jnp
push
les
adc
outsb
dec
imul
movsl
inc
add
sti
mov
xchg
mov
lods
xchg
dec
mov
xchg
test
sub
pop
inc
mov
mov
cmp
popf
gs
enter
sub
fucomp
sub
push
mov
les
cmp
xchg
xchg
sbb
mov
xchg
loopne
mov
pusha
adc
xor
jmp
xorl
aad
ljmp
add
dec
repnz
jp
in
je
hlt
adc
inc
inc
mov
in
jecxz
lea
rcrl
jl
mov
or
cmp
sub
dec
pop
cmp
xchg
inc
pop
jmp
stos
das
xor
mov
inc
test
and
inc
cmp
inc
mov
lock
jo
dec
fwait
addb
cwtl
mov
mov
xor
mov
lret
outsb
or
mov
out
mov
push
mov
popa
cmp
sub
sub
pop
es
fisubl
lods
out
clc
je
jae
push
out
ljmp
cli
lods
inc
push
xchg
mov
cwtl
neg
and
sub
setne
mov
test
sahf
push
fsubrs
stos
xchg
fildl
cli
repnz
xchg
stos
inc
loopne
out
xor
fsts
add
cs
push
xor
cmpb
js
push
xor
test
mov
push
xchg
dec
xchg
cmp
in
in
ja
leave
dec
leave
and
shrb
or
jbe
fwait
aad
mov
lds
add
in
sub
or
mov
cs
ror
xchg
divl
mov
jp
mov
jp
mov
mov
mov
sub
dec
dec
fmuls
jne
pop
sub
imul
xchg
mov
adc
into
xchg
xchg
cwtl
mov
ss
ljmp
mov
fisubl
mov
insb
inc
out
jnp
movsl
or
xchg
inc
in
sti
inc
adc
and
iret
mov
add
pop
jo
out
pop
shrb
push
imul
push
inc
sbb
xchg
mov
inc
imul
pusha
scas
sub
inc
lods
shlb
and
mov
pop
leave
mov
hlt
jns
xchg
arpl
jne
inc
outsl
pop
test
mov
lret
stc
jb
out
cmp
fwait
out
int3
ss
aas
pop
shrl
lds
dec
jo
das
lods
scas
and
lcall
push
jo
call
mov
jbe
test
cwtl
popa
sbb
cwtl
and
outsl
xchg
adc
pop
sbb
imul
sysexit
xor
sbb
xchg
sub
stos
push
roll
dec
cmpsb
xlat
mov
fidivrl
addb
mov
call
sub
adc
cmp
sbb
sub
movsl
xorl
push
and
les
cmpb
inc
sbb
outsl
add
add
xor
pop
mov
pop
ror
sub
cltd
dec
pop
add
inc
lcall
popf
loope
sub
add
adc
mov
jg
pop
in
mov
inc
std
mov
lods
cmpsl
mov
decb
in
imul
xor
int
fisubrl
idiv
shl
lret
jns
or
cmp
adc
sahf
xchg
push
pop
test
xor
xlat
outsb
outsl
js
mov
dec
sbb
cs
add
ss
jno
cmp
mull
out
fstpl
cli
fwait
push
jbe
neg
pop
cmp
jl
or
imul
cmp
loopne
push
stos
pop
fdiv
or
pushf
xchg
jge
lret
adc
out
add
shll
cmp
adc
sub
shl
in
negb
rcrb
stos
movsl
xchg
nop
insl
and
cmp
sbb
push
out
mov
lcall
imul
sbb
push
mov
cmp
ret
fistl
cmp
sbb
cs
vmovntdq
sub
movsb
add
dec
icebp
test
je
and
lock
lea
sub
fisttps
adcl
add
pop
fists
mov
das
adc
mov
cs
rcll
inc
sar
gs
dec
xchg
and
cmpb
jg
cld
test
xchg
mov
movsb
out
cwtl
movsb
andl
jge
shl
and
sub
add
ret
sbb
les
cltd
cld
mov
xchg
sbbl
test
ficoml
popa
lods
popa
fisubrl
jl
mov
pop
out
push
add
sub
hlt
call
repz
stc
mulb
inc
leave
jno
in
sub
add
fst
ret
dec
test
nop
xchg
daa
imul
cltd
shrl
aad
mov
daa
stos
xor
mov
xchg
pop
loop
fnstcw
pushf
add
outsl
ljmp
scas
xor
xchg
rorl
cltd
jmp
push
jmp
addl
lahf
insl
daa
ja
addb
rorb
push
lea
or
orb
add
addr16
push
out
sbb
out
test
xchg
int
jns
in
aam
mov
imul
add
push
or
loopne
negl
in
mov
jns
bound
mov
adc
jne
mov
pusha
xchg
xchg
test
scas
jmp
arpl
incb
pop
ljmp
sub
fidivs
push
push
sbb
arpl
xchg
inc
xchg
insb
lods
lret
repnz
lcall
insb
imul
daa
or
jmp
cmpsb
ret
mov
inc
push
jecxz
mov
cwtl
fstpl
fadd
rolb
push
xchg
in
and
imul
add
nop
fsubrl
rolb
mov
pop
mov
leave
sub
jb
les
popa
arpl
dec
inc
jb
ss
outsb
cs
aaa
jmp
push
je
pop
inc
cmpsl
int3
and
lock
xor
and
scas
push
lcall
lahf
cmp
shrb
jbe
mov
stc
enter
daa
xchg
pop
repnz
sub
dec
xchg
lea
lds
xor
dec
push
rcrl
pop
xchg
xchg
test
jbe
addr16
loope
cmpsb
pop
cltd
xchg
pop
leave
ret
pop
or
loope
cmp
sub
in
push
std
mov
movsl
mov
push
shl
stos
pop
and
sbb
add
bound
cld
cmc
xchg
pop
out
push
sub
push
add
fwait
test
faddl
test
and
test
and
mov
imul
int
add
fdivrs
idivl
mov
mov
je
sbb
cmp
cmp
test
push
dec
xor
in
push
outsl
cmpsb
loop
lret
arpl
jbe
lea
outsb
and
cmp
repnz
cli
into
outsb
mov
cmp
add
cmp
popf
stos
xchg
cmc
shr
push
stc
mov
adc
int
rol
adc
jl
add
mov
lods
pusha
jae
cmp
hlt
ljmp
insb
jae
sbb
insb
inc
sti
dec
loope
cmc
imul
nop
dec
xor
dec
fwait
test
inc
ss
clc
fld
data16
les
fcomip
pop
add
xchg
or
sahf
xchg
call
jle
inc
pop
sbb
or
jmp
lea
cs
fs
aad
jmp
xchg
inc
or
dec
push
mov
repz
cwtl
lret
dec
mov
rolb
subl
sub
pop
sbbb
imul
das
out
lret
jb
pusha
push
and
in
mov
testb
std
fnstsw
mov
mov
jecxz
sbb
scas
pop
fs
dec
inc
jns
mov
add
mov
lahf
movsl
rol
or
lahf
out
cmp
pop
das
test
test
int3
es
pop
insl
jp
sub
ljmp
ljmp
das
lods
sbb
mov
mov
push
jmp
push
fbstp
rcpps
add
dec
cltd
xor
outsl
test
lea
pop
pop
sub
cli
pop
subb
testb
jo
pop
pop
inc
push
stos
and
pmaxsw
xchg
xchg
xchg
and
xor
or
jp
data16
xor
jle
mov
adc
mov
pop
mov
pop
pop
sub
ja
ret
scas
xor
inc
out
push
push
or
pop
mov
or
cmp
mov
enter
adc
shl
cmp
pop
xchg
xchg
adc
mov
xor
mov
jo
je
idivb
aam
cmp
test
popf
fisttpll
inc
cli
jne
imul
xchg
jmp
cs
subl
fdivl
sub
sbb
push
pop
add
stos
aad
and
adc
mov
sub
in
inc
adcl
aas
ret
outsl
sbb
mov
mov
ss
es
push
out
cmp
push
testl
cmp
stos
sbb
sbb
sub
push
push
cmpsl
ffree
pop
and
mov
repnz
or
mov
shll
out
pop
inc
jne
pop
or
sub
inc
or
and
add
or
int3
or
ret
daa
mov
lds
sti
jo
adc
scas
fisubs
adc
or
imul
xor
outsl
xor
enter
daa
xchg
mov
icebp
jno
and
jl
inc
jns
add
jo
test
fnstenv
jmp
int3
out
push
sub
dec
lahf
push
inc
movsl
inc
jo
cltd
cmpsb
fucomp
vpunpckhqdq
adc
nop
int
or
xchg
mov
loope
lret
push
lcall
jo
loope
xchg
outsb
rcl
int3
dec
jecxz
and
andb
int3
repnz
add
adc
xor
xor
xchg
sub
lods
cli
pop
scas
push
push
repnz
sbb
xor
mov
outsb
sub
jl
les
outsb
jg
in
mov
and
scas
mov
sub
and
notb
push
jp
int
adc
divl
or
sub
outsl
sarl
decl
in
xor
pop
rcll
mov
mov
mov
add
and
loopne
sarb
in
sahf
shl
jne
mov
xor
bound
inc
jle
adc
cmc
push
stos
insb
loopne
mov
pop
push
or
inc
jns
imul
jge
pushw
mov
mov
xlat
imull
sub
pop
jmp
sti
clc
sub
sbb
sub
cli
pop
addb
or
stc
xor
jg
out
fcompl
xchg
shlb
jno
adc
out
std
loopne
pop
rcrb
and
call
dec
or
jne
inc
movsl
ljmp
imul
aas
loop
push
jb
or
dec
filds
jecxz
and
idivb
cmpsl
cwtl
xchg
mov
fmul
mov
in
out
cmpl
aas
pop
and
mull
aam
das
into
add
mov
push
aas
jo
xor
notb
cli
gs
mov
adc
outsb
add
icebp
mov
ljmp
cltd
cli
aaa
mov
inc
or
mov
and
sub
scas
je
aaa
pop
push
insl
popa
arpl
and
dec
mov
popa
fidivrl
lods
xchg
mov
add
jl
mov
popl
cltd
addr16
rolb
outsb
ljmp
shlb
insl
addl
jl
rcrl
xchg
pop
stos
adc
out
pop
sbb
xchg
xor
push
ljmp
pop
jb
xor
sbb
fiadds
aad
adc
test
dec
mov
mov
or
adc
fwait
ficoms
push
scas
lahf
adc
std
or
out
movsl
sub
mov
and
xchg
in
jg
sbbl
or
sub
jp
sub
mov
add
mov
ja
jp
repnz
leave
jne
test
mov
scas
fcoml
mov
scas
xchg
stc
cli
sub
pop
pop
cwtl
sub
push
pop
inc
push
xchg
ja
stos
dec
out
repnz
cmc
outsb
insb
orb
jnp
push
sbb
in
in
jp
adc
inc
push
ret
adc
fistpl
inc
sub
jae
and
push
mov
xor
push
mov
cmpsb
das
xchg
xchg
int3
out
push
push
aad
push
jmp
sarb
mov
lods
xchg
leave
sbb
hlt
pop
mov
rolb
sbb
in
mov
addr16
or
sti
test
div
sbb
mov
fidivs
in
ffreep
cmp
push
xchg
mov
es
mov
push
fcomp
int3
jbe
cmp
out
pop
enter
daa
xchg
movsl
inc
cmp
sbbl
cmpsb
cmp
jl
inc
leave
dec
jae
aas
push
mov
addr16
test
pusha
lahf
int
push
push
add
mov
push
or
sub
pushl
cmpsb
pusha
scas
push
in
push
dec
bound
jbe
pop
inc
imul
sub
sbb
cmp
ds
push
adc
cmpsl
stc
mov
xorb
sbb
mov
push
xor
sub
pop
xor
xchg
add
jge
addr16
mov
sub
jecxz
outsb
pop
enter
xor
stc
mov
les
or
mov
test
fdiv
aad
divl
pop
into
lret
push
rcl
fmull
add
jg
adc
xor
aad
outsl
adc
ret
rcll
mov
adc
jne
mov
cwtl
std
out
add
xor
cmpsl
xor
cmp
xchg
outsb
or
out
mov
loopne
jle
pop
xor
cmp
adc
movsb
sbb
mov
sub
jb
xlat
ss
sub
dec
cwtl
mov
aaa
test
sti
cmpsl
xor
cmp
xor
sbb
nop
decb
aad
pop
dec
dec
fnstenv
test
ds
or
lahf
add
call
jl
xor
adc
je
pushf
test
lret
jmp
test
pop
aad
ja
inc
xchg
aas
subl
fwait
dec
push
cli
xorb
jecxz
sahf
adc
stc
jmp
repz
ret
cwtl
inc
xor
mov
jmp
adcl
sbb
in
add
mov
lock
sbb
lods
cmp
mov
pop
outsl
push
and
in
sarl
cli
not
cmpsb
push
std
sub
dec
cmpsl
xchg
mov
leave
icebp
xchg
xchg
push
cld
add
xchg
rorl
in
test
outsl
pop
frstor
imul
aam
and
pusha
xchg
and
insl
dec
stos
push
xchg
movsw
jl
ds
add
clc
lods
repnz
mov
and
andb
adc
roll
xorl
test
inc
mov
lahf
std
push
in
xchg
fisttpll
data16
push
icebp
xchg
pop
shll
pop
mov
lds
rclb
add
add
xor
adc
or
xor
movsl
cwtl
mov
sbb
loope
sub
pop
lods
ja
int
dec
xchg
sbb
inc
sbb
imul
push
call
add
pop
es
test
push
jns
xor
xchg
xor
int3
mov
in
mov
jp
or
mov
xor
mov
out
testb
push
pusha
pop
dec
popf
ffreep
shll
stos
repnz
orl
in
mov
je
push
outsl
bextr
jnp
ret
out
dec
xchg
test
mov
stos
nop
iret
or
inc
ret
pop
pop
dec
mov
loopne
and
fmull
popf
xor
hlt
push
cmp
enter
outsl
xchg
ljmp
imul
jecxz
mov
cltd
pop
rclb
sti
repnz
leave
xchg
xchg
add
movsl
adc
inc
jnp
stos
or
lahf
or
aaa
es
or
push
mov
loop
les
scas
mov
sbb
adc
lock
jo
inc
js
pushf
xchg
and
add
jnp
test
ret
cwtl
jbe
mov
jge
add
enter
daa
xchg
sarl
jbe
jl
adc
loop
test
xor
pop
sub
push
shrl
test
xlat
or
cmpsb
jecxz
mov
js
lock
push
sbb
repz
jno
cmp
mov
movsl
lahf
idivb
rolb
xchg
push
mov
xchg
add
je
xor
adc
inc
adc
pop
mov
sub
ret
pop
out
lcall
out
mov
sub
and
xor
cmp
jg
es
inc
rorl
pop
mov
loop
sbb
adc
fsubrs
loop
lret
test
addr16
repz
xlat
pushf
sahf
and
xor
xchg
or
push
popf
loop
or
mov
cli
adc
mov
cmp
jecxz
aad
jae
mov
addr16
loop
push
sbb
or
repnz
inc
adc
loop
and
pop
push
sub
adc
cs
imul
sub
and
and
cmp
sbb
jmp
mov
add
pop
add
shrl
pop
dec
mov
push
ljmp
xor
repz
xchg
push
int
sbb
or
sti
pop
ss
outsl
adc
clc
test
cs
aad
aad
inc
mov
cmp
pop
dec
int
scas
je
sbb
pop
outsl
cld
rorb
cld
add
mov
stos
jmp
sub
pop
outsb
fistl
and
jno
inc
stos
dec
mov
das
mov
mov
cli
push
and
fisubs
into
push
notb
pop
sub
dec
cmpb
xchg
add
mov
push
mov
lret
cltd
pop
and
mov
mov
pop
cld
mov
lahf
sub
sahf
ret
push
test
outsl
insl
das
aad
clc
fwait
movsl
popa
xchg
movsl
cmpb
mov
xchg
popa
or
dec
lods
pop
dec
sarb
inc
arpl
and
jo
lret
inc
dec
add
popa
test
inc
mov
adc
push
cmpsl
shrb
hlt
test
fs
xchg
jge
sbb
aam
lret
fiadds
pop
pop
test
std
xchg
mov
fnsave
pop
cld
fisttpl
lret
lret
lahf
xor
ss
mov
sbb
cmp
pop
mov
imul
cwtl
cld
inc
mov
sub
lock
rorb
sub
push
out
arpl
fisubs
xor
out
in
xchg
enter
les
pushf
mov
or
enter
mov
mov
mov
mov
inc
dec
mov
in
pusha
repz
xlat
mov
sarl
jmp
push
xchg
test
sub
lret
push
adc
out
and
xor
mov
jle
xor
in
sbb
iret
addr16
rol
clc
mov
ret
inc
cltd
jae
jmp
push
cmp
ds
pop
and
push
mov
test
xchg
inc
mov
mov
scas
sbb
sahf
push
daa
sub
scas
stos
pop
mov
push
dec
pop
leave
or
hlt
lock
arpl
mov
cmp
pop
and
push
movsl
int3
lods
add
mov
das
fidivrs
mov
scas
jnp
scas
and
in
adc
xor
mov
push
jbe
mov
jge
neg
enter
daa
xchg
cmp
jno
xlat
out
jl
mov
dec
push
scas
sahf
push
push
loop
xor
mov
inc
sbb
enter
and
inc
sbb
xchg
sub
and
or
push
loopne
loope
push
mov
xchg
lcall
fnstenv
pushf
movsl
cmpsb
sarb
lahf
divb
sbb
pop
add
and
or
daa
pop
andl
xchg
out
jnp
in
lcall
add
xor
sub
sub
outsb
push
out
hlt
adc
adc
addr16
mov
inc
sbb
mov
ret
mov
int
xchg
mov
divl
rol
decb
mov
test
sbbb
jb
sahf
lds
push
xor
aaa
stc
outsl
rcll
loop
mov
aas
mov
push
adc
sbb
cmp
fimuls
out
pop
push
xor
test
cmp
jno
or
add
loopne
push
adc
les
adc
xchg
push
cmc
sbb
add
or
clc
jns
cld
jb
cmp
dec
mov
sub
cmc
xor
or
cwtl
out
incb
push
xchg
nop
mov
rorl
jb
andb
fstps
xor
repz
or
in
not
call
jp
xor
jmp
insb
mov
decb
push
jmp
aad
cs
xor
cmovo
dec
jb
pushf
popf
dec
inc
roll
xchg
ljmp
jmp
aam
mov
and
sahf
fildl
ret
push
sbb
inc
fdivs
inc
xor
pop
das
imul
mov
in
xchg
sbb
addl
dec
jge
inc
cmpsl
xchg
rcr
mov
aas
push
sar
cltd
lret
or
js
inc
mov
ja
pop
pop
mov
sbb
int
rsm
sub
adc
in
sub
insl
push
in
clc
std
cmp
and
mov
lods
enter
xchg
stos
sarb
ret
ds
dec
mov
bswap
cmpsl
faddl
cmpsl
jecxz
cltd
or
insl
test
out
mov
int3
cmp
cmpsb
inc
fstl
cmp
jae
notb
shll
mulb
pop
or
stos
fcompp
xor
xchg
cmp
mov
incl
sbb
xor
sbb
mov
and
dec
sti
jecxz
pop
inc
fstpt
dec
jnp
jo
dec
jge
or
push
loop
out
mov
xchg
xchg
add
push
popf
sbb
bound
jns,pt
inc
out
addr16
xchg
roll
push
mov
lea
push
lret
xor
repnz
in
mov
pop
ljmp
or
fwait
jg
jne
sub
pusha
mov
xchg
movsb
jg
jmp
pop
mov
out
enter
mov
mov
push
in
shrb
mov
insb
ret
lods
lods
jnp
jmp
jle
mul
lret
jge
adc
outsl
iret
loopne
ret
add
inc
mov
mov
push
sti
dec
popf
addb
push
cmp
aaa
fiaddl
mov
sbb
gs
imul
mov
sbb
ror
jge
mov
or
cmpsb
ja
leave
jg
add
cmp
ljmp
mov
aad
aaa
movsb
loope
or
lahf
cmc
int3
mov
inc
cltd
ficomps
mov
jo
sar
pop
sbb
and
insb
cmp
mov
addr16
lds
jbe
add
enter
daa
xchg
int3
sbb
mov
pop
scas
jl
das
sbb
and
push
xor
sti
xor
push
mov
popa
push
jns
jns
testb
insl
call
lods
xor
leave
in
or
fcoms
add
push
push
pop
movsl
loope
outsl
bound
xchg
mov
ds
add
lods
push
add
cmp
xorb
test
and
dec
lret
mov
out
add
pop
pop
cli
sbb
test
jbe
sub
testl
loopne
mov
xor
pop
jg
inc
cmp
mov
loop
mov
insl
inc
and
xchg
push
and
int
das
add
and
jmp
jae
inc
lret
cmp
xchg
mov
mov
shr
sahf
push
xchg
adc
outsl
mov
pop
loop
cmp
stc
imulb
fs
mov
cmp
fsin
inc
out
int
cli
int
mov
cmp
pop
mov
into
or
ds
jo
sbb
pop
pop
mov
adc
pop
inc
adc
push
adc
lock
data16
shrd
insb
fistpll
and
mov
sub
mov
js
pushf
sti
mov
dec
movsb
sub
inc
nop
mov
fwait
inc
xchg
pop
pop
ficoml
cmpsb
mov
repz
ds
fdivl
push
call
stc
rcl
pop
pushf
inc
cmp
pushf
test
xchg
mov
xor
inc
xlat
aam
aas
pop
jb
jb
fists
je
push
push
jecxz
stos
in
movb
pop
lea
xchg
test
jb
je
orl
sbbl
mov
mov
mov
pop
inc
mov
scas
insb
das
dec
cld
andb
incb
shrl
negb
insl
dec
js
push
cmpsl
xchg
es
mov
push
in
out
xchg
lret
ja
ret
push
mov
mov
jo
shl
xchg
xchg
jb
lahf
aam
icebp
leave
ret
jae
pop
es
dec
mov
clc
adc
loop
and
adc
xchg
aaa
stos
popa
ss
add
mov
lea
adc
push
orb
cs
sbb
inc
mov
mov
leave
inc
push
sub
sahf
ja
aas
stos
dec
xchg
rolb
test
xor
mov
jae
int
insl
out
jmp
aam
add
push
aas
xor
push
aaa
xor
push
mov
and
dec
bound
pop
add
ja
mov
xchg
inc
loope
aas
or
and
fwait
push
dec
mov
cmp
dec
add
imul
cmp
jns
cmp
in
sub
and
lret
inc
mov
push
mov
addr16
xchg
iret
jp
loopne
mov
cmpsl
in
xor
or
jno
jne
xlat
out
pusha
sub
mov
xchg
ja
mov
jecxz
xchg
and
pop
mov
sub
inc
in
aam
xchg
jo
stos
adc
mov
insb
mov
movsl
jle
push
dec
in
inc
xor
std
loop
iret
and
sub
pop
icebp
jbe
lods
cmc
aas
jae
ret
cmp
popf
cmpsl
push
mov
xor
xchg
out
add
mov
test
jb
push
mov
jmp
in
add
stc
aam
leave
testb
xchg
jle
xor
inc
test
sbb
rcrb
enter
adc
mov
rolb
out
cmp
mov
mov
xchg
xor
pop
jmp
cmp
and
ljmp
mov
jae
adc
es
aad
jge
nop
cld
enter
daa
xchg
loope
cmp
jmp
jno
add
cmc
dec
das
pop
in
push
pop
int3
sbb
lock
lahf
dec
add
push
dec
pushf
mov
in
mov
inc
cmp
shr
lock
pop
inc
out
push
subl
imul
ds
leave
cwtl
movsl
mov
xchg
adc
pusha
add
jbe
fisttps
add
jnp
xor
inc
les
js
sub
push
pop
jns
setp
pop
fcmovnu
mov
outsb
sbb
fildl
jne
out
mov
in
mov
mov
shl
and
push
push
and
mov
fcomp
add
divl
cwtl
aas
lret
out
sub
cld
mov
insb
sbb
cmc
jnp
or
les
xchg
ljmp
dec
and
stc
lods
mov
sbb
dec
rol
ss
lea
ds
mov
dec
inc
out
ret
lock
add
mov
fadd
pusha
cmp
mov
mov
out
in
cmc
aaa
adc
loopne
js
pop
mov
call
imul
cmpsl
lea
addr16
lods
lret
cmp
dec
xlat
xor
fldt
into
jb
mov
jecxz
cli
sti
arpl
lahf
inc
xor
mov
nop
push
dec
dec
aad
inc
inc
test
in
or
outsl
les
and
xchg
lahf
ror
sbb
jnp
hlt
js
ret
push
dec
adc
scas
shr
and
push
cs
adc
inc
sbb
bnd
aas
std
xchg
stos
jb
push
push
je
xchg
movb
inc
cwtl
sub
ret
test
inc
xorl
mov
testb
stos
lock
lods
das
sub
mov
sti
jne
and
ret
mov
sub
add
adc
insl
andl
mov
sub
out
out
mov
jg
mov
sub
mov
pop
rcl
shlb
outsb
out
aam
adc
ret
add
in
cs
mov
lods
test
dec
push
xchg
bound
adc
or
dec
lods
sahf
add
mov
cmp
bound
lea
jge
and
test
adcl
mov
lods
ja
pop
adc
pop
pop
jg
stos
mov
divl
fsts
ud0
mov
xor
in
jl
xor
jnp
pop
loop
mov
es
jnp
mov
adc
dec
popa
push
cwtl
inc
js
js
hlt
cmc
test
fstl
jecxz
les
out
add
bound
fstpl
jge
push
xchg
outsl
or
mov
push
lock
arpl
nop
jnp
inc
imul
pop
lock
mov
push
les
out
pusha
les
filds
in
xchg
dec
mov
rcll
fucom
out
stos
mov
outsl
xor
sarb
stos
xchg
push
insb
cltd
cmp
jle
int
in
jae
adc
jb
iret
test
or
sub
mov
adc
loop
into
push
push
cmp
adc
test
movsb
xchg
inc
out
xor
fsubl
scas
inc
mov
push
cld
cs
ljmp
dec
inc
leave
insl
sbb
hlt
shll
and
jg
or
mov
nop
aaa
and
or
lret
add
sbb
mov
pop
cmp
repnz
jle
jo
xchg
in
sbb
lret
scas
les
adc
jbe
pop
pop
jge
xor
enter
daa
nop
jp
cmp
enter
rcll
jl
pushf
stos
dec
sahf
push
es
cli
cs
xor
mov
lahf
push
aam
test
add
inc
lret
cmpsb
out
push
insb
in
xlat
dec
test
mov
punpckhdq
loope
sbb
aam
jmp
mov
ds
or
mov
cltd
mov
adc
outsb
sbb
dec
mov
xor
std
push
cmp
pop
clc
xlat
sub
clc
les
lcall
je
xor
cmp
mov
outsb
jle
adc
data16
jg
push
push
mov
orb
mov
fs
ljmp
adc
add
lret
or
mov
movsb
sbb
xchg
sahf
scas
sub
push
loop
repnz
or
cs
loopne
dec
stc
fs
arpl
test
xchg
pop
enter
xchg
cmp
iret
cmpsl
out
cmp
cli
xor
cmc
mov
into
rol
dec
cmc
push
loopne
test
test
imul
scas
dec
data16
lods
mov
or
cltd
pop
xlat
jno
xchg
sub
test
dec
inc
ljmp
daa
xchg
fisttpll
jne
xor
push
inc
mov
test
repz
bound
sbb
div
pop
mull
pop
add
push
adc
out
jo
ds
andnps
notl
aad
xor
aas
pushf
mov
jb
add
test
push
movl
lds
call
jge
mov
enter
pop
dec
test
or
rclb
testl
int
or
in
mov
xchg
rorl
sub
and
or
or
repz
les
dec
lret
push
cmp
mov
fisttpl
mov
js
adc
pusha
insb
call
jae
es
add
push
outsb
xchg
mov
imulb
lods
or
mov
and
fsubrl
addb
push
pop
cltd
mov
out
lahf
cmp
mov
fists
fbstp
or
test
inc
and
daa
adc
pop
or
push
stos
stos
sub
out
scas
xor
xchg
adc
add
push
test
xor
cmpsl
cmp
dec
mov
sub
mov
ja
lock
mov
arpl
lahf
sbb
push
addb
add
pop
in
out
fists
inc
jns
and
in
adc
xchg
mov
adc
or
jmp
jp
repz
xchg
push
dec
inc
xor
loop
push
pusha
pop
sub
fistps
ficoms
jge
in
mov
insb
outsl
out
dec
shrb
lret
adc
add
insb
add
iret
jnp
idivl
ds
loopne
loope
mov
inc
iret
jecxz
cmp
pop
pop
push
mov
jae
stos
js
inc
pop
addr16
cmc
hlt
dec
push
mov
in
pop
mov
xchg
popf
cli
icebp
sbb
lds
and
test
repz
inc
dec
sub
sbb
out
imul
repnz
sub
hlt
sbb
out
arpl
sbb
lods
aaa
or
inc
pop
out
aaa
loope
or
mov
int3
jns
iret
pop
push
inc
inc
lds
pushf
pshufw
in
das
mov
cmp
sbb
and
mov
fdivl
fcoml
enter
daa
xchg
sbb
cmp
jno
ret
jb
in
dec
or
test
xor
es
lahf
xchg
clc
push
repnz
les
into
in
inc
pop
pop
shll
sti
mov
and
mov
and
outsl
movsb
pop
sub
mov
ds
movsl
ret
ror
ret
sbb
sbb
test
xor
adc
inc
pop
pop
sbb
sub
cs
ja
push
lcall
ret
xor
and
or
adc
xorl
dec
mov
push
or
iret
xchg
int
jae
dec
push
sub
sahf
int
pop
xchg
fcoms
divl
sub
rcrl
mov
sbb
cmp
dec
in
outsb
outsl
dec
jle
loop
xchg
fs
and
adc
sub
ss
cmpl
cwtl
sub
outsb
cmp
xor
push
xchg
or
dec
into
mov
stc
cmc
loopne
out
pop
out
dec
dec
adc
add
imul
loope
popf
cli
in
data16
cmp
aam
not
mov
loopne
mov
iret
mov
mov
mov
decb
rorb
dec
xchg
cwtl
mov
fnstcw
addr16
movl
jecxz
mov
rol
jbe
pop
pop
mov
scas
adc
in
stos
mov
mov
pop
inc
in
aad
sbb
sub
push
aas
cmp
mov
dec
and
sub
ret
jecxz
sbb
or
xchg
cwtl
mov
mov
mov
dec
outsl
inc
repnz
mov
pop
lcall
lock
and
mov
imul
rcrl
adc
cmpsb
adc
in
cmpsl
mov
enter
pop
icebp
fwait
mov
sbb
fnstenv
xchg
inc
pop
mov
xchg
lahf
test
pop
mov
sub
loop
mov
adc
es
push
insl
mov
lods
clc
ret
xchg
loopne
loope
lock
popa
jnp
shrb
data16
mulb
or
fsubrp
cmovnp
add
das
dec
cltd
call
loope
mov
pop
push
push
jbe
push
xor
dec
test
imul
mov
pop
sbb
popf
rcl
jle
pop
pop
mov
mov
out
adc
xchg
pop
addr16
add
sbb
add
les
push
hlt
and
push
xor
xchg
jns
pop
xor
int
adc
dec
inc
movsb
incb
sub
lret
fwait
stos
nopl
push
add
jp
push
out
mov
mov
addr16
xchg
mov
es
test
xor
or
mov
pop
icebp
mov
cmpb
jne
das
cmp
idivl
jle
movsl
xchg
lock
pop
jmp
xchg
pusha
out
pop
mov
or
push
mov
push
adc
dec
and
sub
and
sbb
jle
movsb
in
stc
and
mov
pop
iret
inc
xchg
adc
push
fsubr
pop
xchg
mov
inc
int
nop
jae
test
push
pop
mov
fldt
jne
inc
ss
fimull
xorb
add
scas
or
push
mov
dec
shlb
lret
and
leave
pop
mov
hlt
jcxz
arpl
xchg
inc
lea
or
add
mov
stc
test
lods
jno
int3
fs
pop
xchg
test
fsubrp
imul
icebp
mov
scas
dec
and
imul
js
push
add
and
or
adc
cmpsw
pop
daa
mov
cmpb
pushf
mov
xchg
mov
push
push
rcl
xor
shll
cmpsb
mov
push
test
cltd
fiaddl
cmpsb
cmc
mov
cltd
js
repnz
add
push
lock
push
push
sub
aad
cmp
rcll
shlb
movl
xor
xor
xchg
sbb
xlat
sub
inc
inc
xchg
out
pop
sahf
pop
test
lcall
xor
mov
pop
outsb
inc
xor
jle
pushf
enter
mov
pop
cs
sub
mov
rep
and
ret
lret
fmuls
xor
imull
loopne
rorb
shl
imulb
sahf
hlt
clc
mov
xor
rolb
or
sarb
pop
aas
adcl
clc
sbb
xor
inc
mov
sahf
jne
insl
mov
daa
xor
mov
sbb
mov
popa
mov
mov
stos
loopne
inc
bound
stc
mov
fisubrl
xchg
sti
push
add
addr16
lods
jg
sahf
cmp
imulb
out
dec
mov
daa
hlt
fsubs
and
ds
jo
sar
repnz
jns
nop
sti
xor
inc
loope
clc
fnstenv
cmpsl
repz
leave
xchg
call
outsl
inc
call
cmc
add
pop
push
push
fstps
sub
cs
cmp
fimull
jb
cmc
sbb
and
or
jb
push
in
mov
pop
adc
mov
jle
mov
pop
xorl
movsb
fldt
rorl
cmp
mov
jbe
aaa
lcall
mov
and
fwait
inc
shrl
adc
mov
dec
pop
cmpsl
lea
push
icebp
jb
mov
xor
xor
sub
mov
bound
pop
mov
rcl
cs
cmp
dec
push
data16
je
ret
scas
lock
mov
mov
clc
std
bound
arpl
rep
fildll
xchg
mov
sbb
fwait
and
xchg
and
jmp
push
test
cltd
pop
adc
push
mov
fs
push
cmp
pop
test
sub
xchg
jb
rcl
xchg
stos
mov
push
out
jne
stos
xchg
lahf
mov
add
cmp
xor
mov
or
xorb
das
int
cwtl
sbbl
xor
cmp
cmp
outsl
dec
pop
push
mov
add
aad
mov
bound
pop
jns
xchg
pop
in
dec
aas
xchg
pop
arpl
mov
scas
mov
xchg
or
outsl
addr16
dec
jp
aad
mov
mov
test
xchg
dec
or
inc
jne
push
pusha
xchg
fistps
fnstenv
imul
xchg
push
imul
out
out
sub
sub
dec
push
loopne
jecxz
js
jg
fiaddl
jnp
xor
inc
std
mov
adc
fcmovne
mov
jp
pop
int
pop
inc
fadds
jae
mov
xchg
stos
pop
push
inc
mov
neg
roll
xchg
dec
jg
sbb
inc
push
scas
outsb
cmp
push
sarl
mov
inc
push
xor
shlb
hlt
mov
push
insl
cwtl
je
nop
adc
mov
shl
or
mov
int3
dec
std
ficomps
sub
mov
fdivl
popa
icebp
scas
mov
stos
and
dec
cmp
movsb
loope
mov
fwait
inc
jbe
mov
jge
jae
enter
daa
lea
cmp
adc
enter
jmp
push
push
mov
fmul
and
lahf
lds
test
and
cmpsb
js
mov
js
js
pop
aas
mov
popf
es
sub
testl
stos
imul
flds
sub
mov
sbb
loop
push
pop
insl
dec
xchg
sub
xchg
pop
jne
das
lcall
cmp
xor
push
outsb
cmpsl
push
stos
adc
mov
enter
in
mov
xchg
test
push
pop
shll
sub
xor
movsl
fmul
imul
mov
sub
mov
iret
mov
mov
sahf
xchg
int
test
in
xor
inc
outsb
outsl
or
mov
dec
fs
jne
test
es
sarb
out
ret
ret
cli
int3
ds
xor
fdivrl
in
aad
daa
loop
into
jnp
mov
loopne
mov
pop
sub
nop
inc
imul
fwait
add
mov
lods
data16
cmp
cmp
cs
iret
mov
pop
and
push
lds
test
pop
out
push
test
jle
fld1
push
push
and
xor
fimuls
call
je
xchg
mov
mov
pushf
add
movsb
jmp
mov
mov
hlt
push
lret
mov
divb
cmp
dec
push
mov
je
mov
jecxz
push
sbb
adc
cwtl
sbb
xchg
mov
lds
mov
movl
pop
mov
pop
loopne
aas
inc
pop
cmp
das
movsl
nop
cmp
xlat
mov
xchg
shl
pop
xchg
imul
lock
arpl
push
cmpsl
mov
lock
dec
cli
data16
pop
push
ror
mov
stos
jno
and
pop
cmp
aad
push
rolb
xor
sub
dec
out
ret
ds
pop
insl
xor
clc
cmp
fwait
xchg
pop
out
mov
pop
ret
std
jmp
dec
aaa
out
mov
cmp
push
and
insl
orb
sbb
mov
test
sub
sub
sub
fldl
jp
xchg
mov
sub
xchg
add
js
mov
fcomps
add
dec
incl
push
xor
or
cmpsb
mov
xor
loopne
test
enter
lods
dec
sub
fidivrl
fwait
or
movsb
add
xor
dec
out
jl
pop
gs
addr16
mov
stos
cmpsl
mov
fstl
in
push
jns
out
and
or
mov
dec
in
jbe
jne
or
fistpll
sbb
bound
pop
addl
and
cli
loope
sub
addr16
sub
roll
push
je
and
inc
pop
jnp
shll
dec
xchg
in
lss
inc
jp
iret
add
xor
fcmovb
inc
jecxz
mov
popf
add
push
lea
les
dec
pop
inc
xor
sbb
je
gs
mov
mov
jge
rcll
push
sbb
shrb
mov
cwtl
mov
leave
dec
ficoms
hlt
std
jae
arpl
inc
xchg
out
fimuls
ja
bound
push
pop
or
dec
imull
fidivl
pop
cmc
jo
fidivs
lea
jo
and
scas
xchg
incb
cmp
ds
insb
add
push
lahf
movsl
xor
int3
idivl
cmpsb
test
pop
movsl
mov
cmp
inc
mov
jl
rorb
in
push
xchg
xor
neg
xchg
imul
push
das
rorb
push
loope
cmpsb
sti
cli
jb
jae
es
xchg
cmpsb
pop
jle
cmpsl
push
jmp
imul
iret
cmp
repz
rcrb
out
cmp
out
and
push
sbb
lods
repz
adc
and
pop
lahf
minps
mov
lcall
inc
fsub
cmp
int
outsb
or
mov
addr16
iret
jg
mov
test
mov
lods
jns
mov
sbb
int
xchg
sbb
cmp
imul
shlb
cmpsb
loope
rcrl
jg
adc
and
sahf
cmp
aam
pop
pop
outsl
in
test
loop
test
stc
inc
outsl
je
adc
xor
jle
ds
mov
dec
out
cli
call
mov
cmp
xchg
mov
xchg
pop
ds
pop
int
cmc
sbb
dec
loopne
xor
pop
dec
pop
mov
andb
adc
xchg
push
add
mov
lods
dec
cld
sbb
test
insl
jg
sub
mov
in
cli
repnz
into
adc
stc
repz
mov
movsb
dec
mov
lea
out
lret
fstps
mov
call
unpcklps
fildl
repz
pop
into
pop
mov
pushf
stos
lds
jmp
or
adcl
inc
jns
add
sbb
jb
mov
dec
test
loop
mov
out
loop
adc
xor
aam
test
inc
inc
cmp
xor
fisttpl
jae
loop
xchg
lock
dec
call
mov
mov
and
jp
roll
inc
imulb
inc
sti
std
or
dec
pop
loope
cmpsl
mov
iret
mov
and
cld
mov
lret
adc
mov
mov
mov
hlt
repnz
aam
add
cmp
mov
adc
push
ret
int
popa
es
cmp
clc
jae
movsb
xchg
popf
ljmp
rolb
mov
pop
aam
and
dec
out
mov
push
lret
cwtl
cltd
lea
testb
jo
mov
mov
xchg
jmp
stos
roll
push
cmp
addr16
out
cmp
out
pusha
mov
mov
mov
mov
xor
nop
cld
mov
xor
adc
arpl
ja
xchg
inc
imul
or
popl
fwait
cmp
push
push
or
in
add
mov
imul
insl
jns
popf
and
xor
xchg
cli
cltd
bound
aam
and
cmp
inc
addr16
mov
mov
pop
fnstcw
test
and
decb
out
pusha
lret
fldt
fistpl
pop
xchg
imul
sbb
mov
in
sub
mov
pop
fsubrs
cmpsb
cs
mov
pushf
jnp
adc
in
xor
adc
outsb
ret
iret
pop
sub
pop
cmp
inc
out
fbld
insb
stos
sbb
push
and
xchg
add
lcall
and
xchg
stc
xchg
sbb
add
data16
xor
test
pop
mov
rolb
mov
jmp
mov
hlt
dec
mov
inc
inc
xchg
in
sub
xor
icebp
aaa
frstor
or
or
and
jnp
mov
lds
cli
jo
jae
cmp
jnp
sbb
ljmp
push
out
repz
pop
sbb
enter
daa
mov
adc
push
mov
sahf
jl
test
jae
imul
and
out
negl
mov
xlat
push
cli
mov
inc
xchg
jmp
cmpsb
jle
lret
xchg
mov
adc
pop
mov
dec
loop
lret
cmp
sub
mov
cmp
xchg
lea
icebp
jno
movsl
fidivs
mov
xchg
sub
sbb
filds
add
arpl
and
in
mov
push
pop
jae
sub
scas
and
fmull
hlt
movd
notb
in
add
jg
mov
mov
cmpsb
pop
mov
sahf
xorb
insl
push
aaa
ja
int
insb
daa
fadds
sbb
lods
out
sub
cltd
fistpl
mov
pop
mov
jl
sbb
negb
daa
lea
outsl
lret
in
loop
lds
cli
mov
sarl
mov
pop
push
cli
xor
pop
cmp
or
add
jno
cmc
loope
xchg
loopne
enter
adc
imul
sbb
add
rolb
mov
xor
xlat
lods
pop
mov
mov
gs
sti
jge
dec
cltd
inc
pop
gs
fcoml
jb
xor
push
gs
repz
xchg
xor
sbb
pop
adc
mov
adc
jns
jmp
and
cs
in
xorb
aas
mov
fnsave
addr16
cld
int3
push
je
cmp
jecxz
adc
pop
mov
rcrb
mov
scas
fiadds
sbb
dec
pop
es
cmpsb
lock
sub
das
arpl
mov
inc
mov
sbb
xchg
mov
divb
fs
mov
push
dec
push
or
mov
idiv
mov
lret
addb
mov
sub
push
pop
adc
cmpsl
test
sub
pop
aam
enter
sub
es
stc
push
insl
dec
imul
scas
push
xchg
fsubrl
ljmp
sbb
and
dec
mov
or
and
and
inc
dec
add
mov
pop
test
leave
shll
andb
pushf
fsts
mov
inc
sbb
rcr
popa
xchg
mov
out
sahf
cmpsl
sti
xchg
je
dec
add
cltd
jle
push
xor
dec
mov
xor
push
imul
xor
pop
push
add
or
xchg
dec
adc
or
pop
dec
fwait
addr16
push
scas
mov
jmp
call
out
cmp
bound
dec
inc
jns
adc
adc
dec
fwait
aaa
mov
mov
or
jecxz
ljmp
mov
negb
mov
es
mov
mov
jb
pusha
data16
push
aam
cmp
in
jmp
mov
and
and
push
mov
dec
jle
stos
cmp
push
jnp
sub
in
mov
adc
jne
iret
mov
cwtl
dec
pop
jb
dec
inc
stc
sub
jae
xchg
dec
push
adc
popf
mov
ja
inc
xor
fcmovu
sarb
push
push
and
and
scas
xchg
push
add
cmpsb
lock
mov
leave
aaa
cltd
shl
xchg
push
cld
arpl
pop
es
in
and
or
lds
or
pop
push
dec
mov
ja
mov
jo
in
scas
push
rol
push
inc
lahf
cmp
fidivrs
jbe
pop
aad
test
frstor
mov
jge
cmp
sarb
arpl
inc
orl
test
pop
sub
and
mov
outsl
test
inc
and
cltd
cmpsb
add
xlat
in
inc
mov
ljmp
arpl
loop
lods
sub
push
test
loope
push
ds
shll
adc
test
pusha
mov
add
add
nop
jecxz
rcrb
jae
fisubrl
lea
push
push
fdivl
or
dec
fists
outsb
shlb
adc
or
dec
jg
scas
jo
mov
cld
mov
mov
int
cmp
int
sub
fdivr
lea
imul
rorl
mov
xor
sbb
negl
scas
idiv
xor
mov
loop
pop
mov
fs
push
jno
push
ss
out
iret
imul
out
in
adc
gs
xor
pop
test
je
mov
and
movsl
cmc
test
and
xor
pop
mov
and
es
imul
add
jp
inc
xor
dec
sti
cmp
sbb
repz
mov
rolb
sti
sub
mov
gs
jne
add
xchg
inc
sub
in
adc
repz
push
inc
call
icebp
jbe
pop
xor
xchg
adc
shrl
add
jmp
add
cs
dec
aad
cmc
mov
scas
std
sub
push
out
jb
dec
ret
dec
jae
adc
cmp
xor
and
sbb
xor
pusha
push
and
mov
mov
mov
leave
out
shr
push
push
fucomi
stc
sub
inc
lock
sub
or
mov
mov
cld
stos
dec
and
test
sub
mov
ja
pop
dec
dec
dec
push
ret
push
cmpsl
mov
mov
into
mov
cld
ficomps
out
ja
mov
rcll
mov
xor
pushf
sarb
outsb
sub
aam
aam
aaa
test
jmp
aam
ret
jae
insl
xor
sbb
sbb
ljmp
xor
mov
mov
movsl
mov
adc
or
es
loope
cltd
sti
fnsave
mov
inc
push
inc
mov
test
out
xchg
insb
nop
sbb
pop
shll
sbb
pop
or
inc
stos
inc
jle
out
add
sahf
add
iret
pop
xor
inc
or
mov
out
fwait
mov
cmp
xchg
dec
lcall
ja
ljmp
cltd
outsl
sbb
dec
fwait
xchg
in
push
push
mov
add
inc
xchg
push
out
sbb
enter
test
dec
scas
push
xchg
cwtl
loopne
mov
push
inc
mov
das
and
jp
or
mov
mov
mov
stos
mov
dec
xchg
push
jnp
mov
fistps
xchg
aam
paddw
inc
jmp
xchg
jge
mov
out
mov
sbb
push
mov
pop
stos
lods
repz
out
insb
xchg
jle
jmp
sub
aad
jnp
sbb
or
inc
add
jg
or
jg
mov
sub
inc
mov
and
xchg
cmpsl
cmp
sbb
adc
imul
subb
cmp
add
xchg
vmread
scas
in
xchg
fiadds
arpl
inc
add
test
iret
aaa
pop
or
or
mov
jbe
sti
pusha
cmp
sbb
ficomps
push
cmp
scas
xor
adc
mov
and
movsb
or
pop
and
jge
xchg
or
js
daa
mov
lds
insb
jge
jno
pop
test
je
push
dec
cmpsl
fwait
jle
das
xchg
mov
and
test
lahf
inc
mov
push
in
out
test
nop
mov
inc
mov
jg
test
in
sub
je
cmp
lods
loope
fisubl
rol
cmp
dec
popa
movsl
in
shlb
shr
pop
xchg
push
mov
xchg
das
xor
sti
or
push
sub
cmpsb
scas
or
bound
push
test
jno
lcall
fcmovu
loope
or
cmp
push
dec
adc
and
and
mov
xchg
mov
mov
xchg
push
cmp
lret
cwtl
fdivs
pop
lret
ljmp
mov
adc
xor
aad
outsl
mov
or
gs
adc
xchg
ss
outsl
fidivrl
lods
push
out
cli
cwtl
fcmovnbe
xor
jns
or
addr16
pop
xchg
push
cmc
outsl
or
sub
mov
imul
inc
add
push
cmp
inc
lods
add
cmp
push
xchg
xlat
sub
mov
pop
mov
sub
fstpt
fistps
in
inc
daa
inc
dec
int
pop
inc
inc
ja
fld
pop
inc
or
repz
ret
xchg
mov
sbb
push
cli
jo
test
adc
jo
lods
pop
inc
jmp
mov
je
adc
cli
aas
cmc
daa
icebp
jb
popa
imul
lcall
daa
popf
sbb
outsl
rcrb
or
sbb
test
icebp
fnclex
fistpl
out
loop
insb
aaa
xchg
inc
ja
xchg
lock
das
and
mov
mov
call
shll
popa
inc
div
cmc
fs
lcall
or
add
mov
lret
pop
mov
mov
push
xor
adc
push
rorb
pop
sub
dec
in
jne
adc
jp
cmp
inc
bound
insl
sbb
inc
clc
and
push
xchg
pop
hlt
pop
ljmp
loopne
imulb
mov
jo
es
fnstenv
repz
push
cltd
xor
fwait
mov
mov
or
test
mov
xchg
and
test
mov
ja
xor
pop
out
orb
mov
mov
mov
pop
jo
call
sbb
mov
notb
xchg
sbbl
and
mov
dec
stc
jg
inc
xor
sub
jne
fwait
lds
xchg
add
pushf
sahf
push
out
clc
es
push
das
jns
repz
xchg
out
repnz
and
or
xor
addr16
pop
repnz
cltd
insb
mov
sbb
jns
push
insb
frstor
jae
fistpll
rorl
loop
dec
jmp
dec
fsubs
jg,pt
out
pop
sbb
push
mov
push
lret
stos
pop
xchg
jmp
into
insb
icebp
mov
xor
arpl
adc
adc
xchg
je
leave
mov
pop
loopne
mov
jae
xor
popf
push
lods
add
lock
ret
inc
sbb
sbb
fidivrl
imul
xchg
scas
pop
sub
push
xor
sbb
xlat
add
mov
in
ret
leave
and
test
inc
lahf
lahf
jmp
jnp
jmp
arpl
aaa
sbb
dec
add
in
int3
out
inc
pop
mov
fcomp
mov
pop
ret
cmc
mov
and
iret
cmp
or
cli
push
jbe
mov
jp
dec
xchg
cmp
mov
aad
lahf
stc
jne
xchg
dec
xchg
jl
insl
mov
push
adc
mov
arpl
adcl
push
test
pop
jnp
inc
inc
mov
shr
cmpsb
js
ret
fcoms
jp
push
scas
adc
adc
sub
or
cmp
mov
ds
movsb
dec
movsl
repz
adc
mov
and
outsb
lcall
jb
mov
imul
sub
lock
pop
lock
xchg
ficoml
push
imul
xchg
xor
adc
ds
clc
jg
mov
mov
lds
mov
adc
and
jl
push
inc
inc
inc
int
push
inc
fdivs
xchg
jmp
add
mov
pop
dec
sbb
movsl
xor
mov
in
outsl
push
push
stc
sbb
inc
fs
into
push
adc
dec
sahf
mov
cmp
cmpsl
out
out
popf
cli
lret
test
addr16
test
lret
or
jge
ljmp
loopne
ss
enter
int3
cmpb
cmp
add
leave
cmp
jno
xlat
imul
pop
mov
cmpsb
in
sti
mov
incb
xor
adc
popa
xchg
dec
sub
mov
mov
fsincos
into
fld
adc
call
xchg
jp
arpl
into
dec
rol
inc
xchg
pop
lcall
pushf
push
mov
addps
inc
in
das
aas
xchg
insb
xorl
movsl
dec
popa
cmp
mov
and
adc
stc
loop
mov
sbb
addl
mov
fisttpl
pop
pop
jge
push
lock
add
xchg
mov
fisubrs
loopne
sbbb
std
cmpsb
iret
rorl
cmc
lcall
mov
dec
cld
xor
and
int
mov
adc
mov
jae
jo
sbb
and
stc
sub
insb
mov
ret
or
push
es
les
clc
pop
lock
adc
adc
mov
jmp
mulb
mov
scas
pmulhuw
insb
add
mov
imull
and
fldl
int3
test
mov
lea
cmpsl
xor
fistpll
subps
mov
and
pop
xor
add
lahf
cmpsl
lcall
or
add
cltd
xor
sahf
adc
jecxz
testb
or
pop
dec
jns
ja
pop
pop
dec
in
outsl
sti
inc
movl
adc
cwtl
call
adc
xlat
xchg
insl
clc
push
mov
xchg
ss
mov
mov
and
sti
in
in
gs
mov
insl
mov
push
mov
pusha
aaa
into
test
push
sbb
mov
scas
jmp
adc
out
xchg
mov
pop
shrb
mov
or
pop
and
xchg
insb
pop
mov
jnp
add
in
popf
scas
adc
mov
aas
pop
pop
lock
inc
sbb
jae
jmp
push
popf
sub
or
roll
sbb
jae
imul
xchg
scas
rolb
push
jnp
push
shl
xlat
mov
aaa
cmpsb
cmp
pushf
jg
hlt
je
adc
or
or
push
mov
aaa
fld
pop
or
sarb
rorl
mov
dec
dec
fisubs
ffree
inc
cwtl
shlb
sbb
scas
out
add
cmp
lcall
sub
lahf
jbe
push
dec
jge
ljmp
enter
daa
xchg
mov
jno
pop
or
cli
dec
test
xor
scas
sbbl
xchg
sbb
push
es
out
cmpsb
mov
push
in
divb
js
rol
mov
loop
loope
or
and
out
dec
xlat
jge,pt
enter
inc
shlb
cmpsl
or
add
jecxz
xor
push
pop
push
inc
mov
pop
outsl
push
sbbb
push
add
aaa
jnp
sub
cmp
adc
pop
adc
stos
mov
sbb
daa
mov
and
inc
imul
fwait
mov
shl
int
lret
pop
rcll
cmp
jno
sahf
imul
and
and
sti
loop
inc
dec
stc
roll
nop
fs
hlt
adc
pop
ss
ljmp
clc
xchg
out
mov
xorb
jae
cmp
aaa
inc
or
inc
dec
into
int
pop
cmc
std
sub
rcrb
rclb
lahf
sbb
imul
jns
add
ret
shl
js
lods
enter
test
mov
adc
push
and
sti
add
mov
das
fnstenv
cmp
les
lock
setle
xchg
cmp
sub
dec
das
test
outsb
negb
dec
jb
adc
adc
add
cltd
jb,pn
mov
inc
add
jnp
xor
mov
je
inc
add
dec
dec
push
and
jno
xchg
push
mov
mov
push
cmp
pop
sbb
ja
mov
test
test
shl
sbb
das
mull
and
and
data16
rcrl
std
dec
call
mov
xchg
icebp
push
scas
or
pop
fildl
lret
cmp
loope
out
or
dec
daa
fstps
js
shl
pop
inc
sub
cs
jl
ret
cwtl
test
es
fwait
lods
insl
ljmp
xchg
fmuls
test
lods
int3
mov
push
xor
in
popl
cmovae
add
movsb
test
repnz
mov
cs
push
test
xchg
xchg
repz
push
bound
cmpsb
stos
adc
out
sub
pusha
add
dec
sbb
xor
fwait
or
mov
xor
jae
mov
inc
dec
mov
pop
or
or
int
fists
or
pop
dec
pop
or
fstpl
and
ret
push
cmp
mov
pop
mov
outsb
out
mov
lea
cs
jns
pusha
movsl
in
ljmp
outsb
sbb
mov
and
addr16
sbb
mov
int
mov
clc
rorl
loope
pusha
sarb
fbstp
push
xchg
mov
jmp
fiadds
int
or
mov
inc
mov
mov
dec
daa
inc
stos
add
lea
jnp
daa
sarl
sbb
sbb
iret
cmp
push
pop
dec
lods
dec
inc
and
jecxz
push
pop
pop
add
pop
mov
pop
fisubl
mov
mov
out
jmp
iret
push
ret
rorb
fdiv
mov
or
adc
mov
ficomps
scas
scas
or
fldcw
lds
cwtl
bound
add
int3
mov
sub
fiadds
xlat
cwtl
fidivs
push
sbb
pop
pusha
jne
jge
ja
jbe
out
jge
mov
enter
daa
xchg
adc
add
mov
imul
fdivs
xor
cltd
jecxz
lahf
sahf
sahf
push
push
pop
cs
test
icebp
push
ja
pusha
sbb
cmpsb
or
and
pop
clc
xchg
loope
fmull
add
idivb
popf
lahf
sub
mov
outsl
sbb
jl
xchg
xchg
sbb
sbb
cmp
aad
xor
sarl
sub
andl
xor
in
notl
loop
cld
sub
xor
pop
rcrb
adc
je
push
jg
repnz
mov
mov
enter
add
add
lods
fsub
sub
pop
dec
jnp
test
pop
insb
sbb
add
or
and
lret
xor
add
sahf
gs
stc
mov
fs
jmp
ss
push
mov
pop
loope
xor
add
adc
aad
or
push
mov
mov
push
cmc
les
loopne
fcmovnu
pop
push
ljmp
sub
mov
add
dec
lods
mov
idivb
out
adc
out
pop
sub
std
test
sti
call
cmp
gs
nop
nop
rcll
testb
outsl
inc
jns
mov
imul
repz
pop
sbb
les
rcrb
int3
adc
add
sbb
aad
repnz
inc
sbb
aas
rolb
imul
mov
mov
es
cld
push
mov
mov
and
mov
cmp
subl
int3
adc
inc
or
test
jbe
out
das
mov
adc
and
imull
and
outsb
test
sub
hlt
in
dec
cmp
add
sahf
xorl
sub
js
mov
mov
leave
call
push
mov
scas
add
sub
xchg
inc
aam
cmp
ret
daa
test
iret
in
insl
shll
inc
xchg
pop
mov
scas
popa
dec
mov
lods
aaa
mov
mov
xor
mulb
push
xor
mov
jge
cltd
xlat
out
test
pop
sub
fstl
in
xchg
push
adc
add
lock
xlat
aaa
mov
add
lcall
add
or
test
mov
inc
movsl
dec
movsb
es
lds
sub
loope
dec
shrb
inc
cmc
sub
mov
fsubrp
fldl
lods
ds
call
or
jge
aam
les
mov
leave
xchg
addr16
fdivrs
jg
mov
sbb
mov
addr16
movsl
dec
and
mov
test
aad
insl
mov
xchg
pop
pusha
mov
xchg
test
cmpsl
inc
out
jb
sub
add
push
xchg
imulb
xor
xchg
jnp
adc
push
xor
adc
pop
iret
cltd
lret
add
add
xchg
pop
test
cmp
iret
jae
and
push
loop
hlt
popf
jnp
mov
cmp
inc
lods
adc
pop
popa
cmp
sbb
and
scas
xchg
shrb
push
mov
or
leave
mov
mov
in
imul
outsl
inc
sbb
jg
out
xchg
jns
sti
add
int3
cmpsl
add
pop
ds
mov
cmpsb
mov
lds
push
jo
movsb
loope
lods
ljmp
xor
and
cmp
ss
enter
loop
xchg
jge
clc
push
cmp
test
ret
jno
out
jl
cmpsb
mov
popf
popa
push
mov
xchg
lahf
mov
mov
pop
push
mov
mov
dec
in
les
add
push
gs
loope
iret
xchg
sub
rolb
dec
mov
sub
or
outsl
rclb
loop
rcl
mov
sbb
sbb
sbb
xor
mov
mov
jne
movsl
mov
sub
mov
insl
cmp
aas
push
mov
xchg
sub
icebp
mov
adc
xchg
xor
jmp
mov
cmc
mov
adc
and
jb
push
dec
sbb
dec
fsubs
aad
lret
and
mov
push
sub
test
mov
outsl
add
mov
fs
jmp
ss
inc
jne
adc
mov
xorl
mov
cmp
dec
inc
repnz
dec
xchg
mov
shl
cmp
aaa
pop
and
out
imul
and
add
mov
lods
sahf
sub
xlat
or
xor
mov
out
outsb
sti
xchg
pmuludq
imul
nop
scas
xchg
dec
fadds
mov
jne
xor
sbb
ret
mov
sbb
aas
mov
insb
fistpll
adc
adc
cmp
jns
add
aas
jno
pushf
jb
mov
je
ret
insb
jg
sub
cwtl
icebp
scas
jo
mov
call
dec
or
jne
aad
pop
clc
inc
incb
pop
fdiv
rcll
daa
das
popf
out
mov
jg
shrl
cmp
add
fs
fwait
lds
test
mov
add
cld
mov
cmpsl
lret
sbb
mov
lods
shll
pop
es
mov
int
push
rcrb
popf
push
aam
dec
fcmovnb
mov
xor
push
movsb
mov
cmp
xchg
push
cmp
ljmp
sub
rcr
mov
mov
push
inc
daa
aad
add
aaa
cltd
push
inc
inc
test
jle
mov
int3
in
adc
inc
fnstsw
addb
nop
call
pop
arpl
stos
lock
mov
xchg
push
or
sbb
jg
xor
clc
mov
xor
sbb
adc
mov
dec
jb
dec
popf
fs
andb
dec
lds
inc
mov
rorl
xchg
pop
fwait
add
push
add
or
bound
push
jns
pop
aaa
in
or
xchg
and
jmp
hlt
fcompl
mov
push
int
addr16
jp,pn
sahf
out
mov
xchg
mov
sbbb
outsl
jp
fbstp
jmp
je
sub
out
push
mov
adc
push
push
adc
and
test
jnp
mov
popa
in
or
iret
clc
in
ret
rcrb
adc
inc
cmp
push
jae
mov
adc
std
rcrl
sub
dec
fimull
mov
scas
cmp
int3
dec
mov
push
outsb
cmpsl
rolb
mov
xor
jbe
add
push
hlt
push
ds
push
push
inc
stos
out
or
dec
and
mov
add
aas
mov
fimuls
cmp
test
jo
push
cmc
scas
mov
and
sbb
push
pop
mov
jbe
out
jge
dec
fmulp
xor
mov
test
mov
imul
jno
arpl
jl
mov
dec
rol
pop
push
sahf
sub
xor
iret
xchg
push
add
test
xchg
inc
jle
cmp
stos
xor
pop
jbe
outsl
push
mov
loope
out
sub
addr16
sti
cwtl
aaa
ds
je
emms
lods
shlb
lods
cmp
cmpb
jg
sahf
mov
xor
pop
push
jne
out
int3
vmovaps
push
lcall
test
sub
je
outsb
and
push
adc
stos
icebp
sarl
jmp
or
or
jge
dec
movsb
outsl
int
dec
fcomps
push
mul
sahf
pop
lret
xchg
xlat
imul
sbb
sub
xor
adc
in
adc
les
clc
add
adc
dec
ss
push
inc
cmp
xchg
cmpsb
je
arpl
inc
xor
cwtl
xchg
cmp
mov
jbe
fcomip
push
aam
loopne
or
adc
sbb
imul
repnz
ret
push
addr16
test
push
xlat
gs
sub
cltd
cmpsb
in
push
push
aam
inc
pop
pop
decb
jl
nop
mov
inc
dec
test
inc
inc
lahf
mov
and
inc
rcr
jl
mov
sbb
mov
sbb
pop
in
adc
movsb
sub
cmp
cs
pop
call
inc
push
movsb
lret
aas
adc
add
cmp
jle
jecxz
jg
sub
jo
lret
cwtl
lods
rolb
jne
mov
cs
sbbl
das
mov
fwait
imul
and
sub
subl
dec
ja
mov
or
leave
sarl
cs
inc
mov
cmpsl
adc
mov
fsubr
and
loopne
into
lret
mov
mov
xor
mov
in
sub
sub
dec
stos
aam
mov
ret
inc
push
jp
aad
ret
insl
lahf
mov
mov
loope
xchg
popa
js
dec
lods
or
adc
mov
xchg
xlat
push
push
and
push
punpcklbw
add
add
cltd
inc
inc
mov
and
stos
mov
cmp
fstp
mov
xlat
xchg
push
inc
sbb
lods
sarl
xor
pop
push
xchg
mov
fistps
out
push
push
pop
xchg
gs
push
add
enter
adc
xor
or
adc
xor
jmp
mov
dec
mov
dec
add
mov
cmp
iret
ja
jne
dec
mov
gs
or
test
and
inc
add
arpl
iret
bound
std
hlt
jns
push
ret
sbb
xchg
jb
adc
or
inc
or
movsb
jcxz
add
jno
mov
sub
mov
addr16
call
xor
mov
pop
aas
xchg
add
push
jmp
aas
jnp
orl
push
xchg
sbb
and
add
out
xchg
and
lcall
xor
mov
dec
pop
adc
faddl
ret
push
pop
repz
add
push
mov
js
sub
mov
mov
xchg
sbb
and
scas
dec
in
cs
xchg
cmp
cmp
addl
js
inc
hlt
mov
stc
or
sub
pop
sbb
adc
or
cmp
add
into
aas
int3
jge
jecxz
pushf
pop
inc
fsubrp
flds
jo
jl
scas
imul
and
xchg
jo
mov
xor
jbe
adc
enter
daa
subl
cmp
add
jl
lcall
xor
enter
clc
lahf
sti
xlat
repnz
and
test
mov
or
sti
enter
aas
js
subb
sbb
aas
sub
shl
cmp
mov
movsl
push
xchg
inc
rorb
or
or
outsb
sbb
adc
test
xor
cmp
mov
sub
mov
pop
imul
lahf
xchg
push
addr16
mov
jecxz
mov
xlat
mov
je
or
fidivrs
add
mov
or
notb
mov
mov
and
adc
push
dec
lahf
push
int
dec
mov
sbb
mull
rol
outsb
sub
mov
or
sahf
cmc
xchg
test
std
xor
je
loop
add
scas
dec
mov
adc
pusha
stc
cmp
mov
loope
bound
cli
lret
xor
movsb
mov
into
pop
loopne
cmc
sbb
xchg
jo
jae
arpl
adc
test
imul
cmp
or
cwtl
sbb
cli
sub
popf
mov
mov
repnz
mov
mov
nop
fs
inc
dec
pop
adc
sbb
les
pusha
repz
movsl
cmp
pop
fldenv
xor
fsubrs
pop
sbb
notl
pop
jb
pushf
scas
out
jmp
je
cs
sti
jb
mov
pop
push
aas
scas
pushl
jb
xor
dec
mov
dec
je
ret
pop
das
enter
ret
addr16
mov
in
mov
xor
hlt
dec
jae
insl
mov
pop
inc
mov
ljmp
mov
std
inc
mov
xchg
movsb
add
or
xchg
std
jmp
adc
cmpsl
and
mov
scas
mov
sbb
clc
push
rorb
jmp
out
mov
or
or
aas
cmpsl
ds
popf
mov
ret
aam
and
pop
jge
insl
xchg
scas
clc
xchg
or
ljmp
stos
lods
js
bound
lcall
push
sti
pop
push
movswl
mov
xlat
xchg
pop
cltd
jl
lret
pop
mov
lcall
test
jne
xchg
pop
rcll
pushf
insl
stos
into
mov
out
mov
mov
lods
add
sar
jbe
cmp
mov
jns
xor
adc
cs
aam
push
push
mov
es
ja
add
mov
mov
or
pushf
lods
fistpll
xchg
fldl
mov
mulb
jns
jmp
in
jge
xchg
shll
mov
or
mov
jp
clc
cld
mov
in
mov
mov
out
dec
lret
std
aas
jne
mov
or
xchg
aam
fucomi
or
xchg
or
mov
out
mov
xchg
mov
inc
adc
sarl
sbb
jnp
data16
ret
mov
fistl
rolb
ret
bound
or
jae
jb
push
sub
xchg
popf
lock
push
sub
sub
jb
out
or
sbb
loopne
imul
cli
push
fidivs
sarb
mov
lods
mov
out
and
hlt
jmp
cmp
adc
addb
cs
lds
aaa
xchg
or
repz
push
mov
fimuls
cmpsl
sahf
jo
pop
mov
and
sti
movsb
fisubrl
push
mov
mov
jge
pushf
cltd
enter
daa
cmp
cmp
cmpsb
lds
leave
jp
mov
push
cld
xor
add
repz
jb
data16
push
sbb
ds
cmpsb
sbb
jns
addr16
mov
push
outsl
je
lcall
cmp
lods
ds
and
call
scas
add
sbb
add
in
xor
dec
push
sti
pop
xor
nop
cmp
mov
xor
ljmp
push
mov
jo
sub
push
outsb
call
dec
push
and
add
sbb
mov
jg
mov
xchg
lret
push
push
push
push
or
sahf
and
push
arpl
xor
add
ret
mov
sahf
cwtl
fcomps
out
mov
in
sbb
outsl
mov
repz
xor
mov
cmp
mov
pop
out
or
jae
jno
xchg
cmp
xchg
add
into
cmp
or
loopne
loopne
xchg
adc
dec
icebp
adc
xchg
je
loopne
cld
pop
outsb
xor
cmp
and
xlat
jecxz
and
mov
mov
sub
test
gs
movb
aas
pusha
or
cmp
inc
out
push
les
adc
sbb
rcll
imul
jmp
pusha
adc
mov
xchg
pushf
pop
push
dec
jmp
jo
cs
xchg
or
add
dec
inc
xchg
fs
dec
pop
js
add
imul
jecxz
dec
int
xor
cwtl
and
adc
orl
or
pop
loope
add
lock
pop
das
cmp
mov
mov
lds
xchg
pop
fwait
clc
test
mov
nop
mov
das
cmpsl
xorl
icebp
xchg
cld
ss
stos
xlat
mov
dec
mov
outsl
scas
mov
sub
rclb
shll
loop
pop
aam
jle
ret
arpl
and
fistl
mov
xchg
adc
cmp
out
out
cmpsb
popf
stos
lods
jecxz
jae
xor
fs
mov
xchg
nopl
call
test
inc
ret
mov
mov
push
pop
sub
and
xchg
sbb
sbb
inc
sub
pop
fs
stos
mov
xchg
add
daa
call
or
ret
xor
mov
xchg
ret
dec
rorb
xlat
ja
sbb
dec
sahf
shrl
inc
push
sub
or
fimuls
push
push
push
add
sbb
out
adc
xor
bound
sub
adc
xchg
mov
pop
push
andb
loopne
pop
xor
mov
icebp
mov
and
dec
scas
das
out
jne
mov
pop
fists
adc
xchg
cmpsl
add
repnz
xchg
aad
clc
andl
or
fwait
cwtl
jae
jge
mov
adc
stos
inc
aaa
jns
mov
mov
jnp
pop
mov
in
idivl
inc
jg
adc
jmp
pop
popa
sti
mov
jae
rclb
inc
push
popf
pop
pop
int
outsb
int
inc
test
lock
xchg
pop
imul
jno
imul
in
push
and
mov
mov
sub
leave
cbtw
pop
hlt
test
arpl
or
or
xor
aaa
push
inc
dec
or
daa
jl
push
call
mov
xor
jmp
jo
movsl
lret
scas
sub
cmp
cmp
dec
cmp
popa
bound
lahf
xor
jge
fwait
ror
jo
daa
adcl
jno
mov
jl
fisubrs
pop
filds
push
inc
pop
pop
xor
mov
adc
push
jl
xor
call
icebp
leave
cmpsb
pushf
xor
in
pusha
hlt
in
js
fstpt
pop
xor
push
fistl
sub
and
cmp
int
ds
lret
out
and
ds
xor
dec
push
flds
dec
adc
add
jnp
xor
sbb
pop
inc
dec
and
sub
mov
push
adc
mov
sub
or
adc
sti
xor
gs
mov
sub
mov
inc
mov
movsl
pop
and
sub
push
icebp
pop
int
out
fmuls
adc
lret
fcmovnb
pushf
adc
mov
out
jae
es
sahf
cmp
mov
outsl
addl
in
push
addr16
pop
push
idivl
test
dec
cli
xor
cltd
xor
pop
cmp
push
and
pop
xor
cmc
cmpsl
xor
cmpsb
loop
pop
mov
repnz
sti
sti
adc
pusha
pop
add
mov
fstpl
aam
cmp
cmp
rolb
cltd
pop
pop
adc
sti
push
out
testl
fistl
lds
inc
fsubs
iret
fnstcw
les
movsb
repz
jg
sbb
sub
sub
lods
lods
adc
jnp
pushf
add
out
jmp
xor
les
aad
stc
jns
mov
mov
sti
dec
mov
stos
mov
xor
push
xor
mov
dec
mov
mov
fistl
xchg
je
scas
int
lock
repz
mov
imul
and
mov
jne
xadd
std
aaa
xor
dec
and
cmpsl
orb
icebp
pop
je
cld
popa
xor
lret
add
mov
lods
jo
jns
mov
pop
dec
add
shl
cs
aam
loopne
ret
repnz
es
push
cmp
clc
cld
or
mov
popa
mov
pop
adc
loopne
cmp
mov
mov
add
push
add
ljmp
mov
aaa
stc
push
and
sbb
push
push
xchg
cmp
inc
cmpsb
xor
push
stos
lods
es
out
jl
arpl
mov
pop
pushl
lock
push
mov
dec
mov
popa
dec
cmp
ja
xorb
inc
call
hlt
lret
fwait
cmp
sbb
add
je
pxor
add
xchg
jns
or
xchg
pop
inc
call
mov
add
int3
jp
and
mov
enter
inc
jnp
xchg
adc
dec
xchg
push
sub
mov
pushf
pusha
je
cli
fbstp
je
xchg
jp
sub
jne
xchg
mov
cmp
sub
sub
or
mov
loopne
jnp
sbb
mov
dec
fs
adc
ja
ret
push
pop
cwtl
nop
cmp
addr16
jae
push
movsl
push
mov
add
push
sub
ljmp
xlat
push
imul
xor
add
scas
sbb
mov
jl
int3
leave
add
xor
inc
mov
ljmp
or
aaa
adc
lea
scas
cli
mov
out
or
int3
jae,pt
pop
sub
jo
inc
jo
push
out
or
and
lahf
and
push
movsb
lock
push
push
jbe
push
mov
enter
daa
subb
cmp
sub
jl
ds
dec
mov
jbe
sub
shll
cmp
call
test
mov
or
out
cmpsb
pop
jns
in
inc
std
inc
js
in
pop
jb
mov
loope
stos
sub
add
push
jb,pt
mov
sahf
xchg
lods
add
sbb
gs
xor
addr16
adcl
test
push
pop
call
jnp
push
insb
add
fsub
ror
sub
pop
adc
push
xor
add
pop
mov
pop
rorb
xor
mov
push
add
push
int
mov
fmuls
sub
loope
and
or
cld
shll
or
outsl
sahf
ficoms
test
pushf
jo
mov
or
loop
jae
stc
aam
leave
fs
adcb
xor
cmp
jg
sub
pop
std
arpl
or
pop
sbb
or
fidivs
add
outsb
jg
loopne
push
in
rolb
adc
imul
subb
incb
pushaw
inc
adc
and
cmp
inc
xlat
popa
bnd
jno
sub
incb
paddd
cmp
nop
cmc
mov
inc
jmp
aas
fnstenv
vpsllq
push
and
call
out
adc
adc
ret
pushf
scas
fldcw
mov
cs
fwait
es
roll
clc
fdivrs
mov
mov
dec
sbb
add
mov
mov
cmp
pop
cwtl
cwtl
iret
repnz
dec
fwait
mov
sub
xor
push
fcmovnb
notl
daa
mov
cwtl
clc
ljmp
clc
jg
mov
and
and
inc
pop
sar
emms
notb
push
std
fiadds
cmpsl
jg
idivl
xor
mov
test
inc
and
sbb
mov
aas
jle
mov
into
pop
push
shlb
imul
cwtl
xchg
or
sbbl
clc
aaa
bound
xchg
xchg
jmp
sbb
lods
mov
mov
lahf
and
mov
ja
pop
add
orb
dec
sbb
mov
cld
sti
push
jecxz
rcr
fs
cmp
daa
jmp
sbb
call
cmp
inc
stos
fwait
fwait
out
fisttps
jmp
movsb
xor
push
xchg
pop
xor
test
xor
js
mov
pop
aas
mov
mov
jg
ja
int3
push
dec
test
cmp
addl
fisubs
fwait
insb
int3
mov
mov
mov
mov
lcall
pop
xchg
push
jns
lea
in
pushf
jecxz
scas
xor
inc
mov
mov
std
mov
jp
pop
mov
lock
mov
add
sub
movsl
and
jae
fisttps
stos
xchg
dec
or
rcll
and
ljmp
data16
cmpsb
push
add
push
stos
sub
and
movsb
mov
pop
lahf
ret
jle
icebp
push
adc
enter
outsb
ret
inc
pop
iret
leave
xchg
inc
jb
add
sub
je
rcrl
fs
inc
cmpsl
mov
rclb
adc
imul
scas
fcoms
nop
ror
lea
iret
and
push
imul
popf
lret
arpl
sub
or
divb
in
or
adc
pop
pop
lods
or
js
mov
jns
outsb
jo
push
mov
and
fdivrs
jle
mov
jnp
sub
push
je
je
pop
jge
inc
enter
daa
jg
mov
push
mov
lock
jl
jae
dec
std
pop
aaa
push
or
jno
and
jl
lahf
ja
adc
popf
inc
test
jle
mov
cmpsb
mov
ljmp
mov
xchg
push
int
loope
jne
sub
mov
outsl
ds
mov
movsl
xor
jns
adc
sbbb
sbb
mov
aad
inc
add
pop
insl
pushf
sub
mov
xchg
lcall
dec
fmull
jg
outsb
adc
jecxz
and
hlt
idivb
xchg
mov
sbb
mov
call
dec
push
pop
adc
fadds
sub
mov
push
ror
or
pop
lahf
sahf
addl
adc
pushf
loopw
add
mov
int3
fs
daa
adc
inc
ss
out
cmp
jp
out
pop
cmp
xor
push
jge
dec
push
cmpsb
or
dec
cmp
in
shl
fs
loopne
xlat
ss
fucomip
pushf
adc
xor
imul
notl
data16
and
cmp
xchg
sub
iretw
mov
imul
or
cmp
and
shr
add
cmpl
fldl2e
mov
es
fcoml
stc
jno
call
data16
xor
in
adc
jge
jmp
sti
icebp
mov
les
lcall
jb
jbe
dec
nop
and
jne
jnp
cmp
sbbl
lcall
dec
pop
jno
fucomi
xchg
ljmp
mov
lock
adc
xor
mov
shll
rorl
in
notb
mov
pop
cmpsl
jle
fs
or
dec
cld
mov
pop
lret
mov
decl
pop
cmp
pop
pop
xchg
rorb
dec
imul
mov
imul
lahf
pusha
insl
and
pop
clc
jb
sub
and
cmpsb
popa
jmp
in
lods
and
mov
mov
mov
sbb
lods
jl
cmp
lods
cltd
pop
loopne
test
jne
sbb
inc
frstor
mov
mov
shr
push
lods
pop
gs
ret
aam
out
inc
clc
sti
xchg
enter
mov
cmp
xor
idiv
or
in
mov
pop
out
pop
push
lret
pop
loop
bound
insb
cld
dec
ja
push
inc
push
gs
or
pushf
cmp
push
je
add
sub
out
scas
and
fdivrs
mov
in
dec
loope
std
bound
mov
clc
or
fisubrs
jp
sbb
gs
jo
dec
dec
push
jge
jne
mov
or
outsb
inc
inc
xchg
and
jmp
ss
mov
aam
or
and
or
jl
push
mov
inc
cmp
stos
popf
ljmp
pop
cmp
lds
xchg
mul
push
push
adc
in
mov
ret
sbb
cmpsl
xor
lds
inc
push
push
aaa
insl
ljmp
cld
push
inc
xor
xchg
fs
cs
push
lret
leave
adc
cli
and
sarb
pop
mov
lret
lret
pop
sub
inc
mov
push
sbb
clc
push
or
sbb
adc
scas
pop
xchg
stc
lds
push
adc
scas
lcall
xor
xchg
adcl
rcll
mov
daa
jle
or
popf
jg
jno
inc
jecxz
dec
jnp
dec
insb
fidivl
push
lock
jno
pop
lahf
xchg
xchg
test
dec
jg
fsubs
stc
in
adc
mov
pop
lock
sub
mulb
pop
dec
out
cmp
xchg
das
movsl
cmp
rclb
subb
add
xor
int
pop
and
sub
add
lcall
sbb
subl
lcall
insb
data16
orb
inc
mov
mov
pusha
mov
mov
xchg
and
jnp
pop
push
subl
mov
sub
shll
mov
push
sbb
mov
xor
xor
xor
loop
ret
inc
dec
pop
or
xor
sub
imul
leave
int3
lea
int
das
cmp
mov
test
cld
into
enter
cld
lods
out
loopne
jo
pop
ficompl
or
jge
pushf
sarl
sbb
insb
data16
cmp
mov
xchg
sub
mov
aam
jmp
pusha
xchg
iret
pusha
test
pop
or
nop
stos
out
fisttpl
repnz
fldenv
rorl
aas
jbe
push
sub
xchg
sbb
sbb
pushf
cmp
in
js
cwtl
arpl
adc
shr
pop
inc
cs
jae
aad
lods
les
sbb
jb
lret
pop
pop
out
je
int3
shl
adc
ds
clc
lea
adc
outsl
lret
in
and
mov
fistpl
hlt
mov
inc
inc
cld
f2xm1
dec
lods
jmp
mov
inc
mov
nop
adc
rcrl
gs
std
sub
mov
lahf
aam
jge
repnz
loop
lock
loop
cmpsl
lret
and
fnstenv
mov
popa
rcrb
and
mov
add
ret
lahf
sbb
es
sbb
fsts
clc
lods
cmpsb
xchg
bswap
ljmp
loop
popl
mov
dec
and
and
inc
xor
lcall
cltd
mov
cld
mov
push
sub
pop
jmp
movsb
sbb
pop
std
pop
adc
out
movsl
pop
aaa
xchg
btsl
fdivrl
xor
or
add
mov
mov
pop
mov
les
dec
or
mov
jnp
inc
lods
push
or
cs
fwait
lret
push
testb
add
test
out
lea
dec
jns
subl
into
push
adc
leave
rcrb
notb
repz
jp
sub
cmp
mov
add
dec
cmp
jne
outsb
pusha
inc
movsb
cltd
fisttps
out
jmp
add
andl
out
xor
fsubrl
stos
adc
or
call
test
push
jle
das
addr16
add
adc
clc
loop
xchg
push
ffree
lcall
inc
mov
into
jae
lahf
xchg
push
cli
arpl
mov
jno
pop
fbld
movsl
inc
add
icebp
mov
out
sbb
add
imul
scas
sahf
loop
push
inc
dec
lods
rolb
adc
jne
pop
leave
inc
into
fcomip
bound
xchg
arpl
mov
shlb
call
lret
jle
dec
cmp
cmp
int3
decl
inc
pop
mov
cmp
mov
jnp
jo
out
scas
movsl
xor
and
pop
lret
insb
cmp
and
cmpsb
mov
jle
enter
daa
jge
mov
jno
mov
stc
dec
push
rcrl
cmp
or
inc
lahf
mov
inc
push
enter
cmp
inc
arpl
test
dec
in
cld
outsl
jno
dec
jl
pop
das
pop
push
nop
mov
or
lods
test
les
inc
fldt
movsl
inc
popa
movsb
shrb
jl
leave
sbb
cmpb
std
sbb
loop
add
sbb
lret
pop
fstpl
in
sub
mov
pop
gs
lcall
dec
fsub
sbb
sub
aas
outsb
xlat
enter
mov
loope
inc
mov
ficoml
mov
inc
adc
pop
push
push
popa
add
out
jp
imul
xchg
xchg
lret
or
clc
lcall
loop
or
mov
inc
xor
push
loop
mov
stc
stc
data16
fs
pop
mov
je
mov
imul
mov
outsb
out
inc
cmp
xor
xor
ret
or
jns
into
stos
jnp
cmc
ret
pop
jbe
adc
rcll
fnstsw
aas
adc
add
insl
jge
test
cmp
hlt
adc
push
test
xchg
aas
cmovle
paddw
adcl
nop
xchg
sahf
inc
and
sub
pop
cmpsb
ret
jp
repz
mov
inc
xchg
push
call
fs
pop
dec
jecxz
adc
xchg
pushf
mov
imul
int3
xlat
popa
cs
into
addr16
push
inc
inc
push
dec
lods
aas
imul
dec
jle
shlb
jecxz
out
pop
movb
lea
insb
jno
cs
inc
mov
pop
loopne
cmc
jle
fisttpl
jb
adc
cli
inc
lret
rorl
lock
add
inc
pop
jns
xlat
negb
test
rcr
arpl
fimuls
cmpsl
jl
xchg
mov
mov
push
xor
xchg
or
out
mov
mov
lds
int3
sub
mov
ret
jle,pn
es
adc
jg
clc
call
cmpl
push
xchg
outsl
lods
lods
cli
fdivrs
insb
jb
and
sbb
stc
xchg
add
test
jo
dec
mov
loop
push
sub
sbb
test
xor
movsb
add
jae
pushf
mov
stos
push
mov
xchg
push
lods
pop
add
push
pop
pushl
pushf
iret
xor
je
cmp
andb
sub
pop
pop
or
jle
cmp
daa
and
xchg
mov
push
xchg
jbe
stc
ljmp
push
cltd
popf
cmp
loopne
mov
bound
cmpsb
loop
aad
mov
pop
mov
xchg
fwait
xchg
jmp
mov
out
mov
inc
jp
call
stos
mov
dec
ficomps
sbb
adc
rcr
and
xchg
mov
lcall
jns
out
cmp
mov
mov
cmp
and
test
addr16
ljmp
pop
ss
lock
ljmp
dec
stc
inc
xchg
xlat
iret
jae
inc
push
mov
insl
adc
push
lds
loopne
fisubl
push
sbb
mov
imul
add
insl
push
mov
nop
rcrb
xor
enter
mov
cmp
arpl
inc
ret
das
fisttpll
daa
xor
or
add
dec
cld
sbb
ljmp
fisubs
sub
push
add
jp
test
jns
sbb
or
mov
pushf
cld
push
cmp
lock
daa
jl
inc
cmp
movsb
es
pop
mov
dec
dec
stos
mov
xor
cmpsl
xor
push
fcomps
fildll
cmpsb
sub
imul
jecxz
pop
js
popw
outsb
adc
inc
adcb
xor
pop
cmp
xchg
ds
xor
in
rorb
mov
filds
bound
fwait
xor
mov
fwait
sub
fistpl
enter
nop
test
sub
pushf
outsb
cmp
ret
dec
jmp
xorb
mov
mov
mov
push
imul
sub
int
or
fdivs
jl
lret
jmp
push
repnz
rcrl
adc
test
iret
cmp
push
sbb
loop
loope
stc
mov
in
fs
pop
hlt
adc
pop
aas
ss
sbb
cmp
imul
out
or
jnp
jnp
lret
test
xor
into
mov
cmc
mov
loopne
fstl
mov
or
into
adc
add
push
nop
data16
arpl
lods
mov
je
xlat
pop
inc
scas
sub
stos
xchg
stos
cmp
sti
mov
sahf
loop
imul
inc
aaa
nop
neg
sbb
movsb
repz
imul
sahf
das
icebp
sbb
xchg
sub
jecxz
sub
mov
adc
pusha
enter
xor
mov
inc
aad
ret
test
aas
or
mov
dec
cmc
cmpsb
add
jecxz
bsr
inc
loopne
lea
sarl
cwtl
test
stos
mov
pop
add
jae
dec
adcl
add
mov
mov
lock
lahf
das
je
stos
mov
incb
and
mov
shll
sub
pop
sbb
jp
sti
dec
or
xor
pushf
popf
mov
cld
cmp
lret
add
js
cmpsl
inc
clc
mov
mov
pop
in
mov
add
icebp
sub
cld
ret
mov
mov
mov
and
xchg
lea
ds
xor
mov
mov
mov
and
clc
jl
addps
cwtl
cltd
std
push
fwait
test
sbb
mov
daa
fstl
mov
in
and
xchg
sbb
mov
icebp
pop
or
push
pop
jae
imul
xchg
popf
add
adc
xchg
dec
push
cs
mov
or
ss
xor
inc
mov
xchg
mov
pop
adc
ja
arpl
inc
fndisi(8087
jl
cmp
cli
fwait
sub
rolb
cmp
out
dec
repz
cmpsb
imul
in
pop
ret
mov
mov
mov
sbb
jmp
add
dec
pop
sbb
out
mov
jecxz
push
mov
pop
bound
pop
push
pusha
jnp
xor
lret
lcall
leave
mov
jmp
xorl
sub
push
stos
mov
stos
div
mov
push
sbb
pusha
icebp
jnp
dec
add
in
popa
sub
iret
dec
dec
iret
dec
xchg
ret
out
pop
stos
push
add
sahf
adc
pop
daa
mov
subb
push
mov
pop
mov
imul
imul
dec
scas
fs
push
iret
cltd
shlb
sarb
sbb
aad
xor
inc
hlt
clc
mov
es
insl
mov
sbb
fdivl
int
xor
insl
repz
loope
sbb
aad
lea
fiadds
jns
xchg
repnz
jo
lcall
scas
arpl
and
aaa
movsb
cmpsl
pop
jle
fdivrp
test
int
jge
inc
push
enter
daa
jnp
loope
ss
mov
jl
mov
push
cltd
ja
xor
inc
inc
fistpl
outsb
push
out
test
stos
pop
inc
inc
test
in
lret
js
les
lea
mov
lock
or
sub
in
mov
ds
pop
movsl
dec
jno
shl
pop
in
xchg
jno
cltd
and
add
in
xor
push
push
aaa
mov
sub
sub
add
pop
arpl
dec
lcall
push
fdivrl
ret
cli
sub
loop
popf
pop
jo
inc
rorl
jg
dec
jg
nop
imul
stos
pop
pop
and
mov
outsl
and
fdiv
inc
out
negl
xor
es
scas
lcall
adc
outsb
outsl
mov
jp,pt
addr16
lret
mov
adc
daa
ret
add
cmp
callw
pop
pop
jge
bound
xor
push
mov
cld
or
mov
into
jno
mov
push
fisttps
loopne
mov
pop
pop
mov
adc
cltd
ret
push
stos
add
test
pop
lods
movsb
mov
cmp
inc
xlat
pushf
popa
jne
mov
mov
mov
cmp
dec
cltd
sbb
jo
ja
cmp
mov
cmpsl
jl
dec
je
fld
cmp
ret
jae
xchg
popa
dec
sbb
or
pop
ja
mov
pusha
adc
push
out
stos
ret
test
push
pop
jle
repnz
inc
inc
in
aas
cmpsl
push
dec
jb
cld
jecxz
insb
les
je
loope
jecxz
je
movb
lea
mov
mov
ljmp
lods
mov
fldt
mov
cltd
lock
rcrb
push
jl
mov
mov
mov
roll
pop
std
and
push
mov
addr16
inc
cld
arpl
lret
jo
push
mov
sbb
mov
add
mov
xlat
movsl
mov
aam
adc
call
insl
mov
mov
xchg
int3
jge
ljmp
subb
sarb
rclb
push
push
sarl
and
mov
and
outsl
insl
pop
cltd
xor
mov
xchg
adc
push
mov
mov
ds
data16
adc
xchg
shll
adc
dec
out
into
cmp
mov
ljmp
in
cmp
or
or
mov
push
and
push
ja
adc
dec
inc
fwait
jl
jb
sub
faddl
fwait
push
imulb
pop
jle
mov
lea
bound
popa
xor
rcrl
outsl
popa
movsl
xchg
cmp
sub
jmp
insb
or
rolb
xchg
xor
andb
push
stos
sbb
jecxz
lock
lcall
fucomip
adc
xchg
insb
mov
jmp
bound
insb
adcl
sbb
xor
sub
cmp
shrl
sub
out
jnp
mov
ljmp
xchg
fmul
scas
leave
pusha
ret
inc
pop
loop
adc
ja
sub
push
inc
add
popf
sub
mov
inc
and
ret
xchg
sarb
pop
popf
lret
sbb
push
push
sbb
rclb
mov
outsb
inc
jg
cmpsl
mov
hlt
inc
cltd
adc
lahf
inc
inc
leave
pop
adc
popf
mov
daa
or
popl
js
pop
int3
rcrb
pop
inc
dec
ja
cmpsl
pop
add
inc
inc
jo
sub
scas
inc
push
std
and
das
jmp
adc
push
movsb
xor
insb
push
sub
push
and
sbbl
daa
jp
cmp
mov
jl
jecxz
dec
sub
xor
frstor
lahf
adc
inc
add
test
jne
dec
inc
adc
lret
mov
in
mov
popf
js
inc
std
pop
in
mov
push
jnp
loope
mov
sub
lret
shll
ds
cmpsb
sub
push
rol
sub
out
jg
js
add
sarb
inc
add
mov
adc
stos
pop
push
pop
cmp
mov
cmpsl
lcall
jl
out
sub
scas
add
cltd
and
mov
mov
mov
adcl
and
cmp
and
fsubrs
fcompl
lret
adc
mov
push
sbb
cmpsl
sahf
mov
mov
xor
les
cmpsl
lcall
fwait
mulb
out
popa
mov
cmp
popa
jle
out
sub
push
xor
out
cmp
lret
cmp
imull
push
daa
push
loopne
lcall
push
pop
movsb
imul
push
data16
push
lods
mov
sahf
cmp
add
mov
orb
sti
sbb
popa
in
mov
gs
out
pop
mov
add
fscale
testl
repz
mov
push
sbb
mov
loope
test
outsb
rclb
pop
int3
pushf
mov
add
cltd
fbstp
cmp
inc
pop
dec
popa
aas
inc
shll
dec
jecxz
stos
je
in
jecxz
sbb
dec
inc
jge
rcr
or
imul
mov
jno
inc
fsubs
dec
mov
xor
pop
stc
dec
pop
inc
pusha
mov
lock
and
add
in
js
movsb
rcl
int
mul
lcall
add
repz
jns
cmp
add
icebp
ds
cld
mov
inc
lret
lret
mov
cmpsb
mov
or
cmp
and
outsb
shrb
push
aam
pop
les
ret
fildl
es
aad
cltd
jg
xchg
or
jl
pop
lret
pop
ss
lods
cmp
mov
aad
ret
arpl
push
scas
push
loope
push
ds
cltd
imul
mov
sub
sbb
test
pop
iret
xchg
les
jno
sub
mov
mov
xor
xchg
sub
adc
inc
and
loopne
loopne
or
out
xor
and
mov
imul
dec
or
lret
inc
icebp
dec
arpl
or
sub
mov
push
add
icebp
out
out
or
mov
mov
cli
sbb
jns
mov
mov
jnp
mov
fbld
jmp
daa
jnp
scas
pop
sub
cmp
pop
dec
push
pop
jne
or
imulb
aas
or
jmp
sub
xor
mov
xchg
enter
jnp
jnp
fdivrl
and
insb
mov
jle,pt
sbb
in
dec
daa
adc
adc
pop
sbb
jle
cli
mov
outsl
popf
dec
sub
inc
mov
int
xchg
pop
sahf
loop
pop
iret
imul
push
scas
sub
dec
push
pop
rcr
shrb
adc
test
leave
push
inc
sbb
mov
aaa
arpl
inc
gs
pop
loop
aaa
dec
js
or
mov
cvttps2pi
stos
outsl
xchg
pop
jb
mov
dec
xorb
stc
loope
push
mov
and
daa
sarb
sahf
pop
movsb
mov
loope
jbe
les
mov
int3
daa
jns
cmp
push
dec
xchg
and
and
xor
js
push
lahf
xor
test
inc
mov
in
mov
shr
cwtl
sub
js
pop
mov
sub
loope
sub
sub
jnp
cmp
dec
sub
fwait
or
popl
pop
orb
adc
cld
cmp
mov
pop
jns
push
sub
ja
lcall
hlt
fcoml
popf
in
outsb
arpl
add
shll
jg
leave
hlt
mov
int3
stos
mov
jae
mov
pop
stos
int
add
fsubs
xor
sbb
lret
mov
mov
icebp
int3
sahf
push
xchg
pop
test
stos
pusha
outsl
jns
add
stc
aad
loope
shlb
mov
jno
ja
mov
out
cmp
pop
test
out
orl
enter
add
rorb
sar
push
into
aaa
repz
cmc
fcomip
mov
pop
cltd
mov
adc
leave
jb
mov
fcoml
sahf
xchg
add
lods
add
sti
cmp
cmp
imul
sub
adcb
lret
push
pop
decb
insb
popa
gs
sub
mov
fdivs
xor
cwtl
les
dec
dec
xchg
out
push
call
pusha
movsl
lods
pop
pop
pop
and
ret
cmp
lret
jmp
mov
int3
aad
push
into
inc
jp
and
in
mov
dec
pop
jmp
je
ds
and
hlt
dec
and
lea
mov
mov
xchg
in
mov
sbb
mov
fisttpl
push
cmp
icebp
mov
sbb
lock
lret
lcall
and
cmp
mulb
mov
outsl
lds
js
cmpb
pop
push
cld
mov
push
xchg
mov
lods
mov
arpl
mov
inc
pushf
dec
sarb
movaps
dec
ret
push
pop
es
sbb
add
clc
aam
rclb
scas
mov
lods
cmpsb
add
popa
out
mov
loopne
mov
pcmpeqw
into
add
lea
test
mov
push
popf
test
inc
cltd
xchg
push
imul
addr16
stos
and
fsubr
xchg
cwtl
xor
add
dec
ljmp
decb
pop
mov
xor
xchg
mov
les
dec
dec
jno
jge
inc
fsubrp
ja
mov
inc
mov
jae
fwait
mov
mov
and
fwait
cmc
mov
adc
out
call
in
inc
jns
push
shl
test
xchg
xlat
push
out
mov
mov
mov
ficoml
fdivrs
xchg
jp
in
out
imul
mov
or
mov
test
js
pusha
dec
jge
fildll
adc
mov
xchg
clc
hlt
xor
ss
sub
add
push
mov
dec
in
and
movsl
insb
mov
fwait
leave
jle
jns
in
faddl
iret
insb
pop
out
stc
mov
pop
push
dec
add
cmp
leave
jo
push
leave
add
jbe
mov
neg
inc
and
fidivl
push
xchg
outsb
out
sbb
aam
imul
mov
movsb
in
out
rolb
or
adc
popa
leave
xchg
jnp
hlt
arpl
ffreep
or
adc
or
or
cmpsb
cs
int3
xchg
lcall
in
popf
jns
sub
popf
jo
mov
mov
fs
ret
enter
mov
sbb
in
pop
jge
mov
hlt
daa
js
out
cmp
pop
lea
cmp
scas
dec
push
jge
push
inc
fs
adc
ljmp
out
daa
test
or
mov
cmpsb
aaa
or
push
js
pop
ds
push
lcall
repz
faddl
mov
ds
test
jbe
movsb
in
push
sbbb
popf
add
xchg
cltd
bound
sub
adc
std
pusha
xor
fdivrl
popa
sub
nop
outsb
out
adc
out
jb
jg
or
mov
dec
mov
mov
jmp
int3
lea
jo
aaa
int
mov
neg
dec
jne
mov
lods
mov
cmp
sahf
imulb
test
jge
jp
rep
pop
sti
popf
loop
aad
mov
adc
sbb
ss
push
mov
push
data16
cli
sti
mov
xor
sbb
popa
insb
or
push
into
sbb
pop
loopne
test
pop
mov
insl
sub
adc
pusha
inc
add
data16
dec
lods
pop
push
cmp
cmp
xlat
pop
aam
sub
pop
sahf
mov
push
sub
sti
jp
xor
xor
test
jecxz
sbb
cld
inc
sbbl
imul
les
mov
sbb
jle
mov
pop
lret
adc
cwtl
cli
pushf
pop
daa
icebp
jmp
arpl
aas
fiadds
mov
inc
aas
test
xorl
hlt
pop
je
ljmp
push
js
lea
lods
sub
aas
ljmp
mov
sbbb
testb
addr16
pusha
das
lock
mov
ficompl
and
popa
adc
sbbb
push
cmp
cmpsl
ja
mov
in
cltd
sti
cld
in
in
mov
andl
pusha
ja
pop
pusha
popa
or
push
lahf
hlt
sub
sbb
daa
es
mov
insl
jae
js
paddq
ljmp
outsl
lods
adc
mov
sbb
and
add
aam
inc
add
cmp
in
les
xchg
fnsave
mov
xchg
xlat
xor
xlat
popf
cmpsb
rorl
insb
pop
adc
out
divl
aaa
add
decl
outsl
xor
iret
sub
xor
push
imul
fcomps
cmp
dec
sbb
bound
and
out
adc
enter
lock
jg
xchg
ss
push
popa
mov
es
mov
or
or
xlat
fldt
adc
aas
sarb
pop
dec
mov
in
pusha
out
filds
jb
in
loop
movsl
in
xchg
ret
loopne
cmpl
stos
sub
ds
mov
stc
fiaddl
ret
and
inc
insb
or
sarb
cmp
jle
lret
mov
push
adc
jecxz
iret
lret
test
ret
adc
mov
bound
data16
push
mov
aam
cmp
std
inc
lahf
xchg
sahf
fisubl
or
lea
pop
jmp
push
jmp
jmp
mov
addr16
cli
leave
or
loopne
and
sbb
dec
jb
shr
addr16
into
in
aaa
leave
lods
and
cmp
mov
int3
sbbl
lret
lds
and
scas
fisttps
leave
and
mov
cmp
xchg
aad
shll
push
sbb
pop
jbe
mov
enter
daa
ja
sarl
add
mov
jl
in
dec
jne
pushw
and
and
and
fwait
test
push
mov
in
popaw
xchg
js
inc
push
pop
test
mov
xchg
pop
stos
cmp
xchg
mov
movsl
push
rclb
mov
add
aas
sbb
pop
add
mov
pop
scas
cld
pop
xchg
shrb
sti
xchg
pop
pop
push
sbbl
xchg
mov
sub
std
sbb
pop
fsubl
or
cmp
push
es
cld
fimull
xlat
adc
and
xor
push
jae
bswap
or
fcomp
mov
lret
sbb
mov
sbb
inc
and
mov
pop
xor
insl
sub
stos
push
loop
mov
mov
pop
scas
adc
inc
ss
xor
mov
sbb
push
mov
sbb
scas
xor
cmp
push
or
popw
cmc
insl
lcall
xlat
mov
add
mov
jbe
add
cli
cmpsb
lods
inc
jo
cmp
xlat
cwtl
add
mov
sarl
sub
push
mov
nop
test
iret
dec
jnp
dec
inc
xchg
or
fldenv
rclb
insl
xor
arpl
stc
push
sbb
pop
icebp
pop
jge
movsl
adc
xor
lret
mov
aad
push
filds
or
jb
rcll
lret
jecxz
lods
sbb
lea
inc
and
xor
orl
mov
addr16
mov
lock
sbb
das
iret
daa
andl
sbb
pop
rol
inc
jae
lods
std
mov
jnp
cmpsl
jbe
inc
mov
ret
cld
push
cld
divps
sub
or
mov
cmp
sti
pusha
es
jg
cmpsl
shlb
add
dec
aam
enter
insl
cwtl
es
jo
pop
sbb
fstl
mov
inc
imul
push
mov
aas
adc
xor
adc
adc
insb
mov
fcmovne
push
mov
cmp
inc
xchg
sahf
adc
cmpsb
fwait
add
adc
pop
ret
insl
xchg
add
sbb
ljmp
or
divb
jnp
xchg
dec
aas
cmp
pop
mov
stc
lret
dec
psllq
inc
into
cmpl
adc
mov
add
add
sub
cmpsb
inc
bound
or
in
mov
xchg
jne
mov
sahf
cld
repz
sarb
jmp
dec
daa
mov
sbb
inc
mov
or
dec
outsl
cmp
jne
subb
and
mov
iret
jge
mov
jmp
dec
dec
sbb
cmp
ret
sub
jns
adcl
ds
xor
push
mov
ja
sarb
mov
push
in
and
push
jnp
iret
sub
std
ret
jecxz
mov
sbb
push
dec
shr
popf
out
push
push
inc
out
fcmovbe
mov
push
sbb
pop
sbb
test
scas
push
xor
cmp
mov
inc
inc
repnz
xchg
hlt
outsl
dec
xor
inc
aad
js
mov
lds
or
testb
lahf
xchg
int3
insb
insb
xchg
pop
ljmp
fidivs
mov
lds
jb
jo
fwait
scas
mov
dec
push
cmp
pop
movsb
pop
popf
sub
jbe
fwait
sbb
push
add
out
cs
jbe
pop
cmp
sti
fidivrl
jae
in
add
or
aad
mov
mov
inc
push
lret
push
test
mov
and
outsl
in
dec
push
push
js
pop
test
push
loopne
loope
in
les
xchg
lea
cmp
shl
sbb
sub
inc
bound
jnp
lods
stc
mov
cmp
adc
outsb
xor
sbb
out
ficomps
fistpl
shrb
sub
add
outsb
mov
mov
movsb
pop
andb
jg
mov
rorl
and
and
pop
jg
jbe
arpl
jb
mov
notl
sub
mov
cmp
sbb
adc
sahf
cmp
fldl
xor
mov
loop
push
mov
fs
pop
mov
ss
bound
fstpt
mov
mov
cli
popa
cmpsb
les
test
jns
and
xlat
cmc
xor
clc
loopne
add
mov
mov
loop
adc
fists
data16
test
xchg
xchg
dec
xlat
xlat
mov
sub
into
test
sub
jno
fcomps
js
and
push
pop
nop
or
dec
fisubl
xchg
pop
popf
fiaddl
repz
xchg
inc
xchg
xor
pop
call
fnsave
pop
xor
adc
mov
adc
push
idivl
add
add
ret
mov
ret
jb
mov
dec
mov
aas
pop
jecxz
fs
push
jl
lea
cwtl
out
mov
addr16
mov
jb
dec
bound
fistl
mov
inc
jl
pop
lock
push
mov
dec
ds
and
mov
rcll
inc
das
div
jnp
dec
in
mov
into
push
div
lcall
lret
fwait
pop
mov
mov
mov
ficompl
sahf
testl
sub
cmp
xchg
mov
pop
scas
pushf
ljmp
repnz
test
xchg
pop
imulb
ljmp
inc
lods
out
pop
mov
popa
push
in
cmc
mov
push
sbb
leave
setb
add
outsb
sbb
mov
dec
mov
cmp
mov
sbb
push
xlat
sar
repnz
push
dec
std
out
mov
cmp
add
out
xor
test
out
xor
roll
xchg
stos
dec
cmpsb
mov
adc
cmp
imul
hlt
fwait
inc
inc
pop
push
push
xor
add
pop
je
out
test
cmp
inc
pop
jns
clc
mov
es
clc
xchg
les
dec
mov
sbb
lret
push
or
jnp
sub
in
xor
push
ficoms
sbb
mov
xchg
mov
jmp
pop
mov
sbb
or
mov
add
mov
ja
cmp
mov
fcompl
jle
dec
push
in
fstpt
iret
mov
ret
dec
pop
cmc
inc
testb
jae
push
mov
popf
jmp
pushw
es
popf
jnp
fimull
xchg
pop
sbb
fucom
imul
sub
jns
dec
rcr
jge
xchg
push
sub
or
stc
adc
mov
mov
sub
inc
cmp
inc
repz
or
test
add
sahf
int3
push
adc
pop
cs
test
lds
sub
popf
js
and
sbb
push
mov
and
jmp
test
jno
xchg
lea
push
dec
push
and
push
jmp
loop
push
push
and
inc
sbb
pusha
jg
test
insb
cs
filds
add
xor
adc
jle
pop
daa
push
add
gs
mov
cmp
mov
js
xor
pop
push
sbb
shll
xlat
cmp
sbb
inc
and
sbb
xor
test
loop
jb
adc
ret
pop
mov
lcall
loopne
cmp
add
outsb
out
add
adc
aas
aad
jg
out
xchg
mov
std
mov
mov
in
and
inc
popa
push
jns
int
outsl
jle
push
sub
mov
shll
cld
sbb
sbb
shl
xor
push
fsub
popa
mov
stc
mov
mov
adc
jbe
addl
andb
dec
sbb
push
add
cli
xchg
stos
lret
xor
cmp
clc
dec
or
stos
inc
cmc
sti
iret
mov
ljmp
adc
imul
jecxz
add
adc
cmp
push
jns
push
jmp
sub
add
sub
mov
fwait
subb
mov
jp
cmp
inc
mov
push
cmp
in
repz
imul
out
sbb
pop
les
adc
jg
pushf
or
jmp
out
cs
loopne
inc
out
add
jb
dec
ss
inc
jecxz
pusha
sbb
pop
sub
roll
xchg
mov
pop
mov
xorl
mov
pop
sub
xor
mov
inc
das
lea
repnz
das
dec
rcrl
mov
std
or
ret
dec
out
mov
mov
jno
loopne
gs
jb
or
push
mov
out
test
int
push
mov
mov
insb
aad
insl
pop
xchg
aam
sbb
ret
cmpsb
xor
subb
sub
mov
shrb
xchg
inc
int
ljmp
jnp
push
mov
dec
mov
cld
iret
xchg
push
cmc
je
psllw
loope
popf
cltd
jle
xor
stc
orps
adc
test
mov
sbb
mov
mov
adc
ljmp
and
scas
add
shll
sub
xor
dec
xor
mov
add
sub
jp
adc
push
pop
pop
xor
stc
ja
add
add
cld
lock
or
xchg
sbbl
bound
test
ret
mov
bound
mov
xchg
adc
clc
mov
inc
out
aad
mov
lods
xchg
addr16
mov
mov
out
push
mov
cmp
dec
xor
sbb
pusha
mov
inc
xor
mov
adc
push
mov
inc
out
sub
out
pop
push
mov
push
stos
sbb
leave
insb
dec
mov
or
jne
in
clc
sub
int3
out
iret
call
push
jge
sub
push
inc
jmp
push
jae
loopne
push
aad
mov
lods
fsts
fidivrl
push
xchg
lret
sbb
xor
mov
scas
sbb
push
rolb
repz
mov
pusha
ret
mov
hlt
add
push
xchg
iret
cmpsl
or
incl
aaa
push
fdivr
or
rolb
add
mov
mov
fidivrs
push
lds
pop
jo
int3
test
mov
dec
cmp
push
movsb
je
jge
pop
dec
bound
sbb
jge
xchg
mov
daa
je
xor
fwait
push
fbstp
push
push
jl
pop
jecxz
ret
push
into
testl
jg
repz
int3
adc
push
xor
test
aaa
jecxz
inc
outsb
movsb
cmpsb
inc
aaa
ret
in
sbb
sub
pop
pushw
push
dec
outsl
loope
ja
sub
pop
sarl
jmp
popf
ds
xlat
push
shl
cltd
clc
and
sub
int3
sbb
xor
add
mul
xor
stos
jae
movsl
dec
ljmp
mov
inc
lcall
mov
call
ret
and
cmc
ljmp
jae
jg
inc
mov
mov
in
mov
int3
cld
and
mov
push
jl
cmp
fmuls
pop
mov
roll
mov
std
lret
sahf
adcb
dec
repz
out
cltd
outsl
aam
mov
hlt
jge
stc
push
push
pushf
adc
jb
ss
sbb
cmp
inc
es
push
in
loope
fs
xor
push
lea
jle
or
lahf
add
cmpsb
cmp
loopne
mov
pop
xor
sti
adc
adc
dec
or
scas
mov
mov
inc
data16
lods
cmc
fldenv
or
movsl
in
aad
and
add
sti
cmp
mov
mov
dec
lcall
pusha
aas
flds
das
lock
inc
rep
sbb
sbb
push
jns
fndisi(8087
cli
pop
xchg
andb
mov
out
xor
sbb
jecxz
lods
inc
add
aas
add
cli
jb
aaa
loop
lods
xor
stos
jecxz
jecxz
mov
test
pop
jl
mov
inc
dec
mov
mov
dec
cmp
lock
roll
pop
lret
gs
mov
xor
fsub
inc
das
insb
push
pusha
mov
mov
dec
rcl
sbb
jbe
adc
mov
adc
sbb
xor
inc
icebp
dec
std
pop
cld
nop
adc
jns
and
xchg
in
mov
pop
fcompl
jnp
fs
aad
sbb
lock
xor
lahf
mov
jb
clc
sti
insb
dec
xchg
test
in
adc
je
mov
cmp
mov
add
push
rol
in
xor
add
je
cltd
mov
stos
test
mov
int
pop
dec
or
dec
aad
test
push
push
xchg
sub
cmp
stos
mov
stos
iret
into
mov
subl
add
jmp
and
jg
movsb
or
lahf
jnp
pavgw
dec
je
push
ja
push
sbb
out
inc
xchg
pop
orb
data16
mov
test
mov
ret
or
inc
jb
bound
ljmp
mov
movsb
mov
xchg
mov
roll
loope
sbb
cmp
push
mov
dec
jne
jle
pusha
push
dec
jp
ret
fcmovne
xchg
xor
jmp
out
xlat
mov
lds
sub
cmc
mov
stos
mov
dec
and
mov
dec
jnp
imul
xchg
iret
in
jns
adc
or
ret
movsl
pop
arpl
inc
imulb
cwtl
push
cwtl
repz
popf
cmp
jbe
fwait
jo
sti
xor
or
imul
mov
pop
push
jg
push
das
mov
mov
ret
leave
call
shll
cmp
or
mov
dec
mov
add
mov
and
sbb
lods
vmovd
jo
xorb
aas
add
adc
stos
push
push
sti
bnd
xchg
enter
daa
jae
pop
cmp
xchg
nop
jno
xor
jl
jge
dec
xor
inc
xor
sbb
into
push
push
orl
pop
sbb
add
cmpsb
arpl
in
add
js
push
loope
movsl
pop
fwait
push
lcall
pop
idivl
lcall
movsl
xchg
sarb
and
sbb
out
add
and
xor
sarl
gs
or
out
jmp
lcall
das
fcoml
dec
jne
mov
call
xorb
jg
fwait
mov
mov
inc
mov
or
and
gs
push
jg
and
cmpsl
cmp
enter
xchg
call
add
inc
add
sbb
sahf
and
pop
or
outsl
mov
sbb
xchg
stc
pop
test
rcll
mov
cmp
ds
pop
inc
cli
cli
shrl
cmp
xlat
out
or
dec
into
mov
xor
and
jmp
adc
mov
imul
lods
add
iret
popw
imul
cmp
adc
xchg
jecxz
sub
or
in
insl
sti
sub
in
xchg
loope
ss
leave
nop
adc
dec
idivl
xlat
inc
loop
push
fnstcw
hlt
sti
aam
repz
xchg
jns
pusha
sbb
in
std
pop
loopne
pop
dec
movsb
cmc
adc
ja
pushf
pop
shrl
adc
cs
sub
adc
aas
lahf
test
push
and
cli
je
xor
jecxz
and
pop
call
mov
mov
lock
fs
dec
and
and
push
adc
adc
dec
adc
dec
cmpsl
mov
inc
sbb
sbb
mov
fstl
dec
fstpl
xchg
cmpsl
jb
xlat
mov
pop
lock
mov
cmp
push
mov
lcall
sti
jbe
shrb
dec
sub
gs
mov
jge
mov
test
ss
jne
les
sub
aam
popa
lcall
lock
lret
and
stos
es
imul
xchg
add
inc
aam
in
dec
int3
test
jp
mov
ficoms
sahf
xor
jbe
jp
and
inc
xchg
test
dec
pop
imul
xor
out
xchg
xchg
sbb
xchg
add
es
jmp
dec
xor
loop
or
add
xor
add
jb
sbbb
fistl
xor
and
inc
sub
push
or
sbb
iret
outsl
fistpl
negl
mov
out
and
vcvtps2uqq
xchg
test
movl
mov
push
xor
and
adc
mov
mov
cmc
mov
ret
xchg
pop
mov
popf
jne
inc
and
out
dec
insb
jne
xchg
add
fucomip
js
in
mov
sub
add
gs
xor
jno
add
iret
and
mov
and
xchg
jnp
loope
jle
stos
pusha
in
pop
xor
andb
ret
hlt
pop
lcall
jae
das
arpl
pop
out
popf
pusha
pop
lds
ret
sbb
mov
xchg
js
into
sbb
pop
mov
lcall
push
dec
lds
sub
aaa
mov
push
loop
leave
pop
cmp
hlt
fwait
cmp
add
inc
loope
aam
push
push
push
sbb
dec
aaa
test
rorb
lret
sbb
xor
mov
pop
mov
inc
cmp
push
loopne
jo
dec
lea
mov
and
in
scas
jbe
push
push
enter
daa
jb
in
cmp
mov
or
push
push
jne
dec
mov
stc
icebp
xor
mov
negb
sahf
test
int
jae
mov
cmpsb
dec
add
in
jmp
sub
pop
in
fwait
push
xchg
loope
xchg
inc
sub
test
ds
xchg
movsl
lea
stos
rcrb
add
sub
mov
cs
cmpsb
cmp
mov
rcl
sub
inc
pop
mov
jo
bound
pop
fimull
or
fdivrl
cmp
sub
mov
adc
nop
jmp
jg
notb
mov
xor
and
pop
pop
push
sbbb
fadds
cli
mov
shll
mov
loope
sbb
testl
push
and
xor
js
sbb
out
lea
mov
dec
mov
test
out
dec
adc
sub
or
and
into
insb
ss
mov
loopne
scas
mov
adc
mov
je
inc
adc
iret
sub
rclb
into
lods
ret
jmp
jecxz
shll
mulb
fsubrs
sti
xchg
and
adc
push
and
out
sbb
addb
sub
mov
cmc
les
lods
pusha
repz
push
sbb
pusha
jns
fldenv
pop
cld
jnp
adc
or
dec
movsl
cs
cwtl
aad
movsb
lret
js
aas
ds
cwtl
jb
mov
je
fcomps
jecxz
in
icebp
hlt
in
lea
lahf
jno
rcr
in
arpl
pop
mov
aas
sbb
push
addl
adc
outsl
lock
jns
das
sub
shll
and
lods
and
ds
dec
add
idiv
les
fdivrs
sbb
testb
cld
out
or
push
adc
mov
lods
mov
add
cmp
inc
push
jo
push
adc
ret
push
pop
cs
aaa
insl
fnsave
clc
jno
jno
add
ljmp
jne
xchg
jae
mov
in
lret
jne
adc
xchg
push
xchg
sub
sbb
cltd
and
add
mov
mov
pop
fstpl
lcall
or
push
rcrl
adc
sti
stos
lods
cmpsl
out
dec
pop
test
arpl
lock
jbe
incl
mov
or
mov
movb
mov
jecxz
mov
inc
dec
into
bnd
shll
fwait
mov
push
lcall
mov
popa
add
add
dec
bound
jns
adc
xchg
add
mov
mov
mov
bound
push
jbe
inc
xchg
dec
loop
mov
adc
lret
jo
pusha
mov
filds
adc
xchg
xlat
adc
jmp
test
adcl
fwait
out
mov
sub
mov
cmp
and
mov
mov
jnp
sbb
push
mov
in
cmpsl
sub
pop
sahf
xchg
iret
add
lods
lcall
push
cmp
push
push
dec
cmpsb
popf
xchg
push
cltd
jne
ficoml
dec
xchg
iret
rclb
pop
sub
imul
cs
xchg
pushf
add
inc
movsl
popf
mov
pop
mov
ret
hlt
out
cmc
arpl
lret
in
loop
mov
rol
aaa
inc
scas
add
jmp
fiadds
xor
int3
add
xor
aas
add
bound
xor
shrb
cmp
cmp
dec
jp
hlt
and
jge
movsl
push
aad
ret
daa
jno
fdivrs
xor
jg
loop
adc
dec
pcmpgtd
push
ja
mov
push
sub
sub
push
lods
push
jecxz
int
pushf
push
cwtl
push
push
inc
sbb
shll
shlb
js
ffreep
pop
and
push
push
xor
sub
jg
clc
xchg
mov
jg
sub
jae
insl
cmp
xorl
xor
clc
sbbl
and
pop
pop
xor
loop
out
test
fsubr
sar
movsl
movsb
sbb
sbbl
jg
push
and
push
dec
push
mov
jp
and
rcl
jne
out
ds
fdivp
adc
add
scas
jl
push
fwait
hlt
sahf
imul
test
push
mov
notl
xchg
loop
adc
stc
iret
test
cmp
ss
adc
xchg
mov
imul
ret
das
cli
pusha
enter
aas
add
add
outsb
into
dec
mov
test
push
dec
mov
inc
push
adc
lahf
das
es
add
and
fadds
mov
in
movsb
sub
rorl
repz
inc
mov
sti
inc
shl
daa
aad
gs
aam
lret
dec
mov
cmpsb
inc
or
mov
repz
xchg
ljmp
sbbl
pop
imul
adc
rcrb
dec
and
aad
lods
cmp
xchg
pop
aas
fucom
inc
jb
add
je
rclb
jecxz
clc
cwtl
gs
lea
or
and
mov
in
into
adcl
subb
pop
pushw
in
popa
loop
or
lock
pop
mov
rcrl
push
sub
dec
shr
dec
cmpsl
jo
stos
mov
int
mov
adc
push
lret
stos
push
mov
in
jmp
jle
pop
cmp
push
sub
cmp
jge
or
loop
and
mov
jmp
xchg
inc
push
lock
pop
lods
scas
pop
mov
adc
push
popa
sub
insl
loop
add
inc
test
es
mov
fs
push
cmpsb
mov
test
sbb
xchg
data16
mov
pop
pop
mov
push
fsubrp
lods
and
add
fiaddl
daa
out
xor
cwtl
or
cmp
xor
lret
dec
mov
xchg
jo
sbb
lea
dec
sub
push
outsl
inc
pop
jg
or
repz
sub
movsl
sub
and
adc
idivl
inc
jns
xor
in
xchg
xchg
dec
stc
push
mov
cmp
jno
mov
mov
rorb
jp
fs
es
mov
add
dec
rcll
sti
out
and
jnp
and
or
lds
andl
jns
push
lods
adc
mov
mov
out
enter
insb
stc
xchg
fwait
sbb
cmp
scas
adc
scas
jns
fs
enter
in
inc
pop
sub
jae
bound
loope
popf
popf
scas
outsl
and
sti
fldl
ds
fimull
xchg
in
cmp
imul
scas
movsl
adcl
xlat
jge
pop
dec
adc
lods
rolb
xor
arpl
js
inc
out
jg
and
jmp
sbb
or
sub
pop
push
stos
int3
out
shl
sbb
lods
fiadds
out
iret
jo
sbb
push
and
or
movsb
mov
sahf
outsb
jbe
xchg
enter
daa
jo
or
jno
lods
push
jl
loope
dec
jle
mov
pop
lret
inc
xor
jmp
dec
lahf
dec
xchg
push
dec
test
arpl
push
inc
stos
jo
cmpsb
dec
mov
jecxz
dec
sub
pop
divl
cmp
cmp
pop
cmp
fwait
mov
rorb
sub
ss
adc
notb
add
cmpsb
pop
xor
adc
pop
fdivr
out
sub
scas
pop
fcomps
xchg
inc
cmpsb
push
fdivrl
sub
sub
scas
adc
mov
jg
mov
lret
mov
push
out
in
fbld
inc
push
pop
push
mov
int
add
stc
push
out
shrl
lahf
shll
add
inc
add
sahf
push
orb
push
lea
loop
lods
dec
stc
inc
inc
aam
mov
pop
xchg
sar
adc
das
es
out
mov
iret
xor
fcmovb
or
add
cmc
fisubrs
or
adc
rclb
ds
add
loopne
xchg
cmp
leave
cmp
xor
push
mov
sub
mov
mov
decb
lods
gs
cmp
aaa
inc
sbb
insb
les
repz
xor
inc
fsub
call
xlat
repz
bound
adc
jp
pushf
pop
je
jmp
adc
aad
sbb
inc
insl
lret
jl
and
lods
icebp
dec
mov
je
sbb
jecxz
dec
push
push
ja
cwtl
dec
mov
mov
push
enter
pushf
dec
in
je
mov
fistpl
test
lock
pop
inc
das
call
loop
mov
out
push
shr
hlt
shl
adcb
dec
out
orl
push
cmpsl
outsl
clc
jle
add
mov
cld
cmp
lret
xor
mov
int3
mov
pop
sbb
call
imul
movsb
bnd
jno
dec
es
fsubrs
add
mov
ljmp
lret
lods
imul
sub
cmp
pop
bswap
iret
add
icebp
cltd
xchg
iret
addb
pop
push
adc
fucomp
sarl
xchg
xor
pop
ret
pop
sbb
lcall
cltd
adc
pandn
icebp
test
inc
or
mov
xor
sub
addl
imul
xlat
mov
ja
test
dec
mov
js
out
jl
or
sbb
sbbl
sub
popa
mov
push
jne
mov
insb
cwtl
jns
stc
pmulhuw
ficoms
jae
cmp
lods
lods
jmp
dec
cmp
lods
cltd
pop
mov
lea
mov
xchg
aas
dec
movsb
lods
add
pusha
mov
pop
jnp
jge
psubsw
arpl
fisubs
out
jnp
sub
push
xor
icebp
int3
dec
stos
pop
push
popf
and
jmp
gs
ficoml
pop
mov
xor
adc
popa
iret
ret
stos
mov
pop
aas
jge
inc
and
jae
movsl
ja
movsb
jbe
popf
aad
jae
adc
mov
mov
xchg
jge
jge
mov
cli
imul
scas
or
push
and
sarb
mov
call
inc
hlt
jl
sti
arpl
push
inc
ljmp
sbb
and
or
popfw
add
cltd
or
pusha
js
dec
jo
fisubrs
mov
jo
and
scas
xlat
adc
mov
movsb
sub
jg
xchg
pop
push
jbe
les
lret
in
daa
outsl
ja
cmp
sbb
pusha
dec
in
push
xchg
cmp
dec
mov
xchg
adc
push
cli
cld
test
cs
add
cmp
pop
cmpsb
rcrb
sarl
pop
adc
push
movsl
sbb
dec
inc
daa
sub
cmc
lahf
cmp
mov
lds
shrb
push
push
sti
mov
sbb
and
xor
pop
pop
mov
sti
pop
push
or
dec
lea
xor
fdivrl
dec
inc
sub
clc
rcll
loope
inc
jg
and
je
mov
and
nop
push
mov
int
int3
add
mov
outsb
notl
stos
cmp
pop
sbb
sahf
mov
or
xor
mov
fdivr
sti
pop
inc
fs
adc
push
int3
ss
test
mov
sbb
out
cmp
cli
mov
xor
movsb
cmp
orl
adc
rcrb
pop
iret
nop
cmc
adc
xor
std
mov
xor
push
adc
test
xor
cwtl
xlat
nop
add
sub
andl
mov
repnz
insl
mov
les
nop
subb
jae
and
cs
add
pop
ja
les
sub
repz
push
xchg
test
mov
imul
push
add
adc
sbb
jmp
lcall
inc
in
adc
adc
aas
sbb
jb
or
dec
add
mov
jecxz
fcoml
imul
lea
shll
lret
add
lahf
pop
fcmovnu
jbe
pop
cli
lods
and
lock
ds
mov
dec
mov
and
fwait
xchg
sarl
aad
test
dec
std
cmc
addr16
dec
leave
add
outsb
push
test
jnp
ja
addr16
cmp
movsb
daa
or
mov
cmp
mov
ja
mov
mov
lea
ret
add
xchg
es
cmpsl
and
clc
and
xchg
shrb
pop
cmp
lods
aam
mov
mov
es
mov
jp
rorl
enter
or
cmp
jge
fstl
idivl
xchg
hlt
sub
pop
out
pop
adc
adcl
mov
lock
add
inc
jmp
imulb
xor
pop
insl
or
add
mov
mov
pop
xchg
mov
xchg
cmpsl
inc
xchg
into
fwait
mov
add
fisubl
out
sahf
arpl
bound
popa
push
in
pop
jno
in
xchg
iret
mov
out
fstpt
test
arpl
mov
jp
xor
rcrl
std
mov
pusha
mov
jne
dec
add
or
xchg
push
sub
sub
dec
cli
out
sub
push
jg
push
xor
stos
int
cwtl
and
and
hlt
jnp
pop
ret
mov
in
fisubl
adc
or
iret
and
stc
ret
js
jbe
jbe
sub
ficoml
cmp
popf
cld
addr16
push
push
pop
or
outsb
js
xchg
aam
or
cltd
fwait
imul
scas
imul
push
push
or
mov
push
mov
cmp
xchg
hlt
insb
ljmp
iret
sub
popa
xchg
inc
aaa
andb
les
add
push
ja
sub
dec
push
jno
jo
push
jo
ds
scas
mov
cmp
and
into
cmp
test
push
jbe
jne
jge
mov
mov
outsb
cwtl
adc
int
xchg
jno
mov
jl
popf
ss
pop
and
push
and
xor
and
js
xchg
push
and
mov
iret
inc
enter
push
push
inc
in
test
jno
sarb
loopne
xor
insb
sbb
data16
sub
ret
inc
cmp
push
mov
rolb
mov
sbbb
cmp
xor
das
aaa
mov
subl
cmp
push
mov
call
outsb
movsb
mov
rolb
xor
jp
mov
sbb
and
roll
mov
fmulp
stos
jns
fsubrs
sub
dec
imul
mov
sbb
sahf
push
dec
push
test
cmpsb
xor
mov
mov
data16
stc
mov
cmp
adc
and
cmp
and
cmp
test
cmp
add
or
popf
xor
insb
pop
cltd
loopne
lcall
cmp
ja
push
fidivl
adc
incb
add
mov
xchg
fs
lods
pop
mov
loop
iret
sub
xchg
inc
mov
test
sti
push
sub
nop
push
mov
lret
lcall
rcrb
inc
inc
test
xor
repz
add
lret
sbb
dec
arpl
aad
mov
loop
adc
setns
int
daa
cs
and
mov
loopne
jb
lahf
inc
dec
ja
inc
je
mov
jecxz
mov
outsb
lods
xlat
lea
fdivl
mov
addr16
cld
add
push
pop
ret
lret
movb
push
lock
xchg
je
cmpsb
adc
mov
add
cld
or
rorl
mov
xchg
dec
out
and
mov
push
lret
xchg
shrl
lret
adc
mov
dec
mov
outsb
sbb
rorb
push
push
aam
lea
es
shr
insl
jns
inc
clc
pop
sub
lcall
mov
popa
jb
cmc
lods
aas
pop
cmpb
test
sub
inc
sbb
add
push
test
rcll
pop
pop
fnstsw
adc
mov
xchg
aad
xchg
shll
sahf
or
aad
mov
jg
sub
mov
incl
cld
fmull
jne
lock
jmp
mov
in
add
vaddsd
cmp
dec
lcall
or
in
pop
fwait
mov
pop
fildl
xor
cmp
bound
outsb
jecxz
jle
xor
mov
divb
iretw
fisttps
mov
dec
mov
mov
leave
les
jnp
dec
push
add
add
cmc
insl
dec
fistpll
setb
hlt
in
dec
out
xchg
mov
or
xlat
push
adc
shl
test
push
outsl
jno
stos
inc
shr
pop
fstps
jnp
test
add
into
mov
adc
push
dec
adcl
inc
cmp
jl
sub
popf
and
xchg
push
xchg
scas
xchg
fisubl
jp
xchg
sub
sbb
mov
fldt
mov
add
mov
scas
mov
movsl
cmp
leave
mov
das
hlt
adc
xor
gs
or
sbb
push
aas
test
mov
and
jge
cmpsb
mov
fsubrp
mov
jo
insb
shrb
mov
and
pop
fistl
movsb
inc
lds
push
xor
pop
jge
mov
enter
daa
insl
cmp
int3
jno
imul
sub
and
add
xor
mov
enter
insl
pop
test
les
push
lods
push
cmpsb
fdiv
insb
in
insb
fisubrs
pop
pop
mov
push
out
loope
leave
adc
ljmp
mov
sbb
fildll
jne
outsl
add
fs
sbb
xor
ficomps
cli
sbb
dec
repnz
leave
into
lds
push
icebp
adc
push
loope
jg
xchg
and
sub
popf
outsb
pop
aas
adc
adcb
push
jg
cld
mov
mov
sub
mov
dec
shlb
jno
rolb
aad
int
or
fsubrs
ret
shl
jle
shrl
mov
iret
pop
sahf
mull
sbb
arpl
dec
outsl
in
gs
stc
mov
stc
imul
adc
ss
pushw
cmp
and
cli
sub
inc
xor
cmp
push
test
pop
adc
fcmovnu
and
xor
loopne
xchg
or
pop
rclb
pop
add
or
stos
dec
adc
sub
lock
out
adc
or
mov
xchg
shlb
or
rcl
inc
push
inc
adc
les
or
js
mov
sbb
dec
inc
push
stos
lcall
rcll
negb
adcb
aam
sbb
aas
pop
xchg
adc
iret
data16
dec
out
movsb
int3
je
stc
test
aam
imul
or
cli
cwtl
jns
loope
push
fst
mov
xchg
dec
movsl
sub
pop
pop
inc
lock
lret
sahf
das
test
int3
mov
mov
xor
xchg
fcmovbe
xlat
popa
fwait
testb
std
inc
add
push
cmpsl
insb
mov
dec
icebp
sub
addr16
xorb
add
int
pop
mov
pushf
shlb
jmp
and
sub
push
out
es
clc
cwtl
jp
xchg
ds
shr
ss
add
loopne
lods
stos
in
mov
pushf
adc
and
int
les
jmp
jo
cltd
ss
test
outsl
jl
test
and
cmpsl
test
ljmp
mov
rorl
iret
pop
imul
stos
pop
rorl
cmp
fwait
xchg
lock
movsl
xor
jmp
test
sarb
or
pop
pop
xor
dec
scas
mov
xchg
lcall
or
test
dec
lea
rorb
xchg
test
leave
daa
lds
nop
int3
dec
out
pop
adc
bound
fistpll
pop
daa
in
stc
ficoml
cmp
ss
sahf
pushf
lds
xchg
xchg
jp
jnp
mov
popf
xchg
xchg
test
jne
and
pusha
nop
in
fistps
adc
xchg
jl
daa
and
mov
pop
xchg
lcall
aad
push
scas
or
and
inc
insb
movsl
nop
lahf
jnp
mov
jle
cs
adc
pusha
ret
xchg
rcl
inc
enter
jle
push
in
sbb
dec
lock
push
adc
and
aam
call
mov
dec
imul
scas
xor
scas
ror
inc
mov
clc
sbb
xchg
pop
std
push
arpl
inc
rep
dec
or
xlat
dec
cmp
mov
or
inc
mov
pop
aad
sbb
xchg
inc
rol
mov
adc
and
loop
adc
push
push
jg
aas
jbe
xor
jge
cmp
mov
cmpw
inc
jno
dec
stc
jl
stos
push
dec
cmp
push
out
add
push
negl
lret
cmc
fsubrl
cltd
outsl
inc
out
xchg
cmpsb
pop
dec
in
in
push
mov
js
sbb
push
pop
mov
sub
fsts
cmp
pop
ds
movsl
mov
ja
mov
scas
fldl
shlb
add
xchg
rcrl
mov
popa
cmpsl
sub
pop
aam
mov
cmp
faddl
cmpsb
sub
push
outsb
push
nop
adc
xor
jg
jo
mov
push
orb
xlat
cmpsl
and
cmp
int
andb
paddsb
int
jge
push
loopne
sar
mov
inc
adc
adcb
xor
inc
or
mov
pop
stc
and
fs
inc
cltd
adc
sbb
cmp
sbb
out
int
cli
pop
jle
xor
push
fdivrs
ja
or
ror
mov
xchg
shl
pop
xchg
pop
sub
inc
adc
jmp
ds
loop
push
sub
dec
lods
sub
pop
sub
dec
pop
sub
mov
in
pop
cmpb
mov
fsts
dec
nop
dec
jne
xor
pushl
mov
in
adc
fisubs
shr
inc
rolb
roll
pop
cs
popf
adc
int3
fstpl
lret
jecxz
jb
sbb
mov
jb
bound
gs
int3
je
xchg
mov
je
pop
lea
or
frstor
cmp
test
inc
dec
nop
xor
insb
mov
sti
inc
ret
lock
imul
leave
xchg
mov
outsb
pop
mov
shll
push
shl
mov
push
std
ljmp
cmpsl
imul
add
lret
icebp
and
mov
dec
andb
imul
int
sub
pop
aam
stc
ret
lods
iret
stos
es
fnstenv
pop
and
test
jmp
cmpsl
mov
mov
enter
or
cmovs
lret
cltd
insl
js
test
xchg
jg
js
orps
cmpsl
or
xchg
clc
test
dec
sub
sbb
push
vpacksswb
pop
push
hlt
arpl
fwait
push
cmp
sar
mov
fnstenv
xor
cli
iret
mov
xchg
mov
ss
ret
insl
jle
sub
es
inc
dec
fisttpl
or
fwait
sbb
insb
ljmp
jmp
ret
icebp
jmp
inc
pop
jns
jae
in
out
xchg
fiaddl
dec
mov
cltd
adc
addr16
arpl
jns
ret
mov
xchg
mov
xchg
sbb
mov
popf
cmp
movsb
sbb
fistpll
sbb
imul
sbbl
push
in
and
dec
and
in
jnp
mov
call
xchg
fists
jg
jmp
aas
lea
lock
pop
sbb
cmpsl
inc
dec
inc
loopne
dec
movsb
cmp
mov
ficompl
add
mov
xchg
mov
imul
icebp
scas
xchg
movsl
mov
aas
fdivrl
out
push
mov
dec
xor
leave
mov
ret
movsb
arpl
dec
inc
imul
mov
xchg
mov
mov
bound
add
xor
test
pop
add
fcomp
xor
push
lds
add
outsb
and
adc
lret
movsb
push
clc
sub
std
jno
mov
fidivrs
rcll
daa
imul
cmp
sub
dec
mov
dec
test
test
xor
repnz
jecxz
popf
push
sahf
mov
test
pop
or
ficoms
repz
cmp
jno
repnz
popf
orl
stos
sub
and
ds
jbe
movsl
mov
mov
ja
in
xchg
jg
sbb
cmp
xchg
pusha
or
pop
fwait
mov
sub
call
push
push
or
fsubr
dec
pop
sub
adc
int
ficoms
dec
xchg
jg
call
decl
pop
mov
and
pop
jb
mov
mov
out
lret
mov
mov
mov
xor
sub
xor
mov
loop
mov
call
adc
cmp
and
cmp
push
test
out
pop
jo
xchg
mov
xor
pop
inc
cmp
jo
or
lret
mov
dec
jmp
clc
fwait
or
pop
push
adc
dec
or
orb
add
repnz
pop
xchg
mov
sub
pop
aam
adc
dec
in
lds
mov
gs
jne
in
ljmp
jp
movsb
fnstenv
or
les
fs
call
sbb
mov
fs
loope
mov
pushf
mov
cmpsl
jmp
bound
cs
and
inc
hlt
cmc
mov
xchg
mov
dec
fdivrl
fucom
repnz
ja
gs
fldcw
adc
xchg
int3
sbbl
pop
xchg
out
inc
dec
lock
mov
and
pop
mov
jne
cmp
shll
or
xchg
xor
dec
mov
movsl
cmpsl
push
dec
mov
xlat
xchg
idiv
adc
pusha
lret
pusha
push
mov
mov
sbb
pop
repz
push
rolb
mov
in
aas
bound
mov
mov
xchg
mov
adc
lods
xorb
jmp
adc
and
orl
add
jl
test
or
push
loop
repz
dec
lds
out
jle
sarl
fsubrl
out
rol
xchg
push
orl
push
orl
cmp
cmp
adc
test
ja
rorl
jp
inc
loop
lods
or
pop
mov
pop
mov
mov
cmp
sbb
daa
bound
push
jns
insb
xchg
in
sub
mov
ljmp
and
addr16
jp
xchg
hlt
mov
mov
mov
sbb
out
dec
adc
dec
pusha
or
xchg
xchg
pushf
xor
xor
inc
xchg
adc
fsub
pusha
in
sub
cmp
das
stos
cltd
mov
icebp
insb
jnp
bnd
push
push
jle
movsl
xchg
in
xchg
in
pop
mov
iret
sahf
xorps
add
addl
aaa
push
jae
dec
popf
cwtl
or
push
adc
sub
cmp
les
sbb
imul
mov
mull
lret
push
xchg
rolb
xchg
mov
sahf
jl
leave
pop
enter
fnstsw
and
inc
stc
fbstp
lea
xorl
nop
and
int3
jo
push
pop
xor
xor
lds
mov
and
imul
push
cltd
movsb
loop
outsl
push
sbb
ret
gs
inc
enter
daa
push
aam
cltd
jnp
jno
insl
scas
jl
push
pushf
dec
sbb
mov
xor
lea
lahf
add
dec
push
jno
enter
adc
inc
add
aas
cmpsb
popa
pop
scas
in
and
movsb
pop
fadd
dec
push
xchg
pop
loope
lcall
shl
je,pt
jns
lds
xor
jo
xlat
mov
subb
aas
add
xchg
inc
ret
negl
jmp
sub
pop
mov
lcall
neg
xchg
mov
mov
xor
sub
subb
jg
arpl
mov
xchg
xchg
add
inc
and
data16
int
pop
call
testl
cwtl
shrl
pop
sbb
sbb
mov
loope
mov
mov
fs
mov
push
filds
fs
cmp
adc
out
insl
es
lds
cltd
mov
aam
les
push
dec
adc
test
cmc
mov
xchg
les
push
hlt
adc
mov
adc
insl
and
dec
mov
cmpsl
lods
sti
enter
inc
dec
xlat
lret
inc
mov
mov
xor
adc
sbb
add
push
mov
dec
dec
push
cld
inc
lea
add
pop
xor
repz
sub
dec
call
roll
popf
pop
xchg
mov
pushf
popa
ss
mov
xor
test
mov
dec
jb
hlt
or
mov
cwtl
jecxz
mov
cmp
stos
jns
mov
dec
outsl
mov
roll
mov
lret
pop
sub
mov
rorb
jecxz
push
test
mov
fsubl
and
sbb
rol
xor
notb
insl
std
cmp
in
dec
mov
sub
xor
outsb
icebp
scas
int
cld
loop,pt
lret
iret
inc
xchg
pop
dec
sbb
adc
inc
rcr
lods
mov
or
add
or
ret
lret
insb
out
and
insl
adc
jecxz
xchg
sti
adc
ljmp
enter
cmpl
jge
and
pop
and
clts
mov
add
and
test
mov
push
sbb
fst
pop
subl
sbb
sbb
xchg
pop
insb
cltd
mov
out
popa
inc
gs
fucomip
add
jl
std
ret
mov
scas
call
mov
fwait
pop
orl
xchg
pop
cmp
ja
mov
jge
jns
pop
or
jl
fwait
jbe
sbbb
dec
xor
mov
mov
add
or
xchg
js
mov
mov
pop
stos
addr16
xchg
jp
mov
mov
icebp
or
jns
dec
test
jne
jmp
xchg
xor
outsl
pop
add
daa
or
xchg
fnstsw
sub
jecxz
sub
js
cltd
push
imul
stos
or
inc
and
sarb
js
jle
dec
pop
in
incl
iret
std
xchg
pusha
ret
nop
pop
mov
iret
inc
fs
shll
mov
stc
popf
mov
clc
ret
inc
xchg
sub
xchg
xchg
enter
cmp
push
jle
pop
xchg
mov
dec
rcrb
mov
icebp
stc
mov
hlt
ds
inc
arpl
inc
cmp
sbb
mov
rorb
sbbl
int3
pop
jle
pop
bound
fidivrs
xor
adc
jo
out
subl
cmp
dec
movsb
insl
jnp
push
insb
data16
jbe
mov
aam
lods
push
lahf
daa
imul
add
jl
jb
dec
xchg
and
mov
mov
sti
push
inc
lds
test
and
inc
inc
xchg
pop
mov
or
adcb
mov
loope
jge
sub
xor
xchg
dec
in
int3
push
insl
rorb
adc
xor
leave
test
ja
xchg
add
cld
lds
incb
push
addr16
jmp
mov
pop
push
out
outsl
lcall
xor
inc
mov
sbb
cmp
adc
andl
dec
jecxz
mov
adc
mov
cmp
dec
push
popf
sub
int
cmp
fcoms
outsb
scas
testl
imul
mov
jge
sbb
jl
test
sbbb
in
mov
stc
inc
push
shll
ficoml
mov
idiv
cmp
or
mov
dec
add
xor
aas
cmp
fiadds
ret
xchg
mov
addr16
into
cmc
dec
loope
loopne
add
adc
push
imul
sbb
and
lods
loop
sarl
xchg
mov
test
mov
fwait
mov
sti
mov
ds
out
cmp
nop
mov
fcmovb
inc
mov
scas
aad
imul
sbb
push
icebp
bnd
push
sub
adc
ret
pop
pushf
or
es
fidivs
push
sbb
lock
ret
pusha
pop
aas
aad
xchg
jb
mov
dec
lret
je
bound
jge
add
cmpsl
cld
imul
jl
roll
cmp
mov
pop
int3
stos
jp
push
mov
lock
add
mov
xchg
jp
and
xor
notb
stos
std
fucomip
into
dec
stos
xor
cmpsl
push
imul
mov
imul
sbb
jne
les
xor
shrb
int
aam
xchg
fcmovb
pop
and
insl
cld
xchg
push
xchg
cmp
ljmp
sbb
dec
jb
sub
cmp
cmp
pcmpgtw
test
dec
testl
in
jmp
in
xchg
jl
shrl
add
out
stos
adc
push
out
les
popf
add
lret
lcall
rorb
mov
js
mov
pop
xchg
ds
pop
hlt
test
push
dec
pop
ds
or
jb
fwait
movsl
outsl
pop
push
push
ljmp
cld
mov
fsubs
mov
dec
sbb
xor
shrl
mov
in
js
test
hlt
xor
enter
adc
adc
mov
xor
test
cld
xchg
fistps
push
dec
xchg
inc
loop
jmp
test
pop
sbbl
arpl
data16
push
cmp
push
stos
xchg
cmp
jg
adc
lret
cmpsl
mov
jnp
xchg
dec
jle
jmp
in
int3
adc
std
in
iret
pop
and
sub
add
test
lods
sbb
stc
dec
adc
out
icebp
push
adc
mov
xchg
fimuls
test
lock
dec
scas
mov
ret
aaa
addr16
mov
inc
stos
xor
add
push
mov
cwtl
js
inc
lcall
push
or
ret
mov
aaa
cli
cld
push
or
addl
inc
jmp
push
ficomps
lret
or
lock
call
movsb
clc
cmp
push
mov
and
mov
test
test
inc
daa
push
mov
jl
mov
dec
testb
jb
jge
test
repz
inc
xor
jl
xchg
push
mov
mov
cmpsb
addr16
ljmp
shl
push
fldl
sub
idivl
cmp
int3
cmp
mov
not
shlb
in
xchg
xchg
ret
sbb
sbb
loop
int
inc
leave
jle
pop
adc
scas
sub
mov
popa
lcall
xor
in
shrl
negb
pop
sbbb
mov
andl
mov
cmp
and
pushf
int
ds
rorl
sti
test
call
rcrl
mov
pop
jge
mov
xchg
mov
pushf
mov
xor
sbb
outsl
dec
fstps
stc
cld
out
fs
lahf
notl
out
icebp
lahf
ss
mov
out
out
sbb
mov
inc
push
mov
sub
xor
movsl
cmc
push
ret
leave
push
mov
sbb
sbb
push
sbb
xor
mov
addr16
int3
cwtl
sub
rcl
push
xor
in
push
jb
sti
push
bound
gs
mov
inc
dec
or
jae
mov
int3
cmc
inc
les
repz
sbb
cs
cli
xchg
lods
adc
rcrl
outsl
fs
aad
xchg
addb
jae
je
test
push
jp
inc
lods
pcmpeqb
dec
sahf
jecxz
pop
mov
sbbb
push
jnp
cwtl
and
mov
jp
mov
cwtl
and
mov
fldt
in
addr16
outsl
xorl
and
mov
loopne
mov
mov
ds
lcall
dec
cmpsb
xchg
pop
cmpsl
addr16
aam
cwtl
shl
pop
cmpsl
sar
xchg
bound
jp
mov
xchg
mov
mov
push
roll
rolb
push
aam
sub
ret
jmp
push
imull
in
mov
cmpsl
sub
popa
cld
jne
lods
rorl
mov
dec
xor
and
adc
out
pinsrw
add
test
rolb
pop
out
sub
xchg
frstor
pop
subl
pop
or
pop
ret
stos
add
out
daa
or
add
push
cmp
aad
arpl
xchg
or
jo
xor
pop
adc
mov
ss
scas
nop
cmpsb
ja
push
or
scas
jl
cmpsl
jns
or
cmp
fwait
aam
mov
clc
jl
add
push
sub
out
mov
add
pop
sub
in
jmp
mov
lods
leave
mov
test
jp
add
mov
inc
mov
imul
dec
pusha
xchg
popa
test
xchg
adc
je
xchg
jae
inc
subl
sbb
out
lret
push
jmp
ficoml
loop
shrb
outsl
jnp
ja
jle
jl
in
std
arpl
jmp
mov
mov
or
mov
lahf
jae
jecxz
push
mov
fisttpl
in
cltd
jns
jle
ficoml
mov
or
fldl
scas
and
push
pop
and
mov
xchg
nop
lock
jl
hlt
aam
jae
cmpsl
mov
inc
add
or
jle
icebp
aaa
mov
sahf
insb
add
sub
pop
rcl
faddp
inc
scas
lds
mov
into
es
scas
iret
sbb
and
pop
fwait
cmp
dec
stos
push
or
push
jbe
incb
pop
adc
enter
daa
addr16
xchg
xor
jno
mov
jl
movl
push
test
mov
pop
jecxz
lahf
pop
mov
push
ljmp
push
xchg
into
cmpsb
ljmp
js
leave
js
cltd
sahf
outsb
push
nop
data16
mov
sub
nop
or
into
ficomps
or
add
add
sbb
xchg
lock
in
xor
pop
pop
aaa
jmp
sub
dec
push
or
jmp
fcoml
push
in
pop
repz
adc
mov
out
and
or
rorl
xchg
and
subl
mov
dec
testl
xor
mov
sahf
leave
mov
repnz
leave
mov
imul
stc
mov
jns
xchg
push
cmp
add
out
mov
popa
xor
out
add
push
popf
adc
mov
inc
aam
fldl
and
fs
pop
popa
adcl
jae
imul
jb
add
cwtl
mov
sub
shrb
jo
xlat
mov
sbb
lods
popa
add
jno
xor
sbb
out
incb
fwait
dec
nop
pop
stos
jb
imul
inc
in
cmp
adc
rol
xchg
ljmp
pop
xor
test
push
cvtps2pd
sbb
jmp
push
shlb
pop
inc
pusha
sbb
jb
push
mov
je
or
inc
lea
xor
cwtl
pop
push
mov
arpl
daa
mov
fistl
cs
adc
inc
gs
imull
mov
mov
jns
leave
push
daa
shll
fdivs
sub
mov
data16
icebp
xor
cld
mov
mov
out
mov
aaa
add
outsl
fsubrl
sub
lods
dec
aam
adc
fs
stos
cmpsl
insl
lret
clc
cli
jg
xchg
mov
or
cmp
sub
in
mov
outsb
jns
and
out
loopne
mov
clc
add
ljmp
bound
fnstenv
out
sti
pop
fisttpll
mov
xchg
dec
jo
push
xor
pop
insl
push
stos
repnz
out
mov
xchg
jo
rolb
inc
cvttps2pi
fcmovbe
aaa
xor
data16
pop
andb
sub
dec
scas
adc
push
ja
adc
addl
lret
fiaddl
push
fwait
add
mov
loopne
out
xchg
and
mov
or
in
jl
xchg
gs
mov
loopne
mov
sbbb
addr16
sbb
cmp
mov
fadds
dec
lahf
mov
hlt
pusha
xor
fists
xchg
xchg
call
lahf
cmp
dec
stos
out
sti
inc
sub
sub
mov
and
aam
daa
testl
call
mov
sbb
ret
fistpl
xchg
inc
test
ja
jg
dec
popf
xor
jle
addr16
outsl
pop
fiaddl
ss
xchg
mov
add
push
imul
cwtl
scas
sbbl
shrb
mov
ljmp
hlt
pop
xor
mov
mov
add
test
cmp
aaa
js
adc
pop
das
jecxz
inc
imul
pop
out
das
mov
lds
loope
scas
scas
mulps
mov
inc
adc
push
mov
push
pop
add
decl
jge
pop
out
sahf
fiadds
data16
gs
jno
imul
aam
outsl
push
cmp
xor
stc
xchg
outsl
lahf
jle
jo
mov
imul
sub
inc
inc
cs
cmpsb
insl
loop
in
mov
fcomi
pop
fsubr
hlt
push
clc
mov
push
jmp
cmp
or
add
xlat
rcr
xchg
or
push
out
xor
push
add
push
xchg
imul
dec
or
sub
xor
lcall
cmp
inc
xor
sub
shr
outsb
mov
cmp
push
jg
jp
mov
call
sub
test
push
cmpsb
sub
int
hlt
jnp
inc
add
inc
pop
or
mov
loope
negl
xlat
sahf
insb
mov
loopne
pop
outsl
push
mov
adc
push
test
adc
out
cmp
std
popf
adc
inc
fnsave
xor
stos
stos
cmp
mov
repz
adc
shl
ljmp
je
out
mov
rol
shrl
shlb
adc
sbb
add
lods
xchg
sbb
cmp
sbb
xbegin
insl
mov
fsubl
sti
enter
test
add
jecxz
nop
xor
inc
fsts
mov
repz
cld
sub
and
jns
int
out
pusha
jo
adc
negb
inc
cs
fcmovne
inc
jnp
cwtl
aas
mov
sub
mov
dec
das
sub
je
and
cmp
fcoml
fsubl
inc
cwtl
xchg
test
mov
mov
push
orl
mov
fildl
or
lock
test
das
sahf
dec
add
adcl
mov
push
imul
and
aam
xor
push
cmpsb
cmpsl
gs
mov
or
mov
ljmp
mov
lds
jbe
inc
mov
mov
and
fcompl
xchg
rcl
ss
into
ret
pop
xlat
sbb
das
jbe
insl
mov
adc
xor
dec
ss
in
lods
xchg
in
mov
xchg
mov
and
lret
jb
pop
sbbb
dec
xor
mov
sbb
jno
jb
arpl
call
sbb
adc
pushf
clc
pop
sbb
leave
stos
loope
dec
out
in
pushf
mov
mov
add
aaa
jns
mov
or
add
addb
shll
sbb
dec
xor
sub
ja
push
jle,pt
add
or
js
bound
pop
jns
in
in
xchg
mov
sbb
sahf
mov
jnp
es
jp
and
out
mov
inc
mov
dec
sbbb
int
nop
fbstp
test
jmp
or
push
out
mov
cmp
push
addr16
fadds
sbb
je
and
imul
mov
adc
xlat
outsb
ret
cmp
jne
inc
nop
sti
lret
sbb
push
inc
jbe
popf
pop
push
jecxz
fidivrl
cld
inc
sbb
cwtl
lock
enter
aad
mov
inc
repnz
push
xor
push
test
lds
inc
or
or
hlt
adc
aaa
aaa
pop
xor
dec
je
add
pop
pusha
int3
pop
and
pop
push
push
stc
fiadds
ret
or
das
xor
lea
dec
and
fdivrs
adc
mov
cltd
jno
push
test
xchg
jbe
adc
das
enter
daa
gs
imul
testb
subb
inc
stos
repnz
sbb
xor
xchg
pop
xchg
lahf
popf
roll
test
sbb
lods
inc
iret
push
jnp
lock
movsb
xchg
sarl
pop
pop
pop
lds
xchg
adc
sub
aas
sahf
cmp
xor
and
movsl
call
add
mov
mov
pop
into
cmp
push
pop
iret
add
sbb
xor
in
adc
pop
test
sub
sub
insb
push
cltd
fbld
fsubr
test
jbe
pop
jp
adc
out
push
xchg
jg
or
mov
pusha
mov
fwait
loope
sbb
adc
test
cmpsb
xchg
fadds
pop
movsb
testl
stc
dec
shll
push
mov
hlt
mov
dec
stc
lret
sahf
seta
xor
push
shrb
mov
loop
lods
nop
stc
and
fs
push
or
fmull
loop
mov
sarb
clc
push
in
out
xor
les
adc
stos
jne
jg
xchg
into
repz
cmc
imul
add
inc
mov
pushl
adc
sbb
adc
xor
push
cmp
outsl
cwtl
sub
jl
in
inc
cltd
stos
sti
ja
jno
lret
push
jnp
or
mov
inc
in
jno
flds
jae
repz
xchg
and
xlat
call
dec
out
push
pop
adc
popl
pushf
mov
push
daa
cs
aaa
fcmovbe
or
cs
xchg
and
aas
push
cmpsb
mov
dec
cmpsb
pusha
xor
pop
jecxz
inc
or
mov
fwait
lea
push
cwtl
push
cmpsb
push
mov
mov
xchg
andl
sub
pop
pop
mov
mov
xor
das
jge
je
push
mov
mov
rcl
xor
mulb
jecxz
jnp
scas
dec
xchg
xor
popf
mov
loope
adc
xchg
mov
pop
adc
lods
cli
push
sar
jmp
lret
out
ret
xchg
fwait
pop
es
loopne
cwtl
push
mov
jo
in
xchg
ss
stos
ljmp
rep
add
movsb
mov
mov
push
and
movsl
ret
loope
add
or
cltd
out
or
test
shlb
je
clc
fstpl
inc
bound
and
and
les
clc
pop
ret
mov
stos
rcrb
out
push
aam
xchg
xchg
movsb
add
and
xor
or
cmpsb
mov
stos
push
pop
dec
jge
das
pop
loopne
jle
mov
xchg
inc
insb
stos
or
pop
xchg
jl
popa
lods
and
loope
gs
push
jb
fisttpl
push
jns
mov
in
popf
aaa
xchg
add
and
jbe
frstor
addr16
jp
in
aaa
dec
inc
mov
mov
cmp
jb
jne
sub
push
xchg
xchg
mov
sub
das
xor
jb
mov
mov
cmpsb
pop
sub
dec
mov
or
jnp
mov
jle
out
in
jmp
or
fdivs
ret
pop
pop
pushf
cli
jl
fwait
sarb
cmc
sbb
push
add
mov
push
or
insb
sub
mov
push
cs
imul
push
xor
jecxz
mov
mov
repnz
js
leave
loope
sub
mov
jle
aam
cld
inc
or
aam
neg
sub
scas
pop
dec
aaa
testb
add
mov
pop
dec
cmp
test
sbb
fists
mov
loopne
ret
xchg
popa
movsb
and
jg
notl
sub
jge
loopne
enter
daa
fs
lret
mov
gs
sti
js
mov
adc
inc
mov
mov
cmp
mov
test
test
out
cmp
pop
mov
cmpsb
jae
je
mov
pop
pop
push
push
fldt
jecxz
loope
or
sub
push
leave
cmp
scas
ds
sbb
out
ja
rclb
sbb
sbb
and
mov
divl
or
aam
aad
bound
ljmp
int3
xchg
push
lock
enter
subb
orb
cwtl
jg
popf
or
pop
or
mov
loope
and
ret
lods
les
mov
fdivrs
push
loope
sahf
pop
cmpsl
shll
xlat
sbb
mov
mov
cmp
or
and
inc
stc
fcomps
jmp
sub
negb
push
cltd
or
out
lods
mov
xor
jo
or
jbe
into
fcoms
xor
bound
push
adc
inc
imul
insb
xor
mov
push
lods
sbb
inc
imul
in
mov
dec
sti
es
jne
out
cmp
nop
jmp
shlb
incl
cmp
mov
loopne
mov
ja
xchg
out
nop
sbb
sbb
pop
sbb
adc
sub
cli
inc
cs
gs
aad
mov
inc
mov
cltd
aas
lock
jb
mov
dec
sbb
dec
and
mov
or
stos
pop
out
or
js
aad
enter
pop
cmpl
je
pop
sti
pop
testb
xchg
mov
das
pop
inc
dec
mov
lea
and
mov
mulb
pop
insb
dec
xchg
call
mov
icebp
mov
push
xchg
lret
imul
mov
test
dec
pop
int3
movaps
int3
sub
aam
int
ret
and
addr16
insl
jg
lahf
clc
stos
push
sahf
xchg
jne
add
inc
out
mov
lods
insl
pcmpgtb
xlat
or
push
adcb
inc
sub
add
cwtl
cltd
and
xorl
pop
loope
aaa
add
fsubrs
or
jl
sbb
xor
mov
mov
call
xchg
inc
dec
mov
pushl
imul
mov
mov
xchg
sti
std
pop
fwait
repz
ja
sub
testl
lods
sbb
nop
movsl
ficomps
test
add
ret
js
out
xor
bound
adc
mov
shl
in
sub
mov
xor
testb
movsb
sbb
push
dec
jp
sbb
mov
fs
jmp
mov
cmp
jne
lret
out
add
xchg
popa
in
jmp
lahf
xor
sub
add
cmc
dec
cs
push
push
in
aaa
stos
mov
cli
and
pusha
jnp
cmpsb
lock
dec
inc
in
stos
mov
iret
aaa
adc
mov
pop
shll
mov
cmpsb
jae
bound
enter
test
lret
push
inc
mov
ficompl
aaa
rclb
xchg
sub
popf
out
scas
lods
cmp
push
ja
xchg
sarb
shl
sub
lret
data16
jp
inc
push
cs
sbb
shll
mov
movsl
or
loope
int3
pop
jl
mov
lds
mov
dec
add
jae
leave
cmp
in
push
inc
add
jbe
sti
jge
xchg
inc
enter
daa
arpl
jb
cmp
pop
push
jl
pop
ss
and
mov
xor
lret
lahf
lods
push
ss
test
mov
jae
in
popa
adc
in
jb
xor
mov
push
data16
shrb
lret
shll
movsl
notb
xchg
insl
and
outsl
cmp
subb
mov
or
ret
rorl
pop
lods
sub
fs
lcall
sti
faddl
add
mov
in
outsb
in
push
adc
and
xor
pop
mov
and
mov
xor
pop
mov
push
scas
aas
popf
int
mov
fdivrs
inc
testl
pop
mov
jmp
sahf
push
pop
pop
test
loop
xor
cmp
loop
hlt
arpl
popa
hlt
fs
aaa
adc
jl
cmp
icebp
cmp
out
xchg
inc
pop
sti
cli
sub
xor
call
or
aam
mov
add
loopne
adc
inc
stos
adcb
fildll
adc
adc
add
out
xchg
data16
mov
pop
cmp
les
sub
pop
mov
sbb
test
adc
jp
les
popl
mov
out
cmc
out
les
filds
test
sahf
cs
dec
call
cmpsl
adc
pushf
push
jmp
mov
cs
mov
inc
int3
jle
aas
push
pop
jb
pop
pop
dec
xchg
mov
je
fcomps
push
add
adc
cwtl
pop
dec
mov
cld
push
mov
push
roll
shll
sbb
stc
mov
adc
xchg
cmp
mov
fnstsw
cmc
xchg
out
shr
adc
jmp
xchg
dec
lea
fwait
cmpsl
bound
sbb
cmp
cmp
fsubs
shrb
or
jmp
cwtl
rcrb
sbb
aam
or
mov
sbb
mov
clc
out
jno
mov
daa
ljmp
mov
mov
cli
and
push
pop
hlt
movsb
setg
add
not
cltd
pop
scas
jno
mov
xchg
push
cli
lcall
aam
lods
xchg
push
shll
sbb
subl
pop
insl
xchg
mov
add
and
add
or
stc
bound
mov
lahf
dec
dec
addr16
pop
push
mov
mov
or
inc
lcall
fwait
mov
cmpsb
das
add
push
jle
out
adc
bound
xchg
jns
inc
dec
in
push
cld
xchg
mov
cmp
mov
insb
push
xchg
ret
inc
jp
pop
mov
mov
xchg
scas
jnp
sub
out
jne
roll
aaa
out
xor
push
jmp
push
cmc
cmpl
out
push
jecxz
rorb
push
and
rsm
xor
and
lret
and
jnp
pop
xor
sahf
and
iret
out
adc
shrb
mov
ret
mov
inc
mov
inc
jae
in
fwait
push
mov
test
dec
jg
or
fcmovbe
hlt
bound
fs
imul
mov
mov
shll
ss
movsl
leave
iret
push
xchg
dec
adcb
repnz
inc
adc
out
or
and
gs
sub
add
into
sbb
push
push
fsubrp
and
les
inc
jo
xchg
je
sub
cltd
and
lea
cmp
jb
movsb
cmp
jbe
sbb
repz
daa
bound
xor
jno
movsb
jge
add
loope
les
xor
gs
movsb
push
or
test
jge
add
push
mov
jns
mov
pop
sub
js
in
out
pop
aam
and
popf
loope,pn
mov
push
cmp
mov
mov
rorb
inc
into
pop
incb
clc
jge
add
addr16
cmpsl
jmp
leave
pop
cli
mov
sub
dec
push
pop
lret
lcall
ret
fsubr
add
mov
adc
inc
in
lea
rol
mov
mov
fsts
sub
push
in
stos
push
mov
test
adc
fdivs
fnclex
testl
aas
shl
iret
mov
or
sahf
clc
sub
test
in
xor
outsl
xorb
inc
int3
mov
adc
mov
ss
cwtl
cmp
jmp
lea
xor
aaa
cmp
ja
or
stc
dec
into
pushf
push
jbe
sarb
loopne
pop
bound
dec
adc
cld
es
or
add
xor
pop
fsubrl
xor
ret
jmp
dec
mov
mov
sti
test
mov
xor
lods
gs
out
nop
lahf
fcmovnb
dec
inc
add
or
and
mov
xchg
xchg
insb
test
call
leave
stos
push
adc
data16
fldcw
rcrl
inc
out
idivb
xor
or
loope
icebp
mov
pop
xchg
push
arpl
adcb
mov
outsl
and
and
and
mov
push
jns
inc
xchg
lock
pop
js
sbb
mov
xchg
adc
and
notl
sarl
hlt
std
jo
arpl
or
lret
icebp
xchg
call
lret
inc
jns
mov
call
inc
pop
or
shlb
mov
ret
aam
xchg
inc
cmpl
dec
ret
and
or
popa
xchg
lods
inc
mov
mov
adcl
paddd
add
sbb
xchg
jbe
test
nop
mov
movsb
xor
or
adc
xchg
enter
sbb
ror
mov
pop
les
stos
popf
push
push
jns
lahf
xchg
shl
stc
add
pop
and
cmc
aas
dec
xor
dec
or
adc
xor
repz
mov
mov
daa
dec
mov
xchg
pop
adc
rorb
adc
xor
daa
or
pop
sbb
lret
add
jns
mov
bound
inc
in
inc
mov
lock
mov
addr16
fldenv
mov
jp
fisubrl
mov
add
fwait
jne
cmp
pusha
cmp
outsl
xchg
pop
push
push
jmp
xor
or
sti
enter
cmp
push
arpl
and
insb
ds
out
jle
out
in
pop
cmp
or
pop
mov
pop
inc
bound
inc
mov
mov
push
testl
mov
test
xchg
aas
ss
sbb
out
imul
scas
jb
gs
add
xchg
mov
mov
leave
inc
inc
into
hlt
xchg
mov
arpl
mov
je
sub
pop
sbb
stos
sbb
xor
inc
or
nop
repz
cmp
mov
dec
pop
fiaddl
jb
dec
cs
lock
scas
or
mulb
cltd
gs
push
inc
movsb
lds
and
mov
jge
mov
enter
daa
popa
xor
cmp
jno
or
rorl
in
jae
cmpsl
jbe
xor
add
lahf
sbb
sbb
fdivl
test
dec
jle
inc
or
sbb
inc
rcrl
mov
inc
in
popa
mov
sub
lea
ds
iret
pop
movsl
add
fnop
and
adcb
sbb
cwtl
adc
jge
xor
jmp
push
aad
pop
and
or
pop
dec
stos
mov
cmc
cmp
fcompl
mov
outsb
stos
testl
pop
pop
loope
inc
jo
mov
mov
mov
xor
cmp
and
xchg
mov
fsubr
andl
ja
faddp
jl
iret
mov
out
sahf
fwait
icebp
adc
xor
mov
pushf
stc
std
fcmove
fs
sbb
mov
in
inc
inc
xchg
cli
nop
mov
pop
cmp
mov
icebp
into
jg
movsl
cmc
xchg
and
mov
pop
andl
imul
pop
cmpsb
add
shlb
nop
test
cmp
movsl
xlat
add
sub
mov
in
repz
enter
hlt
gs
nop
jp
lea
lods
fiadds
ljmp
shll
repz
jp
xchg
das
fmuls
sbb
mov
dec
icebp
sbbl
test
pushf
fs
xor
aad
bound
add
and
int
pushf
jb
xchg
mov
je
cmc
mov
xchg
adc
ret
gs
adc
mov
mov
dec
test
in
pop
in
dec
inc
fcomip
popf
xchg
mov
dec
dec
mov
rorl
call
jge
cmpl
pusha
lods
push
mov
cmp
cmp
mov
sahf
outsb
mov
sub
rolb
sub
jp
ret
rclb
es
pop
pusha
clc
pop
push
aas
xchg
xor
movsb
ljmp
push
lods
scas
add
mov
and
adc
minps
sahf
cltd
lret
test
mov
andb
fnsave
lock
shrl
sbb
xchg
fcmovbe
and
scas
pop
outsl
jg
stos
mov
xchg
sbb
xor
jmp
popa
out
test
je
addb
outsl
inc
cmp
mov
xor
sbb
inc
pop
int3
getsec
ja
call
call
or
repnz
insl
das
insl
add
aam
cs
rolb
es
pop
cmp
iret
test
pusha
sahf
xor
bound
shrb
jp
dec
addr16
adcl
insb
call
jl
icebp
push
fdivs
or
fists
clc
in
xchg
fimull
addr16
add
icebp
out
mov
sub
mov
mov
clc
and
sub
sbb
imul
iret
push
add
ret
je
js
inc
inc
sbb
jae
int3
arpl
adc
push
repnz
push
or
enter
xchg
xchg
xchg
fidivs
push
imul
jo
mov
leave
mov
lock
arpl
jns
inc
pop
inc
mov
fwait
inc
inc
aaa
repnz
aad
push
pop
mov
int3
sahf
adc
fidivs
cmpsl
shlb
es
call
jb
cmp
pop
aad
xor
jbe
mov
ret
enter
daa
pusha
mov
xchg
icebp
inc
jno
lcall
outsb
cmpsl
popa
push
mov
fsubs
fwait
jo
lahf
cmp
add
scas
sub
push
adc
inc
cmpsb
jg
cmp
daa
pop
imul
stos
dec
push
sub
int
sub
repnz
cmp
dec
loope
or
dec
sar
decb
and
push
out
add
out
xor
pop
loope
push
pop
dec
sub
int3
cltd
pop
enter
lds
sqrtps
faddl
sub
repz
jbe
scas
jg
adc
push
adc
mov
ss
mov
pop
and
jnp
mov
jns
fsubrs
gs
lret
cmc
rcll
leave
mov
out
sbb
stos
adc
add
pop
loop
in
stc
mov
andb
adc
lret
add
cmp
fbld
sar
ret
test
call
lret
int
or
mov
pop
loopne
cmpsb
dec
pop
mov
sar
imul
sti
incl
fidivrs
data16
cmp
jp
sub
je
mov
pop
adc
jp
cmpsb
gs
jnp
dec
add
mov
dec
dec
xchg
fsts
out
repz
scas
add
sbb
push
out
stos
mov
loop
adc
aad
bsf
fbstp
xchg
inc
inc
sbb
cmc
cmpsb
jb
add
je
adcl
cwtl
dec
cwtl
lea
xchg
cwtl
clc
inc
mov
shl
dec
mov
and
cltd
sti
repnz
xchg
add
and
inc
push
sub
ret
mov
mov
add
and
mov
rcr
fldcw
mov
push
std
mov
jl
cmpsl
pop
enter
ret
mov
adc
mov
in
adc
and
es
mov
dec
mov
rcrb
cmp
sub
mov
ret
popa
outsb
add
inc
mov
sar
sub
ljmp
pop
lods
sbb
mov
arpl
movsl
and
in
push
int3
bsf
pop
add
mov
scas
fstpt
sub
add
adc
fstpl
cld
test
sub
xchg
fwait
inc
sbb
adc
pop
sbb
out
aas
xor
mov
add
sub
xor
sti
or
adc
mov
mov
add
ja
test
inc
pop
jbe
or
pop
mov
push
adc
add
das
push
lock
scas
sub
inc
vmwrite
scas
sub
mov
cli
mov
idivl
pop
int3
call
jp
insb
push
mov
sub
xchg
fisttpl
fmull
jmp
jne
ds
outsl
push
lahf
fildll
fimuls
lods
daa
xchg
jmp
lret
imul
add
sub
gs
push
loope
shrl
sub
jnp
adc
in
xchg
out
adc
scas
push
iret
mov
fadd
aam
dec
pop
scas
xor
inc
rolb
fstl
aam
add
les
inc
gs
in
stos
jns
gs
imul
scas
cmp
push
xchg
mov
mov
das
or
leave
xor
shl
cmpsl
jg
pop
stos
mov
or
push
outsl
cli
aaa
mov
test
add
sub
gs
int3
mov
mov
xor
adc
lds
pop
jo
sub
scas
and
and
movsb
fstpt
jo
aam
mov
pop
push
dec
daa
pop
addr16
cmp
inc
stc
jno
dec
pop
jl
cmp
dec
frstor
repz
ss
lahf
push
orb
push
out
sub
addr16
fsubrp
mov
cmpsb
add
and
push
mov
xor
cwtl
dec
push
jl
loope
sbb
dec
sub
cmp
mov
movsl
adc
rcr
dec
lods
jmp
inc
cmpb
sbb
movsl
dec
xor
mov
pop
outsl
adc
sub
add
push
mov
aad
sub
xchg
outsb
jno
mov
adcb
lds
mov
fs
xchg
andl
mov
adcb
addb
pop
jmp
das
mov
sbb
sahf
loope
test
test
pop
out
xchg
outsl
pop
fsubs
loop
repz
ficomps
ss
lcall
fcmovbe
sbb
cli
testb
xor
int3
out
cmp
mov
or
jl
into
inc
xor
cmc
adc
stos
rcrb
push
adc
lods
xor
icebp
in
add
jmp
inc
dec
pop
lods
call
pop
xlat
orb
sub
mov
leave
inc
sti
xchg
lahf
pushf
popf
or
gs
std
nop
xor
dec
dec
arpl
fiadds
fidivrs
fxch
dec
out
xlat
stc
aad
or
leave
sbb
xor
outsl
pop
inc
push
xor
cltd
push
rcrb
cmp
aad
and
inc
cmp
fdivrs
or
int3
jb
mov
hlt
je
popa
push
jecxz
cmp
pop
lea
mov
orl
jg
dec
fcmovne
pop
push
pop
sub
test
lock
adc
das
mov
xchg
mov
mov
adc
shrl
cli
insb
div
loop
std
adc
dec
jns
dec
cmpsl
pop
sub
cmc
icebp
jmp
ret
mov
fisttps
out
mov
pop
addr16
shr
andb
cmpsl
int3
imul
lock
les
cltd
clc
rclb
movsb
ljmp
xchg
lods
test
mov
xchg
adc
movl
add
cmpsl
je
mov
pop
pop
push
push
jp
fldl
adc
xchg
lahf
jecxz
into
jnp
pop
lds
push
jmp
xchg
test
ljmp
mov
xor
wbinvd
outsb
mov
xor
xlat
test
dec
movsl
incb
out
sbbb
inc
ja
mov
xor
xlat
popf
or
cltd
ss
jnp
and
add
mov
out
mov
mov
in
loopne
xchg
cmp
das
je
or
add
jp
inc
mov
mov
push
pop
mov
jne
aam
pusha
or
xchg
les
mov
xorl
sub
add
xor
subl
and
mov
jle
jp
in
dec
xor
iret
adc
out
or
lea
fldl
jae
mov
stos
popf
insb
push
push
push
and
sahf
repz
inc
fwait
push
sbb
adc
imul
scas
fwait
dec
cmp
into
add
inc
mov
mov
add
leave
stos
stc
dec
hlt
ja
adc
and
sbb
aaa
add
aaa
jo
aas
or
push
mov
int3
je
cli
pop
addr16
fidivrs
fadd
loopne
imul
shrl
daa
xor
movsb
retw
shll
adc
test
jbe
mov
cmp
inc
jno
pop
clc
jl
rcr
dec
push
mov
dec
fisubrl
roll
lods
lahf
jbe
jmp
test
test
mov
cmpsb
test
mov
jo
xchg
pop
rorb
fisubrl
add
xchg
sub
cmp
cmc
cli
jge
sbb
inc
movsl
sbb
in
mov
jp
dec
adc
sbb
mov
sbb
jecxz
addr16
jge
xchg
stc
aam
sahf
mov
lcall
mov
lcall
outsb
aam
mov
subb
mov
push
mov
and
mov
mov
and
jo
mov
jo
fcomps
testb
push
xchg
inc
mov
mov
rcrb
das
repz
test
cmp
xor
jmp
loop
xor
stc
and
mov
adc
test
cmp
aad
push
out
jge
cli
sub
ja
lods
stos
in
fdivs
or
mov
cmpsl
loopne
ret
inc
pop
ficomps
cmp
adc
cmp
add
aam
data16
fcompl
cmp
xor
xlat
mov
test
or
xor
sar
cmp
shrb
nop
or
dec
ret
inc
jno
pusha
flds
cli
test
loop
adc
ss
xchg
js
test
call
pop
clc
std
adcl
and
sub
mov
orb
push
mov
std
jb
je
dec
out
ss
xchg
movsl
jecxz
push
xchg
sahf
or
lea
xchg
cwtl
outsb
xchg
mov
bound
add
imul
cmp
and
cmpsb
lock
js
das
xchg
sbbl
lods
lds
sarl
iret
idivb
push
xor
or
test
or
xchg
lret
lods
icebp
ret
cld
inc
xchg
mov
add
mov
xor
push
xchg
int
xchg
sarb
sarb
jg
push
es
sbb
insl
jmp
mov
ljmp
sub
mov
test
mov
aam
jp
test
xchg
pop
imul
lret
push
leave
push
dec
nop
mov
add
xor
shll
or
stos
pop
scas
mov
xchg
out
ret
cmp
inc
pushl
xor
movsb
lods
xor
and
xchg
fdiv
pop
std
pop
add
inc
js
lret
inc
lea
or
stos
cmp
push
push
mov
mov
in
sbb
insl
mov
loopne
push
jns
pop
cmp
cs
xchg
sub
sbb
dec
inc
or
addr16
iret
lods
mov
out
mov
mov
sti
int
ror
pusha
movsl
aaa
pop
fildll
test
mov
ljmp
addl
out
das
push
inc
rorb
cmp
sbb
aad
stos
jo
jns
enter
ljmp
jle
xchg
xchg
in
fs
adc
sub
ret
loope
sbb
push
push
jae
cltd
stos
push
pop
jl
popf
xchg
jl
push
test
movsl
ficoml
repz
fwait
scas
lret
sbb
jne
imul
popa
push
and
shlb
mov
aad
cwtl
leave
and
hlt
ret
arpl
add
int3
sub
das
adc
mov
xchg
pushf
outsb
int3
pop
sub
ficomps
shlb
insb
push
pop
repnz
scas
test
and
iret
fstpt
int3
push
sti
movsb
icebp
sbb
jno
pop
cwtl
jge
xchg
cs
daa
pop
lods
outsb
cmp
xor
sbb
fcomps
dec
mov
mov
cmp
insb
imul
xchg
fcmovb
push
sub
test
je
or
inc
cmc
jno
or
add
fmull
stos
orl
sub
sbb
sub
sbb
cmp
andb
pop
sbb
lahf
xchg
sbb
imul
mov
mov
pop
mov
out
pop
inc
imul
push
fcmovu
faddl
lods
sub
mov
adc
aaa
fdivrl
push
add
dec
gs
mov
and
and
jo
shll
fcomp
out
stos
idiv
mov
lret
jmp
mov
movsb
add
ret
sahf
daa
mov
test
push
xor
rcr
fldl
dec
loop
stos
cmp
fnstcw
fs
test
adc
lret
sub
cmp
shl
mov
cmp
mov
pop
sbb
xor
sbb
mull
iret
cmc
mov
lock
push
enter
shrl
or
fadds
mov
dec
fimuls
pop
pushf
adc
mov
sub
push
push
mov
lahf
sbb
sti
out
mov
jecxz
sbb
nop
out
cmp
ja
inc
test
pop
in
sbb
repz
jecxz
sbb
ja
push
pop
stos
cltd
sbb
inc
inc
mov
adc
adc
lods
adc
cli
aad
outsl
pop
inc
outsb
insl
lods
aas
dec
mov
push
dec
pop
sbb
je
push
jecxz
mov
mov
mov
cwtl
sub
push
imul
sbbl
adc
sub
xchg
dec
inc
stos
add
lock
fsubrl
jne
pushf
mov
daa
xchg
and
lret
sti
rol
push
xchg
jnp
dec
std
mov
cmp
std
xor
leave
fisttpll
icebp
cltd
bound
cld
insl
pop
jo
jb
fisttpll
jne
jno
mov
adc
xchg
test
sub
dec
mov
es
insl
rcrb
xchg
cs
cmpsb
ljmp
pushf
lods
pop
cmp
mov
int3
mov
and
jge
jl
fldenv
add
sti
leave
test
paddd
mov
dec
test
mov
lds
mov
mov
pop
sbb
fucomi
push
xor
pop
call
adc
xor
mov
or
xor
mov
cmp
mov
nop
pop
mov
outsl
fimuls
in
inc
and
adc
xchg
push
push
stc
mov
add
inc
inc
call
bound
vmwrite
inc
jmp
mov
xlat
stos
mov
dec
jl
addr16
push
adc
out
cli
xchg
dec
mov
jne
cs
pusha
inc
out
pusha
fisttps
loope
mov
jg
sub
mov
mov
pop
sub
ja
das
push
sahf
lods
fs
jecxz
sub
fisttps
cmpb
in
cmc
mov
enter
add
rcl
fld
or
xor
inc
repz
ficoms
sbb
jb
push
add
jo
add
ficoml
stos
mov
out
scas
popa
add
sarb
mov
sub
test
cltd
movsb
mov
or
fnstenv
inc
and
int
xchg
aaa
out
pop
xchg
or
test
add
popl
vaddsubpd
rcrl
jo
je
scas
fs
out
cmp
int
push
outsl
hlt
sub
push
jne
insb
xor
daa
pop
push
inc
cmp
pop
jno
xor
push
dec
sub
outsb
push
push
lods
addr16
pop
out
lahf
mov
rcll
adc
adc
push
aas
push
push
inc
jnp
cmpsb
mov
in
ret
gs
out
mov
push
scas
xchg
loope
shlb
sub
shl
cmp
out
pop
mov
data16
ss
xorb
lahf
add
xlat
mov
in
repz
pop
in
xchg
sub
shl
xchg
fs
test
sub
lock
sub
push
outsb
lcall
and
jbe
pusha
lret
popf
xchg
cmp
pop
mov
mov
push
les
call
jnp
idivl
fistpll
mov
fnstenv
sahf
lret
test
pop
xor
js
mov
push
jns
nop
shl
jg
xchg
adc
and
shll
mov
in
out
lea
cli
mov
xor
or
push
or
inc
into
out
cmpsl
and
loopne
xor
sbb
mov
adc
jno
scas
out
add
xchg
lret
sbb
data16
push
loope
popf
mov
cmp
lret
push
sub
in
loopne
or
dec
sti
sahf
bound
gs
and
mov
inc
xchg
shl
fldcw
jbe
clc
sub
repz
jne
incb
push
sbb
bnd
mov
jmp
sbbl
sub
inc
mov
cmp
call
mov
dec
aad
aaa
je
cli
and
rcll
movsb
mov
mov
mov
repz
mov
mov
xor
and
pop
inc
jbe
adc
sub
lock
das
push
mov
mov
fdivrp
sub
ret
rcll
repz
shrb
push
jo
pop
pop
mov
jo
cmp
cwtl
hlt
dec
lret
loope
ret
and
cmp
int3
mov
les
shlb
sub
dec
ret
popf
js
es
dec
rep
mov
inc
clc
addl
insl
data16
mov
popa
adc
xchg
mov
out
jp
and
pop
cwtl
jl
cmp
xor
mov
xchg
inc
push
dec
arpl
mull
lock
inc
or
imul
rorl
xor
out
lret
stos
in
xchg
jge
inc
add
loope
scas
inc
jge
inc
incb
xor
scas
aaa
mov
lds
dec
sbb
mov
ja
sbb
dec
mov
fiadds
aam
or
dec
addr16
or
pop
push
pushf
mov
add
fwait
rol
out
sub
dec
bound
sbb
jns
fistpll
xchg
lret
mov
pop
stos
mov
dec
xor
addr16
add
mov
xor
mov
popf
imul
pusha
fstpt
lea
test
loop
andl
out
sbb
sub
mov
and
stos
push
add
insb
ror
jnp
ret
dec
jle
mov
notb
das
pop
popf
iret
das
xchg
mov
and
xchg
pop
mov
inc
jno
jae
and
push
loopne
dec
popf
loope
mov
inc
or
fidivl
inc
mov
imul
pop
scas
lret
and
lock
cmp
mov
jnp
fcmovne
adc
hlt
pop
enter
sbb
or
inc
out
aaa
lods
sub
add
movsl
imul
hlt
ret
fcomp
fs
mov
jo
or
and
mov
or
add
jge
pop
mov
addr16
pop
daa
pop
add
cmp
jbe
jl
push
daa
dec
cltd
ss
stc
xchg
mov
and
inc
call
push
stos
test
or
shlb
bound
and
add
lea
push
shlb
loope
lods
xchg
sub
pop
arpl
add
ds
mov
inc
mov
addr16
addr16
jg
jns
dec
add
in
xor
pop
mov
mov
or
sub
outsl
xor
lcall
out
fcompl
mov
inc
adc
std
inc
cld
jg
cmp
mov
pop
mov
push
movsl
int
nop
psubusb
push
idivl
lret
std
roll
mov
adc
lods
sbb
push
cs
insl
xchg
ret
add
leave
jecxz
outsl
fwait
aas
sub
dec
xor
or
jmp
ss
mov
cmp
cmpsb
out
pop
out
ret
xor
sbb
cmp
mov
or
or
test
pop
pop
cmp
icebp
adc
jne
imul
pop
mov
dec
cmp
ds
cs
xlat
jl
test
mov
jne
cmp
sub
repz
mov
fimull
repz
inc
stos
ss
fldenv
mov
repz
mov
xor
insl
int3
imul
adc
ret
adc
lcall
or
jmp
add
jbe
aad
dec
mov
aas
xchg
dec
dec
dec
mov
je
sub
loop
dec
cmpsl
sbb
cwtl
lahf
pop
test
mov
fidivrs
sub
jg
mov
pop
mov
mov
mov
sbb
dec
mov
xchg
or
shll
mov
add
std
add
push
dec
gs
jbe
pop
or
das
push
jnp
inc
in
cld
ret
lret
push
js
mov
add
mov
adc
movsl
pop
jecxz
sbb
sub
scas
pop
ret
sub
and
rclb
movsl
insl
sahf
xchg
push
clc
mov
movsl
sub
dec
xchg
popa
daa
or
mov
adc
add
xor
test
xchg
in
add
iret
or
out
lcall
cltd
rcr
push
es
xchg
sub
shrl
orl
stos
es
xchg
xchg
les
add
jg
xor
int3
mov
mov
enter
adc
pop
cs
ja
dec
ss
mov
push
or
fldl2t
fwait
aaa
fmull
cmp
mov
js
out
or
pop
bound
sbb
xchg
sbb
loopne
repnz
cs
inc
cmpb
fsubrl
std
mov
or
stc
dec
inc
cmp
pusha
jbe
jg
lret
xchg
int3
dec
inc
jmp
ret
xor
fsub
nop
mov
ds
sbb
rsm
leave
ljmp
sub
jle
xchg
xor
push
pop
push
adc
iret
stos
iret
mov
ret
rcrb
push
inc
or
jae
lret
xchg
push
mov
or
push
add
call
xchg
mov
xchg
stos
imul
js
daa
mov
mov
xchg
mov
into
mov
leave
xchg
lret
hlt
mov
mov
dec
or
std
cmc
pop
aaa
insb
jnp
or
rolb
pop
loopne
int3
and
dec
fiadds
pmaxub
cld
mov
jo
mov
scas
and
pop
cmp
popl
push
or
ja
jge
push
pop
enter
daa
pop
je
cmp
pop
pop
jno
fcmovnbe
jl
sub
dec
or
sti
push
fsubrl
xor
cmp
cmp
test
aad
imul
add
in
xchg
inc
xor
into
ficoms
int3
negb
push
test
gs
mov
cmp
sub
shlb
add
pop
push
addb
aas
faddl
inc
mov
pop
push
sub
jae
mov
sub
xor
pop
ret
lcall
xchg
faddl
outsb
sub
dec
sub
pusha
add
sbbb
sbb
sahf
cmp
jecxz
add
jbe
and
negb
fmuls
push
cmp
cmp
sbb
rol
popf
in
ret
mov
jae
dec
xchg
push
sahf
adc
mov
and
adc
arpl
loop
inc
loop
xor
adc
cmpsb
ss
imul
out
lods
jne
cmc
call
cmp
mov
or
into
mov
lret
adc
loopne
out
leave
pop
pop
ja
adc
movsl
dec
adc
stos
push
add
mov
outsb
lods
imul
xlat
mov
sbbl
loopne
cld
or
push
gs
scas
pause
ja
inc
dec
ds
stos
push
lcall
jns
xchg
test
movsb
call
rorl
les
pushf
adc
jmp
popf
sbb
fldenv
mov
aas
movsl
out
jb
leave
jl
ret
hlt
lds
dec
jecxz
pop
or
stos
add
lea
mov
mov
xchg
jp
mov
stos
or
sub
mov
inc
add
lock
lret
das
adc
fsubs
dec
mov
xchg
shll
pop
std
test
xchg
dec
pusha
mov
cmpsl
pop
ds
push
pop
dec
cld
out
movsb
xchg
lret
mov
xlat
clc
mov
xchg
pop
add
out
jp
mov
xchg
loope
push
dec
and
test
clc
stc
inc
popa
xchg
jmp
aad
mov
cltd
dec
lods
fwait
xchg
sub
mov
mov
and
push
xor
imulb
jge
loop
imul
push
pop
adc
aad
jb
inc
movhps
add
rorl
mov
sbb
stos
adc
sbb
and
cmpsb
push
lock
sub
jbe
xor
lea
mov
lret
mov
pop
jmp
incb
dec
xchg
mov
mov
jno
mov
push
loop
pushf
add
push
xor
jmp
aas
jmp
lcall
aas
mov
mov
aas
pusha
in
addr16
add
mov
push
jo
cltd
movb
lock
es
jne
mov
mov
jmp
and
jmp
lea
pop
cmpl
out
aad
sub
sub
push
pop
dec
dec
stos
cmp
inc
and
pop
insb
xchg
jo
jnp
xor
jle
subb
mov
adc
stos
fmul
in
sbb
ret
jecxz
stc
sti
stos
inc
adc
ja
fidivrl
negl
cmpsb
shlb
sbb
push
loop
icebp
adc
scas
mov
mov
ror
daa
mov
and
leave
repnz
out
shrb
inc
sub
mov
mov
push
push
or
ds
int3
or
push
fisubrs
ljmp
add
cmpsb
and
jp
cmp
aam
push
pop
jmp
jbe
lods
mov
mov
enter
daa
pop
imul
or
test
outsl
dec
ja
stos
push
mov
and
xchg
je
dec
test
mov
cmpsl
jnp
adc
aas
in
js
and
fs
or
pop
push
xor
loope
iret
adc
call
ret
ds
push
xchg
movsl
cmp
sahf
sar
fs
and
pop
lea
out
mov
xor
dec
sub
ss
add
pop
sub
cmp
inc
mov
xchg
push
lods
mov
fdiv
rol
sub
mov
adc
xor
xor
xchg
push
inc
mov
mov
cmp
push
int
jns
sbb
cltd
mov
lret
jo
xor
fmull
xchg
xchg
sahf
mov
into
test
push
jb
pop
mov
jne
insb
stc
mov
imul
repnz
mov
std
mov
fsqrt
sub
pop
cmp
xchg
xchg
or
scas
js
mov
push
pop
jns
dec
adc
idivb
repz
sub
pop
fs
insb
xchg
inc
adc
xlat
cli
xor
sub
sti
cmp
dec
mov
mov
gs
or
nop
push
and
inc
rcrb
mov
sbb
repz
mov
xchg
inc
js,pn
ret
push
fld1
arpl
jno
inc
mov
pop
ja
mov
mov
insb
push
jmp
std
data16
pop
aad
mov
test
jb
mov
jp
xchg
xchg
lret
lods
fs
pop
ret
adc
adc
lods
rorb
mov
call
xor
inc
dec
loopne
jne
aas
das
icebp
and
mov
add
push
and
sub
roll
push
imul
mov
std
dec
sbb
dec
pop
rcrl
xchg
cs
icebp
cmc
cmc
and
sbb
inc
mov
pop
sbb
and
sbb
frstor
sub
inc
aam
pusha
mov
es
cli
mov
clc
xor
pop
xchg
sub
cmp
push
dec
insb
lods
push
mov
mov
pop
jg
and
jmp
jae
add
int
cltd
adcb
xchg
mov
push
cwtl
pusha
je
insb
fdivrl
mov
cmp
sbb
gs
aam
stos
add
xchg
out
hlt
les
push
out
add
lods
sar
incb
inc
movzbl
cmp
std
xor
jp
mov
into
inc
xchg
dec
push
xchg
push
pop
movsb
jne
ja
mov
popf
mov
adc
cmp
test
dec
in
jmp
lods
incl
bound
jne
in
repz
xchg
mov
mov
js
mov
cmp
cs
adc
mov
mov
mov
ljmp
jne
xchg
push
pusha
lods
nop
inc
fisttps
cltd
rclb
mov
xchg
pop
roll
xchg
pusha
sbb
mov
lcall
and
test
sarl
cltd
jle
pop
jns
popa
mov
loop
dec
out
ret
std
pop
xor
test
jae
ljmp
push
xor
push
add
lods
xchg
dec
xor
sbb
lret
loopne
leave
scas
in
fdivl
push
test
inc
mov
je
cmp
jne
adc
cmp
mov
inc
das
pusha
jae
or
ljmp
add
aaa
inc
pop
cmpl
jle
and
scas
loopne
test
les
inc
cmp
movsb
test
call
vpcmpeqd
cmp
daa
pop
loop
cmp
and
jno
adc
jl
push
inc
dec
out
aaa
push
mov
sub
and
push
lahf
xor
imulb
imul
inc
adc
cmp
pop
mov
js
mov
pop
dec
test
push
je
loope
push
or
out
xchg
cmp
xlat
ja
ljmp
rcl
fldcw
test
stc
sbb
pop
pop
add
pop
je
mov
lcall
loopne
cmpsb
pop
shl
lcall
push
fcompl
sub
push
rclb
dec
jbe
jg
rcrb
jmp
dec
les
scas
cs
shlb
int
mov
fadds
ret
add
add
add
lret
pop
jo
sar
push
sbb
mov
sub
fisubrl
fwait
loop
add
insb
xor
stos
mov
ffreep
push
sbb
rorl
aaa
fldl
cli
pop
push
xchg
mov
imul
or
and
into
jp
dec
cmc
xchg
loope
jns
push
pop
cwtl
jnp
adc
imul
inc
ja
fdivs
push
cmp
pop
or
imul
ds
mov
stc
sti
pop
leave
scas
xchg
addr16
nop
sub
dec
out
inc
jecxz
sub
dec
mov
and
nop
repz
dec
xchg
or
mov
call
mov
xor
cli
and
pushf
addr16
adc
push
and
cs
ljmp
cmc
add
aas
fs
mov
lods
xor
arpl
fbstp
push
lea
bound
leave
inc
leave
mov
mov
dec
in
jl
fistpl
adc
jnp
inc
dec
xchg
mov
das
rclb
mov
mov
rol
rcll
xlat
test
call
dec
push
fs
mov
int3
mov
cld
inc
movsl
out
popf
popa
fimull
pop
xchg
mov
pop
inc
inc
cld
shlb
push
aam
aaa
insb
ret
fld
lcall
mov
or
ljmp
xchg
lods
jno
cli
mov
jnp
jmp
les
scas
rorb
or
lea
pop
dec
test
push
pop
repnz
fstl
movsl
and
aaa
je
shrl
aas
xchg
pop
jb
dec
stos
repz
out
push
pusha
out
cltd
dec
bound
faddl
ljmp
inc
inc
xor
mov
xor
mov
ljmp
int3
sti
pop
pop
pushf
mov
dec
jl
dec
inc
pop
jae
or
jnp
fwait
les
stos
push
sub
add
pop
loope
out
cmpsl
mov
bound
jns,pt
lcall
push
push
pop
mov
push
ret
mov
xor
fwait
cld
jp
pusha
mov
jp
mov
pop
xchg
push
adc
fbld
lahf
sbb
test
push
xchg
and
js
sbb
sub
sahf
ljmp
fldenv
pop
and
subl
jnp
mov
jle
cs
push
sahf
insb
iret
stos
mov
ret
dec
pop
addr16
inc
sub
imul
jge
cmpsl
push
jg
in
addl
sbb
and
imul
fisubrs
lret
xchg
inc
rolb
movsl
mov
movl
and
lret
test
xor
push
sbb
popf
sub
test
or
aad
loope
add
xchg
xchg
fdivp
loope
lds
sub
scas
mov
pop
dec
cmp
lea
movsb
xor
add
jecxz
jbe
jb
jge
sahf
bswap
push
jmp
push
ffreep
cmp
lds
loope
jl
test
mov
test
leave
and
jge
lahf
dec
dec
rclb
jo
jecxz
push
push
ss
mov
cmp
js
dec
das
pop
mov
dec
loope
cmpl
ds
ret
mov
pop
jecxz
mov
push
fisubrl
add
fnstenv
mov
mov
pop
cmpsl
cmp
sub
mov
lcall
dec
faddl
aaa
sub
in
outsb
mov
out
cmp
pop
add
mov
mov
xchg
mov
xchg
mov
mov
push
rcrl
int
fisttpll
out
idivl
insb
lret
rol
dec
out
mov
pop
sahf
stc
or
xchg
sub
xor
out
loop
scas
sbb
and
and
jbe,pn
ss
mov
sti
mov
mov
pop
xor
shlb
into
pop
and
dec
jae
loopne
mov
bound
das
mov
adc
outsl
mov
pop
imul
insl
sbb
xlat
js
adc
mov
and
sti
mov
mov
nop
or
sub
sbb
or
xorb
fbstp
int
sbbb
out
ds
mov
fldl
arpl
push
and
and
jmp
or
add
aad
mov
sarl
add
sbb
xchg
out
je
xor
jecxz
outsb
call
in
fcomps
mov
mov
call
xor
inc
lret
cmpsb
pop
inc
test
inc
aad
lock
das
scas
sbbl
jno
and
rolb
mov
in
nop
std
popf
out
dec
push
fwait
sbb
sti
push
insb
icebp
mov
arpl
lret
or
mov
jbe
shlb
pop
aam
pop
pop
mov
sub
out
aam
bound
push
mov
insl
cmp
push
xchg
test
mov
popa
andl
fsubl
mov
sahf
fwait
popa
and
lahf
scas
mov
adc
faddl
sbb
test
push
lcall
clc
pop
fnstsw
cs
sbb
hlt
adc
lods
pop
sbb
mov
mov
push
push
add
jo
dec
lea
or
dec
jnp
pop
push
mov
aam
sub
call
fdivl
xor
mov
inc
scas
hlt
cmp
pop
ficompl
lret
or
xchg
mov
in
xchg
xchg
in
mov
jmp
in
inc
inc
xchg
push
out
mov
les
addr16
or
js
addr16
xor
dec
push
mov
enter
iret
cmp
fwait
mov
filds
mov
jmp
out
pop
mov
out
roll
xchg
sub
sbb
lret
and
sbb
sbb
jle
repz
outsl
add
jbe
sub
or
or
xchg
inc
xor
sbb
scas
imul
movsb
jmp
push
xchg
movsb
fidivl
mov
xchg
cld
sub
arpl
shrl
adc
and
sbb
fcomps
sbb
push
leave
arpl
xchg
popa
lds
lock
jmp
out
or
push
int3
int3
or
ficoms
jecxz
jo
es
scas
sahf
pop
sbb
ljmp
movsb
mov
inc
into
jbe
add
jge
jmp
adc
cmp
adc
mov
push
push
push
sub
push
in
add
or
in
xor
sub
sub
lahf
aam
enter
push
loope
adc
cmp
mov
movsl
push
jo
rorb
inc
andb
sbb
xorb
jecxz
jg
jp
into
inc
push
sub
or
pop
mov
clc
rcll
pop
in
repnz
mov
ficompl
mov
addb
mov
in
mov
mov
jnp
and
cmp
int
jmp
fdiv
jmp
divl
inc
pop
lret
aad
stc
leave
mov
cmp
pushf
dec
sub
xor
sbb
stc
fcmovb
jle
shrl
mov
das
out
lods
popf
std
out
sbb
bound
gs
lret
pop
dec
into
inc
dec
xor
adc
adc
scas
pop
pop
pop
out
add
mov
js
pop
adc
pop
into
add
data16
cmc
cmp
mov
and
dec
popf
or
mov
sbb
mov
icebp
shll
jae
nop
jecxz
movsb
dec
mov
aaa
ljmp
imul
xchg
nop
push
pop
call
mov
mov
adc
mov
jmp
mov
cs
xor
addr16
jb
pop
icebp
dec
lahf
bound
jecxz
cmpsb
ffree
mov
and
inc
in
mov
or
test
xor
ret
ficomps
cmpb
pop
pop
cmp
xchg
das
mov
pop
mov
add
dec
shl
adc
mov
xchg
dec
dec
push
cmpsl
push
xor
mov
jp
dec
cld
lcall
mov
pushl
notb
pop
jle
cmp
sub
adc
out
ds
idiv
loopne
pop
mov
adc
in
inc
xchg
out
push
push
popa
lcall
mov
rcll
and
jp
aaa
testb
push
sbb
test
and
fucom
fwait
aas
test
dec
fldl
popf
sub
rcr
jno
pop
enter
shll
gs
sbb
inc
addb
icebp
or
xor
hlt
mov
xor
cmp
shll
xchg
xor
jno
aad
popf
ja
cmc
jg
leave
aas
inc
inc
lcall
and
std
add
mov
negb
js
xchg
jns
iret
fs
imul
movsb
cld
sub
inc
lods
ss
sub
add
js
mov
jne
mov
aaa
rorb
xor
mov
pusha
jge
jecxz
gs
xchg
jmp
test
jae
xchg
mov
push
push
out
mov
sarb
push
pop
inc
stos
or
and
stos
and
inc
mov
in
cmp
adc
int3
iret
imul
pop
aad
pop
inc
inc
lods
inc
jae
sbb
push
jb
jmp
push
jge
add
jmp
bound
adc
imul
jbe
pop
rol
cmp
repnz
insb
pop
leave
fisubrl
mov
inc
cmp
or
movsb
lock
aaa
daa
lret
push
or
icebp
add
inc
int3
mov
add
xchg
ret
fidivs
fldl
lds
xor
scas
and
sub
test
movsb
dec
lret
cwtl
in
pop
jbe
or
dec
and
push
gs
enter
out
mov
ret
xor
dec
add
xor
inc
js
lahf
jecxz
push
sarb
test
int3
mov
cmp
adc
push
js
test
cmp
lds
loope
ret
and
sbb
ds
jno
movsl
pop
and
addr16
mov
pop
nop
lret
mov
repnz
inc
pop
enter
mov
push
repnz
cmp
xchg
fcompl
push
jp
dec
lock
lahf
pop
out
mov
xchg
pop
orl
mov
push
xchg
fdivs
dec
ror
mov
outsb
mov
dec
inc
sahf
aas
andl
xor
sub
aad
sbb
shll
fs
xchg
adc
mov
sub
bound
push
out
add
xor
mov
pop
pop
jne
outsl
bnd
and
cmc
fldt
outsb
pop
cmc
pop
test
aad
fldcw
mov
push
add
xchg
cmp
lods
out
and
cmp
jnp
div
and
mov
negl
push
sti
and
gs
rclb
lret
sbb
neg
lock
repz
imul
dec
jmp
cmp
arpl
push
adc
mov
and
and
mov
enter
jl
lahf
inc
inc
mov
aas
inc
rclb
xchg
push
in
dec
push
fdivs
jecxz
and
mov
adc
cwtl
add
mov
mov
sub
dec
lods
xor
movsl
stos
pop
mov
jecxz
mov
loope
ret
das
insl
icebp
inc
mov
inc
and
mov
aas
fsts
jmp
jle
inc
lds
push
stc
xor
push
leave
cld
lds
lret
ljmp
mov
fwait
imul
sub
sub
mov
ret
xchg
es
cmp
in
clc
and
xchg
es
ret
cmp
popa
mov
mov
xchg
jns
in
push
adc
psrlw
dec
add
push
cltd
pop
in
clc
test
pusha
mov
push
xor
pop
add
or
jns
mov
scas
xchg
sbb
lret
shll
fs
jae
mov
sub
xchg
outsb
xlat
incb
sub
sub
stos
or
mov
repz
mov
fcmovb
adc
lret
nop
mov
dec
push
xchg
roll
arpl
or
xchg
dec
fwait
push
pop
mov
add
sbb
out
inc
xor
bound
movsl
sbb
loopne
in
out
xchg
repz
loopne
test
sarb
es
mov
jp
pop
out
mov
test
ljmp
jo
jne
xor
pusha
sbb
filds
fucompp
push
aas
xchg
test
fiadds
mov
add
mov
xchg
mov
and
or
jle
pop
scas
in
fldcw
iret
enter
movsl
push
outsl
pop
or
dec
inc
dec
mov
jae
pop
adcl
repnz
inc
cld
and
pushf
sub
xchg
stos
mov
cld
imul
push
mov
test
mov
shrb
hlt
gs
arpl
pop
mov
cmp
or
pop
js
aaa
out
or
jb
dec
add
xor
pop
cmp
dec
insb
lds
shr
jo
push
jecxz
pop
iret
mov
adc
imul
aam
aad
out
cmp
xorb
inc
dec
dec
daa
push
out
mov
sti
sbb
pop
sahf
loop
mov
xchg
adc
and
xchg
mov
push
xchg
mov
or
adc
dec
inc
inc
cmpsb
mov
cmp
js
decl
push
jp
loope
lcall
lret
mov
sub
rolb
stos
popl
out
popa
orb
sbb
cmp
add
ja
xor
inc
jp
add
std
fs
insl
mov
mov
lret
pusha
mov
fmull
xchg
sub
popa
jo
adc
cmpb
pop
mov
push
in
mov
xor
and
shl
push
xor
fsubrs
shl
mov
mov
into
pop
testb
ret
mov
sahf
loop
jp
sub
outsl
mov
mov
push
lock
stc
dec
out
xlat
and
ss
mov
insl
pop
cli
daa
lret
cmpsl
xor
adc
cmp
arpl
or
dec
jecxz
push
ja
cmc
mov
add
xchg
adc
daa
sub
sub
data16
mov
cmp
add
xor
loop
mov
ljmp
push
dec
shll
lods
insb
nop
cltd
leave
jl
js
lods
inc
das
mov
xor
repz
aam
xchg
push
jle
sbb
lret
mov
mov
adc
loopne
adc
jmp
pop
subl
ret
cmpsb
mov
popa
sbb
jb
loope
dec
icebp
leave
je
lods
mov
dec
loop
mov
arpl
mov
fld
mov
scas
subl
pop
std
pop
sub
inc
push
ds
add
dec
cs
mov
xchg
push
lods
rorl
stos
enter
test
cmpsl
push
inc
sarb
sub
inc
cld
lock
mov
pop
sti
mov
fstps
je
push
mov
mov
call
adc
ret
adc
das
jp
out
push
pop
clc
pop
xor
xchg
shlb
popa
enter
sbb
xchg
mov
jecxz
mov
wrmsr
push
ret
add
cltd
xchg
lods
test
cmp
shll
or
xchg
fsubl
add
loop
push
push
out
stos
scas
lods
addr16
jecxz
adcl
cmpsl
xorb
nop
cmp
mov
aam
or
out
inc
insl
xchg
ret
fisttpl
xchg
ja
dec
jns
adc
adc
push
fwait
sbbb
mov
cmp
in
or
mov
cs
and
bound
xchg
push
in
mov
xchg
inc
repz
mov
flds
pop
sahf
daa
or
les
jp
jmp
mov
add
adc
jp
jne
pop
inc
pusha
mov
push
fbld
jno
jmp
dec
xchg
loopne
flds
out
out
sub
mov
push
aad
adc
scas
cmp
jnp
loope
jle
sti
stos
in
fiaddl
iret
daa
push
stos
ret
jge
inc
xlat
push
inc
push
or
jae
filds
popf
sbb
and
adc
inc
jnp
dec
fimull
add
imul
cmp
fcompl
push
out
xadd
push
mov
adc
std
leave
enter
mov
test
inc
ds
loope
into
lcall
aaa
movsl
and
or
mov
int3
cli
cmp
movsl
and
jl
loopne
lods
pop
das
jo
lea
push
and
mov
sub
push
ss
lahf
jge
and
enter
daa
push
sti
or
fmull
jno
lea
xchg
dec
adc
mov
xor
jp
push
lahf
lret
lea
test
bound
cmp
es
in
loop
cmpb
add
test
push
push
cmp
mov
push
jne
cmp
sarb
cltd
cmp
movsl
data16
sbb
dec
stos
sbbb
sbb
dec
adc
mov
fisttpl
pop
inc
mov
sub
cmp
cmp
fadd
stos
push
mov
ljmp
push
lods
adc
aad
mov
test
mov
mov
mov
and
push
adc
fisttps
dec
fsubrs
jb
divl
lret
add
mov
pop
lods
sbb
push
xor
into
fnclex
out
sub
in
pop
bound
clc
imul
jecxz
xor
cli
pop
mov
into
cmp
cmp
or
and
jmp
outsb
mov
cmp
pop
xor
jnp
pop
imul
xchg
and
mov
lods
mov
cwtl
mov
sub
ret
int
cmp
add
inc
add
pusha
mov
xlat
xchg
inc
cmpsl
pusha
fstps
les
out
sbb
fnstenv
push
inc
inc
lods
cmp
and
test
cmpb
add
mov
aad
push
cli
aas
jg
push
jb
icebp
pop
dec
add
inc
je
jge
jecxz
out
mov
xchg
std
cwtl
ja
sub
test
cli
mov
jecxz
inc
xor
adc
fildl
fs
pop
into
xor
inc
icebp
jmp
lock
lock
sub
mov
dec
cwtl
xlat
and
push
gs
xor
cmp
cmp
test
aas
cmpsl
push
adc
mov
decl
add
mov
pop
out
cmp
and
ror
sahf
sti
sub
pop
fcmovbe
inc
push
gs
movsb
fsqrt
es
sbb
add
in
jbe
filds
xchg
sub
ljmp
jg
test
cltd
int3
adc
mov
adcb
push
pop
add
xchg
jnp
mov
add
loop
or
leave
sbb
stos
sahf
xchg
inc
out
inc
mov
xchg
cld
daa
add
arpl
push
incl
xorl
add
xor
out
fldenv
loopne
enter
mov
or
ja
pop
pop
dec
cmp
inc
or
or
sbb
fwait
scas
push
jg
push
mov
add
into
jae
out
add
lret
in
mov
daa
xlat
ficoms
or
mov
or
fsubs
jecxz
jp
xor
mov
jge
mov
test
addr16
pop
js
jne
pop
dec
pusha
dec
pop
gs
stc
dec
xchg
fs
jmp
sbb
sbb
test
cmp
lds
xor
lds
lret
xlat
add
nop
lcall
fucomp
iret
xchg
iret
ret
mov
jp
flds
sahf
jae
test
or
add
or
fiaddl
jo
xchg
pop
xlat
fcompl
push
push
scas
aas
mov
pushf
rorb
mov
dec
jg
aas
imul
sti
stc
arpl
popa
faddl
cmpb
and
sbb
inc
add
fs
outsb
or
addb
lds
int3
js
mov
push
mov
lds
sub
fsubrs
sbb
and
jbe
cmp
mov
push
test
jbe
shll
enter
daa
push
mov
cmp
mov
jmp
mov
mov
xor
cmp
mov
and
push
xchg
test
sub
pop
push
cmpsb
test
pop
ret
js
mov
pop
les
sbb
ljmp
cmp
inc
xor
movsl
insl
adc
sar
cmp
mov
test
sbb
push
xor
sub
mov
ret
pop
mov
imul
in
fcompl
xor
outsb
js
imul
out
jo
xchg
stos
hlt
mov
mov
mov
shlb
jle
push
loop
sbb
out
or
divl
jb
lret
push
rcll
mov
adc
sbb
sbb
cld
fnsave
jb
stc
loop
pop
idiv
mov
cmp
adc
stos
sub
cltd
std
push
out
int
cli
lea
xor
or
or
sbb
xor
and
sbb
add
push
call
adc
push
sbb
lea
mov
xor
pop
lods
mov
pop
pop
xlat
mov
dec
sub
notl
push
stos
cld
in
cmp
jae
je
pop
fs
gs
ja
nop
dec
cltd
lds
imul
fistps
fsts
int
repz
sbb
ror
mov
mov
adc
mov
icebp
or
cs
movsb
rcl
in
inc
xchg
sbb
aas
push
sbb
jb
xor
dec
jnp
xchg
je
mov
pop
mov
dec
call
push
movsl
mov
mov
sti
sbb
pop
or
xor
jno
mov
push
lock
movsb
das
or
mov
xor
cmp
pop
insl
xlat
std
loopne
jge
cmp
cmpsl
push
push
mov
and
cld
inc
xchg
lret
aaa
loopne
mov
into
inc
mov
and
push
pop
cli
aaa
in
shlb
adc
adc
ret
xor
subb
cmp
jecxz
mov
popa
divb
jbe
repz
push
mov
icebp
xor
push
out
stos
pmaxsw
out
add
test
dec
push
sub
in
loopne
fnstsw
ss
mov
xchg
pop
lock
mov
cmp
aam
lea
out
test
out
add
mov
xor
fidivrl
xor
daa
scas
mov
jecxz
or
int
pop
shrl
dec
xor
or
sbb
push
cli
cmp
add
sub
xchg
loope
outsl
jmp
jns
ljmp
loopne
mov
mov
pop
xor
addr16
sub
mov
sbb
or
dec
ds
jne
or
jmp
pop
cmpsl
xchg
aaa
sub
xchg
in
sbb
sub
pop
sub
add
push
stos
aam
jecxz
fmull
xchg
insb
out
and
jnp
nop
jle,pn
sbb
adc
fidivrs
fisubrs
inc
pop
mov
push
inc
insb
mov
sub
jle
mov
push
jns
inc
fidivl
fwait
arpl
mov
pop
scas
mov
lds
mov
mov
sahf
jl
inc
adc
inc
jp
pushf
sub
sbb
xchg
or
mov
int3
arpl
pop
lret
faddp
inc
movsb
lds
ss
stc
xchg
fsubs
leave
mov
movsb
jne
rcll
sub
in
mov
push
daa
push
mov
cmpsl
jno
mov
ret
dec
out
jae
push
xlat
add
xor
mov
adc
or
fildll
clc
stos
addb
stos
cmpsb
sub
ret
in
mov
fs
out
pop
add
push
loope
clc
add
inc
outsl
cmp
sub
mov
sarl
daa
sbb
mov
mov
jge
xor
std
dec
mov
pop
xchg
ret
cmp
and
inc
lret
gs
fmull
push
sub
insl
fistl
or
jg
mov
cs
lds
stc
and
push
in
push
int
mov
fcomps
xchg
shr
mov
or
sahf
lret
fcmovnb
test
inc
ret
outsl
push
pop
aam
or
out
fs
scas
adc
es
cmp
lea
