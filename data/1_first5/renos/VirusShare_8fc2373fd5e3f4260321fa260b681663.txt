jmp
mov
jmp
mov
jmp
mov
xor
xor
cmp
add
add
in
push
movb
mov
pop
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
movl
movl
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
mov
mov
mov
mov
mov
push
mov
push
call
mov
cmp
jo
lea
mov
mov
mov
mov
jmp
lea
dec
lea
mov
xchg
inc
dec
je
mov
mov
mov
movl
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
movl
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
pop
ret
xor
xor
xor
xor
xor
add
xor
xor
add
add
xor
xor
aaa
add
add
add
add
add
cmp
xor
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
cmp
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
xor
xor
xor
add
push
mov
add
cmp
jo
mov
mov
lea
lea
dec
inc
dec
je
mov
mov
xchg
inc
xchg
lea
lea
lea
lea
inc
dec
dec
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
cmp
jo
lea
mov
mov
mov
mov
jmp
lea
dec
lea
mov
xchg
inc
dec
je
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
call
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
mov
push
call
mov
pop
ret
add
aaa
add
add
add
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
xor
xor
xor
add
add
xor
add
add
add
add
add
add
add
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
xor
xor
add
add
cmp
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
cmp
xor
xor
xor
add
add
xor
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
add
xor
xor
cmp
add
add
xor
xor
aaa
add
add
lea
push
mov
add
mov
mov
cmp
jno
xchg
dec
xchg
dec
cmp
jne
dec
dec
dec
inc
mov
mov
lea
mov
mov
inc
dec
dec
dec
je
mov
mov
mov
mov
cmp
je
jmp
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
xor
divl
test
jne
mov
cmp
jo
lea
mov
mov
mov
mov
jmp
lea
dec
lea
mov
xchg
inc
dec
je
mov
mov
mov
mov
mov
jmp
mov
xor
divl
inc
imull
mov
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
mov
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
mov
push
mov
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jno
cmp
jb
dec
inc
dec
inc
dec
inc
cmp
jl
lea
mov
lea
lea
xchg
xchg
mov
dec
dec
mov
mov
lea
mov
cmp
je
jmp
cmp
jp
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
lea
xchg
xchg
mov
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jo
mov
mov
lea
lea
dec
inc
dec
je
mov
mov
xchg
inc
xchg
lea
lea
lea
lea
inc
dec
dec
mov
cmp
je
jmp
cmp
jp
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
lea
xchg
xchg
mov
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
je
jmp
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
mov
sub
mov
lea
cmp
jl
mov
mov
mov
lea
lea
mov
mov
mov
xchg
lea
dec
inc
mov
xchg
inc
push
mov
mov
xor
call
mov
mov
cmp
jo
lea
mov
mov
mov
mov
jmp
lea
dec
lea
mov
xchg
inc
dec
je
mov
mov
mov
mov
mov
mov
call
cmp
jo
mov
mov
lea
lea
dec
inc
dec
je
mov
mov
xchg
inc
xchg
lea
lea
lea
lea
inc
dec
dec
push
mov
mov
xor
call
mov
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
mov
movb
movb
cmp
jno
xchg
dec
xchg
dec
cmp
jne
dec
dec
dec
inc
mov
mov
lea
mov
mov
inc
dec
dec
dec
je
mov
mov
mov
lea
mov
push
add
jmp
mov
mov
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
lea
mov
push
mov
jmp
lea
cmp
jl
mov
mov
mov
lea
lea
mov
mov
mov
xchg
lea
dec
inc
mov
xchg
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jp
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
lea
xchg
xchg
mov
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jno
cmp
jb
dec
inc
dec
inc
dec
inc
cmp
jl
lea
mov
lea
lea
xchg
xchg
mov
dec
dec
mov
mov
lea
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
sub
add
add
mov
cmp
jno
xchg
dec
xchg
dec
cmp
jne
dec
dec
dec
inc
mov
mov
lea
mov
mov
inc
dec
dec
dec
je
mov
mov
mov
lea
pushl
call
mov
pop
ret
lea
push
mov
add
mov
mov
mov
mov
cmp
jo
mov
mov
lea
lea
dec
inc
dec
je
mov
mov
xchg
inc
xchg
lea
lea
lea
lea
inc
dec
dec
mov
cmp
jo
lea
mov
mov
mov
mov
jmp
lea
dec
lea
mov
xchg
inc
dec
je
mov
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
cmp
jl
mov
mov
mov
lea
lea
mov
mov
mov
xchg
lea
dec
inc
mov
xchg
inc
mov
mov
movl
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
mov
pop
ret
nop
push
cmp
testb
push
pop
insb
jle
jle
jp
inc
jnp
adcl
test
arpl
imul
pop
pop
dec
jle
imul
inc
imul
imul
pop
imul
bound
test
pop
pop
pop
pop
jp
inc
imul
pop
cmpb
jp
sub
inc
jnp
adcl
pop
pop
adcb
pop
imul
adcl
pop
sub
inc
pop
jnp
adcl
pop
pop
pop
pop
pop
dec
mov
lahf
pop
hlt
sub
mov
pop
insb
jo
cmp
gs
push
pop
cmc
cmp
pop
pop
aas
push
pop
or
push
pop
adc
push
pop
cmp
aas
push
pop
xor
push
pop
pop
aas
push
pop
mov
pop
pop
pop
sahf
pop
out
add
roll
pop
pop
sahf
pop
out
add
testl
out
add
sti
pop
pop
pop
sahf
pop
out
add
incl
pop
pop
sahf
pop
out
add
mov
pop
pop
pop
sahf
pop
out
add
mov
pop
pop
pop
sahf
pop
out
add
jmp
pop
pop
sahf
pop
out
add
sub
sahf
pop
out
mov
push
fsubs
ficomps
mov
mov
pop
fsubs
add
pop
sahf
pop
fbld
push
mov
aas
inc
mov
pop
inc
mov
arpl
pop
sahf
pop
add
cmp
pop
fbld
pop
add
pop
fcomip
inc
dec
mov
repz
sbb
pop
pop
pop
mov
pop
mov
xor
pop
add
out
xchg
pop
pop
pop
sahf
pop
iret
mov
sbb
and
enter
mov
sbb
sahf
pop
lret
lods
pop
pop
pop
adcl
lret
mov
add
pop
fcomip
inc
sub
push
and
mov
pop
pop
mov
pop
imul
pop
lret
mov
sahf
pop
sti
mov
pop
sbb
sahf
pop
testl
mov
add
lret
mov
add
mov
sbb
sti
mov
pop
pop
inc
mov
pop
fcomip
inc
das
mov
add
mov
sti
sbb
sahf
pop
mov
sbb
pop
incl
pop
fcomip
inc
das
mov
cwtl
pop
negl
cwtl
pop
sti
sbb
pop
push
cwtl
pop
lret
or
and
and
xor
hlt
hlt
mov
aas
sbb
sahf
pop
out
mov
inc
sahf
pop
jmp
pop
jecxz
inc
pop
pop
addl
xlat
and
pop
jecxz
mov
dec
jg
xchg
pop
pop
adcl
push
aaa
inc
mov
dec
jg
xchg
pop
pop
adcl
mov
dec
mov
jmp
fwait
cmp
repz
hlt
adcl
xchg
add
repz
hlt
xlat
hlt
stc
mov
pop
fsubs
add
push
mov
xchg
sarb
pop
pop
pop
push
jnp
pop
pop
push
push
pop
pop
pop
push
cmpsl
pop
jmp
pop
pop
xlat
push
add
jmp
pop
pop
ds
push
lcall
pop
pop
add
ret
ljmp
push
fiadds
adc
ret
incl
pop
pop
xor
jb
pop
push
push
insb
sbb
mov
sahf
cmc
ds
mov
leave
push
mov
fsubs
ficoms
add
fdivrp
cld
hlt
hlt
hlt
imul
pop
pop
mov
sahf
fsubrl
sub
jmp
hlt
hlt
fistps
mov
cmc
hlt
hlt
sahf
pop
repz
pop
aaa
pop
pop
pop
fstpl
push
aaa
pop
pop
pop
fstpl
pop
sub
mov
lock
xchg
aaa
pop
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
mov
hlt
hlt
hlt
pop
lahf
pop
out
xchg
jb
pop
and
mov
pop
lock
sub
mov
repz
mov
or
cmc
hlt
hlt
cmc
pop
icebp
mov
out
push
fstpl
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
fstpl
pop
sub
mov
mov
mov
out
cmc
hlt
hlt
sbb
sub
mov
mov
aaa
pop
pop
sbb
cmp
pop
pop
pop
lahf
pop
icebp
sub
mov
and
pop
pop
lahf
pop
out
sub
mov
out
lahf
xchg
aaa
pop
pop
cmc
pop
lock
jb
pop
push
mov
push
pop
dec
mov
hlt
sub
mov
aaa
pop
pop
push
cmp
pop
pop
pop
mov
sub
mov
aaa
pop
pop
sub
mov
pop
and
mov
aaa
pop
pop
sbb
cmp
pop
pop
pop
mov
sub
mov
aaa
pop
pop
mov
pop
lahf
pop
repnz
mov
aaa
pop
pop
mov
pop
sub
mov
pop
lahf
cltd
and
pop
pop
sub
mov
aaa
pop
pop
mov
and
pop
pop
sub
mov
aaa
pop
pop
and
xchg
and
pop
pop
sub
mov
pop
and
mov
aaa
pop
pop
sbb
cmp
pop
pop
pop
lahf
pop
repnz
mov
and
pop
pop
sub
lahf
pop
cmc
mov
fdivr
and
inc
push
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
mov
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jno
cmp
jb
dec
inc
dec
inc
dec
inc
cmp
jl
lea
mov
lea
lea
xchg
xchg
mov
dec
dec
mov
mov
lea
push
call
mov
lea
mov
subl
movb
movb
movb
mov
cmp
jo
lea
mov
mov
mov
mov
jmp
lea
dec
lea
mov
xchg
inc
dec
je
mov
mov
mov
mov
mov
call
mov
lea
cmp
jl
mov
mov
mov
lea
lea
mov
mov
mov
xchg
lea
dec
inc
mov
xchg
inc
lea
mov
subl
mov
mov
call
mov
cmpl
je
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
mov
mov
call
mov
cmpl
je
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
lea
push
push
mov
sub
push
mov
push
call
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
mov
cmp
je
mov
subb
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
xor
add
mov
xor
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
incl
mov
cmp
jne
cmp
jp
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
lea
xchg
xchg
mov
inc
mov
call
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
mov
push
mov
push
call
cmpl
je
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
cmp
jno
xchg
dec
xchg
dec
cmp
jne
dec
dec
dec
inc
mov
mov
lea
mov
mov
inc
dec
dec
dec
je
mov
mov
mov
push
mov
pushl
xchg
push
jmp
cmp
jno
cmp
jb
dec
inc
dec
inc
dec
inc
cmp
jl
lea
mov
lea
lea
xchg
xchg
mov
dec
dec
mov
mov
lea
mov
pop
ret
add
add
jb
gs
xor
cs
insb
add
add
push
mov
add
cmp
jno
xchg
dec
xchg
dec
cmp
jne
dec
dec
dec
inc
mov
mov
lea
mov
mov
inc
dec
dec
dec
je
mov
mov
mov
movb
mov
mov
mov
add
mov
xor
add
cmp
jne
pushl
push
jmp
add
sub
cmp
jne
cmp
jno
xchg
dec
xchg
dec
cmp
jne
dec
dec
dec
inc
mov
mov
lea
mov
mov
inc
dec
dec
dec
je
mov
mov
mov
cmpb
jne
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
movb
cmp
jp
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
lea
xchg
xchg
mov
inc
push
push
push
call
mov
mov
mov
cmp
jo
mov
mov
lea
lea
dec
inc
dec
je
mov
mov
xchg
inc
xchg
lea
lea
lea
lea
inc
dec
dec
jmp
mov
cmp
jo
lea
mov
mov
mov
mov
jmp
lea
dec
lea
mov
xchg
inc
dec
je
mov
mov
mov
movb
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
mov
pop
ret
add
popa
add
jo
ja
imul
arpl
jo
insb
add
add
add
in
add
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
lea
cmp
jl
mov
mov
mov
lea
lea
mov
mov
mov
xchg
lea
dec
inc
mov
xchg
inc
call
test
jne
mov
jmp
movw
cmp
jo
mov
mov
lea
lea
dec
inc
dec
je
mov
mov
xchg
inc
xchg
lea
lea
lea
lea
inc
dec
dec
call
lea
mov
pop
ret
nop
push
mov
add
cmp
ja
lea
xchg
mov
inc
inc
mov
mov
mov
mov
mov
mov
xchg
mov
lea
inc
dec
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
cmp
jp
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
lea
xchg
xchg
mov
inc
movl
movl
mov
push
mov
push
call
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
movl
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
mov
mov
mov
mov
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
mov
cmp
jo
lea
mov
mov
mov
mov
jmp
lea
dec
lea
mov
xchg
inc
dec
je
mov
mov
mov
push
call
mov
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
cmp
jp
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
lea
xchg
xchg
mov
inc
movl
movl
mov
push
mov
push
call
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
movl
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
mov
mov
mov
mov
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
lea
cmp
jl
mov
mov
mov
lea
lea
mov
mov
mov
xchg
lea
dec
inc
mov
xchg
inc
mov
pop
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
jo
imul
add
in
add
lea
cmp
jl
mov
mov
mov
lea
lea
mov
mov
mov
xchg
lea
dec
inc
mov
xchg
inc
movl
movl
mov
push
mov
push
call
cmp
jo
mov
mov
lea
lea
dec
inc
dec
je
mov
mov
xchg
inc
xchg
lea
lea
lea
lea
inc
dec
dec
movl
movl
mov
push
mov
push
mov
push
call
call
call
mov
mov
mov
mov
mov
push
mov
push
call
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
movl
movl
mov
push
mov
push
call
call
call
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
mov
mov
mov
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
movl
movl
mov
push
mov
push
mov
push
call
lea
cmp
ja
mov
mov
xchg
dec
lea
mov
xchg
inc
mov
jmp
inc
dec
mov
mov
lea
mov
mov
dec
mov
mov
mov
mov
mov
push
mov
push
call
call
cmp
jo
mov
mov
lea
lea
dec
inc
dec
je
mov
mov
xchg
inc
xchg
lea
lea
lea
lea
inc
dec
dec
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
mov
pop
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
add
add
add
add
add
add
add
xor
xor
cmp
cmp
add
add
xor
xor
xor
xor
cmp
xor
xor
xor
xor
xor
add
add
xor
xor
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
mov
cmp
jp
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
lea
xchg
xchg
mov
inc
mov
mov
lea
call
lea
xchg
mov
mov
mov
xchg
dec
dec
jne
mov
mov
mov
xchg
mov
mov
xchg
mov
dec
inc
inc
ret
ret
lea
jl
add
add
add
andl
and
adc
push
insb
imul
add
leave
add
gs
jmp
stos
dec
add
inc
or
xor
addr16
jnp
mov
mov
and
ret
loopne
stos
or
add
and
add
add
or
fcoml
add
mov
xchg
push
sbb
add
push
and
pop
add
outsb
add
add
ret
sbb
add
in
xor
xchg
flds
cmpsb
add
add
lods
add
add
repz
mov
mov
pop
pushf
mov
sub
lret
pop
and
cmpsl
add
mov
xchg
dec
push
cwtl
dec
ljmp
mov
add
add
add
scas
add
cmpsb
adc
lret
andl
pop
test
jbe
popa
cltd
pop
add
pop
jnp
push
jle
jecxz
hlt
fwait
cltd
insb
imul
ret
pop
pop
dec
or
push
or
out
add
aas
lret
mov
les
fstl
outsl
movsl
push
std
sbb
or
fiadds
add
adc
fnsave
das
add
mov
imul
push
cs
test
add
add
scas
test
dec
sti
xor
cmp
add
dec
xchg
sub
dec
inc
scas
cli
xchg
out
jge
mov
aaa
mov
lcall
sahf
mov
mov
dec
in
jno
ljmp
add
mov
mov
add
add
xchg
inc
mov
aaa
hlt
shl
mov
or
jo
mov
add
lret
add
jle
hlt
enter
loope
push
cld
pop
mov
add
mov
aaa
xor
or
dec
pop
out
mov
mov
loope
in
add
add
jne
add
add
testl
push
jo
xorl
jns
sbb
fstpt
aas
je
push
out
outsb
das
add
add
aad
add
and
scas
push
loopne
xor
add
fstps
add
jg
rolb
and
es
lcall
jp
cwtl
cmp
xchg
jg
das
mov
add
and
add
xor
cmc
add
or
add
inc
sbbb
add
add
push
add
and
iret
fnstsw
jns
add
pusha
fsts
testl
cmp
fcomps
jbe
cmp
in
sub
out
adc
push
push
cli
adc
sub
fs
in
aas
shll
fstps
mov
push
mov
sub
dec
loop
sahf
in
mov
cld
sub
mov
add
pusha
cwtl
adc
xchg
add
leave
pusha
dec
imul
repnz
sbbl
dec
daa
jecxz
call
cmp
cld
fs
mov
out
add
pop
add
mov
movsl
add
mov
sbb
pop
jle
add
in
push
test
add
out
mov
add
daa
fdivs
les
sbb
add
push
lea
jge
and
ud1
loopne
xchg
ret
add
inc
sbb
pop
orl
sub
pop
sub
daa
gs
cmc
sbb
cmp
add
sub
sbb
adc
call
jmp
mov
iret
inc
add
add
xchg
sbb
adc
movb
mov
test
sbb
ljmp
fldl
fwait
inc
add
jmp
sarb
aad
iret
add
dec
repz
addl
sbb
je
and
ss
jmp
orl
xorl
addl
dec
fistpl
lcall
movsb
imul
cmp
fwait
ret
xorb
leave
mov
icebp
mov
arpl
inc
mov
std
jne
or
and
mov
adc
sti
into
sahf
cld
out
or
and
jge
scas
cmp
negl
and
fldcw
inc
out
jae
fadds
add
mov
aam
xchg
cli
ret
subb
adc
in
adc
pop
dec
dec
sar
out
push
mov
mov
inc
popa
fildl
mov
mov
cmpsb
fbstp
not
repnz
lods
outsb
cltd
dec
lahf
outsb
test
pop
add
lahf
jl
xchg
lret
mov
mov
rorb
rcr
sarl
pop
xchg
and
out
bnd
xchg
mov
daa
insl
bts
pop
or
shll
sti
xchg
repnz
negl
adc
nop
fdivrs
sbb
stos
xchg
push
ds
or
jnp
add
aad
das
and
bound
jne
sahf
lds
in
popf
mov
insl
jg
mov
push
loope
aas
dec
cmp
add
jo
clc
dec
daa
pushf
xchg
mov
inc
imul
sub
pop
mov
push
xor
push
xchg
stc
bound
repnz
push
leave
out
adc
sub
jp
or
and
lcall
jns
xchg
jle
pop
fsub
inc
sahf
cmc
pusha
ficompl
in
xchg
rcl
push
inc
lods
xchg
xor
push
out
mov
rcrl
mov
pusha
stos
dec
stos
je
push
loope
sbb
scas
ret
imul
pop
scas
jmp
outsb
push
ljmp
iret
mov
and
leave
mov
shrb
arpl
adc
push
xchg
fimull
xchg
out
or
or
testl
mov
adc
mov
daa
cmp
scas
sbb
movb
addr16
int
dec
dec
mov
aaa
add
xchg
or
jno
pop
mov
cmp
cwtl
mov
xor
shrl
cmpsl
and
mull
jns
ret
inc
dec
xor
cmpsb
aad
and
enter
daa
out
push
and
dec
mov
cld
sub
mov
jbe
push
xor
mov
sub
movsl
inc
pop
sbb
xchg
and
cmp
xor
rcl
frstor
cmp
inc
xlat
push
pop
pusha
mov
push
data16
push
or
fsubrl
sub
repnz
and
adcl
mov
fisubrl
jo
cmp
shlb
cmpsl
clts
push
movsb
sub
sub
sub
les
jnp
out
rcll
mov
mov
adc
repnz
cltd
jg
pushf
ds
iret
mov
xor
cmp
xchg
shrl
fadds
je
out
cmpsl
mov
iret
mov
mov
fsubrs
test
sbb
into
js
test
xor
mov
imul
and
pushw
inc
lods
fucomip
mov
out
jl
cli
jns
pusha
mov
add
sahf
sti
rolb
adc
in
dec
pop
repnz
daa
fcomps
or
adc
ret
mov
repz
sub
xchg
enter
adc
fdivrl
out
cli
or
dec
ss
cmp
adc
inc
adc
push
into
cs
jmp
aad
add
or
push
enter
into
decl
mov
je
push
fucom
inc
cld
mov
out
in
adc
int3
loopne
push
adc
pop
dec
cld
mov
cmp
sbbb
mov
inc
and
sarl
jo
jb
mov
mov
jl
mov
testb
jbe
ds
mov
mov
mov
jne
cld
adc
imul
xchg
incl
lock
sbb
es
pop
mov
scas
mov
pop
xor
ret
bswap
jl
xchg
push
mov
stc
dec
inc
lods
mov
out
imul
dec
outsl
mov
stc
aad
and
out
sub
rorb
out
cltd
jg
mov
mov
out
push
sbb
das
fnstsw
xchg
xchg
jg
inc
ljmp
fstpl
add
push
and
xchg
jmp
pop
push
jb
jne
or
sbb
cmc
pop
fdivl
rcll
mov
imul
test
push
xacquire
loop
inc
popf
out
pop
or
and
cmp
imul
int3
call
xor
gs
push
or
jecxz
xchg
mov
pop
mov
out
sbb
int
jb
das
or
sbb
es
cmc
inc
mov
dec
jae
dec
ljmp
mov
jl
out
std
push
sub
lret
mov
sbb
out
sbb
sub
and
aas
addr16
push
jp
push
lea
fsubs
insb
mov
shll
ja
pusha
jne
add
std
add
pop
sub
push
push
push
stos
adc
mov
out
rolb
sarb
xchg
stos
mov
sbb
shlb
scas
dec
cli
mov
xor
rcll
sbb
add
ret
hlt
leave
xor
hlt
xchg
lock
int
in
jo
sub
mov
inc
adc
xchg
inc
add
rcl
pop
or
outsb
fwait
lds
add
xor
xor
sarb
fdiv
fldenv
or
jbe
jl
jge
sbb
sbb
or
mov
jno
push
inc
jl
packuswb
pop
call
xor
sub
jl
adc
xor
push
inc
and
cmpsb
pop
je
in
in
xchg
lret
jns
daa
in
cld
xchg
cmp
xchg
adc
subb
mov
lret
and
mov
js
pop
sbb
add
add
bound
inc
xchg
jp
loope
int
cmpl
push
push
loope
push
popa
shl
fcoml
aas
insl
outsb
xchg
push
adc
pop
pop
sahf
cmp
add
inc
xor
popf
push
adc
pop
sub
push
pop
aad
int3
lcall
push
mov
jnp
sbb
in
ja
and
xchg
inc
push
jg
or
mov
mov
stc
jmp
xchg
adc
test
ss
push
cmp
fsubrs
lods
lret
mov
cmp
daa
iret
or
or
xor
fdivrs
jns
jne
push
jno
xchg
orl
cltd
daa
xlat
lods
ficoml
mov
add
push
mov
outsl
mov
xor
inc
gs
jmp
sbb
cmp
adc
aad
les
in
mov
mov
lret
sbb
sub
cmc
xlat
mov
adc
push
pushf
loopne
jmp
cmpsl
add
jb
mov
imul
xor
aam
cli
dec
outsb
mov
add
push
sbb
icebp
cmp
inc
call
aam
ret
push
lock
repnz
out
adc
mov
test
xorl
and
fadds
push
leave
aaa
test
ret
cwtl
das
cwtl
stc
add
inc
mov
insb
mov
cld
cmp
sub
mov
mov
add
lock
push
das
add
xlat
sub
movsl
clc
into
aam
mov
es
mov
dec
aas
sub
mov
or
mov
sbb
pop
and
mov
cmp
xor
push
mov
test
mov
push
faddl
fucom
loopne
clc
sbb
mov
mov
fcmovbe
mov
stos
fdivrs
out
mov
push
adcb
punpckhwd
rorb
insb
xlat
les
mull
adc
lds
test
out
xchg
jb
xor
mov
fwait
imul
add
and
in
xor
jns
mov
jno
or
mov
mov
mov
out
repnz
rcrb
enter
pop
pop
mov
movsb
lret
jne
lds
out
faddl
dec
out
jmp
cld
iret
andl
out
xchg
inc
sub
push
fisubl
xlat
bnd
push
mov
insb
and
into
loop
inc
add
in
mov
pusha
adc
fistps
xchg
jbe
push
fs
roll
jle
std
movsl
inc
push
insl
mov
outsl
mov
imul
sbb
dec
imul
push
js
sahf
adc
test
pop
pushf
mov
hlt
frstor
arpl
pop
jo
jae
lahf
or
add
pop
lods
ficoml
add
rorl
pop
push
into
out
ficoms
push
ljmp
mov
bnd
mov
xchg
rolb
push
call
xor
into
int3
sbb
dec
aaa
jle
sbb
jno
repz
jl
ljmp
mov
nop
outsl
xor
xchg
scas
hlt
dec
out
enter
and
cmp
mov
data16
cmpsb
fcmovne
inc
in
shrl
enter
daa
in
and
pop
loope
or
sub
iret
fistpll
jecxz
dec
ds
leave
movsl
aaa
sti
fsubl
xlat
lcall
dec
pop
cmp
push
cvtps2pi
fsubrl
cmp
xor
js
ja
pop
fisubs
adcb
xchg
fadd
fs
outsb
ljmp
sarb
ds
cwtl
popf
mov
mov
hlt
jg
nop
mov
lds
adc
cs
jae
sub
addr16
lcall
mov
sbb
jl
test
fwait
rolb
lock
mov
ja
stc
mov
lret
add
xor
xchg
pop
jle
cmp
lods
maskmovq
testl
outsb
xor
jno
decb
testb
into
ds
cmc
jp
movsb
xor
and
loop
and
imul
scas
and
lods
lods
lods
xchg
mov
or
cli
fists
mov
ret
sti
cs
fdivrp
push
or
pop
fsubs
pop
lods
jo
adc
push
fnstcw
sbb
repz
pop
je
cmp
in
int
push
sub
sarb
scas
aaa
imul
adc
aad
fwait
push
nop
xchg
lcall
out
aam
in
addr16
sti
arpl
arpl
hlt
add
repnz
inc
call
push
lds
addl
cli
jg
arpl
loope
inc
jmp
inc
pop
sub
aas
js
jmp
mov
xchg
icebp
push
shll
into
cmp
push
cmpsl
cwtl
mov
sbb
and
daa
cld
push
cwtl
rorl
dec
outsb
lahf
lock
es
in
or
pushf
push
lods
aam
insb
ret
sub
add
insl
mov
dec
cmp
cmpsl
jmp
mov
and
push
mov
mov
mov
pop
shlb
mov
mov
lret
popa
push
lahf
enter
ret
push
mov
mov
sub
jecxz
jp
xchg
mov
stos
cmp
jae
ljmp
enter
or
mov
jecxz
cld
xor
filds
pop
ret
fldl
sub
in
test
dec
sub
sbb
out
or
inc
cmc
fwait
cwtl
and
push
in
jnp
add
inc
dec
cmp
aas
jns
rsm
in
insl
push
xchg
pop
imul
les
mov
inc
or
lods
pop
test
add
mov
rclb
mov
sub
into
and
dec
or
mov
dec
add
mov
stos
test
icebp
xor
out
cmp
and
daa
or
push
lea
mov
pop
and
movsl
adc
pop
jnp
mov
push
in
push
lret
cld
rcr
cmp
dec
jns
fwait
movsl
cli
inc
into
push
jae
lret
push
push
xor
add
icebp
fnsave
mov
insl
test
stos
cmpsb
jb
xchg
pop
lret
loope
and
xchg
dec
scas
adc
test
mov
push
fcmove
mov
es
leave
and
arpl
and
jbe
xchg
or
andb
fiaddl
mov
add
cmpsl
xchg
int3
add
pop
or
lds
xchg
cmp
repnz
sbb
cmp
movsb
xlat
std
adc
jbe
and
jge
mov
adc
mov
sbb
hlt
pop
jl
ret
cmp
push
dec
aaa
jle
mov
ret
jo
jb
scas
shrl
loop
pop
popf
xchg
push
fisubrl
pop
cmpsb
pop
cltd
add
mov
lahf
push
daa
jmp
mov
out
fwait
loope
cmpsl
push
sub
sbb
ret
add
rol
jle
jne,pt
and
fistpl
push
sbb
stos
xor
scas
sbb
add
movsl
js
movsl
es
sbb
hlt
push
push
maskmovq
imull
sub
inc
adc
xor
sub
adc
pushf
leave
adcb
test
and
push
jbe
pop
fldl2e
int
int
sub
xchg
dec
pop
shl
cs
mov
outsb
xor
mov
push
sahf
mov
and
int
and
test
stc
push
mov
fisubl
adc
test
cmp
and
out
jns
mov
inc
mov
cmp
inc
mov
gs
and
cmc
inc
out
out
xor
push
jle
lahf
shr
mov
dec
adc
cmp
add
mov
lahf
push
push
lods
xchg
bound
out
lcall
xchg
jnp
in
inc
xor
sti
fstl
scas
gs
sub
loopne
sub
adc
bnd
roll
adc
adc
push
sbb
mov
lds
sub
sub
add
inc
ret
lcall
loop
nop
nop
insb
sbb
cli
sahf
mov
je
jmp
jecxz
sbb
idivl
int
pop
pop
scas
call
shl
pop
pop
popa
sub
sbbl
jne
push
out
dec
inc
leave
lret
je
loope
pop
mov
mov
sbb
gs
std
adc
dec
cwtl
outsl
jge
mov
xchg
mov
icebp
push
inc
data16
xchg
xor
pop
mov
push
stc
mov
cmp
lock
in
das
ret
pop
scas
mov
xchg
mov
mov
mov
mov
scas
cmp
dec
xor
mov
test
loop
lods
add
mov
bound
and
mov
lahf
rolb
fcomps
test
and
push
bound
mov
xchg
cmp
mov
pushf
or
xlat
push
pop
inc
jb
stos
mov
adc
jle
cmc
xchg
aam
push
push
add
add
call
hlt
xor
in
mov
sbb
sub
xchg
out
push
test
inc
popl
outsb
sbb
inc
bound
movsb
fwait
mov
mov
add
mov
lret
jle
jns
or
in
scas
je
test
sub
mov
xor
xchg
dec
repz
mov
fsubrl
push
mov
dec
xchg
in
sub
das
data16
jo
out
lcall
jmp
xchg
fistpl
out
out
sub
adc
imul
outsl
out
sbb
adc
xor
jbe
in
pop
andl
movsl
xchg
sbb
jge
rclb
inc
fs
xor
mov
sbb
mov
and
add
mov
out
scas
ja
mov
adc
fidivs
iret
push
jg
ret
leave
xchg
ret
push
jae
arpl
addr16
inc
jns
cmp
sti
add
inc
cmp
mov
mov
gs
mov
xchg
ficoms
push
lds
push
rolb
mov
cmp
jo
movsb
bound
ret
movsb
and
fbstp
aaa
cld
out
push
or
fnstsw
jno
sbb
jl
pop
dec
dec
cwtl
dec
and
sub
enter
xor
fisttpll
and
mov
jbe
movsl
je
inc
test
cmpsb
loope
jns
mov
adc
daa
ljmp
loope
data16
fidivrs
inc
mov
movsl
inc
push
sti
and
std
jge
icebp
lret
rclb
add
int3
xchg
scas
sub
ret
in
pop
inc
mov
and
pop
mov
xlat
push
data16
scas
xor
outsb
mov
pop
adc
lock
rorl
sub
adc
repnz
insb
mov
int
or
sub
sub
inc
adc
shrl
movsb
sbb
pop
lret
sahf
pusha
jmp
xor
jg
jae
mov
lock
push
add
fs
jne
rol
shll
inc
inc
cmp
fildl
push
lret
aaa
mov
insb
sarl
sbb
dec
or
inc
jne
add
jle
or
jp
hlt
ljmp
xor
fwait
adc
xchg
dec
add
test
mov
mov
lods
jmp
inc
cmp
mov
lock
mov
sbb
loopw
loopne
push
ds
ljmp
fldln2
out
fdivrp
stos
repz
xchg
xchg
aam
fstps
fistpl
fwait
xlat
dec
cmpsl
ds
adc
lcall
divb
sub
lcall
shll
mul
dec
sarl
xchg
jecxz
add
cli
in
rcl
call
push
xchg
pop
adc
jle
xor
dec
out
int3
fisttpl
push
pop
test
push
jg
outsb
gs
mov
cmp
dec
fdivp
mov
test
pop
roll
notb
xchg
cwtl
sub
movsb
mov
and
icebp
jns,pn
cld
mov
mov
xor
ljmp
mov
mov
dec
aam
imulb
dec
hlt
mov
into
out
xor
mov
jmp
and
dec
xor
imul
testl
and
pop
bound
xchg
pushf
aaa
rcrb
cmpsb
cltd
pop
subb
rcrl
xchg
shrl
sub
fstl
ljmp
hlt
adc
pop
rcll
cs
stos
movsl
adc
xchg
sbb
push
or
xchg
mov
shrl
sbb
dec
ds
icebp
insl
xchg
sbb
dec
cli
push
sub
xchg
sbb
sbb
cmp
add
mov
fwait
mulb
jecxz
xor
test
rolb
add
lcall
out
js
ljmp
xchg
clc
mov
mov
add
andb
pop
mov
ret
out
nop
mov
sbb
mov
or
dec
jbe
adc
jns
mov
ljmp
jl
fucomp
cmpsl
lds
xchg
pop
pop
in
xchg
out
mov
or
paddd
jp
mov
xor
jae
data16
jnp
adc
in
ret
aad
loope
test
jns
xchg
out
shlb
hlt
or
jecxz
push
mov
cwtl
popf
aas
mov
xorps
dec
pop
stos
mov
xchg
pop
outsl
add
lahf
je
orl
push
dec
dec
iret
adc
add
nop
leave
push
xchg
cld
hlt
mov
repnz
inc
jl
mov
push
adc
push
add
ror
rcrl
jle
cli
lods
lret
lds
jmp
mov
jno
cwtl
cmp
orb
in
int
jbe
cltd
and
ds
mov
dec
aaa
mov
push
jl
sbb
jl
enter
and
punpcklwd
ds
xor
scas
xchg
repnz
test
jo
or
out
cmpsb
fs
in
mov
enter
daa
jmp
sbb
dec
sub
daa
push
cmp
adc
ds
mov
call
lahf
mov
out
negl
notl
mov
xor
jecxz
xchg
pushf
js
mov
fisubrl
xlat
cmp
fadd
pop
pop
sub
fsts
lret
sbb
cmp
aam
jno
aas
and
jmp
int
sub
sub
out
cs
jne
mov
mov
sahf
add
rolb
add
mov
jp
stc
fs
inc
adc
scas
sub
daa
pop
inc
cmp
xchg
or
lret
mov
cmp
mov
or
sti
into
out
daa
cmc
iret
test
outsl
jmp
cwtl
ret
cmpb
push
or
fsubrl
mov
cmp
js
jl
mov
sub
jne
mov
std
std
loopne
mov
or
test
and
jne
jmp
xchg
mov
roll
push
fwait
mov
sub
mov
pushf
mov
adc
mov
aad
jmp
nop
and
dec
sub
cmpl
pop
bnd
enter
xor
lea
jo
call
shrb
or
out
cltd
fstpt
add
mov
push
inc
stos
sub
push
jb
jne
mov
xor
mov
xchg
adc
pop
sub
in
dec
mov
mov
mov
cld
jmp
jne
mov
and
mov
add
lock
loop
das
andl
xor
aam
cmp
es
push
insl
jl
dec
sub
sub
in
lods
popa
gs
lods
dec
sub
mov
sarb
or
mov
mov
cltd
xchg
int3
inc
test
cmp
mov
mov
rcr
jl
je
add
mov
mov
mov
dec
pop
xchg
mov
sahf
out
inc
mov
leave
push
mov
lods
adc
or
jecxz
xchg
jmp
mov
push
cwtl
std
dec
popa
xor
test
cmc
dec
xchg
mov
incb
or
sub
dec
fwait
and
jnp
add
xchg
sbb
xor
in
in
xor
mov
dec
fidivrl
je
divb
mov
and
xchg
xchg
mov
test
pop
add
jne
sub
mov
ja
out
pop
shlb
jg
xchg
xchg
sub
sbbl
in
outsb
push
or
xor
addr16
pop
stos
jp
pop
and
aad
rorl
jnp
lods
outsb
jle
mov
aaa
pusha
jl
mov
cwtl
cmpsb
pop
xchg
ret
pop
inc
cltd
dec
inc
out
imul
jns
in
popf
data16
mov
sub
mov
xchg
pop
idivl
loop
dec
imul
scas
cmp
movsl
fstl
nop
sub
iret
fmull
push
leave
test
jne
or
sbb
incl
popa
dec
or
icebp
jl
inc
nop
xchg
xor
and
xchg
xchg
add
int3
sahf
lods
pop
adc
pop
lds
iret
add
xor
mov
les
movsb
js
call
jbe
add
jge
cmp
aaa
jp
ljmp
into
lcall
mov
shll
repz
lods
scas
jo
jle
adc
push
test
cmp
add
cmp
cmpsb
out
inc
in
outsl
mov
enter
daa
call
sbb
loope
push
xchg
in
mov
lahf
arpl
movsl
push
cmp
and
lahf
sar
push
xchg
inc
cmp
cs
add
or
xor
dec
mov
aas
js
test
pop
fidivl
mov
adc
add
insb
push
in
sub
mov
push
mov
shlb
mov
orb
mov
sahf
mov
mov
data16
and
inc
int
xor
sub
cmp
lcall
push
sbb
es
test
and
jbe
mov
cmp
jl
mov
or
outsl
fstps
push
cmp
push
test
testl
cs
jg
cmp
sub
mov
sbb
lret
cmc
xchg
or
stos
add
aad
pop
rorb
aaa
sub
inc
es
mov
data16
cli
mov
pop
dec
cli
stos
les
in
xchg
mov
loop
pop
gs
adc
dec
fbstp
adc
ss
hlt
jecxz
repz
fmuls
cmp
stos
xlat
leave
div
sub
leave
push
pushf
aaa
xlat
icebp
jmp
stc
dec
cs
aad
aad
js
nop
std
or
dec
mov
fldl
inc
mov
shll
jecxz
mov
mov
scas
pop
rol
push
int3
pop
jp
cmp
mov
inc
je
out
xchg
aas
inc
pop
shl
lds
inc
aas
hlt
iret
jp
out
inc
xchg
mov
mov
into
pop
negb
mov
mov
mov
sbb
mov
jb
icebp
fcoml
cld
adc
xor
sub
mov
shl
jle
das
pusha
adc
mov
js
mov
and
mov
imul
sub
push
ja
out
dec
mov
jl
adc
xchg
xchg
mov
xlat
adc
nop
jle
pop
shlb
jae
leave
mov
shlb
push
sbb
mov
adc
pop
ljmp
inc
pop
inc
and
stos
cmp
out
cmpsl
sti
fcoms
xchg
cmp
pop
jae
or
in
sub
and
stc
test
stos
push
xchg
mov
inc
or
jb
fwait
push
xor
push
js
push
add
lods
xor
xor
imul
lret
inc
outsl
inc
xchg
xchg
or
or
gs
das
cs
ja
xor
inc
mov
or
mov
jmp
jne,pt
cmp
mov
sbb
bound
das
jmp
repz
sub
leave
arpl
add
sti
lcall
push
cltd
insb
cmp
adc
cmpsb
jle
dec
sub
js
push
pusha
pop
out
fbstp
mov
pop
ja
and
jae
or
popf
lea
mov
outsb
test
cmp
mov
rcrl
adc
popf
push
imul
iret
cmp
sub
mov
sub
hlt
push
mov
arpl
shrb
scas
and
insb
pop
aam
paddd
fcmovbe
popa
enter
jge
mov
xlat
pop
inc
sub
fiadds
cmp
mov
xchg
pusha
mov
pop
jp
cmp
lods
into
movsb
add
mov
jbe
loopne
jge
cmpsl
stc
sbb
pop
je
cmp
dec
or
push
stos
jno
pop
in
stos
sbb
dec
in
test
aad
lock
dec
xchg
aas
scas
dec
int3
popa
and
xchg
mov
push
mov
jae
push
cli
in
push
add
enter
daa
out
loop
mov
mov
xchg
sub
xchg
dec
jbe
ds
dec
xor
pop
inc
scas
and
lock
filds
dec
sbb
lahf
add
sub
or
sbbb
out
frstor
aad
sbb
push
mov
imul
fcoml
xor
jnp
add
in
adc
and
icebp
andb
mov
pop
mov
dec
repz
push
push
and
or
sti
sbb
sub
sbb
dec
lcall
inc
mov
nop
sahf
dec
xor
test
in
jg
cmp
mov
ret
mov
jl
mov
fldenv
and
outsb
fmuls
or
and
xor
jb
or
push
and
pop
stos
out
xor
clc
in
loop
aas
subb
dec
adc
cwtl
fildl
jne
inc
stos
xor
lods
xor
fisttpll
cli
adc
fisubs
mov
icebp
jne
sti
cltd
or
gs
fsub
in
out
pop
inc
mov
adc
rcr
xchg
mov
int
outsl
call
sbb
mov
xlat
or
sub
mov
pushf
loop
fucomi
mov
mov
nop
fcom
push
dec
jmp
insl
inc
inc
aaa
mov
je
hlt
shl
push
mov
add
and
sub
into
test
pop
sub
lret
cmpsl
insb
pushf
fcmovnbe
aas
popf
pop
xchg
pop
adc
xor
aas
xchg
cwtl
mov
inc
hlt
mov
dec
pop
shll
iret
sbb
pop
mov
jg
pop
pop
jb
sbb
dec
mov
sub
icebp
mov
paddb
ss
lret
pushf
xor
adc
lock
cs
aas
add
sbb
outsl
call
and
clc
fstpl
sub
jle
dec
filds
out
popa
mov
xchg
jo
lods
addb
or
out
lret
fmulp
andl
stos
es
sub
cltd
add
test
js
mov
xor
push
outsb
sbb
pusha
clc
jp
mov
cmp
and
xchg
sbb
pop
in
pop
xor
or
xchg
lock
push
outsl
mov
add
das
or
inc
adc
mov
xchg
pushf
dec
das
add
xchg
sbbb
jecxz
inc
mov
adc
sbb
push
sbb
fwait
add
pop
out
pop
jecxz
xor
js
jns
push
jmp
lret
add
in
insl
mov
inc
ss
ljmp
dec
mov
mov
mov
pop
cmp
jne
mov
mov
into
scas
out
push
mov
bound
pop
scas
xchg
mov
dec
mov
in
cld
dec
sub
add
addr16
pop
cmp
adc
and
sub
jnp
xor
jle
sarl
in
push
jecxz
mov
fs
ss
xchg
push
outsl
ret
inc
add
test
incl
popf
mov
pop
mov
test
mov
xchg
or
jno
cmp
lret
imul
scas
add
pop
adc
ror
lcall
leave
jae
cwtl
hlt
lahf
hlt
ret
sub
inc
test
or
out
aas
inc
mov
sbb
xchg
add
hlt
sbb
pop
outsl
xchg
fsubp
pushf
lds
scas
fcmovnb
in
add
mov
push
dec
cmp
pop
sbb
push
fwait
jge
mov
sbb
pop
xor
fsubr
cli
jno
adc
jl
add
dec
push
cmp
push
mov
outsl
or
dec
mov
and
mov
and
pop
inc
shlb
in
cmp
pushf
nop
daa
out
dec
cmp
sub
sahf
sub
repz
std
dec
inc
orb
movsl
popa
mov
and
mov
cmp
fcomp
add
pushf
sub
jmp
cmpsb
iret
sub
pop
fiadds
fwait
pop
pop
iret
or
icebp
lcall
enter
mov
outsb
cmp
push
adc
pop
aas
xor
je
popf
mov
dec
ds
int3
mov
push
es
push
int
call
xchg
pop
dec
push
pop
lcall
orl
xor
test
sahf
rolb
stos
mov
fists
stc
ljmp
adc
inc
call
fadd
popf
and
lret
mov
cmp
nop
out
nop
sti
fmul
nop
pop
shl
and
shlb
pusha
jo
outsl
xchg
adc
jle
mov
lea
add
ret
data16
lods
pop
dec
mov
lds
cli
adc
shll
fcomps
dec
adc
andl
pop
data16
xchg
adc
push
fxch
dec
dec
les
push
ja
ds
nop
xchg
loopne
adc
cmp
test
lahf
das
pop
adc
mov
jmp
or
repz
mov
push
dec
dec
sti
enter
mov
je
mov
jecxz
dec
jbe
push
push
sbb
pop
xchg
and
dec
cmp
mov
out
dec
xchg
imul
pop
xor
add
inc
sti
loop
aas
xor
jb
jae
mov
aam
imul
adc
std
push
dec
mov
mov
pop
repz
xchg
icebp
mov
lret
or
scas
mov
sbb
lock
repz
push
cli
andb
into
arpl
mov
cmpsb
ret
xchg
es
divl
xor
inc
dec
sbb
pop
cmpsl
in
push
mov
stos
fbstp
mov
adc
cmpsl
and
in
pop
push
mov
loope
aaa
mov
in
xchg
daa
mov
fcompl
mov
jnp
ja
in
ljmp
je
cwtl
imul
out
insl
mov
xchg
aaa
movsb
out
push
dec
cmc
push
lar
addl
lods
cmp
xor
jmp
mov
daa
mov
xchg
test
shll
in
xlat
pop
inc
push
sub
or
sbb
push
mov
mov
jl
stc
lock
mov
mov
xchg
xor
scas
mov
ljmp
movsl
mov
ja
mov
cmc
mov
cmp
adc
scas
mov
jne
out
lea
or
movsl
mov
xchg
mov
out
movsb
iret
sub
sti
inc
dec
addr16
aas
jae
sub
mov
nop
test
insb
adc
jb
cmp
xchg
pusha
dec
loopne
fcomip
add
xchg
cmp
inc
adc
lods
jae
inc
mov
ret
popf
fldt
inc
mov
out
inc
stos
pop
std
adcb
lods
shrb
in
mov
push
imul
mov
ret
mov
hlt
ljmp
inc
mov
subb
les
arpl
fidivrl
icebp
add
sub
pop
sahf
test
mov
scas
xor
or
xor
xchg
mov
movsb
sbb
push
sub
scas
jbe
testb
je
scas
aaa
mov
xchg
or
sub
int3
jl
roll
and
push
fwait
and
xor
add
shrl
int
ret
test
pushf
cmp
inc
dec
fsubs
call
out
enter
daa
in
dec
cmp
inc
mov
mov
pop
sub
xor
sarl
mov
test
lahf
sbb
xchg
add
bound
xchg
lahf
js
add
fisttps
xchg
movsb
lret
or
sub
insl
aas
mov
outsb
lahf
imul
rcrb
aaa
mov
xor
movsl
addb
mov
lahf
pusha
and
pop
push
sub
int
cltd
jno
and
out
pop
int
or
mov
sub
sbb
shlb
vpmacssww
and
sbb
stc
mov
fistpl
adc
xor
std
cmp
xor
testl
mov
ud2
call
into
jae
cmp
jmp
and
mov
in
loop
mov
imul
inc
add
cmp
pop
outsl
mov
jbe
inc
js
mov
push
pop
sti
neg
out
dec
and
mov
loopne
dec
mov
adc
jg
les
jnp
xchg
mov
jge
cmp
push
repz
xchg
jg
adc
mov
pushf
cmp
xchg
jmp
cmp
stos
aad
js
nop
mov
loopne
insb
mov
mov
sub
int3
mov
ret
shrl
pop
add
int3
outsb
mov
test
jge
mov
pop
fmul
xchg
inc
repz
inc
push
bnd
shll
mov
out
pop
adc
aam
ror
fwait
xor
jecxz
pop
std
sti
lods
xchg
cwtl
rol
or
mov
mov
icebp
popa
cmpsl
mov
lret
jp
add
mov
lret
jl
std
repnz
mov
pop
pop
sub
ret
push
and
insl
sbb
fisttpl
repz
cmpsl
in
pop
mov
shl
lods
addb
mov
in
jae
mov
sub
adc
clc
add
mov
int
push
hlt
add
fstpl
clc
lock
xchg
mov
mov
roll
pop
inc
dec
or
rol
mov
jle
xchg
push
and
cli
aad
xchg
rclb
and
sti
xor
call
movsb
xchg
adc
dec
std
subl
xchg
rcrl
mov
mov
or
adc
popa
jle
add
std
lock
lcall
sub
jns
push
lret
and
xchg
orl
mov
pusha
pop
dec
ja
rclb
mov
bound
call
inc
jne
lret
cltd
mov
je
out
aam
out
pop
adc
inc
xchg
push
sbb
push
out
mov
sbb
test
addr16
cmpsl
cmp
sahf
hlt
and
fnstenv
jnp
int3
out
pop
mov
add
call
xlat
adc
sbb
or
jae
inc
push
test
popf
add
cli
push
es
push
xchg
mov
inc
sahf
imul
scas
leave
andl
mov
iret
pop
loope
ret
pop
leave
popa
push
jmp
xor
mov
hlt
or
fstpl
inc
mov
inc
and
bnd
int3
jb
mov
fisubrs
add
ss
and
adc
cmp
or
movsb
xchg
push
ja
push
add
jae
sbb
jp
aaa
jbe
pusha
or
pushl
ljmp
xor
push
jle
repz
pop
pushl
scas
in
mov
and
dec
test
addr16
roll
fisubs
or
enter
daa
in
sarl
dec
adc
sub
dec
in
pop
inc
ds
push
movsl
outsl
mov
jae
cmp
xchg
lods
cmp
or
in
xor
xchg
pop
sub
pop
js
sbb
push
faddl
push
jo
scas
fcompl
mov
sub
outsb
add
js
adc
push
sbbb
gs
xchg
and
clts
sub
push
int
das
pop
sub
cmp
aaa
sub
mov
loopne
stc
test
rolb
mov
jg
lods
cmpsb
mov
cmp
pop
ss
cmpsl
mov
mov
cmp
cmp
ss
lret
imul
push
inc
decb
outsb
outsb
aas
into
push
or
push
sub
outsl
inc
loopne
loop
shl
jbe
dec
adc
xchg
push
add
sti
xchg
pop
mov
mov
ret
out
in
psubd
mov
xor
mov
outsb
or
loopne
jmp
movsl
adc
lahf
neg
aaa
push
sbb
and
adc
xor
sbb
cmp
enter
hlt
push
adc
inc
pushf
jecxz
jmp
xor
rcll
mov
inc
jg
xchg
xor
sbb
fisttpl
sbb
or
mov
lcall
pop
inc
xor
lcall
int3
mov
jnp
lods
inc
jp
dec
inc
xor
mov
mov
ljmp
mulb
mov
rcrb
lods
mov
cmp
icebp
lret
jmp
sbb
mov
int3
mov
or
and
fsubr
shlb
push
xchg
aam
jae
ret
movsl
sub
es
int
push
mov
adc
and
popa
fmuls
jne
xor
adc
push
pop
je
repz
inc
mov
dec
fbld
rorb
cltd
movsl
in
test
leave
mov
push
mov
xchg
fnstsw
fucomi
clc
sub
cmp
shl
rcrl
dec
stos
aas
cmc
lret
out
xor
fstl
add
pop
xadd
push
add
jno
push
cmp
jg
cmp
sub
out
inc
test
dec
mov
sbb
or
arpl
or
loope
fwait
adc
push
add
dec
add
sbb
pushl
sbb
xor
aad
jns
lds
insb
mov
xchg
shl
push
mov
xchg
xor
sbb
dec
cwtl
scas
es
mov
imul
mov
insl
pop
jne
outsb
arpl
mov
stos
out
mov
in
xchg
pop
pop
ret
subl
out
dec
popa
sub
icebp
loope
addr16
xchg
cmpl
inc
xor
stos
jnp
mov
ja
xchg
insl
cmp
and
fbstp
lods
add
push
lcall
jae
mov
popf
sub
test
testl
xchg
adc
fisubrs
aad
scas
sub
repnz
testl
iret
mov
popa
ret
adc
fdivr
pop
hlt
subb
arpl
gs
mov
or
pop
dec
fiaddl
fcomps
lahf
push
add
and
pop
cld
cmp
lds
into
je
aas
xchg
push
arpl
fdivrs
add
das
ljmp
dec
sbb
push
jl
xor
rcll
jno
or
dec
mov
mov
jo
cmc
mov
repz
test
xor
xor
cmpsb
jbe
inc
in
repnz
inc
enter
daa
jecxz
aam
jle
mov
jecxz
je
and
cmp
imul
movsl
jbe
sub
lahf
pop
lret
insl
push
mov
insl
sbb
cmpsl
add
ljmp
sbb
push
pop
push
xor
leave
out
pop
adc
pop
cmpsl
push
xor
ret
test
sub
xchg
xchg
outsb
gs
imul
sbb
push
pushf
mov
jge
push
das
add
int
test
sub
jecxz
pop
lret
arpl
lcall
mov
cmp
sbb
ret
pop
sahf
aad
push
mov
xor
jg
inc
popf
mov
cld
pop
stc
paddw
fs
pushf
adc
lods
in
mov
or
testl
xorl
call
arpl
fisttpll
into
cmp
hlt
cmc
jns
shll
jno
arpl
loopne
loop
test
adc
aaa
cmp
mov
lods
data16
nop
lods
int3
and
out
lcall
dec
lods
gs
popf
imull
xchg
out
gs
ror
loopne
sahf
push
pop
ret
stc
loop
lret
mov
outsb
sarl
sub
rep
push
adcb
icebp
push
cmp
hlt
xlat
add
push
sub
fs
adc
mov
jmp
jmp
push
aad
pop
cli
nop
inc
xlat
inc
dec
rolb
inc
xchg
rsm
dec
adc
dec
je
jp,pt
ljmp
lea
repnz
lret
pop
stc
cwtl
clc
adcl
fistl
or
inc
add
pop
inc
dec
dec
test
pavgw
mov
jne
call
insl
js
imulb
insl
std
dec
sbb
mov
pushf
pop
mov
jmp
add
pop
mov
mov
lock
push
mov
dec
pop
aad
pop
scas
mov
cmp
mov
ret
or
ret
pop
push
inc
popa
out
pop
cmp
subl
cmpsl
or
xchg
push
in
pop
imul
rcrb
lret
pop
cltd
fmull
adc
jnp
push
jp
jns
data16
data16
sbb
xor
xchg
shl
mov
or
xchg
adc
or
icebp
push
out
mov
and
adc
xor
fisttps
mov
xchg
or
lret
pop
mov
or
inc
sbb
sub
cmpsl
aaa
incb
xor
dec
call
xor
xor
fldl
notl
xchg
mov
fwait
sti
mov
pop
sub
fs
xchg
mov
pop
mov
adc
jl
stos
sub
mov
imul
adcl
cmp
clc
push
shrb
in
lea
addr16
add
and
pop
imul
jnp
jae
jle
outsl
xor
fwait
xchg
sbb
pusha
sbb
xchg
xchg
mov
outsl
pop
mov
stos
inc
xor
jae
adc
push
or
push
pop
and
push
movsb
mov
stos
mov
sub
in
inc
imul
test
push
ds
aas
adc
and
ret
lock
dec
dec
in
hlt
lret
in
arpl
and
or
rol
lret
inc
mov
mov
push
push
popa
add
xchg
dec
test
sub
pop
lds
rcrb
mov
mov
push
cmp
mov
test
cmp
sbb
hlt
add
or
dec
xchg
imul
pop
push
inc
stc
or
adc
mov
and
pop
gs
std
push
inc
cld
xlat
andb
fistps
enter
daa
loop
inc
cmp
outsb
stos
sub
icebp
inc
cmp
fwait
inc
movsl
jge
insb
and
cmp
jp
out
mov
ret
lods
pushl
daa
xchg
enter
mov
push
xchg
jns
push
sbb
fsubrl
dec
sub
sbb
outsb
enter
mov
out
enter
dec
dec
hlt
add
orb
adc
xchg
mov
push
xor
clc
int
add
or
lcall
mov
and
test
push
loop
sahf
js
enter
out
sarb
jg
loopne
mov
repz
stc
jcxz
mov
jno
ss
mov
fbstp
fdivs
push
nop
lret
mov
shll
test
dec
lock
into
sbb
movsl
cmc
inc
ficoms
xor
xor
cld
loop
outsl
sti
imul
add
jmp
lods
mov
fmull
ror
cli
fnstsw
mov
or
dec
mov
cwtl
gs
stos
mov
jmp
ds
loop
sub
fldenv
xorb
jp
icebp
xchg
in
cwtl
cwtl
sbb
mov
not
inc
dec
adc
imul
pushf
cmp
jmp
gs
cs
adc
pop
or
inc
movsl
pop
mov
aam
je
and
jecxz
aam
adc
fld1
nop
push
fcmovnb
dec
sub
pop
lods
mov
sub
movsl
adc
ret
pop
rcrl
inc
addr16
add
scas
mov
mov
adc
mov
add
rcl
mov
cli
sbb
lock
pushf
cwtl
add
push
mov
aas
cli
cld
push
sbb
lret
lock
adc
lock
das
lcall
sub
xchg
aam
cmp
ret
ret
or
insl
int
add
enter
aad
mov
push
int3
jb
ret
jg
mov
popf
jg
and
xor
shl
je
cltd
adc
cmpsl
test
dec
std
mov
cmp
push
cmp
mov
clc
mov
sahf
lret
ljmp
jecxz
inc
in
stos
sbb
and
mov
mov
jle
addb
add
mov
fsubrs
popf
dec
loope
xor
shrb
fstpl
mov
sub
cltd
xchg
push
outsb
mov
nop
add
dec
gs
pushl
cs
ror
mov
lret
jo
mov
popf
adc
mov
xchg
mov
out
jle
push
mov
sub
mov
subl
mov
inc
jne
loopne
mov
test
bound
jl
pop
int
xchg
mov
lds
jnp
cwtl
sub
out
es
testl
in
xchg
movsl
insb
mov
in
mov
in
sbb
pusha
mov
adc
sarl
jae
loope
push
into
cli
fcomps
shl
jne
jecxz
icebp
stos
and
cli
xchg
mov
cld
jge
stc
int3
xchg
test
iret
jne
mov
cs
leave
movb
push
hlt
mov
rclb
or
dec
ficoml
fiaddl
lds
pop
pop
fiaddl
adc
fld
lret
xor
mov
or
adc
jo
loop
inc
lods
or
adc
jbe
xchg
adc
inc
imul
mov
cmpsb
or
mov
cmp
fs
push
daa
sub
xor
jo
in
scas
mov
inc
test
enter
mov
mov
rolb
loope
push
cmp
scas
sub
adc
sub
and
push
and
test
adc
pop
pop
inc
sbb
ret
imulb
sahf
testb
aas
inc
clc
pop
xchg
and
loope
lods
push
jne
lods
fcompl
bound
adc
jmp
shlb
jb
adc
pop
mov
mov
xor
and
push
ja
gs
fwait
sub
stos
pop
lcall
dec
mov
loop
sbb
sbbl
int
test
lds
mov
sbb
aas
fs
test
cwtl
js
ss
cmp
fsubrs
cmc
testl
test
cmp
lea
mov
xor
cmc
pop
jnp
xor
pop
lea
jmp
loop
adc
imul
inc
add
mov
sub
mov
out
subb
xchg
leave
mov
jae
or
mov
xlat
js
cmpsb
in
loopne
inc
sub
mov
adc
fdivl
pop
repz
mov
adc
or
xchg
cmp
inc
nop
xlat
or
sub
popa
cltd
adc
cmp
movsl
push
movsb
sbb
aad
inc
adc
and
xor
add
xor
or
hlt
adc
push
call
enter
pop
jl
addl
cmp
pop
sbb
lar
aas
dec
mov
nop
mov
mov
sbb
out
leave
es
xchg
sbb
cwtl
mov
add
push
cld
inc
popl
ss
jl
sbb
mov
sbb
incb
loop
inc
sub
call
imul
fucomp
es
dec
dec
add
jmp
mov
sbb
sti
inc
mov
sarb
or
int
and
test
push
push
dec
movb
jle
add
mov
pop
clc
fdivl
movsb
ljmp
test
stos
stos
or
xchg
out
pop
sub
push
xchg
and
paddusw
and
add
jns
lods
data16
rorb
cltd
fstpl
rcrl
or
sbb
inc
dec
inc
cmp
daa
adc
in
shrb
xchg
pop
jae
imul
dec
xor
push
push
jns
sti
xlat
in
push
adc
mov
jmp
mov
dec
lods
sub
dec
jno
movsl
mov
scas
jnp
in
mov
inc
dec
jno
jle
jmp
cmpsb
mov
mov
out
push
mov
bound
rol
xchg
add
adcl
pushf
out
mov
sub
loop
addr16
outsl
movsb
jp
and
and
hlt
push
insb
sub
dec
jle
cmc
ds
or
fists
xor
clc
push
sbb
fwait
jae
repz
push
xchg
adc
cmpl
xchg
jno
xchg
push
dec
sbb
loop
imul
loope
push
push
int3
adc
ret
jb
ret
fmulp
cmp
push
clc
arpl
adcl
inc
mov
fidivrl
sub
push
mov
mov
pushf
fidivs
stos
test
sbb
xor
outsl
push
cmp
std
mov
lret
adc
cmpsb
sbb
popa
lret
bnd
mov
aam
test
fchs
dec
out
push
lahf
push
or
xor
lret
push
push
scas
push
sti
pop
test
xchg
xor
inc
sbb
dec
in
cmpsl
or
enter
push
cmp
dec
loope
cltd
mov
cmp
imul
and
jle
lahf
mov
push
inc
sbb
mov
add
sub
xor
xchg
loope
popa
scas
or
loop
js
lret
rorb
jae
int3
pop
sahf
fadd
cld
jno
add
outsb
mov
out
ds
sarb
pop
or
cwtl
and
add
mov
lods
mov
mov
xchg
push
cmp
xchg
int
insb
push
sub
adc
lcall
aad
stc
popa
lahf
sbb
cmp
xor
jmp
and
mov
jnp
stc
xor
dec
rcrl
cwtl
andb
mov
mov
sub
testl
and
jg
cmp
mov
loope
loop
sahf
cmc
into
jnp
xor
mull
push
out
rcll
lret
andl
cmp
insb
out
mov
jmp
mov
movsb
in
fimuls
daa
cli
das
test
test
loopne
xor
pop
and
test
fsts
sbb
les
repz
cmpsl
xchg
jb
xchg
sbb
sub
outsl
xlat
rcr
sub
inc
adc
stos
cmp
test
xor
out
repnz
dec
test
sub
xchg
dec
dec
jns
mov
jecxz
mov
sbb
and
xchg
movl
dec
sbbl
mov
inc
pop
pop
nop
sub
sub
dec
aas
in
test
mov
push
mov
or
mov
js
fidivs
xchg
div
xchg
pop
sar
lret
movsl
gs
mov
xlat
mov
fcomi
lock
aam
pop
or
sub
cmpsb
adc
ret
loope
push
insl
fwait
xchg
cmpsl
filds
das
popa
xor
xchg
lods
cltd
dec
mov
jecxz
bound
push
pop
in
cwtl
fs
cltd
orl
mov
jge
push
ret
xor
xlat
clc
pop
xchg
xchg
icebp
jo
ljmp
and
jno
sti
xor
out
mov
insl
lahf
push
insb
add
add
sub
xor
das
mov
cmp
dec
add
int3
test
es
xchg
pop
incb
or
fwait
int3
or
nop
repz
test
lods
pushl
jle
jns
add
push
add
and
mov
pop
xor
ja
mov
add
ljmp
mov
orl
jne
mov
sub
das
mov
lock
dec
xchg
clc
andl
imulb
fisttpll
lret
imul
inc
xlat
and
jbe
insb
xchg
out
jnp
sub
jle
daa
repnz
pop
xor
xchg
loope
scas
sub
aaa
pop
das
or
inc
push
dec
pop
jae
dec
nop
push
push
movsb
in
lds
and
adc
insl
push
data16
fwait
xor
aam
scas
mov
outsl
add
inc
fnsave
xor
fadd
push
ja
leave
mov
popf
hlt
lods
or
arpl
outsl
pop
or
inc
mov
mov
add
scas
sub
or
mov
pop
es
inc
shrb
pop
repnz
hlt
cmp
fisubrs
jle
pop
rorb
add
push
jbe
sbb
adc
sbb
mov
aaa
xor
ss
notb
dec
pop
popf
mov
xor
es
ja
inc
rol
and
cmp
test
pop
xchg
or
test
xchg
in
mov
enter
daa
fbld
pop
cmp
mov
sub
and
jne,pt
insl
movsl
xchg
movsl
inc
and
dec
push
push
add
mov
xor
lods
pop
out
in
js
call
xor
jne
push
and
jle
repz
mov
adc
pop
stc
adc
cmp
mov
xor
mov
ja
and
icebp
rolb
cmp
int
jbe
sub
jmp
repnz
int
in
in
in
mov
popa
call
pop
adcb
outsb
jg
lret
in
mov
push
popa
stc
jmp
jae
pop
and
ss
add
cmp
in
sub
add
lret
mov
cmp
mov
cltd
jae
into
lds
cmc
xchg
loopne
xor
fisttpl
loop
cld
imul
mov
loop
in
mov
lods
push
adc
pusha
cli
jbe
xchg
dec
mov
pop
sbb
xchg
loopne
cmp
pop
aas
cmpb
dec
es
repz
int3
xchg
xor
mov
cmp
xlat
add
sub
jp,pn
sbb
jne
dec
jno
cs
lret
aad
add
nop
mov
cmp
jns
inc
fisubs
lea
adc
je
xlat
jecxz
test
sbb
jge
sub
jo
mov
das
jmp
dec
incl
rcrb
stc
roll
insl
inc
mov
insl
push
jb
mov
and
sbb
shrl
les
std
in
lods
cwtl
xor
lea
jp
stc
icebp
imul
xchg
notl
adc
outsl
mov
call
lock
and
daa
or
ret
jo
or
inc
xor
and
dec
stc
rolb
jecxz
leave
popa
dec
notl
add
ss
push
pop
inc
and
add
leave
pop
out
fwait
shrb
pop
cltd
mov
mov
mov
push
imul
add
test
xor
movsl
rorl
cs
inc
repnz
stos
ljmp
xchg
sub
or
cmc
ret
out
add
or
ss
mov
mov
lock
xchg
dec
mov
sarb
xor
jecxz
or
iret
inc
fwait
sti
mov
add
lahf
out
push
shrb
sub
jns
test
in
data16
xchg
pop
mov
mov
xor
mov
ret
ja
ret
fmull
jnp
mov
and
inc
nop
cli
mov
push
inc
dec
aaa
stos
pop
jne
js
mov
dec
scas
out
push
ror
int
xor
inc
ret
push
mov
xorl
out
jmp
orb
add
or
sbb
mov
jnp
bnd
das
dec
pop
in
push
sub
and
pop
mov
add
inc
pop
or
push
pop
cmpsl
popf
in
mov
aam
mov
repnz
xchg
les
add
imul
shrl
pop
mov
adc
push
xchg
shr
ret
test
hlt
notl
repnz
rcrl
mov
add
ficompl
or
or
push
add
fdivrp
or
rol
sbb
add
pop
movsb
out
mov
jbe
or
jge
pop
sbb
out
imul
shlb
push
orl
insb
int3
xor
xor
xchg
shlb
inc
push
sub
inc
cmp
shll
jne
jle
divb
daa
fiadds
nop
loope
push
mov
das
cmp
leave
ds
imul
push
adc
lahf
idiv
xor
loopne
sbb
add
cld
or
arpl
pop
push
int
js
lcall
cmp
push
jp
paddusb
scas
sbb
loop
xor
leave
cmpsl
adc
xor
in
orb
mov
xchg
cli
and
cmp
push
ds
int
arpl
jle
loop
inc
jae
lcall
mov
sbb
pop
cmp
bound
int
mov
aam
stc
mov
cmpsl
adc
or
cmp
lahf
xchg
mov
lret
sub
sub
dec
or
daa
and
test
div
pop
test
jp
jle
vmovshdup
std
imul
add
inc
fimuls
dec
stos
into
mov
es
mov
iret
mov
mov
xchg
sti
rcr
incb
frstor
out
icebp
loopne
push
fcomps
out
cwtl
adc
and
les
in
repz
mov
clc
shll
subb
cmp
jp
sub
and
jo
rcrb
std
xchg
cs
xor
jge
xchg
nop
mov
inc
icebp
out
dec
dec
addr16
popf
sti
cwtl
jecxz
popf
mov
push
dec
add
xchg
fimull
call
inc
pop
test
js
xchg
addl
jae
jle
test
push
insb
inc
movsb
mov
inc
rorl
or
pop
dec
mov
sub
mov
clc
lds
mov
inc
test
iret
add
mov
lahf
icebp
inc
add
lret
sub
mov
in
mov
cmp
out
das
push
xor
mov
push
push
push
shlb
repnz
insl
imul
or
mov
clc
subl
lret
mov
sbb
mov
lcall
pop
mov
inc
inc
mov
dec
jne
xchg
jnp
jmp
xchg
outsl
push
mov
jae
leave
shll
sahf
push
stos
fldenv
out
test
setne
popf
push
and
int3
psubd
add
push
and
xor
add
cmp
into
iret
call
xchg
int
inc
or
loope
fwait
sub
push
xor
add
mov
in
push
xor
or
jns
cmc
iret
in
in
cmp
test
pop
lahf
pop
jge
xlat
ja
addr16
dec
dec
repz
cwtl
adc
insl
mov
mov
ljmp
inc
jae
mov
mov
out
in
out
bound
push
xchg
loope
fldl
xchg
stc
sub
rcll
lock
test
and
pop
insb
push
push
jnp
jl
jle
mov
pusha
and
add
pop
popf
push
inc
push
shll
adc
jne
mov
xor
stos
lock
sbb
fcompl
mov
mov
inc
scas
jle
add
mov
loopne
iret
icebp
mov
jp
sbb
mov
jne
arpl
cmpsl
cmp
cmp
add
xchg
mov
rorl
add
sub
int3
jle
push
dec
xlat
ficomps
outsl
mov
loopne
xlat
mov
push
fwait
cmp
movsb
jno
enter
pushf
jbe
jo
jge
es
aaa
scas
mov
or
dec
jno
loopne
pop
jb
dec
cmp
xchg
push
mov
xor
fcompl
scas
add
pop
xchg
test
hlt
dec
lret
jl
cmpsb
mov
pop
add
daa
mov
loope
out
sub
adc
dec
ljmp
and
xor
test
jmp
add
divl
xor
sub
cmp
loope
pop
fiadds
lods
cmp
push
rol
insl
fadd
stc
sub
dec
scas
outsb
mov
sbb
sysret
xchg
sbbb
fisttpll
cmc
or
loope
outsb
push
inc
addr16
add
sub
lcall
mov
sbb
pop
sahf
cmpsl
sbb
lea
inc
xor
pop
sbb
fs
xchg
aam
inc
ss
mov
pop
mov
lret
mov
cmp
fiaddl
ja
movsb
into
mov
cmc
and
mov
outsl
pop
xor
imul
decb
leavew
fistpll
flds
push
xor
sub
fdiv
lock
pop
xchg
sbb
outsl
lret
arpl
fnstsw
bnd
pop
jge
xor
mov
sub
les
jo
test
pop
xchg
mov
scas
pop
cmp
jns
xlat
jle
inc
sub
mov
pushf
nop
or
jmp
dec
dec
cs
lcall
cmp
out
inc
add
mov
je
and
inc
stc
popf
and
ret
and
call
les
test
aad
jle
lods
xor
push
inc
sub
jmp
out
cmp
leave
dec
mov
jg
mov
mov
pop
roll
inc
idiv
mov
cwtl
test
or
pusha
sti
sbb
sbb
xchg
cld
in
scas
mov
repnz
mov
jle
mov
das
cmc
dec
sub
sub
repnz
es
jp
insl
push
push
pop
dec
out
mov
xchg
jns
test
mov
mov
and
inc
mov
and
shrb
test
out
mov
in
push
or
lock
cmp
jnp
xchg
scas
mov
sar
mov
fsubrs
call
cwtl
enter
jg
pop
push
xlat
add
imul
mov
or
xor
lahf
lods
xchg
arpl
adc
fwait
pop
mov
out
add
aad
call
pop
movsl
jns
out
in
pop
xchg
sti
loop
mov
cmp
mov
cmp
ja
mov
dec
cmp
es
mov
scas
inc
or
mov
sbb
int3
add
loope
jmp
lods
in
imul
stos
and
sbb
ja
jp
out
and
sub
xor
leave
fwait
jle
jb
in
movsb
and
jnp
fisttps
arpl
aam
jno
jae
in
in
loop
push
popf
or
popf
cmp
mov
push
push
or
pop
xchg
jb
pop
sbb
shrb
movsb
push
clc
scas
loope
cmp
call
orb
lea
push
hlt
lea
mov
int3
and
or
mov
pop
inc
test
hlt
add
cmp
pop
inc
push
fiadds
adc
outsb
jns
sar
fs
test
int3
cmp
mov
movsb
cld
shl
push
out
pop
jns
sbb
sbb
sbb
mov
aaa
outsb
std
inc
or
fs
loope
jl
mov
xor
xchg
pop
je
pop
mov
aaa
loop
scas
in
pop
and
xor
dec
push
mov
add
or
dec
in
inc
sbb
daa
repnz
ret
int3
loope
popf
call
cmp
lret
cmc
fimuls
leave
movsl
cmpsl
jnp
and
pop
pop
push
jnp
dec
sbb
adc
add
sbb
xor
movb
adc
cmpl
push
icebp
push
test
push
sub
enter
outsb
sbb
adc
ljmp
xorb
mov
xchg
sbb
inc
sarl
push
inc
push
lret
int
ljmp
inc
loop
lcall
cwtl
mov
mov
sahf
dec
cmpsb
mov
andb
jg
fnstcw
sbb
pop
pop
pushl
cld
mov
adc
idivl
sbb
ret
aas
ljmp
fnstenv
cmc
ljmp
outsl
cmp
fucom
cmp
cmc
imul
lock
inc
mov
lods
sbb
and
out
int3
lahf
cli
jnp
mov
mov
sti
push
jp
incb
call
jmp
pushf
sarb
xchg
repz
pop
inc
les
inc
repz
dec
lahf
xchg
jle
sbbb
jns
xlat
mov
sub
push
std
sub
cmp
mov
xchg
lcall
inc
fadd
dec
add
pop
dec
push
adc
je
pusha
push
push
cltd
test
and
call
call
inc
lea
xorl
mov
fcompl
mov
mov
into
inc
or
jg
push
mov
xchg
and
sub
rcll
mov
xchg
cwtl
fs
mov
xchg
mov
xchg
icebp
lock
cld
sbb
lret
popa
jg
mov
sub
lock
movsl
das
aam
sbb
or
insl
aam
jns
ret
sbb
int3
insl
aaa
pop
ljmp
sbb
jl
and
lretw
lods
inc
shl
mov
outsl
int3
mov
mov
inc
sbb
in
lock
pop
imull
mov
cmp
fnsave
xchg
clc
add
or
pop
subl
jne
pop
inc
je
stos
mov
dec
out
dec
pushf
lds
fadds
xchg
push
add
mov
xor
xchg
dec
mov
inc
sub
xchg
test
inc
stos
xchg
adc
or
xorl
add
lock
jns
jp
in
cmc
xchg
xchg
dec
pusha
gs
imul
pop
repz
mov
dec
xor
fnsave
ret
sub
dec
loopne
jne
xchg
push
mov
rcr
stos
push
mov
jmp
ja
repz
xchg
lea
and
leave
jno
cmp
sub
push
and
lcall
jae
in
test
pusha
pop
inc
pop
fildll
out
cmp
jns
test
or
inc
jle
and
dec
insb
push
pusha
addr16
popa
mov
cmpsb
push
pop
imul
xchg
leave
scas
repnz
lret
xchg
adc
scas
inc
cmp
pop
adc
add
leave
nop
imul
inc
cmpsb
scas
xchg
or
xor
inc
add
aaa
out
cmp
int3
mov
xchg
pop
je
cs
insb
sti
vcvttpd2dqy
mov
sti
adc
movsb
xchg
mov
ds
jbe
xchg
push
jge
out
rcrb
ret
aaa
sub
mov
jl
cmpsb
or
aas
fimuls
jns
ret
bound
js
scas
ret
mov
test
mov
in
std
cmpsb
mov
out
sub
mov
daa
fcmovnb
cmpl
fwait
js
sub
dec
mov
add
movsl
scas
xor
and
dec
cmp
add
sub
xor
cmp
xor
mov
fiaddl
pop
or
lret
push
fcompl
outsb
cmp
scas
pop
xchg
cmp
sbb
lds
out
imul
push
pop
mov
in
fisubs
jmp
mov
sub
cs
lcall
pushf
mov
sub
sahf
in
and
jge
ljmp
pop
inc
or
sahf
adc
stos
ss
test
clc
cwtl
add
sarb
popa
idiv
add
test
inc
loop
fnstcw
or
and
push
cmp
push
xor
sbb
loop
cmp
adc
xor
fisubl
ds
lods
add
sbb
mov
fadds
cmc
mov
pop
test
jnp
loopne
adc
mov
pop
sbb
es
push
repz
jl
inc
inc
jmp
cmp
add
cld
enter
cmp
pushf
out
imul
or
les
negb
push
xor
xchg
out
dec
pop
arpl
sub
popa
je
nop
bound
daa
pop
cmpsb
leave
gs
in
dec
and
ret
pop
xchg
push
in
or
pop
dec
stos
out
mov
pop
sub
inc
and
in
aas
pop
cmp
jb
adc
int
in
mov
subl
test
pop
jns
mov
mov
inc
icebp
pop
cld
inc
mov
inc
mov
jl
cmpl
lock
mov
mov
fbld
add
mov
outsl
push
add
lods
insb
mov
push
xchg
xor
dec
jmp
in
cmpsl
fcmove
mov
popa
cmpsl
rol
lods
mov
std
mov
xchg
test
and
outsl
mov
pop
arpl
shlb
cmp
test
fbstp
xchg
mov
and
ds
pusha
xchg
sub
mov
int3
orb
insb
push
pop
icebp
pushf
arpl
scas
pop
addr16
inc
test
fwait
aam
add
sub
lret
xor
xchg
cmp
mov
sub
xchg
xor
sahf
ret
test
roll
fwait
mov
stos
push
mov
push
cmc
add
xchg
xor
in
jns
mov
in
js
xchg
cltd
and
mov
or
push
pop
scas
cmp
dec
and
sarl
inc
or
push
jne
mov
sub
sbb
mov
stos
push
out
mov
adc
cmp
mov
pop
orb
stos
test
cmp
mov
lret
mulb
fisttps
stos
xchg
dec
imull
inc
inc
pop
inc
mov
mov
out
push
and
pop
popf
mov
mov
pushf
dec
sub
dec
fs
xchg
and
adc
test
imul
lods
push
jbe
arpl
mov
inc
iret
push
lds
mov
leave
pop
fcmovnb
hlt
and
cmp
or
stos
mov
dec
rolb
imul
mov
and
shlb
lods
mov
dec
fwait
inc
cmp
popa
movsb
adc
cli
push
lea
jge
stos
out
jge
mov
or
xchg
jno
xchg
fnstcw
dec
mov
dec
xor
in
and
scas
mov
mov
push
push
popa
movsl
inc
je
xlat
cmpsb
adc
ret
mov
cli
cmp
ret
loope
ja
sub
lods
sbb
xor
push
movsl
mov
and
iret
push
and
sbb
fwait
mov
in
mov
lahf
test
pop
mov
cmp
sub
pop
dec
inc
push
mov
fadd
add
sub
idiv
adc
mov
testb
test
hlt
mov
pop
jb
push
std
lods
push
dec
mov
out
sub
adc
inc
popa
test
sbb
lds
sahf
nop
xchg
jmp
sbbb
sub
ret
cmc
and
fs
sbb
adc
cmp
lahf
mov
fmuls
jae
lret
sbb
mov
dec
or
pushf
std
into
xor
leave
cmc
js
inc
xor
insl
loop
dec
xchg
imul
sbb
mov
pushf
or
inc
mov
pop
cli
jne
push
mov
pusha
or
fsin
int3
jle
xlat
jb
loopne
jnp
pop
fcmovb
aam
ss
fstps
pop
les
mov
je
sbb
mov
mov
clc
xlat
cmp
add
add
imul
inc
