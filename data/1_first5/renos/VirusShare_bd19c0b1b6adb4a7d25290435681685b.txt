xor
xor
data16
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
xor
push
mov
push
mov
mov
mov
pop
pop
ret
mov
push
mov
add
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
cmp
js
sub
dec
mov
and
xchg
cmp
jle
lea
mov
xchg
sub
and
dec
jmp
and
mov
xchg
xchg
and
mov
dec
lea
push
call
movl
movl
mov
push
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movb
mov
push
mov
push
call
add
cmp
ja
mov
sub
xchg
mov
lea
xchg
lea
mov
lea
mov
mov
xchg
mov
and
inc
lea
and
mov
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movb
mov
push
mov
push
call
movl
movb
mov
push
mov
push
call
xchg
cmp
jno
mov
mov
sub
cmp
jg
xchg
xchg
lea
xchg
add
add
lea
lea
mov
mov
xchg
add
movl
movl
mov
push
mov
push
call
cmp
jnp
xchg
mov
lea
mov
sub
xchg
mov
add
dec
xchg
lea
xchg
mov
sub
xchg
xchg
mov
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
movl
lea
push
mov
push
call
lea
push
call
movl
movb
mov
push
mov
push
call
movl
lea
push
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
add
cmp
ja
mov
sub
xchg
mov
lea
xchg
lea
mov
lea
mov
mov
xchg
mov
and
inc
lea
and
mov
movl
movb
mov
push
mov
push
call
mov
pop
ret
lea
push
mov
add
lea
push
call
xchg
cmp
jge
and
xchg
lea
mov
lea
lea
lea
add
mov
mov
sub
sub
mov
and
xchg
add
inc
lea
push
call
xchg
cmp
jno
mov
mov
sub
cmp
jg
xchg
xchg
lea
xchg
add
add
lea
lea
mov
mov
xchg
add
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
lea
push
call
cmp
jnp
xchg
mov
lea
mov
sub
xchg
mov
add
dec
xchg
lea
xchg
mov
sub
xchg
xchg
mov
movl
lea
push
mov
push
call
movl
lea
push
mov
push
call
cmp
jnp
xchg
mov
lea
mov
sub
xchg
mov
add
dec
xchg
lea
xchg
mov
sub
xchg
xchg
mov
movl
movb
mov
push
mov
push
call
lea
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movb
mov
push
mov
push
call
lea
push
call
call
movl
movb
mov
push
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
cmp
jne
mov
lea
mov
lea
add
dec
jne
jmp
dec
xchg
xchg
lea
lea
add
and
dec
and
xchg
lea
lea
add
mov
movl
lea
push
mov
push
call
cmp
jbe
jmp
and
mov
mov
mov
mov
mov
xchg
lea
inc
mov
add
dec
lea
mov
mov
add
xchg
mov
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
lea
push
call
movl
movb
mov
push
mov
push
call
mov
pop
ret
mov
ret
lea
push
mov
add
mov
mov
cmp
jnp
xchg
mov
lea
mov
sub
xchg
mov
add
dec
xchg
lea
xchg
mov
sub
xchg
xchg
mov
mov
cmp
je
jmp
cmp
jbe
jmp
and
mov
mov
mov
mov
mov
xchg
lea
inc
mov
add
dec
lea
mov
mov
add
xchg
mov
mov
xor
divl
test
jne
xchg
cmp
jge
and
xchg
lea
mov
lea
lea
lea
add
mov
mov
sub
sub
mov
and
xchg
add
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
add
cmp
ja
mov
sub
xchg
mov
lea
xchg
lea
mov
lea
mov
mov
xchg
mov
and
inc
lea
and
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
jne
mov
lea
mov
lea
add
dec
jne
jmp
dec
xchg
xchg
lea
lea
add
and
dec
and
xchg
lea
lea
add
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
js
sub
dec
mov
and
xchg
cmp
jle
lea
mov
xchg
sub
and
dec
jmp
and
mov
xchg
xchg
and
mov
dec
mov
cmp
je
jmp
mov
cmp
je
and
sub
inc
lea
dec
cmp
js
and
lea
mov
xchg
and
mov
dec
mov
lea
lea
sub
sub
mov
mov
and
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
je
jmp
add
cmp
ja
mov
sub
xchg
mov
lea
xchg
lea
mov
lea
mov
mov
xchg
mov
and
inc
lea
and
mov
mov
sub
mov
cmp
js
xchg
xchg
mov
lea
lea
mov
sub
sub
add
dec
dec
jne
and
mov
add
xchg
mov
and
xchg
mov
add
push
mov
mov
xor
call
mov
xchg
cmp
jge
and
xchg
lea
mov
lea
lea
lea
add
mov
mov
sub
sub
mov
and
xchg
add
inc
mov
mov
mov
call
xchg
cmp
jno
mov
mov
sub
cmp
jg
xchg
xchg
lea
xchg
add
add
lea
lea
mov
mov
xchg
add
push
mov
mov
xor
call
mov
cmp
jbe
jmp
and
mov
mov
mov
mov
mov
xchg
lea
inc
mov
add
dec
lea
mov
mov
add
xchg
mov
mov
mov
movb
movb
cmp
jnp
xchg
mov
lea
mov
sub
xchg
mov
add
dec
xchg
lea
xchg
mov
sub
xchg
xchg
mov
lea
mov
push
add
jmp
mov
mov
add
cmp
ja
mov
sub
xchg
mov
lea
xchg
lea
mov
lea
mov
mov
xchg
mov
and
inc
lea
and
mov
lea
mov
push
mov
jmp
lea
mov
cmp
js
xchg
xchg
mov
lea
lea
mov
sub
sub
add
dec
dec
jne
and
mov
add
xchg
mov
and
xchg
mov
add
mov
add
mov
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
mov
cmp
je
and
sub
inc
lea
dec
cmp
js
and
lea
mov
xchg
and
mov
dec
mov
lea
lea
sub
sub
mov
mov
and
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
js
sub
dec
mov
and
xchg
cmp
jle
lea
mov
xchg
sub
and
dec
jmp
and
mov
xchg
xchg
and
mov
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jne
mov
lea
mov
lea
add
dec
jne
jmp
dec
xchg
xchg
lea
lea
add
and
dec
and
xchg
lea
lea
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jbe
jmp
and
mov
mov
mov
mov
mov
xchg
lea
inc
mov
add
dec
lea
mov
mov
add
xchg
mov
mov
sub
add
add
mov
cmp
jnp
xchg
mov
lea
mov
sub
xchg
mov
add
dec
xchg
lea
xchg
mov
sub
xchg
xchg
mov
lea
pushl
call
mov
pop
ret
mov
push
mov
add
mov
mov
mov
xchg
cmp
jno
mov
mov
sub
cmp
jg
xchg
xchg
lea
xchg
add
add
lea
lea
mov
mov
xchg
add
mov
cmp
je
jmp
mov
cmp
je
and
sub
inc
lea
dec
cmp
js
and
lea
mov
xchg
and
mov
dec
mov
lea
lea
sub
sub
mov
mov
and
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
mov
xchg
cmp
jno
mov
mov
sub
cmp
jg
xchg
xchg
lea
xchg
add
add
lea
lea
mov
mov
xchg
add
mov
mov
xchg
cmp
jge
and
xchg
lea
mov
lea
lea
lea
add
mov
mov
sub
sub
mov
and
xchg
add
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
js
xchg
xchg
mov
lea
lea
mov
sub
sub
add
dec
dec
jne
and
mov
add
xchg
mov
and
xchg
mov
add
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jbe
jmp
and
mov
mov
mov
mov
mov
xchg
lea
inc
mov
add
dec
lea
mov
mov
add
xchg
mov
mov
mov
movl
cmp
jne
mov
lea
mov
lea
add
dec
jne
jmp
dec
xchg
xchg
lea
lea
add
and
dec
and
xchg
lea
lea
add
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
add
cmp
ja
mov
sub
xchg
mov
lea
xchg
lea
mov
lea
mov
mov
xchg
mov
and
inc
lea
and
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jne
mov
lea
mov
lea
add
dec
jne
jmp
dec
xchg
xchg
lea
lea
add
and
dec
and
xchg
lea
lea
add
mov
mov
pop
ret
lea
push
cmp
testb
pop
sbb
addl
pop
cmpb
cmpb
insl
jb
jae
sbb
dec
subb
jp
dec
insl
andb
sbb
dec
subb
jp
pop
insl
jbe
sbb
jg
subb
jbe
subb
sbb
pop
jbe
dec
insl
cmpb
insl
jbe
insb
sbb
test
xorl
jg
sbb
sbb
test
jbe
insl
sbb
sbb
sub
sbb
jg
sbb
sbb
inc
movsb
lcall
sub
movsl
push
lock
repz
lock
xchg
leave
inc
pop
sbb
pop
sbb
inc
pop
sbb
inc
pop
sbb
inc
pop
sbb
inc
pop
sbb
inc
pop
sbb
inc
pop
sbb
pop
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
repz
push
dec
fsubl
mov
mov
push
movsb
fcmovnu
sahf
pop
sbb
sahf
pop
sbb
lcall
mov
iret
dec
test
push
jecxz
pop
inc
dec
movsb
push
jecxz
pop
and
push
jecxz
dec
pop
movsb
push
jecxz
pop
and
jecxz
pop
aaa
dec
movsb
push
jecxz
pop
cmp
push
decl
push
jecxz
dec
push
movsb
push
jmp
push
sub
sbb
movsb
pop
out
mov
jmp
mov
jmp
fwait
sbb
sbb
rcrl
int3
sbb
sbb
push
jmp
sbb
sbb
push
movsb
pop
pop
sbb
decl
push
jecxz
dec
daa
mov
add
and
movsb
push
pushf
xor
adc
movsb
sbb
jmp
movsb
pop
or
jmp
movsb
push
movsb
pop
or
jmp
movsb
pop
or
jmp
movsb
push
imul
pop
sbb
shld
sbb
lock
dec
movsb
push
add
push
jecxz
dec
xor
cmp
sbb
mov
lret
pushf
fistpl
dec
movsb
push
jecxz
dec
xor
push
sti
pop
pushf
push
notl
movsb
push
negl
push
movl
jae
sbb
xchg
lock
push
jmp
pop
inc
sbb
jmp
jecxz
pop
aas
mov
fists
pop
sbb
pushf
fistpl
dec
movsb
push
fisttps
push
jecxz
dec
push
sbbl
sbb
test
movsb
push
jecxz
pop
cmp
push
jecxz
dec
inc
sbbl
sbb
test
movsb
push
and
push
jecxz
dec
inc
movsb
inc
rep
jbe
sahf
xchg
aaa
sbb
lock
xor
data16
lcall
fcomi
std
movsb
testb
sbb
sahf
pop
sbb
jnp
and
sub
mov
sbb
sbb
loop
ja
sbb
insb
cvtpi2ps
add
sbb
sbb
pusha
sbb
sbb
fldt
xor
add
add
sbb
inc
shlb
add
sbb
add
mov
or
add
mov
sti
and
sbb
sbb
sbb
out
push
insb
sbb
pop
xchg
mov
mov
add
sbb
pushw
movsl
or
int
sub
pop
add
lock
add
lock
in
fdivrl
frstor
sbb
mov
lock
icebp
lock
jecxz
enter
movsb
lcall
lock
and
sbb
fsts
and
sbb
fsts
sbb
movsl
push
hlt
movsl
inc
hlt
mov
sbb
push
hlt
fwait
outsb
hlt
sbb
fsts
sbb
lock
repnz
xchg
movsl
sbb
sbb
push
hlt
sbb
movsl
push
cmc
movsb
inc
out
movsl
pop
sbb
hlt
mov
lock
push
cmc
movsl
push
cmc
xor
fsts
sbb
push
hlt
fwait
outsb
hlt
sbb
fsts
sbb
push
hlt
sbb
movsl
push
cmc
sub
movsl
inc
hlt
and
lock
sub
movsl
inc
hlt
and
sbb
sbb
movsl
push
hlt
movsl
fwait
pop
jnp
sbb
movsl
push
cmc
movsl
inc
repnz
sbb
push
hlt
fwait
outsb
hlt
sbb
movsb
testb
pop
sbb
decl
push
lock
mov
pop
lock
sbb
sub
mov
sub
movsl
push
and
sbb
test
sbb
sbb
sub
mov
movsl
fwait
pop
jnp
sbb
mov
movsl
fwait
pop
jnp
sbb
pop
sbb
sbb
mov
movsl
inc
out
mov
sbb
mov
and
sbb
pop
sbb
test
sbb
sbb
movsl
push
out
movsl
fwait
pop
jnp
sbb
icebp
movsl
push
icebp
push
dec
faddl
and
inc
push
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
cmp
jbe
jmp
and
mov
mov
mov
mov
mov
xchg
lea
inc
mov
add
dec
lea
mov
mov
add
xchg
mov
mov
mov
call
mov
mov
cmpl
ja
mov
mov
mov
mov
cmpb
jne
mov
inc
call
test
je
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
incl
incl
cmpl
jbe
mov
pop
ret
mov
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
js
sub
dec
mov
and
xchg
cmp
jle
lea
mov
xchg
sub
and
dec
jmp
and
mov
xchg
xchg
and
mov
dec
push
call
mov
lea
mov
subl
movb
movb
movb
xchg
cmp
jge
and
xchg
lea
mov
lea
lea
lea
add
mov
mov
sub
sub
mov
and
xchg
add
inc
mov
mov
call
mov
cmp
js
xchg
xchg
mov
lea
lea
mov
sub
sub
add
dec
dec
jne
and
mov
add
xchg
mov
and
xchg
mov
add
movl
lea
mov
subl
mov
mov
call
mov
cmpl
je
add
cmp
ja
mov
sub
xchg
mov
lea
xchg
lea
mov
lea
mov
mov
xchg
mov
and
inc
lea
and
mov
mov
mov
call
mov
cmpl
je
cmp
jbe
jmp
and
mov
mov
mov
mov
mov
xchg
lea
inc
mov
add
dec
lea
mov
mov
add
xchg
mov
lea
push
push
mov
sub
push
mov
push
call
cmp
jne
mov
lea
mov
lea
add
dec
jne
jmp
dec
xchg
xchg
lea
lea
add
and
dec
and
xchg
lea
lea
add
mov
mov
cmp
je
mov
subb
cmp
jbe
jmp
and
mov
mov
mov
mov
mov
xchg
lea
inc
mov
add
dec
lea
mov
mov
add
xchg
mov
xor
add
mov
xor
add
cmp
ja
mov
sub
xchg
mov
lea
xchg
lea
mov
lea
mov
mov
xchg
mov
and
inc
lea
and
mov
incl
mov
cmp
jne
mov
cmp
je
and
sub
inc
lea
dec
cmp
js
and
lea
mov
xchg
and
mov
dec
mov
lea
lea
sub
sub
mov
mov
and
mov
call
cmp
jne
mov
lea
mov
lea
add
dec
jne
jmp
dec
xchg
xchg
lea
lea
add
and
dec
and
xchg
lea
lea
add
mov
mov
push
mov
push
call
cmpl
je
cmp
jne
mov
lea
mov
lea
add
dec
jne
jmp
dec
xchg
xchg
lea
lea
add
and
dec
and
xchg
lea
lea
add
mov
cmp
jbe
jmp
and
mov
mov
mov
mov
mov
xchg
lea
inc
mov
add
dec
lea
mov
mov
add
xchg
mov
cmp
jnp
xchg
mov
lea
mov
sub
xchg
mov
add
dec
xchg
lea
xchg
mov
sub
xchg
xchg
mov
push
mov
pushl
xchg
push
jmp
cmp
js
sub
dec
mov
and
xchg
cmp
jle
lea
mov
xchg
sub
and
dec
jmp
and
mov
xchg
xchg
and
mov
dec
mov
pop
ret
add
jb
gs
xor
cs
insb
add
add
push
mov
add
cmp
jnp
xchg
mov
lea
mov
sub
xchg
mov
add
dec
xchg
lea
xchg
mov
sub
xchg
xchg
mov
movb
mov
mov
mov
sub
add
mov
mov
add
cmp
jne
pushl
push
push
jmp
add
sub
and
cmp
jne
cmp
jnp
xchg
mov
lea
mov
sub
xchg
mov
add
dec
xchg
lea
xchg
mov
sub
xchg
xchg
mov
cmpb
jne
cmp
jne
mov
lea
mov
lea
add
dec
jne
jmp
dec
xchg
xchg
lea
lea
add
and
dec
and
xchg
lea
lea
add
mov
movb
mov
cmp
je
and
sub
inc
lea
dec
cmp
js
and
lea
mov
xchg
and
mov
dec
mov
lea
lea
sub
sub
mov
mov
and
push
call
mov
mov
mov
xchg
cmp
jno
mov
mov
sub
cmp
jg
xchg
xchg
lea
xchg
add
add
lea
lea
mov
mov
xchg
add
jmp
xchg
cmp
jge
and
xchg
lea
mov
lea
lea
lea
add
mov
mov
sub
sub
mov
and
xchg
add
inc
movb
cmp
jbe
jmp
and
mov
mov
mov
mov
mov
xchg
lea
inc
mov
add
dec
lea
mov
mov
add
xchg
mov
mov
mov
pop
ret
add
popa
fs
jae
js
cs
insb
and
add
push
mov
add
cmp
jne
mov
lea
mov
lea
add
dec
jne
jmp
dec
xchg
xchg
lea
lea
add
and
dec
and
xchg
lea
lea
add
mov
cmp
js
xchg
xchg
mov
lea
lea
mov
sub
sub
add
dec
dec
jne
and
mov
add
xchg
mov
and
xchg
mov
add
call
test
jne
mov
jmp
movw
xchg
cmp
jno
mov
mov
sub
cmp
jg
xchg
xchg
lea
xchg
add
add
lea
lea
mov
mov
xchg
add
call
mov
pop
ret
mov
push
mov
add
cmp
jne
mov
lea
mov
lea
add
dec
jne
jmp
dec
xchg
xchg
lea
lea
add
and
dec
and
xchg
lea
lea
add
mov
cmp
jne
mov
lea
mov
lea
add
dec
jne
jmp
dec
xchg
xchg
lea
lea
add
and
dec
and
xchg
lea
lea
add
mov
movl
lea
push
mov
push
call
cmp
jne
mov
lea
mov
lea
add
dec
jne
jmp
dec
xchg
xchg
lea
lea
add
and
dec
and
xchg
lea
lea
add
mov
movl
lea
push
mov
push
call
call
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
cmp
jne
mov
lea
mov
lea
add
dec
jne
jmp
dec
xchg
xchg
lea
lea
add
and
dec
and
xchg
lea
lea
add
mov
movl
lea
push
mov
push
call
call
call
movl
movl
mov
push
mov
push
call
call
add
cmp
ja
mov
sub
xchg
mov
lea
xchg
lea
mov
lea
mov
mov
xchg
mov
and
inc
lea
and
mov
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
cmp
jne
mov
lea
mov
lea
add
dec
jne
jmp
dec
xchg
xchg
lea
lea
add
and
dec
and
xchg
lea
lea
add
mov
movl
lea
push
mov
push
call
xchg
cmp
jge
and
xchg
lea
mov
lea
lea
lea
add
mov
mov
sub
sub
mov
and
xchg
add
inc
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
cmp
js
xchg
xchg
mov
lea
lea
mov
sub
sub
add
dec
dec
jne
and
mov
add
xchg
mov
and
xchg
mov
add
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
call
movl
movb
mov
push
mov
push
call
lea
push
call
cmp
jne
mov
lea
mov
lea
add
dec
jne
jmp
dec
xchg
xchg
lea
lea
add
and
dec
and
xchg
lea
lea
add
mov
movl
movb
mov
push
mov
push
call
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
xchg
cmp
jge
and
xchg
lea
mov
lea
lea
lea
add
mov
mov
sub
sub
mov
and
xchg
add
inc
movl
movb
mov
push
mov
push
call
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
xchg
cmp
jge
and
xchg
lea
mov
lea
lea
lea
add
mov
mov
sub
sub
mov
and
xchg
add
inc
push
call
mov
cmp
jne
mov
lea
mov
lea
add
dec
jne
jmp
dec
xchg
xchg
lea
lea
add
and
dec
and
xchg
lea
lea
add
mov
movl
lea
push
mov
push
call
cmp
jne
mov
lea
mov
lea
add
dec
jne
jmp
dec
xchg
xchg
lea
lea
add
and
dec
and
xchg
lea
lea
add
mov
movl
lea
push
mov
push
call
call
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
cmp
jne
mov
lea
mov
lea
add
dec
jne
jmp
dec
xchg
xchg
lea
lea
add
and
dec
and
xchg
lea
lea
add
mov
movl
lea
push
mov
push
call
call
call
movl
movl
mov
push
mov
push
call
call
add
cmp
ja
mov
sub
xchg
mov
lea
xchg
lea
mov
lea
mov
mov
xchg
mov
and
inc
lea
and
mov
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
cmp
jne
mov
lea
mov
lea
add
dec
jne
jmp
dec
xchg
xchg
lea
lea
add
and
dec
and
xchg
lea
lea
add
mov
movl
lea
push
mov
push
call
xchg
cmp
jge
and
xchg
lea
mov
lea
lea
lea
add
mov
mov
sub
sub
mov
and
xchg
add
inc
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
cmp
js
xchg
xchg
mov
lea
lea
mov
sub
sub
add
dec
dec
jne
and
mov
add
xchg
mov
and
xchg
mov
add
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
call
movl
movb
mov
push
mov
push
call
lea
push
call
cmp
jne
mov
lea
mov
lea
add
dec
jne
jmp
dec
xchg
xchg
lea
lea
add
and
dec
and
xchg
lea
lea
add
mov
movl
movb
mov
push
mov
push
call
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
xchg
cmp
jge
and
xchg
lea
mov
lea
lea
lea
add
mov
mov
sub
sub
mov
and
xchg
add
inc
movl
movb
mov
push
mov
push
call
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
call
cmp
js
xchg
xchg
mov
lea
lea
mov
sub
sub
add
dec
dec
jne
and
mov
add
xchg
mov
and
xchg
mov
add
mov
pop
ret
popa
fs
jae
js
cs
insb
add
add
call
ret
mov
push
mov
add
cmp
jnp
xchg
mov
lea
mov
sub
xchg
mov
add
dec
xchg
lea
xchg
mov
sub
xchg
xchg
mov
lea
push
call
cmp
js
xchg
xchg
mov
lea
lea
mov
sub
sub
add
dec
dec
jne
and
mov
add
xchg
mov
and
xchg
mov
add
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
cmp
jne
mov
lea
mov
lea
add
dec
jne
jmp
dec
xchg
xchg
lea
lea
add
and
dec
and
xchg
lea
lea
add
mov
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
cmp
jne
mov
lea
mov
lea
add
dec
jne
jmp
dec
xchg
xchg
lea
lea
add
and
dec
and
xchg
lea
lea
add
mov
movl
lea
push
mov
push
call
call
cmp
js
xchg
xchg
mov
lea
lea
mov
sub
sub
add
dec
dec
jne
and
mov
add
xchg
mov
and
xchg
mov
add
lea
push
call
call
movl
movb
mov
push
mov
push
call
cmp
jne
mov
lea
mov
lea
add
dec
jne
jmp
dec
xchg
xchg
lea
lea
add
and
dec
and
xchg
lea
lea
add
mov
movl
movl
mov
push
mov
push
call
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
cmp
jbe
jmp
and
mov
mov
mov
mov
mov
xchg
lea
inc
mov
add
dec
lea
mov
mov
add
xchg
mov
movl
movl
mov
push
mov
push
call
lea
push
call
movl
movb
mov
push
mov
push
call
cmp
js
sub
dec
mov
and
xchg
cmp
jle
lea
mov
xchg
sub
and
dec
jmp
and
mov
xchg
xchg
and
mov
dec
movl
movb
mov
push
mov
push
call
cmp
js
xchg
xchg
mov
lea
lea
mov
sub
sub
add
dec
dec
jne
and
mov
add
xchg
mov
and
xchg
mov
add
movl
lea
push
mov
push
call
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
call
cmp
js
sub
dec
mov
and
xchg
cmp
jle
lea
mov
xchg
sub
and
dec
jmp
and
mov
xchg
xchg
and
mov
dec
movl
movb
mov
push
mov
push
call
xchg
cmp
jno
mov
mov
sub
cmp
jg
xchg
xchg
lea
xchg
add
add
lea
lea
mov
mov
xchg
add
movl
movw
movw
movl
mov
push
mov
push
mov
push
mov
push
call
call
cmp
js
xchg
xchg
mov
lea
lea
mov
sub
sub
add
dec
dec
jne
and
mov
add
xchg
mov
and
xchg
mov
add
movl
movl
mov
push
mov
push
call
cmp
js
xchg
xchg
mov
lea
lea
mov
sub
sub
add
dec
dec
jne
and
mov
add
xchg
mov
and
xchg
mov
add
movl
lea
push
mov
push
call
mov
pop
ret
subl
jae
mov
mov
cmp
je
and
sub
inc
lea
dec
cmp
js
and
lea
mov
xchg
and
mov
dec
mov
lea
lea
sub
sub
mov
mov
and
mov
mov
lea
call
add
cmp
ja
mov
sub
xchg
mov
lea
xchg
lea
mov
lea
mov
mov
xchg
mov
and
inc
lea
and
mov
ret
dec
xor
imul
js
jmp
js
pushf
adc
lods
test
les
jo
aas
cmp
cmp
and
jge
pop
mov
pop
outsl
mov
inc
push
xor
cli
adc
xor
dec
ret
lods
imul
pop
subl
les
lret
or
jle
and
popf
ljmp
xchg
movsb
push
jecxz
jecxz
jo
or
adc
icebp
daa
pop
add
or
and
stos
dec
cltd
dec
lock
insb
aad
in
adc
add
xlat
movsb
sbb
ljmp
and
push
adc
xchg
sub
call
mov
add
xchg
aaa
aaa
or
repz
ss
out
orb
push
and
loopne
cmc
add
jmp
rol
dec
mov
jmp
xor
push
iret
jl
mov
popf
lods
loopne
fisubs
test
dec
je
lret
popf
cmp
push
mov
adc
mov
iret
and
dec
dec
jp
jmp
insb
dec
les
outsb
push
dec
mov
movsl
lods
dec
lock
push
hlt
sub
shrl
jno
or
lret
and
add
fnstcw
orb
cmp
sbb
int
arpl
adc
imul
cwtl
mov
mov
mov
movsl
add
popa
shrb
sbb
ds
daa
scas
aad
mov
loopne
mov
jo
dec
add
sbb
mov
stos
stc
test
mov
lret
out
and
xor
fcoms
mov
xor
sahf
mov
mov
or
push
or
bound
insb
lahf
pop
mov
aas
fdiv
sub
add
or
rclb
ds
roll
cli
or
or
add
cwtl
push
dec
fiaddl
sbb
movsl
xchg
pop
int
mov
rorb
push
push
repz
pop
mov
testb
cltd
push
out
inc
test
sbb
add
push
dec
test
mov
sti
jbe
cld
pusha
inc
shrb
arpl
jmp
outsb
jbe
cmpb
mov
aad
mov
adc
jae
and
cli
ljmp
adc
in
dec
fwait
dec
xlat
mov
out
insl
xchg
pop
push
sbb
out
sub
mov
sbb
or
in
pop
xor
or
push
call
xor
call
cmc
stc
jns
cmp
inc
int3
cmp
in
cs
imul
pop
or
xchg
add
pusha
inc
out
rcll
jg
ret
dec
inc
je
test
sti
in
sub
xchg
sbb
jae
lahf
test
pop
sub
movsl
cmp
aad
je
pop
sub
xor
stos
jl
addl
addr16
cs
inc
pusha
jbe
lea
es
adc
arpl
and
jg
sar
dec
push
jg
or
jl
sbb
mov
xchg
adc
fnstenv
jne
icebp
add
stos
or
fdivr
je
mov
jl
gs
enter
sub
cmp
test
jbe
push
and
push
and
das
subb
call
push
nop
lahf
iret
mov
dec
sahf
push
popa
fnsave
loope
test
addr16
push
sbb
sub
mov
shll
pop
mov
pop
inc
fisubrs
pop
xchg
data16
mov
and
dec
pusha
push
sub
jne
mov
dec
jne
mov
mov
shl
mov
xchg
add
shl
add
lods
mov
mov
ss
adc
addr16
daa
mov
and
daa
lock
test
pop
jne
icebp
sub
push
push
addr16
xor
pop
adc
jbe
jp
addr16
daa
divl
dec
lock
pop
xor
cmp
aas
mov
fstpt
xchg
rolb
push
ja
cwtl
imul
mov
mov
push
ficompl
lds
add
pop
nop
out
sti
insl
sub
in
fstl
inc
sub
jnp
aas
daa
push
lods
sbb
sub
test
pop
xor
xor
jge
lods
loopne
lods
es
ja
scas
xchg
or
xchg
test
inc
rclb
inc
inc
cmpsl
test
pop
jbe
leave
mov
repnz
ja
pop
pop
das
push
inc
leave
rcll
sub
je
int3
dec
sti
out
mov
adc
mov
add
arpl
pusha
sub
gs
push
mov
imul
pop
addr16
push
or
jmp
mov
mov
inc
fsubrs
andb
mov
std
popf
pop
add
add
mov
pop
arpl
movsb
mov
add
ja
std
outsl
xor
popl
stos
ss
and
lahf
pop
pop
fcmovbe
jno
movsl
and
mov
jns
rclb
push
daa
hlt
out
sbb
pop
fdivp
mov
int
fnstcw
int
dec
and
movsl
or
inc
stc
mov
dec
cmpsl
cmc
inc
jg
shlb
inc
stc
mov
adcl
xchg
sub
jge
push
outsl
mov
sub
pop
pop
aaa
push
ret
aas
mov
adc
imul
loope
mov
xor
jl
inc
push
lock
dec
sbb
cs
xor
push
mov
mov
scas
test
rol
or
push
ljmp
mov
je
sbb
movsb
or
mov
lret
adc
jp
mov
sarl
aas
sti
cmp
addb
push
enter
mov
fstp
mov
and
xchg
insb
insl
out
out
jl
mov
fstpt
out
int3
ficoml
xchg
add
cmp
gs
mov
enter
cmp
gs
cwtl
sbb
ret
imul
push
int3
dec
orps
xlat
ljmp
in
push
mov
aaa
leave
mov
clc
add
int3
cwtl
dec
and
jnp
mov
dec
mov
leave
push
pop
pop
push
mov
dec
mov
or
js
out
sbb
sub
and
int
ret
push
sub
lods
adc
add
pop
pextrw
sub
stos
mov
xchg
inc
inc
lock
mov
dec
jg
inc
pop
shll
scas
inc
xlat
fcoml
in
das
sbb
sti
sbb
test
cli
notl
mov
ja
mov
repnz
mov
jns
pop
cs
nop
int
bnd
push
test
inc
xor
sub
loope
jp
jmp
fcmove
add
fildl
ret
lods
add
xor
lcall
dec
sub
or
fldt
mov
pcmpgtd
in
loopne
cmc
aam
push
cmp
cmpsl
pop
pop
jg
in
pop
jmp
sbb
push
jg
aaa
mov
mov
or
ja
shrl
cmp
ret
out
push
xor
mov
or
mov
pop
cmp
stc
call
test
mov
dec
push
faddp
je
inc
push
push
out
movsb
and
jns
jno
mov
sbb
lods
mov
sbb
bound
aaa
xchg
push
mov
jno
mov
sbb
or
or
sub
push
lea
pusha
and
in
lock
cmp
or
push
xchg
fiadds
mov
or
mov
sbb
fs
repz
and
ret
mov
dec
int3
dec
jle
mov
aad
inc
inc
add
lods
push
pop
sub
cmp
inc
movsl
cli
inc
jbe
aas
dec
ret
push
stc
dec
shrb
push
shr
jne,pn
sbb
jge
jb
push
std
cmpsb
call
outsb
ficoms
rolb
rorb
add
dec
insl
cmpb
add
pop
lcall
into
movsb
int
iret
jne
das
mov
pop
stc
lock
cs
ret
sub
and
xchg
fisubs
aaa
mov
subl
push
ds
fldenv
add
push
sub
fs
cmpsl
pop
sbb
out
cltd
add
popa
js
hlt
fs
mov
xchg
inc
pusha
out
lea
testb
add
aaa
or
popa
mov
gs
mov
xchg
mov
cmp
inc
push
imul
in
xchg
outsb
lret
jmp
sub
sbb
movsb
jae
cmp
fmuls
scas
sbbl
mov
call
mov
icebp
in
sub
in
imul
pushl
xchg
mov
inc
xchg
sbb
cmc
cwtl
ret
out
cmp
sar
and
fbld
repnz
stos
mov
les
xchg
mov
arpl
pop
cmp
pushf
aas
xchg
pusha
ljmp
cmp
mov
pmullw
and
es
mov
fidivrs
fidivl
stos
jns
pop
in
pushf
pop
and
cltd
sub
sub
rcrl
hlt
dec
ficoms
sbb
int3
sbb
shll
push
daa
ret
push
movsb
push
scas
imul
mov
or
inc
ret
inc
xchg
push
int3
iret
movsb
out
out
test
and
fsubp
pusha
insl
mov
mov
jmp
scas
xchg
mov
or
cmpsl
iret
push
dec
cmp
or
or
sub
loop
aad
cmp
and
scas
inc
adc
pop
mov
cli
and
or
xor
mov
psubb
out
mov
dec
mov
lret
mov
out
jl
sub
mov
sbbl
sbb
cwtl
leave
arpl
jmp
sahf
push
and
sarb
inc
movsb
iret
push
add
ss
enter
fs
out
aaa
stc
in
mov
xchg
test
jle
or
and
int
sbbb
rcrb
sub
cwtl
pusha
mov
jae
ss
lahf
aas
lcall
add
mov
daa
incb
adc
pop
inc
xor
add
xchg
jge
sbb
fs
lcall
or
lds
mov
inc
sahf
inc
xor
or
daa
pop
insl
in
movsl
ss
sbb
lods
fs
out
cmp
pushf
push
jg
test
and
push
cmp
push
xchg
mov
sarb
lahf
mov
jp
pop
and
jmp
andb
sbb
xchg
and
dec
mov
lds
pusha
mov
aam
add
push
outsl
out
out
addb
pop
shlb
andb
in
pop
dec
iret
jmp
push
inc
pop
imul
push
cmpsl
jae
adc
jg
shrb
xchg
imul
ficoms
stc
xchg
fstpt
mov
or
mov
loopne
movsb
es
std
testb
pop
or
adc
inc
cli
add
lea
push
lock
int
stc
mov
in
leave
fdivs
fsubrl
jl
pushf
out
push
dec
and
jg
pop
in
or
push
and
jge
pop
mov
lods
sub
jecxz
shrb
flds
inc
xor
pop
push
mov
or
ret
arpl
xchg
adc
out
adc
inc
sub
cmp
lds
mov
in
pop
pop
mov
lea
pop
int
mov
jecxz
pusha
xor
sahf
or
call
jne
mov
in
jmp
jge
imul
or
rcrb
insl
adc
scas
fsts
popa
ficoms
cmp
pop
stos
mov
push
push
xchg
insb
inc
psrlw
test
repnz
adcb
js
mov
dec
and
dec
or
hlt
push
stos
scas
jb
mov
mov
mov
xchg
jnp
mov
push
out
cmp
pop
shl
in
jb
xor
inc
and
cli
decl
push
sub
xchg
cmpsb
les
jmp
call
in
add
loopne
sub
add
hlt
xor
and
push
ret
fcompl
and
fidivl
sub
pop
orb
or
pushw
add
jo
and
or
mov
fs
xor
mov
daa
fsubs
andl
push
add
xchg
xchg
cltd
add
outsl
dec
popa
xor
adc
nop
inc
push
cli
mov
cli
lods
cld
push
or
lds
adc
jmp
push
lds
shlb
aam
sbb
inc
nop
pop
pusha
sbb
push
mov
lcall
inc
jmp
add
or
out
xchg
push
out
adcl
pusha
hlt
dec
jb
pop
aad
and
mov
loope
fcmove
mov
mov
lcall
inc
mov
call
push
ret
imul
mov
lea
xchg
ss
popa
or
xchg
dec
mov
cmp
mov
push
loope
lds
jle
dec
jb
mov
hsubpd
cmp
or
fwait
sub
jo
loopne
adc
cs
gs
pop
mov
fsub
push
adc
cmp
es
pushf
or
push
add
cmp
add
inc
int3
inc
add
ds
add
push
jecxz
aad
lds
jmp
mov
dec
pop
mov
movlhps
sub
rcrb
sti
pop
push
jno
repnz
inc
int3
or
dec
imul
mov
xchg
add
mov
out
mov
inc
sbb
or
test
xlat
jne
sahf
pop
cmp
add
mov
adc
cmp
ror
adc
cwtl
adc
shrl
cmc
push
dec
lods
cmp
adc
lahf
xchg
mov
xor
stc
lahf
mov
lret
das
dec
add
dec
sbb
mov
stos
push
outsl
mov
pop
mov
cwtl
push
icebp
in
sahf
xlat
das
push
sbb
stos
and
mov
shlb
xchg
mov
mov
fs
mov
add
cld
mov
enter
les
jb
hlt
xchg
pop
mov
jmp
sbb
scas
mov
adc
xchg
lahf
aas
and
push
aas
ds
and
sub
pop
cs
cld
add
inc
jecxz
cmp
mov
adcb
push
shrl
lret
ficoms
cmp
fwait
fwait
repz
or
mov
testl
lods
mov
fcomps
das
mov
mov
mov
mov
into
mov
or
mov
push
inc
and
xorl
rcrb
and
mov
inc
inc
pop
inc
mov
lcall
pop
cli
out
push
fnstenv
cli
sbb
adc
push
hlt
fisubs
inc
sbb
jmp
aaa
cmp
cltd
shll
insb
push
inc
into
jnp
sub
xor
cltd
rcrb
xor
rcrb
dec
mov
mov
push
inc
pop
repz
dec
lret
push
cltd
mov
push
popf
ja
xchg
mov
sub
add
cmc
mov
popa
dec
fcoml
xor
cs
lcall
jno
test
jmp
mov
loopne
jecxz
outsl
jns
push
xchg
mov
ret
sbb
jnp
hlt
rolb
in
cli
adc
or
mov
cmp
pushf
pop
imul
dec
and
push
dec
dec
mov
out
test
inc
and
adc
xchg
jno
xor
add
call
fadd
or
pushf
jns
repz
or
add
push
ljmp
cmp
dec
icebp
js
je
lret
sub
js
stc
fisttpll
rcll
dec
mov
iret
sbb
out
cmp
cwtl
lahf
inc
ja
jl
xchg
dec
dec
aad
fldt
popf
adc
lcall
jb
hlt
mov
inc
xor
push
xor
mov
lahf
dec
xor
imul
xor
into
in
fcoms
jp
or
mov
cmpsb
cmp
sub
movsb
mov
push
lds
mov
adc
cmp
push
icebp
jae
xchg
adc
shrb
mov
lea
jecxz
sbb
mov
daa
and
roll
je
adc
aam
pop
lock
bound
inc
stc
push
and
stc
mov
testb
repz
jge
cmc
push
test
fldt
fidivs
scas
rol
je
stc
mov
outsl
mov
dec
inc
xchg
cmpsl
lret
dec
out
pushf
test
shlb
out
mov
clc
scas
mov
cmc
in
popf
addl
fidivl
xchg
adc
mov
push
movl
or
repnz
mov
pop
int
aaa
imul
fisttpll
je
das
int
mov
test
pop
adc
push
pushf
test
repnz
sbb
lcall
xchg
or
push
xchg
cmp
js
in
add
xchg
xor
push
push
xchg
mov
jnp
pop
dec
mov
lret
scas
jo
ljmp
call
subl
cmc
sbb
lret
cmc
xchg
imul
cmp
adc
stos
test
mov
shrb
mov
movsl
sbb
inc
jno
xchg
fimuls
stc
push
std
and
lahf
pop
pusha
out
sub
jae
mov
inc
mov
cmp
push
test
ds
adc
mov
pop
in
jno
push
and
test
inc
imul
inc
lods
shr
out
scas
or
sbb
push
movsl
mov
cmp
lret
lock
adc
jecxz
dec
mov
push
dec
dec
inc
out
in
cmp
adc
xchg
and
lock
out
pop
das
pop
and
mov
push
mov
xchg
mov
jp
push
xlat
sahf
dec
bound
bound
pop
pop
fcoms
xor
js
mov
dec
icebp
enter
dec
sub
inc
adc
jge
pushw
stc
gs
loope
out
hlt
mov
mov
xor
leave
lock
push
mov
sub
xor
mov
jp
pop
jns
sbb
dec
dec
repnz
test
out
rclb
lret
fs
adc
out
sbb
mov
jg
cmp
popa
dec
fcomi
popa
sbb
xchg
adc
stos
lds
mov
sbb
mov
shlb
fwait
inc
sub
and
push
or
shll
scas
push
and
aam
cld
out
les
push
mov
mov
xchg
int3
and
push
jl
push
mov
fistpl
pop
rcrb
cwtl
mov
pop
push
lret
and
mov
outsb
int
loope
sub
mov
mov
and
lock
mov
or
dec
bound
shl
push
jno
fwait
mov
cmp
adc
test
and
into
sbb
ss
cmp
mov
inc
hlt
popa
mov
xor
xchg
out
jne
mov
lock
or
push
push
ret
nop
clc
arpl
adc
bound
aas
arpl
push
fdivl
inc
mov
push
xchg
popa
enter
nop
aaa
sahf
out
mov
sar
dec
out
into
xchg
ret
dec
or
inc
adc
adcl
push
dec
mov
idivb
push
rolb
bound
cmp
hlt
shrb
mov
testb
cmp
jp
rcrl
or
lock
in
cmpsb
arpl
pop
inc
jg,pt
pop
leave
cli
push
sub
mov
pop
inc
fs
cmpsb
loope
and
out
push
ret
pop
andb
pop
jmp
dec
jae
repnz
xchg
mov
add
xor
loopne
orb
push
fisttpl
fcoms
das
add
in
add
popa
adc
lcall
je
outsl
jecxz
test
push
mov
xlat
fcmovnu
jge
xor
jo
pop
test
sub
fxam
cmp
fcompl
sub
xchg
adc
sbb
adc
insl
or
adc
sbb
hlt
aam
cmpl
xor
rol
pop
std
jne
adc
sub
xchg
aad
inc
cli
loope
aaa
push
or
mov
addl
test
sahf
sub
inc
lods
sbbb
xchg
jg
mov
adc
iret
inc
xchg
or
pop
jg
pop
pop
xor
cwtl
jbe
imul
fwait
add
mov
js
xchg
sbb
stos
mov
or
push
inc
cmp
pop
add
lds
ja
dec
dec
xor
sub
not
and
sub
repz
test
scas
ret
fcmovbe
pop
adc
add
mov
xor
das
push
inc
in
jl
mov
inc
dec
mov
filds
or
or
and
push
pop
jno
cmc
jbe
outsl
add
mov
mov
imul
mov
push
lcall
pop
mov
xor
insl
test
add
dec
mov
sub
xchg
xchg
daa
inc
pop
mov
inc
cmpsl
sub
sub
stos
orl
add
xchg
xor
push
out
push
in
adc
subb
sbb
jecxz
mov
mov
mov
xor
mov
movb
imul
and
cmovge
sub
pop
mov
aas
icebp
dec
mov
lods
xchg
mov
cmp
sub
es
mov
imul
rorb
mov
xor
movq
inc
xchg
outsb
dec
outsb
xlat
xchg
xchg
cmp
and
clc
xor
in
jl
out
mov
cmpsb
push
inc
xchg
aad
nop
imul
loopne
sbb
sub
xchg
mov
sub
es
cmpsl
and
subb
mov
mov
pop
xlat
cmpsl
inc
mov
cmp
xor
or
jmp
mov
fadds
call
lahf
jecxz
push
jge
arpl
mov
mov
imull
inc
lea
mov
scas
dec
scas
jne
arpl
fwait
jo
lret
outsl
hlt
sub
dec
cmovne
pop
cltd
bound
divb
inc
mov
push
fldenv
fistl
jnp
lods
pop
xchg
test
xchg
inc
push
mov
lods
sahf
rclb
sbb
xchg
gs
jmp
jb
fsubrl
cmpsb
mov
inc
fs
push
int3
pop
pop
lea
sti
mov
dec
jmp
ret
popa
scas
adc
dec
xchg
add
mov
orl
adc
in
cmpsl
pop
or
push
jl
cli
dec
cld
jnp
or
push
mov
sub
mov
xor
or
icebp
ficompl
mov
xchg
xor
lret
andb
mov
mov
xor
and
add
lods
xchg
out
xor
and
leave
fldt
ret
fistps
pusha
aad
mov
mov
inc
scas
add
aam
sarb
pusha
pop
cmp
xchg
mov
mov
mov
pop
ss
xchg
ljmp
jle
cmpsl
std
adc
sarb
and
inc
shlb
push
sbb
shrb
or
je
mov
add
or
add
rorl
cmp
divl
out
cld
aas
hlt
pop
das
jp
ret
cld
adc
sbb
jae
sbb
add
dec
in
and
cmp
imul
pop
xchg
sbb
fwait
lock
mov
pop
sbb
lret
mov
add
aam
adc
ds
icebp
xchg
enter
xchg
mov
push
cmp
cmp
dec
arpl
cli
cmp
xchg
bound
pushf
pop
jmp
push
mov
cmp
jns
mov
std
pop
mov
pusha
mov
inc
push
dec
orb
jl
cmp
mov
mov
lds
adcb
sub
push
adc
adc
and
clc
and
lds
and
or
negl
out
mov
ret
jno
scas
mov
push
fsubrl
out
mov
cs
jmp
mov
push
dec
pop
mov
sub
or
push
and
orb
frstor
xor
mov
test
mov
dec
mov
scas
in
mov
push
mov
xchg
mov
lods
xchg
push
cmp
mov
push
lea
adc
or
fiadds
pop
lcall
mov
pop
aad
mov
ret
loop
insl
add
test
arpl
test
mov
fstps
loopne
pop
mov
add
int
cmp
das
add
lcall
push
nop
scas
lock
inc
add
enterw
adc
clc
push
mov
nop
push
add
mov
dec
add
in
jl
add
fadds
das
in
nop
fldt
push
hlt
test
cmp
adc
shrb
jb
js
mov
sbb
mov
mov
xchg
lock
sub
push
push
adc
jge
xchg
popa
xchg
xlat
sbb
aaa
cltd
call
pusha
rorb
ss
sahf
arpl
xor
add
pop
lea
outsb
lods
pop
daa
mov
pusha
pop
sub
jbe
xchg
dec
sti
inc
in
inc
pop
out
add
mov
insl
or
push
cmp
sub
ljmp
mov
mov
clc
clc
lock
add
lds
icebp
sbb
stos
loopne
dec
test
xchg
pop
aaa
call
mov
adc
aas
inc
mov
jo
jmp
mov
stc
lea
mov
fiaddl
push
mov
sbb
in
mov
in
cmp
mov
in
lods
pop
aaa
cmp
sub
scas
push
dec
inc
popf
daa
jge
sub
cmpsb
pop
xchg
jbe
arpl
sbb
adc
xchg
outsl
mov
or
jae
cvtdq2ps
sti
inc
mov
xlat
cmp
stos
jp
leave
incl
test
cld
fs
arpl
jecxz
mov
push
loopne
push
add
clc
inc
mov
sbb
cltd
xor
pop
xlat
into
push
xorb
imulb
insb
dec
or
sub
mov
jmp
ljmp
icebp
scas
ret
je
dec
and
movsl
iret
xor
decl
cmc
aaa
cmp
sub
mov
push
xor
das
jbe
test
push
cmc
xor
push
sub
sbb
adc
repnz
inc
pop
mov
adc
mov
mov
mov
sbb
dec
push
in
jp
scas
inc
jge
pop
shll
mov
decl
mov
cmp
pop
push
out
insl
inc
push
dec
cmp
sbb
in
cmp
rcll
and
icebp
sub
push
pushf
add
sarl
dec
into
adc
push
in
cltd
pop
pop
fmuls
test
jne
icebp
pop
sbb
xchg
mov
jl
call
aas
movsl
jle
xchg
jae
lea
sub
jbe
out
stos
jmp
add
enter
dec
mov
orl
inc
ds
in
imul
aas
xlat
mov
fsubrl
pop
ljmp
inc
ror
add
int
pushf
sub
sub
mov
cmp
lret
psubq
movsl
inc
mov
movsl
mov
out
jg
cli
je
mov
add
inc
mov
notb
or
xchg
inc
xor
add
sbb
push
mov
sub
scas
lcall
js
jg
gs
and
xor
jmp
movsb
mov
pop
out
andb
dec
cmpsl
pop
jecxz
jbe
jge
gs
incl
push
dec
insb
ljmp
lock
ss
sbb
test
add
xor
push
push
sub
lret
inc
insb
lods
pop
arpl
or
pop
popa
cli
repnz
sub
cmp
scas
jge
test
pop
and
xor
add
pop
out
fucomp
add
movsl
sbb
mov
xor
fisubrs
xor
inc
movsb
or
aas
iret
mov
mov
sub
jle
pushf
popf
imul
and
adc
movsl
sub
and
or
imul
push
ret
in
sbb
movsb
pop
ret
xchg
bound
test
xchg
sub
jnp
adc
sarl
loop
std
dec
jl
and
or
leave
divl
inc
push
call
mov
xlat
xchg
rcrb
adc
aad
sbb
data16
cwtl
inc
ljmp
mov
jae
fcomps
mov
ss
mov
push
jne
out
mov
add
sti
adc
out
pop
sbb
dec
jbe
in
aam
repnz
push
in
cli
sub
loop
nop
repnz
movsl
shr
mov
pop
test
addb
repnz
sub
in
push
pop
aad
dec
inc
mov
enter
mov
push
gs
mov
cld
je
mov
mov
jnp
mov
mov
push
adc
mov
cmp
arpl
into
insl
sbb
sbb
ficoml
jmp
scas
xchg
movsl
setbe
stc
cmp
adc
insl
mov
enter
adcl
dec
repz
addr16
stc
xor
ja
mov
imull
push
xor
jne
jmp
xchg
mov
pop
loopne
mov
jno
fcompl
mov
loope
xchg
pop
xor
lods
push
or
jecxz
adc
inc
stc
xor
pop
xchg
and
movsl
xchg
sbb
subl
mov
out
push
adc
lahf
lea
and
and
mov
pop
les
inc
dec
xlat
sahf
repz
sarb
sbb
insb
call
lock
xchg
inc
aad
mov
cwtl
cltd
imul
and
lcall
lock
loop
cmp
les
xor
adc
and
dec
mov
dec
push
dec
inc
mov
cmp
test
call
inc
xor
in
dec
mov
imul
mov
sbb
das
jne
xchg
sub
scas
or
cmpsb
adc
mov
jno
test
or
mov
jle
push
and
mov
test
mov
stos
mov
mov
jae
idivb
mov
in
push
imulb
faddl
aaa
mov
je
cmc
push
push
sub
sub
inc
jns
ss
lds
xchg
or
dec
xchg
pop
stos
in
pop
mov
mov
daa
cmp
jl
out
mov
jno
jno
pop
stos
push
movsb
fwait
int
in
repnz
mov
push
jecxz
cltd
nop
jno
ljmp
movsb
iret
fsubs
push
bndstx
mov
inc
ret
cli
or
leave
jno
clc
pop
insl
mov
sub
jecxz
mov
xchg
xor
pop
cmp
pusha
jg
ds
jp
lahf
adc
inc
inc
cmpsb
jo
stos
cmpsb
cld
cli
sub
cmpsl
jae
je
dec
cmp
daa
cmp
sahf
and
adc
lock
jmp
addr16
mov
sti
mov
iret
dec
mov
or
lret
xchg
push
mov
xorb
adc
frstor
mov
aaa
iret
pop
mov
push
repnz
mov
popf
lods
ret
mulb
jne
pusha
pop
test
sbb
cmp
adc
dec
cmp
pop
jg
pop
adc
push
jne
fdivrp
sub
cmp
addr16
lahf
pop
push
jecxz
dec
xchg
inc
sbb
ss
jae
ret
stc
dec
sbb
sbb
sub
call
fs
pop
lds
jnp
mov
out
arpl
or
in
es
or
stos
dec
sarb
push
popf
add
pop
lahf
push
mov
jns
sbb
insb
jnp
cmc
jno
stos
das
jno
mov
push
bound
outsl
jmp
push
jno
cmpsl
mov
test
bound
nop
mov
xor
popa
cmp
subl
add
int
jb
push
push
add
jle
stc
adc
iret
aad
adc
mov
inc
jmp
jge
xchg
xor
mov
leave
jge
sarb
mov
ljmp
stc
cmp
insl
lds
dec
push
dec
stos
movsl
xchg
enter
xchg
add
das
pop
dec
ds
dec
cmp
sub
and
mov
scas
sub
and
xchg
gs
or
stos
sbb
push
sbb
stos
sub
xchg
call
add
jl
mov
mov
or
popa
inc
jl
adc
inc
gs
push
xor
mov
out
jge
insb
hlt
popf
sbb
mov
stos
hlt
mov
cmp
es
fildl
xor
xor
cltd
aad
insb
cwtl
inc
mov
addr16
cmpsl
je
cmp
add
push
and
fildll
arpl
push
xchg
sub
sub
popf
fcmovu
or
lea
inc
sarl
cmp
je
dec
add
fmull
test
inc
das
lods
and
lret
je
adc
xor
sti
push
enter
pop
xor
and
sahf
dec
xor
sbb
xchg
int
imul
lret
data16
test
data16
or
mov
sti
cmp
cmc
or
inc
push
sbb
dec
xchg
loopne
ror
mov
lods
push
scas
mov
sub
and
sub
cwtl
mov
rolb
xor
and
jo
jg
xlat
sti
aas
jg
lock
cmp
fcomps
pop
fdivrs
jns
push
int3
or
xchg
jns
into
jae
cmp
pop
ret
sub
xor
lods
dec
inc
cmp
jnp
fiaddl
jg
mov
mov
aas
dec
cmc
lret
mov
sbb
repz
sub
dec
movzwl
pop
xlat
sbb
rorl
add
nop
loop
outsl
imul
sub
ja
out
lods
mov
hlt
in
add
bound
je
movb
cmp
or
add
dec
outsb
clc
push
das
mov
test
and
mov
dec
and
stos
das
sub
mov
xchg
das
xchg
lcall
push
pop
shll
ret
outsl
dec
popf
inc
cmp
mov
ljmp
stos
nop
cltd
loopne
sahf
movsl
icebp
xchg
insb
dec
adc
mov
sub
cli
fidivrl
sbb
jae
jle
and
inc
aam
daa
and
scas
xchg
xchg
fs
push
jo
int3
cmp
sub
jp
stos
fmull
xchg
jmp
cmp
pushf
pop
imul
test
scas
fwait
jo
push
xor
jb
inc
and
or
loopne
or
push
xchg
and
test
out
dec
push
adc
push
mov
push
pop
neg
ret
and
jecxz
xchg
movb
nop
xlat
daa
pusha
inc
outsb
cli
je
pop
add
stc
cmpsl
mov
pslld
repnz
in
test
mov
ret
sbbl
movsb
es
sub
jmp
out
mov
push
cld
mov
adc
ror
repz
rcr
pop
push
bound
cmc
pop
call
movl
outsl
iret
test
cmp
loop
push
out
cmp
pop
dec
sti
xchg
or
bound
pop
jbe
in
inc
iret
sub
xchg
push
push
in
push
mov
or
push
push
or
mov
xor
inc
mov
dec
movsl
xchg
pusha
jmp
fwait
add
cltd
push
punpcklbw
or
fistpll
mov
jl
or
out
nop
inc
jl
data16
cmp
or
iret
inc
outsb
lcall
lcall
int3
lcall
adc
or
test
orl
lcall
rol
and
jp
mov
add
ficomps
mov
cwtl
mov
cmp
push
mov
dec
push
push
je
xchg
xchg
xchg
mov
lret
movsl
icebp
sbb
xchg
adc
xor
inc
jle
rcrb
in
sahf
push
xchg
cmp
xchg
rolb
jb
mov
cmp
call
add
jl
cld
mov
out
pop
ja
inc
aaa
push
add
loop
and
push
or
shrl
scas
cli
sub
adc
out
or
or
inc
mov
rcrb
aaa
das
test
inc
lock
test
scas
mov
ret
dec
es
popa
sbb
fidivl
pop
insb
lods
cmc
fisubrs
pop
test
fs
xchg
jne
fwait
test
pop
add
adc
cmc
js
lahf
ret
cs
nop
jl
sbb
push
inc
dec
leave
data16
cmp
enter
adc
cmpsl
cmp
lcall
sub
lock
clc
cmp
scas
rorl
dec
or
mov
leave
mov
ret
insb
lods
dec
lcall
aam
out
inc
data16
cmp
adc
and
or
cwtl
inc
xlat
int3
xchg
test
aas
ja
mov
test
lret
mov
in
filds
out
in
xchg
out
mov
mov
add
loopne
lret
jge
je
adc
or
pop
or
or
divl
adc
jo
mov
cmpsl
pushf
cmp
inc
cmpsb
rcll
mov
mov
mov
pop
insl
popa
frstor
xlat
popa
dec
pop
and
mov
push
out
outsb
es
sarl
adc
xchg
pop
data16
cmp
jge
sub
adc
cmp
jbe
add
xchg
and
xor
adc
daa
jle
sahf
arpl
push
pop
clc
or
mov
pop
cli
xor
test
das
mulb
das
movsl
stos
and
and
push
jo
inc
cmpsb
out
add
mov
mov
insl
gs
cmc
jbe
xor
pop
rorl
sub
sbb
jecxz
add
je
stos
xor
mov
inc
popa
mov
std
fwait
shl
popf
nop
ljmp
into
scas
dec
dec
fisubl
dec
movsb
mov
push
movsl
add
inc
mov
cli
dec
push
hlt
rcll
lret
xor
add
xchg
mov
jnp
sbb
and
loope
cmc
jmp
into
fnstcw
aaa
fsub
mov
ss
sti
push
and
fwait
loopne
in
sub
clc
push
in
mov
push
cmp
jb
mov
sbb
mov
sub
xchg
mov
cld
mov
adc
xor
adc
xchg
mov
dec
popw
mov
fadds
pop
imul
xchg
push
xchg
sarb
insb
and
cmpsb
or
xor
cmp
push
pushf
dec
sar
inc
sbb
xor
adc
rolb
push
cmp
bnd
add
xchg
cmp
mov
xchg
fstps
mov
and
je
cmp
cli
xchg
mov
xor
cld
jle
sbb
push
jnp
and
adc
push
mov
dec
je
aas
ljmp
sbb
adc
fwait
lods
mov
push
dec
dec
mov
dec
push
int3
pop
clc
mov
dec
jo
cmp
adc
movsb
xchg
in
adc
or
scas
mov
add
push
cmp
add
into
loope
cmp
sub
mov
jl
aas
outsl
xorl
das
es
fcomi
sbb
xor
pusha
xor
mov
ds
lret
faddp
scas
dec
ficoms
stc
std
dec
and
cld
test
sub
adc
mov
push
xchg
adc
sbb
repnz
or
inc
lret
xchg
je
test
test
cmpsb
pushl
out
adc
fnstsw
js
sti
sub
sti
adc
and
adc
imul
xchg
rorl
xor
sbb
cmp
pop
pop
push
xchg
or
dec
dec
lods
out
pop
dec
stos
dec
ss
push
sub
xchg
jae
loop
out
xor
std
scas
cmpsb
push
xchg
sbbl
int
leave
pop
inc
test
inc
js
cmp
xchg
imul
cmc
je
sub
ja
je
imul
adc
add
xlat
mov
sub
les
fldl
rclb
and
adc
data16
cmc
je
mov
xor
aaa
inc
out
jns
push
jae
out
jbe
add
xor
add
xor
push
testb
gs
test
push
xorl
or
sub
cmpsb
dec
in
xchg
out
xchg
sub
jmp
das
mov
push
mov
out
jb
jl
mov
sbb
iret
dec
icebp
or
fists
aaa
filds
cs
xchg
inc
lahf
mov
xchg
rorb
mov
xor
call
das
aaa
rclb
dec
or
sbb
leave
jp
xor
mov
or
inc
sbb
xor
mov
pusha
hlt
out
sub
xor
aas
xchg
push
cmpsb
stos
fisubrl
aad
test
and
inc
lock
inc
stc
int3
loopne
in
jmp
stos
mov
jecxz
adc
stos
xchg
sti
mov
repnz
push
aas
dec
dec
and
or
aam
out
test
xor
mov
fcomps
inc
cmp
stc
test
and
pusha
push
xor
xor
jb
mov
inc
into
add
stos
fs
mov
shrl
cmpsl
mov
in
xor
mov
test
je
xor
push
ret
imul
out
sub
cmp
dec
mov
test
pop
cmp
clc
and
cmpsl
and
imul
cmp
jb
xor
sbb
inc
filds
nop
or
jnp
loope
add
xor
sub
jo
orb
stc
repz
adc
xchg
sbb
jl
stos
add
pop
mov
inc
add
and
sbb
push
jnp
lret
push
pushl
cli
incl
lcall
mov
or
loop
mov
mov
iret
xchg
dec
mov
lahf
xchg
push
mov
mov
sahf
scas
cmp
mov
faddl
inc
dec
pop
mov
in
mov
add
in
xor
cmp
xchg
dec
xchg
int
mov
in
movsl
and
jle
js
call
test
lea
aas
int
test
fnstenv
test
shlb
sarb
mov
fstpl
lret
loope
mov
and
roll
aam
stos
xor
cs
pop
or
pop
xor
or
icebp
or
fbstp
imul
inc
xor
outsb
mov
cmpsb
std
bound
test
sbb
lods
mov
mov
nop
lea
sbb
or
push
jo
cli
push
cmp
clc
test
fdivl
iret
cmp
leave
lock
push
sub
dec
inc
data16
loopne
push
add
ds
pop
mov
xor
xchg
cmc
dec
pop
test
fisubrs
cmp
out
lahf
sub
sub
inc
sub
popa
sbbl
cmp
les
mov
out
dec
inc
mov
mov
scas
adc
pop
lea
ret
xchg
iret
pop
ljmp
inc
jo
loopne
inc
jge
sub
push
push
or
push
imul
daa
jl
push
test
sub
adc
bound
out
pop
jp
mov
ds
fs
push
xchg
pop
cli
out
jl
pop
mov
rcll
outsl
push
pop
push
pop
shr
in
mov
sbb
lds
pop
out
in
pushf
sbb
aas
imul
bound
stos
xchg
mov
push
data16
imulb
mov
mov
and
dec
jmp
and
repz
push
jns
pusha
jecxz
and
dec
inc
dec
fcompl
jbe
cmc
das
jl
inc
mov
push
shrb
adc
and
jbe
cld
out
sarl
in
in
ja
in
xchg
shlb
popa
outsl
repnz
xchg
js
out
pop
inc
and
je
mov
inc
lds
es
lods
fsubrp
mov
adc
nop
sbb
jmp
pop
xor
popa
adc
popa
xchg
adc
xchg
popf
psubsw
shrb
iret
adc
inc
mov
jnp
orb
xchg
xchg
fmull
mov
testl
pcmpgtw
sti
adc
and
rclb
fbstp
je
or
jp
orl
inc
scas
lods
mov
pop
mov
dec
push
pushf
inc
pop
es
and
movsb
les
fisttps
outsb
fsubrs
fwait
das
or
adc
cli
push
jmp
cmpsl
pop
xchg
call
xchg
xchg
movsb
lret
push
sbb
xchg
test
mov
lock
ficomps
popa
xchg
lds
or
hlt
call
add
add
popf
test
lahf
arpl
sub
pop
xchg
cmp
loope
xor
aad
ja
enter
iret
sbb
jae
enter
xor
cmp
out
xorb
decb
push
sub
sbb
int3
sub
sbb
aam
popf
push
or
scas
inc
xor
out
je
sbb
sbb
mov
orb
test
sub
jp
rdmsr
jb
insl
imulb
sub
jecxz
jle
sub
gs
cltd
pop
je
jne
pushf
pop
add
xchg
pop
jl
push
movsl
mov
pop
adc
cmp
dec
loope
insb
sub
jnp
loop
mov
movsl
roll
ud0
rclb
jae
loope
mov
out
cmpb
or
pop
lahf
mov
and
rorl
cmp
cmpsb
fidivl
iret
daa
xor
mov
dec
sbb
and
arpl
sbb
subl
sbbl
insl
shrl
xor
jbe
test
and
loope
bnd
mov
pop
xchg
loop
sub
leave
clc
aaa
fisttps
test
test
js
or
insl
adc
mov
test
clc
xchg
ja
xchg
repz
fcoms
xchg
aam
xchg
adc
jno
mov
cmp
fwait
cmp
aad
add
mov
jo
sub
insl
stos
dec
call
into
addl
addr16
xchg
inc
mov
outsl
nop
or
mov
aad
push
lock
mov
cmpl
jmp
dec
fst
xchg
addr16
inc
push
outsb
mov
js
mov
pop
push
repz
cmp
rclb
push
jns
mov
push
hlt
or
ljmp
push
fmuls
in
mov
inc
sub
fisubs
lods
jl
mov
push
imul
call
pop
out
pusha
push
test
call
push
rorl
loope
jp
or
push
cmc
mov
xchg
jle
dec
mov
add
mov
dec
dec
sbb
inc
mov
scas
enter
aad
mov
imul
pop
lock
ljmp
imul
pop
dec
aad
repz
in
fldenv
adc
jg
cmp
jno
test
sub
and
sbb
ljmp
call
sarl
or
sbb
or
jne
or
cmpsb
xchg
push
bound
jl
mov
les
jle
jnp
push
sub
pop
push
out
or
push
xor
xor
scas
and
aas
call
das
pusha
sub
fmul
fs
enter
jmp
test
imul
sbbl
and
lds
sbb
push
les
ret
jno
pop
lret
or
icebp
sbb
inc
sub
out
jbe
fcoms
lock
push
xchg
xor
test
loop
shll
outsl
in
adc
sbb
fstps
mov
stc
cmp
xchg
sub
add
cli
or
sub
push
pop
outsb
sahf
int
or
les
mov
andl
aaa
rcll
fldcw
daa
mov
ja
mov
outsb
add
shl
inc
jge
jg,pn
popa
fcoml
roll
sbb
and
inc
pop
or
inc
fdivp
mov
pop
fdivp
pop
jle
jb
test
loopne
fbstp
jne
sbb
cmc
inc
or
outsl
xlat
mov
push
xor
mov
std
jnp
adcb
movsb
inc
fs
movsl
repz
roll
rcl
repz
insl
xchg
fsubs
jle
stos
cli
cmp
jnp
and
push
and
je
into
inc
std
vminps
mov
xchg
rclb
aas
cmp
fs
add
repz
data16
es
dec
sbb
jge
ss
aad
cld
cmpsb
scas
adc
xorl
add
xchg
movsl
cmc
or
jb
testl
adc
adc
stos
shrl
jl
xchg
loope
je
sbb
add
push
pop
cmpsl
ret
cli
movsl
pop
int3
and
in
and
add
imul
ret
sarl
jb
push
jne
jnp
pop
out
cwtl
jnp
arpl
adc
xchg
flds
mov
add
scas
push
xlat
add
test
dec
fcmove
out
xor
aas
cmp
fwait
mov
cmp
decl
sti
push
mov
dec
pushf
xlat
mov
shll
popf
sbb
mov
int
test
dec
mov
xor
sbb
inc
ficompl
push
outsb
pushf
in
pop
aas
xor
insb
lds
lods
in
push
and
cld
mov
stos
bound
inc
les
dec
sti
outsb
icebp
dec
xchg
nop
les
iret
jbe
mov
or
pushf
jne
test
in
mov
loop
dec
popa
add
inc
jmp
mov
jnp
sbb
imul
js
add
cmpb
sbb
cmpsl
jnp
in
push
aas
sub
dec
mov
rcr
test
in
xor
adc
movsb
popa
or
mov
aad
jbe
ja
push
pusha
cmp
mov
scas
mov
in
jl
jle
daa
rcrl
jae
fs
jo
test
pushf
hlt
aad
imul
repz
arpl
imul
in
dec
push
inc
daa
pushf
push
lds
dec
aaa
daa
xchg
push
cmp
sub
into
add
in
div
insb
cmp
sbb
lds
and
jmp
sbb
adcl
pop
mov
mov
cld
jne
xor
test
insl
jbe
adc
ds
xor
add
aam
pop
push
mov
inc
xchg
scas
push
mov
mov
enter
in
addl
push
push
test
insb
jns
sub
iret
mov
jp
mov
push
icebp
sub
cmp
add
loope
and
cwtl
je
pop
sbb
push
push
sub
stos
int3
fistpl
outsb
inc
jae
jo
push
jecxz
mov
shrl
mov
pushf
pop
fwait
add
call
or
fistpll
mov
cli
rolb
bound
xlat
mov
imul
cmpsb
outsl
test
stc
mov
xchg
stc
xchg
adc
push
fcmovne
cli
mov
shrb
and
lcall
popf
lahf
scas
or
movsb
sub
jmp
cmp
fbld
jae
add
aaa
mov
test
mov
jb
push
pop
stc
pop
scas
repz
inc
or
mov
xchg
in
jmp
dec
fdivl
pop
popf
jne
push
sub
mov
sub
stc
dec
xchg
lret
stos
xchg
xor
lea
pop
mov
js
movsl
pushf
hlt
stos
arpl
xchg
or
scas
push
mov
cmp
mov
jmp
rcrb
nop
ds
movsl
ss
mov
cmp
mov
enter
in
inc
jg
ss
lret
lea
inc
mov
enter
cmp
pushf
add
lret
jmp
cmp
fucomip
cmp
cltd
pop
dec
and
andl
aas
lret
xchg
call
in
inc
imulb
mov
xchg
inc
packsswb
lds
outsb
mov
jo
lds
cmp
lahf
and
push
mov
movsl
sahf
jbe
movsl
aam
mov
sub
mov
int3
shlb
rcl
incl
inc
sbb
lcall
or
sub
lods
ret
push
test
jns
and
insl
jl
pmuludq
imul
cmp
sbb
cmp
fisubrs
in
sub
mov
sub
dec
add
jns
sbb
js
mov
add
xor
cmpsb
and
pusha
xor
shl
push
adc
mov
ja
mov
push
into
dec
lock
pop
jnp
adc
adc
xchg
test
and
test
dec
bound
xor
pop
adc
pop
xor
filds
mov
ds
aam
or
pop
int
cmp
mov
dec
pop
stos
les
mov
sub
nop
leave
shll
bound
xlat
pop
xchg
cmpsb
int3
mov
adc
push
out
adcl
add
aaa
sbb
pop
ds
punpckhdq
push
stc
pusha
loope
and
cmp
loope
inc
fdivr
loopne
mov
mov
sahf
push
scas
cmp
push
data16
lock
pop
add
sbb
push
or
jg
ret
test
cmpsb
ja
mov
arpl
jo
or
repz
xchg
outsb
pop
icebp
mov
or
shll
loopne
cmp
dec
mov
test
int
sbb
shr
push
mov
push
pop
inc
sbb
cmp
pop
in
jbe
add
outsb
daa
push
aas
pop
into
jge
jb
test
cmpsb
shrl
shrl
mov
inc
daa
lock
js
data16
mov
jne
pop
test
pusha
dec
adc
xor
mov
mov
stc
incb
push
lds
fiaddl
cmp
inc
xchg
dec
push
dec
jge
out
jb
cs
sub
sub
or
cmpb
push
push
sub
in
cs
xchg
pop
mov
iret
xchg
call
jo
jae
ret
push
mov
inc
dec
orl
xchg
outsb
mov
in
jp
and
cmc
sarl
push
cmp
jnp
mov
mov
xor
and
insl
into
xchg
mov
fildl
mov
or
pop
inc
cmp
pop
lret
or
pop
xorb
aam
jmp
in
mov
out
mov
sahf
mov
push
popf
adc
sbb
lcall
movsl
sbb
fxch
lret
insb
clc
sbb
mov
jb
cmc
mov
lcall
cmpsl
fsubl
pop
mov
mov
dec
sbb
imull
xchg
loope
sub
ljmp
leave
sub
or
push
cwtl
test
sbb
ja
xor
popf
fstps
lcall
inc
pop
adc
repz
stos
sbb
std
and
fs
mov
jge
mov
fldl
mov
ljmp
inc
xchg
mov
pop
cmp
mov
pushf
mov
pop
add
in
adc
sar
push
sub
stos
cld
iret
lods
mov
dec
cmp
jecxz
push
rorl
mov
sbb
xchg
jecxz
push
mov
out
mov
adc
aad
mov
inc
stos
aam
insl
or
mov
mov
and
xchg
adc
dec
sbb
mov
imul
sub
inc
in
movsl
mov
sub
test
sbb
gs
jns
pop
in
mov
shll
fsubs
lods
xor
lcall
mov
hlt
pop
andl
or
icebp
mov
cmp
cmp
inc
xchg
in
out
jne
mov
jb
fwait
into
scas
fs
aaa
cli
jbe,pn
mov
fidivrs
int
stc
mov
movsb
es
addr16
jp
or
pop
mov
adc
mov
ljmp
and
pop
in
xchg
iret
adc
movsl
xor
pop
mov
lret
shr
aaa
dec
nop
lock
jb
xchg
xchg
mov
xchg
jns
push
push
lock
outsb
ffreep
inc
or
jnp
lret
adc
dec
cmpsb
mov
cli
mov
shll
stos
mov
arpl
dec
adc
lock
shl
pushw
lahf
dec
and
push
cmp
mov
pop
dec
cwtl
pushf
dec
call
mov
push
jnp
insl
sub
inc
pop
imull
push
mov
std
jmp
shll
shl
shlb
rol
inc
call
push
jl
cwtl
aaa
out
jle
in
mov
xlat
cltd
mov
cmp
and
or
aaa
pop
pop
add
jmp
in
xchg
arpl
push
add
add
unpckhps
mov
push
or
or
push
js
adc
icebp
fwait
cmp
pop
out
mov
ss
stc
xchg
scas
sbb
jno
std
movsb
pop
jle
mov
fisubrl
lret
pop
mov
popa
cs
jnp
cmc
repnz
jge
arpl
cwtl
out
ja
adc
jecxz
test
inc
mov
xchg
fsubrl
test
mov
mov
ret
xor
loope
adc
xchg
cltd
add
push
or
adc
repnz
pop
mov
xor
dec
sbb
inc
xor
mov
mov
xor
jo
pop
pop
or
and
out
cmp
insl
push
jmp
pop
out
push
out
int
loopne
xchg
add
lahf
fwait
xchg
jmp
push
shlb
pop
push
lods
jp
in
jmp
imul
push
lret
or
mov
push
into
pop
push
repz
push
pusha
inc
fwait
add
jp
inc
lods
ret
sub
test
sbb
cmp
or
xchg
pop
ror
mov
fstpl
sbb
pop
mov
mov
and
into
aam
adc
mov
sti
outsb
dec
fstp
mov
sbb
fsubl
mov
and
orb
es
pop
cwtl
xchg
lahf
out
push
cmp
rorb
jae
xchg
mov
scas
mov
mov
cld
out
push
xchg
rcrl
and
mov
adc
rol
popf
or
mov
cmp
xchg
or
rcr
test
cmpsb
inc
out
push
dec
mov
cmpsl
pop
out
or
outsb
aas
call
mov
ficoml
fucom
inc
dec
jnp
xor
push
bound
addr16
scas
test
mov
xchg
daa
push
mov
inc
jl
mov
sub
push
xchg
xorl
test
mov
mov
std
int
mov
mov
std
je
mov
ss
jo
cmp
xchg
fimuls
lea
and
push
test
pop
lret
and
cmp
test
jg
popa
xchg
jb
lea
repz
xchg
sub
jmp
mov
sbb
or
xchg
arpl
inc
cmp
call
jecxz
popf
and
mov
dec
jns
push
inc
nop
xchg
mov
xchg
sub
lcall
jl
inc
stos
stos
cli
jecxz
xor
cmc
cmp
xor
push
cmp
adc
mov
xor
stc
jo
pop
insl
data16
xor
xor
cwtl
aaa
fucomi
jns
int
pop
call
jl
xor
je
jmp
inc
movsb
in
mov
jb
mov
adc
inc
in
sub
push
imul
lods
int3
sbb
ret
mov
and
push
jno
aas
dec
icebp
pusha
xchg
lret
and
aam
cld
jl
lret
dec
and
dec
das
inc
xlat
inc
inc
repz
into
lcall
popf
cmp
adc
cmp
ja
sbb
sub
mov
outsl
or
xchg
add
sub
or
scas
lods
cwtl
mov
jb
aam
lods
ds
xor
dec
out
mov
clc
shrl
fcomi
cwtl
mov
pop
sub
movsl
mov
nop
cs
call
mov
xchg
sbb
cs
jp
dec
ja
leave
pop
into
loope
sub
mov
push
mov
jbe
in
pop
mov
sbb
lret
test
sarb
add
aaa
mov
sahf
push
xor
pusha
js
lock
aam
in
inc
andb
rcll
mov
les
cmp
divb
xchg
or
cmp
inc
out
sbb
mov
stos
and
arpl
xchg
pop
stos
xchg
loopne
ds
push
jns
inc
leave
sub
jbe
sub
iret
mov
icebp
jne
jns
cmpsl
push
push
jmp
imul
inc
insl
call
xorb
push
or
pop
cmp
jle
lret
add
push
lahf
movsl
mov
jg
ja
sub
sub
pop
test
pop
jae
lds
jno
ljmp
pop
pop
dec
or
in
jo
push
scas
cmpsb
mov
inc
dec
cli
fld1
jecxz
mov
add
jmp
lock
lret
femms
test
rol
xchg
sbb
test
mov
pusha
mov
popl
sub
mov
inc
jo
repz
mov
add
jns
mov
scas
adc
std
cmp
in
jae
xchg
ret
jo
sbb
and
push
incb
in
pop
pop
outsl
in
out
incl
add
mov
xchg
in
lret
insl
mov
sub
and
jb
mov
sub
push
bound
cli
adc
dec
pop
xor
cmpsl
arpl
aas
pop
or
pop
mov
lea
inc
arpl
ss
enter
pop
add
in
sahf
push
push
jne
pop
pop
and
add
test
cmp
mov
xor
test
ss
mov
jne
xor
loop
sbb
fbld
xor
addr16
or
jbe
into
sbb
filds
dec
rorb
push
mov
adc
mov
fdivrl
push
into
imul
outsl
dec
ja
ljmp
fucom
lcall
add
pop
push
filds
cltd
int3
out
mov
repnz
cmpsl
negb
pop
fidivl
jle
cwtl
call
movsb
clc
daa
aaa
lret
adc
mov
sub
mov
sbb
fistpl
pop
test
or
push
mov
dec
dec
mov
cmp
xchg
mov
sbb
inc
mov
daa
jb
sbb
pop
test
pop
mov
cwtl
cmp
scas
inc
rclb
mov
aad
cmp
pop
mov
mov
push
std
xor
in
xchg
movsb
in
inc
mov
test
sub
xlat
push
leave
jle
adc
mov
or
mov
or
fldcw
mov
out
ret
lods
das
lods
sub
lods
aam
stc
sbb
xor
dec
test
sahf
push
cld
and
cmc
add
inc
xchg
shll
leave
rcrb
lcall
jns
adc
shl
or
in
mov
jnp
mov
cmpsl
pop
sbb
mov
adc
jl
mov
mov
xchg
ss
jmp
or
fildll
pop
adc
lret
jge
rcrl
and
or
lahf
xor
daa
xorb
mov
mov
mov
sbb
mov
push
lahf
test
movsb
adc
xchg
and
adc
adc
aad
call
test
xor
shl
int3
insl
mov
scas
fnstcw
jge
dec
push
and
scas
loopne
lahf
sub
icebp
xchg
sbb
test
mov
test
js
xchg
cmp
in
jg
into
addl
das
sahf
leave
std
mov
mov
repz
js
jmp
pop
sbb
bound
lret
jbe
and
cmc
sub
jp
sub
int
xor
mov
mov
shrl
add
xlat
rolb
cmc
subl
add
jmp
and
push
mov
aam
pop
xlat
stc
sub
add
mov
xchg
testl
xor
adc
dec
add
mov
adc
jmp
push
dec
filds
or
pop
or
sub
xchg
fcom
jb
add
jns
shr
jae
test
jle
pushf
rcrb
scas
imul
dec
gs
cmpsb
xlat
mov
mov
lahf
xor
cmp
sub
adc
mov
aad
or
imul
insl
push
sbb
cld
jo
enter
push
lret
aam
push
les
stos
in
xchg
xchg
xchg
lock
sub
pop
sbb
push
rolb
cmove
sqrtps
bound
or
jge
scas
movsb
pop
jl
or
mov
ret
inc
and
out
fisttps
stos
int3
push
jg
fsubrs
fdivrl
xor
sbb
push
jl
aad
scas
mov
cltd
iret
sahf
dec
push
mov
jmp
pop
mov
mov
pop
add
imul
xchg
and
inc
insl
ljmp
lahf
movsl
push
xor
pop
sarl
jae
dec
adc
fcompl
fisubrs
cmc
cmpsl
xor
daa
data16
or
dec
lcall
movsbl
push
sbb
pop
push
outsb
hlt
int3
out
cwtl
daa
fldl
cmp
outsb
sub
jmp
arpl
xchg
in
enter
jl
sti
cmpsb
inc
pop
dec
mov
sbb
lret
fdivrs
iret
nop
aas
jg
pop
ret
adc
push
jae
loopne
sti
shll
out
sub
leave
cmpsl
sbb
jnp
xlat
push
pop
pushf
nop
xor
mov
in
int3
movsb
enter
mov
or
icebp
lret
aam
popl
dec
adc
imul
sbbl
mov
jnp
jnp
stos
jl
int
push
mov
nop
loop
cmp
inc
scas
jl
stc
test
jg
sti
shr
xchg
leave
je,pt
pop
lret
std
mov
jecxz
jecxz
jne
push
dec
inc
jae
mov
cmp
dec
cmpsl
xor
push
mov
xchg
push
repz
les
push
adc
dec
lahf
je
call
dec
pop
lea
std
mov
fmuls
sub
xor
add
mov
push
nop
outsb
jmp
xlat
sub
loop
xchg
adc
outsb
dec
orb
adc
add
cmpsl
dec
inc
jnp
rcrl
sub
mov
je
bound
rcr
xchg
push
mov
mov
and
test
cmp
inc
mov
cs
cltd
dec
cwtl
mov
loop
test
push
or
mov
out
jmp
dec
pop
dec
inc
insl
adc
loop
cld
sbb
mov
mov
push
xchg
gs
ffree
fsubr
cmpb
xor
ja
push
jb
adcb
mov
jbe
pop
jp
dec
push
jno
pop
test
test
ret
sahf
add
or
aas
test
push
stos
pop
incb
inc
cli
dec
pop
add
mov
adc
cmpsl
mov
mov
test
pop
mov
nop
cmpsl
and
gs
mov
sahf
xchg
insl
scas
test
lcall
arpl
icebp
stos
call
cs
sbb
pop
add
ds
jecxz
inc
imul
xor
sarb
add
hlt
mov
les
shrb
xchg
push
pusha
jl
sbb
mov
out
dec
push
or
xchg
aad
mov
call
dec
inc
cmp
mov
jg
xor
rolb
mov
aam
push
xlat
shlb
mov
rclb
mov
mov
pop
fidivrs
cwtl
mov
jns
jmp
push
rcrb
das
popa
cmpsb
push
rolb
and
mov
sbb
gs
enter
add
dec
in
mov
sub
fidivs
xchg
out
call
fimuls
and
sub
imul
jbe
mov
pop
add
ret
inc
or
jmp
sub
in
in
je
mov
shrl
jg
mov
adc
mov
and
inc
sub
dec
pop
test
pop
in
lds
jecxz
mov
sbb
das
cld
mov
jbe
lock
std
enter
fimull
inc
loope
dec
push
outsl
xchg
dec
shll
lea
lret
mov
dec
ret
cmp
ret
cmp
test
testl
lods
fidivrs
cmpb
xor
pop
xchg
xchg
clc
int3
je
push
jno
add
add
and
push
popw
adc
cmp
scas
hlt
pushl
cld
or
shrl
mov
cmp
cmc
add
jo
jge
inc
jp
lcall
les
mov
mov
add
mov
scas
inc
jge
outsl
pop
test
mov
je
daa
add
test
std
adc
cmpsl
std
jmp
add
dec
or
mov
mov
push
scas
pop
adc
sbb
mov
jl
sbb
dec
pop
adc
ja
push
mov
orb
sub
jl
sub
and
cld
cltd
sub
push
mov
jo
sbb
in
cmp
jle
test
mov
jns
pop
scas
inc
out
adc
dec
es
mov
test
mov
enter
cmp
and
jne
shrl
testb
sub
mov
mov
or
jae
mov
test
or
cmp
ja
inc
dec
fwait
pop
loope
inc
pop
iret
ret
repnz
jbe
cld
mov
add
or
movsl
outsb
xchg
dec
dec
push
mov
jg
in
imul
in
jno
and
in
dec
inc
xlat
loope
mov
pushf
xor
pushl
movsb
or
xor
and
inc
pop
add
scas
jmp
sbb
fs
or
fsub
inc
xchg
ret
imul
push
mov
mov
pop
adc
xchg
psrld
rorb
sub
outsl
dec
in
or
in
jp
sub
mov
dec
inc
les
ret
pop
int
add
jl
mov
ds
mov
ds
pop
mov
sti
rol
aam
movl
mov
aad
jecxz
sbb
dec
js
pop
jnp
xchg
daa
xorl
sbb
fidivrs
mov
les
mov
or
mov
pop
mov
ja
dec
fsubrl
mov
mov
lcall
enter
std
jle
daa
xchg
mov
or
enter
mov
pop
mov
mov
sub
xchg
jbe
cwtl
sbb
add
cwtl
aaa
sbb
aam
lds
jecxz
imulb
cli
movsb
andl
pop
into
inc
sarl
mov
dec
pop
test
xor
imul
mov
cmp
push
sbb
and
mov
inc
mov
jecxz
cmc
adc
loope
push
sub
dec
test
cs
or
mov
and
jl
adc
mov
dec
icebp
push
xor
notl
mov
rclb
inc
add
mov
lcall
les
insl
mov
or
pop
mov
das
pop
push
call
test
sub
ss
test
imul
cwtl
out
and
jnp
test
cmp
sbb
and
clc
inc
ljmp
inc
jae
aam
inc
mov
sub
dec
cs
inc
or
add
imul
cmp
pop
pop
stos
push
inc
enter
jg
jmp
test
mov
out
push
jp
imul
hlt
lret
fistps
cmp
inc
cmp
pop
cwtl
daa
mov
push
mov
fdivs
xchg
xor
cmp
nop
pop
push
sti
cmp
insl
add
or
xor
cmp
adc
mov
jae
lods
inc
std
dec
rcr
mov
pop
cmpsl
jno
mov
push
inc
outsb
insb
mov
pop
cmp
ficompl
push
scas
iret
adc
lret
mov
andl
fdivrl
es
jg
sbb
movsl
cwtl
stc
cmpsl
outsl
add
or
sbb
movsb
fmuls
mov
xorl
and
lcall
or
icebp
dec
mov
xchg
jecxz
in
sbb
sub
lret
outsl
int
aam
jl
sub
pusha
dec
pop
enter
stos
bnd
sti
ret
mov
cmp
cmp
dec
mov
sbb
test
nop
or
loopne
int
fiaddl
inc
push
xchg
mov
enter
xor
add
xchg
jl
lahf
mov
mov
cld
and
lcall
outsb
insb
sbb
pop
or
pop
lock
jno
adcl
cli
xchg
imul
push
mov
push
scas
and
sub
out
mov
mov
loope
sbb
lcall
adc
into
mov
ljmp
mov
mov
ret
subb
push
fwait
mov
adc
mov
cmp
sub
fldenv
xchg
add
cld
fmulp
mov
xor
sub
dec
out
lahf
aas
es
jo
mov
adc
or
xlat
sbb
fcompl
pop
lea
cmp
mov
fisttpl
add
std
mov
sub
sahf
cmc
lahf
in
orl
or
mov
bound
sbb
mov
mov
sbb
lcall
shll
cmp
sbb
stc
push
sbb
mov
sub
adc
push
cltd
dec
push
shrl
inc
xor
fcom
dec
dec
gs
movsl
add
dec
jnp
mov
xchg
dec
je
fsubrs
movsl
imul
loope
in
fsts
lcall
sahf
jo
loopne
mov
jg
ret
imul
sbb
and
sti
sub
and
in
jl
sbb
inc
or
and
inc
xor
dec
test
sub
addr16
mov
int3
add
and
fildl
xchg
imul
add
add
mov
xor
pop
loopne
mov
adc
loop
ja
aas
ja
push
sub
push
adc
adc
push
pop
lods
xor
aas
xchg
movsl
loope
add
bound
pop
jg
nop
mov
cmp
cmp
push
pop
jb
dec
fsubrl
xchg
das
arpl
mov
shl
cmpsl
pusha
dec
in
and
and
add
lods
pop
mov
ficomps
cmpsb
xorl
hlt
cwtl
mov
lods
sbb
push
sub
pop
push
inc
call
mov
cmp
jno
add
jle
pop
sub
ret
ss
adcl
pmulhw
loopne
xchg
fwait
push
sub
stos
inc
add
dec
outsb
xor
mov
sub
inc
leave
dec
hlt
sbb
mov
es
pusha
pop
dec
shll
and
into
xchg
jae
hlt
out
mov
pushf
dec
test
and
inc
pop
std
decb
mov
push
incl
ret
dec
fdivl
xchg
jmp
andl
mov
jae
ficompl
pop
cld
int
jae
inc
mov
and
mov
in
dec
push
push
icebp
dec
inc
push
das
or
push
xchg
neg
and
inc
xchg
out
adcb
xchg
sub
shlb
ret
dec
jle
enter
xchg
add
test
icebp
hlt
sbb
lret
icebp
and
hlt
mov
clc
or
cwtl
sbb
jge
mulb
jge
popf
pop
repz
imul
loopne
fmulp
inc
inc
daa
bound
ret
hlt
mov
fisubrs
push
pop
mov
popf
sbb
and
jne
push
mov
fmull
aam
daa
xchg
pushf
aaa
jl
lock
dec
adc
push
aas
pop
and
mov
xchg
dec
or
rcl
ss
xchg
or
xor
insb
pop
push
dec
pop
mov
divb
add
arpl
mov
loope
cmp
mov
fs
inc
aam
dec
push
es
mov
ret
shl
pop
popa
ja
add
jp
lods
xchg
movsl
jno
mov
push
fistps
jb
ret
les
xchg
mov
test
es
push
repz
pop
aad
aas
insb
lcall
dec
or
and
rol
out
dec
in
adc
xor
pop
cmp
dec
push
nop
cmpsb
jge
or
lods
or
fcomp
inc
inc
jecxz
and
cmp
in
ljmp
adc
loop
movsb
dec
sbb
jle
cs
or
pop
ds
movsl
push
les
xchg
add
int
jns
fs
pop
jb
mov
fmul
xlat
mov
imul
jb
call
jns
xchg
push
scas
xchg
test
mov
dec
repz
outsl
adc
or
decb
or
sub
jmp
test
popf
xchg
dec
mov
jge
sbb
pop
data16
pop
or
bound
push
ja
cmp
aas
sahf
sub
jg
inc
outsl
in
rorb
or
dec
jno
arpl
pop
mov
jmp
test
mov
or
mov
jmp
inc
pop
test
nop
adc
add
cmpsl
into
fcomps
mov
je
int
rorb
lret
or
xor
and
out
mov
out
adc
mov
mov
imul
test
pop
xor
xor
mov
call
adc
mov
ds
xchg
inc
pop
fnsave
mov
test
jge
jge
cmp
shll
inc
adc
pop
out
mov
sahf
pop
jb
fisttpll
pop
sub
xchg
push
mov
xlat
inc
jae
insl
loopne
popf
jmp
mov
xchg
aam
adc
pop
cmp
sar
add
lea
push
cmpsb
ljmp
or
call
imul
popf
or
push
ljmp
adc
sub
lret
dec
push
xor
mov
add
or
aas
lcall
dec
mov
xor
dec
xlat
repz
xor
rclb
fimull
movsl
cmpsb
and
mov
jns
je
mov
cmpl
mov
ss
and
ret
repnz
mov
das
sbb
jle
xchg
aam
out
jo
std
test
je
xchg
inc
daa
jle
loopne
enter
dec
xchg
xor
cs
adc
aaa
sub
xchg
imul
in
dec
mov
add
inc
dec
inc
push
mov
inc
xor
xlat
enter
ret
adc
push
cltd
cs
lock
mov
dec
fwait
mov
lods
mov
mov
xlat
scas
loopne
pop
xchg
push
jo
sbb
xchg
or
cmp
dec
lea
adc
icebp
loopne
mov
bound
mov
sbb
aad
sbb
cmc
mov
out
aad
inc
jne
xor
lock
sbb
jl
movsl
int3
xlat
cmp
gs
lock
mov
rcll
loopne
outsl
out
xchg
jmp
xchg
add
inc
loopne
jbe
push
jo
pop
cmp
int3
sahf
push
jne
aam
mov
mov
jg
in
fcmovbe
adc
jl
lea
mov
lcall
add
ljmp
popf
pop
jmp
stos
mov
add
sbb
popa
push
xor
lcall
dec
insl
pop
aam
aad
inc
mov
int
dec
jnp
lock
jle
pop
ljmp
imul
pop
loop
jno
clc
or
jl
sbb
in
cmp
xor
movsb
orl
loope
push
jp
test
aad
sahf
xchg
int
loop
push
std
xchg
cmp
ss
lods
arpl
insb
sub
jne
fwait
add
addl
stos
or
rclb
out
inc
out
xchg
nop
out
sub
dec
mov
mov
fst
sub
aas
adc
pop
cmp
and
lea
daa
xorb
lods
out
subw
rcl
or
sub
xchg
pop
or
mov
mov
jmp
sarb
mov
icebp
and
mov
mov
fs
daa
and
xchg
or
orl
cmpsl
adc
js
xchg
stos
insb
ror
int3
xor
daa
in
push
test
movl
add
test
xchg
sti
scas
cmp
xchg
in
jp
pushf
xchg
out
leave
stc
dec
mov
push
ficompl
dec
rcrl
dec
ficompl
imul
leave
inc
xchg
fcmove
dec
test
sti
je
cs
imul
test
add
mov
jp
int3
pop
add
cmp
clc
and
adc
arpl
add
sub
inc
push
lret
std
fldl
das
pushf
jns
jnp
dec
cmp
inc
dec
and
dec
iret
xchg
push
dec
xchg
cld
rcrl
lret
push
fcoml
cmpsl
mov
mov
xchg
enter
lcall
xor
shr
and
mov
ror
sbb
jecxz
pop
shrb
ret
aaa
lret
ljmp
dec
inc
in
xor
push
xorb
and
xchg
push
cmp
fwait
jnp
inc
shrb
cs
aaa
popf
ja
inc
or
sub
test
push
push
leave
push
and
pop
xchg
movsb
cwtl
aam
inc
out
fwait
xor
xorl
mov
and
imul
pop
cs
loop
jbe
mov
add
pop
icebp
sub
mov
or
and
sub
fisubrl
push
jge
cs
and
pushf
test
flds
sub
pop
loopne
dec
lret
push
mov
out
xor
out
inc
jbe
jnp
adc
seta
rsm
xchg
stos
or
mov
push
push
xchg
aad
lret
mov
pusha
jmp
dec
push
push
inc
and
xchg
hlt
sub
jg
ja
int
push
scas
je
xchg
je
mov
mov
inc
mov
test
pop
adc
mov
lock
mov
pushf
sbb
push
ja
mov
cltd
cmp
movsb
hlt
pusha
mov
pop
mov
jecxz
movsl
and
inc
test
ret
pop
xchg
fnstcw
push
or
mov
loope
arpl
inc
jae
lods
inc
xchg
xor
fmuls
push
outsb
sahf
faddl
or
sbb
push
push
jae
inc
xor
shrb
pop
dec
testb
scas
cld
js
pop
mov
dec
cli
adc
cmpsb
sbb
fistpl
mov
es
insb
sbb
xor
mov
mov
popl
into
aaa
sub
adc
out
jg
mov
inc
mov
jge
mov
imul
pop
adc
inc
jg
xor
orl
cmp
std
shlb
or
mov
inc
push
adc
inc
inc
xchg
and
inc
add
ja
xor
out
mov
or
adcb
or
mov
js
xchg
pop
jecxz
mov
scas
sarl
jl
mov
popa
dec
xlat
subl
or
dec
mov
add
shlb
out
fiadds
clc
push
rolb
pop
mov
mov
cmc
sbb
xor
cmp
les
sub
sbb
mov
in
pop
in
sub
daa
and
or
inc
inc
dec
dec
or
sub
sub
push
sub
adc
mov
jae
sub
lods
push
fldenv
jo
dec
hlt
xchg
jge
hlt
add
gs
lret
add
push
pop
cmp
cmpl
jl
xor
cli
pop
xor
mov
fstp
mov
andl
and
test
mov
lcall
push
arpl
push
movl
sub
aas
cmp
push
sub
fucomi
dec
sbb
shll
mov
in
in
mov
mov
fdivl
mov
cmpsb
sbb
test
push
jo
add
push
aas
jbe
stos
adcl
stc
sbb
loop
jae
outsl
inc
xor
sub
mov
ret
xchg
ss
adc
dec
xchg
fiaddl
sar
dec
pop
mov
add
ret
adc
rcll
inc
add
add
xlat
nop
das
jae
cwtl
sub
or
mov
test
cmp
jmp
dec
pop
cmp
gs
and
call
subb
mov
mov
sbb
fwait
dec
pushf
or
push
push
ljmp
inc
gs
ja
sub
add
mov
mov
pop
cmp
repz
stc
sub
push
pop
cmp
fdivp
comiss
dec
adc
sub
dec
pop
in
cmp
mov
cmc
rep
test
paddsw
test
cvtps2pi
in
scas
mov
ss
add
insl
mov
pop
mov
fs
pop
call
outsl
jne
pop
fiaddl
int3
xor
rcrb
mov
rorb
mov
js
fstl
outsb
pop
push
dec
sti
outsl
push
sub
in
add
js
sbb
hlt
add
and
mov
fldenv
test
pushf
bound
test
and
fsts
dec
iret
mov
dec
and
xor
jne
or
and
cwtl
jo
data16
push
adc
and
scas
xchg
mov
je
push
pop
imul
mov
cmp
fmull
cmpsb
loope
jne
cmp
push
jge
pop
fisubs
adc
aas
pushf
mov
pushf
or
adc
gs
popa
xchg
add
sub
lods
popa
int3
ljmp
hlt
pop
inc
mov
nop
cmp
xchg
push
in
stc
cltd
sar
fidivrl
dec
pop
rcll
icebp
xlat
leave
addr16
fdiv
imull
pop
pushf
mov
pushf
sahf
rcrb
enter
ds
mov
stos
add
repnz
mov
bound
imul
dec
xor
test
mov
xor
int
shrl
dec
sub
pop
lods
pusha
dec
icebp
jge
clc
test
popa
shl
popa
and
repz
and
jle
stos
pop
cmc
sbb
clc
mov
xor
sub
in
loopne
in
push
mov
test
mov
xchg
test
xlat
scas
js
push
dec
dec
fldcw
cmp
mov
push
cs
pop
and
fbstp
and
rcll
xchg
stc
mov
xchg
xor
fstp
addb
incl
outsb
stc
rcr
sbb
xchg
or
add
popa
test
pop
cmpsl
dec
int
dec
and
pop
mov
daa
popa
daa
imul
mov
inc
subb
cmp
es
test
xor
push
xchg
push
cmp
fildll
fwait
mov
mov
addr16
jp
pop
pop
dec
jne
ret
and
lcall
pop
mov
add
push
shl
xor
test
les
xchg
pop
loope
aas
adc
xchg
inc
insb
aaa
lea
test
fmull
adc
add
bswap
push
leave
fcoml
push
jbe
add
push
jl
divl
out
fidivl
push
pop
mov
ljmp
xchg
pop
add
fucomip
je
repz
arpl
xchg
dec
jae
and
fisubs
adc
jl
xor
sub
sbb
ljmp
fwait
dec
test
test
out
lods
inc
into
dec
pop
mov
out
mov
dec
mov
xchg
scas
pxor
adc
repnz
mov
adc
into
sbb
adc
inc
pop
ret
mov
push
cmp
es
sbb
jae
xor
call
adc
mov
cmp
negb
sbb
mov
iret
in
cld
jbe
mov
mov
pop
lds
fld
mov
shlb
ret
push
ds
xor
fcom
mov
pop
or
scas
push
loopne
and
cmpsb
jecxz
lock
or
mov
pop
lahf
add
aaa
jo
movsb
pop
insb
jl
out
adc
mov
jp
inc
in
cmp
fwait
bound
aas
test
sbb
cmc
add
cmpb
jmp
js
inc
bnd
stos
cmpsb
cmp
pop
mov
cmp
and
enter
stos
push
sbb
ljmp
adc
dec
out
fdivp
lods
mov
xor
sarb
or
mov
push
lahf
mov
dec
stos
inc
cmp
inc
xor
movsb
mov
pop
loopne
int
test
loop
dec
outsl
jno
pop
jge
dec
jb
push
push
insb
iret
faddl
pop
cmpsb
push
pop
repz
cmp
inc
mov
fcmovne
je
in
xchg
in
cltd
or
and
and
adc
lahf
cmpxchg
sbb
pop
xchg
dec
popa
add
ljmp
flds
out
mov
dec
mov
hlt
mov
fimuls
xchg
sahf
aam
xchg
in
imull
jl
sub
jno
pushf
xchg
std
in
cli
in
or
test
stos
or
cmp
out
adc
inc
or
jbe
dec
dec
sbb
or
mov
mov
jbe
cmp
xchg
bound
xchg
ss
aas
xchg
mov
fwait
and
and
and
inc
sahf
xor
mov
xor
leave
pop
cmpsl
sti
push
adc
pop
icebp
inc
sub
jns
dec
nop
aam
cmpb
cmpsl
lea
lret
shlb
sbb
lret
in
mov
mov
mov
push
mov
imul
mov
push
add
xchg
pop
mov
sbb
jp
sub
xchg
rcll
adc
icebp
cmp
pop
sarb
outsb
pop
xchg
mov
or
sti
adc
and
pop
loopne
out
jbe
sub
inc
test
dec
xor
lahf
int
scas
adc
mov
outsl
dec
cli
and
xor
pop
cld
mov
test
xchg
pop
fcompl
nop
xchg
je
fdivr
mov
jmp
fwait
jle
cs
sbb
cld
andb
popl
jp
movsb
adc
dec
gs
lret
aad
jne
or
pushf
dec
push
les
fbld
stc
jbe
inc
mov
setae
mov
imul
mov
es
mov
or
loop
and
sbb
add
xor
inc
add
lret
push
xlat
add
xor
adc
sbb
aaa
ret
cmp
add
movsb
sub
loop
or
jo
push
bnd
into
pop
jb
sub
mov
shl
pop
mov
jno
cwtl
ss
ds
lods
sub
mov
fnstsw
jns
inc
mov
xchg
sahf
and
xchg
inc
stc
test
jle
jl
sub
cwtl
pop
lods
or
mov
pop
jne
ds
and
pop
call
negl
mov
mov
or
cmpsb
inc
cld
mov
lret
mov
aam
js
or
fsubl
cli
cmc
mov
mov
fsubs
mov
push
dec
call
jmp
jecxz
out
frstor
sub
enter
js
sahf
push
pop
lahf
push
stc
mov
pop
and
mov
inc
dec
dec
push
lods
scas
xacquire
test
mov
lahf
inc
push
ffree
fnstenv
xor
dec
mov
and
xor
and
jne
punpckhbw
shll
inc
je
stc
dec
pop
xor
xchg
push
dec
rcrb
sub
mov
dec
sub
fcoml
lret
movsl
in
xchg
and
ret
jmp
sbb
or
nop
fistl
icebp
xchg
insl
pop
mov
sbb
popf
add
mov
call
pop
rcl
push
shl
fwait
enter
cwtl
xor
sti
xchg
mov
and
stos
inc
jnp
bound
addr16
stc
push
test
lods
aam
xchg
out
enter
hlt
xor
sub
xchg
add
adc
test
out
mov
fwait
jae
inc
cmp
push
cmp
mov
cmp
popa
push
mov
and
aaa
scas
push
sbb
cmp
push
mov
faddl
mov
arpl
push
mov
inc
sbb
cmpsb
cmp
imul
dec
call
std
xchg
adc
subl
fildll
lods
and
or
aam
cs
ret
mov
in
jmp
mov
aam
xor
ss
dec
cmp
push
push
sbb
test
inc
and
adcb
pop
xor
testb
and
es
push
jae
loopne
jg
fistl
or
les
or
popl
and
xchg
cmp
or
rorb
fsts
dec
test
imul
lret
fstpt
jecxz
clc
xchg
add
xor
mov
jbe
cs
mov
shlb
movsb
fsubp
pushf
mov
push
push
xchg
clc
or
xchg
dec
test
xorb
push
jno
push
shlb
xchg
pop
jne
jns
mov
xor
push
cs
jg
mov
sbb
je
or
lock
cmp
popf
sbb
ss
and
xchg
or
fsub
and
add
mov
sub
sub
mov
test
pushf
jo
pop
or
inc
xor
jnp
cmpsb
insb
dec
lock
int
aaa
xlat
in
jae
test
fcmovnb
outsb
add
xor
jp
daa
dec
icebp
dec
std
sub
les
jle
inc
out
cmpsb
cmpl
lcall
lcall
and
std
mov
movb
inc
idivl
mov
bound
add
rcll
repnz
push
mov
sti
adc
dec
pusha
fildl
outsb
mov
jp
mov
pop
pop
inc
xor
inc
ljmp
popf
inc
push
xchg
fdiv
ret
mull
in
pop
dec
mov
inc
mov
mov
xor
imul
mov
imul
out
cld
xchg
and
xchg
jns
scas
in
leave
ja
inc
nop
and
adc
sbb
pop
fadd
imul
daa
arpl
pop
shrb
dec
cmp
pop
into
loopne
sti
xchg
adc
sub
sub
add
xor
in
int
jecxz
ret
or
sub
dec
jbe
mov
js
roll
ret
mov
inc
inc
cwtl
rorl
inc
dec
xchg
mov
adc
mov
ret
insb
outsb
dec
cld
sub
xchg
lret
mov
cmc
xchg
hlt
mov
es
dec
fisttpl
add
sub
jb
pop
js
dec
pop
lret
inc
stc
and
sarb
rcrl
jns
add
adc
cmc
in
dec
xor
cmpsb
cwtl
xchg
mov
mov
insb
cmp
cmp
sub
sti
das
push
and
mov
dec
sbb
xor
xor
cwtl
clc
mov
out
mov
and
mov
xchg
mov
xchg
xchg
test
lcall
lcall
dec
xchg
mov
jnp
xor
push
or
lods
jecxz
in
test
out
adc
add
sahf
dec
insl
dec
insb
or
xchg
inc
arpl
push
mov
push
mov
lret
adc
fs
push
ljmp
cmp
std
push
fidivrl
inc
xlat
sub
dec
mov
rcr
std
in
sub
sub
lret
push
push
and
jae
roll
pop
adc
sahf
xchg
jnp
add
cmpsb
dec
cltd
xchg
aaa
or
adc
loop
pop
inc
enter
popf
and
jbe
stos
adc
adc
mov
xor
out
scas
push
fs
mov
dec
stos
xchg
stc
stos
bound
adc
stos
pusha
gs
mov
popa
lea
ds
xor
pusha
imul
cmp
sar
and
dec
inc
test
lahf
xchg
push
fcmove
aad
mov
push
sahf
inc
shr
movsl
ss
mov
and
jae
jmp
xchg
ljmp
pop
lea
jns
js
shrb
mov
push
mov
fisubrl
mov
push
mov
test
icebp
cwtl
dec
dec
shrl
fsubrs
sahf
cltd
add
cwtl
imul
in
cli
jecxz
out
int3
mov
xlat
sbb
add
xor
inc
insl
lods
lea
add
sbb
jae
push
rclb
add
dec
out
push
or
xchg
xchg
out
sahf
sbbb
jmp
lods
or
sbb
mov
shll
xlat
loope
xor
sbbb
jmp
mov
adc
outsl
dec
jl
xchg
pop
or
mov
cld
scas
jbe
push
or
mov
mov
das
cmpsb
add
mov
addr16
mov
fistpl
jle
data16
sub
fiaddl
or
std
sub
mov
lds
mov
dec
push
xchg
das
cld
xlat
pop
push
clc
or
adc
nop
jnp
mov
adc
std
or
xor
sbb
shrb
inc
fdivl
mov
and
insb
jge
data16
sbb
jecxz
sarb
inc
test
mov
mov
sbb
xchg
test
clc
jl
xcrypt-cbc
cmpsl
adc
mov
adc
cs
jge
out
es
xor
xor
xchg
ss
adc
clc
sub
repnz
push
cld
data16
push
xchg
in
jne
jle
jg
mov
xor
mov
insl
loopne
movsb
int3
out
out
out
cmp
stos
or
mov
shll
and
jmp
test
inc
jl
pop
sub
lcall
cmc
scas
jne
xor
jae
cmp
aas
push
jp
ss
sbb
je
cmpsl
add
jp
jae
repnz
adc
xor
fcomi
pop
out
and
call
shll
cld
and
mov
js
push
mov
imul
xor
or
insb
cli
inc
jle
imul
jne
lret
jb
jge
mov
gs
repnz
clc
jp
bound
adc
les
push
popa
es
fadds
cmp
test
mov
ss
xor
scas
push
jnp
jge
fcmovne
mov
or
lea
push
dec
cwtl
jge
adc
or
sub
mov
sub
jl
imul
dec
add
dec
jae
add
mov
int
int
scas
sbb
pop
mov
and
xchg
and
test
mov
add
add
js
sub
repnz
xchg
ds
xchg
mov
mov
mov
fcom
jnp
lret
hlt
jae
stos
aad
ljmp
cmpsl
push
fldlg2
ret
pop
ds
mov
sbb
cmp
cld
mov
jg
xchg
cmp
push
nop
int3
push
sub
ret
and
test
pushw
or
out
ret
mov
jnp
and
imul
xor
jle
sub
cltd
mov
add
mov
pop
mov
test
or
negb
and
mov
add
push
inc
aas
pop
fs
xchg
inc
xor
movswl
push
into
mov
pop
xlat
dec
test
xchg
inc
push
pushf
lar
adc
sbbl
mov
jmp
popa
mov
test
mov
xchg
in
sti
fbld
xor
add
cli
lcall
repz
addr16
lea
inc
in
sbb
or
out
scas
xchg
imul
push
sbb
pop
pop
sbb
cmp
cld
xor
add
sbb
jb
sub
push
mov
jno
sub
add
enter
in
mov
push
pop
push
mov
iret
lret
and
xchg
dec
push
mov
clc
lahf
xor
add
jb
or
mov
xor
clc
sbb
pop
dec
or
data16
adc
add
ljmp
ret
orl
jo
jge
icebp
sub
fdivs
xchg
push
cwtl
aas
fisubrl
aad
dec
loopne
jae
jp
and
mov
jae
ss
ret
scas
dec
sahf
into
and
jns
mov
mov
or
test
mov
pop
mov
mov
pusha
in
sub
leave
enter
cmp
mov
cmpsl
add
push
add
sysenter
add
inc
mov
pop
jecxz
jae
flds
adc
mov
pop
sub
loopne
sbb
and
test
jg
inc
rcll
aaa
mov
or
pop
lds
cmc
call
or
iret
mov
push
sbb
pop
cmp
testl
dec
or
sbb
and
jmp
push
add
sub
dec
data16
cmp
std
movsb
mov
sub
xchg
lods
in
push
cmpb
daa
enter
stos
in
mov
mov
stc
hlt
sti
mov
lock
stos
inc
cmp
xor
sbb
or
in
pop
ljmp
stc
test
jae
repnz
fmuls
xchg
incb
fiadds
fiaddl
dec
push
mov
and
and
and
je
xor
mov
add
and
or
and
into
mov
jb
xor
in
cltd
ret
jb
mov
popa
or
movd
mov
mov
cmp
push
or
pop
clc
adc
xchg
int3
inc
sahf
les
push
push
test
loopne
loopne
inc
xor
xor
fldt
adc
jns
inc
jo
in
addr16
hlt
mov
or
pop
mov
xor
lock
imul
or
mov
test
aam
dec
insl
push
pop
sti
mov
jecxz
dec
roll
data16
in
daa
hlt
popf
xchg
fdivl
cmp
mov
ljmp
arpl
jns
xlat
loope
or
mov
xchg
div
pop
pop
sbb
cmpb
or
cs
lock
rol
scas
pop
adc
xchg
into
adc
int3
mov
lret
dec
mov
cli
adc
mov
dec
pop
push
lds
outsb
into
mov
sbb
push
push
jns
or
aad
push
mov
xchg
cmp
push
mov
repz
adc
lods
inc
jae
hlt
sarb
loop
xchg
or
icebp
popa
mov
mov
inc
movsl
cwtl
cmp
push
lds
ljmp
bound
sbb
outsb
mov
jmp
add
pop
push
pop
sub
mov
insb
jno
loopne
clc
cmp
fwait
lret
out
enter
outsl
mov
jo
mov
mov
pop
arpl
or
inc
or
sub
pop
mov
aas
cmp
test
in
dec
inc
jmp
or
int
divl
fstl
sub
xor
mov
inc
sub
or
int3
and
fstps
stos
xchg
cltd
mov
sub
fnstsw
pop
push
and
int
mov
cltd
push
test
int
pushf
and
mov
loop
andl
push
stos
inc
das
xor
imul
sub
lahf
dec
jo
fsubp
or
loopne
lahf
jmp
inc
mov
test
movsl
rol
jl
push
xor
je
jo
aaa
fnsave
jb
in
aaa
push
adc
test
shl
scas
test
sub
or
sub
cli
pop
cmp
inc
jl
fs
xlat
mov
xor
stos
mov
inc
pop
jge
data16
cwtl
ret
sbb
pop
pushf
jae
mov
cltd
xlat
ja
adc
jnp
mov
fnstsw
cmp
push
js
inc
jae
xchg
cmp
rorb
push
cwtl
lret
test
mov
sub
xor
sbb
mov
push
dec
mov
jmp
out
inc
cmpb
dec
xor
xlat
fwait
mov
cmpsl
pop
mov
jp
xchg
mov
mov
push
mov
dec
enter
scas
pop
roll
cmpsb
mov
pop
mov
fidivl
jnp
les
and
aas
push
in
outsl
imul
or
fs
fs
jp
fchs
mov
in
pop
add
cmpl
mov
mov
inc
insb
jl
jne
das
dec
loop
insb
pop
cmp
jnp
sbb
push
ret
jnp
cmp
sub
dec
out
sub
jnp
lods
test
loope
add
mov
cmovbe
lret
jae
push
push
loop
xchg
movsl
rclb
pop
cmp
popa
inc
pushf
mov
push
xor
sbb
test
or
inc
mov
inc
push
push
pop
pop
sub
cli
xor
ficoms
or
jo
sub
add
jg
adc
mov
rcrb
int
xor
xor
add
jmp
push
loope
push
popa
adc
push
bound
pop
pop
shlb
ret
repz
enter
pop
lea
and
dec
adc
sub
loopne
jg
out
je,pt
dec
repnz
call
xor
xor
xor
jge
or
cmp
pop
rcll
stos
ret
roll
sbb
mov
add
les
insl
in
repnz
or
mov
xor
fnstsw
mov
sbb
xchg
pop
xlat
pop
adc
iret
ljmp
jne
pop
cli
mov
scas
mov
jbe
stos
mov
sub
mov
mov
test
movsl
mov
xlat
xor
pop
dec
ror
sub
sarl
fs
cs
xor
add
lret
ret
mov
nop
jmp
sbb
sti
outsb
mov
sbbl
mov
cmp
bound
je
lret
add
xor
sub
int
or
faddl
lock
pop
xchg
daa
out
lahf
jnp
pop
adc
mov
call
pop
and
int3
lea
out
jg
pop
std
mov
xor
inc
stc
dec
cs
jmp
mov
repz
xor
mov
sub
in
dec
lcall
add
xchg
xchg
cmp
push
push
pusha
clc
insb
inc
outsb
mov
xchg
jecxz
cmp
jge
xor
adc
ja
push
push
iret
pop
jmp
ss
into
call
sbbl
cld
xchg
fs
jo
or
xor
in
flds
or
lahf
ret
insl
in
jg
daa
je
negb
in
push
mov
ja
cmp
cmpsb
pop
fimuls
lock
xchg
lahf
jb
jecxz
nop
mov
lret
mov
std
mov
popl
int3
test
mov
jp
push
and
pop
cmc
test
popa
or
push
jbe
pop
jns
cmp
rolb
ss
mov
or
fnstsw
stc
sbb
lcall
in
and
xlat
inc
ficomps
cwtl
mov
js
test
cli
xor
fcmovnbe
mov
xchg
xchg
popa
mov
stos
mov
ss
mov
daa
test
mov
and
loopne
leave
out
js
or
push
mov
bound
stc
push
mov
daa
cmp
cmp
outsl
scas
outsb
aad
and
scas
ret
adc
movsl
mov
dec
dec
sub
mov
inc
dec
adc
gs
mov
call
add
hlt
sub
mov
push
push
add
or
mov
cmpsb
push
pop
lds
cltd
leave
imul
divl
fidivrl
pop
mov
int
aad
inc
cmp
lahf
xchg
mov
mov
mov
cmp
pop
mov
in
pop
pusha
nop
and
inc
ja
mov
outsb
stc
push
data16
pop
and
fistl
sbb
test
sub
ret
xchg
fldpi
dec
mov
dec
xchg
shl
es
test
call
pop
mov
movsb
adc
aad
movsl
into
mov
sub
lods
rcrb
add
addr16
jo
icebp
in
jmp
dec
daa
flds
push
inc
xorb
jb
in
cli
mov
mov
push
push
sbb
jnp
inc
loope
mov
or
lea
pop
shll
fisubrs
jne
leave
xchg
jns
mov
je
push
mov
dec
pushf
cld
ss
ficompl
mov
xor
fistps
cmp
mov
dec
push
fcomi
pushw
push
xor
nop
push
sbb
pop
ret
pop
mov
dec
jl
or
ss
movsb
cmc
mov
xor
pop
insl
test
in
push
rorb
test
ss
aas
addr16
pop
jno
cltd
in
test
add
inc
mov
sahf
shll
mov
mov
sub
fistpl
and
push
pop
and
pusha
call
pusha
movsl
out
pop
push
cmc
adc
flds
pop
outsl
sub
dec
out
jno
movsb
lret
jno
cmpsl
inc
lea
rcll
adc
ds
inc
nop
dec
jg
popf
cli
jg
sbb
cmp
sarl
outsl
pop
xchg
xor
out
movsb
push
insl
push
and
fwait
jno
sub
sub
ja
in
dec
mov
movsb
das
inc
cwtl
adc
xor
in
fldt
dec
loop
push
xchg
stc
gs
jo
push
sbb
sub
in
insb
lods
sub
div
dec
popa
stos
jbe
out
mov
or
sub
mov
rcrb
sahf
mov
popf
fistps
inc
das
sahf
push
add
iret
shrb
iret
test
sbb
pop
pop
xchg
jle
daa
add
xchg
int
gs
cmp
mov
mov
jmp
and
sub
addb
pop
out
add
mov
jae
sub
adc
and
push
arpl
add
into
cmp
lea
in
jne
cwtl
out
xlat
jge
cld
xchg
dec
leave
scas
jne
xchg
iret
inc
das
jns
jle
cmc
in
je
xchg
sti
lods
mov
fistpl
jmp
addb
mov
sbb
cmp
out
and
int
movsb
inc
and
shrl
dec
rclb
jmp
int3
ss
push
mov
cmp
or
jb
push
add
sub
shlb
out
sub
in
and
mov
insb
nop
lret
or
pop
fnsave
cmp
fmuls
js
sbb
adc
xchg
adc
arpl
adc
push
inc
xor
mov
mov
ja
in
cmp
nop
fdivr
cmpb
jge
jle
in
dec
cli
cmp
adc
xor
test
cmp
sub
sub
pop
pop
arpl
mov
ret
jmp
xchg
jns
mov
sbb
aad
lods
inc
cwtl
out
push
mov
adc
mov
std
lcall
and
mov
in
mov
test
mov
fs
stos
rolb
dec
lcall
adc
and
add
push
aam
pop
icebp
jo
inc
mov
sahf
inc
enter
dec
inc
pop
mov
int
xchg
inc
or
jne
ja
loop
adc
cmp
jmp
mov
jo
mov
imul
xchg
rcrl
sub
push
cmp
pop
into
test
lock
cmp
fnstenv
lds
imul
scas
jle
mov
add
mov
or
push
or
loop
and
imul
and
addr16
call
add
pop
cmp
adc
sub
adc
dec
mov
dec
addl
lea
pop
lock
in
xchg
push
cmp
lahf
mov
cmp
mov
push
testl
rcrl
mov
frstor
daa
aad
repnz
push
ds
xchg
add
lods
je
fwait
sub
arpl
adc
mov
push
fcmovnu
sbb
out
negl
sbb
add
neg
cmc
push
or
daa
int
loop
cmpsl
xor
aam
pop
xor
push
movsb
mov
rcr
sub
add
sub
sbb
push
cmp
mov
addr16
std
and
sahf
dec
cmp
pop
inc
sbb
dec
xchg
popa
in
and
jb
std
pop
in
sbb
lret
mov
adc
pop
add
sbb
scas
imul
jg
pop
popa
movsl
movsb
aad
sahf
ret
lret
dec
mov
in
rcrb
in
in
cltd
paddsw
in
mov
xor
mov
jl
pop
and
push
mov
insl
and
loop
dec
push
out
mov
inc
mov
mov
daa
or
adc
iret
shll
cli
movsl
jnp
insl
lcall
mov
roll
pop
mov
hlt
pop
adc
pop
xchg
je
dec
scas
jl
ret
push
adc
add
popa
das
dec
fnstenv
xchg
pusha
and
mov
scas
inc
cltd
dec
lds
cmpsb
lods
aam
sub
cmp
icebp
jmp
inc
test
into
movsl
dec
sub
sub
or
mov
sti
fcmovbe
test
sahf
inc
pusha
sub
mov
cld
movsb
sbb
xchg
pop
shrb
xchg
adc
sbb
jnp
cmpsb
ret
add
and
popf
mov
adc
push
cmp
cltd
add
int3
in
mov
insb
sbb
pusha
cli
andb
ret
dec
mov
sub
push
repz
sbb
gs
jp
mov
in
xor
cli
out
mov
inc
mov
ja
jnp
dec
mov
dec
sub
insl
clc
push
sbb
cmpsl
iret
es
aad
xchg
lret
sbb
add
cmpsl
jg
ds
out
mov
arpl
fdiv
sub
pop
add
cld
test
jnp
bound
add
imul
imul
pop
inc
cmp
das
lds
sbb
loop
cwtl
sbb
or
pop
rcrb
push
sbb
out
outsb
pop
movsl
push
inc
pusha
xchg
sub
outsl
push
adc
pushf
bound
adc
mov
sbb
orb
adc
scas
loope
xchg
push
jle
outsl
xchg
or
in
inc
bnd
insl
les
pop
push
push
arpl
xor
jmp
mov
popa
in
push
shr
stos
dec
dec
or
les
mov
pop
popf
mov
repz
xchg
into
pop
sahf
jg
and
pop
ret
push
and
jbe
inc
dec
jg
fwait
xchg
rcrl
or
inc
cmpsl
jns
ljmp
cmpsw
xchg
lret
shlw
test
dec
ljmp
stc
fbld
loop
stos
cmp
sub
xchg
repz
add
es
push
xchg
aam
mov
stos
sub
test
fs
push
pop
decb
mov
push
je
in
inc
bound
sub
lret
outsl
mov
bswap
jmp
mov
mov
xor
inc
scas
xor
push
adc
jno
std
cmp
pushf
popf
es
sub
mov
out
imul
add
sar
sub
sub
xchg
imul
fsubl
aam
das
sbb
arpl
dec
pop
iret
hlt
xchg
push
cmp
mov
rolb
mov
and
sbb
loope
pop
inc
dec
mov
stos
lds
adc
adc
ss
xor
sub
cmp
test
pop
adc
lcall
shlb
int
pop
or
out
adc
fdiv
inc
mov
and
add
push
and
mov
shlb
sub
cld
jl
mov
xchg
repz
push
inc
loop
imul
push
loop
dec
fxch
xlat
out
add
mov
push
jp
cmp
les
popa
cmpsl
or
test
inc
loope
dec
sub
sub
or
jg
cmpsb
jae
mov
add
jecxz
mov
xchg
in
mov
mov
out
ret
xor
sub
mov
xchg
stos
or
cmp
push
out
adc
xlat
popf
movsl
int3
iret
outsl
mov
xchg
in
aaa
xchg
lea
jg
adc
addb
lods
jl
scas
call
nop
sbb
scas
rcrb
push
sbb
fincstp
nop
std
sbb
mov
scas
dec
rol
insl
ret
paddusb
xchg
sub
jns
jl
mov
pop
adc
pushf
into
int3
or
daa
and
inc
hlt
push
or
insb
xchg
sahf
xchg
mov
push
adc
lock
out
mov
sub
ret
add
pop
inc
mov
sub
push
mov
push
inc
aas
xlat
out
das
inc
loopne
scas
inc
in
gs
dec
dec
or
hlt
dec
push
pop
bound
std
es
mov
push
iret
sub
sub
test
jb
mov
popf
mov
mov
cmp
in
shll
ds
xchg
push
xchg
repz
addr16
data16
cmp
lea
cmp
mov
jle
mov
sub
subb
jns
mov
int
push
mov
lods
dec
cmp
movsl
dec
and
cmp
cmp
cmp
insb
cwtl
adc
xchg
push
or
testb
ret
mov
das
mov
and
fcompl
push
rclb
jae
ror
mov
sbb
fistpl
add
in
pop
mov
insb
jmp
jnp
ficoms
sbb
cmp
jne
adc
lahf
mov
sub
orb
dec
xchg
push
cmpsl
out
fwait
mov
pusha
and
iret
add
movsl
stos
pop
gs
sar
lods
cmpb
jmp
sbb
jns
mov
inc
jmp
pop
out
xor
cli
mov
ret
lret
mov
outsl
and
or
div
lahf
loope
cmp
xchg
ss
add
cli
int3
lahf
ljmp
lret
out
push
xchg
fwait
pop
mov
adc
xchg
xchg
push
jnp
addr16
popa
cwtl
mov
xorb
add
xor
das
faddl
adc
adc
fsubl
sub
adc
inc
sbb
xor
push
es
test
xchg
scas
xchg
scas
scas
fists
rolb
xchg
cld
add
sahf
ficompl
jns
mov
cld
and
stos
cltd
jb
cmp
out
cli
sub
rorb
cld
dec
sbb
fldt
or
add
mov
arpl
or
push
and
leave
xor
cmp
repnz
jnp
mov
sub
pop
dec
in
jmp
cmp
ret
repnz
mov
ds
or
hlt
pop
push
hlt
rorl
xchg
lret
jg
daa
adc
dec
inc
mov
mov
shll
mov
jo
xor
mov
fstl
jp
test
jnp
or
outsl
mov
fdivs
sahf
aas
les
or
popa
mov
jl
mov
js
sahf
mov
ds
mov
mov
aam
inc
jne
adc
aas
loopne
xchg
pop
jmp
pop
ljmp
sbb
bound
imull
iret
sub
test
or
inc
mov
jle
xor
mov
das
xor
xchg
xor
sbb
dec
shll
cmp
mov
xchg
push
adc
scas
into
inc
pop
xchg
jne
cmpsl
hlt
in
aaa
mov
addr16
imul
and
pop
pop
cmc
outsl
lds
or
call
daa
or
jmp
xchg
jne
ficoml
lret
inc
lret
push
xchg
movsl
imul
arpl
movsl
lods
xchg
pop
mov
sub
subl
fsubrp
sbb
and
roll
push
mov
mov
aaa
cltd
aaa
roll
add
lret
sub
mov
push
data16
push
mov
lock
dec
mov
mov
pop
out
in
or
aad
add
arpl
pop
dec
or
int
les
mov
test
lods
jmp
outsb
jnp
sbb
sbb
pop
inc
mov
leave
pop
popa
je
enter
mov
fs
cmp
xor
push
mov
fimull
xor
mov
push
push
call
xchg
data16
das
mov
cmpsb
outsl
jecxz
push
xchg
test
mov
mov
ret
jl
lea
add
mov
fdiv
movsb
or
add
fcos
adc
cmpsb
leave
repz
shll
bswap
test
popf
push
xrelease
mov
and
push
dec
push
adc
mov
pusha
mov
jnp
rorb
lahf
push
jg
out
mov
or
sbb
xchg
mov
ljmp
pusha
addr16
andl
adc
cmpsb
lcall
enter
xchg
mov
call
adc
add
jl
out
jns
shr
hlt
jg
pop
outsb
sbb
lcall
shll
cmp
outsl
mov
repz
pop
mov
cmpb
loopne
mov
lret
mov
rcrb
ret
sti
in
xchg
sbb
adc
adc
ds
pop
insw
in
inc
ror
inc
mov
pop
jge
out
jae
loope
pop
notl
xchg
pop
pop
mov
cmp
inc
and
aas
cmove
inc
xlat
dec
pop
ficoms
and
aam
hlt
cmpsb
sahf
ret
mov
xor
filds
stos
and
mov
sarl
js
je
mov
sub
pop
lret
pop
movsb
frstors
pop
fstpt
test
je
fiadds
shll
das
mov
push
or
push
or
test
cld
or
mov
out
dec
lret
jo
push
ds
scas
out
adc
inc
mov
decb
add
and
xchg
add
and
cmpsl
adc
in
mov
je
mov
ds
add
test
ja
das
xor
xchg
or
adc
pop
inc
pop
leave
jb
xor
jo,pt
sub
or
sbb
adc
pop
ds
lret
add
loop
sub
xchg
icebp
cmpsb
or
test
inc
notl
in
and
push
cmp
jmp
push
push
push
loope
sub
add
in
fs
push
pop
xchg
mov
and
inc
cld
cs
lods
sub
or
and
out
pop
leave
scas
lret
jae
and
pop
sbb
add
int
and
xchg
xchg
fisttpll
jp
sbbl
inc
pop
aam
ds
jp
inc
gs
mov
jle
inc
mov
inc
hlt
cmp
or
in
mov
mov
pop
and
clc
add
jbe
data16
pop
rcll
xor
jns
mov
ja
mov
mov
lods
jmp
test
insl
mov
cltd
in
sbb
jmp
mov
ja
mov
call
pop
jge
in
mov
push
testb
or
push
xlat
mov
dec
inc
or
out
flds
push
sbb
or
insw
cmp
add
dec
adcb
fwait
xor
test
jg
pushf
cmp
jle
mov
iret
roll
lea
dec
or
jp
or
imull
lret
test
dec
fcmovne
fcomp
ss
dec
mov
test
ljmp
mov
xor
add
jo
pushl
sbb
jne
mov
cmp
lret
shlb
ja
sbb
ret
mov
movsb
pop
frstor
jae
je
in
rol
inc
mov
repz
dec
fimull
fidivl
inc
repz
sub
mov
sarb
xchg
xor
das
sub
mov
and
mov
push
xor
mov
xor
dec
add
mov
pop
push
pusha
push
out
add
jl
lods
mov
push
sub
movsl
rorl
pop
mov
lret
pop
ret
adc
xor
jp
std
dec
inc
dec
cs
pop
daa
hlt
ss
xlat
adcb
dec
or
mov
push
pop
in
sbb
int3
xor
lea
lahf
sbb
jbe
mov
loop
sti
pop
mov
push
and
mov
fwait
dec
pop
and
bound
lcall
jae
fistpll
jmp
push
insb
sti
in
repz
sub
mov
loop
stos
mov
xor
shlb
jnp
std
cmp
orb
pop
mov
mov
fcmovne
xor
jb
mov
add
shlb
daa
ljmp
mov
nop
aad
roll
fistps
stc
inc
scas
push
pop
mov
mov
faddp
xlat
shlb
into
cmc
out
sti
add
sarb
push
imul
repz
mov
cmc
dec
dec
push
push
mov
push
loope
ds
pop
jp
or
ljmp
orb
mov
push
dec
push
iret
nop
les
aad
out
orb
rorl
inc
or
in
sub
add
out
dec
mov
std
data16
pushw
mov
lahf
lds
xchg
je
idivl
or
jmp
hlt
test
jmp
dec
push
mov
aam
lret
rorl
pop
lods
ret
inc
in
jnp
sbb
out
cli
stc
cmp
lahf
dec
aad
sub
mov
clc
pop
add
push
xor
mov
fisubrs
or
mov
cmp
clc
inc
dec
imul
push
mov
cmp
shl
xchg
pop
test
fcmovu
fwait
sub
popa
push
add
daa
add
cmp
or
sub
mov
out
dec
and
push
test
xchg
jae
call
push
dec
jle
jmp
pop
std
shlb
mov
sarl
decb
mov
push
call
popf
adc
loope
sub
mov
xchg
enter
ds
das
cmp
pop
movsb
sub
not
aaa
add
in
je
imul
push
icebp
mov
clc
push
arpl
jno
cmpsb
dec
or
inc
xlat
fwait
and
pop
enter
shll
mov
cmp
mov
mov
pusha
adc
icebp
mov
test
cld
ds
dec
push
pop
push
xor
jp
jns
push
movb
ja
pop
and
and
jnp
enter
jge
mov
lret
push
sarb
cltd
data16
add
or
cmpsl
clc
pop
decl
out
andl
out
addr16
in
out
pop
mov
mov
xchg
lea
int
pop
pop
stos
orb
cmc
xlat
aaa
std
mov
or
pop
in
inc
cli
fnstsw
mov
mov
and
rorl
or
nop
testb
or
fbld
std
rolb
push
insl
xor
movsb
adc
or
pop
imul
adc
adc
jae
aaa
sbb
out
jb
lcall
or
test
popa
mov
pop
mov
leave
inc
pop
push
xchg
cmp
jns
sahf
jne
loop
xchg
insb
dec
and
insb
push
out
rorb
mov
lret
sar
mov
inc
sub
mov
and
sub
add
cmp
jns
add
outsl
mov
sarb
push
or
gs
cld
in
pop
push
daa
mov
int
outsl
lods
add
popa
lret
inc
adc
or
push
mov
mov
ror
arpl
mov
insl
movsl
cmp
pop
stos
ss
xchg
outsl
mov
push
pop
stos
repnz
sub
lcall
sub
scas
loop
movsb
faddl
xor
mov
jmp
inc
cld
xorl
inc
lea
and
fcompl
jne
lahf
mov
sub
cmc
clc
ret
popf
lahf
sahf
inc
mov
sbbl
shll
lods
cmp
xchg
cmp
out
popa
mov
mov
cmp
imul
xor
and
pop
sub
aad
hlt
sbb
xor
inc
in
stc
and
sar
lods
xchg
jmp
cs
adc
sbb
add
aaa
and
fisubrl
push
rcll
lcall
xor
daa
inc
cmp
movsl
aas
xchg
sbb
sub
std
adc
fwait
mov
push
clc
sub
inc
inc
push
lcall
jp
jno
mov
mov
inc
pushf
add
or
loop
cmp
cmpsl
xchg
lea
push
test
mov
or
cltd
js
jbe
rclb
pop
jns
or
rsqrtps
jb
pusha
push
ret
xchg
cltd
cmp
cltd
out
lret
adc
es
fsubl
pop
pop
mov
inc
xlat
dec
shrl
inc
pop
pop
lock
jl
cmp
push
frstpm(287
jg
jno
orl
or
push
inc
adc
stos
rcrl
popa
outsl
xor
or
push
cmpl
xchg
cmpsb
test
lea
mov
fisubl
fdivs
jp
mov
adc
dec
stos
decl
inc
daa
xor
sti
pop
aam
xchg
cmpsl
push
adc
je
inc
ficoml
lds
ret
push
xchg
call
xchg
fcomi
push
cli
loopne
jg
pop
mov
sub
pop
imull
lret
je
cmp
push
and
mov
out
pop
push
leave
xchg
in
pop
es
aaa
ds
and
pop
push
insl
and
lret
jmp
jo
sti
popf
pop
mov
add
mov
ret
movl
pop
add
sbb
iret
jmp
scas
idivl
out
jno
mov
aam
loopne
daa
aaa
in
enter
xor
sub
jmp
cmc
loopne
pop
jecxz
xor
enter
out
xchg
sarb
pop
mov
andb
cld
mov
sub
xor
stos
and
das
ret
mov
push
gs
dec
pop
jnp
ret
insl
cmp
arpl
sub
mov
or
inc
sub
int
rcll
cmpsb
sub
notb
lahf
inc
outsb
test
fs
xchg
jle
adc
lahf
call
scas
push
jae
out
pop
pop
icebp
jmp
lock
cmp
xor
fldl
push
loope
addr16
jns
lret
mov
mov
mov
mov
push
mov
ds
xchg
adc
mov
pop
cld
push
pop
mov
mov
jmp
sarb
inc
lret
mov
int3
sahf
fistps
cmp
dec
add
test
imul
cmp
dec
dec
mov
or
lds
stc
add
daa
or
loop
mov
in
xor
mov
pop
pop
lods
push
movsb
ret
or
leave
mov
and
jle
adc
lahf
loopne
xor
and
fiadds
filds
or
pop
pop
hlt
mov
jg
inc
mov
rol
fsubl
iret
out
pop
and
stc
push
jno
int3
loop
jnp
jp
stos
inc
pop
xchg
pop
loope
leave
or
mov
and
test
stos
dec
or
insb
sub
xchg
mov
cmp
cmc
sbb
out
xchg
aas
iret
sbb
dec
jmp
aad
pushf
fs
and
sbb
shr
mov
stos
shll
push
leave
or
mov
pushf
rcrb
mov
loope
pop
mov
decl
icebp
adc
fidivrs
xchg
inc
sbb
sub
mov
loope
or
lea
repz
jne
int3
fildl
mov
ret
int
xchg
xor
sub
pop
ficoml
aas
rcrl
rcrl
adc
aas
sub
xor
ret
imul
cmp
inc
jo
aam
out
insl
sbb
sub
cmc
cmp
and
pmaddwd
nop
cmp
jno
gs
pop
push
imul
cs
fstl
in
or
xchg
jnp
test
and
aam
mov
and
testb
scas
lock
mov
mov
sub
fxch
nop
mov
cmp
outsl
jl
jp
jae
rcrl
pop
cmc
mov
lahf
lock
inc
aad
pop
shlb
pop
arpl
and
mov
ds
cmp
mov
xchg
pop
mov
jb
pop
and
jge
lea
lea
shll
mov
imul
push
movsb
jae
xor
loopne
or
add
pop
xor
adc
aas
xor
mov
jmp
test
in
jns
lcall
pop
aad
xchg
mov
fdivl
pop
xchg
js
sub
and
jnp
adc
loope
dec
bound
icebp
subb
cmp
aas
filds
out
fldl
mov
loope
mov
adc
test
xor
jg
mov
mov
xor
ucomiss
push
add
imul
arpl
adc
jnp
mov
and
cmp
sbb
mov
mov
int
sub
enter
cmp
out
rolb
test
jl
sub
in
cmc
lods
xor
lea
push
arpl
hlt
jecxz
out
std
and
jns
out
ret
in
push
fcomp
loopne
out
jo
inc
xchg
lock
pop
push
or
cmc
mov
add
nop
cmpsl
adc
enter
js
mov
pop
stos
jg
shlb
jnp
jmp
imul
adc
pusha
test
testb
adc
xchg
push
jnp
fwait
shrb
mov
rorl
sbb
mov
out
add
out
jo
test
rorb
mov
push
add
dec
in
pop
mov
sbb
ljmp
add
mov
xchg
jne
outsl
nop
and
popf
mov
cmp
out
scas
out
inc
add
xchg
rcll
incb
iret
rclb
jbe
xor
pop
push
into
imul
lcall
sbb
lahf
xor
xor
je
sti
cmpsl
mov
dec
mov
push
dec
leave
push
pusha
xor
xchg
into
push
cmp
mov
scas
sti
jbe
je
mov
ret
fcmovne
adc
cmpsl
mov
insl
loop
scas
xor
int3
into
push
sub
scas
std
mov
es
or
xor
and
and
jecxz
cmp
fsubrs
mov
or
loop
jl
imul
outsl
popf
orb
dec
insb
movsl
mov
sub
cmp
ficompl
dec
mov
cmp
fs
jae
and
or
or
and
shll
xor
lods
iret
add
pop
sub
mov
push
aad
inc
add
pop
jns
ljmp
mov
int3
rorl
pop
lea
mov
insl
sub
popf
cmp
dec
or
cli
shrl
in
pushf
and
cmp
lea
aad
jno
sahf
nop
mov
dec
in
fbstp
add
dec
inc
testb
into
mov
push
lahf
jnp
mov
pop
lret
fidivs
jae
push
aas
mov
add
insl
loopne
dec
cmp
scas
lea
sub
push
mov
jb
sahf
sbb
xchg
mov
shlb
stc
addr16
pusha
push
xchg
lahf
inc
pop
mov
push
test
jno
inc
int
pop
dec
js
ret
lret
insb
mov
mov
stos
fbld
aam
dec
jo
mov
aad
sbb
push
lahf
pop
push
data16
sbb
push
or
test
es
adc
inc
jnp
jno
mov
int
jns
outsl
lea
xchg
scas
dec
mov
sarl
mov
xchg
ja
xor
repnz
push
fstpl
sub
fisubrs
xchg
and
xchg
clc
adc
or
sbb
jno
and
jnp
movsb
mov
leave
xor
push
stc
lret
in
mov
mov
pop
jl
mov
cmp
mov
cmp
sbb
cld
add
nop
imulb
fdiv
jo
mov
andl
ja
add
mov
lods
inc
dec
sub
cmp
stc
jle
push
test
mov
sub
fbstp
dec
hlt
int
inc
xchg
call
outsb
jg
es
fs
xchg
cltd
shrl
lret
inc
adc
xor
xor
and
xchg
mov
test
pop
es
es
dec
aaa
xchg
jb
mov
jl
and
addl
or
push
mov
test
push
xchg
test
pop
out
pop
insb
out
push
or
gs
scas
fisubs
mov
fs
cmp
push
ss
out
inc
dec
jecxz
popa
lcall
movsb
jbe
insb
add
adc
xlat
les
into
fs
sub
fs
mov
call
mov
jnp
or
out
fs
js
inc
jno
call
cld
ret
jge
xchg
pop
jbe
or
xor
cmp
cld
popa
jno
pusha
inc
mov
xor
fnsave
mov
loop
out
mov
repz
fimull
cmp
push
mov
dec
sbb
mov
cltd
xor
iret
mov
sbb
sub
xor
or
lock
push
push
repz
std
push
shll
fs
int3
jbe
inc
jns
inc
in
ret
ja
jno
in
cs
ret
enter
cmp
cmpsb
out
pop
scas
xchg
cmpsb
cld
andb
in
hlt
jns
pextrw
mov
cmc
scas
pop
sub
sarb
fbstp
out
and
or
sub
ror
jmp
sbb
int
jge
iret
popf
in
adc
ret
hlt
stos
arpl
fadd
lds
or
dec
jno
pop
out
call
adc
jmp
aas
ret
and
je
cmp
fnstsw
dec
sahf
stos
dec
push
xchg
push
imul
inc
gs
shl
dec
mov
xorb
mov
std
pop
enter
stc
mov
scas
jle
test
in
and
insl
lahf
pusha
pop
jp
fs
jb
adc
cmp
inc
daa
inc
jmp
popa
call
stc
pop
and
push
test
das
addb
loope
mov
mov
adc
sub
cmp
clc
xchg
in
xor
pop
aaa
pop
jnp
icebp
mov
ret
or
mov
repz
rorl
mov
jecxz
aam
pop
negl
inc
rol
sbb
xchg
xchg
cli
inc
lret
fmul
dec
xor
ljmp
fwait
ds
fwait
adc
mov
mov
mov
and
insb
xor
mov
sbb
mov
pop
aas
push
inc
dec
repnz
cmp
cmp
jbe
rolb
lahf
test
out
scas
cmp
lods
mov
mov
sbb
or
call
fsubl
cli
cmp
daa
out
call
xor
scas
jg
xchg
shl
cmp
adc
les
lods
inc
test
adc
outsb
les
cwtl
mov
mull
test
popa
js
mov
cmp
movsb
add
rcll
cmp
adc
orb
push
sub
push
lea
pop
stc
pop
adc
pusha
fnstenv
mov
and
xchg
pop
fbld
pop
pusha
cmp
cld
push
push
cli
mov
xchg
dec
xor
aas
test
lret
fdiv
adc
imul
jae
lods
ja
inc
inc
cmp
jge
dec
pop
mov
icebp
or
jecxz
mov
push
loop
and
data16
cmp
mov
or
out
jb
xchg
ss
stos
push
rol
pause
push
fwait
xchg
outsl
cmpsb
jmp
testb
adc
sbb
in
push
adc
add
inc
mov
sbb
pop
jmp
jbe
dec
jb
addl
repz
rcr
cmp
mov
testl
inc
push
xor
push
ss
cld
lret
nop
loopne
xchg
sbb
adcl
inc
aas
pop
fs
shll
rcrl
xor
inc
add
das
xor
xor
sbb
mov
loope
xchg
fcmovnu
xor
cwtl
xchg
mov
lods
ret
mov
stos
inc
dec
jmp
sahf
daa
cld
and
xlat
add
mov
adc
xchg
fs
sbb
fptan
dec
cmpsb
mov
sbbb
sbb
lods
fcomps
sbb
lds
xchg
sbb
inc
enter
enter
mov
push
mov
imul
or
mov
daa
jae
sub
and
leave
dec
and
add
shlb
mov
daa
ret
outsl
test
scas
pop
cltd
xchg
lods
dec
int3
ljmp
sar
movsl
negl
xor
inc
jmp
adc
iret
test
in
ljmp
or
lea
pop
sub
loop
xchg
stos
aam
cld
pop
lcall
adc
scas
xlat
lret
outsb
sub
xlat
inc
mov
inc
sbb
push
dec
ljmp
stos
xchg
scas
mov
jae
jb
cwtl
xchg
jp
es
ljmp
cmpsl
pop
and
je
mov
sub
nop
xor
out
enter
mov
cld
sti
leave
cli
sbb
push
jbe
jp
cld
arpl
out
aaa
scas
xchg
push
out
shrb
mov
dec
repnz
out
cld
cli
je
lods
aas
inc
popa
outsb
mov
mov
insb
xchg
mov
incl
inc
or
xchg
cwtl
pop
push
cld
cmc
gs
lds
popf
stos
das
sarb
pop
ds
or
cmp
lds
pop
dec
pop
pop
push
or
lods
cmp
shlb
cmpsb
loope
lcall
aam
xchg
xlat
nop
pop
popa
test
movsl
adc
sub
mov
vunpcklps
ds
arpl
data16
mov
mov
orb
fwait
push
or
mov
inc
scas
push
mov
add
or
popa
pop
arpl
aam
xor
push
sbb
mov
push
shlb
out
repnz
lcall
sub
adc
xchg
mov
mov
xor
outsb
inc
movsb
cli
clc
xchg
mov
xchg
rcll
jne
stc
je
mov
sahf
aad
mov
sbb
rorl
stos
xchg
test
and
sbb
loop
pop
shll
mov
popf
lods
jno
cmc
mov
mov
mov
loop
daa
hlt
pop
nop
mov
mov
dec
lds
pop
xlat
xchg
mov
mov
cmp
inc
cmp
mov
frstpm(287
imulb
pushf
rol
xor
into
mov
push
adc
in
inc
fwait
xchg
int3
xor
sbb
outsb
in
mov
mov
out
int3
mov
add
dec
pusha
sub
pop
fisubrs
push
stc
push
push
xchg
repnz
and
scas
mov
jle
push
enter
xor
shrl
push
jle
add
mov
jg
add
lahf
mov
pop
inc
std
dec
dec
push
or
sub
out
sub
stos
sahf
push
imul
daa
sub
in
cwtl
shlb
push
adcl
cli
inc
fldcw
scas
and
mov
in
add
movsl
or
sbbb
imul
dec
jb
stos
stos
lea
ficoms
movsb
pop
stc
or
out
lahf
test
or
std
cmc
jecxz
dec
gs
dec
push
cmp
or
orl
lahf
mov
aad
add
ljmp
out
test
sahf
xor
xorl
push
sbb
xchg
mov
shlb
pop
into
dec
inc
stos
cmp
add
pop
mov
aad
aas
push
cmpsb
lods
xor
sbb
leave
xchg
stos
sub
cli
inc
push
mov
xchg
lcall
xlat
add
notl
popa
mov
sub
sub
repnz
or
pop
and
lahf
lcall
cmp
push
es
push
icebp
jecxz
jnp
xor
or
lcall
sub
mov
pop
int3
add
lds
mov
pop
lock
lds
out
fsts
and
lods
xchg
or
add
mov
cmpsl
sub
adc
dec
imul
loope
or
pop
out
into
repnz
jl
sbb
mov
clc
in
fsubs
pop
loope
shlb
inc
pop
rorb
sbb
push
xchg
pop
cs
xlat
mov
xlat
jae
push
shlb
sbb
xor
movsl
mov
shrb
pop
adcb
pop
mov
and
call
mov
inc
cltd
jmp
push
push
and
mov
inc
addr16
jnp
insl
fsubr
in
mov
in
imul
inc
jns
clc
jl
outsl
push
movsl
test
lahf
adc
inc
push
faddl
xchg
mov
jne
cmp
mov
jno
ds
lods
and
add
sub
cmp
xchg
mov
cmp
js
mov
dec
jae
imul
insb
xchg
dec
outsb
repnz
faddl
pop
mov
push
or
test
test
cmp
ljmp
popa
nop
daa
mov
jecxz
ret
stc
in
cld
or
notb
movsl
aaa
shrl
xor
cmp
sub
mov
xchg
xchg
ja
cmpsb
cwtl
xor
pop
xor
mov
pop
xchg
arpl
jp
cs
xchg
lods
jo
iret
sbbl
and
in
setp
sbb
das
xchg
adc
and
jecxz
gs
mov
out
insl
pop
mov
mov
cmp
add
pop
call
je
adcb
loopne
cmp
inc
jge
js
mov
sti
outsl
and
in
dec
push
sub
movsb
sbb
sbb
xlat
nop
popaw
loop
sbb
push
adc
out
dec
or
rclb
jo
inc
unpckhps
cmpsb
cmp
and
adc
or
ja
push
addr16
neg
pusha
push
push
pop
and
repnz
popa
and
outsl
test
inc
sbb
call
mov
push
stc
in
sbb
out
mov
xor
sbb
xchg
mov
movsb
imul
div
inc
ret
rolb
fldcw
or
cmc
xor
cld
out
mov
sbb
arpl
adc
fsubl
sub
mov
jg
jmp
aaa
repz
int
mov
popa
insl
mov
mov
push
enter
sti
shl
push
ret
sub
sub
int3
mov
adc
pop
adc
das
int3
outsb
addr16
test
loope
or
bound
jge
sar
out
or
insb
mov
jae
jp,pt
out
mov
scas
or
fimuls
dec
add
pop
stos
out
and
into
rcrl
cmpsl
sub
cmpsl
mov
inc
cmp
jl,pn
mov
add
shlb
arpl
xchg
pushl
adc
sub
fwait
lds
lret
xchg
xlat
inc
loopne
out
insl
icebp
sahf
dec
xor
cmp
das
dec
loop
cld
mov
pop
icebp
outsb
icebp
and
stos
lock
enter
test
xchg
mov
pop
mov
adc
cmpb
mov
push
jmp
xor
ja
out
push
movsl
aaa
lds
or
dec
sahf
stos
pop
scas
test
cli
repz
add
and
popa
ret
mov
pop
fidivs
arpl
out
or
add
jbe
fldenv
sub
pop
ret
iret
clc
push
add
cmpsb
adc
in
xor
or
pop
push
mov
jecxz
xlat
sub
push
lret
mov
sub
cmp
and
mov
push
mov
hlt
push
aaa
mov
jp
pop
inc
pop
mov
mov
out
lea
lock
cltd
or
adc
mov
arpl
dec
outsl
jg
add
xor
sub
iret
pop
jnp
mov
add
hlt
mov
out
sahf
adc
fstps
xor
pop
je
xchg
aam
cltd
sbb
mov
in
sub
mov
sub
cwtl
sub
pusha
ret
jnp
jle
mov
jle
hlt
inc
bound
push
pop
sbb
repnz
imul
mov
aam
imul
and
pop
pop
jle
ss
and
inc
cmp
mov
add
dec
cwtl
add
dec
mov
pusha
clc
xchg
mov
jecxz
jne
and
dec
xchg
add
cmp
test
fcompl
xlat
scas
inc
mov
loop
cmp
sbb
xchg
hlt
cmp
add
lds
stos
adc
mov
cmp
out
std
inc
jb
or
jmp
test
xchg
xchg
ss
adc
int3
cmp
pop
gs
lods
mov
xchg
xchg
mov
pop
xorb
pop
arpl
adc
inc
inc
js
push
into
movsb
js
jb
add
cld
mov
insl
das
or
in
test
dec
into
lea
push
leave
and
add
outsb
or
nop
cmc
push
les
sbbb
dec
iret
mov
mov
je
xor
dec
sbb
popa
clc
cmp
mov
fs
cmpsl
fldenv
push
fldt
ficompl
test
movsl
jecxz
insb
push
or
loop
or
fildll
xchg
dec
shlb
cld
adc
fs
fbstp
ja
push
aam
stos
xlat
fidivl
fwait
jae
or
cmp
push
xchg
mov
fdivl
push
cmp
popl
dec
aad
in
sbb
mov
inc
add
xchg
loop
daa
movsl
jp
ss
and
mov
rclb
xchg
and
xchg
test
cmp
mov
call
fisubrl
mov
mov
pop
sbb
popf
stc
jge
push
gs
jb
mov
xchg
inc
inc
sub
jmp
rorl
sub
xchg
cmp
jecxz
adc
sahf
shlb
loopne
out
xchg
inc
movsl
pshufw
xor
out
out
mov
lret
jecxz
clc
shl
loope
push
rorb
cmpsl
mov
rolb
inc
jnp
cmpsb
insl
xlat
inc
aas
cwtl
pop
clc
movsb
push
rorb
icebp
enter
xor
mov
hlt
out
mov
in
and
or
test
repnz
and
lahf
aaa
ret
lret
dec
repz
fistpll
fwait
xor
jg
cmc
daa
inc
outsl
push
inc
lahf
loop
and
jl
jnp
lock
mov
pusha
dec
ds
mov
lea
test
mov
movsl
xchg
in
sub
jg
sub
jo
cmpsb
jge
push
mov
iret
imul
xor
int3
sub
nop
adc
push
pushf
les
and
dec
pop
and
jle
push
loop
cmp
std
jle
pop
test
mov
cwtl
shr
lret
pop
sbb
pop
aam
insl
push
mov
pusha
inc
fiaddl
xor
add
push
cmp
cli
fs
outsb
xor
ja
cmpsl
jae
mov
mov
xchg
rorl
insb
out
cmpsb
and
nop
cmpsl
jne
movsb
xor
fdivp
xchg
push
stos
xor
xchg
outsl
mov
sub
into
mov
add
cmp
iret
and
rcrb
popf
mul
addb
andl
pop
xor
fwait
lds
pop
rorl
pop
pop
or
rclb
fcomip
mov
ficompl
jle
pop
and
and
pop
sahf
push
adcb
sarb
xchg
mov
xor
pop
cmpsl
imul
scas
js
in
jns
adc
orl
push
insl
jne
xchg
pushf
imul
clc
dec
iret
stos
push
cmpsl
mov
cmp
mov
cld
mov
es
inc
xchg
and
loopne
and
cld
mov
and
push
mov
xor
mov
mov
sub
mov
fidivrs
je
or
dec
add
mov
test
lods
je
xchg
cltd
stc
fists
int3
sti
clc
adc
jg
je
xchg
add
xor
in
cmpsb
or
push
data16
stc
std
dec
mov
fisttps
adc
push
sbb
jecxz
sbb
ror
mov
out
lods
js
addr16
mov
int
jne
shll
sbb
subb
push
int3
inc
ja
dec
push
popf
xor
add
mov
arpl
loop
pop
lret
bound
addr16
loope
push
insb
pop
shlb
fs
pop
sbb
dec
lds
ljmp
insb
mov
scas
mov
xchg
lret
scas
push
inc
lcall
idiv
les
mov
fbld
aas
mov
sti
mov
pushf
in
out
jg
lds
mov
cmpsl
jmp
stos
mulb
lret
xor
cmp
add
out
js
fwait
dec
shrb
pop
mov
je
sbb
repz
sbb
jae
xchg
mov
movsb
inc
clc
in
jge
sahf
cmp
pop
int3
pushf
cld
adc
addb
pcmpgtd
mov
inc
popa
inc
cli
mov
ss
loope
fdivs
adc
jmp
or
hlt
out
shll
pop
lds
and
add
xor
jge
das
les
sub
xchg
cs
sbb
outsl
int3
out
sub
jecxz
imul
lds
andl
imul
pop
je
in
xor
aaa
cli
pop
fsubrl
enter
rclb
inc
jnp
mov
mov
gs
clc
mov
xor
jle
mov
push
sti
xchg
jb
mull
jl
std
cld
push
xor
push
gs
pop
lods
jle
push
fwait
inc
andl
lret
or
adc
sub
push
popf
sbb
push
out
aam
stos
gs
inc
cmp
lock
jg
jg
lea
xchg
add
mov
push
mov
stos
dec
mov
xchg
dec
sbb
fsts
loopne
mov
inc
cld
and
push
push
jecxz
jmp
xor
mov
stos
mov
daa
mov
test
cmpsb
imul
cmpps
and
data16
add
ja
movsl
adcb
outsb
enter
inc
mov
jmp
pop
cmpsb
fwait
addr16
xlat
push
jge
inc
add
fbld
cmp
cmc
mov
add
cmc
lahf
sbb
cmpsl
sahf
lcall
xchg
jmp
cmp
dec
idivb
xlat
scas
incl
mov
push
dec
jecxz
xor
or
int
and
push
push
xchg
ficomps
xchg
add
push
cwtl
in
out
imul
cli
ret
sbb
mov
adc
shlb
and
sbb
pop
arpl
je
js
or
loopne
rorb
mov
adc
jo
jle
adcb
xchg
inc
cmpsl
repz
lock
xorl
jno
movsb
inc
xor
pop
mov
and
jns
sub
xlat
mov
dec
cld
push
jg
xchg
mov
xor
pushf
mov
push
leave
outsb
lods
push
dec
aas
aas
xor
cmp
rcll
das
push
rorb
jl
xor
mov
mov
cltd
sub
or
adc
rcl
pop
icebp
xchg
mov
xor
movsb
faddl
xor
hlt
neg
cmp
int3
lret
add
idivb
les
xchg
xchg
cmp
gs
cmp
push
loope
addl
cmp
scas
push
mov
cmpsb
sbb
add
mov
enter
lds
push
dec
ret
lahf
shlb
bnd
and
mov
hlt
inc
popa
mov
stos
cmp
lods
fistpl
cmpsb
push
das
mov
jge
dec
pop
cmp
sbb
shl
jle
mov
out
xchg
outsb
add
cmc
or
into
jnp
push
sbb
jmp
call
dec
imul
dec
add
jbe
leave
xchg
lahf
jnp
sub
out
xchg
jo
xor
mov
mov
sub
imull
push
je
sub
pop
inc
es
pop
loopne
jle
lahf
hlt
arpl
addr16
loopne
adc
cltd
cwtl
adc
push
pop
adc
mov
sub
dec
mov
add
cmp
mov
dec
push
fidivrl
mov
subl
sbb
popa
pop
or
jmp
jnp
mov
cmp
jecxz
jnp
stos
inc
cltd
jne
pop
adc
mov
int
fistl
data16
and
test
pop
xchg
sti
lock
or
iret
or
xchg
sbb
or
sbb
sub
mov
ss
jle
arpl
mov
mov
xchg
loope
sbb
divb
mov
ds
sub
sbb
pop
aad
scas
xor
orb
and
cltd
mov
leave
pop
and
cmc
lds
mov
mov
xorl
pop
jns
add
lret
mov
mov
mov
cs
les
out
jnp
or
jo
int
push
lods
sub
and
test
or
pushf
xchg
lret
cmove
pop
mov
ja
lea
aam
pop
jmp
mov
xchg
outsb
shrl
dec
cmp
dec
or
loope
jg
fimuls
push
mov
loop
mov
mov
xchg
and
cmpl
sub
into
mov
jbe
js
in
cli
dec
shl
or
cmpsl
stc
loopne
push
aam
lcall
js
enter
push
add
cmpsl
pop
mov
movsl
int
test
dec
xchg
arpl
aaa
sub
mov
lret
inc
jns
sub
cmp
dec
pop
push
lds
pop
movsb
ljmp
or
inc
mov
lcall
inc
scas
test
jne
fidivrl
addr16
je
inc
xchg
aad
jmp
push
jp
sarb
lods
ret
int3
gs
xor
je
jmp
clc
mov
jmp
mov
push
pop
lea
jb
test
jno
xchg
or
popf
pushf
cltd
clc
dec
test
subb
jo
xor
cmp
loopne
lods
xchg
aad
push
addl
out
mov
jg
pop
inc
lods
clc
lds
and
loopne
stc
add
jo
inc
sbb
fst
inc
roll
sub
gs
cltd
cld
fsubr
mov
sbb
jge
dec
xor
ret
leave
int
test
mov
sbb
aas
jne
sbb
aas
icebp
sbb
ficomps
ret
cwtl
in
into
or
stc
mov
std
into
adc
push
jns
fxch
cmp
bound
and
and
out
push
xor
in
loope
test
mov
dec
jg
divl
sub
dec
xchg
mov
or
dec
sbb
lods
lock
push
hlt
outsl
and
add
dec
and
lock
dec
jae
cmp
mov
inc
pop
jecxz
mov
pop
or
or
bound
push
push
mov
mov
sbb
lcall
call
mov
add
pop
fisubs
xchg
cmp
dec
mov
movsl
movsl
push
add
in
push
adc
mov
sahf
adc
in
leave
adc
add
mov
es
push
arpl
movsb
xor
ja
xor
push
xor
sub
lods
push
imul
fucomip
cs
imul
ret
dec
pop
lcall
sahf
ljmp
push
lods
cmp
mov
or
pop
push
mov
xchg
cltd
mov
cmp
bound
out
in
adc
pusha
jo
jne
jo
sub
dec
cs
jbe
in
insb
jg
xchg
xchg
add
fcomp
add
jmp
mov
nop
or
shl
add
pop
leave
xchg
mov
or
bound
jae
dec
rorl
fldcw
outsb
fimull
mov
adc
sbb
repz
fwait
lods
push
mov
or
ficoms
jbe
fdiv
ljmp
sahf
cmp
lds
les
out
push
jle
out
mov
push
mov
jo
aad
es
inc
xchg
xor
push
fsubp
fmuls
mov
scas
iret
arpl
lret
aaa
dec
add
test
popf
aad
scas
int
pop
push
test
aad
add
mov
cmp
jae
test
cmp
test
push
std
adc
movsl
or
cli
mov
cli
into
ficoml
loope
lret
mov
fs
adc
push
sub
cmp
lods
sub
add
data16
mov
sbb
or
add
dec
repz
xchg
fimull
nop
fistpl
xlat
jl
cltd
lret
push
push
leave
jp
ficoml
scas
fucom
lods
andb
pop
cmc
xchg
fwait
sbb
cmp
cld
loop
decl
nop
pop
jbe
mov
outsb
inc
pop
sbb
decl
jo
push
or
enter
movsb
fldenv
fmuls
in
js
xchg
fdivrs
mov
movsb
adc
add
pop
stos
das
pop
push
dec
cld
aas
mov
hlt
sti
int3
mov
pop
push
data16
movsb
shr
fsub
pusha
jmp
add
int
in
fistpll
xchg
lds
adc
sbb
je
or
push
pop
jg
into
leave
icebp
pop
pop
pop
orl
jl
movsb
xor
mov
jp
cmpsl
cmp
ja
or
mov
push
xchg
insb
out
je
les
dec
fbstp
daa
and
aad
jge
ljmp
mov
cmp
sbb
xchg
xchg
mov
inc
adc
jmp
sub
jle
xchg
ljmp
cmp
pop
lea
outsl
lods
xor
out
bsr
push
imul
lods
dec
pop
scas
pop
push
not
pusha
pop
out
inc
test
dec
stos
mov
iret
jbe
push
lcall
mov
fsubr
in
jb
mov
insl
dec
lcall
pushf
inc
dec
mov
sbb
xor
scas
mov
fstpt
push
dec
sub
xchg
cmpsl
jp
push
xchg
xchg
pop
stc
outsl
mov
sub
jbe
or
xchg
out
jg
dec
sbb
mov
int
add
into
fld
hlt
or
xchg
add
cmp
push
xchg
xor
sub
cld
pop
and
xor
sti
xchg
stc
add
lea
mov
pop
mov
aas
mov
clc
je
xor
repz
cmp
cmp
sub
outsl
add
stc
test
jp
jns
pushf
or
xchg
cmpsb
stos
fwait
imul
cmp
push
int3
lock
or
imul
dec
outsb
fcmovbe
lcall
xor
cmc
jp
into
jl
mov
pop
imul
push
lods
push
adc
call
jo
imull
sub
mov
aaa
in
in
insl
sbb
xor
imul
rcrl
test
loope
sub
dec
mov
call
mov
test
cmp
dec
aaa
xchg
je
lods
cwtl
xlat
and
test
jecxz
xchg
rorb
test
cmp
or
jg
stc
push
data16
aas
jb
or
fidivrl
stos
sub
jo
push
les
decl
sbb
push
add
repnz
mov
pop
mov
xchg
imul
xorl
pop
fsubp
or
or
pop
and
lcall
pop
stos
aam
jp
ljmp
xor
sahf
pop
inc
xchg
mov
es
sbb
dec
xchg
sti
mov
xchg
sti
mov
dec
jp
xchg
jno
add
jmp
insl
or
shr
pop
scas
mov
jne
in
jns
shlb
pmulhuw
sahf
fcoms
xchg
icebp
cmpsl
xchg
adc
fcmovb
pop
jle
call
loopne
into
push
std
ja
fabs
or
lret
outsb
mov
imul
and
inc
and
mov
mov
mov
sti
dec
push
pusha
adc
ret
cmp
mov
in
addr16
xchg
lods
test
je
inc
aas
pusha
dec
mov
mov
pop
stos
movsl
pop
or
cmpsl
inc
pop
stos
and
nop
test
cli
fnstsw
push
and
arpl
in
hlt
jb
nop
or
ret
pop
jl
stc
out
std
fstps
and
xor
xchg
lret
pusha
pop
test
lock
out
add
std
lcall
in
xchg
jbe
scas
popa
xor
data16
mov
xor
dec
shld
lcall
inc
icebp
adc
fdiv
add
jno
jl
sub
sub
xchg
lods
and
xchg
jns
int
and
mov
cltd
mov
pop
out
mov
mov
outsb
mov
cmp
xchg
je
cmpsb
push
stos
sarb
movsb
jnp
inc
dec
xchg
inc
mov
inc
push
dec
xchg
lret
push
subb
adc
fcmovnbe
add
fcmovu
cli
stc
adc
add
dec
testb
mov
out
or
cmc
fldz
pop
call
lret
popa
stos
jge
mov
data16
aam
ss
cmp
jp
aas
mov
jp
cmpsb
cmp
rorl
dec
jns
jo
std
call
cwtl
lcall
and
sahf
mov
hlt
adc
and
in
sbb
pop
mov
push
lahf
repz
mov
xlat
stc
pop
stos
call
lret
cmp
push
rorl
into
or
mov
add
mov
jp
rcll
xchg
jl
rcr
shll
add
test
adc
fadds
ja
nop
fisttpll
pushf
cmovae
push
cmpsb
inc
rclb
hlt
loopne
pop
sub
jg
ljmp
xchg
cmp
pop
adc
fcmovbe
xchg
cmpl
adc
sahf
jge
xor
mov
sub
push
mov
adc
popf
pop
mov
shrl
lods
pushl
or
or
dec
roll
lds
xchg
jmp
mov
insl
outsb
sub
sarl
ss
rorl
lds
scas
xor
repz
out
lock
xchg
insl
sub
jnp
sub
push
adc
enter
clc
imul
push
sbb
je,pn
nop
cmp
add
loopne
adc
push
add
mov
hlt
fldl
fsubl
jb
in
inc
cmp
pop
mov
bound
das
or
popf
int3
inc
outsb
insb
not
or
popa
mov
jl
or
adc
nop
les
xor
insl
sbb
arpl
xor
mov
addr16
xor
out
sub
inc
std
shlb
test
mov
jp
adc
push
inc
mov
xor
aad
cli
mov
test
imul
mov
cmp
xor
pop
xchg
arpl
hlt
fistpll
push
jnp
in
or
addl
pusha
push
inc
mov
leave
test
xor
push
int3
xor
int
mov
clc
inc
int3
mov
mov
jle
clc
adc
out
hlt
clc
mov
shll
cs
cltd
iret
imul
hlt
xchg
lret
add
pop
and
mov
or
cmp
xchg
push
adc
arpl
test
sbb
pop
cld
lods
cwtl
in
iret
sbb
dec
lret
hlt
push
rclb
nop
add
or
xchg
fs
jl
sbb
mov
mov
mov
xor
outsl
in
cmp
mov
add
push
test
mov
lods
movsb
cmp
int
mov
loope
lahf
mov
test
pushl
dec
imul
out
loopne
les
cmp
dec
jmp
adc
sub
push
cwtl
dec
ljmp
xor
push
cmpsb
fildl
inc
out
or
inc
cmp
inc
push
xor
push
out
push
pop
push
aam
negb
xor
inc
push
xchg
test
mov
ljmp
cli
and
xchg
ss
xor
sahf
jno
push
sub
push
insl
dec
push
push
lret
notl
icebp
iret
or
jo
andb
out
insb
idivl
mov
aas
push
fnstsw
sbb
mov
adc
cs
leave
mov
mov
outsb
push
mov
inc
bnd
ficompl
sbb
movsl
add
mov
arpl
roll
in
sarb
dec
nop
jnp
scas
les
repz
and
or
cmp
xor
loopne
mov
add
mov
add
mov
std
inc
dec
sub
popa
mov
xorl
mov
cmpsl
test
jns
jb
outsl
mov
cltd
outsl
imul
or
fdivrp
filds
pop
push
and
push
repnz
in
jmp
outsb
push
scas
mov
mov
dec
jp
pop
cli
dec
add
addb
inc
adc
or
shrl
cmp
dec
or
pop
loop
sbb
jl
imul
lock
rcrb
jno
pop
xchg
dec
mov
adc
sbb
orl
push
xor
pop
adc
jns
imul
inc
sub
adc
xor
stos
cmc
adc
sub
sahf
fadds
dec
mov
mov
jecxz
mov
sbb
mov
sbb
nop
or
and
or
mov
cmp
pusha
and
push
lcall
cmpsl
pop
imul
fidivs
sbb
or
dec
fwait
daa
les
ja
or
inc
in
hlt
repnz
rorb
pop
les
jno
adc
lods
and
cmp
cmp
and
sub
gs
mov
push
subl
adc
mov
adc
in
jmp
dec
dec
loope
cmc
push
stc
pop
lret
dec
xchg
push
pop
adc
fcom
pushf
vmwrite
cs
jecxz
scas
test
push
mov
pop
cmc
jne
adc
leave
lods
jp
mov
repz
xchg
jne
pop
imul
adc
and
sub
cmp
pop
addr16
pop
ljmp
dec
iret
in
addr16
imul
push
sub
stos
mov
sarl
movsl
mov
adc
pop
aas
inc
insl
je
and
aam
cmp
jb
mov
xor
fwait
adc
ss
cld
in
fsubrs
mov
add
cli
movb
dec
mov
mov
ficoms
clc
dec
pop
mov
lods
shll
dec
mov
cld
cs
stos
mov
pop
cmp
jnp
xchg
jnp
cmc
mov
mov
loop
inc
push
push
fwait
adcb
mov
dec
nop
mov
xchg
stos
mov
int
insb
popf
xlat
mov
sub
push
sbb
xor
icebp
stos
pop
shll
rolb
loope
addr16
jb
repnz
sub
xchg
xor
mov
dec
add
and
sarl
push
push
and
mov
mov
mov
add
mov
push
imull
test
sahf
sbb
mov
scas
roll
enter
aad
testb
pop
pop
pop
adc
les
mov
lods
inc
push
test
sbb
xchg
mov
mov
fbstp
out
xchg
sub
and
xor
mov
push
jl
jno
jmp
cltd
mov
mov
push
xchg
imul
addps
sbb
imul
movsb
cmp
int3
cmp
xchg
inc
loopne
cmp
xchg
ret
add
das
mov
stos
cld
stos
out
iret
stos
addr16
std
ret
push
lods
and
test
fwait
js
dec
inc
sub
add
sbb
in
xchg
xor
popf
test
inc
inc
mov
dec
popf
mov
mov
push
fmull
icebp
mov
inc
jnp
data16
push
jmp
popa
loope
sti
xchg
ret
mov
add
dec
lods
add
mov
add
repz
mov
ss
jge
scas
addr16
cmpsb
fstp
je
mov
xchg
hlt
arpl
insl
mov
or
lods
cmp
inc
dec
adc
mov
or
cmp
adc
cmpsb
mov
aad
jmp
iret
sbbb
lcall
cmpsb
insb
dec
pop
dec
dec
imull
movsb
dec
cltd
cwtl
mov
lds
je
jmp
lods
popf
fcmovne
adc
fs
iret
adc
pop
sbb
out
fdiv
sbb
push
and
cwtl
dec
mov
and
loop
mov
cmp
mov
xchg
jge
test
enter
push
call
cmp
push
mov
je
sub
mov
stos
add
shl
in
data16
fsubrp
imul
push
aas
hlt
enter
xor
repnz
lret
mov
pusha
cmc
or
fcmovnu
daa
sbb
inc
jne
into
enter
shlb
pop
shl
ds
test
push
es
xor
fneni(8087
ss
repnz
fimuls
icebp
xchg
pushf
sub
mov
mov
fsub
jmp
mov
jno
js
movsb
xchg
add
aam
in
leave
lods
mov
loop
lret
stos
aas
adc
sub
or
dec
xor
divb
pop
test
sbb
out
inc
and
inc
stos
rcrl
xchg
pop
insb
out
pop
enter
and
push
lods
push
push
mov
lahf
in
dec
pop
incl
xor
mov
inc
adc
fildll
das
xchg
addb
mov
cmp
inc
sbb
rclb
jo
jnp
stos
pusha
call
or
xlat
pop
movsb
adc
clc
rorb
test
cmp
scas
test
inc
in
jbe
pushf
test
jmp
lcall
mov
fstl
sbb
push
movl
add
fadd
pop
jne
int
outsl
nop
or
cmpsb
popa
mov
inc
cmpsb
loop
sub
push
das
aam
test
xchg
sub
movb
inc
jmp
int3
sbb
fwait
jne
pop
jno
sbb
pop
xchg
pop
cltd
or
sub
or
icebp
mov
push
dec
cld
shl
xlat
pop
lods
xchg
jecxz
sub
adc
pop
sbb
bswap
shrb
jns
test
push
push
stos
pop
dec
pop
test
sbb
sub
int3
sbbb
dec
inc
lret
push
std
imul
or
mov
and
mov
mov
ret
push
fstpl
ljmp
mov
xor
addb
push
and
movsb
sub
scas
dec
mov
les
adc
repnz
loopne
mov
adc
jo
mov
mov
les
cwtl
test
cmp
pop
xchg
or
imul
push
and
outsl
sub
and
movsl
bound
cmove
nop
sarb
test
fmull
inc
sbbl
shlb
cmp
fildl
stos
clc
jge
movsl
or
xor
iret
mov
push
add
adc
mov
jo
cltd
jge
cltd
or
fidivrs
insl
cmpsl
lods
insb
lcall
jmp
jnp
in
push
aaa
and
iret
push
sti
jne
pop
call
jns
ss
mov
sbb
psrld
lock
cmpsb
xchg
jnp
mov
pushf
xor
mov
sar
jb
mov
lods
test
add
ret
xor
add
shrl
cmp
sub
push
mov
stc
out
subl
addb
bound
ljmp
nop
mov
loop
out
js
push
cmc
gs
or
insb
leave
sti
xor
outsl
mov
mov
xor
xor
std
mov
hlt
push
js
add
aam
pop
aad
popa
and
pop
push
cwtl
pop
sbbb
aaa
mov
adc
and
ds
push
shlb
adc
ret
push
lods
jge
inc
lods
cmp
mov
dec
in
mov
das
mov
and
rcrb
sbb
test
inc
insl
mov
rcrb
push
or
fbstp
xorb
add
inc
ret
or
dec
dec
sub
sub
pop
out
scas
aaa
mov
push
enter
fwait
pop
sub
mov
lods
lock
repz
jae
lahf
cld
dec
mov
lret
addr16
inc
mov
inc
in
repz
pop
popa
add
jge
adc
xchg
push
xchg
mov
loopne
jge
ja
add
leave
cmp
addr16
pop
scas
jg
mov
pop
add
add
shlb
or
xor
stos
fwait
into
and
inc
imul
mov
imul
lret
dec
fistps
call
in
aam
clc
xor
sbb
jns
and
outsb
js
movsl
mov
push
rcrl
sahf
push
roll
subb
pop
faddl
mov
dec
push
push
movsl
add
pop
in
leave
lea
and
xor
push
ret
dec
inc
mov
fdiv
jmp
outsb
cmp
mov
adc
mov
mov
push
xor
pop
imul
or
int
add
lods
in
inc
rcll
pop
or
xchg
mov
cld
push
xor
add
jl
jge
outsb
mov
ret
imul
sahf
ljmp
or
or
pop
cmp
and
push
mov
xor
sbb
sub
mov
in
stc
hlt
or
mov
popf
cmpsl
sub
push
jnp
aad
mov
mov
and
out
add
js
push
pop
ljmp
jecxz
gs
and
push
sbb
xchg
insl
sahf
rol
mov
sub
sub
sub
add
jecxz
dec
decl
pop
lods
push
adcb
andl
or
fs
or
icebp
lods
add
js
es
xor
push
lcall
out
test
pusha
mov
add
movsb
nop
mov
jae
les
test
xchg
push
sbb
in
jne
or
cwtl
xchg
dec
fmull
pop
push
add
xchg
ficoms
std
repz
mov
and
shlb
mov
cmpsb
push
adc
leave
xchg
cmp
into
xlat
sbb
pop
pop
cmp
lds
xchg
mov
xchg
sti
push
mov
xchg
pop
cli
out
sbb
add
rcrl
out
insb
pop
insl
loopne
mov
push
arpl
aas
xchg
xor
dec
movsb
out
cltd
test
insb
aad
inc
call
test
jnp
xor
xor
mov
push
lcall
xchg
dec
sub
inc
mov
push
test
cmpsb
jno
ss
ret
test
daa
xlat
jmp
or
test
or
dec
je
inc
imul
pop
shlb
jmp
test
je
int3
mov
add
fidivs
jge
lcall
addl
repz
rorb
xor
scas
test
lds
inc
aaa
scas
pop
or
dec
xor
pop
iret
xchg
pop
bound
cmp
xor
cld
insl
aas
dec
dec
les
cmp
pop
cli
xor
jmp
je
fisttpll
inc
dec
cs
stos
cmc
and
mov
out
cmp
push
jbe
mov
sbb
inc
clc
mov
out
xorl
hlt
inc
push
in
and
push
test
mov
sub
lds
js
lock
adc
inc
adcb
fisubl
out
test
pop
push
insl
clc
faddp
adc
adc
sub
mov
xchg
inc
lea
sub
xor
sub
lock
dec
stos
mov
sub
cmp
cmp
cmp
xlat
push
xor
mov
sub
int3
mov
sbb
dec
repz
pop
mov
push
mov
sub
mov
sar
daa
lock
fdivl
std
je
jmp
push
pop
daa
fisubs
adc
cwtl
push
jo
call
stos
lahf
rcl
adc
or
pop
mov
ds
imul
sub
mov
lret
das
rclb
adc
fnstcw
stos
arpl
mov
out
dec
adc
cltd
jg
aas
hlt
daa
insl
and
ret
ljmp
xchg
mov
std
or
jne
imul
mov
nop
outsb
push
jne
nop
loope
rol
xor
xchg
pop
mov
bound
aad
in
push
xchg
add
daa
cmpsb
push
stos
sub
test
into
dec
das
icebp
popf
andb
repz
test
pop
xor
xchg
cmpsl
fistl
dec
inc
lret
lcall
inc
dec
jne
sub
xchg
jnp
jnp
sbb
cmpsb
or
push
mulb
dec
sub
rcrl
jge
inc
mov
imul
push
repnz
and
jo
xor
mov
call
mov
adc
pushf
sub
jae
cs
adc
and
imulb
pushf
xacquire
pusha
sub
repnz
pop
push
xchg
mov
aaa
lret
fwait
js
je
lods
mov
movsb
sbb
mov
in
mov
cmp
mov
push
lea
fldcw
jmp
arpl
hlt
repnz
mov
mov
jbe
mov
fbld
ret
add
or
call
mov
test
mov
jbe
xor
aas
nop
lret
sbb
fdivr
inc
adc
xor
jno
jae
cwtl
outsb
cmc
outsl
xchg
lcall
int3
jge
push
sub
nop
dec
cs
add
sub
arpl
push
orb
jnp
fisubs
xor
inc
or
mov
inc
popa
addr16
ljmp
and
push
mov
inc
std
mov
mov
mov
lods
push
adcl
xchg
mov
cmp
jp
lret
mov
in
das
jp
or
cmp
and
iret
inc
pop
cmp
jne
push
dec
mov
into
mov
mov
jno
pusha
jecxz
rorl
xlat
pop
mov
arpl
push
mov
inc
and
lds
sahf
pusha
add
xchg
arpl
lds
fwait
call
xlat
fwait
or
dec
int
inc
mov
push
movsl
outsl
js
cmpsl
rclb
adc
fimull
scas
testb
in
xchg
or
das
aas
push
dec
mov
in
stos
jns
outsl
push
imul
fs
mov
ret
stos
jmp
data16
cltd
dec
insl
je
push
jne
jle
xor
mov
cmp
mov
lds
xchg
movsb
in
push
dec
push
xlat
jmp
iret
test
lcall
or
out
ja
nop
cmpb
in
mov
xchg
adc
jg
das
mov
xor
loop
push
into
cmp
or
sbb
or
scas
pop
pushw
in
repnz
sbb
sub
xor
rolb
dec
push
aam
lret
mov
stc
sub
cmp
ljmp
add
dec
adc
popa
stos
iret
icebp
pop
test
pcmpeqb
imul
or
leave
inc
and
adc
jne
pushf
xor
adc
fsubrl
imul
mov
add
and
add
fdivr
cli
inc
jl
cmp
push
dec
xchg
xchg
mov
hlt
sub
add
jg
sub
jnp
xor
scas
pushf
call
push
xor
lods
jge
sbb
scas
pop
mov
inc
popf
adc
movsb
adc
in
mov
ljmp
fwait
cld
cmp
dec
popf
push
into
fucomp
mov
aam
xchg
and
fcmovnbe
movsl
mov
sahf
test
sahf
xor
xchg
lods
push
daa
push
jae
cli
mov
pop
iret
stc
sbb
rcll
and
aam
or
or
hlt
and
repz
pmulhw
rorb
mov
jg
xor
xchg
js
out
aad
dec
mov
es
xchg
adc
jl
ja
pop
pushf
sbb
imul
leave
xchg
jl
jo
icebp
adc
push
push
xchg
cltd
cmp
cmpsl
xchg
xor
or
xor
xor
pop
adcl
and
rcrl
cmp
xchg
sub
cmp
or
inc
cmp
into
call
fcmovne
sahf
insb
or
dec
mov
push
xchg
jle
xor
outsb
sbb
into
pop
sahf
add
dec
loope
lret
test
addr16
xor
ds
es
or
xchg
stos
mov
negl
outsb
inc
imulb
xchg
rol
dec
cmp
jmp
lea
int3
jg
nop
inc
add
push
mov
dec
xorl
in
bound
in
in
lods
push
fwait
sbb
jle
jnp
into
test
sub
push
xor
sub
pop
mov
mov
mov
lret
adc
xor
xor
mov
subl
in
aad
iret
out
jno
call
iret
and
fcompl
or
mov
pop
sbb
int3
xor
cli
bound
push
or
pop
dec
divb
dec
or
in
adc
sub
lds
popf
jp
aad
sarl
ret
pop
mov
xchg
psubusb
vdivss
out
push
mov
mov
push
dec
pop
jg
jne
push
push
mov
jp
lock
mov
sti
xchg
shl
adc
int
cs
inc
jg
ret
mov
andl
test
extrq
add
ljmp
test
xchg
add
hlt
xchg
mov
xlat
fmull
xchg
mov
frstor
mov
bound
and
ljmp
idivb
in
lods
stc
aas
loop
not
dec
aas
loopne
mov
pop
aas
mov
stos
daa
les
sbb
ljmp
rep
push
imul
aas
inc
add
sub
lods
push
adc
xchg
enter
or
and
call
cmpsl
fcmove
cmp
xor
push
fwait
test
xor
lods
les
mov
pop
adc
sub
mov
push
bound
mov
push
fldt
inc
cli
or
dec
mov
jge
add
aaa
jecxz
inc
out
jp
mov
cwtl
pop
fcoml
dec
mov
movsb
dec
nop
dec
hlt
sub
push
mov
add
mov
mov
or
fistps
add
bound
mov
xchg
fstpt
and
cmp
mov
jb
movsb
mov
lea
inc
fmul
cmp
push
adc
and
lods
out
dec
push
lret
adc
loope
sub
aad
xchg
cmpsl
and
lret
mov
in
xor
aas
push
js
mov
pushf
cmc
stc
mov
jns
push
mov
pop
sbb
cmp
or
imul
test
scas
lock
mov
pop
rclb
cmp
pop
jmp
and
jecxz
mov
vfmsubps
test
fbld
mov
and
mov
xchg
fildll
cmp
and
shlb
icebp
sub
idivl
sti
push
lods
sbb
sti
cli
fwait
xorl
cltd
mov
adc
into
das
les
mov
xor
xor
add
fildl
dec
dec
cmp
pop
add
mov
cmp
mov
adc
jp
shll
je
mov
mov
jnp
popf
dec
jp
or
daa
pop
pop
mov
mov
rol
inc
push
mov
sub
pop
adc
test
xor
dec
push
aam
or
mov
out
jbe
inc
mov
ficoml
mov
cltd
push
shlb
je
xchg
sti
mov
or
mov
xor
jb
dec
mov
outsb
ja
mov
cmp
scas
mov
clc
mov
out
jb
test
jnp
fdivs
adc
rorb
inc
in
push
jmp
sbb
dec
fadd
push
sbbb
jg
test
dec
sbb
mov
iret
xchg
ss
daa
loope
lods
mov
xor
lcall
sti
lcall
or
in
idivl
test
clc
dec
sbb
push
mov
mov
mov
push
jno
popa
inc
xor
shrl
int
mov
push
fadd
pop
popl
popf
xchg
inc
inc
lock
mov
sbb
test
push
add
loope
out
jle
or
enter
inc
ficoms
mov
sbb
or
xchg
jmp
jg
fnsave
and
daa
jbe
imul
cltd
cli
cmp
add
jne
stc
mov
mov
xchg
pop
pop
lret
or
test
cwtl
aas
sbb
call
and
lock
ja
lahf
lahf
icebp
add
adc
xor
pop
add
sub
pop
inc
arpl
insb
sbb
add
sbb
push
xchg
ss
add
icebp
cmp
mov
push
clc
inc
adc
mov
xor
addb
mov
mov
mov
outsb
xor
cmp
mov
xchg
dec
mov
mov
scas
out
pop
rolb
aaa
pusha
xchg
shlb
add
mov
enter
fisubrl
pop
dec
inc
sbb
outsb
lret
clc
js
or
popa
mov
push
mov
mov
inc
fstl
jmp
inc
fiaddl
into
out
or
xlat
pop
insb
pop
dec
mov
inc
mov
dec
sbb
aaa
sbb
cmp
xor
into
lcall
lds
xchg
int
outsl
push
insb
sub
mov
mov
cltd
add
xlat
and
incl
xchg
dec
adc
aam
push
sub
or
mov
ss
sbb
xchg
mov
ja
mulb
je
ja
cmp
mov
xor
arpl
cmpl
push
mov
cmpsb
rorl
inc
enter
pop
pop
inc
dec
lcall
sets
and
jl
mov
imul
jg
and
xchg
sbb
je
mov
and
clc
xchg
orl
or
push
shll
stos
mov
push
lret
daa
in
push
rcrb
sub
push
lcall
and
rolb
and
loope
xchg
inc
clc
add
xchg
add
add
mov
jbe
scas
lods
xchg
loopne
ljmp
pushf
lds
mov
pop
jmp
jmp
cli
rclb
xchg
in
js
mov
pop
mov
inc
lahf
push
and
inc
jmp
xor
cltd
aam
leave
inc
mov
lahf
mov
pop
repnz
mov
inc
ljmp
jecxz
mov
lcall
and
gs
sti
push
add
and
incb
movsl
int
clc
cmp
dec
cmpl
cwtl
nop
dec
inc
popf
and
outsb
loopne
sbb
cli
inc
jp
rcrl
add
nop
jle
out
and
mov
stos
dec
dec
shr
fisubs
mov
dec
gs
jno
add
xchg
and
mov
lcall
lods
push
mov
xchg
mov
aam
push
roll
dec
aaa
mov
push
mov
es
ja
fnstcw
shll
cmp
mov
inc
jno
ljmp
cmp
mov
mov
cmc
outsb
in
iret
lods
jno
pushf
out
mov
fisttpl
pop
pop
mov
popa
imul
lret
enter
xor
mov
add
and
xchg
in
sub
ds
mov
out
hlt
sti
jbe
hlt
ficoml
test
push
frstor
cmp
push
xor
push
mov
scas
dec
xorl
int
dec
lcall
pop
cmovo
jg
arpl
lods
cmp
dec
xor
push
js
mov
or
jg
movsl
add
pop
push
std
fnstenv
fmull
sbb
decb
test
push
mov
lock
test
roll
dec
and
jmp
add
jno
insb
nop
dec
fsubl
test
inc
out
mov
jmp
call
or
icebp
cli
push
imul
add
jge
mov
mov
in
push
je
lods
push
sub
incb
mov
mov
inc
fcomps
pop
and
scas
stos
scas
xor
icebp
push
movsl
pop
int
sbb
inc
movsb
aaa
movl
cmp
arpl
mov
fdivs
rcl
test
jle
lea
pop
sahf
jle
mov
es
mov
pop
mov
js
int
and
mov
pushf
in
popa
mov
xchg
xchg
mov
repz
int
in
mov
insl
inc
lret
cmp
lds
add
loopne
cwtl
outsl
pop
cld
inc
lret
jo
ret
adc
out
stc
fisttpl
mov
loopne
shrb
imul
loopne
lret
jecxz
lock
jnp
divl
jnp
imul
pop
in
aas
add
cmc
test
rcl
jmp
cmc
aas
aas
mov
xchg
pop
stos
pop
test
into
mov
or
repz
je
or
shrb
pop
sub
and
or
cmc
inc
pop
mov
test
cmpsl
ss
shrb
ret
inc
mov
and
setns
or
js
xchg
mov
js
cmc
jo
mov
mov
mov
int
xchg
ret
mov
sbb
push
pop
add
rcrb
xchg
scas
pop
cmp
adc
push
and
add
add
xorl
lret
adc
pop
inc
sub
cmpsb
fldcw
lods
inc
pop
xchg
cwtl
pop
lret
loop
in
std
mov
lock
pusha
jne
inc
mov
addr16
icebp
push
imul
mov
cs
add
pop
test
or
xchg
fisubrl
lods
mov
xlat
pop
ss
fsubrl
mov
sahf
ficomps
dec
mov
sbb
add
loop
mull
sbb
jno,pt
jmp
jne
in
fcoml
pop
imul
sbb
repz
dec
sahf
cmpsl
cmp
iret
add
mov
out
int
dec
xchg
and
or
sbb
mov
mov
data16
inc
sbb
xchg
pop
negb
xchg
hlt
jne
jmp
in
stos
add
cltd
cmp
enter
xchg
add
inc
in
push
in
inc
ds
in
inc
out
ja
rsqrtps
adc
in
icebp
mov
arpl
lock
mov
adc
jp
pop
fcoml
add
cli
out
test
pop
jg
mov
fnsave
xchg
cli
cmp
sub
pushf
ficomps
jp
push
push
aas
sub
in
shl
les
jg
stc
add
shr
shll
cmp
fsts
test
mov
push
movsl
bound
stos
clc
mov
sarb
mov
addl
imull
fistpl
popa
xor
jmp
sahf
push
lds
aaa
lods
inc
or
or
xchg
cmpsb
jo
incl
lods
lea
cmp
push
and
shll
push
pop
cmpsl
jle
fsubs
hlt
movsb
jmp
in
mov
inc
ja
lods
jg
imul
mov
inc
inc
lods
in
push
mov
inc
stc
mov
icebp
sub
ss
out
mulb
repz
cmp
sub
mov
jns
out
out
test
scas
call
and
xor
fistpll
push
je
mov
out
lret
test
add
out
jbe
or
mov
push
rorb
mov
sbb
lods
icebp
sub
imul
push
cmp
xor
insb
jo
or
mov
andl
pop
mov
sbb
mov
aad
sbb
mov
add
inc
lret
push
mov
ret
xchg
xorl
jmp
andl
repz
push
or
mov
gs
mov
jno
cld
and
cmp
cli
mov
shrb
adc
daa
cmp
nop
mov
sub
hlt
pop
std
mov
mov
cltd
outsl
addl
clc
insb
or
mov
adc
into
lret
inc
out
in
clc
out
or
adc
movsl
test
stc
adc
or
es
pushf
pop
mov
lret
rolb
movsb
outsb
test
lcall
std
fidivrs
outsl
in
fcoml
addl
mov
add
leave
call
mov
outsb
nop
xor
daa
cltd
stos
int3
jle
dec
out
fdivl
scas
popf
inc
lods
rol
movsl
sbb
int
rol
push
add
movsb
adc
cmp
les
xchg
sahf
pusha
out
mov
aas
fsubr
lret
push
dec
adc
push
dec
sbb
add
push
sbb
fsubs
dec
adc
xchg
pcmpeqb
xchg
lock
lods
test
divl
pop
mov
in
mov
inc
add
mov
lea
or
ret
jl
dec
insb
add
mov
shrl
insl
enter
or
inc
xchg
xchg
lods
sbb
inc
leave
sub
dec
inc
push
and
adc
jne
les
cli
xchg
aaa
mov
pop
lret
dec
pop
mov
pop
scas
jae
sbb
lea
pop
rcrl
push
push
lds
mov
idivl
jne
out
sahf
inc
xor
mov
into
loope
in
cwtl
jl
movsb
sub
jnp
roll
aad
jns
mov
out
and
adc
data16
xchg
mov
jge
pop
push
jmp
inc
pop
imul
int
push
sub
jmp
jae
aam
dec
test
pop
jmp
pop
add
inc
xor
jbe
or
loop
arpl
sub
xchg
push
xchg
jp
out
pop
xchg
sbb
and
sbb
insl
mov
xor
adc
scas
stos
and
pop
test
cs
mov
imul
inc
xchg
jb
xor
inc
sbb
adc
and
ret
jle
dec
test
push
mov
lods
arpl
mov
push
rol
pop
imul
adc
mov
adc
xchg
in
lods
push
push
or
loopne
mov
incb
jne
xchg
or
pushf
std
pop
pop
push
ss
ja
rolb
push
test
shll
xchg
pop
pop
inc
and
repz
cmp
adcb
sbb
push
fwait
and
cld
loopne
adc
mov
sub
cmovp
cmpsb
rcrb
mov
lods
pop
jecxz
sbb
or
mov
cmpsl
pop
cs
add
push
js
into
cmp
inc
xchg
add
aad
mov
popf
ljmp
cmc
aam
mov
push
or
lods
cwtl
sbb
sbb
cmpsl
popa
xchg
jmp
sbb
mov
cld
jle
dec
std
adc
addb
addr16
cmpsl
add
sbb
out
xor
push
sub
cmc
bound
pop
call
sub
scas
addr16
in
mov
cmp
mov
add
mov
push
mov
or
scas
push
cmp
fdivrs
in
or
cs
mov
mov
lods
xor
jo
pop
into
shrl
push
and
mov
hlt
pop
lods
add
push
mov
subl
loop
or
push
out
out
mov
jge
pop
test
subb
push
scas
insl
insl
xchg
sbb
pop
test
sbb
dec
call
sub
sbb
or
cwtl
push
dec
jp
inc
pop
das
cmc
pop
jg
mov
shrl
loop
sbb
sbb
cmp
cmc
inc
and
jne
data16
xor
jo
hlt
and
pop
mov
mov
mov
inc
push
repz
push
outsl
test
mov
mov
in
mov
and
mov
leave
add
mov
mov
jg
xor
leave
loopne
push
pop
xchg
add
js
mov
xor
imul
imul
inc
neg
mov
sbb
pop
add
add
add
cmp
sub
sbb
sub
mov
int3
xor
mov
call
sbb
inc
ss
sbb
leave
repnz
sub
xchg
xchg
insb
sub
mov
lret
ficoms
jbe
jge
clc
call
inc
add
pushf
cwtl
push
cmp
lods
ret
jne
sbb
mov
insl
xor
outsb
fstpt
aas
sbb
leave
dec
ds
fldl
cmc
jbe
push
mov
daa
ror
mov
dec
call
mov
ficoml
mov
movsl
xorb
roll
xchg
cwtl
xchg
inc
xor
mov
mov
add
es
xchg
fmul
mov
xchg
mov
push
dec
mov
ds
xor
outsl
aad
mov
or
lahf
aam
inc
push
roll
inc
jo
sub
xor
pop
not
jmp
xor
cs
sbb
lds
dec
ret
sbb
adc
dec
je
sub
loope
push
dec
pop
aad
popf
jp
leave
pop
jno
imul
jmp
in
es
xchg
loop
sub
sub
data16
mov
adc
jl
dec
add
xor
adc
lds
arpl
sub
mov
ds
push
mov
pop
mov
push
cmpsb
cld
mov
mov
je
jp
xchg
cmp
mov
push
pop
xchg
or
push
rcr
leave
cli
test
test
cmp
cwtl
cs
xchg
adc
shll
mov
js
andl
stos
push
adc
and
cmp
mul
xor
xchg
xor
xchg
mov
mov
jge
ljmp
daa
or
jge
sbb
dec
pop
cmp
sbb
push
cli
sub
test
rol
pop
cld
outsl
mov
jbe
dec
scas
dec
xchg
out
shlb
ret
sbb
mov
pop
sbb
pop
lods
push
lea
out
dec
push
mov
iret
jmp
sbb
sub
push
nop
mov
mov
loop
mov
enter
fxtract
mov
push
out
repnz
shll
adc
sbb
mov
iret
push
jno,pn
addr16
sti
jl
and
or
lods
lahf
flds
xor
pop
nop
fists
sub
xchg
aam
inc
loope
ljmp
mov
or
aam
jb
popf
outsb
ljmp
rol
gs
jnp
test
sub
into
out
pop
pusha
insl
and
sbb
sbb
inc
int
dec
inc
imul
mov
lock
aad
mov
stc
sbb
popa
cmp
lret
push
mov
xor
or
xchg
arpl
stc
jmp
int
push
xor
flds
adc
inc
imul
out
test
dec
fldt
adc
push
loop
imul
xchg
inc
mov
push
sbb
xorb
in
mov
jp
adc
fdivrl
test
push
pop
sub
sbb
shll
cmpsb
xor
sbb
ss
aam
jnp
cmp
fcomps
lcall
cld
jmp
je
cmp
pop
jo
mov
andb
rorb
test
dec
push
mov
add
xor
add
popa
in
inc
push
xor
adc
jne
xchg
loop
sti
jne
popa
push
jae
loope
fwait
ljmp
sub
stos
push
cmp
jl
loopne
pop
test
jns
sti
lcall
sub
loopne
push
into
adc
xchg
das
mov
add
into
dec
pop
sbb
pop
push
dec
jns
adc
lcall
int
aad
icebp
jecxz
sti
jae
dec
push
cmp
icebp
insb
xor
js
mov
inc
or
lret
jb
aam
and
loop
xor
and
int
push
ja
push
sub
push
xchg
dec
mov
and
insb
or
lret
or
dec
mov
xor
rcl
fs
mov
cmc
mov
loope
in
insb
loop
sbb
cmp
incl
pop
add
mov
jg
xchg
and
push
xor
daa
push
adc
jnp
je
sub
xor
xor
orl
clc
adc
sbb
cmpsb
add
fcomps
mulb
test
xor
add
xor
insb
sbb
retw
push
gs
inc
or
mov
pop
imul
iret
aas
orl
out
xor
cld
push
lods
lcall
xchg
data16
js
pop
sbb
xor
dec
mov
mov
xor
aam
push
xchg
and
daa
test
and
sbb
pushf
push
cmpsl
addr16
cltd
int
mov
negb
xchg
pop
das
sbb
mov
je
xchg
mov
mov
insb
in
jp
mov
sarb
movsl
rorl
add
lcall
aam
ss
cld
adc
lahf
mov
fldl
xchg
and
ja,pt
outsl
and
add
jg
jmp
fimull
adc
in
cmc
mov
arpl
cmc
clc
sbbl
xor
repz
cmpsb
dec
not
mov
inc
inc
daa
cmp
mov
and
jb
or
lods
repz
movl
dec
fs
push
sbb
jl
cmp
or
mov
test
insb
pop
cmp
cs
mov
push
pop
jmp
gs
js
push
test
test
xchg
notl
ss
inc
push
sub
lods
daa
add
cltd
ja
and
cli
ss
adc
xor
dec
js
dec
jo
mov
sbb
lods
int3
or
or
adc
mov
and
insb
repnz
nop
mov
jno
loopne
stos
push
adcl
in
and
mov
add
imulb
movsl
ret
fs
popa
test
int3
adc
adc
sbb
xchg
lret
rclb
mov
sbb
sarb
or
mov
pusha
into
ss
cmp
mov
imulb
xchg
cs
in
pop
jp
pop
sbbb
scas
in
andb
or
lahf
dec
data16
scas
insb
sub
or
ss
in
inc
mov
fmul
in
xor
jnp
add
cmp
jecxz
hlt
stos
dec
sbb
xchg
push
ret
popa
nop
sti
popf
cs
xor
lds
mov
or
push
faddl
add
mov
sub
cmpsb
aam
gs
lods
push
push
pop
jl
loopne
sbb
addb
fldl
mov
xor
sub
or
mov
adc
inc
into
test
loope
mov
jno
push
mov
ret
adc
ret
add
dec
shlb
sub
add
sub
jge
outsb
ss
xor
les
ljmp
dec
call
add
mov
cli
pusha
mov
leave
inc
cs
lea
mov
stos
jp
les
jnp
cs
in
push
jp
int
jne
jns
cmp
add
fnstenv
jg
add
lahf
cmp
or
mov
mov
aas
jne
ja
cmp
mov
pop
rolb
mov
sub
out
rep
int
add
leave
je
add
lods
inc
and
xchg
rclb
sub
and
sub
dec
inc
rcll
pushf
push
pop
lea
mov
pop
push
xchg
pushf
jecxz
sahf
or
xchg
sbb
inc
lods
notb
clc
in
popf
xchg
bound
add
imul
mov
popa
and
jne
data16
cli
in
sbb
and
mov
in
and
pop
aas
in
mov
jg
lods
into
fiaddl
lds
pop
cmp
jg
rcl
sbb
push
and
push
xor
cld
xchg
mov
mulb
dec
xchg
xor
stos
and
in
lahf
enter
dec
scas
insl
add
ljmp
dec
push
push
mov
arpl
or
adc
mov
lahf
aam
je
nop
dec
test
and
mov
xchg
add
nop
aaa
lret
jmp
fsubrs
or
mov
mov
add
movsl
cmp
test
pusha
jno
jno
ss
fnstcw
jp
push
sub
in
pop
push
std
and
out
add
and
lods
and
cmp
popf
aad
xchg
sbb
pop
sub
mov
mov
xchg
imul
inc
cmp
lds
adc
in
cwtl
or
imul
mov
xchg
sti
ss
or
mov
lahf
mov
mov
push
mov
loope
pop
mov
lcall
and
jae
fistl
push
xor
into
lods
rcrl
pushf
mov
data16
ja
dec
sbb
aad
or
insb
add
mov
push
jg
rcl
cltd
lea
or
xchg
shrb
and
ret
mov
sahf
sarl
int
insl
daa
sub
femms
test
mov
cli
mov
lods
jl
fcmovnbe
daa
lea
vpavgw
addr16
lods
push
push
dec
orl
push
xchg
sbbb
push
jp
dec
and
bound
push
out
and
mov
push
mov
out
mov
dec
sahf
mov
cmp
and
and
mov
push
mov
and
inc
ret
call
mov
add
mov
jne
inc
xlat
subl
mov
mov
jbe
inc
pop
push
ror
fistl
dec
xchg
add
popa
xor
xchg
addb
mov
imul
mov
push
loope
loop
xor
mov
aaa
push
imul
sbb
xlat
inc
jge
imul
loop
cmpl
add
sub
rcl
imul
xor
inc
cmp
xlat
shl
dec
add
mov
jae
cmp
jmp
push
je
jp
xlat
sti
icebp
imul
or
clc
inc
jns
aas
sti
test
mov
stos
jae
ret
cwtl
jnp
jb
jp
mov
mov
mov
fs
je
test
and
push
insb
stc
adc
cmpsb
jle
enter
fs
or
test
repz
test
jno
and
test
jp
sbbl
and
int
and
inc
jo
stos
fcom
pop
jge
aaa
sbb
pop
outsl
push
or
daa
lahf
dec
push
ja
data16
lret
jne
inc
mov
pop
outsb
pop
imul
popf
cmpl
jg
xor
mov
xor
loope
cmc
push
adc
inc
sti
out
inc
insl
sbb
stc
inc
jecxz
fwait
pop
mov
xchg
push
loope
xor
in
daa
pop
and
or
dec
add
iret
in
xlat
mov
les
test
into
dec
push
and
loop
mov
mov
add
push
movsb
adc
mov
jge
add
inc
dec
aaa
mov
or
cmp
or
push
mov
push
out
mov
out
mov
scas
movups
jp
cwtl
push
ja
std
mov
sub
add
push
mov
fstl
xor
adc
jge
es
mov
outsb
mov
fists
dec
test
sub
ret
ficoml
sbb
test
dec
or
dec
test
iretw
adc
sub
lret
add
dec
ds
xchg
pop
jbe
out
iret
sub
dec
mov
clc
aaa
call
inc
cmp
icebp
fldt
mov
push
call
add
fwait
movsl
fadds
jbe
outsl
pop
std
mov
fisubl
pop
mov
dec
xchg
push
fadds
aaa
adc
out
mov
imul
and
aas
pop
ja
mov
out
mov
jl
jmp
sbb
lea
xchg
inc
xchg
repnz
addr16
cld
mov
push
test
sub
jmp
xchg
sub
add
cmp
cld
fildl
pop
shrb
cld
inc
push
sub
int3
data16
pushf
insl
cmp
jbe
vaddsubps
push
negb
mov
push
hlt
out
push
sbb
pop
sub
loopne
fdivrl
sbb
clc
xor
xchg
bound
insb
jno
cmp
fadds
mov
cmp
dec
frstor
sbb
stos
aam
test
inc
inc
repnz
aaa
push
mov
stc
push
jo
pop
pop
cmc
clc
or
cmc
or
xchg
xchg
ffreep
out
mov
scas
lds
pop
xchg
mov
jne
movsl
loop
and
inc
fldenv
fisubrl
pusha
push
outsl
out
cmp
mov
jb
inc
outsl
ss
out
mov
lock
xchg
push
push
nop
fs
mov
shr
cwtl
movsb
mul
xor
sub
xor
mov
es
jmp
out
insb
aas
jmp
jo
rcr
lret
jne
cmp
xor
pusha
jp
jp
add
dec
adc
or
pop
push
add
jg
fnstcw
lock
test
adc
jnp
hlt
lods
inc
rorb
jge
jge
and
movb
in
sub
out
or
mov
fildl
pushf
jae
push
mov
call
bound
jmp
lcall
push
subb
pop
xchg
in
ss
ss
xchg
mov
adc
cwtl
int3
insl
adc
cmpl
sti
stc
push
sahf
jle
das
jl
out
sbbb
mov
or
dec
mov
inc
es
push
imulb
jecxz
cmp
in
jg
out
mov
int3
mov
sbb
dec
in
fs
and
inc
mov
pop
ds
add
and
sub
mov
push
mov
ja
shlb
or
jb
add
aad
add
data16
ret
sbb
mov
out
mov
mov
fildll
push
inc
jns
adc
js
arpl
das
or
pop
leave
ljmp
or
mov
inc
inc
jge
inc
xchg
ljmp
xlat
cltd
jo
int3
aaa
mov
adc
sti
test
cmp
in
sbb
in
jb
stos
jl
mov
mov
scas
lds
mov
pop
imul
ds
inc
inc
bound
stos
mov
add
mov
in
fs
jmp
test
or
das
and
movsl
mov
nop
inc
push
xor
ss
xor
out
push
cld
cmp
mov
dec
rcl
inc
mov
sar
jp
dec
xchg
icebp
sub
sbb
shlb
push
xchg
inc
insb
sbb
jp
scas
and
out
cmp
jae
loopne
stc
mov
sbb
es
mov
jbe
stos
xchg
xor
out
loope
pop
out
repnz
nop
sub
pop
sbb
jp
in
jl
push
imul
dec
stos
stos
fstl
pop
aad
inc
push
jns
scas
jmp
fisubs
arpl
mov
jg
icebp
or
in
xor
pop
mov
clc
jle
stos
xor
inc
xchg
lock
mov
sbb
mov
dec
sub
cltd
loopne
std
push
pop
xor
test
and
lret
mov
jmp
mov
mov
aas
dec
mov
dec
fcmovb
dec
js
dec
jecxz
and
cmp
mov
in
rcll
test
or
jne
inc
leave
xor
mov
rcrl
aaa
mov
mov
sub
adc
pop
iret
and
nop
sub
push
addr16
mov
cmp
cmp
mov
lret
fnstcw
mov
and
cmpsb
pop
xor
push
push
mov
out
lea
insl
arpl
rorl
scas
fcomps
pop
popa
sbb
sti
sub
aad
repz
fwait
xchg
dec
test
rcll
dec
adc
jmp
cmp
mov
adc
lea
mov
cmp
xchg
sbb
std
in
imul
sbb
xchg
mov
ror
xlat
fs
xchg
insl
jmp
sahf
fnstenv
mov
ficomps
mov
pop
sub
in
repnz
jbe
test
push
and
cli
popa
and
xor
out
jge
push
setg
add
clc
push
mov
in
mov
insb
cltd
imul
insl
xor
adc
jbe
repnz
push
mov
mov
and
test
lret
lret
lods
ja
out
mov
es
cmpsb
in
cltd
mov
inc
mov
idiv
jns
jb
mov
ljmp
jp
aam
daa
xchg
mov
dec
cs
lcall
js
pop
pop
imul
and
movsl
xor
test
sub
scas
cmc
ret
push
jnp
xchg
mov
inc
xor
cs
pop
cmpsl
addr16
dec
sub
movb
mov
mov
scas
mov
shr
push
imul
and
sti
out
xor
mov
movsl
push
gs
sbb
mov
sbb
es
sbb
sti
or
mov
add
test
jle
xlat
int
push
stos
arpl
insb
sarb
jb
jb
fsts
xchg
scas
jmp
jmp
outsl
out
cmp
push
xchg
fldt
shl
fistps
xchg
imul
out
cmc
pop
std
lods
dec
es
dec
fsub
pop
jg
inc
push
rcll
adc
enter
mov
adc
arpl
adcl
dec
cmpsb
mov
mov
lock
fldl
repnz
xlat
jae
mul
dec
je
push
lods
cmp
inc
in
add
add
loope
sahf
sub
cli
pusha
xchg
lds
fbld
push
mov
bound
jle
jbe
inc
dec
imul
loop
push
mov
sbb
pop
movsl
push
inc
das
fcmovbe
jo
mov
xor
or
mov
int3
or
les
pop
mov
dec
loope
and
mov
mov
xchg
sub
das
add
pop
or
int3
int
push
in
jbe
ds
rorl
in
push
out
out
mov
bound
mov
subl
inc
jne
lret
out
xor
das
lock
ljmp
or
out
jmp
jp
mov
rcr
test
sbb
jmp
lret
sub
std
pop
mov
xor
push
flds
mov
jne
add
pop
xchg
xor
call
nop
nop
push
or
test
jp
mov
popa
mov
mov
inc
out
sbb
sub
add
aas
loop
data16
lds
push
mov
jno
mov
fcmovbe
and
inc
push
and
lods
and
test
cmpl
sbbb
xor
fcmovu
mov
scas
dec
mov
ljmp
popf
xor
test
ret
inc
adc
mov
fs
jg
pop
fcoml
xchg
push
mov
int
popf
mov
in
movsl
sbb
adc
push
dec
gs
repz
int
pop
sbb
jecxz
adc
jnp
lea
pop
fimull
cwtl
and
mov
into
or
mov
and
xor
lds
inc
jo
cmp
es
outsb
xchg
sbb
pop
das
inc
roll
aas
lret
fidivl
xor
cmp
mov
lds
inc
dec
stos
inc
iret
xor
mov
or
or
xchg
ljmp
sarb
dec
mulb
lods
aaa
ljmp
data16
aam
adc
scas
jns
arpl
jae
xlat
xorb
mov
leave
adc
loop
adc
fs
jecxz
jbe
inc
fsts
sbb
add
ja
xor
or
pushf
or
push
mov
imul
sbb
stos
popa
and
call
mov
sbb
pushf
and
in
ja
subl
inc
mov
imul
cmpsb
test
mov
adc
dec
xchg
mov
push
pop
sti
stos
pop
aas
sbb
xor
xchg
les
into
jmp
movsl
adc
lret
cltd
mov
daa
lret
xchg
inc
inc
xor
dec
fidivrl
push
pop
inc
mov
add
cmp
pop
les
subl
and
and
rclb
xchg
mov
ret
push
dec
mov
mov
les
inc
cmpsb
inc
icebp
push
push
push
or
xchg
dec
inc
xchg
mov
xchg
pop
cmpsl
hlt
sbb
setge
or
stos
jmp
gs
ss
dec
and
push
mov
inc
mov
imul
in
xor
out
sbb
fwait
pop
jp
hlt
push
sbb
lahf
je
pop
mov
cmp
inc
push
pop
dec
movsl
icebp
cmp
daa
xorb
jmp
ja
push
pop
sbb
mov
dec
pop
cwtl
and
cmp
movsl
mov
aas
push
add
xchg
sbb
mov
hlt
or
xchg
das
add
mov
add
cmpsb
scas
pop
roll
scas
adc
and
jmp
sbb
enter
movnti
loop
movsb
stc
pop
xor
sub
stc
jno
cld
xor
or
popa
enter
and
scas
xlat
pop
pop
js
ja
scas
mov
test
pusha
adc
pop
or
movsb
fmull
lret
cmpsb
inc
in
es
popf
jecxz
adc
ret
repnz
test
std
test
ja,pn
xor
inc
cmp
mov
imul
ror
cmc
mov
jno
ja
dec
cmp
jle
xchg
mov
fs
lret
lcall
mov
cmpl
mov
les
dec
jae
push
mov
incb
pop
jge
xlat
das
cmpl
mov
mov
mov
aam
push
cmp
scas
mov
mov
out
lret
call
movsl
mov
cmpl
mov
mov
pop
cmpsb
mov
test
or
notb
ret
or
xchg
push
mov
addb
mov
jg
push
and
adc
and
lahf
test
xchg
cmp
sub
sbb
push
add
cmc
int
mov
or
push
aas
mov
inc
push
in
ret
jno
add
lcall
and
sti
cmp
push
add
xor
insb
push
enter
fwait
jnp
mov
iret
cmc
out
jo
je
nop
lods
or
mov
cmpsl
jo
sub
sub
icebp
pop
xchg
push
add
xchg
sbb
xchg
add
insl
or
cmp
push
adc
pop
or
je
int3
jmp
ret
or
xchg
rcrb
movsb
dec
les
push
rolb
jo
movsl
jl
cli
rcr
xor
jge
orb
aas
add
add
popf
adc
xchg
or
inc
cwtl
in
pop
cmpsl
pop
xor
lcall
fdivrl
mov
dec
lret
inc
aad
jbe
or
daa
int3
push
sub
xor
sub
sbb
hlt
mov
jp
pop
xchg
mov
fnsave
imul
fsubp
jecxz
test
add
add
imul
mov
cmpl
push
lret
out
sub
sub
mov
or
xchg
fidivrl
fidivs
mull
xchg
fcomps
lret
jnp
rcll
mov
mov
xor
inc
push
test
add
xchg
iret
test
mov
xor
cmc
inc
inc
lods
cs
popf
hlt
inc
push
sbbb
dec
ja
mov
pop
orl
xor
fildll
xor
test
faddp
or
in
xchg
adc
adc
jg
stos
pop
filds
adc
shlb
ljmp
pop
inc
enter
aam
push
cmpl
dec
and
dec
push
insb
out
mov
stos
fsubrs
pop
jne
cmp
push
aam
test
loope
rcll
add
xor
xor
dec
jmp
xor
cltd
and
jg
dec
call
sbb
mov
sub
pop
bound
adc
mov
push
shlb
inc
cmp
cs
xor
notl
cmpsl
jg
fdivp
inc
fbld
cmp
inc
cltd
push
call
sub
jb
rcll
stos
enter
loop
add
pop
pushl
and
lret
pop
sti
add
jb
fwait
sbb
xchg
inc
sub
pop
outsb
adc
stc
ja
push
jle
push
jg
mov
push
jne
movsb
xchg
jle
loopne
divb
bound
inc
jge
mov
mov
cs
xchg
dec
into
cld
iret
sbb
rorl
mov
test
mov
jns
repnz
addl
test
jle
sbb
out
fistl
sub
sub
or
sub
pop
outsl
jbe
or
subl
pop
lcall
int3
mov
inc
out
mov
mov
add
inc
xchg
dec
mov
aad
pusha
sub
and
popf
pop
pop
mov
add
xor
cs
in
fs
pop
std
xor
xchg
sub
cmpsl
mov
testb
jg
rcll
jne
test
in
xchg
dec
rcl
add
cmc
and
push
pop
mov
add
aas
cmc
pop
pop
jl
std
outsb
jnp
or
aas
or
cmpb
mov
int
sbb
repnz
fs
mov
cmovae
pushf
bound
mov
jmp
adc
inc
movsb
and
jg
adc
push
andb
and
nop
mov
cmpb
or
mov
fwait
jnp
sub
sub
xor
and
cmpsl
clc
mov
orb
sti
mov
pop
pop
lock
ret
ffree
clc
dec
pop
je
into
xor
bound
pop
mov
push
lods
lods
subl
fnsave
mull
and
pop
stos
scas
pop
sbb
mov
push
jmp
mov
ds
ja
aaa
inc
sub
adc
repnz
movsb
mov
pusha
in
je
sbb
inc
inc
mov
mov
pushf
jge
popf
punpckldq
rolb
mov
sub
loop
inc
or
aaa
mov
xchg
mov
pop
adc
or
sbb
je
and
fwait
inc
into
into
sbb
xchg
pop
hlt
incl
push
faddl
mov
cmp
std
jg
adc
aad
cltd
sbb
mov
push
popf
bound
fiadds
xchg
cmp
push
cmp
dec
data16
push
sub
pop
add
stos
inc
sbb
inc
rcr
lahf
ds
movsb
push
test
lods
jae
pop
daa
sub
lods
lods
sub
std
xchg
sbb
dec
fistpll
xor
mov
mull
cli
ja
cmp
push
cltd
xchg
test
popf
and
fldcw
pop
orb
aad
add
fstl
sti
and
ja
sbb
xchg
cmp
mov
adc
or
mov
scas
xchg
jae
rcrb
aaa
mov
push
hlt
inc
bound
imul
adc
outsl
cli
les
fmull
pop
orb
xlat
adc
stc
push
and
cmp
stos
loope
out
sub
sbb
push
sbb
xchg
inc
mov
inc
xchg
pop
push
imul
lock
inc
loope
fs
imul
mov
icebp
movsb
clc
pop
adc
je
and
jo
mov
movsb
sub
test
arpl
bound
dec
sti
fdivrp
mov
push
adc
mov
out
xor
cmp
test
add
and
mov
dec
xchg
pop
lock
mov
enter
mov
or
sub
sub
lea
mov
sti
repz
adc
mov
mov
pop
cmp
sbb
xor
pop
in
jmp
lods
in
orl
jae
adc
xor
aas
xchg
cmp
lods
aaa
cwtl
popf
cli
in
pop
imul
or
push
and
sub
adc
leave
pop
mov
inc
shl
add
push
test
or
shl
jns
sub
mov
rcll
sbb
jge
test
cmpsl
lock
lods
push
push
mov
js
pop
in
mov
sti
mov
movsl
fs
loopne
xor
fcmovb
xor
add
push
pop
and
pushl
insl
mov
sub
xchg
nop
pop
loop
jle
and
and
lea
or
clc
movsl
das
shrl
sti
mov
mov
sbb
mov
add
push
pushl
ss
cmp
sub
cmc
dec
inc
jnp
or
sbb
rorb
aas
outsb
sub
xor
jge
push
fdivs
outsb
subl
push
mov
cwtl
mov
jbe
adc
or
cmpsb
imul
test
mov
add
xor
xchg
push
sub
xchg
dec
jb
and
sahf
test
fists
sbb
push
cmc
inc
mov
jl
fwait
gs
imul
xchg
into
sbb
loope
dec
mov
nop
test
add
xor
es
insb
xor
push
mov
mov
aad
sub
bound
adc
adc
shll
sub
sbb
stos
mov
in
jl
dec
inc
movsb
stos
push
sbb
inc
movsb
inc
sub
push
sbb
sbb
das
and
out
mov
sub
xchg
adc
aam
adc
push
orl
sub
sbb
test
pop
pop
xchg
sti
cli
jmp
in
outsb
stos
aam
loopne
mov
push
std
add
push
in
sub
xor
loope
lods
sti
jo
das
aaa
pop
negl
andl
hlt
sbb
movsb
andb
pop
xor
imul
xchg
lods
xchg
jmp
cmp
lahf
mov
jg
mov
jmp
pop
pop
mov
dec
sbb
dec
ljmp
mov
fdiv
push
and
mov
adc
fstpl
cmp
cwtl
dec
and
dec
sti
mov
aas
ret
and
lea
and
in
loopne
pop
shlb
or
dec
in
daa
inc
push
daa
push
or
jae
xchg
fs
rcrl
fwait
xchg
push
lret
mov
mov
sbb
push
push
loop
mov
add
popf
sub
inc
mov
sahf
inc
enter
aas
sbb
xchg
cs
cmpsl
pop
in
popa
inc
fldenv
xchg
popa
shll
cltd
add
mov
xor
insl
dec
jmp
jecxz
lock
jecxz
xor
cmp
xchg
push
mov
lahf
iret
rclb
js
das
add
in
xchg
sub
cmp
mov
cltd
xchg
aam
fwait
loope
cmp
std
popf
xchg
ljmp
add
cmpsl
in
inc
inc
adc
xorb
jecxz
dec
sub
in
cwtl
xchg
ds
lea
js
lods
call
sub
push
stos
and
dec
fs
pop
mov
fidivs
in
xchg
fidivs
jns
or
xchg
inc
nop
push
ficompl
insb
mov
aaa
loop
sub
in
sub
lock
imul
fs
pop
add
call
test
lret
or
push
sbb
push
or
mov
inc
mov
xchg
pop
xchg
cmpsb
mov
fsubrl
cmpsl
orb
sub
fwait
xchg
push
lret
test
mov
cld
jno
inc
fwait
cld
test
ret
int
xchg
dec
sbb
mov
lret
and
test
jge
fs
jne
xor
dec
pop
bsf
call
roll
inc
xor
mov
pop
add
fimull
pop
inc
aad
outsl
adc
jmp
call
xor
jmp
pusha
imul
jne
lea
ja
sbb
or
mov
sub
adc
or
xor
pop
xchg
or
adcb
inc
jp
aaa
sarl
jae
test
adc
into
in
arpl
cmc
loope
push
add
push
xchg
int3
dec
aas
jne
lods
in
jno
mov
out
push
sahf
test
jno
leave
insl
sbb
clc
rcrl
int3
pop
mov
push
mov
sub
insl
dec
movsl
cmp
je
or
fabs
mov
aas
inc
leave
sarl
es
nop
jmp
push
xchg
mov
aas
sub
xor
xor
popa
sbb
scas
mov
inc
in
push
stc
add
dec
or
imul
movsl
fwait
cmp
in
rol
sub
bound
cmpsl
test
jne
xor
mov
adc
fs
push
jne
outsb
lds
mov
mov
outsl
cmp
in
clc
scas
cmp
lahf
mov
sbb
and
pop
sbb
movsb
leave
dec
aas
xchg
sub
cmovno
jecxz
and
sbb
pop
dec
mov
ds
insl
sti
leave
sub
mov
test
or
and
add
stc
das
sbb
arpl
xchg
sub
insb
sbb
or
sub
ljmp
jns
jo
aaa
cmp
xchg
cli
imul
mov
push
push
popf
inc
popa
repz
jl
mov
dec
movsl
sub
mov
mov
jns
das
test
test
ljmp
and
aaa
fs
ret
les
mov
push
mov
fcompl
jge
xor
and
movsl
or
dec
orb
mov
fstpl
addr16
imul
sub
push
js
lods
out
or
push
sbb
jae
or
ret
das
mov
sti
dec
dec
lea
je
cmp
inc
xchg
xor
inc
lods
mov
mov
gs
mov
add
xchg
loope
jmp
xlat
or
mov
jg
imul
data16
mul
fsubr
dec
mov
and
sbb
fmul
mov
or
cmpsb
outsb
or
pop
cltd
sahf
call
ja
cmp
lret
pop
rcrl
inc
add
cmp
or
xor
dec
shll
out
mov
jnp
adc
dec
sub
sub
lea
lods
aas
stc
rcrl
test
adc
inc
mov
lret
mov
leave
add
sub
jo
push
mov
push
and
mov
ds
mov
mov
and
nop
jbe
leave
dec
xchg
push
sahf
adc
mov
addr16
dec
je
or
mov
icebp
popa
cmp
arpl
jns
ja
or
aaa
pop
and
faddl
pmaddwd
js
aas
pop
mov
jle
push
mov
push
ja
lahf
aaa
cmp
push
xchg
sbbb
and
into
arpl
sarl
fadds
lock
sub
dec
jbe
sahf
sbb
dec
xor
aaa
add
iret
lods
mov
aas
movsl
mov
scas
repnz
mov
mov
les
aaa
xchg
je
xor
sar
ja
cmp
xor
cmp
in
mov
cs
xchg
mov
imul
add
aas
mov
fcoms
xor
mov
cmpsl
mov
push
mov
out
imul
rep
mov
mov
arpl
ja
xor
jno
dec
lods
ret
lds
sbbb
pop
scas
movntq
out
mov
int
mov
movsl
inc
mov
pop
push
hlt
fildll
xor
mov
cmp
xor
daa
test
add
in
imul
sub
pop
mov
test
jae
cld
push
fsubs
negl
lods
fdivs
adc
dec
hlt
aam
mov
mov
sub
iret
xchg
lcall
jns
es
insl
cli
xchg
cltd
mov
cmp
aas
stc
cltd
cmc
and
ss
pop
sbb
add
popa
inc
popa
xor
cmp
dec
mov
ljmp
mov
inc
adc
popa
outsb
imul
mov
stos
mov
pop
cmp
push
outsb
sub
stos
hlt
jmp
sahf
push
int3
push
lock
pop
dec
fxch
cmpb
es
xchg
nop
mov
dec
pushf
cmp
add
iret
push
lahf
mov
mov
mov
lahf
pusha
xchg
mov
aas
jno
jl
xor
sbb
imull
aas
outsl
mov
fidivs
repnz
jmp
mov
dec
xorb
loopne
adc
dec
mov
das
dec
push
and
and
insl
arpl
cld
in
out
fwait
or
out
pop
pop
ret
or
pop
dec
push
xchg
pop
shr
cmc
fldcw
mov
cli
inc
push
hlt
inc
and
push
mov
jle
pop
addr16
ss
popa
lds
adc
insl
or
cmpsb
xchg
dec
jb
divb
mov
or
test
cmc
jno
sbb
iret
popf
sarl
daa
xchg
imul
ret
pop
ljmp
push
dec
iret
inc
pop
mov
sbbb
inc
les
out
inc
mov
jne
into
out
faddl
lds
inc
clc
scas
popa
pop
mull
pop
ret
xchg
dec
sbb
pop
enter
add
jl
loop
pushf
in
loop
mov
aam
pop
mov
push
jecxz
push
or
xchg
test
xchg
aad
jns
popf
and
mov
and
outsl
add
xchg
sub
gs
push
rorl
mov
outsb
and
repz
cmpsb
repnz
andb
cmc
test
mov
dec
shrb
pop
xchg
jae
into
gs
scas
jmp
mov
icebp
cmc
decb
fsubr
pop
mov
xor
mov
cli
jp
ret
int
std
mov
xchg
cmpl
popf
fdivrp
popf
nop
loope
dec
es
fdivr
adc
add
lcall
sahf
movsb
mov
in
fcompl
ds
adc
call
test
adc
push
dec
jp
mov
das
mov
jp
xor
call
cmp
nop
shlb
imul
mov
push
push
push
cmp
arpl
and
loopne
lods
int3
aaa
ret
rolb
jo
push
in
into
pop
mov
mov
mov
ficoms
test
mov
xchg
or
idiv
sbb
dec
sbb
adc
lret
out
fidivs
cmp
xchg
pop
into
in
rcrl
mov
movsb
std
stc
mov
push
cli
les
cmpsb
enter
or
mov
ja
test
in
push
repz
rcrl
pop
imul
ja
pop
rol
mov
push
das
push
scas
jle
ljmp
push
insl
inc
jecxz
popa
xchg
popf
push
cmp
lcall
in
adc
sbb
sbb
or
sbb
cmp
add
push
pop
ja
es
sub
andb
rcl
push
mov
roll
sbb
adc
in
and
testb
mov
lahf
fwait
stos
imul
and
pop
repz
cmpsl
mov
or
aad
push
push
arpl
sub
push
add
mov
rorl
mov
roll
adc
push
mov
loope
inc
xchg
mov
test
push
mov
add
iret
pop
mov
pop
and
cwtl
js
mov
lret
jge
jmp
adcb
aas
out
push
aad
gs
adc
cli
xchg
or
aad
adc
pop
in
inc
jp
cli
dec
ss
xchg
leave
dec
rep
imul
dec
out
adc
dec
in
inc
adc
inc
mov
idiv
mov
add
jecxz
adc
cmpsl
rcr
mov
lds
in
add
int
enter
xchg
imul
leave
imulb
mov
xchg
xlat
jnp
fdivrs
mov
pop
iret
in
loop
jl
cltd
stos
rclb
jne
lret
and
adc
mov
ljmp
pop
in
movsl
lret
cld
jmp
jo
jecxz
divb
mov
add
loop
mov
leave
shrb
stos
add
ficoms
push
pop
bnd
xor
cmp
aad
bound
mov
mov
cld
cmpl
sbb
scas
inc
mov
pop
sti
sub
push
in
pushf
jmp
jp
lds
lahf
repz
aam
loop
fwait
xchg
adc
cmp
cmc
scas
mov
adc
cs
loopne
fiaddl
jle
mov
add
mov
cli
enter
subl
fsubrs
jbe,pt
out
xchg
mov
ret
in
iret
fsts
inc
bound
xor
gs
pushf
sahf
pop
into
fiaddl
stc
outsb
ret
sbbb
xchg
jnp
mov
jo
pop
ss
and
mov
mov
test
xchg
test
jno
loope,pn
mov
or
out
je
cmp
xchg
xor
xor
lahf
fildll
in
shl
stos
stc
out
mov
mov
lret
cmp
ret
cli
adc
stos
jl
or
cmc
xchg
lea
jae
cmp
bound
ljmp
dec
xchg
test
xor
adc
cmp
idivb
in
mov
add
inc
mov
int
jmp
pop
sbb
add
test
test
and
mov
mov
flds
and
outsb
outsb
popf
out
in
popf
mov
inc
xor
popf
int3
fists
mov
xor
jle
jns
insl
in
push
dec
pusha
adc
inc
and
repz
cmpsb
mov
xchg
cs
insl
fisubs
push
mov
mull
xchg
mov
xchg
xchg
femms
outsl
imul
lea
out
add
add
adc
mov
xchg
dec
push
adc
aam
ss
add
mov
or
out
das
sbb
mov
nop
sbb
pop
hlt
pop
into
mov
fisubs
int
cvttps2pi
jp
add
rol
mov
jbe
pushf
jmp
je
dec
outsl
push
mov
pop
mov
or
dec
fcomp
jl
sub
xor
mov
push
andps
popa
mov
push
arpl
cmc
adc
out
pop
mov
inc
fwait
sbbl
sbb
mov
orb
aad
sub
jle
sbb
xor
jmp
scas
jno
push
push
insl
mov
int3
cmpsl
dec
fisttps
mov
push
sti
sbb
test
lahf
jns
loop
adc
jp
adc
adc
sti
push
push
roll
ret
into
lods
mov
imul
loopne
stc
mov
pop
dec
mov
add
add
loop
dec
push
ret
mov
bound
adc
cwtl
aad
xchg
fnstenv
lock
or
jecxz
mov
into
sub
popa
sbb
sbb
sub
stc
bnd
add
pushf
adc
lock
or
mov
cmpsl
push
xor
dec
inc
popa
sbb
fwait
lods
mov
jno
push
lahf
push
push
push
mov
jne
inc
push
dec
ljmp
push
mov
pop
lret
inc
dec
test
jno
stc
and
push
xchg
rcr
mov
pop
mov
rcr
lahf
jnp
scas
cld
loop
das
xchg
imul
outsb
repz
jb
pop
and
outsb
and
pop
into
pop
xor
xor
je
out
add
pop
ds
aas
into
or
outsb
adc
pop
jo
push
mulb
jns
mov
xchg
ds
xor
divl
inc
fwait
dec
mov
adc
jle
iret
or
addr16
int
pop
dec
cmpsl
mov
and
pop
add
movsl
stos
pop
jmp
sub
into
rol
cmpl
mov
jge
popa
adc
jo
test
mov
into
bound
inc
jns
out
icebp
lods
lret
ret
gs
pop
inc
inc
mov
dec
cmp
jb
dec
mov
or
lds
das
xchg
shll
sub
and
loopne
mov
in
cltd
test
pop
pop
leave
sub
add
enter
test
jle
mov
inc
or
imul
xchg
push
popa
jecxz
sbb
in
hlt
fdivrs
faddp
mov
ret
orb
aaa
xchg
jnp
adc
loop
jo
add
add
mov
push
xchg
movsb
daa
sub
in
mov
push
stc
int3
adc
inc
jne
xchg
jo
shll
aaa
pop
pop
out
mov
enter
pop
pusha
push
sub
xchg
adc
movsb
cmp
jno
pop
scas
add
pop
aas
or
popa
jno
xchg
pop
push
pop
hlt
jno
xorb
xorb
pop
pop
enter
jae
mov
mov
inc
int3
shll
lahf
or
pop
and
iret
testl
sbb
sub
call
mov
adc
not
test
adc
pop
xchg
jle
pushl
jp
stc
sbb
rcll
lahf
cmp
xchg
or
loop
mov
dec
mov
xchg
jb
xchg
daa
ret
mov
jnp
sbb
cwtl
dec
or
jne
jns
fadds
mov
pusha
fidivrs
cltd
lret
sub
mov
xchg
fsubrs
pop
stc
fs
dec
fsubs
xchg
sub
push
mov
dec
cmp
stos
shll
fsub
mov
fwait
sbb
movsl
pop
gs
movsl
test
addr16
xchg
js
scas
and
lret
pop
mov
adc
sbb
dec
es
push
add
cwtl
sub
or
cmp
push
jae
cmpsl
cmp
ficoml
fsubs
aas
jg
mov
stos
and
jle
movb
call
lcall
pushf
lcall
cli
lods
call
adc
test
fldcw
gs
xchg
jne
xor
and
pop
sarb
pop
pop
adc
pusha
mov
not
dec
xchg
lret
enter
jbe
loop
divb
mov
jge
add
jnp
daa
repz
ds
jge
int3
and
mov
clc
out
fidivrl
out
lret
mov
dec
jbe
sub
push
aaa
inc
clc
adc
cmp
pop
add
xor
add
push
push
xor
clc
and
ds
fcoms
jns
xchg
out
dec
push
cmp
out
and
cltd
inc
into
ss
xor
lock
imul
or
mov
insb
call
xchg
push
and
hlt
and
cmp
add
sbb
daa
inc
mov
xchg
sub
cmpb
inc
ds
pusha
shr
pushf
push
xchg
push
mov
cli
fidivs
aas
enter
lea
mov
popf
dec
fwait
sub
adc
adc
or
ds
mov
rorl
mov
pop
std
jnp
cmc
cli
add
or
jnp
push
repz
xor
or
bound
stc
cs
cli
or
sub
hlt
pop
adc
xchg
popf
or
mov
test
enter
inc
pop
mov
pop
cs
test
and
inc
ret
pop
mov
das
and
mov
orb
lock
xorb
sub
push
xchg
add
xor
js
cmp
lcall
adcb
xor
lods
js
xchg
dec
xlat
xor
add
fbld
jl
adc
out
fiaddl
mov
xor
test
fisubl
sub
insl
addr16
iret
inc
fs
ficoms
push
mov
xor
or
mov
mov
insl
push
adc
jg
and
xchg
dec
fstpl
mov
pop
ljmp
mov
inc
sti
cmp
lock
gs
jmp
fsubrs
lods
sub
int3
call
icebp
insl
cmpsb
and
in
cmc
jne
das
inc
mov
xchg
xor
jb
mov
dec
in
out
cs
mov
pop
push
jl
or
or
lahf
das
jge
mov
jmp
push
in
aaa
inc
sub
pop
jmp
sbb
push
push
mov
adc
sub
movsl
xchg
and
mov
and
stos
lods
xlat
mov
daa
repnz
das
pushf
inc
sub
xchg
lods
lods
dec
pop
lcall
sub
pop
in
xor
cltd
fwait
stc
add
dec
mov
sahf
cltd
popf
cmp
add
xor
test
repnz
loope
int
inc
mov
std
jecxz
fs
and
mov
cmp
cmpl
xchg
stos
fdivrs
mov
sub
lds
xchg
or
jl
cmp
xchg
stos
mov
jle
or
mov
movsb
adc
arpl
push
mov
pop
add
ss
addr16
fs
cmp
pushf
in
loop
inc
lret
cmpsl
mov
imul
inc
pushf
push
mov
sub
jg
dec
and
inc
hlt
fmuls
xor
mov
ss
add
adc
loopne
lds
sub
imul
push
scas
xchg
out
dec
push
shlb
sub
mov
fisttps
jp
pop
push
dec
aaa
outsb
aam
insl
pop
cmp
out
mov
sub
cmpl
jne
popa
lods
pop
imul
mov
cs
pop
cmp
test
inc
aam
jns
in
scas
sti
shrl
xchg
push
sub
popa
sbb
push
cmc
stos
insb
mov
add
add
pop
jge
cs
add
pushf
loope
jge
inc
leave
stos
in
mov
sbb
ss
jle
and
jb
pop
les
loope
and
push
in
xchg
test
sub
mov
mov
out
adc
lock
mov
xor
push
sbb
sti
test
loop
adc
and
adc
dec
or
or
pop
sbb
adc
push
scas
cmp
lret
call
cmp
jb
js
aam
lea
icebp
mov
jb
out
fwait
lea
in
cwtl
adc
pop
shr
or
push
pop
dec
jb
or
xorb
pop
jl
ret
test
mov
enter
xchg
push
inc
and
pushf
popa
mov
push
jo
or
lcall
xor
jp
mov
mov
adcl
xchg
jne
jge
arpl
pop
mov
jecxz
push
or
jl
push
mov
push
jne
inc
pushf
sbb
add
pop
inc
and
mov
xchg
mov
pinsrw
stc
push
xor
ret
and
inc
fmulp
xchg
invd
push
push
add
call
pop
out
mov
inc
lea
inc
divl
fwait
pop
pop
testb
roll
data16
jbe
les
push
mov
cmp
add
lds
mov
cwtl
mov
imul
dec
pusha
int
in
pop
in
pop
sub
loopne
or
push
mov
test
mov
inc
cmp
scas
mov
and
insl
mov
in
sar
xchg
inc
sub
jnp
out
sahf
add
aas
cmp
cmp
push
push
fisubrs
cli
and
xchg
movl
mov
jb
sbb
mov
or
ljmp
push
xor
pushl
mov
es
imul
rcrb
repnz
xorb
dec
icebp
aas
loope
addr16
sbb
stc
mov
xor
clc
push
pop
cmpsl
lods
or
call
pop
insb
sub
dec
sub
mov
push
inc
or
sub
aaa
out
dec
fwait
sbb
mov
fs
pop
jo
je
imul
test
and
fildll
mov
clc
adc
into
fsubl
add
ficoms
dec
cmp
jne
cwtl
subb
in
inc
insl
add
stos
cmpsl
ret
sub
loope
pusha
cmp
pop
shrl
or
in
scas
in
pop
jmp
xchg
add
xchg
int3
sarl
fnsave
jb
sub
stos
ljmp
clc
lcall
in
add
es
xor
mov
test
data16
test
jp
lods
mov
ja
jns
sbb
cmp
jl
fsts
ljmp
movsl
shl
mov
enter
pusha
les
inc
pushf
es
mov
push
xchg
sbb
insb
inc
mov
xchg
imull
stos
dec
xor
icebp
ja
jl
or
or
cld
ds
mov
and
cmc
mov
mov
outsb
adc
ds
cmpsl
dec
sbb
sub
dec
sub
out
cli
cmp
daa
call
dec
stos
xor
lds
add
icebp
cmc
cmp
xor
sbb
fnstsw
add
mov
mov
or
fdivl
adc
push
outsb
and
adc
sub
mov
rorb
add
xchg
cmp
outsb
test
push
pusha
fcompl
shrb
shll
pop
jge
pop
mov
pop
shll
enter
push
xchg
ret
mov
popa
sarb
stos
xor
adc
jl
mov
jne
push
sub
hlt
mov
cld
dec
pushf
lret
in
rcrl
dec
and
je
adc
push
sub
adc
fnsave
sarl
aad
mov
adc
inc
mov
or
sti
enter
adc
xlat
push
mov
sbb
cmpsb
xor
or
imul
and
dec
pop
pop
mulb
cmp
jne
adc
out
push
sub
dec
into
jle
dec
push
inc
je
mov
mov
out
jns
in
inc
cmp
pushf
data16
sbb
mov
adc
adc
mov
jge
pop
and
push
adc
test
push
sbb
inc
add
mov
jp
inc
lcall
ds
xchg
ss
in
push
scas
andl
call
sub
jmp
pop
and
sahf
sahf
ss
xchg
jl
mov
test
stos
mov
or
lods
xchg
mov
xor
push
mov
cli
adc
pop
or
xchg
xchg
vunpckhps
imulb
in
or
lea
jb
xchg
adc
xchg
xchg
popa
filds
xor
data16
fnstenv
ficoml
push
ds
bound
loope,pn
mov
rol
mov
jne
cmp
mov
sub
addl
fmuls
inc
cmpl
aaa
jmp
cmpsb
ret
ds
ja
int3
scas
call
loop
mov
pop
movsb
jecxz
pusha
aas
fldenv
xor
fdivr
nop
cltd
fxch
sub
outsb
and
imul
lcall
stos
repz
push
mov
test
lods
cs
dec
bound
sahf
sub
cli
dec
cld
mov
jg
jecxz
fistpll
sbb
movups
dec
jo
push
in
push
mov
int
sbb
xchg
fsubrl
outsl
popf
rcll
xor
lahf
cmc
vfrczps
and
and
and
cmp
test
mov
cmpsb
pop
pop
mov
out
lock
xor
jle
shlb
or
mov
lahf
lret
push
fwait
sbb
mov
push
mov
xchg
lea
push
not
push
xchg
ja
push
mov
jle
xchg
popf
movsb
sbb
int3
push
push
scas
lock
aad
or
inc
dec
mov
jne
testb
sub
fnstcw
roll
cltd
lcall
fwait
je
scas
push
mov
fildl
icebp
call
xor
xor
add
shl
addr16
push
push
aad
inc
rorl
imul
insl
mov
push
sahf
lahf
das
xchg
sub
pop
push
iret
out
dec
test
sbb
notb
mov
xchg
xchg
nop
pusha
inc
fistpl
or
into
mov
sbb
xlat
sub
mov
jae
fwait
mov
pop
mov
sub
lods
mov
hlt
out
jns
sbb
jne
push
pop
fdivrl
push
sub
in
mov
loop
cld
mov
jecxz
std
and
popfw
lds
pop
sbb
mov
push
sub
cmpsl
iret
sbb
jge
mov
sbb
push
sub
mov
pop
pushf
test
loop
test
push
pop
xor
cmp
lcall
xchg
pop
aad
push
push
fsts
ret
shrl
adc
lcall
fucomp
dec
dec
stc
hlt
xor
jecxz
add
pop
add
sbb
xorl
xchg
mov
lods
or
iret
mov
loopne
scas
filds
fmul
daa
inc
mov
xchg
jbe
js
fstps
mov
aaa
xchg
test
jle
in
push
mov
jl
in
lcall
sub
mov
push
mov
mov
data16
mov
pushf
sbb
sbb
sub
rcll
sbb
call
pop
inc
mov
jns
cmpsb
lret
addr16
xchg
mov
push
mov
icebp
cli
data16
mov
mov
xchg
cltd
lea
and
xor
add
enter
pop
jecxz
je
sub
add
sbb
xchg
jne
imul
ss
js
pushf
lea
jmp
adc
pop
push
mov
stos
mov
mov
jmp
sub
gs
jle,pn
xor
push
and
cmp
iret
adc
int3
pop
xlat
subps
imul
adc
pushf
add
fistpl
cmp
adc
stos
popa
inc
fs
fistl
sahf
popf
out
dec
mov
out
outsl
and
int3
imul
js
inc
add
out
out
inc
movsb
int
cli
and
push
pusha
mov
or
cmpsl
sbb
dec
lods
popa
out
call
sbb
filds
xlat
xor
or
add
js
mov
inc
cwtl
fdivl
and
int3
pop
insl
jne
cli
sbb
jbe
adcb
push
fwait
mov
lahf
xchg
lods
push
lahf
pop
mov
cmpsl
lock
adc
aam
hlt
les
mov
imul
dec
imul
cmp
and
ss
and
pusha
add
adc
dec
mov
jbe
cwtl
fidivrs
cwtl
cwtl
imul
xchg
inc
lea
test
mov
scas
shrb
fimuls
fxch
nop
in
mov
xor
inc
jmp
xchg
std
cmp
sub
sub
add
jae
sbb
aam
mov
inc
in
jb
stos
fildl
bound
std
cmp
dec
fs
push
clc
xchg
repnz
popf
inc
jns
mov
daa
sbb
xchg
sub
test
dec
sub
adc
and
push
and
stc
sahf
into
je
mov
cmc
jmp
stos
std
outsl
divl
pop
xor
cwtl
outsl
insl
lret
add
mov
in
int
dec
sub
mov
movsb
xor
clc
jp
in
incb
mov
adc
xor
out
xchg
scas
xor
in
or
aaa
and
inc
lcall
fiadds
push
mov
gs
std
nop
sbb
dec
xor
add
inc
cld
shlb
jno
xchg
pop
fwait
scas
rolb
jnp
lahf
dec
xchg
outsl
jle
bound
cmp
int3
mov
jo
outsl
xor
repnz
scas
sub
addl
inc
mov
pop
leave
je
or
jp
or
xchg
inc
dec
pop
data16
aam
mov
xchg
pop
xlat
divps
cmp
xlat
dec
fs
repz
sbb
pushf
aad
push
and
nop
popf
jae
jno
in
or
ja
dec
pusha
addr16
ret
xor
add
pop
sbb
xchg
adc
lahf
cli
or
test
std
mov
adc
jecxz
mov
adc
lahf
push
or
test
mov
pop
aaa
jl
jmp
xchg
cmp
xlat
aad
shr
adc
jns
adc
jno
mov
or
sbb
push
les
out
sbb
or
pop
jmp
jge
ret
dec
pop
mov
xchg
push
je
mov
outsb
out
add
scas
sub
leave
popa
push
jbe
lds
cmp
xor
inc
xor
rcrb
in
cmp
pop
fstpl
shlb
test
or
popa
push
mov
or
xor
sub
add
pusha
test
scas
xor
xor
inc
jle
or
out
mov
les
adc
in
pushl
dec
jge
cmp
mulb
and
call
das
sbb
xor
xchg
jg
hlt
xor
mov
jl
mov
cld
push
push
repz
fwait
pop
es
addr16
test
sbb
jle
or
fmull
test
cmpsb
dec
shll
or
push
add
scas
ret
movsb
mov
incb
xchg
into
mov
pop
pop
mov
sub
das
pushf
push
test
jg
pop
rclb
ljmp
pop
mul
xchg
dec
pop
lcall
ret
cmp
push
add
andl
ret
daa
and
or
imul
lea
adc
aam
xchg
mov
pop
add
xor
test
hlt
mov
sbb
lret
jle
dec
shll
dec
sub
push
sbb
das
or
dec
loopne
roll
jne
and
mov
repnz
dec
mov
jp
lret
flds
push
push
xchg
lret
adc
aaa
push
or
xchg
push
sbbb
push
dec
dec
adc
mov
jb
jnp
mov
dec
rolb
into
xchg
lret
mov
cmc
jo
pop
jecxz
xchg
jg
jl
cwtl
push
shll
dec
sahf
push
out
sub
push
call
push
cmc
mov
clc
dec
ret
adc
aaa
and
mov
addr16
aam
inc
nop
cwtl
and
fsub
push
rcl
in
dec
shl
mov
lcall
lods
jb
inc
cwtl
mov
and
roll
mov
rorl
adc
call
cld
aaa
jl
push
or
fimuls
jge
in
adc
insb
dec
in
bound
outsl
pop
aam
xchg
sbb
out
pushf
aam
lock
pop
rolb
mov
mov
call
mov
add
lret
or
notl
outsb
icebp
fildl
cmpsb
push
enter
push
cmp
cs
mov
add
call
das
or
ret
mov
movsb
lock
insl
ds
in
daa
mov
sub
fs
jno
je
jnp
pop
mov
int3
roll
insl
push
mov
insl
aas
cmp
pop
ret
add
popa
icebp
pop
jo
and
fcoms
outsl
gs
or
push
bound
pop
and
fnstenv
mov
xchg
mov
pop
push
sub
dec
ret
mov
rcll
dec
push
sbb
push
jle
add
inc
outsl
rcrb
inc
mov
popf
aaa
push
sbb
xor
imul
cltd
jns
test
sbb
mov
fnstcw
pop
int3
aaa
adc
xor
les
pop
pop
into
mov
jg
je
and
lods
imul
adc
scas
or
imul
arpl
lcall
xchg
pop
es
xchg
xor
js
scas
sbb
cltd
movsl
cmp
cmpsl
test
fs
jbe
jbe
push
jno
imul
ljmp
testb
mov
pop
sbb
add
arpl
push
lahf
dec
lods
pop
movl
pop
sub
stos
dec
leave
mov
loope
mov
add
fldt
loop
cmc
cmc
push
push
fnsave
data16
test
dec
iret
out
jmp
xlat
pop
pop
or
adc
stos
add
enter
and
mov
add
push
and
ja
push
stc
cwtl
std
mov
dec
xor
mov
daa
fidivrl
cmpsl
test
pop
adc
fisubrs
xor
lret
aam
jecxz
test
mov
insl
mov
and
repz
shl
imul
sbb
dec
mov
outsl
cmp
std
enter
lods
pop
popa
ljmp
aas
insl
adc
inc
mov
sahf
pop
jno
arpl
sbb
inc
sbb
jb
add
dec
loop
enter
xchg
movsl
cmp
jl
sbb
mov
scas
out
pop
mov
mov
das
push
mov
mov
hlt
clc
mov
out
fdivl
cs
xor
mov
adc
sub
test
pop
cpuid
ljmp
cli
pop
insl
and
xchg
pop
aad
pop
inc
insb
dec
mov
decb
xor
int
sbb
ljmp
adc
push
fwait
sub
jl
ret
mov
push
insl
or
es
repz
test
dec
nop
cs
ror
sbb
dec
mov
or
mov
add
fwait
or
and
jbe
xor
add
pop
rol
mov
pop
xchg
movsb
stos
mov
insb
cmpl
into
jge
mov
jbe
je
stos
insl
add
ljmp
cmpb
das
pop
add
push
push
cwtl
divb
out
push
adc
jae
cmp
aam
cmp
mov
das
stc
xor
push
dec
mov
mov
mov
dec
pop
mull
inc
inc
xor
sub
sbbl
dec
imul
cmp
lock
stos
sbb
ja
push
push
pop
fwait
mov
jecxz
outsb
mov
cmc
cmpsb
repnz
push
inc
lds
aad
jae
xchg
int3
je
pop
fwait
rolb
mov
es
mov
xchg
nop
stos
dec
and
add
and
shll
in
es
mov
adc
lahf
pop
fildl
add
and
adc
pop
jae
ds
xor
dec
and
mov
add
imul
popa
addr16
and
enter
icebp
push
mov
xchg
orb
div
jmp
jne
sbb
cltd
cmp
lds
mov
iret
cltd
cli
mov
dec
jl
mov
jecxz
add
stos
or
mov
mov
push
pop
dec
out
add
lcall
and
fs
inc
addr16
sub
imul
rclb
jge
fdivrl
int
notb
ret
pop
loop
rcrl
add
test
cmp
xchg
inc
stos
xchg
jg
mov
pop
in
xchg
daa
gs
mov
icebp
mov
adc
sub
mov
mov
mov
dec
subl
pop
push
mov
jae
jo
xor
fstps
stc
and
movsb
mov
stos
cwtl
idivl
lahf
and
ds
pop
mov
ja
push
push
jno
leave
xor
mov
and
inc
in
xor
mov
iret
jae
xchg
mulb
mov
and
mov
ret
inc
ror
into
lds
lods
cmp
lods
mov
rorb
xchg
scas
and
dec
ljmp
cld
pop
push
xor
mov
pop
pop
xchg
push
add
fcoms
test
enter
icebp
or
ja
xchg
js
test
cmc
lahf
push
mov
mov
xchg
sahf
pop
ret
int3
mov
pop
sbb
jnp
imull
dec
dec
sub
incl
mov
jle
shrl
sbb
mov
dec
js
clc
or
in
popf
aaa
jle
jle
pop
iret
pop
sub
fisttpl
fdivs
adc
mov
pop
inc
loope
js
scas
outsl
int3
mov
shlb
mov
pop
pop
xor
loopne
test
cmpsl
inc
cltd
xor
push
sub
enter
push
in
inc
mov
jnp
movl
xchg
adc
cmp
rcrl
dec
inc
mov
clc
loop
ret
arpl
pop
sti
fldcw
fmull
add
xchg
aam
cs
in
pop
pop
xchg
dec
stos
insl
xchg
aaa
ficomps
or
stos
jns
cltd
xor
lret
sub
sbb
jns
and
imul
daa
push
clc
cmpsb
fs
rcrl
xchg
jge
sbb
mov
mov
cmp
cmpsl
inc
inc
xchg
test
xchg
adc
push
test
jnp
popa
sbb
jmp
mov
pop
or
loop
andb
mov
mov
icebp
xchg
cmp
mov
cld
or
lret
fidivs
adc
dec
cli
adc
aad
push
aad
push
outsl
mov
mov
mov
movsb
ss
idivb
icebp
sub
fadds
jle
lods
sbb
fcmovnu
mov
mov
data16
jle
mov
mov
insl
iret
jbe
mov
dec
push
inc
mov
test
and
lahf
add
pop
cmp
ud1
daa
xor
or
sbb
or
cmpsb
xchg
arpl
insl
dec
xor
jo
sub
xlat
fidivrl
outsl
insb
pop
mov
jnp
add
jae
sub
adc
std
mov
aaa
pop
inc
nop
gs
loopne
adc
loop
loopne
xchg
hlt
std
dec
ja
lcall
aad
cmp
stos
sar
pminub
loop
out
sbb
mov
cmp
insb
add
lret
sub
xchg
dec
insb
aad
scas
adc
test
call
jae
loopne
inc
fs
fwait
cmpsb
nop
repnz
sub
inc
xor
pop
mov
stc
aas
out
clc
xchg
jne
sbb
pushf
adc
mov
mov
dec
out
inc
inc
dec
movsb
push
ret
mov
lcall
push
mov
lds
xchg
jae
lcall
lret
pop
icebp
xor
fsubrl
pop
mov
out
clc
mov
outsl
cmp
imul
inc
add
sub
pop
les
sarl
inc
leave
daa
pmullw
add
and
xchg
sub
das
sbbl
into
mov
ret
das
jge
out
or
xor
cmpsl
push
or
pop
imul
adc
push
cmp
outsl
dec
add
loop
push
jo
pop
cmp
sbb
jmp
dec
add
pop
add
out
add
std
dec
les
mov
push
xor
gs
std
dec
inc
out
jo
cmp
addr16
cmp
mov
int
dec
ret
push
inc
rcll
jnp
fdivrs
sahf
mov
movsb
push
mov
test
in
xchg
jbe
jbe
jmp
pop
cli
les
inc
sbb
nop
filds
inc
pop
xchg
mov
xlat
jns
outsl
int3
jmp
inc
iret
rorb
inc
fwait
test
sbbb
into
add
filds
pcmpgtw
orl
addb
fistpll
mov
std
fs
les
outsl
scas
push
pop
data16
pop
clc
mov
insb
arpl
fs
imul
xchg
icebp
and
push
lahf
sub
test
mov
jp
mov
int
mov
fmull
or
mov
roll
clc
inc
cmp
cmp
test
std
jl
pop
testb
or
jg
push
sti
out
xor
fimull
pop
popa
push
sub
and
push
arpl
jns
inc
sbb
mov
sub
in
xchg
cmpsb
out
iret
data16
in
addr16
cmp
fistps
ja
jnp
xor
sbb
cmp
insl
jecxz
aas
dec
cltd
out
jne
xlat
ret
xorl
lods
jae
aam
aas
test
xchg
dec
inc
pop
sub
pop
adc
add
incl
mov
lcall
jne
in
xchg
adc
pop
xchg
mov
xchg
testb
jne
std
nop
lahf
nop
imul
mov
add
cmp
mov
les
cmc
adc
lods
pop
adc
lds
mov
aam
xchg
inc
and
mov
subb
bound
movsb
or
outsb
cmp
fidivs
and
ficoml
xchg
and
push
mov
or
push
into
adc
insb
ljmp
lds
dec
gs
mov
les
mov
ds
aam
sub
sub
jae
pop
cmp
or
andl
cmc
mov
gs
dec
ljmp
out
stc
out
push
dec
rcrb
lret
call
jecxz
add
jb
lret
stos
cmp
mov
iret
lock
and
adc
sub
arpl
pop
or
inc
lcall
sub
push
fs
imul
mov
fidivrl
pop
stos
orl
xchg
decb
out
repz
sbb
std
mov
cltd
lcall
nop
xchg
adc
std
test
mov
in
aam
mov
fstl
sub
clc
mov
adc
cmpsl
shlb
mov
sbb
cmpsb
repnz
in
xchg
adc
jb
iret
rorb
js,pt
ljmp
mov
or
into
aaa
scas
addl
int
aad
jo
dec
enter
push
pop
dec
sub
mov
es
loopne
ret
gs
fwait
xchg
pop
pop
mov
mov
adc
arpl
push
call
and
inc
aam
aas
hlt
int3
movsl
jae
and
jl
dec
push
inc
daa
sub
dec
jnp
jmp
popf
adc
add
into
xchg
mov
loope
lret
scas
outsb
jae
sarb
xchg
dec
push
or
xchg
enter
cmp
adc
popf
pop
sub
daa
shr
pop
mov
repnz
pop
in
cli
dec
add
dec
inc
repnz
cmc
dec
mov
dec
stc
and
pop
dec
sar
repz
dec
and
jo
push
and
cmpsb
call
inc
xchg
addr16
aaa
jnp
sub
or
repnz
outsb
shrl
insb
cmp
adc
inc
mov
and
adc
jle
lds
movsl
fs
stc
dec
loope
aam
jns
inc
xchg
repz
and
idiv
insl
xchg
mov
fsubr
in
outsb
and
cmp
jne
lods
push
aaa
jb
xor
xor
insb
sti
out
loope
bound
mov
in
dec
sub
mov
ja
inc
js
fisubrl
daa
dec
mov
jbe
jae
rcrb
inc
pop
loop
and
push
jnp
xor
sbb
fidivl
fcomps
pop
addps
out
subl
dec
xor
test
lret
mov
xor
popf
dec
add
movsl
mov
xchg
stos
hlt
xor
mov
and
std
fnstcw
inc
adc
clc
add
es
pop
inc
mov
bound
sar
arpl
jle
data16
loope
add
imul
or
and
push
sub
loope
inc
test
in
push
sub
dec
add
and
jb
fidivs
inc
je
shlb
add
jge
sub
testl
out
push
pop
sub
arpl
mov
cld
lock
push
hlt
mov
cmp
cmpsl
aam
subl
sarl
stos
aam
addb
inc
push
cli
iret
std
xlat
enter
jge
fmull
jbe
out
dec
dec
and
cmpsl
dec
dec
outsb
ss
inc
es
in
jne
out
shll
cwtl
jo
mov
pusha
enter
dec
xor
dec
fmul
ret
mov
rol
enter
and
push
sbb
mov
loope
sub
xchg
imul
loopne
jb
stos
cmp
jmp
int3
fidivl
sahf
sub
in
mov
mov
out
sahf
xchg
dec
mov
out
cmc
cmpsl
add
jno
scas
mov
sbb
popa
push
fiaddl
jno
clc
jle
mov
xchg
stos
pop
pop
add
push
cmp
add
sbb
fidivrl
mov
jle
arpl
cld
ret
jg
mov
shrl
mov
lea
rclb
int
push
xor
jno
jbe
pop
ljmp
cmpsb
repnz
jb
jl
daa
inc
add
mov
ret
fidivrs
mov
int3
dec
mov
pop
int
or
mov
push
scas
lahf
imul
movq
xor
fsts
ret
sub
pop
cwtl
sarl
mov
lods
cmp
rcrl
pop
aaa
js
and
ja
sbb
inc
mov
mov
or
shll
push
in
push
cmpsb
adc
daa
jmp
aam
adc
cltd
enter
popa
bound
sbb
andb
pop
stos
aam
jnp
outsb
pop
ficomps
lods
sbb
addb
xchg
mov
addl
stc
movsl
ret
adc
dec
arpl
testb
cwtl
xchg
call
faddl
sub
xlat
inc
mov
mov
jmp
adc
dec
push
inc
imul
cmp
test
jb
enter
adc
mov
std
xchg
stc
sar
pop
int3
inc
push
lcall
fstps
pop
add
daa
cltd
add
cmp
pusha
dec
lods
inc
xchg
or
pop
aaa
push
cs
lea
ja
in
jge
mov
pop
lcall
cmp
fcomps
inc
aad
into
add
lods
jae
and
dec
ds
pop
xchg
mov
jne
or
mov
jecxz
mov
cmp
test
jge
mov
outsb
inc
or
sub
pop
cmc
jae
or
pop
sbb
insl
js
pop
int
and
out
xchg
mov
arpl
push
add
xchg
cmp
push
loop
int
fstpl
idivb
leave
adcl
xchg
ret
and
test
add
sbb
out
imul
adc
dec
jge
add
push
ljmp
dec
jp
add
stos
xchg
stos
js
hlt
mov
xor
bound
cwtl
dec
sbb
jle
cs
cld
je
xchg
shll
cmc
popl
pushf
orb
inc
adc
pop
mov
stc
pop
mov
and
idivl
pop
cmc
jnp,pn
sub
cmc
sbbl
lahf
push
sahf
and
lock
xchg
test
mov
xchg
popa
lds
mov
pop
mov
adc
stc
cmpsb
jmp
push
adc
jge
enter
dec
out
xchg
iret
jle
add
push
dec
bnd
dec
sub
adc
inc
mov
insl
lock
cli
xchg
mov
xchg
dec
fstpt
aad
push
inc
in
jo
in
mov
dec
sub
push
aas
out
enter
aas
add
aam
push
dec
cmpsl
pop
inc
pop
pushf
leave
push
dec
push
pslld
movsl
jno
ret
leave
mov
out
movb
movb
fdivs
into
sahf
pusha
sub
sub
cmp
fists
xchg
push
sub
sbb
jb
xchg
adc
cmc
sub
insb
addr16
hlt
jnp
jnp
or
pop
add
flds
add
dec
fldt
in
or
lahf
sbb
or
andl
mov
ret
push
stos
xchg
popa
xchg
dec
and
rcrb
fiaddl
ljmp
fsts
mov
arpl
dec
xor
jg
test
push
mov
cmpsl
ja
jbe
into
lock
cwtl
add
xchg
mov
cmpb
hlt
lcall
mov
sbb
cli
jb
pop
es
inc
int3
jmp
sbb
dec
xchg
mov
outsl
lods
sbb
xor
ffreep
lahf
std
sub
aam
fimull
dec
and
test
test
sub
jbe
xchg
mov
roll
add
data16
adc
loop
rorb
nop
insb
adc
dec
lods
nop
stos
add
mov
lcall
dec
push
out
repz
fadds
pop
popf
xor
sub
cmp
lods
fidivl
fs
ss
outsb
gs
das
add
andl
xor
dec
sbb
test
push
adc
mov
push
cmc
dec
mov
imul
mov
xor
push
subb
pushf
lea
or
xor
ret
pop
xchg
aas
pop
bound
mov
push
out
inc
cmpsb
shlb
enter
das
movsl
mov
dec
jl
lock
pop
jo
sbb
jle
adc
arpl
pop
pop
int3
add
inc
pop
movsl
pop
jp
dec
sbb
aad
out
cmp
icebp
pop
push
icebp
lcall
shrb
mov
mov
dec
add
jg
or
enter
test
cmp
xor
push
ja
inc
out
mov
and
adc
rcrl
stc
inc
loope
add
mov
imul
xor
and
xor
arpl
and
orb
jnp
pop
out
rcrb
movsb
jae
mov
pusha
push
insb
lods
or
jns
fs
mov
insl
in
jne
cmpl
sub
or
jmp
mov
or
es
push
jbe
add
add
fdivrl
gs
xchg
rclb
cmp
cmp
sbb
outsb
call
push
jle
mov
cmpb
xorb
jns
lcall
inc
pop
jnp
mov
adc
mov
jo
js
cli
jp
dec
xor
cmpsb
mov
xor
mov
int
pop
sbb
cwtl
fcmove
fimuls
stc
adc
out
add
cmp
lock
pop
stos
sub
push
leave
js
subb
push
frstor
pop
push
and
xchg
cmp
xchg
ficompl
mov
fildl
xor
leave
xchg
push
push
inc
scas
ljmp
jl
in
sub
insl
subb
pop
push
test
sbb
jae
pop
push
add
sbb
test
adc
mov
ljmp
arpl
imul
lretw
fldt
scas
mov
dec
cwtl
push
xlat
pusha
xor
pusha
pop
mov
xor
mov
popa
test
push
popa
xor
lret
es
mov
pushf
sbb
inc
push
xchg
pop
mov
rcrl
sub
dec
roll
cmp
gs
cmp
lods
pop
jmp
lods
loop
jae
mov
fildl
je
dec
aad
insb
add
jmp
pop
xchg
mov
add
mov
test
mov
sbb
mov
insl
xor
push
fstl
or
push
lahf
dec
nop
jno
mov
jns
and
lods
mulb
or
das
fcomps
pop
sahf
ret
pop
ret
jns
pop
addr16
pop
dec
mov
gs
jnp
jmp
popa
sbb
lcall
pop
jle
addb
rclb
fnstcw
jnp
xchg
pusha
in
or
nop
sub
dec
loopne
adc
stos
in
pop
mov
sbb
xchg
mov
jg
push
cmp
jns
or
add
das
xchg
sbbl
or
das
aas
lds
out
jl
rcl
ret
fisubrs
cmp
add
sbb
inc
cmp
and
xor
repnz
out
add
hlt
iret
fdiv
adcb
jl
ds
cmc
pop
xlat
imul
pop
cld
sbb
mov
aad
sub
out
hlt
int
cmp
mov
cltd
jl
inc
xlat
push
jbe
mov
mov
outsl
dec
leave
movb
fstpt
loopne
out
ja
pop
xchg
and
adc
mov
jb
ljmp
pop
js
xor
iret
sub
test
mov
fwait
inc
js
xchg
adc
addr16
cmpsb
stos
data16
dec
xor
pop
jp
pop
jb
dec
lcall
shlb
call
stc
movsl
push
pop
push
das
push
sbb
fsubrl
cmp
mov
xchg
sub
flds
xor
cwtl
cltd
popf
in
xor
pop
or
gs
test
push
jl
add
or
roll
xchg
sub
xchg
ljmp
push
adcb
in
test
out
add
lahf
jl
fmull
pusha
adc
outsb
ret
sub
sbb
inc
inc
xchg
jae
mov
xorb
push
nop
negb
or
or
dec
arpl
mov
fistl
gs
mov
push
push
mov
jg
push
cwtl
sahf
shlb
pop
sub
jbe
dec
cmpsl
jp
push
xchg
lds
popf
xchg
push
add
ret
jno
add
je
mov
scas
movsb
repnz
pop
cmpsl
jo
mov
ret
in
imul
xlat
mov
add
sbb
jecxz
movsb
out
pop
jne
sbb
push
sti
inc
mov
jne
and
movsb
je
mov
mov
fmulp
adc
test
adc
sub
xchg
shll
dec
pop
jnp
mov
mov
adc
cmp
mov
adc
icebp
leave
in
int
mov
outsb
aad
sub
je
in
push
jno
push
loope,pn
or
push
sbb
mov
stos
fsubs
and
iret
pop
or
lods
xor
jns
jg
ja
sbb
sub
cltd
dec
je
out
jns
mov
dec
cltd
push
push
push
inc
insl
cmp
scas
jo
sub
dec
lea
inc
cmc
fcom
mov
xor
movsl
ljmp
sarl
fistpl
sbb
pop
inc
movsl
mov
inc
adc
bound
pop
testl
sub
sub
or
aad
addr16
mov
int
mov
test
ret
sub
repz
push
ficomps
mov
mov
xchg
aaa
cmpsl
adc
mov
cmp
mov
xlat
roll
and
lock
push
sbb
leave
push
pop
or
xchg
mov
orl
push
scas
push
sbb
mov
rcll
pop
iret
aaa
mov
or
pusha
enter
mov
cmp
je
mov
cmc
sbb
adc
jmp
orb
pop
mov
cmp
cmpb
popf
xor
or
fcomip
shlb
rorl
cvttps2pi
cli
jns
inc
fs
sbb
add
lcall
shll
test
xchg
test
mov
push
iret
add
je
mov
orb
stos
sub
lods
sub
mov
and
mov
outsb
cs
ljmp
iret
xchg
ja
rclb
cltd
ret
arpl
mov
mov
xlat
test
jnp
jle
inc
sub
and
adc
sub
movsb
ds
xchg
mov
insl
or
xlat
outsb
call
xchg
and
mov
jne
dec
dec
cmp
movsl
mov
xchg
shlb
daa
mov
lcall
or
fcoms
ja
test
ss
push
push
rcrl
cli
in
cs
push
xor
jbe
mov
xchg
add
cmp
lea
sub
clc
fwait
pop
mov
ret
nop
pop
push
mov
orl
loopne
dec
fwait
daa
pop
int3
mov
push
cmp
xchg
xor
mov
dec
adc
jmp
mov
pop
mov
fidivl
movzbl
sbb
sbb
push
idivl
leave
sbb
cmpsb
xchg
fisubrs
out
stc
roll
adc
icebp
insb
mov
imul
jno
insl
or
fstpt
daa
lret
and
into
fisubl
enter
inc
cmc
jno
std
jbe
push
into
mov
xchg
push
aaa
je
cs
in
and
fld
xchg
jl
popf
in
in
repz
in
sahf
lcall
mov
arpl
clc
leave
xor
inc
xchg
sbbl
lcall
xor
mov
sahf
dec
add
jle
lcall
scas
cld
jne
push
pop
push
movsl
insb
sahf
insl
repz
arpl
es
add
inc
add
jmp
negb
inc
imul
std
mov
cld
jp
addr16
jmp
in
cmp
dec
into
inc
push
lods
mov
test
sbb
jb
lock
push
jg
andl
inc
cmp
sub
fs
lret
adc
jne
rorl
insb
mov
add
mov
ret
orb
xchg
jp
popf
xchg
inc
fsubr
loope
ret
pop
pop
mov
xchg
out
mov
out
pop
xlat
js
dec
xchg
call
dec
jle
add
or
xchg
sbb
repz
push
std
xor
cs
ret
shl
jo
dec
test
mov
mov
mov
clc
movntps
lods
cmp
sbb
push
lea
mov
push
lods
adc
sbb
adc
out
arpl
lods
test
fsubl
imul
mov
shr
push
push
xchg
ret
adc
inc
jg
inc
mov
addr16
or
xlat
dec
mov
or
ret
xor
xchg
addr16
int3
xorl
out
lods
enter
dec
mov
out
adc
daa
mov
or
lods
adc
mov
and
mov
xor
aas
cwtl
sub
dec
lret
dec
dec
mov
mov
dec
mov
cwtl
gs
rcll
jecxz
nop
mov
notl
into
clc
mov
and
and
scas
in
out
sahf
js
bound
popf
mov
fisttpll
ret
add
lods
stc
ror
inc
insb
out
cmp
mov
mov
or
jp
dec
jmp
dec
divb
fadd
nop
adc
insb
lret
xchg
pop
idivb
mov
int3
das
mov
xchg
addr16
std
cmpb
inc
mov
mov
rorb
int3
and
pop
and
xchg
dec
jns
out
ret
out
out
pop
pop
imul
push
scas
fsubrl
repz
cmpl
rep
inc
or
ds
in
aas
shlb
clc
add
add
mov
jle
pop
test
add
push
mov
dec
fmull
mov
pop
push
jns
ds
into
test
inc
cltd
daa
hlt
dec
lock
test
add
jle
inc
lcall
add
inc
pop
test
je
test
subw
rcrl
mov
js
xorb
adc
call
mov
cmp
xor
call
xchg
mov
xchg
xor
mov
mov
stos
and
loop
pop
xchg
repz
call
movsb
sbb
dec
movb
fdivrl
into
sbb
mov
idivl
inc
es
push
lcall
add
or
lds
inc
sbb
adc
pop
stos
lods
stos
hlt
sbb
aaa
xor
jg
shlb
js
add
dec
mov
adc
test
stos
clc
dec
jnp
inc
cmp
scas
es
inc
fmull
sub
inc
call
or
ret
lods
push
pop
jmp
pop
adc
std
out
sti
xchg
lds
and
adc
mov
scas
jl
push
shlb
adc
imul
push
lret
inc
jecxz
xor
xchg
sub
nop
mov
sbb
loopne
push
lea
sub
mov
shrl
push
sub
sub
and
xchg
das
dec
adc
xlat
dec
pop
fcmovu
mov
pop
cmp
adc
or
or
mov
mov
cmp
push
cmpsl
pop
jnp
and
inc
sub
ds
mov
push
or
std
and
pop
jl
sbbb
push
sbb
and
adc
movsl
lock
mov
or
or
inc
or
push
loope
std
xor
insl
add
test
ss
inc
mov
pop
leave
lock
dec
out
dec
cmp
ret
in
or
inc
push
ror
stc
mov
inc
lcall
mov
lahf
ljmp
inc
cmp
testb
mov
int3
test
xlat
sbb
or
loope
xchg
pop
iret
push
cmp
push
into
outsb
adc
dec
shl
test
hlt
bound
xchg
push
or
cmpsb
sbbb
cmp
int3
mov
shl
lods
mov
push
stos
jge
shrl
cmp
fldenv
divl
add
mov
test
fdivrl
inc
loopne
mov
jge
daa
movsb
mov
cmc
movsl
cmp
mov
xor
shll
test
ret
jmp
add
mov
mov
inc
jne
lea
jb
movsl
xchg
xchg
fwait
push
mov
and
push
test
inc
sub
daa
divb
inc
sub
push
pop
in
lcall
mov
repz
out
adc
jo
add
add
add
dec
xorl
jge
adc
mov
dec
dec
or
stc
arpl
jecxz
jl
hlt
or
mov
or
stos
mov
add
adc
ror
inc
fdiv
scas
int
jge
xchg
jae
daa
das
push
pop
insb
arpl
bound
sub
and
mov
or
cmp
daa
leave
iret
mov
pop
pusha
push
cmc
dec
dec
pop
mov
insl
outsb
subb
cmpl
addr16
lds
inc
adc
adc
jns
xchg
imul
int
xchg
sbb
or
cs
test
inc
mov
pop
inc
lahf
iret
jp
loop
das
cwtl
test
rorb
int3
inc
push
sbb
jle
pop
jge
out
mov
in
jbe
arpl
sbb
push
add
inc
icebp
pop
loopne
cmp
dec
cld
mov
test
decl
mov
test
sbb
inc
jns
sub
dec
incb
mov
popf
push
push
mov
jg
jb
fnstsw
arpl
mov
iret
nop
mov
dec
lret
dec
sub
sbb
into
inc
scas
pop
pop
mov
fdivs
js
adc
add
adcl
sahf
imul
pop
jnp
in
cmp
push
cs
les
dec
dec
lcall
inc
sub
clc
mov
sbb
xchg
pop
mov
jns
push
rclb
inc
mov
imul
enter
jnp
adc
imul
out
arpl
iret
push
lock
lock
xchg
fwait
imul
mov
xchg
jl
xor
lea
jnp
or
es
sbb
push
dec
iret
dec
stos
push
fsubl
jp
push
icebp
sahf
aam
setae
loopne
sub
sbb
lahf
loopne
mov
xorps
sub
pushf
movsb
call
jae
mov
mov
xchg
popf
or
xor
ret
or
push
add
shll
cmp
or
lcall
or
cs
cmp
mov
imul
nop
pcmpeqw
jl
adc
dec
pushl
dec
pushf
lods
jb
pop
jmp
test
or
add
aas
sarb
xor
negl
movsb
push
ja
inc
jo
push
test
mov
out
mov
ret
popa
xor
adc
push
in
lock
insl
pop
mov
fwait
imul
cmp
popa
repnz
cltd
outsb
bound
subl
imul
test
das
mov
fldenv
jecxz
gs
mov
arpl
mov
enter
xchg
sub
addr16
mov
and
je
and
stc
test
loopne
dec
push
sbb
adc
ret
clc
aas
jge
jecxz
dec
adc
inc
cmp
sub
shrl
push
or
and
pop
rorl
cmp
and
movsl
loop
sub
mov
inc
xchg
stos
push
std
push
hlt
cmp
inc
and
lcall
pop
jnp
pop
imul
pop
lahf
cmc
pop
stos
mov
jae
sbb
add
mov
push
or
push
lea
xchg
inc
mov
test
lahf
xchg
js
rolb
xchg
cmp
jae
hlt
jmp
xchg
xchg
sti
stos
int
repnz
lahf
pop
push
sbb
shlb
fcmovnbe
cmpsb
or
js
push
add
mov
int3
mov
push
popa
pusha
popf
jecxz
push
or
addr16
arpl
or
in
push
push
scas
and
and
push
push
push
or
cmpsl
repz
shl
pop
int
dec
popf
cmpsb
cs
push
push
sbb
add
xor
dec
jg
and
nop
ret
rclb
adc
mov
lahf
aad
data16
mov
imul
cmp
movsb
roll
arpl
mov
jg
fists
mov
push
cmp
lock
cmc
je
jns
int
add
mov
fsubl
add
or
xchg
push
jnp
mov
lods
das
fists
adc
mov
pop
punpcklwd
popf
adc
mov
mov
aas
xchg
and
mov
in
cmp
pop
and
mov
shl
dec
mov
insl
ss
dec
int
inc
shrl
cltd
sbb
mov
lea
cwtl
je
in
jae
movsl
gs
fcomps
int3
andb
inc
push
cmc
loopne
lahf
outsb
in
add
stc
adc
mov
subb
cs
jmp
push
pop
nop
and
js
mov
shr
ljmp
and
and
mov
xchg
xlat
pusha
fidivs
mov
push
xchg
and
je
inc
incl
and
sub
mov
cmp
in
das
or
stos
jmp
lods
les
jnp
leave
jl
sbb
lea
sub
pop
mov
lret
lret
ja
xchg
add
int
lock
push
xchg
ja
fildll
or
cmpsl
fidivl
gs
arpl
outsl
ds
lahf
scas
fcompl
push
cmp
adc
mov
stc
mov
js
lea
jbe
clc
inc
lods
lods
pop
sub
in
aas
sub
popf
sbb
scas
das
pop
xchg
ss
or
push
mov
dec
ss
test
jae
jns
inc
in
fldcw
jns
movl
ds
mov
xchg
dec
cs
or
fnsave
bound
les
sahf
pop
mov
movsb
test
pop
add
int3
scas
xor
jge
pop
stos
push
or
faddl
mov
push
cli
aad
adc
or
lea
and
xchg
mov
push
roll
push
add
nop
sub
ja
mov
add
pushf
mov
push
outsl
add
xchg
sub
xor
lds
adc
sbb
jo
mov
cld
adc
mov
mov
cltd
mov
cld
rcr
xchg
es
repnz
jne
divl
add
stc
lods
add
lcall
movsb
stos
in
cmp
and
pop
dec
mov
enter
in
pop
cmp
sub
sahf
test
push
repz
into
inc
cmpsb
shl
xor
mov
push
push
sub
xor
scas
outsb
add
cli
mov
sahf
mov
sarl
jmp
cld
rorb
imul
popf
sahf
and
sbb
xor
mov
test
das
shll
push
add
sahf
lret
cmp
js
inc
add
adc
arpl
enter
xchg
in
mov
and
popa
imulb
xchg
into
addr16
loope
sti
imul
dec
bound
out
mov
mov
je
out
stc
push
jle
cmp
xor
iret
fcoms
add
sahf
je
js
enter
sbb
fcomps
vandps
fnop
cltd
in
dec
jge
pop
and
loope
ja
repnz
sub
loop
push
scas
jmp
cmp
sbb
rorl
out
scas
ret
and
adc
iret
inc
lock
loop
and
sarl
jo
push
addl
lds
sub
nop
adc
push
cmp
outsl
sub
insb
adc
test
cli
idivb
aaa
mov
pop
sbb
push
ds
mov
push
fdivrl
mov
dec
add
lret
movsb
jp
loopne
xchg
scas
adc
notb
cmp
js
adc
jo
je
cmp
push
stos
mov
test
out
es
fidivs
fisttpll
cmp
mov
dec
and
fstpt
mov
sub
xchg
std
pop
ret
pop
sub
push
dec
bswap
cs
aad
pop
ljmp
shrb
add
and
and
sub
push
jbe
fcos
stos
int3
xor
xchg
push
scas
aaa
call
inc
ljmp
test
mov
aam
inc
and
xor
pop
fwait
iret
scas
xchg
pop
mov
aad
nop
fdiv
sub
and
mov
dec
mov
cmpsl
fwait
popa
push
mov
mov
or
dec
mov
mov
js
cmp
cmpsl
out
shrl
push
add
lods
mov
iret
xor
test
cmp
sti
loopne
jo
dec
xlat
adc
push
inc
push
lea
jne
push
mov
ljmp
pop
js
sbb
xchg
orl
sbb
repz
testl
les
jl
aaa
repz
xor
xchg
and
cwtl
or
or
inc
das
inc
or
repz
iret
in
inc
xchg
out
sub
xor
sbb
jecxz
jl
loope
clc
inc
hlt
movsl
push
mov
jge
mov
je
xchg
sub
sub
xor
push
jmp
sbb
lret
mov
or
pop
jge
repz
dec
mov
jbe
out
lds
in
fdivrp
fstpl
mov
mov
push
loope
inc
mov
cmp
push
popf
arpl
jmp
shrl
mov
pop
mov
adc
stos
aas
addr16
jns,pt
lds
outsb
lods
arpl
cmpsb
mov
and
jecxz
mov
mov
push
inc
jmp
adcl
mov
xchg
push
cmpsb
mov
cmc
mov
ret
jle
sahf
mov
lret
sub
jmp
pushf
sub
mov
rorb
scas
rorb
mov
out
daa
pop
pop
pop
mov
cmc
mov
jne
xor
ljmp
and
or
popa
or
lret
push
dec
inc
push
das
lds
jg
pop
pop
pop
xorl
addr16
pop
dec
in
fnsave
jae
mov
dec
sbb
fcoms
fnsave
inc
outsl
pop
push
sarb
das
decb
cli
aam
sbb
or
rclb
in
les
test
push
xchg
add
sub
outsl
pop
jl
sbb
sbbb
xchg
xchg
femms
mov
test
inc
lods
loopne
sub
and
outsb
inc
test
or
cs
data16
mov
add
mov
jp
jge
jbe
dec
popa
mov
popa
dec
cltd
sbb
daa
or
das
xor
in
or
adc
xor
dec
or
mov
sbb
xcrypt-ecb
cmpsl
or
lret
sti
movsl
inc
xchg
inc
iret
imul
imul
pop
call
mov
addb
jp
sub
pop
je
pop
cmp
scas
gs
and
insb
arpl
jmp
dec
inc
fisubl
es
rcl
lods
clc
ret
int3
sub
inc
mov
repz
aas
arpl
xchg
cmp
mov
and
xor
and
pop
loopne
flds
sbb
sbb
jle
rcrb
lds
arpl
push
dec
or
mov
andl
fcompl
test
or
inc
scas
out
repz
push
mov
fisttpll
mov
hlt
rcll
in
nop
pop
aas
or
in
mov
jp
pop
in
jg
in
jns
mov
loope
push
sbb
dec
jo
pop
je
mov
pop
nop
loopne
pop
inc
ror
scas
addr16
push
testb
jge
subl
pop
xchg
xlat
inc
push
xor
insl
aam
stos
mov
mov
insb
sbb
cwtl
test
icebp
popf
movl
mov
inc
jmp
out
jg
mov
pop
scas
xchg
into
fisttpll
out
fistpl
imul
mov
cmpsb
jmp
adc
ds
gs
insl
rorl
mov
pop
push
aam
aad
sub
cmp
mov
cmp
dec
pushf
adc
jmp
fistpll
test
mov
cmp
fidivrs
iret
leave
and
mov
adc
je
xor
test
andb
cmc
aaa
rorl
jo
xchg
rclb
pop
mov
fldt
and
and
js
mov
enter
pop
xchg
xchg
cmpsb
and
jns
adc
mov
xor
add
fisubrl
and
fsubrs
inc
dec
and
scas
xor
in
stc
ja
mov
shlb
fdiv
mov
add
adc
inc
push
pop
test
bound
mov
or
push
xlat
add
mov
dec
stos
inc
loop
dec
nop
iret
adc
aam
mov
inc
jmp
inc
dec
jmp
pop
jae
adc
mov
cs
movsb
lret
sbb
clc
jns
sub
mov
pusha
ss
insb
aas
insl
loopne
outsb
lret
inc
push
push
lea
xchg
xor
or
nop
std
test
mov
lahf
popl
xchg
lcall
enter
out
sbb
xchg
push
inc
xor
lar
xchg
sbb
push
enter
lret
ficomps
sbb
or
es
leave
ds
mov
movsl
je
mov
add
dec
sti
inc
and
push
inc
mov
cld
cmp
fcompl
adc
pop
sub
bound
faddp
test
xorl
push
xorl
dec
imul
mov
int
cmpsl
lods
or
in
outsb
addr16
int
shrb
mov
xor
ja
add
push
dec
mov
dec
inc
jne
enter
mov
jo
stc
scas
sbb
and
xor
xchg
mov
nop
ljmp
or
cmp
xor
jp
jmp
xchg
push
nop
mov
fistpl
imul
fidivrl
xorb
jns
lods
dec
insb
push
and
and
out
inc
push
jae
dec
lret
sbb
jle
sbb
sub
mov
imul
xchg
sbb
out
out
jnp
dec
adc
sub
jge
ds
mov
nop
xchg
in
xor
sbb
scas
push
pop
sub
push
push
pop
jae
in
mov
leave
jp
movsl
loopne
jne
into
or
mov
or
sti
or
in
cmpsb
sti
mov
push
mov
pop
xchg
stos
ret
je
jecxz
add
mov
sbb
in
sub
stc
jmp
pop
push
lcall
push
aas
lahf
adc
fbld
ljmp
into
loope
mov
dec
rcrl
push
fldcw
addr16
daa
imul
pushf
ror
mov
xchg
mov
jb
lods
xchg
addr16
add
nop
mov
mov
sub
ret
sub
mov
add
mov
in
mov
mov
mov
test
cwtl
add
mov
xchg
lods
das
les
and
add
push
clc
inc
nop
xchg
pop
push
mov
nop
lods
popf
loop
out
test
sbb
jbe
push
pop
jge
ljmp
into
popf
enter
into
imul
sbb
movsl
insb
mov
push
stos
add
push
xor
bound
std
ja
dec
in
iret
es
jb
mov
xchg
push
loop
in
sbb
popa
jp
lods
jp
jg
cwtl
daa
push
push
popa
andps
aas
mov
mov
xor
scas
rcrl
push
arpl
and
sub
jno
push
lds
cmp
xlat
int3
repz
test
push
mov
hlt
es
mov
inc
loope
in
test
adc
push
pop
repz
ret
or
jg
daa
jmp
xor
sbb
dec
push
push
jl
fidivrl
mov
addl
and
jecxz
jle
std
dec
xchg
push
pop
test
addr16
xor
pop
cld
movb
mov
imul
mov
mov
lcall
push
mov
push
sbbb
pop
jle
out
push
orl
filds
and
sbb
ljmp
or
sub
ret
pop
and
pop
cmpsb
mov
into
push
push
and
adc
insl
jl
inc
movsb
push
jp
sbb
pop
jle
and
push
iret
jnp
xchg
jae
jg
push
jmp
jmp
lret
dec
or
add
sbb
repz
push
lock
mov
push
popa
dec
testl
cmp
lds
cmpl
mov
jae
and
cmp
out
mov
orb
repz
stos
gs
push
add
adc
inc
sti
fwait
shlb
pop
dec
jnp
mov
adc
test
and
dec
sarl
aas
divl
cmp
add
inc
sbb
enter
movsl
aam
sbb
out
cmpsb
cmpsb
xchg
lahf
and
sub
out
sub
cmp
int
pop
jbe
mov
cmp
movsb
xor
fcoml
ja,pn
xor
mov
outsl
mov
and
and
pop
imul
lcall
mov
popa
dec
popf
lret
iret
or
xchg
push
inc
push
adc
sarb
in
push
in
lcall
push
dec
shr
adc
mov
sbb
pop
jnp
icebp
pop
xchg
pop
popf
jno
mov
add
fwait
xchg
cmp
sbb
int
repz
mov
loope
cmp
pop
mov
stos
pop
std
add
rcrb
popf
cltd
cwtl
aas
insb
call
and
sbb
mov
into
jne
addr16
fadds
ja
add
or
cmp
jne
aam
mov
in
mov
jnp
hlt
push
sbb
pop
sarb
sub
inc
subb
enter
xlat
adc
inc
add
pop
jecxz
push
cmp
jno
dec
pop
imul
push
cmp
sahf
lahf
dec
pop
dec
dec
js
jge
xchg
mov
sub
jle
mov
jp
in
push
cmp
out
jecxz
and
add
pop
mov
out
adc
js
ret
mov
jp
and
add
les
xor
jecxz
jnp
idivl
lahf
jp
cmpsl
xchg
int
cld
in
addr16
push
xor
inc
mov
sbb
cmpsl
fwait
cmp
dec
arpl
loopne
xlat
repnz
mov
push
adc
mov
ds
sbb
mov
adc
adcb
mov
mov
sarb
std
movl
or
push
mov
incl
es
cmp
je
mov
movsl
int3
mov
sbb
inc
bound
cmovo
mov
cmpl
stc
cwtl
add
and
jge
mov
mov
xor
jmp
pop
push
jmp
out
mov
add
cmp
jge
mov
xchg
out
fsub
cmp
cmp
mov
arpl
mov
fidivl
insb
pushf
push
aad
cmpl
fsubs
movsb
subb
cmp
in
outsl
ret
sub
jbe
stc
fsubl
xchg
stos
cs
inc
xor
push
jp
daa
inc
push
sbb
mov
test
lcall
inc
into
movsb
sbb
scas
jne
fsubs
mov
push
icebp
mov
mov
lcall
pop
jne
push
mov
jmp
push
dec
inc
sti
jbe
icebp
mov
mov
inc
inc
xchg
repz
test
ror
in
cwtl
mov
sbb
xchg
out
mov
movsl
data16
ret
and
adc
pop
mov
push
fisubl
pop
jg
mov
into
xchg
out
pop
pushf
xor
or
incb
mov
adc
xchg
cwtl
or
adc
cmpsl
stos
push
addr16
cwtl
mov
cmp
adcb
xchg
ss
call
fisttpll
mov
xchg
mov
insb
mov
repz
pop
sub
sbb
push
mov
ja
or
add
mov
cmpl
mov
adc
adc
addl
xor
inc
adc
insb
add
scas
push
inc
xchg
xchg
mov
gs
fisubrl
cmpsl
hlt
shl
xchg
xchg
cmp
push
push
repnz
mov
inc
sahf
mov
mov
cmp
imul
fnstcw
hlt
or
es
andb
fists
push
lahf
inc
push
test
jecxz
xlat
or
dec
mov
xchg
stc
jns
and
cli
in
lahf
inc
sbbb
xchg
into
scas
enter
xchg
push
jecxz
mov
movsb
adc
mov
mov
xlat
mov
dec
push
cli
fdivrs
push
sbb
sub
cmp
scas
pop
in
jge
sbb
js
or
test
mov
daa
sbb
sbb
cmp
dec
mov
pop
divb
pusha
push
out
push
frstor
movsb
xchg
subl
xchg
mov
lock
lret
ljmp
test
mov
lock
jp
xlat
fsubrl
fidivrl
mov
out
sub
mov
mov
fimuls
in
call
outsb
dec
pop
scas
fwait
push
push
dec
mov
xchg
sub
pop
jb
bound
loope
mov
dec
int
mov
lcall
sub
xor
fisubrl
dec
jnp
roll
xor
repnz
test
lock
decb
fs
push
test
shl
sahf
mov
loope
popa
pop
mov
mov
push
mov
insb
push
das
sub
xchg
and
bound
cmc
push
das
xlat
adc
push
mov
test
xchg
jns
inc
fs
mov
sbb
pop
push
mov
lcall
sub
loop
xchg
push
sbb
ret
jbe
aas
mov
lock
imul
xchg
les
mov
lret
mov
xchg
xchg
fmul
enter
stc
or
mov
int3
xor
fwait
mov
lret
push
push
adc
mov
mov
sub
lods
xor
out
pop
sti
sub
std
stos
je
inc
dec
pop
and
sbb
popf
jo
notl
dec
pop
out
inc
sbb
mov
adc
add
pop
sbb
int3
xchg
add
imul
rclb
stos
mov
jb
dec
or
insb
cld
push
out
dec
loope
pop
stos
pushf
jnp
sarb
pop
push
test
adcb
xlat
stos
pop
in
xor
lock
insb
fimull
cmp
stos
mov
dec
aam
fsts
lret
jns
xor
lds
and
or
mov
imul
cs
dec
xchg
cmp
inc
xor
xchg
xchg
mov
aas
movsl
xorb
lret
xchg
sahf
adc
cmp
iret
adc
jo
mov
mov
fs
or
push
xchg
push
sbb
ja
adc
imul
fstpl
movsb
sub
xor
and
das
into
xchg
rcll
sahf
pop
push
sbb
adc
into
xchg
and
adc
mov
mov
inc
push
call
stos
mov
push
shll
pop
jle
mov
int3
and
sub
aad
pop
add
cltd
cmp
in
mov
push
sbb
cmp
sbb
clc
sbb
push
pushf
or
bound
mov
pusha
cmpsl
repz
mov
pop
pop
sub
sarl
xchg
incb
mov
and
js
sub
mov
sub
mov
or
xor
dec
cmpsl
out
sbb
pop
mov
sub
jmp
push
popa
xor
dec
pop
in
mulb
fsubl
adc
sbb
ret
pop
test
call
ret
push
daa
or
mov
cmc
rcrl
inc
sbb
sub
pushl
jne
dec
notb
mov
mov
out
xchg
sub
xchg
iret
js
inc
fisttps
xchg
call
in
xor
loope
lods
fldcw
fs
ret
push
test
rorb
jno
lock
test
mov
inc
call
das
mov
mov
andb
inc
cmpsb
pop
jl
rorl
addl
xchg
and
lea
push
out
ljmp
mov
jmp
xor
adc
repz
or
int
mov
into
adc
mov
jg
repz
andb
sbb
push
pop
mov
aad
test
jmp
sub
mov
or
stos
and
dec
push
mov
sub
or
incb
scas
xchg
pop
sahf
stos
xchg
push
lea
and
inc
loopne
icebp
pushf
pop
shlb
shlb
pop
inc
adc
mov
adc
jmp
sbb
xchg
xchg
or
loope
mov
sub
pop
jle
or
mov
ds
dec
pop
adc
mov
mov
sbb
cmp
dec
xchg
xchg
lret
dec
jmp
into
stos
or
cmp
repz
stc
pop
ljmp
gs
fisubrl
mov
adc
testb
sarb
xorl
test
outsl
push
adc
and
fsubs
mov
call
adc
jg
fs
push
or
xor
rcrl
in
cmp
stos
pop
sub
leave
test
xor
jbe
push
mov
je
add
out
in
divl
popa
fisttpl
push
and
mov
xor
pop
lcall
push
mov
dec
jle
andb
jne
aaa
sahf
imul
and
and
xchg
xchg
lea
out
es
sbb
stos
shlb
jmp
or
xchg
push
xlat
in
push
or
xchg
gs
mov
jge
sbb
mov
dec
inc
les
js
or
add
mov
inc
das
shrb
pop
mov
mov
xchg
in
outsb
mov
sub
clc
sub
xchg
ljmp
lods
push
and
sbb
inc
call
dec
insb
sbb
xor
aaa
dec
adc
decl
enter
mov
push
jp
ss
sub
dec
mov
push
xchg
ret
mov
inc
push
ss
mov
xor
cmovnp
sbb
pop
aas
mov
shll
out
xchg
dec
testb
arpl
mov
into
js
cmp
pushf
mov
mov
sbb
pop
in
ja
out
add
pop
ljmp
xchg
inc
or
insb
lods
outsb
sub
cwtl
xor
cmpl
ds
push
xor
in
lahf
scas
insb
or
bound
inc
mov
testb
jp
stos
pop
cmc
mov
mov
outsl
cwtl
fisubrl
pop
dec
sbb
lods
adc
bound
xlat
mov
loop
jnp
scas
call
in
pop
jle
popa
inc
leave
inc
mov
or
and
add
mov
or
mov
nop
cli
mov
rorl
pop
cmp
mov
mov
das
sbb
fcoms
adc
xchg
xchg
push
nop
arpl
pop
mov
cmp
or
in
and
xchg
mov
xchg
mov
scas
jl
and
imul
add
jno
push
fdivrl
ret
or
dec
xchg
sub
xchg
inc
movsb
mov
ljmp
cmp
sub
fstpt
add
lret
jge
shrl
xchg
mov
pushf
aaa
xor
punpcklwd
mov
movsl
fwait
xor
scas
and
inc
jae
inc
mov
sbb
iret
xchg
or
xor
or
in
out
push
and
aam
cltd
sahf
lahf
mov
xor
pop
sbb
jbe
arpl
pop
add
repnz
nop
dec
push
xchg
sub
push
lds
push
jns
popa
pop
push
popl
fdivrs
mov
mov
push
cmp
pop
push
jecxz
test
mov
inc
sub
xlat
jge
add
cmp
in
jns
adc
shll
xchg
pop
outsl
daa
jo
lret
jb
idiv
mov
jne
and
fwait
hlt
aaa
lds
push
pop
das
sub
push
fwait
scas
dec
sub
addr16
das
and
dec
pop
aad
push
aad
les
lock
and
and
into
dec
or
pop
shll
jle
in
test
repnz
jo
int
fistpl
cmp
cld
les
xor
xchg
stos
or
loope
iret
fs
fnsave
leave
mov
rcll
lea
mov
cli
mov
and
stos
jne
popa
or
cli
or
dec
or
dec
mov
outsl
dec
xchg
xor
cmpsl
adc
inc
mov
lods
jecxz
pop
dec
in
clc
pop
sub
and
cltd
push
inc
cmp
mov
jmp
enter
and
popf
data16
out
popa
or
aam
push
or
mov
aad
pop
js
push
dec
call
clc
clc
rcll
mov
dec
or
xor
testl
lcall
je
or
xor
enter
int3
dec
and
outsl
sub
sub
jbe
or
xor
pop
cmc
cwtl
lret
js
pop
mov
js
inc
xchg
cmp
stos
pop
add
test
mov
adc
sub
inc
jp
pop
lea
mov
cmpsl
pop
add
add
jo
out
mov
jg
and
mov
rcrb
xadd
fidivl
sbb
inc
gs
cs
xchg
push
mov
pop
jp
aas
movsb
aad
call
pushf
lods
adcb
test
jnp
aas
test
mov
jne
lds
pop
mov
std
lods
int
into
aas
mov
mov
vaddsd
inc
mov
fwait
mov
sub
into
cmpsl
add
sahf
arpl
out
or
add
inc
jg
push
loope
jmp
ficoml
mov
inc
outsl
jmp
dec
je
fcoml
and
and
clc
or
and
pop
and
adc
shl
cmc
fcoml
pop
dec
insl
arpl
mulb
adc
gs
dec
adc
inc
daa
jno
mov
sbb
mov
push
shrb
shl
mov
repnz
aam
cmp
ds
into
aaa
adc
pop
lods
hlt
inc
ret
out
dec
rolb
adc
and
pop
fs
and
sub
lds
pop
lahf
sbb
testb
imul
push
jg
jp
adc
aam
fwait
or
mov
cmpsl
mov
outsb
or
jnp
mov
les
mov
jnp
call
fdivs
in
sahf
inc
mov
xchg
aad
mov
sub
pop
fnstsw
out
test
add
xchg
push
shrb
fistl
add
cld
addb
lds
xorb
sbb
mov
outsl
mul
pusha
mov
pop
and
adc
scas
movsl
sub
int3
jne
add
lahf
call
jg
pop
pop
xchg
or
jnp
ja
daa
ret
push
mul
jp
inc
les
enter
jp
sbb
sbb
mov
inc
add
cs
cli
adc
jno,pt
lods
ds
fidivrs
das
inc
and
gs
or
cmp
sbb
das
or
sbb
dec
sub
lahf
push
dec
bnd
pop
f2xm1
roll
adc
and
cmpsb
lret
sbb
movsl
add
outsb
cmpsb
push
mov
shrl
xor
gs
cs
cli
aam
and
arpl
scas
xchg
jge
mov
pop
dec
sub
inc
cvtpi2ps
jb
inc
rcrb
cmp
cmp
adcb
sbb
adc
shll
jle
fs
repnz
cs
xor
pop
pop
add
mov
xlat
test
test
andb
lcall
sub
bound
adc
into
or
das
xor
cmpsl
mov
add
and
add
inc
cmp
test
test
ljmp
add
cvtpi2ps
clc
ss
icebp
popa
cmp
fisubl
lahf
gs
cmpsl
repz
mov
bnd
nop
mov
jecxz
pop
pop
jo
mov
push
jo
or
add
nop
insl
sub
pop
sahf
inc
jecxz
ljmp
mov
testb
push
sbb
data16
addl
iret
xor
notl
xchg
repz
imul
xchg
sbb
pop
cltd
mov
nop
fiaddl
inc
sahf
mov
mov
push
test
jbe
dec
lahf
inc
mov
lea
imul
or
xor
rcll
jecxz
dec
jo
aam
mov
mov
and
negb
rorl
andl
shll
pushf
rcr
pop
mov
lret
addr16
fisttpll
lods
imul
mov
add
or
push
clc
mov
cltd
jno
daa
enter
and
sbb
mov
dec
dec
loopne
frstor
inc
loope
and
sahf
cmp
jge
mov
out
mov
aaa
aam
in
sbb
mov
sub
xor
sub
loopne
ficomps
sti
adc
rolb
je
sub
mov
sub
jl
mov
xor
adc
sub
mov
in
and
sbb
jo
loope
sti
and
aaa
test
ja
mov
adc
shlb
lock
enter
sti
push
xchg
mov
add
mov
xchg
outsl
lods
mov
inc
and
test
les
cmc
mov
sarl
popf
or
shl
xchg
and
push
bound
pop
orl
cmp
sbb
jbe
and
or
dec
cmpsl
adc
gs
cmp
sub
and
movsb
mov
push
int
ds
out
addr16
adc
in
cltd
cmp
xchg
hlt
add
sub
outsb
and
cltd
pop
loope
ret
enter
ret
inc
lods
enter
xchg
aam
or
mov
lahf
out
mov
or
or
addb
mov
imul
jg
cmp
dec
test
push
std
sbb
mov
nop
xchg
jno
xlat
add
movsb
jb
ret
adc
push
aam
stc
lahf
ret
pop
iret
xor
push
cmp
sub
sarl
int3
inc
ja
mov
fimuls
jecxz
and
xor
js,pt
jg
mov
xchg
inc
insl
aas
xchg
adc
aas
les
push
imul
push
fwait
mov
jbe
popl
fidivs
inc
mov
addb
call
in
fcoml
fstpt
adc
dec
lea
mov
idivb
lds
and
imul
out
sbb
pop
sbb
aas
xadd
jmp
gs
or
push
imul
sub
iret
mov
and
sub
ja
lods
sub
orl
mov
rcrl
lods
fbstp
xchg
sar
cld
xor
aam
std
pop
add
xchg
inc
sbb
push
sbb
inc
out
pop
or
cmp
sub
rcr
pop
xor
xchg
jbe
jnp
shlb
pushl
fadds
xchg
dec
sub
dec
push
test
mov
push
inc
icebp
mov
in
shlb
pop
add
push
aam
popa
test
or
add
inc
leave
insl
leave
dec
cmp
pop
or
add
jns
jo
sti
fdivr
or
dec
dec
imul
daa
lock
leave
fs
xor
popa
mov
call
sarl
adc
sbb
mov
rolb
adc
xchg
or
cmpsl
sbb
adc
stos
nop
out
sub
jnp
mov
push
sbb
xor
pop
in
movb
cmp
jbe
xor
add
add
cld
test
and
inc
aas
jo
movsl
inc
js
es
cmpsl
and
sub
push
xor
out
push
out
jno
xor
sbbb
pop
jo
and
aaa
sbb
int3
daa
adc
push
cmp
shl
mov
sarl
sbb
push
pop
pop
mov
pop
inc
das
jle
rclb
xlat
inc
nop
inc
daa
lods
inc
shl
xchg
push
icebp
adc
jg
push
mov
xchg
xor
jne
fnsave
shrl
lock
pop
jns
sbb
cmp
icebp
push
nop
sbb
add
lods
fmuls
jecxz
sti
mov
mov
mov
push
add
das
test
lret
mov
dec
inc
daa
cli
out
or
jle
and
mov
out
insl
lods
scas
fcoml
bound
or
push
push
out
jl
repz
push
sarb
je
mov
pop
loope
iret
int3
add
sbb
mov
push
nop
pop
add
ss
mov
test
arpl
incb
repz
jne
cs
aam
and
jl
ret
je
add
mov
cmpsb
pop
pop
adc
cld
into
or
fs
xor
xor
decb
cwtl
and
jecxz
push
cmp
sub
mov
and
ds
push
adcb
push
adc
sbb
imul
adc
in
idivb
fdivrl
pushf
xchg
add
sbb
shl
xchg
mov
rcl
xchg
xchg
push
test
jbe
cwtl
adc
xchg
jp
cmp
in
xchg
mov
loope
dec
imul
test
sub
push
lcall
adc
stc
enter
mov
dec
hlt
pop
data16
imul
push
popf
xor
pop
jmp
outsl
inc
xor
lds
xchg
pop
adc
cmp
notl
repnz
inc
mov
push
xchg
or
jnp
lcall
push
push
addr16
pushf
fbstp
and
mov
scas
inc
sbb
pop
mov
pop
pop
xor
add
mov
je
mov
leave
enter
pop
push
and
push
cmp
or
sbb
in
xchg
rcrl
repnz
jg
pop
outsb
push
dec
in
lods
cmp
lret
icebp
push
cmp
pop
iret
lods
dec
xor
ja
dec
add
or
cmpsl
icebp
sbb
mov
popf
dec
divl
jecxz
pop
bound
sub
xchg
lock
in
leave
mov
icebp
int3
ret
mov
and
mov
adc
lret
aaa
cmp
push
enter
pop
add
jns
mov
mov
push
rclb
jns
cmp
add
nop
bound
subb
call
adc
fists
or
push
test
push
inc
cmp
inc
fadd
test
sbb
in
jl
sbbb
inc
sbb
pop
push
clc
inc
fstp
mov
pusha
mov
xor
xlat
inc
incl
mov
push
loope
lcall
rclb
dec
sub
cltd
icebp
and
pop
loop
test
lahf
sti
shll
ret
mov
rcrl
aas
movsb
gs
xchg
dec
add
notl
cmp
adcb
push
sbb
sti
gs
inc
jl
pop
ss
or
pop
push
mull
aas
xchg
sti
rorl
push
pop
arpl
iret
test
pop
lock
or
mov
fldenv
dec
inc
push
fistl
and
fbstp
mull
mov
pop
or
cmpsl
add
ror
in
xchg
test
mov
scas
and
loope
scas
push
pop
aas
mov
fbstp
ret
xlat
or
lcall
jns
sahf
push
in
xor
in
rorb
mov
fsubrs
adc
sbb
push
cli
decl
jo
cmc
imul
jo
push
out
nop
in
pop
or
ss
pop
sti
scas
cwtl
dec
andb
dec
mov
jmp
mov
mov
fcomps
in
cmc
jae
cld
dec
rcrl
mul
mov
iret
in
jnp
adc
shrl
xchg
push
insb
aam
push
imul
push
cmp
push
xchg
mov
inc
rcrl
loope
push
or
fsubs
xlat
hlt
xor
push
out
mov
dec
lret
push
mov
adc
movl
pop
push
fadd
jg
xchg
cmpsl
push
rolb
in
rorb
add
mov
std
xor
jno
adc
ror
test
push
push
push
inc
js
lds
inc
sbb
flds
fldenv
sahf
push
popa
adc
iret
pop
sbb
mov
sbb
cmp
push
cli
adc
mov
xlat
lock
cmp
mov
xlat
add
add
popl
lret
pop
dec
cli
mov
pop
pop
out
cmp
rolb
mov
mov
jbe
je
or
adc
xor
sub
xor
mov
sbb
xchg
adc
das
test
mov
mov
xchg
sub
mov
sarl
out
mov
inc
adc
jp
ss
dec
rclb
add
mov
fdecstp
lret
shl
jno
rclb
jle
mov
out
fistl
int
sbb
sbb
jae
sbb
loope
call
inc
adc
add
cmpsb
dec
xchg
lcall
in
sbb
mov
push
pop
mov
push
and
sbb
push
and
movsl
out
add
jne
pusha
lcall
pop
dec
adc
call
adc
and
jns
push
pop
mull
push
add
sbb
cmp
loop
jp
or
and
dec
cmp
out
popa
push
pushf
dec
js
and
hlt
inc
sti
lods
bound
fcmove
pop
inc
jns
fsubrs
mov
mov
pop
xlat
ds
outsl
xor
imul
sub
pop
stos
xor
xchg
jb
adc
add
out
inc
sarb
inc
testb
pop
fcompl
mov
in
xchg
mov
adc
arpl
adc
not
notl
push
ja
and
sub
inc
test
outsl
mov
nop
add
and
dec
repz
jae
and
out
push
int3
mov
lock
xchg
ss
dec
outsl
loope
dec
je
jge
loop
icebp
mov
ljmp
jp
in
mov
mov
pop
push
rsqrtps
pop
repnz
pop
leave
fs
orb
xor
fnstsw
popa
jbe
imul
das
imul
lahf
scas
push
je
bound
shll
mov
push
pusha
ss
sldt
sahf
jb
mov
mov
push
scas
scas
mov
pop
scas
sub
xor
arpl
ret
cwtl
add
lahf
xchg
xchg
and
and
scas
mov
insl
fimull
fildl
inc
xor
xchg
inc
jae
jmp
jmp
test
cmpsb
cmpsb
jle,pn
dec
ljmp
jecxz
or
pop
clc
test
push
push
insl
add
jecxz
cmpsl
xor
movsb
jle
mov
and
repz
and
mov
xor
xor
add
push
out
adc
stos
popa
jecxz
pop
mov
loopne
pop
aaa
adc
stos
jns
out
pop
xor
inc
test
xchg
dec
dec
ret
sti
add
xchg
mov
adc
sarb
pop
xor
aaa
sub
inc
xchg
daa
es
push
cld
addr16
pop
jno
pop
pop
lahf
subl
mov
scas
and
xor
adc
fsubl
inc
or
and
testb
and
sbb
inc
frstor
stos
jo
outsb
jns
lods
sarl
lea
dec
dec
fstl
jmp
shll
je
mov
inc
aaa
and
mov
mov
or
in
adc
int3
stc
orb
jns
cli
xchg
sbb
cmp
bound
push
mov
das
xor
out
and
cld
cmp
xor
pop
dec
call
testb
in
bswap
out
or
sbb
inc
lret
movsb
jnp
sub
xchg
sbb
subb
pop
add
or
xor
push
shrl
pop
sbb
and
test
inc
jmp
cltd
call
pop
cmpl
in
js
lret
xor
lock
xor
mov
fmul
outsl
xor
out
lods
push
shrb
pop
stos
cmp
leave
fmuls
mul
jb
dec
rolb
clc
fisubs
es
sub
movsl
push
imul
in
test
jecxz
mov
popa
push
cmp
jae
push
int
xchg
jl
dec
jb
pop
lahf
sbb
mov
sbb
cltd
push
adc
mov
dec
dec
push
leave
clc
ss
mov
scas
cmc
xchg
or
xlat
rorl
mov
outsb
or
stos
jmp
outsl
cltd
adc
mov
jae
jns
repz
add
scas
aaa
ljmp
xchg
ss
fwait
sbb
sbb
ljmp
shl
or
sub
jg
repz
pop
adc
aas
jbe
fs
dec
push
mov
rcll
mov
add
add
add
in
pop
mov
jb
sub
xor
pop
roll
adc
fisubs
mov
fldl
das
jno
xchg
add
int3
fldl
mov
mov
pushf
outsb
cmc
adc
xor
jmp
fs
into
jge
mov
pop
fcompl
push
stos
mov
xchg
push
daa
sti
dec
stc
lret
push
jo
ljmp
mov
outsl
cltd
call
xchg
or
loope
add
cmpsl
mov
mov
push
outsl
cs
inc
push
mov
xchg
pop
pusha
aam
dec
cmpsb
mov
mov
addr16
std
add
lcall
pop
loope
adc
stos
or
cmpsb
mov
add
jae
dec
and
adc
enter
aam
jmp
scas
mov
jnp
push
xor
call
push
jnp
add
cmp
sub
leave
xor
mov
xor
sbb
sub
inc
in
ja
or
clc
stos
aas
and
xchg
dec
mov
xor
mov
and
xchg
cmpsl
dec
fcom
jno
cmp
cmpsl
dec
loope
mov
mov
fcompl
pop
cmp
lret
test
mov
cmpsl
daa
iret
stos
out
mov
jae
xchg
xor
push
mov
ja
andb
scas
movl
sbb
jae
lsl
inc
cwtl
rclw
jge
pop
or
mov
xor
gs
mov
adc
or
sub
fstpt
jb
sbb
fstpl
pushf
xorb
sub
daa
mov
add
push
jg
xchg
lods
pop
in
push
add
test
xlat
rcrl
repz
movsl
and
mov
pop
mov
out
out
cmpsb
jl
aam
out
test
xchg
push
or
push
fs
in
pop
int3
inc
cmp
test
sub
mov
jo
notb
xor
repz
dec
pop
cltd
fs
pusha
sub
sub
add
sbbl
decl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
lock
add
pop
sbb
add
add
sbb
inc
aad
add
add
push
mov
add
add
push
stos
mov
add
add
lret
mov
add
sbb
jle
lahf
lahf
add
add
pop
shlb
add
mov
add
mov
xorl
cmpb
add
imul
pusha
add
stos
xchg
add
add
push
adc
mov
add
jecxz
ret
sub
add
add
add
add
add
inc
adc
adc
outsl
pop
sbb
arpl
add
add
mov
add
add
add
add
add
jnp
inc
call
add
add
add
pop
ja
add
add
add
mov
add
add
shlb
sub
add
add
add
add
push
repnz
add
jge
xchg
cmpsl
or
add
add
inc
push
jbe
nop
add
add
xor
add
add
add
and
add
add
aas
movsb
clc
dec
test
add
add
push
xor
jno
pop
mov
add
xchg
push
jb
push
add
add
test
add
add
add
inc
and
add
add
xor
cmp
push
scas
add
fcompl
movsl
rcrl
dec
pop
xchg
add
add
repz
push
pop
adc
add
add
stos
sbb
add
add
pop
adc
add
add
sub
mov
xchg
xchg
add
xor
add
add
scas
mov
add
add
leave
mov
add
add
push
xchg
mov
add
push
lahf
add
add
sub
push
roll
add
add
sarb
add
and
add
add
int
loop
repz
add
add
sub
add
test
stos
add
add
jg
sub
add
xchg
cmp
dec
add
add
test
jb
add
add
rcrl
lock
add
add
dec
jp
es
test
add
add
cld
dec
popa
add
mov
add
add
adc
cmc
cltd
mov
add
add
aad
fcom
pop
mov
add
add
xor
dec
add
add
cmc
push
out
in
adc
popf
loop,pt
mov
add
add
enter
add
inc
popa
push
pop
repnz
add
cmp
cmp
call
add
fisttpll
add
dec
fiaddl
add
add
loopne
xor
add
add
mov
data16
adc
add
add
add
add
push
add
add
fmull
loopne
and
add
and
add
add
sbb
xchg
add
add
fcmovne
sub
xor
add
aaa
mov
fiadds
add
add
sub
in
push
add
add
pop
ffree
je
add
add
add
iret
sbb
add
or
add
add
adc
add
add
inc
push
add
add
dec
inc
adc
add
add
add
jecxz
pop
sub
in
add
add
cltd
call
add
add
sub
add
xor
add
loope
push
xchg
add
add
add
jb
dec
inc
add
add
std
xchg
add
mov
add
mov
sub
cmp
lods
add
add
das
loopne
add
add
add
add
mov
fadds
add
add
negb
add
icebp
pop
mov
add
cmc
iret
add
add
lret
lods
out
mov
add
shl
and
lahf
add
add
ret
jmp
mov
insl
jecxz
test
movsb
add
add
movsb
adc
add
add
add
add
add
push
xchg
xor
add
add
into
adc
add
add
xchg
jns
pop
add
repz
add
add
popa
cld
pop
test
add
adcb
in
add
add
cltd
dec
lds
add
add
fildl
add
add
movsl
clc
mov
add
stos
add
xchg
add
mov
add
xor
add
add
outsb
add
add
dec
dec
fidivl
add
add
add
add
xchg
repz
add
int
pop
ret
add
add
cmp
in
add
add
or
aam
sbb
add
add
imul
add
add
pop
add
add
add
fwait
aam
popf
xor
add
dec
lea
sub
and
add
add
add
add
add
mov
mov
add
add
dec
dec
and
jne
mov
mov
add
add
mov
pop
dec
or
add
add
and
add
add
jmp
add
add
add
mov
rcl
into
add
add
adc
dec
mov
add
jmp
add
add
add
subl
add
add
xlat
or
add
jnp
sti
lea
add
xor
add
add
clc
and
xor
add
scas
xchg
adc
add
popf
or
pop
jmp
add
add
add
dec
or
add
add
cmpsb
insb
mov
add
iret
mov
add
pop
idivl
add
add
xchg
push
mov
add
xchg
xor
jge
add
add
imul
or
arpl
add
add
add
add
arpl
mov
add
xchg
add
add
sbb
push
mov
add
and
enter
add
aad
add
add
scas
add
add
aaa
mov
adc
add
add
add
push
dec
faddp
sti
in
add
add
cmpsb
cmc
ja
add
add
add
push
or
lds
add
add
add
sub
add
add
es
add
pop
lods
add
add
xor
popf
add
add
loopne
and
push
add
add
add
repz
add
jno
add
add
daa
xor
jecxz
add
add
xchg
pusha
jl
pop
insl
add
add
lahf
pop
jnp
add
pushf
xchg
add
add
test
cmp
add
add
cmpsb
ljmp
loope
xchg
addl
add
add
into
stos
daa
add
add
and
jo
add
add
pushf
xchg
add
ds
add
pop
aaa
rcrb
add
add
adc
scas
add
add
add
adc
add
pushf
add
add
repz
mov
add
cli
faddl
add
pop
dec
dec
filds
add
add
in
pop
and
add
add
fld1
outsb
pop
cmpsl
js
add
add
add
add
add
and
test
add
lret
inc
sub
add
sbb
lcall
add
add
cmp
add
add
inc
add
add
cmp
add
add
mov
mov
add
sbb
mov
add
lea
add
xchg
add
add
stc
mov
repz
pusha
add
add
fs
ss
add
xor
ror
add
xor
add
add
or
add
add
sub
xor
add
add
pushf
filds
add
add
add
lods
mov
mov
add
cld
cli
pop
cmp
add
add
gs
mov
xor
add
add
and
add
add
pop
adc
xchg
add
add
mov
add
aam
add
add
mov
and
add
add
incb
add
fsts
inc
leave
add
movsl
inc
add
add
repz
fisttpl
add
call
pop
add
add
jmp
out
mov
add
add
aad
stos
sbb
add
add
mov
repnz
add
lea
addb
push
test
add
add
dec
dec
and
call
pushf
fldenv
aas
adc
rolb
add
add
add
dec
mov
add
add
adc
movb
add
add
add
add
fistl
or
add
push
inc
inc
pusha
out
jne
add
add
mov
sbb
add
add
add
std
sub
add
add
pushf
rorb
add
add
add
das
mov
add
add
stc
mov
imul
and
add
movsl
add
add
icebp
xor
mov
add
ds
mov
xchg
add
add
sub
adc
add
sub
ret
js
or
imul
add
iret
orb
pop
add
add
mov
add
add
xor
add
add
mov
add
add
dec
push
cmp
add
fildl
add
add
or
add
add
in
sub
int3
add
add
mov
add
fimuls
cltd
sbbb
popf
add
add
mov
add
add
rcll
adc
dec
add
add
stos
repnz
loopne
roll
add
add
push
out
mov
add
add
mov
add
add
add
dec
scas
mov
dec
filds
add
add
out
add
add
add
add
stos
add
add
ficoml
add
add
xor
add
ja
pop
or
add
add
add
inc
ds
shrl
add
add
sub
add
add
sbb
add
nop
xor
add
add
incb
add
add
pop
push
xchg
add
add
mov
lds
add
outsb
mov
add
add
xor
add
inc
out
bound
add
sub
add
add
add
pop
mov
cmp
add
add
push
sbb
add
add
push
stos
outsl
add
pop
mov
add
add
or
adc
add
dec
int3
out
das
pop
add
add
and
jae
add
mov
add
add
mov
add
add
add
add
jae
popa
pop
add
rcll
add
add
popf
xor
out
or
add
add
mov
stos
gs
and
add
add
enter
insb
push
add
add
iret
sbb
add
add
push
inc
test
add
mov
add
test
add
cmp
add
add
scas
orl
add
add
repz
bound
add
add
in
arpl
add
daa
pushw
flds
add
add
mov
add
lock
add
lds
add
add
shl
repnz
jge
ret
les
add
aaa
js
or
add
sbb
js
add
add
add
jae
add
add
pop
cmpsl
loop
push
add
add
jbe
andl
add
jno
dec
incl
add
add
add
dec
aam
gs
cld
add
add
outsl
sti
jo
mov
add
add
inc
inc
xor
add
add
mov
add
add
jae
cmp
dec
add
add
movsl
loope
xor
add
add
add
lahf
jle
pop
pop
mov
into
insl
push
push
cmp
add
add
fdivs
mov
add
add
add
loope
jecxz
xchg
dec
add
add
cmp
add
add
add
sbb
xor
add
add
add
xor
mov
lods
add
add
push
fstpt
das
hlt
add
add
sub
push
faddl
add
filds
add
add
pop
add
add
test
movb
add
int
cwtl
pop
add
xchg
into
fwait
pop
and
add
add
inc
movsb
faddl
movl
sub
roll
fmull
add
add
mov
lods
push
push
cmpsb
pop
cmp
add
add
mov
sldt
sub
add
add
sbb
stos
test
add
bound
add
add
lea
mov
add
sub
add
add
pop
add
add
dec
mov
mov
add
cmc
movsb
rcll
add
add
add
outsl
push
sbbl
add
adc
xor
add
add
inc
and
add
add
xor
loopne
jg
add
add
xchg
add
add
imul
xor
add
add
test
lods
push
fiadds
add
add
xchg
add
add
sti
enter
add
sbb
add
add
pop
cmp
add
jno
adc
mov
add
add
sbb
add
inc
add
add
xlat
cmp
sub
add
add
in
fdiv
jle
add
add
dec
mov
add
add
xor
add
add
ja
xchg
pusha
xor
adc
loop
add
xor
add
add
jmp
pop
xor
add
hlt
nop
xor
add
add
jecxz
or
add
adc
add
add
nop
add
add
sti
out
pusha
in
add
add
inc
in
and
add
jmp
add
mov
fstpt
add
add
mov
je
aaa
adc
add
add
add
add
add
orl
add
add
sub
pop
mov
mov
add
add
add
add
add
roll
mov
xchg
fiadds
add
add
cwtl
xchg
cld
push
lret
mov
add
js
add
add
mov
sbb
add
add
inc
mov
add
add
repnz
add
add
cmpsl
gs
push
add
add
hlt
pop
cld
ljmp
pop
mov
iret
add
add
sub
idiv
movl
mov
das
stos
flds
add
add
clc
add
add
add
mov
stos
add
add
iret
xchg
mov
add
add
add
add
add
fnsave
ja
pop
add
add
lea
ret
jbe
add
add
add
sbb
add
add
xorb
add
xchg
push
test
movsb
add
add
xchg
mov
add
add
shrl
cwtl
addr16
add
add
jmp
add
add
sub
sbb
mov
aam
add
add
test
sub
add
add
fwait
xor
jno
add
and
add
add
add
add
movsl
or
add
add
mov
add
add
add
ja
fnstsw
add
add
or
loopne
add
add
out
jne
lds
add
add
dec
fnsave
add
add
mov
mov
mov
add
add
add
add
pop
add
add
or
add
add
or
pop
add
push
add
add
sub
incb
add
add
jp
cltd
mov
add
add
push
mov
add
es
add
add
fbstp
je
popa
add
add
rcll
movsl
je
add
add
out
add
notl
add
add
and
push
int
out
add
add
or
mov
add
pop
flds
add
push
stos
add
add
jae
pop
pop
test
add
mov
add
add
cmp
add
int
add
add
dec
mov
add
fwait
dec
ret
cmp
add
add
add
inc
add
add
inc
lea
movsb
dec
xor
add
add
sbbb
xchg
add
add
add
jmp
add
add
push
mov
add
add
jle
inc
or
add
bound
add
add
mov
add
push
dec
rorb
add
imul
add
add
add
jge
mov
push
add
mov
add
add
add
add
mov
cld
out
movsb
cltd
test
add
add
daa
cmp
add
pop
jmp
add
add
and
add
add
fmuls
sbb
jns
add
add
add
add
push
or
add
daa
enter
add
add
cmp
js
add
test
add
add
inc
add
add
xchg
or
push
adc
add
add
fiaddl
add
or
add
add
pop
or
xchg
add
add
push
pop
sub
roll
add
add
add
enter
add
push
imul
add
int
adc
add
ret
incl
add
add
fsts
add
add
data16
add
and
pop
cmp
add
lahf
add
add
int
dec
ljmp
jo
lcall
add
add
push
add
add
jg
int
xor
add
add
push
mov
into
in
add
add
push
adc
add
insb
stc
add
add
shll
repnz
jl
sahf
cmovnp
add
add
and
mov
add
add
add
adc
shrd
add
add
mov
imul
jg
ja
add
cmc
imul
sub
js
loop
mov
add
add
add
inc
lret
add
add
jno
cmp
aas
in
add
add
pop
add
xor
add
add
imul
add
add
aas
shll
xor
mov
add
sti
ja
mov
lds
add
add
push
add
add
repz
add
inc
movl
out
int
or
add
add
jns
add
add
or
lret
push
dec
add
add
dec
sub
shll
add
add
xchg
xchg
xchg
add
add
dec
xor
add
fiaddl
add
add
imul
add
mov
cs
jmp
add
add
dec
cmpsb
les
add
add
jecxz
inc
dec
add
add
add
icebp
xchg
lahf
xlat
imul
mov
pop
add
insl
mov
add
add
pop
add
cmp
add
add
jb
in
add
add
std
jnp
mov
add
inc
add
add
mov
out
insl
dec
add
add
adcb
sbb
add
add
jge
movsb
add
cmpsb
mov
mov
add
add
aaa
into
mulb
xchg
add
add
icebp
loope
pop
add
in
je
add
add
cli
or
add
inc
pop
lock
jp
add
add
xchg
lahf
fldl
add
add
add
add
stc
rorb
add
add
add
and
add
dec
add
add
pop
lods
mov
add
add
jae
add
add
add
add
std
jnp
loop
add
add
mov
add
add
cltd
out
insl
enter
testb
add
mov
sub
add
test
cmc
add
add
stos
rcr
xchg
add
mov
add
add
xchg
mov
xchg
jb
add
add
jb
adc
fldl
add
add
sbb
add
cltd
push
add
add
xchg
add
add
or
mov
add
add
sbb
adc
add
add
movsb
ret
pop
push
test
add
add
test
stos
xchg
add
add
inc
insb
mov
add
xor
add
add
popa
add
add
shll
add
add
xchg
add
pop
add
add
mov
pushf
add
add
in
dec
and
add
jne
dec
testb
pop
add
add
add
push
ss
mov
sbb
in
mov
add
add
les
add
lret
add
add
mov
xor
mov
je
dec
gs
add
add
jmp
add
add
add
sbbl
repnz
add
add
add
add
jnp
cmp
add
add
or
add
add
dec
scas
xchg
mov
and
add
add
add
add
lahf
data16
add
add
jmp
insb
std
idiv
add
add
iret
fdivs
mov
add
add
pop
popf
ror
add
add
and
add
add
xchg
cmp
pop
add
rcll
lods
dec
test
add
add
cmp
adc
add
add
arpl
pop
cmp
add
add
add
or
js
add
add
inc
fisubrl
add
add
lds
es
add
add
mov
jbe
add
add
leave
add
add
aaa
test
add
loope
add
add
add
das
jo
add
add
mov
das
add
add
cmp
testb
add
push
notl
add
add
add
add
dec
mov
out
add
add
add
xor
addl
pop
and
imul
mov
adc
add
add
add
daa
cmpb
add
fistpll
mov
add
add
add
add
add
test
mov
mov
xor
add
add
dec
in
leave
add
call
add
cld
int3
incb
add
add
mov
xor
cld
rolb
add
add
mov
bsf
add
add
push
push
les
add
add
add
add
add
adc
jecxz
fiadds
add
add
repz
add
pop
int3
lret
add
add
add
push
lock
add
mov
add
add
add
sahf
add
add
and
cmp
loope
add
add
push
sub
jecxz
add
add
jns
cmp
add
into
add
add
test
add
add
pusha
fnsave
add
add
add
add
lds
roll
add
mov
mov
add
je
add
stos
leave
add
add
stc
fdivr
rorl
add
add
notb
add
add
xor
add
add
add
or
cli
bound
push
push
xor
add
add
mov
add
add
dec
add
add
lock
add
add
rol
add
jo
add
add
push
cli
jmp
add
cmp
andb
add
add
inc
lods
imul
add
add
dec
add
add
fsubs
add
add
fnstenv
negb
add
add
pop
jnp
lds
add
add
push
add
add
jmp
jle
add
sbb
add
add
aad
or
pop
add
add
test
push
addl
stos
add
add
add
lret
in
and
add
setl
loope
add
add
lock
add
addb
sbb
add
add
lds
mov
add
add
add
add
in
into
adc
add
add
dec
inc
mov
jge
add
add
sahf
add
add
or
std
and
jecxz
sbb
add
add
mov
inc
inc
add
add
mov
int
add
sbb
add
pop
add
jge
add
add
lock
and
pushf
sub
add
add
add
add
mov
add
add
cwtl
adc
add
add
aam
mov
add
jo
add
add
and
add
add
in
dec
xchg
cmp
add
add
mov
add
and
or
add
add
push
ror
pop
mov
add
add
mov
movsb
push
add
add
xchg
jne
out
bound
add
add
push
add
add
cmovo
faddl
add
outsb
add
add
cltd
and
add
add
pop
aad
aaa
cmp
rcrl
ret
mov
add
mov
stos
mov
add
add
insl
or
and
add
add
add
add
dec
in
jns
or
add
add
sbb
mov
add
add
add
add
add
add
pushl
add
add
add
dec
add
add
ja
jno
add
jmp
add
cmp
aas
addl
mov
test
and
add
add
aad
add
inc
add
add
xchg
push
add
fiaddl
add
add
pop
fwait
inc
and
mov
out
mov
jne
out
std
dec
pop
add
add
xor
outsb
mov
add
add
push
add
add
addr16
xchg
mov
add
mov
add
add
mov
or
add
add
jmp
roll
add
add
into
add
add
and
fidivs
add
add
jnp
sub
cld
push
add
add
into
or
push
add
data16
add
add
add
add
mov
add
push
ja
pop
add
imul
add
iret
aaa
aam
jo
add
add
xchg
cmpsb
in
adc
add
add
pushf
pop
add
stos
fildl
add
add
push
add
add
and
add
add
leave
pop
push
popa
add
add
arpl
jle
popa
adc
add
add
push
add
add
data16
rol
add
add
cmp
add
add
leave
enter
jmp
add
add
cmp
mov
add
add
aaa
mov
insl
lea
add
add
dec
int3
lcall
les
add
add
cmp
add
add
add
jbe
das
push
add
add
jno
inc
add
add
and
add
add
dec
add
add
jo
pop
addl
in
addb
call
add
add
jb
ja
add
add
dec
jmp
add
add
movsl
divb
xor
add
add
adc
add
add
pushf
push
mov
movsb
add
add
pop
xchg
aas
addl
add
add
arpl
add
add
imul
sbb
imul
addb
add
xor
push
scas
hlt
call
add
dec
fidivs
sub
test
adc
xor
add
add
fwait
subb
add
pop
pop
add
add
inc
add
add
pop
dec
test
sub
add
add
sub
add
add
jg
stc
inc
add
xchg
add
add
mov
test
xchg
add
add
mov
das
add
add
rorl
add
mov
add
test
mov
add
add
in
add
add
adc
add
sbb
add
add
cmp
push
sub
lret
icebp
add
add
cmc
stc
and
inc
add
add
outsl
mov
add
add
lds
fs
cltd
add
add
out
lahf
scas
add
mov
add
jp
outsb
popf
int
add
add
xchg
into
mov
add
imul
and
add
xor
jg
mov
xchg
jge
out
fcmovnu
add
add
sti
aad
mov
add
dec
add
add
sbb
in
add
add
insl
movsl
adc
add
add
sbb
add
flds
add
add
test
dec
pop
cwtl
add
add
inc
pop
in
sbb
add
dec
out
roll
mov
add
out
pop
mov
jge
add
add
stos
xchg
test
add
adc
das
and
add
add
adc
inc
cmp
push
sub
add
add
push
sub
add
add
add
lea
rep
stos
mov
add
add
je
jns
fiaddl
add
add
notl
add
add
add
aas
pop
cwtl
dec
faddl
add
add
mov
add
add
mov
inc
xchg
add
jmp
adc
add
add
add
pop
sahf
lods
inc
add
add
mov
add
add
in
adc
icebp
popl
add
add
mov
add
add
lret
fsubr
lea
add
add
add
mov
mov
add
add
mov
add
add
mov
add
adcl
add
cmpsl
bound
jo
add
add
and
add
add
pop
jmp
jbe
add
add
lret
orb
add
add
hlt
jle
mov
add
popa
outsl
jae
add
jne
add
add
mov
add
add
add
aam
add
add
add
or
add
add
out
mov
add
pop
add
add
add
xchg
mov
pop
add
add
setg
add
add
push
test
add
xchg
enter
add
shll
or
add
out
push
shll
or
or
add
leave
add
add
or
aam
add
add
add
add
add
add
add
stos
add
add
in
xor
cmp
add
add
mov
add
inc
add
add
ja
subb
incl
add
add
or
cs
add
add
adc
lret
add
jp
add
add
jns
cmpsb
mov
add
mov
fwait
add
add
mov
adc
add
cmpsb
add
add
mov
add
add
mov
add
add
add
sub
outsl
add
add
pop
insb
jp
xchg
out
add
add
sbb
stos
add
movsl
hlt
add
add
sti
sbb
add
add
push
cmpsb
xchg
push
push
add
add
pushf
sub
add
add
push
hlt
into
mov
add
add
fisttps
and
add
add
pop
or
add
pop
xor
add
add
lock
in
add
add
lods
mov
adc
add
imul
dec
add
add
push
mov
add
add
jbe
ret
dec
add
add
or
add
add
popf
jecxz
scas
add
add
xchg
dec
sbb
imul
mov
add
jp
add
add
iret
mov
xchg
mov
in
inc
adc
add
add
add
bound
add
add
pop
stos
aam
aad
add
add
cmp
rcr
popf
add
add
push
xchg
and
add
add
add
jge
aad
sti
test
add
add
and
add
add
add
add
add
scas
sub
and
add
inc
movsb
cmp
add
bound
add
add
add
mov
sub
add
add
jns
push
sti
aad
add
add
add
jecxz
add
add
push
adc
test
add
add
lret
enter
add
add
cmp
cmp
add
cld
enter
add
cmpsl
add
add
pop
sti
push
or
add
add
pop
xchg
add
aas
scas
add
add
pop
aam
jns
jecxz
add
add
movl
into
pop
add
daa
add
add
add
clc
loope
jnp
add
add
in
push
pop
lds
push
sahf
adc
add
cltd
mov
sub
add
add
cmp
add
add
and
icebp
inc
add
popa
mov
int
mov
pushf
mov
or
xchg
aaa
add
add
test
adc
add
and
jg
xchg
jne
mov
cmp
jle
add
add
inc
jp
add
mov
add
in
mov
add
mov
add
add
stc
inc
xor
add
scas
add
add
adc
lea
add
outsl
push
fdivs
das
mov
or
jge
add
or
cmc
rcrb
fwait
add
add
ja
loop
pop
incl
add
add
add
add
add
out
roll
pusha
add
add
out
sub
sub
mov
pop
lret
add
int
add
add
xchg
push
pop
jle
add
add
or
xchg
inc
add
add
mov
add
and
add
add
test
xchg
add
add
and
imul
repz
mov
add
sub
add
add
sbb
inc
add
add
sub
sub
orl
add
aad
cmp
add
scas
addb
add
dec
inc
leave
lcall
js
les
add
leave
out
sub
add
cmp
add
add
xchg
shll
jecxz
add
add
adc
add
add
cmp
sub
add
add
jns
jno
jno
add
add
stos
call
add
add
inc
aad
add
cmp
add
add
pop
rcrb
add
sub
pusha
push
ljmp
cmp
add
add
mov
mov
add
add
add
scas
dec
mov
add
das
sbb
add
add
xchg
add
add
mov
xchg
add
add
push
xor
icebp
data16
add
push
and
add
add
inc
std
sti
xchg
cmp
add
add
mov
inc
xor
ret
inc
test
add
pop
xlat
add
add
insl
dec
data16
or
add
add
mov
add
add
add
add
add
pop
or
pusha
ds
add
add
cmpsl
aam
stos
sbb
add
add
add
dec
add
add
popa
xchg
cmp
insb
add
add
mov
mov
cltd
xchg
fimull
add
sbb
mov
xchg
pusha
fcomps
pop
cmc
clc
and
add
add
stos
popf
xlat
adc
add
add
xchg
roll
add
add
jmp
add
add
dec
mov
repnz
gs
add
add
cwtl
add
add
xchg
jg
add
add
cmc
add
add
add
add
or
ja
push
inc
add
add
test
xchg
add
inc
xor
dec
add
out
faddl
add
add
roll
add
add
insb
add
jmp
add
add
xchg
lock
add
in
add
add
mov
mov
add
add
add
add
jne
pusha
adc
add
add
add
out
icebp
cmp
test
add
add
bound
in
pop
lcall
sti
stos
add
dec
and
add
add
mov
add
add
cli
add
add
jmp
add
filds
add
add
icebp
add
add
fidivrs
addr16
add
add
jnp
pop
testl
add
add
and
rolb
add
add
stc
xchg
pop
adc
add
add
popf
imull
and
add
add
add
push
arpl
lods
mov
add
out
add
add
iret
cmc
sbb
add
popa
adc
pop
inc
cltd
sbb
add
add
mov
sbb
xchg
aas
sbb
jp
add
add
imul
sbb
add
add
push
dec
adc
add
arpl
push
add
stc
sbb
add
add
scas
add
add
and
fiaddl
add
lds
popl
add
add
add
mov
push
add
add
stos
in
xchg
mov
add
xor
add
add
add
add
aaa
push
xor
add
rcr
add
add
cmp
mov
roll
add
add
lods
cs
add
add
push
push
sbb
pushl
add
add
jo
add
sub
add
add
xor
das
add
add
int
and
add
in
inc
jne
add
mov
add
popa
jne
enter
add
lock
sub
sbb
lahf
sbb
bound
add
adc
add
add
sub
add
add
add
add
loope
mov
add
xor
add
add
call
add
add
xchg
bound
add
mov
add
add
jbe
mov
add
adc
add
add
xchg
mov
dec
add
add
test
push
std
insb
add
add
adc
add
add
add
sub
add
add
sti
lahf
add
xchg
push
add
add
pop
dec
out
add
add
add
and
pop
jecxz
add
add
jo
stos
stos
roll
add
add
add
add
add
and
add
add
testl
add
add
sbb
jb
add
movsl
cmp
add
add
sub
add
add
push
add
add
cmp
add
sub
add
add
add
cmp
add
mov
add
outsl
popa
andb
ljmp
stc
std
ds
lea
add
add
add
add
xor
popa
insl
add
dec
dec
add
add
or
in
mov
add
add
sti
xor
cmpsl
aas
mov
add
fwait
add
ret
inc
add
add
lods
sbb
ficompl
add
add
xchg
cli
nop
das
or
gs
push
add
mov
add
add
sub
inc
mov
add
add
xor
add
add
xlat
add
add
add
mov
or
add
add
leave
push
pop
incb
add
add
pop
cmp
add
cmp
add
add
repz
jle
or
add
inc
and
outsb
mov
add
lock
aam
add
add
add
sub
add
add
inc
cmp
sbb
add
add
add
incl
add
add
dec
xor
add
add
pushf
fs
rolb
add
add
int
cld
add
mov
add
add
dec
addb
or
add
add
xchg
dec
call
addl
movsb
add
add
stos
mov
add
repz
add
adc
add
add
mov
jmp
add
std
pop
sub
add
add
test
pop
add
add
mov
ret
add
add
add
das
stc
adc
add
stos
repz
shll
add
cmpsl
pusha
icebp
in
add
inc
push
add
add
icebp
cmp
add
add
aad
mov
add
sub
mov
add
add
ret
rcrb
imul
cld
cmp
add
add
mov
add
add
add
and
push
add
add
sub
rolb
movl
xor
and
add
add
xchg
xor
arpl
add
lods
scas
cltd
jne
add
add
pop
pop
imul
test
add
icebp
add
add
xchg
jns
adcb
add
add
and
imul
add
stos
mov
fldln2
ret
add
add
out
push
adc
add
add
mov
add
add
add
dec
sbb
add
add
jp
add
add
add
add
xchg
and
add
add
add
add
ja
sub
add
loope
add
add
inc
enter
dec
add
add
lods
jno
insl
jecxz
add
add
jns
ret
mov
add
pop
add
add
xchg
aas
mov
shl
add
add
sbb
pop
int3
arpl
add
add
add
add
das
sti
cwtl
cltd
add
add
inc
sbb
add
add
sub
add
add
jae
mov
add
mov
add
add
adc
add
add
jmp
loopne
add
add
mov
jle
mov
and
rol
add
add
xchg
adc
add
add
push
xchg
add
add
shlb
add
add
popf
push
xchg
or
pop
add
add
cmpsl
fisubrs
add
add
sar
add
pop
add
add
iret
push
movsb
daa
data16
add
inc
xor
inc
or
repnz
cmp
xchg
xchg
ret
dec
add
add
cmp
aad
pusha
add
add
leave
mov
add
add
add
arpl
jge
jae
add
add
and
push
jmp
pop
or
cmpsl
add
fcomps
mov
add
add
out
repnz
add
add
jge
mov
add
xchg
dec
add
add
aaa
repnz
insl
int3
add
add
jg
int3
sahf
movsb
jmp
add
add
add
add
add
cmp
add
add
dec
jbe
out
in
add
add
jle
add
sbb
add
add
dec
outsb
sub
dec
or
add
add
fwait
jo
mov
add
add
inc
lcall
add
add
in
daa
fdivl
add
add
int
cmp
add
movsl
or
add
add
add
sub
add
add
sub
add
add
push
out
addl
pushf
mov
add
add
test
mov
xchg
add
add
sar
dec
add
add
sbb
ljmp
add
xor
ret
rolb
xchg
js
rorb
add
sub
mov
add
add
imul
add
jno
andb
add
add
int
sbb
movsb
add
add
pop
enter
movb
add
push
inc
faddl
add
add
jg
xlat
or
add
add
add
add
sub
push
mov
add
rcll
cwtl
add
sarb
add
add
xor
add
add
push
loopne
jbe
cmpsl
add
add
adc
inc
add
xor
add
add
push
add
add
nop
add
add
cmc
dec
cld
jns
add
add
add
outsl
inc
mov
pop
add
add
icebp
or
push
sub
add
add
out
rcll
clc
add
add
add
push
lahf
popa
jns
add
add
cmp
add
add
imul
push
lods
add
add
add
jge
push
add
mov
stc
nop
add
add
sti
loop
mov
add
loopne
add
add
in
jp
add
add
lea
add
add
sbb
add
add
add
xlat
inc
mov
add
add
jg
add
add
push
mov
add
add
xchg
mov
add
add
lret
add
adc
jns
add
add
fcomip
push
pop
or
add
add
adc
add
add
xchg
insl
pop
add
jl
add
add
lea
icebp
inc
loope
add
add
jg
xchg
push
mov
add
add
dec
out
add
add
add
aas
insb
mov
add
add
je
xchg
xor
add
add
add
sbbl
rcll
add
add
add
roll
add
add
fcmovu
fs
mov
cld
int3
cwtl
clc
lcall
and
ficoml
add
add
mov
fdivr
xchg
sldt
add
pop
jp
cmc
fistpll
add
add
insl
sbb
add
rclb
add
add
cmpsl
pop
or
ss
add
add
stos
add
add
pop
dec
push
lea
add
popa
add
add
sub
add
add
jb
es
in
xchg
add
add
xor
add
call
add
stos
add
add
les
shrl
add
mov
fidivl
add
add
pop
cwtl
mov
add
aam
ljmp
add
add
xchg
add
add
bsf
add
add
test
add
xchg
fbld
add
xor
add
add
shll
jnp
ja
add
add
dec
out
aas
jmp
add
divl
add
cmc
adc
add
add
lods
add
add
movsb
cli
test
jge
add
add
fwait
dec
mov
add
adc
add
jnp
add
add
xor
or
add
add
mov
add
pop
add
add
ja
enter
add
add
pop
jg
out
out
movl
scas
push
movl
add
add
enter
add
add
pop
insb
mov
xor
add
add
mov
packuswb
add
lcall
pcmpgtd
add
mov
fimull
add
add
andl
cmp
add
add
loope
add
add
jp
loopne
add
add
in
mov
les
add
add
das
mov
add
add
adcb
add
hlt
stos
add
shrl
and
add
add
cwtl
nop
jle
or
pop
scas
xchg
jle
add
add
es
add
mov
add
add
and
add
push
sbb
add
add
scas
push
cmpl
add
jne
ret
outsb
add
add
or
add
add
mov
fstps
add
add
mov
add
add
add
mov
leave
xor
mov
add
scas
nop
inc
sbb
add
add
add
xchg
add
sbbb
cmp
add
add
adc
add
add
gs
add
insb
movl
xchg
std
mov
mov
add
add
or
dec
out
add
add
add
add
scas
out
cmpsb
mov
add
add
movsb
fcmovne
loope
add
add
pop
stos
sub
add
jno
das
add
addl
add
test
jle
add
add
add
xchg
add
add
inc
sub
add
add
enter
add
add
cmp
sahf
add
imul
add
add
inc
add
add
inc
jne
orb
add
add
mov
add
ficoms
add
add
xchg
fdivl
add
add
cld
xor
shrb
add
jmp
jl
add
add
add
sbb
add
add
push
push
movsb
in
sbb
add
add
cmpsl
dec
add
imul
mov
add
rcr
pop
leave
add
add
and
test
add
xchg
add
add
int
test
jp
add
add
lcall
add
add
add
add
jg
jg
cwtl
xchg
add
add
js,pt
fbld
add
addb
add
add
shrl
add
add
add
add
stc
imul
add
add
mov
jg
cmpsb
add
add
inc
adc
fs
add
add
or
add
add
out
add
add
cmc
adc
add
add
fwait
xor
add
add
lods
call
sub
add
add
jg,pt
jne
add
add
mov
cmp
dec
loopne
add
add
divb
add
add
add
imul
add
add
mov
add
add
add
cmp
add
add
xchg
and
pop
add
add
out
loopne
jg
add
add
repz
add
sub
add
add
ret
add
dec
call
add
add
aad
inc
add
add
add
into
iret
shll
add
add
scas
add
add
movl
and
add
add
cltd
add
add
add
fildl
add
add
jns
add
jne
add
add
jecxz
inc
jecxz
cld
add
add
mov
aam
add
add
iret
fnsave
add
add
inc
popf
fstpl
imull
add
add
mov
and
add
add
gs
add
adc
add
add
mov
and
add
clc
daa
dec
jg
xor
add
add
mov
data16
mov
add
fwait
add
add
std
push
div
push
add
add
add
jmp
movsb
add
xor
add
xchg
rcrb
add
add
pop
movsl
lock
call
add
lock
sub
add
adc
add
add
xlat
push
enterw
add
out
add
add
and
add
add
addr16
je
add
add
das
cmpsl
aam
dec
add
add
xchg
mov
inc
add
cmp
add
bsf
repnz
add
sub
mov
add
add
add
add
add
mov
bound
lods
inc
add
add
or
clc
shl
incb
add
add
add
cmp
add
add
dec
add
add
mov
fildl
add
add
mov
cli
add
add
xchg
add
add
pop
in
add
add
call
je
add
mov
add
add
or
inc
ljmp
popa
xchg
add
mov
or
add
add
mov
push
faddl
add
add
add
mov
mov
test
add
add
cmp
xlat
mov
add
add
jne
clc
ret
add
das
jp
add
add
mov
loope
add
add
jo
in
hlt
dec
add
add
addr16
mov
add
add
mov
dec
pop
add
add
loope
dec
mov
mov
add
add
les
add
lahf
dec
add
add
xorl
add
cmp
pop
sbb
add
add
jnp
pop
pop
add
sub
add
aaa
outsl
mov
cmp
add
add
fildl
add
add
add
add
add
push
and
add
add
mov
insb
jg
in
add
add
adc
pop
add
dec
pop
add
add
pop
out
pop
push
fiaddl
add
add
in
add
add
xchg
inc
jg
add
cmpsl
cmpsb
add
add
imul
add
icebp
notb
sahf
sti
mov
add
add
and
push
add
add
or
mov
out
ficompl
add
push
add
popa
xlat
add
add
mov
jnp
add
add
ja
jle
add
add
jo
mov
add
add
add
add
mov
xor
add
fidivrs
les
add
add
adc
aad
add
add
push
shll
add
add
int
adc
add
in
test
add
add
add
xor
cmp
add
add
inc
and
dec
add
add
in
cmc
mov
mov
add
add
pop
or
mov
add
adc
aaa
add
add
lahf
jbe
incl
add
add
adc
add
add
fiaddl
add
add
imul
int
add
add
cmp
jle
into
adc
add
add
mov
add
add
xor
add
add
add
pop
xchg
popf
mov
add
dec
lock
divl
add
add
add
add
add
add
add
add
lret
xor
pop
mov
add
inc
test
add
add
and
add
add
mov
loopne
add
add
add
sub
add
add
push
jne
movsl
out
add
add
adc
repnz
sbb
stos
icebp
add
add
test
and
mov
add
sbb
add
add
add
add
add
idivl
jmp
add
add
insl
add
add
outsl
scas
jp
add
pop
add
add
stc
and
mov
add
add
inc
loop
mov
add
add
xor
pop
add
add
or
add
add
sub
add
add
add
fcomp
add
adc
add
add
lods
iret
sbb
icebp
push
add
add
rolb
cmpsl
xchg
add
add
cmp
add
xchg
je
add
add
bound
add
sub
sub
xlat
mov
sbb
add
jecxz
add
add
inc
pop
movsb
add
add
flds
pop
jge
add
add
add
ss
test
add
add
cmp
test
jmp
dec
cmp
add
jp
add
add
std
mov
add
add
lret
add
lea
add
fimuls
mov
add
add
add
pushf
gs
add
stos
mov
add
fadds
add
add
sub
test
add
sahf
inc
stc
add
add
add
decb
mov
add
add
or
xchg
lret
add
sarl
movsl
add
inc
xor
add
add
or
fwait
sbb
add
add
push
add
add
mov
cmp
add
dec
loopne
add
add
xchg
inc
pop
enter
add
sub
and
fldenv
add
add
add
add
add
icebp
ret
daa
mov
idiv
mov
addl
add
sub
jne,pn
add
add
jg
sub
add
add
sbb
add
add
add
add
cmpsl
add
add
cmpsb
push
sarb
add
loope
add
add
xchg
out
mov
push
mov
add
add
lods
out
add
add
add
lock
add
add
add
xor
das
push
push
leave
xchg
add
add
and
pushf
jmp
stos
pop
xor
add
out
push
mov
add
mov
add
add
add
dec
dec
adcb
jb
add
add
cwtl
sbb
add
add
add
out
add
add
pushl
push
xchg
sbb
add
add
imul
add
ja
mov
add
add
inc
cmp
add
adc
push
push
push
push
add
add
jns
mov
pop
add
add
xchg
sub
insl
dec
push
add
add
in
xor
std
mov
add
add
mov
scas
in
add
add
jne
repz
loopne
sldt
add
sub
add
addr16
add
add
lret
in
jne
add
add
fildll
iret
add
hlt
imul
add
jmp
sldt
add
cmp
pop
arpl
add
add
and
jle
add
or
jnp
call
add
add
popf
add
add
jae
popf
mov
add
add
popf
xchg
and
push
add
fsubrl
add
add
lcall
add
add
jno
movsl
mov
add
add
bnd
call
add
inc
test
add
test
add
pop
add
add
cmp
scas
loop
add
add
leave
and
stc
add
and
add
add
arpl
add
add
xor
push
add
add
ja
add
cmpl
add
lds
test
add
pop
add
add
jge
ss
add
add
add
add
das
pop
pop
pop
stos
add
add
jg
int3
pop
mov
add
add
and
add
add
int3
mov
add
add
xor
add
add
cld
pop
add
mov
add
add
dec
mov
add
add
adc
pop
movb
stc
jle
add
or
in
fdiv
mov
cmp
add
add
test
xor
add
add
movsl
and
cmp
add
insb
add
add
lahf
xchg
sahf
lret
aas
adc
add
add
push
je
pop
add
add
pop
cmovae
add
mov
add
add
loope
mov
add
cmp
cmp
add
add
sbb
int
add
xor
add
add
xor
add
add
push
cmp
add
add
push
sbb
add
push
add
xchg
add
add
or
sbbb
add
and
push
add
add
pop
inc
lods
test
add
scas
add
add
jg
fisubrl
add
add
add
mov
add
add
mov
add
add
rcr
sbb
add
pusha
add
add
sbb
cmpsb
mov
scas
add
add
and
add
in
add
add
push
pop
pop
add
pop
adc
cmp
icebp
add
add
into
mov
inc
dec
adc
add
add
mov
xchg
scas
add
add
outsl
ffree
cmp
add
loopne
fs
mov
add
cmp
fiadds
add
add
test
add
add
sub
or
test
add
add
out
or
add
add
add
add
mov
add
add
dec
or
rorb
add
add
sti
out
ss
add
out
out
add
add
sbb
add
rorb
add
add
sbb
add
fiadds
add
add
hlt
nop
lds
push
insl
in
lahf
mov
add
add
dec
and
filds
add
add
cmp
add
add
push
xchg
cmp
sub
add
add
inc
sub
add
add
jmp
cltd
decl
pop
add
add
xchg
jbe
out
arpl
add
add
les
sub
lea
pop
or
jbe
pop
stos
or
add
sub
add
inc
pusha
add
add
aas
dec
jg
outsl
xor
add
add
je
xor
mov
lods
movl
add
add
pop
add
add
popa
dec
pop
jo
sti
add
add
mov
add
jmp
rol
or
add
add
rol
cwtl
sub
add
jb
cmp
add
inc
add
add
mov
cmpl
add
pop
dec
mov
add
add
inc
pop
add
push
push
add
add
cmpsl
pop
jne
push
add
add
inc
in
cld
insl
out
push
add
add
pop
movsl
xlat
les
add
sub
add
add
push
xor
lret
add
add
popa
stc
xor
in
add
add
mov
add
add
add
add
mov
inc
xchg
add
aad
add
add
fst
mov
add
add
and
data16
add
add
xchg
ss
mov
add
add
psubusw
in
fiadds
add
add
test
and
xchg
mov
sarl
sbb
add
push
add
or
add
rcll
mov
xchg
add
add
inc
sbb
mov
dec
add
add
fldcw
add
gs
add
data16
add
rcrl
xor
test
add
add
adc
ja
mov
pop
jge
add
add
push
add
add
out
dec
xchg
or
add
sti
add
add
jns
scas
jnp
inc
add
add
dec
mov
or
add
add
mov
fsubp
add
jo
add
add
mov
rclb
add
mov
push
adc
add
add
add
add
loop
add
add
jp
cmpb
add
in
add
xchg
add
add
fisttps
add
add
mov
add
add
push
sahf
icebp
push
add
cmp
add
add
and
insb
ror
add
add
xor
aad
add
add
cwtl
lock
int3
sbb
add
add
mov
add
add
daa
mov
add
add
imul
add
add
movsl
add
test
add
add
mov
add
add
add
add
je
sahf
inc
add
add
lret
fs
aas
push
add
add
mov
add
jns
add
add
cltd
or
aad
add
add
fsubr
inc
and
lret
add
add
add
jae
add
sbb
add
add
pop
lds
dec
xchg
add
add
cltd
dec
sarb
add
add
push
outsl
clc
jmp
add
add
jge
sub
add
push
add
add
xor
add
add
add
scas
fs
mov
add
movsb
jl
lds
add
add
pop
pop
dec
add
fisttpll
jno
sbb
add
add
mov
addb
add
test
add
pop
add
add
inc
jg
cmpsb
xchg
add
add
or
enter
add
add
cmp
lcall
add
movsl
daa
pop
pop
mov
add
push
sti
push
mov
add
add
pop
inc
add
mov
add
add
pop
dec
mov
add
add
mov
add
add
add
add
add
inc
sbb
add
add
and
in
daa
mov
push
test
icebp
add
lods
ret
add
add
sub
test
aam
add
add
dec
shrb
arpl
add
add
jo
inc
add
orb
add
int
lcall
add
pop
add
add
test
sbbl
add
add
mov
xchg
add
sar
add
add
idivl
push
sbb
add
add
outsl
in
rolb
iret
add
add
pop
fs
lret
add
add
stc
nop
and
add
inc
les
add
add
mov
add
add
sbb
fcoms
add
or
xchg
add
pop
or
add
add
push
mov
sti
add
add
jecxz
loop
inc
jge
add
add
add
mov
add
add
cmp
andl
cs
cmp
pop
sbb
inc
add
loopne
add
add
imul
inc
mov
int3
xchg
add
add
add
add
add
sti
sahf
out
jbe
add
add
dec
ss
add
add
aam
insl
add
cmp
sbb
push
add
add
push
test
popf
and
aad
rcr
add
jle
add
add
dec
xor
lds
test
clc
ds
add
add
mov
pop
mov
adc
add
add
lods
js
adc
loope
add
add
jns
add
or
add
rcll
ror
add
add
sbb
repnz
testb
add
fistpl
add
xchg
or
inc
xor
mov
add
jae
jb
stos
pop
add
add
std
pop
cmp
add
add
mov
aaa
daa
hlt
add
add
sbb
add
add
das
push
jnp
add
adcl
aaa
roll
add
add
idivb
add
icebp
jo
insl
add
xchg
add
add
lret
loope
pmullw
add
add
sub
lock
jns
add
add
popf
jl
add
jle
add
add
insl
mov
push
mov
add
leave
add
add
and
add
add
add
pop
les
jge
add
add
cs
add
add
xchg
insl
stos
add
std
push
add
add
popa
adc
outsb
add
add
add
loopne
add
add
add
add
out
add
add
push
clc
adcl
stos
aaa
jns
add
pop
add
xchg
jge
das
insb
add
add
add
add
add
jmp
add
fwait
sub
add
add
out
add
add
insl
push
pop
jb
add
add
ljmp
repnz
add
add
shrl
mov
add
das
scas
xchg
lahf
add
add
inc
mov
fisttps
add
add
and
jp
add
lock
add
xchg
lret
add
cmp
add
add
mov
pop
das
dec
mov
push
add
add
jne
adc
pushf
add
add
out
sub
add
add
in
test
addr16
je
add
add
mov
push
mov
add
in
add
popl
jmp
add
xor
add
add
aas
add
add
cltd
sub
dec
mov
jnp
inc
hlt
add
push
sub
add
add
dec
out
mov
add
add
popa
mov
add
add
popf
loope
sti
add
data16
add
add
dec
mov
add
jle
insb
rcrb
add
add
das
push
lds
add
jbe
add
add
loope
test
add
and
sbb
add
add
add
add
add
imul
movsb
jg
add
add
adc
adc
fcmovne
add
add
arpl
push
add
add
add
add
adc
fidivl
add
lds
in
add
add
add
mov
add
add
add
sub
pop
fdivrl
add
add
aaa
lods
outsb
push
add
inc
push
add
add
add
mov
inc
cltd
add
add
inc
fisubs
add
add
cmp
xchg
cmpsb
add
in
add
add
push
mov
add
add
jmp
inc
cmp
add
add
dec
cltd
dec
jl
add
add
add
xor
sub
add
add
and
mov
add
add
in
stos
push
loop
add
add
pop
inc
push
decb
add
add
pop
data16
in
add
add
lahf
rorl
out
add
adc
test
or
add
add
cmpsb
push
mov
add
add
loope
xchg
dec
add
in
test
cmp
sti
push
lods
imul
add
adc
test
add
add
push
cltd
lret
and
add
add
pop
or
add
add
sub
add
add
add
add
in
add
add
or
add
stc
and
add
add
inc
and
add
cs
add
add
push
jmp
jns
add
add
lock
add
mov
sbb
and
pop
fwait
mov
add
add
ret
sub
or
add
add
and
push
add
inc
push
add
add
test
push
sbb
add
inc
inc
mov
jmp
add
add
clc
add
add
idivl
or
add
add
dec
mov
adc
outsl
fwait
add
add
and
add
add
stc
inc
or
add
add
push
pop
ss
mov
add
xor
sbb
add
add
or
les
add
jns
leave
mov
add
add
add
jo
add
add
lods
test
mov
add
int3
add
add
gs
fcompl
pop
pop
add
add
pop
cmp
add
add
adc
and
add
add
xlat
jl
lret
add
xor
mov
outsl
add
add
pop
mov
sub
sbb
add
add
cmpsb
inc
repnz
mov
add
mov
add
add
mov
cmp
adcb
mov
or
add
add
shlb
cmp
add
add
mov
inc
stos
sub
dec
xchg
rolb
and
add
add
movl
add
add
lock
popfw
mov
add
add
xchg
add
mov
add
add
pop
les
mov
cmp
cmpsl
dec
std
add
add
orl
add
mov
hlt
leave
rolb
add
add
movsb
add
add
shll
push
add
jnp
add
add
std
add
add
add
mov
dec
sti
add
add
mov
cmp
add
add
das
xor
add
outsb
push
and
out
add
add
cmpsl
pop
dec
mov
add
add
icebp
inc
enter
add
add
sti
addr16
mov
add
add
sub
ret
add
add
sub
push
inc
test
cmp
dec
mov
mov
add
testb
add
and
popl
add
add
shlb
xchg
mov
fstpl
lret
add
add
add
xchg
lods
jmp
add
add
mov
add
add
seta
mov
add
add
sahf
add
add
sub
xchg
add
add
sub
add
lcall
es
rcrl
add
push
xor
add
add
add
add
jbe
ror
add
add
je
sbb
sahf
lea
add
add
add
add
add
decl
shrb
add
add
das
lret
or
add
add
ja
mov
add
int
add
add
inc
push
stos
mov
add
add
pop
cmpsl
push
aas
pop
mov
jns
jl
add
push
jge
add
add
or
add
add
movsl
pop
cmp
add
add
add
inc
add
add
jne
cmp
dec
in
add
add
mov
add
add
sub
add
and
addr16
add
add
jb
mov
add
add
lret
add
inc
push
add
add
jmp
in
add
add
cmpsb
cmp
add
add
and
enter
add
jnp
sbb
add
add
pusha
jbe
adc
jae
iret
jno
add
add
popf
or
add
add
pop
add
add
push
mul
mov
add
add
iret
mov
jnp
loop
add
add
adc
testb
add
inc
add
mov
add
add
roll
add
add
mov
daa
cmp
add
add
leave
xchg
add
data16
add
arpl
and
add
add
xchg
popf
push
add
add
arpl
add
test
add
add
cld
fdivs
add
mov
repnz
movsl
and
add
add
mov
xchg
add
add
insb
mov
add
add
pusha
int3
and
add
add
scas
and
add
hlt
testb
add
cmp
pause
cmp
add
add
pop
fs
stos
inc
add
add
jno
mov
adc
add
add
sahf
xor
movb
add
movsl
push
jo
mov
add
add
inc
hlt
pop
aad
add
add
add
in
xchg
out
push
jg
add
add
sub
add
add
add
add
lahf
bnd
adc
fiadds
add
add
lret
add
pop
int3
cmp
add
sbb
add
add
loope
nop
xchg
add
add
add
movsb
fiadds
add
add
mov
js
add
add
add
xor
push
test
add
cli
js
and
add
add
sub
rcrb
add
add
aas
add
add
lret
fmul
adc
add
add
mov
rolb
add
add
ret
cmp
add
outsb
aas
faddl
jg
add
add
add
add
add
mov
add
add
cmp
push
lret
add
add
rcrl
loopne
add
add
dec
sbb
add
add
add
sbb
xor
add
add
inc
cmp
add
popf
pop
add
add
cmp
lea
add
add
lea
add
add
clc
xor
add
data16
add
outsl
jp
inc
add
add
xchg
aam
xchg
inc
imul
add
out
icebp
cwtl
add
jae
add
add
xor
outsb
sub
sub
add
add
lods
into
mov
adc
add
add
or
add
add
add
mov
add
add
mov
add
add
sti
cld
xchg
mov
add
add
gs
shr
shll
jne
mov
add
add
sbb
add
add
mov
add
add
cmp
in
loopne
ret
add
dec
jl,pt
add
rcl
add
add
fldl
add
add
xchg
test
insl
add
add
adc
add
in
add
add
jmp
and
add
add
jbe
nop
ja
jge
add
add
icebp
popa
lahf
add
aaa
clc
add
add
lea
add
add
xchg
push
pop
les
push
add
add
inc
inc
xchg
add
lret
add
add
aas
es
add
pop
and
add
add
mov
fldcw
add
sub
add
add
addb
add
out
pop
pop
clc
inc
add
add
mov
add
popl
add
add
mov
cltd
jbe
add
add
lods
push
pop
or
add
add
lret
mov
mov
add
add
mov
stos
lret
add
add
rcrb
or
add
add
insl
test
loopne
add
add
add
add
ds
cld
out
cmp
pop
add
cltd
add
add
sub
inc
lock
add
add
pop
add
add
popa
jge,pt
add
sub
add
add
mov
and
add
add
mov
add
add
add
add
add
fldl
pop
lcall
and
mov
add
xchg
or
in
add
add
add
imul
fisubrl
add
lahf
test
dec
lea
add
add
add
enter
add
addl
and
xchg
ror
add
add
or
fimull
add
mov
add
addl
add
in
test
mov
add
add
add
add
add
incb
add
add
push
add
add
mov
add
mov
ja
inc
hlt
adc
add
in
add
add
jmp
xor
add
add
pop
std
add
add
inc
mov
xor
add
mov
repnz
add
add
mov
xchg
fiadds
add
add
pop
mov
push
lcall
test
add
or
add
add
sub
add
add
add
dec
jp
js
add
add
in
aam
add
pop
cli
add
add
fucomip
pop
cmc
sbb
add
add
xchg
lea
add
add
add
xchg
rolb
add
cltd
add
add
and
push
add
add
add
mov
jle
xor
add
add
pop
stc
pop
pushf
add
repz
add
add
jae
mov
add
add
mov
add
add
cwtl
leave
add
in
add
add
add
pop
inc
jle
add
add
fbstp
inc
inc
and
or
add
add
add
inc
adc
add
add
fdivs
add
mov
add
add
add
leave
push
enter
add
add
inc
sub
scas
add
add
add
and
add
add
sub
add
push
xor
int3
jecxz
add
add
push
pop
out
adc
add
jecxz
add
add
pop
in
fiaddl
add
add
mov
xor
add
add
add
scas
add
add
add
pop
movsb
sbb
add
daa
pop
lods
sub
add
add
add
jno
dec
popf
imul
mov
push
mov
add
test
add
adc
inc
subl
add
stos
enter
add
add
cmp
inc
add
add
add
add
movsl
cmp
cmpsl
movsl
js
add
add
pop
add
add
pop
pop
jge
add
mov
add
add
pop
or
cmpsl
stc
add
add
mov
sub
jl
add
add
and
dec
pop
add
add
sbb
ffree
adc
add
add
push
js
ss
add
add
push
lods
fwait
lods
add
xchg
add
add
or
add
add
jl
sar
cmp
and
sub
add
add
int
adc
add
stos
jg
stos
clc
sahf
add
add
test
jnp
add
add
jg
rcrl
add
add
lea
mov
add
idiv
lea
add
add
shll
outsl
loop
add
add
xchg
sahf
mov
jb
add
add
mov
add
add
push
add
add
adc
add
add
hlt
addr16
in
ret
add
or
out
add
add
cmc
mov
add
add
dec
mul
jne
add
add
add
add
add
add
out
in
sub
cmp
add
add
pop
jns
rolb
add
ret
add
add
imul
bound
add
add
mov
add
add
add
sti
stos
lea
ret
jle
add
add
dec
loopne
ds
add
add
repz
repnz
bound
add
add
out
add
add
sub
outsl
stos
add
add
aad
loopne
add
repz
add
add
dec
popf
inc
mov
add
les
fs
add
add
movl
lds
add
add
mov
add
add
addb
add
add
ds
add
fwait
daa
add
add
jecxz
into
hlt
xchg
ljmp
call
add
add
jmp
sbb
add
add
inc
outsb
jae
sbb
imul
add
add
dec
mov
sldt
add
mov
lock
add
add
jg
dec
add
add
add
icebp
jmp
add
add
mov
movl
icebp
testb
add
cmc
fldenv
add
add
lret
sub
add
add
jg
lock
jle
add
add
dec
mov
add
cs
insl
insb
les
adc
add
mov
add
add
and
add
loopne
add
add
and
push
pop
jge
add
add
and
test
add
add
add
mov
popa
push
xor
add
mov
cltd
add
add
cltd
cmpb
add
add
mov
sub
xchg
mov
add
add
movsl
add
add
stos
add
mov
add
add
add
xchg
push
or
jo
add
add
fldl
cmc
shrl
add
dec
push
cmp
add
or
add
add
iret
add
add
mov
addb
add
decl
filds
add
add
cmp
jmp
add
sbb
xchg
jp
add
add
inc
cmp
add
add
add
and
pand
roll
xchg
mov
mov
add
add
mov
jns
dec
mov
mov
add
add
mov
add
shrl
add
add
enter
mov
fcom
in
pop
jl
add
add
ret
add
add
add
jo
add
add
cmovle
test
jmp
add
add
add
orl
nop
xchg
int
add
add
test
add
add
jnp
adc
fwait
add
add
in
loope
cmp
add
add
jb
stos
add
add
popf
push
xlat
iret
add
mov
add
jp
dec
jb
add
add
sub
add
add
dec
stos
loop
add
add
xchg
or
add
std
push
sub
mov
xchg
dec
adc
mov
imul
loopne
cmpsb
add
add
mov
and
add
add
jge
add
xchg
das
add
add
or
xchg
add
add
std
js
sarb
add
add
lds
test
add
insb
adc
add
add
lock
add
push
sbb
cmp
inc
add
add
aaa
ljmp
add
add
add
add
add
ds
dec
push
sbb
add
add
pop
mov
test
add
add
leave
dec
mov
add
add
xchg
sbb
xchg
add
add
dec
out
dec
add
mov
add
add
xor
lcall
and
sbb
add
add
pop
push
ja
add
add
add
pop
es
or
add
add
mov
add
add
lahf
xor
add
sub
add
xchg
add
add
inc
mull
add
add
pusha
cli
or
add
add
cvtdq2ps
push
mov
fwait
xchg
and
mov
add
add
mov
into
ja
add
add
mov
add
add
subl
add
adc
add
add
testl
xlat
add
sbb
pop
shlb
add
add
add
push
add
frstor
add
outsb
or
add
add
mov
lods
out
add
add
add
and
add
add
sub
dec
xor
add
add
lods
loop
add
jb
add
add
test
rorb
add
add
test
mov
dec
and
add
add
add
dec
add
add
idivl
add
add
inc
mov
add
add
outsl
cmp
add
cmc
xor
add
add
insb
xchg
popa
pushf
aaa
add
add
lret
sbb
add
mov
roll
fisubrl
add
add
and
mov
add
xorb
add
add
add
add
mov
add
or
add
add
add
add
and
cli
pop
xchg
les
add
add
in
lock
into
lahf
add
add
pop
cwtl
aas
popf
cmp
add
add
dec
sbb
mov
add
xlat
cmp
push
add
add
mov
cmp
add
add
xchg
sbb
add
add
dec
in
or
add
cmp
add
add
adc
add
add
add
out
xchg
xorl
add
sahf
cwtl
add
add
aad
lods
insb
in
push
add
add
adc
jecxz
mov
add
add
add
add
mov
add
add
push
push
pushf
addr16
add
add
outsb
pop
add
lahf
incl
add
add
mov
add
jge
mov
add
add
add
add
mov
add
add
sbb
add
addb
add
mov
add
add
rcll
dec
add
leave
or
add
add
divb
add
add
add
add
mov
mov
add
add
add
rclb
jae
aaa
add
add
jne
and
out
add
add
cmpsl
push
je
add
cmp
add
add
int3
cwtl
mov
add
in
mov
add
sub
push
add
dec
add
ret
fld
dec
push
filds
add
add
dec
push
mov
add
add
test
add
add
popf
add
add
or
shlb
add
fstl
out
add
add
add
pop
add
add
or
lods
jno
sub
add
add
mov
inc
add
push
mov
cltd
mov
add
add
loopne
pop
es
add
add
shrl
and
add
stos
repz
adc
add
add
jo
push
out
repnz
add
mov
add
add
jo
stc
add
add
add
imul
call
add
add
xchg
add
add
ljmp
or
sbb
add
add
fdivs
rcr
add
add
ja
ss
add
jge
add
add
push
ret
add
add
xchg
push
sub
pop
add
add
jns
xchg
add
xchg
xchg
push
sbb
test
add
add
mov
mov
add
add
add
add
or
add
add
push
lock
sbb
add
add
add
lods
add
add
addr16
ja
mov
add
add
mov
add
add
daa
arpl
add
popa
test
add
add
test
scas
or
add
add
out
xchg
fiaddl
add
add
push
das
pop
add
clc
cld
add
add
jnp
ss
loope
add
add
push
popa
pusha
inc
jg
add
add
jae
sbb
add
ljmp
inc
test
popl
add
add
cwtl
stos
and
add
add
push
lret
mov
pop
add
add
iret
stos
js
inc
icebp
add
add
insl
lret
inc
sub
add
stos
jge
add
cli
add
add
xchg
movsl
add
mov
add
add
scas
push
sub
add
add
in
imul
add
add
iret
pop
and
add
add
stc
enter
cwtl
add
add
pop
mov
jle
add
add
xchg
movsl
in
or
add
add
adc
add
add
jge
inc
jle
add
popa
add
add
aaa
test
add
add
dec
clc
int3
loope
xchg
add
add
scas
mov
cli
mov
add
add
push
icebp
pop
cmp
add
add
out
jbe
cmpsb
sub
add
add
lds
add
add
sub
add
add
add
add
inc
mov
insl
int3
add
add
in
inc
loop
loopne
add
add
and
bound
add
add
add
add
lahf
dec
or
add
add
fcoml
add
add
add
mov
testl
add
add
ja
das
pop
inc
add
add
lods
sub
or
add
sbb
sbb
add
add
add
xor
add
add
mov
or
add
sub
push
push
add
add
adc
sti
add
add
lods
adcb
adc
int
add
add
add
pop
aas
inc
ljmp
bound
inc
scas
pop
add
add
jg
dec
sub
add
add
add
mov
sub
jp
add
add
roll
mov
add
add
bound
scas
add
orl
add
sbb
insl
cli
mov
add
imul
adc
jp
add
lock
add
add
iret
add
add
add
lret
or
add
add
dec
xchg
or
add
mov
add
add
stos
cmpsb
mov
add
ret
add
add
out
call
add
scas
int3
add
add
xor
add
add
or
into
pop
xlat
push
add
add
imul
add
add
jne
sahf
lds
add
add
jg
mov
mov
sti
or
pop
add
data16
add
add
adc
lea
add
add
les
das
xchg
roll
add
sbb
add
add
js
idivl
add
add
in
and
les
add
add
loope
add
ret
add
add
sbbb
jne
add
add
js
xchg
int
stos
add
add
adc
add
add
add
inc
lea
add
add
nop
or
jb
add
add
push
jb
add
mov
add
add
in
daa
cmp
add
add
pop
fnsave
add
add
inc
aad
aad
add
cmpsb
add
add
aas
add
fists
hlt
sahf
je
dec
jl
add
add
add
faddl
add
add
lcall
pop
inc
cmp
mov
add
push
add
add
shll
add
add
mov
add
add
lret
or
scas
add
ret
add
add
pushf
add
add
inc
out
mov
add
add
fisubs
add
add
cmpsl
push
xor
add
jnp
cld
outsl
not
add
add
pop
pop
push
xlat
add
repz
add
add
pop
push
lods
jne
add
add
inc
sbb
fsub
push
add
add
popa
orl
add
testl
pop
add
add
cmc
mov
add
add
add
roll
add
add
mov
add
add
or
fiaddl
add
add
add
add
adc
or
add
add
add
xchg
push
add
push
add
xchg
add
add
pop
add
add
or
mov
add
fs
add
add
xchg
add
add
mov
test
cmpb
add
fwait
repz
add
roll
push
mov
add
add
xor
addr16
mov
add
add
jne
and
add
xor
in
add
add
out
xchg
add
add
jns
stos
pop
rolb
add
ljmp
add
add
add
add
rolb
add
add
das
add
add
subl
add
add
sub
add
add
jg
jp
shr
add
add
outsl
daa
inc
add
lods
jg
add
add
inc
insl
xchg
aad
add
add
shlb
out
insl
push
add
add
push
sbb
push
add
lfs
add
add
imul
add
add
add
add
pop
sahf
jmp
add
push
mov
add
add
push
add
add
fldl
add
add
stos
enter
xor
add
add
sbb
add
add
ret
fiaddl
add
add
add
inc
fisubrl
add
adc
sbb
in
add
add
mov
add
push
leave
arpl
out
add
add
gs
xor
add
add
repnz
add
pop
fbstp
add
add
or
sbb
add
push
dec
dec
sub
add
xor
add
add
lea
add
sub
mov
add
add
xor
add
xor
scas
sahf
and
pcmpeqb
add
add
je
mov
add
daa
push
movsb
and
add
add
jno
mov
add
add
fldl
add
add
add
push
add
add
inc
xor
mov
add
enter
add
add
cmp
cmc
add
outsb
add
add
movsl
push
xchg
movsb
inc
das
add
add
fdivrs
push
in
stc
inc
add
add
pop
into
out
add
repnz
add
add
enter
sub
add
add
subl
add
popl
out
add
call
sbb
add
add
adc
jg
mov
add
add
sti
dec
add
xchg
addb
add
sub
and
es
add
add
inc
and
mov
cmp
add
add
lret
add
out
addb
add
int
sbb
add
shll
lcall
add
add
inc
add
add
jg
sbb
pop
add
add
fisubl
add
add
divl
xchg
add
add
sar
clc
dec
adc
add
add
add
add
stc
fisubrl
imul
add
add
jge
and
add
mov
add
add
or
fistpll
add
add
cmc
adc
xchg
jmp
add
add
ficomps
loop
test
add
add
lods
pop
jnp
add
icebp
jge
add
add
xor
add
add
mov
cmp
rcll
push
cmp
add
fwait
add
add
imul
add
add
int3
add
add
add
add
sti
mov
add
add
xchg
into
loopne
sub
add
add
repz
push
adc
add
add
test
jg
sub
or
add
add
xor
sbb
add
mov
sub
add
add
out
les
jge
add
add
mov
lahf
add
add
adc
add
add
cmp
add
add
dec
lahf
scas
add
sbb
add
add
jecxz
stos
xor
outsb
add
add
dec
movsl
call
add
add
jbe
lods
add
ss
add
add
inc
pop
jge
cmp
add
add
addl
push
push
add
add
std
inc
dec
sub
add
outsb
add
add
mov
dec
rcrb
add
je
ret
add
add
das
mov
add
add
or
adc
notb
and
add
add
jp
sbb
add
add
lret
jnp
stos
data16
add
add
lock
testb
add
ret
testl
fildl
add
add
inc
ret
add
add
jbe
mov
add
add
mov
