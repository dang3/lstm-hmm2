jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
aaa
aaa
cmp
cmp
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
cmp
js
mov
xchg
xchg
lea
mov
mov
mov
dec
mov
dec
inc
dec
mov
lea
lea
mov
mov
lea
dec
inc
dec
mov
cmp
je
jmp
cmp
jg
mov
mov
lea
xchg
mov
mov
lea
mov
mov
mov
xchg
xchg
mov
lea
mov
inc
inc
dec
mov
xor
divl
test
jne
cmp
jne
lea
mov
dec
inc
dec
xchg
mov
dec
inc
dec
mov
lea
mov
mov
mov
mov
mov
xchg
mov
inc
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jl
cmp
jg
inc
inc
cmp
js
mov
mov
lea
mov
dec
dec
dec
dec
jne
xchg
inc
lea
mov
mov
lea
mov
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jne
mov
xchg
mov
mov
cmp
jb
lea
dec
dec
inc
mov
mov
dec
mov
mov
lea
xchg
mov
mov
lea
dec
inc
mov
cmp
je
jmp
cmp
jno
mov
mov
mov
lea
lea
mov
xchg
xchg
mov
inc
lea
mov
xchg
xchg
mov
lea
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jb
xchg
lea
mov
lea
lea
mov
mov
mov
xchg
mov
mov
lea
mov
mov
mov
mov
cmp
je
jmp
cmp
jno
mov
mov
mov
lea
lea
mov
xchg
xchg
mov
inc
lea
mov
xchg
xchg
mov
lea
dec
mov
push
mov
push
mov
push
mov
push
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
cmp
je
jmp
cmp
jl
cmp
jg
inc
inc
cmp
js
mov
mov
lea
mov
dec
dec
dec
dec
jne
xchg
inc
lea
mov
mov
lea
mov
mov
mov
sub
mov
cmp
jne
mov
lea
mov
lea
inc
dec
xchg
mov
lea
mov
dec
dec
dec
je
mov
lea
mov
mov
mov
push
mov
mov
xor
call
mov
cmp
jne
lea
mov
dec
inc
dec
xchg
mov
dec
inc
dec
mov
lea
mov
mov
mov
mov
mov
xchg
mov
inc
inc
mov
mov
mov
call
cmp
jne
mov
xchg
mov
mov
cmp
jb
lea
dec
dec
inc
mov
mov
dec
mov
mov
lea
xchg
mov
mov
lea
dec
inc
push
mov
mov
xor
call
mov
cmp
jg
mov
mov
lea
xchg
mov
mov
lea
mov
mov
mov
xchg
xchg
mov
lea
mov
inc
inc
dec
cmp
js
mov
xchg
xchg
lea
mov
mov
mov
dec
mov
dec
inc
dec
mov
lea
lea
mov
mov
lea
dec
inc
dec
lea
mov
push
jmp
cmp
jne
mov
lea
mov
lea
inc
dec
xchg
mov
lea
mov
dec
dec
dec
je
mov
lea
mov
mov
mov
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jno
mov
mov
mov
lea
lea
mov
xchg
xchg
mov
inc
lea
mov
xchg
xchg
mov
lea
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jb
xchg
lea
mov
lea
lea
mov
mov
mov
xchg
mov
mov
lea
mov
mov
mov
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
cmp
ja
mov
mov
mov
lea
xchg
mov
lea
mov
dec
xchg
xchg
mov
mov
mov
dec
je
lea
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jg
mov
mov
lea
xchg
mov
mov
lea
mov
mov
mov
xchg
xchg
mov
lea
mov
inc
inc
dec
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
lea
push
mov
add
movb
push
push
push
call
mov
cmp
ja
mov
mov
mov
lea
xchg
mov
lea
mov
dec
xchg
xchg
mov
mov
mov
dec
je
lea
movl
movl
lea
push
call
push
push
push
call
cmp
jne
mov
xchg
mov
mov
cmp
jb
lea
dec
dec
inc
mov
mov
dec
mov
mov
lea
xchg
mov
mov
lea
dec
inc
movl
movl
lea
push
call
decb
cmpb
jne
mov
pop
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
pop
add
add
add
add
pop
add
add
add
add
add
jae
add
data16
xor
add
xor
xor
pop
add
add
add
xor
xor
add
pop
add
xor
xor
add
data16
add
add
add
jae
add
add
push
mov
add
mov
mov
cmp
jne
mov
xchg
mov
mov
cmp
jb
lea
dec
dec
inc
mov
mov
dec
mov
mov
lea
xchg
mov
mov
lea
dec
inc
push
push
push
call
mov
push
mov
push
call
mov
mov
mov
cmp
jne
lea
mov
dec
inc
dec
xchg
mov
dec
inc
dec
mov
lea
mov
mov
mov
mov
mov
xchg
mov
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jne
mov
lea
mov
lea
inc
dec
xchg
mov
lea
mov
dec
dec
dec
je
mov
lea
mov
mov
mov
mov
mov
movl
mov
cmp
ja
mov
mov
mov
lea
xchg
mov
lea
mov
dec
xchg
xchg
mov
mov
mov
dec
je
lea
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jg
mov
mov
lea
xchg
mov
mov
lea
mov
mov
mov
xchg
xchg
mov
lea
mov
inc
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
ja
mov
mov
mov
lea
xchg
mov
lea
mov
dec
xchg
xchg
mov
mov
mov
dec
je
lea
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jl
cmp
jg
inc
inc
cmp
js
mov
mov
lea
mov
dec
dec
dec
dec
jne
xchg
inc
lea
mov
mov
lea
mov
mov
mov
pop
ret
imul
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
push
cmp
testb
mov
mov
xchg
xchg
sahf
sahf
repnz
fwait
xchg
test
mov
repnz
test
test
repnz
test
test
sahf
mov
xchg
lahf
mov
repnz
mov
test
popf
xchg
test
loopne
sahf
sahf
repnz
repnz
repnz
mov
repnz
repnz
xchg
repnz
repnz
repnz
jge
jne
or
adc
xor
jne
cli
mov
shlb
repnz
mov
adc
mov
sbb
mov
push
shlb
repnz
shll
repnz
shll
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jge
or
xor
sub
add
xor
mov
xor
jge
jne
cmp
cli
jnp
cmp
mov
cmp
fisubl
mov
mov
mov
jge
cli
jnp
push
jge
cmp
mov
mov
mov
jge
cmp
mov
jnp
push
xchg
jge
ret
bnd
push
jnp
cli
jge
push
jge
into
cmc
mov
jnp
add
add
jb
repnz
sub
sub
div
add
repnz
sub
cmc
mov
jnp
sbb
repnz
repnz
bnd
es
cmc
mov
mov
mov
jne
sbb
add
repnz
es
repnz
jge
es
cmc
mov
jnp
push
jge
es
loop
mov
jnp
adc
jge
loop
mov
jnp
push
jge
es
loop
mov
jnp
adc
or
jge
push
jge
xlat
adc
repnz
jge
cmp
mov
jnp
sbb
jge
push
cmc
hlt
jnp
and
and
hlt
mov
jge
cmp
mov
jnp
jne
adc
jne
push
idivb
push
jne
xacquire
es
mov
jne
repnz
adc
adc
add
mov
jnp
or
cmp
fidivrs
push
cmp
repnz
loop
mov
jne
mov
jge
cmp
mov
repnz
bnd
cmp
shlb
mov
repnz
bnd
cli
mov
mov
jge
push
jg
repnz
adc
pushf
repnz
xchg
push
repnz
adc
ret
xor
adc
pop
scas
xor
repnz
jge
xchg
jge
cli
jge
decb
inc
jb
sub
lahf
repnz
ret
cmp
xchg
repnz
ret
xor
lods
repnz
inc
hlt
mov
loop
shl
repnz
test
xchg
pop
sbb
repnz
xchg
sbb
pop
and
xchg
arpl
sbb
repnz
repnz
repnz
jb
testl
addr16
inc
repz
adc
cmp
repnz
idivl
loop
xor
and
adc
jecxz
sbb
adc
adc
cli
bnd
bnd
jnp
dec
adc
adc
les
add
dec
adc
adc
fstpt
jnp
xor
jae
or
adc
jnp
push
cmp
cli
push
mov
repnz
sti
push
mov
repnz
jl
or
push
mov
adc
xacquire
cmp
push
sbb
adc
mov
or
add
repnz
jl
or
cmpsl
push
jl
hlt
lds
cmpsl
or
adc
adc
mov
jl
or
mov
xchg
cmp
or
xchg
cmp
or
mov
lds
cmpsl
or
or
adc
cmc
xor
and
cmpsl
or
push
mov
cmc
xor
adc
repnz
or
xor
jl
push
mov
jp
or
xor
jl
or
push
mov
adc
xacquire
pop
scas
xor
jge
mov
xor
push
mov
mov
adc
repnz
cli
push
mov
lds
push
sti
push
mov
lds
out
push
mov
add
push
mov
cmc
xor
adc
repnz
sti
push
mov
lds
push
cli
push
mov
jl
push
mov
jp
pextrw
xor
push
mov
jl
push
mov
lds
out
push
mov
jp
push
mov
lds
push
sti
push
mov
jl
push
mov
lds
push
cli
push
mov
add
push
mov
lds
out
push
mov
add
push
mov
cmc
xor
adc
repnz
pextrw
xor
jl
push
mov
les
jl
adc
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jb
xchg
lea
mov
lea
lea
mov
mov
mov
xchg
mov
mov
lea
mov
mov
mov
movl
cmp
jne
mov
lea
mov
lea
inc
dec
xchg
mov
lea
mov
dec
dec
dec
je
mov
lea
mov
mov
mov
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jl
cmp
jg
inc
inc
cmp
js
mov
mov
lea
mov
dec
dec
dec
dec
jne
xchg
inc
lea
mov
mov
lea
mov
mov
mov
mov
call
mov
cmpl
je
mov
cmp
ja
mov
mov
mov
lea
xchg
mov
lea
mov
dec
xchg
xchg
mov
mov
mov
dec
je
lea
mov
cmp
je
mov
subb
mov
mov
cmp
jg
mov
mov
lea
xchg
mov
mov
lea
mov
mov
mov
xchg
xchg
mov
lea
mov
inc
inc
dec
mov
nop
xorb
nop
cmp
jl
cmp
jg
inc
inc
cmp
js
mov
mov
lea
mov
dec
dec
dec
dec
jne
xchg
inc
lea
mov
mov
lea
mov
mov
incl
mov
cmp
jne
cmp
jno
mov
mov
mov
lea
lea
mov
xchg
xchg
mov
inc
lea
mov
xchg
xchg
mov
lea
dec
mov
call
mov
cmp
ja
mov
mov
mov
lea
xchg
mov
lea
mov
dec
xchg
xchg
mov
mov
mov
dec
je
lea
mov
push
mov
push
call
cmpl
je
mov
push
call
mov
cmp
ja
mov
mov
mov
lea
xchg
mov
lea
mov
dec
xchg
xchg
mov
mov
mov
dec
je
lea
cmp
jg
mov
mov
lea
xchg
mov
mov
lea
mov
mov
mov
xchg
xchg
mov
lea
mov
inc
inc
dec
cmp
js
mov
xchg
xchg
lea
mov
mov
mov
dec
mov
dec
inc
dec
mov
lea
lea
mov
mov
lea
dec
inc
dec
push
mov
push
call
push
call
ret
mov
pop
ret
add
outsb
add
add
add
add
add
add
add
je
jae
fs
insb
and
add
in
add
cmp
js
mov
xchg
xchg
lea
mov
mov
mov
dec
mov
dec
inc
dec
mov
lea
lea
mov
mov
lea
dec
inc
dec
mov
mov
pushl
call
mov
mov
add
xor
add
mov
dec
cmp
je
xor
add
inc
and
cmp
jmp
jmp
ret
jne
cmp
jne
lea
mov
dec
inc
dec
xchg
mov
dec
inc
dec
mov
lea
mov
mov
mov
mov
mov
xchg
mov
inc
inc
movb
cmp
jg
mov
mov
lea
xchg
mov
mov
lea
mov
mov
mov
xchg
xchg
mov
lea
mov
inc
inc
dec
mov
mov
pop
ret
lea
push
mov
add
mov
cmp
ja
mov
mov
mov
lea
xchg
mov
lea
mov
dec
xchg
xchg
mov
mov
mov
dec
je
lea
call
call
call
call
test
jne
mov
jmp
movw
cmp
jne
mov
xchg
mov
mov
cmp
jb
lea
dec
dec
inc
mov
mov
dec
mov
mov
lea
xchg
mov
mov
lea
dec
inc
call
lea
mov
pop
ret
push
mov
add
mov
cmp
ja
mov
mov
mov
lea
xchg
mov
lea
mov
dec
xchg
xchg
mov
mov
mov
dec
je
lea
cmp
jne
lea
mov
dec
inc
dec
xchg
mov
dec
inc
dec
mov
lea
mov
mov
mov
mov
mov
xchg
mov
inc
inc
push
call
mov
cmpl
je
push
call
call
cmp
jne
mov
lea
mov
lea
inc
dec
xchg
mov
lea
mov
dec
dec
dec
je
mov
lea
mov
mov
mov
mov
pop
ret
add
popa
fs
jae
js
cs
insb
add
add
popa
outsb
and
js
and
add
andl
jae
movl
cmp
jno
mov
mov
mov
lea
lea
mov
xchg
xchg
mov
inc
lea
mov
xchg
xchg
mov
lea
dec
mov
mov
mov
lea
call
cmp
jl
cmp
jg
inc
inc
cmp
js
mov
mov
lea
mov
dec
dec
dec
dec
jne
xchg
inc
lea
mov
mov
lea
mov
mov
ret
mov
ret
lea
add
mov
add
xor
xchg
jg
lea
stc
add
mov
shr
stos
enter
leave
lock
fsubrl
dec
sti
add
add
dec
mov
stc
outsl
add
dec
xchg
push
add
cmp
data16
add
inc
mov
je
add
add
add
add
add
lea
mov
add
add
outsb
daa
and
add
add
mov
xor
push
loopne
add
mov
push
fisubrl
daa
mov
jmp
test
ret
sbb
add
add
add
jae
nop
or
add
gs
mov
mov
mov
push
cmp
add
loopne
in
jp
push
add
outsb
add
add
xor
xchg
add
into
add
ja
idivl
add
lds
fistpll
mov
movsl
jle
and
sub
add
add
add
add
das
clc
outsb
lock
in
add
add
add
mov
jmp
jle
xorb
push
add
outsb
mov
jbe
fsubp
add
xchg
add
xor
dec
add
js
mov
pusha
cmp
imul
je
mov
nop
je
adc
int3
mov
addb
add
add
pop
add
dec
add
add
add
push
pop
push
add
pusha
sub
push
jp
xchg
ljmp
add
fidivs
inc
adcb
add
push
jp
enter
jp
pop
daa
stos
fidivl
or
insl
jns
dec
ds
add
loope
inc
gs
out
test
jge
cmp
mov
inc
add
and
pop
adc
pop
jns
out
ficompl
jmp
mov
and
data16
lock
add
cmpsl
andl
mov
add
idivl
mov
shl
add
jns
dec
and
add
inc
add
mov
add
call
cmp
or
add
imul
mov
xor
ljmp
in
out
pop
pushf
add
push
clc
cmovge
add
add
dec
lock
add
xchg
add
iret
mov
add
push
jle
sub
loop
sub
pop
add
out
hlt
rorl
mov
lahf
sbb
add
xchg
sbb
or
fimuls
les
push
dec
lret
xchg
push
add
outsl
jp
repz
pop
jmp
imul
hlt
clc
push
dec
and
add
dec
jl
aad
add
xchg
add
adc
add
daa
nop
xor
in
icebp
inc
jge
pop
mov
xorb
push
jg
push
mov
insl
pop
div
push
sub
pop
jnp
add
mov
ret
add
popa
inc
sahf
add
test
add
or
imulb
pop
push
cmp
add
cmpsl
add
mov
jl
adcl
cmp
and
mov
xor
mov
lock
scas
cmp
inc
mov
sub
xchg
mov
jle
inc
add
mov
mov
jb
in
mov
add
adc
inc
adc
sahf
add
das
jo
dec
mov
add
add
daa
out
test
ja
xlat
out
add
add
sub
add
adc
jg
loop
mov
popf
insb
adc
aas
jnp
cmc
sarl
mov
push
xchg
imul
mov
fadd
aam
xor
adc
jae
add
push
aam
mov
push
xchg
in
mov
sbb
out
imul
scas
cmp
lds
sbb
mov
das
imul
sub
lea
mov
sbb
sbb
cmc
aaa
mov
rorb
add
jmp
add
pop
cmp
and
fdivs
test
jo
mov
scas
movl
cmpb
out
inc
movsb
fistpl
loope
addb
aam
sbb
push
cmpsl
call
daa
pop
inc
dec
cmp
mov
inc
jl
cwtl
and
add
xor
adc
and
adc
push
pusha
push
xorb
push
fimuls
inc
sub
pop
outsl
repnz
pop
xchg
js
push
fdivl
sub
mov
cmp
add
cmc
pop
fwait
adc
fldcw
data16
sbb
add
or
movsb
sbb
int
bound
orl
inc
loop
lcall
push
fsubr
xor
outsb
jno
leave
test
push
xchg
xlat
out
jg
fwait
in
mov
add
mov
icebp
and
out
push
mov
jle
fsubs
testl
mov
mov
fs
sahf
loope
pop
cmc
adc
dec
add
pop
mov
psubw
test
lcall
cli
dec
lods
call
aaa
loope
sbb
xor
lods
std
cmp
push
xor
sbb
inc
xchg
or
movsb
jb
cmp
pop
pop
mov
ljmp
xor
add
shll
scas
insb
sbb
in
mov
sub
sub
mov
leave
mov
push
popf
imul
dec
arpl
sbb
fxch
sub
repz
jbe
mov
lea
push
add
inc
ljmp
cltd
outsb
pushf
mov
sbb
inc
popf
cltd
xor
cmpl
pop
add
dec
jo
divb
pop
jecxz
sbb
inc
std
gs
cwtl
mov
push
mov
mov
addb
cs
iret
cmp
pop
sub
mov
adc
inc
das
mov
out
mov
and
and
sub
ljmp
adc
dec
jns
scas
cmpsl
pop
inc
mov
icebp
jmp
icebp
cld
pop
add
xchg
loope,pn
pop
xchg
loope
xchg
pop
clc
mov
addr16
push
jmp
jle
cmpsl
lods
cld
aam
fwait
cli
ret
lock
or
les
sbb
dec
clc
shl
bound
subb
popa
lret
or
lods
test
les
xchg
xchg
test
inc
push
cmpsl
xor
sbb
leave
add
xchg
mov
ds
push
push
dec
out
subl
push
lcall
pop
lds
out
mov
and
arpl
rclb
or
pop
xor
aaa
xchg
mov
mov
push
imul
and
subl
mov
or
stc
mov
jnp
mov
jne
mov
mov
mov
jmp
dec
dec
dec
jns
in
cs
inc
ljmp
xor
sub
pop
sub
addr16
movsb
ret
xlat
pop
mov
push
cmp
loope
aaa
sub
pusha
or
cmp
xchg
sbbb
out
xchg
xchg
jmp
xorl
popf
insb
dec
jo
add
push
and
stos
std
fdivrs
insb
jg
imul
sub
scas
fcmove
push
fisubrl
imul
inc
jb
out
jno
out
pop
inc
frstor
push
push
xchg
gs
popa
pop
es
push
arpl
xchg
inc
jnp
sbb
je
imul
scas
fwait
scas
sub
loopne
mov
inc
out
push
mov
andb
ja
mov
inc
sbb
fs
sbb
jae
jo
or
hlt
incw
cld
lods
fmulp
je
sbb
addr16
add
jnp
mov
dec
mov
adc
push
xchg
adc
and
roll
push
in
cmc
mull
push
pop
daa
pop
test
cmp
movsl
cmp
jmp
lods
and
push
push
sbb
sarb
lahf
jbe
adcl
sti
ficoms
push
inc
mov
push
repz
xchg
jo
pop
pop
shr
mov
mov
addr16
mov
fiaddl
sbb
adc
mov
sbb
mov
sbb
sahf
inc
add
pop
lahf
xor
fmul
addr16
pop
sub
scas
pop
push
iret
lcall
mov
lcall
outsb
aam
push
test
fimuls
lods
sub
dec
mov
lret
sub
push
mov
adc
push
push
movb
shlb
cmp
pop
push
movsb
idivl
test
lret
sub
mov
sbbb
bswap
sahf
test
cmc
fsub
shll
mov
lret
es
xchg
mov
and
lds
add
or
lods
iret
push
cwtl
mov
std
pop
out
pop
sar
sub
je
fcom
dec
or
sbb
cmp
sbb
xlat
and
fidivrs
adc
jnp
shrb
add
mov
data16
cmp
sbb
pop
xchg
xlat
mov
or
in
xor
sar
inc
cmpsl
and
rorb
aad
jne
nop
or
in
ret
inc
jno
pop
flds
fidivrl
repz
js
and
call
lds
adc
add
gs
jmp
movsl
ds
loopne
inc
and
sub
push
cs
stos
stos
lds
aam
dec
out
mov
jecxz
xor
std
or
lods
cwtl
outsb
es
mov
inc
mov
loop
add
lret
push
sbb
mov
neg
lock
fsubs
mov
jo
adc
and
int
cmp
insl
jmp
sahf
out
cmpsl
pop
push
mov
ret
cld
inc
hlt
xchg
lret
add
mov
xor
push
cmc
test
xchg
sarb
sub
jp
ret
jg
pushf
es
jp
out
mov
out
push
or
repz
or
lods
out
iret
addr16
test
mov
mov
jp
add
test
pop
push
mov
or
push
leave
mov
dec
dec
mov
jecxz
add
xchg
push
shll
imul
out
add
jno
add
addb
mov
xchg
or
test
push
cmp
pop
outsb
mov
mov
std
mov
movsb
dec
lret
inc
lea
aas
fwait
stos
jo
push
push
add
jne
scas
cmp
insl
xchg
inc
loopne
push
cmp
in
mov
mov
jnp
sub
push
mov
data16
das
aaa
mov
jno
in
inc
insb
mov
pop
outsb
in
inc
lea
xchg
outsb
fildll
jl
push
popa
imul
aad
xchg
popa
pop
out
inc
push
jo
pop
ds
xchg
pop
jae
cmp
les
mov
stos
jo
imul
jp
insb
ljmp
jle
repz
push
mov
iret
jno
dec
ret
enter
rolb
jae
jns
push
pop
fmull
push
test
call
xchg
fwait
aad
imul
rol
addr16
das
shlb
mov
aad
out
and
hlt
ret
arpl
cmpsl
jge
jb
sbb
loop
aaa
das
cmc
aas
or
dec
dec
add
mov
pop
xchg
sarl
push
xor
xor
pop
push
sub
and
das
xchg
cmp
ss
movsb
icebp
jge
push
and
scas
jbe
out
and
fsubrl
enter
daa
pop
ret
pop
pop
jno
clc
insb
jl
jl
dec
mov
sbb
and
inc
and
lahf
xchg
mov
es
je
push
inc
aad
cmpsb
or
jne
mov
jecxz
pop
pandn
push
lahf
adc
in
cli
or
xchg
xchg
cmp
stos
adc
mov
pop
sbbb
std
add
jge
xor
int3
and
andl
mov
inc
dec
mov
fisubs
jecxz
push
mov
inc
sub
xchg
outsb
aaa
adc
cmp
shl
mov
lds
mov
test
push
roll
fcomp
dec
inc
idiv
push
lret
dec
rcr
ret
mov
add
sbb
add
sahf
daa
in
ret
adc
outsl
fucom
jns
sub
xchg
stc
fstps
fs
or
push
ss
lret
mov
test
out
and
cli
pop
js
xor
add
testl
aam
jb
and
adc
push
adc
cmp
dec
inc
dec
and
pop
cld
outsb
xlat
nop
lret
mov
mov
lahf
jl
sti
out
xchg
cmc
jecxz
in
inc
dec
xchg
nop
out
cli
dec
and
inc
test
pop
fnstcw
sub
repz
inc
sbb
ja
jl
inc
adc
stos
stc
mov
inc
daa
push
pushf
adc
jmp
cmc
xchg
cs
stos
inc
stos
in
inc
outsb
int
aas
dec
fwait
jno
fnclex
dec
pop
cld
jg
push
xchg
in
mov
pavgw
push
dec
jae
loopne
in
sbbl
neg
sub
mul
mov
cmp
in
das
jne
in
mov
daa
outsl
fbld
sub
rol
out
idivb
sbb
jl
dec
outsl
pop
xchg
cmpsl
pop
adc
cmp
pop
cld
insl
mov
fisttps
movsb
inc
sub
mov
repz
rclb
pop
xchg
aam
lods
pop
ret
push
xor
es
fst
fisttps
xchg
mov
data16
adc
cld
scas
mov
ss
fisttpl
flds
add
cltd
sbb
push
mov
mov
jg
test
add
sbb
xchg
call
stos
dec
shr
out
push
and
je
call
lock
xor
adc
popa
xor
sbb
push
xchg
push
mov
mov
dec
mov
inc
fldl
out
or
icebp
jmp
push
stc
adc
push
sub
out
dec
mov
bound
cmpsb
jns
sub
in
mov
sub
sub
movsl
or
frstor
pop
sbb
outsb
push
mov
fcmovbe
mov
cs
dec
jge
dec
in
sarl
dec
cmp
mov
fucomip
mov
xor
dec
int3
out
dec
pop
popf
mov
sub
sahf
lea
stos
jecxz
popf
and
push
push
jnp
xchg
mov
add
popa
lods
adc
iret
shlb
pop
push
adc
inc
repz
jae
fwait
mov
sbb
lods
out
push
add
xor
add
mov
repnz
pop
sbb
or
imul
scas
popa
arpl
sarb
mov
sub
push
leave
cltd
test
hlt
or
mov
pop
jge
gs
sbb
cmp
or
sub
int3
dec
in
pop
faddp
sti
and
mov
adc
js
cmp
sub
jmp
in
ret
inc
daa
enter
daa
pop
notb
jno
adc
sbb
sub
mov
push
or
cmp
pop
inc
inc
lahf
mov
imul
dec
inc
push
aas
data16
inc
pop
sub
in
adc
mov
and
mov
mov
sub
xor
push
adc
ds
sbb
adc
push
aad
or
mov
sbbl
xchg
mov
xor
push
cmpsb
int
out
sub
and
pop
xchg
les
test
sub
lock
sub
cmpsb
outsb
lcall
and
jg,pt
stos
jns
popf
rep
mov
adcb
dec
ljmp
lods
xor
xchg
fstpt
mov
aas
mov
mov
mov
mov
push
fdivs
outsb
test
outsl
mov
mov
stc
nop
mov
adc
ss
subl
mov
inc
outsb
out
insl
xor
adc
mov
cmp
lret
retw
out
pop
xchg
add
pop
pop
sbb
inc
adc
dec
mov
scas
iret
notl
sub
data16
mov
sbb
xchg
sti
jle
cmp
push
out
push
mov
or
pop
sti
sahf
inc
outsl
incb
and
nop
rorl
dec
adcb
inc
xchg
xor
clc
mov
repz
arpl
loop
sbb
repnz
xchg
mov
dec
cmp
sahf
jno
pushf
mov
or
inc
xor
mov
jb
pop
pop
dec
aad
mov
jecxz
xor
std
pop
je
cwtl
in
insb
mov
roll
mov
adc
xor
cmpl
mov
out
lock
das
push
xchg
push
mov
mull
test
idivb
xchg
dec
push
push
cmpsl
pop
cmp
mov
jo
ljmp
out
mov
orb
dec
add
les
std
shlb
sub
push
es
stos
daa
add
xchg
insl
inc
fsubr
fldl2t
insb
popa
adc
lods
lds
inc
mov
out
fiaddl
xchg
jge
and
clc
pop
mov
mov
jnp
test
sar
mov
jno
push
dec
ret
jnp
sbb
aas
test
cmpsl
cmp
sbb
sbb
shrl
pop
ds
stos
aaa
aad
out
lret
or
add
call
xor
xor
shll
movsl
mov
mov
jae
mov
sbb
and
or
stos
push
push
pushf
adc
jne
shll
out
sub
aas
bound
jl
jns
mov
lret
pop
pushf
mov
addr16
sub
dec
xchg
jne
mov
popa
test
adc
popf
dec
pop
dec
pusha
cmp
pusha
fistpl
dec
fildll
or
jmp
testl
out
jp
popf
loope
xchg
mov
fucomp
dec
stos
push
pusha
test
idivb
insb
shrb
jnp
mov
and
rol
adc
addr16
das
jae
ret
jp
mov
inc
roll
jae
add
loopne
push
or
mov
mov
subl
dec
and
sbb
adc
push
scas
les
xchg
lds
scas
rclb
cmpsl
bnd
sub
adc
hlt
pop
sub
arpl
jo
es
mov
cmp
sbb
push
or
xor
roll
pop
hlt
mov
adc
adc
scas
inc
addr16
and
sbb
adc
loop
jbe
adc
dec
enter
daa
pop
jecxz
cmp
push
jmp
cs
dec
cltd
cmpsl
clc
push
stc
repz
movsl
rorb
and
and
push
into
outsb
enter
gs
or
mov
gs
or
and
sub
pop
lea
push
xor
sub
mov
mov
sbbl
rolb
movsb
addr16
sbb
call
xor
lods
mov
adc
dec
jo
sub
add
inc
rolb
jmp
fcompl
andl
cmp
inc
jg
popa
es
push
mov
or
and
add
mov
adc
push
cld
out
idivl
lret
pop
roll
jge
adc
sbb
xor
mov
xor
inc
push
fwait
pop
pop
loop
xchg
idiv
inc
xchg
or
adc
xor
lods
test
imul
ret
xor
cld
and
or
shll
hlt
gs
cwtl
dec
loopne
in
pop
cmp
sub
jecxz
cmp
movsl
fsubrs
pop
jo
add
popf
pop
sbb
rorb
and
mov
jne
into
sti
dec
mov
sub
ficoms
sub
stos
xchg
rcr
cmpsb
mov
loopne
mov
add
dec
rclb
call
inc
dec
negl
dec
pop
adc
fistpll
jmp
loope
jbe,pn
ds
mov
addr16
xchg
fisttpl
xchg
xlat
je
mov
cmpsl
js
std
add
in
mov
bound
mov
pusha
fisttpl
jbe
mov
cmc
mov
mov
imul
add
testb
pop
insl
sahf
jbe
dec
gs
fldenv
das
jle
icebp
inc
stc
cld
ret
ret
push
pop
sub
ljmp
mov
jecxz
jne
aaa
add
aam
push
clc
ret
sub
daa
shlb
fstpl
push
inc
clc
mov
test
ljmp
xor
xorl
les
in
xchg
les
iret
das
iret
cltd
adc
faddl
or
push
adc
insb
dec
xorl
xchg
mov
shrl
popa
into
pop
jno
stos
es
cmpsl
out
cs
cmp
add
xor
lods
loope
xor
xchg
roll
lret
add
cs
sub
sub
dec
mov
cmpsb
pop
or
cmp
aaa
mov
adc
mov
fmuls
out
or
bound
clc
adc
iret
push
pop
xchg
sbb
jle
repnz
or
addr16
or
mov
or
sbb
cltd
mov
push
out
pusha
jbe
push
js
xchg
int3
lods
inc
jmp
ret
xor
add
nop
sbb
xchg
mov
sbb
lret
stos
leave
dec
push
and
xchg
fidivrs
jns
jle
idivl
push
mulb
stos
iret
mov
ss
ret
inc
or
imul
aas
push
mov
shlb
sub
inc
add
lods
fisubrl
int3
xchg
mov
repnz
add
scas
daa
call
pop
mov
mov
repnz
adc
hlt
mov
cmpl
sbb
push
fdivs
insb
pop
sbb
add
mov
and
stc
pop
and
pop
fiadds
outsl
mov
addr16
sti
jo
adc
or
sahf
popa
push
cmp
outsl
or
push
or
xlat
es
xchg
and
enter
daa
pop
push
cltd
cmp
mov
inc
jl
mov
push
fmul
or
cmp
push
mov
xor
push
aad
inc
inc
hlt
xor
cmpsb
xchg
pusha
mov
js
cs
pop
int3
hlt
push
or
sub
pop
dec
cmp
mov
push
fs
pop
out
sbb
jnp
mov
testl
xor
jae
xchg
int
in
in
sub
xchg
mov
ret
lcall
xchg
faddl
xchg
push
sub
outsb
pusha
gs
sbbb
in
sahf
sbb
push
mov
dec
and
push
pop
cmp
or
hlt
lret
mov
popf
int3
or
je
sahf
adc
cmc
clc
lock
xor
add
inc
loop
mov
push
fs
xchg
scas
adc
test
xchg
leave
lods
imul
rcr
out
lea
cmc
pop
loope
or
cmp
adc
into
mov
sub
dec
loope
pop
push
lcall
test
adc
or
add
fwait
cs
add
or
inc
sub
cmp
in
loopne
lock
cld
in
push
decb
aad
xor
lcall
mov
aam
push
movsl
cmp
jb
pusha
xchg
test
fucomip
call
sbb
add
adc
pushf
adc
mov
flds
inc
inc
inc
inc
flds
push
outsl
aas
test
dec
ret
aam
je
jecxz
cmp
into
std
test
mov
mov
jne
mov
mov
push
xchg
pop
pop
movsb
sbb
lock
pop
das
adc
test
addr16
mov
fdivs
pop
shll
arpl
dec
testl
push
pop
mov
push
cmp
cld
out
add
lret
mov
aaa
stc
and
mov
fistps
add
lds
jp
in
aam
cmp
addr16
lods
pop
fldl
iret
clc
stc
cmpsb
insb
xchg
jmp
icebp
ljmp
aas
lods
fwait
cmc
fnstsw
xor
les
push
push
xchg
and
testb
add
adc
cltd
dec
test
test
xchg
sahf
mov
out
push
aad
mov
and
test
scas
lea
shr
xchg
roll
fs
out
xchg
jge
add
cmpsb
enter
pushf
fdivs
in
mov
or
push
xor
in
mov
xchg
jmp
xchg
pop
jmp
fidivs
dec
xchg
add
jmp
fwait
mov
push
loop
push
jne
adcb
xchg
mov
jmp
lahf
add
aam
in
sub
xchg
push
and
sub
aas
shrb
loope
pcmpgtb
out
ds
jnp
or
jmp
in
nop
jg
adc
or
jmp
test
xchg
lea
cmpl
out
xor
sbb
pop
test
and
je
xchg
rcrb
push
adc
pop
loopne
push
cmp
or
sti
sbb
inc
scas
leave
pop
stc
inc
adc
fnsave
cwtl
push
push
data16
mov
fs
jne
xorl
xchg
testl
imul
push
scas
mov
sbb
int3
outsl
into
mov
and
aam
shl
hlt
out
xor
inc
sub
sub
sbb
xor
out
push
or
or
addr16
push
test
stos
push
inc
xor
enter
add
push
cmp
xor
push
pop
lret
ret
jbe
or
in
js
push
enter
daa
pop
dec
test
jno
inc
inc
jl
xor
insl
push
mov
jb
and
xor
adc
imul
je
inc
addl
pop
pop
mov
das
pop
or
mov
loope
scas
inc
sub
dec
cmc
cmp
or
adc
sti
les
sub
adc
out
push
add
pop
cmpsl
xor
jp,pn
mov
mov
gs
pop
inc
inc
out
lcall
adc
icebp
xor
or
adc
test
sarb
fstpl
mov
mov
mov
cltd
push
and
pop
mov
fadd
stc
pop
idiv
sub
shll
mov
cmp
sbb
jmp
mov
cmc
mov
mov
outsl
pop
imul
call
xchg
and
adc
sbb
lods
push
and
mov
cmp
cli
sub
data16
icebp
jp
mov
dec
xchg
mulps
ljmp
jns
xchg
mov
jmp
repz
add
ds
push
int3
fwait
sbb
inc
jno
xlat
cli
adc
mov
dec
push
jne
stos
jmp
mov
nop
push
subb
pusha
cmp
sar
inc
fsts
jno
sbb
cwtl
xchg
inc
mov
mov
test
inc
xchg
push
pop
ja
dec
adc
int3
jmp
fstpl
cmp
or
sub
inc
ficoml
aas
lds
popf
dec
cmp
shl
stos
arpl
lods
les
std
dec
cli
lea
or
cmpl
imulb
mov
cmp
lock
dec
das
icebp
add
lods
mov
arpl
jmp
insl
insb
add
pop
and
cmpsl
pop
aad
mov
cmc
aad
cld
sbb
in
lret
test
mov
std
and
and
loopne
rcr
xbegin
aam
rcrb
push
es
pop
push
clc
xor
jmp
ljmp
jecxz
push
adc
mov
pop
fildll
push
jmp
push
out
add
sub
ja
cld
imul
mov
pop
sbb
dec
push
jne
test
jp
sbb
and
xor
stos
add
test
hlt
and
add
rorl
mov
insb
xor
in
cmp
jl
movsb
negl
xchg
cmpsb
adc
pop
movsb
aad
ja
push
xor
mov
sub
cmc
out
pop
sarl
push
test
and
jno
mov
pop
xor
enter
mov
push
outsb
in
push
notl
js
imull
cmp
addr16
jae
mov
xchg
jmp
les
mov
cmp
dec
or
pushf
in
popf
add
fisttps
jns
xchg
jb
cmp
mov
orl
jne
xchg
shlb
adc
push
lcall
and
mov
add
xchg
jnp
jno
jle
mov
cmp
iret
dec
pop
ret
fs
xor
movsb
inc
pop
cmc
add
push
sub
xchg
or
and
inc
add
xchg
adc
xchg
imul
sti
scas
in
cmp
lds
fs
shl
insl
mov
je
or
jne
push
hlt
cmp
dec
arpl
sar
and
jg
jae
xchg
ljmp
add
xchg
pop
sbbl
jmp
and
adc
cmp
sbb
movsl
jbe
mov
in
pop
xchg
adc
pop
add
pop
ret
das
addl
scas
mov
dec
out
js
mov
pop
out
and
test
inc
lcall
imul
inc
adc
andb
clc
dec
js
out
pop
dec
cmpsl
push
aam
loope
idivb
cmp
mov
ds
rcl
cmp
popl
lcall
push
cmp
andb
mov
cli
movsb
int
xchg
pushf
sub
push
lcall
push
adcl
insb
out
cld
int
outsb
es
test
mov
fsubl
push
mov
sub
mov
mov
and
cmp
adc
lock
out
lret
aas
mov
rcrl
sbb
pop
sub
xchg
push
xor
lea
loop
bound
insb
adc
fs
call
in
sbb
lea
mov
popa
out
mov
shll
mov
cli
cmp
cmpsb
jno
and
into
jp
scas
gs
imul
test
imul
frstor
adc
ljmp
xlat
cmp
sub
imul
pop
test
push
aad
imul
dec
cld
sub
inc
jecxz
rcr
dec
imul
xchg
or
ret
call
mov
nop
je
cli
add
addr16
cltd
cs
dec
mov
inc
cmc
sbb
mov
sahf
or
dec
mov
out
fists
jcxz
pop
faddp
mov
jp
imul
fstpl
leave
es
lahf
call
mov
in
fdivl
fistpl
outsl
or
mov
jbe
lock
movsb
das
shlb
jecxz
rcrb
mov
xor
rcll
aad
lret
insl
push
fwait
adc
clc
cmpsl
push
adc
icebp
int3
xchg
jl
inc
add
pop
mov
push
pop
mov
inc
and
sub
in
push
xchg
mov
fldenv
jg
xchg
insl
push
outsl
sti
sbb
movsl
pop
add
pop
mov
pop
out
jnp
out
cltd
sub
push
les
lfs
rcrl
pop
lods
outsb
mov
insb
mov
dec
mov
add
xor
aaa
aam
shrl
pop
rcrb
movsb
stos
pause
sti
out
push
shlb
fsubl
sub
xor
xchg
pop
xor
sbb
mov
rcl
mov
rcr
pop
pop
cld
ja
rcl
dec
jl
insl
inc
pop
push
ret
fldt
jmp
push
sub
xorb
outsb
les
xchg
push
jns
jp
in
shrb
push
mulb
mov
int
or
jnp
jp
ss
and
mov
pop
addr16
in
push
in
push
or
or
fbld
jg
xchg
inc
into
arpl
test
adcl
push
out
ror
jge
cmpb
subb
inc
cli
and
lcall
xchg
add
push
lret
jne
adc
xchg
jp
insb
scas
xor
inc
sub
xchg
jae
inc
xchg
push
in
sub
pushf
inc
pop
inc
jg
sub
and
xchg
movsl
std
jecxz
mov
cmp
scas
push
aad
lds
xchg
dec
mov
in
leave
in
in
hlt
test
pop
inc
xor
jge
jle
sbb
std
and
test
insl
xchg
add
push
movsl
pop
mov
rcr
lock
fnsave
jle
jnp
mov
addr16
cmp
insl
or
xor
xlat
jbe
sar
in
inc
push
nop
enter
daa
push
mov
out
jno
shl
fimull
insl
dec
push
mov
test
andl
fldl
lahf
dec
sub
push
sbb
test
ss
inc
mov
lcall
or
jb
push
fndisi(8087
ja
cmc
sub
daa
sub
ds
add
jge
jecxz
test
adc
sbb
movb
lock
mov
mov
sub
lcall
lret
jnp
sub
les
test
mov
dec
mov
out
mov
ja
aaa
sbb
and
mov
test
cmp
add
lret
and
bound
mov
mov
leave
jno
stc
imul
push
test
xor
movl
and
ja
cs
xor
pop
sbb
lods
and
mov
fwait
push
cli
mov
jo
add
addr16
sbbl
int3
jl
adc
daa
pop
mov
cltd
adc
add
imul
push
xlat
pop
lret
popa
sbb
mov
ljmp
in
and
sti
or
imul
lcall
pop
std
sti
inc
imulb
xor
adcb
fists
int
jl
in
mov
ds
xor
arpl
adc
or
jmp
mov
and
mov
jb
dec
cmpsl
dec
sub
je
xchg
mov
push
dec
faddp
mov
cmp
popf
sbb
mov
loopne
xchg
fisttps
dec
xlat
inc
adc
inc
stos
and
in
mov
adc
lock
or
scas
arpl
mov
jno
and
xor
testb
sti
jl
push
iret
pop
mov
mov
ret
push
lret
or
mov
jbe
push
and
pop
xor
pop
pop
outsb
adc
sbbl
pop
int3
adc
ret
push
adc
fnstsw
add
ljmp
stos
lods
fadd
fistpll
sahf
sti
leave
xchg
loopne
jp
lahf
push
push
repnz
sbb
jne
lock
test
mov
mov
adc
testb
popf
test
mov
sbb
push
mov
pop
sbb
imul
push
jns
add
rcr
dec
insl
cli
xor
shll
es
xor
mov
mov
aam
scas
mov
sbb
add
adc
scas
aam
or
mov
cltd
push
lret
insl
and
jnp
mov
ss
out
xchg
inc
jns
inc
arpl
sti
movsb
fistl
and
sub
xor
mov
mov
in
test
jb
stc
inc
xor
pop
push
dec
iret
cwtl
test
outsl
jecxz
pusha
loop
add
inc
mov
xchg
sbb
jmp
out
mov
cmpsb
out
xor
mov
sbb
stos
xchg
cld
cmp
insb
xlat
jge
jnp
js
jle
push
push
adc
lahf
adc
sub
or
ret
outsb
pop
sahf
addr16
xor
cli
adc
scas
lret
pop
or
pop
mov
inc
jbe
fidivl
adc
cld
or
fsubrl
push
add
sbb
and
sbb
mov
and
arpl
dec
hlt
iret
xor
inc
xor
leave
cwtl
sbb
pop
xchg
push
movb
adc
int3
imul
ficoms
dec
movsb
jo
xchg
and
jnp
cmp
pop
xor
mov
fs
in
sub
out
mov
cmp
mov
jl
xor
push
push
push
and
test
hlt
cmp
mov
add
inc
xor
outsl
cmpsb
popf
ljmp
dec
lcall
push
outsl
dec
loope
lock
sub
aad
cmp
imul
fcmovne
adc
mov
popl
loope
and
nop
sbb
pop
xor
ret
jg
push
int
lret
jp
push
pop
mov
pop
dec
push
mov
jecxz
repnz
lret
jg
outsb
in
rorb
sbb
xor
test
out
dec
sub
sbb
and
sbb
push
sbb
mov
dec
or
aaa
and
call
inc
adc
sbb
sahf
pushf
lods
movsl
cmc
adc
inc
xor
cli
inc
loop
icebp
js
fisubl
adc
es
mov
mov
std
pop
cli
shrl
mov
cmp
lea
or
cmp
gs
push
loopne
mov
sahf
adc
mov
imul
dec
add
data16
out
sbb
negl
jmp
sub
mov
in
mov
ja
fcoms
aad
xor
dec
mov
xchg
nop
fnstcw
leave
xor
scas
xor
nop
enter
mov
aam
arpl
mov
jmp
adc
pop
and
xor
arpl
inc
sub
and
mov
mov
adc
pusha
jecxz
xchg
mov
test
inc
test
mov
call
mov
jg
adc
cmp
jbe
fcomps
loop
mov
adc
ss
mov
iret
mov
add
shl
lock
push
sbb
insl
and
dec
dec
cmp
cs
xor
jle
cld
lcall
mov
add
divb
adc
sub
and
out
pop
ret
neg
es
push
sbb
loope
clc
clc
in
dec
xchg
out
loope
mov
popa
lcall
mov
shll
daa
and
push
inc
add
mov
cltd
daa
mov
test
add
xchg
repnz
lods
adc
popf
mov
pop
enter
roll
imul
sbb
in
add
push
adc
xor
push
or
xor
lcall
xlat
xchg
inc
mov
aad
stc
ja
aad
dec
bound
bound
jp
or
imul
mov
push
outsb
sub
mov
aas
mov
gs
dec
bound
lods
jns
scas
dec
in
lret
call
inc
or
loope
sub
iret
addr16
xor
mov
push
scas
mov
aaa
push
bound
mov
dec
pusha
jge
cmp
gs
cwtl
xchg
jmp
add
jae
cli
xchg
mov
xor
out
sbb
popf
lret
std
dec
mov
push
out
stos
or
and
or
adc
out
ljmp
adc
dec
iret
imul
xlat
inc
inc
or
jae
clc
dec
push
jb
movsl
or
xchg
mov
inc
jge
inc
fucompp
repnz
xchg
push
inc
mov
imul
out
lahf
mov
mov
insl
int3
gs
fimull
scas
arpl
stos
jge
clc
dec
sbb
mov
add
in
int3
mov
mov
fidivs
cmp
inc
jo
xchg
cmp
jge
loop
test
clc
movsb
dec
sub
push
cwtl
int3
pushf
jbe
imul
enter
daa
push
inc
sub
enter
iretw
jns
xor
or
xor
and
dec
popa
outsb
movsl
pop
bound
and
lahf
ret
pop
push
rcrb
push
int3
pop
fiadds
jns
cmpsb
and
stos
js
in
pop
pop
sbb
push
lret
movsl
mov
jl
sbb
aas
ds
sarl
shlb
jmp
mov
mov
mov
xor
rclb
int
mov
add
cmp
out
push
or
test
leave
decb
dec
push
xchg
test
mov
jle
loop
aas
mov
xor
les
cmp
mov
jae
imulb
sub
fistpl
aam
nop
jp
mov
sub
sahf
aas
loope
cmc
fisttpl
fldcw
xor
roll
stc
xchg
arpl
fs
pop
jmp
int3
xorb
out
add
mov
jecxz
cli
hlt
icebp
mov
cmp
ret
mov
int
and
andl
test
adc
dec
cwtl
imul
push
add
jne
popaw
lcall
xor
xlat
not
mov
mov
idiv
pop
sti
addr16
sti
test
sub
nop
mov
stos
jmp
sbb
push
f2xm1
arpl
inc
and
repz
xlat
xchg
push
sbb
lea
dec
cmpsb
cmp
out
inc
daa
icebp
adc
imul
jmp
add
inc
inc
jecxz
mov
inc
push
add
inc
mov
jb
data16
push
mov
adc
cmp
cs
mov
and
cwtl
add
outsb
mov
das
adcl
xchg
pop
aam
mov
jnp
lock
shrb
insl
rcll
mov
daa
adc
xchg
push
sbb
dec
inc
and
mov
push
test
or
mov
repz
xchg
inc
mov
popf
or
shrb
fsubrs
dec
mov
pop
ret
xchg
es
out
fisttpll
fnstenv
xchg
es
ljmp
add
mov
in
inc
xchg
outsb
mov
push
push
jo
psrlw
int3
cltd
pop
int
test
rolb
xor
push
movsb
mov
jmp
mov
xchg
sbb
add
pop
jae
popa
stos
shlb
orb
gs
add
or
fimull
adc
fidivl
xlat
aas
mov
fisubl
xchg
mov
nop
call
dec
push
cmc
jae
faddl
or
icebp
lret
call
adc
xchg
jne
adc
mov
pop
scas
out
inc
adc
jns
shlb
inc
test
test
sub
es
mov
jp
mov
mov
mov
shr
in
mov
mov
test
fsubr
push
repnz
test
adc
mov
adc
mov
xchg
fistpll
jnp
jbe
xchg
jmp
jno
mov
mov
adc
sub
add
enter
movsl
mov
pop
or
inc
inc
dec
adc
push
xor
lahf
mov
dec
or
arpl
xchg
stos
lcall
pushf
out
scas
jns
adc
es
rclb
mov
rorb
hlt
test
inc
cmp
push
sbb
pop
aaa
out
aam
jb
mov
loop
cmp
mov
cs
test
xor
mov
scas
pop
scas
inc
and
inc
mov
movsb
aam
or
mov
jbe
loop
in
sti
sbb
enter
daa
push
into
xchg
sti
jnp
jno
or
jl
stos
dec
mov
hlt
aad
pop
fdivs
and
repz
lahf
lods
xchg
xor
add
push
xchg
sbb
inc
dec
and
pop
sbb
fnstsw
pop
pop
pop
inc
mov
push
fidivl
loope
jp
sub
stos
add
lret
cltd
jg
jbe
aad
adc
push
rolb
dec
popl
iret
add
cli
sbb
scas
xlat
loop
stc
and
add
xchg
or
int3
int
pop
mov
sub
push
pusha
xchg
ret
fmull
mov
mov
roll
sub
mov
xlat
add
iret
adc
sbb
and
mov
push
fdivl
cmp
insl
adc
divl
mov
xchg
mov
sbb
in
loop
repz
mov
mov
outsl
mov
cmp
push
push
sar
dec
dec
xlat
andb
cld
enter
fldcw
mov
dec
adc
daa
sub
xor
icebp
jle
xchg
push
or
sub
push
orl
dec
adc
pop
push
adc
mov
data16
dec
sbb
insl
lds
xor
inc
mov
bound
sti
push
push
xor
push
lods
sbb
ret
xchg
sub
das
add
fldenv
out
outsl
les
sub
dec
mov
xchg
push
fidivs
call
mov
push
mov
pushf
adc
sub
sub
push
ret
inc
popa
jns
aas
loopne
dec
jb
inc
inc
dec
rorl
or
pop
mov
test
lret
mov
mov
xor
cwtl
js
fcmovnbe
div
pop
sub
movsb
lock
xchg
das
dec
push
adc
xchg
dec
mov
rorl
or
dec
inc
sbb
cmpsl
push
and
mov
sub
lock
lock
mov
mov
cmp
jecxz
shlb
mov
dec
add
aam
cmp
es
scas
sbb
clc
pop
xchg
nop
xchg
gs
ljmp
and
jb
mov
mov
loopne
xor
inc
wrmsr
mov
cltd
xchg
loopne
xor
xchg
mov
cmpsl
inc
push
addr16
dec
push
jb
test
mov
mov
add
sub
mov
pop
push
mov
stos
scas
mov
out
jecxz
push
add
dec
out
cmpsl
bound
fcomip
ljmp
imul
mov
dec
pop
aad
adc
jne
inc
jae
out
or
dec
test
cmpb
push
mov
hlt
jne
divl
out
and
bound
jne
in
adc
xchg
inc
shll
sub
and
addr16
jo
inc
dec
pop
mov
loope
mov
adc
fimull
in
mov
test
mov
shl
jmp
dec
icebp
popf
sbb
and
push
sti
mov
aad
dec
stos
out
arpl
and
lahf
cltd
jnp
roll
out
or
pop
cld
iret
daa
imulb
pop
inc
mov
inc
push
push
jae
mov
jmp
push
jnp
mov
dec
rcrb
add
sub
imul
pop
lds
sar
mov
adc
hlt
mov
mov
rcrl
xchg
add
sbb
sub
movsl
add
gs
fcmove
lea
pop
insb
test
or
xor
ljmp
and
or
movsb
pop
sbb
xchg
jbe
iret
sub
loop
mov
aas
imul
cmp
cmp
jno
insl
pop
jl
mov
fs
adc
movsl
data16
and
dec
lahf
lret
insl
test
test
bound
inc
fisttpll
add
inc
nop
aad
stc
insl
dec
pop
test
jp
stos
popf
sbb
shll
sub
aad
cmp
sbb
cltd
cltd
cmp
sbb
cs
stc
or
xor
scas
add
test
xor
mov
cltd
int
dec
or
inc
lcall
imul
cmpsl
dec
cld
outsb
adc
dec
cmp
jg
scas
push
mov
inc
mov
adc
push
fucomip
into
cmp
sub
and
je
sbb
rcrl
sarl
in
sbb
es
cmc
imul
outsl
xchg
scas
or
out
cmp
sti
inc
adc
push
imul
cmpsb
out
cmp
xor
pop
fnstsw
pushf
mov
into
jmp
inc
add
sbbb
xor
adc
sbb
xor
adc
outsb
test
and
jg
lods
pusha
cmpl
clc
cmpsb
xlat
je
inc
sub
mov
adc
incb
leave
aad
dec
jmp
dec
xlat
mov
pop
xchg
pop
test
mov
sbb
fsts
ret
lea
mov
test
test
bound
jmp
xor
inc
icebp
lret
push
inc
jl
loope
jg
push
jb
push
xchg
dec
add
inc
je
fstpl
pop
rol
mov
adc
mov
call
in
inc
adc
xorl
fildl
inc
cmp
mov
jae
lock
push
and
sub
mov
dec
js
and
outsb
pop
rcr
adc
pop
insl
std
dec
dec
cmp
repz
lahf
xor
ljmp
cld
sbb
lret
enter
add
add
fstpt
pop
sub
cmp
aam
mov
ret
movsb
mov
mov
push
aas
ds
xchg
in
mov
in
dec
popa
fbld
lods
mov
mov
mov
cld
pop
pop
push
or
leave
jg
or
cltd
int3
icebp
xchg
test
sbb
mov
pusha
pop
push
sub
xchg
sbb
popa
xchg
pop
sbb
sub
pop
leave
jl
stos
sahf
jne
out
inc
adc
dec
add
inc
mov
lret
lock
xor
dec
mov
loopne
dec
mov
push
push
ja
cmp
dec
cmp
pop
or
js
fwait
scas
xor
pushl
cmp
add
popa
jns
int
in
aaa
je
xchg
mov
mov
jle
sub
sbb
fsubl
ret
cmp
xchg
or
cwtl
xchg
mov
push
in
pop
ret
pusha
dec
mov
lds
pop
bound
subl
out
mov
mov
adc
in
stos
popa
out
test
lds
insb
andl
jle
lock
adc
cmp
dec
ret
sbb
aam
popa
pop
test
mov
push
mov
add
push
cli
pusha
add
mov
adc
loope
jp
aaa
scas
aas
sbb
lds
jo
mov
addr16
data16
dec
leave
aas
dec
cmp
arpl
inc
adc
loopne
jge
fcompl
aad
jge
fs
or
ret
movsl
aaa
int3
js
stos
pop
fwait
xor
pop
pop
xor
jae
inc
cmp
and
mov
movsb
ljmp
jbe
xor
enter
daa
push
insb
mov
jno
icebp
and
cld
dec
sbbb
movsl
insl
lock
adc
dec
mov
cmp
test
sub
cmp
mov
pop
push
add
adc
pop
les
push
adc
gs
rolb
sub
ds
ficompl
clc
lcall
jo
fcomps
push
xchg
xor
lea
sub
or
mov
lret
loopne
push
lds
sahf
xor
sub
cmp
ss
pop
xor
cmp
mov
mov
and
push
loop
fistpll
jecxz
into
divl
push
add
mov
rcll
mov
rcrb
std
xchg
sahf
sub
xchg
cmc
xor
dec
xor
cmp
test
jp
int3
stc
mov
call
adc
or
lods
mov
pop
dec
out
lods
mov
xor
call
dec
or
jnp
push
mov
sbb
pop
push
enter
leave
push
imul
add
ss
jecxz
enter
inc
sub
push
or
cmp
sti
je
inc
fs
test
push
insl
stos
nop
dec
stc
add
ss
xor
fsts
sub
rclb
call
sub
mov
adc
adc
push
icebp
in
inc
cs
add
inc
js
xlat
inc
xchg
jnp
aas
push
cli
stos
jb
xchg
xchg
dec
jnp
adc
jecxz
push
jge
ret
std
loopne
cmpsb
cwtl
xor
jge
push
jle,pt
and
push
xor
jno
mov
lock
xor
or
mov
xor
xlat
shrl
negb
insl
mov
mov
addr16
add
cld
inc
out
lret
aaa
shlb
in
inc
and
bound
pop
cli
pop
call
jae
adc
es
fnstsw
out
clc
rcr
pop
xchg
jecxz
fldl2e
push
je
popa
notb
insl
lods
repz
add
sbb
inc
movb
sbb
add
lret
cli
arpl
pop
cmp
inc
in
dec
and
insb
xchg
call
sbb
outsl
sarl
addr16
pop
je
cs
lea
sub
push
sti
add
jmp
sbb
xor
mov
sbb
or
orl
xchg
or
dec
cs
inc
inc
mov
jp
fdivp
xor
cli
lcall
sub
pop
les
jns
lret
mov
cmp
mov
ss
sub
pop
nop
addr16
pusha
jp
lea
sub
mov
mov
mov
in
call
cli
negl
jmp
in
xor
xor
sub
popf
scas
or
push
push
loopne
stos
aam
and
jmp
insb
out
andl
int3
jo
jle
jns
push
jne
stos
adc
mov
es
mov
rolb
lock
xchg
push
push
jle
pop
or
jle
sti
inc
jns
xchg
mov
lahf
xchg
scas
jnp
sbb
add
imul
scas
mov
xchg
shlb
repnz
jle
hlt
inc
jae
arpl
sub
jge
lcall
and
or
jle
cmpsl
and
int3
arpl
lret
faddp
mov
mov
scas
stc
ja
and
out
inc
cmp
xor
or
jno
mov
xchg
enter
daa
push
cmpl
jno
lcall
out
push
xchg
push
xlat
fs
je
adc
mov
or
or
std
test
clc
or
inc
sti
stos
jno
sub
cmp
mov
fsts
add
mov
sub
movsb
pusha
cmp
or
mov
out
loopne
rcrl
jp
addl
sbb
fst
xor
dec
dec
adc
push
push
sub
add
lcall
push
fmull
mov
outsb
fcmovne
jmp
mov
test
mov
pop
mov
xor
cmp
stc
sbbl
sbb
push
in
pop
cmp
sahf
sets
repnz
cmpsl
call
jns
ds
mulb
xlat
sahf
lret
cmp
push
mov
add
or
fsubl
add
or
fwait
ss
std
mov
mov
out
mov
dec
xor
lret
scas
or
fcomps
into
scas
mov
data16
jg
pop
jno
or
and
imul
lds
aas
jmp
insw
test
sbb
push
sbb
sub
xchg
sbb
mov
push
enter
jp
cwtl
mulb
nop
sub
dec
xchg
xor
push
or
les
repz
in
lea
inc
call
cmp
pop
nopl
pushf
adc
je
loopne
sti
cs
dec
gs
pushl
inc
mov
loopne
mov
or
repnz
daa
je
jns
jecxz
lcall
xchg
data16
shlb
xorl
dec
call
mov
cli
sub
dec
or
pop
mov
mov
add
xor
fcompl
dec
xor
cmpsl
push
sbb
call
cld
jno
pop
lret
cmpsb
fmul
mov
xchg
sub
std
push
pop
pop
sbb
shlb
cmp
sub
frstor
ja
out
push
pop
frstor
lods
xchg
and
ljmp
jns
pop
mov
lock
mov
add
and
cmovge
loop
lea
cltd
cmp
push
mov
sahf
xchg
xor
and
test
jmp
xchg
push
sbb
jecxz
pop
mov
out
or
cmc
add
cltd
std
push
incl
mov
lock
mov
out
dec
mov
jl
push
ja
fs
dec
and
sbb
push
pop
fwait
or
sbb
jne
notl
out
rcrb
bound
aam
dec
imul
cmp
inc
scas
mov
in
sub
adc
jp
cmp
mov
sar
sbb
or
and
cwtl
pusha
test
nop
filds
sbb
or
mov
xchg
mov
in
addl
bound
cmp
fcoml
call
in
and
mov
insb
pop
xor
jnp
out
jno
cltd
negb
push
mov
dec
fs
inc
test
mov
inc
ja
xchg
jae
jmp
fs
stc
push
inc
clc
insl
jnp
push
fs
push
mov
scas
add
inc
pop
sarb
aad
or
pusha
leave
sub
adc
in
inc
inc
loopne
jge
cmp
je
loop
mov
ds
out
int3
dec
mov
xor
fildll
xor
sti
or
pop
cmp
movsb
add
mov
and
sub
dec
cmpsl
in
xchg
call
or
push
sbb
jno
addr16
jl
xchg
dec
pop
dec
aas
push
mov
cwtl
pop
and
sti
lahf
sub
xor
test
test
ret
push
mov
mov
cmpsb
scas
push
mov
mov
adc
pop
inc
aas
inc
push
and
sub
dec
pusha
cmp
in
and
scas
mov
jl
inc
adcb
or
fiaddl
or
adc
cmp
mov
orl
lods
xor
mov
adc
outsb
movsbl
es
mov
mov
test
mov
cmp
and
mov
call
fyl2x
fcomps
xor
mov
addr16
jecxz
subl
and
xor
cmc
mov
sbb
xor
in
stc
and
jg
add
adc
xor
xor
jno
call
out
sbb
mov
cmp
and
into
xchg
sahf
jg
popf
mov
loopne
mov
pop
nop
or
adc
push
lods
imul
fs
repnz
sbb
pop
or
sub
cmp
mov
push
mov
xor
stos
rcr
aad
jecxz
nop
add
pop
in
inc
jnp
flds
mov
les
repz
or
mov
call
mov
lea
fisttpll
adc
or
iret
mov
cs
inc
inc
xchg
js
int
popa
aas
pop
aas
divl
mov
dec
imul
xor
enter
movsb
mov
test
sub
aaa
push
sbb
inc
push
xchg
fistl
fmuls
lock
sahf
das
enter
and
fistps
and
dec
pusha
ror
sahf
dec
mul
pop
pushf
insl
mov
scas
cmpsl
dec
js
mov
test
mov
adc
hlt
inc
and
cwtl
inc
push
pop
cmp
xor
dec
pop
sub
and
aam
sbb
xchg
jno
mov
lret
push
pop
clc
inc
insl
xor
cmp
loopne
lods
leave
dec
or
mov
shrl
push
pushf
inc
je
lods
faddl
mov
testb
pop
sbb
mov
and
push
jae
mov
ja
test
orb
push
fistpl
iret
mov
shl
dec
xor
ja
imul
out
outsl
jmp
add
mov
xor
and
xor
lcall
push
pop
mov
jmp
pop
mov
aaa
add
dec
adc
cmp
dec
dec
or
cli
and
inc
mov
fistps
scas
out
lahf
insl
out
ljmp
in
xchg
in
jle
inc
mov
add
sub
or
jmp
jp
mov
in
inc
pop
cmp
dec
add
cmp
mov
mov
fistps
inc
and
cmp
sub
adc
or
popf
mov
add
shll
mov
dec
loopne
les
ljmp
sbbb
jae
dec
iret
mov
iret
add
inc
adcb
jae
jle
push
add
test
je
jl
ja
lods
ficompl
add
pop
jo
sbb
and
inc
cld
daa
scas
push
pop
test
fimull
mov
pop
pusha
ror
movsb
shll
arpl
int3
mov
dec
push
idivb
les
push
sub
mov
movsl
sub
aad
sub
cmp
adc
mov
or
and
hlt
out
jo
insl
scas
mov
imul
into
ljmp
jb
adc
or
mov
sub
inc
cmp
inc
push
jl
jnp
dec
int
xor
movsl
addb
and
test
mov
adc
test
mov
repnz
sbb
cmpsb
xor
out
pop
filds
in
int
subl
das
lret
inc
cmc
cmp
das
iret
ds
xlat
or
mov
xor
fcmovnbe
jmp
test
fsubl
xor
data16
aam
sub
and
ret
sub
jecxz
pop
aaa
fcmove
lcall
dec
fcompl
or
outsb
mov
int3
sbb
jae
jb
aam
rorl
popl
and
pop
mov
cmp
adc
dec
divl
ret
lret
sbb
mov
mov
push
mov
sahf
adc
stos
cmc
test
jecxz
mov
xor
and
fisttpl
mov
add
jne
adc
mov
sbb
es
xor
insb
cmp
dec
rorl
jae
into
jne
lods
movsb
hlt
fnstsw
in
hlt
cmp
mov
adc
pop
sub
cmp
adc
dec
xchg
add
scas
data16
mov
dec
stc
mov
xchg
lea
jo
inc
sub
mov
jns
jecxz
sbb
xlat
aad
xor
int3
dec
push
adc
inc
mov
iret
fnstcw
imul
push
mov
push
lea
cmp
pop
jne
pop
adc
add
pushf
push
into
jmp
mov
movl
xchg
jp
sti
addr16
mov
je
data16
jecxz
jle
lret
jo
std
aad
sub
or
mov
out
andl
sbb
pop
pop
cmpb
add
push
das
cmpsl
jp
mov
sub
int3
rcrl
call
insl
jb
and
subl
dec
push
in
xchg
adc
icebp
pop
sahf
pusha
cld
movl
and
xor
pop
push
inc
not
sbb
sub
in
jno
jae
loopne
mov
mov
cwtl
xchg
mov
mov
xchg
lods
xor
outsl
mov
mov
fcoms
ja
std
ud2
or
fstpl
push
pushl
ss
push
dec
push
mov
test
stos
add
subb
pop
jne
cltd
stos
pop
rcll
sbb
int
add
add
inc
dec
dec
xor
adc
fdivp
add
mov
in
hlt
and
repnz
jb
rcrb
clc
inc
data16
movsl
or
js
fwait
imul
push
jecxz
stos
jne
inc
dec
mov
mov
out
jle
sahf
bound
lea
cwtl
inc
in
or
xchg
int
xchg
int3
adc
or
mov
scas
stos
addr16
mov
mov
mov
mov
inc
je
dec
out
and
cmpsl
fwait
bound
jle
fistpll
push
xchg
mov
add
xor
sahf
xchg
inc
mov
movsb
sbb
sbb
mov
adc
sub
and
ds
das
adc
jnp
xor
sahf
push
dec
add
adc
in
iret
add
cmp
popa
out
lea
inc
jae
pop
pusha
push
xor
or
out
repz
inc
testb
xchg
mov
pop
sbb
out
xor
out
scas
lret
adc
lds
jno
cmc
lahf
cmpsb
mov
mov
sbb
sbb
jmp
daa
push
push
arpl
cmp
dec
mov
jge
cs
sbb
sub
or
jp
insb
ja
int3
and
jg
push
xchg
loope
stos
xor
jo
sub
and
cld
mull
enter
ds
gs
es
stc
daa
dec
fmuls
inc
insl
daa
jl
inc
push
dec
cmp
pushw
subb
mov
fbld
cmpl
fildll
pop
in
dec
inc
test
in
cmpsb
mov
and
insb
test
popa
xchg
rcrb
loope
jns
sub
adc
cmp
gs
ds
cmp
adc
fs
add
cmp
cmpb
add
xlat
inc
xor
test
jno
mov
sub
mov
push
inc
fmull
ja
push
out
outsb
add
enter
hlt
sbbb
adc
inc
mov
rolb
cltd
stos
xchg
mov
movsl
sbb
push
out
bound
cmp
iret
inc
cltd
imull
shll
mov
xor
and
cmc
dec
xchg
inc
xor
and
loop
dec
mov
xchg
mov
adc
jae
ss
push
outsb
mov
popf
inc
cli
pop
inc
inc
xor
inc
int3
or
into
pop
cmp
gs
fwait
pop
loopne
dec
rcrb
pusha
pop
adc
cltd
xchg
xlat
push
add
int
data16
cmp
movsb
adc
scas
ds
out
mov
in
sti
sti
xor
lock
mov
add
inc
mov
in
rol
xchg
roll
repz
sahf
xchg
test
jbe
test
mov
lods
adc
pop
sub
adc
sub
jmp
test
inc
xchg
in
inc
add
aas
lcall
dec
push
ficoms
int
loop
movsl
cli
into
int3
push
std
jl
sbbb
mov
xorl
cmp
fucomi
cmp
pop
std
pop
cli
mov
xor
lock
mov
pop
mov
loopne
jmp
pop
fidivrs
shrl
aaa
imulb
insl
pop
movsb
cmp
and
cmpsl
dec
mov
sbb
xor
cmpsl
cld
repnz
lret
repz
lret
and
into
outsb
aad
jbe
add
out
xchg
in
sub
xor
aam
pop
mov
outsl
je
es
sub
sbb
clc
mov
cmpsl
and
inc
popa
push
jg,pt
lahf
out
mov
fldcw
scas
push
push
mov
dec
add
test
push
test
cmpsb
mov
clc
cld
push
stc
out
and
test
addr16
mov
sbb
mov
movsb
stos
dec
jle
out
xor
pop
sbb
jmp
sbb
shll
mov
add
lods
xchg
lods
push
mov
lods
dec
mov
dec
cli
cmp
inc
std
mov
or
lret
lcall
jne
jl
mov
pop
popf
out
pop
adc
cmp
and
nop
xchg
sbb
insl
mov
lahf
repnz
add
lods
out
fs
sub
mov
jae
popf
push
decl
lret
in
hlt
pop
pusha
push
popa
dec
fistps
cmc
xchg
subl
sub
cmc
xchg
adc
xorl
pop
out
cmpsl
or
in
daa
test
sbb
stos
mov
cmp
insb
lcall
jle
es
push
xchg
ljmp
popa
orb
sub
sbbl
fs
push
mov
fimuls
push
movsb
inc
jne
sbb
push
rcll
imul
scas
cs
rclb
int3
mov
add
mov
hlt
jb
or
jl
inc
push
mov
jge
sbb
aaa
pop
popa
mov
add
xchg
pop
xchg
lods
fimuls
das
xor
or
into
scas
jne
xor
adc
mov
movsb
mov
fwait
jbe
jecxz
in
dec
fwait
or
sti
out
daa
dec
std
out
cmp
jns
push
cmpsb
mov
mov
push
arpl
andb
in
lahf
test
and
mov
mov
push
and
addr16
aaa
push
cwtl
cmpsb
cmp
jge
sub
out
pop
call
push
testb
pop
dec
out
sub
xor
ds
adc
aas
addr16
mov
xor
jnp
lahf
add
jge
xor
test
int
push
sub
pop
mov
lcall
aam
cmc
cltd
clc
sub
ja
mov
fxam
aad
ja
cld
jg
adc
mov
xlat
ret
mov
pop
xor
push
lods
cmp
icebp
aad
cmp
mov
imul
out
lret
dec
rorl
mov
bound
sahf
push
lods
cmc
adc
jle
ret
imul
outsl
int
popf
loop
add
stc
dec
imul
adc
ss
dec
repnz
test
out
mov
mov
hlt
leave
loopne
mov
outsb
or
sbb
push
gs
out
loopne
mov
add
insl
movsl
mov
adc
mov
add
or
jns
xchg
sbb
or
xlat
out
adc
sub
adc
dec
xorl
adc
aad
add
nop
xchg
pop
ds
adc
mov
arpl
les
fiadds
jmp
and
daa
jg
xor
inc
pop
fistl
mov
lcall
adc
loopne,pn
bound
jge
inc
push
pop
xor
cmp
mov
icebp
sahf
dec
into
jae
je
mov
mov
std
and
and
fnstcw
mov
mov
xor
into
mov
mov
sbb
mov
mov
mov
ds
gs
mov
xchg
or
and
and
mov
xor
stos
mov
scas
dec
pop
in
pop
cmpsl
dec
mov
out
or
cld
sbb
loop
mov
and
imul
and
add
jp
ret
cwtl
dec
es
loopne
fldl
adc
xchg
push
pop
pushf
ljmp
inc
lods
or
mov
mov
cmpsb
pop
cs
sub
sti
fwait
add
xor
cltd
push
mov
sbb
mov
ds
mov
inc
sbb
pop
sahf
shr
stos
pop
lret
xchg
dec
stos
cmp
sub
popf
dec
lods
add
sub
and
outsb
or
dec
cmp
dec
xchg
cmc
mov
repnz
mov
push
jmp
dec
in
movsb
testl
lock
push
sub
mov
pop
dec
out
cmp
andl
push
mov
xchg
imul
sub
mov
outsl
jp
add
mov
push
jecxz
dec
lods
iret
mov
mov
mov
fistpll
xchg
push
jmp
sbb
les
out
mov
cmpsl
mov
mov
hlt
stos
adc
mov
insb
add
jmp
and
xor
pop
iret
sarb
cmp
xchg
or
jae
fsubs
dec
adc
lahf
xchg
and
int3
into
inc
hlt
mov
fidivl
inc
xchg
bound
sbb
push
sbb
push
fs
xchg
dec
push
lds
aaa
shrb
sarb
call
leave
hlt
mov
mov
mov
imull
fnstenv
fsubrp
jmp
add
xor
mov
add
icebp
push
mov
jo
lcall
test
addr16
or
movsb
sub
xor
pop
cltd
sbb
cld
mov
enter
daa
dec
cmpsb
pop
cmp
add
mov
lock
sbb
cmp
inc
fildl
and
mov
xchg
test
out
sar
inc
in
cmpsb
mov
data16
xchg
add
pop
ds
push
movsl
xor
je
and
inc
daa
sbb
inc
pop
add
mov
dec
pop
push
sbb
ret
cmp
sbb
js
xor
je
sbb
dec
sbb
movsb
jns
pop
mov
push
lcall
fsubl
sub
jmp
lcall
xchg
dec
jg
add
mov
js
mov
pusha
push
and
imul
inc
xor
inc
inc
xor
nop
mov
rcr
imul
sahf
outsb
cmc
fcmove
push
xor
mov
mov
stc
add
popf
fs
ja
adc
test
lods
or
lds
cli
mov
das
out
cmp
mov
xlat
into
push
cmpsb
es
cmp
pop
or
xchg
adc
xor
aas
lods
adc
out
add
mov
sbbb
std
xlat
sub
jne
mov
mov
pop
mov
aad
xor
jno
orl
rcll
mov
les
bound
xchg
cs
mov
push
scas
call
mov
inc
pop
mov
insb
adc
aaa
push
jmp
push
faddl
js
inc
cmp
aas
fdivr
push
jb
insb
mov
je
mov
pop
aam
mov
lret
cwtl
xchg
mov
mov
lahf
inc
mov
in
andl
jl
dec
leave
scas
pop
inc
aaa
insb
mov
mov
int
inc
test
jno
add
jb
repnz
mov
lret
push
in
sbb
mov
loopne
cmp
xchg
fmul
ror
push
mov
lock
add
or
mov
mov
sub
test
or
es
xchg
frstor
test
xor
mov
popa
subb
jne
or
pop
mov
mov
or
xchg
add
out
adc
dec
lahf
mov
mov
fmulp
push
jg
inc
dec
mov
scas
xchg
sub
fwait
inc
push
inc
mov
xor
out
sti
pusha
arpl
and
adc
ja
xor
inc
in
push
xor
ret
pusha
mov
cmc
jnp
mov
and
sbb
dec
loopne
xchg
inc
sub
fcompl
int3
fdivp
jne
sbb
add
sbb
xchg
bound
push
sub
sub
hlt
pop
ret
dec
fdivs
xorl
stos
add
fnstenv
mov
mov
mov
lea
dec
nop
jns
in
shlb
fistps
cwtl
fucompp
sbb
jge
cmpsl
lahf
cmpsl
adcl
out
adc
popf
push
out
lcall
int
stos
xchg
and
sahf
insb
jo
cmp
jle
mov
push
pop
in
adc
inc
loop
pop
jns
ret
sbb
adc
scas
add
jae
jle
push
adc
adc
inc
jae
sbb
outsl
mov
sbb
dec
movsb
imul
ds
hlt
push
stc
adc
inc
or
cmpsl
mov
repnz
jge
leave
andb
hlt
or
and
dec
pop
jge
and
repnz
or
std
mov
insl
int3
in
inc
pop
in
xlat
ficoms
jns
ret
scas
xor
and
jmp
stos
or
movsb
mov
ss
scas
out
jbe
mov
in
sbb
mov
pop
and
dec
sarl
jno
adcl
xchg
jno
mov
xchg
movsl
sahf
xchg
jb
push
jo
lahf
ret
mov
push
dec
repz
mov
out
dec
cmpsb
ds
pusha
pop
jnp
ret
js
scas
hlt
pop
jge
scas
push
or
loope
pop
push
sub
lock
repnz
sti
adc
cmc
inc
adc
cmc
add
sbb
int3
sahf
add
mov
inc
add
int
cmp
pop
sub
pop
xor
push
outsl
outsb
fmull
jge
pop
adc
outsb
sub
mov
lods
imul
and
pop
mov
sbb
mov
mov
notl
xchg
cmp
add
aam
pop
cmp
jbe
mov
or
popf
pop
inc
cmc
mov
cltd
into
outsl
mov
pop
stc
mov
cmp
mov
subl
rorb
cmp
repnz
xor
ss
fcoms
shr
loopne
iret
ficomps
jge
adc
add
imul
adc
data16
lcall
andb
insb
dec
test
inc
arpl
and
adc
aad
bound
dec
iret
stc
ljmp
xchg
push
les
sub
xchg
icebp
sub
lea
adc
xor
inc
sub
adc
add
jmp
addb
adc
push
jns
aas
ja
hlt
jb
sbb
dec
mov
das
xchg
jecxz
jbe
xlat
cwtl
xor
jno
sbb
jl
dec
mov
dec
push
cmp
enter
xor
mov
icebp
mov
outsl
and
mov
add
stos
xchg
rcll
in
xor
dec
adc
sti
push
pop
shrl
adc
cld
jae
test
inc
jg
mov
adc
and
and
rcll
inc
shlb
es
fistl
ret
sbb
stos
add
fisttpll
jle
xchg
pushf
cltd
xor
jl
or
flds
lods
loopne
add
inc
mov
xchg
xor
mov
jecxz
mov
xchg
sub
jmp
popf
cltd
test
js
xchg
lods
pop
mov
mov
push
inc
cmc
mov
test
sbb
jb
cmc
sbb
mov
pop
and
je
pop
pusha
stos
add
cmp
jns
sbb
xor
aas
inc
or
dec
loop
jbe
fwait
xchg
nop
sub
cmp
popf
ja
inc
lret
dec
rcrl
and
mov
cmp
outsl
adc
shlb
cs
leave
or
jns
mov
in
or
mov
lock
sub
hlt
aas
fsubl
shrl
or
mov
mov
cld
popa
jmp
in
push
fsubs
andl
cld
jp
jmp
jb
js
loopne
dec
out
cmc
inc
popf
js
cmpsb
mov
or
das
stos
stc
xchg
daa
and
mov
jnp
hlt
mov
push
data16
ficoms
mov
jnp
ret
leave
pop
xor
inc
inc
mov
ficoms
imul
repnz
in
ficompl
lret
insb
insl
shrl
xor
push
lds
shlb
mov
incb
leave
not
push
hlt
push
fisubl
add
jge
shll
pop
xchg
or
loope
add
mov
pop
adc
push
xor
sbb
fmuls
into
dec
cmp
movsb
inc
mov
cmp
in
add
enter
daa
dec
test
cmp
mov
lea
in
dec
clc
inc
inc
push
or
jecxz
movsl
lock
lahf
loop
lret
push
sarl
nop
test
test
push
inc
in
cmp
mov
bnd
mov
and
mov
mov
ds
xchg
adc
rcl
inc
mov
orb
add
and
mov
paddw
int
in
sub
jns
lcall
pop
fdiv
xchg
loope
push
sti
mov
test
add
jg
not
mov
icebp
push
mov
cltd
mov
imul
cli
out
cmp
mov
jo
lret
mov
mov
xchg
sahf
inc
or
cmc
push
mov
push
or
adc
outsb
frstor
inc
cld
and
les
lods
mov
sub
cmp
and
fistpll
xor
mov
into
in
leave
gs
pop
test
repz
pop
dec
cmp
or
test
add
mov
data16
sbb
mov
scas
imul
or
sti
in
nop
mov
and
jl
addr16
cmpsl
icebp
nop
daa
pop
mov
mov
in
dec
adc
mov
rcll
and
call
mov
adc
adc
pop
jmp
pop
push
inc
mov
scas
inc
outsl
movsb
loopne
push
outsl
popa
jb
pushl
dec
xor
je
repz
loope
int3
fcmovb
jb
sbb
dec
cwtl
or
mov
rcll
xchg
je
dec
cmc
inc
fldt
push
bound
lret
das
add
mov
mov
in
sti
shll
subb
gs
adc
cmpsl
dec
outsb
sub
mov
push
cld
sahf
movl
and
cmp
aam
cmp
fs
lret
stos
sahf
sahf
es
fnsave
or
xchg
fistpl
popa
scas
stos
jecxz
dec
or
mov
mov
lahf
push
mov
jg
add
push
mov
mov
clc
adc
add
cmp
test
and
movsl
sbb
fidivrl
icebp
push
cmp
test
add
push
or
push
push
fstl
rorl
xor
jnp
sub
sub
sti
sbb
loop
xchg
pop
cltd
into
in
mov
test
and
pop
xor
nop
fwait
push
nop
sbb
adc
jne
dec
scas
mov
enter
xchg
stos
bound
jns
shrb
or
stc
xchg
pop
xchg
add
gs
cmc
sub
out
pop
inc
addr16
mov
mov
or
mov
imul
push
test
cmpsl
pusha
shll
xchg
iret
xchg
fsubrp
pop
or
subl
out
dec
jne
lahf
iret
cmp
dec
xchg
xor
xchg
int3
and
inc
aaa
push
jle
adc
xchg
push
fld
jbe
push
pop
imul
xlat
jae
xchg
and
xchg
dec
es
push
call
xor
dec
pop
mov
pop
pop
push
imul
cmp
repz
in
sarb
in
push
push
inc
in
leave
outsb
sub
mov
arpl
xchg
cmpsb
in
jge
lahf
pop
sbb
xor
or
inc
add
dec
int3
mov
mov
fidivl
icebp
xor
js
mov
popa
add
int
xor
push
shll
push
enter
daa
dec
mov
or
jp
insl
jl
cwtl
adc
addr16
scas
push
out
sub
and
mov
push
movsb
fistps
push
mov
jb
inc
cmp
vmread
daa
pop
sti
dec
adc
in
xchg
mov
incl
push
repz
divl
push
shrb
les
sbb
and
pop
xlat
xor
cmp
int
test
pop
xor
cmp
fsubl
test
hlt
test
fs
outsb
jg
testl
mov
outsb
out
and
sub
cmp
jbe
cld
imul
movsl
inc
lret
mov
mov
lret
jecxz
out
cmc
das
lcall
dec
or
loop
loope
stc
and
mov
divb
pop
loopne
lods
ret
mov
out
jecxz
cli
pop
or
xor
mov
or
insl
mull
mov
xlat
pop
imul
jne
add
xor
je
add
test
xor
lock
ljmp
mov
sti
and
sti
fwait
les
lahf
inc
cmc
aad
push
adc
lea
jnp
add
test
add
xchg
ja
stos
lea
stc
mov
pop
cmpsl
lret
and
adc
nop
jmp
cld
push
cs
repnz
inc
mov
repz
mov
mov
push
out
stos
xor
jecxz
mov
std
mov
jle
mov
pop
xchg
mov
xor
subl
negb
pop
sub
mov
mov
es
loope
lds
jae
or
shl
aam
divb
mov
cmpsl
dec
gs
lds
icebp
mov
jg
push
sub
mov
cs
and
aad
mov
adc
pop
rorb
sub
aam
lea
es
jecxz
fstp
scas
jl
in
push
xchg
sbb
ljmp
pop
lods
mov
sarb
andl
cmovne
add
pop
daa
test
adcl
jo
ror
test
movl
sbb
stos
pop
ja
stos
hlt
stos
lods
out
and
mov
mov
out
pop
jl
jmp
jo
push
or
dec
call
xchg
push
addr16
push
mov
in
dec
mov
scas
adc
fwait
test
shll
jle
mov
aad
out
mov
pop
push
jns
cmp
xchg
cmpsl
sbb
jle
ss
popf
or
adc
addr16
loope
jb
pop
mov
out
cwtl
mov
fimuls
das
rorl
dec
mov
inc
jmp
or
cmpsb
out
sbb
mov
mov
jmp
insb
mov
mov
jle
das
jno
hlt
dec
cmp
jo
jmp
cmp
xlat
ret
ficomps
test
inc
iret
in
jae
pop
push
push
pop
inc
dec
or
shrl
inc
lock
inc
fiaddl
gs
xchg
mov
and
imul
aas
scas
sbb
sbb
rclb
mov
leave
in
pmuludq
mull
inc
pop
add
sbb
dec
mov
fidivl
or
jg
add
ljmp
jno
mov
xor
shrl
scas
shrb
pop
cmp
movsb
pop
int3
mov
push
jbe
jmp
outsb
enter
daa
dec
jb
cmp
mov
push
fisubs
pop
xchg
dec
mov
push
shrb
cmc
movsl
mov
cltd
and
push
mov
and
test
sbb
in
in
pop
lock
xorb
pop
cmp
push
push
imul
rolb
das
cmp
roll
or
and
je
movl
xor
adc
pop
call
sub
mov
lcall
popf
fmull
sub
sbb
outsb
push
push
test
cmp
xchg
cli
pop
mov
cmp
mov
dec
mov
lds
and
xchg
xor
imull
pop
int3
sarl
pop
mov
rol
sahf
xchg
cmc
idiv
in
mov
push
loop
fwait
loope
fcompl
fs
sarl
dec
out
lods
test
inc
insb
out
jge
cli
mov
fnstcw
cltd
jge
adc
fcmovne
stos
in
dec
gs
pop
loopne
add
je
mov
cld
adc
div
add
data16
rcrb
push
in
sub
shrb
out
add
pop
jecxz
dec
les
ret
aad
pop
fists
in
adc
fnstcw
lahf
inc
repz
jo
cmp
out
addr16
call
scas
inc
xor
pop
sub
adc
pop
pushf
pop
push
sbb
cs
rorb
mov
outsb
aas
push
hlt
pop
jb
popa
sub
je
js
jecxz
jp
loopne
or
cwtl
addb
mov
mov
add
lret
in
or
jge
iret
aad
mov
xor
cmp
das
shlb
mov
sub
fisubl
imul
inc
adc
idiv
leave
mov
dec
push
xchg
dec
cmpsl
inc
loopne
mov
cmp
fwait
cld
hlt
inc
xor
lea
sbb
aaa
icebp
mov
jo
xchg
pop
xor
sti
sub
dec
xchg
aam
movsb
inc
ret
leave
dec
shlb
inc
inc
fldl
mov
out
xchg
pop
das
lret
ljmp
aam
and
sahf
mov
or
pusha
shld
cltd
sub
dec
mov
fld
push
mov
or
inc
loope
int
sub
addr16
mov
pop
and
jg
jecxz
pushf
out
xchg
fildl
mov
xchg
xor
lods
sub
pop
fistps
ret
mov
add
cmp
or
dec
lods
dec
lock
xchg
negl
rcrl
pop
jno
jne
adc
out
xchg
insb
cltd
bound
in
in
pop
mov
imul
jno
jmp
sbb
or
pop
jmp
pop
inc
jp
or
mov
dec
pop
jns
sbb
xchg
in
frstor
push
jne
pop
add
jne
xor
cmc
jb
xchg
rcll
orl
and
in
aas
sarb
cmpsw
stos
push
dec
bound
ret
insb
sbb
jp
mov
inc
mov
cmp
mov
fwait
lcall
xlat
popf
mov
jnp
push
mov
or
dec
mov
inc
outsl
cs
mov
rcll
mov
xor
add
shlb
and
neg
leave
pop
mov
xor
in
pop
inc
into
mov
sbb
pop
out
aaa
cltd
push
fisttpll
leave
fsubrl
int3
xchg
movsl
jne
mov
fsubl
jo
xchg
in
scas
sbb
xchg
loope
xchg
movsb
jecxz
pusha
push
ljmp
in
mov
dec
enter
daa
inc
scas
sarl
xchg
push
mov
out
loope
mov
and
nop
or
mov
sbb
mov
mov
test
out
or
roll
pop
outsb
scas
js
xor
pop
jns
adc
setg
out
sub
pop
xor
scas
push
ds
test
lock
rcr
das
addb
sbb
std
movsl
add
inc
jns
jl
insl
in
and
int
je
sub
scas
dec
pop
das
pop
lcall
aam
testl
lret
xchg
cmp
imul
mov
lods
dec
mov
push
xchg
mov
jo
and
or
cmp
in
repnz
lret
add
rorb
mov
sbb
pushf
xchg
sahf
sub
sub
mov
into
sbb
in
loop
mov
stc
xchg
adc
adc
imul
lea
lods
nop
lret
pop
mov
out
out
fwait
mov
mov
dec
icebp
cmp
bound
or
popa
cli
fcompl
loopne
jmp
jl
pop
cs
int3
mov
aad
push
mov
arpl
insb
ja
xlat
push
adc
dec
lret
shr
shrl
sti
stc
xchg
aad
iret
enter
mov
dec
and
fptan
addr16
fists
dec
xchg
std
pop
inc
lea
inc
call
negb
or
push
pop
pushf
ret
jmp
mov
inc
inc
ds
inc
rcrb
jb
loope
dec
cwtl
push
sub
push
scas
test
std
or
xchg
xchg
mov
push
push
sbbl
ret
mov
pop
push
mov
adc
fldt
lahf
xchg
test
loope
and
test
jge
cmp
sub
dec
add
cmpsl
inc
fisttps
mov
adc
gs
pop
inc
inc
lret
cld
call
and
mov
dec
and
shlb
or
aam
push
cmp
pop
or
es
jne
clc
pop
daa
sub
dec
pop
push
popa
repz
les
daa
add
push
mov
jmp
add
adc
ret
mov
ret
dec
push
fs
sahf
shrb
dec
push
sbb
add
pop
int
sub
ljmp
add
daa
pop
xor
cmp
xchg
mov
xor
cmpsb
xchg
add
outsl
mov
lret
ja
sub
insl
inc
push
push
aam
loop
sbbb
ja
jne
pop
sahf
mov
sub
out
jbe
mov
jns
out
in
insl
mov
mov
or
sub
loopne
mov
cmpsb
cmp
rcr
imul
mov
dec
call
shl
push
and
xchg
ret
push
fbstp
dec
pop
xchg
dec
push
aam
in
sbb
sbbl
out
or
popf
adc
mov
or
andl
xchg
jle
inc
and
subb
iret
cli
lods
outsl
ret
into
pop
push
pop
jmp
in
pop
jae
mov
push
fists
lock
out
sahf
mov
data16
xchg
insb
xor
sbb
sub
imul
adc
mov
xchg
ror
idivl
dec
je
leave
sar
ja
jg
mov
inc
adc
sbb
repnz
or
adc
jl
and
adc
and
mov
sbb
sbb
cmp
inc
fs
cmp
jbe
sbb
enter
daa
inc
jo
cmp
cli
les
and
mov
push
mov
fimull
cwtl
adc
movsl
rcll
pop
stos
jbe
pop
jno
sbb
or
push
mov
in
and
cmp
pop
ds
js
ret
mov
xchg
incb
jl
ret
cmp
les
pusha
popf
mov
sarb
call
sbb
arpl
add
cmp
dec
nop
fs
scas
mov
sbb
xchg
pop
scas
cmpsl
enter
pop
push
and
pop
sub
dec
into
outsb
sbb
rolb
mov
jg
push
pop
mov
push
insb
mov
adc
and
stos
cmp
cmpsl
aaa
dec
mull
pop
movsl
lret
xchg
shrl
mov
lret
sub
int3
push
cmp
test
jecxz
inc
push
int
out
or
stc
dec
jo
fs
clc
adc
fnstenv
rorb
lods
ja
mov
and
pop
mov
aad
pop
cmp
lcall
or
xchg
lret
into
jo
das
gs
add
pop
loop
pop
push
rcll
xor
push
imul
mul
add
pushw
jno
sbb
cmpsl
cs
cmpsl
pusha
push
mov
cmp
aas
sti
test
xor
or
movsl
movsb
ds
xchg
addr16
stos
aaa
adc
fldcw
ja
ljmp
xchg
shlb
mov
cmpsb
dec
lods
sub
pop
rolb
adc
imul
xchg
imul
inc
fistpl
pop
aas
xchg
mov
jb
xchg
xor
jp
je
dec
cli
jecxz
daa
repz
out
add
cwtl
idivb
mov
xor
mov
push
add
out
data16
loopne
adc
push
pop
lock
das
jle
cmp
cwtl
xor
mov
push
shl
push
push
testb
in
dec
cld
adc
lods
mov
ljmp
lret
imul
mov
xchg
and
cmpsb
sub
pop
outsb
lods
xor
xchg
add
xchg
int
ret
out
outsl
es
xchg
fstl
test
xchg
xlat
shl
ljmp
lcall
loopne
mov
xchg
sub
push
sub
jmp
bound
xor
int
ss
out
out
push
adc
scas
dec
neg
shrl
in
loope
sbb
je
rorl
scas
pop
js
cmp
dec
test
inc
add
repnz
lcall
and
imul
aas
xor
iret
enter
sub
jle
or
xchg
pushf
ja
xor
inc
mov
pop
or
sub
push
sahf
jb
jne
lds
push
push
loopne
test
pop
jns
fwait
popf
in
aam
xchg
xchg
push
mov
sub
cmc
jp
sub
mov
jae
mov
daa
test
in
int3
enter
mov
xchg
sbb
pop
jmp
imul
jns
cmp
mov
inc
dec
push
stos
cmp
jne
lock
insb
bnd
jnp
fnstsw
jle
aas
cli
push
leave
xor
adc
mov
jmp
pop
inc
mov
jnp
push
cmc
fcoml
mov
jmp
ret
xchg
popf
ficompl
scas
xchg
ret
cmpsl
out
sbb
insl
ja
popf
xchg
pushf
scas
inc
mov
shr
aad
popa
push
nop
repnz
inc
or
dec
loopne
hlt
lret
arpl
movb
add
sbb
aaa
pop
pop
inc
or
or
int3
addr16
insb
pop
mov
fisubs
inc
xor
in
out
insl
add
cmp
outsl
fldenv
push
stos
jbe
pop
push
in
test
enter
daa
inc
mov
cmp
xchg
mov
jl
jl
nop
sbb
and
andl
jge
and
test
jl
add
cmpsb
push
xchg
or
gs
js
jmp
cmp
and
adc
or
lds
adc
adc
pop
mov
loope
addr16
sahf
sbb
outsb
lods
add
jle
xor
fists
jb
jge
sub
xor
add
pop
sub
jb
push
jns
mov
sub
cmpsl
test
ljmp
test
sub
inc
mov
ret
xchg
and
xchg
das
push
or
jle
bound
cmp
out
jb
or
stos
roll
je
inc
adc
sbb
jg
sahf
outsl
lret
jle
dec
jne
xor
shlb
icebp
lcall
outsl
cmpsb
fs
push
int
mov
mov
lods
pop
add
mov
mov
and
add
and
xchg
xor
xor
pop
imul
gs
pop
in
arpl
add
mov
adc
jae
add
int
xchg
push
pop
sbb
loop
inc
xlat
out
mov
repnz
pop
mov
cmpsl
push
enter
imul
in
fnsave
dec
or
inc
dec
xchg
or
pusha
sub
cmc
je
rep
insl
mov
lea
mov
sub
sub
jl
jae
hlt
adc
dec
pushf
sbb
shr
adc
mov
inc
push
dec
sbb
cmpsl
daa
aas
xor
cmp
jnp
dec
xchg
fdivl
shl
sub
mov
std
pop
dec
ficompl
negb
jge
xchg
movsb
dec
pop
inc
add
pop
mov
clc
icebp
lock
or
das
pop
jg
mov
dec
pop
loop
aas
and
test
insl
js
int
divl
mov
shll
jne
push
lret
fidivl
inc
and
inc
std
mov
rcrb
jns
mov
loopne
ret
jbe
xchg
adc
mov
shlb
xchg
push
imul
popa
and
les
pop
mov
xchg
fdivrp
sbb
mov
nop
add
into
cltd
into
mov
test
pusha
ret
mov
pusha
mov
aam
sbb
add
xchg
sbb
ss
and
stos
mov
cmc
out
mov
add
add
sar
clc
inc
jecxz
mov
dec
xchg
dec
inc
mov
or
pop
pop
inc
mov
ja
mov
push
or
out
imul
popa
xorl
xchg
mov
shrb
xor
cld
bound
sahf
mov
fucomp
stos
in
mov
mov
int
sub
stos
xor
xchg
ds
mov
pop
out
mov
xchg
ds
dec
in
test
add
je
std
xchg
out
pslld
ficompl
xchg
xor
incl
ror
mov
mov
xchg
jo
pop
jmp
insb
pop
adc
jnp
mov
push
adc
adc
mov
mov
pop
jl
mov
jae
jbe
push
gs
mov
mov
or
xchg
sbb
sbb
xor
mov
xchg
lds
pop
add
lock
sub
shll
adc
cmp
inc
imul
jge
push
cwtl
sbb
hlt
jg
mov
pop
add
mov
pop
sub
add
jo
jge
scas
dec
jge
and
jnp
stos
jmp
mov
xlat
jnp
jbe
push
push
in
imul
enter
daa
inc
jle
cmp
fisttps
jno
stc
fnstsw
jmp
push
pop
ret
iret
pop
cmp
dec
mov
ret
push
ljmp
inc
mov
inc
ds
daa
pop
mov
and
mov
xor
jno
loope
or
sub
mov
xor
cmpsb
std
movsl
adc
bnd
lock
or
push
mov
xor
jno
xor
or
sub
pop
lods
add
ror
adc
clc
jmp
shrl
ja
test
pop
jne
dec
xor
cmp
cmp
and
out
or
and
jns
insl
fcomps
outsb
cmpsb
lret
jns
xchg
scas
push
mov
xchg
sub
adc
xor
enter
dec
ret
mov
xchg
adc
roll
inc
jne
mov
out
or
and
cmp
mov
or
add
into
ss
gs
popf
add
xchg
xcrypt-ctr
cmpsl
pop
add
and
fdivs
test
jbe
adc
inc
test
addb
sbb
sbb
shl
sub
into
mov
adc
mov
nop
dec
addr16
dec
push
movsb
imul
subl
cmp
cmp
mov
call
stos
sbb
mov
adc
cltd
fstps
cwtl
imulb
pop
shlb
inc
adc
aas
shrb
sbb
xchg
rorb
sub
jecxz
jecxz
in
push
fdivr
add
cwtl
insb
maskmovq
divl
fwait
lret
cmp
dec
addr16
lcall
in
xchg
in
jne
das
cmp
add
mov
lret
sarl
test
push
fistps
dec
repnz
cmpsl
inc
hlt
cwtl
mov
cwtl
add
mov
dec
ret
dec
cmpsl
insl
and
fsub
jmp
lods
sarl
sub
test
aam
inc
jg
add
push
rcr
lahf
dec
inc
clc
or
xchg
push
test
ljmp
mov
int
lcall
jecxz,pn
and
int3
pop
mov
mov
test
push
cltd
add
movsb
dec
mov
adc
push
xchg
fst
dec
les
push
test
lcall
xor
sar
imul
stos
lahf
sti
or
adc
add
clc
scas
xor
xchg
fmull
or
adc
mov
or
js
pop
sti
push
ja
lds
dec
js
inc
inc
jecxz
cltd
or
mov
fwait
jo
or
in
xor
inc
ja
and
adc
into
rcrl
xchg
loopne
in
popf
mov
mov
fnstsw
sub
roll
addr16
jp
push
ret
jle
mov
add
sbb
in
ljmp
xchg
inc
lea
shl
mov
or
dec
out
fdivp
popf
mov
jae
cmp
and
lds
stos
stos
push
imul
enter
pop
cld
lods
jle
or
ljmp
cld
jmp
pop
mov
or
pop
jae
cmp
push
sub
push
or
cmp
pop
fidivrl
dec
xchg
jno
addr16
insl
in
jnp
ljmp
sbb
inc
das
mov
inc
js
leave
cmp
dec
arpl
fdivl
outsb
mov
jge
mov
aaa
xchg
in
push
or
ror
int3
cmp
dec
sbb
mov
push
jo
repz
rcrl
movsb
psadbw
es
push
sub
enter
daa
inc
lret
jg
pop
filds
jl
test
push
inc
mov
jb
and
mov
nop
push
xchg
cli
pushf
test
adc
loopne
int
insb
cmpsb
push
cld
inc
pop
mov
jmp
pop
jne
add
je
loope
inc
or
or
cmp
clc
ds
sbb
leave
repnz
ror
fcmovnbe
dec
inc
push
orb
mov
imul
out
clc
flds
int
add
divl
sub
lcall
jge
mov
xlat
cld
outsb
inc
sbb
js
test
les
dec
xor
mov
dec
mov
data16
out
test
cmp
fdivrs
mull
lret
xor
outsl
inc
mov
inc
lret
jno
sahf
mov
fs
fnstcw
enter
icebp
loop
inc
jge
outsl
pop
ljmp
rclb
ss
shl
lods
sub
or
out
cmp
mov
out
popa
iret
or
fs
into
sbb
jnp
xor
and
std
adc
fistps
imul
sbb
sbb
pop
int3
pop
xlat
fs
out
fcomps
iret
in
jge
sti
mov
cmp
jno
sbb
nop
and
lret
dec
mov
jb
pop
fxch
jl
les
cmpsl
pusha
repz
lret
inc
movsb
icebp
mov
jbe
sub
scas
pop
fsts
mov
jmp
iret
outsl
cs
in
inc
sub
in
aas
outsl
xchg
insl
out
dec
je
loop
push
andb
daa
out
out
test
std
test
mov
mov
hlt
scas
mov
mov
out
rep
pop
dec
mov
stos
outsl
test
inc
idivb
mov
mov
out
ror
cmp
dec
inc
aaa
insl
inc
or
dec
in
scas
enter
sarl
mov
xor
mov
push
dec
mov
lret
insb
mov
sti
add
stos
jnp
aam
add
xchg
mov
pop
ffree
mov
clc
inc
adc
ljmp
fldcw
mov
xor
mov
xchg
popf
add
push
addl
pop
push
pop
repz
hlt
movsb
test
mov
xchg
stos
sbb
or
push
rcr
jns
ret
stos
mov
out
jbe
dec
add
adc
or
bound
or
divb
inc
xchg
mov
adc
sti
pop
mov
ja
push
xor
mov
or
mull
xchg
mov
lret
jle
jg
repnz
bound
xchg
jns
in
ljmp
mov
bound
sub
int3
outsl
shll
add
movsl
pop
mov
cmp
mov
je
cmp
push
mov
sti
popl
incb
fbstp
loope
jmp
lret
sbbl
out
popa
push
popf
mov
push
mov
add
xchg
stos
xchg
xor
popf
insb
xor
je
or
loop
push
sahf
mov
jl
jbe
push
ret
inc
pop
ljmp
jae
inc
xchg
jmp
stos
or
mov
addl
xor
xchg
enter
les
cli
imul
scas
outsl
xorl
sarb
or
xchg
loope
leave
scas
bound
stos
imul
inc
jno
movsl
jge
cmpsb
lds
test
aaa
aaa
push
popf
push
or
outsb
cwtl
int3
sub
in
pop
mov
ljmp
mov
jo
jge
scas
or
and
and
sbb
pop
movsb
lcall
jbe
in
in
cmp
enter
daa
inc
pushf
fidivrl
xchg
xchg
adc
pop
jg
popa
cmp
cs
and
dec
movsl
in
lds
lahf
ficompl
sub
or
test
stc
inc
pop
inc
repz
fstps
fidivrl
push
pop
mov
fwait
push
sub
loope
cmpsb
shrb
dec
lahf
cmp
scas
or
in
sub
or
test
rorl
xor
adc
xor
sub
int
fbld
jb
das
pop
stos
adc
sbb
jp
fmull
xchg
jg
test
ljmp
push
das
jg
fs
or
xor
sub
mov
and
out
arpl
adc
cmc
fcoms
mov
lret
inc
lds
mov
sahf
in
sbb
loope
cmc
mov
shll
loop
cmp
stc
es
or
popa
adc
fldt
dec
pop
lods
out
in
aaa
cli
mov
out
cmp
mov
or
cld
lock
jmp
fsub
lret
mov
inc
stos
out
jle
je
in
sti
adc
in
add
scas
out
inc
shrl
shll
mov
ds
mov
call
mov
xchg
push
push
nop
pushl
xor
flds
ds
xchg
int3
das
and
jo
inc
test
sub
push
pushf
sbb
mov
loope
and
rolb
pop
inc
inc
int
aas
push
in
jb
imul
push
out
jecxz
scas
insl
bnd
std
push
dec
movsb
cwtl
loop
push
mov
out
mov
jmp
or
and
pop
mov
inc
pop
lock
add
mov
je
or
enter
paddq
mov
jnp
sub
or
inc
xchg
dec
mov
inc
dec
cld
imulb
push
mov
xor
es
ljmp
sub
adc
ret
and
mov
in
cli
fdivr
cmpl
ljmp
mov
mov
jge
adc
push
xchg
es
mov
cltd
jae
pop
test
sub
mov
dec
push
push
sbb
ret
out
scas
popa
pop
xchg
push
sbb
cltd
dec
scas
shrl
test
jge
into
out
fnstcw
cmp
cs
dec
xor
cmp
mov
adc
sub
jno
fdivl
push
lods
inc
adc
cmpsb
or
cmp
fwait
into
sub
push
sub
shlb
inc
mov
bound
hlt
movsb
and
mov
in
mov
xchg
rorb
mov
pop
xor
das
push
addr16
jp
loopne
mov
sbb
mov
add
dec
outsb
mov
pusha
cltd
sbb
xchg
addr16
push
jmp
xchg
inc
mov
pop
pop
adc
xlat
lock
push
inc
inc
cmp
dec
lods
ljmp
sub
stos
out
push
in
adc
iret
aad
cmp
push
push
inc
pop
and
xchg
jae
xchg
jl
scas
rorl
or
cs
aaa
inc
imul
add
mov
fldcw
sub
cltd
rclb
fnsave
lret
leave
es
xchg
hlt
div
stos
arpl
in
stos
inc
je
cltd
jge
movsl
sbb
mov
adc
xchg
or
sti
add
sub
cwtl
pop
mov
mov
push
jo
sbb
scas
jmp
pop
sbb
movsb
and
xchg
pop
jbe
cli
sti
in
and
jns
inc
icebp
mov
sti
repz
dec
push
jl
leave
rorl
fidivrl
movsl
in
pop
and
repnz
stc
cmp
cmp
dec
test
test
sbb
jmp
inc
cmpsb
pop
xor
add
js
dec
sbb
repz
push
xchg
fndisi(8087
jno
stc
sub
pop
xchg
cmp
fcoms
sysenter
iret
adc
orl
or
xchg
and
ud0
jg
scas
xor
mov
int
mov
in
pop
sub
lcall
ljmp
mov
outsb
or
sub
ljmp
pop
sahf
mov
sbb
add
xchg
sub
dec
cmp
lret
adc
pop
pop
orl
and
adc
pop
ja
outsl
inc
fsubrs
stc
fst
push
adc
lcall
cli
and
inc
out
out
and
lock
xor
fmuls
or
outsl
and
fistps
gs
mov
arpl
mov
adc
imul
inc
in
popf
pusha
arpl
into
outsb
add
sub
ja
in
push
sub
sti
adc
and
mov
sub
or
fimuls
fstps
fnstcw
test
test
nop
jo
mov
lods
leave
sub
outsb
pop
aas
jns
adc
jo
pushf
aam
jmp
mov
inc
outsl
paddb
lods
int3
aas
lods
inc
cwtl
jb
and
dec
bound
je
sahf
pusha
jecxz
jnp
cmc
mov
std
idivl
insl
mov
pop
and
loop
jnp
or
call
pop
inc
fisttpll
lock
xor
daa
mov
imul
shrl
loop
iret
jo
insl
adc
push
jecxz
push
cmpsl
inc
lods
and
icebp
sbb
lahf
push
lret
xchg
jg
mov
lds
push
or
shlb
or
ret
mov
add
fstl
mov
mov
out
xor
popa
jge
subb
pop
mov
cli
sub
push
jno
push
in
add
mov
cmp
jp
dec
stc
jbe
test
mov
aam
dec
dec
ja
add
jl
iret
xor
stos
insb
ret
cmp
repz
dec
fbstp
xor
testb
xor
iret
mov
mov
push
dec
pop
mov
sub
and
add
push
mov
or
dec
lods
fwait
std
out
in
push
int
add
dec
add
mov
adc
mov
lret
and
xchg
ret
rorb
rol
sub
ret
addr16
jp
rclb
mov
push
int3
sub
scas
je
or
enter
dec
fcomip
pop
jns
cmp
mov
xorl
out
les
mov
jmp
cmc
push
orb
arpl
add
jmp
test
xor
ja
xor
cwtl
ret
into
pop
pop
roll
sub
push
jno
push
or
test
adc
in
jbe
repz
and
adc
arpl
mov
adc
outsl
inc
mov
cmp
mov
popf
in
leave
hlt
inc
fidivl
ja
sbb
lret
xchg
sti
fcmovb
aaa
rorb
lahf
add
or
ficoms
notl
scas
enter
mov
movsb
mov
mov
adc
mov
sbb
pop
xchg
ror
loopne
dec
daa
inc
lret
notl
push
jno
push
mov
dec
dec
adc
sbb
sti
xorl
mov
adc
pop
push
jae
testb
push
cmpsb
fistpll
pop
sub
js
push
cmp
xor
out
xor
jge
mov
in
sub
inc
jae
ja
int3
xor
mov
sahf
subl
insb
cmp
daa
sbb
inc
cmp
nop
xor
and
dec
sub
pop
pop
test
mov
sub
into
fsubl
push
outsb
outsb
mov
testb
cmpsl
dec
mov
jl
mov
gs
dec
mov
adc
test
sbb
js
adc
clc
test
mov
pop
mov
mov
leave
add
adc
pop
jp
adc
xor
mov
fs
shlb
jbe
mov
lea
inc
data16
bound
lods
loope
data16
add
int
and
xor
in
adc
or
cmp
gs
pop
sbb
outsb
lahf
adc
push
imul
mov
data16
xor
or
dec
sub
mov
inc
in
mov
push
jns
mov
nop
mov
rorb
add
arpl
jae
and
sub
dec
xchg
push
lds
popfw
lods
cmpsl
sub
and
adc
mov
adc
inc
idivb
aas
aas
dec
test
ja
fsts
je
stos
mov
xabort
and
sahf
push
nop
cwtl
pop
push
jns
mov
push
mov
adc
hlt
inc
sub
pop
out
push
lock
out
and
mov
pop
xchg
mov
testb
notb
xor
insl
sti
push
or
jnp
cmpsl
aas
dec
inc
mov
hlt
test
cld
dec
imul
and
dec
inc
push
pop
sub
sarb
fisubrl
nop
dec
add
ret
inc
mov
fnstsw
cmp
clc
notl
xchg
push
sbb
ljmp
out
jns
cs
ret
inc
arpl
dec
rclb
pushf
xchg
lds
shlb
test
std
std
mov
nop
and
in
test
pusha
push
or
out
rcrb
push
mov
pop
jp
mov
out
lahf
inc
test
js
xchg
fs
inc
call
pop
out
xor
ret
or
sbb
sbb
rolb
push
jle
out
adc
sbb
dec
inc
sbb
inc
aas
dec
rorl
ja
sub
movsl
push
jo
test
mov
mov
rcll
imul
sbb
jns
sbb
js
fistl
add
mov
addr16
lret
pop
jp
jae
mov
inc
mov
rcrl
xor
out
in
xlat
int3
pusha
iret
stc
jle
cmpps
or
mov
jge
add
movsb
pop
popf
and
sub
ja
ljmp
insb
je
int
sbb
jle
sbb
and
and
xchg
popf
pop
ret
or
inc
xor
jae
sti
mov
or
and
jmp
and
dec
cmp
xchg
int
cmp
lds
imul
stos
scas
cwtl
push
lds
push
xchg
rorb
movsb
repnz
push
dec
leave
adc
insl
hlt
mov
xchg
arpl
or
inc
jp
pop
jge
dec
lods
sbb
js
popa
adc
add
loop
jmp
cltd
or
cmp
cmc
jo
xchg
loopne
cmpsl
pop
nop
and
gs
cmp
out
movsb
cmp
xor
bound
jbe
sbbl
fistl
cmp
call
daa
jl
pop
lea
adc
push
int
pop
movsl
bnd
xchg
inc
imul
jno
test
movsl
cmp
or
dec
xchg
jb
xchg
repnz
pop
jno
jns
cmpsl
mov
loope
fwait
sbb
cmp
jp
ds
sbb
adc
cmp
mov
lret
jmp
adc
jge
roll
dec
add
int
iret
sbb
jecxz
js
daa
shlb
lcall
fmull
mov
outsb
sarl
outsl
test
push
das
xor
icebp
jg
iret
cli
mov
dec
mov
fwait
cmc
and
lods
lret
push
sbb
fadd
dec
dec
mull
jnp
mov
aad
mov
popf
pop
sbb
sahf
inc
mov
cmc
cmc
cmc
imul
push
sbb
arpl
stc
dec
adc
adcb
or
out
sbb
push
dec
mov
mov
cmp
jl
or
mov
gs
mov
pushf
fidivs
pop
lahf
push
dec
adc
inc
push
imul
pop
iret
mov
fisttpl
cmp
xlat
pusha
lock
movsb
arpl
mov
sub
cmpsl
std
or
xchg
nop
nop
inc
mov
inc
mov
rcl
les
sti
jp
inc
inc
mov
adc
insl
call
es
cmp
movsl
sub
adc
adc
jmp
push
mov
dec
xchg
cwtl
cmpsb
dec
aas
jmp
mov
sub
push
in
je
or
xchg
mov
sti
nop
push
std
inc
inc
je
adc
mov
xlat
sbb
adcl
mov
pop
mov
lock
jp
xchg
test
mov
cltd
mov
jmp
or
notb
and
dec
fsts
nop
mov
lret
jmp
cld
ja
dec
lret
je
rorl
jbe
shlb
inc
stc
xchg
dec
aam
xor
mov
and
rcr
cs
clc
xor
popa
xchg
nop
enter
pop
mov
lods
in
out
mov
out
sub
mov
fisttpl
sti
inc
cwtl
add
add
fadds
cwtl
dec
push
data16
dec
mov
test
loop
xchg
sti
sbb
xchg
pop
and
jo
out
add
jge
jg
pushl
jmp
or
nop
xor
and
mov
sbb
lcall
test
ja
mov
rolb
sub
or
testl
adc
jb
fxch
mov
outsb
std
push
bound
inc
mul
add
lods
xchg
mov
sti
cwtl
sub
mov
lret
xchg
jp
lret
and
clc
mov
stos
pop
dec
pop
pop
in
or
pusha
push
jmp
xchg
loopne
mov
movsb
test
mulb
adcl
popf
dec
dec
or
popa
cmp
stos
pop
addr16
and
aaa
xor
leave
mov
jle
mov
xchg
adc
ret
repnz
jo
inc
mov
sbb
les
adc
jne
inc
in
push
out
jmp
decb
xchg
and
dec
sbb
imul
vmovhps
mov
loop
mov
mov
in
hlt
xlat
lcall
jge
nop
jge
stc
mov
jno
pushf
aaa
push
mov
or
add
inc
push
int3
aam
mov
inc
xchg
test
fisttpl
xor
popa
outsl
and
and
aaa
andb
aad
ja
stos
in
aad
xchg
enter
daa
or
jno
fimull
jl
imul
ds
mov
sbb
stc
shrb
xor
lahf
push
scas
out
push
mov
mov
add
xchg
inc
cwtl
movsb
pop
cmpsb
in
enter
mov
pop
mov
xchg
push
adc
loope
mov
sub
xchg
js,pt
into
adc
adc
add
in
jmp
adc
cwtl
ds
jbe
lock
int
cmp
sub
cmpsb
pop
cmpsb
ret
fstpl
fiaddl
jo
inc
mov
outsb
xor
xor
ret
orb
jg
sti
cmp
or
mov
cmp
and
jae
push
push
repz
cmp
jg
and
pop
std
in
shll
rorb
xor
loope
mov
fyl2xp1
outsl
fiadds
psubw
push
pop
fs
stos
pop
adc
enter
adc
mov
fnstsw
cli
mov
jp
lea
sbb
push
pop
jns
sbb
loopne
ja
pop
mov
mov
imul
out
es
loopne
jnp
jg
push
xlat
lahf
cmpb
pop
fcomps
sbb
sub
and
fwait
and
sub
mov
dec
sti
fabs
add
repz
jl
xchg
fsubrs
hlt
push
or
pop
cmp
movsl
dec
loope
pop
xchg
mov
rorb
shr
popf
arpl
lods
in
popa
inc
add
mov
rcrl
or
lahf
dec
adc
cmpsb
jecxz
ja
sub
std
in
arpl
cwtl
into
popf
test
dec
xor
dec
lret
fcmovnu
pop
scas
pop
sub
jo
lock
movsb
push
das
jbe
xlat
mov
push
pop
push
rcrl
out
cwtl
push
rep
leave
repnz
cmpsl
cmp
xor
mov
jns
lret
jecxz
ja
mov
mov
data16
movsl
rcrb
aad
sub
xchg
aam
xchg
mov
cmpsl
or
mov
xlat
clc
insl
mov
xchg
iret
sti
das
ljmp
lods
dec
std
dec
mov
or
dec
xchg
iret
stos
cwtl
push
add
pop
cvtps2pd
xor
negb
jae
and
in
push
sub
test
fcomip
xchg
or
jnp
add
ds
cmp
out
gs
add
lcall
xor
dec
cmp
lds
mov
mov
xor
xchg
fidivrs
mov
pop
xlat
movsl
ja
fisttps
inc
insl
xor
and
push
mov
std
jne
dec
es
nop
add
dec
xchg
insb
bound
inc
jns
adc
in
fdivs
mov
ret
push
or
dec
out
mov
add
mov
xlat
in
push
movsl
mov
sub
dec
lcall
fwait
hlt
daa
xchg
rcrl
andl
mov
addr16
sub
aas
jge
stos
shlb
call
jnp
mov
adc
add
adc
into
inc
iret
push
push
lret
ret
outsl
pop
std
aad
inc
dec
adc
add
mov
mov
inc
inc
gs
fidivl
pop
xchg
sbb
dec
lahf
imul
adc
inc
cmp
movsb
mov
xor
or
hlt
and
arpl
loope
rolb
aaa
bswap
mov
inc
sub
jae
sub
mov
pop
pushf
fidivrs
xchg
xor
mov
dec
cltd
and
mov
movsb
push
das
out
push
add
jbe
xlat
add
mov
ljmp
nop
movsb
dec
jno
push
jl
inc
xor
fwait
pop
fmuls
xchg
xchg
int3
ja
jne
push
mov
test
aam
mov
cmpsb
push
dec
xor
or
xchg
pop
out
daa
push
dec
scas
loope
popf
imulb
sub
adc
out
adc
cmp
sbb
iret
in
stos
jle
xor
test
int
mov
pop
and
cmp
movsl
movsb
jle
xor
insb
test
andb
ljmp
dec
lret
mov
sub
je
and
mov
cmp
pop
lret
stc
sarl
or
mov
rorb
int3
mov
loop
cld
cmp
mov
pop
cmp
sub
cld
lods
xchg
andb
xlat
mov
cli
mov
pop
mov
or
mov
into
imul
ja
loopne
and
xor
adc
leave
adc
xor
test
sbb
mov
cwtl
in
sub
adc
sti
iret
dec
inc
incb
iret
aad
mov
xchg
dec
add
xor
les
fs
mov
pop
push
popf
call
and
cltd
pop
or
add
jo
mov
adc
inc
mov
loop
sub
cmpsl
jb
push
int3
je
xchg
jecxz
push
aad
add
dec
cwtl
mov
and
inc
rolb
mov
dec
fisttpl
imul
imul
mov
xchg
sbb
shll
xor
gs
iret
jl
cmpsl
cmp
cmpl
int
xchg
push
mov
mov
pop
mov
test
shl
add
sub
mov
mov
add
fnsave
push
mov
ljmp
xchg
lods
mov
shlb
mov
push
sahf
push
push
frstor
mov
sbbl
mov
mov
jbe
push
in
stc
orl
shrb
fs
mov
rcrl
pop
jnp
mov
sub
enter
or
aaa
push
arpl
push
loopne
or
mov
mov
and
mov
sbb
aas
dec
sbb
pop
or
out
sub
pop
es
jne
daa
out
mov
sub
mov
in
xor
mov
lcall
or
rorb
scas
fwait
ret
addr16
push
dec
jp
xchg
cltd
mov
xchg
inc
mov
push
lcall
and
popa
sub
insb
or
xchg
xchg
adc
xchg
pop
cmpsl
xchg
mov
xorl
xchg
popf
lcall
push
jle
dec
stos
inc
mov
lret
insb
mov
mov
mov
push
in
push
dec
or
adc
pop
ret
repz
xor
xor
js
dec
adc
xchg
xchg
aam
inc
in
push
fisubl
xchg
rclb
mov
add
imul
vshufps
fldt
xchg
mov
ds
insl
stos
repz
bound
nop
cmpb
jb
out
dec
aaa
into
xchg
clc
or
inc
mov
int3
stos
sbbl
xor
pop
pusha
lods
scas
inc
in
and
cmp
mov
push
dec
pop
jbe
xor
enter
daa
cmp
and
ret
nop
xorb
idivb
xchg
dec
or
int
pop
sbb
cli
sub
push
pop
lods
jae
lock
push
inc
mov
xchg
cmpsb
jmp
jg
les
js
inc
sti
pop
shlb
add
jle
lock
adc
mov
mov
ret
vpmacssdqh
sahf
mov
mov
mov
dec
mov
enter
push
roll
movsb
xor
push
mov
lret
movd
and
outsl
outsb
cli
push
inc
test
shlb
jg
pop
sub
test
adc
push
int
push
and
test
cmc
mov
negl
cmp
insb
mov
fists
cmc
dec
cld
mov
outsl
pushf
mov
and
jo
cmp
adc
mov
mov
inc
dec
out
in
sti
cli
out
ja
xor
lods
addr16
scas
orl
dec
inc
mov
loopne
in
pop
cld
es
adc
out
mov
fiaddl
cli
push
push
data16
add
cmc
and
xlat
sbb
fdiv
mov
push
clc
sti
jle
cltd
inc
jmp
imul
and
scas
inc
divl
dec
dec
mov
repz
notl
ret
call
mov
jg
adc
push
pushf
sbb
inc
jmp
mov
inc
adc
inc
jmp
arpl
dec
mov
jnp
adc
jecxz
jae
movb
std
cmp
cwtl
inc
insl
les
xor
ja
mov
insb
mov
jae
xchg
les
inc
mov
mov
notb
negb
leave
or
dec
lret
cmpsl
cmp
add
push
mov
cld
clc
fnstcw
lret
shll
and
mov
adc
movsb
or
rol
mov
insb
test
push
ret
jge
pushf
lods
cmp
xlat
gs
clc
jecxz
rclb
pop
sbb
and
xor
mov
pop
hlt
lods
push
mov
outsl
addb
popa
in
mov
xchg
gs
dec
mov
cmp
test
xchg
mov
jecxz
cli
sbb
scas
insl
shll
adc
stos
pop
mov
out
sub
std
add
mov
les
cmpsl
test
or
js
mov
and
jbe
pop
shl
sbb
dec
adc
fwait
cmpsl
sbb
sub
push
cld
test
jne
push
mov
sahf
sub
or
jmp
cs
jns
xchg
in
in
loope
xchg
stos
inc
pop
mov
mov
sub
test
jecxz
jp
or
cmpsb
dec
push
mov
jge
les
mov
in
add
fisttps
and
arpl
aaa
inc
out
stos
pop
popf
shll
push
mov
outsb
cs
std
dec
insb
and
loop
sbb
jle
data16
stc
jle
and
addb
pop
imul
inc
pop
xor
sbb
pop
push
inc
ds
or
adc
lds
jl
ficoml
stos
or
sub
xchg
sbb
mov
repz
push
lds
fcmovb
idivb
xchg
aas
scas
repnz
leave
lock
lock
mov
jge
inc
xchg
mov
sbb
loop
or
cwtl
in
int3
xchg
xor
pop
aam
pusha
faddp
out
pop
xor
jb
push
scas
and
mov
sbb
ficoms
in
push
jbe
jno
mov
mov
nop
out
cmp
mov
jno
mov
jl
jbe
dec
jns
dec
push
pop
adc
movsl
push
push
aas
and
or
push
sub
out
imul
inc
inc
mov
mov
mov
xorl
js
jae
shl
das
add
pop
daa
dec
cmp
in
jo
loope
mov
add
shlb
iret
xchg
andb
stc
add
inc
fdivl
xor
loopne
das
fisttpll
pop
and
push
fisttps
fdivr
dec
push
sub
lahf
cmpsb
outsb
pop
cwtl
lock
pop
sbbb
jg
xchg
mov
push
loopne
mov
sub
pusha
addb
push
stos
fdivs
mov
cli
shl
ret
mov
test
add
sub
adc
xor
out
inc
outsl
jnp
es
sub
daa
sahf
inc
fs
push
adc
pop
adc
mov
mov
mov
inc
mov
cli
and
xor
ja
cmp
push
mov
xor
sub
cmp
pop
sbb
jno
inc
xor
imul
in
cmp
or
mov
xor
test
sub
mov
in
aad
mov
decb
xchg
mov
dec
mov
pop
js
xchg
les
mov
add
xchg
and
lea
pop
sbb
int
call
pop
jno
xchg
adc
ljmp
push
or
xlat
sbb
inc
add
sbb
fdivl
add
orb
ret
movb
push
std
loope
sbb
insb
cli
mov
es
out
subl
fldt
sub
jmp
mov
in
in
lock
leave
push
das
adc
mov
jne
pop
and
and
roll
loopne
popa
sarb
dec
lds
js
popl
icebp
daa
pop
push
cld
and
nop
lret
xor
sbb
xchg
jne
mov
ret
lds
xchg
cli
out
arpl
adc
dec
test
ret
or
jno
xor
jl
push
mov
push
ljmp
clc
lods
nop
pop
idivl
jb
xchg
xchg
movsb
scas
mov
xchg
xchg
emms
xor
add
xchg
mov
test
mov
pop
fs
push
jb
orb
sub
bound
sbb
icebp
rorl
mov
pop
sarl
out
mov
arpl
jmp
add
sarl
or
mov
xlat
mov
sub
mov
mov
cmpsb
ja
bound
dec
add
inc
xor
adc
mov
push
lahf
pop
sub
adc
ljmp
jns
dec
sub
xchg
stc
addl
aam
sub
movsb
lahf
mov
repz
jp
das
sub
mov
in
cwtl
jnp
mov
enter
or
sub
test
sbbb
xchg
and
jae
lock
popf
call
aaa
popa
push
cld
adc
stos
sub
mov
in
mov
insb
mov
nop
jnp
outsl
lcall
dec
mov
push
int3
iret
outsb
rcl
xchg
jle
pop
mov
ror
jmp
rcll
xchg
or
mov
inc
loop
mov
lret
xchg
sub
sbb
call
test
faddl
add
jl,pn
leave
addr16
ds
add
arpl
add
jge
mov
sbb
dec
aaa
dec
mov
or
xchg
or
cmp
int3
xorb
fisubs
in
inc
lcall
add
xchg
and
xor
shl
lret
movsb
repnz
cmp
aas
out
in
jno
add
ret
daa
cmp
jno
xchg
cli
jl
into
out
dec
call
imul
popf
sub
lds
fnstenv
fdivp
dec
push
xor
inc
jl
icebp
mov
pop
adc
fistl
lods
ds
loope
scas
imulb
add
cmp
xadd
cmpb
cmpsb
xchg
xor
nop
es
int3
sub
shl
jno
xchg
fisubl
sub
ja
mov
mov
inc
fsubl
leave
mov
rcl
test
shr
js
sarb
rcll
mov
fldt
mov
or
outsb
aaa
movl
decl
sbb
sbb
sarl
mov
imul
jo
stos
cmc
fmuls
xor
push
loop
adc
cwtl
fs
fs
adc
mov
dec
lods
dec
in
mov
fnsave
push
hlt
xor
fs
cmp
cmc
rorl
xor
into
adc
pop
gs
mov
loopne
mov
adcb
insl
cwtl
imul
add
int
data16
in
sbb
imul
xlat
fwait
repz
mov
inc
test
sti
fsubl
repnz
lods
xor
sbb
nop
xlat
adc
mov
sbb
and
int3
repz
adc
lea
fs
mov
cmp
pushf
jno
call
cmp
jecxz
and
out
pop
mulb
push
pop
pop
aam
dec
mov
fdivs
jg
or
mov
mov
or
and
jbe
int3
fistpl
cwtl
lcall
std
fisubrl
repnz
push
mov
cmp
cmp
movsb
dec
adc
out
dec
shlb
mov
push
sar
dec
mov
lret
lahf
pop
rorl
cltd
lds
ljmp
shrb
sbb
pop
xor
ret
fwait
sbb
mov
frstor
outsb
pop
xchg
lret
lock
ljmp
stos
lods
sti
and
xchg
add
xchg
jmp
mov
cmc
sub
cltd
sub
adc
push
pop
fnsave
xor
dec
lret
popf
push
sbb
lds
shll
mov
stos
cmc
or
add
push
or
dec
nop
clc
xor
lret
or
push
add
jne
addb
pop
jp
dec
pop
clc
ja
xchg
pop
dec
idivb
inc
inc
leave
scas
pop
or
sbb
inc
ret
sbbb
mov
jne
sbb
mov
dec
out
leave
adc
bound
jae
mov
or
sub
lahf
ljmp
outsl
or
mov
sub
stc
dec
push
mov
bound
addr16
cmp
xor
jge
jp
xchg
lcall
push
xchg
in
das
addb
adc
mov
jbe
cmp
pusha
stos
pushf
testl
negb
addr16
inc
push
adc
add
int
pushf
ret
or
inc
lret
inc
je
es
xchg
push
or
push
mov
inc
popa
inc
das
fidivrl
repz
xlat
adc
imul
out
ljmp
shrb
mov
cmpl
jnp
pop
int
inc
mov
out
sbb
daa
or
popf
add
xor
pop
xor
xlat
fimuls
dec
xchg
xor
sub
les
xchg
sub
cmp
in
push
cmp
add
hlt
sub
pop
lds
enter
daa
cmp
dec
cmp
jno
sahf
mov
dec
push
push
mov
pop
mov
andl
icebp
ret
aam
add
add
flds
sbb
cmpsb
je
repnz
cmp
js
lret
mov
jmp
ljmp
push
sub
mov
cmp
jp
daa
mov
adc
pop
and
orb
sbb
loopne
add
pop
pop
xor
dec
es
xchg
pop
dec
int
mov
and
and
scas
lcall
inc
fcoml
add
in
mov
jl
sarb
adcb
lods
mov
inc
xchg
mov
mov
inc
fsubl
jge
jne
sub
xlat
fsubs
push
xor
fisubl
outsb
lret
pop
rcll
mov
mov
pop
sbb
or
lahf
xchg
fbld
outsl
cmp
push
stc
xchg
push
lods
andb
jo
loope
aaa
movsb
shrb
pop
ljmp
sti
fnsave
shlb
xorps
test
mov
pop
pop
sbb
adc
imul
adc
cmpsl
lock
sbb
cmpsb
sbb
sub
sahf
mov
stos
sub
dec
adc
aad
add
cmovg
mov
fxtract
mov
les
outsb
repz
push
imull
imul
ret
pusha
push
and
lods
adc
andb
sbb
inc
cmpsl
pop
pusha
inc
cmp
aas
movsl
fldenv
stos
sub
sbb
push
loopne
in
or
dec
cbtw
jne
sub
or
in
lcall
fcmovne
mov
mov
aad
adc
shll
mov
jecxz
pop
and
jp
shl
jns
mul
cmp
sbb
aas
cmpsl
cmp
hlt
mov
aad
lock
jns
in
push
rorl
mov
pop
popf
and
test
scas
pop
add
cmp
jmp
aam
pop
push
ret
sub
fisttpll
clc
xchg
into
xchg
or
pop
popa
xor
mov
sbb
mov
dec
ljmp
mov
ljmp
cmp
push
clc
mov
push
test
jg
xchg
fs
pop
add
mov
mov
stos
in
jbe
push
push
scas
add
and
or
insb
push
insl
xor
mov
xor
les
xchg
xchg
add
ret
dec
sub
mov
push
fwait
jne
jg
in
je
orl
out
test
xchg
mov
jns
lods
xor
inc
in
xchg
xchg
shlb
mov
js
sub
lcall
jp
cltd
lret
mov
dec
push
and
dec
mov
cmpsl
imul
jle
pusha
or
xchg
fucomip
cld
pusha
xchg
shrb
xchg
outsb
mov
add
divb
popf
ss
mov
jp
stos
bswap
sub
sbb
jnp
and
mov
lahf
adc
ss
sub
pop
ret
mov
clc
faddl
cmp
inc
push
mov
jle
xorl
fidivl
pusha
mov
cs
mov
imul
inc
scas
dec
or
xor
inc
pop
js
je
aad
aam
mov
push
mov
push
arpl
pop
inc
popl
jge
lods
add
aaa
lret
or
scas
pop
add
add
pop
popa
mov
push
xor
xorl
scas
shlb
and
lret
xchg
andl
push
pop
in
aas
out
lods
enter
daa
cmp
push
cmp
lret
xchg
jl
sti
repnz
js
push
add
movsl
and
and
mov
lahf
adc
ja
cmpsl
aam
test
lret
cli
ss
repnz
cmpsb
testl
popw
sub
call
loope
sbb
sub
cmp
out
int3
pop
ds
dec
xchg
adc
ss
rolb
les
call
sbb
int
or
pop
mov
in
and
push
or
cld
add
xchg
mov
subb
divl
sarl
mov
fidivrl
mov
push
xor
inc
cmp
loope
fwait
negl
pop
shrl
sbb
jae
cmc
data16
and
cmp
pop
loop
aam
stc
dec
stos
out
or
jle
jp
xor
mov
lds
out
cmp
xchg
xor
mov
add
into
fimull
push
loopne
scas
xor
js
or
mov
stos
mov
add
pop
data16
sahf
sbb
loope
fwait
xlat
sbb
cld
sub
push
push
mov
push
cmpsb
sti
cmp
and
aad
push
inc
nop
cmc
and
clc
scas
inc
inc
cmp
out
les
in
xchg
push
mov
ds
add
pop
mov
jmp
fimull
inc
jmp
mov
xlat
inc
cs
sub
push
or
aas
inc
pop
imul
dec
dec
xchg
mov
je
fstpl
out
fwait
adc
adc
std
ret
xchg
cwtl
xor
fdivs
incl
out
dec
dec
mov
mov
dec
mov
cmp
add
xor
shll
lcall
shll
mulb
imulb
sahf
subb
dec
dec
mov
cmpsl
aaa
mov
mov
lods
scas
fdivrp
movsb
mov
jge
cwtl
mov
cltd
shll
and
aad
adc
lds
dec
dec
loop
mov
push
ret
mov
or
jbe
iret
ret
dec
add
add
push
lods
shrl
sbb
jns
cli
push
and
inc
sete
cltd
cltd
stos
pop
test
xorb
lret
cwtl
fldcw
test
hlt
xchg
xchg
push
sbb
xchg
stos
ljmp
scas
cs
shrl
out
mov
repnz
cmp
repz
sbb
xor
shr
or
test
xchg
fcmove
xchg
cmp
mov
mov
mov
inc
testl
fwait
movsb
push
std
push
mov
popf
jne
pop
cmp
xchg
bound
push
aam
shl
push
xchg
out
add
lea
fisubl
cmp
jp
fcoml
mov
xchg
test
push
orb
inc
in
outsl
adc
filds
or
movsl
call
jg
xorl
out
lock
popf
pop
add
mov
mov
push
jle
xor
xchg
jnp
or
push
stos
sahf
xor
sti
mov
cld
ret
inc
pop
inc
push
inc
inc
mov
jae
cmp
dec
inc
mov
cld
sarb
inc
pop
push
jle
jecxz
cmp
test
imul
xchg
scas
mov
fadd
jno
aam
bound
mov
daa
rcrb
int3
xchg
cs
in
xchg
sub
fidivrs
xchg
fistpl
mov
or
dec
jnp
std
pop
jmp
inc
xor
pop
nop
cli
sbb
jbe
xor
ficoms
and
arpl
movsb
xchg
cmp
fcmove
daa
jbe
mov
out
mov
jge
aaa
lahf
adc
jno
sbb
jl
iret
lods
dec
xor
xor
and
sbb
jp
xor
xchg
jnp
inc
orl
outsb
js
mov
pop
imul
loope
add
sub
xchg
or
ds
fnstsw
rclb
push
js
ret
hlt
mov
sbb
xor
cs
sbb
lcall
inc
push
pop
pop
into
sbb
cmp
fsubl
loop
outsb
jmp
sbb
or
pop
jg
pushf
pusha
mov
jno
mov
push
mov
lds
push
xor
hlt
rorb
pop
cltd
dec
lret
cwtl
roll
mov
ja
pop
inc
out
sub
and
outsl
testl
add
add
cmp
push
adc
mov
dec
movsl
mov
pop
out
fwait
xchg
cli
out
addl
gs
in
jno
cld
into
mov
insl
pop
loopne
rcll
xchg
daa
arpl
pop
lahf
imul
mov
lds
sbb
cmp
sbb
sbb
out
xlat
pop
repnz
sub
adc
xor
leave
adc
add
push
dec
jle
push
icebp
jae
bound
leave
les
mov
lds
dec
push
incb
pop
cmp
or
pushf
jb
sub
es
loopne
bound
inc
mov
mov
aas
jecxz
or
jbe
dec
or
je
jecxz
ud1
adc
std
jge
scas
cwtl
jmp
jne
push
std
ljmp
mov
pop
pop
mov
or
lock
push
das
mov
mov
fldenv
jp
xorl
iret
dec
mov
movsl
cmpsl
ss
ja
pop
cmc
jb
adcl
cld
iret
enter
punpckhbw
scas
or
pop
pop
aas
shlb
shl
pop
mov
aam
pop
int
dec
icebp
gs
mov
clc
or
xchg
mov
out
ljmp
add
xchg
sub
sarb
ljmp
push
add
loope
sar
and
outsl
mov
push
inc
dec
pushl
clc
std
lea
dec
stos
add
shlw
stos
ret
out
sbb
aaa
lret
push
xchg
pop
ljmp
sahf
ja
push
cmp
adc
xor
mov
pop
jp
xorb
cwtl
dec
iret
iret
pop
inc
mov
or
mov
fwait
sarl
mov
adc
out
data16
bound
sub
fistps
repz
xor
in
lret
sub
nop
xchg
inc
addr16
pop
cmp
aam
mov
add
mov
test
xchg
dec
das
xchg
icebp
in
les
fbld
or
lcall
repz
or
sbb
cld
jecxz
popf
test
sarl
mov
js
dec
hlt
mov
jnp
outsb
daa
jle
cmp
repnz
iret
ljmp
pop
jle
outsb
inc
xchg
cmp
jae
je
push
pcmpgtb
jns
push
faddp
ficoml
pop
jle
enter
sahf
test
scas
adc
enter
outsl
sarb
mov
jp
pop
leave
inc
adc
hlt
das
mov
ljmp
pop
fcomps
dec
xchg
inc
aaa
dec
push
push
or
pushf
and
xchg
movsl
ror
sub
inc
pop
mov
jns
xor
cmp
mov
jle
cmp
dec
dec
mov
lods
aad
movsb
push
pusha
mov
sub
push
in
or
dec
sbb
mov
xorb
dec
jl
ja
dec
movsb
jns
push
enter
xor
and
test
cwtl
lods
push
dec
mov
call
inc
adc
dec
cmpsb
std
cmp
pop
scas
inc
add
test
sbb
test
push
push
popf
pusha
loope
adc
sub
ret
dec
ss
nop
pop
mov
shr
cmp
addb
add
clc
cli
xor
pop
dec
fistpll
outsb
int
mov
mov
lcall
mov
sub
aas
es
push
dec
and
lods
jg
out
mov
push
loop
shll
and
cmp
cmp
push
and
notl
fwait
xchg
dec
and
dec
mov
push
ret
sbb
cmp
hlt
xchg
jmp
lock
loop
arpl
stc
mov
pop
sbb
pop
repz
add
fldt
or
jge
cli
and
sbb
inc
test
or
call
mov
loopne
or
pop
mov
or
bound
imul
add
ds
sbb
imul
scas
lret
adc
in
push
es
cwtl
stos
mov
cmp
aad
sbb
nop
inc
and
sbb
fnstcw
les
ljmp
sub
cmp
popf
jo
pop
lock
pushf
sbb
push
xchg
lds
inc
cmp
jge
mov
aas
xorb
movsb
imul
jecxz
enter
pop
sti
std
and
sub
daa
adcb
sub
dec
and
fistl
lods
pop
inc
xlat
dec
mov
mov
out
shrb
je
mov
or
rcl
mov
fsubrs
sbb
cmpsl
xor
jae
icebp
pop
cltd
in
cli
fcmovu
lret
pop
aam
mov
in
pop
mov
pop
lahf
push
shlb
icebp
mov
inc
pop
cmp
xlat
xor
ffree
loopne
clc
inc
addr16
and
fwait
popa
jp
stos
lods
cmpsl
mov
mov
and
xchg
pop
xor
rcl
rsqrtps
test
cltd
pop
clc
inc
test
aam
and
test
dec
sbb
hlt
cwtl
test
fwait
mov
fnstsw
mov
std
pop
jne
mov
je
stos
mov
outsb
out
jge
test
mov
xchg
decl
jne
cltd
sahf
inc
or
adc
mov
aaa
mulb
pop
xor
lea
ret
inc
and
call
cmp
into
mov
and
inc
sarb
fadds
mov
xchg
xchg
xchg
test
cmp
pop
pop
mov
mov
addr16
cmp
jg
mov
nop
cli
mov
pop
cld
pushf
dec
adc
cmp
push
jge
pusha
fisttpll
sbb
inc
fwait
xchg
xchg
dec
add
jmp
sbb
pop
out
dec
jno
stos
sub
je
sti
push
aaa
scas
mov
and
sbb
mov
xchg
dec
jle
jno
push
cmp
adc
dec
lods
ret
sbb
out
int
mov
icebp
mov
sar
aaa
or
repnz
sub
fimull
push
sbb
sub
imul
push
lds
jne
cwtl
out
cmp
int
loop
mov
cmp
inc
cwtl
pop
jge
or
sbb
lods
aaa
pop
subl
mov
and
pop
out
cli
fstp
xchg
jno
xor
xchg
mov
mov
fstl
daa
cmp
movsb
test
std
jbe
push
sub
rclb
daa
xor
mov
jno
sub
jl
repz
and
jge
movsl
cmp
ja
movsb
or
insl
out
push
and
mov
pop
push
sub
addb
dec
cmpsb
cmpb
aad
jle
jecxz
jge
out
ss
jns
loope
inc
push
cmp
nop
mov
jne
stos
stos
in
rol
imul
sbbl
inc
add
jg
xor
in
pop
mov
sub
sub
jne
lcall
push
fdivr
sub
outsb
scas
cmp
test
cmp
jg
aaa
push
mov
jb
mov
xor
mov
cwtl
adc
mov
mov
fcoms
cmp
not
and
shll
mov
jo
sbb
rcl
sahf
lahf
mov
cmc
mov
aaa
inc
outsl
mov
lcall
jp
lods
scas
add
lods
stos
ss
jne
lods
into
add
mov
ja
out
jecxz
cli
push
fmuls
sbb
jno
mov
add
into
addl
loopne
pop
cmp
inc
ljmp
loope
adc
lock
rorl
sbb
xchg
int
xlat
fimull
and
in
push
or
pop
sub
aad
xchg
jmp
dec
stc
cmc
outsb
inc
jl
sub
sarb
les
mov
xchg
mov
xor
scas
sbb
sbb
xchg
pop
mov
je
pushf
enter
add
mov
sub
inc
ret
loope
inc
cmpsb
cmp
and
jb
nop
pop
dec
mulb
out
sbb
pop
sbb
jno
popa
jns
mov
mov
xor
icebp
sbb
xor
es
je
lock
das
lahf
das
dec
sub
enter
sbb
rcrl
add
div
jg
insl
call
inc
jmp
mov
xor
and
pop
xchg
mov
lret
mov
pop
jge
rorb
cmp
aam
lods
inc
ret
data16
es
lods
std
fucomp
mov
out
xchg
push
std
sbb
pop
mov
popa
xchg
dec
test
adc
roll
mov
dec
inc
cmp
mov
add
mov
jl
mov
xchg
sub
mov
push
add
or
push
push
test
int3
mov
sbb
dec
addr16
rcll
stos
mov
jbe
add
lea
es
sarb
hlt
push
fdivs
rcll
add
xchg
xor
pusha
ja
push
decl
mov
inc
mov
out
loopne
xor
ficompl
jno
arpl
sub
cmp
and
jbe
imul
jns
pop
xchg
jno
icebp
xchg
rcrl
stc
sub
xchg
leave
jp
fisubrs
mov
inc
xor
rorb
orb
push
in
lcall
fs
aas
jmp
in
subl
pop
out
daa
leave
popf
rcrb
enter
cltd
push
jbe
sub
ja
inc
insb
or
test
jle
sahf
add
je
adc
fwait
ret
xchg
pop
in
xor
inc
stos
repnz
jae
mov
push
xchg
add
mov
inc
fdivl
imul
jle
imul
fldenv
or
push
and
mov
xlat
mov
and
es
xor
push
hlt
lds
sub
fwait
xor
sbb
imul
rcrb
add
cmpsb
pop
int3
add
and
sbb
pop
sub
out
inc
loopne
cmp
push
and
mov
sbb
mov
movl
in
fstpt
enter
daa
xor
sbb
pop
inc
mov
jl
inc
sti
dec
orb
movsl
aas
fldenv
mov
out
repz
test
div
sahf
inc
xor
add
xor
cld
add
push
out
pop
sbb
push
or
dec
cltd
adc
stos
scas
cmpsl
ds
aas
push
repnz
sub
mov
jp
subb
faddl
pop
stos
xor
mov
pop
int
jg
sub
cld
lcall
mov
test
xlat
sub
cs
test
cmc
out
sbb
sbb
mov
shlb
js
into
and
aad
push
cmp
ret
ja
fmul
call
pop
lret
inc
pop
mov
sbb
xor
inc
pop
dec
cmc
adcb
outsl
xchg
sub
ret
sub
fs
push
movsl
adc
movsl
test
xchg
orl
xchg
jno
out
cmpsb
or
adc
loopne
mov
stc
adc
push
push
imul
and
jb
mov
mov
and
int
nop
xlat
adc
adc
in
ret
sti
testb
aad
outsl
push
nop
stc
movsb
out
dec
pop
push
jno
popl
flds
adc
cmp
sub
inc
xchg
jbe
pop
cli
dec
fld1
sub
push
fwait
loope
pop
push
dec
lea
ss
xlat
pushf
jae
or
repz
inc
dec
cmp
dec
aas
rcrb
dec
insl
inc
mov
imul
jecxz
add
sbb
sar
jle
cwtl
sbb
mov
movsl
push
push
mov
lcall
clc
push
inc
out
mov
mov
lahf
das
sub
jmp
jbe
pop
and
xchg
pop
shrl
ss
insl
iret
mov
mov
iret
mov
or
gs
push
jnp
lret
cmp
je
ret
fsts
pop
pushf
inc
mov
sub
clc
aam
push
mov
lds
insb
fisttpll
jg
clc
mov
pop
mov
shl
xchg
popa
test
push
jge
sbb
adc
xchg
mov
push
nop
pop
add
adc
jbe
mov
jg
jne
dec
test
add
dec
xor
xchg
test
xchg
dec
xchg
insb
sbb
xor
imul
stos
inc
bound
add
push
mov
or
push
sahf
rcl
mov
cmp
jae
pop
stos
jbe
ja
mov
push
or
enter
sahf
mov
jne
nop
sahf
mov
stc
xchg
add
lcall
cld
and
mov
daa
cmpb
andl
jp
icebp
fidivs
sti
jp
mov
mov
dec
fcoms
in
sbb
adc
into
filds
jmp
jmp
scas
stos
inc
cmpl
sbb
ljmp
stos
dec
jb
and
insb
in
dec
aaa
pushf
jle
mov
sub
addr16
mov
pop
add
ret
or
and
jmp
mov
addr16
mov
cwtl
or
call
lock
fisubrl
loope
sbb
cmpsl
add
cli
aam
cmp
mov
ror
je
popl
leave
test
es
adc
arpl
push
adc
push
sbb
jp
popf
aaa
test
iret
or
movl
in
ja
pop
dec
or
fdivrl
xor
dec
stc
adc
add
rolb
movsb
mov
out
add
pop
mov
sti
enter
daa
xor
xorl
rorb
jle
jno
loope
inc
xor
and
push
call
push
push
push
test
ret
inc
mov
sub
xor
ret
mov
push
dec
aam
mov
dec
sub
inc
sub
ds
popf
lods
adc
jge
pop
aas
pop
fiadds
adc
sub
test
cmp
sub
fmul
addr16
push
pop
sbb
lcall
mov
push
adc
sub
adc
pop
sbb
xlat
loop
mov
inc
mov
mov
mov
lods
push
aas
nop
add
fmuls
mov
mov
sahf
mov
mov
and
sbb
dec
sahf
in
pop
cmc
dec
daa
outsl
xor
lcall
inc
shrb
dec
mov
dec
in
ss
adc
adc
es
adc
cmpsb
cli
mov
aad
cmp
add
or
xchg
insl
gs
sub
and
imul
pop
insb
data16
test
cmpsl
cmp
mov
or
or
mov
sub
cltd
jge
mov
mov
nop
aam
scas
dec
mov
cmovb
push
jb
mov
xchg
mov
lea
lret
call
sbb
cmp
jno
adc
mov
cs
cmp
inc
fcoml
or
pop
xor
popf
jnp
dec
in
and
ret
jecxz
mov
pop
leave
lods
std
sbb
cwtl
xlat
mov
mov
add
loope
andl
pop
fninit
or
pop
cs
mov
insb
lock
adc
int3
iret
push
mov
add
pop
ja
jns
fldt
sbb
dec
popf
mov
nop
mov
filds
cmpsb
lret
test
or
and
daa
push
or
shrb
stc
fldt
sbb
inc
test
clc
fnsave
and
clc
divb
imul
mov
mov
mov
fcoml
mov
outsl
lret
mov
push
cltd
lods
mov
mov
push
mov
adc
lret
in
sbb
sbb
mov
rol
push
sbb
mov
jle
jbe
cmpsb
inc
cld
add
ret
or
jmp
xor
or
cmp
aaa
mov
movsl
xchg
cli
mov
add
ja
jo
dec
fwait
addr16
inc
ljmp
fwait
sbb
push
mov
or
push
out
mov
mov
adc
xor
jns
and
in
enter
push
fidivs
adc
or
addr16
add
aam
out
xor
ds
mov
dec
mov
add
pusha
scas
iret
test
mov
scas
hlt
jmp
jp
jnp
dec
icebp
push
out
cmp
mov
hlt
mov
lcall
hlt
and
lods
mov
push
push
test
iret
fs
ret
test
pop
stos
mov
ss
add
adc
inc
cmp
mov
fisubl
cmp
je
out
pop
push
xlat
scas
lahf
out
lds
insb
shr
sarl
push
sahf
leave
pop
jp
hlt
pop
scas
push
arpl
inc
mov
jge
jo
sbb
leave
clc
or
aaa
sbb
pop
jnp
and
jg
mov
movsl
ret
icebp
scas
cli
int3
sti
and
add
movsb
dec
inc
mov
jbe
cltd
call
enter
daa
xor
xchg
cmp
jbe
jno
int3
jl
pusha
add
stos
push
xchg
shld
jp
jne
mov
push
cltd
cmpsl
imull
jmp
inc
dec
dec
cmpsb
or
stos
js
xchg
add
movsb
fsubrs
loope
mov
sub
ror
or
fdivrs
sbb
outsl
adc
pop
jbe
sahf
cmp
push
sbb
dec
add
or
jmp
icebp
int
aad
sub
xor
lcall
push
out
das
inc
fdivr
lds
jbe
pusha
outsb
fsubr
int
push
and
jbe
adc
popf
scas
scas
mov
dec
lods
and
jg
push
inc
aas
test
inc
sub
adc
test
adc
jnp
xor
mov
adc
adc
sub
outsl
push
scas
cmp
sbb
fs
cltd
adc
adc
lods
add
mov
pop
mov
cli
in
pop
ljmp
das
push
or
mov
loopne
mov
pop
xor
imul
mov
dec
daa
push
sbb
inc
out
xlat
xchg
xchg
popf
sub
cmp
cwtl
call
jecxz
cli
jge
xor
nop
scas
je
dec
push
pop
cmp
addl
lret
xchg
cld
fwait
cmp
enter
and
cltd
bound
adc
lahf
pop
pushf
leave
repz
shrl
addl
dec
inc
negl
push
aas
dec
pop
jb
ds
dec
pop
pop
fs
lret
add
dec
push
mov
std
shlb
cwtl
xchg
sub
and
movsb
mov
sarb
fistl
lcall
loop
out
lock
jo
das
ljmp
mov
nop
subl
mov
lea
dec
cwtl
pop
clc
cmpsl
xor
mov
pop
je
icebp
mov
cmpsb
imul
inc
or
push
push
mov
mov
add
sub
icebp
lods
aam
popf
or
adc
nop
es
pusha
rcr
pop
lods
cmpsb
clc
xor
ljmp
std
lods
push
cs
loopne
pop
mov
and
dec
push
inc
xor
bswap
mov
add
outsl
ss
jecxz
testl
mov
movsl
test
xchg
scas
mov
rcrl
adc
aam
push
stos
insl
add
out
or
stc
add
pop
cmp
lds
pushf
or
mov
mov
inc
loop
mov
and
cmp
les
inc
subl
fwait
mov
das
jne
xorl
out
rcl
bound
push
jns
mov
sub
lods
jle
sub
ja
cmp
mov
jp
xor
mov
cmp
mov
sarl
dec
sahf
inc
in
dec
pusha
dec
loop
ffreep
sti
sbb
das
and
inc
push
nop
adc
xor
mov
ret
nop
