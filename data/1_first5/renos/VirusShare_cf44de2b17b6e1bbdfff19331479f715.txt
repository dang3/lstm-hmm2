jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
ss
popa
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
lea
push
call
cmp
jne
mov
lea
mov
mov
xchg
xchg
lea
mov
lea
lea
lea
mov
xchg
xchg
mov
lea
lea
push
lea
push
call
lea
push
call
lea
push
call
lea
push
lea
push
call
lea
push
call
cmp
jl
xchg
inc
mov
jmp
inc
xchg
mov
mov
lea
mov
mov
xchg
xchg
mov
lea
xchg
inc
inc
inc
dec
je
lea
push
call
cmp
jl
xchg
lea
mov
lea
mov
inc
mov
mov
mov
mov
mov
dec
inc
dec
lea
mov
mov
mov
inc
dec
inc
lea
push
call
lea
push
call
mov
mov
mov
xchg
mov
jmp
lea
xchg
lea
xchg
mov
xchg
inc
dec
dec
jne
mov
xchg
mov
mov
inc
lea
push
lea
push
call
lea
push
call
mov
pop
ret
mov
push
mov
add
lea
push
call
call
lea
push
call
lea
push
call
cmp
jb
mov
lea
inc
dec
dec
xchg
mov
inc
inc
dec
mov
mov
xchg
mov
lea
xchg
lea
lea
xchg
dec
inc
inc
lea
push
lea
push
call
cmp
jne
mov
lea
mov
mov
xchg
xchg
lea
mov
lea
lea
lea
mov
xchg
xchg
mov
lea
lea
push
call
call
lea
push
call
lea
push
lea
push
call
lea
push
lea
push
call
lea
push
call
lea
push
call
lea
push
call
lea
push
call
xchg
cmp
jge
xchg
inc
lea
dec
inc
inc
lea
lea
mov
mov
xchg
xchg
mov
mov
lea
xchg
xchg
inc
lea
push
call
call
lea
push
lea
push
call
mov
pop
ret
lea
push
mov
add
mov
mov
xchg
cmp
jge
xchg
inc
lea
dec
inc
inc
lea
lea
mov
mov
xchg
xchg
mov
mov
lea
xchg
xchg
inc
mov
cmp
je
call
cmp
jge
xchg
mov
xchg
mov
inc
inc
mov
mov
xchg
mov
lea
xchg
lea
lea
mov
mov
mov
mov
xor
divl
test
jne
cmp
jl
xchg
lea
mov
lea
mov
inc
mov
mov
mov
mov
mov
dec
inc
dec
lea
mov
mov
mov
inc
dec
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jg
xchg
xchg
xchg
mov
mov
xchg
dec
dec
dec
inc
lea
xchg
xchg
lea
xchg
mov
xchg
dec
inc
inc
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jl
xchg
inc
mov
jmp
inc
xchg
mov
mov
lea
mov
mov
xchg
xchg
mov
lea
xchg
inc
inc
inc
dec
je
mov
cmp
je
jmp
mov
mov
mov
xchg
mov
jmp
lea
xchg
lea
xchg
mov
xchg
inc
dec
dec
jne
mov
xchg
mov
mov
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
ja
mov
mov
mov
mov
mov
mov
inc
mov
mov
dec
xchg
xchg
mov
mov
dec
jne
inc
dec
dec
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jb
mov
lea
inc
dec
dec
xchg
mov
inc
inc
dec
mov
mov
xchg
mov
lea
xchg
lea
lea
xchg
dec
inc
inc
mov
cmp
je
jmp
mov
mov
mov
xchg
mov
jmp
lea
xchg
lea
xchg
mov
xchg
inc
dec
dec
jne
mov
xchg
mov
mov
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
call
cmp
jg
xchg
xchg
xchg
mov
mov
xchg
dec
dec
dec
inc
lea
xchg
xchg
lea
xchg
mov
xchg
dec
inc
inc
mov
sub
mov
cmp
jne
mov
lea
mov
mov
xchg
xchg
lea
mov
lea
lea
lea
mov
xchg
xchg
mov
lea
push
mov
mov
xor
call
mov
cmp
jl
xchg
lea
mov
lea
mov
inc
mov
mov
mov
mov
mov
dec
inc
dec
lea
mov
mov
mov
inc
dec
inc
mov
mov
mov
call
cmp
jl
xchg
inc
mov
jmp
inc
xchg
mov
mov
lea
mov
mov
xchg
xchg
mov
lea
xchg
inc
inc
inc
dec
je
push
mov
mov
xor
call
mov
cmp
jge
xchg
mov
xchg
mov
inc
inc
mov
mov
xchg
mov
lea
xchg
lea
lea
mov
mov
mov
xchg
cmp
jge
xchg
inc
lea
dec
inc
inc
lea
lea
mov
mov
xchg
xchg
mov
mov
lea
xchg
xchg
inc
lea
mov
push
mov
jmp
cmp
jne
mov
lea
mov
mov
xchg
xchg
lea
mov
lea
lea
lea
mov
xchg
xchg
mov
lea
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
mov
mov
mov
xchg
mov
jmp
lea
xchg
lea
xchg
mov
xchg
inc
dec
dec
jne
mov
xchg
mov
mov
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jb
mov
lea
inc
dec
dec
xchg
mov
inc
inc
dec
mov
mov
xchg
mov
lea
xchg
lea
lea
xchg
dec
inc
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
cmp
ja
mov
mov
mov
mov
mov
mov
inc
mov
mov
dec
xchg
xchg
mov
mov
dec
jne
inc
dec
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jge
xchg
mov
xchg
mov
inc
inc
mov
mov
xchg
mov
lea
xchg
lea
lea
mov
mov
mov
mov
sub
add
add
mov
xchg
cmp
jge
xchg
inc
lea
dec
inc
inc
lea
lea
mov
mov
xchg
xchg
mov
mov
lea
xchg
xchg
inc
lea
pushl
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
call
push
call
mov
cmp
jl
xchg
inc
mov
jmp
inc
xchg
mov
mov
lea
mov
mov
xchg
xchg
mov
lea
xchg
inc
inc
inc
dec
je
mov
mov
call
mov
mov
mov
cmp
jl
xchg
lea
mov
lea
mov
inc
mov
mov
mov
mov
mov
dec
inc
dec
lea
mov
mov
mov
inc
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jne
mov
lea
mov
mov
xchg
xchg
lea
mov
lea
lea
lea
mov
xchg
xchg
mov
lea
mov
mov
movl
mov
cmp
ja
mov
mov
mov
mov
mov
mov
inc
mov
mov
dec
xchg
xchg
mov
mov
dec
jne
inc
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jge
xchg
mov
xchg
mov
inc
inc
mov
mov
xchg
mov
lea
xchg
lea
lea
mov
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
ja
mov
mov
mov
mov
mov
mov
inc
mov
mov
dec
xchg
xchg
mov
mov
dec
jne
inc
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jg
xchg
xchg
xchg
mov
mov
xchg
dec
dec
dec
inc
lea
xchg
xchg
lea
xchg
mov
xchg
dec
inc
inc
mov
pop
ret
add
inc
gs
jb
arpl
fs
jae
add
push
cmp
testb
mov
shll
ljmp
stos
mov
mov
mov
mov
int3
int3
mov
stos
test
mov
ror
mov
stos
test
mov
shrb
scas
cmpsl
test
int3
xchg
scas
rcrb
mov
int3
movsl
scas
mov
ljmp
int3
movsl
int3
scas
int3
mov
int3
test
std
int3
dec
ljmp
int3
int3
int3
int3
int3
lahf
inc
sub
xor
cmp
or
cmp
lock
cmpsb
in
mov
sbb
mov
dec
in
mov
push
in
mov
outsb
in
mov
push
in
mov
or
mov
push
in
mov
and
mov
imul
int3
inc
xor
test
jo
int3
inc
xor
mov
jo
int3
inc
xor
add
jo
int3
inc
xor
out
jo
mov
inc
xor
in
imul
inc
xor
shrl
jo
int3
inc
xor
leave
imul
inc
xor
iret
std
or
xor
xor
xchg
xchg
or
inc
add
inc
adc
or
mov
or
inc
sub
add
pop
inc
popl
sbb
inc
mov
pushf
inc
popl
popl
pushf
mov
add
mov
inc
vpmacssdqh
add
mov
pushf
inc
popl
pushf
xchg
inc
vpmacssdqh
inc
iret
cld
int3
int3
int3
inc
xchg
inc
test
inc
clc
int
sub
cmp
cmp
dec
int3
int3
int3
inc
adc
adc
mov
int3
leave
push
sbb
adc
int3
int
sub
and
or
int3
cmpsb
int3
cmpsb
int3
inc
and
enter
pushf
inc
popl
pushf
add
and
mov
cmp
push
pop
int3
int3
int3
inc
and
int3
rcl
and
int
sub
xor
and
fmul
vpmacssdqh
mov
int
sub
xor
and
fmul
vpmacssdqh
mov
dec
rcr
xor
out
cmp
int3
int3
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
and
inc
lahf
xor
into
inc
sbb
sbb
or
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
dec
sub
dec
xor
inc
xor
int3
mov
loopne
and
enter
idivl
cmp
inc
cmp
mov
int
sub
xor
popl
inc
adc
int3
cmpsb
faddl
add
or
pushf
inc
popl
pushf
xchg
movsb
int3
dec
int3
int3
cmpsb
int3
inc
popl
popl
pushf
mov
int3
cmpsb
int3
inc
pop
pushf
inc
popl
pushf
mov
scas
inc
inc
push
lock
cmp
cmp
ss
sub
cmp
cmp
or
cs
das
xchg
push
ror
or
inc
sub
enter
sti
adc
cmpsl
int3
int3
int3
mov
mov
int3
int3
mov
xchg
int3
int3
int3
mov
jl
and
int3
int3
int3
fmull
and
int3
int3
jecxz
mov
int3
int3
and
rolb
test
sub
push
int3
test
dec
cmp
mov
ror
mov
and
lret
mov
cmp
int3
push
mov
fcompl
or
sub
cmp
fildl
and
cmp
cmp
push
int3
inc
mov
inc
ss
adc
cmp
cmp
or
push
cmp
cmp
jecxz
inc
and
dec
adc
cmp
inc
cmp
iret
les
int3
adc
ret
jl
int3
int3
adc
inc
xor
pop
enter
cmp
int3
mov
int3
inc
cmp
cmp
cmp
xor
leave
push
inc
int3
int3
int3
adc
inc
ss
lahf
cmp
into
std
push
inc
lahf
xor
cmp
cmp
ss
testb
ss
cmp
int3
mov
int3
adc
inc
ss
push
inc
lahf
xor
xor
cmp
int
std
push
inc
lahf
xor
jl
int3
int
out
cmp
int3
int3
inc
ss
or
xor
mov
inc
xor
or
ss
lahf
xor
jl
int3
cmp
int3
mov
or
inc
sub
or
les
mov
cmp
int3
int3
outsb
les
std
or
ret
jl
int3
std
push
inc
ffreep
jl
int3
leave
sbbb
mov
int
out
cmp
int3
int3
outsb
ret
jl
int3
std
or
les
inc
dec
enter
inc
aaa
std
or
ret
jl
int3
inc
dec
enter
std
push
inc
ffreep
jl
int3
inc
dec
enter
std
or
ret
jl
int3
inc
lahf
aaa
inc
pop
enter
std
or
les
leave
orb
int3
std
push
inc
ffreep
jl
int3
leave
sbbb
mov
int
out
cmp
int3
int3
inc
aaa
std
or
aaa
inc
dec
enter
decb
inc
cmp
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jb
mov
lea
inc
dec
dec
xchg
mov
inc
inc
dec
mov
mov
xchg
mov
lea
xchg
lea
lea
xchg
dec
inc
inc
movl
cmp
jl
xchg
lea
mov
lea
mov
inc
mov
mov
mov
mov
mov
dec
inc
dec
lea
mov
mov
mov
inc
dec
inc
push
call
mov
call
mov
cmp
jne
mov
lea
mov
mov
xchg
xchg
lea
mov
lea
lea
lea
mov
xchg
xchg
mov
lea
movl
lea
push
push
mov
sub
push
mov
push
call
mov
mov
call
mov
cmpl
je
cmp
jg
xchg
xchg
xchg
mov
mov
xchg
dec
dec
dec
inc
lea
xchg
xchg
lea
xchg
mov
xchg
dec
inc
inc
mov
mov
call
mov
cmpl
je
mov
cmp
ja
mov
mov
mov
mov
mov
mov
inc
mov
mov
dec
xchg
xchg
mov
mov
dec
jne
inc
dec
dec
mov
cmp
je
mov
subb
cmp
jge
xchg
mov
xchg
mov
inc
inc
mov
mov
xchg
mov
lea
xchg
lea
lea
mov
mov
mov
mov
xorb
cmp
jg
xchg
xchg
xchg
mov
mov
xchg
dec
dec
dec
inc
lea
xchg
xchg
lea
xchg
mov
xchg
dec
inc
inc
incl
mov
cmp
jne
mov
mov
mov
xchg
mov
jmp
lea
xchg
lea
xchg
mov
xchg
inc
dec
dec
jne
mov
xchg
mov
mov
inc
mov
call
mov
cmp
ja
mov
mov
mov
mov
mov
mov
inc
mov
mov
dec
xchg
xchg
mov
mov
dec
jne
inc
dec
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
mov
cmp
ja
mov
mov
mov
mov
mov
mov
inc
mov
mov
dec
xchg
xchg
mov
mov
dec
jne
inc
dec
dec
cmp
jge
xchg
mov
xchg
mov
inc
inc
mov
mov
xchg
mov
lea
xchg
lea
lea
mov
mov
mov
xchg
cmp
jge
xchg
inc
lea
dec
inc
inc
lea
lea
mov
mov
xchg
xchg
mov
mov
lea
xchg
xchg
inc
push
mov
push
call
mov
pop
ret
imul
add
outsb
add
insb
add
add
add
add
add
add
add
jb
jne
insb
push
jb
je
arpl
push
mov
add
xchg
cmp
jge
xchg
inc
lea
dec
inc
inc
lea
lea
mov
mov
xchg
xchg
mov
mov
lea
xchg
xchg
inc
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
cmp
jl
xchg
lea
mov
lea
mov
inc
mov
mov
mov
mov
mov
dec
inc
dec
lea
mov
mov
mov
inc
dec
inc
movb
cmp
jge
xchg
mov
xchg
mov
inc
inc
mov
mov
xchg
mov
lea
xchg
lea
lea
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
ja
mov
mov
mov
mov
mov
mov
inc
mov
mov
dec
xchg
xchg
mov
mov
dec
jne
inc
dec
dec
cmp
jne
mov
lea
mov
mov
xchg
xchg
lea
mov
lea
lea
lea
mov
xchg
xchg
mov
lea
call
test
jne
mov
jmp
movw
cmp
jl
xchg
inc
mov
jmp
inc
xchg
mov
mov
lea
mov
mov
xchg
xchg
mov
lea
xchg
inc
inc
inc
dec
je
call
lea
mov
pop
ret
push
mov
add
mov
cmp
ja
mov
mov
mov
mov
mov
mov
inc
mov
mov
dec
xchg
xchg
mov
mov
dec
jne
inc
dec
dec
cmp
jl
xchg
inc
mov
jmp
inc
xchg
mov
mov
lea
mov
mov
xchg
xchg
mov
lea
xchg
inc
inc
inc
dec
je
lea
push
call
call
lea
push
call
call
lea
push
call
lea
push
call
call
cmp
jg
xchg
xchg
xchg
mov
mov
xchg
dec
dec
dec
inc
lea
xchg
xchg
lea
xchg
mov
xchg
dec
inc
inc
lea
push
lea
push
call
cmp
jge
xchg
mov
xchg
mov
inc
inc
mov
mov
xchg
mov
lea
xchg
lea
lea
mov
mov
mov
lea
push
call
lea
push
lea
push
call
call
lea
push
lea
push
call
call
cmp
jg
xchg
xchg
xchg
mov
mov
xchg
dec
dec
dec
inc
lea
xchg
xchg
lea
xchg
mov
xchg
dec
inc
inc
lea
push
lea
push
call
lea
push
lea
push
call
lea
push
call
xchg
cmp
jge
xchg
inc
lea
dec
inc
inc
lea
lea
mov
mov
xchg
xchg
mov
mov
lea
xchg
xchg
inc
lea
push
lea
push
call
lea
push
lea
push
call
cmp
jge
xchg
mov
xchg
mov
inc
inc
mov
mov
xchg
mov
lea
xchg
lea
lea
mov
mov
mov
lea
push
lea
push
call
lea
push
lea
push
call
cmp
jl
xchg
lea
mov
lea
mov
inc
mov
mov
mov
mov
mov
dec
inc
dec
lea
mov
mov
mov
inc
dec
inc
push
push
push
call
mov
call
cmp
jne
mov
lea
mov
mov
xchg
xchg
lea
mov
lea
lea
lea
mov
xchg
xchg
mov
lea
mov
pop
ret
cs
jae
jae
gs
xor
pop
jne
je
jae
fs
insb
and
add
in
add
lea
push
lea
push
call
lea
push
lea
push
call
lea
push
call
lea
push
call
call
lea
push
call
lea
push
call
lea
push
lea
push
call
lea
push
lea
push
call
call
cmp
jne
mov
lea
mov
mov
xchg
xchg
lea
mov
lea
lea
lea
mov
xchg
xchg
mov
lea
lea
push
lea
push
call
cmp
jg
xchg
xchg
xchg
mov
mov
xchg
dec
dec
dec
inc
lea
xchg
xchg
lea
xchg
mov
xchg
dec
inc
inc
lea
push
lea
push
call
cmp
jne
mov
lea
mov
mov
xchg
xchg
lea
mov
lea
lea
lea
mov
xchg
xchg
mov
lea
lea
push
lea
push
call
lea
push
lea
push
call
call
lea
push
call
call
cmp
jl
xchg
lea
mov
lea
mov
inc
mov
mov
mov
mov
mov
dec
inc
dec
lea
mov
mov
mov
inc
dec
inc
lea
push
lea
push
call
mov
pop
ret
addl
jne
mov
mov
mov
mov
xchg
mov
jmp
lea
xchg
lea
xchg
mov
xchg
inc
dec
dec
jne
mov
xchg
mov
mov
inc
mov
mov
mov
lea
call
cmp
jg
xchg
xchg
xchg
mov
mov
xchg
dec
dec
dec
inc
lea
xchg
xchg
lea
xchg
mov
xchg
dec
inc
inc
ret
mov
ret
lea
push
mov
push
fiadds
imul
add
call
add
push
add
mov
inc
add
stos
iret
cmp
inc
test
imul
dec
outsb
dec
ljmp
clc
fsubr
adc
dec
mov
sbb
add
mov
mov
lret
fisubs
test
pop
cs
push
ret
push
rolb
add
push
jmp
add
dec
xor
lcall
out
or
adc
add
mov
imul
filds
jo
outsl
inc
lea
aam
mov
jecxz
scas
add
pop
sub
add
inc
lret
cmp
lock
push
jg
aam
add
fisttpl
add
rclb
cmp
adc
shl
out
cmp
add
xor
add
addr16
add
adc
cmpsb
scas
andb
hlt
add
je
adc
or
mov
decb
add
or
lods
les
add
idivl
add
test
add
push
incb
add
aaa
out
test
add
and
jo
cltd
imul
sbb
sti
mov
mov
arpl
add
add
pop
shll
test
jg
sub
add
xchg
cli
fildl
dec
repz
mov
cwtl
mov
cmpsl
mov
add
add
daa
sub
inc
into
in
xchg
les
add
gs
dec
iret
movb
add
add
sbb
stos
test
mov
cmpsb
push
shrl
leave
jge
mov
inc
add
add
test
mov
adc
xchg
add
add
dec
inc
add
xchg
lret
add
repnz
add
adc
rcrb
cmc
fsubr
xor
lret
add
xor
sub
add
add
and
xor
sub
xor
aad
add
and
lock
dec
xor
fsubl
sub
rep
cmpsl
pop
mov
sbb
add
scas
lods
cmp
add
or
sub
lea
add
shlb
add
sub
add
out
add
adc
add
bound
add
fiaddl
add
jbe
ret
dec
mov
leave
mov
or
jb
bound
mov
leave
add
scas
xchg
ror
add
rcr
pop
xor
sbb
lds
add
pusha
addl
call
repz
xor
lcall
into
lret
add
dec
rcr
mov
push
movb
cli
insb
add
add
mov
push
cmp
pop
add
add
or
pusha
add
xchg
add
add
nop
xor
add
add
xor
xchg
mov
inc
mov
daa
add
dec
lret
mov
add
dec
mov
nop
psubd
lret
jl
push
lahf
in
inc
rol
fsub
aaa
lahf
dec
in
movsl
mov
add
add
push
add
cmc
add
mov
sbb
in
sub
mov
jmp
pop
daa
addl
sub
jle
int
sbb
pop
and
lds
add
mov
or
add
sti
add
jo
fcompl
add
or
sbb
jl
sbb
pop
fwait
cmpsb
lods
cli
push
daa
add
mov
mov
je
add
cwtl
add
mov
xchg
sub
rclb
out
jp
and
mov
ljmp
xchg
jnp
dec
jle
lret
pop
in
scas
and
loop
fbld
lds
mov
cmc
mov
push
dec
por
jns
sbb
aaa
insb
stos
xor
scas
out
sbb
mov
and
xor
sbb
push
xchg
cwtl
iret
sub
ret
jno
andl
hlt
outsl
add
mov
or
mov
repz
push
xor
fcmovbe
mov
add
imul
fdivrs
fidivs
insl
inc
lds
movsb
sarb
and
mov
push
cmp
call
ss
pusha
xchg
sbb
jp
or
fidivs
or
movsl
call
imul
adcb
pop
jo
mov
scas
mov
lds
push
mov
push
push
cmpsb
cmp
pop
pop
enter
daa
jbe
sbb
xor
mov
inc
cmp
mov
movsl
jno
shlb
fnstcw
mov
test
lea
sbb
test
jnp
mov
pop
stos
jae
out
sub
call
cmpsl
dec
push
fcoml
push
sarb
fcoml
lods
cwtl
outsb
mov
adc
shrb
out
cld
or
add
and
mov
ljmp
int
or
pop
fimuls
bound
sbb
inc
nop
sbb
mov
dec
test
fidivrs
jg
or
mov
pop
pop
stc
cli
jns
fs
cmp
ss
sahf
xlat
cmp
xchg
mov
notl
ss
cmpsb
xor
mov
fwait
into
loopne
sbb
xor
enter
lcall
lcall
hlt
mov
clc
data16
cwtl
lods
daa
data16
push
mov
cli
popa
mov
inc
in
sub
jle
fmuls
jae
js
mulb
fiadds
dec
and
adc
test
fisubl
addr16
ret
xor
or
pop
scas
arpl
xchg
das
stos
xlat
xlat
mov
xor
enter
pop
fimuls
jmp
mov
xlat
aad
repz
nop
sub
dec
ficoml
sub
aas
jno
adc
nop
in
push
mov
call
fstpl
xor
sbbl
xor
pop
test
inc
jl
outsl
inc
lret
fists
push
int
in
pop
mov
movsb
mov
adc
div
dec
xor
cwtl
out
xchg
and
dec
mov
cmp
sbb
fwait
add
mov
xchg
mov
lock
inc
mov
jbe
and
xchg
inc
ljmp
insl
inc
or
dec
in
bound
mov
mov
sub
fs
pusha
mov
cmc
pop
test
xchg
jp
pop
sahf
arpl
cltd
inc
or
je
push
xorl
icebp
xchg
pop
loop
ljmp
out
push
hlt
js
mov
enter
push
aas
setb
daa
add
ljmp
dec
lods
mov
xchg
movsb
dec
cmpsb
push
test
clc
mov
sbb
jae
or
jmp
sub
push
lock
add
mov
mov
xor
and
fs
cmp
loope
add
cs
ss
jne
ja
sub
add
jno
in
pusha
mov
jp
push
lcall
pop
nop
mov
test
bound
mov
sete
mov
out
cvtps2pi
add
addr16
test
into
fisubs
mov
cmp
jnp
js
jle
add
in
adc
movsl
xor
test
pop
xchg
mov
xor
lea
inc
loopne
xor
push
adc
xchg
mov
ja
mov
test
stc
xchg
jae
add
cmp
imul
jnp
mov
mov
adc
inc
dec
iret
mov
jmp
cli
inc
dec
hlt
mov
in
inc
fsubs
lods
push
popf
addr16
mov
jbe
imul
int3
push
outsl
int
cs
enter
and
fsub
adc
or
imul
push
mov
pop
push
jge
xadd
inc
aad
aaa
inc
fistps
pop
and
jl
outsb
dec
push
rolb
push
jmp
jno
push
pushl
inc
pop
scas
popf
in
and
iret
adc
pop
inc
fbstp
dec
cmpsb
sarb
enter
daa
jne
nop
cmp
push
loope
in
outsb
sub
in
cmp
lds
repz
movsl
js
sti
and
pusha
pop
lahf
lods
sub
sti
jae
jecxz
mov
xor
push
loop
ret
xchg
push
js
sbb
pop
daa
cmp
jg
sub
xchg
sub
lods
pop
outsb
out
mov
rcl
pop
jno
pop
rcll
xlat
mov
test
outsb
xlat
push
jns
in
fnstcw
sub
pop
test
pop
mov
test
xor
pop
sbb
xchg
sahf
fildll
test
jl
cmpb
push
jg
pop
aad
cmpb
mov
aad
in
mov
in
mov
pop
cmp
push
leave
jg
push
cmp
pop
xor
cmp
push
mov
into
ret
cwtd
cmc
sti
pop
push
xor
addb
popa
xor
imul
vmwrite
push
cmp
dec
mov
out
out
xchg
cli
xchg
cmpsl
mov
xchg
out
aas
sti
xchg
push
gs
pop
adc
adc
in
mov
xchg
repz
gs
sarb
xor
bound
and
xchg
jg
push
insb
mov
dec
cmp
push
dec
ss
out
pop
mov
pop
push
call
pop
push
das
pop
jecxz
jmp
ss
fisttpll
rcr
lds
pop
sub
inc
out
pusha
aas
popa
call
and
das
mov
rcrl
divb
or
cwtl
mov
add
icebp
jno
dec
cld
gs
lret
or
mov
lock
out
fwait
sub
dec
aam
negb
subb
sub
ret
inc
je
je
mov
popa
shll
lods
push
adc
test
cld
pop
dec
mov
mov
call
sbb
and
cmp
sub
mov
rol
xchg
inc
mov
iret
rcll
pop
adc
stos
loopne
cwtl
out
and
xchg
mov
cmp
cmc
nop
jne
icebp
ror
loope
dec
or
sbb
push
mov
jp
sbb
sub
xchg
sub
or
out
fwait
jno
imul
push
imul
fnsave
sub
and
in
xor
mov
jge
mov
xor
je
cmc
rorb
mov
in
dec
xor
cmpsl
ret
mov
sub
xchg
out
jmpw
mov
subl
out
mov
ljmp
mov
jp
sub
mov
dec
sbb
jnp
adc
xor
pusha
mov
mov
xchg
pop
inc
adc
shrl
jmp
inc
jae
or
push
aad
test
adc
mov
mov
in
stos
sbb
cmp
xor
scas
sbb
mov
adc
add
inc
into
sub
jno
aam
add
cmp
fisttpl
cmc
or
lods
jne
inc
sbb
jecxz
cmp
faddl
add
int3
inc
ljmp
jns
and
shl
cli
mov
pusha
aas
icebp
cmp
shlb
jns
jbe
push
and
mov
jb
push
enter
cmp
jno
sbb
ret
dec
ret
push
into
mov
xor
das
call
sbb
mov
ljmp
aaa
mov
inc
cmpsb
inc
jae
in
sbb
and
in
shlb
je
cmp
inc
daa
sub
mov
jl
push
xchg
cwtl
movsl
jg
pop
and
enter
add
jecxz
sbb
jle
add
shrb
movsl
test
cmp
hlt
js
adc
pop
push
lds
inc
mov
fsubr
add
xchg
outsb
push
mov
adc
loop
and
jle
out
xor
mov
test
and
fisubs
push
jl
into
int
shl
sub
pop
fdivrl
push
roll
mov
test
addb
mov
js
dec
mov
lret
stc
push
sub
mov
cmp
or
inc
lretw
leave
xor
loop
cmp
or
dec
loope
cmpsb
testb
ret
xor
inc
cltd
outsl
aam
add
hlt
stc
jns
xchg
add
fwait
mov
mov
or
push
cli
pusha
sub
add
sbb
mov
sbb
loopne
into
mov
adc
out
inc
xor
rep
inc
fstl
cmpsb
fucomi
cmp
xchg
fldt
aad
lock
jns
mov
std
jmp
inc
push
cs
fwait
popa
aad
dec
sbb
cwtl
inc
cmp
fdiv
dec
lods
into
bound
sbb
imul
pop
mov
cmp
call
fcmovne
mov
xchg
jl
or
xchg
scas
fcomi
jge
pop
lret
and
add
lahf
jb
mov
mov
mov
inc
jecxz
jbe
fscale
mov
xor
in
enter
xchg
cld
nop
insb
outsl
lret
jns
rorb
xchg
js
lock
cmpsl
das
insb
mov
sub
fs
pop
aam
popf
cmc
ret
xor
fildl
insl
movd
cmpsl
jae
jge
xor
cwtl
popa
call
aam
mov
cmpsl
jecxz
and
int3
mov
pop
fmull
and
pushf
ljmp
sarl
mov
sbb
pop
test
fisttpll
stos
clc
sti
or
ljmp
cmp
stos
iret
jp
out
andl
aad
add
sahf
xchg
add
lock
stos
cmpsb
adc
fidivrs
mov
jge
test
jno
test
out
nop
xchg
sbb
sbb
sub
xchg
leave
dec
fwait
mov
inc
mov
add
add
fnstenv
jg
jns
or
cmp
pop
xchg
bound
xchg
mov
jmp
popf
ja
cmp
xorl
sub
mov
mov
inc
mov
out
inc
fidivs
jmp
out
mov
cmp
stos
out
icebp
push
sub
shll
rcrl
jp
inc
out
and
test
insb
mov
pop
test
rclb
in
add
jnp
ret
inc
adc
arpl
jae
adc
cwtl
das
jp
cmp
jecxz
cmc
lahf
ljmp
and
or
or
push
scas
jl
jg
pop
adc
jbe
ret
arpl
call
popf
repnz
gs
inc
fsubrp
orl
and
test
int3
sub
lret
ficomps
mov
int
push
rorb
loop
iret
call
and
adc
lods
push
push
daa
push
cwtl
ret
sarb
sbb
aaa
lds
or
incb
dec
xor
push
mov
out
xor
mov
xchg
and
ret
test
add
push
cmpsb
lahf
fsubr
add
fsubs
jae
or
into
xchg
jmp
sub
arpl
ds
scas
movsl
xchg
pushf
and
lods
addr16
jmp
and
sbb
or
xor
in
pop
push
pop
mov
pop
movsl
repz
push
mov
push
xlat
pushf
sub
xchg
in
sub
idivb
outsb
mov
jns
jns
jg
mov
mov
std
repnz
add
and
xchg
ja
jg
or
pop
pop
pop
cmpsl
lcall
dec
mov
cmpsb
cltd
sbb
scas
filds
jne
jg
pop
pop
lahf
mov
dec
out
pop
and
add
jnp
mov
or
int
shr
sub
enter
xchg
aam
lret
push
xor
int3
jl
push
xor
mov
cmc
mov
jno
inc
fldcw
loope
xchg
xchg
imul
popf
add
pcmpgtd
movsl
dec
lods
fdivrl
mov
fs
out
inc
xchg
cli
int
mov
insl
push
out
in
cwtl
loope
cmp
dec
daa
loopne
inc
mov
push
je
adc
cs
fnstcw
inc
sti
mov
repz
xchg
jns
adc
int
mov
dec
lea
xlat
xchg
iret
push
sub
jmp
int
and
mov
pop
aad
mov
adc
cwtl
dec
mull
sbb
or
je
bt
push
fcmovb
pop
and
lea
or
pop
int3
scas
pop
dec
mov
dec
dec
and
in
and
pop
outsb
jnp
inc
adc
inc
sbb
popf
aas
lahf
adc
sarb
inc
stc
sbb
std
pop
cmp
mov
jmp
jge
movsb
fadd
mov
inc
xchg
icebp
pop
mov
test
jmp
push
mov
es
aaa
roll
jg
mov
pop
sub
ret
les
adc
mov
ret
or
dec
fnstsw
lods
mov
ljmp
lods
sub
mov
lret
and
addr16
pop
sti
loop
shrb
xor
ficoms
mov
push
cmpsl
push
lret
fnsave
mov
xchg
repz
ljmp
mov
imul
popf
out
out
scas
xchg
sbb
push
stos
inc
sbb
scas
jg
add
ret
and
xor
loope
mov
adcb
and
or
lcall
inc
sub
fwait
iret
sbb
xchg
fisubrs
add
jmp
push
xor
pop
test
sti
loop
in
and
mov
mov
stos
xchg
dec
mov
cmpsb
push
xchg
ja
or
dec
fildl
mov
mov
cwtl
jne
rorl
movsb
out
and
call
xchg
mov
pop
clc
out
mov
sub
mov
or
and
pop
in
insb
and
jnp
lret
jle
addr16
in
ljmp
loop
adc
pop
lcall
jae
pop
adcb
and
popf
pusha
adc
gs
pop
push
xor
fildll
js
out
mov
mov
scas
fildll
mov
iret
cmpsb
fcom
ret
ret
mov
pop
mov
mov
loope
inc
or
mov
sbb
jb
xor
pop
int3
sbb
mov
add
lds
shrb
jp
outsb
add
push
pop
outsb
cmp
xorb
pop
push
push
movsl
sbb
sbb
xchg
aaa
test
inc
jno
add
jl
sarl
mov
mov
xor
in
dec
scas
cmp
pop
and
pop
aad
pavgb
push
inc
mov
cmpsb
dec
inc
cmp
jmp
xchg
daa
jb
ljmp
pop
jg
pop
loope
cmp
ljmp
fwait
jecxz
mov
jmp
or
fcoml
dec
nop
sbb
sbbb
mov
inc
sub
ret
pop
mov
cmpb
mov
in
popf
push
andb
inc
add
ds
pop
sub
jo
adc
cwtl
jnp
fidivs
adcb
cld
mov
jge
mov
jae
and
mov
push
sbb
int
sub
bound
dec
lcall
pop
mov
cmp
mov
enter
push
mov
adcb
ret
add
dec
insl
lea
adc
pusha
int
dec
fistps
orl
lret
mov
loope
clc
cmp
pusha
dec
or
dec
inc
into
insb
repnz
cmc
push
sbb
xor
mov
sbb
dec
imul
add
inc
add
lods
ret
cmc
sub
push
cmp
mov
fmul
sub
incb
daa
gs
loop
loopne
lret
adc
nop
lcall
dec
push
les
mov
repz
dec
xchg
cmp
lret
xchg
stc
cmp
xchg
xchg
sub
jbe
pushf
or
mov
xchg
push
arpl
jno
aad
out
cmp
dec
push
or
dec
fwait
in
loop
inc
mov
jecxz
sbb
or
stc
pop
cld
ja
cmp
frstor
fistl
add
adc
pop
inc
cwtl
push
inc
aaa
xchg
cs
ds
jb
push
sbb
and
sbb
rorl
idiv
add
add
hlt
mov
mov
cmp
not
popf
cld
out
push
lret
push
mov
inc
mov
cmp
das
sub
lahf
lds
aam
out
ret
push
test
or
insl
fnstsw
dec
fcoms
cmpsl
jno
cmp
popa
push
fwait
sbb
xchg
iret
iret
mov
in
xchg
adc
or
sbb
or
inc
mov
and
pop
test
adcb
iret
dec
push
lea
clc
jno
repz
add
ljmp
inc
pop
adc
push
stos
lods
adc
dec
sbb
xchg
arpl
push
xchg
pop
add
mov
xor
lcall
cmp
dec
inc
lods
mov
xchg
pop
bound
or
test
jno
or
stc
ljmp
bound
add
xchg
or
add
das
dec
jns
pop
xchg
push
sbb
add
mov
leave
ds
popa
sub
mov
mov
scas
mov
xchg
xchg
dec
fisubrs
dec
mov
jge
out
add
bound
jmp
test
js
pop
sti
shl
lret
in
shrl
mov
scas
roll
jp
orl
push
shrb
cli
jnp
insl
jle
jno
in
xor
mov
filds
sbbb
xlat
mov
pop
sarl
inc
or
jb
sbb
push
mov
popf
xchg
mov
jae
jnp
je
ficoms
pop
mov
mov
scas
inc
jnp
push
xchg
sub
adc
scas
iret
add
sub
cmp
hlt
out
arpl
divb
inc
in
pusha
or
push
xor
ficoml
add
cld
pop
int3
add
pop
ljmp
or
inc
shll
and
repnz
cmp
subb
movsb
adc
dec
mov
jge
mov
sbb
insb
cltd
aaa
inc
lcall
loop
push
jl
popf
inc
dec
movhlps
push
ja
pop
xor
inc
inc
or
sbb
imul
int
sub
inc
sbb
cmpsb
int3
push
add
shrb
enter
daa
jno
and
loope
and
sub
xor
cmp
inc
cmpb
mov
and
add
sub
in
mov
pop
lea
xchg
out
xor
pop
mov
add
pop
and
xor
adc
sub
cmp
out
shlb
jmp
cmp
std
xchg
mov
mov
push
pusha
and
std
xchg
int
sub
ffree
test
lcall
clc
mov
test
lods
sahf
imul
test
fidivs
subb
movsb
mov
ljmp
sbb
add
ss
push
mov
fdivrs
hlt
cltd
notl
jl
lret
aas
xor
popa
in
dec
jbe
into
dec
pop
xchg
pop
ja
xor
mov
outsl
jno
stc
loop
mov
imul
jmp
or
lods
stos
push
sbb
push
scas
adc
pusha
les
mov
inc
adc
inc
insl
cltd
daa
xchg
dec
gs
shl
push
push
pop
adc
sbb
fldlg2
rclb
repz
push
sbb
mov
fmuls
adc
and
sti
pop
cs
push
test
nop
lret
dec
mov
push
inc
or
shlb
cmc
jecxz
and
gs
lea
fwait
call
pop
push
mov
adcl
cs
mov
insb
inc
pop
repnz
push
mov
aas
fstl
jb
std
dec
mov
pop
nop
rcl
fwait
test
idivb
nop
and
cmpsl
addr16
lea
in
in
push
icebp
int
ss
adc
clc
mov
cmp
in
jge
das
or
fsubrs
dec
cmp
jge
mov
es
pop
insl
xor
roll
and
sub
or
add
adc
and
popf
lcall
adc
dec
in
test
add
mov
nop
push
push
push
loop
ffree
jl
clc
lods
dec
add
push
jnp
mov
bound
lods
stos
pushf
add
out
lods
fistpll
push
popa
inc
lahf
dec
inc
add
xchg
mov
xchg
pop
dec
test
mov
test
mov
dec
dec
or
dec
jns
sub
popa
jne
mov
testb
xchg
cwtl
xor
and
imul
sbb
jno
lea
loopne
ja
cmp
dec
rorl
mov
repnz
mov
xorb
rorl
jne
mov
out
loopne
adc
mov
jmp
push
pop
adc
cmpsb
loopne
out
cwtl
fs
mov
insb
sarb
jp
mov
and
jae
insb
stc
loop
jnp
les
cmp
in
loopne
pusha
and
sub
and
sbb
stos
mov
pop
or
inc
pop
or
jae
mov
stc
popf
scas
jnp
mov
mov
ret
stos
out
into
xchg
es
dec
imul
scas
movsl
aas
push
push
fsubl
adc
lret
fs
mov
dec
xchg
adc
xor
mov
inc
out
or
push
sbb
xor
or
scas
int3
out
sbb
loop
add
jnp
rcrb
mov
lods
dec
adc
aaa
jb
movsb
mov
lret
popa
ret
adc
aam
sbb
ret
test
add
cwtl
jno
js
jl
cmp
rorl
pop
xchg
xor
fwait
cmp
scas
clc
mov
and
test
push
arpl
dec
inc
stos
pushf
popf
cmpsb
dec
fstpl
mov
push
enter
daa
jo
stos
cmp
movsl
loope
or
pop
mov
cmpsl
jb
mov
inc
lea
jmp
bound
jg
pop
sbb
sahf
sbb
jp
pop
xor
es
mov
pop
pop
fmuls
lahf
js
vmovhpd
push
push
lea
fcoml
add
outsb
adc
dec
xchg
cmp
rolb
mov
pop
pusha
mov
lea
push
mov
sub
popa
pop
fmuls
lcall
nop
mov
jmp
xor
fs
add
inc
jg
and
pop
stc
inc
mov
mov
xor
shlb
cmp
stc
lock
rcll
push
popa
out
shlb
or
mov
mov
lret
xor
loopne
push
push
adc
inc
sub
adc
sbb
add
or
xchg
jns
lods
xchg
xchg
jo
das
ret
dec
test
fsubl
scas
sub
sti
repnz
sti
decb
loope
mov
sbb
adc
sub
repz
xchg
xchg
ret
sbb
stc
push
mov
push
mov
adc
inc
pop
pushf
pop
rolb
jmp
mov
pop
aad
cmpsb
adcl
loopne
inc
sbb
jno
xlat
clc
repnz
je
push
cmpl
push
loop
xlat
fbstp
subl
jb
inc
sub
fnstsw
insl
out
aas
jl
pop
jb
sub
and
pop
push
shr
and
testb
loope
dec
daa
mov
loope
mov
xlat
dec
sbb
movsb
insb
sbb
cmp
ds
xor
je
mov
xchg
dec
jp
das
call
pop
pop
sub
sub
dec
xorb
jno
into
adc
mov
dec
fisubl
add
lods
imul
inc
mov
pop
mov
cmp
xor
pop
xchg
shr
stc
sahf
cltd
xchg
sbb
call
in
cmp
adc
fucomp
int
clc
out
inc
xchg
subl
jl
push
mov
setnp
cmp
in
bswap
cmp
add
in
or
or
mov
mov
jb
adc
test
int
xchg
scas
call
inc
out
dec
outsb
or
jns
fwait
pop
sub
push
loopne
cwtl
add
push
outsb
sar
inc
jns
xor
imul
inc
lahf
in
add
sahf
push
jbe
jae
cmpb
es
xchg
aas
dec
mov
dec
mov
pop
in
mov
icebp
inc
add
jne
jge
mov
insb
jge
mov
call
pop
xchg
sbb
in
xorl
scas
sub
lods
dec
insb
addr16
aaa
xchg
jp
xchg
insl
and
mov
insb
fs
jnp
xchg
jle
pop
popa
in
icebp
out
mov
enter
push
sub
inc
and
mov
roll
aad
jg
push
into
repnz
icebp
mov
mov
jge
add
imul
scas
or
push
push
and
out
adc
out
fwait
iret
ret
pop
mov
movsb
push
pop
hlt
jl
mov
das
xchg
mov
jmp
ret
push
xchg
jbe
fidivrl
gs
int3
fnstcw
fisubrs
sbb
jp
cmp
call
data16
sub
pop
jbe
add
jge
aaa
rorl
or
cmc
jno
jmp
adc
lret
cmp
ficoml
jo
aas
pusha
scas
xlat
orl
test
sbb
cmpsb
rcr
jnp
sahf
in
enter
daa
outsl
arpl
lcall
sub
push
jns
push
and
vpaddusw
xchg
mov
addr16
lds
jbe
sbb
add
and
or
je
iret
pop
dec
mov
pop
mov
mov
cmp
aas
cmpsl
add
cmpl
adc
sub
cmc
sti
xor
orb
mov
or
add
ror
inc
fdivrs
pop
push
testb
mov
sarl
xchg
mov
cs
mov
out
test
addr16
and
pushf
jg
lea
je
xor
sti
movsb
cmp
je
movb
cmp
mov
dec
notl
cmpsb
xor
cmp
adc
adc
pop
sbb
lods
mov
outsl
das
es
loop
cmc
fsubrl
dec
adc
add
shlb
push
or
sub
cli
mov
mov
sbb
or
mov
jae
gs
call
pop
iret
cld
mov
fstps
push
les
add
add
sbb
xor
out
nop
lock
sub
mov
pushf
or
cs
js
nop
addb
inc
jns,pn
dec
add
je
cltd
sbb
mov
rol
or
lea
cmpsb
and
push
out
ficompl
aaa
xor
iret
sti
out
fbld
imul
sub
in
aas
sbb
or
jno
and
cmp
push
lds
fs
cmc
jae
cwtl
add
mov
mov
xchg
icebp
jnp
sar
jnp
lret
movsb
rorl
cs
icebp
mov
lds
mov
stos
and
aaa
fnstenv
aam
lret
jo
add
push
xchg
jecxz
insl
xchg
xor
leave
lahf
js
outsb
inc
cltd
mov
pop
push
inc
lods
aam
fnstsw
push
movsb
stos
and
rcrl
dec
sarb
imul
push
push
mov
and
and
push
ljmp
add
mov
out
jb
mov
cmp
pop
xchg
test
sub
push
or
dec
insb
xor
mov
lret
lock
dec
ja
fldcw
xchg
push
jnp
and
mov
push
or
ja
fwait
mov
sub
outsl
cli
pop
jmp
bound
push
fcomps
jns
lods
mov
repz
mov
sub
mov
xchg
add
ja
jae
dec
cmpsl
pop
cmpsb
mov
in
mov
pusha
sarb
jne
aam
mov
subl
sbb
xor
out
mov
les
out
dec
loop
in
add
or
ja
jp
sub
and
jmp
iret
mov
lods
jle
inc
scas
in
data16
pusha
pop
daa
sbb
jb
xchg
push
test
outsl
inc
sub
sub
push
addr16
popf
cld
jae
mov
xor
stos
int
mov
sbb
cmc
leave
imul
scas
imul
out
and
xor
mov
xchg
cmp
jns
dec
xor
inc
in
or
or
and
push
inc
jge
outsb
je
add
inc
pop
ja
add
dec
ficompl
rclb
cmc
repnz
or
movsl
icebp
mov
jge
lds
popa
das
leave
aaa
adcb
or
push
pop
jno
jle
jl
stc
jbe
pop
int
push
and
int3
xor
push
pop
push
scas
mov
jl
and
dec
push
stc
in
inc
enter
push
dec
xchg
in
test
inc
enter
daa
outsb
test
int
cmp
inc
or
cmp
adc
test
inc
lods
lahf
xchg
pop
push
and
xchg
add
shr
xor
pop
jne
aaa
clc
cltd
pop
es
js
adc
jb
mov
push
mov
fsubr
test
jb
movsb
pop
sbb
rolb
rorl
pop
adc
mov
clc
cmc
and
jp
mov
ror
stos
test
pop
daa
mov
sti
cmp
shrl
jae
lahf
in
sbb
or
test
cltd
cmp
iret
jg
stc
and
stc
mov
add
mov
push
xchg
ss
pusha
dec
cmp
outsl
cmpsb
xchg
testl
ljmp
pop
mov
into
clc
pop
cmc
cmc
insb
in
xor
aam
outsl
push
cli
or
imul
ret
add
test
mov
sbb
and
sub
cli
stc
jnp
mov
test
stc
sti
push
fdivs
nop
rolb
gs
es
daa
mov
pop
out
sub
adc
xchg
xor
repz
xor
xchg
dec
add
sbb
outsl
mov
add
xchg
imul
dec
cs
lods
mov
dec
rol
mov
dec
ja
mov
sbb
outsb
call
jecxz
dec
lcall
aad
es
enter
push
xor
fisttpl
ret
ds
popf
xchg
loopne
inc
mov
dec
sahf
jb
sbb
mov
cld
call
pop
testb
dec
std
pushf
rclb
mov
add
mov
xchg
xchg
cld
xchg
sub
mov
or
mov
addr16
lock
scas
cmp
cmpsb
jg
mov
cs
mov
ret
outsb
sbb
pop
push
insl
jns
add
mov
cmpsl
insl
adc
jb
fsubrl
add
mov
sub
aaa
mov
xchg
pop
push
rorb
cmpsl
aaa
test
push
push
cltd
push
dec
fnstsw
sbb
clc
pop
push
xchg
decl
or
ret
out
leave
shll
cli
mov
out
aad
pop
xchg
jg
push
jp
jecxz
or
jae
mov
or
pusha
test
mov
xchg
inc
or
mov
or
dec
pop
fwait
mov
adc
xor
mov
xor
cwtl
jns
mov
cmc
xchg
cmp
das
mov
xor
mov
dec
jo
ja
xlat
decl
xchg
outsl
mov
xchg
xchg
mov
iret
daa
fmull
stc
dec
jne
mov
out
jge
inc
bound
xor
xchg
mov
adc
xlat
push
das
sub
mov
cmp
and
xor
jnp
push
stos
jle
sbb
inc
pusha
cmc
mov
xchg
and
pop
lods
cmpsl
pop
inc
cmp
jae
enter
lods
js
and
mov
outsl
pop
or
sub
repz
pop
nop
imul
scas
into
inc
ficoml
insl
ss
jno
iret
addl
jp
mov
in
adc
arpl
rolb
mov
pop
push
xchg
fwait
push
fisubl
jbe
add
pop
int3
scas
jbe
pop
cmpsb
pop
add
out
jno
cmpsb
shlb
add
cmp
movsb
inc
mov
pop
jbe
xlat
push
jge
xchg
into
sbb
xorb
xchg
pop
or
aaa
cmpl
pop
push
add
or
lods
mov
sub
and
lahf
loope
les
inc
push
fsubs
cmpsb
fsubrs
int3
in
insb
ljmp
insl
sub
add
test
jge
popa
sub
rcl
mov
jmp
or
das
movsl
mov
bound
mov
xor
push
clc
jmp
popa
add
clc
or
ret
cli
lret
in
pop
dec
decb
sti
sbb
pop
pop
ja
push
jecxz
push
loope
pop
fcoml
xor
outsb
pop
sti
add
rcr
jle
mov
andl
mov
sub
jno
mov
xchg
adc
int
pop
imul
push
pop
push
xor
mov
jnp
sahf
negl
test
sbb
pop
adc
mov
pushf
jle
imul
insb
ss
mov
jecxz
sub
testl
push
popf
xor
lds
scas
jns
pop
mov
hlt
cmc
xor
cmpsb
xor
outsl
in
rcl
loop
sub
imul
mov
fwait
cmp
sbb
lods
inc
mov
mov
push
xchg
dec
scas
in
sub
andb
jno
sti
incl
cli
shlb
lds
pop
push
adc
inc
or
cmp
icebp
and
or
sbb
stos
in
xlat
push
sbb
sub
es
lea
pusha
mull
jmp
mov
jmp
aam
ss
ss
sub
inc
push
mov
ljmp
cld
mov
jno
sub
jmp
push
xchg
test
cmp
sub
mov
fstpt
cltd
outsb
inc
cmp
lods
inc
mov
std
jmp
mov
xchg
lcall
adc
mov
leave
inc
mov
popa
add
mov
pusha
je
hlt
ret
add
out
das
test
mov
and
pop
in
push
adc
es
dec
mov
lea
popa
mov
mov
pushf
shl
and
or
cmpsl
pop
mov
cld
shlb
xor
ss
test
dec
jp
test
popa
js
pusha
sbb
xchg
add
rorl
cmp
pop
insl
push
out
cmp
sub
aaa
dec
psubsw
cmp
jns
scas
or
cmpsl
pop
xor
and
mov
xchg
iret
dec
inc
push
or
push
xchg
xchg
mov
sbb
sbb
add
pop
fwait
jmp
jecxz
add
movsl
dec
dec
jmp
inc
outsb
xor
dec
push
jns
imul
or
sub
cmp
mov
or
jae
ja
mov
fdivs
push
inc
pop
dec
dec
das
cmp
scas
add
pop
jg
bound
or
inc
test
and
push
out
into
lds
sahf
cmp
addr16
sbb
inc
ja
and
mov
movsl
in
add
push
arpl
jle
ljmp
nop
add
pushf
shlb
push
pop
in
insb
inc
inc
movsb
in
jge
dec
push
in
push
adc
jno
push
scas
cmc
bound
orb
sbb
or
imul
scas
xor
dec
push
clc
cmp
iret
loopne
cmp
mov
sub
hlt
pop
fnstcw
pop
add
inc
rep
sbb
mov
stc
roll
je
fcmovbe
sub
add
xchg
push
pop
aad
xchg
ficoms
dec
lcall
testl
cmp
add
push
jg
out
insl
jo
jge
inc
negl
xlat
ljmp
stos
push
adc
adc
jl
push
mov
cmp
das
push
out
and
pop
lret
xor
dec
mov
push
push
jne
inc
out
scas
cmpsb
pop
xchg
ret
ljmp
push
pop
cmp
add
loope
or
sub
xor
mov
movsl
mov
xchg
and
dec
lahf
les
cs
jmp
add
jb
xor
adc
pop
je
xchg
js
mov
pop
pop
mov
push
adc
faddl
sbb
push
pop
or
mov
sarb
sbb
addb
adc
out
push
xchg
js
int
mov
pop
aam
xor
sti
orl
cmpsb
xchg
xor
jg
fcoml
mov
mov
and
pop
fs
and
adc
pop
idivb
in
ja
int
test
xor
and
cmp
rcll
into
mov
and
xor
lods
add
mov
adc
jmp
xor
xchg
sti
lods
sub
add
dec
mov
cmp
pop
fsubrl
scas
repz
insb
sbb
mov
jl
sub
fcoml
loopne
jp
cld
je
dec
jbe
repz
mov
into
push
or
cmp
mov
mov
insl
inc
or
cs
cmp
jmp
jbe
jecxz,pn
aaa
aad
inc
mov
adc
jne
lods
mov
stos
mov
jecxz
pop
jne
je
scas
lea
stos
call
shll
call
addl
dec
sbb
sahf
roll
jae
inc
fnstcw
aas
clc
mov
jb
fdivrp
mov
adc
js
cmp
testb
sbbl
mov
push
cmp
or
in
mov
outsl
iret
mov
fs
dec
das
fs
jecxz
sbb
adc
je
jle
lods
sti
outsb
es
in
dec
mov
js
mov
mov
mov
and
cmp
movsb
scas
sahf
pop
aam
sbb
xor
insb
cltd
insl
les
test
outsl
or
push
pop
jecxz
fldl
cli
add
test
add
push
push
push
stos
inc
xor
xchg
or
dec
sbb
add
xor
mov
xchg
notl
test
jmp
xchg
test
inc
dec
cmpsl
lods
or
push
test
insb
cmpsb
inc
add
rclb
mov
push
xchg
jns
mov
icebp
xchg
fisubrl
xlat
mov
ret
or
ja
sub
andb
mov
popa
and
push
xor
pop
movsl
jne
xor
mov
cmp
out
cmp
mov
movsl
xchg
inc
bound
jno
cmp
fnstsw
xor
cltd
mov
addr16
dec
add
sub
and
inc
adc
xor
cmpsb
in
sbb
mov
mov
cltd
push
inc
dec
sbb
xchg
mov
xchg
add
push
in
adc
stos
es
mov
sbb
lcall
popa
std
push
aas
push
gs
aas
stc
jns
lock
leavew
mov
lahf
lahf
arpl
xchg
inc
imulb
addr16
add
xchg
rclb
add
inc
int3
test
pushf
fidivs
pop
shl
test
dec
scas
sbb
movsb
push
aam
push
into
sub
mov
lods
jge
fstl
sbb
sub
or
adc
jl
lret
test
inc
inc
xor
bound
subl
xchg
mov
jo
jne
cmpsl
cmpsb
ficoms
in
cmp
cmp
imul
cmp
add
stos
cmpsl
and
jg
cmp
fsubs
push
xor
movsl
mov
clc
push
lahf
jecxz
jne
sahf
sub
fadds
inc
pop
xor
pop
or
pop
fwait
shrb
jno
fwait
pop
popf
insl
jl
jecxz
mov
xlat
mov
jmp
and
aas
mov
out
adc
xchg
movsl
or
xchg
sti
and
pop
mov
and
push
xchg
int
in
sub
aam
lcall
xchg
mov
cmp
xor
fwait
sahf
cmp
sub
orb
jg
push
push
mov
lods
loop
xlat
addr16
fs
mov
and
and
mov
mov
sarb
xor
sub
cmp
int3
lods
or
jbe
into
mov
xlat
stos
xor
stos
mov
loop
xor
imul
scas
or
inc
fisubrl
push
inc
push
out
inc
xor
xchg
xchg
mov
lds
dec
sti
pop
daa
cmp
gs
push
loopne
mov
pop
dec
lds
adc
pop
les
fdivp
mov
fstl
add
notl
xlat
mov
sub
adc
adc
mov
jmp
push
ss
loope
aad
movsl
nop
nop
in
push
push
out
cmp
dec
faddl
outsb
je
bound
jecxz
add
ja
lret
fnstenv
js
push
push
ds
loope
xlat
sbbl
push
pop
xchg
dec
inc
hlt
adc
jne
mov
aaa
and
xor
fdiv
shrl
std
xchg
xchg
pushf
loop
mov
bound
lret
pusha
std
call
mov
movsb
push
lock
das
inc
push
xchg
mov
adc
mov
ret
cmp
mull
mov
xchg
rorb
ret
std
cmpsl
push
popf
mov
mov
bound
loop
mov
inc
xor
aas
mov
pop
repz
pop
pop
dec
cltd
movsb
enter
out
mov
test
imul
mov
xchg
xchg
mov
or
sarl
cmp
stos
ss
pop
xchg
push
or
jo
cmpsl
sbb
lahf
lcall
sbb
js
cwtl
mov
dec
adc
ja
out
jp
inc
loop
fisttpll
mov
fwait
inc
xchg
jnp
minps
lret
mov
add
bnd
pop
xor
xor
insb
jns
mov
cli
xchg
sub
push
mov
add
pop
jle
dec
ja
sbb
jae
dec
mov
jge
mov
sbb
inc
dec
adc
jne
pop
icebp
mov
lahf
shr
sbb
xchg
bound
mov
xchg
adc
inc
out
and
or
sbb
xchg
pop
and
imul
or
in
and
inc
cmpsl
xchg
pushf
cld
popa
pop
push
ret
mov
jae
cmp
push
jae
or
cmp
mov
stos
cltd
lahf
and
or
aas
imul
jo
neg
daa
push
xchg
adcl
int
iret
sahf
jnp
ret
mov
hlt
repz
push
inc
stc
sbb
lea
jle
adc
daa
add
loop
int3
jo
push
xor
adc
xlat
lock
rolb
push
mov
sahf
clc
cli
cmp
jmp
push
sbb
inc
jge
pop
popf
sbb
dec
aaa
jl
xor
nop
pop
aaa
jno
cmp
dec
sbb
push
lods
fsubl
jo
mov
scas
xor
mov
test
and
js
cmpsb
popa
xchg
cmp
enter
daa
push
push
cmp
insw
sub
pushf
out
rcrl
movsl
lds
rcrb
sbb
lods
add
xor
scas
dec
inc
push
pop
ret
js
cmpsb
fstl
fsubrl
inc
push
out
inc
fcoml
sub
xor
insl
shlb
inc
sbb
subb
rol
push
lcall
sub
stc
roll
rclb
or
sub
int
sbb
add
loopne
pop
test
or
jg
iret
jns
adc
push
stc
mov
insl
adc
jecxz
and
scas
sub
fcomps
pop
testl
les
cltd
pop
out
aam
push
into
test
and
mov
shll
je
subb
insl
loop
add
sti
adc
dec
and
dec
into
jp
mov
aam
mov
sbb
cli
lds
mov
xor
mov
gs
push
pop
push
xor
xchg
fldcw
movsb
les
shl
or
xchg
push
jge
sbb
pop
fisubs
lret
xor
adc
sbb
popa
xchg
jmp
push
cs
push
nop
cwtl
and
mov
mov
or
cltd
cmpsb
imul
jmp
scas
lea
adc
cmp
pop
shl
ja
xchg
test
xorl
jmp
pop
sub
or
mov
enter
fsubrl
dec
rol
pop
mov
std
cmp
sub
pop
xor
pop
icebp
scas
cltd
imul
ds
lret
iret
icebp
pop
mov
pushf
lock
scas
das
and
push
mov
or
lods
aam
sub
push
and
insl
adc
adc
xor
pop
popa
into
xor
lods
jmp
je
cwtl
or
mov
dec
adc
mov
adc
xchg
rcr
sub
test
gs
inc
das
push
movsl
inc
xchg
fst
push
jae
sti
add
ljmp
inc
pop
insb
cmc
jl
and
add
xchg
fwait
imul
inc
mov
add
sti
stos
xor
xor
mov
fwait
xchg
cmp
jp
inc
test
jb
xchg
or
sbb
cs
or
fmuls
fwait
jbe
adc
mov
ljmp
loop
std
cs
xor
push
or
stos
pushf
repz
js
in
add
sbb
pop
cmp
xchg
ja
mov
dec
data16
mov
mov
mov
dec
testb
mov
sbb
cld
popa
pop
jmp
fstl
push
out
clc
and
pop
js
leave
jae
jp
lods
popf
and
out
fs
jle
or
in
mov
popa
faddl
stc
add
pop
mov
inc
or
jae
out
push
shufps
dec
jg
imul
stos
or
mov
sbb
in
imul
lea
int
mov
iret
std
add
ret
out
leave
mov
dec
hlt
sub
mov
inc
inc
cld
cmpl
push
xchg
adc
mov
int3
pop
fisubrl
bound
mov
adc
stc
rcrb
mov
icebp
jne
cmp
out
movsb
insl
push
je
insb
xchg
arpl
hlt
fwait
jge
mov
sbb
pop
mov
cmp
pop
or
orb
xchg
push
imul
push
push
jo
or
adc
repz
lock
xor
mov
in
or
dec
daa
imul
loope
dec
xchg
sub
mov
cmp
add
xchg
or
movsl
int3
and
aam
lahf
and
jae
inc
inc
rcrb
ja
rolb
fdivrs
push
mov
fnstsw
cld
dec
pop
sbb
leave
push
cmp
and
sub
clc
fists
dec
rcll
xor
inc
call
mov
inc
and
lods
sub
popf
gs
lods
inc
nop
sub
fildl
lcall
repz
fincstp
sbb
cmp
test
xorb
data16
inc
mov
and
mov
xor
cmp
push
or
testl
gs
jo
mov
cmp
ret
inc
add
cmc
dec
insl
stos
xor
pushf
outsl
imul
imul
test
and
lods
loop
sub
dec
out
adc
clc
mov
cmpsb
in
fwait
adc
sti
mov
cli
push
gs
lds
cs
popf
adc
fcmovu
movsb
cli
inc
les
and
push
cwtl
scas
xchg
pop
mov
cmp
lcall
xor
insb
jmp
mov
or
or
nop
mov
inc
mov
mov
scas
aas
je
ds
adc
mov
mov
insl
push
sbb
orl
pop
pop
bound
addb
mov
sub
aad
cmpsb
jb
or
mov
mov
rcll
xlat
scas
notb
and
fcompl
sbb
icebp
test
mov
imul
mov
insb
mov
lds
lret
fmull
add
dec
aam
outsl
movnti
jno
cmpsb
scas
lret
insl
cld
popf
xor
int
cmpsl
push
addr16
popa
in
adc
clc
push
and
jne
xchg
pop
xor
into
shrb
mov
mov
push
cmc
jecxz
test
push
xchg
cmp
mov
add
xchg
pop
stos
adc
loope
les
xchg
loop
in
push
cmp
pcmpgtw
mov
lds
out
or
or
pop
loop
mov
sahf
adc
loope
loope
repnz
pop
xchg
js
inc
adc
cmpsb
or
into
jne
movsl
sbb
push
push
cmpsb
testl
pushf
xor
and
mov
dec
sub
mov
hlt
inc
push
ja
xchg
mov
and
mov
cli
dec
jmp
jne
adc
out
fmuls
dec
bound
cmp
test
xor
inc
mov
or
lret
lret
jp
jl
and
jae
insb
push
adc
inc
sbb
cmpsl
test
pusha
cld
mov
std
xchg
inc
pop
icebp
pop
rorb
inc
outsl
andb
fsts
stc
mov
popf
out
lods
mov
stos
jle
stos
jg
xchg
xchg
ficoms
sbb
sub
imul
test
mov
dec
push
iret
pop
mov
sub
es
add
ljmp
lcall
or
jno
nop
inc
adc
cmc
fisubl
inc
dec
int3
inc
inc
std
pop
xchg
jecxz
ficomps
push
mov
mov
inc
daa
inc
cmp
iret
les
sub
jbe
pop
addr16
stc
sahf
sbb
push
test
cli
call
dec
jno
out
jl
push
xor
out
inc
push
jb
jae
sub
xchg
cmp
jl
je
mov
loope
cmpsb
addr16
in
out
push
popf
enter
daa
push
mov
or
mov
cmp
js
ds
subl
ret
pop
mov
pop
cltd
push
sbb
mov
xlat
leave
mov
fidivrs
out
pop
pop
mov
nop
push
xchg
lahf
sbb
sub
scas
outsb
negb
adc
or
xchg
das
dec
or
mov
subl
cmp
movsb
and
in
int
dec
xchg
xor
pop
shlb
lcall
and
sbb
push
add
sahf
adc
in
rcr
mov
dec
scas
stc
cld
xor
fs
jnp
adc
sbb
std
cmp
shll
lretw
pop
xor
idivl
mov
or
dec
xchg
into
dec
or
lahf
xor
xor
outsl
dec
inc
shl
fadds
sbb
test
stc
int3
add
loopne
test
mov
mov
or
inc
or
push
add
push
into
loop
push
add
bound
jmp
inc
test
leave
insl
sbbl
ja
sub
call
les
repz
sbb
shrl
xlat
dec
test
mov
and
outsb
pusha
outsl
and
aad
and
dec
or
mov
mov
inc
dec
inc
clc
cmp
jecxz
test
lea
xchg
iret
ret
push
pop
cli
nop
sti
and
ljmp
outsl
cmp
test
aas
je
jmp
mov
jbe,pt
shll
cmpsb
negb
mov
cwtl
and
insl
mov
push
cld
xchg
mov
push
mov
jns
call
sub
in
mov
clc
mov
aam
push
lret
ret
jmp
xchg
cs
jecxz
jne
cmpsb
xor
addr16
sbb
cld
inc
aaa
lods
shll
imulb
jg
push
pop
cwtl
mov
push
aas
icebp
rolb
lods
inc
test
jmp
mov
pop
push
sub
frstor
addr16
clc
mov
xchg
ja
jne
or
pop
ret
stos
add
addr16
daa
movb
adc
inc
pinsrw
add
and
inc
xor
jecxz
mov
mov
inc
shrb
setnp
pop
add
pop
or
cwtl
jbe
aam
in
clc
cmp
add
sub
cmp
dec
xor
mov
fdivrs
in
lds
push
dec
loope
mov
xchg
mov
scas
sub
ja
add
mov
test
mov
imul
jne
and
push
inc
js
mov
popa
bound
aad
jmp
jae
lods
subl
xchg
sub
test
addr16
cmpsl
dec
jp
in
and
aad
insb
mov
and
je
sbb
clc
mov
fbstp
mov
xchg
adc
mov
adc
movq
mov
out
mov
jmp
jmp
sbb
inc
ljmp
or
pop
or
outsl
iret
mov
mov
aam
scas
arpl
stos
dec
or
in
xor
and
push
inc
jecxz
lods
stos
sub
xor
faddp
add
adc
mov
repnz
or
cmp
sub
or
jbe
cmp
pop
and
sbb
push
or
inc
jno
sbbb
gs
mov
push
adc
into
inc
inc
scas
iret
mov
daa
ficompl
test
xchg
aad
mov
jp
ljmp
enter
daa
addr16
cmp
insb
repz
jl
sub
in
bound
into
mov
mov
movsl
fimull
inc
lahf
pop
and
sbb
loop
add
shrb
mov
pop
aaa
cmc
jecxz
pop
bound
cltd
mov
push
mov
fcoml
add
pop
scas
pop
adc
add
repz
repnz
xchg
and
lods
addb
inc
or
sub
repnz
lcall
inc
mov
xchg
sahf
leave
pop
std
test
sub
cmpb
mov
ds
stc
mov
lock
ds
repz
popf
xchg
mov
mov
lret
icebp
xor
mov
or
add
cmc
fstl
cmp
daa
xor
imul
dec
call
sub
lods
mov
dec
mov
adc
out
cmpsl
or
pop
mov
jno
lods
sti
sbb
les
daa
push
sarb
adc
out
adc
adc
movsb
repz
add
xchg
popf
fwait
movsb
sbb
or
stos
xlat
mov
sbb
adc
out
pushf
bound
cli
shlb
aad
adc
pop
hlt
dec
imul
imul
jecxz
cmp
lea
loope
test
repnz
and
cmpl
data16
fistpl
pop
out
inc
gs
fnstsw
adc
jb
shl
mov
leave
xor
shll
adc
std
sub
fimull
mov
inc
icebp
xor
and
mov
addr16
mov
ret
div
jnp
stos
das
mov
sbb
fs
icebp
mov
cmpb
lret
dec
mov
lret
mov
popa
adc
shrb
sbb
add
stos
mov
pop
outsl
dec
in
rclb
sbb
test
aaa
mov
mov
push
out
aaa
sbb
dec
mov
out
mov
or
push
std
call
stos
xacquire
out
mov
mov
mov
popf
add
data16
mov
cltd
xor
cmp
xchg
subl
sub
inc
xchg
or
ss
push
fwait
mov
mov
inc
sub
fidivrl
add
mov
mov
in
pop
push
mov
sbb
mov
push
stc
ja
add
dec
aas
into
out
mov
push
enter
int3
dec
lahf
jbe
jne
lcall
xchg
out
xchg
bound
jmp
xchg
ds
xchg
cmpl
out
aaa
shrl
xorb
js
pop
and
pop
pop
insb
daa
push
push
jnp
leave
xor
xchg
mov
test
insb
cmp
push
push
call
pop
loopne,pn
inc
test
jae
mov
fisttpl
xor
fidivrl
sub
stos
gs
loop
mov
ficompl
xor
imul
cwtl
scas
adcl
mov
mov
iret
sbb
push
repz
hlt
pop
imul
mov
xchg
insb
jecxz
sub
mov
pop
cli
fiaddl
xor
add
int3
sbb
pop
out
fcomi
fisubs
lds
push
sub
loop
mov
ljmp
movsb
push
xchg
fcoms
sub
xchg
jge
sub
std
adc
js
mov
pop
sub
jno
xor
outsl
dec
aam
cmp
inc
xor
sub
inc
scas
scas
jnp
and
mov
push
push
push
mov
inc
pop
fwait
cmpsb
insl
push
inc
in
mov
jp
daa
data16
cmp
jecxz
push
lret
lahf
sub
pop
cmpb
popa
dec
add
movsl
loope
shlb
stc
mov
lahf
jle
xlat
push
mov
leave
test
xor
imul
dec
inc
fstpl
mov
outsb
pop
fcomp
mov
and
loope
inc
cs
enter
mov
adc
fsubrl
or
jno
mov
ret
fcmovbe
lahf
push
cmpsb
data16
loop
mov
es
or
into
inc
loope
xchg
test
mov
sbb
sar
sahf
insb
pop
std
test
push
mov
stc
push
icebp
adc
mov
jo
pop
cmp
inc
pushf
xor
inc
repz
mov
ja
cmp
push
pushf
or
mov
into
adc
int
movsb
cmp
push
sub
imul
clc
movl
scas
pop
dec
lods
xchg
and
mov
cmp
inc
leave
push
cli
xchg
push
out
test
in
fdivrl
cmpsl
test
aam
add
loopne
dec
lea
sbb
adc
cmp
lcall
lahf
aas
xchg
pusha
cmp
cmp
jns
in
sub
mov
adc
lret
or
sub
xor
addr16
nop
xor
cmp
xchg
cmp
ja
je
lcall
cmp
sbb
fsubrl
shr
xchg
mov
int
add
insb
cmpsl
orl
adc
pop
mov
out
in
mov
jnp
arpl
mov
xor
push
sub
push
inc
cmc
roll
fsubs
and
scas
cwtl
xchg
inc
divl
push
xlat
inc
icebp
or
and
lret
mov
mov
andl
mov
out
mov
out
mov
ret
pop
add
es
mov
insl
mov
dec
dec
pushf
mov
cmpsl
gs
std
mov
sub
push
lods
xchg
inc
xchg
mov
xchg
jno
and
inc
hlt
or
mov
shlb
pop
push
cltd
mov
popl
popa
pop
push
mov
in
jno
sub
xor
xor
pushf
shrl
in
pop
sbb
in
loope
lret
pop
fwait
xchg
mov
in
push
lret
jb
fistpl
sub
loope
mov
cmpsl
inc
xor
arpl
xchg
cmp
aad
push
insl
test
fwait
xor
js
cmp
outsb
test
data16
jns
mov
jns
xor
ds
xchg
mov
sahf
mov
lds
sahf
cwtl
es
and
test
xor
cmp
mov
cs
sbbb
mov
mov
jecxz
jne
bound
sti
jmp
or
or
push
out
fisubrs
or
xor
jmp
jp
and
insb
xchg
lahf
leave
jnp
xor
jle
ss
in
sbb
pusha
int
jno
jne
dec
xchg
mov
shll
es
clc
push
inc
mov
popf
pop
out
mov
addr16
jnp
fdivrs
xchg
jecxz
out
sbb
hlt
imul
jne
jmp
mov
ja
leave
push
push
push
add
cmpsb
mov
mov
mov
es
iret
insl
fidivrl
jecxz
int3
pop
jle
pop
push
popf
fiadds
jg
lds
mov
aaa
mov
cmp
in
movsb
cltd
dec
pop
push
test
imul
pop
jge
sbb
aaa
aaa
dec
cld
or
or
jl
dec
inc
push
lods
push
sbb
popf
xor
test
loopne
lea
and
js
popa
outsl
sbb
fiaddl
jl
cmpsb
lock
in
cltd
iret
repz
gs
cmp
ds
sub
fwait
pop
cmp
ret
sub
call
jp
lahf
popf
cmp
dec
sbb
dec
add
clc
mov
adc
mov
pop
pop
mov
push
pmulhw
stos
sbb
add
cltd
outsb
pop
fsts
mov
test
mov
rolb
call
xchg
fsubl
jmp
stc
out
int
mov
sub
sbb
lcall
cld
mov
push
ret
movsl
inc
sahf
rcpps
test
test
jg
jne
mov
mov
jo
pushf
xor
ss
inc
cmp
add
pop
testl
cmc
lret
pop
enter
ljmp
les
dec
xchg
xor
jb
outsl
in
and
xchg
sub
adc
negb
add
push
subb
repz
outsl
cwtl
cli
les
mov
inc
cmc
inc
sti
ja
aam
lret
push
pop
or
push
loopne
xlat
fwait
pop
add
mov
dec
les
jg
xchg
and
sbb
orb
xlat
push
pop
sub
shlb
pushf
mov
mov
cs
repz
aad
and
nop
push
sahf
inc
dec
sub
in
cmpsb
lods
into
je
call
rol
mov
popa
lea
test
lahf
pop
push
dec
fstpt
cmpsb
push
rcr
mov
out
pop
jbe
inc
jae
call
aas
push
adc
insl
xchg
mov
fildll
pop
mulb
cltd
std
jnp
std
cwtl
push
inc
mov
push
jge
dec
notb
cld
adc
xor
mov
sub
xor
das
jge
scas
mov
aam
ret
aas
ret
xchg
dec
es
inc
insl
cwtl
popa
rorb
mov
xor
push
popa
inc
in
lods
add
add
mov
insb
mov
dec
pop
lods
data16
stc
xlat
cltd
out
push
test
mov
push
test
je
rcr
cwtl
adc
clc
jo
mov
ljmp
mov
stos
rolb
out
push
nop
lahf
xchg
push
xor
fisubs
psraw
add
test
or
in
mov
stos
mov
jge
hlt
test
loope
xchg
and
jbe
or
out
iret
fwait
popa
pop
inc
push
loope
outsl
add
jge
in
sbb
xor
jns
add
in
jns
xchg
add
sbb
mov
loopne
ret
dec
and
sbb
rorb
dec
gs
jne
mov
mov
mov
repz
fildl
adc
sbbl
out
cli
dec
sub
jbe
jp
les
jp
shrb
std
mov
dec
jle
mov
loope
push
repz
mov
xchg
inc
fwait
pushf
pop
jae
dec
dec
push
add
mov
push
cmpsb
inc
cli
stos
dec
bound
push
mov
imul
push
xor
jb
fcomp
hlt
ret
or
loope
das
hlt
mov
imul
dec
and
pop
jge
inc
or
insb
fisubrl
add
or
dec
in
fisubrs
movsl
xchg
shlb
iret
repnz
hlt
push
cmp
ficoms
and
repz
idivl
int
dec
in
mov
scas
clc
jno
divb
or
cmp
or
jl
push
pop
dec
mov
sbb
incb
or
fildll
pop
and
repz
pop
lret
arpl
stc
inc
pop
jecxz
cmpsb
jae
arpl
mov
add
sub
loope
aad
sub
mov
cmp
pop
cmpsb
ds
aad
movsl
out
add
push
adc
push
arpl
loop
mov
mov
aad
ret
divb
push
pop
notb
push
or
push
lock
ret
fcompl
mov
xor
mov
mov
lret
rorb
push
out
inc
push
lods
add
int
inc
cmp
sbb
or
int3
jb
lcall
jp
int
jb
jns
push
sahf
mov
int3
test
adc
jg
or
stc
fsub
fisubs
add
sub
negb
cmp
mov
add
xor
int3
decb
out
and
xchg
mov
xor
outsl
les
loop
xor
imul
dec
xchg
add
xchg
cltd
lods
gs
mov
inc
aam
inc
cltd
scas
cli
notl
das
in
mov
ja
add
out
cmc
xchg
adc
mov
pop
and
loop
js
sbb
mov
popa
les
mov
xor
push
jle
cmp
push
lods
sub
cli
or
cmpsb
mov
sti
and
nop
jmp
sub
inc
jge
dec
sbb
and
jecxz
in
std
mov
stos
push
xchg
sti
pop
pop
push
cmpl
and
inc
cli
pop
popl
arpl
mov
fldcw
and
fs
rcrl
adc
std
and
cwtl
or
addr16
stc
pop
mov
leave
imul
inc
scas
mov
mov
arpl
mov
das
pop
lods
fsubs
aam
sub
int3
test
dec
es
dec
jp
xchg
test
cmpsl
arpl
mov
pop
push
lds
adc
xlat
lds
jae
repz
int3
jnp
ror
cmpsl
nop
cltd
and
pop
jle
lock
aaa
inc
push
fnstsw
in
call
inc
ljmp
outsb
mov
mov
add
insl
xor
inc
xchg
jae
and
push
or
out
repz
xor
xchg
pop
xchg
test
out
xchg
icebp
and
inc
add
or
or
fwait
nop
push
dec
push
test
push
add
cwtl
daa
idiv
mov
add
scas
out
jns
jne
in
pop
sbb
xchg
jno
mov
fwait
sub
sbb
mov
xor
jmp
mov
dec
clc
mov
push
inc
mov
xchg
out
xor
add
jmp
lahf
adc
out
mov
sub
jno
inc
addr16
aas
push
and
aad
jle
dec
jle
add
xor
add
movsl
xchg
popa
pusha
test
inc
cmpsb
mov
jae
mov
push
enter
test
xchg
cwtl
push
in
push
stos
mov
sbb
xchg
dec
fisubrs
ja
out
push
mov
iret
aaa
jl
ret
xor
hlt
add
push
inc
push
push
or
fsubs
inc
mov
pop
xor
or
push
pop
jl
add
dec
lret
cmp
sbb
mov
jecxz
movsl
cmp
rolb
sub
jbe
aaa
and
sbb
mov
mov
or
jno
sub
dec
and
push
loope
cltd
xor
cmp
and
mov
mov
rolb
add
jb
hlt
enter
daa
arpl
push
cmp
xor
loope
nop
das
sub
lcall
imul
and
inc
test
ss
or
rcll
or
jecxz
cwtl
std
mov
js
rclb
xchg
out
push
bound
faddl
subl
test
adc
insl
cmp
outsl
movsb
loop
sub
insb
push
mov
cmp
pop
loop
push
scas
jnp
int
rorl
dec
pop
dec
push
setp
movsb
mov
xchg
sbb
aas
outsb
andb
pop
mov
packssdw
lods
stos
fs
fists
jp
inc
cmp
lods
fdivrs
fdivp
test
push
lret
xorl
mov
cmp
data16
pop
add
into
mov
lea
icebp
push
and
sbb
loop
jo
imul
out
loopne
xor
xlat
data16
ffree
lods
dec
cli
xchg
mov
and
inc
inc
cmp
sub
mov
sbb
push
xchg
adc
movsl
sbb
pop
inc
push
out
adc
xchg
fldz
inc
inc
les
or
sbb
clc
pusha
stos
xlat
test
lock
in
cmp
clc
cld
jmp
pop
sbb
pop
inc
jecxz
lcall
dec
out
pop
inc
adc
dec
xchg
add
push
outsb
popl
adc
call
dec
aam
pop
jns
inc
adc
loopne
adc
pop
inc
sbbl
aas
mov
xchg
cmc
jno
shr
cmp
imul
stc
push
std
leave
xchg
cwtl
stc
lret
call
repz
imul
fcoms
rorb
lret
and
out
jnp
cmp
add
lret
push
stc
ret
mov
scas
es
sbb
dec
lret
jae
out
out
mov
outsl
pop
xchg
lods
fdivrs
xor
cli
fstl
jp
frstor
jmp
pop
rcrb
cli
testb
pop
push
cli
lret
fucom
clc
jne
out
arpl
mov
fwait
shll
jg
sbb
stos
scas
xchg
out
push
fildl
push
pop
adc
setg
lahf
or
aad
mov
mov
enter
mov
aam
js
mov
out
lcall
fwait
mov
bound
add
dec
call
outsl
xor
les
in
ljmp
fidivl
mov
push
pop
sub
dec
or
mov
imul
push
ret
xchg
pop
push
dec
sub
cs
lcall
add
cmpsb
jmp
push
sub
out
lea
or
addr16
jp
sbb
insb
sarl
sub
pop
pmulhw
pop
xor
sahf
out
outsl
mov
add
or
test
sbb
popf
rclb
ja
and
jge
xor
xchg
call
xor
imul
xchg
push
mov
fdivr
iret
xchg
push
int3
ret
mov
iret
lahf
sub
dec
pop
sbb
repnz
inc
adc
pop
or
push
out
inc
or
fcmovbe
lock
mov
sub
fsubrp
fstpl
les
mov
ss
adc
cmp
add
pop
lret
pop
jge
cmp
and
je
lea
sub
jno
jo
jl
hlt
outsb
dec
nop
mov
lcall
scas
xor
push
or
test
jge
filds
jl
cmpsb
jns
fwait
in
pop
cmp
daa
bound
cmp
imul
sub
pop
jp
cmp
mov
dec
and
ficompl
or
lock
leave
data16
inc
fwait
xor
int
pop
cli
rcrb
aam
and
push
sahf
sti
mov
out
popa
and
cmpsb
adc
outsb
dec
cmpsb
adc
dec
jmp
or
dec
and
push
and
sbb
push
mov
cmpsl
int
push
sbb
adc
mov
lcall
call
sbb
mov
sahf
clc
call
fiaddl
cmpsb
cmp
mov
add
inc
fs
mov
ss
cmp
xor
testl
jmp
push
xlat
pop
cmp
sarl
int3
movsl
int3
into
pushf
adc
cmc
rol
xor
outsl
andb
loop
loop
imul
out
add
pop
shll
das
lods
xor
out
jns
cli
pop
mov
jns
mov
add
xor
shll
fsub
imul
pop
bound
adc
js
fldenv
cwtl
mov
cli
mov
xchg
insb
xor
cmp
call
clc
sub
or
adc
pushf
jmp
fcmovb
rcrl
loope
mov
lahf
negl
dec
inc
jno
inc
and
and
stc
jecxz
mov
pop
lea
in
call
leave
xchg
ret
pop
sub
xchg
mov
std
mov
inc
inc
xor
or
inc
out
add
cs
add
pop
cmc
and
shl
sarl
dec
imulb
and
push
pop
add
and
ret
pop
clc
lret
inc
and
out
mov
je
lock
jnp
das
sbb
std
sub
fsubp
aam
jae
ret
inc
lods
arpl
cmp
dec
into
jg
mov
sbb
xchg
or
loope
mov
andl
pusha
shlb
stos
cltd
xchg
ret
cltd
jecxz
mov
mov
cmp
or
mov
xchg
rep
aaa
ljmp
push
pop
les
and
xchg
shrl
push
ss
lcall
mov
or
iret
dec
mov
mov
popa
dec
mov
lret
test
scas
cmp
cmp
cmpsl
or
mov
jmp
add
into
xor
xor
jns
dec
xor
xchg
lock
mov
out
das
mov
adc
inc
dec
decb
add
mov
loope
dec
push
push
adc
icebp
jecxz
bound
sete
xor
out
add
sub
addr16
shll
lahf
and
insb
sbb
faddl
and
in
pusha
cmp
fcomip
adcl
inc
scas
mov
mov
out
push
dec
xchg
mov
notl
adc
stos
movsb
inc
add
cmovae
jns
out
jb
push
push
add
sbb
iret
cmc
les
leave
inc
xchg
inc
hlt
xchg
push
arpl
mov
inc
adc
repnz
into
clc
mov
fiaddl
push
mov
pop
fisubrl
push
ficoms
mov
pop
mov
mov
movsb
lds
aaa
jbe
out
cmp
mov
hlt
aaa
xor
dec
or
mov
jno
add
lcall
xchg
lock
adc
or
and
mov
push
dec
pop
pop
inc
or
cmp
inc
fnstsw
daa
popa
sbb
mov
xchg
jb
sub
jmp
xor
scas
mov
and
popa
les
fsubrl
rolb
pop
mov
push
adc
js
jle
pop
adc
ss
test
push
cmc
or
fcompl
pop
xor
mov
adc
and
xor
les
jnp
and
int
int
pop
adc
pop
dec
xchg
mov
sarl
mov
dec
sbb
lcall
dec
out
sbbb
jg
faddl
das
lret
stc
std
and
xchg
adc
mov
aas
cmp
out
pop
pop
testl
lds
cmp
adc
or
or
aaa
cmc
xchg
xor
sub
imul
xor
mov
cmp
push
mov
in
repz
das
jbe
nop
mov
mov
repz
sar
xor
push
arpl
gs
loopne,pn
shlb
pop
adc
pop
and
repz
cmpsb
out
xchg
das
adc
sbb
outsb
add
xlat
add
pop
in
adc
push
cmp
sbb
and
out
aad
out
cmp
movsl
sbb
cmp
dec
sub
je
shll
xchg
push
scas
fucomip
push
call
dec
fistps
addl
insb
or
pop
in
roll
mov
add
aas
int
xor
adc
dec
xchg
dec
and
mov
imulb
mov
cwtl
cmp
push
push
mov
loope
cmp
xchg
or
std
push
mov
sub
popf
mov
xor
mov
push
jne
rolb
fwait
insl
xor
stos
dec
adcl
mov
popf
popa
xchg
lods
scas
popa
js
mov
ljmp
dec
push
fcomps
sub
and
inc
movsl
insl
cltd
lret
test
push
push
sbbb
xor
mov
xchg
xor
push
ljmp
mov
outsl
fstpt
stos
mov
dec
out
fdiv
rcll
adc
and
pop
xor
xor
sbb
mov
mov
jge
sbb
inc
test
outsl
lcall
lea
or
dec
addr16
sbb
jmp
add
jmp
int
xor
stos
clc
in
stos
xchg
xchg
aas
fidivrl
fisubrl
loope
gs
int3
stos
mov
dec
icebp
imul
jb
repnz
icebp
or
pop
mov
loopne
out
shr
jmp
dec
adc
pusha
xchg
xchg
add
xchg
pop
jns
jle
je
mov
xchg
or
pushf
rcrb
jp
inc
insb
and
mov
jnp
mov
dec
in
sar
pusha
aam
rcr
and
js
lcall
clc
and
adc
aaa
mov
mov
hlt
int3
xchg
xchg
stos
insb
sbb
sub
push
and
test
iret
push
outsl
mov
shrl
hlt
loope
cwtl
arpl
movsl
pop
inc
pop
jl
or
dec
lahf
flds
rcrb
add
push
inc
pop
or
pop
and
setl
mov
faddl
add
cmpsl
sub
mov
mov
xchg
negl
jmp
cmp
fildll
or
push
call
jl
loopne
dec
outsb
push
stos
push
mov
xor
dec
incl
scas
call
out
pop
test
adc
inc
lcall
in
daa
pushfw
enter
daa
pusha
jbe
cmp
cltd
adc
cmp
add
and
fwait
mov
lahf
cmp
push
scas
cmpsl
rcrb
mov
inc
xor
sbb
loope
repnz
dec
sbb
cli
or
push
and
push
dec
cmp
sub
mov
mov
jle
mov
dec
andb
mov
orb
xchg
mov
addl
dec
test
pop
enter
lds
orb
and
aam
or
jbe
jbe
in
inc
mov
mov
push
lock
adc
xchg
add
cmp
test
push
sbb
push
shll
fimuls
or
pop
push
cmc
dec
fs
add
adc
jo
or
jg
adc
xlat
mov
data16
add
and
out
imul
mov
pop
jno
sti
loop
mov
gs
ret
mov
dec
psubusw
ret
cwtl
fisubrl
repnz
or
test
pushw
sub
jo
adc
cmc
pushf
packssdw
jmp
sbb
add
outsl
fwait
out
nop
push
xchg
lock
add
jo
dec
mov
push
repz
pop
rol
test
call
cmpsl
fstps
fidivrs
dec
xchg
popa
pop
xchg
and
mov
inc
sbb
popa
mov
jle
mov
xchg
xchg
icebp
rcr
add
and
mov
loop
mov
int3
lret
sbb
add
lret
and
loop
mov
inc
and
clc
filds
mov
mov
pusha
aam
mov
popa
lcall
sbb
fmull
sbb
cmpsl
pop
mov
mov
mov
movsl
lods
sbb
sarl
sub
mov
dec
clc
dec
rcrb
mov
cltd
add
cmp
scas
mov
mov
add
fstpl
xchg
clc
xchg
lds
xchg
jno
cmpsb
ljmp
subps
loopne
stos
jnp
push
out
aas
icebp
fsts
in
jo
bsf
in
add
xchg
negl
xor
mov
rolb
orb
xchg
xchg
sbb
inc
cltd
or
mov
fwait
dec
faddp
push
adc
sub
add
mov
xor
nop
xchg
jns
mov
in
mov
xchg
mov
mov
cmp
mov
cmpsb
ja
jo
dec
in
inc
mov
testl
dec
aam
pushl
lret
das
and
out
scas
sti
or
rorl
int
xchg
xchg
lret
inc
addb
push
sub
pop
push
pop
jp
push
subb
jnp
roll
adc
pusha
outsl
and
fildll
dec
rcll
scas
jl
inc
shlb
jae
dec
ljmp
dec
imul
mov
xchg
in
jbe
sbb
loop
imul
scas
cmp
add
xchg
pop
sbb
iret
mov
test
xlat
hlt
sub
cmp
xlat
mov
or
fldcw
popa
push
add
int3
mov
pop
cmp
push
fcom
cwtl
lds
mov
sub
and
das
xchg
cmp
cld
movsb
fistl
daa
jbe
je
jge
or
push
or
aaa
mov
sub
add
xorb
cmp
mov
shll
insl
insb
loop
test
stos
scas
cs
test
faddp
das
inc
sub
cmp
add
in
push
sarl
daa
pop
push
loope
lret
loope
in
sub
mov
cmp
sub
cmc
jae
movsl
adc
jnp
ss
pop
lahf
push
in
in
adc
sbb
and
movsb
hlt
imul
inc
js
daa
jmp
xchg
test
inc
js
push
mov
xor
sub
xchg
outsb
jno
mov
fldenv
jmp
inc
cmpb
mov
insl
loopne
inc
push
outsl
push
mov
mov
addl
lcall
mov
sbb
sahf
loope
dec
test
test
xchg
xchg
jg
daa
out
movsb
and
xor
fidivrs
adc
repz
fs
pop
lret
nop
xor
cwtl
test
sub
into
inc
lock
adc
or
pop
inc
sub
add
imul
int
add
imul
fldt
fidivl
out
daa
cli
idiv
cmpsb
mov
leave
lahf
ret
sti
xchg
dec
popf
lds
gs
fwait
loopne
leave
pop
mov
push
fcmovnu
lret
xlat
aad
repz
mov
sbb
in
adc
xor
sub
adc
mov
into
in
cs
nop
xor
out
inc
pop
pop
inc
dec
jo
jb
sarb
cmpsb
fwait
sub
lea
mov
inc
idivb
xorl
sub
fcmovne
add
dec
inc
popf
inc
inc
inc
cmp
xchg
aas
or
jb
sbb
and
lock
shrl
es
div
push
dec
std
gs
dec
cwtl
mov
aad
nop
lret
push
mov
jae
icebp
jmp
or
pop
xchg
cli
and
out
das
lock
xor
fdivs
sub
pop
xor
lock
es
jmp
insl
add
test
scas
cmpsl
pop
push
cmp
popa
lret
imull
mov
xchg
pop
and
adc
pop
addr16
shr
cld
dec
cltd
cmp
cmp
mov
push
mov
fldl
sub
mov
ror
inc
fcomps
dec
stos
push
xchg
out
mov
inc
pop
push
arpl
bndstx
add
scas
xor
mov
mov
mov
or
test
scas
xacquire
fwait
inc
inc
mulb
jmp
push
mov
or
pop
pop
sti
call
sbb
xor
mov
in
mov
in
mov
push
fnstsw
inc
dec
ljmp
cmp
mov
ret
mov
rorb
xor
out
mov
out
mov
vpinsrw
xchg
mov
push
out
and
sub
pop
add
xchg
mov
adc
and
out
jnp
xchg
scas
ss
aaa
xlat
mov
fisttps
pop
xchg
xorb
out
pop
inc
fstpl
lods
jae
out
push
xchg
inc
es
insb
jbe
mov
and
stos
std
je
xchg
inc
addr16
sbb
jo
imul
scas
fwait
or
ficompl
adc
shrb
ret
sbb
stos
inc
xor
ja
pop
arpl
dec
inc
sbb
inc
push
push
push
outsl
pop
ficompl
cltd
pop
int3
je
rcrl
pop
sbb
jnp
or
loopne
imul
stos
scas
mov
addb
adc
sahf
add
iret
mov
data16
cmp
jg
jo
aaa
or
add
jl
sbb
dec
dec
adc
push
push
ja
xor
add
cmp
push
mov
or
test
fdivp
cmpsb
test
dec
in
cmc
and
daa
pop
mov
cmp
inc
cmp
push
jnp
mov
cmpsb
cmp
sbb
shlb
rcrl
loope
jbe
rclb
xor
sbb
or
inc
xchg
aas
xor
sub
pop
xchg
add
mov
shl
sbb
jg
push
cli
or
sub
ja
aam
mov
shlb
or
sub
mov
lea
push
popf
push
push
mov
jl
sub
cmp
lcall
leave
mov
mov
sahf
test
faddl
and
push
mov
out
stc
and
xchg
push
ss
add
pop
xchg
hlt
idivl
xchg
test
xor
iret
dec
or
js
cmc
fcoml
aad
push
int
xchg
mov
imul
push
loope
cld
add
data16
sbb
mov
cmp
out
imul
in
xor
dec
sti
inc
jae
inc
fs
cmp
fistps
or
flds
inc
out
loop
ss
xchg
js
lods
sbb
pop
int
xlat
mov
movsl
xor
lock
or
jno
cs
cmp
aad
and
ret
inc
jno
ja
out
test
cmp
mov
add
adc
xchg
call
pop
clc
stc
jb
sbb
dec
push
adc
in
pop
int
nop
inc
and
mov
ficoml
aas
stos
xorl
loop
jo
inc
and
mov
jle
cmp
std
or
sbbb
dec
fisttpl
ret
cld
inc
lock
add
push
mov
mov
scas
mov
aad
xchg
in
push
mov
sahf
push
and
ret
jg
cmp
inc
push
jmp
fidivl
mov
loop
adc
stos
mov
test
dec
inc
mov
xchg
sarb
dec
adc
push
pop
push
leave
xchg
sub
out
pop
push
ljmp
jl
jo
pop
stos
pop
pop
popf
out
add
dec
mov
push
cwtl
clc
add
lock
xor
cld
enter
pop
xchg
call
dec
xchg
xor
inc
lea
pop
or
pop
sbbl
cmpsb
sbb
out
pushl
pushl
mov
movsl
push
cs
outsb
xchg
sub
push
mov
push
outsb
mov
std
sti
ss
xor
lret
mov
mov
mov
mov
mov
jne
pop
add
in
inc
out
insl
and
loopne
jo
mov
addl
out
imul
push
hlt
push
addr16
lret
loope
enter
ljmp
jle
dec
insl
in
lock
pusha
movsl
push
js
insl
and
pop
sbb
das
xor
lds
pop
mov
inc
mov
pop
rorl
jo
scas
xchg
fwait
jnp
sbb
roll
imul
lea
add
adc
xchg
jno
aam
cli
cmp
leave
and
fdiv
ret
arpl
mov
repnz
test
push
add
test
pop
xchg
lahf
push
push
mov
shlb
mov
aad
pop
cmp
mov
hlt
push
and
jbe
lret
inc
jge
sahf
adc
int3
push
add
das
add
out
add
scas
in
jl
js
dec
mov
jbe
xor
pop
push
ljmp
dec
cld
test
je
mov
cmpsb
or
pusha
in
fcompl
enter
daa
pop
cltd
sti
cmp
cli
in
loope
out
sub
ja
cmp
and
insb
xchg
lahf
xchg
inc
cld
push
sub
dec
sbb
mov
add
stc
adc
mov
mov
pop
mov
pop
xchg
pop
por
sub
cmpsb
mov
inc
mov
outsb
aaa
jno
adc
jne
vprotq
mov
add
and
addr16
shl
int
dec
jne
jns
lahf
pop
inc
push
cmpsb
lcall
and
sbb
into
data16
daa
dec
int3
test
pop
add
push
jg
add
dec
loope
stc
fxch
mov
adc
ss
data16
fimull
ljmp
js
cmp
popa
ud2
notl
into
or
mov
xor
outsl
loop
es
imul
xchg
andl
mov
mov
xchg
cmp
lods
cli
pop
adc
mov
lahf
js
sti
out
pop
outsb
jecxz
andb
popf
loopne
or
pop
std
jp
adc
cltd
rol
testl
cmp
xor
pop
cmp
xlat
pushf
je
sub
adc
inc
pushf
adc
jmp
rcll
mov
scas
aad
sti
je
out
pop
dec
and
mov
dec
pop
push
jmp
mov
mov
scas
movl
sbbl
fldt
push
adc
nop
cld
inc
outsb
mov
jb
negl
mov
aaa
cmpsl
cmpsl
rol
xor
std
mov
or
push
push
push
mov
cmp
adc
insl
mov
lret
jb
mov
mov
jmp
xor
jne
push
mov
xchg
enter
sub
es
insl
shrb
push
pop
sbb
lret
popa
stc
sbb
push
mov
movsb
in
enter
xor
rclb
inc
das
test
jmp
mov
push
inc
fst
or
dec
mov
pusha
ljmp
insl
pop
sbb
add
push
rcll
test
psubusw
sbb
test
scas
nop
xor
cltd
clc
mov
ret
dec
mov
aad
mov
add
mov
shll
fsts
int
sub
xor
adc
hlt
xor
mov
push
xchg
jnp
loopne
insb
adc
mov
mov
pop
loop
mov
and
sbb
add
jge
test
mov
mov
bound
cmp
mov
jmp
sub
and
out
xor
dec
sbb
addr16
or
fists
push
xchg
in
inc
pop
outsl
jle
pop
pop
in
insl
out
pusha
inc
or
mov
xchg
es
jmp
jae
out
push
sbb
jle
mov
sahf
cltd
mov
jecxz
jo
repnz
sbb
pop
fldt
xchg
jle
popa
mov
xor
push
outsl
in
iret
rolb
ret
sub
hlt
or
add
add
xor
sbb
fiaddl
loope
sub
int3
dec
loopne
pop
lds
cltd
sarb
mov
sub
cmp
test
shll
movsb
xchg
sub
out
dec
sub
fiaddl
lods
jl
test
testl
fyl2x
inc
jo
nop
loopne
fs
and
and
aas
loop
inc
cmpsl
jmp
ret
jno
enter
daa
pop
add
cmp
loopne
add
push
sub
sub
cmp
inc
ds
jbe
movsl
daa
les
pop
add
lahf
mov
pop
push
sti
mov
add
mov
xor
das
stos
pop
in
xchg
stc
mov
push
stos
pop
push
test
aad
lock
sub
dec
outsb
lcall
shrb
test
mov
scas
mov
in
cmpsl
mov
lret
and
push
push
les
fldt
hlt
pop
out
into
popa
lcall
cmp
and
test
lret
test
jmp
and
jge
pusha
ss
popf
movups
nop
or
fs
sub
mov
pop
jg
roll
jmp
mov
fcmovne
xor
cs
sbb
data16
cmc
push
pushf
xor
clc
outsl
mov
iret
lods
imul
insb
cmpsl
data16
xchg
lods
popf
ret
fimuls
cmp
cli
lods
pop
mov
or
cli
sti
sahf
push
mov
gs
mov
loopne
dec
lcall
out
sub
adc
fldcw
ja
clc
push
std
repz
sbb
dec
iret
jo
xchg
aaa
adc
cmp
stos
adcb
pop
loope
mov
aad
cs
pop
aad
cmp
nop
rol
dec
sbbb
dec
aad
and
jecxz
jge
movsb
fdiv
loop
pop
call
ret
stc
out
pop
pop
in
xor
jge
fistpl
pop
adc
incb
dec
movsb
aas
call
xor
mov
ret
rcll
pop
shl
mov
mov
and
shll
cmc
cld
cwtl
push
icebp
lret
loope
repz
fdivp
mov
xchg
mov
fs
cs
push
and
sub
iret
ret
popf
movsb
stc
es
xchg
insl
mov
popf
dec
push
cmp
cld
lahf
adc
xlat
lods
lds
addr16
out
ss
and
push
test
pop
les
cltd
fucom
push
test
dec
les
dec
lahf
sub
clc
sbb
xchg
insl
push
lret
test
rcl
push
sbb
lock
aaa
mov
jne
jge
and
in
mov
adc
out
mov
lds
shrl
add
sbb
repz
mov
cmpsl
lret
stos
dec
push
pushf
jo
add
jo
mov
scas
mov
xor
pop
jns
sub
xchg
lret
mov
inc
xor
and
les
adc
ja
mov
repnz
incb
inc
or
mov
xchg
jno
dec
jge
mov
out
or
sub
bound
cwtl
pop
jmp
idivl
lret
push
pop
sub
dec
rcrb
jp
std
jb
mulb
insb
shlb
jnp
outsl
es
pop
xchg
in
dec
in
pusha
fcmovnbe
je
stos
or
stc
negl
leave
pop
inc
decb
jae
dec
jle
loopne
negb
mov
ljmp
cld
out
dec
adc
imul
int3
scas
les
cwtl
adc
and
iret
das
pushl
leave
adc
arpl
std
inc
es
les
mov
jle
cmpl
add
jno
int3
xor
outsl
popf
fisubs
lds
pop
rclb
in
bnd
mov
movsb
pop
lods
scas
push
mov
icebp
cmp
push
movsb
aaa
lods
push
cmc
or
int
jno
inc
push
jl
lods
pop
dec
cltd
jae
push
stc
dec
ljmp
daa
push
scas
inc
repz
and
cmp
test
or
sub
push
mov
pop
enter
daa
pop
out
cmp
xchg
xchg
sbb
sub
mov
cmp
and
xorl
lahf
shll
or
jns
ljmp
sar
mov
movsl
pop
or
call
pop
lea
push
into
add
dec
push
fwait
xor
sub
dec
pop
outsb
std
pop
push
adc
inc
shll
addr16
movsb
add
ret
and
mov
jecxz
and
les
mov
or
outsl
int
pop
inc
int3
adc
inc
mov
roll
jg
adc
and
sahf
insl
dec
in
ja
arpl
in
pop
mov
jno
stc
inc
repz
or
adc
bnd
ss
dec
cmp
push
cmp
jl
bswap
sub
in
cmp
lcall
aad
xor
rol
push
cmc
xor
leave
decl
outsl
fwait
stos
jo
dec
lods
in
movsl
inc
lcall
xchg
jns
lods
test
sbb
cmp
cli
ret
mov
jne
jp
dec
sbbb
push
inc
mov
test
push
adc
icebp
jecxz
cmpsb
sub
add
repz
fdivl
cmp
lret
jl
outsl
sub
mov
dec
pushf
gs
jmp
lods
outsl
jbe,pn
aad
fstps
pushf
test
fistps
inc
stos
mov
dec
dec
call
jecxz
popa
xor
cmpsl
push
add
dec
mov
movl
loop
mov
dec
fisttpl
rclb
inc
movsb
and
aas
xchg
jb
mov
jmp
dec
scas
dec
shll
dec
testb
in
add
mov
mov
out
out
xlat
add
inc
mov
cld
ret
mov
lods
mov
mov
cmp
xor
aam
mov
aam
mov
sub
ss
insl
sahf
mov
into
cmpsl
pop
mull
popa
daa
aam
lods
xor
inc
mov
mov
and
jecxz
sbb
aaa
sbb
cltd
adc
pop
test
pop
mov
push
adc
dec
fstpl
xor
xchg
lods
xchg
test
dec
addl
sub
pop
jno
fsubrs
cs
push
xor
sub
xchg
push
inc
add
dec
push
or
mov
xor
cmp
enter
sbb
test
sbb
xchg
es
push
xchg
orl
fstpl
aas
xchg
cmp
add
jmp
xor
fs
in
into
xor
repnz
mov
xorb
fdivl
fimull
push
cmpsb
mov
pop
cmp
testl
adc
xchg
xor
or
bound
out
xchg
ret
xor
inc
out
stc
sub
inc
sbb
addr16
movsb
pop
and
nop
xchg
jnp
inc
in
jle
push
cmp
push
xchg
pop
pusha
jbe
nop
add
xchg
int3
leave
mov
ret
inc
or
jae
imull
push
mov
pop
push
mov
sbb
std
stos
leave
out
xchg
mov
out
sbb
inc
cmp
testb
or
mov
mov
leave
ret
push
leave
xchg
repnz
mov
int
inc
sub
xor
push
add
fisubrl
sbb
pop
lods
jb
and
out
pop
and
popa
fiadds
lret
dec
mov
mov
pop
mov
into
sub
push
movsb
xchg
add
push
or
mov
jge
and
aaa
insb
mov
ror
jno
cmpsl
jl
test
or
and
fsubrl
mov
insl
shr
scas
and
cld
and
sahf
jge
aad
movb
mov
xchg
cmp
in
xchg
dec
inc
enter
daa
pop
pusha
inc
cmp
pop
inc
loope
js
sub
adc
movsb
out
movsl
xor
cmp
mov
mov
insb
and
xor
jl
jae
mov
js
push
pop
int3
loop
push
movsl
push
push
push
push
jecxz
inc
movl
outsb
pusha
rorl
adc
shlb
and
pop
jb
sbb
mov
push
push
and
xor
int
sbb
ljmp
lcall
pop
mov
jmp
sbb
cmp
adc
push
sbbb
inc
jg
test
xlat
stc
jge
fs
setno
inc
pusha
inc
ss
movsl
mov
pop
test
fmuls
in
jecxz
cmp
lret
pushl
or
cmp
or
or
into
mov
int
clc
pushf
jp
and
mov
jp
lods
loop
mov
rclb
push
add
out
data16
inc
lods
imul
out
cltd
xchg
cmc
sti
add
loopne
lods
sti
cld
mov
stos
gs
cmp
pop
pop
jecxz
adc
push
les
and
xchg
test
push
sbb
or
and
mov
jg
adc
pushf
adc
test
fstps
aad
fisttps
ja
push
dec
ds
inc
mov
inc
push
je
mov
icebp
mov
stos
inc
fisttps
call
cmp
pop
les
push
dec
push
addl
pop
add
inc
inc
out
jnp
mov
adc
mov
fsubrs
repnz
test
rcrb
dec
sbb
icebp
push
daa
mov
lret
mov
xchg
mov
lock
iret
das
adc
mov
jp
adc
mov
mov
insl
test
dec
pusha
dec
fsubl
bound
popa
ds
lods
fwait
icebp
sbb
mov
mov
out
fs
add
outsb
rorb
pushaw
cltd
dec
adc
test
adc
push
aad
cli
fldl
clc
stc
loop
xchg
jmp
jg
mov
push
imul
or
push
push
dec
jnp
notb
les
rol
xor
imul
dec
ljmp
xchg
pusha
scas
sbb
mov
or
xchg
and
loop
push
add
cmpsb
test
in
sub
xor
cmpsb
push
jns
inc
or
pop
movsl
rcll
add
jmp
ljmp
je
jge
cltd
and
mov
or
jne
cs
mov
dec
out
jmp
mov
insl
xchg
repnz
cmpl
out
adc
sub
aas
cld
mov
jp
add
and
aaa
insb
xchg
int3
pop
jnp
fbstp
in
cmp
pusha
adc
dec
xchg
lahf
mov
mov
adc
leave
jae
in
push
sbb
popf
das
mov
push
push
pop
cmp
xchg
divl
sbb
mov
mov
mov
sub
xchg
iret
in
xchg
ret
inc
leave
ds
hlt
out
lods
lds
xchg
pop
inc
sub
xchg
cmpsb
pop
pusha
inc
cmpl
add
or
int3
or
insl
pop
push
push
sbb
jb
lds
sub
cmc
mov
repnz
test
test
andb
sbb
jge
sar
mov
cmp
or
xor
dec
ja
and
mov
mov
jo
pusha
scas
add
cli
test
mov
roll
in
js
add
daa
pop
push
and
cld
loop
loope
fwait
lahf
sub
inc
cmp
ds
or
movsl
cmp
sub
fsubr
mov
je
into
sbb
ja
xchg
xor
jp
ss
pop
pop
in
js
add
push
xor
fdiv
sub
xor
outsb
adcb
subb
mov
out
mov
mov
adc
add
int
jnp
sub
faddl
inc
push
and
xor
inc
mov
aaa
xchg
sbb
lret
and
test
les
jg
imul
stc
mov
inc
and
fnsave
xlat
imul
cmp
xor
dec
lret
lods
xor
out
cmp
in
lds
mov
imul
mov
jb
outsl
pop
imull
loop
add
imul
mov
push
test
lods
push
push
mov
mov
outsl
cmp
sub
pushf
in
dec
sbb
stos
mov
outsl
int3
cwtl
gs
xchg
loopne
xchg
jns
fistl
mov
sub
sbb
repz
mov
xchg
inc
push
sbb
inc
lods
js
cli
sbb
mov
mov
enter
test
dec
aad
dec
je
push
cmp
dec
popf
in
in
inc
rclb
orl
fnstenv
xlat
jecxz
div
lods
mov
and
movl
icebp
cmpl
ret
cld
and
xlat
inc
fimull
jge
dec
sbb
and
add
stos
testb
repz
adc
cwtl
orb
rorl
pop
mov
mov
call
shrl
icebp
xchg
sbb
jno
mov
ret
dec
mov
es
ss
pushf
dec
pop
pop
adc
xchg
sub
popa
push
sbb
push
or
scas
mov
shlb
xor
insb
mov
cltd
andb
mov
push
js
cwtl
pushf
or
insb
call
out
xchg
sub
rcr
cmpsl
jmp
stos
add
and
hlt
sbbb
push
jb
push
jmp
fists
or
adc
mov
into
sbbb
mov
inc
xchg
mov
mov
pop
int
fwait
xchg
mov
add
ror
decl
sarl
inc
in
iret
icebp
xchg
mov
inc
mov
mov
sbb
pop
movsb
adc
pop
and
dec
mov
jp
les
mov
add
push
jne
sbb
jnp
enter
mov
mov
xchg
pop
or
xchg
pushf
mov
cmp
addr16
and
jne
insb
add
data16
cmp
movsl
in
dec
mov
lods
lods
jae
or
leave
pop
xor
inc
pop
jno
jae
push
jnp
sub
xor
mov
lcall
xchg
dec
std
jbe
adc
lods
imul
sub
test
add
shlb
ret
insb
leave
jne
xlat
hlt
cmp
mov
or
and
and
rolb
fmul
notb
icebp
fimuls
mov
shl
sub
je
dec
cmp
add
icebp
mov
jge
inc
mov
jae
repnz
ljmp
jno
fdivrl
scas
mov
dec
out
add
mov
mov
pop
scas
loopne
test
les
rclb
push
inc
adc
cmpsb
xchg
cltd
jl
pop
mov
popa
daa
pop
into
lret
cmp
pop
loope
pusha
loop
sub
dec
pop
cmp
adcl
ljmp
and
mov
push
inc
mov
sbb
movsb
push
xor
call
js
sub
pop
dec
jno
push
jo
push
add
inc
fcompl
pop
outsb
adc
adc
cmc
std
popl
imul
sub
and
int
ror
loopne
flds
rcr
lcall
test
sbb
jnp
test
std
orb
jg
sub
mov
shl
stc
insb
jg
fs
fs
sbb
cmp
idivl
sti
push
xor
mov
repnz
jp
jno
xchg
xor
dec
xchg
and
loop
jle
imul
jb
data16
mov
cmp
xor
out
leave
mov
pop
sbb
and
mov
out
pop
jne
xchg
and
gs
imul
cwtl
out
adc
mov
and
mov
xchg
or
sbb
cmp
shrl
and
adc
out
iret
pushf
addr16
cs
cmpsb
nop
aad
adc
scas
dec
cld
mov
mov
je
mov
montmul
cmpsb
inc
mov
stos
lea
inc
call
mov
sub
adcl
push
fistpl
cmp
lahf
aaa
testb
xchg
and
fs
lock
sub
mov
scas
inc
rcll
data16
outsb
std
negb
xchg
cwtl
rol
sub
lahf
test
icebp
int3
add
inc
add
lret
popf
or
fwait
mov
and
lock
pop
mov
push
adc
ret
fldz
sahf
es
pop
subb
mov
cmpsl
push
sbb
mov
insb
repz
lods
jno
or
jnp
jbe
cld
mov
inc
mov
shlb
rcrb
pop
sub
movsb
mov
scas
fstl
aaa
das
xchg
imul
shrl
or
pop
jb
inc
stos
repz
inc
out
push
sbb
xchg
cltd
fadds
lfs
add
xchg
pop
or
cwtl
movsl
mov
shll
push
test
inc
sbb
aaa
jo
inc
pop
aas
fmull
xlat
or
sub
int
rcrb
ljmp
mov
xor
out
in
dec
jae
push
inc
ljmp
or
pop
pop
cmp
ja
fidivrs
dec
jl
lahf
mov
inc
mov
mov
fimull
loop
push
cs
std
cld
out
cmpsl
cli
xor
scas
mov
xchg
and
sbbl
jne
lods
stc
xchg
or
xchg
jp
shl
and
insb
insb
rcll
mov
idivb
ljmp
inc
lcall
ljmp
sub
jae
mov
push
in
add
popf
jge
xor
popf
xchg
movsl
jmp
sub
iret
or
push
lret
and
fwait
mov
jecxz
insb
lret
in
push
je
test
sub
sub
push
jg
xchg
cmpl
sbb
adc
pop
mov
pushf
fdivp
popf
and
xchg
or
sbb
movl
inc
movsb
xor
lds
psrlw
scas
cmpb
aad
cmp
or
lods
fs
add
test
test
xor
jle
cwtl
scas
mov
or
jecxz
pop
push
ss
sahf
inc
mov
jbe
in
inc
dec
loop
push
sub
bound
fsubp
ja
in
sub
and
ds
dec
push
and
cltd
xor
sbb
or
inc
test
mov
inc
fstpt
jmp
ret
push
arpl
pop
dec
pop
faddl
jns
jmp
xor
mov
fcom
mov
jl
jecxz
add
mov
pop
mov
cwtl
mov
mov
xchg
sbb
sub
jl
aas
ljmp
bound
clc
mov
lock
stc
iret
test
je
jg
hlt
enter
and
and
pop
fs
ss
clc
mov
cmp
lods
sub
cmc
test
cmp
sub
or
fildll
xor
push
cltd
loop
sub
adc
dec
push
in
icebp
pop
cmpsl
push
lods
and
mov
cmpsl
loop
mov
cld
mov
and
dec
sti
or
mov
gs
js
loopne
mov
lea
das
sbb
dec
les
ds
repz
hlt
sbb
mov
negb
sub
add
adc
fistpl
mov
add
icebp
aad
inc
ds
or
pop
mov
dec
xchg
dec
sub
in
je
adc
jecxz
lcall
in
mov
pop
andb
roll
inc
inc
fildl
push
pop
inc
inc
in
inc
aad
stc
inc
adc
aas
add
jb
addr16
mov
jns
push
shll
sub
std
popf
repz
mov
mov
arpl
outsl
mov
jae
jbe
mov
rolb
sub
cmp
pop
cmp
aam
ds
push
out
cltd
insl
cmp
dec
push
aaa
mov
push
mov
xor
lods
fdivrl
stos
mov
into
clc
mov
pop
cli
not
cmpl
lock
pop
test
xor
mov
popa
in
push
xor
fnstsw
aas
rcll
sbb
rcrb
icebp
stos
loop
mov
mov
mov
pushf
movlps
add
sbb
or
lcall
ret
xchg
pop
adc
pop
hlt
shrl
inc
fs
lock
scas
shrb
rep
sbbb
leave
roll
testl
jns
scas
xlat
in
and
xchg
push
adc
mov
sbb
pushl
sbb
xor
sbb
enter
push
jne
daa
mov
xchg
in
cmp
xchg
out
xor
sub
pushf
bswap
sub
xor
addr16
pop
jp
dec
or
insb
xlat
jns
jnp
inc
push
jle
scas
sbb
outsl
cmc
jp
inc
adc
lock
sahf
rorl
jae
inc
inc
push
scas
cmpsl
push
popf
movsb
testl
jg
stos
xchg
cwtl
jno
cld
stc
ljmp
rcl
scas
mov
sti
push
adc
je
or
test
jg
xchg
leave
arpl
hlt
iret
scas
push
arpl
sub
or
pop
in
mov
incb
icebp
add
or
fidivs
xchg
and
sbb
inc
cli
repnz
cmp
lret
mov
jb
jbe
inc
push
sbb
cwtl
adc
push
fisubrl
mov
jle
les
and
flds
scas
sahf
leave
fsubl
ljmp
push
add
addl
mov
sub
sub
push
dec
cmp
xchg
mov
loope
fcompl
cmp
fistpll
xor
xor
test
orb
in
sbbl
xor
daa
jg
mov
js
cmp
enter
push
or
mov
jo
repnz
subl
dec
movsb
outsb
in
cs
adc
mov
fwait
popl
or
mov
ret
adcb
lret
push
imul
int
testl
mov
hlt
mov
mov
in
sahf
pushf
or
addb
mov
imul
rorl
adc
and
mov
cmp
fdiv
xchg
divl
das
addr16
inc
xor
cmp
mov
into
inc
pop
jbe
adc
jecxz
nop
xor
outsl
testb
imul
lsl
data16
insl
lods
pop
jecxz
mov
or
mov
mov
mov
gs
push
loopne
je
pop
sti
popa
adc
stos
imul
cmp
repz
jl
xchg
nop
movsb
sbb
notl
xlat
mov
jns
dec
cltd
mov
pushf
mov
popa
jo
gs
mov
dec
mov
mov
dec
lahf
scas
pop
je
in
jecxz
rclb
mov
aad
dec
mov
call
mov
xchg
jg
ss
ret
fistpl
jne,pt
pop
in
inc
sub
xchg
jb
fldt
mov
add
ljmp
hlt
dec
std
inc
mov
cwtl
inc
cmp
inc
hlt
add
jp
in
lcall
mov
push
mov
sarl
xchg
mov
sub
clc
aam
mov
test
pop
cli
ds
and
jle
push
push
cld
mov
lcall
mov
rcl
and
imulb
pop
jle
int
push
xchg
jg
daa
sbb
adc
inc
dec
addr16
loope
gs
cmpsl
idiv
in
test
mov
mov
fnstsw
add
out
sbb
roll
jp
lods
psrld
add
int
or
push
mull
xlat
jno
dec
xchg
data16
call
dec
sbb
data16
push
xchg
outsb
test
add
adc
add
jns
sbb
xchg
xchg
movsb
sub
mov
aad
push
ja
loope
dec
lds
mov
aaa
fisubl
jne
inc
sbb
bound
js
xor
jae
jecxz
mov
jle
out
idivl
or
inc
pop
addr16
jp
add
insb
inc
push
ja
adc
jbe
ljmp
pusha
jge
fbld
inc
xchg
jmp
inc
pop
aad
movsl
inc
inc
mov
jae
inc
dec
push
jb
cmc
popf
lret
sub
push
push
repz
push
add
scas
or
pusha
loope
push
and
dec
jne
push
cmpsb
iret
imul
test
hlt
das
hlt
sbb
icebp
inc
cmp
push
push
jge
inc
fucompp
mov
int3
mov
out
push
inc
push
lds
enter
rcll
cmp
pop
push
cwtl
sbb
jbe
inc
sarb
and
sbb
sbb
jg
jmp
jl
sub
dec
xor
sbb
dec
mov
fs
push
js
jge
ret
loopne
test
int3
fwait
lods
inc
mov
mov
enter
daa
push
push
loope
enter
movsl
out
sub
push
add
sbb
test
push
sub
lods
and
lahf
lea
push
shlb
add
stc
push
xor
push
inc
xchg
sbb
cmp
andl
pop
pop
and
push
or
dec
sub
lret
dec
lods
notb
addr16
or
aaa
mov
push
and
adc
push
fxch
insl
int
call
jb
cmp
orl
scas
push
sbb
clc
mov
test
je
jg
xchg
mov
add
fs
ficompl
ss
sahf
cmp
mov
push
div
xor
lret
in
xor
imul
sahf
jns
and
hlt
cmc
xor
inc
fisubrl
mov
imul
sub
add
jnp
popa
jbe
lods
out
xor
out
out
and
hlt
lea
sub
in
idiv
and
addr16
mov
gs
jge
dec
inc
pop
pop
cmc
mov
aad
lahf
f2xm1
inc
pop
les
jns
jge
ds
push
cmc
scas
sbb
xor
xlat
neg
lret
sub
loope
adc
push
fs
push
roll
aad
aad
nop
mov
faddl
dec
sahf
dec
push
and
je
or
jecxz
dec
add
mov
and
xchg
cmp
into
pop
inc
ret
aad
push
xchg
aaa
dec
lods
cmp
pop
mov
mov
inc
inc
shlb
inc
cmp
jb
xorb
fildll
lea
mov
adc
xchg
xor
std
jmp
int3
cwtl
add
rorb
push
xchg
imul
ljmp
mov
daa
lock
xchg
das
insl
pop
andb
sub
mov
xor
es
mov
dec
inc
popa
xor
popa
mov
lds
cmp
andl
jmp
popf
cwtl
pop
shrb
jecxz
cltd
pop
cmp
test
cmp
mov
jg
push
movsb
or
std
xchg
es
ljmp
sub
xor
andb
push
push
sub
psrlw
or
mov
push
cltd
mov
sbb
scas
test
cltd
pop
xchg
sbb
into
inc
fsubrl
icebp
or
in
pushf
fwait
push
lret
ficomps
adc
push
add
cltd
movsl
xor
xchg
adc
mov
mov
inc
int3
mov
nop
and
ja
sub
mov
jne
mov
cmpsb
push
arpl
sub
jne
rclb
sbb
out
inc
pushf
bound
and
jmp
test
xor
sub
or
mov
sub
push
mov
xchg
aad
insb
lods
test
pop
inc
jle
push
sbb
jge
push
pusha
sbb
scas
xchg
mov
mov
into
jae
test
push
xor
aas
mov
dec
fbld
stos
jnp
lret
xchg
sbb
test
imul
push
mov
ds
iret
enter
movsl
rcrb
hlt
add
arpl
test
inc
cmp
push
cld
outsl
jp
pushf
and
add
fxch
mov
addr16
es
push
rclb
mov
shrb
movsb
aam
dec
push
out
arpl
mov
pop
sbb
add
or
push
jno
clc
test
dec
mov
push
mov
adc
push
jo
jae
scas
pop
cmp
and
pop
sbb
xchg
cwtl
roll
insb
loope
mov
dec
push
enter
daa
push
ficoml
cmp
pop
int
mov
cmpsl
pushf
cmp
gs
jbe,pt
pop
movsl
pop
test
and
scas
jne
lods
and
sbb
test
scas
push
and
stc
jo
add
or
js
fwait
sub
inc
mov
outsb
push
pusha
xor
dec
fwait
mov
mov
sbb
inc
xchg
js
add
orb
mov
jg
mov
shlb
push
fcoml
int
mov
es
mov
jle
daa
ret
jge
sbb
rcrl
sub
cmpsl
cmpb
in
mov
rolb
dec
xor
adc
dec
ss
scas
cmp
insl
dec
fdiv
mov
aaa
lret
push
xor
fnsave
xchg
ror
xor
mov
outsl
ja
mov
add
push
insb
scas
imul
add
mov
lods
aad
sub
xor
cli
daa
je
and
sub
inc
icebp
sti
push
sbb
push
or
cmpl
test
adc
mov
test
sbb
push
dec
insl
repz
add
sbb
insl
add
xor
fsubp
adc
rcrb
leave
sub
and
js
cs
das
pop
sbb
cmp
call
mov
outsl
test
mov
mov
subl
ret
cltd
pop
sub
clc
inc
push
inc
inc
popa
xor
sub
pop
nop
mov
sbb
inc
not
out
std
xchg
aad
cwtl
mov
lds
imul
cld
lock
fcmovne
pop
cmpsl
loopne
pop
xchg
xorl
dec
lcall
inc
xchg
popf
aam
mov
ret
adc
imul
out
sbb
dec
inc
push
jl
push
xor
xchg
and
popa
enter
sbb
movsbl
test
and
sub
push
pop
mov
add
xor
mov
repz
addr16
popf
inc
cltd
clc
pop
shl
xchg
gs
xor
mov
jbe
push
mov
stos
scas
pop
sub
adc
push
xor
testb
mov
push
rcll
xor
and
hlt
dec
push
sahf
or
or
dec
xchg
enter
stos
test
sbb
mov
mov
push
add
dec
dec
das
jmp
or
jns
loope
in
nop
xchg
inc
pop
mov
adc
mov
ja
cmc
out
dec
adc
jle
mov
mov
ss
jne
mov
shr
and
push
bound
shll
xchg
dec
insl
mov
and
xor
and
addr16
push
jp
out
and
fwait
mov
jle
mov
in
data16
pusha
mov
push
fbld
in
push
pop
inc
and
inc
push
out
jae
or
clc
inc
pop
popf
sbb
out
mov
aad
das
stos
out
ljmp
sbb
cs
imul
fs
out
bound
pop
xchg
ja
daa
adcb
cmp
enter
mov
and
shl
sub
ds
mov
sub
add
enter
inc
pop
insb
push
fidivrs
mov
shrb
mov
adc
test
pop
cltd
scas
push
ss
jbe
stos
in
jge
sub
in
movsl
or
or
xlat
jno
pop
or
dec
adc
push
adc
aaa
xor
ljmp
and
ljmp
fstl
cmpsb
es
in
loop
inc
enter
daa
push
out
cmp
fsubs
popa
es
rorl
cmp
ds
cmc
push
movsl
pop
cmpsb
and
mov
lret
stc
call
sbb
xchg
xor
add
enter
enter
inc
mov
sub
push
cmp
push
mov
out
repz
in
cmpsl
adc
outsb
adc
cli
and
sbb
mov
inc
mov
outsb
mov
repz
xor
push
sub
xchg
sub
aas
pop
cmp
lcall
and
push
sahf
test
cmp
idivl
and
cmp
adc
les
imul
fsubrs
push
and
lret
pushf
xor
inc
and
mov
or
push
into
jmp
cli
icebp
xor
cmp
imul
ja
and
loop
addr16
rorl
xor
cli
pop
mov
mov
int
inc
sti
lds
add
loopne
push
ficompl
mov
aas
fstps
ffreep
pop
push
loopne
sbb
jp
lods
mov
cmp
xlat
push
sub
dec
insl
pushf
mov
std
xor
aad
hlt
out
je
std
dec
xlat
repnz
and
dec
add
xorb
jecxz
adc
mov
mov
xchg
cmp
das
pop
test
ljmp
subl
pop
into
out
push
inc
icebp
ja
inc
jl
jne
jg
add
cmp
in
and
ljmp
sbb
adc
cmp
jb
ja
stos
mov
hlt
mov
call
cld
sbb
mov
mov
push
sbb
lock
or
das
sub
outsb
mov
cmp
cli
ret
movsb
add
pop
insl
sub
cmpsl
push
pushl
popa
fisttps
mov
inc
mov
ljmp
pop
fildl
ror
sbb
cltd
int3
pop
inc
test
cwtl
in
mov
lods
pop
push
sub
loop
push
imul
movsb
sbb
ljmp
jo
leave
js
stos
sahf
inc
scas
out
inc
jno
xchg
cld
mov
push
or
jg
and
or
pop
movsb
xor
lret
incb
xchg
je
dec
mov
mov
sbb
mov
daa
inc
or
add
fidivs
scas
add
push
insb
lock
arpl
mov
xor
pop
jns
cmp
in
mov
xchg
xchg
add
mov
push
cmpsb
pop
ja
inc
jle
cmp
mov
dec
sub
xchg
cmp
jne
ljmp
add
bound
sbb
jmp
sbb
subl
out
gs
xor
push
or
xchg
addr16
out
jp
cs
lds
insb
andl
jle
dec
es
lret
push
pusha
dec
js
ffreep
gs
xor
jp
xchg
inc
popa
xchg
loopne
adc
push
mov
sbb
mov
adc
lahf
stos
popa
mov
xchg
pop
mov
push
imul
scas
aas
ja
push
cs
mov
iret
xchg
lret
fadds
hlt
sti
mov
out
inc
inc
mov
lret
push
cli
insb
dec
fiaddl
insb
push
add
xchg
jne
js
and
call
pop
mov
ljmp
xchg
into
repnz
stc
inc
movsb
ljmp
jbe
or
dec
sbb
fisttps
fs
or
test
jmp
es
push
xor
jmp
ja
lahf
sbb
scas
sbb
cmp
mov
cs
sub
test
test
push
enter
daa
push
js
cmp
sbb
ljmp
cmp
out
mov
mov
pushf
sbb
adc
aam
push
cmp
push
add
add
loop
mov
pop
push
cltd
js
dec
sub
push
mov
push
push
mov
fcompl
fbld
js
or
clc
push
push
mov
add
mov
pushf
pop
and
stos
mov
int
adc
sub
mov
xchg
lcall
cltd
mov
int3
sbb
leave
and
ss
test
lock
jg
push
es
or
mov
les
mov
lods
out
cmp
jecxz
fdivp
xor
lret
pushl
rcl
cmp
inc
add
mov
cs
cmc
xor
xor
stc
xchg
outsl
jb
psrad
lret
imul
add
adc
mov
mov
lds
cmp
sti
je
lods
xor
popl
ret
loopne
pop
pop
pop
push
push
jbe
dec
in
fsts
test
cmpsl
xchg
pushf
lahf
mov
cmp
sti
cli
xlat
mov
fildll
sbb
inc
adc
ficompl
mov
and
nop
dec
mov
dec
xlat
xchg
inc
push
pop
repnz
jnp
mov
jecxz
pop
rol
lock
call
fs
mov
scas
js
fucomi
xchg
call
pop
jno
incb
sbb
inc
xchg
aaa
jmp
jb
mov
mov
xor
negb
std
loopne
cmp
inc
cmpsl
push
mov
sub
in
or
inc
loop
lret
aaa
mov
mov
mov
repnz
sub
or
pop
mov
xor
aam
add
imul
cmp
cwtl
cmpsl
push
push
js
cli
or
popa
idiv
sbb
repz
and
dec
dec
jle
icebp
rolb
sub
pop
cli
mov
and
dec
inc
push
mov
test
fcomp
jge
cs
rcll
xchg
jecxz
out
push
adc
cmp
pop
je
das
stos
out
lods
out
test
jb
push
out
pusha
pmaxsw
add
pop
or
xorl
pop
add
jecxz
inc
dec
and
shrl
or
sbb
call
or
jbe
faddp
sub
cli
mulb
cli
sub
add
sub
xor
ss
mov
test
loopne
jg
dec
adc
pop
roll
sbb
sub
jle
icebp
stos
jns
repz
cmp
imul
ds
jmp
scas
les
jmp
in
loope
imull
sub
xor
pop
int3
xor
add
jp
sub
insb
out
jg
jnp
cmp
jle
aad
in
xchg
pusha
jmp
orl
mov
loopne
insb
xchg
pop
jae
jecxz
push
jle
out
popf
fisubl
push
xor
in
lret
stos
aam
fsts
mov
inc
in
scas
mov
push
mov
iret
in
ret
stos
push
leave
mov
repnz
inc
out
push
arpl
ja
inc
inc
add
or
jle
inc
jns
sbb
push
int3
arpl
pop
lret
faddp
jmp
shlb
repnz
pop
dec
movsb
jne
hlt
push
aam
adc
loop
jge
push
sbb
jb
or
hlt
jno
xchg
fsubl
dec
out
pop
int
xlat
shlb
mov
add
and
or
lods
push
mov
clc
xchg
inc
sti
divl
cmpsb
sub
jecxz
mov
enter
daa
push
lea
cmp
adc
mov
mov
movsl
je
and
mov
push
or
loopne
lahf
cmpsl
dec
add
pop
inc
xor
mov
pop
xchg
into
mov
pop
add
mov
outsb
fmull
shrl
outsb
movsl
outsb
fldt
mov
rcll
sbb
pop
cmpsl
mov
add
stc
jmp
push
in
xlat
int
xchg
or
cmp
jo
shr
fwait
mov
addr16
imul
xor
test
gs
xor
jne
stc
insl
xor
fs
jbe
or
ss
fnstenv
cmp
sahf
dec
mov
lret
stos
xor
jp
sub
cmc
testl
outsl
push
cmp
or
fisubrl
adc
mov
add
aaa
cmpsl
insw
test
mov
pop
cli
shrb
in
mov
and
incb
jle
loopne
cmp
pop
jno
fistl
and
fxch
ja
les
add
mov
rcr
sti
adc
push
push
ret
xlat
repnz
mov
and
pop
xlat
jbe
adc
add
loopne
inc
cs
stos
sub
cwtl
mov
scas
dec
xchg
mov
lods
dec
repnz
add
mov
mov
nop
lea
lock
cmp
pop
lds
pop
sbb
cli
pop
adc
sub
and
inc
mov
xchg
aas
mov
daa
je
mov
cmpl
std
xchg
lret
fimuls
inc
or
lods
test
cld
jno
stos
lret
cmpsb
movsb
outsl
mov
repz
dec
leave
jl
jmp
mov
sub
add
ljmp
movsb
repz
cmpsl
push
sub
popa
or
mov
fdivrl
clc
adc
mov
sbb
out
cmp
add
mov
ljmp
movsb
popa
or
or
xor
lret
rcll
xchg
out
or
ficoms
rcr
cmovge
and
lock
jge
pop
xchg
add
out
adc
mov
jp
dec
xchg
repnz
hlt
inc
cmp
sub
popf
jne
add
cltd
mov
lea
fdivr
vmwrite
xor
xchg
das
and
push
cmp
pop
jl
clc
ja
jo
dec
and
fnstenv
sbb
fisttpll
and
jne
mov
aam
shrb
jmp
mov
or
scas
dec
stc
sub
adc
pop
addr16
sub
fsubs
and
jne
insb
pop
xor
jnp
adc
push
mov
pusha
test
sub
call
jmp
pushw
inc
cld
sbbl
cld
cmpsb
push
xchg
hlt
movsb
stos
inc
mov
mov
and
imul
scas
add
or
adc
xor
inc
leave
sub
xchg
lret
arpl
cmpsb
imul
and
lcall
cmpl
dec
mov
lods
fisubs
popa
lds
je
mov
fmuls
repnz
and
pop
jmp
xor
push
shll
sub
jge
imul
or
test
jno
push
cmp
pop
orl
sbb
mov
pop
cmp
les
fmuls
and
test
ret
rcl
inc
mov
in
in
xchg
adc
enter
daa
push
es
cmp
push
movsb
loope
sub
sub
inc
cmp
xchg
ljmp
out
lahf
sub
pop
sbb
movsl
jle
fiaddl
xorb
fs
adc
sti
pop
mov
dec
fcoml
inc
dec
or
add
pop
push
mov
or
pop
outsb
ds
cs
into
shrb
lock
adcb
pop
mov
mov
and
cmp
call
sti
fisubrs
mov
mov
jbe
sbbl
sbb
nop
bound
sarl
mov
adc
stc
and
cld
fs
ret
adc
push
xor
cmp
pop
enter
or
int3
xor
pop
cmp
sbb
or
cli
shl
nop
mov
mov
enter
adc
mov
out
pop
adc
xchg
xchg
into
test
imul
mov
sub
cli
repz
mov
push
mov
cmp
stos
sub
gs
pop
loope
push
insb
push
pop
nop
cwtl
cs
cmp
les
xrelease
adcb
sub
cmp
rcl
xor
lea
add
pop
adc
add
mov
aad
mov
dec
hlt
stos
in
inc
jnp
xchg
or
je
ret
xchg
xchg
mov
das
mov
test
jns
orl
push
das
fistl
xor
inc
xchg
and
jb
sar
mov
inc
lret
out
lret
mul
cmp
cs
cwtl
test
pushf
mov
cwtl
push
icebp
test
adc
mov
add
lock
mov
enter
and
mov
aam
cltd
add
push
inc
xchg
jno
aaa
insl
mov
push
cmpsl
dec
test
mov
and
pop
lods
leave
inc
in
mov
xchg
rorb
cwtl
add
cmp
rorb
fs
jno
movsb
test
cld
mov
outsl
mov
xor
clc
inc
test
addr16
pop
lret
stos
imul
rcrl
lret
push
lods
daa
roll
mov
cmpsl
or
jb
mov
jmp
mov
push
xchg
pop
inc
sbb
and
call
fwait
cmp
pop
push
inc
call
in
mov
mov
xor
mov
jns
sbb
in
adc
jle
mov
clc
mov
pop
aaa
ds
ja
dec
jnp
adc
ljmp
push
and
add
ret
push
ja
xchg
lahf
stc
fsubl
lcall
jnp
imul
call
repz
imull
or
les
add
cld
pop
jle
ret
mov
mov
insb
lcall
xor
xor
inc
adcb
push
add
xor
mov
roll
sbb
adc
enter
inc
in
push
add
adc
or
mov
jmp
leave
movsb
cmp
adc
sbb
inc
dec
ljmp
je
or
inc
mov
sbb
pop
int3
cmp
mov
fimuls
imul
leave
or
rcr
in
mov
pop
jl
cmp
push
movsb
mov
push
jb
mov
jmp
pop
sbb
addr16
mov
inc
shlb
sbb
aam
int
or
popf
jp
xor
push
dec
or
out
xlat
adc
mov
sbb
mov
enter
daa
dec
inc
fnstsw
cli
loopne
loope
mov
sub
mov
repz
scas
mov
out
mov
mov
daa
sbb
add
xor
jp
aam
jl
fbstp
js
stos
jmp
cmpl
push
adc
pop
sub
inc
outsb
mov
xorl
xchg
mov
fistpl
subb
clc
mov
ret
xor
icebp
int
inc
mov
pop
aaa
out
lcall
add
jg
sahf
adc
test
js
addb
jg
shrl
in
stc
fstpt
cmp
cmpsb
lods
lods
ss
mov
fcoms
divl
xchg
lret
xchg
xor
repz
inc
lods
or
aas
sbb
jne
jg
test
inc
outsl
punpckldq
imul
leave
lret
mov
jae
and
mov
int3
out
daa
pusha
cli
es
mov
jns
dec
sti
andl
or
in
mov
pop
scas
inc
pop
adc
xor
les
out
mov
sbb
xchg
leave
xlat
xlat
jo
dec
sub
adc
lock
test
sbb
aad
loope
nop
loopne
cmovg
stos
inc
mov
scas
dec
loopne
push
je
loop
jecxz
lret
lret
dec
push
lea
jbe
ss
sbb
jne
mov
dec
das
pop
sahf
fstpt
faddp
inc
or
push
dec
aas
sti
repz
mov
shrl
rcrl
dec
jb
and
enter
push
sub
jnp
movl
mov
push
mov
jnp
cmpsl
push
inc
mov
pop
pop
ja
jae
inc
ret
loopne
mov
hlt
repz
insl
jb
fwait
dec
sub
gs
cmp
xor
mov
ja
push
jmp
mov
push
rcrl
sbb
leave
cltd
test
lods
test
cwtl
mov
aaa
hlt
push
ss
out
clc
adcb
mov
cmp
sarl
fst
pop
jne
lret
lock
shlb
xchg
sbb
add
or
and
ficomps
xor
cmpsl
pop
mov
in
rolb
test
out
xchg
leave
sbb
fisttpll
fwait
imul
add
iret
mov
sub
jle
xchg
jns
add
in
test
push
repz
repnz
cmp
stos
lods
dec
pop
sbb
xchg
mov
inc
inc
scas
dec
out
jne,pt
in
les
jle
pop
bound
add
xor
mov
andl
sub
or
cmp
mov
jp
push
ljmp
or
bnd
sub
cmpsl
inc
xor
cmp
fistpll
testb
mov
xor
int
inc
lea
movlhps
or
iret
mov
adc
fcoml
shr
imul
xchg
scas
lret
jo
push
dec
scas
mov
iret
add
sub
pop
pop
loopne
sbb
hlt
daa
rcr
arpl
into
sbb
mov
or
out
das
pop
inc
notb
inc
add
int3
and
xor
fisubrs
mov
cmc
pop
add
mov
std
cmp
mov
push
rcll
inc
sbb
sbb
lretw
push
lahf
jno
pop
push
pop
aas
xchg
dec
cmp
push
push
add
xor
mov
cmp
and
outsb
push
pop
imul
in
gs
lods
enter
daa
dec
in
cmp
gs
cmp
xor
dec
cwtl
dec
movsl
mov
cmp
test
shlb
inc
mov
lock
in
shl
cs
xchg
xor
push
cwtl
pop
js
popf
mov
shrb
push
xchg
ret
mov
mov
push
mov
outsb
add
sbb
rclb
cmpb
mov
and
and
testl
mov
sub
xchg
mov
pop
sbb
mov
and
sbb
pop
dec
test
addl
lods
or
xchg
imulb
adc
mov
xor
iret
jge
imull
int
lret
cmp
sbb
inc
or
and
pop
xchg
inc
cmc
dec
imul
out
mov
loop
imul
adc
push
push
add
sbb
data16
in
test
mov
sub
loop
mov
in
ja
xor
es
lock
loopne
or
in
pop
adc
pop
clc
les
jmp
xchg
test
sbb
iret
loopne
xlat
scas
dec
lea
out
stos
adc
into
pushf
adc
push
pop
jge,pn
mov
insl
xchg
clc
nop
mov
nop
mov
mov
dec
pop
je
push
test
movsl
and
into
test
lea
leave
mov
fstps
adc
dec
dec
sbb
aad
out
or
pop
std
jnp
inc
xchg
xchg
mov
sub
aas
lcall
mov
pop
pop
in
push
sahf
fdivr
jl
push
cwtl
push
sahf
ss
lcall
xor
inc
lret
repz
jno
push
mov
loopne
lock
jp
das
xchg
mov
push
sahf
xor
ds
outsl
shlb
pop
rolb
dec
and
sub
mov
push
sub
lahf
loop
mov
flds
and
into
sub
pop
jbe
cmp
out
mov
cltd
fucomip
mov
inc
dec
push
stc
lret
push
fstpl
xorl
xchg
fbstp
mov
pop
and
in
dec
dec
xchg
out
xor
push
adc
js
punpckhdq
fiadds
mov
or
nop
xor
xor
xchg
mov
test
mov
imul
sbb
inc
std
mov
jp
lcall
add
ljmp
xor
ret
outsb
xchg
data16
dec
cmp
pop
jnp
mov
lods
xchg
dec
cli
aam
mov
shlb
popf
push
add
lret
jne
sub
mov
push
xchg
out
pop
mov
inc
jmp
adc
sub
sub
add
jp
push
lcall
cmp
jnp
lret
jle
xor
scas
mov
push
fistps
and
lea
inc
cwtl
loopne
jae
ret
mov
scas
popf
add
xor
dec
and
repz
or
pop
sbb
mov
and
xchg
xor
adc
sub
xchg
ret
mov
hlt
jb
xlat
arpl
mov
test
inc
jne
fiaddl
jb
int3
sete
pop
xchg
xchg
fimuls
adc
xlat
jo
rclb
aaa
mov
add
push
in
movsb
mov
push
test
adc
or
xlat
mov
jl
fildl
stos
mov
dec
xor
or
mov
adc
fidivs
push
and
mov
aaa
push
cmpsb
cmp
addr16
dec
cmc
enter
daa
dec
or
cmp
or
pop
cmp
sub
sub
outsl
imul
movsl
nop
scas
jbe
sbb
sbb
pop
movsb
outsb
sbb
add
stc
imul
and
pop
test
js
and
pop
lcall
push
xchg
cs
rcrl
sub
dec
outsb
addr16
adc
aas
and
cltd
dec
sbb
adc
mov
aad
and
pop
push
icebp
mov
int
andl
lcall
push
dec
loop
dec
xor
mov
pop
pop
sbb
xor
xorb
jg
pushf
sub
dec
aad
movsb
cs
ss
sub
fmuls
repnz
lret
loop
hlt
mov
cmp
adc
out
or
cmc
adc
insl
outsl
int
adc
pop
pop
lcall
xor
add
inc
data16
and
mov
scas
idiv
mov
sub
dec
jg
sti
fistpll
mov
adc
sti
gs
mov
and
pop
in
pushf
adc
insl
roll
sbb
popf
dec
test
cmc
sub
imul
sbb
or
sub
push
adc
lods
call
loopne,pn
data16
scas
pop
nop
xchg
sbb
inc
mov
scas
dec
into
fucomip
je
pop
jg
mov
adc
sarl
jmp
adc
daa
mov
test
fcomi
rolb
out
fistpl
or
scas
inc
push
sbb
jb
or
arpl
lahf
sbb
mov
mov
stos
jge
std
and
cwtl
fnstcw
mov
loopne
mov
int
icebp
or
inc
cld
sbb
scas
int
push
pop
mov
in
mov
mov
mov
add
test
in
es
mov
enter
frstor
stc
pushf
cmp
imul
xor
and
imul
shll
test
xchg
mov
pop
mov
inc
in
clc
pop
xchg
xchg
push
sub
shr
xchg
jmp
lret
nop
cltd
stos
cmp
mov
xchg
cmpsb
add
into
bswap
xchg
add
dec
dec
or
mov
xor
push
iret
mov
repnz
dec
and
cmc
sbb
call
mov
or
in
repnz
leave
add
push
sub
aas
add
add
mov
xor
or
and
data16
xchg
imul
mov
ja
mov
push
idiv
dec
in
inc
pop
mov
and
mov
push
scas
inc
dec
lods
sub
jne
repz
rcll
cmp
fbld
in
mov
xchg
fdivrl
into
out
jle
sub
negl
jp
popf
mov
insb
add
pop
int3
jle
iret
xchg
in
pop
adc
adc
jl
repz
push
add
or
jae
and
push
dec
out
aad
sub
lret
mov
mov
nop
xchg
bound
sbb
add
imul
scas
xchg
movsl
bound
loope
adc
xor
cmp
mov
mov
push
jg
push
sub
or
in
mov
ret
push
fidivl
jo
lcall
pop
mov
mov
lds
xchg
shrb
cmp
or
add
repz
movsb
sub
repz
pop
in
jbe
fsubrs
neg
inc
sbb
and
aaa
fdivp
mov
or
xor
xchg
lods
test
inc
aaa
fbstp
addr16
mov
and
lcall
xor
xor
int3
enter
daa
dec
mov
cmp
das
mov
and
cmp
xchg
mov
shlb
mov
or
push
sub
add
hlt
adc
sbb
xchg
pop
js
cmp
push
push
sbb
ret
sub
mov
outsb
lret
adc
sbb
roll
xchg
loopne
jo
xor
pusha
or
hlt
cwtl
in
int
jns
sub
pop
lcall
sbb
sbb
cli
cli
pop
test
pop
adcb
mov
stc
add
fs
repz
xchg
mov
ss
jl
inc
pop
arpl
inc
xor
lods
pushf
dec
data16
xor
sbb
fidivrs
ror
push
add
xor
jp
outsl
lods
imul
adc
arpl
add
add
mov
mov
xor
cli
mov
ficoml
sti
mov
jmp
ss
js
mov
notb
adc
dec
and
les
scas
ret
xor
mov
lret
xlat
sub
adc
pushf
imul
inc
imul
sub
nop
jno
hlt
dec
jo
insl
inc
out
in
inc
sbb
arpl
nop
jecxz
sahf
jge
aam
cmpsb
lea
out
call
mov
jnp
mov
push
dec
lock
xchg
rcrl
xchg
sub
and
inc
cmp
xor
fadds
xchg
jb
mov
imul
rol
std
lret
cwtl
xchg
in
add
add
mov
dec
xchg
jnp
rcrl
or
lods
dec
pusha
lock
and
inc
adc
sub
adc
je
lea
es
push
insl
daa
orb
mov
cmpb
sbb
lods
jne
sub
pop
sbb
mov
mov
xchg
rclb
cwtl
test
sub
frstor
mov
xchg
pop
lods
ljmp
ficompl
xchg
stos
daa
adc
mov
mov
movaps
or
inc
pop
xchg
xor
aas
dec
mov
cmc
push
jns
mov
ds
fidivl
sbb
lcall
clc
pop
aam
int3
cmp
add
and
lcall
lahf
pop
jns
xchg
pop
in
aam
xchg
mov
out
mov
and
push
ja
jecxz
dec
loopne
mov
repz
nop
aad
jne
leave
mov
dec
movsl
sbb
bound
jno
jmp
cmpsl
sbb
adcl
out
out
push
sub
stc
out
add
paddusw
rolb
insb
jo
loope
out
out
jle
adc
mov
push
je
fwait
mov
sub
inc
scas
jle
jae
lret
adc
push
mov
int
int
xchg
jecxz
mov
dec
mov
or
scas
hlt
lods
aad
pop
xchg
inc
adc
add
iret
pop
add
jb
adcb
arpl
lods
inc
push
sub
push
jae
mov
add
sti
fcmove
in
sub
xor
xchg
mov
vpackuswb
mov
stos
cltd
mov
stos
jne
movsb
mov
add
scas
xor
jbe
cmp
repnz
sbb
fisttpll
popf
add
jno
outsl
test
sbb
jp
push
sub
xor
ret
scas
xor
in
cmp
jne
ja
xor
sub
push
cmp
cmpsb
ds
in
sbb
enter
daa
dec
fistps
loope
dec
cvttps2pi
insl
xchg
ds
xchg
movsl
sahf
ds
and
mov
ret
inc
cmp
out
sbb
cmp
xor
jmp
loopne
rcrb
mov
jmp
pop
jge
test
movsl
sub
ret
dec
mov
xor
adc
cmc
add
push
inc
sub
incb
and
push
div
insl
int
push
ja
pop
rolb
xor
ret
ret
jbe
nop
mov
push
dec
sbb
aam
sahf
popf
mov
test
cmp
subb
movsl
mov
aaa
push
stc
mov
inc
fs
xchg
sbb
orl
pop
fadds
in
imull
lret
or
mov
xor
lds
cmc
mov
push
outsl
outsl
mov
push
loop
es
imul
pusha
and
mov
lods
hlt
aaa
mov
jns
sub
cli
repnz
andb
sub
cmp
dec
push
rclb
sub
jg
adc
test
push
ljmp
mov
loopne
xchg
jbe
xchg
icebp
or
in
adc
sbbb
sub
adc
xchg
pushf
push
inc
leave
jmp
dec
insl
cmpsb
insl
fcom
inc
push
mov
iret
test
inc
ficoml
pop
je
stos
mov
rol
lods
xlat
je
lea
push
mov
pop
inc
les
dec
fcmovnb
or
jnp
dec
pop
out
dec
inc
sub
aas
ja
and
aaa
aaa
mov
std
es
je
divb
cwtl
jno
fstpl
jl
int
mul
out
icebp
mov
dec
cld
jae
xor
inc
dec
xor
jae
fwait
lock
fists
das
and
mov
repz
aam
xlat
cltd
ret
sbb
mov
insl
push
mov
dec
adc
pop
sub
pop
pop
mov
lods
loopne
xor
inc
adc
and
mov
rcrl
xor
xchg
sub
mov
add
fisttpll
mov
out
ljmp
cmc
pop
and
dec
out
pop
mov
or
stc
ja
cld
and
mov
clc
insb
push
dec
repz
test
push
adc
dec
rorl
inc
ret
or
mov
fwait
daa
jnp
push
outsl
jno
add
cmp
cmp
lret
jns
lsl
jg
mov
mov
int3
cmpb
lret
movsl
ja
push
ret
dec
shll
mov
cmp
cld
sub
dec
jne
xor
mov
leave
sub
xchg
jb
repz
mov
rcl
sub
hlt
jnp
stos
fbld
and
adc
jnp
shlb
imul
ret
add
pusha
es
jbe
cld
xchg
cmp
stos
addb
jae
mov
push
shll
push
popf
cli
push
or
popa
stos
stc
sub
mov
imul
scas
push
stos
mov
adc
pop
enter
mov
testl
arpl
sbb
pushf
jle
insl
arpl
push
repnz
ficompl
jne
int3
shl
inc
pop
adc
jae
aaa
movsl
call
shlb
mov
bound
movsb
inc
sbb
jbe
addr16
in
mov
aaa
pop
xchg
fs
jge
jno
adc
jl
test
dec
clc
or
push
or
popa
xor
sbb
fs
and
push
test
test
cmpsb
shl
in
add
enter
daa
dec
nop
mov
stc
cmp
ljmp
mov
cmp
test
movsl
movsl
pushf
test
in
shufps
push
arpl
and
mov
in
xor
dec
sub
mov
sbb
js
cs
mov
mov
cmpsl
fdiv
xchg
pop
sub
cli
outsb
nop
testl
lea
mov
adc
jne
nop
mov
out
and
loope
cli
ret
adc
sub
test
daa
or
mov
sbb
push
cmp
outsb
movsl
aam
enter
mov
mov
outsb
dec
andl
jecxz
les
cmpb
fdivr
imull
jl
lret
in
xor
idivb
jg
or
movsl
into
in
insb
cmc
push
inc
stc
outsl
push
repnz
js
imul
fildl
sub
jnp
add
lods
fistl
mov
dec
out
fstps
and
xchg
in
nop
mov
or
jl
mov
lret
cmp
pop
dec
lds
adc
sbb
mov
subb
mov
test
mov
mov
in
adc
pop
jmp
sub
or
mov
nop
daa
adc
dec
mov
dec
xor
je
outsl
and
loope
xchg
fisubl
push
call
mov
in
pop
hlt
mov
jg
icebp
fldt
jp
inc
mov
push
inc
outsl
pusha
add
push
sti
pop
jb
sbb
mov
mov
shll
lcall
lea
mov
add
icebp
mov
lret
scas
mov
push
mov
dec
xor
lret
das
add
mov
xchg
sbb
sub
sbb
out
ret
stos
ljmp
cmc
ret
outsl
dec
adc
mov
popa
scas
xchg
adc
popa
mov
and
cmp
pop
repnz
sarb
mov
inc
test
pop
outsl
push
add
int
clc
test
test
ljmp
lods
pop
int3
lret
add
scas
jecxz
jnp
inc
push
mov
or
add
and
or
mov
mov
sti
cmc
cld
dec
pop
xor
icebp
mov
sbb
jbe
inc
pop
and
fwait
push
pop
xchg
push
adc
add
mov
xor
sub
in
scas
jecxz
pop
loopne
mov
and
mov
cltd
or
ja
inc
dec
dec
mov
or
adc
push
add
mov
out
fldenv
jns
pop
adc
jmp
cmp
or
sub
out
fwait
lea
xor
aas
push
mov
xchg
mov
sub
inc
lcall
lret
pusha
shrl
flds
xchg
iret
lods
fstpl
jnp
inc
les
lret
push
xchg
daa
ss
lahf
sti
dec
mov
dec
sahf
xor
addr16
loope
cltd
scas
mov
sbb
adc
or
enter
cmpsl
hlt
sahf
xor
imul
or
push
and
inc
jno
icebp
fimull
push
pop
adc
int3
mov
xchg
loopne
fimull
sarb
in
in
push
pusha
popf
cmp
pop
mov
push
dec
pushf
sbb
fmul
jge
lret
fcompl
push
test
or
jb
jno
fldl
xor
fisttpl
arpl
out
xchg
js
xchg
popa
pop
ss
push
sbb
mov
in
call
shll
cmp
fndisi(8087
mov
sti
mov
push
mov
sbb
mov
ljmp
sti
lcall
push
mov
add
fcmovb
xor
xchg
pop
leave
mov
js
add
pop
sti
pop
xchg
mov
push
sbb
cmp
sub
jne
outsb
repz
adc
stos
loopne,pn
adc
push
or
push
ljmp
std
add
jp
adc
lret
mov
shll
sbb
rcrb
cmc
jae
and
fidivrs
sbbl
fdivr
and
cmp
adc
mov
int
jbe
pushf
imul
mov
lret
xchg
xor
or
mov
xchg
into
leave
sub
das
inc
sub
das
dec
leave
outsl
dec
xchg
int
movsl
std
pop
imul
lock
mov
pop
test
lods
ret
mov
out
out
in
pop
movsb
andl
fwait
nop
aad
lahf
sahf
shlb
data16
mov
test
imul
lods
leave
jl
repz
adc
ja
add
testb
xlat
ljmp
adc
lcall
pop
enter
dec
adc
cld
das
nop
add
push
dec
lea
mov
je
mov
jecxz
sbb
fldl
lea
xor
push
cmpsl
movl
lods
fcmovnu
and
xor
outsl
arpl
lahf
daa
aas
mov
push
jb
xor
jae
int
adc
into
shl
and
divb
push
in
cwtl
lds
mov
icebp
gs
sbb
push
clc
addr16
mov
lock
aas
jo
sub
sub
xchg
iret
aam
or
es
mov
call
cmpsl
dec
jno
mov
lds
adc
mov
cmpsb
and
aad
dec
pop
adc
mov
repnz
lods
adc
mov
sbb
enter
mov
in
sbb
sbb
and
rorl
jo
ja
and
and
push
xchg
ret
push
cltd
push
add
add
sbb
lret
add
repnz
dec
shl
test
add
sbb
fisttps
int3
stc
fwait
test
aam
mov
bound
jno
pop
jl
lods
xor
jmp
add
shl
xchg
sbb
mov
lock
mov
push
ja
mov
shll
je
adc
cmp
fidivs
mov
xor
jmp
or
jp
decb
sub
ljmp
jp
mov
lods
insb
mov
nop
jnp
aaa
jb
mov
xchg
in
cmp
pop
mov
inc
push
xchg
mov
lock
inc
iret
popa
bnd
push
loop
pop
and
popf
mov
mov
mov
das
stos
fistps
cmpsb
sbb
and
imul
insl
scas
sbb
testb
jo
push
iret
cmp
jo
mov
out
in
xchg
hlt
jmp
cmpsb
push
or
shrl
rcr
add
mov
not
mov
cmpsb
loop
pop
jno
lcall
enter
out
mov
movsb
xchg
test
iret
inc
in
pop
dec
mov
mov
jbe
vhsubps
mov
aaa
fiaddl
or
sbb
push
lret
pop
push
insl
dec
jge
push
rorb
lock
daa
cmpsl
scas
shlb
inc
test
sbb
imul
sti
cmpsb
mov
jo
or
aad
dec
jle
cmp
adc
shlb
sub
inc
xchg
decl
shlb
and
rcrl
ja
cmp
mov
fbstp
lods
or
repz
ss
subb
cmp
aam
lea
