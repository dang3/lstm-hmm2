and
int3
jo
add
orl
sarb
sbb
sbb
nop
inc
push
adc
leave
inc
push
sbb
cld
jo
or
enter
in
or
enter
loopne
enter
fcom
nop
inc
dec
push
sub
xor
sbb
test
sbb
mov
nop
inc
xchg
nop
mov
push
mov
jl
je
push
sbb
push
fs
pop
pop
sbb
push
push
dec
call
push
mov
push
push
call
incl
add
push
mov
add
mov
mov
mov
imul
add
or
cmpl
je
repnz
push
xor
dec
test
jb
inc
lock
add
cmp
fcmovnb
mov
cmp
or
je
in
push
repnz
mov
and
xor
mov
dec
cld
mov
and
xchg
mov
aas
icebp
sub
icebp
add
jle
ret
mov
cmp
clc
in
outsl
out
mov
jge
lea
repz
jne
sbb
hlt
mov
pop
ret
ret
clc
test
add
imul
or
pop
pop
and
pop
daa
in
mov
jp
cld
add
cmp
or
addl
push
lea
lea
fsin
test
jo
cwtl
pop
or
jge
add
push
lock
mov
or
jg
out
or
arpl
hlt
sti
decl
jmp
lea
cmp
jne
dec
xchg
clc
dec
mov
cmp
rcr
pushl
lea
lea
adc
arpl
bound
ja
add
and
push
hlt
mov
dec
dec
lea
xchg
jbe
daa
call
add
xchg
mov
pop
push
lea
mov
dec
dec
pop
pop
mov
mov
mov
ja
divb
sbb
mov
in
inc
and
ret
ret
sbb
lds
hlt
lock
fistpl
std
mov
faddl
hlt
push
in
cmpl
fs
sbb
inc
mov
mov
fnsave
jnp
call
cmp
inc
cmp
bound
fbstp
mov
push
lock
dec
dec
inc
out
cmp
aaa
jne
loope
and
mov
out
sbb
aad
es
mov
sbb
clc
pop
pop
cmp
jle
mov
mov
mov
and
dec
mov
dec
dec
inc
cmp
or
or
pushl
inc
dec
lea
lea
mov
aad
lcall
pop
pop
mov
dec
mov
dec
mov
in
xchg
in
mov
in
jge
inc
sub
insl
in
jp
dec
lahf
mov
dec
cmp
cs
jge
mov
lock
mov
dec
ficompl
dec
mov
inc
mov
loopne
stos
inc
xchg
or
or
mov
dec
dec
fsubr
xlat
insb
out
fcoms
aam
outsb
aam
jb
jne
dec
fdivrl
adc
sbb
mov
mov
insl
or
mov
inc
inc
inc
inc
mov
lcall
cld
push
aas
sbb
cmpsb
mov
cli
in
push
dec
dec
cld
or
pop
mov
mov
mov
dec
mov
add
jg
pop
pop
dec
pop
pop
xor
inc
add
mov
filds
push
stos
dec
clc
push
dec
and
test
or
adc
dec
xchg
ja
outsl
or
pop
adcb
call
inc
outsb
pop
mov
inc
inc
or
mov
xor
int3
shlb
cmp
testb
enter
mov
mov
sbb
jbe
lods
inc
test
fldenv
lcall
mov
dec
inc
lcall
push
and
pop
push
outsb
xor
push
xchg
jb
enter
js
mov
sbb
test
ljmp
cmpsb
jmp
addb
mov
nop
xchg
cwtl
pushf
ret
out
pop
in
cmp
js
mov
dec
mov
mov
mov
pushf
xlat
hlt
push
cmp
icebp
mov
dec
mov
add
or
cmp
js
idivl
adc
cld
mov
push
or
sbb
mov
pop
or
sub
pushl
jbe
notw
or
es
lea
pop
nop
imul
push
scas
je
dec
jl
dec
push
pop
push
cmp
icebp
dec
sbb
jmp
in
fdivs
inc
or
push
or
dec
mov
mov
cmp
xchg
clc
inc
sbb
aaa
mull
sub
test
lret
cmp
repnz
cwtl
xchg
fldt
insb
add
dec
inc
xchg
sbb
inc
and
push
bound
arpl
dec
dec
xor
xor
pop
js
bound
fisttps
js
out
sti
jns
repz
and
mov
sbb
jb
call
ja
std
pop
jo
loope
pop
cmc
inc
inc
stos
inc
mov
mov
adc
jns
xor
cmp
sbb
xchg
adc
add
or
imul
mov
ret
mov
call
sbb
mov
mov
test
pop
call
pusha
clc
mov
pusha
cmp
jge
insb
cld
fldt
inc
inc
xchg
inc
push
arpl
mov
clc
movsb
fstps
fidivs
aas
cmp
adc
insb
jp
lcall
or
movsb
sbb
pop
jae
sbb
xchg
sbb
sub
sbb
dec
jb
push
push
cmp
cmp
push
pop
pop
pusha
inc
dec
dec
cmp
insb
mov
out
add
cmp
jne
dec
cmp
je
fistl
sub
inc
pop
pop
fistpll
sti
push
or
and
cmp
decb
jno
inc
pshufw
xchg
cmp
lock
xor
sbb
inc
fwait
pop
cmp
jp
push
je
icebp
cmp
aas
push
inc
jle
pop
inc
ret
jnp
mov
cmp
pop
sbb
mov
mov
jae
int
lret
dec
dec
dec
cmp
loopne
jne
jge
lea
xchg
dec
movsb
mov
mov
jp
push
lea
ror
das
or
mov
mov
xchg
test
dec
inc
or
imul
lea
daa
aas
movaps
test
push
xchg
ror
or
mov
les
enter
mov
mov
in
cmp
xchg
addb
pop
pop
adc
and
xchg
data16
mov
dec
into
dec
inc
adc
push
sbb
add
or
xchg
adc
cmpsl
push
ret
in
enter
addps
insb
mov
add
shrb
test
cld
loope
fdivrl
add
push
mov
shrl
add
and
or
imul
or
fdivs
xor
sbb
push
adc
rep
or
push
clc
cld
mov
add
data16
dec
dec
adc
nop
adc
cld
xor
fsub
push
in
mov
hlt
mov
mov
into
cmp
jmp
rcl
adc
cmpsl
aaa
pop
mov
and
sahf
and
int3
icebp
in
ja
leave
data16
int3
jl
lret
shrb
clc
or
inc
adc
push
aaa
xchg
aas
clc
imul
mov
lea
pop
in
inc
push
jo
es
xor
mov
andb
and
aaa
aas
outsl
mov
lret
dec
sub
dec
mov
iret
and
insl
and
outsl
iret
sbb
dec
insb
adc
fsubrs
icebp
lods
sub
inc
imul
push
fst
sti
xchg
inc
cmp
push
sbb
aam
movl
sbb
leave
xchg
testb
inc
mov
add
push
dec
lock
les
gs
mov
inc
or
xor
je
fildl
sbb
push
pop
push
jno
in
sub
pop
jg
popl
setge
cmc
add
shl
xor
outsl
cld
rcl
cmp
mov
pop
add
sbb
cltd
adc
mov
mov
in
mov
and
enter
or
lcall
pop
mov
in
dec
mov
cmp
cmp
sbb
pusha
rcrl
xor
jb
sbb
lods
adcl
sbb
mov
sbbl
cld
and
xchg
outsl
into
xchg
jb
jb
insl
cwtl
pushf
mov
movsb
sub
xchg
pushf
add
sbb
sbb
daa
inc
push
sbb
rolb
cmp
inc
mov
xchg
mov
orb
clc
lea
pop
cmp
aam
sbb
in
sub
inc
mov
js
daa
addr16
and
repz
push
xor
sbb
adc
add
enter
pop
cmc
push
jl
sbb
loopne
adc
je
loopne
jae
jno
outsl
or
push
orl
sbb
and
mov
sbb
mov
push
insb
jo
and
mov
iret
mov
and
fs
push
stc
dec
rorl
call
cmp
bnd
push
xchg
mov
call
xchg
fs
push
mov
and
mov
pop
add
pop
adc
mov
xchg
or
or
pushf
in
cltd
inc
add
inc
pop
idiv
rcll
dec
and
cmp
xor
xor
mov
push
adc
xor
cmp
xchg
sbbl
add
add
insb
sbb
dec
and
sub
out
mov
and
and
cmp
dec
ret
in
sub
add
dec
inc
enter
cwtl
or
movsb
or
shl
in
movsb
adc
sbb
add
inc
repnz
sub
rol
or
and
shlb
add
lcall
sahf
and
std
clc
add
and
std
push
cld
daa
daa
pushf
jne
pop
add
or
aam
daa
adc
repnz
push
sub
cmpsl
cmp
cmp
call
adc
mov
push
sub
mov
fsubrp
fs
push
sub
pop
and
inc
bound
call
out
dec
test
aam
and
mov
lahf
inc
and
ret
fsubs
adc
mov
or
fsubr
aam
aam
add
in
fadds
es
mov
enter
pop
enter
ja
pop
je
cwtl
les
dec
aaa
push
cmp
leave
add
pushf
sbb
mov
jno
cmp
dec
dec
inc
lcall
sub
fwait
sub
inc
test
adc
loope
mov
enter
push
mov
or
inc
incl
mov
mov
jnp
aaa
cmp
xor
xor
cmp
in
outsl
in
cmp
add
add
add
xor
fdivrl
xor
xor
xor
or
push
xlat
pop
sti
std
xor
cmp
pop
ss
sbb
or
xor
cmp
and
cmp
cmp
jmp
xor
add
sub
xor
insl
cmp
mov
pop
xor
sub
idivl
sbb
aaa
add
pop
xlat
jne
adc
and
ss
fcomp
notl
adc
adc
mov
mov
pop
xor
lret
insl
mov
xor
scas
insl
fucomi
xor
xor
and
aaa
shll
stos
cmp
pop
xor
cmp
pop
mov
xor
cmp
sbb
or
pop
push
and
cwtl
aaa
xor
ss
xor
pushl
hlt
sub
cmp
rclb
push
fs
insb
sbb
push
xchg
std
pushl
push
xor
into
sbb
push
sbb
mov
mov
and
adc
xor
lcall
push
jnp
and
add
leave
int
enter
insb
push
aad
nop
xor
lds
idivl
sbb
jl
lahf
adc
cmp
imul
out
xchg
aad
js
icebp
adc
push
cwtl
or
pop
sti
in
call
xchg
adc
inc
js
push
out
rcll
dec
push
aad
xchg
xor
nop
mov
mov
pusha
imulb
sub
pop
pop
xor
lahf
lahf
daa
inc
xchg
push
xchg
adcb
xchg
outsl
aaa
outsl
push
jae
dec
in
cmp
sbb
rclb
in
lcall
std
jg
roll
data16
xchg
in
adc
push
div
out
out
mov
mov
sbb
in
adc
jnp
add
mov
lods
adc
mov
outsb
push
mov
sub
jnp
xchg
jnp
adc
mov
cwtl
jnp
xchg
xchg
push
lret
and
nop
clc
popa
fnstenv
sub
aad
orb
jnp
cli
outsl
adc
test
lods
cli
shll
sub
push
addr16
push
popf
sub
or
push
cwtl
daa
les
mov
sbb
adc
mov
insb
xchg
mov
insl
lods
sub
pusha
adc
js
mov
ss
cmp
sbb
push
neg
sbb
pop
insl
outsl
outsl
adc
in
sub
lea
sub
mov
sbb
mov
popa
mov
xor
pop
popf
xchg
outsl
sarb
outsb
mov
or
mov
sbb
insb
hlt
sbb
adc
fsubrp
mov
sbb
pusha
adc
loope
lea
fwait
or
mov
xchg
pusha
pop
cmp
nop
xor
in
negb
and
pop
inc
pushf
xchg
push
lret
insl
jo
jo
add
jnp
in
int3
and
dec
das
orb
jnp
or
sbb
dec
data16
outsb
mov
cmp
mov
dec
sbb
mov
push
jbe
lret
rclb
xchg
and
dec
in
insl
lea
and
sub
test
into
pushf
push
push
outsl
arpl
test
sbb
xchg
fmuls
ret
daa
mov
popa
inc
cli
inc
ror
or
xchg
and
aam
mov
test
paddb
adc
aam
push
outsb
frstor
in
popa
sub
add
lahf
push
aam
and
rorb
enter
mov
or
push
dec
mov
nop
cli
add
push
pushf
sub
xor
sbbb
cli
jo
insb
xchg
mov
fcompl
fistps
sbb
jo
push
xchg
and
xchg
mov
adc
xor
adc
addr16
fistpl
mov
arpl
iret
xchg
js
insb
or
dec
out
or
cmp
rol
js
outsb
sub
sub
inc
or
cwtl
xchg
mov
scas
mov
xor
push
cwtl
pop
sbb
xchg
add
jmp
aam
subb
jns
sub
mov
ret
inc
das
hlt
sets
inc
push
insb
mov
push
fcoms
js
jnp
sub
bound
cwtl
mov
fwait
dec
stos
jecxz
out
xchg
xor
cmpb
xchg
mov
js
outsl
adc
mov
xchg
xchg
fs
push
hlt
fdivr
repnz
loop
sar
pop
sti
aas
adc
clc
loop
adc
jecxz
fdiv
hlt
test
nop
icebp
stc
in
jmp
ret
stc
neg
repnz
cmc
repz
sti
aaa
idiv
std
icebp
loopne
stc
cmc
out
not
stc
and
loop
in
cld
sar
aaa
fdivr
pusha
outsl
repz
xadd
jmp
cs
pushl
ret
out
std
jmp
jmp
xlat
xor
cmp
ds
ljmp
je
add
fs
jae
add
fs
mov
or
inc
fistps
aam
fiadds
fsubrs
add
mov
cmpsl
jp
shrb
adc
lret
cmp
inc
jg
adc
adc
sub
sbb
cmp
cmovo
cmp
loope
push
cld
push
cli
nop
adc
dec
or
cmp
mov
jge
aam
inc
int
enter
in
cmp
push
andl
or
cmp
push
pop
cmpl
cmpsb
or
int3
insb
pop
popa
aam
mov
add
adc
mov
pushl
jbe
jmp
inc
or
xor
cmp
adc
xor
cmp
ret
cmp
sub
xor
call
and
pusha
popl
mov
cmp
mov
cmp
and
and
inc
mov
and
and
inc
mov
dec
mov
push
mov
out
sbb
mull
les
push
dec
push
mov
push
or
hlt
andl
es
or
fdivl
add
add
jg
push
dec
movzwl
jmp
add
adc
jae
fidivl
inc
daa
das
in
cli
lea
inc
js
dec
pop
push
push
aas
mull
and
and
sbb
daa
and
data16
push
enter
and
fstp
lcall
insl
jg
fs
stos
aam
or
mov
push
dec
test
jl
inc
bsf
inc
in
xor
add
out
jl
adc
je
seta
cmp
jae
adc
mov
pop
decl
decl
jne
push
sar
inc
sti
xorb
test
add
mov
jae
jl
xor
lss
mov
inc
and
adc
cmpl
push
pushf
add
xchg
lret
dec
or
xchg
scas
call
jae
inc
cmp
push
cmp
ss
mov
pop
ds
xchg
sbb
push
jne
sub
push
adc
lds
add
adc
inc
xor
mov
dec
lea
xchg
enter
inc
mov
pusha
and
imul
mov
add
fisubl
loopne
aam
mov
inc
arpl
rorb
nop
push
jo
pop
lea
or
xor
pushf
add
adc
daa
inc
push
xchg
inc
jo
cmpl
cld
lea
jb
daa
imul
gs
xor
cs
insb
out
cmpl
or
je
jb
mov
incl
jp
imul
dec
insl
jb
sbb
cmp
imul
imul
mov
pop
clc
adc
cmp
inc
mov
incb
pop
sub
mov
or
adc
daa
add
add
sbb
int3
xchg
inc
mov
pop
jne
push
lcall
movsl
add
aaa
mov
pusha
xor
in
pop
mov
push
mov
jne
mov
outsl
ja
add
or
hlt
cmpl
dec
sti
add
das
inc
dec
xchg
dec
pop
fisubrl
inc
ss
dec
fstl
add
or
jp
add
xchg
xchg
cld
pop
cld
cmpb
sbb
loope
gs
insb
test
sbb
inc
repnz
bswap
daa
daa
jne
jne
xor
je
or
pusha
push
mov
clc
mov
fld
pop
push
js
cld
xlat
mov
test
and
dec
mov
sbb
add
test
insl
dec
ret
pop
fistpll
sbb
cmp
inc
push
imul
test
dec
cmp
dec
jecxz
cmovp
and
nop
adc
sbb
jns
dec
adc
dec
lods
scas
add
dec
cmp
push
jo
addb
sub
add
dec
call
mov
inc
test
and
mov
and
push
push
push
sbb
jo
dec
dec
repnz
lods
adc
adc
pop
lcall
jmp
xor
repnz
lods
pop
add
push
test
and
push
push
add
scas
and
push
add
pop
add
inc
rolb
cmp
and
sbb
mov
or
addl
mov
or
or
push
sub
lods
add
sbb
in
shrb
in
or
push
pop
adc
cmp
mov
lock
add
cmpl
rcl
nop
call
enter
push
and
outsl
jne
out
pop
jb
and
cmp
dec
or
cs
add
adc
daa
inc
push
xchg
push
xchg
push
test
mov
sub
negb
or
test
pop
inc
push
xchg
add
leave
mov
push
xor
or
subl
dec
sub
inc
pop
int3
pop
push
mov
in
pop
pop
jge
adc
ret
add
addr16
das
mov
dec
mov
lret
adc
loope
ficompl
sahf
cmp
mov
subb
aaa
push
or
xchg
scas
nop
jae,pt
pop
rolb
pop
fcom
inc
daa
call
pop
enter
sbb
inc
inc
inc
inc
xor
add
and
popf
inc
pop
scas
mov
adc
rcr
jnp
mov
inc
adc
inc
or
lods
imul
xor
inc
adc
xor
je
mov
pop
adcl
inc
pop
lods
mov
add
inc
mov
inc
jmp
fadds
insb
or
pop
or
xchg
mov
cs
pop
aas
flds
and
dec
sbbb
or
add
in
mov
pop
or
or
inc
jae
dec
aaa
sbbb
dec
sub
aas
adc
imul
push
dec
fs
enter
test
cwtl
stos
pop
inc
ss
sbb
sub
mov
cmpl
mov
fadd
push
in
adc
leave
and
inc
daa
add
sub
fsubrs
jnp
mov
cmp
aaa
sbbl
ret
dec
insl
sub
jno
jnp
xchg
das
addb
orl
sub
daa
mov
nop
pop
leave
or
movq
das
xor
cmp
pushf
rcrb
add
xchg
sahf
xorl
lahf
add
mov
and
add
add
fmuls
sbb
daa
add
add
outsl
fldlg2
add
insl
xchg
test
aas
popf
sub
xchg
leave
add
push
sub
outsb
sbbl
add
push
mov
mov
pop
inc
push
mov
dec
add
push
adc
inc
add
push
or
add
pop
dec
sbb
pop
orl
or
sub
mov
pop
xchg
dec
add
add
jge
add
nopl
cmc
cvtdq2ps
loope
push
addr16
sub
push
mov
mov
add
jmp
ljmp
or
add
aaa
or
dec
negl
sbb
push
fwait
jge
lret
sbb
add
pop
or
sub
xor
fsubr
testl
jne
inc
dec
xchg
or
addr16
scas
ja
bound
imul
jg
xor
push
sbb
add
add
or
sub
and
insl
jecxz
mov
fisubl
rorl
or
addr16
aaa
and
and
insb
and
pop
sub
push
cmp
push
or
xchg
adc
adc
adc
mov
lret
inc
adc
ss
pop
test
and
or
pop
mov
cmp
jne
add
leave
xchg
mov
lcall
or
sbb
push
addr16
scas
inc
fadds
jo
pop
ret
pop
inc
cmp
ss
cwtl
inc
inc
inc
inc
adc
sbb
jle
sbb
imul
ret
cmp
test
imul
cmp
mov
xor
out
fnstenv
sbb
mov
hlt
inc
xchg
jae
jge
jp
sub
cmp
xchg
adc
lret
push
mov
mov
insb
gs
js
xchg
test
fstps
adc
push
ret
mov
sbb
ret
sub
sub
mov
fs
mov
mov
rcrb
mov
inc
mov
pop
fsts
jb
sub
loopne
fsubl
jp
sbb
and
sub
sbb
std
add
insl
and
and
out
jnp
fwait
sbb
push
jecxz
cmp
iret
in
outsb
jmp
test
sbb
pop
xchg
xchg
inc
push
cwtl
insl
fistl
sub
inc
add
mov
out
out
adc
add
testl
mov
fidivl
jno
pop
roll
or
dec
adc
imul
loopne
ja
pop
xor
pop
lods
rcrb
mov
xor
mov
insl
dec
aaa
sub
cld
add
inc
push
cmp
pop
add
jbe
fwait
daa
dec
fdivs
in
inc
sub
lods
rclb
hlt
push
cmp
pop
lods
adc
stos
ja
fwait
mov
sub
push
and
or
fcmovnbe
je
lods
and
movsb
add
add
add
rcrl
jno
iret
out
cli
mov
ja
add
data16
mov
jge
out
cmp
and
mov
loopne
sub
adc
pop
scas
inc
dec
js
nop
out
mov
push
add
test
and
pop
and
int3
add
jb
mov
dec
push
sbb
fistpll
mov
push
ja
loope
inc
scas
add
cmp
sub
loop
sbb
add
xor
and
ss
pop
xlat
pop
loope
orl
arpl
adc
push
adc
jg
cmp
or
inc
cmp
pop
or
xor
dec
outsb
add
jecxz
jl
add
sub
add
mov
out
shlb
int
mov
jg
add
pop
sti
lock
dec
roll
jb
jle
fdivs
add
outsl
sub
dec
inc
pop
or
dec
insl
cs
mov
imul
jge
push
clc
in
xor
jne
popa
sub
add
das
dec
outsb
mov
ret
xchg
cmp
ja
xor
std
sub
or
dec
je
cmc
ja
pop
fdivrl
les
aam
mov
imul
insb
cmp
int3
sub
jg
jl
sbb
ret
inc
sub
sub
sub
mov
and
push
push
sub
or
add
lahf
xchg
or
sbb
cmp
and
push
cmp
xchg
data16
push
and
scas
mov
or
in
push
cmp
sarl
mov
add
outsl
jg
inc
ffreep
inc
xchg
movb
stos
xor
je
iret
scas
popf
mov
mov
loopne
jmp
cmp
imul
jmp
jno
lods
and
in
mov
popa
movsb
lret
add
push
sub
ret
mov
sub
jne
xor
ja
shrb
mov
adc
imul
inc
cmpsb
pop
ljmp
lret
add
jl
pop
fildl
sub
cmp
push
sbb
jge
out
pop
mov
test
outsl
fwait
pop
iret
call
insb
out
test
or
mov
loopne
jb
in
mov
sbb
sub
jne
fsubs
out
daa
js
xor
test
jle
es
and
negl
jno
fisttpll
ja
sub
dec
jle
or
cmp
cmp
xchg
enter
cmp
mov
jl
xchg
mov
dec
popf
adc
fbld
ret
and
cwtl
cmpsl
pop
dec
or
dec
adc
mov
ja
or
ja
ljmp
xor
fistpl
inc
fcomps
push
push
push
push
push
lods
xorl
out
outsl
add
iret
inc
ret
idivl
lea
push
cmp
mov
add
outsl
jle
fmuls
out
cmp
jg
pop
push
add
mov
ss
fistl
enter
mov
pop
daa
mov
xchg
pop
jbe
xchg
icebp
push
push
sbb
push
and
imulb
je
adc
cwtl
test
mov
and
adc
loope
int
push
xor
fdivl
scas
in
add
pusha
les
add
out
xchg
fistps
lock
lods
scas
imul
shll
fisubrs
pop
ret
sbb
ljmp
dec
addr16
sarl
je
xor
gs
pop
sbb
adc
push
pop
pop
cmp
pop
cmp
and
or
into
mov
cs
lods
adc
pop
mov
mov
add
repnz
xor
sub
call
dec
jge
stc
insb
pop
mov
xchg
add
sub
es
scas
adc
sub
cltd
push
popa
test
xor
push
xor
fldl
add
movsb
cmpsl
es
pop
insb
fnsave
inc
ja
call
lods
rorl
cs
jne
lret
hlt
jl
fdiv
inc
ret
jnp
roll
aam
cld
lds
or
mov
sbb
fldenv
jne
aad
adc
das
rol
pop
mov
jae
xchg
xchg
insl
xchg
xor
add
push
js
and
push
ljmp
test
ret
pusha
add
pop
fdiv
add
cmp
sub
adc
mov
mov
les
jge
icebp
sti
daa
shll
xor
div
in
int3
mov
mov
negb
or
cmp
pop
xchg
mov
and
inc
mov
mov
loopne
adc
lret
mov
imul
pusha
cmpsl
pop
dec
and
add
xchg
pop
cmp
leave
aaa
ret
lock
movsb
inc
push
shrl
xchg
into
ret
xchg
fiadds
scas
rcr
insl
mov
test
movsb
jno
jp
sahf
or
punpcklbw
mov
fadd
adc
in
sbb
and
or
iret
mov
insl
popa
out
and
xor
imul
fsubs
cli
push
sub
insb
cmpsb
ret
adc
and
mov
inc
aaa
imul
inc
das
call
ja
fstpt
mul
repz
jnp
les
jp
or
fsubrs
cmp
mov
clc
adc
test
and
adc
out
fcom
cmp
push
test
pop
fldenv
add
mull
ret
scas
push
cmpsb
sub
add
cli
pop
cltd
pop
or
or
pop
stos
sti
fisttpl
mov
jo
int3
cmp
fiaddl
mov
imul
add
popf
ljmp
sbb
pushl
std
daa
je
pop
ror
rcrl
xor
cmp
xlat
xor
jbe
subb
repz
or
js
adc
lock
fistps
and
sar
jle
cmp
cmpsb
and
sbb
addr16
testl
xchg
xchg
jns
or
add
push
aaa
cld
mov
insl
pop
xlat
push
movsb
jecxz
movzwl
cmp
aaa
imul
scas
jae
dec
push
outsb
fwait
imul
fsts
add
lea
or
loopne
es
mov
sub
jo
andl
loope,pn
fiadds
nop
and
imul
popa
ret
or
cmp
ljmp
fnstenv
adc
adc
xor
je
dec
fcomps
cmp
or
xchg
inc
scas
ret
icebp
andb
orl
outsb
xor
lods
adc
int
mul
adc
dec
mov
mov
divl
adc
clc
ret
adc
jno
int3
iret
sti
nop
xor
es
pop
cwtl
sbb
aam
shll
ja
mov
loope
adc
push
push
pop
shrb
fisttps
out
imul
xor
push
mov
roll
sbb
push
inc
add
and
clc
mov
jp
xchg
xchg
into
lahf
push
lods
fistps
mov
fcoms
pop
scas
es
shr
enter
xor
xchg
aad
push
loopne
and
iret
ja
pop
sub
mov
add
push
out
data16
pushw
iret
repz
stos
xor
adc
iret
cmpl
lcall
scas
or
push
pusha
loopne
mov
out
xchg
and
pop
or
cmp
lods
jle
loopne
mov
pushf
jne
shlb
das
ret
rolb
adc
stos
pop
push
stos
xlat
test
es
ss
pop
xor
iret
or
aaa
test
movsl
fadd
pop
mov
jnp
mov
xlat
sub
and
mov
mov
stos
jle
sbb
inc
inc
inc
lds
pop
pop
repz
ja
and
out
enter
pop
clc
push
mov
sti
stos
push
push
or
daa
sbb
daa
pop
pop
cmp
cmp
neg
mov
pop
xor
push
adc
js
insl
lods
xor
test
add
mov
aad
idivl
fistpll
or
adc
pop
sub
arpl
cmpsl
adc
push
nop
xchg
push
insb
test
fwait
jne
sbb
push
jnp
das
test
push
clc
ja
and
lods
out
cmpsl
or
bound
out
mov
pop
push
pop
popa
lods
mov
mov
insl
imul
mov
push
loope
in
xor
fdivrs
out
rolb
aaa
jne
cmc
cmp
aaa
lods
leave
insb
dec
ds
adc
lods
fstl
xor
daa
cwtl
test
sbb
pop
push
test
das
sbb
mov
popf
int3
rol
and
adc
mov
push
sub
pusha
sbb
pop
or
fwait
loopne
sub
in
std
sbb
ret
xchg
xchg
xor
cmp
rcrb
jnp
sbb
jle
movd
mov
dec
lods
add
or
stos
add
push
and
cmp
jp
cmpsl
inc
jae
jmp
push
ret
fsubp
jmp
lret
outsl
aam
cmc
jb
xchg
xor
rep
xchg
mov
pop
dec
fldl
sub
push
outsl
mov
xor
test
jmp
test
rclb
mov
test
sbb
cmp
mov
mov
aad
adc
call
fcomps
out
jo
cmp
sti
lds
shll
adc
cwtl
sbb
sub
cmp
jno
icebp
iret
dec
xor
pop
or
mov
std
or
xchg
or
je
push
sub
adc
mov
and
xor
movsl
mov
mov
sub
lret
mov
mov
push
fcoms
and
xchg
fs
jne
jle
popf
test
jl
mov
data16
or
pusha
adc
mov
fsts
pop
dec
js
xor
loopne
cmp
pusha
insb
loop
pop
das
dec
es
adc
mov
push
adc
sbb
push
cltd
sbb
rcrb
adc
cmp
sarl
fmuls
push
sub
pop
mov
or
je
std
sub
xor
cmpb
out
push
xchg
cmp
or
jbe
and
aam
test
mov
xchg
xlat
movsb
push
xor
mov
or
mov
pop
roll
fimull
cltd
push
cmpsl
pusha
pop
mov
daa
push
inc
inc
fisubrs
sarb
and
cmpxchg
andl
dec
jge
int
dec
iret
inc
std
dec
and
testl
mov
jo
cmp
push
dec
mov
push
arpl
push
jae
test
ja
es
aaa
imul
or
pop
enter
hlt
ficoms
lods
repnz
sbb
pushf
iret
sahf
mov
pop
cmp
lods
and
mov
cmp
mov
jae
pushf
cs
hlt
test
out
push
add
je
fdivs
mov
fildll
jb
fs
mov
xchg
gs
pop
adc
push
dec
mov
loope
shlb
cli
cld
pop
sbb
ficomps
bound
mov
test
loope
cmp
adc
push
and
imul
movsb
mov
lret
and
and
mov
out
mov
sbb
mov
push
push
jge
mov
fcomps
mov
and
mov
test
js
fistl
jnp
cmp
jg
js
fcompl
repz
aaa
scas
add
subl
fnstcw
es
adc
fildl
adc
jle
xchg
push
andb
pop
jae
insb
add
daa
inc
insb
add
insl
fildl
xor
or
mov
pop
xlat
faddl
jle
aas
int3
add
out
rorl
and
loope
dec
test
enter
in
out
in
shll
lret
ja
insb
mov
jo
sbb
dec
stos
scas
and
mov
sub
or
stos
call
daa
mov
push
mov
sbb
dec
scas
sbb
nop
adc
xchg
sahf
and
scas
xor
cwtl
push
out
mov
das
mov
sbb
mov
orl
adc
not
loope
xchg
jb
sub
imul
popa
rcl
out
cwtl
fcmovnb
scas
cwtl
and
rolb
dec
iret
aam
cmpsl
stos
ljmp
je
jmp
and
mov
pop
sub
pop
xor
mov
mov
push
scas
pop
mov
xchg
sub
stos
push
sub
xchg
adc
bound
dec
mov
xchg
mov
xchg
jnp
ret
fisubs
and
pop
out
jnp
ret
ret
xchg
mov
jge
fisttps
sub
movsb
loopnew
shll
in
jp
pop
add
rcll
add
je
das
lcall
and
inc
mov
push
cli
lods
sub
mov
lods
sub
xchg
lea
cmp
mov
roll
loope
test
sub
or
sbb
jne
jbe
movsb
or
mov
shl
sbb
add
sub
sub
mov
ret
mov
adc
pop
sbb
imul
and
clc
div
dec
les
sub
add
incl
jb
fstps
out
and
test
or
call
das
sbb
inc
sub
jo
mov
outsl
mov
sub
shlb
cmpl
pop
and
xor
stos
js
in
popl
add
dec
pop
dec
xor
push
xor
fistps
mov
mov
sub
pop
push
jp
jo
or
add
je
xchg
lock
icebp
xchg
das
cmpsl
imulb
sbb
fisubrs
dec
mov
sub
bound
lods
cmp
sbb
cmp
mov
jle
stc
jp
or
jmp
mov
or
dec
out
les
mov
xor
sub
pushf
jmp
push
pop
adc
sub
lcall
sarl
sbb
mov
loopne
and
ljmp
mov
adc
in
dec
jle
sarb
scas
loop
and
addl
pop
cmp
mov
sahf
hlt
aas
and
es
cmp
aam
jb
leave
fldenv
mov
in
mov
faddl
add
pop
jno
pusha
push
mov
xor
adc
in
xchg
push
mov
xchg
pop
roll
lea
sub
ljmp
faddl
movsl
cli
cld
scas
jp
push
repnz
imul
cli
das
jl
nop
dec
mov
sub
add
mov
push
outsl
adc
adc
iret
movsb
testl
cli
mov
scas
jne
fs
lock
mov
comiss
scas
xlat
lods
push
dec
cltd
and
or
cmc
iret
mov
lods
mov
cmpsl
xchg
pop
inc
lcall
cmpsl
fisubrs
pop
jae
push
data16
jge
xlat
rcl
insl
push
inc
push
or
dec
jg
pop
or
sbb
or
sub
push
push
int
subb
xor
sbbb
jbe
test
aam
outsb
rol
es
xchg
mov
sub
ja
lock
iret
loope
mov
lcall
adc
loopne
cs
pusha
push
fsubrs
jge
mov
jbe
xor
jmp
aas
and
inc
mov
loopne
bound
xor
cmp
out
outsb
xlat
lahf
arpl
or
ret
or
xor
outsb
and
sbb
lret
xchg
fisttpll
shlb
insb
or
notl
das
xchg
roll
fcom
jl
mov
fcoms
rol
sub
cmp
pop
or
or
loopne
mov
ljmp
xor
sbb
mov
sahf
jecxz
shlb
mov
and
and
into
cltd
gs
gs
sub
dec
js
fwait
icebp
pusha
dec
inc
popa
jp
es
push
add
pusha
sar
hlt
daa
pop
fldenv
aaa
cs
and
cmpsb
pop
pop
push
add
dec
mov
pop
mov
pop
das
lea
int3
inc
mov
mov
mov
loop
pop
fwait
aad
mov
mov
mov
sbb
sbb
pop
jo
mov
xchg
dec
ss
mov
add
push
mov
sub
sbb
fdivrl
pop
rorb
cwtl
jge
arpl
lahf
add
daa
mov
outsb
popa
jb
mov
lock
mov
daa
out
push
fwait
movsb
pop
rcrl
leave
dec
mov
rorl
out
dec
mov
iret
int
pop
loope
mov
pop
pop
jge
and
add
fwait
adc
pop
mov
movsl
stc
add
add
push
jae
and
cs
push
dec
jo
rorl
iret
dec
xchg
iret
xchg
xor
sbb
push
mov
ror
lret
cmp
push
add
xchg
mov
xor
outsb
add
ret
pushf
cmp
pop
sub
push
gs
cwtl
add
mov
mov
push
pop
xor
out
rcr
jge
add
das
sub
arpl
xorl
test
jge
jnp
push
mov
pusha
and
in
insl
dec
lods
jae
loopne
scas
or
testl
inc
lahf
inc
fucomi
loopne
in
and
adc
scas
xor
movsb
mov
loopne
inc
inc
xchg
xor
push
stos
cmp
add
sub
jae
and
es
mov
scas
push
adc
sbb
or
mov
decb
xor
xchg
or
push
and
lods
shll
jg
cmp
fmull
and
andl
pusha
jecxz
or
sbb
dec
shrl
shrb
cmp
xchg
and
and
ret
js
and
out
adc
in
jmp
pop
cs
push
push
or
jnp
or
int
ds
insl
adc
mov
ja
cmpsb
xchg
fcmovnbe
mov
add
test
mov
xor
push
les
jle
xchg
loopne
push
and
sbb
mov
lds
ficoms
xor
sub
es
push
inc
mov
lods
xor
adc
sub
ljmp
fcomps
sub
loope
es
mov
push
ret
ret
mov
push
xor
shlb
sub
pop
rcr
sub
inc
cwtl
es
jge
dec
push
test
jmp
inc
das
inc
in
loope
scas
cmpsl
or
add
adc
xor
mov
out
nop
cwtl
jmp
and
sub
jecxz
and
js
test
and
xchg
popf
and
ret
xchg
mov
rclb
sub
loopne
push
sbb
out
adc
xor
xor
movsb
add
rcll
sti
call
xchg
sub
pop
lds
xchg
mov
data16
jmp
xchg
and
or
push
jg
xor
fwait
test
xor
bound
or
cmp
pop
es
mov
loop
js
sub
inc
cld
jle
movsl
test
or
cmp
cs
and
inc
inc
inc
scas
shrl
push
add
loop
add
xchg
cmp
sub
inc
call
sbbb
and
mov
movsb
loopne
out
std
sbb
sti
int
pop
sub
lcall
push
cmp
rclb
or
stos
or
push
mov
push
in
lret
out
xor
add
dec
adc
clc
and
sub
push
popl
pushf
movsb
ret
mov
jecxz
fisubl
lahf
adc
push
movsb
shll
xlat
popf
testl
add
mov
mov
lret
jae
fisubrl
cmp
insb
add
jmp
clc
or
scas
int3
dec
push
add
sbb
popf
adc
mov
int3
adc
or
out
jmp
movl
outsb
push
jne
mov
fdivl
and
xlat
insb
push
sub
push
sub
pop
sub
pop
sub
inc
frstor
clc
push
cs
inc
push
rcl
insl
push
xchg
pop
neg
outsb
cmp
cmp
scas
bound
es
cmp
ja
sbb
ficompl
sbb
cmp
ljmp
pop
addr16
sub
daa
or
insl
sahf
mov
insb
dec
push
stos
sbb
orb
push
ljmp
adc
bound
cld
inc
fldl
push
sub
cmp
add
cmp
test
bound
xor
cmp
dec
add
cmp
add
movhps
or
jne
fldenv
adc
xor
push
adc
jmp
adc
xchg
mov
cmp
andb
xchg
xor
add
inc
and
das
clc
sahf
jp
adc
mov
sbb
xchg
sbb
arpl
adc
rolb
aam
xchg
cmp
daa
xchg
sub
inc
pop
adc
pop
push
dec
out
push
stos
jmp
push
push
jecxz
jmp
pop
adc
mov
dec
loop
mov
jne
stos
leave
bound
mov
lea
mov
cld
or
mov
sti
mov
push
decl
mov
add
and
jge
rcl
lods
popa
clc
push
cmpsl
lret
fistl
push
xor
repnz
and
push
dec
pop
gs
add
lret
movsb
dec
push
scas
xor
pop
mov
cld
int
mov
lret
adc
push
fistl
test
push
inc
or
lods
or
mov
mov
mov
lret
lret
inc
add
je
mov
inc
fsubrs
mov
imul
mov
ret
arpl
adc
test
scas
stos
push
jno
pushl
popl
mov
add
leave
mov
mov
and
rcrl
mov
cmp
add
or
cmpsb
lret
xlat
sbb
dec
imul
jne
into
adc
test
test
adc
mov
inc
insl
xor
xchg
cwtl
xchg
push
and
outsl
stos
fmuls
mov
add
mov
mov
movb
sub
mov
dec
mov
or
push
jnp
lods
loope
divl
cli
jno
dec
and
add
jb
or
cs
lahf
sub
daa
push
cvtpi2ps
insl
push
loopne
fbld
fnstenv
sarb
xchg
ja
aaa
in
mov
dec
inc
cmp
fdivl
mov
cwtl
add
pop
xchg
js
add
fmuls
jle
jmp
adc
loope
inc
rcrb
icebp
add
pop
cmp
xor
inc
and
add
movnti
dec
xchg
xchg
cmpl
jle
rclb
fisttpll
dec
hlt
cmc
es
mov
sub
jno
test
loopne
xor
lods
and
mov
pop
shll
lret
pop
jns
mov
mov
adc
mov
orl
das
ret
adc
das
adc
decl
mov
popf
cmp
adc
fsubs
arpl
xchg
mov
mov
addr16
icebp
hlt
cltd
pop
aaa
sbb
sub
shll
jns
subb
sub
jl
out
insb
scas
adc
dec
fisubrl
scas
imul
and
push
mov
mov
fildll
push
or
loope
pop
stos
dec
jo
inc
dec
xlat
sub
jmp
inc
aaa
and
sub
das
xor
adc
mov
lds
scas
loope
addb
jns
jno
mov
inc
mov
stc
and
inc
sbb
test
mov
mov
rcrl
or
mov
sarl
out
jo
test
or
addl
fimull
or
push
fcompl
xor
faddp
or
sub
mov
mov
jne,pn
ss
add
cli
pop
inc
ds
push
push
or
add
ja
arpl
repz
xlat
push
push
mov
jbe
jl
push
test
dec
cs
daa
mov
or
outsb
addr16
mov
xor
push
sub
mov
inc
push
rclb
adc
mov
adc
sub
add
pop
push
cmp
adc
ret
push
inc
call
in
push
and
sbb
lods
jg
arpl
sbb
dec
ss
adc
out
push
dec
lds
pop
shlw
mov
fadds
pop
addl
add
pop
sub
clc
push
ds
and
mov
cmc
cwtl
add
sbb
popf
pop
sarl
push
jns
insl
adc
js
jecxz
mov
fmul
sbb
sbb
push
sbb
addb
pusha
hlt
enter
or
dec
in
rcrb
push
cmp
lret
ljmp
hlt
add
sub
filds
jnp
sub
loopne
test
fisttpl
sub
aas
sbb
adc
sub
xchg
xor
mov
cmp
test
cmp
pop
dec
jl
sub
lcall
cmp
sbb
mov
jno
rdmsr
push
stos
call
mov
inc
xchg
lret
mov
dec
mov
bound
inc
call
xor
fldenv
nop
xchg
dec
mov
testl
add
loope
pop
inc
adc
mov
sub
call
and
fildl
ficoms
cmpb
jne
jle
dec
rorl
repz
pop
adc
stos
in
dec
mov
inc
pop
aaa
imul
jno
push
fisttps
xor
stos
and
pop
cwtl
push
gs
add
or
and
sub
rorl
lcall
into
adc
adcl
push
mov
xor
push
mov
and
outsl
jge
jo
outsb
dec
insl
adc
setae
push
shll
outsb
or
in
pop
mov
sbbb
ret
mov
dec
sub
fs
loope
xchg
add
loope
icebp
pusha
or
aas
cwtl
xlat
jle
test
rorl
adc
mov
fisubrl
jl
push
addr16
mov
stc
or
cmp
mov
add
es
loop
lcall
loop
adc
xor
sarl
enter
lcall
pop
add
pop
in
icebp
sahf
iret
sbb
dec
es
nop
push
test
insb
mov
dec
xor
sub
cli
mov
jbe
inc
test
aad
js
test
jne
out
jbe
shr
std
jo
dec
pop
fldenv
push
mov
pop
and
sbb
and
pop
arpl
jle
xor
mov
mov
inc
pop
mov
fwait
sub
mov
sbb
sbbb
push
push
lret
fs
ret
mov
lods
imul
xlat
std
add
jb
jo
jbe
xchg
inc
jge
verw
xchg
cmp
or
xor
adc
xlat
add
mov
js
xchg
or
pop
lret
cmp
mov
bound
add
pop
arpl
ret
dec
adc
shll
mov
cmc
mov
shr
and
imull
fcmove
gs
cli
pop
je
mov
cmpl
add
pop
pop
inc
inc
jb
adc
fadds
repnz
test
sahf
inc
pop
dec
mov
and
mov
add
std
push
pushf
inc
or
mov
sar
das
ficompl
mov
or
sub
adc
es
cmp
and
xlat
imul
push
imull
loope
cmp
in
ds
aam
jmp
inc
sub
inc
jae
sub
jmp
les
xor
in
ficoms
ret
aaa
pop
cmp
fwait
add
xor
dec
dec
jno
dec
xor
pushf
inc
fildl
add
cltd
push
int3
push
cmpsl
push
or
ja
mov
jmp
xor
add
jge
add
add
cmp
xor
sbb
sbb
bound
mov
repnz
jne
cmpsl
mov
pop
mov
mull
and
inc
cmp
xor
pop
loope
mov
lahf
jle
pop
push
sub
testl
push
mov
into
push
lahf
sub
das
test
aam
movsl
pop
sbb
jno
xor
cmp
add
sbb
push
ljmp
cwtl
scas
mov
loope
sbb
mov
ljmp
push
pop
test
filds
mul
jp
pop
adc
xor
js
xchg
ljmp
inc
push
jp
lds
cld
inc
pushf
mov
sbb
add
jae
cltd
jb
ljmp
mov
test
xor
adcb
xchg
into
daa
lods
call
pop
iret
push
add
cmc
pop
mov
cmp
or
sbb
xchg
lods
fs
adc
mov
jp
jp
push
xor
jo
pusha
xor
scas
mov
repz
int3
or
or
je
mov
xor
xchg
push
sbb
sarl
xchg
pop
aad
fcoms
test
pusha
push
sub
pop
ja
pop
arpl
clc
push
xchg
add
mov
xchg
loop
xlat
xchg
mov
lahf
loopne
mov
hlt
push
xchg
das
mov
add
aaa
sub
outsl
push
add
iret
cmc
and
add
sbb
arpl
nop
lods
loopne
sarl
sbb
or
fbstp
mov
imul
je
out
cmpsb
je
leave
sti
push
lds
jle
mov
int
std
int3
cmp
sub
add
into
insl
adc
lods
iret
xor
ret
mov
cmp
popf
daa
cli
stc
clc
xor
sub
pushf
es
test
sub
cmp
add
jo
ljmp
push
mov
loop
test
in
lods
inc
loope
cmp
rcl
movsb
dec
add
je
pop
rol
or
in
adc
sbb
pop
fisubl
xor
bound
repnz
cmp
xchg
adc
or
cmpsl
pusha
pop
cmpsl
rolb
cmp
lret
shrl
jno
mov
push
xchg
mov
ret
push
sub
cltd
outsb
sub
lods
mov
fisubrl
sub
sbb
jae
stos
ret
daa
fsubrs
sbb
push
jmp
and
and
sbb
jb
out
xchg
loope
ja
pop
or
out
lds
jle
fsubrl
cmp
jo
subb
sub
lcall
xor
cwtl
inc
xor
push
fists
stos
sub
or
push
or
jecxz
and
inc
mov
xlat
insb
daa
add
mov
xchg
imul
and
int
pop
push
repz
insl
loop
fwait
push
dec
add
imull
adc
notb
cmp
mov
ss
ret
stos
je
cwtl
cmpsb
push
push
fcoms
test
mov
lcall
int
les
xchg
bound
adcb
dec
push
mov
jb
scas
cmp
inc
sbb
pop
cmovg
bound
sbb
cmp
adc
inc
loopne
pushf
mov
vmovlpd
jae
clc
and
sbb
andb
push
xlat
imul
rcl
scas
scas
cmpsl
inc
fcomi
stos
popa
mov
cmp
addr16
sbbb
pop
fcompl
lds
inc
mov
jb
push
push
mov
fucomip
push
aam
aad
jae
inc
jle
sbb
data16
sub
and
cltd
and
xor
adc
dec
mov
jle
inc
into
pop
loope
daa
adc
adc
leave
cmp
fs
adc
adc
sub
lods
lock
testb
mov
pop
in
fldt
pop
and
adc
mov
fcmovbe
sbbl
sub
or
fxch
jnp
jmp
out
pop
pop
or
mov
sbb
jecxz
inc
add
lea
scas
out
pusha
pcmpeqb
fldenv
pop
bound
mov
stc
xchg
lds
out
addb
xchg
jns
or
bnd
xorl
push
arpl
cmpsl
mov
loope
cmp
pop
in
outsl
push
mov
mov
sbb
imul
loope
xchg
xchg
and
or
mov
add
sbbl
jbe
iret
pop
xchg
jae
stc
lret
outsb
lret
iret
and
shll
filds
mov
sbb
sbbl
es
das
ljmp
fldt
xor
mov
call
add
lahf
arpl
setnp
dec
test
fs
xor
xor
jecxz
ret
jno
mov
cmpsl
adc
jmp
or
mull
or
xchg
and
mov
sti
jno
jbe
fsubs
xchg
dec
xorl
subl
jno
xlat
and
je
adc
rcll
pushf
sbb
nop
xchg
pop
fcmovne
clc
fisubs
sahf
lahf
ljmp
enter
roll
jecxz
rclb
pop
jns
cmp
sub
scas
inc
adc
aaa
sbbl
out
adc
push
imul
jb
mull
jle
pop
sti
fsubs
lea
add
movl
dec
mov
popa
or
adc
and
out
int3
push
mov
mov
push
cmp
loop
adc
enter
mov
pusha
data16
outsl
pop
jge
loope
dec
arpl
outsl
jecxz
jp
mov
jle
pusha
mov
das
cmp
push
sub
ja
aaa
push
sbb
jge
jg
daa
mov
fidivrs
pcmpeqw
mov
jbe
cmp
sub
pop
jnp
inc
mov
mov
js
or
dec
leave
insb
adc
or
dec
push
mov
inc
into
push
loope
cmpb
rol
addr16
pop
stos
push
arpl
lea
outsl
bts
sbb
jge
scas
xor
sbb
neg
and
data16
jg
es
and
test
fcompp
inc
cwtl
add
movsb
inc
or
les
jg
pop
add
outsl
mov
mov
adc
flds
shll
push
sbb
xchg
mov
add
xchg
sub
cmp
sbb
or
sbb
aaa
xchg
out
je
mov
mov
data16
lahf
lods
ds
push
sbb
aas
into
iret
lods
pop
add
pop
loopne
stc
pop
jl
ja
inc
adc
rol
push
cmp
rcl
aaa
xor
add
push
mov
fisttps
or
push
insb
and
sbb
mov
sub
mov
push
pop
rorb
or
aaa
stos
in
mov
push
mov
xchg
pop
mov
mov
cltd
xlat
sub
adc
or
mov
inc
jnp
adc
mov
push
test
mov
fld
lods
push
sbb
adc
push
mov
test
fcmovu
add
or
adc
das
inc
subb
scas
add
cmpb
and
scas
aas
filds
out
lods
ret
lods
rcl
mov
adc
stos
aaa
or
mov
test
sbb
add
ja
push
in
pop
shl
sti
outsl
and
push
xor
inc
adc
dec
loope
test
repnz
lods
decl
sbb
rclb
jg
sub
in
insb
add
jmp
dec
fsubs
cmp
rcr
add
inc
es
and
inc
fbld
mov
pop
aam
pop
fildll
pop
shl
cmpsl
xchg
adc
fnstenv
ljmp
pop
push
sbb
popl
bound
loope
mov
xor
fdivl
stos
pop
add
mov
je
or
or
pusha
sbbb
push
inc
mov
jecxz
xor
loopne
cmp
fnstenv
sbb
aaa
es
movsl
enter
add
imul
pop
popa
add
sbb
jmp
addr16
outsl
add
ja
dec
add
xchg
loopne
imul
add
out
iret
sub
fcoml
cmpsb
lret
dec
mov
sub
sbb
popf
je
cmpl
ret
out
inc
mov
nop
jnp
pop
mov
add
fdivp
jbe
rorb
inc
in
jne
xor
jmp
xchg
pop
inc
sub
nop
or
adc
pop
xor
in
add
push
mov
cmpsl
xor
dec
cmp
inc
ja
in
jae
jo
sub
cmp
pop
dec
xor
sbb
adc
stos
sbb
imul
out
xor
jo
xchg
inc
push
std
dec
add
xchg
lods
jno
cmp
out
scas
cs
sub
lock
aas
inc
lea
mov
iret
and
push
mov
mov
cmp
add
cmp
fidivl
push
iret
out
arpl
jns
xlat
or
mov
inc
adc
pushf
fwait
insb
xor
imul
cwtl
add
cwtl
dec
inc
push
add
or
pop
adc
aam
cld
sbb
das
jb
hlt
faddl
push
aad
sub
adc
inc
jp
jae
push
inc
fs
dec
inc
or
add
lds
lret
bound
and
sti
shlb
or
sub
or
out
insb
jae
add
sub
pop
mov
jle
loopne
andb
adc
jnp
jl
and
scas
jp
lds
jnp
inc
testb
repz
stos
push
add
cwtl
xor
add
ret
div
stos
inc
jbe
sbb
sbb
xor
sub
pusha
fcmovb
daa
decl
add
idivl
aad
cmp
testl
push
arpl
mov
dec
dec
in
loope
mov
ret
fistpll
imul
pop
sub
push
fwait
jo
mov
jp
adc
cmp
pop
add
ja
push
xor
sbb
out
popa
push
pusha
iret
inc
inc
arpl
mov
xchg
add
test
add
jle
inc
mov
incl
scas
xor
push
stc
test
adc
adc
push
movsb
jo
imul
arpl
sbb
jbe
jbe
and
xor
loop
stos
add
or
mov
mov
lods
or
fistpll
inc
es
pop
shrl
jmp
add
inc
lods
mov
or
das
sub
les
ds
lcall
adc
dec
hlt
lods
xchg
mov
hlt
idiv
inc
lcall
sub
xor
test
dec
lret
adc
repz
push
jne
int
xor
stos
push
test
jmp
test
icebp
jb
jmp
and
int
hlt
lret
sub
int3
jb
fs
lcall
stos
rcrl
rcrl
inc
sbb
sarb
sbb
dec
sbb
inc
xchg
pop
add
pop
scas
rclb
ret
movsb
sbb
cmpsb
lock
sbb
pusha
mov
and
push
add
movsb
or
dec
clc
sbb
mov
mov
imul
mov
lcall
dec
mov
push
js
adc
mov
xchg
dec
daa
jge
xchg
es
mov
rcl
ja
jg
push
das
ds
mulb
inc
subl
inc
and
sub
mov
vpsrld
setp
jnp
lods
mov
cmp
scas
mov
out
or
icebp
pusha
fcmovnb
and
lret
iret
adc
add
or
shl
mov
loope
xor
inc
adc
push
cmpsb
out
push
cmp
push
mov
sbb
adc
mov
sbb
int
jo
xlat
enter
lods
sub
pop
sbb
and
dec
add
in
and
push
lcall
mov
pop
mov
stos
popa
and
cmpsb
mov
pop
cmpsb
aad
mov
mov
or
inc
and
mov
in
cld
and
and
outsl
sub
add
data16
mov
or
pop
sub
xchg
xchg
fisubs
and
movsb
xor
aas
iret
pop
xchg
lods
xchg
ja
and
das
loop
sub
push
or
dec
jp
sub
push
xor
pop
push
fisubrs
pop
popf
sbb
push
aaa
and
lds
xchg
movsb
je
mov
sbb
or
jp
shll
mov
sbb
mov
cmc
lcall
aas
movb
cmp
mov
cmp
mov
lcall
out
dec
scas
add
aam
test
rcll
in
push
jge
push
mov
shl
adc
iret
jmp
stos
pop
adc
sar
inc
mov
movsb
push
scas
or
daa
jecxz
fcmovnb
sahf
pop
scas
dec
int
push
adc
xchg
lods
add
push
xchg
cmp
outsl
inc
pop
hlt
xor
sbb
addr16
pop
xor
loop
pop
sbbb
xchg
xchg
xor
pop
add
out
add
ds
test
push
mov
stc
movsl
inc
adc
flds
and
mov
mov
push
sub
stos
femms
arpl
fcomp
and
push
mov
inc
pushf
sub
xor
xor
push
cmc
add
push
ret
pusha
mov
mov
mov
jnp
rorb
clc
jb
in
mov
dec
push
push
jne
or
lret
daa
push
jmp
xor
mov
aas
pop
addl
jmp
inc
and
and
lret
je
or
out
push
mov
sbb
pushf
mov
inc
sub
pusha
call
lods
test
sub
sub
xchg
xor
push
mov
out
cmp
and
add
ss
or
rcrb
mov
loop
pushf
pop
adc
or
push
xchg
pop
dec
jge
test
xor
and
push
add
ret
lea
fisubs
clc
in
data16
dec
and
loop
adc
ret
mov
fadd
jnp
mov
shl
jmp
mov
inc
nop
ljmp
sar
add
adc
jle
call
int3
push
imul
add
cmp
cmp
cmp
mov
push
test
dec
add
or
xchg
scas
xlat
subb
add
ljmp
mulb
push
mov
mov
shrl
cs
inc
push
adc
fcomp
sbb
adc
mov
xchg
and
lret
adc
aas
shll
sbb
or
push
jmp
and
mov
jno,pn
xorb
or
or
aad
xor
int3
lea
iret
mov
cmp
sbb
sub
fs
test
je
or
stos
adcl
cmpsb
es
jne
sub
jns
mov
or
mov
movsb
fsubr
mov
sub
pop
mov
or
cmp
sub
loope
push
divb
add
cmp
sub
and
add
cmpsb
xchg
shrl
push
arpl
inc
mov
addl
pusha
push
mov
sub
push
and
clc
cmpb
daa
in
ss
arpl
jo
adc
sub
pop
lret
pop
pop
add
out
jb
mov
sub
mov
std
and
stos
inc
jp
sbb
and
das
cmpsl
repnz
add
push
mov
mov
and
ret
loop
sub
and
sbb
and
pop
ret
fwait
aas
xchg
xchg
xchg
test
je
lret
mov
and
mov
cmp
nop
out
jmp
stos
pop
iret
xor
jae
adc
cmp
push
sub
shl
aaa
mov
sbb
test
insb
add
jno
rcrb
jle
sub
pop
pop
mov
lcall
or
inc
and
adc
push
popf
push
xchg
inc
jecxz
xchg
in
stos
sbb
mov
dec
test
xor
mov
add
das
fadds
push
es
subb
lock
mov
pop
jmp
add
dec
adc
in
adc
cs
sbb
and
mov
rcrl
jb
bound
xor
push
inc
mov
or
and
mov
sbb
pop
lods
inc
jb
fsubs
insl
or
and
cs
jl
iret
out
outsb
and
mov
popa
adc
leave
push
push
add
test
or
andb
lret
rorl
popa
jge
daa
cltd
inc
add
hlt
push
lcall
inc
pop
fists
dec
sbb
cmp
jg
mov
arpl
pop
and
fmull
jp
sub
aam
aas
nop
test
inc
adc
mov
xor
add
xor
lods
js
jl
cmp
jbe
dec
popf
inc
clc
cmp
lock
ds
adcb
push
shrb
jg
mov
pop
mov
mov
mov
lock
xor
stos
cmp
xor
inc
mov
cmp
cmp
clc
movsb
ss
mov
in
jnp
mov
outsl
jmp
jl
dec
xchg
sbbb
xor
es
mov
xor
cmp
les
cmc
orb
push
popf
insl
push
fdivrs
push
je
adc
pop
int
dec
lahf
sbb
dec
andb
stos
and
mul
es
pop
shll
fisubs
and
addr16
testb
mov
or
call
fs
dec
ds
inc
xchg
test
inc
mov
xor
movb
jecxz
xor
mov
cmp
sub
jo
pop
fst
sbbb
das
push
cmc
pop
nop
fsubrl
xchg
dec
add
aam
mov
in
dec
push
fildll
dec
inc
and
decl
jns
ss
mov
int
stc
mov
and
daa
scas
adc
push
jecxz
bnd
enter
icebp
mov
xchg
sbb
in
inc
ds
sub
sub
sbb
xor
int
inc
test
sbbb
jno
scas
movsl
dec
es
mov
push
daa
sbb
sbb
inc
xorl
pcmpgtb
test
push
jno
js
mov
sub
sbb
fcmovne
mov
jnp
dec
cmc
lret
mov
jo
mov
inc
addr16
stos
repz
mov
mov
shll
push
cs
adc
lcall
fsubrs
xor
inc
out
mov
xlat
aaa
dec
int3
sbb
mov
and
mov
fucomp
daa
add
mov
ja
gs
clc
in
or
stc
inc
mov
testl
add
rcll
add
ret
push
sti
adc
jg
mov
cmp
push
fcoms
das
jmp
lods
cmp
or
mov
fidivrl
dec
sbb
loope
pop
scas
loopne
adc
add
pop
mov
stc
ret
cmp
xor
and
dec
in
add
jl
mov
arpl
cmp
aad
sbb
shlb
or
mov
aaa
push
mov
mov
add
fists
out
flds
das
push
ja
roll
lea
pop
push
popf
mov
push
cmp
dec
inc
inc
lods
mov
or
inc
or
jl
xor
fs
push
sub
in
and
push
dec
loop
dec
and
push
lea
sub
data16
cltd
add
cmp
mov
orl
hlt
bound
out
lods
clc
lcall
lods
add
push
and
jp
sbb
sbb
lock
xchg
ja
mov
loop
xor
int
pop
pop
xor
stos
scas
adc
adc
test
adc
push
out
fdivl
inc
bound
inc
icebp
and
mov
popa
gs
adc
inc
fiaddl
push
cmp
push
movb
add
stos
notl
sbb
or
add
xor
mov
ss
mov
push
ja
push
sbb
into
pop
loope
fdivs
and
push
lcall
add
or
xor
adc
popf
and
pop
xor
stc
cmp
outsl
dec
aad
subl
pop
push
push
pop
aad
sbb
jle
jno
aad
push
inc
fsts
sub
jecxz
out
je
mov
xor
xor
push
add
mulb
sbb
popa
push
cmp
js
sti
jo
loope
sub
pop
adc
aad
push
xchg
insl
cld
adc
mov
mov
stos
int
sbb
jae
roll
fdivl
loopne
jl
xlat
int3
js
cmpsl
ds
push
and
xor
push
cli
add
and
xor
in
sub
cmp
or
pop
mov
dec
rolb
mov
dec
adc
in
xor
movsb
pop
pop
imul
push
fisubrs
and
jbe
insb
int
outsl
sub
xchg
ss
and
add
mov
enter
add
jae
add
aad
mov
sarb
pop
dec
and
fsubrs
iret
add
aad
iret
es
pop
in
clc
aam
add
lret
icebp
push
in
and
push
mov
nop
jnp
pop
add
push
out
test
xchg
insb
das
je
dec
in
mov
push
mov
cmp
mov
pusha
mov
sbb
hlt
fdivrl
out
out
add
xor
insl
call
psubsb
jmp
jae
jbe
imul
pop
jnp
xchg
push
ja
cli
push
jnp
scas
xor
das
add
add
jbe
push
add
jns
mov
sub
or
dec
in
push
add
iret
cmp
push
or
dec
pop
or
jle
invd
push
xor
js
dec
mov
mov
and
inc
das
pop
inc
push
jno
dec
sbb
mov
and
mov
in
cmp
mov
adc
fidivrl
sub
push
mov
out
out
sbb
out
push
pusha
inc
rcr
sbb
call
lods
clc
mov
ret
loopne
imul
sbbl
push
xchg
xchg
in
out
cmp
pop
and
or
push
test
jns
lcall
insb
sahf
push
shll
faddl
enter
jmp
adc
pop
shlb
push
cwtl
popf
and
loopne
lret
cs
xor
sbb
leave
fsubrs
mov
imul
mov
or
and
mov
in
scas
push
jno
sbbl
es
push
dec
lahf
lds
jp
push
bound
lcall
shrl
or
mov
aaa
ss
fwait
movsb
enter
lret
pushf
or
mov
add
and
mov
push
lock
stos
cltd
sbb
dec
dec
loopne
ss
in
adc
clc
or
dec
jmp
dec
push
xlat
jo
test
divb
pop
cmp
insl
ucomiss
jo
outsl
fstpt
mov
sub
cld
shlb
and
mov
das
pop
call
push
fildl
mov
or
push
cmp
in
push
dec
xor
sub
mov
rcll
mov
inc
sub
pop
push
cmp
or
scas
mov
shlb
adc
dec
mov
pop
subl
shrb
adc
sbb
xchg
insb
mov
ja
cmp
and
mov
dec
out
jne
adc
inc
jnp
cmp
or
add
sub
dec
clc
or
es
imul
jnp
scas
push
loope
mov
push
cmp
ss
adc
xor
fwait
loope
stc
int
outsl
leave
shlb
and
hlt
mov
bound
je
dec
dec
popf
jo
add
dec
movsl
dec
out
lcall
cmpsl
dec
sbb
xchg
imul
xchg
dec
push
dec
sub
sub
outsb
jp
push
in
xchg
into
das
xchg
nop
sahf
and
and
sbb
fs
fwait
jnp
aam
or
orl
xchg
sbb
loopne
movsb
dec
xchg
xor
js
add
and
and
dec
xchg
xchg
xchg
xchg
add
xchg
popf
and
repnz
setl
adcl
xchg
sbb
nop
push
test
mov
sbb
pop
jecxz
js
dec
mov
fsubs
insl
add
xor
imul
xchg
cmc
stos
movsb
arpl
es
pop
xchg
add
xor
dec
daa
adc
jle
outsl
fwait
cmp
jnp
xor
cmpsl
xchg
or
xor
nop
push
pop
repz
xchg
gs
movsb
push
lret
mov
pop
cmc
sub
xchg
orb
xor
pop
add
lret
les
mov
pop
shr
mulb
shl
lods
mov
sub
dec
repnz
sbb
loopne
lea
mov
sub
jmp
cmp
add
test
pop
pop
mov
es
sub
into
in
xchg
into
out
pop
xchg
inc
ss
push
xchg
ja
test
rcrb
rol
sarb
cwtl
mov
loop
and
or
shrb
dec
popf
scas
lahf
inc
iret
mov
push
dec
scas
popf
add
sbb
sub
lcall
jl
jp
shlb
daa
test
mov
adc
or
xlat
xlat
sbb
push
and
mov
subb
stos
in
lds
add
inc
je
xor
pop
adc
sub
aam
or
lea
add
mov
pop
nop
fildl
jl
popa
add
sub
jecxz
orb
sbbl
int
rol
test
and
inc
mov
jle
sbb
jno
cs
lcall
mov
lods
inc
mov
insl
xlat
scas
and
pusha
pop
jmp
mov
lods
pusha
aaa
mov
stos
jns
pop
add
aad
adc
cmp
je
and
lahf
or
loope
jns
mov
mov
add
fcmovu
movsb
push
fisubs
dec
inc
adc
sbb
cmp
or
mov
jmp
js
mov
movsb
pop
jnp
lods
and
in
mov
stos
sub
test
add
jecxz
and
sahf
add
out
or
add
movsb
pop
sbb
inc
pop
mov
int
out
test
lcall
xorl
call
cwtl
dec
into
or
push
xor
jecxz
lahf
dec
lds
icebp
xor
inc
jmp
fldenv
ds
out
imull
and
mov
out
pop
lcall
xchg
cmpsb
ret
jmp
sti
insb
out
mov
and
imul
xchg
sti
sti
sub
sbb
sub
cmp
cmp
jns
movsb
roll
daa
fstpt
cmp
push
fisttps
dec
lret
fcomi
mov
addr16
daa
push
pop
mov
sti
fmulp
shll
push
cmp
push
int
out
movsb
mov
cli
add
push
push
inc
add
subb
inc
fldenv
xor
sub
int3
add
and
sub
cmp
jecxz
iret
pop
test
daa
popa
push
sbb
sub
dec
repnz
jbe
xchg
xchg
adc
movsb
lret
dec
popl
mov
fildl
bound
jle
inc
fbstp
sub
testl
dec
rcrb
outsl
jl
shll
testl
lods
mov
jno
test
sub
popf
je
movsl
fmul
jle
or
dec
test
xor
shll
xchg
movsl
call
inc
and
daa
pop
xor
jnp
popa
dec
sub
xchg
mov
push
fs
stos
or
jb
leave
prefetch
flds
subb
add
pop
sbb
inc
stos
push
scas
sti
jns
fisubs
pop
jmp
jnp
fwait
scas
faddl
inc
arpl
jmp
add
test
pop
inc
popf
dec
test
sub
and
sbb
das
adc
idivl
mov
test
xchg
jnp
pop
out
fsubrl
test
gs
out
mov
and
dec
mov
xchg
and
in
xchg
mov
or
adc
inc
sub
lods
pusha
shlb
jmp
or
sbbb
inc
add
xlat
push
xor
pavgb
inc
and
xor
loop
loopne
jge
je
mov
adc
dec
lahf
and
add
push
mov
stos
fidivrs
leave
adc
das
ret
ret
mov
es
inc
loope
in
push
push
mov
inc
ja
xor
js
push
jmp
in
jae
fld
mov
clc
js
popf
push
ficomps
aaa
xchg
ror
nop
push
mov
test
ja
push
leave
js
push
lahf
iret
xor
mov
daa
mov
fiaddl
mull
and
je
js
pop
inc
mov
mov
lcall
lcall
pop
sub
and
add
jo
xlat
jnp
out
popa
or
push
inc
test
addb
sbb
adc
xchg
hlt
add
jmp
aaa
dec
push
aad
cmp
arpl
and
inc
ja
inc
xor
cmpb
adc
mov
addr16
or
pop
adc
adc
cmpsl
pop
xor
add
out
cmpsl
loopne
and
xchg
ret
xor
rorl
pop
xchg
cmp
add
mov
add
int3
ds
out
push
mov
dec
add
xchg
jnp
adc
push
add
and
cmp
outsl
cmp
sub
shll
shrb
daa
loop
xchg
call
fiaddl
xlat
push
mov
mov
ret
andb
xchg
rorl
mov
adc
cmp
addr16
xorl
or
movsb
jmp
stos
js
or
inc
pop
xlat
and
div
into
xchg
mov
and
mov
es
push
dec
ds
mov
push
daa
jp
iret
inc
lods
add
xchg
cld
jle
xchg
add
push
push
lods
mov
dec
subl
gs
push
and
enter
out
stc
fisubl
cmp
je
mov
sub
adc
icebp
sbb
iret
jne
or
mov
cmp
ret
in
fdivrl
pop
jecxz
mov
adc
xor
ret
sub
mov
daa
push
add
mov
adc
bound
jg
sbb
bound
push
cmp
negl
das
lea
push
and
lret
icebp
push
out
into
mov
push
pop
pop
push
js
pushf
mov
bound
inc
xchg
xchg
or
sbb
je
loopne
ljmp
push
mov
inc
adc
adc
sub
addb
xor
les
jmp
cli
push
mov
push
je
out
cmp
adc
push
jne
rcl
and
mov
call
sub
out
push
or
pop
xchg
adc
pop
inc
arpl
aas
fisttpl
adc
roll
iret
jbe
loopne
es
pop
cmp
mov
mov
or
inc
mov
xchg
mov
sarb
and
psubusb
pop
paddusb
aas
xchg
imul
mov
lock
jp
pusha
adc
adc
xchg
es
mov
jo
fcoml
pop
dec
ja
and
dec
xorl
dec
aaa
test
lods
jo
in
sti
sbb
loope
in
mov
jnp
test
adc
lods
scas
jb
lods
push
add
mov
lret
xor
or
add
push
loopne
sub
bound
pusha
adc
xlat
mov
adcb
pop
in
sbb
inc
addr16
xor
cmp
movsb
bound
out
ret
mov
imul
and
mov
mov
xor
addb
add
add
mov
add
adc
shl
in
adc
add
ret
sbb
and
std
adc
mov
inc
xor
add
into
pop
adc
in
cs
mov
add
add
mov
mov
push
push
and
insl
cli
sahf
add
frstor
loop
jecxz
lds
inc
call
adc
or
xchg
or
mov
adc
rol
aas
or
or
fwait
xchg
and
mov
mov
xor
addr16
sbb
xor
xor
sub
xchg
js
movsb
aam
popa
in
dec
sahf
mov
xlat
cmp
push
adc
lods
xchg
mov
add
cmp
movsb
leave
lcall
leave
sbb
cltd
adc
jp
jne
dec
or
sti
out
push
popa
sbb
mov
pop
rclb
mov
mov
iret
mov
adc
push
test
mov
add
xor
jb
xchg
mov
cs
pop
jo
lcall
je
xor
sub
ss
and
movsb
fildll
cmpsb
loop
insb
push
cmc
stos
orl
addr16
lret
sbb
and
xchg
cmp
cmp
ret
cmp
pop
dec
inc
dec
xchg
push
hlt
mov
mov
inc
cld
sub
xor
adc
mov
push
cltd
jne
mov
add
dec
inc
imulb
loop
pushf
imul
daa
add
and
add
xchg
loop
mov
xor
add
int3
mov
adc
mov
xchg
in
jl
push
les
adc
push
addb
xorl
cmp
insb
mov
dec
inc
mov
orb
popa
movsb
or
pop
adc
sbb
lcall
popa
push
invd
xor
mov
xchg
pop
or
or
xchg
test
dec
jl
dec
mov
orb
adcb
add
popf
add
adc
sbb
inc
sbb
inc
mov
ja
jb
lds
sub
movsb
outsl
into
sub
push
mov
pusha
adc
adc
xor
pop
imul
mov
sub
jmp
daa
sub
sbb
sbb
aam
mov
lods
addr16
or
xchg
js
and
inc
xchg
andb
ret
imul
sar
outsl
ss
outsl
mov
cmp
mov
frstor
xor
mov
mov
sbb
fs
cs
bnd
inc
sbb
adc
iret
fsub
cmp
mov
fisubl
lret
js
call
and
and
orb
and
dec
jb
aas
andb
push
lahf
dec
int3
jb
cwtl
loopne
and
mov
jo
mov
popf
adc
aaa
mov
test
sub
dec
int3
mov
inc
out
add
faddl
cmc
mov
pusha
mov
lods
rcrl
pop
stc
sbb
add
or
mov
xchg
insb
nop
ret
push
cwtl
adc
dec
pop
cld
dec
mov
sbb
cwtl
push
insb
sbb
adc
sbb
push
sbb
xchg
inc
lods
push
out
push
insl
mov
mov
xchg
fiadds
movsl
xchg
or
jecxz
add
xchg
lea
dec
xor
xorl
cwtl
mov
add
imul
xor
and
mov
xor
sub
lea
lcall
push
fmuls
jnp
sbb
xchg
xchg
imul
push
popf
data16
aam
lret
fdivs
test
adc
inc
inc
dec
lret
test
add
lcall
fadds
xchg
lcall
push
add
mov
fnsave
int
jg
arpl
pushf
sti
fs
movsb
xchg
test
adc
outsb
les
cmp
movsl
adc
inc
test
inc
sub
pusha
ja
bound
popa
gs
js
adc
iret
push
add
movsb
push
cld
test
mulb
or
addr16
dec
xchg
jnp
andl
mov
aaa
mov
cmpsb
cltd
dec
sbb
sbb
sbb
pop
nop
push
cmpsb
pushf
adc
add
iret
in
cwtl
and
pop
loop
repz
lds
adc
xchg
int
mov
insb
inc
mov
fcomps
daa
xlat
sub
mov
mov
movsb
sbbl
cmp
cmp
jle
and
jecxz
out
out
jbe
daa
push
sub
mov
shlb
push
adc
sahf
idiv
lcall
mov
mov
add
mov
pushf
shrb
dec
cmpsl
movsl
movsb
lret
loopne
cmp
pop
mov
xchg
nop
leave
cwtl
push
lods
ss
pop
dec
test
into
push
or
add
inc
xor
mov
cmp
sbb
inc
and
or
sub
pop
shlb
ja
in
pop
adc
adc
xchg
shrl
inc
cmpsl
daa
aas
sub
ret
stos
js
jle
or
loope
out
sub
loopne
es
inc
movsl
cmp
xor
fidivs
and
cmp
jecxz
push
mov
cmp
ds
push
xchg
les
fsubl
fmuls
rcl
hlt
adc
dec
xor
out
test
movsb
mov
adc
adc
push
addr16
test
and
xchg
and
mov
test
pcmpeqd
push
stos
stos
sbb
xchg
push
xor
dec
iret
pop
movsb
cwtl
and
inc
sbb
pop
xor
cwtl
or
inc
pusha
cld
loope
shll
insb
out
dec
fcomps
adc
inc
insl
xchg
enter
pusha
mov
sub
jmp
arpl
dec
mov
les
xchg
ret
ficompl
add
daa
mov
pop
pop
jmp
ret
inc
cmovge
add
inc
mov
add
xor
mov
add
mov
sarl
lock
add
pop
mov
cmpl
pusha
mov
push
add
sub
leave
mov
pop
xchg
mov
imul
mov
roll
call
push
adc
mov
add
or
sbb
and
and
popf
fsubs
outsl
and
or
loop
and
mov
loopne
mov
xlat
cmp
xchg
sub
pushf
arpl
add
mov
jg
push
dec
mov
mov
mov
mov
add
add
fnsave
dec
ror
inc
adc
add
test
cmpsl
lret
cmp
adc
and
cmp
hlt
mov
push
fisttpl
inc
cmpsb
sti
daa
pop
push
and
and
nop
dec
push
xor
or
add
cltd
loop
xchg
fs
test
dec
js
int
lods
into
xchg
push
pop
fs
add
add
mov
mov
mov
adc
or
test
push
xor
xor
lcall
push
sbb
sbb
mov
pusha
push
loope
gs
xchg
xchg
push
push
lods
and
add
push
inc
divl
sahf
xchg
pop
add
sbb
loope
in
cmp
push
sbb
xchg
xchg
push
inc
mov
xor
mov
jecxz
mov
mov
aaa
xorl
xchg
aam
hlt
scas
mov
rclb
mov
adc
fildll
mov
pushf
xor
insb
lea
or
mov
adc
add
mov
cmp
or
out
add
pushf
fwait
es
or
pop
mov
or
lcall
xor
jbe
orl
dec
outsl
jns
je
and
jl
mov
test
das
ljmp
inc
aad
and
xor
das
pop
mov
scas
rcrl
les
es
inc
sarb
pop
mov
sbb
mov
cli
sub
dec
mov
and
imul
or
push
push
repnz
add
iret
into
or
roll
loope
iret
das
add
and
aaa
std
xchg
and
push
jbe
mov
orb
and
inc
insl
push
daa
xor
add
push
or
inc
ja
push
daa
dec
xor
subb
test
or
nop
cwtl
aad
jo,pn
mov
cmc
mov
jnp
cmpsl
add
dec
les
inc
les
push
mov
movsb
pop
push
lret
adc
xor
xor
jle
pushf
add
mov
movsb
pop
mov
es
cmp
dec
xchg
mov
nop
scas
outsb
push
aam
and
imul
and
pop
add
sbb
xchg
add
push
test
movsl
hlt
sub
packssdw
mov
mov
xchg
andb
inc
cmp
cmp
js
mov
pusha
xchg
dec
test
xchg
dec
dec
mov
jp
pusha
test
inc
nop
scas
jl
push
or
sub
pop
push
fs
xchg
inc
mov
mov
add
stos
xchg
push
nop
xchg
stos
mov
mov
je
sub
nop
xor
call
jl
insl
sarl
push
push
sbb
push
movsb
out
push
fwait
popa
lret
aaa
and
inc
inc
mov
stos
add
lods
push
push
shr
insl
hlt
jbe
mov
in
stos
push
hlt
xchg
xchg
mov
shlb
cmp
add
lock
out
mov
cmpl
fistl
cmpsl
mov
mov
cmp
pop
test
sbb
add
scas
ss
pop
subl
loopne
sbb
sbb
or
sbb
pop
xor
mov
and
sub
xor
xchg
movsb
es
ret
add
shll
dec
sub
pusha
mov
jns
test
mov
nop
push
and
dec
ret
and
inc
cmc
mov
sbb
cld
adc
je
mov
cmpsl
mov
ds
or
inc
mov
cmp
lds
xlat
or
rcrb
adc
and
dec
test
fisttps
xor
enter
stos
ficoml
push
inc
inc
add
add
pop
jmp
inc
cwtl
add
xchg
shll
mov
and
fcompl
and
or
loopne
cmp
or
fildll
imull
adc
ret
push
imul
push
xchg
sub
push
and
adc
mov
sbb
jle
xchg
pop
or
aam
xchg
or
test
push
mov
dec
mov
jg
shlb
adc
sbb
xchg
inc
arpl
dec
xchg
mov
lret
sub
popf
mov
mov
les
mov
sbb
push
jp
das
mov
push
pop
jnp
xchg
nop
inc
mov
fistl
or
mov
mov
mov
mov
or
add
jge
fildl
and
nop
lock
sbb
push
notb
sbb
sub
pusha
push
cmp
add
insb
call
data16
push
xchg
or
mov
and
test
movsl
pusha
jo
lods
mov
xor
shll
cmp
fnstenv
add
cmp
add
data16
add
xchg
mov
movsl
mov
add
es
test
xchg
sub
mov
sbb
adc
and
cmpsb
mov
or
cmp
call
test
sbb
inc
sbb
loope
adc
mov
ret
sub
add
xor
lods
and
sbb
int
push
pop
push
xor
xchg
dec
mov
push
dec
jl
inc
mov
daa
test
pop
push
movsl
cmp
inc
js
test
push
mov
add
jecxz
test
and
sbb
inc
inc
xor
dec
xor
sub
sub
or
les
xor
pop
lods
sbb
into
inc
push
in
shll
push
shrl
and
insb
push
shlb
sarb
and
jne
lea
popf
xchg
adc
andl
cmpsb
push
adc
inc
sub
adc
mov
jmp
xchg
call
int
int3
push
jo
lahf
push
hlt
daa
add
dec
xchg
xchg
jns
mov
mov
fmuls
dec
or
pop
dec
testl
xor
push
daa
sub
cmpsb
call
mov
enter
xchg
pop
mull
mov
inc
xchg
add
jecxz
dec
loopne
lods
fsubs
and
leave
mov
push
cmpl
push
andl
mov
ljmp
or
js
mov
aas
xchg
mov
aaa
fiadds
dec
push
add
cmp
or
xor
aam
jle
jle
stos
cmpsb
mov
jge
inc
sub
test
jle
mov
fistpll
cmpsl
enter
ljmp
movsl
add
mov
sbb
mov
xor
adc
xchg
aad
or
test
iret
jbe
fadds
ja
push
xchg
into
ret
lods
jg
cmp
mov
cmpsb
or
sub
pop
inc
push
or
inc
sti
data16
rcrb
ja
sub
arpl
inc
or
aam
push
inc
ss
jo
mov
push
leave
xchg
sbbl
cmp
shll
scas
xchg
inc
sbb
les
xchg
in
xchg
push
rcll
and
insl
or
les
fwait
outsb
mov
sub
push
rorl
add
stos
aaa
sub
xchg
js
test
mov
and
das
clc
and
imul
push
inc
lods
lret
insl
mov
popa
adc
rorb
or
fcoml
or
out
add
or
mov
lods
mov
inc
aad
jno
enter
and
sub
mov
es
add
je
mov
daa
lods
pop
sub
out
adc
sbb
int
gs
pusha
inc
xor
add
dec
push
cmp
add
dec
dec
imulb
ret
sbb
jno
das
rcl
mov
sbbb
mov
loopne
mov
adc
inc
movsl
mov
aaa
insl
in
and
or
dec
int
inc
sti
dec
in
ss
inc
add
jge
pop
loop
adc
test
lahf
jg
inc
imul
ret
adc
unpcklps
sbb
dec
and
or
idivl
add
push
jle
lds
xor
cmpsl
in
ret
or
mov
or
daa
andl
add
dec
push
es
insb
push
ret
inc
inc
out
or
lret
in
lahf
lret
inc
fdivrs
xor
shll
pop
inc
stc
mov
inc
jl
shlb
xor
mov
dec
and
add
shll
dec
jnp
dec
fs
push
xchg
lfs
push
inc
scas
cmp
mov
test
test
and
out
imull
pop
aam
cmp
outsb
aas
andb
imul
xor
test
sbb
xchg
mov
or
cmp
loope
lret
or
inc
mov
adc
add
stos
loopne
int
inc
test
test
clc
adc
lcall
test
inc
or
fbld
inc
loopne
enter
dec
dec
cs
repnz
add
mov
shl
je
fldcw
iret
sbbb
addr16
add
and
add
mov
mov
stos
jae
cs
lds
lea
mov
pop
or
lock
movq
xchg
mov
ss
jle
dec
daa
ss
add
push
jbe
scas
cltd
and
popa
bound
test
pop
loope
mov
and
mov
mov
movsl
add
cmp
mov
add
add
fbstp
sbb
jmp
movsb
xchg
mov
push
mov
in
add
sbb
push
sub
fwait
test
sbbl
pop
clc
rcrl
xchg
dec
mov
sub
or
push
cmp
and
es
jno
or
stc
test
xor
add
dec
add
mov
and
dec
pushf
mov
mov
and
fiaddl
fbstp
pop
dec
dec
pop
sbb
insl
add
pop
inc
sbb
aaa
mov
add
pop
push
mov
movsb
data16
stos
adc
mov
xchg
xor
cmp
xor
shrl
jmp
movl
sbb
sbb
mov
mov
movsb
sbb
pusha
sub
rolb
push
push
add
push
xor
js
cmp
rolb
cmp
and
adc
sub
xor
out
add
lahf
mov
lret
es
movsb
cmpl
jo
inc
dec
loopne
mov
pop
sbb
stos
push
lahf
pop
mov
adc
pop
rolb
cmp
cwtl
jge
lods
push
lret
cmp
jp
loope
push
xchg
push
add
adc
and
and
lds
and
mov
fists
push
mov
lods
xlat
lods
loopne
scas
mov
in
andl
stos
dec
inc
daa
pminsw
inc
adc
mov
shrl
js
out
test
cld
xor
and
pop
test
sub
rolb
inc
cmp
or
add
ret
adc
mov
lock
mov
push
or
add
pop
fildl
shll
out
xchg
adc
js
add
jno
fdivl
fsubrl
ss
pop
pop
or
test
nop
cli
mov
js
jne
xchg
mov
sbb
xor
faddl
add
mov
enter
ds
mov
arpl
aaa
inc
call
outsb
dec
outsl
fadds
adc
jle
mov
bound
int3
lcall
xchg
sbb
pushf
cmpsb
and
cmpsl
push
out
les
cmpl
inc
dec
shlb
shrb
xor
xor
push
dec
mov
ja
sti
adc
adc
daa
jl
sub
push
xor
or
lret
sbb
sbb
decb
fcmovne
jae
pop
adc
mov
or
inc
fstp
fldt
mov
mov
shlb
mov
push
shll
scas
mov
ret
sbb
loopne
xor
pop
mov
push
mov
xor
outsb
aad
push
cmp
mov
xchg
jge
sub
cmpsl
and
mov
push
jns
das
ljmp
mov
pop
ret
call
inc
cmpsl
cwtl
add
lock
fidivs
testl
jbe
sub
and
popf
test
jae
xchg
dec
sbbl
push
adc
sbb
xchg
mov
imul
dec
cmpsl
lret
popf
bound
stos
xor
sub
stos
xor
das
and
roll
ss
scas
inc
push
adc
xchg
test
cmp
inc
mov
pop
mov
pop
inc
cli
test
scas
add
stc
cmpsb
or
loope
scas
dec
sbb
dec
inc
cltd
xchg
or
fiadds
movsb
in
adc
cld
iret
push
subl
jg
rolb
pop
or
adc
lods
popa
and
inc
xchg
ss
jg
pop
cmp
enter
pop
pusha
pop
jnp
stc
addb
push
mov
jo
xchg
es
mov
dec
inc
out
pop
fldl
or
js
int
in
push
or
rol
jno
in
sub
cmpb
mov
es
adc
push
mov
add
or
pop
nopl
lret
ss
adc
jns
dec
es
push
mov
push
add
call
xchg
cli
je
je
je
cmp
dec
or
cmp
xor
sub
fdivs
sahf
add
and
sbb
adc
push
pop
int3
loop
sub
lret
lock
pop
pop
xchg
addb
test
add
mov
hlt
lds
dec
aad
or
add
pop
call
ret
xor
loope
fldl
je
or
and
mov
roll
js
test
test
pop
jne
inc
mov
sbb
mov
adc
sahf
loopne
add
dec
cwtl
xchg
or
add
cltd
das
sub
je
lods
dec
xchg
pop
push
ret
pop
daa
pop
inc
pop
push
sub
lods
sti
sub
pop
add
add
stos
aaa
bswap
push
rorl
dec
popa
jp
cmp
aam
sbb
fpatan
iret
xor
adc
test
add
xor
adc
cmp
mov
mov
out
jno
subl
out
mov
shrb
adc
pop
inc
add
sub
int
push
push
adc
icebp
mov
jo
aaa
jecxz
push
mov
push
add
push
add
inc
test
movsb
inc
iret
call
pusha
xchg
outsb
outsb
stos
lcall
push
or
jne
mov
les
lds
xchg
mov
rolb
mov
in
aas
cmp
insl
ss
push
pop
je
jae
mov
inc
jno
test
and
or
gs
popf
adc
jns
push
xor
bound
aaa
mov
mov
mov
rorb
cmpsb
mov
subl
push
stos
cmc
mov
jmp
push
fldt
mov
movsb
xor
or
loop
int3
mov
and
sub
cld
inc
pop
sbb
jo
movsb
inc
ds
rcll
icebp
mov
add
push
pop
into
shlb
sub
sub
insl
aas
push
scas
mov
sbb
add
movsl
bound
jo
xchg
lea
mov
out
into
ss
xchg
push
mov
dec
sbb
or
push
add
scas
mov
aaa
push
pop
imul
sbb
iret
push
fisubrs
dec
and
pop
inc
sbb
xchg
jo
push
add
ffreep
or
cmpb
enter
jp
loopne
xchg
xlat
cmp
or
jp
xor
cmpsb
cmpsb
push
cmp
sbb
mov
imull
sub
cmp
mov
inc
shlb
jo
jge
or
loopne
aas
cld
cs
mov
xor
aad
das
push
push
lahf
and
cmpsb
and
imul
sub
mov
jns
push
xchg
pusha
push
push
pop
sbb
hlt
xor
fstl
and
movsl
xor
push
scas
sub
pop
cmp
fistps
and
int
add
cmpsl
out
out
insl
and
or
xchg
pop
xlat
iret
test
xor
and
push
das
sub
add
jns
bound
xor
bound
je
push
adc
add
mov
adc
aaa
add
dec
xchg
mov
jbe
cmpl
outsb
xlat
pop
inc
jo
xor
cwtl
lock
mov
mov
jecxz
xor
cwtl
das
push
cs
jns
jb
bound
mov
push
and
rorl
adc
xor
sub
sub
adc
xchg
cmp
lods
fcmovbe
or
lea
orb
stos
js
loopne
inc
mov
pop
jo
mov
adc
push
xor
mov
mov
adc
hlt
scas
cmp
cmpsl
es
dec
xchg
shll
and
add
adc
pushf
xchg
and
sbb
xor
jo
mov
jae
xor
test
addr16
mov
sbb
sub
rcl
bound
in
jne
jle
scas
mov
mov
xor
mov
fxch
and
inc
inc
adc
pop
fsubs
dec
mov
xlat
mov
ds
or
lds
and
sub
push
xor
push
or
arpl
and
adc
jge
adcb
cmp
add
js
mov
pop
ficomps
sbb
std
inc
xor
mov
and
mov
ds
mov
pop
cmp
mov
xchg
adc
aaa
pop
adc
test
sub
pop
das
out
mov
jbe
and
pusha
sub
arpl
fsubrs
pop
adc
adc
pusha
add
rorl
xchg
leave
pop
loopne
iret
imul
sub
mov
lea
inc
rolb
mov
mov
call
pop
inc
cmp
rolb
push
test
mov
fdivrl
test
inc
hlt
in
sti
iret
mov
xchg
and
scas
and
es
pop
fdivs
adc
cmpsl
add
or
bound
or
inc
adc
sub
sub
aad
fildll
jle
out
arpl
stos
mov
pop
xchg
mov
mov
add
lods
loop
xlat
or
add
mov
test
aad
adc
sub
jbe
andl
push
pop
aaa
dec
push
repz
andb
xchg
xlat
adc
or
cmp
int
enter
push
js
jne
mov
lds
sub
ds
sbb
fwait
lock
pushf
popa
aas
jecxz
js
subb
push
push
xor
fdivl
jp
pop
push
xor
in
dec
add
test
xor
dec
mov
and
sub
and
jo
rolb
pusha
adc
js
mov
mov
data16
shll
jbe
in
mov
shrb
loope
jo
lock
nop
es
andl
xor
js
mov
roll
push
lock
das
jp
es
roll
jge
pop
mov
iret
dec
and
test
ret
xlat
sub
push
xchg
fisubs
pop
cmpsb
fsubrl
cmp
test
jno
xchg
mov
lock
div
adc
and
loop
mov
fldenv
cmpsl
fmuls
adc
adc
addb
and
ret
pusha
add
mov
pop
sbb
jnp
sbb
push
add
cmp
je
pop
mov
pop
arpl
mov
outsb
mov
pop
imul
loopne
sub
pop
pop
cs
mov
push
xor
push
roll
xor
push
shl
inc
insb
mov
mov
jno
xchg
dec
pop
sub
stos
cmp
ret
add
jno
loop
dec
inc
cs
mov
je
mov
repz
jle
dec
jo
mov
add
sarl
lods
ja
js
jecxz
inc
insb
loope
adc
and
fwait
inc
push
mov
ret
sbb
test
xor
add
or
mov
rcll
sti
ret
shlb
aad
clc
sbb
add
jle
xchg
dec
mov
sbbl
daa
ja
xchg
sbb
sub
roll
cmpsb
dec
xchg
out
loope
or
mov
push
pop
lahf
push
mov
ja
adc
mov
call
imul
popa
lret
in
leave
out
js
orl
mov
decl
push
das
push
jge
xchg
arpl
out
and
movsl
jmp
jp
aaa
mov
daa
cmp
das
and
pushf
mov
mov
mov
and
push
push
ja
add
sub
enter
or
push
add
int
popf
pop
andb
mov
push
lods
push
pushf
fidivs
sbb
insl
mov
jmp
push
ror
aaa
cmp
add
sbb
pop
daa
les
or
xchg
ret
lcall
mov
mov
cmc
mov
les
add
xchg
adc
int
adc
pop
mov
scas
add
pop
clc
xor
sahf
push
sbb
adc
out
and
mov
mov
aaa
addl
mov
out
popa
or
and
mov
mov
adcb
pushf
mov
add
sbb
add
ljmp
ficoml
icebp
dec
mov
sub
mov
roll
fdivl
mov
or
lock
out
imul
popf
mov
or
es
xchg
sahf
insl
or
or
bound
sbb
test
dec
inc
and
xchg
mov
lcall
push
hlt
add
test
bound
sbb
pop
out
pop
dec
inc
mov
daa
add
or
add
mov
push
xchg
clc
outsb
and
daa
jl
and
inc
enter
js
push
dec
les
xchg
jno
testl
adc
mov
mov
and
xor
pusha
adc
inc
push
adcl
sub
add
add
icebp
push
push
cs
jecxz
adc
or
scas
sub
int3
enter
mov
sbb
sahf
in
adc
pop
mov
test
mov
and
pop
roll
andl
adc
inc
je
imul
or
and
sti
scas
stos
mov
sub
add
or
xor
sbb
xchg
sbb
inc
rcl
push
jbe
ja
es
cmp
addb
shll
adc
or
arpl
sti
clc
cmp
rorl
scas
xor
dec
lds
sbbb
push
cmp
ljmp
jbe
push
je
std
subb
cli
addb
and
loopne
shrb
fstps
push
les
cmp
fmull
aad
lock
or
mov
or
scas
xchg
rcl
push
jno
out
or
mov
jns
frstor
jl
insl
movsb
out
clc
in
icebp
sub
cmc
jmp
fbld
jbe
mov
jp
mov
cmp
sub
or
xor
sbb
scas
ja
xor
faddl
and
dec
push
cs
insb
cmp
inc
lods
pop
pop
xchg
xchg
xor
fldenv
shlb
cwtl
adc
add
xor
scas
arpl
xor
mov
in
fwait
sbb
inc
int3
or
xorl
enter
ficoms
dec
pop
ss
cmp
inc
movsb
pop
sahf
push
pop
jae
pop
jo
xlat
sbb
test
sub
mov
push
iret
xor
out
mov
insl
shlb
cmp
pop
sbb
scas
addr16
test
shrl
and
mov
enter
scas
fistl
push
int3
xor
das
push
lds
jno
inc
xchg
mov
das
ja
cmp
bound
mov
and
push
mov
fwait
mov
lods
mov
test
sub
push
push
cmp
pop
sub
and
movsb
and
cmp
inc
fwait
ja
and
inc
mov
repnz
int
cmp
inc
out
imul
xchg
xchg
sub
incl
push
push
push
pand
jmp
jb
lods
cmp
add
ja
push
sub
push
jecxz
ja
inc
dec
jno
cmp
loopne
shlb
lods
jp
cmpsl
pop
das
hlt
mov
mov
jb
add
adc
or
mov
addb
mov
std
fdivp
ds
sub
int3
or
xchg
xchg
insb
fcomip
fmull
jns
data16
jl
or
push
jge
and
cmp
push
adc
jno
call
jo
dec
das
jns
sarb
subl
lcall
andb
mov
and
stos
adcl
test
jle
lods
scas
popf
rcrb
mov
insb
mov
das
test
lret
std
repnz
inc
ja
push
lods
adc
cmp
out
push
xor
ss
jnp
rclb
dec
rorb
pop
cmpsb
out
cmp
ret
in
in
shlb
inc
sub
sub
fwait
push
or
int3
xor
cmpsb
movsl
iret
inc
pop
mov
imul
sub
fdivl
fsubrl
jp
or
ss
negb
cmp
jle
lods
mov
adc
push
pop
or
jnp
lds
or
add
out
add
inc
add
xchg
fcoms
adc
jbe
insl
and
push
pop
push
and
push
push
scas
ljmp
jmp
sbb
jbe
xchg
and
int3
xor
xor
jmp
notb
lods
std
or
shl
push
in
jbe
ds
jno
jbe
pop
das
aaa
add
dec
xor
lods
push
push
push
test
mov
insl
das
dec
fnstenv
pop
push
xor
pop
lods
fmull
and
or
sub
inc
addr16
fisttpl
sahf
lods
inc
inc
mov
fs
push
add
sbb
and
push
insb
pop
cmpsb
sti
add
insl
adc
movsb
add
and
sbb
cs
dec
jle
jbe
pop
pop
xchg
pop
sbb
ljmp
sub
int3
pop
aaa
in
cmpsl
dec
add
push
xchg
pop
push
ds
add
or
add
outsb
fwait
popf
and
push
outsl
enter
fucomp
inc
je
or
push
imul
jbe
sbb
xor
push
pop
sub
xor
inc
or
das
fldenv
mov
sbb
sub
mov
in
or
pop
or
ss
sbb
pop
shlb
sub
xchg
in
cmp
mov
loop
inc
jnp
fistpl
pop
mov
retw
test
in
xor
cmp
or
adc
cmp
pushf
bound
add
roll
mov
inc
inc
das
mov
push
sub
js
sti
mov
mov
cmc
mov
pop
loopne
push
pop
int3
sbb
jmp
xor
aaa
add
inc
lret
fwait
jle
dec
ret
dec
frstor
xlat
in
in
pop
pop
mov
inc
push
sbb
add
adc
cmp
in
sbb
cmp
dec
aas
sbb
dec
bswap
arpl
ja
in
xor
loopne
jmp
int3
cwtl
sub
xchg
mov
int3
push
popf
xchg
dec
xor
mov
xor
pop
sub
repnz
in
cmp
mov
inc
stos
fildll
cmpsl
push
stos
cmp
adc
sbb
ret
mov
dec
or
js
fcomps
jle
inc
push
int3
or
add
int3
incb
pushf
push
lods
fimull
jl
test
jl
movsb
inc
inc
push
mov
aaa
cmpsb
or
xchg
pushw
outsl
pop
pop
pusha
sub
or
pop
shlb
js
insb
xchg
jmp
xchg
mov
fimuls
jmp
pop
xor
jle
cmp
fidivl
pop
pop
xchg
push
mov
fnstcw
push
pop
fbstp
pop
addr16
out
sbb
adc
pop
paddusw
in
int3
int
pop
adc
inc
rorb
repz
jmp
loopne
les
icebp
pop
mov
daa
push
mov
sub
sbb
xchg
movsb
lods
xchg
cmp
mov
or
ja
fisubl
or
pop
cli
jb
push
xchg
mov
lahf
ss
pop
push
adc
pop
inc
pop
inc
or
loopne
add
orl
addr16
pop
int3
adc
pop
hlt
lcall
xlat
lds
and
pop
enter
add
add
cmp
cli
test
mov
and
add
sahf
lahf
dec
mov
push
jp
xor
sbb
les
in
and
jnp
push
add
mov
rorl
hlt
fstl
push
orb
pop
notb
xor
out
adc
scas
and
jg
sbb
inc
gs
lods
pop
push
cmpb
sahf
test
gs
mov
inc
push
inc
outsb
ret
mov
inc
sbb
rcrb
mov
ss
in
pusha
jecxz
aaa
scas
adc
jae
mov
into
dec
push
lods
stos
xor
xor
cwtl
jmp
jno
push
inc
push
outsl
gs
pop
ret
fwait
dec
dec
fisubrs
addr16
je
lods
jecxz
shlb
testl
es
xor
insl
add
aas
lret
pop
ja
icebp
sbb
mov
addr16
in
dec
ljmp
push
jae
lods
rol
out
dec
push
sub
add
loop
push
aaa
leave
aaa
dec
add
daa
mov
xor
adc
mov
cmp
je
icebp
jle
sub
push
push
and
mov
mov
xchg
les
in
inc
int
and
cmp
sub
subb
adc
pop
push
push
hlt
pop
add
xor
sbb
lahf
hlt
ljmp
js
add
shll
jmp
jg
push
mov
mov
adc
push
cli
xorb
jg
xlat
push
pop
sbb
and
test
add
ror
cmp
jo
mov
mov
sub
into
rcll
push
rclb
fistps
or
into
adc
push
xor
adc
and
adc
in
popf
lds
ftst
dec
sbb
inc
iret
push
sub
lahf
inc
pusha
les
adc
stos
arpl
add
iret
into
je
dec
add
aam
jo
inc
ret
pop
stos
cmc
je
pop
rorb
cmp
aaa
sub
hlt
mov
push
fisttpll
push
pop
adc
inc
in
inc
inc
mov
scas
and
push
jmp
icebp
mov
das
xor
sbbb
aaa
dec
mov
push
pop
add
subb
push
les
shrb
push
lods
add
adc
mov
insl
ja
cmp
add
fcmovnb
cmp
repz
or
dec
adc
sub
shrb
pushf
sub
push
xchg
test
xor
push
push
push
mov
ds
sbb
cmp
pop
inc
test
sbb
dec
iret
int3
outsl
push
fdivl
sub
js
add
jge
and
fwait
push
loope
and
nop
stos
add
adc
pop
mov
mov
les
popl
addr16
sub
inc
adc
sub
or
dec
dec
sbb
add
push
xor
add
clc
iret
sub
cmpsb
call
inc
add
loope
sub
cmc
xor
jb
lret
mov
mov
fwait
xor
add
inc
push
es
and
test
mov
mov
push
lods
sti
inc
mov
mov
fisubs
out
mov
test
js
push
sbb
shrl
pop
movsl
lahf
orb
popa
inc
cmp
add
fidivrl
imul
dec
mov
into
cmp
or
adc
in
js
imul
shll
inc
aam
pop
ljmp
adc
or
repz
mov
lods
outsl
cmpsl
lcall
add
sbb
adc
jle
xor
or
movsb
mov
cmpsb
push
jg
add
outsb
mov
push
jp
xchg
dec
cmpsb
aam
sub
mov
cmp
inc
shrl
dec
arpl
jno
fisubrs
scas
stos
call
mov
scas
je
push
sbb
loope
cmp
scas
popf
pusha
dec
out
inc
xchg
or
sub
outsb
adc
xor
arpl
push
fsubrs
pop
xlat
ljmp
loop
mov
ljmp
inc
cli
loop
mov
inc
xor
sbb
shll
in
jge
sbb
fmuls
xchg
mov
mov
cmpb
nop
jns
hlt
sbb
fdivr
repz
push
mov
jg
bound
mov
adc
add
mov
inc
addr16
pop
mov
xor
test
jb
mov
push
push
mov
sub
ds
xchg
imul
ljmp
sub
pop
and
jne
adc
data16
int3
inc
cmpsb
pop
add
aaa
enter
pop
shll
flds
add
mov
loop
mov
subb
mov
or
jle
cmpb
pop
push
shll
imull
push
aad
adc
jno
mov
pop
dec
mov
cmp
jbe
or
int3
out
pop
push
push
dec
scas
pop
add
call
and
orb
orb
icebp
inc
cmp
add
sub
jecxz
out
cmp
fstpt
pusha
add
add
mov
aas
rolb
inc
scas
in
or
cmp
lods
shll
mov
jne
adc
clc
jl
fsubl
test
adc
imul
adc
jno
mov
sub
bound
enter
jo
inc
popf
jbe
ret
andb
inc
sub
adc
sbb
int3
testb
xor
xchg
cmp
popa
xlat
sub
mov
push
xchg
adc
and
jae
xor
xchg
adc
scas
cwtl
das
cmp
push
cld
addr16
sbbl
jmp
adc
jge
mov
lock
nop
mov
mov
push
inc
mov
and
nop
imul
dec
push
xchg
iret
sub
pusha
and
fisubrs
sysexit
push
push
mov
daa
adc
repz
fsub
xlat
dec
or
add
out
fildl
push
adc
ja
sub
test
push
mov
mov
adc
test
cmp
addr16
mov
scas
jle
je
mov
scas
xor
mov
test
cmp
pop
enter
rcl
fisttpl
push
push
and
dec
and
into
xchg
loopne
sti
inc
mov
inc
adc
loopne
jecxz
or
dec
rorb
aam
fmulp
nop
cmp
sahf
mov
and
push
addr16
jne
lcall
and
insb
xor
mov
ret
loopne
loope
sahf
pushf
mov
lahf
into
rcll
and
push
mov
loopne
cmpsb
inc
cwtl
mov
add
jg
cmpsb
ffree
and
fldt
xchg
es
sub
or
dec
xchg
in
dec
push
push
into
lcall
pop
int
loopne
pop
enterw
sahf
push
fildll
adc
ret
jle
scas
push
clc
and
jle
addb
loop
jo
xchg
ds
sub
ja
iret
adc
mov
add
jae
mov
adc
sub
arpl
sub
and
lahf
inc
stos
inc
adc
rcll
xor
xor
jbe
iret
lret
add
cmp
push
push
fwait
sbb
sub
sub
mov
out
pop
je
xchg
movsb
addr16
repz
test
pop
add
repz
or
mov
addl
and
scas
daa
test
and
mov
xchg
sub
pop
mov
sub
mov
rcrb
sub
add
inc
test
push
sub
add
aas
dec
push
or
imul
fucomi
xlat
in
inc
and
mov
icebp
dec
and
mov
inc
jno
or
outsb
inc
adc
out
scas
ljmp
jecxz
mov
iret
pop
cmc
pop
bound
repnz
aad
or
pop
xchg
flds
and
add
pop
mov
cltd
outsl
pop
imul
sbb
lret
clc
lds
pop
shll
bound
mov
outsl
arpl
ss
push
cwtl
xor
in
gs
sub
jno
add
inc
cmovno
fimull
dec
scas
pop
push
lahf
mov
xchg
add
scas
mov
lcall
pop
adc
sub
push
call
scas
or
fadd
addl
inc
mov
outsb
stos
das
sub
dec
push
int3
test
mov
adc
mov
bound
int3
in
push
xor
movsw
call
rclb
call
ret
adc
add
jp
cmp
pusha
or
adc
push
mov
and
popa
insl
or
add
push
jo
or
and
xor
cwtl
loopne
xchg
xchg
push
cmc
ud2
js
cli
stc
rolb
mov
lcall
xor
cli
adc
pop
inc
mov
pop
icebp
sbb
mov
or
rclb
push
mov
xor
repnz
inc
xchg
lahf
adc
enter
loope
fcoml
jnp
cmp
pusha
cld
and
stos
mov
leave
stos
cli
dec
popa
cmpsl
and
adc
push
push
enter
scas
lret
mov
lods
rolb
mov
mov
pusha
dec
adc
sub
xchg
add
out
xchg
rcrl
xor
add
or
cmp
push
jb
mov
dec
divb
xchg
loop
xor
mov
and
dec
and
je
push
dec
mov
fcmovnu
inc
xchg
pop
adc
inc
lock
adc
push
mov
xor
outsb
jnp
popf
mov
sti
negl
nop
adc
je
neg
inc
xchg
js
int3
mov
mov
mov
flds
test
addb
cmp
rorb
ss
jmp
rcll
ds
mov
out
xchg
add
insl
dec
sub
sbb
push
inc
xchg
add
xchg
add
adcb
cmc
bound
ss
push
push
sbbb
fwait
call
sbb
fs
fisubrs
mov
arpl
data16
in
mov
ss
jno
in
jae
jmp
fmul
mov
xchg
cmp
inc
es
add
sbb
xchg
popa
xor
das
cmp
popf
test
pop
test
cmp
sbb
sbb
fwait
mov
fidivs
addr16
inc
adc
xor
lds
shrb
cltd
inc
add
loop
xchg
jl
adc
in
add
sbb
ljmp
add
loopne
cmp
jbe
jo
leave
dec
gs
nop
or
int3
aad
call
adc
pop
add
push
xor
push
adc
or
or
ds
rolb
pop
lods
xor
mov
negl
cmpsb
xchg
cwtl
lcall
insb
stos
push
cmp
pop
filds
jne
jnp
out
inc
das
add
add
sbb
push
add
lea
mov
dec
enter
jo
and
sbb
es
xlat
xor
sbb
pop
aad
dec
ja
cld
scas
or
add
add
psraw
shrl
cwtl
cmpsl
es
or
mov
mull
inc
orb
xor
pusha
inc
fstpt
and
sbb
into
sbb
das
push
push
in
cmp
fisubs
lret
push
cmpsb
cmp
mov
sub
jo
cwtl
xchg
aaa
add
sub
cli
popa
push
xlat
jo
lock
pop
jns
adc
jle
and
or
das
rorb
lds
es
ror
call
dec
mov
clc
mov
mov
add
pop
pop
pop
aad
ss
xchg
js
or
cmpsl
es
xchg
mov
shrl
es
shrb
rcrl
jb
and
push
jg
jb
sbb
jne
ljmp
cmp
out
sqrtps
xor
mov
xchg
xor
mov
mov
call
aas
movsl
push
mov
adc
outsl
adc
pop
xchg
repz
jmp
xor
addb
or
pop
lret
dec
adc
add
and
pop
jne
cmpsl
sub
adc
adc
jnp
cltd
xor
push
pushf
loop
mov
lahf
jle
cmp
ds
nop
jmp
push
add
add
aaa
xorl
popl
ss
dec
add
pusha
adc
pop
ficoms
add
aaa
test
cmpsl
mov
jnp
ret
cs
cmpsl
loopne
adc
lods
dec
add
mov
insl
das
sti
sahf
adc
jg
adc
jle
push
fidivl
out
cs
stos
xor
xor
cmp
or
inc
outsl
je
push
dec
push
test
push
push
mov
repnz
daa
adcb
outsl
jecxz
xchg
mov
pop
sub
clc
test
shrl
sbb
push
adc
or
pop
lds
mov
adc
sbb
loope
xchg
push
test
push
fimuls
imul
cmpsb
xchg
movsb
mov
dec
popa
aaa
es
aaa
xor
shrl
cs
sbb
roll
xchg
inc
push
xor
mov
js
dec
cwtl
adc
jo
addl
das
or
addr16
sbb
jnp
and
lock
jb
fucomp
add
fistpl
xor
push
mov
sub
orl
jge
fcomps
call
ss
and
imul
jge
ret
pop
sahf
lret
iret
cmp
movsb
adc
adc
push
daa
addb
pop
and
push
jge
push
add
fistpll
push
aam
cwtl
outsl
test
pop
into
or
xchg
xchg
add
sub
test
cmp
sbb
pop
sub
cli
rcll
fdivl
sub
stos
adc
sti
mov
push
sar
jp
mov
or
xchg
pop
fists
jle
leave
add
sbb
sub
mov
rep
in
daa
adc
mov
sbb
es
loope
add
call
adc
push
mov
xchg
xor
mov
addr16
sbb
pop
cwtl
cmp
cwtl
mov
sbbl
pop
adc
add
sbb
test
mov
sub
ljmp
in
sbb
push
adc
sarb
dec
in
shlb
hlt
dec
dec
ret
and
add
cwtl
in
push
fists
xor
xor
fists
aam
and
sbb
addb
inc
xor
add
xchg
inc
dec
adc
xor
lds
loopne
nop
mov
sbb
xor
clc
sti
imul
js
pop
and
daa
jp
add
sbb
cltd
mov
cltd
jbe
pop
mov
add
cmp
and
push
xchg
faddl
repz
push
cmp
xor
add
shlb
adcb
adc
lods
mov
adc
fisttpl
rclb
cld
cmp
ret
gs
pop
mov
subb
pop
jle
andb
sar
movl
and
mov
in
arpl
es
in
lea
pop
adc
pop
cs
sbb
out
sahf
push
mov
shrb
popl
adc
cmpsb
jo
add
xor
insb
xor
imul
or
push
cmp
cmpsl
cmc
dec
mov
loope
jge
sbb
lock
mov
pushf
cmpsl
and
cs
stos
jb
and
or
or
rcr
adc
jae
insl
in
arpl
add
jbe
xlat
mov
insl
cmp
imul
pushf
sti
popa
mov
xlat
in
mov
mov
adc
out
sbb
and
and
mov
data16
subl
inc
pushf
scas
push
mov
mov
sbbb
movsl
xchg
push
jecxz
push
adc
mov
mov
add
pop
adc
inc
cmp
xchg
inc
pop
pop
push
rcrl
mov
pop
dec
pop
push
test
jns
sub
fcompl
sub
or
or
push
js
aas
sbb
lcall
push
negl
add
dec
je
add
dec
adc
icebp
jle
cmpb
mov
add
test
sbb
push
cmp
loop
adc
dec
push
adc
orl
cmp
rorb
push
and
adc
lret
fs
jbe
inc
adc
enter
pop
sarl
adc
push
sub
push
and
adc
push
outsl
or
call
movsl
sub
cmp
or
xchg
fimull
mov
xorb
ss
xchg
sbb
dec
adc
push
mov
inc
sub
insb
fstpl
mov
test
push
and
dec
cmc
dec
adc
push
push
or
iret
outsl
nop
sub
daa
adc
inc
mov
shrl
insb
lahf
and
stos
pop
les
in
into
into
xchg
mov
test
inc
fwait
xor
fsts
subl
ret
mov
mov
fnstcw
push
mov
jmp
adc
ja
fisttpl
inc
ljmp
cmp
into
add
sub
outsl
stc
in
xchg
xor
push
mov
pop
ja
mov
popa
outsl
xor
subb
lret
in
je
pop
shlb
insl
mov
pusha
or
js
repnz
fcoml
fidivrl
call
add
and
mov
add
sub
mov
inc
pop
jne
jecxz
pop
adc
mov
outsl
outsl
into
cli
mov
add
sahf
push
out
iret
sbb
add
mov
sbb
int
mov
stc
add
sbb
aad
test
cmp
loopne
lds
stos
bound
push
push
and
fwait
mov
add
lret
cmp
js
push
and
dec
and
or
mov
mov
cmp
push
sub
push
test
daa
ficoml
int3
xchg
push
jns
ret
inc
dec
xchg
inc
sti
push
stc
lods
mov
xchg
pop
mov
sahf
andl
and
subb
hlt
or
push
mov
lods
dec
fwait
and
push
pop
fildl
in
mov
pop
je
lods
movsl
fdivrl
inc
sub
push
pushf
jmp
andb
rol
sub
and
test
push
rcll
cmp
pop
mov
hlt
cmp
aam
aaa
scas
adc
and
adc
jno
adcl
repnz
inc
push
and
loopne
or
cmp
or
xor
idivb
daa
jg
sbb
xor
iret
lds
dec
add
or
add
inc
adc
cli
jl
push
cmp
mov
mov
push
push
cmpsl
cs
mov
xchg
push
inc
push
bound
andb
mov
js
jns
movsb
or
roll
lock
les
cmc
pop
fnstsw
pop
cmp
ja
mov
mov
out
outsl
sub
pop
sub
testb
shll
inc
ja
aas
pop
add
pop
mov
popf
inc
and
pop
in
add
mov
push
xchg
pusha
scas
and
sbb
lods
mov
mov
sbb
es
xor
xchg
xor
inc
add
jo
and
rcrl
dec
shll
adc
shlb
es
cmp
mov
and
leave
rcr
sub
dec
sub
mov
loopne
sbbb
js
bound
ja
sbb
jge
shlb
pusha
fisubrl
and
lcall
add
mov
xor
and
cmp
sub
pop
push
mov
dec
add
adc
dec
in
add
mov
fs
inc
shlb
mov
loopne
addr16
add
pop
aad
loopne
push
cmpsl
jg
sti
loope
lret
sbb
pop
les
push
arpl
dec
add
sbb
jnp
jo
inc
inc
ror
xchg
lret
dec
cli
pop
das
mov
add
xor
jb
mov
add
arpl
xor
js
call
mov
pop
ret
push
cmp
adc
mulb
and
jmp
push
push
and
shlb
sub
adc
xchg
xor
or
mov
adcl
add
xor
xchg
fs
and
test
adc
cltd
rcl
shll
add
push
add
shlb
add
and
test
adc
dec
or
jb
jne
pop
mov
xlat
test
pop
ss
and
xor
js
lcall
pop
pop
push
push
and
js
js
mov
dec
jns
iret
pop
or
cwtl
add
icebp
inc
fwait
jp
cltd
push
and
or
aas
dec
andb
or
dec
sub
mov
ds
inc
xor
pop
push
test
mov
push
scas
sub
lahf
fildll
loopne
ss
popa
fmuls
insl
add
and
adc
stos
idivl
push
sbb
and
mov
add
or
lods
and
es
mov
mov
lret
add
pop
add
loope
mov
inc
test
inc
andl
adc
and
pop
add
mov
xchg
int3
xlat
cmpsl
lods
cld
mull
sub
mov
movsb
xchg
repnz
xlat
push
mov
rol
popa
adc
dec
aad
adc
adc
jle
mov
pop
mov
push
js
push
mov
push
mov
sub
iret
mov
pop
add
jnp
insb
movsb
ja
add
add
out
inc
movsb
mov
das
mov
les
adc
cmc
xor
inc
mov
shlb
or
mov
cmp
cmp
aaa
dec
sbb
stos
lcall
add
loopne
push
fnsave
es
inc
xchg
jne
lds
fnstsw
mov
push
std
out
mov
ja
ja
mov
mov
fsincos
inc
je
les
push
je
mov
inc
push
xchg
xorl
pop
adcb
int
call
test
aaa
mov
pop
push
mov
fldenv
or
dec
add
inc
mov
jo
push
or
outsb
push
pop
aaa
mov
fsub
mov
push
xor
xchg
fcmovnbe
cs
in
es
out
sub
cmp
xlat
push
add
shlb
or
ret
adc
roll
add
push
jo
jp
sub
push
fisubl
dec
lods
cmpsl
out
fmuls
andb
fisubl
jae
cmc
dec
sub
or
sbb
adc
lea
dec
cmpsb
and
dec
add
rcll
push
sbb
lock
xor
add
dec
aaa
popf
daa
xlat
xorb
mov
aas
lods
xor
add
mov
scas
push
test
jle
adc
cmp
and
arpl
cmp
outsl
xor
movsb
loopne
sbb
jl
stos
ss
shll
sbb
adc
add
xor
jge
mov
and
sti
testl
xor
int3
xchg
xchg
sbb
inc
sub
mov
mov
xor
loop
popa
sti
sub
sub
push
mov
ror
mov
push
out
cmp
rcll
or
jbe
dec
push
jne
jb
jns
in
add
mov
pop
xor
enter
jo
add
cmpsb
pop
movsl
insb
dec
int
ljmp
loope
inc
pushf
pop
add
adc
sbb
mov
test
sbbb
or
sub
xor
pop
mov
add
adc
ljmp
inc
test
mov
bound
je
push
shrl
test
popa
sbb
jb
mov
iret
ja
and
iret
in
cmpsb
pop
jno
aam
adc
push
jg
and
je
adc
das
adc
cmp
jo
sarl
or
dec
sahf
mov
mov
aas
push
imul
push
adc
adc
and
lods
nop
mov
dec
mov
leave
stos
lods
add
rol
shl
das
pusha
movsb
mov
in
aaa
insb
push
testl
cmp
add
dec
fidivrl
or
jp
cmc
sub
or
mov
setle
jo
shll
push
js
or
adc
xor
mov
repz
adc
jl
xchg
or
or
ss
leave
xor
mov
sbbb
lret
xchg
push
adc
jp
sbbb
fistpll
sbb
sbb
lds
mov
pop
test
lods
in
aad
pop
stos
add
dec
push
xchg
add
lea
and
stos
mov
sub
cs
imul
pop
inc
loope
and
push
rorb
adc
inc
sti
and
jl
add
pop
arpl
dec
pop
xchg
in
mov
cmp
loopne
shrb
mov
lahf
stos
mov
jae
jne
or
push
sub
push
inc
inc
mov
pusha
pop
ljmp
pop
adc
add
dec
add
and
pop
mov
jne
pop
lods
lcall
push
push
mov
fsubrp
es
xchg
gs
clc
push
xor
dec
inc
adc
aaa
xor
pop
lods
xor
divl
add
sub
in
adc
mov
mov
out
sbb
int
inc
imul
sub
xchg
scas
dec
or
cmp
inc
fisttps
xchg
jmp
fistpll
or
fcmovnb
mov
cs
mov
pop
mov
inc
ret
shlb
leave
xchg
xchg
jbe
aad
xchg
fisubl
loopne
fmull
mov
icebp
add
sub
mov
push
or
or
mov
cwtl
test
and
add
orl
fdivp
ret
mov
lods
lock
out
dec
or
xchg
jmp
xchg
pop
popl
adc
lds
xchg
push
cmp
push
push
mov
int
mov
stos
mov
sbb
es
les
sub
pushl
add
in
lods
shll
mov
out
lods
neg
call
fldt
mov
mov
xchg
stos
sub
push
ja
mov
mov
nop
and
add
je
hlt
or
out
dec
or
xor
push
mov
mov
aad
ret
mov
andl
push
arpl
out
inc
scas
inc
jnp
cmp
popf
sub
jecxz
cwtl
outsb
inc
rorb
pop
sti
lds
xchg
ret
and
push
xor
mov
sbb
aas
ret
or
ja
clc
iret
inc
dec
jp
rorb
lcall
sbb
sbb
roll
xchg
pop
subl
fnsave
scas
imul
stos
lahf
fists
xor
add
sbb
pop
or
jnp
mov
add
add
or
add
jge
and
adc
outsl
lods
inc
scas
addr16
ss
and
pop
int3
iret
cwtl
rcl
dec
je
dec
fwait
and
aad
cmpsb
pop
jbe
enter
dec
add
cmp
xor
mov
rcrb
jle
dec
jb
mov
or
shl
dec
add
rcl
jo
invd
lret
pop
add
xor
adcl
and
mov
js
aaa
ljmp
jae
imul
lock
pop
icebp
imul
lret
fucom
cmp
jl
sub
mov
sbb
or
lcall
into
add
mov
cmp
popa
or
or
push
cmpsl
fwait
data16
es
out
scas
push
jb
dec
cs
dec
xchg
add
shll
stos
jb
and
mov
je
jo
sbb
sub
sti
clc
adc
add
scas
in
inc
lods
ret
xchg
adc
cmpsb
shrl
jl
mov
addr16
addr16
int3
xor
cs
arpl
ret
or
enter
sbb
cli
sbb
subb
cmp
cwtl
shll
jge
add
jg
add
mov
jne
ja
jno
add
stos
inc
aas
fidivs
mov
add
xchg
es
loopne
cwtl
xchg
xchg
call
sub
sub
cli
mov
adc
mov
insb
mov
or
cmc
jnp
push
fisttpll
sub
sbb
xor
mov
push
jecxz
push
cmpl
xchg
xchg
pop
jge
leave
dec
scas
pop
cmp
xlat
add
cs
sbb
add
stos
mov
stos
push
iret
out
sub
or
jns
xchg
psubsw
add
ja
lret
adc
fstl
arpl
mov
inc
in
add
pushf
loope
mov
dec
mov
jne
nop
adc
sbb
out
fmull
out
movb
icebp
addl
adc
pop
rcl
mov
test
cmp
xchg
jbe
mov
fisttpll
pusha
xchg
and
mov
ljmp
rorl
mov
inc
or
insl
push
xor
jge
cli
out
cmc
dec
add
sub
and
jo
ret
pop
ss
or
arpl
sbb
outsl
ror
push
cmp
pop
xor
sub
lods
mov
xor
lock
das
rcl
push
out
mov
and
fcoml
andb
adc
xor
dec
shl
pop
adc
inc
adc
jecxz
xor
mov
mov
cmc
add
imul
outsb
je
shlb
lret
hlt
shl
fidivs
pop
into
pop
add
add
rcll
clc
roll
push
inc
test
push
jmp
jns
aas
mov
and
inc
mov
cmp
into
dec
movl
sbb
mov
inc
loopne
inc
stos
inc
sbb
or
cmpsl
jmp
and
test
fldt
movsb
leave
xlat
mov
xor
fcmovb
fdivrs
idivl
lods
sbb
loope
xor
icebp
stos
cmp
das
mov
imul
xor
sbb
loope
xor
or
stos
js
enter
out
int3
add
fstpl
fstp
andl
in
fdivs
adc
insl
les
gs
fadd
popa
mov
mov
rolb
and
faddl
sub
adc
int
push
nop
jl
into
adc
sub
dec
jl
das
in
add
pop
sbb
mov
sub
xchg
lods
test
cmp
bound
sbb
mov
push
mov
int3
xor
test
inc
das
inc
orl
xchg
inc
add
dec
dec
mov
stc
rorb
fldenv
cmp
adc
jnp
push
scas
xchg
js
cmp
mov
loopne
ret
mov
insb
mov
inc
push
and
sbb
aam
in
adc
push
push
jns
insl
mov
int
add
add
xchg
pop
adc
les
xchg
addr16
sbb
adc
pop
cs
add
add
aad
aaa
jb
sub
and
je
shrb
stos
mov
call
addr16
loopne
jg
push
testl
outsb
aam
icebp
cli
shll
push
aaa
jg
push
in
pop
mov
scas
inc
mov
mov
adc
mov
fwait
cwtl
push
call
and
cs
add
add
incl
jp
leave
mov
scas
shrb
cld
inc
or
aam
push
iret
sbb
xchg
dec
adc
cs
outsl
sbb
aaa
lods
rol
std
stc
cmp
aam
jp
inc
js
inc
xchg
enter
and
xor
sub
cwtl
adc
jmp
sbb
or
inc
push
cmpl
mov
sub
mov
jecxz
aaa
mov
test
mov
push
xchg
fwait
ds
pop
inc
adc
notl
adc
out
sbb
inc
jle
cmp
scas
and
ss
adc
cmpsl
or
cmp
ss
in
pusha
jl
jmp
or
fwait
add
jbe
and
movsb
repz
stc
iret
subb
cmp
lods
bound
xchg
fsubrp
stc
push
jo
rolb
sahf
cmp
ret
shrl
adc
es
popa
out
xchg
xchg
sub
mov
das
push
sub
addr16
les
and
xor
xorb
sub
mov
xlat
cld
je
add
imul
pop
mov
cli
popa
xchg
dec
lds
lcall
fldenv
loopne
outsl
scas
arpl
xor
pusha
pop
iret
and
mov
mov
pop
pop
rol
dec
rclb
push
inc
leave
aas
xor
sbb
inc
clc
mov
add
insb
inc
bound
sub
jno
imul
sub
lds
inc
pop
pusha
js
pusha
addr16
jb
addb
adc
pushf
push
loopne
test
fcomps
push
adc
lcall
sbb
xlat
in
pop
je
daa
mov
sahf
mov
xor
out
mov
push
adc
push
in
popa
lret
imul
mov
mov
gs
hlt
leave
ss
sub
adc
test
pop
inc
lcall
sub
loope
in
insl
inc
adc
aas
push
xchg
mov
mov
shl
fists
push
jo
das
cld
dec
or
mov
aaa
sub
stos
aad
or
mov
cli
lods
into
loop
push
ret
fnsetpm(287
jle
inc
or
xor
shrl
mov
cwtl
lods
xchg
nop
push
andb
stos
out
push
jo
pop
aas
mov
jmp
test
into
sbb
mov
rcr
orl
out
sbb
push
rcrl
in
sahf
xchg
sub
fisubs
mov
sarb
rol
mov
pop
out
dec
cwtl
stc
in
sub
add
idivb
mov
loopne
inc
xor
xorl
repz
mov
scas
lods
pushf
dec
in
adc
in
and
das
stos
cld
lcall
add
int
imul
rorl
lods
xchg
lea
je
out
sub
sub
daa
imul
mov
shlb
imul
sbb
fs
mov
pusha
test
ss
sub
fsubs
js
or
mov
pop
lahf
daa
ret
loop
iret
xchg
fildll
hlt
jg
ljmp
add
int3
js
adc
inc
shrb
scas
push
shrl
sahf
popf
les
jne
je
call
je
lods
pop
mov
jmp
mov
pusha
or
aam
mov
nop
add
aam
aad
mov
pop
aam
sahf
aaa
cld
mov
aam
mov
lds
rcrl
movsl
mov
nop
sub
ljmp
hlt
cli
dec
jne
pushf
lahf
shll
dec
cmpsb
lock
jp
shrb
sub
and
adc
js
fs
jle
mov
lods
mov
mov
adc
js
inc
or
mov
xor
insb
push
aas
push
outsb
fisttpl
push
hlt
cmpsb
call
outsl
and
sub
sub
push
imul
push
sub
test
scas
inc
loopne
pinsrw
lcall
mov
out
or
and
and
orb
and
inc
adc
out
hlt
cwtl
js
and
add
push
xor
ja
or
test
push
mov
movsb
pop
jp
mov
repnz
inc
andb
cmc
cmpsl
stos
push
push
dec
test
dec
jl
push
inc
jmp
or
fldenv
sbb
xchg
addb
mov
add
add
jne
and
das
scas
and
or
pop
and
adc
ljmp
adc
scas
popa
xor
push
shrl
jp
inc
shl
stos
loopne
xor
enter
aas
push
mov
xchg
add
push
scas
and
shll
sahf
daa
jne
fsubs
xchg
sarl
pop
inc
es
fisttpl
or
ficomps
and
inc
cwtl
jo
sub
push
inc
or
arpl
into
das
inc
ficomps
in
dec
fsts
call
sub
dec
inc
push
shrb
and
or
cwtl
sbb
mov
hlt
and
mov
jns
sub
xor
sbb
mov
cmpl
insl
adc
xchg
adc
xor
iret
movsl
mov
rcrl
fstps
or
js
adc
and
orl
mov
add
and
jo
jne
in
dec
es
jl
lret
mov
rcll
mov
mov
je
js
adc
aad
xor
xor
out
fstps
mov
xor
pop
xchg
ficoml
xor
jne
jp
dec
mov
test
push
jge
or
xchg
xchg
pop
adc
aaa
add
in
pusha
mov
scas
jb
fldz
test
xor
xchg
xor
cmp
lods
movsl
aas
pop
add
xor
repz
pop
shrl
xchg
js
lock
xchg
sub
cwtl
orb
dec
and
ss
fidivl
mov
and
sarb
inc
cmpl
cmp
adc
daa
movl
lds
adc
shll
bound
dec
and
xchg
out
push
int
cld
or
jle
mov
pop
in
cli
int3
out
je
push
pop
pop
mov
loope
repz
inc
push
movsb
aaa
pop
repnz
and
push
push
or
aas
fs
jnp
push
sub
sahf
test
mov
jb
fdivl
and
add
mov
sub
add
bound
ds
xor
idivl
xchg
ret
xchg
mov
mov
lods
push
inc
cmpsb
sbb
xchg
push
filds
push
scas
push
inc
push
out
and
aas
mov
dec
aaa
and
sbb
jg
xlat
push
xor
outsl
lea
movsl
test
sub
es
icebp
mov
jle
dec
loopne
test
in
sub
inc
ss
sbb
ljmp
xchg
aaa
inc
and
and
jb
mov
shll
jae
xor
push
les
add
inc
cmp
inc
fmul
andb
push
xor
inc
sbb
pop
push
inc
in
add
mov
ds
mov
out
sub
sarb
addb
push
inc
add
push
test
or
or
sbb
push
and
mov
add
jmp
mov
sub
mov
loopne
cmovne
pop
xor
mov
pop
cmc
and
mov
lock
data16
add
jmp
and
mov
sbb
fimull
ret
fadds
add
stos
addb
addb
and
jp
add
cmp
xchg
or
push
or
push
loopne
xor
pusha
aam
inc
addb
and
cmp
or
xorl
mov
pop
inc
or
mov
sub
jbe
cli
inc
popf
inc
push
daa
in
add
mov
ds
les
outsl
pop
pinsrw
stos
in
push
aaa
and
xchg
es
lods
shrl
and
push
push
cmp
clc
push
add
push
test
ja
sbb
xchg
push
inc
push
jns
xchg
sbb
lods
pop
arpl
pop
mov
add
adc
ds
addb
or
or
and
movsb
stos
sbb
test
mov
aas
cmpsb
fcomp
push
int
xchg
loop
adc
push
clc
or
mov
xchg
loopne
in
and
push
lods
push
xchg
xor
in
and
fcoms
or
or
pop
outsb
sbbb
lahf
lea
int
cltd
sbb
and
addl
pop
inc
nop
fstps
dec
sarl
and
mov
mov
pop
mov
sarb
pop
aam
push
jne
scas
repnz
cmp
xchg
mov
mov
loopne
inc
adc
and
and
jnp
cmc
sub
inc
sub
and
add
scas
sub
xchg
and
test
mov
arpl
xchg
mov
cmp
inc
push
ja
or
hlt
test
adc
pushf
mov
xchg
add
mov
mov
cld
cmc
add
push
jecxz
cmp
jecxz
jge
mov
mov
push
test
pop
dec
add
jo
rorl
mov
fcmovne
or
jmp
push
outsl
mov
or
outsb
ret
push
jg
adc
add
ret
loopne
push
sbb
add
lcall
loopne
xchg
xchg
cltd
repnz
add
movsb
mov
add
add
inc
pushf
sub
outsb
or
adc
lret
cmp
js
xchg
int3
out
sbb
add
sub
bound
cs
push
add
add
out
fwait
push
rorl
push
nop
inc
pop
or
das
sbb
in
dec
or
add
push
adc
add
test
inc
outsl
pusha
push
xchg
sub
jecxz
ds
pop
sbb
sbb
jle
inc
popf
and
sahf
test
je
andl
mov
add
push
scas
xorl
cmp
lods
stos
js
bound
or
push
sti
test
xor
aam
fstl
or
movsb
mov
imul
jmp
rorl
ret
xor
fcoms
adc
jnp
jo
add
sbb
out
mov
jge
jo
dec
push
and
lahf
xor
sbb
out
paddsw
mov
mov
sub
sub
flds
jno
inc
inc
orb
faddl
cmp
and
loope
jne
enter
mov
push
or
fwait
add
and
mov
aas
popf
nop
adc
or
fsubrl
xchg
out
mov
popa
add
sarl
ljmp
mov
add
in
add
sbb
add
roll
pop
or
sbb
testl
mov
dec
stos
daa
jns
mov
loope
add
adc
add
ds
bound
subb
ja
fisttpl
les
ret
into
out
inc
jbe
add
inc
addr16
add
dec
outsl
nop
add
pop
push
and
mov
pop
ret
and
adc
bound
rorl
sub
aam
jno
cmc
inc
mov
and
ret
and
stos
push
cmp
ljmp
mov
inc
ret
or
or
test
int
scas
and
mov
cwtl
repnz
sbb
orb
arpl
dec
inc
adc
lea
daa
push
aad
push
sbb
jge
stc
push
inc
imul
adc
or
nop
aaa
fsubrl
jmp
jbe
lds
in
pop
add
sbb
or
mov
fldenv
push
xchg
xchg
shlb
fsubrs
repnz
cmpsb
jo
add
sub
pusha
jo
outsb
xchg
add
push
mov
cmpsl
call
adc
test
xor
xor
mov
jne
inc
mov
jae
sub
pop
jnp
jge
cmp
les
les
xchg
flds
adc
push
shll
rcrl
ss
sbb
dec
or
inc
fwait
test
jne
ljmp
pop
fst
lret
or
or
jae
xchg
mov
stos
xchg
shr
inc
pop
fldenv
mov
dec
jo
negb
aam
into
sbb
adc
aam
lods
mov
jb
push
ret
stos
mov
addr16
cmpsl
bound
pop
add
ret
imul
or
ret
call
add
xchg
rclb
cmp
aaa
es
push
aaa
or
push
pusha
inc
je
jne
aad
fcompl
add
clc
es
test
int3
add
bound
mov
mull
je
inc
add
jle
jp
push
pop
push
add
xchg
xchg
adc
aam
lret
mov
lret
cmp
pop
cmc
adc
adc
dec
sub
adc
jb
add
and
inc
and
pop
mov
cmp
decl
mov
mov
or
pop
lahf
pop
adc
push
aad
cmp
imul
add
or
out
loope
mov
and
xor
adc
add
inc
cmp
pop
fistpll
ficomps
xor
fdivl
sub
clc
dec
add
cwtl
mov
cli
mov
push
mov
push
fdivs
sbb
je
and
movsl
or
cmp
cmp
das
jae
add
leave
insb
ret
test
iret
or
xchg
shrb
sbb
inc
sub
popa
lea
hlt
in
loopne
mov
jne
dec
pop
xchg
lcall
fwait
icebp
dec
dec
incl
arpl
or
les
or
ss
jbe
js
mov
mov
popf
loopne
add
ljmp
jo
popa
sbb
ret
sbb
or
shl
pop
and
push
les
and
or
mov
nop
mov
cmpb
sub
push
cmp
aad
enter
mov
inc
pusha
and
push
mov
pop
mov
mov
xor
sbb
sub
ss
add
scas
jl
pusha
shll
imull
jbe
lahf
cmpsb
inc
adc
mov
int3
cwtl
fs
sti
push
xchg
cmpsb
pop
sub
sub
in
add
lock
rclb
fildll
sbb
xor
rclb
jecxz
movsb
jo
xchg
fcoml
xor
add
int3
out
shlb
cmpb
mov
inc
mov
sbb
xchg
push
adc
and
xorb
ja
pop
aam
jp
mov
mov
or
jbe
xchg
add
sbb
cmp
pop
sub
jno
jns
adc
jle
jno,pn
aas
add
mov
xchg
inc
jl
adc
xchg
push
sbb
aaa
inc
adc
pop
mov
sbb
shll
cmp
push
sub
scas
idivl
dec
push
hlt
es
jecxz
and
sbb
mov
or
test
outsl
sbb
cwtl
pusha
lods
dec
rcl
add
push
xchg
inc
sbb
xor
out
jbe
sub
dec
push
xchg
pop
sbb
add
movsb
shrl
pop
add
xor
mov
shrl
add
daa
jmp
push
mov
cmp
xor
lahf
mov
jmp
jae
orb
pop
ret
out
push
pop
push
int
pop
fmuls
push
daa
adc
pop
loope
pop
xor
lret
mov
shl
or
cmp
shll
add
js
and
push
adc
and
decb
scas
dec
int3
sbbb
iret
or
cwtl
push
add
jae
rol
jle
add
iret
add
or
js
inc
adc
call
aad
dec
push
mov
adc
pop
aad
out
shlb
daa
mov
out
dec
loopne
xchg
stos
sub
jno
push
mov
stos
cmc
aam
in
loope
xor
ret
lea
push
xchg
je
mov
sbb
adc
fimull
mov
push
loopne
inc
xchg
loope
idivb
add
les
data16
inc
sub
arpl
inc
test
and
and
inc
xor
or
js
mov
inc
add
cmc
lods
mov
cwtl
les
xchg
add
mov
push
push
ss
idivb
or
or
test
xlat
movsb
jmp
adc
sub
dec
shll
sbb
aam
xlat
push
jb
out
rcl
jae
sbb
pop
xor
jo
mov
repz
shrl
and
xchg
ret
mov
test
mov
sub
pop
mov
test
andl
pop
mov
pop
push
push
outsb
dec
test
movsl
stos
add
gs
lock
lds
into
test
ja
pop
jle
insb
enter
arpl
inc
adc
jno
testl
jne
ret
push
add
rolb
push
in
wrmsr
jmp
pop
xchg
xchg
pop
adc
sub
jl
dec
leave
mov
out
lahf
cmpsl
inc
imul
adc
in
sbb
inc
nop
add
add
inc
cmp
cmp
xchg
adc
inc
xor
mov
jge
loop
xchg
adc
add
and
jp
dec
ret
insb
test
jns
ljmp
ret
fcoml
loop
adc
cmp
outsl
movsb
insl
inc
aam
pusha
xchg
pop
adc
ficomps
jp,pn
es
repnz
mov
daa
or
subb
les
xorb
cmp
and
add
jmp
mov
jmp
sti
mov
in
das
and
sub
sub
ja
rolb
rclb
mov
sbb
ds
mov
mov
push
loopne
xchg
xchg
jnp
das
shr
addb
add
sbb
xchg
lahf
loop
inc
adc
and
cmp
test
aad
or
orb
cmc
pop
int
adc
add
push
add
je
add
inc
lock
sbb
dec
add
inc
jl
loop
pusha
and
adc
pop
std
addb
adc
push
cmp
addr16
adc
or
xchg
mov
sub
jecxz
cmp
sbb
jno
mov
adc
pop
add
outsb
pop
or
in
movsb
xor
imul
orb
daa
test
mov
add
cmp
and
cmp
xchg
test
inc
cmp
mov
fistpl
das
dec
imul
pop
push
add
lds
addr16
in
push
xchg
mov
mov
hlt
pop
outsl
mov
aam
rcrb
decl
sar
cmp
into
dec
push
push
push
push
mov
sbb
cmpsl
addr16
jne
test
mov
sbb
loopne
xchg
negb
jo
mov
lds
xchg
loop
mov
nop
jb
xchg
dec
into
cmp
inc
cmc
sub
inc
dec
js
lcall
out
or
pop
xor
icebp
adcb
add
addl
out
push
sub
jae
sub
push
call
sbb
pushf
cmp
or
lods
insb
mov
xchg
and
pusha
mov
dec
sub
push
dec
mov
push
or
test
popa
push
int3
cwtl
adc
bound
jb
les
and
xor
or
adc
dec
fmuls
sbb
js
addr16
mov
inc
inc
push
lock
cmp
add
push
cld
inc
mov
xor
jo
adc
jge
xchg
mov
pop
dec
sub
rorb
adc
aas
jb
xchg
insl
lret
test
mov
out
xor
adcb
bound
sbb
stos
sub
dec
aas
inc
add
and
xchg
movsb
and
sub
and
stos
mov
rcll
cld
dec
icebp
pop
inc
pop
pop
mov
inc
or
movsl
stos
add
pusha
rolb
cwtl
ljmp
push
insl
pop
inc
testl
and
in
icebp
jno
stos
movsb
je
jb
mov
punpckldq
and
aam
add
stos
or
nop
mov
sub
pushf
add
test
jnp
xchg
into
sub
bound
mov
shlb
adc
and
dec
leave
mov
or
addr16
outsl
pop
and
int
cmp
adc
mov
push
inc
nop
cmp
sub
inc
add
testb
iret
jae
sbbl
popa
mov
lcall
test
andl
sbb
cmp
add
inc
cmp
inc
mov
mov
push
mov
jg
mov
jp
dec
push
cltd
mov
rcrb
xchg
fs
and
xchg
push
push
fisubrl
roll
cmp
dec
add
add
pop
stos
mov
inc
addr16
add
sbb
jle
fbstp
sub
dec
mov
pop
add
and
movsb
js
lea
aad
xchg
push
test
cmp
add
jne
xchg
push
push
cmp
and
or
push
jb
ret
dec
mov
add
push
sbb
push
rcrb
sbb
test
stos
sbb
or
or
sub
xor
sarl
sarb
stos
imul
arpl
nop
jle
jl
push
rorl
in
push
insl
popa
ret
xchg
shlb
out
lock
clc
add
adc
into
lock
clc
xor
xor
adc
jmp
sub
adc
push
cmp
adc
cmp
xor
mov
ljmp
sbb
and
clc
out
add
push
xor
xchg
xor
stos
mov
dec
push
cmp
sbb
lea
rcr
test
add
adc
xor
cmc
and
inc
jmp
dec
sub
dec
xlat
mov
nop
or
jp
or
fcoml
sbb
adc
inc
dec
daa
les
filds
js
xchg
jg
adc
test
dec
es
sbb
fucomi
out
mov
std
jb
jge
shrb
shrl
popa
ds
mov
inc
shr
pop
push
arpl
adc
mov
cmp
test
pop
and
mov
iret
jns
ds
or
push
cmp
fisttps
inc
cmpsl
mov
jecxz
or
addb
dec
add
xchg
mov
pop
loope
lods
push
sub
fistl
loope
mov
in
lods
outsb
aas
mov
cmpsl
and
fldcw
and
or
or
mov
or
xchg
mov
imul
adc
lock
bound
and
int
mov
rcrb
loopne
prefetch
mov
cmpsl
pop
hlt
push
cmp
adc
movsb
pop
mov
mov
loope
pop
iret
ror
xchg
add
movnti
push
add
xor
or
rolb
mov
insb
dec
dec
dec
dec
cmpsb
add
mov
test
sbb
out
inc
pushf
data16
call
add
fmulp
mov
push
sub
or
push
je
cmpsb
lods
adc
andl
js
or
pusha
fadds
adc
loop
jg
ja
push
sub
add
loopne
subb
out
or
add
imul
js
int
push
sub
sti
daa
add
das
cmp
enter
xor
enter
rcll
pop
add
add
sub
inc
pop
les
mov
pop
inc
mov
and
mov
mov
ss
out
fstps
mov
aam
scas
pusha
and
lds
mov
adc
pop
add
xchg
and
add
aaa
pop
clc
aaa
int3
mov
adc
fbld
xchg
or
adc
add
sbb
mov
sub
jns
call
int3
lret
xlat
inc
fisttpll
adc
jle
sub
jo
stos
call
pop
inc
lock
dec
sub
inc
mov
sahf
xchg
jl
in
push
and
out
and
addl
sub
mov
je
inc
fists
cmpb
int3
sbb
push
jo
out
lret
dec
adc
lret
mov
pop
test
aaa
jmp
and
cs
sub
pop
pop
test
in
xchg
add
testl
aaa
mov
in
adc
lock
pcmpgtd
and
adc
ret
orb
inc
dec
adc
jne
and
add
adc
test
jl
lock
push
aaa
cmp
xchg
aas
inc
out
push
add
add
adc
xor
sub
ljmp
or
mov
xor
lds
shrl
pushf
sub
dec
mov
sub
rorl
stos
mov
and
in
jae
cmp
dec
cs
push
roll
push
lea
out
cmp
inc
sti
cli
bound
push
stos
sub
push
pop
out
xor
push
or
fildl
mov
daa
stos
inc
lahf
and
call
push
or
jnp
pop
imulb
arpl
fnsave
frstor
or
ja
enter
cmp
cli
push
fs
xor
cmpsl
dec
stos
aam
ljmp
xchg
inc
xor
mov
xor
and
mov
cmpb
push
jo
sub
sub
rcll
push
daa
xor
fsub
cmp
int3
loopne
push
nop
int
lds
lea
cmp
lock
lret
mov
or
add
push
xchg
lret
mov
sbb
das
push
les
push
jle
stos
call
push
add
neg
mov
xor
sarb
pop
mov
sub
xor
call
lcall
push
jae
aam
and
arpl
jp
push
push
jecxz
pop
loop
add
pop
xchg
push
and
jge
dec
mov
add
iret
fucomip
adcb
push
sbb
mov
xor
cs
xchg
add
adc
or
pop
rclb
inc
aaa
add
cmpb
dec
rorl
inc
pop
mov
jle
ret
pop
sub
stos
andb
les
sub
fiadds
pop
add
push
inc
jne
cmp
or
push
push
push
inc
cmp
inc
fs
jne
data16
adc
jmp
mov
mov
xchg
enter
dec
mov
inc
add
out
cmp
push
pop
jns
jmp
ret
push
add
paddw
lods
and
out
and
movq
sub
popf
xchg
xor
adc
jo
mov
sbb
inc
xor
or
int3
test
test
dec
and
iret
insl
out
xor
lret
shll
xor
xor
or
js
test
repz
or
push
inc
jne
sub
jb
pop
out
mov
jae
mov
popa
or
subb
mov
mov
push
pop
outsl
xchg
sub
aam
mov
push
mov
aam
les
rcll
or
jecxz
test
shlb
and
call
push
xchg
shlb
test
lret
and
push
das
mov
xor
out
out
adc
movsb
pop
inc
nop
or
cmpsb
or
pop
sbb
sbb
icebp
mov
xchg
pop
insb
xchg
stos
mov
mov
loop
inc
mov
lret
ljmp
popf
inc
loopne
xchg
adc
pushf
dec
les
push
sbb
push
out
adc
jge
inc
cmpsl
inc
xor
and
andb
jecxz
std
and
sub
mov
xlat
fstpt
fimull
bound
inc
fwait
dec
xor
push
adc
mov
inc
cmp
or
push
es
jmp
enter
mov
rolb
lods
loope
pop
test
xor
inc
inc
stos
sbb
sbb
mov
add
std
jmp
fisubrl
push
pop
xor
stos
loopne
mov
scas
das
cmpsb
mov
lds
lahf
push
lods
dec
and
inc
mov
lahf
and
inc
cli
ficoml
sub
aas
data16
js
jb
add
pop
mov
xor
sbb
pop
and
scas
imul
stos
pop
mov
lods
sub
sarb
movsb
xchg
mov
insl
out
jge
lods
scas
or
clc
aam
data16
out
add
or
mov
pop
sbb
stos
inc
hlt
mov
push
addr16
add
sub
jb
jo
and
pop
xlat
and
sahf
loope
js
in
lods
fistpll
sub
jne
inc
adc
sbbb
fs
cmp
or
dec
mov
adc
add
and
xchg
popf
inc
jge
loope
es
cmpsl
add
shr
adc
leave
jo
cmpsb
clc
or
fsubl
push
imul
mov
arpl
enter
xor
es
cmpb
hlt
pop
add
sub
mov
xchg
data16
lret
jbe
mov
in
iret
pop
push
xchg
sbbb
add
sbb
in
aam
dec
push
cmp
xchg
add
jge
or
jmp
push
dec
js
push
ljmp
lods
xor
jnp
mov
sub
add
outsl
push
push
mov
movsb
jp
les
jno
add
push
jge
push
mov
scas
cwtl
push
fidivrl
push
cmp
add
out
scas
mov
sahf
movsb
mov
loopne
add
pop
iret
daa
mov
dec
inc
out
add
mov
popf
sbb
adc
fistpl
lret
loopne
inc
cmpb
sub
mov
into
add
out
fld1
or
xchg
jne
popf
xchg
aad
fidivs
mov
or
add
adc
ficompl
jecxz
popa
push
aam
repz
and
add
mov
test
test
dec
scas
fdivrs
rcll
sahf
adc
push
add
pop
mov
sbb
or
rcll
pop
xchg
and
cmp
in
test
add
loop
jne
jno
mov
and
es
cmp
lret
adc
add
add
jo
push
sub
fildl
lret
cmp
data16
fstp
xchg
xchg
rcrl
dec
pushf
add
sub
stc
mov
pop
lret
mov
pop
das
pop
out
mov
mov
imul
pop
pop
outsb
or
sahf
sub
push
int3
mov
push
fiadds
ror
jnp
jge
cmp
mov
mov
mov
hlt
lods
and
call
jmp
pop
inc
fwait
test
pop
mov
inc
js
nop
jae
cld
imul
and
les
push
sub
sbb
mov
nop
outsb
mov
popf
ficoms
loop
mov
xor
in
inc
rcrb
adc
mov
add
inc
int
xlat
cmp
push
ret
or
aaa
loope
decb
pop
xchg
sbb
xor
adc
sahf
cli
xchg
fistpl
sub
rcrl
test
jge
pop
or
cmp
mov
jae
or
testb
imul
sahf
stos
or
inc
sbb
add
push
mov
cs
movsb
mov
cltd
adc
xor
ret
jge
lock
adc
ss
cmp
lret
sbb
nop
stos
pop
sbb
ds
dec
mov
pop
int3
inc
movsb
sub
sbb
add
dec
mov
dec
idivl
sub
testl
jo
lock
xchg
out
xor
cmc
push
rorl
mov
stos
test
or
loop
pop
inc
or
ja
or
leave
sbb
cmp
test
sub
test
push
ss
data16
jmp
or
insl
inc
and
int
jns
pop
adc
xor
jnp
and
addb
add
sbb
push
fwait
or
sbb
inc
test
pop
in
jne
mov
inc
call
sbb
push
dec
test
cmp
mov
scas
sub
mov
pop
mov
sarl
into
add
pop
mov
loope
in
rcll
add
add
loopne
mov
adc
add
mov
or
int
inc
and
outsl
inc
xor
add
sub
fs
mov
adc
ja
fmuls
inc
int3
mov
mov
hlt
or
push
cmp
and
andb
or
ja
ja
addr16
push
adc
and
adc
inc
or
pop
and
xor
mov
add
in
xchg
jnp
push
cmp
inc
and
fdivs
lahf
addb
rcrl
lret
mov
push
inc
or
sbb
shlb
push
jno
adc
add
rorl
dec
roll
push
andb
mov
es
dec
outsl
xchg
and
jg
push
ss
adc
insb
aas
mov
nop
repz
pop
or
xor
push
das
addr16
mov
inc
aad
clc
lahf
je
sub
aad
lret
test
in
add
dec
push
add
adc
scas
push
je
push
rolb
jbe
add
outsb
sub
adc
inc
adc
fs
aaa
cvtps2pd
dec
rorb
in
stc
push
fildl
or
orb
or
xor
adcl
cmp
adc
jb
adc
sbbb
arpl
xor
and
ror
sbb
je
inc
aam
fisubs
inc
mov
xchg
push
mov
push
pop
inc
dec
jns
dec
and
mov
xchg
mov
aam
test
adc
popa
popa
jle
or
outsb
add
sub
sti
lock
mov
jge
push
push
gs
and
adc
inc
lods
inc
scas
add
jmp
dec
inc
daa
loopne
mov
sub
ja
push
test
add
in
das
pop
test
das
mov
enter
or
adc
dec
push
xchg
out
adc
jne
mov
and
sarb
loopne
xor
shrl
iret
icebp
and
push
mov
fsubrl
add
or
push
or
or
ret
rclb
or
or
push
daa
mov
and
add
mov
adc
icebp
add
xchg
lahf
addr16
into
adc
pusha
out
or
xlat
mov
sub
nop
and
cmc
xchg
cmp
inc
sub
adc
adc
or
mov
and
mov
hlt
mov
jb
call
add
push
paddb
sbb
lods
sub
xlat
mov
sub
scas
inc
dec
mov
push
pop
call
cmpsl
pop
dec
and
lods
xorb
xchg
jno
inc
or
push
lods
test
mov
jmp
fldl
inc
mov
dec
test
push
pop
adc
mov
cmp
cld
je
scas
jns
adc
push
mov
or
ss
sbb
hlt
mov
out
and
call
arpl
cwtl
sub
push
and
and
hlt
or
pusha
inc
popf
mov
test
mov
mov
lds
lret
jno
sub
cmp
cwtl
push
add
push
inc
roll
sub
sbb
scas
notl
icebp
add
jb
fstps
lcall
push
daa
loopne
loope
xchg
sub
mov
add
aad
test
imul
scas
xlat
xorps
fisttpll
mov
add
push
daa
imul
mov
pop
push
xchg
cs
sub
push
xor
mov
je
iret
cmp
jne
in
aam
outsb
sub
cmp
es
sub
inc
insl
insl
xlat
cmp
dec
lcall
sbb
cltd
pusha
nop
je
lods
pusha
test
inc
movsb
cmp
es
adc
mov
sbb
and
mov
mov
xor
fistpll
jle
test
ret
mov
inc
adc
or
inc
mov
mov
cwtl
xchg
jle
adcl
je
mov
pusha
sub
jbe
arpl
pop
bound
aam
and
jne
scas
push
mov
dec
or
mov
movsb
push
negl
xor
mov
addb
lods
ss
jne
sbb
mov
jmp
pushf
push
loop
and
stos
mov
add
lret
lcall
cltd
leave
jbe
in
in
mov
lods
cltd
sub
add
bound
imul
sti
mov
add
mov
daa
sbb
lahf
and
arpl
sahf
jo
popa
out
pushf
test
and
cmp
mov
inc
or
popf
adc
push
jo
popf
xchg
test
mov
and
lahf
jo
inc
test
mov
inc
scas
mov
adc
mov
or
fwait
bound
cmp
cmp
and
aaa
cmp
ret
xchg
daa
cmp
cmp
push
and
pop
in
loopne
push
and
adc
imul
mov
cmp
jno
inc
loope
mov
and
dec
jle
push
std
and
push
inc
pusha
dec
push
push
pop
and
movsb
sbb
pop
imul
add
icebp
mov
xor
mov
and
fsubrs
or
mov
rorl
les
inc
lock
xor
sahf
sub
lret
test
push
lret
sub
cmp
xchg
adc
fildl
ja
jmp
pop
or
call
add
pop
mov
add
fstpl
cmp
mov
dec
pop
addl
into
inc
push
loopne
push
mov
stos
add
mov
mov
fwait
push
push
fildll
jge
add
jns
push
daa
xchg
and
iret
mov
sbb
xchg
pop
push
sbb
in
jmp
mov
in
aas
stos
or
pop
push
icebp
bswap
rcrb
rcl
call
xor
inc
jle
out
add
fs
xor
inc
add
xor
sub
cmp
push
xchg
and
dec
aaa
cwtl
add
mov
push
xchg
mov
dec
mov
or
dec
iret
cmp
sub
sub
push
or
scas
or
sahf
fldt
movlps
ret
inc
mov
add
out
aam
jmp
adc
addr16
add
push
fisttps
sub
shrl
addr16
mov
insb
mov
mov
scas
dec
inc
mov
insl
pop
inc
pop
or
push
dec
xor
pop
push
mov
test
loopne
mov
enter
ss
pop
mov
or
push
into
notb
mov
xchg
dec
jnp
dec
fildl
popa
lds
inc
dec
icebp
adc
pop
rep
dec
push
ret
cmp
add
cmpsl
lods
and
adc
movsl
cmpsl
sbb
popa
sbb
add
add
pop
push
mov
jne
ds
cmpl
pop
shll
adc
mov
sub
inc
inc
adc
dec
pop
inc
jge
lods
jg
je
test
mov
lock
ffreep
sbb
mov
ja
loopne
mov
sub
and
pop
cmc
in
inc
iret
jle
jle
jne
arpl
jno
add
in
adc
pop
and
shrl
mov
or
jg
aam
data16
insl
pop
in
sti
xor
cmp
add
add
or
mov
jne
xchg
pushf
ss
adc
add
addr16
push
fiaddl
push
faddl
roll
inc
mov
cmp
es
mov
jns
xor
orl
inc
mov
xor
inc
cltd
mov
xchg
and
pop
push
inc
xchg
xor
sbb
mov
hlt
sahf
pop
push
sbb
mov
test
iret
mov
cmp
dec
jno
xchg
mov
shlb
lds
inc
adc
inc
push
push
push
xor
aam
pop
mov
pop
xlat
popa
stos
and
and
mov
pop
jae
je
or
add
outsl
repnz
das
imul
xor
out
or
and
sahf
rcr
adc
inc
out
push
jp
cmp
imul
mov
es
push
jp
rcl
jne
je
dec
test
clc
sbb
jp
int3
or
mov
iret
pop
jnp
lock
orb
rcrl
ljmp
mov
or
mov
je
ss
add
cmp
daa
add
mov
ud2
add
mov
lock
sbb
lcall
mov
int
jl
pop
inc
fdiv
popa
ret
mov
inc
xor
jmp
sub
xor
jo
sbb
pushf
dec
jle
pop
sub
mov
loopne
cli
arpl
cmc
sbb
adc
sub
ss
sbb
sbb
add
ret
push
mov
bound
mov
inc
das
sarb
adc
fstpl
xchg
or
inc
outsb
rorb
dec
pop
sbb
ljmp
lcall
jl
mov
cld
addr16
inc
jge
xchg
jmp
push
and
add
sbb
xor
lcall
and
push
stos
sub
adc
movsb
xchg
ja
out
adc
or
mov
or
jnp
imul
lret
leave
bound
mov
dec
loopne
pop
add
and
or
cmp
movsl
cmp
pop
mov
or
adc
sub
clc
inc
mov
mov
enter
daa
push
mov
jmp
push
out
ret
sbbb
sub
lahf
cmpsl
sub
into
cmc
mov
mov
ja
sbb
xchg
or
cwtl
inc
sbb
mov
jbe
sbb
lahf
decl
test
add
jo
or
into
mov
adc
dec
xchg
popf
add
addr16
leave
movsb
xor
enter
leave
ljmp
data16
and
lahf
xchg
jg
sub
addb
lds
dec
shll
inc
adc
jle
adc
dec
stos
mov
and
stos
inc
sbb
bound
popa
pop
pusha
and
cmp
add
cmp
rcrb
out
pop
addl
outsb
or
cwtl
clc
stos
sub
lods
jnp
adc
into
test
fcmovu
add
push
mov
sub
jae
sub
dec
pop
aas
lods
rol
cmp
jnp
xor
xor
push
add
add
std
sahf
imul
imul
cli
xchg
mov
movsb
adc
xor
xor
dec
sbb
sub
movsb
ficoms
cmp
xchg
dec
jge
insb
mov
cmp
mov
xor
pushf
lock
xlat
das
into
xlat
daa
sar
or
lahf
rolb
sub
push
push
or
inc
in
jmp
loopne
ljmp
addr16
testl
or
jbe
fiadds
js
jno
imul
mov
sti
movsb
data16
fs
or
dec
mov
push
fistps
or
cmpsb
jle
test
jg
loopne
mov
and
xchg
in
add
adc
scas
ds
jmp
lahf
out
or
filds
and
cmp
fstpt
popa
ret
fistps
pushf
shlb
fldl
fisubs
mull
mov
xchg
push
cltd
push
stos
scas
fistps
in
popf
add
xchg
int3
and
or
or
cmpb
push
nop
jmp
dec
add
dec
mov
cltd
cmp
push
mov
leave
je
xlat
and
sub
jecxz
out
fisubrl
es
loop
sub
adc
inc
mov
fsubr
in
mov
int
shl
aas
sti
cmp
jnp
fs
aas
or
je
in
mov
lahf
sub
xchg
cmc
xchg
cmc
jmp
and
sbb
js
and
jnp
sbb
inc
pushf
add
lahf
fistps
xor
jns
sbb
or
xchg
loopne
in
int
dec
mov
sbb
sbb
sbb
xor
adc
xchg
out
and
dec
pop
ret
push
movsb
jae
xlat
cmp
out
sub
in
mov
push
pop
push
dec
data16
pop
ss
sub
test
movsb
movsb
sub
or
pop
fcoml
xchg
movsb
ret
inc
sub
les
es
cmp
es
add
testl
xor
mov
in
jecxz
push
adc
shlb
add
xchg
lahf
pop
adc
mov
out
idivb
xor
into
dec
stos
sbb
adc
xor
sub
adcb
inc
lods
and
lds
addr16
add
mov
mov
mov
inc
les
inc
pop
push
mov
sbb
jl
cmp
lods
sub
and
imul
das
andl
adc
leave
and
test
sbb
into
shll
pop
pushf
repz
sub
xchg
inc
js
push
xchg
xchg
push
push
imul
dec
cmp
rcll
and
ret
push
inc
enter
sub
sub
dec
adc
into
pop
add
sbb
pop
fildll
pop
fldenv
fwait
mov
mov
movsl
test
push
xchg
inc
jl
into
xor
into
mov
add
cmp
or
pop
dec
js,pt
scas
or
push
ljmp
xchg
mov
mov
or
jb
aaa
and
mov
fwait
mov
xchg
mov
fnstenv
fwait
out
jne
in
insl
leave
addb
aaa
ss
mov
jo
dec
lahf
popf
adc
aam
fcoms
outsb
lahf
lahf
es
ret
add
mov
shlb
sbb
pop
adc
sbb
mov
xchg
mov
sbb
arpl
inc
pop
or
data16
in
adc
push
inc
pop
dec
insb
xchg
dec
inc
mov
mov
cmp
orl
les
xor
mov
lret
lret
cmp
icebp
mov
nop
add
fmuls
cmp
sub
jle
cmp
dec
clc
aad
rorl
push
xchg
jbe
fwait
popa
xor
or
mov
pop
mov
or
int
mov
out
adc
cmp
icebp
pop
lock
adc
xchg
movzbl
sub
xlat
ret
mov
mov
adc
arpl
dec
sub
jmp
push
jo
sub
sbb
add
das
add
stos
daa
ja
cli
push
sub
xorb
and
push
mulb
out
mov
jp
test
fisubl
xchg
iret
adc
xor
pop
adc
pop
pop
sbb
inc
cli
push
pop
inc
and
jecxz
xchg
fwait
cld
loopne
adc
add
fwait
orb
aad
jmp
jecxz
add
sahf
mov
add
mov
jp
jno
adc
pop
sbb
lret
loop
sub
rorb
push
inc
lods
loop
or
xor
ljmp
inc
in
in
out
fsubrl
pushf
mov
adc
movb
popa
sub
insb
popf
push
push
xchg
jbe
pop
cltd
xchg
mov
xchg
xchg
xlat
lahf
mov
xchg
es
sub
scas
mov
push
or
outsl
aaa
pop
or
into
dec
or
jne
adc
in
ja
aaa
repnz
pop
fisttps
push
mov
pusha
ja
inc
fs
fwait
cmp
push
ret
push
stos
push
cmp
mov
movsl
cwtl
xor
push
jnp
idivl
insb
push
into
mov
xor
rcrl
mov
and
fcmovnu
and
dec
into
decb
sub
adc
jp
out
out
sbb
sbb
inc
adcl
xor
mov
mov
das
sbb
ss
sbb
fnstsw
mov
inc
cmpsb
mov
push
cs
sbb
mov
sbb
pop
mov
das
repnz
stos
jo
xchg
push
cld
enter
mov
mov
cmp
push
mov
sub
and
mov
insb
popa
pop
mov
daa
sub
push
test
and
insb
dec
aas
out
fldcw
pop
ret
jge
mov
xchg
and
xchg
lods
sub
push
push
mov
fnstenv
cmp
ljmp
cmpsb
and
popa
lret
popf
adc
or
hlt
or
push
outsl
mov
out
or
popa
add
idivl
mov
mov
xchg
mov
out
jnp
push
imul
or
pop
fnsave
push
shll
int
jge
sub
add
or
sbb
popf
push
gs
fldenv
jne
add
mov
test
pop
and
cmc
mov
mov
je
xchg
adc
add
xor
insl
xchg
neg
and
aaa
adc
out
mov
jge
sbb
mov
adc
or
gs
push
gs
sub
adc
into
inc
inc
or
jge
jnp
into
adc
pop
scas
adc
out
leave
mov
sub
dec
mov
adc
std
push
cltd
arpl
arpl
adc
jnp
cmp
pop
mov
sbb
dec
xor
sbb
js
fistps
fbld
ret
mov
sti
adc
daa
cmc
add
xor
ds
ror
add
cmpsl
xchg
mov
sbb
push
out
add
mov
and
negl
mov
xchg
push
test
add
imul
adc
jge
insl
or
je
int
or
cmp
sub
push
fisttps
repnz
mov
push
jmp
inc
jno
mov
clc
mov
cvtdq2ps
inc
insb
sti
repz
and
jnp
or
inc
movsb
mov
shrb
mov
adc
dec
adc
cld
imulb
sbb
add
shlb
insl
push
sbb
mov
xchg
push
push
jp
fnsave
std
les
cmp
mov
ret
cmp
mov
dec
icebp
neg
lret
add
jp
repnz
pop
xchg
fisubrl
add
mov
inc
mov
clc
sub
in
loope
les
insl
in
aam
ret
or
iret
fs
dec
aad
arpl
inc
mov
jnp
pushf
mov
mov
jno
clc
add
test
pop
xchg
fs
mov
push
mov
rorb
scas
inc
push
mov
rcr
test
add
fidivs
ja
or
push
mov
push
pop
insl
icebp
movsl
fsubrs
and
jl
jge
les
cmp
add
cmp
sbb
das
cmp
iret
add
shrl
dec
xchg
inc
sub
sbb
jp
roll
faddl
mov
inc
cmp
cmpsb
mov
sbb
inc
test
inc
mov
ja
cmp
cmpsl
inc
ja
inc
leave
push
arpl
les
sub
push
or
dec
xchg
jae
popa
jecxz
test
xchg
sub
ret
xchg
mov
sub
rolb
jg
popf
adc
outsl
movsl
arpl
add
icebp
lcall
or
movsl
fsubl
fistl
adc
pop
sub
sbb
xor
jle
ffreep
aam
add
pop
sbb
cmp
xchg
mov
shrb
sahf
dec
pop
xchg
mov
xchg
adc
mov
cwtl
icebp
push
mov
push
loop
jne
stc
mov
fcmovnu
adc
inc
cwtl
add
cmpsl
fistpll
ja
mov
lahf
pop
sbb
sbb
in
and
adc
inc
xchg
jl
adc
sarb
or
pop
int3
adc
jns
cmp
adc
not
push
push
pop
ret
lret
jecxz
sbb
push
lock
in
out
mov
xchg
cmp
cmpb
lcall
inc
sbb
add
fdivr
fcmovnbe
jns
or
sarl
inc
lret
aaa
cmp
std
push
dec
in
gs
push
push
enter
fldt
xchg
aam
and
fldenv
mov
add
inc
xchg
inc
pop
popf
cwtl
mov
mov
lods
fidivs
subl
cmp
in
jae
inc
lods
bound
sbb
in
movsl
sbb
lret
sub
xlat
lods
jge
frstor
dec
jns
gs
mov
cld
jo
pop
lock
push
les
insl
test
push
fadd
mov
sbb
js
outsb
out
test
dec
push
icebp
dec
and
push
or
xchg
cmp
inc
mov
imul
pop
hlt
dec
loope
add
sub
jnp
jle
int
jl
shr
jbe
fstp
incb
inc
bound
push
mov
jmp
or
shlb
sub
ja
cmp
xor
iret
sub
out
push
pop
clc
mov
rclb
mov
sahf
call
int
lods
sub
test
fs
lods
orl
jae
add
dec
xchg
add
fldt
push
sbb
lret
push
in
jg
ss
cmpsl
add
mov
out
push
sub
push
rcr
aad
pop
push
mov
mov
or
int
push
sbb
mov
xor
xchg
lcall
push
jmp
or
mov
fwait
xor
push
inc
jo
scas
cmpsl
in
mov
mov
mov
into
andl
js
pop
or
mov
adc
popa
mov
stos
roll
mov
cli
lods
int
ret
outsb
sub
mov
or
aad
mov
pop
push
mov
mov
int3
test
lret
mov
scas
mov
es
gs
add
and
or
xor
loop
out
lret
jbe
mov
mov
mov
ja
mov
sub
cmp
test
inc
call
sub
xor
dec
insb
pushf
fmul
stos
push
mov
push
push
sbb
sbb
push
push
xor
stc
mov
mov
push
sub
push
or
dec
add
pop
insl
fiaddl
push
mov
jo
outsl
or
pushl
xchg
sti
push
sub
inc
push
ficomps
insb
loopne
cmp
into
daa
sahf
cmp
mov
scas
cmpsb
pop
subl
xchg
lret
aas
dec
push
daa
xlat
pop
in
outsl
fcoml
dec
movsl
es
std
mov
or
gs
xor
jge
imull
pop
popf
jnp
orl
int3
add
xchg
jl
mov
lahf
adc
sti
and
adc
fmuls
movsl
out
xor
fildl
in
add
or
mov
jge
addl
cmc
inc
inc
jg
add
sbb
add
test
pop
cli
xchg
push
mov
jbe,pn
sub
ret
push
and
mov
aam
cmc
stc
and
arpl
outsb
mov
lret
lods
addl
pop
jecxz
andl
adc
subb
push
lods
stos
cmp
xlat
bound
or
ret
and
je
dec
mov
xchg
lea
insl
add
pop
adc
xchg
adc
cli
sbb
test
cmc
dec
cmp
push
xchg
add
faddl
int
test
scas
fwait
call
pop
push
push
popf
xchg
push
dec
mov
mov
outsl
cmpsl
jb
test
sub
in
xchg
cltd
cltd
xchg
lahf
mov
adc
aaa
mov
mov
cmp
ja
fnsave
jg
inc
das
insb
mov
fcompl
sbb
mov
and
enter
loop
mov
xor
xor
sbb
insb
xor
mov
lods
jp
lcall
pop
add
mov
ret
xchg
shll
add
inc
sbb
fdivs
into
sbb
push
push
lods
test
dec
ljmp
pop
pop
inc
hlt
or
dec
mov
insb
cmpsb
ljmp
test
es
pop
test
pop
fwait
push
mov
scas
adc
mov
fistpl
sbb
movsl
dec
pop
outsl
mov
cmp
shl
pop
cmpsl
arpl
outsb
mov
lret
pop
ret
xchg
mov
out
ja
out
lcall
sbb
add
pop
pop
jp
shrb
inc
insl
stos
mov
in
leave
loop
fcmovu
inc
xor
jp
sub
arpl
jbe
add
mov
adc
loopne
dec
inc
scas
mov
dec
loopne
lret
in
add
imul
scas
xlat
inc
sbb
push
fdiv
mov
loopne
loop
dec
jae
inc
decb
sub
dec
movsb
sbb
jle
ljmp
pushf
jmp
icebp
imull
xor
inc
clc
add
or
push
pop
push
icebp
xchg
xchg
jbe
pop
lods
push
push
dec
cmp
sub
push
cmpsb
stos
push
repnz
loop
aaa
mov
std
push
in
fadd
repz
ret
and
lcall
jno
dec
subl
xor
mov
test
das
cmpsb
in
xchg
outsb
scas
inc
and
in
add
add
sub
adc
pop
mov
rorb
xchg
sarb
sti
insl
jecxz
cmp
icebp
push
cmp
stos
inc
gs
std
ret
push
movsl
mov
dec
cmp
or
pop
jle
jecxz
les
loopne
cmpsl
and
gs
mov
ss
roll
inc
pop
imul
add
mov
ja
mov
js
scas
insl
cmp
push
les
nop
lahf
pop
insl
mov
mov
aam
outsb
pop
jbe
jbe
adc
push
jl
and
jecxz
jg
adc
lcall
dec
shll
cmc
fildl
mov
sbb
decl
sbb
xor
xor
repz
push
sub
mov
jmp
sarb
and
push
sbb
iret
jno
hlt
mov
cwtl
dec
insl
out
mov
jge
outsl
pop
xchg
lds
xor
mov
cmp
or
inc
mov
clc
int
addr16
es
jnp
mov
pop
jae
cmp
mov
xor
add
sub
inc
out
test
repnz
mov
jno
insl
jne
push
and
arpl
cmp
fcom
mov
les
andl
int
push
in
and
shlb
push
cmp
lods
lock
pop
and
or
ret
outsl
je
sti
fsub
mov
push
outsb
cmp
push
cmp
orb
adc
inc
out
pop
sub
sbb
repnz
push
js
les
pop
fisubl
mov
mov
adc
fadd
outsl
push
in
imul
or
push
sbb
enter
in
or
ss
mov
adc
out
cs
sbb
arpl
out
cmp
push
adc
pop
loop
sbb
pop
sahf
movl
dec
gs
push
aaa
ss
aam
repnz
mov
cmp
sub
ljmp
call
mov
outsl
imul
mov
pop
js
pop
sbb
push
and
lock
adc
adc
lea
mov
adc
insl
mov
mov
mov
and
mov
aam
and
xorl
out
mov
mov
lret
ds
xor
push
hlt
fisttpll
outsl
outsb
into
xor
pop
mov
es
outsl
lds
jle
mov
pop
shl
xchg
inc
test
rorb
add
xorl
xor
test
repnz
sub
jnp
jg
dec
sub
out
repnz
ss
add
notb
or
or
mov
add
lds
jb
push
cmp
dec
hlt
inc
mov
sti
dec
dec
sbb
sbb
clc
jmp
imul
inc
push
mov
ss
repnz
inc
in
cmp
sbb
mov
jnp
insl
jecxz
fdivrl
inc
jl
add
add
daa
incb
fidivrs
xchg
dec
mov
or
cmc
in
mov
dec
stc
cmp
mov
ds
std
inc
jb
or
sarb
adc
ja
sbb
fildl
push
cmc
fs
xchg
mov
scas
clc
pop
pushf
pop
imul
adc
push
or
fdivs
shl
push
cli
lods
mov
lock
add
fldl
pop
adc
test
adc
insl
lods
add
mov
js
std
jnp
sub
add
aaa
insb
pop
sahf
scas
fistl
xor
add
jbe
mov
imul
xchg
into
xor
xchg
sub
fwait
dec
mov
mov
add
out
insl
inc
adc
push
repnz
adc
cmp
fildll
dec
fnstsw
xchg
outsl
insb
or
dec
dec
int
stc
cmp
cmp
ret
push
test
push
cmc
mov
lret
push
les
jmp
js
pop
enter
lods
push
push
mov
mov
push
data16
push
pop
push
or
adc
pop
adc
lcall
xlat
or
pop
sahf
out
jge
cmp
out
mov
mov
iret
or
popa
mov
nop
inc
and
pop
leave
imul
les
in
mov
push
pop
pop
mov
pop
aas
lret
test
pop
sbb
int3
idiv
push
sbb
jo
js
cmp
rclb
cli
cli
test
mov
inc
out
jbe
push
inc
je
add
or
push
jecxz
mov
add
mov
jns
push
push
sbb
dec
in
cmpsl
imul
push
push
inc
sub
push
loopne
icebp
xchg
in
es
in
test
sub
sbb
push
pusha
add
sub
mov
pop
in
xchg
add
pusha
test
cmp
pusha
gs
lret
pop
cmp
adc
cmp
aaa
fnstenv
xor
test
clc
push
loopne
iret
mov
je
cmpsl
add
in
push
pop
lcall
fsubrl
mov
out
xor
inc
mov
xchg
xchg
mov
es
sub
sbb
mov
sub
int
mov
cmpsb
cmp
jne
mov
or
in
add
jo
fistpl
dec
push
mov
sar
sub
lret
push
jbe
and
push
out
ficoms
mov
out
adc
scas
sbb
and
in
rorb
push
mov
call
iret
loopne
jno
sahf
insl
xlat
imulb
cwtl
add
ja
jecxz
sbb
add
push
fcmovnu
push
rcl
dec
pushf
movsl
fcmovnu
mov
aas
sbb
je
or
pop
insb
xchg
outsb
or
lods
push
loopne
bound
sub
xchg
or
mov
sub
aam
fsub
adc
sbb
push
xor
fs
leave
fmull
mov
jmp
xchg
mov
cld
and
adc
imul
pop
aam
fidivrs
adc
xchg
pop
xor
scas
and
add
cli
ljmp
jns
js
pop
int3
xchg
fimull
pusha
xchg
aad
inc
arpl
jmp
add
enter
aaa
sub
jp
adc
pusha
fidivs
aaa
fsubrl
out
push
pop
fcmovu
or
inc
mov
mov
pop
repnz
pop
mov
je
in
insl
ds
cmp
or
dec
cmpsl
adc
sub
loop
insb
loopne
mov
outsl
push
mov
aaa
ret
clc
adc
movups
adc
mov
test
xchg
jmp
mov
cmp
jp
xlat
or
lcall
add
jb
add
push
aaa
out
lds
sub
aas
adc
outsb
pop
and
ret
cmpsb
pop
test
mov
cltd
bound
sub
sbb
mov
call
and
dec
daa
mov
adc
fcmovu
mov
cmpsb
add
lods
arpl
lret
mov
mov
xchg
pop
loopne
mov
sbb
xchg
pusha
cs
dec
pop
lock
loope
mov
mov
mov
arpl
inc
push
or
ljmp
test
cmp
lcall
add
jge
dec
movl
loopne
push
mov
in
cmpl
sbb
xchg
sti
xchg
insl
fwait
mov
mov
stc
fimuls
sbb
adc
rcrb
cmp
inc
mov
in
enter
loope
inc
xor
bswap
out
clc
xchg
cmpsl
pop
mov
mov
mov
roll
cld
add
sti
rcr
imul
cmovl
lock
push
aad
popa
stc
xchg
pop
inc
aaa
inc
and
pushl
iret
fisubrl
repz
inc
jnp
sbb
test
cmp
adc
xor
enter
popa
mov
xchg
xor
inc
hlt
imul
pop
divl
imul
pop
jp
xlat
in
mov
addr16
sbb
mov
xor
pop
sbb
fidivs
xor
loopne
outsl
and
insl
pop
cmp
rol
daa
dec
loop
inc
rorb
and
add
callw
sbb
fildl
push
ja
mov
fdivrs
add
pop
lahf
imul
ret
jo
jp
adc
lcall
aad
les
or
insb
jae
jbe
dec
add
rolb
sbb
mov
add
inc
push
push
andb
dec
ja
outsb
ret
adc
dec
xor
outsl
xlat
pop
fcoml
inc
inc
hlt
shlb
jnp
and
aaa
adc
jns
pop
push
lcall
jnp
or
cmp
sub
fstpl
jecxz
les
mov
xor
mov
or
fldcw
jle
lea
mov
mov
sti
pop
imul
fcmovnbe
aam
inc
mov
std
add
and
lock
xchg
loop
jo
mov
or
mov
insl
xchg
repz
testl
insl
pop
data16
dec
xchg
jbe
aaa
pop
ss
push
rol
mov
pop
jne
mov
mov
mov
mov
int
test
xor
mov
les
shr
mov
add
out
nop
xor
cmpsb
test
lret
ret
dec
ret
orb
addr16
lea
xchg
negl
cmp
fisubrs
rcl
jge
or
shll
lock
cmp
sbb
push
das
fs
adc
inc
mov
sahf
xchg
loop
adcl
fidivl
inc
add
sub
and
aaa
test
or
pop
loop
jmp
and
mov
jg
negl
push
mov
dec
lock
pop
adc
push
mov
ds
out
push
addl
xchg
sbb
lock
push
inc
mov
movsb
add
arpl
data16
jbe
sub
mov
fs
xor
mov
xor
inc
cld
xor
mov
inc
mul
xchg
scas
imul
imul
xchg
mov
mov
cmp
into
subl
ret
and
jmp
test
pop
pop
ss
in
fucomi
test
test
gs
aas
mov
repz
int3
mov
or
sbb
inc
arpl
fildll
call
scas
mov
sub
aad
or
pop
push
pop
test
jne
mov
fildl
bound
jae
rcll
and
adc
out
jbe
fnsave
push
mov
into
push
mov
or
fisubrs
mov
pop
xchg
pop
adc
jmp
adc
dec
jne
mov
or
aaa
insl
sbb
cmp
scas
mov
cli
enter
inc
or
jg
ret
dec
cmpsl
mov
jmp
dec
and
pop
jp
xor
mov
fdiv
mov
dec
and
in
nopl
rcl
pop
jmp
xor
sub
out
cmpsb
dec
fisttpll
mov
dec
inc
add
add
fildl
adc
ror
imul
popa
das
mov
mov
mov
add
push
insb
add
mov
outsl
subl
iret
arpl
push
aad
stos
mov
mov
scas
sub
adcb
or
jo
add
cmpsb
scas
inc
fcmovbe
insl
leave
jo
xor
or
jge
xchg
adc
das
xor
in
adc
into
push
adc
push
push
arpl
repz
insl
mov
lock
stos
arpl
lock
or
insb
pop
sbb
push
or
add
mov
push
jl
cmpsl
fistps
fisubl
push
push
inc
imulb
repz
cld
push
mov
sub
dec
daa
in
cmp
push
sub
pop
mov
pop
pop
dec
repz
imul
pop
pop
je
cmp
popa
mov
cli
popa
sub
and
pop
pop
rorl
leave
cmp
pop
mov
lods
xchg
cmp
fwait
or
mov
mov
fs
dec
daa
mov
push
mov
mov
fnsave
fildl
arpl
cmp
xor
data16
mov
or
xor
sbb
into
mov
lods
in
adc
daa
ds
pop
pop
xchg
pop
jne
sub
popf
mov
jb
rcl
push
je
call
cmp
ss
pusha
out
stos
mov
sbb
push
mov
and
mov
jnp
or
icebp
decl
jmp
mulb
sub
lds
fdivr
jns
lahf
xchg
hlt
std
mov
jl
andl
xchg
inc
xor
push
cmpb
cmc
pop
mov
and
add
je
subb
scas
push
mov
rcrl
xlat
and
dec
cmp
shlb
jnp
sub
adcb
mov
or
sub
mov
push
sbbl
bound
fcmovb
sbb
sbb
aas
xor
mov
cmp
in
xor
pop
or
lret
ljmp
psrlw
sub
pop
sub
jb
sbb
data16
test
inc
test
dec
push
outsl
aaa
add
jl
push
std
cmp
lock
out
mov
pop
push
mov
jbe
adc
shl
mov
xor
popa
ror
push
enter
sbb
loopne
jle
aad
das
insl
loopne
mov
enter
cmpsl
mov
test
sbb
dec
pop
inc
jne
mov
divl
enter
add
ljmp
loope
mov
or
ljmp
ret
inc
cmp
jmp
sbb
xchg
leave
imul
pop
clc
out
ret
insl
in
sub
mov
mov
cmp
into
mov
orb
push
sub
push
cmp
pop
dec
data16
out
sub
sub
insb
sbb
inc
mov
in
icebp
clc
push
pop
ret
mov
imul
xchg
push
cs
lock
stos
movb
test
push
stos
add
icebp
pop
and
sahf
cmp
jge
lea
inc
in
sbb
xchg
aad
xor
lds
leave
addl
ds
dec
icebp
and
es
xchg
add
mov
xorl
and
je
xor
jge
in
mov
lods
cmpsb
outsb
je
es
in
xchg
data16
testl
lock
pop
push
jae
sahf
adc
sub
sbb
hlt
mov
push
lahf
jg
test
sub
dec
xchg
ljmp
or
into
sbb
out
push
divl
decl
iret
or
pop
daa
aas
xor
dec
outsb
lret
add
or
icebp
push
rcrl
clc
sahf
xchg
sti
sub
push
imul
mov
adc
xor
aaa
arpl
cmp
xor
push
inc
out
jbe
pop
pop
add
add
leave
lahf
jmp
sti
xor
pop
and
sbb
xor
sti
jle
jnp
push
dec
push
scas
or
fildll
xor
repz
out
fcom
cmp
xor
xor
add
and
in
pop
or
adc
jge
cltd
jnp
cltd
adc
fwait
outsb
jecxz
sbb
add
xor
sahf
or
out
push
xor
lock
pop
stos
push
add
lds
push
lret
or
sbb
aas
gs
fsubrs
add
pop
imull
xchg
pop
push
aas
add
xchg
mov
call
mov
ss
push
jl
repz
iret
stc
dec
ja
xor
add
nopl
or
fcompl
int
or
jp
or
pop
adc
fidivs
cmp
cmp
sbb
push
incb
jae
ja
adc
sub
out
mov
pop
lahf
arpl
mov
adc
push
ret
lret
or
jo
mov
dec
data16
xor
or
in
inc
add
dec
inc
cmp
jecxz
int
sbb
or
mov
mov
sub
xchg
and
lea
adc
in
lods
mov
jo
pop
lret
or
push
sbb
out
sub
add
pop
add
idivb
cmp
mov
arpl
pop
jnp
pop
add
scas
fldenv
jb
jmp
mov
mov
pop
add
cmp
aaa
ss
add
mov
pop
out
or
add
addr16
cmp
cmp
push
fcompp
cmpl
out
jecxz
sbb
cmp
adc
imul
add
pop
mov
pop
and
push
adc
outsl
in
jmp
dec
aaa
pop
add
push
cmp
sub
sbb
add
fdivs
jmp
or
push
push
jnp
mov
daa
dec
or
pop
inc
ss
shlb
scas
or
jge
jb
xchg
xchg
loop
sti
adc
xlat
and
sti
call
inc
push
sub
adc
sbb
pop
add
and
adc
lea
xor
add
adc
out
sti
push
sub
add
push
sub
adc
sub
sbb
stos
add
decl
sti
and
ret
xor
or
in
mov
add
mov
add
add
or
sbb
arpl
jbe
fisubrs
xchg
cmp
ss
add
daa
add
adc
jo
add
filds
lods
hlt
push
jmp
jae
jg
rorl
add
fcomp
fstps
or
cmp
testl
sbb
pop
add
add
jge
into
enter
or
lea
adc
push
dec
add
mov
addr16
insb
mov
xchg
push
sbb
push
scas
imul
xor
das
add
push
inc
sbb
negl
inc
add
mov
icebp
bound
sub
cwtl
adc
loopne
mov
ss
mov
fildll
sbb
sbb
jecxz
sub
mov
pop
sbb
popf
mov
aad
out
and
push
aas
fstl
andl
push
lods
pop
jbe
add
cmp
lea
push
xchg
mov
dec
es
ja
add
sub
ljmp
test
add
mov
inc
push
loope
pop
pinsrw
lods
sbb
cmp
jl
dec
shl
and
addr16
xchg
or
ror
jne
ficompl
cmp
cmp
jecxz
rclb
or
es
popa
push
sbb
adc
dec
dec
subl
jne
pop
popa
pusha
sub
and
roll
xchg
cvtdq2ps
aaa
fadds
inc
insl
pusha
addr16
inc
lret
adc
test
pop
test
dec
mov
mov
mov
loope
sbb
cs
aaa
and
notl
cltd
push
nop
adc
xor
sub
mov
sbb
and
mov
mov
mull
jns
add
cmp
ret
fcomps
add
jne
fcmovbe
popa
outsl
sub
xor
test
insl
insl
mov
nop
test
push
cmp
push
or
mov
or
insl
or
jno
cld
mov
js
and
dec
inc
sti
into
cltd
stos
notb
mov
aad
pop
out
mov
addr16
sub
xor
pop
add
movb
xchg
data16
mov
dec
sub
jg
ljmp
or
sub
popa
xchg
fisttps
test
jnp
mov
fildl
loop
dec
or
or
dec
cmp
pop
mov
sbb
mov
inc
filds
fldenv
movsl
sub
xchg
sbb
movsb
outsl
mov
bound
adc
or
and
out
mov
mov
arpl
sbb
sub
aam
mov
sbb
push
xlat
or
adc
test
imul
sub
cmp
insb
xor
sahf
subl
daa
xor
mov
popf
rep
adc
push
or
or
xchg
ret
ds
xchg
popa
inc
arpl
lods
lods
add
call
dec
xorl
stc
cmp
cs
jmp
shlb
daa
add
outsl
notb
push
inc
inc
push
adc
mov
or
push
sub
or
add
inc
and
dec
or
mov
pop
cwtl
jnp
mov
inc
inc
popa
jp
insb
sbb
jnp
fbld
imul
cwtl
popf
mov
inc
and
mov
fstps
addr16
mov
ficoms
loop
out
xor
es
push
and
test
jo
cltd
cmp
push
cmp
jne
outsl
adc
xchg
add
or
add
adc
inc
xor
push
outsb
inc
push
xchg
dec
decb
mov
dec
es
gs
fsubl
mov
sub
in
adc
xchg
daa
mov
adc
mov
test
mov
cmp
dec
mul
lods
and
fstp
add
adc
jb
mov
outsb
imul
and
es
push
sub
sbb
sbb
je
insl
into
pusha
dec
mov
jg
movsb
xchg
int
xchg
nop
jae
dec
popf
es
insb
notb
cltd
pop
and
mov
xchg
xor
push
ja
push
mov
mov
and
xchg
lods
or
cwtl
or
lahf
ret
loopne
divb
fnstsw
inc
nop
dec
pusha
fsubs
adc
sbb
fstpl
pop
add
adc
mov
sub
adcb
adc
xorl
cmp
xor
mov
adc
test
inc
mov
and
and
movsb
nop
sub
popf
test
fwait
adc
xchg
add
idivb
push
adc
cmp
scas
jge
sub
out
mov
mov
mov
pop
arpl
mov
test
sub
mov
mov
jg
mov
push
xchg
cmpsb
xor
pop
adc
adc
incb
aam
je
mull
mov
push
scas
vmulps
mov
lret
bnd
adc
and
sahf
jge
test
add
sub
pop
inc
pop
add
sbb
and
or
add
stc
push
sub
cmp
cmpsl
adc
clc
mov
sub
sbb
pusha
popf
call
pusha
or
mov
dec
adc
inc
ficoml
cmp
cmp
in
andb
and
cmp
dec
ss
dec
sarl
jae
and
aaa
add
jnp
dec
pusha
push
xchg
arpl
fists
cmpsl
cmp
or
sub
lcall
mov
dec
dec
lret
inc
test
and
mov
divl
cmp
sbb
je
cmp
jb
arpl
xchg
inc
or
lret
outsb
sub
xorl
push
aaa
mov
fwait
and
popf
sbb
mov
pop
adc
mov
mov
in
nop
jo
cmp
in
mov
jno
lret
nop
sbb
and
dec
or
push
lds
jecxz
and
shrl
sbb
mov
addr16
sbb
pop
pop
mov
ret
rcrb
mov
bound
fwait
sbb
lret
mov
arpl
ljmp
mov
xor
adc
test
and
loop
imul
call
or
xor
jecxz
and
push
sub
pop
outsl
insb
rcrb
xchg
jbe
loopne
jnp
dec
jle
jge
inc
and
insb
enter
push
or
pop
sub
xchg
dec
xchg
or
or
mov
push
mov
xchg
and
push
insl
push
or
cmp
sub
ja
inc
sbb
and
pop
xchg
test
add
mov
sbb
or
loop
aam
aam
mov
fistpl
and
and
and
or
sahf
adc
insl
out
push
pop
and
push
mov
add
mov
or
jo
into
mov
or
fwait
jnp
xchg
ljmp
mov
pushf
scas
and
dec
push
popf
add
mov
mov
pop
shrl
pusha
cmpsb
daa
xlat
cld
adc
and
mov
fcompp
lods
and
dec
jae
lods
dec
insb
dec
sbb
leave
push
stos
aam
daa
les
cmp
addr16
aaa
sti
cmp
mov
and
aas
lret
imul
add
sbb
ss
adc
pop
dec
sub
outsb
rolb
in
into
xor
das
xchg
cmp
xchg
insl
sub
movq
sbb
add
jg
cmp
sbb
add
rolb
aaa
sbb
test
subl
aaa
imul
and
icebp
sbb
xchg
and
into
add
aaa
pop
cmpsl
sbb
test
xlat
out
push
sbb
pop
jg
sbb
es
add
pop
mov
push
sbb
daa
xor
lods
repz
or
add
add
lods
inc
iret
stos
jns
jg
leave
outsl
sbb
cmp
add
push
add
fisttpll
sbb
add
popa
inc
int3
sar
push
movsb
sub
cmp
or
xchg
ljmp
outsl
adcb
mov
cmp
cmp
xchg
add
fwait
add
fdivl
jno
xchg
add
and
sbb
cmp
testl
in
into
adc
jge
rorb
adcb
xor
mov
ja
push
add
inc
mov
mov
sbb
add
pop
or
outsb
mov
imulb
and
popf
add
add
sti
xchg
pop
xchg
add
cmp
mov
add
and
sbb
cmp
lret
das
lds
cmp
inc
sbbb
cmp
or
aam
cmpsl
and
testl
add
xchg
sarb
in
cmpsl
cli
xchg
pusha
dec
test
popf
adc
sbb
mov
jecxz
imul
or
pop
sar
cmp
sub
and
sbb
stos
fmuls
imul
fdivrs
jbe
daa
mov
inc
inc
push
sub
sti
inc
cmp
or
inc
int3
ret
jb
adc
mov
jnp
dec
inc
mov
sbb
outsl
fcmovnu
sub
jno
sbb
dec
dec
inc
inc
xor
addr16
push
in
sub
inc
bound
jge
imul
jae
cmp
jae
imul
inc
add
js
pop
jno
sahf
dec
mov
pop
insl
add
xchg
sub
out
outsb
add
add
fwait
jnp
arpl
aam
add
fucomi
ss
imul
ret
dec
xor
inc
push
inc
addr16
jbe
ja
imul
inc
inc
in
outsl
pusha
in
int
push
or
and
xchg
add
sbb
mov
dec
outsb
fs
arpl
stos
ljmp
out
ss
push
outsl
dec
jo
add
das
mov
add
and
cld
test
arpl
add
add
add
mov
add
push
sbb
mov
int
gs
and
movd
adc
xchg
loope
decb
push
adc
rorl
mov
jbe
adc
mov
mov
je
dec
xor
gs
add
dec
js
push
int3
adc
push
cs
insl
ret
mov
cmp
mov
add
fimuls
mov
and
jbe
mov
add
push
ja
mov
lea
mov
and
fs
cwtl
popf
mov
jge
add
xchg
add
dec
xchg
insl
xchg
xchg
add
inc
pop
dec
mov
outsb
data16
or
fidivrl
gs
and
psrld
jle
lcall
xor
xor
jno
xchg
and
sbb
or
or
mov
mov
fisubl
popa
jns
inc
ficoml
outsb
sbb
push
xchg
xchg
add
test
xor
mov
sbb
xchg
frstor
jb
sbb
fwait
push
mov
test
jge
jle
addl
or
add
sbb
in
adc
xchg
fs
xlat
cmp
cltd
outsb
pop
adc
inc
or
rcrb
inc
pop
inc
xchg
add
mov
fwait
xchg
or
mov
add
mov
mov
bound
cwtl
pusha
jne
push
int
xor
movsl
add
fstpt
sbb
sbb
ret
cwtl
add
shll
testl
decb
cmp
jae
push
push
xchg
cmc
hlt
xrelease
or
jb
push
and
imul
and
mov
jl
adc
jecxz
jge
divb
sbb
mov
inc
aad
jo
ss
leave
shrb
or
test
xchg
add
adc
pop
leave
faddl
mov
xor
xor
sahf
xor
outsb
addb
cwtl
insl
das
add
push
inc
push
push
jbe
or
rolb
lcall
mov
std
cli
jbe
sbbl
adc
jns
xchg
lock
int
push
shl
ljmp
lret
pop
mov
xor
sbb
push
sub
addr16
add
mov
or
push
ja
xchg
movsb
paddusb
xorl
sbb
xor
and
fwait
cmc
xchg
xor
mov
outsb
arpl
mov
daa
aas
pushf
dec
dec
xchg
cltd
repnz
mov
mov
mov
xor
sahf
das
mov
mov
mull
icebp
xchg
push
pop
sbb
scas
xor
jge
arpl
dec
shll
inc
mov
enter
pop
push
jle
mov
dec
and
and
scas
sbb
push
pushf
and
xchg
mov
gs
add
inc
inc
sub
or
outsl
rorb
cmp
or
mov
jge
push
in
loope
bound
mov
js
pop
sbb
sbb
or
andl
shrl
jmp
jmp
call
ret
js
inc
jb
adc
add
pop
pop
jl
sbb
dec
or
hlt
repz
arpl
pop
inc
mov
inc
adc
test
fs
test
mov
xchg
movsb
or
pop
popa
sbb
sbb
fld1
sbb
cmpsl
data16
mov
xor
je
mov
fldenv
dec
cmp
push
loop
jg
pop
jnp
xchg
daa
js
pop
inc
inc
sub
push
js
and
adc
mov
mov
pop
daa
mov
xor
dec
inc
dec
outsb
xor
pop
pop
popa
push
push
inc
je
int
mov
adc
mov
mov
out
lea
ljmp
lock
stos
ja
jg
mov
daa
ss
xchg
and
sti
mov
and
mov
imul
pop
jae
pop
jo
fnsave
shlb
dec
jne
or
push
xor
push
adc
fwait
mov
sub
bswap
iret
popa
pop
dec
and
adc
mov
int
ds
mov
cmpsb
cs
xchg
lods
jbe
inc
dec
jno
lock
mov
hlt
inc
sbb
cmpsb
adc
xchg
push
cmp
pop
push
sbb
lds
sbb
add
xchg
push
jg
js
pop
mov
sbb
dec
std
dec
add
push
mov
mov
aaa
hlt
jo
scas
add
mov
fs
jge
mov
cmc
xor
sbb
mov
add
sar
inc
dec
insl
mov
aaa
aas
xor
ja
test
xchg
imul
dec
push
xlat
push
outsb
xor
cmpsb
push
movsl
bound
push
and
sti
sbb
loope
sub
inc
xlat
jge
iret
cmpsl
pusha
cmp
adc
jb
pop
arpl
pop
ljmp
aad
or
cld
and
inc
push
add
sbb
sbb
and
test
jbe
push
sub
lahf
iret
fs
push
fsubrl
pop
loopne
sbb
pop
shrl
popa
xlat
icebp
xor
and
out
fs
mov
ja
and
pop
jae
sub
xor
jne
icebp
mov
sbb
push
out
cli
into
lods
mov
dec
fs
push
pop
cmp
imul
push
push
imul
bound
push
loopne
std
or
push
jbe
insb
arpl
dec
inc
dec
shll
inc
mov
adc
out
lock
movb
or
mov
and
push
fs
cmc
mov
jp
cmp
jb
lods
push
cmp
dec
and
dec
pop
and
lock
dec
mov
mov
jno
dec
or
into
ds
dec
mov
inc
push
push
jp
out
inc
les
mov
nop
and
sub
bound
and
insl
dec
or
bound
leave
imul
cmp
fmull
mov
es
sub
jno
repz
adc
popf
mov
pushf
pushf
jae
inc
data16
push
adc
fdivrs
mov
dec
int3
out
sbb
push
jmp
mov
jb
cmp
mov
cli
mov
shrl
imul
push
insl
outsb
xlat
in
push
inc
pop
int3
daa
xchg
loope
fwait
sub
daa
push
inc
jo
ds
mov
shrd
ret
adc
bound
dec
sbb
sbb
daa
ret
dec
int
rolb
movsb
xor
push
pop
xchg
popa
dec
push
mov
inc
aaa
sbb
gs
adc
test
pop
sbb
imul
mov
dec
or
jb
adc
in
inc
mov
push
or
or
pop
or
shll
push
sub
pop
fimull
rol
insl
dec
jp
inc
or
mov
jo
mov
dec
movsb
fs
fmul
mov
sub
and
sub
jae
dec
pop
aas
ds
and
jb
mov
xchg
or
gs
push
ss
push
or
pop
inc
arpl
sub
aam
push
dec
popa
inc
int
adc
inc
add
inc
push
dec
mov
gs
popa
or
lret
and
mov
repz
inc
lret
dec
adc
ret
sub
xor
dec
ljmp
or
add
loope
or
sti
push
fists
xchg
xchg
push
add
frstor
mov
cmp
cmp
adc
adc
outsl
jecxz
adc
add
add
xchg
fcmovbe
xchg
add
cmp
pushf
push
nop
sti
dec
sbb
xor
jl
fnsave
mov
cmp
or
mov
mov
sub
sub
lods
fwait
or
dec
flds
add
jae
or
add
pop
adc
sti
aaa
push
adc
fdecstp
sbb
adc
insl
stos
pop
or
sti
adc
adc
xor
lcall
andb
sub
push
mov
cmpsl
pop
pop
dec
or
xor
and
divb
out
movsb
xchg
jp
xchg
daa
testl
mov
add
mov
aad
cmp
xor
inc
daa
fwait
push
xchg
outsb
inc
sbb
push
mov
add
jnp
push
pop
or
testb
dec
push
xor
rorb
rolb
xchg
loopne
rcrb
push
ret
sti
lret
sub
dec
dec
or
pop
or
fs
dec
sub
or
sbb
pushf
push
daa
mov
xchg
cltd
clc
aam
and
bound
pop
and
mov
cs
outsl
xchg
pop
adc
les
and
test
sbb
ds
clc
sti
sbb
lds
arpl
movsl
testb
push
push
scas
pop
test
aam
aam
add
sbb
push
insb
int
pop
jae
dec
sbb
lret
cli
sbb
push
ss
pop
popa
push
push
jno
sbb
cmp
or
inc
packssdw
xchg
js
unpckhps
push
mov
mov
pop
mov
cmpsl
dec
jae
movsl
test
ss
pop
daa
pop
add
push
push
sbb
hlt
jbe
jne
outsb
inc
movsb
dec
mov
mov
fiaddl
add
pop
mov
inc
enter
dec
lret
scas
mov
push
jne
or
mov
fcoml
in
xlat
dec
in
popw
fists
cmp
push
jle
cltd
pop
mov
mov
sbb
mov
mov
push
mov
int
or
adc
lret
pop
add
or
inc
mov
sbb
adc
or
and
inc
imul
add
inc
xchg
fsubrp
cmp
sbb
ljmp
aad
inc
or
movsl
ljmp
cmpsb
pop
pop
cmp
push
push
xor
bound
add
sbb
fimuls
cmp
icebp
dec
jg
add
sub
clc
dec
inc
inc
fwait
dec
cmp
and
add
inc
jle
xchg
or
sti
sub
loope
or
jnp
cltd
fdivrp
dec
inc
push
mov
les
sub
rdpmc
repnz
mov
ljmp
subb
mov
mov
popa
sub
and
inc
pop
or
lods
push
jae
add
or
lret
bound
popa
sub
mov
or
cwtl
pusha
and
adc
inc
dec
push
insl
rol
inc
cmp
dec
insl
dec
lahf
mov
and
fs
shll
jl
mov
rol
int3
fdiv
lret
int3
mov
push
jbe
add
add
dec
mov
or
push
roll
inc
call
pop
dec
pop
cwtl
push
test
jbe
or
add
mov
or
jmp
in
aam
add
add
jb
outsb
inc
push
imul
ljmp
outsl
je
arpl
insb
insb
outsl
arpl
call
pop
push
gs
outsb
outsw
push
popa
fs
imul
fnsave
cmp
bound
inc
push
jns
mov
fists
insl
push
imul
addr16
jns
gs
js
inc
inc
loope
mov
mov
decl
dec
outsl
fs
dec
popa
outsb
fs
fldl
sub
add
in
dec
adc
or
in
push
dec
inc
outsb
jne
inc
outsl
jb
popa
je
dec
jnp
lods
mov
or
negb
inc
imul
fisttpll
add
xor
mov
push
jb
jne
jne
inc
stc
mov
mov
cld
push
gs
lods
jne
or
and
outsb
dec
gs
jae
idiv
push
cmp
or
cmp
inc
sub
inc
gs
lods
xchg
cmp
insb
ja
xlat
lds
arpl
and
fmull
xor
fwait
cmp
sub
push
sbb
xor
inc
mov
imul
outsl
ja
loopne
cmovae
fcomp
ja
je
jg
push
js
xchg
mov
push
fs
mov
xchg
push
insb
popa
jb
push
outsb
mov
test
imul
mov
mov
mov
int
pop
mov
jbe
or
jae
je
or
inc
xchg
leave
pop
adc
mov
sbb
xchg
push
dec
jb
inc
ficomps
leave
or
stos
jl
outsl
js
or
push
push
dec
or
je,pn
or
inc
inc
inc
add
insl
sbb
sub
outsb
arpl
mov
mov
dec
pop
xchg
push
adc
data16
pusha
lea
fdivs
jo
jns
je
insl
fldt
jae
test
gs
fsubrl
lcall
mov
sbb
imul
in
popf
mov
arpl
push
psubw
dec
mov
inc
dec
add
add
pop
inc
sub
add
decl
sbb
pop
insb
add
imul
jo
or
add
popf
and
add
adc
pop
xor
add
stos
jmp
sub
sub
push
add
inc
inc
pop
testb
add
and
fxch
outsl
or
inc
push
inc
fs
sti
out
pusha
xor
outsb
popa
daa
faddp
inc
push
push
jbe
jmp
repnz
add
shrb
fs
pop
dec
ja
popa
add
jo
or
in
inc
jecxz
adc
andb
gs
lcall
in
adc
cmp
daa
add
fbstp
pop
rolb
add
add
add
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
