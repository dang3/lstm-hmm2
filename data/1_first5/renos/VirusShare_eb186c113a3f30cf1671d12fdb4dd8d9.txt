cmp
imul
inc
add
movsb
pushf
mov
mov
dec
dec
inc
sahf
cld
sar
hlt
lock
dec
dec
dec
in
call
dec
dec
aam
dec
dec
dec
dec
int3
enter
dec
dec
dec
mov
daa
daa
daa
daa
sub
sbb
daa
daa
daa
sbb
cmp
daa
daa
daa
cmp
mov
pushf
cwtl
xchg
nop
daa
daa
daa
daa
mov
daa
daa
jl
je
daa
daa
daa
daa
insb
push
daa
daa
pop
pop
push
push
imulb
das
push
mov
add
mov
mov
push
call
sbb
in
fwait
clc
clc
pop
pop
pop
ret
aas
lock
mov
out
fistpll
fdiv
cmpl
je
repnz
div
ja
les
rorb
test
inc
mov
xor
add
rorb
mov
cmpb
je
sbb
je
repnz
in
jg
mov
and
xor
mov
dec
cld
mov
and
xor
jle
mov
aas
lock
icebp
add
dec
hlt
mov
loopne
dec
mov
js
clc
sub
add
cs
int
xor
decb
jne
mov
mov
fnstsw
int
add
sbb
js
mov
xlat
in
mov
hlt
fbstp
add
push
lock
lea
testb
mov
push
loopne
rcrb
jge
add
mov
lock
jmp
adc
push
aas
enter
lods
test
les
mov
inc
lea
xchg
mov
lea
inc
lea
push
fisttpll
mov
mov
inc
dec
inc
fisttps
push
cmp
clc
jge
inc
dec
lea
lea
mov
mov
sub
mov
sti
mov
mov
dec
dec
dec
inc
inc
cmp
adc
pushf
cld
jg
ljmp
and
mov
cmp
jnp
dec
inc
lea
lock
call
adc
xor
rorl
test
jae
mov
lea
mov
aas
pop
xor
inc
dec
dec
dec
insb
adc
mov
xchg
add
in
inc
cli
fldenv
inc
fldt
push
or
add
mov
pushl
lea
dec
mov
outsb
hlt
lea
mov
or
xchg
lock
adc
mov
sti
loope
sbb
mov
lock
loop
in
call
lock
stc
or
inc
and
ljmp
pushl
mov
inc
xchg
hlt
inc
mov
cld
dec
mov
lea
clc
or
jne
mov
test
mov
iret
dec
dec
inc
addb
test
jg
sub
cmp
jb
mov
into
add
faddl
js
cmpsl
dec
and
add
xor
test
call
mov
cmp
jge
dec
hlt
inc
inc
popa
idiv
in
pmaxsw
mov
mov
inc
inc
mov
int3
clc
inc
add
and
adc
aaa
jb
xchg
fchs
or
iret
xchg
in
lea
adc
lods
dec
inc
pop
nop
cmp
in
push
in
rcll
mov
js
sub
xchg
mov
mov
jnp
inc
sti
lods
dec
mov
call
hlt
jae
lret
jg
imul
mov
inc
xor
push
dec
mov
sbb
push
sbb
mov
adc
subb
cmp
add
arpl
mov
lea
lea
inc
cmp
or
jbe
scas
js
test
mov
and
pop
push
dec
mov
data16
pop
pop
lock
cld
jp
lock
sub
test
ja
add
dec
bound
or
inc
pop
add
sub
mov
xchg
test
fistpl
push
in
and
dec
mov
int3
lea
jl
pop
orl
scas
mov
jno
and
or
ds
aam
dec
mov
lock
loopne
fcompl
or
loopne
pop
cmp
ret
inc
mov
or
out
test
adc
mov
daa
js
add
push
insl
loop
lcall
into
fdivrs
mov
push
push
and
sahf
aam
dec
cmp
or
ljmp
repnz
in
enter
les
rcrb
push
push
enter
adc
add
jbe
out
pop
lahf
xchg
cmp
imul
add
push
mov
mov
adc
xchg
movsb
push
push
test
push
lcall
call
ss
pop
pushf
cwtl
jmp
jl
lds
sarb
mov
mov
stos
mov
mov
jmp
aas
mov
inc
mov
mov
inc
mov
mov
xchg
push
std
mov
xchg
cmp
sub
add
mov
sti
xchg
repz
mov
lea
cmp
in
mov
pushl
pop
lea
push
into
xchg
jb
mov
cmp
cmp
mov
dec
mov
and
aad
xchg
pop
sbb
sbbb
jl
add
adc
pop
sahf
lret
sub
repnz
and
mov
out
mov
push
sbb
js
and
addb
jae
xchg
cmpsl
adc
pop
adc
lret
sbb
stos
mov
in
pop
sbb
cmpsl
or
mov
push
fmull
andl
dec
and
push
inc
pop
sahf
lret
sarl
cmp
cmp
jmp
adc
in
fidivrs
dec
or
xchg
or
mov
xor
push
push
popa
nop
xor
loope
mov
loop
adc
adcb
in
mov
jne
icebp
mov
adc
and
sbb
and
pop
push
mov
pusha
scas
adc
adc
add
adc
cmp
jno
and
stc
mov
js
or
pop
jno
add
sbb
or
push
pop
push
in
push
insb
hlt
cld
cmp
cmp
sbb
mul
push
jle
hlt
lock
iret
in
adc
mov
add
add
in
or
pushf
pusha
hlt
cmp
sbb
cmp
cmpsb
and
loopne
inc
es
hlt
rcll
cld
mov
jg
pop
lock
xor
cmp
xor
cmp
aaa
xor
xor
mov
add
xor
cmp
xor
xor
and
mov
das
or
xor
cmp
idivl
adc
xor
xor
fisubrl
xor
shlb
cmp
add
int3
cwtl
mov
in
aaa
aaa
xor
inc
add
or
or
xor
xor
adc
outsb
cmp
in
in
xor
jl
adc
je
cmp
inc
mov
sub
rcll
aam
mov
movsb
xor
clc
push
inc
mov
add
sub
ljmp
movl
movsl
andb
pop
xchg
in
sub
mov
push
sbb
aam
xchg
outsb
rol
pop
test
in
fwait
add
lea
mov
push
xor
mov
enter
pusha
out
or
lcall
loopne
mov
mov
mov
cltd
mov
mov
js
or
and
loopne
pop
push
imul
fs
xor
test
add
test
in
loopne
mov
lea
nop
pop
pusha
xor
jb
rcrb
fcompl
mov
lods
mov
pop
enter
dec
mov
sbb
add
iret
nop
xchg
jb
adc
leave
pop
or
adc
xchg
aam
jmp
leave
xchg
lahf
mov
clc
lret
cmp
lahf
out
movsb
or
pushl
xchg
dec
mov
add
jl
push
repz
push
xor
cmpsb
inc
pushf
lds
orl
mov
roll
movsb
lret
mov
gs
add
rcll
xor
add
cmp
ds
test
mov
mov
adc
nop
imul
cmp
push
addl
clc
arpl
outsl
sub
xor
push
jb
adc
lock
inc
cwtl
popa
and
lods
push
sub
pusha
jo
sti
nop
and
push
mov
push
jle
add
ds
and
dec
dec
sysenter
cmp
pop
adc
adc
and
movsl
ret
push
xor
or
loop
adc
xor
in
repz
in
xor
filds
sub
mov
ss
cld
push
mov
add
jnp
push
test
xchg
mov
insb
xor
fldl
shl
add
xchg
jmp
out
and
nop
inc
dec
adc
push
inc
push
sbb
push
sub
sub
push
inc
adc
outsl
xor
ja
inc
xor
add
mov
push
jp
add
jge
xor
dec
aaa
das
aaa
ss
xor
xor
jne
sbb
xor
xor
neg
xor
and
inc
add
xor
outsb
pop
mov
dec
add
adc
sub
xor
js
std
push
push
xor
xor
ja
xor
cmpl
repnz
inc
loop
xor
aaa
cmp
pop
push
outsb
bound
ss
mov
cli
pmulhrsw
cmp
mov
fbld
xchg
jp
xlat
xor
ss
cmp
pop
fistl
push
xor
pop
xor
xor
xor
test
jg
push
cmp
popf
inc
outsl
fsubp
pop
or
and
mov
sbb
sub
cmp
mov
xor
mov
je
or
movsl
pop
pop
mov
pop
jp
add
jb
fildll
fcomip
jp
pop
sti
add
jb
adc
dec
cld
mov
rolb
add
movsb
test
daa
je
pcmpeqb
outsl
neg
or
bound
psrld
pop
sti
idivb
jp
fldt
sub
cli
rclb
pushf
and
jp
repz
jg
call
jb
jp
repz
cmpb
mov
sbb
gs
popf
jb
jae
sti
popf
loopne
or
call
jmp
cltd
sbb
div
dec
sub
or
jmp
pop
stc
push
outsb
push
mov
ja
mov
les
adc
mov
xor
outsb
sysenter
cld
jno
jb
test
std
in
decl
or
or
jl
add
stc
in
sbb
fdiv
mov
std
jp
adc
and
push
jnp
adc
sub
adc
pop
sti
jl
out
adc
stc
adc
and
adc
cld
jb
sub
dec
pop
repz
fwait
cmpsb
inc
inc
stos
xchg
sti
xchg
test
sti
sbb
mov
sarl
in
xchg
push
and
stos
sub
adc
xchg
lods
xchg
mov
addr16
into
cmp
js
inc
mov
repz
scas
div
adcb
sbb
and
add
dec
inc
mov
pop
imul
or
or
adc
push
lret
insl
fists
jne
xor
idiv
mov
adc
push
push
jg
pop
pop
insl
testl
in
mov
addr16
sub
stc
iret
das
pop
in
pop
adc
jb
sarl
mov
mov
and
cli
xor
or
pop
push
mov
cmp
adc
int
setge
add
adc
aaa
jp
jge
iret
mov
push
sti
imul
inc
sbb
xlat
sbb
sbb
out
jbe
mov
cmp
jo
imul
mov
xchg
sbb
mov
dec
shrb
in
out
jbe
lcall
lret
lret
push
and
aaa
inc
imul
stc
inc
jp
jo
popa
xchg
bound
push
adc
add
testl
jno
std
mov
mov
cmpsl
pop
rorl
pushf
jno
js
jnp
bound
cmp
jb
cmp
adc
fsubrs
repz
pop
fisttps
pop
mov
dec
nop
dec
or
popf
int3
adc
add
add
lods
js
mov
stos
jecxz
inc
test
aad
ficompl
adc
and
sti
mov
repz
testl
sub
cmc
dec
fcomi
and
je
test
sbb
or
mov
cld
xor
lock
lea
pop
fdivr
and
divl
test
jne
push
adc
jbe
js
daa
inc
imull
loop
mov
aas
call
js
xchg
push
call
loop
ss
inc
push
fs
push
clc
movzwl
dec
test
inc
or
add
lock
mov
push
orb
adc
jp
adc
mov
add
cmp
jbe
loope
push
negb
push
cmpl
je
pop
or
xchg
or
push
and
add
jle
nop
add
iret
insb
shl
jae
iret
inc
dec
shll
jnp
adc
sbb
or
sbb
sub
dec
in
jne
add
ja
incl
dec
outsl
popa
fs
imul
sub
outsb
push
push
pushl
push
push
popa
imul
insb
gs
bound
arpl
std
outsl
in
ljmp
jo
imul
sub
adc
je
popa
insb
inc
insb
insb
outsl
arpl
push
je
dec
outsl
jbe
dec
gs
jo
inc
fistps
bound
outsb
fs
outsb
je
scas
sbb
push
gs
inc
gs
jb
pop
adc
movsb
cltd
mov
adc
test
test
sub
sarb
mov
call
and
inc
push
call
adc
loopne
lea
sbb
sbb
add
call
pop
cmc
hlt
sti
test
call
adc
nop
test
mov
add
lods
jno
stos
xor
cmpl
and
or
loopne
mov
aaa
push
fisubs
pop
test
stc
sbb
dec
push
and
inc
cmp
and
or
or
or
mov
adc
and
mov
adc
test
lret
mov
clc
and
call
in
mov
sub
xor
cwtl
cmp
leave
inc
or
mov
push
lock
stc
bound
inc
jnp
mov
sub
test
pop
mov
xor
push
aad
lock
xor
push
or
hlt
orl
mov
mov
cmp
inc
ret
add
sbb
ret
test
scas
gs
lock
inc
cld
in
sub
mull
pushf
jbe
cmpb
add
sahf
lret
inc
and
subb
dec
and
dec
and
lock
lock
adc
aaa
loop
cmp
movl
in
in
adc
sbb
les
pop
ret
jae
xor
and
mov
insb
cmpsb
lods
fcomi
popa
push
cld
sub
rcll
jbe
scas
shl
call
stos
sub
push
pop
addr16
mov
int3
mov
lea
fadd
mov
adc
xorl
sbb
sbb
rclb
das
pop
in
adc
call
push
sti
adc
jb
jmp
ja
adc
sarb
push
cmp
jne
js
push
push
loopne
or
push
push
ficoms
mov
add
cld
and
inc
mov
sbb
sbb
hlt
or
cltd
movlps
and
add
push
adc
imul
gs
mov
xor
fs
insb
outsb
mov
outsl
cmp
add
popa
insb
push
pushl
sti
jo
je
popa
inc
pop
inc
jo
add
sub
inc
insb
gs
dec
push
hlt
mov
imul
outsl
add
outsb
add
movsl
out
xchg
jo
rol
sti
movsb
hlt
mov
mov
push
cltd
ret
sbb
pop
sbb
fbstp
push
add
or
pop
cmpl
mov
lods
adc
add
pop
push
je
cmc
cli
test
loop
shlb
call
mov
fisttpl
frstor
ss
inc
adc
aas
fadds
mov
adc
dec
test
in
pop
cmp
rolb
or
rolb
cmp
inc
pushf
inc
mov
movb
xchg
mov
mov
daa
jne
pushl
in
sbb
xor
or
jge
xor
add
mov
aam
add
add
push
add
cmp
or
mov
add
sahf
jle
add
loopne
adc
pop
xor
add
and
inc
clc
out
fwait
in
xchg
or
xor
les
and
inc
rcll
mov
test
test
add
lar
fcmovne
decb
pop
cmp
mov
clc
xor
pop
shll
cs
mov
popa
dec
mov
mov
xchg
and
cmpl
xor
div
cmp
mov
and
adc
lahf
clc
inc
dec
test
inc
jbe
and
xchg
fdiv
pop
shrl
stc
xor
ss
clc
add
push
adc
sub
test
mov
xchg
add
add
call
add
out
decb
and
mov
ljmp
mov
add
push
push
loopne
pusha
es
and
ret
cmp
jne
dec
xor
popa
ret
add
mov
sbb
ud2
mov
mov
mov
inc
arpl
int3
add
les
add
cmp
mov
inc
inc
mov
pop
mov
inc
inc
das
ret
nop
add
inc
dec
test
sti
pop
and
ljmp
mov
daa
add
or
outsb
gs
and
fadds
or
or
fsubs
daa
sbb
sti
sbb
and
adc
cmp
aaa
push
xchg
cs
push
lahf
imul
add
add
push
add
inc
push
inc
jle
imul
add
inc
add
dec
sbb
inc
add
cs
dec
pop
add
std
pop
imul
push
inc
sub
or
sub
sub
ljmp
sahf
add
cmp
add
add
add
add
add
out
and
add
sbb
inc
inc
add
or
inc
mov
sbb
cmp
push
inc
cli
adc
add
xor
fisubrs
sti
push
cmp
decl
fisubs
push
lods
push
xor
add
gs
nop
mov
scas
gs
cmp
mov
add
or
fildl
sbb
or
jg
ja
mov
imul
and
cmp
xor
pop
imul
and
scas
jno
mov
sahf
aaa
pop
xor
pop
xchg
notl
or
and
push
je
out
and
jnp
adc
aaa
sub
ds
pop
add
xchg
insl
pop
shrl
cmpsl
or
arpl
push
imul
inc
arpl
or
or
and
dec
pop
faddl
jecxz
or
pop
or
pop
push
and
inc
imul
xor
pop
inc
jp
inc
inc
push
inc
aaa
fildl
push
mov
out
sbb
cltd
rorl
adc
add
or
mov
or
loop
xchg
pop
scas
sbb
pop
push
mov
xlat
lahf
out
imul
int
sbb
pop
gs
lahf
imul
push
xor
icebp
divl
mov
subl
mov
cmpsl
inc
pusha
stos
loope
or
push
xor
mov
scas
out
das
sub
jae
push
jg
lcall
cmpsl
lea
iret
add
call
add
jbe
add
and
add
push
mov
out
adc
daa
lret
add
push
xchg
cmp
in
inc
int
scas
scas
mov
and
add
add
add
popf
das
add
lds
fstpl
or
scas
adc
add
xchg
addr16
push
add
fs
add
xchg
adc
xorl
and
add
arpl
jne
jo
pop
mov
push
xchg
gs
push
lcall
scas
mov
jge
fwait
addl
jnp
mulb
orl
out
out
lods
jnp
sbb
addr16
jmp
xchg
mov
mov
add
out
cs
in
dec
test
xchg
sti
lret
mov
stc
push
sbb
imul
loop
lahf
ret
jge
ljmp
dec
push
jmp
inc
ja
ret
sti
pop
sbb
ret
mov
add
lret
xchg
jbe
mov
call
sbb
jg
cmp
sub
shr
cmpsl
xchg
aam
and
push
push
iret
or
adc
inc
fisttps
lret
enter
ds
orl
fisttpl
in
rorl
pop
stos
sahf
dec
dec
cmpl
enter
dec
pusha
fldcw
icebp
and
inc
rclb
adc
pop
cmp
cmp
data16
hlt
lock
mov
cmp
pop
aam
popf
mov
mov
fildl
add
cmpl
outsl
xor
js
sub
movsl
xor
int
dec
data16
jno
out
mov
test
push
and
dec
ja
int
aaa
insl
or
sbb
neg
pop
mov
dec
mov
adc
xchg
jg
in
addl
add
sub
mov
fs
mov
cmc
lods
arpl
insb
imulb
outsl
scas
lods
shl
inc
or
stos
mov
push
cmp
insb
jnp
mov
mov
imul
mov
andb
and
xchg
mov
fdivs
cmpl
daa
mov
sbb
jno
pop
loope
or
outsb
mov
xchg
fcmovne
rcrl
dec
loop
scas
jno
mov
mov
jo
fsubrp
mov
out
and
rorl
mov
pop
aaa
leave
adc
xrelease
leave
repnz
incl
cmpl
popf
mov
cwtl
xchg
pop
inc
xchg
jmp
shll
outsl
addb
or
lahf
outsl
xlat
inc
out
lcall
fwait
outsl
pop
sub
ds
jmp
mov
fstpt
out
jnp
je
daa
gs
das
mulb
sbb
das
gs
mov
push
insb
in
dec
jno
and
aaa
lret
add
outsb
imul
aas
mov
push
out
fsubs
cmp
jb
in
fwait
sbb
inc
lret
and
add
xlat
or
rcl
lea
mul
mov
or
rcll
sub
adc
pop
push
lods
pop
and
mov
loopew
dec
addr16
fs
push
sub
jae
js
pop
outsl
xchg
adc
and
arpl
mov
cmp
mov
inc
loop
jg
test
idiv
and
shrl
and
or
imul
sbb
jecxz
sub
and
dec
jae
fistpll
xor
sbb
popf
adc
into
aas
xchg
xor
mov
inc
xchg
push
popl
dec
mov
mov
gs
pop
sbb
iret
mov
loope
je
jae
inc
lcall
mov
out
sbb
add
sbb
ja
lock
pop
xchg
add
out
mov
into
mov
jb
sub
cltd
and
testb
sub
testl
fadds
mov
sbb
stos
es
sub
movsb
lahf
or
dec
out
orb
and
out
add
clts
xlat
mov
push
cmp
pusha
mov
add
add
fisubl
push
in
pop
inc
xor
std
popa
scas
cmp
adc
add
idivb
jmp
ja
iret
push
daa
cbtw
in
insl
mov
jno
enter
push
sbb
push
test
ret
out
inc
mov
cmp
loope
inc
xor
scas
sbb
xor
and
mov
sub
popa
dec
add
ja
pop
xor
lods
pop
aas
add
add
and
out
sbb
daa
add
in
les
stc
add
out
lock
add
dec
pushf
sub
out
into
je
daa
out
dec
pusha
add
cmp
aam
je
xor
and
call
ret
repz
fimuls
jmp
ja
inc
add
icebp
adc
mov
mov
cmp
xor
adc
push
mov
out
xor
mov
sub
gs
lds
or
iret
les
flds
roll
cmc
imul
sarb
lcall
pop
mov
les
xor
in
clc
js
jp
jl
iret
and
ds
std
lods
jbe
add
xor
lahf
fdivs
rolb
aad
cli
mov
and
sbb
and
pop
lds
rcrb
adc
stos
mov
mov
cld
lcall
xor
jnp
mov
jle
ret
mov
aaa
fsubr
sub
push
xor
hlt
mov
push
mov
popf
fisttpll
push
jecxz
adc
lret
pop
jno
cli
stos
bound
xchg
mov
out
jle
xchg
arpl
dec
fildl
lret
ja
movsb
push
fdivs
or
or
fadd
xchg
sahf
repz
and
inc
xchg
mov
mov
ds
xchg
lahf
mov
pop
filds
mov
push
sahf
sub
insl
jb
roll
or
insl
stos
push
sbb
jb
lret
xchg
pop
sub
int3
adc
outsl
or
mov
aad
lcall
mov
adc
push
clc
icebp
jns
add
daa
test
test
loope
sbb
mov
daa
out
or
in
aas
mov
and
fmul
xor
mov
add
sbb
mov
cwtl
ds
stos
out
nop
fs
enter
fcmovne
out
hlt
adc
jb
push
fiaddl
hlt
cmc
mov
and
fidivrl
xchg
out
pop
popf
lds
and
pusha
lods
cwtl
std
gs
xchg
int3
sub
das
or
push
push
pop
adc
adc
insb
cmp
mov
inc
lret
push
cmp
xlat
xchg
cmpsl
shrb
and
movsl
sbb
and
add
cmpsb
or
and
fnstcw
mov
shll
mov
fdivrs
loopne
nop
cmp
push
xor
mov
mov
loop
dec
jo
sbbl
mov
aam
jge
inc
inc
rclb
test
scas
push
ret
stos
cmp
mov
iret
jmp
add
mov
mov
loop
adc
dec
mov
je
rcrl
lds
cmp
xor
jp
sub
lcall
jbe
negl
fsubs
sub
rolb
or
add
cmp
sub
jnp
and
jl
cmpsb
jp
mov
mov
adc
inc
or
cmp
cmp
das
cmp
cmp
add
sbb
mov
es
loopne
ret
xchg
adc
out
gs
shll
sub
sbbl
inc
je
jmp
jnp
insl
xor
gs
iret
add
sub
stos
and
cmp
pop
or
ja
in
mov
mov
sahf
push
aam
outsb
adc
jg
clc
jge
stc
out
add
pop
loop
add
or
sti
rcr
mov
add
push
mov
cmpsb
in
sti
icebp
call
insl
add
and
shll
out
add
mov
add
ret
add
xchg
fmull
adc
outsb
jg
xchg
mov
sbb
ret
dec
fs
out
enter
dec
push
adc
and
lahf
cmpsl
pop
in
in
loop
or
movsb
cmp
lret
add
aas
lods
push
fs
jmp
push
sub
iret
int3
add
daa
aam
jne
lcall
bound
fistl
cs
mov
es
pop
xchg
adc
inc
xor
cmpsl
lock
mov
add
lds
adc
xor
dec
sub
paddb
add
test
cwtl
popf
test
dec
out
adc
mov
daa
push
and
bound
lods
in
fwait
ss
or
or
popl
arpl
push
dec
andl
lret
int
inc
leave
scas
push
lcall
push
sbb
test
test
sbb
addb
rcll
xchg
mov
das
sbbb
test
leavew
popf
in
insl
ret
add
push
cmpsb
ret
xor
stc
imul
dec
rclb
fimuls
bound
inc
pop
mov
fldenv
js
scas
add
subl
rcrl
loope
mov
ret
add
mov
adcl
pop
push
mov
pushf
add
add
scas
push
loop
je
adc
js
into
push
or
and
jae
fwait
mov
sub
outsl
jnp
inc
call
aad
nop
imul
push
add
and
sbb
iret
sbb
cmp
clc
rorb
adc
addr16
lds
cmp
jge
mov
loopne
sub
rorl
mov
jns
cwtl
mov
or
mov
mov
or
adc
fildll
mov
xchg
xor
shlb
shrb
shl
daa
jno
cmpsl
jns
je
pop
dec
sarl
cmpsl
stos
pop
adcl
dec
mov
fildll
jle
push
sbb
data16
and
idivl
loope
add
adc
lret
out
aad
push
xor
adc
jb,pn
je
jo
add
out
std
push
cwtl
cmc
jecxz
daa
int3
push
daa
in
ja
sub
mov
das
sbb
jo
sub
lods
jge
sbb
fldl2t
pop
pop
xchg
loope
push
shlb
sub
inc
sti
jg
mov
cmp
mov
or
xchg
popa
subl
pop
mov
arpl
pop
push
jb
fdivl
popa
mov
pushf
out
xchg
test
push
mov
lods
jl
lods
movsl
adc
add
mov
daa
sbb
and
mov
aas
mov
gs
push
xor
mov
mov
mov
fs
xchg
fcoms
inc
orl
bound
pop
mov
add
imul
sbb
pop
mov
cli
mov
sub
add
jmp
addr16
add
jo
inc
lods
adc
jecxz
stos
movsb
test
adc
sti
add
fcmovne
sub
dec
repz
or
icebp
rorb
mov
push
mov
lods
outsb
aam
stos
push
sbb
adc
aad
inc
sahf
mov
add
xchg
cmp
cmp
je
sti
sbb
push
shrb
xor
stos
mov
fmuls
cmpsl
push
dec
push
jb
lock
cwtl
xorl
dec
and
push
cmpsl
mov
pop
xchg
rcr
fldcw
addl
jmp
push
xorl
test
roll
pop
fwait
jp
cmp
xchg
push
xorb
dec
cmpsl
adc
test
divl
lds
lods
cmpsl
inc
aam
inc
sti
sbb
icebp
inc
push
add
jp
sahf
adc
iret
iret
sbb
push
xchg
mov
xchg
shr
jo
jl
add
xchg
in
sbb
pop
dec
jmp
add
cmp
in
loope
jge
xor
sarb
je
loopne
fistl
cmp
sahf
ret
cmp
xor
rclb
fisttpl
adc
pop
xor
aaa
or
mov
jno
jns
add
rcll
stc
push
dec
adc
mov
ret
shr
push
add
outsl
ds
ja
loopne
xor
push
push
mov
sbb
les
inc
fnstsw
lret
loope
mov
gs
ja
adcb
xor
ret
cld
cmp
push
add
outsl
stc
mov
push
or
add
test
lods
loope
and
pop
imul
mov
in
mov
mov
mov
ret
sbb
cld
stos
rorb
and
jne
xchg
addr16
and
ret
push
xchg
inc
push
xor
sbb
pop
test
adc
out
adc
fwait
mov
sbb
ds
insb
cli
sbbb
xor
out
data16
insb
pop
in
add
pop
lahf
into
add
jmp
daa
ss
xchg
js,pn
je
or
mov
iret
sub
scas
lods
repnz
rol
iret
jb
clc
cmpl
and
ret
add
mov
push
mov
repz
xchg
and
add
adc
sbb
pushf
js
sbb
or
iret
ficomps
loope
sbb
sbb
push
cmp
push
sub
inc
fadds
sub
xor
in
pop
pop
je
shrb
adc
int3
lds
xor
mov
in
je
jle
mov
jle
sbb
mov
and
ficomps
cmp
fidivs
test
mov
cmp
loope
adc
pusha
and
cmp
add
outsl
test
dec
push
and
ror
dec
mov
nop
shrb
aad
dec
ljmp
mov
aas
into
cmpsl
test
sub
pushf
rcll
mov
add
mov
subb
sbb
daa
cmp
into
mov
aam
iret
imul
xchg
rolb
or
std
mov
xchg
clc
test
fmuls
mov
rcl
sahf
loopne
add
sbb
adc
xlat
xchg
xchg
xchg
into
popf
pop
fildll
aad
enter
inc
mov
inc
ret
lds
aaa
loopne
fstpt
mov
pop
sbb
sbb
aaa
add
push
mov
stos
out
adc
pop
clc
xor
inc
dec
mov
ds
pusha
mov
fwait
mov
dec
stc
jo
iret
fs
and
scas
xchg
cmpsl
xchg
jg
jae
dec
aaa
mov
movsb
sbb
int3
sbb
shlb
mov
pop
xchg
stc
leave
mov
addl
push
inc
push
add
jo
js
and
test
mov
out
out
add
mov
pop
pop
je
inc
out
mov
mov
ret
test
adc
sarl
mov
jmp
pop
pop
test
js
dec
bound
xchg
jl
adc
js
and
stos
push
das
pop
dec
test
hlt
rcrl
loopne
stos
in
xchg
sarl
rclb
das
dec
mov
out
ja
ret
adc
cwtl
jl
sarb
fcompl
sub
fsubs
sbb
loop
iret
out
imul
sub
fucomp
ret
movsl
mov
arpl
jg
shll
call
mov
movsb
fldcw
movsb
loope
or
or
cli
or
aas
jmp
xor
add
cmp
test
jl
aam
pop
jno
add
bound
arpl
fcomps
xor
dec
sub
iret
stos
push
inc
add
dec
fidivl
test
and
mov
sub
mov
pop
xorl
xor
jle
add
cmp
scas
sub
lods
xchg
mov
shlb
cmpsl
test
je
or
in
xchg
mov
sti
stos
push
xchg
jno
or
mov
push
out
mov
in
ja
cwtl
jne
pop
jo
out
in
lret
push
loop
or
jae
inc
jo
mov
jne
add
bound
and
imul
pop
mov
addr16
cmpsb
pop
lret
pop
daa
and
jo
je
mov
adc
cmp
fimuls
mov
in
and
adc
sub
or
push
push
aaa
lods
pop
pop
shlb
mov
rclb
push
push
out
push
shlb
mov
pop
adc
je
cmp
loop
loope
filds
xlat
add
xchg
rolb
cmp
popa
push
loop
xchg
mov
mov
out
and
and
out
or
stos
jb
into
and
ds
sbb
fdivp
pop
jno
mov
pop
dec
loop
int3
jbe
insb
sbb
lock
in
lods
inc
sub
loope
sub
leave
enter
pop
fadd
pop
js
cmpl
or
cmpsb
xlat
inc
test
outsl
arpl
fidivrl
inc
dec
pop
icebp
enter
mov
test
sbb
lret
lods
in
mov
push
je
clc
fsubrl
mov
loopne
je
je
or
mov
pop
cmpsl
and
movsl
xchg
dec
dec
movsb
and
or
dec
outsb
cli
shrb
loope
sbb
lds
addr16
arpl
cmpsl
push
add
pop
fcomps
push
ret
movsb
out
mov
clc
dec
xor
push
add
fildll
sub
push
lcall
and
sbb
ss
das
je
div
lock
scas
loope
xchg
das
and
aaa
cmp
xor
xchg
rolb
hlt
mov
hlt
or
push
jnp
sbb
daa
jns
xchg
fcoms
and
inc
xor
xor
sbb
idivl
lret
or
loopne
mov
imul
subl
gs
jle
loopne
lock
xor
imul
jae
mov
sub
fsubs
fwait
je
mov
dec
pop
xchg
fiaddl
adc
jne
mov
popf
add
jo
add
mov
jbe
roll
cltd
iret
mov
pop
mov
ljmp
inc
or
jecxz
stc
pop
add
xor
rolb
cmp
add
rcl
sub
ljmp
xor
movsl
mov
adc
xchg
fcoms
jae
leave
fldcw
fidivl
push
xlat
test
lret
sarb
bound
int3
sbb
ffree
es
and
pop
mov
flds
xchg
cmp
mov
mov
in
sub
cmp
js
loop
insb
je
xor
pop
xchg
jb
or
pushf
sub
push
sub
pop
scas
in
push
sbb
pop
and
and
mov
into
adc
xchg
sarb
and
loope
mov
mov
adc
pushf
loop
jge
sub
sub
lods
mov
scas
icebp
fcomps
leave
add
insl
adc
mov
xor
cmp
and
mov
in
pusha
je
mov
jmp
lea
and
outsl
pop
adc
pop
mov
std
lods
das
and
fdivs
fcomp
pusha
mov
adc
jp
lcall
dec
mov
ret
roll
icebp
dec
stc
shl
cmp
xor
add
fadd
or
jecxz
fs
repz
inc
loopne
sbb
scas
lcall
push
hlt
add
sbb
inc
lret
or
hlt
ds
and
outsb
scas
xor
aaa
mov
and
lret
sbb
movsl
outsl
pusha
fmull
jo
shlb
adc
push
inc
sub
xor
xchg
lds
push
mov
scas
sbb
mov
and
adc
test
inc
dec
lret
rcr
loopne
loopne
clc
push
mov
aam
mov
add
test
jl
movsl
lret
mov
addb
adc
pop
dec
xchg
jne
lret
cmp
lea
add
jp
mov
push
sbb
scas
push
push
mov
cmp
and
or
add
scas
mov
jb
adc
cmp
push
mov
ss
ss
jp
bound
and
adc
pop
lret
xchg
shl
fistpl
stc
mov
inc
pusha
addb
popa
aad
jecxz
push
ds
dec
push
lret
push
sub
das
and
pop
xchg
jmp
cld
rclb
jecxz
push
pop
add
out
loop
adc
cmp
mov
loope
cmp
xlat
pop
cmp
lahf
sbb
jmp
mov
cli
mov
cmp
push
in
or
loop
data16
sbb
packsswb
cmp
add
dec
xchg
lods
fstps
inc
adc
cld
push
rorl
add
lods
addr16
xchg
add
add
sub
pushf
xor
mov
or
inc
mov
fldl
roll
add
jle
or
imul
xchg
jno
pop
push
cmp
add
enter
int
nop
mov
es
xor
and
push
cmp
push
push
jle
das
loopne
jecxz
adc
int3
and
dec
loopne
cmpb
stc
loope
mov
add
mov
shrb
flds
ja
xchg
jae
and
push
in
adc
lock
push
and
das
pusha
mov
jnp
or
fwait
mov
jp
pop
add
addps
lods
mov
insl
mov
jne
rclb
push
movsb
lret
or
fcmovne
adc
lods
je
fs
xchg
pop
rclb
sahf
orb
sbb
lcall
fs
mov
cld
sbb
mov
jne
jmp
or
insb
rolb
in
ret
mov
sbb
jo
adc
and
add
int
mov
adc
aam
dec
adc
push
je
lods
loop
mov
xchg
cmp
rorl
loopne
mov
pushf
jp
loopne
test
dec
cwtl
sbb
mov
jle
mov
pop
jmp
push
inc
rorl
cld
aam
add
mov
iret
call
inc
loope
pusha
movsl
cli
enter
pop
out
push
paddb
call
add
push
mov
pop
xor
xorl
je
fcompl
inc
cmp
inc
mov
pop
push
push
inc
xadd
icebp
and
pop
repz
sub
sub
cmpsl
test
mov
cmp
jae
js
jle
adc
dec
lret
mov
sbb
xor
orb
fmuls
fdivs
sbb
push
pusha
jb
lcall
push
jae
add
loopnew
sub
mov
inc
ljmp
scas
sbb
mov
cmp
and
sbb
data16
push
iret
add
je
shr
aam
xchg
ret
cmc
and
push
cmp
into
lods
in
ret
push
js
mov
push
fiadds
pushl
push
xor
mov
js
mov
mov
repz
aas
out
lods
jp
xor
sub
push
push
in
xchg
mov
out
sub
add
inc
cli
adc
lahf
scas
movsb
loope
sbb
int
sub
adc
loop
push
addr16
inc
imul
nop
sub
subb
pop
cmpsb
add
sub
or
scas
rorb
or
divl
mov
xchg
stos
subb
push
std
or
xor
sub
ret
inc
shl
and
add
aam
push
push
adc
adc
xchg
dec
push
xor
imul
cli
mov
xor
arpl
clc
je
in
jnp
xlat
iret
mov
pop
rcr
dec
jnp
xchg
test
inc
jae
aas
add
inc
lock
ret
dec
mov
mov
test
cs
insl
adcl
in
mov
push
sar
scas
daa
test
ficomps
in
xor
hlt
faddl
jecxz
and
clc
sbb
leave
mov
movsb
loopne
movl
shlb
adc
ret
fbld
in
adc
and
ret
inc
call
or
push
or
add
clc
push
dec
pop
add
inc
rolb
rcll
int
and
sbb
loop
ds
sar
lds
mov
sbb
push
jne
aad
in
sub
lock
push
sub
out
adc
fcoml
lods
out
fcoml
in
jge
jl
ret
outsb
jbe
pop
sahf
adc
adcl
cwtl
lahf
cmp
add
add
leave
pop
daa
in
pop
icebp
rorl
sbb
jbe
shrb
sub
pop
pushf
repnz
or
fstpl
sbb
xchg
push
shll
jnp
mov
sbbl
push
inc
push
or
outsl
mov
cmc
sub
loope
sbb
or
je
cmp
jg
mov
lods
insb
jge
outsb
dec
jne
daa
fadd
jmp
pop
pop
xor
popa
imul
sub
jmp
jno
xchg
cmp
adc
jmp
or
cwtl
ljmp
mov
je
sub
std
bound
imul
mov
fisttps
dec
inc
cmpsl
mov
bound
imul
into
fsubrl
mov
mov
pop
pop
mov
add
mov
adc
cmp
inc
out
sub
add
out
adc
loopne
xchg
pop
jmp
loop
outsb
cmpsb
pop
lock
jo
ss
mov
jno
xchg
stos
fimuls
inc
loope
lret
aas
orb
sub
mov
add
inc
ret
mov
dec
pusha
pusha
add
pop
cmp
aas
loopne
lods
add
aam
mov
dec
es
mov
ljmp
dec
hlt
fdiv
jae
push
push
jle
sub
insb
cmpsl
xor
xlat
popa
out
cmp
xchg
ja
and
lods
xor
sub
jbe
dec
rcl
jno
pop
sbb
inc
adc
add
xchg
pop
mov
sub
xchg
shrl
cmp
jo
js
inc
push
inc
fnstsw
and
cmpsl
push
sub
push
pop
ja
dec
loopne
dec
ljmp
and
or
loopne
jl
xchg
xor
orl
arpl
ss
test
add
and
stos
hlt
dec
clc
rclb
sti
push
pop
cld
push
push
and
lea
add
xchg
dec
push
in
xchg
xchg
inc
iret
or
test
pop
in
add
adc
hlt
mov
xchg
mov
or
mov
cltd
cltd
sub
fldenv
add
dec
mov
ja
or
adc
ror
xlat
xor
mov
ss
call
pop
js
add
sbb
nop
push
pcmpeqw
int
jmp
sbb
jmp
out
mov
fsubrp
cwtl
jmp
push
das
push
cmc
je
inc
test
jmp
das
test
add
insb
cs
pop
lods
sbb
adc
push
cwtl
sub
sub
mov
aas
adc
pop
inc
and
or
mov
add
and
sbb
sbb
pop
int3
sub
add
in
or
inc
xchg
adc
stos
fcomip
jne
mov
inc
shrb
scas
je
mov
push
rclb
push
adc
lods
mov
adcl
adcl
rcll
push
pop
jl
push
loop
in
jne
std
xor
push
aaa
push
test
ret
popa
psrlw
pop
push
leave
and
pop
orb
mov
mov
addr16
xlat
jmp
inc
outsb
mov
cmp
push
mov
clc
and
int
les
test
add
hlt
or
addl
cli
sbb
pushf
add
push
xor
add
push
icebp
and
xchg
loop
sub
adc
cmc
in
xchg
sahf
sub
xchg
cmp
addr16
cmp
subb
sahf
jecxz
test
jge
out
cli
fcmove
jmp
jle
dec
dec
adc
push
ja
adc
xlat
push
fnstenv
and
xor
sahf
pushf
ret
jmp
shrb
std
pop
scas
push
push
shr
scas
mov
cltd
ret
xchg
jbe
mov
fdivs
imul
jecxz
jp
jp
dec
inc
mov
stos
pop
cld
daa
xchg
mov
lods
jne
movsb
in
jnp
scas
in
sbb
push
ljmp
inc
sub
adc
or
inc
pop
int3
movsb
jl
pusha
rorl
gs
push
lods
out
scas
add
outsb
inc
out
popf
sbb
out
lcall
orl
and
scas
xlat
data16
cmpsl
scas
mov
insl
push
loopne
sbb
pop
out
iret
outsl
push
mov
in
out
add
sbb
rorl
fbstp
stc
imul
lcall
fwait
add
jnp
add
out
jo
sub
mov
sbb
mov
mov
fsts
in
stos
mov
add
and
test
sub
adc
add
push
outsb
mov
mov
or
lock
pop
insl
mov
xor
pop
fstpt
cmp
add
jl
add
test
clc
cmp
mov
push
inc
fmuls
stos
imul
fsubrs
repz
loope
hlt
dec
sahf
scas
jns
je
es
fistpl
scas
dec
jae
sbb
das
inc
dec
mov
and
loop
mov
loope
pusha
jo
or
add
push
inc
test
fwait
jp
ffreep
inc
imul
cwtl
pop
cmp
lock
mov
mov
aaa
push
rolb
movsb
sahf
cmp
push
jne
lods
hlt
fcmovnu
jbe
push
sub
pusha
in
mov
in
orl
aaa
decb
cmp
cmpsl
jl
cmpsl
add
sbb
enter
mov
data16
ret
cltd
jge
or
xchg
lret
pop
sub
push
pop
mov
jmp
add
repz
test
lret
xchg
mov
mov
pusha
jle
mov
dec
pop
addr16
cmpsl
mov
and
adc
push
test
jb
cmpsl
xchg
xor
clc
sub
pop
lret
push
sbb
jle
cltd
mov
aam
out
rorl
sti
rolb
popa
pop
cmp
add
push
or
shlb
mov
push
nop
sub
fidivrl
cmc
hlt
xor
adc
sahf
fnstcw
std
dec
push
sub
xchg
pushf
js
sbb
mov
es
inc
adc
or
sub
sbb
test
enter
dec
cmp
adc
pop
outsb
rcll
push
and
ja
out
cmc
movsl
xor
out
sbb
lods
addr16
cltd
rorl
sbbb
sbb
and
mov
daa
sub
and
movsb
inc
das
loopne
and
xchg
dec
fiadds
add
sbb
into
inc
stos
std
dec
iret
inc
mull
mov
inc
insb
rorb
push
cs
notl
movsb
frstor
sub
cmp
sub
dec
fcomps
or
push
fcompp
dec
sub
sub
cmpsl
cmp
dec
sar
mov
or
mov
sbb
sbb
ss
xchg
loope
fstl
push
and
in
loopew
or
inc
pop
cs
paddb
jmp
adc
icebp
jl
aas
jbe
pop
std
add
add
inc
cmpl
out
add
daa
mov
xchg
pop
mov
fwait
lock
mov
add
jnp
cmp
add
or
xchg
rcll
inc
test
inc
pop
add
xchg
mov
sbb
inc
fldl
lret
add
aaa
dec
into
or
iret
jne
mov
les
inc
aaa
pop
jmp
inc
mov
jb
daa
jno
daa
add
sbb
clc
orl
adc
sbb
ljmp
stos
lock
mov
sub
sahf
add
ror
ds
ljmp
sub
cmpl
cmp
fadds
je
or
ret
mov
add
loopne
fwait
push
cmp
jbe
popf
rol
cmpsb
mov
addl
dec
notl
je
lea
cmpsl
adcl
and
cmp
movsb
adc
je
push
lock
push
pop
lods
fistpl
lret
pop
addb
xor
out
in
fldenv
push
pusha
xchg
lods
xlat
add
cmp
cli
mov
loop
sub
adc
and
into
sub
cmpsl
inc
jae
cltd
and
dec
add
test
js
rolb
sahf
sub
xor
in
sub
ss
mov
xor
and
cmp
sbb
mov
loopne
fdivrp
inc
aaa
icebp
push
push
cltd
nop
cmp
cmp
sbb
sub
push
movsb
and
sbb
or
sbb
dec
mov
pop
mov
aas
sbb
je
pushf
je
shll
add
mov
push
add
add
dec
jl
daa
lahf
mov
shlb
xchg
mov
pop
inc
mov
call
pop
sub
sub
add
stos
add
mov
jmp
iret
test
fcoml
gs
add
jno
fcmovu
mov
mov
arpl
inc
jns
add
cmp
sub
mov
cli
nop
lret
loopne
adc
clc
push
insb
push
xchg
cmp
popa
xchg
icebp
andb
adc
sbb
pop
xor
add
xchg
dec
adc
nop
insb
or
mov
or
adc
ret
out
jo
or
daa
in
push
jne
stc
aam
sbb
sub
xchg
popf
rorl
test
lret
call
test
std
dec
and
inc
test
jecxz
sbb
jne
mov
dec
mov
mov
add
pop
add
test
or
imul
mov
inc
scas
lret
xlat
inc
mov
das
inc
and
add
mov
out
loopne
push
ss
xchg
push
andb
jp
cmp
or
out
or
and
add
push
pop
add
je
jecxz
jb
test
sub
push
dec
in
add
shr
sub
mov
add
xchg
ss
int
fsubrl
add
inc
cmp
stos
add
sub
mov
daa
into
ret
mov
into
sub
decb
rorl
nop
inc
jmp
call
test
outsl
and
test
push
repz
outsl
jnp
shrb
mov
sahf
rep
das
mov
sbb
arpl
mov
jne
push
xchg
push
ja
pop
or
inc
notl
sbb
ss
pusha
sbb
mov
or
repz
int
lock
and
incl
and
int3
xchg
dec
mov
popf
jo
add
mov
repz
cmpb
aad
rcll
in
adc
push
jl
clc
sti
cmp
sbb
add
sub
inc
push
sub
popf
sbb
jle
cmp
mov
loopne
filds
ss
xlat
add
xchg
adc
pop
aad
stos
in
adc
int
or
dec
loopne
pop
lret
jmp
mov
ret
jo
test
sti
into
call
pop
bound
mov
inc
mov
pop
push
mov
xor
sar
outsl
test
rcrb
loopne
pop
ret
mov
jle
cld
movsl
pop
idivl
push
xchg
jp
lahf
dec
popf
adc
in
xchg
sbbb
popa
mov
icebp
adc
divb
xchg
cmp
or
dec
je
add
popa
adc
es
fldenv
mov
adc
jae
push
iret
lahf
lock
mov
adc
mulb
push
sbb
adcl
leave
lret
sbb
mov
mov
push
ljmp
mov
rcll
icebp
shrl
xchg
xchg
ja
push
mov
xchg
push
mov
lods
mov
dec
ror
add
xlat
inc
popf
ret
cmp
adc
mov
push
jecxz
jl
add
add
shrl
sarl
aam
or
sub
popf
cmp
jno
je
mov
loop
test
add
adc
ror
out
stos
dec
adc
mov
ja
pushf
add
jge
push
inc
sub
loopne
out
loopne
jl
and
xor
add
pop
cmp
and
lods
inc
jmp
xchg
sbb
enter
mov
dec
fsub
inc
xor
int3
xor
les
inc
mov
std
mov
or
add
push
cmc
insb
mov
arpl
mov
lods
aad
int3
jp
dec
mov
or
jecxz
rorb
mov
mov
inc
arpl
sub
pop
ret
loope
lock
adc
rclb
loop
lea
or
sahf
das
adc
btr
movsl
push
cwtl
inc
mov
fiaddl
fiaddl
das
in
out
mov
lods
xor
or
js
ljmp
lods
adc
and
scas
test
fdivrl
hlt
loopne
enter
callw
ljmp
sub
incl
sbb
adc
in
pusha
mov
mov
outsl
ret
enter
sbb
cli
inc
and
dec
xrelease
cwtl
dec
shll
cmpsl
cmc
out
leave
jecxz
test
mov
stc
iret
xchg
add
ret
adc
or
mov
push
push
lods
test
in
das
icebp
and
adc
push
data16
sub
daa
fsts
inc
in
push
dec
ret
adcl
inc
push
mov
pop
mov
push
insl
sbb
jns
fwait
sub
in
add
dec
sbb
xchg
sub
scas
sbb
xlat
mov
ficoms
add
cmp
pop
push
adcl
jns
shrl
jle
sub
rcrb
outsl
bnd
push
enter
push
inc
cmpsl
pop
sbb
sbb
nop
call
push
leave
aas
or
xchg
bound
mov
andb
clc
fsts
xchg
je
test
sub
mov
inc
call
subps
ss
and
and
and
ljmp
rolb
bound
pop
add
xor
push
addl
and
loopne
xchg
dec
xor
xor
mov
jnp
imul
ret
jns
jp
fldcw
test
adcl
enter
pop
and
lcall
loopne
inc
add
jns
aad
sbb
test
sbbl
fs
gs
insb
ret
cmp
lock
xchg
mov
cmpsb
mov
mov
call
push
add
je
jne
mov
lret
cmpsb
shlb
ja
in
or
popl
rcrl
cmpsl
xor
and
sbb
pop
orl
adc
mov
addr16
mov
rclb
add
loope
loope
dec
ja
popa
jp
or
mov
cwtl
pop
sbb
sti
adc
pop
and
pop
cmp
daa
sub
je
cmp
sub
pusha
cmovs
jo
cld
aam
xchg
adc
adc
loope
pop
inc
adc
ret
notb
test
and
or
add
repnz
iret
dec
mov
xchg
add
sbb
push
iret
ret
jp
jae
in
adc
sbb
hlt
add
inc
cmp
cmp
jno
or
ror
mov
adc
filds
cmpsl
cmp
stos
popa
js
idiv
jecxz
and
jnp
cmp
sbb
test
add
test
or
std
orl
cwtl
mov
loop
fmull
test
pop
das
cmc
dec
push
iret
mov
je
punpcklbw
add
pop
adc
lock
in
cmpsb
arpl
dec
inc
icebp
adcb
sub
nop
adc
mov
cmp
mov
push
iret
popf
sub
xchg
cmc
das
xchg
rcll
nop
out
mov
inc
jae
cltd
stc
pusha
xchg
push
jae
add
notb
ret
mov
push
sub
cli
or
out
fiadds
xchg
or
adc
or
ss
mov
test
sub
cmp
jns
push
mov
andl
stos
int3
xchg
add
mov
cs
mov
sti
rorl
fisubrs
inc
cmpl
sbb
sbb
xchg
xor
jno
pop
ja
stc
push
roll
mov
xor
push
bound
jbe
jle
push
dec
and
iret
js
lods
push
pop
hlt
adc
cwtl
lahf
out
out
and
pop
lret
xchg
ss
lods
movsb
iret
xor
push
adc
pavgb
movsl
xor
rolb
mov
and
and
test
lods
test
mov
xchg
fldenv
scas
push
pop
push
push
pop
insl
andl
adc
push
xchg
xchg
or
and
scas
das
push
xor
xchg
sub
scas
bound
or
popa
scas
dec
mov
xlat
aad
test
cmpsb
ds
das
push
and
sbbl
push
test
jmpw
jno
xchg
aaa
jle
cmp
mov
sti
adc
mov
cli
imul
pusha
dec
xchg
dec
xorb
adc
and
lcall
adc
adc
ljmp
jbe
pop
xor
and
leave
aaa
pop
mov
sahf
inc
sub
je
pop
inc
inc
adc
fcmovb
mov
pop
sbb
fsts
inc
js
inc
aas
in
call
mov
push
test
mov
and
sbb
in
int
je
sbb
lock
push
or
or
std
inc
lock
pop
lcall
cmp
jp
repnz
adc
cmp
int
inc
out
dec
lcall
shr
ljmp
push
adc
push
add
dec
iret
test
mov
or
xor
dec
testl
cld
adc
ljmp
repz
test
daa
and
or
ljmp
icebp
add
pushaw
fucom
or
lods
xlat
pop
dec
mov
jg
xor
adc
jo
mov
data16
sbb
dec
xor
or
clc
fmull
pop
out
stc
out
jecxz
icebp
pop
inc
jg
loop
xchg
daa
push
lods
adcb
dec
dec
xchg
dec
cmp
jnp
cmp
push
mov
or
pop
movsb
pop
fildl
sub
enter
mov
scas
or
jno
test
jb
push
pop
iret
push
ljmp
cmp
xchg
add
add
xchg
push
add
fdivl
shrl
sbb
sub
pop
mov
sub
ss
rcll
adc
ja
mov
ljmp
sub
mov
push
add
and
sub
dec
test
pop
lock
jecxz
sub
fcmovu
mov
pop
xchg
ljmp
inc
add
push
lret
adc
inc
mov
cmp
sbb
lock
jmp
ret
jno
test
dec
and
push
arpl
lock
cwtl
mov
inc
push
adc
in
push
push
cmp
pop
rorb
xchg
clc
push
or
les
sbb
js
pop
push
testb
sbb
lahf
repz
add
das
inc
xchg
sti
stc
into
loop
push
fmul
cmp
js
add
add
cs
push
lret
mov
push
inc
push
pusha
cmp
ret
test
iret
arpl
cmc
fidivs
mov
inc
jecxz
xchg
jae
jno
in
xchg
sub
sub
or
push
aas
insl
mov
xchg
out
fwait
enter
mov
pop
inc
fwait
aam
out
sub
cmp
loope
mov
cmp
push
scas
cmp
xor
cld
mov
adc
and
test
out
imul
xchg
rcll
test
ret
pop
mov
and
es
push
clc
popa
or
push
push
and
cmp
imul
fdivl
pop
inc
push
mov
pop
ljmp
mov
test
test
sbb
or
shrb
in
mov
or
subb
loope
out
cmp
dec
sbbb
sub
sub
lret
inc
jmp
test
mov
sbbb
fsubl
and
jmp
or
xchg
xchg
sub
dec
pop
nop
jecxz
loopne
push
pushf
push
xchg
jge
and
push
add
mov
xchg
hlt
dec
pop
sub
test
push
cmp
lods
pop
pop
gs
ss
imul
push
fwait
insb
ja
jo
addb
test
xor
jo
inc
cmc
lods
ljmp
xchg
lcall
loop
lods
add
addb
xchg
call
push
or
sbb
fcoml
cmpsl
jo
dec
lods
xlat
or
lods
orl
adc
xorl
shll
outsb
pop
shrb
call
out
dec
or
pop
addl
sub
or
pop
test
fildll
repz
sub
jo
into
inc
clc
les
or
pop
ljmp
pop
test
adcl
out
push
insl
hlt
test
xchg
xchg
je
mov
fldenv
jb
adc
or
xor
adc
popf
add
enter
cli
add
data16
test
inc
inc
mov
call
sub
push
mov
adc
test
daa
arpl
ret
xlat
loop
loope
das
inc
sbb
sbb
cmp
in
fildl
std
dec
adc
stos
inc
popa
rcll
loopne
pop
inc
nop
jp
push
xlat
push
outsb
sbb
imul
push
adc
push
mov
and
inc
add
pop
icebp
sbb
and
icebp
out
pop
idivb
mov
xchg
das
push
dec
shrb
add
mov
add
adc
loopne
adc
add
fistl
or
sbb
xchg
repnz
add
rolb
push
push
jno
push
call
cltd
push
mov
sbb
mov
mov
add
fst
add
sbb
push
xchg
pop
cmp
jnp
and
fs
loope
mov
xchg
fisttps
es
faddp
dec
add
jge
sbb
icebp
xlat
sar
mov
outsl
inc
outsb
repz
movsl
ret
test
shlb
aam
test
pop
test
push
aas
inc
pop
fldcw
test
iret
loopnew
add
or
inc
dec
mov
sbb
and
adc
outsl
xchg
jbe
daa
ret
pushf
stc
lea
iret
ja
and
icebp
hlt
dec
std
adc
pop
loopne
sbb
sbb
ljmp
pop
add
out
sub
and
aas
mov
add
jl
or
mov
shlb
jp
jecxz
xor
pop
mov
out
mov
pop
scas
loope
xchg
test
repnz
push
sub
daa
cmp
adc
faddp
xchg
rorl
push
lods
lods
mov
push
xchg
shrl
callw
sub
or
add
outsb
inc
sub
inc
ficoms
scas
and
sub
fcoms
sbbb
outsb
mov
mov
xchg
inc
imul
dec
mov
shll
clc
cmp
and
sub
xchg
scas
bound
or
xchg
jg
pop
pusha
mov
jne
add
lret
or
loope
scas
pop
loopne
imul
and
xchg
cmc
inc
jge
sbb
arpl
loopne
mov
pop
add
or
inc
mov
dec
inc
sub
faddl
sahf
ret
enter
je
dec
sub
je
movsl
mov
in
ljmp
test
mov
adc
addb
test
push
sub
lock
nop
cli
std
xor
fsub
cmp
push
test
loope
push
call
jg
lea
jbe
ficompl
cmp
loope
sbb
jg
xor
inc
in
dec
scas
inc
arpl
push
dec
xchg
pop
jbe,pn
cwtl
bsr
popa
test
movsb
pop
push
xor
mov
mov
add
pop
shrl
cmp
and
mov
jns
inc
movsl
repz
dec
mov
pop
out
psllw
loopne
int3
stos
data16
out
or
fs
cwtl
bound
sbb
xlat
inc
les
sub
mov
popa
test
shl
cmpb
or
in
inc
int3
or
sbb
and
cmp
push
sbb
cmp
jno
push
roll
std
sub
and
sbb
popa
add
sbb
dec
cmpsl
jo
lahf
test
lods
jmp
xchg
mov
sbb
jb
popa
xor
ror
in
test
movsb
mov
sub
mov
cmpsb
xchg
sbb
bound
decl
pusha
mov
xor
imul
lea
iret
pop
adc
call
inc
subb
xor
fs
mov
mov
popf
push
adc
lahf
and
mulb
xchg
dec
fucomi
xor
xchg
jne
add
in
ret
stos
inc
adc
xchg
fsubrl
inc
push
js
fdivrs
cwtl
loop
add
mov
mov
je
aam
iret
pusha
rcr
push
pop
pop
sbbb
jo
jbe
das
std
push
cmc
clc
lret
bound
popf
sbb
mov
add
stc
repnz
sbb
mov
inc
xor
clc
fcoms
push
fisubl
ljmp
inc
sbb
jae
ljmp
repnz
xor
sbb
out
aad
xchg
pusha
pop
push
push
push
lcall
pop
xor
lods
sub
divb
ja
sbb
fsts
xlat
push
pusha
bswap
pop
cld
pop
jne
add
mov
jge
ljmp
aad
jecxz
ljmp
fbld
hlt
and
add
sub
xor
stc
es
pop
sub
bound
insb
xor
loope
mov
mov
jo
inc
xor
cmpb
push
jae
and
add
pop
lret
jns
int
sub
je
insl
pushw
dec
or
fiadds
filds
ret
mov
mov
imul
test
fcmovb
psllq
addr16
sbb
cmp
imul
daa
cmp
sbb
lret
fimuls
add
test
cs
jno
xchg
mov
sbb
dec
ret
loopne
iret
insl
and
je
loopne
push
inc
inc
ja
sbbb
cmpsb
bndstx
push
loopne
shll
in
outsb
add
jg
sbb
fisubl
divl
cmp
scas
push
and
jle
pop
inc
jmp
jmp
jb
faddl
sbb
incl
add
lods
mov
or
mov
add
rcrl
push
stos
iret
fiadds
addr16
mov
mov
lea
repz
sbb
adc
pop
jno
addl
mov
dec
add
bswap
xor
into
inc
repz
lahf
jne
inc
sbb
add
sub
mov
cmc
jne
cs
mov
sbb
popa
pop
sub
fs
call
mov
js
ja
push
scas
add
mov
test
loope
mov
and
adc
testb
jne
lods
push
stc
fildll
inc
push
sub
or
shlb
xchg
and
push
shlb
add
int3
push
movsl
mov
adc
push
pop
mov
inc
sub
push
inc
mov
sti
sub
andb
lret
and
in
mulb
mov
out
fwait
jo
imul
cmp
push
adc
push
jne
mov
mov
out
sar
cld
out
inc
or
nop
xor
out
daa
cmp
or
ja
and
lret
inc
in
adc
jbe
add
mov
ds
sarl
jle
aaa
ljmp
lods
je
cmp
aaa
test
arpl
addl
enter
push
sub
mov
mov
jbe
mov
and
xchg
aas
cmp
aam
std
dec
mov
xor
lret
mov
xchg
add
push
dec
clc
lea
clc
aam
pusha
std
shrb
pop
fsubrs
jle
in
pop
icebp
jne
push
xor
cmc
loop
pop
jnp
sbb
xchg
mov
pop
dec
sub
js
cmp
cmp
in
cmc
mov
jg
push
or
pop
imul
das
add
cwtl
inc
sbb
repz
and
adc
ret
dec
popf
loop
mov
aam
mov
nopl
mov
or
cmpsl
xchg
pop
loop
push
stos
push
out
iret
mov
adcl
jo
sti
or
or
xor
icebp
fldt
mov
xchg
or
imul
mov
xor
jnp
insb
inc
int3
sub
insb
int
pop
xor
push
push
push
xchg
mov
and
out
sti
xor
sbb
mov
mov
push
movsl
xor
sbb
loope
pop
add
mov
mov
mov
int3
out
mov
daa
lock
or
add
imul
and
xchg
sub
xchg
mov
cs
fsubs
mov
xchg
and
into
jp
lds
push
mov
cld
pop
add
icebp
push
xchg
mov
mov
inc
sub
sbb
jp,pn
icebp
xor
popf
test
jb
dec
sub
mov
loope
or
neg
or
jbe
test
pop
cs
lret
popa
jle
push
outsb
call
lret
mov
add
add
inc
and
aam
xchg
shl
dec
fists
or
push
xchg
pop
ljmp
mov
sbb
pop
and
or
pop
jmp
js
jbe
rolb
repz
imull
loopne
xchg
jmp
out
frstor
dec
adc
jae
loopne
icebp
ljmp
xorl
mov
xchg
push
cmp
decl
ljmp
mov
call
mov
stos
sub
in
inc
rorl
mov
repnz
cmpsl
mov
lret
leave
jno
jl
add
push
in
mov
jle
mov
mov
int3
je
cmpsl
icebp
and
or
xchg
pushf
adc
mov
mov
dec
mov
int3
push
shrb
repz
lea
mov
add
mov
mov
cmpsb
mov
dec
push
and
pusha
push
adc
sub
push
adc
mov
and
add
fsubl
jbe
ss
scas
mov
jo
push
sub
jl
sbb
push
inc
mov
inc
cmp
pop
push
push
push
xor
push
mov
in
and
adcb
or
xchg
mov
mov
or
mov
jns
jne
sbbb
xchg
and
xor
cmpl
sub
ljmp
xchg
ret
clc
add
xchg
lods
stos
inc
inc
enter
xchg
push
es
stos
rorb
add
arpl
push
push
imul
jecxz
les
xlat
leave
test
sub
or
mov
subl
mov
inc
test
std
adcl
and
cmp
lock
adc
gs
fsubl
stc
inc
xlat
add
mov
movsl
xchg
and
out
mov
jecxz
rcrl
fisttps
pushf
xor
fisttps
mov
or
cmpsl
pop
xchg
jle
add
fs
xchg
fstpt
fistl
call
push
mov
adc
dec
push
sbb
aam
sbb
jne
and
sbb
jo
lea
sarb
fiaddl
add
pop
lcall
mov
or
add
add
cmp
push
imul
jne
mov
leave
or
pop
pop
pop
push
and
popa
mov
leave
xor
dec
dec
sbb
mov
add
adc
push
push
push
fstps
scas
adc
or
addr16
dec
push
push
lods
das
sub
push
mov
aad
or
cmp
sub
or
xor
push
sahf
cld
sbb
adc
cmc
popf
fisubrs
xor
cmp
add
inc
mov
lock
arpl
movsb
int3
push
jo
cmp
imul
movsb
cmpsl
leave
lds
sahf
imul
imul
push
leave
pop
and
je
clts
test
add
or
sub
das
push
cmp
mov
jne
or
xor
or
lods
shlb
ja
inc
int3
and
out
adc
xchg
ss
mov
or
dec
push
test
cmp
pop
jns
and
stos
jle
push
data16
mov
xchg
shl
jo
push
lea
out
popf
xchg
add
sub
popf
sbb
or
les
sahf
xor
lret
push
scas
lahf
les
in
pop
pop
popf
insl
pop
or
cmc
or
scas
bound
or
jo
mov
pop
inc
and
insb
fwait
dec
and
sahf
jb
inc
xor
ds
pop
cltd
fdivrp
sbb
icebp
sti
femms
jno
sub
pop
mov
dec
adc
mov
imul
xor
lods
or
inc
xchg
push
mov
sahf
jg
jb
xchg
push
jns
add
dec
loopne
loopne
pop
pop
mov
inc
ds
lock
pop
jp
mov
movsl
push
loopne
aad
add
push
test
lock
aad
pop
push
scas
mov
addr16
sub
divl
repnz
inc
mov
sub
sub
pop
mov
cmpsl
popa
fwait
movsl
outsl
cmp
fwait
xchg
addr16
sbb
clc
shlb
iret
dec
sub
pop
sbbb
push
xchg
pop
roll
rcll
jecxz
sub
fsubrs
ljmp
or
scas
pop
and
sbb
pusha
test
aam
ret
sbb
imull
test
test
jbe
fbld
js
dec
icebp
pop
mov
pop
out
push
jmp
and
and
inc
clc
ficoms
nop
add
mov
add
popa
inc
jmp
bound
xchg
cwtl
sub
push
call
xchg
add
mov
loope
fidivs
mov
cli
insl
shrl
movl
xchg
mov
or
jl
aam
pop
pusha
repz
ss
add
mov
xlat
mov
pop
lock
stc
jmp
repz
insl
mov
add
mov
xor
xorb
js
cmovnp
dec
mov
movsl
fisttpl
xchg
rcrl
push
add
rcrb
pop
scas
lods
shrl
adc
xlat
ds
stos
mov
or
es
xor
xchg
and
add
sti
pop
jecxz
call
fstpt
pop
xor
addl
jo
cmp
xor
sbb
jb
mov
xchg
jp
sub
flds
jbe
out
fcom
fisubs
in
jb
mov
xor
or
sbb
out
jbe
test
pop
jl
sub
hlt
test
lods
mov
popa
add
jbe
pop
orb
and
fcoms
daa
sub
mov
sub
rclb
push
push
daa
jne,pn
mull
add
rclb
pop
out
lds
ret
in
lea
cmp
pop
xchg
std
pop
xor
add
lods
fwait
addb
and
mov
mov
je
repnz
jns
mov
mov
fcomi
xchg
movsb
stos
xor
sti
mulb
loopne
int
sbb
push
js
call
pop
sbb
pop
mov
xor
shr
cmp
lahf
lds
and
mov
sarl
aaa
cmp
fwait
lea
xchg
adc
cmp
jno
or
out
cmp
popf
xor
repnz
mov
aaa
jbe
cwtl
dec
int3
out
xchg
not
cmp
fwait
add
popa
cmp
dec
push
cmp
pop
cmp
fmull
dec
sub
jo
in
iret
lahf
rol
sub
jl
rclb
mov
or
cli
push
mov
add
sbb
cmc
add
mov
or
adc
int3
outsl
xor
je
outsl
call
mov
inc
movsb
jo
arpl
jo
fisttpl
mov
xchg
ja
iret
cs
daa
sbb
jle
das
hlt
lea
aad
cli
sbb
xor
scas
cld
cld
int3
cs
jl
or
iret
decl
out
leave
fldenv
xlat
push
les
mov
xchg
push
dec
rclb
lahf
sub
jp
je
sub
adc
cld
hlt
adc
ss
adc
xor
in
sbb
fsubrs
ja
jb
loopne,pn
lock
cld
xor
out
mov
popa
push
pusha
test
ret
push
repnz
dec
or
scas
dec
inc
add
push
or
add
add
shll
jae
xchg
dec
sbb
clc
xor
xchg
pusha
lods
inc
rolb
mov
cs
sti
jmp
xor
mov
xor
pop
dec
fldl
sbb
and
roll
sub
add
cmpsl
scas
and
das
loope
mov
cmpb
fwait
orb
nop
mov
pop
js
cmp
mov
aam
cmp
fmuls
adc
in
jne,pn
cmp
ss
cmp
add
pusha
dec
mov
je
ret
pop
xor
lcall
inc
enter
repz
mov
bsr
ja
fiadds
nop
xor
aaa
inc
test
cmpsl
out
sbb
repz
add
pop
adc
pop
in
cmpsl
mov
dec
xchg
and
add
iret
dec
add
iret
ss
xchg
outsl
data16
loopne
addr16
inc
sbb
movsl
cli
push
and
arpl
and
sbb
jno
xlat
rclb
lods
mov
cmp
mov
push
test
pop
aas
jle
xchg
sub
pop
cmc
fsubs
daa
mov
jo
bound
pusha
popf
call
sbb
ljmp
lds
mov
sbb
adc
or
test
xchg
jmp
aaa
loopne
divb
roll
xchg
inc
or
add
mov
dec
or
push
popa
jl
movsb
push
clc
xchg
ja
xor
test
xchg
cmp
mov
cmp
fcoms
add
insb
and
dec
dec
add
lods
mov
xchg
and
sub
add
rcl
ret
mov
cs
inc
fmulp
xor
sub
daa
jmp
or
adc
je
scas
icebp
sub
in
ljmp
stos
fcmovnu
inc
sub
pop
sbb
leave
iret
loopne
mov
sbb
addr16
sub
ficomps
enter
xchg
xor
inc
add
in
and
test
repz
mov
and
in
and
xor
jno
mov
ss
or
inc
inc
imul
icebp
jecxz
adc
popl
sahf
add
das
lcall
gs
add
xor
dec
call
add
sarl
mov
jae
pop
cs
push
xchg
xor
iret
cmp
in
dec
loopne
cmp
je
add
imul
imull
mov
stos
push
push
fidivrs
and
mov
cs
jg
or
dec
es
lock
mov
sub
push
sti
in
aas
dec
pop
mov
lods
clc
cmp
fsubrl
push
insl
bnd
and
insb
or
xor
test
inc
sbb
xor
lods
xor
arpl
and
push
and
aaa
jb
and
andb
shlb
subb
inc
data16
jae
adc
cmpsl
xchg
mov
pop
icebp
or
rorb
cli
and
xor
sbb
je
pushfw
and
inc
rcll
test
sbb
fstl
test
sub
add
push
in
clc
ja
mov
sbb
mov
push
pop
sub
jecxz
and
pop
stos
mov
adc
call
dec
xor
mov
xor
leave
adc
loope
mov
sbb
dec
xorl
push
int
xor
in
sbb
into
data16
xchg
add
mov
aam
add
push
je
popf
and
adc
outsb
aaa
push
pusha
scas
adcb
add
mov
dec
fdivs
pop
and
jb
push
imul
push
mov
cs
je
rcrb
js
mov
sub
pop
add
nop
jecxz
add
out
pusha
iret
sub
or
pop
sub
push
jmp
andb
fldl
xor
mov
ss
adc
push
jl
push
mov
dec
sub
cmp
fsubrs
arpl
shll
lret
mov
dec
mov
leave
mov
cmpsl
cmpsl
orl
jbe
aas
fiadds
vpmadcsswd
cmpsl
fmul
jle
dec
inc
sbb
dec
add
push
jo
jp
sti
jg
add
fs
clc
add
inc
and
mov
dec
out
jp
pop
mov
scas
mov
xchg
shrl
sub
out
xor
in
mov
rorb
shrl
test
cmp
out
adcb
rol
arpl
iret
ret
cmp
sbbb
sub
insl
dec
ffreep
xor
cmp
aam
fmul
call
jge
shrb
jg
xor
aaa
je
add
mov
js
sbb
sbbl
popa
push
jnp
ret
xor
sub
push
mov
add
in
mov
jecxz
or
sub
outsb
pop
xor
icebp
orb
test
inc
mov
into
sbb
jb
test
mov
ficomps
sbb
fildll
mov
ror
or
mov
loope
add
xchg
js
xor
movsl
shl
outsl
jne
dec
jo
dec
lods
fldt
stos
or
mov
and
mov
pop
stos
rcll
jle
dec
dec
mov
or
add
push
cmp
cmove
stos
inc
lret
sub
test
test
adc
loopne
add
andl
sarl
jnp
adc
mov
lock
ja
bound
jb
lods
loopne
jno
push
jno
mov
cmp
jo
mov
test
data16
or
push
push
arpl
jle
pop
ret
sbb
fwait
or
cmpsb
repnz
popf
sbb
pop
dec
outsb
or
mov
pop
adc
cwtl
or
jecxz
and
sbb
push
clc
hlt
std
adc
or
std
arpl
popl
in
add
xor
into
insb
add
addl
add
mov
pop
shr
loope
add
imul
cld
scas
aad
call
popl
mov
jecxz
mov
js
and
repz
xchg
mov
push
add
and
or
inc
and
rcll
gs
jge
andb
shr
testl
cmp
fmul
je
or
push
sub
rcrb
in
pop
addb
scas
jo
shll
mov
xor
addb
xor
add
sub
jmp
pusha
dec
xor
je
repz
mov
and
pop
int
ss
les
inc
dec
loopne
cmp
jnp
lock
xchg
shl
cmp
xor
push
cmp
addr16
or
adc
xor
movl
das
fwait
clc
lods
cltd
and
jl
in
sub
out
dec
pusha
sub
dec
cltd
mov
xchg
jmp
fisttpll
add
sub
mov
add
push
and
clc
loope
add
mov
push
mov
dec
pop
dec
pop
dec
subb
dec
xor
pop
mov
add
dec
jmp
pop
enter
sbb
orb
mov
repz
dec
pop
add
cmp
in
leave
pusha
loopne
jl
jno
mov
repnz
xor
ret
aas
test
iret
out
rclb
iret
cld
xchg
les
movsb
adc
push
xor
daa
out
add
loopne
mov
sbb
adc
sahf
andl
lock
sbb
scas
adc
rolb
popa
repnz
and
insb
cmp
or
bound
cmp
enter
lods
jp
cmp
push
sahf
mov
mov
aaa
ss
iret
push
sbb
rcrl
filds
ja
clc
jae
jge
mov
jl
loopne
ljmp
das
mov
dec
movsb
int3
sub
imul
pop
cmpb
lret
and
dec
arpl
das
or
insl
mov
or
fninit
push
xchg
imul
sub
sbb
inc
push
test
jno
scas
lock
jae
arpl
pop
rcrb
int3
ss
cmpsb
jo
push
out
fildl
call
push
mov
dec
sbb
fsts
mov
cs
push
dec
sti
pop
xchg
cmc
xchg
loopne
scas
loop
sub
loopne
cli
out
cld
sub
adc
iret
push
pop
js
clc
push
movsb
leave
push
mov
sahf
jns
add
out
sub
out
lods
cld
clc
pop
fdivrp
jo
bound
or
push
sbb
xor
cmpsl
sbb
insb
push
inc
lea
out
int
test
leave
pop
je
ret
mov
insl
jne
adc
adc
push
add
pop
push
scas
or
or
push
stos
fildl
cmpsb
cltd
arpl
cwtl
rol
or
ja
daa
xor
popa
movsl
adc
test
mov
loopne
cpuid
mov
enter
loopne
or
sub
cmp
bnd
lock
cmc
ret
stos
cmp
xchg
add
sbb
movl
ja
not
bound
inc
fcmovnbe
xor
push
cmp
fsubp
xlat
aad
cmp
pop
rorl
push
add
pop
out
cmpsl
adc
aas
xor
lds
push
pop
loop
movb
adc
push
xchg
fs
lock
notl
push
pop
or
dec
dec
scas
inc
mov
add
add
sub
adc
or
jo
cs
add
xor
aam
mov
cs
and
push
jecxz
or
lret
fwait
pop
bound
mov
adc
shlb
jno
adc
sub
xchg
pusha
jmp
xchg
int3
adc
jmp
dec
jno
xlat
pop
fdiv
popa
and
fstp
js
out
movsl
mov
loop
and
xorb
lock
setns
ja
pop
pop
xchg
daa
or
mov
jb
pop
mov
xor
ret
lea
add
daa
mov
arpl
bound
push
cltd
lock
aaa
loope
inc
pop
dec
xor
pop
sbb
daa
and
dec
sbb
lods
negl
repz
sbb
fsubrs
pop
or
outsb
add
and
mov
mov
add
add
or
insb
repz
mov
add
mov
test
ljmp
out
adc
nop
sahf
mov
sbb
fwait
cmp
and
les
fsubrs
ja
xor
xorl
rcrl
andl
xorl
inc
lret
lahf
xchg
xchg
orl
adc
mov
xchg
in
jns
push
dec
and
add
dec
or
dec
mov
rorl
cmpsl
inc
sub
mov
movsl
and
inc
push
fwait
pushf
ss
popa
add
icebp
and
jl
mov
imul
mov
or
inc
jnp
sub
popa
jl
jl
ret
sub
scas
lods
ja
cmc
lcall
imul
sub
into
jbe
xor
stc
sub
sub
jno
andb
mov
test
jecxz
int
pusha
add
dec
fmul
mov
add
pop
orl
loope
outsl
mov
iret
adc
adc
es
jge
push
pop
jp
pop
push
sbb
sbb
lahf
mov
xor
or
movsb
or
jl
faddl
pop
arpl
iret
inc
data16
xchg
rolb
dec
xlat
mov
pop
in
inc
lcall
into
pop
pop
pushf
fidivs
cmp
nop
in
cwtl
sbbl
pop
cs
test
xchg
sbb
loop
or
push
rolb
mov
jae
add
jp
xchg
jno
and
dec
and
adc
scas
and
dec
push
frstor
out
mov
mov
push
stos
ret
mov
rolb
enter
add
or
xchg
jnp
repz
popf
ljmp
in
iret
sbb
and
test
sahf
inc
add
adc
mov
mov
sub
push
xlat
mov
sbb
xlat
dec
shl
and
xchg
and
sbb
flds
and
prefetchw
sub
pop
les
xor
adc
push
sbb
loopne,pn
pop
mov
inc
and
movsl
mov
lods
push
push
adc
adc
rclb
hlt
pop
or
cmp
xchg
mov
loope
into
pop
xlat
push
jo
fstp
iret
push
xchg
sub
dec
mov
pop
nop
sub
popl
mov
aad
adc
mov
jae
xchg
xchg
mov
sbb
into
inc
shl
iret
and
cmp
pop
or
sti
mov
inc
pop
mov
and
loopne
in
sahf
push
push
fistps
gs
subl
in
and
popa
loopne
mov
in
scas
mov
push
pop
dec
jne
sbb
icebp
in
mov
roll
ss
popa
aaa
dec
iret
jnp
hlt
pushf
adc
sbb
adc
bound
jmp
xchg
rolb
scas
outsl
imul
bound
cmpsb
scas
xor
dec
mov
rcrl
mov
fdivs
pop
rorl
xor
mov
mov
mov
mov
xor
lret
outsb
add
push
fidivrl
cmp
xchg
popa
icebp
mov
daa
cmp
jecxz
jge
mov
pusha
orl
cmp
lock
iret
loop
push
loopne
pop
pop
fs
movsb
ds
rcrl
stos
add
xor
add
adc
ret
xor
pmulhuw
nop
mov
in
cltd
clc
xchg
ss
add
inc
pop
add
cmp
mov
xchg
adcb
movsb
cwtl
mov
pop
mov
xorl
rclb
lods
mov
rclb
rol
add
cltd
ret
fcomps
into
loopne
test
add
sub
jo
sub
ds
sub
and
cmp
add
orb
imul
ret
cmc
add
jmp
scas
dec
or
mov
pop
enter
push
pushl
add
or
gs
push
cltd
loop
sbb
xor
repz
push
iret
push
inc
lcall
aam
inc
cmp
hlt
pop
test
push
imul
bound
and
mov
push
or
test
or
push
lret
sbb
mov
lea
outsb
out
jecxz
ret
cmc
jne
testl
pop
xor
out
sarl
dec
cmp
or
loop
and
out
out
pop
mov
xlat
test
xchg
add
sub
adc
fwait
scas
repnz
mov
dec
das
adc
pop
pusha
pushf
jecxz
stos
fmuls
sbb
ja
dec
xchg
pop
inc
shrb
xchg
jmp
out
xchg
jge
imul
and
cmpsl
pop
ss
lock
shr
int
subb
add
jl
rorb
aad
xchg
xor
and
cmc
loop
es
out
or
icebp
movsb
mov
ficoml
lock
pop
mulb
mov
xchg
xor
xchg
or
punpckhdq
jge
or
and
js
adcl
shrb
test
push
inc
cmp
shll
cmpsl
sub
std
sbb
pop
mov
jg
jmp
push
jle
fiadds
lods
scas
dec
popa
pop
dec
sbb
test
mov
mov
sbb
or
nop
push
xor
xchg
mov
mov
cmp
adc
shl
cli
add
ja
jb
add
cmp
mov
test
jle
xor
aaa
pop
push
pop
mov
aas
cmc
and
inc
xchg
data16
and
adc
add
dec
pop
jnp
addr16
ret
push
scas
mov
push
push
mov
repnz
in
sarl
loope
in
pop
dec
addr16
add
aas
sub
js
daa
jne
push
stos
dec
fnstcw
sbb
xorl
inc
mov
jmp
clc
and
movsl
xor
or
pusha
mov
lret
in
pusha
pop
jmp
inc
pop
mov
xchg
adc
and
shrb
js
add
jge
ja
test
cmp
ss
sbb
stc
out
pusha
gs
aad
div
mov
js
adc
jne
insb
loope
pop
imull
add
jl
shll
jo
xor
xchg
and
add
scas
test
dec
movsl
test
outsb
and
mov
sbb
cmpsl
fcomps
mov
push
roll
push
vmovhps
xor
ss
loope
js
lods
daa
into
add
aaa
pusha
pop
xchg
sbb
mov
inc
lret
shrl
andl
dec
xor
sub
xor
and
xor
in
lock
cmp
adc
dec
mov
xchg
pop
sbb
dec
sbb
mov
push
filds
fildl
movsl
fiaddl
adc
sbb
popf
inc
dec
and
stos
icebp
popa
shr
add
imul
jle
add
ficompl
iret
xchg
sub
inc
add
sbb
mov
and
xlat
add
cmp
push
mov
int3
jge
sub
stc
imul
push
xchg
popf
mov
mov
shrb
mov
xlat
lods
dec
xor
jb
mov
out
dec
daa
notb
scas
push
cmpsb
mov
mov
setge
mov
push
call
mov
mov
daa
aad
loopne
cmp
mov
shll
sub
mov
aaa
pushf
sbb
pop
and
dec
adc
add
add
lds
cmc
repnz
push
loope
faddp
test
lahf
lcall
and
enter
push
adc
hlt
dec
repz
lret
and
hlt
loopne
stc
mov
mov
daa
cmp
hlt
add
xchg
lret
jl
push
pop
inc
loop
ljmp
dec
daa
daa
jno
adc
push
addr16
loop
push
or
ljmp
rcll
in
mov
dec
icebp
jo
xchg
mov
add
sahf
xchg
dec
jne
mov
pop
push
ljmp
aas
nop
pop
stc
xchg
or
aad
jp
or
push
push
cmp
xchg
loop
xor
push
inc
pusha
xchg
sti
mov
push
scas
push
sub
cwtl
mov
dec
mov
push
inc
clc
jb
inc
push
and
fiadds
jmp
addr16
add
ja
mov
inc
das
aam
or
sub
fildl
jg
addb
cmp
movsb
and
xlat
push
dec
rcll
mov
or
or
je
adc
daa
es
shrb
jbe
xor
xor
or
test
mov
fistpll
dec
jnp
push
iret
xchg
xchg
test
mov
adc
adc
sbb
mov
inc
bound
out
clc
and
fisttpll
aad
clc
adc
xor
cmc
rcrb
sbb
xor
cmp
add
ja
bswap
add
jmp
xor
inc
or
inc
add
je
inc
inc
inc
pop
cmp
mov
in
jns
add
ja
fwait
push
mov
cmpl
cmp
add
jne
xchg
leave
popa
cltd
and
sbb
cld
aad
ljmp
cli
aad
push
sbb
cmc
ja
inc
add
adc
pushf
xchg
and
xchg
movsl
jo
mov
loop
inc
mov
cmp
subb
or
iret
call
popa
adc
sbb
jae
and
push
and
bound
mov
movsl
xchg
dec
sub
dec
test
cwtl
sub
xchg
dec
sbb
adc
test
lret
adc
gs
fsubs
adc
iret
je
inc
andb
js
fxch
mov
ffreep
out
insl
push
add
push
mov
inc
out
je
iret
push
sub
cmp
cmpsb
or
lahf
mov
addr16
sub
lds
inc
mov
inc
cmp
les
pop
andl
and
sub
jnp
into
add
or
int3
xorl
clc
std
push
pop
add
fcoms
and
push
inc
or
add
and
pop
inc
sbb
jns
das
jno
and
imulb
jl
cmpb
cmp
mov
add
ja
pushf
push
sub
aas
jp
sbb
cltd
cs
mov
das
scas
test
inc
add
lret
adc
xchg
push
call
insl
fcoms
pop
jle
into
add
imul
cmp
je
push
lcall
cltd
orl
scas
daa
and
rcl
cmpsl
ret
pop
data16
dec
add
inc
pusha
movsl
loopne
rorl
pop
pop
mov
in
and
orl
std
xor
in
daa
loop
pushf
or
add
add
pop
xchg
aam
xchg
or
or
push
outsl
and
and
push
push
dec
aad
sub
push
test
lock
jl
pop
and
jae
fs
std
or
aas
iret
mov
or
je
stos
push
xor
add
testb
inc
daa
aas
bound
inc
mov
into
dec
add
sub
inc
sti
out
in
aaa
scas
popa
sub
push
add
cmpsb
jle
xor
in
shl
adc
aaa
dec
aaa
fmull
sarb
andl
add
push
add
clc
in
ret
inc
sahf
mov
sbb
ja
cmp
dec
mov
ljmp
mov
mov
mov
out
jp
loope
xlat
in
add
andb
sbb
and
addb
aaa
push
jne
lret
std
xchg
xor
out
mov
push
aaa
push
jbe
xacquire
sub
add
push
stos
jl
clc
inc
cwtl
bound
and
arpl
outsl
fldl
sub
lea
add
sahf
jp
es
adc
les
jmp
pop
and
mov
popa
or
das
jo
pop
adc
push
mov
cmp
fdivs
jbe
call
inc
movsb
sbb
and
pop
stos
je
ds
cmp
pavgb
cmp
push
add
add
add
cwtl
ja
fcompl
mov
add
mov
sbb
bound
dec
in
mov
or
cmp
jno
push
inc
dec
das
lods
sub
jecxz
and
and
jecxz
leave
lahf
lods
jns
pop
sbb
push
out
sub
pop
mov
push
aaa
int3
int3
push
ror
xor
mov
adc
push
push
out
lods
dec
mov
cltd
push
or
xchg
int3
add
pop
cmpl
outsl
inc
xchg
and
pop
mov
loop
add
movsb
and
and
mov
adc
push
pusha
fwait
inc
shrb
add
scas
lods
das
adc
xor
ja
dec
cmc
mov
inc
clc
push
jo
sbb
jp
mov
pusha
cmp
or
rorb
sub
loopne
jp
add
pop
mov
sbb
addb
iret
in
add
cmpsl
rolb
or
add
out
ljmp
imul
out
out
push
cmovae
call
outsl
inc
stos
and
add
repz
pop
addl
sub
push
pusha
xor
xchg
pop
ror
pop
jbe
shll
mov
xchg
stc
movsb
add
sbb
xchg
inc
add
pop
hlt
out
add
das
add
lock
cmp
mov
fiaddl
push
rolb
xor
jne
sbb
add
rcrb
xchg
movsl
xchg
push
push
jle
das
pop
xchg
fcoms
aam
ret
std
jbe
movsl
mov
push
mov
push
mov
scas
and
push
sbb
add
xorb
xchg
pop
cmp
je
cmp
jns
fisubrs
scas
jmp
popa
pop
fcoml
add
jmp
aaa
mov
dec
in
je
and
out
addl
dec
scas
jns
dec
lcall
push
movsb
popa
pop
add
cwtl
mov
or
loope
ja
cmp
ljmp
sarb
mov
add
lds
ja
loop
add
push
push
cmp
cmp
pop
and
test
punpckhwd
ud0
dec
add
test
adc
mov
jle
jb
mov
mov
cwtl
push
cmovg
push
mov
std
stos
mov
nop
sarb
jecxz
or
andb
pop
cmp
fistpll
popf
orl
jno
faddl
sarb
or
out
pop
inc
xchg
xor
push
jns
xor
inc
adc
in
mov
rcr
sbb
and
lcall
das
clc
adc
add
jmp
cltd
jne
not
jno
mov
push
adc
hlt
mov
mov
stos
push
out
daa
int3
add
cmp
sbb
cmp
mov
inc
mov
scas
aas
dec
inc
outsb
iret
addb
in
insl
pusha
jp
clc
push
push
out
scas
mov
stos
sbb
mov
pusha
and
mov
pop
or
sub
fsub
fmulp
jmp
test
lret
jne
arpl
xchg
les
lret
adc
xor
in
js
stos
mov
out
cmpsb
out
ja
xchg
pusha
enter
scas
or
jbe
dec
cmpsb
inc
into
add
ss
sti
mov
mov
dec
sbb
dec
and
push
shlb
clc
cmp
stos
test
cmpsb
and
das
scas
xor
add
xor
dec
mov
pop
in
and
push
xchg
js,pt
out
sbb
cmp
mov
mov
test
fisubs
adc
add
or
xlat
mov
adc
jge
pop
je
push
shrl
inc
mov
les
push
loopne
sbb
jo
push
je
sahf
adc
dec
rorb
mov
mov
xor
sub
into
shrl
das
lahf
ret
int3
into
mov
imul
jecxz
mov
pushf
into
and
rorb
imul
arpl
inc
popa
dec
jbe
xchg
fs
adc
add
sub
jmp
inc
scas
sub
out
push
pop
sub
mov
lea
inc
add
inc
fildll
or
lock
xchg
cltd
cmp
sbb
loop
or
cltd
push
pushf
idivb
cmp
cmpsl
dec
sub
in
sbb
push
roll
and
lcall
incl
push
aaa
jle
and
mov
dec
and
mov
in
je
sub
or
aaa
fsubrs
jle
xchg
mov
imul
leave
ds
push
in
jb
fdivr
push
rcl
cmp
xchg
push
aaa
iret
cli
mov
fisubrs
movsb
xor
push
jp
es
push
add
sbb
sbb
push
jo
add
pop
aaa
mov
or
inc
test
add
int
push
in
andl
adc
cmc
pusha
scas
bound
imul
pop
pop
sbb
into
dec
mov
cmpsl
mov
pmulhw
push
pop
lcall
push
pusha
inc
hlt
movsb
addr16
add
pop
scas
lea
rorb
cs
into
enter
mov
and
push
shll
jmp
out
mov
int
and
push
mov
out
xor
mov
andb
bound
gs
fbstp
cmp
mov
sbb
cmpsb
mov
out
adcl
mov
test
clc
repnz
xchg
push
mov
jmp
fsub
inc
out
inc
sub
mov
jl
inc
imul
movsb
add
aaa
sbb
ss
ficomps
jbe
jo
js
fildll
push
enter
icebp
jp
add
or
mov
or
std
stos
sbb
arpl
shlb
push
xchg
push
dec
xchg
adc
mov
mov
inc
lret
popa
fwait
xchg
orb
xor
mov
adc
push
dec
pop
pop
subl
pmaxub
xchg
adc
lods
jge
push
cmp
lret
and
jnp
test
push
add
and
push
adc
ret
adc
add
or
lret
ja
push
insb
dec
loope
dec
je
push
xchg
popa
and
add
test
mov
adc
and
imul
sbb
shl
jo
jo
stos
fbld
jp
in
jo
test
imul
and
pop
ror
mov
jnp
jmp
add
jp
insl
mov
aas
xchg
cmpb
cmp
icebp
cmp
outsl
sub
arpl
mov
fs
pusha
xor
push
mov
pop
pop
enter
add
add
mov
pop
sbb
out
popf
fnclex
loopne
ljmp
xor
xorl
loop
test
in
cmp
clc
xor
jno
into
icebp
daa
dec
dec
loope
fldt
or
das
or
call
jp
add
cmpsl
es
push
call
sbb
in
xchg
imul
loopne
shl
cmp
incb
sbb
or
movsl
test
mov
fs
sbb
fs
insb
jne
cmp
cmp
mov
mov
cmp
sti
mov
cmp
adc
ss
repnz
dec
in
ss
pushf
adc
iret
sbb
mov
pop
cmp
push
shrl
das
xor
hlt
fisubrl
pusha
outsl
pop
das
and
shl
xor
ffreep
push
mov
or
push
add
jle
jo
sbb
push
arpl
mov
stc
add
dec
cmpsb
and
cmpsl
dec
add
dec
lret
xor
int
and
and
adc
adc
leave
js
adc
pop
fdiv
ds
mov
jo
pop
ljmp
xchg
and
icebp
mov
fimuls
jle
pop
jg
aas
adc
test
test
push
xchg
pusha
jbe
es
mov
xor
int
ljmp
loopne
xchg
xlat
fs
sahf
out
gs
call
lret
xor
dec
repnz
sahf
cmp
sbb
in
jg
mov
fcmovnb
push
cmp
daa
jns
xchg
push
xchg
jge
sbb
call
stc
cli
les
lcall
jl
push
push
xlat
out
push
xchg
push
push
cmp
rolb
inc
into
sub
sbb
cwtl
mov
rol
and
cmc
out
inc
cmp
fisubs
mov
pop
lock
cmp
sarl
loopne
das
shl
data16
cmp
cs
pop
ror
not
adc
xchg
mov
adc
push
nop
das
outsl
mov
sbb
fstpt
data16
push
cmpsl
mov
scas
lea
dec
rcrl
pop
rorb
jmp
mul
ds
js
fstps
jns
and
or
mov
ss
ds
jl
mov
cmp
loope
jge
fcoms
push
and
xchg
addb
xor
pop
push
mov
int
out
or
sahf
mov
inc
nop
push
jo
cmpsl
xor
xchg
push
jns
data16
xchg
test
sub
jb
mov
or
movsl
or
xchg
ss
addl
js
sbb
adc
adc
dec
lahf
fimull
adc
test
iret
into
cmp
movsl
sbb
mov
xchg
outsb
and
jecxz
lahf
jp
rolb
test
sahf
test
add
insl
xlat
cmp
dec
mov
jp
fstpt
cmp
add
dec
out
pop
adc
and
add
sub
or
adc
xchg
mov
les
pusha
add
sbb
xchg
bound
xlat
mov
mov
push
adc
aam
movsl
ss
pinsrw
jne
and
rclb
pop
pop
adc
adc
xchg
xchg
or
pop
add
iret
add
test
push
call
push
sbb
mov
xchg
mov
add
adc
inc
jecxz
fcompl
sbb
scas
xor
cmp
sbb
sbb
sbb
cmp
int3
mov
sbbl
test
pop
mov
rcrl
test
inc
mov
clc
adc
movsl
xor
cmp
xchg
mov
inc
mov
mov
mov
in
mov
into
hlt
fldenv
lods
inc
iret
lods
push
sub
mov
testl
add
push
test
inc
xchg
test
ret
sbb
pop
push
les
or
mov
or
dec
loopne
sbb
mov
iret
cltd
mov
addb
adc
test
cmc
shl
mov
sub
mov
int3
xchg
outsl
sbb
fwait
push
pop
pop
inc
pop
mov
ret
xlat
inc
js
test
outsb
mov
push
inc
outsb
lret
jge
dec
mov
sub
cmpsl
add
sbb
sbb
lods
mov
xchg
push
xchg
rorb
pop
stos
nop
mov
mov
mov
or
loopne
or
cmpb
push
push
lock
pop
pusha
adc
cs
mov
rcrl
jno
mov
push
cmc
fistl
inc
stos
add
and
ret
or
or
lret
pop
mov
sbb
js
dec
mov
xor
xor
and
sub
adc
imul
insb
sub
mov
jge
test
imul
lret
xchg
xor
cmp
push
mov
pop
mov
js
xchg
shlb
adc
sbb
push
pop
add
addb
lea
jne
jnp
std
push
mov
js
add
jle
jnp
mov
ret
mov
decl
sub
dec
push
and
out
push
add
lahf
add
push
sub
sbb
dec
pop
lds
int
push
add
xor
dec
sub
add
push
mov
ds
and
adc
ss
movb
or
addr16
ret
add
pop
gs
jbe
ja
push
lcall
sbb
cmpsl
insb
es
or
movd
or
add
mov
hlt
xor
sbb
iret
cmp
add
xchg
sti
test
mov
test
ret
adc
in
loope
addb
sbb
lcall
cmp
or
cld
fdiv
lock
xchg
xchg
dec
push
add
or
inc
cmp
or
jne
xchg
cmp
mov
mov
dec
pop
hlt
pop
add
filds
xchg
fisubs
outsb
in
sbb
mov
ret
pop
rcrb
outsl
test
out
add
fs
iret
fdivrs
pusha
rcr
sub
add
in
ljmp
test
adc
push
data16
push
outsl
inc
jnp
movsb
fwait
and
mov
jmp
icebp
iret
mov
mov
in
add
sbb
mov
mov
cs
icebp
popa
xor
out
shll
sbb
mov
push
call
or
push
fmul
mov
addr16
dec
iret
pop
add
leave
js
arpl
adc
jnp
rorb
popa
ds
sub
sbbb
mov
imul
or
jg
adc
loopne
das
cmp
and
push
and
icebp
stos
adc
pusha
fcmovnbe
sub
or
ss
push
or
add
inc
or
add
scas
lea
ljmp
lds
cmp
pop
out
imul
inc
push
push
out
pusha
aas
popa
fisttpl
popa
es
mov
push
loope
xor
cmp
push
xor
stos
jnp
ss
or
xchg
sbb
popa
and
or
lret
fsts
cmpsb
add
jl
stc
data16
js
or
int3
lcall
dec
sub
popa
inc
pushf
add
imul
movsl
orl
add
popa
add
dec
xor
and
je
mov
push
rolb
add
stc
adc
add
xchg
jmp
cmp
loope
idivl
push
sub
shrl
or
out
iret
or
dec
mov
cmpsl
dec
sub
shrl
subl
sbb
jno
cli
jecxz
xor
mov
rolb
or
cmp
mov
arpl
xchg
insl
in
ret
popa
xchg
sub
mov
mov
and
sub
push
lea
subb
cmpsl
mov
sub
out
repnz
xchg
jbe
mov
add
fs
neg
mov
cmpsb
and
adc
out
mov
jo
outsl
ret
inc
add
and
dec
sub
es
stos
leave
mov
mov
fxch
sbb
xchg
orb
stos
mov
dec
das
lods
push
cltd
cmp
addb
pop
dec
into
pop
clc
ret
insl
sub
cmp
cmp
dec
inc
rorb
add
xor
sbb
cmp
xor
adc
das
je
sbb
or
push
cmp
arpl
bound
push
fsubs
and
pop
mov
in
in
pop
ret
int3
inc
adc
mov
insl
sbb
cmp
mov
mov
xchg
daa
xor
out
sub
or
add
xchg
inc
inc
mov
adc
call
push
jge
xchg
xchg
mov
and
aas
cmp
cltd
das
jnp
js
and
jno
stos
popa
lret
mov
iret
xchg
fstps
shlb
stos
xchg
adc
shrl
or
pop
sbb
xlat
stc
xchg
push
mov
mov
and
add
movl
popa
movzwl
sbb
push
push
arpl
lret
and
adc
push
insl
xchg
xorl
insb
mov
ficoml
adcl
adc
adc
frstor
ss
in
sbb
inc
xchg
cmp
pop
sub
data16
imull
into
mov
add
mov
sub
cs
clc
push
adc
adc
clc
and
add
frstor
ja
sub
cmp
add
inc
ret
pop
outsl
sbb
xchg
popa
cmp
bound
pushf
adc
fwait
lock
aaa
dec
inc
fcoms
sub
xchg
aas
xchg
push
bound
or
daa
sub
repnz
in
adc
mov
fsubrs
mov
pop
inc
cmp
mov
in
test
inc
xchg
cmp
mov
mov
inc
dec
insb
ret
or
mov
sbbb
cld
repz
sub
into
xor
decl
loopne
loope
dec
iret
cmc
es
loopne
out
pop
or
mov
adc
outsb
mov
xchg
rol
sahf
mov
cmp
jge
pop
scas
push
jo
inc
jns
and
add
cmp
stos
xor
cmc
fidivl
adc
out
fimuls
fcompl
xor
sub
mov
fwait
sub
push
push
and
loope
mov
fistps
adc
insb
xchg
jge
dec
loopne
inc
mov
sbb
or
mov
pop
jae
dec
add
pop
and
popf
jge
pusha
dec
testl
cmpsl
xchg
jecxz
rol
xchg
xchg
push
mov
iret
xchg
cmp
rolb
cld
adc
or
movsl
fcmovne
push
lea
sbb
and
fadds
adc
in
scas
int
adc
pop
icebp
push
int
mov
lcall
add
call
mov
inc
out
js
adc
and
addr16
lea
push
adc
jo
jne
cwtl
pop
sbb
into
fwait
pop
outsb
ret
push
jo
pop
bound
xchg
jle
js
shlb
mov
cmp
call
cmp
movsl
sub
xchg
cmp
adc
inc
ret
clc
pop
sub
mov
cmp
or
xor
loopne
imul
inc
ss
jle
inc
inc
fcoms
xor
sbb
aam
shll
cld
or
movsb
bound
or
pop
jl
cmp
mov
les
sub
mov
js
das
ljmp
stos
mov
cli
adc
push
imul
lcall
sub
sbb
mov
lock
adc
or
ret
mov
pop
shl
js
ljmp
test
sarb
pop
adc
jl
jmp
jbe
inc
add
pop
sub
sbb
xor
or
pop
dec
dec
mov
stos
call
leave
iret
cmp
int
lret
push
jle
in
insb
add
xchg
adc
xor
mov
daa
xchg
ss
int3
mov
lds
movsb
xchg
push
xchg
push
jmp
dec
push
ja
add
lock
neg
or
mov
insb
or
rorb
loope
pop
cmc
and
mov
movsl
jmp
fmulp
pusha
movsb
dec
mov
inc
movsl
stos
fwait
stos
in
or
fsubs
mov
jno
xchg
jge
lea
out
pop
add
push
xlat
jbe
cs
or
pusha
and
mulb
xchg
popa
sub
call
outsb
aad
inc
adc
mov
movsb
adc
xor
pop
in
pop
and
sub
dec
adcl
fstps
pop
add
insb
cmp
cmc
inc
das
nop
pop
cmpsl
pop
out
js
test
adc
movsb
dec
add
sub
das
pop
mov
push
push
cs
frstor
adc
and
addl
pop
jge
out
cwtl
push
jno
cmp
mov
in
or
jnp
popf
xchg
jmp
popa
lods
bound
in
jno
fwait
add
mov
push
sub
dec
int3
cmpsl
xchg
and
mov
je
xchg
int3
pop
push
sets
dec
int3
ret
sahf
lcall
sub
ss
inc
test
int3
pop
add
iret
rcr
daa
cmp
cmp
lahf
xorb
jno
lret
aaa
dec
ja
loope
std
mov
lods
or
jle
aam
push
push
lds
dec
push
push
sbb
add
jg
xchg
or
xlat
and
loope
mov
loopne
pop
xor
sbb
add
adc
cld
daa
in
hlt
mov
pop
test
cmpsl
xlat
hlt
je
mov
push
mov
imul
dec
or
mov
inc
xchg
cmc
cmpl
jmp
sub
add
mov
scas
psubsb
test
adc
imul
ja
movsb
popa
nopl
push
push
rclb
mov
pop
mov
outsb
sub
vmaxsd
or
xor
sub
sbb
push
rorl
scas
loope
xchg
inc
data16
dec
pop
push
fs
incl
lock
loopne
mov
adc
xor
stc
mov
clc
es
test
xchg
xor
add
test
mov
lods
adc
xor
and
mov
sbb
pop
mov
add
push
lods
inc
clc
test
imul
sub
mov
add
popa
out
xor
mov
push
dec
pop
push
or
jle
ret
xchg
jne
daa
aaa
add
test
fsubrl
mov
push
adc
clc
or
dec
jns
add
loop
lret
xchg
or
movl
ja
sub
inc
lea
add
or
fcomps
push
add
sub
jbe
mov
mov
test
sahf
sub
mov
xchg
sub
push
gs
jmp
test
pop
and
movsb
popa
je
sbb
push
clc
gs
imul
std
ljmp
xor
movsl
ljmp
jp
test
inc
fwait
adc
mov
dec
loopne
cmp
mov
adc
xor
pop
pop
push
cmp
add
aad
push
push
adc
popa
pop
or
and
xchg
les
js
pushf
test
loop
and
ret
fwait
mov
adc
pop
inc
loop
cmp
aam
mov
sub
sub
adcb
mov
add
in
out
inc
leave
mov
movsl
outsl
sbb
dec
add
cmp
jl
pop
add
inc
or
gs
dec
pusha
and
cld
data16
js
mov
jno
add
cld
dec
sbb
fwait
stos
movsl
pop
orl
ret
lds
and
mov
dec
sbb
pop
xchg
clc
or
leave
movsb
shll
lods
push
scas
inc
rclb
inc
inc
inc
icebp
mov
xchg
pop
xchg
pushf
arpl
sti
cmpsl
ljmp
fcomps
jge
dec
and
push
mov
add
outsl
mov
xchg
dec
mov
push
out
xchg
jmp
idiv
pop
pop
popf
iret
test
hlt
sbb
xchg
test
push
dec
mov
and
bound
xchg
pop
cmp
xor
dec
add
test
inc
fs
mov
sub
mov
iret
lea
xor
push
push
lock
and
dec
pushf
jo
pushf
lret
cmp
cmp
push
stos
xlat
xchg
and
in
rcll
test
faddl
jecxz
push
xor
out
add
lds
add
xchg
aaa
out
xorl
xchg
cmpsl
insb
aam
and
cmp
push
adc
mov
addr16
por
mov
mov
dec
orb
jbe
mov
or
xchg
mov
mov
iret
mov
xchg
sub
lret
adc
aaa
aam
mov
cmp
adc
sahf
iret
cmp
test
into
aas
jno
ret
mov
scas
adc
push
call
mov
adc
dec
stos
mov
or
mov
xchg
xchg
movsl
jl
pop
mov
lret
mov
mov
lds
enter
jge
pop
sarl
mov
scas
out
dec
lcall
test
jl
gs
jnp
decl
lods
xlat
inc
sahf
es
scas
push
and
js
inc
xchg
in
adc
call
rcrb
sub
and
in
into
sub
setle
and
inc
test
addr16
dec
add
or
mov
dec
daa
fiadds
mov
dec
adc
adc
xchg
cli
cmpsb
and
test
subl
mov
add
mov
push
push
push
mov
dec
mov
ljmp
xchg
xchg
or
jl
inc
rolb
das
add
add
aad
imul
out
pop
pop
addr16
jmp
test
pop
pop
xchg
push
xchg
out
lods
and
or
mov
fsubrl
cmp
dec
sbb
xchg
pushf
sti
aad
adc
push
jns
pushf
outsl
nop
pusha
push
dec
xrelease
cmpb
jecxz
and
cmp
iret
fwait
jmp
js
stc
or
fldl
sub
jae
js
push
out
flds
and
sbb
pop
xchg
out
adc
inc
mov
sarb
lea
inc
sbb
mov
jmp
xchg
jl
xor
pop
mov
push
test
xchg
sub
out
push
mov
adc
call
lret
or
je
jl
or
sub
fnstenv
fisubs
sub
sub
dec
xor
push
or
xchg
popf
cld
jne
iret
adc
aaa
mov
ret
movsl
dec
add
les
cltd
mov
inc
arpl
push
sarl
clc
mov
pushf
xchg
inc
fstl
jae
gs
jo
mov
cltd
data16
shl
mov
push
cmc
and
movsb
jecxz
ret
test
cmp
push
cld
pop
adc
add
out
adc
lahf
mov
mov
pop
cs
int
out
add
daa
ljmp
insb
mov
push
pushf
ror
imul
lea
arpl
mov
mov
cmp
test
jecxz
stos
push
adc
xchg
loop
hlt
or
mov
scas
lods
adc
into
add
fwait
rolb
pop
aaa
arpl
push
add
adc
mov
test
jmp
idivb
lods
ja
jp
push
aaa
pop
add
cmp
in
adc
test
pop
leave
insl
cld
xor
dec
pop
ret
out
jb
dec
cmp
mov
jmp
xchg
mov
rol
popa
roll
ljmp
push
aaa
add
out
in
inc
lds
cmp
dec
dec
lock
cmc
bound
push
daa
nop
cmp
mov
addb
xchg
inc
push
mov
push
inc
mov
and
add
inc
mov
dec
daa
ljmp
loopne
cmp
add
rolb
lods
out
jl
movsl
pop
loope
sbb
fisttpl
sub
jne
dec
inc
daa
cmp
je
shlb
xor
and
roll
loope
mov
es
sbb
lret
mov
xchg
add
jno
out
adc
xor
jecxz
cmp
adc
inc
das
mov
xchg
mov
enter
sub
clc
xchg
data16
add
icebp
cli
dec
daa
inc
lods
jp
jmp
fs
das
ret
movsb
mov
insl
lahf
fldenv
rolb
insb
pop
pop
adc
stc
into
push
jbe
mov
push
xchg
xchg
jle
fisttpl
inc
outsl
shl
out
and
and
rorl
cmp
and
std
arpl
add
out
sarl
inc
mov
iret
call
sub
aaa
dec
popa
outsb
mov
lfs
mov
lods
push
arpl
fisubs
jns
lret
jae
mov
push
push
icebp
mov
and
adc
aam
lock
aam
repz
cmpsb
push
or
or
mov
jno
arpl
test
mov
xchg
dec
sbb
mov
lahf
xor
sbb
pusha
test
clc
xor
and
cmp
fistpl
jno
push
data16
mov
orb
sbb
xchg
xlat
arpl
imul
mov
in
push
cs
movzwl
stos
es
pop
add
push
push
inc
sahf
je
sbb
add
xor
aad
test
cltd
dec
in
jnp
cmp
add
xchg
in
sbbb
sbb
jo
daa
jmp
sbb
adc
mov
inc
or
push
jo
nop
mov
popa
popf
sbb
pop
mov
and
mov
mov
and
in
outsb
adc
adc
imul
pop
testl
das
pop
cwtl
scas
sub
loope
sbb
push
sub
or
out
and
adc
push
sbb
dec
les
lock
dec
sbb
je
sub
dec
imul
mov
loope
xlat
inc
xchg
xor
shrl
lahf
add
out
push
jae
or
in
out
sub
bound
loopne
jnp
add
pop
sbb
mov
push
mov
jns
pop
push
xor
rcrl
cs
mov
sub
push
ret
inc
inc
or
aas
sahf
fsubrs
add
push
jno
adc
sub
jg
fcomip
inc
testl
iret
rorb
pop
pushf
lret
stc
nop
add
inc
and
xor
xchg
std
testl
push
dec
loop
adc
jno
cmp
pop
lock
decl
iret
imul
push
cmc
jl
mov
je
ret
es
xor
xor
imul
rorb
xchg
pop
ret
scas
lock
aad
nop
sbb
mov
dec
orl
lea
loope
sbb
iret
decb
sti
sub
sub
add
inc
in
mov
ss
out
and
int
sbb
cmc
jecxz
adc
es
cmp
es
hlt
add
fnstcw
add
jmp
sub
sub
cmpsb
add
test
lds
in
nop
jecxz
xor
loope
sbb
dec
dec
sbb
add
es
push
add
sub
push
sub
stc
and
dec
sbb
stos
shlb
scas
cmp
cmp
push
inc
stc
mov
mov
call
je
add
or
xor
or
sbb
daa
cmc
loope
cmp
mov
or
sub
sarl
jmp
shrl
xlat
addr16
nop
pusha
das
mov
mov
in
lods
sbb
add
pop
nop
pop
adc
add
popa
mov
cmp
lods
out
cmp
or
out
fs
inc
sub
lfs
jo
xchg
ja
movsb
inc
or
jae
in
js
dec
ja
xor
and
pop
pop
dec
or
stos
xor
and
sub
scas
lret
add
jge
jo
popa
and
js
sub
out
mov
shlb
jl
or
dec
push
gs
mov
stc
shl
sub
sbb
out
xor
cli
pushf
add
fcoms
xor
pop
pop
or
add
divb
je
and
imulb
imul
push
sbb
pop
roll
shll
int3
je
fsubrs
push
pinsrw
fstl
jg
test
or
cmp
cld
leave
aaa
lahf
in
add
mov
shll
test
lret
push
ss
cwtl
fsubrl
pop
push
insl
lret
leave
xchg
xchg
mov
cmp
repnz
jno
adc
and
sarb
sub
sub
adc
inc
xchg
jge
adc
loopne
stos
and
or
add
adc
xchg
sbb
xlat
mov
push
pusha
cmp
add
xchg
mov
inc
fmul
push
popf
sbb
pusha
cmp
jb
sbb
mov
cmp
xor
sub
or
adc
cli
push
ss
sbb
loopne
inc
sub
jno
pusha
or
pop
dec
inc
pushf
sub
loop
mov
dec
push
notb
movsl
mov
add
stc
pop
rorb
pop
imul
add
test
std
cmp
dec
jl
sbb
dec
rclb
cs
pop
adc
adc
sbb
push
test
loope
mov
out
clc
add
jbe
and
lahf
dec
rol
xor
cmp
test
add
add
and
test
inc
inc
xlat
bound
popa
loopne
ss
cmc
xchg
cli
das
stos
push
sbb
shr
and
push
inc
jns
push
movsl
dec
sbb
xor
mov
pushf
popa
int3
xor
mov
fcoms
add
addl
inc
push
enter
js
mov
mov
add
jg
cmpsb
pop
nop
fdivr
fucomi
push
lcall
inc
lea
popa
dec
loop
add
inc
mov
andl
popa
pop
add
faddl
and
cmpsl
cmp
or
inc
sub
outsb
and
ret
ds
and
xchg
shll
add
or
lcall
push
sahf
lcall
mov
stos
xlat
xchg
add
push
jbe
lcall
imul
stos
xor
mov
pop
pop
sbb
test
cwtl
aad
shl
cmpsl
xor
scas
addb
add
fs
mov
xor
iret
pop
movsl
pop
jns
pop
sub
mov
in
out
hlt
fs
ficoml
sub
jl
xchg
push
or
fsubrl
add
pop
int3
shl
mov
jno
dec
out
mov
sahf
push
scas
push
add
dec
xor
add
xor
add
movsb
pop
jbe
in
sbb
pop
adc
push
cmp
sub
xor
gs
mov
iret
sbb
push
mov
add
add
sub
inc
aad
arpl
call
dec
nop
push
js
fldcw
negl
lahf
and
sub
pusha
mov
ret
inc
arpl
test
in
inc
mov
popf
and
es
sub
mov
loop
mov
mov
cmp
inc
push
cmpsl
push
inc
add
aaa
sbb
or
in
xchg
jle
repz
jo
sbb
or
or
and
arpl
sahf
into
in
rclb
lods
jp
adc
loope
jp
lds
insb
mov
xor
add
adc
pop
jge
aam
sbb
xchg
jno
jp
test
data16
xor
out
pop
or
je
or
cmp
and
fiaddl
stos
mov
sbb
pop
les
sahf
add
mov
or
dec
clc
rolb
xchg
out
test
dec
call
sub
cmp
subb
cmp
xchg
mov
and
xchg
aaa
inc
lahf
xchg
iret
inc
mov
in
mov
ljmp
add
nop
adc
shrl
add
push
enter
rclb
sub
and
jns
js
popa
or
jge
mov
sbb
or
je
ja
or
and
mov
push
dec
cmp
ds
or
and
sbb
xchg
stc
daa
pushf
jo
outsl
pop
icebp
inc
jo
jmp
jg
sbbb
xchg
push
or
jmp
cltd
scas
add
stc
hlt
cmp
ljmp
push
pop
in
add
mov
cltd
les
cmp
sbb
mov
scas
int3
test
cmp
fs
aam
lock
into
add
loopne
nop
int
sub
pushf
arpl
and
mov
popa
inc
mov
xchg
fildll
mov
mov
lods
and
or
insb
sub
stc
inc
and
ret
shr
jmp
adc
xor
xor
in
mov
add
sbb
mov
and
fmuls
ror
out
decl
in
ret
ret
pop
ja
subl
jns
fwait
mov
inc
mov
inc
jbe
test
xchg
iret
test
les
subl
add
arpl
push
pop
pop
adc
or
push
xchg
lea
dec
aaa
sbb
add
testl
das
xchg
cmp
pop
lea
push
out
dec
daa
push
es
sbb
dec
lods
and
push
enter
and
jg
pop
rcrl
and
jo
mov
add
or
ss
push
jo
sbb
cli
pusha
and
jns
cmp
ret
cmpsb
out
loope
hlt
scas
shll
pop
xchg
jns
jb
sti
nop
imul
sub
and
mov
sbb
je
sub
testb
cmp
inc
ret
jecxz
push
push
mov
mov
fwait
sub
push
cmp
lret
sbbb
fiaddl
das
adcb
or
bound
mov
or
adc
call
push
mov
ljmp
or
cmp
add
cmp
out
and
cld
test
roll
ret
fdivs
dec
mov
pop
cmp
les
jp
adc
std
xchg
lret
test
addr16
mov
sub
jp
rcll
pop
or
inc
rcll
jo
rorl
lods
jmp
in
pop
shl
xchg
add
movsl
or
mov
push
rolb
mov
xor
or
popf
mov
add
rcrb
les
adc
lcall
inc
js
fstpt
xchg
sub
inc
std
inc
inc
cmpsb
fldl
mov
or
into
add
test
xlat
test
sub
mov
dec
xor
jl
inc
push
adc
loope
xor
out
jns
lcall
inc
scas
lret
aam
shl
aaa
movsl
xor
inc
adc
pop
lock
inc
cli
iret
fcoml
xchg
fnsave
lret
fsubs
sbb
push
or
scas
movsl
adc
scas
mov
add
and
subl
mov
add
push
adc
cld
shrb
or
mov
add
enter
aaa
neg
or
ja
aaa
push
push
push
ja
pop
out
push
xchg
xchg
push
pop
add
addb
lods
dec
ret
or
mov
test
or
mov
add
push
lea
cmp
dec
sbb
shlb
andb
add
int
sahf
jne
icebp
mov
add
lahf
xor
sbb
test
and
mov
lahf
push
sub
loopne
and
cmp
fsubs
dec
inc
push
add
or
sbb
push
add
dec
add
cmp
jbe
stos
sub
mov
xor
or
jp
daa
adc
jge
dec
clc
xchg
test
jmp
ret
inc
lret
scas
out
roll
stos
js
aad
out
enter
daa
test
sub
test
sbb
jb
popf
fmull
xchg
leave
add
xor
out
jmp
mov
jecxz
loopne
xor
pop
push
xchg
jmp
push
xlat
les
adc
scas
pusha
add
orl
push
daa
mov
and
pop
pop
mov
push
pop
inc
ret
js
rcrb
insb
xchg
inc
pop
loope
dec
out
pop
mov
iret
xchg
mov
cmp
xchg
adc
xchg
mov
jb
adcb
mov
or
adc
mov
ds
or
xor
xor
jns
xlat
cmp
clc
xchg
jo
test
nop
add
pop
inc
inc
sbb
or
in
into
inc
inc
sub
adc
shl
xchg
es
inc
xor
fidivl
mov
sbb
rcrl
jnp
sbb
test
sarl
subl
popl
test
mov
mov
nop
and
and
or
jle
jle
movb
inc
sbb
lea
insl
xor
cltd
sub
xchg
daa
xor
push
test
ffreep
or
fdivs
sahf
inc
or
fsubs
xor
loope
adc
jnp
or
pop
data16
aas
enter
dec
roll
or
or
jb
or
hlt
in
or
ljmp
fsubrs
mov
add
leave
enter
sarl
fwait
scas
ja
iret
xlat
or
dec
cmp
inc
and
cmp
xchg
push
dec
xchg
lret
in
mov
or
fisubrl
lret
push
inc
jns
dec
gs
add
add
cltd
lock
ret
and
subl
popa
mov
fsubs
test
lret
push
xlat
and
inc
push
imul
insb
mov
push
push
sub
push
cmp
add
and
push
xor
xor
loope
dec
lea
sarl
daa
xor
mov
mov
push
push
hlt
shll
je
mov
das
call
mov
adc
out
cli
rolb
icebp
enter
xor
adc
aam
negb
sarl
cld
jecxz
xor
sti
xchg
cmp
rolb
jge
add
sbb
mov
pop
sbb
jmp
sbb
jo
faddl
jmp
int
xor
and
sbb
jo
pop
and
add
sub
fisubs
mov
mov
adc
xor
ja
lock
push
fadds
jmp
lcall
jmpw
andl
or
rclb
jmp
push
mov
push
cs
aad
xor
cs
jp
push
sbb
cmpsl
and
jge
sbb
or
push
rorb
fadds
mov
mov
mov
loopne
les
arpl
or
sarl
ja
iret
clc
sbb
clc
mov
loopne
pop
std
pop
mov
jne
and
sub
and
in
daa
sbb
jg
xlat
lods
push
movsb
lds
and
push
repnz
mov
dec
outsl
push
sbb
cmp
cs
xchg
add
add
ret
inc
sub
test
ret
icebp
cmp
arpl
stos
subb
cmpsb
cmp
or
movsb
cwtl
lahf
insl
sub
icebp
push
ja
fstpt
mov
cmp
adc
out
leave
ss
and
or
lahf
sub
xor
nop
adc
imul
addr16
stos
movsb
cmc
push
hlt
push
dec
inc
lahf
cmp
push
sub
sub
adc
lret
sarb
sub
leave
or
pusha
jl
out
pop
faddl
test
adc
popa
fs
adc
xchg
fmuls
test
lret
or
call
push
sub
push
ds
js
mov
les
rolb
push
sub
lods
or
jmp
mov
add
out
xchg
sahf
movb
andb
pop
add
pop
push
pop
arpl
rcrb
inc
shlb
lea
stos
daa
popa
inc
or
mov
cmpsl
jno
push
ret
mov
fsubrp
sahf
xchg
jo
sbb
fisubrs
test
mov
xchg
jmp
je
rolb
mov
ss
jmp
and
inc
sarb
cmc
mov
cmp
pop
adc
and
pop
pop
daa
pushl
cmp
push
mov
add
sub
hlt
mov
adc
std
lods
mov
daa
adcb
mov
fsubs
push
pop
pop
xchg
mov
mov
dec
arpl
inc
jle
push
xchg
add
pusha
and
sbbb
inc
xchg
cmp
cmpsl
lock
push
add
or
cltd
xor
xchg
jo
int
add
movsb
dec
insl
loope
push
mov
xlat
jle
and
jae
push
add
xor
out
add
scas
push
sbb
xchg
rcrb
adc
lods
and
adc
mov
inc
lret
rcrl
dec
dec
or
fildl
das
rcrl
xchg
adc
push
add
sbb
add
popf
shlb
ds
xlat
outsl
dec
and
inc
mov
adc
push
loop
movsl
nop
mov
or
lfs
ret
xor
xchg
stos
xor
scas
fmul
addl
sbb
test
or
mov
inc
inc
xor
and
scas
jb
ror
adc
mov
rcrb
sub
xchg
and
into
cmp
in
add
push
add
mov
sahf
pop
mov
nop
ficomps
xlat
jmp
or
and
sub
cmp
imul
or
mov
sub
insl
push
out
mov
jo
mov
pop
loopne
rcll
test
lret
add
fs
test
call
xchg
ja
xor
sbb
mov
dec
sub
add
mov
sbb
mov
adc
pushl
mov
lcall
push
adc
sub
ret
mov
inc
cmp
mov
push
sub
fmuls
jl
sub
pop
adc
das
add
test
add
or
and
xorl
mov
adcb
add
push
jmp
xor
push
xor
rclb
mov
push
mov
mov
xor
es
sub
lret
xor
or
or
sbb
data16
mov
fnstenv
data16
add
pusha
add
xor
js
sbb
add
inc
add
and
inc
iret
add
jge
loopne
loopne
and
dec
push
cmp
in
iret
xor
lahf
cmp
pop
loope
filds
rcrl
daa
movsb
rclb
xchg
add
je
pop
cmpb
mov
adc
xor
das
xchg
sbb
das
xor
loope
insl
adc
sbb
leave
je
mov
in
mov
sbb
pushl
notl
push
push
in
sub
clc
cmpsb
test
inc
rcr
sub
xor
jbe
loop
test
int
mov
decl
xor
iret
ljmp
lea
ret
loopne
add
jne
rdtsc
cli
pop
mov
inc
pop
and
insb
ja
jmp
lahf
iret
and
cmp
xorb
aad
mov
xor
sbb
arpl
das
outsb
loop
jp
or
scas
adc
lsl
pop
xchg
fdivl
arpl
cmpl
mov
sbb
add
or
fdivs
test
bound
imul
ficomps
push
jb
mov
ficoml
mov
jno
dec
cmp
mov
xor
push
mov
or
adc
lea
sahf
pop
and
xor
lahf
xchg
cmp
adc
and
inc
movsb
pop
das
mov
cmp
add
jbe
xor
push
dec
push
sbb
lahf
insl
jbe
sbb
and
incl
daa
test
mov
movsb
jbe
call
dec
icebp
push
loopne
nop
inc
outsl
add
pop
and
iret
inc
dec
fisubs
push
or
movsb
das
cmp
pop
or
hlt
xchg
lds
xchg
sub
subb
stos
je
jo
pusha
lock
add
pop
lcall
jecxz
xlat
sub
jno
daa
popa
arpl
popa
dec
adc
mov
xchg
sbb
loopne
in
insl
das
add
or
mov
inc
cmp
pop
add
pop
les
jbe
movb
lods
jecxz
scas
das
mov
jnp
mov
push
xchg
fmuls
xchg
fwait
sub
push
int3
shlb
mov
xchg
gs
lock
pop
jo
xor
mov
outsl
and
ret
and
cmp
pop
outsb
mov
pop
xor
fldln2
add
pop
or
arpl
or
sbb
fsub
xchg
lea
cmpsl
fidivs
or
add
xchg
adc
adc
or
sub
inc
cwtl
addr16
adc
iret
xor
xchg
test
cmp
jle
add
xchg
bound
adc
adc
mov
jo
cmp
loope
les
in
xchg
les
adc
cltd
jb
ss
push
mov
sbb
xchg
or
sbb
xchg
je
push
inc
xchg
mov
mov
adc
sbb
jbe
pop
and
xchg
pop
pop
xchg
scas
mov
shr
call
das
int3
sbb
inc
les
cmp
bound
out
mov
repz
int
or
jns
or
xchg
mov
test
jge
sbb
fbld
mov
rorl
pop
popa
inc
movsb
fsubl
push
cmp
int
pop
rcr
pop
mov
xchg
adc
or
add
push
inc
xorb
dec
and
scas
leave
jecxz
ret
mov
adc
ja
pop
and
outsb
pop
dec
cmp
adc
aad
sbb
mov
loopne
and
repz
aas
xor
call
adc
xchg
mov
mov
pop
or
push
das
ljmp
push
sbb
xlat
push
add
lcall
adc
movsb
pop
sbb
ret
div
cmc
mov
or
pop
pop
stc
add
out
add
pop
rorl
sti
lds
mov
loopne
nop
pop
mov
and
shlb
lods
inc
clc
sub
popl
into
loop
push
xor
xor
dec
mov
pop
scas
jge
mov
arpl
int
and
jo
adc
jge
rclb
cs
push
pop
jl
popf
mov
sbb
and
push
cli
or
aad
xor
xlat
mov
pop
xchg
adc
xchg
lds
pop
das
mov
cmpl
packsswb
sub
push
jns
jp
test
push
jns
cmp
push
pop
leave
test
in
cmpsl
iret
fiadds
xchg
aas
cmp
pop
out
mov
xchg
or
and
cli
iret
mov
xchg
and
hlt
lock
jecxz
and
add
adc
shrl
lock
inc
or
test
jp
cltd
ret
mov
jo
add
or
inc
iret
jge
push
sbb
cmp
add
xchg
cmp
push
fwait
or
cmp
add
daa
push
adc
jmp
jg
ljmp
je
fwait
or
pushl
xchg
add
add
inc
pop
imul
pop
mov
xchg
dec
mov
dec
add
xchg
fwait
jecxz
fstl
cltd
inc
mov
imul
mov
or
jbe
push
cmp
mov
ja
pop
pmaddwd
cmc
shl
js
jle
mov
ds
dec
add
cli
and
inc
sti
adc
call
sti
cmp
das
test
pop
lea
xor
lock
mov
mov
xchg
hlt
icebp
packuswb
mov
gs
adc
xchg
fmuls
jp
push
xchg
mov
mov
mov
dec
sub
xchg
pop
mov
inc
out
push
test
add
adc
and
inc
adc
mov
ja
push
adc
cmc
ljmp
mov
jge
pop
rcll
add
xor
jae
pop
int
jecxz
sbb
out
jae
mov
mov
dec
and
int3
fsubrl
jmp
sub
mov
mov
sub
lock
shl
mov
lcall
pop
outsb
pop
ljmp
inc
xchg
pop
inc
inc
mov
out
jb
and
mov
jp
pop
icebp
xor
xor
enter
inc
xor
imul
dec
mov
nop
dec
and
xchg
push
pop
test
mov
cld
les
into
add
push
roll
pop
inc
repnz
push
imul
sub
orb
mov
lret
push
inc
and
adc
loopne
adc
sbb
in
push
loopne
xchg
jecxz
movsb
sbb
push
fcmove
add
fldenv
movsl
icebp
sub
iret
inc
add
inc
shrb
sti
or
loope
cmp
call
mov
adc
pop
adcl
xchg
pop
or
ret
xor
push
push
or
inc
add
movsb
leave
sub
pop
adc
popa
mov
iret
fdivr
or
push
add
ja
movl
jbe
mov
xchg
and
sbb
xor
inc
add
push
xchg
mov
nop
and
xor
sar
mov
mov
push
dec
mov
outsl
adc
je
jge
pop
test
outsl
mov
mov
out
mov
test
or
lods
inc
and
sbb
je
xlat
fiaddl
xchg
xchg
jg
jge
icebp
or
scas
fsubrl
or
xor
sahf
xlat
dec
je
push
mov
lret
mov
add
lods
add
fidivrs
inc
or
test
roll
or
arpl
daa
mov
pop
and
in
insl
sub
in
inc
lahf
and
xchg
sub
mov
xchg
add
dec
sbb
and
push
pop
sbb
shrl
popf
xchg
or
cmpsl
aas
cs
test
cmp
test
mov
jne
sub
jbe
addl
push
bound
mov
and
pop
inc
mov
sarb
sbb
test
lock
add
rol
dec
xchg
add
cmp
scas
js
mov
cli
push
ja
sahf
and
das
repz
mov
outsb
cmp
in
inc
jmp
sbbl
add
sahf
jnp
and
pop
out
jns
fisubrs
fwait
or
add
jne
lock
mov
aam
or
stos
popf
or
popa
dec
mov
addr16
lcall
fwait
ljmp
xor
sub
mov
cmp
mov
jo
ucomiss
cmc
iret
cmpsb
stos
add
cmp
cmpsl
mov
cmc
pop
inc
imul
in
movsl
adc
mov
and
xor
mov
bound
inc
add
mov
mov
jo
cmpsb
xchg
adc
fistl
cmp
inc
ficoms
pop
push
dec
cmp
mov
mov
lock
jp
pusha
scas
dec
ja
je
xchg
aas
push
popa
push
das
push
or
push
dec
fdivrs
inc
sbb
jmp
push
pop
dec
dec
mov
mov
mov
mov
sbbl
fs
cs
sti
cwtl
imul
or
lahf
pop
stos
or
pop
dec
fstpt
mov
stos
push
js
lock
add
jnp
ret
xor
test
add
inc
adc
je
pop
cmp
loopne
sub
add
std
dec
or
dec
leave
cmpsb
ret
pop
or
push
in
cmp
or
mov
ss
mov
xlat
push
sbb
inc
and
icebp
out
in
jmp
mov
cmp
stc
mov
stc
popa
sbb
inc
fisttpll
xor
les
mov
inc
inc
add
jg
inc
cwtl
pop
lock
roll
mov
pusha
icebp
lea
xchg
outsl
mov
xor
daa
add
jecxz
ret
in
adc
adc
mov
outsb
rorb
dec
dec
mov
shlb
in
lret
inc
adc
mov
loope
pop
or
add
sti
dec
loopne
rcrb
xchg
xorl
lock
in
inc
add
lods
mov
xchg
mov
lds
mov
lret
jne
xchg
out
add
inc
push
jbe
add
popf
lret
je
ljmp
xor
cmp
out
aas
pop
int
push
jo,pt
stc
adc
rolb
mov
xor
dec
xchg
dec
and
mov
sahf
iret
mov
arpl
jo
adcl
push
pop
push
lahf
mov
scas
jg
pop
mov
mov
movl
rolb
xchg
sar
je
sub
cmp
lods
mov
mov
out
outsb
sbb
xorl
push
mov
pop
mov
dec
je
call
push
mov
pushf
and
sub
and
push
adc
jns
ret
pushf
aam
push
mov
dec
sub
clc
mov
adc
fwait
stc
jns
push
add
mov
test
stos
ret
sbb
push
xchg
or
in
inc
mov
inc
mov
sub
nop
lret
test
inc
mov
cmp
ss
shll
adc
fldcw
xchg
sbbb
or
arpl
dec
les
aas
add
addr16
stos
arpl
add
or
dec
test
call
or
lcall
sbb
cmp
fimuls
adc
jno
scas
xlat
sti
xchg
incl
xchg
es
repnz
jno
pop
jne
pushf
lock
pavgb
cmp
insl
and
repnz
mov
jp
cmpsb
out
adc
add
add
dec
out
aam
mov
movntq
ja
push
adc
push
leave
dec
add
test
inc
pop
jb
push
mov
cmp
jecxz
cmp
adc
int3
shrb
popa
insb
and
fs
xor
inc
inc
jbe
hlt
mov
in
test
mov
ret
in
xchg
sarb
mov
shrb
add
sub
adc
ds
addb
mov
je
and
pop
stc
pop
test
mov
imul
jb
push
adc
jmp
sbb
sbb
rcrl
rcrl
dec
lahf
jl
and
lahf
repz
lret
xor
mov
decl
sbbb
fs
scas
pop
sub
add
push
and
add
insb
aam
jmp
mov
out
xor
mov
je
push
leave
and
sub
or
xchg
aaa
ret
ret
ret
or
fcoms
inc
icebp
dec
dec
sbb
or
out
out
in
test
pop
ds
ja
int
aaa
cmp
mov
push
inc
dec
adc
jae
pop
or
xor
daa
mov
jno
cmpsb
popl
aas
int
stos
and
out
inc
out
jnp
dec
mov
push
in
adc
bound
dec
popa
insl
pop
and
add
push
and
shlb
push
and
test
popa
pop
cwtl
adc
sub
and
xor
or
pop
mov
pop
inc
cmp
pop
scas
sar
adc
addr16
lds
push
or
mov
cmpsl
push
sub
or
push
loop
fsubrl
xor
xlat
pop
and
and
cld
std
mov
mov
xor
add
call
insl
adc
pop
inc
arpl
sbb
push
add
jo
leave
jp
inc
mov
test
andb
addr16
icebp
rolb
pop
dec
pusha
movsb
nop
out
scas
inc
mov
imul
pop
mov
sbb
imul
inc
mov
mov
adc
mov
ja
cmp
mov
push
inc
loopne
adc
inc
lods
adc
add
dec
mov
adc
push
push
jo
push
repz
lcall
pop
scas
pop
lods
jo
pop
jp
scas
popa
pop
movsb
test
inc
fs
clc
mov
inc
or
das
jmp
mov
sbb
xor
sarl
xchg
test
add
xchg
mov
stc
roll
adc
xor
inc
shrb
daa
jmp
add
mov
push
push
xchg
xchg
test
lea
inc
pop
adc
inc
mov
jg
lea
sbb
add
push
pop
dec
pop
sti
insl
cld
call
les
jle
jmp
add
addb
pop
flds
test
imul
ljmp
or
lret
je
inc
out
bound
add
cmp
pop
inc
roll
adc
inc
xor
xchg
loope
mov
sub
sbb
icebp
dec
sub
incl
pusha
mov
lret
inc
jp
sbb
fcmovnbe
xchg
iret
pop
inc
sbbb
stos
scas
pop
je
aam
jmp
les
and
cmp
mov
ds
mov
call
pusha
pop
test
repnz
pushf
push
sub
jl
or
xchg
divl
fsubp
or
mov
test
sbb
add
or
jge
mov
xchg
or
xchg
cmp
pop
adc
add
jmp
inc
jo
mov
rcrb
loope
push
cs
fld
test
jb
sub
je
cmp
fwait
pop
pushf
and
sub
insl
fidivrs
mov
cmp
test
mov
inc
dec
icebp
sbb
sub
rclb
sarl
daa
xor
xchg
sub
in
fadd
adc
push
cmpsb
ljmp
cmp
or
and
pop
jns
mov
pop
adc
loopne
ss
xor
test
incb
push
or
xchg
add
push
push
inc
popa
pop
dec
and
jbe
jp
fs
es
xchg
mov
cmpsb
mov
mov
mov
xchg
subb
iret
out
stc
dec
cwtl
pop
or
loopne
fisubs
loope
pop
icebp
and
sbb
or
and
in
pop
inc
or
adc
ljmp
cmpb
insb
popf
jnp
jno
add
jecxz
and
jl
xchg
jp
mov
imul
add
test
inc
sbb
xchg
andl
iret
repz
inc
jg
popf
mov
xchg
dec
cli
pop
test
test
pop
test
hlt
gs
mov
xchg
test
adc
push
xor
repz
and
add
iret
adc
imul
xor
orb
hlt
dec
push
roll
cltd
nop
call
dec
pop
or
jmp
iret
test
sub
and
gs
push
xchg
enter
add
js,pn
lods
xlat
add
mov
lret
cld
cmpsl
pop
sbb
loope
pusha
loope
repz
lock
outsb
and
lcall
lods
mov
bound
sub
dec
dec
cmp
mov
xchg
movb
into
sbb
inc
xor
lret
push
mov
and
lods
aaa
sub
mov
inc
sub
insb
adc
mov
push
ds
dec
and
add
push
pop
pop
and
fisubrl
lret
push
fwait
or
mov
mov
test
xor
sbb
xor
pop
cmpsb
test
push
stos
mov
imul
je
push
pop
cmpsb
push
into
mov
insb
mov
call
inc
or
pop
jno
loope
mov
sbb
pop
aas
mov
sbb
adc
stc
inc
popf
xchg
sbb
cmp
hlt
add
mov
mov
js
jo
dec
bound
jnp
jmp
test
jl
add
or
insb
add
adc
mov
stos
sub
and
cmp
or
xchg
xchg
imul
das
add
stos
out
or
xor
lcall
loope
dec
lahf
jne
jecxz
lea
jb
or
and
sbbb
ret
or
ja
aaa
add
pop
push
mov
add
es
fmull
ret
jo
pop
mov
and
add
int
mov
loopne
push
lea
rolb
xchg
xchg
shr
insb
movsb
push
in
ret
icebp
xor
push
mov
into
adc
into
xor
xor
mov
sub
fdivrs
inc
mov
cmp
push
out
movsb
dec
dec
pop
sub
jno
mov
or
addb
inc
mov
test
add
xchg
add
enter
sub
push
popf
push
inc
pop
inc
sbb
xchg
inc
xchg
jb
jbe
mov
testl
lea
and
push
add
mov
pop
faddl
sbb
and
lods
add
dec
and
jecxz
mov
inc
lret
pop
jmp
std
test
sub
in
and
and
pop
cmp
scas
sahf
movsb
cmp
repnz
icebp
jecxz
sbbl
pop
ljmp
jno
adc
pop
in
adc
push
xor
jb
jecxz
push
mov
sub
pop
mov
les
dec
or
gs
pop
subl
inc
rol
rcl
xchg
insl
aad
fstp
sbb
leave
jbe
push
inc
mov
sub
jne
lods
repnz
adc
test
test
std
pop
mov
pop
les
push
pop
ret
in
in
out
push
or
add
fucom
nop
mov
lcall
rorl
pop
and
aaa
xor
add
fdiv
add
mov
js
mov
xchg
enter
aaa
lods
scas
fcmovu
xor
es
mov
mov
lea
es
mov
test
push
pop
push
fsubrl
xchg
cmp
loopne
or
nop
add
xor
cmp
jp
mov
xor
xor
cmc
popf
lock
xor
adc
adc
test
scas
movsb
scas
and
pop
idivl
adc
or
rorb
popa
add
fcoms
subl
sahf
es
pop
adc
lods
dec
cmp
cli
es
inc
xchg
dec
das
es
ficoms
lret
movb
sarb
xchg
and
stc
incl
push
xorb
adc
xor
mov
cmpsl
or
mov
mov
or
add
lods
jbe
and
xor
xor
mov
add
mov
push
repz
cmp
jno
lea
int
mull
loop
xchg
pop
mov
inc
and
mull
cs
mov
sub
out
ljmp
lret
inc
hlt
stc
das
dec
test
inc
jmp
and
xchg
push
popa
ljmp
icebp
adc
lret
push
packsswb
bswap
dec
pop
and
les
add
les
add
or
int3
xchg
int
adc
push
adc
jb
jo
xchg
sbb
daa
rcl
pop
inc
dec
push
jl
inc
mov
adc
test
mov
dec
and
and
inc
outsl
inc
xor
pop
dec
leave
sub
push
int3
sub
dec
nop
popf
popa
aad
sbb
pop
xor
stos
xlat
scas
jo
sub
sbb
cmpsl
icebp
jne
add
mov
data16
fcmovne
lea
xchg
es
cs
lock
outsb
sbb
push
movsb
inc
hlt
push
mov
icebp
or
mov
sbb
mov
xor
shrb
and
sub
arpl
imul
mov
push
or
inc
stos
xchg
stos
pop
xchg
cmpsl
hlt
stos
xchg
jno
cmp
push
jae
add
ror
jbe
nop
jno
jmp
lds
push
xor
lock
aam
fcmovnu
pushf
mov
pop
adc
push
cmc
jmp
lods
add
movsl
cmc
xchg
dec
push
push
lock
aad
sbb
andb
pop
pop
dec
lods
xchg
pop
sub
aam
rorl
lea
shll
mov
ja
loop
lcall
xor
jle
jp
push
or
mov
pop
push
push
cs
bound
adc
in
xchg
pop
inc
push
xchg
xchg
pop
fwait
js
mov
leave
lahf
sub
outsl
sti
xor
add
sub
ljmp
pusha
sub
push
xor
shrl
or
mov
cmp
adc
popa
xchg
iret
adc
and
sub
popa
cmpsl
adc
dec
mov
jb
aad
lcall
and
inc
ret
inc
fwait
hlt
loope
cs
and
push
filds
iret
in
aas
daa
loope
into
add
cltd
adc
sub
jb
pusha
les
jp
mov
mov
js
dec
pop
out
jmp
mov
je
pop
dec
pop
and
push
inc
and
jecxz
push
adc
add
push
or
add
inc
repnz
pop
xor
cltd
neg
mov
sahf
xchg
and
movsl
mov
pop
xor
sahf
dec
mov
sub
add
add
test
pop
push
lcall
sarb
lods
aaa
push
loope
lahf
and
pop
xor
outsl
pushf
inc
fsubr
cmp
inc
sbb
pop
or
or
dec
jo
jo
jbe
cmp
outsl
pop
outsl
sbb
adcl
sbb
add
cmp
push
aas
stos
or
jp
ljmp
cmc
push
imul
push
and
iret
pop
cli
adc
add
fs
xlat
xorl
push
insb
mov
and
test
sbb
mov
stos
mov
js
insb
leave
test
adc
fisubrl
add
addb
lods
fidivs
out
add
mov
das
call
dec
jbe
and
sub
inc
jecxz
add
jecxz
sub
pop
in
inc
ljmp
fbld
into
and
fisubrs
sub
sub
loop,pt
inc
mov
mov
clc
add
stos
mov
lods
imul
movsb
add
and
popf
sub
fimull
push
cmpsl
push
jae
into
out
add
ret
scas
and
fcoml
add
cmp
xlat
ret
pop
sbb
add
pop
push
insl
sbb
fs
push
jns
adc
sbb
cmp
enter
aaa
mov
gs
jno
test
push
sub
imul
lods
in
lret
andb
sub
ret
stos
ss
into
lret
dec
das
mov
push
es
mov
add
inc
sbb
outsl
cmp
dec
test
jmp
mov
sar
xchg
jae
jl
inc
mov
es
and
jae
pop
sub
or
xor
int
xor
data16
out
jp
cmp
xchg
jae
lods
jnp
scas
cmp
cmc
and
cli
or
andb
adc
pop
lods
ret
iret
addl
test
les
mov
xchg
jle
inc
or
clc
xor
xchg
dec
and
or
mov
or
pop
add
cmp
fst
imul
mov
movsl
mov
test
sbb
and
lret
int3
cwtl
fnstcw
imul
je
sub
stos
popa
inc
ret
mov
fdivrl
push
add
addr16
fldenv
repnz
iret
ret
outsl
bound
gs
outsb
and
push
out
lock
movsb
lcall
insb
adc
in
inc
scas
sti
dec
mov
sti
fisubrl
jbe
notl
jp
addl
out
push
lods
es
push
push
or
test
cwtl
fcmovnbe
outsb
orb
subps
sbb
fdivrl
mov
in
sub
xlat
mov
mov
push
dec
dec
add
shl
imul
cmp
and
add
shll
and
or
pop
lock
outsl
mov
lock
rolb
push
pop
test
addb
cmp
negb
repz
dec
xor
jg
ret
sbb
pop
lods
stc
xor
add
fldt
sbb
mov
dec
mov
insb
add
mov
lods
cmp
sbb
icebp
pushf
out
jnp
xor
dec
and
idivb
out
mov
add
out
scas
mov
mov
cmp
shrb
lahf
jg
bound
pop
push
js
ljmp
push
mov
addr16
mov
push
out
mov
mov
aam
push
pop
sbb
clc
sbb
push
add
in
test
pop
aaa
cwtl
rol
pop
jno
shll
mov
aam
mov
pop
pop
and
push
xchg
xchg
push
stos
cltd
jmp
int3
xor
aaa
rolb
sub
xchg
cmpsb
sub
mov
push
or
push
fwait
or
sub
or
cltd
add
xchg
imul
pusha
push
or
or
sub
inc
cmpsb
xchg
cmp
js
movsl
fs
xor
movsl
cmovp
pop
cmp
mulb
fisubs
mov
push
filds
sub
test
aam
pushw
xchg
mov
xor
std
inc
adc
push
outsl
sub
and
xor
lret
sbb
mov
mov
push
loopne
rorb
pushf
dec
and
sbb
mov
push
ja
stos
mov
data16
sbb
jecxz
push
push
test
movsl
sti
jnp
jmp
inc
das
cmp
push
stos
inc
push
std
jne
daa
mov
push
and
and
insb
test
adc
lods
pop
inc
movsl
sub
fldt
sub
test
sti
outsl
lret
or
cmc
ja
fcmovne
add
aam
ret
and
dec
ja
call
into
clc
call
sbb
and
mov
leave
test
scas
pop
cmp
shrb
pop
ljmp
dec
dec
sbb
imul
out
sbb
inc
das
push
xchg
test
insb
dec
fnsave
les
out
mov
je
pop
jle
insl
add
test
movsl
dec
gs
lahf
inc
imul
insl
xchg
test
shrb
das
sbb
mov
aaa
or
loope
ret
out
pop
out
inc
nop
mov
push
fstps
xor
sbb
sub
imul
sarb
sub
mov
adc
xor
popa
cmp
ret
sarl
fstpt
xor
inc
add
insl
enter
push
push
in
mov
rorl
flds
fcoms
xchg
push
cmp
out
jnp
push
xchg
dec
push
pop
mov
shll
xchg
dec
mov
cmpsl
adc
arpl
xchg
sbb
xchg
sub
or
ja
inc
jno
jg
in
ja
cmp
xchg
mov
mov
popa
aaa
mov
mov
add
xor
js
mov
ja
fwait
dec
test
jne
mov
scas
push
mov
aaa
fldt
push
jno
jmp
int3
xlat
aam
and
mov
mov
and
xor
loopne
xchg
jp
sbb
cmpsb
push
jmp
mov
stc
dec
fsts
add
inc
ret
pushf
or
xchg
or
lods
adc
adc
sahf
andl
andl
mov
or
rorl
add
cmp
rcr
adc
sub
ljmp
fimuls
adc
sbb
mov
cmp
test
or
js
pop
xchg
rcrl
sub
loopne
call
dec
sub
pop
dec
mov
fbstp
sbb
and
add
jnp
jbe
cmp
xor
pusha
xchg
add
fimull
xchg
icebp
or
test
int3
push
jne
fs
cli
jmp
popa
sub
inc
cmp
adc
jne
cmp
cmpsl
add
jmp
sub
popf
or
fiaddl
inc
cs
sti
fsub
ljmp
pop
add
out
sub
outsb
int
std
add
movsl
stos
pop
mov
cld
sti
sbb
daa
cwtl
icebp
pop
push
or
sbb
cmc
push
adcl
mov
cmp
pop
pcmpeqw
lods
xchg
fmuls
push
inc
cs
sub
shlb
jmp
xlat
outsl
mov
aas
out
mov
out
adc
xlat
adcb
in
pop
adc
jmp
push
inc
pop
pop
loope
add
and
xor
xchg
cmp
dec
or
mov
xor
or
ds
xchg
push
add
xchg
cmpsl
scas
mov
sub
int3
std
lods
sub
pop
jbe
pop
mov
push
mov
push
mov
test
out
stos
into
pop
scas
add
add
mov
jo
jg
mov
lods
push
ret
pop
js
push
outsl
mov
enter
test
inc
add
repz
arpl
rcrb
lahf
inc
push
test
adc
cli
pop
jno
jo
mov
xchg
jl
rorl
js
add
adc
jne
les
pop
mov
push
dec
dec
add
test
ret
sbb
mov
and
and
rorb
out
add
out
lcall
nop
pop
push
shlb
pop
sub
sub
adc
call
or
and
ret
xchg
and
add
add
sub
push
xchg
jo
jbe
aad
and
cmp
call
jecxz
adcl
xor
iret
inc
flds
pop
test
push
ja
stos
js
mov
inc
xchg
or
sbb
xor
les
subb
xchg
jns
jne
sbb
lods
and
and
pop
or
xor
push
xor
es
jo
or
mov
sub
in
inc
pop
sbb
jmp
add
call
insl
cmp
into
fs
loope
test
ret
cmp
add
dec
push
jp
js
dec
ret
add
inc
sub
cmp
xlat
nop
dec
rol
cmp
adc
stos
xchg
xchg
inc
insb
mov
mov
and
inc
out
or
ret
adc
push
pop
xchg
adc
pop
ret
jne
add
iret
cmp
imul
pop
ret
or
xor
lea
inc
mov
inc
lds
inc
sbb
inc
cmp
xor
and
jne
xchg
add
jmp
scas
add
push
add
xchg
xacquire
sbb
xchg
or
and
mov
rcll
xor
jle
rclb
mov
mov
sub
test
outsb
xchg
cmp
push
inc
cli
je
cmp
cld
es
push
sbb
push
jge
jmp
add
mov
popf
fldenv
in
jns
sbb
rcrb
sbb
cmp
jae
mov
xchg
sbb
test
sub
push
or
add
int3
imul
stc
aam
pop
and
sbb
cli
push
fucomip
dec
pop
add
mov
adc
inc
lock
dec
std
in
daa
test
sub
flds
sub
lock
cmp
cmpsl
lods
rol
mov
xchg
push
stos
add
nop
ret
jno
push
inc
popa
xor
and
inc
sub
ds
xchg
data16
repz
test
add
jne
mov
jl
lods
xchg
popa
or
test
cmp
daa
rol
or
je
push
cmp
scas
cmovb
subl
cmp
mov
mov
mov
sbb
xor
rclb
dec
add
mov
loopne
push
and
pop
mov
cmp
add
fldl
hlt
fwait
inc
call
push
mov
addl
les
rorl
imul
jg
dec
mov
out
ja
or
jle
daa
cmc
and
mov
add
stc
xchg
and
cmp
ret
or
mov
and
adc
xchg
loope
pop
xchg
mov
push
cmp
jecxz
cmc
push
loope
mov
insl
mull
or
test
add
pop
popf
push
jbe
das
add
sahf
roll
xchg
pop
lock
jle
popl
fimull
or
cmp
sbb
mov
imul
xchg
jecxz
lret
sub
jge
data16
inc
mov
xor
or
dec
adc
ljmp
sub
ja
fisubrs
inc
push
int3
iret
jo
mov
mov
dec
jp
jle
mov
dec
stc
add
ret
dec
sahf
sub
pop
or
adc
xchg
push
mov
sub
fwait
push
mov
dec
dec
bound
jl
iret
shl
cmp
js
and
inc
mov
mov
les
or
push
pushf
cmp
dec
pop
negl
xchg
aas
test
mov
adc
test
mov
cmpl
lds
adc
stos
inc
icebp
andl
int3
jbe
decl
es
inc
pushf
testb
es
xor
sbb
mov
leave
jle
lahf
and
lds
add
or
rcll
dec
leave
add
jmp
adc
adc
add
stc
arpl
cmp
xor
ljmp
and
jb
cmpsb
xor
loop
std
adc
iret
ret
inc
pushf
or
rorl
aad
lahf
xchg
and
inc
jno
or
adc
xchg
and
add
hlt
pop
outsl
out
sub
pushf
and
pop
xchg
orb
xor
fwait
push
xor
jle
or
jg
lcall
mov
xchg
scas
lods
enter
jmp
push
push
sbb
mov
in
fwait
sbb
sub
faddl
cmp
pop
lods
lahf
fsubrl
mov
lock
mov
into
inc
aam
jecxz
jmp
jns
and
dec
iret
or
xor
mov
add
in
mov
sub
sub
or
or
cs
fcoms
pusha
add
adc
iret
cmpb
jo
rcr
push
negb
nop
rorl
add
repz
mov
or
and
call
sub
js
leave
mov
and
or
add
xchg
jmp
adcl
or
xchg
imul
jl
inc
xor
pushf
test
test
xor
lret
push
mov
daa
cs
adc
loope
das
inc
xchg
jno
lods
xchg
cmpsl
mov
lahf
push
lods
push
sbb
or
add
mov
cltd
lcall
sub
jo
hlt
int3
or
cmp
sarl
jg
cmp
lds
dec
fldcw
ljmp
cmc
enter
inc
sti
jle
in
dec
inc
shrb
jge
ret
pop
aam
adc
loop
outsl
movsl
cs
out
cmp
inc
jnp
add
shrl
sbb
push
mov
push
pop
pop
and
in
add
jo
mov
pop
add
dec
fbstp
sbb
inc
jbe
adc
sarb
popa
pusha
mov
jmp
lcall
mov
fstp
mov
fsubrs
sub
jecxz
mov
por
add
jno
jo
cmp
loop
dec
pushf
mov
and
test
fsincos
andb
pop
lds
adc
stos
outsl
popf
addl
adc
mov
int
push
xlat
lret
in
cltd
andb
cli
cmp
pop
addr16
icebp
inc
jmp
lods
repnz
pop
pop
adc
rol
adc
fwait
insb
mov
jae
push
sub
push
sbb
cmp
daa
adc
pop
push
jp
lods
and
dec
add
or
shl
dec
xor
popa
lods
pop
scas
xor
scas
dec
sub
icebp
and
mov
stos
or
inc
adc
ja
mov
dec
xor
sub
push
cltd
jmp
push
mov
lds
sub
mov
sub
inc
and
fs
ficoms
cwtl
mov
fucomip
iret
inc
pushf
orl
mov
mov
cmp
lods
sub
jne
pop
adc
cmc
mov
jne
sub
lods
lret
enter
pop
xchg
mov
jo
cs
call
ror
fldcw
fiaddl
sub
or
push
lock
xor
add
jo
insl
bound
xor
inc
stos
xchg
xor
jo
xor
xlat
shlb
add
cli
pop
or
rcrl
call
xchg
xor
scas
out
daa
and
xchg
adc
jo
push
xor
jo
adc
cmp
jb
and
nop
loop
mov
hlt
das
mov
xchg
lods
mov
ljmp
fs
xchg
cmc
dec
mov
fistl
lods
jle
addr16
les
shlb
les
bound
mov
mov
xlat
ljmp
add
cmp
sbb
mov
adc
inc
lods
stc
popa
sbb
sub
lods
out
ss
and
daa
sahf
rorb
push
pop
mov
sbb
pop
and
call
lcall
lock
cmpsl
sbb
lret
iret
call
es
sbb
loope
jns
sub
fcomps
cmpsb
sbb
outsl
sbb
or
mov
or
and
adc
inc
mov
sbbl
jbe
cmp
nop
adc
jmp
mov
adc
mov
xchg
scas
adc
or
mov
mov
fwait
sub
mov
fwait
xchg
pop
push
mov
dec
dec
test
shrb
jb
lret
cli
mov
out
ret
mov
sti
mov
and
popa
xor
jle
outsl
or
and
int
mov
xchg
push
pop
xor
or
aas
lods
fcmovnbe
iret
insb
cmp
jl
mov
mov
insb
es
dec
popa
and
pop
jbe
jmp
mov
inc
out
shll
inc
push
fmull
shl
inc
sub
leave
push
mov
lock
push
mov
cmp
rol
adc
jg
or
mov
rcrl
les
jmp
dec
ljmp
xor
push
js
push
fdivl
or
and
lock
imul
jnp
sub
sub
popa
mov
test
xor
pop
lcall
push
imul
sbb
dec
mov
or
mov
movq
dec
loop
jmp
ds
fsubrl
push
jecxz
add
jo
dec
sbb
popa
mov
push
add
mov
fwait
les
adc
outsl
in
push
sub
inc
loop
mov
pop
lock
push
pop
push
lret
movlps
sub
add
stos
push
cmpsl
or
and
gs
lret
jno
cmp
cli
cmc
push
add
jl
sbb
cmpsl
scas
jmp
daa
out
jmp
call
or
sahf
ljmp
mov
iret
insl
out
push
pusha
aas
pop
aaa
push
and
adc
inc
dec
inc
ljmp
outsl
inc
pop
xchg
ret
sti
js
cmp
xor
incb
ss
scas
cs
jo
mov
out
test
pop
xchg
jo
jno
sbb
push
scas
fstpt
ss
xor
repz
push
ror
pusha
mov
xchg
call
push
sti
iret
out
mov
std
adc
and
icebp
insl
ret
xchg
push
adc
dec
adc
jle
add
daa
add
cmpsb
fwait
test
and
dec
pop
rcrb
jo
js
cmc
clc
aam
mov
stos
aaa
repz
loope
int3
push
dec
lahf
andb
dec
out
mov
add
xlat
andb
fisubrl
lahf
jo
xor
push
pushf
inc
cmp
adc
loope
lea
pop
adc
insl
rcl
mov
sub
jo
fcoms
xor
stc
pop
sbb
insb
add
and
ljmp
pop
imul
pop
ljmp
lcall
out
loop
jle
cmp
jo
or
add
mov
dec
mov
push
lock
dec
add
xor
test
cmovp
add
push
and
adc
fbstp
in
sbb
popa
test
fcmovnb
jge
mov
jbe
adc
sub
xor
add
mov
adc
mov
sbb
mov
push
shr
sub
mov
ret
iret
or
mov
sbb
repz
adc
lea
ljmp
adc
setl
lcall
adc
push
loope
enter
add
lock
int
les
lret
lcall
daa
sub
inc
add
pusha
insb
jo
sub
lods
sub
jle
push
shlb
lock
das
scas
push
add
ja
sbb
adc
add
mov
hlt
das
push
loope
mov
shlb
and
call
mov
mov
inc
jnp
and
push
jo
dec
add
cmp
jnp
mov
mov
mov
arpl
scas
inc
sbb
mov
push
dec
sub
das
andl
xor
insl
fst
push
adc
jbe
jno
pop
or
hlt
xlat
in
cltd
xchg
loope
xchg
cmp
js
adc
out
pop
pop
push
mov
lods
pop
dec
sahf
pop
push
push
push
and
in
lds
lahf
xchg
jmp
pushf
and
lods
or
shll
push
add
lcall
mov
scas
sbb
mov
mov
sub
add
pusha
call
fwait
in
inc
push
sbb
add
mov
mov
pop
mov
add
pop
bound
fcoms
imul
and
sub
outsl
and
pop
daa
scas
jp
addr16
inc
sub
rclb
int3
add
fucomi
adc
stos
rorb
sti
adc
lods
lods
ret
sbb
cli
and
push
lcall
xor
cwtl
paddw
inc
sub
mov
adc
inc
cld
pop
add
add
xor
out
test
repz
in
fcomps
inc
push
push
xor
shll
pop
or
xorb
dec
adc
loopne
les
cmp
cmpsb
in
daa
add
jno
nop
or
inc
in
or
gs
mov
mov
add
mov
jbe
mov
ss
jle
or
add
cld
test
and
push
cmpl
mov
and
in
out
push
shlb
and
or
movsb
cmp
jo
push
enter
jmp
es
in
popa
fisubl
sbb
add
push
popa
cmp
jmp
fbstp
inc
and
sbb
int
enter
mov
lock
or
cltd
fdivs
jno
jecxz
repnz
mov
mov
sarl
jg
adc
fldt
ror
lods
xor
jp
push
aas
xchg
iret
inc
fidivs
iret
xor
fdivs
and
push
fists
addl
push
jo
dec
mov
or
add
jo
xor
xchg
adc
ret
xchg
insl
ret
sub
or
cltd
gs
mov
movsb
xor
push
ret
xor
adc
enter
adc
sbb
jge
cmp
in
or
dec
push
test
or
and
orl
push
scas
jno
and
test
das
or
mov
or
mov
xor
cmp
add
sti
cs
lret
in
mov
shrb
pop
adc
pop
clc
dec
jg
jns
or
inc
ret
mov
pop
add
push
mov
xchg
sti
jle
sarl
pop
int
or
idivb
push
out
push
imul
and
sbb
add
out
in
fwait
dec
sbb
fldenv
xchg
in
gs
enter
mov
or
out
aam
jb
push
add
xor
and
enter
das
dec
aaa
add
xchg
pop
in
lret
outsb
negb
mov
and
mov
or
jb
loopne
xchg
mov
roll
mov
frstor
sbb
add
jle
adc
cmp
xlat
rorl
xor
push
or
rcrl
inc
je
idivl
push
ja
cmp
adcb
les
xor
out
and
push
ret
sbb
xor
mov
dec
call
and
push
adc
xchg
xchg
and
add
pop
outsl
insl
js
es
sbb
sbb
mov
sub
std
neg
lret
pop
fneni(8087
inc
js
pop
sub
int3
enter
outsl
add
data16
aas
shrb
loop
dec
sub
loope
add
add
mov
pop
lahf
dec
sti
push
cmp
lret
xchg
ja
rolb
sbb
and
sub
push
inc
inc
daa
scas
sbb
test
dec
cli
dec
mov
lret
adc
mov
add
iret
cmp
outsl
mov
rclb
shrl
xlat
pop
pop
jnp
jnp
adc
cmp
addr16
into
out
sbb
xchg
xor
in
rorl
sub
fsubl
lret
outsb
repnz
adc
or
push
push
mov
jbe
inc
je
data16
dec
and
push
mov
int3
xor
and
sarb
fisubrl
sbb
adc
data16
into
and
mov
jbe
pop
sbb
pop
pop
mov
and
push
sarb
push
lods
mov
push
pop
add
lods
fldt
jo
mov
push
mov
xchg
outsl
stos
jb
lods
push
mov
push
mov
scas
push
and
in
push
outsb
mov
lcall
jnp
lods
jne
scas
jb
sbb
sbb
call
fisubrs
sub
ret
mov
js
dec
std
add
mov
xchg
iret
ds
mov
mov
pop
and
inc
aas
mov
insl
adc
sarb
adc
faddl
outsb
jnp
movsb
shrb
aam
mov
mov
inc
or
lcall
fstpt
imul
and
mov
icebp
add
outsb
cmp
in
dec
sbb
mov
and
pop
xchg
fsubp
lods
push
add
mov
or
push
popa
in
pusha
addr16
push
sbb
pop
lods
daa
mov
mov
jp
in
insb
dec
sbb
sub
or
daa
jns
nop
bound
fisttpll
inc
test
add
ficompl
fstpt
into
push
and
dec
loopne
pop
hlt
insl
movsb
mov
mov
mov
push
mov
imul
imulb
xchg
push
adc
push
cltd
sbb
mov
inc
adc
jle
push
sbb
add
divb
ljmp
fiadds
mov
add
movsl
dec
mov
test
jo
push
cltd
dec
lods
or
inc
push
outsb
js
aad
jl
pop
jle
imul
fcomps
je
dec
mov
sbb
leave
incb
sar
add
outsl
xchg
mov
push
push
scas
mov
mov
sbb
xchg
xchg
jle
cs
mov
je
and
dec
mov
push
add
sbb
inc
inc
loopne
cmp
mov
or
vmread
push
insw
rcrl
aaa
sub
rcrb
xchg
adc
cld
jg
fsubs
pop
inc
movsb
sbb
cmp
push
jno
outsb
es
mov
inc
adc
fdivrs
inc
iret
xor
mov
xchg
add
int3
js
js
dec
inc
popa
das
loopne
cmp
and
outsl
dec
and
orl
imul
test
or
add
fs
loope
xor
pop
xor
sti
cmp
sbb
dec
gs
xor
push
and
or
movsl
add
push
sbb
xchg
xor
pop
or
push
sbb
and
movb
xchg
movsb
add
mov
jle
hlt
jecxz
adc
sbb
xor
ljmp
in
pop
cltd
movsl
lock
or
shrb
test
les
loop
arpl
and
repnz
push
xor
sbb
jns
lock
daa
cmpsl
nop
jle
dec
sub
loopne
fimuls
das
push
xor
loop
push
or
sub
pop
int3
shlb
or
fmulp
sbb
int3
scas
add
cwtl
pop
dec
daa
dec
inc
pop
xchg
sub
dec
loope
inc
ja
sti
cwtl
xor
sub
push
cmp
xor
dec
inc
jnp
mov
cmpsb
and
or
rorl
dec
call
or
das
push
js
adc
lods
adc
roll
sbb
push
dec
sub
nop
arpl
fistps
in
dec
sbb
sub
loopne
outsl
jmp
inc
ret
adc
sti
mov
mov
cmp
loopne
add
xchg
loope
std
xchg
add
xchg
js
pop
or
rcl
adc
sbb
sub
jb
xchg
les
mov
rol
and
or
push
mov
jge
mov
fimuls
adc
or
mov
jecxz
xchg
out
dec
xor
xchg
fdivs
xor
push
sbb
pusha
lods
push
xchg
mov
and
mov
cwtl
fs
test
xor
js
popa
pop
bnd
dec
sbb
test
int3
sbb
jo
ss
sbb
into
jae
add
and
xchg
dec
sub
in
sarl
movsb
enter
adcl
pusha
aaa
mov
aaa
push
decl
loopne
inc
inc
sub
push
das
ss
addb
fmull
push
leave
movl
int3
push
call
sub
pop
ret
hlt
gs
arpl
hlt
sbb
inc
sbb
jbe
les
mov
jno
pop
push
scas
es
mov
out
insb
push
and
lret
ret
add
out
rol
xchg
inc
mov
mov
mov
pop
dec
fisttps
arpl
cmp
add
or
fs
fs
fistpll
sbb
dec
pop
push
xchg
out
inc
ja
notl
sub
push
xor
ss
inc
popl
mov
das
add
xlat
or
ret
sbb
jnp
subl
je
testb
mov
xchg
pop
loope
inc
movsb
scas
mov
arpl
inc
fadds
and
inc
loope
mov
dec
mov
outsb
and
cmp
adc
or
push
and
ja
stos
pop
or
mov
xor
push
inc
cmp
push
jl
add
dec
rolb
xchg
cmp
and
or
or
and
adc
mov
mov
movsb
push
or
jmp
ja
sub
stos
push
xchg
insl
xchg
sub
jge
ja
inc
cwtl
pushw
or
les
push
repz
mov
das
popa
xlat
lods
jno
and
dec
cmp
push
jl
addr16
pop
pop
sahf
inc
and
rclb
cmp
add
clc
mov
imul
arpl
xor
jne
mov
roll
rol
inc
xor
sbbl
or
and
mov
cld
add
lea
mov
mov
ret
inc
jb
test
ljmp
inc
cmpsb
arpl
cmp
data16
sub
test
sbb
aas
clc
inc
pop
mov
ljmp
fscale
jne
jb
sub
scas
push
push
or
push
cli
subb
inc
in
push
and
inc
pop
pop
mov
inc
jbe
adc
mov
cmp
ss
aad
jne
loop
sub
pop
aas
cmp
sahf
ror
add
js
adc
push
jnp
push
mov
les
movl
sbb
lret
loopne
std
push
popa
xchg
push
adcb
dec
int
test
add
icebp
popf
cmp
ret
sbb
mov
jo
int3
ret
and
mov
and
jge
or
add
cmovs
adc
pop
mov
lahf
inc
jecxz
leave
add
and
lds
mov
jp
mov
add
push
dec
or
sub
popf
or
loopne
std
mov
into
xor
add
fisttps
and
and
mov
cmp
in
sbb
pop
sub
aaa
and
add
mov
iret
cmpsb
jecxz
fcomps
shlb
push
popf
into
jp
sbb
pop
loop
inc
adc
jne
mov
lock
pop
pop
jp
addr16
add
daa
lahf
movsb
xlat
adc
xor
add
xor
sbb
popa
lds
lock
mov
jmp
lods
pusha
aaa
call
je
pop
js
add
add
sub
mov
loope
pusha
pop
jmp
into
popa
add
sarb
add
cmp
fnsave
sub
stos
test
add
jp
fsubrs
pop
jns
or
addr16
or
push
inc
fisubrl
sarl
bound
in
cmp
jne
ja
ja
call
rcr
das
jecxz
fs
xchg
lock
fnstcw
pusha
inc
or
add
xor
cmp
add
adc
add
int
add
add
ficoml
lret
adc
xor
mov
das
scas
loope
js
ret
push
mov
pop
loope
push
js
out
xlat
les
fimuls
sti
xor
loopne
and
hlt
inc
or
stos
test
mov
test
and
sbb
frstor
decl
adc
add
add
imul
in
and
js
jne
inc
shl
popa
fcmove
ds
out
push
cmp
or
pop
or
sbb
push
mov
add
lods
mov
pushf
sub
dec
add
ret
add
std
test
outsl
or
cmpsl
movsl
add
xor
adc
arpl
mov
mov
int3
xor
sub
add
sbb
mov
cmpsb
jg
mov
stos
add
aaa
lods
pop
xor
fmuls
andl
xor
add
data16
pop
sbb
mov
jae
mov
jbe
cmp
mov
pop
mov
fisubrl
mov
stc
lds
or
mov
or
popl
mov
ss
lahf
push
jmp
mov
insl
adc
xchg
or
movsb
ret
add
lahf
or
add
cmpsl
xor
push
pop
jmp
cmc
ret
jecxz
and
or
dec
pop
dec
pusha
push
push
lcall
clc
cli
es
es
mov
dec
daa
add
and
pop
and
gs
or
add
test
pop
es
mov
pop
mov
aaa
shr
scas
fwait
and
test
xor
mov
cmc
iret
and
sub
in
sub
repz
imul
add
aaa
mov
divl
scas
xor
and
fcomp
in
gs
aad
xor
jns
ret
mov
cmp
aas
nop
in
mov
imul
sbb
addb
and
mov
mov
xor
push
mov
test
dec
clc
inc
and
cltd
add
cmp
add
xor
aas
dec
inc
and
dec
pop
adc
mov
jns
flds
pop
or
sbb
or
icebp
shlb
inc
in
iret
imul
lds
jo
mov
xor
faddl
sub
add
imul
mov
sbb
push
lret
add
pop
dec
lret
cmp
scas
pop
shlb
test
imul
rol
fisttps
pop
movsl
lods
pop
add
roll
fimull
aas
sub
push
nop
xchg
adc
add
mov
out
lcall
out
mov
dec
mov
pop
leave
and
dec
lds
test
and
push
ret
sub
loopne
imul
icebp
pop
cmp
push
jecxz
pop
mov
adc
ja
sbb
in
jnp
lds
pop
shl
rcll
inc
lods
pop
or
mov
mov
push
jecxz
loopne
jb
out
sub
out
pop
dec
outsl
push
sub
subl
cmpsl
jae
push
and
or
lea
dec
mov
cmp
adc
iret
adc
mov
xor
lock
cld
mov
adc
daa
iret
outsb
xchg
sub
fwait
mov
outsb
jne
shrl
test
lret
xor
and
mov
cmc
aaa
and
pop
push
jno,pn
fildll
or
or
jecxz
add
pop
or
pop
nop
mov
xchg
push
and
jbe
cmp
aad
aas
or
hlt
loopne
sar
ret
fsts
dec
jl
add
test
imul
pop
jge
scas
push
iret
and
in
pop
or
mov
iret
adc
or
mov
adc
xchg
loopne
addr16
inc
jg
and
icebp
stc
inc
push
and
xchg
add
or
orl
mov
push
xchg
cli
and
xchg
clc
aad
adc
or
pop
xchg
sbb
ljmp
sbb
pop
sub
inc
pop
jbe,pn
jnp
frstor
sbb
sahf
sbb
and
mov
sbb
mov
adc
movl
mov
jns
xor
scas
and
mov
popa
fstpl
add
popa
or
and
xchg
stos
xchg
lcall
and
into
in
add
popa
cmc
popf
inc
add
shr
in
push
sbb
dec
jmp
sbb
cmpsb
mov
or
or
loopne
icebp
xor
dec
fcmovnu
ss
mov
xchg
in
mov
cmc
iret
sti
rcrb
test
insl
fcmove
push
and
es
testl
and
iret
shlb
add
cmp
jne
push
jecxz
imul
push
aaa
cmp
popf
test
divl
call
sbb
lahf
push
jmp
out
gs
mov
jmp
pop
insb
and
mov
mov
jne
adc
dec
push
mov
sub
adc
hlt
loopne
cs
jmp
jmp
arpl
hlt
ds
lds
fistpll
mov
xchg
add
pop
outsl
sbb
xlat
ss
sbb
push
pop
cmpsl
fcoml
out
jno
cs
cmp
in
adc
jl
cmp
movsl
scas
das
insb
andb
cmc
insl
sbb
inc
push
stos
fs
outsl
xchg
fcmovb
inc
sbb
mov
inc
sbb
push
mov
xor
and
mov
or
ret
ret
lea
xchg
mov
and
out
ja
enter
xchg
jno
and
fcomp
shlb
or
cmp
dec
ljmp
push
xchg
xchg
lods
pop
icebp
ss
jg
pusha
js
or
iret
ret
mov
xchg
pop
cmc
jns
pop
aas
test
fcmovbe
decl
push
push
test
sub
lds
sbb
jno
js
mov
les
inc
adc
aam
mov
lret
leave
inc
push
or
dec
sahf
push
enter
push
sbb
sub
test
mov
dec
dec
rolb
inc
lock
outsb
lods
pop
shrb
aas
cmp
add
xchg
mov
add
jo
or
cmp
xchg
or
call
in
mov
out
int
or
xor
mov
mov
push
add
test
or
mov
insl
jg
test
push
mov
mov
add
push
lret
test
lahf
push
sbb
cltd
fimuls
pop
pop
sub
aas
inc
pop
cmpsl
sbb
push
insb
fstpl
pop
jg
inc
dec
push
cmp
hlt
xchg
lock
lock
stos
pop
adc
es
sbb
arpl
lods
repz
sub
sub
mov
sbb
jg
mov
movsl
mov
lret
imul
adc
xchg
ret
nop
or
or
mov
loopne
movsl
subl
movsl
jge
add
dec
lret
fsubrs
and
cs
ja
jo
cs
or
mov
lcall
push
or
or
sub
cld
sbb
nop
push
sbb
scas
sbb
inc
xorb
sbb
add
rcrl
pop
roll
sbb
enter
ss
adc
cmp
add
popa
loopne
add
adc
mov
or
inc
dec
or
adc
imul
xchg
mov
lods
dec
jmp
pop
cli
mov
mov
ret
cmovno
movl
sti
stc
xor
insl
call
inc
jge
sub
movsb
xchg
pop
lds
js
cwtl
ret
in
sbb
dec
imul
or
or
inc
sub
adcb
loopne
jmp
rclb
mov
xorb
lds
faddl
xor
clc
les
cmp
push
repz
sbb
aaa
mov
iret
pop
sbb
mov
js
or
add
cmp
stos
fildll
pop
push
push
cmp
xlat
push
mov
push
les
repnz
jmp
mov
add
push
gs
add
pop
aad
das
jl
subl
stos
or
test
xor
gs
leave
pushf
cmpsl
jge
and
inc
cmp
sbbb
rcll
cltd
jp
adc
icebp
mov
pop
or
mov
xor
ret
das
mov
loopne
das
inc
stos
and
or
xor
sbb
mov
pop
add
cmp
icebp
push
xchg
mov
adc
sub
dec
sbb
sbb
fsts
std
mov
jbe
jno
scas
cmpsl
xchg
hlt
mov
mov
mov
cmp
xchg
cs
sub
xchg
arpl
sub
or
sahf
jno
mov
add
das
test
xorl
ljmp
movsl
mov
push
test
dec
lods
movsb
jno
pop
push
mov
mov
in
xchg
clc
add
or
or
mov
cltd
clc
cmpsl
lahf
rorl
jae
push
push
xchg
icebp
loopne
repnz
gs
lret
shll
xchg
mov
es
arpl
sub
aaa
cltd
nop
jmp
or
ss
cmp
adc
xor
mov
rcrb
mov
decl
aaa
subl
inc
mov
mov
inc
mov
xlat
pop
rcl
int3
fiaddl
mov
out
and
xchg
into
push
or
inc
add
mov
pop
jmp
cmp
or
jp
or
das
push
sbb
inc
push
mov
les
in
sub
sbb
xchg
ret
out
mov
popf
add
xor
mov
notl
rorl
lock
nop
shr
adcl
outsl
cmc
push
notb
fildll
ss
cmp
pop
cmp
push
add
add
xlat
sar
push
insl
inc
xor
xchg
int3
cmpsb
or
out
mov
dec
fadds
push
and
or
adcb
fwait
inc
and
push
dec
sub
pop
jp
sub
jns
call
mov
adc
cltd
and
call
pop
lcall
xchg
dec
shr
out
xor
or
cmp
cmp
jne
imul
sahf
xor
gs
mov
cmpsb
add
mov
jmp
jp
cmp
jns
das
mov
jo
and
push
shll
mov
ja
adc
and
push
test
cs
adc
and
out
icebp
out
inc
mov
add
sub
xchg
mov
ret
push
xchg
mov
dec
xchg
jg
push
inc
dec
sar
mov
xor
mov
mov
fadds
mov
aaa
mov
cmpsb
fimull
adc
push
pop
lods
inc
cmp
xchg
add
outsl
lea
arpl
pop
in
jbe
cmp
shlb
subb
out
and
sbb
sti
addr16
out
sub
aaa
loop
cmp
aam
push
shll
or
cmpsl
sbb
sbb
call
push
cmpsl
clc
insl
jmp
iret
outsb
pop
mov
add
xor
ljmp
ret
push
adc
xchg
adc
nop
add
lahf
mov
dec
lahf
and
jge
or
test
xor
xchg
sbb
jnp
rclb
std
cmp
es
or
outsb
scas
pop
xor
lock
add
jmp
xlat
loope
scas
popf
push
mov
or
xchg
add
frstor
sub
inc
lcall
int3
jns
pop
and
or
xchg
and
sbb
shl
out
mov
mov
dec
push
das
dec
lods
repnz
pop
adcb
add
push
and
movsl
out
daa
movsb
xchg
fs
enter
fistpl
aaa
mov
es
out
sub
xor
icebp
add
jnp
loope
lods
sbb
enter
pop
inc
or
sub
adc
les
mov
xor
mov
mov
icebp
les
lahf
jmp
fldt
and
xlat
mov
icebp
mov
xchg
xchg
jo
dec
mov
xor
xchg
mov
add
pop
mov
sbb
pop
repnz
mov
pop
and
cmpb
xlat
and
jg
iret
and
xchg
adcb
testb
movsb
fwait
push
inc
jne
mov
cmpsb
pop
and
lret
jmp
cmp
repz
add
sbb
loope
call
je
orb
push
aas
lea
sub
into
enter
aam
adc
adc
adc
or
int3
imull
xchg
popf
clc
push
stos
pop
push
stc
add
sbb
stos
push
cs
subl
xchg
xor
outsb
jmp
xchg
xlat
pushl
mov
mov
mov
sub
fdivl
test
rorb
enter
mov
push
inc
pop
cmp
or
pop
xor
js
push
shlb
loope
cmpsl
xlat
cmp
add
enter
cwtl
add
or
xchg
or
pop
shlb
push
sar
inc
inc
js
test
and
sub
inc
cmpsl
xchg
jae
imul
shlb
inc
aam
enter
pop
mov
leave
adc
aad
popf
cltd
cmp
jp
out
movsl
icebp
ss
dec
and
sbb
sub
jmp
dec
insb
lods
and
pop
jne
jge
ja
lods
adc
add
testb
stos
mov
lock
or
mov
loopne
cltd
stos
xor
sub
pop
or
cmpsl
add
daa
jo
shr
leave
sub
sub
push
xchg
push
ja
push
pop
ret
push
lods
push
jg
movhps
mov
sbb
push
adcb
rcr
sub
dec
and
sub
fwait
jb
add
push
ss
and
pusha
lret
aas
mov
fnsave
jnp
ds
aaa
mov
add
add
lahf
ret
dec
mov
xorl
clc
cmpb
stc
sbb
fsts
mov
or
sub
inc
jmp
aaa
outsl
fsubrl
jl
dec
jb
adc
or
pop
adcl
xchg
insb
mov
pop
data16
adc
or
sbb
sub
or
mov
push
addr16
pop
cltd
pop
pop
in
pusha
gs
push
lret
test
inc
mov
mov
test
into
xor
cmc
and
mov
jmp
or
lret
lds
dec
sbb
sub
sbb
push
and
pop
sbb
daa
sub
mov
mov
out
inc
faddl
fiaddl
or
outsb
add
mov
and
nop
cmc
sub
push
jle
ljmp
cmp
jp
lods
xchg
lea
imul
adc
pop
pop
add
cmp
and
or
inc
lret
jbe
lds
js
lea
jo
mov
rolb
sbb
aam
movsl
gs
push
lods
xchg
orl
mov
ficompl
push
jno
push
or
mov
aam
test
cs
int3
ss
add
stc
stos
adc
xchg
inc
add
adc
in
jmp
andb
mov
or
call
bound
aas
out
push
clc
push
aad
xor
movsb
push
pop
lea
or
lods
inc
popa
pop
jae
popa
mov
daa
movsl
loope
mov
mov
push
add
sbb
inc
xchg
sub
pop
mov
cli
pop
adc
jo
add
shrb
sub
and
out
jns
rolb
in
ss
scas
movsb
mov
add
adc
test
push
sbb
xor
add
and
fadds
int3
and
adc
mov
lahf
or
push
dec
push
aaa
repz
jmp
push
jmp
pop
fldenv
sbb
ds
push
cmpsl
xchg
or
adc
daa
pop
sbb
push
ja
ud2
jo
mov
rcll
pop
imul
or
dec
inc
or
cmpsl
xor
out
insb
jns
inc
push
in
xor
xor
push
nop
popf
in
cs
ljmp
and
hlt
hlt
std
ja
testb
shlb
mov
es
je
imul
or
inc
enter
inc
popa
lock
push
mov
adc
rcll
jno
sub
outsl
mov
mov
popa
pusha
sub
pop
stos
bound
les
fidivrs
adc
sbb
sub
mov
clc
sub
lret
xor
je
sbb
in
sub
sub
test
clc
cwtl
cmp
sbb
mov
mov
xchg
xor
push
mov
pushf
sbb
adc
cs
aas
xchg
mov
loope
mov
nop
movb
sub
das
into
adc
sahf
mov
xor
xchg
xchg
cwtl
mov
adc
loopne
jo
lahf
and
cmp
test
or
into
adc
add
mov
insl
cmovg
pop
add
cmp
cmp
adc
int
pop
arpl
outsl
adcl
cmp
push
push
or
inc
int3
add
sub
and
dec
sbb
inc
or
mov
xchg
and
aas
adcl
xchg
pop
xchg
jno
adc
add
adc
adc
push
pop
jo
mov
sbb
out
sub
xchg
pop
orb
pop
adc
sar
or
jno
test
sub
add
sbb
sub
adc
inc
xchg
add
enter
jns
lcall
dec
shll
ret
inc
add
push
sbb
mov
nop
sub
pop
ja
jp
out
add
sbb
insb
pop
repz
jo
shrl
fadd
lret
sbb
addb
add
out
sbb
bound
and
xchg
mov
bound
sub
xchg
push
sbbl
add
xchg
movsb
jnp
inc
popf
dec
mov
test
pop
mov
popa
fstps
inc
stos
lock
push
mov
adcl
test
lock
test
pop
pop
mov
orb
pop
sub
in
adcb
mul
test
mov
into
add
daa
push
rclb
repz
cmp
push
aad
loop
lock
lock
mov
sbb
fldz
xor
or
push
add
add
cmc
jmp
mov
es
sbb
pop
inc
pop
add
sbb
ret
inc
shl
test
adcl
push
and
mov
xchg
lods
and
and
mov
and
cmp
jb
jecxz
pop
loopne
jae
mov
and
rcrb
add
push
xchg
sub
add
cmpsl
mov
gs
jb
ret
shll
add
orl
int
test
loope
stos
ja
jbe
into
jp
pop
jecxz
mov
and
jmp
add
ret
imul
fwait
aam
and
and
outsl
jmp
jmp
pop
arpl
adc
ret
popaw
outsb
jmp
or
dec
sbb
outsb
pop
adc
dec
icebp
inc
jecxz
fwait
inc
mov
in
push
lock
xor
jg
add
lret
mov
cltd
jae
sbb
setg
insb
fcomi
insl
loopne
xchg
add
and
jno
repz
outsl
sahf
add
bound
add
movl
ja
lret
addl
pop
inc
adc
mov
add
push
or
mov
clc
add
dec
icebp
shlb
ja
sub
ljmp
loopne
and
mov
arpl
dec
icebp
mov
lods
pop
adcl
js
js
push
mov
add
aaa
or
cltd
jo
push
mov
mov
dec
imul
adc
pop
out
mov
xor
out
iret
jnp
scas
scas
scas
inc
mov
pushf
sbb
sub
sbb
out
ret
arpl
enter
jno
xchg
push
cmpsb
or
mov
sbb
aaa
testl
in
lcall
and
popf
pop
incb
daa
std
inc
adc
ror
inc
cmp
mov
enter
lea
insl
pop
daa
in
mov
mov
sbb
push
and
mov
pop
dec
dec
nop
test
in
jns
cmp
shll
popa
pusha
cmp
pop
out
adc
mov
in
jns
js
mov
pop
add
lods
push
inc
sbb
or
dec
and
jecxz
mov
inc
mov
add
ljmp
cs
pop
jle
loope
les
adc
xlat
cwtl
mov
add
fisttps
sub
pushf
add
data16
popa
je
mov
add
pop
in
and
push
cmp
insb
dec
mov
sbb
xor
pop
mov
or
subl
dec
dec
xorl
xor
loope
les
mov
xchg
push
push
popf
jo
pop
hlt
or
movsl
push
mov
loop
data16
adc
push
push
mov
jmp
cmp
pop
out
push
add
push
ds
bound
scas
jg
inc
sub
int
ret
xorl
js
cltd
push
sahf
insl
loopne
dec
mov
js
inc
out
push
push
jb
outsl
add
ficomps
mov
inc
hlt
add
and
int
or
sahf
scas
popf
cmpsb
add
push
pop
popl
push
aas
lcall
adcb
sbb
rcl
rorb
ficoms
fstpt
cmpsb
repz
cwtl
add
fidivs
cmp
and
jae
mov
adc
sbb
pop
shlb
cmp
pushf
jne
lock
xor
sahf
push
mov
and
and
xchg
cmp
inc
cmpsl
push
and
out
mov
dec
pop
sbb
movsl
mov
mov
fsubs
xchg
or
das
lret
mov
roll
push
inc
cmpsb
psubsb
in
cmp
add
lea
xlat
cmp
inc
inc
jbe
shl
outsb
mov
mov
add
push
imul
sub
and
das
scas
push
loop
shrl
mov
clc
adc
lds
ds
pop
in
ja
movsb
and
push
nop
ljmp
aam
jno
pop
cltd
jle
mov
xchg
sbb
mov
aam
inc
adc
aaa
movsb
enter
ret
pop
imul
adc
das
jnp
mov
add
dec
or
sbb
add
addb
ja
jecxz
sarl
jno
and
xchg
push
sbb
pop
mov
and
pusha
loopne
mov
dec
test
jl
sbb
stos
sbbb
jecxz
and
shlb
popa
shlb
pop
movl
addr16
loope
ljmp
stos
packuswb
xchg
das
sub
dec
lret
sbb
neg
and
or
fcomip
inc
ret
inc
jg
imul
xor
test
shlb
ret
imul
mov
test
shrl
test
mov
sub
aas
mov
mov
xchg
and
jbe
imul
dec
mov
fldcw
je
out
xor
cmp
inc
movsl
sbb
popf
inc
and
insl
faddl
or
test
sub
adc
jbe
push
bound
out
xor
mov
dec
and
ror
mov
aam
inc
jle
sbb
xorl
add
pop
mov
push
icebp
push
sub
or
test
lods
stos
mov
sbb
mov
outsb
mov
sbb
in
sahf
and
fstps
add
add
not
les
leave
push
push
mov
push
fidivl
fildl
jbe
pop
enter
dec
or
cmp
jb
pop
inc
mov
xor
dec
bound
pminub
cld
out
inc
rorl
add
jg
sub
or
mov
inc
mov
dec
int
add
bnd
out
add
jmp
mov
das
icebp
out
adc
pushf
lret
sub
mov
sahf
ret
push
push
or
or
add
push
jo
push
movsl
fldcw
sub
adc
ja
xchg
cmpsb
inc
call
mov
rorb
test
add
aam
aam
mov
or
mov
and
inc
mov
lret
add
push
add
gs
and
add
mov
aas
lcall
shlb
je
add
jbe
push
pop
sub
mov
add
push
sub
shl
mov
cltd
daa
add
icebp
cs
imul
inc
daa
xchg
fdivl
sub
in
and
scas
add
or
out
mov
fs
imul
jp
js
dec
and
cmp
cmp
ss
sbb
fs
loope
test
mov
pop
jns
pop
movsl
negb
out
rcrb
sub
mov
xchg
iret
adc
out
out
cmc
test
inc
pop
fcomps
or
push
ud1
and
fsubr
and
pusha
nop
fstps
nop
or
push
push
jmp
jge
jno
xor
leave
repnz
sahf
add
xchg
pcmpeqb
or
iret
insl
ss
adc
daa
mov
add
mov
sbb
cld
fdivl
lods
dec
or
lds
lahf
jg
add
stos
add
add
pop
inc
or
inc
bound
scas
add
popf
sbb
inc
mov
stos
stos
inc
dec
xor
add
push
xchg
xchg
push
add
mov
and
pop
add
and
nop
mov
sarb
scas
ja
and
and
lea
pop
aam
or
out
insl
out
xor
lret
push
or
xchg
loopne
and
out
jb
imul
push
jne
outsb
iret
pop
sbb
les
popa
push
push
inc
push
cmp
sbb
andl
mov
shrl
pop
sub
push
int3
out
xlat
add
add
cmp
adc
xchg
cmp
dec
push
aaa
dec
shrl
or
jnp
pop
fstps
push
mov
nop
fs
fsin
mov
xor
mov
pop
dec
mov
add
push
xchg
mov
int
shlb
ds
adc
mov
nop
cmp
push
mov
pop
in
add
dec
cli
jp
inc
inc
dec
cmp
mov
outsl
xchg
das
push
fildll
int
mov
mov
add
ds
add
lcall
pop
lock
je
testb
je
mov
add
lods
into
push
stc
shll
ja
dec
xor
sbb
into
ret
sbb
xor
popf
shrl
outsb
sarl
test
jecxz
jne
sbb
test
lds
ja
cli
inc
push
testb
push
pop
mov
mov
push
mov
mov
loope
pushf
popa
dec
in
lahf
jg
and
scas
xchg
add
add
movsl
jle
lahf
add
inc
ljmp
xor
leave
lock
pop
or
into
insl
push
daa
push
fs
mov
aaa
pop
lods
mov
pop
sub
bound
add
dec
add
aas
push
add
les
in
rcr
jo
fwait
imul
sbb
sbb
iret
add
push
outsb
push
cmp
cmp
das
mov
push
movsl
fcmovnb
cmp
xorb
dec
jb
mov
sub
cmpb
jae
inc
cmp
inc
adc
push
sub
outsl
sub
int3
and
sbb
repnz
pop
call
add
nop
addr16
add
mov
mov
xchg
jnp
js
mov
jo
xlat
mov
push
mov
xchg
fimull
xchg
adc
cmp
pusha
add
mov
les
xlat
push
cwtl
add
push
popa
mov
lahf
loopne
add
fadd
and
imul
insl
cmpsl
or
push
lock
and
jle
add
push
cmpl
push
inc
mov
movsb
add
lods
sarl
rcrb
shl
and
pop
cwtl
add
add
and
sub
ret
add
shlb
pusha
add
inc
pop
or
add
ja
aam
mov
pop
pop
out
or
pushf
xor
scas
add
loopne
mov
push
loope
add
loopne
mov
pop
mov
stc
add
pop
int3
rolb
or
jp
push
pop
sub
add
or
pop
sub
pop
xchg
mov
rcll
inc
dec
add
insb
mov
add
inc
mov
sub
add
pop
or
mov
pop
movsl
dec
lods
jb
loope
mov
add
ret
jecxz
fldenv
sbb
dec
popa
mov
mov
mov
imul
sub
cld
dec
outsl
pop
cmpsl
or
dec
mov
push
mov
rolb
lods
push
das
incl
adcl
push
dec
fsts
or
mov
jl
movsl
loopne
jb
jge
addl
jae
sbb
push
jno
iret
arpl
jnp
vmulps
push
cwtl
mov
out
mov
xorl
rolb
push
and
nop
cmp
ret
orb
and
or
mov
and
inc
push
push
leave
push
mov
add
add
xor
mov
add
add
shlb
cmpsb
scas
or
pop
and
add
xchg
sub
ljmp
sahf
xorb
test
or
jo
cltd
and
stos
fstl
add
fidivs
dec
push
add
mov
pop
test
mov
or
jne
mov
data16
insl
pop
loopne
int3
cs
bound
add
rcrb
xor
push
imul
pop
addr16
adc
bound
push
out
inc
add
arpl
adc
push
sub
or
add
push
pop
inc
roll
inc
clc
add
adc
and
in
dec
mov
add
adc
adc
sub
xchg
daa
lods
pusha
xor
call
test
adc
xchg
fucom
pop
loop
push
insb
inc
sub
sub
hlt
mov
in
fdivl
push
adc
sub
push
ja
adcb
jmp
stos
xchg
sbbl
sbb
adc
jns
xchg
shl
inc
xchg
xor
ljmp
push
mov
pop
mov
lods
xor
jb
sbb
jp
add
xchg
adc
repnz
pop
das
add
addb
cmc
scas
push
add
movsl
lahf
aam
or
cmpb
mov
cs
mov
jnp
fnsave
mov
jl
pushf
rolb
movsl
xor
iret
sub
mov
mov
jo
cmpsl
pop
and
mov
adc
aad
xchg
or
mov
sbb
enter
mov
rclb
mov
adc
jno
jns
insb
test
push
adc
movsl
jo
jae
push
cld
mov
xchg
addb
icebp
imul
test
subb
mov
xor
add
add
mov
sbb
test
pop
mov
aam
filds
cmp
cmp
cs
rclb
aam
dec
imul
xchg
in
orb
mov
cwtl
scas
mov
sbb
cmpb
dec
popf
mov
movsl
adc
std
cli
sbb
push
mov
sbb
and
pop
and
lret
divb
and
leave
fwait
and
enter
movsb
mov
rcll
sbb
xlat
pop
out
or
xor
dec
cmp
dec
or
mov
cmc
adc
imul
es
orb
aam
push
mov
adc
sbb
test
pop
mov
aas
orb
sti
add
adc
mov
cmpsl
rcll
add
movsb
sbb
mov
inc
int3
lahf
js
jl
adc
pop
push
jno
add
out
in
add
cmp
mov
mov
jno
mov
cmp
adc
test
ja
subl
sub
adc
daa
xor
sbb
or
pop
andb
mov
xor
jo
xchg
insl
pop
dec
xchg
das
outsb
adc
mov
fcmovb
cmp
loop
clc
xchg
popf
ficoms
sub
fldt
add
cmp
dec
pop
fisubs
sub
jne
test
mov
lahf
xor
xchg
mov
push
dec
in
pop
xchg
dec
mov
mov
sub
inc
lea
je
cmp
sub
push
dec
in
je
adc
push
and
sahf
sub
dec
and
add
cmp
jmp
sbb
sub
and
mov
xor
out
sub
popf
inc
and
mov
mov
scas
add
cwtl
push
mov
les
xor
fdiv
cli
add
jo
insl
and
sti
mov
mov
das
add
jp
xlat
das
adc
clc
add
sbb
test
mov
lods
jns
push
aam
ret
mov
push
add
cli
in
data16
and
pop
pop
int3
iret
xor
adc
pop
lds
mov
add
push
add
and
in
fbstp
add
decb
mov
sub
in
out
lea
xchg
in
lret
sbb
and
jmp
jge
push
add
mov
aam
fisubs
aam
fdivrl
fisubl
insb
pop
test
dec
pop
in
adc
sbb
add
add
and
mov
pop
pop
inc
push
subl
stos
loopne
pop
mov
cmc
xchg
add
into
push
ljmp
push
and
sbb
loop
pushf
and
pusha
insl
jmp
add
sub
or
add
adc
and
cmp
push
jle
sarl
or
daa
add
ret
mov
mov
push
push
add
aam
add
frstor
loop
loopne
dec
scas
or
push
push
add
gs
add
mov
hlt
insl
add
jne
push
dec
lret
pusha
add
xchg
into
iret
or
cmp
inc
pusha
movsb
mov
ret
or
imul
decb
mov
setbe
push
xor
mov
jle
push
mov
scas
mov
fsubs
jo
imul
pop
out
int3
pop
imul
shlb
push
jb
push
push
add
stc
mov
or
bound
xor
movsb
loopne
push
add
xchg
or
fnstsw
push
cmp
test
sub
mov
fisubs
lahf
adcb
lret
push
and
xor
add
pop
or
sbb
jp
rolb
cmp
push
sub
mov
cmpsl
out
jo
jbe
cs
push
adc
lods
mov
sbb
pop
out
mov
add
sahf
sub
out
add
gs
add
pop
popf
test
repnz
cmc
push
aaa
scas
add
push
add
add
dec
sub
shrb
add
int
lods
iret
push
lcall
fwait
iret
cmpsl
push
outsl
cltd
add
mov
sub
lahf
add
lods
into
fdivrs
sbb
outsl
into
mov
test
bound
fidivl
push
cmpl
sub
loopne
xor
daa
lods
addr16
sub
inc
cwtl
xor
in
cmc
loope
jmp
in
pop
cmpsl
fnsave
cmp
dec
push
mov
shll
sub
mov
push
fisubrl
mov
pop
cmp
int
loope
cli
andl
jo
ds
sahf
adc
xchg
sbb
sbb
push
cmp
idiv
adc
push
and
out
xor
push
pop
repz
dec
push
add
xlat
pop
lcall
jp
or
hlt
arpl
push
xchg
sub
test
add
or
outsb
popa
popa
ret
frstor
push
mov
pop
adc
fdivp
add
lea
jbe
mov
faddp
add
sbb
or
add
xchg
dec
imul
lods
sub
jb
insl
xchg
inc
lcall
add
jbe
ljmp
ret
jecxz
cltd
xchg
xchg
xchg
fs
nop
out
mov
popa
xchg
mov
jnp
addr16
addl
mov
out
dec
xchg
lahf
dec
lock
movsl
mov
push
xor
fldenv
repz
fucom
add
je
add
add
jno
push
popl
gs
jne
cmpsl
add
in
in
and
mov
adc
xchg
mov
ret
add
xor
push
cwtl
xchg
xchg
and
fcmovb
add
push
mov
leave
mov
inc
sub
add
es
addr16
dec
mov
add
pop
shl
icebp
pop
in
outsb
add
push
leave
movl
rolb
ss
divl
add
aam
push
jbe
pandn
gs
test
jne
add
mov
add
das
and
fwait
int3
aad
mov
addr16
bound
dec
sbb
pop
add
lea
subb
mov
inc
inc
fs
str
lods
orl
or
push
add
add
in
sbb
add
sbb
or
adc
add
xchg
cmpl
sbb
mov
xorb
inc
add
jle
dec
add
jecxz
inc
in
sarl
mov
xlat
shlb
inc
lret
pop
xor
lea
inc
mov
outsl
add
iret
or
popa
pusha
add
dec
mov
add
andb
lock
aad
pop
pop
add
call
out
test
enter
in
or
xchg
jecxz
insb
int
xchg
dec
xchg
xchg
and
inc
loop
out
inc
mov
add
push
dec
iret
rcr
mov
sbb
inc
xor
add
test
daa
jno
sbb
add
outsb
push
cmp
mov
dec
and
add
shr
dec
insl
cmp
jmp
shlb
xchg
inc
loope
out
cltd
repz
sub
pop
adc
jo
pushf
jl
inc
js
push
sbb
gs
pop
xchg
sub
ret
ja
sub
add
or
cwtl
add
outsb
cmpsl
push
pop
lods
dec
jns
or
cmc
je
adc
aam
fnstenv
inc
adc
inc
mov
in
mov
call
xchg
shrl
addb
or
pusha
shll
jl
or
fwait
divl
xchg
pop
dec
pop
test
or
jns
cs
cmp
sbb
incl
jge
in
fistpl
test
jmp
xchg
and
enter
cli
pop
jge
in
mov
je
dec
xchg
jae
dec
xor
in
mov
and
daa
sbb
lret
addr16
clc
sub
adc
cltd
xchg
mov
ja
or
push
les
mov
in
adc
cmp
mov
test
sbb
insl
sub
inc
movsl
pusha
daa
lea
test
adc
inc
cs
imul
adc
cs
push
jl
and
push
pop
movsb
xor
inc
bound
je
pop
imul
sbb
inc
iret
imul
les
nop
out
adc
lret
nop
ret
in
in
roll
popa
xor
rolb
cmp
jp
xchg
add
dec
jne
cmp
push
sbb
es
out
xchg
pop
xchg
or
imul
addr16
mov
int3
adc
iret
loop
in
or
adc
ret
xchg
inc
sbb
mov
add
or
push
jle
add
pop
push
stc
mov
insl
lods
in
adc
and
dec
sbb
popa
mov
ss
call
and
scas
ja
cld
nop
add
jge
adc
jne
pop
js
sub
cmp
inc
iret
mov
fiadds
ror
and
fld
add
pop
xor
mul
sub
test
mov
je
dec
cmpsl
jg
xchg
sub
sbb
scas
jl
mov
jmp
sarb
fldcw
mov
cmpsl
add
lea
test
xchg
stos
into
or
add
ss
add
in
cmp
cmp
loopne
movsb
xchg
jmp
add
or
push
sbb
cmp
sbb
mov
pop
loope
pop
mov
nop
inc
add
jnp
inc
cli
push
out
jno
jp
cmp
aas
test
pop
fs
ficompl
xor
mov
je
push
pop
imul
or
lea
test
cld
and
ret
xchg
sub
jno
orb
or
mov
subl
fbstp
js
sub
fbld
int
das
adc
fcoml
orl
inc
sub
cmpsb
movsl
mov
pop
adc
mov
mov
push
xchg
ss
jg
sbb
iret
xchg
loopne
sahf
sarb
inc
leave
lods
sbb
out
dec
dec
arpl
mov
rclb
fcom
mov
sbbl
subb
cwtl
dec
cmc
outsb
dec
mov
ljmp
lock
mov
adc
or
out
add
adc
test
add
test
and
or
and
dec
add
mov
adcb
into
lahf
loop
out
add
iret
in
loop
mov
add
pop
jmp
inc
lock
jp
movsb
cmp
jge
jns
xor
mov
pop
and
jmp
jbe
cli
mov
xchg
aam
adc
popa
mov
jmp
pop
xor
js
sbb
mov
nop
test
pop
or
nop
es
adc
mov
sbb
xchg
dec
jle
or
add
sbb
dec
add
rcl
xlat
cld
mov
push
ror
lret
int3
add
push
pop
rolb
loope
pusha
jle
mov
cmp
pop
sbbb
mov
dec
sub
shrb
std
loop
xchg
test
popf
ret
call
xor
out
iret
sbb
jle
push
shlb
ret
imul
add
mov
ret
leave
xor
out
xor
jle
test
cmpsl
pop
iret
sbb
and
iret
jae
adc
ja
sub
inc
filds
jp
adc
mov
lods
jb
pop
push
lock
mov
sbb
testl
adc
test
test
mov
cmp
cmp
notb
add
call
jns
jno
movsb
insb
push
daa
popl
aaa
xor
lods
sbb
xchg
ret
sub
inc
icebp
adc
add
and
mov
sarl
es
xor
fimuls
add
add
dec
add
adc
push
mov
adc
push
push
movsb
daa
pop
add
inc
sarb
mov
xchg
or
mov
in
scas
and
or
add
or
sbb
xor
jmp
cmp
dec
subb
cwtl
and
inc
and
jmp
jmp
aas
test
jmp
sbb
into
push
fisubl
test
pusha
daa
rcrl
dec
mov
jecxz
sbb
add
jnp
mov
sbb
add
ret
loop
push
and
ret
mov
push
xor
push
ss
aas
aaa
sub
int3
and
btc
lods
and
xchg
and
xor
cmp
out
movsb
ljmp
xchg
movsb
sahf
es
lods
imul
mov
add
add
push
mov
stos
inc
pop
fnsave
insl
ret
pop
push
push
mov
and
adc
shlb
add
ret
xchg
mull
js
or
inc
hlt
push
cmp
mov
inc
or
aas
sub
push
sahf
sbb
ret
mov
outsb
scas
inc
imul
cmp
or
sahf
dec
and
push
fldcw
jg
sbb
jae
pop
push
cmp
push
cltd
ja
adc
pushf
mov
push
into
push
mov
movl
pop
das
dec
and
sub
dec
or
inc
scas
lret
or
xor
pop
imul
push
inc
test
push
pop
mov
test
pusha
fdiv
into
add
andl
cmp
ffreep
jns
add
loope
jns
imul
jge
testl
das
loopne
mov
insb
insl
jmp
ss
leave
out
ja
jns
test
dec
dec
mov
xchg
imul
xor
std
adc
pop
ret
sti
sbbl
js
les
xor
loope
dec
jns
addr16
inc
adc
loopne
cmpsl
in
push
sbb
jo
pop
clc
adc
shll
pop
js
call
push
push
sub
xchg
sub
xchg
or
push
inc
or
xchg
inc
or
push
add
add
and
movsb
fidivs
and
pop
mov
aam
mov
mov
sub
scas
stc
jbe
bound
sub
push
rclb
lret
pop
shlb
mov
imul
adc
dec
ret
add
je
mov
lcall
ss
push
sbbb
jge
cmpsb
mov
push
into
add
sub
loop
insl
jge
jmp
cltd
clc
pop
jecxz
sub
adc
push
sub
add
xchg
inc
mov
icebp
movsl
ss
int
dec
sub
outsl
call
push
dec
add
push
push
mov
add
iret
lret
pop
stos
mov
addr16
int
insl
fmull
ret
jmp
dec
sbb
mov
mov
outsb
call
sbb
dec
in
add
sbb
popa
repnz
and
push
pop
cmp
call
movsl
adc
jo
jg
sbb
add
add
mov
das
jle
adc
inc
xor
add
jo
in
and
sbb
mov
out
out
js
xor
inc
std
dec
sub
xor
sbb
fidivrs
mov
jp
mov
int3
xchg
dec
pop
inc
dec
bnd
aaa
add
inc
jp
sub
fcomps
add
cmp
or
xor
sub
sbb
sbb
xchg
ret
subl
cld
scas
mov
fisubrl
jp
mov
inc
dec
subl
and
sbb
and
mov
mov
pop
xor
loop
lods
popf
cmc
push
sti
and
in
arpl
arpl
dec
sbb
xchg
add
adc
mov
mov
mov
sarb
cs
jl
es
xchg
in
test
mov
xchg
mov
jns
int
cltd
sbb
add
pusha
daa
mov
iret
ret
add
ds
sbb
lcall
cltd
mov
pand
test
jno
loope
es
nop
out
jecxz
loope
mov
inc
sbb
insl
imull
test
andl
jno
cli
add
or
movsb
leave
mov
mov
push
imul
stos
and
pop
xor
movsl
cltd
mov
rclb
sldt
outsb
cmp
cs
xlat
ret
mov
push
xor
push
adcb
inc
add
repz
sbb
pop
xbegin
add
aam
jno
pop
pop
inc
dec
imul
xchg
add
cltd
iret
lds
pop
dec
sbb
jle
addr16
mov
sub
mov
mov
pop
popa
jge
push
inc
fcmovnu
lods
jno
add
lret
daa
mov
frstor
adc
xchg
push
sub
mov
es
rcll
cmp
test
es
sub
rcll
aad
xchg
sub
xchg
stc
repz
imul
pusha
rorb
dec
cmc
jno
cmc
add
ljmp
and
inc
lcall
icebp
lcall
adc
popa
jle
xchg
xor
push
add
sbb
lods
outsb
or
xor
sbb
pop
outsl
mov
in
jp
xchg
js
ret
ret
lea
mov
lds
jb
adc
mov
jno
jb
dec
stc
xchg
jb
movsb
test
adc
cmp
push
adc
arpl
incb
out
jo
push
shlb
mov
outsl
and
adcb
jecxz
sub
xchg
mov
insl
das
add
push
adc
push
mov
add
xor
sub
cmp
dec
test
lds
adc
mov
in
push
daa
cmp
scas
push
ds
test
push
lcall
cmp
sbb
or
pandn
pop
andb
pushf
and
cmp
loopne
lret
test
xor
and
js
jmp
sbb
xor
sbb
add
sbb
jae
stos
aaa
aas
jge
sbb
test
add
leave
pop
test
clc
add
xchg
aad
push
dec
xor
inc
dec
pop
int
or
lds
test
inc
cltd
fcomip
insl
stos
imul
cmc
fldt
add
lock
mov
adc
fdivs
movsb
jno
mov
aam
mov
xor
lock
xor
sub
fld
push
mov
ret
or
sub
xor
dec
insl
inc
lahf
cmpsl
dec
mov
sub
das
jmp
jp
daa
push
add
push
insb
movsb
pop
mov
and
cmp
cmc
loop
mov
jge
jb
jl
cld
sbb
mov
sub
cmp
mov
sbb
sub
lahf
outsl
jle
daa
adc
dec
inc
or
stos
add
jp
mov
or
mov
lods
dec
sbb
ret
inc
mov
or
test
movsl
sub
fldcw
dec
inc
repnz
call
ds
sub
cs
ds
and
jmp
ds
mov
push
test
mov
sub
fmull
or
lcall
adc
cmp
mov
ficoms
adc
dec
adc
add
loop
and
mov
sub
sbb
mov
sbb
mov
movsb
sub
adc
lods
je
imulb
push
pop
in
dec
flds
push
xor
add
movzwl
movsb
inc
push
notl
dec
rorl
pop
pop
shrl
or
add
adc
inc
dec
dec
xor
pushf
daa
jno
push
mov
das
outsb
fstpt
addb
in
push
es
mov
ror
ret
mov
jg
insb
push
xor
loope
out
pop
addb
cltd
pop
in
int3
add
fdivl
sub
mov
das
stos
xor
inc
push
mov
or
push
out
fsubr
cmp
stos
sub
xor
add
sub
mov
add
ret
mov
pop
dec
loopne
repz
inc
or
push
jl
sbb
test
mov
xor
in
ja
ds
fsubs
imul
mov
push
add
notl
push
pop
or
pop
out
push
loopne
mov
outsb
fisubl
and
xor
mov
jbe
mull
lea
sbb
sub
orl
cmp
dec
rcrl
test
iret
or
fdivs
sbb
sbb
sub
aas
mov
imul
add
xor
lahf
push
fiadds
movsb
insb
sub
or
es
pushf
mov
jge
inc
pop
push
leave
mov
dec
movb
out
daa
or
int3
xor
jecxz
xlat
jecxz
loopne
jo
cmp
pop
add
cmp
movsb
iret
ds
ficoms
imul
leave
addl
loope
and
lock
push
test
lods
add
jl
enter
push
or
imul
scas
add
jg
jmp
sub
and
pop
bound
xor
sub
xchg
pop
clc
xorl
fs
lods
xchg
add
lock
xor
inc
loopne
push
mov
fwait
gs
lahf
stos
testb
movsb
sti
mov
sahf
jmp
enter
cmp
dec
add
or
in
add
enter
shrl
test
in
sbb
cmp
ljmp
jge
loopne
push
adc
xor
inc
dec
nop
mov
add
ret
mov
push
std
rorl
das
jo
int3
jb
aaa
dec
adc
adc
repz
sbb
or
add
push
je
add
push
test
lret
add
add
mov
cmp
stc
mov
dec
inc
fcoms
mov
arpl
sub
push
pop
movsl
mov
adc
js
dec
push
test
add
mov
cmp
mov
jmp
loop
sbb
xor
push
pop
sti
inc
add
xchg
shlb
mov
add
dec
cs
sbb
add
adc
xchg
jp
adc
add
dec
xchg
push
stc
inc
in
enter
add
xchg
push
and
inc
mov
xor
jne
cmp
cli
fdivs
adcb
sub
jo
insl
jmp
fisubs
jbe
mov
sub
add
mov
push
inc
pop
sub
or
mov
push
mov
cmp
adc
addl
push
xchg
dec
add
pop
xchg
adc
sub
inc
cmp
shll
adc
xor
sub
xchg
pushf
je
sti
faddl
push
outsl
js
sbb
xchg
cmp
jnp
adc
nop
xor
cmp
mov
gs
mov
pop
das
cmc
and
gs
mov
sub
or
sub
orl
daa
fisubs
mov
ss
xor
xchg
xor
push
inc
jb
psraw
xchg
push
cmpsl
mov
call
aas
cmpl
sbb
imul
in
les
loopne
mov
mov
icebp
pop
sub
inc
inc
dec
notl
add
test
mov
into
pop
adc
ret
push
add
cmp
or
or
push
outsb
jmp
divl
xlat
stos
scas
jns
pop
test
fs
mov
idivb
xor
xor
add
cmp
lods
xchg
jmp
loope
fisttps
test
aam
jne
sub
insb
test
mov
mov
jl
ss
sahf
add
imul
mov
pop
ret
mov
or
add
xor
and
push
xchg
sub
mov
cmp
jge
cli
adc
push
sub
mov
ss
push
incl
scas
dec
movsb
adc
dec
jo
out
cmpb
dec
push
iret
out
popf
jp
clc
dec
lods
popa
aas
fbstp
adc
adc
jno
je
xchg
pop
test
mov
fisttps
cs
mov
jnp
xor
push
mov
push
mov
pusha
test
jp
push
dec
or
shll
mov
or
cmpsl
sbb
cmpsb
lret
jbe
test
adc
aas
pop
dec
inc
or
mov
add
xchg
mov
push
les
adc
aad
out
leave
ret
psubsw
repz
xchg
lock
add
or
xchg
aas
lret
sub
jns
jns
xchg
lods
mov
sub
add
sbb
xchg
jge
rcrb
pop
hlt
sbb
scas
and
jne
inc
in
shll
mov
iret
jno
pusha
pop
mov
add
mov
cmpsl
andb
jecxz
mov
pusha
mov
adcl
repz
enter
push
sub
add
enter
push
sub
xchg
repnz
outsb
cs
dec
shlb
add
push
mov
xchg
and
sbb
ds
test
cltd
pop
xchg
js
inc
inc
inc
lea
add
test
adc
add
pop
js
cmp
inc
cmpxchg
cmpsb
vpmaxub
and
cmp
pop
or
cs
bound
xchg
add
add
sbb
inc
xor
scas
loope
inc
jecxz
out
rsqrtps
cwtl
mov
push
scas
mov
fnstenvs
btr
pop
loopne
add
pop
push
pop
and
mov
lods
dec
insl
add
inc
fxch
and
push
mov
inc
and
sbb
lock
add
sbb
aaa
or
sub
movsl
dec
xchg
inc
pusha
aad
pushl
stc
sub
cltd
pop
dec
ljmp
shll
mov
dec
movl
mov
aas
dec
cmp
cli
ret
and
repz
ljmp
or
sbb
and
pop
ret
xchg
pop
mov
je
into
xlat
mov
jmp
movsb
sub
sub
or
adc
fistpll
jne
inc
mov
lds
dec
leave
mov
jb
adc
or
sbb
mov
lds
adc
fdivs
test
push
fldcw
icebp
mov
mov
push
mov
mov
jmp
sbb
bound
sbb
cs
sti
lea
aad
std
mov
add
fisubrs
cmp
cltd
in
sahf
xor
jmp
jge
or
fs
xchg
adcl
test
lods
daa
mov
mov
sbb
or
xor
add
add
fwait
pop
fwait
cwtl
add
and
pop
sub
cmp
mov
inc
js
aad
push
scas
mov
iret
push
imul
and
xchg
out
in
test
ss
outsl
pop
xchg
loopne
repz
outsl
xchg
mov
enter
adc
fimull
and
xor
jae
test
sbb
pop
aas
add
add
sub
je
push
je
add
and
lods
rcll
sbbl
adc
sbb
cmp
fwait
es
pop
call
pop
cmp
add
cmp
or
dec
inc
cli
dec
bound
scas
into
xlat
add
mov
dec
pusha
mov
prefetch
xchg
ret
inc
movsb
pop
dec
notl
add
loopne
xchg
inc
adc
divl
push
mov
add
inc
inc
jle
arpl
outsb
push
cmpsb
pop
adc
or
ret
pop
cmp
iret
aaa
das
test
pop
decb
add
inc
adc
inc
loop
push
mov
mov
sarb
imul
rorb
add
adc
outsb
or
psubusb
push
push
adc
xchg
add
adc
xchg
mov
pop
loope
icebp
xchg
sbb
cmpsl
sbb
or
and
push
popa
es
sbb
sub
sub
fldz
ja
jo
push
psubusb
sbb
mov
sub
xchg
adc
test
sahf
int
or
icebp
adc
test
mov
add
adc
mov
test
sbbl
jb
cmpsl
pushf
aaa
add
mov
in
add
pop
push
pop
mov
leave
inc
sub
lods
scas
xchg
add
xchg
mov
out
and
push
data16
adc
xlat
pop
popf
roll
dec
or
mov
mov
js
jbe
dec
subps
xchg
test
jmp
insb
mov
push
push
sbb
in
inc
test
dec
jo
and
and
cld
fidivrl
bound
mov
mov
scas
push
mov
mov
jo
imul
cmp
push
pop
xchg
push
sub
lock
mov
xor
cld
add
in
add
adc
pop
fstp
fimuls
adc
sbb
or
push
fdivp
subb
xor
aam
ret
outsb
mov
adc
push
ret
sub
sub
adc
inc
bound
ret
lods
cltd
data16
sbb
sti
inc
test
leave
shl
fsubl
mov
stos
cltd
gs
shrb
in
mov
cwtl
sub
cmpsl
adc
or
xor
dec
or
shr
pop
push
adc
jp
dec
test
mov
sbb
pop
leave
shlb
sub
fwait
push
xchg
sbb
pop
nop
push
mov
mov
bound
into
dec
pushf
inc
mov
adcb
lret
fdivrs
mov
orb
cs
mov
mov
imul
add
jge
mov
or
adcb
cltd
xchg
cmp
add
adcl
cld
imul
add
lahf
pop
push
mov
add
cmpsb
sbb
orl
xchg
pop
add
stos
jnp
and
sub
xor
shll
sub
sarl
inc
jne
sti
icebp
or
dec
add
popf
adc
je
pop
add
jmp
imul
fcmovnb
js
popa
movsl
sub
shll
rclb
dec
ret
and
add
into
and
add
int
pop
push
lret
adcb
adc
sahf
shll
cmpl
push
mov
and
jmp
shrb
dec
inc
adc
lret
and
test
cmp
mov
shrl
xchg
pop
adc
add
add
setne
add
pop
movsl
or
nop
adcl
fxch
inc
sbb
or
pop
push
push
pop
mov
push
cmc
das
jns
add
pop
das
and
lea
xorb
ljmp
jo
sbb
pop
movsb
dec
cwtl
lods
or
add
mov
inc
es
lea
pop
sti
fiaddl
pusha
jo
movsl
sub
rcll
pop
pop
xor
sbb
inc
pop
or
sub
ja
xchg
add
test
pop
inc
clc
mov
in
bound
jp
andl
add
and
or
rclb
test
cmpsb
loope
mov
movsb
dec
jmp
mov
or
leave
js
loope
pop
mov
add
jp
sarb
mov
pop
pop
fldt
mov
orb
and
sahf
fnstcw
add
jecxz
nop
imul
sarb
sbb
shufps
and
pop
lret
xor
dec
inc
ret
add
cmp
sti
sub
xchg
subl
xchg
sub
and
loop
orl
cmp
es
divl
dec
ljmp
jbe
xchg
test
jo
mov
add
std
xchg
mov
push
xchg
rcll
pusha
add
sbb
mov
and
mov
xor
inc
fldcw
rcrl
mov
xor
cmp
mov
xchg
jl
push
lahf
push
sub
les
mov
xchg
cmp
lock
addb
push
xor
fwait
shll
rcrb
cld
fsubs
outsl
fisttps
or
inc
push
jns
arpl
jo
push
inc
iret
int3
add
mov
or
or
cli
pop
mov
and
dec
js
push
jmp
dec
add
xchg
orl
dec
sbb
pop
mov
jne
cmp
movsb
aas
sti
jbe
cmpb
call
pop
adc
popf
adc
sbb
dec
out
mov
inc
out
test
addl
out
sbb
sub
sti
lret
pop
bound
jmp
or
xor
sub
cmpb
fwait
sbb
das
sbb
push
pop
cmp
cmp
mov
xlat
ret
test
and
loope
dec
scas
xor
fnstcw
add
push
negl
lret
sub
leave
test
inc
sahf
ret
lods
lock
and
mov
call
push
inc
mov
cmpsb
orl
and
aad
adc
add
push
add
xchg
aas
out
gs
adc
shlb
adc
packsswb
sbb
and
adc
pop
pop
movsb
mov
xlat
test
insl
cmp
sub
clc
and
iret
xchg
dec
or
inc
xor
or
loop
fisttpll
dec
imul
sbb
inc
adc
push
adc
mov
leave
add
cli
out
adc
std
stos
adc
add
jmp
push
mov
add
test
stos
movb
push
daa
push
jnp
jne
push
out
iret
pusha
int3
les
adc
orb
mov
pop
push
ja
fcoml
mov
sub
sub
loop
shrl
cmpsb
in
dec
jmp
xor
test
dec
cmp
pop
fisubrl
movsl
adc
ret
adc
push
mov
sub
scas
ja
rol
xchg
cmp
std
mov
lahf
pusha
imul
sbb
sbb
iret
icebp
int
xchg
pop
sub
sbb
push
sahf
cwtl
sbb
dec
xor
pop
add
and
inc
and
les
pextrw
and
inc
add
sub
xor
inc
faddl
loopne
das
pop
pop
clc
and
sbb
sub
pop
mov
add
fnstsw
or
frstor
push
stos
stos
xlat
push
lea
nop
mov
dec
aam
pop
lods
dec
jo
add
pusha
popa
mov
xor
into
int3
test
sub
mov
pop
add
cmp
cmpsb
test
cltd
xorb
add
pop
test
fistps
and
ss
inc
add
sub
dec
cmp
add
pushf
mov
sbb
imul
cmpsl
mov
ss
mov
dec
lods
stos
dec
orps
pop
insb
fists
out
inc
mov
scas
lods
push
dec
insl
shll
cmc
outsl
mov
jb
cmp
arpl
test
mov
sarb
fildl
mov
sahf
xlat
push
mov
mov
sub
cmp
cmp
outsl
push
push
sbb
fmull
xor
aam
xchg
test
push
inc
push
jo
je
fsubs
insb
nop
and
test
adc
push
mov
lock
in
pop
insl
pop
inc
lea
sub
dec
stc
popa
adc
mov
lea
adcl
add
adc
out
push
insb
jp
popa
iret
pop
and
mov
xchg
xchg
or
test
xchg
mov
mov
adcl
sahf
push
lcall
or
clc
adc
cmp
fdivp
inc
add
iret
cmpsb
add
call
out
adc
insl
fs
sbbb
and
jmp
into
lea
cmp
cwtl
xchg
jne
aas
outsb
add
in
stos
ret
and
mov
int3
lods
xchg
push
ret
movsl
int
outsl
dec
cmp
push
xchg
sbb
jecxz
je
shl
adc
cmp
mov
xor
add
push
mov
and
adc
adc
mov
call
adc
popa
add
jnp
ljmp
std
cmpsb
sbbb
insb
mov
sbb
daa
xchg
xor
inc
les
mov
dec
popa
cmp
xorl
in
sarl
jne
inc
repnz
in
and
mov
push
stos
daa
dec
cmp
xor
jns
aad
shll
xchg
mov
jl
es
ja
inc
out
xchg
add
ss
fdivs
aad
inc
ror
out
loop
in
shll
lret
test
mov
fsubrs
outsb
fxch
iret
ds
jp
jp
repz
fstpt
mov
add
push
mov
mov
sbb
fdivl
mov
fnstsw
pusha
fldl
fadds
fisubs
push
mov
iret
negb
cmpl
je
pop
aas
inc
insl
roll
pop
inc
pop
shll
add
push
rolb
or
sbb
adc
lret
dec
cmp
cs
fisubrl
vunpckhps
inc
mov
mov
inc
lret
cvtps2pd
xor
pop
rolb
sbb
popa
enter
cmp
icebp
pop
insl
push
pop
or
aas
adc
or
sbb
or
add
jmp
jp
mul
ds
add
jl
jns
leave
je
add
popa
inc
dec
add
and
sarb
xor
sbb
imul
loope
enter
jo
xorb
pop
and
addr16
add
leave
sahf
insb
dec
aas
sbb
fs
pop
cmp
addr16
mov
mov
pusha
addr16
xchg
pop
or
iret
add
dec
lods
xor
repz
fadds
mov
inc
es
add
add
or
push
mov
xor
push
cmp
out
jne
cmpsl
xor
adc
dec
loopne
add
cmp
call
es
les
inc
inc
sbb
pop
push
rcll
push
aad
xchg
xchg
sahf
push
mov
sbb
xchg
jo
jnp
dec
adc
loopne
stos
sahf
and
aad
pop
fs
insb
add
pop
sub
xor
lcall
inc
into
and
push
in
int3
lret
add
rcll
imul
mov
insl
push
sub
ja
and
mov
and
icebp
add
add
add
es
or
sbb
ds
lods
inc
pusha
xor
mov
push
dec
cli
call
test
jp
movsl
cmp
hlt
add
ljmp
push
mov
or
mov
fnsave
inc
lret
pop
cwtl
rcrb
dec
jmp
xchg
scas
insb
xchg
sub
push
movsl
cmc
cld
pop
add
push
aas
adc
in
xor
sub
loopne
jl
aaa
inc
loop
push
push
pop
push
and
bound
rolb
test
and
jg
icebp
sub
daa
lods
iret
aad
fneni(8087
pop
mov
xchg
xchg
addr16
cmp
cmp
or
xor
aam
xor
add
xor
push
adc
adc
push
pop
daa
movsl
and
add
out
mov
mov
sbb
xchg
or
mov
jmp
rclb
stc
and
dec
or
pop
push
sarb
mov
xor
int
sbb
fcomp
dec
xchg
mov
push
dec
add
rorl
cmp
ret
arpl
insb
mov
pop
dec
sub
pop
rcrl
mov
xchg
cmp
insb
aam
test
and
push
add
adc
stos
scas
push
sbb
orb
xor
pop
xchg
or
adc
fists
xchg
push
adc
and
push
dec
lods
xor
push
jno
xchg
rcrl
or
pop
shlb
imul
cmp
mov
enter
add
adc
adc
and
adc
idiv
add
aaa
and
fsub
out
push
sub
out
jbe
dec
push
inc
sbb
aaa
daa
push
adc
sbb
dec
cwtl
jecxz
sbb
sti
rcrb
sub
xor
jp
or
test
dec
push
xchg
add
add
push
call
xchg
mov
cli
movsb
and
arpl
loop
dec
mov
adc
and
loope
aam
loope
xor
sub
push
loop
jo
sbb
mov
shr
lret
cmpsb
add
pusha
mov
pop
stos
jl
mov
sub
rcll
test
mov
push
xor
and
sub
xor
addb
and
push
andl
sbb
pop
scas
add
jmp
clc
xchg
ds
xchg
adc
xor
sbbl
add
add
pop
arpl
cs
fisubs
mov
xor
clc
or
or
pop
es
cmp
cmpsl
lea
xchg
andl
push
ret
mov
or
push
adc
push
cmp
inc
cmp
into
push
pop
add
inc
or
pop
dec
das
sub
in
jge
and
pop
mov
mov
dec
sub
sbb
mov
add
dec
xor
dec
sub
and
cs
push
ss
push
das
insl
imul
and
xor
fsubrl
sahf
pusha
mov
pop
aam
mov
cmp
mov
or
ds
xor
rol
cwtl
les
cmp
pushf
dec
or
pop
fsubrs
cmp
out
mov
popa
scas
sub
or
sub
shrl
adc
or
lea
and
adc
in
sbb
popf
js
test
insl
dec
jl
nop
jb
shrl
xor
or
aam
sbb
mov
fdivs
cwtl
jmp
bnd
cltd
jo
adc
xchg
sarb
and
test
push
mov
add
out
cmp
inc
xor
mov
test
xchg
aaa
js
pop
add
sub
jns
cmp
test
loopne
mov
jl
jnp
mov
jmp
add
jnp
sbb
add
sub
xchg
dec
sbb
cltd
inc
fimull
jb
inc
ss
fidivrl
dec
cmp
pop
cmp
icebp
xchg
fs
mov
add
mov
pop
sub
pop
in
inc
sub
movsl
add
cli
imul
rcrl
mul
cli
imul
xchg
or
je
adc
lods
mov
jo
and
mov
mov
add
nop
sbb
pop
push
out
fs
dec
cmp
dec
insb
or
or
aaa
loope
or
adc
inc
popf
sarb
inc
ret
adc
ss
sbbb
iret
push
mov
xorl
sbb
mov
xor
xchg
adc
jmp
add
pop
mov
adc
mov
add
clc
add
loope
idivl
enter
cmp
stos
icebp
ja
push
int3
es
sti
adc
mov
sbb
push
imul
out
inc
flds
and
stos
jno
das
or
das
inc
jge
cmp
cli
aaa
mov
pop
mov
lds
cmp
pop
push
mov
bound
sbb
ss
sub
sbb
shlb
sbb
movsb
adc
sbb
push
imul
xor
jmp
stos
push
pop
in
or
xchg
and
add
dec
scas
mov
dec
cmp
cmp
add
es
out
cmpsl
add
lea
jo
call
dec
add
xor
mov
add
cmp
inc
das
push
push
stos
dec
inc
test
xor
push
xrelease
cmp
sar
shlb
dec
mov
lds
addr16
or
lret
push
loope
and
into
pop
loop
jmp
xor
repz
push
xor
daa
lds
stos
and
inc
mov
sbb
insb
add
push
xorl
jmp
inc
insb
jecxz
sub
loopne
dec
pop
cmp
adc
sbb
jg
lds
sbb
les
push
jg
push
xlat
out
push
push
movsb
jmp
sar
xchg
gs
xchg
icebp
inc
add
rorl
stc
lods
fldt
fiadds
dec
dec
cmp
cmp
adc
loope
repz
xor
xchg
pop
jmp
xchg
sub
outsb
adc
adc
push
mov
sub
ds
daa
mov
xlat
inc
jg
pop
mov
add
scas
inc
xor
adc
inc
jp
and
inc
stc
lea
pop
lsl
or
sbb
jbe
adcb
hlt
sub
hlt
mov
xchg
pop
clc
sub
rcll
imul
xchg
nop
push
aad
movsl
rclb
dec
cmp
gs
test
or
and
jl
adc
mov
push
push
jae
movsb
push
cld
test
jp
sbbb
inc
xchg
add
popa
mov
daa
cmp
inc
ljmp
test
adc
or
aaa
cmp
or
xchg
cli
out
pop
sbb
mov
popa
add
jle
sbb
adc
inc
dec
adc
xchg
xchg
inc
xchg
or
stos
das
push
mov
mov
and
sarl
push
loopne
cmp
dec
push
xchg
jae
cmpsb
or
inc
push
popf
loopne
fisubrs
shlb
iret
xor
jge
into
lcall
js
outsl
nop
xor
add
add
jmp
mov
lods
push
int
popa
hlt
xchg
push
push
xor
cmpl
pop
fs
inc
sarl
mov
jno
jne
std
das
cld
mov
mov
aaa
sbb
ret
test
cmpsl
fs
arpl
cmp
fistps
xor
mull
adc
inc
add
mov
add
inc
jnp
or
mov
dec
push
insb
bound
loop
gs
adcb
and
push
pop
adc
pop
pop
pop
lcall
mov
xchg
jge
gs
jo
mov
adc
mov
mov
lock
xor
and
jmp
or
shlb
add
bound
add
and
lahf
clc
xor
dec
movsb
mov
lods
leave
subb
sbb
pop
sub
es
or
xchg
jle
test
sbb
sbb
xchg
pop
sub
mov
xor
mov
and
mov
push
out
push
jne
lcall
imul
outsl
loope
adc
cmp
lods
jne
mov
movsl
fidivrs
mov
sub
ret
jne
and
jo
int3
adc
or
lret
mov
xor
outsl
lahf
test
ret
xchg
test
or
cwtl
or
fadds
dec
xor
or
pusha
nop
mov
mov
jp
loope
push
sahf
psllw
popa
dec
adc
daa
pusha
inc
lret
ret
inc
and
mov
test
push
mov
scas
push
cmp
mov
shll
sub
jno
mov
pop
nop
xlat
jae
testb
push
adc
cmp
mov
xchg
add
cld
mov
add
inc
sub
sbb
jl
cmp
and
int3
int3
mov
dec
js
pop
sbb
cmpsb
insl
mov
bound
xor
roll
sub
jle
or
mov
adc
mov
add
inc
and
inc
cmpsb
leave
lahf
jle
stos
push
add
jns
roll
rorb
and
jmp
and
cmpsl
dec
es
push
daa
adc
or
mov
lods
xor
out
fimull
xchg
jbe
inc
add
and
push
es
in
lret
dec
or
cmp
push
outsl
cmp
mov
jp
dec
into
inc
aaa
sbb
sub
je
push
movsb
test
in
test
ret
adc
ja
daa
xchg
push
or
insb
add
mov
xchg
lds
scas
ret
fldl
mov
sbb
rclb
mov
lret
pop
xor
sbb
cwtl
cmp
loope
push
inc
cmp
data16
pop
out
mov
ret
mov
xor
sub
pop
movsb
xor
mov
xchg
mov
pop
loope
loopne
push
and
and
testl
cld
sub
add
jns
sbb
fisubl
lods
ss
push
push
test
pop
lret
mov
add
mov
popf
int
jg
mov
adc
test
pop
insl
inc
sahf
movsl
clc
lods
or
jno
inc
xchg
jns
push
dec
aam
xchg
push
es
push
cwtl
xchg
add
into
add
cmpsb
flds
xlat
mov
mov
sub
out
test
test
test
cmp
xor
orb
cmp
push
mov
je
jge
es
mov
rorb
imul
imul
lods
gs
cltd
out
out
shl
lret
mov
fildl
adc
xor
cwtl
and
dec
cmp
or
js
scas
push
dec
insl
adc
pusha
push
adc
add
out
pop
andb
ret
xorl
push
or
sub
cmc
adc
idivl
mov
jbe
popf
mov
push
or
stos
and
adc
cmp
das
inc
mov
inc
push
scas
sbb
inc
arpl
mov
adc
lret
dec
sub
inc
adc
or
dec
aam
es
sbb
mov
mov
inc
in
addr16
imul
push
mov
push
inc
xlat
inc
pushf
cs
das
pusha
add
subl
cs
adcb
dec
pop
loope
incb
pop
shll
dec
and
and
dec
loop
jle
addb
pop
gs
adc
inc
jbe
inc
dec
dec
divb
jns
sub
push
xchg
movb
je
decl
pusha
lds
push
and
xchg
xchg
cs
imul
add
add
dec
sbb
andb
jmp
sbb
out
aam
fsubrs
stos
pop
cmc
and
add
cmp
xchg
inc
jl
loope
insl
and
mov
ret
cs
cvtpi2ps
adc
test
cmp
sbb
mov
pop
push
mov
lods
jmp
test
pop
cmp
ficoms
jmp
dec
jmp
cmp
add
add
fwait
imul
cltd
inc
mov
addb
cmp
xchg
movsb
es
pop
pop
sub
loope
mov
push
jp
cli
xor
push
jge
js
fdivrs
loope
rcll
jge
rclb
or
push
es
jne
jg
push
add
roll
push
mov
xchg
jle
fwait
insb
jb
adc
je
adc
xchg
jmp
in
add
adc
ja
lcall
aad
fildl
ret
jmp
shlb
xor
mov
popa
icebp
sbb
sub
test
test
xor
push
add
test
mov
sbb
inc
das
popf
add
xchg
rorb
dec
jmp
sub
subl
add
ja
push
xchg
aas
mov
pop
jbe
pop
sub
orl
popf
test
loope
sub
and
out
xchg
fwait
adc
ret
incl
mov
push
xor
pop
xor
add
nop
ret
jne
pop
stos
mov
cli
insl
jl
notl
or
push
mov
fwait
jg
outsb
das
in
xor
stos
ret
cmp
lcall
out
pop
sub
push
pop
into
rcrl
subb
and
pop
aaa
outsb
insb
into
push
test
push
add
das
and
dec
cmp
jae
jne
add
sub
aaa
xchg
xchg
dec
xchg
outsl
mov
xor
dec
test
or
sub
mov
iret
mov
sub
lods
inc
mov
push
dec
ficoml
adc
adc
dec
add
mov
and
lcall
lds
pop
xchg
add
test
fwait
jge
add
mov
inc
sub
insl
mov
fwait
int
pop
rcrl
push
icebp
inc
test
leave
shlb
mov
pop
das
scas
or
aaa
popl
test
push
and
lods
lret
or
addb
es
pop
sub
push
pop
add
scas
pop
nop
or
adc
inc
stc
push
jl
mov
scas
lahf
int3
push
and
mov
xchg
inc
cmp
test
xchg
daa
clc
cmp
test
jge
or
and
jle
or
jg
sbb
lret
mov
push
pop
imul
je
icebp
addb
faddl
icebp
mov
jl
lea
mov
pop
repnz
push
mov
sbb
loope
jmp
inc
jecxz
js
ss
imul
pop
jecxz
fistpl
lods
cmp
add
push
mov
jle
lea
or
pop
pusha
mov
jns
push
shlb
dec
sub
add
xchg
or
jno
cmp
icebp
inc
ja
flds
ret
xchg
insl
add
xlat
subl
xchg
outsl
test
insb
and
mov
mov
or
push
dec
test
scas
mov
pop
pop
repnz
jae
lcall
sbb
cmovs
insb
cmp
jbe
xchg
das
arpl
jno
test
hlt
sbb
jo
inc
mov
xchg
jb
push
add
es
push
mov
addb
ljmp
das
and
jl
add
scas
sbb
cmp
int3
pop
push
popa
les
adc
sbb
aam
pop
mov
cmc
mov
idivl
and
lea
rol
cmp
insl
cmp
popf
add
jmp
push
add
cmp
sbb
adc
pusha
adc
inc
clc
mov
inc
add
push
sbb
cmc
popa
adc
mov
sti
push
add
xchg
frstor
leave
call
movsb
xchg
and
loope
jne
and
or
pop
sub
call
jge
dec
cmp
cmp
fisubs
mov
sub
mov
add
outsb
test
cmp
mov
das
sub
arpl
mov
mov
sub
dec
sbb
ljmp
iret
push
inc
inc
mov
adc
ret
addl
cmp
test
xlat
push
lock
loop
outsb
pusha
sbb
mov
cmp
or
cmp
jle
push
jle
pop
xchg
add
add
fadds
pop
insw
aam
aas
fs
mov
pop
rorb
out
iret
out
mov
aam
iret
fsts
dec
aas
lea
jns
adc
mov
fcoml
mov
lahf
ljmp
xchg
jp
in
mov
and
fists
rcr
mov
pop
pop
sbb
sbb
pop
adc
mov
mov
leave
arpl
das
mov
mov
subl
push
adc
inc
mov
sbb
ret
sbbl
mov
pop
inc
test
dec
lea
jmp
mov
xchg
or
imul
inc
push
fsubl
sbb
je
push
dec
rolb
xlat
andl
in
inc
lea
add
aad
stos
push
pop
pop
inc
aaa
ja
xchg
adc
adc
xchg
or
lret
mov
ds
pop
pop
adc
pop
test
enter
fildl
insb
adc
int
jo
movsb
aam
outsl
rol
sarl
mov
or
aas
lea
mov
inc
adc
mov
in
mov
mov
sbb
mov
pusha
xlat
lods
test
popa
mov
test
les
ja
cmpl
pushf
js
cmp
or
and
js
daa
test
adc
aad
test
or
xor
sbb
movsb
ret
in
adc
xchg
sbb
jl
xchg
loopne
and
adc
data16
sub
lret
add
shlb
lahf
fisttps
test
sbb
xchg
xor
cwtl
adc
mov
cmp
icebp
in
adcl
pop
push
fbld
fisubs
mov
or
push
sahf
out
andb
mov
xchg
pusha
das
aad
push
iret
les
movsl
loope
inc
and
nop
inc
test
sub
mov
mov
xchg
sbb
imul
incl
add
movsb
sbb
sbb
andl
sarb
outsl
mov
sub
mov
push
adc
jg
scas
sbb
adc
push
sbb
stc
addb
bound
shlb
xchg
fisttpll
dec
sbb
push
fimull
bound
push
mov
mov
das
inc
xor
sbb
test
movsb
testl
loop
mov
mov
adc
or
or
stos
push
scas
lcall
mov
ret
push
ret
add
sbb
test
sbb
xor
push
rcr
shlb
mov
push
inc
loope
gs
daa
or
mov
add
dec
pop
add
xor
or
outsl
inc
mov
cmpsb
add
test
add
dec
js
daa
shll
jmp
icebp
xor
mov
dec
aaa
mov
loopne
lods
stos
mov
pop
cli
pop
push
jecxz
cmp
sbb
mov
mov
das
or
sbb
shlb
adc
sub
shlb
push
repz
ret
xor
daa
add
into
inc
jae
cmp
and
stc
sbb
and
addr16
dec
add
imul
or
and
loope
lea
mov
arpl
ret
cmp
add
bound
mov
pop
or
shl
ret
xor
sbb
iret
xchg
mov
sti
sbb
adc
adc
mov
pop
stc
and
add
icebp
adc
out
jle
mov
and
xor
and
mov
repnz
das
into
add
pop
mov
sub
xor
pusha
scas
xchg
jp
mov
adc
stos
addb
xor
push
aaa
xchg
aaa
in
jne
dec
add
pop
sbb
movhlps
sub
adc
flds
adc
rolb
out
sbb
xor
pop
popa
pop
es
xor
add
sbb
adc
adc
and
push
pop
sbb
pusha
inc
loopne
xor
addr16
mov
mov
shlb
loopne
mov
add
rorb
and
icebp
sbb
mov
cmpsl
gs
inc
sbb
push
in
cmpsb
mov
imull
rol
call
adc
and
ffreep
sub
aas
xor
add
mov
xchg
add
pop
fsubrl
loope
std
mov
sldt
xor
push
sbb
or
sub
imull
imul
adc
add
lds
cmp
sub
add
arpl
lods
mov
arpl
inc
stos
xchg
xor
adcb
jle
enter
mov
push
mov
test
jmp
fcoml
xor
xchg
sub
push
xor
push
movsl
loopne
or
cltd
mov
out
adc
icebp
add
dec
test
in
sbb
call
jl
mov
jno
mov
jmp
imul
and
pop
test
cmpsl
add
nop
adc
test
lret
arpl
rorl
pop
pop
lret
movsb
stos
dec
and
jo
sub
jns
lock
xchg
popl
lahf
stos
sub
jge
adc
jnp
mov
mov
mov
mov
lret
cwtl
inc
loope
sub
adc
adc
mov
jmp
mov
adcb
push
lea
icebp
mov
lret
or
dec
cmp
enter
dec
rcrb
loop
repnz
adc
jp
jecxz
mov
popf
and
inc
pusha
xor
sbb
mov
rorb
arpl
pop
sub
mov
jmp
cmpsl
jb
xor
movsl
xchg
add
mov
dec
mov
add
or
dec
push
arpl
add
rorb
sbb
pop
shl
mov
jne
dec
mov
pop
cmp
js
pushf
mov
add
rolb
xor
andl
and
fs
fldl
mov
push
test
xchg
pop
or
mov
push
loopne
pop
cmp
mov
jle
pop
cld
ret
dec
jge
mov
adc
in
add
scas
rcrl
inc
test
mov
stos
lea
aaa
mov
roll
cmpsb
add
xchg
f2xm1
ret
inc
adc
cmp
mov
in
push
push
push
xchg
push
push
add
fs
cmp
xchg
lcall
inc
loope
cld
inc
shrl
cld
fidivl
loopne
push
pop
mov
call
add
sbb
jo
insb
xor
outsl
insb
sbb
addb
enter
mov
adc
shll
daa
xchg
cwtl
xchg
orb
cmp
cs
and
add
pusha
cmp
inc
jno
out
jo
lds
cmpsl
jae
add
mov
pop
cmp
scas
aad
fndisi(8087
jno
jg
jo
cmp
sub
shll
testl
lret
cmp
sub
fsubl
pop
fdivl
and
sub
lods
inc
jmp
add
inc
mov
orl
mov
fstps
cli
decl
add
jecxz
push
popf
in
shrl
xchg
jmp
xor
outsl
rcll
add
adc
ss
test
lods
enter
lret
in
fmuls
jns,pt
and
sub
adc
sti
pushf
lea
imul
stc
idivl
add
int
roll
repz
andl
nop
push
jmp
dec
pop
dec
dec
stos
pop
or
sub
ret
mov
adcb
aad
inc
mov
mov
ljmp
aaa
andl
rolb
fisttpll
add
js
mov
stos
test
pop
add
push
lret
hlt
and
roll
pop
sub
jbe
adc
push
push
loope
push
or
pop
daa
pop
nop
and
inc
cmc
fisttpl
aas
or
inc
jbe
ficoms
subl
xchg
inc
sti
mov
orl
je
dec
ds
cmp
add
sub
imul
mov
fwait
jb
lea
mov
gs
push
mov
xlat
cltd
and
xor
adc
jmp
movsb
push
pusha
push
scas
fldenv
add
add
jmp
cli
aad
xchg
jmp
push
mov
pusha
and
jne
bound
jo
sbb
xorb
fbstp
es
and
popa
insl
je
cmp
daa
int
mov
inc
pop
or
lret
or
or
pop
dec
jae
pop
sbb
and
out
call
jne
pop
inc
xor
pop
or
cmovns
cmp
aam
push
add
sbb
arpl
ret
pusha
xor
mov
arpl
scas
mov
lds
pop
daa
popfw
rorb
das
dec
leave
cltd
aad
mov
push
jae
pop
jnp
movsb
sbb
imul
add
or
insb
xor
or
jo
xchg
sbb
sub
jo
fisubrl
mov
testl
sbb
or
pushf
loope
outsl
dec
push
xlat
xor
mov
out
push
add
stc
pop
andl
into
xchg
out
add
dec
daa
jns
and
adc
rorl
ss
loopne
or
sub
or
insl
cmp
adc
dec
ret
roll
mov
add
and
adc
daa
mov
inc
mov
dec
loopne
or
xlat
add
fldenv
dec
addr16
push
dec
pop
dec
in
lcall
shlb
pushf
jae
sbbb
insb
sub
stos
test
and
ja
add
add
pop
lret
add
aas
nop
cmp
and
dec
push
cs
or
fs
mov
xlat
jmp
jne
or
movsb
les
fwait
les
xchg
fnstsw
and
xchg
mull
inc
mov
movsl
jns
insl
mov
repnz
push
inc
sub
ror
movsl
adc
aas
xor
sub
sbb
lret
add
xorl
movsl
sarl
add
lods
push
aas
cmp
cmpl
push
push
dec
out
rorl
icebp
sub
movsl
icebp
test
popa
jl
push
imul
lods
incb
mov
xchg
xchg
mov
arpl
xor
xor
jb
test
addl
jo
jl
dec
ret
mov
cld
jbe
xchg
movsb
mov
dec
mov
mov
add
pop
and
loope
jnp
add
adc
cld
addb
daa
outsb
jcxz
fwait
inc
cs
sahf
pop
xchg
clc
clc
jbe
cmp
or
lods
add
mov
dec
xor
in
xor
ja
dec
sub
ss
pop
mov
enter
arpl
insl
inc
outsl
out
gs
popf
shlb
xor
in
ret
rcrl
popa
in
mov
test
inc
pop
xlat
cmp
adc
xlat
add
dec
jo
mov
and
scas
arpl
test
jg
sub
andb
lahf
mov
or
stos
stos
ss
and
and
arpl
stos
cs
ficompl
sbb
cmp
and
or
fisttpll
pop
jmp
and
lcall
imulb
inc
add
ja
fldenv
movsb
mov
imul
roll
jg
loopne
outsb
ret
push
mov
inc
dec
out
and
aaa
add
leave
jmp
pop
lods
inc
idivl
jp
loopne
scas
sub
push
dec
ss
popa
jecxz
sti
mov
mov
push
sti
mov
stos
scas
mov
xchg
add
xlat
das
sti
push
cmp
sbb
das
fistpl
push
lock
mov
lock
push
pushf
mov
pop
xor
lret
sbb
dec
xor
adc
add
or
in
adc
test
pop
mov
mov
loopne
out
sbb
push
arpl
mov
ds
pop
ja
loop
mov
ss
jnp
mov
sbb
inc
mov
xor
mov
aaa
dec
dec
xchg
push
or
sub
insb
ja
pop
cmpsl
inc
in
mov
xchg
ja
sub
mov
push
or
cs
sbb
fwait
hlt
arpl
mov
pop
in
in
ret
push
or
sti
push
mov
imul
lahf
push
inc
mov
sbb
gs
aad
mov
popf
ss
jbe
cld
js
lods
sarl
push
das
fs
mov
negb
dec
inc
out
and
pop
loope
or
xchg
adc
imul
and
inc
adc
sbb
adc
mov
dec
jae
dec
jnp
ret
imul
inc
and
add
xchg
es
inc
in
sub
jmp
push
das
ss
arpl
jge
loope
les
popf
int3
mov
jne
and
daa
mov
mov
out
lds
add
mov
test
pop
xor
pop
mov
mov
cmp
add
fcoms
adc
adc
sarl
or
bsr
aaa
dec
ret
xchg
xlat
imul
mov
imul
cmp
stos
inc
outsb
sub
xor
fstpt
and
xor
shrl
fcomp
xchg
jmp
fmuls
punpcklwd
xor
orl
jle
adc
xor
ficomps
sbb
pop
ss
jne
arpl
xor
gs
mov
jg
nop
pop
jnp
rorl
inc
jno
and
mov
lods
pushf
repz
je
or
jno
je
fisubrs
sti
xor
push
aam
imul
jne
and
arpl
loope
aam
imul
xor
or
hlt
mov
aaa
jne
test
cs
pop
jmp
jae
lahf
push
mov
orl
fwait
aaa
pop
lret
addb
scas
push
rcr
jg,pn
movl
shr
imul
mov
in
popf
adc
adc
inc
out
mov
mov
jecxz
xchg
jns
lods
cmp
sti
push
inc
push
push
fists
lret
add
mov
jbe
push
pop
xchg
mov
or
push
dec
sbb
adc
push
cmc
and
test
push
inc
xchg
loope
andb
es
fistpl
push
cmp
mov
pop
push
and
xor
mov
lock
fbld
jbe
shl
pop
push
adc
push
add
mov
icebp
lods
jmp
daa
add
dec
adc
into
iret
fisubrs
xchg
arpl
inc
dec
andb
xor
mov
sub
xchg
icebp
add
or
test
sub
test
mov
add
sbbl
fcoml
adc
push
imul
adc
adc
out
fistl
sbb
ds
xchg
xor
arpl
push
insl
cltd
add
lods
and
xchg
roll
pushf
adc
pop
dec
jo
fildll
lea
dec
inc
hlt
popf
roll
sbb
adc
push
pushf
adc
push
cmp
sahf
je
sbb
xchg
popa
addl
sbb
int
loopne
shrl
int3
aaa
xchg
or
cmp
xchg
sub
mov
dec
sub
cmp
out
add
aad
mov
xchg
push
pop
jnp
lods
popa
add
ja
add
and
pop
xchg
sbb
sbb
push
cmp
xchg
xor
inc
das
test
jo
outsb
xchg
test
clc
and
hlt
mov
insl
jl
test
and
xchg
pop
sub
mov
add
sbb
mov
push
or
sbb
sub
xor
push
les
cmp
add
fisttps
int3
movsl
add
mov
or
xchg
fmull
das
xor
jp
in
push
adc
mov
or
into
sbb
push
mov
pop
icebp
push
and
inc
mov
insb
jl
dec
fistl
cmp
jno
rclb
ja
add
xchg
dec
pushl
inc
daa
xor
mov
repz
mov
ret
jb
je
mov
xchg
mov
je
xor
mov
das
stos
push
sbb
ja
clc
je
mov
cmpl
mov
or
jnp
add
sub
dec
pop
les
das
shll
sub
inc
ljmp
mov
push
mov
xchg
and
inc
inc
loop
cmp
arpl
xchg
sub
movl
lods
add
sbb
ss
aad
or
push
xchg
xor
les
sbb
insb
aas
loopne
loopne
inc
lods
daa
xorl
scas
dec
sbb
pop
lcall
or
adc
sbb
pop
es
fcmovnbe
adc
adc
mov
and
sbb
pop
jo
mov
ja
push
sbb
jmp
or
insl
mov
and
ja
push
iret
and
int
sbb
add
push
sub
add
jno
or
xchg
mov
and
aam
jmp
cli
inc
mov
test
jbe
dec
faddl
movb
add
or
add
loop
inc
jp
mov
adc
mov
enter
and
add
sbb
push
leave
out
xchg
add
mov
and
adc
add
and
fs
into
and
dec
mov
or
add
es
ficompl
xor
scas
pop
xchg
dec
je
mov
les
lret
lea
xor
sub
imul
pop
xchg
mov
fisubs
dec
jo
sub
add
dec
mov
jg
jb
negl
push
push
or
shl
fildl
mov
pop
inc
int3
sbb
inc
jbe
loopne
jnp
ror
and
push
ja
shl
mov
int3
sbb
fldt
iret
or
xchg
into
lret
leave
sub
pop
mov
mov
sti
and
les
sub
in
leave
lcall
int
inc
sub
and
sbb
jo
mov
arpl
rclb
fcmovnbe
add
xchg
adc
bound
adc
fistl
ds
dec
les
add
mov
test
aas
pusha
mov
jmp
push
adc
or
test
pop
add
xchg
mov
adc
aaa
xchg
mov
or
adc
fnsave
sub
sahf
mov
dec
add
sub
sbb
and
pop
imul
xor
sub
rolb
xchg
cltd
rorb
je
inc
sbb
insl
pop
sub
pushf
add
sbb
push
aam
scas
dec
pop
add
sub
jo
adc
or
pop
dec
pop
lods
add
sbb
popa
dec
bound
ds
repnz
or
or
sahf
and
pop
xchg
dec
and
xor
out
add
add
dec
or
sbb
out
dec
add
adc
data16
jbe
jne
pop
or
aaa
xor
dec
push
add
lcall
dec
jle
push
sbb
rol
inc
adc
pop
xchg
js
xor
xor
pop
testl
and
and
dec
es
or
sub
and
insb
and
jo
pushf
xor
ds
pop
aam
cld
lods
add
imul
mov
push
mov
das
out
sub
sub
inc
ja
loop
ss
sub
jo
and
xor
push
mov
and
xchg
and
xor
lcall
mov
cmp
add
pop
jbe
add
in
push
fstpt
sbb
cmp
sbb
ficomps
push
cmp
mov
imul
and
loope
divl
mov
xchg
sub
mov
add
xor
or
lret
sbb
adc
js
sub
outsl
loopne
or
push
mov
inc
adcb
decb
movl
daa
add
and
add
or
xor
sbb
xor
sub
or
add
xchg
je
mov
fadds
inc
jae
lret
jl
loop
add
leave
out
and
inc
add
sbb
xchg
addb
jnp
adc
idivl
push
mov
adc
adc
adc
hlt
dec
cmc
test
push
and
scas
sub
es
xlat
adc
sbb
jmp
xor
es
ror
or
ret
test
movsb
daa
inc
test
mov
aaa
test
add
cs
cli
or
stos
shlb
rcrb
sub
cld
and
and
xchg
or
jb
enter
push
stos
xchg
sti
rcrl
mov
mov
and
out
nop
addb
arpl
test
shlb
adc
int3
add
add
inc
ret
and
push
fistl
xor
lea
or
popa
mov
add
dec
push
push
or
and
test
mov
pop
rorb
je
push
mov
xor
cmp
and
xchg
sbb
cmp
rclb
fs
lea
loop
dec
daa
ret
sbb
xor
movl
dec
inc
rolb
jle
inc
lods
adc
jmp
sahf
dec
es
fcmovb
pusha
stos
inc
movsb
dec
xchg
pushf
leave
jp
jo
sub
rcll
xchg
mov
xchg
movsb
or
fisubl
sub
ss
xchg
push
cmp
in
ds
xlat
and
out
or
mov
push
pop
mov
ds
imul
add
popf
add
xchg
shl
dec
ror
rol
or
lret
fistl
aaa
or
insb
fmull
xchg
or
int3
imulb
test
push
fwait
addb
rolb
dec
clc
sbb
mov
dec
push
jg
pop
adc
aam
mov
insb
push
push
or
arpl
lds
clc
push
ret
and
cs
daa
out
push
insb
out
mov
xor
test
nop
mov
je
arpl
cmp
xchg
pop
cmc
int
fbstp
nop
sub
lock
dec
movsb
enter
shll
pop
pop
sbb
jecxz
adc
in
es
xchg
popf
outsb
mov
xchg
cmpl
xor
pop
or
xor
xchg
push
mov
and
fsubl
cmc
dec
cmp
mov
cs
mov
fcmovne
test
adc
and
and
je
outsb
cs
push
leave
dec
jl
icebp
sbb
or
cmp
add
mov
or
push
fs
mov
xor
rolb
xorl
jmp
bound
ficoms
int3
mov
out
mov
adc
dec
xchg
adc
xlat
lods
push
icebp
xchg
or
shrl
lods
arpl
add
sub
lahf
adc
mov
fisttpl
aad
xlat
jns
je
nop
out
aam
sub
mov
incb
aaa
shl
cmp
lea
and
mov
sbb
push
lds
lods
xchg
add
jl
mov
add
push
pusha
stc
loop
and
add
repnz
sub
xor
jo
adc
push
add
mov
mov
and
arpl
loop
pop
seto
sub
and
adc
movl
test
dec
call
or
daa
movsb
int3
incl
push
sbb
dec
ret
pop
lods
or
movsb
cmp
nop
or
movsl
mov
insl
ss
popf
add
scas
add
sub
and
fs
xchg
and
xchg
bound
int
or
mov
fldl
mov
xor
add
js
lods
adc
sub
or
sbb
add
lock
push
aad
and
add
addb
cmp
cwtl
jge
mov
inc
cmp
sub
stos
xchg
inc
test
sub
dec
xchg
into
fisttpll
fsubrl
mov
and
bound
fidivl
add
and
stos
add
inc
inc
lahf
mov
jecxz
andl
aam
test
pop
mov
lods
add
clc
sub
sub
sbb
test
sbb
sub
xor
fimuls
and
add
or
xchg
add
imul
pop
pop
and
or
mov
fsubl
negl
mov
push
movsb
mov
add
inc
test
ret
fiaddl
dec
int3
inc
test
out
inc
das
push
fmuls
mov
mov
and
movb
lcall
jae
add
mov
cmp
loopne
pop
push
sbb
pusha
add
push
adc
push
xlat
pop
pop
pop
test
sbbb
push
iret
jp
mov
imul
cmp
adc
popf
xorb
sbb
sbb
or
inc
js
pop
out
xlat
or
xchg
ret
jno
nop
xchg
add
sbb
add
dec
add
lret
addr16
aam
xchg
push
push
dec
inc
pavgw
inc
fldenv
xchg
in
push
adc
or
dec
mov
add
das
lcall
sub
ljmp
jbe
push
mov
push
repz
in
mov
fadd
test
xchg
jns
test
sbb
cmc
fisubl
sti
sbb
sbb
fists
pushf
add
push
adc
jo
add
adc
outsl
push
xchg
jp
mov
and
cltd
lock
sarb
cmp
aam
jnp
lahf
xor
das
cmc
inc
arpl
lds
lods
mov
stos
pushf
js
bound
mov
aaa
add
xchg
add
popa
roll
mov
pop
dec
loopne
mov
push
wrmsr
cmpsl
sbb
or
pushf
xchg
push
adc
fstpt
lret
xchg
nop
icebp
je
hlt
in
push
fcomp
mov
mov
or
and
xchg
adc
or
addl
test
and
dec
adc
adc
icebp
sub
jecxz
je
shrl
push
test
xchg
xchg
or
jg
jecxz
or
cs
cmp
rclb
imul
aas
xchg
pop
rol
popa
mov
ds
je
xorl
push
cmp
xchg
rcll
or
adc
xchg
mov
jp
push
cmc
dec
ret
jecxz
hlt
fldcw
testl
sbb
push
nop
mov
sub
pop
cli
jns
pop
xchg
push
or
xchg
movb
inc
int
adc
cwtl
cltd
ret
push
jns
sub
mov
push
add
sub
jmp
stos
mov
adc
push
add
jp
popf
sub
dec
orl
lds
cmc
orb
pop
sarb
push
js
push
add
push
test
push
add
jb
movsl
sub
inc
mov
dec
xchg
push
and
cmc
inc
jle
cmp
sahf
test
mov
pop
mov
sbb
or
sbb
or
pop
adc
mov
sbb
shl
push
jmp
add
js
fidivl
stos
lret
faddl
mov
sbb
pop
sbb
test
clc
or
push
jns
test
or
xor
divl
xchg
xlat
mov
add
arpl
xchg
mov
incb
fdivrs
push
or
inc
add
aam
add
lea
jo
aaa
fcoml
hlt
jmp
out
or
or
stos
mov
jp
and
sub
or
mov
and
inc
pop
stos
hlt
jo
inc
sbb
lret
xor
xor
push
and
pop
push
xchg
incl
aam
clc
int3
add
orb
pop
cmpsl
or
ja
cmp
jge
jle
cmc
ret
ss
pusha
or
aam
xlat
mov
dec
xchg
fcmovbe
test
mov
add
cld
jb
or
lock
sub
scas
mov
push
jg
inc
lret
push
fisubrl
inc
leave
leave
and
iret
cmpsb
mov
mov
mov
sub
cwtl
mov
mov
pop
mov
dec
mov
sbb
push
xchg
dec
sub
mov
and
add
sbb
ss
and
cmp
adc
or
roll
movsl
nop
jbe
pop
das
rcl
test
cmc
pop
or
loop
out
into
inc
jl
subb
lcall
jmp
mov
ds
cli
pop
mov
imul
jne
mov
cltd
xor
inc
cltd
mov
mov
jle
cmp
sbb
int3
fs
lods
cmp
sub
ss
out
or
pop
inc
push
shll
push
fisttpl
lret
or
add
lods
push
fcmove
xor
das
fdivrs
cs
lcall
orl
ror
add
jg
sarl
dec
sbb
stc
test
push
adc
ljmp
mov
xchg
cmp
js
loop
pop
fildll
or
outsl
sub
push
cwtl
add
loopne
pop
mov
pop
xchg
and
adc
test
call
cmc
or
ret
xor
aaa
xchg
ret
icebp
add
out
int3
shlb
cmp
xor
outsl
xchg
mov
xchg
adc
jns
add
or
jb
leave
cwtl
xchg
push
cmc
add
pop
xchg
jnp
iret
xor
mov
mov
addb
jg
and
xor
mov
inc
xchg
mov
mov
xor
or
jle
lahf
in
clc
xchg
inc
sbb
inc
imul
loop
arpl
aas
xchg
outsl
pop
xchg
xchg
adc
pop
cmp
adc
and
rorb
imul
or
call
add
fmuls
cmp
inc
popa
pop
inc
fucomip
inc
jbe
mov
mov
and
sbb
popf
mov
push
lods
xor
popa
repnz
mov
test
addr16
aas
sarb
out
and
sub
sub
and
xchg
sbb
shrl
mov
sub
push
push
cs
loope
sub
inc
lods
add
cmp
jp
test
sub
fld
cmp
loopne
or
sbb
cltd
jno
sbb
popa
and
rclb
and
dec
push
fbstp
mov
and
pop
pop
insb
addr16
fwait
into
cmp
push
adc
mov
xchg
cs
mov
mov
adc
popf
es
push
push
nop
sahf
ja
jmp
cmpsb
sbb
test
repnz
adc
mov
ret
jno
loope
and
int3
mov
out
fnstenv
imul
jno
xchg
pop
push
cmp
adc
movsb
inc
pop
push
negl
lock
push
popf
movsb
aam
or
jge
mov
movsl
popa
iret
int
outsb
call
jo
pop
test
add
and
cmp
aad
mov
lret
sub
into
repnz
out
in
or
and
or
cmp
jle
xor
push
nop
outsb
in
xor
test
sub
daa
aas
cmp
pop
js
add
lret
inc
dec
sub
rclb
or
inc
fisubl
add
or
jl
aam
jnp
daa
or
or
movsb
mov
popa
xor
imul
jbe
dec
mov
push
add
mov
sub
or
clc
sahf
cs
inc
jae
xchg
push
sub
add
inc
mov
cwtl
js
in
mov
outsb
ret
gs
mov
add
push
or
arpl
movsl
icebp
ret
xchg
pop
cmp
jmp
mov
pop
js
add
pop
cld
mov
arpl
scas
outsl
testl
jb
inc
imul
sbb
repz
jae
dec
sbb
icebp
lods
repz
gs
stos
test
sub
cmc
sbb
cmc
push
inc
or
lahf
insl
aad
mov
insl
call
sarb
js
add
cltd
xchg
push
dec
ror
stos
mov
loope
mov
or
ret
push
add
push
xchg
into
jmp
out
add
push
inc
data16
xor
mov
loopne
mov
mov
xchg
popa
xchg
add
cmp
sbb
xlat
mov
hlt
fadds
cwtl
sub
ljmp
mov
fnstenv
fdiv
lods
cltd
mov
or
lock
adc
pop
test
arpl
sar
adc
push
and
jns
add
push
jp
movsl
jb
test
mov
jae
xchg
ret
test
mov
xchg
call
push
xchg
jns
adc
xchg
insl
xor
aam
xchg
je
and
mov
shr
cmp
adc
and
test
outsl
and
call
and
out
and
or
nop
hlt
faddp
addl
jmp
inc
jae
jmp
dec
sbb
movsl
es
mov
addr16
ret
sub
movb
adc
push
xchg
dec
mov
xchg
add
scas
push
lea
or
jl
cmp
sbb
out
movsl
mov
pop
test
mov
test
clc
shlb
add
pop
inc
das
add
lods
add
and
rcr
test
pop
jns
cmp
rorl
mov
out
add
or
hlt
shl
add
stos
inc
pop
and
sbb
ret
lods
aaa
sub
or
lods
add
dec
sbb
das
or
cmpsb
dec
xor
rcrb
ja
adc
mov
lret
sub
jne
fwait
mov
popa
es
popf
push
jno
cmpsl
call
arpl
aad
or
sbb
stos
jbe
loope
push
sbb
test
cmpsl
inc
pop
pop
sbb
test
stos
notl
mov
mov
xorb
popa
ja
fcoms
push
je
sub
test
sub
mov
daa
add
inc
fincstp
fcmovnb
xchg
jo
sbb
jo
cmp
dec
push
mov
fidivrs
xchg
inc
fwait
out
sbb
mov
dec
add
adc
or
aam
mov
arpl
push
test
add
sahf
pusha
cltd
pop
sbb
xor
or
jle
push
jle
in
add
test
or
jb
daa
add
sbb
loopne
add
or
or
loope
ret
lods
lods
and
push
add
fwait
cld
add
popa
movsb
lcall
lock
fldt
sahf
cmpb
mov
incb
cmpsl
cmpb
lcall
push
push
cli
insl
clc
add
xchg
sub
mov
jne
add
fadds
movsl
cltd
or
add
and
addr16
dec
les
lock
je
mov
and
and
test
aaa
enter
out
cmpsl
mov
add
mov
dec
shlb
mov
lods
mov
ret
mov
jp
or
jb
icebp
adc
add
dec
jnp
iret
mov
ljmp
ret
imul
roll
pop
int3
add
ljmp
sub
fs
mov
cmp
add
mov
add
lret
add
sub
sbb
mov
in
popf
int3
push
stc
pop
xchg
mov
xor
jecxz
in
dec
mov
ret
fcoms
shlb
arpl
js
test
jle
inc
add
hlt
jnp
ret
push
mov
paddb
jecxz
repz
bound
in
cmpsb
pop
or
jge
add
mov
aaa
enter
aad
mov
inc
and
add
jge
js
jb
leave
xor
sbb
mov
loopne
cmp
jno
rolb
loopne
dec
push
xlat
daa
les
sub
sub
jb
adc
pop
lods
insb
mov
jne
xchg
outsl
aad
sbb
sub
mov
and
inc
mov
dec
mulb
pop
addl
adc
rorl
lea
fwait
aad
repnz
ret
fwait
mov
sub
cmpb
xor
push
aam
sbb
mov
fsubs
pop
out
push
lods
xorb
jae
and
adc
pop
inc
sub
pop
sete
mov
and
sub
push
pushfw
xchg
mov
jb
lret
iret
xor
and
xor
mov
lret
lods
mov
jb
orl
add
and
or
inc
mov
jp
or
enter
addb
sub
xchg
adc
mov
and
test
cmpsl
mov
sbbb
xor
pop
xlat
bswap
andl
add
subb
in
imul
js
xor
loope
pop
xchg
or
bound
cmc
fcomps
push
ljmp
pop
sahf
add
and
push
xlat
jnp
imulb
daa
icebp
movsb
pop
pop
adc
or
adc
sbb
dec
push
test
jne
push
xchg
sub
add
out
inc
and
incl
jl
pop
adc
movsb
jb
stc
sti
movsb
insl
adc
loope
adc
and
pop
xchg
push
jge
xchg
mov
inc
sub
pop
sub
mov
xor
aam
sbb
lods
pop
fs
pop
int3
add
lods
xchg
es
or
addl
arpl
jbe
or
ljmp
inc
mov
dec
pop
dec
adc
mov
sub
add
pushf
test
in
cmpsl
hlt
mov
adc
push
or
fmul
xchg
ss
stos
xlat
xor
mov
fidivrs
out
pop
mov
jmp
or
pop
inc
add
and
aaa
ljmp
mov
fnstcw
cmp
popa
cwtl
jne
arpl
add
nop
pop
mov
movsl
sub
adc
lahf
inc
jne
cmp
aad
or
fstpl
and
out
int3
add
mov
cmc
push
out
add
mov
test
insl
xchg
and
aam
push
xor
sbb
loope
adc
stc
xchg
or
ret
movsl
cmp
shr
scas
xchg
cmp
pop
push
in
cmpsl
adcb
add
mov
sbb
mov
inc
js
iret
test
pop
fs
fs
adc
xlat
shl
imul
jg
mov
inc
lcall
cmp
or
push
in
adc
loopne
xor
int
bound
jmp
add
sub
inc
dec
dec
out
out
cwtl
mov
subl
inc
out
cmc
cld
cli
adc
aas
inc
stos
pushf
xor
mov
sbb
fnsave
mov
xchg
and
test
pop
sbb
inc
push
js
ds
inc
jmp
xlat
daa
add
and
add
pop
aam
jg
fisttpll
add
mov
in
and
sbb
dec
js
push
mov
add
out
ret
or
push
and
imul
inc
ret
xor
add
mov
sub
push
sub
dec
stos
pop
dec
loope
and
daa
imul
pop
sbb
sbb
adc
sbb
cmp
adc
xchg
outsb
fisubrl
fwait
into
adcb
push
or
bound
mov
test
dec
insb
add
mull
and
inc
push
mov
hlt
inc
sub
inc
enter
movsb
push
ret
ret
mov
push
inc
adc
into
aam
lods
in
ror
pop
mov
xchg
ret
jb
mov
lret
inc
repnz
pop
movsl
pop
cmovo
lret
insb
cmc
hlt
add
aas
or
xchg
pop
inc
or
sub
jb
daa
sub
cmpsl
add
sub
sahf
mov
pop
sahf
or
lock
sub
dec
negl
inc
xchg
imul
jecxz
loopne
arpl
and
mov
cmp
cmp
insb
std
pop
fistl
push
xor
push
xchg
outsl
cmc
ds
pop
je
push
aas
and
adc
jbe
fadd
mov
pop
add
loopne
fdivr
subl
fdivrl
or
jnp
jo
hlt
jecxz
aaa
sbb
and
or
push
cmp
loopne
dec
adc
push
scas
fdivr
fdivrl
ficoms
bound
inc
push
test
push
dec
sub
jae
fs
cmp
adc
rorb
xor
pop
movsl
jl
xor
outsb
sbb
daa
sub
addr16
dec
push
sarb
inc
ret
pop
mov
xchg
dec
cmc
test
mov
pop
addr16
push
cmp
mov
fisttpll
add
movsl
pop
pop
lret
cmp
xchg
xor
pusha
mov
lds
push
and
loop
jmp
loope
nop
rorb
mov
imul
add
jae
add
stos
fldl
and
jo
mov
or
into
jno
dec
out
daa
cmp
dec
rolb
mov
inc
jmp
loop
xchg
ja
xchg
mov
stc
loop
jmp
mov
sbb
lret
in
ljmp
jg
add
test
ljmp
xlat
leave
push
pop
arpl
rorb
mov
adc
enter
xor
add
add
push
lock
popa
sbb
cmp
lods
je
push
or
andl
push
stos
push
cmpsb
mov
cmp
push
rorl
xchg
rclb
sbb
enter
test
sbb
ja
mov
add
cmc
xchg
or
mov
fmuls
dec
sbb
xchg
dec
mov
sahf
je
push
xchg
add
mov
inc
clc
lods
lock
dec
out
fstl
sti
cs
fnstcw
insl
sbb
stc
jno
ret
mov
inc
jl
rclb
sub
sahf
cmp
sub
sti
mov
dec
or
fbld
jg
inc
xchg
js
pop
mov
pop
xchg
and
dec
adc
test
push
sbb
imul
mov
adc
test
mov
mov
jp
pop
push
mov
cmpsb
arpl
inc
and
std
inc
xchg
sbb
iret
mov
insl
cmpb
sbb
sbb
xchg
inc
shrl
mov
push
cmp
ficoml
cmp
cli
bound
scas
iret
or
cld
sub
outsl
sbb
sub
xchg
mov
addl
imul
pop
fists
jno
fcoml
jmp
jl
cwtl
enter
dec
and
outsl
pop
inc
sti
sub
inc
and
pop
fsubrl
loope
fnstcw
or
enter
xor
xchg
aaa
movsb
dec
mov
fsts
mov
insb
cli
std
inc
fistps
pop
rolb
mov
test
movsl
adc
ljmp
xchg
xchg
outsl
stc
scas
adc
mov
test
add
cwtl
pusha
inc
je
iret
idivb
std
lahf
sub
shrb
or
xchg
mov
ret
bound
or
pusha
xchg
add
add
dec
add
xor
push
aaa
cmc
dec
fsubrl
pop
fistpll
ret
push
movsl
add
bound
xchg
pop
pop
leave
mov
adc
xchg
sbb
and
mov
ds
lret
inc
push
arpl
das
add
pop
les
ficoms
arpl
add
dec
inc
out
pop
pop
jb
jne
and
inc
adc
clc
mov
push
je
push
mov
pop
out
push
jb,pn
and
push
adc
iret
popa
adc
fadds
push
sbb
sbb
test
and
add
gs
push
and
dec
es
sarb
inc
xor
iret
push
and
mov
int
test
jb
ret
and
push
sbb
jl
clc
and
out
ss
outsl
jecxz
add
jp
jbe
je
jo
sbb
andb
push
mov
xor
xor
sbb
xchg
pop
inc
ret
pop
test
popa
pop
scas
pop
add
or
pop
or
or
jnp
fsubs
push
cmc
repnz
je
sbb
add
xor
adc
mov
iret
mov
pop
adc
scas
push
stos
and
jmp
out
add
dec
cmp
mov
pusha
pop
xchg
call
mov
xchg
or
js
lods
leave
cmp
or
sub
test
mov
push
loope
sbb
mov
or
loope
test
xor
pop
mov
sahf
movsb
cmp
inc
icebp
push
arpl
sbb
dec
jle
pop
or
mull
mov
jns
mov
ret
mov
add
shlb
dec
mov
xor
pushf
addb
popf
fmuls
mov
mov
sbb
insb
xor
push
arpl
into
out
rcll
filds
xchg
push
inc
dec
dec
shl
push
fs
mov
cmp
icebp
test
loope
mov
rclb
int3
dec
pop
lods
xor
lret
jno
fs
pop
movsb
cs
int3
bound
sbbl
xor
nop
mov
pop
dec
arpl
lods
add
loop
or
mov
mulb
adc
xchg
iret
inc
mov
pop
adc
jle
out
ret
mov
mov
stc
inc
ret
push
cmp
cmp
fstl
pop
ds
imul
xchg
add
scas
test
and
sbb
jno
imul
mov
sbb
and
cmc
or
cmpsb
gs
imulb
test
jg
sbbb
mov
adc
xchg
cmpsl
inc
xorl
or
and
outsb
dec
movb
das
daa
std
push
sbb
mov
ja
pusha
in
add
add
mov
sub
fwait
push
xchg
mov
sbb
lds
ss
ds
imul
push
loopne
mov
sub
push
repnz
negl
loop
jl
ljmp
pop
push
add
insl
movsl
shlb
add
pop
hlt
outsl
and
cmpsl
sub
lods
and
ds
imul
lcall
addr16
addr16
insl
clc
lcall
arpl
adc
add
cwtl
loopne
sarb
in
jno
xor
fwait
push
inc
popl
sbb
xor
loop
fisubrl
pop
mov
aam
jmp
jecxz
nop
inc
cmpsb
js
enter
nop
jecxz
sbb
ret
sub
sbb
jp
arpl
adc
jle
sub
push
or
cmpsl
xchg
subb
outsl
mov
add
cmc
and
and
lods
pop
in
or
ja
or
addr16
dec
jmp
xchg
fnstenv
nop
clc
pop
in
sbb
shlb
jecxz
dec
adc
sub
sbb
test
sarl
and
jb
inc
adc
mov
into
adc
mov
push
push
inc
mov
bound
sbb
icebp
inc
cwtl
inc
rorb
sbb
pop
inc
std
mov
clc
inc
in
jle
xchg
push
and
mov
test
push
pop
fnsave
outsb
and
loopne
mov
aad
add
push
push
mov
test
dec
push
push
outsl
push
popa
push
push
das
push
sub
mov
pop
arpl
test
sbb
fs
xor
inc
dec
dec
adc
sarl
sub
and
loopne
sub
add
test
push
js
dec
add
pop
sbb
push
lods
mov
mov
cli
sbb
dec
iret
lret
jmp
in
sbb
pop
push
cmp
popa
in
pop
fcomip
add
fistps
jo
and
sti
push
sub
movsl
push
xlat
test
repz
test
or
inc
cmc
xor
in
gs
lods
fisttps
sub
stc
ror
aam
mov
lods
mov
mov
jno
push
lods
xor
inc
and
or
cmc
add
sbb
push
pop
loopne
stc
pop
lret
or
cmpl
fstps
inc
push
inc
jmp
add
lds
push
sub
shrb
scas
inc
loop
xchg
pop
xchg
sub
cltd
xchg
xchg
mov
mov
mov
js
hlt
cmpps
and
jmp
bound
xor
mov
sbbb
sbb
out
inc
pop
mov
mov
js
xchg
sbb
addb
dec
pop
sub
sub
mov
ja
insl
jecxz
fs
cmc
data16
mov
stos
xor
xor
cmp
adc
inc
or
lahf
ret
pop
cmp
xchg
pop
hlt
jbe
adc
sti
outsl
or
adcl
push
inc
xor
or
movsb
cmpl
shlb
mov
into
ret
xchg
aaa
jnp
dec
and
mov
fwait
outsb
or
fldcw
mov
lret
add
mov
sub
pop
lods
sbb
mov
fcom
imul
cwtl
cmp
mov
add
iret
and
daa
ret
mov
inc
test
mov
or
cmp
movsl
add
out
xor
aaa
cmc
movsb
jo
movsl
cmp
sti
or
mov
mov
sbb
dec
fcoms
sbb
sub
xchg
insl
jl
inc
dec
test
mov
les
jle
sbbb
push
sbb
aad
icebp
adc
aad
addr16
loope
mov
sbb
in
rol
add
cltd
ss
cmpsl
push
ljmp
mov
frstor
mov
es
mov
lock
sahf
js
aad
add
outsb
stos
mov
loop
movsb
dec
sbb
jo
pusha
test
imul
jns
inc
mov
jo
jecxz
add
pop
xchg
push
outsb
sbb
imulb
data16
lret
add
sti
jl
imul
adc
lahf
icebp
fcomps
adc
jno
sbb
sub
sbb
mov
mov
lock
cmpsb
jb
sub
sub
andb
push
adc
sbb
dec
mov
jge
jecxz
push
cmpb
rorb
js
lret
iret
test
add
sahf
xor
pop
pop
xchg
popf
lret
xlat
or
lea
sbb
inc
inc
and
cmp
das
cmc
rorb
sub
xor
adc
in
and
cltd
adc
sub
or
mov
js
pop
xchg
inc
push
popf
and
scas
xchg
movsl
add
sbb
je
adc
lcall
insl
test
cs
and
aaa
aam
mov
jae
dec
xor
negb
dec
adc
das
mov
je
jle
test
sub
add
jno
notb
aas
lods
dec
sub
add
xor
and
pop
sarb
push
out
stos
xchg
xor
dec
insb
loop
mov
and
dec
add
push
imul
mov
xchg
movsl
mov
push
mov
mov
pusha
lea
bound
cmp
das
sahf
or
adc
fsts
or
js
jg
and
or
push
insl
andb
rorb
xchg
dec
loopne
xor
je
and
adc
nop
sub
add
aam
test
dec
adc
push
add
and
pop
push
rcl
mov
mov
insb
ljmp
fidivs
cwtl
jl
dec
popa
inc
in
inc
rorb
or
xchg
sub
pop
sbb
inc
mov
dec
or
pop
outsb
add
inc
pusha
loop
add
stos
push
fimull
jl
inc
sahf
jne
cs
ljmp
push
add
xor
add
adc
and
sbb
adc
es
imul
popf
imul
pop
sub
mov
repnz
add
jp
stos
cmp
dec
jmp
cwtl
rclb
popf
shrb
inc
sub
adc
dec
sarb
addl
fmuls
push
test
fisubrl
jge
jo,pt
ds
pop
dec
or
pop
mov
pop
mov
ds
stc
xchg
cwtl
sub
sbb
mov
inc
inc
cs
xor
push
sbb
mov
out
pop
scas
sbb
pusha
sbb
and
shll
mov
lret
lea
mov
fdivl
fstps
outsb
gs
iret
into
pop
ret
and
pop
sbb
insb
xor
cmp
push
cmp
mov
add
outsb
jo
xchg
inc
stos
in
insb
add
outsl
stos
push
loopne
or
pop
pop
add
pop
dec
ja
push
int
movsb
push
push
jno
imul
and
mov
insl
sub
fldenv
lret
sbb
xchg
jne
add
jnp
xor
adc
dec
mov
inc
loope
push
xor
mov
loope
cmpsb
and
mov
nop
lea
cmpl
aaa
or
xchg
repz
test
push
fstl
lods
outsl
dec
lock
xchg
inc
jp
dec
add
add
sahf
insl
das
and
cmp
stos
push
mov
jne
sarb
ljmp
and
mov
jl
jbe
push
scas
les
out
pop
push
cwtl
xchg
das
and
jb
sbb
testl
fildll
lahf
mov
push
xor
push
or
mov
stc
mov
mov
movsb
loopne
and
int
push
push
cs
ret
xlat
xchg
mov
xchg
push
add
mov
jno
out
sub
movsl
add
add
or
add
loop
inc
xlat
mov
dec
iret
imul
outsl
adc
or
cmp
aad
pop
xchg
and
sub
loopne
jmp
rolb
jo
cmp
movsb
mov
add
mov
inc
dec
flds
add
sub
push
bound
inc
rdpmc
or
loopne
cmp
or
jmp
xchg
add
daa
lods
xor
pop
mov
jae
cli
adc
in
ss
lahf
add
int
mov
rol
sbb
or
hlt
faddp
push
pop
or
loope
les
or
movsl
imul
lcall
and
mov
pusha
sbb
outsl
nop
daa
pop
aam
out
xlat
mov
adcb
outsl
inc
imul
mov
sbb
xchg
mov
test
inc
mov
int
sub
or
jne
arpl
ret
mov
sarl
jle
lea
outsl
mov
inc
lret
inc
imul
cmp
lods
inc
movb
push
push
jg
lods
arpl
imul
jle
imul
imul
add
jp
mov
insb
cmc
mov
dec
adcl
aas
sub
push
push
rolb
add
sbb
mov
sbb
inc
pop
test
dec
push
inc
dec
mov
mov
lods
push
jbe
sub
ja
sub
popa
cmp
add
nop
push
inc
inc
pop
les
addl
inc
shlb
jae
inc
aam
enter
and
add
lret
fstp
push
daa
fs
aaa
push
add
pop
lahf
and
jge
inc
rolb
mov
push
popa
fldl
icebp
inc
lret
sbb
pop
out
in
push
ds
add
cmp
dec
and
sub
add
mov
repz
dec
xchg
push
pop
pop
je
lea
or
and
pop
rolb
imul
addr16
ljmp
or
mov
fld
mov
sbb
mov
negl
pop
clc
push
mov
push
mov
daa
jge
xchg
dec
and
and
and
sub
fcomp
and
push
subb
and
lds
dec
mov
or
nop
jg
and
pop
jmp
xor
sbb
mov
push
inc
out
shr
add
sbb
sub
stos
fistl
rclb
cmp
fldl
je
mov
xchg
js
push
mov
cmp
pop
or
push
sub
test
push
or
sbb
and
add
out
xor
in
add
push
dec
mov
dec
pusha
aam
in
cltd
outsb
loope
test
push
imul
in
imul
xchg
pop
test
add
subb
lahf
adc
clc
test
mov
clc
jp
mov
dec
lods
and
cmp
popa
rclb
pusha
sub
mov
arpl
nop
mov
and
mov
inc
shr
jecxz
es
aad
cmp
or
mov
or
xchg
or
jns
pop
sbb
and
outsb
xchg
inc
add
xor
sub
jae
or
fldt
jns
inc
adc
cmp
test
js
aaa
insb
ja
popf
or
rcrl
and
jno
inc
insl
dec
or
mov
andb
mov
cmpsl
lods
sub
ret
add
addr16
adc
sahf
jg
fidivl
in
jg
data16
or
mov
jnp
jo
pop
pop
loope
jb
test
mov
mov
ss
in
pop
jecxz
mov
mov
shlb
scas
pop
mov
popa
ds
or
pusha
popf
sahf
pop
and
pop
fdivs
push
jecxz
lret
xchg
in
je
push
jnp
pop
fists
cmp
rolb
dec
iret
fs
mov
jg
push
and
cmc
cld
jl
jno
mov
lods
lods
sbb
ret
and
mov
jle
and
pop
xorb
popa
sub
test
xchg
and
scas
or
push
mov
outsl
out
push
push
roll
negb
ds
ret
push
add
or
cmc
and
mov
add
outsb
mov
mov
ret
mov
cmpsb
or
mov
sti
jecxz
test
scas
pop
or
pop
pushf
xor
add
xchg
imul
inc
push
push
push
add
add
dec
es
daa
and
test
lcall
fsub
sbb
ja
lret
fisubl
ror
jle
int3
push
pop
mov
rclb
fs
les
insb
gs
sarl
js
xor
into
outsb
insb
cmp
js
and
test
lret
loopne
xor
rorb
insb
mov
jl
or
enter
ret
inc
nop
pop
jecxz
mov
lods
mov
mov
loopne
or
add
xchg
aam
fstps
xchg
cmp
inc
sbb
mov
dec
pop
mov
xchg
mov
mov
dec
pop
lret
fs
jg
out
test
cmp
push
insl
or
movsb
push
cmp
enter
jmp
or
in
ljmp
js
notl
test
ret
fadds
push
aaa
ret
jbe
inc
add
pusha
cmp
in
mov
in
movsl
add
add
imul
shlb
sbb
in
jb
jle
dec
pusha
gs
xchg
movsl
out
je
sbb
push
fdivs
cmp
sbb
jg
mov
jno
adc
mov
in
xlat
repz
sbb
cmp
jecxz
push
das
push
ds
popa
jmp
repz
cs
jp
mov
xor
mov
add
call
add
test
add
iret
mov
imul
adc
ret
movsb
xchg
mov
fdivrl
sub
add
and
pop
and
push
out
and
xchg
sbb
sbb
out
inc
ret
loope
and
imul
xchg
sbbl
xchg
loop
lret
enter
movsb
cmp
je
mov
push
sbb
inc
imul
dec
and
pop
aam
nop
push
pop
push
iret
dec
add
adc
push
and
cmp
mov
in
add
fistps
add
mov
das
nop
ss
rolb
add
xorl
ret
insb
push
ss
inc
frstor
sub
dec
jb
mov
mov
and
cmp
pop
imul
cmp
cmp
jbe
mov
clc
add
mov
xchg
mov
cmp
add
nop
mov
xlat
insb
push
sbb
arpl
loopne
jecxz
adc
mov
or
arpl
imul
movsl
pop
movsl
iret
data16
and
push
and
test
adc
mov
aaa
add
imul
sub
add
inc
xchg
mov
pop
and
inc
pop
or
and
es
arpl
mov
mov
fwait
ret
ja
shrb
pop
sub
fwait
test
fisubrl
mov
fs
mov
add
aaa
pop
ret
movsl
mov
inc
lret
shll
comiss
adc
cwtl
sub
or
dec
sbb
push
js
add
stos
pushf
and
loope
sub
xor
imul
inc
mov
jl
mov
add
imul
out
dec
jecxz
std
das
or
pmulhw
or
jmp
jo
jne
cmpsl
pusha
clc
imul
or
add
lahf
dec
mov
add
cmp
or
push
cmp
sarl
xor
clc
rolb
ror
mov
sub
xchg
or
movsl
pop
popa
or
shll
popa
sub
js
and
aad
jo
or
inc
cmc
lods
int
push
inc
dec
testl
push
scas
dec
enter
ret
or
fmuls
xchg
add
mov
and
or
adcl
lea
pop
dec
sbbl
mov
out
ret
jp
xchg
sub
scas
jo
pop
loop
mov
adc
cmc
xlat
mov
ret
hlt
push
cmc
adcb
push
aaa
imul
iret
mov
iret
pop
dec
mov
or
lods
subl
or
scas
icebp
lock
adc
iret
movsb
cmpsl
ljmp
or
loope
and
fldl
imul
sub
pop
sub
or
mov
sub
and
cmp
mov
adc
das
pop
mov
adc
sbb
jmp
mov
pop
sahf
and
sub
pop
setge
mov
cltd
adc
cmp
rcl
add
adc
aad
movlps
pop
xlat
and
rolb
add
in
int
popf
cmpsb
and
xchg
mov
dec
das
pushf
lock
mov
test
push
test
push
sahf
sub
push
mov
rorl
add
cmpl
cltd
movsl
gs
clc
cmp
test
inc
push
mov
sub
in
sub
add
hlt
fwait
iret
adc
mov
subl
cmp
pop
or
and
ret
mov
dec
jge
sbb
jg
xchg
addb
inc
andl
ret
test
jb
mov
arpl
xchg
adc
xchg
push
mov
imul
sbb
test
lret
xchg
aad
mov
inc
es
xchg
out
bswap
popa
adc
fists
adc
dec
test
dec
mov
sub
cmp
repz
mov
ret
add
push
add
cmp
pushf
mov
hlt
add
aad
xlat
adc
sub
cmpsb
loopne
lods
pop
push
sub
mov
in
adc
movsb
out
push
rorl
fstl
scas
add
test
mov
outsl
inc
lds
add
mov
aam
xchg
adc
dec
mov
ret
test
push
cmp
xchg
push
xchg
popf
add
mov
mov
cs
lods
movsb
lods
scas
inc
xchg
in
xchg
add
movsb
sahf
aad
inc
jns
jo
dec
ffreep
movsl
sahf
pop
loopne
imul
sub
xor
js
mov
xor
insl
sbb
push
imul
in
adc
fldt
rcrb
iret
aaa
into
shlb
imul
and
xchg
cmp
test
adc
push
sbb
sub
xorb
mov
add
xchg
cmp
mov
mov
push
xchg
das
test
addl
xor
add
push
pop
xor
test
std
bound
test
and
xor
lar
call
push
add
imul
mov
or
lea
cltd
and
mov
rcll
adc
cmp
loopne
pusha
or
jns
sbb
cwtl
push
inc
dec
push
test
mov
add
xlat
lds
and
sbb
and
mov
std
and
add
adc
int3
outsl
xchg
and
xor
lods
add
dec
xchg
push
ror
jp
mov
push
test
dec
xlat
dec
cmpsb
rolb
push
add
ja
out
hlt
andl
pusha
lar
xchg
push
ss
mov
shrl
xchg
adc
add
adc
fs
mov
xchg
add
lret
repz
mov
add
loope
or
insb
ficoms
cwtl
xorl
add
sub
pop
aam
or
stc
xchg
cmp
cmp
cli
and
or
or
lea
cmp
ret
addr16
sub
scas
je
or
sbb
add
add
xlat
mov
subb
xchg
sub
shll
pop
inc
add
add
add
push
and
insb
movsl
pop
push
pop
outsb
inc
mov
cltd
outsb
fdivl
xor
cmp
dec
imul
push
xor
sahf
dec
in
add
mov
fiadds
push
jo
ja
gs
inc
loope
bound
adcb
ja
rcrb
lods
xchg
ret
rep
pop
add
adc
stos
sub
cmp
mov
push
psubsb
imul
fsubrs
adc
push
push
add
les
hlt
pop
pop
adc
sti
cmpsb
pop
cwtl
jmp
cmp
jge
addps
ja
addr16
cmpsl
ljmp
into
sub
sub
xorl
into
mov
loopne
push
les
inc
sbb
fyl2xp1
sub
inc
cwtl
lock
stc
mov
jmp
xchg
test
xlat
xor
jo
outsb
jmp
fwait
pop
fadds
inc
pop
push
push
xchg
mov
or
push
shrb
das
int3
arpl
pop
and
outsl
leave
xor
jb
sub
sub
cwtl
movsb
or
movsl
cmpsl
scas
or
and
sub
sub
cs
jecxz
dec
loope
xor
stos
sub
outsl
stos
stos
test
mov
xchg
mov
xchg
cwtl
ret
sub
test
pop
and
jno
hlt
sbb
mov
and
push
adc
lods
jge
cmp
dec
push
pop
mov
jae
stos
nop
jae
xor
test
dec
leave
call
jne
xchg
test
imul
call
out
mov
and
inc
insb
imul
push
lcall
sarl
rcrl
test
inc
push
adc
dec
pop
popa
xorl
mov
sub
xchg
jb
push
js
hlt
adc
fcomps
sbb
add
in
test
push
push
dec
dec
inc
test
pop
insl
pop
dec
outsb
loopne
jmp
mov
xchg
mov
push
pop
add
xor
lods
sub
xor
and
lods
mov
dec
fcompl
adc
ja
iret
addr16
std
pop
and
push
sbb
fisubl
dec
jp
stos
xor
setb
orb
ja
jnp
mov
clc
aad
cmpb
pushf
call
push
nop
out
sarb
popa
iret
and
and
jbe
leave
mov
add
fcompp
xchg
loopne
lret
test
jnp
sti
fnstsw
sbb
and
inc
jns
into
jne
sub
repz
pop
ficompl
inc
mov
xchg
gs
shll
in
inc
jmp
mov
pop
cltd
sti
out
inc
in
mov
mov
fucom
out
cmpb
jo
mov
in
xchg
sbb
jl
xchg
loope
xchg
dec
andl
inc
inc
inc
add
in
pop
mov
andl
dec
xchg
jnp
jbe
loope
dec
dec
adc
jns
dec
ret
jns
mov
xor
push
loop
xchg
adc
jl
popa
loope
add
xlat
and
or
cli
xor
imul
sbb
push
in
xorb
inc
push
fcoms
mov
xchg
mov
ret
jge
jbe
push
test
cmc
xchg
popa
xor
inc
cmp
adc
loope
insl
xchg
popa
inc
cmpsb
fldt
imul
jo
jno
fdivrs
jb
pop
les
cmp
xchg
adc
xor
adc
sub
loopne
inc
rorb
xchg
rol
bsf
pop
shll
or
mov
xchg
dec
pop
xchg
xchg
mov
xor
mov
push
pop
jecxz
cmp
scas
and
lea
and
sbbb
adc
pusha
popa
and
dec
arpl
and
leave
add
pop
pop
and
and
fwait
insb
push
cmc
sub
mov
sbb
xor
xchg
push
sbb
bound
fildll
mov
mov
add
push
dec
bound
xor
xor
mov
aam
daa
ss
sbb
sbb
jmp
lock
xor
add
add
scas
xor
jb
or
or
and
pop
out
mov
lods
mov
stc
sub
shlb
mov
and
jbe
jmp
loop
fcomps
and
shll
mov
dec
adc
sbb
js
sbb
ret
cmp
repz
xorl
or
notl
sub
mov
bound
and
into
xchg
call
cmpb
shll
repz
test
adc
shrl
and
jmp
mov
testl
lock
stos
cmp
cmp
es
jge
negb
icebp
jo
adc
jl
mov
push
jl
and
mov
shl
fdivs
push
jnp
loop
push
add
lods
xor
fistpl
rcrl
pop
lods
cmp
sahf
mov
inc
sub
icebp
nop
xchg
imul
popf
xchg
pop
jo
test
bound
and
pop
icebp
xlat
add
imul
into
lea
and
aaa
push
add
push
push
icebp
xor
mov
aad
pop
lret
loopne
cmpsb
and
add
fmul
loop
int3
add
sbb
jg
lods
sbb
adc
shrb
sti
cs
xor
push
add
decw
sub
or
shrl
adc
inc
add
repz
xor
dec
adc
or
adc
add
sbbb
add
mov
inc
mov
and
and
add
ror
sub
inc
and
xchg
arpl
push
xchg
add
push
flds
jmp
jge
bound
push
nop
adc
cmpb
lea
pop
mov
inc
or
gs
lret
arpl
add
push
cmp
pop
cmp
xor
fildll
push
mov
dec
pop
adc
in
lret
mov
mov
pop
scas
dec
shlb
ret
xchg
push
push
and
imull
fimull
test
inc
iret
scas
and
jns
add
adc
cmpsb
adc
adc
or
cmpsl
inc
xor
adc
lret
inc
pusha
cmpsl
pop
roll
pusha
loop
xor
push
sub
sar
push
add
lods
inc
mov
adc
xor
aas
sub
xor
inc
pop
or
pop
mov
and
test
iret
xor
mov
add
addr16
aas
inc
in
shl
out
mov
sbb
lea
inc
jnp
sbbb
jp
pop
scas
and
pushf
inc
mov
mov
dec
pop
mov
mov
fstl
sub
mov
and
cmp
adc
push
push
jge
push
test
cmp
pop
xor
loopne
in
cmp
gs
lock
lcall
pusha
jb
sbb
xlat
ljmp
dec
or
pop
jae
movsl
rcl
cmp
out
out
add
sub
fiadds
inc
cmp
int3
fcmovu
jo
fcompl
movsb
ficoml
jo
push
dec
pop
loopne
cmc
mov
pop
pop
js
sbb
negl
push
fmul
cmpsl
add
pop
jbe
call
lods
test
repnz
mov
lock
push
jmp
aaa
mov
jne
mov
addb
pop
mov
cmp
subl
mov
in
push
shr
lret
aam
push
xchg
xchg
fcoms
add
push
push
lea
sub
stos
push
call
sub
rcrl
lea
sbb
les
pop
arpl
cmp
sub
ljmp
push
cmp
std
add
mov
call
sbb
push
cld
pop
or
out
and
sub
lea
mov
xchg
adc
mov
and
popa
pop
mov
mov
int3
xor
add
mov
sbb
pop
sbb
clc
fdiv
adc
cmpsl
ss
aad
sub
and
cmpsl
jl
iret
imul
pusha
adc
push
popa
leave
ret
add
xchg
push
push
dec
pop
lods
outsl
add
push
aas
jl
ss
aas
push
fdivl
imul
lahf
push
in
xchg
xchg
movsl
add
adc
cmpsb
mov
ds
addl
xchg
jb
and
ljmp
push
inc
andl
mov
fstl
popa
jl
inc
jp
add
cmp
and
in
or
adcl
daa
lahf
dec
pop
popa
daa
mov
rorb
bound
test
mov
insl
shll
lock
in
test
stc
inc
insb
cmp
mov
or
nop
add
lahf
inc
sarl
fucomip
xchg
pop
dec
sbb
jno
bound
lock
gs
outsb
add
andl
xlat
jno
test
jmp
pop
jmp
dec
jp
enter
jb
mov
xchg
mov
cmp
xchg
jns
mov
sbb
bound
or
inc
ss
push
xlat
xchg
arpl
and
add
inc
mov
inc
es
fcmovb
cmpsl
sahf
mov
inc
cld
xchg
loope
es
pop
sbb
mov
mov
cmp
mov
aam
and
mov
mov
sub
mov
lret
ja
cwtl
cmpsl
add
push
xchg
xor
es
push
or
iret
and
dec
imul
inc
outsl
xchg
out
ja
add
fldcw
mov
jo
mov
pop
sbb
sub
decl
mov
out
lret
sbb
sub
std
adc
jl
inc
add
fs
add
sbb
aam
orb
jo
lock
rcrl
xor
mov
mov
xor
or
or
in
js
jle
xor
daa
lock
dec
movsb
and
and
cmc
pop
jne
lods
incl
rcrb
mov
ljmp
and
negb
mov
aaa
push
pop
push
les
mov
adc
inc
pop
and
stos
or
inc
icebp
cmpsl
in
testb
cmc
ret
subb
add
adc
push
aaa
iret
dec
aad
sub
cmp
inc
mov
push
or
or
jg
push
mov
xor
dec
jecxz
cltd
out
xchg
sbb
sub
adc
push
sub
and
stos
pop
or
lahf
test
stc
mov
lea
mov
jne
jp
inc
subl
adc
jbe
cmp
mov
add
icebp
outsl
jo
pop
lret
lock
roll
in
adc
movsb
dec
pop
xchg
push
add
sub
mov
add
mov
loopne
and
sub
xchg
or
js
icebp
mov
add
add
cmp
in
push
iret
push
xor
shll
aam
clc
push
jge
xchg
dec
add
imul
imul
fnstenv
mov
jl
or
push
dec
xchg
cltd
adc
xor
xchg
sbb
xor
ficoml
inc
jbe
or
mov
inc
sbb
pop
jle
jo
sbb
lock
sti
inc
stos
push
push
xor
lods
jb
rolb
sub
mov
ffreep
pop
fcoms
divl
xor
or
jl
lret
jae
ljmp
or
pop
sub
daa
jge
cmp
mov
loope
adc
jns
xlat
test
mov
sub
jne
outsb
xor
cmp
inc
outsb
out
xor
in
xlat
push
jle
add
push
sarw
sub
mov
negl
imul
aam
add
outsl
xlat
push
push
push
outsl
push
xchg
loop
or
cmpsl
out
cmpsb
and
idivl
icebp
or
ljmp
sbbl
add
xor
mov
aad
and
pop
icebp
sbb
sbb
loope
out
and
out
and
dec
stc
add
das
pop
lods
add
fcmovnbe
jns
and
push
test
dec
cmp
popa
xchg
xchg
xchg
iret
pop
add
cltd
bound
cmp
and
mov
pop
rcrb
je
add
je
xlat
jecxz
mov
xchg
mov
rcl
aam
mov
rcrl
pop
or
hlt
stc
push
jbe
jecxz
mov
imul
in
incl
popa
jae
ret
push
add
js
pop
scas
cmp
faddl
inc
sbb
aad
xor
enter
push
in
dec
jne
adc
rolb
pop
daa
inc
dec
mov
insl
lret
movl
inc
xchg
repnz
in
add
and
mov
and
mov
mull
icebp
cmp
inc
movsb
push
ficoml
or
out
xor
cli
pop
rcr
invd
addr16
rcr
daa
xchg
int
xchg
push
xchg
ljmp
test
test
cmp
and
insl
ds
arpl
mov
ja
into
lea
stos
pop
lret
mov
and
adc
unpcklps
es
leave
es
repnz
mov
stos
sub
or
cltd
xchg
leave
daa
xlat
jle
xchg
add
xor
fwait
jo
add
add
jo
xchg
xchg
andl
jne
inc
outsl
dec
cmpsb
or
push
test
xchg
cmp
out
mov
movsb
xor
mov
lret
push
and
cmp
cmp
or
sbb
or
jns
cmpsb
add
es
lcall
stos
fdivs
ret
pusha
xchg
nop
test
pop
cli
add
sub
xchg
jp
sbb
push
jmp
jne
sub
cltd
test
jno
adc
hlt
pop
xor
push
mov
or
mov
add
repnz
fwait
test
out
arpl
sbb
pop
es
cmpsb
pushf
test
jle
clc
mov
dec
jns
sbb
adc
xor
pop
fsts
lods
adc
mov
add
gs
push
lock
stos
lidtl
jecxz
fstp
inc
test
arpl
test
popl
pop
xchg
or
rcll
jg
xor
daa
cmp
shll
aaa
xchg
shr
dec
inc
add
inc
sti
divl
mov
jae
sub
test
ja
iret
and
pusha
ja
pop
imul
popa
xor
xchg
out
add
push
test
bswap
push
sbbl
loope
and
pop
sub
test
dec
data16
fisttps
lock
pop
les
adcb
or
and
mov
mov
push
pop
stos
lea
xchg
xchg
or
mov
iret
cmp
or
iret
add
adc
popa
xlat
pop
push
jp
sarb
scas
fldenv
and
test
pushf
sub
iret
out
jb
mov
cmc
jae
fstl
xchg
jge
xchg
mov
adc
jb
aaa
mov
out
pop
xorl
lea
jmp
ret
inc
cmp
call
or
and
push
sbb
xchg
xor
test
dec
aam
and
push
adcb
jecxz
and
jbe
cmp
into
xchg
sub
push
rorb
roll
add
sub
iret
lods
and
icebp
movsb
or
flds
sbb
stc
dec
xchg
dec
lock
inc
cmp
loope
cli
mov
aas
test
sub
and
adc
jb
imul
loopne
je
addr16
loopne
stos
jb
push
add
push
dec
cmp
dec
xchg
dec
xchg
sub
dec
loopne
mov
mov
mov
adc
rclb
cs
dec
push
sbb
gs
pop
or
push
fmul
pusha
das
dec
cld
or
or
pop
iret
push
push
daa
add
mov
add
movsl
pop
icebp
mov
push
nop
or
add
pop
adc
add
nop
sub
sub
pushl
add
cmc
add
cmc
jbe
loope
sbbl
lret
push
xchg
test
fdivrl
test
add
stos
je
fstpt
hlt
push
subb
rolb
nop
repnz
mov
dec
lods
in
fisttpll
insl
fmull
inc
dec
add
rclb
jb
call
cmp
aaa
or
js
jmp
pushf
adc
add
or
pop
xchg
sahf
sbb
lret
push
loope
ret
cmp
push
shl
pusha
cmc
imul
sub
sarl
gs
mov
mov
add
lock
enter
adc
sub
adc
dec
mov
jne
sahf
add
outsb
leave
jns
lds
xor
and
fnstsw
sbb
add
insl
outsl
cwtl
mov
jp
imul
push
mov
and
test
inc
arpl
das
data16
lock
stc
sbb
scas
movsl
mov
stos
jno
mov
arpl
add
in
xor
xor
add
push
adc
lods
cltd
inc
and
sbb
pop
sbb
push
je
pop
pusha
addb
or
repz
je
add
rol
stos
inc
or
sahf
mov
enter
insl
cmp
push
sub
data16
jnp
enter
es
dec
adc
add
pop
and
jae
add
adcl
push
cmp
ror
lea
xor
adcb
jnp
call
mov
mov
aam
jno
xor
jne
inc
sub
scas
or
pop
jbe
and
scas
mov
lea
jle
mov
mov
stc
add
inc
push
dec
pop
jns
out
adc
or
ja
and
mov
sbb
push
in
imul
lods
shlb
mov
mov
pusha
jne
jo
sbbb
mov
jle
mov
pop
xchg
mov
mov
daa
addr16
daa
sbb
sbb
push
add
push
adc
mov
jo
and
vprotd
and
repz
test
cmp
mov
sahf
and
dec
imul
inc
or
ficompl
dec
cmp
ljmp
lods
xchg
mov
inc
cs
lret
movsb
rcr
jno
mov
cmp
out
les
xchg
in
sub
imul
pop
sbb
push
pop
aas
push
test
sub
add
sbb
dec
and
or
insb
aam
daa
and
mov
and
mov
and
nop
xchg
ljmp
les
push
sub
inc
outsb
push
jecxz
scas
add
adc
or
iret
mov
dec
pop
pop
pop
add
loope
xor
aas
fildll
xlat
mov
xor
mov
lods
or
ljmp
add
aad
cmp
adc
test
stos
gs
fcoms
mov
das
pop
insb
cltd
fists
out
adc
mov
sub
movsl
pop
sub
pop
or
sub
pop
loop
add
into
mov
sti
pushf
loope
pusha
mov
cmpb
fs
push
divl
lcall
sahf
push
jp
lret
or
sarb
repz
cmpsb
les
and
cs
push
mov
xor
add
mov
scas
push
imul
sub
es
sub
mov
dec
and
jns
movsl
pop
push
pop
dec
ror
mov
sbb
stos
sub
fcmovbe
push
call
xor
bound
push
push
pop
dec
xchg
and
or
ja
add
and
xchg
lea
jmp
and
dec
popf
cmp
xlat
jle
imul
add
inc
imul
adc
sub
push
adc
ret
iret
add
cmp
lods
scas
imull
jl
mov
jno
lahf
mov
mov
or
popa
sahf
ret
iret
pop
and
push
faddp
daa
mov
mov
add
test
inc
loope
adcl
mov
shl
add
jns
movsl
xor
jb
mov
das
or
add
jl
add
clc
and
sbb
jo
mov
add
jecxz
movsl
aam
xlat
sahf
inc
xor
cmpsb
scas
popf
mov
mov
pop
push
and
cwtl
andl
subb
aas
scas
mov
adc
ret
adc
add
out
inc
notl
pop
jne
or
xchg
test
cmp
add
addr16
and
int3
scas
jge
outsb
scas
or
push
mov
or
icebp
jle
ret
jno
mov
inc
imul
add
jmp
cmp
out
adc
sbb
lock
les
pop
mov
subl
mov
lret
or
and
xchg
push
rorb
jno
es
daa
jo
cmc
jno
outsb
lock
sub
les
add
iret
xorb
dec
rorl
popa
imul
out
iret
repz
mov
outsl
adc
hlt
xchg
mov
inc
xchg
jg
daa
sbb
add
add
add
dec
sub
inc
adc
repnz
addl
lahf
push
insb
mov
inc
lahf
test
pop
lds
pop
sub
das
dec
jo
out
add
adc
add
shll
or
orb
and
shll
dec
sub
pop
fdivl
mov
cmpl
ret
pop
adc
shrb
aam
adc
lods
fstl
sub
lods
mov
and
sbb
jo
or
sub
inc
push
sbb
xchg
xchg
clc
mov
shlb
push
mov
xchg
jne
xchg
sbb
das
arpl
sbb
insl
inc
mov
dec
xchg
jno
test
cmp
sbb
insl
js
jp
inc
cmp
daa
imul
in
inc
das
and
or
or
ds
add
add
pushf
pop
iret
xchg
and
test
xor
fistps
xorb
push
pop
sbb
xchg
mov
pop
das
sub
andb
mov
in
out
dec
mov
and
js
sbb
lret
xchg
xor
push
jns
or
addr16
xlat
xor
aam
xchg
push
adc
add
push
iret
cmp
test
pop
fsubrl
outsb
dec
call
jbe
ret
jne
test
inc
or
mov
xor
and
fcoms
cld
push
icebp
ss
push
shlb
fmull
sbb
fcoms
into
popa
fcoms
dec
cmp
ljmp
or
add
sbb
inc
negb
and
insb
and
dec
sbb
aam
mov
xor
push
add
scas
dec
pop
or
dec
scas
mov
sbb
fwait
push
pop
dec
or
imul
jo
and
cs
inc
in
addl
jb
mov
mov
or
jo
add
movsb
pop
lods
add
movsb
lret
sub
bound
jae
add
rorl
insl
xchg
ficoml
and
and
gs
add
popa
sub
aas
loopne
cs
shlb
dec
xchg
sub
fmulp
adc
or
dec
jle
fcoms
mov
aaa
dec
pop
inc
dec
cmp
and
dec
lods
jg
adc
ret
pop
repnz
dec
outsl
push
arpl
mov
sbb
or
dec
dec
adc
call
sbb
sbb
nop
cmp
pop
sub
insl
or
jno
adc
loopne
mov
xorb
hlt
mov
imul
jne
adc
pop
roll
jnp
mov
test
cld
sub
xchg
ss
sbb
rcrb
es
int
clc
push
mov
hlt
jp
xor
iret
adcl
xchg
push
adc
ljmp
dec
jno
add
add
dec
or
xchg
dec
es
push
imull
sub
pop
or
and
mov
mov
sbb
roll
cmp
adcb
loopne
fidivrl
inc
mov
lock
imul
xchg
lahf
and
popl
mov
pop
sub
out
mov
jns
aas
pop
mov
stos
and
dec
stc
dec
mov
push
enter
data16
cmpsl
and
in
test
es
xchg
scas
mov
mov
inc
mov
xor
rolb
dec
das
ds
in
sahf
sti
and
movsl
push
xchg
mov
and
out
lods
dec
scas
lret
enter
imul
or
pop
sti
and
fs
mov
call
mov
jmp
je
les
jp
daa
dec
sarl
lcall
gs
dec
and
xchg
out
popa
and
lcall
push
into
inc
lret
loopne
pop
sti
test
xor
icebp
jge
mov
mov
sbb
mov
xchg
testl
xchg
aas
je
push
aaa
xchg
add
fwait
pop
or
inc
icebp
adc
lock
das
ds
add
xor
lcall
popf
loopne
pop
outsb
push
sub
add
pop
les
cmp
inc
loop
add
aam
push
ja
sub
aaa
sub
cs
fsub
enter
sbb
cmp
cmp
push
leave
pop
push
or
push
movups
aaa
xchg
sub
cwtl
fwait
push
jle
nop
roll
lcall
stos
das
push
and
movsb
enter
and
and
into
mov
and
xor
pop
or
daa
push
ljmp
ror
cwtl
arpl
out
sub
lods
jno
hlt
lcall
lods
jb
jne
in
cmp
cltd
add
adc
xlat
inc
bound
mov
lods
das
ljmp
insb
add
lret
lods
cmpsl
add
arpl
lods
fists
jge
or
mov
or
xor
push
add
rolb
sbb
pop
xchg
in
adcb
add
cs
xchg
jecxz
xchg
cmc
mov
cld
imul
fisttpll
mov
lahf
mov
idiv
std
icebp
imul
xor
or
mov
cmpb
jae
adc
and
orb
push
sbb
mov
imul
ds
mov
or
bound
push
and
pop
lods
dec
les
mov
pop
fwait
imul
and
pop
cmpsl
dec
xchg
dec
jmp
pop
mov
lods
add
bound
mov
mov
push
frstor
pop
and
or
icebp
in
add
lock
mov
mov
or
pop
pop
insl
sti
mov
cltd
xchg
xchg
rorb
add
mov
loopne
arpl
jns
mov
lahf
dec
les
fs
sub
sarl
push
or
mov
xchg
lock
insb
adc
lea
or
xor
add
lea
arpl
or
add
ficoms
dec
add
cli
push
mov
mov
and
mov
addr16
pop
adcb
xor
dec
test
pop
xor
mov
dec
adc
adcl
mov
fldcw
push
adc
mov
mov
pop
sahf
testl
dec
mov
mov
fisubs
out
imul
pop
int3
sbb
sub
stos
lds
add
jg
lret
sbb
sar
mov
mov
add
and
pop
pop
out
dec
ja
pop
add
rol
negl
imul
sbb
mov
push
cli
and
ret
pusha
lret
aas
or
inc
popf
or
lret
pop
iret
test
cmpb
jno
lods
dec
jmp
das
xor
pop
mov
notb
jae
jns
push
mov
out
icebp
inc
loopne
ds
xchg
add
push
pop
mov
or
xchg
mov
fwait
mov
or
push
fwait
push
loopne
adc
daa
dec
and
pusha
ds
mov
jmp
add
scas
outsl
sub
and
add
and
add
mov
lahf
rclb
mov
ljmp
push
lahf
repz
and
adc
scas
push
sub
dec
adc
js
and
iret
inc
xchg
add
jg
sub
test
test
pop
je
sar
das
inc
pop
mov
mov
outsb
scas
mov
add
xchg
xchg
sbb
cwtl
and
scas
aam
leave
cli
cmp
dec
mov
lds
pushf
sbb
int
add
rclb
inc
xchg
mov
cli
movsb
scas
sub
pop
leave
dec
pop
jbe
fisubl
add
mov
dec
push
das
pop
xchg
lods
sub
add
imul
mov
dec
push
out
add
jge
mov
popa
add
push
inc
jnp
xor
scas
popf
mov
filds
repnz
leave
cli
cmp
test
sub
das
pop
jns
inc
loopne
or
insl
jmp
cmpsl
pop
mov
pop
addb
sbb
sub
ffreep
xchg
popl
es
rcr
cmp
xor
fldl
sub
fwait
jmp
in
add
jnp
sub
mov
push
sub
sub
fbstp
je
pop
and
pop
fbld
jl
repnz
add
imul
pop
pop
jp
push
and
sbb
jmp
sar
adc
inc
inc
cmpsl
push
mov
push
in
add
les
dec
mov
xor
lods
and
mov
iret
mov
ret
int3
and
xchg
aas
fs
and
xchg
sub
lods
mov
mov
outsb
das
adc
xor
xor
add
shl
push
add
mov
add
pusha
sub
pop
out
push
xchg
lods
aad
notb
lahf
inc
loope
add
pop
fildll
sbb
push
mov
adc
pusha
pop
scas
cmpsl
jo
fwait
pop
loope
imul
insb
lahf
lds
jb
repnz
lods
fimull
xchg
subb
pop
or
aad
and
sub
jg
inc
jl
pusha
cmpsb
lods
fdivs
inc
dec
mov
push
pushf
and
cmp
push
fisttpll
ret
jmp
or
addr16
and
dec
mov
iret
repz
js
xor
lock
outsl
outsl
push
test
sbb
fldenv
jnp
roll
push
test
xor
mov
sub
add
imul
fs
mov
imul
movsl
mov
sbb
loop
xchg
adc
lods
xchg
call
xchg
jnp
jecxz
ss
nop
add
or
pop
pop
add
fwait
or
imul
sub
ss
fwait
pusha
nop
sbb
imul
lods
cmpsb
fs
mov
inc
inc
sub
and
stc
imul
mov
jns
fs
mov
cmp
lock
sbb
fisubl
loope
fnsave
adc
fcmove
test
sub
adcl
movsl
lods
in
lret
sahf
iret
cltd
test
sub
adc
xchg
and
dec
or
jbe
outsl
push
mov
add
cld
adc
mov
jnp
daa
mov
and
and
arpl
iret
test
sbb
out
add
xchg
stos
in
add
xchg
mov
ret
loopne
sub
bound
jnp
mov
les
pop
mov
mov
or
mov
and
dec
and
shrl
dec
pop
aam
daa
inc
mov
dec
loopne
jl
inc
ja
repz
clc
adc
pop
inc
or
daa
inc
or
clc
add
dec
cmp
xchg
mov
lods
xchg
inc
call
mov
dec
sbb
test
mov
sub
mov
stos
sbbb
jno
scas
push
jg
add
xchg
es
mov
push
loop
cmp
push
filds
sbbb
aas
push
int3
xchg
in
adc
sub
sarl
rol
add
es
mov
iret
pushf
xor
or
in
lcall
scas
lods
push
lods
stos
xchg
sub
xor
sbb
sub
sbb
icebp
movsb
out
sub
add
rolb
fcomip
daa
mov
aad
inc
enter
hlt
stos
sub
push
jge
adc
ss
add
bound
aaa
sub
pop
scas
xor
cmpsb
mov
sub
bound
dec
inc
loop
inc
cli
inc
mov
push
stos
shlb
jle
push
or
xor
data16
jge
push
mov
or
cmp
xchg
sbb
adc
xchg
fistl
or
lret
add
loop
xchg
clc
test
sbb
or
mov
fdivl
dec
mov
xor
sbb
mov
mov
xor
push
xor
lods
jp
mov
and
xchg
fisttpll
xlat
pop
cmp
push
js
mov
and
cmp
sub
popf
pop
pop
stos
sbb
add
lret
mov
cmp
push
dec
mov
mov
xchg
test
mov
mov
nop
add
mov
mov
cmc
cltd
xchg
pop
dec
pop
aas
gs
and
movsb
add
nop
test
sub
or
outsb
pop
inc
mov
pop
jle
xchg
jmp
loope
ret
insl
pop
cmpsb
pusha
jnp
mov
inc
xchg
xchg
movsb
arpl
das
aas
lods
jge
movl
testl
mov
mov
sti
cmp
add
cmp
cmpsl
inc
and
add
rcrl
push
aad
mov
cmp
out
out
add
mov
push
aas
loop
mov
jo
jmp
out
popa
repnz
call
push
sbb
sti
lret
jnp
xchg
adc
mov
push
ss
int
fmul
pop
mov
push
rcrl
and
lahf
mov
popa
sbb
push
add
add
rolb
sbb
sub
lock
mov
jmp
fs
ficomps
add
ret
sub
sbb
pop
add
roll
inc
adc
mov
loope
rorb
inc
push
jmp
test
adc
push
in
movsb
out
aas
add
or
loope
lds
dec
cltd
mov
and
stos
cmp
add
and
xchg
add
add
fldcw
ret
jmp
or
lret
dec
test
mov
ss
and
pop
cli
mov
jns
je
gs
clc
and
or
arpl
cmp
aam
fstpt
fs
or
sub
mov
push
loope
sub
and
jle
sub
frstor
aad
out
add
sub
jle
rcrb
insb
jg
xchg
subl
push
push
pop
dec
or
pop
xor
addl
sahf
js
enter
loop
lds
dec
inc
adc
inc
cs
cmp
pop
shlb
pop
test
pop
dec
jns
xchg
push
popf
or
out
shlb
xchg
lods
push
ret
jg
cmpb
inc
dec
add
inc
stc
push
sub
outsl
push
dec
add
mov
pop
fstps
or
daa
add
sbb
pop
push
scas
add
xor
imul
rcr
or
sbb
mov
mov
ret
jge
or
ja
add
rol
rcll
rcrl
dec
pop
dec
jle
nop
push
sub
cmp
enter
enter
adc
cmpsl
sub
adc
sbb
add
enter
adc
jge
movsb
push
push
add
cmp
mov
inc
jge
sub
sub
in
stc
lods
sub
test
add
xchg
insl
fistps
adc
inc
mov
fildl
ret
lods
push
lds
sub
filds
dec
jp
out
les
rcr
out
out
inc
xor
aaa
mov
mov
adc
jo
in
imul
or
cld
or
or
xor
xchg
daa
inc
nop
push
sbb
jnp
scas
test
xor
and
xor
jmp
add
adc
fistl
and
add
aas
inc
iret
xor
call
lret
adc
push
cmp
fiadds
in
mov
xchg
or
and
enter
jle
add
add
icebp
pusha
popf
cmpsl
mov
sbb
and
test
movsl
jno
ds
or
je
push
les
pop
lods
roll
jg
add
pop
dec
sbb
insb
loope
or
dec
shlb
pusha
lea
sbb
pop
movsl
push
mov
xor
enter
and
fimull
add
iret
aam
daa
je
repnz
or
xor
push
mov
or
and
lahf
pusha
fwait
dec
rcl
aad
jno
sbb
adc
cmpsl
sbb
adc
lcall
sbb
test
mov
pop
cmp
push
xor
cmp
icebp
les
ret
fadd
es
lret
mov
push
loop
mov
lret
mov
andl
icebp
mov
int
adc
cmp
lods
xchg
ror
lret
fstps
add
mov
loopne
jno
psrld
fs
test
iret
fwait
sub
rcr
jno
add
mov
pop
adc
push
in
push
xor
xchg
and
cmc
nop
test
xchg
xchg
and
add
and
mov
aaa
test
jle
pop
xor
push
sbb
mov
ds
scas
mov
adc
or
js
cmp
xchg
cltd
les
jns
mov
inc
mov
cmpsl
cmpsb
dec
mov
push
call
cmp
dec
mov
sub
add
mov
fadds
xor
sub
inc
ja
loopne
imul
je
loope
test
cmp
mov
in
es
data16
das
pusha
pushf
mov
jbe
sbb
inc
add
fwait
sub
mov
sbb
jno
cltd
rolb
jmp
and
lea
cmp
xchg
daa
lds
adc
dec
jmp
add
test
xor
stos
mov
rcll
push
jb
sub
xor
mov
push
mov
test
jo
cmp
mov
cmp
frstor
jns
mov
jecxz
xchg
xorl
and
pop
adc
push
push
mov
cmpsl
pop
pop
fldl
lahf
lock
inc
xchg
lds
sbb
cmp
xchg
cs
or
movsb
dec
into
js
jecxz
faddl
add
negl
xchg
adc
or
mov
add
pop
loope
enter
mov
rclb
movsb
sbb
test
cmp
pop
int
jle
xor
sbb
stos
adc
mov
rcll
mov
xchg
dec
imul
adc
test
mov
imul
cltd
pop
or
cmpsl
xor
movlhps
pop
sbb
and
xlat
pusha
sub
push
pusha
int3
insl
or
add
adc
iret
sub
mov
mov
pushl
mov
loop
in
cmpsb
or
push
fstpt
mov
or
scas
mov
dec
cmp
sarb
xchg
jmp
sub
jne
popf
rclb
and
test
inc
jl
das
xor
jo
or
stos
pusha
enter
lcall
std
rclb
jge
and
fucomip
test
iret
cmp
das
pop
add
aaa
incb
jno
int3
inc
arpl
adc
or
add
sbb
mov
or
sbb
or
sub
popf
loopne
icebp
adc
add
test
je
aaa
pop
and
insl
stos
sbb
adc
mov
adc
or
fmull
xchg
and
pusha
xor
ds
je
pop
xor
rolb
push
xchg
scas
daa
add
push
adc
lea
mov
into
pusha
pop
xor
inc
jo
movsb
dec
psrld
inc
divb
adc
fcoms
loope
jecxz
inc
add
sbb
jge
xchg
jle
in
cld
lahf
mov
lret
and
pop
pop
ret
fwait
jl
fsubl
mov
rcrb
test
test
out
into
mov
add
mov
fcmovnb
push
in
cmp
adcb
inc
aas
mov
sub
lret
arpl
add
jns
add
rorl
add
mov
jl
pop
dec
fildl
jbe
dec
inc
xchg
pusha
mov
sbb
popa
mov
or
mov
or
lods
sbb
cltd
add
mov
sbb
lds
int
or
cmpl
mov
or
inc
inc
add
push
ret
cmpsl
sbb
sub
push
mov
int3
fldl
sahf
bound
push
sub
rcrb
xchg
mov
xchg
test
inc
pop
movsl
add
xor
add
fistpl
and
fnstsw
fninit
adc
xor
sbb
sbb
sbb
repnz
addr16
add
and
add
sub
cmp
cmp
xchg
and
mov
loope
rcrb
push
aaa
inc
in
sub
inc
and
pop
test
adc
inc
lds
rcr
bound
pop
mov
mov
test
xor
sbb
xchg
xlat
adcl
adc
outsl
xor
rolb
jecxz
lods
or
sub
shl
jbe
mov
sbb
shrl
arpl
insl
mov
xor
loope
pop
in
jl
xchg
inc
fwait
xchg
outsb
test
aam
shrl
or
in
xor
sbb
pop
mov
add
dec
lock
or
push
data16
mov
inc
pop
jmp
loop
daa
ret
adc
jae
add
movsb
and
jo
je
push
cli
movsb
nop
leave
sub
mov
cmpl
or
mov
xlat
dec
push
int3
and
lods
lods
orb
fnstenv
xchg
xor
mov
push
stos
sbb
nop
test
and
sub
dec
mov
dec
jae
mov
or
scas
jnp
mov
adc
mov
push
sbb
ret
jl
xor
jl
ds
dec
push
add
ret
mov
push
xchg
add
xor
add
in
xchg
scas
out
fdivrs
and
xor
dec
push
lds
dec
dec
mov
inc
insb
xchg
aas
sbb
outsl
sub
movb
insl
jo
push
or
push
xrelease
push
aad
and
cs
sbb
into
xchg
das
cmp
adc
push
adc
cmp
mov
cwtl
js
push
cmp
std
stos
xchg
push
gs
mov
push
or
add
and
icebp
xchg
aad
jne
push
sbb
daa
adc
jg
sbbl
sbb
mov
sbb
sbb
cmc
xor
or
sbb
and
aaa
push
call
inc
outsl
cmp
mov
jp
insb
mov
flds
mov
data16
scas
xchg
flds
push
shrl
xchg
scas
pop
int3
arpl
aam
out
mov
add
insl
adc
leave
mov
mov
adc
xchg
mov
and
xchg
inc
xor
sarl
scas
xor
mov
inc
lea
cmp
lods
mov
cmp
push
add
outsl
add
test
and
and
cmp
ret
fisttps
popa
in
xor
inc
add
add
or
daa
add
pushl
xchg
or
add
xor
imul
shrb
cs
es
or
jnp
adc
imul
rolb
daa
cwtl
in
xor
add
xor
xchg
or
cmp
cmp
lds
lock
mov
lcall
adc
popf
bound
and
or
scas
enter
out
lds
lock
lret
mov
or
dec
pop
int3
push
out
jne
add
adcb
pop
push
fcoml
iret
push
cltd
sub
sub
and
inc
pop
movl
jo
lea
mov
and
cmp
test
rclb
icebp
sbbb
jno
insl
imul
mov
shrb
xchg
ss
shlb
les
movsl
scas
repz
pop
in
mov
insl
jns
inc
inc
cmp
shl
lds
int3
lock
sbbl
sbb
pop
add
andb
add
mov
sub
and
js
or
pop
dec
mov
mov
cmpsb
mov
and
mov
mov
sbb
sub
mov
xor
test
roll
arpl
aaa
iret
add
loope
pop
pushf
push
adc
add
xor
push
cmp
lret
nop
mov
fisubl
fdivl
pusha
push
or
inc
mov
dec
ret
mov
es
cmp
sarl
adc
add
insl
xchg
xchg
test
and
push
cmp
dec
sub
mov
adc
sbb
int3
shrl
les
mov
adc
pop
adc
pushl
inc
xchg
pop
leave
push
scas
xchg
nop
pop
push
add
ja
mov
lret
adc
mov
rcrb
lahf
sbb
or
daa
sbb
insb
add
andl
adc
bound
mov
add
sbb
adc
xchg
testl
inc
inc
xor
repz
shrb
adc
popa
mov
pushf
daa
or
xchg
imul
or
or
and
cmp
add
addb
pushf
sti
xchg
aaa
and
test
aad
jbe
rorb
xor
sbb
cwtl
and
into
les
pushf
inc
test
xchg
xchg
sbb
test
xor
int
cmp
cmp
pop
movsl
xchg
cmp
push
sub
xor
sub
das
sub
shlb
add
push
cmc
lcall
xor
jo
inc
jae
stos
or
sbb
ss
lods
leave
lcall
gs
pop
fwait
pop
popa
cmp
aas
xchg
imul
data16
inc
sbb
sbb
or
lods
push
xchg
cmp
rolb
add
xchg
mov
add
movsl
imul
notl
sub
mov
or
shrl
add
test
fisubrs
ret
adc
or
jmp
fiaddl
or
out
cmp
ss
push
test
ljmp
inc
mov
push
cs
pop
and
xor
pusha
mov
xchg
pop
icebp
in
xchg
push
push
push
or
mov
xchg
xchg
add
mov
xchg
mov
sub
rcll
andl
xor
and
ss
sub
push
adc
imul
jp
les
dec
ret
imul
add
fwait
add
dec
xor
xorl
xchg
add
das
inc
jecxz
test
loop
dec
sbb
add
dec
bound
xchg
inc
xchg
pop
fiadds
adc
in
mov
inc
sbb
into
es
cmpsl
jl
or
add
pop
inc
cltd
or
sbb
rol
adc
sbb
popa
mov
in
jno
mov
sbb
roll
ret
jo
lea
or
rsm
mov
xor
sub
add
xchg
lret
mov
dec
imul
adcb
or
scas
and
jp
add
popf
cltd
movsb
pop
push
xchg
fisubl
addr16
pop
xor
or
cmp
lahf
ret
cwtl
add
push
mov
popf
js
xchg
xor
fwait
or
mov
out
and
adc
add
or
loop
je
adc
jge
add
test
mov
xor
xchg
push
dec
mov
mov
push
mov
push
sub
push
fs
jge
pusha
sbb
cld
aas
data16
push
lods
mov
lods
push
or
dec
pop
jl
pop
in
fs
lds
inc
push
sbb
pop
add
icebp
shll
sbb
imul
adcb
mov
mov
shr
rolb
pop
xchg
ss
das
loop
add
jb
jo
out
jns
movsb
add
into
sbb
jns
and
arpl
adc
adc
shr
popa
add
or
fisttpll
xchg
xchg
adc
add
jno
mov
rolb
dec
or
aaa
sbb
add
xchg
ds
clc
pusha
add
add
lahf
adc
xchg
sbb
inc
dec
rdpmc
jne
pop
cs
xchg
mov
cmp
ret
push
jno
je
jbe
leave
add
jno
xchg
stc
mov
mov
roll
jl
fiaddl
fdivr
mov
jnp
movsl
mov
outsl
sbbl
jns
lret
ja
add
mov
cmpl
stos
dec
xchg
xchg
subb
mov
push
xor
jecxz
lds
jecxz
pop
leave
mov
push
sbb
call
and
test
push
or
fidivrs
and
sbb
and
sbb
clts
jo
roll
roll
ds
enter
aaa
jns
mov
add
push
push
loope
aaa
jbe
pop
ret
rcr
rorb
sbb
fsubrl
xchg
jno
jmp
enter
in
mov
xchg
out
lds
mov
imul
scas
aaa
rolb
dec
pushf
js
xor
inc
ret
jb
xchg
or
push
adc
jmp
out
mov
sub
cmpsb
gs
xor
push
and
wrmsr
inc
adcb
pop
in
sbb
imul
push
movb
test
xor
out
in
pop
cmp
xor
add
xchg
mov
insl
jnp
dec
inc
addb
shrl
lock
mov
push
ret
sbbb
push
add
sub
mov
mov
lods
dec
rcrl
ffreep
outsb
in
mov
adc
repnz
xor
popa
jl
jno
xor
movl
call
push
pop
js
dec
das
xchg
mov
fildll
jle
test
sub
sub
das
jmp
add
cmp
loop
sub
int
jbe
sub
imul
fsubs
imul
mov
and
sub
fists
call
fs
in
loope
sub
rcll
loop
mov
xor
inc
scas
jmp
out
sub
mov
sbb
push
and
out
xchg
outsl
popa
sub
xor
lcall
add
pusha
sub
fwait
inc
pop
dec
fwait
and
cmp
dec
mov
pop
addr16
sbb
sub
xchg
xor
pusha
fcomps
add
adc
loopne
mov
stos
cmc
sub
in
incb
jp
push
xchg
lahf
xor
xchg
aas
jns
dec
rolb
mov
or
test
les
mov
push
xlat
pusha
cmp
inc
push
cmp
inc
push
aad
dec
out
out
test
nop
fistps
pop
and
add
dec
or
clc
jl
jno
fadds
aaa
add
or
test
aam
mov
int3
je
sahf
mov
push
mov
cmp
imul
mov
mov
movd
mov
adcl
inc
or
pop
adcl
inc
pop
insb
and
add
movsl
inc
or
into
out
push
adc
shll
hlt
push
mul
stos
test
scas
js
fsubrs
dec
and
imul
pop
je
push
sahf
movsl
mov
xchg
shrb
fdiv
and
cmp
pusha
adc
loop
add
bnd
mov
push
dec
add
iret
popa
repnz
add
adc
lods
std
push
js
xchg
loope
or
xor
xchg
mov
in
lea
lcall
inc
inc
imul
outsb
daa
mov
gs
mov
incl
repnz
push
cmp
sub
lea
mov
push
test
sub
sbb
pop
dec
mov
or
and
jbe
addl
es
sahf
cmpsb
rcr
jo
and
or
pusha
add
lea
bnd
or
mov
push
add
mov
out
and
push
or
jnp
cmp
cmc
sbb
shlb
xchg
push
mov
movsb
pop
adc
andb
mov
ljmp
mov
scas
iret
dec
arpl
iret
loope
ja,pt
add
and
mov
mov
xlat
sbb
cmpsl
dec
ljmp
dec
nop
out
test
or
adc
adcb
xorl
jo
rorl
xchg
xchg
lods
or
aad
mov
mov
add
clc
sbb
jmp
sub
outsl
lret
cltd
test
pop
cmp
and
sub
adc
daa
lahf
mov
dec
or
push
cmp
inc
or
hlt
aad
and
mov
mov
outsl
das
sbb
lcall
addb
xchg
cmpl
push
imul
inc
and
mov
rcl
xchg
sbb
adc
and
sbb
stos
cwtl
rol
xchg
ret
js
mov
jmp
lods
lea
or
push
sbb
sub
adc
and
inc
test
and
jno
mov
sbb
pop
xor
inc
sbb
jno
push
sub
lret
subl
outsb
jge
add
mov
adc
adc
mov
add
mov
fiadds
ja
es
daa
jns
pop
fsubs
and
packssdw
push
inc
inc
sbb
cmp
dec
ja
bound
sub
sti
test
loope
aam
sub
xor
xor
sub
mov
outsl
cmpsb
out
mov
mov
push
adc
cmpsb
sub
sbb
mov
fcoms
imul
mov
ret
jo
mov
pop
and
sub
jno
mov
clc
jns
fdivr
mov
cmpsb
push
imul
mov
pop
sub
mov
push
jg
cs
cmp
xor
add
adc
add
mov
clc
pop
cmc
adc
sbb
add
inc
or
aas
adcl
je
inc
dec
and
mov
daa
mov
pop
fmulp
outsl
mov
add
das
and
pop
movsl
stos
lock
and
adc
stos
mov
int3
testb
adc
lods
sub
xor
mov
cs
les
das
cmpsb
lret
xchg
cmpsl
jae
outsb
adc
fmul
mov
push
and
sub
xor
jg
pop
call
adc
jne
js
sbbb
js
mov
jle
pop
push
add
pop
mov
xchg
testl
iret
ret
cmc
push
pop
mov
adc
add
test
ret
je
xchg
xor
and
push
ja
push
dec
xlat
movsb
or
pop
push
adc
xor
mov
push
jo
adc
int3
pop
add
stos
or
stos
test
jnp
mov
loopne
mov
int
shr
adc
jbe
inc
sub
add
sub
sub
inc
lret
and
add
bound
jle
push
lret
sub
xchg
outsl
xlat
das
pop
js
or
test
popa
pop
xchg
cwtl
or
lahf
notl
jb
je
adc
dec
pop
loope
push
sub
sbb
mov
lahf
mov
mov
addr16
xorl
stos
loopne
lods
add
leave
rorb
xchg
aam
cmp
xor
lcall
jl
in
xchg
pop
mov
daa
add
sahf
aam
push
scas
fadd
add
jle
jae
imul
ret
sbb
push
ret
lahf
int3
xor
add
dec
push
inc
push
shlb
add
shr
lea
pop
negl
sbb
sub
push
inc
mov
sbb
jl
cmp
or
mov
jbe
push
inc
xlat
aam
cltd
sub
push
mov
faddl
jp
xlat
adc
lock
xchg
push
inc
popa
faddl
mov
pop
mov
cmpsl
aam
push
inc
xor
sub
jmp
das
push
std
add
adcl
andl
les
rcrl
add
dec
jmp
fbld
add
jg
scas
mov
mov
add
jbe
dec
outsl
movsb
push
outsl
fdivl
push
sub
and
je
adc
ja
ja
shrb
bound
js
repz
les
or
in
fmulp
and
repnz
cmpsl
pop
fdivs
mov
adc
add
mov
xchg
push
or
inc
fwait
push
lea
sti
dec
lret
mov
dec
sbb
jno
pop
push
xor
stc
pop
xchg
shlb
xlat
dec
xchg
mov
je
cmp
push
aad
iret
inc
fildl
xchg
loopne
jmp
fdivl
add
push
cmpsb
pusha
popf
test
push
sahf
scas
leave
and
arpl
ds
arpl
push
loope
pop
adc
mov
add
or
jp
leave
mov
sub
leave
loopne
lea
adc
add
jnp
xor
jb
sub
aam
test
xor
mov
daa
out
pop
mov
ds
sub
jmp
test
xchg
or
dec
mov
or
dec
mov
inc
jp
jl
fiadds
or
stos
mov
jle
sbb
add
jns
mov
test
out
xchg
jno
in
mov
inc
jge
es
dec
xor
pop
sahf
lcall
adc
xchg
nop
sbb
pop
popf
andb
pushf
and
or
xlat
fisubrs
xchg
or
dec
jne
stos
orb
add
pop
cmpsl
xor
inc
add
fnstcw
dec
js
mov
rolb
fwait
icebp
insb
and
lock
jge
mov
pop
lea
or
bound
mov
test
xchg
cmp
ja
je
or
mov
xchg
iret
lods
cmp
movsl
ret
cmp
cmp
cmpsl
dec
fadds
arpl
insl
push
xchg
fdivs
jno
adc
and
xor
lret
addr16
add
mov
jns
add
sbb
mov
xor
enter
sbb
pop
and
pop
and
mov
pop
dec
adc
in
mov
inc
push
dec
pop
inc
or
add
xchg
and
sub
xorl
adc
imul
xchg
or
es
add
add
lods
es
rolb
sti
sub
iret
pop
loopne
add
test
rorb
push
mov
dec
sarb
pop
rclb
pop
addl
and
jmp
sbb
mov
scas
add
pop
adc
add
and
orl
sti
adc
sub
aaa
adc
out
rcl
bound
scas
add
bound
jno
inc
out
adc
imul
and
add
jbe
test
lea
or
fsubrs
mov
add
adc
imul
sub
and
mov
shll
mov
ss
sbb
or
or
xor
aam
loope
or
xchg
insl
add
add
xchg
insb
dec
xchg
xchg
ds
add
adc
pop
test
sub
mov
xor
test
add
adc
sbb
or
sub
addb
push
add
fsubrl
push
sbb
mov
or
jns
push
aad
ret
pop
out
rcl
xor
outsl
inc
lret
in
xor
scas
add
fadd
sub
and
inc
sub
push
lea
aad
nop
push
test
adcb
and
fldl
cmp
inc
mov
lcall
fbstp
inc
or
push
mov
push
push
adc
or
adc
idivl
inc
mov
ja
addb
jmp
and
push
sbb
jnp
or
xchg
jge
push
cwtl
imul
adc
jg
and
jne
sub
and
add
cmp
jnp
push
push
into
add
mov
clc
pop
cli
cwtl
bound
jno
add
and
cmp
cmp
sub
push
lods
add
adc
cmp
jnp
add
sbb
lods
push
sbb
imul
shlb
call
mov
add
sarb
push
cmp
push
dec
test
dec
mov
bound
and
mov
dec
jl
shlb
add
sub
add
push
mov
repz
test
in
clc
lods
xor
sub
cmpb
jno
es
iret
faddl
je
or
jno
movsb
sbb
adc
xor
outsl
call
pop
loopne
mov
or
insb
dec
sub
push
les
lock
dec
jne
fadds
push
sbb
mov
or
add
and
sti
das
sar
jecxz
mov
add
add
or
mov
daa
jmp
nopl
xor
add
mov
addb
inc
lcall
jo
push
mov
ret
xchg
adc
scas
adc
inc
or
cltd
add
ss
mulb
cwtl
test
and
cmp
xchg
iret
testl
jecxz
pop
adcb
xchg
incl
jns
adc
add
or
inc
inc
fistps
bound
sbbl
add
sbb
aas
test
daa
and
in
popaw
inc
adc
faddl
add
popa
aad
test
les
pop
mov
add
or
mov
add
pop
push
ss
das
or
imul
pop
cld
popa
sub
inc
outsl
daa
jbe
add
jne
icebp
ja
loope
les
or
xorl
das
stc
add
addr16
inc
cmp
mov
push
or
or
orl
fwait
outsl
bound
sbb
out
add
mov
xor
lods
popa
add
inc
mov
movsl
sbb
lret
add
punpcklwd
and
push
pusha
mov
aas
mov
adc
add
test
xchg
dec
mov
imul
ret
pop
rolb
fld
ret
cmc
cld
mov
sub
sbb
test
adc
xchg
sbb
mov
fcoms
xor
add
bound
test
or
push
jmp
jl
or
push
aam
lds
sahf
out
jl
xor
testb
aam
sub
sbb
sbb
les
xor
das
and
and
pop
repnz
pop
call
push
cs
sub
sbb
repnz
lea
movsl
dec
xchg
mov
inc
aas
or
adc
stos
sub
ret
cmp
mov
add
leave
xor
lret
add
add
sub
xchg
add
fs
jecxz
sub
mov
or
jl
lcall
jl
push
xchg
dec
dec
movsl
dec
cmp
and
daa
out
add
and
mov
xorb
xlat
adc
push
lahf
ret
pop
xor
fildl
stos
js
stos
jne
mov
lea
adc
jmp
mov
dec
and
or
ja
sub
addr16
pop
push
icebp
rorl
testb
xchg
adc
xor
xchg
popf
and
fisubrs
mov
dec
jecxz
add
xor
jo
jne
adc
fcmovb
sbb
mov
mov
pusha
sub
dec
out
pop
cli
enter
mov
lret
outsl
pushf
jecxz
sub
cmp
push
test
pop
push
or
hlt
mov
pop
fiaddl
jg
mov
fnstsw
sbb
add
sti
pop
nop
gs
and
adc
fisubrs
dec
push
incb
ret
cmc
pop
add
out
jno
adc
orb
mov
dec
pop
mov
call
dec
xchg
add
mov
fst
push
ja
in
xchg
pmulhuw
shll
roll
cmp
or
jl
mov
xchg
inc
insl
adc
inc
xchg
cli
sub
ret
inc
stos
daa
test
add
mov
jno
leave
fiadds
pop
cld
add
scas
icebp
stos
xor
dec
push
sub
and
push
loopne
pushl
pop
loopne
jl
ret
mov
cs
divl
or
scas
mov
pop
push
dec
xor
sub
rorb
mov
clc
sbb
pop
dec
lods
mov
divl
popl
stc
rol
cmpsl
mov
fsts
fdivr
jge
std
and
jae
sub
sbb
sbb
push
ficoml
cmp
cmp
pop
mov
imul
mov
shrb
adc
inc
call
popa
cmp
mov
sbb
bound
sbb
or
pushf
inc
sbb
mov
loopne
test
ljmp
adc
sub
and
sti
out
test
das
mov
mov
sti
push
jae
xor
lock
lds
outsl
xchg
dec
pusha
sub
leave
jo
adc
jp
add
scas
dec
scas
nop
loope
pop
or
inc
int
lods
imul
arpl
sbb
sub
les
mov
dec
mov
xchg
xor
dec
xchg
scas
jle
es
aas
or
or
sbb
or
addb
loopne
inc
or
xor
lock
loopne
mov
ss
pop
dec
or
enter
loope
jp
xor
push
add
stos
addl
dec
popa
xchg
xorb
or
insb
imul
or
popa
xchg
xchg
les
add
and
mov
sahf
jp
das
push
add
movsl
out
xchg
jne
icebp
aad
in
cmp
sub
mov
cmp
ret
lret
push
inc
out
repz
cmp
inc
out
inc
shl
fidivrl
mov
iret
push
inc
cmpsb
jbe
jp
pusha
add
and
mov
and
sbb
roll
add
xchg
leave
dec
pusha
add
jae
or
xorl
sbb
arpl
out
sahf
jle
mov
inc
sbb
mov
adc
sets
dec
or
pusha
sub
cmc
popa
or
push
sbb
cmpsl
mov
adc
mov
inc
test
mov
in
sub
loopne
fsub
xchg
adc
jo
lret
mov
cmp
xchg
pop
cli
add
xchg
enter
push
xor
pop
or
xchg
inc
mov
addb
or
adcl
jmp
cmp
or
add
lahf
jl
sarb
mov
sti
scas
shrl
andb
mov
sarl
loopne
lret
jb
mov
daa
pop
cmp
mov
sub
cltd
nop
popf
mov
cmc
mov
inc
mov
or
dec
sbb
rclb
es
out
sub
cmp
cmpsb
add
cwtl
stos
lea
push
add
or
movsb
push
mov
roll
pop
pop
push
or
neg
es
pop
cmp
jb
or
push
push
dec
push
test
mov
mov
in
sbb
sub
scas
add
movsl
pop
pop
es
sub
push
xchg
xchg
jg
jno
adcl
out
xchg
xchg
sahf
lods
push
dec
and
mov
ss
jmp
popf
or
lods
inc
inc
lret
aas
mov
fistl
jno
push
sub
out
ljmp
test
dec
loopne
sub
mov
push
sub
in
mov
pop
clc
inc
adcb
outsl
mov
jno
call
jmp
pusha
jb
outsb
mov
and
inc
xchg
sti
ss
inc
inc
jnp
insb
pusha
lea
cwtl
adc
cmp
movsb
push
loope
fistl
pop
enter
ret
add
lods
or
out
adc
mov
or
rcr
daa
sbb
sbb
aaa
movsl
sub
sbb
aam
enter
dec
dec
outsl
dec
mov
fisttps
jmp
incb
clc
loopne
xchg
add
outsb
push
push
fwait
sub
xchg
xchg
sub
adc
fcomps
ss
xlat
imul
es
push
xchg
fs
scas
push
stos
fildll
add
imul
les
stos
pop
int3
pop
sub
add
mov
ds
fbld
push
pop
into
push
test
add
jno
or
daa
fisubs
stos
mov
imul
fbstp
pusha
xchg
dec
in
xor
incl
cmc
and
push
popa
jo
adc
jmp
cmc
shl
in
push
cmp
mov
mov
sub
mov
add
push
pop
add
xor
ss
inc
in
sub
imul
add
fwait
jbe
loopne
fs
mov
je
ss
out
mov
adc
lcall
push
sub
mov
ret
xor
clc
push
or
cmpsb
xchg
and
jecxz
hlt
xor
pop
shrb
push
mov
shlb
call
rolb
add
rcl
testb
in
sbb
inc
pop
aad
mov
pusha
dec
ret
loope
jle
faddl
add
xchg
test
pop
mov
decl
mov
rol
call
stos
shlb
in
mov
and
xor
lods
imul
popl
dec
cmp
les
out
sti
test
mov
inc
rcrb
je
sbb
add
cmp
ret
pop
shrl
and
movb
push
and
xor
adc
xor
push
pop
push
dec
mov
sbb
out
xchg
xchg
add
pusha
pusha
sbb
in
jecxz
and
icebp
push
cmovg
loop
pop
lock
fldenv
adc
dec
sub
out
shll
cs
mov
add
pop
jmp
mov
insb
lods
ficomps
add
ficomps
cmpsb
jecxz
push
jae
adc
xor
pop
fcoml
scas
insb
ret
loopne
lock
out
shl
and
push
push
movsl
inc
xor
jl
aaa
outsl
icebp
jo
jno
jb
fisubl
ljmp
dec
xor
mov
sbb
jnp
mov
aam
xor
add
dec
test
and
in
sub
test
fistpll
or
hlt
cmpsb
mov
adc
mov
xchg
clc
add
sbb
lock
fsub
xor
lods
es
decl
mov
scas
shrl
neg
test
mov
mov
mov
frstor
lods
xchg
add
scas
fiadds
mov
hlt
aaa
dec
inc
test
sbb
inc
andb
and
xchg
add
jg
test
adc
and
mov
or
mov
inc
or
push
repnz
or
xchg
mov
cmp
mov
and
cmpsb
push
test
pop
iret
dec
xchg
aaa
mov
call
jo
shrb
push
push
mov
in
imul
imul
push
xchg
add
test
shrb
xchg
adc
lods
daa
add
xchg
cmc
jb
daa
inc
xchg
gs
add
add
add
xchg
sbb
in
dec
cmpsb
xchg
add
mov
push
xchg
add
ljmp
add
or
testb
scas
cmp
sbb
mov
fists
lcall
add
mov
add
jl
outsb
push
cld
cmp
out
xor
cmp
sbb
insl
loop
call
adc
xor
add
and
test
rol
push
add
xor
or
add
sub
xchg
mov
test
pop
sbb
iret
sbb
mov
cmpsb
in
pop
fists
out
cmp
push
loopne
xchg
into
frstor
or
shl
adc
cmp
js
scas
lds
pop
adc
out
adc
xchg
inc
inc
inc
push
iret
add
add
and
and
std
std
roll
fwait
or
sub
or
add
iret
mov
addps
cld
dec
in
pop
scas
cmp
mov
into
jo
icebp
jne
je
dec
and
cmp
jo
xchg
stos
mov
jle
fs
cmpsb
jl
push
sub
xchg
outsl
xor
or
jmp
fadds
push
ds
nop
sbb
dec
js
push
sub
imul
flds
shlb
and
jne
or
hlt
rcrb
pop
xor
sub
pop
pop
adc
jecxz
ja
loope
xchg
ljmp
jp
pusha
jp
shll
mov
pop
cmp
in
sub
test
mov
flds
push
jbe
add
mov
loope
pop
or
or
jns
int3
fmulp
rcrl
inc
icebp
and
mov
pop
pop
inc
cs
dec
inc
pop
pop
lods
push
ret
mov
js
pop
cmp
cwtl
cmc
mov
mov
add
mov
shrl
movsl
xchg
sub
mov
lret
xchg
jp
xor
in
stos
repz
iret
xor
mov
push
sbb
pusha
xor
es
xor
push
hlt
push
lea
mov
fistps
iret
xchg
sub
sbb
and
les
pop
test
ss
jp
dec
inc
sbb
rcrl
jmp
inc
cmp
and
and
and
aam
or
int3
lea
cwtl
call
lods
clc
and
je
inc
loope
push
sbb
lret
pop
or
or
aaa
orb
push
sub
sub
add
pop
inc
insb
sbb
arpl
inc
mov
idivl
bound
fnsave
jo
in
ret
and
add
lods
add
stos
movb
jbe
movsb
sub
inc
xchg
test
pop
rcrb
jne
pop
rorb
sbbb
xchg
inc
mov
in
loope
test
or
or
jge
dec
cmp
xor
adc
mov
push
loopne
push
xchg
fucomi
add
xchg
lahf
lahf
clc
push
adc
pop
fistl
fstpt
adc
rsm
mov
in
cmpsb
roll
add
nop
sub
in
lods
lock
pop
call
loop
inc
inc
add
mov
adc
lds
sub
in
js
adc
and
pop
push
and
pop
mov
mov
outsl
ret
sub
xchg
insl
enter
fists
inc
scas
push
movsl
movsb
jo
sub
mov
mov
fsubl
sbb
ret
add
xor
int
movzwl
jb
cmp
adc
adc
arpl
inc
getsec
ret
cltd
adcl
or
and
es
popf
sbb
iret
push
clc
mov
ja
loop
xor
jno
xchg
ja
sub
xchg
add
xchg
sub
sbb
ljmp
popa
adc
ljmp
insb
shr
pop
xchg
sub
loopne
lock
xchg
inc
pop
adc
data16
lods
and
inc
mov
add
int
int
pop
aaa
inc
mov
inc
inc
add
and
sysenter
and
popa
pop
data16
cmpsb
xor
jbe
aam
push
jmp
fwait
xchg
xor
push
lock
xchg
push
cmp
inc
and
pop
insl
sub
ja
lcall
jo
imul
xor
jp
fstl
subl
cltd
push
jne
imul
imul
adc
adc
lods
cmp
inc
stos
loop
mov
sub
nop
popa
or
sub
out
mov
icebp
loope
or
add
xor
fdivl
jmp
xor
cmp
or
int3
ror
xchg
lods
iret
dec
arpl
xor
mov
sub
inc
cmpsl
push
popa
nop
stc
xlat
loopne
inc
or
fwait
lods
ljmp
pusha
pop
aad
adcb
pop
popf
sub
bound
lods
rcrb
mov
xor
mov
cmpsl
sub
add
jo
stos
xlat
stos
movsb
ficompl
loopne
jo
cmp
push
sbb
fs
xchg
shrl
jo
dec
jp
jp
inc
fmuls
push
and
lret
iret
inc
pushf
rcrb
mov
test
xchg
lret
fisttpl
adc
cmp
push
xor
cmp
outsb
rol
jb
mov
and
cwtl
add
adc
add
mov
and
add
sub
add
rclb
or
pusha
fs
xor
out
icebp
imul
jle
adc
iret
cwtl
adc
shl
loop
icebp
xchg
mov
in
sbb
adc
addb
mov
push
call
js
hlt
sbbb
std
sbb
adc
xchg
out
data16
rcrl
dec
movsl
lds
dec
push
into
incl
inc
sarb
lock
xchg
pop
and
fidivrl
mov
shl
test
adc
mov
or
jl
clc
sub
cmp
adc
call
jmp
or
ss
ret
push
xchg
ja
xor
cwtl
sub
sbb
loope
out
jle,pt
out
mov
sbb
scas
xor
lea
cmp
mov
pop
xchg
cld
aad
mov
cmpsl
pop
pusha
inc
adc
ftst
inc
movsb
fbstp
mov
jmp
or
in
pop
push
add
and
and
add
push
cwtl
inc
xchg
push
adc
hlt
lahf
sub
jp
imul
push
xor
add
push
fldcw
cltd
push
test
push
fsub
sbb
rcll
test
pop
add
lret
dec
lods
fiadds
push
loopne
fcoml
and
repnz
into
add
and
cmpsb
cmc
test
gs
xchg
mov
clc
aas
mov
das
or
movb
mov
push
mov
jge
adc
jo
je
pop
pop
or
lea
jne
ja
push
mov
push
movsl
call
pushf
and
iret
jp
xchg
xchg
mov
lods
xchg
ds
sti
mov
and
xor
fsubrs
imul
xchg
sub
sub
je
mov
jo
sub
mov
loope
jmp
cmpsb
aad
sbb
pop
cmc
xlat
push
mov
fsts
sbb
inc
outsl
mov
or
mov
fninit
and
pushf
cmc
lock
mov
inc
icebp
enter
or
xchg
roll
mov
out
ljmp
hlt
add
cmpb
inc
adc
mov
adc
inc
sbb
les
add
mov
or
adc
es
subb
pop
mov
dec
cmp
xor
daa
inc
dec
or
jo
clc
insl
repz
iret
mov
add
inc
bound
arpl
sub
dec
pop
mov
dec
pop
nop
add
movsl
iret
xchg
adc
and
cmc
or
jno
adc
mov
pop
xchg
orl
mov
std
cmp
or
push
xor
in
jge
scas
xor
add
adc
adc
jecxz
ss
imul
add
cmpl
cld
mov
add
dec
hlt
push
xchg
sbbb
pop
scas
shlb
inc
lret
rorb
das
cmp
aad
rcrl
push
add
pop
or
ljmp
and
dec
cmc
pushf
push
leave
jb
mov
jbe
mov
bound
inc
sar
sub
adc
das
movsb
lret
add
dec
decl
push
es
xchg
rcrb
out
add
mov
or
bound
cs
scas
popa
call
push
inc
pusha
mov
adc
lods
lods
dec
bound
xchg
pop
sbb
jnp
test
aaa
mov
pop
mov
es
aas
jg
and
nop
scas
mov
ret
add
pusha
pop
add
sbb
add
out
inc
mov
sub
les
iret
add
sub
in
lea
cmp
scas
sbb
fsts
pop
andl
ficompl
test
sbb
dec
outsl
mov
dec
stos
jl
and
lea
loope
add
adc
and
adc
and
xor
insb
pop
cmp
inc
jb
jmp
das
adc
imul
cmp
pop
adc
mov
fs
inc
adc
sbb
lods
scas
adc
jne
add
popf
imul
lock
rcll
call
cmp
push
cmc
sarb
push
add
mov
call
sub
mov
shlb
stos
fs
inc
xor
ficompl
mov
and
and
test
enter
add
out
fsubrp
pop
xchg
pop
mov
je
push
push
mov
push
xchg
andl
jmp
pop
scas
outsl
add
xor
in
dec
jnp
jb
test
mov
in
jp
lcall
lock
sar
or
test
adc
ja
test
ja
fcmovb
aaa
outsl
lds
jnp
mov
jne
ja
mov
push
mov
inc
aad
add
testb
sbb
lcall
pop
insl
stos
sub
aad
test
shl
sbb
cmpsl
mov
lea
xchg
sar
adc
ljmp
add
jnp
adcl
sbb
test
aas
and
bound
or
aad
or
sbb
mov
call
es
fs
xchg
push
xchg
inc
and
and
or
cltd
scas
mov
dec
gs
movsb
xchg
cmp
mov
dec
fcoml
jl
and
popf
pop
xor
shrb
sub
add
dec
pop
rcr
jmp
popf
cmp
ret
sub
xchg
adc
dec
cmp
test
into
mov
rol
aam
xchg
notl
shl
mov
jmp
or
iret
adc
jg
cmpsl
fisttpll
sub
fld
sub
sub
push
mov
aaa
gs
mov
ljmp
mov
mov
mov
inc
dec
daa
jecxz
xchg
xor
pop
inc
dec
cmpsl
aad
mov
fimuls
mov
xchg
je
pushw
inc
cmp
aad
push
mov
adc
aaa
push
sub
sbb
out
mov
or
insl
push
xchg
or
add
add
cmc
je
cmp
shll
add
pop
iret
bound
out
xchg
cmp
loop
daa
or
add
daa
or
stos
sbb
daa
lods
push
or
pushf
cltd
xor
mov
call
call
jns
or
outsb
xbegin
inc
test
add
mov
mov
jmp
push
push
lahf
call
lods
jp
ficompl
mov
lods
repnz
insl
xchg
orb
ss
fbstp
jbe
add
mov
pop
sbbb
enter
jle
inc
test
mov
push
shll
and
jno
pushf
out
or
imul
xor
xchg
adc
sub
cmp
push
ret
jecxz
dec
lea
pop
xor
cltd
iret
out
pop
or
popa
popa
mov
cwtl
push
scas
shlb
push
pusha
insl
mov
dec
dec
getsec
in
int
xchg
or
dec
lods
test
add
mov
repz
sub
adc
arpl
xor
pusha
jecxz
xchg
out
jo
pop
and
sbb
int
add
xor
call
orl
addr16
jae
push
inc
dec
loope
pushf
xor
pop
adc
mov
push
scas
or
iret
jne
fcmovb
add
xchg
dec
sbb
popf
and
hlt
jno
rcrl
mov
lods
xor
inc
xchg
dec
or
adc
inc
mov
jmp
mov
or
push
cmp
movsbl
cmpb
pop
add
out
cmp
adc
pop
adcl
mov
push
inc
addr16
sub
mov
xchg
add
jne
xor
out
popa
jl
fwait
inc
rorl
test
dec
dec
loop
or
push
adc
push
add
cmp
push
js
daa
inc
movsl
cmpsl
sub
lret
aad
adc
lock
xor
incl
add
pop
xchg
loopne
push
dec
cmp
test
inc
sbb
jo
nop
stos
and
push
shlb
add
iret
rolb
int3
loop
and
iret
xchg
lahf
dec
cmp
push
pop
lods
sbb
dec
add
lahf
fistpll
dec
or
sbb
jne
mov
adc
shlb
and
add
mov
mov
dec
dec
addr16
pop
sbb
add
add
dec
sbb
jl
pushf
push
or
subl
sbb
ret
mov
das
inc
out
mov
cmp
mov
lods
add
add
xor
inc
nop
movsl
push
lret
daa
add
or
daa
mov
or
mov
adc
add
lods
dec
dec
das
insl
jae
pushf
aad
dec
inc
mov
push
dec
jge
push
and
cli
scas
cmp
xchg
adc
pop
jl
test
and
sbb
clc
cmpsb
cmp
dec
jge
jnp
addl
pop
daa
dec
fisubrl
dec
inc
das
inc
sbb
shlb
mov
xchg
mov
inc
loop,pt
scas
mul
fldcw
sbb
movsb
dec
pop
adc
mov
pop
jo
mov
lea
jle
xor
and
cmp
sub
int
push
lahf
sbb
test
adc
pop
inc
add
adc
out
fmulp
pop
aad
fnstcw
ds
mov
jl
or
push
es
test
cmc
mov
imul
flds
push
test
pop
mov
inc
dec
add
clc
adc
mov
push
and
inc
and
sbb
sbb
push
loopne
and
and
and
cmpsl
mov
enter
lock
loopne
or
pusha
roll
pop
fmuls
jno
adc
test
movsl
addl
sti
sbb
cmpsl
push
and
pop
pusha
or
imul
xchg
mov
test
and
or
imul
pop
pop
cmp
int
mov
outsl
leave
or
inc
sbb
push
imul
adc
xchg
in
sub
jecxz
test
insl
push
arpl
mov
icebp
cmp
rolb
fiadds
xorl
nop
sub
jo
popa
sub
lea
mov
pushf
mov
cmp
inc
gs
fs
repnz
mov
shrb
jg
cmp
outsl
xor
push
push
mov
loop
addr16
add
rcll
xlat
test
movsl
jmp
test
ret
xlat
outsb
iret
sbbl
push
pop
jecxz
pop
les
jp
sub
or
adc
pop
cmp
cli
or
and
xor
test
push
shll
jmp
dec
and
enter
add
inc
mov
sub
repz
add
cmp
pushf
add
sub
add
imul
push
sbb
xor
xchg
je
mov
sub
pop
rolb
xor
adc
outsl
and
and
pusha
outsb
xchg
add
sbb
sub
sub
jmp
cltd
icebp
jo
mov
cmpsl
mov
in
add
and
mulb
pop
out
enter
sub
jbe
pop
push
daa
fisubs
add
add
lret
push
lds
movl
imul
sub
add
push
adc
movsb
rolb
movsl
xlat
jb
sti
or
fs
add
mov
pop
lods
clc
lcall
pop
xor
jo
jbe
add
pop
xor
sbb
test
out
sub
div
dec
aaa
iret
es
jecxz
insl
in
popa
and
lock
test
sub
test
pop
xchg
sbb
mov
ds
mov
bound
add
cli
jmp
ret
mov
push
sbb
pop
addl
sbb
leave
fcompl
rolb
sub
sbb
mov
mov
adc
mov
gs
lcall
and
xchg
dec
insb
jmp
xor
inc
test
mov
imul
jl
gs
pop
mov
rorb
lahf
mov
fcos
daa
nop
hlt
pusha
dec
fwait
addr16
pop
or
xchg
pop
mul
call
mov
and
fstl
jg
test
pop
mov
jle
mov
lret
mov
loop
add
es
popa
insb
shr
mov
push
pop
ds
jnp
stos
icebp
xor
sbb
xor
dec
nop
or
push
sti
sub
xor
cmp
lds
ss
inc
sbb
icebp
mov
movsb
adc
xchg
or
sub
adc
pop
jmp
sahf
test
sbb
outsl
insl
call
mov
lcall
shll
or
insb
jge
imul
mov
jno
cmpsl
xchg
add
mov
imul
mov
out
adc
dec
mov
jo
sbb
imul
imul
cli
mulps
stc
jo
out
outsl
inc
mov
js
pop
dec
sub
orb
das
mov
fiadds
xchg
adc
and
daa
aas
jecxz
jp
stos
xlat
ret
add
and
add
lret
iret
das
and
pop
xor
mov
dec
int3
fiaddl
mov
test
loope
fwait
sbb
aas
roll
xchg
test
xlat
inc
mov
addr16
stc
loopne
sbb
pop
bound
jbe
loop
in
pop
pop
inc
sbb
mov
leave
inc
mov
pop
sbb
mov
adc
bndstx
adc
test
mov
push
addr16
xchg
adc
mov
cmp
cmp
jne
add
insb
add
movsl
lods
and
pop
ror
movsl
pop
loopne
mov
adc
mov
out
push
mov
cmpsl
dec
jnp
inc
loopne
and
aas
bound
jge
mov
fdivrs
mov
or
lea
or
lds
mov
or
xchg
or
aam
mov
inc
ja
mov
repz
test
mov
add
mov
mov
and
test
sbb
jno
mov
pop
cmp
pop
cmp
int3
xchg
lret
ret
sbb
xor
out
loopne
cmp
dec
stc
insl
add
subl
daa
imul
adcl
sub
sti
mov
sub
push
xchg
sbb
push
push
ljmpw
xchg
mov
push
mov
mov
mov
adc
jle
push
mov
pop
sahf
insb
jo
cmp
orb
jg
sub
rcl
iret
sarb
xchg
gs
ja
dec
jmp
fnstcw
lret
push
or
movl
test
xlat
dec
rorl
loop
add
movsb
sbb
dec
loopne
cmp
jmp
pusha
es
sub
aas
inc
pop
cmp
mov
and
enter
pusha
insl
inc
mov
dec
and
add
cltd
outsl
sub
sbb
lods
cltd
sbb
ljmp
sbb
fs
pop
adc
add
rclb
cmc
xchg
xlat
idivl
push
mov
jbe
dec
sub
push
sub
sbb
loopne
mov
add
dec
arpl
addr16
outsb
or
aaa
push
add
scas
test
push
enter
orl
cmpsb
je
lds
and
pop
sub
in
addr16
popa
pusha
pusha
adc
push
inc
ficompl
stc
dec
cmpsl
cmpsl
iret
xchg
stos
jle
xor
rolb
sbb
jg
in
dec
jp
pop
push
adc
incb
and
jmp
add
dec
dec
and
adc
iret
pop
clc
sbb
pop
add
idivl
xor
test
xchg
xor
add
lods
cltd
mov
ds
dec
adc
mov
daa
xchg
fcoms
pop
add
pop
insl
and
sbb
pop
cmp
inc
gs
jb
ret
and
mov
mov
add
mov
jecxz
jmp
adc
add
stc
add
xchg
or
in
sub
in
cmp
adc
fst
les
push
sbb
je
or
mov
or
jno
inc
and
inc
cmp
fadds
or
jmp
addr16
cmp
ror
cmp
popa
loope
sbb
fs
mov
inc
add
and
add
mov
scas
add
jmp
inc
push
mov
sbb
shlb
data16
ds
mov
bound
sbb
ror
sbb
test
mov
xchg
popa
cmp
or
adc
pop
push
mov
jo
xchg
pop
data16
enter
repnz
stos
inc
nop
js
shll
inc
jg
inc
rolb
test
xor
or
in
arpl
ja
and
sti
dec
mov
push
enter
lret
inc
scas
lock
outsl
dec
pop
iret
daa
mov
add
arpl
lahf
inc
and
sahf
aaa
add
sbb
fisttps
or
lock
pop
insb
push
loop
mov
pop
sti
movsl
out
shrb
into
dec
mov
mov
jne
sbb
daa
movsl
arpl
jns
jo
or
repz
or
movsl
outsl
cmpl
fdivr
jne
sti
xor
mov
loope
int
nop
lcall
test
loope
mov
test
outsb
lods
or
lea
xchg
fnstenv
inc
sbb
dec
lea
insb
xchg
mov
adc
repz
daa
fimull
ja
subl
xor
out
jecxz
push
or
cmp
sahf
dec
cmp
mov
jbe
dec
sub
inc
jecxz
aaa
rolb
push
das
stos
insb
jecxz
inc
lds
dec
shrl
fwait
mov
pop
test
int3
ds
mov
inc
es
lods
push
call
mov
add
push
stos
popl
inc
inc
mov
test
xor
mov
or
cmp
ljmp
lret
pop
stos
xor
add
jmp
sub
jne
popa
cs
adc
lea
pop
jp
loop
mov
js
xlat
imulb
lock
cs
iret
adc
xor
jno
insl
mov
lods
mov
push
ret
cmp
pop
and
scas
push
lea
pop
dec
pusha
test
imul
adc
aaa
or
push
pop
mov
xchg
pusha
popfw
add
sti
add
rcl
push
inc
cmp
or
aaa
cmp
fwait
xchg
mov
jmp
ret
push
add
jmp
gs
sub
push
push
fs
js
fcomps
mov
loopne
pop
or
ret
adc
dec
enter
repz
or
sar
and
or
mov
imul
mov
mov
iret
sub
pusha
sbb
jecxz
or
jnp
add
xorb
aas
out
js
out
rclb
mov
loop
adc
pop
push
push
inc
or
and
inc
push
icebp
or
sbb
cmp
push
fnsave
jmp
dec
test
das
jns
mov
ret
or
xchg
cld
jl
adc
shr
pop
rolb
incb
mov
gs
push
jl
xchg
repz
aaa
dec
xchg
inc
cltd
fldt
sahf
aam
mov
xor
jl
popf
mov
jle
xor
and
jmp
notb
ss
gs
xor
ja
jl
adc
xor
sub
add
xchg
adc
dec
mov
xchg
mov
mov
jge
sarb
movsl
arpl
icebp
stos
and
out
add
xor
int3
mov
sti
fsubl
pusha
arpl
scas
add
push
cld
sahf
inc
lcall
mov
pushf
out
fdiv
jbe
mov
mulb
add
imulb
push
addr16
fcoml
icebp
xchg
popa
sub
sbb
mov
push
movl
sub
outsb
xchg
or
adcl
sbb
mov
adc
cltd
cli
push
movsb
and
dec
xor
inc
aaa
stc
jge
cmp
mov
cli
or
fldt
adc
dec
movb
lahf
rclb
or
pop
test
mov
cmp
nop
adc
sub
ss
and
and
fwait
push
xor
mov
and
jp
dec
fidivs
aaa
les
addl
cmp
test
add
cmp
rcll
lcall
lret
test
jae
int
sar
xor
mov
in
es
fldz
dec
mov
clc
roll
mov
loopne
adc
and
add
mov
mov
inc
popf
mov
xor
mov
test
popf
add
ja
xchg
pop
and
pop
xor
rolb
mov
sub
addr16
stc
jae
sub
lds
dec
adc
imul
xchg
inc
add
insb
pop
ret
jno
shl
mov
dec
push
xchg
arpl
mov
mov
es
lret
imul
aaa
loopne
adc
inc
cmp
hlt
adc
inc
mov
xchg
sub
mov
sbb
fadds
mov
test
xchg
outsb
or
lret
adc
pusha
out
xchg
mov
aaa
xchg
ss
lahf
mov
sub
loopne
lds
jecxz
mov
rolb
sub
lds
cmpsl
add
into
push
inc
or
mov
fwait
xor
or
inc
insb
cmp
push
test
jno,pn
add
mov
jne
pop
stc
jae
lods
or
or
add
fildll
mov
dec
jge
mov
lds
mov
prefetcht2
aad
cli
xchg
jmp
insl
stos
cmp
loopne
in
jae
imul
dec
add
jle
mov
popf
imul
sub
pop
cmpsl
jle
mov
inc
insl
ret
push
loope
xor
dec
loop
xor
and
add
add
sbb
das
pop
pop
mov
in
adc
push
outsl
inc
inc
js
cmp
sbb
mov
mov
ret
jle
jle
add
mov
add
cltd
loopne
and
or
jp
andb
daa
pop
into
mov
xlat
xchg
sub
dec
insb
int3
mov
push
inc
cmpsl
ljmp
pop
xchg
mov
and
hlt
ja
dec
add
push
jecxz
aas
mov
add
cmpsb
sahf
lods
mov
daa
add
popf
jnp
fcoms
and
arpl
lret
mov
pop
mov
xchg
stc
cmpb
sub
adc
push
sub
mov
nop
lret
ret
mov
rclb
addr16
sbb
mov
fwait
test
xchg
fcoms
xchg
test
mov
call
cwtl
cmp
outsl
mov
mov
cmp
test
mov
rolb
mov
aaa
popa
out
jecxz
dec
add
dec
mov
test
adc
pop
scas
sbb
mov
pop
lock
and
xchg
mov
adc
dec
gs
leave
pop
inc
lods
fs
popa
das
sub
test
sbb
rclb
cmp
xor
stos
push
mov
push
sub
nop
adc
loopne
pusha
pushf
jecxz
adc
sub
ficomps
or
mov
bound
xchg
inc
clc
pop
lock
inc
or
xchg
lahf
ds
ret
imul
pop
cmp
mov
sti
sub
inc
cmpsb
sbb
push
lcall
xchg
xchg
xor
sub
and
xor
dec
ljmp
add
mov
icebp
loopne,pt
mov
punpcklwd
jge
cs
arpl
inc
push
sbb
cmp
mov
xchg
sbb
add
mov
icebp
jmp
pop
mov
add
rclb
lods
or
xchg
sarl
inc
cmp
mov
ds
xchg
adc
adcl
icebp
test
or
cmp
add
inc
dec
icebp
add
add
mov
xor
gs
stos
cmp
xlat
add
add
scas
mov
push
and
aam
push
and
repz
adc
mov
push
test
mov
imul
add
pop
hlt
or
adc
push
xchg
cmp
out
adc
pmullw
jle
push
imul
and
nop
dec
sarb
scas
bound
lods
mov
mov
or
cmp
and
push
push
dec
aaa
lods
mov
cmpsb
xchg
or
js
add
dec
or
scas
addl
dec
add
andb
call
adc
lods
je
ficomps
psubsb
lods
or
add
ljmp
cmc
popf
push
xchg
add
fcomps
mov
push
cmp
movsl
test
adc
sahf
cmc
push
xchg
test
and
mov
pop
push
adc
jb
mov
test
push
pop
std
mov
call
enter
push
pushf
movsb
loope
add
adc
cld
mov
les
and
sbb
push
inc
or
sahf
lock
pop
xchg
push
pop
xchg
sbb
add
stos
or
inc
aam
push
jne
test
dec
xor
or
push
dec
pop
jp
add
xchg
lahf
mov
je
xor
sahf
xor
lods
adcl
cmp
sbb
aaa
imul
mov
nop
mov
and
adc
pusha
test
insl
cltd
mov
pop
and
add
ljmp
in
daa
popl
push
arpl
pop
scas
adc
xor
jbe
dec
loopne
gs
lea
test
adc
movsb
add
imul
inc
fnsave
dec
dec
mov
test
cld
icebp
iret
and
sub
push
mov
fs
jae
dec
and
test
cs
sbb
jb
xchg
repz
push
adc
sub
push
cmc
jb
jbe
jmp
repz
xor
rorb
xor
scas
je
add
sbb
or
nop
fxch
xchg
pushf
rol
in
pop
arpl
pop
leave
xor
adc
xor
sbb
add
inc
cs
jmp
xor
cmp
addb
ds
sub
das
sti
lock
mov
jno
stos
inc
xor
jne
or
rep
dec
jmp
cltd
imul
into
jbe
mov
sbb
mov
adc
push
in
dec
les
push
inc
jecxz
les
xchg
pusha
inc
insl
or
jecxz
or
insb
imul
adc
jo
stc
xor
fstps
les
pop
shlb
pop
pusha
cmp
push
pop
add
inc
test
sub
ret
dec
xor
mov
add
addr16
push
divb
es
in
dec
sbb
lods
dec
and
sbb
stos
repnz
sub
pop
add
movsb
adc
fmul
pop
lods
sbb
mov
mov
inc
xor
gs
pusha
mov
aaa
xchg
fcmovnbe
jmp
out
popw
sub
xor
pop
je
adc
add
insb
arpl
test
dec
in
loop
js
andb
or
sbb
cmp
ja
repz
addb
loop
mov
rclb
sub
and
rcl
sahf
divl
addr16
and
cs
add
call
daa
mov
push
inc
popa
orb
sub
push
fwait
cld
inc
and
adc
pop
fcmovnbe
sbb
adc
lods
aam
pusha
movups
hlt
push
das
push
fs
fs
cmp
mov
jnp
mov
pop
call
pop
add
dec
cmp
gs
mov
fwait
mov
push
iret
mov
js
aas
cmc
orb
and
jbe
rcl
repnz
roll
idivb
mov
add
call
push
pop
dec
sbb
dec
adcl
add
add
dec
or
dec
fmull
imul
lock
add
les
xor
or
xchg
or
sub
lods
inc
sub
add
xchg
mov
dec
sbb
rcll
fmul
mov
arpl
scas
mov
push
rclb
sbb
push
xchg
insb
outsb
lds
xchg
adc
rsqrtps
jp
shlb
mov
ljmp
lods
outsb
mov
arpl
sbb
and
push
ss
sbb
popa
and
shr
and
pop
add
dec
adc
sahf
dec
pop
dec
leave
testl
mov
xchg
jne
push
adc
sbb
jecxz
and
push
or
and
push
xchg
xchg
pop
mov
add
ds
dec
dec
fcomi
loopne
add
sub
pop
test
pop
dec
rcrb
mov
sbb
icebp
adc
imull
out
out
sub
adc
scas
enter
xlat
sbb
aad
sti
push
loop
daa
jns
adc
loope
js
icebp
jb
inc
daa
lods
lock
pop
icebp
fidivl
sub
mov
xor
or
rcrl
fs
or
in
pop
in
dec
dec
xchg
in
fiaddl
enter
insb
add
imul
xlat
les
inc
cwtl
test
sbb
inc
mov
add
inc
sbb
loopne
xchg
pop
pop
or
popf
movsb
mov
mov
mov
into
dec
sub
cmpsl
dec
inc
dec
xor
add
fists
xor
fnsave
add
scas
in
xchg
mov
repnz
scas
shrl
sbb
fsubp
lods
push
stos
bound
fstpt
push
pop
mov
inc
add
bound
xchg
fdivs
and
mov
mov
xchg
mov
out
in
and
testb
roll
outsl
jo
pushf
inc
repz
ss
cltd
sub
mov
jo
sbb
cmp
pushf
arpl
push
add
inc
mov
sub
add
pop
test
xor
cmpsb
and
push
int3
loop
bt
inc
inc
into
pop
jae
into
mov
jecxz
ret
add
pop
popf
daa
loope
add
add
jo
add
fwait
pop
sub
pop
lds
cmp
push
into
cmp
lret
sbb
dec
jns
xchg
jmp
ffree
adc
aad
in
pop
mov
roll
popf
inc
add
mov
fcmovnb
out
push
addl
sub
add
cmp
xor
adc
add
jb
lds
ja
loope
sbb
push
cmp
jecxz
push
pxor
push
xor
icebp
inc
jne
and
rcrl
mov
sub
mov
xchg
xorl
daa
repnz
out
or
cmpsb
mov
lods
sbb
enter
inc
cmp
lahf
aaa
jns
cmp
mov
sbb
stos
punpcklbw
por
mov
js
pop
inc
inc
sub
insb
cmp
inc
sbb
mov
mov
jne
pop
fmull
cmp
add
fdivrs
and
nop
ss
and
jg
adc
sti
addr16
stc
jo
sub
cmp
push
or
inc
js
inc
std
fcoms
jbe
cmc
add
add
es
mov
add
rorb
lret
cs
js
test
sbb
push
out
enter
out
dec
or
ret
sbb
cmpsl
leave
add
inc
adc
dec
xorb
daa
xor
inc
push
sub
add
mov
js
int
addb
insl
pop
add
mov
mov
add
popf
sbb
fadds
push
mov
mov
fs
arpl
loop
sbb
int
jae
jno
sbb
sub
nop
sbb
rolb
icebp
or
imul
movb
out
mov
mov
rorl
arpl
or
xor
daa
lret
adc
mov
ret
lock
inc
dec
cmp
dec
mov
sub
jmp
add
pop
lahf
and
roll
xchg
and
sbb
data16
push
iret
shrb
adc
mov
popf
xchg
jl
je
fidivrl
xor
jns
mov
hlt
les
add
xchg
cmp
ret
pop
out
in
lods
sbb
scas
sub
cmpsb
jo
lods
aam
and
dec
pop
adc
cmpsl
pop
xchg
xlat
cwtl
add
fcmovnb
push
dec
cmp
push
dec
jg
or
clc
jo
add
adc
lods
pop
cmp
sti
mov
jecxz
shll
add
xor
inc
stos
or
push
xchg
out
adc
or
sbb
pop
or
out
lods
push
jnp
xchg
adc
push
push
lods
inc
addl
cli
into
mov
sbb
je
repz
mov
lods
gs
and
sbb
xor
push
sarb
or
in
jp
xchg
pusha
loopne
test
xor
das
dec
inc
shll
xor
adc
sub
or
inc
cmp
es
add
adc
lret
insb
js
test
scas
or
and
cmp
movsl
sub
xchg
mov
mov
add
sub
dec
jp
das
mov
inc
es
jecxz
push
mov
xor
repz
sub
jbe
mov
push
sti
mov
rcrb
into
outsl
ds
and
cs
movsb
inc
xlat
out
or
repz
fiadds
jns
jnp
inc
cmp
pop
adc
sbb
pop
add
ret
lds
fildl
sbb
mov
cmp
ret
ret
mov
inc
popa
jns
xchg
or
movsl
sub
mov
dec
daa
cmp
out
cmp
sbb
cld
mov
sbb
pop
push
adcl
push
and
int3
mov
je
mov
test
mov
mov
ljmp
add
mov
test
cmp
or
mov
mov
add
push
or
or
cmp
adc
shlb
or
sahf
sub
xlat
imul
mov
stos
out
mov
lods
cmp
lods
sbb
or
xor
daa
ljmp
xchg
ja
out
xor
js
rorl
ss
nopl
ja
sbb
sub
cmp
mov
pop
or
mov
pop
xchg
mov
jno
pop
pop
mov
add
pop
adc
repz
loop
iret
cmc
push
or
mov
mov
aaa
jle
rorl
bswap
and
fnstsw
mov
nop
sbb
jbe
mov
mov
add
bound
pop
ja
cld
mov
and
dec
mov
fimull
jle
or
call
jle
fsubrs
inc
loopne
sbb
push
aad
js
sbb
jp
test
insl
lea
mov
pop
cs
test
sbbb
adc
mov
movsb
icebp
mov
push
lret
or
andb
js
push
jno
insl
mov
jns
mov
mov
cwtl
jge
imul
mov
iret
pop
jge
or
pop
cmp
cmp
sbb
push
mov
in
pop
sbb
add
inc
adc
nop
inc
ja
bound
cmp
jl
pop
xchg
loopne
mov
ja
or
jg
bound
jecxz
dec
xlat
cmp
sub
icebp
mov
jbe
mov
pusha
pusha
cmp
xor
fadds
mov
jecxz
cmp
in
push
and
sub
xchg
movsb
shll
pop
ss
icebp
or
mov
mov
shrl
imul
sbb
pop
ret
shll
arpl
lods
pop
aaa
xchg
inc
adc
mov
pop
in
ss
xor
or
add
sbb
popa
xor
test
add
jecxz
pop
dec
stos
into
gs
nop
mov
pushf
jg
adc
popf
jmp
xor
ds
jle
lret
sti
inc
add
jne
inc
jp
sub
mov
test
sarb
xor
add
js
push
pop
and
aad
loopne
mov
dec
xchg
sti
lret
adc
loop
popf
or
inc
les
adc
push
or
jo
test
and
test
inc
sub
adc
or
cmc
jmp
dec
imul
rol
ja,pn
mov
dec
nop
push
push
xor
adc
or
xor
loop
les
push
fisubrs
imulb
or
sub
sub
sub
add
mov
addr16
ret
pop
fldcw
movsb
cmp
or
mulb
repnz
sbb
ja
iret
out
cmp
pop
add
inc
sti
xlat
rclb
add
mov
push
out
or
ljmp
pop
cmp
ficoml
mov
test
sub
mov
xor
aad
repz
dec
vmwrite
icebp
or
adc
jg,pt
out
int3
add
add
or
xchg
dec
and
and
iret
lock
call
or
repz
xchg
stos
test
shrb
in
jo
cmpb
push
arpl
xor
or
and
mov
ss
adc
add
inc
push
flds
cli
push
add
add
pop
ljmp
jl
and
rcr
rolb
shll
out
ss
mov
adcl
pushf
xor
lods
and
jae
movntq
mov
ljmp
dec
inc
or
fwait
xchg
mov
adc
nop
sub
xor
sbbb
lea
jecxz
fsubl
lcall
mov
scas
jge
xlat
shll
sbbb
mov
push
stos
mov
add
sti
nop
lcall
rsm
mov
daa
pop
iret
cmp
or
adc
or
xchg
sub
pop
jno
add
xchg
cmp
jno
sti
pop
dec
sub
fisubrl
and
xchg
mov
frstor
inc
xchg
pop
cmpsl
rorl
xchg
xchg
divb
movd
str
dec
gs
mov
in
sub
xlat
inc
sbb
push
add
push
add
xchg
test
test
dec
sbb
je
je
cmp
loope
cmp
mov
inc
clc
cltd
daa
xor
xchg
orl
sbb
and
inc
add
inc
or
pop
es
push
nop
aas
push
jecxz
mov
xchg
jb
test
faddl
mov
jmp
call
push
int
shlb
add
inc
push
das
jle
mov
adc
pop
inc
imul
add
stos
and
lret
and
aas
arpl
add
movsb
sahf
data16
cmpsl
jnp
xchg
mov
xchg
js
jno
pop
sub
push
and
in
adc
and
jmp
push
shll
mov
aam
jmp
jns
mov
add
dec
sbb
ja
shl
jns
iret
pop
push
enter
mov
sub
ja
or
push
inc
lcall
mov
add
fdivs
nop
clc
sub
ss
dec
add
and
inc
out
movsl
dec
in
adc
sbb
loopne
fcmovnu
push
arpl
mov
sbb
and
xchg
pop
xor
test
fstps
xchg
das
sahf
pop
jmp
inc
jge
push
jbe
mov
mov
add
aam
jo
rol
insl
mov
sbb
in
push
das
add
dec
pop
and
add
mov
lret
ljmp
or
sahf
lret
in
fists
mov
jle
add
ret
xor
xor
lret
enter
inc
push
mov
add
test
lock
mov
dec
cmpsl
pusha
sub
mov
cltd
fidivrl
aad
or
dec
mov
jns
fldl
inc
push
adc
adc
push
or
xchg
jge
add
sub
push
fstpt
negl
rclb
xchg
lods
adc
xchg
mov
imul
imul
inc
and
push
mov
push
add
addr16
jmp
stos
fwait
jno
push
pop
inc
add
dec
sub
sub
xor
das
mov
notl
sahf
or
sbb
cmc
xchg
in
inc
sbb
addl
jmp
ret
into
fdivl
out
sub
dec
pop
jne
push
repnz
mov
fmuls
pop
mov
push
in
vprotq
gs
int
add
ret
imul
popl
movsl
nop
jno
push
mov
ljmp
xor
daa
xor
or
adc
push
xor
leave
and
push
sub
sbb
sbb
pop
or
cmp
pop
and
loop
sti
push
in
push
sub
pop
fwait
and
push
sbb
lret
lea
iret
loope
add
sbb
push
fisttpl
cmp
push
movsl
outsl
inc
mov
dec
dec
outsb
test
scas
cmpsb
cmp
cmp
inc
cwtl
insb
movsl
or
fwait
xor
push
cmovns
xchg
outsb
push
mov
pop
jl
aaa
xchg
jle
inc
lret
inc
sbb
dec
add
jne
xor
mov
ret
mov
faddl
daa
xchg
addb
pop
push
adc
sbb
dec
add
test
jnp
addr16
popa
daa
insb
movsb
jmp
add
sub
add
add
xchg
jge
or
cmpsl
loopne
or
sub
cmc
jb
popf
or
inc
lret
loope
push
subl
cmc
push
sbb
mov
stos
hlt
stos
push
sbbl
xor
cmp
dec
pop
imul
sub
sbbl
xchg
inc
mov
mov
movsl
stos
mov
mov
add
push
sub
adc
lcall
push
cmp
divl
xor
lret
pop
mov
push
int
leave
xchg
add
or
add
mov
xor
lock
adc
andb
or
repz
lcall
out
sub
cwtl
test
mov
add
ficompl
mov
dec
aam
sub
ret
add
sub
mov
stos
bound
andl
cmp
cmp
dec
in
std
roll
imul
push
add
fstpl
iret
stos
sub
mov
sbb
pop
push
mov
movsb
adc
or
pushf
or
adc
pop
js
mov
and
or
arpl
mov
sub
test
inc
push
inc
hlt
xchg
adc
pop
out
aaa
movsb
sbb
push
or
arpl
je
popa
fcmovnu
sbb
subl
pushf
push
ficoml
mov
mov
pop
roll
sub
pop
ficompl
mov
loop
add
ret
aas
push
lock
add
lcall
test
jb
lock
mov
lahf
fisubrs
and
lods
add
pusha
add
shll
aad
roll
pop
shll
dec
cmp
outsb
sbb
test
jp
inc
mov
jmp
call
out
sub
push
daa
rolb
pop
add
popa
iret
jae
add
adc
imul
andl
data16
pop
aas
jbe
pusha
push
or
add
add
pop
nop
inc
iret
xchg
and
add
mov
xor
cli
push
mov
insl
dec
dec
stos
mov
aad
and
cmp
loope
xchg
cwtl
ret
or
pop
pop
xchg
lea
add
imul
cmp
daa
jmp
sbb
inc
cmp
or
stc
push
bound
js
stos
push
pop
jmp
mov
adc
xchg
iret
mov
inc
imul
mov
push
bound
mov
mov
or
ljmp
push
xchg
sub
jp
pop
gs
push
jg
pop
add
adc
test
xor
daa
jge
les
adc
adc
xchg
push
fisubrs
in
pop
lods
add
sub
jo
dec
orl
push
add
jmp
xor
add
jg
cmpsb
adc
push
pusha
daa
daa
sub
fstps
sub
add
dec
daa
xchg
ret
ret
pop
pop
cmp
pop
and
lea
push
iret
cmp
loope
out
or
sbb
and
add
push
loop
je
packuswb
pusha
les
xorb
dec
iret
jle
repz
sub
pop
in
dec
adc
mov
cmp
lahf
cmpsl
fcoml
fcmovnu
or
dec
cmp
mov
fcmovnbe
inc
adc
jne
mov
adc
insl
fimuls
xor
aad
jle
pop
add
ret
add
push
sub
test
inc
mov
xlat
int3
ret
add
add
testb
ret
add
int
ss
mov
inc
sbb
add
movsb
or
mov
push
push
pusha
insl
lods
xchg
sbb
dec
mov
movsb
loope
push
sbb
aas
adc
aaa
mov
add
pop
inc
push
push
nop
fsubs
fbld
insb
inc
adcl
test
and
test
mov
push
ds
cwtl
js
inc
test
sbb
and
jge
mov
test
jnp
pop
jo
jg
js
roll
jno
add
clc
pop
xchg
mov
mov
jmp
mov
sbb
push
lods
push
rcrb
rclb
xchg
mov
jecxz
sub
adc
xchg
sahf
orb
xchg
inc
sti
pop
lds
and
das
sub
sbb
shr
popl
jo
insb
pusha
imulb
fcoml
inc
lahf
cmp
push
enter
das
shr
add
add
cmp
dec
loope
jecxz
ja
sbb
inc
sahf
mov
adc
repz
sbb
add
dec
jo
int3
fidivrs
es
jb
pop
sbb
ret
jg
pop
add
jne
ret
cwtl
addb
jo
dec
movsb
cmp
pusha
dec
outsl
mov
inc
add
leave
pop
sbbb
ret
or
mov
add
sub
push
mov
push
sub
cmp
lds
icebp
jbe
push
sub
mov
xorb
mov
cmp
jae
js
pop
rcrb
scas
or
mov
insb
repz
push
clc
mov
and
dec
sbb
inc
cltd
addr16
imull
repz
jbe
test
and
adc
add
mov
mov
adcl
xor
sbb
adc
cmpsl
movsb
shlb
push
cwtl
xor
dec
mov
or
and
sbb
mov
xor
shll
mov
dec
sbb
sub
repz
dec
xor
jnp
ds
jecxz
adcb
dec
leave
add
loope
sub
inc
add
pop
loope
adc
cmpsl
cli
lock
pop
mov
movsl
push
xor
xor
pusha
inc
loope
or
pop
lahf
cmp
adc
inc
mov
scas
adc
sbb
sub
push
es
clc
sbb
mov
mov
inc
shlb
cmp
inc
xchg
fwait
and
mov
adc
jmp
push
mov
std
add
pop
inc
sbb
jle
rolb
mov
movswl
ja
sbb
mov
jl
jno
pop
stos
imul
xchg
adc
shll
adc
push
add
imull
push
call
or
out
push
fildll
movsb
pop
mov
and
mov
das
and
push
xchg
outsb
xchg
and
mov
rorl
xchg
and
pop
push
mov
cmpsb
adcl
mov
fwait
pop
dec
sbb
rorb
cld
fstl
pop
or
jle
sub
mov
hlt
xchg
push
ret
mov
insl
insl
sbb
out
and
jb
sub
popa
add
dec
mov
sbb
push
notl
add
dec
fldenv
jae
sub
mov
outsl
jno
test
in
xor
sahf
lods
ret
in
sub
mov
add
gs
and
push
add
add
imulb
enter
and
sbb
inc
mov
popa
outsl
adc
adc
add
shrb
lock
sarl
das
cmp
and
popf
leave
and
xor
aam
cmpsb
mov
sbb
push
into
mov
adc
loope
das
cmp
es
daa
lret
test
and
insl
cmp
cmp
outsl
dec
xchg
mov
cwtl
iret
bnd
jns
pop
aad
int
inc
sub
fdivrs
stc
daa
add
imul
test
bound
inc
cmp
dec
mov
arpl
mov
mov
arpl
test
mov
and
pop
and
pop
push
les
arpl
pop
cs
icebp
mov
push
jl
test
fsubp
add
fisttpl
movsb
sbb
lock
lcall
inc
test
sub
clc
pop
mov
pushf
test
loope
jecxz
fbstp
iret
or
inc
mov
jecxz
arpl
add
dec
or
push
mov
dec
cs
aaa
mov
inc
push
xor
jecxz
adc
aaa
stos
dec
scas
ja
xor
negb
mov
xchg
andl
jl
andb
lock
push
and
leave
in
filds
adc
imul
sbb
mov
insl
sub
movsl
add
rcrl
sub
in
imul
nop
mov
outsl
fwait
sub
mov
mov
mov
sub
mov
push
mov
xchg
cs
daa
sub
pop
movsb
repnz
or
mov
mov
insl
lahf
icebp
dec
xchg
shll
mov
sbb
addr16
jns
imul
inc
mov
xlat
jae
inc
lods
nop
adc
cmp
data16
sbb
subb
cs
adc
inc
dec
sub
sbb
jb
mov
xchg
subl
jno
pop
cmp
sar
push
in
imul
ja
pop
lahf
mov
nop
es
cmpsl
push
fsub
mov
loop
jecxz
and
jo
popf
movsb
sub
roll
sbb
inc
and
pop
add
scas
adc
pop
xchg
mov
mov
pop
mov
mov
iret
adc
cwtl
sub
ljmp
jne
fwait
inc
and
xlat
push
adc
lea
push
xchg
mov
out
add
pop
add
sbb
movsb
ret
cs
fsubl
out
sub
xor
ss
or
push
mov
jmp
sub
sub
pop
push
data16
inc
stc
sahf
jle
xor
sub
out
rcrl
sbb
aaa
out
js
jae
cmp
or
iret
nop
pusha
mov
mov
pop
rcrl
push
inc
sub
add
hlt
inc
lods
cmp
leave
cltd
arpl
mov
inc
and
and
inc
or
add
adc
lret
mov
insl
mov
sub
add
pop
insb
sbb
fcmovnb
inc
sti
rorb
push
add
fmuls
je
or
xchg
mov
repz
dec
pop
jg
lahf
movsl
add
data16
sbb
and
mov
pminub
jmp
sub
or
mov
pop
inc
stos
sbb
aam
rcl
inc
into
dec
or
xchg
roll
sub
jmp
mov
xlat
push
xor
gs
orb
mov
out
adc
inc
adc
jecxz
adc
clc
stos
aam
fwait
addr16
or
mov
jno
outsb
and
pushf
add
les
sub
add
xor
cmpl
sbb
sbb
pop
out
pushf
mov
sbb
mov
mov
inc
jnp
sbb
sub
jb
sub
cs
mov
add
add
sub
sti
adc
push
cmp
push
sbb
mov
mov
push
inc
sbb
addb
loope
adc
mov
iret
subl
aad
jo
aad
sbb
add
xchg
insl
dec
les
mov
fcoml
out
add
cmp
push
std
ss
test
sbb
sahf
mov
mov
lods
scas
mov
and
or
push
es
icebp
out
mov
xchg
xchg
dec
popf
cwtl
xchg
mov
and
xchg
inc
jle
sbb
pop
in
and
pop
mov
xchg
hlt
pop
jmp
xor
inc
mov
add
lret
aam
stos
push
movsb
shrb
imul
aas
or
loopne
aas
jns
movsb
jb
inc
mov
add
cmp
xor
add
and
inc
add
gs
outsb
scas
pop
push
imul
xor
pop
push
or
fldcw
jg
sub
test
mov
or
aad
jo
fld
and
in
les
aaa
pushf
inc
cmp
pop
test
mov
pushf
sarb
sub
mov
gs
or
shlb
pushl
jae
and
lds
add
jp
outsl
iret
ret
add
or
pop
lods
sub
fwait
popa
call
or
lods
clc
mov
out
lahf
inc
xchg
mov
rcl
adc
xor
in
sahf
out
sahf
add
inc
and
psllq
sti
xor
stos
arpl
dec
sarb
sbb
mov
add
arpl
cltd
add
dec
mov
push
sbb
cwtl
insl
in
and
std
pop
nop
fcmovb
and
in
and
scas
shlb
sbb
rolb
loopne
lea
lds
mov
inc
push
or
pop
xchg
lds
mov
sbb
loopne
les
sahf
sub
and
sub
in
mov
sub
sahf
jmp
sti
mov
pop
sbbl
sbb
call
fdivl
mov
sti
aas
and
sahf
hlt
out
add
add
or
addl
and
je
out
sub
fiadds
mov
xor
enter
out
dec
js
aad
push
xchg
adc
and
sahf
cmp
arpl
int3
insb
je
push
movsl
inc
movsb
shl
jp
push
cmp
push
push
push
js
inc
loopne
pop
mov
jle
popa
sbb
jge
imul
call
cld
sbb
jge
add
add
fiaddl
iret
inc
aas
xchg
push
addl
mov
pop
repz
sbb
or
aaa
jge
hlt
xchg
enter
sub
push
sbb
add
nop
adc
test
mov
or
xchg
jmp
pop
std
mov
int3
iret
sub
lret
adc
add
lds
hlt
iret
cld
jns
lods
jae
daa
loopne
xchg
in
sbb
shl
in
fwait
pop
aas
and
fs
mov
cmp
addr16
daa
push
pop
xchg
hlt
mov
addr16
sub
int3
sub
jge
fcoms
mov
dec
sub
insb
mov
cli
aam
idiv
pop
push
jg
aas
jno
xor
cmpsb
fsubrs
dec
nop
pop
jp
test
adc
js
jle
dec
cmp
jl
int
adc
or
mov
pop
or
cwtl
jne
dec
cwtl
push
loopne
adc
sbb
xor
cmp
sbb
int
jl
jbe
lods
and
enter
iret
add
mov
iret
add
adc
or
add
push
nop
sahf
push
add
jns
xchg
shr
cld
add
shll
daa
jno
lock
lods
gs
fidivl
loop
sbb
fisubs
mov
pusha
loope
dec
jecxz
testl
imul
add
or
cmp
dec
jmp
xor
cmc
dec
cmp
lea
xchg
mov
fidivrs
xor
sub
xor
das
cmp
sub
cmc
push
ret
sarb
cld
bound
pop
adc
mov
mov
imul
daa
shll
lea
sbb
lea
mov
mov
rol
add
jmp
xchg
sub
mov
xchg
xorl
test
push
sbb
adc
mov
jns
pop
xchg
jo
jmp
sub
jp
iret
stos
or
mov
push
jmp
xchg
fistpl
inc
dec
adc
xor
mov
je
lods
testl
xor
xchg
or
pushw
pop
pop
adc
pusha
pushf
push
shlb
pop
nop
mov
arpl
inc
mov
inc
add
filds
adc
cld
xor
bound
arpl
subl
addb
mov
cmp
xor
test
cmp
cmp
sub
mov
adc
sarb
shld
cmp
add
idivb
jnp
sbb
out
int
push
push
fwait
out
inc
fstps
ret
ficompl
mov
or
add
roll
adc
jns
sub
pop
cmpsb
jno
cmpsl
lods
pop
xor
add
sub
stc
jbe
xchg
dec
add
and
mov
mov
scas
cmp
push
jp
inc
js
mov
mov
adc
push
lret
out
or
pop
add
adc
push
adc
lahf
or
jno
jo
and
lcall
add
adc
adc
adc
test
and
add
sbb
fisttpl
push
cmp
imul
cmp
push
pop
xor
and
jbe
fldln2
or
and
dec
shrb
pop
cli
test
fdivp
sub
push
jno
arpl
push
jecxz
sti
daa
adc
cld
fisubrs
push
mov
xchg
out
sahf
add
mov
lahf
mov
decl
or
adc
or
cmp
adc
pop
fsubl
jnp
loopne
aam
rcl
das
sub
sbb
push
in
rclb
hlt
sub
leave
and
xchg
jno
pusha
repz
push
test
jecxz
jl
mov
push
packssdw
and
inc
cli
mov
xor
xor
in
jb
and
adc
loope
jl
cmp
jecxz
cli
mov
push
cmp
mov
jecxz
or
and
and
xchg
mov
jl
cmp
out
inc
sbb
dec
pop
sbb
sbb
dec
lds
lea
push
iret
enter
sbb
jmp
xchg
xchg
dec
or
bound
mov
scas
and
xchg
mov
and
push
js
mov
mov
insb
icebp
pop
loopne
adc
dec
dec
js
add
cmp
clc
xor
pop
sbb
and
add
lcall
xchg
jge
cmp
idivl
popa
movsl
inc
pop
cmp
jle
and
cmpsl
cwtl
ljmp
js
mov
adcl
dec
and
int
xor
and
adc
jmp
outsb
adc
cmp
inc
push
sub
inc
movsl
mov
sbb
jg
addr16
aam
and
mov
sbb
jne
mov
mov
inc
sbb
imul
adc
jnp
sub
and
jle
xchg
shr
mov
out
cmp
lret
das
mov
popa
pop
pop
adc
test
pop
xchg
jo
add
movl
push
ret
push
xor
sbb
orl
mov
xchg
xchg
push
and
sbb
mov
loope
pop
xchg
loope
or
xchg
jmp
add
fisubs
in
push
loope
or
ficompl
xor
inc
add
push
or
fsub
sub
jne
enter
cmp
dec
jle
loope
add
add
sub
adc
fistps
adc
jo
dec
aas
test
jp
adc
cmp
js
mov
or
xor
imul
rcll
add
aad
mov
adc
push
mov
sbb
pop
cwtl
cmp
pop
jl
imul
push
lods
rorb
pop
mov
and
rorb
filds
or
rcrl
push
js
test
jo
scas
mov
adc
add
cmp
push
adc
imul
scas
cmpsb
or
shlb
insb
xor
or
push
dec
cmp
mov
jecxz
adc
xlat
roll
or
mov
sbb
mov
fistps
mov
repz
pop
adc
arpl
sti
xchg
pop
inc
das
xchg
mov
push
sbb
add
lcall
sbb
add
rorb
fs
adc
lahf
cmp
je
inc
push
loope
sub
sbb
fs
aam
gs
jb
loopne
test
inc
mov
fistl
pop
and
scas
int3
xor
inc
loopne
mov
ss
js
mulb
dec
std
cmp
repnz
nop
add
inc
push
aas
call
sldt
mov
inc
sub
push
xor
adc
adc
sub
scas
inc
inc
test
push
mov
sbb
sbb
insl
test
sbb
jge
fs
andl
call
and
cmp
insb
and
pop
popa
dec
push
cmp
mov
mov
mov
mov
cmpb
cwtl
adc
ds
push
dec
jnp
lret
dec
movsl
test
cs
adc
or
jg
xchg
lods
xor
movsl
jl
inc
sbb
jl
jno
lret
mov
daa
xor
js
jmp
ds
and
imul
cmp
add
in
sbb
and
dec
js
je
lea
das
adc
sub
mov
push
push
in
push
pop
hlt
jb
add
sbb
xor
xchg
sbb
sub
shrb
ljmp
icebp
sbb
pop
or
adc
lods
data16
sub
in
adc
aaa
sub
daa
mov
adc
and
or
into
push
mov
fdivr
movsb
xor
pusha
movsb
gs
add
or
jae
ret
xchg
xor
add
stc
imul
loop
cmp
icebp
add
pop
bound
lahf
movsl
das
std
js
fcoms
adc
add
sbbb
add
fisttpll
clc
pop
lds
test
add
and
loope,pn
xor
dec
mov
mov
rcll
and
lret
inc
inc
mov
sub
sbb
imul
pushf
cld
dec
je
cmc
sbb
repnz
imul
aam
lea
and
outsb
fucomp
mov
ficoms
je
dec
addr16
in
outsb
int
adc
les
add
pop
or
imul
arpl
push
dec
sub
dec
sub
dec
stos
rep
mov
xlat
add
inc
inc
mov
andb
inc
leave
maxps
lcall
add
push
and
adc
inc
mov
sarb
push
bound
pop
xor
push
addr16
iret
test
mov
sub
ret
pusha
fcomp
scas
sub
inc
jmp
nop
push
cmp
outsb
inc
stc
imul
arpl
sbb
in
ds
pop
daa
and
jle
jle
and
bnd
pop
sub
xorb
stos
pop
mov
cmp
cmpsb
sarl
das
setge
es
sbb
leave
pop
dec
enter
mov
fnsave
out
add
popf
ret
pop
sbbb
mov
xchg
imul
clc
xorl
repnz
add
out
jae
xchg
xchg
jns
test
pop
je
orl
loop
popa
shrb
lea
fs
add
into
test
mov
cmp
lea
ret
stos
mov
or
sbb
sub
daa
push
mov
pop
jne
push
and
xorb
and
out
mov
insl
test
arpl
dec
push
or
mov
xchg
add
adc
cmp
cwtl
jbe
mov
xchg
lods
test
loop
mov
test
push
or
xchg
addr16
mov
pop
rcrb
shr
mov
pop
add
sbbb
hlt
xchg
lods
cld
mov
jno
iret
scas
add
dec
inc
mov
popf
sbbl
stos
mov
lea
fisubs
mov
inc
jne
loopne
test
inc
pop
pmulhw
adc
jle
mov
mov
pop
icebp
inc
cmp
ret
pop
imul
adc
divb
enter
adcb
lcall
push
push
fmull
mov
lods
adc
in
push
sub
jnp
pop
push
push
dec
inc
jns
add
push
clc
jle
insl
insb
xchg
inc
test
sbb
imul
sub
sub
outsb
dec
insl
jle
imul
imul
jae
in
daa
imul
pop
lahf
fs
or
orl
jl
xor
adcb
mov
and
mov
cltd
popf
std
inc
or
cmpsl
add
arpl
dec
js
push
aam
push
pop
loop
clc
xorb
jb
or
icebp
add
dec
sub
lods
gs
push
add
dec
xor
inc
movsb
inc
dec
or
shl
push
jmp
loope
mov
dec
roll
or
loopne
add
imul
fcmovnu
adc
loope
cmp
cmc
push
daa
jecxz
lods
rorb
sub
adc
xor
inc
sub
incb
push
pop
out
sbb
xchg
cmp
in
mov
cmp
ret
mov
pop
mov
mov
fwait
sub
repnz
xchg
test
cmp
mov
dec
les
dec
cmp
dec
sub
and
jle
jle
aas
popa
sub
int3
sbb
repnz
add
push
lret
xlat
in
jno
sbb
push
andb
mov
jne
sub
or
test
cmp
sbb
and
imul
cltd
je
das
ja
lods
icebp
in
adc
insb
xchg
ret
xchg
adc
xlat
dec
arpl
sbb
mov
pop
mov
or
mov
clc
inc
rcll
decb
call
adc
and
imul
addr16
jmp
mov
inc
imul
sub
dec
shlb
popa
dec
dec
adc
test
and
or
xlat
pusha
aam
jnp
das
inc
mov
push
fwait
jle
inc
inc
or
sub
pop
pusha
add
cmpxchg
dec
dec
xor
adc
dec
rclb
xchg
js
push
pop
xchg
adc
xchg
mov
and
or
rolb
js
push
lds
mov
nop
dec
and
bound
iret
add
adc
xchg
inc
or
incl
dec
pop
and
popf
push
jo
es
and
loop
or
push
loopne
outsl
or
mov
loopne
loope
shlb
mov
xor
sub
push
outsl
push
mov
pop
jbe
mov
push
mov
adc
rclb
and
movsb
mov
jmp
mov
and
mov
inc
xor
xor
mov
and
push
adc
xchg
cmp
pusha
out
es
icebp
fsubr
lock
imul
or
lods
sbb
push
sti
mov
xor
cmpsb
push
jp
test
dec
js
add
mov
jne
mov
andl
nop
inc
outsb
loope
jl
call
movsb
adc
fisubs
daa
aam
das
fdivl
das
dec
cmp
out
add
fiadds
cmp
dec
int
not
or
sbb
or
jp
movntq
add
push
jge
mov
lea
xchg
inc
test
or
jo
sub
sub
add
jl
cmpl
movb
sbb
ror
mov
sti
jns
inc
dec
push
js
inc
mov
sub
popa
out
mov
mull
mov
jno
dec
nop
adc
xchg
movsb
sub
insl
sbb
das
leave
ret
or
cmp
rolb
jb
xchg
adc
imul
movsb
jp
add
sbb
adc
mov
pusha
mov
dec
iret
pop
stos
dec
pushf
inc
and
pop
rol
bound
pop
mov
jo
xchg
xor
std
jmp
pop
push
or
add
cpuid
dec
xor
add
popf
arpl
outsb
test
push
or
jecxz
inc
inc
mov
int
mov
jle
arpl
fdivrl
dec
xchg
fistpl
mov
push
xchg
in
or
aaa
in
sub
fsts
popa
fistpl
dec
repz
shl
mov
add
mov
movl
lret
test
adc
pop
sub
mov
push
cltd
clc
pusha
push
adc
icebp
and
mov
add
push
and
inc
jmp
adc
sbb
and
mov
cli
nop
pop
repz
inc
fwait
lds
sbb
cmp
cs
jp
outsb
jl
lods
dec
es
and
pop
inc
ret
push
xchg
test
cld
daa
mov
inc
adc
pop
leave
xchg
and
daa
inc
mov
xchg
mov
les
mov
sarl
in
aaa
lahf
ficoml
push
push
add
jp
push
shlb
mov
dec
inc
cmp
xchg
fsubs
adc
jb
shll
sbb
shrb
or
add
leave
in
xchg
mov
mov
dec
or
jbe
lcall
push
mov
or
or
xor
das
xchg
fld
push
cmp
fsubl
in
mov
scas
xchg
into
inc
add
cltd
mov
fmuls
pop
sub
adc
outsl
xchg
add
int
adc
cmp
jecxz
or
pop
or
push
stc
jp
mov
and
push
push
cmp
pop
add
or
inc
sbb
xchg
push
push
adc
clc
ret
out
sarl
lock
mov
aas
add
sbb
sahf
lahf
sub
or
pop
imul
inc
push
ja
aas
out
sbb
dec
test
mov
outsl
scas
shlb
aad
in
mov
icebp
jbe
inc
das
xchg
mov
jbe
dec
sbbb
cld
lret
or
jo
call
enter
push
ja
call
cmp
and
das
pushf
push
or
or
pusha
out
test
xchg
push
lock
data16
jecxz
scas
int
adc
xchg
sub
out
adc
jmp
push
xor
daa
sub
add
adcl
adc
jp
mov
jl
stc
pop
rclb
dec
jle
push
jle
and
jnp
mov
pop
or
icebp
repnz
inc
sbb
fsubl
adc
movsl
lret
jnp
shll
inc
popf
les
dec
rcr
xchg
add
adc
flds
clc
or
mov
adc
and
jmp
xchg
add
cmp
inc
adcl
jnp
and
jnp
push
nop
pop
outsl
or
xor
call
dec
dec
sbb
ja
or
adc
xchg
adc
or
xchg
add
or
jmp
je
push
push
cmpb
sub
dec
add
adc
stos
or
adc
stc
fsubrs
or
push
rcll
dec
pop
push
das
adc
mov
fprem1
xchg
push
or
arpl
fsubrs
push
lds
pusha
push
xchg
and
jno
mov
push
sub
shll
xchg
and
cwtl
pop
and
sub
in
push
sbb
int3
xor
or
xor
xor
dec
sub
pop
jo
pop
pusha
sbbl
addb
gs
pusha
movsl
mov
sbb
mov
arpl
adc
or
daa
lods
xlat
sbb
add
jno
scas
loope
mov
js
push
loop
adc
jno
add
mov
or
icebp
imul
xor
rolb
or
and
cmp
adc
les
add
in
cltd
les
sub
hlt
pop
add
inc
add
adc
cwtl
dec
bound
sbb
sub
adc
sbb
ja
and
xor
les
inc
add
mov
sbb
inc
sbb
sbb
add
fs
jp
mov
rclb
add
add
xchg
loopne
rol
cli
ss
xchg
add
mov
repz
cld
jecxz
pop
fs
or
xorl
push
xadd
sbb
ljmp
add
pop
add
mov
cmp
and
adc
xchg
dec
out
or
push
fs
adcl
xchg
pop
mov
dec
inc
and
leave
daa
push
cmpb
add
mov
mov
in
adc
enter
sarl
xor
hlt
out
add
mov
cmc
rcrb
insl
repz
rol
xor
stc
xor
add
xchg
add
mov
or
pop
xchg
dec
loope
insl
adc
stos
or
adc
xchg
fldcw
xor
pop
insb
mov
cmpb
and
mov
iret
sbb
lcall
jp,pt
mov
add
pop
scas
andb
mov
and
inc
inc
add
mov
aaa
movsb
sbb
push
orl
ljmp
sub
out
jge
jns
jne
je
out
pop
imul
imul
int3
cmp
enter
cmpsl
mov
jp
xlat
sub
insb
addb
add
xor
lods
jae
addl
or
jae
add
add
add
or
out
jno
pop
push
mov
sbb
out
movsl
add
and
outsl
inc
xor
arpl
push
lret
fldt
hlt
add
adc
fdivrs
daa
mov
lea
push
mov
jge
xor
sbb
dec
test
sbb
movb
ret
add
fadds
in
add
pop
lea
scas
push
arpl
and
enter
jae
add
push
dec
xchg
outsl
lods
fidivrl
cmp
sub
pop
xor
cmp
sbb
stos
aas
xchg
fildl
add
rclb
or
adc
out
movntps
insb
cmp
pushf
jnp
adc
je
std
xchg
cmp
daa
pop
cmp
mov
sub
add
orb
les
out
dec
sbbl
incb
adc
dec
jl
sysenter
inc
iret
mov
dec
insl
or
and
test
aam
push
mov
roll
inc
jge
or
dec
insl
or
sub
es
test
mov
adc
pop
push
inc
inc
ret
push
mov
outsl
sbb
test
cmp
jne
leave
clc
inc
call
cli
push
and
repz
and
jl
std
and
push
xchg
das
add
jmp
pop
sub
addb
jae
jbe
in
mov
imul
sarb
ljmp
mov
in
ljmp
xchg
aas
sub
mov
and
push
dec
add
cmpsb
pop
ja
or
int
movsb
add
or
pop
ror
sarb
addr16
fs
and
pop
or
es
sub
rorl
aam
inc
mov
jge
shlb
rolb
or
test
addr16
mov
leave
jge
pop
cwtl
push
sbb
sub
imul
pop
and
iret
sbb
int
jbe
adc
sub
sbb
jge
push
out
fnop
iret
pop
fildl
xchg
lret
xchg
mov
inc
outsb
jge
std
xor
add
or
pop
sbb
ss
lods
xor
ret
or
adc
mov
adc
jns
mov
popf
jge
sbb
cmp
popf
es
pop
es
cmpsl
sbb
js
pop
push
jle
sub
xor
subl
sub
lods
cmp
fs
jg
and
cmp
add
push
outsl
push
xchg
and
cmp
imul
pop
test
fiaddl
push
movsb
pop
call
push
stos
lret
add
cmp
mov
adc
cmp
add
and
pop
push
add
jmp
mov
je
adc
jne
imul
lds
stc
fsubs
sub
jmp
cmp
repz
test
lahf
or
cmp
add
cmpsb
lret
mov
push
xor
mov
fcomps
call
incb
mov
ja
jmp
adc
pop
cli
adc
dec
aam
jmp
into
adc
jl
dec
inc
loopne
sub
xchg
cltd
inc
icebp
aas
xchg
add
insl
jmp
loope
fstpl
test
loope
xchg
rolb
pop
lahf
add
inc
add
ret
pop
addl
dec
mov
lock
leave
fildl
in
lret
daa
pop
dec
rorb
and
lea
pop
dec
imul
pop
nop
enter
verw
inc
push
and
loope
xor
xchg
jno
dec
outsl
fs
adc
pop
add
pop
sbb
xor
js
sbb
cltd
inc
movsl
add
imul
mov
adc
jmp
fdecstp
mov
push
sub
mov
hlt
lock
sbb
jg
add
sbb
pop
es
mov
in
add
add
loop
or
mov
sbb
xor
daa
rsqrtps
out
dec
pop
push
add
lcall
push
addl
mov
and
push
dec
pop
lret
pop
pop
out
cwtl
add
andl
pop
ja
cmpsl
add
pop
sub
daa
jmp
das
int
cmc
fsub
out
push
pusha
ds
inc
and
push
add
fists
pop
dec
cmp
cmp
adc
adc
jno
xchg
cli
sbb
xorb
insl
outsb
iret
add
adc
rcl
mov
lcall
cwtl
movsl
in
andb
and
inc
out
push
xchg
lods
lea
xchg
imul
xor
andl
mov
popl
push
aas
or
mov
hlt
pusha
mov
mov
inc
in
loop
pop
cmpsb
push
dec
outsb
test
xor
jnp
and
cs
sbb
push
inc
add
xchg
and
mov
add
push
dec
pop
call
ret
pop
mov
ds
mov
inc
and
out
and
aaa
cld
out
cmpsl
mov
xchg
mov
inc
dec
mov
inc
popa
cmpsl
test
adc
ljmp
push
pop
shr
adc
add
sbb
les
pop
pop
mov
and
dec
sbb
shrl
add
lods
dec
inc
gs
jns
pop
inc
dec
add
jp,pn
lahf
push
fidivrs
decl
inc
pop
pop
and
jmp
xor
mov
sbb
mov
pop
lahf
xor
fisubrl
inc
dec
fidivs
ljmp
ja
fidivs
or
jecxz
std
add
mov
cmpl
fcmovnbe
or
pusha
mov
stos
push
cmpb
pop
push
dec
push
jae
adc
xor
gs
int
xor
dec
push
lea
in
sti
push
ljmp
nop
sbb
add
ja
or
pop
jp
jg
in
mov
fs
inc
xor
pop
fisttpll
cmp
daa
lods
pop
add
push
scas
cltd
jnp
roll
insb
or
dec
dec
pop
lret
outsl
xchg
insb
add
loop
or
rcll
mov
and
pop
pop
adc
and
flds
cltd
cmp
jo
pop
pop
pop
fcmovnb
xor
ret
xor
lea
push
dec
outsl
lea
add
or
loop
jne
ds
push
mov
jmp
cmp
or
xchg
cmc
pop
imul
xchg
ret
add
inc
cmpsb
loope
pop
xchg
sub
push
fdivrs
jmp
imul
cmp
scas
sbb
rcll
aaa
test
out
add
inc
or
dec
pop
stos
and
mov
imul
lret
pop
xchg
and
dec
pop
mov
daa
sub
xchg
adc
mov
movsb
xchg
sahf
adcb
xchg
stc
ds
add
addr16
jb
pop
sbb
mov
addb
inc
ss
clc
cs
add
loop
mov
addl
imul
jnp
sbb
xor
sahf
push
pop
dec
jno
or
and
rorl
mov
xchg
icebp
pop
push
rolb
addb
lock
loope
lock
and
pop
push
es
adcb
loopne
push
les
out
pop
imul
iret
aaa
test
jo
or
sub
shll
sbb
mov
je
sbb
and
push
add
js
icebp
jb
sbb
jbe
dec
or
arpl
pop
rorb
insb
out
test
js
fldenv
or
sub
or
xor
lcall
xchg
rcrb
loop
mov
adc
mov
adc
fstpl
sbb
ret
adcb
mov
in
fisubrl
adc
dec
mov
addr16
pop
xorb
pop
fwait
test
mov
adc
lea
leave
or
int3
xchg
loopne
mov
stc
stos
mov
push
push
dec
test
data16
fisttpl
add
inc
dec
xor
and
and
inc
pop
lea
or
lods
mov
shlb
dec
dec
mov
or
and
adc
dec
fistps
add
sub
insl
pop
xchg
adc
test
icebp
lock
loop
stc
mov
in
test
stos
aam
sub
or
adc
int
xor
pop
rcrb
jo
jge
lods
or
jmp
outsb
add
icebp
adc
mov
outsl
jae
xor
sub
xor
or
daa
pop
add
je
mov
clc
add
jno
call
dec
sahf
and
pop
rclb
scas
jnp
insl
lods
inc
mov
mov
push
cmpsl
test
or
daa
and
adc
dec
adc
aas
or
dec
jle
dec
sbb
jl
pop
add
ret
pop
test
fcom
push
cmc
or
xchg
or
sbb
js
or
aam
in
cltd
js
add
fs
xor
and
lods
push
lock
loope
shll
fcomp
cld
scas
mov
lret
xor
jnp
sub
or
xchg
sub
and
pop
or
movsl
push
dec
adc
pop
fstps
or
and
or
adc
stos
mov
imul
mov
xchg
cmp
idivb
cli
arpl
out
mov
shlb
aas
xor
xor
outsl
push
mov
add
or
jecxz
mov
jns
dec
pop
pop
pusha
shrb
xor
fldenv
cs
adc
enter
test
sti
sub
test
aam
lfs
inc
xorl
pop
pmaxsw
movsb
push
xchg
pop
lcall
mov
popa
mov
mov
addb
ja
sbb
adc
rcrb
cmp
mov
add
call
aad
pop
add
or
ss
out
and
xor
push
js
popf
icebp
and
dec
jecxz
mov
adc
mov
mov
jge
push
jmp
push
mov
dec
mov
xchg
lock
jecxz
cltd
inc
and
popf
sub
sbb
jmp
add
xchg
or
ret
fsubrs
jnp
test
shll
xor
adc
jo
xlat
xchg
outsb
lahf
shrl
jae
mov
rclb
sbb
icebp
adc
dec
sbb
adc
mov
jne
inc
stos
push
mov
pop
inc
insl
inc
inc
dec
lea
dec
dec
insb
and
sti
adc
inc
add
cmpsb
iret
in
in
rorl
xchg
std
jnp
xlat
dec
in
mov
lcall
sbb
or
scas
lahf
das
lahf
into
cmp
loop
inc
jo
inc
in
inc
mov
pop
or
leave
mov
mov
addl
and
aaa
insl
jnp
mov
xchg
adc
adc
rcr
and
in
inc
inc
inc
loop
unpckhps
imul
cmpsb
xor
lea
pop
mov
cmpsl
xchg
outsb
jae
pop
xchg
cli
cmp
jns
pop
andl
xorb
pusha
cmova
adc
sbb
and
cmpb
add
pop
sbb
mov
aad
ret
test
jo
cmp
add
test
pop
fadds
adc
dec
leave
add
or
xchg
or
cmp
lods
adc
add
mov
popa
ret
and
add
stos
movsl
jge
mov
lahf
mov
les
mov
xchg
test
lods
cwtl
dec
or
add
pop
shl
jmp
int
pop
dec
imul
push
fldenv
fiaddl
mov
inc
cmp
mov
jle
shrb
cli
jb
sub
test
arpl
mov
xchg
out
lret
popa
add
orl
loop
lea
xor
jl
iret
cmp
dec
test
jge
sub
adc
and
int3
outsl
mov
lea
mov
shlb
xchg
sbb
rcll
xchg
add
inc
sbb
xor
inc
push
leave
fists
push
negl
and
mov
jno
push
xchg
test
dec
loop
aas
daa
pop
call
xchg
adcl
cld
cmp
jp
mov
add
subl
xchg
add
dec
mov
js
inc
inc
sub
pop
mov
mulb
dec
movhps
cmp
fs
sub
push
cmp
jae,pn
popa
mov
loop
adc
iret
push
pop
push
jno
mov
je
adcl
cmpb
or
arpl
arpl
xchg
push
push
lahf
lds
or
add
stos
mov
jecxz
fcomps
and
popa
push
inc
in
pop
test
add
and
mov
mov
xor
push
sahf
jmp
test
in
and
ret
fimull
loop
es
sbb
lret
cmp
mov
enter
icebp
jmp
popa
mov
add
push
sub
fstpt
jle
ret
ret
pop
pop
stos
sub
xchg
adc
dec
push
xchg
mov
push
outsl
adc
insb
xadd
lods
jecxz
xor
inc
dec
and
inc
push
repnz
mov
clc
add
or
test
sahf
jl
add
lods
pusha
or
pop
inc
iret
cs
dec
dec
and
adc
inc
mov
imul
into
dec
lods
lcall
test
testb
loopne
ret
jae
fisubrl
call
xor
push
jno
shll
lods
nop
cmp
js
shlb
inc
mov
lods
ret
loope
pop
or
or
sub
movsl
mov
add
pop
or
ljmp
fwait
movsb
dec
rcrl
add
push
test
out
and
inc
inc
mov
arpl
mov
adcb
add
or
sbb
sbb
push
xor
sbb
dec
dec
xor
sub
cs
loopne
dec
and
mov
xchg
adc
into
cmp
pusha
lock
or
sbbb
sub
inc
adc
ret
mov
cli
arpl
icebp
iret
fimuls
xor
popa
or
push
push
je
push
mov
sbbl
push
mov
sahf
xchg
loope
dec
xchg
and
adc
in
xor
xor
adcl
test
push
dec
xchg
push
movsb
and
imul
mov
call
pop
xchg
or
iret
fists
mov
sub
jmp
lcall
shl
sub
add
int3
ds
mov
adc
test
fsubrs
jnp
cmp
mov
int3
or
movsl
cmp
sbbb
pop
adc
hlt
inc
fldt
push
push
sub
aas
add
js
xchg
pop
pop
or
hlt
mov
fimuls
jg
outsl
inc
add
mov
clc
sbb
scas
dec
sbb
imul
xorb
push
push
in
pop
mov
cs
fs
lcall
pop
lods
stos
fisttpl
movb
xor
mov
xchg
je
add
in
push
sub
outsb
xchg
jp
stos
icebp
inc
aaa
cmp
shrb
xchg
mov
xor
inc
lahf
jno
scas
inc
call
dec
popa
scas
es
add
negl
cwtl
rol
stc
enter
or
mov
lods
clc
pop
add
les
addr16
add
sub
and
xchg
dec
mov
or
mov
adc
or
mov
test
push
shrl
or
stos
push
fnclex
insb
rolb
in
ja
addb
or
push
push
mov
pop
test
sbb
sbb
add
sbb
iret
cmp
popf
ss
dec
mov
pushf
xorb
jecxz
jp
and
iret
mov
mov
xor
push
sbb
add
pop
ss
fldl
xchg
and
dec
fs
push
sarl
in
adc
in
xorl
test
mov
push
dec
mov
test
jmp
test
cwtl
add
scas
or
in
jmp
cltd
test
xlat
scas
add
and
in
lods
inc
push
mov
xchg
cmp
dec
mov
and
sub
lea
iret
dec
sbb
movsl
leave
popa
ljmp
in
scas
mov
mov
sbb
enter
mov
adc
add
iret
pop
or
inc
and
jno
fisubs
mov
sub
add
adc
sub
mov
outsl
mov
aaa
fimuls
dec
push
lret
into
mov
inc
sbb
adc
stc
jne
push
mov
pop
push
repz
jecxz
insb
push
add
sbb
jg
sub
ljmp
mov
push
pop
mov
out
pop
dec
sub
jle
in
adcl
or
cmp
mov
jns
je
fwait
sbb
aaa
mov
test
out
test
in
out
lods
jo
or
xor
shlb
out
push
fdivrs
cmp
xor
cwtl
inc
les
jo
sub
in
xor
out
stc
or
repnz
xchg
add
mov
inc
pop
and
mov
les
push
ret
das
roll
xor
test
ds
popl
lds
xchg
lea
dec
adc
mov
xor
in
lldt
sbb
dec
pop
out
push
lock
test
mov
into
lret
nop
push
mull
add
scas
test
das
xor
cmp
mov
movsl
or
pop
xor
mov
pop
aaa
test
push
jmp
xchg
jb,pn
xchg
movsb
cmp
int
nop
inc
jecxz
mov
ss
pusha
or
dec
loop
xchg
jo
and
adc
push
push
or
test
xor
repnz
movsb
sbb
orl
fmuls
xchg
pop
fs
shrb
aas
add
dec
jmp
sbb
inc
add
and
sub
in
add
pop
xchg
test
push
cs
dec
xor
rolb
ret
cmpl
iret
xor
subb
ss
inc
lcall
cmp
mov
jnp
push
sbb
mov
add
and
xchg
cmpsl
sahf
inc
test
pusha
jge
pop
das
cli
rorb
jo
xchg
cmp
mov
fmull
daa
xchg
add
push
sub
xchg
push
mov
sbb
xchg
rcrb
dec
mov
inc
pop
jno
inc
push
arpl
add
inc
cs
das
push
shll
loopne
pop
xchg
les
jp
jl
pusha
or
fcoms
mov
mov
cwtl
adc
dec
outsl
enter
and
fcoms
mov
jecxz
xlat
and
arpl
push
xchg
cmp
sub
mov
pop
xchg
dec
into
mov
sub
pop
add
adc
add
sahf
cli
adc
mov
pop
cmp
daa
sbb
scas
or
roll
lret
ret
mov
shl
lret
xchg
jns
shlb
xor
mov
cmpl
sub
sbb
ja
mov
inc
jo
inc
jmp
jp
pop
pop
popa
cmc
sti
and
nop
movsl
mov
jg
fbld
push
cmc
cmpsl
adc
push
push
das
stos
inc
inc
and
test
sub
jp
pop
xor
mov
sub
call
inc
add
fcoms
test
xor
mov
jmp
pushf
sub
push
adc
andb
loopne
adc
and
jnp
pop
add
sub
cli
iret
imul
sub
sbb
dec
dec
adc
and
pop
outsb
push
inc
mov
or
pcmpgtb
out
std
dec
and
xor
dec
xchg
push
lods
dec
bound
jnp
das
add
pop
xchg
in
jle
mov
sbb
and
and
es
movsl
or
test
test
imul
push
nop/reserved
in
loope
es
das
dec
sbb
mov
call
pusha
sbb
mov
xor
jge
inc
and
push
iret
pop
xchg
dec
dec
cld
xchg
das
inc
inc
xchg
add
mov
stos
inc
por
adcl
adc
aas
sbb
sbb
dec
ret
push
or
or
arpl
mov
xchg
pushf
mov
sub
fndisi(8087
and
and
dec
adc
aaa
fstl
add
adc
mov
sbb
imul
xchg
or
addr16
add
rcr
jbe
mov
mov
sbb
pop
mov
popa
xor
das
dec
stos
xchg
mov
adc
lahf
inc
jecxz
add
cmpb
mov
je
sbb
dec
add
shrl
lock
sbb
jns
cmpsb
add
adc
mov
inc
push
cltd
cmp
pop
adc
out
cmp
addr16
fdivrs
adc
and
jns
test
push
xor
jge
mov
mov
repz
testl
push
mov
adc
dec
mov
lldt
nop
test
and
cmp
jb
add
dec
mov
and
inc
bound
call
imul
arpl
pop
jle
cmpb
syscall
jecxz
pop
mov
fldt
jmp
add
xchg
mov
arpl
stc
daa
scas
dec
xchg
jbe
adc
dec
add
icebp
lods
push
sbb
into
add
imul
xor
mov
sbb
or
push
jecxz
in
cltd
jo
or
rol
xchg
sub
pop
sbb
sbb
xor
push
das
les
test
addr16
jne
jae
push
add
mov
push
mov
inc
daa
or
call
addr16
or
push
outsl
jmp
push
cmp
dec
and
adc
je
add
movsl
lds
ret
call
and
es
xchg
dec
push
aaa
push
sub
rorb
fistps
inc
ret
mov
sub
inc
lods
es
cmp
iret
shrl
push
xchg
rcrb
or
test
push
das
jo
xchg
or
sbb
test
adc
jbe
pop
pop
add
insl
dec
xor
pop
pop
cmp
or
and
jb
xor
mov
int3
lret
cmp
mov
or
out
sbb
inc
mov
push
dec
push
xchg
cmpsl
inc
mov
inc
add
cmpsl
xchg
jecxz
mov
jmp
pusha
push
adc
xor
nop
push
sbbl
jno
in
sbb
xor
imul
dec
int3
ret
xchg
or
loope
cmpsb
addl
cmp
add
xor
xor
xchg
rorb
mov
ret
lea
loopne
cmp
cmp
shrl
mov
aaa
ds
adc
pop
cs
lret
out
movb
push
dec
lcall
inc
xor
mov
in
sbb
jl
mov
sub
pushf
xchg
adc
test
aad
add
or
push
rcl
cmpsl
fisubrs
test
or
sarb
push
and
mov
or
jmp
aaa
jmp
cmc
sub
xor
jne
bound
mov
mov
xchg
xor
sbb
push
mov
or
roll
push
xor
xor
popf
adcb
xchg
scas
jbe
xchg
and
add
dec
adc
addr16
and
sbb
sahf
or
mov
inc
and
sub
push
jo
das
in
outsl
xchg
push
addl
ret
inc
gs
mov
xor
out
dec
xchg
xchg
xchg
mov
mov
lcall
sub
cmpb
ret
adc
jecxz
scas
cmpsl
lods
mov
fldenv
xchg
sbb
ret
out
imul
pop
cmpsl
sbb
sbb
and
movl
test
test
popa
enter
in
adc
aad
xchg
shrl
and
add
sub
fmulp
sub
int3
sarb
js
dec
jg
je
test
xchg
add
or
jmp
xor
jnp
xchg
cmp
ja
orl
xlat
subb
pop
insl
movsb
inc
addr16
test
and
or
push
sbb
out
jae
push
sub
mov
aam
adc
mov
and
sbb
xchg
sbb
test
das
shlb
sbb
xchg
sbb
sbb
rcrl
fldt
imul
mov
push
push
aam
sub
hlt
mov
xchg
out
sub
jns
xchg
jmp
push
ret
cmp
xchg
and
ss
adc
add
mov
jo
mov
cmpsl
rcl
and
orl
mov
faddl
sbb
push
pop
and
aad
and
inc
push
jo
lcall
fiadds
fs
xor
cmp
jmp
pop
fldt
dec
fcomp
xchg
xchg
popa
inc
sahf
add
movsl
push
or
shlb
imul
xor
xchg
pop
jne
cmc
sub
mov
outsb
leave
cmp
inc
add
pmaddwd
outsb
inc
movb
xor
pop
cmp
add
cmp
add
or
add
mov
popa
sbb
or
mov
iret
fnstenv
or
jno
adc
lahf
in
test
adc
lock
push
mov
test
add
jno
rcrb
and
pop
outsl
jl
mov
push
sti
add
daa
shrb
test
inc
adc
sbb
addr16
iret
bound
dec
or
mov
lcall
inc
adc
mov
shl
add
pop
sub
add
daa
sbb
inc
mov
mov
dec
jmp
sub
sub
mov
inc
pop
inc
and
minps
add
out
and
or
fists
scas
insl
fists
loopne
pusha
inc
xchg
test
imul
cmpsl
and
mov
mov
repnz
daa
arpl
adc
and
inc
ljmp
shlb
xchg
insb
add
xor
or
rcr
cli
div
rorl
lret
mov
xor
add
pop
insb
dec
or
int
mov
adc
jns
movsl
imul
mov
adc
fistpl
pusha
mov
leave
jno
or
jecxz
mov
nop
lahf
mov
dec
pop
negl
lret
cmpsl
mov
outsl
xor
into
mov
hlt
insb
mov
idivl
adc
mov
sbb
and
nop
fisubrs
pusha
cmp
xchg
ja
out
sbb
mov
rcr
out
push
xchg
in
rcrl
mov
pop
imul
mov
pop
jnp
sbb
hlt
push
jle
into
loopne
jge
in
add
adc
fcmovu
inc
cmp
jmp
repnz
loope
mov
push
mov
add
fadds
push
cmp
insl
js
outsl
xlat
rorb
pop
dec
out
push
cld
inc
inc
cli
push
aam
push
mov
shrl
and
insl
jne
orb
lea
mov
testb
jmp
lret
push
push
sarb
out
sbb
test
xchg
dec
and
imul
lds
aas
mov
lock
inc
das
ss
stos
shll
loope
jns
cs
dec
lock
lahf
scas
push
enter
add
xchg
sahf
pop
das
into
jnp
pop
aaa
imul
jp
repz
mov
addr16
out
rorl
fldt
jecxz
jge
negl
daa
mov
andb
fdivp
lock
insb
xor
mov
fsubrl
out
jmp
sbb
mov
sbb
dec
pop
dec
negb
mov
jle
lahf
into
lret
into
imul
fdivr
fbstp
shll
adc
xchg
js
or
fldenv
call
sahf
add
dec
mov
mov
cmp
sbb
fbstp
push
in
add
mov
fsubrp
loope
cli
mov
mov
sbb
repz
lea
pop
gs
lret
lret
lea
ret
pop
imul
sti
sub
out
mov
jmp
jecxz
cmp
out
pop
dec
repz
xchg
xchg
js
into
xor
inc
or
ficoms
outsl
rolb
add
mov
dec
xchg
lret
lods
test
add
mov
leave
mov
push
aaa
inc
add
aas
push
push
dec
lock
sti
jp
add
ds
xchg
rolb
inc
pop
fadds
out
add
jnp
mov
ret
xor
xor
push
popf
jl
es
pop
jecxz
clc
mov
sbb
lds
jmp
popa
mov
mov
in
vcomisd
dec
mov
jne
jae
or
xor
push
mov
mov
xchg
sbb
pop
mov
sub
dec
repz
iret
pop
mov
popa
dec
pop
sub
jecxz
and
imul
inc
xchg
cld
sahf
popa
repz
mov
add
out
ja
or
cmp
jne
adc
or
testb
dec
adcb
add
xor
and
stos
add
sbb
mull
aaa
ja
in
lea
out
pop
jg
pop
add
cmpsb
pop
imul
mov
iret
int
not
pop
xlat
es
pop
cmpsl
roll
inc
js
shlb
test
out
and
cwtl
lahf
dec
daa
pop
orb
or
daa
and
pop
mov
iret
add
xchg
outsl
adc
lret
aaa
mov
sbb
outsl
negl
outsb
popa
pop
lret
iret
and
cmpsl
cmp
andl
dec
nop
or
add
movsl
daa
xchg
xchg
jmp
push
sbbb
shrl
inc
in
fstpl
push
lods
fiaddl
outsl
fdivl
fs
ds
xor
int
mov
lahf
cmp
push
out
cmp
fwait
je
cmp
xor
adc
cmp
jno
sub
inc
aam
mov
inc
mov
hlt
aas
jmp
jg
popf
dec
cmp
adc
dec
es
aaa
lods
shll
jo
sub
fsubrp
es
add
gs
or
gs
nop
popl
arpl
xchg
imul
add
push
push
fwait
pushf
mov
cmpl
add
adc
push
or
jge
push
inc
mov
jbe
enter
jbe
aas
out
cmp
pop
dec
adc
out
movl
dec
jbe
test
add
nop
testl
or
adc
and
mov
and
xchg
js,pn
pop
mov
sti
mov
mov
pop
inc
jbe
add
ret
mov
mov
icebp
lock
and
or
cmp
sub
mov
jnp
es
dec
cmp
and
das
dec
add
sub
in
in
loopne
ss
inc
cmp
lds
loop
cmpl
jne
mov
push
xchg
notl
int
xchg
pop
xchg
insl
mov
xor
sbb
and
cmpsl
jbe
add
dec
push
incl
sbb
adc
pop
cmp
loope
pop
adc
nop
dec
shlb
or
xor
lock
cs
js
sub
outsl
inc
fcomps
or
pop
push
sub
push
hlt
fsubs
test
push
dec
inc
xor
jo
or
aaa
push
or
sub
hlt
repnz
into
adc
insb
and
test
test
mov
js
arpl
sbb
and
and
pop
jne
loop
je
dec
xlat
pusha
xchg
je
fildl
xlat
sbbl
jmp
push
movsb
add
adc
fsts
pop
sbb
xchg
stos
cmp
jge
cmpl
mov
insb
xchg
icebp
xchg
pushf
dec
loopne
nop
mov
pushf
add
mov
dec
xor
mov
jle
std
dec
sbb
bound
popa
mov
sbb
loope
sbb
pop
pop
push
adc
cmpsl
or
pop
pusha
add
out
fistps
jae
test
add
sti
mov
dec
pop
jmp
add
or
push
lahf
mov
xor
jno
cmp
xor
inc
and
xchg
popf
das
rcll
xorl
mov
sbb
sbb
mov
mov
lahf
jb
enter
and
scas
fisubrs
daa
sbb
outsl
lods
pop
jecxz
mov
sub
movsb
test
mov
and
inc
jnp
pop
dec
inc
fimull
xchg
cltd
in
xchg
add
fildl
mov
push
mov
lods
mov
sti
xchg
inc
pop
scas
rcll
mov
dec
xor
shrl
add
pusha
cmp
xchg
fidivl
push
cmp
mov
xcrypt-ctr
cmpsl
sbb
adc
addb
push
dec
sbb
clc
xchg
sub
mov
mov
cmp
test
sub
cmp
ret
es
js
das
xor
sbb
aam
cmp
inc
xor
dec
mov
push
icebp
lret
or
mov
dec
push
stos
aaa
stos
rcrb
adc
mov
rclb
imul
push
adc
cltd
xchg
mov
xchg
sbb
shlb
add
push
pop
test
test
notl
inc
test
xor
fs
jnp
push
pop
jb
dec
xchg
dec
pushl
cwtl
aam
lret
jecxz
call
call
add
mov
pop
enter
jno
lcall
js
dec
xor
int3
test
push
jae
adc
mov
push
push
daa
push
inc
cmp
subl
jecxz
jle
pusha
lock
cmpl
sub
fmull
cmp
aad
jg
mov
sti
ret
mov
bound
dec
pop
out
pop
aaa
or
leave
add
xor
movsb
sbbl
bound
sbb
ficompl
fsubrp
xor
add
adc
lahf
iret
ljmp
lret
sub
pop
ljmp
push
push
and
in
or
xor
jnp
cs
pop
or
fldenv
xchg
in
inc
int
or
mov
mov
add
add
add
jl
or
fnstcw
aad
jbe
push
ret
out
int3
cltd
dec
loopne
gs
imul
add
dec
cmp
mov
xor
push
ja
add
rorl
leave
pop
test
xchg
and
adc
fisttpl
cmpl
int3
xchg
pop
out
xor
dec
cmp
adcb
dec
scas
cmp
and
push
mov
sar
mov
jne
lret
lret
or
sbb
into
pop
push
es
sbb
cmc
mov
fmul
popa
out
out
mov
xor
jo
xchg
es
sti
int
mov
shrb
cs
insl
call
xlat
cltd
subb
ret
xchg
test
mov
pushf
test
push
ret
neg
adc
and
inc
rol
push
mov
test
je
notb
dec
pop
mov
scas
pop
add
sbb
jo
sub
into
or
in
or
jae
out
mov
jns
fisubs
int3
push
ficoms
scas
cltd
aad
adc
cmp
jbe
lds
cmp
dec
out
xchg
aaa
clc
mov
out
add
daa
inc
data16
outsb
mov
arpl
ret
xchg
shrl
jnp
cmp
js
ret
cmp
mov
add
and
lcall
add
xchg
adc
mov
hlt
sahf
xchg
push
adc
aaa
out
es
mov
sbb
pop
aas
pop
sub
outsl
inc
addr16
mov
lds
std
cmp
mov
xchg
mov
or
xchg
mov
jno
popa
into
push
add
popl
fmuls
in
ds
movb
fwait
outsb
je
xorl
add
mov
mov
cmp
scas
rolb
out
in
add
or
cmp
xchg
scas
popa
popf
inc
xchg
cwtl
jg
and
add
pusha
rorl
ja
lods
sbb
add
out
movsl
jp
inc
testb
add
js
push
outsl
test
dec
test
jnp
out
out
dec
lahf
cmp
lods
sbb
loopne
imul
xchg
jne
add
pop
dec
push
cmp
sbb
out
movsb
pop
pop
sti
dec
outsb
insb
into
sbb
decl
push
mov
pop
arpl
lds
in
movsb
dec
scas
jmp
bound
repnz
mov
inc
push
jns
cs
ret
jns
mov
inc
adc
adc
inc
cmp
add
stos
rorb
jecxz
sarl
popf
xchg
cmp
shll
insb
xchg
ja
push
aad
shlb
pop
mov
add
mov
mov
dec
incl
sbb
out
insl
pop
jg
cmp
xchg
sti
cmpsb
cltd
mov
cmp
pop
sub
scas
das
fwait
inc
enter
add
jns
sub
cmp
add
fisttpll
ss
into
sub
fldcw
adc
push
out
mov
and
ja
sarb
insl
lods
push
inc
mov
pop
inc
psubd
mov
jnp
dec
inc
ret
jb
adc
adc
aaa
jecxz
jmp
inc
out
stos
mov
xor
into
fwait
sub
out
popf
in
jno
add
inc
lock
pusha
cmp
cmp
pop
xor
adc
pop
inc
mov
mov
leave
sub
push
pop
push
loop
orb
es
insb
pop
test
out
movsl
fisttpl
dec
pop
xchg
cmp
and
dec
subl
lahf
sbb
fwait
out
fnsave
xchg
lea
ret
or
dec
mov
insl
movsl
add
jae
fildll
lret
mov
rsqrtps
pusha
xor
sub
xchg
mov
add
mov
outsl
xor
add
pop
cmp
jne
add
dec
lahf
cmovnp
add
mov
xor
popa
test
jae
movsl
xor
mov
mov
ja
arpl
adc
add
mov
jecxz
xchg
rclb
mov
or
out
cs
inc
lret
add
mov
adc
xor
inc
and
mov
add
jl
popa
push
pop
pop
sub
xchg
cmp
cmp
inc
pop
test
loop
call
call
ret
lds
ljmp
fmuls
jg
negl
jl
in
add
ret
or
xchg
cmova
andl
cmc
mov
jb
add
ja
cmp
jns
les
sbb
or
testl
rcr
adcb
adc
inc
mov
mov
cmp
mov
fadds
bound
jbe
dec
out
jbe
xor
add
movsl
push
bound
lds
cmpsl
pushf
dec
imul
aaa
inc
pushf
jne
inc
sub
cld
enter
jmp
cmp
push
xor
pop
movb
out
dec
dec
and
je
jmp
mov
rorl
adc
pop
je
xchg
pop
mov
scas
xor
je
aas
add
cmp
add
call
pop
repz
dec
ret
jae
mov
push
out
or
sbb
mov
addb
add
iret
ss
sub
pushf
xor
shll
out
pop
mov
leave
sbbb
cmpsl
inc
ja
add
mov
sti
pushf
and
mov
add
add
pop
aad
mov
xchg
mov
push
mov
test
mov
cmpsl
dec
mov
roll
dec
xchg
dec
inc
xchg
scas
aaa
push
in
jecxz
dec
and
push
adc
addr16
xor
add
xchg
push
add
push
enter
dec
cs
or
cmpsb
js
dec
mov
jo
lods
idivl
mov
sbbb
insl
pop
das
mov
ja
jbe
pop
lock
pop
sub
pushf
test
test
and
orb
cmp
popa
inc
mov
cmp
scas
into
push
fcom
add
imul
ja
push
jecxz
push
add
add
add
sbb
push
clc
inc
hlt
add
sbb
add
outsb
add
lahf
pop
dec
or
je
xchg
mov
inc
ja
insl
into
mov
pushf
out
sbb
push
cmp
dec
in
mov
stc
lock
xor
jno
push
mov
shr
mov
cmp
or
inc
inc
lret
dec
lea
lods
add
sbb
test
push
das
dec
popf
dec
pop
adc
pop
ret
add
dec
xchg
je
push
xor
fisttpl
adcl
clc
xor
idivl
enter
push
dec
test
pusha
inc
inc
ja
dec
or
dec
sub
mov
jno
or
dec
mov
cs
subl
sub
test
imul
jmp
cmp
ficomps
pop
js
enter
jle
cmp
sub
ja
and
rorl
xor
xchg
sbbl
and
dec
pop
inc
cmpsb
addr16
int3
lret
rolb
fbld
fistpl
xchg
dec
or
mov
mov
mov
popf
hlt
and
mov
xor
lods
add
test
mov
stc
fistpl
dec
xchg
loope
dec
add
or
xchg
pop
call
cmp
add
test
outsb
popa
sbbl
cmp
dec
sbb
movsl
stc
leave
outsl
fnstcw
inc
lcall
xchg
cmp
ret
and
das
mov
jo
jmp
popf
in
and
pop
ret
pushf
cmpsl
out
add
push
loopne
push
lret
and
sbb
add
pusha
lock
lahf
shrb
js
mull
aad
add
mov
sbb
je
sub
jo
push
pop
add
lsl
lods
push
scas
mov
fstps
clc
pop
int
sub
or
dec
adc
aaa
dec
gs
inc
out
adc
and
mov
sbb
xchg
mov
sbb
in
push
mov
mov
or
mov
jae
pop
jnp
mov
popf
fisttpll
xchg
fsubr
sub
inc
into
sbb
cmp
repz
dec
cmp
dec
mov
dec
mov
loope
add
and
cmpsl
or
inc
inc
loopne
sbb
sti
jecxz
test
dec
loopne
add
ret
inc
out
ficoml
xchg
add
pop
mov
mov
adcl
ljmp
movb
repz
repz
inc
jmp
cmp
adc
dec
add
repz
mov
mov
cmp
hlt
js
movsl
mov
add
pop
rcll
adc
jns
das
pop
pop
sbb
scas
sbbb
sbb
call
sub
jecxz
jbe
xchg
out
xor
ja
push
test
or
pushf
xchg
popa
out
shrb
add
xchg
test
mov
push
in
cmp
repnz
mov
pop
add
lods
js
lds
out
loopne
not
inc
gs
addr16
aaa
aad
inc
cmc
aam
jno
pop
add
outsb
dec
jge
jns
aam
push
cmp
repz
es
cmp
ja
push
inc
mov
shlb
loopne
mov
push
imul
add
imul
xchg
push
or
movsl
mov
pop
xchg
xchg
jb
push
sti
rcrb
dec
sub
std
imul
xor
insl
aad
mov
jmp
inc
mov
mov
sbb
mov
subb
add
cmp
jo
int
aad
push
add
popl
sahf
sbb
ret
fisubrl
lret
test
adc
mov
jmp
mov
push
jp
xor
inc
arpl
or
insl
and
xchg
jmp
andl
inc
stos
xchg
es
xor
movsl
xchg
es
cmp
test
cmpsb
rclb
cli
jecxz
jmp
stos
pop
cmp
les
xchg
jmp
stos
mov
inc
insl
cmc
add
in
es
jno
incb
push
xor
xlat
mov
mov
pushl
mov
push
xchg
mov
xorl
sbb
xor
add
cmc
dec
add
ret
lret
popa
fidivrs
pop
and
sbb
fisttpll
inc
sbb
jne
mov
lcall
lahf
lret
sbb
insl
push
jge
movsb
pop
mov
jae
popf
push
add
mov
movl
add
mov
push
add
xchg
popf
xchg
lock
mov
lahf
sub
add
xchg
mov
es
movsl
sbb
das
cmp
les
dec
xor
test
adc
mov
add
add
pop
imul
out
popa
sbb
xor
pop
jnp
fstpt
lock
cmpl
ret
repnz
sbb
jae
jnp
or
cmp
cmpl
cmp
cltd
aas
add
inc
ret
pop
bound
mov
jae
mov
and
inc
jecxz
popa
loope
lret
mov
push
xchg
pop
add
xchg
bound
inc
sbb
push
mov
xorl
out
push
mov
out
or
lahf
out
jno
adc
xor
into
xchg
mov
popf
xor
xor
aam
nop
push
pop
into
dec
add
aas
add
or
cmova
popf
cli
stos
loopne
mov
gs
cltd
mov
xor
sbb
stos
dec
mov
push
ret
cmpsl
xor
pop
mov
adc
int3
inc
in
pop
pop
arpl
cltd
daa
add
dec
and
ret
pop
lahf
xchg
xchg
rcrl
mov
sub
mov
jnp
pop
insl
pop
out
push
pop
mov
add
and
lahf
jae
or
add
pushf
xchg
notb
jg
and
pop
jbe
push
cwtl
test
jns
pop
add
xchg
aam
fsub
lods
scas
in
inc
lods
lods
test
mov
scas
mov
mov
pop
movsl
ret
mov
xchg
add
repnz
push
mov
incb
fisubrl
pop
mov
mov
pop
sbb
leave
aas
pop
and
pop
das
out
repnz
push
pop
mov
or
sub
dec
ja
mov
cmpsl
xchg
or
rcrl
pop
dec
repnz
xor
push
sbb
xchg
pop
pop
sub
sub
pop
iret
dec
scas
inc
push
cmc
les
add
out
mov
imul
test
cmp
rclb
aam
gs
xchg
insl
lods
dec
add
dec
sub
add
test
jae
add
cmovg
adc
inc
aaa
dec
mov
xchg
daa
sbb
sbb
pop
fcmovu
adc
xchg
add
dec
test
adc
mov
mov
or
lods
lods
add
cmp
sub
popa
movaps
and
cli
fisubrs
pop
and
stos
mov
adc
inc
pop
pop
sbb
push
jnp
int3
jbe
add
or
adc
test
xlat
pop
and
cmp
sahf
adc
popa
pop
jno
out
sarb
inc
and
cmp
jl
jne
fistps
sub
and
lds
lea
push
or
mov
or
inc
dec
aaa
pop
cmpsl
or
mov
in
out
jmp
aaa
pop
cmpsb
mov
lret
scas
ljmp
jmp
mov
mov
xchg
sbb
push
adc
movzwl
add
or
popf
adc
push
or
insl
and
aas
daa
subl
xcrypt-cbc
cmpsl
pop
or
aas
xchg
sti
pop
cltd
add
add
xchg
mov
je
stos
imul
push
sbb
jp
clc
mov
mov
cmp
adc
loop
negb
inc
movsl
das
or
cmpsl
xor
or
ror
jbe
fwait
or
add
sbb
loopne
add
jnp
mov
mov
push
mov
dec
or
outsl
jno
fwait
or
or
scas
jg
lahf
stc
lcall
and
scas
sti
sbb
popa
adc
fistpl
and
mov
xorl
mov
or
jge
imul
push
pop
adc
or
mov
adc
fnsave
pop
cltd
and
push
adc
mov
mov
push
je
push
or
jge
sbb
or
jae
popa
pop
sbb
jl
notl
or
leave
xchg
inc
mov
xor
popa
mov
loop
iret
cmp
xchg
in
stos
jnp
in
jmp
icebp
or
cmp
cmp
into
add
cmpsl
xchg
cmpsl
and
and
sbb
jp
aad
sub
ffree
out
push
jae
int3
inc
cmpsl
and
push
mov
sub
mov
mov
jne
popa
inc
data16
out
pop
mov
cltd
bound
xor
pusha
pusha
nop
adc
cmp
dec
popa
xor
and
adc
out
idivb
and
push
popa
cli
scas
stc
mov
movsl
and
movsl
sub
push
or
adc
push
add
adc
pop
sbb
test
pop
dec
outsb
mov
lods
ficompl
inc
call
daa
jbe
jge
add
lret
mov
and
sbb
jo
negl
inc
push
into
in
and
sub
cmpsl
pop
add
daa
in
or
icebp
fstpl
in
mov
and
int3
loope
bound
popa
call
cld
data16
leave
ds
je
lcall
dec
xchg
int3
mov
or
jae
xor
pop
mull
mov
inc
loop
test
fwait
clc
mov
push
jl
int3
add
std
pminsw
dec
jae
fisubl
xor
inc
inc
ret
and
fdiv
scas
imul
add
mov
jle
or
xchg
cmp
xchg
add
or
arpl
aam
dec
push
rclb
subb
adcl
mov
test
mov
adc
inc
jle
std
js
push
mov
stos
rcll
int3
inc
adc
mov
dec
mov
lret
inc
lods
test
sahf
aad
inc
push
repnz
inc
cli
pop
mov
stos
push
add
jno
movb
clc
repnz
ret
fadds
rolb
outsl
jbe
add
push
push
adcl
dec
loopne
rcrb
inc
and
rorb
ret
push
mov
inc
movsb
aam
lock
xchg
sahf
fscale
dec
ja
fstpl
test
ja
insl
sbb
xchg
push
inc
fistpll
nop
mov
aaa
sahf
xchg
add
jnp
jo
mov
sbb
mov
sbb
adc
pop
inc
or
mov
xor
jne
test
in
testb
mov
cmp
ja
clc
mov
add
data16
adc
daa
xor
push
jbe
push
mov
mov
inc
scas
jp
sahf
push
mov
inc
mov
stos
es
inc
inc
imul
push
ret
mov
jle
hlt
inc
jo
mov
push
mov
hlt
and
out
push
dec
inc
je
pop
std
out
sbb
insb
sbb
cmp
jp
test
call
cld
cmc
mov
aaa
mov
xchg
inc
dec
mov
mov
inc
adc
jle
adc
cs
jo
jp
jecxz
inc
push
jmp
js
push
in
pusha
icebp
pop
push
push
insb
and
das
inc
inc
shll
push
test
inc
ljmp
bound
insl
cld
bound
sahf
popa
and
inc
push
in
stos
jmp
out
in
aas
adc
test
sbb
fdivs
and
add
jo
pop
cmp
or
popf
jp
add
pop
subb
imul
out
add
xchg
cli
je
stos
xchg
add
mov
cmp
xchg
and
inc
test
std
sub
add
and
jecxz
add
rcrb
les
push
popa
das
add
xchg
pop
pop
jl
push
adc
dec
inc
and
and
add
out
sbb
aas
pop
test
outsb
mov
sub
push
mov
scas
push
sbb
mov
pop
mov
loopne
rcll
sbb
inc
fwait
shlb
jbe
ret
or
pop
mov
cli
jle
add
mov
add
shr
dec
mov
push
lods
pop
fcoms
sub
mov
and
test
call
mov
adc
fcomip
sub
lock
mov
push
lcall
lret
int
push
inc
push
es
cli
adc
cs
icebp
hlt
pop
test
and
mov
movsl
inc
pop
inc
loope
push
cwtl
out
mov
ret
lret
pop
mov
pop
test
jecxz
sub
pushf
xchg
push
xchg
push
jmp
xchg
jb
or
cmp
jp
scas
or
in
push
pushf
or
inc
ljmp
ljmp
mov
sub
stos
mov
and
sub
jo
pop
daa
fisttpl
dec
cmp
xorb
pushf
je
insb
jp
sbb
jge
in
lds
or
sti
lcall
out
push
jle
mov
fwait
movsb
or
movsb
xchg
xor
inc
test
xchg
pop
mov
xchg
ficoml
push
in
repz
mov
arpl
ret
aaa
mov
add
icebp
stos
rcrb
add
xchg
push
push
add
lock
imul
insb
mov
lret
mov
dec
call
sahf
call
inc
push
pop
outsl
and
popf
jecxz
inc
xlat
push
lahf
scas
je
jne
fwait
cmp
pusha
and
outsl
inc
les
mov
push
jp
xchg
sub
bound
jge
scas
jp
in
lret
pop
notb
out
out
adc
sahf
test
mov
inc
movl
out
fisubl
jnp
into
push
cmpb
ret
decb
es
inc
push
mov
ljmp
xchg
add
mov
addr16
add
dec
jmp
bound
pop
push
dec
fcmovu
and
in
dec
push
je
or
loopne
jae
inc
push
pusha
mov
and
jl
nop
pusha
dec
adc
pop
push
dec
dec
pop
pop
cmp
je
pop
mov
cmp
repnz
jl
jb
mov
mov
push
jne
sarb
add
aas
mov
xchg
inc
jbe
and
cmpl
pop
push
into
push
push
loopne
jle
push
or
test
repnz
pop
xchg
push
adc
and
scas
mov
stc
mov
mov
or
stos
push
pop
pop
mov
out
daa
test
into
and
lods
xchg
push
push
cmpsb
int3
xchg
popf
call
lcall
push
xchg
fisubrl
and
pop
icebp
dec
jg
aad
or
cld
mov
rolb
add
inc
cmc
dec
out
mov
mov
negl
push
in
cld
mul
jo
mov
adc
push
dec
enter
lods
adc
jb
mov
dec
mov
rcl
enter
add
test
int
roll
cwtl
push
stos
scas
shl
xchg
fwait
or
cmpsb
pop
lods
jecxz
mov
lcall
pop
mov
add
loopne
push
aaa
es
bound
cmc
mov
xchg
mov
mov
fstl
xor
icebp
adc
mov
popa
cmpxchg
shll
insl
add
nop
xor
inc
xchg
orb
roll
mov
xchg
mov
bound
std
add
jne
fsubrp
das
jnp
sti
popf
sahf
and
icebp
mov
lret
shl
and
call
push
cltd
mov
sub
call
lock
lock
inc
inc
push
xor
pcmpeqd
stos
loop
cltd
mov
or
out
inc
sbb
loop
xchg
mov
popf
int3
jge
push
jl
push
push
imulb
mov
push
add
aad
mov
pusha
or
cmp
jnp
or
mov
mov
dec
and
cli
dec
aad
pop
or
and
lcall
xor
xlat
stos
sub
push
jb
addb
test
push
rcl
insl
test
lea
inc
repz
loop
subl
push
sbb
imul
inc
pop
add
icebp
repnz
stos
in
minps
mov
js
lods
hlt
or
lea
fmull
cli
or
cmp
mov
scas
pusha
push
jno
dec
ljmp
ret
fildl
insl
adc
test
imul
pop
push
inc
inc
push
push
inc
rorb
xchg
add
scas
push
sbb
inc
sbb
inc
call
es
jge
rcrl
mov
enter
mov
mov
ja
mov
sub
je
sahf
pop
in
dec
mov
ss
gs
lcall
add
or
push
bound
dec
clc
xchg
iret
inc
js
repnz
out
push
rorb
mov
jnp
loop
or
cmp
xlat
jp
out
pop
push
fstpt
cs
jno
xor
pop
arpl
lcall
lock
mov
andb
xchg
jnp
pop
sub
shrl
jbe
jnp
inc
cmp
xchg
push
mov
cmpsb
xchg
scas
push
pusha
nop
lret
sbb
cltd
and
insb
int
push
cmp
jnp
mov
inc
and
test
inc
test
cmp
ja
add
pop
xor
pop
xor
mulb
mov
jge
mov
adc
repnz
insb
outsb
js
lods
add
int3
lods
jle
js
push
test
mov
pushf
ficoms
call
adc
xor
mov
rol
jnp
test
fsubrs
jl
lods
and
pop
pop
cltd
mov
cmp
fisttps
cmp
shll
es
cmpsl
jne
out
jns
inc
add
aad
xor
push
add
lcall
add
jle
in
mov
mov
popf
pop
pop
sub
insb
fdivl
icebp
push
into
es
scas
hlt
add
jne
cmpsb
lock
divl
adcl
push
mov
js
cmp
out
lahf
lcall
or
ds
movsb
mov
and
insb
add
cmpl
mov
mov
inc
icebp
jns
or
xchg
xchg
pop
daa
jns
dec
or
add
push
xor
leave
hlt
daa
mov
jge
es
imul
es
ret
mov
xchg
test
dec
inc
clc
xchg
shrl
jmp
mov
jg
sub
push
jo
in
inc
mov
or
cli
lods
jnp
in
jbe
dec
push
jmp
mov
mov
jae
and
loope
rcr
fisubrl
jne
cwtl
jle
mov
loopne
cwtl
inc
push
ret
dec
into
mov
loope
mov
data16
mov
or
push
jg
out
jo
insb
pop
mov
mov
cmp
jmp
lods
cmp
push
dec
pop
or
in
cld
and
ret
sub
jbe
in
testb
das
in
adc
rorb
fiaddl
jns
jbe
mov
mov
pop
fidivl
shl
shll
jb
hlt
rclb
bnd
cmp
repz
insb
push
pop
xchg
and
jnp
add
hlt
pop
fisubl
addr16
sbb
push
aam
or
mov
sbb
mov
pop
add
cltd
mov
ss
sub
cwtl
pop
mov
fwait
mov
mov
xor
mov
jae
cmp
xchg
pop
jle
jne
popf
mov
stos
sub
sti
test
push
fcmovnbe
subb
out
aad
mov
fistpl
cmp
mov
inc
jge
rcrl
sub
add
gs
mov
and
cmp
add
outsb
rorb
shlb
shlb
aad
mov
jns
les
mov
add
sub
mov
cmp
jg
fdiv
pop
not
add
xlat
mov
xorb
push
movsb
add
ss
push
cltd
repz
mov
mov
sub
and
repz
jne
and
pop
ss
roll
cmpsl
and
out
xorb
add
mov
shl
mov
pop
inc
test
dec
add
or
adc
inc
add
pop
cmp
ret
xchg
lret
mov
xchg
mov
fisubl
push
in
test
das
jns
test
shr
insl
push
aad
sub
out
adc
pusha
or
popf
pop
fnsave
lods
aaa
popf
call
push
in
fsubs
add
mov
push
add
lahf
clc
inc
and
adc
xchg
mov
test
mov
or
out
or
xchg
pop
lea
clc
loop
push
ss
sub
add
cwtl
mov
push
hlt
call
fsubr
push
jle
cmpsb
sub
mov
fs
adc
jp
div
shrl
jmp
orb
sbb
sbb
adc
xchg
cli
adc
data16
popw
add
add
lods
mov
mov
add
push
mov
arpl
mov
dec
pop
lcall
incb
out
sub
lcall
mov
mov
dec
movb
shll
push
js
push
inc
addl
movsl
add
pop
gs
loop
repnz
cwtl
lcall
xor
jne
jns
mov
loop
xor
ret
sub
popf
mov
sub
dec
mov
push
andb
or
jmp
subl
scas
in
mov
sub
jmp
aas
popa
ret
pop
or
jmp
incb
jmp
ret
jno
mov
lods
je
pop
dec
jmp
mov
xchg
jae
mov
inc
data16
lret
std
ret
xor
mov
jp
cmc
push
jno
jbe
jmp
or
sub
push
xor
or
fstl
add
or
mov
xchg
ret
jb
loop
inc
mov
mov
xchg
xor
movsl
pop
xor
nop
cmp
xor
shll
js
xlat
or
daa
pop
out
imulb
lahf
adc
lret
les
fwait
pusha
aam
inc
inc
pop
add
aaa
paddq
les
rorb
push
sahf
xchg
sbb
mov
div
jno
xchg
push
and
adc
sbb
loope
sub
sbb
call
bound
mov
testb
jb
cmp
jne
sub
inc
xchg
jle
mov
aam
scas
dec
lret
pushf
pushf
push
xchg
stos
adc
dec
adc
adc
dec
jne
cmp
loope
mov
add
out
xchg
ret
sarl
loopne
cmp
int3
or
mov
movsl
jle
pop
push
push
hlt
fidivs
push
lgs
mov
repnz
test
cld
imul
arpl
rcl
lock
jnp
rolb
data16
jg
xchg
xlat
jnp
push
mov
mov
aad
out
xor
ret
sbb
dec
adc
nop
js
pop
mov
xor
adc
ret
loope
push
cmp
cmpsl
lret
in
movsl
popa
nop
int3
shlb
into
pusha
adc
xchg
add
call
setne
dec
mov
cmpsl
test
mov
push
inc
and
outsl
or
je
sub
dec
jge
in
js
rclb
adc
fsubs
pop
loopne
in
add
jnp
or
popf
int3
fdivr
push
xchg
std
mov
rcl
add
mov
adc
aam
movl
hlt
pop
negb
imul
addb
inc
sbb
push
xor
pop
je
aaa
dec
cmp
adc
add
jo
cmc
orb
and
ds
das
pusha
push
inc
and
mov
pop
popa
mov
xor
clc
pop
aad
xchg
or
push
rorb
and
dec
in
testb
fcomp
lods
mov
sti
aam
sub
add
xchg
inc
rclb
es
sbb
fwait
sbb
add
cmp
sahf
fcoml
mov
jns
cmc
xor
jg
mov
jb
cld
pushf
jp
xor
sahf
push
inc
ljmp
mov
lds
or
sub
mov
lods
notb
stos
mov
add
inc
jp
fsubs
andnps
mov
cmpsl
push
inc
jae
jl
xor
xor
add
jecxz
mov
loopne
lock
mov
fxch
ret
clc
loope
out
or
rol
test
mov
add
cmp
adc
cwtl
clc
xor
faddp
xchg
dec
andb
dec
and
lods
push
adc
into
icebp
test
fbstp
sub
mov
stos
lret
lcall
mov
dec
insb
mov
scas
sarb
paddsw
mov
lahf
jecxz
xchg
xor
iret
add
fisubs
test
jo
cld
xor
mov
mov
enter
sub
sbb
pop
sahf
pop
inc
mov
test
aas
dec
fldl
das
dec
cmpsb
leave
das
lret
add
clc
mov
ret
rclb
pop
push
fcomip
jmp
push
mov
and
jb
ja
cmp
stos
cs
js
xchg
mov
data16
mov
test
sub
add
jmp
or
lods
push
jecxz
push
add
push
mov
fs
pop
jge
mov
hlt
jge
jbe
shrl
pop
push
mov
roll
fdiv
loop
test
or
add
test
data16
lea
and
sahf
aaa
and
shrl
fcompl
lahf
xchg
pop
pusha
xor
pusha
pop
push
mov
hlt
xchg
scas
mov
cs
push
loope
sti
sbb
mov
shrl
int
in
dec
push
insl
fdivrs
xor
jl
ds
clc
add
dec
dec
addb
or
push
lock
mov
xchg
rcrb
add
idivb
jl
aas
push
cmp
cmp
cmp
dec
cltd
dec
add
push
pop
inc
pusha
aam
cwtl
sbb
push
adc
cld
call
mov
inc
and
icebp
scas
jbe
add
mov
lods
xchg
mov
xchg
or
jl
jo
mov
sbb
sbb
lock
cmp
and
push
push
mov
and
leave
idivb
cwtl
pop
push
mov
sarl
inc
ret
sbbb
addl
cmp
add
and
push
movsl
test
in
and
mov
mov
imull
dec
pop
pop
adc
lea
mov
xchg
shlb
ss
fcom
xor
add
std
scas
lahf
out
rclb
shl
cs
pop
adc
jge
stos
out
ss
pop
andb
arpl
push
ret
lock
leave
test
cmpl
dec
or
mov
movsl
jbe
mov
aad
pop
test
out
adc
int3
cwtl
mov
and
inc
xor
dec
mov
pop
cmp
xchg
jb
mov
push
mov
adc
fisubl
test
jp
inc
loope
mov
scas
fs
test
xchg
xchg
pop
scas
push
es
dec
pop
jecxz
stos
out
mov
scas
and
mov
mov
push
push
or
stos
xlat
push
sub
iret
push
sub
jg
ret
out
js
test
scas
inc
sub
or
testb
in
mov
rcl
add
mov
pop
ss
insl
inc
jb
jno
xor
loope
xor
xor
xchg
addr16
dec
mov
cld
insl
inc
inc
sarl
fsubrl
cmp
add
insb
and
sahf
into
shlb
cmp
adc
mov
mov
or
sbb
scas
mov
add
push
cli
outsb
dec
jnp
or
push
loope
addr16
repz
dec
jmp
hlt
mov
dec
shll
hlt
ss
mov
pop
xchg
fldl2t
notl
popf
pop
jmp
push
add
add
push
push
inc
ja
dec
cmp
add
sub
adc
lret
push
in
pop
push
sbb
std
jo
daa
gs
test
adc
movlps
dec
in
fldl
arpl
mov
push
scas
pusha
jb
stos
dec
add
pop
test
mov
or
mov
xor
xor
fisubrs
jge
dec
lods
sub
cmpsb
cs
xchg
push
jne
jp
mov
pop
stos
push
clc
shll
testl
inc
mov
add
outsb
fcomi
test
aad
test
sbb
ret
push
sub
jo
jns
cltd
mov
sbb
dec
cs
das
mov
and
jp
pop
lcall
inc
pop
icebp
and
jmp
lret
stos
dec
or
scas
dec
mov
mov
nop
sbb
fdivr
add
and
pop
daa
push
fs
ljmp
mov
fwait
push
loope
addb
ds
mov
add
cmp
add
aaa
dec
sub
inc
push
inc
mov
xchg
xchg
into
or
ret
and
loopne
aam
insl
flds
sub
or
xchg
sbb
add
dec
std
push
lock
dec
sti
xlat
inc
sahf
fisttpll
add
arpl
aaa
xor
jns
mov
mov
shrl
repnz
stc
in
lret
add
inc
add
inc
push
sbb
rclb
jnp
mov
unpcklps
mov
xchg
pop
je
add
adc
ss
pop
fldt
jo
imul
push
mov
fwait
xchg
loope
cmp
cmp
adc
xchg
cmpsl
incb
addr16
or
insb
pop
cmpsb
cmp
jno
in
xchg
cmpsl
push
pusha
mov
cwtl
mov
xchg
pop
xor
mov
inc
daa
movl
outsb
in
sub
jecxz
adc
imul
sbb
lret
xlat
mov
mov
sbb
adc
cwtl
inc
pop
dec
cld
inc
mov
mov
sbbl
sbb
lods
lret
mov
xchg
mov
cwtl
and
imul
inc
std
pop
into
pop
sar
out
rorl
jno
inc
or
or
clc
add
outsb
rorl
sub
inc
push
fsts
jle
shrb
fstl
sbb
mov
mov
and
jg
test
and
fwait
imul
fildll
inc
es
jge
lds
shrl
inc
mov
jle
mov
pop
or
push
jecxz
push
cs
push
cmp
mov
mov
imul
das
jno
mov
adc
js
fdiv
xor
mov
test
call
push
fidivl
out
ljmp
fadd
aad
or
cwtl
pop
push
add
inc
add
daa
jne
lods
es
in
dec
mov
inc
call
mov
push
dec
and
out
cmp
add
inc
pop
inc
mov
dec
push
dec
push
mov
mov
mov
les
sbb
and
mov
or
rol
add
cmp
jno
cmp
ret
test
fidivrl
lock
popa
mov
lock
mov
loopne
jb
dec
and
xlat
mov
jl
xchg
lock
sub
push
and
and
xchg
pushf
bound
test
fwait
adc
subb
subb
xor
test
cwtl
loop
xorl
mov
push
jp
pop
fstl
mov
mov
adc
loopne
sub
pop
add
xor
cmpsb
ss
pop
dec
aad
jne
shll
pop
ljmp
mov
cmp
sub
cmp
out
fiadds
shll
add
mov
xor
add
xchg
in
dec
add
aas
xchg
mov
int3
arpl
loop
fwait
and
lret
dec
imul
js
ret
roll
adc
push
pop
rcl
movsb
push
xor
push
jae
test
mov
mov
jo
cli
jno
leave
push
cmpsb
add
push
push
xchg
push
cmp
rcr
js
sbbl
pop
in
imul
popa
mov
or
cld
sbb
mov
cld
adc
int3
jbe
dec
push
push
les
mov
dec
stos
aas
adc
jp
jbe
adc
push
mov
aad
fsubl
ret
jge
jne
mov
mov
inc
lods
adc
iret
lock
and
adc
add
sbb
push
push
outsb
jg
lret
cmc
jae
xchg
push
aas
pop
call
lcall
sub
add
iret
mov
jmp
add
mov
sub
loopne
add
pusha
roll
leave
cmpsl
adc
add
cmpsb
mov
dec
cmp
insb
pop
outsb
out
xchg
or
or
push
push
adc
push
mov
pop
mov
mov
loope
xchg
jae
pop
in
push
xchg
push
mov
scas
pop
pop
xlat
dec
shll
cltd
dec
mov
or
sbb
or
jbe
mov
sub
test
out
add
cs
aam
outsb
mov
push
mov
mov
mov
dec
ret
mov
jle
mov
sarb
stos
dec
sub
movsl
pop
clc
pop
fdiv
stc
insl
and
fildl
mov
out
pop
pop
mov
jae
ljmp
pop
ret
dec
pop
or
pop
inc
mov
pop
ljmp
cwtl
rcrb
adc
pop
enter
xchg
rcl
cmp
push
dec
jo
jne
fcmovb
jbe
add
pop
jae
jbe
lcall
test
xchg
push
je
repnz
pop
inc
lods
pop
add
call
push
jmp
shr
mov
int
mov
adc
sub
ljmp
push
or
pop
inc
sub
pushf
mov
dec
mov
jae
movsb
subl
dec
ret
mov
push
or
xchg
aam
adc
testb
cmp
fs
mov
mov
lret
lcall
cs
cld
test
xchg
xor
fadds
hlt
movsl
and
inc
xchg
xchg
push
jg
test
xchg
push
lret
mov
int3
lods
jb
hlt
test
out
insl
cmp
dec
sub
add
insl
mov
inc
outsl
inc
hlt
lods
cs
das
imulb
lods
xchg
repnz
sub
ret
pop
add
mov
sbb
movsl
add
imul
rolb
stos
fistpl
es
dec
push
push
clc
addr16
shrl
outsb
sub
jnp
cltd
push
sub
je
shl
cwtl
loop
dec
mov
int
adc
dec
dec
lahf
clc
cmpsl
idivl
sub
add
pop
fwait
cmp
pop
push
add
jecxz
or
in
xchg
icebp
lret
inc
adc
aad
pop
in
stos
inc
fidivl
aam
jle
cwtl
inc
push
lret
adc
jo
add
mov
push
int3
lods
cmp
jecxz
push
cmp
jbe
sbbb
enter
push
xchg
jecxz
fwait
addb
mov
adc
sbb
add
andl
inc
sahf
mov
jno
cmc
xchg
sub
add
call
adc
mov
daa
dec
cmp
mov
adc
push
scas
enter
jg
jnp
rcrb
es
nop
mov
pusha
inc
loopne
dec
push
scas
push
jle,pt
and
cmp
lock
fidivrl
sub
stc
fwait
pusha
imul
adc
scas
add
inc
dec
lcall
add
add
inc
mov
lahf
ljmp
mov
sub
mov
insl
sahf
mov
pop
and
xorb
imull
pop
pop
out
out
daa
lret
inc
sbb
xorl
adcb
cmp
test
les
scas
out
popa
mov
aaa
pop
mov
or
pop
imul
sub
cli
inc
ficomps
mov
clc
dec
or
sub
sti
cli
mov
cmpsb
popf
scas
xor
enter
je
push
push
and
movsb
mov
push
cmp
aas
jg
cmpsl
test
xor
lcall
ficoms
mov
jnp
jb
push
nop
rorl
repnz
mov
call
mov
ret
in
push
mov
loopne
je
cmp
pop
outsl
adc
mov
mov
les
stos
rol
imul
movsb
roll
cmpsb
testb
xchg
rorb
cwtl
inc
or
xor
dec
stos
mov
ds
into
xor
stos
xchg
cmpsl
enter
jns
sub
addb
push
push
out
inc
in
push
cld
test
repnz
xlat
sbb
pmullw
dec
mov
imul
jbe
int
and
call
xchg
scas
repnz
mov
fcoms
mov
sbb
xor
jp
pop
mov
mov
cli
lret
test
pushf
sahf
pop
push
inc
sahf
or
jo
or
subl
jp
push
push
mov
fst
cmpb
xchg
mov
push
cli
jle
push
xchg
jo
or
inc
xchg
dec
push
lock
adc
insb
mov
inc
adc
fidivs
lods
adc
aas
add
pop
or
shld
pop
add
pop
add
and
add
xor
ja
or
or
mov
gs
and
mov
xor
adc
in
imul
adc
or
fisttps
lea
gs
ror
and
add
jmp
and
or
add
adc
mov
sbb
arpl
imul
dec
ja
sbb
insl
push
mov
add
ret
jo
sbb
ds
fists
daa
mov
fistpl
scas
sti
or
sub
or
inc
out
add
or
cltd
daa
sub
bswap
sub
and
pop
and
orl
jnp
rorb
fbld
xor
mov
out
sti
sub
inc
add
adc
sbb
aas
shrl
pop
cmp
out
jo
lahf
and
in
sub
xor
jae
sti
xchg
pop
in
inc
or
fcomip
jp
pusha
and
mov
mov
or
orl
xlat
or
repz
ja
lret
lret
pop
rcr
mov
mov
or
pop
prefetchwt1
or
int
aas
dec
or
mov
push
clc
imul
scas
jecxz
daa
fistpl
mov
or
push
rolb
inc
pop
sub
sahf
inc
jo
je
sbb
push
rclb
push
or
add
int3
loop
stos
or
ja
inc
das
jp
testl
inc
cld
push
pop
mov
and
fisttpl
stc
push
xlat
pop
inc
or
or
arpl
dec
mov
dec
or
or
pop
mov
mull
ret
sbb
mov
idivl
or
dec
cmp
fwait
in
adc
sub
shlb
mov
idivl
mov
rorl
push
pop
sbb
xor
popa
push
sub
cmp
orb
cmpsl
sbb
adc
lahf
mov
negl
sti
sbb
mov
mov
pop
mov
or
or
ja
pop
xlat
pop
jmp
mov
xchg
out
outsl
sti
sti
jbe
dec
es
sub
ret
cmp
ltr
lds
rorl
mov
stos
mov
das
lahf
imull
cmp
leave
push
sub
sbb
jbe
sub
out
adc
pop
adc
mov
xchg
cmp
fstpl
dec
repz
or
sub
fbld
jnp
dec
sar
or
aas
xchg
loopne
pop
xchg
sbb
testl
or
cmp
fnstcw
mov
or
mov
into
cmp
pop
mov
mov
or
sub
or
adc
sti
mov
aas
adc
jmp
outsl
push
test
push
dec
adc
adc
mov
stos
sub
or
enter
jecxz
jg
jge
sbb
sub
mov
xor
adc
adc
cmp
and
das
mov
or
mov
iret
jle
jno
adc
loop
pop
or
mov
jne
add
fstpl
mov
rolb
das
out
sub
test
testl
push
pop
jns
lds
ja
jmp
fst
das
mov
mov
fwait
jmp
sti
mov
in
cs
dec
cmp
and
xchg
pop
aaa
lcall
addr16
mov
sub
push
adc
jno
push
stos
jno
and
cmp
mov
sbb
dec
ret
out
insb
jge
lret
or
aaa
daa
sbb
mov
or
push
mov
sbb
arpl
adc
sbb
push
sbb
and
or
pop
lock
mov
inc
lcall
pop
sbb
jae
jmp
push
mov
xchg
and
notl
fisttps
cmp
jmp
sbb
into
jecxz
nopl
sbb
mov
sbb
cmp
push
daa
cmpsl
pop
scas
jmp
mov
jne
jge
out
sbb
daa
decl
mov
jl
cmp
sbb
ja
loop
or
sbb
or
mov
stos
addl
sbb
je
mov
sti
adc
cmp
popf
cmp
andb
jmp
and
push
sub
cltd
fmul
adc
xor
xor
sub
jnp
stos
xor
sub
fildll
jbe
mov
add
pop
addr16
mov
ret
popf
call
mov
popa
leave
pusha
pop
push
mov
cmpsl
or
add
sbb
imul
mov
add
test
insb
ss
aad
rorb
gs
mov
in
mov
and
sbb
and
inc
xchg
sbb
enter
js
data16
or
sbb
ds
or
add
xor
or
arpl
push
subw
dec
and
or
pushf
adc
push
jge
in
iret
xor
pop
add
and
int
sbb
mov
sub
gs
decb
jne
cmp
or
or
sbb
es
fldt
ljmp
inc
mov
mov
jno
pusha
adc
das
xor
mov
or
out
sub
out
insb
movsl
repnz
shlb
ds
or
movsl
data16
adc
or
call
std
mov
jns
mov
xor
jl
mov
cli
and
inc
subl
daa
and
jo
fstpt
aam
adc
shll
and
ljmp
mov
and
stos
test
dec
dec
adc
add
adc
add
xor
xchg
movsb
pusha
push
and
leave
out
adc
xor
add
pop
movsl
fsubrl
sub
xchg
add
hlt
mov
xor
sub
push
cmc
notl
sbb
mov
mov
push
xor
mov
ljmp
dec
mov
call
popf
cmp
repnz
push
adc
and
pop
push
test
push
sbb
mov
xorb
adc
cmp
add
fimuls
fwait
add
das
inc
shll
popa
outsb
add
mov
int3
ss
ret
mov
sti
pop
or
test
aaa
rclb
mov
inc
mov
mov
dec
mov
sti
add
push
imul
mov
pop
add
inc
or
add
out
xchg
sub
sbb
das
add
ret
cmp
rorb
or
jnp
xor
xor
xor
clc
cmp
shrb
ja
adc
popa
mov
push
aaa
hlt
adc
subl
jmp
dec
dec
push
jmp
ds
lods
shll
daa
mov
push
sub
add
pop
adc
in
scas
shlb
mov
cwtl
mov
iret
mov
imul
cli
mov
nop
push
insb
xchg
fucom
ret
ljmp
mov
sbb
xchg
xchg
lahf
inc
fistl
xor
add
jmp
jecxz
jae
fstl
add
and
dec
or
bound
pusha
shll
ret
mov
loope
stos
cmpsl
sbb
outsb
shrl
fldt
call
sub
lods
lds
and
and
fadd
ds
enter
adc
inc
adc
bnd
and
dec
das
lea
pop
pop
imul
jae
xor
inc
fsubrl
pop
dec
aas
sub
fiadds
xor
jg
mov
ds
push
loop
jmp
js
fldenv
mov
fwait
daa
cmpl
pop
mov
mov
pop
pop
inc
xchg
mov
push
adcl
jecxz
inc
cmp
sub
ja
dec
sbb
mov
add
pop
outsl
jb
xchg
loope
addr16
jge
jne
jmp
or
dec
mov
push
sbb
xor
mov
movsb
and
mov
mov
adc
lret
mov
adc
iret
fldt
repz
or
xlat
arpl
xchg
mov
pop
sbb
adc
scas
scas
jmp
push
fists
xor
sbb
mov
loopne
rcr
cmp
pop
mov
xchg
xchg
nop
mov
or
jnp
jbe
xchg
dec
flds
xchg
pop
lahf
fildl
in
rorl
or
dec
and
testl
adc
inc
add
int3
jmp
leave
and
jle
mov
shl
scas
ja
mov
fcmovu
jmp
pop
aas
fidivl
sub
xchg
subb
fisubl
nop
jle
pop
fmull
jne
aaa
add
pop
dec
stos
or
daa
out
movsl
in
dec
fwait
js
repnz
pop
ficompl
jle
pop
ficompl
loopne
add
adc
insl
outsl
filds
and
dec
add
mov
dec
inc
push
add
dec
jnp
call
or
xor
add
pop
sub
mov
fistpll
out
add
lock
mov
add
adc
icebp
es
xchg
movl
sti
push
dec
sbb
imul
jmp
push
scas
dec
fnstcw
pop
and
push
cmp
and
ret
add
sbb
sbb
sbb
cmpps
pop
cs
cmc
das
sahf
scas
mov
sbb
adc
movsb
sub
jne
mov
jg
sti
inc
mov
mov
sub
pop
adc
mov
mov
ret
or
dec
lock
and
mov
or
outsl
mov
or
mov
xlat
inc
jb
pop
in
pop
add
add
shl
flds
and
addl
test
jmp
shlb
loopne
insl
xchg
sbb
push
stos
mov
fistpl
loope
pop
cmp
sub
jg
mov
inc
inc
pusha
sti
xchg
or
lret
outsb
mov
movsl
add
es
inc
sbb
mov
out
imulb
cmpsb
lds
outsb
mov
mov
add
mov
pop
shrl
mov
sbb
ja
movsb
inc
cltd
cmp
add
xchg
stos
jno
arpl
lea
pop
xor
daa
adc
sub
rcrl
jno
int
mul
or
pop
insb
mov
push
push
dec
fucomip
add
push
sub
and
sti
frstor
dec
mull
int
lcall
fidivrl
icebp
out
jnp
ret
pushl
xchg
jo
icebp
jecxz
cmp
and
aad
cmp
xor
inc
sarl
sub
pcmpeqw
mov
pop
ja
repz
ja
popa
insb
les
pop
gs
jae
sbb
jp
scas
notb
pop
cmc
fdivs
jae
jae
mov
icebp
sub
xchg
xchg
cmp
daa
xchg
push
dec
dec
xor
adc
icebp
push
jbe
sbb
jae
dec
push
push
mov
or
jbe
pop
xchg
mov
mov
jbe
pop
out
jge
add
sarb
pop
lods
or
jbe
jae
outsl
mov
sqrtps
jno
nop
jne
sbb
jg
insb
mov
negl
jge
mov
test
inc
inc
xchg
add
add
lock
mov
fstpt
sbb
add
or
es
outsb
andb
leave
sbb
mov
es
ret
stos
cmpsb
mov
out
ret
outsb
or
push
pcmpeqw
adc
arpl
jl
fistpll
mov
push
fldt
mov
or
xchg
mov
mov
jecxz
imul
jne
mov
xor
es
adc
int
xchg
je
flds
lret
add
cmp
and
nop
pop
and
cltd
mov
adc
loop
dec
mov
sub
dec
icebp
sbb
adc
frstor
aaa
cmp
pop
arpl
loope
sarb
iret
repz
filds
das
sub
popa
and
stos
mov
add
sbb
pop
notl
sbb
fldt
sbb
push
push
jmp
push
sub
lcall
lcall
sub
movsl
imul
aaa
add
iret
jge
clc
ss
sub
into
and
and
xor
cs
fsubr
sbb
sub
mov
cmp
or
divl
ret
jo
popf
mov
out
rorl
outsl
aaa
mov
ja
lods
mov
mov
and
adc
mov
inc
xchg
mov
push
sbb
xor
int3
mov
jnp
lods
pop
sub
arpl
fisttps
cmpb
mov
push
mov
xchg
ljmp
cmp
pop
jnp
jecxz
repz
ljmp
add
xor
cli
sub
or
lret
mov
pusha
sar
cmp
pop
mov
pop
or
lds
or
sbb
out
scas
mov
pop
jl
xchg
scas
jb
icebp
sbb
or
add
and
je
fsubrl
add
sub
jnp
mov
mov
int
cmp
cwtl
movsl
sub
xchg
jnp
repz
mov
mov
push
mov
out
jbe
xchg
mov
cmp
fmulp
sbb
xor
sbb
mov
sub
inc
mov
dec
incb
and
pop
add
rcrl
lret
jo
xchg
add
sbb
xchg
call
dec
sub
imul
mov
imul
xchg
lret
cmp
daa
maxps
jne
jo
iret
push
aas
and
gs
add
fisubs
ja
in
adc
testl
dec
push
jne
sbb
in
pop
add
jns
fbstp
inc
mov
or
testl
jo
mov
inc
movsl
and
mov
leave
add
sahf
inc
push
ja
push
dec
insb
stos
lea
shr
daa
ret
leave
mov
sbb
add
ret
cmp
sub
cmpsb
das
xor
and
jo
add
inc
jnp
mov
test
jo
sbb
push
sub
in
pop
xchg
pusha
sbb
and
rol
xor
stos
sbb
add
scas
inc
push
mov
dec
and
scas
jne
cmp
mov
es
frstor
mov
gs
loope
lcall
js
cmc
jmp
sub
iret
fisttpll
or
dec
xor
add
sub
adcl
lahf
je
sbbb
insl
xchg
popa
sahf
rol
out
or
push
pop
out
in
and
jne
ret
add
adc
imul
push
fdivl
xchg
jae
inc
jp
daa
or
jns
inc
sub
mov
leave
sbb
or
popf
pusha
sbb
jnp
xor
fnsave
sub
xchg
leave
mov
adc
repz
xchg
pusha
into
or
ror
in
dec
daa
push
nop
lea
into
icebp
js
in
popa
mov
pop
out
jmp
jg
idivb
xor
push
jns
pop
sub
push
add
stc
pop
jge
xchg
mov
mov
mov
add
sbb
push
jecxz
testl
and
dec
or
cmp
dec
das
mov
push
das
xchg
sbb
xlat
lods
popa
cmp
imul
jae
inc
pusha
lock
in
jno
mov
xor
filds
push
rcrb
push
and
ja
rcrl
fwait
sbb
aas
mov
xor
mov
lcall
push
inc
lahf
xchg
das
lahf
out
push
add
frstor
inc
xchg
dec
test
adc
sbb
ret
mov
pop
sarb
arpl
sub
int
jl
outsl
push
or
add
sahf
cs
or
dec
xchg
jnp
leave
into
add
jmp
int
push
or
test
addr16
out
sbb
or
or
inc
jns
push
and
add
mov
bnd
adc
rolb
test
lahf
std
xor
sarl
sub
ja
xchg
jno
or
add
add
aaa
jp
xorl
lret
cmc
sbb
insb
int
add
ret
fwait
leave
out
repz
shll
loopne
insl
das
push
ds
loope
subl
out
outsb
fwait
shlb
mov
add
lea
pop
pop
popa
inc
test
jge
mov
sbb
xchg
pmaxub
push
test
sbb
adc
or
xor
fs
std
aas
les
push
push
sub
fs
xchg
xor
negb
mov
lahf
inc
mov
dec
arpl
xor
adcb
test
push
dec
pop
lahf
cwtl
pop
push
xchg
mov
int
jmp
adc
mov
and
xlat
fisubl
mov
jo
adc
jge
pop
push
lahf
sub
lea
js
test
outsb
imul
aas
sub
sbb
mov
jne
outsl
dec
cmp
sub
jb
mov
push
jmp
outsl
out
es
push
pop
insl
and
aaa
lahf
jno
popf
mov
or
iret
inc
lahf
js
mov
outsl
lea
and
pop
inc
test
jb
out
mov
jmp
scas
addr16
loopne
sbb
addl
in
mov
addl
sub
movsb
dec
addr16
sub
mov
cld
jnp
je
or
movsb
mov
sarl
cmpb
cmp
orl
mov
xor
int3
je
pop
mov
les
aad
pop
push
enter
adc
sbb
add
cwtl
adc
loop
sti
mov
jg
inc
inc
sub
pop
jne
or
fiaddl
push
mov
jae
movsl
pop
andl
mov
out
sub
pop
orps
and
adc
xlat
sarb
in
xchg
das
mov
lcall
int3
dec
hlt
popa
ljmp
arpl
in
icebp
or
add
xorb
inc
out
daa
pop
or
sub
adc
nop
push
dec
lods
jnp
iret
jno
pop
sbb
mov
shrl
and
pushf
mov
sub
xchg
sub
outsl
cmp
subl
xor
jp
fstl
bndldx
icebp
outsb
sub
dec
stc
insl
add
jae
int3
orl
loopne
stc
ret
fsubrs
jae
dec
mov
jbe
shl
xchg
cmp
mov
daa
push
xchg
cmp
js
jne
fstl
inc
inc
and
fs
call
xchg
daa
lea
sbb
inc
gs
sbb
aaa
es
sub
dec
sub
lcall
sti
mov
sub
aam
pushf
jg
iret
dec
add
mov
inc
xchg
push
mov
sub
adc
add
or
cmpsl
popa
add
sahf
ljmp
xor
ja
cmp
inc
bound
adc
sub
cs
aaa
jae
mov
imul
lods
insl
test
loopne
xchg
out
sub
jecxz
cwtl
or
orl
pop
inc
and
mov
out
jmp
jge
push
fistpl
lea
sahf
fdivl
mov
cs
fisttps
bound
insl
sub
js
subb
cmp
mov
sti
test
add
test
pop
mov
and
jge
sub
mov
or
sbb
mov
inc
jmp
dec
mov
rorl
in
inc
pop
inc
sbb
addb
mov
pop
lahf
and
dec
jno
aad
popa
xor
test
mov
out
inc
leave
mov
jecxz
jne
test
daa
add
ljmp
push
repz
cwtl
cmc
jae
xor
inc
dec
out
pop
popf
xchg
popf
jge
mov
rclb
jno
or
jne
and
adc
push
orl
adc
insb
cmp
xchg
or
mov
and
dec
and
aaa
sbb
adc
out
inc
pusha
je
mov
aaa
push
cmc
sub
insl
ret
dec
clc
push
sub
and
popf
out
dec
aaa
insl
fstl
push
adc
cmpsl
mov
pop
xchg
push
xlat
jno
xorl
aad
jo
mov
fcomi
or
scas
add
pop
sbb
push
lds
pop
sbb
push
jmp
ja
stos
popa
cmp
or
out
adc
aaa
popa
dec
push
mov
in
add
cmp
adcl
inc
and
das
adcb
push
insb
xlat
rcll
js
pop
sbb
add
mov
lahf
sti
add
in
xlat
out
sub
mov
inc
insb
ss
dec
inc
sub
lods
pusha
pusha
rcr
add
push
rcr
mov
mov
lods
dec
adc
mov
jbe
mov
lock
sbb
adc
mov
out
mov
and
lods
sbb
push
aas
xlat
xchg
lea
sbb
mov
lcall
popf
push
push
cmp
pop
loopne
fs
ficoml
cmp
rcll
inc
int3
movsl
test
lea
mov
test
insb
push
lock
push
push
test
mov
sbb
ret
popa
and
xchg
xor
or
pushf
leave
adc
adc
mov
mov
enter
aad
pop
pop
dec
or
andl
jbe
push
fisttps
push
andb
xor
adc
xor
inc
pop
pop
add
out
ja
test
pop
mov
mov
or
jmp
bound
sub
adc
sbb
mov
rcll
dec
movsl
jo
jno
cmpsl
pop
mov
inc
sbb
cmpsl
add
in
outsl
cmp
aaa
xor
roll
mov
sbb
mov
test
fsubrs
arpl
fcmovb
loope
lds
mov
pop
add
adcl
cmpsl
lea
imul
mov
mov
aas
lea
xlat
sbb
sbb
addl
mov
xchg
mov
aaa
lods
jp
lds
jl
inc
dec
add
ja
repz
jmp
lret
pusha
cwtl
cmp
add
sub
push
filds
aas
fnstenv
dec
pop
dec
fwait
adcb
cmc
or
push
sub
jge
cmp
inc
adc
push
rcrl
ja
flds
mov
cltd
jg
pop
xchg
stos
cmp
push
inc
xor
fsubrs
mov
movsl
std
push
lea
jno
js
movsb
jecxz
stos
lods
lret
repz
push
dec
out
imul
push
mov
xor
out
sbbb
inc
ja
rcrb
jmp
outsl
mov
pop
nop
pusha
add
shll
mov
lods
pop
loop
enter
das
sbb
or
push
add
push
inc
loop
outsl
aas
inc
jmp
add
xchg
lods
bound
fdivl
push
adc
jecxz
cs
es
or
adcl
push
fwait
gs
lock
sub
pop
pop
rorb
jne
popa
outsl
cmpsl
push
shlb
cmp
xor
pushf
or
pop
icebp
pop
or
xchg
xor
cwtl
push
adc
pop
xchg
in
aam
sub
cmpsl
jnp
movsl
iret
fildl
ret
iret
sub
insl
cmp
and
xor
mov
jge
fadd
cs
ljmp
fsubr
mov
add
or
cmp
outsb
mov
addr16
popa
loope
mov
push
pop
and
mov
pop
add
add
mov
adc
mov
and
les
gs
push
xchg
or
sub
and
cmc
adcb
or
popf
mov
pushf
fdecstp
out
jns
neg
pop
and
daa
imul
scas
out
fiaddl
fmull
fmul
jno
aaa
or
pop
mov
push
fs
mov
pusha
or
dec
cmp
xor
xor
dec
mov
sub
adc
frstor
inc
stos
mov
outsb
test
test
sub
mov
loope
mov
xor
adc
cwtl
clc
sub
ret
in
inc
jb
inc
adc
add
loopne
pop
mov
jge
nop
ss
cmp
pop
xchg
movsb
mov
xor
sbb
jp
movsb
rcl
out
adc
sbb
ret
out
xor
dec
sbb
iret
cltd
es
sub
adc
add
or
mov
addr16
inc
and
sti
mov
xchg
push
in
sbb
add
jmp
push
and
je
push
mov
std
mov
xor
fwait
das
ja
inc
jle
in
loope,pn
sub
jo
mov
push
push
dec
inc
out
out
fstps
and
sbb
push
and
aaa
repnz
cs
dec
xorl
inc
sub
mov
push
jo
lret
dec
pop
loope
loopne
andb
mov
shl
xor
push
mov
mov
sub
lods
xor
sarl
sub
push
fnsave
fsubs
insl
fnstenv
jp
rcrb
xor
iret
dec
fldl
bound
mov
mov
fwait
repz
and
lret
lods
inc
mov
outsb
add
cmp
mov
mov
mov
mov
sbb
mov
outsb
sbb
push
arpl
xchg
repz
mov
mov
and
xor
cmp
in
lods
and
test
add
fnstcw
xor
stos
cwtl
test
jo
addr16
aaa
pushf
xchg
je
ja
cmp
jge
add
popa
jns
scas
inc
xor
dec
popa
push
push
xchg
movsl
xor
push
daa
pop
lods
cmp
mov
ja
subl
cmp
jge
mov
push
mov
inc
pop
pop
mov
pop
add
mov
or
jo
cmp
fists
mov
fs
pop
movb
imul
das
fdivl
leave
sbb
test
shll
iret
push
arpl
mov
movsl
mov
ja
stos
mov
xchg
cmpsl
adc
test
mov
rcll
mov
pop
mov
stos
cmp
mov
or
cvtpi2ps
not
pop
jns
out
push
stos
pop
mov
jno
outsl
and
sti
rcr
sbb
sti
and
adcb
das
loop
in
and
das
adc
jbe
xchg
es
popa
sub
cwtl
pop
lock
push
loopne
xor
xchg
sub
les
add
test
cmp
inc
cmp
add
lea
or
sub
inc
test
cmp
out
adc
sbb
in
dec
or
lods
ja
icebp
xor
pop
ret
aad
push
fisubrl
inc
sti
pop
das
push
sbb
call
fistpll
mov
cmpsl
sbb
pop
push
adc
mov
add
jno
mov
jo
xchg
mov
jb
mov
mov
or
or
push
mov
adc
loop
push
cmc
and
aad
push
add
pusha
sub
stc
imul
dec
popa
popf
leave
mov
or
jne
addr16
push
mov
aas
cs
xor
iret
imul
pop
fwait
mov
jmp
stos
push
mov
ret
inc
movsl
and
jecxz
leave
imul
arpl
jg
sbb
hlt
xchg
adc
jmp
out
sub
sub
lods
enter
idivl
push
sub
orl
jnp
addr16
lock
mov
adcl
aas
add
add
mov
cltd
cmp
shrl
sarl
std
iret
jle
pop
xchg
dec
xchg
mov
mov
cmp
shll
in
inc
gs
adc
and
testb
mov
shr
push
test
jnp
add
jne
sub
adc
mov
movsl
xchg
imul
mov
daa
filds
in
mov
dec
pop
dec
lods
sahf
mov
jae
and
add
dec
dec
and
and
pop
int
inc
aam
test
mov
addr16
dec
decb
pop
cmp
sbb
add
lods
fldt
jae
out
imul
push
imul
out
jne
aaa
push
jno
sarl
popa
mov
adc
jge
mov
sub
pop
test
cmp
dec
xchg
add
stos
icebp
out
xor
and
or
or
std
mov
mov
imul
pop
pop
mov
and
jo
jo
sbb
icebp
mov
pop
and
loop
and
cmp
call
pop
push
cltd
fstl
test
mov
push
mov
jne
or
inc
inc
lds
jnp
jb
mov
insl
xor
pop
xchg
jbe
or
jne
cmp
mov
inc
adc
stc
mov
jmp
aaa
movsl
mov
andl
push
jmp
insl
pop
adc
movsl
add
mov
jl
addr16
sub
xor
or
das
or
sbb
or
and
xor
sub
test
fmull
inc
test
xor
xchg
int3
stos
xchg
imul
loopne
mov
lods
das
das
pop
test
lods
cmp
jne
inc
repz
pop
pop
test
xor
or
pop
shrl
data16
mov
mov
mov
push
aas
and
or
clc
push
out
add
sub
or
lock
add
addr16
ja
scas
cmc
adc
adc
mov
mov
mov
push
push
and
daa
popa
or
iret
test
mov
fadd
outsl
xor
push
fnsave
pop
adc
mov
jge
dec
xor
idivb
sbb
jge
ja
loopne
jge
popa
pop
add
sbb
add
stos
xor
addr16
pop
adc
push
mov
xchg
das
or
xchg
in
jmp
in
jmp
icebp
jne
ret
adc
data16
dec
mov
nop
or
popa
adc
aam
push
mov
popf
lret
pop
sub
adc
cmpsl
test
or
xor
mov
test
push
jmp
adc
jae
outsl
adc
daa
popa
pop
pop
or
testl
xchg
mov
add
sub
dec
sbb
pop
adc
xor
dec
adc
sbb
cmp
adc
adc
inc
shl
sub
test
fxch
clc
mov
push
pusha
test
or
sub
push
or
xchg
iret
add
xor
inc
add
cmp
dec
pop
mov
pop
ja,pt
push
inc
lretw
insl
fwait
loopne
inc
push
adc
push
sub
push
dec
adc
outsb
inc
mov
testb
and
inc
dec
inc
dec
push
stos
mov
popf
out
dec
dec
add
mov
fbld
pop
xor
xchg
or
fisttps
inc
inc
mov
mov
inc
mov
fimuls
lea
ja
and
add
mov
ret
jb
lods
xor
inc
pop
push
cld
imul
insl
push
or
arpl
add
jb
dec
sti
out
cmp
push
dec
inc
add
fs
ret
mov
outsl
fdivrs
inc
adcb
sbb
push
lock
test
and
fs
mov
rclb
sub
jno
cwtl
dec
sub
xor
lcall
push
dec
gs
in
inc
jae
int3
fisttps
loop
inc
dec
inc
data16
and
mov
inc
jl
inc
dec
jo
mov
fstpl
roll
mov
jo
lret
cmp
or
sbbb
xchg
sub
push
adc
cs
xor
sahf
daa
ffree
loop
add
push
es
and
ret
dec
mov
into
mov
cs
push
in
mov
add
lods
push
aam
sti
pushw
sub
mov
and
push
mov
dec
cmp
mov
cmp
aam
movsb
sub
or
es
outsb
imul
inc
push
dec
mov
cmp
xor
dec
xchg
xlat
mov
jecxz
push
flds
mov
jl
dec
in
push
addb
cmp
add
daa
repnz
faddl
inc
mov
adc
push
dec
nop
shlb
adc
mov
dec
dec
adc
push
repnz
pusha
inc
push
mov
stos
bound
xchg
adc
inc
mov
xor
pop
jne
or
jecxz
jne
lea
push
adcl
cmp
pop
insb
push
inc
jl
leave
ds
fistl
imul
push
dec
nop
jbe
daa
xorl
dec
inc
inc
js
sarl
jbe
xlat
push
push
aaa
mov
and
push
push
sbb
out
sbb
cmpsb
cmpsl
push
push
push
mov
xor
mov
addr16
inc
add
imul
fs
pop
dec
lcall
push
sub
arpl
dec
push
dec
push
insb
repz
push
je
pop
sbb
sahf
mov
add
or
fcompl
int3
in
test
mov
pushf
inc
loopne
popf
cmp
jae
mov
lock
dec
xchg
mov
imul
scas
aam
push
das
repz
cmp
pop
jo
sub
mov
pop
ljmp
call
je
push
inc
mov
stos
test
xlat
pusha
hlt
ljmp
mov
push
xor
xor
cmp
jp
cmp
jle
mov
push
sub
add
cmp
push
andl
fs
xchg
push
fadd
aad
nop
inc
dec
ffreep
push
pop
or
lahf
daa
add
lock
movsl
mov
add
mov
mov
jns
loopne
dec
mov
mov
push
fmul
ja
mov
aad
push
pop
pop
fcmovne
je
jne
xor
out
mov
pop
inc
mov
add
push
js
push
xlat
dec
sub
inc
mov
add
pop
data16
ja
lea
xchg
add
push
scas
push
push
fs
outsb
dec
add
cmp
std
shll
loopne
imul
movsb
popw
push
xchg
popf
into
and
fdivr
cmp
popa
dec
je
out
test
push
pop
add
mov
pop
arpl
inc
inc
xchg
cmpsl
popf
loopne
adc
into
into
mov
push
push
add
fstp
or
mov
xor
mov
imul
inc
das
xchg
imul
jno
add
sub
or
adc
iret
test
addr16
lods
insl
out
cltd
and
inc
dec
scas
inc
inc
inc
dec
faddl
imul
xchg
push
add
arpl
pop
push
fsts
dec
aad
insb
stc
sub
rclb
bound
loopne
xlat
sahf
data16
add
and
pushf
imul
js
rol
icebp
out
push
roll
mov
js
push
sti
shl
gs
enter
scas
mov
shl
lcall
push
aam
imul
out
loop
faddl
pop
and
inc
addr16
ret
fcoml
dec
push
jmp
icebp
mov
jo
out
in
loope
subl
mov
push
or
or
sbb
adc
stc
fadd
popf
pop
and
repnz
sar
sub
stc
jb
adcl
stc
bswap
testl
dec
add
out
icebp
out
adc
addl
sbb
fstpl
scas
fcom
ror
sub
iret
mov
xchg
les
push
int3
int
dec
push
push
or
fsubs
loopne
push
mov
or
pop
mov
mov
clc
mov
out
add
and
mov
in
cmp
das
mov
lds
jg
sbb
cmp
pushw
int
push
jmp
pop
pusha
in
in
or
adc
mov
pusha
ds
cmpsb
out
lods
incl
jae
vpunpcklbw
and
mov
mov
cltd
jecxz
js
sbb
jp
mov
daa
data16
out
pop
out
in
scas
xchg
jmp
out
mov
addr16
sti
jl
cs
popa
xor
xchg
add
fldl
or
xchg
in
mov
adc
data16
pusha
fstpt
push
mov
inc
push
push
or
xchg
mov
mov
fnstcw
call
push
xchg
dec
cltd
jg
in
aad
test
xorl
cmp
fucomip
inc
gs
cli
rcll
ljmp
add
sbb
mov
add
sub
mov
gs
lret
dec
cmpsb
add
cmpsl
jle
or
stc
mov
in
mov
inc
cmp
in
in
popa
clc
cmc
inc
add
dec
ret
mov
xlat
adc
mov
or
test
xor
pop
jns
sbb
xlat
add
pop
sub
syscall
adc
incl
std
pop
mov
loope
divl
mov
pop
add
sbb
and
xchg
loope
dec
adc
xchg
xor
dec
or
out
hlt
fcoms
and
sub
out
add
push
loopne
push
add
lds
sbb
sbb
mov
add
shrl
add
xorb
stc
sbb
or
jns
insl
sbb
add
sbb
pop
loope
jbe
pop
addb
mov
lods
mov
test
scas
xchg
jae
push
cmpsl
add
pusha
jg
loop
push
push
js
inc
push
mov
mov
mov
fadds
jne
cmp
sbb
sahf
rcl
lea
js
inc
imul
sbb
push
mov
adc
mov
mov
cmp
adc
mov
and
xorl
pusha
dec
pop
lock
scas
push
loope
incl
xor
inc
repz
jno
stos
mov
repz
mov
faddp
rorl
mov
adc
cltd
stc
sahf
jo
adc
or
ja
xchg
mov
mov
jbe
jo
adcb
or
into
xlat
test
dec
jbe
push
lods
mov
and
fwait
insl
add
lods
mov
in
movsl
shll
lahf
addr16
pusha
aam
scas
jmp
sbbb
jmp
rolb
pop
pop
push
sub
cmp
les
sbb
daa
outsb
pop
sbb
mov
and
add
adcl
and
imul
aaa
mov
xchg
sahf
dec
sbb
jmp
stc
add
dec
inc
fsubl
jbe
jae
jge
ss
sbb
xchg
out
sbb
mov
shrd
cmp
outsl
clc
sti
push
sbb
pop
icebp
inc
inc
imul
jmp
leave
rcll
mov
pop
in
jne
or
loop
clc
pop
jg
outsb
dec
pop
mov
cmpl
pop
lods
push
pop
or
lahf
push
repnz
es
add
add
jg,pn
adc
and
lds
or
xchg
mov
sbbb
sub
in
xor
pop
or
add
or
add
push
sbb
das
xchg
imul
ret
in
and
add
sti
cmp
pop
leave
fisubl
sbb
lcall
push
inc
pop
push
cmc
pop
mov
lods
imul
inc
mov
or
sbbl
jecxz
dec
cmp
xor
inc
pop
js
and
lds
std
and
movsb
popa
add
or
add
outsb
xor
ds
pop
sti
add
je
sbb
mov
sbb
mov
lea
shlb
fimuls
and
sbb
test
xchg
sbb
fmuls
mov
inc
jmp
jmp
outsl
test
push
jmp
add
jnp
shl
adc
arpl
and
shll
popa
dec
push
cmp
inc
adc
movb
sbb
loop
lea
xor
xor
das
cmp
cmp
cmp
mov
sub
push
sub
adc
pop
xor
addb
and
aas
pop
pop
enter
mov
jbe
imul
mov
push
popa
adc
dec
punpckldq
imul
insl
adc
dec
imul
inc
das
dec
jg
addr16
roll
add
sbb
rcl
add
movsl
arpl
xchg
imul
mov
arpl
push
pop
sbbl
addr16
sub
push
and
scas
mov
or
jo
daa
sub
rolb
out
sbb
outsl
sbb
cmovp
lods
add
aad
ja
dec
popa
lcall
and
add
or
pop
pop
adc
cmp
into
test
sbb
andl
mov
adc
or
cmp
and
mov
cmpsb
insb
mov
sub
xor
add
repz
ss
sub
dec
mov
lods
cwtl
sub
fwait
pusha
sub
mov
sub
xchg
xor
mov
outsb
popf
fisubs
idivb
push
push
push
inc
pop
in
inc
fidivrs
pop
arpl
jae
ret
push
arpl
lods
fldl
jge
push
pop
jl
cmp
lret
jge
push
pop
sbb
les
push
addl
decl
and
std
subl
cmpsb
stos
shll
insl
pop
shlb
insl
adc
dec
mov
addr16
sub
mov
lea
repnz
ss
popa
jne
or
push
xchg
mov
or
hlt
pop
aaa
pop
sbb
xor
pop
mov
pop
rorl
jae
or
push
lea
loope
mov
test
push
xchg
andb
push
into
int
fldt
push
leave
aas
std
ja
js
mov
xor
daa
loop
adc
inc
shll
es
shl
iret
gs
js
pop
arpl
pop
mov
out
sbb
adc
popf
xor
fcmovnbe
lret
add
mov
fld
jge
pop
jmp
dec
push
xorl
dec
outsb
jo
jbe
adc
stos
loope
jo
add
orb
aad
lods
lock
mov
and
js
sub
sbb
push
push
push
lcall
sbb
gs
sbb
inc
jo
testb
cmp
stc
insl
jl
and
or
jno
dec
pop
mov
data16
orb
push
js
push
push
dec
add
repz
pop
inc
inc
push
daa
in
js
flds
or
xchg
popf
push
out
jnp
adc
daa
adcl
jbe
fwait
add
push
mov
ljmp
ret
and
pop
jnp
loopne
and
pop
push
filds
push
inc
fmuls
test
inc
inc
scas
mov
mov
mov
pusha
jo
das
cmc
inc
pop
aas
cmp
dec
pop
fsubr
dec
and
out
ret
scas
sbb
les
add
outsl
pusha
push
xor
add
pop
pop
xchg
and
inc
daa
jns
inc
jl,pt
push
sbbb
or
add
add
dec
push
movsl
or
nop
sbb
ja
pusha
aad
or
pop
es
mov
call
imul
fisubs
fsubrl
es
test
sub
and
jmp
and
dec
dec
aam
mov
and
adc
push
and
jb
pushf
xchg
cmpsb
pop
adc
cltd
inc
xchg
js
inc
inc
mov
cwtl
es
inc
repz
push
pop
test
sbb
push
sub
ret
stc
push
mov
add
xor
push
xchg
arpl
fimull
pop
xor
push
popa
test
or
ljmp
daa
test
push
pusha
or
scas
ret
inc
cmp
js
cmpsl
dec
out
inc
out
push
push
add
sub
add
insl
ss
movsb
insb
mov
mov
push
dec
xor
andb
cmp
add
xchg
fmul
dec
subb
lret
out
out
push
sub
push
daa
add
mov
jbe
out
fidivrs
nop
xchg
push
mov
push
mov
jo
or
test
pop
jo
dec
mov
adc
mov
jge
nop
movsb
push
mov
lahf
scas
jnp
dec
sbb
jecxz
fiaddl
es
inc
and
pushf
dec
sbb
out
test
or
cld
popa
jp
addr16
xor
or
ret
cmp
push
xchg
mov
pop
adc
or
in
sti
in
adc
add
test
xlat
fnsave
mov
xor
xor
les
pop
xor
iret
sub
jp
push
dec
adc
xor
jae
xlat
jno
xor
or
in
pop
pusha
jge
or
lock
jl
clts
sub
or
addr16
fs
inc
lret
or
jbe
clc
xchg
push
xor
iret
popa
mov
mov
and
dec
or
dec
add
mov
adc
test
xchg
sub
lods
xor
jne
popa
jmp
pop
xchg
mov
cmp
movsl
or
push
test
daa
inc
pop
cs
or
jno
dec
inc
daa
dec
dec
rcr
jno
xor
mov
dec
out
ds
cmp
or
cmpsl
add
adc
dec
test
push
add
or
pop
fbld
push
add
iret
inc
dec
pop
sub
dec
hlt
adc
inc
jno
lock
add
sub
loopne
loopne
cmp
js
dec
pop
xchg
adc
insl
subl
ficoms
and
sub
push
jns
js
add
xchg
mov
sbb
push
push
add
or
or
add
inc
aaa
sbb
shl
cmp
clc
pusha
int
pop
xor
dec
inc
or
iret
loopne
nop
push
push
arpl
mov
sub
push
inc
cs
insl
xor
xor
lret
inc
arpl
push
adc
push
je
arpl
or
daa
gs
dec
adc
adc
xor
mov
pop
fs
or
push
xor
mov
sbb
or
imul
adc
and
and
leave
push
cmp
push
repnz
ss
sbb
adc
addr16
lret
scas
sub
push
push
jns
dec
jb
adc
inc
sbb
add
rcll
shll
jnp
and
jbe
js
scas
scas
pusha
lods
mov
sbb
xor
mov
or
shl
add
mov
int3
add
arpl
repnz
add
outsl
mov
inc
mov
or
in
add
mov
inc
add
nop
push
stc
scas
popa
pusha
cmp
adc
sub
inc
and
cmp
pop
push
push
inc
push
inc
dec
sbb
or
cmpsb
leave
cmpsl
inc
push
xchg
mov
std
mov
xor
sub
add
cld
cld
mov
add
cmpsb
add
push
adc
xor
sub
sub
inc
xchg
insl
cmp
cli
mov
pop
fcmovu
into
push
sbb
fstpt
testl
sarl
movsl
bound
push
test
jnp
cmpsl
shrb
movsb
add
cs
sbb
add
int3
fildl
pop
sbb
push
mov
pop
xchg
xchg
push
pop
adc
pop
dec
pop
push
mov
adc
outsb
jle
push
cmp
pusha
push
pop
push
adc
mov
aam
sub
xchg
add
in
add
rolb
bound
sub
fisttpll
or
inc
in
jle
aas
dec
aad
xchg
mov
xor
add
movsb
test
popa
addr16
lcall
inc
adc
pop
das
jl
mov
movsl
and
xchg
test
sbb
clc
and
fcoml
das
or
popa
mov
pop
jno
sub
pop
gs
push
dec
push
or
pushl
mov
ja
sbb
shlb
and
stos
cltd
shlb
sbb
jmp
add
rorb
push
test
mov
in
add
sub
jne
add
xor
aam
mov
jecxz
push
push
jae
ret
sub
and
inc
pop
fucomip
sbb
inc
mov
add
inc
xchg
pop
add
addr16
mov
lock
icebp
js
daa
jbe
jb
pop
bound
popf
sub
fmulp
pop
push
add
out
jnp
dec
repnz
repnz
add
in
adc
or
aas
repz
adc
and
out
cmpsl
and
in
fwait
pusha
daa
subl
aaa
or
rorl
das
lahf
add
adc
negb
push
pop
int
fldcw
loope
setne
mov
dec
lahf
mov
aaa
daa
nop
adc
inc
add
and
add
mov
fldcw
stc
rcll
push
add
mov
cwtl
daa
shrl
frstor
push
aam
mov
pop
fucomp
sahf
clc
aaa
insl
jnp
icebp
xlat
or
inc
daa
or
mov
inc
add
into
dec
into
push
daa
or
push
test
test
fwait
rcrl
or
aas
psrad
sahf
jbe
outsl
push
sti
aaa
cs
add
push
dec
in
jbe
daa
xor
in
aaa
mov
movsl
jbe
inc
daa
das
inc
push
push
aaa
popf
fcmovu
or
fs
inc
jp
push
mov
fmuls
xchg
das
bnd
in
mov
stos
add
dec
in
inc
lods
aas
call
dec
cmp
pop
cmp
in
pop
mov
mov
push
add
pushf
sub
inc
push
pop
pop
shl
jb
mov
cmp
scas
ror
xchg
dec
sahf
mov
int
xchg
pop
cwtl
lahf
in
mov
lods
int
aaa
inc
dec
mov
cmp
das
in
mov
jnp
push
add
js
aas
sahf
add
push
insb
jns
out
adcb
int
aam
lea
pusha
and
inc
push
inc
or
xor
test
push
push
and
and
rolb
push
add
call
dec
push
and
mov
mov
push
inc
add
insb
adc
xor
decl
mov
insb
jae
jb
outsb
inc
testb
add
arpl
push
shl
mov
push
sbb
inc
inc
inc
push
sub
insb
fisttpl
inc
jns
inc
js
jnp
mov
sbb
push
jns
gs
push
imul
sbb
jne
je
popa
outsb
addr16
inc
das
in
outsb
aad
popa
pop
dec
outsl
fs
gs
lcall
jne
cmp
lock
outsl
push
cltd
dec
fs
outsl
insb
fs
push
push
push
imul
outsb
jne
jmp
outsl
add
es
inc
int3
gs
popa
sub
shll
add
loopne
jo
outsb
imul
pop
rcrb
push
ficomps
loopne
pop
stos
mov
sub
mov
jne
pop
push
bnd
mov
dec
and
aas
push
and
jns
into
loop
jns
mov
xor
add
xor
std
inc
jb
push
outsl
or
out
xor
add
push
dec
test
inc
outsb
dec
sahf
mov
outsb
pop
imul
push
xchg
outsl
arpl
ret
insb
repz
ja
jb
dec
outsb
insw
popa
addr16
dec
dec
dec
pop
mov
fadd
or
mov
shrl
push
xchg
sbb
xor
mov
inc
jb
push
inc
arpl
mov
dec
data16
jp
cmpxchg
jo
and
imul
dec
test
push
dec
sub
mov
mov
xor
iret
xchg
gs
insl
bound
outsl
js
mov
test
lret
push
ficomps
cmp
popa
insl
inc
and
pop
call
ss
lock
xchg
fstpl
mov
outsb
insb
cs
popf
dec
arpl
mov
inc
jb
and
loope
sbb
lea
adc
sub
sbb
jae
fistpll
sbb
inc
dec
inc
push
cmp
push
cmp
xchg
cmpsl
popa
mov
imul
loopne
sbb
lcall
push
imul
push
mov
in
mov
rcrb
mov
ret
pop
push
es
xor
add
pop
inc
sub
orl
dec
sbb
lahf
pusha
add
push
adc
mov
int
inc
pop
add
nop/reserved
mov
imul
jnp
add
mov
js
cli
push
and
pop
jl
adc
dec
inc
inc
mov
orl
inc
add
fiaddl
adc
cld
push
rcrb
pop
push
dec
dec
inc
in
sti
jle
inc
push
push
pop
or
add
shrb
fs
popa
add
rorb
mov
fs
repz
ds
dec
add
jae
jbe
adc
xchg
shll
adc
das
pop
fs
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
