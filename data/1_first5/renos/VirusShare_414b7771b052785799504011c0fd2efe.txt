push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sbb
sub
mov
add
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
sbb
mov
mov
sub
mov
sub
test
jg
mov
mov
mov
mov
sub
mov
mov
sub
mov
adc
mov
mov
mov
mov
sub
sbb
sub
add
cmpl
jg
mov
mov
mov
sub
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
cmp
ja
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
or
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
cmp
jl
mov
mov
mov
mov
add
mov
add
mov
mov
mov
mov
pushl
call
mov
mov
and
mov
sub
mov
mov
mov
push
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
call
mov
mov
sub
add
mov
mov
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
sbb
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
add
xor
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
ja
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
sbb
mov
mov
mov
mov
mov
test
jp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
add
mov
cmpl
jnp
mov
mov
mov
mov
mov
mov
mov
xorl
mov
lea
mov
push
call
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
orl
mov
mov
mov
call
mov
lea
sub
sub
mov
sub
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
push
call
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
or
sub
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sbb
add
mov
add
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
add
mov
sub
sbb
mov
mov
mov
mov
mov
add
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
push
call
mov
xor
add
mov
cmpl
ja
or
xorl
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sub
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
incl
mov
mov
mov
mov
sub
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
sub
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
add
mov
mov
mov
mov
mov
push
call
mov
add
mov
mov
mov
add
mov
mov
push
call
mov
mov
mov
mov
mov
mov
sub
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
add
mov
mov
mov
call
mov
xor
add
sub
add
mov
adc
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
or
mov
mov
cmp
jl
mov
sbb
add
mov
mov
mov
add
mov
mov
mov
sub
mov
and
mov
mov
mov
orl
push
call
mov
mov
mov
mov
add
lea
mov
mov
sub
mov
mov
mov
mov
sub
mov
adc
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
adc
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
and
mov
mov
mov
mov
mov
pushl
call
mov
add
mov
mov
mov
mov
mov
mov
movl
mov
mov
push
call
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
cmp
ja
mov
mov
mov
mov
mov
mov
mov
xorl
movl
xor
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
sub
cmp
jl
mov
mov
mov
mov
mov
andl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
mov
mov
andl
sbb
sub
call
mov
mov
sub
sbb
mov
mov
mov
mov
mov
call
mov
mov
mov
and
mov
mov
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
xor
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
call
mov
xor
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
movl
mov
mov
push
call
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
sub
and
mov
test
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
or
mov
adc
mov
add
cmp
jg
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
and
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
decl
mov
mov
mov
mov
mov
andl
mov
pushl
call
mov
mov
sub
mov
mov
mov
mov
xorl
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
sub
sbb
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
adc
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
and
mov
mov
subl
mov
sub
mov
mov
mov
mov
mov
add
mov
mov
mov
cmpl
ja
add
mov
mov
mov
add
mov
mov
xorl
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jg
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
and
mov
push
call
mov
mov
add
mov
test
jl
mov
mov
mov
mov
add
mov
mov
mov
xor
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
incl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
subl
mov
push
call
sbb
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
xor
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
add
mov
push
call
sub
mov
mov
add
cmpl
je
mov
mov
mov
mov
mov
mov
orl
mov
mov
mov
mov
pushl
call
mov
mov
mov
add
mov
mov
cmp
jg
mov
add
mov
mov
mov
mov
mov
call
sub
sub
mov
add
or
mov
mov
mov
mov
sub
mov
cmp
jae
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
orl
lea
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
cmp
jg
add
mov
add
mov
mov
addl
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sub
mov
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
addl
mov
lea
mov
push
call
mov
mov
mov
and
mov
sub
cmp
ja
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
decl
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
ja
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
lea
adcl
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
sub
mov
mov
mov
xor
mov
movl
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
decl
mov
mov
and
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
mov
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
add
cmp
jbe
mov
mov
mov
sub
or
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
sub
mov
mov
mov
mov
push
call
xor
mov
add
mov
mov
mov
mov
call
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
mov
cmp
jns
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
pushl
call
mov
mov
sub
mov
sub
mov
mov
subl
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
push
call
mov
or
add
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
add
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
sub
mov
mov
andl
push
call
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
mov
mov
add
mov
mov
mov
mov
subl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
cmpl
jae
mov
mov
mov
mov
add
mov
mov
sub
mov
mov
mov
mov
and
push
call
mov
and
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
incl
mov
mov
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
pushl
call
mov
and
mov
mov
mov
or
mov
mov
mov
mov
lea
mov
push
call
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
cmp
ja
mov
mov
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
add
xor
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sub
mov
mov
mov
mov
mov
call
mov
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sub
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
or
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
mov
mov
or
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
add
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
mov
add
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
or
xor
mov
cmp
js
mov
mov
mov
mov
mov
mov
sub
mov
add
push
call
mov
mov
add
mov
mov
sub
orl
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
xorl
mov
mov
push
call
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
ja
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
add
mov
mov
mov
add
push
call
mov
mov
sub
or
mov
mov
mov
mov
mov
mov
mov
sub
mov
or
mov
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
sbb
mov
mov
xor
mov
mov
mov
mov
push
call
mov
add
and
mov
mov
mov
call
mov
mov
mov
sub
test
jae
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
xor
mov
add
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
add
mov
xorl
mov
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
test
jg
mov
mov
lea
sub
mov
mov
mov
mov
push
call
mov
add
mov
add
cmp
jne
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
incl
mov
mov
mov
mov
or
mov
mov
sub
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
addl
call
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
call
mov
mov
mov
and
mov
cmpl
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
cmp
jae
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
subl
mov
mov
mov
mov
mov
mov
mov
mov
or
sub
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
mov
add
mov
mov
sub
mov
mov
mov
mov
push
call
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
xorl
cmp
jne
mov
mov
mov
sub
mov
mov
mov
add
mov
pushl
call
mov
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
add
mov
or
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
sub
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
mov
xor
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sub
add
mov
mov
mov
and
mov
push
call
mov
mov
mov
mov
add
adc
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
call
and
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
test
je
mov
mov
mov
sub
mov
mov
xor
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
adc
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
sub
xor
sub
mov
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
sbb
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
test
jl
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
adc
mov
add
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
andl
mov
push
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
cmp
jbe
mov
mov
mov
add
mov
mov
addl
mov
mov
call
mov
mov
mov
mov
mov
xor
mov
mov
call
mov
mov
xor
mov
mov
sub
mov
add
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
adc
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
and
add
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
sub
mov
mov
or
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
sub
mov
mov
sub
cmp
jae
mov
mov
mov
sub
mov
mov
or
mov
push
call
mov
mov
mov
sub
mov
xor
mov
mov
xorl
call
mov
mov
mov
sub
mov
add
mov
mov
mov
or
mov
lea
push
call
mov
add
mov
mov
mov
mov
mov
add
or
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
subl
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
or
mov
mov
mov
call
xor
mov
mov
mov
mov
mov
mov
xor
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
push
call
mov
and
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
sub
sbb
mov
mov
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
sbb
mov
cmp
jl
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
add
cmp
jne
mov
mov
mov
mov
add
mov
mov
mov
mov
andl
push
call
mov
mov
sub
add
mov
mov
mov
push
call
mov
mov
mov
sub
mov
adc
mov
mov
mov
mov
mov
push
call
mov
add
mov
mov
mov
call
or
mov
mov
mov
cmpl
je
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
cmp
jbe
mov
mov
add
mov
mov
mov
movl
mov
mov
mov
mov
mov
add
push
call
mov
mov
add
mov
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
sbb
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
orl
pushl
call
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sbb
mov
mov
mov
sub
mov
mov
adc
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
sub
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
cmp
jae
mov
mov
mov
or
add
mov
mov
xorl
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
mov
mov
sub
mov
mov
mov
mov
mov
add
or
mov
add
mov
mov
sub
push
call
mov
sub
mov
mov
movl
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
cmp
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
push
call
mov
sub
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
sub
cmp
jb
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sub
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
sub
mov
mov
mov
orl
mov
mov
mov
mov
mov
mov
mov
cmp
jo
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
cmp
jae
adc
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
call
mov
add
mov
mov
mov
mov
push
call
mov
mov
sub
mov
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jl
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
cmp
jae
mov
mov
add
mov
mov
mov
or
mov
adc
mov
mov
mov
push
call
mov
or
sub
mov
add
mov
mov
mov
mov
add
pushl
call
mov
or
mov
add
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
sbb
mov
mov
mov
mov
mov
push
call
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jg
mov
mov
mov
or
mov
mov
incl
mov
add
push
call
adc
mov
mov
mov
mov
mov
mov
call
mov
mov
and
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
call
or
mov
sub
mov
mov
movl
mov
adc
call
mov
mov
mov
mov
mov
xor
sub
cmp
jl
mov
sub
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
xorl
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
cmp
ja
mov
mov
mov
mov
sub
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
lea
mov
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
cmp
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
call
and
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
xor
add
mov
mov
mov
add
cmp
jae
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
xor
mov
add
mov
mov
mov
cmp
jbe
mov
mov
mov
add
mov
or
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
mov
sub
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
xorl
mov
mov
mov
sub
mov
mov
mov
mov
push
call
mov
and
mov
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
sub
cmp
jg
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
call
mov
add
mov
sub
mov
adc
add
mov
mov
mov
mov
sub
mov
mov
mov
cmp
jl
mov
mov
mov
mov
mov
mov
mov
call
mov
or
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
mov
or
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
or
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
push
call
or
mov
sub
mov
cmpl
jl
mov
mov
sub
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
cmp
je
mov
mov
mov
adc
mov
mov
xorl
mov
mov
mov
mov
call
mov
mov
sub
mov
orl
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
and
add
mov
mov
mov
andl
mov
mov
mov
push
call
mov
sub
mov
mov
mov
mov
mov
andl
mov
mov
mov
add
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
sub
mov
subl
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
sbb
mov
add
mov
mov
xor
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
mov
lea
push
call
mov
mov
mov
or
mov
mov
mov
call
mov
mov
mov
mov
cmpl
jbe
mov
mov
mov
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
cmp
jbe
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
subl
mov
push
call
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
ja
mov
mov
mov
mov
mov
mov
adc
mov
mov
mov
mov
mov
sub
mov
cmp
jb
mov
mov
mov
mov
add
mov
mov
mov
mov
sub
mov
mov
cmp
jl
mov
mov
mov
add
mov
mov
mov
mov
sub
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
or
mov
mov
mov
mov
test
jns
adc
mov
mov
sub
mov
mov
push
call
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
sub
mov
mov
mov
sbb
mov
mov
mov
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
add
sub
mov
mov
mov
mov
mov
push
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
mov
push
call
mov
adc
and
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
jg
mov
mov
mov
sub
mov
mov
add
push
call
mov
mov
add
mov
sub
mov
mov
mov
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
xor
sub
mov
mov
mov
mov
and
mov
mov
mov
xorl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
mov
mov
mov
mov
sbb
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
movl
movl
mov
sbb
mov
push
call
mov
mov
add
mov
xor
add
cmp
jnp
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
pushl
call
mov
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
andl
mov
mov
mov
add
or
mov
orl
mov
mov
mov
mov
sub
mov
sbb
mov
addl
mov
mov
mov
push
call
mov
mov
sub
mov
and
mov
cmp
jbe
mov
mov
mov
mov
sub
and
mov
mov
mov
mov
mov
add
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
adc
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
lea
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
add
mov
sub
mov
mov
test
jae
mov
mov
or
sub
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
subl
mov
mov
cmp
je
mov
mov
mov
mov
sub
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jl
mov
mov
mov
mov
mov
mov
incl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
cmp
jbe
mov
sbb
mov
sub
mov
mov
mov
mov
mov
push
call
mov
sub
mov
mov
adc
mov
xor
mov
mov
mov
mov
sub
sbb
mov
cmpl
ja
mov
mov
mov
mov
sub
or
mov
mov
mov
or
mov
mov
lea
push
call
mov
mov
sub
mov
mov
mov
mov
call
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
test
jbe
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
add
add
mov
mov
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
dec
jne
mov
mov
add
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
incl
sub
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
sub
mov
mov
and
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
or
sbb
mov
mov
mov
lea
mov
mov
push
call
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
mov
mov
lea
mov
add
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
add
cmp
jae
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
push
call
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
xor
sub
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
adc
sub
mov
mov
or
mov
push
call
mov
mov
mov
add
sub
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
add
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
test
je
mov
mov
add
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
add
mov
cmp
jae
mov
mov
mov
sub
mov
mov
subl
mov
lea
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
xor
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
sub
mov
sub
mov
mov
sbb
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
sub
mov
mov
mov
mov
adc
add
mov
mov
mov
add
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
mov
and
mov
mov
mov
mov
mov
mov
mov
and
mov
push
call
mov
mov
add
mov
mov
mov
sbb
mov
mov
adc
mov
mov
mov
mov
mov
push
call
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
add
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
cmp
jg
mov
mov
add
mov
mov
mov
sub
xorl
lea
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
cmp
js
mov
mov
xor
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
mov
mov
add
cmp
je
add
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
addl
mov
mov
call
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
cmp
jg
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
add
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
mov
mov
sub
cmpl
ja
mov
mov
mov
mov
mov
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
cmp
ja
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
addl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
andl
mov
mov
mov
call
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
call
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
cmp
ja
mov
mov
xor
sub
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
add
adc
mov
mov
mov
mov
push
call
mov
mov
mov
mov
cmpl
jne
mov
mov
mov
mov
mov
sbb
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
sbb
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
cmp
jnp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
sub
mov
mov
mov
cmp
jae
add
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
call
add
popa
push
push
add
jne
inc
add
jns
push
add
add
add
add
add
add
add
push
add
add
jp
jb
inc
add
push
push
add
add
add
pop
add
add
inc
je
push
cmp
dec
add
xor
push
fs
mov
mov
mov
mov
mov
mov
mov
sub
mov
and
mov
mov
mov
mov
mov
add
mov
mov
decl
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sbb
sub
cmp
jae
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
add
push
call
mov
mov
mov
add
and
mov
cmp
je
mov
xor
mov
sub
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
add
mov
or
sub
mov
mov
call
mov
mov
mov
add
mov
mov
xor
mov
mov
mov
mov
mov
call
mov
mov
add
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
orl
call
mov
mov
add
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
mov
call
mov
add
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
call
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
call
mov
mov
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
push
call
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
cmp
jb
mov
sub
mov
add
mov
sub
mov
mov
mov
mov
add
mov
call
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
call
push
call
mov
add
mov
mov
mov
mov
mov
mov
call
call
mov
mov
add
mov
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
call
mov
mov
mov
mov
mov
mov
add
mov
mov
call
leave
ret
nop
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
push
mov
add
mov
or
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
pop
ret
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
push
mov
mov
mov
add
mov
add
mov
mov
mov
call
mov
mov
mov
mov
mov
pop
ret
push
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
and
mov
mov
mov
push
call
mov
mov
add
mov
adc
mov
pop
ret
nop
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
jae
mov
mov
sub
xor
add
mov
pop
ret
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
xorl
mov
mov
mov
push
call
mov
sub
mov
mov
mov
call
mov
mov
sub
mov
mov
or
mov
mov
sub
mov
add
mov
mov
mov
ret
nop
nop
nop
push
mov
mov
mov
mov
mov
add
mov
orl
mov
mov
mov
add
mov
mov
mov
pop
ret
push
mov
add
mov
mov
add
mov
mov
mov
or
mov
mov
mov
xor
add
push
mov
push
mov
pushl
decl
pushl
call
mov
mov
sub
mov
mov
mov
mov
mov
leave
ret
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
adc
mov
call
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
sub
mov
mov
call
mov
sub
mov
and
mov
mov
mov
push
call
mov
mov
mov
cmp
jp
mov
mov
mov
mov
add
mov
mov
mov
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
sub
xor
mov
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
cmpl
jnp
mov
mov
mov
sub
mov
mov
sub
xor
mov
mov
mov
inc
mov
cmp
jne
mov
mov
sub
mov
mov
addl
mov
mov
mov
mov
mov
mov
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
add
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sub
mov
mov
mov
mov
push
push
push
push
push
call
mov
mov
mov
sub
and
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
movl
push
call
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
add
sub
mov
mov
mov
mov
add
mov
mov
xor
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
test
jae
mov
add
mov
sub
sub
mov
mov
mov
mov
add
dec
jne
mov
mov
xor
sub
mov
mov
mov
push
call
mov
and
sub
mov
mov
mov
mov
add
and
mov
mov
mov
mov
push
call
mov
mov
add
cmp
jge
mov
mov
add
mov
mov
mov
mov
call
ret
nop
nop
nop
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
push
mov
push
call
mov
add
mov
mov
cmp
jl
mov
mov
sub
mov
mov
mov
mov
ret
push
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
nop
push
mov
mov
mov
sub
mov
mov
xor
mov
mov
sub
mov
mov
pushl
push
pushl
call
mov
mov
add
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
inc
cmp
jne
mov
sub
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
call
mov
mov
add
add
mov
mov
ret
nop
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
mov
mov
mov
mov
pop
ret
push
mov
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
push
mov
mov
mov
add
mov
mov
mov
mov
sub
mov
sub
cmp
jne
mov
mov
mov
sub
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
add
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
pushl
lea
push
call
mov
mov
add
cmp
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
and
mov
add
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
add
cmp
ja
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
and
or
mov
mov
mov
leave
ret
nop
push
mov
mov
mov
sub
mov
xor
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
push
call
mov
sub
mov
sub
mov
mov
mov
push
call
mov
mov
or
mov
sub
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
sub
or
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
mov
sub
mov
mov
push
push
push
push
call
mov
mov
sub
mov
mov
mov
xor
mov
mov
mov
sub
mov
mov
mov
mov
mov
leave
ret
nop
nop
nop
push
mov
add
mov
mov
add
mov
cmp
jae
mov
mov
add
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
cmp
ja
mov
mov
or
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
adc
leave
ret
nop
nop
nop
push
mov
add
mov
mov
sub
mov
mov
mov
andl
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
incl
mov
mov
pop
ret
push
mov
add
mov
mov
mov
and
mov
mov
decl
mov
mov
pop
ret
nop
mov
mov
add
mov
mov
mov
sub
add
mov
sbb
mov
mov
mov
mov
mov
ret
nop
push
mov
add
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
sub
push
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
leave
ret
nop
nop
nop
add
add
add
add
add
add
add
repnz
call
mov
shlb
jg
lods
fdivl
cmp
fistl
or
hlt
mov
mov
cmpsb
inc
test
mov
and
arpl
in
test
cmp
bound
adc
icebp
enter
hlt
adc
bound
jg
push
lcall
push
out
mov
daa
aaa
sbb
jmp
pop
dec
xchg
sub
orb
out
adc
push
jmp
and
or
jp
jnp
lods
dec
inc
nop
das
add
sbb
sbb
mov
xchg
xchg
jmp
push
int3
movsb
out
mov
mov
dec
jge
fwait
das
sbb
outsl
ja
mov
mov
lock
mov
jb
out
std
cwtl
mov
xor
js
sub
adc
jb
outsb
lea
cmp
out
adcl
sub
jmp
les
incb
icebp
mov
mov
out
add
pop
lcallw
mov
dec
js
sub
addb
shrl
jb
es
fs
pop
sahf
gs
jae
pop
cld
test
aaa
push
lods
mov
out
std
sbb
xchg
shll
lahf
push
loopne
incl
jl
xchg
sbb
jl
sbb
in
and
lcall
or
js
cmp
xor
pop
in
das
xchg
jg
out
aaa
add
lcall
data16
jnp
popa
and
push
xlat
xchg
jmpw
js
sbb
lret
jmp
xchg
out
ja
adc
decl
je
sub
out
sbbb
lcall
inc
jbe
adc
sahf
popf
sbb
mov
and
add
mov
mov
and
jnp
insb
mov
rorl
jl
sbb
lcall
mov
into
add
mov
jl
dec
dec
ja
mov
lret
out
ja
mov
ficoml
movsl
iret
js
push
mov
pop
jmp
out
pusha
cmp
loop
cmpsl
pop
js
push
gs
std
cmp
sbb
and
mov
fidivrl
icebp
data16
pop
push
in
and
dec
leave
cmp
shrb
mov
jmp
and
jnp
cmc
aaa
lods
and
sub
lahf
add
cltd
inc
mov
mov
pop
mov
sbb
icebp
push
dec
push
lock
out
js
sub
addb
shrl
jb
es
lock
adc
push
add
pop
mov
xchg
shll
dec
pop
mov
sahf
mov
add
xor
push
jmp
out
ja
mov
clc
shll
js
movsl
gs
jnp
cli
jmp
mov
data16
mov
ds
add
lcall
mov
ss
mov
gs
out
ja
mov
gs
xchg
std
imul
and
cltd
pop
mov
mov
xor
xchg
callw
mov
mov
sbb
dec
bound
xor
mov
ja
mov
pop
leave
pop
out
ja
mull
in
add
jmp
out
scas
sub
sbb
daa
and
jnp
sbb
lcall
mov
cltd
pop
fisubl
jmp
push
pushw
sbb
jnp
out
test
jmp
sub
or
ja
xchg
or
xor
inc
and
jl
sbb
data16
leave
out
jmp
out
les
fsubl
sbb
jl
push
mov
mov
jae
fisubl
shll
pop
jne
mov
imul
dec
mov
dec
add
jno
sub
pop
sbb
dec
test
imul
subb
or
sub
jmp
je
mov
in
ja
jg
xchg
in
lahf
gs
stos
mov
orb
lods
add
jle
fsubl
addr16
and
dec
add
das
xchg
pop
aas
jge
pushf
addr16
dec
stc
mulw
sti
data16
imul
mov
cmp
sbb
and
std
and
into
aad
mov
mov
cmp
mov
lcall
mov
shll
mov
das
incl
cmp
push
push
push
or
mov
and
push
ja
mov
jl
int
cld
mov
push
sub
jmp
out
cmc
inc
mov
jmp
push
jl
inc
hlt
ret
shrl
push
dec
loop
xchg
aam
movsb
and
add
lcall
sbb
jmp
lahf
push
and
or
jmp
out
ja
gs
sbb
xlat
dec
loope
ss
push
sub
mov
xor
mov
jl
insb
mov
lcall
mov
jl
sti
test
add
mov
int
sbb
jmp
cli
add
mov
pusha
inc
mov
stos
and
cmpsl
pop
js
jno
lcall
mov
cmp
add
add
pop
jl
insb
shlb
pop
jmp
es
jmp
mov
add
adc
nop
jne
mov
lds
jnp
mov
fiadds
cld
mov
push
jnp
ljmp
cmc
movsl
fdivrl
mov
and
jecxz
loopne
sbbl
and
js
and
mov
add
sub
adc
mov
pop
cld
mov
cli
push
xchg
arpl
inc
mov
repz
push
cmp
sbb
mov
ja
mov
in
jmp
or
lea
pop
jmpw
out
ja
mov
movsl
adcb
decl
out
leave
sbb
gs
lock
xlat
ja
push
add
movaps
jnp
cld
mov
jle
pusha
decw
out
outsb
jmp
xchg
lcall
mov
pop
push
je
gs
sbb
out
ja
mov
pusha
jmp
iret
mov
rcrb
sub
sbb
mov
jmp
xlat
jne
sbb
mov
mov
sbb
jnp
sbb
sbb
sub
cli
fbld
rolb
dec
pusha
cmp
mov
js
arpl
rorb
push
lret
cmp
sub
push
and
std
sbb
fs
imul
mov
imul
movsb
icebp
jns
push
scas
int
arpl
and
xchg
sbb
outsl
add
lahf
mov
mov
mov
xchg
out
ja
lret
jmp
push
sbb
es
sbb
cmp
dec
pop
mov
int3
data16
mov
jae
pop
jge
jns
or
and
in
pop
out
mov
and
dec
and
js
ss
xlat
jg
dec
jne
mov
cmp
inc
lods
mov
pop
idivl
add
js
push
or
and
sbb
dec
cwtl
jo
andl
cwtl
rcl
inc
cs
rolb
por
test
jle
xlat
pusha
xchg
subl
mov
dec
les
mov
jge
push
pop
pop
lods
aam
in
aam
dec
ret
lods
or
negb
adc
inc
inc
rorl
mov
mov
adc
fwait
rorl
test
cmp
outsb
rclb
ficoml
lahf
sbb
in
pop
cmp
inc
xchg
test
jae
outsb
xor
xor
add
push
jo
bound
lock
mov
mov
ljmp
adc
mov
movsb
movsb
jp
add
jp
mov
aas
das
arpl
mov
mov
aam
test
inc
repz
dec
pop
inc
mov
inc
nop
mov
lcall
mov
jnp
sbb
gs
and
jnp
movsb
aad
mov
sub
add
pop
cld
cmp
icebp
jge
pop
dec
cli
sbb
ljmp
mov
cld
and
jge
sbb
mov
push
cmpsb
jae
mov
cltd
data16
sbb
jp
sbb
insl
idiv
data16
sub
push
mov
outsb
out
sub
and
mov
jno
icebp
mov
in
ja
sub
pop
sbb
lods
push
mov
mov
outsb
ja
mov
jmpw
cmc
mov
mov
dec
mov
cmpsb
scas
xor
adc
mov
pop
and
mov
xchg
mov
and
and
fs
repnz
sbb
out
pop
cwtl
mov
jmp
xchg
cmp
test
mov
ret
mov
inc
pop
into
into
fnstenv
mov
pushw
push
je
sbb
sahf
ja
mov
call
into
dec
mov
pop
push
test
jnp
sbb
jmp
fstl
pop
loop
out
mov
add
jp
fists
and
dec
xchg
sub
mov
dec
jmp
jmp
pop
jbe
mov
gs
in
pop
xor
mov
in
and
dec
test
jmp
push
adc
and
testl
cltd
data16
pop
dec
stos
int3
movsb
jns
mov
leave
pop
mov
push
mov
jnp
sbb
sub
mov
or
icebp
mov
mov
and
sbb
repz
and
jnp
fcmovu
lock
jge
inc
popa
out
imul
fcmovnu
xchg
sti
pushl
jmp
and
jnp
loopne
mov
push
cmpsb
test
ja
clc
mov
nop
mov
mov
in
ja
mov
dec
mov
das
je
outsl
jp
pop
xchg
icebp
or
and
jge
cmp
cs
and
int
sbb
push
movsb
divb
mov
cmpsb
add
and
cli
adc
gs
out
ja
es
je
and
add
aaa
clc
adcb
xor
arpl
sub
pop
sbb
pop
xor
mov
mov
cmp
sbb
jnp
sbb
movsb
pop
out
and
ds
mov
jnp
sbb
and
add
mov
les
sbb
xchg
and
movsl
push
loop
push
sub
pusha
mov
and
jae
sbb
testb
fisttps
std
cmp
popa
and
jnp
sbb
sti
mov
dec
sarl
es
lcall
mov
xchg
jne
orb
les
xor
sbb
push
add
dec
data16
add
push
add
add
push
add
inc
add
add
add
add
add
add
push
add
push
add
add
pop
add
jae
add
add
dec
add
add
add
add
add
bound
add
add
add
pop
add
add
add
add
add
add
push
add
push
add
add
add
arpl
add
dec
add
add
add
push
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
jp
add
bound
add
add
add
imul
add
inc
add
add
add
add
add
add
add
add
inc
inc
add
bound
add
add
add
pop
outsl
add
xor
insl
add
add
add
xor
add
arpl
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
dec
jbe
add
add
dec
add
add
je
add
add
push
je
add
add
add
add
add
add
add
jp
add
add
add
xor
add
insb
bound
add
add
add
add
add
add
add
add
add
inc
inc
push
insl
add
add
add
add
aaa
inc
add
add
inc
xor
jae
push
add
add
add
add
add
inc
andb
inc
mov
xchg
cmp
ret
out
xor
sbb
xor
jnp
add
cmp
mov
push
mov
and
negl
jge
mov
mov
xor
sbb
xchg
aaa
push
pusha
xchg
aaa
mov
xor
aam
mov
loop
and
stos
movsl
lahf
and
mov
iret
jge
int3
xor
push
xchg
adc
push
pop
scas
inc
mov
and
xor
sbb
cmp
xchg
pop
push
sbb
aad
mov
dec
mov
aas
aad
loop
push
adc
fwait
scas
sbb
stos
adc
lock
xor
push
sahf
icebp
cs
xlat
adcl
out
xchg
pop
scas
jecxz
xor
stos
and
sbb
shrl
mov
loopne
push
jle
ds
cwtl
and
xor
shrb
mov
mov
inc
rolb
out
adc
add
adc
push
stc
adc
cwtl
mov
aad
push
mov
lcall
stos
scas
popa
jb
fwait
cmp
dec
jo
popa
cmp
clc
or
cmpsb
xor
and
icebp
sbb
fwait
mov
xor
jmp
sub
jge
mov
push
sub
fnstcw
xchg
cmp
cmp
popa
fs
xor
and
leave
std
cmpl
ret
push
xor
inc
sub
xor
dec
loopne
xchg
inc
scas
xlat
xchg
push
sbb
xor
xchg
pop
cmc
adc
adc
adc
lahf
inc
fsts
insb
jecxz
mov
inc
movsl
loopne
or
test
or
mov
dec
xor
add
mov
sbb
popf
addr16
jp
in
daa
out
sbb
xchg
mov
fwait
arpl
cmp
xor
mov
push
add
push
lock
insb
xlat
xchg
xor
ljmp
sbb
adc
mov
mov
es
popf
jmp
aad
ja
cmp
and
lcall
es
out
out
dec
add
push
adc
cs
xchg
jne
jl
popf
dec
add
loop
mov
or
sbb
lea
out
pop
rclb
out
sbb
and
ss
xor
idivl
pop
das
jns
ss
push
sti
mov
mov
push
cmp
testb
cmp
hlt
dec
push
dec
bts
xchg
xorl
cmpsl
inc
mov
out
fistps
and
ds
push
fnstcw
nop
xor
lret
fbld
sbb
dec
movsb
sbb
aaa
jno
and
test
pop
push
xlat
xor
adc
inc
add
mov
xchg
or
ret
movsl
and
add
loope
stc
iret
icebp
add
pushf
jb
jb
and
subl
jno
push
mov
inc
lods
sbbl
xor
mov
lahf
push
dec
stos
jae
mov
xlat
je
adc
mov
fildll
mov
dec
ret
push
in
adc
xchg
aam
adc
cmpsl
and
push
leave
cmp
and
pop
std
add
pop
push
test
jmp
call
arpl
fwait
xchg
jnp
sub
arpl
jp
addr16
add
and
pop
sbb
jecxz
popw
pop
das
jnp
mov
sub
xchg
inc
das
lea
es
xorb
repz
add
mov
popa
and
das
mov
dec
mov
dec
lret
xchg
jp
inc
into
sbbl
pushf
out
cmc
xor
adc
fidivs
sbb
add
imul
jb
subb
mov
int
out
mov
sbb
dec
aas
inc
cli
insl
jg
shlb
sub
and
pop
andb
lret
lcall
lcall
dec
outsl
jns
mov
mov
arpl
xor
and
jae
mov
je
mov
addr16
xchg
out
ljmp
jne
mov
or
xlat
push
ljmp
pop
xor
mov
jmp
mov
or
jmp
insb
popa
sbb
das
xorl
xor
dec
cltd
mov
loopne
sub
push
fistpl
test
xor
lds
cmpsl
inc
jno
push
mov
fsts
push
jbe
inc
aam
icebp
idivl
jae
adc
mov
insl
push
sub
xlat
repnz
xchg
stos
imul
inc
decl
adc
stc
repz
mov
ret
sub
push
push
and
arpl
loopne
and
in
lahf
addr16
inc
stc
daa
push
jae
popf
jne
add
xorb
repz
test
icebp
icebp
mov
push
adc
push
add
adc
and
mov
mov
pusha
mov
js
mov
mov
mov
mov
mov
mov
pop
cmp
mov
jl
jl
jl
jl
jl
jg
xchg
rorl
sbb
leave
cmp
cmp
int
int
int
int
int
int
int
int
int
int
scas
or
and
inc
scas
dec
sub
jo
cltd
sub
sub
sub
sub
and
nopl
std
adc
dec
cld
jl
fwait
jl
jl
jo
xor
cmp
imul
mov
inc
lcall
inc
ljmp
pop
inc
pop
pop
inc
addr16
jp
lea
dec
fisttpll
dec
decb
mov
sbb
xor
push
mov
orl
aad
fistpll
sub
pop
cld
outsl
cmp
jl
jl
jl
jl
jl
jo
cmp
and
adc
jl
mov
outsb
jl
jl
jl
jl
jl
jl
jl
jl
jo
cmp
mov
jo
pusha
stos
push
mov
mov
inc
or
xor
pop
ja
nop
inc
xchg
inc
mov
dec
mov
dec
fmuls
dec
jmp
sbb
int3
pop
dec
inc
pop
inc
push
ja
jl
orl
dec
mov
rorl
dec
hlt
dec
decl
mov
sub
lea
imul
cwtl
mov
mov
mov
mov
mov
mov
mov
sbb
cmp
dec
mov
mov
xchg
mov
mov
mov
xchg
stc
xor
sete
hlt
cmp
inc
xor
adc
je
push
push
push
adcb
push
stos
push
mov
rcll
hlt
dec
pop
inc
or
dec
adc
mov
jo
pusha
pop
push
gs
jge
mov
inc
rolb
inc
out
shll
pop
jne
test
inc
adc
dec
rorb
dec
jmp
xor
adc
and
sub
pop
lea
dec
mov
imul
ret
push
daa
or
inc
lds
push
lea
nop
mov
mov
xchg
out
sysenter
sbb
sub
cmp
push
lods
popa
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
xor
xor
inc
aam
xor
adc
je
push
mov
and
inc
cli
inc
adc
pop
cmp
inc
push
inc
pop
dec
imul
jle
andl
int
int
int
int
int
scas
or
es
arpl
lods
scas
sub
sub
sub
sub
cmp
cmp
inc
cld
inc
mov
test
jl
jl
jl
jl
jl
jl
jl
js
push
pop
pop
jp
bound
push
push
dec
pop
push
inc
jl
stos
dec
mov
rorb
rorb
dec
add
rorl
sbb
sub
cmp
inc
decb
mov
orl
xlat
mov
mov
mov
mov
pop
cmp
lret
cmp
jl
jp
adc
cmpsl
push
mov
aam
fsts
push
or
sbb
xchg
jnp
xchg
dec
mov
rorb
ljmp
or
lea
mov
mov
mov
mov
mov
mov
xchg
cli
jb
adc
push
push
je
test
dec
sahf
dec
cmpsl
dec
mov
ljmp
and
inc
inc
inc
dec
dec
push
dec
pop
dec
dec
jle
mov
dec
test
mov
dec
testl
cld
push
cmp
jl
mov
jbe
cmpl
mov
jl
jl
jl
jl
jl
jo
xor
pop
adc
insl
jo
pusha
mov
inc
mov
mov
pop
cmc
dec
add
xor
or
xchg
inc
dec
sub
sub
sub
sub
sub
sub
sub
sub
sub
cmp
xor
xor
clc
adc
ja
popa
mov
xchg
push
movsl
push
mov
mov
push
lock
ds
jp
xchg
inc
jmp
cmc
inc
mov
pusha
outsl
xchg
jne
xchg
int
int
int
int
int
int
scas
add
scas
and
pop
dec
sub
sub
sub
and
jl
jl
jo
aaa
push
and
adc
add
pop
push
inc
imul
nop
inc
mov
mov
push
cmp
push
cld
imul
jl
jl
jle
sub
jo
pusha
xchg
inc
stos
inc
mov
inc
out
inc
stc
inc
or
adc
pop
lds
ds
inc
iret
push
int
int
int
int
int
int
int
int
ljmp
dec
sub
sub
out
sbb
sub
pop
dec
jo
pusha
push
push
pop
inc
jne
jg
mov
inc
popf
cli
dec
fisttpll
cmp
adc
push
lds
daa
leave
cmp
dec
dec
mov
mov
mov
sub
sub
sub
aaa
pop
cmp
mov
xchg
dec
jbe
pusha
mov
inc
jns
mov
mov
dec
out
mov
add
sbb
lea
dec
mov
bound
xchg
nop
cmpsl
sub
sub
sub
sub
sub
sub
sub
sub
sub
xor
aas
adc
aas
mov
dec
push
dec
popa
dec
insb
or
int
int
int
int
int
int
int
push
inc
xor
mov
mov
pop
sub
lods
jp
xchg
sub
sub
and
lock
add
or
cmpsl
mov
aaa
incb
mov
mov
adc
cs
inc
sub
test
xor
xor
dec
hlt
pop
aam
xor
adc
ja
and
inc
ret
inc
int3
inc
roll
inc
ljmp
xor
jp
bound
jno
sbbl
dec
mov
mov
mov
dec
ljmp
push
mov
mov
popl
dec
lea
outsb
mov
mov
mov
mov
mov
mov
mov
ljmp
jl
inc
clc
popa
adc
jb
adcb
inc
stos
push
mov
mov
aaa
and
cmp
insl
jl
jl
js
adc
ret
push
fcoms
mov
and
xor
cmp
dec
xor
adc
je
push
jo
jl
orb
sarl
loop
icebp
jl
jl
jo
cmp
and
adc
pusha
jo
pusha
jg
xchg
inc
lods
ficompl
in
dec
cld
dec
jmp
popl
mov
and
jo
jmp
cmp
or
pop
cld
pop
cmp
scas
mov
mov
les
fcoml
hlt
push
cld
push
pop
cmp
jp
bound
pop
subb
sub
and
cld
scas
fidivs
cmp
sub
dec
lahf
test
movsl
aam
push
cltd
push
mov
push
iret
push
fists
and
fidivrl
js
aad
hlt
scas
sbb
dec
imul
lret
xchg
leave
mov
push
push
or
adc
inc
inc
inc
dec
dec
pop
dec
addr16
jle
mov
ret
jl
jl
jl
jl
jo
xor
and
pop
mov
addr16
inc
js
xchg
dec
lcall
mov
dec
scas
sbb
push
sub
lods
arpl
sub
and
jl
jl
jl
outsl
mov
cmp
movsl
push
dec
pusha
dec
orb
fmuls
xor
push
sbb
and
cld
dec
cmp
jl
jl
jl
jl
pop
scas
jl
jl
jl
jp
pop
mov
adc
mov
lods
xchg
mov
mov
xlat
push
frstor
dec
mov
push
aam
xor
adc
je
push
xchg
push
mov
push
leave
push
aam
fsts
repnz
adc
sbb
aas
bound
pop
push
fs
dec
jb
ja
mov
sub
sub
sub
and
out
dec
mov
xchg
test
sub
sub
sub
sub
or
scas
inc
sub
mov
xchg
inc
aad
loopne
add
and
xor
xor
mov
dec
add
and
inc
cs
cmp
imul
cmpsl
movsl
dec
lods
dec
mov
mov
dec
fisttps
dec
add
rorl
shld
cmpsl
mov
dec
mov
pop
mov
mov
mov
mov
mov
adc
push
adc
xor
push
jo
jne
jnp
mov
mov
cmpsl
mov
cmp
mov
inc
jp
xchg
dec
xchg
dec
movsb
dec
test
dec
fmuls
dec
out
dec
add
xchg
and
sub
xchg
pop
xor
jne
adcb
mov
mov
leave
int
int
int
int
int
int
xor
mov
sbb
daa
and
dec
mov
jno
imul
fmulp
ljmp
sbb
inc
and
xchg
push
jbe
mov
cmpsl
xchg
xchg
frstor
push
adc
dec
leave
test
mov
idivb
mov
push
push
xor
dec
insb
dec
jb
jl
xor
xchg
pop
test
enter
stos
cld
icebp
mov
cli
sub
push
jl
jl
jl
jl
jl
jo
xor
daa
mov
jo
popa
dec
fisubl
movsl
dec
lret
dec
aad
fmull
dec
in
dec
cld
dec
sbb
rcrl
aaa
mov
cli
xchg
rcrb
ljmp
pop
jle
xchg
add
sar
fnstenv
xchg
mov
cmp
mov
inc
mov
cld
cli
mov
and
push
cmp
dec
dec
jbe
nop
lahf
lahf
sahf
lods
xor
push
fists
cmc
push
std
add
pop
sub
xchg
movsl
popf
jo
movb
out
lock
push
cmp
sub
pop
movsl
push
xchg
addb
cwtl
inc
sahf
inc
test
mov
inc
fidivrl
rorl
adc
sub
cli
mov
xor
mov
sahf
add
in
dec
stc
add
lods
xor
test
stos
jl
jl
jl
js
shrb
add
shll
inc
lds
insl
leave
xchg
call
mov
fdivrl
mov
mov
push
test
mov
mov
mov
cld
cmc
pusha
dec
cmc
pop
adc
mov
faddp
cld
pop
mov
jl
jl
jl
jl
js
push
mov
or
mov
jl
jl
js
adc
jge
mov
mov
mov
jae
add
push
push
sbb
stos
inc
push
dec
lret
xchg
int
int
int
int
int
int
fadds
jne
mov
fidivrl
scas
mov
mov
mov
mov
mov
cmp
pop
cmpsl
jo
xchg
movsl
xchg
ja
xor
xor
sub
push
je
push
imul
mov
js
rcrb
rorb
add
popa
test
out
insb
stos
mov
pushf
divb
stos
or
daa
pop
das
inc
inc
inc
push
add
stos
push
jne
jl
jl
jp
shlb
in
dec
stc
dec
add
rorl
dec
test
fbld
adc
sbb
xchg
out
das
test
addr16
jp
mov
cltd
push
mov
push
adc
sbb
bound
push
push
dec
pop
push
inc
arpl
dec
xchg
lahf
mov
push
cltd
ljmp
cmpsl
dec
bound
orl
mov
xchg
into
xor
out
in
push
notb
cmp
mov
dec
popa
outsb
pop
cmpsl
xchg
mov
lock
aaa
std
adc
mov
test
mov
jo
cltd
inc
movsb
inc
mov
ret
add
pushl
adc
sbb
cmp
imul
mov
lods
into
inc
fcmovne
stos
mov
jo
popa
pop
xchg
outsl
push
js
mov
cmpsl
inc
mov
or
sub
out
xchg
shlb
push
pop
imul
aaa
fwait
xchg
add
mov
out
addl
test
dec
jo
popa
fisubl
stos
dec
mov
mov
sahf
out
xchg
xchg
xchg
sub
lahf
push
je
push
aad
in
jmp
lock
movsl
ret
popf
xor
scas
and
sub
mov
imul
lret
neg
xchg
mov
jns
lea
xchg
roll
mov
popl
dec
xchg
pop
xor
mov
add
mov
xchg
lods
jecxz
out
je
mov
or
jl
inc
mov
cmpl
ret
jl
jl
jl
jp
adc
sbb
inc
and
pop
scas
orl
nop
fisttps
mov
and
pop
cld
pusha
cmp
jl
jl
jl
jl
jl
jl
jl
jl
jp
jmp
rcrl
sub
gs
cwtl
dec
movsl
mov
xlat
int
scas
add
ucomiss
sbb
cmp
dec
dec
dec
push
sub
clc
xchg
mov
lods
mov
mov
jns
mov
mov
sub
dec
pop
push
inc
popa
mov
sahf
push
pusha
sbb
in
xchg
or
adcl
dec
pusha
dec
imul
mov
xorb
push
movsb
pop
out
cmp
push
fildl
shl
dec
testl
sbb
cmp
mov
clc
std
pusha
push
lds
jbe
xchg
xchg
lahf
dec
test
or
int
stc
lret
loop
icebp
inc
testl
push
adc
pop
cmp
stc
call
push
xor
xchg
fbld
dec
mov
rorb
ret
stc
repz
or
in
sbb
and
push
cmp
xchg
dec
mov
push
int3
push
flds
leave
addr16
pop
scas
movsb
mov
in
xor
shll
outsl
and
and
sarl
push
cmp
xor
adc
adc
das
xchg
xor
push
push
push
pusha
fnstenv
jns
jle
adc
xchg
mov
jl
jl
jl
jl
jp
adc
fcoml
call
pushf
or
sbb
or
iret
sub
cs
int
int
int
int
int
clc
data16
jbe
mov
inc
xchg
inc
sahf
inc
mov
int
clc
lds
inc
loopne
out
pop
icebp
dec
testl
lret
ja
sub
xor
dec
push
push
push
pop
pop
push
xchg
jbe
jg
pusha
jae
inc
mov
ret
lahf
jne
out
in
push
notl
xor
jp
bound
push
popa
sub
cmp
jnp,pt
pop
dec
fs
push
imul
int
out
nop
outsl
mov
dec
dec
int3
lret
add
xor
pop
cs
and
clc
push
inc
adc
push
push
pop
push
addr16
adcl
pop
sub
sub
sub
and
sbbb
and
cs
aas
push
dec
arpl
addb
sahf
inc
mov
loop
mov
ds
nop
mov
mov
mov
xor
cld
pop
inc
or
bound
push
mov
scas
xchg
sbb
xchg
xlat
push
and
adc
xchg
and
cmpl
cmp
jl
jl
jl
jl
js
repnz
mov
call
cmpsb
cmp
mov
and
cli
aas
fcoml
sti
call
jno
mov
sub
mov
sub
fdivrl
pop
inc
pushf
mov
incl
decb
pop
cmpsb
mov
loop
mov
lock
cwtl
cmovle
ret
or
sahf
mov
add
nop
dec
sti
mov
xor
inc
fisubrs
lods
call
xchg
and
shlb
por
inc
cmc
mov
pop
stos
adc
ds
xchg
movsl
fwait
rorb
adc
in
rcrl
mov
sub
nop
xor
fwait
lock
rcr
mov
flds
or
xor
mov
sbb
and
xor
mov
dec
push
inc
xor
cmp
push
je
mov
mov
int3
mov
mov
cmpsl
out
mov
test
mov
int3
xchg
mov
lcall
adc
or
int3
cmp
xchg
dec
movsb
jnp
jbe
pushf
inc
iret
cmp
xchg
push
or
adc
jecxz
lcall
adc
movsb
dec
or
popa
pushf
mov
xchg
inc
movsb
dec
psadbw
and
cmp
in
push
dec
movsb
jnp
testb
lcall
xchg
insb
adc
adc
stc
incl
aas
or
iret
cmp
xchg
dec
movsb
jnp
jbe
movsb
movsb
cmp
jbe
pushf
and
cmp
mov
decl
cltd
sahf
fwait
jns
inc
inc
xchg
lock
test
and
mov
test
push
push
cmp
xchg
dec
movsb
dec
or
faddl
out
push
cmp
push
lods
stos
push
dec
movsb
cmp
xchg
cmp
int
mov
je
aaa
inc
fcoml
int
call
insb
adcb
pop
mov
cli
incl
mov
aas
iret
cmp
push
dec
movsb
dec
cld
enter
xchg
dec
cmpsl
ds
clc
add
jnp
mov
cld
in
aaa
adc
jnp
testb
leave
cmp
xchg
dec
movsb
jnp
testb
iret
cmp
insl
into
cmp
pop
call
add
out
mov
movsl
push
pop
outsl
mov
ja
xacquire
mov
lret
scas
mov
jb
mov
jecxz
mov
jb
mov
pop
sti
scas
lret
movsb
mov
xchg
icebp
orl
pop
mov
bound
addl
cmpb
orl
pop
mov
mov
lods
addl
pop
add
mov
out
movsb
mov
out
push
inc
mulb
lods
addl
jnp
insb
clc
lods
xor
test
out
mov
add
sbb
es
push
rolb
enter
mov
mov
cmp
ret
and
cmpsl
ret
push
ret
sub
mov
mov
icebp
mov
xlat
loop
data16
add
dec
subl
cltd
sub
imul
push
sub
cmp
push
outsl
jb
popf
cltd
icebp
mov
fwait
movsb
cli
dec
inc
jmp
xor
xor
sub
repz
sbb
mov
adc
or
xchg
loop
mov
mov
mov
repz
xor
ljmp
iret
dec
fs
dec
jmp
add
addr16
lcall
adc
cmpsl
call
sti
mov
ret
sub
test
xor
out
push
aas
xchg
dec
loopne
sbb
sub
mov
cwtl
loopne
dec
mov
in
inc
negl
xchg
std
aaa
xchg
mov
dec
arpl
and
adc
out
cmp
sub
pop
mov
ret
xchg
pusha
jno
ss
dec
leave
imul
mov
xlat
or
outsl
pop
mov
sbb
outsb
xchg
pushl
idiv
sub
cmp
aas
fisubl
sub
sub
jb
mov
adc
pop
mov
push
test
mov
notb
es
repz
popa
dec
das
inc
cmpsb
jne
xchg
xor
dec
add
sub
mov
das
sbb
gs
push
sbb
inc
cmpxchg
fs
outsb
filds
add
loopne
aas
mov
lods
mov
mov
inc
mov
sub
lds
jmp
mov
adc
mov
les
out
mov
fwait
repz
jmp
add
std
push
scas
pop
add
add
push
leave
sub
mov
nop
or
mov
jmp
aad
mov
and
push
lods
lods
or
in
mov
out
add
es
in
mov
add
test
add
pop
stos
mov
push
add
add
xor
xchg
call
cmpb
add
add
xchg
xor
shl
add
repnz
fnstsw
out
xor
push
fwait
idivl
jae
push
jmp
stc
xchg
cmp
add
inc
mov
sbb
cwtl
mov
and
test
icebp
ljmp
ficompl
rclb
and
add
js
sahf
das
lahf
jg
adc
clc
xchg
inc
lods
dec
push
mov
add
imul
add
aad
push
lods
mov
loopne
jb
les
jmp
sar
leave
repz
test
mov
push
mov
sub
stos
add
lea
mov
adc
xor
adc
mov
scas
ss
loop
sub
neg
sbb
shll
repnz
arpl
mov
cwtl
xor
adc
inc
addl
lret
mov
cmc
into
mov
jne
push
call
stc
mov
imul
dec
ljmp
jmp
add
pop
hlt
inc
xchg
loop
mov
ss
iret
mov
mov
rorb
adcb
sbb
addl
lods
jae
xchg
mov
int3
add
cmp
or
xor
jge
add
mov
rorl
sbb
xor
xchg
loopne
pop
lahf
or
sub
mov
cmp
test
xor
jne
mov
movsb
mov
cmp
pop
push
dec
icebp
sub
add
lea
mov
and
rorb
mov
or
mov
mov
or
mov
add
jg
pushf
mov
sub
add
dec
iret
cmp
aad
inc
in
add
mov
add
mov
adc
sbbb
je
and
or
in
adc
mov
xor
lea
mov
mov
roll
sbb
jmp
stos
fists
sbb
outsl
adc
repnz
cmc
cmp
mov
xchg
dec
mov
add
push
dec
add
fwait
push
dec
jmp
pop
repz
fldl
sbb
dec
fdivs
movsb
mov
daa
mov
dec
idivl
add
loope
jmp
add
pop
push
push
xchg
cs
rcll
add
loope
loopne
addl
sbb
paddd
dec
add
cmp
std
add
stos
loopne
add
dec
mov
popf
pop
push
add
std
add
fcoms
and
outsl
push
movb
test
jle
push
and
imul
add
ret
mov
xor
push
sub
in
movsl
pop
into
jg
cmpsl
mov
mov
add
dec
or
and
or
shr
iret
dec
mov
fistpl
adc
loopne
mov
push
cmp
pop
add
and
lea
mov
fdivl
push
leave
and
sbb
sub
and
adc
pop
adc
and
outsl
dec
cmpsb
movsl
jnp
push
add
lods
mov
add
push
adc
add
es
icebp
lods
and
sub
pop
sub
sub
add
mov
cmp
insl
push
adc
add
add
add
sub
mov
inc
xchg
rorb
inc
dec
inc
mov
sub
call
xchg
cwtl
and
push
xchg
and
ss
push
mov
rolb
add
xor
mov
add
sbb
xor
and
pop
pop
fwait
push
cmp
aas
push
xor
sbb
fs
data16
jnp
xor
push
shll
xchg
insb
cwtl
push
sub
mov
dec
or
add
or
xchg
imul
sbb
mov
data16
dec
adc
cmpsb
out
in
push
inc
adc
dec
sub
aas
aad
xor
rclb
add
mov
dec
and
push
nop
jnp
push
mov
xchg
jo
dec
xchg
mov
rcrl
mov
jmp
add
jne,pn
dec
xor
mov
into
jo
inc
cmp
mov
jae
push
cli
adc
mov
xchg
cmp
adc
and
adc
add
xorl
std
xor
add
and
add
fldcw
sub
stos
xchg
push
ret
add
inc
movsb
xorl
mov
movsl
mov
and
in
mov
mov
add
adc
enter
pop
xor
dec
push
xchg
mov
sti
push
popf
xor
repnz
mov
xchg
mov
into
dec
mov
pop
outsb
mov
sbb
jl
or
mov
xchg
add
mov
pusha
push
xchg
inc
inc
sub
adc
add
hlt
lret
mov
cwtl
es
add
rcrb
add
add
dec
rcrl
mov
fmull
pushf
daa
mov
in
add
add
mov
clc
out
xor
mov
fwait
add
cmp
sldt
jae
cmpsl
mov
sub
add
inc
rclb
push
mov
cmp
jae
add
das
mov
xor
add
shlb
pop
cmpps
clc
rorl
xchg
out
mov
into
add
xlat
rclb
adc
dec
pusha
push
mov
push
sub
data16
xor
outsl
mov
test
cvttps2pi
cld
bound
inc
lcall
pop
jns
frstor
mov
ret
cmp
das
cs
dec
bound
test
add
pop
dec
add
fcomp
push
fwait
ret
push
mov
mov
fs
push
add
mov
rcll
xlat
add
sbb
mov
add
mov
dec
adc
call
dec
fsubs
sub
popf
mov
adc
jp
bound
pop
insl
js
aad
ljmp
mov
dec
sub
scas
cmc
dec
mov
mov
shl
aam
and
add
cwtl
cmpsb
ja
jo
xchg
mov
dec
pop
sbb
lret
arpl
rcll
add
and
fwait
add
inc
push
out
pop
and
jnp
into
cmc
xchg
push
and
inc
js
dec
inc
sbb
adc
push
clc
data16
xchg
jp
mov
add
mov
or
jmp
dec
push
add
pop
cmp
test
mov
sbb
or
mov
les
push
sahf
mov
pushf
mov
sbb
ds
rcl
add
and
sbb
push
jmp
fildl
jbe
cmp
jne
mov
mov
adc
fistl
in
mov
push
sbb
xor
add
iret
cmp
mov
add
push
xor
rolb
mov
out
push
add
cs
mov
jnp
push
mov
into
imul
add
icebp
and
add
and
cs
into
mov
ret
lods
mov
orb
into
mov
push
je
adc
mov
cmp
mov
ficoml
scas
loope
add
out
mov
lds
dec
xchg
or
mov
cmp
pop
add
xchg
cli
sbb
inc
imulb
inc
scas
sub
sbb
call
cmp
xor
mov
aas
pop
ret
or
lock
dec
movsl
jg
xchg
in
bound
jb
mov
mov
int3
and
scas
cs
flds
sub
pop
push
mov
not
or
je
pop
xchg
sbb
add
xchg
icebp
aam
mov
add
sbb
push
iret
dec
popf
shrl
adc
fsubr
inc
das
add
sub
lea
sbb
cmp
mov
aaa
mov
mov
xor
shlb
lea
sub
cmp
movlps
or
cmpsb
mov
xchg
inc
imul
add
push
sbb
mov
mov
sbb
loopne
add
adc
mov
lods
adcb
fistps
mov
bnd
ljmp
popf
sbb
add
movsb
shlb
fwait
jnp
jmp
push
inc
push
lods
sbb
inc
xor
out
fcoml
sub
mov
push
mov
xchg
pop
mov
mov
xor
arpl
pusha
sub
xor
popf
mov
jbe
movsb
shrl
lcall
xchg
add
stos
in
mov
repnz
inc
jmp
add
or
sub
pop
inc
pop
add
or
enter
add
add
aas
inc
movsb
add
push
cmp
mov
jecxz
mov
xchg
dec
mov
dec
mov
icebp
dec
adc
rcl
call
subl
into
add
clc
mov
cmpsl
add
add
push
mov
and
mov
pop
jmp
dec
testl
sub
pushf
push
xchg
je
mov
les
fwait
pop
mov
inc
xlat
mov
dec
add
inc
fistpl
push
mov
xor
jp
outsl
or
pushl
dec
jae
mov
add
in
jae
sti
es
add
rcr
sub
test
repnz
push
push
dec
push
add
stc
add
jl
xchg
cmpsl
leave
mov
mov
lea
sub
add
jmp
add
pop
add
mov
fdecstp
xchg
stos
shrb
popf
jae
jg
sub
add
xlat
pop
gs
sti
jbe
lea
into
sub
adc
dec
sub
outsb
enter
mov
xor
popf
clc
imul
lock
pop
jnp
jno
cmpsl
insb
ja
rcll
rolb
inc
cmp
add
adc
push
push
loope
mov
mov
or
xor
jae
fstps
inc
lds
mov
ror
arpl
add
jecxz
and
mov
mov
xor
lock
mov
dec
add
in
mov
cmp
mov
or
mov
xor
dec
jb
call
std
lds
dec
pop
push
pop
pushf
and
das
pop
stos
imul
lock
and
jae
ret
jp
dec
pop
mov
sbb
xchg
mov
push
mov
mov
xor
lods
push
loop
pop
mov
outsb
xchg
mov
jecxz
scas
in
ss
nop
mov
mov
xor
aad
cmpsl
idivl
outsb
mov
adc
cmc
mov
movsb
iret
mov
add
mov
addl
out
ret
mov
repnz
cmp
pop
mov
and
add
mov
subl
dec
adc
xlat
push
add
xor
div
outsl
add
adc
mov
lock
add
inc
repnz
push
mov
dec
lret
jne
mov
lods
cmp
mov
rdpmc
loope
outsl
adc
dec
and
scas
xchg
inc
adc
repz
adc
bound
mov
in
inc
cmp
movsb
sbb
addb
mov
add
jno
lods
ja
add
add
subl
xchg
clc
sahf
insl
scas
je
jmp
aas
add
stos
fldcw
sub
sub
insl
in
inc
and
xor
mov
mov
jg
enter
cmpl
mov
je
xor
imul
pxor
xorl
jl
add
or
jbe
lahf
imul
add
in
ret
cmp
popf
mov
lret
sub
mov
push
add
add
test
inc
mov
sub
rcrb
rol
add
sub
mov
inc
push
repz
mov
movb
cld
xchg
ja
mov
pusha
lods
mov
stc
icebp
mov
mov
push
aaa
mov
call
jecxz
jmp
or
add
adc
mov
xchg
add
pop
ret
stos
inc
cli
mov
pusha
xor
jle
out
jmp
mov
pop
push
mov
jae
sub
dec
xchg
and
pop
movsb
jl
loopne
jmp
repnz
mov
in
call
xchg
mov
push
rorb
xchg
clc
sub
jbe
add
push
shlb
mov
ret
addr16
shr
add
mov
jae
dec
xchg
or
add
add
push
jne
daa
add
mov
push
add
rcl
movb
orb
sbb
cli
and
lahf
or
rorl
push
mov
push
test
incb
sbb
add
mov
fwait
add
mov
pop
mov
dec
push
repz
adc
cmp
cltd
inc
mov
fwait
testl
imul
out
int
mov
orl
aas
sbb
mov
imul
inc
dec
mov
mov
adc
xor
sbb
and
inc
add
into
mov
shl
loop
insb
push
xor
in
adc
ljmp
mov
jns
inc
add
out
xor
xchg
popf
pop
add
rorb
or
lret
push
xor
jmp
or
cli
add
imul
jne
and
mov
push
push
push
push
mov
add
idiv
pop
scas
std
movsl
pop
outsl
mov
mov
push
xchg
mov
lcall
sub
pop
dec
popf
ffreep
aam
aam
sub
fcomps
lret
pop
pop
sbbl
ret
push
cltd
xchg
xor
pop
mov
push
inc
push
push
push
add
enter
fisttps
pop
pop
add
push
in
mov
xor
call
jmp
sub
sub
mov
add
jae
cwtl
pop
jmp
mov
js
mov
push
push
imul
popa
stc
mov
ret
cmp
lods
xor
mov
cmc
dec
inc
xchg
je
ror
mov
shll
inc
push
testb
jmp
and
jnp
xchg
add
jne
imul
xor
add
and
ljmp
mov
cs
add
lea
xor
test
sub
push
or
test
xor
add
movsb
sbb
pop
pusha
cmp
push
jge
dec
xchg
pop
cwtl
lret
mov
rcr
xorb
in
lea
xor
dec
sbb
fcom
jo
mov
xchg
inc
sub
pop
cmpsl
test
add
add
cmp
cmc
xchg
mov
out
sub
add
sbb
call
or
lahf
inc
add
incl
xor
hlt
add
decb
mov
sti
jle
jecxz
je
xchg
sub
dec
addl
shrb
sbb
cmp
jmp
shr
test
jbe
mov
lds
xchg
add
into
push
inc
push
std
xchg
add
arpl
mov
push
mov
push
add
pop
push
cmpsb
dec
ljmp
pop
and
xor
xchg
sbb
or
scas
add
sti
test
push
mov
xor
sbb
dec
sbb
int3
inc
mov
in
ret
das
xchg
leave
inc
jo
mov
pop
xor
test
add
shll
fninit
or
mov
mov
clc
cmp
mov
rcrb
rcll
cmp
test
add
cmpb
pusha
sub
add
imul
out
sbb
or
xchg
sub
sub
je
cmp
add
mov
mov
jbe
xor
pop
or
jno
push
jmp
mov
sbb
inc
xchg
xor
lods
inc
popf
out
es
and
call
cs
stos
std
add
xchg
xchg
xor
pop
shll
sub
sbb
add
xor
out
inc
dec
popf
lock
dec
push
mov
xor
ss
sbb
mov
stos
stc
sbb
push
repz
sarb
jl
mov
push
fcmovnu
in
sbb
cld
inc
add
mov
cmp
mov
xor
mov
push
pushl
mov
xchg
sahf
mov
rcll
add
mov
lea
jo
inc
adc
jno
inc
add
mov
inc
fimull
sbb
inc
ret
lods
mov
out
mov
push
inc
xchg
add
add
shll
mov
push
fiadds
fs
push
psubd
imul
push
pop
sbb
add
sahf
mov
cmp
test
mov
add
mov
nop
and
cwtl
das
pusha
mov
test
mov
fs
sub
push
mov
push
xorb
jg
insl
stos
cs
sbb
gs
add
push
add
je
fcoms
out
sbb
sbb
sahf
cmp
cmpsl
mov
xor
shll
add
cmpsl
inc
add
rcrl
std
sub
push
mov
ret
dec
outsl
sub
fdivs
xor
add
cmp
dec
jae
fcompl
mov
and
out
scas
jno
aaa
xor
jb
lahf
outsl
in
shrb
xchg
pop
imul
or
add
mov
add
add
mov
clc
cmpl
and
jnp
pushl
sub
rorl
sub
push
fcompl
sti
stos
mov
iret
mov
and
mov
enter
add
sbb
pop
add
mov
fmuls
dec
scas
mov
mov
and
inc
jbe
push
sbb
repz
shl
in
shl
sbbl
cmp
cmc
mov
or
scas
sbb
add
add
add
cld
mov
jne
mov
adc
add
pop
xchg
push
movsb
addb
sub
mov
jns
test
scas
fwait
add
sarb
mov
dec
add
dec
cwtl
inc
xor
insl
roll
mov
andl
mov
push
ficompl
sub
pusha
add
arpl
mull
std
cmpsl
mov
inc
jae
push
das
cmp
out
dec
mov
repz
cmp
addb
add
and
out
lods
add
or
mov
loopne
fs
mov
jg
dec
add
inc
add
pop
jns
cmp
and
add
lcall
cltd
dec
adc
lea
inc
hlt
sbb
subl
in
stos
stos
mov
jbe
add
rcll
fldenv
pop
cli
add
and
jecxz
add
jae
xor
bound
pop
aas
sub
mov
jg
mov
out
dec
fadd
fwait
enter
iret
das
dec
mov
out
cltd
test
mov
and
loop
sub
lret
insb
shlb
cmp
ljmp
insl
lds
add
push
mov
mov
in
pop
ja
adc
dec
jecxz
js
push
ret
add
test
popf
pushl
add
push
adcl
movsb
and
outsb
cld
addb
jne
push
add
jbe
loope
lods
pop
jae
jmp
scas
cmp
mov
in
sub
leave
add
lds
pop
mov
mov
imul
inc
dec
lret
ds
inc
add
pop
mov
cmp
jb
in
pop
movsl
pop
mov
jbe
or
mov
imul
mov
out
pusha
xchg
shll
arpl
cmp
sub
sub
popf
mov
fwait
mov
rorl
sbb
xchg
jnp
cwtl
mov
leave
or
add
push
xlat
add
jae
push
or
push
add
lds
push
addl
imul
add
fldl
mov
mov
inc
and
aas
mov
add
lret
pop
mov
cld
fiaddl
bnd
mov
dec
add
ret
out
insl
mov
dec
xchg
xor
ret
xor
or
dec
add
cmp
jno
rcrb
pop
sbb
cmpl
add
mov
jne
jecxz
inc
test
pop
sbb
add
xor
mov
xchg
out
and
add
in
jp
pop
xchg
pop
mov
add
jae
sub
add
imul
or
aaa
add
sbb
lret
cwtl
ret
jge
clc
xchg
xor
sub
and
dec
icebp
fcmovnu
testb
sub
js
test
sbb
insl
mov
sbb
inc
pop
fdivs
push
outsl
cmp
jnp
sbb
popl
jae
xchg
stc
jmp
lea
add
jg
mov
and
inc
add
pop
pop
outsl
sbb
popf
ret
repnz
cmp
sub
orb
xor
loope
shl
add
adc
pop
pop
dec
imul
je
imul
mov
stc
dec
ret
sti
je
dec
push
lods
mov
push
fwait
cmpb
xor
dec
add
imul
in
add
sub
inc
add
mov
cmp
fsubrs
aam
into
ja
add
scas
add
je
lods
dec
mov
shr
pop
ret
enter
adc
xorl
add
ja
outsb
push
sbb
dec
cmp
testb
jo
xchg
mov
lret
xor
jnp
cs
add
cmpsb
sti
mov
call
ror
int
lea
das
repz
fs
mov
or
xchg
sahf
ss
out
or
lods
psllq
icebp
ret
sbb
add
and
dec
mov
mov
push
out
incb
and
sub
inc
adc
je
mov
out
popl
jne
lcall
popf
sti
push
xor
sub
dec
mov
inc
mov
ret
rcrl
cld
imul
std
fnclex
je
scas
mov
leave
popf
jb
out
ret
sbb
push
add
shl
lock
clc
push
mov
adc
mov
mov
push
test
outsl
push
lock
add
std
sub
mov
xor
add
and
dec
es
in
add
xorl
int3
addr16
or
or
xlat
xchg
dec
mov
sub
mov
stc
mov
dec
lea
add
enter
incl
jae
jge
movsl
notl
xor
pop
rcrl
mov
ljmp
or
sub
lds
add
adc
lods
lcall
fstl
jle
test
decb
repz
add
pop
bound
dec
add
sti
add
pop
int
add
cli
add
mov
sbb
loopne
add
rorb
enter
adc
xchg
mov
pop
or
mov
js
sbb
lcall
clc
jbe
movsb
es
testl
arpl
ljmp
add
insl
add
add
add
add
dec
add
add
pop
je
add
add
push
add
jno
add
jp
add
add
add
add
add
add
add
add
jae
add
jae
add
add
add
insl
pop
add
outsl
add
inc
imul
add
add
pop
add
add
add
add
add
add
add
add
data16
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
jp
jb
add
add
add
add
add
imul
add
add
add
add
add
xor
add
add
add
add
add
jno
add
add
add
add
add
dec
add
push
push
outsb
add
add
add
inc
add
dec
add
add
pop
add
add
dec
add
add
add
add
add
add
inc
push
add
cmp
aaa
inc
add
add
add
add
add
xor
add
push
jno
add
add
add
add
add
add
add
add
add
arpl
add
add
add
add
add
add
push
add
add
add
add
add
add
add
jae
dec
add
xor
add
outsl
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
insl
jne
add
add
add
add
add
add
add
dec
xor
add
je
add
add
insl
add
add
add
mov
stos
mov
das
mov
pop
mov
inc
ss
lods
out
xorb
pop
js
out
dec
cmpsl
mov
mov
push
mov
adc
cmpsl
mov
stos
mov
repz
xchg
mov
mov
mov
js,pt
mov
stc
adc
xchg
sbb
je,pn
gs
xor
and
cmc
and
fs
je
mov
sub
mov
inc
mov
and
jo
cwtl
dec
fwait
push
rclb
jae
arpl
jns
push
jecxz
push
call
jmp
mov
mov
rclb
test
jno
add
rcrb
xor
xchg
int3
cltd
mov
xchg
aam
lock
fsubrs
and
xlat
push
sub
cmp
mov
clc
andl
les
divl
or
cmp
rolb
jl
icebp
adc
inc
mov
sbb
push
aaa
lock
jnp
xlat
and
pop
mov
lock
push
mov
xorl
lock
cmp
lods
jnp
testl
inc
cmp
sarb
cmp
pop
sti
cltd
dec
add
dec
pop
ljmp
push
nop
int3
sti
loopne
aas
mov
add
mov
repnz
mulb
stos
fsub
cmc
loopne
mov
mov
add
inc
and
mov
cmpsl
mov
inc
hlt
jns
pop
subl
int3
ret
xor
mov
test
mov
sbb
inc
incl
pop
pop
incb
or
push
call
mov
xchg
xchg
mov
cmpsl
lock
and
stos
cld
aaa
push
jb
add
cmpsl
xchg
and
lock
cld
inc
nop
std
cs
add
jb
add
mov
or
mov
xchg
mov
lods
das
ret
or
ds
insl
fwait
or
xor
adc
and
cmp
and
cmp
iret
cmp
and
and
jnp
ja
xchg
push
mov
mov
lods
cmp
dec
mov
mov
ja
xchg
pusha
mov
adc
pop
inc
nop
mov
pusha
movsl
lock
push
jo
je
lock
imull
jo
je
xlat
js
jl
cmpb
xchg
fsubrl
jl
mov
ljmp
sub
xor
adc
cmp
cmp
or
xor
xor
xlat
cmp
cmp
addr16
inc
movsl
icebp
mov
cmp
mov
sahf
push
movsl
icebp
inc
inc
add
iret
cmp
mov
jp
mov
shlb
or
and
psrlq
adc
enter
jne
cmpsw
cmp
add
mov
adc
stos
test
rolb
mov
mov
or
shlb
and
mov
add
orl
cmp
lock
jbe
loopne
repnz
xchg
mov
stos
cmpsl
movb
xor
pop
je
stos
cmp
imul
sbb
adc
mov
xchg
dec
mov
je
loop
mov
lock
add
xchg
sarb
mov
pop
rol
movsb
pop
or
mov
mov
leave
cmp
mov
mov
frstor
and
or
daa
iret
xchg
mov
pop
push
cld
sahf
mov
loope
mov
aad
cmc
sub
fwait
cmpl
adc
xchg
sti
inc
and
lcall
enter
xchg
out
vmovddup
or
out
push
pop
andb
jne
mov
cwtl
push
mov
movsl
xchg
cmc
aaa
outsl
repz
cmpsl
add
xorl
xor
cmp
xchg
rcrl
idivl
adc
fwait
sbb
pop
mov
subb
mov
lods
mov
xor
mov
xchg
xlat
mov
pop
cmp
mov
cmpsl
daa
lods
nop
mov
sub
mov
add
xchg
mov
arpl
push
mov
jmp
pop
xor
in
pushf
mov
adc
mov
mov
adc
mov
lods
sub
push
sbb
movsl
sarb
sbb
nop
sbb
not
jb
and
arpl
and
dec
mov
fdiv
fs
mov
call
in
sub
mulb
icebp
push
mov
jae
push
sbb
xchg
and
push
push
push
call
dec
xchg
and
pusha
add
mov
mov
enter
push
shll
jae
mov
call
les
cmp
rcll
mov
psubd
mov
ffreep
sbb
icebp
add
call
or
add
cmp
aad
inc
adc
mull
push
mov
scas
mov
out
jge
jnp
js
filds
mov
mov
leave
test
neg
push
push
decl
sbb
add
sub
mov
testb
mov
sbb
xorb
fwait
mov
xchg
mov
xchg
scas
call
jle
orl
outsb
or
mov
push
add
cmpsb
call
xchg
subl
push
push
sub
inc
bound
out
ss
jecxz
jno
sub
xor
jne
mov
mov
add
push
mov
icebp
mov
add
xchg
push
cmpsb
sub
mov
jnp
sbb
es
mov
mov
push
ds
jmp
xchg
push
scas
xor
push
loop
or
div
or
cli
cmp
xchg
cmpl
mov
call
in
jg
xchg
cmp
call
xchg
mov
xchg
pop
add
cmpsl
xchg
and
sub
out
xor
jns
add
and
mov
mov
push
push
push
push
xor
je
sbb
call
jno
mov
push
nop
jp
add
pusha
mov
lods
push
or
bound
rorl
shl
mov
or
leave
jne
inc
imul
xchg
mov
scas
xchg
cmc
lds
adc
gs
dec
xor
pushl
mov
dec
adc
adc
cmpsb
mov
mov
mov
ljmp
pushl
mov
dec
cli
xchg
ret
jb
lahf
mov
stc
int
sub
std
aas
mov
or
jae
cltd
call
mov
push
jbe
mov
rcrb
pop
pop
enter
jp
jb
mov
mov
addr16
xchg
lea
repnz
outsb
add
nop
adcl
pop
mulb
sub
mov
mov
imul
xor
mov
adc
fcmovne
xchg
divl
stos
pop
mov
sub
jmp
sbb
daa
clc
loop
ret
cmpsl
mov
jecxz
inc
mov
cli
mov
cmc
movsb
jno
call
adc
push
aaa
popf
popf
insb
jno
mov
ret
cmpsl
push
and
aaa
jmp
xchg
pushf
idivl
push
sub
pop
lock
enter
xchg
xor
out
divl
andb
or
mov
jl
orb
mov
je
jae
pop
pop
mov
push
mov
push
mov
mov
and
xor
push
xor
imul
mov
repz
sub
es
cli
fsubl
cmpsl
mov
insb
divb
pop
pushf
xchg
movsb
and
mov
rcrb
loopne
mov
movsb
call
iret
testb
and
mov
mov
orl
push
and
jmp
cmp
add
sbb
mov
ljmp
fwait
addr16
push
fwait
mov
call
lods
cld
call
int3
sub
mov
repnz
aam
cmpsl
repnz
or
mov
repz
shl
sub
dec
push
push
cmpsl
lea
pop
mov
lahf
cld
adc
cli
xor
in
push
fmuls
jmp
outsb
add
pop
mov
sbb
inc
and
or
or
xchg
iret
mov
fstl
and
cmp
pop
xor
pop
div
push
lret
fnsetpm(287
sbb
mov
adc
sub
push
xchg
jmp
sbb
or
xor
shr
rep
inc
lret
loope
sbb
movb
hlt
sbb
mov
in
fiadds
cmp
cli
xlat
fidivrl
hlt
xchg
insl
xchg
mov
mov
cmpb
sti
mov
jne
and
out
fisttps
daa
and
inc
jnp
jns
cmpsb
add
cmpsb
mov
mov
testl
enter
cmc
int3
xchg
lock
mov
add
lea
scas
inc
mov
sub
mov
cli
repnz
jmp
in
inc
mov
cmp
movb
add
add
mov
xor
daa
jae
test
or
aam
mov
test
mov
mov
pusha
addl
in
mov
inc
shrl
loopne
leave
or
mov
xchg
xchg
mov
clc
mov
or
fwait
outsb
lds
enter
and
inc
add
pop
cmp
mov
sub
jg
mov
rcrb
aaa
call
push
and
sbb
mov
xor
xchg
mov
shl
rolb
mov
hlt
lea
mov
ret
popf
xchg
or
mov
pop
inc
lock
add
icebp
push
and
xchg
subl
add
roll
lock
cld
repnz
mov
int3
mov
test
repz
mov
movb
out
add
ljmp
gs
jne
idiv
out
jge
call
leave
and
adc
and
pop
jmp
push
mov
in
pop
mov
shl
lcall
xlat
jg
dec
lahf
mov
pusha
sub
call
sub
mov
call
mov
test
rorb
and
add
xchg
inc
push
lds
and
mov
leave
cmp
mov
movsb
jne
sti
out
xor
call
clc
negl
out
jnp
test
push
jp
adc
arpl
rcll
repz
hlt
lods
mov
mov
mov
sbb
mov
add
push
mov
mov
les
push
pop
add
mov
ja
gs
sahf
call
mov
movsb
pop
int
sub
clc
cmpsl
sub
idivb
shll
xor
lcall
mov
lock
cmp
mov
xchg
mov
jg
movsb
pop
push
push
xor
jp
pop
xchg
xchg
dec
pop
and
fcomip
xor
xchg
mov
adc
adc
and
mov
neg
addl
jne
inc
xor
inc
paddd
dec
jecxz
fucomip
mov
lea
jle
xor
mov
lret
adcb
insb
cmc
sub
clc
cltd
xor
sti
test
mov
out
jno
lcall
mov
xchg
push
cmpsl
gs
jae
notb
mov
mov
pop
add
add
cmp
test
sbb
mov
das
jb
mov
add
in
or
daa
std
xchg
decl
lahf
sbb
sbbb
divb
in
fnsave
notb
popf
push
icebp
fsubr
aad
out
cmp
divb
jbe
sub
shr
leave
mov
xchg
dec
out
mov
push
inc
popa
movsl
mov
lahf
cs
and
or
movsb
cmp
mov
enter
mov
pushf
add
fsts
mov
xor
mov
push
pop
decl
negl
jae
std
jae
lock
mov
xchg
aas
xchg
sbb
cmpsb
das
pop
lea
jg
and
add
sbb
adc
pop
andl
in
mov
out
xchg
mov
data16
add
mov
add
ljmp
push
inc
inc
xchg
mov
mov
fcoms
jne
push
cli
lock
xchg
sub
movsb
sbb
in
aad
jb
imul
fnsave
adc
lds
ja
and
mov
bswap
xchg
xchg
add
xor
cmp
sub
xor
push
int3
lods
lea
loope
xor
repz
movsbl
push
shlb
jmp
out
cltd
rcll
and
or
xor
jmp
mov
or
cmp
xor
jp
ljmp
lahf
xchg
push
cmp
insl
xchg
xlat
jnp
add
xchg
mov
xor
or
or
cmp
lods
aaa
mov
mov
xor
mov
push
sahf
cwtl
call
adc
xchg
add
clc
and
mov
add
xchg
mov
xchg
xor
imul
ljmp
in
call
cmp
scas
add
cmp
mov
inc
icebp
jb
jns
mov
imul
shlb
mov
add
cmp
jne
adc
popf
data16
mov
sub
fidivrl
pop
xchg
movsl
shrb
out
es
xchg
lret
adc
mov
out
or
rorl
mov
ljmp
mov
sub
pusha
in
or
xchg
repz
int
call
aaa
pop
and
arpl
push
xor
mov
pop
add
call
cmp
mov
fisttps
sbb
adc
dec
or
cmp
rorb
cmp
jae
mov
call
mov
fwait
lock
cli
leave
das
and
xchg
inc
ljmp
enter
lock
mov
sub
rcrb
xchg
scas
dec
inc
call
pop
or
cli
jecxz
leave
out
mov
push
stos
and
int3
jo
fs
xchg
ljmp
out
mov
mov
fs
and
int3
xor
stc
ljmp
mov
push
call
gs
repz
and
add
push
cmp
nop
jge
push
and
jmp
movsl
xchg
pop
icebp
mov
add
dec
xchg
inc
orl
out
push
mov
sub
ja
push
push
stos
xlat
and
and
enter
clc
xor
inc
and
xor
ret
xchg
ret
ss
mov
in
loopne
push
popa
bound
adcb
popl
ds
mov
and
cli
lock
mov
je
fs
push
xchg
negb
movsl
in
movsl
add
rorb
aad
xor
mov
je
adc
xlat
movsb
sbb
mov
mov
mov
xor
push
stos
sub
add
aad
mov
add
iret
out
jb
mov
call
xor
pop
iret
adc
xchg
ret
sti
cmp
lret
repnz
ret
sti
push
inc
hlt
pop
cld
sahf
xlat
stc
scas
jnp
arpl
xchg
mov
push
je
mov
xchg
cli
dec
scas
cmp
sbb
and
scas
push
das
lret
and
push
stos
ret
or
jge
scas
or
nop
mov
add
add
inc
mov
add
xor
call
xchg
lcall
mov
pop
pop
rorl
fildl
out
pop
cmpsb
idiv
mov
loopne
inc
push
lahf
scas
inc
mulb
sahf
xor
push
mov
mov
sub
xor
mov
lret
xchg
add
lods
and
mov
ljmp
mov
sub
mov
call
xchg
test
stos
or
mov
pop
mov
test
sub
je
call
lock
push
test
in
cwtl
add
rcl
xorl
push
lods
adc
cmp
loopne
mov
in
std
push
scas
hlt
lock
push
or
fidivl
sbb
jge
pusha
xor
xchg
mov
dec
or
cmp
adc
das
or
inc
fsubrl
mov
stc
xlat
mov
mov
or
lock
jno
lock
dec
mov
xchg
ljmp
sbb
push
clc
lret
and
insl
cmp
loop
sub
xchg
es
call
fcomps
sbb
cmp
inc
inc
pop
xchg
add
mov
cmc
xor
mov
testl
mov
push
out
mov
inc
cmp
cmp
ret
sti
push
hlt
fiadds
jno
imul
test
leave
push
xchg
mov
aaa
mov
xchg
cwtl
push
dec
loopne
inc
out
lods
pushf
mov
xorb
adc
cmp
push
xchg
push
xchg
mov
or
repnz
inc
mov
std
arpl
add
lret
out
sub
mov
sub
pop
xor
or
xor
decb
stc
mov
add
add
fisubrl
lods
mov
mov
and
popf
and
mov
dec
test
or
loopne
into
lcall
ss
enter
imull
jae
hlt
lea
jns
and
pushl
mov
pop
jp
movsb
fadds
mov
xchg
ret
movsl
shrl
shr
rcr
add
vpslld
insl
loope
dec
pusha
sub
cmc
push
ja
add
cmpsb
mov
nop
and
adc
mull
out
mov
aaa
pop
xchg
xchg
je
mov
fisubl
lcall
mov
js
ret
adcl
outsb
mov
loope
add
add
mov
mov
lods
adc
cld
mov
mov
in
mov
ret
fbstp
icebp
or
js
mov
outsb
sub
add
mov
jge
add
mov
sub
test
mov
jmp
popf
test
mov
sbb
fst
jecxz
cmc
sahf
testl
popf
inc
in
mov
cmp
and
xor
hlt
jne
fstpl
adcb
push
ja
adc
pop
aas
sbb
xchg
pushf
add
lea
add
add
add
in
cmp
xchg
cmp
pop
xor
and
cli
push
mov
lods
call
sbb
rclb
mov
cmp
or
xlat
sub
cmp
bound
shll
add
xchg
add
add
in
fsubp
loopne
pop
push
rorl
pop
mov
pop
jmp
xchg
cmc
push
xlat
xchg
sub
shl
loop
push
lock
pushw
dec
repnz
jne
sbb
inc
dec
and
roll
ret
call
stos
sbb
cmp
aad
cld
xchg
in
mov
add
dec
cmp
pop
dec
jnp
lds
gs
mov
push
popa
popf
lahf
sub
scas
fimull
mov
enter
shl
jle
mov
imul
ja
lods
mov
xor
mov
push
sub
push
cmpsb
lret
xchg
mov
orl
adc
ja
and
dec
add
push
or
rolb
in
pop
mov
inc
fnstcw
in
mov
clc
sti
mov
xor
push
xchg
mov
dec
fcmovbe
xor
call
sbb
mov
cmp
cmp
sub
notb
and
std
jmp
and
or
aam
adc
cmp
sbb
jecxz
ret
adc
rol
pop
div
mov
scas
jg
cmp
ret
int
fcoml
add
jo
ret
sahf
dec
hlt
xchg
mov
dec
shll
ds
cwtl
mov
inc
fnstsw
mov
repnz
adcb
ja
adc
or
lock
adc
cmpsl
cli
fs
ja
cmp
mov
xor
test
jp
xchg
pop
mov
and
dec
xor
inc
xlat
scas
xchg
divl
mov
cmp
stos
sub
mov
or
in
repnz
mov
insl
rorb
test
test
pop
push
ss
loope
test
cltd
adc
outsl
or
inc
inc
cmp
mov
mov
shll
pop
out
push
mov
test
shlb
inc
cmp
dec
xchg
push
mov
mov
sub
adc
stos
cmp
repz
paddusb
cmc
sahf
cwtl
pop
out
mov
rcll
sub
call
fsts
std
sub
ret
mul
aas
insb
sub
mov
scas
ss
insl
adc
lea
add
and
sub
push
sbb
cmp
pop
cld
xchg
test
dec
mov
scas
xor
out
pop
sbb
mov
cmp
pop
call
lcall
xchg
mov
mov
popf
outsb
cmp
mov
adc
dec
loop
sub
sub
shll
hlt
cmpsl
mov
mov
xor
es
mov
pop
out
test
cmpl
dec
out
mov
sar
incb
jnp
mov
mov
lds
cmp
pop
pop
leave
mov
enter
arpl
mov
repz
add
ret
pushf
jl
xchg
push
push
pop
mov
in
push
push
mov
push
and
ret
cmpsb
mov
test
mov
icebp
sbb
xor
sub
or
mov
pusha
sbb
xchg
pop
add
and
xchg
callw
notb
or
mov
lds
mov
cmpsb
mov
lret
push
mov
jno
clc
mov
and
and
arpl
fwait
shll
leave
mov
cs
pop
mov
or
mov
add
shll
orl
mov
or
fidivrl
lea
push
mov
xorl
shrb
add
outsl
xchg
subl
push
add
mov
inc
mov
shrb
add
sbb
inc
jmp
mov
rcl
cmpl
movsb
and
adcl
and
jnp
xlat
cmp
inc
stos
dec
mov
push
xor
and
xlat
push
mov
xchg
jl
xorb
mov
jg
std
mov
mov
pop
stos
lahf
or
mov
ret
nop
dec
lret
sub
rcrb
dec
ret
int3
mov
push
cmp
adc
sub
test
add
inc
test
test
jno
jo
aad
dec
sbb
out
mov
and
pop
and
pop
or
jmp
add
add
dec
jmp
add
insl
sti
jg
mov
mov
je
inc
add
sbb
mov
sub
std
add
or
mov
dec
lds
repz
repnz
add
sub
dec
mov
mov
xchg
jno
leave
mov
bound
add
lahf
jge
cmpsb
jae
jno
push
aam
add
pop
aas
adc
xor
inc
cld
inc
adc
test
jmp
lock
adcl
or
add
mov
push
movl
mov
bswap
testl
clc
lods
sbb
cmp
dec
scas
lea
add
negl
add
adc
fxch
adc
repnz
cmp
inc
mov
mov
xchg
inc
add
pop
call
mov
mov
jae
jp
out
add
xor
and
es
sub
cmpsl
adc
xchg
add
mov
test
xor
mov
add
or
xchg
push
jl
aam
cltd
xchg
mov
jne
shlb
inc
add
mov
or
sbb
inc
cmp
rcll
lds
insl
mov
cwtl
or
test
inc
add
push
in
mov
repnz
sbb
ja
cli
xchg
add
pop
stc
pusha
lods
pop
divl
mov
mov
ror
pop
test
cmp
xorb
xchg
insl
pop
repz
andb
fldcw
fsubs
inc
mov
les
inc
xchg
cwtl
repz
icebp
mov
iret
mov
xor
es
pop
sbb
aaa
add
cmp
and
xor
sar
add
repz
sbb
mov
jl
mov
push
xchg
mov
xor
sub
mov
push
and
roll
mov
push
repnz
sbb
adc
mov
scas
sbb
or
loope
jecxz
pushf
popl
jmp
pop
cs
lods
dec
mov
cmp
mov
add
clc
fdivr
loopne
iret
sub
mov
sarl
add
xor
addl
mov
xchg
aad
push
inc
in
shll
cmp
sti
ss
lcall
negl
push
jecxz
adc
out
rorl
add
or
movsl
inc
int
jae
pop
daa
dec
or
mov
cs
ljmp
push
pop
add
and
add
test
les
dec
mov
push
jp
shll
mov
mov
rol
fimuls
ljmp
sbb
fidivl
mov
xor
cltd
imul
adc
popf
movsl
add
push
and
jmp
mov
jg
jge
jae
dec
jno
ja
adc
mov
xor
add
cmpl
add
and
fwait
js
lods
out
and
add
cmp
pop
popa
inc
add
mov
test
mov
out
adcb
add
mov
sub
pop
lahf
inc
adc
add
mov
repnz
jmp
add
mov
rclb
pop
les
add
push
dec
and
push
stos
sbb
jge
sbb
ror
mov
stc
push
pop
inc
mov
and
cmp
jae
gs
xchg
insb
nop
xor
out
ret
dec
sar
rorl
out
ret
push
add
add
pop
push
into
inc
dec
mov
add
inc
roll
fldl2e
mov
loope
sub
jnp
jge
mov
loop
and
stc
mov
mov
sbb
mov
push
movl
mov
ljmp
clc
cltd
jns
push
mov
fstl
dec
jae
outsl
pop
popf
sti
lahf
lcall
ror
mov
sub
sti
leave
jno
ja
sbb
xor
fistl
stos
push
je
cli
jnp
add
bswap
lahf
stos
mov
lret
jl
sarl
or
inc
clc
cmpsl
nop
pop
cmpsb
js
gs
or
adc
icebp
jp
inc
int3
push
andl
lds
dec
mov
pop
in
mov
data16
movsb
popa
insb
xchg
mov
insb
fwait
or
lret
sub
xchg
testl
inc
aas
out
outsb
mov
adc
in
xlat
outsl
xchg
dec
xor
push
mov
mov
push
cmp
push
test
jno
inc
xor
pushf
loopnew
fs
repz
jp
push
and
pop
xchg
inc
cli
jae
push
fnsave
adc
movsl
imul
or
cmpsl
jp
dec
jne
xor
cmp
lods
fnstsw
inc
test
inc
push
mov
xor
dec
inc
sub
sahf
out
jo
in
adc
adc
cwtl
push
int3
js
inc
incb
push
fdivs
push
xchg
shll
test
cmp
cmpsl
outsb
mov
push
inc
pushf
cmp
in
ljmp
test
sub
pop
insl
sub
pop
test
lcall
xchg
jbe
out
adc
cmpsb
xor
aam
mov
fbld
out
dec
int3
or
testb
inc
xor
push
cmp
xchg
popa
je
popa
call
je
pop
mov
sub
push
mov
mov
inc
addb
aam
mov
cmp
and
push
dec
cltd
pop
mov
sub
mov
inc
xchg
insl
xchg
or
test
mov
add
out
shr
inc
in
shl
add
xor
jge
jae
jno
pop
inc
push
xor
or
ret
fisubrl
rcrb
xor
xchg
dec
sbb
enter
cwtl
cmp
dec
loope
xchg
in
pushf
clc
roll
mov
ds
mov
test
ljmp
call
add
push
orb
insl
mov
fcmovne
loope
repz
incl
add
mov
add
or
cwtl
out
mov
shl
lods
repz
add
sub
lsl
mov
add
jne
lods
mov
add
add
fwait
mov
inc
test
decl
xchg
add
movsl
jmp
sub
adc
leave
inc
sbb
ret
push
xor
sub
add
pop
adcl
popf
xlat
adc
xlat
scas
xchg
mov
out
stos
ret
repnz
xor
inc
lahf
sub
add
mov
fisttpl
jle
push
xchg
and
jne
add
pop
add
jmp
mov
sbb
ret
ja
es
or
sub
out
sbb
leave
ss
inc
mov
and
cmpsl
add
out
aad
cmp
sbb
push
es
cs
adc
add
inc
ret
test
ret
fwait
inc
stos
add
fistpl
pop
add
sbb
sti
add
cmp
negl
adc
cmpsl
pop
adc
ljmp
das
mov
repz
aas
int3
dec
add
pop
cltd
jbe
adc
cmpsl
cmpl
mov
xor
repz
add
push
xor
jne
pop
bound
sti
les
lldt
sub
loope
xchg
icebp
push
out
add
mov
insb
cmp
add
outsl
and
add
in
test
ret
jl
repz
ds
or
sub
das
push
adcl
dec
ret
jnp
pop
int3
add
mov
fsubr
ljmp
aas
and
scas
dec
jae
pop
mov
mov
xchg
dec
sahf
mull
mov
mov
in
stc
repnz
dec
shl
add
dec
and
add
pop
les
sbb
sbb
add
int3
scas
dec
xor
xor
sub
lret
push
or
xor
jg
inc
cs
mov
cmc
xor
xchg
arpl
and
loop
repz
jnp
jns
rorb
lods
lret
jae
cli
xorb
ret
jne
push
jmp
stc
add
push
or
inc
dec
pop
xorl
inc
add
fdivr
out
dec
adc
or
pop
xchg
xor
mul
push
icebp
mov
adc
mov
test
add
push
mov
and
sbb
movlps
cmp
jg
sub
add
or
std
in
mov
icebp
out
imulb
xchg
dec
add
and
sub
dec
dec
xchg
test
jns
sahf
inc
lods
lods
sbb
xlat
popa
icebp
mov
cmp
add
push
aas
imul
mov
mov
gs
jno
out
mov
mov
jmp
sub
inc
cmp
add
sbbl
mov
enter
icebp
mov
cmp
sub
xor
dec
ja
inc
imul
adc
out
and
daa
aam
mov
inc
xor
jle
imul
mov
adcb
push
cs
repz
imul
sahf
mov
add
aaa
jb
lret
and
popa
jg
sbb
emms
inc
sbb
sti
and
pop
imul
add
aas
ljmp
push
stos
and
mov
das
adc
subl
add
lods
mov
in
mov
and
mov
sub
pop
es
push
and
mov
rorl
push
cmp
cmpsl
mov
rcrl
add
cmp
pop
push
add
xor
cmp
inc
repz
jo
add
adcl
adc
out
add
cwtl
sbb
fildll
mov
roll
push
sbb
xchg
and
mov
mov
sbb
aaa
pop
and
add
push
cwtl
ret
xor
and
loope
jne
mov
sti
sbb
mov
fcmovnbe
loop
lds
mov
jae
push
push
rorl
cmp
aas
es
out
scas
lret
jne
repz
sub
lret
mov
sbbl
mov
adc
cltd
sbb
scas
outsl
push
sbb
idivb
cmp
aas
jo
dec
je
xchg
scas
adc
jae
dec
popa
mov
nop
popf
xor
mov
gs
mov
out
repz
add
pop
sbb
mov
insb
mov
jp
notl
lret
mov
xlat
out
aad
in
sbb
adc
and
aas
adc
outsb
stos
movsb
xchg
xchg
xchg
add
movsl
sti
adc
add
jne
push
loop
scas
and
pop
adc
inc
roll
or
xchg
lods
lret
aas
jae
add
add
shrb
jmp
push
out
xor
orb
jg
test
rcll
repz
hlt
cltd
add
int
sbb
repnz
and
inc
repz
dec
cmp
jae
push
aaa
mov
push
mov
dec
clc
pop
jp
arpl
add
mov
cs
dec
loope
and
lods
lds
fsub
mov
call
push
xlat
jmp
lcall
lahf
aam
adc
stc
enter
cwtl
add
test
cld
adc
jge
xchg
pushf
xor
and
xor
add
cwtl
jl
mov
xor
cs
loope
subl
pop
adc
mov
add
jo
daa
cs
ret
jg
xor
sub
outsl
add
mov
add
and
push
mov
ljmp
lcall
idivb
jo
inc
leave
in
jle
xor
cltd
push
push
lods
rcll
jns
call
push
daa
arpl
repz
xor
out
xor
sbb
gs
ret
aas
fldenv
fildl
adc
adc
mov
jmp
xor
leave
sbb
enter
cwtl
pop
test
add
mov
scas
rol
sub
into
xor
idiv
pushf
psubq
push
jae
cmp
mov
test
inc
loope
roll
add
push
xchg
cwtl
out
inc
jp
xor
cmp
out
push
mov
cwtl
aad
jmp
and
jbe
mov
sbb
push
push
sub
popa
jmp
test
mul
test
icebp
lock
cli
mov
xor
mov
mov
fdivl
addr16
add
ret
dec
adcb
mov
xor
ja
sbb
inc
dec
movl
cmp
push
adc
jmp
ss
or
in
dec
add
ds
and
xor
daa
cmp
int3
mov
popf
outsl
enter
push
xchg
xchg
scas
stc
fwait
pop
xor
xchg
popf
in
inc
int
push
push
jno
lret
ret
xor
add
popa
ja
jge
test
lods
mov
movsb
fsubrl
insl
test
add
jle
adc
add
sub
jb
add
outsl
loopne
mov
inc
popf
or
add
subl
sti
inc
mov
jae
movsb
imull
repz
adc
push
dec
mov
inc
jecxz
shll
push
mov
jne
sbb
std
inc
adc
dec
ret
das
push
jb
jmp
mov
add
jb
mov
movsl
daa
cld
aad
mov
jmp
jl
jo
out
mov
add
add
or
cltd
scas
popa
mov
push
hlt
lods
int3
mov
outsl
daa
pop
xor
mov
mov
mull
cmp
sti
mov
add
inc
pop
stc
inc
fnstcw
shl
imul
xor
jg
lods
pushf
out
cltd
scas
ja
dec
shl
dec
mov
xchg
lea
stc
mov
add
repz
subb
popf
jne
fisttps
test
mov
jecxz
out
addl
adc
sub
push
push
jmp
clc
mov
mov
inc
cmpsl
shrl
push
mov
sub
cli
inc
mov
inc
xchg
ljmp
test
repnz
push
jae
movzbl
sbb
sbb
inc
aas
add
mov
pop
ret
pop
or
inc
push
jnp
imul
ja
inc
push
add
cs
dec
movb
push
fdiv
in
rdpmc
iret
adc
outsl
sub
cltd
xor
imul
stos
add
loopne
stc
call
cmpsl
xchg
xor
es
daa
add
pop
mov
xor
das
mov
push
add
jecxz
ljmp
sub
orb
jae
fldl
xor
xor
test
push
fcompl
inc
jmp
leave
lahf
rcl
push
inc
add
pusha
mov
and
popf
jno
imul
jne
and
inc
loop
mov
stc
std
pop
push
jns
inc
add
lods
sbb
out
stc
xchg
fstl
add
stos
and
mov
aam
and
adc
dec
adc
pop
jl
xorl
ja
mov
lret
leave
mov
xchg
out
jmp
std
mov
sti
add
pop
out
adc
xchg
arpl
pop
mov
jno
add
das
scas
adc
jns
pop
mov
xor
mov
negl
sbb
mov
shlb
add
push
stos
scas
push
out
enter
adc
fwait
xor
sbb
add
push
andl
pop
adc
in
jmp
sti
imull
pop
adc
add
or
enter
out
daa
mov
xor
mov
ret
or
rcrl
ljmp
add
jecxz
dec
sbb
push
mov
and
mov
mov
inc
lods
sbb
dec
lldt
mov
mov
jp
mov
sahf
mov
push
jae
aaa
arpl
nop
xchg
mov
xchg
xor
jnp
and
hlt
iret
stc
mov
mov
jae
lahf
add
xor
and
out
add
mov
add
pop
sbb
daa
mov
xor
pop
hlt
add
pop
out
push
xchg
popa
mov
ja
mov
cmp
adc
mov
lds
das
insl
dec
xor
jb
popa
mov
mov
adc
inc
cwtl
dec
pop
daa
jno
repz
add
mov
inc
mov
add
xor
add
scas
push
jecxz
sub
test
sbb
shrb
fcmove
insl
add
add
add
push
cmpl
mov
sti
add
mov
add
xor
pop
sbb
jmp
mov
add
jnp
add
xor
jne
movsb
jl
jmp
mov
inc
test
mov
iret
enter
cltd
sbb
mov
data16
les
stc
lds
faddl
repz
cmp
add
pop
inc
push
mov
ret
ja
pop
add
std
ljmp
das
inc
mov
ja
out
test
mov
add
faddp
iret
mov
sub
adc
jno
inc
dec
add
mov
add
sbb
or
leave
sbbl
jns
fstps
mov
and
cmp
das
sar
cwtl
in
sbb
add
fadds
xor
fildll
pop
fimull
sbb
push
add
add
xor
sbb
push
popa
add
cmp
lahf
jl
xor
add
add
sub
cwtl
add
xor
add
add
addr16
push
xor
dec
and
push
cmc
mov
mov
sub
dec
xor
or
add
inc
mov
mov
shlb
adc
xor
cmp
sub
jmp
cmp
or
add
inc
lret
sub
popl
mov
add
add
mov
push
inc
mov
sbb
add
rol
jae
push
add
mov
or
fsubr
sti
push
sub
inc
shlb
sbb
add
mov
and
stc
ret
push
es
or
jae
out
cmpsl
mov
lret
xor
jle
add
jno
push
mov
inc
sbb
fistpll
mov
cs
sub
add
leave
insb
add
iret
xchg
mov
sbb
inc
pop
mov
fbstp
sahf
stc
mov
add
pop
std
cmp
jne
lods
outsl
pop
mov
dec
adc
dec
mov
arpl
jnp
cmp
dec
jmp
add
lret
loop
and
das
cwtl
add
stc
clc
add
xchg
adc
add
jmp
ja
ret
mov
add
sub
xor
push
inc
shlb
orb
repnz
clc
ret
inc
sbb
mov
in
lahf
push
scas
mov
iret
cltd
add
sahf
fs
xlat
adc
or
dec
push
pushl
push
xor
imulb
add
xchg
repz
dec
inc
mov
rcll
mov
shlb
fmull
adc
push
jecxz
xor
xor
es
int
repnz
jae,pn
shll
iret
in
sub
pop
mov
mov
repz
mov
enter
xchg
aaa
add
lahf
daa
sbb
mov
ds
adc
sti
sub
mov
xor
stc
sbb
or
das
test
notl
je
lods
add
jae
push
cmpsl
enter
dec
stc
rolb
ret
and
xor
xor
adc
sbb
sub
aaa
mov
fisttpll
je
test
or
mov
sub
push
enter
or
sbb
fsts
stos
inc
mov
dec
adc
push
gs
ja
mov
pop
push
shll
mov
mov
out
cwtl
mov
and
jp
popf
inc
mov
ret
in
leave
xchg
out
add
cmc
sub
jmp
aaa
mov
cmc
in
gs
cmp
lods
cmpsb
imull
push
outsl
pusha
mov
mov
push
shlb
inc
xchg
stc
test
mov
add
push
or
leave
mov
jae
inc
inc
orl
xor
mov
jmp
sub
in
mov
cltd
int
add
xor
cs
ja
sbb
sti
inc
clc
mov
jae
das
cltd
testl
or
ljmp
lret
aad
shl
rcrl
push
xor
add
stc
popl
add
add
sar
jne
mov
dec
add
push
mov
and
aad
jae
pop
mov
es
ljmp
mov
repz
mov
sub
mov
repnz
movsl
cmp
mov
inc
xor
mov
cmp
jae
cltd
roll
fisubl
inc
add
sbb
dec
mov
repz
dec
mov
lds
cmp
inc
test
or
lock
stc
and
add
and
push
ret
cli
leave
cs
fldenv
and
add
out
lods
cs
mov
jecxz
adc
add
ds
push
imul
dec
sbb
cmpsb
add
ljmp
mov
xchg
fistl
jno
push
lea
mov
xorl
aas
mov
das
std
out
mov
sbb
hlt
popf
pxor
mov
add
dec
cmp
imul
paddd
pop
sbb
lahf
mov
mov
fisubrl
andl
loope
mov
xor
pop
and
add
cltd
inc
stos
mov
xchg
shlb
add
push
jl
movsl
pushf
jle
add
aas
fdivrs
test
push
int3
mov
es
jnp
add
push
pop
mov
xor
jecxz
jmp
jne
sbb
inc
mov
insl
mov
and
dec
mov
add
aad
jecxz
and
inc
divl
cmp
fidivl
pop
sti
dec
jl
pop
outsl
xchg
inc
lods
mov
les
in
inc
div
add
out
sti
add
adc
xchg
add
mov
dec
das
pop
cltd
mov
mov
add
inc
lods
jge
cmp
push
rcrb
mov
xor
lock
adc
jle
mov
adc
out
ss
jecxz
pop
mov
fbld
jae
pushf
mov
stc
pop
pop
jno
mov
das
mov
mov
add
dec
in
xor
inc
movsl
sbb
scas
sahf
fiadds
and
imul
xor
and
jae
bound
jp
adc
inc
adc
ja
dec
call
push
addr16
loope
lea
insl
mov
xor
psadbw
sti
xchg
dec
lret
sahf
insb
jbe
shrl
notb
or
popl
ja
jb
mov
outsl
sub
cmp
sbb
jne
inc
fstps
dec
dec
stos
loopne
nop
dec
pushf
inc
cld
lds
fmull
push
jbe
lea
es
inc
pop
sahf
jp
push
popa
test
insl
cmp
mov
aaa
add
fs
inc
ret
xor
dec
insl
fcompl
jmp
mov
ljmp
jbe
mov
dec
pop
xor
test
jae
xor
roll
ret
inc
sbb
iret
ret
pop
fsubs
loop
enter
mov
movsb
lds
daa
push
insl
push
cs
cli
std
mov
xchg
push
enter
int3
call
and
movsl
arpl
cmpsl
lock
xchg
xlat
jae
cmp
lahf
add
mov
mov
stc
or
mov
xor
lock
pushf
push
push
int3
lods
push
pop
xorl
test
inc
fadds
jb
mov
xchg
scas
rol
iret
mov
into
or
nop
ret
sbb
mov
cltd
cmp
mov
mov
rcrl
pop
dec
sbb
add
pop
add
dec
add
add
je
add
add
insl
add
add
xor
add
add
jo
add
add
add
add
imul
add
popa
add
add
inc
push
add
add
add
add
inc
dec
jp
xor
add
imul
add
dec
add
add
add
add
add
add
add
add
dec
add
add
dec
add
add
dec
add
jne
add
add
add
xor
add
add
add
add
dec
add
inc
add
add
add
jb
add
add
add
push
add
data16
add
cmp
add
add
push
add
xor
add
push
add
add
add
inc
add
add
add
add
add
add
add
data16
push
add
add
add
add
add
add
inc
add
add
add
push
add
add
add
add
add
outsl
add
add
add
add
add
add
add
cmp
add
add
xor
insl
add
add
inc
add
add
add
dec
push
add
add
add
add
add
add
add
add
push
add
add
add
push
add
add
je
add
add
add
add
inc
add
insl
add
dec
add
add
add
add
add
add
add
add
dec
add
add
add
inc
add
add
add
add
inc
add
add
arpl
add
dec
add
add
jb
add
add
add
add
add
add
cmp
enter
shrb
add
push
jno
sti
cmp
or
xchg
push
mov
mov
xor
leave
gs
call
loope
popf
xor
mov
xchg
sbb
mov
cmp
stos
adc
icebp
repnz
jnp
mov
cmpsb
sti
aam
mov
dec
aaa
call
add
movsl
call
aam
call
test
mov
jmp
flds
mov
test
rclb
fimull
subb
add
imul
dec
daa
push
cli
mov
call
mov
pop
imull
out
hlt
xchg
fsubs
mov
jecxz
cltd
inc
add
in
testl
sub
xchg
jb
js
ret
add
jp
lea
shll
mov
test
arpl
adc
mov
xchg
add
xchg
jg
sbb
cmp
rcrb
jns
shrb
nop
lods
call
ja
xchg
bound
popa
push
inc
cmp
fmull
mov
repz
aam
lock
mov
clc
test
test
aad
sbb
or
jb
xchg
mov
imul
and
and
cmp
inc
xor
notl
test
adc
pusha
push
ds
jecxz
push
test
or
cs
xor
cwtl
mov
clc
xchg
jnp
subl
lock
push
and
xchg
ja
mov
cs
mov
fcoms
mov
fadds
stos
cmpsl
mov
std
mov
fldl
xchg
xor
leave
xchg
and
pushf
cmp
imul
test
movsb
fnstsw
mov
daa
repz
clc
mov
popf
ss
sbb
insb
pop
mov
pushf
mov
inc
lea
test
insl
xchg
int3
jge
cs
xchg
add
cld
cmp
out
cmpsl
xor
pop
adc
sub
jmp
push
cwtl
daa
lods
add
popa
fidivl
fimull
pop
mov
cmc
mov
or
jle
mov
xchg
ss
mov
jne
xor
xlat
cmp
es
jb
jo
outsb
arpl
push
sbb
mov
jg
not
faddp
clc
xchg
push
aaa
mov
and
pushf
call
movsb
mov
ret
xlat
testl
cmp
push
ret
pop
mov
add
push
mov
mov
push
mov
incb
test
imul
mov
sbb
loopne
in
fildl
aaa
sub
mov
shll
or
mov
loope
in
cltd
xchg
cld
fidivl
imul
push
lahf
jp
lock
mov
push
call
xchg
outsl
test
pop
nop
or
add
test
div
xlat
and
or
and
push
aas
mov
daa
xchg
hlt
inc
or
fs
sahf
xor
or
xor
aam
icebp
jne
jo
or
gs
sar
inc
or
mov
push
jnp
mov
test
mov
arpl
sti
popf
repz
test
icebp
mov
push
iret
mov
add
cli
push
push
das
push
mov
mov
es
imul
orl
clc
mov
sub
rcl
call
cmp
jl
and
jle
xlat
inc
cli
mov
roll
fcmovbe
cmp
daa
ret
lcall
jmp
negl
jmp
push
test
jnp
add
into
mov
movl
xorl
push
jg
mov
outsl
sub
cmp
xor
pop
out
pusha
mov
int
test
pushl
mov
pop
cmp
cmp
jbe
imull
push
xchg
mov
xchg
aaa
or
mov
push
jnp
arpl
sub
xchg
jge
clc
and
fidivrs
imul
jb
mov
and
mov
mov
mov
add
mov
sub
cmp
in
add
cwtl
xor
shrl
adc
and
dec
enter
cs
loopne
int
shlb
stos
mov
mov
test
xchg
shrl
xchg
xlat
mov
pop
rclb
mov
ja
jne
cmp
xchg
adc
cmpsl
push
call
xor
mov
pusha
inc
mov
jmp
push
mov
or
call
sub
int3
in
cli
incb
imul
mov
test
repnz
pop
fucomp
dec
or
push
mov
mov
mov
inc
inc
jb
push
mov
jbe
clc
mov
cltd
mulb
cmp
and
call
jecxz
or
add
add
push
cli
jb
js
fbstp
mov
rorb
and
loop
cmp
mov
jmp
call
outsb
aaa
sbb
mov
mov
addr16
js
jge
idivb
testl
leave
lcall
scas
push
cli
setle
add
pop
in
loope
ss
popa
icebp
and
or
jae
lret
mov
call
lahf
pop
xchg
movsb
jne
mov
lret
mov
in
push
push
movsl
rolb
int3
jecxz
ja
in
sbb
jmp
fs
sti
mov
jbe
pop
jo
cmp
rorb
mov
cld
ljmp
sub
out
pop
add
jg
cmp
sahf
mov
cmp
xchg
jb
add
adcl
adc
mov
mov
pop
adc
out
xor
or
clc
imul
in
cmp
and
add
or
adc
movsb
mov
les
fincstp
lret
frstor
fwait
adc
xchg
ror
ret
lock
mov
push
and
mov
cmp
or
inc
nop
adc
jmp
jg
mov
test
xor
fadds
xchg
int3
mov
push
mov
enterw
jne
mov
lds
mov
mov
mov
sbb
push
popf
cmpsl
cltd
iret
add
clc
addl
mov
aas
loop
mov
mov
xchg
xor
xor
test
ja
js
mov
mov
push
mov
mov
fucomip
xchg
or
in
push
call
push
adc
mov
mov
loopne
shll
movsb
jg
clc
stc
mov
cmpsl
call
lcall
cwtl
loope
aam
adc
loopne
push
xchg
dec
aas
cmpsl
andl
jecxz
insb
cmp
sub
cmp
ret
mov
and
pop
xchg
lea
xchg
mov
std
xchg
dec
ljmp
sbb
test
test
xlat
xchg
in
int
sub
sub
lahf
inc
cmp
mov
scas
int
dec
mov
sub
dec
dec
and
cmp
es
mov
xchg
pop
mov
outsl
mov
int
pushf
mov
xchg
inc
mov
mov
cmp
iret
sbb
mov
and
mov
mov
in
fdivs
or
mov
push
mov
nop
sahf
pop
inc
push
jb
call
xchg
mov
push
adc
sahf
mov
cmp
daa
xor
and
mov
fsubs
add
mull
add
adc
pop
popa
adc
jp
sarl
dec
pusha
cmp
movsl
jle
movsl
adc
mov
stc
int3
add
mov
jmp
jmp
xor
dec
in
lods
jg
adc
out
cs
int3
fisubrl
mov
lea
enter
xor
in
mov
das
call
stc
or
fisubl
inc
adc
loope
fs
fidivrl
jno
test
and
dec
dec
sbb
push
icebp
xchg
cmp
std
jbe
push
add
push
mov
mov
enter
mov
or
adc
lea
fldt
add
mov
frstor
cmp
out
scas
pop
xchg
jg
cld
lret
inc
movsl
mov
mov
or
mov
xchg
scas
inc
lods
cmp
adc
and
add
call
or
sbb
dec
out
mov
sub
cmp
int3
pop
mov
aas
adc
sbb
fmull
xchg
cmp
pushf
sub
pop
sbb
push
add
outsb
imul
sbb
inc
sbb
jmp
call
xchg
mov
mov
ljmp
aaa
or
test
loope
inc
dec
push
add
fstpl
nop
pop
or
stc
shll
daa
out
jne
inc
or
loop
imul
popf
mov
jnp
call
xor
mov
mov
dec
xor
xchg
dec
pushf
lods
cmp
sbb
add
cmp
sbb
mov
mov
mov
xchg
fcoms
xor
loopne
add
adc
add
add
inc
cwtl
movsl
test
sarl
and
in
movswl
lods
adc
sub
xchg
lahf
lcall
jbe
and
enter
movsl
add
fiaddl
adc
add
ja
xchg
push
mov
push
aad
cs
mov
xchg
jno
push
mov
loopne
aas
je
xchg
outsl
leave
push
sbb
fsubs
pop
lahf
mov
movsl
pop
leave
lcall
mov
mov
cmp
lods
lret
sub
sbb
xlat
mov
adc
mov
leave
add
sub
gs
lds
sbbb
mov
mov
or
jp
or
inc
aaa
or
and
sbb
xchg
lcall
repnz
enter
jnp
mov
mov
pushf
cmpsl
or
out
adc
out
and
call
mov
cmpsb
mov
aaa
sbb
mov
cmpb
js
jno
mov
daa
push
sti
dec
jno
hlt
stc
adc
std
xchg
jo
push
cmp
lret
xchg
sub
jno
popa
jl
push
call
sbb
fsts
push
jg
adc
enter
lods
sahf
and
sbb
cli
test
clc
in
push
xchg
repz
test
shll
cmpl
jne
sbb
nop
or
insl
mov
mov
xor
jno
das
sahf
int3
push
aam
add
jle
lds
cmp
mov
mov
xchg
js
xlat
mov
inc
xor
int3
call
dec
fadds
jle
shrl
or
and
jne
sbb
xchg
mov
into
scas
ja
sar
jmp
pop
pop
imul
pop
call
mov
dec
jecxz
pop
and
aaa
mov
add
in
jns
stc
xor
adc
je
or
hlt
add
loop
add
stos
xchg
mov
jecxz
adc
mov
dec
lock
xchg
xor
mov
test
mov
cmp
jo
cltd
jle
dec
gs
into
inc
jg
mov
and
call
lods
rcrb
dec
les
push
mov
call
jns
inc
or
sub
rcll
dec
mull
mov
vmulsd
mov
ljmp
xchg
sbb
mov
ljmp
or
sub
mov
scas
aas
call
inc
mov
cld
cld
jb
enter
daa
mov
fidivl
call
dec
jge
xchg
add
jmp
imull
pop
and
clc
out
popa
rorb
andl
and
daa
mov
icebp
je
pop
sub
adc
xchg
mov
hlt
sub
jmp
arpl
idivb
mov
lret
ja
jns
pushf
mov
pop
cmc
and
pushf
scas
jmp
mov
push
call
pop
cmp
imul
mov
mov
jb
push
xchg
stos
cmp
mov
in
xchg
sbb
pusha
xor
sub
inc
and
cmpsb
mov
inc
add
enter
xor
test
jb
and
dec
lcall
jns
jb
lret
cmpsl
xlat
xor
xchg
xor
push
lock
jp
roll
mov
loope
and
jno
lcall
adc
cmp
lods
movsb
or
ret
or
xchg
shll
jmp
ret
jbe
sahf
xor
mov
push
jnp
fmul
xor
pushl
xchg
ret
add
icebp
pop
movsb
setg
pusha
xchg
cmp
int3
jp
mov
call
decb
rorb
icebp
mov
fiaddl
push
jne
jmp
inc
dec
les
out
mov
rclb
sti
add
mov
repz
and
xchg
test
sti
adc
sbb
std
cmp
pushf
cmp
adc
test
stos
cmp
loop
xchg
cmc
jp
cmp
imull
and
call
ljmp
test
nop
xchg
mov
imul
xchg
inc
push
andb
mov
out
div
mov
push
xchg
jge
insb
add
loope
jns
xchg
adc
add
sbb
shll
loopne
jmp
and
fwait
add
ret
jge
loopne
test
mov
add
or
mov
and
enter
ret
xchg
jo
lret
sub
imul
fndisi(8087
sarl
adc
cmp
and
sti
lahf
mov
add
movsb
and
push
mov
push
jbe
aaa
orl
cltd
subb
cmp
subl
xchg
sub
pop
sub
cmp
shl
dec
addr16
mov
cmp
pop
call
jne
ror
sub
shl
sub
mov
call
mov
shrb
enter
xchg
pop
mov
call
insb
push
call
push
mulb
mov
mov
aaa
mov
mov
in
ss
dec
clc
cmp
rcrb
sbb
movsb
cmpsb
sbb
add
mov
mov
clc
push
mov
cmpsl
or
pusha
pop
loope
mov
xor
xchg
out
jo
jge
movsb
aas
jl
jmp
mov
inc
jmp
or
mov
loopne
and
sbb
pop
in
adc
movsb
testb
sar
pop
les
add
sahf
call
cmp
clc
cmp
fbstp
adc
test
pop
jb
fwait
push
sbb
loopne
and
push
mov
jg
mov
call
movsb
cli
mov
xor
add
mov
insb
cmpsb
mov
jecxz
pushf
xor
pop
repnz
mov
adc
mov
sbbb
imul
stc
test
daa
mov
test
in
mov
jne
out
in
add
mov
pop
jg
pop
cmp
sarl
mov
clc
adcl
aaa
sarl
and
test
js
cmp
mov
adc
jns
sub
mov
outsl
push
aas
xor
jge
cli
iret
fildll
mov
divb
loopne
mov
enter
jg
jg
adc
scas
icebp
mov
call
arpl
movsb
jge
push
xchg
sti
pop
and
in
inc
cmpsb
mov
enter
xor
clc
jl
cmpsl
xchg
mov
clc
add
leave
jmp
cmp
pop
mov
subl
ljmp
mov
int3
mov
push
mov
mov
aas
xlat
call
inc
xor
loopne
push
call
clc
jg
mov
js
jne
dec
cltd
cmp
fildll
stc
jle
ret
and
xlat
jns
popa
scas
inc
sbb
mov
inc
mov
adc
sub
mov
mov
ds
sbb
and
xor
cmp
ret
scas
std
or
je
cmpl
mov
in
pop
negl
inc
jl
cmp
dec
dec
bound
shrb
aaa
mov
inc
movsb
dec
ljmp
xchg
adc
jbe
and
mov
test
or
jb
sbb
push
popa
je
pop
adc
addr16
in
call
cli
in
pop
mov
cld
imul
sub
adc
jmp
xchg
test
xchg
mov
add
mov
cmp
jb
in
ja
aas
ljmp
mov
add
xor
lds
mov
mov
adc
and
dec
dec
lcall
pop
sbb
cwtl
fucomp
push
inc
lods
test
sbb
mov
or
or
fidivrs
pop
lret
inc
push
mov
bound
mulb
and
es
xchg
pop
es
and
or
call
cltd
mov
popa
push
aaa
cmp
je
sub
movsl
adc
sbb
stc
movsl
mov
mov
add
or
pop
add
ljmp
mov
lea
mov
push
sarb
mov
mov
mov
fstpt
decl
mov
xchg
mov
jne
fidivs
test
out
jbe
pushf
adcl
push
fwait
call
jl
shll
cltd
outsb
sbb
orl
xor
xor
adc
xchg
add
test
int3
adc
test
das
pop
out
jg
mov
popa
cmpsl
mov
mov
add
jne
loope
pmuludq
mov
mov
push
adc
xchg
or
push
mov
repz
xchg
mov
adc
inc
fldenv
movsb
into
add
mov
push
sub
xchg
ror
fnsave
jp
xor
lock
inc
pop
enter
xchg
lods
sbb
sahf
jl
mov
inc
pop
lcall
dec
and
mov
mov
xchg
shr
or
mov
loop
mov
insl
pop
fcoml
mov
jg
mov
addl
pop
sbb
mov
xor
mov
push
stos
call
sub
adc
xor
mov
pop
or
mov
sbb
ret
add
lock
mov
add
cmpl
jg
and
daa
test
lds
cwtl
cmp
jmp
and
call
iret
mov
mov
int
fwait
out
icebp
pop
lcall
sub
in
cli
out
and
add
and
outsl
or
inc
test
sub
or
push
test
cmc
mov
mov
mov
and
mov
jne
sahf
add
inc
repz
loop
pop
xor
push
cli
jmp
adc
dec
dec
dec
in
jo
test
add
gs
icebp
call
inc
cltd
loopne
cmpsl
mov
scas
cmp
ficomps
cld
mov
sbb
cmp
jne
test
int
negl
mov
call
fnstenv
arpl
add
adc
xchg
rorl
in
mov
jns
mov
mov
mov
mov
cmc
fsubl
xor
call
sti
cmpsl
sbb
add
roll
cmp
push
lcall
test
adc
mov
je
fmul
xor
xchg
frstor
sub
sahf
push
dec
cltd
imul
and
mul
push
add
sbb
popf
cmp
sbb
xchg
xor
cli
mov
mov
sbb
inc
inc
rorl
jne
jmp
inc
hlt
cld
fsubs
loopne
cmp
mov
cltd
stos
push
test
mov
test
and
ret
hlt
cld
mov
or
enter
mov
mov
int3
es
int3
in
or
js
inc
enter
xchg
inc
mov
ljmp
lods
int3
mov
adc
mov
xchg
xlat
sbb
lret
fs
inc
scas
call
jl
cld
add
jle
je
cmc
mov
add
xchg
jb
push
aad
xchg
mov
lea
or
push
rcr
inc
or
pushf
dec
aam
lods
call
test
movsl
in
sbb
mov
adc
aad
and
test
jle
call
test
mov
aaa
push
jp
mov
mov
int
jecxz
stc
clc
xor
mov
js
adc
jno
adc
push
push
mov
in
adc
cli
out
adc
push
daa
inc
aaa
sbb
adc
call
xchg
les
cmp
push
add
roll
in
rorb
mov
mov
pushl
cwtl
sbb
lock
and
loopne
jle
sub
xchg
adc
xor
mov
add
xchg
icebp
mov
ds
mov
das
idiv
mov
mov
orb
bound
and
or
lea
es
loop
enter
lcall
xor
or
mov
inc
in
mov
cmp
in
cmpsb
xchg
mov
adc
into
lcall
popa
test
and
popa
adc
mov
daa
xor
inc
and
push
mov
jl
jle
rcrl
mov
pop
movsl
mov
jecxz
dec
fwait
pushf
lods
dec
movsb
fwait
addl
pop
daa
mov
mov
ret
cmp
inc
lea
leave
pushf
cmpsl
inc
cli
cmc
push
mov
xchg
call
cld
mov
ds
sti
sub
xor
test
insl
mov
sbb
cmp
mov
and
xchg
fs
repnz
cmp
mov
enter
xlat
pop
sets
dec
sbb
inc
mov
ss
daa
sub
pop
cmp
mov
sbb
mov
test
push
adc
cmp
and
cmp
sbb
sub
mov
iret
push
inc
gs
inc
fsts
xchg
test
call
mov
mov
jb
xchg
aaa
xor
mov
lea
adc
jl
and
jle
push
mov
fwait
adc
push
fsubrs
xor
cmp
dec
out
jns
push
lods
jae
mov
and
push
and
add
mov
push
push
imul
cltd
movsb
add
add
inc
enter
push
mov
arpl
sub
hlt
mov
add
pmulhuw
mov
sbb
enter
xlat
popf
inc
lret
jp
sbb
nop
fiaddl
mov
paddusw
jmp
movsb
cmp
repz
stc
rclb
in
int3
call
cltd
lds
mov
push
add
int3
xchg
adc
push
jns
add
mov
jle
or
sub
or
mov
mov
int3
std
scas
les
mov
jge
add
imul
js
or
sti
out
cld
add
scas
mov
fwait
and
inc
repnz
xchg
imul
out
add
mov
cli
pop
adc
mov
mov
and
pusha
xchg
add
add
sub
add
or
es
lret
cmpsb
inc
cmp
cltd
add
test
push
mov
fistl
cmp
std
cmp
sub
adc
mov
add
stos
mov
enter
clc
je
out
add
mov
mov
shrl
jp
xchg
push
sbb
add
dec
jo
push
popa
xor
lret
movsbl
ret
mov
mov
adc
push
mov
pop
pop
inc
mov
add
mov
xchg
repz
call
mov
xor
mov
add
pop
shl
mov
xor
fsubrl
lcall
inc
cmp
pop
xchg
test
add
dec
adc
orb
inc
les
xor
xchg
inc
movsl
xchg
out
je
sbbb
sarl
xlat
mov
dec
add
daa
jmp
leave
mov
pop
inc
loopne
out
test
aas
pop
pop
rolb
sti
in
or
xchg
add
insl
shlb
testl
bts
add
add
add
push
bound
ljmp
clc
add
js
mov
add
xor
call
les
jp
adc
leave
cmp
mov
out
aam
lock
shl
out
add
jp
js
pop
mov
out
pop
mov
inc
adc
mov
jg
jns
outsl
jp
inc
out
loopne
out
leave
repz
aaa
add
mov
movsb
add
add
mov
pop
add
or
cmp
jecxz
adc
add
mov
pop
xor
call
add
pop
dec
jnp
mov
and
idiv
push
jne
andl
sub
or
into
call
add
ret
pusha
add
inc
push
xor
enter
stos
mov
insl
add
pop
pop
out
mov
add
dec
mov
jb
enter
cmc
aam
scas
sahf
inc
mov
movsb
sti
and
in
inc
or
mov
sbb
jmp
test
mov
dec
add
and
cmp
rolb
cmp
dec
jae
fmull
push
mov
imul
test
cld
sbb
repnz
pop
xor
cmc
or
xor
mov
add
push
push
inc
loop
popa
xchg
add
std
imulb
add
je
and
xor
add
jmp
sbb
test
add
push
push
daa
and
lahf
and
mov
push
or
push
fisttpll
add
cld
and
mov
rorl
pop
add
ret
lcall
mov
dec
push
dec
pop
enter
lahf
es
dec
in
dec
inc
mov
dec
ss
lea
pop
mov
mov
hlt
xor
adc
and
push
sbb
add
xchg
dec
adc
dec
test
ret
push
xor
rcrl
mov
scas
in
dec
push
sbb
add
add
test
sbb
cmp
pop
pop
pop
pushf
mov
loope
add
fldcw
js
pop
call
add
pop
shrl
clc
add
adc
or
adc
dec
sub
ret
in
lahf
js
xor
xchg
enter
add
outsl
lods
and
cmp
movsb
cmp
inc
bound
adc
cmpsb
je
or
aam
sbb
loopne
xor
add
sahf
aam
adc
mov
cld
add
shll
mov
insl
dec
or
pop
js
cmp
imul
in
inc
cmp
cwtl
lods
scas
sub
push
sahf
push
jg
push
clc
test
test
pop
mov
sub
or
dec
push
aaa
sbb
jae
cmp
mov
cmp
jl
jp
lods
or
rcl
and
sar
addl
mov
mov
add
outsl
dec
enter
or
mov
ds
xchg
mov
xor
jl
jne
insb
int3
pop
lea
cmpsb
mov
aaa
pop
add
mov
xorb
pop
lcall
mov
cmp
arpl
cs
xchg
add
call
dec
inc
or
jbe,pn
sub
push
ja
sbb
fldenv
mov
cli
cmp
mov
xor
lods
sub
add
xchg
mov
cmp
jecxz
dec
add
leave
je
sub
sbb
mov
sub
pop
daa
mov
sbb
or
rolb
stc
sbb
repz
cmp
lcall
stos
dec
enter
pop
fwait
shll
push
mov
pop
add
shlb
ljmp
add
shrb
push
and
add
adc
fnsave
mov
mov
adc
mov
cmp
add
cmp
dec
and
inc
sub
pop
sti
ret
sbb
loopne
mov
push
inc
add
adc
or
xor
outsl
nop
sbb
add
inc
rcll
inc
shll
int3
dec
add
dec
je
pop
xor
movl
cmp
mov
jmp
pushf
sbb
sub
jb
xchg
mov
adc
mov
dec
imul
pop
add
cmp
sti
lcall
and
mov
pop
xchg
and
add
les
mov
xor
call
das
repz
xor
in
xor
and
add
lahf
pop
inc
nop
cmp
jecxz
outsb
mov
cmp
je
inc
push
inc
dec
sarl
mov
int3
int3
sub
cmp
mov
movsb
hlt
pop
or
das
add
lea
inc
stc
pop
sub
lcall
sbb
cmp
in
pop
add
out
lcall
sbb
mov
mov
fwait
jae
stos
cli
lret
popa
add
and
add
rcrl
pop
add
mov
adc
jns
adc
add
adc
inc
mov
add
incb
inc
add
mov
jae
enter
jae
aam
arpl
mov
jg
imul
jae
xchg
push
add
cmpsb
sub
jnp
add
stc
lock
icebp
cs
int
int3
mov
lods
xor
add
mov
das
xor
ja
addb
push
add
mov
mov
sub
ss
dec
inc
or
in
dec
push
push
sub
inc
jecxz
rorb
mov
or
xchg
cld
pop
mov
sub
mov
out
inc
xor
cli
addl
lods
sbb
add
add
insl
dec
or
mov
jo
adc
sub
movsl
ja
cmp
mov
jae
cmpsb
jb
sbbb
fwait
xor
sub
push
cmp
sbb
out
add
sarl
adc
sbb
test
inc
addr16
or
dec
pop
push
sub
jnp
inc
or
xor
pop
and
mov
sub
lret
repnz
mov
xor
sbb
push
ficoms
loopne
pop
daa
mov
cs
pop
xor
add
dec
sub
ljmp
adc
in
xchg
mov
icebp
or
add
mov
add
and
xor
dec
outsb
xor
dec
mov
add
mov
mov
dec
lods
mov
pop
stc
sbb
fsts
aas
sbb
mov
push
bound
lods
xor
rcrl
add
inc
mov
mov
fcoms
scas
subb
inc
adc
stc
push
xchg
sbb
jge
xor
int3
mov
ror
xor
pushf
add
out
inc
dec
movsb
je
push
push
call
and
into
shlb
lods
pop
jecxz
jmp
je
lret
inc
out
push
sti
sub
fwait
lods
inc
push
add
rorl
std
mov
iret
inc
add
fistl
push
movsl
call
add
loop
sbb
sbb
mov
mov
add
stos
popf
mov
jae
cmp
call
pop
sub
ljmp
adc
lods
test
in
xchg
xorb
add
sbb
aaa
push
dec
xor
ds
mov
xchg
jae
xchg
aad
dec
sub
mov
pmaddwd
add
aad
fdivl
leave
lods
pop
jae
sbbl
push
mov
cmp
add
repnz
out
xor
sub
jmp
lret
daa
add
shlb
lcall
sbb
out
xor
ret
xor
out
stos
dec
push
sub
pop
add
and
mov
add
jae
je
das
xchg
sbb
push
push
ret
jbe
repz
add
daa
mov
dec
int3
mov
inc
add
sub
pop
push
mov
mov
sbb
mov
ss
cmpsb
out
mov
push
in
sbb
out
mov
mov
cmc
lods
push
iret
adc
dec
ljmp
pusha
andb
sbbl
fs
stc
arpl
movb
push
out
sbb
sub
xchg
enter
mov
jl
orl
fstpl
scas
inc
push
xchg
xchg
and
sub
sbb
add
add
fildl
cmp
inc
scas
add
lcall
and
or
add
adc
pop
or
push
cwtl
dec
loopne
push
out
adc
pop
xor
push
mov
inc
movsl
lods
sub
arpl
mov
cmp
and
addb
std
mov
add
push
arpl
mov
dec
sub
cmp
jecxz
shll
lods
mov
xchg
xor
jecxz
shll
ret
stc
dec
sub
sbb
lea
jnp
xchg
push
test
mov
lret
lods
sbb
dec
lea
mov
js
cmp
mov
pop
mov
inc
inc
sti
lds
mov
xchg
and
data16
ds
adc
mov
mov
adc
jnp
pop
mov
cli
cmpsb
loope
and
ja
loop
pop
jb
jl
inc
inc
in
iret
add
sub
adc
inc
add
sbb
ret
add
cltd
leave
andb
add
sarb
dec
push
add
or
sub
test
sete
ret
xlat
imul
push
sbb
push
mov
xor
fcomps
hlt
add
sub
pop
lea
add
out
and
cltd
or
pusha
push
push
xor
pop
arpl
pop
loop
sbb
lcall
cmc
mov
cltd
mov
hlt
outsb
pop
data16
dec
js
outsl
js
fwait
ret
icebp
stos
cmp
or
loopne
test
into
fnstsw
cmpsb
imul
sbb
inc
notb
mov
mov
push
fwait
hlt
data16
mov
dec
push
cld
in
cmp
out
mov
mov
push
nop
js
push
xchg
dec
cmpsl
push
test
bound
inc
ss
xchg
add
call
aaa
pop
insl
addr16
dec
mov
dec
loope
mov
xor
js
mov
cwtl
push
mov
push
scas
pop
push
in
xchg
jnp
in
ret
dec
addr16
jge
xchg
jb
inc
xor
sub
hlt
dec
mov
es
push
pop
int
xchg
dec
cmp
push
sbb
dec
mov
mov
popa
pop
lds
push
inc
push
dec
pushf
cli
cmp
cmp
cmpsl
inc
and
jo
stc
rcrl
test
jne
scas
je
int3
scas
into
testb
insl
pop
cmpsb
add
push
in
jbe
daa
push
pop
outsl
ja
mov
pop
add
arpl
gs
cmovno
xchg
push
insb
int3
mov
ret
adc
push
jmp
push
add
pop
out
mov
das
dec
push
mov
aas
inc
pop
mov
mov
fiaddl
scas
loop
arpl
mov
mov
xchg
add
xchg
outsb
bound
mov
ret
cwtl
incb
stos
xchg
sub
xchg
xchg
jne
xor
aas
and
decl
enter
mov
pop
mov
fstpl
add
test
xchg
outsl
push
pusha
pop
test
into
ret
hlt
cmpsb
push
add
xorl
add
test
add
add
cmp
sub
add
xchg
add
and
adc
loop
lret
ret
mov
andb
xchg
arpl
das
push
xor
cmp
xor
or
jmp
push
out
aam
cld
and
fstpl
inc
lcall
lahf
add
into
outsb
mov
mov
xchg
negl
es
mov
lds
or
ljmp
icebp
fwait
xor
jmp
pop
xor
cmp
bound
outsl
mov
jl
push
mov
mov
stc
aas
aam
and
lea
subb
add
add
cli
pusha
mov
add
jns
test
inc
adc
push
sbb
add
push
mov
scas
mov
fwait
add
adc
jl
add
inc
push
cmp
inc
add
roll
mov
dec
clc
jmp
aam
lret
repnz
and
sub
jle
mov
xor
pop
or
inc
leave
add
int
loop,pt
clc
pop
add
dec
jne
sub
mov
add
subl
subb
add
stc
dec
cmp
adc
add
or
and
dec
sbb
jne
das
sbb
mov
cld
mov
push
sub
xchg
in
outsl
dec
xorl
inc
scas
or
cs
pop
daa
pop
idiv
mov
sbb
movl
add
stos
mov
push
mov
out
ret
dec
cmpsb
mov
xor
mov
stos
cwtl
add
sub
add
pop
jmp
add
stos
and
add
inc
jmp
jmp
cmp
sbb
xchg
rol
cmp
add
inc
and
jl
push
roll
dec
daa
xor
in
pusha
add
mov
cmp
and
mov
shrb
call
add
sub
mov
hlt
jo
cli
mov
sbb
mov
sub
inc
sti
pusha
mov
mov
stos
test
xor
lea
cltd
jmp
add
cmp
mov
lea
pop
jne
lret
popl
inc
mov
iret
add
dec
std
out
xor
add
jmp
mov
or
or
jae
or
das
jl
rcrl
push
push
stos
jle
xor
pop
or
mov
pusha
das
int
shll
out
and
add
inc
adcb
cmp
jmp
sub
push
push
mov
inc
xor
jbe
lea
inc
ret
and
inc
xchg
push
xchg
loopne
mov
popa
fcoml
sbb
stc
outsl
add
push
xchg
mov
sbb
push
cltd
les
mov
and
inc
mov
and
dec
shl
sbb
pop
add
pop
dec
dec
push
mov
das
je
xor
scas
ds
sub
jb
add
push
pusha
mov
mov
sub
ja
dec
add
in
out
mov
out
mov
and
mov
rorl
imul
xchg
cwtl
loopne
push
xor
mov
pop
popa
sub
inc
adc
xor
loop
add
pop
pop
scas
repnz
rolb
sbb
cltd
mov
lods
cmp
add
pop
inc
push
pop
and
inc
dec
sbb
xchg
dec
push
test
add
sub
or
std
cvttps2pi
add
mov
ds
pushf
in
push
fsubrl
or
dec
addl
add
mull
test
js
mov
push
das
mov
add
sbb
pushf
or
xchg
lcall
push
lea
enter
pop
cmpsl
xor
outsb
push
aaa
fcomps
jmp
cs
pop
test
mov
out
cmpsb
outsl
das
push
pop
andb
add
out
mov
or
dec
dec
stc
sbb
xor
call
in
lcall
addr16
jae
sbb
in
pop
testb
mov
sbb
xor
add
push
mov
mov
cmp
sbbl
mov
jae
lahf
pop
push
add
ret
lahf
add
lods
mov
mov
arpl
cmp
sarl
or
xchg
add
stos
and
das
jb
lods
fdivrl
or
push
mov
mov
add
mov
dec
push
or
add
pop
cld
ja
sub
xchg
sub
inc
pop
xor
lcall
mov
scas
inc
fimuls
int3
movsl
ltr
pop
jle
sub
mov
mov
push
or
jns
inc
cmp
push
inc
dec
faddp
mov
inc
andl
mov
imul
std
cmp
stc
xchg
arpl
lods
inc
mov
icebp
mov
cmpsb
xchg
push
cmp
cmp
in
and
test
faddp
popa
pop
mov
cmp
sbb
out
repz
mov
xor
add
imul
cmpsl
jge
outsl
inc
ret
mov
xor
add
pop
dec
jge
popa
sub
out
sub
xor
inc
cmp
lret
and
push
inc
sbb
inc
sbb
pushf
arpl
pop
push
mov
mov
push
movsb
ds
and
pop
mov
sub
cltd
add
enter
inc
add
stc
mov
fildll
jl
loopne
pop
or
mov
or
dec
jbe
add
subl
movsl
sbb
pop
repz
sbb
mov
xor
push
cmp
xor
je
mov
bound
push
inc
mov
hlt
sub
jp
add
aad
xor
ljmp
sbb
mov
cmp
pop
iret
cltd
sub
pop
int3
js
or
call
jae
sbb
add
adc
add
mov
shlb
lods
out
lahf
add
mov
jmp
inc
sub
dec
cmp
dec
inc
addr16
sbb
dec
mov
sub
cld
xchg
mov
or
add
xorb
add
pop
cmp
cmp
jge
add
mov
int
add
mov
mov
movsb
xchg
cmp
add
mov
dec
fsincos
add
push
adc
and
cmp
dec
repnz
aas
pushf
jns
lss
lret
xchg
rcll
out
add
popa
mov
enter
push
push
push
pop
fwait
dec
push
cmp
and
or
sub
mov
mov
ljmp
add
sbb
fiadds
pop
pop
xor
sbb
movsb
inc
cmp
add
das
out
add
inc
aam
iret
jne
add
inc
pop
sub
dec
adc
add
sbb
sbbl
cmp
mov
pop
dec
in
mov
shll
push
add
sub
and
in
popa
inc
inc
push
iret
add
inc
push
mov
xchg
leave
push
pop
or
dec
lea
sub
lock
out
add
cmp
out
jmp
pop
into
add
and
dec
jecxz
adc
shll
pusha
pop
push
mov
jge
inc
mov
shrb
stos
push
jno
add
sub
dec
mov
das
adc
xor
test
jbe
mov
adc
jmp
or
mov
and
and
xchg
push
pop
xchg
pop
ret
or
jge
fwait
sub
lods
int3
sahf
add
or
arpl
pop
mov
add
clc
fmull
dec
gs
stos
or
dec
mov
mov
cmp
jbe
mov
or
dec
lea
mov
xor
dec
fstps
sbb
or
nop
pusha
out
mov
fnstenv
jbe
mov
sbb
cmpsb
jl
sbb
push
out
xchg
rep
cmp
add
into
outsb
jns
bound
xor
call
sti
pop
sbb
sahf
or
mov
scas
ja
xchg
repz
push
lahf
xor
mov
jg
dec
ss
inc
inc
dec
mov
sbb
enter
sub
push
mov
add
adc
mov
mov
add
movsl
mov
mov
hlt
call
aam
js
mov
mov
mov
mov
movsl
pusha
repz
mov
jae
aas
adc
sub
jo
negl
inc
mov
sti
mov
call
pusha
inc
and
add
add
sarb
loope,pn
mov
lods
xor
fdivrs
lea
add
push
inc
add
mov
call
jl
jnp
jge
add
sti
pop
in
lods
cmpb
mov
and
movsbl
add
lods
leave
loopne
fistps
add
push
scas
mov
mov
add
nop
mov
test
and
or
add
repz
add
xchg
je
arpl
xchg
pop
add
jcxz
mov
swapgs
fwait
xchg
add
adcl
push
mov
xor
inc
jo
mov
dec
aaa
into
push
xor
adc
jg
mov
iret
add
adc
add
or
movsb
dec
push
into
mov
clc
sub
cmc
arpl
xor
les
xchg
mov
sub
xchg
pop
xchg
pusha
cmp
imul
mov
movb
mov
lcall
inc
cmp
dec
xchg
push
dec
cmp
mov
dec
dec
mov
dec
adc
and
add
clc
add
cmpsb
sub
add
add
mov
or
lcall
push
push
sbb
jmp
adc
imul
pop
int3
add
addb
ficompl
and
pushl
fwait
xchg
mov
xor
pushl
cmc
cmp
pop
jne
sbbl
cmp
div
push
dec
or
das
cmp
mov
adc
dec
adc
inc
pop
pop
pop
mov
stos
add
lcall
mov
inc
cmc
push
xchg
add
call
jb
outsl
mov
jg
out
lahf
jae
adcb
incb
xchg
cmp
jae
mov
leave
add
test
mov
cmp
sbbl
cmp
jp
jae
pushf
out
cmp
shlb
mov
add
fbstp
inc
outsl
sbb
inc
pop
push
roll
leave
add
adc
inc
add
js
popf
or
addl
icebp
cmp
add
push
cmp
jnp
je
add
ret
sub
xchg
movl
and
call
inc
es
add
sbb
fwait
cmp
sub
sub
add
jbe
mov
lods
and
add
xchg
xchg
out
mov
stos
add
cmpsl
add
arpl
leave
setp
cmp
mov
sub
jle
sbb
ret
call
pop
adc
movsb
mov
jmp
sbb
xchg
xor
mov
xor
add
out
add
mov
pop
push
pop
sbb
dec
call
xor
add
mov
inc
push
adc
pop
add
fmull
repnz
or
dec
sub
test
sbb
xchg
mov
cs
xor
inc
mov
daa
lea
push
in
rclb
jle
or
cmp
test
addr16
sub
mov
sbb
lea
lcall
add
in
push
pop
int3
in
icebp
add
mov
jl
outsl
scas
mov
movsb
lds
jl
jb
lock
add
test
add
mov
enter
daa
sbb
sar
jmp
mov
sub
xchg
sbb
xchg
pop
mov
xchg
add
jmp
scas
add
xor
repz
adc
mov
mov
mov
add
add
xchg
in
in
ja
pop
frstor
xchg
adc
jnp
xchg
ljmp
movsb
inc
scas
sbb
push
fsub
jg
out
or
inc
adc
jo
push
add
clc
repnz
mov
sbb
mov
fiaddl
cs
lret
cmp
xchg
cmp
jg
adc
or
dec
or
adc
cmpsl
mov
incl
pop
jns
push
pop
cmp
scas
es
dec
adc
sub
jecxz
ljmp
mov
sbbb
insb
ljmp
xor
mov
cmp
and
in
imul
push
les
scas
push
sbb
imulb
push
cli
mov
jb
outsl
sbb
js
js
les
adc
arpl
ljmp
jne,pn
adc
pop
loope
add
cs
loope
inc
xor
lcall
cmp
arpl
shrl
sarl
pop
mov
xchg
out
pop
adc
and
leave
ret
sub
cmp
and
js
or
fnstcw
clc
sub
cmp
in
outsb
enter
cltd
int3
call
addr16
inc
xchg
mov
shrb
cld
cmp
leave
imull
and
push
test
and
push
and
enter
std
je
ss
out
fs
sub
call
xchg
dec
inc
cmp
pop
mov
jl
and
std
xor
xor
aad
xchg
insb
mov
das
arpl
fdivr
push
xchg
mov
pop
mov
fiaddl
adc
mov
cmp
jbe
pop
inc
or
mov
fildll
rclb
jg
cld
arpl
add
dec
daa
pop
call
inc
shll
stc
or
jg
call
aaa
add
addl
pop
sbb
lahf
mov
cmova
cltd
addl
cli
pop
mov
pop
pop
stos
es
pop
fwait
dec
xor
ljmp
pop
sbb
fistpl
call
pop
xchg
and
mov
lods
rcr
adcl
inc
xchg
das
push
andl
mov
adc
adc
or
and
dec
dec
pushf
out
xchg
lea
add
pop
sarl
mov
arpl
xor
ljmp
add
lcall
xorb
and
js
fwait
call
cltd
loopne
adc
outsb
jge
sti
mov
je
xor
mov
in
inc
aaa
or
lret
and
xchg
mov
cmpsl
aam
mov
xor
fwait
andl
push
rcr
mov
jb
clc
mov
mov
sbbl
fisttpll
stc
add
pushf
and
add
insl
stc
stos
push
icebp
mov
jno
pop
lahf
sub
mov
or
adc
cmp
lea
inc
rcl
hlt
sub
inc
or
or
add
or
mov
cli
adc
dec
icebp
ja
inc
or
repnz
movl
mov
xchg
iret
test
mov
mov
xchg
inc
or
loope
jmp
bt
shll
into
cmp
dec
bnd
stc
xacquire
call
lea
ret
fyl2x
jl
push
xor
popf
rorb
daa
dec
xorl
test
mov
jg
enter
addl
negb
xor
adc
sti
mov
sahf
ja
lahf
jne
loop
jo
cmp
test
mov
dec
stc
pop
imul
jb
push
cmp
sub
cmp
adc
lods
xor
testb
xchg
mov
lret
lds
incb
fwait
jl
aas
fwait
sbb
scas
clc
movsb
inc
pop
leave
and
insb
clc
loope
sahf
jno
bound
xlat
mov
pusha
jecxz
test
xor
call
sbb
stc
and
mov
fldcw
add
xchg
mov
jne
sbb
mov
add
les
cltd
mov
xchg
scas
fsubs
fdivrl
mov
js
adc
and
out
call
loop
daa
dec
mov
pop
cmpl
movsb
icebp
push
scas
mov
adc
mov
jno
mov
push
or
sbbl
inc
jmp
pushl
out
pushf
scas
sub
pop
cmpsl
mov
negl
lods
rclb
rcl
push
mov
dec
cmpsl
negb
or
ss
or
mov
push
lock
cmpsl
popf
adc
and
or
jle
push
nop
add
aaa
xorl
sti
cmpsb
push
mov
lret
std
sub
fists
in
push
mov
sub
test
sub
fstpl
mov
out
hlt
and
push
mov
jp
sub
inc
or
imull
push
mov
mov
cltd
inc
and
in
cwtd
mov
inc
cmpsb
sbb
js
stos
mov
into
and
jb
in
add
in
jmp
push
cld
push
nop
mov
mov
dec
daa
dec
push
repz
xor
mov
pop
mov
test
dec
inc
xchg
mull
hlt
es
arpl
es
loopne
and
mov
cli
out
lea
call
push
mov
add
outsb
inc
loop
popa
loopne
in
arpl
cmp
jae
popf
jg
xor
push
lods
aaa
mov
xchg
inc
lret
movsl
sbb
pop
xchg
dec
movsl
dec
sbb
cmp
popf
cmp
lock
pop
ss
lahf
mov
mov
sbb
xchg
adc
adc
inc
lods
mov
out
ret
loopne
xor
movsb
out
out
push
mov
jno
int
sub
in
insl
jae
xchg
mov
mov
add
dec
cmp
adc
arpl
aaa
adc
in
mov
mov
adc
punpcklbw
pop
movsb
es
ljmp
loope
imul
test
js
push
and
mov
mov
pop
sahf
rcrl
std
aam
mov
sub
and
pushf
or
mov
cmp
loopne
and
add
mov
xor
jp
push
inc
test
pusha
adcb
lea
adc
out
xchg
aad
xchg
bound
jnp
adcb
into
leave
call
rcll
and
xor
test
xchg
or
adc
aam
pushf
mov
stos
sub
mov
xor
or
ja
je
sbb
push
es
jl
add
sub
mov
jge
sub
scas
xlat
xor
bound
js
mov
dec
loope
aas
mov
aam
push
ja
inc
testl
or
ljmp
adc
mov
push
jg
out
and
mov
and
and
enter
fcmovb
push
sbb
shrl
in
inc
adc
add
inc
in
fstl
je
mov
jo
jecxz
cld
push
inc
lods
mov
mov
icebp
inc
xchg
ficoms
cmp
ds
call
in
std
lcall
xlat
or
sub
mov
pop
push
pushf
nop
jo
popa
mov
xor
rolb
mov
pusha
push
jecxz
out
mov
shr
xchg
es
in
aad
fwait
sub
sahf
testb
push
out
ljmp
mov
xlat
js
and
xchg
outsl
sbb
call
and
in
cmp
out
in
jae
or
jno
into
lock
aas
xor
and
push
cld
sub
mov
rcrb
adc
out
pushf
dec
xchg
or
jnp
pop
cmp
mov
jb
out
mov
mov
add
icebp
mov
push
push
xor
sahf
jecxz
jl
pushf
cmp
mov
mov
sahf
jmp
sub
xchg
inc
out
push
mov
jp
add
mov
sub
cmp
mov
aad
enter
sbb
lea
out
sub
mov
mov
in
push
mov
mov
push
cmp
cmp
movsb
jne
das
je
fnstcw
mov
sbb
sbb
aad
add
mov
stos
mov
xor
xlat
jmp
movsb
lea
push
movsb
call
add
lcall
or
adcl
mov
rcrl
mov
clc
adc
fucomip
xor
mov
and
call
cld
lahf
push
jbe
mov
or
stc
push
loopne
bound
ds
xchg
xor
bound
cltd
mulb
jb
sub
mov
and
and
jg
mov
dec
movsb
cmp
imul
pop
jns
adc
icebp
sub
sti
mov
and
pop
sub
cli
sub
mov
nop
ljmp
pushl
call
or
pmuludq
mov
cmp
xor
popa
loope
push
pop
xchg
xor
mov
push
inc
stos
add
dec
mov
xor
xchg
mov
repnz
xor
pop
insl
fcmovnbe
movsb
aaa
aas
sbb
mov
cltd
xchg
mov
and
es
and
xchg
push
cwtl
addr16
int3
mov
out
jg
jne
aam
cmp
icebp
les
in
adc
mov
xchg
testb
movsb
test
cmp
jo
rcll
movsb
movsb
cwtl
cmp
out
popf
adc
mov
mov
jo
xchg
mov
inc
stc
stos
sub
pop
lret
shrl
mov
xchg
dec
pushf
ja
popa
mov
in
and
mov
or
lea
nop
xor
mov
cli
or
mov
xchg
jo
stc
popf
cs
lea
int3
sahf
call
add
cmp
adc
sbb
movsl
push
daa
push
sbb
pop
mov
xchg
mov
fsts
or
dec
xchg
in
pushf
xor
mov
dec
in
mov
xchg
popa
inc
mov
call
sarl
inc
addl
dec
lret
test
divl
xlat
sbb
stc
push
ret
mov
lods
mov
push
xorb
push
cmp
mov
sarb
in
add
mov
adc
js
mov
dec
ljmp
je
lods
gs
or
cmp
rorl
jne
and
add
fistps
fwait
sar
jge
push
rol
aad
lea
mov
sbb
add
js
push
xlat
push
push
fstl
mov
call
mov
jge
sahf
adc
add
fwait
add
fwait
xor
mov
pop
mov
jmp
rorb
xor
mov
dec
mov
cmp
pop
inc
or
pushf
mov
sbb
mov
sbb
in
add
and
fistps
rorb
sub
cld
mov
xor
sbb
xor
loopne
in
mov
mov
add
lcall
and
insb
xchg
stc
sbb
jne
call
imul
adc
cs
rep
inc
or
mov
jp
int
jno
dec
enter
ja
icebp
sub
fnstcw
in
mov
add
sar
xchg
add
loopne
sbb
std
lahf
add
adc
or
push
pop
insl
pop
clc
lret
insl
xchg
cltd
push
cmp
std
iret
aaa
movsl
dec
xlat
sbb
sub
loop
sbb
xchg
movsl
cltd
inc
and
aam
cmp
std
jbe
mov
mov
xor
xchg
call
les
adc
sub
push
mov
mov
call
ret
and
mov
dec
xchg
xor
cs
fbld
call
outsl
and
fsts
inc
adc
xchg
pop
aas
clc
sbb
cmp
mov
xlat
repz
lock
adc
test
dec
inc
mov
stc
inc
mov
call
fsubs
cmp
decl
push
fsubr
sub
orb
xchg
push
xchg
jl
testl
xchg
and
adcb
cld
sahf
jecxz
add
ja
mov
cmp
dec
lahf
jp
xor
out
pushf
loope
movsb
inc
push
cmc
mov
jno
inc
inc
mov
ret
outsl
cld
cwtl
push
repz
sbb
mov
ljmp
or
or
xchg
lods
dec
mov
call
fisttps
lods
xor
int3
jp
push
repz
pusha
mov
aas
test
loope
loopne
inc
call
jge
js
xchg
aaa
lret
push
fnsave
xlat
icebp
cmp
xlat
sbb
ljmp
mov
orb
je
les
mov
test
dec
mov
jle
cmp
sub
fs
dec
mov
and
push
data16
aas
and
xchg
call
sbb
sub
cmp
mov
cld
push
mov
mov
xchg
push
loop
ja
pop
lcall
sbbl
xchg
and
push
in
push
xor
cli
leave
ds
sar
dec
out
push
ds
leave
mov
xchg
fnstcw
pushf
dec
fdivrl
xor
mov
xor
mov
jle
cmp
js
xchg
iret
add
adc
aas
pop
ficoms
cmp
mov
addb
sub
add
mov
mov
in
loopne
bound
push
movsb
adc
pusha
jg
push
sbb
js
loop
push
lock
cmp
stos
enter
mov
clc
aam
sbb
mov
lock
testb
movsb
or
adc
lock
jns
outsl
aad
fs
cs
fsubrs
push
call
or
lods
mov
jne
clc
xor
cwtl
push
mov
adc
movsb
out
pop
repz
test
xlat
ret
in
shrb
mov
mov
cmp
xchg
das
icebp
mov
call
clc
cmp
mov
in
mov
jecxz
sub
mov
pop
inc
hlt
cs
loopne
mov
inc
jl
call
jmp
push
xchg
mov
jle
arpl
sbb
call
adc
loopne
xor
and
les
loopne
hlt
xchg
push
or
hlt
lret
es
in
js
pop
imul
aaa
jnp
mull
je
mov
mov
mov
popa
cmp
enter
fdivs
and
lahf
nop
cld
orl
push
sub
or
sarl
es
dec
fwait
call
mov
enter
icebp
nop
notb
xlat
test
add
insb
mov
mov
inc
pop
cmp
cmp
rclb
push
and
and
or
push
xchg
push
mov
out
roll
inc
sbb
sub
ja
xchg
pop
dec
push
pop
loopne
sbb
cmp
inc
or
jnp
call
xchg
adc
xchg
mov
sbb
sub
mov
pushf
lods
mov
sub
outsl
call
mov
or
hlt
pop
or
fadds
lahf
or
call
cld
inc
xchg
into
movsl
or
clc
pop
or
xchg
lcall
ljmp
ret
sub
aas
mov
mov
sub
push
aaa
loop
cwtl
jle
cwtl
adc
call
pop
mov
jmp
js
insl
enter
hlt
mov
mov
cmp
sbb
pop
in
addb
test
xor
add
addb
adc
or
fdivrl
imull
lods
lret
push
mov
lcall
cmpl
jb
xchg
sub
mov
sbb
cli
push
enter
sar
dec
cmp
xor
hlt
mov
shrl
imul
loopne
xchg
sub
fnstsw
adc
ljmp
aam
push
and
test
mov
and
aaa
sbb
or
push
xchg
push
xor
sub
and
jo
adc
dec
sub
jle
addb
data16
mov
test
mov
push
gs
jbe
adc
mov
mov
sbb
repnz
fwait
test
and
ljmp
pop
jne
push
stos
xchg
cmovg
jb
call
pushf
dec
test
int
inc
and
sbb
out
xchg
jno
sbb
sub
inc
lret
push
mov
std
js
adc
rclb
cwtl
in
cmpsl
xchg
shr
push
jmp
iret
and
out
es
outsb
shlb
mov
dec
cmpsl
pop
dec
pop
cmp
mov
inc
popf
xor
jne
jl
mov
les
add
pop
xor
call
add
out
and
sbb
mov
cmp
xor
or
add
mov
cmp
mov
ljmp
lock
ja
pop
ret
xchg
fmuls
into
xchg
sarb
sub
stc
adc
lock
movsl
mov
xchg
xor
add
pop
stc
inc
cmp
lret
pop
pop
xchg
lret
and
jo
cltd
cld
xchg
xor
mov
outsb
adc
fcomps
pushf
loop
cmp
sub
enter
cmc
add
push
adc
push
mov
or
mov
in
mov
xor
test
shlb
sbb
cmp
mov
mov
push
and
add
mov
xchg
mov
push
xor
jae
inc
adc
mov
sbb
lods
add
call
or
stc
cmp
notb
sbb
repz
popa
dec
notl
push
lods
pop
pop
andb
int3
sub
and
cmpsl
adc
add
clc
outsl
adcb
mov
jg
and
fcmove
daa
adc
jp
icebp
call
pop
ds
or
call
xor
sbb
out
je
test
jae
push
cwtl
push
inc
mov
sahf
pusha
cmpsb
xchg
sbb
les
push
in
cmp
jb
inc
movsb
mov
push
dec
clc
std
lea
jb
addl
push
adc
add
decb
loop
shll
loope
inc
jo
dec
cmp
sahf
idivb
andl
mov
cmp
jae
ljmp
leave
lea
bound
add
or
jecxz
xchg
add
adc
cmp
push
cmpb
add
in
dec
ljmp
mov
dec
cmpsl
and
not
call
xchg
rclb
pushf
cltd
jo
adc
lcall
inc
jge
xlat
mov
jo
sub
ja
add
stc
fs
xchg
mov
push
xchg
pusha
adc
ret
push
addr16
pop
mov
jle
push
les
mov
dec
test
inc
es
mov
pop
das
and
lock
fmull
mov
fidivl
icebp
or
lcall
in
cmp
test
sbb
push
stos
xchg
rcrb
icebp
in
dec
loopne
push
hlt
call
add
xchg
add
jo
divl
cmp
lock
xchg
iret
call
dec
orl
adc
les
cmp
pop
push
sub
fcoms
push
or
sarl
xchg
sbb
push
repnz
xor
imul
js
std
mov
cmp
mov
jbe
mov
sub
addr16
adc
jecxz
cmp
mov
in
or
aas
pop
mov
mov
sub
push
sub
adc
mov
js
lcall
clc
ljmp
call
inc
pop
outsl
dec
inc
and
pop
cmp
add
stos
pop
call
adc
sub
cs
and
inc
pushf
cmp
mov
fcomps
loope
add
xorl
and
loope
ds
pushf
std
jne
fsubr
xchg
ss
loopne
jp
cltd
jne
mov
pop
fbld
xor
sub
sub
fildl
shrb
xchg
ljmp
ljmp
icebp
mov
xor
mov
aas
fs
push
int3
je
push
in
push
and
sbb
ja
sbb
mov
movsl
in
or
xchg
mov
fists
cli
push
mov
sbb
cmpsl
mov
or
mov
inc
or
and
mov
cmp
mov
rcl
data16
vpsubsw
jmp
call
mov
cmp
test
cmc
fisubl
call
mov
ret
and
sahf
mov
cwtl
dec
jne
mov
enter
mov
or
mov
mov
int
add
xchg
add
in
jae
xor
fdivrs
mov
xor
movsb
call
mov
ret
clc
mov
call
ret
and
andl
mov
or
push
mov
in
push
out
clc
mov
fidivrs
xchg
add
mov
cld
fstpt
hlt
mov
mov
repz
std
movsb
push
cltd
cmp
mov
pop
xchg
sbb
xor
or
mov
push
push
insl
mov
lahf
mov
cmpsb
adc
popf
pusha
in
pop
mov
or
jle
test
int
adc
inc
imul
jge
hlt
popa
push
shrb
in
icebp
enter
dec
fsubp
jno
nop
sbb
jns
fistpll
pop
or
add
jno
mov
mov
psrad
xchg
in
dec
ds
lea
sub
push
add
sub
inc
or
movsb
aaa
arpl
mov
or
movsl
mov
lret
and
arpl
push
mov
enter
xchg
call
arpl
cmp
xchg
mov
fwait
je
or
stos
cmc
mov
push
loope
push
inc
outsb
jno
cmp
pop
test
loop
mov
lret
shll
dec
jo
fcoml
jge
mov
cli
add
jne
mov
mov
ds
cs
gs
repnz
dec
pop
dec
cmp
push
push
adc
sbb
dec
mov
inc
mov
test
lods
and
test
in
mov
es
shll
and
insb
mov
add
cmp
cmp
int3
or
in
adcl
or
inc
nop
xchg
cwtl
test
sbb
lret
repz
adc
inc
dec
das
aas
add
bound
fadd
repnz
dec
rcl
inc
and
jb
iret
fwait
lahf
sbb
in
lahf
rolb
xorb
aaa
adc
mov
arpl
data16
imul
aad
push
push
xchg
mov
icebp
test
push
inc
pmulhuw
jge
or
xchg
cld
sbb
daa
fdiv
cli
cmp
xlat
lods
dec
push
or
adc
call
cmpsb
jg
mov
std
mov
pusha
pop
es
add
mov
ret
pop
test
ja
push
loop
adc
test
add
nop
xor
cwtl
mov
outsb
xchg
add
add
inc
cmp
flds
add
lds
rcrl
jmp
fs
test
sub
jne
add
sbb
clc
sbb
xchg
adc
adc
imul
pop
xlat
cmp
push
lret
cltd
jo
enter
inc
or
xchg
jle
jecxz
cmp
mov
jmp
add
imul
add
or
xchg
adc
add
push
adc
loop
or
adc
ds
xor
mov
mov
mov
push
cmp
inc
pusha
cmp
testb
test
ja
popa
fdivrs
mov
add
sub
pusha
ljmp
incl
incb
loope
mov
jne
jbe
mov
jb
push
jno
cmpsl
ja
cmp
push
popf
cmp
pop
ret
sbb
add
fiadds
and
add
add
or
add
add
xor
mov
inc
push
sbb
dec
add
push
mov
mov
dec
lods
add
inc
dec
adc
cmpsb
js
push
out
xor
daa
flds
jge
outsl
hlt
cmp
dec
mov
cmpsb
enter
adc
pop
add
xchg
dec
out
sub
and
fs
add
fdivrs
xor
sub
push
jns
add
sbb
mov
add
push
push
cmp
rolb
xor
ljmp
shl
test
pop
add
pop
rcrl
pusha
cmp
add
ret
add
mov
dec
das
add
sbb
add
pop
sbb
add
mov
or
lea
out
add
push
push
push
lahf
and
cmp
loop
seta
mov
in
push
adc
nop
and
imul
push
xchg
adc
fwait
push
or
lea
push
test
sub
sub
add
mov
xor
inc
push
fadds
mov
mov
push
inc
sbb
sbb
add
mov
and
mov
mov
sub
push
das
mov
push
call
add
sahf
xlat
loopne
pop
add
sbb
aam
idiv
add
leave
xorl
mov
add
std
sbb
add
movsl
lcall
cmpsb
andl
push
ret
add
add
dec
sbb
or
add
xchg
xlat
add
fiaddl
cli
ret
sbb
insb
cmp
add
or
gs
sti
mov
je
out
movsb
fcoml
jmp
mov
and
add
and
add
ja
sub
je
popa
in
and
or
inc
stos
cmp
add
fstps
mov
mov
popf
or
mov
add
scas
cmp
jne
iret
fstpt
add
sbb
add
test
or
lret
mov
mov
add
enter
cs
mov
pop
mov
sbb
addl
add
xor
add
inc
push
mov
inc
mov
push
fldenv
mov
adc
add
add
sahf
push
sbb
push
ret
loope
add
cld
call
add
and
add
adc
icebp
pop
sbb
repz
loop
lret
push
add
xlat
push
cmp
jns
add
sub
push
cmpsl
push
fwait
or
push
xchg
ret
popf
pushf
aas
xor
push
decb
or
lds
movsb
add
mov
dec
jg
add
xchg
pop
fisubs
mov
inc
pop
sbb
sbb
lock
add
cmc
std
js
mov
aaa
jmp
or
cmp
xor
repz
or
xor
jb
xor
adcb
xor
popa
bound
cmp
jnp
sbb
jae
pop
and
cmpb
fistpl
ret
mov
stos
imul
sarb
mov
mov
loopne
popw
pop
jae
test
mov
pop
add
sbb
xor
fiaddl
cmpsl
fs
lock
pop
add
add
push
mov
and
push
dec
push
mov
orb
jmp
add
dec
push
add
scas
pop
jg
push
adc
std
add
pop
add
sbb
mov
int3
sub
jae
stos
cmp
jne
sub
push
xchg
add
ja
pop
mov
add
inc
adc
xor
lret
pop
shll
xchg
mov
mov
mov
sbb
cld
ret
add
dec
adc
lea
xchg
lcall
les
mov
scas
mov
sbb
lea
lahf
inc
daa
aaa
push
add
jmp
stos
push
popa
add
mov
sbb
pop
mov
xchg
ret
inc
addl
push
movsb
lahf
repz
xchg
add
add
lods
mov
sub
push
sub
leave
add
mov
mov
pop
fimull
daa
mov
or
push
sbb
mov
inc
cmp
mov
push
add
inc
adc
imul
or
cld
dec
xchg
out
add
cmp
ficoms
adc
pop
in
xchg
add
add
ret
leave
je
dec
outsl
mov
inc
es
pop
add
and
and
int3
int3
mov
push
rclb
subb
jmp
mov
adc
mov
pop
movsl
ret
jmp
xchg
add
out
imul
inc
cwtl
mov
orl
adc
fcoml
and
jae
adc
and
push
xor
ja
mov
xchg
jmp
aad
pop
sub
arpl
xor
add
ret
fidivs
dec
mov
mov
mov
mov
xchg
pushf
jmp
jecxz
fsubrl
cs
add
inc
jnp
mov
ret
mov
lcall
xchg
jne
push
xor
xor
aam
lock
inc
add
cli
sbb
push
pop
pop
les
mov
mov
mov
arpl
fsubs
xor
cmp
jmp
xchg
mov
inc
add
cmp
mov
mov
jae
test
jne
pop
mov
xchg
stos
in
sbb
add
clc
popf
mov
fiaddl
or
repz
inc
add
jle
xchg
xor
inc
inc
pop
sbb
mov
mov
addl
cmp
xchg
cmp
push
and
sahf
push
test
cwtl
add
jne
sbb
add
dec
adc
push
call
and
repz
or
mov
fadds
push
orl
add
sbb
add
lret
add
push
imul
push
add
call
mov
mov
jo
add
sbb
imul
pop
or
push
insb
jl
pop
sbb
pop
add
repz
fisubrl
das
mov
out
xchg
rorl
popa
shll
dec
sub
push
push
dec
stos
add
pusha
push
sbb
push
add
dec
mov
mov
dec
push
aas
or
xor
out
mov
jb
pusha
loop
dec
push
mov
out
cmc
xchg
mov
aaa
or
jno
pop
lcall
sub
lock
bound
movb
dec
add
adc
std
mov
jmp
arpl
push
out
push
fcompl
dec
std
inc
jecxz
sub
add
mov
mov
pushf
dec
cltd
scas
add
push
add
add
push
push
push
call
add
sahf
sti
sbb
out
add
add
dec
adc
fmul
mov
push
add
popf
or
repz
add
mov
cmp
sub
fs
insb
push
mov
shl
cmc
xor
and
loopne
ss
sldt
sub
inc
popf
jnp
push
mov
pop
push
lods
sbb
mov
mov
shrl
scas
cmp
mov
mov
lods
cmp
add
sub
dec
push
lret
call
and
add
filds
pop
cmp
je
rdpmc
test
test
cmc
std
arpl
out
mov
call
inc
test
ret
cmp
hlt
mov
or
scas
lods
dec
addr16
or
push
ds
xchg
leave
xchg
jae
lcall
cmp
sbb
add
les
add
add
dec
and
jmp
test
pushf
mov
mov
jae
lock
mov
clc
xchg
inc
je
mov
lods
mov
push
push
scas
data16
test
adc
mov
push
test
add
cltd
xchg
xor
dec
or
das
mov
repz
adc
push
mov
scas
push
mov
cld
add
push
and
pop
xor
push
xorl
fsubl
xchg
lret
inc
add
jb
ret
popl
sbb
cmpsb
outsb
adc
push
add
into
add
mov
das
sarl
add
push
pop
pop
test
leave
add
inc
addl
adc
jle
mov
fs
sub
sbbb
mov
xchg
shrl
mov
xchg
ljmp
mov
mov
xor
icebp
xchg
je
add
push
inc
pop
lcall
mov
scas
std
cmpsb
add
hlt
pusha
mov
add
sub
adc
push
inc
push
mov
or
hlt
stos
add
imul
mov
dec
pop
lea
push
call
mov
pop
sti
or
ret
clc
pop
mov
unpckhps
mov
push
pushf
add
sbb
push
add
mov
xchg
mov
xorl
inc
inc
sub
mov
pop
push
movsb
and
cltd
add
cwtl
add
out
xchg
xor
loop
test
mov
xor
cmp
std
jecxz
pminub
cmp
push
xchg
mov
jns
sbb
dec
xchg
sub
mov
inc
xlat
xchg
fistl
xor
mov
icebp
mov
ret
sar
cmpsl
mov
inc
das
xor
cmp
sti
add
ret
inc
ss
sahf
sub
jae
outsl
dec
fnsave
xor
or
fiaddl
xor
inc
pop
outsl
jecxz
cmp
negb
jae
xchg
push
jmp
mov
pop
into
pushf
pop
push
add
popf
jne
mov
lock
add
jno
pop
add
inc
inc
daa
push
add
inc
or
mov
mov
pop
jecxz
out
rorb
and
sub
inc
add
ret
lcall
add
mov
adc
fstpt
ds
loope
stos
inc
mov
push
add
or
push
push
test
enter
jle
or
mov
adc
jmp
push
cmp
insb
dec
sbb
add
lock
sub
or
pop
ret
stos
mov
pop
pop
cmpxchg
mov
inc
mov
dec
mov
jne
mov
dec
dec
ret
sti
or
mov
lock
cmp
scas
je
das
loop
push
cltd
sbb
popf
add
loopne
and
add
xchg
mov
jae
inc
cmp
icebp
jnp
jg
xor
data16
psrad
mov
add
gs
add
add
adc
roll
call
jmp
cmp
xchg
lds
mov
dec
dec
mov
adc
bound
mov
add
jl
and
mov
cltd
mov
and
div
cmp
mov
xor
mov
mul
add
insb
sub
repz
add
lds
jo
rcll
sub
in
pusha
inc
xchg
push
push
xchg
mov
adc
jns
rorl
int
stc
add
je
aas
stos
dec
xchg
mov
mov
jne
sahf
jae
or
mov
cmpsb
push
pop
xor
xor
rorl
fisttpll
in
outsl
xor
fidivs
pop
pop
mov
fs
lods
jle
fstpt
test
cld
es
ret
add
movsl
or
jbe
sbbl
sbb
xchg
test
jb
add
pop
lock
pop
mov
rcr
or
int3
test
or
jo
add
int3
add
lcall
mov
jl
das
mov
lock
and
fisttpll
pop
xchg
jl
lods
xchg
shr
lods
cmpsl
lods
movsl
repz
and
xor
frstor
into
inc
movsb
add
sbb
add
or
mov
and
xchg
inc
lods
mov
repz
repnz
dec
mov
dec
xor
inc
adc
in
add
pushf
sub
outsl
cmp
stos
nop
repz
lret
add
call
xchg
xor
je
inc
inc
mov
add
imul
sbb
dec
das
ljmp
cmp
fwait
mov
inc
iret
cmpsb
mov
dec
jnp
cmp
add
pop
stos
push
add
inc
inc
movsb
loop
fcmovbe
add
or
add
imulb
loope
push
pop
ret
pop
stos
out
std
add
sbb
add
mov
fcoms
sbb
mov
lods
sub
add
fists
fisubs
push
sti
inc
jo
mov
std
movsb
mov
jnp
dec
out
push
mov
sbb
inc
pop
cmpb
out
dec
out
cmpsl
daa
mov
fidivl
jno
fs
add
ficomps
repz
cmp
ss
jbe
xchg
les
pop
adc
jo
push
push
dec
dec
shrb
mov
insl
sbb
inc
cmp
cli
scas
cmp
repz
bound
mov
xchg
inc
shrb
cmp
mov
xor
dec
mov
sbb
fwait
cwtl
mov
ficoml
sbb
repz
add
in
cmp
shlb
cmp
cmp
inc
mov
xchg
mov
lret
repnz
cmp
pop
int3
jae
scas
xor
sbb
dec
rcrb
mov
xchg
negb
add
mov
jle
mov
shrb
xor
xor
je
ja
cmc
and
add
movb
mov
ljmp
addb
add
sbb
mov
sub
xor
lret
add
push
mov
jg
push
sbb
pop
sbb
add
push
pop
fildl
cmp
scas
push
add
andb
int
fwait
add
jb
add
dec
or
mov
adc
mov
fiaddl
xchg
and
mov
mov
pop
das
xor
cmp
sub
xlat
mov
mov
jae
lea
lahf
pop
push
insl
xor
mov
fstl
adc
and
mov
lret
sar
push
je
inc
mov
adc
mov
arpl
jmp
cmp
call
loopne
pop
push
dec
sub
andnps
jns
call
mov
icebp
divl
sbb
rorb
mov
cwtl
imul
aad
pop
scas
stos
test
and
add
dec
add
mov
mov
or
push
stos
dec
add
test
add
jne
and
vpaddsw
mov
sbb
push
lea
pop
xor
push
xor
add
dec
add
js
adcl
idivl
imul
test
mov
dec
cmp
add
mov
xor
and
adc
push
mov
mov
test
mov
add
adc
add
daa
sbb
xchg
push
jg
movsb
fsub
push
cmp
add
add
outsl
je
mov
mov
imul
das
add
mulb
add
lea
mov
xchg
and
and
cltd
jae
aas
sub
sbb
jno
sub
adc
cld
pop
push
mov
divl
mov
sub
fmuls
xor
jnp
add
mov
adc
pop
popf
xor
jmp
sbb
mov
dec
mov
or
and
lods
adc
pop
add
add
ret
out
mov
xchg
push
push
xor
xchg
push
adc
mov
inc
and
sub
dec
ss
mov
dec
sahf
dec
mov
lods
or
xchg
inc
pop
pop
jmp
popa
cs
divb
mov
cmpsb
inc
mov
data16
aaa
pop
and
mov
loopne
ljmp
dec
je
aaa
icebp
mov
inc
push
scas
xor
bound
aaa
push
pushf
sahf
ror
push
mov
gs
mov
pop
rorl
or
push
cmp
in
int
xor
inc
stc
add
lret
pop
aaa
jmp
aam
imul
inc
clc
mov
pop
not
inc
ss
mov
xor
or
movsl
fldenv
and
dec
mov
push
mov
inc
addr16
push
loop
cld
cmpsb
int
jnp
fdivr
sti
mov
cli
push
sahf
pop
dec
xor
xlat
jne
xchg
xor
cmp
adc
or
outsb
dec
test
mov
cwtl
bound
and
in
out
push
cltd
jmp
mov
dec
mov
push
cwtl
popf
jns
insl
push
mov
fsubrl
gs
int3
dec
xchg
in
cmp
xchg
xchg
push
push
insb
inc
in
dec
das
lcall
stos
ja
push
popf
xchg
cmp
push
jno
push
rorb
push
pop
fldenv
cmp
sub
jnp
add
iret
mov
call
in
addl
inc
shl
mov
lret
add
dec
cwtl
js
mov
dec
stc
fimuls
lock
push
and
xcrypt-cbc
cmpsl
push
mov
addl
and
pop
and
pop
leave
enter
das
sub
scas
and
cwtl
into
popa
inc
xor
xor
mov
inc
pop
push
dec
jp
adc
call
inc
icebp
fistps
push
inc
bound
mov
leave
add
sbb
stos
mov
divl
inc
add
leave
jl
loope
mov
xor
dec
movb
lock
cmp
cmp
not
xor
sub
fucomip
add
xchg
daa
sbb
and
imul
add
jbe
add
cmp
or
lahf
mov
je
sbb
pusha
add
inc
mov
loope
pop
push
cmp
add
ret
jno
pop
adc
add
mov
lret
add
mov
add
imul
add
push
nop
aad
ret
addb
dec
adc
mov
jbe
and
adc
mov
and
xchg
ja
mov
lret
pop
xchg
je
jnp
add
mov
adc
orl
adc
iret
enter
fmull
push
lea
and
adc
push
sbb
fnstcw
xor
sbb
dec
rclb
mov
sbb
dec
adc
add
aad
insb
sbbb
xor
pop
mov
popf
in
rcr
std
push
sub
out
dec
mov
mov
dec
jg
mov
inc
and
je
xor
pushf
cmp
out
shrb
jge
cltd
jg
addr16
movl
pop
sbb
clc
push
ljmp
add
xchg
add
mov
push
xor
push
add
lahf
adc
add
mov
aam
inc
scas
in
fcmovnu
mov
push
push
xchg
add
jae
push
cmp
dec
mov
jno
inc
sub
add
sbb
decl
xlat
dec
inc
jns
pop
dec
pop
mov
or
dec
xor
and
dec
fimull
daa
scas
or
subb
pop
popf
loop,pn
xor
fwait
sbb
inc
stos
sbb
in
pop
lret
add
es
sahf
dec
or
xchg
mov
push
sbb
mov
iret
add
inc
mov
pop
mov
push
lea
push
push
lret
add
push
call
stos
add
test
pop
pop
aas
je
mov
adc
imul
popf
push
dec
mov
xor
jo,pn
rep
xchg
gs
orb
jle
imul
dec
xchg
add
cmp
movl
or
ljmp
leave
in
add
xchg
mov
imull
push
dec
shl
ja
sti
add
jmp
inc
sbb
mov
adc
jle
add
ret
pop
and
rorb
scas
hlt
add
ja
fcmovbe
xor
jae
push
std
sbb
and
add
and
push
and
xor
je
roll
add
bound
mov
movsl
cmp
fmul
push
xor
sub
pop
mov
rcrl
icebp
ficoml
bound
inc
mov
push
pop
pop
fldl
cs
jmp
xor
mov
jmp
mov
loop
sub
add
mov
xor
dec
jne
dec
cmp
jg,pn
aad
mov
xchg
push
push
or
add
call
sub
mov
jne
outsl
repz
mov
imul
adc
inc
add
and
add
inc
and
mov
push
sbb
scas
push
add
call
inc
in
mov
stc
mov
pop
imul
inc
dec
mov
adc
mov
or
cmp
mov
fs
dec
dec
and
push
call
xor
data16
out
iret
push
add
jmp
adc
push
push
add
mov
das
dec
loopne
mov
push
inc
or
cmp
popf
cmp
out
repz
decl
mov
shrb
push
mov
pop
dec
adc
and
mov
int3
or
out
mov
stos
mov
xchg
enter
or
test
push
int
ret
sub
xchg
popf
add
cmp
sbb
outsl
mov
push
loope
or
lods
enter
leave
xchg
sbb
and
dec
mov
ret
push
add
push
das
push
dec
xchg
add
mov
dec
jle
or
mov
add
cld
ret
popa
jmp
pop
add
sbb
test
aaa
fiaddl
loop
cmp
add
mov
and
aaa
sbb
rol
sbb
sbb
call
xchg
cmovl
xchg
add
xor
pop
adc
hlt
sbb
repz
push
lcall
jmp
test
movsb
into
mov
lret
call
imul
push
rol
lahf
add
in
lea
xchg
xchg
dec
cmp
add
loopne
xor
inc
clc
nop
mov
push
cmp
mov
push
pop
adc
sbb
mov
in
add
and
cmp
push
or
jns
add
das
xor
outsl
cmc
sub
jp
test
fdivs
mov
cwtl
ja
mov
mov
pop
inc
xchg
adc
dec
jbe
test
sbb
sti
add
pop
mov
xor
sub
aas
push
mov
xor
std
test
pop
pop
fs
mov
ds
es
dec
jle
imul
push
sbb
jg
add
push
dec
mov
cmp
jno
pop
ud0
add
shll
test
cltd
into
arpl
ljmp
cmp
movsl
and
mov
imul
sbb
mov
adc
dec
sti
ret
fildll
out
dec
xor
pop
add
mov
insl
adc
jns
add
add
pop
xchg
add
sbb
and
cwtl
jae
fisttpl
xchg
mov
test
rolb
inc
cmp
xchg
cmp
mov
or
lds
sub
clc
shr
loopne
ja
inc
add
imul
pusha
add
jne
dec
mov
insl
in
pop
arpl
aas
mov
add
lds
lock
mov
jae
inc
decl
mov
in
xorl
add
test
sbb
and
out
mov
test
and
std
clc
and
add
lret
in
js
aad
xchg
cld
sub
xchg
inc
arpl
mov
add
push
add
push
add
pop
call
or
loop
in
push
cmp
popf
push
dec
bsr
mov
leave
fsubl
imul
add
sbb
out
or
add
dec
in
fs
hlt
mov
cmp
pusha
cld
dec
push
inc
xor
shlb
shr
mov
xor
pop
scas
mov
int3
pop
xchg
lds
sbb
call
lods
add
in
gs
cmp
divl
loope
pusha
insb
outsb
aam
mov
xchg
sbb
xor
into
cmp
iret
repz
jge
sbb
jbe
inc
add
push
mov
sarb
inc
iret
ja
loope
test
dec
inc
pop
and
negl
outsb
inc
lahf
cmp
mov
sub
cmp
xor
sahf
add
push
loope
sbb
frstor
dec
adc
inc
xor
xor
and
sbb
adc
pop
add
call
add
mov
jae
mov
add
or
jns
rcrl
mov
mov
imul
jae
add
push
sbb
add
mov
roll
xchg
adc
mov
ficomps
shl
arpl
add
inc
cmc
xor
mov
xchg
add
jne
and
out
rcrb
scas
sahf
lds
add
xor
aam
insl
inc
xor
leave
lods
inc
adc
mov
or
xchg
pop
in
or
clc
lock
mov
sub
or
add
pop
xlat
out
daa
mov
jae
movsb
jmp
int3
insb
inc
jg
jle
sub
push
add
mov
or
ljmp
add
mov
dec
or
dec
sarb
xchg
push
mov
cmpsb
adcl
add
sbb
mov
pop
lret
pop
pop
dec
or
aam
jmp
mov
and
mov
xchg
add
out
and
roll
push
inc
aad
dec
sub
repnz
mov
or
sbb
mov
cltd
pop
add
add
xchg
add
into
out
push
add
pop
fldenv
les
inc
xor
out
xor
mov
sub
sbb
scas
mov
add
adc
cmc
shr
mov
sub
xor
sbb
iret
aas
lds
sbb
mov
out
xchg
sub
and
imul
pop
call
pop
jae
bound
add
out
sbb
mov
shll
lods
sti
adcb
daa
pop
testb
aaa
jb
mov
loop
shr
xor
jbe
add
pop
outsl
mov
call
push
test
cld
jae
fs
cmp
sbb
pop
je
mov
lock
jp
scas
add
out
sub
and
add
icebp
add
sbb
inc
out
add
add
testl
sbb
push
mov
and
movsb
cwtl
add
cmp
jno
inc
mov
fdiv
adc
mov
pop
mov
mov
or
cli
data16
bound
pop
xor
push
pusha
add
les
das
je
add
fwait
mov
xchg
out
rol
xor
jl
sbb
add
enter
add
inc
outsl
mov
ljmp
mov
loop
xor
jl
cmp
add
loope
adc
insb
push
add
lcall
mov
push
in
xchg
inc
push
shrb
arpl
sbb
push
add
in
mov
add
loope
cmp
lcall
sub
data16
add
test
mov
sub
lock
push
jb
push
arpl
add
xor
movsl
mov
mov
push
inc
sarl
popf
lds
in
lea
adc
pop
add
test
add
mov
or
jg
pop
lret
inc
movsb
scas
jl
add
push
subl
jno
data16
add
jbe
stos
ret
inc
sbb
push
xchg
pop
mov
push
aad
jno
mov
cmpsl
push
dec
xor
popf
and
iret
mov
push
xchg
jae
jmp
add
fldenv
sbb
mov
push
sbb
jbe
add
cld
adc
bound
fimull
jns
mov
add
stos
outsl
xor
iret
lcall
xchg
cmp
xorl
mov
xor
rorb
outsl
mov
xor
jo
cmpsb
mov
sbbl
push
mov
and
xchg
add
pop
pushf
mov
add
dec
xor
shrb
add
sbb
loopne
insl
or
loope
mov
lahf
fsubs
mov
jne
add
sub
mov
lea
xchg
fisttpll
add
add
inc
loopne
dec
cmc
push
xorb
in
push
cmp
mov
jmp
pushl
adc
rolb
mov
pop
mov
pop
mov
test
pushf
mov
enter
mov
shlb
test
mov
push
pusha
push
in
repz
bound
jg
outsb
add
daa
xor
mov
dec
cmp
repnz
data16
mov
cltd
adc
or
arpl
pop
orb
pushf
stos
mov
inc
adc
cwtl
jle
jg
xchg
dec
orl
add
mov
scas
xlat
sub
adc
push
aas
in
add
dec
xchg
sbb
lcall
mov
mov
xor
dec
sub
add
aam
add
adc
push
add
rep
inc
xchg
xchg
rolb
ja
jle
loopne
dec
fcompl
xchg
ret
and
sbb
das
adc
push
cmp
push
or
and
ljmp
mov
push
add
lret
sub
add
xor
xor
inc
movsb
push
add
mov
mov
mov
pop
mov
add
mov
and
xor
popa
cmp
adc
xorl
lea
ror
je
inc
push
or
call
test
sub
roll
push
pop
hlt
sbb
in
mov
xchg
popa
or
into
call
xorb
fimuls
add
mov
sahf
dec
add
cs
pop
movl
aam
push
push
adc
inc
add
rcr
mov
xor
add
lds
pop
mov
mulb
jle
leave
cmpl
popf
dec
ja
dec
sti
or
add
sub
or
dec
into
in
dec
xor
mov
fwait
jge
push
scas
cmc
push
add
add
in
or
cmpsl
fsubs
fisttps
repnz
fidivs
add
test
pop
cmpsb
mov
inc
lods
jg
test
add
mov
imul
popf
dec
mov
xchg
ja
in
stc
and
in
lods
adc
dec
bnd
pop
cmp
xor
cld
ret
inc
add
mov
inc
and
inc
mov
mov
jnp
in
jp
adc
add
call
mov
xor
loopne
inc
push
pop
ja
push
cmc
mov
fs
mulb
daa
shll
enter
cld
push
mov
inc
xlat
add
fnstcw
cltd
mov
sub
adc
call
mov
mov
mov
sbb
js
xor
fmuls
repz
outsl
out
loopne
daa
sbb
add
sbb
call
cmp
mov
mov
add
call
into
fsubl
xor
xor
ret
aam
leave
fiaddl
jl
dec
stos
inc
xchg
add
jb
inc
sbb
cmpsl
jns
add
sub
call
xor
jnp
nop
test
pop
inc
add
xor
mov
jno
push
lret
sbb
lret
scas
mov
divl
ret
fcompl
jo
mov
fcmovb
cli
aaa
add
xchg
inc
inc
push
mov
mov
push
iret
pop
mov
test
jns
add
and
nop
dec
adc
and
push
push
xorb
mov
popl
mov
xchg
outsb
mov
xchg
add
sbb
lea
push
imul
mov
out
out
mov
mov
or
sub
test
add
inc
mov
idiv
lahf
or
rcl
add
and
stos
add
mov
es
add
or
or
scas
pusha
jp
lods
add
mov
outsb
add
xor
fldenv
and
add
sub
dec
lahf
enter
push
add
aaa
xchg
in
sbb
call
or
add
xor
add
dec
sbb
outsb
and
add
lret
jle
rcl
repz
imul
lret
jno
lock
cmpl
cli
stc
xor
xor
sbb
fwait
cmp
ret
pop
jecxz
pop
push
filds
flds
loop
mov
out
mov
sbb
jle
lock
and
push
es
xor
and
xchg
fstpl
mov
pop
cld
ror
cmp
mov
mov
cmp
push
add
sbb
mov
adc
divl
insl
jno
stos
aas
push
repz
xor
push
add
and
dec
mov
arpl
in
inc
aam
dec
adc
dec
push
mov
call
out
cwtl
add
stos
mov
repnz
daa
stos
stc
pushf
pop
sub
add
pop
add
mov
jb
dec
ljmp
shlb
ret
pop
add
sahf
jge
inc
sub
pop
add
mov
lahf
push
dec
jno
insl
in
push
push
adc
or
cmp
ret
in
mov
call
repnz
xchg
cmc
xor
data16
dec
and
shll
ljmp
jle
loopne
pop
or
addb
movl
inc
xorl
mov
mov
mov
adc
dec
push
mov
sarl
sub
add
pop
jl
dec
imul
add
xor
adc
jmp
mov
xor
stos
push
mov
cmpsb
jae
mov
imul
nop
stc
ret
xor
fadds
xchg
sbb
mov
mov
jo
and
mov
and
test
inc
popf
xchg
lock
inc
or
lcall
lods
pushf
jmp
test
dec
aad
shrb
add
pushl
jae
mul
sti
popf
into
sub
mov
mov
ret
or
int3
movl
gs
mov
lea
or
into
addb
add
roll
add
push
mov
add
add
or
mov
xor
adc
aam
out
inc
xchg
add
dec
dec
cmp
inc
lock
cmpsl
jns
mov
cmp
fcompl
test
ljmp
adc
adc
push
xchg
loop
lea
mov
fs
cmp
lods
insb
in
loope
cmp
scas
xchg
cld
outsl
cmp
dec
push
cmpsl
xlat
arpl
jne
dec
or
and
in
out
push
push
cs
bound
push
gs
jns
inc
cli
push
mov
stc
sqrtps
pop
hlt
addr16
inc
push
jp
sahf
lods
mov
je
dec
cmp
inc
xlat
dec
ret
jb
andl
xchg
mov
inc
jno
je
mov
aaa
lock
mov
std
xchg
jns
ja
je
pushl
sbb
sbb
mov
push
xor
outsb
mov
test
push
mov
cmp
pop
xchg
and
lcall
hlt
mov
ja
dec
aaa
rcrb
shlb
adc
cmp
jno
xchg
popa
add
in
push
jb
push
mulb
popf
pop
in
daa
cli
inc
and
jno
inc
cltd
cltd
bound
cmp
cmpsl
fnstcw
jno
pop
push
xchg
xchg
pop
sub
add
push
loopne
cmpsl
mov
dec
divb
sub
and
add
pop
sti
call
mov
inc
lahf
push
pop
mov
addb
adc
sbb
mov
mov
iret
test
or
mov
sbb
femms
push
fsubrl
push
add
pop
lcall
ret
cmp
push
xor
arpl
xchg
sbb
sbb
xchg
lahf
mov
ret
fwait
lcall
add
mov
xor
orl
testl
icebp
js
iret
add
frstor
adc
clc
and
sub
mov
iret
sbb
jmp
pop
sub
sbb
pop
and
adc
xor
cmc
add
out
sarb
sbb
push
dec
loopne
lock
sti
sub
inc
jnp
push
lahf
fildl
stos
xchg
xor
and
sub
fwait
fs
push
adcb
ret
nop
out
test
mov
fs
fnstenv
add
loopne
lcall
cmpl
int3
or
inc
mov
dec
cli
fidivl
out
jo
mov
pop
jno
cmp
push
mov
adc
lret
out
mov
leave
rolb
shll
fiaddl
dec
inc
add
lock
sti
scas
add
inc
addl
jg
fnstenv
and
sbb
dec
add
jp
or
push
fiaddl
add
add
pusha
lods
xchg
add
pop
mov
pop
xchg
andb
lret
dec
add
shll
in
sub
add
jmp
inc
sbb
add
inc
mov
ret
clc
std
cmp
pusha
sti
or
cmp
aaa
subb
sbb
imul
pushf
inc
pop
sub
cmp
cmp
lret
lods
sbb
xchg
xor
jmp
fisttpll
inc
push
dec
add
adc
test
pop
jle
xor
sub
jmp
inc
mov
adc
orb
fs
xor
mov
push
and
ror
cmp
xchg
mov
xchg
mov
nop
inc
fisubrl
mov
xchg
sub
popf
arpl
mov
mov
dec
adc
inc
std
outsl
mov
and
jge
pop
das
add
jnp
xor
int3
mov
dec
mov
lods
repz
or
sarb
leave
xor
sbb
mov
add
add
in
inc
sbb
testb
or
mov
fs
mov
jns
xchg
adc
rep
pop
xchg
add
push
cmp
xor
mov
add
jae
mov
cmp
mov
xchg
in
fwait
inc
lock
xchg
les
pop
mov
repz
add
adc
sbbb
xor
dec
das
or
cmp
repnz
dec
or
sbb
adc
mov
aaa
imul
push
sti
iret
repnz
pop
loop
or
ljmp
or
mov
dec
dec
or
outsl
adc
cmp
sbb
push
and
xor
push
and
and
add
push
inc
pop
add
add
ret
jns
pop
jnp
add
sbb
cmp
dec
mov
push
test
flds
lcall
xorb
xchg
jecxz
scas
push
and
call
insl
enter
mov
dec
cmp
and
add
xor
das
and
int3
push
lods
into
xor
mov
push
jns
xor
je
xor
mov
mov
or
fdivrs
cld
mov
inc
push
and
and
push
fwait
sbb
repz
lahf
lcall
and
ret
dec
mull
add
lahf
rorl
add
xchg
sub
cmpb
inc
scas
xchg
pop
mov
fdivs
pop
cmp
inc
add
addr16
mov
adc
mov
mov
xchg
les
jmp
or
add
vmread
in
jmp
mov
movsl
mov
push
add
iret
leave
lret
into
sbb
pop
fadds
dec
ljmp
and
lcall
sub
mov
pop
push
sbbl
fdivp
add
mov
inc
dec
mov
or
xchg
fistpl
clc
xor
cmpl
add
arpl
xchg
jbe
add
sub
sbb
pop
lds
pop
inc
rclb
in
jae
pop
cwtl
pusha
add
push
fwait
aad
xor
adc
xor
sbb
shll
das
repz
xlat
mov
ljmp
pop
mov
mov
adc
sub
dec
xchg
shlb
add
jg
je
mov
push
into
fwait
add
jbe
xor
sti
lcall
mov
nop
inc
and
add
cmp
add
lcall
dec
jnp
push
sbb
ds
pop
ret
mov
scas
fs
aas
add
push
imul
dec
test
mov
inc
in
in
jae
dec
imulb
add
dec
push
pop
loopne
and
mov
sub
sbb
pop
mov
push
or
mov
roll
sbb
pop
ret
pop
add
adc
add
push
scas
xor
lock
jo
daa
xor
scas
popa
adc
mov
iret
lods
test
sub
scas
in
andl
xor
out
clc
push
imul
lea
lds
adc
mov
call
push
scas
jb
push
xor
push
cli
and
je
ret
add
sbb
inc
xor
add
and
mov
push
outsb
mov
push
lret
and
cwtl
dec
push
icebp
pop
loopne
dec
rcl
shll
cmpl
pop
cmp
cmp
inc
pop
add
pop
pusha
pop
mov
add
jle
xchg
call
sub
push
mov
mov
xor
nop
push
data16
cmpb
rorb
mov
inc
pop
add
add
enter
mov
clc
push
rcl
sbb
jl
mov
dec
sbb
inc
stos
sbb
pop
mov
dec
add
and
xor
and
push
pusha
inc
and
cwtl
jb
adcb
and
scas
daa
push
lock
cmp
and
push
xlat
insb
arpl
xor
pusha
sarl
iret
pop
add
addr16
xchg
ja
cmp
xchg
mov
js
into
popf
lock
add
fwait
aas
sbb
stos
or
cmp
add
and
xor
add
xor
pop
xchg
cbtw
jno
xor
push
loopne
int
mov
pop
lret
add
ret
xlat
pop
xchg
push
mov
and
js
fwait
jnp
xchg
xor
repnz
movsl
sti
mov
cmpsl
out
insb
mov
mov
dec
inc
and
cmp
mov
sbb
pop
and
mov
stc
clc
xor
jmp
adc
push
inc
pop
jnp
aaa
push
xchg
push
xor
pop
inc
mov
mov
insb
and
mov
call
add
and
in
dec
insl
fs
sbb
mov
and
mov
add
mov
pop
adc
sbb
mov
add
or
dec
pop
lea
add
jg
lods
hlt
inc
je
push
adc
dec
sub
push
push
inc
dec
lods
icebp
arpl
stos
mov
repz
cmp
add
xor
xor
add
dec
inc
inc
push
push
add
add
js
xor
and
popa
jae
arpl
adc
addr16
push
push
sub
mov
popf
add
sub
mov
shlb
insl
shll
loop
sbb
push
xor
inc
adc
fcoms
mov
lds
add
adc
dec
add
aas
pop
add
outsl
ja
push
test
dec
add
add
pop
mov
dec
jae
sahf
enter
mov
outsb
movsb
sbb
repz
jae
dec
add
sub
test
iret
add
cwtl
pop
jecxz
test
test
mov
repz
imul
pop
push
stos
test
jns
sti
add
cmp
test
loope
adcl
stc
mov
inc
rclb
add
pop
sub
mov
inc
mov
cmpsl
dec
insb
shll
cmp
push
push
inc
inc
shll
pop
lret
add
pop
insb
scas
mov
xor
dec
and
ret
dec
add
fistpl
jo
fldenv
and
cltd
add
iret
cmpsl
mov
imul
shll
mov
add
mov
into
add
sbb
push
mov
cmp
push
dec
scas
repz
pop
cmp
or
and
mov
add
pop
dec
dec
add
arpl
mov
jb
mov
inc
mov
dec
repz
adc
mov
xor
stos
dec
gs
xchg
nop
push
repnz
wbinvd
pop
cld
enter
gs
jb
and
mov
jl
lea
add
lcall
daa
add
ret
call
insl
popa
js
adc
rcll
xchg
mov
cmp
addb
lahf
push
jmp
add
outsb
out
lcall
mov
sarb
add
xchg
loopne
lods
sub
mov
out
pop
pop
ror
inc
pushl
xchg
shll
push
inc
mov
enter
cli
popf
add
push
and
stc
dec
dec
sbb
add
or
lods
insl
gs
inc
xchg
cltd
push
sub
stos
lahf
cwtl
sbb
pop
push
add
insb
jne
int3
and
inc
xor
mov
pop
pop
dec
movsl
xchg
fwait
scas
cwtl
add
flds
inc
test
ds
lret
in
pop
outsl
add
in
mov
inc
into
aas
lods
xlat
push
pop
xor
mov
imul
inc
cmp
add
divl
xchg
push
jge
je
cltd
add
out
and
lret
outsl
mov
shl
lcall
sbb
mov
test
fiadds
cli
sub
mov
aas
daa
mov
pop
and
sub
stos
add
pop
cmp
adc
xor
adc
sahf
add
stos
xor
xor
xorl
add
das
and
add
cltd
jae
mov
xor
arpl
fwait
push
scas
outsl
jecxz
leave
dec
push
das
adc
movsl
clc
mov
and
mov
or
add
pop
das
xor
inc
inc
repz
lds
mov
push
push
inc
push
add
ret
sbb
scas
push
cs
enter
inc
cmp
jge
sbb
ret
push
or
pushf
mov
fstp
rcll
push
push
imul
push
mov
sub
mov
scas
jb
sub
push
add
add
adc
inc
pop
cmpsb
push
add
add
gs
outsl
add
mov
mov
int3
add
push
add
jg
add
dec
sub
add
arpl
mov
cmp
add
dec
outsl
popa
mov
add
mov
test
mov
arpl
shll
dec
pop
mov
add
lret
dec
inc
mov
push
dec
negb
add
mov
xchg
mov
inc
jne
xchg
fcmovnbe
cmp
mov
cmp
add
inc
pop
cs
push
lcall
pop
push
add
imul
scas
lods
sbb
jae
push
adcl
mov
cmp
inc
arpl
sub
out
jle
jl
mov
popa
clc
lret
arpl
int
ret
pusha
adc
ss
push
push
push
enter
test
add
dec
shll
cli
sub
cmp
stc
iret
cmp
push
dec
push
inc
inc
push
hlt
add
aam
pop
into
and
sbb
add
mov
inc
dec
lea
inc
push
push
push
enter
add
cmp
jb
sbb
call
add
cmpb
push
push
cmp
sub
pop
add
call
sub
mov
sbb
add
add
call
mov
xchg
push
shlb
out
dec
sbb
dec
and
fs
inc
inc
push
cld
sti
data16
test
dec
fstpt
xor
or
pusha
or
cmpsl
or
adc
mov
pop
repz
add
lds
add
daa
mov
push
mov
iret
mov
rcrl
inc
add
sbb
xchg
sub
sbb
pop
ja
push
sbb
push
add
sub
je
xchg
ljmp
ret
add
bound
sbbl
lock
mov
inc
jle
or
out
mov
leave
shlb
pushf
aad
fmull
psraw
into
icebp
stos
mov
mov
mov
mov
add
sub
mov
hlt
leave
pop
jle
shr
imul
lret
fiaddl
lahf
sbb
data16
dec
jmp
sbb
push
loopne
sbbl
lret
push
mov
dec
mov
add
add
adc
fisubs
mov
mov
and
cmp
xchg
pop
inc
add
mov
cmpsb
enter
sub
jmp
data16
pop
lock
repnz
es
icebp
mov
or
xchg
sbb
stos
or
fnstenv
aas
mov
mov
in
andl
add
add
jp
push
mov
and
gs
cs
fiadds
addr16
mov
or
mov
repz
cli
add
add
mov
sarb
arpl
jne
or
cltd
sub
xor
movsl
sub
dec
add
push
data16
or
cltd
cmp
out
sub
rorl
dec
movb
ret
push
xor
or
cmp
mov
add
ficompl
ja
in
pop
xor
lea
xor
movsl
lds
push
xchg
mov
mov
push
dec
arpl
ret
push
pop
or
cwtl
popa
int3
adc
jmp
add
xchg
add
mov
sbb
insb
add
jecxz
je
inc
les
adc
in
add
pop
add
add
sahf
leave
mov
mov
sbb
sub
lea
mov
pop
mov
lods
popf
into
jns
push
daa
push
mov
mov
movsl
cmp
aaa
into
shll
mov
push
add
inc
adc
xor
push
add
ret
or
add
mov
mov
shl
lods
das
and
shlb
and
movsb
ret
push
rcrl
sbb
popa
mov
mov
add
sub
daa
push
add
sahf
pop
add
ss
pop
outsb
xor
push
sahf
add
add
inc
enter
imul
sbb
add
jge
jbe
dec
bound
outsb
scas
out
push
jle
iret
pop
pop
cwtl
jae
sub
sti
decl
sub
mov
mov
sahf
aad
jno
mov
push
or
mov
and
mov
or
sub
mov
and
in
incl
test
xor
add
or
movsb
je
and
pop
jne
leave
decb
or
adc
addb
fnstenv
xor
xchg
xor
sbb
mov
jl
ja
dec
jne
pop
dec
popa
cmp
mov
repz
jmp
les
fnsave
call
scas
idivb
and
xor
icebp
pusha
arpl
pushl
add
pop
je
int3
ss
sbb
out
mov
mov
push
ljmp
mov
sbb
cmp
fstl
sar
add
push
push
jle
mov
cltd
sahf
mov
add
lahf
lock
xchg
stos
add
orl
je
add
xchg
and
aad
mov
fs
mov
inc
jae
out
add
ja
sti
adc
add
insb
testl
add
sti
push
fiadds
jg
jae
dec
addr16
lock
cld
loope
add
mov
sub
out
clc
xor
cmp
add
stos
push
add
push
cmp
jne
stos
lea
mov
lds
pop
sub
lods
ljmp
psrad
inc
es
out
mov
or
cltd
int3
or
mov
addl
inc
xor
push
addl
cmp
jmp
xchg
clc
mov
add
jp
test
jmp
and
hlt
and
fiaddl
mov
movl
sub
pop
ret
xor
cmp
mov
dec
mov
enter
add
out
mov
fdivr
sti
mov
add
add
push
adc
lea
scas
sbb
sub
sub
lock
push
fbstp
popf
std
mov
icebp
cmpb
jnp
mov
add
rcrb
mov
xchg
fldl
and
push
sub
add
inc
push
mov
out
add
cmpsb
jns
and
scas
fisubrs
int3
repz
test
add
sub
push
cs
pop
mov
repnz
and
adc
imul
push
outsl
xchg
push
lods
dec
sub
dec
sub
sub
mov
shll
lods
iret
mov
sub
pop
stos
sbbl
mov
push
fucomi
sbb
mov
lods
dec
test
mov
or
jae
and
mov
je
cmc
jle
fucom
cli
mov
add
lods
or
mov
xchg
cmpsl
mov
jnp
and
lds
adc
pusha
mov
jae
sbb
push
pop
sub
mov
mov
jns
push
add
cmp
jmp
dec
add
jno
add
movsb
add
inc
push
sbb
cmp
xchg
mov
rcrl
or
add
pop
mov
add
adc
or
cld
fwait
add
xchg
or
xchg
push
mov
push
imul
pop
mov
push
je
inc
cmp
mov
ds
add
inc
adc
cltd
cmp
repz
nop
xchg
shl
scas
sub
jae
add
lea
fisttpll
jmp
inc
ljmp
cmc
dec
lods
jae
test
add
test
pop
add
jle
sub
iret
mov
jl
incl
rclb
dec
adc
xor
cs
mov
mov
pop
loope
cmpsl
mov
sub
call
adc
out
pop
mov
jg
popa
mov
scas
jl
icebp
loop
dec
cmp
push
adc
add
xchg
xlat
add
pop
push
add
aaa
add
push
mov
fwait
xorl
lea
mov
xchg
iret
jl
jp
adc
dec
imul
out
int3
sub
call
sub
sahf
lea
xor
movsl
cmpsb
add
enter
push
xchg
push
nop
add
mov
pushf
mov
push
sar
loope
movsb
add
push
push
call
aam
sub
sti
add
add
or
add
cmp
and
inc
test
or
adc
mov
enter
mov
xor
out
sahf
dec
xchg
push
dec
mov
add
adc
xchg
imul
pop
aam
mov
jmp
outsb
cmp
mov
add
cmp
jae
cld
mov
daa
mov
jns
xor
pusha
xlat
mov
add
cmp
decl
scas
jae
xor
mov
inc
push
lret
popf
sub
jne
mov
fdivl
adc
je
cmp
mov
repz
add
cmp
adc
test
push
push
iret
test
pop
adc
lcall
inc
xchg
push
std
rolb
cs
mov
inc
mov
mov
xor
mov
xchg
test
inc
lds
adc
js
ljmp
inc
out
sub
dec
testl
arpl
adc
mov
or
lcall
loopne
jnp
jmp
add
add
icebp
add
divb
lods
add
adcb
rcll
lret
dec
andl
push
lcall
repnz
sub
sbb
cmpsb
das
add
out
mov
add
sbb
popa
xor
inc
jecxz
insl
ss
push
xchg
add
mov
pop
hlt
in
add
enter
lcall
push
sti
mov
add
mov
popf
pop
dec
dec
arpl
sub
aas
dec
filds
add
push
dec
scas
cmp
inc
jecxz
gs
mov
jg
push
icebp
xchg
les
fildll
add
adc
dec
jle
rcll
dec
and
fwait
ret
add
lcall
cmp
les
rep
adc
jno
xchg
add
cmp
inc
mov
outsb
mov
sbb
popf
movsl
insl
mov
adc
or
xor
pop
sub
push
mov
cli
mov
add
shr
cmp
mov
mov
inc
jns
or
jle
pop
dec
movsl
xchg
pop
hlt
es
mov
gs
sub
repnz
cmc
jg,pn
pushf
add
loope
je
mov
dec
cld
lcall
in
outsl
add
ret
xor
dec
mov
std
mov
xor
xchg
stos
mov
mov
ficoml
xchg
push
jg
mov
dec
adc
sbb
shr
ret
hlt
fnsave
mov
in
xor
add
xchg
mov
sbb
cmp
adc
fidivs
sub
test
std
and
xor
mov
leave
ret
push
movl
adc
dec
push
mov
into
and
in
sti
adcb
lahf
fdivrs
mov
mov
repz
pop
jmp
or
add
pushf
shl
push
insl
mov
add
imul
jne
mov
in
push
sar
test
sub
mov
rorb
or
imul
add
add
dec
mov
add
or
or
jb
add
ja
sbb
sarl
adc
add
loop
sub
es
add
mov
push
sbb
push
add
or
cs
push
add
and
push
shl
xor
dec
add
add
testl
jp
xchg
jnp
loope
and
pop
mov
add
push
cld
js
aam
ds
loope
add
or
inc
lock
ficoms
pushf
adc
and
popf
pop
bound
popa
pop
cmp
mov
xchg
pop
sbb
inc
nop
inc
mov
mov
andl
jae
inc
fwait
je
inc
pop
add
sub
dec
in
add
int
inc
push
loop
add
and
adc
fiaddl
pop
outsl
shrl
mov
nop
and
jecxz
xor
cmp
jne
popf
aam
add
xchg
cmp
add
ds
sbb
mov
cmp
push
sbb
inc
cltd
shlb
adc
xor
mov
jecxz
js
aas
loopne
pop
lret
addl
pusha
and
and
cmp
mov
xor
jb
das
mov
pcmpgtd
pop
sbb
les
mov
fcompl
sbb
js
stc
ss
gs
jns
call
sbbl
sub
incb
jae
push
jp
xor
in
ds
push
loopne
pop
mov
scas
mov
lds
cltd
or
cmpsl
xchg
jp
jne
jge
adc
movsb
inc
fmuls
add
cmpsb
std
imul
gs
mov
sub
mov
ret
and
mov
xor
jbe
orb
mov
sbb
mov
jmp
negl
mov
imul
ret
xlat
add
cmc
xchg
jnp
das
add
lret
ja
add
pop
jmp
add
push
push
push
mov
mov
adcl
fmull
add
lret
daa
ret
stos
lcall
dec
mov
cs
popf
movsl
add
cltd
fs
jne
fidivrl
imul
adc
pop
cmc
lea
mov
and
add
push
sbb
daa
popf
add
push
repnz
add
addr16
roll
leave
inc
add
mov
mov
int
or
sub
mov
pop
xchg
jecxz
jo
jl
jp
adc
push
xlat
dec
sub
sub
aam
adc
add
mov
adc
fsubr
cs
pushf
and
aaa
mov
daa
push
jns
jbe
int3
mov
repnz
pop
mov
std
dec
sub
mov
inc
adc
mov
mov
cld
jb
jl
int3
mov
mov
leave
xchg
push
sbb
dec
lods
add
mov
mov
scas
testb
loop
sahf
movsb
and
mov
and
sub
lods
scas
cwtl
and
xor
inc
xor
xor
xchg
fnstcw
xor
cmp
cwtl
in
add
roll
sub
lret
decl
and
xor
jb
pusha
mov
cmp
xor
fs
push
les
sub
in
sbb
sbb
loopne
cmp
or
sub
and
sahf
dec
or
adc
xor
in
and
inc
jg
jg
pop
int
mov
and
push
pushf
push
mov
jo
pop
sub
sbb
mov
adc
lock
xor
jnp
jmp
and
or
dec
jne
push
mov
fistps
mov
push
stc
pop
fsub
xor
pop
add
mov
adc
sbb
movsl
push
in
out
push
mov
dec
ret
xor
sub
and
aas
addr16
or
mov
add
cmp
shrl
ss
pop
push
add
jmp
mov
std
pop
repnz
sbb
lcall
mov
insb
mov
shl
add
dec
lea
jb
add
dec
or
sub
jb
mov
add
jg
cmpsl
jecxz
mov
loope
push
mov
int3
xor
pop
add
jmp
inc
fdivrl
mov
dec
je
adc
arpl
push
repz
xor
mov
mov
ret
into
mov
add
fildll
cwtl
add
mov
fdivrs
popf
adc
shll
or
fidivrl
add
add
stos
fnsave
jae
ret
cmc
add
outsb
adc
xrelease
sarb
or
clc
jl
mov
imul
add
shlb
adc
divb
decl
ret
inc
or
pop
jb
fnstenv
xor
dec
ret
xor
lea
lret
mov
push
pop
sbb
cltd
and
scas
les
iret
mov
mov
ja
xor
ficomps
jg
xor
and
stos
dec
mov
or
mov
xor
cmovo
dec
push
dec
add
adc
dec
mov
mov
add
sbbb
push
cs
add
push
mov
lods
popw
add
or
cmpsl
mov
mov
mov
lds
incb
test
mov
jno
xchg
jb
repz
mov
xor
push
pop
xor
mov
fs
lods
hlt
push
or
add
imul
push
fdivrp
lock
pusha
inc
cwtl
jmp
lret
mov
push
in
sub
cli
or
push
add
cmp
push
xor
add
call
and
frstor
pop
lods
idivl
leave
mov
loop
jp
sbb
add
cmp
ret
add
xor
push
cmp
ret
add
cltd
int
hlt
fidivrl
sbb
pop
sbb
mov
call
je
lods
add
testl
shll
movsl
jmp
out
xchg
sbb
cmc
xorl
add
lods
jno
jmp
clc
xor
or
push
cmp
test
xor
into
call
dec
xchg
leave
dec
mov
mov
into
xchg
add
pushf
addb
xor
mov
push
push
adcl
movsb
xchg
mov
pop
dec
cmp
pop
filds
cmp
inc
mov
xchg
stos
inc
add
push
repnz
jne
cmc
fadds
mov
xor
or
add
jl
add
push
lock
test
pop
mov
mov
add
pop
sti
insl
out
inc
add
or
and
add
add
cmp
je
mov
pushf
shrl
add
out
sbb
cmovae
or
push
pop
push
mov
add
call
mov
out
aaa
mov
testb
or
je
lea
add
push
ds
or
add
adc
cli
imul
or
mov
jne
jge
cltd
add
out
rcrb
mov
pop
andl
adc
adc
ja
sbb
add
je
ljmp
pop
cwtl
or
sub
fmuls
in
adc
pop
in
andl
jne
or
pop
lcall
sarb
and
pop
repnz
lods
add
inc
jno
sub
imull
pop
add
mov
add
jmp
mov
push
or
loope
sub
cmp
jae
sub
add
xor
inc
loop
and
mov
test
mov
add
xchg
sub
jbe
flds
add
pop
inc
or
aad
add
sbb
add
int
outsb
or
cld
mov
xchg
or
fs
mov
xor
lock
add
jnp
adc
or
daa
or
ret
add
xorl
or
ret
pop
xor
mov
call
std
gs
jae
cmp
aam
lret
mov
in
leave
sub
cmp
mov
add
icebp
divb
push
arpl
loopne
je
test
xor
mov
es
inc
loopne
ret
out
mov
cmp
cli
pop
in
and
add
repz
pop
daa
iret
jmp
std
sub
ficoml
adc
sbb
add
xor
cs
dec
and
pusha
rcrl
incb
fdivl
jecxz
pop
add
add
or
sbb
jmp
call
sub
push
push
or
jmp
add
or
jne
hlt
testl
fs
dec
leave
inc
add
or
cmp
inc
mov
aaa
add
jbe
dec
scas
xchg
lods
lret
iret
mov
les
repz
inc
nopl
xchg
das
pop
mov
jp
jae
pop
cmp
add
adc
or
push
or
or
aas
jae
pop
cmp
lsl
pop
sti
rcll
ds
add
xor
decl
mov
xor
stc
or
sub
push
lods
mov
mov
xor
andl
mov
mov
orb
daa
mov
add
lcall
pop
sub
add
mov
xor
mov
sub
jno
jne
add
adc
push
push
add
add
call
adc
sub
add
ljmp
mov
push
pop
sub
dec
push
mov
rcll
fisttpll
testb
cmp
es
decb
sti
stos
push
add
jne
mov
push
add
push
call
sbb
add
adc
pop
outsb
add
sbb
add
jp
xchg
and
incb
test
mov
xor
and
xor
mov
push
lea
push
pshufw
jle
pop
xchg
cmpsl
daa
adc
pop
sub
sub
loope
hlt
lods
divl
adc
adc
push
or
add
cmpb
cld
mov
fisttpl
jae
sti
inc
movb
adc
imulb
adc
sarb
inc
add
add
jmp
lret
add
fwait
fs
pushf
lock
mov
xchg
adc
ret
into
xor
lahf
data16
adcb
or
mov
movl
cmp
in
lea
xchg
xlat
add
add
jmp
cmp
pop
or
jl
in
imul
repz
ss
pushf
adcb
sub
or
jg
dec
iret
jo
cmp
pop
gs
lret
shl
cs
pop
adc
add
push
push
ret
ljmp
sbb
add
push
inc
repz
xchg
add
mov
popf
pop
add
lods
jns
add
aas
push
inc
push
ret
das
xor
or
ficoms
inc
push
mov
cmpsl
test
xchg
popf
sub
adc
add
mov
adc
mov
mov
lahf
mov
lock
lds
popf
les
lea
adc
add
jns
inc
mov
xor
lahf
icebp
adc
dec
mov
push
ds
push
push
sbb
rolb
jle
mov
add
andl
pop
outsl
mov
dec
xor
dec
pop
dec
add
mov
jae
sub
push
call
sub
stc
inc
push
es
daa
mov
push
inc
pop
or
dec
pop
add
xchg
stos
xor
xor
ja
pop
jbe
jae
add
int3
rorb
push
sbb
and
je
rcrl
fildl
push
pop
lea
jmp
dec
mov
sub
pop
pop
movsb
lcall
fldl2e
loop
outsl
aaa
add
push
push
lds
lahf
pop
add
loop
xchg
popf
pop
repz
ss
mov
clc
call
add
lcall
sub
lods
call
clc
not
test
imul
inc
push
dec
add
xor
push
inc
iret
mov
inc
leave
or
idiv
sti
inc
add
add
jmp
xchg
add
je
xor
xorl
mov
xlat
arpl
jne
dec
iret
mov
jo
lods
add
cmp
loop
add
jbe
add
push
xchg
sti
not
mov
xor
pop
out
repz
add
pop
js
push
jl
pop
arpl
mov
pop
out
mov
repnz
loope
dec
push
push
mov
test
pop
or
or
lods
stos
inc
test
divl
add
ret
lock
into
inc
add
out
push
std
dec
mov
sbb
sub
imul
add
inc
daa
push
jbe
sub
sti
fs
je
call
add
fwait
or
pop
pop
into
mov
pop
add
sbb
hlt
scas
out
jbe
jae
ficomps
pop
shlb
jno
add
add
shll
pop
adc
mov
adc
sub
sub
mov
scas
jbe
outsb
push
lahf
mov
jo
shlb
out
jno
arpl
mov
add
incl
movsl
cs
mov
decl
cmp
icebp
jmp
int3
cmc
sub
and
pop
orl
pop
mov
cltd
adc
addl
shr
mov
stos
jle
andb
mov
out
movsl
dec
add
dec
jne
adc
adc
push
dec
push
adc
mov
loopne
pusha
call
dec
xchg
dec
push
cld
adc
loopne
out
add
jmp
sbbl
add
lcall
add
cmp
repz
cmp
in
mov
inc
test
mov
add
add
mov
inc
inc
pop
cmpsl
mov
jne
add
shrl
push
ret
inc
add
lods
cmpl
jle
inc
ficompl
iret
add
fwait
adc
add
add
addl
add
add
pushf
insl
cmp
cvtdq2ps
cs
add
loopne
pop
iret
inc
js
add
aaa
fs
shr
in
outsl
jbe
std
jno
add
mov
out
mov
fsubrl
das
inc
add
jnp
and
sub
pop
push
mov
add
stc
xchg
cmp
adc
in
inc
cwtl
xor
lds
fwait
pop
xchg
add
push
inc
push
add
jl
or
mov
add
push
ror
mov
outsb
jle
jmp
add
imul
pop
outsl
insb
jae
in
pop
add
mov
jae
dec
xchg
adc
outsl
sti
dec
mov
xchg
stos
add
mov
ja
add
jo
and
repz
sub
popf
fnstenv
icebp
add
lcallw
dec
add
test
cli
mov
lods
mov
scas
sahf
notl
rcrb
and
outsl
mov
xor
int3
push
add
fiadds
or
repnz
jl
lret
lds
outsl
cmp
push
out
add
mov
adc
add
js
inc
scas
fistps
dec
xchg
cmp
dec
das
and
gs
sbb
out
add
xchg
sbb
add
lods
in
scas
cmc
push
sub
adc
xor
jmp
pusha
add
cwtl
sub
add
sub
pop
iret
cmp
jmp
cmp
dec
add
popa
lock
mov
push
inc
add
aas
jne
stos
or
fs
sbbl
sub
sub
mov
add
lds
out
sbb
dec
push
jae
mov
and
mov
inc
lret
inc
add
push
shrb
jo
add
out
imul
sbb
add
add
fists
inc
mov
je
jne
out
ja
cld
movsl
add
cmp
pop
mov
mov
or
cmp
adc
add
add
mov
lcall
jae
and
and
push
jmp
dec
add
pusha
addl
rcrb
xor
and
xor
xor
add
jne
pop
pop
lods
add
nop
aas
inc
add
mov
jae
xchg
or
push
mov
leave
xor
rclb
dec
jbe
or
add
mov
add
stc
adc
mov
repz
sar
fildl
jecxz
sub
mov
sub
outsb
or
or
sub
mov
dec
jno
cmp
jb
mov
inc
jae
insb
int
dec
dec
shll
add
push
add
andl
mov
jp
movl
fistl
xchg
cmpb
jnp
dec
mov
lret
add
dec
add
dec
addl
scas
or
inc
mov
imul
xor
adc
mov
xor
jnp
and
xor
sti
imul
push
add
push
push
push
push
push
jo
mov
cmp
xor
cmp
push
sub
add
or
or
add
push
das
add
outsl
aaa
stc
and
cmc
mov
sub
jmp
roll
mov
adc
jbe
leave
xor
pop
mov
add
jle,pn
cmp
add
iret
mov
sbb
rsqrtps
outsl
loope
adc
sub
cmp
sbb
inc
dec
sbb
add
mov
push
sub
dec
cmp
shlb
lods
inc
and
dec
shrb
test
repz
stos
add
leave
or
add
and
xchg
pop
add
outsb
jmp
add
arpl
cmpsl
aaa
add
mov
cs
xor
mov
jo
push
sub
shlb
add
cmp
pushl
pop
jae
adc
cmp
push
sbb
mov
rorb
sub
icebp
fwait
inc
movsl
add
call
popf
in
mov
js
jbe
add
add
sub
add
push
pop
push
clc
mov
xor
mov
sub
sub
add
and
orb
mov
sbb
lock
push
in
aam
inc
int3
inc
jae
les
mov
data16
or
or
or
or
or
sub
nop
insb
mov
jo
pusha
insb
push
insb
dec
jl
sub
and
and
paddsb
loopne
fdiv
rorb
rolb
mov
test
mov
test
jl
je
push
shrl
cvtpi2ps
dec
or
xor
cld
sub
dec
add
in
sub
in
loopne
inc
fdivrl
aam
ror
dec
enter
rorb
mov
pushf
dec
nop
dec
js
insb
jg
push
cmp
inc
int3
inc
int3
cmp
cmp
xor
xor
sub
sub
int3
sbb
sbb
or
jecxz
dec
cld
dec
mov
cmpsl
hlt
sbb
call
les
test
movsb
mov
xor
pushf
add
nop
lcall
addb
dec
insb
dec
push
pop
dec
pop
dec
push
mov
push
push
bound
lret
sbb
adc
adc
mov
adc
xor
das
cwtl
add
inc
or
insb
aaa
xor
jecxz
xor
xor
sbb
mov
push
add
sbb
mov
mov
pop
sub
add
cmpsb
and
sub
or
add
push
pop
sbb
xor
pop
movsl
add
sbb
add
sub
or
add
adc
mov
fsubs
movsb
sti
push
push
push
cmp
cli
dec
cld
ja
imul
push
imull
or
inc
push
sbb
mov
pushf
fisubrs
push
clc
mov
sub
inc
dec
loopne
sub
ljmp
add
jmp
pushf
or
dec
push
fmul
arpl
lods
testb
and
dec
add
or
pushf
je
push
cvtps2pd
loop
cmpl
int
jne
sbb
pop
push
cwtl
inc
jnp
insl
loopne
test
dec
insb
lea
jae
xchg
aaa
mov
push
inc
xchg
dec
jo
divl
inc
pop
lds
mov
popf
dec
cmp
ja
fcoml
jbe
ljmp
inc
movsb
ss
insb
rorb
pop
inc
imul
enter
mov
dec
jp
cs
xchg
jl
out
push
inc
gs
mov
mov
insl
xlat
icebp
mov
gs
fdivrl
and
jecxz
test
movsl
jae
mov
xchg
xchg
xlat
js
cmp
std
add
jns
fisubl
push
mov
sbb
in
pop
add
test
mov
push
xchg
dec
add
stos
mov
pop
add
adc
addr16
jo
dec
lods
ljmp
dec
dec
xchg
add
cmp
movb
add
es
or
push
jl
add
inc
jecxz
jbe
shll
xor
add
js
sub
rorb
mov
loope
mov
add
nop
add
jb
das
fistl
lea
cmp
dec
mov
dec
sub
sbb
dec
mov
push
mov
xlat
int3
fwait
push
inc
cwtl
jb
repnz
sbb
add
stos
shl
cmpsl
cmp
xor
jbe
ret
dec
ret
sahf
lock
jmp
push
divl
pop
inc
dec
cmpb
aam
leave
cmp
jmp
scas
push
add
and
loope
push
jb
movsl
int
fistpll
adc
sbbb
and
flds
or
adc
adc
orb
mov
xchg
pop
aad
pop
fistl
cmovbe
xor
or
add
and
add
repz
ret
addb
add
jecxz
or
jae
pop
cltd
call
sub
add
mov
mov
mov
mov
imul
mov
vpsubd
fwait
xor
movsl
add
rclb
add
push
lds
out
mov
or
jae
rcrl
xchg
adc
jecxz
add
mov
popa
cmp
mov
pop
cltd
add
pop
jb
es
test
xor
call
add
repnz
retw
or
push
push
and
lods
bound
mov
jnp
pop
pop
jbe
shrb
sbb
testl
sbb
out
mov
bound
dec
inc
fldcw
lds
jo
pop
sbb
insb
xor
cltd
add
xor
lret
adc
insb
add
imul
sub
sbb
pop
sbb
mov
inc
jp
aad
xor
mov
lret
cmc
ror
jne
mov
out
pop
hlt
add
sub
lods
test
dec
adc
and
shlb
add
pusha
stos
add
and
xor
outsb
add
or
add
aad
fldl
push
add
xchg
dec
icebp
cmp
loope
add
add
lods
adc
push
xrelease
insl
sbb
or
sbb
inc
add
dec
pop
inc
lods
dec
dec
mov
cmp
repz
cmp
sub
inc
inc
sub
test
jmp
loop
sbb
add
outsl
ret
das
js
mov
sbb
sbb
jge
adc
ja
movb
fldt
enter
jmp
adc
or
lret
shll
enter
add
iret
pop
into
sub
add
jb
scas
adc
lods
adc
add
shl
jne
outsb
aaa
aas
iret
dec
mov
jp
sbb
sub
and
xchg
and
xchg
or
add
and
shlb
repz
mov
pop
fs
pop
adc
inc
rep
push
dec
inc
jbe
xor
cmp
and
pop
fldcw
and
add
push
push
sbb
dec
mov
mov
push
or
icebp
mov
push
inc
or
add
add
dec
pop
outsb
mov
ds
dec
xchg
scas
mov
out
or
scas
das
xchg
fdivl
or
scas
jle
loop
jle
sarb
add
or
cmp
movsb
mov
push
xor
fsts
cld
sbb
add
ror
sbb
add
adc
xchg
sbb
mov
mov
jne
inc
adc
rcrb
sub
repz
pushf
push
out
mov
notl
mov
sub
jae
cmp
add
jecxz
adc
jge
add
pop
lahf
dec
fwait
cs
test
sub
inc
movsl
mov
adc
cmpb
outsb
movsb
xor
lcall
fwait
lea
aas
xor
pop
dec
add
pop
lea
mov
inc
xor
pop
add
out
lock
and
add
scas
sub
pusha
sub
pop
iret
lods
add
jns
mov
sbb
adc
add
fnstcw
pop
mov
jno
jb
aas
sub
and
stos
pusha
jmp
scas
mov
and
or
inc
imul
xchg
arpl
xor
into
or
xor
lea
xor
jae
mov
daa
push
mov
add
sbb
sbb
push
add
add
in
pushl
or
mov
out
ret
sbb
push
mov
lahf
insl
mov
xchg
sbb
into
fldl
pop
inc
ret
mov
dec
and
mov
jae
and
inc
outsb
mov
jne
pushf
sub
rclb
lret
mov
push
jle
add
popf
sbbl
jne
xor
jmp
dec
lods
ret
hlt
mov
lods
sub
pop
je
addl
decb
and
jbe
aaa
sub
mov
loopne
sbb
lds
mov
adc
inc
add
faddp
sub
dec
inc
call
push
push
push
push
ja
mov
js
mov
or
call
dec
and
add
mov
dec
pop
dec
ret
fsubrs
jno
mov
repz
add
aas
push
push
add
into
inc
and
cmpsl
xchg
dec
lock
push
xchg
push
mov
add
test
push
enter
addr16
sub
add
add
ljmp
repnz
sub
pop
dec
ret
add
in
jecxz
add
cmp
icebp
je
add
adc
add
mov
add
lcall
add
sbb
ret
xchg
mov
icebp
ret
cmp
jae
and
lret
cs
bnd
mov
jno
ret
mov
jmp
aam
jecxz
outsl
adc
ss
lret
add
gs
add
jbe
hlt
pusha
sub
mov
mov
inc
pop
mov
xchg
ss
test
add
add
adc
dec
lcall
pop
lret
inc
divb
movsb
adc
movsl
imul
jnp
pop
rorb
adc
cmp
cwtl
push
add
cmc
sbb
in
mov
jae
sbb
popa
add
or
jae
scas
les
dec
or
test
fwait
add
jae
test
mov
adc
ret
jb
mov
icebp
mov
add
jle
mov
lea
add
movsb
jnp
xor
xorl
inc
loope
ljmp
aad
pop
pushl
paddsw
add
js
jge
std
pop
push
jl
sub
add
add
pop
das
and
pop
in
aas
ss
outsb
mov
cmp
insl
inc
add
stos
dec
lea
add
call
push
cwtl
add
mov
xchg
movb
add
push
push
stc
mov
out
dec
mov
push
or
cmp
fcoml
and
sahf
add
jne
push
aad
popf
mov
jae
mov
xor
je
movsl
fnstenv
pop
lahf
stos
xchg
into
int
mov
sbb
xor
lds
mov
bound
mov
mov
add
jecxz
push
add
sbb
and
es
pusha
pop
xor
daa
lods
mov
xchg
push
pop
mov
sti
mov
and
fwait
mov
xchg
sahf
inc
stc
shrl
test
xchg
imul
aad
repz
pop
add
and
push
dec
xor
add
jbe
push
iret
test
add
cltd
out
outsl
add
shl
add
stos
imul
ret
pop
fsts
mov
cmpsl
das
inc
mov
into
lret
arpl
testl
xchg
jge
mov
sub
add
lret
mov
sub
dec
roll
inc
push
ret
add
jle
lret
popa
sbb
shl
imul
mov
pop
mov
bound
pop
lahf
add
sbb
sub
add
out
out
mov
add
int3
cmpl
ljmp
xorl
mov
add
ret
sbb
ds
sbb
or
add
or
pop
rcll
sar
mov
jns
jecxz
mov
pop
add
or
dec
add
mov
inc
add
and
dec
jo
mov
inc
jns
outsb
jae
sub
lods
add
dec
add
push
rorl
adc
adc
das
push
inc
mov
call
mov
inc
or
mov
push
add
stc
pop
rcr
leave
add
icebp
std
pop
jne
ljmp
mov
pop
and
mov
outsb
add
jmp
add
sub
stc
je
clc
inc
sub
push
xor
add
sbb
push
sbb
mov
sub
xchg
mov
add
leavew
pop
add
scas
add
dec
icebp
jmp
inc
imul
jp
mov
testb
leave
addl
aam
xor
out
lea
out
dec
mov
cli
add
out
scas
in
push
in
inc
add
or
bnd
xor
add
add
js
pusha
fstl
outsb
inc
push
icebp
ss
mov
add
mov
jle
xor
sub
push
add
mov
cmpsl
push
test
mov
test
add
test
xchg
lea
mov
pop
or
mov
fbld
fisttpl
add
stos
mov
sub
add
add
pop
jp
addr16
dec
lods
sbb
push
ficoms
std
dec
cld
add
xchg
jmp
js
add
xlat
stos
xchg
or
pop
pop
fiadds
stos
shll
sub
shrl
out
sbb
sbb
fcomps
add
call
xchg
test
ret
sub
mov
mov
jae
outsl
sbb
push
je
lcall
fwait
sub
mov
rdpmc
lods
test
inc
add
pop
mov
add
and
sub
rcl
pushf
push
mov
dec
add
dec
add
filds
adc
out
jb
shrl
mov
mov
pop
stos
pop
sbb
mov
test
cmpsl
hlt
fdivs
add
jg
cmp
sbb
push
sbb
mov
mov
and
dec
pop
aaa
add
pop
sub
jbe
add
mov
sbb
int
js
dec
cmp
push
add
xchg
or
cli
pop
xor
pop
inc
clc
pop
mov
cmp
jmp
pop
scas
rorb
sti
push
push
add
rcrl
jae
pop
mov
sub
push
jp
inc
or
xchg
mov
outsb
bound
sbb
pop
dec
sbb
and
cmpsl
pop
add
sub
cltd
scas
sub
dec
push
xlat
adcb
sbbl
xor
lahf
adc
outsb
mov
jnp
xchg
push
cmp
loope
add
dec
je
jge
push
add
add
scas
mov
xor
cmp
adc
mov
inc
repz
cmpl
and
inc
imul
and
add
push
jnp
mov
mov
andb
pop
inc
testb
dec
xlat
pop
imul
sub
dec
push
aaa
fimuls
sbbb
xlat
add
pusha
xor
test
sahf
gs
add
xor
and
stos
add
add
dec
addl
clc
cmp
and
gs
jle
mov
test
xor
fldt
mov
iret
es
aaa
add
pop
inc
lret
mov
subl
sti
test
add
pop
or
add
shlb
jnp
in
add
and
iret
push
cmc
add
adc
loopne
into
push
add
mov
pop
pushf
cli
imul
mov
sub
bound
sbb
std
add
mov
xchg
add
inc
push
inc
movsb
aam
movb
leave
and
inc
add
adc
movsl
daa
dec
dec
add
shrl
add
pop
and
dec
xchg
mov
adc
or
js
addr16
mov
pause
add
pusha
sbb
out
mov
xor
xchg
and
mov
ljmp
add
loopne
push
sub
mov
or
loope
fwait
push
xchg
add
sbb
sub
xor
cltd
dec
push
cmp
les
mov
cwtl
add
dec
movl
xor
jne
aaa
push
das
test
arpl
sti
or
movsl
movsl
xchg
mov
push
subb
sub
adc
pop
dec
push
ss
mov
xorl
pop
sub
cli
jle
xchg
xor
cs
xor
lock
mov
add
subb
push
sub
scas
push
xor
jne
lahf
add
adc
pop
mov
add
and
or
das
imul
stos
pop
lods
sub
sub
pushf
pusha
mov
ss
sahf
scas
aam
add
mov
fwait
add
cs
push
fldenv
xchg
mov
pop
mov
mov
cmp
jmp
inc
mov
shll
add
sub
aas
dec
mov
imul
arpl
cmpsl
mov
std
inc
nop
data16
add
jmp
cmp
or
xor
add
lea
je
out
and
leave
jg
jecxz
sub
aaa
mov
jmp
pop
lret
push
subl
sti
cmp
dec
sbb
mov
xchg
ret
shlb
mov
add
loope
cmp
outsb
dec
icebp
leave
insl
inc
testl
add
adc
or
xchg
mov
sbb
xchg
mov
jmpw
jne
sub
jae
pop
xor
mov
roll
je
cmpsb
stc
sub
add
aad
and
movsb
loopne
mov
sti
pushf
incb
push
fcos
int
scas
add
fisttpl
add
je
sbb
std
mov
jg
outsb
add
jns
jmp
lret
add
std
jg
cmp
lock
mov
xchg
add
addr16
ljmp
dec
sub
punpckhdq
pop
int
sbbb
repz
lcall
lret
insl
xor
dec
imul
test
fstpl
hlt
aam
divb
inc
or
shrl
out
loop
lods
stos
xor
inc
xchg
add
xor
jmp
and
mov
xchg
mov
jle
mov
add
sbb
mov
xchg
sub
adc
jae
addb
xor
outsl
or
and
add
scas
inc
mov
push
fcomps
dec
jae
pop
add
add
sub
adc
and
iret
push
roll
roll
lahf
out
mov
or
ss
leave
push
xlat
mov
xchg
pusha
cld
pop
jp
mov
fwait
subl
mov
pop
and
or
jecxz
add
adc
or
pusha
dec
xchg
add
push
push
call
rcrb
adc
push
mov
and
cmpsb
out
gs
dec
mov
xchg
outsl
sbb
mov
push
imul
pushf
inc
add
mov
xchg
add
scas
mov
cld
sbb
xchg
scas
outsb
pop
mov
push
lock
pop
fidivl
mulb
xor
mov
cmpsl
lods
sbb
mov
les
pop
inc
cmp
mov
push
push
adc
and
mov
rcl
mov
xchg
add
loopne
sub
mov
fldl
aaa
dec
test
incb
xchg
mov
sub
cli
fldenv
mov
xchg
call
xor
mov
cmp
add
icebp
jmp
mov
sbb
pop
or
add
sub
or
sbb
mov
add
shr
dec
jae
cmp
inc
xchg
sbb
xchg
mov
adc
sub
dec
dec
lcall
out
sub
mov
mov
in
stos
in
cmpsl
movsb
xor
or
fiaddl
jmp
addr16
fcom
daa
ret
add
nop
add
pop
jp
pop
call
or
fidivrs
cmp
scas
rclb
xchg
fsubrs
sub
mov
mov
cwtl
mov
std
fadds
mov
mov
cmp
les
call
enter
push
add
pop
push
in
mov
sbb
addb
xor
sbb
add
mov
lods
test
inc
pop
scas
movsl
xor
add
or
pushf
xor
cmp
sub
dec
fs
mov
adc
add
xchg
sub
fnsave
sbb
inc
add
push
cmp
mov
cmp
sbbl
dec
xchg
add
and
out
or
add
jo
or
shrl
push
jmp
add
enter
jb
inc
mov
mov
and
shrb
xchg
lods
jg
push
jae
push
sbb
and
cmpl
xor
negl
shr
and
add
and
push
shll
in
addl
loop
pop
inc
mov
xor
push
and
aad
mov
int3
mov
mov
inc
adc
lret
fsub
xchg
push
xor
pop
fmuls
mov
mov
lods
push
mov
xchg
movsb
cmp
cmp
jbe
add
add
dec
xor
add
add
add
add
inc
dec
add
ja
add
add
jp
add
pop
js
add
add
add
add
add
add
add
add
insb
insl
insb
add
inc
add
add
add
push
add
jno
add
add
add
add
add
push
add
add
add
jb
add
add
add
add
add
inc
xor
add
add
add
xor
add
add
add
add
add
cmp
add
aaa
add
jno
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
xor
add
add
add
dec
add
add
add
add
add
xor
inc
add
pop
add
cmp
add
push
xor
add
add
aaa
inc
add
add
push
arpl
add
push
add
add
add
add
add
add
push
dec
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
arpl
add
add
add
pop
add
add
add
add
inc
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
js
add
add
add
inc
add
add
add
insb
add
add
inc
push
push
add
inc
add
arpl
add
add
xchg
and
cmp
stos
loope
inc
xor
cs
mov
in
xor
aad
leave
ret
mov
mov
sahf
add
das
cmpsb
ja
add
dec
sarl
in
xor
loop
pop
arpl
and
movntps
mov
sbb
mov
mov
sbb
stos
roll
mov
ret
mov
push
les
ljmp
dec
mov
fmull
add
in
call
hlt
daa
add
cs
mov
add
sbb
mov
and
filds
mov
sub
jmp
push
xchg
shr
lods
add
push
divl
pop
push
movsb
pusha
repnz
sbb
push
lock
add
push
adcb
xchg
add
movsb
mov
mov
lods
iret
mov
add
add
mov
enter
inc
sarb
dec
xchg
lods
jg
jae
add
cmp
add
add
leave
cltd
mov
fldt
in
cmpsl
sbb
ss
mov
pushf
mov
add
push
push
repnz
add
dec
pop
push
fists
jecxz
and
xchg
mov
in
mov
add
jmp
jle
sahf
jge
mov
sub
or
lods
testl
jno
repnz
add
rdtsc
jae
cmpsb
aaa
les
ss
sub
push
adc
addr16
mov
adc
nop
jmp
insl
add
sti
mov
add
xor
sub
add
call
or
sti
fs
lahf
mov
mov
inc
shlb
ljmp
and
ja
sub
mov
dec
inc
das
push
jnp
bound
add
mov
add
inc
enter
mov
push
and
push
inc
sub
ss
dec
push
pop
jne
push
pop
leave
inc
jle
mov
test
lock
mov
add
xor
inc
push
das
push
jl
inc
dec
cmpsl
add
mov
std
add
xor
es
or
call
imul
push
xor
pop
jb
test
push
dec
inc
push
mov
jg
lahf
mov
mov
fldcw
add
or
sbb
loope
push
outsl
pop
test
test
cmpsl
add
mov
out
out
push
insl
mov
or
adc
inc
and
mov
test
cltd
test
leave
jmp
jecxz
cli
movsl
jns
aas
inc
mov
insb
jb
das
jecxz
scas
popf
mov
stc
aam
sbbl
add
xor
push
and
sub
add
lea
mov
cmp
mov
cli
aaa
leave
loop
and
cmp
add
jmp
enterw
stc
mov
cmp
popf
fldl
mov
jecxz
mov
add
pop
les
int3
add
mov
stc
or
dec
das
jg
popf
add
test
mov
adc
jmp
das
push
leave
mov
push
setg
adc
jnp
mov
rcl
jne
adc
pop
in
sbb
mov
dec
test
insb
or
les
xor
es
sub
add
add
push
mov
pop
cmpsl
leave
mov
pusha
add
stos
fcmovnb
mov
mov
add
std
cmp
add
mov
enter
divl
cmp
cmp
mov
sbb
cmp
add
jge
xor
pop
shrl
sti
addl
mov
das
and
mov
repnz
add
jae
mov
mov
add
sbb
xor
mov
inc
xor
push
dec
mov
dec
jne
jnp
adc
mov
fsubs
ljmp
push
leave
and
daa
stos
addr16
out
mov
dec
sub
pop
lahf
popa
xor
insb
repz
das
mov
mov
stos
mov
test
cmp
pop
push
mov
in
in
leave
je
jecxz
push
dec
cltd
dec
inc
add
test
mov
add
out
cmpsl
mov
adc
mov
test
dec
mov
pop
dec
inc
movsl
add
lahf
rclb
sar
add
xchg
andl
pop
mov
ja
mov
xor
daa
enter
sbb
jecxz
mov
pop
movsb
pop
xchg
jne
add
stc
mov
incl
mov
cmc
xlat
jecxz
sbb
pop
jnp
push
add
mov
stc
cmpsl
pop
lods
arpl
les
xor
push
cmp
popa
dec
ljmp
and
movsl
outsl
rol
fbstp
scas
inc
out
or
or
mov
psrlw
je
add
mov
pop
add
aaa
inc
xor
sub
out
jecxz
jae
mov
movsl
cmpsl
pop
dec
outsl
dec
mov
out
inc
pop
leave
popf
and
adcl
test
sub
add
scas
jne
add
sbb
cwtl
sbb
mov
jae
mov
insl
jnp
add
enter
xchg
repz
sub
xor
inc
lret
in
or
aaa
and
out
xor
mov
dec
xchg
sub
mov
xchg
jg
mov
inc
cmc
rcrl
fucompp
add
testl
xor
andb
mov
jae
dec
into
jne
add
push
gs
push
dec
mov
aaa
imul
add
enter
mov
mov
xorb
or
xor
inc
mov
ret
fldcw
xor
jne
shr
jne
repnz
push
in
sbb
push
jg
dec
add
dec
xchg
daa
push
stos
rol
add
mov
cwtl
mov
movl
mov
inc
add
inc
mov
jae
sti
jns
jne
push
loop
sub
scas
ds
int
push
out
popa
mov
add
cmpsl
das
mov
mov
push
test
add
popa
and
xor
repz
es
add
inc
scas
and
cmpb
mov
push
ror
test
sti
int
lar
xor
jae
inc
loop
pop
add
pop
jae
jo,pn
mov
cltd
enter
xor
xor
inc
rorb
add
scas
test
sarb
clc
mov
xor
add
stos
fistl
mov
lds
in
loop
add
cmpsl
jmp
inc
jge
mov
xchg
pop
adc
cwtl
mov
mov
xor
sub
outsl
lret
push
push
dec
pop
add
sahf
push
pop
ja
xor
jbe
jnp
movsl
repnz
push
scas
jmp
jno
idivl
sti
jae
stos
lahf
mov
mov
jecxz
out
jae
add
add
xchg
push
pop
icebp
add
ss
cmpsb
cltd
adc
bndstx
add
pop
jae
jno
push
jo
ret
sub
out
cmpsl
inc
mov
scas
sbb
es
stos
mov
or
data16
jle
repz
ljmp
add
push
rol
sarl
dec
adcb
xchg
mov
mov
push
loopne
inc
mov
repnz
fstpt
xlat
add
daa
es
lods
xchg
iret
arpl
mov
rorl
fildl
leave
loopne
push
in
repz
cmp
mov
inc
pop
leave
jae
pop
inc
lahf
cmpsl
mov
flds
dec
push
push
or
mov
and
cmp
add
popa
xor
and
push
add
push
xchg
or
mov
idiv
out
push
mov
into
xchg
add
cltd
cmc
arpl
xrelease
mov
add
loope
or
jg
adc
cltd
mov
mov
inc
mov
leave
mov
iret
fdiv
fistps
add
sub
fisubrl
inc
inc
add
ja
test
push
dec
mov
cwtl
dec
add
push
cmp
xchg
leave
mov
or
add
sub
dec
push
add
mov
xchg
inc
mov
movsl
pop
shl
sbb
add
aas
inc
pushf
or
data16
ljmp
add
sbb
lods
fcomi
out
or
push
add
cltd
jg
pop
mov
packsswb
repz
xchg
dec
sbb
push
inc
add
je
adc
fstpt
mov
add
dec
xchg
add
add
sub
bswap
in
mov
add
mov
jns
add
lea
lret
add
xor
rclb
add
aad
iret
xorl
inc
jae
sbb
add
out
add
dec
mov
xchg
mov
std
and
mov
xor
sub
lret
add
xchg
inc
mov
xor
add
push
loop
ret
xlat
mov
xor
inc
and
enter
inc
jnp
jne
fs
outsl
jecxz
sbb
iret
xchg
ret
cld
push
mov
mov
fstl
push
cmp
push
inc
pop
sub
mov
les
fwait
leave
adc
push
mov
mov
loope
test
ss
mov
lret
scas
aaa
gs
mov
mov
jl
mov
sahf
clc
cmpsb
stc
stos
pop
sbbl
cs
imul
mov
das
int
daa
cmp
jno
repz
jg
push
mull
inc
add
jae
shll
movsb
sbb
mov
test
add
dec
jbe
imul
fisttps
popa
and
ja
xor
fs
loope
add
jne
inc
adc
pop
add
add
mov
es
add
cld
jnp
add
jg
jge
jmp
add
jmp
in
sti
xor
shrl
jge
mov
sub
jecxz
ja
iret
xor
shll
cmc
jmp
pop
repz
xchg
leave
stc
inc
jle
fldt
pushl
adc
jne
push
arpl
add
aaa
or
cmc
xchg
sbb
faddl
xor
scas
repz
aad
lds
mov
add
jo
dec
mov
stc
sub
inc
jno
sti
add
mov
icebp
mov
aaa
leave
mov
xor
push
inc
sub
mov
mov
mov
xor
sbb
add
dec
add
jnp
pop
adc
hlt
jne
jl
cwtl
xchg
inc
add
add
mov
lret
inc
inc
call
cmp
pop
adc
mov
push
sahf
cmovne
out
mov
imul
outsb
pop
or
sub
jns
pop
test
lds
jmp
in
out
xor
sahf
push
adcl
int
movsb
mov
inc
add
sbb
jp
loope
shl
ljmp
add
sbb
inc
imul
mov
and
add
jecxz
mov
xchg
pop
pushl
add
add
dec
xchg
fidivrl
lret
xor
sub
xchg
push
mov
jnp
stos
cs
fstps
movsb
sarb
cld
jg
ret
jns
add
imul
sbb
sti
add
add
xor
pop
or
jmp
mov
xorb
xchg
mov
add
popf
sbb
faddl
add
xor
pop
jno
sbb
adc
ljmp
ret
push
dec
xchg
dec
mov
das
ret
roll
and
imul
std
sti
jns
sahf
test
repz
mov
push
jo
jge
test
adc
cltd
int3
mov
loope
or
ja
pop
inc
and
leave
mov
jbe
add
out
or
movsb
add
jecxz
addb
push
fwait
adc
cwtl
mov
cld
inc
add
popf
jnp
or
add
pop
out
cmpb
jo
divl
mov
repnz
imul
hlt
sub
add
sahf
push
mov
mov
xor
xor
adc
xchg
lret
xor
rorl
flds
xchg
cmc
mov
dec
xor
mov
xchg
sub
fildl
inc
cmpsl
enter
stc
mov
push
cmp
sub
rorl
inc
rcrb
sti
adc
cltd
and
jecxz
mov
mov
add
loopne
dec
testl
mov
scas
lds
cmpl
xchg
inc
aad
jp
cmpsl
jb
inc
lret
and
sub
das
pop
loopne
mov
popa
ljmp
xchg
add
inc
int3
jmp
fidivs
or
mov
mov
mov
shl
andl
mov
adc
movsl
or
mov
mov
ss
dec
add
scas
adc
add
add
lret
jg
dec
add
push
mov
sbb
and
and
repz
and
mov
add
pop
add
add
pop
mov
push
je
add
sbbb
scas
fucomi
repz
gs
inc
mov
aas
stos
int
and
mov
test
popa
mov
push
insb
or
divl
sub
movl
arpl
push
cmp
ffree
sbb
mov
pop
add
mov
call
jne
repz
cmpsb
movsb
loopw
pop
out
cmc
add
adc
dec
mov
add
fcmove
and
add
jmp
decl
and
add
sub
aas
nop
sbb
addl
adc
pushf
pop
push
and
iret
mov
pop
mov
arpl
pop
jp
add
xchg
lea
rorl
rclb
into
add
add
out
enter
mov
dec
cld
and
lcall
cmp
das
lods
icebp
sub
mov
jmp
cmp
sbb
mov
jae
add
xorb
add
mov
inc
jmp
sbb
or
add
sub
cld
scas
jg
sub
mov
lock
call
mov
mov
jae
daa
test
repnz
scas
sub
outsl
mov
loop
add
movsl
sbb
xor
or
sbbl
add
dec
mov
push
inc
add
call
push
pop
in
sub
dec
xchg
pushf
push
call
fadds
daa
xchg
popf
add
cs
xchg
call
ret
mov
mov
and
pop
pop
add
add
lcall
lds
int
lret
push
add
pop
test
inc
rcrl
sub
ficomps
sbb
cs
adc
mov
cmp
inc
lea
add
sahf
out
mov
sub
scas
sar
or
lret
mov
inc
xchg
mov
add
shl
mov
xor
and
inc
test
sarb
sub
movl
jmp
push
popf
divb
sarl
loopew
ja
push
mov
adc
call
and
leave
jge
adc
movsb
pop
mov
test
popa
jg
push
xor
loopne
das
xor
lret
int
add
cmpsb
cmp
push
imul
pop
ret
add
pusha
xchg
or
mov
sub
dec
add
notl
xchg
pop
fwait
pop
mov
stos
fnstenv
sbb
add
call
xchg
testb
mov
stos
xor
or
cmp
add
sub
inc
inc
push
mov
mov
xlat
test
rol
push
sbb
mov
adc
js
add
xor
mov
or
shll
les
inc
add
mov
test
add
add
ja
ljmp
and
pop
push
dec
jns
fistps
out
call
add
pop
mov
lret
xor
mov
out
push
inc
mov
xchg
mov
push
mov
test
aas
scas
push
jne
jae
jp
jnp
sub
sbb
stos
imul
cli
outsl
and
xchg
dec
add
arpl
xchg
cmpsb
fldenv
add
cmpsl
das
popa
add
mov
xor
pop
add
das
jne
scas
mov
mov
lods
xor
leave
xchg
or
xorl
add
js
add
and
in
mov
adc
pushf
mov
lods
mov
iret
adc
sub
xor
xchg
fdivrl
je
pushf
sbb
mov
out
jb
pop
inc
pop
add
rcl
mov
add
out
mov
fwait
rol
add
es
fstpl
clc
pop
mov
outsb
mov
add
rorb
mov
xor
add
movsb
xchg
push
mov
add
push
mov
mov
push
add
add
int
das
or
mov
pushf
out
mov
pop
add
push
pusha
add
mov
gs
mov
dec
xchg
or
xor
in
lods
pop
mov
add
mov
jmp
test
call
mov
lret
les
jge
dec
mov
outsl
and
fisttpll
es
movsl
daa
mov
test
add
arpl
movsl
sub
lea
pop
and
je
insb
cmpsl
mov
scas
jl
inc
and
sub
adc
adc
add
stc
das
sub
adc
jo
imul
jnp
sub
pop
push
add
add
jne
inc
ftst
ret
xchg
xor
dec
cmc
adc
push
add
push
imul
pop
or
repnz
jmp
shll
add
cmp
je
xorl
rcrl
sti
add
xchg
lea
inc
inc
or
mov
jecxz
lods
rcrl
cmpsb
je
add
pop
or
mov
loop
adc
arpl
xor
daa
add
rorl
aam
in
and
iret
inc
add
pop
mov
mov
and
loope
adc
or
dec
push
mov
popa
cmp
dec
mov
sbb
xlat
jmp
add
pop
inc
dec
mov
jo
xor
hlt
mov
push
add
mov
in
lods
ss
int3
add
add
sub
ror
pop
push
ret
lret
loop
pop
mov
pop
test
pop
cmp
inc
data16
add
sbb
adc
cld
lea
or
cmc
add
pushf
push
loopne
dec
xor
push
and
das
mov
mov
jb
adc
outsl
dec
and
pop
add
adc
jne
jbe
int
add
mov
or
pop
adc
xchg
pop
add
cmp
xchg
sti
push
add
stc
lcall
mov
repz
jb
ja
add
insb
pop
fmuls
add
sub
pop
push
add
jg
adc
fs
sysexit
mov
incb
mov
fidivrl
leave
pop
mov
aam
adc
push
xor
or
add
mov
jns
jmp
and
add
mov
fcmove
out
inc
push
xchg
sbb
mov
arpl
and
orl
add
jmp
ret
or
inc
pop
loop
dec
adc
mov
dec
xchg
pop
dec
jae
push
xchg
cld
or
lcall
insl
jne
insb
xor
fistpl
inc
in
mov
out
add
sbb
xor
pop
jae
and
cmpsl
cld
or
lods
lea
mov
mov
sub
inc
pop
add
inc
div
aam
ja
mov
pop
imul
cmp
lea
sbb
push
cs
push
fbld
and
push
or
dec
pop
push
xchg
movsb
lods
out
xor
stc
mov
push
and
cmp
je
pop
add
jg
push
shrb
adc
and
insb
aam
add
lea
add
testb
add
cltd
movsl
cmp
fxch
or
je
sub
loope,pn
stc
add
lea
pushl
mov
mov
sub
aas
mov
xlat
into
stos
mov
shrl
fstps
out
lret
cmc
add
add
ret
push
add
sub
mov
clc
jo
push
stos
add
or
popa
mov
cmp
call
add
enter
lea
xor
stos
mov
or
js
frstor
sub
push
xor
repz
mov
repz
sub
jae
mov
mov
jnp
out
mov
fadds
inc
add
xchg
imul
bound
dec
push
xchg
dec
add
sahf
in
faddl
adcl
push
scas
add
dec
es
xchg
sbb
movsb
loopne
sbb
or
jge
stos
aaa
push
push
sti
add
mov
mov
lds
movsl
test
cltd
in
add
pop
daa
jp
ficomps
add
aad
inc
loope
push
js
adc
call
pop
mov
mov
add
les
xchg
sub
fadds
cltd
inc
push
arpl
jb
loopne
outsb
fildll
push
pop
add
add
addl
mov
enter
push
loop
mov
push
add
cmp
mov
lret
add
jns
pushf
push
push
stc
xchg
fildl
int3
mov
orb
mov
and
repz
or
dec
add
mov
pop
xchg
aas
push
es
cli
add
cmp
jle
xor
fnstcw
aaa
add
fcoms
lods
stc
add
es
or
movsl
mov
jp
fsubrl
fimuls
jecxz
jbe
testb
lods
filds
adc
add
xchg
arpl
scas
ret
pop
mov
std
add
mov
js
in
lock
ljmp
loop
pushl
dec
fisttpl
inc
icebp
arpl
stos
dec
loopne
popa
leave
cmp
pop
xchg
bound
mov
add
mov
jmp
and
or
into
fildl
lods
push
repz
inc
iret
in
push
add
mov
xlat
add
js
sbb
xchg
mov
hlt
add
fbld
jno
popa
outsl
mov
sbb
dec
xchg
test
mov
pop
sbb
sub
jecxz
jmp
sbb
xchg
and
inc
inc
fisubrl
mov
push
mov
jle
div
mov
fwait
mov
cmc
xor
dec
dec
add
inc
jl,pn
lahf
pop
mov
scas
pop
push
imul
add
mov
cs
or
adc
fwait
out
scas
mulb
add
add
push
jl
orl
sub
fdivl
lock
call
mov
dec
mov
jae
test
fcmovu
inc
in
push
pop
outsl
add
mov
divl
shrl
mov
sbb
xchg
pop
sub
push
dec
out
mov
sbb
push
dec
scas
lea
jae
xor
inc
cs
rolb
stos
pop
inc
and
pop
mov
add
pop
adc
lea
stos
push
lret
and
in
outsl
inc
or
aaa
dec
cwtl
or
mov
sarl
xchg
xor
mov
mov
orb
dec
stos
hlt
lea
movsl
dec
insb
and
decl
and
push
mov
in
popa
adc
mov
sahf
loope
jle
add
xchg
mov
and
mov
pusha
cltd
push
add
xchg
sbb
loop
cmp
pop
push
mov
cmpsb
inc
pushf
mov
ret
add
inc
pop
bound
xchg
push
mov
test
hlt
pop
sarl
mov
mov
add
ja
pushf
loopne
fisubrs
cltd
dec
ja
jae
mov
jae
shl
xor
mov
cmc
scas
xchg
xor
repnz
repz
mov
xchg
add
add
stos
pop
and
xor
lcall
mov
fnsave
add
adc
add
sbb
push
shufps
popf
sbb
add
jmp
and
sarl
inc
popl
mov
dec
add
bound
cmpsl
scas
or
inc
add
pop
sub
into
shll
xor
add
pop
add
mov
dec
and
hlt
xor
push
mov
inc
fidivl
cmp
xor
rcll
add
xchg
and
mov
imul
push
push
add
push
add
add
push
inc
xor
dec
add
inc
add
add
add
jns
add
add
add
ja
add
inc
jae
add
add
add
add
add
add
inc
add
jns
add
push
add
add
add
add
add
add
add
add
add
add
add
arpl
add
add
pop
add
inc
add
add
add
dec
add
push
add
add
dec
push
add
xor
pop
add
add
dec
add
add
add
je
add
xor
jbe
dec
add
add
add
add
dec
add
popa
add
add
add
add
arpl
add
add
add
push
cmp
jb
add
popa
data16
add
imul
xor
add
arpl
add
dec
add
add
add
add
add
add
add
add
add
add
inc
pop
imul
add
ja
add
add
add
dec
jae
add
add
add
arpl
add
add
xor
add
bound
dec
add
add
add
add
add
add
add
push
push
inc
data16
add
inc
add
push
add
add
add
add
add
add
imul
add
add
dec
add
add
inc
add
add
add
ja
add
add
add
add
add
outsl
add
add
push
add
add
add
add
add
xor
jae
add
add
xor
jno
add
add
add
jae
inc
push
add
add
add
add
add
add
jne
add
xor
mov
sbb
shrl
mov
imul
push
aas
cmp
add
lret
lcall
rorb
jecxz
add
adc
cld
std
and
mov
xor
dec
daa
rorb
addb
add
sub
mov
aad
scas
das
add
ds
adc
pop
add
mov
and
pop
and
fdivrs
outsl
lods
loop
or
mov
add
stos
cmp
fildl
mov
xor
aas
adc
bound
sbb
add
sbb
outsb
sub
jp
aaa
pusha
fwait
lods
jae
push
jmp
scas
and
add
ss
add
mov
imul
sbb
lret
in
stc
push
sub
mov
inc
pop
mov
pop
out
or
cld
insl
stc
pause
es
cltd
ja
xor
add
pusha
xchg
adc
add
cmp
jb
push
mov
push
inc
xchg
add
xor
xchg
mov
inc
adc
xor
lahf
sbb
cmpsb
jae
inc
lcall
aad
pop
cmp
add
in
adc
sti
lods
xchg
xlat
inc
mov
gs
ret
loopne
add
push
xor
lea
push
mov
scas
aas
ret
and
cmp
mov
xchg
lret
lahf
stos
mov
push
lock
in
ret
adc
jnp
mov
cmpl
jnp
hlt
add
push
mov
sbb
push
inc
pop
pop
lea
ret
daa
add
loopne
in
sub
push
push
dec
mov
and
xor
inc
cld
push
add
xchg
sti
sbb
add
lret
rcrl
fadd
adc
das
push
cmpsl
repz
fdivrl
stos
leave
iret
fdivrp
daa
dec
add
and
ror
add
shll
mov
push
xlat
stos
xchg
dec
mov
dec
inc
loopne
push
popa
push
aaa
imul
add
sub
xor
jbe
mov
and
sub
mov
faddl
xor
out
stc
add
xchg
shr
xchg
pusha
mov
push
xchg
cmp
addr16
and
inc
pop
cmp
sub
xor
aam
add
mov
divb
add
pop
dec
cld
add
push
or
cli
aad
jnp
dec
iret
test
add
xor
and
mov
into
add
pop
fwait
xor
fadds
xor
rolb
push
insb
mov
aaa
xor
enter
push
push
lret
test
test
dec
ficompl
mov
add
inc
xchg
ret
push
or
add
mov
dec
addb
xor
sub
cmp
call
fistl
cmp
adcl
lcall
dec
mov
mov
inc
xchg
or
jae
jmp
or
sbb
fildl
sbb
movl
scas
mov
and
sub
mov
roll
call
aaa
iret
xor
mov
into
add
add
repnz
add
cmp
mov
fisttpll
add
xchg
xor
pop
in
xor
and
push
leave
ret
ljmp
hlt
lea
ret
mov
or
mov
sbb
mov
scas
xchg
loopne
or
push
or
mov
xor
mov
cmpsb
mov
sbb
dec
lods
or
add
adc
add
jl
fisttpl
sub
push
dec
faddl
mov
and
push
dec
dec
mov
push
pop
push
call
dec
sbb
inc
roll
fimull
xor
leave
dec
les
add
call
xorb
aad
xchg
sbb
mov
mov
in
push
imul
add
subb
mov
je
dec
pop
or
inc
and
or
popf
enter
pusha
add
mov
inc
insb
fmul
pop
push
push
add
cwtl
mov
add
ja
mov
mov
pop
pop
xchg
sbb
pusha
add
sbb
loop
mov
mov
mov
sbb
and
xor
push
and
push
add
mov
loop
mov
dec
pop
and
push
xor
mov
outsb
add
sbb
test
mov
push
stos
mov
in
xchg
ja
and
scas
test
xor
add
ret
aas
sahf
ss
mov
leave
dec
loop
sub
daa
add
add
add
mov
fimull
sub
addr16
mov
pop
add
sub
add
or
sub
add
adc
cld
repnz
add
cmp
add
sub
cmp
stc
les
inc
jno
pop
push
cmp
add
inc
clc
mov
sbb
fsubrs
dec
pushf
scas
pop
pop
jmp
pop
repz
xchg
mov
pop
test
test
add
pop
adc
and
add
mov
inc
ret
out
mov
inc
push
pushf
scas
fsubs
das
mov
loopne
rcll
cmp
subl
ficomps
out
sub
inc
add
cmp
pop
sbb
push
add
aad
xchg
add
clc
adc
or
add
add
add
int
and
adc
arpl
rcrb
mov
les
loop
push
cli
in
sbb
mov
cmp
adc
dec
adc
pop
cmp
outsl
xor
pop
mov
lea
pop
fadd
xor
sub
push
pop
adc
sub
repnz
pusha
push
fistps
add
mov
add
pop
cltd
mov
pop
mov
or
xor
scas
mov
sbb
sub
dec
add
repnz
sbb
xor
arpl
lea
das
cmp
pop
lahf
adc
sbbl
add
rcll
out
fdivp
push
add
inc
cmp
pop
inc
mov
popa
add
sbb
dec
rcrl
add
inc
cmp
mov
mov
mov
and
adc
mov
das
jnp
mov
jns
sti
sbb
ja
outsl
fs
je
push
add
cmp
ljmp
in
nop
sbbb
ss
sub
inc
sbb
sub
sbb
pusha
out
imul
icebp
mov
mov
ljmp
inc
in
mov
scas
notb
xor
add
mov
incl
in
mov
and
movsb
pop
and
push
sbb
cmc
dec
ret
mov
into
sub
jae
push
cltd
pop
inc
bsf
ljmp
add
ret
rcr
cmpsl
dec
lods
movups
and
dec
std
dec
mov
adc
imul
jno
lods
or
mov
popf
mov
add
fildl
lds
add
ret
add
dec
xchg
pop
push
and
lods
aaa
xor
xor
push
jmp
mov
inc
test
fs
cs
in
add
fld
push
jmp
pop
xor
push
or
pop
dec
filds
jbe
cmp
jns
adc
ret
popa
aas
mov
clc
push
mov
inc
xchg
stos
and
pop
push
jmp
outsl
sbb
add
lock
nop
fxch
sbb
dec
sub
dec
pop
ljmp
imul
dec
cmpsb
ja
push
and
movl
fsubp
mov
mov
pop
dec
push
mov
lret
push
xor
cmpsb
inc
imul
fwait
repz
jmp
shlb
inc
jae
rcll
mov
mov
sbb
iret
mov
sbb
xor
jbe
leave
sbb
fiadds
add
call
jp
mov
in
and
push
loop
mov
add
xlat
sub
testb
cmpsb
in
outsb
push
lret
push
sbb
fstps
add
aaa
iret
aad
pop
xor
xchg
pop
out
ljmp
cmpb
add
loope
sub
bnd
mov
inc
xorl
cmpsb
push
stc
fstps
and
add
out
cs
inc
lret
add
jmp
inc
dec
add
push
mov
pop
add
test
loop
xchg
fwait
mov
adc
mov
mov
or
jnp
or
add
cwtl
out
xchg
test
xchg
out
pop
imul
mov
lods
sub
xor
adc
mov
ret
or
shrl
repz
ljmp
lret
mov
mov
repz
je
xchg
mov
xchg
lock
enter
add
fistpl
inc
lods
test
cmp
add
cmpsl
imul
push
and
pop
mov
pop
out
and
dec
mov
sub
outsl
add
pop
jne
imul
or
xchg
jo
arpl
and
dec
adc
adc
aas
scas
sub
test
ror
adc
push
sub
arpl
add
or
stc
shr
mov
dec
mov
xor
clc
add
adc
cli
jp
cmp
std
xor
xchg
adc
loopne
decl
jp
and
adc
aas
cld
add
mov
inc
repz
es
push
sbb
popf
xchg
inc
xor
add
xchg
add
cmp
mov
xor
mov
cmp
sub
sbb
mov
xor
mov
pop
rorl
add
roll
sbb
sub
test
add
lds
das
sub
sub
pop
sub
lret
lea
out
cmp
imul
leave
xchg
xchg
xor
mov
xor
push
jnp
xchg
das
sub
movsb
mov
subl
stos
jp
add
xor
mov
jecxz,pn
xor
and
jae
mov
dec
call
add
iret
adc
add
rorb
les
lods
push
shll
mov
cmp
imul
shlb
xor
insb
pusha
sbb
jns
add
shufps
das
mov
dec
out
or
mov
ret
xor
cmpsl
or
jp
jl
paddw
leave
jne
add
lcall
cmp
sub
pop
xchg
add
push
push
xchg
push
xchg
call
and
mov
psrlw
shrb
mov
mov
add
test
pop
mov
mov
inc
cmpsl
sbb
push
movl
shr
add
push
or
lods
cmp
sbb
cmpsl
pop
sub
and
ja
jne
push
inc
mov
outsb
repz
push
xchg
or
fidivs
adc
jmp
daa
or
cltd
inc
mov
popf
pop
add
mov
pop
jmp
and
sbbb
repnz
add
cmp
xor
sub
or
icebp
pop
inc
je
add
add
mov
int
add
lret
push
dec
or
inc
add
jmp
dec
mov
repz
jne
xchg
add
push
in
mov
pop
pminsw
add
int3
jl
add
cmp
pop
adc
or
mov
es
jno
jp
sbb
mov
call
cltd
sub
jae
mov
sbb
shlb
shl
xor
ret
subb
push
add
xor
mov
add
leave
mov
or
mov
inc
dec
repz
inc
mov
insl
jae
sub
stc
lods
inc
add
das
adc
jg
fldl
push
sbb
dec
andb
fidivrl
outsl
push
mov
cmpsb
push
mov
sub
into
and
lea
repz
cmp
jecxz
pop
dec
add
mov
fisttps
mov
jp
mov
and
aas
adc
fwait
dec
sbb
dec
pop
fdivrs
sub
repz
repz
idivl
mov
push
pop
or
add
andb
dec
push
loopne
mov
sahf
cmp
push
xchg
mov
jmp
mov
cmp
add
cmpl
cmpsb
jmp
xor
jae
pop
jge
lods
xlat
push
test
jnp
jmp
or
mov
push
repnz
push
dec
sti
dec
xchg
add
sti
push
add
inc
in
cmp
aad
sub
mov
out
pop
js
iret
push
add
es
or
inc
cmc
sub
daa
cmp
push
jnp
ljmp
add
sub
mov
mov
adc
pop
push
inc
jnp
or
add
rcr
push
stos
sbb
add
cli
add
mov
add
adc
xchg
jae
int
dec
lods
clc
bound
xchg
push
js
dec
adc
xchg
ret
adc
dec
sub
add
add
insl
and
cmp
pop
inc
sbb
xor
sub
mov
pushf
pop
mov
ret
bound
jae
mov
pop
jmp
add
dec
push
outsl
lods
mov
ja
rorb
mov
add
lret
ljmp
xor
sbb
mov
dec
mov
jg
mov
or
sub
in
add
adc
cmc
ret
je
lods
cld
and
xor
mov
out
add
or
out
loope
add
pushf
add
sub
inc
movl
call
fistps
pop
adc
addl
sbb
add
cmp
scas
sub
jb
xchg
mov
pop
push
jne
mov
arpl
pusha
sahf
int
sub
dec
mov
and
pop
sub
mov
sti
mov
add
adc
pusha
pop
es
dec
cli
cmpsl
lods
mov
xlat
xor
cmp
imul
movsl
ja
lods
fs
rorb
fisubl
mov
ret
fs
nop
inc
add
xchg
push
enter
das
movsl
dec
xor
mov
mov
or
sahf
jnp
add
or
or
or
outsb
or
pop
pop
incb
add
nop
add
icebp
sub
rorb
outsl
mov
inc
mov
cmp
mov
stos
adc
int3
or
add
jg
loope
leave
arpl
add
mov
lret
sbb
mov
jmp
add
add
add
sbb
sbb
add
ret
add
je
test
popf
push
gs
xor
add
imul
sbb
jle
push
mov
popf
jg
lods
add
dec
sahf
pop
test
xor
xor
lods
stc
xchg
sub
mov
ljmp
sbb
mov
add
popf
jle
mov
add
popl
and
jno
add
fmul
push
sub
mov
sarl
call
jae
sti
sbb
xor
mov
fcompl
clc
push
add
inc
add
inc
mov
pop
adc
es
andb
xor
and
fldcw
mov
out
jbe
ljmp
mov
add
inc
ljmp
jmp
test
mov
pop
xchg
push
sub
and
xchg
jae
pop
das
jmp
mov
dec
int3
test
in
inc
test
jns
pop
xchg
mov
xchg
and
insl
lret
mov
inc
cmp
int3
scas
outsl
das
mov
or
push
fsts
aas
pop
mov
xchg
stos
imul
add
inc
push
loop
sbb
lret
add
int
inc
xor
inc
or
xchg
mov
or
jne
adcl
dec
and
test
cli
add
andb
mov
pop
add
or
sbb
mov
sbb
call
jnp
add
xchg
dec
pop
xchg
cwtl
cmp
cmp
add
dec
js
pop
dec
mov
inc
mov
jge
and
out
and
imul
adc
cmp
fimuls
jg
lahf
xor
je
jo
pop
mov
les
lds
icebp
sub
sub
mov
xor
xchg
sti
add
sbb
push
mov
push
js
jmp
in
dec
mov
xchg
testl
inc
push
mov
add
xor
enter
add
lret
cli
add
dec
pop
xor
rolb
dec
dec
mov
inc
test
or
imul
orl
xor
nop
leave
call
sbb
sub
cmp
dec
orl
cltd
dec
add
cwtl
or
es
imul
add
sbb
loope
mov
repz
and
jl
lods
xlat
adc
mov
xchg
js
add
sbb
dec
inc
xchg
add
aad
mov
iret
mov
shlb
mov
imul
sub
shll
jb
adc
ret
into
pop
clc
inc
sbb
rolb
movsl
out
dec
lock
jne
xchg
add
or
xor
add
leave
push
mov
fisubl
scas
scas
pop
cmp
pop
stos
jae
into
call
loop
xor
add
mov
cmp
repnz
mov
cmc
jg
and
mov
rcrb
cs
xor
das
sub
imul
pop
lahf
inc
ret
adc
punpcklwd
dec
dec
mov
js
mov
adc
and
adc
sbb
inc
dec
cli
mov
pop
add
sub
dec
das
dec
add
jnp
fdivs
out
and
adc
push
ret
add
mov
jecxz
lods
dec
jae
sub
adc
nop
mov
mov
jg
push
pop
adcl
faddl
and
jbe
test
sub
lods
push
push
xchg
add
test
sbb
int3
fistps
scas
lds
sub
xchg
insb
cwtl
push
mov
fyl2xp1
pop
push
ror
mov
sub
push
loopne
and
xlat
add
adc
aad
mov
paddsw
add
arpl
sub
push
add
stos
je
add
xlat
test
add
rorb
add
mov
out
mov
inc
mov
cs
ret
arpl
add
mov
add
inc
jge
or
pop
pop
pop
hlt
fsts
mov
push
push
shll
add
add
popl
sub
ret
imul
sbb
add
adc
mov
cmp
jne
add
xchg
push
mov
mov
gs
imul
add
into
jo
popf
test
mov
push
add
mov
mov
lock
add
mov
std
mov
mov
arpl
mov
inc
xor
sbb
iret
roll
cmp
push
xor
and
add
xor
pop
or
add
add
jl
push
mov
iret
add
adc
add
add
and
xchg
add
add
mov
cmp
sub
xor
mov
mov
les
cmp
jb
jne
scas
dec
fiaddl
pop
or
arpl
inc
adc
jecxz
dec
arpl
aam
xchg
adc
in
sub
pop
lcall
out
scas
sbb
push
mov
add
dec
inc
or
add
cwtl
je
cmp
adc
jnp
or
lret
sub
les
push
add
popa
fsubl
adc
incb
aas
subl
filds
data16
iret
add
pop
jmp
movsb
push
ret
pop
outsl
scas
and
cmp
lcall
jg
sahf
loop
lea
imul
sub
mov
or
cmp
inc
movsb
xchg
xchg
test
jp
mov
sahf
clc
mov
sub
mov
stc
xchg
int
fidivrl
cmp
arpl
es
or
aam
mov
xorl
add
int3
xor
fwait
jo
sub
mov
push
jne
daa
push
insb
xor
iret
jmp
lea
xor
and
inc
add
xor
enter
push
into
scas
push
dec
and
pop
inc
outsb
sub
inc
aam
add
rorb
push
adc
cltd
add
sti
pop
dec
xor
pop
or
xchg
mov
pop
sbb
movsb
sbb
mov
mov
repnz
jbe
jae
xor
cwtl
shll
inc
jno
jno
mov
insl
add
pop
fisttpll
add
lea
mov
push
mov
stos
and
mov
cld
push
or
dec
fdiv
sbb
dec
cmp
add
subl
add
sbb
rclb
xchg
pushl
cmc
test
cmp
push
mov
xor
das
pushf
repnz
call
arpl
and
inc
add
xlat
add
call
out
lcall
lret
xor
jp
sub
mov
sbbl
aam
out
cmpb
addr16
test
adc
adc
dec
sbb
pop
imul
mov
dec
adc
sahf
fadds
scas
stc
add
mov
roll
scas
add
pop
push
push
pop
pop
sbb
rorb
aam
mov
xlat
add
xor
imul
int
or
add
jbe
mov
lret
add
movsb
mov
add
add
mov
and
mov
mov
mov
inc
test
mov
add
lds
mov
push
insl
clc
xor
add
scas
das
inc
push
imul
pop
add
sub
xchg
lods
mov
cltd
add
arpl
or
cmp
int
dec
push
add
pushf
sub
push
insl
test
sub
cmp
sahf
outsl
pop
in
xchg
adc
jae
push
mov
jg
mov
inc
imul
cmpb
add
pusha
stos
mov
pushf
sub
pop
in
cltd
loop
fidivrs
das
inc
add
xchg
popa
sahf
movl
std
enter
mov
dec
out
push
out
xchg
mov
push
dec
imul
dec
sub
mov
jmp
add
scas
sbb
test
cwtl
or
sbb
dec
adc
or
sub
adc
scas
push
and
jo
sub
cmp
push
js
ds
es
adc
cmp
sub
xor
sysexit
sbb
sbb
repnz
pop
iret
and
sub
das
sbb
dec
and
push
and
push
sub
push
xor
dec
mov
and
and
outsl
adc
add
test
xor
ficompl
add
xchg
adc
push
push
mov
xor
sbb
xor
and
xchg
add
jo
and
push
in
movsl
mov
jae
repz
leave
mov
push
inc
fmuls
dec
or
or
inc
push
lcall
stos
jp
dec
push
sub
mov
and
inc
sbb
scas
jecxz
mov
pop
iret
mov
push
or
xor
xorl
dec
add
lret
rorb
add
jmp
insb
sub
cmp
sbb
sub
and
jo
add
push
cmp
push
push
jge
sbb
jecxz
xchg
frstor
loope
jp
out
enter
add
mov
mov
test
pusha
sbb
mov
mov
pop
jecxz
outsl
sub
and
dec
jae
and
jl
pop
insb
add
push
mov
jno
fiadds
adc
ds
push
movzwl
inc
add
das
xchg
icebp
or
mov
cmp
xorb
mov
add
push
outsl
add
xor
lds
cmp
loopne
dec
jle
sub
cli
inc
xor
sbb
add
es
pushfw
mov
cmp
loopne
jae
xor
mov
cmpsb
scas
imul
clc
jl
bound
mov
inc
mov
stc
xchg
add
mov
jne
push
repnz
cs
push
scas
dec
and
mov
add
iret
jbe
das
and
jo
push
add
mov
mov
add
sbb
movsb
je
mov
mov
cmp
fwait
push
mov
arpl
jle
inc
jnp
mov
push
xor
xchg
pop
add
popf
add
dec
and
sub
or
push
and
inc
mulb
out
push
sbbl
sbb
sub
in
lods
outsl
inc
mov
jg
inc
sbb
push
mov
out
cmpxchg
jae
lahf
sub
fistps
mov
add
call
gs
ljmp
dec
and
out
ror
hlt
loope
mov
into
imul
inc
pop
pop
add
push
rolb
shll
ds
and
ret
add
loopne
daa
idivl
and
bound
mov
cmp
jmp
shrl
push
jge
scas
sub
stos
subl
push
sub
movl
cmp
mov
push
mov
test
add
sbb
jno
jle
mov
aam
test
outsb
xor
and
or
int3
add
sbb
sbb
add
in
pop
cmpl
sbb
dec
and
push
ret
xor
inc
jbe
iret
add
inc
or
icebp
adc
mov
push
jns
cmpb
mov
pop
or
or
clc
je
ds
outsb
mov
xor
or
push
add
aas
jbe
cmc
push
push
cld
add
xlat
jne
sub
enter
inc
dec
mov
adc
mov
cmp
inc
sbb
insb
add
cmp
jl
sbb
pop
push
inc
adc
cwtl
sbb
pop
loop
lret
movsl
fs
xor
arpl
lods
mov
push
dec
lcall
mov
jg
mov
add
movsl
pop
pushf
add
mov
fnstenv
into
push
add
mov
push
add
or
daa
dec
lret
arpl
add
ret
inc
adc
dec
jnp
inc
je
and
bnd
inc
jge
mov
addr16
add
push
add
out
push
inc
pop
add
jge
adc
sti
push
mul
mov
cmp
mov
dec
push
mov
shr
shl
push
inc
push
hlt
jg
mov
sbbl
inc
or
add
mov
into
mov
add
aam
sbb
cmp
idivl
mov
add
jl
lahf
sub
fs
xor
das
into
dec
add
xor
ret
pop
pop
cld
dec
pop
lods
movsl
shrb
add
adc
mov
push
and
mov
sub
adc
mov
or
dec
popf
test
adc
adc
dec
adc
push
or
data16
cmp
stos
fwait
shr
icebp
and
dec
mov
call
dec
inc
ljmp
ds
cmpsb
and
xor
cwtl
daa
in
xchg
mov
xchg
sub
test
pop
jge
mov
xor
mov
pushf
aaa
pop
mov
rolb
orb
les
call
fisubl
jge
mov
xor
jg
sub
in
lea
push
in
and
in
mov
mov
jecxz
xchg
je,pn
ja
in
cwtl
out
jae
movsb
daa
fwait
push
dec
cmp
pushf
lcall
or
or
sbb
dec
popf
sub
mov
orl
xlat
movsb
stc
jo
lahf
push
jae
sbb
sub
sub
push
push
sti
test
mov
add
sbb
mov
call
mov
movsb
push
scas
and
sbb
sbb
inc
movsl
pushf
shlb
sub
mov
inc
clc
mov
cmp
jo
mov
rep
inc
lock
or
lds
jb
mov
xchg
test
mov
add
fists
fmull
xor
loopne
shll
mov
pop
add
pop
sub
int
adc
inc
ss
hlt
add
mov
fcoml
push
add
in
sub
push
push
xor
add
add
or
ret
adc
iret
dec
lcall
or
je
and
daa
push
sub
test
jae
xchg
lret
add
add
cmp
ret
jmp
rcll
sub
aas
adc
jge
jae
or
mov
add
mov
mov
fcomps
test
cs
xor
int3
push
inc
stc
mov
push
mov
inc
les
jno
je
leave
repz
mov
add
cli
sub
xor
aam
fdivs
orl
sub
or
andb
dec
int3
ret
aam
mov
add
dec
jns
jae
or
ficoms
or
cmp
sub
mov
popa
and
mov
adc
in
addl
clc
add
sti
mov
mov
popf
mov
jle
mov
inc
cmpsl
dec
pop
add
into
pop
add
lods
std
mov
add
cmp
pop
cld
push
scas
pushf
mov
popf
ret
ret
add
mov
call
pop
imul
aam
adc
pop
fstps
push
add
mov
insb
cld
mov
sbb
push
call
sbb
jecxz
movsb
dec
mov
mov
lods
add
push
mov
fldenv
xchg
dec
jne
push
mov
jmp
xlat
jns
mov
test
mov
jae
xchg
dec
cwtl
add
and
mov
add
shrl
js
dec
movsl
push
cmc
mov
xchg
sti
inc
inc
add
lret
mov
push
out
shrl
or
movsl
pusha
sub
movsl
jle
mov
add
add
xor
xorl
inc
lahf
int3
out
add
and
jg
loopne
cmp
dec
mov
pop
movsl
mov
int
mov
push
push
mov
sbb
add
lods
and
or
inc
into
add
cmp
daa
sub
add
mov
mov
cs
push
enter
or
jg
adc
lahf
inc
add
mov
cwtl
mov
cmc
loop
mov
mov
xor
test
popa
mov
add
lret
sub
sub
lods
inc
mov
mov
test
jb
mov
dec
ja
sbb
dec
into
add
ds
mov
and
cmpl
sub
sub
mov
lret
mov
scas
test
pushf
and
xor
sub
inc
cld
aad
rcpps
add
ficompl
mov
fstps
inc
xchg
add
cmp
dec
push
pop
add
test
pop
add
sub
call
sti
mov
add
stos
push
dec
aad
shrb
cmc
lcall
int3
jle
mov
push
xchg
push
loop
fiaddl
mov
je
inc
pushf
or
mov
jb
ret
flds
pop
movsb
mov
stc
jns
cld
push
mov
int3
aam
insl
and
push
inc
jne
aaa
dec
sarb
add
outsl
cli
xchg
inc
or
sbb
inc
fstpl
ss
and
fdivs
not
mov
pop
push
add
push
psubsb
adc
inc
negb
cmp
push
mov
jecxz
std
insb
sub
sarl
bound
adc
xor
dec
sub
xchg
test
add
hlt
add
nop
xchg
sbb
inc
push
mov
daa
add
andl
dec
dec
add
adc
lret
push
mov
inc
mov
lcall
dec
mov
dec
inc
cmp
adc
faddp
pop
add
add
sti
add
add
xor
stc
inc
out
adc
adc
lret
xchg
arpl
mov
inc
add
mov
mov
int3
jne
mov
xorl
ret
insl
push
add
in
pushf
fstpl
fidivl
cmp
adc
mov
push
sub
push
pop
cmc
daa
sub
add
pop
cmp
lret
jmp
mov
lahf
mov
pusha
and
add
xchg
addr16
xor
jp
lea
mov
xor
xchg
pushf
mov
xor
je
adc
outsb
xor
andb
iret
bound
mov
test
inc
add
push
iret
inc
cli
sbb
add
push
pop
sbb
push
mov
jp
repz
or
lea
xor
rcll
add
push
imul
add
gs
hlt
add
std
pusha
mov
and
add
lret
icebp
or
xor
and
mov
cmp
and
call
mov
addl
jb
adc
inc
sahf
dec
in
jb
mov
push
lods
pop
add
and
xor
gs
cmp
adcb
add
push
or
xor
lds
fwait
mov
mov
lret
mov
jecxz
add
mov
cs
aam
rorl
dec
dec
sahf
pop
add
mov
xor
xchg
leave
incl
std
xchg
ss
out
sbb
and
mov
std
dec
jae
sbb
mov
sub
repz
mov
in
mov
cwtl
leave
mov
pop
cmpsl
sti
dec
arpl
test
call
and
and
inc
and
xor
sbb
jne
add
or
push
mov
xor
mov
pop
ret
leave
mov
mov
or
cs
out
loope
cmc
xchg
add
push
mov
lldt
pop
cltd
test
jo
add
xor
les
es
xor
cmc
cld
lret
add
mov
jecxz
gs
sub
sbb
jne
mov
mov
icebp
push
subb
mov
test
xor
and
adc
pop
sbb
sbb
mov
insl
xor
movsl
sahf
add
push
js
add
add
arpl
or
push
sbb
jmp
push
mov
jl
sbb
scas
movsl
in
inc
xor
push
add
fildl
and
dec
add
push
jg
mov
lds
scas
loope
sti
xor
fs
add
sbb
outsb
mov
xchg
sbb
jmp
fnsave
and
ret
pop
mov
add
jl
mov
shl
mov
sub
mov
add
out
inc
mov
xor
or
mulb
add
ljmp
add
add
pop
scas
cld
mov
icebp
or
or
out
or
lea
push
mov
add
add
inc
decb
sub
lea
out
mov
dec
adc
cmovns
mov
mov
es
cmp
mov
xchg
ret
inc
jns
sbb
je
add
jb
jge
push
sbb
mov
ret
inc
push
test
push
mov
test
and
into
lea
xchg
sbb
stos
cmpsl
inc
inc
mov
stos
ret
pop
sbb
push
sub
andl
pushf
repnz
iret
mov
sub
dec
xor
pushf
add
cmp
mov
lcall
outsl
repz
getsec
call
test
sbb
lcall
stc
mov
jne
add
mov
jg
test
pop
leave
call
mov
rcl
push
mov
insl
dec
add
add
sbb
lock
inc
mov
add
xor
shl
dec
mov
sub
dec
cwtl
sub
and
mov
lock
jle
add
lahf
sahf
and
fiaddl
rolb
iret
add
movsb
pop
mov
pop
add
add
mov
xor
or
cld
aad
inc
es
lods
xchg
test
pop
sarl
bound
dec
push
lods
sbb
push
xor
or
das
lock
int3
xor
repnz
cmc
lds
jl
js
and
jae
sub
inc
push
add
test
aam
add
into
jg
lea
outsl
add
fldenv
fdivrl
jne
dec
bound
add
or
fldcw
ljmp
shlb
hlt
dec
ret
ret
or
bound
add
pop
aam
push
add
stc
scas
movsb
add
ja
dec
arpl
mov
cmp
test
dec
mov
push
mov
mov
addl
in
xor
jecxz
prefetch
call
push
lcall
and
add
inc
mov
scas
jae
dec
lods
push
sub
jo,pt
cld
cmp
je
xor
mov
cmp
push
add
or
es
adc
xor
fildl
pmuludq
in
test
aas
inc
mov
out
fdivs
and
in
lcall
mov
lahf
sub
pop
pop
sbb
mov
add
ret
dec
in
mov
in
xchg
cmp
sub
mov
insb
sbb
lock
bound
xor
cmp
adc
rcrl
or
add
push
daa
out
add
sarl
stos
call
xchg
ret
mov
mov
fwait
xchg
add
out
lret
inc
sub
pop
mov
rorb
shrl
aad
add
in
idivl
lahf
push
dec
clc
mov
or
mov
or
inc
mov
cs
add
push
call
add
or
add
sub
sbb
add
jp
mov
xor
mov
aam
sbb
pop
mov
cmp
cwtl
mov
shrb
add
incb
sbb
adc
xor
mov
loopne
or
add
fsubr
mov
mov
fiadds
jb
rolb
das
addr16
jmp
call
or
add
or
mov
cmp
add
and
sub
add
push
imul
test
idiv
add
in
popa
call
pop
pop
add
jge
or
ret
cmp
lock
mov
lods
sbb
mov
push
adc
scas
sub
rorl
inc
mov
adc
adc
enter
insb
dec
push
loopne
sbb
stc
sbb
cmp
scas
mov
sbb
scas
or
adc
xchg
mov
ret
pop
insb
ja
scas
fdiv
into
outsl
pushf
mov
mov
add
enter
scas
sti
mov
fisubl
add
push
add
add
lea
mov
and
pop
cmpsb
mov
ficompl
push
xchg
pusha
scas
jae
sbb
or
add
fucomi
lods
enter
cmp
iret
and
inc
sbb
je
aad
mov
nop
or
rolb
sbb
jno
add
or
mov
stos
gs
sbb
adc
jge
sub
pop
jo
mov
pop
mov
mov
mov
pushf
pop
xchg
loop
ret
pusha
push
add
arpl
scas
sbb
add
push
jno
mov
fwait
push
xor
xchg
sub
das
dec
pop
add
in
inc
ret
sbb
and
xchg
outsb
clc
mov
mov
sub
mov
jecxz
arpl
mov
icebp
sbb
add
mov
sub
pop
push
pop
push
adc
mov
repz
lock
xchg
rorb
xor
and
lcall
adc
mov
dec
mov
jno
cmp
jo
mov
sub
hlt
adc
lret
inc
and
int
add
sbb
cmpsl
fidivrl
add
xchg
stos
roll
add
inc
xchg
mov
sbb
daa
mov
sbb
sub
and
sbbb
call
mov
test
pop
call
xchg
pop
cmp
sub
repnz
and
enter
cmp
pop
add
mov
adc
cs
ret
mov
dec
mov
test
mov
fcmovb
gs
mov
xor
cmpsl
xor
xor
mov
or
jbe
push
daa
shrl
mov
jne
push
sub
mov
repz
shrl
lret
shrl
dec
lock
cli
mov
cltd
cmp
inc
mov
dec
add
push
add
repz
push
test
push
enter
pop
mov
adc
stos
and
xchg
pop
rorb
cmpsl
add
call
sbb
or
test
mov
into
adc
jle
mov
xor
xorb
or
movsb
or
xor
sub
adc
push
jg
in
out
xchg
mov
xchg
mov
sbb
aaa
push
add
loop
mov
or
mov
cmp
push
push
add
repz
jnp
xchg
int3
lods
sarl
adc
jne
xor
ljmp
mov
js
xchg
sbb
push
movsb
insl
test
shrb
inc
roll
jmp
mov
xor
hlt
add
iret
aaa
add
popf
pushf
adc
mov
sub
xlat
sub
mov
add
adc
cmp
add
fmuls
incl
mov
cmpsb
bound
add
mov
fldl
inc
jecxz
cmp
add
push
mov
cmpb
dec
les
in
xor
lret
out
push
add
dec
leave
repz
sbb
das
in
test
add
pop
cmp
cli
or
sub
push
dec
add
cs
out
fcmovu
lret
jl
xor
imul
cmp
cmpsb
xor
inc
adc
cmpsl
es
inc
sbb
or
push
cmpsb
clc
and
outsl
stos
ltr
mov
mov
add
scas
stc
dec
add
cmc
jecxz
push
add
push
leave
sbb
jmp
daa
outsl
in
imul
cltd
mov
pusha
jo
or
add
stc
mov
add
sbb
int3
in
xor
or
dec
xor
or
out
cmc
jns
mov
pop
push
add
sbb
mov
fwait
add
rorb
jecxz
jge
mov
test
add
dec
mov
cld
lea
andb
mov
xchg
lret
fcmovb
mov
push
sub
rolb
or
mov
pop
fcmovne
cmc
and
lcall
ja
mov
mov
or
adc
adc
loop
cmp
or
jg
xchg
add
out
add
pop
jmp
pop
mov
sbb
mov
mov
mov
or
shlb
sbb
pop
imul
push
xchg
and
jecxz
xchg
lock
fs
add
ljmp
ret
jbe
add
or
and
pop
add
movsb
imul
sbb
mov
jne
dec
daa
jp
jae
addl
add
int
insb
pop
pop
cmpsb
add
or
adc
faddl
out
push
sbb
outsw
icebp
ret
xchg
inc
inc
cmp
xor
mov
movsl
pop
std
js
jae
into
mov
xchg
sbb
jp
add
outsb
and
xlat
or
mov
xchg
mov
inc
xor
add
test
repnz
add
and
add
lods
fwait
add
pushf
or
adcb
add
mov
movsb
test
aas
add
mov
ret
scas
sub
mov
mov
lods
jno
xor
scas
ret
add
int
push
adc
lea
add
ljmp
mov
testl
xchg
xor
jg
jae
mov
cmp
mov
or
add
in
dec
inc
cmp
cmpsl
not
push
pop
lret
xor
add
xchg
scas
fcmovnb
in
lods
cmc
push
aaa
add
stos
leave
movntps
hlt
jb
dec
xor
and
xor
add
int
add
sti
mov
push
shll
xor
pop
xor
rorl
mov
ret
sub
and
mov
mov
inc
xorb
nop
cmp
or
or
out
enter
mov
and
lret
add
pop
sti
add
jmp
jl
pop
adc
mov
sbb
ficompl
add
or
adc
add
cmp
push
aad
add
clc
ljmp
mov
ja
mov
xorb
js
in
lret
push
inc
add
cld
jmp
adc
cmp
mov
mov
pop
arpl
nop
sarb
adc
lea
out
int
mov
sbb
pop
pusha
fimull
shrl
jne
push
popf
inc
fs
sti
mov
push
lret
pop
icebp
jle
out
insl
and
push
stos
add
inc
rorb
adc
mov
popa
and
or
incl
jg
stos
mov
or
lods
mov
pushf
add
mov
movl
push
xchg
stos
adc
cld
mov
fsubp
scas
xchg
add
mov
xchg
out
lret
xchg
sbb
out
cmp
add
nop
xor
ret
pop
mov
jnp
jge
xor
inc
xchg
sub
cmpsl
faddl
jg
fcomps
mov
lret
pop
mov
orl
loop
call
add
in
mov
sbb
mov
jmp
ret
add
pushw
add
xor
scas
xlat
loop
add
pop
mov
nop
ss
loopne
mov
fs
leave
sbbb
xchg
sub
sahf
dec
xor
daa
dec
add
pushf
lock
or
cmpsl
outsl
dec
jo
mov
insl
bswap
into
or
add
scas
ret
fstl
push
ficomps
or
mov
outsl
mov
pop
cmp
aaa
add
nop
or
add
in
rcrb
out
mov
jae
xlat
or
xchg
mov
jmp
imul
pop
sbb
dec
jp
xchg
add
or
and
insl
ret
into
mov
mov
daa
pop
adc
sub
add
out
xchg
mov
xor
ds
scas
cmp
inc
mov
dec
mov
inc
shl
jb
xchg
xchg
aam
and
rorl
sub
sub
imulb
mov
cltd
cmp
xchg
add
movsl
lcall
sbb
sar
fildl
add
loopne
mov
icebp
arpl
jns
add
ret
push
cs
add
sub
add
call
mov
and
jo
inc
lcall
test
dec
cwtl
dec
test
mov
rorb
dec
fmull
dec
in
lods
mov
adc
sbb
jl
jl
jl
jae
lcall
enter
cld
and
adc
inc
push
push
ss
inc
lods
movsb
lcall
orb
and
cmp
dec
cltd
pop
insb
scas
jnp
mov
dec
cld
sbb
adc
or
das
inc
inc
push
add
test
imul
mov
mov
lock
xor
inc
lcall
movsb
xorb
fs
lods
dec
sub
sub
sub
sub
daa
pop
test
pop
mov
pop
fcompl
lock
clc
repnz
mov
and
sub
cmp
and
pop
test
mov
add
push
add
mov
add
fmuls
xor
mulb
sub
add
lahf
stos
mov
xchg
or
jnp
mov
pop
repz
mov
ja
outsl
add
inc
add
test
or
mov
loop
adcb
add
sub
jne
pop
fbstp
cmp
pop
mov
sub
xchg
pop
cwtl
xchg
inc
mov
xor
sbb
add
mov
out
es
addl
int
push
js
xor
and
jb
rolb
or
mov
test
add
sbb
add
xchg
mov
imul
mov
mov
out
mov
add
lret
mov
jle
cmpsb
dec
andl
inc
add
aam
fadds
ret
jp
pop
mov
xor
dec
pop
sbb
jg
mov
cmp
mov
lea
mov
jle
iret
test
repz
push
lret
push
add
movsl
inc
mov
fwait
mov
dec
add
adc
pushf
sub
into
andl
pop
aad
pop
mov
sub
jge
shll
lret
add
or
add
push
sbb
push
mov
call
pop
fidivrs
dec
jge
add
mov
fadds
add
xor
popa
mov
dec
xor
dec
cmp
cmp
xor
cmp
ds
mov
pop
sub
aaa
sub
repnz
add
lds
dec
add
cmp
clc
inc
mov
adc
subb
lock
sbb
add
sub
push
push
dec
repz
mov
dec
jecxz
cmpsl
xor
jno
test
sub
nop
xchg
stos
adc
mov
in
fbstp
mov
add
jb
mov
scas
lock
jp
sub
mov
push
mov
repnz
add
stos
or
pop
test
fcmovbe
lcall
fdivs
fwait
clc
mov
mov
add
ja
cltd
testb
xor
inc
pushf
xor
add
andl
push
jne
adc
xchg
stos
scas
test
add
cmp
or
xor
lock
fwait
push
orl
data16
pusha
sbb
stos
cmpsb
add
out
add
outsb
lea
add
add
xor
mov
outsl
call
pop
repnz
add
inc
orb
subl
push
push
or
mov
sti
dec
sbb
add
test
lods
scas
mov
xor
cmp
mov
out
and
roll
lret
clc
loop
rcr
add
dec
adc
dec
sbb
cld
push
in
add
inc
lods
aad
loopne
dec
push
add
stos
repnz
jp
mov
xor
daa
lods
mov
mov
pop
arpl
add
mov
push
je
es
lods
fwait
and
dec
jle
sbb
scas
xchg
or
in
sub
test
outsb
jmp
xchg
push
xchg
cld
and
add
xor
or
shll
mov
mov
in
mov
sbb
rorl
ret
add
mov
cmp
aad
inc
das
mov
add
test
inc
loope
jge
sub
out
mov
add
into
ljmp
mov
and
bound
xor
and
xchg
cmp
outsb
movl
or
and
or
jge
push
cmp
ljmp
jns
jmp
movsl
scas
icebp
stc
pop
add
cmpsl
inc
sub
fldcw
cmp
bound
add
push
inc
or
or
stos
xchg
ret
add
testb
jl
add
sub
cmp
dec
or
ss
lods
mov
inc
add
and
mov
mov
mov
fldt
test
push
lea
orl
nop
add
cli
inc
sti
jbe
jle
mov
pop
imul
sbb
sub
lret
xchg
jnp
ltr
add
test
dec
jle
cmp
cmpsb
shlb
lahf
inc
cli
rcrl
and
add
jnp
loopne
pop
aam
push
repz
adc
jne
xchg
add
or
xchg
pop
mov
and
xchg
pop
repnz
mov
fdivrl
dec
loopne
mov
inc
xchg
call
inc
mov
cmpsb
sub
jae,pn
ss
add
mov
fsubrs
loopne
xchg
sub
pop
mov
repnz
iret
add
inc
xchg
xchg
or
int
add
sub
sahf
add
and
scas
ja
aas
mov
mov
xor
cmpsb
add
sbb
enter
leave
add
xor
jmp
add
sbb
fdivs
add
rorl
inc
jmp
lret
pusha
mov
add
adc
or
sbb
pop
fildll
lea
cmc
and
pop
push
mov
jmp
xchg
enter
adc
sbb
mov
jle
push
in
out
add
pop
xchg
xor
iret
add
xor
cmpsb
pop
mov
inc
lret
lcall
xorl
rcpps
push
inc
mov
jbe
ret
dec
mov
jp
mov
xor
test
dec
mov
cmpl
sbb
stc
cs
add
adc
or
cmp
and
scas
sub
ret
cld
push
mov
and
mov
aaa
inc
dec
mov
loop
daa
test
and
inc
jnp
out
xlat
and
mov
cs
lods
add
or
jne
idivl
add
hlt
lea
mov
mov
push
add
inc
add
lods
xchg
or
cmc
mov
fisubrl
inc
push
xchg
orb
push
xor
inc
shlb
or
in
lea
adc
inc
clc
add
stc
inc
ds
fldt
and
data16
bswap
cs
mov
xor
mov
xchg
xchg
add
inc
popf
cmc
xor
outsb
or
mov
sbb
leave
test
xchg
xor
mov
roll
push
movsb
push
in
test
cltd
ret
repnz
fdivrl
jmp
jnp,pt
mov
sub
mov
mov
mov
sbb
cmp
adc
fists
lret
inc
in
scas
add
xchg
dec
add
rorl
and
mov
lock
in
or
or
test
add
dec
insl
xor
mov
cmc
icebp
ds
lods
jne
mov
or
outsb
add
daa
cltd
jecxz
dec
call
rcrl
mov
hlt
pop
repz
ficomps
add
lods
rorl
filds
arpl
shlb
cmc
rsqrtps
pushf
arpl
inc
xorb
fcompl
insb
add
rolb
ja
sub
mov
push
xchg
pop
dec
ljmp
out
mov
ret
xor
xchg
sbb
add
fldt
inc
shrl
arpl
into
test
hlt
mov
movsl
mov
jae
push
cmp
daa
add
sub
xor
adc
mov
bnd
rolb
or
xor
mov
stos
mov
sbb
ret
cmp
push
out
mov
pop
add
push
mov
out
cli
jnp
adc
mov
bswap
or
and
and
mov
mov
pop
add
push
and
fisubrl
or
lock
pushf
xchg
xorb
mov
rcrb
ret
lds
adc
cmp
add
mov
jnp
add
dec
add
inc
xor
roll
das
decl
sub
mov
add
and
fldl2t
add
movl
dec
xor
frstor
adc
pop
mov
mov
push
sub
add
add
push
fwait
inc
stos
ljmp
dec
inc
xor
dec
jb
add
dec
ja
sbb
add
addr16
add
imulb
out
add
mov
push
push
mov
call
mov
dec
jge
add
lods
inc
mov
je
lea
push
pushf
jmp
int3
add
ret
pop
stos
cmp
adc
daa
inc
xchg
xchg
or
jno
lods
call
pushf
lds
jg
or
pop
mov
or
mov
xchg
iret
fiaddl
jbe
xchg
jo
mov
add
push
jns
mov
mov
push
fstps
in
mov
push
sub
inc
xchg
add
pop
mov
pop
jno
add
mov
scas
mov
rep
sbb
xorl
mov
pop
add
inc
stc
inc
jecxz
pop
add
mov
push
pop
mov
xor
pop
add
aad
push
inc
xor
dec
and
jmp
inc
cwtl
mov
add
mov
mov
cmp
pop
clc
je
dec
in
lds
pushf
sub
pop
add
in
mov
jne
mov
sub
xchg
mov
ljmpw
imul
dec
movsb
jmp
lea
xor
or
fwait
mov
dec
mov
sahf
xchg
cmc
lret
push
test
add
push
mov
loope
inc
add
push
cmp
add
jne
test
jl
rorl
mov
add
and
xor
pusha
rcll
add
hlt
jno
mov
aam
add
fisubrl
xchg
add
mov
add
pop
loop
jecxz
mov
cltd
push
push
add
jno
mov
or
push
imul
cltd
add
call
ss
mov
fcompl
push
shlb
cmc
sbb
scas
pop
and
je
add
sub
lret
imul
stos
add
lret
or
cmp
iret
dec
sahf
dec
xor
shr
push
adc
repz
add
out
dec
stos
lea
cltd
sarl
inc
jge
push
lret
add
pusha
paddw
cwtl
lods
add
cmp
divl
add
pushf
mov
or
mov
in
and
sub
xchg
hlt
push
lock
jbe
cmp
inc
cmp
sub
xor
ja
daa
jne
mov
insb
xor
xor
add
cmc
outsb
adc
mov
insb
or
incl
and
dec
pop
mov
test
add
push
push
add
pop
insb
adc
push
sbb
mov
addb
xchg
add
int
add
cli
and
mov
add
pusha
push
or
sbb
add
cmp
enter
jmp
pop
lods
pop
mov
xchg
inc
ljmp
fmull
add
loopne
fwait
mov
inc
cwtl
mov
insl
pushf
mov
out
mov
outsb
add
loope
repnz
dec
add
sbb
xchg
add
inc
push
mov
dec
inc
mov
bound
ret
out
scas
es
jae
xor
push
push
mov
mov
inc
out
call
and
or
xchg
sbb
pop
pop
mov
xor
fmuls
push
mov
incb
jb
mov
lret
sbb
or
loop
call
lods
cmpsl
add
sbb
test
sub
negb
out
les
fldenv
ret
push
jns
jl
movsl
mov
lret
push
cmp
inc
sub
or
popa
mov
xchg
mov
insb
push
push
xchg
orl
push
cmp
pop
mov
stos
into
xor
jg
xchg
fsubr
lret
roll
add
push
pop
ds
xchg
mov
add
inc
icebp
aam
add
push
outsl
ret
push
lcall
bound
ss
jle
and
sub
aaa
imul
add
mov
in
push
outsl
cs
sub
jmp
mov
xor
out
mov
loope
mov
cld
leave
dec
jmp
je
in
sub
add
inc
jae
or
add
les
add
std
imul
xchg
fs
dec
sub
adc
mov
mov
mov
inc
sub
aas
push
das
inc
and
xor
mov
pushl
testl
xor
popa
or
incl
dec
out
push
lock
mov
repz
mov
cli
cmpl
jae
sub
loopne
in
and
cmp
inc
mov
inc
es
mov
and
int3
lret
add
push
add
test
imul
movsl
sub
dec
adcl
push
fstps
and
imul
mov
ret
push
add
add
lods
add
xor
jo
pop
lea
or
mov
daa
pusha
mov
push
dec
je
mov
fsubr
fst
ficompl
sub
jo
je
mov
adc
imul
int
scas
stos
int
or
add
imul
loopne
xor
sbb
mov
mov
mov
les
lea
mov
sub
rcrb
mov
int3
sub
je
push
lock
jecxz
sbb
jno
aam
js
jl
orb
shll
xor
adc
jns
sbb
jle
mov
orl
je
mov
jecxz
dec
bound
inc
outsl
add
loope
fisttpll
mov
mov
rorb
add
mov
insl
add
out
and
or
xor
in
lods
pop
push
cli
push
in
or
dec
add
push
or
add
inc
push
add
loop
dec
cltd
loopne
push
mov
roll
je
incl
lret
mov
push
add
jle
mov
cmp
or
or
and
je
adc
mov
push
pop
daa
pop
sub
adc
sub
je
xchg
das
add
add
jns
sub
leave
in
push
into
fldenv
lcall
mov
mov
mov
lods
int3
and
sub
fs
std
out
mov
adc
lods
or
into
cmpsb
cli
lret
add
mov
pop
mov
sub
cmp
push
je
jle
push
or
cmp
jne
mov
out
cmp
xchg
fdivs
sarl
pop
out
repnz
sub
jno
mov
mov
scas
lahf
dec
rep
lock
add
sub
adc
add
add
pop
enter
cmpsl
mov
adc
fdiv
jae
pop
faddl
adc
xchg
lods
sbb
jae
lods
stos
fldenv
dec
movsb
push
jecxz
pop
add
hlt
push
pop
test
xchg
mov
xor
pop
nop
and
and
shr
pop
jmp
add
fwait
sbb
xchg
leave
jg
out
and
cmpsb
js
das
xchg
mov
fimull
sub
shlb
jg
add
or
add
dec
pop
sbb
mov
push
stos
mov
sub
push
lods
jp
dec
add
or
mov
fldl
scas
and
jae
ja
fsubp
mov
sti
stos
and
xor
bound
jle
add
cmpsb
push
mov
movsl
jg
fiadds
sbb
xchg
repz
cld
std
adc
mov
pop
push
sub
xor
jmp
rclb
insl
imul
push
add
push
add
dec
add
cltd
mov
dec
shll
mov
sbb
mov
add
pusha
jecxz
add
xorl
clc
out
rorl
rolb
adc
xor
pop
cmp
mov
jecxz
mov
jae
push
adc
add
dec
xor
add
or
lret
xor
add
sahf
mov
es
sti
test
notb
call
sbb
cmpsb
pop
sbb
negl
dec
xchg
lods
mov
sub
imulb
in
mov
dec
pop
loop
add
push
lret
cmp
dec
cld
jo
jns
pusha
pushf
mov
mov
push
les
pop
and
add
sub
out
test
add
add
fs
mov
ds
jae
mov
xchg
sub
imul
les
subb
sub
rcl
ret
push
mov
xor
sub
add
lret
leave
cmp
cld
pushf
mov
rcrl
loopne
sldt
jmp
or
mov
push
out
or
pop
das
mov
ror
pusha
jae
mov
jb
pop
rorb
push
cmp
lock
repz
leave
xor
int
sbb
dec
add
push
xchg
cmp
push
add
xchg
jno
xchg
cli
add
loop
mov
add
jbe
aam
fsubr
and
add
fsubr
jae
movsl
fildll
mov
add
je
pop
dec
loop
push
add
adc
mov
fdivs
inc
and
negb
xor
cmp
dec
mov
add
inc
add
pop
add
push
aas
call
sarl
std
xchg
scas
ret
jge
or
pop
fwait
cli
insl
mov
pop
hlt
pop
push
mov
cvttps2pi
push
cli
in
dec
jecxz
inc
call
or
dec
jne
add
popa
adc
adc
movsb
mov
test
sbb
sbb
nop
jne
mov
insb
mov
xchg
mov
dec
xor
inc
cmp
mov
les
bnd
sbb
add
lret
cs
mov
adc
lods
mov
and
xor
push
aas
add
and
xor
xchg
das
add
pop
es
add
aam
sarb
stos
add
insl
jne
inc
test
das
sub
and
lcall
scas
mov
xor
sub
cwtl
push
icebp
pop
loop
call
mov
cmp
testb
aaa
cmc
scas
stc
and
test
add
call
fildll
xchg
pop
inc
xchg
arpl
add
and
popf
pop
add
test
lds
loope
add
cmpb
subl
sbb
lock
add
add
decb
dec
loopne
jl
sub
sbb
mov
jae
jae
nop
xchg
gs
mov
pushf
ret
add
add
js
sahf
jnp
add
enter
add
lock
mov
xor
outsl
pop
push
ret
mov
mov
xor
daa
cmc
pop
add
negb
sbb
fstpl
dec
lods
sarb
repz
vpmaddwd
mov
int3
add
sbb
in
xchg
mov
mov
add
hlt
cmp
jae
sub
fidivrs
in
loope
roll
lods
xchg
jg
ja
mov
call
xchg
pop
jnp
mov
pop
out
in
adc
call
pop
or
adc
movsl
int
fcoms
cmc
cmp
test
inc
ret
add
inc
or
add
enter
sub
add
fwait
sub
add
push
lods
lcall
movsl
repnz
arpl
aam
mov
fsubrs
and
xor
xor
mov
push
jae
inc
inc
mov
jl
ja
add
push
jns
add
add
cwtl
and
divl
hlt
add
mov
call
push
icebp
iret
in
les
jge
xchg
or
jl
add
xor
add
mov
jae
cmp
pop
mov
add
fs
cli
jmp
add
sbb
push
dec
ss
or
mov
mov
jl
stc
cld
dec
enter
fcompl
stc
pop
mov
inc
cmp
push
lods
addr16
ret
repz
inc
add
mov
push
repz
jnp
fadds
sbb
jp
jae
mov
idivb
inc
jge
add
xor
test
nop
push
add
imul
inc
cltd
jp
cld
je
repnz
cli
jne
out
xor
adc
fsub
mov
cmpxchg
call
pushf
dec
pop
add
add
lea
shl
std
out
scas
ds
xchg
add
in
mov
cmpsb
push
or
pop
rclb
jno
sub
add
mov
arpl
jge
inc
pop
and
cmp
add
scas
dec
call
into
out
add
mov
add
pop
mov
in
ss
add
mov
test
lcall
dec
pop
jmp
mov
test
add
add
pop
dec
loope
mov
mov
or
int3
ret
inc
jae
inc
mov
mov
sub
jae
sbb
xchg
ljmp
sbb
loopne
mov
sbb
mov
xor
xor
in
test
sub
bswap
add
adc
out
push
jp
mov
jl
stc
pop
mov
inc
pop
scas
adc
sbb
push
sub
xor
pop
add
sub
aas
ja
mov
pushl
xor
loopne
hlt
sbb
add
ret
mov
add
xchg
push
lods
pop
xchg
pop
std
or
roll
add
out
mov
in
add
sarl
lea
mov
inc
add
popa
arpl
inc
movsl
out
mov
xchg
mov
or
dec
xchg
mov
lods
xorb
negb
fiadds
iret
pop
push
sbb
adc
or
or
add
jmp
jnp
mov
and
adc
cmp
jne
imul
adc
inc
fwait
and
movsb
inc
xor
inc
outsb
jecxz
jns
leave
sbb
rorb
dec
movl
stos
xchg
outsb
adc
mov
sbb
cmp
jmp
dec
add
rolb
xchg
jne
notb
jge
pop
inc
or
mov
add
popf
jno
fwait
sbb
scas
fdivp
out
cmp
test
aam
adc
sub
sti
inc
inc
sub
cmp
fcoml
dec
mov
sbb
and
push
decl
in
mov
xor
insl
pop
into
mov
adc
pop
arpl
fs
filds
dec
cmp
lea
push
mov
gs
test
add
xchg
aad
or
lcall
and
test
cld
push
mov
repz
push
aad
lods
or
add
push
sti
lock
das
sub
inc
clc
add
mov
imul
mov
sbb
dec
inc
aad
add
jbe
cmp
aaa
divb
mov
push
xor
jmp
cmpsl
filds
inc
ljmp
mov
push
scas
cmc
sub
sub
ljmp
and
loopne
lret
add
fucomp
xchg
mov
push
into
sub
adc
and
fs
sbb
add
adc
add
add
lret
fwait
jle
cmpl
stc
pop
pop
xchg
push
je
mov
rcl
cmp
cwtl
add
leave
inc
mov
mov
mov
je
push
xor
cmp
sbb
loopne
sub
add
add
hlt
ss
pop
inc
or
stc
or
lea
jo
pop
adc
xchg
sub
aaa
push
out
std
mov
xor
mov
add
or
dec
pop
sub
push
mov
sub
push
aas
sub
inc
into
cmp
add
outsl
cmp
jae
ds
inc
pop
mov
add
inc
adc
lods
add
hlt
mov
add
cmp
repz
into
imul
addr16
fildl
lds
pop
inc
mov
push
pmaddwd
mov
jmp
push
cmp
add
das
out
test
add
push
outsl
dec
loop
and
imul
xor
push
sbb
ss
lds
mov
cmp
push
outsb
push
sub
fidivs
out
inc
push
out
dec
lcall
pop
in
sbb
add
push
dec
cltd
test
loope
divl
js
insb
add
add
add
add
add
add
inc
add
add
add
xor
add
add
xor
add
cmp
add
add
xor
data16
add
add
add
add
arpl
add
add
add
add
jbe
add
add
add
cmp
add
add
add
pop
add
add
jb
add
add
add
push
arpl
add
add
aaa
add
push
inc
push
add
add
push
add
add
add
add
imul
add
add
add
add
xor
add
add
add
add
add
add
pop
add
xor
add
inc
inc
add
pop
add
je
dec
add
dec
add
add
add
inc
inc
add
insl
add
add
add
add
add
add
jp
add
add
add
insb
add
add
add
inc
inc
add
add
add
add
outsl
add
add
data16
add
push
add
add
inc
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
push
add
add
add
add
add
add
jb
add
add
push
push
inc
add
add
dec
dec
add
add
add
add
add
add
arpl
add
dec
add
add
add
add
dec
add
xor
add
add
add
add
add
js
add
dec
add
add
add
xor
add
add
add
add
add
add
insb
add
push
add
add
add
add
add
add
add
add
add
add
jne
add
add
add
add
add
add
add
dec
add
add
add
add
ret
mov
iret
mov
sbb
dec
or
adc
push
pop
test
mov
je
out
fnstenv
mov
inc
inc
movsb
and
jno
daa
xor
pop
stos
sub
mov
pop
cs
popa
xlat
push
imull
cmp
add
mov
fimuls
lret
add
iret
xorl
mov
jmp
lods
pop
sub
movsl
std
sbb
add
rep
mov
xor
rcrb
mov
fldcw
sub
sub
adc
push
inc
or
sbb
iret
fwait
jnp
push
testl
subb
adc
ret
mov
and
lahf
jp
divb
add
arpl
into
xchg
add
xchg
xor
cmp
cmpsl
jle
mov
mov
pop
pop
out
mov
repz
add
in
enter
push
dec
mov
cmpsl
pop
jae
inc
xor
fiaddl
push
lea
adc
jp
mov
retw
mov
push
add
inc
in
add
cmp
mov
xchg
mov
pop
mov
movsb
inc
jbe
add
lods
cli
mov
pop
pop
mov
fsubp
fistpl
push
add
push
lea
cld
iret
lods
add
movsl
rcrl
xorb
test
xor
cmp
push
jnp
lahf
cvtpi2ps
dec
add
add
repnz
outsl
sbb
test
fcoml
mov
push
add
mov
add
mov
xor
dec
xor
push
xchg
cmpsb
pop
enter
lea
add
pop
adc
int
mov
hlt
xchg
inc
xor
jno
and
inc
cmp
ja
add
bound
mov
mov
xor
in
popa
subl
aam
jns
mov
push
cmp
ret
sub
jmp
add
out
cmp
add
inc
dec
pop
loop
push
add
xchg
das
pop
fstl
outsl
add
push
ror
add
adc
jns
aaa
pop
push
xor
dec
imull
fistpll
mov
inc
out
mov
mov
cmpsl
dec
mov
mov
lret
cmp
add
adc
rcr
sbb
add
popa
xchg
or
or
adc
add
jne
and
sbb
add
add
stos
mov
dec
test
lock
leave
pop
xor
cmp
adc
or
shll
imul
rcrb
mov
inc
push
add
sbb
pusha
add
mov
jae
pop
idivb
mov
mov
add
bound
jg
jmp
jb
cmp
insb
rcll
mov
and
adc
jle
les
fwait
xor
out
pop
mov
jbe
mov
push
add
leave
cmp
lret
cmp
jle
adc
inc
popf
add
loop
movb
sti
repz
sbb
lds
out
xor
add
cwtl
wrmsr
add
add
xor
in
imul
and
lss
mov
pop
pop
inc
jg
loopne
into
or
fcoml
es
fisubrs
mov
and
daa
dec
xor
push
mov
mov
jne
add
leave
pop
lock
loope
cmp
add
outsb
out
scas
and
xor
inc
loop
cmp
sub
addl
mov
insb
jae
cmpsb
cs
inc
loop
arpl
add
push
xor
pop
xchg
add
inc
cwtl
push
sub
and
rolb
add
fdivrp
mov
xchg
mov
and
insb
pop
movl
lods
cmp
mov
inc
add
dec
add
cmp
jg
jecxz
add
rolb
inc
std
sbb
inc
inc
add
mov
cmp
mov
je
jnp
loop
jae
jno
pop
sahf
aam
mov
and
mov
lea
mov
inc
pop
push
sti
or
dec
push
push
in
repz
sarl
xchg
add
push
mov
xchg
ja
rcrl
out
sub
jbe
imul
mov
outsb
shld
test
mov
pop
dec
adc
arpl
mov
popa
mov
jbe
xlat
jo
dec
mov
scas
enter
jne
inc
add
sarl
dec
das
roll
xor
js
std
dec
dec
test
xor
jg
push
test
and
divl
out
sub
xchg
cltd
push
jae
outsl
cmpsb
dec
or
dec
imul
imul
icebp
call
outsl
hlt
pop
xchg
add
cmc
mov
cltd
std
jmp
sbb
xor
cmp
mov
mov
lds
pop
pop
call
add
inc
cmp
ret
cltd
mov
xchg
popf
lcall
xor
pop
mov
adc
add
inc
js
inc
lcall
lods
jmp
int
mov
add
scas
cltd
movsb
inc
jge
lret
mov
ljmp
loopne
xor
cmpsl
shll
cmp
add
xchg
jg
mov
or
push
lcall
add
mov
sbb
mov
push
and
sbb
popa
pop
stos
jg
sbb
cltd
push
jo
icebp
js
add
adcl
xor
add
out
daa
fsubs
cmc
or
xor
jnp
jge
push
add
mov
jmp
sbb
xor
push
mov
add
fs
stc
mov
das
xchg
outsl
popf
stos
movsl
add
repz
xor
cmpl
inc
outsl
add
push
adc
mov
xor
jge
in
add
test
out
cmp
xchg
int
roll
mov
xor
add
add
fs
insb
jg
nop
add
xchg
sahf
mov
fcoml
sub
notl
pop
push
mov
lret
mov
add
in
cmp
test
or
adc
jne
and
inc
and
fwait
jecxz
sub
pusha
mull
lret
js
add
adc
cltd
lea
imul
icebp
add
pop
adc
add
mov
dec
add
add
ljmp
aam
neg
mov
in
in
push
push
push
cmp
mov
inc
pop
add
sub
dec
cwtl
int3
inc
add
test
add
and
add
stos
fdivr
jae
add
push
daa
add
and
sbb
mov
repz
test
rcll
sti
push
shrl
add
cmp
fldl
cs
jnp
push
mov
mov
xchg
pop
jl
fists
mov
mov
inc
xor
xor
add
repnz
pop
jmp
sub
mov
push
adc
sti
arpl
enter
add
xchg
pop
mov
add
notl
push
sbb
iret
jg
sbb
out
and
dec
stc
add
into
arpl
mov
mov
dec
xor
push
cltd
and
cmp
add
pop
sti
sbb
jmp
add
xor
add
dec
lods
div
sub
xor
dec
or
fwait
aas
js
xor
dec
pusha
lds
imul
jecxz
and
pop
dec
inc
xor
and
ljmp
movsl
cs
cmp
xor
pop
xchg
subb
adcl
add
aas
dec
or
add
mov
and
cmp
call
inc
jns
hlt
add
andl
sub
fcompl
loopne
xchg
sahf
mov
repz
stos
inc
push
add
pop
rcrb
mov
xor
add
ss
lahf
shll
xor
add
cmp
mov
scas
lret
sbb
or
jbe
stc
add
pop
mov
jo
shl
adc
arpl
das
mov
out
sub
jae
jg
lods
add
divl
iret
sti
enter
add
sbb
xor
rep
cs
mov
outsb
adc
imul
mov
sbb
and
scas
mov
xor
ficoms
mov
cmp
sub
jnp
inc
add
lods
sub
andl
mov
pop
ljmp
push
jae
stc
and
adc
pop
icebp
inc
cmpsl
fistl
add
xchg
out
jg
clc
stos
add
test
add
sahf
dec
pop
mov
adc
ljmp
xor
xchg
dec
imul
jle
and
mov
mov
inc
dec
sarl
mov
dec
mov
cltd
sti
dec
push
cmp
andb
add
cmpsl
sub
add
cs
jge
cmc
sbb
or
and
stos
outsl
xchg
sub
enter
test
sub
add
jg
push
fcoml
inc
add
cmp
and
jns
add
jno
lds
mov
inc
sub
test
add
or
xor
or
adc
stos
xor
add
inc
idivb
push
dec
ds
lods
stc
add
pop
sti
fnstcw
inc
jmp
mov
jecxz
and
mov
inc
cmpsb
sub
fwait
aaa
hlt
movsb
mov
mov
fucom
and
mov
rcrl
leave
cwtl
mov
and
push
mov
add
leave
mov
les
scas
push
mov
cli
gs
sbb
cmc
xchg
repz
leave
dec
stos
add
rorl
cmp
test
add
adc
sahf
mov
and
mov
gs
or
dec
adc
imull
mov
rolb
sti
popa
or
and
jmp
test
mov
cmp
xor
mov
pop
sbb
inc
xchg
add
setle
mov
jbe
stos
movsb
xchg
push
repnz
add
enter
cltd
subps
ret
jno
inc
add
scas
jp
add
stos
xor
xchg
setno
jnp
dec
in
inc
repnz
ss
add
iret
roll
or
scas
xor
add
inc
adc
mov
cs
dec
out
ljmp
push
add
mov
lahf
out
shlb
or
xor
add
outsb
or
xchg
ss
int3
sub
lahf
aaa
mov
mov
ljmp
jmp
adc
inc
cmpl
les
in
lahf
xchg
sti
pop
shr
fs
cmpxchg
xchg
jecxz
roll
leave
icebp
cli
lods
sti
sub
aaa
mov
insb
repnz
and
push
inc
push
mov
inc
inc
jae
fcomip
out
sti
adc
sub
mov
push
and
test
adc
sbb
lds
cs
sbb
lea
ljmp
add
jne
sbb
popf
push
push
in
stos
stc
jmp
nop
mov
cmp
push
xor
sbb
mov
add
mov
mov
out
andb
jecxz
add
inc
push
outsl
ljmp
lahf
xchg
adc
popf
cmp
nopl
sub
ret
pop
arpl
cmpl
sub
cmpsb
push
iret
enter
adc
loop
ficoml
add
sbb
mov
cmpsb
imull
mov
mov
ror
dec
out
call
mov
push
fldenv
es
or
ds
mov
pop
repnz
mov
xchg
jg
movsl
pop
pushf
add
ljmp
xor
push
jne
and
cmp
mov
push
repz
outsl
inc
xor
push
movsb
cmpsl
lea
test
ret
lahf
das
cli
cmp
dec
and
sbb
leave
jl
mov
add
add
mov
sub
mov
test
add
sbb
sub
xor
add
repnz
add
add
jmp
push
sti
mov
pop
and
lds
add
not
push
out
adc
and
mov
push
sub
lret
rorb
xor
mov
cltd
inc
inc
aas
add
fstpt
inc
inc
mov
and
mov
dec
pop
pop
cmp
mov
mov
mov
cmp
pop
inc
jge
inc
inc
inc
loope
gs
sub
stc
xchg
aad
fisttps
daa
cmp
aaa
int
add
xor
mov
leave
test
test
xor
or
lret
jmp
xor
adc
jecxz
test
ffreep
sbb
add
push
cmp
mov
pushf
loope
fstps
xchg
jge
xor
out
xchg
push
jae
sahf
addr16
sbb
jae
jne
push
cmc
add
sub
pop
and
jnp
jg
dec
dec
lods
addr16
mov
jns
movsl
popf
inc
xchg
push
stos
add
inc
cmc
jmp
cmp
pushf
jb
sbb
test
stos
mov
into
stc
xlat
jl
scas
add
out
loope
xchg
push
test
dec
inc
mov
addr16
or
xchg
push
repz
sti
fildl
lret
xchg
sbb
clc
popa
mov
jge
push
sub
jnp
add
mov
scas
shr
add
mov
mov
es
sub
sti
pop
xchg
shll
inc
jg
lods
xchg
dec
repz
push
mov
push
xor
mov
mov
cs
dec
sbb
sub
jl
xor
xchg
cmpsb
and
dec
add
in
repnz
add
jb
ja
xchg
mov
je
adcb
movsl
push
mov
sub
decb
stos
in
sti
xchg
mov
sbb
xor
jg
xchg
jmp
sbb
dec
inc
cmc
cs
xor
jle
sti
lods
mov
aad
mov
adcb
push
sarb
xor
stos
inc
sub
sti
and
add
cltd
or
ljmp
sti
popf
add
add
std
jg
add
push
mov
xor
lret
and
mov
add
addl
popf
aas
sbb
push
xchg
add
add
ljmp
xor
xor
add
adc
lds
imul
inc
mov
jmp
mov
xor
sub
imul
push
mov
mov
arpl
add
sahf
nop
mov
add
add
add
add
or
xor
aaa
add
rep
push
add
aad
fmulp
xor
lock
testl
push
outsl
add
sub
aas
mov
mov
sbb
mov
push
sub
mov
stos
add
ds
push
dec
jno
add
xor
in
mov
out
pop
sahf
cmpsl
xorl
fldl
push
lods
pop
adc
sbb
inc
add
out
jmp
sbb
mov
dec
xor
inc
inc
into
jae
lods
xchg
sbb
xchg
in
and
mov
mov
pop
mov
sub
out
ja
push
add
jne
sub
mov
pusha
mov
iret
stc
aam
push
add
add
addr16
mov
dec
dec
jb
adc
mov
divl
xchg
sub
mov
out
pop
mov
push
mov
xor
add
inc
mov
shrl
fisubrl
lret
je
or
xor
inc
cmp
push
clc
pop
add
and
mov
mov
mov
adc
inc
add
add
xor
fdivs
loopne
add
aas
xchg
in
mov
fxtract
or
mov
cld
push
add
adc
adc
add
sbb
sub
sub
xor
ret
push
das
repnz
xor
push
mov
xor
xchg
fs
pop
setle
aas
mov
pop
mov
jo
or
mov
cltd
mov
shlb
mov
jmp
xchg
aad
mov
inc
dec
add
mov
jne
push
cwtl
add
mov
mov
shlb
shlb
ret
ja
in
inc
call
imul
cmpsl
cmpl
out
or
add
and
sub
sbb
jge
jb
ret
mov
pop
shll
pusha
cs
insb
pop
add
ret
je
js
push
inc
addb
test
nop
mov
pushf
mov
test
leave
dec
mov
cmpsl
and
les
pop
lcall
mov
adc
cltd
in
sub
jl
add
cmpsl
out
and
dec
xor
mov
sbb
add
cmp
xchg
fdivs
sub
inc
cmp
add
inc
inc
das
cs
dec
xchg
in
pushf
sub
add
loopne,pn
mov
repz
push
add
arpl
and
lret
add
ja
pop
dec
rcrb
mov
pop
xor
rolb
cs
sti
inc
inc
xor
mov
push
pop
pop
xor
push
mov
mov
out
mov
nop
sahf
add
out
cwtl
mov
mov
xor
jge
je
mov
jmp
cwtl
mov
push
xor
xor
or
sti
int3
aaa
add
push
xorb
inc
xchg
add
fsts
mov
dec
adc
sbb
or
jno
push
je
add
pushf
stc
movsb
decb
mov
loopne
mov
aas
mov
sub
mov
dec
add
test
jne
bound
dec
arpl
xchg
push
inc
xor
push
pushl
push
lret
fs
test
cmp
fldenv
les
sub
in
dec
xchg
fwait
adc
fwait
sbb
mov
flds
inc
inc
add
das
repz
incl
lret
sti
xchg
loope
mov
rcr
mov
in
and
adc
mov
sub
xor
cmp
aad
dec
add
jne
push
add
int
add
mov
pop
jnp
cmp
sti
daa
test
xchg
jecxz
sub
sarl
sti
fistps
push
test
push
cli
insb
jne
xchg
mov
in
int3
nop
aam
int
inc
leave
lret
add
cmp
inc
cmpsl
cmp
das
lods
fs
pushf
lcall
les
lahf
leave
repz
scas
inc
and
add
add
lods
mov
or
in
lock
andb
inc
inc
mov
xor
scas
je
jl
mov
add
int3
fidivl
mov
pop
cld
repnz
add
adc
jno
xchg
xchg
lahf
push
movsb
jae
je
fildl
fnsave
sub
movsb
rclb
aam
in
outsl
and
xor
or
mov
sbb
sub
inc
jmp
lds
or
daa
filds
icebp
xchg
add
sub
mov
cmc
aam
and
fisubl
sub
mov
sub
xor
add
cmp
scas
push
push
flds
bound
test
dec
icebp
mov
add
sbb
in
ret
xor
stos
and
adc
add
ror
andl
mov
lcall
adc
loope
pushf
or
lods
lods
xlat
mov
xor
sub
aam
sub
in
idiv
sub
inc
or
enter
and
or
iret
xchg
cmp
fisubrs
adc
aad
push
xor
inc
mov
fadds
xchg
ljmp
xor
xor
mov
mov
cmc
inc
enter
mov
add
push
sbb
xor
xor
mov
in
stos
jae
cld
xchg
pop
sbb
pop
jno
xchg
inc
jl
mov
stc
fsubrl
mov
adc
add
xchg
add
jmp
jl
add
subb
push
adc
es
arpl
stos
dec
add
xchg
pushf
mov
inc
lods
mov
aad
in
loope
xorb
lahf
pop
iret
pusha
fnstenv
sub
imul
call
add
sub
mov
in
clc
loopne
rclb
imul
decl
xor
add
xchg
jnp
dec
inc
test
decb
push
sbb
stc
xchg
sub
mov
pushf
jl
aas
mov
mov
pop
int3
jmp
jg
fcompl
jae
ja
adc
mov
pop
aas
add
mov
add
push
mov
mov
xor
inc
inc
mov
outsl
test
lret
mov
and
push
mov
cwtl
add
lods
call
nop
xchg
outsl
pusha
lahf
les
adcl
add
or
jo
rolb
jnp
pop
in
outsl
cmp
add
dec
pop
out
inc
jge
add
popa
or
outsl
out
insb
icebp
das
mov
fimuls
mov
cld
rorl
cmp
add
sub
dec
push
dec
jnp
insb
add
jg
cltd
mov
iret
lods
ja
and
imul
dec
mov
jne
inc
insb
cmp
jno
out
pop
inc
rol
les
push
sub
psllw
jmp
and
dec
cli
fs
cmp
sub
psrlq
push
mov
add
sbb
inc
stos
call
xchg
pop
inc
and
addb
dec
sbb
lea
xor
js
subb
rolb
loopne
push
add
cmp
cmp
gs
std
push
les
add
fmuls
mov
mov
mov
mov
or
pop
lods
test
movsb
stc
lods
jbe
ret
pop
cmpsl
shlb
mov
xchg
cs
xchg
movsb
filds
scas
mov
pop
out
mov
jns
adc
sbb
jnp
push
sub
add
out
outsl
dec
xor
js
aaa
mov
push
arpl
lock
clc
movsl
nopl
xor
or
pop
scas
jg
xchg
fists
jae
mov
jo
sarl
inc
mov
enter
lea
lods
sysenter
out
mov
add
ljmp
xchg
out
inc
ret
cmp
icebp
push
inc
push
add
subb
into
sbb
movsb
notl
pop
sbb
mov
mov
fsubrs
enter
mov
add
fdivrl
push
lret
mov
mov
imul
jb
dec
lret
xor
xor
test
cmp
add
sub
push
test
mov
push
in
pop
ret
cmp
inc
jns
xchg
fs
leave
inc
xchg
mov
ja
and
mov
push
mov
int3
loope
popa
sbb
ds
loope
xor
es
lahf
cli
out
fimull
push
es
push
fcoml
cmp
out
inc
push
inc
xorb
pop
mov
mov
aaa
cltd
pop
xor
aaa
push
lods
jge
mov
dec
mov
xchg
in
ret
inc
cmp
push
mov
shrl
test
es
sbb
fisubs
divl
jg
fs
cmc
inc
pop
dec
adc
inc
mov
cmpsl
inc
cwtl
pop
xchg
dec
xlat
jb
xchg
xor
inc
daa
push
cmpsb
or
and
jp
xchg
inc
jns
mov
mov
xchg
push
cli
cmp
push
hlt
pop
rcr
fcmovu
int
sbb
dec
nop
imul
je
inc
jns
popf
inc
push
popf
sub
xchg
sub
push
inc
aaa
jns
push
push
sub
sbb
mov
leave
repnz
es
add
cmp
jne
rorb
mov
mov
push
mov
out
ret
dec
add
dec
and
pusha
lahf
add
cmp
sub
add
sub
test
jae
out
stos
sub
cld
jl
inc
arpl
add
mov
ja
cld
lock
add
movsb
je
clc
mov
dec
mov
in
jmp
sub
dec
out
push
add
sub
and
inc
pop
xchg
cmp
out
sub
icebp
add
cmp
popa
push
les
jnp
dec
mov
jne
mov
outsl
inc
inc
mov
xor
cwtl
jge
add
push
mov
jns
mov
push
dec
jnp
xchg
pop
add
inc
push
push
add
call
push
mov
sbb
dec
jns
andnps
mov
data16
popf
clc
pop
pop
jbe
adc
arpl
or
inc
stos
jp
test
mov
add
sbb
add
add
add
xor
add
add
add
add
add
add
inc
jae
add
arpl
add
add
je
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
cmp
add
add
add
add
add
push
add
jae
dec
add
cmp
add
add
add
add
add
add
add
push
add
add
add
jb
add
add
add
dec
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
outsb
add
add
add
add
add
dec
add
push
add
inc
add
push
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
push
add
add
data16
add
add
add
dec
add
imul
add
add
xor
jne
add
add
dec
add
add
add
add
add
add
add
add
add
add
je
add
add
add
add
add
add
add
imul
add
add
add
dec
add
jns
add
add
add
add
imul
inc
add
add
pop
add
add
add
jae
jno
add
push
add
add
push
add
add
bound
add
add
add
add
inc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
outsb
add
cmp
add
add
add
bound
add
add
inc
push
add
add
inc
add
add
add
add
add
add
bndstx
xor
pusha
push
insb
add
hlt
dec
cld
jne
dec
sbb
push
test
mov
xchg
sub
sub
int3
ror
loopne
hlt
dec
cld
sbb
cli
push
dec
mov
sbb
lcall
je
jl
test
lcall
sbb
in
inc
xor
pop
jo
and
xchg
lcall
jbe
mov
les
mov
popf
dec
add
sbb
and
jl
hlt
pop
clc
xchg
test
or
ret
add
inc
pop
out
mov
bound
inc
xor
popf
xchg
xchg
nop
jae
xchg
xchg
push
mov
por
lods
mov
mov
cmpsl
jae
movsl
add
mov
mov
cmp
ret
mov
mov
mov
push
mov
sbbl
lcall
js
xchg
add
add
inc
or
xor
or
push
fnstenv
inc
cmpsl
cmc
sbb
xchg
stos
jg
inc
mov
xlat
sub
subb
mov
call
and
sar
or
pusha
dec
inc
movzwl
roll
cmp
sbb
mov
sub
dec
fwait
push
dec
xor
xchg
inc
insb
lcall
pop
mov
and
fcomps
dec
mov
add
adc
inc
xor
mov
inc
add
cs
mov
addl
adc
ret
adc
scas
xchg
xor
add
jecxz
pusha
inc
mov
xor
jo
xchg
sbb
aam
gs
stc
outsl
ja
adc
add
out
jo
dec
cmc
mov
outsl
add
and
je
incl
gs
xor
lods
lock
xor
cmc
push
lods
xor
xorl
sbb
ret
test
fwait
nop
jmp
iret
add
pop
scas
xlat
add
addb
jecxz
shll
push
add
popa
bound
outsl
add
roll
add
cmp
arpl
outsl
xchg
mov
pop
filds
add
insl
shlb
clc
pop
imul
repz
stos
pushf
imul
icebp
and
jmp
xor
jg
jle
arpl
stos
cmpsl
shll
fxch
add
and
js
mov
cmpsb
popf
lods
cmovl
cmpsl
lods
lcall
cmp
mov
mov
push
mov
lds
sahf
lcall
sbb
rcl
icebp
fiaddl
loopne
mov
xchg
pop
add
fstps
mov
mov
push
sbb
shll
or
insl
imul
mov
test
aam
lock
jo
pop
verw
outsb
push
je
adc
out
ja
stc
push
push
ds
pop
pop
add
arpl
cltd
push
sub
mov
and
lea
mov
test
pop
mov
aam
dec
pop
and
insl
pop
mov
jae
lods
xor
inc
jb
cs
bound
addr16
mov
lret
dec
add
js
mov
pop
fwait
jp
xor
dec
inc
and
add
pop
push
cltd
clc
outsl
dec
xchg
inc
dec
fwait
push
inc
inc
dec
gs
addb
mov
add
add
jmp
ljmp
jns
bound
shll
jbe
mov
jae
mov
push
lret
sub
movsl
mov
adc
add
pop
sahf
lods
jmp
add
and
jb
jno
jo
sbb
outsb
inc
insl
lcall
imul
lods
add
bound
scas
xchg
stos
add
outsb
push
pop
ret
add
mov
xchg
cmp
pusha
add
inc
popf
add
xchg
pop
add
test
lfs
lods
mov
outsb
xchg
push
sub
faddl
push
dec
push
push
adcb
das
push
inc
push
lcall
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
dec
inc
inc
adc
jl
inc
push
inc
stos
mov
dec
movsb
imul
stc
sub
cmp
jb
imul
hlt
cmp
mov
shll
mov
add
into
idivb
pop
mov
xchg
mov
add
cmp
xor
xor
mov
outsl
dec
sub
dec
pop
mov
sti
test
add
mov
push
ror
popf
fs
jp
aas
adc
daa
cwtl
pop
xchg
pop
xchg
mov
loopne
addl
jae
inc
pop
sbb
mov
jo
push
outsb
push
mov
mov
xor
outsl
addr16
frstor
scas
fldcw
jnp
and
sub
add
fbstp
mov
pop
add
pop
xor
mov
jae
lods
or
mov
dec
cmp
add
xor
xor
xchg
cltd
adc
fistl
imul
add
dec
sbb
push
lds
movsb
add
roll
add
mov
xor
mov
push
sarb
dec
add
mov
sub
inc
outsb
push
je
insl
loopne
hlt
out
mov
jae
popf
bound
ret
adc
add
xchg
xchg
inc
inc
adc
inc
dec
push
add
mov
psubw
push
push
xchg
pop
es
xchg
xor
push
sbb
add
sbb
xor
in
mov
mov
je
dec
lcall
xor
and
lods
xor
push
xor
ja
aad
inc
or
and
test
sahf
or
xchg
int
sbb
pushf
jae
lahf
add
daa
shrb
mov
rcr
dec
and
cmpsl
mov
mov
push
enter
add
sub
popa
dec
outsl
mov
dec
add
lea
jbe
cmp
mov
inc
jo
int
mov
adc
lcall
cmpsl
scas
xchg
xchg
in
mov
outsl
dec
pop
arpl
inc
add
jae
sub
jnp
cmpsb
rcrl
pop
out
pop
sub
cmp
push
inc
add
scas
cmpsb
adc
mov
xor
mov
repz
pop
mov
outsb
cmp
gs
in
ja
and
orb
xchg
push
add
clc
mov
push
fbld
mov
jp
or
add
ds
adc
pop
xor
iret
xor
xor
or
jae
add
das
pop
add
lcall
sub
add
sub
xchg
mov
dec
out
loopne
xchg
add
jne
insb
daa
test
sbb
add
add
pop
arpl
aaa
cmp
rcrb
or
jo
push
push
js
inc
and
add
adc
ficoml
and
mov
xor
stc
and
mov
xor
or
mov
xchg
imul
xor
xorb
inc
subl
rclb
mov
test
ret
rcl
cmp
xchg
and
cmp
sub
xor
add
dec
jae
ret
pop
add
pusha
jns
xor
xchg
add
nop
jmp
mov
subl
add
cmp
xor
or
adc
xchg
sbb
andl
xor
pop
sub
inc
cmp
dec
lcall
pop
andb
or
push
das
mov
xor
or
mov
xor
movl
mov
inc
adc
outsb
sarb
dec
fidivrl
sti
jbe
push
std
push
or
jl
cmp
sub
pop
int
inc
pop
mov
jnp
in
xchg
jg
push
and
jns
das
add
insb
jg
xchg
fwait
fwait
pop
mov
test
mov
add
sub
lcall
and
orl
out
add
or
adcb
mov
das
sbb
add
dec
arpl
dec
mov
mov
and
ret
add
rclb
or
jae
cmp
lock
xchg
out
add
xor
rclb
int
stos
pop
jae
je
aaa
loopne
pop
dec
dec
xlat
sbb
dec
test
jl
inc
mov
push
shrb
mov
nop
jae
popa
add
or
pop
ret
mov
repz
inc
sbb
add
out
or
imul
jecxz
add
inc
daa
xor
xchg
jae
int3
pop
sub
pusha
aaa
pop
stc
test
add
lahf
push
dec
mov
adc
scas
adc
lods
pop
stos
sub
sbb
pop
subb
mov
add
push
mov
pop
jo
mov
and
add
lods
fwait
lcall
stc
cmp
fcom
sub
add
adc
cmp
dec
add
lods
cmp
or
xchg
push
and
nop
xor
bound
and
and
jae
arpl
mov
mov
and
mov
inc
adc
insl
jmp
add
sbb
das
or
ret
inc
lock
or
inc
repz
in
and
add
cmp
xlat
sub
jecxz
daa
ret
cmpsb
ss
mov
lret
into
cmpb
sbbl
cwtl
add
pop
inc
lods
mov
sbb
sub
or
add
movsl
add
dec
xlat
and
sbb
or
add
dec
adc
pop
hlt
add
inc
adc
push
out
into
add
adc
cmp
sbb
dec
add
push
sbb
add
pop
lods
dec
sbb
sbb
jns
lret
adc
outsl
xchg
inc
and
ret
mov
push
mov
or
inc
adc
jmp
jecxz
mov
in
fwait
mov
sub
sbb
sub
cmp
sbb
dec
sub
subb
arpl
sbb
dec
mov
ror
jb
push
push
add
nop
cmc
xchg
fistpl
mov
mov
pop
mov
add
mov
shl
and
add
jmp
add
inc
or
loope
pop
dec
xor
add
add
or
add
imul
inc
mov
leave
add
cmp
and
dec
add
pop
dec
pop
xor
mov
push
push
das
sbb
jnp
call
fiaddl
cmp
adc
dec
add
push
mov
mov
add
add
sbb
or
shlb
scas
add
js
sbb
dec
add
shlb
mov
adc
je,pn
js
xchg
dec
dec
sti
add
add
das
cmp
or
pop
fs
je
sbb
outsl
addr16
imull
or
xor
sub
adc
jnp
addb
dec
or
push
stos
add
outsl
arpl
mov
push
ret
cmp
jo
add
jnp
cmpsb
or
jbe
mov
or
jmp
push
push
mov
and
add
push
xor
fisubrs
add
sbb
inc
jmp
add
sub
addb
mov
cs
mov
dec
loopne
add
les
stos
mov
or
sbb
mov
leave
inc
mov
cmp
sub
mov
ss
fistl
inc
sub
int3
add
inc
dec
mov
jg
cmp
int3
fadds
push
push
fwait
loopne
ret
pop
outsl
in
pop
sbb
add
pusha
lea
sub
lock
push
adc
cld
sub
je
jne
js
lock
add
jl
or
sbb
dec
test
add
sbbl
add
pop
and
and
pushf
ret
sub
outsl
mov
add
jae
test
xor
lods
add
cmp
sub
mov
pop
inc
aad
sub
mov
dec
les
adc
dec
sbb
mov
pusha
scas
sub
inc
push
into
fs
fdivrs
adc
loopne
je
fnsetpm(287
sub
call
in
cmp
test
fwait
clc
ret
mov
cmp
sbb
cwtl
sub
sub
fwait
adc
mov
rclb
sbb
mov
les
outsl
sub
rclb
sub
pop
xor
xor
pushf
fsubrl
mov
in
dec
inc
aas
mov
insb
lock
sbb
scas
add
xorb
std
in
test
dec
mov
daa
ret
imul
es
dec
stos
adc
dec
sub
clc
mov
js
lea
dec
mov
mov
pop
inc
in
or
andl
je
arpl
adc
dec
int
int3
and
pop
sbb
or
cmpl
push
or
add
sbb
movl
shlb
sub
add
push
push
xchg
add
dec
pop
adc
int3
xor
xchg
lods
add
mov
test
lea
jecxz
fiaddl
add
push
test
rorb
xchg
xchg
add
dec
lret
je
push
add
add
adc
js
sub
lock
movb
xchg
data16
xchg
push
mov
xor
mov
cmp
sub
mov
call
push
outsl
push
add
punpcklwd
mov
mov
add
out
ficoml
push
icebp
add
bound
adc
mov
pop
arpl
adc
mov
xchg
jmp
sub
fisttps
mov
and
mov
pop
sbb
fistpl
fimuls
push
lods
call
cld
xor
add
mov
rorl
xorb
imul
adc
sbb
les
mov
mov
dec
add
jne
pop
lock
flds
into
add
loopne
sbb
fisttps
push
call
stos
adc
adc
dec
add
inc
repnz
lods
test
add
lcall
roll
jl
cmpsl
xor
mov
in
xchg
push
adc
scas
data16
nop
repz
ret
and
sbb
das
or
jae
flds
leave
prefetcht1
mov
insb
lret
std
adc
incl
imul
subl
dec
pop
stc
lds
arpl
mov
xor
add
sub
mov
sbb
mov
mov
mov
rcrl
sbb
inc
lods
inc
jb
jae
imul
scas
pop
jbe
loopne
lcall
cmpl
data16
mov
add
fstl
pop
das
mov
popfw
sbbl
mov
rcrl
mov
call
xchg
repnz
inc
jbe
idivl
ja
and
pop
pop
pop
insb
sub
sahf
sub
inc
jnp
jns
shrl
mov
fnstcw
or
sbbb
push
rcrb
mov
repz
movsl
fadds
push
dec
popa
hlt
test
pop
jae
hlt
dec
rcrb
lea
call
add
stos
push
mov
jecxz
push
mov
mov
pop
xchg
push
push
dec
add
sbb
das
aas
add
cmp
pusha
mov
pop
ds
mov
into
push
or
jecxz
in
push
decl
jle
add
add
mov
stc
jecxz
jle
add
lahf
add
add
sbb
sbb
movsl
add
mov
sbb
sbb
insl
inc
and
inc
push
mov
popf
mov
push
pusha
call
or
dec
add
sbb
ret
lahf
sbbl
cmp
add
mov
cmp
sub
sub
xor
aas
clc
lcall
out
cmp
sub
mov
mov
lret
das
xor
insb
cmp
mov
nop
aad
add
adc
push
rorl
mov
cwtl
sbb
test
add
es
shlb
mov
jbe
fists
or
ret
sub
ret
dec
lds
mov
sub
movl
outsl
inc
test
dec
das
add
adcl
out
add
call
dec
add
divl
test
sbb
outsl
and
sti
push
cmp
mov
pushf
ljmp
mov
inc
mov
mov
jbe
or
push
add
cli
dec
repz
jmp
das
add
mov
xor
adc
dec
and
sbb
mov
or
lea
movsb
fldt
sbb
insb
mov
jno
arpl
mov
movsl
cwtl
jle
sub
pop
jbe
dec
aaa
stc
sbb
aaa
add
test
in
adc
mov
and
mov
sub
jne
push
push
lea
cwtl
ret
and
jmp
pop
mov
add
pop
test
add
dec
mov
xor
mov
dec
or
shrb
push
je
xor
leave
pop
mov
add
in
lret
loope
mov
movsl
jg
and
add
or
or
cmp
push
andl
sbb
jae
in
ja
add
mov
pminsw
stos
xlat
pop
inc
mov
and
cmpb
push
jo
sbb
lahf
jmp
or
add
mov
popa
add
mov
jl
addb
pop
add
or
mov
add
add
in
lods
cmp
sub
sbb
and
lret
je
shl
mov
sti
xor
xchg
ficomps
or
mov
leave
repnz
into
jmp
pop
add
sbbb
sub
cmp
jecxz
pusha
xchg
sbb
ret
mov
jl
rorl
lcall
mov
mov
jae
andl
stos
fsubrs
aas
dec
icebp
push
sbb
ror
lods
fisubs
adc
push
inc
mov
and
fsubrl
dec
aam
push
mov
pop
xlat
add
cmpsl
cltd
xchg
mov
mov
dec
mov
lcall
sub
inc
pop
jg
add
pop
ret
ja
loope
out
insl
mov
sub
xor
out
cmp
shrl
lahf
sbb
mov
pop
fdivl
add
cmp
add
xchg
inc
xchg
sbb
add
or
popl
and
lret
roll
das
sub
add
stos
inc
dec
sub
push
or
mov
xor
push
daa
cmc
sahf
add
loopne
mov
dec
iret
or
dec
xor
cmc
jg
xchg
jae
movsl
into
sub
pop
mov
add
dec
pop
sbb
ljmp
mov
dec
insl
xlat
leave
ret
mov
mov
cmp
shr
adc
mov
cmp
mov
xor
test
push
dec
out
jecxz
shlb
lods
sub
push
cmp
mov
cmc
cmpsl
fcmovnu
jg
stc
mov
xor
pop
repnz
pop
xorl
repz
cwtl
push
xor
enter
mov
add
stos
and
loopne
and
mov
sbb
add
pop
mov
or
xchg
mov
into
addl
push
mov
pop
and
shlb
loope
sbb
add
imul
xchg
pushf
out
mov
inc
pop
popa
popf
lahf
outsl
mov
xor
cmp
aas
add
shrb
xor
in
xchg
sbbl
push
xchg
push
pop
push
xor
or
push
push
sbb
stc
fwait
cmp
push
call
xchg
mov
movsb
xor
inc
pop
lret
loop
scas
fcmove
fwait
mov
add
pop
xchg
dec
iret
dec
mov
invd
or
add
xor
push
fcomi
ret
sub
mov
das
ror
add
shr
rep
test
add
iret
xchg
cmp
test
fistpl
int3
pop
lahf
xchg
pop
mov
lret
sub
cmp
add
xchg
mov
shlb
sub
or
push
push
adc
mov
cmp
fsts
add
xchg
movl
xchg
out
xorb
ljmp
js
mov
mov
and
sbb
shrb
cwtl
mov
add
fsubp
icebp
adc
push
add
xlat
clc
mov
mov
lods
inc
sub
mov
in
or
dec
push
insl
stos
xchg
add
pop
aas
fldcw
scas
mov
loop
sti
scas
dec
mov
or
je
push
dec
dec
or
adcb
test
or
cmp
add
jne
pop
insb
test
sub
lret
bound
mov
mov
add
mov
xor
popf
xchg
cmpsl
inc
add
cmp
pop
pop
testb
rclb
sub
sbb
add
or
cmp
cs
xchg
imul
mov
cwtl
push
add
insl
scas
xchg
push
and
loopne
mov
xor
in
jl
adc
jle
mov
inc
sbb
je
popa
push
jp
xor
add
cmp
movsl
das
jge
cmc
cmp
addr16
and
push
add
cli
cmp
ljmp
sbb
ret
iret
in
mov
dec
jl
adc
mov
jae
inc
cmp
push
mov
scas
lods
add
leave
loope
or
mov
or
push
add
adc
add
les
cmp
lock
dec
push
mov
sub
sbb
add
lods
adc
xor
add
bnd
or
subl
fstpt
sbb
testl
jne
push
lods
push
fs
mov
out
mov
adc
movsl
pop
es
xchg
adc
insl
int3
pop
movsl
sbb
mov
xchg
sub
cmp
push
sub
call
repnz
pop
hlt
lock
adc
cmp
mov
test
add
pusha
mov
push
add
leave
jp
sub
loop
and
sub
ja
sbb
icebp
sub
adc
push
lret
aas
mov
ljmp
mov
mov
rcrl
cmpsl
add
push
add
or
cmp
jb
xchg
lods
mov
mov
add
arpl
lods
pop
xor
scas
inc
mov
add
push
sbb
mov
add
add
xlat
hlt
sub
xchg
add
shll
push
rol
cli
mov
pop
adc
enter
push
pop
mov
cmp
cs
mov
inc
jae
pop
jbe
adc
cmp
sbb
xor
dec
addb
sbb
into
stos
mov
xor
mov
push
movsl
lahf
enter
sub
aad
int3
add
sub
push
call
sysret
adc
or
lock
loope
roll
cltd
lods
inc
and
cmp
addr16
repnz
pop
in
mov
mov
push
stos
mov
push
add
lret
je
mov
ret
push
add
push
dec
mov
adc
or
jae
rolb
imul
add
or
ret
mov
jae
and
repnz
mov
and
add
call
dec
mov
xor
loope
inc
cmpsb
jmp
lea
fisubrl
sbb
add
call
lock
sub
mov
push
fcoms
mov
enter
imul
fucomp
cmp
cmpb
repz
push
inc
std
adc
call
jecxz
sti
cmc
jae
add
mov
jg
push
fadds
xchg
pop
push
jo
sbb
or
add
inc
sub
sbb
or
pop
push
and
push
add
call
add
cmp
aaa
jae
push
pop
add
out
sbb
mov
mov
adcb
adc
mov
cmp
divl
inc
mov
dec
sub
stos
imul
xor
cmp
sbb
outsl
jae
into
roll
lret
sbb
stos
add
jp
lret
push
call
sbb
popf
repz
lea
sub
or
adc
adc
sub
sbb
add
xchg
add
add
sub
mov
das
add
bound
adcb
adc
aam
out
mov
jae
ret
imul
lcall
jg
xchg
jp
scas
pop
xchg
lods
xor
enter
mov
push
or
jecxz
add
je
imul
lret
out
pop
jg
add
jmp
in
shll
add
push
cmp
xor
cld
mov
xorb
lret
add
mov
xor
ret
rolb
mov
popf
fnstcw
pop
dec
and
mov
mov
jo
fidivrl
push
pushf
xor
inc
mov
aaa
xor
pop
rcr
fidivs
mov
mov
pop
mov
push
int3
test
cmpsl
sbb
mov
popl
mov
xor
mov
xor
insb
lret
lahf
lea
mov
push
add
cmc
jmp
or
add
scas
mov
mov
mov
or
xchg
pop
sub
adc
mov
add
pop
add
or
or
enter
fisttps
or
push
and
mov
pop
sbb
pop
ja
lcall
ret
inc
lret
add
jnp
das
ret
mov
into
fcoms
popa
iret
scas
xor
add
cltd
mov
pop
or
mov
scas
pop
clc
add
inc
or
dec
leave
test
rorl
xor
dec
lds
and
mov
add
add
sub
mov
push
mov
les
jp
mov
add
jmp
add
pop
inc
ficoms
add
jmp
mov
inc
jl
or
inc
push
pop
jecxz
push
addl
mov
es
add
sbb
xchg
add
mov
or
rcr
inc
jl
cmpsb
add
or
aad
add
mov
mov
pushf
pop
sub
mov
cld
stc
jmp
je
or
cmp
push
test
mov
icebp
cmpsl
ret
cld
add
jmp
outsl
jno
cmp
movsl
add
out
or
fwait
daa
popf
and
aam
jmp
lret
stc
add
and
fisttps
jle
aas
push
xchg
test
fiaddl
jp
faddl
cmpsb
jne
fstp
push
adc
jbe
push
adc
jge
or
mov
xor
popa
jns
out
push
test
lds
lcall
jmp
das
fistps
outsl
jl
add
mov
sub
or
add
ds
dec
out
mov
xor
aas
pop
dec
xor
xchg
mov
push
test
shrl
pop
mov
mov
cwtl
jle
jge
into
mov
xor
out
push
mov
dec
pop
aaa
cld
incl
test
mov
sti
add
popf
arpl
add
dec
pop
lock
add
xor
xchg
push
enter
in
les
inc
mov
ja
push
sbb
cmp
xchg
je
cli
jp
xchg
popf
daa
add
test
ret
push
les
cld
mov
inc
dec
add
xchg
fsubs
add
and
pop
mov
mov
pop
leave
lret
jl
mov
test
mov
adc
pop
add
ljmp
or
cltd
arpl
das
mov
add
out
cmp
add
push
lds
xchg
orb
sbb
jmp
xor
cmpsl
insl
xchg
clc
aas
into
push
add
repz
bound
dec
xor
out
pop
mov
add
stc
ds
dec
pop
add
mov
add
mov
scas
or
in
fwait
std
add
cmpl
add
fucomp
jbe
pop
mov
lret
mov
test
adc
popa
shll
jb
mov
jg
mov
aas
add
dec
mov
in
lahf
jo
inc
sub
add
cltd
mov
hlt
imul
inc
fnstsw
add
sub
aaa
jnp
repnz
add
imulb
mov
mov
cmc
mov
pop
call
adc
push
pop
fisubrs
mov
sub
add
fs
or
add
add
ficoms
mov
repnz
add
lcall
in
jmp
xchg
ljmp
jecxz
pop
inc
xor
add
lock
inc
ret
rolb
sarl
sahf
add
data16
add
lahf
scas
mov
out
cmp
pop
add
jl
loopne
pop
dec
call
adc
fistl
bound
sub
loope
scas
lret
dec
mov
jp
les
movsb
pop
addr16
hlt
aas
adc
stos
or
inc
xchg
mov
dec
add
jmp
or
add
popa
mov
sar
loop
mov
mov
addr16
mov
sub
and
jae
xlat
add
mov
add
and
adc
add
roll
sub
mov
ret
sbb
ret
dec
add
bound
xor
sahf
xchg
add
fiaddl
decb
jbe
mov
rclb
cmp
cmpl
mov
cltd
andl
sub
ljmp
mov
add
lea
add
test
test
add
adcl
add
mov
add
lods
idiv
mov
add
das
pop
jl
je
xchg
mov
mov
add
push
inc
mov
sbbl
hlt
out
jmp
fildl
adc
xchg
cmp
in
movsb
push
add
into
sti
rclb
jmp
lahf
movsb
je
add
lods
scas
xchg
xchg
fidivrl
adc
mov
sub
mov
xchg
cli
lea
lret
pop
out
repz
mov
jo
push
sub
sub
out
sub
loopne
outsb
push
mov
add
add
stos
sub
jo
mov
pusha
mov
test
js
lret
add
sub
add
adc
clc
aaa
or
hlt
aad
inc
pop
popf
add
cmpsl
sub
sbb
sbb
mov
sub
test
lds
sbb
xrelease
pop
cmp
push
mov
and
push
int3
or
popf
xor
inc
add
mov
sbb
mov
scas
add
dec
add
sbb
sbb
into
mov
add
xchg
lcall
sub
mov
xchg
xchg
push
push
lret
add
jns
out
add
getsec
in
inc
faddl
popf
icebp
jmp
jl
inc
xlat
add
stos
loop
cmpsl
mov
cltd
mov
pop
sbb
aad
add
mov
and
sbb
xor
lret
add
sub
pushf
add
push
xorb
xor
jns
loopne
push
dec
cmp
mov
les
add
imul
pop
mov
fildll
out
gs
xor
lds
outsl
sbb
adc
xorl
shl
enter
mov
sub
mov
in
mov
mov
das
loope
inc
outsl
mov
add
fmulp
add
mov
jecxz
je
or
mov
scas
add
js
pop
lods
lcall
and
pop
jmp
jmp
enter
jae
push
fwait
jnp
dec
sub
add
cmpb
imul
push
aas
js
xchg
sti
pop
lahf
mov
jns
test
sbb
cs
fstpt
mov
inc
lret
xchg
aam
dec
insb
add
xchg
push
pop
roll
mov
pop
cmp
mov
popa
add
add
sub
scas
fisubrs
stos
mov
cltd
dec
mov
add
jp
sub
xor
push
adc
or
mov
imulb
mov
mov
repz
mov
adc
fildl
shlb
cmp
add
imul
mov
mov
add
stc
push
in
lcall
xor
add
ljmp
cwtl
xchg
outsl
add
cmc
fildl
dec
test
stc
add
je
or
adc
jecxz
idivb
xor
sub
mov
mov
push
add
dec
add
jg
shlb
fildll
mov
sbb
sbb
iret
mov
pop
push
add
stos
mov
mov
rcr
jge
xor
add
shll
aas
inc
xlat
add
mov
jmp
add
dec
fisttps
pop
mov
lds
xlat
test
add
adc
sub
aas
mov
sbb
cmp
stos
scas
add
or
mov
or
cwtl
adc
adc
rcl
mov
and
dec
xchg
add
xor
mov
mov
and
add
push
or
leave
sbb
loope
xchg
ret
scas
pop
adcl
mov
sub
add
mov
fmull
addl
cmpsb
adc
in
add
lods
imul
dec
jnp
lods
mov
push
jae
leave
add
stos
aam
int
cmp
or
xchg
jecxz
insl
cmc
dec
stos
data16
mov
mov
push
xchg
lock
mov
enter
xor
lea
scas
sti
pushf
sbb
xor
mov
mov
scas
ficoms
push
add
loope
mov
rolb
adc
in
rcrb
mov
scas
push
cmpb
add
jmp
sbbb
movsl
mov
stos
psubq
sub
add
pop
loope
cmc
cld
adc
popf
and
pop
outsl
cmpsl
repnz
push
pop
in
cmp
push
into
add
xchg
cmp
lret
push
clc
adc
push
dec
xor
addb
or
ds
mov
lcall
ja
pop
add
fldenv
leave
jg
xchg
fidivrl
add
mov
mov
insl
lahf
xchg
or
add
xchg
inc
add
fnstcw
jns
xor
or
mov
jb
pop
scas
sub
add
bound
mov
or
negb
popf
inc
sbb
sub
popa
add
push
lods
dec
xchg
jmp
jb
xor
or
fcmovb
pop
add
icebp
mov
add
mov
lock
push
icebp
arpl
xor
and
cmp
add
push
stos
push
push
ret
imul
or
jge
call
rcrl
shufps
aas
dec
pop
int3
push
int3
adc
or
in
cmp
push
or
and
jecxz
cmpl
movsb
xchg
xchg
sahf
add
push
in
add
and
add
xorb
mov
enter
dec
jle
rorl
or
add
ficoms
push
clc
mov
or
adc
add
push
sbb
fidivrl
mov
add
lret
ja
or
fisttps
dec
add
fstl
rcl
adc
imul
add
ret
pop
xor
mov
xor
cmp
add
push
in
xchg
add
dec
outsl
mov
inc
aam
sub
mov
jnp
orl
xor
jecxz
pusha
push
and
cmp
mov
fdivrl
popf
add
xor
fisubrs
pop
stos
iret
sbb
jae
xchg
or
dec
jne
add
mov
scas
mov
mov
pusha
and
lret
mov
and
mov
mov
add
fcmovnbe
push
push
push
pop
movb
pop
xor
sbb
inc
ja
add
sub
mov
fsubr
call
andl
add
add
mov
mov
push
add
insl
add
sahf
out
mov
popf
adc
xchg
mov
les
sub
and
sbb
gs
je
and
test
sub
xor
add
mov
add
sub
inc
mov
fimuls
cmp
jecxz
add
pop
int
imul
std
mov
shr
add
cs
insb
pop
adc
sub
push
xorb
push
add
mov
mov
mov
ficoms
loop
insb
add
add
add
push
mov
and
adc
pop
testl
inc
mov
fadd
mov
xlat
orl
outsl
ficompl
leave
inc
mov
push
cmp
js
test
xor
out
scas
cli
pop
cmp
inc
add
push
pop
lods
pop
sub
xorb
xor
xor
pop
jle
and
inc
inc
add
jge
xor
daa
add
and
push
add
or
add
psubsb
inc
adc
sub
adc
cmp
call
filds
out
push
mov
mov
in
lods
pop
mov
dec
add
iret
call
jmp
mov
cwtl
dec
sbb
dec
out
loop
xchg
mov
pop
pop
add
push
inc
or
rol
dec
push
jb
xor
jle
pop
jmp
pushf
repz
lods
imul
and
and
inc
clc
add
xchg
jne
lods
mov
sbb
sbbb
pop
xor
ja
sub
dec
xchg
loopne
stos
dec
rorl
and
outsl
mov
add
js
sbb
mov
fwait
inc
addr16
add
iret
je
add
sub
cmovle
mov
push
sbb
mov
mov
and
ljmp
stc
or
inc
cmp
inc
lea
push
das
add
cmp
mov
push
call
sbb
ret
mov
fsts
movsl
sub
leave
ja
call
xchg
scas
jmp
jo
testb
sbb
mov
and
jmp
adc
arpl
negl
add
cmp
jmp
mov
js
outsl
mov
mov
mov
push
add
dec
mov
adcl
add
lea
sahf
lret
or
je
dec
sbb
out
cmp
xor
lea
inc
inc
adc
outsl
sbb
pop
roll
xor
dec
pop
inc
test
xor
lea
and
push
jne
sub
or
lahf
add
jo
iret
dec
mov
ss
jne
bound
adc
add
js
lods
loope
test
add
xchg
lods
sub
dec
inc
scas
dec
popf
pop
xor
jnp
aam
mov
jae
sbb
inc
add
int
and
xchg
lds
push
clc
fs
inc
mov
inc
mov
aas
xchg
xor
stc
xchg
xchg
push
add
loope
sub
inc
rcrb
ja
mov
add
out
dec
je
arpl
gs
scas
imul
cli
stc
imul
rcll
mov
scas
es
add
add
out
in
inc
hlt
lcall
cmp
fcoms
add
or
xor
fildl
mov
packssdw
or
andl
testl
pop
call
mov
mov
rcrb
test
sbb
mov
add
and
iret
mov
adc
or
or
test
enter
dec
hlt
cmp
fcomps
add
add
mov
mov
je
dec
cmp
and
out
mov
mov
pop
loopne
fsubr
and
mov
addr16
inc
sbb
sub
movsb
sub
je
xor
mov
add
pop
repnz
sub
push
or
jnp
faddl
push
testl
add
add
dec
pushf
shrb
pop
ret
lsl
mov
dec
and
xor
sub
lea
add
mov
jp
cltd
push
or
cli
and
dec
sbb
mov
add
es
pop
push
fwait
inc
add
lret
pusha
incl
add
mov
ret
aaa
scas
adcb
mov
lods
xlat
fwait
pop
sbb
shll
sub
mov
cmp
scas
je
add
push
lcall
push
data16
mov
and
daa
cmp
inc
or
dec
mov
lret
or
repz
pop
push
lea
jg
add
push
incb
xor
push
outsb
add
lock
test
jge
adc
mov
setns
and
sahf
test
decb
cs
jle
inc
add
push
add
add
dec
push
dec
pusha
push
push
pop
add
mov
xchg
add
cmp
insl
xchg
aad
jecxz
pop
push
add
pop
cmp
push
push
cmp
call
mov
ror
adc
stc
imul
lea
movb
dec
sahf
movb
fcoms
xor
popa
xchg
pop
pop
push
mov
mov
xor
jmp
add
and
pop
repnz
add
jl
xchg
mov
push
loopne
imul
sub
jo
scas
cmp
icebp
sbbl
test
mov
xchg
pusha
bound
add
lahf
pop
push
in
adc
pop
je
sbb
xor
stc
add
and
cmp
mov
xor
scas
or
cmp
inc
ficoml
fdivs
leave
jle
cld
add
rorl
stc
inc
in
add
stos
jp
cltd
lret
fstps
add
sbb
cmp
or
and
scas
adc
jle
movsb
pop
mov
scas
dec
jmp
add
and
cmp
lret
icebp
dec
dec
leave
xor
je
lods
fprem1
sub
mov
and
rcrl
add
mov
fadd
inc
mov
mov
inc
cmp
xor
xorl
imul
scas
xor
repz
lret
lea
inc
push
sbb
jns
pop
add
call
and
scas
js
cs
dec
outsb
das
xchg
stos
add
pop
add
mov
test
fwait
xor
xor
std
or
das
inc
divb
in
xor
sahf
cs
dec
push
dec
adc
xchg
popl
sub
mov
adc
push
add
daa
enter
and
pusha
imul
lea
mov
int
out
repz
add
in
fiaddl
push
dec
add
cs
pushl
out
push
add
jb
sti
cld
and
das
xor
add
pop
add
cltd
fs
xchg
js
add
mov
xlat
sub
into
cmpb
pop
xchg
pop
ret
adc
sbb
add
mov
pop
pop
imul
ja
addl
jno
jbe
popl
cmc
iret
hlt
jge
mov
lea
sub
std
loope
push
mov
mov
loop
adc
std
dec
shll
inc
add
fwait
dec
sub
push
enter
and
les
es
sub
xchg
jb
mov
inc
loop
adc
mov
adc
dec
add
adc
pop
add
leave
push
sbb
pop
jo
dec
ja
pop
add
out
cmp
add
add
call
cmp
aaa
repnz
cmp
sbbl
mov
mov
lret
lret
sbb
out
leave
pop
and
push
sbb
add
lahf
or
mov
fs
lcall
mov
cmp
pop
mov
mov
setne
popa
fldl
cmp
jl
push
add
aad
dec
ret
shr
mov
into
dec
add
fisttps
add
sbb
add
xor
mov
adc
popf
add
sbb
push
or
call
jo
gs
jb
mov
jl
push
rorl
jmp
push
sti
je
push
and
into
mov
add
sbb
or
mov
add
add
push
adc
or
mov
addr16
cmpl
add
lea
das
mov
clc
in
rcrb
or
mov
test
sbb
push
xchg
inc
inc
mov
sbb
jbe
stos
push
xchg
insb
pop
mov
scas
dec
shl
movsb
push
push
dec
push
test
les
shrb
movsl
xchg
cmpsb
mov
mov
add
cld
dec
inc
sbb
cmovae
repz
arpl
mov
add
outsb
jge
dec
mov
das
push
inc
add
mov
and
mov
mov
test
in
repz
mov
push
inc
add
movsb
in
std
and
nop
xor
fnstcw
mov
cwtl
cltd
pop
sub
repz
fsubr
mov
sub
mov
dec
push
ret
pushf
pop
dec
mov
sahf
push
fistl
xlat
sbb
repnz
aaa
add
mov
in
xor
jbe
cld
adc
lods
jns
movsl
repz
xor
add
pop
ss
add
pop
push
lock
cmp
pop
inc
inc
test
xor
inc
fwait
vmread
in
sbb
jp
inc
add
xor
jmp
xchg
add
add
xor
push
pop
add
ljmp
movsl
das
cmp
nop
xchg
mov
xchg
inc
pop
mov
sub
adc
gs
mov
or
imul
mov
push
popa
insb
cli
jae
sub
sub
sub
mov
push
sub
inc
mov
lods
idiv
lcall
inc
add
dec
dec
or
push
push
nop
lods
jmp
xor
add
lock
add
and
fimull
cmp
movsl
inc
icebp
stos
dec
loopne
dec
jecxz
cwtl
mov
add
dec
into
xor
add
lea
lahf
mov
mov
ret
sub
and
mov
into
movsb
mov
jae
cld
dec
repz
div
or
pop
and
adcl
push
xor
insb
sbb
pop
add
mov
sbb
cmp
cmp
pushf
ljmp
mov
sub
mov
lea
arpl
in
xchg
xchg
pusha
fs
xor
cli
and
pop
push
cmp
pop
je
push
mov
movsl
pop
dec
add
fisubrl
addr16
push
xor
inc
les
jb
into
sbb
sbb
sbb
push
jae
push
test
faddl
jnp
in
fwait
or
push
mov
sub
into
jmp
jb
adc
xlat
imul
aaa
add
xor
push
jle
or
mov
pop
outsb
sbb
insb
sub
xor
inc
lods
sti
pop
push
repz
sub
outsb
inc
push
pop
pop
lock
sbb
mov
push
push
adc
dec
jge
jecxz
pop
or
fmull
hlt
das
add
str
add
xor
cmp
pop
dec
or
jo
lret
adc
sbb
cmpsl
inc
adc
pop
mov
pop
fidivl
int
jmp
add
jmp
push
add
add
pop
jmp
ss
rorl
add
or
subb
imul
dec
and
lret
mov
push
jl
ds
jge
call
es
jbe
push
subb
mov
or
stos
addl
sub
subl
mov
mov
and
push
and
push
pop
ror
add
ficoml
divl
dec
push
mov
movsl
cmc
add
add
push
movsb
inc
clc
repz
testl
insb
dec
into
sbb
pusha
adc
movb
shll
and
push
add
in
stos
sahf
sar
loopne
xor
clc
add
add
cmp
add
pop
push
pusha
add
out
jne
aad
cmp
test
dec
push
stc
lahf
mov
add
xchg
mov
loopne
ss
faddp
out
jae
jmp
insb
mov
xor
jne
sub
ss
add
repz
scas
xchg
iret
mov
fsts
dec
or
pop
jae
add
cmc
mov
adc
arpl
push
mov
add
aaa
pop
push
call
les
and
or
in
rclb
adc
das
mov
push
jo
xor
dec
pushf
stos
xchg
out
sbb
xchg
mov
dec
mov
lahf
sbb
flds
xor
add
add
pop
xchg
popl
and
out
incb
mov
call
icebp
nop
lea
push
mov
int3
adc
add
add
out
cltd
mov
arpl
es
das
push
sbb
lcall
cld
mov
insl
lahf
jp
xor
push
hlt
arpl
or
icebp
imul
mov
leave
cmp
adc
ret
call
pop
add
cmpsb
js
daa
negl
xor
sbb
jmp
add
jne
push
xor
lret
insb
rolb
leave
inc
lods
iret
push
pop
inc
cmpsb
gs
pushf
inc
call
loop
dec
fadds
sub
add
inc
xor
data16
push
jno
push
xor
jl
scas
inc
pushf
pusha
push
ret
outsb
addr16
ljmp
pushf
inc
inc
es
inc
cwtl
imul
rorl
push
pop
popf
adc
mov
jmp
push
dec
insb
or
notl
xchg
call
jns
xchg
outsl
movsl
nop
ss
and
leave
jno
mov
push
popf
inc
cmp
mulb
je
pushf
push
in
push
dec
inc
or
xor
jne
pop
add
xlat
je
cmpsl
aaa
dec
sub
daa
out
push
orl
stos
mov
push
shl
dec
jno
pusha
adc
iret
jmp
loopne
mov
mov
adc
aam
negb
push
ficoms
dec
lret
pop
mov
repz
xor
push
add
aaa
scas
popl
call
lea
pop
xor
mov
mov
add
mov
cltd
dec
mov
cmp
shr
dec
xchg
adc
mov
xlat
stos
fldl
adc
sub
rol
sub
dec
je
pop
jne
stc
imul
adcb
pop
xor
add
out
sub
sahf
mov
arpl
add
cmpsb
aaa
fldl2e
dec
xchg
das
add
dec
and
jge
mov
push
mov
inc
cmc
cmpb
sub
aam
sbb
xchg
pop
sbb
and
dec
dec
dec
pop
add
jnp
xor
mov
sbb
push
pop
shrd
jg
leave
stos
adc
jb
mov
push
fwait
repz
xchg
sbb
imul
test
and
xor
mov
adcl
xchg
pop
dec
mov
pop
out
imul
inc
lret
or
mov
aaa
int3
cmpsb
out
std
ds
and
inc
lock
leave
jle
sbb
pusha
add
dec
xchg
cltd
jge
scas
mov
inc
in
sarb
fdivrs
push
xor
fcompl
mov
xchg
xchg
pop
cltd
aad
inc
inc
mov
cld
add
outsl
or
sahf
mov
hlt
mov
rcl
add
subl
ja
xchg
push
sub
inc
fs
jne
and
pop
add
orl
aas
inc
sub
sub
mov
popf
stos
call
in
cmc
mov
sub
add
push
daa
je
dec
imul
add
js
int
into
jbe
dec
gs
lret
js
lods
stos
xor
xor
repz
mov
sub
aad
aaa
mov
clc
andl
mov
iret
ja
and
mov
mov
add
imul
xor
mov
addl
adc
out
mov
test
stc
push
mov
add
pusha
inc
rcrb
jmp
dec
add
int
push
cmp
cmpsl
jmp
bound
ljmp
push
cli
push
icebp
inc
xchg
fmuls
add
cmpsb
imul
and
repz
je
lea
inc
jbe
inc
shlb
pop
mov
aad
add
sub
sub
dec
pop
add
pop
jmp
mov
add
adc
push
xchg
mov
addr16
mov
xchg
add
push
inc
xor
add
sbb
out
orl
jmp
adc
or
add
mov
adc
mov
sbb
mov
mov
je
test
xor
mov
ficoms
out
sets
mov
cmc
push
jne
fucom
mov
movsb
mov
mov
and
stos
sub
sbb
popf
pop
mov
iret
sti
or
lret
out
mov
xchg
adc
adc
sbb
sbb
and
add
sub
sub
idivl
sbb
adc
stos
dec
pop
ljmp
jecxz
movsb
mov
out
dec
sbb
fwait
pusha
push
mov
fldt
repnz
pop
add
mov
xchg
adc
sbb
and
sbb
idivl
and
das
dec
jne
and
jno
mov
dec
js
or
fnstsw
mov
dec
mov
scas
xor
jg
dec
mov
sbb
dec
mov
push
xchg
jmp
call
out
jns
push
sub
daa
add
dec
insl
pop
jb
pop
push
mov
add
cltd
sub
lods
mov
xor
add
mov
call
push
xchg
sarl
adc
mov
push
jle
cltd
outsb
add
cmc
ret
enter
push
mov
ret
mov
dec
inc
call
sti
outsl
inc
xchg
dec
pop
add
xor
xchg
lret
mov
and
mov
ret
inc
fisttps
aad
lock
cmpsl
cmp
inc
aas
push
call
inc
lods
shl
hlt
repnz
rcl
insb
lret
fwait
add
lret
scas
push
sub
or
shlb
loop
jae
dec
dec
cmc
add
sbb
adc
sub
mov
enter
aam
popa
shl
and
int3
mov
dec
adc
add
xor
shlb
movsb
sub
xchg
cs
ret
add
inc
cmc
sbb
xor
xor
std
xchg
pop
sub
mov
lret
aad
les
fcmovb
pop
pop
push
insl
inc
outsl
add
lret
adc
xor
hlt
popf
out
mov
and
dec
and
jmp
cmova
sbb
xor
sub
ret
testb
jne
cmp
enter
lods
or
ds
mov
add
jmp
mov
pop
repnz
das
mov
out
scas
mov
mov
out
nop
add
mov
sbb
add
mov
outsl
pop
int3
xor
add
or
shrb
mov
add
add
rclb
leave
sub
lea
iret
call
mov
pop
mov
jae
dec
sbb
repz
add
push
push
dec
xor
push
jne
cmc
adc
imul
cmp
fimull
adc
mov
sahf
jo
stos
cmp
add
in
mov
fwait
fs
or
add
cs
dec
or
jae
mov
xchg
dec
dec
add
cmp
jg
sub
push
call
in
add
inc
testl
scas
push
hlt
es
jmp
mov
xor
lss
and
subb
sub
fwait
xor
pop
sbb
push
inc
sub
inc
mov
repnz
iret
jo
std
add
out
cltd
xor
stos
and
cmp
sub
add
cmp
sbb
sbb
and
sub
rorb
sub
loope
ljmp
setg
ret
pop
add
xchg
jecxz
mov
xchg
dec
jmp
jns
sbb
je
cmp
data16
add
pop
lods
gs
sub
fwait
mov
mov
sub
jg
pushf
jp
add
push
fimull
dec
and
das
sub
mov
cmp
push
scas
mov
jae
jno
mov
fnstsw
add
dec
addb
loop
mov
push
pop
mov
jb
fcmove
and
scas
aad
scas
leave
add
sbb
enter
test
repz
pop
cltd
mov
pop
popa
dec
xor
mov
or
cmp
dec
and
lret
inc
jp
jg
sub
pop
mov
lods
pop
outsl
dec
cld
dec
outsb
mov
mov
cli
add
push
pushf
jnp
inc
scas
cwtl
mov
icebp
mov
jge
in
out
pushf
add
es
add
add
movsb
xor
mov
cmp
or
stos
push
popf
pushf
xor
add
ss
fistpll
sbb
lods
insb
hlt
push
add
xchg
repz
mov
dec
inc
aad
pop
movsb
arpl
add
mov
lret
scas
jge
push
mov
and
stos
xor
or
sub
lcall
call
aam
or
push
mov
push
cwtl
add
or
or
pop
sbb
cmp
aas
sub
icebp
cmp
or
mov
xor
mov
add
xchg
popa
add
dec
cltd
subb
leave
lock
inc
invd
mov
shll
arpl
dec
dec
repnz
and
repz
out
mov
mov
ret
cltd
pop
sub
sahf
add
sub
mov
test
in
add
bound
lret
add
push
popf
dec
scas
add
pop
iret
mov
push
and
push
inc
inc
add
je
add
call
mov
add
mov
in
jle
add
dec
sub
mov
mov
es
pop
pop
add
xchg
cmp
jmp
push
push
push
flds
in
loop
pop
adc
ja
je
xchg
add
loopne
sti
add
or
ja
sub
add
fldenv
out
jne
jo
filds
add
stc
fdiv
or
hlt
incl
fisubrl
push
lea
or
add
stc
sub
fsubl
ret
pop
jne
lods
repz
jmp
jbe
add
xor
sub
cs
add
inc
push
inc
repz
out
es
pop
add
lods
dec
lea
pop
add
shll
mov
loop
test
notl
push
add
lock
sub
jmp
ret
subb
cmp
inc
jne
xchg
adc
push
push
insb
str
sahf
pop
into
mov
stos
dec
push
push
inc
cmp
imul
or
or
mov
jbe
mov
addr16
sbb
pop
dec
aad
inc
mov
inc
addr16
fldt
sbb
sbb
mov
and
outsb
adc
sub
fwait
rclb
je
rol
mov
and
add
cmp
imul
jae
movups
sti
fstl
out
xor
jo
jl
popf
xor
sub
repz
xor
push
push
ret
add
es
repnz
pusha
pop
imul
test
push
sbb
jmp
and
inc
fsubr
dec
mov
add
adc
movsl
call
jmp
xor
jp
fbstp
add
inc
in
lea
mov
mov
dec
dec
xor
popf
jmp
mov
test
std
mov
out
pop
lods
add
movb
testl
jecxz
inc
mov
xchg
jo
pop
pop
fistpll
cmpsb
add
jmp
out
lea
add
pop
mov
add
push
sbb
add
imul
inc
inc
movsb
popf
pop
sbb
and
mov
sti
mov
scas
dec
xor
mov
lahf
nop
je
arpl
push
push
add
in
sub
xor
xor
call
push
lods
mov
mov
pop
pop
pop
mov
stos
in
fcmovnb
dec
call
lods
stc
jnp
adc
mov
or
aaa
cmp
aaa
loop
adc
in
xor
xchg
or
mov
fsubr
push
push
mov
push
sbb
mov
mov
add
cmp
dec
push
cltd
daa
dec
push
mov
les
insb
mov
add
pusha
and
xor
jo
jmp
mov
or
and
sub
add
lea
dec
add
pop
dec
lret
std
add
ljmp
or
nop
fstps
push
rorl
scas
push
push
push
push
mov
setne
add
and
adc
cmp
cmc
sarb
sub
and
testb
sub
jge
stos
add
push
jl
adc
mov
sub
inc
mov
ss
es
dec
inc
mov
xor
repnz
add
je
push
add
imull
push
add
dec
test
dec
xor
mov
mov
int
ret
or
jne
mov
dec
repz
call
push
leave
add
loopne
movsb
jmp
xchg
mov
pop
iret
xchg
push
push
lea
mov
fimull
cmp
faddl
adc
jb
add
test
mov
push
aam
mov
jmp
aad
push
push
sbb
sarl
mov
adc
pop
jns
mov
or
cmp
add
jmp
add
mov
shr
add
adc
mov
xorb
dec
shlb
xor
dec
add
loope
in
jbe
mov
add
repz
dec
push
add
fmul
cmc
adc
push
movsl
inc
sti
dec
fldcw
mov
add
adc
loop
add
or
dec
jne
test
xchg
xchg
fxch
mov
aas
pop
xchg
out
repnz
lahf
push
outsb
add
lret
xor
or
add
and
mov
lods
inc
outsb
pop
int
sub
mov
cmp
sbb
lea
mov
ror
xor
inc
mov
push
cwtl
add
ljmp
leave
inc
and
mov
pop
jl
shr
pop
xorb
cltd
not
and
xchg
mov
or
push
mov
rol
sbb
nop
push
movl
mov
mov
mov
out
dec
in
push
add
adc
or
sbb
dec
js
pop
mov
push
sbb
jae
add
xor
shll
cmpsl
mov
mov
inc
fwait
pop
jmp
sub
scas
mov
adc
pop
gs
xor
enter
pop
sbbl
pop
punpckhbw
fistpll
pop
scas
add
lahf
xor
dec
add
imul
ljmp
dec
lds
test
jbe
call
ljmp
pop
xchg
outsl
push
push
shrb
jo
dec
xor
inc
sbb
add
sub
in
orl
dec
or
inc
cmc
pop
jo
iret
lret
add
sub
add
dec
dec
cs
push
lahf
lcall
lret
sbb
sub
int
icebp
fdivp
pop
lods
mov
std
mov
test
je
add
add
inc
call
lcall
mov
pop
mov
fwait
add
or
rol
pop
add
adc
add
fstl
mov
es
movsl
or
mov
mov
cltd
adc
pop
pop
daa
addr16
cmp
jmp
sbb
aaa
jle
in
and
mov
fs
das
ss
stc
sbb
pop
repnz
and
xchg
mov
imul
pop
movsl
push
ss
push
jae
add
inc
pop
call
pushf
lock
adc
xor
mov
or
loope
add
or
arpl
add
adc
dec
adcl
sbb
ret
cmp
fildll
jae
orl
ja
fwait
jae
es
into
mov
mov
lcall
mov
mov
leave
das
add
aaa
sti
je
add
sbb
loope
mov
repnz
jnp
lds
insb
add
mov
push
popf
shll
mov
cmpsb
jmp
stos
inc
xchg
add
push
or
mov
call
xor
mov
push
pop
not
ss
aaa
fs
add
fimull
aas
add
icebp
in
fwait
jp
mov
jo
popf
clc
and
out
adc
sbb
test
add
pop
push
add
arpl
add
and
and
mov
xchg
push
mov
jno
push
sbb
pusha
bound
mov
arpl
outsb
dec
add
lret
test
lcall
test
movb
add
je
cmpsb
cltd
or
add
pop
enter
pop
push
aaa
test
mov
cmpsb
cmp
clc
into
scas
addr16
xor
sbb
push
or
mov
mov
xor
add
jne
xor
scas
pop
mov
inc
xor
sub
pop
test
popl
add
and
add
jbe
in
aas
add
and
flds
inc
sbb
std
fdivr
pop
popa
add
dec
xor
fs
sbb
push
and
add
mov
xor
arpl
pop
adc
scas
add
and
cmp
rclb
mov
push
mov
andb
mov
into
add
cltd
aad
cmp
jp
dec
xor
sub
mov
adc
sub
jle
add
jmp
push
adc
jno
add
push
jne
sub
cmp
dec
mov
add
adc
arpl
or
mov
add
push
dec
push
pop
adc
xchg
xchg
testb
xor
push
mov
sub
xor
mov
push
enter
pushf
adc
scas
add
addr16
mov
xor
sti
mov
xchg
jmp
jnp
lock
sahf
repz
enter
and
dec
lahf
iret
push
jne
add
test
imul
and
cmp
xchg
sbb
add
popa
mov
push
lods
fmull
jae
add
sub
jo
jge
cmp
cmpl
add
mov
iret
sbb
movsl
add
and
mov
dec
mov
and
sbb
aaa
push
mov
add
inc
or
lock
xor
adc
mov
dec
push
gs
sub
imull
pop
hlt
add
iret
push
jne
scas
pop
pop
mov
add
mov
inc
sub
mov
add
push
and
inc
in
pop
mov
cmp
xor
dec
mov
add
add
lea
cli
jg
outsl
imul
inc
add
das
lea
inc
sbb
sub
inc
cmp
add
pop
jne
mov
roll
mov
push
jno
pop
sub
dec
lret
imul
inc
lret
xor
pop
jae
fstps
sub
xchg
add
lods
aam
sbb
rolb
mov
add
into
mov
mov
sbb
mov
cmpsb
add
add
and
mov
jge
sbb
ltr
add
adc
call
cmp
sub
cmp
repz
sbb
loope
dec
sbb
popa
push
mov
sahf
enter
or
add
arpl
loope
add
jne
int
add
mov
out
test
xor
jmp
xlat
add
jne
xor
arpl
lea
add
es
cmp
add
and
dec
mov
xchg
pop
adc
lret
rclb
imul
test
aad
pop
jp
add
xor
add
dec
add
movsl
add
adc
addr16
xor
ret
loop
add
sbb
sub
cmp
add
and
std
inc
xor
add
or
xor
imul
int3
add
push
jno
scas
mov
add
mov
jae
dec
add
decl
addr16
xor
jecxz
or
repz
jne
mov
es
push
mov
or
jnp
jg
cld
add
jne
mov
add
pop
or
push
outsl
ljmp
or
adc
cwtl
mov
leave
jmp
cmp
addr16
xor
int
adc
add
xchg
pop
push
push
push
or
cld
dec
pop
fadds
lock
add
mov
imul
mov
xor
mov
and
add
dec
cmp
arpl
cmc
pop
and
dec
mov
lods
sub
xor
stos
mov
cmc
incl
xor
xchg
inc
loope
lods
repz
lret
ret
pop
insl
adcl
and
ljmp
mov
mov
mov
and
push
sti
inc
xchg
pusha
mov
mov
icebp
mov
push
cmp
mov
lahf
roll
rep
imull
cmp
popa
cwtl
cltd
mov
sbb
mov
std
cli
add
cmp
sbb
cmp
lds
mov
mov
shll
add
inc
xor
shrl
mov
xor
add
test
jge
add
repnz
xchg
testl
movsl
mov
xor
jmp
faddl
sub
cltd
xor
add
cmc
xor
sub
rolb
mov
std
sbb
xchg
mov
out
enter
leave
popa
je
inc
inc
fildl
jmp
fwait
mov
mov
fnstcw
pop
adc
dec
movsl
sub
xchg
addl
inc
push
cwtl
cmp
stc
jge
cmp
push
mov
mov
ljmp
sbb
cmp
fldt
jg
ja
and
add
das
push
gs
xor
jae
and
add
or
popf
inc
stc
add
mov
cmp
cmpsl
dec
sti
mov
ret
mov
aad
cltd
mov
popf
sti
dec
sub
and
cmc
cs
mov
cmp
idiv
aaa
jae
out
mov
sti
cmp
push
call
push
mov
lock
lods
loope
or
xchg
sub
aaa
xor
inc
xchg
repz
idivl
add
adc
sbb
xor
test
xor
sub
cs
mov
xor
popf
imul
xor
push
dec
jecxz
inc
lret
pop
cli
arpl
imul
iret
jae
sub
mov
enter
or
push
cli
leave
sbb
xchg
xor
jp
bound
push
cmp
adc
popf
mov
and
mov
rcpps
or
pop
mov
sbb
negb
gs
adc
sbb
dec
in
xor
es
mov
mov
xor
add
nopl
mov
mov
mov
and
dec
filds
stos
pop
adc
mov
fwait
sbb
ja
add
add
xor
jns
inc
mov
inc
dec
mov
das
or
repz
xor
xchg
imul
add
aas
mov
repz
sbb
xor
out
imul
cmpsl
xchg
cs
sub
dec
enter
shll
cs
sbb
and
mov
add
or
movsl
add
jmp
lock
push
cli
add
push
push
adc
ret
aad
xchg
mov
jecxz
shlb
and
jge
lea
sbb
push
mov
xor
cmp
das
sub
dec
ret
jg
jno
daa
in
xchg
sub
dec
mov
add
sub
dec
sbb
mov
xor
test
mov
pop
add
pop
mov
inc
add
push
sbb
mov
psubsb
in
repz
hlt
jp
repz
imulb
test
es
dec
sbb
fwait
sub
pop
adcl
add
insb
inc
add
adc
push
add
mov
and
test
jge
stos
add
xchg
jno
daa
cmpl
push
ja
mov
lods
outsb
sbb
add
dec
pushf
jmp
xor
ret
es
add
sti
mov
pop
daa
push
adc
mov
push
add
out
jns
dec
sbb
sbb
cmp
out
or
mov
sub
popa
lds
mov
xor
dec
cli
leave
inc
cmp
out
xchg
rclb
clc
xchg
sub
ja
push
add
or
or
mov
inc
add
pop
pop
jbe
jne
mov
xchg
add
les
adc
or
mov
sub
mov
mov
stos
and
mov
push
aas
or
nop
dec
daa
mov
add
int3
mov
xor
jmp
cmpsb
dec
aas
pop
and
add
leave
out
push
and
out
xor
jnp
jne
adc
add
fstl
add
les
push
into
jg
inc
sub
repz
and
inc
fcomps
adcl
push
push
inc
ret
mov
popf
push
clc
sub
sub
jl
js
pop
lret
mov
jle
das
ds
sbb
add
js
cmp
je
inc
jecxz
add
mov
jae
adc
push
rclb
arpl
sbb
dec
ljmp
icebp
adc
push
inc
mov
add
into
aas
test
sbb
adc
cmp
jne
inc
add
mov
mov
jb
mov
mov
mov
fsubrs
sbb
mov
out
and
mov
jge
cmp
xor
push
dec
add
aaa
pop
push
ja
incl
jns
sub
and
pop
cmpsb
outsb
roll
sbb
jmp
lret
push
leave
repnz
or
add
push
das
xchg
adc
loop
pop
adc
pop
je
mov
sbb
add
mov
cvtdq2ps
inc
add
loopne
js
scas
xchg
lea
testb
ret
dec
outsb
sub
out
repnz
add
or
shr
jmp
xor
add
mov
add
add
sub
call
push
cmc
mov
xchg
xchg
push
sti
scas
popa
add
arpl
outsl
push
sub
mov
int3
mov
add
leave
pop
mov
xor
adc
mov
inc
fsubp
rcll
sbb
mov
inc
cwtl
lods
xchg
push
aad
fdivrs
mov
jle
stos
data16
in
ret
push
xchg
mov
pop
add
outsb
pop
test
dec
lea
sub
sahf
and
jns
add
cltd
jl
or
sbb
adc
cmp
scas
add
clc
repnz
and
adc
sub
inc
add
add
push
sub
inc
add
xlat
mov
mov
mov
inc
bswap
jne
mov
add
bound
add
cli
mov
mov
xorl
fisttps
mov
fadds
xchg
adc
jae
nop
adc
mov
cmp
add
lcall
dec
or
jmp
add
adc
jo
and
addb
outsb
xchg
or
movsl
scas
pop
add
repz
or
dec
add
or
add
or
sub
cmpb
rcrb
testb
or
leave
dec
sub
dec
inc
cmp
filds
xor
rolb
je
mov
mov
xchg
cmp
leave
add
sbb
mov
aad
sbb
lods
pop
pop
add
fists
adc
xchg
push
dec
or
or
add
fstps
inc
arpl
addr16
add
lods
das
dec
jae
xor
aam
adc
inc
stc
mov
jne
push
add
cwtl
xor
daa
in
or
insb
mov
and
pop
inc
and
out
add
call
dec
cmp
xor
adc
aad
add
mov
pop
sbb
rcrl
ss
sbb
lods
cld
jo
push
xor
inc
lea
add
dec
je
dec
cmp
jp
scas
adc
hlt
aaa
imul
mov
pop
inc
pop
add
mov
out
or
jecxz
daa
fldt
imul
dec
dec
lods
scas
add
fstpl
add
clc
adc
lds
mov
ss
pop
jmp
pushf
pop
jmp
test
xor
add
icebp
lods
or
push
scas
inc
je
adcl
or
inc
sub
dec
orb
je
outsl
or
adc
jl
cmp
enter
test
int3
fmull
add
fadds
mov
ljmp
movsb
dec
xor
into
lods
xor
push
int
jecxz
add
scas
test
mov
lds
mov
cmpsb
mov
addr16
xchg
sub
adcl
sub
scas
add
mov
je
add
pop
popl
rdpmc
dec
hlt
js
xchg
add
mov
inc
je
sbb
adc
mov
add
shrl
add
push
xchg
add
jnp
movsb
adc
clc
pop
adc
subl
jle
aad
fisttpll
xor
sbb
xchg
pop
or
or
add
cmpsb
pop
sti
call
dec
icebp
dec
jae
sub
mov
mov
or
loop
mov
jp
aaa
add
dec
ret
pop
aad
test
aad
out
push
lods
mov
push
cli
loop
and
and
add
push
dec
cmp
push
mov
xchg
jmp
dec
stos
add
dec
jns
enter
cmp
aaa
xor
pop
jnp
cltd
add
call
xchg
mov
pop
sbb
lcall
sub
sbb
cmp
xchg
pop
mov
mov
sahf
push
push
mov
enter
xor
add
add
dec
clc
mov
mov
add
mov
mov
iret
add
outsb
adc
pop
into
les
mov
daa
push
sub
popf
jnp
dec
mov
pop
imul
jb
pop
ljmp
pop
push
int
imul
std
sbb
adc
sbb
push
inc
adc
mov
cwtl
cmp
sbb
add
inc
xchg
or
push
sub
mov
dec
jg
mov
xchg
xor
nop
xchg
add
mov
andb
sub
add
popf
adc
incl
xor
inc
sub
mov
dec
mov
adc
add
std
mov
inc
sti
mov
ja
sub
xor
das
mov
add
and
mov
ljmp
outsb
jnp
inc
mov
add
gs
inc
sti
dec
std
xchg
inc
xor
call
adc
lea
mov
xor
and
jmp
cmp
in
pushf
sbb
into
inc
sbb
dec
cmp
ret
inc
out
xor
sbb
mov
pop
xor
cli
ror
add
jg
popf
les
ja
add
cmp
xor
repnz
pop
jge
fwait
insl
ficoms
pop
sbb
pop
inc
dec
arpl
andb
out
popa
sub
scas
fwait
jl
add
push
pop
test
das
mov
jns
inc
insb
xchg
push
lahf
xchg
pusha
sti
pop
jb
xchg
ret
mov
sub
bound
nop
outsb
sahf
stos
jmp
add
or
inc
add
loop
outsl
cmp
inc
out
aas
pslld
jno
jns
add
sub
lock
imul
jp
mov
mov
push
xchg
mov
jmp
add
bound
push
jne
jp
inc
mov
andb
dec
add
cmpsb
add
inc
sbb
lds
or
mov
test
iret
jmp
ret
adc
out
rcll
inc
jp
mov
add
mov
inc
sub
add
mov
add
inc
dec
icebp
pop
push
mov
outsb
xchg
sub
leave
add
jmp
adc
or
repz
lahf
lret
scas
xor
cmp
lss
sub
imul
add
lods
cmc
inc
outsb
jmp
je
outsl
pop
out
call
test
add
xchg
jae
sub
cld
shl
aaa
shl
mov
mov
pop
leave
add
inc
adc
pop
dec
enter
iret
lcall
adc
sbb
mov
ret
jmp
aad
fstl
scas
ja
call
and
inc
jmp
out
push
insb
xor
std
fisubrl
add
sub
mov
mov
xchg
cmc
movb
or
pusha
insl
lret
mov
stos
es
rcr
xor
shlb
cmp
ds
test
dec
rolb
inc
sub
adc
ljmp
movb
fcmovnb
xor
sbb
dec
outsb
dec
lods
xor
mov
jmp
cmc
mov
rol
fs
out
mov
inc
sub
inc
repnz
mov
mov
out
jbe
data16
adc
pop
mov
push
push
in
or
push
add
and
imul
imul
jmp
mov
add
and
addb
cltd
mov
bound
add
mov
add
scas
and
loope
cmp
inc
fisttps
push
mov
stc
andl
push
fadds
and
xor
stos
lds
fnstsw
xor
dec
mov
xchg
jl
adc
shl
or
push
xor
and
add
cmp
sub
dec
pop
leave
add
push
sub
imul
call
and
add
jae
cli
push
lea
dec
inc
inc
push
mov
pop
loopne
aas
imul
imul
dec
jbe
dec
jge
or
ja
sbb
pop
add
iret
xor
cs
sub
dec
mov
cmc
loopne
sbb
mov
sbb
imul
sbb
jmp
cmp
add
daa
leave
shr
mov
xor
jmp
xor
add
push
popa
mov
cmp
jae
call
mov
and
addr16
adc
or
mov
mov
test
into
or
mov
mov
mov
jb
jne
or
adc
push
add
test
cltd
xchg
cmp
lods
daa
dec
jmp
dec
flds
jnp
xor
xchg
fwait
dec
mov
call
add
jmp
pop
mov
scas
sub
sub
cmp
rolb
pop
jge
add
cmp
stos
pop
or
cmp
lret
adc
add
test
xor
dec
bnd
sbb
jb
and
pop
inc
mov
push
pushf
lret
xchg
fstps
stos
pop
ret
repz
mov
dec
sbb
add
pop
dec
test
aam
notl
add
das
push
inc
movsb
mov
push
mov
pop
call
sub
dec
xor
push
add
cmp
mov
jno
inc
push
xor
inc
scas
aam
add
cmc
xchg
cwtl
sub
or
xchg
mov
clc
dec
add
mov
imulb
cmp
cmp
popa
add
leave
sbb
xor
inc
movsl
and
add
lahf
aad
xchg
sub
add
inc
mov
mov
add
orl
repz
test
push
rcl
push
inc
stos
pop
or
mov
push
out
into
ss
xchg
divl
rcrl
cmc
push
rolb
xchg
fs
push
in
sbb
scas
cmc
das
xchg
mov
jmp
shll
cmp
outsl
add
std
or
add
add
das
add
or
jns
jbe
fldl
add
mov
es
push
sub
mov
add
fwait
not
jl
mov
data16
push
mov
fnstsw
pop
add
mov
cmp
mov
jge
pop
ret
cli
pop
in
shlb
imul
xor
jecxz
xchg
pop
jp
sbb
or
xor
jno
mov
inc
imul
in
jmp
js
imul
cmp
mov
js
jnp
and
add
pop
inc
push
add
adc
daa
outsl
loope
int
pop
cmp
in
adcb
stc
insl
cmc
push
add
sub
push
jne
mov
inc
enter
push
sti
jp
dec
mov
pop
cmp
push
leave
fmull
push
ljmp
dec
push
or
and
mov
pop
and
aaa
adc
push
pop
ss
or
inc
into
inc
push
add
lock
dec
mov
sub
movsl
test
imul
ljmp
pop
fadd
icebp
vxorpd
pushf
jne
xchg
dec
xor
movsb
inc
add
pop
imul
inc
insl
dec
jb
mov
lods
push
xor
dec
push
in
cwtl
jns
stos
xchg
imul
cmpsb
js
getsec
push
in
mov
dec
push
dec
das
xchg
inc
jno
andl
jbe
lret
insl
pop
jbe
filds
inc
arpl
xchg
dec
insl
xchg
ss
inc
jno
testb
xchg
inc
hlt
adc
ret
inc
cmpsl
sub
insb
xchg
xor
dec
mov
andl
es
and
jns
pop
fwait
mov
add
roll
cmp
rep
mov
inc
mov
iret
push
push
add
mov
sbbl
testl
rcrb
loope
pop
mov
pop
mov
sbb
inc
jae
xchg
add
add
xchg
sub
into
fwait
add
movl
mov
xor
ror
mov
mov
push
sub
repnz
shrl
cmpsl
xchg
outsl
add
in
mov
add
jns
dec
xor
adc
out
or
add
pushf
hlt
sahf
test
add
mov
leave
dec
mov
mov
lods
dec
movsb
xor
inc
mov
roll
mov
test
mov
add
int3
pop
add
add
mov
mov
ret
lret
xchg
sub
mov
test
and
out
outsl
dec
jns
jae
out
mov
mov
push
imul
xor
push
stc
notb
je
inc
push
mov
mov
adc
mov
hlt
test
arpl
gs
jmp
ret
mov
xor
sbb
add
add
iret
aaa
mov
sub
add
cmp
shll
and
stos
dec
in
xor
sub
pushf
add
mov
adc
add
inc
scas
shl
loope
add
stos
fadds
push
hlt
cmp
add
mov
add
fwait
mov
js
dec
outsl
add
inc
movsb
mov
psubsb
jle
int3
mov
rcl
jl
jmp
add
std
stos
ja
or
fldcw
fadds
mov
jns
mov
outsb
add
scas
sub
dec
mov
cmpsb
or
mov
jo
mov
and
push
dec
je
add
sub
pop
out
stos
sbb
lret
add
and
mov
mov
xor
call
fs
inc
mov
pop
add
mov
dec
scas
cmp
sub
mov
enter
xchg
loope
add
shr
add
into
xor
je
jp
jnp
insb
scas
and
push
jae
pop
cmp
lock
mov
sub
incl
pop
push
jb
mov
push
mov
ret
sbb
push
add
fwait
movaps
mov
enter
xor
add
ffree
cmp
int3
add
add
test
xor
in
jl
repz
jg
pusha
mov
mov
shll
int
sbb
push
mov
mov
repz
mov
mov
adc
jne
pop
lldt
xor
add
into
sbb
mov
and
cmp
sub
add
mov
inc
jns
test
add
call
addr16
add
sbb
dec
mov
aad
dec
cmpl
xchg
mov
sub
xor
repz
sbb
pop
ljmp
lahf
add
jle
mov
cmp
pop
xchg
stos
pop
cli
das
add
jae
xlat
call
xorl
mov
mov
add
and
mov
pop
cli
mov
jbe
enter
call
loopne
jecxz
jmp
inc
sbb
mov
sbb
sarl
and
add
add
xchg
add
sub
movl
inc
aam
into
mov
xor
cmp
dec
or
push
stos
cld
add
sbb
and
pop
or
cmp
pop
cmp
inc
insb
inc
and
mov
push
xor
adc
ret
testb
inc
fcmovu
stos
in
sti
mov
incb
enter
jb
mov
dec
cmp
ja
repz
imul
add
and
out
sbb
dec
mov
lret
pop
hlt
sub
movsb
mov
imul
mov
sub
lds
add
adc
cmp
pop
adcl
inc
add
push
pop
std
add
es
lods
jo
add
sub
mov
incl
js
adc
aas
add
ret
add
mov
mov
out
iret
add
sub
lea
jnp
mov
push
adc
cmp
push
xorl
push
insb
into
mov
jmp
adc
shrl
add
call
xchg
xchg
lock
sbb
ja
ret
sar
add
xor
dec
into
and
fiaddl
sub
pop
mov
add
mov
push
mov
adc
sahf
push
cltd
add
mov
push
stc
inc
inc
add
movsl
je
inc
lcall
add
scas
cmpsb
pushf
add
dec
mov
xor
mov
cs
aam
mov
jno
add
popf
std
xor
xor
jae
cmpb
jecxz
cmp
dec
rolb
fstpl
add
add
xchg
aas
cmp
sar
cmc
and
cwtl
es
hlt
adc
test
pop
jne
mov
mov
add
outsl
jg
cmc
pop
test
repz
push
mov
ljmp
mov
xor
add
lcall
gs
imul
mov
repz
mov
lea
nop
mov
add
sahf
add
daa
and
es
xorl
in
push
mov
fucom
push
push
adc
sub
sbb
mov
adc
mov
cli
std
inc
xlat
add
test
aam
pop
mov
mov
sub
push
dec
push
cld
lods
fwait
xor
adc
test
bound
inc
icebp
add
pop
sub
in
sub
inc
dec
mov
push
add
dec
and
and
sahf
sub
inc
bound
xor
jle
insl
scas
inc
into
out
mov
std
mov
pop
mov
add
sub
out
fwait
xor
push
out
cmp
int
mov
push
sbb
sub
test
das
pop
lock
inc
es
pushf
out
ret
add
pop
inc
iret
cmpsl
mov
push
lods
jbe
jl
loop
add
dec
je
aam
push
dec
dec
cmpsb
xorl
sbb
inc
hlt
nop
add
sbb
add
lods
sbbl
cmp
scas
or
pushf
inc
dec
xor
add
sbb
mov
push
and
push
in
jp
dec
flds
adc
push
push
jns
adc
lret
stos
lods
int
insl
jae
in
sahf
and
sti
cmpsl
clc
xchg
pop
push
mov
push
hlt
xchg
mov
add
pop
repnz
cmpsl
jae
and
cmpl
nop
int3
ja
test
sbb
mov
icebp
jge
adc
add
cmc
dec
pusha
lea
sub
mov
xor
add
inc
sub
fs
add
or
mov
jb
dec
push
jg
mov
inc
stos
adc
sbb
and
cs
pop
mov
sbb
mov
pusha
ret
mov
adc
cmp
mov
jmp
popa
cmpsb
jo
jnp
xor
dec
pop
cld
push
sub
mov
shl
test
add
adc
dec
mov
push
popa
repz
or
dec
add
testl
mov
mov
push
loopne
add
lea
mov
adc
push
and
cmpb
stos
mov
add
jae
add
and
mov
add
add
xor
fwait
mov
dec
jae
or
inc
add
aas
xor
lcall
sbb
rolb
or
or
mov
sbb
mov
ds
add
sbb
aam
add
mov
mov
cmp
jb
sbb
and
mov
scas
shll
fnstenv
jecxz
ds
lods
lea
or
add
xor
push
mov
lods
mov
mov
leave
cs
subl
mov
pop
pop
push
test
add
add
add
or
scas
pop
cmp
arpl
fstpt
mov
mov
sub
popa
mov
and
or
fistl
inc
mov
jae
loopne
push
testb
mov
mov
test
inc
test
jmp
fwait
scas
add
mov
icebp
mov
aad
pop
dec
in
add
xor
outsb
js
jno
fisttps
sbb
add
mov
mov
shl
mov
mov
sub
mov
sbb
mov
cmpsl
push
push
fimuls
mov
xor
or
add
in
call
sbb
push
jns
mov
add
xor
pushf
add
mov
xorb
xor
shrl
dec
jle
aad
push
inc
xchg
add
push
push
ja
cli
rorb
add
in
inc
enter
add
sbb
pusha
xchg
cld
and
mov
negb
mov
filds
call
or
shll
inc
les
inc
pop
insb
push
push
add
pop
ret
cmp
cmp
cmp
pop
mov
lcall
popf
loop
addb
push
cmp
pop
mov
shlb
add
mov
outsl
cs
xchg
xor
add
fldt
adc
add
dec
icebp
jb
fsub
out
add
cltd
dec
sbb
ret
mov
sahf
inc
ss
roll
or
sbb
dec
adc
mov
add
rolb
outsb
inc
mov
arpl
leave
sbb
mov
push
mov
push
dec
or
popf
ret
and
test
mov
leave
test
sbb
add
mov
dec
push
mov
push
loopne
sbb
roll
and
jns
xor
push
test
add
loop
push
jb
or
cmpsl
jae
mov
aaa
jo
imul
mov
mov
rorl
jl
mov
repz
in
sbb
mov
call
enter
jo
dec
inc
clc
and
mov
fsubl
imul
incl
xlat
pushf
push
adc
inc
in
inc
lds
mov
cmp
inc
add
mov
push
add
jne
push
inc
dec
sti
add
daa
mov
adc
sub
mov
mov
pushf
mov
test
jae,pn
daa
sub
inc
scas
mov
fisubrs
iret
enter
lea
mov
jne
push
stos
adc
add
scas
pushf
adc
ret
pop
cmp
sbb
dec
push
xor
mov
arpl
dec
lea
pushf
push
add
add
jnp
push
add
or
fistps
cmp
inc
cltd
xor
sub
sti
ds
scas
notb
icebp
jle
sbb
inc
push
sub
fs
cld
mov
repz
xchg
lea
push
pushl
stos
fs
lds
push
jmp
jns
and
adc
fdivl
mov
scas
cmpb
cmp
mov
push
mov
scas
repnz
jbe
data16
shrb
mov
into
add
adc
mov
aam
push
jmp
fcomps
or
push
cmpsb
ljmp
xchg
mov
adc
popa
in
sti
ljmp
sub
dec
icebp
pushf
xor
or
stc
mov
cmpsl
pop
push
fwait
add
pop
subl
pop
xchg
mov
daa
adc
loop
inc
roll
inc
hlt
adc
loopne
test
mov
mov
pop
subl
and
pop
ret
in
imul
push
movb
sarl
push
mov
xchg
popa
add
mov
bound
sbb
xorl
movsb
cmpsb
mov
inc
cmp
mov
mov
dec
lock
jnp
pop
test
cmpsl
mov
sbb
mov
mov
aam
loop
hlt
cmp
mov
std
adc
jecxz
ja
cmpsb
or
cmp
stos
inc
mov
orb
mov
testl
pop
lcall
dec
rcrb
mov
add
sub
repnz
or
mov
or
add
jg
push
cli
arpl
xor
sub
sub
sbb
adc
and
cmp
pop
stos
inc
pop
mov
xor
mov
in
xor
inc
cwtl
call
dec
add
enter
pushf
cli
rolb
xchg
add
adc
and
xor
push
jecxz
or
mov
cwtl
mov
jle
pop
xchg
dec
sti
cmp
outsb
jae
adc
out
repz
mov
out
sbb
dec
divb
pushf
nop
mov
fwait
mov
test
mov
or
add
push
pop
xor
inc
mov
sarl
sub
dec
in
imul
decl
mov
push
jne
inc
gs
pop
jle
imul
mov
in
add
push
cmc
pop
mov
mov
sub
aas
outsb
sbb
sti
inc
in
xor
mov
jne
es
push
jb
cmp
repz
mov
push
mov
pop
aad
add
pop
xlat
movsl
xchg
fcoms
stos
xor
lcall
and
mov
xchg
add
popa
add
push
pop
pop
push
dec
xor
cmpsl
add
outsl
jp
loope
mov
imulb
xor
dec
add
ja,pt
or
fsubrs
mov
inc
iret
stos
roll
jmp
lcall
push
push
adc
imul
imul
mov
clc
jno
or
mov
dec
movsl
bnd
ljmp
xchg
jno
jae
sub
mov
xor
add
add
mov
push
add
inc
sbb
sub
shl
mov
mov
jecxz
cmp
jae
xchg
adc
mov
sub
hlt
sbb
xchg
add
movsb
jno
mov
pop
sub
mov
lret
test
clc
ljmp
xor
xor
jl
xchg
mov
scas
mov
outsl
jle
pop
push
lret
jno
mov
mov
push
ljmp
or
mov
jle
xor
add
pop
test
and
mov
and
xchg
call
insl
in
xor
das
add
push
mov
dec
in
jnp
and
sti
dec
jo
jp
dec
add
mul
push
and
ljmp
dec
mov
and
push
xchg
roll
jp
ja
inc
dec
push
cmp
xchg
add
inc
inc
dec
or
add
and
lds
shr
add
aad
pop
sub
loop
xchg
and
pusha
fiaddl
stos
lods
sub
lds
fwait
jecxz
jb
pushf
add
dec
aam
lods
in
mov
scas
divb
rcrl
pop
arpl
cmp
xor
mov
mov
repz
rcl
mov
js
in
push
mov
fcmovb
rcrb
push
mov
jmp
and
rcrl
popa
fstl
mov
adc
gs
enter
xorl
jmp
pop
add
mov
cwtl
sub
mov
push
fsubrl
jp
pop
mov
pop
sbb
and
dec
xchg
jnp
nop
add
push
push
sub
pop
lcall
jle
push
lods
mov
out
clc
cmc
mov
mov
outsb
sbb
lret
sub
std
repnz
lea
pop
lret
cmp
outsl
jo
xor
sbb
pusha
sub
repz
add
pop
stc
imul
ja
push
jne
idiv
in
int
cmpsl
orl
pop
mov
and
add
lock
sti
addr16
mov
inc
sub
in
fidivrl
add
push
int3
mov
mov
cli
jnp
cs
ljmp
add
ret
lods
dec
sub
ja
out
aas
outsl
sub
inc
pop
insl
push
and
push
aas
repnz
mov
push
jne
lds
add
sub
aaa
sbb
sub
shll
mov
cmp
push
in
and
push
mov
or
push
dec
inc
movl
outsl
xor
jp
xorl
iret
in
rcrl
mov
daa
idiv
or
cmp
outsl
rcrb
xchg
repnz
mov
xor
iret
mov
adc
dec
mov
mov
push
jne
loope
mov
jne
pushl
and
add
add
jnp
lods
adc
rol
daa
out
loop
bound
in
jb
in
mov
and
inc
add
and
sbb
test
xchg
testl
repnz
out
lret
mov
mov
idivb
cmp
daa
test
shrb
push
or
fistps
loope
sub
icebp
mov
mov
cwtl
sti
mov
idivl
call
push
mov
cmp
dec
pusha
cmp
adcb
xchg
mov
fsubl
add
mov
sub
cmp
dec
mov
mov
les
cmp
push
mov
push
sti
and
mov
cwtl
mov
les
cld
cmp
push
mov
cmp
cmp
xchg
js
mov
cwtl
xchg
lods
idivl
clc
nop
or
pop
mov
testl
sti
test
xchg
xchg
pushf
not
fdivrl
in
in
xchg
hlt
out
mov
adc
push
pop
pop
dec
imul
mov
stc
mov
or
push
out
xchg
aad
lcall
ljmp
mov
les
repz
mov
mov
mov
sti
mov
mov
cmp
push
fs
pop
and
push
testb
mov
inc
cmpsl
stos
add
xor
add
mov
repz
mov
cmpsl
mov
xchg
add
loopne
xlat
jmp
repnz
sti
loop
pop
add
mov
mov
testb
inc
call
mov
add
add
daa
cmpsl
subb
push
lcall
add
mov
pop
mov
pop
popl
loop
pop
mov
lcall
sahf
adcb
into
xor
inc
xor
mov
ret
dec
ret
js
inc
mov
popa
insl
gs
repnz
fs
push
insl
mov
js
je
add
mov
inc
push
push
cs
aaa
sar
cmp
arpl
inc
add
jg
dec
out
cmpsb
jb
xor
loope
outsb
cmp
sub
je
dec
imul
das
push
insl
addl
push
popf
test
fs
dec
les
imul
mov
mov
inc
test
cmp
xchg
mov
aad
fwait
aam
out
xchg
lret
lret
and
push
fwait
mov
xor
into
mov
data16
adc
aad
xlat
inc
adc
dec
aas
lea
fdivl
sub
push
push
dec
out
or
movsl
jle
lret
das
sbb
pushf
fbstp
movsl
push
imul
pop
add
add
push
popa
insb
cmpsb
imul
cmc
das
xchg
lret
mov
push
sti
ror
jmp
adc
inc
mov
rep
push
add
xchg
xchg
rorl
jne
std
and
mov
push
sahf
icebp
repz
jo
outsb
andl
dec
inc
push
rorb
xor
sarb
inc
inc
lods
jb
jmp
mov
inc
cmc
adc
jecxz
test
gs
push
adc
imulb
push
mov
fwait
sbb
jbe
jo
lods
call
cmc
sub
daa
xchg
dec
dec
std
mov
add
fs
push
xchg
rorb
adcl
cmp
inc
arpl
ja
popf
cmp
mov
add
sub
inc
pop
xor
mov
xorl
bound
lock
addr16
inc
push
into
xchg
jle
pop
lods
xchg
mov
or
pop
push
lahf
dec
fisubrl
arpl
sbb
jge
xor
movsb
xor
push
inc
dec
pop
ret
push
xor
insl
inc
jb
pop
xor
std
push
push
inc
inc
dec
repz
inc
ja
das
jne
das
xor
or
push
push
clc
loope
mov
loope
pop
jecxz
and
add
es
loopne
sbb
lods
push
cmc
dec
mov
adc
cmpsb
jmp
jno
ss
cli
out
dec
xchg
mov
outsl
jae
mov
idiv
add
xchg
outsb
sti
movsb
pop
iret
inc
and
mov
rorw
mov
out
inc
jno
ss
push
popf
stos
add
icebp
insl
bound
ss
mov
jae
mov
mov
xchg
lcall
mov
in
and
xchg
rclb
lock
inc
or
and
and
and
es
jge
cmpsb
mov
or
dec
fdivrs
cmc
add
sti
js
push
xchg
nop
notl
test
vfrczss
and
inc
fsubs
addb
lock
or
repz
data16
stos
jns
push
pushf
repz
pop
clc
imul
xor
xlat
mov
jnp
int
enter
data16
test
call
enter
sub
jno
gs
push
scas
xchg
cwtl
je
mov
xor
pop
add
leave
inc
repnz
dec
pop
ret
nop
es
push
insb
stos
clc
mov
xor
and
dec
mov
jae
jo
outsl
addr16
mov
dec
int3
je
bound
leave
jne
imul
pop
hlt
xchg
cs
jg
adcl
dec
add
sub
mov
mov
and
and
cmpsl
ljmp
and
pop
mov
dec
and
enter
pop
out
pop
jne
mov
sti
xor
aas
shlb
sbb
adc
add
sbb
inc
dec
inc
inc
mov
add
mov
testl
or
lock
push
push
stos
insb
mov
sub
cs
stc
jo
cmc
pop
or
nop
inc
sub
sub
bound
fwait
cmpsb
shrb
xchg
jecxz
add
incl
mov
cmp
out
arpl
push
lahf
cmp
out
test
jge
cmp
xchg
fwait
or
jo
aaa
das
call
xor
int3
or
addr16
popa
or
and
adc
sub
mov
dec
scas
popl
mov
movsb
pop
sub
mov
and
mov
mov
rclb
mov
push
call
mov
or
and
loop
mov
or
xor
add
mov
mov
mov
or
xchg
add
mov
mov
pop
ret
in
and
push
mov
fld
inc
and
mov
je
andb
sub
adcl
or
cmp
repz
hlt
push
repnz
out
jne
mov
jl
aas
inc
or
movsl
xor
movsl
xor
sub
insl
dec
call
jmp
inc
stc
stos
cmp
jge
rcl
adc
xor
test
stos
pushf
jae
int3
push
dec
test
sub
mov
dec
adc
and
xor
add
xchg
pop
rolb
add
xchg
dec
pushf
pop
jo
add
adcb
mov
push
add
pop
in
js
mov
mov
arpl
xchg
mov
xchg
dec
mov
fwait
call
or
fcomip
or
and
shll
jae
test
stos
jl
xchg
hlt
mov
pop
imul
lds
adcb
test
pusha
je
jnp
ret
mov
fwait
cmp
mov
nop
addb
enter
test
test
lea
dec
lcall
repnz
xacquire
xlat
mov
aam
loope
imul
mov
cmp
dec
in
sub
addr16
les
xchg
fcmove
mov
adc
sbb
sub
pavgw
shl
icebp
mov
mov
jns
mov
fidivl
rolb
call
xor
pop
xor
clc
out
out
cmp
push
or
jl
lcall
jne
sbb
stos
mov
lea
ja
mov
out
and
sub
mov
inc
add
adc
test
mov
cmp
fdivs
mov
bsr
cmp
mov
cmpb
mov
pop
sti
xor
pop
and
mov
les
lret
sub
push
jb
lea
mov
push
icebp
xchg
inc
repz
cmpb
jne
es
push
cmp
popa
mov
insl
enter
dec
test
lods
push
adcb
jp
dec
mov
cmp
mov
mov
jb
push
xchg
sbb
aad
adc
mov
mov
imul
hlt
jg
mov
xchg
xchg
mov
xchg
mov
lds
xor
movsb
negl
shll
mov
and
clc
xchg
or
setbe
lods
add
shl
lods
lods
push
stos
or
fadds
xchg
xor
push
jl
and
adc
test
movsb
addr16
test
jmp
std
jns
xor
movsb
mov
fisubs
adc
int3
add
jnp
xchg
sti
adc
xchg
in
adc
xchg
lea
mov
mov
jg
movsl
stos
mov
addr16
xchg
mov
rcrb
stos
xor
jp
mov
test
jmp
jbe
rclb
testl
in
cmp
daa
xor
sub
scas
or
push
pop
pop
sbb
mov
inc
repnz
popf
fwait
or
pop
jno
mov
xchg
fs
push
xchg
sbb
xchg
jo
arpl
cmp
shll
xchg
js
inc
loope
pusha
iret
sbb
lret
sbb
dec
cmp
add
pop
insb
mov
stos
push
mov
add
mov
lret
cmc
fwait
shrb
push
mov
mov
hlt
ss
mov
push
nop
add
adc
inc
sti
cmp
jne
hlt
jle
and
xlat
rcrl
or
clc
jge
nop
arpl
sub
insb
xlat
cld
mov
cmp
adc
negl
ds
imul
or
loopne
aas
shlb
cmp
stos
xchg
sub
rcr
mov
call
clc
adc
test
cmp
fdivrs
xor
movb
adc
stos
fdivl
or
test
mov
pop
mov
jnp
sub
arpl
mov
shlb
add
xor
mov
xor
test
cmp
and
jb
push
pushf
sbb
jp
sbb
add
dec
or
add
cmp
call
mov
lea
enter
pop
push
ja
cmovbe
adc
mov
adc
xlat
sub
adcb
int3
in
lea
sub
mov
add
cli
cli
nop
sarl
xor
loopne
popf
testb
pusha
mov
push
sahf
push
stos
inc
adc
sbb
std
xchg
shl
mov
xchg
pusha
mov
jno
mov
jl
mov
mov
pop
lea
xor
out
mov
lahf
aam
stos
sarb
mov
aam
inc
xorl
mov
das
popa
hlt
mov
mov
in
movsb
sahf
aam
fsts
cld
inc
xchg
test
aad
in
enter
inc
dec
lds
dec
or
cmc
dec
sub
ljmp
pop
xchg
fcomip
xor
rcl
call
or
insb
lcall
call
das
rcrl
int3
push
mov
hlt
mov
xchg
and
xor
mov
xlat
popa
pusha
xchg
insl
xchg
mov
or
push
clc
test
and
jecxz
add
fbld
xlat
in
pop
jne
loopne
mov
or
xor
cmp
jmp
add
and
ftst
adc
xchg
mov
cmp
sarb
cli
push
enter
cmpsl
imul
push
daa
mov
mov
iret
adc
mov
fidivl
fwait
mov
mov
xchg
lock
test
mov
lahf
mov
outsb
sbb
inc
rorl
cmp
jae
and
xor
push
pop
jp
or
cmp
mov
mov
negl
xchg
aaa
cmp
mov
pop
jecxz
sbbl
adc
cmp
cmp
mov
cltd
ss
add
inc
sub
pushf
mov
aaa
fcoml
cld
mov
sub
and
xor
push
fwait
daa
addr16
jns
movsb
jge
out
sbb
cmp
lea
fsts
mov
sarl
adc
adc
mov
repz
fisttpl
movsb
xorl
dec
insb
xor
movsb
mov
push
ret
add
sbb
ret
mov
and
inc
negb
jmp
adcb
sub
add
jge
add
imul
xor
mov
nop
or
xor
movsb
mov
and
push
mov
js
call
xchg
mov
xchg
mov
pop
sub
cwtl
rdpmc
movsb
or
aaa
xchg
jb
ds
lahf
xor
sti
lfs
mov
push
pop
stos
call
cmp
loop
push
xor
and
mov
xchg
nop
outsb
ja
mov
sbb
dec
jmp
das
jp
mov
or
incl
mov
mov
mov
pushf
cmp
sbb
fwait
xor
cmc
pop
sbb
lock
mov
dec
mov
cmp
and
lret
lcall
mov
or
test
sub
push
xchg
sub
repz
or
jl
cmp
push
cmpsl
call
out
jne
mov
shrb
dec
push
jmp
dec
xchg
call
pop
adc
inc
hlt
mov
and
sarb
testl
movsb
loope
sbb
push
aas
ja
dec
les
clc
or
outsl
std
mov
xchg
sbb
call
icebp
jge
jnp
inc
movsb
xchg
mov
push
mov
test
movsb
adc
mov
mov
pop
hlt
cld
cmp
hlt
cmp
mov
sub
adc
cli
call
sub
adc
loopne
ret
in
and
jg
adc
movb
jne
jo
test
fwait
mov
xchg
mov
mov
notb
cwtl
add
jno
lock
in
mov
shrb
es
push
push
xor
inc
sbb
idivl
jge
sub
fwait
mov
bound
cmpxchg
ss
lock
fdivrs
or
xor
adc
xchg
sbb
lods
jno
aaa
jp
ja
cmp
cmc
push
xor
sbb
push
call
repz
jne
add
and
jbe
sbb
cli
jle
nop
cwtl
jecxz
fidivs
mov
mov
notb
jge
les
or
scas
ljmp
sub
lcall
mov
sarb
call
orb
xchg
sahf
mov
add
mov
adcb
icebp
std
aam
sbb
leave
lahf
jecxz
inc
xchg
and
fisubrs
push
loope
push
div
adc
arpl
call
mov
insb
loopne
mov
mov
jl
popf
ss
sbb
rcr
jmp
test
mov
mov
sub
xor
sbb
inc
jnp
call
bound
mov
test
repnz
mov
mov
mov
mov
add
lods
and
push
add
movsb
jecxz
inc
rolb
sbb
int3
xchg
mov
and
mov
lret
cwtl
rcl
xor
adc
pop
cld
loopne
and
fidivrs
call
pop
rclb
mov
icebp
pop
das
sub
mov
sbb
mov
dec
xlat
mov
mov
fstps
push
dec
movsb
xchg
xchg
cs
inc
mov
rcrb
and
movsb
mov
cmpsb
and
cmp
cwtl
mov
pushf
call
icebp
push
fcomps
test
clc
cmpl
sub
mov
lods
call
and
and
mov
cmp
and
or
cmpb
or
adc
adc
stc
mov
mov
mov
arpl
sub
or
sar
lcall
sarb
cmp
enter
mov
dec
adc
jecxz
mov
cmp
mov
lock
mov
add
mov
inc
xchg
call
pop
and
ficoms
and
xor
call
jmp
pusha
cmp
xchg
roll
mov
cmp
jae
jp
fadd
les
repnz
mov
push
mov
xor
adc
fisttpl
aas
pop
mov
pop
push
mov
jl
test
cli
and
cmovle
scas
push
test
mov
and
outsb
aad
cld
xchg
mov
out
and
repnz
cmp
into
fbstp
add
xor
push
sub
jg
xor
sbb
pusha
mov
and
push
mov
xchg
mov
and
fcmovb
cld
inc
cmp
repnz
or
in
cmpsl
xor
cmp
xchg
pop
pop
xchg
aaa
inc
sbb
inc
clc
bound
pusha
jg
sbb
hlt
and
jo
cmpsl
jbe
in
mov
ljmp
hlt
lahf
mov
pop
lcall
xchg
test
add
ret
rolb
fistpll
push
fs
test
icebp
mov
subl
lret
jp
or
add
inc
xchg
idivb
mov
repnz
dec
add
jle
fildl
sbb
scas
add
pushf
lcall
push
fisttpl
nop
and
jmp
scas
pop
jno
xor
out
bound
mov
cmp
das
xor
push
mov
repz
adc
add
mov
out
pop
icebp
in
mov
mov
and
scas
inc
imul
adc
xor
repnz
xor
adc
pop
add
loopne
ljmp
je
lahf
or
jmp
fdivs
repz
lahf
pop
sbb
ret
adc
mov
enter
dec
jae
cmc
add
shll
repz
ret
fldenv
or
lea
add
mov
add
pop
fistpl
xor
enter
or
inc
rorl
mov
mov
or
add
or
pusha
inc
mov
push
rolb
jmp
xchg
cmp
jne
jno
inc
out
xor
arpl
mov
cs
push
add
adc
lods
outsl
andb
cli
aad
fwait
jecxz
arpl
stc
das
pop
jg
push
push
inc
dec
add
dec
adc
movsl
mov
jns
subb
setnp
jnp
int
push
bound
out
fdiv
pop
sbbb
dec
pusha
sbb
or
data16
pop
inc
call
add
fildl
pop
mov
jmp
mov
or
sarl
cmp
sbb
sbb
inc
in
mov
lahf
loopne
and
dec
add
and
xor
cmp
add
aam
pop
sub
sbb
adc
push
pushf
mov
or
loope
roll
sbb
lods
test
ret
add
cmp
scas
pop
clc
jge
mov
push
aam
mov
icebp
bound
mov
push
call
add
shrl
pusha
sub
lods
jbe
xchg
xchg
arpl
ret
dec
cmpsb
add
in
loopne
cmp
mov
pushf
push
sbb
pop
lea
mov
dec
add
mov
and
cwtl
sbb
push
add
xchg
enter
out
mov
cmc
and
jmp
push
adc
push
inc
mov
xor
call
pop
jns
inc
push
and
jp
lock
cmpsb
sti
gs
mov
ljmp
xchg
and
leave
dec
lock
ja
fdivs
sub
cmpsl
adc
std
or
rorb
add
in
gs
sbb
aas
xor
shl
cmp
ret
dec
xorps
pusha
xchg
fldt
mov
fcoms
jl
sbb
push
sub
sti
xchg
insb
mov
push
shlb
sbb
inc
rcl
pop
mov
cmp
cmp
xor
pop
pop
cmp
aad
xchg
ret
dec
push
mov
add
xor
test
push
jge
imul
inc
dec
fdivl
add
and
jl
xchg
inc
das
call
add
popf
jae
mov
xchg
mov
lods
inc
cmp
cmp
test
inc
pop
loope
cmpsl
push
div
mov
push
push
xorl
adc
pop
out
lea
fcoml
pop
xchg
int3
or
sub
je
aaa
xor
add
jge
xor
dec
lea
insl
pop
adc
and
sub
fstpt
inc
popa
inc
out
imul
mov
push
push
bound
jo
dec
lea
jge
inc
pop
scas
sbb
or
jbe
imul
sub
filds
add
mov
add
or
mov
lds
dec
sbb
add
mov
or
mov
sub
test
fidivrs
loop
xchg
mov
jecxz
lods
ret
add
repnz
sub
jge
add
cli
lock
loopne
lds
push
js
incl
add
movl
out
inc
inc
cmpsb
cli
cwtl
push
add
in
sub
sub
xorb
mov
cld
xor
repz
clc
add
hlt
xchg
cmp
cmp
adc
dec
sbbb
add
sbb
and
in
add
adc
dec
fcompl
sub
fmuls
rolb
inc
int3
inc
cmp
dec
inc
mov
xor
add
cs
push
pop
mov
adc
pop
add
sub
test
add
push
insb
movsb
sub
dec
inc
push
je
pop
cmp
sbb
jl
or
mov
rorl
mov
iret
mov
sub
dec
nop
push
fwait
add
addl
xor
inc
cmp
mov
aaa
rolb
adc
adc
mov
lea
shlb
xor
enter
sub
dec
mov
rorb
pop
aam
pushf
add
fadds
add
or
mov
or
sbb
inc
rorb
push
mov
aaa
sbb
inc
stc
sub
scas
jg
sbb
lea
ret
mov
pop
or
mov
test
jmp
sti
mov
inc
cli
dec
je
mov
mov
or
cwtl
add
sbb
dec
ljmp
aam
loope
mov
xchg
add
mov
lea
push
add
aas
mov
add
jmp
adc
lods
rcrl
or
enter
dec
sub
ret
push
pop
fstpl
fldenv
or
mov
sahf
shr
add
or
xor
cltd
xchg
and
push
stos
test
add
inc
mov
aaa
int
pushf
pop
aas
inc
ret
pop
pop
xor
xor
push
add
add
dec
ljmp
shrl
mov
and
inc
sahf
jb
add
xor
test
mov
shrl
mov
jnp
outsl
xor
mov
push
pop
add
push
shlb
jne
pop
aad
arpl
dec
jns
cmpsl
push
cltd
mov
movsb
into
add
mov
mov
int
das
outsl
popf
add
dec
sbb
call
scas
mov
aaa
ret
lea
dec
add
cmp
rorb
test
and
ret
call
mov
inc
mov
ret
mov
jo
pop
ret
mov
mov
inc
dec
push
orb
sub
xor
lock
add
stos
xchg
sbb
mov
and
xchg
mov
push
jno
shll
pop
stos
rorb
add
aaa
mov
movsl
pop
mull
inc
cltd
xor
iret
mov
inc
sbb
sub
jg
mov
les
dec
fldcw
add
dec
sub
sbb
lret
scas
call
sbb
mov
add
pushf
dec
lahf
jmp
mov
cltd
inc
hlt
and
inc
sbb
cwtl
fsts
das
sub
cmp
aas
mov
sub
pop
xor
push
cld
add
and
add
testl
jg
or
scas
push
pushl
and
add
push
lock
jo,pn
sbb
in
sbb
pop
inc
add
push
adc
iret
add
pop
and
mov
popa
test
jb
add
inc
cmp
iret
loopne
enter
es
xor
or
pop
dec
sbb
xor
popl
adc
mov
je
mov
mov
add
in
imul
mov
add
repnz
jp
lahf
jne
mov
dec
aam
mov
mov
push
sbb
ret
arpl
push
push
jmp
adc
outsb
addl
pop
mov
roll
and
mov
inc
inc
add
je
insl
sbb
jl
insb
add
push
jp
xor
pop
push
or
sbb
add
add
or
outsl
cmc
sub
add
js
test
mov
ret
xor
movsl
rorb
add
mulb
cld
iret
dec
add
push
mov
dec
movl
movsb
je
pop
mov
push
or
bound
xor
sub
pop
nop
mov
out
adc
str
push
and
inc
mov
pop
cltd
lods
stc
sbb
testl
inc
arpl
iret
int
xchg
fisttpll
or
mov
xor
dec
call
xchg
dec
mov
cli
push
and
adc
pop
xor
lods
icebp
movsl
add
sbbl
mov
inc
adc
rorb
js
bound
inc
mov
fldcw
mov
adc
int
cmp
pop
scas
sahf
mov
mov
decl
push
pushf
adc
int
mov
fnsave
and
scas
and
xorb
push
fadds
push
pop
cltd
xchg
and
add
ret
cmp
jbe
push
add
enter
rcrl
movsl
add
dec
push
scas
inc
or
mov
sarb
int
jb
and
ljmp
mov
xor
es
daa
mov
je
clc
cmp
cmpsb
and
int
add
sub
or
mov
xlat
sti
dec
cmp
sub
push
xchg
andnps
add
xor
es
add
dec
sub
mov
insl
je
imul
jns
lret
mov
inc
add
movsb
out
pop
adc
adc
push
sbb
mov
push
decb
sub
sti
add
push
inc
daa
jge
and
mov
xor
cmp
das
push
movsl
cmpsb
je
add
dec
cltd
pop
stc
sbb
nop
add
imul
sarl
pop
sbb
inc
sub
cmp
outsl
hlt
mov
pop
mov
cmpsb
pop
add
lea
jno
dec
fdivrs
outsl
push
mov
adc
add
aas
and
loopne
movsl
cmp
lea
mov
dec
out
add
mov
cmp
insl
sbb
cmpsl
int
pop
jae
add
cmp
mov
push
popa
loopnew
into
jae
dec
loop
test
xor
roll
cmp
outsl
pop
ljmp
sbb
add
dec
lods
mov
jg
inc
push
xchg
xchg
repz
lcall
js
or
add
pop
testb
and
add
ljmp
sbb
dec
test
cmp
pusha
xor
sbb
xchg
lock
scas
sub
cld
and
test
dec
or
add
add
or
mov
adc
lcall
add
pop
ret
cmp
jbe
repnz
push
add
xchg
or
and
add
cmp
lods
decb
outsl
pop
push
push
mov
sub
cmc
push
xchg
push
jg
pop
mov
scas
xor
xor
jmp
inc
or
lock
sbb
incb
leave
pop
mov
jp
lods
push
arpl
mov
adc
or
das
xor
js
jno
or
inc
scas
lea
mov
push
cmp
faddl
cli
push
adc
rep
mov
push
lods
test
lea
xchg
cmpsb
push
iret
add
ja
sti
or
push
jno
adc
sub
scas
add
sbb
add
pop
shll
mov
js
mov
hlt
xchg
push
jo
cli
add
sub
add
xchg
imul
xor
notl
icebp
pop
mov
add
ljmp
add
add
rorb
cmc
push
jo
fcomi
in
sbb
mov
scas
cmp
pop
jge
jmp
sbb
add
aam
std
add
mov
pop
mov
stos
fwait
inc
lahf
ret
dec
mov
add
push
je
lods
shll
mov
dec
add
cs
int
mov
and
orb
mov
pop
loop
sbb
movsl
sbb
shrl
push
out
out
pop
mov
sub
je
add
cli
stos
adc
add
lock
pop
test
cmp
inc
je
ljmp
stc
inc
inc
jae
adc
rdpmc
movsl
ret
ret
add
loope
loop
pop
jno
add
int3
lea
push
add
pusha
mov
mov
in
fwait
jae
int3
or
test
add
inc
add
mov
cmpsb
or
add
test
cmpsl
stos
dec
jno
fdivs
sbb
xchg
mov
test
xor
xor
push
push
pop
add
fwait
loopne
sub
mov
les
dec
aam
mov
add
pop
pop
mov
jecxz
dec
in
mov
fadds
sub
xor
add
jo
mov
ret
pusha
outsb
fdivrl
imul
sbb
add
mov
push
fwait
pop
sub
cmp
stc
pop
adc
in
mov
jmp
call
jns
mov
push
mov
inc
fcoml
push
call
imul
in
add
daa
push
call
add
push
lret
xchg
add
add
sti
mov
shrl
inc
fwait
repz
add
cmp
lahf
incl
clc
inc
pop
sub
fsubr
sbbl
inc
mov
or
jmp
add
mov
sub
and
xor
test
pop
add
add
mov
mov
pushf
cwtl
dec
lods
cmpsl
imul
jmp
mov
add
pop
jae
inc
xorb
call
insl
mov
pop
sub
in
insb
aam
add
addl
add
cmp
clc
sbb
lds
add
and
or
sub
movsb
add
loopne
pushf
mov
jle
add
shll
lret
lock
jb
pop
and
outsb
imul
pop
cltd
add
cmp
sub
push
jb
sarl
jge
cld
pop
mov
xor
sub
add
dec
dec
pop
sub
sbb
mov
fdivr
mov
cmp
call
push
push
adcl
inc
lods
insl
mov
add
decl
mov
mov
xchg
mov
lcall
pop
mov
fwait
sub
loopne
cmp
dec
mov
xchg
pop
add
sub
cmp
stos
dec
and
repz
mov
xchg
xor
adc
aam
inc
mov
add
and
push
data16
add
iret
test
or
mov
xor
mov
push
decl
jbe
add
loope
mov
pop
push
cmp
adc
lret
add
and
dec
add
push
sub
jo
dec
roll
dec
jnp
lods
decb
jmp
jae
enter
pop
or
bound
aas
pop
add
dec
sbb
mov
pop
dec
jo
mov
add
lods
lahf
clc
ret
cwtl
add
bound
cmpl
fwait
add
nop
lahf
sti
fcomip
dec
lret
cmp
push
insb
mov
add
cmpsl
jnp
fmul
clc
mov
lret
rcrb
dec
inc
stos
and
lahf
mov
xchg
mov
sub
cmp
or
mov
push
in
xchg
aas
ds
insl
pop
sbb
dec
fwait
ljmpw
fsubs
push
subl
pop
outsb
inc
xor
xor
add
fisttpl
jmp
mov
push
mov
add
xchg
push
add
mov
cltd
mov
sub
fs
pop
and
sub
dec
or
inc
dec
mull
pop
add
mov
bound
into
xor
inc
aas
adc
dec
ss
jae
dec
or
mov
add
fstpl
xlat
mov
lahf
jo
jbe
inc
in
or
adc
mov
add
and
add
faddl
cld
dec
rclb
stos
xor
jne
sbb
loopne
and
mov
xor
mov
cmpsl
jb
scas
jo
inc
and
xchg
pop
jmp
movsb
jmp
cld
sbbl
notb
fildll
push
add
jmp
mov
mov
addl
lods
pop
lds
xchg
jmp
ficoml
xlat
cmp
add
rorb
sbb
jmp
rcll
inc
add
outsb
cmc
jl
scas
add
inc
xor
add
ja
cld
jnp
fwait
pop
mov
fsubrl
jo
jmp
mov
sub
outsb
xor
push
inc
out
push
ret
cmp
sbb
mov
stos
sub
out
pushf
jg
sti
pop
mov
xorb
dec
repz
out
int3
scas
ljmp
loop
adc
add
pop
aad
enter
add
pop
add
and
mov
mov
sub
incb
mov
insb
inc
stos
pop
mov
fcoml
sbb
ljmp
and
xchg
jmp
pop
add
dec
filds
mov
shll
dec
stos
popf
lcall
mov
mov
cmp
add
sbb
xchg
int
lea
js
rolb
jns
clc
dec
adc
sub
add
sub
add
sbb
pop
xchg
pop
nop
insl
mov
lods
mov
fisubs
push
sub
das
mov
outsl
jns
jb
push
dec
ficompl
shrb
ret
dec
in
mov
xchg
mov
dec
inc
add
and
cltd
rol
pop
add
in
adc
add
aam
jp
add
sub
ss
mov
nop
stos
sub
push
inc
sahf
or
xor
cmp
lds
cld
fs
cld
shrb
jmp
dec
jmp
jae
les
outsb
jbe
popa
ret
cmp
mov
lods
mov
dec
cmc
push
jns
jle
ds
and
int3
cltd
jmp
mov
or
push
mov
js
jecxz
aaa
adc
mov
fs
push
dec
cli
jbe
pushf
cmp
in
adc
ja
cltd
mov
push
sbb
jno
fucomp
dec
clc
and
inc
rcrb
inc
fadd
cmp
sahf
push
ret
inc
and
jno
mov
xor
xor
repnz
shr
sbb
inc
push
xor
les
mov
dec
pop
sub
enter
xlat
popa
cwtl
hlt
aas
push
jns
xchg
jne
mov
jmp
insl
dec
xchg
push
adc
or
dec
jmp
push
or
or
xor
dec
cld
sub
xchg
push
pop
popf
jns
int
pop
hlt
pop
pop
adc
imull
mov
inc
xor
add
xchg
cmpsb
dec
nop
lahf
adc
rol
inc
movsb
jmp
jne
xor
add
add
and
sbb
push
pop
das
add
sub
lcall
or
jl
jecxz,pn
add
mov
adc
das
adc
cltd
into
and
test
pop
mov
add
sub
es
jno
mov
sbb
lock
loop
jns
add
mov
and
cmp
and
jb,pt
jge
fcmovnb
push
add
mov
jmp
mov
repz
dec
add
mov
test
sbb
inc
imul
jge
push
sub
sbb
add
pop
lods
pop
lea
xchg
and
pop
inc
js
inc
sbb
add
out
es
inc
out
add
shll
mov
adc
xchg
in
pop
and
xor
inc
sub
cmpsb
loopne
mov
inc
pop
int
dec
dec
mov
rorl
scas
add
jnp
cwtl
int
xor
cmp
dec
pusha
idivl
es
lods
add
inc
add
add
int
adc
add
mov
fnstsw
lcall
fwait
mov
adc
add
mov
bnd
add
dec
cmp
insl
cld
inc
add
sub
dec
lea
dec
aad
sbbl
lds
xor
mov
and
push
sbb
cmp
sub
sub
push
or
or
push
cmp
arpl
jnp
negb
ret
call
or
jl
dec
inc
sub
add
jle
pop
add
ret
cmpsl
int
inc
daa
xchg
inc
sbb
adc
jb
push
roll
sub
sub
add
mov
icebp
pop
je
cmp
push
ljmp
aad
add
js
xor
mov
fwait
push
mov
add
sub
je
xchg
sub
pop
fldenv
rcr
jo
add
mov
or
idivb
xchg
inc
sahf
mov
je
aas
mov
xorb
dec
xchg
cwtl
pop
sbb
xchg
adc
inc
mov
or
push
push
or
jne
das
cwtl
imull
add
call
add
aas
mov
inc
and
sub
xor
les
dec
ret
cmp
movsl
lods
daa
mov
or
inc
cmp
mov
inc
decl
fwait
adc
sbb
shrl
cmp
mov
pushl
cli
and
scas
fldl
xor
mov
jo
add
test
mov
cmp
das
aas
mov
jns
test
or
in
je
push
cmp
mov
sti
or
movl
testb
jne
add
loopne
mov
mov
mov
cmp
push
add
jnp
push
mov
leave
or
push
mulb
add
ret
mov
lcall
imul
test
dec
mov
jae
cmc
jl
mov
dec
xor
addl
dec
dec
out
cmp
loope
add
addb
dec
push
add
or
pop
test
popf
jle
sbb
xor
movsb
push
add
add
sub
xlat
inc
addb
add
or
ja
dec
imul
mov
or
hlt
imul
sbb
loop
sub
pop
iret
dec
jbe
add
rorb
into
jecxz
add
js
adc
std
into
push
jg
lock
iret
scas
cmp
hlt
mov
add
push
lret
call
xor
iret
adc
sarl
xor
adc
inc
lods
sbb
xor
sbb
mov
pop
or
es
insl
mov
stc
shlb
std
adc
add
add
adc
ffree
rep
cmp
inc
movb
mov
inc
or
dec
xchg
add
add
ret
push
cmp
in
add
push
mov
or
out
jle
or
dec
xchg
sub
push
sub
ljmp
add
fcom
jno
fisttpll
popl
mov
xor
dec
stc
add
js
or
push
aam
sbb
outsl
enter
fwait
les
mov
and
sbb
add
adc
aad
add
mov
push
add
lcall
icebp
xor
or
add
sbb
pop
cmp
stos
xchg
aad
iret
push
jmp
push
mov
sub
add
mov
std
mov
push
and
dec
xor
addb
decb
push
xchg
scas
movsb
pop
pushl
push
pop
loope
add
inc
push
jmp
push
sbb
repnz
lock
fcoml
jne
add
sbb
push
mov
fiadds
sahf
out
rcrl
dec
gs
xchg
push
in
and
dec
mov
xor
imul
cmc
dec
cmpsl
mov
push
ss
nop
dec
rorb
cmpb
xlat
clc
xor
rcrb
add
loopne
icebp
push
adc
and
shll
test
mov
mov
test
mov
arpl
or
add
inc
cmp
mov
test
dec
jecxz
add
filds
stos
push
cs
sub
pop
orl
ret
mov
sub
movl
xchg
add
int
push
or
or
mov
mov
aad
dec
sbb
das
xchg
stos
imul
add
add
or
hlt
jp
jg
sub
leave
xchg
push
add
mov
add
aaa
lcall
pop
mov
adc
mov
jb
jne
insl
mov
add
sahf
adc
xorl
push
rolb
pop
outsl
inc
push
dec
mov
push
push
call
mov
aam
pusha
mov
mov
fwait
movsb
inc
lahf
inc
outsb
add
shl
add
mov
add
mov
jecxz
jno
push
add
push
fwait
in
add
leave
mov
sbb
ss
cmp
mov
sub
enter
add
sbb
mov
add
clts
add
inc
stos
loope
icebp
push
lds
and
shll
ret
int
inc
mov
mov
fdivrl
je
add
loop
pop
add
cmp
jbe
je
xor
fists
push
in
out
cltd
mov
scas
mov
hlt
add
jmp
mov
mov
fcomps
pop
roll
xor
push
ret
push
insl
sbb
sbb
roll
push
jo
mov
add
add
add
aas
call
adc
pop
les
std
mov
scas
fisubrs
rcll
mov
add
rorl
xor
add
inc
incl
add
xorb
mov
mov
push
into
mov
aad
mov
pop
lock
mov
mov
push
pop
mov
jae
adc
mov
imul
pmullw
jg
xchg
add
dec
push
inc
cmp
mov
push
inc
adc
jb
sbb
jae
mov
xor
rcll
inc
cltd
sbb
inc
inc
loope
out
daa
push
sub
xchg
lret
dec
scas
int3
xorb
push
shlb
negl
popa
test
rcr
cwtl
cmp
add
in
or
pop
fstl
jecxz
dec
sarl
mov
mov
and
mov
xchg
out
sub
mov
repz
push
mov
jne
cmpsl
jb
out
jl
enter
leave
add
popf
pop
sub
ret
mov
in
jns
repnz
push
mov
push
sbb
push
or
int
add
push
lret
sbb
push
pop
loop
sbb
and
fneni(8087
aas
mov
add
pop
dec
js
push
jge
add
add
inc
sub
xor
pop
xor
push
cmc
lea
mov
add
push
push
add
push
add
insb
sub
mov
adc
cltd
sub
loop
mov
pop
sbb
adc
aam
ljmp
inc
or
add
sub
push
in
aaa
mov
mov
sub
sbb
add
adc
movsb
sub
xchg
pop
sbb
inc
add
jp
add
mov
xor
mov
repz
add
xor
out
pop
mov
movb
stos
mov
fistps
dec
mov
add
push
in
out
cmp
test
pop
adc
add
dec
lret
lds
mov
fidivrs
xchg
xchg
add
mov
or
fwait
add
orb
cltd
lock
add
fs
dec
daa
imul
pop
add
jge
xchg
shll
sub
or
pop
insl
lock
testl
inc
fcompl
out
das
push
push
add
adc
or
int
adc
pop
shll
lods
iret
aad
lret
mov
fidivrs
mov
or
mov
push
xlat
cmpsl
inc
hlt
xchg
lock
xor
sbb
mov
lret
mov
mov
jbe
enter
bound
mov
imul
shlb
ret
out
xchg
into
inc
add
data16
imul
mov
push
clc
hlt
mov
jmp
incb
data16
adc
stos
dec
add
jns
das
cmp
xchg
add
xor
mov
inc
add
add
pop
mov
or
push
or
lock
fadd
jmp
dec
movups
and
ret
aas
xor
mov
daa
sub
sub
inc
push
cmpsl
mov
repnz
mov
not
jecxz
add
dec
lods
adc
inc
or
add
int
add
out
into
mov
add
push
inc
or
or
int
add
mov
push
add
jb
insl
int
inc
ljmp
adc
sti
inc
cmc
dec
mov
or
inc
icebp
sub
add
or
ljmp
das
sub
add
xchg
mov
iret
and
inc
push
lds
add
push
fsubr
jle
pop
loope
sbb
das
push
sbb
add
jge
inc
fucomip
jb
xchg
lods
loope
scas
mov
sbbb
lea
push
add
aam
adc
sub
mov
pop
ret
mov
mov
xchg
adc
add
pop
das
sub
rcrl
test
xor
call
lcall
inc
popf
sbb
sub
sbb
mov
xor
jne
pop
cmp
jp
sbb
test
or
add
sub
cmp
test
push
mov
scas
testl
stos
or
xor
add
clc
movsb
out
mov
cmp
add
cmp
sbbw
jmp
sbb
add
sbb
or
pop
add
lcall
add
xorl
adcb
inc
xchg
push
lock
rorl
sbbl
mov
lahf
xchg
ret
xlat
pop
mov
mov
mov
out
les
out
add
icebp
mov
kandnb
das
add
iret
or
mov
dec
cs
dec
jae
test
and
adc
inc
xorl
sbb
xor
sahf
add
and
pop
add
mov
filds
cmp
mov
or
add
stos
mov
addr16
frstor
xchg
mov
xchg
in
jns
inc
ret
push
jge
xchg
push
sbb
pop
push
inc
bound
push
dec
jns
add
loope
and
pop
and
push
outsl
mov
mov
push
clc
and
int3
iret
iret
je
dec
das
xor
ret
pop
xchg
sahf
dec
jl
and
mov
das
icebp
cmp
sub
or
mov
xor
das
inc
lods
mov
loope
sub
push
int
xchg
pushf
cmc
xchg
test
push
idivb
xchg
sub
push
cltd
jecxz
outsl
sub
adc
fcmovbe
daa
and
add
movsb
inc
or
es
addb
sub
dec
mov
cltd
rcrb
or
sub
iret
addb
xor
inc
pop
jno
arpl
mov
adc
pop
pop
add
xor
or
insl
imul
stc
push
sbb
cwtl
mov
sahf
cli
mov
add
sbb
mov
mov
dec
jmp
jmp
add
xlat
fildl
ret
sub
mov
mov
adc
push
sub
sahf
add
sbb
or
xchg
xor
mov
add
mov
adc
mov
sub
push
xchg
test
pop
sub
bound
push
leave
dec
pop
hlt
mov
jle
lds
mov
mov
sub
lret
rorb
add
add
clc
pop
into
repz
cmp
add
dec
add
mov
fidivs
push
out
or
add
loopne
popl
mov
or
pop
add
insb
mov
fbstp
cmp
xor
out
aad
dec
shll
out
push
add
int
and
loop
iret
add
fsubs
rolb
icebp
jo
out
fiadds
xorb
jge
lea
ret
lcall
sub
dec
out
lahf
fisubrs
pop
push
add
in
rcrl
or
stc
fcmovne
or
roll
cmpsl
xor
inc
es
add
stos
in
xchg
and
and
cmp
jp
arpl
insl
add
add
pop
inc
cltd
mov
out
clc
stos
jecxz
shll
out
ret
cltd
bound
lret
mov
sbb
add
and
push
add
adc
adc
test
add
xor
hlt
pop
les
pop
mov
add
adc
setg
mov
jecxz
shrb
fstpl
cld
testb
dec
das
add
inc
pop
cmp
mov
cmp
orb
jnp
sub
sub
cmp
sarb
mov
sub
and
add
jp
pop
push
mov
ret
loop
loope
or
cmp
mov
inc
lret
cmp
int
pushf
mov
inc
cmp
xchg
mov
lret
sbb
add
mov
add
mov
xor
add
hlt
into
dec
cmp
add
aas
insl
mov
scas
jecxz
adc
and
inc
adc
add
inc
cli
into
add
and
popa
popf
insl
jmp
adcl
sarb
inc
sbb
lret
xor
sarl
rcll
mov
add
dec
std
out
mov
pop
in
push
pop
repnz
cmp
mov
add
and
mov
ret
sti
jbe
ljmp
or
mov
int3
xor
shll
andl
add
xchg
pop
inc
xor
cltd
add
imul
dec
add
shrb
insb
pushf
jne
add
jl
add
pusha
dec
mov
mov
and
cld
push
or
shl
mov
loop
ficompl
mov
dec
add
inc
int
arpl
sub
insl
sti
dec
add
repnz
sahf
sub
mov
mov
add
cs
dec
test
test
lods
cmp
xchg
mov
mov
add
jle
sub
icebp
dec
push
mov
scas
inc
inc
repz
pop
sbb
test
pop
lods
adc
cli
mov
ljmp
add
push
fidivs
ret
lcall
and
sub
aaa
out
add
icebp
jmp
fbstp
mov
mul
xor
mov
mov
fmul
ret
fnstenv
mov
mov
sbb
cli
fcomps
ljmp
daa
pop
mov
leave
mov
and
jno
ret
cmp
push
and
pop
jno
jo
sbb
mov
push
mov
or
xchg
fsubr
imul
xchg
pop
stc
push
add
fcmovb
add
jp
mov
pop
xchg
mov
add
cltd
add
rolb
jge
scas
hlt
mov
fbld
mov
dec
aaa
mov
sub
add
sbb
add
inc
lock
and
jp
shll
mov
jecxz
mov
and
sbb
les
testl
pushf
sbb
sub
add
movsl
test
mov
sub
inc
cmp
into
push
leave
repnz
mov
xchg
test
sbb
sub
hlt
mov
lock
pop
cmc
jae
sbbl
mov
or
dec
imul
xchg
ljmp
inc
add
outsb
sarb
or
mov
das
add
ret
push
add
pop
aad
cmpsb
lret
add
xchg
stos
sbb
adc
ud2
hlt
int
lahf
mov
or
shl
stos
sub
adc
sub
test
mov
add
jle
hlt
addr16
and
add
data16
out
add
scas
outsl
stc
aas
or
int
test
jbe
xchg
dec
mov
mov
add
xor
pop
mov
mov
add
das
pop
add
mov
jne
js
mov
xor
rorb
xchg
and
xchg
int3
or
sbb
mov
xchg
mov
mov
imul
mov
add
arpl
add
and
mov
and
jge
mov
call
cmp
inc
addr16
mov
bound
jle
mov
add
add
and
mov
cmp
popf
call
cmpb
push
lahf
sbb
sbb
outsl
cltd
out
inc
xchg
pushf
movsl
push
inc
mov
push
mov
outsb
mov
mov
ficomps
loopne
sub
add
sub
and
xor
js
adcl
sbb
cmc
cld
ror
mov
xor
aam
out
add
sub
push
lret
sub
add
es
mov
sbb
ds
adc
adc
jno
and
push
enter
ret
jecxz
and
lcall
jae
xor
mov
dec
add
xchg
in
dec
lds
shrl
xlat
int
scas
inc
xor
xchg
add
negl
ret
int3
rcrb
push
sarb
xor
mov
lret
pop
pushf
lret
movb
push
les
enter
xor
add
mov
jns
int
xor
ret
inc
dec
or
loop
std
in
cmpb
loopne
rcrl
add
push
add
add
mov
test
xor
je
cld
add
jae
lret
add
mov
popa
sub
pop
cmp
scas
imul
repz
mov
call
xchg
and
adc
out
hlt
cli
in
mov
loopne
scas
inc
push
mov
inc
or
aad
add
and
repnz
into
pop
fidivrs
in
orl
popa
inc
xor
push
dec
adc
or
lret
pop
popf
xchg
popa
jae
fcomi
xor
in
inc
push
pop
sarl
sbb
adc
mov
inc
dec
and
dec
add
mov
cmp
clc
mov
mov
pop
mov
cmp
pop
lahf
or
lods
scas
and
mov
push
and
add
mov
cmp
sbb
idivl
mov
push
mov
je
and
pop
orb
inc
bound
sahf
cli
std
and
filds
mov
lods
add
ja
ret
je
lcall
sub
hlt
movq
lea
jae
arpl
cmp
adc
pop
mov
int3
mov
dec
push
push
cltd
dec
jnp
repz
cli
pop
and
add
fiaddl
pusha
jne
mov
add
cltd
mov
xchg
testl
in
icebp
cld
ss
sub
ret
test
mov
sbb
sub
sbb
mov
das
mov
aas
or
sub
leave
add
jnp
add
loope
in
std
rorl
or
mov
scas
xor
popl
pushf
add
or
ljmp
fadds
adc
add
dec
aad
clc
into
jb
pop
mov
jbe
imul
push
add
mov
push
mov
jo
push
je
lock
jnp
testb
mov
add
add
xor
mov
xor
negb
out
mov
repz
pop
mov
cmp
mov
adc
jne
hlt
lods
jb
jg
mov
rolb
negb
loopne
inc
in
rcrb
mov
dec
repnz
push
in
shrl
xor
mov
sub
push
mov
mov
je
mov
add
cmp
pop
in
jge
ret
xchg
lock
mov
scas
sti
mov
mov
aaa
jg
in
dec
icebp
cmpsb
repnz
filds
xor
xchg
movsl
insb
add
xchg
lcall
mov
ljmp
cmp
clc
movl
sub
mov
mov
into
xor
add
icebp
mov
push
add
test
shrb
xor
dec
lcall
inc
sbb
add
xor
mov
dec
push
lods
outsl
aas
mov
std
fmulp
dec
add
add
mov
jo
in
xchg
cmp
test
shrl
xor
and
cmp
push
pop
mov
mov
mov
repnz
rorb
jb
cmp
inc
xor
pop
add
daa
xor
sahf
dec
xchg
shl
push
call
cmpsl
mov
add
inc
cld
mov
fdivs
xchg
dec
hlt
push
add
push
insb
add
push
pop
inc
dec
clc
cmp
sbb
mov
repz
add
adc
push
pop
mov
push
xor
pop
bound
aas
mov
hlt
adc
movsb
cmp
add
and
pop
add
ljmp
push
add
es
cli
fcomps
mov
sbb
loope
add
and
lret
push
jae
dec
mov
rcll
mov
scas
lods
mov
cmc
cmp
sub
xor
add
and
add
shl
xor
dec
inc
std
lods
cmpb
mov
je
fsubrl
cmpb
push
sar
xchg
ret
scas
and
lea
xchg
xchg
sub
mov
ret
mov
mov
sbb
mov
mov
cmp
fldl
fwait
shrb
sub
cmp
push
mov
inc
and
fwait
scas
jns
xor
xor
ljmp
scas
inc
addb
xor
mov
dec
roll
add
lds
xchg
arpl
pop
mov
adc
sub
add
add
repz
mov
scas
fildl
adc
sbb
add
lret
mov
std
mov
call
push
mov
fdivrl
orl
push
pop
pop
movsb
add
cmp
mov
dec
addr16
push
push
push
in
ja
pop
add
dec
fdivrs
decb
and
pop
test
aaa
pop
xor
in
jmp
inc
leave
fildl
sti
dec
sub
filds
mov
fldcw
imulb
pop
add
mov
mov
sub
add
jmp
xor
sbb
pop
mov
fs
xchg
push
xchg
lret
pop
add
enter
shlb
add
adc
cmp
add
imul
fs
fisubl
jnp
push
out
mov
loopne
xchg
add
sub
push
push
sbb
repnz
dec
sbb
stos
jnp
jno
jb
in
mov
test
jo
es
arpl
in
mov
sub
fldcw
subb
ret
inc
and
in
push
xstore-rng
cmpsl
add
inc
mov
lahf
imul
cwtl
bound
add
dec
adc
push
sub
add
xor
sub
jmp
and
inc
orb
adc
push
imul
xchg
inc
pop
pusha
add
subb
fimuls
subl
outsl
add
cmp
add
cmp
jmp
add
ret
imul
pop
jae
cmp
testb
out
mov
lods
xor
or
dec
addb
scas
jno
add
dec
lea
xor
mov
add
xchg
mov
add
pop
sub
out
xor
inc
enter
pusha
cmp
cmpsl
mov
cwtl
clc
nop
pop
push
dec
loop
repnz
sub
push
adc
mov
and
push
xor
dec
mov
shll
dec
and
subb
lock
mov
push
imul
or
aad
insl
ljmp
mov
mov
cmp
in
mov
jp
sub
sbb
mov
fwait
and
sbbl
outsl
std
jmp
je
xor
mov
dec
jae
daa
insb
sub
subl
cli
mov
fldl
pop
jge
mov
stos
mov
pop
add
mov
add
cmp
jmp
mov
sub
pop
out
and
lea
dec
das
daa
fs
and
test
push
inc
loop
aam
stc
lahf
mov
push
hlt
cmpsl
mov
and
mov
mov
cwtl
add
lahf
mov
cli
jae
rcrl
adc
mov
scas
data16
sbb
sahf
imul
add
fwait
mov
sti
nop
in
mov
arpl
ficoml
sbb
sarl
add
pop
inc
inc
mov
cmp
lea
adc
push
add
add
pop
mov
mov
mov
push
xchg
into
lock
addl
cwtl
or
jl
fwait
and
push
cs
dec
xor
or
mov
sub
loop
aas
pop
scas
cmp
jne
inc
add
test
testb
jmp
sbb
iret
and
push
mov
mov
std
bound
add
sub
out
dec
call
sbbb
add
pop
push
dec
inc
mov
mov
push
cmpsb
pop
mov
sbb
adc
shrb
mov
enter
ja
scas
dec
int
add
out
mov
push
jae
into
bound
sbb
dec
inc
and
sub
and
adc
stos
jp
lar
jb
cmp
sbb
mov
test
movsl
mov
test
mov
inc
add
push
mov
inc
das
mov
xadd
pop
or
mov
imul
and
fildl
add
mov
pop
dec
std
add
dec
push
push
inc
rcrb
out
lahf
dec
lret
fcmove
into
mov
iret
add
addps
mov
add
shlb
push
jg
js
cmp
xchg
mov
clc
int3
mov
inc
sbb
je
ds
inc
pushf
scas
pusha
jl
add
out
aam
mov
mov
cs
bound
sbb
test
jb
pop
jp
push
jae
add
fstps
add
sub
sub
into
mov
xor
add
mov
stos
iret
adc
add
adc
sub
mov
fistl
jno
xor
sbb
dec
xor
dec
mov
xor
or
or
jl
dec
enter
pop
jbe
dec
int
imul
stos
add
push
or
dec
xchg
int
jp
mov
mov
xchg
sub
insb
ficomps
add
cwtl
stc
mov
inc
shl
add
pop
inc
and
dec
xchg
sbb
fildl
add
std
and
imul
pop
rolb
enter
int3
aaa
mov
mov
add
pop
add
lods
jnp
scas
or
push
add
sbb
add
xor
inc
lods
sbb
or
inc
jae
sarb
mov
fdivl
out
das
cld
inc
lret
int
mov
xchg
or
nop
mov
inc
pop
add
and
cmpl
data16
mov
or
ds
lcall
adc
ret
sub
dec
addr16
cwtl
call
mov
subb
inc
clc
add
add
push
mov
fdivrl
imul
xor
or
das
jbe
pushf
lcall
lahf
and
inc
bound
xchg
dec
lods
jnp
or
mov
sub
pop
test
push
xor
cmp
mov
stc
jnp
adc
sbbb
dec
dec
pop
lret
add
or
mov
roll
mov
or
loop
sub
mov
xchg
inc
movsb
cmp
xor
adc
sbb
ret
pop
inc
clc
dec
or
loope
push
xchg
inc
mov
movb
negb
rorl
pop
push
dec
and
add
jb
mov
sahf
stos
or
inc
push
je
pop
or
xor
push
mov
and
sbb
add
outsb
add
add
insb
add
add
add
add
add
add
add
add
dec
add
jb
add
push
add
add
add
add
cmp
add
imul
add
add
add
add
add
inc
add
aaa
add
dec
add
push
add
add
add
xor
add
add
push
add
add
add
inc
je
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
ja
add
inc
add
add
inc
imul
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
pop
arpl
add
jae
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
pop
dec
add
imul
add
add
add
add
insl
add
add
add
add
add
add
popa
add
imul
add
add
add
add
push
add
add
add
add
add
outsb
cmp
add
add
add
add
cmp
add
add
add
je
add
dec
outsl
push
add
add
add
ja
add
add
add
xor
add
add
add
add
add
aaa
add
cmp
add
pop
add
add
dec
add
dec
add
add
add
push
add
add
inc
add
add
add
arpl
add
add
add
xor
add
arpl
add
xor
add
add
add
add
dec
xor
add
add
imul
add
add
add
add
add
add
dec
add
push
add
add
inc
add
add
add
add
add
xor
add
push
add
pop
mov
in
push
xlat
out
rcll
mov
lea
add
mov
insb
add
sbbb
lret
sub
add
das
call
outsl
inc
adc
imul
pop
ret
jg
cld
sti
mov
adc
mov
mov
repz
add
add
std
pop
daa
mov
mov
xor
inc
movb
lods
lods
sbb
js
mov
shll
inc
inc
jae
add
inc
add
mov
cmp
ret
jae
sbb
or
add
call
add
lea
sub
mov
dec
cs
push
xchg
mov
mov
cmp
out
bound
mov
imul
jg
subl
sbb
xor
into
mov
xlat
jbe
add
clc
cmpsl
push
das
sbb
push
adc
out
add
mov
rep
insl
push
rorl
jno
fcompl
mov
mov
test
mov
sbb
inc
push
mov
daa
mov
dec
jae
cmp
add
sub
ja
je
mov
dec
inc
push
add
add
dec
enter
push
aad
pop
bound
clc
imul
mov
mov
or
sbb
std
push
or
mov
add
incl
dec
add
mov
pushf
or
je
mov
xchg
xor
cld
jg
mov
fsts
aas
dec
inc
add
inc
hlt
jbe
sahf
pop
xchg
sub
fadds
xor
orb
jne
repz
outsb
inc
dec
int3
jle
int3
ja
cmpl
add
dec
cltd
push
movsl
mov
pop
pop
mov
lock
push
push
inc
fildll
fnstcw
mov
jnp
xchg
mov
out
loope
xchg
add
or
lret
mov
je
sub
add
mov
out
dec
popf
and
add
lcall
sbb
repz
mov
jle
ret
imul
mov
cmp
push
sub
dec
std
in
add
or
ja
or
and
adc
rorl
outsl
lret
dec
mov
insl
call
mulb
add
xchg
xor
xor
sub
push
in
and
xor
xor
pop
inc
movsl
mov
das
sub
into
fstl
jo
ds
call
add
pop
inc
insb
pop
push
push
mov
lret
ret
enter
pop
push
mov
repz
stos
add
mov
jae
popw
sbb
mov
push
xor
jns
push
dec
cmpl
call
outsb
xor
mov
leave
rcll
xor
add
adc
mov
sbb
jle
inc
or
repz
add
jno
sbb
call
sub
rorb
push
add
and
pop
mov
adc
add
ret
mov
add
and
cli
push
inc
lret
push
les
dec
adc
lahf
movsl
sub
add
mov
xor
into
add
or
aaa
cld
scas
faddl
mov
daa
inc
sub
cld
inc
mov
test
leave
xchg
pop
into
dec
cmpl
mov
sahf
adc
popl
push
xor
sbb
push
pop
push
adc
arpl
add
jnp
add
mov
adc
jmp
dec
mov
push
add
adc
mov
jle,pn
orl
mov
xchg
iret
fisubrs
into
mov
pushf
inc
add
dec
pusha
mov
add
ltr
xor
ret
stos
xchg
shlb
movsb
jg
add
loopne
add
mov
shl
or
imul
call
sbb
or
lods
cmp
push
dec
ljmp
add
pop
lods
or
add
xor
and
push
pop
add
rorb
xlat
call
lea
cmp
mov
jae
push
leave
and
outsl
push
mov
jmp
dec
jle
arpl
sub
add
outsb
std
sbb
add
add
je
sub
add
push
dec
movsb
dec
mov
mov
add
mov
ret
pop
dec
xor
dec
je
inc
add
xor
sbbb
xchg
mov
pop
cmpb
or
setns
sub
imul
imul
lea
xor
or
add
sub
inc
add
xchg
push
mov
shrl
lock
out
add
mov
incl
mov
ficompl
sub
sub
mov
jno
add
fstpl
cmp
imul
int
add
repz
sbb
xchg
mov
sub
sar
push
cmp
das
sti
adc
lea
cmp
mov
add
dec
push
pop
into
add
sbb
inc
add
test
dec
stos
int
pop
add
jmp
outsb
imul
jbe
cmp
cmp
or
lea
repz
shl
or
cmp
loopne
dec
imul
and
sbb
mov
addb
pop
movsl
pop
call
repz
xor
out
inc
int
adc
add
out
pop
mov
adc
scas
xchg
dec
mov
jns
add
dec
lock
push
mov
xchg
ret
test
sbb
inc
sub
push
lods
inc
enter
sbb
cmp
and
cmp
lret
pop
lds
push
clc
sub
pushf
and
mov
sbb
out
xor
jnp
fwait
add
test
imull
inc
adc
xor
add
jae
rorb
or
xor
lods
imull
cmpsl
pop
and
or
sub
xor
jle
jno
sbb
addps
loopne
jbe
pop
dec
fwait
add
stc
mov
xor
mov
out
inc
outsb
add
jne
insb
push
sbb
inc
or
imul
mov
pop
ljmp
sbb
mov
dec
mov
add
jmp
iret
add
in
movsl
adc
insl
pushf
adc
xorl
andb
lcall
mov
pop
invd
pop
popf
xor
or
stos
or
or
jle
xor
add
inc
lret
int3
push
or
add
call
sar
add
lods
mov
or
repz
cs
mov
ljmp
fdivrl
push
test
inc
mov
jecxz
mov
filds
mov
mov
pop
add
adc
aam
cmp
test
lods
adc
sbb
repnz
in
testl
out
add
or
outsl
or
mov
add
jbe
test
mov
inc
lods
cmp
add
call
mov
ds
lds
test
fnstenv
pushf
xlat
sbbl
sbb
ds
adc
ret
add
xor
pop
cmpsb
adc
sbbl
xor
sub
and
cmp
subl
add
or
xor
add
push
scas
dec
mov
je
shlb
mov
mov
into
inc
mov
stos
xor
push
or
loopne
add
inc
pop
sub
scas
sbb
push
push
and
mov
movb
cmp
jle
filds
and
jns,pn
cwtl
push
xor
push
pop
scas
jmp
xchg
add
cmp
jle
jecxz
rorb
mov
sahf
push
or
pop
add
rclb
addr16
inc
pop
add
sahf
push
cmpsl
out
add
stos
daa
sub
cli
add
add
inc
inc
adc
addr16
add
xor
and
cmpsl
or
mov
or
xchg
jae
cmc
mov
mov
mov
int3
xor
and
jnp
xlat
sub
xor
iret
shl
es
mov
cltd
xchg
nop
cmp
pop
pop
popa
xor
in
es
sbb
stos
jbe
enter
jp
ret
ja
imul
mov
and
inc
mov
push
push
bound
js
xchg
jne
push
xor
jno
movsl
jp
fs
test
sbb
push
imul
outsl
pop
xchg
cltd
jmp
cmc
mov
dec
loopne
jae
outsb
lods
lock
decb
cli
outsb
push
int3
popa
cmc
mov
dec
push
mov
add
daa
inc
mov
iret
fs
dec
cwtl
hlt
jbe
jp
cmpsl
in
jp
and
dec
dec
in
mov
gs
dec
sbb
testl
pushf
jge
mov
mov
dec
adc
and
mov
xor
mov
push
cmp
cmp
push
xlat
xor
jge
movsl
mov
inc
ret
xor
cmp
gs
in
ss
push
mov
xchg
orl
mov
pop
pushf
lds
inc
xchg
in
ss
cmp
jns
pushf
das
xchg
pop
sbbb
adc
push
adc
scas
insl
mov
mov
shl
jbe
aas
and
clc
mov
push
push
lcall
arpl
pop
daa
mov
out
xor
pop
and
outsl
insl
push
xchg
pop
outsb
fsts
and
add
shll
mov
jae
xchg
xchg
cmp
or
pop
pushf
dec
daa
leave
ljmp
jge
mov
les
hlt
jne
call
or
mov
xor
loopne
xor
dec
adc
add
ja
mov
jmp
pop
xor
sub
or
aad
push
cld
cmpsl
push
dec
adc
sbb
jnp
hlt
inc
mov
popa
push
inc
inc
inc
pop
scas
mov
aaa
sbb
mov
imul
sbb
push
pop
push
push
or
jmp
fisttpl
cmp
out
jmp
mov
jmp
push
push
pushf
push
insb
mov
ja
mov
push
lcall
push
cmp
arpl
int
mov
sarb
push
push
dec
testb
inc
and
push
jp
negb
enter
jno
lahf
ljmp
in
ss
lahf
fcomps
push
xchg
loop
in
or
jo
jmp
push
or
lahf
and
mov
shll
push
push
aam
jnp
in
dec
inc
push
fcmovnb
push
nop
adc
pop
loope
popf
mov
mov
cmp
push
mov
pop
xchg
push
mov
push
cmp
mov
divb
ret
push
rcrb
mov
cmp
pop
dec
push
sbb
adc
and
ret
insl
call
dec
fs
inc
jp
xchg
inc
loopne
addr16
sbb
push
sbb
mov
lds
push
push
cmp
cmp
movsl
adc
aaa
clc
cmpsb
cmp
xorb
jne
mov
inc
push
mov
or
sbb
mov
pop
dec
push
lea
mov
pop
dec
push
lea
mov
pop
dec
push
lea
mov
pop
dec
push
cwtl
mov
or
outsb
xor
gs
jo
cs
push
das
scas
inc
mov
mov
mov
test
mov
sbbb
mov
adc
push
aaa
ret
cmp
mov
addb
mov
nop
mov
in
cld
sub
ja
jp
arpl
xor
xor
cltd
mov
inc
jecxz
cltd
imul
pop
mov
cmpb
sbb
and
mov
mov
dec
das
mov
test
popa
push
nop
mov
or
push
aad
sub
cmp
mov
mov
xor
xor
dec
jae
xor
scas
push
push
stos
dec
test
add
dec
dec
lods
push
push
push
leave
inc
mov
cmp
aaa
ss
test
mov
insb
jmp
inc
scas
cmp
dec
cmp
js
jo
dec
push
xor
inc
loop
push
mov
cmp
mov
cmp
mov
mov
bound
mov
dec
jbe
xor
jge
mov
push
jno
sti
rcr
mov
aaa
and
xor
dec
lahf
mov
mov
cmp
pop
mov
icebp
push
xchg
ja
push
sarl
scas
pop
nop
scas
gs
and
lods
mov
jae
pop
jmp
mov
mov
arpl
xor
and
or
inc
push
mov
fisttps
stc
imul
fcmovu
test
dec
cmp
push
xchg
add
andb
ja
out
sbb
sti
sbb
mov
xchg
jbe
int3
adc
cmpsl
popa
push
dec
push
jne
mov
xchg
outsb
and
outsb
jno
adc
shrb
fdivs
push
jmp
mov
outsl
test
inc
cmp
xchg
addr16
bound
repnz
sub
push
in
mov
dec
mov
push
mov
lcall
inc
and
xchg
cld
mov
mov
xlat
and
xchg
out
imulb
or
sbb
mov
jg
dec
mov
jns
nop
subl
xlat
inc
gs
inc
imul
bound
mov
cmpsb
mov
inc
dec
inc
push
and
dec
jb
outsl
push
cmp
push
imul
fmull
push
popa
pop
push
adc
pop
sub
jb
xchg
jns
inc
js
je
lret
frstor
xchg
adc
jp
lods
adc
xor
push
fldt
jne
lock
arpl
jbe
push
arpl
clc
outsl
pusha
mov
cmp
popf
xchg
mov
mov
mov
cmc
sbb
movsb
inc
jb
mov
push
outsl
jo
cltd
in
push
push
inc
push
scas
push
dec
shlb
push
les
xor
push
dec
pushf
inc
mov
lds
adc
arpl
std
negb
outsl
mov
data16
arpl
push
jle
inc
cmp
inc
nop
mov
jecxz
mov
ja
lock
mov
xchg
sub
mov
mov
cmp
xor
into
add
push
pop
jne
push
xor
mov
imul
fidivs
add
add
mov
cmp
mov
xchg
pusha
sti
adc
js
lea
push
xor
test
pop
xchg
sar
and
xchg
jle
lock
or
xor
sti
cmp
mov
push
test
imul
cwtl
and
js
cmp
movswl
loopne
js
ljmp
adc
mov
jge
inc
xchg
jle
pop
and
jo
mov
mov
testl
lcall
jmp
cmp
arpl
xor
es
cmp
add
pusha
mov
dec
xorb
mov
jnp
int
rolb
lods
and
dec
jb
mov
dec
and
xor
jnp
int
jo
subb
mov
xchg
rorb
jnp
int
lock
mov
lea
and
hlt
jnp
xor
lods
rcrb
hlt
enter
xor
lods
lret
jl
push
mov
sbb
nop
in
shll
rorl
pop
xlat
xchg
sub
ret
call
mov
jo
scas
xchg
adc
loopne
dec
mov
test
jmp
in
mov
xchg
mov
push
call
add
xchg
lods
jmp
pop
ja
in
mov
arpl
add
out
mov
aaa
mov
add
clc
icebp
fcomi
inc
repz
subl
xchg
daa
jo
insb
add
pop
stos
inc
mov
and
dec
add
add
mov
mov
mov
push
stos
aad
push
xchg
out
mov
incl
mov
mov
mov
lods
push
mov
mov
pop
or
aas
test
push
sub
dec
xchg
jbe
inc
negb
mov
mov
sbb
mov
sbb
mov
mov
mov
call
mov
mov
mov
xchg
lcall
adc
repz
test
xchg
xorl
jle
xchg
xorl
jecxz
nop
loope
aad
cmpl
popl
push
fwait
loope
xchg
ljmp
pop
xchg
xor
jg
jle
adc
in
cmpsl
jecxz
jecxz
stc
mov
sbb
adc
pop
cmp
adc
lcall
int3
adc
jmp
repz
cmp
arpl
adc
jl
pop
xor
inc
mov
and
adcl
lcall
mov
negb
std
sub
lcall
xor
ret
roll
mov
lret
sbb
xor
jne
xchg
lcall
fstpt
xchg
lcall
cld
pop
mov
loopne
sbbl
lcall
loopne
jg
loopne
and
and
push
lcall
push
push
and
cmpsl
test
dec
push
clc
les
or
sbb
xor
xchg
sub
adc
mov
hlt
adc
jg
dec
test
fwait
jl
bound
mull
xchg
outsl
jmp
xchg
cmp
fwait
daa
pop
cmpsl
ja
js
cmp
out
in
xchg
adc
fwait
add
xchg
daa
bound
cmpsl
das
cwtl
test
repz
or
setnp
cld
jecxz
or
push
aas
repz
dec
ss
inc
arpl
out
inc
fiaddl
aam
inc
out
mov
mov
or
scas
fwait
xlat
data16
inc
mov
fwait
fs
push
sbb
cmpsl
sbbl
and
and
pop
adcl
adc
test
stc
mov
cld
std
mov
insb
and
test
cltd
jbe
xchg
cwtl
mov
pop
xorl
into
daa
xor
testb
test
cmp
mov
aas
mov
movsb
arpl
jne
xchg
cmpsl
cmpsb
arpl
inc
stos
jle
bound
movsb
xchg
mov
xor
inc
sub
inc
jae
stos
and
arpl
mov
cltd
xchg
xchg
jae
data16
inc
xlat
push
cmp
lds
lret
dec
mov
bound
stos
loopne
adc
pop
aas
clc
and
in
xlat
hlt
aas
roll
stos
lret
aas
cmp
mov
icebp
aas
aaa
xor
inc
fnstsw
aas
and
jecxz
loop
mov
divb
or
enter
testl
jg
mov
clc
mov
xchg
inc
cmc
fistpll
sarl
pushl
mov
xlat
xor
sbb
dec
cmp
cmpl
out
cmpsl
jne
inc
mov
int3
mov
clc
mov
xchg
ficoml
daa
cmpsl
sub
inc
call
cmpsl
cld
aaa
cmpsl
arpl
cmpsl
arpl
int
cmpsl
adc
int
inc
loop
xchg
mov
loop
dec
stos
adc
xchg
jge
imul
outsl
pop
popa
ret
cltd
adc
or
lahf
jle
mov
ret
sub
mov
cmpsl
mov
pop
rcll
mov
das
lcall
das
push
pop
out
push
adc
xchg
inc
int
lcall
repz
mov
mov
loope
out
jno
aas
pop
xor
xor
es
mov
rcrl
sbb
and
ret
scas
jle
xchg
rorb
ret
pop
cld
loopne
fstps
mov
scas
cltd
mov
scas
sbbl
mov
jo
sub
gs
mov
mov
cmpsl
mov
jle
lcall
pop
xchg
scas
mov
cmp
push
test
paddusb
xor
sbb
dec
inc
clc
cmpsl
mov
stos
sub
popl
sub
mov
stos
sbb
cmp
cmp
pop
mov
mov
adc
push
xchg
lcall
arpl
xchg
sti
cmpb
xor
dec
js
imul
aaa
lret
or
xor
out
aaa
lock
loop
add
icebp
arpl
sub
mov
test
leave
lods
pop
pop
add
push
sahf
jbe
xorb
dec
lods
mov
nop
xor
mov
std
or
fucomi
aam
mov
outsl
mov
or
push
lock
inc
aas
push
scas
dec
aam
dec
bswap
mov
int3
cld
push
jo
or
push
int3
mov
idivl
mov
clc
lock
xor
push
les
mov
inc
xchg
push
stos
push
add
fwait
orb
mov
int
aam
cmc
int3
cltd
xchg
jmp
push
ret
pop
fwait
js
into
push
and
ret
jg
cli
int3
fwait
xchg
cmpb
test
stos
jg
xchg
pop
test
or
or
mov
cmp
mov
out
xchg
test
pop
hlt
add
or
add
pmaddwd
or
push
push
bound
jbe
or
ja
adc
nop
ss
repnz
xchg
fistps
cmc
jg
movsl
push
cmpsl
mov
lods
push
fisubs
incb
xchg
mov
out
fldcw
nop
xchg
lods
adc
xor
mov
mov
cli
push
push
jnp
xor
jg
add
ret
imull
mov
jg
pop
pop
sub
jmp
lahf
dec
pop
push
mov
fbstp
and
mov
mov
cmpl
mov
cld
icebp
cmp
xchg
repz
or
cmpl
jg
loopne
pop
std
add
aas
xchg
pop
call
fists
add
cmp
xchg
int
int
int
leave
inc
aam
mov
mov
xlat
idivb
pop
xor
xchg
mov
addb
inc
xor
lcall
push
add
sub
ds
xchg
shll
xchg
or
lds
aas
sub
xchg
out
cmp
ret
cmp
je
jb
insb
fldt
cmpsl
out
mov
rclb
cli
cmp
pop
pop
es
imul
aas
xor
shll
adc
cwtl
push
xor
add
jmp
sbb
sbb
movsl
dec
test
sub
or
jle
inc
add
mov
inc
cli
out
sti
movsl
mov
xor
xchg
inc
mov
xchg
sbbl
xlat
aas
popf
dec
jns
lods
in
cmp
sub
loope
mov
adc
xchg
inc
ret
sti
std
mov
sbb
xchg
xchg
jg
push
cmpsl
mov
jge
sbb
sbb
inc
cmp
ljmp
adc
and
mov
cltd
cmp
fisubl
dec
push
jp
mov
sbb
and
xor
sti
adc
aad
mov
leave
mov
adc
lods
mov
stc
mov
xor
xor
dec
inc
mov
and
insb
aad
stos
inc
mov
in
xchg
ret
jecxz
mov
iret
xchg
xor
xlat
out
std
xchg
dec
adc
call
pusha
mov
cmp
mov
sub
sub
jmp
xor
ficompl
mov
cltd
es
sub
lds
scas
cmpl
mov
add
das
or
stos
addr16
add
fbld
aad
xor
dec
shrb
pop
and
cwtl
gs
cmp
bound
inc
inc
inc
xor
xchg
decb
in
fisttps
cmpsl
and
jmp
push
jb
jb
movsb
mov
mov
sbb
jo
jb
adc
sbb
xchg
xchg
mov
inc
xchg
xchg
imull
mov
push
mov
and
cmp
mov
jnp
and
jg
push
add
loope
test
out
roll
add
add
cltd
mov
mov
sbb
cmp
mov
call
xchg
adc
xchg
xchg
mov
pop
js
ret
neg
dec
hlt
dec
add
or
dec
cmp
pop
jg
dec
mov
adc
push
xchg
push
add
xchg
cmpsl
push
push
adc
xchg
jl
sbb
push
add
fdivrs
imul
das
lock
cmpsb
sub
add
cld
adc
sbb
cmp
cli
xchg
aas
imul
shll
pop
inc
test
sub
pop
leave
stos
iret
ljmp
popf
das
mov
sbb
xor
jmp
inc
jl
scas
fs
sbb
xchg
icebp
hlt
sbb
mov
pop
add
mov
add
xchg
pop
nop
and
inc
pop
and
jne
or
in
ljmp
inc
in
sbb
sbb
orb
inc
mov
xchg
dec
jb
push
mov
roll
dec
fistpll
and
movsl
cli
jl
add
mov
cmp
stos
rcrb
lock
jae
fisubl
jge
lods
xor
cmp
mov
or
sub
xorb
loopne
pop
add
icebp
xchg
call
int3
es
mov
lea
add
sahf
adc
sbb
xchg
cwtl
jae
ret
arpl
dec
cs
jne
xor
sbb
movsb
mov
push
jo
js
repz
jbe
cmp
ja
dec
cltd
imul
lahf
test
ror
add
mov
sub
jmp
pop
sbb
mov
adc
ds
add
add
sbb
xlat
lock
in
and
mov
dec
lods
imul
fwait
xchg
pop
pushf
mov
mov
fdivr
test
push
push
jns
mov
mov
mov
iret
push
testb
and
scas
pop
push
xchg
push
leave
pop
fmuls
iret
sbb
xchg
add
inc
fiaddl
addr16
and
outsb
mov
je
or
pop
int
inc
call
imulb
fmull
mov
add
mov
xor
xchg
add
lds
out
or
sbb
add
or
inc
cwtl
ljmp
imul
add
out
cwtl
add
jb
jge
sub
pushf
mov
add
in
mov
insb
repz
mov
ja
in
push
repz
adc
scas
mov
add
bound
notb
movsl
cld
out
insl
add
xor
mov
push
add
cmp
add
cmp
cmpsl
and
and
xchg
bound
add
jmp
flds
cmpl
mov
push
ja
outsb
mov
xor
xor
jbe
cmp
jb
sbb
imul
inc
dec
and
repz
jmp
dec
dec
xchg
mov
pop
add
dec
jb
pop
push
adc
lods
add
jmp
mov
xor
push
ja
add
cmpsb
sbb
add
sahf
pop
js
sub
mov
mov
cmp
push
roll
mov
jae
pop
xchg
sub
insb
cwtl
push
outsl
mov
data16
push
fwait
ret
stc
mov
xchg
mov
jo
cmpsb
das
mov
sbb
push
sbb
test
lret
subl
mov
cmp
add
push
imul
cs
add
rorb
or
add
inc
jmp
fstps
and
xor
iret
add
jbe
inc
mov
inc
leave
into
add
shlb
lret
int3
lea
mov
ret
sub
inc
subb
lret
jae
pop
cmp
mov
pop
add
mov
orb
sbb
push
xchg
int3
jecxz
insb
jmp
add
aas
sub
sub
pop
add
call
add
mov
addr16
sub
cmpsb
cmp
mov
outsl
nop
dec
mov
sbb
sbb
popl
mov
out
iret
jmp
enter
pop
mov
add
adc
and
jnp
add
data16
adc
add
cmpsl
rolb
and
mov
sbb
inc
sbb
jns
adc
lea
inc
add
jle
out
enter
mov
lahf
pop
xchg
add
lret
je
stos
pusha
pop
mov
sub
arpl
mov
out
cmp
add
leave
sub
adc
lret
mov
or
fistl
inc
mov
lods
pop
repz
roll
lea
mov
lods
stos
ficompl
fcmovnbe
or
push
jmp
cmp
arpl
mov
out
mov
jle
jae
xchg
or
add
xor
push
je
adc
add
adc
ret
add
inc
push
mov
lahf
mov
mov
adc
mov
inc
add
rep
mov
test
cmp
add
jle
mov
aad
movsl
div
stos
adc
mov
pop
incb
mov
add
subb
sbb
jo
imul
add
dec
mov
dec
xor
pop
mov
pop
call
and
inc
cmp
xchg
cld
in
lods
jge
and
or
inc
cwtl
sahf
pop
dec
movsl
bound
sbb
ss
pop
cmp
and
push
dec
push
jns
xchg
in
mov
insl
mov
ja
imul
popa
outsl
inc
xchg
cltd
dec
xor
movsl
iret
jns
push
adc
add
push
xchg
jno
inc
in
dec
push
sub
and
push
inc
xor
nop
rcrb
add
movsb
cmpsb
pushf
idivb
mov
pushl
sbb
mov
inc
jmp
repnz
addr16
xchg
sahf
faddl
xchg
imul
jmp
dec
xchg
dec
imul
inc
pop
js
bound
xchg
cmp
sbb
xor
je
or
fmull
jl
and
enter
in
xor
addr16
mov
cmp
aaa
dec
jo
and
xor
pop
pusha
xor
movb
loopne
pop
sbb
cwtl
or
jno
push
xor
fs
inc
loope
repnz
pop
or
repnz
jbe
and
sub
push
inc
cmp
jp
sti
insl
js
test
imul
push
push
push
mov
xor
jo
pop
in
add
leave
cli
fidivs
in
cmp
sbb
out
fcomps
in
gs
push
xor
add
sbbb
push
in
jae
sbb
add
bound
push
not
ret
mov
inc
fildll
sbb
mov
cmc
add
imul
add
fsubrl
cltd
cmpsl
repnz
inc
jl
pushf
push
xchg
mov
push
add
js
data16
movsb
mov
inc
mov
iret
clc
imul
cmp
add
sbb
cmpsl
sbb
stos
add
adc
add
test
mov
hlt
shl
inc
pop
mov
add
jl
add
fbstp
xchg
icebp
push
jl
stos
loopne
test
aaa
js
fisttpll
add
adc
fsub
pop
fidivrl
mov
mov
inc
loope
ljmp
ror
xor
jle
add
pop
rolb
cs
add
aaa
push
movb
add
sbb
test
scas
cs
pushl
pop
push
psubsb
test
mov
stos
lea
adc
mov
cmp
stos
xchg
cmp
pop
cmp
xchg
add
ds
add
ficoml
add
mov
sbb
stc
jae
push
shlb
es
aad
push
mov
mov
jge
leave
and
add
les
push
cld
adc
in
sarb
mov
adc
push
outsb
mov
ret
mov
dec
test
fwait
pushf
mov
cmp
cmp
sbb
rol
pop
mov
ret
ror
test
inc
add
xchg
inc
mov
xchg
push
pop
cltd
inc
lock
mov
mov
sbb
test
inc
xor
lods
pop
mov
dec
mov
adc
es
add
pusha
sub
mov
mov
or
add
add
and
je
ljmp
incb
lret
or
xor
dec
add
or
or
add
or
jmp
ret
mov
scas
inc
ss
imul
add
xor
fimuls
clc
add
orl
lods
push
inc
int3
into
sub
scas
out
mov
sti
imul
repz
shrb
pop
jnp
cld
and
mov
test
int
shlb
ficomps
and
stc
sub
les
pop
jmp
sub
jp
insb
adc
and
fdivrl
in
add
stc
movsl
push
add
rep
mov
shll
dec
lods
mov
xchg
jae
out
cli
push
cmp
mov
mov
xor
mov
mov
enter
dec
pop
pop
pop
inc
stos
andl
push
or
pop
loope
mov
xchg
cmpsl
pop
xor
repz
cmc
int
sub
int3
mov
cmp
and
popa
cmp
lds
ja
push
cwtl
loop
pop
mov
cmpsb
add
inc
and
mov
mov
jge
jnp
mov
loopne
cs
xor
or
movsb
jmp
sbb
jbe
or
add
jmp
aam
arpl
sub
mov
out
mov
add
arpl
movsb
movsl
es
or
add
jb
test
mov
loope
mov
mov
leave
das
add
bound
je
pop
add
adc
enter
aas
mov
add
lds
inc
push
push
push
stos
daa
call
shlb
or
popf
lea
or
push
push
push
jae
insb
add
sub
add
adc
movsb
sbbb
xor
pop
jae
fcomps
mov
push
add
add
add
xchg
add
push
jp
or
out
push
or
push
pushf
stos
roll
call
shr
add
mov
fmul
push
clc
movl
jmp
mov
add
aad
sbb
or
nop
rolb
sub
das
xor
call
xchg
mov
xchg
mov
stos
cmp
sub
subb
addb
test
leave
and
arpl
inc
sub
lea
movsl
std
jae
mov
sbb
sbbl
push
ja
pop
add
sti
and
stos
pusha
jge
ds
out
mov
push
addr16
negb
mov
mov
add
sub
sub
push
add
xchg
mov
fwait
lret
push
scas
into
sub
stc
lret
dec
imul
pusha
inc
and
lock
je
and
push
mov
outsl
cmpsl
inc
mov
and
aaa
insb
add
imul
sbb
push
add
fsubrs
sub
mov
call
mov
outsb
add
xchg
popf
cmp
mov
fnstcw
xchg
aas
pop
mov
add
and
lds
cwtl
pusha
mov
stc
lods
stos
inc
cld
loop
adc
gs
jae
cwtl
inc
mov
inc
arpl
ds
fmull
cmp
sbb
mov
add
and
sbb
jmp
cmp
cltd
mov
rclb
jo
std
mov
idiv
mov
push
cs
je
inc
test
push
sub
dec
cmpb
jecxz
add
add
lret
dec
pop
add
repz
mov
cmp
notb
mov
mov
jae
lods
and
std
cld
dec
or
push
dec
add
mov
add
mov
push
mov
mov
jmp
jb
add
mov
inc
mov
or
jae
mov
add
adc
repz
and
stos
add
addr16
xor
cwtl
dec
sub
hlt
add
pop
mov
inc
pop
add
cmp
xchg
jne
outsl
sub
add
int3
dec
sub
mov
and
mov
jns
pop
aad
mov
add
inc
add
and
rolb
cs
in
jmp
push
lods
jae
repz
sub
mov
stc
cmp
add
dec
sbb
mov
pop
sub
add
push
fs
test
jb
add
adc
or
xchg
jae
xor
sbb
push
add
stc
push
inc
mov
adc
dec
cwtl
sbb
fisubrl
push
out
or
scas
jo
std
pop
xchg
addr16
dec
fwait
add
push
or
out
lds
sub
push
add
incl
pop
xchg
imul
jp
inc
push
arpl
add
aaa
in
mov
adc
ss
mov
cwtl
insl
xor
repz
mov
mov
mov
jge
push
add
test
push
scas
mov
jg
roll
scas
sbb
jmp
xorl
jl
lcall
in
imul
dec
or
jae
adc
repnz
and
or
add
xchg
xor
push
xchg
or
mov
jbe
lret
or
rcrl
mov
and
add
lret
or
xchg
mov
pop
add
andb
adc
add
call
inc
outsb
dec
out
repz
sbb
icebp
xor
scas
cmpsb
mov
adc
dec
ja
imul
add
lahf
fwait
xchg
mov
mov
negl
dec
test
mov
adc
outsl
or
fnsave
jb
loop
jp
imul
mov
xor
mov
pushf
ret
in
mov
xor
sbb
jns,pt
scas
aam
jp
mov
cmp
into
add
inc
mov
pop
inc
add
lret
pop
fadds
push
xchg
mov
mov
aad
pop
push
push
bnd
mov
add
and
mov
dec
pop
sub
add
mov
cmc
xchg
test
orb
fwait
mov
pop
scas
mov
or
int3
adc
movsb
xor
xor
push
add
xor
sbb
pop
mov
lock
cmpl
addr16
in
jo
jl
add
mov
scas
push
cmp
mov
imul
mov
push
adc
rcrb
dec
dec
xchg
mov
cld
scas
jo
mov
xor
lret
cmp
fidivrs
cmpsb
cwtl
xchg
cmp
inc
lcall
xchg
add
xchg
lea
pop
popa
test
rcll
fs
daa
std
push
xchg
add
fcom
or
repnz
add
fsubs
test
push
xchg
cld
cmp
push
repnz
jge
mov
push
loopne
dec
je
mov
call
or
dec
pop
in
sbb
imul
push
and
ds
cld
add
xchg
loopne
jnp
mov
sub
scas
cmp
mov
dec
jae
mov
add
sub
mov
pop
insl
add
das
add
xchg
idivb
cmp
nop
lods
mov
xor
add
push
push
add
xor
test
cmp
into
movsb
rorl
mov
popa
lea
call
add
outsb
data16
inc
xchg
or
xor
jno
mov
mov
add
xor
add
sbb
push
out
out
incb
mov
fwait
sub
cmpsl
adc
xchg
add
fwait
stos
add
stc
add
sub
mov
cltd
mov
lret
shrl
dec
adc
add
scas
clc
add
inc
jae
movsb
pop
add
or
loopne
mov
add
mov
mov
mov
stc
add
and
ret
jmp
push
mov
test
push
add
loop
test
push
push
cmp
loope
adc
outsl
push
sub
cmpl
divl
shr
add
mov
in
call
push
in
mov
jge
out
stc
js
jnp
xor
fwait
cltd
je
mov
xor
cmp
ss
fcoms
iret
xchg
push
or
xchg
fiadds
lea
xchg
or
shrl
lcall
clc
pushf
sbb
adc
push
add
es
stc
or
push
push
rorl
sub
cmp
mov
iret
mov
cmp
aad
stos
mov
sub
lahf
loope
jl
xchg
das
xor
cmp
repz
scas
sbb
add
push
mov
fwait
lea
xor
dec
ljmp
cmc
ss
add
setb
mov
mov
ljmp
test
sub
mov
mov
ltr
or
or
add
pop
push
or
xchg
roll
xchg
dec
lods
cmc
pop
dec
or
inc
cmp
push
add
sbb
add
out
insb
xchg
mov
bnd
jne
jo
fwait
xchg
mov
lret
push
sbb
lock
int
pop
xchg
push
mov
mov
dec
cmp
mov
sbbb
mov
add
mov
mov
xchg
push
fwait
cmp
lds
jnp
mov
pop
xor
or
inc
xor
dec
jb
jmp
ja
icebp
lock
cld
pop
inc
add
inc
int
mov
push
pop
cmp
cmp
and
push
pop
dec
sbb
nop
mov
imul
dec
pop
das
and
and
add
sbb
sbb
je
int3
iret
mov
add
mov
dec
push
rclb
loop
add
pop
mov
dec
pop
hlt
add
pop
mov
xor
cmp
jne
push
icebp
mov
mov
scas
xchg
cmp
push
push
adc
add
push
in
dec
adc
fistpll
pop
add
jmp
lds
sub
mul
test
add
inc
add
js
lahf
add
sti
pop
add
daa
test
addb
mov
pop
or
mov
hlt
adc
outsl
scas
dec
lea
inc
lds
repnz
xor
sub
mov
mov
jnp
inc
inc
xchg
add
lret
std
or
sbb
pop
cltd
add
pop
inc
add
je
idivb
push
fiadds
lods
adc
scas
sub
xor
add
and
dec
pop
add
imul
xchg
jmp
imul
pop
imul
mov
scas
xor
cmp
or
mov
das
add
je
dec
or
sti
gs
insb
jae
push
mov
or
sub
or
test
mov
decl
loop
sbb
out
or
mov
adc
xor
je
sub
xor
sub
adc
ret
jo
inc
jae
jle
push
in
mov
mov
push
jecxz
roll
sub
mov
ja
fiaddl
add
out
int3
xchg
add
ret
pusha
std
add
sub
pushl
jmp
cmpsl
cmp
mov
cmovs
add
movsb
jb
mov
xor
int
xlat
and
ds
mov
jne
sbb
mov
dec
push
and
mov
dec
pop
jae
negb
sahf
movsb
and
scas
subb
sbb
addl
mov
inc
jecxz
popf
dec
stos
dec
mov
aam
and
into
push
hlt
mov
sbb
or
inc
and
and
inc
mov
aad
outsl
data16
sbb
out
jns
pop
and
xchg
outsb
push
add
sub
mov
out
mov
movsl
stc
xor
cmpsl
jmp
mov
mov
add
xchg
mov
stc
cmpsl
add
sub
scas
push
test
jae
cs
dec
jne
ret
push
out
dec
sbb
cwtl
je
mov
add
mov
test
pop
push
and
andl
aaa
add
mov
mov
dec
daa
mov
xor
add
mov
mov
jb
scas
stos
inc
cmp
sbb
mov
mov
add
push
sub
stos
xchg
sub
scas
imul
jne
cmc
dec
add
stos
add
mov
lret
int
push
outsl
imul
dec
dec
jno
jmp
or
mov
lock
inc
jecxz
cmp
test
lods
or
inc
imul
imul
xchg
pop
jp
sub
test
add
mov
aad
mov
sub
mov
xor
mov
in
cmp
lret
or
add
repz
ret
add
dec
push
mov
mov
add
fisttps
dec
adc
scas
into
push
das
repz
pop
ret
and
jge
dec
mov
mov
je
xchg
in
lcall
and
sbb
dec
das
pop
or
add
mov
cmp
lahf
add
jmp
dec
ret
mov
cmpsl
adc
dec
cmp
in
mov
mov
mov
decb
add
or
mov
mov
stos
or
out
pop
outsl
sahf
cmpsb
add
inc
mov
das
xor
pop
rcrl
arpl
add
dec
ret
pop
lret
mov
pop
mov
inc
adc
and
add
mov
nop
fwait
mov
mov
or
add
push
sub
push
xor
nop
aam
adc
fisttps
inc
add
dec
cmp
pop
pop
popf
and
ret
cmc
filds
pop
sahf
add
pop
pop
or
and
fbstp
pop
dec
popf
cmc
add
ret
add
lret
sub
repnz
jae
jmp
mov
add
xor
cs
je
lret
adc
adc
sbb
jae
xchg
addb
jbe
aad
ret
adc
add
add
inc
shll
jp
cmpsb
fstl
or
dec
push
mov
mov
dec
add
adc
and
adc
pop
mov
dec
dec
repz
add
push
pop
xchg
push
push
cli
jo
adc
mov
rorl
lahf
out
dec
scas
cmc
add
sub
add
mov
in
xchg
lcall
mov
xchg
add
ret
pushf
fisttps
mov
adc
pop
push
call
pop
sbb
xor
ret
add
push
mov
insb
mov
cmc
and
out
leave
fwait
sahf
sbb
cltd
mov
ret
out
cs
loopne
in
mov
mov
mov
test
ja
mov
and
xor
add
les
inc
in
xor
pop
push
mov
cmpsl
xor
stos
add
out
push
cmp
jne
mov
aas
xchg
pusha
lock
xchg
sub
sub
divl
test
loop
pusha
cmpsl
sbb
sbb
ret
notb
in
jnp
cmp
ror
dec
test
cmpsb
addl
test
rcll
pop
dec
mov
hlt
lcall
ljmp
cmp
lods
push
lods
mov
push
gs
bound
mov
out
pop
ret
or
add
pop
jne
icebp
mov
and
add
shll
add
movsl
jns
cmpsl
mov
xor
add
mov
popa
iret
jmp
mov
mov
add
je
sahf
pushf
inc
mov
mov
sbb
ret
jno
bound
int3
jl
fs
mov
jbe
shll
or
outsl
icebp
ja
test
subl
cmc
mov
fnsave
add
dec
sub
cmp
loop
repnz
jg
jecxz
in
mov
add
int3
add
push
xchg
mov
xor
ljmp
mov
cmp
ds
mov
inc
fstp
pop
inc
adc
das
aaa
xchg
mov
cmpsw
and
repnz
movl
adcl
dec
nop
pop
inc
bound
xor
dec
call
mov
nop
repnz
mov
insb
jo
adc
adc
mov
sub
adc
add
daa
into
lds
lods
jnp
push
add
out
jle
inc
rorb
jne
dec
xor
mov
ljmp
mov
xor
xchg
cmp
mov
xor
and
push
ja
jle
push
mov
lock
movsb
dec
arpl
push
push
aas
xchg
jmp
mov
daa
add
fs
xor
sub
adc
mull
push
fsubrs
subb
xlat
mov
ror
or
andl
mov
cmpsb
xchg
or
popf
adc
add
xor
jne
mov
and
and
add
add
in
and
lret
outsb
frstor
inc
ret
test
int
xchg
add
loopne
std
les
test
mov
fstps
xchg
mov
fdiv
cmp
jmp
xchg
aam
aaa
xor
test
adc
pusha
lahf
sub
pop
xor
and
jecxz
sub
lods
mov
jnp
sub
lods
mov
xchg
inc
inc
and
jne
add
shlb
lds
sub
enter
sub
xchg
dec
cli
jno
adcb
std
xchg
add
inc
xchg
cmpb
push
pop
mov
lret
and
jo
ljmp
push
in
lahf
mov
or
and
cmpsl
xor
xorb
xchg
fmulp
add
xchg
cmp
mov
inc
cwtl
dec
jmp
dec
mov
arpl
xchg
test
inc
sbb
jmp
mov
bound
iret
cmp
xchg
mov
or
sbb
add
rcll
scas
dec
pushf
icebp
test
bound
jg
xchg
or
xor
mov
sbb
stc
sub
jle
xchg
add
pop
add
mov
out
sbb
add
xchg
mov
mov
xor
test
fildll
jmp
jae
into
cltd
add
inc
outsb
and
cmp
mov
or
testl
int
pop
inc
mov
dec
stos
mov
jmp
fs
in
loopne
dec
mov
aaa
jne
aaa
movzbl
add
add
pop
xorl
add
mov
cmpsb
xlat
mov
sub
add
and
add
popa
movsb
add
xchg
in
mov
test
test
xchg
aad
repz
sti
in
push
fsubrl
cmp
xchg
outsl
cld
fnsave
movsl
ret
and
xor
mov
pop
sahf
aaa
stos
jmp
hlt
cmp
adc
cli
adc
ret
mov
cmp
repnz
test
out
cli
push
pop
mov
mov
faddl
adc
sub
pop
lahf
sub
xor
lods
jae
mov
xor
in
sarl
jb
xor
and
cmpsl
fcmovnb
mov
movsl
mov
adc
mov
cltd
ret
rcrl
adcb
xchg
lahf
mov
and
sahf
fisttps
sbb
pushf
mov
popa
fidivrl
push
push
pop
ret
cld
dec
rcl
mov
mov
xchg
roll
cmp
mov
mov
rcrl
add
ret
cld
int3
dec
loop
add
mov
add
or
sub
fdivrl
xchg
inc
mov
in
punpckldq
lods
cltd
gs
xor
pop
imul
inc
in
cmp
push
sub
cmpsl
jns
inc
push
sub
adc
inc
jae
in
lcall
jno
stos
and
jne
xlat
xor
sti
jbe
and
fstpl
mov
inc
aaa
fstpt
mov
dec
inc
xchg
push
and
inc
cmp
mov
jns
push
cmpsl
js
xchg
fs
dec
cmovnp
lret
dec
pop
enter
mov
inc
das
popf
inc
xor
xchg
dec
mov
bound
jae
fbstp
sti
out
push
cmp
push
adc
movsl
addr16
xchg
push
sbb
and
lahf
inc
mov
out
pushl
pop
orb
xor
push
xchg
cmp
dec
push
dec
pop
push
jno
mov
adc
push
cmp
push
xlat
inc
cmp
ss
pop
sub
dec
xchg
add
repz
mov
nop
sbb
cs
movsb
pop
mov
jne
mov
mov
cld
push
in
xor
ret
add
sub
sub
jne
out
mov
sbb
repnz
jg
in
push
mov
icebp
add
add
shlb
iret
cmp
test
js
mov
mov
pop
xchg
add
aas
es
adc
mov
popl
insl
test
sub
sub
in
jnp
jbe
push
repnz
add
out
push
neg
int
enter
int3
jae
std
fistpl
xchg
mov
cld
add
fnsave
mov
sbb
mov
xlat
jecxz
sub
addb
pop
jb
jbe
rol
dec
and
mov
add
sarl
cmp
pop
mov
repnz
pop
test
pop
clc
xor
mov
lea
xor
mov
outsl
mov
inc
fucomp
xchg
test
fnstsw
adc
fs
and
add
jne
and
repnz
add
jl
pop
jecxz
pop
add
sub
mov
mov
int
rcr
ljmp
fstps
hlt
or
les
xor
mov
add
pop
shll
or
loop
cmpsl
push
icebp
add
in
cmp
cmp
push
inc
arpl
bound
je
dec
insl
inc
add
sbb
mov
inc
mov
add
dec
xor
mul
pop
add
dec
bnd
pop
and
fadds
fildl
popf
pop
filds
loope
lcall
aam
ds
into
rol
add
imul
dec
repz
add
and
jne
cs
clc
mov
push
mov
sub
mov
imul
addl
movsb
pop
sbb
jae
inc
or
add
or
add
or
mov
pop
out
pop
lods
xor
in
shrb
leave
mov
out
add
ret
ficoml
mov
or
ret
or
pop
jg
add
push
xchg
insl
cltd
add
mov
je
jno
pushl
jbe
push
sbb
push
adc
mov
pop
jne
and
pop
je
add
and
lds
inc
fisttps
push
jae
scas
push
cmp
mul
shl
jl
mov
fwait
and
popf
stc
faddl
in
add
jle
mov
clc
push
jb
imul
add
icebp
daa
xlat
mov
pop
rcrb
jae
add
or
ret
notb
xchg
out
pop
lea
push
jae
fadd
fldcw
and
dec
push
hlt
inc
pop
repnz
repz
push
ucomiss
call
push
hlt
mov
jne
inc
pop
and
pushf
fsubr
adc
xor
outsl
out
and
and
pop
pop
icebp
xor
in
or
lret
add
or
add
mov
dec
add
clc
lcall
sbb
pop
add
lock
lods
add
jnp
ja
push
je
mov
outsl
lods
and
push
test
jnp
push
add
fists
add
icebp
nop
sub
fs
jp
divl
lods
jo
jne
or
cmp
loopne
shlb
int3
hlt
cmpl
inc
stos
sbb
add
jo
inc
pop
test
cmp
and
add
lret
push
push
lahf
mov
xor
call
pop
sti
add
mov
in
pusha
sub
dec
into
fildll
jle
pop
lret
ss
lods
test
add
add
sub
add
mov
mov
ret
and
dec
ret
push
push
mov
call
sarl
in
arpl
mov
das
call
cmp
in
xor
ljmp
scas
and
add
les
lods
jns
xchg
pop
rolb
or
das
in
dec
add
icebp
pop
imul
loope
cmp
add
add
jnp
jl
out
inc
scas
mov
sub
mov
sub
out
add
xchg
dec
or
mov
jecxz
faddl
shrl
sub
cltd
pop
lea
loopne
jo
loope
inc
cld
and
sahf
push
mov
add
lods
jo
imul
arpl
mov
push
enter
push
sbb
jae
xchg
in
jnp
js
add
sbb
test
jge
cs
push
roll
add
or
add
ret
mov
aam
pushf
push
xchg
subl
jae
in
icebp
xchg
inc
mov
rolb
push
mov
jnp
fimull
mov
pop
pop
pop
pop
inc
add
in
add
sbb
add
test
dec
call
xchg
sbb
jp
test
or
mov
int
ja
and
jbe
lods
dec
push
mov
repz
add
aas
ss
add
lahf
in
jp
arpl
dec
popf
add
hlt
sub
lock
mov
push
jae
add
lcall
push
xchg
mov
shl
sbb
mov
xor
in
mov
fcompl
add
ja
cmp
push
push
nop
push
dec
nop
scas
inc
mov
loope
xor
cmp
test
fmulp
lahf
ljmp
xor
add
shl
jae
out
pop
fadds
sbbb
xchg
sbb
loopne
mov
scas
in
ja
xor
fwait
mov
mov
loopne
pop
inc
inc
arpl
pushf
add
or
xchg
add
aad
mov
arpl
call
mov
xchg
and
inc
ja
inc
jmp
cmp
sti
mov
add
cmp
mov
push
jecxz
das
pop
add
and
sub
push
mov
loopne
push
push
adc
jae
lahf
xchg
mov
ret
inc
lds
xor
jno
outsb
lret
mov
push
push
xor
je
sub
xor
xchg
ficompl
lea
ljmp
aam
or
or
dec
add
adc
mov
xchg
add
cmpb
je
push
lods
or
mov
and
mov
jmp
in
xor
mov
adc
add
push
lahf
xchg
add
fbstp
add
sti
shll
xchg
sbb
xchg
mov
ret
sbb
movsl
aam
shl
sub
push
pop
xor
add
add
sub
cwtl
mov
repz
mov
adc
out
push
add
jg
mov
pop
add
pop
mov
add
divb
jle
mov
push
sub
xchg
push
popa
lock
inc
add
cwtl
pop
mov
lea
mov
jne
sbb
movsl
cmp
incb
stc
adc
lea
test
jb
and
pop
das
jge
stc
rcll
cwtl
push
and
add
dec
mov
dec
add
jg
lock
pop
sub
jb
jno
xchg
add
loopne
repnz
jae
addl
mov
mov
inc
in
jg
clc
lret
add
jbe
jnp
add
loopne
push
mov
js
loope
xor
xor
test
xchg
movsb
and
push
sub
add
int
push
loopne
scas
add
or
sbb
inc
add
xchg
push
mov
mov
xor
das
fsub
aad
push
leave
test
lret
mov
fmull
outsl
sbb
inc
adc
test
pop
data16
cmp
push
inc
popa
mov
push
xor
xchg
mov
sbb
adc
mov
mov
and
btr
popl
cmp
lock
mov
or
inc
push
mov
data16
xor
xchg
mov
repz
dec
pop
xchg
aam
add
inc
dec
push
add
ljmp
loop
jg
jmp
int3
mov
xchg
and
mov
push
add
rclb
pop
add
in
add
lret
add
es
push
mov
xchg
xor
lods
push
xchg
std
aam
dec
js
aas
inc
fsubrl
mov
and
sub
outsl
ret
jb
add
fwait
rcll
movsb
and
jno
push
mov
movsl
lret
loopne
lahf
roll
pop
out
mov
sub
adc
dec
lods
pusha
loopne
jae
ljmp
movb
and
add
cwtl
imul
jg
shll
in
call
mov
lds
je
movsl
and
mov
add
sarb
push
xor
jo
push
push
jmp
add
shlb
in
adc
clc
mov
test
pop
inc
xchg
sub
cmp
mov
fmul
hlt
test
xchg
pop
loope
push
fidivrl
or
jmp
mov
pop
xchg
add
mov
into
scas
leave
outsb
shlb
lods
lcall
dec
xchg
xorb
aam
jg
insl
add
pop
lret
add
pushf
jp
push
mov
push
add
shr
call
jmp
data16
cli
insl
lds
inc
mov
mov
add
fs
push
scas
xchg
jmp
xchg
ret
data16
cmp
push
mov
das
ds
std
sub
mov
lods
int3
add
jg
icebp
scas
sub
stos
pop
sbb
mov
test
repnz
dec
rol
imul
xchg
cmp
fldenv
xor
into
fsubr
push
das
jo
add
test
jp
adc
mov
int3
mov
add
and
add
es
dec
add
leave
xorb
lods
push
push
xchg
xor
cltd
mov
into
jp
push
and
push
add
pop
jno
or
nop
xor
pop
cmp
stos
mov
mov
repz
test
mov
hlt
cmp
inc
sbb
call
rcrb
int
xchg
adc
nop
hlt
ret
into
jb
adc
add
push
andl
insl
iret
stos
fadds
mov
or
scas
add
les
popf
stc
loope
aam
lret
mov
fdivr
add
pop
cld
sbb
and
testb
and
push
or
fnsave
int3
inc
loopne
loope
lret
call
xor
push
loop
and
jecxz
insl
scas
iret
xchg
sbb
enter
mov
cmpsb
jo
out
inc
imul
push
enter
nop
test
jle
add
fwait
mov
leave
adc
mov
mov
cmpsl
push
sbbl
mov
test
xchg
inc
popa
in
inc
push
outsl
push
inc
push
add
xor
pop
mov
dec
int3
add
lret
movsb
jle
adc
or
add
repnz
pushf
pop
cmc
add
clc
fildl
jnp
sub
push
xor
imul
adc
lods
add
inc
lock
sub
add
call
mov
adc
adc
cmp
mov
repz
add
mov
in
mov
stc
insl
repz
and
stos
scas
add
xor
mov
pop
je
mov
movb
push
sub
sbb
arpl
pop
jge
rcll
cwtl
mov
pop
push
mov
add
aam
icebp
add
add
push
mov
pusha
stc
xor
imul
xlat
mov
in
call
popf
inc
mov
pop
mov
lea
add
cmpb
test
incb
sahf
pop
mov
fwait
dec
movb
push
test
push
cltd
scas
cmc
add
sub
lea
jno
and
or
add
push
or
jge
cmp
call
add
std
loop
dec
sti
lods
mov
sbb
add
mov
pop
add
jp
lret
adc
add
call
mov
shr
ret
rorb
push
inc
mov
xrelease
addr16
pop
aam
inc
push
pop
and
add
addl
add
jmp
mov
fwait
mov
push
loope
out
mov
xor
addl
push
add
call
and
add
adc
call
sti
mov
fisttps
ljmp
fdiv
cmpsb
push
add
subl
sub
xor
dec
add
cmp
addr16
addb
je
or
lret
js
xchg
ret
scas
movsl
mov
add
xchg
sbb
call
jmp
dec
jae
in
mov
leave
fs
cmpsb
rorl
sbb
dec
cmc
mov
jle
push
xchg
push
cli
rcll
test
mov
xorl
jae
push
mov
inc
jg
jno
add
cmp
sar
in
sti
add
adc
cwtl
mov
hlt
xchg
push
inc
mov
mov
xchg
fildll
sub
push
adc
add
leave
outsb
add
adc
loope
sti
arpl
ficompl
push
mov
xchg
add
push
movsb
test
cwtl
scas
loopne
mov
jecxz
js
xchg
add
dec
sbb
add
sbb
loopne
xchg
cli
ljmp
movsl
lock
mov
lds
sub
sbb
dec
mov
rcll
mov
sbb
inc
clc
adc
bound
popa
xor
movsl
xchg
jnp
push
pop
call
int3
out
je
push
sbb
shlb
cltd
sbb
xchg
jae
pop
ja
leave
test
sub
mov
orl
sahf
lods
mov
bound
sbb
les
mov
push
dec
test
addr16
inc
rolb
adc
jne
pop
pop
lock
sbb
out
push
lahf
jle
in
add
push
jmp
mov
mov
push
je
pop
out
pop
jae
mov
cmp
imul
ret
mov
xchg
jne
into
movl
mov
or
ret
ret
mov
sub
xor
inc
bound
cmp
pop
jnp
inc
sbb
leave
xor
and
add
jae
jbe
lds
mov
addr16
xor
fcmovne
das
add
out
add
ret
imull
push
pop
lret
pop
jb
mov
repz
fnsave
xchg
adc
jae
mov
mov
sub
lcall
add
sub
and
ret
push
inc
mov
jae
cmp
xchg
cli
cmp
rorb
scas
sbb
cmpsl
add
mov
sub
add
add
cmp
test
xchg
mov
jmp
push
xchg
mov
pop
incl
enter
jo
sub
sbb
push
add
add
sub
mov
inc
mov
cmp
fstps
test
dec
inc
jge
fwait
arpl
cmp
enter
push
shrb
pusha
ret
dec
pop
jnp
fwait
imul
daa
xchg
add
xchg
fstl
dec
xchg
jbe
add
sbb
mov
and
jnp
add
dec
mov
xlat
mov
mov
iret
int3
push
mov
scas
push
mov
cli
es
push
sub
mov
mov
push
pusha
sbb
inc
cmp
add
xchg
add
arpl
mov
mov
scas
negb
xor
mov
mov
out
scas
jae
jns
and
iret
mov
and
sbb
repz
in
add
lret
call
negb
sub
out
mov
add
xchg
xor
jns
mov
test
mov
mov
outsb
push
loopne
jnp
sbb
imul
sub
add
mov
adc
inc
jl
xchg
insl
or
lock
mov
aam
orb
outsb
jne
push
push
mov
shrb
xor
mov
in
sub
orl
es
add
inc
les
jbe
pop
dec
push
and
pop
add
mov
cli
inc
loopne
sahf
sub
inc
cmp
or
dec
fwait
add
mov
lcall
push
imul
adc
es
mov
cmpsl
add
gs
mov
pop
xor
idivb
mov
xor
pop
sub
jb
pop
mov
inc
pushf
pop
cwtl
int3
add
cmp
sub
push
xchg
cmp
test
loopne
clc
mov
add
leave
call
jns
lock
loop
add
mov
and
insb
lcall
data16
in
aas
jae
mov
add
in
jbe
aaa
gs
repnz
sbb
adc
in
imul
into
or
xlat
push
or
sbb
push
mov
or
rcrl
outsl
xor
add
add
xadd
negb
and
add
call
cmp
xorl
cmp
pop
jne
ds
pop
cmp
pusha
sbb
movsl
cmp
stc
popf
mov
into
xchg
mov
mulb
mov
pop
mov
imul
mov
sub
add
les
loopne
mov
push
mov
mov
daa
mov
adc
adc
jecxz
outsb
inc
add
pop
aaa
sti
sahf
jbe
add
jmp
stos
cs
xor
add
mov
fwait
inc
cs
cmp
sbb
push
mov
add
add
jo
iret
mov
lods
fwait
sbb
mov
mov
test
es
dec
in
data16
iret
call
mov
push
out
mov
les
mov
pushf
mov
nop
insb
subb
shl
xor
outsl
jno
mov
inc
add
int3
push
je
jne
scas
add
sub
cmp
or
push
fxch
push
add
mov
scas
add
ss
int3
xchg
in
add
dec
jecxz
outsb
xor
add
push
and
xor
xor
add
movsb
mov
jmp
and
mov
movaps
xor
pop
sbb
popa
push
and
test
mov
std
or
movb
adc
cs
inc
sub
push
test
mov
sets
sbb
add
push
mov
test
call
add
mov
cs
lahf
or
push
adc
mov
fildll
add
inc
xchg
inc
inc
add
mov
push
out
cmpsl
fmul
pushf
lods
test
mov
pop
rorb
popf
shl
push
add
sbb
or
pop
adc
add
add
dec
pop
add
adc
call
sub
sarl
and
xchg
mov
add
add
add
ret
scas
lods
adc
inc
cmp
adc
adc
aad
inc
je
pop
fwait
inc
push
add
rcrb
or
xor
dec
sldt
sbb
sub
cmp
inc
iret
inc
add
xor
xor
js
adc
add
add
add
add
add
add
ja
add
xor
add
add
jo
add
add
add
push
add
add
xor
add
add
add
add
add
add
add
add
add
jne
add
add
add
add
add
data16
add
add
add
add
add
add
add
add
add
add
jns
add
add
arpl
add
add
xor
add
dec
add
add
add
push
add
popa
add
add
add
add
add
imul
add
push
add
add
add
push
add
add
add
js
add
add
push
add
add
dec
add
add
cmp
add
add
add
add
add
add
push
add
add
outsl
add
inc
jne
add
add
add
add
js
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
jbe
add
inc
inc
add
add
jo
add
cmp
add
add
add
insl
add
add
add
add
dec
add
add
push
cmp
add
add
inc
add
add
add
add
arpl
add
add
add
add
add
data16
aaa
add
add
add
add
je
inc
add
add
add
add
add
jae
add
add
add
add
add
add
aaa
add
add
jo
outsl
add
jb
add
add
add
add
add
add
add
add
add
add
add
add
add
push
jbe
add
add
jns
push
dec
add
add
jo
push
xor
add
add
insl
add
jne
add
add
mov
jmp
pop
push
push
add
mov
sub
lods
mov
mov
add
stc
hlt
repnz
jle
and
mov
mov
mov
ss
sub
outsb
push
and
add
js
inc
fadds
xorl
mov
hlt
sub
ljmp
add
out
mov
pop
mov
dec
add
or
dec
add
mov
xor
add
and
fcomp
add
mov
repz
jmp
mov
add
loop
or
cli
fistpll
js
outsb
add
add
das
pusha
jae
push
shlb
push
sbb
push
and
sub
add
xchg
xor
or
gs
cltd
jge
push
dec
hlt
dec
add
dec
dec
cwtl
add
sub
mov
mov
mov
sbb
add
mov
xor
int
xor
xchg
shr
sbb
imul
push
mov
std
mov
jo
sub
cli
add
mov
rclb
jl
js
sbb
ljmp
add
test
mov
add
xor
ss
mov
add
jle
add
xchg
movl
dec
inc
scas
push
mov
xor
es
fucomi
add
dec
xlat
and
pop
mov
test
ja
or
mov
cmpb
mov
pop
lods
dec
sbb
rol
andb
stos
adcl
add
sub
mov
shrl
pop
sbb
mov
testl
adc
daa
cmpsl
cmp
push
mov
fsubrs
outsl
inc
push
add
ret
jo
sub
or
sar
mov
cmp
cmp
je
pop
out
pop
lret
add
sbb
xchg
adc
xor
push
inc
push
lock
and
inc
gs
pushf
mov
adc
fwait
daa
jo
dec
jnp
sub
cmp
sbb
cmp
inc
adc
divl
fmul
add
add
idivl
shll
sbb
leave
push
add
fwait
lret
mov
cmpb
sbb
mov
lahf
movsl
xorl
push
add
fsubrs
or
and
pop
mov
mov
xor
or
add
mov
test
pop
or
dec
add
push
jb
push
or
mov
sbb
loope
in
movsb
mov
mov
testb
mov
and
sub
cmp
dec
and
out
int3
fiaddl
js
adc
inc
rcll
iret
mov
jae
jns
in
mov
cmp
pop
cli
rclb
push
jnp
stc
adc
in
ljmp
mov
mov
inc
jge
ss
inc
lea
add
and
add
mov
leave
add
fidivs
xchg
adc
imul
jmp
ret
lods
jae
adc
sub
add
in
cmp
add
add
lcall
shr
jg
mov
add
sti
lret
fdivrp
xchg
add
int
fistps
inc
xorb
add
rcl
ret
add
or
mov
mov
rolb
fucomip
ret
clc
mov
stos
cli
and
cs
notl
add
lahf
push
xchg
mov
popl
imul
rolb
add
ficompl
out
or
sub
mov
jle
inc
fcompl
inc
mov
lret
xchg
pop
aad
or
ret
pop
sti
mov
xchg
and
push
cmp
xor
xor
mov
add
loope
dec
inc
xchg
ret
mov
das
xor
idivl
pop
add
pop
inc
leave
add
cmc
or
mov
mov
pop
repz
loopne
jmp
movsb
jo
add
lods
rcl
sub
jecxz
sbb
xchg
mov
push
jle
jae
ljmp
jl
ja
lcall
mov
mov
dec
cmp
jae
cs
mov
aaa
add
lea
lahf
into
inc
mov
cmpsb
sub
out
jg
xor
add
iret
loope
fsubrs
sub
add
mov
pop
out
pop
or
shr
shl
add
in
fisttpll
sub
xor
sub
das
jmp
add
pop
dec
xchg
es
sub
add
mov
sbb
add
dec
lret
pusha
mov
mov
test
adc
push
jecxz
xlat
inc
dec
pop
dec
mov
adc
add
cmp
add
or
push
push
and
dec
outsl
int3
or
inc
sub
add
dec
sbb
xchg
gs
add
mov
enter
idivl
scas
lcall
xchg
and
and
add
sub
lret
cmpsb
je
sbb
sbb
cmc
cmpxchg
adc
or
add
rcr
mov
add
fsubl
inc
lea
xor
loope
cmp
mov
movsl
outsl
in
mov
jge
jns
leave
inc
enter
push
add
jae
inc
shrb
mov
add
mov
and
and
add
int
lds
clc
jle
and
jmp
lea
dec
mov
inc
ds
dec
adc
jmp
mov
mov
push
test
add
pop
add
lret
loopne
hlt
and
mov
cmp
dec
push
pop
or
into
out
mov
or
add
movsl
es
sbb
addl
out
icebp
jne
mov
and
and
xor
add
inc
push
mov
mov
dec
or
ljmp
shll
mov
jnp
pushf
clc
popf
mov
add
orl
scas
pop
gs
add
outsb
shlb
mov
cmpsl
adc
or
xor
sbb
adc
xor
mov
sub
push
mov
add
movsb
sub
xor
stos
dec
xor
mov
pusha
xchg
roll
add
adc
adc
mov
test
jecxz
add
xor
push
jmp
inc
jmp
xlat
movsb
pop
rcrl
add
and
inc
repnz
lods
pushf
mov
leave
movl
gs
mov
cs
jg
mov
sub
aas
mov
jae
cs
mov
xchg
mov
inc
setbe
loopne
xor
xlat
lcall
fwait
inc
rcl
and
lods
mov
cmp
xor
add
mov
ret
dec
mov
dec
xor
dec
mov
xchg
add
ds
push
mov
call
fdivrs
adc
ja
dec
push
dec
clc
rcrl
sub
adc
add
dec
mov
outsl
inc
in
adc
bound
sub
ljmp
jo
pop
lock
cld
arpl
dec
or
sbb
aas
push
and
call
mov
in
popf
mov
and
mov
pop
xor
insb
xchg
add
cmp
lret
fwait
mov
cmpsl
push
lahf
cs
push
add
scas
pop
push
shlb
test
mov
enter
mov
add
jne
xor
or
call
jb
mov
add
in
jns
out
add
adc
call
push
mov
and
leave
or
ret
inc
pop
and
mov
xchg
mov
rcl
es
movsb
cs
push
dec
add
jecxz
orl
add
xlat
cmc
sbb
sbb
mov
push
add
pop
lock
dec
xor
shl
call
lods
and
fisubrl
out
xor
inc
mov
in
cmpsl
sahf
sbb
nop
jg
out
loop
xchg
add
lret
addr16
aas
add
in
cmpsb
lahf
add
or
fildl
cmp
ljmp
mov
or
inc
adc
sbb
movsl
jno
push
push
mov
push
sbb
inc
into
mov
sub
xchg
pop
lret
mov
add
dec
mov
mov
cmpsl
xor
inc
inc
leave
out
cmp
lods
jae
dec
std
mov
mov
inc
pop
je
scas
push
fiadds
ret
inc
sub
xlat
pop
fcoms
and
sbb
mov
mov
int
es
sbb
fnstcw
jnp
add
imul
xlat
out
shlb
inc
sub
cli
jo
cwtl
sbb
xor
pop
lods
inc
scas
fucomi
scas
jmp
divb
cmp
int3
cli
jns
lods
mov
mov
xor
imul
mov
outsb
mov
std
pop
xor
dec
xor
mov
scas
aad
aas
xchg
dec
push
sbb
inc
sub
add
pop
clc
pop
ja
push
add
popf
pop
scas
push
loop
inc
xor
pop
mov
insb
sbb
call
mov
and
xor
daa
push
push
add
in
dec
fwait
sub
cmp
cmp
mov
mov
and
scas
ret
cmp
inc
push
int3
sub
xor
sub
ret
add
popf
call
lcall
mov
lock
sbb
cmp
add
mov
push
fsts
add
push
push
mov
adc
or
inc
add
popa
scas
stc
pop
dec
jbe
add
repnz
add
inc
or
cmpsl
inc
and
jmp
sub
add
fsts
adc
mov
inc
sub
pop
add
mov
inc
pop
jbe,pn
pop
imul
mov
in
repnz
and
test
jo
and
lods
sbb
inc
movsb
mov
pusha
xchg
xchg
xor
lods
add
mov
push
ds
and
aas
jmp
push
add
jns
add
push
addr16
push
sub
mov
pop
mov
outsb
push
pop
mov
sbb
inc
mov
or
pushf
std
fs
inc
int
lea
xor
movsl
test
add
sub
push
dec
ds
aam
push
imul
or
adc
mov
icebp
jo
push
loop
sbbl
lret
inc
cli
cmc
inc
xor
cs
jae
xchg
xchg
push
stc
add
mov
cli
pop
jne
ret
mov
lods
out
or
mov
arpl
sub
add
push
mov
add
dec
ljmp
add
or
add
push
mov
mov
mov
rorl
lcall
loope
scas
mov
aad
call
les
sub
repz
jmp
inc
pop
aas
or
adc
add
pop
in
imul
lahf
push
repz
std
test
lds
repz
sbb
add
push
dec
movups
mov
adc
jnp
dec
sub
and
mov
mov
push
dec
iret
in
xor
lret
out
pushf
add
sbb
add
push
popa
das
add
outsl
add
sub
mov
aad
mov
push
push
adc
pop
sbb
imul
fcomps
add
movsb
ret
mov
cmpsl
push
push
add
lock
mov
xchg
xchg
and
bound
mov
mov
and
lret
iret
sahf
mov
inc
repnz
add
dec
das
lock
into
add
lret
and
rcll
call
scas
pop
dec
cmp
jge
mov
pop
imul
mov
push
in
repz
lret
fsubs
adc
mov
out
add
adc
cltd
sbb
mov
lahf
pop
inc
outsb
add
ret
scas
dec
add
mov
push
sti
stos
ds
push
mov
mov
sub
adc
lea
dec
pop
add
es
jnp
mov
sbb
add
mov
cmp
sbb
outsl
add
fcompl
mov
add
dec
les
push
fld1
ds
enter
adc
dec
gs
inc
cld
fwait
xor
add
add
je
add
dec
cmc
pushf
add
mov
cmp
xchg
xor
arpl
pop
xchg
mov
rcll
lods
xchg
mov
mov
add
push
sub
in
mov
dec
add
and
scas
cmp
add
mov
int3
mov
adc
xchg
data16
add
jne
inc
xchg
xor
xor
pop
imul
add
scas
ljmp
push
cli
out
sbb
cmp
add
and
jo
xor
sub
mov
pop
or
sbb
sbb
or
mov
add
xchg
dec
loope
sub
add
fistpl
je
dec
fwait
push
lret
add
or
adc
dec
push
push
mov
jae
add
ror
repz
outsl
mov
loopne
ret
or
sbb
jnp
mov
test
mov
jge
aad
inc
and
mov
cmpsb
sbb
scas
pop
xor
pop
testb
pop
dec
mov
repz
inc
jns
add
cs
jae
insl
test
dec
ljmp
fs
adcb
add
jge
add
fidivs
mov
jne
add
call
testb
nop
or
jae
jg
sbb
adc
out
fwait
add
ret
jmp
mov
push
aaa
pop
fnstenv
jae
inc
push
push
inc
int
add
popf
push
lods
js
int
dec
mov
xor
dec
lcall
orl
call
pop
ffreep
pop
lahf
mov
xor
adc
shll
andb
pop
pop
jbe
xchg
call
push
dec
dec
inc
xor
iret
push
mov
push
cli
and
andl
adc
pop
xchg
cmp
jl
push
jge
scas
adc
mov
add
push
mov
sbb
int
dec
div
repnz
cmp
popf
aaa
push
bound
dec
rcrb
and
jecxz
jnp
int
jne
mov
and
mov
mov
jmp
and
mov
mov
mov
add
ds
rcrl
xorl
push
add
jge
mov
add
push
cltd
inc
dec
sbb
xlat
add
roll
fadds
jp,pt
mov
cld
inc
loope
or
shll
inc
test
sub
push
jg
lds
popa
inc
mov
mov
into
and
cmp
pop
push
sbb
sub
cmp
cmp
xor
fldpi
sbb
mov
cmpsb
je
add
ja
or
mov
sti
mov
sub
pop
lds
fwait
jne
stos
mov
push
call
sbb
mov
add
xor
push
add
cld
push
je
cmc
lock
fmull
jge
test
arpl
ret
fucomip
mov
dec
cmp
js
or
aaa
mov
jl
sub
mov
rcrl
inc
outsl
arpl
sbb
inc
add
mov
iret
lret
xor
xchg
xchg
pop
jg
add
adc
aas
xchg
mov
imul
cs
test
pushf
test
jmp
add
das
int3
movl
sbb
test
jne
add
loop
aam
popa
add
sahf
push
mov
jo
jp
sub
and
adc
popa
jg
lret
mov
ds
iret
cmp
daa
scas
jae
subl
push
xor
sub
ret
mov
add
add
cs
cmp
daa
jecxz
outsb
mov
rcrb
dec
or
push
mov
out
add
pushf
and
pop
push
pop
inc
inc
xchg
lds
scas
mov
scas
repz
popa
push
ja
add
or
jb
or
or
xor
mov
addb
mov
push
mov
xorl
subb
aad
bound
popf
sub
fadds
sbb
xor
das
je
dec
or
push
add
call
jge
add
add
adc
xlat
lods
mov
push
aas
or
arpl
xchg
inc
push
test
inc
xor
dec
ljmp
daa
aad
sbb
mov
sti
pop
popf
xchg
sahf
add
xor
cmp
mov
les
cmc
xchg
ss
or
add
or
adc
add
inc
in
lods
stos
inc
in
xchg
adc
push
sbb
mov
out
mov
shl
jo
imul
repnz
pop
lods
jmp
jge
cmp
and
outsb
add
lret
and
mov
mov
bound
push
push
icebp
into
divl
xor
sub
sbb
adc
add
sbb
mov
sbb
add
push
mov
mov
add
lea
inc
nop
mov
xor
int3
xor
xor
sub
push
xor
pushf
stos
inc
fadds
cmp
add
jnp
pop
jo
or
icebp
sbb
enter
jns
dec
push
push
push
xor
ljmp
sub
adc
adc
dec
lods
add
lods
popa
xchg
fisubrs
add
jno
cltd
or
xor
add
pop
mov
mov
jecxz
and
pop
pusha
add
movsl
out
popf
into
dec
push
fisttpll
add
jmp
mov
repnz
or
mov
fldl
inc
cmp
sub
add
arpl
int
xchg
sub
sbb
xchg
fs
dec
add
mov
xor
lods
sbb
mov
adc
cli
mov
jecxz
lret
mov
roll
popl
repz
mov
inc
add
in
mov
sbb
cmp
push
nopl
mov
jo
data16
add
das
sub
lds
insb
mov
aaa
fisttps
inc
push
add
rcr
xchg
fdivrs
mov
cli
mov
sarb
lea
sub
push
fwait
adc
lahf
add
xchg
int
add
leave
cmp
clc
cmp
mov
pushf
pop
add
push
dec
cs
xchg
inc
fwait
loope
and
mov
dec
add
push
mov
push
std
lds
popa
adc
cmp
jmp
movsb
add
cltd
lods
leave
xor
cmpb
xor
lea
mov
sub
push
pop
and
mov
adc
add
and
adc
mov
es
mov
xchg
dec
cld
push
call
add
jge
jno
add
mov
jg
jmp
mov
mov
adc
or
mov
call
sbb
push
mov
and
push
xor
add
jne
sbb
inc
jmp
vmwrite
jmp
outsb
lock
out
das
jno
bswap
and
sub
add
sbb
mov
cmpb
aaa
add
repz
out
movups
and
and
cmp
adc
sbb
cli
sub
add
jb
cmpsl
out
movsl
and
addb
popf
push
cmp
add
and
push
dec
pop
dec
divb
dec
xchg
jg
lea
sub
sahf
sbb
and
xchg
mov
cmpsb
decl
mov
or
xchg
dec
pop
andb
push
fdivrs
in
lods
add
fdivl
fisubs
xchg
mov
clc
add
push
mov
mov
popa
sti
fstps
movsl
sub
sub
inc
cmc
rorl
adc
add
add
lock
dec
fistpl
lods
cmc
sub
out
sbb
mov
push
je
dec
popf
cmc
mov
mov
or
mov
shl
cli
lods
and
es
pop
aad
and
add
cs
lock
push
add
push
out
sarl
xchg
sub
and
iret
push
add
loopne
sub
add
mov
adc
dec
xchg
pop
lds
push
mov
jae
adc
mov
stos
dec
cs
xor
inc
pop
test
pop
lods
add
adc
sbb
movsl
dec
add
or
mov
fwait
adc
add
and
mov
add
adc
cmc
and
lods
and
lea
sti
push
scas
sbb
inc
dec
lcall
std
inc
psubsb
pop
pop
add
add
or
rolb
inc
fstpt
aam
push
add
mov
mov
testl
mov
push
cld
dec
stc
fcoms
aam
test
shl
shrb
imul
and
bound
ljmp
lods
cltd
outsb
sahf
add
imul
das
mov
pop
lea
xchg
ja
jae
gs
add
mov
jbe
mov
insl
test
or
xor
loopne
mov
sbb
push
mov
and
loopne
aas
xor
ljmp
mov
imull
scas
pop
pop
lods
dec
add
jmp
scas
xchg
dec
xor
outsb
add
sub
lods
xchg
inc
stos
data16
inc
adcb
aas
add
and
add
pop
inc
xor
fmuls
mov
mov
das
mov
lea
sbb
sbb
push
sbb
push
das
mov
mov
dec
sar
movl
push
sub
add
sbbb
es
add
jmp
leave
lods
mov
push
ds
mov
ror
add
repz
lods
hlt
pop
ret
jae
aad
sbb
sbb
xor
les
add
sub
add
stos
inc
add
ja
or
and
pop
cmp
adc
jae
sub
mov
cli
xchg
ret
inc
add
push
mov
dec
mov
test
inc
mov
adc
mov
xchg
dec
pop
ret
add
rcl
cmpb
or
sub
sbb
or
push
inc
mov
mov
adc
push
inc
xchg
rorl
push
pop
or
rcll
lret
popa
int3
sbb
test
dec
lods
into
push
dec
sbb
pop
dec
pop
lds
xchg
adc
lods
inc
neg
sbb
mov
xchg
push
js
mov
lcall
dec
jle
aaa
add
cmp
xor
es
sub
pusha
imul
aaa
lret
leave
popl
jle
push
aad
das
inc
ja
das
mov
sub
xchg
jge
andb
or
sbb
inc
popf
add
pop
sbb
addl
sbb
sarb
dec
cli
or
lods
sbb
push
mov
xor
sub
inc
add
sub
lret
mov
mov
repz
movsl
cltd
dec
dec
mov
add
push
dec
add
and
fwait
mov
adc
pop
jbe
lods
sbbb
js
xchg
rorl
pusha
xchg
cmp
das
add
add
sahf
bnd
cmpsb
cltd
add
push
call
lock
or
push
lahf
sub
call
dec
adc
mov
out
add
cmpsb
and
dec
stos
xchg
sbb
enter
lahf
dec
mov
xchg
xor
rclb
repz
or
jnp
add
push
imul
inc
mov
jecxz
inc
mov
add
dec
or
mov
enter
inc
call
lock
sti
inc
lcall
jne
add
and
xchg
inc
push
sbb
add
xchg
xor
add
outsl
sub
cmp
mov
jecxz
inc
repnz
cmpsb
jg
or
xor
xor
mov
cmpsl
or
push
clc
add
sub
imul
mov
mov
filds
mov
sub
jns
mov
sbb
cmp
inc
xor
add
cmp
jno
mov
inc
adc
icebp
push
mov
and
xchg
lods
repz
test
mov
and
repnz
lea
adcb
add
add
dec
inc
pop
aaa
add
push
add
add
cmp
add
add
add
js
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
jbe
add
add
add
add
add
add
add
push
add
dec
inc
add
add
add
add
add
dec
add
add
add
cmp
inc
add
dec
add
add
push
inc
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
popa
add
push
add
add
add
add
add
inc
add
add
add
add
add
jo
add
add
add
dec
add
push
add
add
jb
add
add
add
add
je
add
add
add
add
outsb
inc
inc
xor
dec
add
add
add
add
add
outsl
add
imul
add
add
add
xor
add
add
add
add
imul
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
imul
add
add
add
jne
add
jae
jno
add
outsl
imul
outsl
xor
add
xor
jne
add
dec
add
add
add
add
add
add
push
xor
add
add
jae
cmp
xor
push
add
add
add
add
inc
add
jne
add
add
add
add
add
add
jno
add
add
add
add
add
add
add
add
add
add
add
sub
cmp
test
xchg
es
inc
mov
sbb
or
imul
shll
xor
xchg
inc
xchg
xchg
sub
clc
push
inc
mov
inc
push
dec
in
lock
push
sbb
pop
xor
cmp
lcall
mov
add
or
dec
or
pop
out
push
daa
mov
sbbl
inc
sbb
shrb
push
mov
flds
mov
jg
cmp
xor
pop
mov
adc
andb
push
adc
xchg
and
inc
push
loopne
or
shll
fs
scas
and
lret
out
cmpsl
xchg
add
and
xor
loopne
addl
xor
jle
mov
or
jg
jno
div
call
add
stc
dec
bound
fwait
and
jmp
fcomps
cmpl
testl
in
lret
shr
jle
movsb
iret
push
repz
enter
mov
dec
sbb
sub
sbb
mov
shr
cmpsl
orb
mov
xor
clc
in
add
fists
cwtl
jnp
pop
adc
sbb
loopne
cmc
inc
adc
hlt
lea
clc
addr16
and
inc
test
btrl
test
leave
add
pop
into
aad
xchg
xor
aad
gs
hlt
mov
xorl
sbbl
sbb
in
jbe
or
xchg
stc
xchg
orps
lret
clc
addl
xor
addr16
adc
mov
cld
and
adcl
rcrl
je
sub
popa
fsubs
mov
jmp
xchg
mov
push
cmp
scas
and
xor
sub
ja
js
gs
xchg
inc
sub
and
daa
xor
sti
cmp
clc
xlat
adc
loope
nop
out
push
movsb
jge
sbb
xlat
xchg
pop
scas
xchg
adc
in
movsl
nop
push
pop
and
inc
and
loopne
or
call
fisubrl
divb
adc
push
mov
jle
fsubrs
mov
xchg
xlat
mov
sub
lock
enter
adc
ja
cltd
cmp
inc
loope
xchg
mov
insb
sub
inc
fdivr
pop
movsb
push
sub
clc
jne
call
sbb
dec
xlat
ljmp
adc
push
pop
xchg
push
and
mov
push
call
movsb
jo
push
ja
mov
xlat
sbb
sub
out
out
lods
clc
jg
sub
fsubrl
and
cmp
push
mov
inc
jmp
and
mov
out
aad
sub
sbb
xchg
push
mov
call
fildl
dec
int3
mov
icebp
sbb
in
sbb
push
sub
add
xor
js
lds
pop
data16
fiadds
and
pop
xor
jl
lds
push
inc
xchg
leave
dec
test
mov
adc
mov
cwtl
pop
inc
adc
or
mov
mov
xor
call
xor
rclb
js
jp
inc
fisubs
jb
push
push
aaa
lret
dec
or
leave
jle
shll
push
add
ja
xchg
sarb
daa
lcall
mov
movl
sbb
sub
mov
sub
es
int
push
sbb
mov
add
loopne
pop
or
or
shl
mov
call
push
insl
cld
shlb
mov
xchg
cmp
jae
adc
push
test
insb
xchg
lods
push
inc
sub
mov
push
jge
mov
or
cmpl
inc
sbb
ret
fists
inc
xchg
xchg
xor
mov
divb
xchg
pusha
push
xchg
mov
push
jg
cmp
in
adc
push
fadd
pusha
xchg
xchg
cmpsl
das
push
loope
cmp
dec
hlt
cs
cli
fisubl
js
lea
cmpsl
cmp
sub
dec
jo
bound
fcoms
int3
movsb
andl
lea
push
mov
shrb
xor
mov
in
pushl
outsb
mov
test
int3
sub
js
pop
sbb
gs
mov
jbe
mov
pop
and
cli
xor
xchg
jl
add
xor
bnd
movb
mov
aam
cmp
jp
cwtl
test
mov
movsb
sub
push
cmpsl
call
fsubrs
xchg
movsl
test
or
mov
fsub
push
mov
int
xor
xchg
mov
push
sti
push
cld
dec
imul
ffree
or
xchg
fsubr
adc
call
sub
push
sub
cld
adc
mov
movsb
call
popa
pop
icebp
cltd
nop
mov
sub
push
call
push
jmp
enter
cld
sub
pfrsqrt
adc
test
clc
xor
jae
sub
xor
push
test
push
test
icebp
xor
xor
dec
xor
mov
or
jecxz
inc
cmc
pop
std
mov
cmp
jp
pop
dec
jne
sbb
push
mov
jne
sub
popa
mov
ret
lods
jp
or
and
or
dec
fwait
lea
inc
lahf
repnz
jp
outsl
mov
ljmp
jge
inc
in
sbb
or
mov
lahf
cmp
dec
iret
lods
push
push
movsl
fidivl
add
push
push
jne
and
cmpsb
jecxz
and
mov
inc
sahf
or
and
roll
sub
aaa
adc
cmp
popa
sbb
xor
add
dec
and
test
std
jns
or
pusha
push
pop
jecxz
jle
cmp
xchg
xchg
jae
sbb
out
sub
jae
inc
adc
sbb
inc
les
cmp
xor
orl
cmp
sbb
lret
call
lea
lret
or
divb
pop
cmp
or
sbb
and
add
add
cmp
push
add
lahf
mov
pushf
fdivs
ds
repz
ss
inc
pop
fs
jmp
jo
nop
lret
mov
sub
add
imul
sbb
rclb
out
pushf
repnz
inc
mov
aas
pop
into
ja
mov
jge
pop
mov
sahf
mov
rorb
jg
movb
xchg
dec
in
add
bswap
jp
cltd
out
jl
inc
mov
inc
sbb
mov
movsb
xchg
and
adc
or
xchg
frstor
lea
rorb
lock
ja
out
mov
cmp
sbb
shll
add
jg
iret
sahf
mov
xor
jg
outsb
mov
xchg
xor
ja
xor
sarl
pop
lahf
fs
or
adc
stc
lahf
sub
aaa
xlat
and
cltd
adc
jl
mov
sbb
sub
mov
mov
gs
xor
es
int3
in
sbb
daa
push
sar
fdivrp
pop
sub
add
mov
dec
adc
in
push
fnstcw
add
mov
loop
mov
push
loop
mov
jnp
mov
xchg
jle
mov
cmp
mov
stos
xchg
stc
push
and
loop
and
push
sarb
repnz
jle
mov
frstor
mov
paddw
xor
mov
fcmovbe
subl
movsb
and
xor
stos
aam
or
enter
ja
ret
mov
or
xchg
sbb
mov
les
nop
push
dec
sahf
out
mov
in
insl
stos
mov
jecxz
add
gs
sarb
mov
idivl
hlt
int3
adc
inc
push
fsubrs
dec
sub
mov
inc
lea
dec
mov
repz
sti
sbb
xor
in
jae
jne
mov
inc
or
iret
mov
jl
popl
pop
imul
popf
cmovs
lret
sub
or
xlat
sar
xor
les
add
test
nop
xlat
insb
idivl
add
xor
imull
jl
sub
or
push
adc
and
sar
and
out
test
or
imul
add
rcrb
dec
xchg
push
cmpsb
dec
call
add
stc
ja
push
repz
js
sbbl
sbb
and
shrl
push
mov
add
lock
push
call
fwait
int3
push
push
inc
fcompp
mov
cmpsb
jns
loop
iret
mov
xor
inc
popa
enter
adc
xchg
adc
sbb
dec
push
jns
push
mov
pop
jns
leave
sbb
jns
shr
rcl
loope
xorb
jno
aad
clc
hlt
xchg
cmpsl
movsb
or
mov
dec
push
call
int3
das
xchg
push
add
add
sbbl
xchg
mov
int3
cmp
lahf
jne
mov
insb
jmp
aad
cmpl
lahf
and
loope
dec
lea
and
leave
addr16
pop
jle
mov
cmp
ja
xchg
subl
ret
into
inc
push
sbb
jl
cmp
int
cli
inc
cmp
and
add
and
test
and
mull
add
pop
shlb
hlt
mov
push
push
leave
and
inc
and
sbb
aam
push
and
clc
add
out
xchg
mov
fwait
xor
pop
mov
pminub
mov
xchg
push
jae
add
cmp
mov
xchg
and
jecxz
pop
push
loopne
xor
mov
call
repnz
add
cmp
sub
sub
sbb
cmp
aaa
push
inc
sbb
xor
dec
add
push
lods
push
adc
int3
andb
ret
andl
adc
jmp
sub
and
ret
push
push
jg
jo
xor
dec
sbb
pop
les
xor
xchg
sbb
out
and
jno
call
std
clc
sti
cs
cmp
or
into
pop
xor
enter
pop
xor
ljmp
and
inc
xor
mov
inc
daa
mov
je
adc
xchg
mov
push
jno
push
outsb
push
repz
iret
sub
pusha
fs
adc
and
lods
add
jp
push
mov
outsl
and
cmp
gs
pushf
xchg
bound
hlt
aas
cld
mov
jo
push
inc
cltd
call
mov
push
mov
inc
mov
shr
popf
cli
dec
mov
xor
cmpsl
cld
cmp
sub
mov
call
dec
xor
inc
pop
mov
mov
aaa
xchg
and
or
imul
push
jmp
xor
ljmp
add
sub
add
xor
inc
loopne
xchg
loop
enter
xchg
pop
mull
iret
or
push
mov
xor
pop
inc
sbbl
pop
cmp
in
cmp
cmp
xchg
sbb
and
int3
shl
aad
push
in
enter
outsl
or
lock
cmp
call
movsl
and
inc
test
cli
pop
jnp
pop
or
pop
lds
sub
dec
jns
out
and
sub
mov
sub
ja
add
and
pop
mov
mov
mov
cmpl
inc
xchg
jmp
pusha
adc
orb
cld
mov
outsl
inc
aaa
stc
inc
shlb
cmc
mov
sbb
fimull
cmpsl
movl
ret
mov
push
mov
imul
lcall
mov
arpl
adc
dec
in
jo
xchg
cmp
cmp
lcall
push
shll
rol
movsl
mov
and
divl
sbb
or
cmpsl
scas
add
adc
jbe
or
push
enter
sub
outsb
outsb
sbb
xor
clc
mov
mov
outsl
mov
rol
xchg
in
outsl
es
inc
in
mov
mov
inc
cmp
push
dec
ret
mov
pop
and
cmp
cmp
mov
sub
add
jne
sub
in
cmp
inc
das
clc
dec
les
sti
inc
cmc
add
cmc
add
lcall
cld
xchg
or
in
in
jae
adc
sbbl
mov
push
and
cmp
roll
and
mov
add
xchg
mov
add
data16
jl
call
mov
sbb
into
cmp
or
xor
out
cwtl
les
in
mov
inc
cmpl
pusha
fcomps
cmp
mov
testl
xchg
mov
mov
insb
inc
fistps
mov
dec
sbb
jg
sub
xchg
mov
jno
rclb
cmp
jl
out
cmpsl
icebp
mov
sbb
xchg
es
cli
call
xor
adc
call
shlb
and
cmpsb
cmp
fwait
jbe
and
and
lods
cmp
into
popa
fwait
mov
dec
xchg
call
lock
mov
cmp
inc
fmul
mov
test
jg
sub
inc
xchg
sahf
imul
fisttps
or
xchg
pop
pop
sub
mov
cs
rcrb
cmp
dec
fidivs
lods
inc
jmp
xchg
xor
xchg
xchg
mov
jne,pn
es
mov
inc
adc
mov
sti
dec
inc
stos
mov
js
xchg
lds
mov
imul
mov
pop
fldl
jg
xchg
clc
push
inc
adc
sub
shrl
int3
xchg
sbb
mov
dec
xchg
sbb
lcall
jg
mov
je
cmp
push
test
bound
mov
ret
icebp
jbe
inc
sbbb
xor
mov
adc
pusha
mov
aaa
add
sbb
cmp
mov
pop
add
adc
jle
imul
push
rolb
sbb
in
mov
jnp
add
data16
mov
subl
jg
rclb
mov
sbb
adc
cmpsl
call
in
daa
cs
pushf
xchg
sbb
stc
ja
xchg
imulb
jbe
sahf
repz
fwait
rclb
icebp
jne
pop
call
mov
iret
aaa
inc
sbb
push
call
mov
xlat
or
repnz
leave
mov
andl
or
cmp
mov
jmp
jecxz
cmp
push
fwait
push
jno
pushf
and
xchg
call
sub
fwait
std
mulb
mov
sub
test
jne
mov
jg
sbb
mov
imul
imul
mov
or
mov
jecxz
push
and
leave
mov
je
jbe
mov
pop
and
dec
xchg
ja
or
mov
pushf
andb
in
cmpsl
xchg
lods
js
insl
jae
mov
test
xchg
push
push
sub
mov
sub
loopne
xchg
xor
rol
dec
mov
inc
adc
inc
jbe,pn
mov
sbb
mov
dec
mov
rcrl
push
adc
inc
enter
mov
mov
or
stc
or
xchg
mov
lea
call
mov
push
std
inc
and
repz
jns
loopne
sub
add
idiv
jo
insl
xchg
inc
mov
pop
xchg
and
mov
add
shll
mov
and
es
and
dec
sub
insb
in
rcll
outsl
loop
insb
jnp,pt
mov
or
mov
mov
sub
or
push
xchg
leave
add
or
cmpl
movsl
mov
mov
cwtl
and
sbb
in
inc
inc
clc
mov
xlat
popf
sbb
dec
adc
std
data16
cmp
mov
sarl
xor
dec
cs
jge
ljmp
push
in
addl
mov
mov
cmp
cmp
ret
shr
or
cmp
dec
clc
pop
sub
push
les
pop
push
inc
adc
sbb
mov
lret
dec
mov
out
lahf
push
or
call
shr
inc
mov
xor
cmp
ret
dec
cwtl
cmp
sub
mov
mov
cmpsl
int
gs
push
add
add
xor
mov
lahf
and
push
add
cmp
and
popa
pop
cmp
frstor
mov
push
daa
mov
sbb
xchg
push
mov
adc
mov
aaa
jmp
or
int3
sub
push
mov
xchg
add
imull
adcl
inc
push
mov
fcompl
movsl
sbb
dec
or
cmp
clc
les
in
ret
push
mov
pop
int3
aad
fcoms
outsl
in
jp
fs
jmp
data16
pop
pop
xchg
nop
leave
in
inc
cld
push
pop
lea
or
in
mov
or
testb
orl
in
jl
jge
push
push
call
stc
iret
sub
jns
lods
mov
push
fucomip
jp
inc
mov
pop
mov
call
leave
pop
dec
jnp
push
or
cld
sbb
sahf
mov
mov
xchg
dec
jnp
pop
das
stos
pop
jecxz
push
xor
insl
and
lahf
repz
notl
add
add
add
in
adc
lahf
add
sbb
pop
add
xor
sarb
clc
popf
lahf
add
loop
out
mov
or
push
pop
sub
into
mov
dec
lock
jbe
shll
jno
mov
push
jmp
lahf
mov
add
ret
pop
in
adc
scas
faddl
pop
jae
xchg
mov
mov
sbb
je
and
imul
repz
mov
mov
pop
mov
cmpsb
arpl
and
mov
jae
jb
jmp
test
cmp
inc
xchg
fistpl
pop
stos
dec
fidivl
sub
mov
lds
jecxz
aaa
mov
mov
mov
shrl
pop
sub
inc
add
or
sahf
adc
into
add
in
out
adc
cmpsl
or
jns
or
mov
inc
adc
fadds
dec
sbb
lret
fs
subl
push
inc
stos
adc
imul
mov
popa
test
mov
ljmp
pop
aad
push
lds
cmp
bound
pop
inc
sahf
xor
sbb
cmpl
stos
fwait
stos
jge
std
pushf
add
lea
test
mov
jno
cmpsl
xchg
shr
test
xor
sub
stos
pop
and
jae
push
and
push
and
stos
cmp
stos
sar
push
lcall
ss
stos
xchg
adc
pop
push
sub
cltd
dec
pop
mov
xchg
xchg
or
sub
fnclex
rolb
sti
dec
cmp
jg
movnti
add
pushf
cmp
mov
sahf
scas
push
stos
jns
sti
popa
divb
inc
mov
bound
mov
ds
push
fnstenv
xorb
sub
jo
cmp
mov
ret
jge
push
sub
sti
xchg
aam
fwait
cltd
sub
pop
sbb
sbbb
cmc
xchg
lret
lea
cmp
flds
mov
dec
je
shrl
mov
ror
stc
add
add
movb
sbb
imul
add
test
xchg
sbb
mov
push
dec
and
add
or
fcoms
cmp
sar
cmp
in
faddl
xchg
adcb
adc
es
dec
cmp
arpl
fistpll
std
pusha
xor
dec
out
sub
sahf
clc
and
hlt
jnp
xor
ret
in
xchg
imul
push
add
sub
jmp
fstp
jecxz
xlat
jb
jnp
and
loope
sti
add
mov
je
xor
mov
push
enter
inc
jecxz
inc
ss
mov
int
subb
jo
sbb
sub
mov
nop
inc
sti
cmp
mov
and
sarl
inc
adc
nop
rclb
lods
dec
pop
mov
mov
mov
aas
fidivl
inc
movsb
mull
fsubl
inc
aaa
jae
pop
jp
xorb
cmp
or
movsb
jae
cmc
stos
popa
mov
pop
mov
aas
xlat
out
aaa
sbb
lret
test
filds
mov
push
cmp
lea
cmp
loopne
repz
or
lret
andl
inc
xor
adc
out
and
popf
mov
les
lahf
stc
pop
lods
jb
add
mov
sub
outsb
repz
divl
inc
shll
sbb
pop
pop
add
push
nop
mov
shll
jae
stos
jbe
cltd
loope
sahf
xor
xchg
aaa
mov
xchg
xlat
pop
mov
push
arpl
xor
ljmp
fistl
mov
sub
lret
fwait
mov
mov
test
jae
add
add
push
push
test
sbb
sub
push
sbb
out
mov
data16
and
cld
je
repz
aaa
sbb
cmp
sbb
push
cli
and
mov
sti
sbb
lret
push
mov
mov
jmp
mov
pop
mov
fisttps
dec
xchg
push
bound
cmp
dec
mov
lea
pop
mov
adc
adc
jb
dec
xlat
sbb
aas
es
sti
iret
subl
mov
stos
shrl
inc
and
dec
ffree
into
dec
adc
jle
mov
jne
mov
mov
mov
and
xchg
cmpsl
mov
sarl
mov
cwtl
test
insl
push
lcall
js
mov
push
enter
mov
rcll
inc
data16
push
loope
push
sbb
ret
dec
xor
divb
repnz
lds
bswap
xor
mov
mov
daa
jns
adc
jae
jno
sahf
pop
jmp
ds
xchg
add
adc
inc
mull
sub
add
pop
cmp
ficompl
cmpl
xchg
stos
pop
stos
mov
out
fidivl
mov
pop
sub
add
adc
out
shrb
xor
in
sub
insb
pop
mov
jg
mov
adc
pop
fnstsw
ljmp
mov
repnz
rcll
loop
add
adcl
xchg
rcl
mov
lea
add
dec
dec
in
add
xchg
mov
sti
inc
out
scas
inc
dec
sahf
mov
add
movsl
push
ror
adcl
and
cli
in
sbb
cmpsb
adc
loop
xor
stos
adc
push
sub
lret
inc
xchg
sub
xchg
sti
mov
dec
add
push
xor
sahf
sub
shll
adc
xor
adc
fucom
lahf
xchg
les
mov
add
imul
jb
inc
sub
cmp
xor
mov
mov
ret
xor
dec
mov
mov
mov
repz
fldl
andb
enter
sub
cltd
and
and
and
repz
push
ja
aas
cli
inc
insl
pop
add
arpl
rolb
add
add
rcrl
pop
out
push
out
iret
adc
mov
mov
fcoml
and
leave
hlt
push
std
xor
push
call
jecxz
add
jmp
loop
imul
add
mov
or
xor
imul
cmp
jb
push
pop
idiv
xchg
sbb
add
dec
test
repnz
addb
mov
mov
add
jnp
repz
std
push
xchg
dec
push
add
test
hlt
fadds
in
jbe
push
push
add
aas
inc
out
mov
cs
dec
out
dec
and
jne
pop
xor
mov
ret
aas
xor
arpl
sub
lret
or
daa
mov
or
es
xchg
jbe
push
aaa
add
inc
mov
xor
add
popf
add
push
mov
es
sub
cmp
add
push
sahf
dec
in
lret
std
cmpsl
cltd
popa
fsts
mov
and
dec
lret
test
push
rcrb
cmc
dec
add
sub
loope
in
mov
sbb
cmp
jmp
pop
imul
verr
mov
cltd
icebp
sbb
push
cli
in
jne
or
add
movsb
shl
mov
fs
adc
push
xchg
dec
fmull
mov
shrd
outsb
gs
inc
and
sub
icebp
xchg
add
dec
mov
rclb
scas
and
mov
jbe
dec
lods
xlat
add
or
add
imul
sbbl
add
push
ja
fpatan
loop
mov
testl
rcrl
sub
inc
jae
add
add
pop
test
add
adc
sbb
mov
bnd
dec
std
cmpsb
add
arpl
pop
sarl
add
lret
and
xchg
cltd
xor
shr
lock
pop
rorb
imul
js
repz
lock
std
mov
dec
pop
adc
adc
pop
fdivs
inc
add
jmp
ficoms
jmp
xchg
ja
mov
fwait
push
hlt
pop
arpl
jg
or
inc
das
loop
mov
jno
push
mov
iret
inc
mov
shll
testl
pop
out
add
mov
push
mov
pop
sbb
dec
call
cmp
pop
leave
lds
adc
ret
and
test
mov
cld
pop
lock
xchg
scas
fldt
roll
lahf
inc
mov
inc
cmp
cs
add
cld
push
adc
pop
addl
cmp
fwait
lea
pop
mov
push
in
jo
cwtl
adc
jmp
add
stos
xor
mov
data16
mov
or
arpl
cs
dec
mov
adc
add
dec
cmp
add
inc
mov
pop
mov
xchg
insl
inc
mov
mov
add
mov
pop
mov
mov
out
mov
or
shll
sbbb
mov
ret
jl
jo
sub
mov
bound
lods
ret
or
testl
dec
dec
add
je
out
adc
inc
mov
cli
out
in
sbb
ds
adc
inc
mov
push
xor
pop
outsl
push
ret
outsb
mov
jnp
and
mov
xor
and
shrb
jb
push
add
inc
cld
mov
fdiv
daa
js
inc
inc
test
sub
jae
push
xor
dec
mov
into
mov
push
sti
push
sub
fcompl
imull
or
cmp
loope
and
in
std
add
mov
mov
xchg
xlat
mov
fbstp
vpunpckhwd
dec
lods
aaa
mov
in
add
mov
repz
add
add
out
add
rcl
into
cltd
dec
add
mov
inc
sub
je
cmc
add
xchg
dec
imul
rcrb
bnd
pop
addr16
add
sub
add
lods
jl
mov
rorb
std
mov
ret
push
pop
loop
shlb
mov
and
rorb
jns
dec
sbb
vmread
and
cmp
sub
cltd
les
int3
xor
xchg
shll
jp
fiaddl
mov
int
enter
add
dec
dec
and
rorl
jne
xor
bound
lret
std
ret
push
addb
daa
mov
pop
divl
bound
dec
push
call
popa
outsb
aad
jmp
addr16
jae
rcl
mov
push
mov
enter
or
sbb
add
dec
xor
sti
dec
out
les
call
fisubrs
sub
dec
inc
mov
add
cwtl
mov
add
jo
std
jg
mov
dec
movsb
mov
cmp
dec
jo
sub
add
cwtl
aas
jae
fstps
and
insl
inc
or
sbb
dec
mov
sbb
cmp
call
pop
aad
jb
mov
mov
push
sub
dec
leave
out
mov
stos
sbb
loopne
mov
add
pusha
jp
push
pop
push
add
xchg
push
cmp
outsl
mov
arpl
mov
add
shr
mov
inc
mov
jns
stc
or
dec
call
xor
mov
sbb
or
push
fiaddl
mov
mov
xor
xor
and
sbb
push
iret
push
add
jbe
out
mov
mov
cmp
pop
into
movsb
add
leave
scas
incb
cmpsb
arpl
clc
mov
push
adc
push
dec
loope
add
mov
clc
scas
jle
ret
mov
or
pop
pop
add
pop
stc
in
xchg
push
push
sbb
enter
pop
call
and
dec
arpl
inc
add
jae
ljmp
in
movsl
movsb
sbb
lods
aaa
imul
movsb
pop
add
mov
add
push
dec
mov
mov
das
add
insl
xor
mov
jnp
push
xchg
sahf
pusha
sti
cmp
dec
fistpl
jmp
loopne
lds
rclb
or
mov
repz
clc
push
mov
xor
movsl
sbb
xor
sahf
add
test
mov
ss
adc
add
add
push
lcall
rorl
repz
push
push
scas
pop
outsl
imul
cs
adc
xor
lock
cs
add
loope
jmp
daa
into
xor
cli
insl
lock
push
call
mov
inc
divb
add
adc
mov
nop
bound
aam
mov
push
es
add
jne
mov
sarb
and
inc
push
lods
add
ret
push
lahf
add
inc
ret
mov
add
sbbl
add
in
cwtl
lods
push
shrb
ja
inc
pop
xor
inc
add
test
jb
xchg
and
adc
xor
inc
insb
xor
jne
mov
jge
cltd
jae
jae
xchg
ret
push
cli
add
push
call
or
push
xchg
mov
jbe
inc
push
cwtl
sub
mov
and
inc
sub
pushf
dec
mov
dec
mov
loopne
jmp
hlt
lea
movsl
sub
lock
fstpt
stos
mov
sbb
mov
sub
inc
popf
mov
mov
pop
gs
add
dec
push
xor
scas
pop
pop
push
cld
cmpsb
add
je
fs
nopl
adc
mov
add
xor
jl
into
call
cmp
repz
pop
cmc
mov
add
push
into
stc
jg
add
dec
push
push
xchg
lea
lock
leave
in
loopne
jge
or
xchg
call
iret
sub
mov
mov
test
sub
test
cs
add
call
lods
sub
inc
test
jbe
mov
xor
jecxz
sbbl
sbb
jl
jae
lods
pop
xchg
push
mov
push
repz
daa
push
stos
add
cmp
and
add
ficomps
push
sbb
xchg
mov
orl
int3
add
pop
fidivrl
xor
test
mov
add
jg
cmp
lods
xchg
adc
sub
dec
iret
push
leave
shlb
movsb
xchg
sbb
add
pushl
mov
mov
xor
mov
aam
loope
push
jnp
add
mov
dec
sbb
cmc
mov
add
pop
mov
dec
mov
pop
sub
jl
add
shl
sbb
rorb
leave
push
outsb
inc
frstor
mov
pop
sbb
or
call
and
addb
testl
inc
cmpsb
push
adc
idiv
mov
pop
adc
lods
shll
clc
fwait
jge
mov
movsb
inc
rclb
shll
inc
jge
dec
and
sub
ret
iret
stc
call
mov
xor
jmp
mov
stos
inc
and
lcall
push
mov
push
push
jae
add
lret
call
pop
sbb
mov
mov
mov
scas
rorl
int3
mov
popf
xor
rcr
push
adc
push
push
push
addb
inc
ficoms
in
pushf
pop
mov
or
ret
repz
add
sarl
sub
in
cmp
pushl
stos
call
inc
sub
add
scas
mov
mov
aam
aas
jae
cmp
inc
sahf
jbe
adc
lods
xchg
inc
fistpll
and
fimuls
xchg
jbe
movsb
shrb
cltd
push
sbb
adc
mov
cmp
incb
push
jnp
fstl
add
cmp
jp
add
icebp
mov
pop
sub
fs
sti
inc
test
add
fsubs
jg
mov
outsl
adc
mov
xor
inc
jp
jecxz
push
inc
in
les
push
inc
inc
jmp
lret
inc
xchg
neg
mov
add
enter
cli
pushf
fdivrl
sub
ret
jnp
popf
lcall
rorl
add
sbb
mov
jecxz
les
sub
sub
std
cmp
mulb
xor
mov
push
mov
roll
add
inc
push
fidivl
mov
xor
rcrl
hlt
and
add
outsb
sbb
lahf
and
mov
add
inc
hlt
jae
inc
pushf
cld
aaa
iret
fwait
add
inc
adc
add
push
fnsave
push
sbb
hlt
add
call
ret
leave
inc
jbe
bound
or
dec
mov
decb
mov
and
push
push
push
call
pop
pop
lods
jmp
je
mov
adc
cs
idivl
jg
pop
add
lret
jne
jmp
sarb
fdivs
cs
xor
sbb
push
and
xchg
faddl
cmp
mov
cs
aam
out
stos
sub
lds
shll
xchg
push
add
add
and
sbb
dec
xchg
sti
ret
jns
mov
add
jecxz
stc
sub
add
lea
test
sbb
out
aam
cmp
mov
and
outsl
sbb
cs
add
mov
dec
add
cmc
push
andb
xor
sub
adc
xchg
jl
and
add
insb
jne
xor
push
jbe
out
jmp
push
dec
lock
pop
inc
adc
inc
xor
sub
std
fsubrp
jo
push
adc
pop
add
sub
cltd
test
xor
mov
jp
lret
lods
jae
add
fcmove
pop
xor
mov
outsl
cld
mov
frstor
adcl
je
pop
cltd
add
jbe
enter
pop
adc
movsl
mov
push
jmp
call
mov
jle
or
sbb
mov
cmp
rorb
xor
cmp
xchg
and
mov
sub
push
jne
dec
cli
repz
sub
out
add
mov
std
jle
outsl
add
repz
mov
pop
lea
add
incl
fdivrl
pop
mov
rdpmc
sub
aam
stos
and
jnp
addl
enter
add
sbbb
xor
jns
lea
stos
fcomp
out
arpl
pop
xchg
clc
and
jmp
xchg
mov
inc
lods
dec
cmc
fmuls
add
call
jne
jge
fucom
add
push
je
mov
sub
roll
fidivl
cmp
mov
add
je
push
jmp
mov
icebp
outsb
push
ret
iret
cmp
add
cs
aam
addr16
add
or
scas
stos
mov
and
and
add
add
fdivr
jmp
adc
daa
mov
scas
fistps
xor
pop
adc
sbb
cmp
cmp
pop
add
push
or
sar
mov
fmul
pop
xchg
std
loop
insb
mov
add
xor
lock
mov
or
add
loopne
mov
mov
and
xlat
int
and
xor
jle
rclb
push
xlat
std
push
xor
xchg
sub
mov
add
mov
or
ljmp
inc
add
push
mov
mov
xchg
add
das
dec
mov
push
pop
xor
dec
add
mov
sbb
int3
clc
add
je
add
sbb
pop
add
jmp
jne
std
jl
mov
add
add
xlat
mov
roll
leave
aas
pop
mov
scas
into
sbb
add
push
push
in
fdivl
xchg
aaa
das
into
loopne
pushf
mov
imul
mov
imul
movsl
mov
xor
sub
xchg
add
les
sub
dec
test
pop
jae
jecxz
add
adc
jnp
sbb
sbb
xchg
add
mov
and
xorb
mov
mov
inc
je
movsl
dec
cwtl
add
pop
jno
xchg
and
sub
and
adc
inc
sub
mov
popf
std
mov
outsl
stos
mov
es
seto
cmc
dec
rclb
add
cs
in
lock
push
add
cmp
addl
sub
push
cs
sub
sbb
cld
addr16
mov
xchg
adc
or
lret
mov
fsubs
jo
xor
lret
roll
shll
add
ds
loope
sub
scas
pop
dec
fiaddl
dec
data16
pop
ret
fdivl
add
fldcw
jnp
fisttpl
add
and
loopne
jg
cmp
test
pushf
fld
mov
add
jns
inc
shlb
flds
mov
mov
pushf
cltd
push
call
adc
inc
dec
add
jmp
popl
arpl
in
daa
add
cwtl
out
out
lods
xor
sbb
xor
gs
add
or
add
test
lcall
leave
xchg
add
sbb
call
jo
push
inc
adc
add
rcrl
sub
cli
dec
dec
mov
xor
inc
push
cmp
ret
rcrb
or
shll
cmp
push
pop
or
mov
shr
cmp
out
and
outsl
push
jno
xchg
adcb
fcmovne
jne
inc
push
test
icebp
mov
outsl
scas
xchg
sub
in
mov
and
xor
add
mov
jge
lods
add
std
push
inc
insb
adc
pop
sub
jl
add
jecxz
mov
or
insb
and
sbb
xchg
add
add
mov
xchg
mov
jae
inc
mov
cmpl
hlt
sub
out
inc
push
nop
mov
inc
inc
lret
ljmp
outsb
add
adcb
je
mov
or
jmp
fisttps
cli
dec
hlt
push
pop
mov
add
in
cmpsl
mov
mov
aam
lods
testl
testb
add
fadd
lods
push
mov
dec
jae
push
pop
sahf
and
add
push
xor
ja
enter
rorb
jl
mov
andb
add
add
and
pusha
adc
mov
xor
cld
push
cwtl
add
mov
pop
mov
lods
cs
rcl
enter
add
enter
mov
dec
add
or
pop
ljmp
and
dec
lods
push
scas
adc
adc
dec
scas
mov
push
int
lcall
add
in
jno
xor
ror
jecxz
loopne
mov
jbe
push
inc
jae
out
push
inc
lods
push
lods
mov
stc
add
std
mov
into
loope
mov
lahf
mov
mov
mov
test
shl
mov
sar
int
mov
mov
push
aad
popf
adc
mov
add
roll
loope
and
fisttps
xchg
mov
call
mov
push
push
add
lods
jae
adc
hlt
dec
add
jl
lock
sbb
xchg
cmp
inc
leave
ficoms
push
mov
das
xor
lock
ret
mov
inc
add
mov
add
push
and
add
out
mov
jg
push
mov
sub
int
pushf
aad
pop
dec
fadds
lahf
bound
cmp
rcrl
cmp
les
mov
inc
popf
pop
mov
cmp
pop
int3
stos
push
jl
add
pop
hlt
loopne
mov
mov
cmp
scas
sub
add
jecxz
sub
pop
add
sub
aaa
pop
fldl
stos
xchg
mov
push
add
addl
inc
push
mov
rcrb
nop
jae
and
add
sahf
push
mov
out
loopne
lods
pusha
add
xor
push
add
cmpsb
mov
ret
sub
lcall
inc
or
add
push
sub
mov
mov
push
jo
mov
arpl
leave
xor
rclb
pop
sbb
ljmp
mov
push
xor
mov
inc
imul
mov
xor
mov
mov
dec
sahf
pushf
jp
ljmp
jg
dec
ret
aam
pop
stc
push
mov
xchg
mov
aas
add
lcall
mov
add
push
imul
sub
inc
repz
sbb
test
std
int
add
data16
pop
sub
sbb
fsubrs
jae
mov
lods
or
imul
mov
ret
cmp
ret
fnsave
leave
mov
lods
repnz
cmpsb
mov
jae
sub
enter
test
andb
lods
dec
lock
add
mov
popf
add
mov
add
adc
push
jno
cltd
mov
and
sbb
sub
dec
jle
pushf
mov
jae
scas
xchg
inc
lahf
mov
out
dec
ss
add
xor
pop
pop
std
notl
and
push
add
out
fcmovne
cltd
or
sub
dec
xor
add
fdivs
jecxz
cs
add
ljmp
add
xor
add
mov
adc
mov
mov
add
xor
in
mov
push
mov
std
loopne
and
ret
sahf
jbe
xchg
add
xchg
rorl
push
add
sub
lods
cmp
outsb
je
clc
movsl
sbbl
ficompl
pusha
orb
mov
mov
je
les
mov
shrl
mov
and
mov
nop
xor
sub
jbe
pop
inc
call
or
sub
hlt
mov
lret
dec
push
aas
jle
sbb
stos
mov
cs
add
xor
sbb
mov
and
jg
mov
flds
cmp
dec
adc
and
imul
scas
xchg
xor
stc
aam
testb
jge
jle
mov
add
sub
out
test
loope
cmp
pop
scas
cmp
cmpb
add
xor
or
lea
repz
add
scas
cld
adcb
mov
and
push
add
sbb
push
xor
xchg
cmp
and
inc
arpl
inc
ret
test
sbb
shlb
daa
adc
sbb
adc
push
enter
sub
add
pop
jl
sub
repz
incl
mov
push
sbb
jbe
dec
dec
mov
mov
add
push
dec
jmp
ret
or
mov
movlps
icebp
jge
pusha
sub
add
jno
mov
add
mov
sub
addl
arpl
mov
lcall
daa
inc
rolb
jnp
enter
xorb
mov
add
ds
sub
pop
mov
shrl
mov
add
outsl
jo
pop
sub
cmp
les
mov
inc
cmp
aad
fldl2e
js
or
ret
jecxz
scas
lock
sbb
cltd
pop
adc
fisubrl
lods
pop
dec
leave
inc
arpl
and
jbe
in
xor
inc
push
mov
lcall
and
subl
testl
popa
icebp
mov
je
lea
xor
sbb
in
mov
push
arpl
add
cmp
mov
xor
mov
mov
je
enter
repz
push
aaa
sub
sti
fnsave
push
outsl
xchg
add
mov
adc
jge
push
add
pop
call
pop
les
stc
sub
and
push
push
mov
mov
push
push
sbb
inc
mov
in
jp
xor
inc
push
sbb
add
xchg
jge
lret
lods
lcall
ja
or
or
jno
dec
jl
push
lret
fsubs
jb
mov
js
rolb
arpl
sub
in
or
je
add
ficompl
shrb
loope
mov
push
cmp
adc
nop
lret
pop
enter
jo
add
sbb
je
jge
lods
mov
movsb
dec
add
mov
movl
adc
dec
mov
orb
arpl
inc
and
add
cli
inc
dec
or
mov
arpl
jae
add
pop
dec
sbb
mov
test
inc
xor
dec
roll
cmpsl
scas
imul
jbe
mov
test
sarb
jno
dec
sub
pop
addl
pop
icebp
cmp
pushf
push
add
lds
test
sti
pushw
and
sbb
mov
jb
mov
lret
test
pusha
mov
mov
xor
jbe
roll
jne
mov
add
jmp
add
jno
daa
xor
xchg
pop
scas
dec
cmp
add
out
adc
add
dec
jbe
mov
lret
lea
pop
stos
or
stc
mov
repz
add
int
lea
lods
xor
cmp
sub
pop
out
fcoms
mov
mov
arpl
mov
sub
outsb
xchg
adc
out
negl
or
jae
hlt
push
mov
js
movsl
add
fucomi
pop
arpl
mov
xor
dec
sarb
out
orb
test
add
pop
and
add
add
ja
add
add
add
add
add
jno
add
add
push
dec
add
add
add
add
add
push
add
add
dec
pop
add
add
add
jb
add
add
add
add
add
add
add
inc
add
add
add
push
add
add
add
jb
add
add
add
ja
outsl
dec
add
add
add
add
push
add
add
add
dec
add
add
add
add
add
push
add
add
add
add
add
add
add
outsl
add
add
dec
add
popa
add
add
inc
add
pop
add
data16
popa
add
bound
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
push
dec
add
dec
add
dec
add
add
add
add
push
add
dec
inc
add
add
add
dec
add
add
add
add
dec
add
insb
add
pop
add
add
add
add
add
outsl
add
insb
add
jno
add
aaa
add
add
add
push
add
add
inc
jns
cmp
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
push
add
push
add
dec
add
add
add
inc
push
jp
add
insl
add
add
add
add
add
add
add
dec
add
push
add
add
add
add
aaa
add
add
push
add
add
push
add
add
imul
add
add
js
add
add
bound
adc
add
aam
cmpsb
ficomps
inc
add
shlb
pop
push
data16
arpl
fsubrs
clc
lds
mov
xor
xor
mov
dec
jecxz
xor
or
out
inc
sbb
stc
sub
arpl
call
aaa
std
push
sti
xor
incl
dec
and
movl
and
sti
cs
testb
ret
xor
lss
pop
push
jg
lahf
daa
mov
dec
popf
sbb
inc
mov
fadds
lea
add
push
push
pop
sub
hlt
xchg
leave
xor
aad
mov
insb
jae
fstpl
lahf
into
add
or
mov
arpl
cmp
mov
xchg
push
icebp
in
mov
mov
std
ret
lock
data16
add
addb
xor
mov
add
sbb
test
xor
aad
mov
pop
in
add
shrb
std
mov
and
adc
int3
flds
imul
mov
mov
stos
test
jae
lcall
jo
outsl
out
adc
add
jns
ss
pusha
push
cmp
pop
mov
adc
push
push
insl
inc
pop
pop
lea
push
xor
mov
mov
lods
lret
sub
pop
sbb
lret
test
sub
std
adc
and
inc
int3
add
xor
pop
mov
jo
cmp
jae
inc
mov
mov
pop
push
mov
add
push
rcl
add
mov
jae
push
scas
lea
jge
add
pop
sub
jbe
sbb
rcr
outsl
push
lods
push
dec
jmp
and
idivb
or
fisttpl
ljmp
lock
and
push
jmp
cmp
out
fisttps
mov
or
sub
mov
icebp
nop
add
es
lea
lret
pop
mov
movsl
adc
sbb
rorb
mov
cwtl
dec
pop
mov
add
xchg
pop
dec
and
std
insb
add
add
loop
outsl
inc
js
push
xchg
mov
jno
or
push
lods
loope
pop
add
test
out
addl
pop
popf
pop
lahf
sbb
push
imul
in
movsl
ret
add
iret
out
test
popf
test
mov
mov
xchg
add
sbb
pop
jmp
pop
leave
add
je
pop
add
add
movl
clc
jae
ficomps
dec
imul
movb
xchg
sti
jne
mov
test
incb
add
jo
and
add
in
test
jns
jno
push
cmc
inc
cli
and
sub
loop
nop
lret
sub
dec
adc
pop
xchg
add
ja
mov
mov
xchg
jae
cli
aas
scas
pop
cmp
pop
cmp
mov
jecxz
sub
add
les
pop
pop
cwtl
outsb
inc
add
jp
xlat
mov
jmp
inc
cwtl
or
mov
cmp
je
jae
dec
push
dec
mov
adc
jle
mov
add
dec
ror
mov
stc
je
adc
jno
mov
dec
mov
ret
test
fldt
inc
enter
mov
jne
lods
xchg
dec
add
cmp
pop
pop
lahf
iret
iret
lret
xchg
cs
sub
in
add
cmpsl
out
aam
ret
movl
hlt
add
xchg
mov
sarl
sub
out
inc
mov
mov
notb
mov
sahf
mov
lea
mov
sbb
add
pop
add
add
jmp
pop
sahf
push
repnz
mov
roll
inc
cltd
or
shlb
fisubrs
jne
add
icebp
and
lahf
dec
dec
dec
xor
mov
xchg
cmp
pop
mov
popf
mov
icebp
sbb
inc
mov
cld
sbb
inc
cmp
add
add
mov
inc
popa
sbb
pop
mov
jo
aad
sbb
xchg
arpl
inc
and
push
push
mov
je,pn
ficoml
outsl
add
cmp
push
push
push
add
sub
sahf
xchg
xor
mov
fidivl
mov
xchg
repz
push
mov
mov
js
sarb
mov
mov
test
jne
add
xor
add
xor
add
mov
sbb
sub
sub
mov
daa
sbb
sbb
and
dec
sub
inc
jo
xor
shlb
roll
cmp
sbb
or
or
bound
add
and
inc
cmp
mov
out
addr16
outsb
cmp
jmp
je
xchg
dec
andl
add
call
sahf
rorb
pop
add
int3
jle
add
adc
lods
add
add
mov
inc
call
sbb
repz
mov
sbb
arpl
or
scas
addr16
mov
add
cmp
adc
and
inc
mov
sti
mov
iret
push
outsb
cmc
filds
add
test
pop
mov
pushf
jle
pusha
xor
int3
inc
or
add
in
mulb
pop
mov
xchg
sbb
mov
mov
flds
out
outsl
cld
add
xchg
int
std
dec
lods
mov
shr
ljmp
dec
xor
jae
stos
testl
jne
leave
inc
jae
adc
dec
roll
inc
adc
cwtl
add
jno
cli
add
mov
gs
arpl
stos
out
add
cwtl
in
adc
xlat
xor
scas
add
in
out
aad
and
push
lods
pop
cmp
outsl
xor
orl
dec
adc
fwait
loopne
jno
dec
push
shll
jecxz
mov
add
sbb
shlb
fldt
insb
add
lds
dec
add
leave
das
push
fidivs
cmp
mov
add
sub
mov
cmp
xchg
jp
inc
rcrl
mov
fstl
call
push
sti
cwtl
dec
les
and
arpl
add
rorl
and
scas
sub
sbb
fstpt
jne
add
pushf
pop
add
push
and
mov
or
or
in
xor
cli
pop
loop
or
inc
cmp
ret
mov
sub
test
popf
ret
std
outsb
xor
xchg
lea
outsl
add
mov
sub
jl
arpl
mov
cmp
fcomps
sub
add
dec
jp
outsl
call
pop
inc
push
cwtl
popf
add
mov
fwait
push
ret
xchg
pop
mov
xchg
lcall
xor
xor
std
pushf
xchg
jmp
sbb
mov
imull
cmpps
add
push
xchg
add
push
adc
or
add
in
and
sub
jecxz
add
rclb
ret
loope
ret
in
or
pop
negl
into
add
sbb
and
push
inc
mov
sbb
pushf
lahf
leave
sbb
xorl
push
jne
mov
popa
push
add
xchg
lret
push
pop
scas
aad
movl
addb
add
push
stos
notl
lcall
or
int3
fiadds
cld
orl
repz
pop
add
test
xchg
ficompl
lods
mov
jo
sub
or
jmp
sahf
jb
into
sbb
sbb
insl
mov
jecxz
xlat
mov
dec
mov
adc
or
inc
pop
inc
loope
aad
inc
stc
xchg
push
inc
add
dec
add
testb
mov
mov
mov
inc
test
cmp
pop
jl
xchg
jne
add
push
push
add
ret
nop
push
push
fdivs
add
loopne
and
xchg
and
xor
pushl
inc
add
stos
jne
xchg
jp
cmp
adc
sbb
add
lahf
jbe
jp
jmp
adc
mov
xor
pop
mov
pop
add
les
cmp
xor
add
aas
mov
je
cmp
jae
rolb
push
or
imul
push
loope
mov
push
clc
add
pop
add
insb
add
add
icebp
or
jne
pop
add
sbb
hlt
add
mov
mov
jne
jmp
pop
inc
push
es
and
inc
dec
dec
cs
sbb
push
and
add
sub
push
push
xor
jno
mov
insb
add
sbb
sub
add
mov
dec
pop
call
cmp
dec
xor
xor
cmp
or
pop
fbstp
dec
outsb
mov
enter
mov
mov
call
mov
jne
xchg
mov
mov
lcall
or
sub
shrb
and
dec
inc
lret
ret
sub
mov
pop
divl
les
xor
int
add
jle
lret
mov
cld
pop
add
mov
lock
push
push
aam
jno
mov
push
lea
aad
sbb
sub
inc
outsb
pop
or
add
xchg
cwtl
hlt
imull
movb
lds
dec
push
out
mov
add
add
iret
icebp
loopne
mov
push
mov
sub
enter
mov
iret
das
mov
mov
loopne
add
sarb
sti
lds
test
xchg
mov
pop
lods
inc
adc
mov
ret
scas
sbb
jae
sbbl
bound
mov
push
push
hlt
sub
and
into
xor
aas
push
scas
push
push
leave
test
add
dec
cwtl
cli
xchg
dec
lea
sub
mov
mov
shll
cmp
pop
das
jo
pop
sbb
sub
push
vmwrite
pop
jmp
inc
xor
cs
cmpsb
out
shll
mov
add
push
dec
add
xchg
sbb
outsl
xor
xor
jo
movsb
sub
add
into
mov
add
bt
add
sub
iret
dec
test
mov
adc
nop
push
xor
sldt
push
test
add
push
je
inc
sub
dec
shll
add
lcall
je
push
stos
jo
in
sbb
imul
add
pop
inc
inc
add
mov
sub
mov
cmp
mov
adc
xchg
cltd
andb
out
sbb
and
icebp
push
out
push
sub
std
movsl
cs
int3
pop
inc
inc
xchg
add
and
add
sbbb
jne
push
inc
popa
add
adcl
xchg
pop
or
jae
insb
dec
add
stc
cmp
xchg
ds
mov
xor
popa
in
pop
pop
andb
add
jle
lods
pushf
sub
sti
xor
add
adc
dec
int
add
jg
sub
int
je
push
or
cmp
pop
stos
std
sidtl
movsb
sbb
int3
adcl
mov
jo
add
pop
xor
das
sbb
sub
dec
pop
mov
inc
pop
add
or
mov
jge
push
dec
push
push
xor
sbb
jae
jno
ja
push
jne
cs
scas
subl
popf
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
xor
pop
add
or
xchg
sbb
mov
mov
std
inc
cmp
push
lock
lock
inc
arpl
inc
outsl
int
int
iret
or
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
add
sti
add
or
or
sbb
pop
jmp
das
xor
leave
inc
iret
dec
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
add
test
push
out
or
mov
out
sti
push
jmp
push
xor
ss
cmp
inc
lods
dec
sub
lods
push
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
and
mov
mov
mov
mov
mov
mov
aam
std
pop
sbb
xor
xor
xor
aaa
sbb
pop
xor
or
mov
arpl
mov
sahf
mov
mov
mov
mov
mov
mov
add
add
and
ret
inc
dec
test
fs
push
je
jp
addl
dec
stos
dec
mov
ret
dec
fmull
dec
repz
stc
dec
incl
enter
cwtl
and
mov
fadds
dec
cli
rcrb
push
mov
and
int
int
int
int
cli
fdivrp
jecxz
adc
aaa
sbb
and
xor
inc
inc
push
mov
pop
repz
jg
xchg
popa
stos
cmc
nop
int
int
out
jp
add
cmp
aaa
mov
cmp
push
bound
push
jle
mov
dec
mov
dec
aam
loopne
jmp
lcall
adc
push
fisubl
dec
loop
cli
push
mov
popa
mov
outsl
jl
mov
test
mov
mov
add
repz
jns
jg
sbb
jae
jno
ja
dec
jne
cs
push
jo
mov
fcmovbe
movsb
dec
stos
xchg
shrl
dec
in
notl
push
cmp
and
mov
mov
hlt
jns
jg
mov
lods
mov
mov
sub
sub
xor
mov
or
adc
push
adc
sub
scas
push
mov
pop
leave
jns
test
nop
int
int
int
int
int
int
mov
ljmp
and
pushl
pop
lods
loop
je
repnz
cld
adc
jl
jl
jl
jae
repz
jns
or
jge
les
xchg
xor
push
packsswb
jnp
cmpb
test
mov
int3
jl
jl
jl
jae
enter
mov
sub
mov
dec
mov
std
jb
jg
mov
dec
movsb
dec
xlat
dec
fmull
dec
cmc
dec
sti
mov
jge
dec
add
adc
and
dec
ss
xor
lock
add
daa
enter
mov
add
push
sub
dec
and
mov
cwtl
and
psubw
ret
repnz
outsl
or
scas
ljmp
and
push
add
jecxz
jge
test
rol
fdivrs
xor
mov
sti
lcall
lret
sub
imul
and
jno
mov
clc
dec
xchg
jge
daa
or
out
cli
pop
inc
add
jle
test
adc
adc
in
or
ss
sbb
sub
push
mull
mov
xchg
add
dec
repz
cld
int3
add
pop
sub
dec
inc
insb
mov
mov
in
jp
hlt
cmp
ljmp
fisubrl
inc
loop
cli
push
repnz
mov
test
cld
mov
sarl
xor
and
cmp
lock
inc
ja
jne
dec
or
pop
movsb
arpl
xchg
jl
roll
pop
sbb
inc
ret
add
cmp
jl
and
hlt
in
shl
xlat
add
adc
push
lods
mov
std
fwait
xor
out
mov
rolb
or
out
ss
repz
xchg
repz
sub
add
cmp
cmp
push
andl
xchg
cwtl
mov
inc
adc
enter
and
sub
pop
mov
cli
imul
xchg
jle
test
insl
lods
lret
shll
jns
xchg
jg
loope
sub
cmp
pop
lds
mov
sub
add
and
sub
or
call
mov
adc
xchg
mov
shl
jmp
rdtsc
jmp
pusha
and
test
add
inc
mov
fmull
stc
imul
jns
xchg
mov
mov
jmp
pushl
push
out
pop
jecxz
add
enter
lds
dec
mov
push
xchg
mov
mov
xor
fidivl
sub
aas
loop
cli
dec
xchg
repnz
out
cs
sub
fldcw
jg
sbb
jae
push
ret
and
fld
mov
adc
arpl
repnz
repz
repz
movsl
add
pop
adc
adc
js
xor
sbb
sub
sarb
inc
dec
jle
test
lret
stc
fld
repz
add
fisubrl
aad
ljmp
lret
cmpsb
xor
xor
add
push
scas
xchg
mov
int
loopne
negb
cmp
cwtl
lret
mov
out
in
jmp
add
sub
xchg
mov
std
pop
cmp
adcb
enter
jmp
cmc
stc
or
aaa
mov
xor
push
push
push
ret
cmpsb
outsl
mov
in
out
cltd
cmpsl
inc
push
mov
sub
cmp
cwtl
xor
shrl
jnp
jae
addb
mov
xor
cs
mov
add
ja
jge
test
sbb
mov
inc
fcomip
call
ljmp
sub
addr16
insb
and
adc
lcall
daa
scas
xor
movb
pop
daa
fadds
je
popf
mov
adc
pop
pusha
inc
js
inc
mov
ret
jno
lret
sub
jnp
ds
inc
loop
cli
jnp
mov
testl
xor
push
aaa
pop
bound
mov
iret
loope
out
add
add
adc
add
xor
aaa
inc
ss
daa
mov
repz
popf
xchg
add
dec
xchg
pop
insb
add
jb
adcb
dec
sub
dec
gs
push
jo
ja
int3
mov
adc
sbb
push
int3
fimull
loop
cli
pushf
outsl
pop
stc
mov
adc
mov
add
lods
add
aaa
mov
ss
icebp
xor
xor
cmovb
xchg
lods
inc
cs
ss
inc
xor
cmp
cwtl
subb
dec
lcall
push
scas
inc
lahf
add
out
lock
testb
add
and
push
out
and
sub
addb
pop
das
jae
xor
mov
les
push
push
fcompl
inc
hlt
add
inc
xor
scas
jp
sbb
repnz
fcomip
sbb
xchg
add
lahf
into
or
push
ret
mov
clc
cmpsl
xchg
sti
enter
into
out
cld
repz
cld
xor
jge
jae
mov
mov
xchg
lods
push
mov
xchg
mov
lret
xor
xor
jae
push
clc
push
sub
dec
sub
add
negl
rcrb
add
pop
hlt
sti
add
aaa
inc
out
push
jecxz
out
mov
cltd
jmp
lahf
cmp
fadds
sub
xchg
adc
mov
pop
jmp
push
xor
xor
aaa
mov
jnp
cmp
lods
mov
sbb
ss
and
push
cmp
sub
dec
xor
insb
pop
js
filds
test
repnz
clc
enter
cwtl
addr16
repz
fcom
call
and
jbe
loop
test
cmp
scas
inc
testl
add
xor
adc
xchg
inc
xchg
push
adc
pop
xor
ret
sub
mov
xchg
dec
cltd
out
ja
mov
je
repz
jmp
mov
mov
outsl
out
adc
and
jae
jno
ja
jne
or
inc
je
xchg
cmpsl
les
add
jecxz
fsqrt
repz
fwait
addl
mov
lods
stos
hlt
ljmp
lock
test
sbb
xchg
push
jns
mov
divl
xor
mov
mov
sti
dec
ret
push
hlt
add
sub
mov
mov
ss
ret
mov
shl
call
jecxz
jle
pop
add
sahf
add
scas
sub
mov
ljmp
inc
arpl
sub
xor
lret
add
test
mov
push
jmp
add
xor
daa
dec
jecxz
mov
xor
cwtl
icebp
inc
add
inc
xor
data16
insl
mov
fwait
ja
adcl
xchg
add
je
add
leave
mov
cs
and
jg
xorb
std
dec
fdivrs
in
inc
push
sub
jo
push
inc
cmpsb
int3
add
mov
mov
fcmovnbe
out
clc
add
jae
cltd
ss
cmpb
push
jmp
mov
inc
int
repnz
sbb
add
cwtl
sub
push
mov
popa
jno
adc
adc
sub
or
cmp
inc
jmp
ljmpw
lock
movsl
add
xchg
scas
popf
mov
rcl
loope
in
add
and
daa
mov
xor
cmp
inc
and
pop
add
mov
mov
rcrl
mov
aad
sbb
and
pop
add
or
jae
fsubrs
call
dec
add
jnp
jne
dec
add
fstl
mov
rorl
ljmp
ficompl
addr16
dec
out
push
stos
mov
imul
jp
mov
lods
add
dec
mov
sub
and
shll
mov
mov
jge
mov
lods
mov
add
fcoms
sbb
add
sbb
add
inc
jb
jns
addb
lods
dec
mov
mov
jae
repnz
jnp
add
mov
sbb
bound
cmpsb
cs
jae
enter
cmc
add
test
jg
push
jae
xor
cld
adc
add
mov
mov
out
cld
jo
or
adc
enter
bound
pop
outsl
pop
mov
inc
xor
shlb
mov
add
pop
add
sbb
sub
pop
mov
jbe
addl
outsl
mov
repnz
repz
jns
popf
add
inc
enter
pusha
mov
insb
add
xchg
loop
mov
add
aas
adc
add
xor
mov
imul
jnp
cmpb
add
mov
xor
lret
adc
add
jb
sub
arpl
inc
add
lret
cli
insl
jg
repz
fwait
inc
test
add
mov
jbe
ret
add
add
hlt
loop
cli
push
repnz
pop
add
stos
les
add
scas
aam
fnstenv
pop
sbbl
mov
dec
loop
pusha
cli
addr16
mov
xor
and
iret
fdivrp
call
aaa
dec
cs
jae
insl
in
je
jb
out
mov
mov
and
lahf
or
jmp
lea
ljmp
push
or
fs
jae
cmp
fdiv
mov
adc
imul
mov
scas
push
sbb
add
dec
das
dec
ljmp
push
insb
jno
mov
out
xchg
mov
mov
fstpt
pop
in
addl
aaa
jns
jg
jge
mov
sub
dec
negl
sbb
addb
cwtl
out
mov
pushf
enter
repz
out
dec
cld
mov
or
pop
push
aad
incl
inc
mov
push
jg
ret
push
mov
sarb
cli
sti
cwtl
push
add
test
mov
ja
mov
push
mov
popa
ror
ret
fwait
inc
outsl
scas
mov
cmp
cwtl
and
add
and
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
jmp
jmp
jmp
jmp
