enter
jmp
mov
pop
mov
test
enter
orl
insb
push
enter
push
dec
and
fcoms
inc
call
incl
pop
pop
ret
lea
push
mov
push
push
lea
pushl
adc
test
je
or
lcall
dec
cs
cmpl
je
xor
mov
lea
lcall
pushl
dec
test
jne
call
sbb
mov
mov
mul
add
mov
std
cld
mov
pop
pop
pop
push
push
push
push
push
add
mov
mov
mov
dec
xchg
mov
cmpl
jbe
inc
and
add
test
shlb
outsl
test
adc
and
cmp
je
ljmp
pushl
rorb
inc
xor
mov
adc
and
mov
and
xor
mov
gs
or
lock
rorb
jmp
and
or
ret
mov
outsb
dec
pop
jne
and
pop
clc
mov
imul
gs
xor
cs
insb
jno
or
pop
sti
decb
nop
push
mov
mov
psubusb
add
add
mov
jmp
mov
ret
std
pop
lret
mov
mov
rep
push
js
scas
jae
add
or
jne
ffree
mov
ret
das
je
sti
mov
xor
dec
pusha
cwtl
add
jmp
mov
add
std
fisttpl
jg
sub
shr
js
sub
outsb
mov
and
out
jg
mov
jne
mov
add
or
decl
movzwl
add
mov
add
xor
dec
jne
in
mov
lret
jae
jne
popf
stc
aad
pop
add
push
or
not
or
je
push
inc
je
xorb
inc
jmp
mov
mov
add
jmp
adc
sub
pop
fldcw
sub
jmp
add
pcmpgtd
push
sub
repz
adc
lea
push
call
cwtl
push
or
pop
outsl
insb
or
and
divb
call
cmp
cmp
mov
push
mov
aam
aam
je
xor
cmp
push
int
test
aas
mov
jae
push
inc
test
and
insl
ja
add
inc
xor
popa
xor
push
and
sub
jne
sbb
lea
je
and
lea
push
fstpt
je
mov
xor
es
pop
movsl
ja
in
jg
and
lahf
push
mov
jnp
pop
clc
movl
cmp
movb
add
jbe
mov
add
add
add
xlat
std
mov
adc
add
lret
das
pop
neg
adc
fsubr
jle
xchg
sub
in
in
pushl
mov
add
mov
add
or
adc
fidivl
dec
or
push
cmp
int
or
mov
and
inc
lock
lods
xor
mov
ret
clc
add
sbb
in
add
movl
fcoml
or
dec
je
out
mov
mov
outsl
cmpsb
or
inc
out
loopne
jl
lea
popf
jge
imul
inc
clc
and
xchg
push
or
loope
arpl
daa
decb
jne
jp
lock
sub
jle
push
pop
xchg
lods
push
dec
or
je
mov
jo
inc
add
push
or
push
addl
and
outsl
cli
push
xor
pop
jmp
mov
in
ret
xchg
bound
enter
jp
aam
div
test
jne
or
or
fisttpll
dec
clc
xchg
pop
xorl
cmp
jge
mov
lods
js
dec
test
subb
inc
xor
lea
inc
adc
add
cmp
rcr
mov
daa
jmp
jl
or
imulb
push
daa
inc
adc
ret
fistpl
push
cmp
push
sbb
adc
sbb
cmp
pop
xchg
xor
and
adc
push
or
stos
pop
mov
inc
gs
jb
arpl
sbb
pop
sti
fs
jae
jb
loope
mov
sub
fstpl
sbb
mov
insb
loope
or
jbe
and
and
fcmovnbe
or
or
je
cld
or
mov
cld
into
scas
hlt
mov
add
sbb
pop
movsl
sbb
add
xchg
and
pusha
pushl
jmp
dec
or
sub
pop
mov
inc
enter
xor
out
fildll
call
xor
cmp
addr16
addr16
or
inc
addr16
addr16
and
xor
addr16
addr16
inc
dec
push
push
mov
pop
mov
mov
adc
or
aad
lock
mov
mov
mov
xor
ja
push
in
in
sbb
outsl
cmp
dec
in
clc
scas
or
jae
push
or
cmp
mov
cltd
pop
outsl
std
cmpl
pop
add
out
xor
in
call
adcl
divb
jmp
es
adc
push
push
mov
and
push
pop
sub
dec
aam
loope
fadds
pop
scas
pop
stos
call
out
dec
jl
sbb
dec
or
adc
sub
pop
sbb
add
inc
loopne
mov
je
xchg
xlat
sbb
cli
in
push
jb
fnstenv
xor
or
int3
sbb
add
push
cmpsb
mov
cltd
in
test
inc
inc
push
mov
outsb
loop
loopne
add
fcoml
mov
ffree
jne
xor
adc
add
test
aas
ret
add
add
outsb
add
add
pop
pop
sub
add
adc
pop
or
dec
outsl
popa
fs
imul
sbb
call
aaa
insl
imul
insb
sbb
dec
jo
idivb
fsubs
or
push
popa
imul
insb
gs
bound
mov
insb
outsl
jae
dec
popa
outsb
dec
imul
mov
gs
inc
imul
popa
insb
inc
push
mov
cmp
popa
cmovbe
push
je
dec
outsl
jbe
dec
gs
decl
mov
jns
arpl
jbe
data16
jo
imul
scas
inc
insb
je
jns
outsl
jo
pcmpgtw
ja
stos
mov
add
int
clc
into
sbb
cmpsl
pop
adc
in
or
jne
andl
or
pusha
mov
add
call
xor
mov
fnstcw
inc
push
neg
fisubl
dec
or
daa
jne
cli
sub
or
mov
add
inc
inc
mov
push
inc
mov
mov
sub
js
je
cwtl
sub
rclb
gs
mov
push
pop
lods
xor
cmp
je
cmp
push
cmp
je
cmp
je
cmp
jg
ljmp
adc
mov
cmp
je
cmp
mov
cmp
je
loop
jmp
movb
pop
jl
sub
fldt
mov
xor
push
and
xlat
int
in
xor
add
enter
or
ljmp
jecxz
call
push
mov
jbe
push
jnp
test
xlat
sub
inc
dec
cmp
ja
jge
jl
mov
xor
in
lods
push
mov
das
jmp
push
aas
jge
ja
sbb
add
je
mov
fbld
xor
add
add
adc
add
ss
mov
imul
mov
test
cmp
sbb
xlat
test
sarb
or
jb
xlat
jo
mov
or
mov
imul
pop
js
pop
xchg
aas
cmp
fistps
jl
push
add
lods
jae
xchg
pop
pop
mov
cmpsl
sub
mov
pslld
testb
pop
and
push
jbe
iret
pop
movsb
pop
xor
pop
adc
jne
jp
xchg
add
fsubrs
in
lock
jae
and
mov
xor
dec
adc
xchg
popf
jae
leave
mov
enter
and
jae
scas
in
je
je
inc
je
insb
enter
jns
sbb
push
mov
sbb
inc
mov
add
inc
sbb
and
aas
outsl
sbbb
mov
adc
and
call
fwait
lret
pop
and
xor
jbe
dec
pop
repnz
jbe
jbe
jbe
jbe
ret
or
in
nop
pop
inc
pop
cmp
mov
push
cmp
icebp
das
adc
pop
ja
adc
and
xchg
lret
adc
daa
fistpl
js
icebp
or
fldenv
dec
jns
pop
sub
orb
sbb
or
mov
ds
sbb
and
adc
lret
dec
push
cmp
test
pop
jnp
add
jbe
jb
pop
pushf
loop
pop
inc
ljmp
pop
fiaddl
add
mov
add
sbb
inc
pop
fmuls
in
xlat
push
das
mov
orb
adc
jnp
mov
mov
xchg
nop
jmp
fldt
jns
ficomps
pop
popa
pop
enter
dec
xor
je
sub
pop
sub
scas
xor
and
mov
rcr
pop
push
jge
daa
and
jnp
imul
add
push
add
fadds
mov
pop
add
lahf
sbb
sbb
lretw
bound
push
pop
notl
add
and
xchg
and
mov
filds
and
popf
sub
push
pop
ljmp
cmp
ljmp
std
fwait
out
pop
add
dec
add
add
adc
fidivs
add
dec
adcb
inc
sub
out
rclb
xor
mov
or
mov
dec
fildl
or
add
clc
inc
push
pop
inc
rolb
pop
sbb
xor
pop
cmc
mov
cmc
popa
pop
ja
add
inc
xlat
pop
mov
pop
adc
notl
loope
cvtps2pi
aaa
mov
out
sub
and
lahf
adc
push
sti
es
pop
push
jae
mov
pop
fwait
int
idivb
adc
pop
cmp
cmp
mov
dec
cmc
mov
sbb
cli
jmp
stc
xor
inc
lock
iret
data16
or
fcomi
add
sub
sbb
or
or
pusha
scas
dec
arpl
ret
xor
xchg
jb
push
dec
fmul
int
mov
daa
daa
add
sub
sub
and
pop
mov
xor
bound
icebp
add
jae
or
aaa
inc
sub
lret
cs
and
outsb
xchg
mov
xor
pop
push
push
es
mulb
push
cmp
fwait
or
out
daa
fwait
add
jbe
nop
adc
orl
stc
orb
mul
jmp
pop
pop
daa
inc
add
loope
jnp
mov
test
pushf
add
pop
xchg
xchg
xor
ss
adc
push
rorb
and
or
pop
stc
sbb
lea
push
inc
ret
or
mov
mov
mov
ret
fisttpll
xchg
or
into
pop
xchg
ret
into
sub
addr16
push
inc
popf
insb
scas
inc
xor
add
or
sbb
xor
inc
push
pop
xlat
mov
addr16
inc
push
push
push
jnp
inc
inc
or
sub
ja
and
call
pop
es
fimuls
daa
inc
push
aam
mov
mov
mov
pop
cmp
inc
mov
pop
or
orl
adc
sbb
mov
int3
xchg
add
add
jmp
mov
adc
bound
or
inc
movb
jo
push
xchg
sub
enter
dec
pop
push
or
test
mov
fadds
fcomps
inc
insb
dec
lret
dec
cmpsw
adc
xchg
mov
mov
cmpsb
inc
lret
and
or
inc
mov
xchg
sub
dec
sbb
sub
loope
or
sub
dec
enter
pop
ds
sub
pop
fbld
and
fs
or
dec
pop
lret
push
adc
out
pusha
mov
pop
or
movsl
lahf
or
mov
xchg
or
xchg
or
mov
lods
into
aaa
push
sbb
mov
sub
push
inc
je
inc
and
mov
add
out
lds
sub
das
xor
loope
push
fstl
jne
push
sti
in
pop
test
inc
fnsave
cmp
fcmovu
jmp
add
imul
push
and
out
cmp
lds
int
insl
pop
xorl
push
call
sub
and
jge
lods
iret
adc
das
in
sbb
jne
lret
cmp
jnp
insb
nop
repz
imul
dec
sbbb
sub
in
sub
pop
mov
push
xor
test
adc
xor
aaa
jo
pop
fcoml
ds
add
pusha
jne
fs
mov
lret
jno
adc
stos
add
dec
and
lret
sbb
mov
lds
pop
enter
lret
outsb
addr16
cs
add
jb
jnp
push
sahf
addb
or
loop
mov
cmpb
jge
adc
xchg
jns
orl
movsb
lock
lods
out
and
sbb
out
and
fldt
sbb
dec
add
pop
dec
cmp
jne
jno
ja
std
push
ja
cltd
pusha
loope
or
mull
sub
les
mov
fisttpl
adc
loopne
and
les
jae
cwtl
add
and
jnp
cmp
push
int
in
jo
sbb
xor
cmp
test
adc
enter
add
js
in
jl
add
xchg
in
mov
and
fisttps
in
mov
repnz
dec
outsb
xchg
js
and
pop
das
sbb
pop
xchg
add
dec
mov
mov
movsb
cmp
mov
movsb
cmpsl
out
pop
inc
lods
iret
sub
cmp
xor
or
js
popf
mov
ret
call
mov
popf
and
and
out
jnp
push
cltd
and
leave
movsl
ds
fstpl
xor
mov
mov
int
aaa
jns
xor
int3
popl
daa
fadd
pusha
sub
mov
jg
mov
cmpsl
add
add
push
and
cmp
out
pop
sub
and
je
and
jg
inc
pushf
cwtl
mov
jbe
cmpsb
fwait
dec
insl
sarb
xor
sub
jg
sub
in
fidivs
mov
add
add
fisttpll
jnp
lcall
jg
xor
xchg
or
dec
fistps
cli
fiaddl
jnp
movsl
jle
xchg
dec
cmp
scas
dec
cmc
mov
xlat
int
add
hlt
mov
add
pop
les
xor
cmp
scas
and
jl
cmp
popw
add
mov
sub
mov
ja
pmulhuw
xor
divb
push
dec
add
xlat
jo
test
fdivs
es
sub
int
fld
sub
jnp
pop
xlat
add
popa
fninit
push
pop
mov
lods
bound
push
jecxz
dec
out
jae
push
fdivrl
cltd
out
addb
out
pop
das
and
xchg
jle
and
jecxz
mov
mov
or
out
adc
arpl
pop
and
jo
add
sbb
in
dec
fimuls
dec
ja
fsubrs
fimuls
pusha
lock
aas
pushf
mov
insb
testb
mov
dec
cmpsb
popf
fildl
or
push
scas
cmp
or
push
nop
call
push
add
jb
mov
pcmpgtd
mov
inc
pop
movsb
outsl
outsb
clc
jmp
testb
loopne
sti
jo
xor
daa
lods
adc
dec
xchg
dec
clc
fisttpll
sbb
loopne
rol
fsubs
inc
scas
test
and
inc
push
ret
jnp
inc
jbe
lea
popa
aaa
in
cld
sahf
pusha
jl
sarb
cvtdq2ps
xor
std
cld
jge
jb
jp
adc
add
in
xor
mov
mov
xor
mov
lret
aaa
mov
sbb
jbe
sub
test
fstl
mov
mov
dec
ret
ja
or
idivb
pushf
push
arpl
jge
fs
jle
dec
test
xor
sub
loop
cmp
and
or
sbb
sbb
push
and
pop
dec
mov
inc
cmp
lcall
push
and
and
mov
test
rolb
mov
pop
les
or
fs
mov
lods
rcrb
dec
daa
or
dec
dec
lock
ja
mov
fnstsw
arpl
dec
frstor
xchg
push
xor
pop
and
daa
xchg
inc
add
mov
adc
out
pop
neg
and
add
dec
sbb
jae
jnp
xabort
and
pop
ucomiss
imul
add
leave
divb
dec
inc
sub
fcoms
mov
int3
std
icebp
inc
lds
or
sub
jb
imul
sub
loope
add
lods
iret
dec
aaa
jnp
push
out
ret
fwait
popf
mov
movsl
mov
jmp
pop
imul
out
mov
dec
lea
cmp
insb
nop
push
movsb
sub
clc
adc
lods
bound
int
adc
fnstenv
jnp
jbe
sub
sub
and
adc
add
jge
ja
addl
out
jnp
jnp
xchg
jb
push
arpl
or
mov
jle
enter
mov
fstl
sub
jb
xchg
and
mov
push
push
test
mov
arpl
or
or
xchg
xor
enter
push
xor
cmp
out
fnstcw
nop
scas
pop
jp
outsl
mov
pop
adc
push
rol
divl
clc
dec
cmpsl
iret
xor
loope
jl
jbe
jne
and
dec
sbbl
je
imul
add
rol
dec
fmull
ds
adc
cwtl
gs
and
pop
ret
xchg
jo
outsb
jmp
adc
sub
imul
sbb
test
dec
stos
cmp
lds
scas
ret
out
pushf
ficoms
push
jno
cmp
bnd
xor
ss
xorb
out
sti
lea
sbb
ret
daa
insb
and
cmp
icebp
mov
ds
jp
out
sub
fdivl
and
movsb
data16
xchg
mov
rcrb
shll
adc
sti
loopne
sbb
cmc
cmp
mov
ljmp
in
sbb
xadd
sbb
dec
push
lcall
mov
push
pop
adc
pusha
cmp
js
cmpsl
or
rorl
cmp
or
int3
and
cmp
add
scas
andl
std
hlt
adc
ss
je
gs
jo
test
mov
popa
xor
push
pop
jb
rcll
dec
lods
loope
adc
dec
movsb
negl
jmp
fsubrs
popa
cmp
mov
es
test
lock
sbb
imul
popa
fs
mov
inc
or
dec
sub
lret
pusha
out
ffreep
mov
mov
fdivrs
jmp
sbb
mov
sbb
ret
nop
push
and
xor
jmp
daa
jle
xor
xor
inc
add
stc
cmpsb
push
sbb
xor
out
adc
cmp
ret
dec
pop
and
cmpsl
mov
add
cmpsl
adc
dec
inc
push
daa
popa
andl
mov
xlat
fldenv
lret
adc
or
cmp
sbb
pop
cltd
arpl
arpl
lods
imul
dec
push
fsubl
cmpsl
outsb
rol
mov
or
push
adcw
inc
daa
jne
mov
or
cmp
ss
xor
jns
jno
pop
jl
outsb
add
daa
mov
cli
xchg
dec
mov
jle
data16
lret
pop
divl
fucom
and
outsl
add
mov
lcall
sbb
aas
popf
jo
adc
imul
pop
dec
ss
shll
iret
clc
fmull
push
add
jg
mov
inc
mov
dec
jne
sub
pop
iret
idivb
aam
in
jae
mov
mov
dec
ficompl
pop
pop
popa
hlt
lock
rdmsr
mov
shll
cmp
or
aam
jg
sbb
adcl
inc
sbbl
sub
cmc
adc
psubd
cmpsb
inc
aas
pop
inc
addb
loop
rolb
push
ret
stos
adc
ret
dec
or
scas
add
jnp
lods
add
xor
cmp
pop
jo
fs
ficoms
inc
add
dec
mov
xchg
cmp
pop
xor
popf
sbb
ja
mov
fcomp
and
loop
pusha
sub
mov
fwait
xor
sbb
adc
sbb
les
outsl
jg
push
dec
sbb
mov
jbe
rcrl
sbb
dec
fldt
loopne
sti
daa
sbb
pop
add
ds
shlb
and
ss
cmp
and
sub
aas
inc
lds
mov
and
inc
and
outsl
adc
jb
xchg
adc
mov
subl
bound
outsl
testl
inc
popf
stc
in
jnp
mov
flds
arpl
or
sti
test
push
or
loope
and
popa
mov
inc
push
cmp
jmp
stos
push
mov
nop
cmp
xchg
cmp
mov
sub
rorb
cmp
or
addl
ret
mov
stc
mov
mov
lds
dec
bound
pop
cmpsl
arpl
mov
mov
adc
xchg
sub
mov
cmp
lock
bound
mov
addl
and
pop
push
add
movsb
sbb
xchg
aas
lahf
push
cwtl
mov
jae
sub
mov
xchg
lods
sbb
push
hlt
dec
jo
outsl
repnz
pop
pop
jmp
sub
scas
js
jp
mov
test
push
cmp
pop
fiaddl
sub
cwtl
aad
dec
jae
int
mov
lahf
cwtl
in
xor
fwait
pop
adc
leave
out
xor
in
lods
sub
addr16
and
sub
out
or
push
xchg
dec
imul
clc
fsts
fxam
arpl
mov
aas
mov
lock
ljmp
out
mov
sbb
pop
stc
pop
lods
sahf
lods
xchg
mov
xchg
test
sbb
idivl
mov
jnp
ds
fidivl
rorb
mov
fcom
xchg
pop
or
stos
shr
mov
leave
sub
scas
cmp
sbb
das
js
shl
into
test
daa
shrb
adc
and
pop
push
lea
repz
push
sub
mov
pop
adc
inc
aas
sub
shlb
ffreep
loope
aaa
imul
movsb
add
and
mov
push
mov
adc
es
adc
pop
dec
es
inc
pop
mov
inc
aam
daa
jmp
fisubrl
ret
bound
inc
test
lock
repz
inc
stos
scas
fldenv
jp
and
imul
js
jo
jne
or
fcomps
and
lods
jecxz
call
xorb
lock
shrl
jle
loopne
test
pop
add
pop
mov
pop
xor
adc
dec
xor
in
daa
enter
fidivs
inc
lret
pop
inc
sub
insb
xchg
test
pop
and
add
push
xchg
arpl
and
jmp
dec
sarb
das
adc
xor
imul
pop
adc
or
in
inc
mov
sqrtsd
adc
test
nop
jle
mov
lahf
adc
xor
arpl
jns
inc
clc
and
pop
or
rcr
dec
and
jl
fmuls
add
mov
lcall
dec
pop
adc
xchg
ret
xor
cli
fmul
push
int3
fsubl
adc
push
popf
pop
popf
push
jge
pusha
push
fildll
insb
enter
xchg
rol
cmp
sub
test
push
add
sub
dec
sub
fmuls
leave
ficomps
jp
daa
dec
andb
xor
out
or
repnz
daa
ds
movb
clc
cmp
add
lock
or
int3
std
mov
add
and
jl
xor
and
dec
and
imul
sbb
sbbl
pop
int
rcr
int3
adc
fbld
dec
shrb
ret
mov
mov
imul
pop
lods
mov
push
in
mov
mov
adc
jbe
pop
dec
ret
fucomi
scas
cmc
mov
cmpsl
inc
dec
xchg
or
int3
loopne
push
jg
icebp
popf
push
push
or
xchg
xchg
inc
cwtl
and
push
inc
pop
mov
jle
clc
stos
popa
aam
rorl
or
leave
sub
inc
mov
shll
sbb
inc
divl
xor
int3
cmp
sbb
mov
inc
xchg
push
ret
or
xchg
sarb
test
and
mov
hlt
mov
cmc
adc
jg
pop
xor
jbe
cmp
bound
cmpsl
and
lock
mov
xchg
fcmovnu
dec
adc
mov
out
popf
add
pop
mov
push
pop
push
mov
aam
les
inc
jns
fmuls
fs
dec
cmpsl
xchg
inc
adc
push
lds
push
mov
popf
push
andb
mov
daa
mov
xor
sbb
adc
add
sub
fbld
and
insb
cmp
aad
daa
inc
mov
mov
pusha
jbe
lahf
dec
add
popf
xor
iret
and
sub
fidivrl
cs
gs
leave
cmp
rolb
into
mov
pop
test
pop
xor
pop
jl
cs
inc
ret
sbb
dec
iret
out
test
mov
in
inc
cmp
xchg
in
cmp
add
mov
loopne
jo
int3
inc
add
js
and
pop
xor
cmp
push
dec
push
test
rolb
jnp
xchg
ret
pop
pop
sahf
inc
xor
and
push
lods
mov
inc
nop
pop
pushf
aaa
cmpsl
ret
sbb
sbb
mov
imul
shlb
inc
pushf
data16
rcrb
int3
bound
and
jno
icebp
add
loopne
stc
insb
mov
push
rcrl
lods
pop
orb
fcmovne
inc
xlat
and
std
scas
enter
addr16
ljmp
cmp
lret
outsl
cmp
mov
test
xchg
push
xchg
mov
aaa
es
popa
fsts
sub
aaa
jmp
rcrb
push
add
add
jmp
xchg
xchg
addl
xor
nop
ret
push
cmp
adc
outsl
icebp
fsubl
call
das
inc
andl
or
xor
push
cs
push
cmp
mov
pop
cmc
in
sarl
int3
fdivr
push
stos
and
push
lds
xor
nop
sbb
adc
cmp
dec
push
sub
and
sub
add
in
jbe
xchg
xor
push
sbb
fists
daa
jo
xor
andl
or
inc
push
sub
add
and
test
and
and
jge
pop
andl
fmulp
and
imul
popa
es
bound
jl
ftst
outsl
mov
outsl
dec
iret
mov
fldenv
les
xor
xchg
sub
xchg
sub
add
arpl
dec
or
jecxz
or
enter
icebp
ja
inc
cmp
lods
jg
pop
outsb
enter
and
loopne
and
fsubl
push
stos
mov
pop
lock
dec
or
scas
popa
loope
lods
and
fisttpll
lret
sbb
sbb
push
ret
addb
xor
or
adc
stos
fs
jg
jle
push
dec
push
push
adc
mov
ds
adc
push
sub
sub
fidivl
test
cli
inc
sub
or
or
das
add
mov
cmpsb
frstor
add
out
in
daa
sbb
xchg
inc
popf
daa
dec
jo
mov
loope
adc
popa
int
outsl
adc
add
mov
stos
xor
inc
pop
dec
cmpsl
or
mov
adc
lret
arpl
inc
inc
bound
arpl
jle
andb
adc
sbb
out
push
sub
jo
adc
or
sub
stos
cmp
cmp
mov
inc
xchg
dec
xor
sbb
daa
pop
nop
fiaddl
xchg
mov
jmp
xchg
xchg
cmpsl
out
call
test
xor
push
adc
sbb
add
or
sahf
repnz
fwait
js
call
out
mov
push
jo
fsubl
xchg
ss
xchg
loopne
inc
aaa
xor
or
shrl
sbb
shl
lret
js
push
in
test
popf
adc
mov
mov
pop
bound
or
adc
inc
ret
lahf
fnstsw
inc
adc
mov
setp
scas
iret
push
lahf
cmp
push
adc
aas
inc
and
jg
push
into
sub
es
popf
fadds
outsl
adc
mov
scas
cs
adc
or
inc
call
addl
xor
adc
xchg
pusha
push
jg
and
sub
xor
out
and
and
scas
out
loope
push
lods
cmpsl
scas
mov
and
add
outsb
ret
imul
mov
or
xchg
and
and
sub
movsb
test
jle
ret
xor
repnz
mov
call
mov
fistpl
xor
and
ret
outsb
adc
shrb
nop
movsl
lcall
pop
inc
enter
and
add
arpl
lods
clc
fistps
cmpsl
sub
jnp
and
mov
leave
dec
add
or
sbb
sbb
pop
shrl
aaa
pop
and
xchg
adc
jp
lret
add
mov
test
sub
lock
imul
adc
scas
ja
cmp
js
push
jb
sbb
mov
push
fnstcw
jmp
xor
jg
add
lcall
shl
int
scas
das
in
push
pop
push
scas
mov
sbb
in
mov
or
imul
xchg
sub
inc
cmp
xor
das
jl
out
stos
loop
dec
mov
cmp
mov
aas
daa
imul
icebp
cmp
cmp
cmp
pop
cmpsb
lcall
inc
add
mov
mov
xor
or
pop
sub
fs
push
push
and
or
and
out
loope
fbstp
fdivs
and
dec
inc
and
aad
sti
cli
xchg
fcomp
jne
stos
and
xor
sbb
mov
dec
repz
movsb
cmp
fdivs
loopne
in
jae
movsb
test
shll
sub
test
inc
and
add
inc
pushf
push
dec
roll
aam
jle
mov
int
fmul
arpl
nop
add
fldl
pop
push
iret
mov
pop
ja
dec
sti
push
adc
fcmovne
popf
or
cmc
jp
out
sbb
adc
call
and
push
jnp
fsub
xor
aas
out
lret
and
xor
fnstenv
fimuls
mov
pop
in
xor
shll
dec
add
out
addb
mov
mov
adc
cmp
rcrl
in
aad
inc
iret
sub
jo
jb
repnz
insl
pop
sbb
adc
lcall
imul
add
mov
call
inc
scas
xor
sub
sbb
cmp
inc
addr16
xor
or
xlat
js
dec
mov
out
xchg
adc
sbb
pop
inc
hlt
lds
ljmp
das
cmpsb
int3
or
into
call
add
push
add
ret
daa
push
cmpsb
ret
and
pop
xor
test
test
scas
clc
xchg
popf
nop
add
mov
les
daa
pop
pop
mov
sbb
dec
pop
sbb
pop
adc
jge
push
sub
pop
mov
fs
test
sbb
pushf
or
call
adc
or
xchg
sub
pushf
sub
aad
mov
daa
cmp
cli
xor
lods
push
movsb
sbb
adc
adc
add
jg
cmc
fstpl
jp
adcl
add
fs
sub
inc
loop
mov
cmp
mov
xor
outsb
cmpsl
dec
jb
icebp
iret
lahf
dec
lods
cli
nop
fidivl
pusha
jle
and
das
leave
loopne
aam
stos
or
jnp
adc
ret
cmp
or
sbb
sub
rcll
stos
pop
pusha
das
add
adc
ficomps
or
test
push
xchg
rcll
shll
and
scas
mov
xor
fmuls
jl
into
pop
rcl
push
movsb
sub
sbb
xor
mov
inc
cmp
and
into
jp,pt
out
inc
mov
inc
ss
nop
or
enter
test
jne
mov
cmpsl
in
mov
or
xor
ss
push
es
mov
leave
jge
insb
mov
mov
mov
in
xchg
mov
xchg
movd
insb
andl
dec
or
sbb
fnsave
xchg
and
jle
dec
cmc
ss
int
mov
inc
sahf
cmp
pmulhuw
cmp
cmp
mov
inc
aaa
pushf
and
dec
pop
es
adc
inc
fsubl
jb
add
sub
pop
hlt
bound
xchg
pusha
inc
js
je
out
sbb
xor
nop
fwait
nop
mov
popa
int3
cli
sbb
cli
sahf
xchg
adc
and
scas
and
sbb
or
jo
push
iret
inc
hlt
insl
dec
xchg
in
dec
shrb
shlb
xchg
movsb
es
sbb
jbe
aad
add
testb
mov
jp
shll
mov
inc
loopne
popa
fcomps
movsl
inc
fiaddl
inc
je
dec
or
mov
rcl
nop
xchg
push
sub
jne
cltd
test
sti
xchg
jl
jecxz
push
push
dec
loope
sbb
mov
inc
jbe
fwait
sahf
dec
cmp
or
ret
adc
add
xchg
in
jecxz
dec
push
vcmpngtsd
sbb
pop
adc
add
lahf
in
xor
aas
ret
lds
in
push
into
in
pop
inc
or
bound
int
inc
cmp
rclb
inc
ret
sbb
dec
ret
sbb
push
sbb
outsl
and
mov
arpl
test
loope
add
daa
and
mov
or
push
mov
ficoms
mov
mov
adc
fidivs
data16
pop
inc
movsb
in
sub
imul
aaa
ds
es
and
popf
lock
and
xchg
adc
cld
jecxz
sbb
ret
add
mov
negb
lret
jp
add
fildl
mov
and
push
loop
and
shrb
out
inc
dec
sbbb
mov
incl
xor
icebp
jmp
addl
scas
ss
push
ffreep
mov
adc
sub
sti
jnp
pop
push
sub
cmp
cmp
pop
inc
adc
cs
or
adcb
es
das
out
add
shr
push
leave
push
cmp
xor
lret
loopne
and
lds
push
lahf
sbb
into
pop
out
daa
inc
scas
shl
jge
sbb
sub
fstl
fisttpll
fsubs
xorl
mov
jmp
fwait
ret
les
or
adc
and
dec
adc
pop
jg
sarw
sti
mov
mov
aaa
or
push
cmp
dec
cmpsl
bound
xchg
idivl
push
and
mov
sub
cmp
and
leave
push
sub
leave
push
inc
mov
jl
adc
adc
das
mov
clc
push
mov
sbb
clc
sbb
lcall
sub
push
lea
cmp
pop
xchg
add
movsb
dec
or
mov
cmp
ret
ret
sbb
xor
and
or
inc
and
js
jge
daa
push
add
pushf
sbb
sub
shrb
fcoms
ret
sbb
pop
sub
out
dec
push
cmp
pop
icebp
add
cmp
sbb
inc
add
sub
les
ljmp
pusha
sbb
lret
idivb
cli
inc
xchg
inc
push
and
frstors
pop
dec
jae
or
shl
fisubl
adc
adc
scas
add
insb
cwtl
ret
jmp
in
insb
daa
es
jge
add
and
inc
shll
adc
inc
mov
mov
out
divl
cmp
sbb
jl
fwait
xor
adc
sbb
sub
stos
xchg
in
mov
movsl
pop
sarl
shll
push
mov
xchg
jmp
and
mov
sub
loope
aam
or
push
mov
das
es
or
or
mov
pusha
jecxz
or
dec
lcall
push
movsb
das
push
cs
fcomps
sbb
xchg
in
xchg
sub
sbb
incl
int
mov
and
movsb
pop
or
sbb
ljmp
sub
mov
inc
fldenv
dec
push
fcompl
mov
inc
out
and
jmp
fdivrl
popa
xor
or
sbb
gs
fidivs
scas
cmpl
inc
cli
in
pushf
inc
sub
and
rorb
push
and
das
push
xor
pop
rclb
cmpsl
loopne
repnz
out
in
movsl
xchg
push
cwtl
jmp
sub
mov
cli
jo
or
fdivl
sub
cli
dec
lds
mov
fcmovnu
pop
int3
jg
lret
and
mov
pop
leave
cwtl
push
dec
sbb
push
or
xchg
and
cmc
int
mov
movl
push
mov
imulb
sub
leave
aad
sub
ja
jmp
int3
stos
and
push
sbb
lods
in
arpl
data16
mov
push
call
mov
and
cli
out
and
and
addr16
sub
inc
movsb
push
in
jp
lds
fisttps
mov
lock
idivl
insl
fs
mov
in
aad
fldt
insb
or
imul
out
in
dec
scas
jnp
and
cli
int3
inc
mov
popf
int3
adc
in
int3
adc
adc
or
aam
addr16
cmovs
inc
xchg
pop
inc
outsl
jge
inc
mov
push
pop
or
outsl
ffree
popf
sub
xor
dec
sub
popa
arpl
mov
or
jo
out
fdiv
movsb
mov
pop
fisubs
jo
mov
and
adc
addb
fsubrl
cltd
dec
scas
sbb
mov
fnstcw
and
mov
jo
adc
test
les
lds
test
add
xor
add
insb
std
push
and
mov
enter
std
adc
sbb
jle
or
mov
scas
cwtl
xchg
sbb
ja
les
jecxz
sub
adc
mov
mov
jl
mov
imul
es
or
loop
adc
pop
pop
jnp
xor
loopne
les
mov
mov
mov
and
movsb
jmp
cltd
push
les
adc
pop
or
mov
ja
movsb
stos
pushf
insb
mov
jge
add
fdivrs
jne
lods
ds
lahf
jno
cwtl
aam
sub
nop
imul
nop
or
jg
dec
push
int
movsl
jo
mov
sarb
dec
sbb
or
sbb
xchg
enter
cmp
dec
mov
pop
shrl
movsb
roll
insb
stc
lods
popf
addr16
arpl
roll
mov
xor
and
pop
adc
roll
push
mov
add
add
dec
mov
inc
adc
add
and
std
and
sahf
jnp
and
cmpl
dec
and
js
push
aam
pop
loopne
ja
stos
push
scas
or
nop
sbb
jg
stc
inc
xorb
ja
stos
jmp
push
or
xor
insb
push
xchg
mov
jge
mov
inc
xchg
xor
loope
es
fmuls
or
ja
bound
xor
jns
fs
es
iret
loop
rcll
push
cmp
jmp
jecxz
out
push
lods
dec
sbb
outsb
xchg
mov
out
mov
or
mov
jge
dec
mov
jmp
fdivs
dec
jne
popf
add
out
dec
or
push
adc
mov
xor
cmp
mov
and
cwtl
jge
dec
je
iret
daa
jnp
xchg
clc
xor
pop
iret
fsubrl
dec
push
xor
mov
loopne
insb
or
mov
mov
inc
sbb
addr16
pop
mov
jg
push
daa
rcl
mov
mov
data16
jle
sub
add
add
inc
fwait
js
and
adc
xor
loopne
sub
xor
test
pop
mov
rol
inc
mov
rcrb
adc
and
inc
sti
call
incb
xchg
cltd
sbb
call
mov
and
movsb
and
fildl
ljmp
js
jne
inc
and
sbb
inc
dec
ret
dec
mov
lods
push
adc
das
clc
sbbl
push
outsb
pop
cmpsl
insl
mov
lods
loop
push
adc
dec
and
in
adcl
mov
push
out
call
das
cmpsl
sbb
sbb
mov
aad
out
jmp
add
and
test
and
fcomps
cmpsb
setl
adc
fsubs
jo
test
cwtl
mov
cmp
ja
xor
roll
add
cld
imul
inc
cmp
xor
jnp
scas
xchg
push
push
frstor
add
rolb
adc
lcall
jnp
in
dec
das
or
insl
jl
ret
rol
aas
add
cmp
xchg
lcall
or
data16
lea
imul
jg
loope
and
pop
jno
repz
shll
cmp
dec
je
dec
xor
sub
and
sarb
pushf
stos
push
orb
inc
and
loopne
imul
iret
adcl
inc
xorb
je
jmp
sbb
or
inc
iret
inc
cmp
add
fs
jb
out
cli
inc
jne
outsb
sbb
sbb
in
call
jle
xchg
sbb
cmp
fwait
and
push
xor
jns
test
jo
jb
dec
test
adc
inc
inc
jmp
cmpl
adc
movsl
and
divl
out
stc
test
sub
ljmp
stos
pop
lods
rolb
push
xchg
inc
scas
jae
adc
mov
xor
loope
loopne
fidivs
add
js
insl
mov
aad
in
sub
bswap
cltd
cmp
add
shlb
add
adcl
hlt
inc
dec
and
sbb
xor
filds
fwait
add
and
test
into
and
pop
stc
aaa
stos
ret
sahf
shlb
arpl
jne
xor
or
push
mov
xchg
stos
test
dec
shll
xor
dec
push
xor
dec
xor
fisubs
jp
and
jmp
sub
xchg
or
sbb
xchg
sub
cmp
fldenv
ds
and
pop
in
xchg
pop
outsl
ja
pop
aaa
jmp
lret
ret
mov
sub
ret
xor
loope
je
mov
sub
ficomps
xor
jmp
add
jbe
dec
fidivrs
jbe
nop
add
add
outsl
add
or
pop
test
sub
mov
out
daa
cs
xchg
adc
and
add
mov
push
mov
test
orb
pop
adc
push
lea
les
dec
sub
xchg
xchg
icebp
adc
adc
clc
ret
mov
lea
aam
inc
pushf
sbb
aas
in
mov
sub
sub
bound
dec
rorb
es
push
xor
lock
rol
jl
mov
jno
and
adc
xchg
dec
sbb
out
test
test
sub
ja
mov
sbb
inc
scas
or
mov
fisubs
sub
and
add
and
into
xchg
sub
int3
lea
hlt
hlt
aam
push
adc
mov
sbb
sbb
bound
fs
or
popf
jns
adc
fcoms
mov
xor
fs
mov
xchg
pop
xchg
xchg
ja
fwait
popf
push
inc
outsb
inc
or
je
adc
xlat
repnz
fdivs
mov
je
out
xchg
or
adc
lea
movsb
sbb
mov
and
fs
pop
leave
sbb
mov
aaa
cs
sbb
fstpt
popa
jl
outsl
mulb
insb
xor
lea
std
icebp
xor
jp
jle
mov
orl
lcall
lds
dec
daa
adc
sti
testl
lods
xchg
inc
fmuls
or
lods
cmpsl
sbb
and
mov
ja
mov
iret
rol
movb
popa
test
aad
xor
icebp
cmp
dec
stos
rol
jecxz
mov
cmp
or
push
cmp
in
or
mov
call
xor
push
jns
jae
pop
push
daa
adcb
jno
bswap
mov
lret
xor
shll
popa
stos
xor
into
dec
inc
stos
xchg
and
imul
add
les
lods
mov
jnp
or
adc
fcompl
sbb
ds
mov
xchg
into
clc
incl
push
daa
shrd
jno
divb
in
and
xor
pusha
adc
or
into
fisubs
sbb
lods
sbb
jae
imul
mov
mov
loopne
sti
leave
adc
mov
xchg
ljmp
cmp
push
leave
xor
test
xor
aam
lods
fimuls
adc
fldl
mov
sarb
lahf
bnd
sbb
rol
add
or
mov
and
xlat
lock
add
shl
lods
sub
icebp
xor
or
push
push
push
rol
pop
ja
xchg
ret
sub
jno
cmp
mov
push
add
sbb
lret
pusha
inc
sub
adc
inc
jg
daa
cmpsl
dec
xor
testb
cmp
mov
mov
mov
hlt
adc
or
dec
adc
pop
cmpl
ja
lret
test
or
adcl
fcoml
and
pop
push
push
int
ds
jecxz
loopne
lcall
dec
scas
test
add
std
loop
scas
cltd
in
adc
stos
jno
inc
xorb
xchg
pusha
pop
or
iret
xor
movsb
xor
subb
sbb
fildl
jp
jns
test
sub
add
lods
bound
lods
and
dec
out
insb
push
xlat
mov
mov
mov
jnp
in
je
addr16
cltd
and
sub
or
imul
jae
inc
xchg
mov
int
inc
jno
hlt
dec
push
mov
xchg
cwtl
add
mov
nop
test
jno
in
sub
push
pusha
xor
sub
xchg
sub
mov
inc
test
mov
loop
decb
push
sahf
mov
sub
sbb
in
and
xor
push
test
jne
rcrb
repz
shrl
jne
and
sub
jmp
cmp
clc
in
push
popa
mov
iret
jl
mov
mov
mov
rclb
xchg
sub
pop
lret
cmp
ljmp
adc
mov
out
adc
pop
xor
inc
jne
insl
and
or
pop
js
stos
xor
adc
test
inc
add
je
adc
xchg
push
mov
pop
jmp
and
fwait
mov
in
or
sbb
add
pusha
pop
cmpsl
out
inc
add
push
mov
add
cld
pusha
js
call
icebp
cwtl
jo
and
push
shll
inc
cwtl
leave
je
bsf
xchg
test
ljmp
rorb
fcoml
loop
mov
jb
sbb
pop
mov
shlb
sarl
jo
push
aaa
mov
xchg
adc
adc
add
inc
popa
mov
or
push
inc
loopne
or
popf
pusha
dec
mov
adc
incl
aas
lods
shrb
lods
orl
int
sbb
loopne
mov
in
imul
mov
cmp
cmpsb
xchg
je
add
add
jge
inc
out
and
popf
ds
sti
xor
mov
enterw
add
inc
std
test
mov
stos
mov
or
add
or
inc
addr16
xchg
mov
stc
mov
cmp
vsubpd
xchg
xchg
push
xor
pop
add
dec
es
adc
cmp
and
adc
test
test
addb
lock
push
mov
test
pop
add
and
call
push
mov
sbb
xchg
scas
or
pusha
inc
iret
sub
jne
loope
mov
cmpsb
lock
push
xor
xor
push
dec
rolb
inc
add
jo
xchg
call
dec
pop
nop
mov
inc
mov
jmp
adc
and
inc
test
ret
xchg
dec
add
add
push
mov
jo
js
adc
mov
inc
xchg
mov
filds
idiv
int3
test
mov
cmpsb
dec
sbb
push
call
rcl
js
xchg
push
push
sub
xchg
adc
sbb
fwait
insl
or
es
adc
lret
jns
les
inc
and
aam
push
subl
and
xor
jnp
pop
bound
sub
jle
ret
and
jecxz
dec
jbe
out
cwtl
push
xor
add
int3
xchg
shll
dec
out
adc
push
xor
push
mov
push
push
aaa
mov
and
int3
mov
in
push
mov
dec
jb
fistps
movsb
sub
jno
sub
xlat
jle
cmp
push
jnp
int
ss
stos
iret
inc
xlat
xchg
add
fiadds
add
mov
dec
loopne
add
mov
cmpsb
scas
das
into
stos
bound
repz
and
shl
add
or
xor
jmp
mov
sbb
cwtl
xor
and
lret
push
adc
popa
gs
ficoms
mov
xchg
add
ret
fadds
mov
out
mov
or
fldcw
push
insb
movsl
aam
pusha
dec
adc
pop
xchg
lock
sbb
jp
xorb
fmull
push
call
bound
mov
push
pop
mov
add
stos
stos
test
and
xlat
mov
sbb
movzwl
push
je
jp
xchg
data16
repnz
std
sahf
pop
mov
andb
loopne
sahf
mov
lods
sub
dec
pop
or
xor
emms
jg
xchg
aaa
pop
ss
mov
mov
in
sbbb
cmp
or
pop
xor
pop
mov
push
add
xchg
xchg
sub
sbb
mov
loopne
xchg
mov
sub
jle
xor
fisubs
pop
pop
inc
sub
dec
ljmp
dec
ficompl
fcomps
or
xchg
outsl
or
xchg
test
std
sub
loop
cld
add
add
push
push
out
xorb
gs
arpl
das
dec
mov
popa
sub
popf
pusha
cmp
mov
sub
add
sub
je
div
push
adc
push
das
movsb
push
sub
and
mov
aad
cld
jl
or
inc
stos
push
mov
loopne
enter
adc
xor
ret
and
adc
push
adc
insl
shlb
jmp
in
cmp
stos
dec
adc
sbb
sbb
pop
pop
adc
addr16
syscall
mov
pop
xlat
adc
mov
dec
or
add
es
imul
jl
push
cmp
shll
dec
mov
adc
arpl
sbb
test
lock
push
enter
or
incb
pop
divl
adc
add
sbb
idivb
push
dec
insb
dec
fsubs
test
int
inc
popf
xor
shll
or
or
adc
and
mov
dec
add
aas
cld
or
xchg
xchg
popf
xor
xlat
inc
sahf
or
mov
and
movsb
inc
cs
cmp
aam
daa
aas
dec
add
xchg
ss
pop
in
stos
leave
sbb
and
or
inc
fsubl
out
ja
mov
dec
je
shrb
call
test
lock
adc
lret
mov
rol
cmp
rcrl
xchg
adc
aas
and
sbb
dec
jo
sub
loop
gs
lods
flds
mov
sub
in
rolb
cmp
sbb
sbb
adc
and
orb
mov
xlat
mov
mov
into
scas
jp
mov
mov
int3
in
cmp
xchg
push
adc
cmpsl
andb
adc
sbb
mov
rclb
or
lea
cli
andb
into
int3
or
lret
into
mov
xchg
mov
push
scas
sub
iret
je
pushf
sub
fists
lea
test
sub
dec
xor
pop
rclb
xor
pusha
fisttps
mov
arpl
jnp
das
and
enter
dec
jle
dec
push
insb
mov
imul
insb
rcr
aas
sbb
aas
addr16
aas
rcrl
xchg
jbe
add
pop
in
adc
pop
mov
jnp
ret
cmp
inc
xor
mov
out
inc
push
test
push
jno
mov
xchg
jmp
sub
in
dec
xchg
pop
xchg
in
and
xchg
sbb
mov
addr16
sti
in
lods
dec
cmp
loope
shl
ja
push
adc
data16
xor
xor
push
mov
push
stos
testl
add
int
fs
mov
or
insl
cs
imul
insl
cmp
test
push
adc
pop
mov
pop
outsb
adc
insb
shlb
inc
xchg
push
scas
add
fnstenv
cmpsl
or
pop
ret
pop
inc
sub
jge
pop
insb
insb
cmp
xchg
xor
xchg
cmp
cmp
cmp
test
btr
aaa
sub
lods
cmc
stos
test
and
or
leave
dec
pop
mov
adc
jmp
jo
sub
or
fistpl
bound
xchg
mov
lret
and
ret
sub
mov
scas
xchg
xlat
lret
add
and
outsl
imul
mov
sub
test
insl
and
sbbl
iret
insb
push
popl
std
push
outsb
dec
cmp
mov
es
push
xchg
test
inc
cmpsl
dec
ss
push
xchg
jnp
pop
mov
push
xchg
or
mov
scas
repz
cmp
mov
mov
popa
or
mov
mov
jecxz
mov
fsubs
out
sbb
imul
cltd
mov
fs
aaa
repz
mov
xchg
pop
jmp
xchg
lock
sti
pop
ret
imul
sub
pop
xchg
repnz
andl
ret
pop
fwait
inc
fbld
test
mov
loope
lret
push
push
aaa
cmpsl
dec
mov
out
das
pop
das
and
addr16
mov
fstpt
dec
das
or
pushl
and
push
lret
xchg
push
cmp
sti
psllq
hlt
cs
sub
das
cmp
sti
out
cmp
call
pop
js
lods
aaa
fcomps
aaa
push
cld
ret
sub
jge
xorl
movsb
mov
cmp
mov
dec
mov
xor
sbb
xlat
out
es
cmp
mov
cmp
sbb
jbe
je
ss
dec
js
dec
je
jg
aaa
add
add
jnp
stos
arpl
dec
call
xor
jl
das
or
enter
test
mov
pusha
mov
mov
gs
xchg
insb
insb
fnstcw
aaa
jg
pusha
xchg
hlt
mov
xor
fs
orl
inc
outsl
sbb
popa
fdivrs
cmp
iret
pop
cmp
jnp
pop
sbb
ja
mov
fadds
sete
inc
rolb
mov
sbb
jae
jne
pop
pop
ret
and
aam
sbb
jnp
sbb
test
inc
add
inc
lock
sbb
nop
arpl
fsts
jae
dec
call
les
imul
dec
imul
push
cmp
mov
or
and
mov
xchg
inc
adc
lock
orb
push
inc
popa
jg
into
pusha
xor
sbb
or
jecxz
fdivrs
pop
icebp
je
jne
sbb
aad
or
data16
inc
or
ljmp
pusha
addr16
mov
pop
adc
adc
movsb
into
dec
and
mov
push
sub
int
mov
push
ret
mov
mov
cli
xchg
xor
push
pop
or
dec
ret
cltd
cmp
mov
pop
cmpsl
adcb
adc
mov
scas
mov
loop
jno
lcall
lods
xchg
add
out
and
sbb
inc
roll
add
in
out
adc
push
mov
inc
lds
test
rorb
xchg
call
mov
test
jge
inc
aam
jecxz
in
dec
or
icebp
adc
sbb
mov
jge
xor
outsl
pop
push
lcall
hlt
fwait
adc
and
xchg
xchg
push
hlt
loopne
fisubs
push
push
mov
getsec
divl
adc
xlat
sbb
push
imul
sub
ficoml
fwait
sbbb
or
stos
cmp
sub
push
xor
loopne
adc
push
and
jne
in
aaa
cmp
andl
or
sbb
daa
add
or
mov
add
orb
repz
aad
push
xchg
rcl
pop
adc
xor
test
lret
int3
lods
mov
js
xchg
sbb
xchg
and
adc
mov
subb
dec
es
jp
daa
nop
mov
mov
xchg
adc
push
and
xor
push
lea
lahf
pop
adc
js
xor
xor
test
sub
pop
adc
cmp
scas
xor
clc
xchg
add
inc
mov
and
xchg
cmpsb
subb
jge
sub
flds
mov
add
or
iret
cmp
cmp
fsubrl
xchg
cwtl
sub
movsb
dec
dec
xor
inc
ret
popf
add
jl
pinsrw
mov
or
mov
sbb
mov
in
inc
inc
jge
sbb
incb
add
add
xorb
pop
inc
push
dec
js
push
test
lret
push
loopne
and
adc
fsubs
inc
and
imul
je
cs
pop
and
add
pop
gs
test
mov
sub
sub
add
xchg
inc
adc
xor
xchg
mov
xor
or
fisubrs
push
sbb
jge
jge
arpl
shll
inc
mov
adc
ljmp
jge
out
jle
scas
nop
xchg
adc
jl
xchg
push
out
les
lods
add
std
mov
flds
pop
xor
mov
orb
sub
mov
and
sti
mov
pop
dec
mov
stc
ss
inc
pop
pop
js
sub
inc
mov
andl
jnp
jmp
pop
into
or
daa
iret
or
sarl
not
jbe
add
jne
pop
xor
mov
js
mov
push
sti
scas
stos
jnp
ja
bound
adc
mov
addl
sbb
or
dec
push
mov
sub
xor
xchg
hlt
mov
insb
sbb
inc
xchg
nop
push
adc
inc
pop
daa
lods
fisubrs
out
je
jno
subl
jp
iret
or
push
xchg
test
mov
dec
pushf
test
and
lods
dec
or
ret
daa
cmp
nop
inc
jno
lods
fwait
cmp
rcll
inc
loopne
jno
mov
push
jae
jno
ss
arpl
cmpsl
call
adc
pop
stos
jg
sub
sbb
xchg
push
mov
push
xor
pop
ficompl
inc
dec
fs
sbb
test
sub
inc
das
xor
adc
das
xchg
js
iret
sbb
inc
inc
jl
scas
mov
mov
lcall
cmp
loopne
sub
push
xchg
ret
sbb
fdivl
jp
mov
loopne
dec
push
dec
iret
test
add
dec
and
out
push
sbb
and
int
jae
inc
fbstp
sbb
mov
jo
mov
adcb
mov
jp
lds
out
mov
sbb
outsl
mov
pop
out
je
and
mov
cmp
aam
add
push
mov
jb
rclb
mov
aaa
inc
or
js
fwait
adc
flds
add
fadds
or
jnp
add
cmpsl
popf
push
fnsave
or
lods
es
repnz
and
outsb
mov
push
jne
mov
loopne
lods
sub
cmp
and
push
xchg
xchg
xor
push
ja
push
aas
push
mov
push
test
pushf
lcall
xlat
cmpsl
stos
add
push
xor
imul
and
rolb
push
fdivrl
push
add
faddl
xchg
jp
nop
cs
add
and
lahf
fwait
sub
sbbb
movsl
sbb
xor
nop
icebp
adc
test
push
in
sbb
pusha
add
push
inc
mov
pop
add
lods
ss
imull
lock
xor
jbe
adc
movb
aaa
mov
lods
leave
loop
sbb
scas
dec
inc
and
test
mov
rorb
jae
adc
pop
xchg
xchg
and
xor
mov
dec
pop
dec
clc
pop
add
push
outsl
pop
cmc
push
sub
popa
xor
insb
xor
or
mov
cmpsl
mov
add
in
cmp
push
test
addr16
mov
loopne
iret
mov
xchg
adc
insb
aam
mov
add
xchg
gs
xchg
popf
and
addb
lods
hlt
sbb
xor
fs
test
xchg
loopne
jbe
mov
pop
adc
xchg
xchg
out
push
popa
cmp
loope
adc
xchg
stos
add
xchg
sbb
adc
nop
sub
xchg
mov
sub
inc
cmp
mov
jo
inc
nop
pop
inc
sub
hlt
xchg
xor
add
cmpsb
fsubs
jbe
add
gs
outsb
jecxz
or
cmpsl
mov
jo
les
cmp
bound
cmpsl
sbb
inc
adc
jb
sub
ret
push
and
lods
ficoms
ret
scas
dec
ljmp
cwtl
lods
gs
fimull
add
mov
dec
into
push
getsec
push
outsb
rcr
lods
out
xchg
pop
add
fsubl
fs
jne
ret
or
sahf
mov
inc
es
movsb
adc
dec
ret
lcall
lahf
push
sbb
jns
das
jnp
xchg
movb
pop
popf
rcr
jo
push
xchg
add
in
scas
mov
add
mov
inc
cs
stos
out
inc
bswap
lods
rorl
push
add
xorb
mov
add
sbb
xchg
cltd
adcb
dec
cmp
xchg
xorb
pusha
and
sub
lds
shll
inc
test
adcl
add
mov
sub
sub
push
inc
xor
inc
hlt
xor
leave
push
insl
dec
jae
or
xchg
sub
andb
sbb
adc
adc
pop
shl
daa
pop
dec
pop
cld
shll
sub
aam
mov
xor
mov
hlt
push
push
lods
dec
dec
rorb
cmp
movsb
je
loopne
pop
scas
movsl
loopne
add
jnp
jmp
sub
adc
and
sbb
int3
push
ljmp
or
xor
andb
and
fstl
mov
mov
push
mov
xor
and
inc
sub
sbb
and
push
fsts
or
push
cs
orl
xor
inc
aas
js
iret
repnz
inc
out
push
out
pop
lret
pop
filds
adc
pop
add
push
mov
mov
data16
and
ficoml
inc
or
jb
adc
mov
sub
and
xor
add
adc
xchg
nop
andb
push
mov
iret
ss
mov
repz
stos
adc
rclb
xor
mov
push
xor
insl
xor
dec
insl
lods
pop
or
push
xor
inc
jbe
inc
cmp
jle
or
adc
push
or
addb
fnstcw
pushw
jmp
call
data16
in
aaa
jmp
stos
filds
int3
bound
idivb
je
imul
pop
mov
sub
test
clc
pop
stos
inc
inc
loopne
nop
aas
adc
add
lds
adc
push
jno
test
in
sbb
inc
sub
pop
inc
roll
call
push
adc
jp
cmpsb
and
pop
addr16
xchg
xchg
ret
subl
pop
dec
push
mov
jno
dec
int3
jle
and
leave
adc
insb
and
add
sbb
push
push
inc
ljmp
and
inc
and
sbb
pop
sub
adc
xchg
jns
arpl
add
add
shrl
jae
scas
adc
in
sbb
xchg
out
mov
es
xor
inc
push
mov
sub
dec
and
mov
cmpsl
xor
push
and
test
test
fs
add
xchg
setle
or
aaa
mov
stc
or
dec
into
push
xor
sub
popl
popa
es
cli
data16
mov
sbb
int
or
and
hlt
into
or
stos
pop
add
call
push
ret
mov
push
push
int3
jbe
add
pop
push
mov
ret
pushf
shrl
pusha
dec
aad
andb
and
or
lahf
xor
sub
xorb
or
push
pop
push
inc
imul
jno
scas
pop
js
add
and
nop
into
push
add
rcr
cs
mov
adc
mov
iret
cmc
and
push
inc
fildll
xchg
and
fcmovne
xor
imul
sub
fdivr
sub
fdiv
rcr
lcall
test
mov
cwtl
cmp
push
dec
nop
sbb
xchg
jb
jp
leave
or
rolb
fs
xor
fcompp
movsb
mov
lahf
iret
icebp
cmp
push
decb
add
and
mov
repz
push
js
sub
add
ja
icebp
scas
mov
mov
sub
adc
xchg
lcall
mov
cwtl
xor
cmp
cmp
popw
jp
jae
pop
test
fidivrs
add
xchg
addl
cmp
roll
sbb
popl
cs
or
or
out
loope
pop
dec
add
mov
push
movsb
push
pop
pop
fsubrs
ror
xchg
dec
push
and
ljmp
aaa
shll
mov
and
or
gs
cmp
push
jge
test
sti
and
xchg
fiadds
pushf
shrb
mov
sub
inc
and
mov
lods
cli
movsb
out
cmpsl
pop
fimuls
xor
test
inc
cmp
les
mov
add
xor
mov
jbe
ret
cwtl
xchg
and
test
inc
sbb
daa
cmp
ss
jae
hlt
push
mov
ss
daa
jl
adc
iret
sub
and
dec
sub
push
jle
and
add
xor
mov
fdivs
sbbl
add
lahf
push
inc
shrb
push
stc
and
scas
mov
inc
jl
mov
and
or
fcomps
jne
sub
lahf
rorb
ja
xchg
dec
dec
inc
ficoml
pop
pop
adc
add
prefetch
xor
jno
movsb
aaa
cmp
lahf
mov
lds
shll
dec
push
or
push
xlat
gs
int
ret
jle
idiv
imul
scas
mov
dec
mov
dec
adc
push
cli
je
push
push
mov
sbb
ja
pop
cmc
push
insl
rolb
adc
xor
es
add
mov
mulb
cmp
gs
test
and
or
sbb
pop
add
mov
pop
mov
sti
and
scas
popf
sbbb
mov
inc
ror
pusha
fsubrs
in
loopne
sub
mov
ljmp
xor
inc
cmc
pop
int
clc
or
test
aad
xor
add
aam
mov
lret
dec
scas
ret
and
and
nop
mov
loopne
push
dec
lcall
pop
incl
xchg
mov
mov
adc
mov
sbb
push
or
arpl
movzbl
sahf
push
inc
xchg
scas
inc
fsts
ret
dec
jg
xchg
in
xor
xchg
jle
sub
xorb
rcl
int
gs
sub
push
jecxz
cmc
ja
pop
or
inc
bswap
iret
cmpsl
cld
push
shlb
std
mov
movsl
popa
xor
mov
and
pop
roll
push
mov
pop
jo
les
sub
sub
pop
xor
inc
test
dec
push
inc
push
xchg
fdivs
shl
mov
adc
js
or
pop
mov
mov
je
bswap
mov
mov
push
cmc
shrb
mov
jae
xor
cmp
sbb
and
and
ja
xchg
sti
loopne
pusha
push
pusha
adc
mov
mov
rolb
outsb
dec
adc
lock
adc
and
dec
loopne,pn
sbb
into
in
inc
sub
and
notl
in
pop
je
adc
clc
add
clc
mov
xor
or
fimuls
mov
mov
mov
sub
xchg
popf
adc
jo
sbb
sbb
mov
rolb
xor
push
jbe
xchg
jo
sbbb
dec
xor
cmpsb
mov
add
icebp
pop
cmpl
movsb
push
mov
in
add
push
and
or
mov
dec
inc
and
push
adc
gs
add
nop
scas
es
rorl
or
jo
lods
aaa
sub
and
icebp
fisubl
mov
xlat
or
aam
jno
or
ja
out
cs
mov
aad
stos
add
sti
or
xorb
fs
push
lcall
int
loopne
pusha
push
push
cmpsb
jmp
xor
pop
xchg
sbb
adc
push
add
adc
icebp
adc
jnp
pusha
jnp
insb
dec
cmp
sub
pop
push
or
sahf
add
cmpsl
jp
aaa
mov
xor
mov
incb
loope
incb
lret
std
cmpsl
stos
dec
sub
fdivr
cwtl
aad
out
jle
xchg
jg
aad
xchg
les
adc
or
push
sbb
les
fiadds
test
enter
and
mov
bound
push
loop
popa
push
push
cmp
les
mov
bound
xchg
cmp
mov
jno
pushl
mov
daa
or
mov
popa
sub
push
xor
push
ja
xor
shlb
cwtl
dec
and
fldt
and
mov
mov
inc
and
sub
and
testl
mov
in
jne
mov
js
andb
jp
mov
inc
sub
pop
fbstp
es
mov
sti
inc
mov
add
cmp
cmp
jo
pop
push
ja
stc
and
or
inc
dec
mov
ret
test
int3
sub
jbe
test
jne
or
xor
dec
stos
inc
lock
dec
adc
test
in
push
popf
jge
xchg
pop
sbb
jp
iret
lds
xchg
sub
or
dec
les
mov
repz
in
sbb
dec
iret
push
jbe
mov
rcr
push
or
sbb
add
mov
jp
mov
fadds
lea
sub
test
test
fsubrs
nop
lods
push
xor
mov
add
inc
addr16
mov
loope
outsb
or
push
popf
icebp
push
dec
push
and
sub
adc
aaa
pop
mov
xchg
rcrb
mov
adc
scas
loopne
movsb
sbb
lds
es
addb
dec
daa
fldenv
inc
aas
sub
fdivrl
jns
fidivrs
mov
sub
push
pusha
inc
inc
xor
aad
xlat
sub
pop
push
dec
test
cmpsl
cmpsl
mov
nop
leave
aad
aaa
push
and
arpl
jnp
mov
in
jo
adc
out
popa
fdivrs
add
or
push
movsl
lret
arpl
inc
and
addr16
mov
push
inc
out
jge
push
xor
fistl
jp
push
cwtl
inc
in
shlb
sub
test
jle
sub
push
shlb
xchg
pop
or
mov
loopne
mov
mov
loopne
sti
or
and
mov
jbe
in
rolb
cwtl
add
lret
adc
add
es
pop
and
cld
inc
int3
icebp
fcompl
aad
daa
inc
out
cwtl
aad
push
cmp
aas
pop
add
aad
push
lock
lods
mov
imul
orb
mov
add
or
cmpsb
hlt
add
push
ja
test
wrmsr
incb
ja
xor
out
shll
push
sbb
or
inc
xchg
mov
cmpsb
cmp
add
sbb
or
add
loope
sbb
inc
push
in
inc
pop
mov
les
daa
and
xlat
test
jl
aaa
cltd
sbb
push
mov
or
or
add
ljmp
lret
lds
test
sbb
pop
push
xchg
sub
xor
sub
pop
adc
rcrl
rcr
sbb
incb
mov
mov
sub
leave
lods
inc
sub
int3
ss
inc
int3
movsl
mov
or
lods
repnz
mov
sbb
sbb
and
mov
jno
rclb
lods
jno
shll
pop
jmp
rol
in
and
fldz
adc
pop
sub
popf
lcall
popa
hlt
jo
xchg
data16
decb
imul
int3
dec
push
out
cwtl
call
insb
and
test
scas
xor
dec
lods
sub
daa
xchg
sbb
inc
sbb
jo
cltd
fadds
int3
push
test
dec
push
pop
sbb
ror
jle
bound
pop
ret
lods
xchg
rclb
cmp
loop
mov
jge
sbb
mov
movsb
test
loopne
cs
add
dec
ret
inc
outsl
fs
jmp
push
cmp
sub
orl
pop
pop
jge
sbbb
ficomps
adc
das
pop
out
dec
push
inc
or
mov
in
enter
shl
and
mov
mov
mov
jae
cs
shlb
xchg
or
mov
xorl
les
inc
xlat
add
and
adc
or
pushf
jo
push
lds
das
sar
inc
sbb
push
call
mov
movsb
loopne
fstl
sbbl
iret
or
inc
xchg
andl
mov
xor
and
pop
cmp
push
popa
sub
cpuid
cs
in
and
loope
xchg
dec
int3
pop
xchg
pop
lods
pop
adc
gs
xor
inc
adc
in
daa
jo
sub
and
jnp
test
in
sahf
sub
mov
push
dec
xor
jae
pop
sbb
clc
mov
aaa
sub
mov
inc
adc
adcb
rcrb
push
enter
cmp
fbstp
push
add
ljmp
mov
pop
rcrl
ret
xor
in
fistpl
ret
out
mov
xlat
pop
inc
cwtl
cmc
test
push
jle
loope,pt
inc
push
pop
das
add
push
push
xchg
or
lods
jp
call
es
xor
push
xor
addr16
xchg
jmp
test
test
lock
xchg
sub
mov
aaa
push
mov
push
mov
add
adc
out
push
pop
sbb
icebp
xchg
dec
or
andb
push
sbb
jbe
adc
or
push
add
ja
mov
mov
fldenv
or
ja
xchg
push
je
jbe
and
and
shlb
stos
cmpl
xchg
inc
dec
push
enter
pop
movq
pop
cmp
sub
add
out
fs
testl
cmpsl
ret
or
adc
pop
mov
js
addr16
dec
fdivrs
in
and
popa
and
inc
sbbb
fisubrs
test
call
push
xor
es
xor
push
mov
add
ficomps
les
and
leave
inc
cwtl
xchg
adcb
sbb
sbb
decl
test
or
loopne
xchg
ljmp
sub
jle
je
loopne
inc
ds
lods
imul
and
mov
jo
dec
fistps
add
outsb
xor
es
shll
int3
sub
push
loope
add
mov
push
adc
add
cmpsl
mov
in
jl
out
dec
or
push
daa
testl
inc
mov
pop
mov
imul
mov
jno
pop
sbb
cmp
jo,pt
push
rcr
mov
daa
fbstp
repnz
push
aaa
je
cltd
pop
inc
shlb
add
push
push
lret
push
and
lods
scas
das
add
jnp
aaa
pop
rcr
addl
in
lret
cmp
sarl
fnstsw
ret
pushf
push
and
adc
lds
int
push
test
das
pop
or
xor
sub
add
rorl
ja
sbb
pop
das
xchg
sub
in
push
lret
fcomps
jl
pop
adc
dec
push
test
jno
cmp
shll
pop
imul
cmp
adc
adc
cmpsl
fnstenv
and
mov
dec
or
jle
cmp
scas
mov
lock
add
arpl
inc
stos
into
dec
fmulp
xor
cmp
outsl
adc
pop
repnz
sbb
jbe
std
dec
push
pop
cmpsl
and
cmp
popf
test
mov
negb
push
mov
dec
sbb
insb
and
mov
in
adc
lods
mov
mov
push
loope
cmp
xor
fbstp
lods
test
pop
cmp
out
hlt
or
push
jo
clc
fnsave
lds
push
int3
loopne
insl
stos
lret
ret
sbb
stc
js,pt
ret
imul
or
es
push
daa
lahf
vsqrtsd
xchg
or
xchg
mov
out
and
arpl
sbb
out
adc
adc
fcomp
and
ja
sub
popf
cwtl
jo
inc
out
inc
inc
dec
and
dec
push
inc
sti
xchg
arpl
jnp
into
pop
jmp
or
mov
sbb
movsl
pusha
imul
inc
xor
fstpl
ja
ret
test
cmp
cmpl
push
ret
or
int3
cmp
xor
push
cmp
aaa
imul
mov
dec
roll
ficomps
outsb
inc
cmp
sub
or
mov
add
mov
mov
jmp
fistpl
ret
push
fildl
add
mov
mov
jo
or
mov
and
clc
mov
and
xchg
sub
add
adc
dec
movl
dec
leave
adc
mov
orl
jo
mov
daa
xchg
cmp
andl
dec
dec
loopne
mov
xor
mov
lock
loopne
push
movsb
jp
shlb
dec
ljmp
loopne
mov
adc
cwtl
inc
test
notb
mov
mov
sub
cli
lods
and
out
mov
in
jecxz
cmp
lods
fwait
lock
mov
nop
jae
push
jbe
imul
aaa
stos
jns
or
je
xor
xor
ret
mov
adc
cltd
or
cmp
pushl
pop
cmp
cmp
ja
mov
pop
es
add
and
mov
sub
or
add
repnz
pusha
sbb
js
loopne
js
cmp
les
mov
xor
mov
mov
jle
cli
push
push
data16
push
mov
push
mov
fnstcw
and
mov
fldt
rorb
roll
and
lcall
or
imul
ss
lock
or
push
fucom
sbb
mov
mov
push
fsubrs
js
rep
inc
iret
add
pusha
add
into
jle
lods
xor
aaa
mov
das
into
es
shrb
movsl
xor
and
sbb
out
into
sbb
mov
dec
rcl
mov
sbb
or
add
lods
add
xorl
lods
popa
add
sbb
mov
cmp
inc
sbb
and
or
sbb
lods
sbb
fwait
and
or
sbb
lods
cs
call
fidivrs
jae
into
fimuls
lock
sbb
arpl
insb
ret
pop
scas
insb
das
or
inc
mov
and
fs
popa
xor
es
xchg
adc
lds
push
xor
pushl
mov
jge
jbe
fwait
inc
push
jb
pushf
dec
pop
test
aam
push
cmp
pop
int3
mov
fisubrl
adc
sbb
pop
push
jmp
ss
mov
das
mov
push
push
cli
push
ret
sub
leave
dec
inc
aam
int
mov
add
mov
xchg
icebp
adc
mov
mov
mov
in
sub
add
jb
adc
cmp
add
leave
pop
pop
test
in
mov
movsb
sbb
jbe
sub
pop
sbb
cmp
xor
loope
jns
lahf
cltd
test
push
call
test
xchg
decb
adc
cmp
test
shlb
sahf
in
sbb
and
push
mov
fimuls
xchg
pusha
stc
fwait
into
cmp
inc
repnz
jns
daa
jae
adcb
das
in
dec
push
int
imul
xor
adc
mull
sbb
out
pop
sub
inc
dec
cwtl
and
push
popf
adc
dec
pop
orb
lods
iret
int
add
jg
jbe
fsubrs
out
ja
xor
add
jg
xchg
adc
mov
pusha
xor
imul
push
mov
adc
adc
and
mov
loope
mov
pop
mov
and
orl
xor
aam
push
xor
inc
adc
mov
dec
clc
dec
aaa
dec
insb
xchg
xor
sbb
or
bound
cmp
test
xchg
ret
addr16
pop
int
sbb
add
hlt
mov
cmp
push
pop
sub
sti
rorb
fcoms
xor
pusha
in
xchg
inc
xor
jl
stos
and
mov
rorl
sbb
and
test
loopne
or
cmp
inc
pop
xor
sub
mov
jnp
add
push
xchg
inc
test
sbb
pop
lahf
push
daa
push
jecxz
xor
insl
and
imulb
xor
dec
sbb
jecxz
fs
dec
xchg
fwait
lock
fcomps
xchg
inc
adc
fwait
lcall
cmp
cmp
xor
sti
sbb
xor
sub
cmp
mov
sbb
sbb
aam
orps
test
dec
adc
xlat
mov
stc
es
iret
ror
push
adc
in
bound
ret
sub
cs
movsb
ss
jo
pop
and
sub
mov
xor
outsb
fldcw
inc
add
cmp
adc
mov
push
mov
test
fbstp
call
mov
loopne
adc
hlt
xor
and
pop
shrb
dec
xchg
iret
xor
add
faddl
sbb
jne
xchg
or
mov
cmp
push
lds
mov
adc
mov
sahf
jl
stos
inc
or
mov
ret
sub
jecxz
pop
push
shlb
add
dec
xchg
lods
or
imul
jl
mov
lods
sub
setp
cmpsl
sub
sbb
je
or
xchg
clc
and
inc
and
add
and
or
sahf
xor
inc
pop
into
hlt
or
lret
inc
xor
sub
mov
jmp
arpl
imul
addb
dec
push
inc
popf
cltd
test
das
outsl
mov
incw
out
push
hlt
dec
sarb
fdivrl
push
add
sbb
and
lds
sub
cwtl
and
mov
pop
adc
and
in
dec
insl
aam
add
jle
stos
add
ret
jmp
mov
test
ljmp
and
jmp
fs
insb
lea
add
dec
cwtl
roll
popa
fs
or
or
sub
cwtl
mov
stos
adc
xor
pop
mov
add
addb
je
jmp
flds
jge
shl
enter
popa
xchg
scas
fisttpll
push
inc
das
stos
mulb
sbb
dec
mov
mov
pop
push
int3
mov
add
mov
je
in
stos
dec
sub
bound
mov
add
xor
loopne
xchg
push
xchg
test
adc
aam
push
inc
sbb
add
testl
or
inc
xor
or
add
inc
ret
mov
daa
out
in
mov
andb
sub
ret
pop
mov
jp
pop
insb
in
and
or
fs
push
clc
sahf
add
adc
xchg
les
in
fs
call
jae
dec
jns
and
pop
out
adc
xor
mov
add
mov
add
add
fadd
adc
push
push
adc
fsubl
ljmp
ror
ja
push
nop
lods
shl
aas
xchg
xchg
jp
mov
xor
and
scas
xchg
loopne
adc
bound
push
mov
inc
sub
inc
sbb
push
out
sbb
adc
orl
arpl
aad
mov
addb
push
xchg
inc
mov
pop
sub
or
popl
add
rcr
stc
test
js
lods
fsubl
or
cltd
sbb
inc
mov
negl
dec
or
ja
adc
test
push
negl
insl
jae
inc
icebp
lret
clc
aas
ja
adc
pop
ja
fdivrl
pusha
fsubl
pop
sbb
leave
or
adc
cmp
js
adcb
test
sbb
add
dec
out
sub
push
or
mov
xchg
gs
jno
push
xchg
mov
inc
cmp
movsb
xchg
xlat
cwtl
inc
sub
xchg
out
xchg
dec
inc
adc
mov
bound
sub
enter
popf
jmp
mov
sub
je
push
jo
and
insl
inc
fwait
inc
jo
adc
loope
call
cmp
imul
dec
cwtl
mov
cmp
mov
shlb
es
inc
or
jae
jo
xchg
xchg
inc
mov
fldcw
sub
test
dec
or
enter
push
movsl
cmpsl
aaa
or
sub
scas
lock
out
lods
and
xor
mov
adc
lcall
inc
enter
xor
call
and
adc
js
in
xchg
cmp
mov
fcomps
rolb
mov
push
jge
int
add
push
cli
dec
pop
xor
add
adc
subb
outsb
and
es
mov
shl
call
adc
je
xchg
mov
mov
mov
dec
sahf
fwait
inc
popa
pusha
mov
cltd
xchg
stos
aaa
test
lods
bound
mov
or
cld
pop
xor
test
push
mov
mov
add
cli
dec
dec
cmp
add
shl
stc
add
push
add
pop
mov
cmp
jnp
outsl
push
nop
or
add
add
es
add
cmp
test
push
jge
cmp
push
sub
add
push
pop
add
in
cmp
insb
pop
popf
dec
add
and
cmp
mov
cmp
shll
and
sbb
imul
in
xchg
in
incl
into
lock
cmp
push
sub
add
ret
popa
push
int3
pop
out
xchg
pop
shrb
ljmp
sbb
orb
lods
push
dec
loopne
push
add
lcall
and
mov
mov
mov
jno
push
adc
xor
popf
scas
push
out
push
xchg
adc
int
xlat
xchg
jge
shlb
lock
popf
adc
push
jns
mov
sti
mov
lret
push
xchg
stc
and
rorl
xchg
orl
dec
cmpb
nop
mov
ret
mov
or
jne
stos
push
insl
popa
inc
jo
mov
or
pop
test
cmp
cmp
and
js
test
and
lret
mov
flds
leave
add
inc
idivl
push
aam
push
js
sub
js
pop
loopne
movsb
and
push
daa
sub
inc
pusha
pop
sbb
xor
movsb
mov
and
xor
adc
jp
sub
out
or
aaa
dec
inc
lret
xorb
dec
push
ja
gs
adc
in
sahf
mov
xchg
sbb
loop
test
mov
popf
shll
mov
insl
pop
loope
pop
inc
or
inc
inc
fnstenv
mov
cltd
cltd
push
int3
mov
xor
add
test
icebp
ret
in
jecxz
jle
or
scas
out
testl
xchg
or
inc
adc
xor
sbb
or
fs
push
leave
sub
or
lods
loop
call
push
adc
in
or
pushf
test
shll
rol
loopne,pn
test
popf
push
das
adc
scas
xor
jg
add
es
cwtl
pop
mov
adc
or
sbb
outsl
jno
gs
testb
jne
bound
icebp
dec
cs
mov
fsubrp
sub
sbbl
push
mov
mov
es
pop
insb
mov
call
and
mov
sbb
sub
mov
dec
clc
pop
es
test
add
mov
add
shlb
sti
xorb
pop
pushf
in
mov
or
pusha
orl
cld
scas
add
les
movsb
sbb
cmp
in
cmp
cmpb
pop
adc
sbb
jp
add
mov
in
or
andl
inc
xchg
jge
cwtl
inc
mov
cmp
add
mov
leave
jle
andb
in
movsb
std
mov
addr16
std
mov
cmpb
add
addl
ja
icebp
scas
movsb
add
decl
int3
mov
mov
push
add
inc
xchg
std
imul
add
mov
or
in
cmc
add
outsl
sbb
imull
out
mov
push
leave
push
fisubs
inc
popf
subb
aad
fidivs
and
mov
stos
sbb
and
adcb
mov
lock
dec
sbb
adc
add
jecxz
test
stos
sub
pop
rcll
cmp
adc
fildll
fildll
clc
push
pop
out
mov
pop
sub
add
sub
js
or
test
add
je
mov
cmp
xchg
ret
data16
loopne
or
incl
into
test
loopne
add
ret
jnp
mov
shll
xor
xor
or
xchg
add
or
push
sbb
outsb
mov
sub
pop
loop
and
pop
ljmp
fstpl
xchg
inc
icebp
test
leave
push
or
andl
jmp
jmp
aad
pusha
ljmp
jnp
scas
inc
mov
push
adc
imul
jle
pop
jecxz
or
mov
cmc
cmc
push
in
cmp
lds
insb
dec
inc
and
pop
not
add
loope
lds
test
push
xchg
jnp
test
sahf
mov
or
stos
bound
sti
jp
lock
les
cmp
int3
jl
mov
xchg
cld
dec
xlat
inc
lahf
inc
sbb
pop
outsl
cmp
pop
sub
push
push
and
stos
int3
iret
or
notb
jno
dec
pop
mov
iret
jge
dec
push
out
jle
bound
sub
mov
add
sti
clc
adc
push
loope
mov
adc
stc
fistpll
lds
frstor
scas
in
daa
fimuls
fmuls
push
adc
mov
das
xchg
lock
scas
pusha
xchg
pop
mov
xchg
mov
and
dec
pop
test
xor
jle
push
out
push
inc
imul
jb
and
dec
xchg
mov
and
cli
cld
and
push
dec
in
and
jmp
lcall
xchg
jmp
pmulhw
loopne
inc
mov
inc
cltd
cmp
ja
js
movsb
ljmp
int
and
and
mov
sbb
std
sub
xchg
jmp
lahf
push
dec
inc
sub
fsubrs
cmp
push
clc
push
fs
ret
cmp
nop
out
ljmp
mov
jmp
mov
push
xchg
call
add
dec
int3
lret
mov
inc
adc
jo
cmp
xor
hlt
push
cmp
or
mov
mov
xchg
xchg
addr16
ss
arpl
movsb
adc
rclb
xor
sub
out
adc
daa
call
fidivs
cli
cmc
push
mov
add
jg
loope
test
out
xlat
sbb
mov
xchg
jbe
scas
addb
sbb
test
add
test
mov
shlb
shlb
and
jo
adc
sbb
movsb
fnstenv
dec
fstpt
jmp
pop
jmp
into
mov
cmp
xor
imul
jecxz
lods
xchg
mov
or
xor
mov
lahf
push
es
adc
rol
cmp
and
sbb
add
ljmp
add
out
push
dec
arpl
inc
pusha
in
in
sub
call
rcrl
inc
cs
and
add
sbb
or
add
mov
jp
inc
inc
arpl
cmp
pop
fistl
push
xchg
filds
loop
push
mov
sub
sbb
and
mov
pop
outsl
push
les
xor
dec
push
jnp
lea
mov
sub
pusha
push
sub
and
movsb
pop
push
lds
add
arpl
pop
jno
push
clc
xor
fwait
shll
ret
or
xor
xor
xor
inc
sahf
pop
add
xor
test
leave
adc
inc
xchg
sbb
or
popf
cmp
cmp
mov
cmp
int
xor
mov
or
mov
cwtl
push
inc
fwait
push
roll
insb
pushf
xchg
js
inc
addr16
jo
pop
bound
xor
jbe
js
dec
and
xor
dec
jnp
push
clc
xchg
or
ret
push
scas
imul
push
jl
cmp
movsb
xlat
nop
andb
addb
xchg
push
mov
icebp
mov
test
sahf
inc
xchg
push
lcall
test
cmp
loope
pop
sub
and
sub
daa
arpl
add
psraw
je
ret
dec
dec
xlat
lds
or
test
xchg
lods
arpl
stos
jp
xor
sub
dec
aaa
mov
xor
mov
das
sbb
aad
dec
and
jg
bound
adc
xchg
shrb
mov
les
or
push
jnp
xchg
jo
add
shlb
js
arpl
notl
and
test
aas
data16
cmp
inc
ljmp
test
popa
and
adc
and
js
and
subb
aad
mov
mov
cmpsb
push
inc
mov
es
sbb
mov
insb
pop
and
insl
adc
push
mov
cltd
cmp
in
push
pop
pop
mov
xchg
test
jae
pop
mov
fldenv
out
test
les
push
pop
fs
dec
outsb
cmp
jmp
orl
push
pop
lods
pusha
sub
adc
mov
add
pop
sub
cmp
adc
jle
ljmp
push
lods
cmp
push
jmp
adc
and
xchg
add
cmp
mov
mov
add
lcall
roll
push
call
lds
push
pushf
fwait
xor
dec
ret
les
loope
adc
rclb
cmc
cmp
das
cmp
or
xor
inc
mov
adcb
inc
lock
xchg
stos
in
xchg
xor
fsts
cmpsl
test
sbb
adc
dec
fcmovu
pop
test
js
and
pop
rcll
lret
pusha
out
adcb
addl
imul
sbb
adc
test
sbb
and
call
addb
xchg
daa
pop
int3
mov
cld
addr16
cmovae
jp
iret
call
lcall
jmp
lahf
or
push
rclb
test
jmp
add
inc
stos
xor
mov
arpl
sub
mov
fistpl
jmp
and
stc
sbb
mov
xchg
mov
cwtl
adc
inc
arpl
mov
insb
shlb
mov
jo,pn
movsl
hlt
pop
pop
xchg
add
fidivs
mov
sub
mov
test
xchg
xor
push
mov
shl
lods
dec
xor
sbb
xor
mov
and
push
adc
bound
mov
adc
mov
dec
push
sarb
mov
movsb
aad
pop
sbb
jecxz
sbb
adc
mov
pop
dec
call
inc
movsb
and
daa
xchg
inc
adc
out
mov
shl
stc
shr
and
insl
lock
pop
popa
mov
adc
jo
ljmp
sub
lds
sbbl
lods
jecxz
imul
repnz
sub
and
mov
and
js
sub
jns
rcrb
cmp
loope
shll
jne
neg
lret
sbb
and
push
aam
sbb
push
sar
dec
mov
les
call
or
pop
je
xchg
push
lea
adc
and
outsl
or
ret
sub
lock
into
gs
popf
fsubr
fwait
adc
jb
add
push
mov
dec
adc
add
sub
and
cmp
stos
jbe
or
loope
outsb
adc
inc
ja
cmc
pushf
popf
adc
push
ret
scas
js
fcomps
adc
pop
lods
xchg
and
mov
and
xchg
add
mov
push
mov
movsb
mov
dec
cmpsb
or
or
add
jno
call
aaa
and
adc
pop
mov
jns
inc
mov
add
ret
jae
xchg
mov
jmp
push
adc
aas
push
adc
ret
scas
push
add
or
popf
int
xor
xchg
cmp
push
add
in
je
inc
sti
mov
pushf
jne
aad
into
cwtl
add
sbb
lret
andb
adc
push
push
or
es
lret
mov
mov
jg
sbb
frstor
sbb
cwtl
inc
in
stc
mov
loopne
lods
adc
xor
adc
mov
jo
pop
dec
mov
adc
push
das
cs
std
mov
or
lods
fadd
dec
mov
mov
lea
test
data16
fiaddl
faddp
xchg
xchg
es
push
xor
mov
cs
push
ja
mov
xchg
pop
cmp
fiadds
add
xchg
mov
push
mov
mov
cmp
test
or
in
je
daa
xchg
inc
aam
inc
jo
mov
sbb
xchg
mov
jge
add
adc
push
xchg
pop
inc
adc
pop
test
mov
dec
inc
iret
iret
cmp
pusha
or
sub
int3
pop
xchg
pusha
sub
lock
cmpb
inc
rcll
push
ret
mov
aaa
dec
sbbb
xor
arpl
pop
dec
adc
scas
adc
push
xor
mov
or
add
add
fnstcw
mov
sahf
jmp
mov
vmovntps
sub
and
cmovne
lahf
dec
das
loopne
add
je
or
cmp
xchg
fisubs
xorb
pusha
adc
mov
jecxz
add
push
inc
xchg
and
mov
add
xchg
notb
in
jl
push
add
add
shll
cmpsl
roll
pop
inc
insl
sub
and
lahf
lock
inc
push
fiaddl
or
data16
call
push
cmpb
lods
jo
jl
adc
and
pop
aad
cmp
insb
add
in
xor
push
out
mov
jbe
inc
hlt
ja
daa
xchg
inc
xor
mov
inc
sbb
les
testb
mov
mov
out
iret
jbe
test
test
jo
imul
xchg
jnp
mov
push
mov
cmp
push
popf
xchg
inc
scas
fisttpll
or
sub
and
adc
and
into
dec
loopne
out
lods
bswap
fstps
fistps
lcall
adc
sbb
and
cmp
js
ret
and
mov
int3
pusha
inc
int3
bound
mov
lds
or
or
cmp
pop
cmpsl
sbb
sbb
mov
dec
mov
sub
dec
mov
adc
sbb
cwtl
jge
iret
xor
adc
lcall
mov
mov
mov
xchg
push
mov
or
nop
popf
jbe
divb
stos
jne
arpl
sbb
mulb
sbb
sbbl
mov
jl
es
pop
pop
inc
sbb
or
cltd
or
gs
or
push
or
dec
mov
out
xchg
lea
iret
pop
pop
jns
frstor
xor
adc
pop
sub
test
xchg
mov
add
push
out
imul
pop
loopne
scas
inc
sub
andb
pop
rorl
shll
xor
push
lret
call
insb
pop
fdivrl
jmp
test
loopne
or
pop
sub
rcll
pop
in
pop
adc
push
add
lds
or
sti
xchg
add
mov
or
addb
push
jns
jno
and
and
mov
and
stos
adcb
and
mov
xor
and
add
push
adc
negb
insl
sbb
push
popf
inc
dec
rcrl
loop
stos
mov
in
jns
push
enter
add
pushf
lds
rcr
mov
pop
mov
mov
ss
dec
pop
or
lods
pop
push
xor
or
fcmove
pushl
stos
or
xchg
xor
adc
xlat
mov
xor
or
ja
test
adc
into
and
or
ljmp
xchg
xor
xor
dec
lahf
add
cwtl
push
add
lods
outsl
mov
ret
pop
adc
cmp
sbb
mov
enter
adc
or
push
add
xor
xchg
or
popf
sub
xor
nop
sbbb
adc
jmp
movsb
pop
shr
jle
inc
inc
push
lret
pop
mov
sbb
mov
inc
mov
xchg
les
inc
fwait
adc
sbb
xchg
gs
xor
in
mov
dec
stos
lret
addb
push
pop
icebp
icebp
loop
pop
xchg
sarb
sbb
xchg
rcll
or
je
dec
shll
inc
add
add
and
cmp
dec
imul
or
dec
loopne
incl
add
jbe
ds
push
dec
xchg
push
dec
pop
cmp
jp
jae
pushf
xorb
into
rclb
jp
xor
bound
adc
and
inc
push
cltd
imul
jo
sbb
and
push
push
cmpsl
gs
sbb
mov
inc
adc
pusha
mov
xchg
inc
dec
inc
inc
mov
ret
loopne
test
pusha
int3
xor
jg
dec
jbe
cmp
call
xchg
mov
sbb
xor
inc
add
and
or
xchg
pmuludq
mov
movsb
js
lods
add
cmc
insb
adc
or
pop
sub
adc
sbb
lret
or
push
push
mov
and
mov
cmp
xor
adc
repnz
or
add
add
ja
push
push
pop
xor
inc
ds
fisttpl
adc
lret
mov
test
mov
push
adcb
rolb
insl
stos
mul
add
and
jbe
push
outsb
nop
test
pusha
int
dec
xor
and
xchg
andb
popa
addr16
cmp
xchg
cli
jnp
ret
aaa
push
and
mov
xchg
enter
inc
push
xor
jmp
aam
aaa
movsb
inc
add
lock
cmpsl
dec
push
xor
out
mov
push
pushf
pop
ljmp
push
and
inc
sahf
in
cmpsb
loope
add
daa
shll
inc
out
xchg
movsb
sub
dec
rolb
pop
push
icebp
jle
mov
jo
dec
pop
lret
ror
dec
cmp
adc
push
lds
add
hlt
addb
rcll
in
mov
xor
add
and
adc
or
or
pop
inc
or
mov
xchg
fucomp
xchg
call
fxch
sub
std
jb
lods
pop
inc
scas
mov
outsb
movsl
push
es
sbb
into
iret
sub
and
sbb
xchg
sbb
mov
fldenv
ja
fld
ja
cltd
popa
pop
mov
adc
aaa
je
push
push
xchg
sbb
push
daa
in
push
dec
pop
test
dec
and
popf
mov
fldenv
and
push
or
es
mov
dec
test
pop
loopne
testb
xchg
add
push
nop
and
lcall
cmpb
push
mov
xchg
mov
add
in
cwtl
sbb
cmp
sahf
add
inc
pop
mov
inc
test
and
mov
in
fiaddl
xchg
inc
les
movsb
xchg
loop
and
or
mov
add
sbb
clc
jb
xchg
sbb
sbb
inc
scas
mov
lods
lods
add
iret
cmpsb
cmp
sbbb
mov
mov
sub
arpl
cmp
adc
into
movsl
xlat
inc
call
addr16
pop
pop
test
add
test
mov
jg
push
adc
inc
out
fmuls
cmp
pop
out
sub
fdiv
ljmp
and
out
xchg
mov
inc
in
test
add
and
sahf
aam
push
cmpsb
mov
adc
rorb
loopne
pop
mov
dec
shl
inc
xchg
call
call
sbb
dec
add
scas
addr16
xchg
pop
addb
pusha
mov
into
stos
mov
push
or
xchg
jle
out
xchg
or
sbb
xor
cmp
sbb
test
pop
mov
fcmovnu
xchg
inc
dec
mov
fiadds
pusha
cmp
out
sub
add
push
cmp
or
and
lcall
or
and
cli
jns
test
mov
pop
pusha
mov
test
mov
inc
sbb
or
cmp
adc
push
mov
push
into
and
aam
lret
or
pop
add
xchg
xchg
mov
scas
into
mov
add
leave
loopne
inc
mov
shll
mov
cmp
xchg
add
inc
aam
cmpb
xor
fsts
fldcw
int3
jle
or
pop
dec
sub
test
lcall
flds
cmpsb
fadds
stos
aaa
push
inc
into
andl
and
fs
inc
and
xor
pop
inc
adc
xchg
xor
mov
bound
pop
xor
pop
sbb
imul
out
push
mov
xchg
jne
push
lret
ss
cmp
ss
adc
add
xchg
xor
mov
data16
std
ror
mov
and
adc
push
loopne
push
pop
dec
sbb
das
int3
pop
or
xor
mov
push
inc
mov
or
sti
jl
sub
and
fldcw
out
pop
add
sbb
add
arpl
popf
bound
dec
adc
aaa
sub
inc
ret
ret
or
push
daa
add
xchg
shlb
mov
sub
leave
lea
mov
inc
xor
stos
or
add
or
data16
addr16
bound
adc
jbe
sub
xchg
nop
or
and
mov
inc
movsb
mov
xchg
out
je
arpl
add
dec
inc
pop
pop
loope
push
dec
dec
mov
dec
pusha
mov
js
in
das
addr16
xor
lret
cmc
daa
push
mov
adc
and
lods
adc
in
mov
in
dec
mov
pop
cmp
xor
sub
rol
flds
aad
mov
pop
mov
test
pushf
add
adc
adc
inc
dec
inc
xor
sbb
xchg
in
and
and
int
rorb
pop
push
outsl
or
les
mov
dec
push
adc
cwtl
int3
pop
push
dec
xor
push
ss
or
add
xor
fwait
aaa
cmp
mov
cmp
pop
xlat
add
mov
add
push
xchg
mov
mov
xor
cwtl
adc
push
cwtl
inc
xor
or
sub
rolb
dec
lds
es
fcmovnu
inc
cmp
dec
ds
js
fsubr
lcall
sbb
in
and
es
dec
cmpb
or
rclb
add
loope
fcmovnb
popa
jnp
imul
pop
clc
ret
dec
repnz
pop
fnstcw
es
add
sbb
lahf
sub
push
lret
subl
aaa
adc
imul
sbb
jle
or
add
je
pop
push
inc
andw
mov
sbb
fldt
roll
xor
sub
mov
mov
andb
test
add
bound
nop
movsb
das
imull
and
ja
jp
jbe
or
push
movsb
pusha
add
or
push
popl
nop
jnp,pn
sub
cwtd
js
mov
xor
pop
insb
pop
adc
push
les
add
ret
or
mov
xchg
ret
mov
loopne
add
inc
push
sub
pop
das
jo
or
pushf
jp
adcb
cltd
mov
cs
dec
add
into
loope
or
lds
xor
lods
adc
xchg
mov
push
mov
xchg
cmc
jne
dec
xchg
xchg
loop
jl
fs
mov
push
pop
adc
bound
or
or
inc
ljmp
xor
jp
orb
cmp
repnz
jecxz
sbb
mov
int
pop
cli
jmp
push
add
xorl
leave
bswap
rclb
enter
and
iret
dec
mov
test
sub
and
shl
inc
je
cmpsl
hlt
cmc
imul
out
jnp
jo
mov
sbb
rcl
dec
ljmp
adcb
dec
inc
sub
push
and
repnz
pushf
add
push
xchg
add
jp
push
call
fs
mov
daa
lea
mov
stos
fwait
cmp
mov
and
stos
inc
cmp
add
sub
fisubs
xor
dec
das
dec
push
fimuls
ficoms
addb
std
sub
out
ret
sahf
sbb
ret
add
fbstp
je
and
cwtl
cmp
out
sahf
daa
loopne
stos
into
jbe
mov
mov
pusha
lea
mov
cmp
dec
mov
pop
xor
add
xchg
inc
insb
push
dec
nop
inc
mov
lcall
cmp
pop
xchg
lock
pop
cmp
loope
pusha
adc
inc
jo
push
daa
cs
mov
sub
lahf
mov
cmp
jg
sahf
sarb
repnz
lods
pusha
pusha
je
jo
outsb
sub
jmp
aad
xchg
mov
xor
push
xchg
movsb
dec
outsl
fldcw
xor
mov
mov
mov
test
ret
or
idivb
dec
pop
and
cmp
lods
lret
in
inc
rol
and
sub
or
test
adc
sti
xchg
mov
testb
leave
inc
lock
std
jmp
inc
scas
cwtl
pop
sub
add
mov
push
js
lock
cld
and
push
xor
jo
pushf
adc
popa
nop
movsb
inc
adc
sbb
add
dec
adc
pusha
jnp
andb
rcrl
dec
and
adcl
leave
cmp
push
inc
int
add
cmp
pop
imul
adc
arpl
loopne
jle
add
push
das
inc
mov
or
out
sbb
dec
xor
test
cld
lock
les
dec
fbld
aaa
out
rcrb
loopne
jae
les
dec
mov
xchg
lea
jle
jp
dec
push
outsl
jae
xlat
and
add
lcall
mov
xchg
adc
shlb
add
repz
in
ds
sbb
xchg
fimuls
lock
mov
pop
jle
xchg
testl
push
push
push
sub
mov
adcb
aaa
adc
shrb
and
test
lds
stos
xchg
push
add
add
xchg
dec
test
int
mov
jp
and
out
mov
bound
shlb
sbb
xchg
adc
int
mov
mov
jp
mov
inc
add
fwait
push
shlb
push
popa
out
add
adc
out
loopne
adc
or
add
pop
dec
jb
or
data16
call
dec
subb
adc
xchg
cwtl
rol
into
xchg
inc
shl
push
lcall
mov
and
inc
xor
lods
jp
lahf
fdivrs
push
inc
orb
ja
dec
call
jg
andb
lret
mov
and
or
divb
push
and
js
pop
push
or
adc
and
adc
mov
xor
push
sbb
int3
cwtl
xor
jge
popf
rcrb
dec
loope
arpl
pop
pop
xchg
gs
popa
sbb
dec
rclb
sbbl
xor
pop
dec
add
rorb
adc
add
ret
js
fwait
push
sub
inc
dec
ds
pop
xor
xchg
add
sbb
dec
loopne
mov
sbb
shrb
outsb
adc
hlt
jae
xchg
cmp
scas
int
or
das
sbb
aas
cmp
add
cld
push
aas
pop
test
push
adc
inc
rol
test
rorl
inc
test
inc
iret
in
sbbb
xor
ret
add
sub
mov
int
negl
push
test
jnp
daa
push
sbb
sub
rcrl
and
dec
add
in
xor
mov
dec
dec
out
and
pop
mov
ret
andb
call
divl
pop
cld
cld
testl
sub
aad
adc
aas
jp
adc
mov
int
mov
test
cmp
xor
dec
xchg
ljmp
adc
add
adc
mov
mov
add
dec
lahf
cmp
lods
and
cmp
mov
cmp
xchg
push
mov
sub
gs
and
mov
mov
sbb
mov
push
and
push
movsl
or
scas
call
pop
inc
inc
jl
decl
cmpsl
loop
sbb
orb
jp
jp,pt
push
or
imul
sbb
movsb
xor
mov
xor
push
and
dec
push
or
lods
ljmp
inc
sub
and
push
mov
pop
add
jecxz
or
adc
loop
pop
je
pop
test
lret
call
pop
scas
pop
dec
xchg
mov
xchg
mov
out
and
in
sti
cmpsb
ja
mov
mov
xor
movsl
push
popf
sahf
push
mov
insl
inc
aad
pop
int3
mov
movsb
mov
test
push
push
inc
dec
testb
push
shrb
xlat
test
adcb
rolb
pusha
push
out
movsb
dec
push
icebp
outsb
inc
mov
push
xor
and
push
jae
les
lret
and
faddl
add
adc
push
insl
inc
push
mov
pop
call
xor
push
inc
or
andb
mov
inc
mov
jns
mov
jp
popa
jne
emms
fstl
ret
mov
call
add
adc
xchg
mov
movsb
sub
mov
xorl
or
inc
fistpll
jo
sbb
push
adc
les
test
sub
aam
mov
subl
pop
int3
add
sub
andb
or
ljmp
jmp
mov
push
dec
and
mov
fisubl
jbe
in
mov
icebp
or
mov
out
sahf
loope
insb
push
push
fucomip
lret
mov
fs
mov
sbb
js
fisubl
xchg
insl
iret
fs
in
repnz
and
sub
into
adc
or
cmpl
testb
insl
cwtl
je
outsl
jg
mulb
das
pop
das
add
mov
xor
mov
or
icebp
and
andb
sub
xor
das
in
sub
loop
or
imul
movsb
movsb
enter
push
push
movsb
jne
cmpsl
or
lods
loopne
mov
retw
pop
pop
addl
and
lret
push
adc
or
inc
iret
jg
lock
movsb
cmp
aas
and
add
xor
enter
or
sbb
mov
loopne
test
mov
pusha
push
xchg
mov
jmp
and
dec
mov
cmp
push
mov
pop
sti
inc
adc
or
push
je
pop
dec
ds
pop
in
mov
xchg
xchg
test
jno
jo
xchg
xor
sti
xor
xor
add
pusha
pop
pop
sub
sti
push
out
cmpsl
dec
inc
sub
pushf
iret
or
xchg
cmpsl
inc
in
hlt
adc
or
arpl
iret
xor
sbb
jne
sbb
sar
pop
mov
js
or
stos
mov
inc
clc
adc
inc
jo
insb
pusha
add
cmp
lahf
dec
xchg
dec
lret
sub
push
sub
push
fcompl
mov
movsb
adc
or
sbb
cli
out
mov
inc
xorb
pop
mov
jg
data16
aaa
sti
push
push
mov
and
dec
xchg
jb
roll
js
jg
sahf
adc
popa
cmpsl
lcall
sbb
addr16
or
mov
movsb
xchg
mov
shll
testl
adc
mov
jg
rcrl
xchg
sub
int3
add
arpl
adc
int3
xchg
lods
mov
sub
lds
pusha
test
out
and
sbb
mov
out
mov
xor
cmp
nop
jnp
scas
data16
sub
add
ret
adc
sub
cmpsl
nop
dec
dec
push
adc
les
push
inc
xor
cli
xchg
lods
and
dec
cld
inc
test
dec
sbb
fdivrl
adc
hlt
ret
in
sbb
repz
fnsave
test
add
cmpsb
push
add
inc
xor
ficompl
out
adc
incb
lret
jo
push
lcall
mov
pusha
push
fs
in
in
roll
mov
icebp
add
inc
ja
popf
push
mov
cwtl
pop
in
and
int
and
inc
sbb
dec
add
ja
jne
call
jb
movsb
xchg
call
dec
shlb
outsb
add
dec
test
fsubrl
rcl
sbb
shrl
fstpl
bswap
fistpl
clc
enter
mov
sarb
fldenv
cmp
xchg
fiadds
aam
shrb
movsb
sbbb
call
pop
pop
cmc
mov
pop
push
inc
dec
jae
xchg
sahf
fwait
hlt
cmp
jbe
sbb
stos
and
aad
test
sub
mov
sbb
jne
in
jl
pop
cmp
sbb
js
push
andl
add
mov
mov
cmp
inc
xor
jle
insl
add
and
xor
stos
cmp
jl
das
outsb
fstpt
cmp
jns
arpl
push
ds
and
iret
in
push
sbb
cmp
mov
movb
xor
sbb
mov
setns
add
jne
das
mov
scas
popl
inc
mov
out
scas
or
mov
stos
imul
sbb
or
imul
push
xchg
shll
dec
xchg
and
add
inc
out
and
mov
loopne
fwait
pop
inc
mov
mov
movsb
mov
aaa
add
add
in
or
jmp
les
mov
xchg
movsl
xor
jb
adc
sub
xchg
das
cmp
and
dec
aas
loop
pusha
jne
xor
pop
jmp
dec
xor
jne
xor
sbb
rcrl
cli
jle
xor
add
rolb
push
lock
sub
add
adc
add
jg
lds
sub
inc
jp
sbb
xchg
cmpb
sub
jp
sub
out
inc
and
cmpb
dec
pop
cld
mov
mov
int3
outsb
cmp
xchg
sub
or
cmp
dec
jecxz
mov
or
sbb
arpl
xchg
movsb
mov
stos
jne
les
cmp
scas
jmp
or
mov
inc
enter
call
mov
or
shl
or
jns
pop
fcom
jecxz
push
scas
and
cmp
add
pop
jle
pop
add
ficomps
repnz
or
xchg
subl
dec
xlat
mov
sbb
jecxz
pop
orb
adc
push
addr16
xchg
mov
fidivrs
and
add
push
xor
ficomps
dec
push
add
cmp
dec
inc
popl
aam
insb
jne
iret
sub
mov
int3
shrl
orb
push
leave
call
add
xchg
inc
add
ja
das
or
insb
xchg
ss
popa
dec
jno
lods
or
int3
and
push
pop
jmp
dec
call
int3
mov
shll
shlb
popa
dec
ja
mov
test
cmpsl
lcall
inc
pushf
inc
inc
sub
data16
cwtl
lds
fidivs
jmp
sub
leave
pop
imull
sti
sbb
sub
ss
data16
fildll
cli
xor
jge
icebp
and
dec
pushf
cmc
test
pop
addl
leave
mov
mov
test
shl
js
in
test
test
push
xchg
inc
xchg
and
mulb
pop
scas
jae,pt
test
inc
aam
inc
mov
jge
add
insb
dec
jp
das
and
dec
mov
add
daa
fs
jns
loope
adc
jno
or
scas
jae
mov
adc
sub
sbb
add
fwait
movsb
add
stos
adc
push
push
add
sub
scas
mov
mov
push
icebp
xor
rcll
mov
cld
fiadds
adc
push
jp
xlat
xor
jecxz
add
stos
clc
bound
fwait
sub
popl
sti
mov
sahf
adc
test
add
jmp
or
sub
inc
aad
bound
or
popa
ss
jle
add
ret
pusha
push
scas
jmp
mov
cmp
jmp
xor
into
shrl
nop
add
cmp
fadds
inc
xchg
movsl
sbb
imul
and
lock
or
fidivrs
sub
push
aaa
decl
jae
fbld
pushf
inc
mov
xor
cmc
and
push
jge
xchg
data16
pushf
popf
int
mov
inc
sbb
mov
and
push
or
jp
pop
push
mov
in
lods
pop
cmc
sub
xchg
add
out
mov
fdivrs
jns
and
xor
sub
jo
dec
lret
push
lods
dec
sbb
and
jle
nop
clc
dec
adcb
addb
mov
js
popa
adc
cmp
ret
cmp
jno
jecxz
js
or
notb
and
sub
jnp
call
and
fdivrl
xor
fwait
sbbl
cmp
nop
call
pushf
inc
dec
sbb
stos
icebp
xchg
rorl
dec
dec
pop
xlat
pop
push
aad
fldenv
sub
or
and
xchg
xchg
lds
sbb
inc
jbe
and
loope
or
push
push
test
add
int3
mov
xlat
arpl
sarl
or
inc
shll
sub
xor
cmpsb
mov
xor
jae
pusha
mov
imul
jb
lea
call
pop
mov
or
test
xchg
addr16
fsub
mov
xor
js
sub
std
fimuls
dec
xor
xor
pushf
pusha
or
mov
rolb
xchg
ljmp
mov
xor
dec
inc
ljmp
fwait
leave
aaa
or
pop
call
inc
cmp
loope
mov
xor
sahf
xchg
in
add
pushf
push
shrl
mov
je
dec
adc
and
mov
pop
mov
ret
sbb
mov
mov
scas
pop
adcl
mov
push
jl
dec
leave
and
add
inc
addl
xor
add
insb
and
loop
and
les
mov
jmp
cmp
lcall
rolb
xor
pop
xchg
fwait
push
xchg
push
es
cmp
or
adc
cmp
testb
cs
loop
test
cmc
fcoml
add
data16
les
push
out
xor
rclb
sbb
mov
pop
or
imul
push
dec
mov
sbb
mov
scas
xchg
out
lods
or
imul
pop
pop
sub
push
or
push
sbb
inc
lds
imul
dec
aad
adc
aad
ds
push
xchg
or
stc
cmp
outsl
adc
insb
fildl
cmp
out
and
or
dec
xor
pop
stos
and
neg
lock
bound
shll
xchg
dec
mov
sub
push
and
push
lret
push
push
or
sub
cmp
cmp
test
fstpt
popa
sbb
pop
xchg
pop
rorl
fldl
xchg
push
push
mov
popa
enter
je
scas
loopne,pt
adc
cmc
shr
les
jb
push
cltd
and
and
push
xchg
ret
rorb
add
pop
lods
cmp
ret
ja
jne
fld
mov
mov
or
or
inc
cmp
testl
add
push
xchg
cmpsl
ret
cmc
fnstcw
jle
ljmp
fldcw
sbb
fs
pop
lods
xorb
faddl
xor
cmp
loop
cmpsl
mov
pop
nop
xchg
xor
mov
sbb
cmp
sub
cmp
jnp
jne
hlt
push
stos
add
test
es
sub
out
mov
jge
sbb
xchg
std
xchg
pop
shrl
jo
jecxz
cmp
imul
add
or
and
imul
iret
and
clc
mov
arpl
daa
stc
pop
into
inc
xchg
and
stos
es
pop
pushf
dec
das
ja
pusha
xor
sbb
xchg
sub
inc
or
jbe
in
aaa
sbb
cmp
loopne
mov
ret
cmp
aaa
dec
repz
lds
test
sub
pop
xchg
xor
lock
shll
jecxz
jbe
out
sub
fs
mov
sbb
orb
sbbb
arpl
mov
out
sub
les
add
mov
lcall
fdivs
lods
outsl
or
mov
aaa
mov
mov
dec
out
ret
addr16
shlb
jl
scas
or
hlt
fmull
adc
lock
and
leave
loopne
fsts
test
dec
push
add
das
pushf
aad
push
or
jb
scas
call
jle
sbb
out
test
dec
les
add
test
call
cmp
leave
and
add
inc
mov
add
xchg
cltd
xchg
aam
dec
mov
add
jae
cmp
mov
push
stos
jns
stos
bound
dec
xchg
mov
sub
inc
es
mov
add
fst
enter
aaa
add
pop
scas
imul
fbstp
jle
pop
inc
add
rorb
cmp
cld
mov
or
sahf
test
xor
inc
lock
pop
and
or
jnp
stc
cmp
inc
or
andl
cli
addb
add
jnp
das
stos
shrb
or
jmp
adc
mov
mov
xchg
lods
add
lret
or
inc
push
lahf
jnp
jecxz
sbb
lret
jnp
sub
adc
dec
shrl
addl
xchg
je
jae
xor
add
pop
cmpl
inc
mov
jmp
and
jns
fwait
adc
rcr
add
and
cltd
xchg
jbe
ret
fwait
adc
fcoms
add
int
dec
loop
ret
ss
mov
push
popfw
add
movsb
inc
fs
sub
icebp
inc
push
and
add
js
jmp
push
push
sbb
jae
jbe
dec
int
stos
cmpb
mov
xchg
xor
ljmp
jne
nop
xor
mov
stos
dec
inc
scas
out
cli
add
ret
lahf
lds
mov
dec
inc
ja
xorb
pop
push
lock
jmp
push
lret
or
dec
dec
jo
and
hlt
xchg
movsb
push
aaa
xor
mov
subb
inc
add
xor
icebp
jb
addb
fs
pop
shr
pop
insb
shrl
into
cmp
mov
or
inc
or
and
sub
call
sbb
adc
push
inc
cmpsl
hlt
adc
mov
mov
mov
adc
pop
sti
lcall
popf
xor
push
xor
add
pop
daa
daa
or
and
cltd
or
sub
and
sub
or
add
push
inc
xchg
daa
push
addb
out
sbb
mov
sub
push
lahf
mov
push
or
out
or
ds
pusha
les
jl
outsl
and
das
lcall
fdivrs
mov
pop
and
jae
pop
std
dec
push
xor
jge
push
loop
mov
pop
fdivrp
inc
iret
enter
test
jg
movsb
lea
lods
lods
dec
fiadds
ficomps
mov
ds
fmuls
in
inc
jns
xor
jno
sbb
sub
adcb
sbb
int
adc
jo
xor
sti
mov
dec
mov
mov
jmp
sub
ja
negb
out
mov
cmp
setp
mov
jno
enter
sub
add
int3
mov
xor
fnsave
in
fadds
jns
das
out
mov
push
lock
mov
pop
xchg
pop
jmp
fbld
orb
push
lods
pusha
push
inc
call
in
es
push
loopne
push
unpcklps
cmp
out
fldenv
add
leave
lret
sbb
out
test
lods
jne
sbb
aaa
pop
cmp
jecxz
jne
push
xchg
adc
movl
sbbl
fidivs
clc
pop
testl
mov
es
les
inc
xor
mov
outsb
sbb
fstpt
push
aas
cmp
stos
pushl
xchg
rcr
or
mov
dec
shl
and
adc
jmp
data16
xor
xlat
paddusw
data16
push
gs
int
jle
pop
cmp
ret
mov
xor
sti
sbb
push
imul
cmp
test
or
in
jns,pn
pop
inc
aaa
adc
pop
shl
in
lahf
pop
and
dec
or
sbb
lretw
mov
loope
decb
add
jmp
mov
or
or
jne
mov
adc
sbb
daa
push
jmp
push
test
cmp
pxor
adc
cmp
roll
in
push
dec
subl
vmovsd
adc
cmp
xchg
lds
xchg
and
adc
fstpt
scas
inc
cmp
inc
adc
je
mov
jno
ficoml
pop
jb
addr16
outsl
mov
mov
fsubrs
xorb
add
lods
fwait
dec
sub
sub
pop
sub
dec
mov
es
adc
push
sub
xlat
nop
mov
or
roll
mov
sbb
fcom
xor
sub
scas
int3
fdivl
push
pop
xchg
cmp
or
sub
xchg
addb
out
xchg
and
lahf
pop
js
mov
aas
jb
and
xor
testl
push
cs
xor
xor
in
xorl
push
xor
rcll
test
sarl
sbb
shlb
push
add
ss
jle
jge
arpl
iret
xor
jns
negb
decb
xor
jnp
js
int3
sarb
or
fcmovbe
addr16
outsl
pop
ret
and
je
mov
or
and
rcrl
mov
adc
push
xor
add
push
cmp
popa
or
insl
frstor
adc
movsb
pop
pushf
cmp
adc
lods
adc
movsb
inc
add
inc
lds
out
push
jno
dec
pushl
scas
mov
jge
jnp
mov
inc
dec
popa
aas
outsl
sbb
or
sbb
pop
lods
ret
divl
jl
pop
daa
jg
cmp
mov
sub
jns
mov
fiadds
and
cs
xchg
movsb
popa
jae
add
lods
test
mov
xlat
data16
test
adc
arpl
bound
mov
lods
adcb
int
pop
insb
jbe
cwtl
leave
lods
iret
popa
ret
dec
mov
fwait
insb
insb
fldcw
outsb
stc
mov
sbb
scas
push
pusha
dec
js
nop
stc
and
cli
cwtl
or
cli
mov
mov
jo
inc
push
ja
rcl
shrl
dec
ss
mov
stc
fsubrl
cmp
outsl
sbb
xchg
push
push
ja
movaps
or
mov
jg
xor
xchg
or
pop
sub
mov
test
loopne
in
add
mov
push
inc
xchg
sbb
repz
rcl
imul
adc
test
xchg
nop
cmp
add
jno
sbb
inc
dec
inc
sbb
movb
push
shlb
jbe
es
das
inc
icebp
mov
and
pop
pop
mov
leave
jg
jo
xchg
es
inc
js
es
mov
mov
push
cld
add
dec
stos
xchg
cwtl
cmc
push
dec
inc
adc
dec
or
and
push
loopne
jnp
bswap
jnp
ds
mov
ja
cwtl
inc
jns
xor
xor
xchg
push
nop
or
sub
sub
cwtl
add
mov
or
mov
sbb
loop
xchg
mov
sbb
pop
cmp
jg
aas
sbb
orl
mov
push
movsl
jge
fadds
fldenv
loopw
jo
in
in
and
mov
sarb
pusha
shlb
js
add
ss
push
xchg
cmp
lahf
es
xchg
rclb
jo
in
adc
push
hlt
imul
jno
xchg
aaa
lods
ret
mov
jl
inc
dec
std
push
and
xor
and
pop
ret
int3
adc
stos
xchg
sub
mov
adc
loop
std
mov
push
push
inc
adc
mov
or
pusha
or
pop
and
xor
ret
add
xor
sub
insl
push
inc
mov
mov
sbbl
and
or
cmp
inc
fdivrs
int3
xor
sbb
mov
and
adc
pop
xlat
sbb
cmp
mov
lods
dec
and
mov
mov
inc
xchg
ja
sub
inc
lds
mov
cmpsl
pop
and
sti
bound
incl
xchg
mov
sarl
scas
inc
xor
in
dec
les
xchg
inc
call
xchg
and
pusha
or
popf
xchg
xchg
jge
pop
push
in
inc
addr16
pop
add
lods
jo
in
pusha
adc
push
dec
aaa
pusha
xchg
loop
sahf
adc
pushf
aad
push
pop
mov
pop
jnp
testb
stc
xchg
add
inc
imul
lods
jb
xlat
mov
add
xchg
and
call
inc
or
add
iret
aaa
loope
cltd
je
fimuls
push
jo
ja
sbb
push
pop
xchg
mov
in
mov
pop
ret
dec
int
aaa
jne
mov
push
inc
loopne
push
out
jo
fcomip
jecxz
repnz
popa
jnp
sub
dec
addb
or
shll
push
add
fcompl
pop
sbb
or
hlt
lods
outsb
push
mov
out
cs
outsb
ficoml
pop
loopne
pop
jns
jae
jmp
cwtl
gs
pop
push
push
sbb
xchg
inc
pop
or
lcall
push
adcl
mov
jns
aaa
push
es
jp
mov
sub
adc
mov
out
aad
es
scas
gs
lcall
imul
in
push
add
loope
int3
movsb
lcall
rclb
outsb
pop
fwait
cltd
cmpsl
dec
outsl
mulb
xchg
adc
gs
adc
fucomip
aad
imul
ret
insb
inc
pop
aad
scas
rorl
jnp
lods
scas
fmull
xchg
xor
and
scas
sbbl
xor
vmovhpd
shl
pop
das
icebp
inc
and
mov
shr
mov
dec
sti
sahf
pop
aam
or
xchg
inc
ret
push
loope
ljmp
adc
pop
sub
lea
rorl
popf
jae
fs
cmp
push
sub
aad
out
ret
ja
jge
das
dec
and
in
shl
psubusw
arpl
jecxz
or
test
dec
pop
aaa
and
nop
popa
adc
xor
ficoml
add
into
insb
push
pop
xor
shlb
mov
adc
das
jbe
out
shlb
jmp
or
sbb
shlb
add
xor
fiadds
arpl
andl
lcall
sub
jge
jl
jo
imul
or
call
add
fadds
clc
das
shll
xchg
xchg
adc
sub
je
or
mov
or
cmp
ror
faddl
push
in
incl
and
mov
add
xchg
xor
dec
sbb
xchg
cwtl
les
jl
aas
mov
daa
and
lods
jnp
aaa
insb
jne
jb
push
cmp
cmp
dec
sbb
fdivrl
xor
xor
lock
mov
popa
cli
mov
sahf
addb
cmp
cmp
into
jle
push
outsl
test
leavew
test
dec
xor
push
xor
mov
aam
push
adc
lret
mov
cmp
loopne
bound
out
shll
cmp
sub
add
jge
das
mov
scas
stos
pop
xchg
xor
pavgw
xchg
fadds
inc
sub
sub
movsl
test
and
dec
gs
xor
pop
xor
inc
xchg
stos
jns
and
lcall
and
dec
adc
jl
test
sbb
adcb
int3
dec
sub
mov
or
fwait
inc
xchg
ja
cmp
mov
test
pop
cmc
ss
push
sbb
add
dec
push
rclb
ds
inc
lock
ds
rcll
icebp
pop
adc
jae
xor
mov
mov
lods
push
pop
push
adc
iret
fdivr
xchg
add
mov
inc
jbe
dec
inc
and
sbb
aas
inc
push
jmp
ret
repnz
pop
insl
outsb
es
push
jno
in
inc
adc
out
loop
pop
mov
imulb
xchg
inc
ja
mov
lret
mov
mov
push
out
int3
and
int
push
mov
mov
lea
push
mov
pop
mov
inc
push
int3
or
pop
sbb
sbb
mov
loope
cmp
jle
dec
push
sub
pop
outsb
xchg
addb
orb
jbe
sar
imul
dec
inc
mov
push
or
adc
mov
loope
or
add
aaa
lahf
xchg
fldenv
pop
jp
popw
cltd
jp
inc
rol
add
cli
scas
add
lcall
loopne
and
jg
dec
add
sbb
data16
gs
fsubrs
pop
pop
loope
sbb
cmp
rcll
pop
mulb
push
or
imul
lods
sub
movsl
add
pop
shrb
fwait
add
mov
arpl
or
mov
test
mov
cmpsb
bound
nop
sbb
je
pop
shll
je
mov
inc
rol
movsl
es
push
mov
jno
push
dec
mov
gs
push
jo
inc
fisttpl
aam
pushf
stos
xchg
adc
mov
pusha
lock
shlb
loopne
and
das
bound
mov
jecxz
or
insb
xor
nop
and
fucom
sbb
loop
add
jno
movsb
test
add
inc
jge
test
push
inc
adc
scas
inc
or
imul
test
add
xor
dec
arpl
ret
xchg
push
push
mov
les
mov
cwtl
or
inc
aad
mov
arpl
adcl
mov
pop
adc
test
jne
xor
test
sahf
lahf
fidivs
push
mov
xchg
mov
bound
jle
xor
add
add
ret
stos
call
jl
sub
cltd
mov
and
mov
mov
pop
test
fisubs
fimuls
je
xor
inc
in
mov
and
add
sbb
aam
es
mov
push
cmp
inc
adc
xor
push
test
or
xchg
adc
cmpsl
xchg
xor
jge
pop
inc
lret
into
int
inc
adc
jne
jp
lds
les
dec
cmp
or
outsl
pop
jg
out
out
jne
or
mov
xor
cmc
push
and
movsb
xlat
sub
pop
dec
cmp
mov
aam
sub
adc
adc
cmp
or
adc
rclb
dec
adc
mov
enter
push
xor
cmp
out
add
cltd
jb
je
dec
add
push
cli
lret
dec
inc
loope
sub
xchg
sub
xchg
sbb
push
or
push
pushf
mov
addl
adcb
scas
pop
aaa
aam
push
xor
push
ss
lds
sti
xor
push
shlb
ja
les
ja
mov
dec
movups
fbstp
xor
jo
aas
pushf
ja
xchg
push
ffree
arpl
mov
dec
clc
adc
call
adc
xchg
pop
mov
es
sub
pop
fnsave
xchg
iret
mov
stos
xchg
mov
mov
push
aad
stos
loop
jns
shlb
loop
xor
sub
mov
cmpsb
enter
add
divb
mov
nop
sbb
xchg
lea
push
xchg
adc
outsb
movl
nop
fsubl
cmp
pop
adc
adc
sbb
es
sbb
fadds
xor
pusha
mulb
call
stos
jbe
jmp
inc
sub
xor
and
test
or
add
add
shr
sbb
inc
loop
dec
iret
push
xor
push
in
xlat
push
sarl
inc
jge
or
add
and
pop
fcoms
enter
and
lods
xor
or
in
pop
bound
mov
and
inc
popa
adc
lds
pop
enter
push
push
inc
bound
push
adc
and
mov
add
sbb
in
sbb
pushf
inc
inc
or
imul
xchg
ds
xor
and
divb
xor
mov
mov
and
push
call
or
push
xor
into
scas
push
dec
mov
push
fs
lods
les
aad
clc
cmp
adcb
pop
sarl
adc
fs
and
xchg
pop
inc
xchg
test
fiaddl
roll
shll
orl
cmpsl
insl
jg
push
movsb
test
sub
push
sbb
sub
add
push
test
sub
cmp
pushf
sub
jge
mov
jp
push
aaa
cmp
lea
mov
jmp
mov
add
fcomps
adc
lock
iret
jge
adc
pop
cmp
and
dec
push
and
mov
or
push
jge
pushf
in
dec
loop
mov
mov
fistl
out
add
xor
cmp
add
or
adc
orl
sahf
bound
test
xor
xchg
je
pop
lea
or
iret
and
shrl
pusha
les
and
jne
dec
push
aad
les
jno
xor
inc
rcll
mov
pop
sbb
pop
dec
push
or
add
xchg
sbb
dec
and
sub
fwait
lods
aas
sti
mov
cmp
cmp
pop
lret
and
clc
lcall
sbb
cld
repz
push
addr16
sbb
mov
js
out
push
faddp
mov
aas
jo
pop
adc
sbb
stos
iret
out
adc
xchg
adc
lret
xchg
in
clc
mov
test
and
sub
jne
jmp
adc
sub
loope
push
inc
xor
pop
loope
push
jle
stos
mov
and
xlat
int3
and
test
rcrl
cmp
mov
cli
mov
adc
enter
xchg
xor
adc
add
stos
dec
lahf
mov
lods
aaa
loope
or
mov
clc
mov
or
xchg
mov
and
fmuls
inc
and
fnstcw
or
mov
mov
adc
add
out
sub
fwait
cmpsb
inc
add
dec
mov
and
popa
xlat
fcomp
sbb
add
sbb
gs
sub
mulb
or
sbb
lds
cwtl
sub
sbb
push
lret
stos
mov
adc
mov
in
add
popa
xchg
fidivs
loopne
fisttpl
fsubrl
nop
subb
sub
je
jecxz
dec
testl
pop
mov
arpl
sub
nop
and
inc
push
in
or
lcall
xor
mov
fists
es
lock
nop
fadds
subl
push
jge
lods
test
adc
dec
sbb
or
les
adcl
sbb
adc
dec
mov
xchg
ret
sti
jno
movsl
cmp
out
xchg
and
xchg
fcoms
adc
xchg
in
sbb
add
pop
adc
inc
mov
pushf
addr16
xor
push
mov
adc
dec
push
mov
mov
js
repz
mov
hlt
pop
int3
jns
inc
mov
pop
jbe
in
out
pusha
sbb
jne
push
mov
xor
mov
popf
xor
sub
xor
mov
addl
sub
and
pusha
push
xor
adc
xchg
rcrb
jmp
lcall
xchg
and
loope
lcall
aam
pop
out
and
and
imul
mov
aad
adc
xor
xor
sbb
xchg
sub
add
xor
xchg
and
adc
stos
dec
pop
and
outsl
dec
xor
mov
jne
addb
inc
clc
xchg
std
addr16
adc
test
or
mov
f2xm1
jg
icebp
and
lds
xchg
mov
and
mov
les
shll
push
xchg
andb
or
ret
mov
xchg
sub
pop
push
sub
mov
sbb
pop
push
imul
or
adc
sahf
pop
push
loope
sbb
adc
mov
add
imul
push
test
jp
je
lahf
xchg
lock
sub
inc
gs
adc
cmpsb
arpl
in
adc
add
ret
call
push
jp
stos
lea
ret
dec
inc
jne
fnstsw
xchg
sbb
xor
cmp
jnp
or
mov
add
ds
jmp
orb
mov
add
add
es
movsb
arpl
movsb
adc
xor
push
pushf
and
push
mov
and
mov
pusha
adc
lock
fisubrs
int
mov
xchg
xorl
sbb
sbb
bound
mov
or
pop
aas
push
mov
pop
test
rcr
inc
fwait
push
mov
pushf
daa
lcall
sbb
or
stos
cli
or
dec
or
lods
sbb
pop
js
aas
or
dec
mov
mov
fisttpll
pop
dec
push
aaa
sub
sub
or
xor
xchg
scas
jns
fsub
push
push
dec
add
add
lock
sub
jb
add
daa
aam
jle
scas
sub
jb
es
subl
pop
push
sub
inc
adc
jle
stos
loopne
loopne
in
cmp
adc
cmp
xchg
mov
testl
es
das
fdivrs
or
repz
xor
stos
mov
inc
inc
iret
arpl
push
and
popa
lock
pop
into
aas
push
pop
push
add
dec
fstpl
xor
push
ljmp
ljmp
and
in
subb
aad
push
mov
adc
and
addr16
push
sub
lods
or
mov
jo
sbb
lret
mov
orl
jno
pop
mov
call
mov
ret
and
mov
aaa
lahf
call
mov
fstpt
or
mulb
ret
sbb
fs
pop
xchg
adc
sub
loop
dec
mov
add
fs
leave
mov
adc
les
stos
add
bound
cwtl
adc
xchg
fisttpl
pop
fs
add
movsl
xor
ja
bound
bound
shr
xor
sti
out
loopne
loope
inc
cmpb
ret
and
pop
mov
rclb
jne
das
insl
sub
sti
aas
fmull
add
inc
mov
fsubrl
lret
orb
xlat
mov
lock
int3
jo
cmp
jae
mov
and
adc
push
push
stc
adc
in
xor
add
stos
dec
add
xor
dec
mov
lds
mov
push
jbe
out
sub
push
add
and
adc
dec
out
lods
mov
dec
hlt
sarl
pop
mov
jnp
push
rclb
into
push
rclb
fs
pop
scas
popf
adc
dec
adc
adc
pusha
aad
test
or
sub
in
mov
or
fadd
dec
adc
push
mov
stos
and
push
stos
dec
in
mov
subb
and
sbb
xchg
mov
push
inc
mull
push
into
adc
into
daa
pop
or
test
push
les
push
lret
pop
cmp
mov
jo
hlt
xchg
inc
rol
aad
lock
orb
lahf
lds
push
xchg
mov
es
mov
inc
ret
dec
mov
add
sub
das
and
ljmp
and
xchg
lods
xor
movsb
addl
push
sbb
push
inc
flds
test
shl
call
mov
mov
fwait
add
inc
test
sub
test
mov
rclb
jl
xlat
adc
xchg
add
push
idivb
push
outsl
sub
cs
mov
xlat
fimuls
pop
jle
sbb
add
xchg
test
je
inc
jp
fldcw
shlb
push
cmc
mov
sub
xor
adc
fsubl
sub
jo
aas
hlt
inc
xor
roll
adc
lods
push
xchg
mov
pop
push
lds
insb
ror
mov
inc
daa
ret
xor
adc
mov
and
dec
scas
or
int
les
lds
pop
cmp
loopne
xor
xchg
fistl
out
aaa
add
pusha
mov
pop
clc
jns
mov
js
orb
mov
test
cmp
mov
call
add
and
add
and
mov
xor
fnstsw
rol
lds
outsl
ret
cmpsl
jg
or
push
dec
roll
pop
inc
adc
scas
fisubrs
sbb
and
xor
mov
push
and
xor
in
sbb
ret
fmul
dec
test
out
popf
xorb
add
xchg
mov
std
and
adc
stos
push
repz
loop
fdivrl
out
cmp
add
or
inc
shrb
icebp
sub
dec
inc
xor
mov
test
xchg
push
shr
and
leave
movsb
mov
push
pop
call
inc
sub
bound
test
icebp
or
fadds
sub
add
popa
cmp
or
js
jbe
ss
mov
ret
cmpsl
les
lret
mov
cmp
lods
pop
ja
sub
add
cmp
jnp
jb
sbb
add
test
movb
call
jae
inc
dec
mov
test
shrl
inc
rol
mov
sbb
dec
repz
mov
mov
push
xchg
add
ja
add
test
mov
bound
cwtl
sti
cld
ja
add
shll
sbbb
add
inc
sahf
xor
sub
xchg
inc
xchg
lods
xor
mov
pop
add
enter
xchg
xlat
stos
lock
mov
shlb
stc
pop
inc
mov
jg
cmpsl
rcll
jle
adc
push
mov
sub
sub
es
mov
jno
sbb
push
cltd
add
push
add
mov
popf
mov
je
mov
and
mov
mov
pop
and
in
dec
stos
scas
lods
push
inc
out
pushf
shll
or
call
data16
adc
addl
add
mov
insb
dec
mov
rcrb
dec
repnz
int3
mov
and
rcll
inc
repz
inc
mov
xchg
add
pop
mov
in
cmc
mov
adc
sub
push
pop
stos
sahf
lcall
scas
aad
loope
lods
add
sbb
ljmp
push
xor
stos
ljmp
and
inc
inc
dec
inc
push
out
sub
and
push
test
sub
in
and
or
orl
pop
shr
xchg
mov
push
cmp
lea
adc
sbb
daa
push
and
add
mov
test
cmp
inc
pusha
fsubr
sub
adc
rorl
lods
push
inc
mov
fildl
inc
jo
mov
add
push
int
jbe
push
push
sub
add
ja
shl
mov
repz
jnp
movsb
inc
push
popa
push
loope
or
or
xor
sbb
cwtl
mov
into
stc
xchg
in
xchg
rcrb
loopne
pop
fcomps
sbb
xor
push
pop
fmulp
jnp
mov
mov
push
dec
add
add
mov
and
add
or
and
ret
jp
xor
imul
pop
jge
jecxz
movsw
push
sbb
or
add
repnz
sbb
and
push
add
movsb
or
imul
push
pop
and
jmp
mov
mov
pushf
and
cmpsl
xchg
sti
push
push
cmp
adc
add
sub
test
sbb
and
movsl
call
pop
add
mov
std
ficoms
push
or
lret
add
aad
or
outsl
xor
add
addr16
dec
xchg
ljmp
push
pop
adc
pop
test
sbb
mov
bound
sub
test
pop
test
pop
push
inc
push
add
cmpsb
test
lods
jge
pop
add
stc
rcl
fnsave
testl
pop
lcall
mov
sub
and
pop
pop
pop
movsb
mov
imul
orb
sbb
mov
and
movl
fadd
push
xor
rcll
mov
add
sub
int3
es
je
mov
xchg
fstl
insb
mov
roll
hlt
jp
int3
jbe
sub
scas
sub
int
into
daa
push
jp
sbbl
nop
andb
or
dec
mov
inc
mov
mov
test
int
stos
and
cmp
push
setp
xor
cli
xor
je
lock
inc
iret
add
inc
adc
hlt
xchg
mov
mov
xor
sbb
push
dec
dec
or
arpl
or
out
push
sub
jge
dec
pop
nop
cmpsl
bound
cs
inc
test
shl
jo
loop
xchg
or
inc
arpl
mov
dec
mov
xor
loope
cmp
sbb
lds
cli
shll
loop
inc
sbb
mov
sbb
push
inc
xor
mov
add
mov
inc
cmp
dec
lock
insb
cmp
push
cmp
push
lret
adc
jl
adc
and
pop
mov
add
push
aaa
sub
and
jmp
sbb
add
cmp
insb
mov
outsl
mov
cltd
xchg
sub
xorb
cmp
xchg
adc
xor
leave
lods
stos
add
cmp
inc
mov
jg
pop
mov
inc
addl
call
add
sbb
shr
insl
dec
lods
dec
aam
or
rorb
xor
data16
add
pushf
push
cmpl
or
mov
xor
inc
ret
mov
addr16
fcoms
sbb
adc
mov
push
bound
enter
push
cmpsl
xchg
mov
xor
push
dec
ljmp
lret
popf
lret
mov
out
lret
jle
es
add
inc
xchg
arpl
les
jo
lds
and
xchg
adc
test
push
in
sub
sbb
incl
loope
aad
xchg
cli
loopne
sbb
push
dec
mov
daa
fwait
or
stos
xchg
inc
mov
sbb
sbb
test
adc
icebp
sbb
or
scas
cmp
sbb
mov
loope
pop
inc
inc
jno
jnp
les
mull
add
jmp
in
sbb
shrl
add
mov
push
inc
test
outsb
nop
and
fildl
pop
add
fcomps
xchg
add
inc
lds
cli
roll
or
scas
mov
push
dec
call
adc
mov
roll
mov
mov
aam
sub
aam
inc
sub
add
inc
lret
pop
xor
and
push
mov
mov
pop
hlt
push
mov
adcb
sub
pop
loopne
and
sbb
rclb
add
loopne
subl
jg
adc
pop
adc
fadds
add
or
stos
mov
pop
adc
rorb
rolb
mov
cwtl
clc
test
cwtl
dec
mov
hlt
aad
inc
in
fwait
out
subl
popa
sbb
mov
mov
popf
rolb
xor
enter
cmp
mov
jno
dec
mov
jl
push
xor
mov
mov
movsb
sub
dec
pushf
andb
inc
dec
mov
push
adc
pop
jmp
and
les
push
push
push
es
xor
or
mov
mov
adc
xor
mov
stos
pop
adc
push
xor
clc
adc
or
sti
mov
pop
inc
cwtl
fsubr
xor
jecxz
leave
mov
xor
mov
cmp
lea
add
push
lret
fidivl
or
rcrb
fwait
icebp
or
inc
mov
mov
pusha
xchg
fldcw
lret
xchg
and
sbb
xchg
sub
push
je
push
jle
stos
push
adcl
sub
xchg
insl
jbe
sub
cmp
call
rolb
and
add
les
sbb
mov
jns
add
add
inc
loop
mov
xchg
mov
inc
xchg
mov
xor
or
fxch
dec
mov
outsb
and
sbb
add
filds
jl
lcall
dec
or
js
and
push
nop
out
pop
push
sbb
cmp
xchg
shl
push
lcall
cld
or
mov
sbbb
out
add
daa
and
jge
jne
imul
xor
imul
mov
xchg
loop
addb
add
jnp
adc
stos
adc
ret
movsb
xchg
inc
daa
imul
xchg
fnsetpm(287
insl
cmp
out
inc
lds
lods
jb
cmc
jge
cwtl
cmp
xchg
sbbb
jo
jno
mov
mov
inc
xor
jns
cmpl
jbe
add
addr16
popf
dec
jbe
insl
imul
jno
pop
jnp
adc
cmp
lods
cmp
xchg
scas
mov
pop
bound
in
sbb
loop
scas
mov
add
sbbb
fcompl
mov
iret
lahf
adc
ret
shlb
test
rorb
dec
lods
dec
popa
out
sub
gs
scas
ljmp
out
add
sub
dec
inc
push
jno
xchg
sbb
and
loopne
addb
scas
and
dec
fisubrs
dec
and
fwait
lock
add
add
sub
push
inc
mov
loopne
add
mov
push
dec
xchg
sbb
fimuls
stos
ja
fiadds
or
lods
cmc
inc
mov
fcomps
inc
xor
data16
push
jl
enter
mov
jg
adc
sub
jb
bound
adc
xchg
jmp
mov
dec
and
add
xchg
push
aam
arpl
lea
pop
pop
push
fucomp
sbb
cmp
mov
stos
adc
xor
sub
sbb
cmpsl
js
xchg
mov
stc
jle
and
push
xchg
test
sub
movsb
push
cmp
adc
iret
push
and
push
pop
sub
lods
out
push
lahf
outsb
xchg
xchg
rolb
ds
pop
xchg
push
push
cld
mov
push
mov
ret
outsl
push
push
and
and
andl
lods
in
mov
mov
sbb
ljmp
out
jo
pop
xchg
pop
push
ss
fcomps
cmp
and
mul
ja
inc
loopne
sub
shll
adc
cmp
or
in
pop
daa
cwtl
xor
xor
push
insb
pushf
sub
or
pop
bound
insb
or
lock
adc
and
daa
or
or
psrlw
cmp
xchg
inc
cwtl
xor
and
adc
imul
subb
hlt
jne
adc
add
and
int
subl
addr16
or
fldt
cmp
into
js
je
push
pushf
and
or
rclb
vmovsldup
sub
fs
sub
cmp
pusha
sub
cwtl
insb
ret
jl
xlat
xchg
cmpsb
inc
cwtl
sbb
mov
bound
pop
inc
call
loop
xor
sbb
mov
mov
or
push
rolb
push
or
imul
fmuls
and
jp
inc
or
pusha
or
add
add
push
xor
push
dec
add
pop
je
pop
or
dec
leave
cmc
mov
and
and
hlt
fdivs
test
inc
mov
xorl
jns
inc
sub
jbe
and
mov
xor
sbb
or
insb
and
cmpsl
pop
inc
inc
lret
pop
or
inc
andl
xor
ds
dec
lock
das
adc
mov
xor
sbb
sbb
jno
adc
mov
ljmp
inc
push
faddl
rcrl
shlb
ret
inc
adc
inc
xchg
adc
mov
mov
nop
add
mov
mov
pop
mov
pop
es
sbb
iret
loopne
mov
mov
jbe
adc
inc
mov
mov
jb
adcb
pop
lahf
push
cmpsb
in
add
push
lock
call
addr16
das
or
dec
cmove
jno
sbb
inc
sub
push
push
cmpsb
mov
xor
cmp
mov
inc
push
gs
loop
cmp
loop
xor
adc
add
cmpps
test
loopne
and
inc
pop
push
add
inc
je
xor
testl
and
loopne
cmp
scas
mov
ljmp
je
inc
sarl
push
xchg
or
xchg
push
add
sub
pusha
cmp
cld
mov
sbb
fsubrl
mov
mov
pop
ds
fldenv
out
push
ja
mov
cld
ljmp
test
mov
add
add
mov
or
add
xchg
in
mov
mov
pop
dec
inc
rcl
jne
sti
sbb
jo
ja
arpl
inc
pop
push
adc
xchg
insb
inc
adc
popf
daa
lock
enter
stos
mov
into
mov
jl
aaa
aas
jnp
movsb
pop
sbb
and
std
imul
aaa
addl
aaa
sbb
sbb
imul
in
ret
sub
and
js
out
rolb
mov
daa
xchg
mov
inc
mov
mov
ret
push
push
lret
cs
loop
fwait
xor
or
or
or
push
xchg
lds
push
aam
push
test
xchg
movsb
or
imulb
xchg
sbb
add
je
es
mov
mov
lcall
inc
add
lcall
fwait
inc
pop
or
pop
inc
out
loopne
mov
mov
repnz
lcall
repz
pop
add
loop
jmp
cwtl
les
data16
pop
sarb
in
data16
arpl
cs
cs
es
pop
and
movsb
in
sbb
push
mov
pop
ja
loop
xor
fs
xor
push
repnz
pop
pop
add
inc
add
sub
dec
sub
jl
push
lods
cmpsl
adc
mov
cld
lods
aaa
cltd
add
and
mov
or
sbb
jns
adc
add
sub
mov
sub
jb
fidivs
xchg
jo
sub
mov
adc
and
int3
adcb
mov
sub
mov
sbb
add
push
cld
rcrb
push
cmp
dec
mov
into
push
mov
lods
pop
push
push
shlb
shll
sti
iret
sub
js
and
add
int
xor
shlb
push
mov
adc
in
sbb
dec
daa
dec
punpcklbw
imul
jg
push
and
pop
or
mov
xor
bound
jl
andb
shll
ss
out
mov
xchg
stc
push
sub
mov
pop
sbb
fisubl
mov
xor
pop
aaa
inc
mov
mov
addr16
jno
and
das
mov
es
and
cmp
loop
test
push
and
and
bound
test
push
xchg
adc
add
or
xchg
and
push
shlb
ret
ret
sbb
xorl
add
mov
adc
adc
dec
adc
pop
test
push
inc
ljmp
mov
lea
lds
cwtl
or
repz
cmp
adc
imul
fldcw
and
notb
movsb
or
out
push
imul
cwtl
cmp
dec
ret
lods
fisttpl
ljmp
es
jo
sub
or
or
sbb
sub
jge
push
jo
add
inc
cmp
pop
xchg
inc
stos
cmp
push
inc
sbb
dec
outsb
cwtl
add
xchg
adcb
pop
mov
out
push
cld
in
in
add
add
rorl
mov
out
fildll
sbb
hlt
mov
mov
pop
jle
lock
and
pop
scas
aad
sbb
sbb
inc
fucomip
and
mov
fsubl
xchg
sbb
shlb
mov
mov
mov
clc
mov
ds
nop
add
push
arpl
mov
mov
sub
shll
adc
add
jl
inc
xor
and
decl
adc
sub
mov
sbb
testl
mov
repnz
test
jbe
jl
sub
add
sahf
stos
sub
lods
mov
and
sbb
or
pop
hlt
daa
xor
iret
push
xchg
mov
cli
mov
in
loope
cmc
stos
stos
adc
push
jp
mov
leave
lcall
out
sti
call
inc
lods
jg
je
xchg
push
dec
outsb
inc
lds
dec
fstl
sbb
inc
and
inc
sbb
fldt
in
testb
popa
xchg
out
jb
cltd
sub
sub
decl
mov
mov
pop
sarb
arpl
cmp
pop
aaa
ss
xchg
and
push
or
test
xor
inc
cld
mov
jne
lock
push
movl
out
cmp
mov
inc
nop
sub
cli
or
xchg
pop
push
push
loope
lcall
mov
in
hlt
cmp
sahf
icebp
popf
xor
lock
scas
jmp
ret
js
jbe
lods
lods
push
mov
leave
cmp
into
or
and
inc
rol
insb
out
scas
sub
dec
adc
sbb
hlt
mov
lcall
add
movsb
dec
push
ret
rolb
loope
inc
sti
bound
data16
sbb
lock
xchg
mov
test
fnstenv
jne
out
loope
sub
sbb
fidivl
rorb
sbb
jge
sub
and
lea
ljmp
int3
sub
xor
or
sub
das
mov
fcmovne
adc
dec
sbb
shlb
and
ficomps
testl
ja
xchg
loopne
or
sbb
push
int3
jmp
adc
lss
cmpsb
adc
pop
cwtl
and
or
mov
in
imul
add
out
push
rcrb
mov
add
jp
subb
frstor
in
inc
push
or
mov
outsl
push
dec
test
pop
frstor
sahf
xchg
xchg
lock
sub
sub
out
es
sbb
stos
in
cltd
mov
sub
xor
pop
fwait
jae
movsb
add
andb
xchg
mov
je
stos
sbb
xchg
or
mov
aad
test
cmp
ret
jno
xchg
push
mov
sub
imul
sub
pop
pop
push
xor
cmp
mov
sub
cmp
jle
dec
sbbb
cmp
sbb
iret
or
iret
sbb
pop
mov
jo
sbb
lods
stos
mov
adc
in
jge
jne
xor
mov
dec
loopne
lods
dec
xor
jp
idivl
rolb
push
inc
jb
sub
out
push
stos
ss
pop
cmp
lods
movhlps
jnp
scas
ss
push
sub
icebp
push
push
mov
movsb
adc
fisubs
sbb
inc
mov
lcall
js
xchg
ret
bound
add
xor
and
mov
pusha
or
imul
add
pop
add
data16
std
and
aas
je
pop
pop
fildl
xchg
filds
dec
xor
les
and
mov
lahf
aad
add
mov
imul
andps
sub
sarl
or
cmp
or
jne
or
rolb
insl
adc
ret
movsl
dec
xor
sbb
shll
mov
das
outsl
addr16
or
xor
int3
sahf
xor
jp
xor
ret
cmp
clc
call
dec
inc
shrb
in
aad
out
roll
cmpb
add
mov
das
call
aaa
sub
lods
arpl
and
ljmp
fadd
xor
or
rolb
dec
cmp
jg
push
test
xchg
fnstcw
scas
lea
divl
xchg
shr
adc
mov
push
adc
sub
sub
and
sbb
adc
xchg
and
adc
fsubl
test
test
jl
jb
sub
stos
mov
shlb
icebp
js
mov
and
and
add
sbb
cmp
sub
and
push
mov
clc
push
fidivs
fwait
in
xor
int3
push
adc
clc
xor
push
cli
stos
es
lcall
imul
jo
popf
sub
add
mov
in
and
notb
shlb
xlat
mov
dec
in
fcos
pop
pushf
cmp
nop
sub
xor
into
int
fwait
xor
jge
mov
loopne
push
scas
and
daa
pushf
xor
call
ret
mov
ds
pop
inc
xor
popf
push
push
cmp
gs
not
xchg
fsub
shlb
mov
inc
lret
sbb
jecxz
out
rorl
xlat
dec
ficoml
ret
mov
cmp
pop
popl
call
sub
cmp
dec
push
cmp
outsb
aaa
lea
pop
xor
test
dec
pop
pop
xor
sbb
push
or
push
mov
test
pop
push
xchg
push
or
icebp
mov
xor
xor
inc
xor
cmc
add
popa
hlt
inc
aas
fisttps
dec
mov
lods
sub
mov
mov
stos
repnz
jbe
sbb
stc
xor
sarb
aas
xor
mov
cmpsb
test
push
aad
jne
pop
in
bound
dec
dec
push
call
mov
lods
pop
arpl
int
pop
sub
mov
lret
inc
pop
mov
pop
pop
adc
push
push
cmp
dec
mov
cltd
add
in
xchg
sub
jl
lahf
fisubrs
or
mov
add
pushf
fisttps
adcl
jns
mov
inc
add
dec
ficomps
and
sub
sbb
or
adc
mov
jp
adc
stos
fwait
sbb
insl
xor
mov
loopne
arpl
cmp
sbb
cltd
and
pop
cs
inc
add
xchg
or
je
lods
pushf
fwait
stos
mov
rcrl
insl
push
lods
push
jl
out
icebp
xor
dec
adc
xor
adc
js
pop
es
scas
jge
mov
or
adc
int3
pop
lods
fisubrs
std
bound
push
add
test
sub
push
call
xlat
or
mov
ljmp
flds
cmpsl
xor
imul
int
in
and
les
cmpsl
mov
mov
or
shr
cwtl
arpl
daa
icebp
jns
aaa
gs
mov
jbe
out
xor
and
pop
mov
and
ja
cmp
add
ret
mov
scas
inc
int
in
addr16
mov
repz
negb
in
cltd
lods
or
sbb
lds
pop
cmp
jge
fstpl
mov
adc
mov
or
adc
jb
push
in
push
inc
ljmp
loope
add
inc
ret
inc
dec
inc
xor
int
jne
daa
loopne
xchg
aaa
jns
push
sub
subl
adc
and
rclb
adc
adc
test
iret
adc
dec
sbb
lcall
mov
loope
std
mov
inc
int
aaa
lods
xor
das
call
scas
pusha
cmpsb
fiadds
mov
das
jb
out
mov
mov
loop
or
aam
arpl
outsb
inc
jne
andl
insl
sbb
xor
outsb
pop
cmp
mov
adc
xchg
pop
aam
shrl
jecxz
into
mov
arpl
mov
xchg
lock
repz
mov
push
add
int3
aas
mov
popf
fnstsw
pop
int3
shll
rolb
jno
pop
pop
dec
shr
nop
test
adc
rcr
adc
cmp
dec
sub
into
add
fwait
sub
aaa
and
mov
and
push
mov
jnp
adc
mov
mov
or
data16
xor
xchg
jne
pop
lahf
jmp
sub
push
js
ss
or
les
popa
and
rcrl
scas
jnp
int3
lahf
fidivrs
cmpsl
test
repz
or
add
pop
add
pop
out
adc
fbstp
sti
loope
add
or
mov
add
xor
xchg
adc
jmp
stos
mov
jmp
mov
add
inc
pop
jp
test
add
add
adc
mov
das
xor
jns
xchg
pop
xchg
dec
sub
push
pushf
int3
fldl
and
sub
xor
add
shrl
jno
mov
call
jge
lcall
test
push
add
mov
mov
mov
or
outsb
inc
add
daa
dec
ljmp
int3
xchg
inc
aad
inc
mov
mov
xlat
and
and
popl
notl
lock
push
mov
popf
call
scas
jns
sbb
or
aad
ds
xor
or
push
adcb
clc
scas
sub
inc
daa
adc
jbe
aaa
mov
or
repz
insl
or
fistpll
add
mov
call
shlb
adc
xchg
dec
loop
xor
sbb
jmp
jmp
aam
xchg
rcl
and
jmp
xor
sub
xchg
mov
call
or
inc
mov
repz
ss
jb
xchg
push
adc
push
mov
cli
jl
sub
inc
and
test
fimuls
fucomip
lds
sahf
xor
and
pop
sub
mov
mov
add
and
mov
jp
sub
test
lret
scas
xchg
stos
cmp
cmp
out
push
jo
in
mov
sti
adc
pushf
stos
dec
mov
pop
xor
xor
jnp
test
inc
pop
mov
jp
jmp
jae
jg
and
lcall
les
scas
adc
adc
and
xor
filds
popa
arpl
in
adc
rorl
mov
inc
icebp
dec
mov
push
das
ds
rcl
or
add
inc
adc
sbb
lea
lock
shl
mov
ja
call
cmpsb
fs
out
cmpsl
iret
nop
mov
adcl
and
sbb
pop
in
push
mov
jb
loopne
daa
or
cmp
xchg
jno
pop
adc
or
pusha
jle
je
inc
xchg
ss
inc
add
andl
pop
out
cmp
cmp
test
in
and
jmp
inc
adc
in
push
lea
dec
mov
mov
sub
rolb
adc
cwtl
roll
mov
sahf
roll
push
cmp
adc
jb
add
and
and
jl
pushf
sub
jp
cmp
xchg
and
in
and
loopne
and
adc
push
outsb
sub
je
and
in
sbb
xchg
insl
movsb
loopne
movsb
push
arpl
adc
inc
arpl
in
popa
repnz
jno
or
or
add
inc
aaa
or
xchg
imull
data16
sub
pusha
push
lock
test
popa
add
pop
outsl
mov
xchg
and
call
lahf
jg
cmp
add
sub
cmp
arpl
lret
jge
cmc
sub
mov
mull
lds
lahf
popf
xor
jp
inc
jno
push
mov
outsl
ret
xchg
and
add
inc
testb
adc
ret
sarb
inc
push
js
shrl
je
cmp
inc
dec
subb
adc
inc
loopne
inc
push
mov
push
jno
lea
jne
cmpsl
mov
lds
pop
fldt
cmp
sub
fucomip
push
and
popf
movsl
fcmovbe
out
push
dec
xchg
push
mov
or
mov
pop
adc
lea
mov
in
aas
lock
test
movsb
cmp
test
adc
cltd
ret
inc
cli
inc
jg
sbb
inc
or
jg
iret
into
adc
jnp
adc
popa
in
scas
cwtl
dec
dec
jl
mov
or
js
push
outsl
roll
cmp
add
ss
or
les
mov
stc
incl
iret
jmp
cmp
int
js
or
and
rorl
xor
and
leave
mov
cmp
adc
and
cld
and
pop
je
in
fs
and
cmpl
jns
sub
jno
pop
loop
dec
push
adc
shl
loopne
inc
xor
fsts
or
inc
dec
xchg
testb
and
lcall
rol
adc
push
push
xchg
es
daa
pop
aaa
and
fwait
dec
xor
mov
add
dec
negb
or
mov
sub
xchg
pop
ficompl
mov
fcmovnbe
xor
adc
inc
movsl
mov
js
or
in
es
enter
out
ret
dec
xchg
je
ljmp
addb
xchg
mov
inc
popf
cmpb
push
out
sbb
xchg
adc
adc
sbb
sahf
lahf
or
test
roll
mov
imul
xor
dec
pandn
daa
push
mov
mov
adc
mov
int
imul
rcrl
push
inc
cmp
andb
js
das
inc
dec
mov
pop
vcmpnltps
and
loopne
add
xor
mov
js
addr16
sbb
jmp
mov
adc
inc
xor
xchg
fadds
push
jne
dec
imul
mov
mov
cltd
mov
ss
ds
xor
push
cwtl
inc
dec
cli
loope
mov
pop
mov
push
add
inc
mov
out
test
jp
and
popa
or
mov
mov
pusha
pop
xchg
into
xchg
and
scas
enter
stc
je
out
cmp
add
push
int3
xorb
insb
popa
push
orl
aas
test
add
popa
adc
xor
shrb
push
hlt
test
push
adc
nop
inc
fs
xchg
stos
loope
daa
test
outsb
insl
push
stc
sbbb
add
jo
sbb
aas
push
out
add
dec
call
dec
orb
jecxz
andl
or
add
icebp
xor
jbe
or
cmc
jle,pn
popa
mov
and
pop
mov
mov
adc
push
push
adc
dec
mov
movups
jl
sbb
cmp
aaa
add
sub
rorl
mov
sub
in
mov
or
imul
imul
sub
and
lea
jns
cmc
mov
adc
inc
sbb
rcrb
jbe
sub
add
mov
xor
xchg
pushf
adc
mov
mov
bound
pop
clc
pusha
adc
xchg
or
stos
data16
dec
push
das
data16
sub
jo
and
xchg
lahf
xor
inc
or
push
push
mov
cs
mov
add
mov
or
sahf
inc
jle
adc
andb
lea
lock
subb
mov
sbb
xor
cwtl
pop
das
xchg
lods
xor
pop
or
mov
roll
jmp
mov
adc
mov
dec
cmp
jns
jle
ficoms
pop
mull
shll
or
mov
pop
js
inc
addl
or
ja
inc
add
jne
es
jp
sahf
repz
inc
les
or
into
ss
pop
sbb
or
outsl
test
xchg
inc
inc
sbb
shlb
bound
dec
mov
xchg
pop
fisubl
cmp
cmpsl
test
enter
sub
xchg
mov
insb
out
sahf
cmpsb
shlb
xor
out
mov
xor
mov
loopne
lcall
jp
cmc
movsl
jp
pop
es
bound
js
das
add
and
pusha
clc
inc
test
lods
and
mov
int
lods
jge
andl
lock
ljmp
bound
rcrb
and
push
les
sbb
push
bound
add
fwait
push
xchg
add
into
jbe
dec
scas
dec
je
or
adc
adc
adc
fwait
dec
cmp
dec
cmp
inc
and
rolb
sbb
adcl
and
lds
xor
aaa
pop
jno
jne
or
inc
add
xor
xor
test
push
out
mov
push
insl
lret
sub
dec
inc
xchg
popf
andb
add
or
jnp
sub
pop
xlat
jmp
cmp
sbb
mov
idiv
addl
push
icebp
mov
and
rolb
xchg
add
and
test
cwtl
mov
stos
add
mov
mov
fsubs
push
sub
test
sbb
dec
xor
out
inc
js
andl
rcll
insb
stos
sbb
cmc
xchg
add
xor
xchg
fisubs
rorb
ljmp
sbb
adc
fsubs
and
les
aas
sub
lea
sub
jnp
adc
mov
xor
cld
xor
pop
cmp
add
data16
sub
ds
cld
data16
addr16
push
les
sbb
sub
and
shll
pop
inc
xor
pop
mov
aam
pop
jg
ss
lret
fists
sub
rol
mov
add
or
or
adcb
xor
and
sbb
pop
adc
xchg
add
mov
sbb
loope
aad
push
call
iret
rcrb
sub
mov
inc
mov
cmpsb
and
xor
int
pop
and
adc
call
lahf
xor
fs
lods
or
jnp
mov
adc
vmovsldup
dec
stc
cmp
sbb
xchg
cmp
or
stos
jle
jle
sub
mov
add
dec
sub
loopne
mov
addl
inc
in
jle
push
or
es
inc
sub
mov
loopne
add
enter
pop
movsb
dec
pop
test
mov
shl
das
xchg
lods
or
push
imul
mov
fs
popf
popa
or
or
pop
add
sbb
sbb
je
or
mov
mov
fcomps
fisubrl
mov
inc
inc
cmp
fimuls
or
inc
pop
or
popa
daa
addl
into
mov
push
xor
mov
adc
add
cmp
and
cmp
or
insl
jl
inc
push
inc
pop
mov
sar
inc
mov
xor
push
inc
and
dec
and
je
or
lcall
loop
adc
add
or
jno
sub
lea
jnp
mov
jge
inc
rorl
fisttps
cmp
in
push
xor
cmp
jo
mov
pusha
jmp
iret
or
stos
sbbb
or
push
jno
adc
jbe
sub
idivb
push
stos
mov
js
pop
aas
pop
xor
xlat
mov
mov
jecxz
cmp
arpl
inc
movsb
aad
push
rclb
pop
das
iret
das
xorb
dec
sub
pusha
vpsubusb
rolb
loope
pop
jmp
xchg
xchg
jnp
push
or
roll
fyl2xp1
adcl
dec
sbb
cwtl
cmp
xor
xor
les
or
mov
add
mov
shrl
loopne
jl
js
sub
adc
jge
xchg
dec
add
adc
mov
and
movsb
adc
andb
es
shlb
pop
sbb
add
push
dec
add
xor
sbb
inc
subb
cmpsl
xchg
adc
push
mov
mov
test
mov
push
push
add
orb
mov
stos
sbb
jle
xchg
pop
lret
jg
xor
das
mov
jno
in
mov
adc
popl
scas
sbbb
adc
aad
jne
lds
push
daa
pushf
adc
mov
test
in
sub
mov
in
or
aaa
or
pop
or
adc
adc
push
ficomps
lea
mov
pop
hlt
and
lea
mov
add
lea
add
in
mov
jp
sti
dec
add
inc
cwtl
loope
push
jnp
pop
dec
jmp
rcrb
adc
push
cmp
sub
sub
pop
sbb
into
push
xor
test
sub
or
inc
dec
inc
inc
lret
xorb
inc
or
scas
add
pop
push
rolb
les
lret
frstor
xchg
or
nop
pop
jle
and
sub
mov
xor
inc
mov
mov
aaa
jae
jne
fldt
push
jb
mov
sub
push
pop
xor
mov
fbstp
insb
jecxz
test
jo
loop
stos
mov
or
int
outsl
dec
push
icebp
push
and
sahf
jno
dec
out
cmc
addb
dec
pop
testb
mov
addb
in
and
xor
addr16
mov
pop
jl
lock
push
aam
pop
aad
pop
aam
inc
adc
inc
add
dec
inc
push
lea
xchg
adc
sub
push
mov
sub
loope
jp
leave
sub
fdivs
adc
cmp
andb
add
movsb
or
mov
or
fidivrl
xorb
or
rorb
mov
pop
xchg
and
inc
lock
lock
push
imul
sti
movsb
pop
sbb
jg
adc
mov
jno
inc
rorb
stos
mov
inc
scas
test
test
or
test
jb
mov
inc
in
adc
arpl
pop
dec
push
test
lock
push
and
inc
scas
out
pop
cmp
loope
pop
mov
imul
sbb
xor
loopne
mov
scas
shll
cwtl
fwait
inc
mov
fidivrl
add
adc
shrl
adc
adc
add
inc
into
push
mov
and
adc
xor
and
sub
insb
or
mov
inc
sub
popa
fbld
stos
sbb
shl
enter
cld
mov
add
and
pop
push
sbb
xor
mov
gs
push
pop
xchg
rcrb
adc
lods
les
add
lods
and
adc
pusha
lods
mov
push
xor
dec
mov
bnd
dec
stos
mov
mov
aad
adc
in
cmp
scas
adcl
add
xor
xchg
mov
int3
push
hlt
ss
jb
jbe
int3
int3
mov
aaa
jns
mov
aaa
push
add
xchg
mov
rorl
xchg
call
mov
sahf
stc
sub
and
xchg
mov
int3
je
mov
push
testl
je
mov
and
xor
sbb
adc
fwait
inc
xor
or
add
xor
mov
gs
pusha
push
jae
mov
out
or
push
icebp
cmovns
xchg
jne
add
ret
or
cmp
dec
popf
lods
push
xchg
rol
ja
dec
inc
mov
loopne
cmp
sbb
and
or
mov
lds
mov
dec
jne
push
mulb
test
dec
stos
cwtl
adc
adc
or
sti
and
inc
sub
add
movl
mov
adc
outsb
and
lds
popa
cli
cmp
add
loope
and
loopne
jge
pop
inc
frstor
nop
or
pop
xor
and
and
and
test
xor
jns
out
inc
sbb
fwait
jp
or
dec
xorl
sbb
subb
push
nop
add
imul
mov
lock
cmp
icebp
inc
xor
mov
andb
push
and
sub
call
adc
or
inc
add
xor
inc
cmp
adc
lds
mov
inc
or
or
or
push
jmp
adc
pusha
mov
lcall
push
inc
mov
ds
popa
add
leave
mov
cmc
jo
popf
add
fsubl
in
test
addl
or
sub
fiadds
mov
mov
imul
xchg
add
dec
sbb
mov
xor
sub
sbb
inc
imul
pop
fld
add
test
and
inc
js
push
mov
xor
adc
cld
pop
js
or
lcall
and
test
inc
xchg
sti
fisubs
adc
test
cld
je
add
xor
sub
call
lret
add
andl
ret
sub
dec
mov
fs
push
rorb
adc
cmp
lret
mov
mov
dec
mov
cmp
adc
xor
loopne
add
aam
add
inc
mov
push
or
adc
add
and
bound
push
add
or
cmp
insl
add
pop
xor
fadds
add
sbb
cli
mov
mov
daa
sub
mov
pop
out
movsb
popf
test
sub
mov
cmc
popf
fs
xchg
dec
sub
mov
push
dec
sbb
imul
fidivl
add
jmp
inc
sub
mov
and
sbb
jns
lret
lods
xorb
sub
dec
test
dec
cld
and
mov
xchg
test
inc
insl
repz
and
mov
sub
xchg
mov
dec
xor
lret
orb
movlps
xchg
xor
les
stos
and
repz
add
out
sub
jns
incl
dec
pusha
add
call
add
sbb
les
mov
fstp
addr16
add
imul
push
or
mov
sub
scas
ss
inc
jp
or
sti
or
sbb
adc
add
aaa
mov
or
adc
gs
mov
jnp
push
test
stos
add
pop
fnstenv
add
adc
sub
subb
mov
mov
imul
sbb
in
xchg
nop
cwtl
data16
pop
mov
xor
push
add
sbb
in
int
ret
xlat
cmpsl
gs
push
push
fdivs
mov
fmull
adc
test
filds
or
adc
and
lds
add
aaa
inc
dec
sbb
sbb
mov
clc
loopne
daa
lds
popa
jge
pop
int
add
inc
call
daa
adc
adc
ss
dec
cli
sub
mov
sub
mov
and
daa
mov
or
and
scas
sub
add
shll
inc
mov
xor
inc
sub
mov
jbe
push
jb
clc
adc
lods
inc
mov
pop
dec
xlat
int
adc
popa
inc
movd
inc
in
sbb
ljmp
sbb
addb
scas
push
sbbb
or
addb
cmp
add
cwtl
lods
fcoml
mov
mov
mov
mov
lods
int
jo
fidivs
and
push
sbb
push
inc
jecxz
mov
push
jno
xchg
push
lds
cld
cmp
inc
push
inc
add
scas
addr16
inc
ljmp
test
mov
ljmp
xor
push
add
xor
xchg
and
add
test
insb
shll
lea
push
fsub
jno
xchg
mov
add
sub
and
cmp
cmp
daa
out
and
je
sahf
fcom
push
jl
in
enter
js
mov
sbb
mov
or
repnz
cmp
mov
mov
xbegin
addb
xor
sub
mov
and
icebp
test
pop
jg
jnp
mov
xor
int
sbb
lcall
fidivl
cwtl
adc
adc
es
and
jbe
and
and
push
add
dec
add
int3
sub
inc
lock
es
jns
arpl
xchg
mov
inc
aam
subb
and
dec
stos
movsb
or
mov
mov
aas
in
fcomp
adc
pop
je
aaa
push
and
and
addb
or
aam
cmp
xor
xchg
imul
stos
adc
push
andb
xor
jno
add
pop
add
dec
lods
adc
mov
sub
inc
adc
test
xor
gs
mov
cmp
inc
push
mov
mov
xchg
sahf
and
xchg
cmp
movsb
lret
lret
and
inc
popa
sbb
inc
lock
push
inc
xchg
cli
ljmp
sub
test
lahf
and
sbb
data16
scas
add
or
add
push
xchg
adcb
loop
add
pop
filds
mov
mov
stc
pop
int3
mov
ljmp
in
test
lret
ja
xor
aas
popf
adc
pop
aam
cmp
in
loope
fs
mov
inc
rcr
and
push
lods
sbb
jecxz
adc
int3
or
mov
sbb
cmp
or
ds
push
dec
add
mov
sbb
repz
std
and
or
dec
and
jle
arpl
fsubrl
mov
lock
push
sbb
push
test
pop
adc
inc
sub
fmull
popa
ljmp
rcrb
add
lcall
adc
or
pop
push
inc
bound
adc
ret
addr16
inc
out
adc
cmp
inc
leave
mov
push
or
mov
mov
movsb
add
inc
cmp
loop
mov
and
jnp
xlat
push
or
lods
movsl
mov
je
nop
push
and
stos
movl
fmul
loopne
inc
adc
jl
inc
xchg
sbb
ret
or
xchg
outsl
or
add
out
and
imul
xchg
inc
pop
or
repnz
aad
inc
and
adc
aaa
lods
dec
sbb
dec
adc
mov
cmp
or
into
std
int3
sbb
and
stos
xchg
xor
dec
pop
push
xor
fldcw
mov
popf
mov
fcmovbe
xor
lock
fwait
lods
nop
fcoml
imul
jae
div
into
pop
fnstsw
fidivrs
push
sub
loopne
cwtl
push
xchg
or
inc
adc
add
test
sarb
jbe
adc
ret
sub
pop
dec
jbe
cmp
int3
mov
hlt
aam
aaa
stos
adc
negl
aaa
lods
push
jmp
ljmp
mov
inc
adc
pusha
ss
push
shll
pop
or
ljmp
aaa
dec
sub
dec
inc
nop
popf
cmp
inc
sbbb
arpl
jo
ljmp
sub
cmp
xchg
xor
add
sub
add
testl
adc
fcomps
iret
iret
dec
pop
movsl
lcall
mov
cwtl
int3
jg
mov
add
and
mov
xchg
test
mov
mov
cmpsb
cmp
divb
jmp
xchg
pop
data16
inc
push
mov
aaa
mov
inc
stos
ret
push
pop
sbb
addr16
cld
cmp
and
in
and
loopne
in
inc
inc
js
dec
pop
call
cwtl
call
shlb
stos
das
cmc
and
ja
aam
xchg
loopne
and
lods
mov
jg
sub
insl
test
xchg
lret
test
mov
jp,pn
pop
cwtl
inc
or
add
sub
xor
cmp
cmp
inc
xorb
xchg
into
jbe
xchg
inc
mov
dec
pusha
jno
shlb
mov
dec
adc
clc
hlt
push
add
sbb
and
pop
mov
mov
push
add
sub
and
xchg
push
dec
sbb
clc
mov
aad
adc
mov
int
les
mov
cmp
out
lods
dec
sub
sbb
scas
dec
movsl
push
test
arpl
imul
mov
mov
movsb
ret
adcb
rorl
fadds
or
push
xor
sub
pop
leave
push
jns
or
jp
jne
mov
adc
cmp
sub
and
fadds
pusha
add
adc
inc
das
and
addl
push
cs
insl
iret
and
inc
je
sub
xchg
cwtl
push
outsl
add
pusha
sbb
push
cmp
sub
sbb
shrl
jb
push
or
pop
jmp
add
xchg
es
and
sbb
push
iret
pop
sahf
dec
or
insb
mov
or
aam
xchg
lods
or
inc
add
mov
jmp
cld
xor
ss
sub
in
sub
or
and
ja
mov
or
add
add
and
fiaddl
mov
out
xor
lea
push
cmp
loopne
gs
and
xor
shlb
cmp
and
adc
sub
pop
push
out
sbb
xor
jle
adc
pop
fmul
mov
leave
mov
sbb
mov
lods
outsl
sbb
jl
push
popaw
pop
push
repnz
notl
fwait
adc
mov
cmpsl
xor
mov
lea
fdivl
jno
rolb
push
outsl
sbb
std
shll
or
mov
js
add
adc
and
sub
test
xor
je
adc
mov
sub
or
adc
clc
push
popf
jne
inc
sbb
adc
bound
sbb
mov
shlb
sbb
xor
sbb
fnstenv
pop
cmpsl
negb
push
push
or
cbtw
lds
xlat
add
add
test
popa
push
scas
xor
lret
fsts
pop
push
scas
cs
adc
pop
les
fwait
call
xchg
loopne
addr16
xchg
jns
push
push
fists
push
or
or
push
stos
sub
adc
sub
test
inc
andb
aas
and
and
insb
and
data16
pushf
pusha
sbb
ret
xor
daa
jns
xor
es
fnstsw
push
adc
inc
jno
xchg
lods
popa
inc
addr16
ja
mov
mov
test
or
inc
add
dec
push
neg
jl
pop
aam
test
fmuls
test
mov
mov
push
cwtl
push
or
sub
sbb
pop
and
cmpsl
dec
pop
or
stos
mov
sub
mov
dec
aas
bound
leave
repz
fsubs
aaa
in
mov
hlt
int
cmp
sbb
and
add
adc
inc
sub
pusha
jb
testl
mov
mov
dec
or
movb
cltd
mov
push
inc
jge
or
cmp
push
xor
push
fisubrl
call
mov
pop
add
test
sbb
xor
fs
movsb
nop
and
add
pop
or
in
mov
inc
iret
push
and
ja
rcll
xor
in
add
xchg
add
orb
js
sbb
dec
mov
push
mov
es
fcomi
scas
sub
and
xor
dec
pushf
sub
sbb
xor
push
xor
adc
pusha
pop
call
das
sbbb
test
inc
adc
or
adc
das
test
sub
push
mov
fs
loopne
in
add
fisubl
add
cmp
pop
sbb
add
cmp
inc
xor
and
mov
sahf
add
push
push
sbb
xchg
xor
sbb
ss
mov
cmp
adc
lock
test
pusha
push
cmp
popf
push
sub
cmpsl
push
xor
pop
loope
shll
cmp
sub
pop
adc
inc
cwtl
test
shlb
adc
bound
stos
les
cmp
push
adc
outsl
ret
ss
imul
test
loopne
xchg
xchg
cmp
adc
stos
dec
sahf
ret
cmp
push
nop
mov
test
jle
mov
xchg
push
sub
and
mov
push
sub
pop
and
out
popf
push
push
ret
and
and
call
movsl
psubsb
push
add
js
lret
sbb
sbb
aad
pushw
and
and
push
or
ja
lds
iret
xor
jp
mov
sahf
subb
rsqrtps
adc
add
sbb
pop
fsts
fst
inc
fistpll
xor
dec
xor
movsb
jmp
xchg
arpl
ja
push
aam
cmp
aam
dec
and
adc
lods
popa
jnp
in
nop
sub
pop
dec
pop
jno
bound
fs
sub
orl
outsl
mov
es
xor
xor
shl
flds
movsb
add
lcall
push
inc
xchg
xchg
and
fs
pusha
sub
rclb
add
push
mov
or
ss
out
mov
loopne
add
adc
and
add
lock
mov
call
mov
std
ljmp
xor
ja
sbb
and
jecxz
adc
push
xor
pop
lea
sub
sub
jno
dec
leave
and
je
mov
add
jg
movsl
mov
mov
lds
sbb
movsl
jbe
cmc
adcb
stc
push
arpl
in
push
popf
and
pushf
sub
and
cli
inc
push
nop
lcall
sbb
cmp
mov
xor
mov
or
cmp
in
sub
ss
sub
cmp
fbld
add
aaa
pop
mov
sbb
arpl
pop
xchg
mov
xorl
outsl
pop
imul
xchg
lock
mov
daa
testl
adc
adc
mov
dec
lods
lcall
icebp
push
aaa
dec
or
mov
adc
or
das
sbb
xchg
lods
dec
into
in
daa
push
push
cmpsl
addb
push
inc
xchg
pusha
sti
jmp
in
pop
mov
adc
push
xorb
add
jecxz
cmp
wbinvd
into
sarl
xor
sbb
or
mov
sbb
add
mov
push
and
pop
ret
es
repz
xchg
imul
mov
push
sbb
repz
paddsb
jb
mov
sbb
dec
int3
mov
xchg
xchg
aad
pusha
add
jp
fs
cmpsl
fadd
lds
mov
hlt
loop
idiv
jle
xchg
and
ds
lods
arpl
insl
loop
aaa
rcrb
scas
or
cmp
adc
sbb
cmp
andb
mov
sbb
call
fidivs
stc
mov
or
and
mov
push
add
ret
or
lcall
js
popa
cwtl
fs
pop
xor
ret
iret
jle
loopne
arpl
add
adc
push
sbb
cs
pop
push
add
pop
jmp
test
push
push
push
xor
outsb
ret
add
or
and
sub
mov
sbb
ficoms
sub
aam
add
adc
std
push
add
and
ret
adc
stos
mov
hlt
or
pop
push
pop
jns
push
and
mov
loope
sbb
push
aaa
and
push
xor
push
data16
pusha
xorl
gs
clc
aam
cli
aaa
int3
loope
scas
ficoml
mov
mov
sub
jp
jmp
out
cmc
pop
adc
mov
xchg
sbb
push
inc
test
push
add
xor
test
fcompp
jnp
fdivl
in
shll
push
testl
lods
push
jbe
mov
push
push
xor
mov
or
adc
mov
fldcw
repz
xchg
mov
push
mov
sub
adc
xchg
inc
movsl
add
sub
in
push
mov
and
fildll
sub
push
addr16
and
xchg
test
sub
push
pushf
out
sbb
outsb
adc
mov
push
jle
roll
jp
faddl
pop
jmp
adc
and
and
sub
fmuls
fwait
xchg
shl
or
aas
mov
mov
inc
cmp
test
cmp
outsl
iret
jno
inc
mov
mov
pop
push
dec
sbb
mov
in
scas
push
pop
mov
jl
mulb
pop
jno
call
mov
mov
add
cmp
and
add
push
jp
xor
dec
sarl
xchg
in
xor
jecxz
outsb
xor
inc
or
or
jo
out
or
jp
push
leave
lea
fnstcw
mov
data16
mov
cltd
adcl
fwait
jno
dec
inc
cmp
nop
xchg
jae
loopne
out
mov
mov
jp
testb
aad
aad
cmp
into
or
sbb
dec
orb
adc
andb
movsb
mov
xorb
pop
jo
pop
sahf
push
hlt
mov
cmp
jp
add
into
push
fistl
pusha
daa
aam
push
inc
out
add
push
sbb
ja
cmp
shlb
imulb
icebp
xor
adc
fisttpll
adc
loope
sbb
jmp
int3
ret
push
push
or
push
xchg
fmuls
push
adc
pop
pop
mov
cmp
mov
icebp
cmp
negb
ja
add
mov
rorl
addr16
ret
es
das
aaa
adc
pop
xor
into
jp
lret
jmp
add
jp
popa
shufps
nop
xor
cli
push
pop
out
cmp
inc
arpl
outsb
int
dec
imul
and
or
push
pop
add
mov
dec
or
out
adc
pop
leave
cmc
data16
pop
das
les
fsubp
mov
popa
js
and
pusha
cmp
gs
lods
push
stc
or
pop
xchg
aam
xor
adc
and
bound
pusha
adc
ret
das
xor
stos
stos
or
pop
add
add
fs
mov
xor
xor
jno
popa
pop
jne
andl
in
xchg
stos
mov
add
mov
or
loopne
cmp
xor
push
ficoms
pop
xorb
sbb
scas
sbbb
cmpsl
daa
or
cmp
inc
adc
lods
dec
sub
mov
mov
mov
adc
test
and
subb
adc
loopne
add
ret
scas
jnp
fucom
mov
xchg
dec
xchg
test
xor
stos
ret
ret
sbb
adc
cwtl
push
jg
setne
xor
cmpb
push
cmp
pop
stos
or
ds
aam
inc
stos
jno
lret
mov
push
xchg
jnp
loop
das
mov
andb
inc
and
sti
lods
xchg
pop
ret
dec
pop
fwait
movsb
dec
add
cmp
imul
data16
rcll
lds
sbb
mov
or
pop
or
add
or
and
shlb
adc
or
mov
sub
aad
shlb
jmp
jo
mov
insb
les
xor
mov
jo
adc
aam
sub
dec
into
das
mov
es
push
xor
or
lcall
add
or
rorl
jle
outsl
test
sbb
dec
and
ret
insb
or
divl
push
or
sbb
push
sub
outsb
pop
cmp
adc
mov
push
test
mov
mov
dec
or
andl
aam
push
sub
and
fs
lcall
or
js
arpl
dec
and
xchg
call
mov
adc
and
inc
jo
les
or
mov
sub
dec
jns
aaa
mov
jle
les
iret
jo
dec
aad
or
push
sbb
and
add
inc
mov
popa
js
cmp
inc
sbb
shlb
dec
add
loop
and
sbb
sbb
mov
iret
mov
jp
dec
push
dec
stos
and
shlb
pop
inc
popf
sarb
ficoml
and
push
sub
mov
dec
push
mov
sahf
inc
mov
push
or
adc
or
mov
or
sub
add
adc
insb
inc
aad
cmp
and
mov
cmp
mov
and
ret
mov
sub
adc
sbb
inc
fldcw
push
sub
push
mov
add
xchg
push
pop
sub
add
jl
mov
pushf
shrb
or
adc
mov
inc
inc
cmc
jne
pop
or
dec
shrb
inc
mov
hlt
jmp
and
test
js
fldenv
shlb
out
dec
or
mov
adc
sub
or
inc
mov
lcall
xchg
adc
scas
adc
cwtl
xor
push
fldt
xchg
adc
aas
push
dec
lock
sub
add
or
push
movsb
push
cmp
pop
scas
rorl
sub
sub
sub
shl
jno
xchg
adc
mov
shrl
loope
sbb
pop
sbb
add
inc
movsb
dec
test
clc
popa
movsl
add
pop
imul
mov
icebp
fdivrs
outsl
adc
and
and
cld
fldcw
sbb
xor
mov
lods
push
pop
in
scas
jb
sub
mov
jb
stos
jge
xchg
aaa
push
daa
add
cmp
cmp
loop
sub
fimull
mov
push
daa
or
dec
cmp
sub
push
je
repz
lock
xchg
or
mov
andb
gs
xor
jno
jo
call
ljmp
sbb
inc
adc
lea
addb
jle
inc
icebp
ret
sub
insl
add
or
and
inc
pop
adcl
cmp
xchg
pop
outsb
cmpsl
push
adc
sbb
sbb
cmp
inc
cltd
lods
jnp
aas
pop
dec
lds
es
push
lock
mov
adc
inc
bound
mov
das
fisttps
femms
or
and
fwait
mov
or
mov
push
cmp
sub
stos
dec
mov
subl
xor
xchg
popf
sbb
add
and
data16
mov
int3
cmpb
inc
inc
loopne
push
sbb
lahf
xchg
jle
sub
pop
mov
stos
pop
adc
call
push
mov
dec
inc
mov
aam
sub
sub
mov
push
outsl
mov
sub
dec
push
adc
cwtl
test
adc
lods
add
popl
add
mov
xor
push
cmp
subb
jmp
dec
mov
pop
cld
lcall
push
and
sbbb
mov
dec
adc
mov
inc
cwtl
movsb
andb
add
popf
lahf
xor
jp
ror
and
ljmp
jno
arpl
std
xor
daa
cmp
add
jle
jbe
mov
scas
ja
add
push
ret
mov
pop
adc
sub
dec
add
inc
rcr
mov
push
mov
pop
push
push
imul
sub
pop
or
roll
sahf
fcompl
jl
stos
inc
push
sub
adc
mov
inc
add
jg
xlat
enter
pop
pop
mov
xor
inc
mov
sbb
daa
call
popf
xor
push
dec
push
ret
dec
sub
call
or
inc
or
popa
adcb
sub
sbb
ja
out
or
and
adc
incl
mov
bound
mov
mov
xor
sub
xor
mov
xlat
pop
aad
xchg
stos
jp
and
mov
cmp
add
gs
adc
dec
lcall
mov
ret
push
inc
shlb
sub
xchg
clc
es
div
push
push
movsb
xor
push
add
lods
mov
ficoms
lods
aas
stos
test
adc
and
inc
sub
aad
addb
popf
ja
mov
outsl
daa
adc
jmp
gs
aam
mov
test
or
aad
and
fs
jp
and
push
mov
nop
mov
dec
jo
xchg
jle
or
dec
or
pop
inc
test
aad
sub
andb
addb
xor
add
push
dec
or
adc
add
lock
mov
push
push
adc
or
cmp
lret
push
xor
fmuls
adc
sbb
clc
and
xchg
add
inc
je
andl
push
inc
mov
jo
pop
idiv
cmp
add
xchg
test
adc
and
imul
and
loopne
push
sti
cmp
or
mov
call
ja
adc
fldenv
lret
ret
jbe
add
jmp
dec
ret
sti
push
shll
jl
mov
stos
sub
inc
add
jno
outsb
lret
cmp
push
adc
pop
mov
and
movsl
pop
push
leave
mov
movsb
dec
js
mov
stos
pop
shll
bound
iret
fsts
pop
pusha
pop
dec
test
lock
or
xchg
dec
iret
mov
inc
mov
pop
add
leave
add
cmp
arpl
adc
int
insb
mov
and
dec
ja
jo
fcmovb
sbb
jbe
adc
add
bound
gs
sub
adc
dec
and
xor
imul
add
jg
mov
lret
test
mov
inc
ljmp
pusha
lret
push
jl
pusha
lahf
adc
fdivrs
xor
mov
push
cmpb
repz
inc
andb
repz
bound
lahf
push
mov
or
or
dec
sbb
lcall
lock
es
popa
sbb
js
inc
ljmp
or
and
add
pusha
imulb
shl
lret
cmp
std
add
imul
pop
jno
sub
pop
add
test
push
or
or
and
icebp
mov
or
cmpl
out
add
dec
adc
push
jl
and
adc
scas
jbe
jae
dec
jl
push
ret
lcall
and
aas
add
les
or
cwtl
and
xchg
ret
and
or
sarb
pop
js
jg
cmc
pushf
mov
inc
ja
sbb
ret
movsl
dec
adc
rorl
xchg
xor
jmp
aaa
xchg
mov
ret
imul
mov
cmp
cmp
fadds
push
push
xor
stos
or
outsb
fwait
push
ljmp
push
ss
adc
pop
data16
pop
dec
push
inc
in
inc
fcomp
jecxz
add
aad
iret
ret
push
or
push
test
sub
dec
add
mov
loop
xor
test
sub
xor
or
inc
jno
or
test
mov
mov
test
leave
inc
adc
xchg
push
push
pop
cmp
adc
inc
int3
add
stos
mov
push
xchg
add
adc
lret
mov
daa
or
sub
popa
add
jp
push
inc
sub
outsl
negb
push
inc
inc
js
cmpl
inc
mov
fadd
pop
scas
popa
ret
fisttpl
inc
xchg
in
and
mov
mov
and
cmc
mov
bound
lea
out
add
mov
xor
push
mov
mov
testl
jne
and
push
inc
or
test
les
jb
shlb
and
sbb
aaa
test
ret
sbb
adc
ss
inc
xor
cwtl
add
xor
fsubs
push
xor
push
lds
cli
subb
add
jne
xchg
xor
dec
pop
inc
adc
ja
xor
and
jbe,pn
push
push
lods
subb
filds
jl
and
mov
xchg
or
bound
xorl
insl
inc
test
fsubs
inc
loop
push
jmp
pop
inc
push
and
lods
rol
jnp
cmp
popa
inc
stos
test
shl
out
fldenv
test
and
out
jp
sbb
dec
icebp
xchg
mov
push
roll
stos
out
xor
aaa
add
out
push
lods
fimull
cmp
add
scas
das
orb
in
push
sbb
push
inc
nop
xorb
push
inc
mov
sub
mov
mov
push
inc
ret
or
popa
ret
bnd
add
or
loopne
ficoms
ret
scas
and
jbe
sbb
dec
je
sub
leave
add
add
mov
movsb
xchg
cmp
sub
sbb
mov
stos
mov
loop
push
loop
fbstp
cmp
sub
jns
adc
data16
push
scas
and
nop
cltd
adc
add
mov
push
add
push
sub
inc
es
adc
mov
push
loopne
jge
and
push
add
nop
stos
xchg
mov
pushf
popf
ds
or
dec
nop
dec
xchg
push
sub
sub
adc
adc
jbe
sbb
xor
ljmp
test
cmp
mov
and
iret
repnz
inc
jo
ljmp
add
inc
sar
or
shld
dec
pusha
shl
jo
push
outsl
mov
adc
add
loop
cmp
es
xor
sahf
sbb
mov
mov
hlt
or
in
test
popf
bound
rclb
adc
das
in
xchg
bound
xchg
jno
in
adc
dec
push
inc
xchg
jbe
add
push
push
arpl
or
popf
push
sub
stos
or
inc
adc
add
in
jmp
frstor
sub
test
add
fs
movsb
fnstsw
mov
xor
push
int3
clc
notl
sbb
adc
out
xlat
mov
mov
mull
daa
mov
icebp
sbb
or
rorb
cmpsl
inc
dec
jbe
mov
mov
mov
cmp
dec
inc
insl
mov
ret
mov
add
mov
dec
ret
test
sub
jo
mov
and
adc
sbb
aas
inc
push
pop
loop
push
lods
mov
aam
push
iret
dec
adc
pop
daa
and
cmp
sti
jo
fisubs
adc
adc
repz
sub
push
add
pop
xor
adc
xor
repnz
inc
cmp
test
stc
sub
popl
scas
mov
ret
adc
inc
jbe
add
push
jp
cmpb
add
xor
inc
inc
ja
loopne
pop
jl
mov
popf
shl
sahf
ja
es
ficomps
lds
push
pusha
cmpb
sub
adc
and
addr16
mov
xor
lcall
and
int
cmp
adc
push
mov
fcomp
and
inc
jmp
push
std
xorb
rcll
mov
inc
jl
inc
add
lds
push
xchg
leave
xchg
sub
in
negl
loopne
push
jge
xor
sub
lcall
int3
imul
test
mov
mov
inc
xor
inc
rclb
pop
imul
in
int
or
mov
fcomps
test
dec
adc
dec
addl
add
jmp
es
cs
adc
sbb
dec
int3
bound
xor
cmp
pop
pop
stos
ljmp
and
jmp
and
cmp
jl
sbb
divl
lods
jae
adc
clc
fisubrs
arpl
cmpsl
add
inc
and
adc
cmp
jb
mov
stos
dec
cwtl
leave
mov
inc
aad
lahf
xor
and
cs
cmp
jo
nop
cwtl
inc
insb
xchg
push
cli
mov
adc
and
and
mov
sub
mov
or
jne
mov
outsb
inc
ret
or
mov
cmpsl
inc
jp
sub
adc
inc
add
dec
stc
jbe
mov
enter
sub
xchg
and
daa
xor
insb
fistps
loope
test
or
inc
mov
jp
adc
add
mov
jbe
inc
mov
pshufw
and
outsl
dec
xchg
or
jge
or
and
sbb
adc
stos
jb
cltd
sbb
mov
dec
mov
jmp
jb
dec
xchg
mov
aad
out
nop
popa
xor
xlat
add
jno
sbb
call
mov
sbb
xchg
xor
and
das
inc
sbb
out
cli
sub
outsb
pusha
add
add
jae
sub
test
pop
jbe
out
lods
in
movsb
jne
jl
subb
insl
inc
dec
popa
fadds
mov
sbb
loope
pop
push
mov
xlat
push
call
cmc
addb
ret
mov
psrad
push
push
shlb
push
in
andl
or
mov
aam
fldenv
xlat
fucom
icebp
call
adc
push
mov
leave
push
xorb
dec
inc
inc
cmp
and
test
adc
fsubs
aaa
sbbl
fxch
xchg
rorb
mov
and
call
fs
hlt
sbb
dec
add
stos
xchg
push
dec
jge
cli
jp
xor
clc
sbb
jp
int
ljmp
js
add
or
roll
sbb
stos
adc
push
pusha
pop
push
xor
idivb
into
sbb
call
xchg
sbb
adc
ret
and
out
push
or
popf
or
dec
and
add
ret
add
mov
add
adc
adc
dec
inc
ds
cmp
pop
adc
ja
xchg
test
jne
mov
sub
cli
aad
mov
add
dec
aaa
cmp
fs
xchg
ja
popf
mov
rolb
into
sbb
push
shrl
and
or
cwtl
cmp
mov
cmp
mov
test
outsl
and
mov
popa
pop
iret
pop
in
call
jbe
jbe
shlb
cmp
das
push
outsl
mov
aas
es
inc
adc
ss
js
or
aaa
ss
scas
add
pop
int3
jo
rorl
and
cmp
adc
pop
pop
add
sbb
fistpll
ss
cmovge
clc
mov
or
popa
daa
mov
ja
dec
mov
movsb
inc
ss
jne
int
jo
xchg
xor
mov
and
sbb
and
addb
test
and
repz
and
xchg
pushf
xorb
xchg
mov
pop
mov
push
pop
test
and
call
pusha
das
xor
jbe
push
dec
pop
inc
pop
dec
mov
or
ror
mov
mov
leave
dec
inc
ja
pusha
mov
loop
push
or
aam
sub
insl
fiaddl
or
ja
cmp
pop
mov
or
mov
jne
mov
cmc
out
outsl
jnp
or
or
sub
mov
mov
inc
popa
mov
adc
add
scas
push
ja
jge
and
popa
inc
or
push
sbb
mov
jnp
aad
sbb
test
scas
ret
jge
lock
rcrb
and
adc
idiv
xorl
sub
loop
out
pop
mov
fildll
sub
mov
sub
arpl
cmpsl
stos
int3
shrb
stos
or
loop
je
sub
add
jle
xchg
pop
aam
adc
push
mov
je
andl
in
sub
cmpsl
scas
aas
jbe
sbb
pop
lds
pop
xchg
in
data16
outsl
lret
loop
lock
jmp
fnsave
and
push
das
imul
dec
sahf
rorl
push
adc
repnz
xor
stos
arpl
fstps
add
add
dec
test
xor
sub
push
scas
cmp
adc
jbe
sub
es
data16
adc
pop
cmp
sub
xchg
dec
add
mov
push
addr16
int3
ss
adc
sub
and
sub
imul
jne
shll
into
dec
xchg
bound
sarb
arpl
sub
ja
cmp
shrb
lcall
inc
xchg
sub
jbe
adc
ja
or
adc
hlt
shl
shr
ret
xor
leave
inc
bound
cmp
test
pushl
fsubl
mov
push
imul
push
outsl
xor
xor
and
outsb
dec
inc
je
adc
adc
jo
fsubs
add
jp
das
pop
mov
cs
popa
inc
or
sbb
les
iret
mov
stos
sbb
sub
repnz
or
lock
arpl
push
addb
aas
and
mov
jecxz
bound
push
shll
mov
shrl
into
cmpsl
shll
lea
leave
cmp
sbb
sub
fdivrs
sub
mov
and
fmuls
xchg
sbb
loop
or
xor
jb
pop
arpl
xchg
frstor
jo
shll
adc
lods
mov
mov
ret
push
ljmp
sub
shl
sbb
fnstenv
loopne
xchg
sbb
cltd
jb
push
jmp
jg
pop
daa
jp
mov
inc
scas
mov
sub
cmp
sbb
insb
inc
lock
sub
ds
sbb
mov
dec
int3
loopne
adc
mov
push
cmpsl
jp
and
sbb
int3
push
inc
stos
mov
fcompl
inc
sub
add
and
xor
fcoms
das
adc
cwtl
out
leave
movhps
add
bound
and
neg
and
dec
xchg
cmp
ss
inc
arpl
and
inc
inc
add
adc
push
into
mov
push
inc
mov
xor
add
adc
pop
dec
and
shrb
cmp
mov
ss
gs
out
stos
mov
sbb
lret
call
lods
mov
outsb
sbb
movsb
cwtl
inc
lods
xchg
insb
push
push
rcrl
ss
arpl
push
add
inc
test
xchg
mov
mull
mov
or
not
xor
add
and
push
fcompl
xor
sub
cmp
pop
shll
addl
and
jne
inc
addr16
jmp
cwtl
int
insb
iret
in
int3
mov
adc
test
xchg
test
rclb
and
jno
or
xchg
cmp
xchg
sub
mov
cmpb
and
push
or
sbb
fsubs
or
add
lods
dec
sbb
and
in
enter
fcomps
jmp
call
fmuls
out
stos
cmp
mov
or
cmc
inc
mov
push
xor
jle
in
xor
js
data16
lods
es
jne
cmpsb
ret
and
xor
fld
testl
push
lcall
and
mov
out
bound
mov
add
sbb
icebp
daa
icebp
lcall
addr16
daa
popa
mov
sub
adc
lock
call
cmp
sarb
jbe
mov
pushf
xchg
outsb
nop
add
add
mov
lret
add
fdivrs
and
in
sbb
out
fiadds
subb
rcrl
into
jmp
fwait
mov
pop
or
pop
lahf
inc
pushf
out
and
mov
and
cmp
push
mov
xchg
mov
popa
out
popa
and
inc
jns
test
flds
mov
and
fldcw
inc
daa
add
lret
cmpsl
jp
mov
pusha
aaa
mov
push
sbb
insb
fadds
push
jae
scas
xchg
sbb
mov
adc
adcl
xor
cmpb
je
xor
stos
cwtl
jl
dec
lcall
mov
test
sub
ss
cmp
aas
into
pop
mov
and
test
jno
jp
ret
mov
imul
cmp
fnstenv
cmp
jle
xor
add
je
xchg
std
out
sbbb
pop
icebp
iret
jne
lcall
xor
mov
pushf
jnp
sbb
inc
sarl
testb
mov
or
dec
mov
shrb
push
cltd
or
rolb
in
fwait
sbb
mov
mull
add
es
xchg
test
negb
or
xlat
add
mov
add
lods
sbb
adc
mov
xor
sub
push
and
movsb
add
inc
movsb
repz
das
test
mov
add
jecxz
inc
mov
or
fs
call
and
mov
push
jmp
push
subb
aad
and
xor
js
mov
shll
cmc
pop
inc
mov
adc
sbb
scas
mov
jne
xchg
push
xchg
dec
insb
pop
push
ljmp
mov
into
mov
cmp
or
cmp
lods
push
cwtl
lock
bound
andl
push
xor
dec
jl
jns
adc
jbe
and
in
and
jno
dec
popf
lock
scas
gs
cmp
jno
jmp
fsts
inc
adc
mov
dec
or
fwait
or
mov
mov
bound
mov
pop
mov
test
enter
cmp
add
or
hlt
xchg
in
in
arpl
and
mov
push
daa
or
fisubs
pop
inc
leave
jnp
mov
cs
test
add
inc
mov
inc
inc
jo
and
push
sub
outsl
fdivs
mov
pusha
xchg
push
push
pop
push
loope
inc
in
sbb
sbb
xor
ds
push
mov
into
shlb
lock
pop
xchg
test
insb
out
push
adc
xchg
xchg
sbb
and
xor
push
jnp
inc
fwait
rolb
cmp
cwtl
andl
lock
add
fistps
into
sbb
or
xchg
int
sub
pop
mov
loope
adc
pop
mov
and
mov
mov
lret
sub
or
push
ret
inc
rolb
das
fcoms
movhps
or
jg
cmp
or
or
fsubl
jmp
inc
add
jnp
jecxz
lods
dec
outsb
insb
int
rorb
mov
push
insb
mov
push
mov
add
iret
out
add
xor
arpl
dec
ss
jle
dec
xor
mov
shl
xlat
aam
data16
fs
hlt
outsb
inc
pop
mov
aaa
cmp
ret
pusha
jbe
sbb
mov
jnp
mov
jmp
xor
sub
leave
push
stos
andl
push
push
arpl
rolb
or
pop
adc
mov
add
mov
mov
into
jle
adc
dec
sub
fistps
xor
lret
repz
rorb
in
stc
aam
jnp
lods
xor
xchg
es
bound
jae
adc
and
popa
insb
and
cmp
sub
jbe
gs
addb
pop
jmp
fnsave
sub
out
sbb
fsubr
or
cmp
addr16
xchg
sub
mov
jp
mov
mov
mov
xor
push
dec
pop
lea
sub
sbb
mov
testl
jne
lods
popf
enter
sbb
rorb
sbb
ja
xor
arpl
into
inc
dec
mov
or
inc
mov
dec
mov
cwtl
jmp
bound
sbb
cs
inc
icebp
fcoms
iret
cmp
push
mov
push
sbb
addb
call
mov
jbe
imul
decl
dec
js
mov
xor
into
orb
push
into
mov
push
aad
mov
push
mov
stos
pop
pushf
stos
xchg
mov
push
push
outsl
ret
push
push
lret
adc
add
jge,pt
adc
adc
bound
xchg
repnz
cwtl
sub
mov
clc
xchg
and
sub
stos
push
cmp
dec
lcall
adc
mov
jbe
flds
cmp
jno
jl
aam
lea
and
ja
in
pushf
mov
jo
pop
xchg
mov
daa
hlt
fwait
rolb
xor
test
xor
dec
jbe
fwait
divl
mov
cmp
and
mov
fildll
push
add
aaa
scas
sbb
cmp
sbb
xor
pop
call
lea
or
clc
lds
adc
xlat
sub
jno
mov
out
fwait
push
xor
mov
shlb
push
gs
sbb
jnp
xchg
push
sarb
jge
mov
sub
push
xor
negl
pop
mov
int
test
jp
lcall
icebp
bound
outsb
cmp
addr16
dec
pop
inc
add
cmp
sbb
aad
pushf
popa
or
or
xor
inc
cmpsl
stos
sub
jmp
shrb
mov
lret
mov
adc
cmp
andl
inc
mov
mov
and
ret
or
inc
mov
add
and
dec
mov
aaa
das
adc
pusha
mov
outsl
jbe
loop
cmpsb
add
cli
dec
sbb
jg
inc
xor
adcb
or
jns
fs
shrb
ret
mov
rcrl
or
clc
mov
andl
insb
leave
pop
or
mov
xor
out
inc
sbb
je
or
add
adc
in
xor
shl
into
mulb
xchg
pusha
in
or
add
pop
push
ret
into
shr
sub
jecxz
mull
int3
sbb
mov
stos
xlat
mov
dec
xchg
ja
test
mov
mov
mov
mov
popf
jle
inc
out
mov
lds
mov
add
inc
xchg
mov
mov
outsl
sub
inc
shr
mov
push
inc
cmp
outsb
sub
int3
xchg
jp
and
aaa
add
popa
addr16
adc
and
mov
jmp
and
and
lods
xor
mov
les
sbb
sti
adcb
ss
lahf
mov
pop
js
push
xchg
mov
and
lret
cmp
sbb
ffree
mov
add
dec
mov
loope
maskmovq
divl
cltd
neg
ret
andb
jns
popa
mov
mov
ljmp
lds
jb
mov
mov
js
adc
pop
je
popa
loopne
mov
ficoms
insb
addr16
mov
outsb
dec
lcall
adc
mov
jnp
sub
imul
or
imul
inc
pop
mov
pop
xlat
adc
xchg
xchg
in
out
fstpl
repnz
mov
stc
add
leave
dec
shll
dec
dec
lret
insb
dec
push
cs
or
sub
ret
cmp
mov
push
jno
push
inc
mov
lahf
add
nop
mov
xchg
es
sarb
insb
and
add
iret
les
mov
mov
add
push
dec
fsubs
cmpsl
cs
loopne
repz
ret
lea
int3
orb
dec
xor
test
sub
pop
pop
dec
out
add
or
add
pop
pop
mov
mov
or
sbb
in
and
enter
inc
pop
xor
es
ja
pop
enter
jns
pop
mov
mov
pop
xor
fldcw
je
jg
lret
xchg
and
xchg
nop
mov
iret
insl
add
dec
mov
add
sub
push
ret
inc
js
fldcw
or
xchg
sub
fldcw
inc
ret
gs
sbb
or
arpl
dec
push
xor
js
js
or
mov
xor
add
and
sub
and
jb
dec
sbb
outsl
add
inc
inc
dec
dec
mov
push
inc
daa
ret
dec
sub
adc
inc
leave
enter
push
std
push
or
outsl
stos
xchg
das
or
in
out
jge
mov
sbb
mov
push
inc
dec
or
inc
push
adc
xor
sbb
fwait
sub
adc
pop
fldenv
mov
negl
test
and
or
push
inc
xor
or
pop
ret
or
mov
cli
cmp
pop
xor
mov
sti
mov
push
int
inc
mov
in
pop
fidivrs
iret
sbb
or
ficomps
mov
mov
xor
jg
or
fistps
sbb
or
shlb
clc
push
pcmpgtw
mov
fnstenv
cmp
into
mov
and
or
cwtl
or
xor
or
or
flds
dec
out
adc
add
inc
je
lock
jp
mov
and
cwtl
dec
and
arpl
testb
push
hlt
arpl
in
std
mov
mov
sti
fidivs
fwait
cmpsl
and
dec
adc
cmp
and
int
neg
or
pop
adc
insb
and
push
iret
pop
inc
idivb
fisttpll
and
xchg
outsb
jbe
jne
cmc
repnz
push
sti
sbb
cmpsl
shll
mov
je
push
mov
cmpsl
mov
xor
add
jmp
mov
push
addr16
fisttps
movsl
dec
mov
inc
out
mov
into
and
daa
gs
and
fwait
int3
jge
add
inc
xor
adc
pop
mov
imul
mov
add
add
inc
leave
lds
sub
fsubr
call
mov
lret
ds
pop
mov
clc
std
movsb
sahf
iret
adc
in
dec
inc
out
or
lret
adc
mov
popf
popf
jle
loope
push
in
jae
loopne
test
pop
xchg
push
xor
das
sbb
call
fwait
lea
test
mov
inc
stos
and
inc
shll
flds
hlt
nop
icebp
dec
add
adc
mov
hlt
lret
into
xor
push
call
pop
aaa
or
xor
inc
les
jo
adc
stc
jbe
scas
lods
loop
inc
mov
cs
scas
push
mov
sub
fidivrs
xchg
sub
pop
and
pop
and
xor
test
loopne
jl,pn
repz
xchg
pandn
shll
jl
add
push
outsb
std
mov
jmp
rcrb
xor
cwtl
inc
adc
jge
test
int3
test
cltd
cmp
leave
mov
fistpll
jp
sbb
in
mov
stos
inc
add
aam
sub
movsl
xchg
sahf
add
cltd
fldl
or
lds
jo
add
xchg
pop
add
test
mov
test
dec
std
xchg
bound
outsb
xchg
cwtl
test
les
add
mov
sti
adc
js
jae
inc
test
bound
fcompl
mul
jae
leave
divl
push
fstps
jno
fmul
and
insw
outsb
scas
fwait
push
fldt
push
lock
bound
dec
pop
xorb
push
fimuls
inc
stc
loopne
ljmp
xchg
lret
add
add
inc
in
aad
mov
xchg
or
push
dec
dec
xor
cli
or
les
mov
and
pop
mov
and
fildl
pop
push
push
xchg
dec
jge
mov
or
loopne
popf
addl
aad
mov
call
dec
repz
mov
inc
test
lods
jnp
pop
or
add
rcrb
sbb
mov
lcall
dec
ffree
rcrb
pusha
pop
stos
push
outsl
xchg
mov
add
pop
cmp
pop
cmpsl
test
ret
mov
jno
mov
inc
jp
lret
lods
mov
jg
jns
inc
xchg
xor
rcl
je
movsb
inc
xorb
movsb
ret
add
js
cli
sub
insl
add
pop
mov
js
movl
faddp
xor
xchg
std
sbb
mov
mov
adc
mov
push
and
mov
jmp
add
cli
cmp
pop
js
lcall
add
adc
pop
mov
sbb
hlt
sti
std
cmp
gs
xchg
ss
pop
out
std
dec
jle
ljmp
lock
jae
push
mov
xor
xlat
pop
test
fldenv
clc
insb
xor
lret
cmp
xchg
sub
sub
inc
adc
add
dec
lahf
pop
xchg
add
mov
test
mov
sbb
mov
mov
in
mov
ss
out
aas
dec
xchg
push
inc
mov
dec
mov
decl
xchg
sbb
lods
adc
cmp
xlat
shl
das
clc
mov
mov
jge
in
xor
dec
or
pop
das
cs
ret
das
mov
adc
mov
call
push
add
cmp
jne
push
inc
ljmp
arpl
pop
loopne
shlb
outsl
inc
jnp
loop
fldt
jp
cld
mov
sarl
in
mov
clc
lcall
lahf
shlb
fidivs
lds
scas
add
rol
loopne
push
dec
lock
ja
dec
mov
add
fidivs
pop
cld
jbe
rorl
jne
xor
inc
xchg
mov
jae
ret
cmc
loope
cmp
cwtl
sbb
outsl
mov
cmc
sub
icebp
rorl
lods
push
jbe
and
inc
js
movsb
and
sub
insl
inc
pusha
fstpt
popl
sbb
ret
pop
loope
shll
jno
fwait
scas
lods
inc
mov
aas
xchg
sub
mov
and
gs
jl
sbb
xchg
jo
rcrb
push
xchg
clc
sarb
ljmp
jbe
dec
cmp
clc
cmp
inc
enter
push
sbb
mov
cmp
pop
movb
jne
xrelease
sub
outsb
mov
out
pusha
inc
or
adc
out
mov
jge
aas
jle
jbe
das
mov
imulb
into
dec
fcoms
and
lock
xchg
test
mov
sub
arpl
imul
aaa
cmp
std
rolb
loop
insl
lcall
xor
es
dec
lea
aaa
dec
add
push
sub
xchg
sub
push
add
ds
jl
cwtl
and
mov
arpl
aam
jne
mov
mov
cmp
inc
iret
lds
and
shlb
movsl
lds
repz
add
lock
push
insl
in
fsubs
stos
aaa
sbb
loopne
inc
inc
iret
add
out
sarb
mov
add
or
mov
add
inc
lods
jecxz
push
xorl
dec
hlt
sbb
mov
dec
sub
sbb
mov
mov
jle
xor
mov
add
pop
and
test
nop
movsl
jns
ret
enter
scas
popl
cmp
pop
outsl
mov
jns
dec
sahf
lahf
iret
xor
and
add
mov
cli
loop
sub
pop
lahf
push
fcoml
rcll
adc
push
and
pusha
inc
mov
icebp
push
inc
xor
clc
mov
xadd
cmp
clc
mov
mov
dec
in
popf
dec
shll
out
adcb
mov
sub
jne
loopne
dec
mov
cwtl
mov
inc
loopne
mov
mov
inc
xchg
in
imul
fsubrl
popf
lcall
dec
jecxz
push
es
test
fadds
in
sbb
mov
jecxz
pop
xchg
adc
cltd
cld
xchg
xor
fucom
test
push
inc
sub
mov
imul
movsl
xor
daa
shl
add
incb
mov
jle
in
mov
push
dec
mov
cmp
mov
or
test
insb
or
xor
mov
sarl
sbb
mov
fstpl
xchg
sti
mov
add
add
arpl
aas
push
pop
lds
loope
dec
hlt
fcmovnbe
mov
push
fisubs
sbb
test
jmp
add
out
sub
inc
jp
inc
adc
inc
add
sbb
sbb
sub
pop
cwtl
daa
mov
lods
mov
lock
mov
aam
mov
xor
mov
pop
test
inc
xadd
pop
and
imul
scas
int3
sub
push
pop
scas
dec
js
inc
movsl
fiaddl
mov
int
mov
aam
push
mov
rcll
insb
mov
adc
xor
inc
or
sbb
push
push
ds
frstor
pop
dec
push
pop
stc
mov
mov
push
rcll
sub
sbb
lods
and
fistl
shlb
pop
push
xor
xchg
push
cli
cmp
int3
enter
or
outsb
jg
xchg
scas
sub
xchg
ret
loope
jge
popf
or
mov
mov
pop
pop
popf
stc
scas
mov
cmp
xchg
cld
sti
inc
ret
dec
fnstsw
ja
push
sahf
pop
xchg
lea
push
data16
leave
mov
sbb
adc
insb
aas
sti
shl
mov
inc
sub
dec
dec
mov
fistpl
inc
and
xchg
lods
stos
jne
arpl
and
sti
sbb
pop
add
mov
add
add
dec
std
pushf
dec
test
push
ror
pop
and
cmpsb
incb
mov
add
xchg
ss
cwtl
add
dec
lea
cmp
adc
pop
cmp
cmp
inc
add
out
mov
int3
mov
pop
test
dec
aaa
push
sub
outsb
cmp
rorl
sbb
sar
jbe
popf
div
setb
add
arpl
lds
ret
jecxz
sub
push
dec
mov
push
or
adc
loop
sbb
sub
sbb
fidivrs
out
enter
cltd
ror
sbb
mov
or
test
fwait
push
loop
mov
and
adc
je
sbb
push
push
mov
pop
test
xlat
add
jle
fwait
mov
imul
and
sbb
stc
rorb
mov
mov
lret
jle
lock
daa
icebp
jle
push
out
mov
mov
jmp
mov
mov
sub
push
inc
jns
outsb
xor
xor
xor
adc
test
outsb
and
js
enter
ja
xchg
mov
mov
rcl
je
push
mov
fs
dec
ljmp
fstl
rcrb
cmp
fucomip
adc
jne
pusha
sbb
sar
repz
pop
cmp
fstps
out
mulb
imul
enter
inc
fisttpll
lock
cwtl
cmp
cmp
clc
lock
scas
fldcw
mov
dec
lret
stos
sbb
aad
sbb
jo
lds
fmuls
out
shlb
fcompp
dec
dec
gs
push
daa
jb
aad
mov
sbb
pop
mov
in
add
and
ffree
sbb
dec
stos
mov
jbe
ret
inc
jle
fucom
push
adc
mov
xchg
ja
loopne
pop
scas
adc
xor
sbb
mov
push
lock
sbb
and
or
sti
mov
add
imulb
or
jno
lock
imul
mov
mov
cmc
dec
mov
dec
fldenv
or
icebp
in
push
fadd
push
gs
push
and
clc
xor
sbb
xorl
jmp
arpl
movsb
fstpt
loop
aaa
ror
inc
sub
les
rcr
je
mov
jp
pop
pop
adc
aaa
rolb
wbinvd
fwait
jmp
shll
cmp
shll
pushf
repz
add
std
push
pop
leave
or
pop
or
xor
push
jl
lcall
adc
stos
repnz
push
popf
sbb
lcall
xor
or
sbb
cmp
scas
sub
xchg
pop
dec
bound
jge
ret
hlt
mov
gs
sti
sbb
fcmovbe
jmp
lea
jge
mov
scas
mov
subb
jge
mulb
cmc
jmp
adc
add
dec
mov
mov
popa
add
push
pop
daa
aaa
sbb
nop
popa
shl
or
add
sahf
ret
adc
enter
out
mov
push
lods
cli
mov
popa
decl
pop
pop
cmc
adc
inc
cmp
jp
jae
jecxz
clc
push
pop
inc
ljmp
push
push
mov
out
je
inc
dec
out
mov
adc
outsl
fisubs
ret
add
dec
pop
incb
fidivs
adc
aaa
dec
stos
push
and
mov
ficompl
jle
inc
call
icebp
hlt
cmpb
mov
pop
sahf
push
stc
push
jne
ficoms
adc
sahf
dec
cli
mov
popf
and
push
cli
and
or
adc
adc
ss
clc
mov
outsb
ljmp
jmp
enter
popf
pop
js
cmp
cmp
cwtl
loope
popf
cmp
mov
lahf
in
xor
fwait
jecxz
and
cmc
les
inc
add
mov
mov
cmp
in
stos
pop
clc
int
std
mov
inc
or
sysexit
pusha
push
mov
sahf
mov
mov
imul
xchg
add
fs
xchg
divb
adc
or
push
dec
jno
and
fwait
je
addr16
sub
push
aas
inc
mov
insl
mov
pop
sbb
ret
daa
inc
repnz
test
dec
daa
or
xlat
icebp
nop
jnp
mov
push
add
mov
dec
test
mov
jne
pop
les
ds
jnp
jns
push
adc
mulb
sub
out
jmp
jge
or
dec
imul
repnz
cmc
pop
mov
ret
test
add
testl
daa
lcall
mov
push
pop
pop
mov
push
out
call
stos
fldt
and
pop
inc
jne
ficoms
test
cmp
mov
stos
jmp
mov
aam
mov
inc
mov
jno
xchg
shll
or
ljmp
adc
cmp
ljmp
sbb
outsb
mull
idivl
and
inc
sbb
pop
mov
xchg
pusha
sbb
mov
mov
push
pop
icebp
xor
daa
sbb
and
aaa
adc
push
push
pop
sahf
lods
push
inc
cmc
mov
jmp
movsl
jae
jae
movsb
push
jecxz
inc
push
ljmp
shl
popf
ficoml
mov
dec
pop
dec
sub
iret
push
scas
jp
pop
xchg
inc
nop
sbb
mov
dec
insl
stos
lcall
and
sub
mov
push
inc
arpl
push
outsb
loope
stos
dec
sbb
and
push
clc
jle
rcrb
call
xlat
add
mov
and
add
add
push
cmp
xorl
cwtl
sub
xchg
push
clc
jne
adcl
nop
ja
mov
xlat
sar
mov
and
in
xor
add
jno
in
mov
lahf
jo
mov
sbb
sub
mov
cmp
adc
or
push
call
mov
das
or
fstpt
mov
xor
orb
adc
dec
dec
mov
mov
xchg
aad
mov
sbb
sbbb
xchg
or
xchg
pushf
sub
pop
mov
das
sub
dec
and
lock
outsl
push
outsl
out
mov
jge
sbb
jno
pusha
mov
outsl
mov
pop
xchg
bound
jo
shll
sub
testb
and
mov
outsl
adc
mov
cmp
jge
cmp
mov
push
mov
jp
push
xor
inc
adc
pusha
clc
mov
xor
hlt
mov
sbb
push
sbb
jnp
mov
insl
xchg
jbe
lret
scas
inc
cmp
arpl
stos
or
inc
aas
daa
pop
xchg
lret
imul
ljmp
dec
adc
mov
out
int
pop
xchg
xchg
dec
imul
pop
add
or
in
or
icebp
ret
mov
xor
add
mov
call
or
mov
fldenv
dec
or
scas
dec
xor
and
das
jmp
sahf
sbb
and
inc
inc
push
inc
pop
pop
jp
cmpxchg8b
bound
enter
jp
movsl
jle
pop
xor
aaa
dec
dec
xchg
push
mov
aaa
mov
sti
cmp
cmp
stos
into
xor
mov
subl
add
pop
xchg
xor
jne
add
into
clc
je
outsl
mov
lock
cmpsl
sbb
inc
sbb
bound
cwtl
jle
test
xor
fnstcw
mov
pop
pushw
push
xor
dec
bound
out
pop
ficompl
in
cmp
add
fiadds
sti
cmp
je
aaa
add
inc
in
mov
arpl
xchg
push
jl
fnsave
cli
mov
add
fstpt
dec
lea
xorl
inc
pop
lahf
les
test
or
xor
add
inc
sbb
test
or
jge
add
push
jae
push
aaa
or
cmpsl
adc
mov
adc
cmpsb
cmp
fdivrl
inc
push
pop
es
adc
iret
shll
mov
std
push
out
mov
pop
mov
xchg
ret
cmc
pop
sub
mov
cmp
es
jmp
add
stos
pop
push
jo
cmp
adc
je
out
and
mov
and
xchg
adc
dec
fsubl
imul
mov
into
mov
fwait
push
dec
aas
inc
lock
aam
or
or
mov
cli
pusha
and
fsubrs
pop
jl
icebp
test
fcoml
rcrl
aad
jmp
mov
pop
inc
xchg
inc
icebp
inc
sarb
cmp
cwtl
pushf
push
dec
enter
hlt
hlt
lcall
or
pop
pop
and
add
ja
fs
push
xlat
pop
in
int3
adc
lret
cmp
stc
insb
insl
xchg
icebp
xchg
sub
insb
add
rcrl
cwtl
idivl
jle
fdivrl
add
test
mov
sahf
or
xchg
jmp
negl
jno
xchg
xchg
pop
jl
fldenv
je
adc
sub
leave
icebp
lock
sbb
ss
cwtl
aad
jl
aam
arpl
addb
xchg
mov
cs
fstl
into
ds
ret
push
test
cld
and
sbb
inc
mov
jmp
mov
push
pop
mov
mov
insl
pcmpeqd
mov
daa
xchg
int3
sbb
inc
mov
in
xchg
push
lock
clc
inc
add
sbb
int3
in
jp
dec
dec
jbe
xor
cld
jp
jns
sbb
sub
add
sbb
or
ja,pt
cld
xor
xchg
sbb
rcrb
mov
jno
xchg
mov
cmpsb
daa
jp
xor
pop
mov
cmpsb
scas
sar
mov
or
inc
xchg
jl
add
push
push
stos
ret
push
mov
or
inc
dec
push
pop
hlt
popf
stc
pusha
add
inc
leave
outsb
adc
push
or
ljmp
add
lock
inc
pop
or
or
pop
jb
lods
sbb
int
es
mov
or
sbb
popa
orl
jmp
pushf
addr16
push
cmpsl
xchg
test
jbe
pop
pop
rcrb
cli
mov
inc
xchg
mov
lret
daa
ljmp
in
das
dec
sbb
inc
iret
mov
shl
xchg
push
push
xchg
roll
addr16
pop
and
jae
icebp
popl
jnp
cli
sbb
stos
xchg
ret
adc
or
mov
add
lock
xchg
pop
add
repnz
repnz
cmp
shl
lcall
icebp
add
cmp
dec
sahf
fwait
cmpsl
jne
jge
cmp
pushf
mov
sbb
mov
add
pop
add
mov
icebp
jp
sbb
aaa
sbb
scas
adc
sbb
pop
cltd
scas
fdivs
in
arpl
lock
rclb
jb
test
cmp
loopne
cmp
mov
repnz
filds
hlt
out
fnsave
fisubs
aas
mov
jo
xchg
test
xchg
jb
lahf
xchg
jmp
stc
imul
psrlw
testb
loopne,pt
mov
repnz
mov
test
paddd
mov
inc
iret
jo
push
out
shr
jmp
sub
push
push
out
clc
clc
pop
fndisi(8087
bound
outsl
test
fdivs
movsl
jge
lods
aam
jge
push
test
cld
into
cli
loopne
jle
aaa
xchg
mov
fnstcw
stos
lret
xchg
jnp
jge
xor
jnp
mov
and
out
fldcw
in
xlat
xchg
dec
shll
stc
jnp
das
orb
mov
ljmp
jecxz
dec
pusha
sbb
jmp
loopne
insl
xchg
cmpsb
xchg
or
dec
loop
orb
add
cmp
call
dec
scas
mov
ds
add
lahf
jg
insb
mov
lret
pslld
ds
loopne
js
xchg
ds
icebp
cmpsb
bnd
mov
aam
xor
add
testb
lcall
cmpsl
pop
sbb
sbb
in
adc
xchg
bound
stc
add
ret
rorl
and
mov
jb
shlb
stos
aam
daa
les
mov
push
mov
mov
sbb
out
movsb
mov
or
les
repz
adc
rorl
add
arpl
pop
loopne
mov
jp
icebp
negl
pop
push
cwtl
addr16
or
jmp
call
mov
ljmp
push
cmpsl
mov
mov
sbb
call
inc
call
in
fs
push
mull
inc
push
jo
popa
or
mov
dec
and
bound
lret
addb
mov
cmpsl
ret
pop
and
push
fisttpll
bound
movsl
mov
jg
add
sbb
ja
popf
fucomp
jbe
sti
jmp
stos
scas
mov
sbb
jecxz
xor
jns
cmp
push
btr
or
aam
jp
dec
stos
int
popa
pop
mov
sahf
inc
lret
push
loop
xor
test
cmp
dec
lcall
xorl
sbb
adc
div
clc
test
jmp
mov
je
mov
test
pop
in
fiadds
lods
cwtl
push
ret
push
icebp
leave
mov
mov
jmp
aam
in
pop
addr16
mov
sub
outsb
lods
jo
lock
pop
inc
push
mov
inc
or
ss
ret
mov
dec
pop
jb
lods
and
add
xchg
mov
adc
cmp
in
sbb
ljmp
lcall
add
ret
addr16
outsl
std
out
rolb
or
and
xchg
setge
dec
xchg
or
xlat
loope
rorl
scas
pop
jo
mov
sbb
les
stos
or
lahf
int
aas
and
lea
push
cmc
and
mov
add
or
cmp
mov
and
test
pop
negl
icebp
out
outsb
xchg
sbb
sub
mov
mov
fsubs
sbb
loopne
adc
in
inc
outsb
inc
sarb
in
out
mov
and
mov
mov
loope
fwait
push
mov
push
xchg
cmp
scas
xchg
test
imul
shlb
repz
push
imulb
xlat
dec
and
sbb
int3
cmp
mov
xor
adc
sbb
aaa
out
cmp
sub
cmp
mov
sbb
cwtl
mov
mov
test
xchg
ret
jmp
mov
loop
mov
dec
sbb
and
cmp
sub
xlat
sub
sbb
insl
ret
mov
xchg
mov
dec
mov
sbb
sbb
jnp
adc
loopne
add
sti
cmc
leave
mov
lret
push
xor
dec
mov
xchg
inc
push
or
mov
adcl
adc
cmpsb
int3
popf
outsb
pop
and
je
mov
mov
push
sbb
xorl
push
sbb
mov
pop
addr16
shll
out
cli
call
pop
ror
pop
shrb
outsb
mov
pop
lock
jnp
in
aam
mov
pop
pop
aaa
pop
hlt
int
cmp
pusha
cmp
or
iret
cmc
jae
loope
adc
xor
sbb
adc
dec
or
cmp
mov
nop
mov
jae
inc
fistpl
daa
cmp
clc
ds
fistps
mov
decl
into
mov
xchg
add
mov
jge
shll
jecxz
mov
shlb
mov
or
and
test
std
push
fistl
inc
imulb
cmpsl
pop
adc
xchg
cmpsl
cmp
loop
pushf
adc
in
jmp
call
mov
popa
push
jp
cmpsl
cmpsb
leave
ds
pop
adc
rorb
mov
adc
xor
push
cs
jg
fistpl
mov
jp
mov
sbb
and
jge
push
stos
dec
movsl
xchg
mov
shrb
movsl
mov
adc
jnp
cmp
jp
push
popa
pop
pop
push
pop
mov
cmpsl
lahf
mov
cmp
push
xchg
cmp
xor
out
inc
ljmp
popf
add
adc
rorb
sbb
das
sbb
mov
in
out
test
push
pop
test
push
stc
mov
dec
pop
dec
push
repnz
addr16
jmp
mov
cmp
xor
pop
hlt
dec
jp
pop
inc
mov
aas
popf
shrb
or
sub
add
movsl
hlt
lea
sub
jb
dec
mov
lret
mov
les
icebp
jbe
xor
pop
loope
adc
sub
sbb
ljmp
push
popf
push
add
push
jo
cmp
nop
leave
ret
roll
jno
imul
jo
dec
inc
mov
cmp
fisttpll
mov
pop
mov
bound
or
mov
aad
test
mov
push
or
push
xchg
add
arpl
mov
les
adc
mov
lret
loop
jge
cld
cmp
pop
pop
inc
jg
js
cmp
inc
jno
out
inc
adc
es
mov
int
sub
pusha
push
pop
add
sbb
popa
cmp
pop
or
xchg
imul
loopne
test
int3
dec
sbb
aad
orl
jno
add
jae
lock
or
jns
xchg
sub
mov
cmp
lock
xchg
fwait
xor
movsb
pop
ret
push
mov
loop
jg
mov
cmp
loop
divl
call
push
xlat
rcr
outsl
leave
aam
adc
inc
push
and
mov
mov
cmpsl
xchg
cwtl
aad
or
repnz
mov
frstor
adc
xchg
out
data16
inc
mov
cs
mov
gs
sbb
add
out
out
push
notl
insb
adc
repnz
leave
sub
sub
mov
sub
lcall
xor
jge
xor
imul
jg
in
sub
das
mov
mov
ja
pop
xor
mov
popf
outsb
imul
mov
adc
jle
ret
and
xor
xor
mov
sbb
adc
fsubs
rclb
or
lea
inc
orl
popa
xchg
in
cmpl
sbb
loope
pop
jae
xor
xor
fsubs
adc
adcb
out
lea
xor
scas
xor
mov
inc
sbb
out
bound
inc
mov
cmp
pop
test
cmp
add
or
mov
add
fstps
jae
xor
fildll
mov
or
pop
mov
xlat
push
xorb
xor
lods
imul
mov
aad
int
cld
sbb
popf
ficomps
int3
nop
or
fistpl
adc
push
mov
sub
testb
lahf
outsl
aas
aas
jp
ret
es
mov
das
fdivr
xchg
inc
or
cld
aas
out
int
outsl
cmpsl
adc
aas
xchg
cmp
mov
pop
fwait
aas
outsb
repz
mov
or
iret
insl
sub
jns
sbb
or
ds
push
or
xor
mov
and
or
imul
mov
jecxz
in
sbb
out
dec
cs
cmp
or
or
pop
pop
out
negl
test
xchg
push
daa
dec
or
push
and
in
push
lea
mov
xchg
jbe
mov
inc
lahf
or
or
pop
imul
or
out
fucomip
lret
pop
sbb
or
pusha
fistpll
or
fidivl
adc
jns
pop
dec
ret
cs
ficomps
fcomps
lds
mov
jmp
mov
dec
mov
and
seta
push
mov
into
or
mov
cmp
sub
adc
pop
lret
push
testb
cmp
inc
or
lock
ret
or
cmp
or
daa
jmp
or
repnz
xchg
out
in
push
jnp
daa
pop
and
xchg
mov
das
xchg
jge
cmpsl
data16
or
ss
popa
subb
js
insb
lods
sbb
or
outsl
pop
enter
cmpsb
cmp
add
sti
add
mov
push
cmp
cmp
mov
sbb
cwtl
dec
inc
sbb
cmp
dec
inc
out
cmp
into
cmp
and
aas
iret
popf
jge
imul
dec
cmp
pop
push
sub
fisubs
mov
and
icebp
into
bound
mov
jnp
mov
mov
cli
push
jl
cwtl
cmp
aaa
pop
or
movsb
cmp
adc
sbb
pop
insb
pop
lcall
outsb
jmp
out
aas
outsl
sub
mov
adc
jnp
data16
pop
in
sbb
loop
dec
xchg
movsb
mov
pop
cmpsl
inc
ss
mov
mov
rolb
sbb
push
mov
insb
xchg
iret
mov
mov
mov
out
jnp
das
aaa
or
jno
jbe
or
add
jge
jae
add
repnz
xorl
testl
fldt
jnp
push
mov
sti
fimuls
pop
push
decl
sub
cmc
push
pop
add
mov
jb
ja
xor
push
mov
mov
or
arpl
mov
addr16
cmc
add
mov
rcl
sbb
add
sub
popa
out
dec
adc
ja
push
jns
pop
sbb
in
add
fisttpl
sub
or
adc
cmp
lock
mov
xchg
pop
add
insb
ret
and
daa
insb
insb
rorb
iret
xor
dec
add
addr16
and
jbe
mov
adc
add
and
or
or
outsb
mov
cmp
cmc
and
add
mov
adc
add
hlt
jb
add
xor
shrb
dec
fisttpl
jbe
aaa
add
lret
rcrl
fists
push
and
adc
jl
pop
jne
ja
sub
ss
addl
push
inc
xchg
adc
cmp
xlat
add
xor
and
adc
jnp
xchg
rcr
in
push
mov
fimull
sub
pop
mov
cwtl
hlt
push
ficoml
mov
pop
cmc
rcll
mov
sbb
adc
fldenv
cmc
add
and
inc
fsubs
or
mov
mov
mov
bound
mov
leave
xchg
movsl
mov
or
pop
inc
xchg
lea
pop
or
adc
add
and
lret
mov
sarl
pop
stos
dec
test
pop
daa
es
outsl
pop
mov
or
outsl
add
add
pop
aam
inc
adc
adc
fs
mov
xchg
jo
nop
ficompl
sub
ret
daa
std
es
insb
fwait
es
mull
xor
shlb
mov
sarl
out
mov
push
pop
pop
mov
es
sarl
sub
push
or
test
cld
inc
sbb
push
pop
fistpl
cmp
mov
xchg
mov
add
jecxz
add
adc
jp
push
cmp
cmpl
and
pop
xchg
mov
addr16
pop
in
insb
imul
mov
and
flds
shlb
ja
aaa
xor
daa
pop
in
cmp
int
pop
pop
fiadds
and
xchg
in
or
out
pop
mov
dec
fbstp
mov
xor
xchg
sub
in
in
int
and
and
adc
nop
mov
iret
inc
js
mov
loopne
ret
in
add
outsb
pop
adc
cmp
insl
or
cltd
adc
and
mov
pop
aad
inc
pop
xchg
mov
sbbb
sub
inc
sbb
cltd
inc
in
mov
es
and
and
in
sub
or
inc
mov
adc
xor
or
or
out
dec
jp
and
ja
ficoms
push
test
ja
ja
adc
or
imul
lods
arpl
in
add
rorl
in
and
dec
in
and
ss
pop
inc
or
ret
mov
adc
push
jecxz
mov
subl
sub
jb
popa
packuswb
fldcw
xorl
sub
xchg
mov
sub
mov
sub
nop
mov
cmp
aad
imul
in
or
adc
xchg
mov
jbe
loope
call
lods
mull
sbb
clc
and
fs
adc
mov
jnp
add
addl
jl
into
xchg
jne
sub
add
mov
xor
lods
fsincos
xchg
js
or
lret
loopne
jbe,pn
or
and
popa
std
xor
imul
enter
lods
orl
jp
xchg
js
cmp
js
mov
mov
sbb
addr16
or
push
mov
outsl
enter
xchg
mov
mov
or
mov
and
es
cmpsl
and
enter
orl
mov
cmpsw
out
mov
es
rorl
popa
in
pop
ret
add
sbb
in
jb
and
fs
and
pop
pusha
and
mov
test
in
inc
cmp
cltd
mov
adc
mov
ffree
pop
jbe
adc
mov
scas
xchg
aam
push
loopne
aas
and
and
cmp
and
and
mov
push
pop
dec
push
mov
add
out
insb
ret
lds
daa
in
shr
pop
jle
in
push
and
rorl
scas
sbb
out
dec
push
shll
or
mov
inc
mov
jge
sbb
sbb
add
lock
ret
jb
xor
push
fisubs
call
mov
daa
and
dec
mov
test
in
dec
dec
insb
adc
movsl
pop
dec
add
ret
imul
jb
scas
insb
and
in
inc
fst
mov
fadds
test
push
lods
and
push
lods
mov
stc
xor
pop
data16
rcrb
xchg
push
add
jle
cmp
and
aaa
ss
lret
or
push
aam
orb
sub
fcoms
in
sub
or
testb
adc
mov
fwait
lods
adc
push
xor
outsl
ret
jbe
es
addl
mov
mov
rcll
and
pusha
gs
fcomp
jbe
pop
ret
fsubs
ret
inc
mov
popf
lret
js
adc
adc
ret
jnp
pushf
insb
and
or
fdivs
and
push
das
jo
cld
shlb
adc
xchg
aad
out
rol
imul
in
add
dec
push
daa
adc
insb
push
pop
sbb
lds
lds
xchg
mov
rorb
cmpsb
dec
in
inc
js
inc
jp
xchg
pop
std
fcomps
cmpsb
xchg
jne
filds
gs
sbb
mov
sub
nop
mov
es
repz
inc
dec
out
insb
dec
push
xchg
test
sub
sbbb
popaw
daa
cli
adc
and
nop
and
clc
clc
push
xchg
test
pop
ja
iret
xchg
inc
push
int3
daa
int3
pop
repnz
into
fsubs
lret
dec
add
jae
sub
or
mov
push
aas
cwtl
add
daa
imul
push
mov
dec
adc
lock
sbb
xchg
or
jp
fcomps
iret
fsubrs
addb
inc
pop
fs
mov
mov
shll
fsubl
ss
stos
leave
xchg
insb
mov
sbb
and
jae
sub
test
inc
xorb
movsb
mov
xchg
scas
pushw
add
shlb
popa
fstps
negb
es
cs
mov
lret
jecxz
insb
ror
xor
lods
testl
dec
and
push
xor
flds
sub
inc
adc
mov
pop
push
mov
xchg
int
add
push
movsb
nop
or
inc
dec
mov
test
cmp
jnp
and
adc
adc
fsubs
sub
fiadds
push
popa
or
lock
and
popa
int3
insb
mov
adc
and
xor
or
inc
cmp
fmuls
sub
add
adc
lods
dec
imul
adc
dec
sub
test
lcall
negb
fisubrs
sbb
sbb
ret
mov
aaa
out
push
lret
cmp
jb
pusha
stos
jl
cmpsw
nop
in
mov
icebp
cmpsb
push
scas
mov
push
mov
or
dec
push
mov
lods
jge
sbb
int
jge
mov
xchg
in
dec
xor
xchg
lods
add
nop
pop
pop
lods
sbb
out
mov
popa
mov
cmp
dec
xor
ljmp
push
push
ret
inc
cwtl
mov
jno
xor
inc
ret
push
cmp
subl
out
or
lret
imul
and
adc
ficomps
mov
xchg
or
cwtl
jno
add
pushf
fmull
adc
mov
inc
dec
pusha
mov
nop
lret
rcr
mov
xchg
and
pop
testb
cmp
es
jbe
xchg
lock
andb
push
cltd
adc
imul
xchg
and
add
and
dec
xorl
sub
mov
adc
movsl
add
fs
shlb
fsts
jl
pop
movsb
pop
sub
jle
and
push
data16
push
js
dec
sarb
push
cmp
dec
scas
cwtl
mov
addr16
nop
and
sbb
mov
mov
xchg
adc
test
lods
sahf
nop
mov
mov
cmp
add
push
fsubs
out
adc
and
es
mov
pusha
jp
sub
pop
add
dec
lds
into
sbb
es
dec
cwtl
adc
sub
mov
pop
mov
rorl
orl
popa
xor
pop
aas
data16
xchg
cmp
adc
push
leave
and
and
xchg
xor
pop
lods
inc
push
gs
mov
cwtl
xchg
jae
pop
rorb
orb
pop
dec
xor
or
les
movsl
fistl
inc
and
iret
data16
add
dec
fisubl
mov
add
or
xchg
push
pop
mov
add
inc
loope
push
rol
push
add
xor
push
and
ss
in
inc
push
shrl
and
mov
imul
pop
push
xchg
and
pop
cld
pusha
pop
and
push
les
cmc
std
das
ret
ret
mov
jo
add
sbb
inc
repnz
mov
out
das
cmpsl
dec
and
push
in
jnp
ss
and
fsubs
shll
lahf
jg
inc
sub
fistl
mov
xchg
daa
fsubrs
sbb
adc
icebp
cltd
cmpsb
pop
cltd
or
sti
lods
add
adc
add
fs
mov
or
adc
sti
data16
dec
xchg
ja
adc
xor
and
sub
test
xchg
mov
jge
jno
loopne
add
bnd
jae
mov
pop
jle
scas
and
scas
popa
loope
mov
adc
movsb
test
xchg
push
push
sub
push
add
gs
dec
test
mov
jecxz
jecxz
pop
mov
mov
fnstenv
fstpt
add
inc
cwtl
push
push
sbb
sahf
fsubs
xchg
es
inc
cmp
and
and
fbld
subl
js
mov
and
sub
cwtl
mov
aam
je
dec
mov
inc
lock
xor
inc
or
insb
imul
push
cs
repz
and
sub
pop
xchg
js
push
dec
or
adc
and
dec
loope
test
insb
adcl
jno
shlb
jnp
cmp
add
or
and
popa
aaa
xor
fcomi
inc
xor
test
es
fbld
insl
sbb
sahf
lcall
sbb
inc
je
lret
lcall
idivb
pop
dec
sbb
into
push
fldcw
mov
out
xor
xor
sbb
dec
inc
lock
popa
xchg
push
and
sbb
mov
mov
push
push
sub
das
sbb
sub
test
inc
fimuls
mov
test
ljmp
mov
sbb
mov
mov
lcall
and
shrl
sbb
int
and
inc
mulb
push
inc
jbe
and
dec
lds
xchg
cmc
mov
popf
sbb
cmp
xchg
mov
stos
es
pop
inc
sar
jae
popf
sbb
cmp
jbe
cmp
xor
jp
sbb
add
or
mov
inc
push
stos
or
shrl
movsb
mov
adc
push
push
mov
lahf
add
popa
xchg
movsb
add
add
roll
or
adc
mov
gs
aas
mov
mov
sbb
insb
jge
and
pop
faddl
push
xor
jecxz
dec
inc
rcrl
or
popf
or
jne
bound
or
movsl
je
loope
pop
dec
or
aad
and
lcall
or
push
orl
das
mov
data16
inc
or
dec
out
push
dec
sbb
and
sub
or
sbbl
cwtl
cmp
arpl
or
fisttpll
xchg
mov
and
lds
scas
daa
and
cmp
or
imul
call
pusha
mov
movsl
shll
or
inc
es
mov
inc
insb
mov
pop
lds
adc
dec
icebp
cmp
movsb
or
xchg
add
pop
mov
test
mov
jae
addl
sbb
add
sub
subl
push
sub
mov
fisubrl
sbb
sub
es
push
inc
sahf
jnp
in
and
dec
xor
mov
test
jno
pop
das
dec
jae
divl
daa
dec
inc
and
lea
adc
dec
dec
call
bound
es
mov
idiv
call
jl
rolb
xchg
into
sbb
mov
jno
fildl
pop
roll
in
mull
jbe
inc
dec
or
fistps
inc
inc
lea
add
rolb
sti
ficomps
dec
aas
rcr
push
shlb
pop
mov
int3
sub
fsubs
dec
cmp
sti
les
imul
xlat
js
mov
push
dec
dec
push
sub
in
jge
inc
and
pop
loope
and
push
orl
or
cmpsl
jb
xchg
test
cbtw
or
stos
mov
data16
add
jecxz
sbb
test
fadds
sbb
pushf
sbb
daa
je
insb
pop
pop
sbbb
outsb
adc
mov
shll
or
subl
jnp
jg
push
int
and
cmpb
ss
xor
lods
lods
mov
test
dec
pop
js
mov
inc
cmpsl
addr16
lods
sarb
mov
inc
sub
ret
jge
cmpsl
movsl
fstl
popa
sbb
inc
ja
mov
push
and
and
mov
mov
addr16
ret
and
mov
popa
push
mov
pop
ss
in
cmpsl
and
jae
out
add
jnp
dec
js
out
out
cmpsl
pop
xor
inc
addr16
sub
imul
pop
xchg
push
iret
insl
repnz
imul
rcl
ret
xor
cwtl
pop
lods
arpl
sbb
inc
dec
lods
inc
and
mov
pop
mov
sub
das
ret
das
push
sub
popa
cmp
adc
mov
mov
es
int3
data16
xchg
enter
scas
pushf
pushw
add
mov
pop
xchg
and
js
into
mov
sbb
push
jge
xor
iret
jle
sbb
sbb
icebp
lcall
dec
add
dec
push
inc
mov
mov
insb
inc
test
imul
leave
in
pop
cmp
cmp
jmp
jg
ss
jge
adc
sarb
mov
mov
arpl
xchg
sbb
rolb
imul
outsl
add
mov
lret
mov
popa
jns
jne
add
mov
inc
mov
sar
add
es
mov
inc
push
pusha
ret
push
or
cwtl
xor
dec
ret
adc
ficompl
xchg
lcall
es
cwtl
shlb
imull
add
lahf
jecxz
int3
xor
fsubs
ds
fisubs
fcmovne
mov
fsubl
adc
xchg
xchg
sub
sub
arpl
and
xchg
fwait
icebp
lea
push
sbb
xchg
cmp
mull
and
repnz
mov
or
mov
inc
jns
outsl
push
mov
out
outsb
loope
inc
insb
push
ret
cmp
outsb
outsb
fadds
sbb
pusha
jnp
and
jg
popa
pop
inc
add
sub
add
xlat
xchg
cmp
fwait
and
sub
es
jge
mov
push
mov
in
cmp
mov
xor
xchg
jg
jge
xor
flds
outsl
arpl
jle
stc
mov
add
arpl
xchg
push
rolb
insb
inc
roll
mov
and
imul
int3
cltd
leave
enter
imul
push
shlb
lods
xor
and
push
mov
mov
push
mov
or
fs
inc
add
push
mov
xchg
cli
or
mov
shrl
dec
lcall
mov
pop
cli
jbe,pn
inc
loopne
push
xchg
int3
inc
sbb
adc
jp
sub
push
inc
js
pop
cmc
cmp
xor
adc
cmpsl
mov
test
cmpsb
inc
pop
leave
xchg
insb
fldcw
filds
jo
and
cmp
and
rcll
iret
jge
andb
arpl
test
popa
scas
lds
sbb
pusha
xchg
in
enter
xor
jo
cmc
xchg
mov
xchg
cmove
jno
subb
mov
stos
cmpl
xor
test
pop
pushf
ficomps
inc
and
sbb
and
mov
adc
xorw
jle
and
push
push
aam
lock
xchg
pop
fldenv
and
adc
mov
mov
jo
xchg
stos
enter
add
lret
mov
inc
sbb
sub
outsl
and
loop
js
or
pop
xor
aam
fdivr
dec
loopne
mov
lock
lret
pusha
or
pop
pcmpgtd
in
sub
pop
das
ljmp
sub
arpl
test
add
addr16
and
data16
int
rcr
outsb
inc
pop
add
fwait
and
arpl
sbb
inc
xlat
push
add
dec
mov
inc
rol
mov
imul
or
inc
rolb
xorb
idivl
lds
jae
add
insb
into
or
adc
mov
es
les
bound
sarb
test
jnp
dec
dec
gs
bound
test
rclb
and
addr16
add
or
sbb
jg
fisubl
sbb
out
or
mov
inc
xlat
js
int
dec
pop
adc
add
stos
popa
jb
xor
and
mov
add
mov
ja
pop
xorl
mov
sbb
cwtl
sub
xor
add
or
aaa
inc
lcall
xchg
xchg
les
pop
pop
mov
ror
mov
sbbb
icebp
ror
or
or
and
mov
into
hlt
xchg
int3
loopne
xor
scas
inc
mov
push
ficomps
jle
push
popf
js
dec
nop
test
fistps
lretw
es
lea
movsb
and
leave
and
fwait
and
popa
dec
xor
int3
or
pop
fs
add
push
dec
sbb
or
mov
ja
inc
dec
dec
data16
fcom
inc
movsb
rolb
inc
mov
int
xchg
test
xlat
rolb
add
xchg
subb
and
insb
or
fimull
popw
mov
push
out
adc
adc
loop
xor
or
lods
push
and
rcl
mov
in
daa
js
pop
bound
push
stc
fbstp
inc
mov
adc
mov
and
dec
inc
sbb
mov
test
into
push
jne
sbb
cmp
mov
mov
dec
ljmp
mov
stos
pop
push
xor
dec
clc
in
mov
pop
ja
pop
xor
lods
xchg
sbb
adc
sbb
push
and
lds
sub
adc
stos
fdivrl
fstpt
idivb
xor
dec
fwait
inc
xchg
das
mov
into
mov
or
cmp
into
fcomp
pop
jae
push
fistl
pop
inc
sbb
or
dec
jecxz
test
mov
jno
dec
xor
mov
pop
push
inc
sub
mov
fcom
add
or
call
jb
add
loopne
sub
dec
inc
pop
lock
arpl
pop
movsl
cmp
ljmp
pop
sti
inc
into
cld
inc
dec
mov
lds
jo
pop
in
popf
insl
fnstenv
hlt
add
cmp
out
jmp
lock
push
push
adc
cwtl
sub
inc
mov
jg
add
sub
sbb
push
inc
sub
neg
test
imul
mov
mov
dec
loopne
xchg
push
dec
and
rcrl
addr16
daa
mov
add
mov
adc
fldenv
xor
push
mov
add
xor
sti
das
inc
in
mov
and
pop
add
xchg
jb
lods
or
xor
mov
lea
dec
aam
icebp
js
repnz
dec
inc
and
ret
mov
sbb
dec
loope
into
mov
clc
inc
jge
or
xchg
xchg
imul
outsb
add
sub
mov
and
in
mov
cwtl
es
push
and
push
sub
sbb
add
cmp
outsb
sub
or
jno
jnp
pop
or
inc
push
arpl
mov
add
ret
sbb
aam
arpl
mov
add
popf
int
pop
shll
arpl
pop
push
add
jnp
add
mov
xchg
or
push
dec
arpl
dec
cwtl
adc
mov
scas
inc
push
ret
or
cmp
adc
cmp
cmp
bnd
fistpll
jne
rorb
imul
ds
std
clc
sbb
inc
adc
push
ja
dec
jne
push
rolb
daa
mov
je
int3
dec
pop
mov
movsb
dec
sbb
dec
inc
and
jb
loope
adc
ret
imulb
push
add
inc
adc
stc
and
das
mov
mov
test
adc
roll
sbb
dec
sub
inc
outsl
je
mov
ret
sbb
nop
test
cmp
dec
out
adc
rorl
movsl
jne
and
adc
adc
or
mov
or
outsb
rorl
push
and
mov
and
dec
cmp
inc
mov
sbb
sbb
mov
push
fs
pusha
xchg
sub
adc
data16
sub
daa
test
shlb
fndisi(8087
jp
out
adc
push
lret
or
sbb
xchg
lods
adc
es
cmp
idivl
je
inc
jnp
push
jnp
aam
dec
fwait
daa
mov
sub
int3
push
pusha
test
notw
push
sbb
test
xchg
cmpb
arpl
dec
inc
mov
mov
xchg
loopne
sub
mull
fs
out
dec
inc
test
pushf
fidivrs
mov
adc
test
in
jecxz
dec
dec
cmp
inc
stos
pusha
xchg
xor
mov
mov
fs
mov
pop
jb
bound
adc
xchg
rolb
rorb
mov
dec
adc
test
filds
pop
sbb
imul
adc
push
sbb
adc
imul
add
cwtl
push
aaa
push
shlb
push
mov
push
push
push
pushl
add
jae
xchg
add
in
mov
lock
test
dec
push
out
insl
addl
sbb
ss
negl
push
sbb
leave
ljmp
or
inc
dec
inc
add
pop
pop
enter
mov
sub
andl
add
mov
or
inc
mov
dec
or
mov
popa
insb
push
sub
mov
xchg
daa
pusha
popa
inc
push
outsb
daa
test
xchg
lea
or
insl
ss
or
sub
or
movsb
inc
sub
lods
or
or
jae
inc
pop
jbe
test
mov
xor
jge
sbb
and
arpl
xor
dec
aam
cmp
push
rclb
bound
mov
push
push
xor
mov
xor
or
ljmp
bound
sub
jge
and
popa
loopne
or
mov
push
mov
or
and
insb
rorb
inc
sub
dec
fcomps
fldenv
or
jge
lret
or
popf
adc
xchg
andb
in
pusha
adc
lods
fidivs
add
in
jbe
into
pop
or
mov
es
mov
enter
and
mov
aaa
lods
adc
hlt
add
and
push
loopne
jns
or
bound
arpl
mov
scas
sub
add
jbe
mov
cli
or
add
sbb
and
loopne
or
bound
aam
add
xor
les
int
dec
or
sbb
fcmovnu
push
adc
fwait
pop
add
pop
xor
pop
pop
cbtw
push
xchg
lods
je
push
pop
pop
cmc
cmp
leave
out
push
stc
movsl
sbb
testl
and
daa
out
sbb
sub
jb
xchg
or
lret
inc
sbb
sub
movsb
adc
popf
popf
jg
pop
out
xchg
or
jnp
loop
rorl
mov
in
out
adc
add
sub
mov
xchg
mov
das
mov
sbb
daa
xor
push
mov
mov
or
fldl
dec
call
es
sbb
test
cmp
test
push
sbb
or
mov
jns
jae
adc
sbb
adc
mov
xor
gs
mov
mov
mov
push
mov
mov
xor
jns
sub
adc
or
fldcw
mov
movsl
lods
gs
sub
add
add
pop
or
divl
imul
pop
aas
and
rorl
or
or
cmpsl
loope
sbb
cld
jae
cs
inc
cwtl
and
inc
add
push
mov
es
es
cwtl
insb
or
push
sbb
pop
orb
jnp
cmpsl
cwtl
inc
mov
push
js
ljmp
dec
or
adc
popf
popa
pop
mov
and
pop
add
mov
xor
ja
push
add
sbb
adc
sub
outsb
push
and
inc
imul
daa
dec
cmp
sbb
mov
inc
push
dec
jo
and
or
es
js
push
lret
lret
pop
mov
sbb
push
std
addb
dec
cmp
inc
inc
and
mov
add
enter
mov
pop
add
imul
push
mov
addr16
sbb
ss
pop
jbe
pop
dec
fadds
pop
je
pop
add
sbb
stos
inc
xchg
mov
pop
fs
push
inc
sbb
inc
es
xor
int
pop
loopne
sub
mov
fs
mov
data16
inc
adcb
jnp
xlat
or
sub
fsubr
add
test
add
ja
cmp
sub
ret
mov
or
fsubl
mov
inc
daa
cmc
or
mov
cmp
sub
pop
pop
lods
xor
add
ss
fstps
popa
ret
cmp
fwait
dec
mov
sub
js
lds
cmp
cmp
and
inc
mov
mov
stc
inc
and
mov
test
inc
inc
mov
sbb
fmull
testl
mov
pop
cmpsl
sbb
imul
cmpsl
inc
mov
or
add
jle
fs
sbb
leavew
adc
mov
sbb
push
fwait
or
or
pop
xchg
clc
in
jnp
fwait
add
fldenv
int3
fidivs
ds
push
push
mov
mov
mov
jnp
inc
loop
popa
sbb
or
mov
and
es
addb
ds
pusha
fs
je
or
in
aam
adc
add
stos
xchg
jo
and
mov
adcb
andl
jbe
insl
mov
fadds
test
add
sbb
addl
fld
xchg
test
test
out
add
fmul
mov
out
and
sub
sbb
inc
mov
add
lret
inc
mov
mov
insb
or
or
arpl
xchg
add
inc
dec
dec
jo
cld
pop
xchg
mov
fldcw
daa
addb
and
pusha
lods
cmovnp
dec
or
lock
fimuls
sub
sub
inc
mov
gs
xchg
daa
add
lods
aaa
ficoml
xor
mov
pushf
cmp
push
fsubs
rolb
or
or
insb
xlat
loop
pop
add
add
and
xchg
or
dec
int
pop
mov
xor
and
or
orb
jl
inc
add
add
jb
outsb
inc
mov
add
gs
ds
add
jb
outsl
push
add
adc
add
lret
add
sub
xor
call
inc
add
cmovge
jne
xor
test
jae
adc
fistpl
cltd
inc
inc
jne
das
outsb
dec
dec
fs
insb
adc
outsl
insl
jo
je
jb
popa
insl
aaa
popa
int
testb
sbb
push
add
repnz
pop
pop
pop
mov
fisubrl
and
xchg
mov
xor
xor
outsb
push
push
cmp
dec
outsl
je
imul
add
cld
call
push
or
insb
add
mov
pop
and
movzwl
call
clts
daa
lock
and
cmp
std
mov
incl
xrelease
add
add
xchg
inc
dec
dec
add
add
pop
inc
sub
orl
add
sbb
dec
add
mov
mov
and
enter
add
add
in
int3
and
adc
das
push
and
jo
pop
xor
aaa
sub
cmpb
inc
dec
inc
inc
enter
fwait
or
jmp
jge
inc
inc
push
inc
mov
add
and
adc
cmp
mov
push
push
or
popf
pop
clc
xchg
shrb
fs
push
sarl
push
shlb
add
inc
dec
lcall
add
and
jae
cmp
fistpl
cmp
add
xchg
sbb
add
aaa
fwait
push
inc
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
