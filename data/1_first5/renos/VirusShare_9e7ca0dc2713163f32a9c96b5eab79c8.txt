jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
aaa
arpl
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
cmp
jne
lea
inc
inc
dec
mov
inc
inc
inc
xchg
cmp
jnp
lea
mov
xchg
xchg
inc
inc
inc
lea
mov
lea
lea
inc
mov
mov
mov
mov
lea
xchg
lea
xchg
xchg
mov
movl
mov
push
call
xchg
lea
mov
cmp
jb
lea
mov
lea
lea
lea
mov
xchg
xchg
xchg
lea
mov
jmp
xchg
inc
inc
inc
mov
xchg
xchg
lea
mov
xchg
mov
lea
mov
inc
inc
mov
push
call
cmp
je
lea
lea
lea
mov
mov
mov
xchg
jmp
inc
inc
inc
xchg
mov
mov
xchg
lea
xchg
xchg
mov
dec
inc
inc
xchg
lea
mov
lea
mov
lea
mov
xchg
xchg
dec
movl
mov
push
call
cmp
jl
xchg
lea
xchg
lea
xchg
mov
dec
xchg
mov
lea
lea
mov
xchg
lea
inc
mov
mov
mov
mov
mov
xchg
lea
lea
xchg
mov
mov
movl
mov
push
call
cmp
jnp
xchg
xchg
mov
xchg
mov
dec
inc
inc
dec
lea
xchg
mov
cmp
js
xchg
mov
mov
mov
mov
lea
xchg
lea
xchg
mov
lea
mov
lea
lea
lea
inc
movl
mov
push
push
call
cmp
jne
lea
inc
inc
dec
mov
inc
inc
inc
xchg
cmp
jnp
lea
mov
xchg
xchg
inc
inc
inc
lea
mov
lea
lea
inc
mov
mov
mov
mov
lea
xchg
lea
xchg
xchg
mov
movl
mov
push
call
cmp
jl
xchg
lea
xchg
lea
xchg
mov
dec
xchg
mov
lea
lea
mov
xchg
lea
inc
mov
mov
mov
mov
mov
xchg
lea
lea
xchg
mov
mov
movl
mov
push
call
cmp
jnp
xchg
xchg
mov
xchg
mov
dec
inc
inc
dec
lea
xchg
mov
cmp
js
xchg
mov
mov
mov
mov
lea
xchg
lea
xchg
mov
lea
mov
lea
lea
lea
inc
movl
mov
push
push
call
cmp
jne
lea
inc
inc
dec
mov
inc
inc
inc
xchg
cmp
jnp
lea
mov
xchg
xchg
inc
inc
inc
lea
mov
lea
lea
inc
mov
mov
mov
mov
lea
xchg
lea
xchg
xchg
mov
movl
mov
push
call
mov
pop
ret
lea
push
mov
add
mov
mov
cmp
jl
xchg
lea
xchg
lea
xchg
mov
dec
xchg
mov
lea
lea
mov
xchg
lea
inc
mov
mov
mov
mov
mov
xchg
lea
lea
xchg
mov
mov
mov
cmp
je
call
ret
xchg
lea
mov
cmp
jb
lea
mov
lea
lea
lea
mov
xchg
xchg
xchg
lea
mov
jmp
xchg
inc
inc
inc
mov
xchg
xchg
lea
mov
xchg
mov
lea
mov
inc
inc
mov
xor
divl
test
jne
cmp
je
lea
lea
lea
mov
mov
mov
xchg
jmp
inc
inc
inc
xchg
mov
mov
xchg
lea
xchg
xchg
mov
dec
inc
inc
xchg
lea
mov
lea
mov
lea
mov
xchg
xchg
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jnp
xchg
xchg
mov
xchg
mov
dec
inc
inc
dec
lea
xchg
mov
cmp
js
xchg
mov
mov
mov
mov
lea
xchg
lea
xchg
mov
lea
mov
lea
lea
lea
inc
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jbe
lea
mov
mov
lea
mov
mov
lea
mov
lea
inc
inc
mov
mov
cmp
js
lea
xchg
lea
mov
xchg
mov
lea
lea
inc
dec
dec
mov
dec
dec
dec
mov
cmp
je
ret
cmp
jno
mov
lea
lea
xchg
dec
dec
mov
xchg
lea
xchg
mov
mov
cmp
jns
mov
xchg
mov
inc
mov
mov
mov
inc
xchg
lea
lea
lea
xchg
mov
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
lea
cmp
jp
mov
xchg
mov
lea
cmp
jg
inc
inc
cmp
ja
mov
xchg
mov
lea
inc
inc
xchg
mov
lea
mov
lea
mov
mov
lea
lea
lea
mov
lea
dec
dec
inc
mov
cmp
je
call
cmp
jno
mov
lea
lea
xchg
dec
dec
mov
xchg
lea
xchg
mov
mov
cmp
jns
mov
xchg
mov
inc
mov
mov
mov
inc
xchg
lea
lea
lea
xchg
mov
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
je
mov
movl
cmp
jnp
xchg
xchg
mov
xchg
mov
dec
inc
inc
dec
lea
xchg
mov
cmp
js
xchg
mov
mov
mov
mov
lea
xchg
lea
xchg
mov
lea
mov
lea
lea
lea
inc
mov
sub
mov
cmp
jae
xchg
mov
mov
mov
mov
lea
mov
xchg
dec
mov
xchg
xchg
lea
inc
lea
lea
lea
lea
mov
mov
xchg
lea
mov
xchg
dec
push
mov
mov
xor
call
mov
cmp
je
lea
lea
lea
mov
mov
mov
xchg
jmp
inc
inc
inc
xchg
mov
mov
xchg
lea
xchg
xchg
mov
dec
inc
inc
xchg
lea
mov
lea
mov
lea
mov
xchg
xchg
dec
mov
mov
mov
call
cmp
jbe
lea
mov
mov
lea
mov
mov
lea
mov
lea
inc
inc
mov
mov
cmp
js
lea
xchg
lea
mov
xchg
mov
lea
lea
inc
dec
dec
mov
dec
dec
dec
push
mov
mov
xor
call
mov
xchg
lea
mov
cmp
jb
lea
mov
lea
lea
lea
mov
xchg
xchg
xchg
lea
mov
jmp
xchg
inc
inc
inc
mov
xchg
xchg
lea
mov
xchg
mov
lea
mov
inc
inc
cmp
jl
xchg
lea
xchg
lea
xchg
mov
dec
xchg
mov
lea
lea
mov
xchg
lea
inc
mov
mov
mov
mov
mov
xchg
lea
lea
xchg
mov
mov
lea
mov
call
cmp
jae
xchg
mov
mov
mov
mov
lea
mov
xchg
dec
mov
xchg
xchg
lea
inc
lea
lea
lea
lea
mov
mov
xchg
lea
mov
xchg
dec
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jno
mov
lea
lea
xchg
dec
dec
mov
xchg
lea
xchg
mov
mov
cmp
jns
mov
xchg
mov
inc
mov
mov
mov
inc
xchg
lea
lea
lea
xchg
mov
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
lea
cmp
jp
mov
xchg
mov
lea
cmp
jg
inc
inc
cmp
ja
mov
xchg
mov
lea
inc
inc
xchg
mov
lea
mov
lea
mov
mov
lea
lea
lea
mov
lea
dec
dec
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jne
lea
inc
inc
dec
mov
inc
inc
inc
xchg
cmp
jnp
lea
mov
xchg
xchg
inc
inc
inc
lea
mov
lea
lea
inc
mov
mov
mov
mov
lea
xchg
lea
xchg
xchg
mov
mov
mov
mov
mov
xor
push
push
mov
mov
cltd
add
adc
add
mov
mov
mov
xchg
lea
mov
cmp
jb
lea
mov
lea
lea
lea
mov
xchg
xchg
xchg
lea
mov
jmp
xchg
inc
inc
inc
mov
xchg
xchg
lea
mov
xchg
mov
lea
mov
inc
inc
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
lea
push
mov
add
mov
mov
cmp
jbe
lea
mov
mov
lea
mov
mov
lea
mov
lea
inc
inc
mov
mov
cmp
js
lea
xchg
lea
mov
xchg
mov
lea
lea
inc
dec
dec
mov
dec
dec
dec
push
call
mov
push
mov
push
call
mov
mov
mov
cmp
je
lea
lea
lea
mov
mov
mov
xchg
jmp
inc
inc
inc
xchg
mov
mov
xchg
lea
xchg
xchg
mov
dec
inc
inc
xchg
lea
mov
lea
mov
lea
mov
xchg
xchg
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jae
xchg
mov
mov
mov
mov
lea
mov
xchg
dec
mov
xchg
xchg
lea
inc
lea
lea
lea
lea
mov
mov
xchg
lea
mov
xchg
dec
mov
mov
movl
cmp
jne
lea
inc
inc
dec
mov
inc
inc
inc
xchg
cmp
jnp
lea
mov
xchg
xchg
inc
inc
inc
lea
mov
lea
lea
inc
mov
mov
mov
mov
lea
xchg
lea
xchg
xchg
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
lea
mov
cmp
jb
lea
mov
lea
lea
lea
mov
xchg
xchg
xchg
lea
mov
jmp
xchg
inc
inc
inc
mov
xchg
xchg
lea
mov
xchg
mov
lea
mov
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jne
lea
inc
inc
dec
mov
inc
inc
inc
xchg
cmp
jnp
lea
mov
xchg
xchg
inc
inc
inc
lea
mov
lea
lea
inc
mov
mov
mov
mov
lea
xchg
lea
xchg
xchg
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jnp
xchg
xchg
mov
xchg
mov
dec
inc
inc
dec
lea
xchg
mov
cmp
js
xchg
mov
mov
mov
mov
lea
xchg
lea
xchg
mov
lea
mov
lea
lea
lea
inc
mov
pop
ret
add
add
add
outsb
add
insb
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
mov
xchg
xchg
lahf
lahf
repz
lcall
mov
test
test
repz
xchg
lahf
mov
movsl
xchg
mov
mov
repz
mov
test
pushf
xchg
test
loope
lahf
lahf
repz
repz
repz
mov
repz
repz
repz
repz
repz
repz
jl
je
or
adc
xor
adc
mov
mov
add
fidivl
repz
fidivl
repz
fidivl
repz
mov
push
jmp
repz
or
push
jecxz
mov
jp
or
push
out
mov
jp
or
push
jmp
mov
jp
or
push
out
addr16
jp
or
push
shll
repz
or
push
xlat
addr16
jp
or
push
repz
or
les
jp
or
stos
stos
scas
xor
xor
sub
add
mov
xor
jl
xor
mov
xor
mov
cmpsb
jl
je
cmp
jp
cmp
das
mov
cmp
mov
mov
mov
mov
jl
sti
jp
pop
jl
cmp
mov
mov
mov
jl
cmp
mov
jp
seta
repz
mov
jl
iret
hlt
mov
jp
add
divb
repz
sub
je
div
add
repz
sub
mov
jp
daa
sbb
repz
repz
repz
daa
jl
push
mov
mov
mov
je
sbb
add
repz
daa
je
repz
jl
daa
jl
hlt
mov
jp
pop
jl
daa
jl
jecxz
mov
jp
adc
jl
daa
jl
jecxz
mov
jp
pop
jl
daa
jl
jecxz
mov
jp
adc
jl
pop
or
jl
pop
jl
adc
repz
jl
cmp
mov
jp
sbb
jl
pop
jl
pop
hlt
cmc
jp
and
je
cmc
mov
jl
cmp
mov
jp
je
adc
je
pop
idivl
je
xrelease
mov
out
mov
je
push
add
adc
adc
jl
fcomi
mov
jp
or
jl
fistpll
pop
cmp
repz
jecxz
mov
je
jmp
jl
cmp
mov
repz
repz
cmp
mov
mov
repz
repz
sti
mov
mov
jl
pop
jle
xlat
movss
popf
repz
or
adc
ret
adc
div
xor
mov
cmpsb
jl
xchg
jl
sti
jl
decl
inc
jae
sub
inc
cmc
sbb
or
cmp
xchg
repz
ret
lods
repz
inc
cmc
mov
jecxz
shl
repz
test
xchg
pop
sbb
sbb
sub
repz
pop
and
xchg
bound
sbb
repz
repz
repz
jae
testb
mov
data16
inc
repnz
add
mov
xor
jmp
ret
sbb
adc
adc
cmp
sbb
adc
test
sti
repz
repz
jp
dec
adc
adc
lds
add
adc
fidivrl
jp
xor
cmpsb
jl
jb
or
adc
jp
idiv
push
mov
repz
cli
push
mov
repz
jge
or
cmpsb
or
arpl
push
mov
adc
xrelease
cmp
bndstx
adc
mov
mov
repz
repz
jge
or
div
les
ja
or
adc
adc
int
or
repz
xrelease
cmp
or
les
jge
or
or
dec
addr16
adc
adc
xor
or
dec
call
repz
xor
repz
or
or
jae
push
mov
jnp
or
xor
or
arpl
push
mov
adc
xrelease
push
scas
xor
mov
cmpsb
jl
mov
xor
push
mov
mov
adc
repz
sti
push
mov
les
push
cli
push
mov
les
mov
add
call
repz
xor
repz
cli
push
mov
les
push
sti
push
mov
jge
call
repz
push
les
push
cli
push
mov
jge
call
repz
mov
jnp
call
repz
push
cli
push
mov
jge
push
jnp
call
repz
push
sti
push
mov
add
call
repz
mov
add
call
repz
xor
repz
push
les
jge
push
jge
call
repz
jge
adc
xor
add
lea
push
mov
add
mov
mov
cmp
jne
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
lea
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
call
ret
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
lea
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
lea
cmp
jp
mov
xchg
mov
lea
cmp
jg
inc
inc
cmp
ja
mov
xchg
mov
lea
inc
inc
xchg
mov
lea
mov
lea
mov
mov
lea
lea
lea
mov
lea
dec
dec
inc
movl
cmp
jae
xchg
mov
mov
mov
mov
lea
mov
xchg
dec
mov
xchg
xchg
lea
inc
lea
lea
lea
lea
mov
mov
xchg
lea
mov
xchg
dec
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jnp
xchg
xchg
mov
xchg
mov
dec
inc
inc
dec
lea
xchg
mov
cmp
js
xchg
mov
mov
mov
mov
lea
xchg
lea
xchg
mov
lea
mov
lea
lea
lea
inc
mov
mov
call
mov
cmpl
je
cmp
jne
lea
inc
inc
dec
mov
inc
inc
inc
xchg
cmp
jnp
lea
mov
xchg
xchg
inc
inc
inc
lea
mov
lea
lea
inc
mov
mov
mov
mov
lea
xchg
lea
xchg
xchg
mov
mov
cmp
je
mov
subb
mov
mov
xchg
lea
mov
cmp
jb
lea
mov
lea
lea
lea
mov
xchg
xchg
xchg
lea
mov
jmp
xchg
inc
inc
inc
mov
xchg
xchg
lea
mov
xchg
mov
lea
mov
inc
inc
mov
xorb
cmp
jnp
xchg
xchg
mov
xchg
mov
dec
inc
inc
dec
lea
xchg
mov
cmp
js
xchg
mov
mov
mov
mov
lea
xchg
lea
xchg
mov
lea
mov
lea
lea
lea
inc
incl
mov
cmp
jne
cmp
jno
mov
lea
lea
xchg
dec
dec
mov
xchg
lea
xchg
mov
mov
cmp
jns
mov
xchg
mov
inc
mov
mov
mov
inc
xchg
lea
lea
lea
xchg
mov
dec
mov
call
cmp
jne
lea
inc
inc
dec
mov
inc
inc
inc
xchg
cmp
jnp
lea
mov
xchg
xchg
inc
inc
inc
lea
mov
lea
lea
inc
mov
mov
mov
mov
lea
xchg
lea
xchg
xchg
mov
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jne
lea
inc
inc
dec
mov
inc
inc
inc
xchg
cmp
jnp
lea
mov
xchg
xchg
inc
inc
inc
lea
mov
lea
lea
inc
mov
mov
mov
mov
lea
xchg
lea
xchg
xchg
mov
xchg
lea
mov
cmp
jb
lea
mov
lea
lea
lea
mov
xchg
xchg
xchg
lea
mov
jmp
xchg
inc
inc
inc
mov
xchg
xchg
lea
mov
xchg
mov
lea
mov
inc
inc
cmp
jl
xchg
lea
xchg
lea
xchg
mov
dec
xchg
mov
lea
lea
mov
xchg
lea
inc
mov
mov
mov
mov
mov
xchg
lea
lea
xchg
mov
mov
push
mov
push
call
mov
pop
ret
nop
push
mov
add
cmpb
jne
call
cmp
jl
xchg
lea
xchg
lea
xchg
mov
dec
xchg
mov
lea
lea
mov
xchg
lea
inc
mov
mov
mov
mov
mov
xchg
lea
lea
xchg
mov
mov
mov
mov
mov
mov
mov
and
jmp
and
add
inc
xor
cmp
jmp
call
ret
jne
cmp
je
lea
lea
lea
mov
mov
mov
xchg
jmp
inc
inc
inc
xchg
mov
mov
xchg
lea
xchg
xchg
mov
dec
inc
inc
xchg
lea
mov
lea
mov
lea
mov
xchg
xchg
dec
movb
xchg
lea
mov
cmp
jb
lea
mov
lea
lea
lea
mov
xchg
xchg
xchg
lea
mov
jmp
xchg
inc
inc
inc
mov
xchg
xchg
lea
mov
xchg
mov
lea
mov
inc
inc
mov
mov
pop
ret
nop
push
mov
add
call
cmp
jne
lea
inc
inc
dec
mov
inc
inc
inc
xchg
cmp
jnp
lea
mov
xchg
xchg
inc
inc
inc
lea
mov
lea
lea
inc
mov
mov
mov
mov
lea
xchg
lea
xchg
xchg
mov
call
call
call
test
jne
call
jmp
movb
nop
movw
cmp
jbe
lea
mov
mov
lea
mov
mov
lea
mov
lea
inc
inc
mov
mov
cmp
js
lea
xchg
lea
mov
xchg
mov
lea
lea
inc
dec
dec
mov
dec
dec
dec
call
lea
mov
pop
ret
push
mov
add
cmp
jne
lea
inc
inc
dec
mov
inc
inc
inc
xchg
cmp
jnp
lea
mov
xchg
xchg
inc
inc
inc
lea
mov
lea
lea
inc
mov
mov
mov
mov
lea
xchg
lea
xchg
xchg
mov
cmp
je
lea
lea
lea
mov
mov
mov
xchg
jmp
inc
inc
inc
xchg
mov
mov
xchg
lea
xchg
xchg
mov
dec
inc
inc
xchg
lea
mov
lea
mov
lea
mov
xchg
xchg
dec
push
call
cmp
je
push
push
push
call
mov
call
cmp
jae
xchg
mov
mov
mov
mov
lea
mov
xchg
dec
mov
xchg
xchg
lea
inc
lea
lea
lea
lea
mov
mov
xchg
lea
mov
xchg
dec
mov
pop
ret
add
jae
push
add
add
add
add
add
xor
jne
mov
cmp
jno
mov
lea
lea
xchg
dec
dec
mov
xchg
lea
xchg
mov
mov
cmp
jns
mov
xchg
mov
inc
mov
mov
mov
inc
xchg
lea
lea
lea
xchg
mov
dec
mov
mov
mov
lea
call
cmp
jnp
xchg
xchg
mov
xchg
mov
dec
inc
inc
dec
lea
xchg
mov
cmp
js
xchg
mov
mov
mov
mov
lea
xchg
lea
xchg
mov
lea
mov
lea
lea
lea
inc
ret
nop
ret
lea
lock
add
add
add
add
jp
add
xlat
out
out
rcrl
out
or
sub
add
insb
mov
cmc
sub
add
shr
cmp
push
push
mov
add
add
push
dec
jae
add
push
push
mov
add
add
ja
add
jns,pn
xchg
add
and
aam
mov
mov
add
add
cmp
lea
add
mov
add
jmp
add
add
dec
mov
sbb
push
push
mov
add
in
and
push
sbb
xor
add
pop
adc
cmp
in
out
or
add
add
add
mov
add
add
and
add
dec
test
data16
lods
push
pop
xchg
and
imul
sbb
lahf
xorl
mov
pop
rorb
repnz
inc
jo
add
add
add
sti
testl
add
adc
add
call
in
xor
fldl
add
cmp
add
add
add
out
fs
mov
add
push
adc
lods
popa
cltd
inc
mov
test
mov
add
xchg
inc
dec
jnp
testl
add
add
push
jecxz
add
inc
add
mov
add
outsb
add
add
movsb
adc
cmpsl
data16
mov
shrl
push
in
xchg
imul
sbb
inc
ror
add
add
add
arpl
dec
pop
mov
pop
push
jns
bnd
jg
sti
add
mov
push
pop
adc
ficomps
addr16
gs
or
sub
add
mov
jo
jle
jmp
ret
xchg
pop
nop
call
rolb
je
stc
jg
add
and
and
pop
xor
cmc
loopne
add
sbb
add
lahf
add
sbbl
add
lds
xchg
sar
es
cwtl
dec
push
xor
add
mov
and
ljmp
and
sbb
and
leave
cmp
cmp
hlt
add
mov
add
jmp
fwait
jmp
dec
add
jl
add
mov
add
push
in
add
and
xchg
out
add
add
xchg
mov
add
cld
xchg
out
add
add
xor
add
pop
mov
loopne
inc
hlt
popf
jl
fdivp
fdivrl
add
push
test
dec
push
add
fimuls
add
sub
aaa
gs
add
arpl
xlat
mov
int3
xchg
sbb
jb
jns
xchg
push
adc
add
sldt
xlat
cltd
add
rolb
xor
xchg
jmp
insl
cmp
xchg
sbb
add
ret
imul
xchg
mov
out
add
scas
and
ljmp
fiadds
jno
in
push
add
cmpsl
adc
add
add
movsb
inc
dec
add
test
mov
sub
cwtl
push
xor
push
pop
loop
sub
dec
xor
add
imul
add
arpl
pop
dec
ja
sldt
repz
pop
jne
mov
add
mov
add
lahf
faddl
ror
adc
in
add
add
dec
cmpl
cmpsl
pop
add
add
sbb
add
cmc
repnz
add
jnp
jg
fsub
mov
jnp
lods
lods
push
stos
add
mov
fwait
pushf
xchg
sti
cmp
push
mov
xor
gs
mov
and
in
and
mov
add
add
add
jecxz
aam
dec
add
add
stc
lret
inc
add
add
mov
mov
andl
sbb
in
or
xchg
xchg
adc
mov
jnp
mov
inc
imul
push
hlt
jp
mov
mov
outsl
aad
nop
sbb
mov
mov
in
pusha
cmp
fbld
or
or
rcll
mov
outsl
sub
outsl
jp
push
ss
stos
fwait
or
insb
int
gs
cs
jle
rol
sbb
xor
pop
ret
cmp
xlat
sub
stos
jae
les
push
push
outsl
fstpl
sub
cmpb
dec
mov
sbb
fldcw
cmp
ss
cltd
aam
push
inc
lret
xchg
shlb
mov
loopne
mov
icebp
icebp
imul
fs
inc
pop
sub
pop
imul
xchg
stos
or
rorl
fucomp
xchg
fdivrp
sahf
pop
xchg
jo
fisubrl
cld
iret
hlt
and
popa
fnstcw
xchg
icebp
es
aam
jge
out
fs
daa
hlt
lcall
fstl
jl
mov
cmp
xor
decl
lahf
dec
out
mov
in
push
jns
inc
out
mov
cmpsb
ret
push
js
fwait
sbb
js
push
mov
out
cmc
push
scas
std
loope
pop
mov
or
cmpl
mov
shlb
scas
mov
push
lds
lcall
xor
les
pop
mov
mov
jo
dec
divb
add
fsubrl
push
sub
and
pop
mov
fisubl
popa
mov
mov
call
and
mov
sarb
notl
dec
lret
xor
jecxz
mov
mov
sahf
add
mov
xor
shrb
cmp
stc
call
pop
pop
adc
push
sbb
test
in
out
jns
cli
inc
out
xor
fs
into
es
mov
add
in
jge
enter
push
mov
ret
pop
jmp
cli
icebp
lods
jne
test
xlat
aad
fwait
sub
sbb
in
andb
jb,pt
and
rorb
mov
inc
dec
repz
fld
aaa
pop
les
push
in
decb
mov
xor
ljmp
pop
push
ret
fistl
imulb
cmpsb
jmp
out
add
dec
mov
arpl
inc
andl
dec
sub
mov
fadd
fsubrl
lds
outsb
inc
mov
mov
mov
pop
dec
jo
inc
or
pop
repz
in
out
add
stc
shlb
ss
cmp
das
div
mov
stos
dec
bound
cmpsl
repz
mov
enter
adc
lret
stc
inc
stos
mov
addr16
mov
xor
pop
pop
pop
sbb
sub
cmp
aam
push
aaa
ret
mov
jmp
insl
jnp
cli
xchg
add
sbb
popa
push
aas
cmpb
repnz
xchg
daa
mov
je
mov
test
cld
mov
push
push
xchg
pop
in
jne
sub
xchg
fwait
add
sub
pop
movsl
mov
dec
mov
test
push
lret
out
xor
mov
lods
xor
test
daa
popl
hlt
pop
sbb
ja
std
repz
push
decl
adc
jge
and
ja
mov
sahf
mov
push
xor
ret
mov
bound
dec
pop
in
pop
xor
mov
lret
ss
inc
inc
in
addr16
add
jp
sbb
mov
mov
dec
cwtl
call
cmp
cmp
inc
fdiv
xchg
mov
pop
jmp
outsl
out
mov
inc
push
mov
mov
jne
pop
stos
push
fsubs
insb
cmp
add
in
and
daa
or
iret
out
ret
push
pop
jecxz
xchg
inc
jbe
mov
push
lret
sbb
hlt
popf
mov
add
sbb
or
mov
sbb
jae
scas
cld
mov
mov
mov
xor
dec
leave
push
xchg
les
pop
inc
pop
or
or
cmp
testb
dec
dec
add
js
int3
lods
jecxz
pop
or
pop
ficomps
pop
jo
xchg
mov
and
xchg
cmpl
inc
or
push
lahf
gs
inc
les
gs
pop
push
cmp
fnsave
xor
mov
cltd
push
xor
xor
lcall
push
xchg
push
orb
jge
xchg
cmpsb
inc
jle
in
xorb
pop
and
icebp
fsubp
jae
aam
jae
lods
cmp
jnp
ds
jp
sarb
jle
cmpb
sbb
xchg
add
xor
aad
call
and
sub
mov
fstpt
insl
lcall
fcoml
scas
scas
sub
outsb
xor
sub
imul
inc
out
out
shll
js
dec
cmp
daa
negl
notl
sub
mov
int
sahf
movsl
jl
test
or
outsl
xor
into
stc
lahf
pushw
addb
adc
and
mov
xchg
cmp
mov
out
cli
jp
les
mov
jo
in
roll
or
mov
mov
add
adc
popa
or
sbb
pop
sub
xlat
adc
push
sub
es
in
in
inc
imul
popa
or
or
dec
ja
rolb
add
jb
les
pop
repz
pop
xor
gs
lock
fisubrl
adc
inc
pushf
fisubs
jmp
addr16
cs
insb
loopne
stos
xchg
inc
pushf
sbb
pop
in
jb
mov
push
je
or
filds
lea
sbbl
jle
iret
and
jp
leave
xchg
inc
xchg
and
das
lret
scas
out
mov
push
and
push
nop
sarl
out
cmp
fnstenv
mov
mov
lahf
lock
cld
cmp
mov
push
lock
jnp
xor
out
push
test
fcmovne
addr16
in
inc
mov
or
cld
clc
mov
jmp
ljmp
push
mov
dec
lret
mov
comiss
add
sbb
test
jbe
dec
mov
dec
sbb
xchg
jnp
movsb
stos
push
xchg
pop
xor
imul
and
pop
jmp
or
out
data16
xchg
pushf
cmpsl
push
add
movsb
imul
push
fimull
mov
pop
jns
sahf
jl
xchg
xor
pop
mov
pop
shrl
ja
int
dec
pop
lods
loopne
stos
nop
xchg
or
mov
in
ja
jns
adc
jb
out
push
shr
push
mov
push
inc
xchg
jns
daa
jmp
xchg
xor
ss
cmp
out
push
xor
jp
mov
mov
inc
loope
out
mov
pop
jne
or
icebp
fbld
stc
xchg
test
clc
push
xchg
cmp
orl
xchg
out
adc
mov
mov
jnp
and
insb
mov
push
inc
jle
negb
in
pop
adc
icebp
iret
es
stos
ret
fwait
pop
sbb
inc
orl
fneni(8087
cwtl
popf
loopne
cmp
inc
lcall
xchg
clc
int3
ret
sbb
add
imul
xchg
scas
pop
cltd
add
dec
rol
mov
inc
repnz
stc
leave
fildll
sbb
mov
andb
aad
add
cmc
ljmp
js
dec
add
push
xchg
addb
aam
xor
scas
mov
idivb
dec
inc
xchg
xchg
shlb
and
jge
mov
or
cmp
aaa
ja
rcr
mov
push
adc
pop
xor
xor
inc
mov
test
dec
outsl
xchg
inc
or
sub
imul
push
pop
fs
icebp
loope
jb
sub
dec
jl
leave
and
fcoml
movsl
or
cs
pop
bound
adcb
inc
add
pushf
push
aaa
adcl
pop
or
loopne
loop
mov
lcall
jp
mov
push
outsb
cwtl
fidivs
adc
adc
inc
jg
xor
mov
test
pop
loop
mov
in
pop
and
jns
int
adc
fadds
dec
pop
not
cmpsb
push
lret
aas
shl
das
mov
test
sahf
dec
or
pop
xor
inc
outsl
adc
loop
jg
stc
push
xchg
leave
fs
pop
ds
frstor
cmp
mov
fldlg2
cli
lods
jne
xor
outsl
cmp
ljmp
in
and
loopne
sahf
sbbl
shll
in
add
nop
data16
and
add
xlat
push
adc
sub
or
lock
mov
pop
mov
sti
adc
test
test
nop
outsl
insb
and
jnp
inc
jne
int3
fnstenv
and
repz
cs
loopne
mov
pop
jl
inc
adc
cli
jmp
mov
outsb
aad
sub
inc
mov
int3
aas
mov
jl
dec
sbb
stos
je
scas
mov
loop
into
lea
mov
outsb
mov
daa
cmpl
pop
fcmovnbe
bound
xchg
pop
and
lock
adc
movsb
lds
ror
movsb
inc
idivb
std
addb
dec
pop
stc
in
cmpsl
icebp
sarb
sbb
push
icebp
jbe
jo
addr16
lret
xlat
es
mov
hlt
hlt
mov
lcall
sub
add
ret
rcr
push
es
subl
inc
clc
icebp
dec
lods
xchg
adcl
ja
sub
lods
adc
int
mov
xchg
inc
and
push
insb
js
mov
add
mov
dec
mov
or
or
sbb
test
cltd
and
sbb
pushf
je
xchg
or
out
leave
xchg
add
subb
sbb
sub
adc
mov
add
pop
loope
cmpsb
ja
and
dec
adc
lods
or
and
jle
rcrl
sbb
pop
add
dec
lock
adcl
out
jns
movsb
stc
in
repnz
xorb
insl
enter
test
addr16
in
jp
or
mov
xchg
push
imul
cmp
pusha
or
filds
inc
std
jmp
add
rorl
dec
dec
cli
sub
and
push
rep
push
stos
hlt
mov
stos
insb
push
popf
pop
jnp
popl
jle
jmp
adc
in
pop
iret
test
cmp
jg
inc
mov
sti
jae
mov
stc
popf
pop
loop
push
sbb
out
fcmovbe
in
lea
xchg
imul
and
ret
push
adc
push
or
fnstenv
data16
arpl
and
or
mov
jbe
ret
ficompl
inc
enter
push
int3
cmp
pop
push
aam
loop
jl
pop
push
mov
cmp
and
mov
cmp
in
popa
movsb
xchg
test
je
push
jbe
js
jge
lods
enter
daa
icebp
int
cmp
pusha
jl
cmpsl
xchg
dec
jp
push
notl
xor
rcrb
hlt
push
sub
jae
dec
mov
or
mov
sbb
push
fwait
xor
pop
mov
xchg
data16
xor
cmpl
call
jb
repz
ss
mov
xchg
nop
sbb
movsl
push
add
jb
xor
and
outsb
jae
pop
xor
jae
pop
daa
mov
fcos
mov
add
call
out
sti
stos
cli
adc
sub
in
jg
xchg
mov
dec
loope
mov
dec
mov
shll
push
add
adc
add
xchg
cmp
lret
lcall
aam
sbb
xchg
imul
icebp
cmp
stc
or
in
xor
test
mov
or
mov
jb
rorb
cli
loopne
mov
cmp
in
std
or
pop
inc
into
iret
mov
xchg
mov
loopne
cmp
pop
adc
adc
mov
lahf
jnp
imul
add
pop
imul
icebp
lods
sub
sahf
cmp
xor
xlat
xchg
pop
add
scas
mov
call
sti
ret
xor
mov
cli
push
nop
dec
jb
dec
xor
sbb
les
inc
mov
fcomps
call
fdivs
lahf
adc
inc
and
xor
nop
jmp
mov
cmp
cmp
sub
inc
mov
pop
mov
outsb
dec
xchg
push
inc
je
cmpsl
sahf
jecxz
mov
repz
out
xchg
rcrl
push
push
mov
adcl
push
mov
inc
lahf
into
dec
lock
jo
das
mov
xlat
mov
fucomi
cmc
rcrl
std
xor
mov
mov
dec
push
sub
cmpsl
lock
mov
dec
inc
jbe
xchg
popf
mov
inc
mov
sub
mov
mov
pop
imul
std
inc
add
bound
es
leave
shrl
add
xchg
ret
ljmp
mov
mov
nop
push
mov
push
loope
movsb
paddsw
jne
lods
xchg
or
test
mov
enter
and
fldl
test
sbb
xchg
movsb
cmpsb
sbb
and
xor
aas
sti
sbb
sbb
mov
xchg
sub
adc
xor
sub
or
and
mov
jns
dec
sub
ja
clc
lods
dec
inc
xor
fcomps
pop
or
jns
fwait
lods
push
push
mov
cwtl
mov
out
pusha
loopne
bound
test
jmp
cmp
cwtl
mov
je
mov
xor
addr16
sbb
jp
cmp
mov
cmpsb
adc
mov
pop
stos
dec
inc
ds
pusha
movsb
jo
fbld
outsb
jae
out
mov
andl
xchg
into
notb
sahf
fs
mov
xor
inc
and
int
jnp
lea
jle
cld
push
in
std
jge
mov
sbb
ret
pop
pop
mov
xchg
mov
fsts
popa
and
or
sbb
inc
cwtl
mov
fimull
jns
sbb
js
imul
das
scas
and
pusha
cli
rcr
add
sub
mov
leave
int
popa
hlt
mov
mov
cmp
inc
addr16
mov
sbb
cwtl
aaa
adc
or
out
add
jae
int3
outsb
enter
sub
fiadds
push
xorb
sti
scas
js
jnp
jl
adc
mov
adc
inc
jmp
loope
jge
and
push
xchg
jecxz
lock
cmp
nop
or
lods
fistpll
dec
dec
hlt
push
push
fidivl
or
imul
push
inc
dec
test
jecxz
cmp
sub
lods
cmpsb
iret
mov
inc
js
lret
pop
loop
jle
and
insb
loope
sbb
sub
ret
daa
mov
lods
movsl
sbb
imul
sbb
cmp
sbb
lahf
add
pushf
push
xor
add
pop
pop
adc
and
pop
sub
push
pop
stc
in
fcoml
pop
sub
push
outsb
pop
insl
movsb
adc
inc
loop
jg
testb
fnstenv
pop
test
or
xchg
int
sti
in
fdivrs
shl
push
push
xor
mov
mov
sahf
sbb
mov
sahf
mov
scas
test
int
xor
sbb
outsl
rolb
inc
loop
jle
stc
shlb
adc
sub
push
ss
cmp
scas
in
out
dec
cli
adc
mov
movhps
cmp
shll
cmp
into
mov
cmc
pop
je
loopne
jmp
pop
xor
adc
xor
adc
push
adc
outsb
in
data16
sahf
lods
adc
cmp
mov
shll
fldt
and
push
mov
cs
ret
xchg
and
pop
addr16
and
push
mov
cmp
mov
int3
push
repz
adcb
jo
call
push
inc
bound
mov
fistps
add
outsl
addr16
xlat
lret
jae
jg
in
in
js
aas
cld
inc
jb
lahf
adc
adcl
call
lock
cwtl
enter
popa
inc
pusha
mov
inc
subl
iret
push
pop
xlat
mov
inc
es
inc
das
push
xor
leave
and
mov
shrl
movsb
testb
dec
std
into
inc
xchg
dec
dec
jmp
cmpsl
out
add
mov
and
lret
cmpsl
mov
mov
adc
xor
mov
xchg
xor
push
pop
push
aam
cmp
ret
icebp
dec
int
xchg
or
insl
sub
clc
addr16
xchg
add
add
lods
jmp
fcmovne
mov
lahf
sub
mov
sub
add
add
test
mov
int
push
xchg
shrb
fldcw
xchg
pop
sbb
adc
mov
adc
vpshlw
scas
add
adcb
dec
bound
xor
sbb
lret
adc
or
sbb
arpl
push
jmp
ds
xor
and
sbb
cmpsl
fdivl
aam
pusha
and
test
or
aas
scas
lods
bound
aas
repz
mov
call
dec
push
mov
xchg
cmp
cwtl
pusha
mov
addr16
fdivrs
mov
push
ja
addr16
jge
and
dec
jne
mov
pandn
int3
in
jmp
fwait
and
cs
push
popa
sub
xchg
push
in
jno
ljmp
stos
dec
push
insb
in
test
jle
in
cmpsb
in
push
sahf
adc
mov
ret
ss
mov
lret
and
mov
push
adc
inc
pop
xlat
dec
fidivrl
insl
je
std
add
and
out
test
mov
push
sar
mov
bnd
mov
inc
jae
hlt
cld
js
arpl
or
or
es
aaa
inc
push
insl
or
repz
aaa
int3
pop
addr16
pop
enter
sub
xorl
mov
and
pop
adc
outsb
and
movsb
stos
sbb
push
adc
jnp
and
ss
daa
pop
enter
daa
out
cmpl
mov
gs
mov
inc
push
mov
xchg
sbb
push
test
push
shrb
push
scas
aad
inc
mov
mov
xchg
js
cmpsb
mov
push
pop
xor
sub
mov
mov
movsl
and
jp
test
and
or
cmp
add
sbb
xor
repz
jg
inc
sub
mov
xlat
lret
dec
mov
mov
fdivrl
jecxz
outsb
shll
adc
popa
in
jg
pop
jae
hlt
push
lret
and
mov
xchg
cli
and
sbb
pop
int
xor
and
adc
int3
lret
in
mov
sub
sbb
loope
sahf
xor
test
mov
sub
jns
push
dec
scas
stc
jnp
push
fs
sub
inc
jnp
ss
nop
jge
in
pop
inc
mov
xor
xor
cli
cmp
push
or
inc
or
and
mov
pop
dec
std
adc
lret
imul
or
add
mov
xchg
mov
lods
clc
addr16
cmp
inc
sub
nop
in
cltd
add
sti
and
push
gs
sbb
nop
add
inc
inc
scas
popl
les
insl
dec
xchg
add
in
sbb
push
mov
dec
dec
pop
xchg
jge
adc
incb
jmp
out
fsubrs
cmp
aad
je
inc
or
imul
lock
cli
dec
orb
mov
mov
lea
lahf
inc
mov
add
dec
or
inc
mov
dec
dec
cmpsb
in
pop
stos
and
mov
imul
inc
mov
icebp
shl
sarl
mov
dec
dec
inc
test
mov
dec
icebp
sti
and
cld
out
mov
mov
cmpl
idivl
sarb
or
mov
or
xchg
test
andb
adc
stos
insl
adc
clc
mov
cltd
ljmp
in
lods
push
push
jno
mov
and
xchg
dec
jbe
stos
sbb
or
mov
iret
mov
push
cmp
fstl
fpatan
xchg
call
sbb
cmpsb
jl
xchg
pop
aas
stos
cli
push
out
out
repnz
incl
out
or
jmp
xorl
jle
push
aad
ret
js
xchg
fisttpll
push
mov
ja
xor
dec
daa
test
inc
push
aas
inc
or
mov
lds
add
add
pop
hlt
sbb
push
sub
popf
cmpsb
jns
repnz
jae
in
insl
mov
ss
sub
cltd
addr16
sbb
pusha
mov
mov
lcall
loopne
into
dec
pop
out
jne
adc
pusha
dec
add
jmp
add
inc
push
ss
test
mov
rcrl
scas
stos
dec
adc
and
scas
lea
pop
jnp
aam
jle
sar
in
subl
outsb
pop
xlat
iret
mov
insl
clc
pop
imul
inc
inc
lods
dec
jae,pt
jecxz
push
out
gs
jl
adc
add
cmpsl
leave
mov
cmc
sbb
aas
insb
imul
jle
jmp
popa
push
ljmp
mov
rolb
and
inc
inc
mov
mov
sub
or
loope
dec
aaa
add
or
add
or
loop
fmulp
sub
cld
jo
dec
pop
scas
test
mov
mov
movsb
ss
push
popa
add
jbe
xor
dec
adc
enter
daa
out
movsb
and
jno
mov
jl
add
dec
fdivl
mov
mov
cli
push
movsl
int3
and
jns
xchg
add
sbb
ret
or
out
loope
push
sub
mov
push
sbb
ficoml
stc
sbb
enter
mov
xor
ret
ss
cmpsb
jg
sub
lds
lcall
xor
push
bound
repnz
pop
adc
jl
xchg
leave
xor
cmp
mov
jb
and
and
push
push
mov
dec
fsubr
push
insl
lret
aaa
rcll
mov
adc
and
jecxz
aam
gs
push
mov
outsl
mov
stc
xor
adc
pop
insb
cmp
movsl
pop
shl
int
add
jns
shll
mov
out
or
insl
push
into
js
push
cmc
in
and
pop
outsb
mov
xchg
dec
push
adc
adc
add
popf
lods
fbstp
cmp
cmp
xlat
dec
inc
sub
movsl
andb
imul
adc
gs
inc
sahf
nop
adc
xor
das
fsts
aaa
loop
mov
mov
xchg
enter
adc
call
push
loope
pop
dec
and
mov
jmp
cmp
cs
and
aad
stos
mov
aas
cmp
push
dec
idivl
jecxz
jns
out
push
adc
imul
cmp
xchg
cmp
mov
mov
pop
sbb
mov
subl
imul
and
inc
sahf
rorl
sahf
fdiv
mov
sbb
popa
dec
inc
sub
inc
mov
ror
sbb
lret
xchg
and
xchg
mov
dec
mov
push
insl
pusha
rorb
jo
sub
and
ret
shlb
xchg
in
xchg
insl
stc
pop
xchg
clc
scas
xchg
jg
dec
ljmp
jno
mov
dec
xchg
mov
lods
les
adc
add
jns
cltd
jg
lods
test
mov
pop
fnstsw
pop
test
sbb
mov
pop
inc
lds
jmp
pop
movsb
xchg
inc
js
or
inc
xor
outsb
enter
pop
xor
inc
lods
mov
bswap
mov
pop
mov
sbb
cwtl
jp
sbb
or
adc
add
mov
cs
std
push
scas
bound
inc
std
jns
cmp
xchg
mov
xor
mov
and
addr16
fcoml
xchg
jmp
sub
mov
dec
adc
jne
lret
insl
pusha
jne
jno
std
mov
xchg
mov
push
fsts
add
sub
or
lock
out
fstp
stos
shlb
insb
mov
push
mov
in
pop
xchg
adc
add
ret
rcrl
lods
pop
inc
mov
cmp
popf
mov
and
pop
fisubl
mov
sbb
popa
dec
imul
mov
push
xor
shlb
xor
and
push
cmp
arpl
fimuls
inc
jo
cmp
pushf
test
aaa
mov
lahf
dec
add
and
es
fisubrs
mov
ja
arpl
jnp
scas
adc
stc
gs
jmp
movsb
sar
push
mov
dec
jbe
push
sahf
jge
loopne
enter
daa
in
dec
in
sbb
jno
imul
and
dec
cld
mov
xor
cmp
mov
push
js
jg
sub
inc
adc
inc
xlat
xor
cmpsb
pop
or
stos
js
push
test
lahf
ja
push
dec
lret
test
jno
xor
les
mov
inc
movsl
xor
test
pop
jp
cmp
jg
out
pop
mov
sbb
add
adc
jp
popf
pop
int
lock
or
aad
cmpsb
lcall
cli
fcoml
pop
and
imul
adcb
insl
mov
xchg
loope
mov
jbe
inc
cmpsb
cli
and
outsl
jmp
adc
cmpsb
fsubrs
mov
nop
shr
push
mov
int3
insl
sbb
rcrb
xor
jns
outsl
insl
cmpb
xor
jmp
mov
adc
in
sbb
jnp
mov
dec
out
lods
cmpsl
mov
cmp
cmp
or
fdiv
mov
cwtl
loopne
jne
pop
jmp
cmp
adc
jb
add
adc
cwtd
rorb
pop
push
cmp
addr16
jp
out
arpl
pop
in
outsl
pop
sti
jg
or
xor
nop
mov
insl
dec
mov
nop
inc
aam
test
dec
dec
mov
repz
test
dec
sbb
inc
into
fcmovb
aam
outsb
pop
sti
sbb
push
add
pushf
loopne
gs
dec
add
addl
dec
mov
dec
pop
push
dec
outsb
aad
je
shrb
icebp
push
hlt
lea
adc
xor
subl
add
mov
out
inc
mov
fnstenv
mov
aaa
add
and
or
rcll
jns
lret
rorl
std
ret
pop
xchg
lods
add
sbb
cld
cld
cmp
leave
sahf
mov
mov
sub
pop
xor
fisttpll
aam
pop
add
imul
mov
clc
sbb
fists
mov
jecxz
or
int3
lods
sub
cs
mov
jae
dec
ljmp
stc
xorb
mov
out
test
je
push
fcompl
fsubrl
adc
pop
sbb
adc
rorl
add
out
mov
stc
mov
and
adc
inc
inc
pushf
or
xor
lahf
dec
mov
adc
dec
lds
pop
mov
push
dec
or
out
rorl
sbb
push
dec
mov
add
adc
out
fsubrl
call
jns
scas
jg
mov
bound
lea
sbb
addr16
and
jp
std
fnsave
call
sub
jne
ljmp
sbb
cmp
jbe
push
jmp
cld
shlb
mull
out
sub
sub
inc
hlt
arpl
jbe
stos
xor
mov
out
insb
and
sub
jle
jns
in
cltd
dec
adc
clc
iret
pusha
jmp
ret
icebp
pop
adc
jae
bound
insl
adc
out
push
xchg
aam
ficoml
xchg
add
imul
xor
js
mov
mov
js
lret
cmp
movsl
arpl
pushf
es
jae
leave
or
push
sub
lods
or
clc
add
cmp
int3
sbb
pop
push
stos
adc
adc
and
sub
enter
xchg
dec
imul
in
out
add
enter
daa
in
jb
cmp
dec
jp
rcll
jne
mov
dec
out
xor
xlat
sti
add
dec
test
test
wrmsr
repz
data16
cmpsb
in
shr
push
js
mov
nop
push
jns
loope
and
cmp
sbb
movsl
aaa
loopne
sarb
pop
inc
cwtl
or
sbb
pop
add
lea
cmp
jns
sub
push
daa
lcall
fadd
cmc
insb
sub
aas
xchg
cli
ficoms
mov
sub
lods
sbb
daa
sub
nop
sub
sahf
push
adc
pusha
int
js
fsubs
lock
and
jg
jmp
sbb
jne
test
add
shll
pop
sub
or
push
stc
mov
cld
mov
xor
icebp
ss
push
movsl
cmp
fwait
and
out
pop
sar
filds
xorl
pop
push
or
lahf
push
into
ds
leave
cmc
jp
add
fnsave
pop
lods
sbb
and
lock
add
mulb
lods
xor
cmp
xlat
int
arpl
in
sub
jp
ljmp
mov
jb
pop
mov
mov
adc
add
ret
mov
enter
lods
push
xchg
dec
push
adc
call
push
xchg
pop
scas
nop
mov
scas
or
pushf
mov
js
arpl
aad
inc
dec
inc
pop
or
out
mov
mov
jecxz
cmc
inc
hlt
sbb
repnz
cwtl
cwtl
mov
pop
mov
push
mov
addl
xlat
sub
in
mov
lock
test
in
stos
mov
out
das
jp
xchg
and
shll
cmpsl
fwait
std
push
push
cmp
sarl
addb
jno
mov
push
push
pop
mov
xchg
ja
and
iret
pop
push
push
jno
mov
stos
sub
jo
sub
popf
dec
insl
adc
push
std
add
sub
insb
lods
xchg
or
mov
aas
arpl
sub
sub
enter
or
outsl
cltd
in
dec
jmp
stos
mov
clc
mov
lahf
and
fldl
pop
or
add
xchg
sarb
pop
xchg
sbb
stos
pop
sub
jg
xchg
lea
mov
xor
cs
xor
push
push
mov
adc
test
in
lods
jmp
dec
add
inc
lret
jnp
or
xchg
push
fwait
cwtl
add
add
imul
push
adc
call
xchg
pop
test
mov
popf
test
or
shrl
addr16
lock
mov
mov
adc
sub
mov
jne
insl
pop
pusha
stos
pop
aaa
fistpll
sbb
xchg
dec
push
shr
mov
jno
icebp
xor
out
sbb
sub
cmp
push
insl
xchg
push
and
mov
clc
jnp
std
outsb
jle
cmp
pushl
iret
mov
outsl
mov
sbb
into
mov
jae
mov
push
xor
popf
icebp
and
push
adc
pushf
fiaddl
fsubrl
pop
lahf
pusha
sbb
and
mov
push
outsl
push
mov
jbe
mov
lret
and
adc
sub
mov
dec
fimull
adc
aaa
cmp
add
loopne
add
xor
ljmp
adc
scas
rcll
jo
dec
inc
pop
movsb
xlat
cs
dec
mov
iret
jge
sub
enter
daa
jmp
jno
out
sub
dec
js
aam
dec
sub
mov
xor
jb
lcall
push
fs
test
fisubl
or
in
mov
out
pop
sbb
pop
cmpsb
loope
mov
mov
xchg
and
roll
movsl
ds
jl
adc
or
sbb
pop
xorb
insb
mov
pop
sbb
jmp
aas
cwtl
cmp
shll
push
bswap
pop
fsubrl
mov
mov
add
xor
add
mov
mov
sbb
rcr
push
pop
repnz
int
rcr
fsubs
dec
and
or
aam
jns
sbb
push
lock
loopne
call
sahf
mov
xchg
xor
ds
lahf
mov
stc
push
lods
mov
adc
orl
xchg
data16
lret
cli
adc
cltd
xor
xchg
cmp
push
dec
or
or
sbb
inc
adc
loopne
mov
lret
push
xchg
adc
jnp
imul
xchg
lods
xchg
out
cmp
rolb
mov
inc
add
cltd
jns
repnz
adc
dec
outsl
stos
mov
out
fnstenv
xor
xchg
adc
sbb
cmp
mov
pop
popa
push
fsts
add
aad
jmp
mov
cs
iret
xchg
aad
mov
add
pop
mov
out
dec
pop
in
clc
je
pop
int
jb
fs
notl
lea
outsb
cwtl
outsl
ds
mov
and
push
outsl
aaa
sbbl
sub
push
out
inc
leave
das
mov
popl
sbb
mov
sbb
mov
test
adc
loope
ljmp
icebp
push
xchg
push
cld
xchg
inc
jnp
loopne
dec
mov
mov
mov
mov
dec
cmpsl
rolb
insl
dec
aam
clc
loopne
mov
and
insl
scas
rorb
jne
xchg
cmp
fwait
ljmp
shrl
jbe
fildl
ret
push
add
cmp
daa
or
cltd
and
je
loope
push
bound
dec
int3
mov
xchg
in
sbb
xchg
sarl
lods
inc
pop
inc
add
stos
mov
loop
jle
jno
aam
xor
fiadds
pop
xor
xchg
or
cmp
push
jo
push
mov
xchg
sub
pop
negb
dec
repz
pop
inc
bound
stc
fwait
popf
mov
sub
paddw
lcall
jns
std
out
lahf
loopne
xchg
test
add
or
andl
cmc
jp
sbb
mov
xor
mov
jns
and
cld
aaa
fistps
jp
sbb
and
mov
dec
xchg
xchg
int3
sbb
out
jg
sub
mov
xor
and
push
hlt
jnp
xchg
out
mov
add
arpl
addr16
ljmp
iret
push
in
xchg
ret
enter
inc
inc
flds
push
repz
sbb
xchg
inc
xchg
adc
mov
fildll
imul
pop
push
push
clc
adc
adcl
mov
xchg
clc
mov
jae
fbld
in
inc
jns
lcall
cmp
or
jb
push
in
mov
adc
push
aas
pop
lds
loopne
mov
andb
push
cmp
gs
movsb
bound
push
popf
mov
jbe
jge
jge
movsb
fwait
enter
daa
ljmp
jno
outsb
lods
jl
insl
or
out
push
sub
jg
ja
in
and
stos
inc
push
icebp
push
xchg
test
movsl
add
sarb
cmpsb
loope
mov
js
test
insb
push
hlt
push
loope
jnp
sub
pop
dec
cmp
push
ds
xor
inc
cmp
push
or
mov
rorb
scas
out
ret
cmp
inc
sub
testb
inc
cmp
sub
push
cli
sub
stc
cmpsl
adc
call
mov
ljmp
cmp
and
jmp
lret
int
setp
fcmovnb
inc
test
stos
test
mov
notl
sahf
pusha
loop
test
jno
xor
mov
or
xchg
loop
pop
inc
stc
push
notl
xorl
pop
cwtl
cmp
xchg
cmp
out
stc
jb
inc
iret
sbb
sbb
sbb
aam
insl
into
add
pushf
cmc
or
sbb
ljmp
imul
cmc
data16
adc
xlat
dec
mov
sub
jle
mov
mov
stos
sti
mov
xor
pushf
gs
gs
mov
into
and
inc
test
in
pop
mov
stos
xor
andl
call
push
push
fwait
pop
adc
cli
adc
pushf
loope
dec
jmp
adc
aad
insl
inc
dec
cmpl
ja
jb
out
dec
shr
lods
je
mov
jle
cli
dec
rcr
cwtl
sub
mov
jne
mov
or
xor
rorb
mov
dec
je
pop
test
jae
lock
mov
pop
jae
and
push
dec
roll
notb
das
dec
xor
and
icebp
cs
lods
cld
mov
pop
pop
mov
xchg
dec
mov
xchg
dec
out
pop
pop
movaps
out
ret
dec
icebp
test
mov
push
inc
clc
leave
sbb
ljmp
cmp
imul
sbb
test
and
fdivp
decb
xchg
cmc
add
sub
ror
mov
jle
push
and
jne
test
aam
xchg
mov
xchg
xchg
pop
in
mov
xchg
out
loope
stos
xchg
sbb
scas
add
idiv
jge
inc
xor
pop
sysenter
dec
scas
push
mov
sbb
dec
cli
and
pop
mov
dec
mov
inc
stc
add
fwait
idiv
push
add
and
mov
jns
cltd
in
in
ja
xchg
clc
out
hlt
mov
fiaddl
and
or
jg
addr16
adc
jp
xor
jno
mov
or
mov
jbe
cld
jne
sahf
fs
loope
loope
jns
imul
pop
push
orl
shl
push
js
out
addl
jmp
sub
xor
rep
push
cli
jnp
in
pop
jle
cwtl
movsb
in
test
adc
jb
ret
ficomps
sbb
jae
mov
cld
popf
aas
add
jbe
push
inc
adc
fisubrl
js
pop
inc
jmp
aaa
xor
subl
push
dec
out
xchg
rcrb
bnd
ret
leave
push
int3
pop
hlt
mov
outsl
cli
inc
jl
cmp
mov
or
cmp
fildl
fdivrp
cmpsb
sub
xchg
jo
cld
test
and
sub
push
in
or
jbe
jb
jge
add
enter
daa
jmp
outsb
jno
mov
jl
fsincos
dec
pop
mov
shlb
test
fstps
les
test
jo
jnp
adc
mov
in
mov
cld
js
dec
pop
fwait
je
push
inc
dec
loope
pop
pop
sub
clc
mov
ds
sbb
movsl
dec
jp
ror
test
cmpb
adc
testl
mov
pop
imul
mov
lcall
movsl
fadd
in
push
popf
xor
adc
adc
add
adc
mov
and
add
int
xor
fcoms
jp
lret
add
inc
fwait
and
sbb
stc
push
add
pop
test
bswap
outsl
jmp
popa
mov
fs
and
cmp
daa
xor
mov
or
js
cmp
lock
or
lds
inc
sub
into
out
loope
iret
test
cmp
or
in
adc
test
imul
or
movsw
dec
lds
push
fsubl
xlat
mov
jns
inc
mov
mov
sbb
aaa
sti
cmp
shll
inc
nop
and
dec
sub
int3
js
and
xchg
jmp
push
sub
rorl
xchg
sarb
pop
negl
mov
pushf
pushf
mov
jmp
mov
lahf
inc
stos
push
mov
jb
jle
dec
dec
xchg
es
cmp
nop
lods
cmp
lea
jne
cwtl
in
std
mov
dec
cs
pop
ss
aas
cwtl
fstpt
into
pop
dec
mov
inc
xlat
sbb
adcl
mov
xor
rcll
fdiv
std
pop
dec
lock
sub
cmpsl
call
insl
loopne
add
push
or
mov
fstl
mov
sub
pop
mov
push
shrb
mov
add
fisubl
jbe
jl
mov
add
notb
orb
popa
gs
jae
movl
and
mov
sbb
add
or
int3
in
inc
mov
pop
test
call
add
jb
outsb
xchg
jo
sbb
ds
shr
xchg
xchg
inc
xchg
inc
fldcw
xchg
stc
lcall
mov
nop
pushf
stc
or
xorb
lods
mov
push
mov
dec
popa
aaa
sbb
or
ja
inc
inc
dec
fldenv
inc
nop
cld
into
or
stc
sbb
aad
testb
sbb
out
pop
mov
mov
in
popa
xchg
inc
clc
xor
sub
repz
mov
addr16
insb
and
xchg
add
mov
aad
mov
jp
mov
pop
mov
or
jne
fistps
adc
jmp
sub
cmp
out
fisubrl
xor
shrb
dec
or
jnp
or
jle
xor
cmc
adc
cld
cmp
test
push
ret
inc
out
sbb
jae
xchg
add
jns
insl
popf
dec
push
push
nop
pop
mov
and
xchg
pop
int3
xchg
sbb
jne
imul
scas
cmp
dec
xchg
shlb
adc
les
jg
or
loop
sbb
call
sbb
inc
aaa
jp
stos
or
arpl
add
out
dec
pop
adc
popf
add
sbb
jo
mov
scas
jo
ljmp
xchg
mov
push
cmp
pop
jge
inc
mov
daa
call
ret
icebp
and
jg
dec
dec
jbe
mov
xor
inc
mov
lahf
shrb
cld
xlat
mov
cmp
cs
mov
dec
ret
cmp
mov
mov
popf
loope
gs
cmp
repz
cmpsb
mov
sub
sbb
and
adc
dec
test
daa
pop
nop
push
lret
sahf
xchg
pop
push
add
stc
push
adc
loop
insb
call
movsb
outsb
jbe
cmp
push
and
jg
mov
adc
mov
jecxz
push
and
in
xchg
ss
push
imul
lret
push
rcr
inc
mov
adcb
cmpsb
pop
test
stos
cmpsb
inc
outsl
enter
pop
fwait
cwtl
stc
jl
es
adcb
push
clc
ss
les
xchg
cli
stos
insl
and
aam
cmp
cmp
mov
sub
lret
cmc
xchg
mov
loopne
inc
mov
push
adc
xor
xor
data16
dec
popa
adc
push
jmp
xlat
leave
add
sub
xchg
imul
xchg
mov
gs
inc
nop
std
sub
dec
mov
inc
xor
hlt
xchg
loope
mov
xor
call
dec
and
pop
jp
outsl
adc
sahf
add
push
mov
aad
sbb
push
aas
hlt
cld
cmpsl
jb
dec
dec
dec
rcr
je
and
xchg
movb
xor
mov
mov
mov
cmpsl
or
out
pop
ret
andl
mov
test
dec
pop
out
mov
lock
add
mov
lret
and
rcrb
negb
jl
std
push
std
das
dec
shll
out
sarb
cmpsl
ljmp
xchg
mov
pop
and
nop
pop
rorb
rolb
sete
js
stos
aam
rcll
sahf
xor
test
and
ret
xchg
cs
pusha
lods
inc
rolb
mov
xlat
clc
dec
push
xchg
pop
jno
inc
daa
sbb
cltd
leave
xor
test
popa
jle
xor
iret
push
stos
mov
frstor
stos
movsl
xchg
lret
or
aas
stos
mov
stos
adcl
out
cmpsl
xor
xchg
test
adc
mov
je
or
pop
sub
xchg
mov
cwtl
pop
das
out
and
dec
int3
rcl
inc
daa
sbb
or
ret
mov
push
or
movl
aaa
lods
ret
bound
mov
cwtl
xchg
xchg
inc
lods
mov
out
mov
add
dec
pusha
jp
test
mov
pop
out
mov
jmp
mov
jne
pusha
push
pusha
pop
push
lock
adc
jmp
repz
or
sub
bound
mov
ljmp
jb
xor
bound
insb
cmp
jecxz
inc
in
add
in
cmpsb
rclb
ud1
cmp
dec
pop
ja
dec
inc
cli
jecxz
jae
enter
aaa
jp
lea
push
bswap
mov
xchg
mov
push
sbb
imul
scas
mov
or
shlb
mov
pop
cmp
cld
pop
hlt
push
sti
xchg
dec
filds
enter
test
sbb
pop
bound
cmp
push
or
inc
jb
sub
cs
inc
push
test
inc
push
rol
mov
xor
cltd
and
mov
adcb
bnd
mov
and
and
out
cli
cmp
mov
jl
sub
rorl
adc
int3
add
and
push
lahf
fbstp
add
pop
xchg
test
push
lods
lret
aam
cmpsb
push
xchg
in
push
mov
js
addr16
pop
sbb
xor
xchg
xchg
dec
rcr
ds
roll
sub
addl
jecxz
popa
div
sbb
out
add
xor
sub
or
jecxz
mov
fisubrs
sub
adc
lcall
push
fcoml
mov
sub
cld
outsb
fstps
jns
cmp
pop
jg
sub
mov
xor
mov
jg
pop
mov
jmp
and
leave
int
pop
cltd
fmuls
sub
or
lret
enter
dec
mov
mov
dec
sub
test
push
bound
in
loop
or
stc
xor
scas
adc
mov
cmp
xorb
out
inc
cmp
dec
add
sahf
outsb
dec
cmp
sbbl
add
adc
pop
iret
out
in
rcrb
sti
adc
mov
xchg
inc
call
mov
add
lret
stos
int
lods
xor
push
sub
cmp
icebp
inc
aaa
sti
cltd
data16
add
inc
clc
nop
fdivr
clc
dec
jmp
xchg
inc
inc
subb
xor
incl
fdiv
outsl
mov
or
sub
into
push
aaa
pop
sub
pop
sti
pushf
loop
inc
jmp
mov
mov
inc
loopne
or
xchg
lds
dec
cmp
and
shl
scas
shrl
add
xchg
cwtl
pop
sbb
jge
loop
inc
cmp
mov
test
push
clc
inc
in
sti
iret
cs
aas
repnz
andl
movsl
negb
data16
lods
xchg
pop
dec
and
mov
out
pop
mov
mov
scas
cld
aas
inc
push
mov
lret
das
orb
out
pop
cmp
shll
aam
stos
retw
clc
fiaddl
dec
fs
jp
icebp
xchg
cmp
push
popa
xchg
adc
lods
lods
push
mov
out
inc
cmp
push
outsl
scas
jle
mov
std
mov
test
sub
push
outsb
jbe
enter
cmc
pop
xchg
or
sbb
or
rcll
in
sub
or
add
cmp
std
xor
sbbl
mov
and
push
pop
ljmp
dec
mov
pop
inc
or
popa
lea
sbb
xor
push
lahf
jno
xor
dec
test
lret
xor
pop
mov
sbb
ja
inc
or
xlat
cmpsl
addr16
test
jp
mov
cld
mov
pop
rorb
movsl
movsl
jne
xlat
enter
mov
jecxz
xchg
push
xchg
mov
dec
push
out
xchg
jnp
movsb
jg
mov
test
insl
stos
in
shll
jns
xor
daa
jnp
xchg
sbb
dec
cmp
jg
jns
inc
out
iret
lcall
pop
scas
in
inc
add
inc
mov
popf
mov
pop
push
mov
add
cmp
imul
scas
add
push
and
push
mov
push
mov
jae
sti
hlt
lahf
gs
arpl
movsl
aad
test
jo
mov
out
or
rcrl
int3
pushf
inc
pop
pop
outsl
fs
lds
adc
scas
lods
fisubl
cmp
pusha
movsb
mov
rcll
nop
jbe
or
jge
ja
enter
daa
out
lods
cmp
lds
imul
push
flds
xor
jns
sahf
lahf
mov
add
ljmp
inc
shlb
in
cmp
jp
pop
pop
fmull
mov
fildll
cmp
test
outsl
movsl
popa
cwtl
mov
rolb
xorb
pushf
dec
roll
dec
xorb
jp
iret
test
fmulp
data16
and
lcall
imul
push
in
outsb
cmp
adc
push
jnp
jg
mov
mov
pop
push
mov
jg
mov
cmp
out
es
movsl
fadd
pop
out
test
push
rorl
mov
ja
stos
sbb
sub
test
add
xor
fsubrs
fxch
loop
stos
nop
stc
ljmp
adc
and
mov
sbb
cli
adc
adc
jne
das
cmp
mov
add
cmc
and
mov
jg
test
stos
jge
push
repz
imul
int
cs
pop
shll
mov
xlat
sub
mov
or
dec
outsb
lcall
mov
nop
mov
aaa
dec
dec
push
into
fxch
shlb
cmp
xchg
loopne
pop
sbb
movsb
jne
dec
add
adc
pushf
lea
jmp
sub
aad
add
ret
mov
xor
mov
scas
pop
xchg
mov
movb
cld
lea
cwtl
push
xchg
mov
call
call
dec
xchg
mov
pop
pop
xor
imul
mov
cmp
dec
roll
push
test
push
adc
dec
sbb
inc
cmpsl
in
and
mov
and
push
pop
lret
or
fimull
testb
movb
push
data16
shlb
xorl
xchg
es
nop
cmp
xchg
mov
xor
pop
lods
pop
stos
cwtl
mov
adc
mov
dec
push
add
add
add
ljmp
inc
pop
mov
cltd
les
mov
add
xchg
add
shr
pop
inc
pop
cwtl
cli
inc
stos
popa
or
out
insl
dec
xchg
aaa
dec
insl
add
jge
stc
sbb
xor
lods
jno
xor
pop
pusha
mov
daa
loopne
dec
xchg
leave
dec
pop
movsl
js
ja
inc
mov
mov
ds
push
rcrl
rcrb
mov
inc
push
mov
add
mov
enter
je
in
sbb
xchg
xor
es
ret
into
mov
sti
shll
mov
jp
test
mov
fcoms
mov
dec
rorb
xchg
pusha
dec
inc
jecxz
cmc
mov
xchg
cmp
mov
push
call
sub
in
fs
out
ds
pop
inc
and
mov
mov
lds
xchg
adc
shll
ret
pop
pop
in
adc
push
jae
mov
popf
push
or
sbb
xchg
arpl
xchg
imul
or
mov
rorb
pop
mov
mov
xorl
arpl
mov
or
je
xchg
aaa
mov
ss
push
xchg
pop
cmp
pop
sahf
xchg
fiadds
cwtl
xor
mov
popf
and
int3
cmp
ficoms
or
jbe
iret
pop
jge
data16
sbb
daa
in
stc
cmp
out
push
jbe
sub
dec
ret
mov
adc
adc
dec
lahf
sbb
pop
test
pushf
sub
dec
aad
cmpsb
jo
in
and
sub
pop
xchg
mov
push
jbe
loope
push
sbb
inc
mov
mov
push
shlb
sarl
xor
addb
enter
int
mov
clc
adc
je
sub
fld
pop
int
inc
lcall
xchg
fsubrl
repz
push
adc
outsl
inc
in
jg
inc
lods
mov
mov
mov
aas
mov
adc
and
or
sub
push
fadds
jns
lret
out
shll
cmc
sbb
lods
mov
test
in
outsl
sarl
mov
or
adc
xor
fdivrl
js
cmp
les
mov
inc
and
dec
push
aad
sub
xchg
into
jae
fs
jmp
cmc
loopne
stos
mov
cli
cmp
and
jecxz
adc
xor
add
sbb
lods
fmulp
cmp
xchg
inc
xlat
xchg
lahf
sub
mov
in
sti
idivl
in
dec
popf
jecxz
mov
inc
nop
mov
xor
add
flds
hlt
push
les
cmp
sbb
pop
add
int3
cmp
adc
inc
pop
pushf
cmp
jmp
pop
push
cs
out
mov
jnp
shll
jb
jecxz
dec
es
insl
je
loop
jecxz
add
pop
ret
jbe
roll
mov
pushf
loopne
es
lods
les
lock
mov
mov
out
push
pop
and
add
aad
jecxz
test
sti
jb
dec
pop
je
cmpsl
in
mov
mov
xor
popa
cld
scas
cld
xchg
mov
cmp
mov
cwtl
ss
sub
pushf
loopne
pop
or
mov
push
and
es
or
mov
lock
xchg
mov
push
ljmp
sbb
adc
mov
xor
add
in
pop
mov
punpcklwd
add
fidivrl
mov
pop
push
fstpl
pop
test
or
mov
mov
in
sbbl
movsl
out
sar
fsts
std
sarl
xor
xor
dec
xor
pop
jae
jo
cwtl
xchg
sub
pop
pusha
sbb
out
jo
movsl
pop
or
dec
decb
sbb
fwait
loope
das
push
popa
ja
add
call
mov
bound
cmp
in
push
cmpsl
xchg
add
mov
mov
testb
inc
hlt
in
pop
inc
cmpxchg
sbb
test
jne
lock
pusha
call
test
jmp
push
iret
leave
sbb
cmp
repnz
subb
outsb
or
es
dec
mov
insb
jge
mov
jle
xor
in
xchg
jb
cld
rcrb
ret
ja
sbb
xor
jae
add
mov
int3
push
mov
and
xchg
mov
aam
imul
scas
leave
mov
mov
mov
imul
mov
arpl
inc
mov
or
das
cmp
or
cvtdq2ps
repnz
pop
int
fisubrs
stc
int
orb
in
popf
shlb
pusha
lret
dec
mov
mov
mov
jbe
or
jge
cmp
enter
daa
in
into
cmp
into
jno
aas
jl
lret
push
push
jle
push
xor
scas
test
lahf
cmp
push
push
jecxz
sahf
test
addr16
inc
fidivrs
data16
repz
in
or
add
mov
pop
or
mov
loope
jmp
mov
ds
jecxz
movsl
outsl
mov
fimuls
lcall
add
sub
lahf
push
loopne
pop
sub
xchg
sub
rcrb
inc
inc
fcompl
sbb
outsb
add
mov
and
xlat
orb
nop
mov
inc
gs
mov
sub
js
dec
push
sub
pop
int
xor
fdivrs
ret
push
lret
cld
shll
push
mov
cmp
stc
inc
int
xor
test
and
xor
int3
test
int
loop
mov
cmpsl
lock
ss
lret
cmp
jae
add
ret
cmp
ja
insl
xor
adc
cmp
push
xor
into
push
ret
push
cmc
mov
adc
mov
jle
movsb
dec
sub
clc
sub
imul
mov
data16
xor
cmp
aad
sub
cmp
ret
sti
cmpsb
leave
push
outsb
test
gs
inc
mov
imul
sub
jg
dec
fnstenv
lret
xchg
les
pop
pop
repz
xchg
data16
or
call
dec
notb
adc
mov
jmp
dec
pop
jnp,pn
jmp
inc
xor
xchg
aas
jo
sbb
jg
dec
popf
push
je
push
pop
jecxz
test
or
mov
cwtl
mov
sahf
mov
cmp
cmpl
test
addr16
jp
jno
or
popa
das
shlb
cmpsb
popf
fisubl
mov
pushf
mulb
xchg
sub
mov
daa
mov
mov
cmp
into
cld
sarb
mov
and
cld
std
lret
pop
dec
mov
sub
aam
fs
es
leave
insl
js
clc
sub
lods
xchg
cmc
call
or
and
mov
push
aam
and
add
aaa
xadd
cltd
movsl
pop
cmp
mov
mov
xlat
fnstsw
and
test
dec
dec
xchg
push
movsl
rcrl
jnp
aas
adc
out
xor
sahf
xchg
lds
add
cmp
aaa
inc
divl
das
or
stos
insb
mov
sub
hlt
xchg
pop
sbb
ja
inc
cmp
or
xor
add
sub
inc
pop
mov
mov
pop
out
xor
in
loop
xchg
shlb
loope
pop
jo
mov
icebp
bound
inc
loopne
jp
lcall
imul
movsl
andb
es
jne
xchg
push
pusha
addl
xchg
loope
xor
jno
jle
pop
dec
insb
subl
out
call
mov
adc
add
stos
fildll
mov
sahf
insb
jnp
sbb
in
push
xchg
adc
out
iret
mov
dec
ret
mov
je
inc
es
es
inc
mov
popf
sub
push
or
notb
cmp
sbb
repnz
imul
xchg
sarb
clc
mov
arpl
sub
fdivs
hlt
sbbb
mov
or
ljmp
or
add
int3
pop
jb
pop
cld
push
xchg
fmulp
sbb
mov
xchg
scas
lret
pushf
imul
add
movsb
das
sbb
movsb
push
jbe
mov
jge
out
stos
enter
daa
jecxz
sbb
jno
pusha
lds
sub
push
popa
ja
xor
dec
cwtl
loopne
pop
js
push
mov
sub
xor
or
insl
out
cmpsb
jbe
push
in
repnz
lcall
enter
movsb
xchg
add
jmp
movsl
jbe
inc
shr
out
icebp
out
xchg
cmp
inc
fsubs
xor
cmp
sbb
pop
push
jbe
sub
in
pop
lret
xor
push
movl
popf
sub
scas
mov
adc
movsl
adc
push
mov
add
pop
mov
mov
and
sbb
int
lods
adc
clc
and
testl
repnz
imul
out
test
sbb
loop
mov
xor
rclb
ljmp
rcl
mov
sub
ret
cli
stos
sbb
cli
cmp
or
ljmp
jns
jl
push
call
ret
cmpsb
xor
lret
adc
imul
inc
add
cmp
lods
int3
cmpsb
fstpt
js
inc
xlat
add
into
sub
int
mov
popf
enter
sbb
ss
mov
sbb
addr16
int
outsb
inc
movsb
les
sbb
rep
ret
addr16
sub
sbb
adc
xor
pop
stc
sarl
mov
sbb
xchg
push
lea
fidivs
enter
inc
inc
dec
sub
shll
aas
dec
adc
xchg
js
ljmp
lea
cmp
mov
sub
adcl
fistl
add
inc
add
lock
das
mov
out
mov
jne
adc
insl
mov
imulb
lret
std
dec
loopne
dec
or
cmovge
ljmp
jns
mov
test
xchg
ja
pop
imul
sub
daa
aam
lahf
icebp
ret
xor
repnz
xchg
clc
popw
inc
xchg
xor
out
ljmp
lods
pop
test
add
jp
cmpsl
and
fcmovnb
inc
nopl
pop
cltd
fdivrl
test
xchg
sbb
jp
fcmovnu
add
push
jecxz
xchg
jno
sbb
pop
and
bnd
pop
cltd
sbb
stos
cs
int3
xchg
or
xor
xor
arpl
cmpb
xor
push
cld
mov
xor
orb
inc
pop
sbb
ja
jmp
ret
inc
sbb
mov
and
aas
pop
mov
cmpsl
xor
jecxz
mov
or
out
xchg
mov
bound
rorb
xchg
and
scas
mov
je
mov
in
push
add
jp
mov
hlt
mov
adc
iret
dec
stos
in
jne
lcall
push
xor
xchg
mov
repz
ljmp
out
jmp
sub
xchg
push
sub
stc
stos
mov
test
aad
pop
insb
push
idivl
shlb
jle
call
popa
adc
popl
pop
mov
inc
xor
xchg
push
or
fsubrl
enter
movsl
add
push
aaa
iret
xchg
push
jnp
imul
pop
scas
mov
rcrb
mov
mov
add
dec
test
hlt
lret
push
movsb
arpl
push
inc
xchg
sbb
or
movsl
xchg
aaa
hlt
xchg
orl
and
int3
dec
aad
pop
sub
std
lds
jo
mov
push
and
cmp
mov
xlat
add
xlat
sub
mov
enter
daa
loop
aad
mov
xchg
jno
movsb
push
cmp
mov
inc
mov
xor
in
sub
mov
jns
adc
inc
cld
aam
cmpsb
stc
dec
in
fldenv
add
cmpsb
pop
push
dec
mov
outsb
add
sub
ret
mov
adc
movsl
jge
insl
ror
fwait
gs
dec
mov
sub
js
insl
add
pop
inc
xor
dec
mov
pop
jp
fisubrl
xchg
inc
push
pop
dec
xchg
adc
push
lock
outsb
sub
sub
cmp
enter
mov
push
add
jne
es
xchg
mov
mov
mov
xorb
xor
push
xor
inc
int
or
mov
mov
lret
add
gs
pushf
mov
xchg
push
mov
xchg
test
movsb
xor
lret
outsl
add
jecxz
lret
stc
pop
andl
adc
pop
ss
popa
movsl
cmp
imul
xor
mov
or
into
sbb
mov
loopne
cld
pop
loop
dec
adc
sahf
in
adc
and
inc
xor
cmp
push
lods
mov
jnp
mov
mov
sub
adc
or
sti
add
outsb
mov
pop
gs
insb
nop
pop
sub
loope
inc
movsl
push
or
movsl
gs
les
xor
repz
gs
in
icebp
dec
sbb
nop
pop
inc
dec
not
pop
lods
adc
xchg
pushf
cmp
shr
addl
pop
inc
addr16
aas
scas
in
mov
loopne
xchg
dec
mov
cltd
je
xchg
lods
jecxz
push
dec
adc
gs
add
sub
rcrl
lahf
sub
divb
pop
rcll
lock
das
lcall
mov
add
lahf
sarl
xchg
std
lock
xchg
dec
or
cmpsl
loope
xor
dec
aad
out
je
push
sub
mov
xor
mov
mov
mov
sub
xchg
aam
sub
xchg
mov
cli
mov
xchg
jae
ljmp
lods
ret
push
in
mov
popf
clc
inc
and
mov
mov
jle
aad
lret
cltd
adc
test
and
cmp
into
out
test
adc
mov
rorl
arpl
xchg
stos
sbb
pop
xchg
xchg
push
ljmp
jne
xchg
xor
lret
mov
fnsave
dec
shlb
xor
fimuls
scas
out
xchg
jnp
ja
jge
dec
jle
cmovno
loop
fwait
outsb
cwtl
das
push
dec
jnp
add
stc
and
icebp
bound
mov
cmp
xchg
jo
pop
mov
in
mov
or
dec
popf
addr16
inc
sarl
pop
jbe
cmp
xchg
mov
or
dec
mov
test
adc
jno
adc
xchg
jmp
mov
out
xchg
out
arpl
daa
repz
mov
jecxz
sbb
and
das
and
stos
test
or
pop
dec
arpl
xor
lea
iret
jne
cmp
add
shll
jae
sahf
icebp
push
into
push
sbb
push
or
add
add
jbe
sbb
lea
imul
inc
scas
repnz
mov
push
mov
or
pop
leave
ja
hlt
push
cmpsl
arpl
and
or
pusha
mov
aaa
mov
jp
fwait
xor
int3
xor
pop
pop
mov
ficoms
xor
sub
mov
jge
sbb
andl
iret
jbe
insb
sbb
or
enter
daa
loope
out
in
push
jno
or
adc
push
daa
loope
xor
xorb
push
pop
out
test
enter
mov
mov
in
rorb
js
sbbl
loope
cwtl
loope
xchg
cmp
jb
das
lcall
mov
filds
sbb
jae
xor
sub
sahf
dec
lcall
aas
daa
pop
leave
ja
lcall
rcr
xrelease
adc
and
adc
xor
mov
mov
movsl
and
insb
fmul
gs
clc
fsubrs
sub
cmpb
sar
pop
mov
xor
sbb
jl
test
inc
xor
daa
cli
aas
outsl
loope
sub
pop
fsubp
stc
jge
mov
and
cwtl
mov
ss
adc
cmp
movb
iret
pop
cli
adc
xor
sahf
or
ljmp
xchg
adc
out
pop
iret
sub
jo
add
mov
mov
lods
lcall
xlat
sbb
sub
lret
ja
sub
jae
loope
mov
hlt
xlat
icebp
mov
cmpsb
lret
cli
outsl
aaa
dec
and
jl
sub
les
shl
dec
pop
pop
xchg
scas
shl
sbb
or
pop
enter
pop
movsl
adc
sbb
in
mov
jo
sbb
movsb
push
loopne
test
cs
adc
aas
dec
int
jb
mov
dec
add
out
je
lret
stos
jecxz
sahf
hlt
adc
pop
pop
cwtl
mov
xchg
cmpsl
mov
fimull
ds
sbb
pop
fs
inc
packuswb
das
jns
cmpsb
mov
lret
pop
jle
mov
and
or
mov
dec
add
insb
mov
mov
mov
in
sbb
scas
mov
test
fisttpl
sub
popf
sub
ret
push
ficompl
push
jbe
mov
jae
fdiv
lahf
xchg
mov
xchg
sbb
inc
lods
cs
imul
clc
cmpsb
and
xchg
inc
mov
add
aam
dec
mov
test
cmp
add
lea
or
sbb
shll
movsl
or
or
fucomip
pop
fs
lcall
call
xorb
divps
add
or
mov
ss
out
pop
dec
outsb
and
xchg
orl
fstps
test
fwait
popf
fnstsw
add
push
push
lret
out
push
sahf
shll
movsb
jmp
pop
lock
or
rcr
mov
fadds
popa
dec
lods
or
and
addr16
mov
push
mov
repnz
jmp
sbb
fists
mov
pop
xchg
xorb
out
dec
shrl
mov
push
and
ljmp
or
sub
or
call
adc
xchg
iret
aam
retw
addr16
clc
icebp
inc
inc
xchg
in
jae
mov
push
xchg
outsb
mov
sahf
mov
push
mov
dec
fidivrl
pop
push
sbb
jae
imul
scas
scas
push
adc
push
int3
xor
rorb
sub
pop
js
leave
cmp
int3
arpl
lcall
sbb
sbb
jb
popf
or
mov
ds
mov
rol
push
adc
lret
icebp
test
lods
les
cmp
repnz
pop
cmpsl
jbe
jbe
jge
imul
add
pop
daa
loopne
inc
cmp
hlt
nop
jno
lcall
out
mov
mov
and
fbstp
lahf
mov
ficoms
mov
mov
inc
sbb
cmpsb
jmp
cmpsl
in
cmpsl
xchg
stos
js
or
rclb
cmp
sub
aaa
cmp
jle
push
adc
movsl
mov
sarb
sub
and
sbb
fiadds
fstpl
popa
pop
xor
daa
mov
mov
insl
pop
dec
loope
lcall
loopne
les
mov
mov
dec
adc
mulb
jg
push
xor
mov
sbb
cld
push
cmp
int
jno
fsubrs
pop
xor
ljmp
mov
mov
sbb
xor
test
xor
in
loop
mov
stc
xor
inc
fs
cs
add
cmp
pop
fs
out
or
xor
ret
mov
or
and
loop
aam
into
mov
jg
and
pop
adc
imul
add
inc
sarb
lods
addl
lods
sub
shll
pop
into
sti
bound
jl
lods
imul
test
jecxz
lret
faddl
dec
pop
inc
repz
sbbl
insb
rol
inc
or
adc
inc
pushf
mov
jmp
pop
cs
push
jns
out
xchg
xor
dec
inc
aas
in
mov
jb
hlt
adc
cmp
je
pop
and
pop
cs
sbb
xchg
push
or
xor
adc
jb
pop
pop
mov
xchg
xchg
rolb
das
pop
clc
push
mov
xorb
push
in
dec
rcrl
and
xor
insb
std
ds
dec
mov
out
mov
push
icebp
xchg
scas
xchg
cld
insb
ljmp
sti
nop
arpl
push
or
xor
aam
inc
insl
ret
loope
es
insl
fwait
or
clc
pop
enter
jge
ljmp
lods
cltd
sbb
mov
jecxz
add
insb
and
cmp
jle
lock
cltd
add
or
ret
mov
fstp
or
test
daa
les
pop
orl
pop
lcall
out
mov
adc
pushl
xchg
ja
int
cmp
adc
cmp
dec
add
lret
pop
pop
cmc
inc
ja
xor
mov
and
loop
fwait
int3
out
push
nop
in
pop
add
scas
xchg
xchg
out
das
lods
pop
bound
sbb
jns
cmc
shl
cwtl
fs
cmp
pop
movsb
or
mov
addr16
mov
cmp
mov
popa
and
dec
push
js
mov
lea
hlt
adc
xchg
sub
sub
xchg
dec
adcb
subl
lahf
push
popa
sbb
push
and
mov
jnp
mov
jle
mov
cmp
inc
incb
xor
xor
inc
push
cld
addr16
push
loop
push
std
popa
popf
push
pop
mov
lea
in
pop
imul
subb
adc
shrb
shl
scas
std
sti
leave
mov
mov
lods
jge
arpl
mov
sbb
dec
fwait
aaa
xor
or
inc
xchg
or
arpl
addr16
pop
pop
dec
vpaddsw
scas
inc
rcrb
add
ja
pop
icebp
xor
push
jnp
push
xrelease
mov
enter
daa
fbstp
cmp
jle
orb
add
xor
in
sbb
add
fbld
mov
dec
lahf
xlat
cld
mov
test
pop
adc
test
and
mov
push
js
sub
push
ficomps
sub
repnz
cmp
clc
movsl
jne,pt
pop
movsl
xchg
mov
rcrb
loope
imul
cmp
jno
sbb
fwait
rdpmc
xchg
mov
and
lock
out
sub
pop
into
repz
mov
outsl
cld
cmp
repz
outsb
icebp
sbb
adcb
and
clc
shll
xor
aas
and
outsb
enter
adc
xor
fsub
out
pop
testl
or
mov
push
insb
sbb
mov
sahf
popa
loope
test
dec
fnsave
fnstsw
lahf
hlt
mov
stc
jmp
pop
fs
push
adc
nop
mov
cmp
pop
xchg
adc
mov
test
xor
and
or
push
sbb
xchg
add
jp
aas
das
cmp
pop
mov
gs
pop
flds
in
mov
ret
jmp
cmc
cmp
xlat
add
sub
xchg
aam
movsl
cmp
in
dec
mov
sti
adc
sbb
insb
cltd
nop
mov
add
out
inc
fidivs
xchg
les
repz
in
xor
iret
mov
add
mov
pop
fsts
sbb
pushf
cmp
mov
cs
mov
ss
jb
mov
pushf
dec
lock
and
jecxz
add
sbb
lea
fwait
sbb
jp
jno
call
xor
pop
stos
repnz
and
lock
lahf
das
aaa
or
mov
cmp
shrl
popf
xlat
std
in
jmp
stc
push
shlb
jecxz
xchg
icebp
imul
xchg
or
lret
adc
out
mov
mov
cmp
out
push
shrb
mov
daa
mov
add
inc
lret
subb
push
xor
xchg
xor
mov
dec
or
lods
add
aam
popf
fwait
mov
push
movsl
out
inc
push
mov
fwait
push
sahf
add
push
aaa
cltd
mov
cmp
jnp
gs
xchg
lods
fldl
sbbb
inc
adc
sbb
popa
sbb
dec
cmp
pop
inc
orl
push
addr16
and
xchg
sub
sbb
push
in
cmp
into
xor
or
cmp
mov
cmp
iret
dec
addr16
jmp
ret
ja
push
orl
js
or
and
mov
push
xor
inc
add
or
push
out
push
mov
imul
xchg
sub
or
scas
dec
cmpsl
or
xchg
jp
and
mov
shl
dec
aaa
fs
jne
popf
inc
pusha
mov
push
xchg
add
test
push
mov
dec
out
cmp
fmull
mov
mov
pop
xchg
and
xor
insb
call
fs
dec
inc
jle
lds
in
repz
adc
jbe
iret
xchg
inc
fcmovb
addr16
ljmp
mov
push
push
pop
add
in
add
push
xchg
test
push
sub
nop
mov
mov
sbb
xchg
push
pop
push
fwait
rol
mov
add
mov
arpl
ljmp
xchg
or
and
je
sub
jl
or
hlt
test
pop
out
inc
fdivrp
add
lds
cmp
xchg
sub
sarb
cmp
clc
pushf
push
push
dec
cmp
in
jge
fsubrl
enter
daa
xchg
cmp
dec
jno
and
jl
daa
adc
jl
push
shlb
clc
and
or
aad
icebp
test
sub
mov
aaa
mov
in
jne
mov
lock
push
negb
loope
push
cmp
jne
xlat
ds
in
movsl
cltd
sbb
orb
sbb
add
lods
inc
xor
fst
out
pop
pop
push
adc
pop
inc
inc
dec
lcall
test
sbb
adc
loop
cltd
outsb
push
add
int3
aaa
scas
subb
jg
mov
jle
test
pop
mulb
shlb
adc
lcall
idivl
test
xor
sbb
in
sahf
add
in
test
fidivs
cmp
and
or
loop
pop
loope
mov
das
ja
test
ss
xchg
push
pop
dec
out
or
cli
test
sub
pop
pop
add
into
test
gs
pop
into
jp
push
mov
pop
pop
fwait
in
ljmp
adc
push
icebp
add
inc
ja
lods
dec
xor
xlat
aas
xchg
mov
mov
push
sti
sarb
incb
or
mov
mov
es
icebp
cmp
flds
xlat
xchg
repz
pop
xchg
clc
sub
sbb
jl
movsb
movl
arpl
jo
aaa
pushf
in
dec
jmp
sbb
int
mov
jge
jns
shrl
sub
cltd
dec
addr16
je
insb
inc
jecxz
sbb
push
les
inc
cwtl
out
movsb
popa
mov
mov
mov
xchg
addl
add
pop
dec
push
iret
inc
movsb
adc
jle
push
push
cmc
mov
lock
add
cld
dec
sar
add
idivb
pop
xor
jl
cmpsl
fstl
xor
pop
stos
cld
ret
lret
addl
mov
pusha
sub
sahf
add
push
pop
lods
xchg
sub
ret
mov
push
mov
ret
out
aam
xor
insl
imul
jp
jae
mov
bound
sbb
mov
sbb
sbb
xchg
push
imul
inc
negb
push
dec
into
add
sub
repz
mov
xchg
testb
movsl
movl
orl
outsl
lret
jp
mov
sbb
xor
adc
or
mov
mov
aas
clc
pop
dec
into
aam
pop
jge
ja,pt
hlt
xchg
inc
or
xor
push
sub
jnp
gs
lret
out
in
rcrl
jns
ljmp
lods
out
mov
push
adc
push
and
addr16
push
push
mov
addr16
insl
enter
xchg
jne
cwtl
scas
pusha
and
mov
xchg
shll
pop
jmp
loope
out
add
adc
xchg
and
mov
inc
ret
sub
sti
jmp
jnp
fxch
jle
ficomps
in
or
adc
add
icebp
testb
jp
mov
popf
fucomip
inc
push
jle
push
fidivl
popf
adc
cwtl
inc
add
ja
xchg
sbb
sbb
sbb
imul
push
push
mov
popa
inc
mov
push
movsb
inc
leave
mov
out
arpl
rolb
dec
or
dec
popa
pop
aaa
scas
inc
data16
scas
add
mov
scas
pop
push
sub
jo
add
scas
add
and
movsb
jno
fs
mov
dec
jge,pt
jmp
enter
daa
fnstsw
and
jl
andl
mov
aad
xchg
ss
in
fstps
lahf
adc
std
iret
test
hlt
aas
or
jns
cmpsb
mov
out
in
pop
test
js
and
push
mov
or
cmp
add
mov
or
movaps
sub
push
sbb
adc
xor
push
inc
stos
out
pop
cmp
in
pop
lds
lock
rcrl
sub
outsb
mov
push
adc
inc
popaw
jg
push
scas
mov
xlat
sbb
cmc
jp
and
inc
jl
inc
cmpb
add
nop
fcomps
dec
idivl
fs
cmp
pop
outsb
jg
mov
xlat
mov
cmpsl
push
nop
test
in
xor
and
test
push
fisubs
adc
aam
in
dec
gs
stos
and
mov
or
mov
lcall
sub
or
cmp
mov
ljmp
ficoms
jge
dec
adc
sti
ss
out
std
add
insl
inc
leavew
js
lods
ss
cmp
mov
sub
int
in
pop
arpl
sti
outsl
daa
outsl
arpl
aaa
nop
dec
std
dec
mov
xor
cmp
insl
xchg
shl
test
xchg
cmpsl
repz
divl
sahf
pop
sub
sub
pushf
nop
pushf
mov
xor
lahf
inc
out
sbb
leave
ja
jb
outsb
cmp
dec
stos
je
hlt
dec
jecxz
jbe
and
sahf
sti
sub
mov
out
mov
dec
fldt
mov
xor
decl
cmc
ss
mov
cmpsl
lahf
dec
and
add
idiv
addr16
std
xor
inc
cmpsl
fdivrl
push
icebp
sbb
cld
in
rcrb
movsb
lahf
lds
cmp
iret
pop
and
pop
shrb
insl
dec
aam
jecxz
ret
mov
sbb
dec
adc
clc
enter
scas
xchg
shr
mov
mov
fiaddl
mov
sti
adc
and
push
push
std
aaa
inc
mulps
add
mov
cltd
es
mov
push
push
shll
sbb
fstl
gs
mov
cmp
sar
jbe
pop
fwait
mov
stos
enter
call
cmp
dec
call
sub
fcoml
lret
xor
adc
mov
inc
in
dec
xor
add
ficomps
jnp
cmp
cmpsl
repz
sbb
fwait
pop
lcall
lods
sub
out
int3
in
aaa
stos
lods
jns
xchg
sti
pop
mov
in
adc
mov
into
cmp
addr16
out
jp
nop
in
mov
jnp
mov
scas
loopne
dec
std
pop
nop
jne
testl
or
popa
xchg
cmpsb
outsb
sub
lods
fnsave
adcl
out
test
mov
push
sbb
and
in
aad
xchg
jnp
es
jne
push
in
mov
adc
mov
pop
ret
lret
test
inc
jae
es
lahf
in
push
popf
popa
popf
cmp
jecxz
mov
outsl
inc
test
test
xchg
jb
sbbb
or
cmp
scas
loope
daa
push
call
lcall
test
mov
hlt
lea
push
inc
mov
inc
mov
pop
dec
je
outsb
mov
add
mov
inc
cs
lds
into
jo
cmpl
in
add
clc
decb
movsb
cld
add
push
out
cwtl
inc
jbe
and
pop
fsubrp
enter
daa
fsubl
dec
cmp
insb
jno,pt
ss
dec
stos
dec
rorl
xchg
pop
mov
pop
scas
adc
xchg
lahf
xor
adc
lds
push
mov
add
or
xor
cld
pop
into
sub
adc
loope
mov
sub
xchg
adc
shrl
sbb
fiadds
shr
dec
jge
mov
xchg
xorb
xchg
ret
add
int
xor
sbbl
insl
outsb
add
mov
sub
pop
inc
scas
cmp
sub
jo
cmp
rorb
adc
in
jg
push
lret
push
cmp
inc
inc
sub
push
inc
daa
mov
fcoms
mov
vpxor
push
sbb
in
dec
lahf
pop
test
push
outsl
cmp
mov
cmp
xchg
stc
adc
fs
in
and
es
cmp
dec
movsb
out
out
sbb
sysenter
push
xor
push
cli
cmp
push
add
out
mov
cmc
ljmp
pop
pushf
jg
adc
pusha
mov
adc
scas
add
out
pop
lods
sbb
mov
push
sub
dec
mov
mov
incb
int
nop
inc
stc
test
adc
pop
gs
xchg
sbb
repz
or
jle
loope
into
pop
or
jb
cmp
pop
fisubrs
imul
cmp
jmp
jle
cs
shr
aad
xor
gs
push
test
loop
xor
mov
push
push
inc
and
loopne
bound
cwtl
fs
mov
and
xorl
mov
pop
xchg
out
inc
mov
push
lock
ret
das
aam
jnp
shl
mov
inc
pop
pop
rcll
jnp
std
adc
cmpsl
fldt
mov
lock
cmp
sbb
lret
popa
sbb
mov
dec
mov
pop
inc
lds
shl
cmp
sub
jb
movsb
push
ret
sbb
mov
clc
add
std
xchg
in
push
imul
nop
jnp
lods
inc
mov
dec
mov
sub
inc
ljmp
cmp
aaa
cltd
pop
insb
mov
mov
cmc
push
push
iret
ffree
fnsave
jecxz
mov
sbb
jmp
cmp
push
dec
mov
stos
mov
iret
out
dec
aad
xchg
std
adc
ljmp
sbbb
jbe
xor
add
int3
xchg
outsl
dec
pushf
aas
inc
pop
repz
sbb
dec
xor
mov
or
rorb
fwait
mov
pusha
add
sbb
out
stos
or
jns
outsl
hlt
in
es
mov
inc
mov
push
or
repnz
addr16
sub
sub
mov
sbb
lds
jne
mov
sbb
fwait
push
xchg
jns
scas
jmp
ja
jnp
loope
push
out
mov
sub
xor
adc
stos
loop
and
subb
jnp
cmp
in
push
in
push
adc
outsl
ffree
mov
into
xchg
inc
jle
push
jae
add
add
xor
inc
add
add
aaa
pop
mov
leave
test
xchg
pop
in
imul
inc
push
das
jns
rclb
aam
aaa
or
leave
nop
mov
lcall
enter
ficomps
ret
aaa
sub
je
add
clc
int3
mov
cmp
clc
push
fsubp
gs
cmc
dec
xchg
jo
sbb
scas
ret
and
mov
xor
mov
pop
lret
push
cmpsl
gs
jo
jge
mov
enter
daa
fisttpl
sub
push
jno
jbe
jl
mov
dec
sbb
xchg
jns
pushf
xor
and
push
lahf
push
rorl
xchg
push
mov
inc
in
jno
mov
xor
mov
bound
xor
loope
lea
jnp
test
ds
dec
movsl
scas
sbb
lds
in
addb
sbb
jns
add
fistl
sar
inc
xor
pop
mov
mov
out
das
ret
lods
stos
lcall
jmp
sub
jbe
adc
jge
lea
mov
jns
mov
and
and
int
mov
sar
jge
cld
mov
roll
sbb
sahf
in
sbb
dec
jb
outsl
sbb
iret
add
mov
pusha
ss
lahf
cmp
inc
es
mov
orl
iret
into
push
negb
mov
pop
loopne
je
pop
mov
test
imul
pusha
icebp
iretw
xlat
xchg
lods
add
scas
cmp
sub
sub
repnz
mov
int
aad
test
pusha
jmp
sbb
test
pop
shlb
fldenv
xor
addl
and
arpl
in
dec
in
mov
das
inc
adc
ret
pushf
out
xor
or
notb
and
mov
aas
pop
gs
jb
sbb
je
add
daa
jae
leave
push
cwtl
pop
cmp
mov
das
lods
mov
int
or
sub
add
or
call
lock
sub
das
mov
or
mov
int
rcl
in
leave
testb
xchg
dec
in
adc
scas
and
icebp
in
cld
inc
leave
ds
rorb
mov
pop
push
mov
arpl
push
shlb
lods
push
ret
lods
imul
push
iret
cwtl
clc
ds
imul
jmp
dec
lods
mov
mov
xchg
std
lret
std
dec
push
mov
push
movhps
add
add
data16
mov
mov
push
xchg
adc
test
jg
xchg
std
sbb
sahf
in
stos
inc
add
stos
cmpsb
xchg
lret
out
scas
xchg
mov
add
addr16
into
mov
pop
or
jl
xor
dec
sbb
xchg
push
dec
add
rcrb
inc
fidivl
imul
dec
and
shlb
or
pusha
mov
mov
in
mov
mov
mov
pop
sbb
mov
xor
mov
test
gs
out
mov
les
imul
pop
jp
sub
sbb
xor
mov
jne
loopne
pusha
testb
xchg
dec
adc
and
es
inc
imul
adc
sub
insl
push
pop
push
pushf
push
push
dec
int
and
jp
jnp
push
cmp
loope
in
scas
mov
mov
jno
mov
xchg
mov
outsb
jae
scas
cld
push
and
subl
cmp
je
xchg
and
je
sub
scas
cmpsl
xor
push
jbe
add
xor
mov
dec
movsb
leave
pop
adc
and
std
arpl
gs
inc
test
imul
aaa
in
cmpsl
insl
or
xchg
fadds
fcmovne
mov
xchg
fiadds
sbb
xor
push
push
movsl
cmp
mov
adc
push
stc
ss
xor
jge
outsl
mov
loop
sub
fiaddl
in
jno
dec
mov
cmp
pop
fld
xor
mov
jl
push
and
insb
test
push
push
sbb
cmpsb
adc
cmp
adc
fsubrl
dec
jecxz
push
or
loope
mov
sub
jge
cmp
jb
ds
push
movsl
mov
xchg
shlb
arpl
sbbb
sbb
adc
add
cmp
mov
pop
mov
lods
sub
cmp
inc
add
dec
lods
fadd
xchg
loopne
sahf
and
loopne
or
cwtl
sbb
jg
jp
mov
dec
mov
int3
pop
and
jp
push
dec
rcll
fmuls
add
lret
inc
rcrl
push
sbb
dec
jecxz
nop
mov
xor
mov
bound
pop
fs
pop
xorb
movsb
dec
cmp
inc
cmp
out
cmp
xor
xchg
fmuls
les
mov
xor
cmpsl
cmc
js
xor
pop
fidivl
adc
gs
imul
mov
push
xor
pop
cmp
clc
data16
data16
pusha
sti
jl
pop
dec
divl
xlat
push
movsl
nop
testl
pop
fstps
cmp
repz
mov
add
or
push
fwait
repz
inc
out
adc
rcr
pushf
xchg
testl
cltd
fistpl
aas
mov
push
jb
mov
insl
je
test
jno
imul
xor
cwtl
ficoml
fisttpll
mov
sub
push
pop
inc
ror
lock
mov
int3
into
mov
pop
or
xor
lret
test
imul
loopne
aad
mov
sahf
pop
cld
outsb
or
mov
mov
mov
cmpb
rorb
inc
mov
ret
cmp
pop
shll
insl
add
in
xchg
imul
aas
fwait
xlat
popa
mov
pop
sub
mov
fisubs
mov
sbb
jbe
mov
pop
cltd
lret
cwtl
lods
test
into
mov
imul
lds
test
dec
cmc
xchg
push
sbb
pop
pushf
sub
stos
xchg
pop
sbb
adc
xchg
mov
lret
xchg
push
xor
jg
inc
daa
xchg
xor
jecxz
mov
dec
adc
cmp
pop
imul
dec
push
les
or
rcll
bound
scas
add
rol
and
bound
int
fidivrl
xchg
call
sarl
mov
je
jp
xchg
hlt
mov
sbb
sbb
jne
jne
imul
xchg
js
fildll
call
pop
mov
xchg
or
test
out
outsl
mov
test
out
fstpt
adc
movsb
mov
push
mov
jnp
cmpsl
sbb
lret
ficompl
adc
xor
insl
clc
or
loopne
pop
jns
dec
inc
xchg
push
jae
popf
or
out
pop
popf
scas
inc
pushw
mov
ficomps
popf
xchg
xchg
ja
aam
out
push
imul
scas
or
push
push
mov
mov
and
mov
and
hlt
outsb
cmpsl
push
arpl
das
out
inc
lods
mov
rcrb
cmp
aaa
stos
jl
or
sub
add
insb
int3
mov
inc
fisubrs
roll
cmp
sbbb
insl
sahf
and
cmpsb
adc
movsb
jbe
data16
or
mov
fnstenv
cmp
jno
outsb
jl
cmp
dec
testl
scas
insl
xchg
pop
inc
sbbl
push
in
test
and
mov
clc
inc
idivb
add
push
xchg
push
loope
scas
inc
sub
scas
xchg
cmp
cmp
ds
sbb
movsl
mov
xor
movsl
stos
cmp
addr16
popf
add
repz
xor
jo
mov
cmp
fyl2x
cmc
sub
lret
shll
lcall
out
jno
lea
mov
xorb
pop
mov
leave
sahf
mov
flds
mov
nop
lret
and
aam
int
addr16
inc
clc
jae
jp
ror
dec
xchg
shll
sbb
dec
sahf
xor
jmp
add
in
outsl
fldenv
data16
xor
push
adc
cmpb
int
inc
sub
cmp
xchg
mov
aaa
inc
xor
add
js
or
roll
jmp
aas
xchg
shl
pop
rcrl
repz
or
imul
scas
jnp
inc
arpl
data16
test
das
sub
jp
lds
jbe
addr16
cmp
lret
add
sti
sub
out
pop
gs
test
pop
roll
sub
pop
les
insl
sbb
inc
in
outsb
call
rolb
pop
notl
adc
mov
jmp
push
mov
aad
inc
xlat
inc
pop
mov
sbb
dec
mov
pop
nop
jecxz
mov
sub
cmp
mov
rorl
mov
fcomp
imul
inc
inc
mov
lock
test
das
jno
jg
jp
lods
mov
jecxz
aaa
roll
insl
and
iret
jb
dec
shlb
xor
cld
cltd
and
lret
scas
mov
aad
adc
pop
mov
sbb
sub
jl
aam
testl
push
adc
aam
mov
out
xchg
stos
pushf
add
mov
pop
popa
aad
jle
xchg
mov
fmuls
and
imul
add
imul
mov
mov
mov
fucomp
hlt
or
add
ja
add
sub
pop
pushf
xlat
pop
inc
sti
shrl
je
pushf
xchg
shr
mov
decl
push
xor
orl
inc
shll
and
filds
rorl
pop
ja
loop
dec
or
mov
mov
or
notl
adc
call
add
sub
dec
out
dec
jge
bound
icebp
cmpb
xor
gs
cltd
xchg
aaa
lods
xchg
mov
mov
cltd
stos
sbb
cmp
cmp
xchg
popf
mov
xor
mov
push
xchg
dec
mov
lret
jg
fisttps
popa
mov
push
lods
push
xchg
fadds
mov
jg
push
sti
add
inc
adc
mov
sbb
jb
mov
outsl
jnp
add
je
loope
out
adc
aas
iret
int3
ret
flds
pop
mov
dec
inc
lahf
or
jae
iret
add
test
lret
inc
push
addb
ficoml
xor
sbb
jo
imul
scas
insl
xchg
push
add
or
mov
hlt
push
xor
cmc
fidivl
mov
ds
inc
scas
mov
push
sbb
scas
adc
or
xchg
pop
add
loop
int3
jbe
sub
out
int3
fmulp
pop
add
in
add
push
xchg
scas
pusha
cwtl
dec
and
cmp
dec
mov
push
sub
jbe
adc
mov
pop
in
daa
fsubr
repz
adc
das
mov
push
push
and
xor
repz
push
in
or
jmp
push
inc
xchg
ret
pop
js
in
fucomip
xchg
js
sub
in
in
inc
loope
idiv
sub
mov
cmp
xor
lahf
rclb
into
popl
jb
sahf
sub
add
incb
xor
adc
shrl
pusha
imulb
lcall
out
sbb
mov
jl
xor
jle
adc
into
movsb
adc
std
dec
mov
mov
jae
xchg
hlt
pop
push
push
dec
sbb
fadds
aad
idivl
jo
lret
loop
dec
add
sbb
dec
out
mov
xchg
outsl
mov
aam
stc
in
ret
push
sub
xor
pop
jmp
ss
mov
and
out
imul
aaa
push
push
cmp
sub
imul
fsts
push
mov
loopne
jmp
xor
fdivrl
imul
lock
add
dec
ds
dec
xchg
lods
mov
jg
xlat
mov
or
in
ss
cmp
fidivrl
inc
gs
or
jl
xchg
inc
arpl
pinsrw
xchg
mov
mov
pop
rol
aas
in
mov
adc
nop
pushf
out
cld
jmp
jne
cs
xchg
aaa
aad
adc
inc
jne
idivl
in
mov
lahf
fs
xor
jecxz
ds
stc
inc
cwtl
push
add
mov
jae
mov
sub
dec
insb
add
cwtl
ret
ficompl
xchg
into
adc
push
test
mov
cmp
call
rcl
lock
testb
std
jbe
xchg
dec
mov
outsb
mov
dec
mov
cld
les
push
lret
sbb
enter
fimuls
pop
rol
shlb
int3
push
sub
pop
xchg
aam
int
ret
pop
inc
insl
fnstenv
push
insl
shl
cmp
cmp
addr16
ljmp
lods
icebp
inc
mov
sti
fisttpll
and
inc
ljmp
mov
lds
icebp
jne
fldt
adc
inc
xchg
int3
sbb
incl
repnz
fsubrl
xlat
mov
add
ljmp
lcall
xchg
adc
xchg
mov
pop
xorb
or
outsl
add
adc
or
add
push
test
xor
xchg
out
daa
stos
je
rolb
jns
sub
xchg
xchg
xchg
mov
mov
mov
mov
mov
aaa
sub
jp
pop
dec
mov
cli
jp
outsl
pop
xor
insb
cmc
mov
lods
lods
pusha
cltd
sbb
fwait
int3
xchg
lds
mov
mov
js
out
cli
mov
sub
push
je
pop
rdpmc
stos
mov
stos
add
mov
xor
pushf
jle
jns
in
adc
sbb
iret
iret
sub
call
inc
stos
adc
jae
inc
ficoms
insb
ret
popfw
std
xor
add
mov
fiaddl
pop
xchg
and
lret
dec
mov
scas
rcrb
and
dec
push
mov
and
mov
inc
js
leave
insb
ss
add
inc
mov
jno
mov
lds
scas
jnp
aaa
sub
aaa
add
mov
xchg
fidivs
or
adc
push
jo
cmp
aas
lcall
popf
das
movsb
mov
cmp
mov
insb
sub
ror
cld
daa
xlat
jmp
cmp
adc
cltd
jl
adc
dec
aad
xchg
push
add
loope
and
lds
arpl
push
mov
repz
and
xchg
in
jbe
js
jmp
pop
or
push
lret
mull
sub
mov
cmp
push
and
lea
movsl
lret
shlb
xor
arpl
adcb
or
jge
cmp
sbb
push
mov
fstps
fstpt
sbb
movl
outsb
or
adc
jmp
les
mov
mov
ret
pop
testb
ss
imul
fdivrs
push
lret
push
shl
in
cmp
and
pop
sahf
icebp
sahf
jns
mov
adc
cmp
mov
xchg
outsl
xchg
add
loop
addb
mov
addr16
scas
lcall
xchg
test
mov
testb
mov
cmp
push
mov
mov
sbb
into
fisttpll
mov
pop
aaa
add
imul
xchg
add
out
fildl
add
xlat
clc
jbe
sub
mov
mov
shll
std
ds
xchg
xchg
nop
mov
dec
sub
jbe
mov
les
pop
or
xchg
rclb
mov
inc
mov
pushf
xchg
outsb
jmp
pop
jg
andb
aad
inc
cmp
aas
subl
jno
rorb
adc
push
jecxz
xor
xor
lret
pushf
sbb
or
movl
fistpl
push
inc
push
scas
push
lock
jne
das
das
and
mov
stc
push
xor
and
or
lea
xor
fxch
cmpsl
sti
gs
and
loopne
mov
xor
lahf
jl
mov
fisttps
and
add
xor
fwait
clc
mov
call
into
xor
jb
clc
sub
xchg
sub
test
add
pop
mov
push
andw
jge
setae
add
sub
test
cltd
rcll
jb
fnstsw
cmp
sbb
rcrl
push
push
push
xchg
stos
bound
out
cmp
jle
pusha
pop
pop
add
mov
xor
mov
xor
cmpsl
lds
push
notl
dec
lahf
loopne
pop
lcall
dec
out
sarl
inc
cs
or
fistpll
fwait
jae
adc
dec
cwtl
ds
loop
mov
bound
adc
repz
jnp
dec
xchg
aad
mov
ljmp
or
enter
rolb
mov
dec
or
dec
jne
arpl
enter
movsl
mov
jmp
outsb
jo
subl
sub
pop
dec
fcoms
decl
adc
jno
insb
push
fs
jnp
or
jle
ds
in
stos
pop
adc
add
iret
mov
ret
xchg
pop
push
fsubrs
jae
incb
popf
and
test
inc
jle
mov
mov
jle
jl
rcrb
test
scas
xor
rcrb
xchg
repnz
hlt
dec
stos
loop
es
arpl
aaa
call
sbbl
pop
pop
addr16
adc
lds
xor
jnp
push
cmp
dec
shlb
ljmp
icebp
inc
pop
enter
daa
insb
fistpll
adc
xlat
call
dec
inc
and
xor
sub
mov
push
insl
mov
or
sub
mov
shlb
out
js
cmp
push
push
jno
loope
icebp
or
cmp
xor
ds
int
rcrl
push
pop
cwtl
int3
andb
add
push
fdivl
fildl
jmp
mov
dec
pop
or
push
or
lcall
icebp
fdivl
mov
outsb
insb
popf
out
adc
add
popf
jg
nop
or
popa
daa
pop
mov
shrb
push
push
xchg
ror
shl
inc
fdivs
stc
divl
jmp
jle
daa
ds
sbb
xlat
mov
adc
insl
loop
arpl
pop
push
sub
or
and
lret
mov
test
lcall
adc
or
xor
xlat
loopne
inc
into
pop
push
mov
clc
xor
adc
outsl
iret
add
in
pop
xor
lods
xchg
xlat
aaa
test
pop
mov
or
test
cmp
jae
pop
cmp
repz
arpl
xchg
inc
mov
je
cmp
adc
mov
xor
rcrl
push
popf
mov
cmp
into
mov
sub
jmp
or
cs
push
aad
fmuls
inc
stos
adc
xor
push
cmovns
xchg
je,pn
fisubs
lods
push
ss
imul
xor
mov
gs
dec
inc
sub
idiv
sbbl
rol
push
jp
das
push
push
jle
xor
xor
test
shll
sti
not
jb
std
cld
sub
int3
movsb
dec
cmpsl
aad
mov
cli
sahf
mov
lret
sti
cmp
mov
sbb
add
push
not
lret
subb
add
aam
ja
ret
ja
mov
fcomps
clc
fisubs
xchg
addr16
ljmp
add
dec
into
mov
push
cmc
mov
cli
and
add
mov
mov
ret
push
popa
in
add
popa
mov
test
dec
nop
xchg
jne
sbb
xor
dec
gs
inc
out
popf
popf
sbb
add
pop
fbstp
mov
cmp
sub
dec
xchg
cld
dec
push
loopne
pop
push
add
ja
mov
arpl
cmp
popf
xchg
lret
fwait
mov
push
push
mov
outsb
popa
out
in
xchg
clc
in
jns
pusha
in
and
and
mov
out
mov
stos
push
addr16
sti
test
mov
inc
mov
js
xor
std
or
xchg
imul
xchg
cmp
out
push
mov
xchg
or
push
xlat
jae
stos
mov
mov
pop
jmp
jnp
mov
jle
divl
adc
xor
jmp
mov
pop
push
stc
testb
jae
cld
jmp
bnd
popf
dec
mov
push
std
xchg
sbb
xchg
shll
shrl
or
push
sarb
sub
in
pop
jo
pop
hlt
lcall
inc
mov
fstpt
sbb
mov
or
add
dec
int3
aaa
aaa
push
pop
mov
popf
fidivs
adc
mov
or
std
xor
and
mov
cmp
aas
push
sbb
stc
jge
jo
enter
daa
aad
inc
cmp
mov
out
popf
jl
xor
dec
mov
inc
push
lret
imul
out
lahf
or
in
or
dec
push
scas
inc
aas
push
jmp
xchg
cmp
js
and
pop
xchg
pop
loope
movsb
dec
sub
mov
cs
pop
movsl
fsubrs
cmp
and
xchg
xorb
clc
add
adc
xor
aam
pop
jne
dec
sub
lock
mov
dec
dec
push
mov
fwait
sub
dec
outsb
iret
sbb
dec
mov
xchg
mov
cli
xchg
dec
in
and
ds
pop
push
cli
fdivs
jecxz
divl
test
pop
adc
loope
adc
jecxz
mov
or
xor
dec
outsl
push
outsl
mov
stc
adc
fs
mov
adc
ss
xchg
cmp
sub
out
repnz
je
xor
push
out
xchg
into
mov
jno
loopne
adc
sbb
adc
outsl
imul
lods
add
aam
lods
outsb
xlat
jbe
or
mov
ja
cmp
out
stos
jnp
inc
gs
push
mov
cltd
cmpsb
mov
fnstenv
inc
lds
mov
xchg
shll
add
iret
imul
adc
outsb
pushf
call
jns
cs
sub
inc
fs
aas
rorl
xchg
or
je
pop
jnp
mov
mov
cwtl
addl
or
xchg
out
dec
sub
les
arpl
popa
xchg
data16
in
fsubl
pop
in
ljmp
jge
notb
mov
std
imul
cmpsl
aam
sub
ror
mov
inc
ret
push
dec
mov
adc
sbb
sbb
aam
dec
loope
push
mov
insl
mov
clc
mov
loope
ljmp
cwtl
lods
xor
push
and
aad
rorl
push
sbb
les
test
icebp
mov
mov
push
and
mov
test
cld
test
cld
dec
test
shll
or
add
cmp
lods
mov
decl
sbb
xor
into
jg
pusha
clc
je
pop
popf
cmpsl
dec
insl
ret
add
out
ja
jmp
stos
inc
pop
add
or
pop
sti
fwait
rcl
stos
push
xchg
add
add
cwtl
mov
out
les
mov
jns
jo
in
pushf
mov
mov
inc
call
or
xchg
pop
jp
fidivrl
daa
sub
mov
cmp
dec
adc
std
mov
filds
push
xchg
ds
sub
ljmp
or
aad
and
mov
push
push
insb
insb
stos
sti
pcmpgtw
pop
push
insb
sub
and
jle
movsb
add
std
add
iret
dec
adc
ret
ljmp
daa
stc
jae
add
mov
out
popf
jb
xor
add
rclb
ficompl
imul
iret
test
sbb
adc
push
and
shll
mov
nop
mov
repnz
and
and
arpl
inc
mov
aaa
sbb
fists
aaa
pushaw
js
repnz
bound
and
sbb
out
mov
lds
mov
nop
xor
push
push
ds
addr16
jbe
cmp
enter
daa
aam
xor
jnp
pop
jno
sub
jl
add
dec
and
push
scas
adc
pop
add
lahf
sub
dec
push
adc
dec
dec
add
pop
push
sub
les
cmpsb
and
aad
ds
sbb
mov
jb
cmp
xchg
sub
adc
cmp
pop
mulb
popa
rol
inc
and
lret
sbb
stc
add
outsb
xorl
test
xor
pushf
adc
iret
pop
cmp
xchg
lcall
dec
fmul
gs
sub
ss
outsb
xor
cmpb
push
jg
xor
mov
enter
in
mov
dec
and
nop
push
pop
scas
xor
fsubr
pcmpgtw
xor
cmpl
std
dec
addr16
xlat
cs
bound
test
loope
outsl
xor
std
loop
ret
enter
push
fsts
adc
pop
out
cmp
and
mov
cli
cmpsl
dec
dec
xor
dec
orb
loop
into
xchg
cmc
and
loopne
hlt
ljmp
push
mov
out
adc
aas
rolb
adc
jecxz
push
shufps
cmpl
mov
shlb
loop
popf
sti
xchg
in
sahf
xchg
scas
add
nop
sbb
jne
clc
orb
cmpsl
pop
int3
shr
xor
mov
jb
push
lods
imul
lret
cmp
pushf
adc
xor
pushf
xchg
or
jmp
lods
jge
stos
xchg
gs
das
or
cli
aas
pusha
mov
inc
dec
or
orl
cmpsb
pop
cmp
std
lea
rclb
mov
adc
sbb
push
fistl
pop
stos
fs
ljmp
das
int3
lret
pop
in
mov
lcall
notb
pop
std
adc
add
idivb
mov
test
xor
jo
mov
jns
lahf
inc
mov
mov
cmp
mov
sub
cmp
aam
jo
ret
xchg
sarl
insl
outsl
inc
cmp
fcmovnbe
repz
in
mov
popa
dec
aam
lods
popf
insb
pop
mov
xchg
or
lods
pop
cmpxchg
add
imul
mov
sub
out
inc
dec
xchg
pop
sbb
cmc
mov
pop
stos
das
sbbl
xchg
xor
pop
fdivrp
daa
mov
and
or
pop
mov
pop
sahf
inc
dec
aam
in
pop
lret
pop
jno
xchg
mov
dec
enter
repz
testl
or
rolb
repz
xchg
bound
pop
mov
movsb
and
cmp
ret
mov
adc
mov
mov
rolb
insl
mov
sbb
das
mov
fs
push
loopne
pusha
xor
pandn
fsub
xchg
adc
xchg
iret
cmpsl
mov
out
addb
or
push
push
call
out
and
pushf
xchg
insb
cwtl
test
mov
adc
add
cmp
xchg
clc
iret
cmpsl
repnz
push
out
pop
ret
daa
out
sub
xor
mov
js
xchg
popf
cltd
jl
or
sbb
mov
xchg
xorl
imul
das
scas
pop
or
addr16
shr
jbe
das
dec
mov
leave
dec
or
hlt
xor
testb
inc
or
lcall
or
sub
add
mov
pop
in
fdivrp
mov
lds
pushf
add
and
add
jb
dec
movsb
fcomip
jp
mov
xchg
sub
enter
daa
roll
cwtl
cmp
cli
jl
test
arpl
xchg
test
xor
cli
xor
dec
or
test
loop
dec
inc
pop
scas
pop
cmpsb
cmpsb
dec
lods
in
bound
push
pop
add
mov
pop
sub
cmp
cmp
adc
sbb
movsl
out
fcom
popf
sbb
fildll
xor
mov
ljmp
inc
in
dec
cwtl
jns
ret
enter
jnp
pop
mov
or
aaa
jl
fdivl
pop
sub
cmp
mov
adcb
jg
or
mov
lret
loope
cmp
and
jmp
pop
push
int
fs
fsubrs
mov
sarl
leave
mov
lea
sahf
add
push
sbb
and
sbb
addr16
jmp
fs
fcoms
ljmp
cmp
push
push
push
out
out
cli
fidivrl
and
cmp
and
or
add
into
imul
loopne
jmp
xor
sti
fldt
shlb
mov
jae
lods
cmp
cli
cmp
mov
xlat
hlt
push
int3
sub
jne
mov
dec
dec
cmp
js
inc
mov
or
xchg
nop
hlt
jne
dec
push
arpl
inc
ret
sbb
fucomi
lret
repz
pusha
mov
pop
mov
sbb
lds
gs
sub
push
pushf
ds
mov
push
stc
mov
inc
cld
fnstsw
mov
xchg
fistps
push
mov
fisubrl
push
lea
push
mov
mov
xor
cld
add
fcoms
pop
dec
ds
jno
mov
pop
inc
das
stos
or
mov
int
jl
and
fimull
mov
jge
cmpsl
rcrb
hlt
mov
jg
mov
fwait
or
mov
fistl
pop
push
xchg
dec
push
sbb
mov
jmp
ret
and
mov
push
push
adc
push
sub
xchg
and
imul
fs
test
dec
xor
and
mov
xor
out
mov
dec
loop
test
in
push
stos
adc
ja
test
sbb
xchg
mov
ss
bound
pop
dec
inc
pushf
stos
push
push
out
fcomip
xchg
jl
jp
jecxz
sbb
mov
stc
or
inc
shll
pusha
adc
dec
cmp
pop
pop
xchg
ja
add
pop
inc
mov
mov
fwait
das
or
xlat
cmp
repz
out
or
bound
jle
in
lea
adc
sub
mov
mov
pushf
outsb
mov
xor
jp
mov
mov
std
sub
jnp
dec
jne
es
into
dec
stos
filds
test
fdiv
scas
xchg
lcall
out
les
inc
enter
call
loopne
inc
repnz
pop
jnp
dec
ljmp
call
insl
iret
push
aad
ret
sbb
xor
inc
loope
mov
add
popf
shlb
jp
pop
fiaddl
pop
xchg
sbb
mulb
cli
dec
out
mov
negb
into
out
repnz
cmp
mov
fwait
in
arpl
xchg
inc
rcr
or
push
and
or
int3
jae
nop
in
int3
clc
mov
loope
lahf
push
add
mov
and
mov
mov
movsb
push
movsb
push
add
mov
jge
push
lcall
cwtl
push
jno
adc
dec
add
push
je
loopne
pop
fcomps
xchg
jne
lahf
push
bound
mov
push
lods
dec
lds
fstpl
sub
in
dec
xchg
sub
dec
mov
inc
jge
push
pop
aam
push
adc
cmp
test
jp
in
cmp
sarb
stos
ds
movb
sarl
add
push
js
pop
sbb
or
mov
pop
cmp
aad
ucomiss
push
mov
mov
outsb
clc
dec
cmc
adc
jo
mov
mov
add
mov
pop
frstor
xchg
aas
push
bound
pop
fsubs
shl
mov
xchg
xor
je
aad
sub
sbb
mov
test
insb
outsl
repnz
loop
icebp
test
fs
push
mov
ss
xchg
cmp
sbb
cli
or
mov
cmp
rol
or
test
mov
pop
loopne
icebp
mov
in
adc
fwait
or
lea
pop
add
dec
or
push
xor
and
mov
xlat
xor
jge
rorb
adc
mov
iret
idiv
in
inc
gs
nop
iret
out
dec
mov
in
inc
aad
jle
adc
inc
inc
repz
xchg
xchg
sbb
jecxz
push
imul
cmp
icebp
pop
fdiv
xor
test
pushf
jmp
popa
test
aad
adc
inc
aas
sahf
mov
dec
sti
inc
sub
out
jmp
pxor
mov
mov
ret
out
mov
or
pop
inc
push
dec
out
fs
mov
dec
pop
icebp
or
lock
pop
das
mov
mov
test
mov
dec
shrl
pusha
xlat
nop
dec
mov
jb
mov
push
and
lret
mov
aad
cmp
mov
jp
and
mov
aam
mov
sti
es
mov
dec
push
clc
push
pop
dec
xchg
arpl
repnz
mov
mov
int
ss
xchg
add
aas
and
sub
test
pop
dec
mov
loope
push
insl
pop
adc
jg
add
jns
add
jmp
inc
jbe
hlt
fisttps
or
xor
xchg
ret
out
std
add
out
jmp
xorb
jo
or
mov
mov
arpl
push
dec
mov
pop
cmp
adc
xchg
dec
scas
push
and
cmp
fwait
pop
lret
dec
push
jp
lock
test
adc
bound
jns
jnp
in
add
xchg
pusha
push
pop
mov
adc
or
movsb
push
jp
mov
mov
popf
in
mov
jae
ss
mov
rcll
fbld
sub
mov
out
iret
xchg
cs
sbb
out
jnp
sub
sbb
push
shrl
push
scas
and
insb
outsb
push
jnp
add
inc
in
mov
adc
mov
popf
pop
xor
jmp
jae
fwait
mov
pop
mov
out
dec
push
stc
xchg
xchg
fidivl
fcoml
aas
dec
movsb
imul
sub
and
int3
shlb
mov
cmp
hlt
jmp
jecxz
les
xchg
adc
aaa
mov
and
daa
fs
jecxz
and
dec
cli
fiadds
lods
lds
jo
inc
popf
scas
jns
inc
and
mov
movsb
cmc
ss
push
push
rorb
jge
adc
mov
inc
daa
shrl
and
mov
dec
outsl
mov
push
outsl
xchg
xor
xor
aas
lahf
mov
mov
test
js
dec
inc
jnp
sub
xor
js
test
andl
loope
fsubs
cmp
lds
pop
pushf
mov
rclb
mov
popf
jne
addb
pop
sbb
sub
add
je
xor
cmp
pop
adc
call
pop
mov
mov
in
adc
sub
cwtl
sti
adc
mov
jg
mov
mov
std
and
cmp
int
or
push
push
jecxz
jb
mov
daa
stos
vpunpcklqdq
mov
sahf
dec
xchg
test
iret
mov
loop
xlat
xor
in
jbe
fs
arpl
mov
outsl
fmuls
jle
jne
adc
lods
out
dec
sub
inc
xor
xor
cmp
cmp
push
push
or
dec
insb
cmc
ja
sbb
ss
push
pop
icebp
test
adc
jnp
lret
in
inc
add
loop
lods
or
outsl
cmp
pusha
popf
sub
repnz
and
xchg
sti
mov
shlb
fwait
xor
adc
fstpl
icebp
out
fwait
repz
fistpll
sbb
mov
vcvtps2pd
dec
cmp
loope
cs
jp
sbb
out
cmp
sahf
pop
dec
jb
cmp
or
clc
jle
movb
iret
push
xlat
cwtl
insl
mov
jge
les
inc
dec
fld
push
pop
xchg
int
inc
jg
pop
lock
and
imul
mov
sar
inc
call
std
pop
or
dec
mov
sub
lods
xchg
adc
sub
mov
loop
dec
mov
andb
adc
call
aam
fldl
outsb
mov
mov
popa
out
lods
fisubs
mov
mov
js
push
inc
xchg
fisttps
int
cli
add
xchg
mov
aam
cltd
mov
and
frstor
shrl
rcl
sbb
xchg
shrb
mov
xchg
or
pop
add
int3
pop
incl
pop
xor
int
jo
fbstp
or
pushf
aam
xchg
mov
pop
cld
cmp
dec
mov
xchg
fmull
ja
fwait
lea
push
sbb
jmp
pop
out
inc
pop
cmpsb
xlat
cmp
xchg
in
into
cli
xchg
scas
xchg
adc
dec
or
pop
push
jp
pop
jg
andl
pushf
and
mov
leave
jo
mov
loopne
pusha
add
or
xorb
xchg
mov
in
aam
xchg
xor
and
cmpsl
movsl
sub
mov
jne
stos
mov
out
insb
fstps
cli
jnp
orb
sbb
jno
sbb
repnz
les
cmpsl
pop
push
adcl
sarl
push
js
sbb
call
les
sbb
insl
insb
imul
lock
test
add
sarb
xchg
mov
mov
dec
hlt
adc
inc
or
lret
cmp
or
add
gs
pop
jns
jns
in
jno
ret
jo
mov
scas
pop
jg
and
sub
dec
movsb
adc
push
mov
stos
sahf
jge
mov
enter
daa
rolb
cmp
lret
mov
xchg
mov
cmp
pop
xor
lret
cmp
lahf
test
jg
pop
sti
pop
and
scas
push
inc
mov
cmpsb
das
or
in
pop
inc
cmc
js
dec
cmpsb
pop
ret
push
and
adc
cmp
sar
adcb
sti
loopne
shrb
pop
jne
cld
loopne
adcb
sbb
push
sub
add
push
cmp
mov
mov
pop
cmp
sub
pop
cmp
icebp
push
cmp
neg
je
pop
sub
jmp
jecxz
scas
inc
pop
andb
sub
sub
xchg
mov
xor
jl
push
push
call
ret
divl
into
push
lret
mov
add
mov
fsubl
test
pop
or
outsl
mov
push
loop
icebp
mov
movsb
imul
aad
ss
jns
and
in
out
leave
dec
cli
jae
lock
adc
mov
or
clc
je
adc
fdiv
ds
loopne
xor
sub
je
push
imul
into
dec
add
mov
enter
mov
imul
cmpl
sbb
push
lret
ret
mov
icebp
nop
test
cmovg
inc
sti
jge
flds
in
xor
lock
mov
adc
aaa
shl
pop
inc
rol
xor
pushf
aas
push
mov
cs
fdivs
pop
mov
inc
dec
sbb
aas
fcompl
mov
dec
jmp
mov
call
lea
std
add
inc
mov
test
fistl
adc
pushf
inc
push
imul
dec
out
mov
repnz
and
and
in
bound
pop
dec
scas
mov
iret
movsb
push
mov
add
cmp
sub
rorl
mov
xchg
pop
mov
stos
lret
sub
push
pop
ret
rcrl
cmp
fisttpl
stos
lods
xchg
loope
out
ljmp
aam
dec
mov
mov
adc
shll
sbb
cmpsb
cvttps2pi
inc
add
out
cltd
icebp
out
test
mov
mov
cmpsl
and
dec
aad
dec
aas
cli
test
pop
xor
dec
in
mov
sub
xchg
fildll
out
mov
xchg
push
xchg
incb
xor
aas
jmp
lods
sub
xor
in
xchg
mov
imul
push
pop
mov
jmp
dec
xchg
aas
jle
dec
adc
pop
and
push
shlb
mov
dec
sub
push
aam
andb
dec
in
pushf
xchg
xor
mov
fucomp
mov
lea
xchg
jp
ret
pop
dec
mov
pop
cmp
adc
jne
push
gs
lahf
ds
lahf
pop
dec
xchg
pop
out
jmp
sti
adcl
in
gs
or
push
push
add
stos
cmp
and
lahf
dec
jnp
lock
push
mov
adc
and
pop
lahf
xor
inc
add
imul
mov
push
mull
pop
xchg
fst
or
jo
scas
call
sub
pop
popf
xor
fcomip
lahf
leave
and
mov
pop
cmp
mov
inc
lret
or
xchg
int
mov
jge
push
int
int3
mov
sub
fimuls
out
jo
cmp
pop
and
sub
dec
sbb
push
repnz
jge
cmp
enter
daa
iret
arpl
jno
js
jl
adcl
push
sbb
dec
or
mov
mov
test
push
das
daa
inc
cltd
add
cmpsb
mov
push
in
in
js
lods
jmp
add
push
mov
loope
lret
jg
adc
mov
push
movsl
add
movsl
add
rorb
dec
stos
pop
push
stc
subb
fstps
int3
aam
gs
xor
pusha
pop
pop
jge
sub
mov
push
xchg
stc
mov
pop
xchg
sub
add
adc
shll
repz
cmp
mov
cmp
je
imul
int
xor
div
jmp
lret
inc
lcall
sbb
xchg
sahf
xchg
dec
lods
test
insl
xor
adc
loop
ds
pop
add
movsl
clc
ss
sbb
int3
xchg
pop
mov
push
ljmp
notl
cmp
iret
mov
mov
and
cmc
cld
sbb
add
cmpl
inc
ljmp
popa
add
add
bound
lods
fsubs
adc
movsl
xlat
lock
sub
ds
mov
stc
adc
sti
add
decb
pop
gs
out
pusha
mov
dec
rorl
inc
push
push
in
fnstcw
inc
test
xchg
gs
sbb
mov
inc
mov
dec
pop
cmc
xor
adc
mov
jmp
sub
or
cmpsb
ffree
inc
push
inc
inc
jb
sub
pusha
cmp
jo
push
arpl
lea
xchg
jg
add
inc
mov
fimuls
fstpt
jno
pop
fisubrl
inc
lea
push
lock
das
daa
aaa
xchg
mov
test
ret
icebp
rcrl
mov
std
push
adc
mov
into
sbbl
fstpt
lods
lret
add
mov
push
jo
xlat
jp
mov
xlat
jecxz
rcrb
cld
paddq
push
test
je
shrl
pop
clc
add
and
int3
ljmp
cltd
lods
mov
fistpll
testl
mul
mov
mov
cltd
cltd
sub
mov
ljmp
push
mov
inc
fnsave
out
test
dec
ljmp
or
or
daa
stos
fidivl
adc
dec
shlb
incl
divb
cwtl
sbb
pop
ret
xor
pop
sbb
xlat
lret
cld
pop
jb
insb
ja
insb
test
inc
out
in
or
mov
arpl
scas
mov
fbld
std
fadds
jns
dec
repnz
pop
rclb
icebp
mov
pop
xchg
addr16
add
fsts
mov
shrb
dec
loopw
jne
sub
pusha
cmp
lahf
xchg
xor
sbb
mov
mov
andl
out
pop
or
dec
in
pop
mov
nop
adc
lods
mov
aam
scas
idivl
jnp
lret
pop
mov
in
fs
into
xchg
xchg
addb
pop
sarl
or
pop
inc
push
inc
int3
int3
popf
pop
add
pop
inc
jbe
ret
fimull
add
inc
xor
mov
dec
pop
mov
shlb
mov
xor
loopne
fwait
inc
stc
hlt
cmpsl
int3
sbb
cmp
stos
sbb
inc
test
cmp
add
mov
int3
movsb
ja
pop
xlat
call
xchg
shlb
jo
fmuls
scas
push
and
cmp
adc
inc
ret
jbe
cwtl
into
jge
cmpsl
inc
enter
daa
into
add
cmp
lea
fisttpll
dec
mov
je
xor
add
out
and
pop
repz
fldenv
jecxz
sub
cmpsb
xor
jle
js
lahf
jmp
inc
sub
loope
jns
sub
jbe
cmp
scas
ds
or
mov
mov
dec
lret
sbb
adc
add
outsb
dec
xor
cmp
pop
outsl
jg
xchg
pop
ss
lcall
inc
fmul
or
outsb
test
sbb
fdivr
cmpl
mov
loop
mov
jnp
mov
pushf
hlt
and
inc
push
push
outsb
fnsave
or
fmuls
mov
scas
loope
add
inc
shll
mov
movsb
sbb
divl
xor
imul
outsb
data16
inc
shrb
cmp
adc
sbb
cmp
add
dec
and
fldcw
xor
int
or
sbb
into
fadd
addr16
int3
jp
loopne
fcompl
dec
jge
adc
pop
pop
imul
repnz
data16
cmpsb
lods
mov
arpl
sub
jl
sub
aam
fs
cmpsl
sti
mov
call
sub
cmp
dec
xor
add
and
fyl2x
pop
and
adc
mov
xchg
sub
sbb
sub
and
xor
pop
loope
loopne
ficompl
stc
lds
std
xor
in
xchg
mov
cmpl
jb
cmp
dec
xlat
cs
je
push
adc
and
jmp
add
mov
mov
fidivl
mov
rorl
daa
fldt
pop
pop
jge
ss
adc
and
fisubrs
push
mov
mov
fdivl
imul
sbb
std
cld
icebp
loop
movsb
int3
scas
cmpsl
int
mov
mov
pop
cld
jb
mov
mov
xchg
xchg
mov
pushf
outsl
mov
notb
shrb
jp
mov
aam
cmp
sbb
idivl
frndint
pop
clc
cmp
mov
ljmp
les
lahf
in
mov
lea
mov
add
push
cltd
pop
jae
test
push
sahf
mov
jge
push
jns
pop
fstpl
push
push
xchg
xchg
mov
and
adc
lcall
mov
inc
xchg
loopne
push
ret
adc
xor
or
sbb
xor
stos
cli
mov
outsl
sub
ds
pop
sub
push
pop
dec
jp
flds
ja
or
lock
sbb
push
push
js
add
adc
push
xchg
bound
aad
in
es
mov
jns
mov
xorl
jp
movsb
push
mov
das
ds
dec
movsb
mov
pusha
aad
mov
xchg
add
jmp
xchg
repnz
loope
sub
insb
out
push
iret
movsl
sub
and
and
jnp
xchg
cltd
jle
adc
in
mov
adc
loope
lahf
ret
rcrl
adc
inc
sbb
jae
jnp
push
or
adc
mov
inc
cmc
lret
leave
fiaddl
xor
mov
sbb
shrl
lea
adc
push
repnz
sub
adc
insl
arpl
rorb
scas
add
cld
cmp
aaa
lahf
lods
test
xchg
jge
add
ds
push
imul
dec
scas
jo
xchg
scas
cmc
ja
and
loop
movsb
and
movsb
jbe
ds
jge
cmc
ror
mov
sub
loopne
mov
jl
out
dec
sub
push
push
jecxz
dec
xor
pushf
repz
lahf
add
ficoml
adc
movsb
insb
addr16
mov
pop
cmpsb
mov
repz
and
inc
push
clc
mov
sub
cwtl
or
adc
or
jmp
fsubl
mov
cmp
dec
cmp
sbb
cld
int
jnp
cmpsb
xor
pop
leave
fcmovb
es
lods
scas
xlat
sub
lods
pop
lcall
nop
fdivl
aas
sub
jp
outsb
out
enter
jne
mull
repz
sbb
mov
dec
outsb
and
adc
jno
ror
jno
pop
fmuls
jns
imull
dec
lret
xchg
ror
or
push
dec
sbb
sub
xlat
add
test
xor
outsl
dec
mov
idiv
leave
sbb
and
test
ss
loope
sbb
push
out
dec
mov
xor
cmp
sahf
test
into
mov
out
loopne
dec
mov
adc
ja
imul
stc
xor
cmp
mov
xchg
mov
iret
imul
xchg
pop
adc
outsl
xor
xchg
stc
movl
icebp
je
sbb
jecxz
xchg
jmp
lret
sbb
cmpsl
popf
jns
mov
push
pop
pop
aaa
aaa
adc
or
jmp
sbb
arpl
pusha
dec
iret
aad
lods
and
lods
push
aas
mov
adcl
fidivs
inc
jecxz
push
add
xchg
mov
cwtl
pop
mov
pop
mov
sti
mov
fistpl
pop
dec
inc
fwait
add
add
in
jbe
pop
xor
mov
addr16
push
shll
push
push
imulb
cld
mov
dec
lahf
lret
adc
int3
int
mov
mov
add
popf
ret
fcmovne
loop
mov
mov
and
adc
fsubs
aam
mov
ret
jle
adc
jp
sub
shlb
js
sbb
push
lcall
mov
mov
jl
push
and
lods
test
js
add
mov
add
sub
cwtl
pushf
ffree
or
test
push
pop
xchg
cltd
negb
push
mov
pop
dec
pop
and
sbb
stc
xchg
es
test
incl
or
xchg
mov
fdiv
faddl
movsl
out
inc
pop
call
mov
dec
insl
filds
popa
cmp
push
add
test
push
lret
inc
scas
out
mov
inc
jno
movsl
push
push
xchg
jmp
dec
mov
jbe
mov
jle
add
jp
and
mov
fcomp
mov
sahf
xchg
pop
dec
sub
add
pusha
jo
mov
cld
out
xchg
mov
xor
pop
cli
dec
addl
out
fstp
sub
cmpsl
fninit
push
push
mov
pop
and
ljmp
mov
mov
in
jp
adc
mov
pop
inc
clc
stc
inc
and
mov
push
int
cli
popf
stos
lea
inc
je
fcmovnu
mov
jns
loop
mov
dec
jge
xchg
jp
scas
adc
shrb
repnz
leave
mov
cmp
sahf
pop
inc
rorl
or
mov
mov
pop
decb
mov
add
stc
pop
int3
jp
repnz
xor
add
ficoms
pop
scas
aam
out
sub
cmp
push
movsb
lods
pushf
cwtl
push
fistps
jbe
push
or
sub
enter
daa
int3
shlb
adc
and
jne
and
or
adc
push
in
xor
aaa
scas
sbbb
loop
test
outsl
or
mov
cmpsb
cmp
repz
inc
fistl
mov
test
loope
inc
inc
sub
lea
cmp
xor
aas
movsl
pop
loope
rcrb
mov
andb
sbb
mov
xor
iret
rcl
mov
sub
and
xor
iret
lcall
loope
and
xchg
sbb
lret
adcb
in
jg
pusha
jg
dec
mov
mov
push
mulb
loopne
sub
int
gs
fadd
inc
sub
sub
add
mov
insb
sbb
test
test
nop
sahf
in
adc
sbb
loop
pop
aas
stc
sbbb
adc
jmp
shrl
mov
and
stos
fsts
aas
addr16
xor
das
cmp
inc
mov
into
sahf
xor
cmc
pop
mov
mov
loope
adc
or
imul
fstp
data16
enter
sti
cmp
dec
call
lods
sti
into
sub
int
pop
outsl
dec
in
cmp
push
bnd
gs
xchg
icebp
ss
lock
mov
inc
push
aad
pop
sub
inc
jcxz
scas
out
and
and
jecxz
push
std
adc
dec
jmp
fnsave
aad
sub
mov
aas
pop
xor
dec
vaddsubpd
cmpsl
jecxz
aaa
enter
testb
xor
cmp
es
and
push
int3
sbb
aam
and
cltd
lock
icebp
push
das
les
mov
into
out
and
xchg
leave
roll
dec
test
dec
push
movsl
dec
lcall
mov
pusha
lahf
mov
enter
push
add
mov
pop
mov
or
mov
xor
test
adc
dec
sub
aam
ja
ret
or
sub
mov
xchg
frstor
sub
mov
jo
add
imul
daa
pop
and
mov
jae
test
xor
insb
mov
sub
bound
fucom
imul
jae
data16
cmpsl
call
pop
imul
xor
cmpsl
cmp
out
jnp
insb
xchg
insl
cwtl
and
mov
cld
sub
notl
pop
xor
mov
filds
or
mov
jecxz
ja
mov
mov
stos
outsb
fmuls
adc
fwait
js
scas
push
dec
or
mov
pop
lock
fwait
or
bound
cmp
xchg
mov
jns
sbb
sub
pushf
mov
push
mov
cmc
rorl
and
push
icebp
loope
sbb
shr
cltd
mov
fiaddl
mov
or
or
pop
fsubrl
out
out
insb
lock
xchg
jae
jle
sahf
xchg
in
fwait
push
adc
push
iret
lahf
jne
ret
push
pop
jnp
popa
inc
sbb
push
nop
dec
inc
popf
shll
filds
add
fisubl
stos
xchg
cmp
sbb
xchg
sub
scas
je
pop
push
lahf
lea
pop
fdivrl
sub
mov
hlt
mov
addr16
dec
leave
or
jb
sub
sbb
jecxz
add
dec
jne
fs
rol
gs
jo
pop
gs
mov
out
and
cmp
movsb
aaa
loopne
push
lods
mov
jge
aas
lock
daa
lret
jmp
inc
xor
jno
movsb
loop
pop
lcall
test
data16
sarb
lahf
inc
push
rcll
push
jmp
push
cmp
mov
xchg
sbb
lcall
pop
std
push
mov
loope
pop
mov
sub
cmp
push
xor
movsl
push
fldt
xlat
xor
mov
imul
adc
pusha
into
pop
sti
jno
sub
movsb
cmp
out
mov
fmul
mov
sub
insb
cmp
sub
pop
push
mov
in
fwait
mov
mov
and
jae
push
ja
ror
aas
aas
mov
andb
lret
or
mulb
cmpsb
mov
mov
sahf
sbb
xchg
cmp
stc
jl
or
loop
jl
stc
aaa
ret
movsb
fs
arpl
bound
fs
mul
outsl
out
out
cli
jb
lods
xor
pop
sbb
or
adc
fucom
fcomps
pop
stos
cltd
xchg
adc
sbb
add
cmp
decl
pushf
lods
je
mov
xlat
in
fnstcw
dec
push
mov
movsl
adc
mov
fidivl
inc
mov
nop
int3
xor
dec
dec
test
pop
stos
add
xchg
add
les
aad
repz
xor
mov
mov
addr16
rorl
adc
inc
in
pushf
xchg
mov
jmp
hlt
scas
cs
dec
aad
or
inc
aam
scas
aas
testl
jg
cmp
cmpsb
je
cmpsb
clc
jecxz
pop
aad
push
xchg
lea
mov
cwtl
iret
xor
jae
jbe
pop
cmpl
mov
pop
pop
std
inc
test
sarl
mov
aam
mov
jge
push
rcl
in
pusha
divb
fists
lret
mov
aaa
xor
cld
repz
lret
shlb
mov
pop
mov
pop
push
mov
shl
dec
xchg
sub
es
xchg
mov
xorb
out
mov
stos
ljmp
add
add
mov
mov
ja
sysret
ja
add
xor
push
inc
leave
mov
cmp
push
ret
fisttpll
mov
test
mov
xchg
adc
sbb
xchg
xlat
rcrl
xlat
out
mov
inc
js
fisubrs
leave
xchg
mov
ret
add
jne
xor
and
cmp
xor
aas
push
mov
js
cltd
dec
jae
fcompl
mov
dec
push
pop
mov
mov
dec
fwait
cmpsl
sbb
out
aas
dec
add
es
out
out
jp
mov
jns
push
js
pushl
xchg
mov
pop
mov
je
out
sub
pop
mov
in
adc
push
imul
les
insl
lock
cmpsb
syscall
fistpll
push
or
nop
fisubl
andl
out
xor
mov
mov
stos
jns
xor
std
mov
insb
pop
mov
dec
jle
shl
in
and
cmp
jecxz
ja
ret
jnp
mov
int
cmp
jae
insb
jnp
push
pop
lcall
adc
inc
jb
loopne
sbb
adc
in
mov
imul
scas
xlat
cwtl
jbe
out
push
shl
test
jle
sub
ja
pop
hlt
sarl
mov
fnstcw
loope
sub
shrl
or
dec
add
mov
push
mov
pop
xchg
mov
fidivs
push
or
or
and
in
cmp
movsb
ret
push
jge
shlb
in
jge
cmp
xchg
lock
lret
cmp
stos
jno
dec
fstpt
push
dec
js
pop
push
mov
cli
xor
insl
bound
lahf
bound
push
push
mov
out
mov
xchg
loop
cmpsb
inc
ret
es
subl
inc
push
and
sub
hlt
adc
and
push
ds
mov
movsl
and
inc
push
ss
push
sbb
decb
popl
das
pop
and
sub
or
pop
xor
lcall
push
fdivl
lcall
pop
adc
dec
push
add
push
movsb
mov
add
mov
add
mov
popa
icebp
and
or
jp
aam
cmpsb
cld
fdivrs
fwait
mov
lret
xchg
rorl
in
mov
ss
test
add
xor
outsl
ljmp
stc
out
lea
adc
sub
shrd
icebp
cmp
out
jns
cli
movsl
xor
popf
cmp
or
mov
ret
insb
cmpsb
cmc
call
push
cmp
push
and
data16
imul
mov
subb
cmp
mov
sub
sub
dec
push
mov
adc
inc
cld
mov
gs
call
orb
fildl
subb
sbbb
int3
repz
add
sbb
sbb
xor
iret
pop
je
popf
adc
mov
sarb
mov
aad
push
mov
out
repnz
xchg
dec
loope
test
enter
shlb
in
popa
ret
xchg
pop
mov
sbb
mov
test
adcl
pushf
jmp
pop
or
testb
pop
lock
out
addb
mov
cmp
adc
ret
sahf
shll
es
push
out
cwtl
dec
and
inc
xchg
cmpsl
leave
lcall
push
jmp
test
jge
mov
mov
mov
pop
sarb
ret
ljmp
add
stc
clc
sub
xchg
pop
test
push
cs
and
test
dec
and
ds
dec
pcmpgtd
jge
xchg
mov
xor
pop
and
stc
mov
xor
les
jno
add
cmpl
pop
dec
xchg
hlt
stos
test
out
inc
push
inc
xchg
sti
lock
add
cmp
lcall
sbb
popf
inc
cmpsb
or
sbb
mov
jnp
or
push
sahf
pop
sbb
cmp
dec
inc
jecxz
inc
fprem1
das
or
and
fs
add
xor
sahf
fsubrl
jns
jo
in
mov
mov
and
mov
outsl
mov
mov
mov
lods
out
leave
mov
inc
dec
xor
int3
aaa
jl
inc
inc
rcr
pop
xchg
cltd
xchg
dec
fs
cltd
into
xchg
mov
loope
out
xchg
sub
pop
xor
stos
in
repnz
insb
sbb
pushf
jle
std
lock
or
adc
jle
ret
ja
jmp
pop
and
lcall
pop
mov
push
pusha
inc
icebp
inc
mov
int
out
out
loop
xchg
movsl
sub
popa
push
mov
sbb
cld
scas
or
or
rcl
jle
out
jp
hlt
push
sub
arpl
lock
inc
fsubl
popa
sbb
push
fbstp
fwait
call
fiadds
fildll
int3
cmp
jle
pop
fistl
jae
jmp
clc
pop
mov
and
cmc
mov
cwtl
and
movsb
dec
arpl
int3
adc
jbe
pop
cmp
sbb
daa
leave
in
cmp
jp
mov
sahf
dec
out
stc
push
outsl
ss
xor
or
lahf
orl
test
rcl
or
je
cmpsb
testl
movl
and
out
adc
sub
inc
cmp
pop
clc
ja,pt
add
sub
sti
shrb
loope
xchg
inc
mov
sbb
or
pop
xor
test
out
fcomps
les
xchg
loop
pop
mov
mov
pop
rolb
fsubl
add
outsb
jae
mov
lahf
test
andb
jg
push
sbb
mov
mov
les
or
movsb
ror
sahf
lods
fdiv
and
push
inc
lret
loope
and
lods
mov
rcrl
arpl
jae
jne
imul
mov
xor
and
cld
xor
push
adc
xchg
pop
mov
and
lahf
cli
fsubrs
sti
xor
fstps
cmp
sub
and
into
inc
clc
jmp
loopne
ret
jge
jmp
add
imul
mov
mov
inc
cld
sarb
jbe
xlat
push
xchg
sub
xchg
sti
sbb
pop
sub
xchg
or
mov
add
mov
repz
dec
xchg
not
fwait
sbb
xchg
pop
inc
mov
or
scas
aad
xchg
push
aad
in
insl
clc
jmp
jo
cs
cmp
aad
stc
jb
or
sub
xor
test
dec
sub
sbb
jo
inc
pop
pop
out
lea
add
ret
lea
