add
add
inc
push
push
inc
push
imul
push
push
add
and
pop
xor
xor
movzwl
xor
movzbl
lea
lea
imul
mov
mov
and
pop
xor
pop
mov
sub
mov
movl
and
xor
movl
inc
and
add
lea
movl
add
sub
lea
lea
push
neg
mov
mov
push
and
lea
mov
and
push
sub
xor
and
mov
shll
neg
xor
lea
lea
push
lea
call
pop
not
mov
lea
mov
add
sub
and
ss
inc
mov
inc
dec
and
add
not
dec
add
movsbl
inc
and
lea
and
lea
mov
neg
mov
inc
mov
neg
movzwl
sub
or
add
and
mov
and
lea
or
inc
lea
mov
lea
neg
lea
lea
push
sub
push
push
neg
mov
sub
inc
mov
lea
inc
xor
lea
lea
movsbl
add
lea
inc
inc
or
xor
inc
lea
and
add
push
lea
addl
mov
mov
inc
and
and
lea
sub
mov
or
lea
xor
sub
movsbl
sub
push
inc
push
add
xor
mov
push
add
push
push
mov
neg
push
mov
or
neg
sub
push
lea
lea
mov
sub
and
add
mov
xor
lea
or
and
movl
lea
add
push
mov
sub
mov
push
lea
and
push
add
or
push
inc
imul
push
mov
mov
push
lea
imul
push
or
or
push
sub
and
push
add
and
push
lea
inc
addb
mov
inc
mov
not
add
push
lea
call
xor
push
lea
mov
call
not
or
or
movswl
imul
xor
and
imul
movzbl
mov
and
lea
or
lea
pop
imul
mov
mov
movswl
xor
mov
movswl
mov
and
xor
lea
and
imul
and
mov
and
and
sub
mov
sub
add
and
lea
mov
and
and
neg
mov
movzbl
and
add
lea
sub
lea
lea
lea
add
add
lea
mov
sub
mov
xor
mov
and
and
mov
imul
inc
lea
sub
mov
mov
movswl
inc
mov
sub
mov
sub
mov
and
and
and
inc
sub
lea
imul
lea
neg
or
mov
inc
xor
mov
add
imul
and
not
or
lea
or
lea
add
sub
add
lea
mov
add
lea
add
movzwl
lea
lea
inc
cmpb
je
mov
mov
mov
movzwl
xorl
add
lea
mov
add
neg
mov
lea
imul
mov
mov
mov
mov
mov
shl
mov
lea
mov
lea
movzwl
push
mov
and
lea
sub
lea
popl
movzbl
mov
and
lea
sub
mov
mov
movswl
mov
mov
add
sub
add
pop
add
jmp
lea
push
or
mov
push
mov
add
push
inc
sub
push
inc
and
pushl
inc
and
pushl
add
mov
mov
and
and
push
movzwl
sub
call
not
imul
mov
mov
add
lea
xor
pop
add
lea
pop
xor
sub
pop
or
and
sub
imul
movswl
mov
movzbl
sub
mov
lea
imul
mov
add
mov
mov
lea
lea
xor
inc
lea
dec
sub
and
xor
imul
lea
mov
sub
mov
mov
inc
imul
add
add
add
add
sub
lea
mov
or
and
incb
add
xor
inc
add
mov
xor
mov
cmp
jb
add
push
and
imul
push
or
inc
push
add
and
lea
lea
and
mov
lea
sub
mov
inc
sub
mov
lea
mov
neg
imul
sub
mov
add
lea
movzbl
add
mov
mov
movzwl
or
lea
sub
mov
add
imul
lea
lea
mov
inc
sub
lea
and
neg
mov
imul
imul
lea
mov
xor
imul
lea
mov
inc
mov
xor
sub
imul
lea
add
mov
mov
lea
add
xor
not
mov
xor
mov
mov
xor
imul
sub
push
and
lea
mov
or
lea
mov
inc
inc
movzbl
sub
lea
push
lea
lea
movzbl
or
and
add
and
or
add
inc
lea
pop
mov
and
movzbl
sub
mov
inc
and
mov
mov
mov
movsbl
cmp
jb
mov
xor
inc
neg
mov
mov
imul
inc
lea
inc
push
mov
neg
lea
or
mov
mov
movzbl
add
lea
imul
mov
mov
lea
add
mov
not
and
pop
movswl
mov
mov
inc
add
test
jne
and
xor
lea
lea
xor
lea
add
pop
add
lea
mov
neg
mov
mov
imul
lea
test
jbe
movswl
inc
mov
inc
movzbl
movsbl
and
pushl
mov
xor
pop
sub
mov
movzbl
mov
lea
add
and
sub
movzbl
sub
and
mov
mov
sub
mov
mov
mov
add
sub
lea
add
inc
imul
movb
lea
mov
dec
and
inc
sub
mov
and
mov
lea
add
xor
and
or
add
add
or
lea
lea
mov
movb
add
inc
mov
and
inc
and
not
mov
sub
sub
neg
lea
imul
mov
lea
xor
not
inc
add
lea
lea
movzbl
mov
inc
lea
lea
mov
movzbl
and
mov
push
mov
add
xor
lea
and
dec
not
add
mov
xor
lea
inc
mov
lea
add
add
or
neg
inc
lea
pop
and
lea
inc
mov
lea
dec
jne
and
pop
sub
lea
pop
lea
xor
pop
add
movzwl
add
movzwl
or
pop
sub
lea
add
and
lea
push
imul
ret
mov
mov
mov
lea
pushl
and
and
push
lea
and
movzwl
xor
mov
mov
lea
mov
neg
and
imul
mov
imul
and
add
mov
lea
cmp
je
mov
add
mov
jmp
inc
shl
inc
add
lea
inc
and
mov
mov
and
lea
imul
mov
mov
mov
not
mov
add
and
lea
sub
xor
push
movswl
lea
mov
imul
mov
pop
not
imul
push
neg
mov
pop
inc
inc
lea
lea
and
cmpb
je
movzbl
sub
mov
lea
push
xor
sub
call
sub
mov
push
or
lea
call
lea
lea
sub
je
and
call
imul
lea
call
inc
lea
call
sub
and
call
and
not
call
mov
add
call
movsbl
mov
call
xor
add
call
neg
and
call
lea
add
icebp
lea
add
int3
mov
xor
int3
jne
xor
pop
mov
not
sub
lea
add
call
lea
mov
mov
lea
sub
ret
imul
xor
jmp
nop
lea
push
sub
jne
add
add
inc
cltd
dec
rorl
out
das
ret
adc
add
fidivs
pop
adc
or
mov
lret
repnz
scas
cmp
into
pop
hlt
nop
pop
in
push
dec
ss
pop
cmp
lea
fcoms
jno
stos
call
xor
mov
scas
xchg
cmc
inc
jle
adc
test
jns
and
cmp
adc
insl
addr16
loopne
xor
inc
jecxz
sbb
icebp
sbb
out
mov
int
jg
es
or
push
movsb
jecxz
ljmp
cmc
pushf
gs
pop
and
in
inc
sbb
fwait
imull
inc
andl
ret
inc
adc
sbb
out
into
mov
mov
mov
push
cmpsb
mov
sub
fcompl
std
out
sarl
pop
push
leave
inc
push
stos
push
lret
xchg
add
lahf
outsb
and
