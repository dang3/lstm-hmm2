mov
in
call
mov
mov
shl
add
sar
js
rep
or
incl
rep
pop
ret
nop
jmp
mov
pop
jl
xor
and
and
and
push
outsl
aas
xor
push
mov
leave
call
push
mov
mov
inc
call
lea
dec
jb
insb
pop
push
arpl
mov
jbe
ja
jo
dec
insb
insb
insl
js
popa
je
gs
pop
jo
arpl
jno
push
ja
mov
fs
push
imul
addr16
bound
popa
dec
insl
fs
fstpt
adc
push
jo
jbe
push
es
outsl
jno
dec
gs
inc
jnp
std
fildll
push
imul
arpl
insw
imul
jae
std
ja
addr16
push
jne
insl
jg
inc
jg
xchg
insb
sbb
inc
fdivrp
call
xor
outsl
insl
pushw
outsb
jo
xor
imul
insl
jle
ds
fcmovne
xchg
xor
inc
arpl
jle
int
ret
js
arpl
jns
outsb
pop
outsl
dec
popa
pop
sti
fldt
data16
ljmp
addl
es
push
outsl
dec
jle
cmp
or
push
adc
data16
addr16
arpl
gs
arpl
mov
pushfw
std
jae
dec
insl
addl
jmp
add
out
push
push
add
mov
mov
mov
decl
adcl
movb
adc
or
shlb
mov
add
in
mov
cs
je
xor
mov
cmp
je
xor
mov
adc
and
mov
xchg
in
std
cs
xor
sbb
push
lock
rorb
pop
mov
and
or
ret
imul
and
pop
idivb
lahf
xor
push
push
push
rcrl
ss
lret
add
pop
jnp
push
test
inc
sbb
sub
and
cmp
mov
cmp
sbb
jb
inc
mov
push
push
sbb
and
fsts
adc
adc
and
jb
sbb
add
xchg
dec
jb
xor
fdivrs
xor
call
or
push
inc
push
fsts
inc
cmp
sbb
lcall
inc
pushl
inc
lcall
mov
mov
dec
leave
iret
pusha
out
push
call
xchg
iret
and
out
out
adc
and
out
out
cmp
dec
loope
out
pop
push
push
pop
bnd
push
mov
add
add
jb
outsb
add
xlat
clc
xor
xor
cs
or
add
inc
bound
pop
push
lods
imul
popa
add
gs
insb
sub
sbb
ret
jne
gs
push
cmovne
je
push
jmp
adcl
pop
mov
je
dec
call
shr
push
aas
inc
je
jb
bound
jae
cli
bnd
pop
cmp
push
popa
inc
outsl
jb
fadds
imul
je
jae
cld
push
insb
cmp
insb
outsl
jae
dec
xor
gs
pop
lcall
pop
push
jo
imul
push
xor
push
pop
push
out
leave
mov
pushf
rep
pop
fucomi
out
inc
incl
cmpl
movsb
scas
mov
jne
popa
ret
mov
ret
adc
mov
sub
mov
add
cwtl
add
jmp
inc
jg
rorb
lret
or
jmp
mov
mov
and
add
cmc
mov
adc
and
loop
movzwl
add
mov
das
jl
jge
push
xor
dec
jne
xchg
mov
mov
add
test
jne
fildll
pop
jg
popf
test
or
add
and
inc
je
xorb
jnp
or
jmp
add
jmp
adc
sub
sub
sub
jmp
int3
insb
dec
testb
movups
jmp
sub
repz
mov
cmc
mov
add
jmp
out
sub
aaa
push
sub
je
push
push
mov
xor
xor
push
cs
push
mov
cmp
pop
loopne
aam
ud0
lea
mov
push
fwait
xor
mov
dec
les
test
adc
cmp
sbb
inc
cmp
add
inc
jle
fnsave
sbb
push
sub
jne
ret
cs
call
test
and
fdiv
rcr
and
into
xor
xlat
int
xor
jg
and
lahf
sti
out
js
mov
test
cld
mov
mov
cmp
movb
mov
add
push
jle
insb
jg
add
add
adc
add
lods
sti
out
jmp
xchg
xor
sub
jmp
add
xchg
and
adc
fistl
outsl
jb
mov
int
jnp
mov
or
adc
sbb
mov
push
cmp
push
mov
and
pop
test
push
imul
sbb
mov
xor
sbb
add
cmp
fnsave
insb
mov
or
je
daa
out
pop
movsl
out
mov
or
inc
sarl
mov
movb
loopne
testl
jbe
ret
pop
leave
inc
clc
and
pop
sub
or
test
mov
daa
decb
jne
jp
ret
xchg
outsl
sub
jle
xor
xor
inc
clc
sbb
je
sub
movswl
or
in
cmp
cmp
push
mov
in
pop
jmp
inc
mov
pop
ret
mov
fimull
div
test
jne
imul
jmp
ret
sbb
mov
push
cld
mov
arpl
jle
push
cmp
call
jmp
dec
test
subb
lea
cmp
adc
add
cmp
jbe
xchg
adc
or
cmpl
inc
divb
push
daa
inc
adc
pop
adc
nop
fistl
push
cmp
push
sbb
and
sbb
cmp
mov
and
adc
pop
or
lods
pop
mov
dec
ret
out
sbb
jb
sub
push
ret
xor
jo
test
loopne
or
xorl
test
cli
pop
jl
or
sbb
mov
lret
mov
cli
xchg
push
and
mov
mov
and
mov
ret
push
push
dec
lahf
imul
aas
test
dec
cmp
push
movl
mov
fmuls
sub
cmp
loopne
inc
and
or
or
inc
daa
jns
daa
xor
xor
cmp
daa
jns
je
push
jns
daa
jns
push
push
push
movsb
push
cmpsb
push
add
movsl
lea
mov
adc
mov
movb
adc
push
jmp
stos
test
addr16
or
sbb
jle
push
lret
leave
xchg
and
aas
inc
lcall
sbb
ret
js
addr16
jae
je
movsb
fwait
mov
sbb
push
dec
test
jl
je
and
inc
adc
adc
and
pop
or
inc
xchg
loope
outsb
fwait
mov
xor
fs
loopne
je
adc
mov
dec
or
mov
adc
sahf
in
rol
fs
or
jae
mov
push
push
push
cmp
insb
cmp
xlat
sbb
cmpsl
sbb
ja
jmp
sbb
and
enter
or
push
dec
sbb
push
mov
sbb
adc
mov
and
jle
inc
ja
lret
sbb
sub
add
loope
loopne
push
adc
and
insl
push
jb
nop
add
pop
and
popa
fs
imul
dec
jo
outsb
jmp
les
push
imul
push
daa
push
outsb
mov
imul
pop
loop
or
jne
inc
insl
outsl
fsubrs
idivb
pmaxub
mov
inc
pop
sub
insb
dec
outsl
out
dec
gs
je
neg
pusha
jns
xor
dec
xchg
imul
dec
popa
inc
outsb
je
jg
les
dec
ja
add
into
cli
sbbl
clc
mov
pop
mov
push
sbb
or
divl
cmp
orl
clc
xor
push
mov
in
je
xor
mov
cmpb
inc
orl
fmull
xlat
mov
jne
jne
jno
das
popa
ret
xorb
mov
mov
inc
inc
mov
push
push
jne
jg
lds
or
rolb
push
jnp
jmp
aaa
fdivrl
les
push
movl
xor
mov
sbb
test
lock
or
mov
xor
mov
jle
add
jne
sbb
xor
dec
mov
or
mov
gs
mov
in
dec
and
cld
xchg
imul
mov
push
pushf
pusha
push
int3
negb
mov
lods
fiadds
mov
push
pop
ja
outsl
xchg
push
and
mov
jnp
sbb
xchg
add
pop
inc
add
adc
add
add
test
inc
shll
loopne
or
mov
sub
insb
adc
cmpsb
imul
add
or
mov
mov
lahf
cmp
dec
push
or
fiaddl
enter
enter
js,pn
leave
lock
mov
cvtps2pi
xchg
and
xor
adc
dec
aaa
jbe
add
jns
dec
fwait
ja
mov
jbe
popa
inc
pop
nop
xor
cmp
out
or
xchg
pop
loope
outsb
das
fistpl
pop
adc
popa
xchg
pop
negb
setno
test
or
pop
cmp
test
out
stos
and
sbb
or
cltd
or
fadds
mov
or
iret
nop
and
add
xchg
sbb
jge
mov
daa
add
daa
add
and
add
fcoms
adc
sbb
push
pop
xor
fldcw
push
adc
insb
add
sub
pop
xchg
cmc
js
insb
in
ljmp
jae
dec
in
ficomps
push
add
add
dec
add
inc
inc
dec
dec
dec
push
add
inc
add
push
add
dec
add
add
xchg
std
in
dec
dec
inc
adc
sub
xchg
das
out
in
add
sbb
cmc
add
push
push
add
jbe
jmp
sub
sbb
push
cmc
mov
out
negb
int3
jmp
jecxz
fwait
sti
push
mov
xchg
ljmp
mov
push
push
or
add
push
aas
fdiv
pusha
aas
xchg
push
filds
cli
add
pop
sub
add
mov
fcomi
cmp
sbb
mov
in
ljmp
lret
add
bound
and
or
add
lret
daa
sub
and
and
int
pop
cmp
adc
adc
inc
and
test
adc
divb
sbb
mov
jnp
add
inc
divb
mov
insl
inc
pop
rcll
outsl
add
pop
div
mov
mov
or
push
inc
ret
jl
out
popa
shlb
sbb
inc
ret
daa
push
push
mov
mov
outsb
pop
push
pop
adc
fisttps
test
add
ret
icebp
lcall
inc
push
inc
adc
out
fwait
jmp
sbb
fisubrs
or
negl
or
aaa
daa
inc
sub
inc
sub
gs
mov
mov
jne
out
push
push
jae
adc
sbb
loope
data16
arpl
mov
cmp
popa
jae
pop
adc
add
test
gs
mov
movsl
insb
adc
scas
and
sbb
pop
pusha
lret
xchg
ja
adcl
jle
pop
mov
popa
dec
add
and
fld
loope
and
push
fcomi
dec
pop
fld
push
loop
outsl
lret
push
fadds
lret
out
lret
incl
movsb
lret
or
je
cld
add
add
cmp
jg
jo
add
flds
inc
data16
and
clc
mov
sub
or
lods
xor
adc
mov
mov
sti
ja
push
dec
scas
jb
add
fistpl
or
sub
or
idivb
or
lret
xor
call
sbb
and
fidivs
negb
or
inc
xchg
fnstsw
dec
add
fcmovnu
push
das
inc
test
cltd
pop
mov
mov
sub
out
mov
adc
add
arpl
fildl
cbtw
xor
in
dec
fdivrs
pusha
std
cltd
icebp
and
push
mov
cmpsb
pop
out
xchg
nop
iret
add
xor
int
rclb
orb
pop
pusha
test
pop
lods
xchg
jae
lock
lods
adc
and
or
loop
outsb
push
jbe
sbb
ret
jmp
add
pcmpgtd
pushf
aaa
mov
or
fs
into
add
lcall
and
pop
adc
and
adc
mov
add
add
in
fcoms
cwtl
stos
stos
inc
inc
addr16
std
mov
xor
and
inc
fnstcw
xchg
daa
pop
inc
mov
clc
dec
int
clc
adc
repnz
xchg
scas
ret
xor
shrl
in
jge
xchg
xor
scas
push
rorl
pop
divb
andl
out
sub
mov
ret
scas
les
adc
mov
push
movsb
add
movl
push
mov
mov
cmpsl
sti
or
std
and
daa
xor
or
dec
rorl
aas
cmpsl
push
arpl
adc
adc
test
mov
ret
cmp
inc
and
daa
jne
out
push
jbe
mov
dec
jg
jge
xchg
loope
mov
xchg
inc
sbb
mov
sahf
mov
mov
sub
xor
push
xor
and
jge
pop
sbb
adc
cmp
das
int
ret
jne
cmpsb
add
fsubl
push
test
pop
lds
or
fstl
or
jle
imul
cmpsb
mov
and
add
popf
jl
lods
fcmovnu
imulb
xchg
out
xchg
jbe
cmpsb
out
lcall
insb
sbb
xchg
jbe
add
ja
outsb
and
cmpsl
int3
xchg
dec
es
lods
inc
enter
iret
push
xor
push
inc
es
and
sbb
movsb
xor
cs
and
clc
sub
in
pop
shrl
adc
and
mov
daa
ja
push
fsubrs
dec
jmp
or
cmpsb
shll
ja
sbb
rclb
and
hlt
adc
std
cmpsb
loope
call
jbe
xlat
hlt
mov
jle
adc
dec
arpl
push
sub
inc
inc
insl
ja
jl
cli
xchg
add
xor
push
ret
jne
scas
shrl
loop
loopne
icebp
jmp
mov
out
jno
add
out
jno
adc
clc
pop
js
xor
mov
out
or
lds
jbe
fadds
cmp
jbe
adc
popa
push
sub
rol
ja
rcrl
outsb
lds
test
inc
lret
pop
fimuls
mov
in
jl
inc
adc
or
lods
jb
jbe
or
mov
lret
mov
sbb
ret
mov
insb
fistps
sbb
cmpsb
mov
gs
clc
mov
xor
fwait
sti
ja
mov
mov
jl
out
xor
pop
test
push
fiaddl
jg
mov
mov
test
int3
cmp
adc
imul
add
cmp
sti
adc
and
mov
cmc
js
mov
mov
imul
sbb
cmp
lods
add
and
xchg
mov
dec
xchg
dec
push
xor
fiaddl
and
adc
xchg
stos
sarb
testb
mov
pop
je
scas
mov
fsubl
mov
dec
daa
mov
pop
clc
aam
jmp
fildll
adc
mov
pop
dec
push
push
dec
shl
ficoms
dec
data16
loop
ja
sub
movsb
add
lds
ror
dec
add
int
out
mov
sqrtps
test
js
jnp
shll
mov
lahf
dec
and
rcl
aas
imul
out
dec
inc
cmc
and
lods
aaa
subl
ret
jp
lcall
pop
xorb
out
dec
cmp
and
rolb
dec
dec
dec
lret
mov
sub
add
outsb
scas
jp
sbb
mov
shufps
mov
shll
add
xlat
daa
das
xor
ja
je
out
sbb
aas
mov
and
out
mov
xor
add
shrb
insl
push
add
mov
pusha
push
jbe
fdivr
jg
lret
mov
push
mov
pusha
fistpl
and
xchg
or
fidivl
addr16
sub
sar
jecxz
inc
test
add
fsubl
movq
rorl
sub
mov
addr16
in
aaa
push
mov
imul
jne
and
cmp
test
mov
sub
xchg
cmp
cmp
dec
movsl
fstps
or
cmc
rcrb
adc
in
fstl
cwtl
push
xchg
cmp
cmp
mov
lods
aam
inc
or
fildl
sbb
std
movsb
dec
inc
int3
xor
mov
rcr
jmp
in
shrl
mov
or
cmp
and
jp
add
das
mov
mov
cmpsl
mov
testl
in
mov
lret
sub
and
mov
enter
xchg
sbb
cmp
fwait
es
jo
fisttpl
outsl
add
mov
mov
mov
lret
add
cmp
cmpsl
arpl
arpl
inc
cmp
aam
xchg
jno
enter
fistpl
dec
cmp
dec
xorl
push
mov
and
xor
sub
xlat
int3
cwtl
repz
and
test
hlt
sbb
int3
and
pop
movsl
xchg
jns
sub
aas
and
lock
fistpl
add
iret
push
shrl
push
and
xchg
cs
mov
dec
movsb
and
push
cmp
dec
fcoml
sbb
xor
cmp
sbb
inc
xlat
push
push
adc
add
outsl
fdivrs
push
and
insl
jnp
mov
add
adc
fucomip
pop
mov
iret
loop
rcr
mov
xlat
sarl
mulb
xchg
into
and
out
add
roll
lock
cmpsb
lret
dec
push
pop
push
push
push
or
mov
push
pop
pop
stos
or
fnstcw
rorb
inc
or
add
cltd
jb
outsb
adc
pop
mov
fstpt
ret
cmp
fidivl
and
mov
inc
mov
es
or
hlt
ss
iret
test
stos
or
inc
push
inc
mov
adc
push
mov
jp
mov
mov
jnp
movsl
sbb
sub
stos
jl
call
and
cmp
or
add
push
adc
stos
lea
add
xorb
testl
inc
mov
adc
inc
or
and
call
pushf
jnp
mov
jp
push
or
repnz
mov
push
out
stos
pop
imul
push
mov
jg
mov
call
fsubs
adc
pop
pop
adc
mov
xchg
fs
add
sub
addl
adc
jg
push
pop
xor
shll
push
adc
out
push
out
adc
sub
push
push
dec
pop
sub
xchg
daa
sbb
xor
loope
add
pusha
inc
and
mov
mov
fcmovne
jge
xchg
pusha
cmp
or
fs
outsl
inc
add
mov
test
jb
rolb
ja
aam
pop
in
mov
lahf
fdivs
xchg
dec
or
shrd
fsubl
jne
push
cmp
mov
or
adc
cwtl
sti
cwtl
cltd
push
mov
mov
jbe
cli
js
jb
push
lods
adc
add
add
mov
pop
sti
mov
xlat
jno
jg
popa
jecxz
subl
aad
add
loope
mov
mov
adc
mov
sbb
in
jle
fs
sbb
aas
mov
dec
insl
jae
cmp
xor
jle
es
sbb
aaa
aam
loope
lea
daa
mov
insb
mov
fmuls
push
adc
xchg
stos
xchg
dec
lahf
popa
add
aam
add
pop
adc
push
add
xchg
jne
xor
xchg
sub
push
or
or
aas
xor
data16
sbb
lock
mov
ret
or
push
into
ret
and
push
sbb
add
sbb
push
or
imul
adc
idivb
leave
por
push
cmpsl
pop
jmp
ja
in
out
notl
sub
adc
adc
inc
sbb
loopne
fwait
dec
add
loop
rcrb
das
or
lods
movsbl
insl
mov
jno
lcall
pop
adc
pop
fdivrs
in
fidivs
cli
iret
loope,pn
enter
ficomps
adc
xchg
mov
sub
shl
test
push
add
inc
mov
pusha
fcompl
mov
sbb
fnstenv
fsubrs
cmp
lock
insl
cmp
into
cs
hlt
shlb
mov
rolb
test
adc
adc
cmpsb
repnz
inc
push
or
and
pop
mov
pusha
cmp
leave
lret
in
bound
iret
in
sub
aaa
daa
add
stos
test
sub
cmp
ret
pop
scas
cmp
fisttpll
adc
add
or
adc
popfw
dec
add
andl
pusha
shlb
xor
lds
dec
test
push
testb
push
pop
adc
test
mov
test
jle
inc
xchg
sahf
mov
and
jns
dec
xor
cmp
jbe
cltd
bound
jge
mov
lods
gs
fidivs
fwait
imul
lcall
jge
mov
loopne
inc
repz
hlt
and
in
sti
iret
cs
dec
sbb
mov
push
ljmp
adc
push
fbstp
shlb
mov
sbb
pop
popf
fildl
and
jecxz
push
aas
cmpsl
pop
fcomps
cmp
rcrb
xchg
pop
xchg
xchg
sub
cs
xor
inc
push
cmpl
mov
aaa
cmpsl
pop
jle
mov
push
ss
cmp
adc
ret
pop
mov
insl
inc
call
jle
arpl
fstps
inc
pop
enter
andl
ljmp
sub
xor
in
adc
jge
bound
xorl
fcmovnu
cmp
je
push
mov
pop
popa
mov
pop
jb
and
jecxz
xchg
lret
and
sbb
fsubs
add
push
int3
pop
jbe
js
or
test
sub
gs
mov
lods
add
jo
push
lret
pop
cmp
ret
fisubl
and
pop
jmp
dec
ja
loop
popf
inc
pop
pop
push
sub
sub
test
dec
add
aam
test
mov
mov
inc
stc
jnp
adc
xor
ret
cwtl
fnsave
cmp
ret
xor
push
ss
js
xor
ds
shrl
iret
cmp
xchg
mov
pop
sti
enter
sub
dec
out
sub
add
fs
push
mov
rclb
pop
add
in
es
test
jbe
and
fldl
xor
dec
lahf
push
lcall
addr16
sbb
das
push
jp
scas
stos
xchg
sbb
lcall
aam
pop
jp
sbb
push
and
imul
sbb
sub
movl
mov
add
cmp
mov
scas
bound
or
xor
cmp
pop
cmp
fsubs
xchg
pop
into
mov
jo
test
pop
das
inc
popf
inc
hlt
adc
iret
sbb
push
mov
es
pop
leave
shrb
mov
mov
cwtl
dec
mov
rcll
fs
fcmovbe
add
push
int3
scas
xchg
sbb
mov
enter
fucomp
les
mov
inc
inc
out
cmovae
mov
sbb
xchg
sahf
sti
add
rorb
and
cmp
leave
mov
jecxz
or
rorb
orl
xchg
aaa
jbe
push
std
ret
and
pusha
sbb
ds
jle
dec
sbbb
je
daa
cmp
lea
sahf
jb
int3
push
cmp
dec
icebp
out
inc
mov
mov
arpl
fildll
pop
lods
or
stos
mov
nop
out
mov
jne
sbb
mov
adc
call
mov
movsb
push
xorb
scas
jg
cs
adc
pop
mov
lods
mov
mov
mov
aam
adcb
lods
imul
rcrb
cmpsl
mov
daa
push
fisttps
shlb
jo
cmp
sub
sbb
adc
or
lcall
push
aas
mov
sub
scas
pop
mov
outsb
push
pop
iret
pop
das
ljmp
mov
xor
insb
mov
adc
xchg
bndldx
fsubrs
mov
pop
lret
jnp
mov
xchg
clc
cmp
mov
testl
adc
bound
inc
andl
and
adc
in
inc
xor
out
shlb
mov
loopne
clc
adc
in
sub
ja
push
lods
xor
rorb
xor
leave
scas
data16
mov
fsubs
push
push
xor
xchg
xchg
je
repnz
jae
jle
and
out
imul
pop
cwtl
daa
sub
adc
push
adc
pop
data16
mov
stc
ret
mov
add
out
addr16
out
and
jmp
les
pop
arpl
jp
les
scas
jmp
jg
inc
lods
bound
outsb
aas
in
in
fisubrl
add
lods
jmp
jl
ljmp
fadd
jg
or
pop
pop
mov
loop
das
add
insl
jnp
adc
sarl
stos
mov
add
push
inc
pop
jo
jmp
sbb
ficomps
xor
cmovae
cmp
xchg
push
add
cld
pop
call
mov
xor
xor
ss
dec
movb
dec
loopne
psubsb
jo
cmpb
xchg
cltd
scas
fdivs
jae
nop
sbb
xchg
adc
jle
cmp
aas
sbb
outsb
inc
push
inc
push
lret
lahf
sub
push
adc
xor
or
ds
push
xchg
and
jbe
iret
adc
add
and
cmpsb
sbb
shlb
cmpsl
int3
insl
xchg
mov
push
mov
out
adc
or
ja
outsl
add
aam
jnp
mov
add
adcl
xor
lcall
xchg
rolb
jo
movsb
rcll
lea
js
push
sbb
mov
adc
adc
add
inc
push
inc
out
lods
adc
jns
sub
adc
xor
jg
outsb
xor
pop
xchg
icebp
repnz
xorb
movsl
jbe
aas
lret
sbb
les
mov
ret
jp
mov
loope
or
lods
clc
cmp
add
pop
mov
bound
sbb
call
sbb
pop
or
scas
pop
mov
cli
ja
inc
and
pop
push
out
or
xchg
sbb
push
push
adc
push
dec
and
push
xchg
fwait
bound
pusha
fcmovne
imul
sbb
push
ret
es
xchg
int3
mov
es
mov
lret
jae
and
dec
popa
jle
fsts
sbb
pop
jle
stos
je
pop
rcrl
or
sub
addl
xlat
mov
inc
mov
xor
mul
add
mov
push
sub
shrl
add
pop
and
and
sbb
xlat
iret
add
jbe
pop
mov
pop
arpl
and
sahf
jg
push
jnp
test
nop
jmp
mov
jle
or
addr16
clc
aam
mov
sahf
or
jae
out
rorl
pop
push
pop
add
testb
scas
daa
dec
push
test
adc
fsubrs
add
adc
add
cmp
in
aaa
sbb
push
add
add
mov
scas
push
push
pop
jl
int3
mov
lods
pop
push
popl
mov
xchg
add
pop
push
jnp
xor
xlat
daa
push
mov
mov
pop
es
sub
mov
jnp
xchg
nop
jle
ret
push
pop
mov
popa
leave
pop
mov
fimull
mov
mov
daa
xchg
sbb
add
nop
sbb
and
or
xchg
or
sahf
out
add
fsubrp
mov
add
push
add
pusha
xorb
lret
ficoms
xor
pop
pop
ret
cmp
clc
ljmp
mov
out
pop
out
gs
cmp
jb
add
addr16
in
pop
neg
test
ss
repnz
movsb
cli
sbb
test
add
xor
insb
dec
pop
sbb
add
mov
xor
fldl
popa
mov
movswl
mov
mov
xchg
adc
adc
xor
mov
jno
sub
jo
lods
xchg
sub
push
sub
and
push
or
sub
test
js
or
jmp
stc
test
cmp
pop
popa
das
sub
or
push
mov
inc
daa
inc
push
jp
xor
xchg
mov
mov
out
push
adc
lods
inc
push
aaa
push
xchg
test
push
xor
fildll
clc
inc
and
adc
clc
xlat
and
mov
cmc
or
push
out
adc
sbb
push
aaa
xor
sbb
push
or
sub
jge
push
pop
out
loop
or
das
mov
inc
and
rcll
loopne
sbb
outsb
ss
sbb
push
pushf
push
test
fiadds
pushf
add
sbb
dec
xor
shr
rolb
sarb
push
or
push
jnp
pop
bound
insb
or
jl
ficoms
push
loopne
or
or
test
addl
stc
jae
sbb
push
ja
popf
adc
cmp
arpl
push
xor
mov
loope
inc
js
and
sub
mov
sub
mov
xchg
ss
xor
or
movsb
sbb
mov
es
xorl
out
insl
test
arpl
pop
sub
push
or
ret
or
in
bound
jge
out
adc
dec
sbb
cmp
sbb
cwtl
daa
sahf
push
lea
out
dec
loop
mov
fisubs
cmc
jmp
jp
dec
inc
loop
cld
dec
fistpl
inc
cmp
and
sub
pop
arpl
mov
adc
xchg
mov
es
iret
cwtl
shll
mov
test
loopne
sub
lret
aas
hlt
mov
outsb
mov
jnp
fdivl
jl
ret
mov
mov
jp
outsl
fld
mov
pop
loop
aad
std
stc
cwtl
addr16
push
pushl
jo
xlat
iret
arpl
xchg
push
test
sub
xor
popa
adc
or
movsb
pop
lret
mov
or
popf
xor
lods
pop
js
hlt
flds
js
sbb
loopne
mov
mov
and
add
adc
cld
xchg
enter
ret
inc
push
xor
or
mov
jbe
jp
pop
lea
cmc
push
lahf
jp
notl
cs
push
fadds
mov
cwtl
or
add
pop
ffree
or
and
insb
mov
mov
or
or
and
iret
sub
and
adc
adc
flds
or
sub
lods
je
es
mov
add
mov
aaa
sub
xor
int
sub
add
rol
pop
sub
sub
movsb
add
shrl
xchg
aas
rcl
sbb
std
sbb
fildll
xlat
jecxz
aas
adc
ret
push
mov
aaa
imul
mov
popa
or
ss
xor
ja
scas
jp
iret
xor
xlat
shlb
mov
or
sbb
mov
or
fdivrs
push
scas
stos
popf
mov
push
sub
call
movsb
fisubs
jmp
inc
pusha
and
ss
mov
add
jl
sub
push
repz
mov
mov
hlt
push
push
add
push
enter
or
out
push
add
add
into
subb
inc
in
adc
mov
cmc
mov
or
or
mov
or
xchg
subb
js
aaa
int3
xor
sbb
add
jne
dec
addl
mov
dec
jge
subl
fisubrs
inc
mov
add
push
lret
inc
push
call
incl
pop
and
std
xor
or
and
pop
cmp
leave
ja
jp
out
xchg
aad
inc
sub
test
dec
xchg
lock
add
push
sub
arpl
cmp
add
push
add
add
pop
inc
pop
arpl
out
daa
push
sub
add
fdivl
shl
sub
data16
jecxz
arpl
push
inc
test
pop
rorl
xor
xor
pop
dec
mov
jl
test
ret
bound
aaa
andl
scas
out
and
xorb
push
push
pop
adc
xor
addb
sbb
call
sub
inc
mov
cmc
lret
inc
cmp
js
fildll
fldenv
sub
sbb
movsl
xorb
xor
cmpsb
pop
mov
sbb
cmp
mov
iret
in
mov
lods
scas
nop
push
sub
call
sbb
dec
jb
in
cmp
push
sbb
bound
dec
aam
push
out
das
mov
and
outsl
addr16
sbb
lock
faddl
add
add
pop
mov
adc
mov
cltd
xor
js
jge
sub
inc
mov
sub
inc
in
cmpsb
or
sub
int
add
pop
inc
stos
mov
out
cld
out
loopne
jne
inc
leave
jae
ror
push
sti
pop
xchg
or
jle
push
scas
mov
jae
xor
mov
add
add
ss
mov
je
and
sbb
mov
sarb
bound
fstl
jno
inc
xor
mov
or
orb
shrb
pop
cmp
inc
xor
insb
js
xor
push
clc
xor
or
fistl
mov
push
subl
adc
into
jae
int
lahf
push
rcrl
outsl
mov
das
xlat
add
fistps
xchg
ds
pop
sbb
add
lds
and
lods
arpl
orl
das
popa
sbb
and
or
jmp
xor
std
fildll
into
cmp
jo
cltd
mov
xor
pop
pop
push
inc
mov
roll
rcl
loopne
orl
xchg
sbb
pop
pop
mov
daa
sbb
xchg
push
xor
fldcw
xor
mov
mov
adc
das
sahf
into
sbb
fistl
cmp
mov
add
ja
test
sbb
or
ljmp
mov
packsswb
xchg
add
jmp
push
daa
iret
rcl
mov
jbe
push
ljmp
xchg
repnz
push
mov
jbe
cmp
xchg
mov
sbb
lret
pop
sub
xor
pop
dec
xor
mov
push
dec
iret
clc
mov
push
dec
add
jl
mov
xchg
add
sub
movsb
adc
int
enter
xchg
cmp
jl
aaa
add
pop
sahf
cmp
cmpsl
adc
hlt
lock
in
and
jle
cmp
loopne
scas
negb
out
or
bextr
add
pop
test
ret
adc
inc
mov
iret
mov
mov
push
jl
xor
xchg
push
mov
lea
or
cld
ret
sbb
rol
icebp
dec
and
jbe
jno
mov
inc
mov
add
cmp
xchg
leave
pusha
pop
dec
mov
aaa
jecxz
inc
mov
add
popa
xor
xlat
repz
cmp
jl
scas
out
push
and
ror
shrb
and
dec
shll
push
aam
push
inc
leave
addb
in
cmc
daa
jae
xchg
leave
insb
add
xor
iret
enter
call
push
pop
or
icebp
cs
jne
adc
sbb
mov
gs
cmpsb
add
notl
std
iret
jno
sbb
or
mov
imul
jmp
movntq
daa
jno
fucomip
hlt
jne
fnstcw
aas
cmc
addb
in
js
sti
adc
add
add
lds
movsb
jg
aas
sbb
mov
loopne
ds
pop
insl
in
out
rcl
and
sbb
xor
mov
sahf
xor
cwtl
fmull
cltd
adc
data16
repz
xchg
pusha
jae
mov
into
sub
push
cmp
movsb
cmp
adc
js
or
imul
xchg
cwtl
mov
arpl
mov
not
sahf
xor
pop
sub
divb
sub
aad
push
clc
mov
divl
sub
out
mov
test
hlt
fdivs
mov
and
ret
test
dec
pusha
xchg
sub
mov
pop
cwtl
dec
imul
lret
enter
mov
pop
sub
cmp
notb
push
pop
sbb
data16
out
ret
adc
test
push
or
adc
xor
sub
add
dec
out
cmp
add
ljmp
xor
movsb
and
xchg
ficompl
fnstenv
add
xchg
sub
in
dec
lods
enter
aas
jge
ret
aam
pop
inc
mov
pusha
insl
adc
les
add
popfw
shr
mull
pop
push
aam
lret
sbb
shll
jmp
sbb
jo
loope
jge
jo
dec
and
popf
mov
call
sub
cltd
mov
dec
xchg
adcb
adc
mov
test
lock
dec
cmp
fisttpll
mov
mov
addr16
incl
pop
popa
and
xor
xchg
pop
cmp
inc
imull
das
jo
nop
or
sbb
imul
xor
dec
mov
add
cwtl
or
jle
and
and
popa
das
push
jns
aas
inc
xor
loopne
and
xor
out
les
inc
mov
pop
test
inc
push
xchg
mov
shl
je
sarb
ljmp
jo
sub
dec
daa
int
sbb
neg
mov
adc
xchg
call
sbb
js
lahf
jno
ret
bound
loopne
call
sti
cmp
cmp
cmc
inc
loopne
cmp
cwtl
inc
test
sbb
mov
add
inc
outsl
xor
ret
cwtl
into
inc
add
xor
fistps
testb
xor
mov
imul
add
jo
sub
enter
inc
mov
sahf
dec
fwait
cmp
lock
xlat
rclb
or
lds
fwait
add
fidivl
xchg
mov
aam
mov
mov
scas
jl
mov
iret
into
jmp
push
subb
clc
scas
inc
pop
dec
and
inc
bound
or
call
adc
mov
cmp
test
sbb
sbb
jns
ljmp
stos
repz
cmc
and
adc
nop
sub
fstpt
mov
jo
int3
fsubl
sbb
je
roll
push
xor
xrelease
xor
fildl
mov
dec
jno
or
dec
pop
mov
inc
xor
dec
pop
mov
jno
call
push
roll
lret
and
push
testl
add
adc
gs
push
das
cmpsl
in
cli
enter
lret
cwtl
mov
sahf
mov
out
adc
je
sti
sti
notl
or
mov
add
mov
fwait
pusha
frstor
jp
loopne
rcl
popf
adc
or
in
adc
lcall
jmp
shl
and
cltd
sti
aas
pop
jmp
mov
cmpb
xchg
jnp
ret
xor
repz
push
rorb
adc
ret
ret
pop
add
add
imul
jo
fists
aad
push
add
mov
push
ret
addb
idivb
push
ss
call
pop
stos
jno
int3
and
addb
cmp
adc
ss
lret
push
adc
aas
notl
jecxz
pop
test
cld
stos
cmp
imull
pushf
test
inc
lret
aas
int3
xchg
loop
lcall
rclb
roll
sbb
xlat
int
push
inc
or
aas
pop
pop
push
out
cmp
push
mov
push
enter
in
jo
das
stos
push
aaa
into
sub
cwtl
add
test
test
hlt
aas
xor
out
mov
or
mov
xchg
in
ret
sub
xchg
mov
dec
andb
cmp
mov
fisttpll
jne
push
test
add
and
pop
jmp
aam
in
je
pop
rorb
jmp
push
cwtl
mov
push
repnz
je
push
int3
add
push
testl
popa
repnz
cs
mov
addl
inc
cmp
sbb
jp
cmp
imul
add
je
sbb
mov
loopne
fsts
push
adc
shll
jle
arpl
loopnew
sbb
aam
lock
aad
call
fidivl
fsubrs
inc
xor
adc
or
aad
mov
std
pop
jmp
pop
ret
sub
jb
out
mov
push
dec
insb
or
loop
sub
in
pop
out
scas
imul
add
mov
adc
mov
rclb
xlat
iret
push
enter
and
leave
inc
loop
add
push
add
inc
shll
sub
jl
jmp
jne
jo
add
cwtl
adc
les
stos
test
mov
loope
and
loopne
or
xchg
sbb
mov
mov
inc
mov
outsl
leave
cmp
sub
call
out
pop
in
mov
in
mov
rclb
jbe
add
loopne
pop
test
sbb
push
mov
dec
fcoml
subb
or
push
pop
popf
enter
pop
jmp
mov
push
insl
shlb
adc
iret
fcoml
jo
aaa
mov
add
jns
fadd
rcll
test
push
jo
xchg
jne
lret
or
jg
fwait
rcrb
sub
pop
fcmove
add
xchg
inc
sbb
cmp
les
lods
cmpsb
and
and
movb
das
jmp
cmp
mov
add
mov
dec
cmpsl
jmp
je
push
mov
out
mov
loope
into
or
adc
adc
ret
inc
push
sbbb
sub
mov
notl
aaa
fistpll
adc
adc
testl
add
xor
adc
into
stos
arpl
adc
dec
pop
insb
jae
pop
or
mov
and
in
mov
jae
adc
xor
adc
mov
outsl
scas
mov
sub
push
xor
mov
push
mov
adc
fildl
addr16
push
jmp
aaa
outsl
add
aam
add
out
mov
and
mov
into
pop
cwtl
mov
nop
out
adc
mov
sbb
push
or
out
outsb
and
popf
sub
add
or
jg
fnstenv
fists
bound
and
xchg
jnp
idivl
fildl
xor
ret
sbb
xor
clc
push
lcall
and
inc
popa
dec
pop
sti
cmp
in
adc
adc
dec
dec
pop
xchg
insb
pop
sub
mov
pop
push
pop
in
movsb
cmp
ret
aaa
or
movsl
popa
pusha
xlat
inc
iret
mov
or
pop
bound
lret
shlb
jnp
mov
mov
bound
mov
sub
dec
sub
mov
call
jl
scas
dec
xor
in
pusha
push
dec
aad
inc
pop
dec
loop
imul
xor
mov
and
mov
or
scas
movl
adc
fs
lods
mov
mov
mov
push
xchg
aad
pop
xchg
int
cmp
inc
inc
sub
pop
lods
jbe
and
out
xchg
and
sbb
out
or
push
mov
mov
xchg
xor
dec
out
dec
repz
int3
dec
push
leave
incl
cmp
mov
jmp
cltd
insb
mov
jge
pop
ret
fcomi
pop
mov
inc
sub
popa
xorl
sti
inc
xlat
jne
pop
inc
dec
push
outsl
rcll
push
int
mov
popf
outsb
daa
fldt
daa
pop
cltd
push
imul
insl
and
movsl
or
rcr
das
pop
cli
rorb
adc
xchg
add
aaa
push
jle
xor
test
sti
pop
mov
add
aas
int3
popf
mov
adc
dec
dec
cmp
jb
shr
dec
jg
ss
idivl
add
adc
setae
fldenv
add
pop
cmovbe
xor
leave
int3
push
loope
int3
and
int
adcl
xchg
or
adc
pop
adc
jmp
sbb
insl
negb
imul
cmpsb
xor
fnstenv
cltd
lock
fstps
dec
sbb
fsubs
jnp
jg
sub
fs
fxch
bound
inc
hlt
jp
lea
pop
sarb
aam
int
inc
test
sub
in
orl
ds
pop
imul
or
xor
inc
push
adc
push
lods
stc
lock
dec
test
arpl
fldenv
sub
sbb
mov
mov
inc
push
mov
jb
cmp
aaa
add
mov
push
pop
or
hlt
and
stos
or
xor
push
adc
out
sbb
fisttps
lods
pop
adc
sbb
xor
loope
add
xor
pop
xor
add
xchg
fisubrs
mov
addr16
sbb
or
lahf
xor
pusha
pusha
add
add
add
into
les
inc
nop
je
lods
adc
mov
or
mov
sbb
stos
sbb
adc
add
sub
nop
out
mov
sbb
dec
sbb
sahf
push
mov
pop
dec
xchg
popf
subb
test
sub
inc
xor
in
call
aam
fcoms
iret
adc
leave
adc
lcall
popf
mov
dec
xor
cmp
mov
test
xchg
out
movsb
push
scas
mov
pop
adc
lds
inc
or
and
cmp
xor
xor
mov
cltd
cmovl
test
pop
sbb
ljmp
push
push
lret
aam
adc
xor
dec
jne
adc
mov
scas
pushf
jnp,pn
jo
bound
jnp
aaa
adc
mov
add
sbb
pop
jo
sbb
xchg
sub
mov
pop
scas
pop
mov
sub
or
addr16
aad
jb
or
ja
data16
lea
adc
rorl
stos
add
jmp
mov
mov
inc
push
jge
je
adc
adc
xchg
jne
stos
push
and
mov
ret
aas
movsb
aad
test
aad
push
sahf
scas
mov
mov
push
mov
cmpsb
adc
sbb
inc
outsb
push
xchg
mov
loop
mov
shr
aam
and
lahf
pop
add
aaa
dec
jne
sbb
cmp
scas
jg
dec
dec
mov
sbb
push
pop
loop
cs
add
mov
mov
jle
inc
ja
mov
jae
iret
sti
aaa
pusha
and
loopne
sub
pusha
jp
and
shl
add
adc
inc
addr16
jnp
sub
sbb
inc
out
push
pop
and
xor
xor
mov
xor
or
mov
push
push
pusha
test
xor
cwtl
adc
stc
addr16
or
bound
js
adc
pop
loope
adc
scas
mov
aam
push
sub
xchg
lcall
push
pop
add
pop
ret
loopne
ret
and
inc
xor
dec
mov
das
add
push
jnp
cld
repz
insb
stos
inc
dec
mov
jo
cmp
add
adc
bound
mov
loop
sbbb
mov
loopne
jl
pop
pusha
orb
jns
xchg
sbb
add
imul
je
sub
cmp
sahf
popf
add
xchg
rorl
pushf
xchg
mov
imul
mov
cmp
adc
pop
mov
cmp
adc
jnp
xchg
adc
sbb
push
int3
add
cmp
adc
subl
enter
lock
inc
lret
xor
adc
jo
pop
repz
mov
jb
repz
xchg
mov
dec
cs
mov
push
mov
adc
cmp
xor
and
sbb
not
xchg
adc
cli
or
test
daa
jo
and
xor
es
xor
subb
ljmp
cmp
sub
or
or
jb
xchg
jecxz
sub
sahf
out
insb
xchg
insb
mov
mov
mov
sbb
mov
mov
mov
sbb
or
movl
add
addr16
adc
aam
addb
lret
sub
pop
jnp
cmpsb
and
xor
adc
lds
int
out
and
mov
xlat
pusha
mov
and
cmpsl
jp
or
ret
and
and
xchg
shr
xchg
fnop
or
int3
in
fisubl
les
jp
mov
test
jb
out
push
popa
mov
mov
jmp
andl
test
aam
sti
fstl
lock
sub
or
pusha
mov
iret
sub
cmp
fdivr
xchg
pop
add
sub
movsb
arpl
outsb
cmp
test
adc
sahf
push
add
sub
daa
negl
push
mov
sbb
fiadds
test
iret
test
add
cli
lea
mov
pop
sbb
and
and
pop
push
rorl
ja
dec
dec
xchg
pop
push
nop
sub
cmp
add
xchg
ret
mov
jmp
int
push
xchg
addl
lret
dec
xchg
in
pusha
rorb
and
add
push
pushf
pop
inc
cmp
inc
ficoml
cmp
mov
sti
movsb
ret
incb
test
jo
inc
outsb
popf
rolb
call
test
int3
and
cmpsb
push
inc
stos
cmp
into
xchg
mov
stos
sub
into
nop
sub
ficoml
cltd
cmp
fmuls
adc
push
pop
pusha
add
lds
mov
push
mov
push
bound
mov
adc
xchg
or
arpl
cmp
loopne
inc
xor
jg
or
popa
sbb
mov
add
adc
js
jp
iret
mov
inc
shlb
or
mov
cmc
dec
jo
lret
popa
jne
xor
lods
dec
popa
inc
sub
pop
loopne
cmp
aas
out
insb
or
stos
xchg
inc
and
mov
fldcw
dec
mov
insl
push
cs
fildl
fmull
or
and
cltd
imul
pop
push
lcall
push
ret
pop
in
adc
outsb
push
mov
pop
push
rorl
jp
push
dec
test
or
aam
fwait
inc
jo
inc
mov
or
out
mov
inc
push
and
iret
cmp
aam
imul
rorb
adc
andb
push
mov
aad
stc
in
mov
sub
add
out
sub
jb
push
fiaddl
data16
sbb
sbb
mov
aad
dec
push
or
iret
sbb
sbb
cmp
mov
ss
dec
xchg
in
sbb
xchg
ret
jno
sub
call
or
sbb
int
and
cmp
add
mov
and
aas
jnp
test
sub
repnz
daa
pop
rorb
or
fdivr
jle
cmp
push
roll
fwait
daa
push
iret
cmp
and
jb
push
pop
and
pop
sub
cli
in
sbb
sbb
sbb
popf
mov
int3
mov
fdivs
add
sbb
push
les
fldcw
cmpsb
lea
outsb
cmp
inc
or
pop
ret
das
or
dec
adc
pop
or
popa
fnsave
shrl
out
aad
and
push
dec
xchg
out
fsubs
add
add
sub
loopne
outsb
jb
negb
jb
stos
push
and
and
int3
push
ror
std
sub
mov
mov
ret
push
mov
push
mov
jecxz
iret
shll
mov
fnstenv
mov
call
sub
fstps
sub
jp
cmp
fidivrl
push
xchg
push
mov
in
mov
xchg
pop
cmp
sbb
xchg
daa
test
stc
or
or
jmp
pop
jnp
or
mov
enter
int
insl
mov
pop
mov
xchg
add
stos
jecxz
out
data16
lds
nop
inc
sbb
or
and
int3
inc
negl
ljmp
loopne
orb
push
adc
scas
jae
rcl
repz
and
pop
xchg
sub
inc
cli
adcb
dec
lods
sti
std
xor
mov
je
inc
outsb
call
lahf
jno
and
dec
jge
lahf
inc
loopne
je
movsb
stos
add
inc
sbb
imul
movsb
loop
pop
movsb
dec
add
mov
add
mov
push
cmovns
pop
inc
sub
cmp
jle
andl
mov
ja
fwait
pop
mov
in
andl
sbb
jmp
add
dec
mov
enter
lock
pop
clc
push
mov
push
xchg
mov
jae
add
insb
push
xchg
out
mov
test
sub
sbb
sub
or
test
mov
scas
cmp
xor
adc
aaa
xor
orb
pop
mov
mov
add
cmp
testb
mov
or
sti
dec
xchg
or
pop
mov
addb
push
add
inc
or
pop
sbb
sub
mov
shr
test
into
adc
mov
lcall
or
pop
aam
loop
push
sbb
inc
iret
out
or
aam
inc
sarb
push
sub
addb
xor
je
inc
cmp
push
inc
rcr
mov
jo
mov
or
push
rorb
scas
xor
xor
pop
cmc
sub
daa
loopne
fmuls
sbb
lods
xchg
fcmovnbe
daa
popf
or
and
push
and
test
pop
lret
adc
fistps
shl
push
inc
das
mov
rorb
rcrl
std
xor
in
ss
mov
mov
sahf
aam
dec
inc
pushf
jmp
sbb
push
push
sub
push
or
jl
lahf
or
xor
xor
sub
mov
in
sbb
xorl
js
add
xchg
jae
ror
push
cmp
mov
sub
or
dec
mov
mov
ja
push
jo
adc
jp
fisubs
jecxz
push
sbb
cmp
daa
and
push
scas
xchg
xor
cmp
or
es
test
mov
pop
pop
mov
int3
out
movl
push
cld
add
or
mov
cmp
cli
add
aas
ja
negl
jne
loopne
push
add
movsl
inc
inc
xchg
lods
dec
mov
pop
sbb
or
push
mov
sahf
scas
adc
jno
push
jg
push
inc
dec
les
lret
leave
pop
sub
push
repnz
sub
jge
sbb
xchg
and
leave
test
and
sub
cmpsb
push
pushf
inc
sahf
push
test
es
inc
xchg
in
sub
jo
ja
cmp
xchg
add
and
adc
adcb
bound
jbe
jo
or
push
xchg
sbb
push
jp
loopne
mov
xchg
and
lcall
push
adc
xor
mov
add
or
movntq
out
xchg
dec
rclb
rorb
add
inc
mov
add
add
push
xchg
adc
xor
and
xchg
fs
fsubrl
iret
dec
and
aaa
loope
cmp
and
push
xor
inc
push
pop
jp
cmp
daa
inc
test
insb
dec
sahf
sahf
fildl
xchg
jnp
and
sub
movsb
inc
or
xor
pop
sbb
push
pop
cltd
sbb
pop
dec
out
mov
add
xor
jmp
xchg
ret
push
popf
into
sub
and
fwait
popa
dec
push
add
xorl
mov
push
testb
push
xor
and
adc
outsl
or
in
xchg
jno
in
in
jmp
fimuls
hlt
push
mulb
push
daa
sub
and
mov
in
lea
out
in
jge
pop
mov
push
jnp
xchg
jmp
mov
dec
out
lock
and
dec
sbbb
xchg
out
divl
out
aas
jno
in
inc
mov
mov
jo
mov
popa
sbb
push
mov
scas
lret
mov
ret
jnp
sahf
test
sub
inc
aad
addb
fadds
nop
inc
inc
cs
mov
dec
shrl
cmp
mov
sbb
outsb
insl
shrl
dec
pop
jp
xchg
and
pusha
icebp
leave
add
arpl
jle
xchg
lret
xchg
test
sub
js
mov
gs
xchg
mov
inc
dec
or
das
cmpsl
jno
adc
and
out
inc
push
jp
push
mov
pop
dec
mov
push
jmp
mov
fsubr
jecxz
or
roll
fs
jno
and
cwtl
or
sub
mov
and
ljmp
lods
stc
add
cs
pusha
mov
call
xchg
push
cld
lods
pop
xor
lea
mov
cmpsb
out
sbb
sub
iret
sahf
lock
sbb
in
push
push
pushl
fucomip
push
cmpsl
rolb
rolb
lods
stos
xor
fcomps
xor
daa
lds
inc
pop
dec
lret
icebp
mov
pop
xor
int3
dec
popa
and
xchg
push
sub
orb
push
jbe
xor
adc
daa
push
xchg
nop
xchg
and
mov
pushf
mov
pop
xor
es
push
cmp
call
call
js
push
insb
in
jae
insl
or
cli
or
add
mov
stos
pop
and
xchg
sub
xchg
jo
daa
shrb
or
insb
adc
pop
rcr
repnz
or
adc
mov
scas
and
lods
xchg
lret
xchg
lods
adc
dec
mov
cwtl
mov
jbe
jmpw
or
xor
and
leave
xor
or
je
mov
and
jne
das
lods
vrcpps
call
mov
fcmovne
dec
add
lods
fstl
xchg
daa
fs
popa
push
add
fisttpl
mov
add
dec
stos
xchg
lods
or
xor
int
adc
loopne
xor
push
test
pop
add
mov
pop
dec
int
fcomps
cs
sub
sub
jne
mov
sub
js
fcompl
push
enter
add
mov
insl
outsb
fistpl
rcll
and
mov
push
loopne
xor
das
adc
mov
sub
sub
jbe
sbb
lods
pop
mov
adcl
mov
add
lea
xlat
fcoms
adc
rcll
mov
sub
mov
jno
push
sbb
jp
and
ja
int
pop
add
or
xchg
jmp
gs
in
pop
add
push
jp
push
inc
inc
ja
clc
mov
iret
sub
xorb
pop
sbb
sbb
scas
mov
imull
data16
add
jne
scas
dec
mov
xor
add
cmp
pop
pop
or
ret
or
insl
inc
mov
int3
mov
and
sarl
test
add
add
in
mov
and
or
in
adc
dec
adc
adc
hlt
dec
repnz
ret
std
pusha
sbb
adc
add
cmp
sti
fs
int
cmp
or
bound
push
mov
mov
mov
cld
aam
mov
push
nop
clc
mov
add
sub
mov
rcrb
fbstp
mov
ja
sbb
sub
mov
jns
out
jno
loope
shll
je
push
xor
out
mov
out
clc
lock
cmpsb
int3
rclb
adc
xor
inc
sub
xor
hlt
push
fsubs
sbb
out
out
into
fldl
sbb
scas
add
in
int
xchg
inc
insl
lds
enter
das
adc
out
ret
mov
shll
dec
mov
ljmp
fisttpll
lcall
es
cmp
inc
stc
lods
xchg
mov
lods
imul
jb
aam
sub
jle
pop
pop
mov
dec
cmp
mov
out
push
xor
mov
jmp
xor
in
sub
loope
jle
mov
pop
jbe
ljmp
sar
push
pusha
clc
xchg
sbb
or
sub
mov
mov
out
rcll
or
mov
lcall
add
test
inc
jae
xor
jg
dec
sub
lods
jle
inc
pop
js
jg
ja
sub
mov
daa
xor
jno
mov
fmul
and
sub
ds
aaa
fisubrs
pop
push
push
ss
lahf
mov
iret
int3
mov
push
adc
popf
mov
and
in
into
shll
iret
jmp
rol
mov
pop
mov
fwait
adc
inc
cmp
sub
dec
pushf
and
add
push
lret
arpl
cwtl
pop
and
add
mov
aaa
cmp
adc
and
push
mov
push
leave
es
xchg
mov
push
aam
sub
pop
andb
aam
orb
jge
andl
js
popa
cmp
push
jp
add
dec
das
ret
jl
jge
or
jl
loope
test
and
jge
mov
jecxz
cmp
sarl
jns
xor
adc
in
ljmp
lods
mov
or
xor
pop
shrl
nop
and
ja
notl
xor
add
popa
leave
inc
movsb
jnp
jge
jns
mov
je
insl
das
dec
mov
mov
mov
xchg
jle
das
lods
jle
inc
sub
dec
js
filds
mov
lcall
fs
push
add
lret
xor
jbe
ja
mov
push
ss
je
cwtl
es
js
js
mov
lea
js
xor
xor
add
mov
mov
jp
sub
pop
cwtl
xor
pusha
xor
movsb
pop
mov
pop
in
cmpl
les
imul
aam
push
jnp
scas
xchg
fcoml
jp
les
dec
jns
mov
push
ja
iret
shlb
xchg
jnp
lahf
cmpsb
idivl
xlat
movsb
pop
je
jns
mov
mov
or
out
fs
or
jnp
arpl
inc
shll
jnp
shll
les
and
xor
xorl
rolb
cmp
mov
clc
add
jne
fwait
inc
loope
js
in
pop
mov
add
lea
shrb
movsb
mov
iret
mov
add
add
imul
adc
add
add
inc
add
inc
inc
add
and
and
clc
or
les
sbb
xchg
pop
out
in
scas
pop
add
xchg
mov
into
call
or
mov
jg
mov
jge
clc
and
jae
dec
inc
sbb
mull
dec
cltd
loopne
cli
push
loope
movl
loopne
jl
cld
in
and
mov
dec
add
aas
scas
or
cs
jo
lods
mov
sub
xchg
and
scas
adc
xchg
mov
ss
mov
cmp
push
xchg
mov
cmp
pop
dec
inc
shll
mov
inc
fisubl
jo
nop
lcall
addb
push
lahf
add
mov
mov
sbb
out
add
out
cmp
out
xchg
insl
mov
pusha
add
and
xchg
stos
and
cwtl
mov
out
and
mov
push
xor
test
out
and
icebp
push
in
dec
xor
aas
push
xchg
in
jge
and
out
or
mov
rolb
popf
mov
jo
mov
mov
mov
mov
test
scas
cs
bound
rcrl
add
cmp
fdiv
mov
push
roll
lahf
lea
pop
fwait
lods
push
mov
fistpl
jecxz
xchg
out
pushf
insb
mov
push
das
pcmpeqd
jmp
sub
fidivl
add
add
hlt
aad
adc
je
push
sub
or
pop
pop
mov
xor
xchg
lods
add
add
addr16
fcmovne
roll
sbb
or
mov
mov
dec
inc
scas
inc
lds
orl
and
inc
outsb
push
in
add
and
sbb
inc
orl
push
xor
jl
lret
cmpsl
loope
xor
xor
jo
and
sbb
jge
cwtl
enter
push
mov
add
and
adc
je
test
xorb
rcrb
fs
aam
roll
or
mov
mov
cmp
push
pop
push
imul
adc
dec
dec
enter
notl
je
sub
cli
cmpsl
lods
loope
rcrl
inc
adc
and
mov
add
adc
push
mov
add
mov
push
inc
ss
rcrb
sbb
stos
mov
bound
jns
cwtl
sbb
aam
pop
enter
das
inc
int3
mov
jmp
push
pop
mov
cmp
popa
xor
cmp
dec
ja
and
and
push
add
inc
sahf
scas
and
cli
pushf
lret
mov
arpl
lcall
scas
and
ljmp
sbb
loop
mov
dec
iret
dec
icebp
subl
das
mov
hlt
xorb
adc
rcr
ret
mov
ja
mov
xor
insb
mov
rcll
push
xor
loopne
sbb
xchg
test
insb
ss
xor
add
inc
cmpb
push
xchg
cs
fdivl
test
xor
and
sub
sub
jne
add
test
popa
ret
popa
mov
pop
mov
adc
inc
sub
mov
add
ss
call
jnp
es
adc
cmp
jmp
or
xchg
inc
icebp
and
inc
divb
arpl
mov
jns
iret
ja
hlt
adc
xchg
push
fistps
sub
xchg
mov
xlat
pop
pushf
xor
dec
adc
pop
jnp
das
xchg
out
jge
adcb
inc
adc
test
nop
adc
mov
mov
test
jl
add
mov
and
xor
neg
xor
inc
fcoms
pop
cmovle
int3
lret
rolb
fldenv
mov
and
mov
mov
and
repz
aaa
jne
lret
inc
mov
ds
fwait
ljmp
or
mov
adc
mov
and
pushf
pop
jae
insb
dec
rcl
sbb
lods
push
mov
mov
mov
les
or
or
aaa
jecxz
fsubs
adc
ljmp
sbbl
mov
in
jp
mov
pushf
push
movsb
shlb
int
test
push
sub
ret
mov
orl
lret
add
cmp
or
sti
xchg
adc
mov
adc
xlat
xchg
sbb
push
or
add
xchg
mov
mov
inc
and
cmp
es
mov
sub
cwtl
adc
jo
aas
fiadds
push
loope
jge
adc
or
gs
mov
push
push
mov
xor
adc
or
scas
lcall
mov
pop
and
and
fst
cmp
hlt
add
dec
pop
test
pop
shrl
and
ja
shll
add
jle
jmp
add
and
pop
aas
lds
jae
push
inc
movsb
sub
push
ljmp
sahf
fimuls
jbe
test
addr16
shrl
mov
ja
sbb
add
xchg
loope
sub
and
lods
jae
leave
cmp
lret
jp
inc
and
and
mov
sbb
or
fidivrs
iret
mov
leave
scas
mov
lcall
js
lds
xchg
pop
lods
add
in
and
js
out
mov
out
loope
pop
imul
and
push
lea
inc
in
cld
iret
arpl
lock
and
xor
ds
push
mov
cltd
ljmp
sbb
fwait
and
pop
jo
sbb
loop
adc
cltd
sub
jnp
mov
loopne
shrb
loopne
adcl
push
push
xor
ficoml
test
mov
fisttps
leave
loopne
pop
inc
dec
push
sti
mov
jle
or
in
shlb
lock
and
cmc
push
scas
call
sti
pop
pop
mov
or
jo
push
push
dec
sub
cmp
or
mov
or
push
lea
lods
addb
loopne
add
in
int3
dec
cmp
dec
cltd
call
out
add
pop
inc
push
js
mov
inc
fisubrs
mov
xchg
and
stos
data16
sub
sbb
xor
mov
in
arpl
lods
mov
dec
mov
sbb
loop
lea
sbb
sbb
xchg
or
mov
fs
mov
adc
mov
and
sbb
xchg
out
daa
adc
adc
mov
adc
fiadds
push
inc
dec
jbe
int
or
cmpb
loop
popa
js
pop
out
inc
aam
loope
sbb
repnz
gs
mov
xor
ret
testb
ret
adc
popa
inc
pop
dec
fsubr
or
push
loopne
mov
sub
mov
loop
call
sub
sbb
nop
movsb
lea
loop
lea
add
fmuls
iret
push
popf
lock
mov
mov
pop
orb
or
dec
jne
mov
and
adc
fsubs
in
xchg
stos
jmp
add
and
jae
push
cmp
stos
add
sbb
xor
mov
mov
cld
loopne
inc
lods
shlb
cmc
dec
cmpsl
inc
push
pop
push
call
mov
xor
pop
add
outsl
jnp
jbe
loope
sub
lea
and
pop
and
lret
daa
rolb
jl
and
mov
xadd
mov
stc
mov
int
mov
sub
imul
mov
rcr
sbb
adc
inc
rcll
and
jecxz
inc
cmp
jecxz
into
add
jecxz
ja
adc
rcrl
or
xchg
lahf
sub
mov
or
xchg
add
sub
daa
fucomip
xor
xlat
repnz
lock
ja
cmp
movsb
add
ret
sbb
jo
dec
js
lock
add
xchg
push
push
pop
dec
adc
add
pusha
movsl
iret
cltd
in
imul
add
adc
inc
in
add
inc
adc
nop
push
mov
push
inc
insb
fwait
xchg
or
js
fwait
lcall
inc
push
mov
jmp
mov
fbstp
loope
pop
pushf
cs
inc
cmp
enter
add
add
sub
cmp
mov
leave
dec
aad
roll
jecxz
or
iret
cmc
sub
and
inc
rclb
mov
xorb
cli
sub
arpl
out
pop
xor
fstp
repz
xchg
imul
in
jecxz
sbb
cmp
shlb
stos
jecxz
xchg
add
loop
jno
push
cmp
and
xchg
inc
xchg
mov
mov
add
das
push
shll
addb
and
mov
fistl
mov
cs
les
add
stos
loopne
mov
inc
lods
or
mov
xor
add
push
mov
push
sub
push
aas
jg
aaa
jecxz
push
add
loopne
adc
pop
mov
or
call
outsb
jnp
add
inc
mov
je
add
popa
xchg
repz
bound
cmp
mov
fcoms
pop
std
lods
jg
adc
incl
or
and
fsin
inc
test
mov
mov
sub
mov
add
fistpll
jle
push
shll
in
sub
push
xchg
push
xchg
xchg
movsb
mov
test
idivb
mov
mov
push
mov
lcall
add
mov
sbb
xorl
sub
and
sbb
push
push
adc
mov
shrb
xchg
xchg
iret
push
and
in
testb
and
ret
push
mov
mov
xchg
int
into
and
jno
jo
ret
mov
mov
data16
test
andb
test
testl
int3
xchg
push
cmp
cltd
and
xchg
dec
shlb
stos
mov
mov
inc
lea
inc
lods
inc
ret
push
lock
stos
arpl
arpl
jbe
call
sbb
popf
jno
popa
add
mov
cwtl
sbb
in
xchg
ror
unpcklps
pop
pop
adc
pop
cmp
or
and
inc
fcmovnu
sbb
mov
lret
pop
nop
and
jle
lea
push
ja
hlt
fs
jge
mov
shll
es
rcl
lods
cmp
push
lods
and
xlat
mov
cwtl
push
stos
xchg
pop
out
mov
xchg
sbb
bound
or
and
push
inc
mov
push
sub
je
xchg
nop
sar
mov
inc
popa
jg
mov
xchg
xor
cmp
orl
dec
jg
sub
push
or
jle
lods
inc
bound
rolb
das
pop
gs
pushf
outsl
add
jno
and
jp
mov
lahf
shlb
add
cltd
or
xchg
nop
mov
xor
push
or
push
test
adc
pop
jp
sub
pop
pop
push
and
test
jb
adc
push
add
ret
nop
xor
jnp
xchg
sbb
je
test
push
outsb
in
aaa
fs
or
mov
mov
test
mov
bswap
dec
mov
and
in
or
and
popa
push
mov
nop
je
aaa
lds
mov
and
xor
js
sub
fmuls
sub
jbe
sbb
out
cs
push
mov
movsb
mov
pushf
add
dec
sbbb
or
cmpsb
adc
test
fisttpl
les
push
or
mov
pushl
or
push
push
and
sub
inc
mov
inc
xchg
pop
scas
add
jnp
mov
clc
mov
popa
jle
pop
fistpl
dec
cmp
daa
xor
dec
mov
inc
jns
pop
aad
jp
fwait
mov
pop
sbb
xchg
mov
or
sbb
push
pop
jge
mov
pop
jns
or
ret
jle
nop
outsb
inc
addr16
aaa
mov
lds
add
cmp
sub
and
pop
push
or
and
sbbb
adc
and
dec
lock
ljmp
and
ret
outsl
fidivs
mov
in
jle
mov
in
cmp
xchg
pusha
lods
add
fwait
mov
nop
mov
inc
mov
addb
dec
mov
cltd
push
add
aam
push
mov
mov
mov
ret
fcoml
cli
dec
ja
xor
lahf
mov
idivb
inc
or
xchg
daa
pop
push
pop
xor
cmp
or
movsb
scas
jb
ja
filds
ja
std
and
daa
mov
xchg
ret
mov
loopne
movsb
add
fwait
scas
inc
lods
and
add
gs
stc
mov
inc
les
pushf
fisubs
pop
outsb
bound
mov
lahf
leave
add
dec
sub
xor
or
vmwrite
inc
or
mov
leave
in
mov
cwtl
in
sub
or
int
in
push
ret
and
ret
imul
push
imul
sbb
adcl
fstpl
xchg
js
dec
scas
pop
sub
add
and
scas
mov
and
xchg
ret
insb
rolb
leave
mov
and
inc
leave
sub
loope
cmp
inc
loop
xor
or
lea
add
aaa
imul
hlt
arpl
jnp
shrb
addr16
dec
jle
jno
cltd
bound
inc
pusha
pusha
es
dec
cli
sub
dec
cmovp
mov
inc
cmp
xchg
push
mov
inc
mov
or
js
cwtl
inc
int
mov
cmp
mov
data16
mov
and
push
ret
shr
sahf
jl
or
ja
imull
push
xchg
adc
in
inc
xchg
rclb
test
mov
pop
jecxz
or
popa
lock
push
sahf
cmc
hlt
push
fsubrs
rcll
xchg
insl
adc
mov
ja
mov
scas
sbb
pop
sbb
dec
jno
xor
stc
cmp
xchg
fisubl
loope
jp
sahf
cmp
lcall
mov
loopne
fsubr
mov
outsb
mov
lock
adc
movsb
cmp
inc
mov
roll
movsl
pushl
cwtl
cs
pop
stc
cli
rolb
daa
xor
add
pop
xor
mov
push
adcb
pop
popf
mov
push
sahf
sub
lahf
inc
popf
inc
imul
xchg
and
loopne
ficompl
divl
xor
mov
push
sub
lds
cwtl
push
inc
or
mov
xchg
add
mov
rcrb
push
out
xor
aam
dec
mov
insl
insb
xor
mov
lahf
or
pop
movsb
scas
cmp
jp
mov
sbb
add
jmp
imul
roll
dec
mov
adc
movsb
xor
stos
push
fsubrs
xchg
sub
push
add
add
mov
inc
mov
outsb
pop
outsl
in
adc
pop
lea
jae
andb
popa
rclb
push
and
xchg
or
xchg
movsb
sbb
fs
xorl
xchg
movb
lods
mov
enter
jnp
sbb
push
adc
inc
addr16
add
jl
movsb
inc
xchg
inc
sti
push
imul
addr16
loop
or
pop
fisttpll
fadd
xor
push
push
dec
in
ret
rclb
daa
or
lcall
or
and
push
stos
push
xchg
adc
jg
test
adc
outsb
popl
push
push
pop
out
jbe
cmp
mov
test
inc
xchg
add
and
in
mov
popf
adc
mov
dec
add
shlb
or
or
and
les
outsb
jmp
mov
arpl
bound
popl
inc
sbb
sub
xor
or
pop
or
push
sbb
fisttps
sub
test
ja
stos
jno
xchg
outsl
xchg
and
push
jge
push
iret
movsb
dec
jno
inc
fildll
lret
jecxz
dec
aad
xor
mov
push
in
sarl
and
xor
add
cmp
lds
pop
xchg
cmp
popf
les
in
jnp
and
mov
push
mov
daa
inc
out
jo
inc
pop
xor
enter
xor
dec
and
add
pop
daa
pop
sbb
add
xchg
push
jl
mov
mov
mov
add
inc
and
mov
and
xchg
pop
loope
add
xchg
pop
sbb
inc
loopne
push
test
les
fucom
lea
mov
xchg
push
sub
pusha
cmc
add
sbb
icebp
arpl
popa
dec
xor
aam
inc
insb
rcrb
gs
dec
and
mov
or
ret
inc
repz
xor
xchg
add
mov
and
jo
xchg
bound
and
xchg
xor
bound
aas
mov
add
jbe
sahf
iret
adcb
xchg
and
sub
push
jns
inc
adc
aaa
cmp
xchg
cmpb
addl
adc
cmpsb
cmpl
test
ja
xorl
pop
and
jno,pt
mov
mov
dec
xchg
xchg
shrb
push
push
and
jae
test
pop
dec
loopne
mov
cmpsb
xor
adc
and
sub
dec
xor
cltd
movntq
out
push
and
enter
das
sub
stc
popa
mov
add
lock
jp
and
dec
dec
jnp
xchg
jb
les
xchg
jae
sbb
xor
add
cwtl
and
fwait
sbb
adc
and
subb
mov
push
dec
and
push
add
stos
ss
pushf
test
aad
clc
test
push
jle
loop
pop
lods
test
and
hlt
ret
loop
data16
pop
and
in
add
add
lcall
mov
icebp
xor
mov
add
flds
andb
ja
pop
adc
daa
test
sub
adc
mov
addr16
inc
icebp
into
push
shrl
fcmovnb
add
or
sbb
es
mov
andb
cmpsl
xchg
sbb
fsts
adc
stos
outsb
nop
es
ljmp
lds
mov
pop
and
or
xorl
ljmp
push
lock
lret
in
or
sbb
repnz
sbb
push
sub
mov
cmc
mov
stos
mov
xor
idivl
int3
push
movsb
dec
cmp
sub
ret
pop
or
stos
cltd
sub
push
or
push
xor
mulb
mov
popa
ljmp
andb
sub
and
ret
stos
sti
daa
jge
xchg
out
das
mov
lds
stos
test
mov
pop
fildll
mov
mov
pusha
pop
and
adc
mov
pop
ficoms
shlb
in
ja
pop
add
mov
or
add
sub
ds
clc
xor
push
sarb
in
pop
jl
lcall
cmp
cmpl
inc
jge
and
adc
cmp
shlb
jle
pop
subl
insl
mov
and
stc
push
push
rcrl
data16
cmc
pop
les
add
push
iret
mov
sub
adc
ffree
ljmp
mov
adc
xchg
bt
lods
lret
or
mov
xor
inc
add
jns
pop
rorl
sbb
leave
or
inc
cs
pop
cmp
loop
int
pushf
aaa
dec
dec
inc
or
leave
or
mov
xchg
mov
inc
mov
stos
push
arpl
in
popf
repz
and
in
rol
sub
push
es
xor
jae
xor
jno
jbe
mov
mov
add
mov
cld
jns
imul
mov
daa
call
sbb
addr16
sub
and
cmpl
cmpsl
mov
lcall
push
mov
sbb
je
adc
test
push
pmulhuw
xchg
push
sub
push
filds
out
lret
dec
inc
testl
inc
insl
jl
sub
mov
lahf
push
sub
sbb
push
iret
mov
lahf
je
fdivrs
pop
inc
shrb
mov
inc
aas
fcoms
sbb
jl
jp
xchg
stos
mov
inc
xchg
pop
lock
test
xchg
movsb
test
inc
mov
sarl
push
lds
adc
or
testl
pusha
xor
push
and
iret
bound
xchg
inc
inc
daa
scas
jo
adc
jno
mull
addr16
cltd
mov
ds
les
push
ss
and
xchg
add
aad
inc
roll
cltd
lock
dec
mov
xor
and
pusha
pop
mov
mov
push
outsl
add
stos
shll
aad
lods
imul
xchg
add
add
mov
xor
and
jns
je
stos
and
lods
loope
adc
inc
lds
sub
cmp
je
push
push
mov
int
dec
or
adc
daa
int3
or
and
sbb
inc
into
add
mov
mov
lret
add
or
fcmovbe
and
fmull
sbb
cmp
fistl
das
mov
andb
inc
dec
testb
push
pop
sbb
sbb
xlat
movsb
inc
call
insl
roll
xor
push
mov
fiaddl
sbb
js
push
jae
jge
daa
push
scas
add
stos
daa
aas
mov
in
popf
mulb
lcall
addr16
into
cmpsl
fmuls
stos
mov
lock
and
sbb
sbb
add
jae
stos
mov
mov
add
cltd
roll
subl
jp
in
push
pusha
mov
test
lock
mov
mov
mov
ja
loopne
loop
das
call
push
dec
push
mov
aam
push
adc
or
cmp
mov
aaa
cmp
adc
sbb
cmpsl
rcrl
sub
out
xchg
mov
sbb
sub
icebp
xchg
push
vmread
xchg
xchg
in
cmp
add
mov
sbb
adc
mov
sti
xor
and
push
icebp
mov
mov
add
loope
push
push
stos
mov
add
cmp
push
iret
mov
gs
mov
add
push
xchg
push
add
mov
and
pusha
out
sbb
push
out
or
daa
lods
es
out
pop
inc
jnp
mov
add
lea
dec
cwtl
subb
outsl
and
leave
push
adc
ret
cs
xor
adc
and
cwtl
es
add
mov
pusha
mov
into
in
xchg
fdivr
and
and
lahf
mov
adc
iret
pushf
movsb
lret
or
aad
adc
pop
mov
cmp
mov
cmc
push
mov
and
mov
mov
mov
or
pop
mov
pop
sub
jo
jp
sbb
inc
add
aam
lock
cmp
aad
stos
daa
add
sbb
cmp
xchg
mov
nop
cmp
push
cmpsl
cli
in
das
jmp
adc
je
pop
cmp
dec
sub
lret
dec
lcall
xchg
mov
faddp
mov
xchg
and
and
les
inc
fsubs
inc
sbb
xchg
leave
lret
pop
and
ss
lret
push
jnp
add
pop
xor
sbb
int3
sub
add
xor
add
cmpsl
rol
xchg
pop
out
or
push
add
stos
mov
les
cmc
stc
pop
push
cmc
bound
fcoms
mov
or
mov
fmul
xor
inc
icebp
and
mov
xchg
mov
mov
js
push
push
aad
ja
lea
or
leave
mov
cmp
ss
mov
push
ja
leave
sbbb
insb
in
add
call
pop
sahf
les
loopne
js
mov
cmp
hlt
mov
in
mov
in
ljmp
stos
mov
and
or
mov
out
xor
daa
adc
inc
sub
in
sub
cmp
inc
xor
mov
out
adc
jo
mov
hlt
xchg
mov
pushf
dec
in
ja
ret
push
mov
xor
rcrb
jge
stos
sub
jl
sahf
push
push
iret
jns
out
lods
aam
xor
testb
orb
sub
mov
rcl
mov
push
adc
punpckhbw
loopne
mov
jnp
or
andb
ss
fisubs
scas
notl
movsb
mov
fwait
xchg
jl
jb
dec
inc
stos
fcompl
pop
sub
cltd
int
xor
mov
shrb
scas
iret
xor
mov
in
xlat
push
movsbl
sar
idivl
aaa
rcr
pop
icebp
test
fwait
das
cltd
adc
js
cmp
mov
std
shll
mov
push
call
sbb
sbb
repnz
pop
inc
push
mov
cmpsl
nop
jns
jge
add
les
mov
add
aam
adc
lret
shll
xchg
or
icebp
test
icebp
ds
es
aas
dec
hlt
scas
adc
and
inc
push
sbb
dec
mov
insl
daa
push
addr16
pop
mov
jecxz
cmpsl
or
aas
dec
dec
or
cmpsl
push
jo
loopne
ja
xor
sbbl
sub
sbb
notl
rcll
mov
add
mull
test
loopne
fwait
add
cmp
or
stos
mov
scas
mov
shll
inc
idivl
or
sbb
sarl
xlat
adc
push
jbe
cmp
mov
push
scas
inc
mov
mov
push
cmp
dec
and
or
iret
xchg
orb
sbb
xchg
mov
mov
into
hlt
add
iret
aam
add
fwait
jo
xor
and
cmp
sub
jno
sub
xor
aas
aad
stos
jge
mov
iret
xchg
or
mov
add
xchg
outsb
xor
sub
dec
fwait
cmp
scas
cmp
cmpsl
xorl
adc
orb
nop
and
and
xchg
jbe
or
pop
scas
sbb
pop
shr
movsl
cmpsb
das
cmp
mull
inc
or
sbb
inc
lcall
jae
cwtl
mov
pop
pop
xchg
loope
ret
imul
ds
and
loopne
dec
or
test
stos
test
cmp
and
xor
mov
out
dec
xor
cmp
inc
or
sbb
ja
int
mov
sbb
xchg
test
mov
adc
mov
lds
cmc
mov
jle
orl
cmpsl
iret
inc
hlt
mov
call
fistl
lock
mov
aad
mov
or
outsl
ror
and
mov
xchg
int3
shr
pop
jno
adc
or
pop
sti
push
sbb
add
push
mov
inc
in
roll
or
mov
cmp
bswap
cmp
fldcw
ljmp
addr16
mov
sbb
cmp
lds
test
sub
in
inc
and
push
inc
es
jp
ds
test
aas
mov
outsb
outsl
mov
pop
or
bound
push
addr16
pusha
stos
mov
mov
mov
mov
mov
pop
les
add
jge
out
pop
cmp
addr16
push
inc
sti
push
lcall
dec
std
shrb
jl
stos
lock
insl
sub
sahf
mov
fwait
cmp
or
shrl
rorb
sti
and
mov
mov
and
mov
lcall
sbb
mov
mov
rcrl
bound
mov
add
sbb
scas
dec
int3
jg
psubusb
sub
scas
adc
sub
sbb
push
addb
adc
jnp
sti
cld
xchg
add
fdivrs
dec
sbb
das
sub
movsb
add
or
sbb
inc
and
push
push
inc
xlat
enter
cwtl
add
int3
inc
push
or
pop
popl
cmovno
adc
fldenv
cmpsb
and
loopne
outsb
adc
dec
cmp
and
sub
xor
mov
add
lret
sahf
mov
jne
sbb
or
cmp
xor
popa
push
xor
push
ljmp
daa
jo
cmp
xor
adc
dec
sub
adc
icebp
jo
lock
mov
mov
xchg
adc
sbb
adcl
adc
add
sbb
aas
insb
lret
jb
insb
xchg
add
pop
cmp
xor
cmpl
inc
jl
inc
sub
mov
inc
dec
lahf
or
push
mov
dec
call
in
jecxz
sub
rcll
xchg
lcall
push
xchg
sub
repz
test
inc
push
loope
inc
aaa
sti
sahf
adc
inc
jo
dec
fistpl
dec
dec
xor
js
imul
stos
insb
in
lods
mov
mov
xchg
mov
fists
xor
rcll
sbb
inc
xadd
mov
ret
mov
push
adc
fimuls
daa
pop
outsl
jnp
fildl
jmp
xchg
mov
popa
dec
pop
hlt
mov
mov
and
mov
dec
sub
lds
and
or
imul
insl
out
mov
fcmovnu
out
and
dec
scas
mov
pushf
push
test
insb
add
adc
fmull
stc
in
pusha
shll
stos
mov
add
lahf
xchg
sbb
mov
subb
std
pop
mov
cmp
pop
subl
or
test
mov
add
xor
mov
scas
icebp
fsubrl
sbb
outsl
mov
xchg
flds
xor
add
xchg
sub
rorb
push
xchg
loope
xlat
jb
push
cmp
pop
xor
adc
xchg
push
lahf
push
xor
jbe
popf
and
out
sub
outsl
jle
bound
pushl
cmp
add
sub
jo
mov
fldenv
les
lods
mov
fs
jbe
lods
xchg
xchg
and
sbb
pop
mov
subb
aaa
data16
or
addr16
cli
add
mov
push
push
push
xchg
lldt
mov
test
ljmp
cwtl
cld
cmp
push
repz
and
lahf
xchg
mov
in
loopne
in
xchg
mov
dec
js
sub
movsl
mov
or
push
sbb
inc
subb
out
or
sahf
dec
cmp
dec
xlat
out
inc
mov
adc
ja
sbb
mov
mov
mov
xor
sbb
daa
xlat
rclb
mov
mov
incl
jnp
mov
sbb
pop
jo
or
xchg
xor
mov
jo
sbb
sub
sub
mov
and
or
push
push
adc
aad
cmp
or
cmp
adc
out
cmpsl
jae
inc
adc
nop
and
fistps
loop
sub
adc
scas
sub
inc
je
addb
mov
cltd
add
je
sti
andb
in
push
add
outsb
pusha
mov
imul
mov
inc
sbb
or
mov
add
sub
sub
jnp
cmp
cmp
lock
in
mov
loopne
add
jp
cmpl
stc
ret
mov
cmpsl
stc
jle
and
and
cmp
pop
mov
inc
or
shll
mov
add
add
aad
xor
fs
and
out
inc
mov
fcmovnu
pop
mov
adc
ja
stc
pop
and
add
pusha
sbb
cmp
pop
xor
and
add
test
fistpl
cmp
les
repz
rolb
lock
loopne
inc
sbb
loop
add
adc
aas
and
call
int3
les
loopne
pushf
mov
jl
mov
mov
sub
xor
cmp
or
add
mov
sbb
or
lcall
rclb
adc
push
sbb
adc
ljmp
imul
and
push
sbb
fists
add
inc
push
shrl
pop
adc
movsb
dec
jo
std
push
xor
or
jb
dec
fcomp
adc
mov
data16
neg
addl
pop
std
jmp
clc
add
fnstsw
fldenv
and
sbb
sub
int3
pop
daa
xorl
and
rolw
mov
into
lods
js,pt
xchg
loop
xor
jp,pt
jge
and
call
inc
mov
sbb
or
jecxz
mov
cmp
pop
aam
dec
mov
test
lcall
add
sbb
loop
mov
call
or
push
xchg
sbb
mov
inc
scas
mov
stc
sahf
jno
sub
enter
filds
push
int3
jns
inc
outsb
jmp
jae
out
ret
and
pop
pop
and
sub
dec
stos
pusha
es
add
out
pusha
sbb
sbbb
int3
lds
push
arpl
mov
pop
mov
mov
mov
stos
sbb
mov
pop
test
adc
sbb
pop
stos
jns
pusha
and
insl
test
mov
js
int
lods
orb
add
ret
pop
xor
inc
mov
mov
or
pop
movq
jo
shlb
mov
pop
push
push
cmp
out
aaa
and
sbb
movsb
sti
push
aas
sub
dec
andb
scas
cmpb
mov
rcrb
divl
add
push
pop
pop
fsubl
ja
cmpb
xor
or
cmp
mov
push
jnp
pop
cmp
or
cmpl
sbb
adc
inc
cmp
xor
push
fiaddl
stos
dec
push
outsb
jp
mov
push
jbe
ja
lods
sub
cmp
pop
jl
push
ds
ljmp
push
push
dec
outsb
inc
popa
out
cld
outsl
outsb
mov
xchg
mov
add
add
push
mov
fcmovnbe
ljmp
mov
ljmp
adc
mov
mov
xrelease
inc
mov
dec
out
and
mov
push
popa
pop
push
jae
bound
fiadds
clc
inc
cwtl
push
inc
add
mov
daa
xor
daa
cmp
lea
leave
xor
rcll
and
inc
aaa
dec
jg
decl
adc
or
jle
iret
sarb
in
cld
dec
pop
sbb
test
cmp
lret
sahf
mov
out
enter
hlt
popa
push
add
data16
outsl
sub
outsl
sarl
rclb
dec
or
push
testl
and
inc
ret
push
mov
push
or
int
aaa
mov
rcrb
pushf
enter
adc
fsts
int3
adc
mov
rcl
cmp
fists
or
push
sbb
push
ror
jne
adc
xor
test
xor
fstpt
inc
push
sub
mov
xor
jne
shll
mov
sub
push
adc
adc
mov
shrl
xchg
push
adc
adc
jb
mov
push
sub
mov
dec
test
sbb
and
adc
mov
mov
iret
or
outsb
xor
jle
jne
rclb
cmp
aad
lds
pop
repz
jno
jo
arpl
jg
and
iret
xchg
sbb
adc
sub
fdivrs
jo
xchg
add
or
test
add
mov
sahf
add
mov
dec
call
xlat
adc
push
lods
sbb
in
lods
fsts
in
and
clc
in
fsts
push
lahf
cmp
inc
xor
mov
push
psubd
test
or
loop
ret
loop
add
cwtl
mov
xchg
xchg
shll
adc
daa
sub
stc
pop
test
in
lcall
sbb
imulb
sbb
negb
mov
ret
inc
inc
sub
std
adc
mov
jno
ss
add
or
out
sub
sub
mov
in
jne
ljmp
push
cmpsb
out
mov
inc
xor
mov
mov
fs
jp
add
sbbb
aaa
jbe
xchg
shrb
ret
or
test
sbb
adc
rclb
ret
test
cwtl
imul
cmp
adc
call
jne
xchg
out
adc
movsl
outsb
pop
aaa
enter
leave
mov
mov
pop
push
loopne
mov
jne
mov
test
scas
lods
out
mov
and
jg
sbb
fwait
jb
pop
fucomi
std
add
add
jmp
cmpsl
insl
stc
out
mov
sbb
stos
adc
mov
cmp
outsl
fisubrs
cmp
inc
ficompl
adc
in
fstl
and
aaa
adc
stos
adc
cmp
aaa
pop
cmp
mov
fsubl
insb
jne
cld
rol
insl
mov
lea
push
lcall
pop
jg
cld
adc
or
clc
ret
sub
clc
sbb
fisubrs
repnz
inc
add
call
cwtl
ljmp
mov
inc
pop
mov
inc
mov
jno
xor
cli
pusha
sbb
cld
arpl
loop
adc
mov
jo
scas
sbb
pop
mov
hlt
add
push
mov
xor
push
int
icebp
adc
punpckhdq
cmpl
dec
stos
out
pop
add
xor
sahf
or
out
mov
out
fistl
push
or
int3
push
xchg
test
pushf
or
dec
shlb
jle
mov
lods
sub
jne
popa
inc
js
cwtl
mov
or
scas
sbb
test
inc
xchg
push
add
pop
lret
aaa
and
jbe
or
in
add
out
sbb
test
inc
adc
adc
fwait
jg
or
loopne
add
sahf
mov
js
notl
pop
sub
cmp
aaa
pop
scas
and
jb
mov
inc
adc
push
cmp
xchg
rclb
sub
shll
sbb
inc
and
xchg
lret
add
cmp
cwtl
add
test
fiaddl
js
add
pop
lock
xor
pop
add
pop
jne
cwtl
in
adc
movsl
jle
rcll
sub
jge,pn
iret
and
mov
loope
gs
xor
push
and
mov
lds
jge
test
rcrb
gs
lock
repz
inc
mov
xchg
ss
jnp
call
ds
mov
cmpsl
stos
xchg
iret
add
js
add
cmp
lock
ss
add
ss
lods
pop
call
fldenv
sbb
or
jecxz
test
cld
loop
insb
add
or
add
sub
sub
shrl
inc
mov
and
and
ds
loope
lret
xchg
int3
sbb
add
adc
jae
mov
mov
dec
fwait
sbb
jmp
popa
or
adc
sbb
mov
or
and
aad
pop
clc
add
xchg
mov
inc
popa
lods
fcomip
mov
sbb
dec
mov
jo
leave
adc
shll
mov
adc
test
add
push
into
sbb
out
push
stc
nop
enter
je
dec
inc
cmp
sbb
add
push
fwait
insb
negl
je
fwait
inc
outsl
das
addl
pop
je
fwait
push
and
addr16
daa
sub
bound
rclb
push
mov
mov
xchg
sbb
inc
bound
rolb
dec
rolb
das
pop
js
and
jb
cmp
inc
inc
int3
mov
mov
ret
in
test
lret
or
push
cmp
cs
out
out
and
insl
rolb
das
push
int
xor
jp
lock
push
mov
push
inc
sti
mov
insl
cld
testb
or
sub
push
dec
adc
stos
mov
push
pushf
push
cmp
push
fmuls
pop
xchg
loop
test
repnz
rcl
std
pop
cmp
and
ret
cmp
xchg
stos
test
push
shl
and
inc
mov
and
sarl
cmp
jl
push
mov
pushf
adc
cwtl
int3
popa
frstor
sub
sub
call
adc
mov
push
aam
jecxz
sub
int
pop
lods
jecxz
inc
adc
fwait
stos
or
lcall
adc
inc
sbb
jnp
sub
fidivrs
mov
inc
mov
jle
adc
push
sbb
sub
and
in
cmp
and
ror
leave
sub
stos
xchg
and
scas
cmc
xchg
mov
jmp
aam
rcrl
xor
add
pop
jp
xchg
inc
mov
shr
jno
fsubr
jb
lcall
sarb
outsb
inc
addl
sbb
pop
fwait
movhps
cltd
sbb
xchg
mov
cwtl
add
or
push
iret
sbb
popf
dec
and
dec
icebp
add
xchg
pop
push
pop
ja
mov
fiadds
and
add
add
in
data16
lcall
shlb
mov
fwait
scas
pop
ret
loope
and
out
or
xor
es
push
push
dec
pop
push
dec
push
or
imul
cmp
add
fwait
and
nop
add
mov
clc
lahf
cmpsb
sub
sahf
mov
xor
lret
push
pop
ret
enter
adc
in
je
lods
push
clc
stos
sbb
fucomip
icebp
sti
dec
int3
mov
push
push
jecxz
sub
cmp
jmp
data16
sbb
push
shrl
push
lds
add
push
mov
pop
cmp
dec
sub
xchg
pop
inc
cmp
cmp
lods
hlt
lret
loope
and
push
mov
sbb
add
pushf
mov
sub
stos
mov
jmp
movsl
std
bound
mov
add
stos
enter
xchg
jecxz
aad
lahf
sbb
pop
sub
pop
or
fidivrs
dec
xchg
add
add
sarl
in
call
ret
movb
movsb
out
adc
mov
xorb
add
mov
add
test
pop
adc
lret
stos
test
ds
adc
aam
push
push
ss
mov
mov
add
scas
and
mov
or
loopne
dec
lock
mov
inc
out
xchg
xlat
pushf
xchg
pop
adc
pusha
mulb
out
jae
pop
pushf
mov
mov
push
and
xor
daa
ficomps
add
xorl
out
incb
rcrb
inc
fmul
sbb
das
push
push
push
add
pop
aaa
xchg
imul
shl
and
pushf
or
les
scas
outsl
sysexit
inc
fisttpl
mov
and
mov
add
aaa
lods
jo
fisubrs
aas
enter
jg
fwait
cmp
es
jle
jp
lds
push
pop
inc
push
ljmp
jb
out
insb
push
icebp
mov
dec
pop
sub
push
pop
inc
mov
and
repnz
stos
mov
lods
ja
inc
rcll
dec
or
lcall
aaa
test
sub
hlt
add
xchg
and
pop
xor
adc
jnp
movsb
sub
insl
mov
fstps
test
push
push
lods
mov
ja
jo
jb
add
jne
jno
hlt
ja
sub
jne
mov
sarb
bound
cmc
sbb
pop
js
shll
pop
add
stos
mov
push
add
lods
adc
cmp
and
mov
push
cmp
mov
sub
add
out
add
and
data16
hlt
outsb
mov
mov
data16
sbb
mov
xchg
and
call
sbb
or
jb
addr16
mov
push
jmp
xchg
clc
push
adc
adc
lahf
ret
jno
sbb
mov
mov
gs
adc
mov
cwtl
adc
sahf
test
das
xlat
shrb
sub
adc
push
xor
fstpt
outsl
ss
loopne
in
int3
roll
mov
clc
bound
mov
push
ret
xor
movsb
adc
push
inc
lods
sub
add
scas
jle
and
punpcklwd
xor
dec
sti
lods
scas
loope
pop
xlat
push
push
adc
sub
js
mov
pop
and
data16
xor
push
adc
scas
lock
xchg
push
cmp
jo
push
add
insb
push
fadds
mov
xlat
adc
jne
insl
dec
pop
xchg
push
sub
xchg
push
pop
nop
int3
and
push
test
pop
ja
jne
jb
je
sbb
add
sahf
lods
push
mov
xor
stc
xor
add
mov
and
sub
ds
int
mov
sahf
cmp
lods
inc
sub
inc
insl
cld
outsb
fbstp
inc
jns
flds
push
pop
fsubrl
inc
rolb
insl
mov
js
pop
fistpl
cmpsl
test
cld
dec
ja
inc
and
daa
mov
push
pop
push
adc
xlat
imul
xor
fsubl
mov
mov
pop
pop
popa
pop
jo
add
popa
mov
das
xchg
sub
sbb
pop
pusha
pop
inc
scas
outsl
mov
cmp
inc
adc
cmp
pop
push
insb
xchg
idivl
ds
pop
imul
or
lea
pop
mov
sbbl
adc
jbe
pop
sub
popa
test
mov
imul
pushf
cmp
xor
in
lahf
nop
mov
cli
cli
int3
sbb
add
cmp
add
out
loopne
loop
aas
jmp
sub
push
adc
xor
in
dec
pop
mov
aad
scas
jnp
repnz
fcoms
pop
in
jmp
out
test
dec
mov
inc
daa
adcl
sub
imul
adc
and
and
add
fcompl
test
sbb
aam
xchg
lods
lods
insl
push
add
jmp
lods
push
sub
push
leave
fstl
gs
inc
mov
sbb
xlat
les
adc
cld
mov
mov
xchg
inc
or
lods
mov
filds
mov
and
popa
add
daa
cmp
notb
push
push
pop
lods
xor
sbb
xchg
mov
addb
out
mov
sbb
adc
mov
mov
orl
push
pop
xlat
std
lea
inc
sub
jl
out
lahf
js
call
sbb
jl
xor
push
and
call
fwait
outsl
popf
xor
inc
add
dec
or
das
jbe
xchg
out
pusha
cmpsb
loope
add
cmp
cmp
das
mov
sbb
ret
roll
xor
sbb
fists
cmpsl
movsl
xchg
mov
hlt
adc
push
pop
xchg
scas
sbb
aad
push
push
pop
lret
sbb
adc
fs
lock
fistps
jecxz
pop
sbb
jae
xlat
xchg
adc
sub
push
push
dec
push
movsb
lahf
dec
loopne
push
mov
jge
dec
out
jmp
mov
jne
insl
ret
sub
mov
mov
lcall
cld
in
loopne
out
jno
shr
mov
into
sub
mov
push
adc
js
push
mov
sbb
arpl
push
xchg
push
loopne
xor
subb
stc
mov
pop
sub
and
dec
cs
outsb
pop
daa
add
div
pushf
popa
je
cmp
inc
and
sub
dec
mov
cmpsb
jp
aaa
pop
dec
push
sbb
in
jmp
ja
lods
jnp
sub
sbb
xlat
or
sub
mov
jo
je
pop
and
gs
addr16
fldt
pop
jmp
xchg
lock
jae
and
pop
pop
push
or
sbb
sbb
push
aas
push
mov
mov
push
js
fimull
mov
pop
mov
popf
push
je
cmp
scas
adc
mov
xor
into
popa
sub
pop
inc
stos
fstpt
gs
ds
cltd
xor
fwait
xor
and
xor
sub
jbe
add
lahf
js
das
loopne
scas
ja
gs
loopne
push
es
and
scas
popa
jns
inc
ja
and
pop
cmc
jns
lods
aaa
xor
push
sub
pop
xor
aam
mov
ror
ret
lds
sub
getsec
push
sti
popa
lock
int3
stc
ss
inc
out
sub
adc
mov
xor
inc
cmp
lods
and
aaa
out
mov
js
dec
les
jne
aad
mov
push
and
push
add
jns
mov
jbe
sub
mov
sub
inc
jne
pop
icebp
sub
mov
test
pop
sub
add
cmc
adc
mov
sub
sub
cmc
push
jl
scas
mov
stos
cs
popa
jnp
mov
and
aam
push
xchg
mov
pop
dec
inc
lcall
push
push
pop
add
xchg
mov
sbb
mov
pop
add
sub
lock
cmp
jae
mov
add
or
sbb
pop
das
sbb
bound
xchg
push
xor
scas
in
adc
scas
les
in
mov
sbb
test
add
jl
push
xchg
xor
cs
ret
je
xor
call
nop
andl
pop
push
and
sub
add
push
jo
inc
xchg
push
mov
into
pusha
push
xchg
sbb
fiaddl
xchg
sub
mov
bound
push
mov
aas
dec
subl
mov
movsl
es
ljmp
lea
mov
mov
popa
and
iret
imul
ja
sbb
aad
mov
add
jecxz
mov
aam
push
mov
inc
inc
shlb
push
mov
int3
fsubp
inc
jbe
and
aad
bound
shl
xor
add
int
and
int3
sbb
xchg
fcoml
inc
ds
fwait
dec
imul
xchg
push
in
fldenv
sahf
dec
or
dec
xchg
scas
sbb
xor
inc
xchg
push
bound
andb
adc
nop
push
or
mov
lret
jecxz
cmp
test
adc
je
daa
or
and
push
cltd
ret
test
sub
jg
inc
push
std
and
sbb
pop
lock
sar
daa
add
cmc
inc
mov
les
jb
and
push
add
add
adc
sbb
cmpsl
sbb
scas
sub
imul
adc
pop
sub
mov
inc
add
into
cmp
rcrb
cmp
arpl
and
mov
mov
xor
adc
lret
adc
pusha
mov
inc
pop
rcll
nop
xchg
lret
adc
mov
pop
ror
lcall
adc
mov
sarb
andb
fildl
shl
mov
add
and
sub
xor
pop
ljmp
mov
push
jecxz
adc
and
fldcw
daa
pop
stos
shll
mov
add
jns
lds
jno
scas
mov
dec
add
xchg
sbb
call
lea
ret
fninit
and
sbb
or
int3
idivb
cmp
iret
pop
cmpsb
comiss
pop
jecxz
fwait
jp
mov
add
push
and
rcrl
adc
xor
movsl
push
jge
inc
daa
popf
int
mov
adc
mov
lret
pop
jbe
sbb
adc
inc
push
jb
add
rolb
shll
in
rorb
add
lds
dec
adc
out
xchg
mov
sub
aad
add
out
xchg
and
loopne
sbb
inc
mov
aaa
dec
scas
pusha
mov
es
pusha
ss
add
mov
add
aad
adc
ret
jne
and
lea
pavgw
and
outsb
mov
jo
pop
xlat
sub
in
inc
and
and
popf
movsb
sbb
lods
pop
orb
test
enter
call
pop
fcomi
addb
andb
mov
or
push
arpl
jo
jmp
adc
mov
pop
mov
push
fmuls
das
jge
insl
jmp
subb
ja
dec
adcb
shlb
test
xlat
sti
sub
scas
sbbb
pop
jl
cmpsl
ja
movsb
dec
push
xor
nop
imul
nop
mov
add
dec
adc
or
mov
movsb
xorb
add
dec
inc
add
subb
jl
mov
jbe
out
mov
add
sub
mov
pop
add
add
stos
popf
xor
xor
mov
inc
arpl
pop
aam
sub
mov
sbb
in
sbb
cmp
mov
stos
call
jmp
xchg
pop
jmp
jo
fs
dec
adc
push
fcmovnb
sub
pop
iret
jnp
gs
mov
or
cmp
push
and
ds
int
imull
mov
scas
mov
push
or
notl
mov
add
xchg
and
pushf
mov
lds
mov
and
inc
sub
js
xor
xchg
sbbb
mov
xchg
bound
movsl
pop
mov
add
js
test
xchg
sbb
push
jmp
andl
lcall
mov
inc
mov
sbb
or
sbb
push
cmpb
imul
fwait
shlb
adc
add
jnp
test
jae
xor
subb
mov
in
add
daa
adc
mov
jmp
add
xor
xor
sub
cmp
xor
mov
cmp
fimuls
call
daa
push
test
scas
xchg
push
add
cwtl
push
cmpb
adc
rcll
aaa
mov
mov
push
mov
ret
outsb
loop
iret
jp
loop
add
or
push
xchg
mov
rcr
pop
in
sub
or
cmp
dec
and
fimull
adc
mov
vmaxps
in
int3
xor
mov
imul
dec
bswap
add
ret
xor
xchg
subps
pushf
adc
xchg
sub
movsb
sub
push
js
movl
add
inc
movsb
push
and
into
cmpsl
mov
mov
cmpsl
xchg
xor
lret
loope
ffree
shr
jmp
insl
jecxz
imul
push
add
cli
pop
insb
pop
shufps
mov
push
enter
sbb
mov
outsb
xor
pusha
push
mov
and
or
pusha
js
mov
push
xchg
mov
dec
xor
pop
repz
addr16
scas
cmp
add
mov
in
jnp
inc
shl
fwait
fwait
bswap
push
pop
rcrl
pop
repz
cmp
nop
add
inc
xorl
sbb
mov
sub
in
daa
ret
and
movsb
lret
push
popf
mov
jg
jno
lret
or
jg
popf
dec
les
push
fwait
stos
jl
dec
dec
pop
and
adc
pop
lods
push
fmuls
add
xor
add
insb
cmp
pop
pop
inc
or
push
jecxz
dec
dec
push
xchg
fsubrl
pop
push
pop
jb
scas
and
pop
xor
mov
pop
xchg
cmp
fstpl
jo
fwait
mov
shll
pop
fwait
inc
xor
pop
test
scas
push
enter
xor
sub
push
mov
adc
sbb
add
push
andb
mov
pop
aad
pop
gs
cltd
sbb
bound
shrb
negl
mov
sub
add
cmp
add
jbe
loop
loopne
jo
aaa
jno
je
enter
mov
xchg
or
cwtl
dec
xor
in
andps
inc
sbb
scas
inc
addl
push
lea
aas
popf
mov
and
add
pop
push
push
cmp
outsb
adc
inc
js
int3
fs
fs
add
cmp
orl
scas
sub
icebp
and
sub
push
add
jb
xor
rcll
clc
test
and
dec
inc
add
sub
arpl
xor
push
pop
push
cmp
and
mov
mov
or
dec
les
fwait
xor
mov
add
icebp
mov
mov
jmp
insl
pop
sbb
mov
mov
fucomp
inc
jp
stos
scas
mov
push
lods
mov
lods
or
scas
cmp
inc
add
sbb
adc
loop
xchg
and
ret
xor
lret
aas
push
or
sub
add
rorl
lods
pusha
cld
icebp
push
lds
jg
cs
push
and
movsl
jb
cmpsb
fsts
xor
or
mov
into
dec
and
dec
or
push
add
outsb
push
arpl
dec
cld
jo
cmp
outsl
cmp
insb
repnz
int3
pusha
push
add
push
cmc
aad
and
rclb
dec
adc
dec
pusha
push
rolb
outsb
inc
addb
and
pop
mov
mov
mov
into
js
xor
add
bound
cmp
sbb
and
jg
and
flds
xor
nop
sub
and
leave
repz
pop
mov
aad
pop
add
mov
jb
int3
arpl
andl
out
add
inc
into
lds
mov
cmp
mov
adc
rorb
jl
or
mov
inc
inc
lcall
insb
mov
pop
add
cltd
mov
sti
sbb
bound
mov
mov
and
addb
fs
dec
cltd
add
inc
rcrb
jle
sbb
imul
and
adcl
lret
aad
pop
in
arpl
xor
push
xlat
cmp
push
jmp
dec
sbbb
js
inc
fistl
arpl
cli
ret
cmp
lods
mov
add
lock
stos
rorl
test
cmp
pop
jmp
jecxz
or
add
shll
sub
stos
add
fnstenv
call
mov
xor
push
mull
and
add
cmpsb
push
and
sbb
inc
inc
pop
inc
pop
push
dec
fsts
mov
add
pop
pop
cmpsl
popf
daa
inc
add
xchg
movsl
popa
or
mov
stos
popa
bnd
xchg
sbb
add
mov
add
jae
and
inc
gs
popa
inc
add
jle
adc
mov
sub
in
cmp
into
mov
mov
aaa
fistps
je
mov
jns
add
sub
in
fnstcw
pusha
adc
fistl
mov
xor
inc
mov
adc
cmpsl
loop
sub
incb
mov
aad
mov
inc
sub
ret
mov
stos
test
adc
and
or
dec
sbb
or
adc
and
push
pusha
mov
cmp
aaa
mov
adc
aaa
pop
push
clc
dec
push
and
in
jbe
mov
mov
leave
and
push
and
stos
cmpsl
daa
iret
lods
fldl
sbb
test
pop
mov
push
push
cmp
xor
cmc
push
sbb
adc
test
insb
das
and
ss
into
inc
mov
popf
add
xchg
cmp
xchg
popa
add
sub
fsubl
cmpsl
xor
in
sbb
mov
pop
push
inc
das
loop
iret
adc
pop
das
movsb
cwtl
adc
xchg
es
inc
dec
pop
dec
sub
dec
mov
ficompl
adc
and
testb
dec
mov
fwait
pushf
push
mov
inc
mov
daa
inc
or
adc
js
dec
jmp
and
shlb
push
aaa
jb
or
clc
mov
mov
adc
stos
cmp
ret
adc
arpl
daa
push
out
pop
ret
movsb
adcb
push
ja
lds
outsb
sbb
inc
add
scas
mov
cmp
icebp
xor
mov
add
pop
mov
mov
sub
push
sub
sbb
rcll
cmp
popf
movsb
mov
leave
inc
xchg
sbb
bound
into
icebp
call
lret
push
mov
icebp
sahf
sti
push
cmpsl
xor
inc
pushf
and
mov
inc
cmpl
add
xchg
xor
or
pop
jae
cmpl
mov
je
aas
popf
or
adcb
adc
xor
es
jb
mov
sub
sbb
call
enter
sbb
inc
adc
repnz
subl
and
gs
repnz
sti
push
adc
add
pop
add
daa
mov
xor
adc
aam
dec
rcll
pop
loopne
clc
jecxz
push
movsb
iret
inc
push
and
mov
lods
inc
mov
push
sti
push
mov
repz
add
sub
add
sub
add
adc
movsb
mov
loope
mov
insb
inc
loope
es
sbb
inc
cmova
jo
cwtl
xor
sbb
jae
jp
jecxz
cmp
xchg
dec
lods
fildll
sbb
push
imul
sub
inc
xchg
jne
dec
inc
sub
or
repnz
jno
and
add
ret
test
gs
movsl
push
dec
and
push
or
out
mov
mov
int3
jmp
adc
cli
or
les
dec
stos
les
xchg
xor
inc
aad
aam
adc
add
add
mov
xorl
jmp
js
mov
and
push
jnp
sbb
stos
and
mov
pop
or
popa
sbb
cmp
adc
dec
adc
push
push
or
nop
repnz
pusha
push
xchg
add
dec
xor
push
cld
push
adc
or
adc
dec
mov
bound
rclb
cs
pop
cmp
imul
push
xchg
cmpsl
sbb
cs
dec
imul
push
cmp
jp
mov
leave
inc
xchg
jne
sub
das
and
cmp
inc
cwtl
je
push
lcall
push
or
stos
dec
push
fldl
mov
aam
loop
aas
mov
subb
in
loope
or
cmp
cmp
insl
jo
cmp
jo
inc
cmc
stos
jo
enter
adc
sbb
jae
fstpt
stos
fimull
add
jl
mov
in
fidivs
sbb
and
std
jecxz
mov
pop
jbe
inc
and
lret
sbbl
inc
neg
shlb
xor
pop
sub
push
mov
pop
fistl
fnsave
insb
aaa
lods
fists
adc
stos
imul
jecxz
xor
clc
aad
lods
adc
imul
pop
pop
cmp
loope
add
ret
out
push
jl
aaa
sbb
sahf
pop
ja
cltd
lea
bound
ljmp
je
add
test
adc
jecxz
inc
mov
sub
xor
push
and
and
mov
xlat
add
lods
idiv
cmp
sbb
jae
repnz
push
inc
xchg
mov
lret
push
mov
outsl
inc
sub
mov
int3
add
dec
xchg
push
inc
cs
dec
add
push
dec
fstpt
das
push
and
push
push
test
inc
in
jl
add
adc
je
add
stos
jo
mov
out
movsl
addb
adc
xchg
ret
fwait
aas
and
outsb
inc
pop
fcoms
push
lret
add
shlb
dec
add
movsb
test
jge
lret
addr16
inc
xor
loopne
das
or
addr16
fmuls
xchg
lret
sub
jle
cmp
dec
insb
int3
lods
outsl
pop
and
mov
shl
and
pop
adc
and
mov
add
add
aam
rorl
outsb
xchg
dec
jno
aad
mov
xlat
adc
dec
in
stos
xchg
fidivrl
mov
cmp
aam
or
rclb
jecxz
subl
pop
addl
mov
inc
mov
xchg
repnz
pavgb
sbb
int3
daa
or
test
insl
add
sbb
push
fcoms
lods
pushf
adc
imul
cwtl
jo
sub
lea
loope,pn
iret
lock
mov
push
push
mov
clc
pop
arpl
and
pop
test
and
dec
movsb
or
mov
push
xor
inc
loopne
adcb
pop
mov
xchg
sub
and
sbb
inc
xchg
and
add
insl
scas
sbb
jmp
cmpsb
sbb
sbb
mov
mov
rorb
jmp
adcl
push
mov
mov
pop
add
es
adc
fs
sub
dec
xchg
or
sub
mov
mov
out
js
xor
shll
dec
adc
add
dec
push
mov
jg
cmpsb
jecxz
mov
loop
fwait
dec
aam
leave
add
bound
add
push
cmpsl
sbb
stos
movsl
sahf
incb
subl
sbb
jl
jle
out
dec
scas
push
push
loop
hlt
bound
sbb
in
add
loop
dec
inc
xchg
sbb
push
lods
inc
xchg
dec
mov
repnz
lock
add
sti
cmpb
inc
mov
addr16
cs
add
pushl
out
sub
push
mov
daa
decb
pop
and
inc
pop
call
arpl
inc
outsl
inc
int
ss
orb
mov
push
addr16
jo
xchg
dec
mov
int3
je
inc
push
xor
mov
inc
cmpb
mov
aaa
xor
in
aam
insl
or
iret
jl
cmp
push
add
jecxz
sbb
inc
xor
loop
jne
and
sbb
push
sti
inc
adc
push
xchg
mov
aaa
lods
and
mov
ret
bound
adc
push
add
popf
push
mov
mov
pop
sbb
and
mov
aad
lock
mov
pushf
mov
shr
in
daa
jb
mov
or
outsb
popf
and
ja
sbb
mov
adc
inc
mov
shrb
dec
pop
aad
xor
and
inc
xchg
testb
fstpl
mov
sub
sub
xchg
inc
push
jo
or
pop
xchg
outsl
adc
mov
bound
push
cmp
fistps
pop
inc
sub
arpl
pop
pop
sub
bound
xchg
andb
sub
cmpsw
and
jns
aas
mov
add
adc
sbb
push
xor
mov
pop
dec
xchg
fdivrs
adc
and
das
orl
stos
fs
mov
add
popa
pop
inc
pop
sub
outsb
pop
pusha
aad
and
lods
out
scas
loopne
add
mov
pop
or
inc
or
dec
push
xchg
mov
mov
pop
sub
and
cmc
shll
pop
mov
lcall
push
mov
push
test
add
fisubs
pushf
sbbl
or
mov
das
fs
add
push
push
jo
jnp
and
das
jg
daa
aas
xchg
movsl
mov
rclb
xchg
or
data16
mov
mov
xor
xor
nop
sahf
mov
push
sub
loopne
hlt
xchg
cltd
adc
inc
pop
js
test
ljmp
adc
push
insb
test
jge
lret
adc
mov
mov
icebp
sub
and
inc
push
subl
cmpsl
rorb
pop
and
xchg
test
das
movsb
cmp
mov
xor
xor
jo
inc
adc
mov
lock
mov
jo
xchg
mov
mov
popf
movsl
sbb
mov
adc
ss
lcall
cld
pop
ss
mov
adcb
rolb
mov
loope
add
mov
dec
add
jb
testl
call
daa
pop
in
cs
or
aas
add
sub
add
sbb
push
leave
sub
xor
mov
aad
loope
mov
push
cmp
xor
mov
mov
fistpll
cld
jge
popa
fadds
out
adc
mov
add
in
cltd
push
imul
shl
popl
addb
dec
jmp
lods
mov
idivl
js
inc
movsb
mov
and
out
or
aaa
pop
or
mov
inc
and
mov
and
cmp
or
sub
addr16
stc
mov
mov
rcll
mov
popf
orb
push
ss
int3
and
dec
jno
cmp
xlat
push
adc
mov
add
jp
inc
inc
imul
jno
cmp
roll
mov
push
hlt
jae
jno
mov
jne
daa
xchg
into
into
fs
jae
xor
mov
cmp
xor
push
mov
lret
sbb
lds
or
fwait
iret
xchg
stos
jle
mov
xchg
stc
jno
inc
rcrl
cmc
pop
icebp
or
xchg
jmp
adc
out
sbb
and
xchg
daa
int
das
add
data16
xchg
mov
jbe
fbld
push
ret
insl
xor
out
push
daa
jp
es
inc
sub
roll
stc
ss
mov
add
or
stos
mov
enter
inc
addr16
mov
xchg
aad
xchg
clc
push
insl
sub
shl
int
sti
adc
mov
mov
push
sbb
inc
lods
pop
fld
inc
pop
cmpl
or
adc
adc
cmp
push
loop
jno
mov
sbb
mov
xor
sub
add
movsb
sbbb
adcb
add
or
sub
jg
push
mov
or
icebp
add
or
jmp
sarl
es
test
and
mov
or
mov
pop
add
mov
jb
push
inc
inc
or
and
xor
push
mov
rcll
mov
adc
fisubl
mov
shll
ret
in
cltd
cwtl
fsubl
daa
inc
je
js
or
aaa
movsl
xor
movsl
stos
xorl
sub
xlat
sbb
roll
mov
iret
and
xchg
in
dec
push
aad
mov
cmp
jne
scas
push
lahf
sbb
adc
push
stos
lea
stos
pusha
sbb
out
push
lods
jge
sbb
jae
arpl
lock
sbb
mov
cmp
fneni(8087
fisubl
lds
test
int
cmc
jbe
push
dec
cmpsl
mov
in
stc
pop
mov
or
cmpsb
sahf
push
adc
jo
std
add
inc
mov
xor
or
mov
rorl
lds
jne
pop
xor
loop
imull
adc
les
hlt
jno
adc
loope
shll
stos
adc
dec
lds
fistps
inc
enter
push
push
mov
sbb
inc
add
or
push
scas
es
pop
out
sbb
pop
repnz
into
push
in
sbb
jge
add
and
pop
pop
mov
push
int
or
inc
dec
out
lret
mov
push
mov
cmpsb
loopne
xorb
sbb
cmpsb
mov
iret
cli
fidivl
or
sbb
rcr
out
test
ret
jg
gs
ror
fcomps
sub
and
subl
sub
sti
lret
addr16
sbbl
pop
adc
aas
das
int3
lea
ss
mov
lret
fdiv
cmp
addr16
stos
pop
and
fldt
pop
adc
movsb
jmp
xchg
push
cltd
mov
idivl
test
cmp
ret
xor
les
fwait
cmp
push
pop
loop
lds
daa
cmp
inc
jb
sbbl
mov
movsb
inc
adc
and
fsubs
cmp
outsb
scas
push
stos
imul
pop
shll
cmpsl
sbb
jo
xchg
xor
mov
outsl
aas
stos
int
dec
jp
scas
mov
daa
repnz
xchg
bound
cmp
in
rorb
rolb
and
mov
in
movsb
outsb
mov
push
sub
and
jbe
or
and
daa
lock
mov
das
push
and
and
or
out
adcl
loopne
testl
add
sub
and
lahf
push
mov
daa
push
jno
loopne
sbb
fcomi
adc
sub
and
lods
sarl
add
aas
test
sub
lock
cmc
das
pop
cmp
cld
push
pop
add
ss
call
in
and
out
pusha
shl
call
jne
sbb
add
insl
stos
out
and
out
mov
leave
jmp
jne
in
dec
xor
int
push
mov
and
or
popa
cli
and
sbb
fucomip
inc
pushf
mov
shl
hlt
xor
and
jecxz
or
mov
push
rcrb
xchg
or
push
sbb
cmp
rclb
inc
aam
lods
jb
mov
xor
test
loopne
adc
mov
insb
inc
outsl
scas
loope
jne
push
ds
xchg
inc
lods
xor
inc
sbb
inc
and
or
or
cli
nop
mov
jne
add
dec
mov
jbe
mov
jmp
es
loope
sbb
fucom
into
dec
lods
ss
stos
xchg
ja
lds
jne
sti
out
test
pop
mov
loop
xchg
add
shlb
mov
imull
stos
es
mov
sbb
clc
pop
sub
stc
data16
loop
pop
sub
xchg
mov
sahf
loope
sub
popa
xor
adc
cwtl
outsl
jo
and
repz
sub
cmpsb
cmpsl
dec
lods
fsubp
out
pop
mov
and
lcall
ds
xchg
fisttps
mov
inc
divb
movb
fdivr
popa
mov
in
cmp
arpl
clc
add
push
jns
dec
lret
ljmp
dec
pushf
adc
inc
push
stos
loopne
xchg
pop
xchg
adc
jl
test
mov
add
add
and
inc
mov
out
mov
hlt
dec
cmpsl
cmp
sbb
mov
sbb
xchg
inc
cmpsb
out
jnp
jbe
mov
dec
int
lret
popf
xorb
cmp
mov
fsubl
xor
jge
sbb
sub
popa
mov
test
ret
cli
xor
push
je
lret
xchg
inc
push
iret
test
dec
fisubrs
add
xchg
arpl
fistpll
dec
cmpsb
pop
xchg
or
xlat
jmp
pop
mov
call
fimull
mov
push
sbb
cmp
jl
add
sbb
pop
js
out
xchg
lds
pop
negl
shlb
add
cmp
pop
mov
add
mov
fs
xor
push
mov
push
add
push
or
xchg
add
push
mov
popf
sub
fwait
test
insl
addl
inc
or
std
lock
lahf
push
add
add
xlat
push
push
push
adc
loope
cmp
cmp
loopne
and
mov
sub
inc
stc
sbb
push
xor
adc
add
dec
mov
in
imul
dec
rclb
pop
or
sub
int
pop
out
push
cmp
cmp
xor
addb
orb
or
inc
xchg
aas
lahf
mov
les
jne
and
jmp
xchg
pop
cwtl
inc
pop
icebp
out
outsb
xor
add
cmp
cs
push
test
hlt
jb
inc
fstps
fistpll
cli
add
or
fnstsw
jmp
and
aad
add
jmp
jns
aas
loopne
cmp
xchg
add
push
js
adc
cmp
mov
mov
movsl
ja
mov
stos
sbb
jo
fs
xchg
cmp
lock
and
sub
lcall
fwait
js
dec
jp
sbb
pusha
in
sarb
sub
jo
mov
or
call
cmp
pusha
inc
int
call
push
cmp
xchg
mov
sti
outsb
sub
inc
cmp
push
je
sahf
sbb
or
and
xchg
fidivs
jnp
lahf
cs
test
xor
jo
scas
and
pop
add
mov
cmp
jo
pushf
jp
in
cmpsb
shll
xchg
xor
add
dec
or
int3
and
xchg
or
or
mov
sbb
lock
sub
inc
loopne
mov
push
or
out
fdivrl
rorb
mov
mov
ja
iret
adc
add
jp
and
adc
add
or
jno
aam
push
push
xor
and
data16
add
ret
imul
push
pop
mov
mov
ret
inc
clc
add
jae
movsb
add
andl
pop
jns
cmp
pop
ret
add
out
mov
pop
out
loope
in
andl
rolb
movsl
and
lods
sbb
push
inc
and
clc
cmp
xlat
pushl
or
cmp
lret
pop
ret
adcb
jmp
adc
cs
ja
rol
add
pop
cmp
jnp
mov
scas
jo
int3
push
mov
mov
cmp
scas
cltd
jo
mov
jo
cmp
jno
mov
and
pop
and
sbb
push
lock
xchg
das
repz
out
insl
fwait
mov
sbb
xor
push
adc
fcoms
mov
jp
push
pop
ret
mov
mov
push
in
add
adc
js
ljmp
push
cmpsb
inc
mov
and
dec
inc
cmp
xchg
arpl
xor
adc
into
les
xor
lock
ret
aaa
sub
cwtl
xor
cmpsb
lds
xor
fistpll
xor
push
cmp
notb
pusha
adc
xchg
imul
add
out
ret
mov
xor
cmp
and
shll
rcrl
mov
out
pusha
fs
or
loopne
repz
cmpsb
in
push
dec
loopne
mov
xor
push
mov
xlat
xor
jle
add
xor
fbld
aaa
xor
add
inc
in
mov
mov
jl
cmpsl
inc
dec
clc
xchg
sbb
add
push
stc
adc
in
and
xor
pop
ret
inc
inc
dec
je
lods
in
push
sbb
xor
and
out
bound
jne
inc
push
adc
bound
jo
sti
push
adc
jg
push
pop
sahf
ds
cmp
and
lsl
adc
or
jmp
cs
or
mov
ja
insb
fdivrs
inc
sub
pop
adc
and
int
je
sbb
lock
cmp
mov
notl
js
cmp
fisubrl
daa
push
movsb
leave
jp
rol
subl
push
sarl
xor
add
xchg
push
jns
and
xor
sti
mov
fwait
xlat
cltd
rclb
inc
xor
jo
in
add
jp
xchg
daa
mov
adc
loop
loope,pn
loope
mov
add
inc
and
fsubl
and
sti
xor
inc
or
adc
lods
jecxz
jo
andb
js
push
xlat
xorl
inc
sbb
push
pop
dec
out
sub
mov
dec
ja
imull
add
in
test
sub
mov
adc
dec
dec
xor
ret
sbb
loope
dec
mov
cmpsl
jl
or
repz
scas
ficomps
mov
vpsrlw
ss
enter
dec
loop
insb
ja
rol
arpl
jmp
sub
cmp
lret
roll
dec
xor
test
int
fsubr
cmp
add
divl
das
inc
sbb
imul
loop
add
cmp
jl
in
out
or
fsubs
int3
sbb
ret
adc
pusha
and
shr
ret
sbb
sbb
nop
in
sub
mov
jne
xor
push
xlat
leave
add
jmp
stc
fistps
add
iret
push
mov
mov
sbb
push
test
push
in
pop
xor
out
add
fwait
into
sbb
add
jecxz
inc
add
xor
sbb
mov
cmp
mov
in
scas
jo
push
ret
in
adc
xchg
das
sub
push
shl
popa
sahf
sbbl
add
loopne
mov
mov
dec
in
lret
mov
mov
mov
cmp
jmp
mov
into
push
lcall
clc
jb
xchg
icebp
mov
add
xor
sub
int
cmp
dec
xor
mov
stos
add
loope
dec
pop
add
lret
xorl
mov
mov
mov
shlb
dec
cwtl
mov
fldl
jmp
add
imul
sbb
pop
sbb
pop
aaa
or
adc
add
iret
call
fs
fiadds
stos
pop
jo
jo
shll
push
ficoms
push
fcmovnb
add
add
xchg
jle
inc
mov
unpcklps
sbbl
jnp
or
test
into
fiadds
loopne
mul
cld
sahf
mov
sub
add
adc
push
fnstenv
and
dec
push
cmp
pop
imul
push
mov
sub
je
inc
and
add
xchg
stos
xchg
pop
pop
lret
push
je
subl
addl
int3
arpl
scas
pop
jmp
ljmp
in
jo
xchg
cwtl
mov
mov
pop
ficomps
inc
gs
mov
adc
data16
dec
les
shrb
dec
insb
rorl
push
xchg
and
lcall
into
and
add
mov
xor
test
icebp
cmp
lret
xlat
jo
iret
in
mov
add
imul
imul
test
pop
lods
push
sbb
push
mov
shlb
es
test
xchg
cmpsb
shl
popa
bound
fcompl
and
push
out
or
cmp
xchg
and
fs
xor
mov
jmp
iret
xchg
or
insb
adc
enter
adc
push
xor
outsl
inc
inc
cmpsl
cmp
out
dec
mov
and
inc
je
scas
scas
add
or
cmp
inc
mov
and
adc
and
xor
mov
sbb
and
incb
pop
push
xor
fimuls
sub
inc
or
std
cld
fwait
inc
or
mov
pop
into
call
adc
call
and
fxch
hlt
jo
or
popa
dec
fistpll
sub
sub
cmpsb
cmp
add
ret
sbb
sub
push
cmp
gs
jns
adc
enter
sub
mov
int3
pop
in
xor
imul
data16
test
adc
std
jae
mov
fiadds
sbb
out
dec
addr16
fadds
xchg
or
push
sub
out
mov
mov
daa
call
fsts
and
jl
mov
inc
jo
lcall
pop
imul
popf
pop
outsb
out
out
iret
and
xor
inc
cmp
movsb
pop
add
sarb
in
mov
ja
xor
sbb
movsb
in
xchg
insb
clc
add
mov
stos
push
sub
notb
ljmp
fbld
call
xchg
and
jle
bound
xchg
popa
xchg
loop
or
out
fnstsw
or
scas
and
pop
xor
pusha
or
sub
jne
int
or
loopne
test
and
mov
cmp
or
int
scas
pop
es
in
into
or
and
mov
jle
push
shl
ja
inc
adc
jle
and
pop
lds
jo
ljmp
push
outsb
fmuls
push
xchg
lods
cltd
xor
add
imul
jle
add
not
or
mov
cmpsl
sub
movsb
cmp
mov
push
dec
dec
sub
jo
pop
ret
inc
sub
and
addr16
inc
sbb
adc
adc
mov
dec
cmp
cmp
in
mov
add
ss
lods
and
dec
adc
jo
or
out
or
iret
pop
inc
in
stos
es
cmp
dec
xchg
push
lock
pop
sbb
aas
popl
out
movsb
insb
les
fidivrl
inc
mov
out
popa
push
add
adc
aaa
sbb
adc
xor
fsts
jp
and
shrl
mov
fst
pop
add
int3
and
push
pusha
push
mov
rolb
or
add
jle
push
out
push
js
aam
test
pop
jb
and
push
inc
push
xchg
inc
les
aam
add
adc
imul
out
fisubrl
ljmp
and
aas
mov
popa
nop
dec
shll
pushf
cmp
mov
pop
roll
fidivrs
inc
and
push
xchg
push
xor
sub
fwait
arpl
leave
stos
imul
or
and
inc
xor
sbb
int3
mov
mov
xor
scas
orb
sub
daa
inc
push
aad
and
push
aas
mov
sbb
xchg
pusha
jp
inc
stc
inc
js
mov
adc
popf
inc
xor
fsubrl
mov
aas
push
pushf
mov
xchg
fsubp
xor
lcall
test
adc
call
adc
lea
push
inc
mov
dec
bound
adc
adc
mov
or
sub
sub
mov
out
addb
inc
shlb
fidivs
jp
xchg
jb
cltd
dec
popa
fdivrs
enter
clc
push
subl
jbe
dec
insb
repnz
lea
cltd
jae
test
inc
jae
dec
sub
inc
jl
fnstenv
pop
jno
xor
lcall
add
dec
push
mov
pop
orb
sub
fistpl
inc
xor
sub
lcall
and
sub
and
loopne
sbb
aas
out
repz
out
cmc
dec
add
mov
popa
ljmp
sbb
out
inc
sub
and
shll
insb
pop
push
sahf
push
adc
cmp
mov
iret
ret
sub
sbb
mov
push
cmpsb
ljmp
fistpll
inc
jbe
adc
and
and
gs
adc
iret
pop
inc
add
mov
or
mov
adc
sub
sbbl
jl
cmp
ja
aaa
lods
and
call
and
mov
and
or
aas
aam
mov
xor
jno
push
into
mov
outsb
das
cmp
or
adc
jb
xchg
or
fisubrs
fdivrl
jmp
sub
xchg
or
out
cmc
and
call
loopne
rorb
stos
inc
mov
arpl
dec
pop
insb
mov
fcoml
mov
and
lea
sbb
and
jle
sbb
lret
arpl
and
pop
and
mov
out
mov
sbb
movsl
es
notb
ret
add
sahf
popa
rorl
jp
xchg
outsb
rcrl
mov
ja
push
andb
cmp
jo
mov
xor
sub
outsl
inc
inc
test
inc
int
or
inc
rolb
cmc
cmp
jne
xor
loop
dec
roll
or
mov
and
push
lods
aam
sahf
adc
jne
xchg
je
add
jno
shlb
sbb
jbe
in
push
inc
xchg
xor
and
pop
pop
xchg
mov
xchg
sbb
fldl
pop
add
arpl
adc
mov
dec
fstps
pop
mov
movsl
sbb
testb
hlt
mov
bswap
and
cmc
ljmp
test
mov
cli
add
or
pushf
bound
pop
imul
shlb
push
inc
inc
inc
shll
push
ljmp
xor
xchg
iretw
xchg
dec
push
inc
stos
xor
or
cmp
js
push
sar
in
xor
mov
mov
and
dec
add
adc
test
les
mov
mov
iret
test
out
or
push
mov
sarl
test
push
jge
add
push
js
bound
rcr
imul
inc
cld
iret
add
dec
icebp
movsb
jo
add
aad
mov
jmp
popa
movsb
sbb
popf
push
rolb
inc
loopne
mov
pop
mov
mov
xorb
inc
test
fildl
xor
xor
xor
sbb
push
cmp
push
es
jecxz
cmpsb
scas
pushf
loope
ljmp
or
xchg
or
mov
xchg
adcb
mov
xor
xchg
push
push
int3
mov
sti
adc
add
adc
sub
cmp
push
xor
test
repnz
adc
or
add
and
scas
addr16
lods
ljmp
stos
popa
cmp
bound
sbb
sub
lcall
inc
add
lods
jecxz
movsb
stos
or
pop
mov
cwtl
jno
sub
sub
or
sbb
mov
cmp
movsl
or
test
cmp
fsubl
push
push
cmp
aas
lds
xchg
mov
jmp
adc
or
xchg
mov
pop
push
insb
or
inc
jl
cmc
mov
cmp
mov
xor
or
jo
add
ja
pop
inc
and
in
inc
inc
in
inc
inc
jecxz
lcall
bound
iret
das
popa
add
and
push
and
pusha
inc
sub
aaa
jnp
xchg
jno
add
stos
testb
push
jns
sub
bound
jnp
ja
mov
fcomi
fcoms
sbb
cmc
sbb
mov
jae
push
mov
xchg
mov
sub
insb
pop
add
add
lcall
mov
sbb
sbb
mov
add
jbe
mov
into
add
jle
and
lcall
movsl
in
fiaddl
mov
dec
jns
imul
push
or
pop
push
fcoms
push
mov
xchg
sbb
dec
pop
jns
inc
std
and
xchg
add
pushf
cmp
mov
or
push
pop
add
sub
mov
andb
xor
movsl
cmp
push
outsl
sub
mov
dec
or
adc
dec
loop
adc
adc
outsl
outsb
ja
sbbl
or
sbb
adc
xor
mov
add
movsl
dec
bound
mov
mov
addb
inc
scas
rorl
or
cmp
mov
lds
daa
mov
cwtl
pop
jmp
adc
enter
mov
mov
iret
inc
dec
inc
cmp
add
cltd
aas
dec
jo
pop
cmp
orb
test
ljmp
pop
pop
loope
nop
sub
sbb
or
pop
and
jbe
cli
iret
mov
int3
adc
clc
in
mov
stc
add
and
dec
lock
add
popa
and
push
in
mov
fsubl
sahf
push
pop
add
cltd
add
call
outsb
or
xchg
push
out
dec
test
inc
mov
or
dec
roll
add
ss
xor
sbb
data16
mov
ss
dec
xor
add
ret
in
pop
pusha
adc
add
cmp
mov
cmp
dec
lea
stc
add
andl
sbb
insl
rolb
daa
add
adc
mov
les
push
and
lods
xlat
int
leave
add
inc
xor
pusha
xchg
pop
sbbb
andb
sub
js
push
in
mov
mov
cli
pop
cld
xor
add
mov
cmp
pop
iret
inc
fcmovb
stos
and
lret
ret
out
sbbb
cli
sti
jb
insl
or
int3
pop
into
add
lcall
test
ret
mov
sbb
cmp
push
rolb
mov
adc
and
movsb
or
fbld
xchg
iret
cwtl
lock
orb
add
aaa
test
enter
adc
xor
pop
mov
loope
mov
xor
hlt
xor
scas
popa
jbe
push
sub
push
inc
int3
adc
pop
je
scas
pop
inc
cmp
xor
add
cmp
add
es
xchg
stos
add
pop
ret
sbb
icebp
stos
fs
push
add
jae
jne
mov
daa
mov
add
adc
and
mov
fs
inc
or
pusha
sarb
add
das
pop
test
insl
popl
push
ds
or
pop
xchg
xorl
adc
push
mov
jbe
and
pop
in
sbb
pop
popa
inc
out
xchg
popa
orb
orb
int3
pop
push
lds
je
loope
js
addl
mov
pop
xchg
sbb
add
add
out
push
mov
out
or
out
xor
je
pop
imul
push
mov
pop
call
or
adc
inc
adc
add
bsf
inc
sub
inc
or
loopne
mov
or
or
mov
inc
add
icebp
test
jge
dec
inc
push
orb
adc
loop
mov
ret
adc
inc
xor
addb
push
dec
and
mov
add
or
test
test
and
xor
inc
mov
ficompl
mov
push
add
andb
sub
sub
ficompl
mov
notb
test
mov
pop
in
test
adc
xor
mov
xor
bound
lcall
test
xor
sub
sub
and
iret
xor
inc
add
mov
test
add
cs
adc
xchg
push
dec
mov
xor
sub
dec
mov
or
sbb
ret
sub
jbe
insl
mov
inc
dec
sub
or
stos
aas
add
daa
fiadds
sbb
lcall
and
push
inc
cmpsb
js
rorl
sarl
hlt
fistl
mov
sbb
shrl
pop
inc
popa
out
je
rcrl
pushf
lods
fists
and
dec
xchg
sub
jle
fldcw
add
and
stos
push
das
fmuls
inc
pushf
and
inc
arpl
int3
andb
sbb
cmp
or
push
or
inc
push
dec
and
jmp
movsb
or
lcall
mov
jo
imul
add
int
scas
jbe
fwait
or
pusha
ds
push
and
mov
fstpt
cmp
or
andl
push
rcll
rcll
in
or
and
shr
dec
dec
lods
mov
sbb
aam
repz
and
jb
mov
icebp
sbb
iret
mov
loop
ja
mov
add
xchg
cmp
addr16
inc
aam
dec
add
mov
sub
sub
cmp
lcall
enter
mov
add
mov
ljmp
and
daa
xchg
adc
add
sbb
popf
shlb
ljmp
and
mov
cmp
inc
dec
loope
mov
loopne
jmp
pusha
and
sahf
pop
sahf
imul
mov
xor
push
xchg
jp
mov
or
xchg
loopne
cld
mov
and
add
std
mov
lods
sub
adcb
push
push
sub
inc
out
and
mov
add
cli
mov
jae
daa
imul
shll
pop
sbb
xchg
popa
adc
inc
pop
sub
adc
pop
xchg
push
inc
out
mov
pop
subb
cltd
cmp
inc
insl
pop
push
sbb
dec
pushf
push
mov
outsl
stos
mov
xorl
xor
imul
cmp
lods
aaa
mov
imul
in
dec
push
cvtdq2ps
xor
pop
jle
repz
sbb
filds
orb
mov
sub
jne
sbb
gs
das
maskmovq
testl
add
xchg
pusha
cmpb
adc
xchg
and
add
test
pop
jnp
add
pop
aam
cmp
mov
cltd
or
adc
test
rclb
andl
or
insl
dec
data16
push
je
push
lods
ret
loope
in
add
enter
shll
pop
xor
mov
pop
adc
call
pop
test
add
or
jno
call
rorb
ljmp
call
push
mov
fdivl
sub
or
outsb
dec
add
cmp
jne
sbb
cmp
pusha
jp
adc
out
adc
aad
dec
adc
bound
push
xor
or
jo
cmp
das
test
fcomip
mov
aas
push
mov
xor
push
cmp
outsl
mov
sti
fldenv
xchg
das
mov
loopne
cwtl
pushf
adc
mov
adc
inc
dec
and
js
ss
insl
cs
or
adc
xchg
orb
xor
mov
cmp
mov
and
scas
orb
test
mov
loopne
test
inc
pop
xlat
mov
lret
push
jmp
and
adc
insl
aaa
and
enter
dec
dec
xchg
movl
adc
mov
or
xor
test
andb
xor
pop
pusha
push
inc
mov
adc
ljmp
jg
mov
xor
and
xor
or
call
mov
fsubs
shlb
mov
inc
idivb
loopne
mov
mov
test
or
mov
xor
xchg
xchg
movsb
push
lds
cli
int
pusha
jnp
push
sbb
xchg
dec
loopne
add
out
dec
cmc
mov
stos
lods
jno
pop
inc
mov
call
sub
mov
ss
fldl2e
sub
mov
daa
mov
sahf
call
fsubs
loopne
mov
pop
push
sub
sub
aam
inc
push
sub
or
mov
mov
sbb
cmp
jbe
movsb
add
jae
cmp
aad
add
inc
inc
jmp
inc
mov
and
inc
hlt
sti
sub
lret
sti
sbb
sub
or
cltd
sub
push
mov
push
adc
mov
sbb
add
inc
push
je
sub
dec
adc
in
or
fcoms
or
push
outsb
popf
enter
add
jecxz
sbb
test
cmpsl
and
cmpsl
stos
xor
out
lods
sbb
rolb
rolb
push
int
xlat
push
mov
mov
mov
xlat
xchg
adc
rcrl
push
add
cli
inc
jo
xor
xor
lds
mov
test
es
adc
cmpsb
add
sub
and
push
sub
mov
or
bound
iret
xor
clc
pusha
loope
pop
popa
push
mov
ror
pop
dec
mov
xor
mov
xchg
pop
js
jo
and
and
mull
loopne
mov
arpl
bound
add
inc
xchg
xor
or
pop
mov
popa
mov
imul
daa
add
les
sbb
push
sub
xchg
stos
mov
xlat
or
mov
add
cs
mov
xlat
loopne
inc
aad
push
pop
inc
jbe
test
sub
ret
cmc
or
ja
inc
cmp
xor
xchg
and
inc
adc
or
in
test
dec
jne
out
js
sub
adc
jo
add
fmulp
jb
and
push
adcl
xchg
andb
test
lock
je
sbbb
pop
call
rclb
mov
cmc
repz
mov
jne
xchg
orb
je
cmpsb
pusha
jle
mov
pop
dec
pop
cmp
test
adc
xor
push
lock
dec
lock
sbb
adc
dec
es
jo
filds
mov
popf
push
lock
push
shlb
adc
rorb
xchg
outsl
add
push
fistpl
jne
inc
and
test
popf
inc
cmp
xor
fs
mov
cmpsb
fnstenv
stos
call
stos
gs
cmpsb
push
or
in
int3
ffreep
adc
inc
pop
dec
xor
inc
popa
sbb
stos
cmc
subb
ret
insb
out
xchg
inc
add
push
stos
add
add
push
arpl
push
mov
or
push
fadds
cltd
add
xchg
adc
fstl
add
add
mov
adc
ds
push
pop
add
dec
or
xor
adc
pop
fadds
xor
or
in
scas
sub
int3
mov
inc
frstor
mov
cmp
xor
shll
dec
fwait
cmp
jle
cmp
jmp
adc
adc
gs
cmp
sub
bound
or
mov
rcrl
jl
add
cmp
pop
out
or
sub
jb
xchg
mov
xor
mov
sub
sbb
ret
sbb
sahf
ljmp
adc
mov
push
mov
out
fidivrs
mov
das
fbld
push
xchg
lods
loop
mov
push
jne
das
add
scas
aam
hlt
stos
call
cmp
sbb
test
xor
shll
jo
ret
jecxz
addl
dec
vminsd
fisttpl
test
and
daa
movsl
cmp
lret
int3
mov
add
arpl
out
mov
out
mov
cmp
das
movsb
fistpl
pop
js
or
js
ljmp
ret
push
loope
jmp
add
lret
add
js
push
xor
incl
and
cmp
cmp
xchg
mov
es
mov
fcoms
cmp
add
adc
enter
xchg
jae
neg
dec
pop
repz
popf
pop
pop
inc
mov
repz
cmp
adc
cmc
in
jae
test
out
int
push
ds
rcll
repz
mov
mov
xchg
add
inc
lahf
subb
cmpsb
mov
jl
es
xor
pop
mov
add
add
xchg
cmp
mov
orb
dec
stos
dec
rcrb
aad
pusha
mov
or
sbb
rcrl
dec
push
cmpsb
mov
loopne
sub
ljmp
popa
pushf
cmpsb
stc
iret
cmp
test
popf
cmp
data16
sub
fimull
mov
sub
pushf
test
cmp
aaa
test
aam
shlb
dec
inc
add
add
test
pop
dec
xor
scas
and
imul
stc
popa
inc
pop
cmp
test
pop
out
add
stos
xor
jns
sbb
cmp
cmp
jno
or
and
loope
dec
clc
repnz
aaa
add
aaa
int3
iret
push
sub
repz
data16
jb
enter
push
test
xor
or
ret
adc
push
clc
fmul
lret
iret
xchg
xor
mov
mov
pop
popa
popa
add
push
push
jae
in
cmp
inc
fcoms
mov
xchg
push
sub
out
incl
jnp
or
and
pop
mov
ret
outsb
rolb
lret
sub
in
sahf
mov
mov
xchg
cld
imul
mov
and
jo
push
inc
inc
rolb
xchg
roll
scas
add
inc
dec
sbb
arpl
testl
lcall
aad
dec
je
cld
aad
ss
gs
pusha
adc
push
shl
fwait
sbb
lods
push
push
cmc
and
add
dec
adc
and
jne
mov
and
aaa
mov
adc
push
out
movsl
popa
adc
nop
add
push
movsl
fcoml
scas
mov
sub
or
test
gs
xor
cmp
lea
ss
stos
test
jne
das
pop
jp
jp
adc
jno
ja
inc
push
lcall
adc
addr16
test
daa
cmp
mov
fdivl
mov
hlt
sahf
sub
push
mov
jns
loope
fildll
mov
push
sbb
insl
aaa
in
or
add
pop
shll
mov
xchg
imulb
jb
out
push
sub
jmp
add
add
jge
lret
mov
mov
enter
jp
addb
push
mov
lcall
adc
mov
icebp
mov
clc
push
ret
lods
jge
sbb
aam
inc
mov
pop
push
add
ret
xchg
pop
or
les
daa
cld
jo
xor
push
inc
aaa
xlat
filds
jle
aad
cmp
dec
std
int3
or
dec
sbb
mov
jne
sub
enter
sahf
daa
cmc
push
movsl
mov
cmp
mov
jecxz
jae
aad
std
enter
loopne
inc
cmpb
inc
popl
cwtl
lcall
lcall
je
pop
cmpsl
les
aam
addps
jae
daa
test
cwtl
mov
add
pop
add
dec
pop
jmp
js
ja
pop
inc
sub
inc
jl
js
jns
test
mov
push
cmpsb
ss
adc
sub
pop
ret
adc
stos
orb
out
add
add
daa
iret
xchg
cwtl
ret
inc
sub
mov
add
pop
xor
mov
xor
add
jo
xor
jl
mov
cmp
dec
xor
dec
jmp
add
fs
sub
gs
add
pusha
inc
cmc
mov
scas
test
xor
ljmp
nop
movsl
or
scas
aaa
adc
push
push
daa
pop
add
jo
pushf
sbb
cmp
or
rorl
inc
out
pop
xchg
fsubl
les
push
cwtl
pop
push
or
test
push
or
add
pusha
push
pop
scas
push
jmp
js
mov
push
cmp
loopne
adc
aad
push
push
jb
adc
loope
jmp
push
xchg
lods
jb
jbe
sub
in
stos
enter
pop
mov
and
test
sub
mov
dec
pop
adc
jp
adc
movsb
xchg
mov
jo
xor
push
push
xchg
shlb
xor
push
outsl
dec
fdivl
es
insb
pop
and
and
je
jp
pusha
add
ret
xor
adc
mov
ds
lock
mov
push
mov
dec
add
pop
test
fmul
loop
sti
jb
jmp
loopne
fadds
adc
cld
fadds
ja
aaa
vmovupd
sbb
push
fcomps
mov
mov
iret
jge
push
pop
jge
pop
idivb
stos
jo
mov
push
loope
andl
jne
mov
add
sbb
lods
mov
inc
aam
or
inc
test
lahf
hlt
andb
adc
inc
in
sub
pop
xor
adc
push
or
mov
enter
add
add
and
jbe
sub
cmc
push
adc
and
xchg
out
mov
mov
and
jb
pop
mov
jbe
call
hlt
and
insb
iret
inc
out
ss
add
cmpsb
ljmp
fists
mov
cmp
rcl
jne
cmp
das
mov
cmp
into
movsb
faddp
test
dec
pop
fisubl
dec
pop
dec
mov
and
cs
add
stos
ljmp
idivl
mov
mov
jns
sub
outsb
dec
adc
test
sub
add
jmp
fcoml
jae
nop
popf
inc
out
xor
push
or
das
frstor
cmp
cmpsl
mov
or
pop
adc
jg
aad
push
xor
sbb
mov
mov
clc
jecxz
or
iret
xchg
sub
pop
xor
or
xor
sti
xor
outsb
int
sbb
cmp
fcmovnb
fsubrs
ja
inc
pop
enter
rcll
repnz
adc
imul
fcoml
mov
pop
push
dec
shlb
xchg
lea
push
les
and
lods
jp
outsb
and
or
or
mov
push
mov
push
dec
add
inc
xchg
ljmp
jnp
add
cmp
lock
mov
mov
sbb
pop
rolb
adc
out
test
and
jmp
popa
cmp
xor
pop
loopne
inc
mov
mov
les
sbb
dec
add
push
les
sbb
and
xchg
xchg
add
xchg
jns
add
je
cwtl
adc
bound
js
sar
daa
sbb
stos
dec
adc
lea
push
rcll
ds
fcompl
cmp
loopne
icebp
sub
stos
popa
push
sub
nop
sub
push
and
mov
test
dec
adc
mov
add
jmp
repz
loopne
mov
andb
mov
push
mov
cmp
or
roll
stos
bound
daa
dec
enter
and
shll
or
sbb
popf
lods
sub
scas
int
cmp
add
sbb
and
out
mov
sbb
rcll
push
mov
cmpsl
cmp
add
add
push
shl
mov
jno
ret
popf
mull
xchg
cmp
rcrb
or
sub
fisubrl
pop
xchg
sub
pop
cld
repz
andb
push
add
mov
inc
test
add
ret
andb
js
fs
mov
and
outsl
popa
das
lret
sub
aam
and
push
pop
add
add
xor
mov
in
bound
daa
pushfw
fldt
mov
mov
mov
gs
add
or
enter
push
mov
inc
or
lret
ja
lock
sbb
test
sbb
sub
push
inc
cmp
stos
sahf
adc
js
lds
fldcw
mov
push
movsb
add
movsb
int
outsl
adc
push
mov
cmpsb
push
pop
cmc
sub
add
das
sbb
bound
or
cltd
add
sbb
sbb
bound
mov
pop
xor
cwtl
popf
xchg
pop
scas
mulb
mov
add
in
sub
gs
mov
and
push
mov
je
and
mov
mov
jno
daa
shrb
data16
or
push
xchg
pop
lock
mov
push
mov
sbbl
mov
mov
pop
sbb
add
mov
fsubrl
ret
fadd
dec
or
adc
iret
and
lret
sub
cmp
push
insl
je
inc
lahf
cli
lahf
sbb
xlat
mov
xchg
and
sbb
test
negl
or
fcompl
cmp
dec
cmc
mov
adcl
loopne
stos
inc
les
pop
push
inc
sti
lahf
les
xchg
or
scas
imul
inc
cmpsl
ror
in
or
pop
rorl
test
xor
nop
and
mov
mov
js
pop
add
push
sub
cs
push
or
and
push
mov
rorb
sbb
clc
jae
int
subb
cmp
add
out
loopne
add
mov
popf
fsubrl
sbb
adc
ljmp
sbb
mov
orb
pop
sbb
jp
addr16
adc
cltd
cli
insl
push
or
fs
loopne
xor
aas
sub
inc
adc
jo
ret
ss
inc
push
out
insb
mov
fstps
push
adc
scas
add
mov
mov
add
leave
pop
adc
mov
sbb
mov
nop
sub
pop
iret
xchg
cltd
mov
sbb
sub
inc
mov
lock
jo
ja
addr16
and
mov
xchg
cmpb
and
fcomi
rorl
sub
inc
inc
addr16
je
xor
pop
inc
mov
hlt
in
clc
je
and
inc
test
sub
mov
mov
mov
cmp
adc
shr
inc
jp
cltd
ds
int
mov
mov
push
in
nop
popf
popl
or
push
inc
sbb
adc
xchg
add
push
test
aas
add
adc
xchg
sub
xor
dec
add
xchg
lret
sbb
addl
add
inc
dec
xor
lret
adcb
ffreep
test
bound
or
sbb
xchg
mov
mov
dec
sub
adc
mov
and
sbb
call
ja
adc
lock
mov
lods
out
jae
or
xchg
lods
das
ss
movsb
orl
pusha
inc
int
sbb
mov
dec
add
or
add
pusha
add
daa
add
push
push
das
mov
add
subl
andl
xchg
adc
stos
or
add
mov
lret
and
ficompl
fbld
adc
movsb
add
pop
sub
add
add
or
and
adc
xchg
jp
cmp
fwait
mov
mov
in
outsb
push
xor
cmp
dec
xchg
mov
adc
das
movsb
dec
pop
fsubs
scas
in
lds
adc
cwtl
push
arpl
push
add
leave
push
jns
adc
sbb
dec
movl
add
les
das
loop
add
push
imul
adc
mov
sahf
popa
inc
sbb
and
mov
rcr
icebp
call
adc
jnp
push
pusha
cmp
loop
pop
fistps
mov
mov
pusha
andb
mov
adc
cwtl
inc
loop
add
iret
adc
cmp
add
andb
int
orb
push
ja
and
mov
add
sub
adc
testb
sarb
xor
roll
and
push
adc
into
push
push
xchg
add
xor
nop
rolb
push
push
adc
stos
inc
movsb
inc
add
pop
stc
push
mov
add
adc
mov
push
sub
loope
arpl
mov
leave
mov
andb
sti
rorb
add
test
pop
adc
jp
int
fwait
shr
cmp
jo
pusha
jb
mov
sbb
add
das
push
mov
xchg
push
lret
add
push
jecxz
ja
dec
inc
int
ret
ja
jae
imulb
das
sub
sqrtps
sub
inc
inc
insl
inc
mov
ret
shll
or
nop
xlat
sub
and
mov
andb
jecxz
and
in
push
dec
push
popa
gs
mov
cwtl
add
iret
inc
fisttps
mov
mov
dec
test
jae
adc
std
add
movsb
cmp
pop
in
mov
add
mov
and
push
ss
jnp
pushf
scas
cmc
pushf
mov
adc
mov
pop
popf
sbb
cli
inc
inc
and
mov
push
mov
loope
or
aaa
popf
pop
aaa
fsubrs
mov
mov
daa
lret
scas
jnp
dec
sarl
outsl
ja
or
dec
push
in
das
cmp
pusha
mov
xchg
and
push
add
enter
aad
and
push
popl
push
nop
mov
popf
test
push
rcrb
popf
and
inc
andl
and
mov
mov
pop
inc
out
ja
mov
push
dec
mov
sbb
or
lcall
cltd
jg
push
insb
rcl
aam
inc
xlat
daa
mov
movsb
fcoms
rcrl
adc
pop
dec
pop
add
lods
sub
mov
mov
outsb
mov
push
iret
fisubrl
dec
mov
and
inc
add
mov
pushf
push
adc
jmp
das
jae
xchg
cmp
mov
jecxz
push
sub
rcrb
xchg
push
mov
or
lea
popf
mov
nop
mov
ljmp
mov
lret
xchg
int
fistl
bound
adc
nop
mov
add
cmp
sub
jno
adc
dec
inc
sub
sub
pop
int3
adc
fwait
sub
adc
cmp
inc
inc
pop
mov
mov
sbb
int3
xchg
scas
add
inc
adc
or
xchg
xor
jl
loop
pop
lea
addb
shrb
nop
test
or
sub
and
add
adc
lock
xlat
inc
and
aaa
popf
cmp
and
mov
and
inc
mov
sbb
mov
in
icebp
dec
lcall
xchg
dec
in
add
stc
adc
sbb
stos
imul
push
mov
cltd
in
jae
push
mov
adc
rcll
adc
or
xchg
mov
les
into
push
adc
in
sbb
lsl
arpl
sbb
addr16
or
mov
fiadds
cmp
iret
int3
add
pop
subl
jge
ja
ds
roll
outsl
pop
icebp
dec
fnstenv
xor
jno
testb
sub
and
jmp
push
inc
sub
and
or
orb
in
sbb
aaa
or
sbb
pop
outsl
in
cmp
jns
movl
fimuls
push
jle
lea
aas
pop
andb
inc
push
cwtl
xor
faddl
push
cmpsb
out
dec
sub
adc
push
inc
cmpsl
loop
incl
movsb
sub
lds
popf
jle
or
mov
jmp
inc
ja
sbb
notl
sbb
inc
test
inc
adc
cmp
ret
fcmovnb
or
inc
pop
inc
notb
cs
icebp
dec
or
inc
into
out
mov
data16
leave
popa
dec
inc
inc
adc
sbb
mov
rcr
pop
push
cmp
lock
cmp
adc
imul
sbb
pop
dec
jnp
notb
inc
pop
adcl
add
ds
cmpsb
stos
stos
movsl
sbb
mov
fdivs
test
in
sbb
cld
jae
adc
popa
scas
add
mov
les
dec
div
rclb
xchg
sbbl
shr
scas
call
ss
repz
sub
imul
test
xorb
jg
je
mov
inc
mov
and
mov
inc
xor
icebp
sbb
sub
ss
leave
push
insl
fmuls
movsb
sti
mov
inc
xlat
sbb
xchg
movsb
lret
pop
jnp
adc
bound
mov
dec
push
adc
dec
add
mov
pop
das
push
pop
in
sub
xor
jmp
add
dec
sti
das
iret
rolb
pop
mov
sub
insl
adc
out
fs
sub
or
inc
imul
inc
pop
push
sub
sbb
test
lods
cmp
into
scas
or
mov
add
loop
xor
jae
int
mov
pop
and
dec
cmc
stos
pop
or
out
or
dec
add
push
xor
inc
ja
cmpsl
and
push
div
int
in
lock
pop
daa
out
dec
outsl
in
xchg
mov
push
aas
push
adc
mov
jae
rolb
and
adc
jp
orb
popa
stos
and
andl
fildl
pop
sub
lahf
lret
xor
push
or
push
rcr
mov
add
sub
icebp
pop
push
sub
das
iret
cmp
test
outsb
push
or
mov
imul
pop
jp
scas
fstpl
cli
sbb
scas
js
jb
cmc
mov
ret
sub
lods
call
addb
enter
sub
mov
lea
je
xor
jb
scas
cmp
test
add
inc
es
mov
fdiv
cmp
mov
dec
push
stos
mov
cmp
dec
lds
aaa
push
popa
pop
incl
fsubs
mov
add
xchg
jo
or
incb
sub
in
mov
shlb
int3
test
ret
mov
scas
leave
shrb
rcrb
adc
cltd
ds
and
and
jo
push
xor
jecxz
mov
aad
push
rcl
push
cli
sub
push
pushf
lcall
xor
arpl
inc
pop
loopne
and
mov
mov
sbb
push
pop
push
pop
pop
das
inc
cmpsl
mov
test
jnp
addb
push
addr16
das
adc
scas
call
jle
mov
push
mov
data16
fidivl
imulb
mov
cmpl
cmp
hlt
imul
push
sbb
imul
jbe
bound
or
sbb
push
push
sbb
xor
scas
jae
ds
add
sbb
sub
enter
pusha
lods
test
xchg
addr16
and
mov
enter
ljmp
sahf
push
shll
outsl
mov
cwtl
scas
sub
or
scas
jmp
dec
pop
inc
aam
sbb
pop
jnp
inc
ret
fisttps
repz
jbe,pn
mov
test
enter
push
gs
int
mov
dec
pushf
notl
lret
fmulp
add
and
fsubs
out
or
jnp
movsb
sbb
mov
in
mov
jbe
lcall
int
and
inc
sbb
rcrl
xchg
popf
add
jne
add
inc
xlat
adc
movsl
lock
fbld
into
movsl
outsb
pop
addr16
out
sbb
imull
pop
mov
push
xchg
sub
push
cli
loope
xchg
jne
mov
or
cmpsl
mov
outsl
fcmovnu
push
insl
xchg
adc
fisubs
cmp
imul
push
stc
xchg
pop
cmp
aam
outsl
or
dec
push
loopne
jae
fldcw
mov
and
bound
stos
lcall
fldcw
xor
xor
pop
scas
add
adc
push
mov
xchg
movsl
outsb
aaa
adc
xchg
and
aaa
sub
dec
push
mov
jne
xlat
xor
adc
iret
sbb
xchg
fisttps
or
jno
ss
in
into
xchg
push
xor
mov
into
notl
mov
rcrb
jecxz
or
fs
xchg
adc
xor
jnp
int3
and
and
jnp
dec
pop
int
mov
fwait
pop
subb
pop
inc
lahf
sub
mov
add
and
jge
fsubl
sbb
sbb
pop
mov
popl
popf
movsb
ret
or
fcoms
outsw
stc
sbb
adc
out
or
sub
arpl
adc
fcoml
mov
sub
test
and
cld
loop
mov
dec
xchg
icebp
pop
inc
sysret
cmp
add
xlat
sbb
int3
jo
pop
and
nop
mov
inc
inc
fsubrs
mov
mov
int3
daa
inc
mov
inc
je
push
inc
and
xor
mov
inc
cs
sbb
mov
push
fiadds
and
cs
aas
ds
in
jno
cmpxchg
adc
jnp
mov
mov
outsb
pop
mov
and
fdivs
bound
inc
mov
insb
std
mov
lahf
inc
fs
or
sub
and
sbb
sbb
fdivs
insb
push
insb
pop
repnz
xchg
sbb
and
dec
lcall
mov
add
push
jp
sbb
pusha
sbb
add
add
adc
cs
shlb
or
cltd
mov
mov
ds
pop
xchg
xchg
or
cld
push
insl
mov
out
add
cwtl
fsts
pop
aaa
mov
pusha
stos
cs
in
push
leave
mov
or
jl
dec
in
sbb
mov
insb
mov
or
sbb
push
xorl
sub
push
pop
pushf
sub
cmp
push
pop
cmpsb
addb
adc
ja
ss
gs
imul
ret
mov
add
shll
fcomp
inc
add
rolb
xchg
negl
fadds
insl
add
pushf
jnp
fbld
rcll
cmp
add
xor
lret
shl
out
or
stos
jae
fs
mov
push
jmp
ret
rorl
cmp
pop
ret
pusha
push
dec
and
pop
into
push
seto
xchg
int
pop
pop
mov
arpl
inc
push
inc
pusha
mov
mov
cmp
xlat
cwtl
add
pop
push
or
loop
add
cmp
or
dec
fsubrs
or
data16
push
mov
push
push
or
repz
mov
stos
dec
and
mov
and
adc
push
jge
ret
cli
jg
pop
mov
mov
aam
imul
jbe
inc
out
mov
add
aam
mov
sub
sub
and
popl
arpl
jae
shr
negl
inc
test
test
adc
push
add
pusha
fistpll
and
push
xor
lea
dec
pop
scas
mov
mov
xchg
inc
and
jecxz
icebp
sahf
bound
jns
adc
and
lods
shl
xchg
push
cs
jbe
imul
lcall
nop
lcall
int
in
xchg
addb
aad
js
fldl
stos
pop
push
cmpsl
and
mov
loope
jnp
mov
dec
jbe
stos
add
inc
nop
in
or
dec
out
xor
pop
xchg
add
les
fs
mov
cmp
cmc
add
fcoms
orb
jmp
popa
add
xlat
jmp
popf
test
or
daa
test
xchg
cmp
stc
sbb
sbb
fdivr
popa
in
sbb
mov
sbb
cld
push
cwtl
lock
enter
call
stos
popa
push
aas
fnsave
in
int
mov
pop
add
and
daa
popf
ret
cmp
jecxz
mov
loope
mov
ret
pop
mov
push
loopne
add
lret
loopne
xchg
adc
dec
lods
popa
push
insb
insb
mov
adc
jnp
xchg
in
rol
call
movsl
call
nop
jp
push
nop
sub
imul
sbb
pop
cmp
cmpsb
sbb
mov
jno
inc
push
fs
sahf
loopne
cmp
pusha
push
xlat
add
ret
lea
inc
mov
push
jno
inc
into
cmp
flds
mov
bound
lret
fucomi
and
fldt
into
pop
enter
loopne
add
lcall
push
movd
pop
and
add
jne
nop
cmp
pinsrw
jne
stos
popf
andb
mov
enter
jns
sbb
ss
pop
jnp
jo
jne
outsl
ja
inc
pop
mov
lock
mov
test
pop
dec
jo
flds
mov
js
testl
xchg
fmul
pusha
or
ret
stos
sub
ja
sub
cmp
lock
dec
test
xchg
jae
js
jg
xchg
das
jmp
nop
sub
push
adc
pusha
dec
inc
mov
mov
cmovo
mov
adc
sbb
or
push
enter
adc
pop
add
add
or
adc
add
mov
mov
push
adc
or
cmp
sbb
fisubrs
dec
or
and
stos
xchg
pop
push
add
js
push
add
jne
pop
push
icebp
jno
cltd
push
adc
pop
push
mov
arpl
jno
popa
pop
daa
adc
add
pop
jle
das
adc
jb
jb
jb
movsb
imul
mov
jge
outsb
sbb
int
jne
sbb
je
outsl
mov
mov
imul
add
push
int
lcall
mov
daa
imul
out
xchg
xlat
or
ja
ja
add
jbe
xchg
das
jne
mov
bound
jns
daa
pop
adc
cwtl
pop
and
scas
add
push
ret
lret
push
divl
fcomps
sub
fwait
jae
xchg
rcrl
ret
jae
ss
cltd
jae
jae
test
sbb
fmull
adc
push
inc
add
jg
push
pop
push
cli
into
movb
xchg
sbb
sub
das
sub
fnstenv
arpl
into
pusha
pop
icebp
and
test
add
xchg
hlt
pop
sub
sub
sub
jnp
or
xchg
mov
mov
jnp
sbb
push
dec
jae
add
arpl
pop
popa
adc
sbb
and
xchg
js
adc
add
xor
cs
push
mov
adc
xor
adc
sub
sub
scas
sub
or
aam
ljmp
adc
scas
sub
push
pop
mov
das
ljmp
test
and
neg
lock
in
movsl
mov
mov
adc
sub
ret
data16
outsl
mov
clc
mov
lret
xchg
ja
push
ret
add
add
orl
rorl
mov
sbb
ficomps
ficoms
gs
cmc
pop
das
les
mov
mov
and
add
fninit
inc
neg
pop
aas
adc
lcall
adc
out
sbb
mov
mov
pop
int
mov
rol
xor
xor
xor
or
hlt
jnp
or
push
ret
clc
mov
rolb
dec
fs
and
jnp
cltd
and
nop
inc
outsb
sub
or
add
jge
jmp
popa
sbb
cmpsb
cmp
pop
pop
adc
pop
pop
mov
push
jl
push
repz
inc
mov
nop
cli
add
insl
loop
inc
call
ror
add
cld
adc
outsb
fadd
add
jl
add
in
inc
gs
lods
and
cmp
pop
nop
aam
push
mov
popa
mov
lods
and
or
add
shr
pop
inc
inc
movsl
sub
je
dec
cmp
xor
movb
imul
aam
aas
mov
and
jbe
sub
aas
mov
or
das
dec
mov
in
cld
pop
hlt
in
pop
mov
adc
adc
out
cs
repz
les
pop
outsl
sbb
inc
xchg
add
mov
aam
std
insl
shlb
inc
jg
faddl
xchg
cltd
cltd
sub
inc
lock
push
mov
or
pop
and
or
jg
scas
js
lret
inc
test
fisttpl
cmc
andl
test
sbb
push
scas
mov
adc
sub
mov
leave
test
pop
push
pop
testb
repnz
push
xchg
dec
add
dec
inc
mov
ret
fstps
repz
mov
mov
push
and
mov
pop
pop
bound
adc
jle
pop
inc
sub
or
ss
push
orl
imul
outsb
ss
and
inc
lea
jns
mov
in
dec
inc
aaa
or
cmpl
ret
inc
ret
test
scas
jbe
outsl
hlt
loop
mov
in
fdivrs
fucomp
mov
mov
loopne
test
cltd
pop
pop
sbb
adc
and
pushf
cmp
mov
stos
clc
mov
xchg
jp
push
mov
push
jnp
mov
call
or
sbb
int3
ficomps
jl
inc
test
add
sahf
xchg
loopne
pop
pop
xor
mov
loope
divb
xchg
ja
pop
adc
jno
dec
xchg
mov
in
pop
clc
ffree
or
mov
pop
jmp
aad
repnz
movsl
or
mov
xchg
pushf
mov
adc
fadds
pop
mov
mov
enter
outsb
xor
fwait
lods
mov
jae
sbb
inc
sbb
fsubrs
call
insl
sub
mov
mov
ficompl
jl
sbb
sub
cmpsb
mov
cmp
and
outsl
jg
andl
loop
push
pushf
and
and
mov
push
rcrb
shll
or
and
fcmovu
cmc
pushf
js
xchg
subl
xor
ss
xchg
pop
pop
xchg
mov
icebp
add
mov
adc
das
dec
xor
fmuls
pop
lds
std
inc
sbb
push
pop
or
cmc
inc
cmpb
or
mov
mov
test
std
icebp
loopne
inc
jmp
aam
adc
dec
cmp
xlat
outsb
imul
xchg
jo
mov
rcrl
mov
jno
adc
call
mov
add
adc
movsb
insb
fwait
pop
js
and
dec
outsl
or
es
mov
jb
std
add
add
test
xchg
lods
jne
xchg
push
mov
sub
jmp
in
mov
std
js
mov
das
data16
mov
cmp
mov
shr
aaa
mov
jg
jo
or
insb
int3
xchg
mov
iret
jne
loope
dec
repz
inc
cmp
ret
scas
jecxz
jmp
sub
mov
mov
test
dec
sub
aaa
mov
inc
xor
rcrb
push
outsb
jg
xor
pop
sbb
stc
sbb
sti
xchg
popa
jle
mov
rcrb
xor
aas
cmpsl
add
cmpsb
orl
scas
push
clc
lds
mov
push
and
xlat
inc
shll
pop
adc
mov
insb
inc
sahf
scas
sub
mov
test
inc
mov
sbb
mov
fmull
dec
fcmovnu
or
push
push
jecxz
push
dec
scas
adc
adc
sbb
inc
jmp
push
sub
jmp
sub
jle
and
cltd
mov
cmp
daa
xchg
push
pop
in
mov
dec
push
pop
push
out
add
cwtl
out
push
mov
jb
ja
mov
xchg
mov
push
cmpsb
push
mov
mov
adc
or
pop
push
shlb
pop
fbstp
daa
adc
push
stos
push
outsb
stos
fsubr
and
xor
sub
dec
mov
pop
pop
fsubr
je
ja
testl
jmp
ret
dec
inc
hlt
add
mov
das
push
shll
notl
mov
inc
lcall
cmp
mov
mov
loop
jo,pn
ficompl
repnz
mov
xorb
stos
insb
push
hlt
mul
ret
sbb
jmp
xchg
repnz
js
hlt
mov
sub
out
cmp
je
and
push
insb
test
fstpt
xor
adc
ja
adc
sub
lea
push
ffree
add
jnp
dec
fdivs
xchg
fnstcw
fdivrs
jb
sbb
xchg
por
jno
pop
or
in
inc
inc
popf
sbb
dec
aaa
jne
inc
sub
pop
fidivrl
call
mov
jmp
hlt
sahf
dec
pop
mov
sbb
insl
add
add
mov
xor
mov
mov
xor
das
shll
pop
inc
pop
sub
xchg
dec
mov
xor
outsb
fldl
scas
neg
cmpsb
mov
outsl
cmp
scas
ret
or
push
mov
push
add
pop
lds
xchg
mov
aas
sti
dec
or
cmpsb
cmp
add
mov
nop
ds
loope
in
xlat
out
mov
mov
lock
mov
lcall
adc
shr
sub
fmulp
rcl
pop
ss
out
sbb
mov
sbb
and
jl
fsubs
fnstenv
inc
int
orl
sbb
jbe
mov
xchg
dec
pop
in
xchg
xor
call
loope
push
mov
push
es
scas
bnd
or
insl
mov
inc
mov
in
repz
pop
push
or
cmp
push
loope
mov
jmp
jo
mov
pushl
loope
mov
adc
push
pop
add
xchg
in
jo
outsb
cmp
mov
mov
cmpsb
clc
test
fwait
add
jbe
jmp
sbb
sbb
mov
lods
int3
in
add
lock
sbb
hlt
xchg
rorl
jno
outsl
outsl
out
outsl
adc
ficomps
sub
insl
fstpt
ljmp
test
push
ret
iret
adc
call
sar
std
xor
mov
pop
and
sahf
insb
inc
movsl
add
push
push
push
dec
pop
inc
sub
pop
sub
in
call
mov
imul
mov
mov
jge
scas
adc
push
mov
movsl
mov
push
out
aam
mov
push
cs
adc
pop
fwait
out
dec
repnz
add
in
add
fwait
push
mov
and
cld
mov
lods
xchg
or
insb
lods
add
jp
sub
add
je
subl
pop
popa
ss
cmpsb
aas
sub
adc
incl
fdivl
and
imul
xchg
es
mov
mov
xchg
push
inc
fcomp
aaa
mov
lea
pop
xor
xchg
fcomp
insl
mov
test
jae
xor
mov
xchg
fisubrl
cmc
xor
les
pop
push
sbbl
mov
enter
xlat
xor
inc
mov
sbb
mov
in
inc
add
xchg
ja
push
mov
xchg
movsb
fstp
ret
mov
inc
cmp
fcmovnbe
mov
sbb
sub
push
cwtl
mov
sub
cld
push
sub
push
iret
mov
lods
rol
rcll
aaa
fsubr
push
pop
pop
ret
add
cmpsb
mov
aad
or
ja
sbb
xor
aas
push
test
or
mov
push
or
add
add
push
movsl
fisttpll
lock
cs
mov
adc
mov
add
cld
dec
sbb
and
clc
rcrl
ret
nop
jl
aad
mov
or
in
or
call
aam
add
dec
adc
ds
cmp
insl
into
cli
push
sub
adc
std
fisubl
jp
or
inc
stc
mov
int
jmp
push
jo
adc
mov
jl
sub
pop
punpcklbw
or
insb
and
insb
xor
aad
mov
lret
fmull
ljmp
add
mov
and
mov
or
imul
xorl
or
stos
mov
pusha
ficomps
in
sub
in
push
mov
sbb
je
jo
xor
inc
xchg
stos
push
sbb
sti
add
adc
in
or
imul
imull
pop
push
mov
stos
pop
and
negb
push
ret
inc
mov
adc
inc
inc
dec
outsl
fcoms
insl
dec
lods
add
and
sbb
fwait
imul
mov
decb
ficoms
loopne
pop
fcom
and
stc
roll
inc
pop
stos
loop
jp
bound
insb
push
fcompl
and
stos
sub
ror
mov
adc
mov
aad
ret
cli
dec
into
sbb
dec
vmread
in
loop
mov
and
inc
bound
js
push
sbb
rcrb
adc
rolb
aaa
mov
sbb
and
sbb
adc
sub
outsl
adc
imul
outsb
ss
add
pop
out
lea
shll
xor
or
mov
xor
or
movsb
lret
push
sub
fisttpl
mov
in
mov
add
push
add
sbb
icebp
sbb
fidivl
mov
jbe
lea
jno
push
js
out
add
cs
lea
and
add
js
jg
test
fdivrl
mov
xchg
lds
je
xchg
xchg
jno
xchg
inc
jno
jle
inc
pop
fwait
ret
pop
faddp
cmpsb
inc
test
aad
sbb
lods
icebp
add
ss
xchg
xchg
shrb
aaa
ds
push
mov
pop
daa
iret
imul
aas
aas
mov
popf
or
pusha
mov
jl
fisubrl
dec
fs
hlt
insl
cmp
jb
mov
loop
push
cli
sbb
orl
and
ret
mov
repnz
sub
and
shlb
and
or
mov
dec
sbb
out
xchg
js
insl
fiadds
outsl
fdiv
sarb
lret
xchg
aas
adc
mov
popa
enter
das
cmp
push
mov
inc
dec
das
rol
in
mov
loopne
jae
lds
fstpt
lods
jns
jnp
inc
cmp
xchg
xor
pop
in
imul
cmp
lea
jnp
jge
cmpsb
les
push
mov
pop
mov
hlt
fdivl
icebp
dec
seto
add
adc
into
jo
push
ret
dec
je
push
mov
mov
cmp
sbb
jae
ds
clc
cld
inc
mov
arpl
jecxz
test
jae
add
xor
imul
out
ss
cmp
imul
inc
jne
mov
mov
clc
pusha
dec
fdivr
push
dec
xorb
shlb
cmp
dec
dec
dec
xchg
ficompl
and
add
ret
adc
xor
aas
fs
xor
inc
pop
pop
xlat
mov
mov
jg
xchg
xor
jo
sahf
cmp
outsb
int
or
pushf
das
pop
outsb
sbb
inc
mov
mov
popa
xorl
in
ficomps
xchg
xor
add
movsl
mov
data16
push
xchg
cli
inc
adc
ljmp
lret
testb
pop
popf
cmp
out
or
fisubrs
pushf
mov
or
add
addl
rorb
adc
adc
mov
addb
lock
jo
mov
in
xor
hlt
and
insl
lret
pop
jl
daa
mov
out
mov
xlat
sbb
js
cmc
call
es
outsl
push
jno
lock
outsl
mov
cmpsb
mov
test
or
out
inc
scas
lret
hlt
movsb
sub
dec
adc
add
push
xchg
into
mov
sub
insl
or
mov
pop
cwtl
fdiv
sbb
aaa
pop
clc
mov
movsl
inc
flds
xor
and
push
and
adc
call
add
mov
mov
test
clc
or
loopne
mov
push
insl
in
pop
shlb
mov
mov
or
imul
cmp
clc
or
movb
sbb
negb
sbb
mov
inc
and
es
add
test
sti
adc
dec
or
lods
jbe
call
loopne
lds
jns
cmp
sahf
ficoms
cmp
scas
test
scas
pop
stos
dec
and
pop
mov
fisttpll
fucomip
inc
insl
insb
xchg
fs
test
add
push
mov
xor
mov
repz
xor
mov
jmp
arpl
jne
in
mov
aad
notl
sub
inc
pand
daa
pop
psubd
push
lahf
push
inc
or
rclb
mov
scas
mov
mov
dec
cli
cmpsb
or
scas
mov
mov
add
xor
jp
mov
cmp
in
lock
xor
sahf
jl
cmp
je
push
mov
jne
rorl
cmp
repnz
mov
or
dec
lds
xor
inc
mull
fisubs
xlat
pop
inc
fisubl
test
movsb
out
mov
loopne
pushf
js
sahf
inc
scas
jbe
mov
ljmp
cs
pop
push
mov
add
lods
jae
fisubrs
push
dec
mov
inc
xchg
xor
inc
je
aas
jne
cmp
dec
push
jbe
pop
out
shl
xchg
das
push
sub
jbe
or
inc
pop
bound
inc
jmp
and
pop
shll
sub
je
jle
xor
mov
mov
adc
jno
ror
es
pop
in
rolb
and
sub
sbb
xor
data16
jge
push
jecxz
insb
sbb
test
pop
stos
mov
push
mov
jecxz
int3
testl
loope
cli
push
jecxz
xchg
call
jmp
int
inc
loopne
sbb
pop
sub
repz
inc
xchg
adc
lea
cmp
lret
pop
arpl
test
popa
pop
fstl
subb
xlat
inc
adc
es
dec
inc
dec
scas
add
push
ss
cmp
insb
jo
cmp
test
les
sub
mov
push
sub
adc
push
shlb
in
fsubrs
fsub
adc
sbb
cmp
lods
mov
jnp
int3
mov
xchg
rep
jbe
sbb
fsts
fdivrs
jae
cmpsb
aaa
xor
xor
decb
and
jl
outsl
test
sub
outsb
fbstp
ret
pop
cli
popf
aas
je
dec
pop
outsb
mov
pop
stos
sahf
push
sbb
push
and
sbb
imul
inc
mov
lret
popa
sahf
in
fs
mov
and
sbb
loopne
mov
adc
int
push
cmp
add
adc
lcall
xchg
mov
xchg
in
push
mov
mov
fwait
lcall
and
xchg
mov
dec
int3
fcomi
jae
jb
roll
push
cli
aad
pop
pop
mov
or
scas
cmpsl
adc
fcmovnbe
sbb
xor
ret
test
fcom
inc
sub
cmc
sahf
jae
ljmp
dec
lcall
sub
cld
fisubs
sbb
adc
into
cltd
mov
mov
mov
pushf
roll
inc
sub
inc
icebp
inc
rolb
outsb
ror
mov
mov
adc
jb
sahf
cmp
add
int3
inc
mov
test
in
xchg
mov
adc
cmc
aad
add
push
inc
mov
filds
push
cmp
fdivl
push
xor
xor
jmp
int3
cmp
fsubrp
bound
jns
pop
dec
adc
xor
or
xchg
and
adc
std
ret
sbb
lret
dec
add
stc
sbb
pop
mov
mov
movsl
or
sbb
or
ss
jl
jnp
cmp
ret
cmpsb
push
sbb
les
add
pop
arpl
mov
add
xchg
movsb
aam
testl
scas
movsl
add
int3
sub
mov
xchg
loop
jae
and
test
xchg
jbe
mov
mov
sbbl
push
sbb
push
mov
xchg
je
pushf
dec
dec
dec
push
addr16
push
pop
or
subb
movsb
pusha
and
clc
js
mov
lock
repnz
adc
lods
jmp
sbb
jle
jmp
mov
mov
shrb
or
nop
loop
mov
push
or
aas
add
mov
jno
lret
xchg
xchg
adc
push
dec
cltd
loope
data16
dec
scas
jmp
add
popa
adcl
lea
pusha
pavgw
cli
pop
xchg
pusha
sub
lock
stos
aaa
push
xor
js
in
movsl
movsl
fiaddl
rorb
jo
sbb
sub
loope
adc
enter
lea
push
repz
sbb
or
mov
cmp
dec
fidivrs
xlat
out
jmp
jp
jmp
pop
xchg
repz
rolb
ljmp
out
xlat
xor
add
notl
ds
movsb
push
xchg
add
nop
jmp
lcall
xchg
in
and
push
outsl
fists
xchg
xchg
imulb
test
mov
outsb
mov
mov
mov
jno
xchg
mov
xlat
xchg
loope
jg
test
mov
int3
mov
stos
xlat
cmp
pop
aaa
je
adc
lods
stos
push
sbb
andl
push
insl
xchg
cmp
mov
out
pusha
xor
aaa
pop
loop
dec
pusha
in
ljmp
mov
jge
adc
dec
shlb
vmovntps
inc
fstpl
das
adc
lahf
mov
push
setbe
out
cmp
push
incl
stc
adc
fimull
mov
rorb
out
stc
cltd
stos
mov
fmull
scas
add
jae
pop
iret
nop
mov
pop
push
test
in
rolb
push
scas
out
inc
pop
add
cmpb
fisttpl
jnp
add
adc
jbe
cmpsl
ret
adc
add
add
push
push
dec
and
enter
push
mov
or
and
xor
pushf
inc
lret
les
sub
pop
aas
js
loopne
out
jne
push
iret
dec
and
mov
out
jmp
inc
push
add
lcall
fistpl
outsb
enter
cmp
xchg
aam
loopne
mov
mov
stc
scas
mov
sub
insb
inc
ljmp
dec
enter
push
cmp
jbe
insb
add
jns
and
divl
sub
sbb
or
fiaddl
add
scas
push
insb
ds
mov
aas
cmp
pop
mov
mov
outsl
mov
lds
test
xlat
mov
inc
jne
mov
xor
lods
lahf
daa
int
cli
or
out
jo
mov
sbb
popa
shr
sub
or
dec
bound
out
fisttps
stos
scas
push
or
xchg
push
jae
enter
mov
pop
cwtl
sti
vandps
testl
pop
faddl
in
stc
jecxz
arpl
cmp
xchg
ss
and
sbb
push
sbb
rorb
aad
cld
add
in
sub
ss
mov
movsb
lret
loope
add
pop
dec
push
lret
jnp
fdivrs
jecxz
mov
shlb
jge
mov
pop
pop
cmpsl
add
ret
bound
cmp
or
mov
scas
mov
imull
jo
dec
add
sbb
push
mov
in
imul
ja
cmp
or
xchg
lea
dec
lds
cltd
sbb
jle
push
xchg
mov
ljmp
bswap
mov
cmp
sti
cmp
aad
movl
iret
and
or
xor
imul
add
adc
stc
into
ss
imul
adc
mov
sti
xor
or
mov
add
adc
add
hlt
adc
pop
add
adc
jge
cmp
jp
add
mov
popf
fmull
jmp
pop
fwait
in
mov
xlat
or
add
add
jp
fstpl
imul
dec
and
lret
mov
dec
sub
fnsave
jmp
push
xlat
sbb
jne
lahf
and
pop
daa
smsw
pop
add
push
fwait
sti
pop
mov
pop
adc
and
mov
out
ds
mov
xlat
and
or
or
outsl
jnp
push
add
out
and
mov
sbb
fildl
mov
mov
cmp
syscall
addr16
jae
sub
adc
push
or
mov
daa
xchg
stos
js,pt
jbe
fwait
adc
and
push
daa
push
sbb
jnp
add
outsl
or
out
mov
push
ss
add
scas
popa
mov
mov
fnsave
xlat
add
psubusw
or
push
decl
add
lds
pop
scas
add
adc
xchg
and
pop
ss
notl
sti
pushf
scas
lock
push
ret
add
inc
fisttpl
or
add
sbb
add
jae
popf
jge
insb
adc
sbb
adc
cmp
xor
sub
enter
lret
add
jmp
mov
jg
add
sahf
mov
add
out
arpl
out
sub
jnp
pop
sub
xchg
jb
jmp
sbb
pop
shrl
xor
cmp
xchg
push
add
out
out
adc
orb
cmp
mov
add
or
fiaddl
or
stos
or
flds
lret
adc
or
or
push
mov
lcall
or
js
jne
push
jmp
or
xor
pop
sbb
mov
or
add
mov
adc
pop
or
or
or
jge
arpl
outsl
and
jnp
xchg
pop
jnp
mov
or
pop
add
mov
mov
add
pusha
xchg
daa
jecxz
sti
in
fstps
push
dec
aaa
push
aas
add
add
pushf
adc
pop
push
jae
subl
pop
push
mov
out
pop
iret
adc
adc
mov
pop
or
adc
das
add
add
add
ja
jg
out
sbb
mov
xor
scas
mov
data16
jg
scas
jno
pop
sti
add
adc
incl
sti
hlt
dec
cmp
inc
or
sbb
adc
adc
in
xchg
ljmp
test
jecxz
jmp
pop
aaa
ret
ss
adc
adc
out
xlat
xor
adc
adc
adc
pop
jmp
fistpl
mov
mov
cmp
ss
fists
cwtl
jecxz
lds
mov
inc
aas
adc
push
in
js
or
push
or
push
sbb
mov
addr16
push
xor
and
add
add
enter
into
sbbb
inc
mov
sub
addr16
stos
out
mov
daa
mov
cwtl
push
push
insl
pop
clc
pop
sbbb
ss
sub
add
addl
jae
pop
cmp
sbb
add
sbb
or
pop
sbb
and
cmc
sbb
and
test
and
sbb
push
adc
icebp
mov
sbb
pop
inc
icebp
xor
or
sbb
adc
outsl
xlat
pop
insl
mov
test
pop
dec
ja
mov
xor
pop
ret
xor
test
add
mov
xchg
push
dec
stos
add
push
fbstp
pop
and
pop
in
sbb
xor
pop
mov
lods
adc
test
push
and
push
mov
aaa
or
inc
cmp
mul
mov
add
push
dec
xchg
aam
mov
pop
jl
movsb
bound
and
arpl
sub
sbb
inc
xor
lret
or
enter
outsb
in
adc
inc
add
lods
cwtl
sbb
mull
mov
adc
jge
mov
fidivl
fdivrs
test
inc
pop
rcll
adc
cmpsb
push
mov
fwait
pop
loop
es
ret
pop
dec
loopne
or
jo
and
xchg
inc
mov
ret
ss
inc
sub
sub
add
dec
and
jo,pn
popf
jge
daa
xor
and
arpl
mov
or
cs
bound
sbb
outsl
or
push
out
cld
and
ja
or
mov
inc
or
dec
dec
cs
sub
pop
adc
adc
adc
jns
or
mov
sub
add
add
dec
aad
ss
cmc
rolb
add
decl
jns
cs
mov
sub
lret
push
popf
sbb
push
fstps
inc
inc
out
mov
gs
or
roll
jae
lods
aas
imul
and
xlat
xchg
cmp
hlt
dec
pop
mov
add
dec
dec
divl
sbb
inc
dec
or
push
mov
fcoms
arpl
sbb
fnsave
out
pop
arpl
add
push
inc
pop
jecxz
fadd
push
test
push
xchg
test
scas
sbb
lahf
pop
and
cmp
and
cwtl
popa
fxch
lcall
or
jo
add
sub
sbb
xchg
sub
iret
outsl
mov
testb
or
adc
sbb
aaa
addr16
fsts
xchg
icebp
arpl
sub
cmp
loope
pop
enter
xchg
sti
pop
and
stos
sub
jbe
inc
ja
or
outsl
mov
jbe
dec
and
out
ja
jmp
inc
jnp
pop
xchg
jmp
test
arpl
pusha
mov
inc
push
daa
and
cmp
lahf
fldt
sub
and
in
fsubl
js
ds
sub
xlat
pushl
inc
inc
cs
mov
int
pcmpeqw
xor
fstps
sbb
jae
dec
xchg
rcr
jge
sub
insl
sub
jp
es
mov
xchg
push
add
dec
xor
or
fwait
push
rorb
div
sahf
xchg
xor
mov
ret
les
lods
adc
aam
daa
les
fcompp
cmp
mov
mov
push
arpl
mov
pop
dec
and
dec
and
or
mov
subl
gs
into
or
movsl
insb
mov
sub
test
fsubrs
lea
mov
push
jl
sub
lods
addl
cltd
mov
lods
mov
js
adc
jle
popa
sub
inc
mov
stos
jle
inc
cwtl
cmp
out
cmp
dec
dec
mov
sub
in
notb
pop
out
and
sti
cmp
iret
sti
jle
mov
xor
cltd
inc
sbb
xlat
sub
add
or
and
sbb
lahf
sub
or
cmp
sub
flds
and
and
mov
arpl
mov
jnp
jp
inc
enter
test
push
and
adc
fiaddl
pop
ret
pushf
add
pop
cmp
inc
sahf
rcrb
cmpsl
subb
lcall
pushf
int
inc
cmpsb
mov
dec
shl
xor
addr16
and
std
enter
sub
das
arpl
int
and
pop
sub
es
sub
and
and
jne
sub
sub
or
adc
ficoml
mov
push
jnp
daa
pop
cmp
pop
push
nop
cmp
mov
cmc
inc
out
mov
stos
add
loope
fwait
hlt
xchg
dec
cmp
cmp
movsb
nop
les
roll
leave
cmp
xchg
add
jnp
bound
push
mov
jbe
cmp
jns
add
pop
nop
cmp
inc
in
lret
scas
cmp
lret
js
sub
test
push
inc
inc
add
mov
adcl
mov
mov
ja
dec
pop
in
add
lahf
or
das
mov
das
mull
nop
inc
js
mov
xchg
in
cmp
sub
sub
popa
iret
or
insb
fs
rorl
stc
mov
sbb
or
sub
mov
fmuls
or
sbb
fcomp
leave
xor
or
and
test
jae
fldcw
xor
jo
add
xchg
fisubrl
or
sbb
mov
sbb
fs
je
pushf
outsb
fdivrs
idivl
or
std
insb
adc
and
insb
mov
jge
adc
fistpll
push
adc
shl
lcall
test
ret
sub
sbb
mov
push
into
cmp
sahf
aaa
mov
dec
popa
daa
pop
cmp
or
pop
movsb
sahf
pop
or
or
imul
dec
or
jge
mov
sub
xchg
dec
mov
ret
flds
inc
mov
sbb
sbb
and
stc
out
nop
mov
sub
bound
int3
dec
js
shlb
inc
sbb
int3
push
sti
xchg
xchg
xor
out
sbb
out
or
ja
ss
iret
or
fldenv
or
xor
ret
xchg
adc
fcomp
and
mov
sub
adc
addl
adcb
xor
arpl
add
adc
shrl
je
loop
and
dec
mov
mov
xor
xor
xchg
add
ljmp
inc
jnp
aaa
or
testl
daa
les
add
and
test
xchg
add
movsb
xchg
add
pop
dec
mov
mov
xchg
sbb
out
xor
mov
xor
dec
int
and
mov
sub
sbb
jecxz
push
lcall
testb
cmp
divb
pusha
sbb
lret
int3
fdivs
out
es
loope
test
xor
pushf
xor
mov
jnp
test
push
cmp
add
add
arpl
andl
fbld
rorb
data16
ja
pop
gs
idivb
aad
cmp
pop
sbb
es
jp
lahf
xchg
jae
xchg
insl
pop
mov
imul
pop
rcr
aaa
aad
lea
mov
pop
ror
mov
std
pop
aaa
and
lret
pop
fnstenv
mov
rorl
cmp
lock
add
mov
imul
xchg
pop
mov
lods
adc
push
jno
aaa
imulb
adc
inc
in
jb
sti
add
adc
add
jge
daa
addb
adc
xor
aam
dec
add
pop
leave
std
ja
xlat
insl
mov
add
add
bound
sti
push
fldl
add
stc
xchg
xlat
or
jge
fdivr
or
push
adc
popa
jbe
jge
mov
fildl
daa
jae
mov
jns
add
add
and
jb
aaa
and
pop
or
adc
jnp
add
xor
sub
add
adc
roll
inc
add
aad
mov
dec
sub
push
mov
add
into
and
inc
pop
adc
xchg
ds
mov
das
clc
or
in
fldl
mov
add
add
jmp
and
arpl
icebp
and
jp
and
mov
and
cs
ss
pop
mov
arpl
inc
into
jne
dec
add
aaa
popa
jg
addl
cmpl
mov
dec
jo
shlb
bound
inc
and
movsl
jp
daa
sbb
cmp
push
dec
inc
js
and
push
leave
push
dec
dec
dec
addr16
jb
add
js
push
add
mov
push
push
arpl
push
inc
push
addr16
jae
imul
dec
daa
xor
fbstp
adc
add
add
jge
jae
icebp
cmpl
inc
pop
adc
jne
cmp
mov
add
push
inc
dec
out
jnp
mov
jns
jno
jge
fldcw
js
jbe
add
ja
jg
imul
scas
sub
dec
dec
lret
inc
js
data16
add
dec
pop
jge
addr16
xchg
int
js
jns
in
pop
lods
push
pop
hlt
sbb
add
adc
push
fcmovu
fsubrp
outsl
outsb
outsb
ja
arpl
clc
sub
out
sub
push
push
leave
dec
inc
loope
out
sbb
jno
std
add
into
insl
outsb
addl
add
cltd
sbb
aaa
and
push
cld
fdivs
jae
mov
negl
jge
hlt
data16
xchg
data16
sbb
or
outsb
mov
sti
or
dec
push
dec
xlat
jg
mov
add
adc
jg
jae
and
pop
mov
lea
mov
in
dec
addr16
icebp
sarl
imul
in
inc
cmp
push
jo
ror
imul
insb
pop
sub
imul
scas
sub
add
ja
andl
cmp
or
fs
call
js
vpsllq
or
mov
add
iret
mov
mov
dec
jo
lea
out
nop
and
mov
adc
sti
push
adc
jns
or
ret
negl
push
push
xchg
dec
xchg
and
pop
orl
and
cwtl
cs
adc
inc
cmp
outsb
sbb
fisubrl
sbb
sub
out
xchg
sub
jnp
dec
js
or
ret
andb
xor
pop
xchg
mov
addr16
ja
adc
add
gs
jb
cmpsl
sbb
sbb
orl
jp
xorb
outsb
lods
add
pushw
psrld
popa
push
inc
inc
jl
mov
insb
xchg
clc
cmp
arpl
outsl
add
adc
inc
cmp
cwtl
push
enter
sbb
icebp
icebp
daa
xor
sbb
mov
cld
js
cmc
mov
jno
xorl
daa
mov
or
mov
sbb
outsl
fldenv
inc
push
xchg
out
cmp
push
or
jno
movsb
pop
sub
jmp
jg
inc
ret
ja
jnp
js
out
shrb
imul
js
pop
sub
inc
sbb
insb
sbb
xchg
ss
lret
mov
mov
dec
or
data16
repz
and
and
add
cmp
xchg
or
sbb
cmp
inc
insb
jg
jo
mov
inc
ret
out
jp
dec
cld
jns
rclb
std
jl
stos
lret
jbe
addr16
adc
jae
ret
xor
sbb
sub
and
pop
sbb
lods
and
pop
or
add
mov
andl
or
cmc
sbb
cwtl
cwtl
sbb
push
or
sub
ret
sbb
scas
add
sbb
js
test
xchg
subb
inc
dec
mov
outsb
mov
xor
push
push
or
add
negb
fwait
rcrb
or
mov
xor
sbb
or
mov
stc
movb
push
js
dec
cmc
adc
mov
sub
mov
xchg
jmp
pop
push
sub
sbb
add
rcr
xor
or
sub
sbb
es
sbb
or
xor
ljmp
iret
add
push
out
jne
inc
jg
dec
in
popf
xor
fiadds
or
and
rclb
inc
xor
xor
xchg
pushf
jnp
repz
cld
add
mov
dec
dec
push
add
test
mov
add
sbb
pop
subb
xchg
je
sbb
pop
add
add
xchg
stos
add
add
push
ret
sar
add
jge
jl
gs
add
jge
mov
jb
inc
xchg
sub
xchg
orb
pop
cmp
add
mov
fs
adc
inc
cmp
adc
jp
add
cmovae
fs
dec
mov
adc
sub
pop
mov
dec
or
push
pop
pop
cltd
and
ljmp
filds
pop
add
mov
inc
outsl
cmp
inc
push
sub
cmp
push
adc
add
sbb
sub
in
rol
lret
dec
lahf
mov
iret
sub
push
rclb
pop
xlat
faddl
xchg
int3
or
or
dec
mov
daa
mov
dec
push
ss
bound
pop
xlat
dec
dec
cmp
and
mov
rorl
insl
xchg
daa
mov
sbb
adc
ret
pop
popf
add
dec
and
inc
lcall
add
mov
fnstenv
mov
sahf
fstpt
add
aas
mov
cmpsb
jg
push
popa
adc
pop
insb
and
push
and
push
cs
dec
mov
jle
ds
inc
inc
dec
inc
test
negl
sbb
es
push
inc
push
dec
daa
movsb
sub
popf
rolb
jmp
mov
in
enter
xchg
push
call
int
or
sbb
mov
rorl
inc
mov
daa
sbb
dec
sarb
cmpsb
inc
arpl
mov
test
repnz
rolb
iret
dec
mov
push
dec
int
aas
push
push
mov
push
jl
inc
jns
push
jno
loope
mov
adc
pop
notl
lods
push
dec
push
imul
lods
add
gs
inc
ja
sbb
xor
rol
cmp
jnp
pop
data16
inc
inc
push
pop
imul
pusha
mov
jbe
fs
fs
push
push
imul
or
and
out
mov
aas
jge,pt
jbe
popf
jge
jb
jle
add
out
push
add
inc
push
sub
bound
out
jge
stc
sbb
pushf
sbb
inc
pop
jle
pusha
shlb
in
push
pop
insb
mov
sub
pop
mov
popf
jmp
inc
sahf
sbb
clc
jno
dec
cli
dec
inc
shll
mov
cmp
dec
add
push
jo
sbb
mulb
in
inc
jns
jp
imul
lock
dec
and
lret
dec
out
pop
xor
inc
sub
js
pop
pop
rcrl
outsb
adc
rcr
push
cmc
nop
arpl
push
aam
and
std
mov
cld
adc
insb
bound
js
push
sbb
xchg
iret
cmc
add
daa
inc
add
sbb
aam
jo
xor
add
shll
push
dec
push
push
ret
pop
int
mov
ds
test
inc
mov
shlb
cmp
out
cs
xor
mov
or
xor
arpl
xor
jae
mov
push
inc
jb
rcr
cmpsl
cmp
loope
es
icebp
add
pop
mov
push
or
add
jmp
jge
push
mov
jg
in
push
imul
xor
popa
cmp
popa
mov
sub
aaa
dec
aaa
xor
dec
mov
dec
imul
mov
push
mov
bound
inc
xchg
inc
add
clc
es
jno
ja
adc
int3
sub
data16
push
divb
or
int
inc
lods
cltd
sbb
rcll
xor
les
and
sbb
nop
gs
adc
mov
push
jmp
sbb
dec
add
sbb
mov
pop
and
xor
inc
int3
aam
dec
lcall
daa
and
popa
fs
outsl
and
sub
push
jo
lret
adc
fnstcw
inc
push
mov
add
sub
lret
cmp
xchg
fstl
sub
add
rclb
push
xchg
push
inc
dec
inc
xor
lret
mov
fmul
push
test
add
and
enter
cmp
dec
pushf
inc
mov
test
lods
rcr
lret
or
cmp
push
push
push
xchg
cmp
fiaddl
lds
add
lea
xchg
push
aam
pop
add
dec
add
lea
add
sti
mov
outsb
or
adc
sbb
jae
mov
add
inc
fnsave
cmp
adc
daa
fsts
call
outsb
jbe
jae
push
stos
or
adc
lret
push
adc
sbb
pushf
fistpll
or
pop
adc
adc
cmpsl
enter
iret
add
cmc
add
mov
popf
fstps
out
cmpsl
or
inc
shl
movsb
movsb
pop
dec
gs
sbb
sub
sub
pushf
add
inc
add
push
sbb
or
push
xchg
js
test
xchg
xchg
mull
stos
jne
pop
inc
sbb
clc
test
cmp
test
sub
ds
add
dec
inc
les
rcll
push
jl
popf
or
adc
adc
dec
faddp
sub
lods
rorb
pusha
and
xchg
inc
or
sub
je
scas
add
and
data16
outsb
jbe
gs
xchg
and
inc
lret
push
es
repz
sbb
dec
push
adc
or
add
pop
int3
lahf
inc
dec
sbb
or
or
sbb
push
push
mov
mov
test
sbb
jmp
sbb
inc
dec
inc
dec
into
pop
adc
and
and
mov
sbb
push
mov
pop
jnp
sarl
push
pop
ficompl
mov
or
inc
pop
insl
mov
ficompl
fimull
add
add
pop
push
dec
out
outsb
push
push
sahf
js
dec
cmp
pop
imul
add
cmp
pop
push
pop
pop
mov
test
inc
out
push
out
sub
adc
pop
dec
pop
dec
ljmp
pop
add
mov
jae
add
cs
add
sbb
push
mov
imul
outsb
sub
pop
inc
dec
or
ret
and
push
or
in
div
mov
mov
push
or
mov
add
adc
inc
xchg
lods
push
push
call
mov
sub
ret
mov
inc
aas
iret
insl
icebp
push
adc
inc
adc
sub
xor
xor
xor
bound
mov
pop
lcall
inc
dec
and
mov
mov
shrl
push
inc
push
inc
inc
pop
inc
add
ss
add
das
das
into
into
sub
dec
divl
int3
mov
mov
int
ret
mov
push
fisubs
dec
sub
dec
xchg
xchg
dec
add
dec
sbb
rolb
dec
and
push
xchg
sub
xor
movsl
add
inc
std
mov
test
inc
and
cwtl
insb
fxch
pop
pop
sbb
lods
ds
lods
test
sub
or
cli
mov
push
mov
fstpt
push
js
lret
mov
dec
xor
sbb
mov
rcrb
and
add
data16
in
add
jl
pop
je
sbb
pusha
loopne
and
xor
xor
test
add
add
add
or
add
aam
dec
xor
push
dec
xor
nop
pop
add
add
mov
mov
add
add
dec
inc
rorl
negl
push
insb
inc
push
sar
jae
jb
outsb
inc
or
add
add
inc
js
dec
inc
shll
pop
or
dec
outsl
fs
fs
and
inc
xchg
sbb
jb
outsb
xchg
dec
adc
movb
pusha
adc
loop
pop
inc
push
or
insb
outsl
outsl
lahf
mov
adc
inc
mov
outsl
or
in
mov
inc
dec
add
add
pop
inc
sub
jae
jmp
add
sbb
adc
add
pop
adc
xor
xor
xchg
insl
fadds
adc
cmp
in
int
adc
pop
xor
add
jne
jbe
and
sub
pop
add
add
inc
dec
inc
ret
mov
jmp
and
neg
repnz
inc
inc
push
inc
or
add
lock
mov
push
mov
push
gs
xchg
cmp
and
push
add
imul
repz
add
ret
leave
ds
inc
mov
or
jb
sub
or
add
fildl
jo
cwtl
outsl
in
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
