push
mov
sub
mov
sub
movl
test
jae
sub
lea
andl
lea
cmp
jb
mov
sub
cmp
jbe
xor
mov
sub
xor
xor
andl
andl
mov
mov
subl
mov
andl
mov
mov
test
jae
mov
movl
movl
cmp
ja
mov
addl
xorl
orl
test
jb
mov
sub
movl
mov
cmp
jne
andl
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
xor
subl
mov
andl
subl
mov
subl
xorl
cmp
jae
mov
sub
cmp
je
mov
andl
xor
xorl
xorl
mov
addl
xorl
mov
cmp
jbe
sub
orl
mov
xorl
mov
xor
cmp
jae
xor
cmp
je
mov
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
orl
cmp
je
sub
cmp
jb
xor
lea
cmp
jb
mov
cmp
ja
mov
mov
mov
orl
orl
test
jbe
mov
cmp
jne
sub
mov
andl
andl
mov
cmp
jne
xor
sub
mov
mov
addl
mov
subl
xorl
leave
ret
int3
push
mov
sub
call
lea
mov
mov
lea
lea
mov
lea
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
lea
andl
lea
sub
call
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
andl
andl
lea
sub
addl
sub
subl
addl
andl
addl
cmp
jb
sub
mov
addl
xorl
movl
movl
call
lea
mov
lea
mov
mov
lea
lea
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
lea
mov
mov
lea
lea
lea
xor
mov
movl
call
mov
lea
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
lea
mov
lea
mov
lea
mov
mov
lea
subl
addl
mov
andl
mov
call
mov
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
addl
orl
mov
mov
mov
mov
mov
mov
lea
cmp
je
sub
cmp
je
movl
movl
call
sub
lea
orl
mov
xor
mov
leave
ret
int3
push
mov
sub
sub
mov
lea
andl
xor
cmp
ja
sub
andl
cmp
je
xor
xorl
sub
movl
addl
mov
subl
xor
subl
movl
subl
sub
mov
mov
mov
mov
subl
subl
sub
andl
movl
mov
andl
cmp
ja
mov
mov
cmp
ja
mov
andl
mov
xorl
mov
cmp
jbe
sub
andl
mov
xor
xor
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
andl
mov
andl
call
mov
mov
lea
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
lea
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
andl
sub
mov
sub
addl
mov
call
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
lea
mov
lea
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
andl
mov
subl
movl
xorl
xor
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
sub
mov
sub
mov
mov
cmp
jb
sub
andl
mov
cmp
jne
mov
mov
mov
andl
andl
mov
mov
mov
mov
sub
xor
cmp
jae
xor
sub
lea
addl
mov
xor
mov
mov
leave
ret
int3
push
mov
sub
xor
mov
orl
mov
mov
mov
andl
xor
mov
xorl
cmp
je
mov
cmp
jae
mov
andl
subl
lea
cmp
jbe
xor
sub
movl
sub
mov
lea
sub
xorl
lea
xorl
andl
xor
xorl
mov
andl
xorl
andl
lea
mov
sub
cmp
jbe
xorl
sub
subl
xorl
andl
xorl
sub
andl
leave
ret
int3
int3
int3
push
mov
sub
sub
lea
cmp
jne
sub
andl
xor
andl
xor
mov
addl
andl
mov
orl
andl
cmp
ja
mov
mov
cmp
jbe
sub
xorl
xor
andl
sub
xor
orl
xorl
xorl
subl
xor
lea
cmp
je
xor
mov
test
jb
sub
mov
movl
orl
movl
cmp
je
mov
cmp
jb
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
xor
mov
subl
andl
cmp
jne
movl
xor
mov
xor
orl
sub
andl
mov
xor
mov
subl
mov
andl
cmp
ja
xor
mov
lea
andl
mov
subl
movl
andl
xor
mov
movl
mov
mov
mov
leave
ret
int3
int3
int3
push
mov
sub
mov
mov
andl
andl
cmp
je
mov
movl
cmp
jne
call
mov
xor
mov
sub
movl
test
jbe
mov
subl
xor
call
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
lea
lea
mov
mov
lea
mov
lea
xor
lea
sub
mov
sub
cmp
jb
xor
subl
subl
cmp
jae
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
andl
sub
xor
xorl
lea
cmp
ja
xor
andl
lea
andl
call
lea
lea
mov
lea
mov
mov
mov
lea
mov
lea
lea
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
andl
subl
lea
mov
addl
andl
andl
mov
mov
xor
subl
addl
mov
xor
addl
orl
cmp
jbe
mov
mov
cmp
jae
call
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
lea
mov
call
mov
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
lea
mov
lea
mov
xorl
subl
lea
orl
xor
mov
orl
cmp
jne
mov
andl
xorl
call
mov
mov
mov
lea
lea
lea
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
mov
andl
subl
mov
xor
cmp
jne
sub
xor
cmp
jb
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
lea
mov
mov
mov
mov
cmp
jb
sub
mov
orl
andl
movl
call
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
mov
mov
lea
lea
addl
addl
mov
xor
xor
sub
call
call
lea
lea
mov
lea
mov
mov
lea
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
addl
mov
andl
mov
sub
orl
mov
movl
subl
mov
mov
xor
subl
mov
movl
mov
call
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
lea
lea
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
lea
andl
sub
xorl
lea
mov
mov
sub
lea
xorl
xorl
cmp
jae
sub
orl
movl
orl
call
lea
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
lea
mov
mov
lea
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
lea
lea
mov
mov
mov
mov
mov
andl
lea
lea
mov
mov
mov
andl
addl
cmp
jne
mov
andl
cmp
jae
addl
xor
call
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
lea
lea
mov
mov
lea
mov
andl
xor
addl
mov
mov
addl
sub
xorl
andl
sub
cmp
je
mov
mov
xorl
andl
call
mov
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
mov
andl
orl
mov
mov
subl
addl
lea
lea
test
jbe
mov
andl
andl
xor
call
mov
lea
lea
mov
mov
mov
lea
lea
mov
mov
lea
mov
lea
lea
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
xorl
mov
movl
xor
xorl
xor
test
je
mov
cmp
ja
andl
sub
lea
mov
sub
andl
cmp
jbe
xor
mov
cmp
jbe
xor
andl
andl
push
call
mov
mov
mov
lea
lea
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
lea
mov
lea
addl
subl
mov
subl
mov
addl
cmp
jb
sub
sub
andl
call
lea
mov
lea
mov
lea
lea
mov
lea
lea
lea
mov
lea
mov
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
lea
xor
sub
movl
mov
movl
mov
mov
orl
cmp
jbe
xor
subl
subl
cmp
jae
orl
sub
sub
mov
cmp
jb
mov
mov
mov
cmp
jae
subl
subl
andl
xor
mov
lea
addl
cmp
ja
xor
cmp
jae
andl
add
add
xor
subl
orl
cmp
je
xor
cmp
jbe
sub
mov
cmp
jae
mov
mov
lea
andl
xor
jne
sub
andl
xor
cmp
je
mov
mov
test
je
call
mov
lea
mov
lea
lea
mov
mov
mov
lea
lea
mov
lea
mov
lea
mov
mov
lea
lea
lea
mov
mov
lea
mov
lea
mov
addl
lea
mov
mov
lea
lea
mov
addl
mov
orl
mov
mov
call
mov
mov
lea
mov
mov
lea
mov
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
andl
xor
mov
xorl
mov
subl
test
jne
mov
sub
subl
xorl
call
lea
mov
mov
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
sub
mov
mov
call
mov
mov
mov
lea
mov
mov
lea
lea
lea
mov
mov
mov
mov
mov
lea
mov
lea
lea
mov
mov
lea
mov
mov
mov
mov
xor
mov
mov
mov
lea
mov
andl
orl
mov
cmp
jne
mov
xorl
cmp
jb
orl
sub
call
lea
lea
mov
lea
lea
lea
mov
lea
lea
lea
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
lea
lea
lea
mov
andl
mov
xor
movl
sub
andl
orl
cmp
jae
mov
lea
test
jae
andl
incl
sub
sub
lea
cmp
ja
xor
cmp
jbe
sub
sub
andl
andl
andl
andl
mov
add
sub
mov
mov
lea
mov
mov
mov
sub
orl
movl
andl
andl
andl
mov
mov
xorl
mov
movl
subl
push
push
push
push
push
call
mov
mov
call
mov
mov
lea
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
lea
lea
mov
mov
mov
mov
movl
mov
lea
mov
sub
call
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
lea
lea
orl
sub
lea
sub
sub
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
lea
mov
mov
lea
lea
mov
mov
mov
sub
andl
xorl
lea
mov
andl
cmp
je
sub
sub
mov
addl
mov
call
mov
mov
mov
lea
mov
lea
lea
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
orl
orl
addl
call
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
lea
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
andl
movl
lea
lea
xor
cmp
jb
mov
cmp
jb
andl
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
lea
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
sub
movl
lea
movl
addl
sub
movl
lea
cmp
jb
mov
mov
cmp
jne
call
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
lea
lea
mov
xor
mov
lea
addl
sub
movl
cmp
je
xor
andl
mov
andl
call
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
lea
lea
lea
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
lea
xor
orl
subl
xor
movl
mov
test
ja
mov
cmp
ja
mov
mov
add
mov
rep
mov
sub
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
mov
lea
orl
andl
lea
mov
lea
mov
xor
subl
sub
xorl
mov
mov
cmp
je
orl
mov
xorl
andl
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
sub
andl
mov
mov
orl
subl
lea
xor
andl
xorl
call
mov
lea
mov
mov
mov
lea
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
lea
lea
mov
mov
andl
subl
sub
lea
mov
lea
xor
sub
orl
orl
call
mov
mov
mov
mov
lea
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
lea
lea
lea
movl
mov
mov
lea
xorl
cmp
jae
mov
subl
mov
andl
movl
call
mov
lea
lea
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
xorl
subl
mov
subl
sub
mov
orl
addl
andl
cmp
ja
mov
mov
sub
subl
sub
call
lea
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
lea
lea
xorl
mov
andl
mov
mov
andl
lea
orl
mov
mov
mov
xorl
mov
xorl
lea
test
jae
mov
xor
cmp
jne
mov
mov
lea
cmp
jae
mov
orl
cmp
je
mov
sub
andl
sub
cmp
jne
sub
sub
andl
mov
cmp
jbe
mov
sub
mov
sub
dec
cmp
jne
call
mov
lea
mov
mov
mov
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
cmp
jne
sub
movl
cmp
ja
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
lea
andl
lea
xor
movl
subl
andl
cmp
je
mov
orl
xorl
cmp
ja
xor
call
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
lea
andl
mov
orl
lea
lea
mov
sub
sub
cmp
jne
xor
xorl
mov
lea
subl
test
jne
mov
cmp
jb
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
lea
andl
mov
mov
xorl
xorl
andl
cmp
jbe
mov
mov
mov
addl
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
lea
mov
mov
lea
lea
mov
lea
mov
lea
mov
mov
mov
mov
mov
addl
mov
mov
cmp
je
mov
addl
subl
cmp
jbe
xorl
subl
mov
call
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
lea
mov
lea
lea
lea
mov
mov
mov
sub
orl
mov
sub
lea
xorl
cmp
je
mov
mov
test
je
orl
call
mov
mov
mov
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
movl
orl
subl
addl
mov
mov
call
lea
lea
mov
mov
lea
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
lea
lea
mov
mov
lea
mov
lea
mov
mov
mov
mov
andl
subl
mov
xor
call
lea
lea
mov
mov
lea
mov
mov
lea
lea
lea
lea
lea
lea
mov
mov
mov
lea
mov
lea
lea
mov
mov
lea
lea
mov
andl
xor
mov
andl
mov
lea
call
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
lea
orl
sub
mov
mov
mov
cmp
jbe
xor
andl
andl
cmp
jae
mov
addl
addl
call
mov
lea
mov
lea
mov
mov
mov
lea
mov
lea
lea
mov
lea
mov
lea
mov
lea
lea
lea
mov
lea
lea
mov
mov
lea
mov
xor
xor
xor
push
call
mov
xor
movl
sub
andl
mov
xor
mov
xorl
lea
xor
push
sub
lea
mov
subl
movl
ret
mov
lea
mov
sub
mov
cmp
jne
xor
mov
mov
xor
subl
addl
andl
mov
addl
call
lea
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
movl
orl
orl
mov
pushl
call
xor
mov
mov
cmp
jne
mov
mov
xorl
andl
cmp
ja
call
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
andl
sub
sub
mov
cmp
jne
xor
xor
xor
andl
cmp
je
subl
call
lea
lea
mov
lea
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
lea
lea
mov
mov
mov
mov
andl
andl
xorl
call
mov
mov
mov
mov
lea
lea
mov
lea
lea
lea
mov
lea
mov
lea
lea
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
addl
mov
mov
andl
andl
mov
call
lea
mov
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
lea
lea
mov
mov
mov
mov
lea
mov
subl
mov
lea
xor
subl
andl
andl
xor
mov
andl
andl
call
lea
lea
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
lea
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
andl
andl
mov
mov
orl
xorl
andl
cmp
ja
mov
mov
cmp
ja
lea
call
lea
mov
mov
mov
mov
lea
lea
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
lea
mov
lea
lea
mov
movl
orl
mov
xor
cmp
jb
mov
andl
lea
call
mov
mov
mov
lea
lea
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
xor
lea
mov
mov
movl
cmp
jbe
lea
sub
orl
sub
xor
andl
call
mov
mov
mov
lea
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
sub
mov
mov
cmp
jb
addl
orl
mov
mov
mov
call
mov
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
sub
mov
orl
lea
andl
xor
addl
mov
xorl
call
mov
mov
mov
mov
lea
lea
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
lea
lea
mov
xor
mov
call
mov
lea
mov
lea
lea
lea
lea
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
lea
andl
mov
andl
mov
lea
mov
orl
xor
subl
mov
subl
call
lea
lea
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
lea
mov
lea
mov
movl
mov
andl
xor
andl
xor
andl
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
xorl
mov
mov
mov
subl
sub
andl
call
lea
mov
mov
lea
lea
mov
mov
lea
mov
mov
mov
lea
mov
lea
lea
lea
mov
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
mov
andl
mov
sub
cmp
je
sub
xor
mov
cmp
jb
andl
push
push
push
call
mov
call
mov
mov
mov
lea
lea
lea
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
addl
sub
addl
xorl
mov
lea
sub
lea
xor
andl
cmp
ja
mov
andl
addl
cmp
jb
call
mov
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
lea
andl
mov
andl
subl
call
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
lea
mov
lea
lea
mov
lea
mov
lea
mov
lea
sub
andl
mov
mov
xor
mov
cmp
je
mov
addl
call
mov
lea
mov
lea
mov
lea
mov
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
lea
subl
mov
xor
andl
mov
mov
subl
orl
sub
xor
mov
movl
lea
mov
call
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
movl
mov
lea
lea
call
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
lea
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
lea
mov
mov
orl
lea
mov
xorl
orl
sub
lea
subl
cmp
jbe
sub
xor
mov
call
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
lea
lea
mov
mov
lea
mov
mov
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
xorl
xorl
subl
mov
subl
movl
subl
call
mov
mov
mov
mov
lea
mov
lea
lea
mov
mov
lea
mov
lea
mov
lea
lea
mov
mov
mov
mov
lea
lea
lea
mov
lea
sub
movl
mov
orl
sub
xorl
andl
subl
mov
andl
orl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
andl
mov
andl
mov
xor
lea
test
je
sub
cmp
jne
xorl
push
pushl
call
mov
call
mov
lea
mov
lea
mov
lea
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
lea
mov
lea
lea
lea
mov
lea
mov
andl
lea
mov
andl
sub
test
jb
xor
mov
call
mov
mov
lea
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
xor
call
lea
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
andl
addl
addl
mov
lea
mov
addl
addl
orl
cmp
jne
mov
andl
xorl
mov
cmp
jae
subl
call
lea
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
lea
mov
mov
mov
mov
lea
mov
lea
sub
subl
andl
lea
call
mov
mov
mov
mov
mov
lea
mov
lea
lea
mov
mov
lea
lea
mov
mov
lea
lea
lea
lea
mov
mov
mov
lea
lea
mov
mov
lea
movl
orl
movl
orl
mov
xor
mov
test
je
mov
mov
test
ja
lea
call
lea
lea
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
orl
lea
lea
sub
mov
andl
cmp
jae
mov
andl
call
mov
mov
lea
mov
lea
lea
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
lea
lea
mov
mov
lea
lea
mov
mov
lea
xorl
lea
mov
xor
sub
mov
addl
xorl
cmp
jb
mov
andl
subl
call
mov
mov
lea
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
movl
andl
cmp
ja
mov
cmp
jbe
movl
ret
sub
sub
movl
addl
cmp
ja
sub
addl
lea
cmp
je
mov
sub
andl
mov
push
call
not
call
mov
mov
mov
lea
lea
mov
mov
lea
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
mov
lea
mov
mov
andl
lea
xor
andl
subl
cmp
ja
mov
mov
cmp
jae
call
mov
lea
lea
lea
lea
mov
mov
mov
mov
mov
lea
lea
lea
lea
lea
lea
lea
mov
lea
mov
mov
mov
mov
lea
lea
andl
mov
subl
xorl
xor
xor
andl
cmp
jbe
mov
xor
addl
call
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
subl
mov
lea
mov
movl
mov
cmp
jae
xor
addl
mov
test
ja
mov
lea
addl
mov
mov
leave
ret
int3
int3
push
mov
sub
xor
addl
test
jae
mov
cmp
jb
call
call
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
xorl
mov
lea
mov
xor
sub
xor
subl
mov
xor
xorl
cmp
jne
mov
addl
cmp
jb
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
lea
lea
lea
mov
lea
lea
mov
lea
mov
lea
lea
orl
addl
mov
sub
sub
lea
sub
andl
orl
mov
call
xor
cmp
jb
xor
orl
andl
addl
xor
movl
leave
ret
int3
push
mov
sub
xor
sub
sub
sub
cmp
jae
mov
xor
cmp
je
mov
mov
lea
orl
addl
cmp
jae
mov
mov
mov
sub
mov
xor
andl
subl
mov
movl
test
jb
mov
mov
sub
test
jbe
mov
mov
lea
sub
cmp
jbe
xor
addl
cmp
ja
sub
cmp
je
xor
xorl
test
jb
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
movl
lea
addl
andl
cmp
jbe
xor
mov
cmp
ja
sub
subl
mov
cmp
jne
sub
mov
addl
cmp
ja
orl
xorl
movl
mov
orl
xor
mov
addl
andl
mov
addl
mov
orl
xorl
xor
mov
xor
mov
orl
subl
leave
ret
int3
int3
int3
int3
push
mov
sub
xor
xor
andl
cmp
jbe
mov
andl
mov
mov
call
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
lea
mov
mov
lea
lea
lea
mov
mov
mov
lea
mov
movl
andl
mov
andl
xor
cmp
je
sub
mov
addl
mov
sub
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
orl
cmp
ja
mov
mov
sub
cmp
ja
xor
andl
sub
lea
orl
lea
sub
mov
mov
mov
xor
cmp
ja
andl
mov
mov
addl
mov
subl
subl
sub
mov
movl
xor
lea
xorl
subl
xorl
sub
mov
movl
xor
lea
andl
mov
leave
ret
int3
int3
push
mov
sub
xor
andl
sub
cmp
jae
mov
cmp
ja
mov
orl
cmp
jne
sub
cmp
ja
subl
andl
lea
subl
xor
subl
andl
addl
mov
lea
cmp
je
mov
andl
addl
mov
addl
andl
cmp
je
mov
andl
test
jae
xor
mov
test
jb
xor
sub
movl
cmp
je
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
xor
addl
lea
mov
lea
test
jae
xor
movl
mov
test
ja
mov
sub
cmp
jb
xor
xorl
cmp
je
mov
xorl
xorl
test
jae
sub
andl
xorl
mov
sub
mov
mov
subl
cmp
ja
mov
mov
xor
mov
xor
orl
cmp
je
mov
movl
subl
leave
ret
int3
int3
int3
push
mov
sub
mov
andl
mov
sub
call
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
orl
mov
mov
mov
sub
sub
xor
addl
cmp
jne
addl
sub
sub
mov
andl
andl
leave
ret
push
mov
sub
mov
sub
sub
cmp
jne
xor
subl
test
jb
orl
mov
sub
mov
mov
subl
mov
xor
xor
andl
mov
movl
andl
mov
mov
addl
xorl
cmp
je
mov
andl
orl
xor
orl
xor
mov
xor
mov
subl
lea
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
cmp
jb
sub
mov
sub
cmp
ja
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
xorl
movl
movl
xor
addl
sub
xor
orl
addl
cmp
jb
xor
mov
cmp
jb
call
mov
xorl
mov
lea
lea
orl
mov
movl
andl
andl
lea
mov
cmp
jbe
orl
addl
mov
movl
mov
subl
lea
sub
xorl
call
mov
mov
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
xorl
xorl
sub
mov
xorl
movl
xorl
cmp
je
mov
sub
cmp
ja
movl
xor
sub
sub
call
mov
mov
lea
mov
mov
mov
lea
mov
lea
lea
mov
lea
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
andl
mov
mov
sub
andl
mov
call
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
lea
lea
mov
mov
lea
mov
mov
xorl
mov
lea
subl
subl
orl
sub
andl
mov
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
lea
lea
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
xor
mov
orl
movl
andl
andl
cmp
jb
mov
sub
mov
mov
xor
sub
mov
cmp
jbe
mov
andl
orl
sub
mov
orl
cmp
jne
sub
sub
xor
lea
mov
movl
xor
mov
mov
cmp
ja
mov
andl
cmp
jne
sub
mov
orl
test
jbe
mov
lea
cmp
jb
call
mov
lea
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
lea
lea
mov
mov
mov
lea
mov
lea
mov
mov
mov
movl
mov
mov
andl
mov
mov
lea
call
mov
lea
mov
mov
lea
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
lea
mov
mov
lea
lea
mov
lea
mov
mov
addl
lea
andl
movl
mov
lea
xor
addl
xorl
cmp
jb
xor
addl
call
mov
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
lea
xor
mov
subl
mov
xor
call
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
lea
lea
mov
mov
mov
lea
lea
mov
mov
sub
cmp
jb
mov
andl
andl
xor
sub
orl
cmp
jbe
sub
xor
lea
addl
movl
xor
sub
mov
push
push
call
je
mov
orl
orl
cmp
je
sub
mov
xor
cmp
jb
mov
push
call
sub
test
jne
sub
sub
xorl
sub
sub
lea
call
mov
lea
lea
mov
lea
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
addl
addl
lea
mov
xor
mov
cmp
jb
mov
sub
andl
andl
subl
call
mov
mov
lea
lea
lea
mov
mov
lea
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
lea
mov
mov
lea
mov
andl
mov
andl
mov
subl
xor
movl
cmp
ja
mov
cmp
je
xor
movl
subl
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
lea
mov
mov
subl
mov
sub
mov
subl
orl
call
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
sub
mov
mov
xor
mov
andl
andl
mov
test
jb
mov
orl
movl
test
ja
call
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
lea
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
lea
sub
subl
lea
sub
mov
sub
cmp
je
xor
movl
andl
orl
cmp
jae
call
mov
lea
lea
mov
mov
lea
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
movl
andl
lea
mov
orl
xorl
mov
cmp
jne
sub
xorl
call
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
xorl
mov
lea
mov
sub
movl
lea
cmp
je
xor
orl
andl
mov
lea
push
call
lea
mov
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
andl
addl
lea
mov
mov
xor
subl
mov
mov
xorl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
lea
mov
mov
mov
lea
mov
mov
lea
lea
mov
lea
xor
mov
orl
xorl
sub
mov
xorl
mov
mov
lea
xor
orl
andl
call
lea
lea
mov
lea
lea
mov
lea
lea
mov
lea
lea
mov
mov
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
lea
orl
mov
mov
mov
xorl
cmp
ja
xor
sub
mov
andl
cmp
jbe
mov
call
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
lea
mov
addl
addl
movl
mov
mov
xorl
cmp
jne
mov
lea
mov
addl
mov
call
mov
mov
mov
mov
mov
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
orl
andl
subl
xor
orl
sub
xor
orl
test
jb
xor
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
lea
lea
sub
subl
lea
mov
sub
push
call
mov
lea
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
lea
mov
mov
lea
mov
mov
lea
lea
mov
mov
sub
andl
orl
addl
mov
mov
xor
cmp
jb
mov
test
je
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
lea
lea
mov
mov
mov
mov
mov
subl
lea
mov
mov
xor
mov
andl
test
ja
mov
subl
cmp
jne
mov
call
mov
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
lea
lea
mov
lea
xorl
mov
subl
xor
andl
sub
mov
xorl
sub
cmp
jne
xor
subl
test
je
call
lea
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
orl
mov
andl
andl
cmp
jae
andl
sub
lea
movl
xorl
lea
mov
call
mov
lea
lea
lea
lea
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
addl
subl
movl
lea
lea
sub
cmp
jae
mov
xor
cmp
jb
lea
push
call
lea
mov
mov
mov
lea
lea
lea
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
xor
xor
lea
sub
mov
movl
mov
xor
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
xorl
lea
mov
xor
mov
movl
lea
mov
cmp
jb
andl
mov
mov
call
mov
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
lea
xor
orl
lea
cmp
jne
mov
xorl
cmp
jae
call
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
andl
andl
mov
lea
mov
addl
cmp
jb
mov
xorl
subl
call
mov
mov
lea
mov
lea
mov
lea
lea
lea
lea
mov
lea
lea
mov
mov
mov
mov
lea
lea
lea
mov
mov
lea
lea
lea
mov
mov
sub
lea
mov
xor
mov
andl
andl
addl
orl
xor
lea
xor
cmp
jae
andl
xor
xor
call
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
sub
andl
mov
xor
orl
cmp
jae
xor
mov
addl
call
mov
lea
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
mov
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
lea
mov
andl
mov
mov
xorl
cmp
jb
mov
mov
lea
cmp
jbe
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
lea
mov
lea
lea
andl
andl
xor
sub
mov
xor
call
mov
mov
lea
lea
mov
mov
lea
lea
lea
lea
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
andl
mov
mov
xor
sub
lea
sub
orl
lea
addl
addl
subl
mov
mov
xor
mov
mov
andl
incl
xor
sub
movl
lea
lea
cmp
jae
xor
sub
xor
xor
mov
mov
andl
mov
movl
mov
test
jne
sub
movl
sub
cmp
jae
mov
test
ja
xor
xor
call
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
lea
lea
mov
mov
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
lea
mov
call
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
cmp
ja
mov
test
ja
movl
movl
movl
call
lea
mov
mov
mov
mov
lea
mov
lea
mov
lea
mov
lea
lea
mov
lea
mov
mov
mov
lea
lea
lea
lea
mov
mov
mov
sub
mov
mov
andl
movl
sub
lea
cmp
jne
sub
xorl
cmp
jae
call
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
lea
mov
lea
lea
mov
mov
andl
mov
mov
mov
orl
xor
movl
xorl
mov
call
lea
mov
lea
mov
mov
mov
mov
mov
lea
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
sub
mov
lea
mov
subl
xor
xor
movl
cmp
jae
mov
test
ja
mov
mov
mov
movl
orl
cmp
ja
xor
mov
cmp
jae
mov
sub
sub
cmp
jne
sub
andl
mov
mov
mov
andl
xorl
andl
push
push
call
sub
subl
orl
xor
subl
test
jb
mov
subl
orl
andl
xorl
addl
mov
movl
sub
mov
xor
mov
andl
mov
andl
test
ja
mov
lea
andl
call
mov
mov
xorl
cmp
ja
mov
addl
test
je
mov
sub
sub
mov
mov
mov
addl
xor
test
ja
mov
andl
subl
xorl
push
pushl
call
mov
mov
mov
test
jbe
xor
xor
test
jb
mov
movl
lea
mov
cmp
jne
mov
andl
cmp
jne
mov
mov
andl
movl
cmp
je
mov
lea
cmp
jae
movl
mov
call
mov
andl
subl
xor
cmp
ja
mov
mov
mov
mov
test
je
orl
mov
mov
movl
addl
mov
lea
orl
addl
andl
sub
mov
xor
mov
cmp
jae
xor
orl
andl
andl
cmp
jne
orl
pushl
call
xor
addl
andl
test
jae
xor
addl
xor
cmp
jae
mov
addl
cmp
ja
mov
sub
cmp
jne
xorl
pushl
push
pushl
call
mov
subl
cmp
jae
mov
mov
movl
cmp
je
mov
mov
mov
movl
cmp
jbe
xor
mov
orl
andl
sub
lea
mov
andl
mov
xor
pushl
push
pushl
call
xor
lea
cmp
jae
subl
sub
lea
xorl
xorl
sub
cmp
jne
sub
orl
mov
mov
cmp
jae
sub
andl
call
xor
cmp
ja
xor
sub
xorl
orl
sub
mov
mov
subl
mov
cmp
jne
mov
mov
lea
call
sub
mov
xorl
call
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
orl
lea
leave
ret
call
lea
mov
lea
mov
mov
mov
mov
lea
mov
lea
lea
lea
lea
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
xorl
call
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
lea
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
movl
addl
mov
subl
mov
call
mov
lea
lea
lea
mov
lea
lea
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
andl
mov
mov
call
mov
mov
lea
lea
mov
lea
lea
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
orl
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
lea
mov
lea
lea
mov
mov
sub
xor
lea
call
mov
mov
lea
lea
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
lea
lea
movl
call
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
sub
xorl
mov
orl
call
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
lea
mov
mov
mov
lea
lea
mov
mov
lea
mov
mov
mov
lea
mov
lea
andl
mov
addl
andl
xorl
andl
call
lea
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
lea
mov
xor
mov
mov
orl
cmp
ja
xorl
sub
mov
orl
andl
sub
call
lea
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
andl
mov
andl
lea
lea
call
mov
mov
mov
lea
lea
lea
lea
mov
mov
lea
lea
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
lea
lea
mov
lea
mov
lea
mov
lea
subl
cmp
ja
mov
andl
mov
mov
mov
call
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
andl
mov
mov
sub
test
jb
sub
mov
orl
xorl
lea
lea
call
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
lea
mov
mov
subl
mov
lea
mov
mov
xor
subl
cmp
jb
sub
mov
orl
test
jae
lea
mov
addl
call
mov
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
lea
movl
movl
movl
xor
test
jae
mov
sub
mov
cmp
je
xor
andl
push
call
mov
sub
sub
movl
test
jb
xorl
mov
andl
sub
subl
xor
andl
orl
xor
mov
andl
mov
call
mov
mov
mov
mov
lea
mov
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
lea
lea
mov
andl
mov
lea
lea
movl
call
lea
mov
lea
mov
lea
lea
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
xorl
lea
lea
sub
mov
sub
cmp
jb
mov
sub
xor
subl
movl
call
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
lea
lea
lea
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
addl
subl
movl
call
lea
lea
mov
lea
lea
mov
mov
lea
lea
mov
lea
lea
lea
lea
mov
mov
mov
mov
mov
lea
mov
lea
mov
lea
lea
mov
subl
orl
mov
mov
mov
xor
xor
andl
mov
cmp
jne
mov
mov
subl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
lea
andl
andl
mov
mov
subl
test
jae
orl
mov
movl
lea
mov
call
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
lea
lea
lea
lea
lea
mov
lea
lea
lea
mov
lea
mov
subl
addl
subl
xor
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
lea
xor
orl
xor
cmp
ja
mov
mov
addl
cmp
je
movl
mov
call
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
andl
mov
subl
xor
mov
xorl
movl
mov
lea
mov
andl
call
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
lea
mov
lea
mov
lea
mov
lea
mov
mov
addl
mov
andl
sub
cmp
jbe
mov
mov
addl
andl
test
je
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
lea
lea
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
andl
orl
xor
orl
mov
mov
andl
xor
sub
cmp
ja
mov
mov
subl
ret
xor
addl
xorl
andl
addl
cmp
jae
sub
addl
mov
orl
lea
call
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
lea
lea
mov
lea
lea
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
xor
mov
lea
mov
subl
test
jb
mov
andl
cmp
jbe
call
mov
mov
lea
lea
lea
mov
mov
lea
lea
lea
mov
mov
mov
mov
mov
lea
lea
mov
mov
lea
mov
lea
lea
mov
mov
orl
lea
xorl
call
mov
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
subl
subl
mov
pushl
call
neg
call
mov
rorl
filds
push
mov
jne
xchg
popa
add
cmpsl
mov
sub
xor
aaa
adc
dec
fisubrs
xor
imul
mov
xor
dec
ret
jl
ret
rcrb
push
or
popa
inc
lret
out
mov
cmp
pop
out
add
out
add
add
in
add
add
add
add
add
add
add
add
test
add
add
cld
push
add
add
add
add
add
add
add
add
int
sub
and
add
add
lcall
add
add
add
arpl
add
add
sti
add
add
add
in
add
add
add
add
mov
add
add
add
dec
add
add
add
add
add
add
add
add
jae
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
mov
add
add
inc
add
push
add
add
addl
add
add
add
stos
add
xor
add
add
jge
add
add
add
add
mov
add
add
add
add
jb
add
add
add
bound
add
add
add
add
add
add
inc
add
add
add
add
std
sbb
add
add
out
add
add
into
add
add
mov
lahf
add
push
add
add
add
sbb
add
add
add
add
popl
add
add
add
add
add
cmp
add
add
add
mov
add
add
add
scas
in
add
add
add
add
add
add
sbb
adc
add
add
add
add
add
add
add
call
add
add
mov
add
add
add
jns
add
sahf
add
add
add
add
or
add
loope
add
add
add
add
pusha
add
add
jl
pusha
push
pop
out
jg
mov
or
jnp
addb
mov
fimull
dec
sub
mov
pushf
mov
lret
add
aam
aas
pop
sbb
test
cs
mov
loope
imul
add
testb
add
add
inc
mov
add
add
add
js
add
add
add
fildl
add
add
add
add
add
stc
add
add
add
into
add
add
add
add
add
add
add
add
add
pop
pop
add
dec
add
add
add
add
add
add
sbb
add
mov
add
add
add
mov
add
add
loopne
xchg
add
add
add
add
add
add
mov
mov
add
add
add
add
cmc
add
add
add
add
sbb
add
add
pop
add
add
add
add
add
add
add
add
add
rolb
add
popf
add
add
jne
add
add
add
add
add
add
add
add
ret
add
jle
imul
add
add
add
hlt
add
arpl
add
add
add
add
jno
dec
cld
add
add
add
sldt
sub
add
add
add
popf
xchg
lods
add
add
add
add
add
add
push
add
add
add
push
add
add
add
stos
add
add
add
add
add
add
add
add
add
stos
add
leave
add
add
roll
add
add
add
dec
add
popa
add
dec
add
data16
add
add
add
add
add
add
push
add
add
dec
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
add
add
mov
add
add
in
add
add
add
add
fildl
add
sub
add
add
add
scas
add
add
cmp
add
add
add
push
mov
sub
call
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
lea
lea
mov
mov
lea
lea
mov
lea
mov
mov
lea
mov
orl
mov
andl
sub
xorl
mov
xor
orl
mov
xor
xor
xorl
sub
subl
call
lea
lea
mov
mov
mov
lea
lea
lea
mov
mov
mov
lea
lea
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
addl
xor
lea
mov
xor
lea
lea
lea
test
ja
mov
andl
subl
cmp
jbe
andl
mov
call
mov
mov
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
lea
lea
lea
mov
lea
mov
mov
lea
mov
orl
mov
lea
mov
call
lea
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
lea
mov
lea
mov
mov
lea
mov
lea
lea
andl
andl
andl
mov
subl
xorl
call
lea
mov
mov
mov
mov
lea
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
lea
mov
mov
lea
xor
xor
mov
movl
sub
xor
orl
call
lea
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
orl
movl
mov
lea
movl
call
mov
lea
mov
lea
mov
lea
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
addl
mov
sub
xorl
lea
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
lea
mov
andl
mov
mov
sub
mov
call
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
xorl
lea
mov
call
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
subl
mov
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
lea
mov
lea
movl
call
mov
mov
mov
mov
mov
lea
lea
mov
mov
lea
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
mov
andl
push
mov
mov
addl
xor
mov
mov
movl
andl
cmp
ja
andl
orl
mov
sub
sub
sub
push
call
je
mov
mov
subl
andl
test
jae
sub
mov
mov
sub
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
lea
lea
mov
mov
lea
lea
lea
mov
lea
mov
mov
mov
xor
sub
addl
orl
mov
sub
mov
xor
cmp
ja
subl
mov
mov
sub
movl
xorl
orl
call
mov
lea
mov
lea
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
lea
mov
mov
andl
sub
andl
movl
subl
mov
andl
cmp
jb
sub
addl
cmp
jbe
mov
andl
call
lea
mov
mov
lea
mov
lea
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
lea
mov
mov
lea
lea
lea
mov
lea
xorl
lea
mov
movl
mov
addl
mov
cmp
jae
mov
addl
addl
cmp
jbe
xor
mov
mov
call
lea
mov
lea
mov
mov
mov
mov
lea
mov
lea
lea
mov
lea
lea
mov
mov
mov
mov
mov
lea
mov
lea
lea
mov
mov
mov
xor
mov
mov
xorl
lea
andl
cmp
jbe
sub
andl
addl
mov
call
mov
mov
mov
mov
lea
lea
lea
mov
mov
lea
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
sub
xorl
movl
xor
mov
test
je
mov
movl
addl
cmp
jae
mov
andl
call
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
lea
orl
andl
xorl
sub
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
lea
mov
lea
lea
mov
lea
lea
mov
lea
mov
addl
subl
mov
addl
sub
mov
mov
addl
call
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
xorl
lea
orl
movl
mov
andl
mov
andl
orl
andl
xorl
xor
cmp
jne
andl
sub
andl
addl
push
call
not
call
mov
mov
lea
lea
mov
mov
lea
mov
lea
lea
mov
mov
lea
mov
mov
lea
mov
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
lea
lea
mov
mov
lea
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
mov
andl
call
mov
mov
mov
lea
lea
lea
lea
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
lea
mov
subl
andl
lea
lea
andl
lea
mov
mov
andl
xor
xorl
call
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
lea
lea
lea
mov
mov
mov
mov
mov
xorl
andl
mov
andl
andl
subl
call
mov
mov
mov
lea
lea
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
lea
lea
lea
lea
mov
mov
movl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
lea
lea
lea
lea
mov
mov
mov
lea
mov
lea
lea
lea
lea
andl
andl
movl
lea
call
mov
mov
lea
mov
lea
lea
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
lea
sub
mov
mov
call
lea
mov
mov
mov
lea
mov
lea
lea
mov
lea
mov
mov
lea
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
andl
lea
movl
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
lea
lea
mov
mov
mov
lea
mov
subl
mov
call
mov
lea
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
lea
lea
mov
mov
mov
lea
lea
mov
mov
andl
lea
mov
xor
call
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
xorl
xor
mov
call
mov
mov
mov
lea
mov
mov
lea
lea
lea
mov
lea
mov
lea
lea
lea
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
xor
addl
andl
andl
addl
xor
lea
sub
xorl
orl
cmp
jae
mov
mov
mov
orl
addl
mov
xor
xorl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
orl
lea
mov
lea
call
mov
mov
mov
mov
lea
mov
lea
lea
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
call
mov
lea
mov
mov
lea
lea
mov
mov
lea
lea
mov
mov
lea
mov
lea
mov
mov
lea
mov
mov
lea
lea
mov
mov
lea
subl
lea
mov
movl
lea
subl
call
lea
mov
mov
mov
mov
mov
lea
lea
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
sub
subl
lea
lea
call
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
lea
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
mov
lea
lea
mov
lea
xor
lea
call
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
mov
lea
lea
subl
orl
addl
call
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
lea
lea
mov
lea
lea
xor
subl
movl
orl
xor
call
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
lea
mov
mov
mov
lea
mov
lea
mov
lea
lea
mov
lea
lea
mov
mov
mov
lea
mov
call
mov
mov
mov
lea
mov
lea
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
subl
orl
xorl
andl
mov
call
mov
mov
mov
lea
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
orl
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
sub
mov
mov
call
mov
lea
lea
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
lea
lea
mov
lea
mov
lea
mov
xorl
andl
xorl
call
mov
mov
mov
mov
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
lea
mov
lea
lea
movl
mov
lea
call
mov
mov
lea
lea
mov
mov
lea
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
andl
andl
xor
call
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
lea
mov
lea
sub
mov
subl
call
mov
mov
lea
mov
mov
lea
mov
lea
lea
mov
mov
mov
mov
lea
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
addl
mov
sub
call
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
lea
lea
mov
lea
lea
mov
mov
lea
mov
lea
lea
andl
xorl
xor
xorl
andl
call
mov
lea
lea
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
lea
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
sub
xor
mov
lea
call
lea
lea
lea
mov
mov
lea
mov
lea
mov
mov
mov
lea
mov
mov
lea
lea
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
movl
mov
andl
orl
mov
call
mov
lea
mov
lea
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
lea
mov
lea
call
lea
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
sub
mov
andl
mov
xor
call
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
xorl
andl
addl
andl
xor
call
mov
mov
mov
lea
lea
mov
mov
mov
lea
lea
mov
mov
mov
lea
lea
lea
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
xorl
mov
call
lea
mov
lea
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
andl
mov
mov
lea
call
mov
lea
lea
mov
lea
mov
mov
lea
mov
mov
lea
lea
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
lea
lea
mov
xorl
call
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
lea
mov
lea
lea
lea
mov
lea
mov
lea
lea
subl
xor
lea
andl
mov
call
mov
mov
lea
lea
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
xor
xorl
xor
mov
sub
call
lea
lea
lea
lea
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
lea
lea
lea
mov
mov
mov
xor
lea
orl
andl
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
lea
mov
lea
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
subl
mov
mov
andl
movl
call
lea
mov
mov
lea
lea
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
lea
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
call
mov
lea
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
lea
mov
xorl
movl
lea
mov
call
lea
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
lea
mov
lea
lea
call
mov
lea
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
lea
mov
mov
mov
lea
lea
mov
mov
lea
mov
lea
mov
mov
mov
andl
subl
orl
mov
mov
subl
cmp
je
mov
sub
movl
andl
mov
addl
sub
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
andl
mov
call
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
movl
sub
xor
lea
lea
mov
xor
andl
andl
cmp
jne
xor
mov
addl
mov
movl
xorl
call
lea
mov
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
subl
call
xor
xor
xor
andl
andl
mov
mov
mov
leave
ret
push
mov
sub
mov
subl
mov
subl
mov
mov
mov
andl
mov
lea
mov
xorl
mov
mov
lea
mov
andl
mov
cmp
jbe
mov
test
je
movl
andl
mov
orl
xor
sub
subl
xor
leave
ret
int3
int3
push
mov
sub
mov
subl
lea
movl
movl
cmp
jae
xor
xor
lea
cmp
jbe
mov
subl
addl
mov
test
ja
mov
xor
sub
xor
mov
mov
mov
xor
andl
cmp
jb
mov
xorl
movl
cmp
jbe
sub
leave
ret
int3
int3
int3
int3
int3
int3
add
add
xor
jne
aad
fiaddl
cli
or
arpl
test
pop
add
outsl
repnz
mov
cmpsb
and
add
arpl
xor
or
mov
aaa
lods
jmp
aas
inc
sbb
jb
adc
dec
mov
adc
sbb
adc
cmp
imul
xor
add
push
cli
inc
add
pop
shlb
mov
lods
inc
mov
add
mov
push
add
jb
add
rclb
adc
push
cmp
daa
sbb
mov
ljmp
add
push
popa
jb
decb
sbb
cmpsb
incl
mov
pop
iret
or
cli
jb
xor
cmpsb
out
arpl
popf
sub
jne
ret
add
iret
xor
add
jo
popf
out
xor
and
or
sub
lcall
nop
mov
cmpsl
add
mov
cmpsb
roll
notl
jle
xchg
push
outsb
add
pop
sub
addb
jae
sub
orb
xchg
cmp
std
scas
imulb
add
out
loop
scas
add
add
xlat
cmp
jmp
xchg
fcmovb
das
fiadds
hlt
jmp
cli
and
aas
push
jnp
xor
movsb
enter
add
test
xor
inc
adc
and
pop
adcb
es
aaa
jb
inc
scas
pusha
or
xor
add
sub
jbe
push
iret
aas
loope
jae
ljmp
pop
das
push
add
inc
mov
add
sbb
sar
in
add
icebp
neg
mov
jg
jecxz
test
jmp
rcll
repnz
jle
adc
icebp
repz
cmp
fs
add
mov
iret
daa
add
jnp
out
movb
mov
sub
xor
adcb
loop
jb
xchg
aas
repnz
add
push
aaa
adc
cmp
xor
push
iret
mov
xchg
out
cmp
mov
fsubs
adc
xor
stos
push
cs
shl
mov
xor
and
add
push
and
inc
nop
loopne
cmp
push
xor
inc
enter
jne
movsl
sbb
jb
add
xchg
dec
and
scas
inc
fdivr
xchg
adc
sbb
ficoml
mov
mov
or
mov
cmp
imul
in
insb
sub
mov
push
leave
je
add
or
mov
enter
shl
push
xchg
int
adc
xor
mov
divb
xchg
adc
cmp
das
mov
aam
sbb
dec
arpl
andl
dec
or
jnp
mov
dec
enter
pop
rcrb
mov
aaa
pop
adc
mov
add
je
loop
cmc
clc
pusha
mov
mov
xchg
adc
jmp
inc
and
mov
cmp
push
jecxz
cwtl
sbb
pop
out
and
add
test
cmpsl
aas
mov
movsb
popa
adc
loopne
mov
sbb
mov
push
xor
jle
push
add
mov
dec
pop
xlat
sub
cmp
outsl
test
mov
arpl
mov
sbb
mov
add
imul
enter
jl
out
adc
jb
iret
and
pop
pop
xor
add
in
imul
mov
jnp
fidivrs
jmp
aad
mov
pop
mov
sbb
sub
sahf
mov
dec
or
out
lret
movsb
scas
fidivrs
mov
scas
cmpsb
mov
loopne
data16
add
into
xor
ja
mov
in
lret
fwait
cmp
clc
add
or
mov
mov
andb
gs
and
fiaddl
and
cmpsb
imul
leave
ror
ds
mov
sub
mov
adc
jae
lods
loopne
inc
jb
adc
dec
inc
add
aaa
sub
mov
dec
test
gs
xor
repz
and
xor
xchg
fcmove
cmc
cmp
clc
movsb
and
xchg
iret
mov
jb
cld
sbb
ficoms
jo
push
enter
fnsave
fstps
mov
mov
sub
mov
sbb
add
or
outsb
add
adc
mov
and
lods
aas
mov
popa
clc
cmp
hlt
das
ror
sahf
lds
outsb
and
add
push
xchg
mov
outsl
fdivrs
sub
push
and
push
adc
cmpsb
adc
dec
and
js
cmp
scas
pop
int
adc
call
sbb
xchg
dec
add
push
sub
pusha
mov
add
mov
pop
flds
imul
adc
cmp
lcall
inc
pop
fld
frstor
iret
sbb
out
add
xor
inc
mov
jne
test
pop
inc
cld
or
mov
add
pop
jae
add
cmp
movsl
test
and
jge
xor
add
lea
addr16
inc
or
cmp
xlat
outsb
cmp
imul
jp
fidivrs
repz
das
nop
add
sbb
adc
push
mov
sbb
sub
daa
ficomps
cmp
stos
loopne
add
add
mov
int3
sub
xor
repnz
or
movlhps
call
repz
mov
sub
fisttps
jae
mov
add
and
sub
nop
sbb
notb
imul
jno
and
pusha
cmpsb
mov
mov
xchg
xchg
out
add
jg
int
stc
jae
sub
loop
mov
das
ja
mov
xor
cli
mov
dec
jbe
add
ret
stc
es
pop
loop
dec
mov
popl
dec
jno
lds
xor
mov
xor
pop
adc
add
neg
sub
inc
push
and
cmpsl
lods
inc
movsl
shl
sbb
filds
out
adc
outsb
pop
sbb
add
sub
rorb
xor
push
mov
test
dec
mov
add
xor
pop
cld
ret
xor
notl
jo
test
add
or
push
add
int3
fidivrs
add
pop
imul
or
cmpsl
mov
or
repz
mov
das
lea
idivl
xor
adc
test
movsl
jge
enter
xor
popf
testl
pop
mov
hlt
test
rorb
fistl
je
mov
push
mov
jo
jbe
mov
fidivs
data16
test
mov
dec
loope
mov
enter
mov
in
rolb
in
push
fdivr
out
lds
out
pop
dec
xor
enter
inc
jmp
stos
ret
in
mov
push
outsl
imul
daa
dec
fidivrs
shl
jmp
add
ret
xchg
mov
rcl
imul
cmc
bound
sub
out
cwtl
and
movsb
das
cmpsl
daa
roll
push
jecxz
add
mov
mov
loope
sub
mov
xor
enter
lahf
inc
push
mov
and
mov
mov
jno
fsubrs
sbb
rolb
cmc
jbe
sbb
mov
arpl
dec
xchg
or
into
pop
pop
sub
mov
int3
fisubs
inc
mov
icebp
xor
loopne
dec
pop
jbe
stc
xchg
jecxz
ficompl
pop
fisttpl
xor
loopne
inc
pop
xor
clc
pop
cmp
pop
stc
aas
imul
mov
into
lahf
dec
pop
sbb
ds
mov
nop
mov
pop
push
or
rcll
add
inc
jg
je
mov
iret
outsb
push
xchg
add
cmp
and
rcrb
and
ds
push
daa
push
sub
push
lret
nop
repz
add
jae
out
out
sub
add
fstpl
add
dec
sub
xchg
xchg
data16
fs
nop
cmc
jecxz
add
pusha
xor
in
daa
dec
add
and
xchg
or
cs
movsl
mov
cmpsl
push
dec
sbb
dec
adc
inc
add
out
fdivrs
int3
lret
cmp
inc
mov
push
push
add
aas
and
fimull
xchg
adc
add
add
ficompl
mov
inc
mov
add
sub
mov
push
cmp
or
jae
mov
incl
incb
jl
jo
push
pop
add
popa
and
adc
push
or
add
lds
sub
push
dec
jne
filds
rcr
std
es
xlat
or
clc
leave
sbb
outsl
mov
add
fisubs
push
adc
add
subl
enter
nop
pop
push
mov
adc
xchg
push
dec
ss
cmp
call
les
adc
mov
adc
je
aad
push
lds
cmc
sbb
xor
push
lret
xor
aaa
xchg
dec
adc
enter
movsb
je
clc
xorl
add
mov
mov
add
cmp
in
arpl
and
aas
xor
shlb
add
push
pusha
sbb
sbb
repnz
cltd
or
xor
aas
xchg
in
lds
int3
push
scas
jne
sub
das
and
add
pop
and
mov
lret
add
jnp
ficoms
inc
fs
mov
pop
xor
inc
mov
xor
mov
loop
lds
lods
xchg
loopne
jno
xchg
and
pop
xchg
cmp
mov
inc
insl
adc
aas
ja
icebp
sbb
roll
xor
push
jmp
mov
mov
out
cmp
enter
sbb
add
xchg
xchg
and
add
sbb
test
or
sub
xchg
outsl
jb
arpl
cmp
add
push
pop
sub
jnp
dec
sbb
add
add
and
sub
sbb
add
jl
test
test
pop
xchg
push
outsl
in
add
jl
mov
lcall
push
jb
frstor
xchg
insb
dec
sbb
add
and
imul
aas
jp
inc
pop
xchg
call
xlat
mov
subb
and
aaa
push
repz
cwtl
mov
mov
push
dec
jl,pt
int
ja
fcom
dec
addr16
dec
push
or
scas
mov
inc
fisubrs
bound
ja
push
popa
or
adc
jmp
scas
popf
mov
loope
mov
jbe
adc
add
cmp
test
loope
and
icebp
loop
insb
pop
mov
jmp
pop
imul
aaa
movsl
xor
shlb
push
hlt
mov
xchg
mov
cltd
xor
push
mov
push
test
dec
inc
in
in
jecxz
add
pop
add
or
stc
in
and
test
out
pop
fstl
lea
std
dec
add
in
xor
mov
jp
iret
lret
or
add
daa
insl
and
xor
arpl
inc
jge
jbe
js
fsubrs
icebp
or
adc
fsubrl
xor
or
xor
das
sub
iret
pop
inc
leave
add
out
pushaw
mov
mov
sti
pop
jge
mov
add
in
inc
and
add
ja
sbb
xor
pop
cltd
data16
sbb
and
pop
dec
loopne
mov
and
mov
or
das
shll
sub
sub
fsubl
sub
pop
push
rorb
add
push
pop
mov
jle
idiv
jno
stc
pop
fistpl
out
mov
add
push
repz
cmp
mov
add
gs
repnz
adc
cwtl
insl
pusha
mov
pop
cmc
clc
bound
and
lahf
imul
mov
add
ss
jle
rcrb
cmc
sbb
add
arpl
out
pop
sub
mov
ret
xor
pop
pop
stos
fcoml
add
mov
jnp
push
pop
sbb
movsb
adc
subl
adc
or
fiaddl
outsl
test
add
lret
js
push
out
call
es
and
aaa
cwtl
xchg
xor
mov
pop
mov
in
xor
xor
add
push
outsb
out
pushf
jb
in
dec
add
inc
xchg
push
fimull
push
test
outsl
stos
pop
leave
sub
adc
loopne
dec
or
cmp
out
adc
jle
sbb
fisubl
leave
outsb
xchg
mov
les
add
loop
loopne
out
outsb
inc
xor
sub
add
add
cld
in
and
addr16
test
pop
lds
add
add
xor
cmp
cltd
lret
xchg
xchg
sub
sbb
xor
xchg
ss
int3
bnd
lds
mov
rcrb
lret
lret
jle
add
std
fcoms
pop
scas
shll
aaa
repnz
add
ja
xchg
and
insl
cmp
stos
xor
cli
jl
sub
es
aas
in
sbb
and
xor
testl
gs
mov
fcmove
xor
xor
sub
fnstenv
push
mov
cmc
lods
xchg
add
out
aas
adc
loope
xor
inc
add
add
cmp
outsl
pop
inc
add
cmc
sub
push
xchg
ret
add
mov
or
imul
add
mov
pop
jo
adc
cmpsb
iret
and
sub
xchg
xchg
mov
out
cmp
jl
and
pop
shll
mov
inc
ror
mov
push
lret
sub
jno
data16
out
aas
repnz
add
test
movsb
adc
sbb
arpl
ret
jno
mov
add
dec
push
imul
lods
frstor
shlb
es
addb
out
jno
add
mov
lock
add
imul
sbb
pop
inc
aam
mov
mov
andl
out
mov
xor
add
into
pop
lods
aaa
out
inc
pop
mov
dec
je
sub
jp
outsb
lock
mov
ds
inc
cmpsl
popf
adc
push
ja
push
add
test
lahf
cmp
pop
or
icebp
xchg
sbbl
sbb
cmc
cmpsl
stos
scas
mov
and
les
mov
or
dec
xlat
rorl
js
jae
data16
testb
mov
lahf
push
adc
inc
daa
mov
in
fcmovb
xchg
cmpsb
sbb
icebp
sbb
push
mov
mov
xor
enter
xchg
inc
sub
leave
push
add
aas
int3
das
add
adcb
add
sub
and
jbe
push
push
sbbl
fildl
popa
sbb
scas
pop
ret
mov
cmp
lret
push
mov
xor
cmp
xchg
pop
add
lock
or
add
outsb
pop
movsb
xchg
inc
cmp
in
rol
test
sbb
mov
add
push
in
pop
adc
add
repnz
xor
cmp
add
fldt
in
mov
pop
mov
cs
mov
das
test
pop
sub
push
inc
sub
xorb
cmp
push
in
outsb
lret
push
dec
push
add
cmpsb
and
cmp
out
dec
movsb
and
xchg
pop
rol
mov
scas
push
push
loope
or
add
adc
jne
inc
cmc
cmp
add
jb
xor
mov
aaa
fldcw
inc
inc
fdivs
mov
and
push
mov
xor
cmp
inc
aas
cmp
or
jb
cmovl
or
and
push
and
cmp
dec
add
mov
daa
or
jp
xchg
cmp
add
add
jb
adc
pop
and
cs
mov
and
cmp
cmp
mov
into
fisubs
fnstcw
and
sahf
cmp
push
cmp
stos
fidivrs
ds
sub
push
outsl
add
sub
mov
adc
and
mov
cmpsb
add
xor
add
xlat
movsb
push
add
xor
cmpsl
or
pop
stc
scas
ficoms
add
pop
cmp
add
sub
fisttpll
add
dec
stos
push
ficompl
mov
rcrb
adc
in
repz
sub
xor
adc
ljmp
int3
add
or
xchg
add
cmp
and
in
out
adc
lret
mov
shrl
loop
inc
mov
push
add
imul
in
sbb
rolb
push
pop
mov
cmp
inc
cltd
cltd
xor
sbb
push
fdivs
xchg
outsl
movsl
std
mov
daa
sub
push
cmp
push
cltd
add
sub
sarb
push
push
and
xor
jge
jmp
divl
call
outsb
js
add
adc
gs
lock
cmpsl
fiaddl
popf
jo
and
inc
pop
jno
popa
ljmp
mov
add
scas
lret
sahf
fs
jb
int3
adc
pop
hlt
rcrb
call
sbb
or
and
pop
add
mov
or
movl
outsb
xchg
out
cld
add
insb
popf
cmpsb
jbe
add
jnp
pushf
fnstsw
sbb
inc
add
mov
ja
jne
sarw
shll
add
sahf
dec
int
in
add
push
mov
jecxz
imul
inc
fisttpll
sub
gs
xchg
ret
dec
ja
andl
inc
out
xchg
lcall
xchg
and
adc
cmp
popa
dec
fimull
push
imul
mov
add
jne
data16
jae
aaa
sbb
cmpsl
cltd
loop
call
iret
pop
int3
push
mov
ffreep
xchg
imul
xchg
add
pop
fcomps
xor
add
cmpsb
dec
push
or
mov
push
adc
or
fidivrs
mov
stos
jo
xlat
rorb
mov
xor
mov
movsb
add
sub
jle
sbb
cmpsb
cmc
enter
fildll
loop
test
pop
dec
adc
test
xchg
cltd
mov
jns
mov
pop
lea
jo
clc
aam
fdivs
es
or
cmp
nop
pop
int
xchg
jb
sub
sbb
mov
add
jp
sbb
and
xchg
test
or
addb
or
add
bound
int3
jl
movb
jp
stc
add
xchg
add
lea
push
fsubs
xor
dec
push
or
aam
fcomps
into
jno
mov
cmp
movsl
js
outsl
dec
mov
add
fwait
andl
adc
std
idivl
iret
imul
mov
dec
cmpsl
pushf
mov
fisubrs
pop
adc
cmc
ja
mov
repnz
add
cmc
cmp
outsl
pop
mov
lahf
xor
loopne
scas
mov
or
mov
adc
mov
add
push
pop
fsubrs
xchg
pop
sub
or
xchg
mov
cmpsb
sbb
das
add
enter
sbb
ficoms
cld
pusha
xor
push
jg
xchg
lods
lea
and
jp
nop
daa
mov
ret
lret
adc
add
iret
out
cmp
add
fldl
in
jb
lret
add
dec
add
push
pusha
pop
lods
and
add
push
aad
movb
pop
inc
movsb
dec
dec
and
fdiv
xor
xor
imul
cld
add
add
cmp
dec
cmpsl
insl
js
test
cwtl
mov
and
or
xor
pop
mov
push
cmp
and
rcr
jl
inc
js
mov
mov
push
push
jg
dec
leave
xchg
test
xchg
outsl
sbb
xor
xor
cmpsb
dec
stos
out
mov
fbld
stos
int
fdivrs
mov
xor
mov
add
pop
mov
pop
adc
fistpl
mov
es
mov
mov
mov
add
imul
adc
jns
cmp
inc
in
sbb
addb
pop
add
or
shlb
cltd
mov
jge
lds
sbb
dec
jg
mov
mov
mov
lods
sbb
sbb
add
add
aaa
mov
xor
fcomps
mov
cmp
adc
jl
inc
fsub
pushf
aas
sbb
icebp
sbb
cltd
push
mov
add
dec
and
outsl
pushl
fidivrl
adc
jmp
pushf
aad
xchg
daa
filds
xor
mov
cmpsl
iret
nop
inc
and
add
cmpl
dec
sbb
fistl
out
add
movsl
jo
add
out
lcall
sub
inc
lods
lahf
adc
std
and
push
jne
sbb
cltd
xchg
push
sbb
outsl
push
negl
xor
push
outsb
int
lods
mov
add
lret
pop
test
add
or
cwtl
pusha
pop
inc
mov
mov
push
aaa
or
push
ja
fidivrs
dec
sahf
mov
add
mov
loop
jnp
mov
std
sub
push
fmulp
mov
and
add
ret
jo
sbb
movb
inc
cmpsb
rorb
std
mov
repnz
push
cmp
xor
adc
cmp
add
loopne
cwtl
pusha
lock
add
and
and
and
and
add
incl
popa
pop
sub
mov
es
rol
sbb
cmp
adc
roll
xchg
push
stos
data16
jb
jge
mov
jne
push
jo
inc
add
mov
mov
pop
mov
fs
push
xor
push
xor
sbb
inc
lahf
roll
mov
das
insl
add
repz
jb
outsl
mov
mov
adc
lock
in
mov
mov
xor
fucomp
mov
test
mov
cmp
idiv
stos
lods
add
mov
ds
ficomps
add
inc
arpl
add
jae
add
data16
and
dec
add
push
mov
push
push
sbb
adc
aad
xor
push
es
loopne
xor
out
jns
clc
inc
mov
and
std
add
fsubrs
leave
and
clc
dec
fmul
je
xor
mov
sub
fwait
sbb
aaa
dec
or
inc
sub
mov
aam
xor
mov
add
inc
jle
mov
movb
movsb
in
fsts
mov
lcall
mov
cmp
fdivs
cmpsb
aam
mov
loopne
pop
mov
out
mov
into
adc
sbb
pop
mov
mov
adcl
add
andb
mov
jp
dec
and
nop
mov
outsb
xor
lods
and
es
cmp
add
mov
jb
repnz
leave
in
mov
xchg
xor
mov
or
push
je
add
push
in
pop
inc
push
adc
mov
adc
out
ja
xlat
cmp
outsb
icebp
pop
pop
add
ret
push
dec
ds
cmc
jge
mov
mov
xchg
add
or
sub
sbb
push
mov
dec
into
dec
mov
les
daa
or
fisubs
rolb
cli
jmp
in
or
inc
inc
bound
popa
ret
cmpsb
add
mov
xchg
out
jbe
adc
add
jb
imul
and
add
sbb
and
mov
pop
mov
imul
dec
sbb
int
and
sti
adc
push
inc
fmuls
adc
adc
neg
jo
shrb
and
add
or
cmp
xchg
jb
add
mov
xor
or
jge
in
adc
jp
xchg
sbb
pop
aaa
jbe
or
call
cmpsb
sub
sub
push
cmp
mov
arpl
test
push
and
push
mov
push
xor
mov
jb
test
xor
add
inc
pop
sub
test
lds
pop
jb
adc
and
pop
stos
sbb
pop
jp,pn
shrb
jb
fistpl
inc
cmp
add
stos
dec
mov
pop
fmull
jb
out
add
ja
js
in
sub
and
mov
cmp
aaa
xor
mov
adc
icebp
cmp
mov
pusha
int
xor
adc
jnp
aaa
mov
stos
imul
xchg
mov
or
push
mov
and
mov
mov
or
cmp
xor
popa
aas
pop
push
cmp
push
fcomp
mov
cmpsl
adc
add
scas
daa
test
inc
xchg
add
in
clc
push
mov
push
incl
and
or
pop
mov
xor
shlb
fnstenv
mov
adc
leave
jnp
repnz
sub
or
mov
arpl
cwtl
inc
push
mov
cmp
push
pop
or
sub
push
mov
add
pop
shl
adc
jb
out
aas
mov
dec
jno
icebp
pop
popa
cs
cmp
mov
and
mov
test
rcrl
adc
inc
cwtl
sbb
jge
add
cmpsl
inc
add
xor
rcr
xor
push
mov
test
add
scas
fdivrl
add
adc
dec
mov
rorb
mov
or
fiaddl
xchg
mov
stc
pop
add
call
sub
push
cmpsl
test
xlat
jnp
mov
stc
jbe
mov
and
add
mov
and
mov
push
mov
roll
cmp
xlat
jl
rcll
adc
imul
dec
push
scas
out
add
mov
sbb
out
jb
add
aas
mov
les
sahf
sub
pop
ljmp
xchg
cltd
cmp
popf
mov
fisubrl
or
out
and
xor
jne
jp
mov
dec
jnp
add
sub
es
push
outsb
arpl
add
lock
lahf
inc
das
xor
insl
adc
adc
insb
add
pusha
mov
psadbw
test
into
add
or
sbb
and
mov
pop
jo
lds
pop
sbbb
mov
pop
xor
fdivrl
push
std
leave
adc
adc
add
lret
mov
outsl
xor
add
clc
jmp
in
scas
pop
aam
daa
jne
and
sub
mov
xor
or
leave
aas
repz
add
hlt
lret
xchg
test
xor
movsb
mov
imulb
adc
in
sbb
inc
cmp
xlat
push
sahf
movsl
ljmp
add
push
dec
pop
add
lret
out
movsb
and
jo
push
mov
icebp
pop
fiadds
cmp
int3
push
sub
add
lock
lcall
cmp
jg
stos
into
in
adc
sub
push
push
sbbb
pop
pop
ljmp
add
sub
xchg
mov
xchg
and
mov
sbb
mov
cmp
fimuls
mov
xchg
mov
cmc
jbe
add
sbb
inc
dec
jge
fsubs
push
stos
imul
jb
cmp
xlat
dec
add
sbb
sbb
mov
xor
pop
ss
cs
stos
jle
xchg
lcall
into
lret
or
lds
jg
flds
xchg
imul
and
and
jecxz
lds
xchg
mov
mov
test
and
add
jp
or
xchg
fisubs
sub
into
or
fidivs
adc
subb
jo
or
mov
test
mov
mov
push
sbb
jnp
xor
mov
and
out
xchg
adc
imul
pop
test
mov
add
nop
and
and
cs
add
dec
dec
adc
add
test
sbb
std
mov
mov
push
imul
mov
or
fiaddl
stc
add
mov
sub
jb
pop
pop
sub
ret
fldenv
movl
pop
pop
inc
adc
jg
lods
ret
inc
aad
sub
sbb
enter
and
xlat
fistpl
mov
and
fdivs
or
push
sub
dec
mov
insl
repz
cmp
xor
add
imul
mov
push
sbb
adc
pusha
push
sbb
jnp
sub
dec
xlat
mov
or
sbb
cmpsb
cmp
stos
jle
stc
arpl
sahf
sub
test
sbb
add
pop
mov
add
pop
push
xchg
mov
sub
loopne
mov
mov
xor
mov
jno
or
pop
jns
dec
push
sbb
das
ljmp
test
add
and
les
jae
or
xchg
into
jp
enter
dec
inc
dec
arpl
xlat
jns
adcl
and
mov
cmpsl
add
and
and
and
mov
stos
loop
pop
xor
dec
cmpsb
add
adc
mov
movsl
out
xchg
lea
pop
les
inc
adc
cltd
adc
ja
fildll
adc
mov
push
rcrb
or
aas
jb
mov
or
dec
push
pop
fsts
stc
int3
xlat
je
stc
es
js
inc
jp
add
cmp
inc
xorl
xor
icebp
mull
add
js
sub
inc
fisubl
shrb
ljmp
jecxz
mov
or
xor
mov
and
mov
inc
xorb
lea
mov
out
aas
gs
push
cmp
shrb
cmp
cmp
add
jnp
arpl
adc
fcmovu
sbb
mov
mov
adc
and
or
sub
jle
test
cld
dec
stos
pop
push
add
cmp
aaa
sahf
fisttps
jbe
jle
loopne
test
xor
push
dec
lret
mov
int3
test
add
mov
jbe
add
ret
leave
xlat
or
mov
xchg
bound
les
mov
dec
xor
outsb
into
into
xor
aas
sub
maskmovq
mull
jns
daa
cltd
mov
jmp
jo
pop
add
push
stos
mov
cmp
lret
shlb
push
stos
sub
sbbl
sbb
push
and
xlat
jp
mov
sbb
add
dec
loope
add
push
testb
lea
lods
add
pop
push
lock
inc
dec
or
adc
add
mov
mov
and
hlt
pop
rclb
lret
fbstp
fistpl
push
dec
cmpsb
pop
jno
sub
movsl
push
es
push
adc
cmp
call
mov
push
jp
repz
xchg
ss
add
add
call
out
dec
xchg
mov
mov
sub
negl
add
ret
dec
data16
das
mov
int3
mov
mov
pop
ja
cmp
sbb
push
add
aas
in
aaa
test
sbb
push
fsubp
push
data16
test
imul
daa
ds
jg
jae
cmp
xchg
movsb
rcrl
adc
mov
add
ficoms
shll
pop
lcall
push
arpl
add
and
jbe
nop
sub
mov
jns
fwait
add
insb
stc
and
lea
pop
mov
push
and
ret
and
xlat
or
shlb
xor
cmpsb
cld
add
in
adc
cmp
and
roll
sbb
mov
mov
add
sbb
stos
and
sbb
loope
pop
add
fstl
and
clc
add
adc
dec
sbb
cwtl
mov
ljmp
mov
xchg
jmp
mov
outsl
mov
lods
aaa
dec
and
push
mov
mov
xor
cmp
mov
push
outsb
inc
add
mov
sub
xchg
sub
add
loopne
xor
addr16
in
repz
jmp
and
outsl
fstps
push
fstpt
or
fcmove
push
mov
cmp
adc
je
sbb
imul
fsubs
movsb
shlb
and
jg
ljmp
mov
sbb
repz
sbb
mov
mov
dec
jnp
push
add
add
or
es
roll
sbb
cmp
sbb
mov
xchg
ror
jbe
and
dec
add
pop
xor
or
rcrb
std
pop
imul
ror
or
inc
lcall
cmpsb
xor
or
jo
mov
sbb
xchg
mov
adc
sarl
cmp
xor
pusha
and
jle
or
xchg
adc
mov
mov
mov
sbbl
jp
mov
decl
xor
mov
movsl
pop
fdivrs
mov
xor
arpl
test
adc
jb
movl
jle
mov
jo
mov
and
jle
sbb
or
mov
mov
xchg
movsl
sub
add
mov
and
adc
test
mov
mov
js
mov
mov
and
fcompl
xor
or
adc
xor
mov
add
cmpb
xchg
adc
popf
loope
xchg
pop
cwtl
cmp
and
cmpsb
add
add
adc
jp
jo
or
cmp
mov
jle
mov
jo
mov
ds
daa
test
mov
add
cmp
pop
inc
pop
jno
cs
adc
mov
fstl
sbb
adc
mov
adc
mov
add
ja
lock
frstor
idivl
jle
mov
sbb
ss
dec
mov
xor
bound
jae
add
cmp
add
lock
jo
sbb
out
xchg
cwtl
or
add
fiaddl
add
sub
add
push
lret
popa
push
cmp
add
or
jmp
loope
test
daa
iret
add
out
xchg
cmp
cmp
add
rorl
add
mov
pop
test
inc
fstpl
jnp
add
aam
test
cmp
scas
push
xchg
xchg
pop
rcl
add
test
ss
pop
and
fisubrs
scas
bound
inc
sub
out
jbe
and
add
loop
jmp
imul
sbb
rcrl
pop
popa
fadds
sub
push
cltd
jp
jae
jb
cld
repnz
and
xchg
jno
add
mov
fiaddl
add
and
scas
pop
lds
lahf
dec
adc
in
loope
dec
add
add
in
and
push
jmp
stos
lods
xor
mov
test
dec
sub
shll
cmp
das
loopne
aaa
pushf
fsub
mov
add
stos
les
int3
rol
ret
mov
pand
inc
pop
sub
movsb
jecxz
sbb
cmp
push
adc
cmp
arpl
ljmp
jns
pop
inc
mov
test
insl
cltd
out
iret
addr16
dec
adc
jns
popl
adc
enter
out
or
aaa
ficomps
xlat
cmp
add
loope
pop
je
sub
add
jmp
outsb
jg
or
add
dec
test
cmc
jae
fidivrs
mov
push
cwtl
sub
add
and
add
addr16
icebp
xchg
imul
sti
dec
inc
rolb
add
fisubrl
cs
mov
sbbb
iret
and
cmp
jmp
in
ja
xchg
pop
dec
pop
mov
cmpsl
mov
or
sbb
aaa
xchg
jnp
lods
lea
dec
cmp
xor
sub
fwait
dec
lea
repnz
sbb
sbb
xchg
cs
cmp
daa
cld
add
scas
fistps
sbb
leave
test
add
or
repz
cwtl
mov
loop
mov
jg
sub
add
test
fdivp
js
add
and
aad
lcall
mov
or
or
sti
xchg
cmc
xor
mov
nop
rolb
dec
mov
lods
pop
bound
push
mov
mov
mov
pop
xor
arpl
jns
rcr
jmp
push
lret
loopne
xchg
jo
cmp
scas
push
fisubrs
into
jg
jns
cmp
mov
testl
jmp
bound
add
in
or
ret
outsl
cmc
sub
mov
xor
add
ja
ljmp
mov
sub
xor
pop
call
fistps
pop
fidivs
add
bound
incl
repnz
outsb
mov
jge
imul
xchg
mov
pop
fsts
and
nop
add
test
std
mov
mov
lcall
push
mov
add
xorl
lahf
iret
cmp
xchg
mov
ja
mov
adc
push
adc
ss
rorb
cltd
jl
cwtl
xchg
mov
pop
in
adc
jecxz
in
mov
push
dec
test
lahf
ret
fwait
mov
mov
rcl
sub
xorb
adc
inc
out
into
cmp
ljmp
dec
cmc
fwait
add
sbb
cmpb
fildl
movsb
loope
repz
lcall
lret
inc
roll
mov
dec
push
xchg
shll
cmp
push
cmp
adc
popa
repz
mov
adc
pop
dec
sbb
stc
imul
mov
mov
mov
pusha
xchg
ficomps
lret
mov
pop
xorl
inc
pop
lret
adc
push
fwait
lret
ret
shll
lds
jb
inc
sub
sub
fisttps
aam
pop
lret
aam
jnp
aad
lds
push
pop
mov
cli
xchg
lea
pusha
mov
lret
push
stos
shll
ror
mov
sbb
pop
pop
bound
mov
in
stos
sbb
stos
fwait
push
add
adc
pop
inc
mov
fdivr
mov
test
rorl
rorb
mov
sbbl
mov
cmpsb
or
push
jp
xor
fisubl
sbb
ror
xorb
push
gs
fwait
arpl
stos
mov
sbb
jno
sti
rol
sti
push
push
lret
inc
shr
mov
pop
repz
jmp
nop
stos
bound
jns
push
dec
jne
in
jb
lret
jae
sahf
std
pusha
bound
movsl
icebp
xlat
mov
xchg
mov
ljmp
fwait
add
sahf
sub
mov
pop
popf
std
fdivrs
push
sti
stos
adc
ret
sub
inc
pusha
jnp
loop
sub
pop
movb
mov
js
pushf
xchg
mov
push
jge
and
mov
fmulp
dec
rcr
mov
dec
pushf
in
mov
out
lret
fnstcw
test
std
pusha
lcall
loop
adc
pop
pminsw
rorb
mov
sbb
es
xchg
ljmp
mov
aam
push
or
js
mov
mov
insb
sbb
pop
movsb
xchg
xchg
ret
addb
push
jge
into
jecxz
mov
cltd
lret
sti
xchg
arpl
cmp
ret
lcall
pop
pop
and
test
orl
jl
mov
rclb
pop
stc
int
pusha
orl
pop
or
js
xchg
lret
repz
sti
stos
bnd
adc
mov
xchg
aad
repnz
dec
sbb
or
fsubs
es
pop
jp
mov
sbb
push
xor
mov
scas
xor
cmp
add
jb
int3
shrl
testb
or
push
dec
pop
insl
movsb
fdivs
or
cmp
aad
pop
fs
fdivp
or
xlat
dec
jl
sbb
sbb
jae
gs
xor
ret
rorb
out
mov
push
test
in
insl
pop
cli
xor
push
add
fisttpll
or
sbb
mov
adc
push
mov
push
addb
xchg
push
lock
inc
adc
aaa
jecxz
mov
ret
xlat
loope
pop
add
add
push
and
cld
into
xor
add
push
dec
outsl
add
adc
iret
push
fidivs
add
outsl
arpl
dec
add
stc
mov
insb
mov
push
arpl
ffreep
xchg
pop
popf
sbb
es
test
jb
ret
movsl
pop
dec
int
stc
cmpl
jmp
push
add
rcrl
cmc
cmp
xor
in
inc
into
sbb
push
sub
dec
ret
mov
imul
insb
sub
pop
cltd
xchg
add
jl
enter
lods
ret
add
xchg
dec
add
out
jg
xchg
outsl
add
pop
or
sbb
mov
add
cs
popa
pop
mov
mov
scas
gs
and
push
fsubr
cld
add
mov
or
or
pop
ficompl
pop
pop
lcall
insb
mov
call
iret
cmp
xlat
jne
mov
or
xchg
insl
mov
sub
rclb
push
fistps
mov
mov
mov
sub
sti
push
inc
and
cltd
or
dec
sbb
sub
ret
sahf
pop
xchg
dec
push
ficomps
pop
je
or
in
shlb
cmpsb
sbb
movsl
xchg
mov
add
push
add
lea
sbb
or
js
xchg
data16
add
fs
mov
and
and
imul
cmpsb
out
es
shr
mov
push
dec
or
cmpsl
call
sbb
pop
inc
mov
add
rcrb
leave
pop
add
mov
push
out
fisubs
popa
push
cmpsl
or
stc
leave
adc
mov
shrb
pop
add
imulb
out
inc
fsubp
insb
fisubrs
arpl
or
push
add
xchg
inc
fs
or
jae
out
add
gs
popa
add
add
jb
jl
cmpsb
and
mov
mov
cmpsl
add
push
push
sbbl
je
sbb
dec
mov
adc
add
pop
test
movsl
cmp
or
pop
xor
fiaddl
stc
add
fiadds
jecxz
sub
nop
imulb
sbb
or
cmp
jnp
mov
es
sub
jg
add
lods
and
jne
push
cmp
add
cmpsb
adc
or
xor
pop
arpl
cld
lahf
cmp
jns
inc
dec
push
dec
addr16
rcrl
xor
adc
add
insl
or
xchg
or
add
movsb
jg
sahf
mov
cltd
gs
in
or
sub
scas
inc
psrad
jcxz
lea
inc
push
enter
jp
rolb
mov
adc
mov
push
jge
and
enter
add
fucom
or
mov
add
sbb
pop
add
xchg
mov
insl
lcall
add
test
jno
fimuls
lss
es
xchg
dec
add
push
fs
push
cwtl
or
fistl
add
mov
arpl
mov
icebp
xchg
and
adc
fdivrs
outsb
js
and
mov
in
xor
push
das
clc
mov
pushf
sbb
ret
les
gs
xor
vsqrtss
jb
sti
jl
pop
sub
frstor
push
cld
xchg
xor
mov
sbb
mov
pop
jae
movsl
pop
les
jo
push
test
les
lcall
addr16
sbb
lock
jne
movl
fyl2x
rorb
sub
add
cltd
or
scas
jae
cmpsl
stos
cmp
adc
cmpsl
xor
out
push
cmpsb
loopne
sbbl
xor
std
xor
sbb
and
scas
daa
out
aas
add
pusha
mov
fsubp
dec
jge
inc
popa
and
or
aaa
jne
pop
jbe
fidivrs
ja
mov
jns
divpd
jmp
add
or
stos
or
iret
in
pop
arpl
jge
mov
lahf
xlat
cld
in
popa
sbb
fdivl
xchg
movsb
lret
mov
sti
enter
push
fwait
pusha
cmpsb
jbe
add
or
adc
lret
lock
ficomps
inc
cltd
add
pop
push
loope
scas
and
fcoml
imul
movl
enter
pop
ret
cmp
dec
jo
aad
push
scas
xlat
mov
shrb
ja
dec
stos
cmp
fsubl
push
add
mov
add
xchg
aam
sub
sbb
or
lahf
adc
insb
pop
clc
mov
mov
push
arpl
jecxz
dec
jb
mov
cmp
andb
jp
add
sbb
das
out
adc
push
pop
iret
mov
push
test
add
jb
jmp
divb
add
jmp
mov
jnp
pop
adcl
rorl
push
mov
add
and
xlat
add
push
es
push
jle
sbb
add
roll
mov
aaa
lea
in
add
data16
jp
mov
repnz
sub
add
xor
and
add
cld
push
jnp
mov
das
mov
mov
xorl
mov
cmpsl
or
nop
mov
fsin
pop
pop
cld
adcl
jae
mov
leave
stc
lret
mov
mov
mov
jne
icebp
and
sbb
cmp
adc
lods
jb
fnstenv
xchg
cmp
outsl
pop
lahf
add
cmpsl
or
out
js
mov
lldt
xor
cmpsl
add
push
cmp
pop
popa
xlat
xchg
xorb
push
mov
fcoms
fimull
jo
xchg
sbb
sbb
imul
rolb
outsl
xor
imul
in
mov
lahf
adc
add
mov
out
mov
add
xchg
scas
pop
bound
jnp
add
je
mov
xor
adc
adc
xchg
rcrb
xor
or
dec
add
sqrtps
lds
mov
fadd
repnz
sub
fisubrs
add
jl
xchg
loope
fdivrp
and
push
jns
mov
pop
add
dec
not
leave
inc
cmp
fsubr
ss
lea
sbb
jle
inc
rcll
or
dec
pusha
imul
mov
sbb
adc
movsb
push
jp
fidivrs
test
and
xor
jg
jmp
inc
loopne
sbb
cmp
es
shlb
out
sub
and
jno
add
xlat
rcll
test
inc
sbb
lea
daa
and
add
icebp
adc
xlat
inc
jne
push
stc
dec
and
pusha
mov
cmp
add
add
add
ds
cli
sub
mov
aad
fucomip
and
or
aas
testb
pop
call
adc
fucom
pop
mov
dec
jnp
imul
mov
adc
scas
fstl
adc
testb
and
mov
sbb
and
push
cwtl
cmp
inc
dec
lea
jne
rolb
cmp
add
sub
dec
mov
pop
mov
mov
hlt
xor
in
lret
fimull
iret
mov
jae
rcll
stos
es
mov
lahf
jl
cmc
hlt
ja
pushf
xchg
adc
xor
lea
data16
mov
push
cmp
cltd
lret
stos
addb
jns
sbb
gs
les
cmpsl
stc
cmp
cmpsb
lea
dec
add
sub
imul
mov
lods
leave
les
imul
roll
sbb
cli
jg
pop
bound
mov
test
in
push
loopne
add
pushf
cs
fistpll
imul
adcb
movsl
pop
adc
or
ror
insb
nop
add
cli
popf
cwtl
cwtl
adc
daa
push
leave
cmpsb
pop
xchg
ds
faddl
pop
aas
ficompl
pop
add
outsl
cld
decb
or
cmp
pop
inc
scas
sbb
cmp
mov
xor
ds
imul
jmp
add
xchg
mov
add
inc
jg
and
add
ljmp
push
xor
scas
add
mov
adc
out
xchg
xchg
jo
fcoms
int
or
jp
add
cmp
cmp
xor
jg
es
inc
fwait
sub
mov
jbe
xor
push
adc
and
cmp
rol
insb
pusha
pop
xlat
int3
inc
jp
jns
mov
mov
mov
mov
aaa
clc
pushf
jb
imulb
stc
cli
imul
cmp
xchg
xor
aas
add
jno
dec
pusha
fcoms
xchg
and
and
stc
lret
sub
ljmp
jl
cmp
xor
out
push
xor
sahf
inc
push
sub
ret
test
xchg
movsl
add
adc
xor
and
addr16
call
push
fidivrs
nop
fildll
test
fmull
lahf
xchg
stos
daa
jb
aaa
fisubs
mov
inc
mov
dec
jmp
into
int
fwait
mov
add
jecxz
cld
xchg
dec
jl
rcrl
stos
scas
cmpsb
ficoml
insl
or
mov
push
add
sbb
inc
pop
test
jecxz
cmp
loopne
jge
fistpl
sub
mov
mov
in
cmpsb
pop
add
push
sub
mov
cld
add
clc
in
or
xor
std
andl
sbb
add
push
cmpsl
adc
dec
dec
sbb
addl
jl
push
jl
movsb
push
and
popf
sbb
aaa
cmp
add
lcall
stos
clc
mov
mov
aaa
push
fcmovu
bnd
lcall
ficompl
pop
repz
lds
add
leave
add
mov
mov
jbe
stc
mov
add
addr16
and
shlb
mov
inc
loop
and
adc
and
jle
add
call
fcoms
mov
test
pop
nop
cmp
push
or
movsb
push
inc
lret
cmp
add
adc
cs
jb
add
and
fcmovne
and
and
dec
sbb
clc
mov
xchg
add
sbb
sbb
iret
je
arpl
or
in
push
aas
mov
fcomi
lret
negb
str
mov
cmp
lea
cmpsl
xor
iret
lods
mov
xor
mov
outsb
in
or
dec
mov
push
add
outsl
rorb
repz
add
cld
push
pop
adc
pop
icebp
sub
add
mov
lods
movsl
outsb
add
sti
inc
out
add
aad
push
cmp
fdivp
js
adc
jmp
aaa
xlat
or
scas
lret
enter
pop
mov
fdiv
adc
punpckhbw
jg
rorl
add
es
insb
in
std
test
add
xchg
sarb
add
push
int
in
fcmovbe
sbb
add
aas
out
shl
clc
add
and
insb
jae
out
ds
in
mov
cmp
add
mov
clc
push
scas
sub
bound
add
mov
jp
nop
jne
xchg
xchg
ret
inc
es
sbbb
mov
xor
add
sbb
add
iret
pop
cwtl
es
add
in
loop
and
movsb
ljmp
add
sbb
inc
add
loopne
mov
add
push
or
mov
mov
out
inc
mov
add
mov
mov
inc
dec
loope
adc
add
aas
mov
lock
sbb
mov
sub
xchg
enter
pop
imul
sbb
add
xlat
jns
add
xor
inc
add
mov
dec
incb
lret
dec
add
outsb
add
jge
roll
cmp
or
leave
mov
mov
pop
push
or
aad
push
or
or
test
rcrb
xor
pop
fadds
adc
pop
jns
push
ss
stc
and
lds
mov
js
imul
outsl
push
rorl
out
ljmp
or
jmp
hlt
repnz
mov
imul
jo
roll
addl
aas
enter
scas
and
jno
xor
add
pop
shll
or
mov
fstl
mov
imulb
pop
mov
pop
add
jle
loope
lahf
or
mov
aaa
xor
and
add
add
xor
into
inc
cmp
add
orl
add
xchg
jo
xorb
xor
mov
add
jecxz
insb
fidivrs
sub
leave
daa
roll
data16
or
icebp
pop
repnz
testl
loop
lea
lods
add
icebp
xchg
les
cwtl
xchg
cmpsb
addb
xlat
jecxz
and
ret
into
jae
aad
std
and
and
mov
cmp
jbe
fidivrs
cmpsl
int3
mov
cmp
jnp
mov
pop
fldenv
add
and
fimull
pop
cmp
or
scas
imul
cmp
out
add
adc
ficomps
fiaddl
jp
or
xchg
arpl
mov
es
lcall
xlat
jmp
add
test
jecxz
and
aas
or
imul
lret
sbb
cmpsl
add
sbbb
aam
adc
iret
insl
ja
es
dec
outsl
popa
push
rol
sbb
jmp
mov
add
iret
ret
cld
test
fwait
mov
stos
dec
push
les
add
xchg
cmp
xor
jg
bound
sub
int
test
dec
aad
add
push
nop
idivl
push
lahf
stc
and
add
dec
jnp
jo
fidivrl
mov
sbb
jmp
fcmove
addb
mov
out
iret
ja
jmp
lds
mov
int
push
insl
out
mov
push
push
sbb
jns
jo
pminsw
loopne
pushf
pop
out
fcoms
mov
xor
in
adc
push
inc
es
ss
fidivl
xchg
jne
sti
cmp
mov
lods
rclb
add
iret
add
pop
cs
arpl
push
dec
test
cld
ret
push
add
stos
jl
fidivrs
outsl
loopne
stos
roll
pop
and
fcoms
bound
scas
add
mov
xor
stos
out
in
mov
cmp
jns
xor
sbb
in
pop
lods
and
roll
sbb
or
shl
mov
arpl
jge
out
pop
nop
push
arpl
lock
js
sbb
add
loop
shr
nop
fiadds
fs
call
rol
sbb
push
fcompp
xchg
fiadds
cltd
push
nop
sbb
adc
out
add
or
movl
stos
add
fnstsw
xchg
decb
cmc
add
push
jecxz
sbb
enter
inc
rorb
jle
xor
pop
daa
sar
ljmp
jne
pop
xorl
pusha
xlat
add
mov
in
or
inc
lret
jl
adc
add
cmc
mov
xor
aaa
lcall
stos
push
add
ljmp
mov
jbe
cli
add
arpl
push
fucomi
mov
sbb
xor
jns
add
movsl
mull
ja
ljmp
add
dec
jbe
and
push
jne
sub
and
test
mov
push
mov
les
nop
cltd
mov
mov
lock
cmpsb
and
fiaddl
cmp
push
ds
push
es
fnstcw
dec
sbb
lcall
push
in
fcmovu
sub
ja
cltd
into
shlb
loopne
scas
pop
push
pop
pop
fstl
jo
dec
call
xor
push
cs
push
add
movsl
xchg
cli
xor
outsb
add
lea
lcall
rcr
xlat
pop
xor
and
jo
sbb
push
ficoms
dec
push
cmpsb
pop
mov
fists
es
cmp
jge
mov
sahf
sub
dec
outsl
out
sub
repz
and
add
enter
and
mov
pop
adc
mov
add
ret
lcall
push
xchg
jno
daa
adc
in
in
cs
cmp
sub
repz
add
out
push
pop
add
mov
and
mov
inc
les
cmp
pop
cmp
sbb
or
bound
add
mov
imul
repz
lock
ret
fistpl
icebp
sarb
push
orl
adc
push
scas
add
adc
dec
shll
inc
fs
jbe
cmp
fnstsw
sub
subl
inc
out
xlat
pusha
mov
sub
je
into
adc
cli
pop
stc
cmp
jp
sbb
mov
adc
faddl
adc
push
sbb
push
clc
inc
ds
ret
jne
int
adcb
jbe
add
and
add
js
mov
add
mov
sub
repnz
cltd
test
push
bound
movsl
add
mov
jg
mov
pop
insb
add
mov
test
push
repz
adc
mov
push
aaa
xor
daa
cltd
jbe
mov
iret
jle
push
movsl
inc
pusha
test
add
into
xchg
loop
mov
stc
je
mov
or
sahf
xchg
cmc
imul
loope
add
mov
xchg
pop
add
lods
fildl
add
push
mov
imul
cmp
repnz
in
cmovb
xlat
xchg
sub
sbb
sar
orl
cmp
xor
fisubl
xchg
ret
incb
inc
pop
lea
add
ss
iret
clc
mov
add
push
rorb
movsb
cltd
rorl
xor
add
xor
jg
das
dec
sti
pop
pop
dec
push
jnp
scas
test
out
and
push
jb
in
xchg
loope
push
mov
pop
inc
dec
sbb
add
xchg
xlat
jmp
add
cmpsb
movsb
jle
dec
and
hlt
leave
mov
pop
mov
sbb
mov
push
add
in
loopne
adc
add
mov
mov
jo
xchg
ds
jnp
fadds
adc
es
add
ds
jae
or
cmpsl
and
adc
add
or
hlt
add
fsubl
ficoml
jns
fiadds
arpl
inc
ficoms
mov
xchg
add
cltd
out
popa
cmp
sahf
mov
push
jecxz
jl
repnz
in
jle
ja
insb
shrb
insl
mov
push
pop
dec
add
out
cltd
mov
push
add
push
stc
add
mov
or
jb
mov
cmp
mov
xor
je
inc
cmpsl
daa
stos
leave
fsubp
cltd
ret
sub
fs
and
pop
or
lret
imul
push
mov
push
add
lcall
stos
ficoml
jbe
cs
fcoms
sub
repnz
push
sbb
leave
loop
lock
fimuls
adc
movsl
add
idivb
pop
fists
and
loope
or
inc
test
movsb
add
jb
adc
aam
scas
test
incb
jmp
jle
das
pushw
scas
popa
dec
cmpsb
lahf
add
jp
arpl
shl
add
pushw
jbe
jl
andl
test
sahf
push
cld
adc
sub
or
stos
mov
scas
imul
mov
mov
cltd
lcall
fsubs
outsl
insb
mov
add
mov
stc
fsubl
fcmovu
dec
fsubrp
les
cmpsb
or
rclb
sbb
xor
xchg
add
mov
xlat
insb
add
xor
and
in
sub
pop
jbe
arpl
pushf
xor
push
cmpsb
shlb
mov
aaa
or
leave
inc
into
in
mov
mov
add
mov
test
dec
mov
sbb
xchg
add
ret
push
push
bound
push
cmpsb
add
in
cmp
dec
inc
inc
aam
inc
lcall
add
fdivs
lahf
pop
sub
rol
fisttps
push
scas
xor
loope
mov
pop
add
cmp
fimuls
and
in
lahf
or
add
dec
and
pop
push
cltd
mov
roll
ret
je
push
xor
sbb
call
rolb
subl
and
mov
jo
or
jle
loopne
into
add
int
imul
lock
testb
in
test
fnop
fcoms
xchg
and
push
movsl
jb
push
push
add
lret
repnz
jns
negb
adc
imul
or
inc
jp
sub
add
fcom
xor
pop
popl
cmova
loop
sbbb
addr16
cltd
jo
das
lret
clc
ret
xchg
arpl
xchg
cmp
stos
ds
jle
add
shlb
or
sahf
xchg
mov
push
es
push
pop
mov
add
xchg
push
andb
sub
mov
push
jno
es
dec
das
jge
or
cld
inc
out
arpl
add
iret
popa
or
add
xchg
adc
repz
fcmovbe
push
test
testb
jecxz
or
cmp
int3
fiaddl
ret
das
imul
add
pusha
pop
jle
lods
push
and
add
sti
orb
imulb
ret
or
cmpsb
aam
fmulp
aaa
xchg
mov
mov
ds
rclb
or
push
jp
xlat
fnstsw
cmp
adc
pop
adc
js
dec
adc
fwait
test
stos
arpl
lock
divl
es
daa
fisubl
push
loope
stos
pop
push
inc
jne
iret
add
imul
pop
add
mov
inc
add
repnz
incb
inc
jae
inc
rclw
jecxz
add
add
mov
inc
add
inc
stos
dec
add
and
sarb
jmp
add
into
cli
add
xor
in
xor
xor
loopne
pop
mov
and
add
mov
jge
aad
or
cli
cmc
out
xor
shl
std
push
ret
loope
out
in
pop
or
cmp
or
jnp
hlt
xor
cmpsb
sti
cmp
xor
add
inc
dec
pop
adc
mov
jae
jmp
ret
pop
and
sub
enter
sub
jg
ret
mov
add
call
lahf
mov
mov
nop
aad
push
popl
fcompl
outsl
mov
sbb
xor
outsb
fmuls
dec
mov
lods
push
pop
and
xchg
rcr
cmpb
dec
cld
xlat
imul
es
jmp
inc
jle
push
dec
add
inc
mov
mov
les
sbb
or
xor
lea
arpl
insb
and
add
stos
or
ret
sbb
jns
fs
add
test
mov
pop
dec
mov
hlt
fwait
or
icebp
int
nop
test
add
loop,pt
add
mov
ret
jmp
fst
shrb
cld
pop
xor
push
pushf
xchg
adc
mov
add
jnp
dec
aam
adc
mov
xor
mov
cmp
lea
add
popf
or
xor
jo
and
cmp
and
jnp
mov
adc
sub
std
aas
and
sbb
repnz
fnstenv
std
mov
int
insb
inc
or
xor
mov
int3
xchg
mov
test
adc
xchg
stos
leave
add
xchg
mov
push
ja
sbb
mov
jo
mov
add
out
jno
rcr
xchg
xchg
or
cltd
xor
lcall
and
lock
dec
mov
cmp
ss
imul
sub
fimull
mov
xor
mov
add
test
push
loop
int
mov
push
xor
inc
xor
fiadds
jno
decb
ja
mov
ret
or
add
imul
and
das
pop
and
fildll
cmpsb
add
ret
add
push
nop
mov
out
xchg
andl
sbb
pop
cmp
arpl
scas
xor
leave
xlat
or
in
add
push
xor
pushf
out
fsubrs
adc
mov
jl
add
test
sbb
das
cmp
add
add
cmp
out
sahf
fiadds
test
add
and
lods
push
add
inc
int
dec
fisubs
cmp
scas
xor
mov
out
mov
lahf
in
mov
add
adc
imul
xor
or
sbb
pop
or
repz
es
push
std
setp
outsl
sub
data16
cmp
jg
mov
jmp
loop
xor
or
mov
fsubs
shll
inc
mov
mov
les
scas
lcall
repz
add
xchg
cmp
popa
xor
sbb
mov
mov
push
mov
stc
cmpsb
push
sub
jecxz
pusha
xor
add
ds
fadds
je
lret
js
xor
push
dec
addr16
frstor
pop
add
cmpsl
cmp
xchg
pushf
sbb
into
mov
shlb
mov
pusha
js
add
cmp
sbb
je
push
popa
in
or
adc
cwtl
pushf
scas
aaa
cmp
cmpsb
mov
aas
and
imul
xchg
fmull
stos
add
xor
dec
cmpsl
cld
push
inc
out
fldl
loop
jle
mov
adc
lds
test
mov
ljmp
aad
push
dec
and
jns
arpl
xlat
cmpsb
test
or
sbb
nop
jne
inc
fisubrl
cwtl
in
inc
mov
subb
add
dec
adc
inc
adc
xor
jbe
loop
add
lods
sub
ret
cmc
leave
scas
iret
xlat
lock
popf
push
fidivs
mov
jmp
lock
sbb
jbe
mov
sbb
pusha
sbbl
leave
lret
into
dec
add
notb
fildl
nop
dec
pop
loop
aad
or
in
sbb
aaa
fldenv
jge
jns
insl
fdivrl
pop
std
shll
lods
add
outsb
lock
inc
int
dec
push
mov
sbb
mov
fidivs
cmp
jns
stc
adc
xor
jge
out
cwtl
mov
add
jg
push
mov
pop
add
imul
dec
cmp
add
fwait
sarl
in
daa
mov
xchg
cmpsb
rcrb
add
mov
inc
fcoml
jmp
mov
mov
add
xor
jns
xor
int
xchg
cwtl
ficompl
adc
push
mov
jl
or
add
and
dec
mov
mov
in
icebp
cmpb
mov
mov
adc
loopne
xlat
sbb
and
or
repnz
add
push
xor
fdiv
push
outsl
test
add
cmp
add
sbb
sbb
addr16
outsl
pop
sub
fsubrl
hlt
add
fstps
test
jne
loop
mov
mov
jge
pop
fidivl
and
das
stos
jns
rcrl
inc
repnz
and
xor
mov
ds
push
loope
fidivrs
mov
sub
nop
fst
gs
and
cltd
add
push
jnp
movl
sub
std
into
fwait
das
jmp
jae
or
shrl
jbe
aas
and
ljmp
std
mov
sti
imul
decb
add
adc
push
cltd
or
cmc
cwtl
lcall
fcom
popa
movsl
cmp
adc
sbb
or
jmp
and
pop
jne
push
mov
sarl
mov
add
call
fsubrl
pop
jmp
mov
jno
cmc
inc
add
ja
inc
push
popa
lahf
add
inc
jle
xor
enter
fstl
add
fmul
out
stc
and
jnp
mov
xor
add
adc
test
mov
adc
or
arpl
movsb
clc
addb
out
xor
add
fdivr
adc
or
jae
add
cmp
jnp
outsb
add
adc
xor
add
lea
sbb
jno
pop
push
hlt
repz
push
add
sub
lods
xchg
sub
add
xor
inc
aad
cmp
adc
jns
pop
outsl
rcr
shlb
mov
pop
fadds
xor
and
add
daa
sub
add
adc
cmp
push
call
mov
xlat
dec
out
add
add
lret
push
in
andl
add
out
movsl
add
scas
inc
jae
pop
cmp
add
cmp
lcall
test
sbb
call
fisubrs
lea
and
inc
mov
fimuls
xor
dec
cmc
repnz
mov
jle
das
inc
inc
sahf
lods
push
dec
jge
clc
loop
jno
addb
pop
dec
sub
fisubrs
int
mov
mov
add
imul
jns
mov
js
adc
testl
cmp
int
fmuls
in
aaa
sbb
dec
xor
hlt
mov
in
sub
and
inc
xor
mov
fcomps
jno
cmp
add
inc
shlb
outsb
add
inc
xor
fsubs
xor
je
adc
test
mov
es
call
jnp
and
mov
push
in
inc
push
imul
jns
es
cmp
loope
mov
jae
push
cmp
sbb
rcll
aaa
push
and
cmpsl
imul
les
hlt
clc
jae
fdivr
add
push
faddl
add
inc
pop
sub
ds
add
jbe
cmp
inc
add
sbb
jge
xor
sbb
jbe
fmuls
ja
and
add
popf
orl
mov
out
filds
pop
pop
iret
leave
fisubs
test
mov
fisubrs
jo
cli
les
or
mov
insb
add
daa
jnp
repz
data16
sub
cmpxchg
clc
out
xor
add
sbb
cmp
loope
into
xchg
rorl
ja
insb
push
data16
jb
push
mov
les
push
jp
aaa
test
add
pop
or
cmovae
imul
mov
xlat
mov
and
bnd
and
lds
clc
ds
mov
pushf
in
xchg
mov
mov
mov
repz
cld
or
jecxz
add
and
loopne
fisubl
rcrl
add
xor
rolb
sbbb
aas
add
mov
xchg
sub
and
adc
int
test
jo
add
ja
cltd
decb
mov
in
insb
pop
or
fcompl
or
fcomi
add
mov
adc
imul
movsl
and
and
les
mov
inc
test
stos
out
pop
cwtl
pop
push
dec
subl
jecxz
enter
add
cmp
xor
xchg
inc
pop
mov
add
and
adc
fmulp
mov
mov
jecxz
fisubl
xor
mov
add
outsb
sbb
mov
scas
dec
out
sub
xchg
add
bound
jle
cld
lret
icebp
adc
or
ss
xor
xor
sub
stos
or
jb
mov
xchg
xor
repz
das
aas
add
jnp
subb
cmpsb
sbb
adc
mov
dec
aad
sub
in
push
into
pop
imul
subl
rcll
cld
add
insb
xchg
or
mov
iret
fisubrl
or
inc
dec
lret
add
jnp
clc
lds
push
adc
push
sub
cmp
scas
mov
je
pop
filds
or
adc
jge
movsl
and
scas
aaa
ds
out
jns
pop
push
jb
jle
add
int3
push
mov
loop
dec
int
std
sbb
add
adc
lahf
loop
xor
add
sbb
popa
xor
out
inc
sub
cli
cmp
rorb
push
add
aaa
icebp
test
xlat
add
add
add
bound
add
ret
divl
pop
mov
xchg
enter
out
imul
rclb
xor
insb
pop
mov
or
es
js
pushf
add
aaa
enter
arpl
jb
mov
std
jbe
dec
out
cmc
push
mov
cwtd
outsl
jbe
loop
add
ljmp
sub
imul
int3
clc
cmp
push
jo
cltd
dec
and
or
fdivrs
loop
sub
add
xor
ljmp
add
ret
sbb
xchg
add
adc
and
int3
sbb
arpl
add
cld
add
cmc
insl
mulb
mov
cs
push
dec
test
or
xchg
adc
mov
mov
jbe
jnp
inc
in
aam
push
fwait
daa
add
pusha
dec
scas
push
sbb
out
iret
dec
int
daa
mov
mov
add
pop
xchg
lock
jnp
inc
dec
adc
add
sub
add
iret
into
sub
add
sbb
lret
jb
lret
cld
sarb
push
clc
scas
and
cmp
in
inc
jbe
dec
add
jb
rolb
repz
inc
and
fs
add
xorb
push
pop
xor
cmp
xor
dec
fisubrs
out
push
xchg
out
or
and
add
add
cmpsl
mov
jae
xchg
stc
lret
mov
rclb
movb
dec
sbb
add
and
add
std
sub
mov
jns
xor
ltr
cs
sarb
es
ds
sub
add
sbb
inc
adc
add
jge
cwtl
sbb
xchg
idivl
mov
jo
add
or
std
add
int
das
add
rorb
add
xchg
jnp
jo
add
movsl
test
and
xor
icebp
loope
cmpsl
hlt
in
lcall
cmpsb
jle
jbe
add
repz
mov
adc
loope
sbb
jo
cmpsl
out
mov
or
add
push
mov
add
push
inc
lds
dec
lea
jo
cmpsb
add
stc
or
lods
jp
push
add
jbe
cmp
scas
lods
jmp
dec
xchg
mov
push
sbb
or
xor
mov
jo
push
adc
mov
dec
sub
sahf
movsb
inc
add
sbb
mov
js
pop
jno
mov
fldl
push
xor
inc
insl
shlb
jb
mov
xor
stos
mov
xor
gs
add
mov
test
ss
icebp
dec
dec
ja
xchg
add
movsb
adc
gs
sbb
fisubl
ljmp
sbb
add
loopne
cmp
fisubrl
dec
xlat
jb
cmp
dec
jg
fsubl
xchg
push
sub
add
dec
or
fs
into
sti
iret
inc
loop
fisttpll
cli
pop
ds
mov
cs
ljmp
mov
stos
dec
pusha
cmovle
sub
repnz
mov
pop
mov
scas
lock
out
pushl
adc
push
pop
push
mov
cmc
add
mov
push
mov
ret
xor
add
jno
sarb
cmp
or
sub
or
mov
loop
aad
xor
xor
fdivl
sbb
inc
jmp
add
test
lret
xchg
repnz
movsl
mov
mov
inc
sbb
xor
jl
pop
dec
add
pop
insb
jnp
xchg
mov
sbb
sub
push
mov
or
adc
int
pop
mov
les
adc
push
fiaddl
add
movsb
pop
imul
sub
cli
dec
push
icebp
add
lahf
ret
add
xor
jo
test
repz
dec
pop
imul
pop
dec
cmp
cmp
add
ds
roll
icebp
add
cmc
das
push
les
add
jnp
mov
xor
movsl
in
stos
cmc
jns
inc
pop
mov
add
pop
test
and
and
mov
cmp
aas
adc
cld
sbb
mov
xchg
dec
aaa
fwait
int
popa
frstor
sbb
push
sub
lea
xchg
adc
sbb
dec
fwait
jae
mov
add
inc
dec
add
in
js
ficoms
cmp
mov
add
icebp
adc
cmp
pop
add
mov
repz
pop
cmp
dec
les
and
push
pop
fimull
dec
xor
stos
adc
das
jp
add
add
mov
stos
aaa
add
lea
ret
cmc
in
jo
cmpsb
add
mov
nop
and
fisubl
orb
pop
pop
adc
nop
sbb
pop
xchg
add
and
jae
lcall
loop
daa
mov
out
add
daa
icebp
rcr
in
add
xor
aam
addb
and
insb
adc
repnz
sub
and
out
rcrb
mov
cltd
jnp
sub
leave
dec
int3
mov
cld
adc
sub
sub
cmpsb
loop
push
add
adc
or
in
push
bound
xlat
mov
sbbl
and
sahf
mov
hlt
les
imul
and
dec
imul
cld
dec
iret
mov
adc
int
out
inc
mov
in
cmpsb
push
cmp
out
dec
and
pop
mov
stc
jl
pop
int3
xor
jle
or
lret
xchg
cltd
cltd
push
aas
movl
out
insb
aaa
mov
iret
mov
inc
inc
iret
repnz
aas
sbb
xor
adc
jb
repnz
movsl
inc
mov
cmp
cmpsl
and
push
pop
add
fstpt
repnz
ja,pn
enter
pop
or
and
ss
es
cltd
enter
sbb
repz
sbbl
cmp
and
rolb
xchg
add
mov
outsl
dec
xor
jae
psubsw
mov
xor
pop
in
cmpsb
mov
gs
pop
push
stos
iret
orb
in
shrb
lods
jecxz
dec
mov
clc
shll
inc
mov
xlat
xor
nop
mov
pop
test
decl
mov
adc
add
into
pusha
popa
es
adc
fcmovnbe
fildll
sub
das
lds
jne
sbb
sbb
pop
insb
rolb
dec
xchg
aas
les
or
cmpsb
mov
jmp
aad
fisttpl
loop
mov
test
add
jb
and
adc
sub
mov
pop
dec
xchg
fisubs
es
mov
jg
jmp
and
fidivs
sub
mov
cmp
and
out
fdivs
fsubl
in
out
pop
lahf
loope
int3
hlt
and
add
or
cmc
jmp
push
xor
aad
push
add
jo
sahf
sub
out
out
test
mov
popf
leave
pop
jp
xor
add
fistl
movsb
mulb
add
push
add
mov
stos
push
ljmp
adc
fstpt
bound
ret
cmp
fadds
add
repnz
adc
pop
fadd
pop
mov
jae
or
add
movsl
rclb
xor
xlat
mulb
add
add
add
cmpsl
sti
adc
lods
mov
dec
test
add
aad
aas
addr16
stos
jne
push
fbstp
cmpsb
iret
shlb
xchg
xchg
clc
pop
and
ds
add
and
push
nop
fcomps
popa
push
in
mov
repz
aaa
xor
mov
fildll
loope
jle
add
lea
dec
sbb
cmp
pop
into
fwait
test
jmp
loope
cmc
out
fbld
mov
les
cld
mov
aas
insl
add
adc
sub
sahf
pusha
mov
lods
inc
mov
jo
mov
and
gs
or
lahf
fcmovnbe
cmp
jb
or
dec
pop
cltd
cmp
sub
dec
mov
xchg
xor
test
inc
shll
repnz
in
pop
das
stos
clc
nop
iret
add
imul
add
mov
push
add
lret
dec
les
adc
lods
mov
jl
adc
mov
movsl
or
adc
mov
add
mov
add
nop
xchg
push
inc
mov
pop
fld
jnp
adc
jbe
inc
sbb
add
popl
les
mull
test
fildl
rcrb
push
xor
adc
add
xchg
fsubs
push
enter
adc
movsl
movsb
scas
mov
gs
cmp
fwait
sub
or
je
loopne
rol
push
fsts
fcoms
push
push
jmp
mov
push
xor
subl
mov
mov
sbb
clc
stos
sbb
push
bound
in
and
repnz
fdivl
test
sbb
dec
mov
and
cltd
pusha
mov
add
jge
pop
dec
outsl
aaa
adc
arpl
cwtl
xor
lds
push
jg
and
add
data16
mov
aas
push
add
stc
movsb
mov
jnp
ss
mov
push
mov
cmpsb
or
mov
push
mov
addr16
mov
add
jno
hlt
mov
sbb
add
in
call
popa
fisubl
jb
sbb
and
test
gs
add
rclb
fwait
iret
bound
push
and
out
ret
dec
movsb
push
pop
sub
jl
push
das
sub
and
ss
add
cmpb
or
mov
cmpsl
and
fidivrs
or
jno
and
cmp
push
mov
inc
mov
aas
jmp
jecxz
out
mov
loopne
fs
js
cltd
jo
jb
dec
and
push
xchg
das
sbb
stc
add
nop
mov
mov
add
mov
fdivs
or
mov
loope
jnp
out
add
add
ficoms
and
xchg
push
push
add
jecxz
hlt
mov
dec
sarl
sbb
dec
or
adc
push
jnp
mov
cmp
mov
xor
shlb
jo
repz
dec
pusha
add
jecxz
xorb
jnp
in
and
cld
ret
lock
and
or
stos
divb
mov
jge
cltd
imul
data16
clc
out
adc
call
dec
mov
and
mov
and
fidivs
push
cmpsl
je
mov
push
inc
nop
movsl
jo
xlat
sbb
or
adc
jb
fidivl
or
mov
sbb
pop
das
and
ret
jno
or
cmp
testb
repz
mov
xor
jg
and
add
dec
js
adc
push
add
out
inc
movsb
add
out
xor
pop
and
sub
add
and
mov
repz
fidivl
fisubl
xchg
movsb
popa
imul
lea
add
scas
inc
pop
std
addl
mov
stos
add
xor
xchg
mov
adc
mov
or
aam
add
push
or
mov
cmp
adc
roll
cmp
imul
andl
pop
xchg
test
aas
test
jns
push
stc
int
mov
daa
jae
scas
mul
add
repnz
mov
xor
mov
cld
mov
in
pushf
sbb
aaa
sub
jae
jno
xor
dec
enter
jbe
push
cltd
push
dec
jae
and
or
repz
lret
or
inc
fcoms
faddl
and
out
pusha
aaa
push
movsb
mov
dec
jmp
fidivl
xchg
cmp
inc
jbe
clc
cmp
fidivrs
js
and
push
and
jne
scas
xchg
add
cmp
xchg
aad
mov
and
pop
inc
imul
mov
shl
push
mov
xchg
sub
lods
mov
sub
mov
and
xor
push
jmp
add
jo
pop
iret
ljmp
jae
fisttps
add
mov
jle
jl
or
and
fwait
add
push
mov
push
shrb
or
jne
jno
cs
dec
es
dec
fidivrl
jns
sbb
subb
xor
adc
mov
enter
mov
xorb
fidivl
mov
sub
rsqrtps
cmp
cltd
inc
mov
in
pop
jnp
cmp
int
shll
mov
fldenv
in
cli
adc
fadds
test
cmp
mov
jbe
jp
sbb
xchg
adc
add
xor
jo
lock
xor
jno
mov
jecxz
and
xor
leave
or
xor
ret
sbb
mov
std
leave
push
mov
xchg
mov
pusha
xchg
addb
dec
mov
outsl
dec
shlb
jmp
mov
inc
mov
imul
sbb
and
icebp
push
rcrb
add
lret
adc
mov
lret
adc
aad
rolb
mov
inc
add
and
adc
add
xlat
rolb
subl
aad
adc
iret
test
cs
jb
push
cltd
fwait
adc
inc
adc
pop
sbb
jp
fcomps
add
push
add
adc
ss
out
xlat
jae
push
xchg
shl
add
jnp,pt
or
xchg
cmp
bnd
jbe
mov
dec
scas
add
test
fisubrl
sub
cwtl
ss
imul
adc
xor
aas
adc
or
sarl
xlat
aaa
test
ja
mov
xor
shl
cs
bound
and
clc
xchg
cmp
jecxz
cmpsw
pop
mov
ret
jl
and
lods
xor
and
stos
cmpsb
ds
ficomps
ret
adc
imul
into
lods
in
push
push
add
outsb
sub
aam
sbb
test
sub
add
add
outsl
vmread
or
fdivs
call
clc
mov
add
push
imul
inc
jae
push
cmp
outsl
add
enter
mov
aas
scas
stos
fisubrs
jbe
sbb
enter
incb
fdivrs
dec
push
clc
ja
adc
fmuls
push
add
cmpsl
inc
and
push
xor
cltd
shlb
dec
test
fidivs
dec
jp
sub
mov
popa
int3
cmpsl
ds
dec
fimull
test
cmp
sub
psubusb
ret
cmp
sub
push
test
ror
fidivs
cltd
rorb
daa
out
inc
fstpl
fidivrl
ds
jns
cltd
and
dec
mov
sbb
jle
push
in
push
inc
das
jge
or
sub
push
bound
or
cmp
xor
into
add
stos
aaa
arpl
shlb
push
jns
ret
add
test
xor
xlat
outsb
in
cwtl
lds
cmp
push
or
sbb
add
das
ret
xlat
lods
jmp
pop
sub
mov
push
mov
push
sbb
xchg
cltd
jle
pop
shll
mov
iret
cmp
test
mov
adc
ss
push
add
cltd
jbe
lret
add
xchg
cwtl
lods
hlt
pop
aam
lea
mov
iret
cmp
adc
xor
arpl
jo
stos
mov
not
adc
and
movsl
cltd
mov
das
imul
mov
outsl
cmpsb
dec
sub
shrb
dec
mov
push
cld
les
int
fisttpl
xor
adc
fdivr
orl
outsb
sub
popa
add
cld
xchg
outsl
mov
or
mov
jne
mov
testl
mov
in
cmp
imul
adc
shrb
mov
ds
or
push
cmp
je
cmpsb
in
adcb
dec
and
leave
sbb
add
in
push
add
inc
xchg
aaa
daa
dec
adc
cltd
add
pusha
cmp
popf
imul
xchg
pop
je
cld
add
mov
mov
repnz
or
xor
in
or
out
jo
rcrb
sbb
pop
test
add
ds
icebp
aad
jb
mov
outsb
adc
add
sub
std
xor
push
add
das
cmpsb
add
add
lock
adc
fdivrp
jns
iret
push
cmp
push
mov
lods
cmpsl
and
bound
and
cmpsl
xchg
cmp
push
pop
jle
cmc
pop
add
js
fsubs
pushf
pop
add
fisubs
jg
fstps
add
mov
repnz
adc
dec
movsl
stc
push
out
pop
pushf
insl
mov
lds
cmpl
add
es
inc
js
cs
fidivrl
or
push
xchg
or
aas
enter
sbb
popa
call
mov
int
or
add
js
or
jae
mull
mov
xor
mov
stos
insl
jp
jb
cmp
mov
and
cmp
or
xchg
mov
ss
shrl
mov
add
lret
or
push
sbb
and
sub
dec
test
outsb
pop
add
cmp
arpl
nop
pop
adc
pop
sbb
xor
adc
cmp
cmp
add
mov
divb
xlat
and
xor
adc
pop
mov
mov
jne
data16
lahf
pop
cmpsl
outsl
adc
mov
cmp
pop
and
add
arpl
jns
adc
test
add
xor
les
sahf
daa
add
or
jae
out
test
iret
and
icebp
xchg
add
cmp
fidivl
push
loope
mov
add
mov
lock
inc
mov
loopne
and
dec
popl
xor
stc
out
jnp
imul
aaa
jo
not
daa
mov
nop
pop
icebp
not
add
jle
xor
aaa
sbb
dec
movsl
add
fucomp
add
loopne
jae
jmp
sbb
in
xchg
sub
stos
scas
jnp
mov
nop
and
xchg
add
or
mov
fsubs
xor
hlt
cmpsb
cld
mov
daa
out
mov
popf
add
add
loopne
out
faddl
adc
xchg
subl
xlat
arpl
pop
test
dec
imul
jle
adc
cwtl
aaa
mov
stos
add
shl
push
mov
pop
jbe
popa
dec
add
and
int3
inc
push
mov
sbb
dec
add
jecxz
adc
jne
dec
sub
sti
and
add
push
mov
scas
cmp
jno
neg
jne
mulb
adcl
cs
push
inc
fdivr
pop
mov
sub
movb
fadd
clc
push
mov
mov
add
out
call
push
lods
or
push
iret
add
xor
arpl
add
jo
jge
sbb
rcrl
jne
testl
mov
xchg
jae
sub
shl
pop
pop
jns
jo
and
add
mov
sub
ss
jmp
push
add
cwtl
enter
dec
jbe
or
sldt
out
mov
lahf
arpl
fidivrs
or
add
aas
and
hlt
adc
dec
iret
mov
push
loopne
xor
cmp
jmp
and
sar
pop
mov
jo
into
mov
cmp
sub
mov
and
lea
and
mov
ds
addb
pop
adc
add
inc
in
mov
push
and
dec
mov
add
cltd
push
fcoms
mov
xchg
pop
test
daa
mov
mov
xchg
out
imul
sub
shr
pop
add
cmp
push
cmpsl
xor
mov
dec
sub
cmp
or
stc
add
dec
cs
out
and
and
loop
xchg
jmp
inc
or
fidivrs
ljmp
add
jno
shlb
nop
adc
sbb
xchg
mov
fidivl
sbb
add
push
mov
add
je
out
cltd
ljmp
add
scas
fsts
sub
add
mov
xor
fdiv
andb
push
xchg
fidivrs
adc
sbb
rcll
lods
sbb
xor
xor
jne
in
push
jp
cmp
add
cmp
add
repnz
scas
add
add
aaa
adc
pop
adc
cmp
sub
or
les
add
jbe
sub
scas
arpl
inc
popf
movsl
cltd
roll
push
stc
inc
js
and
test
xchg
xor
ss
subb
xor
xor
push
fcoms
or
pop
data16
add
insl
dec
pop
mov
cmpsb
dec
add
xchg
mov
in
mov
adc
popa
lret
add
mov
sbbb
add
je
stos
fs
ljmp
add
jb
or
pop
js
daa
jbe
add
fstpt
xor
add
movl
add
xchg
sub
mov
fisttpll
sti
pusha
stc
add
xlat
fdivl
cmp
xor
clc
mov
and
and
mov
or
icebp
in
mov
or
scas
data16
xor
sub
iret
popf
aad
sbb
fisubl
idivb
mov
jmp
add
rcl
push
das
adc
mov
pop
mov
lahf
call
cmp
xor
rcrl
daa
sub
addl
jae
jnp
imul
sub
mov
cmp
fsubs
adc
and
or
add
shrl
mov
loope
loopne
adc
daa
push
and
lock
mov
jb
dec
sti
pop
lcall
add
out
pop
add
repz
xlat
xchg
pop
inc
hlt
cltd
sarl
or
std
add
jb
aad
push
shll
scas
lret
jo
call
sub
je
mulb
add
push
repz
leave
lea
jnp
out
mov
fiaddl
and
lcall
mulb
shlb
mov
icebp
outsl
fs
ret
int
add
adc
sub
pop
cmp
das
lahf
lret
xor
in
getsec
jp
or
jbe
hlt
shl
mov
add
jle
push
sbb
jo
mov
sbb
mov
dec
add
js
mov
mov
mov
faddp
xchg
and
or
ret
cmp
cmp
pop
xor
pop
adc
xchg
es
cmc
js
and
ja
or
pushf
push
add
xor
pop
movsb
cmp
jae
and
cltd
fnstcw
icebp
mov
jo
sbb
cmc
fsubrs
push
inc
pop
rol
jmp
inc
into
mov
xor
adc
xchg
sub
adc
push
bound
das
repz
fcomp
enter
or
jns
push
add
pop
iret
jns
data16
stos
or
fsubrs
jo
jp
add
xchg
adc
adc
add
mov
adcb
test
jl
clc
dec
add
mov
xchg
mov
add
enter
fcmovu
shl
orl
iret
enter
aaa
das
icebp
bound
std
jae
cmpsb
sub
pop
mov
jecxz
stos
mov
jb
verr
mov
jle
fmuls
cmp
push
lods
fsubs
dec
mov
or
out
out
divl
push
lds
add
mov
mov
idivb
add
aas
xor
adc
jb
aaa
mov
fimull
jl
cld
pop
cmp
hlt
stc
add
lahf
clc
fs
add
push
add
dec
shl
icebp
and
jns
fidivrl
mull
pop
sub
adc
mov
add
push
jb
mov
imul
lods
and
add
sbb
add
movsb
mov
mov
je
xor
and
add
mov
jg
sbb
mov
add
nop
mov
fdivrs
adc
xor
jns
push
add
ja
enter
cmp
mov
jp
sub
add
enter
testb
mov
scas
ljmp
mov
test
mov
xor
jb
ds
or
rcll
dec
add
lret
inc
add
push
mov
xchg
scas
js
xchg
ror
cli
inc
mov
into
das
xchg
push
icebp
call
enterw
out
xor
and
lcall
mov
add
adc
in
lret
add
es
add
xchg
jle
mov
sti
add
cli
adc
jp
xor
fldenv
stc
add
jle
mov
add
mov
cvtpi2ps
jno
mov
push
mov
add
mov
adc
mov
std
mov
clc
xchg
dec
and
add
cmpsl
cmp
sbb
xchg
in
insl
fisubs
push
ret
mov
lods
add
xor
jecxz
jl
xlat
nop
lcall
push
add
cmpsl
add
mov
pop
and
repnz
test
jge
xchg
cmp
xor
icebp
add
add
cmc
or
add
sub
push
and
loope
pop
lret
in
mov
jae
addl
jbe
scas
ret
push
data16
adc
sbb
inc
push
mov
mov
out
iret
and
add
inc
shlb
in
fcomps
jns
aaa
cmpb
icebp
lods
daa
dec
xchg
jecxz
xchg
pop
pusha
dec
jle
mov
cltd
inc
int3
pop
xchg
cmp
mov
inc
and
sub
vmovhpd
je
adc
push
rcll
cmp
test
movsb
test
inc
ficompl
jmp
jbe
sbb
cli
mov
xor
stos
sub
adc
adc
pop
jmp
fiadds
scas
jecxz
mov
mov
sbb
out
push
xchg
cmp
in
enter
fstpl
std
adc
inc
add
inc
lea
pop
mull
push
das
push
iret
ret
sahf
or
mov
xor
pop
gs
fidivs
ss
or
cmp
and
adc
add
dec
ja
add
and
push
mov
adc
lret
cmp
leave
fcoms
add
and
das
fs
lods
cmp
cmpsb
pusha
call
pop
cmc
lea
add
repz
and
cmp
push
ficoms
cli
cmp
jno
jecxz
imul
popf
xor
dec
imul
hlt
add
mov
mov
xor
fnstenv
sbb
fisubrs
xchg
and
sub
movsl
add
das
loop
mov
cmp
add
dec
call
sub
testl
fstpl
mov
add
jle
mov
mov
lods
fiadds
mov
mov
add
adc
pop
ficompl
mov
imul
cmp
inc
lea
add
cld
push
insl
dec
mov
les
cmpsb
pop
sub
xor
mov
mov
jo
mov
or
mov
in
out
aas
cwtl
mov
arpl
sbb
frstor
shrb
push
xchg
jp
cmpsb
int3
add
or
icebp
inc
test
mov
ficomps
outsl
pop
arpl
push
aaa
fnstsw
inc
es
adcl
movsb
mov
push
xlat
jne
mov
cmp
inc
adc
les
inc
or
add
addr16
push
ja
push
cmp
mov
ret
nop
adc
adc
add
mov
fstpt
add
push
in
add
jl
dec
cmc
imulb
inc
xor
rcr
jns
cmp
add
icebp
rcrl
jecxz
adc
sti
mov
shl
xchg
imul
xorl
add
bound
iret
pop
in
test
mov
sub
push
test
sti
mov
mov
dec
inc
lds
mov
shrl
add
cmc
inc
cmpsl
arpl
ret
aas
jns
cltd
jb
sub
ja
pop
sbb
push
add
into
lret
sub
adc
jmp
adc
mov
aaa
fsqrt
mov
insb
mov
cmc
fimull
inc
repz
in
xchg
and
or
push
add
push
or
test
mov
mov
ss
push
es
inc
push
data16
imul
mov
mov
xchg
imul
mov
fstl
adc
xor
clc
arpl
movsl
add
or
mov
pop
cmpsl
xor
sbb
mov
movsl
mov
cld
cmp
mov
mov
sbb
dec
les
push
in
je
and
dec
out
test
sbb
cltd
dec
imul
es
clc
inc
repnz
jnp
loope
fbstp
adcb
add
inc
test
sahf
test
adc
and
and
mov
adc
push
popf
les
jno
and
adc
add
mov
in
in
xchg
insl
out
sbb
jno
popf
and
pop
dec
pushf
or
add
stos
push
or
and
gs
pushf
add
xor
add
outsb
loop
inc
scas
icebp
add
lock
xchg
outsl
repz
add
xor
cmpsb
add
mov
insb
push
in
adc
xchg
fsubs
ud1
pop
data16
dec
sbb
inc
fidivl
scas
popf
js
xor
addl
push
sbb
dec
fcmovbe
xchg
add
add
cmp
xor
jg
add
sbb
dec
ja
push
cmp
repnz
or
add
or
jl
and
lahf
xchg
pop
push
bound
adc
and
mov
add
jp
hlt
pop
mov
fidivrs
xchg
mov
out
pusha
sbb
xor
loop
out
add
jno
dec
ds
jle
stc
outsl
mov
sub
jb
into
or
dec
add
aad
jbe
scas
add
push
xchg
sub
outsl
aaa
test
fcoms
cmpsb
pop
lods
pop
mov
xchg
adc
stc
jo
cmp
inc
add
xchg
push
je
adc
mov
arpl
mov
cwtl
jge
or
sbb
cmp
int
sbb
add
push
or
jb
xor
add
and
shrl
ret
lea
fcompl
adcb
add
adc
jle
ror
cltd
push
and
outsl
add
pop
dec
pushw
fsubs
lods
adc
andb
aaa
add
hlt
mov
sub
repz
fnstcw
fmuls
push
outsl
add
jg
sub
add
push
cwtl
lcall
push
adc
xchg
sbb
add
clc
mov
sarl
add
lret
sbb
xor
hlt
dec
xor
fcoms
lock
add
ficompl
enter
negl
inc
les
movsb
flds
int3
aas
xorb
loopne
lret
jae
dec
pop
mov
add
mov
or
into
sub
sarb
xor
add
xchg
cmp
cmp
mov
repnz
lret
mov
add
xchg
mov
mov
sub
out
mov
push
pop
add
enter
movsb
mov
xchg
pop
jecxz
fcmovne
add
sahf
out
xchg
out
and
lret
or
mov
popf
clc
jnp
dec
add
in
mov
push
jb
and
pop
dec
xor
arpl
pop
adc
sbb
into
fimull
add
sub
dec
add
dec
outsl
xor
jp
repz
mov
je
adc
xchg
sbb
in
sbb
lahf
aas
das
xlat
mov
xor
aaa
push
aaa
inc
sbb
sbb
push
out
out
fsubr
mov
jns
add
cmp
stos
add
mov
dec
test
adc
push
xlat
popf
lods
call
fdiv
hlt
cmpsl
xor
add
mov
in
adc
and
movsb
jno
cwtl
das
sub
add
clc
hlt
ror
mov
dec
daa
sti
pop
add
ficoml
pslld
jmp
insl
movsb
add
and
pusha
fstpt
rolb
push
cmp
mov
and
adc
sbb
les
cmpsl
add
xor
lods
into
sbb
fdivr
in
jmp
xor
insl
pop
stos
orl
inc
das
repz
repnz
cmc
enter
inc
std
cmpsb
and
xlat
outsl
cwtl
stc
add
stos
push
nop
out
sub
jp
sbb
call
mov
mov
in
je
nop
fdivs
xchg
and
jnp
xor
mov
jbe
sub
pusha
in
lds
arpl
add
dec
fcompl
shr
sbb
push
add
mov
pop
int3
dec
push
cli
dec
gs
adc
stos
or
xchg
jg
call
shlb
mov
pop
idivb
fstl
sub
fisubs
repz
sbb
push
mov
push
dec
jb
movsb
adc
fimull
bound
outsl
scas
mov
aam
and
outsb
xor
rorb
fadds
xchg
dec
test
mov
repnz
or
cwtl
push
js
loopne
adc
rolb
idiv
pop
bound
icebp
lret
aas
out
nop
pop
add
xchg
daa
cmp
dec
xchg
mov
add
lock
mov
loop
stc
pop
sti
push
out
pop
pop
and
sbb
movsb
insl
scas
cmp
jl
ror
je
dec
add
cmp
mov
mov
nop
cmp
test
mov
nop
add
ds
xor
das
push
scas
inc
fdivrp
stc
cmp
jb
fcompl
mov
fldt
and
es
enter
fwait
adcl
inc
test
les
mov
cltd
or
scas
flds
fcmovb
nop
and
leave
inc
sbb
pop
cmp
cmp
mov
push
jno
add
add
movsl
in
jp
addr16
jnp
push
mov
cs
inc
add
mov
nop
lods
das
add
xchg
stos
shlb
jle
pop
push
jbe
push
fsubrs
and
xor
int3
stos
add
mov
pop
les
xor
jg
cltd
fstps
sbb
and
xor
adc
and
out
add
je
add
add
cmc
daa
lcall
or
sbb
inc
cmpsb
sub
add
mov
aaa
push
pop
cmp
or
xlat
cmp
jp
push
ja
shll
jo
mov
lods
xchg
repz
add
add
out
mov
bound
and
jecxz
sub
loop
adc
xchg
cmp
add
aaa
fidivs
pushf
jmp
xor
aas
jle
push
xchg
imul
cmp
leave
sbb
and
xor
xchg
adc
daa
out
popa
aas
and
xor
sbb
in
xor
jns
xchg
mov
add
and
adc
mov
out
xor
rcll
sbb
push
in
or
add
lahf
jno
add
sarl
roll
loope
xchg
sbb
inc
xchg
push
loop
stos
sbb
ret
cmc
or
sarb
decb
lret
pop
jecxz
iret
loope
jns
jns
ror
mov
mov
mov
cmp
or
add
cmpsb
xor
xchg
pop
pusha
lea
or
cmp
inc
bound
add
mov
jae
rcll
imul
repz
mov
fs
mov
cmp
mov
movsb
inc
and
fmuls
cmpsb
cmpsl
popf
push
add
std
jbe
das
mov
and
add
inc
xchg
inc
sbb
jle
xor
dec
rcrl
mov
imul
push
mov
add
mov
jecxz
sub
in
mov
dec
movsl
fsts
mov
insl
xor
add
and
inc
add
insl
xor
inc
jg
in
xor
jnp
sbb
mov
add
adc
orb
jnp
xor
in
push
jl
adc
inc
or
stos
xchg
push
into
fadds
inc
jnp
outsb
cmp
xor
popf
push
fisttpl
push
lret
sbb
add
add
arpl
mov
call
mov
dec
imul
and
lock
push
mov
scas
cmp
cmp
dec
pop
push
clc
out
mov
push
gs
adc
cmp
test
fdivp
aas
mov
insb
mov
pop
and
mov
xor
cmp
nop
fadds
cmp
shll
mov
push
dec
mov
je
xor
in
test
rorl
mov
lock
and
jae
sub
pop
ds
jecxz
faddl
xchg
add
and
xchg
js
roll
addr16
movsl
jp
aas
shlb
mov
pop
repnz
es
cwtl
fldcw
lea
add
loop
int3
fdivrs
inc
fimull
cmc
add
addl
xchg
jns
push
in
inc
pop
inc
adc
cmp
inc
dec
fcoms
imul
adc
and
mov
sarb
lock
fiaddl
daa
bound
jns
and
mov
sahf
or
mov
sbb
repz
push
scas
jns
ret
std
sub
mov
push
mov
or
add
jp
and
mov
pop
mov
jge
xor
add
dec
test
shlb
nop
mov
dec
jmp
cmpsl
in
adc
mov
pop
xchg
cmpsl
and
cmp
jbe
dec
add
das
lods
cmpsl
int3
push
mov
out
add
sbb
cli
repnz
fmuls
jnp
sub
and
add
adc
nop
xor
add
sbb
repnz
mov
jb
ror
ret
into
mov
mov
xor
jns
sub
add
icebp
popf
sbb
iret
sub
vfmsubadd213ps
mov
repnz
add
outsl
lret
imul
sbb
fdivrs
pop
sbb
sub
test
add
stos
add
ret
lahf
std
push
or
xchg
ss
rorb
dec
repz
add
fdivs
insl
mov
add
dec
mov
xor
fidivs
mov
xor
scas
stc
bnd
das
je
aas
fldcw
cmp
mov
repz
mov
ficompl
mov
adc
call
add
jb
int
lods
mov
xchg
ret
adc
and
pop
test
subl
and
outsl
movsl
pushf
fistl
mov
pop
pop
and
pop
sbb
adc
jne
dec
pop
out
jb
loope
and
mov
or
lods
cmp
es
xorl
lock
cmp
lods
push
in
mov
sub
sub
arpl
or
imul
or
fimuls
sbb
push
sub
fstps
xchg
ja
mov
aas
mov
aam
insl
lock
add
add
icebp
dec
pop
add
das
in
and
inc
add
cld
jl
pusha
push
popa
inc
and
xor
js
data16
xchg
aaa
aas
add
imul
or
fidivrl
rolb
jno
movb
pop
in
mov
xor
or
mov
cltd
push
jo
jne
xchg
std
data16
push
push
je
aaa
pop
push
jae
addr16
js
int
or
mov
xchg
xchg
pop
and
mov
inc
push
cmpsb
jne
cltd
mov
into
jl
loop
repz
add
xlat
jne
cltd
call
dec
out
mov
fwait
add
add
pop
cmp
scas
mov
sahf
and
and
mov
into
sbb
sub
xor
xor
and
jae
daa
push
mov
cmpsb
hlt
iret
cmp
shl
dec
add
ljmp
and
sbb
rolb
cmpsl
sub
shlb
jae
std
and
push
jnp
xorl
add
dec
sub
mov
sub
and
lcall
repz
cmp
fistps
adc
pop
fnsave
sbb
mov
pop
jnp
add
add
icebp
push
fsubs
jo
add
mov
xor
and
fidivrl
int
cmp
pop
jns
daa
add
sub
cmpsb
stos
sbb
mov
cmp
push
loop
xor
fwait
int
into
cli
mov
cs
fldt
mov
and
imul
push
add
xchg
push
test
and
push
repz
mov
add
sub
push
push
jl
xor
outsb
rolb
or
pusha
xor
repz
sbb
push
mov
lahf
nop
jecxz
sbb
or
push
xor
add
adc
aas
cmpsb
sub
cmp
fildll
or
mov
rolb
icebp
pop
fcomp
test
mov
daa
sub
push
scas
cli
loopne
inc
and
pop
jmp
jnp
imul
add
inc
scas
aaa
and
cmpsb
enter
add
subb
rep
das
add
pop
cwtl
xchg
xchg
mov
xchg
adc
and
mov
mov
imul
mov
xchg
mov
xchg
ja
repnz
mov
mov
sti
mov
sub
mov
cmpsl
bound
push
fdivrs
adc
fisubs
dec
in
rcll
add
es
clc
out
xchg
and
in
divb
sbb
jecxz
lods
int
pop
jp
notl
shll
cmp
daa
and
mov
add
pop
adc
dec
shlb
lea
sbb
scas
sbb
push
sub
add
jecxz
or
push
add
dec
jo
pop
inc
adc
aas
xor
repz
jae
cmp
cmp
fimuls
inc
adc
cmp
or
lcall
and
js
fmull
add
push
adc
repnz
or
add
push
ret
mov
jp
testb
fstps
cmp
ret
mov
fiadds
push
mov
jl
mov
movsb
xchg
lret
bound
push
add
loopne
pop
sbb
and
mov
or
xchg
lahf
aad
lods
lock
sub
or
addr16
lds
jge
cs
int3
scas
sub
pop
add
mov
jns
outsl
fstpl
push
lret
int
pop
fisubrl
xchg
push
push
xor
xlat
fbld
sbb
add
cmpsw
and
imul
loope
repz
cmc
imul
add
xchg
mov
add
xchg
arpl
mov
cmpsb
add
sbb
jb
addr16
insl
cld
andb
push
in
sbb
push
sbb
mov
xor
ss
xor
or
mov
scas
repz
cltd
add
sbb
jne
adc
in
and
sbb
sysenter
mov
es
xor
dec
mov
lods
add
add
cmp
xor
xor
jbe
xor
jns
flds
cmp
cmpsl
jns
test
fs
adc
repnz
leave
fstpl
mov
dec
rolb
xlat
adc
cmp
fcoms
xor
dec
push
or
push
add
int3
insb
adc
pushf
inc
cmc
mov
sub
add
jb
mov
sbb
inc
in
fcomps
or
jle
cmpsb
cmp
dec
fstpl
cmp
cwtl
add
fisubrl
xor
enter
and
add
shlb
cmp
jl
sub
scas
mov
popa
fildl
sub
cmpsb
push
mov
ss
pop
clc
aaa
push
pop
aas
pushf
and
mov
sarb
fdiv
push
jne
shrl
mov
add
into
fstpl
jb
adc
add
lcall
add
push
nop
das
lret
std
add
and
push
rcr
repz
in
xchg
cmp
push
jbe
pop
mov
stos
fs
push
aaa
add
pop
pop
cs
out
fwait
das
popa
fsubr
stos
aas
pusha
jbe
mov
lret
xor
fcmovnbe
fwait
adc
xor
add
out
mov
xchg
mov
pop
movsb
fbld
aam
pop
and
pop
roll
xchg
push
jae
mov
add
scas
mov
in
add
xor
ds
mov
out
mov
data16
cmpsl
mov
lret
push
add
fimuls
add
xor
test
mov
lock
adc
test
lea
sub
or
inc
adcb
std
movsb
jns
imul
jb
out
hlt
insl
xor
loopne
das
adc
iret
push
lods
mov
mov
mov
adc
inc
fnsave
add
adc
push
rorl
add
dec
movsl
ret
or
ja
loop
xchg
xor
fnstsw
sbb
mov
cmp
pop
add
push
inc
and
xor
loop
int
mov
xlat
fidivs
xchg
cmp
ret
dec
mov
and
aaa
mov
leave
push
in
shll
lods
jnp
mov
adc
cmc
scas
cmp
decb
fs
adc
loop
bound
or
out
fstps
mov
mov
add
cmp
sub
and
xorl
pop
sub
fstps
xchg
mov
fimuls
pop
loopne
cmp
mov
lods
add
cwtl
push
cmp
add
lea
cmp
mov
scas
xor
std
add
push
add
nop
sbbb
scas
es
cmpsl
mov
or
stos
lcall
jo
adc
xor
push
test
mov
ss
das
jg
mov
adc
insb
rcrl
clc
mov
xlat
jmp
loop
sbb
cld
push
out
ltr
test
xchg
loop
mov
and
repnz
rclb
negl
sbb
add
aas
stc
shrb
mov
andl
out
xlat
jmp
add
fdivrl
popa
inc
jecxz
das
mov
int3
xlat
mov
xchg
lds
test
mov
dec
mov
and
jge
icebp
cmp
inc
sti
pop
sbb
outsb
add
out
jae
sahf
lcall
xchg
bnd
jg
ret
cmp
dec
pop
mov
lret
mov
ficoml
movsl
push
push
cld
lds
adc
add
push
daa
cwtl
incb
rol
pop
dec
xlat
loop
fcmovne
rol
push
cmp
cmp
data16
les
repnz
sbb
sbb
ss
add
movb
pop
lea
jmp
aas
loopne
add
iret
adcl
dec
jne
loope
fcoms
ret
aas
xchg
shll
add
sbb
repz
movsl
add
mov
movl
out
mov
mov
sub
test
aam
pusha
out
ds
lds
lret
add
cld
dec
das
mov
ss
movsl
out
sub
dec
enter
jp
or
sub
push
bound
jge
es
or
xor
mov
mov
mov
sub
rol
shr
lret
fdivrl
les
das
mov
xor
enter
lds
cmp
outsl
cmp
mov
fcomp
loop
iret
mov
push
fidivs
sbb
mov
and
pop
inc
in
leave
add
inc
xor
add
subb
push
movsb
add
shl
push
jae
in
loop
jl
mov
dec
iret
sbb
aaa
rorl
js
mov
lock
push
pop
inc
add
mov
sbb
cmp
push
sub
mov
inc
sahf
mov
roll
mov
jo
jle
out
jl
push
stos
lret
es
jbe
in
and
enter
addb
es
test
adc
jge
and
pushf
mov
dec
aad
jo
jns
jbe
test
repnz
enter
xchg
jl
xchg
add
out
cmpsl
fstl
repnz
sahf
sbb
sbb
xchg
filds
add
fisubl
lods
repz
adc
mov
push
outsb
std
cwtl
adc
mov
sbb
add
inc
pushf
gs
sbb
icebp
xor
xchg
ds
and
test
add
int3
ror
test
xchg
mov
aaa
in
pop
movsb
out
rolb
add
pop
or
jecxz
pop
mov
iret
push
jbe
shl
cmp
mov
mov
outsl
mov
ja
pusha
bound
ljmp
mov
daa
adc
hlt
pop
mov
cmp
cld
fidivl
or
data16
test
das
lock
add
repz
xchg
int
mov
add
adc
ret
fwait
sbb
fiaddl
add
xor
scas
sub
fsub
lret
ljmp
insb
add
out
jnp
ss
cwtl
cmp
xor
mov
add
pop
dec
cmpsl
xchg
loop
pop
push
jne
jp
add
mov
lret
adc
add
and
xor
xlat
clc
pop
test
repnz
imull
push
decb
in
jle
mov
xor
cld
mov
add
xchg
cmp
mov
jmp
mov
add
adc
jmp
imul
sbb
movsl
mov
rorl
cmpsb
sub
cmpsl
aaa
test
mov
shlb
xchg
xchg
das
pusha
lock
jno
xor
mov
add
xchg
push
imul
mov
imul
testl
add
out
inc
mov
cmpsb
cmp
scas
xor
das
mov
inc
out
push
pop
in
mov
xor
pop
pop
nop
cld
sbb
out
add
sub
clc
cmpl
xchg
js
add
mov
cmp
pop
adc
jg
jnp
push
or
xchg
xor
dec
pop
jl
cwtl
inc
jae
add
lret
sbb
xor
add
mov
inc
add
xchg
or
aaa
inc
add
test
mov
fdivp
ja
cmp
add
jl
mov
xchg
stc
push
fxch
push
outsb
mov
cmp
jecxz
dec
arpl
mov
mov
popa
add
in
js
andb
enter
xor
jns
or
add
in
xor
sub
sbb
xor
clc
popa
add
fnstcw
add
jns
mov
jae
cmpsl
inc
add
mov
adcb
jbe
mov
mov
or
jb
and
int3
mov
add
adc
and
mov
pop
call
push
in
inc
pop
in
push
scas
push
repnz
add
inc
jp
add
popf
push
scas
sub
add
xor
std
add
shrl
rep
push
fdiv
cmp
mov
push
arpl
add
pusha
insb
in
mov
pop
lods
fisttps
fwait
push
sbbl
popf
cmp
sbb
adc
xchg
arpl
mov
pop
adcl
popf
xor
cmp
fcomps
push
mov
xor
jns
nop
aam
push
shlb
in
arpl
js
add
inc
cmpl
in
or
xor
stc
mov
sahf
xor
insl
scas
ret
mov
mov
daa
sub
enter
inc
js
jo
jns
mov
push
or
mov
outsb
add
push
movsb
in
ficompl
ljmp
cli
incb
mov
mov
inc
and
cld
push
outsl
test
daa
call
and
mov
cld
vmovq
sbb
in
shlb
in
add
sbb
xor
loop
mov
mov
cwtl
xor
jb
out
xlat
sbb
aaa
mov
add
shlb
test
imul
push
les
and
xor
imul
pop
les
xor
popa
ss
add
ds
ja
inc
inc
les
sbb
fisubrs
leave
adcb
fstpl
pushw
mov
imull
lods
mov
sbb
orl
cmpsl
add
push
fcoms
pop
loop
mov
and
scas
pushf
fimuls
pop
dec
xor
cwtl
push
movsl
shrl
mov
or
jmp
lahf
mov
xchg
or
mov
xor
pop
test
push
cld
lea
das
adc
jbe
dec
int
mov
pop
pop
add
xor
outsl
inc
lds
movsb
pusha
and
pop
inc
nop
sub
das
xchg
xlat
out
aad
mov
test
or
arpl
adc
and
sbb
push
clc
cmpsb
cmpsl
test
aam
cmp
pop
loop
or
add
and
das
sti
adc
xchg
push
adc
xlat
mov
scas
test
adc
movsl
cmc
xchg
sub
inc
mov
mov
add
rcl
ja
leave
or
ds
add
fcoms
dec
and
push
add
sbb
fiadds
out
sub
adc
lods
cmc
popa
popf
stos
jne
ret
pop
scas
xchg
push
cmpsb
add
insb
nop
jp
loop
push
mov
fldenv
push
push
movsb
dec
xor
scas
push
fnstenv
sbb
mov
out
ret
xor
xchg
ficoml
dec
dec
inc
and
fucomip
add
push
insl
jb
outsb
in
add
fs
cmovge
push
fiadds
xlat
add
cmp
and
stos
fstl
jl
cmp
sbb
insb
test
add
cmp
ja
push
sbb
lods
adc
add
je
jb
loopne
bound
rcl
lea
es
mov
mov
xchg
ret
and
xchg
imul
add
and
mov
stc
jl
jge
sbb
mov
xorl
outsl
or
add
jbe
cmp
sbb
add
nop
cmpsl
stos
outsl
add
and
cwtl
add
arpl
xor
xor
les
push
mov
pop
cmpsl
sub
sbb
gs
mov
stos
or
add
mov
mov
sahf
or
jo
jmp
divl
testb
sub
cmp
fdivs
mov
add
and
mov
sub
roll
outsb
das
add
mov
std
inc
add
push
mov
jb
out
mov
xor
mov
flds
adc
push
xor
clc
xchg
jecxz
mov
jg
bound
aaa
xchg
std
cmp
xor
and
stos
add
and
jbe
in
mov
addr16
push
mov
sub
cmpsb
xor
fdivr
je
mov
fs
pop
daa
or
out
es
or
push
dec
int
sbb
pop
mov
aam
daa
add
outsb
bound
add
or
in
add
hlt
push
jb
jle
inc
dec
jl
xor
jp
outsl
jmp
add
add
adc
dec
mov
pusha
cmp
andb
seta
sbb
loop
fwait
sub
jl
pop
and
ffree
popf
test
lds
dec
mov
or
jp
jbe
xor
mov
shll
scas
cmpb
iret
mov
mov
pop
mov
jmp
push
mov
arpl
mov
dec
jo
ret
stc
add
mov
icebp
stos
dec
loop
iret
pop
rcrl
stc
add
add
repz
push
in
inc
scas
or
ljmp
inc
cmpsb
sbb
jecxz
les
jns
adcb
inc
sbb
notl
add
lds
addl
insl
cld
subb
pop
jecxz
aam
and
add
ror
mov
pop
lods
mov
addr16
add
xchg
fsubrs
mov
push
pop
cmp
add
mov
add
cmp
mov
pusha
sbb
je
and
push
aaa
or
inc
add
dec
mov
lods
and
dec
push
popa
pop
add
push
cmpsl
jp
nop
add
fsubs
mov
cmp
aas
add
jle
imul
adc
nop
mov
imul
repnz
aaa
jae
or
jo
add
test
add
ljmp
xor
push
or
fmuls
int
aad
sbbl
stos
ds
adcb
cmp
rorl
inc
mov
adc
cmp
test
sub
add
push
mov
pusha
repz
add
and
pop
add
ds
jmp
in
dec
sbb
inc
jno
and
xchg
inc
xchg
movsl
imul
fidivs
shll
or
aad
xchg
imul
out
test
jb
cmp
push
mov
imul
hlt
push
sbb
mov
cltd
jns
movsb
test
inc
add
jp
or
xor
mov
jbe
les
add
cmp
add
add
push
movl
iret
jo
add
mov
xor
add
lock
cmp
inc
and
ljmp
daa
xchg
fwait
sub
cli
les
lock
mov
sub
jae
pop
frstor
sarb
jnp
jmp
ret
sbb
movsb
sbb
mov
add
addr16
cmpb
fst
mov
lods
xor
fsubp
fadd
les
add
mov
ja
push
dec
fs
mov
mov
or
bound
leave
push
test
pop
arpl
and
pop
cmpsb
data16
adc
lds
inc
mov
fbld
or
fwait
xor
movsb
push
mov
movsl
add
fadd
fs
ret
addr16
insl
dec
jo
jb
push
dec
enter
jecxz
movsb
xchg
or
and
in
mov
xor
es
add
cld
dec
add
iret
rorb
leave
push
add
in
mov
add
cld
lret
test
fiadds
push
pop
mov
fistps
fcmovnu
xchg
mov
test
dec
cmp
das
in
cmp
fdiv
dec
mov
xchg
ret
push
and
adc
dec
sub
mov
daa
sti
bound
cs
cld
push
outsb
popa
add
shl
xor
inc
movsl
xchg
xchg
vphaddbq
pop
aaa
push
dec
xor
jmp
mov
lock
inc
jae
xchg
fimuls
jp
cmc
stc
test
pop
mov
cmpsb
pushf
repnz
or
lahf
outsb
lret
fdivl
push
inc
pop
adc
fstps
ss
clc
mov
in
xchg
ficoms
arpl
adc
lret
sub
and
ja
into
mov
adc
cmpsl
lds
stos
scas
and
insl
xchg
fnstenv
inc
lret
icebp
mov
out
mov
das
add
xor
xor
jns
cmp
movsb
inc
fadds
push
mov
insl
jbe
xlat
mov
push
arpl
sbb
lds
mov
mulb
add
cmp
rcrb
mov
pop
jbe
outsb
push
add
mov
sub
stos
mov
jle
mov
repz
bound
cmpsb
cld
mov
mov
sbb
daa
scas
cmpsb
aaa
and
ljmp
subl
das
or
dec
mov
bound
cmp
rolb
dec
sbb
cld
adc
out
mov
xor
daa
and
and
mov
xchg
add
mov
xchg
fs
andb
in
xor
lret
ljmp
dec
js
fcmovne
push
and
outsb
stc
fcomps
pop
mov
adc
fstps
jns
xchg
pusha
sub
decl
je
mov
fistpl
ret
das
insl
lods
mov
jg
movsb
ss
aas
vpaddd
sbb
scas
mov
xlat
fsubrl
adc
rorl
dec
inc
mov
pop
cwtl
jnp
addr16
lret
and
aam
or
sbb
pop
inc
fdivrs
add
and
mov
into
push
mov
ret
push
fs
pop
les
xlat
xchg
lahf
aam
popf
cs
das
inc
sahf
ljmp
daa
icebp
xchg
xchg
adc
jae
test
cmp
mov
mov
lock
cmp
push
sbb
cmp
push
xor
jno
nop
cmp
mov
in
push
ficoml
and
imul
daa
cmp
and
mov
sbbb
push
incb
add
daa
fdivrs
jle
aad
or
fisubrs
sub
loop
es
cmpsl
imul
adc
cs
sbb
xor
add
int
sbb
mov
scas
ror
std
pop
leave
pop
add
xchg
mov
dec
dec
fidivs
inc
lock
add
fs
outsl
sub
cwtl
xchg
subl
test
insb
xor
sbb
cmc
lds
dec
jbe
test
cmp
std
push
jns
adc
and
js
faddl
fimuls
shr
cmp
xor
add
push
adc
add
pusha
cmp
xor
cmpsb
mov
jbe
notb
shlb
adc
in
adc
cmp
cmp
test
xchg
and
mov
cmp
dec
mov
test
mov
jg
and
leave
inc
pop
dec
adc
cmp
xlat
shll
push
inc
lods
fisubrs
or
cmc
xor
in
and
mov
cltd
adc
xchg
cmp
lock
jns
stc
rcrb
mov
push
sub
enter
adc
cmp
pop
mov
adc
dec
sub
jne
jb
jns
push
jno
pop
sub
dec
dec
rolb
scas
sahf
adc
adc
and
pop
loope
push
dec
test
add
dec
push
xor
cmpsl
test
mov
sub
shlb
mulb
jns
outsl
repz
fildll
pop
mov
insb
aad
out
mov
jb
fcompl
ljmp
enter
sbb
in
push
loope
sub
xor
gs
rcr
mov
inc
dec
lcall
and
sbb
sbb
xor
inc
push
sbb
fisubl
lock
add
and
scas
push
add
xor
test
fldenv
inc
insl
es
ja
adc
add
jno
adc
ret
test
pop
mov
mov
mov
push
dec
repz
ja
rol
dec
adc
pop
and
les
add
dec
aam
jg
add
cld
ret
sub
int
lcall
xchg
push
mov
mov
leave
pushf
xor
aas
roll
test
lahf
inc
mov
pop
xchg
cmp
sub
lods
in
stc
nop
cmpsl
and
fwait
push
mov
in
xor
push
icebp
push
movsl
jns
add
mov
xchg
jp
lock
aas
add
shr
popf
lret
das
xchg
and
in
stc
cmpb
add
int
dec
mov
lahf
or
add
mov
mov
in
cmpsb
push
adc
int
push
test
shrb
xor
pop
cltd
pusha
jb
pushf
and
outsb
xchg
mov
adc
adc
inc
mov
inc
and
stos
or
lods
add
xor
hlt
es
or
mov
jbe
ret
adc
jp
lods
jecxz
adc
repz
push
aad
fcomps
mov
add
push
sub
scas
out
xchg
jb
mov
xchg
lahf
lds
inc
sbb
fsubl
sbb
rcl
sub
jnp
and
dec
pop
jo
fmull
gs
xchg
or
adc
dec
movsb
push
push
add
xchg
mov
add
xorb
out
xchg
xlat
rcr
pop
adc
adc
push
std
mov
dec
iret
es
outsl
cltd
xchg
clc
hlt
jp
and
or
and
xchg
mov
sub
imul
rorb
mov
test
ret
test
scas
jmp
add
sub
scas
mov
hlt
push
xchg
add
add
out
cmp
jbe
jnp
das
mov
and
adc
lods
add
orl
add
adc
roll
lea
jb
std
pop
aas
les
adc
arpl
add
mov
inc
xlat
leave
shrl
and
sub
or
mov
lods
fmul
icebp
jecxz
int3
pop
mov
cmp
repnz
push
mov
in
push
icebp
outsl
inc
enter
or
jl
xchg
stos
das
insl
scas
aaa
jbe
cli
or
mov
add
xchg
pop
mov
cmp
jle
jmp
cmp
in
jbe
daa
cmp
mov
and
adc
xor
cmp
jecxz
xlat
inc
data16
or
add
stc
xchg
icebp
mov
dec
lret
adc
std
mov
mov
jl
xor
nop
stc
xchg
mov
testb
mov
outsl
cmp
lahf
add
dec
adc
sbb
inc
mov
mov
mov
inc
pop
push
adc
adc
loopne
mov
mov
push
int
repz
jl
or
add
out
pop
mov
sbb
fwait
add
fs
cmpsb
cmc
testl
jo
outsl
mov
dec
mov
mov
inc
out
lds
push
fldcw
loope
jbe
mov
daa
push
ficomps
xchg
dec
and
jecxz
adc
cmc
add
cld
add
jl
mov
adc
notl
je
dec
sbb
bound
lea
mov
in
pop
xor
aad
movsl
jnp
xor
cld
or
subb
out
inc
cmp
cmp
xchg
repnz
jbe
nop
pop
iret
jnp
cmc
or
sbb
dec
and
cwtl
sbb
jmp
js
mov
lret
push
nop
mov
lcall
and
dec
gs
les
adc
cmpsb
fdivs
jp
les
imul
jb
push
add
push
mov
lock
movl
xor
lret
jl
adc
add
dec
jmp
lods
iret
ret
jo
arpl
repz
daa
and
add
add
xchg
xchg
mov
fmuls
call
jns
mov
pop
jmp
das
mov
mov
jecxz
sbb
es
push
xlat
inc
clc
shlb
inc
cltd
adc
imul
ret
fstl
or
shll
out
add
push
loope
imul
mov
outsl
jge
addb
mov
mov
pop
out
out
lahf
pop
rcll
push
test
movsl
jb
dec
pop
hlt
outsb
mov
xchg
fistl
daa
mov
mov
fisubrs
cmp
out
loop
push
cmpl
aas
stos
jne
insl
add
add
xor
mov
xlat
in
mov
jae
fs
jno
stc
push
jp
jle
mov
pop
mov
xor
mov
sbb
addr16
jp
adc
and
fidivrs
pop
jns
scas
add
cmp
push
fcoms
xchg
ljmp
sub
fstps
pop
mov
lcall
adc
jbe
je
and
sub
stos
push
cli
test
repz
addb
dec
fwait
xor
xchg
outsl
or
inc
adc
add
dec
or
mov
fisubrs
stc
pop
fsubrp
jecxz
es
and
and
jp
jne
cmp
fs
jno
pop
cltd
testb
pop
out
sarl
add
add
sub
fisubl
cmp
dec
inc
cmc
add
cmp
add
xor
add
mov
ja
cmp
xchg
jmp
repz
aad
dec
movsb
sub
jmp
mov
daa
jmp
cmpl
add
add
in
fs
add
jne
adc
loopne
sbb
cmp
xor
lret
adc
lods
adc
xor
cwtl
je
sbb
add
cmp
jbe
adc
sub
and
cmp
pop
stc
daa
jp
lldt
xor
jns
sub
jmp
out
mov
in
or
add
mov
mul
fidivrl
mov
and
mov
jbe
jp
hlt
stc
and
stos
mov
out
xor
fiaddl
sub
sbb
cmpsb
or
fnsave
pop
lret
adc
sbb
mov
and
cmpsb
fidivrs
je
cmpsl
adc
pop
xor
sarb
jle
fimull
in
repnz
mov
test
mov
bound
add
jb
push
push
and
add
aas
xor
cmc
mov
pop
popa
dec
add
jbe
adc
or
add
cmp
pop
mov
repz
cs
das
fs
lcall
lods
enter
fisubrl
and
jb
je
dec
fadds
pop
mov
inc
mov
sub
popf
scas
cmp
scas
or
adc
sbb
mov
lods
mov
lcall
pop
call
push
das
sub
imul
int3
mov
stc
push
jb
mov
ss
insl
ds
and
sti
mov
or
mov
jae
mov
and
call
daa
mov
mov
fiaddl
mov
clc
add
mov
jb
sub
push
jle
jae
mov
stos
add
dec
xor
fdivs
xor
lds
negb
sbb
push
hlt
cli
jae
pusha
or
add
lods
cmp
add
sti
das
arpl
shll
add
cmp
daa
or
xchg
mov
ret
dec
dec
movsb
mov
sub
iret
fs
add
and
imul
icebp
or
fmuls
adc
lcall
add
gs
and
pop
pop
fistpl
leave
bound
add
int
notl
xchg
fisttps
or
add
mov
repnz
sahf
or
shll
inc
cmpsl
mov
dec
mov
mov
jbe
add
xor
jmp
test
bound
mov
pop
fs
sbb
xchg
insl
loop
ljmp
outsl
add
divl
and
int
lret
pop
inc
dec
mov
insl
pop
pop
jle
mov
sub
inc
outsb
nop
call
dec
lock
cmp
push
lods
mov
mov
imul
jo
stos
inc
sub
push
insl
sub
lea
mov
sbb
repnz
sbb
sbb
call
push
test
jmp
cmp
ljmp
sti
sub
add
push
pop
push
and
inc
add
scas
iret
mov
jns
sarl
sbb
and
sbb
xchg
sub
int3
lret
mov
mov
dec
push
test
shll
xchg
push
cmpsl
jecxz
jmp
push
dec
pop
jae
pop
in
stos
pop
mov
inc
cmp
enter
stc
shlb
cmp
add
dec
pop
movb
and
mov
push
adc
jb
cmp
stc
idivb
dec
out
add
adc
test
adc
icebp
push
cmp
jge
mov
sbb
cmpsb
jnp
fidivs
repnz
inc
jns
gs
dec
aaa
mov
ja
mov
imul
add
mov
mov
xchg
sbb
push
pop
pop
gs
inc
adc
sbb
movsl
and
add
push
cmpsb
outsl
sbb
push
add
sahf
cltd
mov
pop
es
ret
cmp
mov
or
mov
xor
mov
xlat
repz
pop
mov
mov
or
mov
mov
xor
add
mov
loopne
adc
orb
movsb
fisubrs
mov
leave
jbe
adc
xor
cmp
cmp
repnz
jns
and
and
cmp
imul
pop
in
xor
cmpsb
xor
inc
dec
nop
js
test
or
xchg
sbb
jg
cld
scas
dec
mov
add
lea
mov
pop
not
call
push
mov
xor
lea
out
mov
xchg
sub
pop
sti
push
jns
add
mov
outsl
in
jp
xor
nop
bound
pop
outsb
jbe
and
fistl
push
ds
pop
imul
jge
mov
sbb
add
fxch
xor
fmuls
iret
jbe
sbb
mov
mov
shlb
push
repnz
sbb
mov
out
mov
sahf
aaa
inc
push
pop
xchg
push
inc
lea
and
mov
xor
mov
pop
xchg
idivl
jnp
shlb
jge
jp
rcrl
mov
xor
cmc
add
clc
orl
cmp
addr16
sbb
jns
add
enter
inc
aam
dec
outsl
xchg
add
sbb
add
add
pusha
push
aaa
clc
fidivl
outsl
sbb
cwtl
arpl
movsb
add
in
ss
add
add
or
jge
add
push
mov
cmp
xor
sub
mov
adc
or
xor
dec
insb
pop
cs
mov
daa
inc
add
or
int3
cmp
arpl
aad
sub
or
add
bound
rol
mov
mov
inc
add
ret
mov
sub
fisubl
fstps
stc
or
sbb
cmp
shll
pop
test
stos
dec
bound
xlat
fstl
adc
pop
mov
sbb
dec
loop
repnz
fwait
jmp
dec
in
or
loop
xor
and
mov
inc
add
or
test
stos
aaa
add
mov
std
dec
out
fiaddl
cmpsb
mov
dec
xchg
or
daa
sbb
enter
xlat
push
mov
fdivp
or
pop
cmpsl
fimuls
xor
or
inc
cmpsb
push
sbb
fs
push
out
mov
push
mov
dec
cmp
xor
fimull
dec
ret
xor
sarl
and
es
mov
insl
mov
adc
xchg
imul
sub
add
mov
xor
or
adc
fdivrs
jp
mov
ficomps
or
adc
mov
icebp
insb
cmpl
in
push
adc
out
xchg
adcl
jb
ljmp
cmp
lret
mov
adc
inc
jp
movsl
sub
aas
ljmp
mov
fiaddl
and
outsl
xor
add
cltd
adc
add
sar
aam
ret
fwait
add
add
inc
mov
cmp
add
and
add
or
arpl
fiaddl
aam
xor
les
cli
add
scas
ja
jno
sbb
iret
add
int3
aaa
pop
mov
cmp
adc
adc
dec
enter
add
dec
mov
and
mov
sub
fwait
mov
cmp
xor
and
movsb
pushf
gs
enter
cld
and
pop
mov
repnz
push
mov
sbb
cmpsl
mov
mov
xor
xlat
into
aaa
pop
mov
jbe
inc
movsb
mov
mov
sbb
popa
mov
adc
mov
cli
sub
mov
dec
mov
jmp
cmp
pop
outsb
push
xor
popa
jg
out
cmp
daa
cli
jmp
add
aas
cwtl
jecxz
lret
jne
gs
inc
cltd
add
jno
outsl
add
jb
push
in
xor
xor
jno
jecxz
push
aaa
jl
cmp
or
xor
enter
aaa
jno
push
adc
xor
add
es
data16
adc
mov
ja
pushf
jnp
cmpsb
mov
enter
xor
lods
mov
es
or
lods
xlat
sub
test
xchg
mov
add
xor
push
fisubrl
pop
inc
ss
jmp
das
aaa
enter
add
aas
push
test
cmp
add
int
popa
aaa
sbb
insw
adc
test
inc
cmp
shrb
add
enterw
inc
stos
clc
frstor
sbb
add
arpl
xor
sub
test
add
test
arpl
cmp
pop
add
cmpb
xor
jp
fadd
inc
insl
in
jo
mov
fs
xor
cmp
adc
push
es
add
nop
mov
clc
aaa
dec
jbe
sti
push
lret
cmpsl
mov
icebp
fisubl
mov
sbb
mov
sub
xlat
or
xor
sbb
mov
mov
mov
pop
pusha
mov
ja
imul
pop
mov
cmp
std
divl
add
mov
lcall
and
sahf
mov
jecxz
add
outsb
lahf
lds
fisttpl
sbb
mov
loope
pop
cmc
stos
and
and
icebp
add
xor
inc
inc
mov
and
xor
ret
fidivrs
lods
imul
cmp
movsl
adc
push
push
sub
int3
or
hlt
gs
dec
mov
jo
popf
fcmovbe
xchg
arpl
pop
shlb
fsts
push
sub
dec
ja,pn
xlat
arpl
jge
mov
pop
adc
in
dec
xor
dec
push
loopne
add
push
lods
mov
cmpl
movsl
lret
outsl
mov
sub
sbb
xor
loop
or
sbb
lods
jae
push
dec
cltd
inc
and
push
sbb
mov
push
cltd
pop
lcall
cmp
or
and
xchg
xchg
rolb
outsl
orl
pop
loop
sbb
dec
push
xor
loope
pop
pop
inc
je
adc
out
in
fadds
jle
add
jbe
in
xlat
sbb
fcompl
add
sub
add
xchg
repnz
sub
mov
cmp
fwait
in
xor
loop
push
jle
popf
lock
add
or
cmp
shlb
iret
cmp
pop
xchg
mov
lcall
arpl
mov
inc
cmp
mov
sbb
cld
xchg
pop
add
mov
pop
dec
les
adc
mov
add
and
in
and
jl
add
jge
add
add
jb
jae
pusha
and
aaa
outsb
dec
shl
mov
xor
stos
es
mov
and
insb
mov
mov
clc
inc
mov
enter
sbbl
pusha
ret
adc
mov
cmp
xor
xor
leave
fidivs
mov
movsb
add
stos
lock
clc
inc
add
mov
xorb
es
fsubs
rcl
insl
mov
loop
fadds
push
add
loopne
lds
rcl
mov
adc
les
jb,pn
andb
ss
popf
in
repnz
dec
adc
inc
fbstp
xor
mov
dec
out
mov
daa
fbld
cwtd
xchg
inc
cmpb
adc
mov
loop
jb
test
and
push
inc
push
pushf
stos
nop
mov
add
stos
je
out
or
std
adc
shll
cltd
notl
jbe
jle
mov
pop
imul
jno
leave
push
call
out
push
xchg
add
aam
popf
mov
rcll
lds
out
cwtl
fisubrs
sbb
mov
and
cmpsl
fadds
jecxz
and
imul
out
cmp
dec
pusha
in
mov
or
into
loopne
mov
ret
popf
clc
sbb
ja
jnp
jg
das
dec
add
and
jl
fidivl
xchg
adc
inc
out
pop
scas
insb
repz
push
add
movl
iret
enter
jno
mov
pop
int
sbb
out
sbb
insb
and
int
cmpsb
loope
sub
sbb
jo
xlat
sbb
mov
popf
into
cmc
in
lods
sbb
mov
xor
or
ss
testl
das
mov
sbb
test
fisttpl
jp
sub
mov
ss
add
movd
mov
insl
mov
clc
loop
pusha
add
jge
mov
xchg
cmpsl
ja
xchg
push
fs
movsb
fcoml
jecxz
jp
mov
add
ror
dec
jle
adc
jae
or
pop
aas
mov
enter
ret
push
repnz
cmp
and
mov
fwait
in
stc
insl
cmp
sti
add
cmp
mov
aaa
fwait
or
or
dec
aas
outsb
shlb
cmp
imul
pop
sub
clc
xlat
fsub
pop
jg
test
testl
cltd
es
nop
ficoml
rcl
add
jmp
cmp
add
mov
add
xchg
pop
dec
cmpsb
ss
rol
xchg
pop
xor
inc
cmpsl
outsl
and
fdivr
testl
cltd
mov
loopne
dec
sbb
xor
and
xchg
xchg
mov
negb
add
ret
pushl
mov
in
shlb
andl
mov
outsl
sub
xchg
add
out
and
add
sbb
add
xchg
sbb
cmp
jo
or
add
call
ret
loope
sub
pusha
mov
add
xor
fildl
pop
xor
xorl
xlat
jnp
adc
sbb
scas
mov
dec
push
jb
aad
and
fiadds
pop
icebp
xchg
roll
or
es
inc
das
cmp
or
in
add
loopne
in
mov
pop
push
and
add
rol
nop
mov
and
je
push
sbb
jl
add
lret
aad
pop
fidivs
stc
xchg
xor
pushf
mov
fisubrs
cwtl
or
sub
ja
ror
mov
xchg
add
inc
mov
rolb
cmp
adc
outsl
mov
decb
add
mov
pop
jbe
lcall
jnp
repnz
pushf
mov
add
aam
fnstenv
iret
subb
loopne
sbb
push
inc
in
sub
fisttpll
cld
jl
sbb
cmp
insb
fiadds
leave
ret
out
hlt
mov
loope
cli
rcr
and
out
or
cld
mov
sahf
outsl
pop
pop
xor
add
js
je
sti
int3
add
in
rcrb
imul
das
mov
push
cmp
xchg
in
adc
outsb
adc
inc
xchg
push
pop
mov
push
push
push
mov
jnp
fcompl
pop
ds
adcl
dec
ds
stos
je
sub
sub
das
hlt
aad
cwtl
fwait
cltd
xchg
xorb
fsts
sub
add
mov
imul
adc
notl
in
add
nop
popf
outsb
iret
mov
xor
jp
push
cmp
pop
and
push
cld
dec
add
je
add
add
nop
inc
pop
mov
dec
jl
mov
xchg
xchg
or
add
xor
cwtl
cmp
sbb
and
inc
icebp
loopne
xor
mov
mov
outsb
pop
fldt
dec
xchg
in
les
rcl
aad
repz
xchg
movl
mov
ja
leave
inc
add
sub
lret
mov
scas
xor
jbe
xor
sbb
push
pop
add
shll
arpl
mov
add
mov
dec
mov
xor
add
pushf
ss
mov
aas
add
inc
jp
test
add
call
add
std
in
scas
cltd
add
jb
stc
sbb
dec
adc
ficomps
popa
mov
lret
sbb
pusha
iret
rclb
xchg
fwait
pop
xor
jmp
dec
clc
mov
std
rcr
add
jae
inc
fmull
loopne
push
scas
arpl
out
sahf
call
rol
dec
daa
and
dec
movsl
shl
popa
mov
xchg
je
fsubrl
pop
and
out
ja
xlat
push
ret
icebp
test
and
add
push
fiadds
popa
lret
xor
xor
mov
mov
cmp
stc
hlt
lds
add
out
imul
ljmp
sbb
mov
ja
das
adc
cmp
and
adcl
imul
imul
stos
push
lea
shll
push
outsl
lret
loope
sahf
dec
sub
inc
flds
inc
je
cmp
cwtl
std
adc
xchg
ds
pop
xor
int
push
jle
push
clc
fcmovnu
pop
repnz
fwait
mov
hlt
inc
mov
cmpsb
add
test
mov
loop
scas
mov
call
data16
dec
out
add
lahf
leave
push
loopne
push
mov
in
insb
adc
in
int3
jbe
lea
cmp
add
push
stos
mov
shl
push
cmpsl
test
ficoms
test
lds
mov
or
push
dec
add
addb
add
or
xchg
pop
cmpsb
out
lret
mov
add
into
int
xor
test
add
and
stos
and
mov
fwait
or
cmp
imul
and
add
jmp
pushf
cmp
out
cmp
test
add
in
cmp
out
pop
pop
adc
jb
cwtl
pop
stc
cmp
or
and
adc
or
xor
js
data16
arpl
lock
or
xlat
popf
adc
mov
mov
xchg
adc
jg
mov
mov
xor
add
fnstcw
mov
adc
popa
je
mov
stc
dec
and
jns
sub
fwait
mov
mov
push
hlt
push
mov
xor
enter
inc
cmp
idivl
lret
out
or
pop
outsb
add
adc
sarl
add
mov
dec
movsb
dec
xchg
mov
cmc
popf
popa
mov
out
sbb
clc
nop
add
cmp
test
in
fidivs
insb
push
push
pop
out
dec
lea
xorl
dec
mov
push
lret
jge
scas
and
add
sbb
or
fcomp
div
mov
int3
sub
and
aas
mov
mov
dec
outsl
in
dec
cmp
jns
ja
and
lret
cmp
daa
cmp
cwtl
jmp
fmul
jne
int3
cmp
cmp
xchg
sub
pop
fcomi
or
or
cmp
pop
adc
enter
xchg
jl
sbb
add
stos
mov
cli
test
and
adc
xor
pop
fcom
in
movsb
adc
mov
add
enter
add
clc
dec
cmpsl
xchg
mov
ja
pop
int3
mov
or
stos
mov
iret
cmpsb
inc
lcall
enter
nop
xor
out
mov
add
xchg
testb
mov
pop
xor
fistl
sbb
and
pop
arpl
sub
sub
daa
xorb
lock
xor
dec
cld
fnstcw
push
fiaddl
shll
das
enter
dec
jbe
sbb
mov
std
imul
add
dec
dec
gs
loop
xchg
pop
push
es
sub
fsubrs
shrb
popa
and
and
hlt
in
jae
mov
add
and
push
jns
fbld
cmc
dec
push
push
repz
pop
fidivrl
inc
inc
iret
int3
xlat
cld
and
cmp
lcall
sbb
add
and
ret
jne
mov
mov
cmp
in
add
clc
inc
daa
jg
addr16
sbb
add
xchg
imul
or
sub
imul
bound
or
icebp
and
nop
inc
mov
sub
daa
outsl
push
cmp
mov
les
mov
cli
and
bound
test
loope
mov
mov
cmp
push
aad
push
ret
and
fisubrs
jmp
fiadds
pop
testb
js
push
sub
add
inc
idivb
push
push
lret
inc
mov
add
inc
xchg
pop
jg
ret
xor
sub
dec
xchg
cltd
cmp
add
mov
out
mov
push
fmull
cltd
fs
dec
add
jnp
shlb
pop
cmpsb
stos
add
movsl
insb
jl
mov
cld
in
xor
push
pusha
adc
add
popw
into
daa
int3
sub
lea
popa
sbb
pop
push
add
push
shrb
inc
icebp
mov
sarl
jns
mov
flds
mov
fstpt
sti
js
mov
out
leave
pop
negb
sbb
out
adc
cwtl
shll
ja
fdivrs
mov
and
outsb
add
cmpsb
or
pushf
test
add
hlt
xchg
jns
sbb
xor
test
pop
shll
popa
lods
sbb
jle
gs
insl
mov
in
xchg
loopne
dec
xor
mov
sarb
popa
jmp
sbb
xor
rol
aaa
dec
jecxz
ja
rolb
mov
pop
cltd
jne
adc
aas
loop
inc
je
leave
adc
jecxz
inc
dec
mov
add
ret
sub
rclb
mov
and
jnp
adcb
push
test
movsl
mov
jl
jg
pushf
add
mov
sub
icebp
pop
xlat
jp
and
cmp
insb
cwtl
sbb
sub
mov
xor
or
or
push
pop
mov
xchg
push
int
std
mov
lods
stc
mov
imul
cmpsb
or
cwtl
mov
lods
rcrl
lea
mov
adc
and
fwait
mov
mov
ss
jnp
fcmovnu
sub
push
pop
fldenv
fsubs
les
iret
js
in
push
sahf
add
inc
push
das
ret
call
loop
add
subl
mov
push
pushl
or
sbb
pushf
xorb
xor
in
je
fdivrl
adc
leave
movsl
ds
inc
cmc
and
shrl
and
xlat
mov
hlt
dec
push
not
mov
mov
add
pop
xlat
cvtdq2ps
fildl
cmpsl
push
rcr
xchg
movsl
xchg
and
or
int
je
mov
sub
and
cmp
mov
and
aaa
dec
mov
testb
enter
xor
mulb
fldenv
mov
pop
push
xor
sub
into
das
add
dec
jg
sbb
lock
shll
aam
dec
fdivrs
or
mov
int
nop
clc
mov
imul
loop
push
add
adc
xor
and
cmpsl
ret
roll
hlt
movsl
sbbl
mov
and
ret
mov
add
pop
imul
fwait
sbb
dec
scas
and
fs
xor
fwait
mov
insb
lahf
dec
daa
adc
adc
fsubrp
loopne
jo
dec
fsubrs
xchg
and
lret
jbe
mov
movsl
mov
in
mov
icebp
lods
mov
xorl
push
test
mov
stc
adc
mov
aad
outsb
push
cmp
push
test
adc
add
jg
popf
sub
ret
cli
shll
adc
xor
cmp
cmp
cmp
add
mov
aad
arpl
xchg
add
icebp
xchg
sub
cmp
dec
mov
add
adc
cmp
out
fidivs
pop
mov
jg
and
pop
mov
or
mov
fs
pop
xchg
rorl
sub
pop
jae
in
lcall
mov
xor
lret
xorb
add
mov
cmp
inc
or
jge
jno
mov
test
add
dec
xor
or
lret
inc
mov
mov
push
xor
aaa
dec
mov
xor
les
inc
lods
add
inc
add
mov
xor
sbb
movsl
out
xor
call
and
add
push
iret
loop
adc
xor
out
sarb
shll
aaa
mov
out
lods
in
pop
mov
and
pop
sub
lret
dec
mov
lds
adc
arpl
xor
sbb
stos
sub
dec
sub
in
movsb
into
hlt
sbb
iret
jbe
dec
and
mov
mov
jno
js
add
and
xchg
insb
add
xor
cmp
fcomip
lock
nop
fadds
cltd
dec
ja
popf
and
icebp
add
aas
dec
jl
iret
imul
stos
cmp
sbb
rol
dec
outsb
jns
in
dec
jbe
dec
adc
mov
xor
xchg
mov
and
daa
xor
pop
add
out
pop
icebp
inc
sbb
add
jl
cmp
mov
cmp
sahf
in
mov
aas
movsb
fcomp
int
rorb
lds
pop
sbb
enter
pop
jbe
nop
mov
pushf
into
mov
mov
lret
pusha
and
clc
inc
xlat
xor
and
loop
adc
cmp
cli
xchg
lods
mov
scas
call
ljmp
rol
add
sbb
enter
scas
daa
mov
lds
into
andl
loopne
mov
xchg
sub
xor
add
rcll
pushf
sbb
adc
and
inc
mov
mov
mov
add
pop
push
xor
push
adc
loop
mov
mov
pop
inc
sbb
mov
mov
shll
pop
xor
and
pop
loope
mov
inc
popf
incb
aaa
nop
add
data16
jae
inc
test
loopne
cmc
dec
jg
lds
jb
xchg
fsubrs
inc
out
sbb
cltd
mov
rcrl
inc
or
adc
imull
enter
adc
mov
xor
jp
jae
cmp
dec
add
jb
cmp
xor
xor
pusha
mov
movl
test
xor
aas
and
dec
gs
nop
ret
icebp
inc
mov
add
mov
cmp
mov
stc
xchg
outsl
pop
mov
andl
aas
ret
push
mov
ficompl
sbb
inc
push
pop
cmc
pop
cmp
add
jp
lock
fistpl
ljmp
shrb
fimull
mul
add
xchg
sub
shlb
int
shl
pop
jne
sahf
mov
lcall
out
mov
pop
movb
leave
sbb
sub
jnp
or
movsl
aad
add
das
xchg
add
mov
adc
sahf
faddl
add
sub
cmp
add
std
or
pusha
sub
and
in
push
popa
out
push
push
mov
mov
frndint
mov
shrb
fstl
aad
cmp
mov
outsl
ss
lret
add
pusha
sub
or
mov
pop
mov
lds
adc
push
daa
add
sub
cmovs
cs
stc
cmpl
sub
add
jb
jns
in
cmpsl
daa
push
mov
fdivl
cmc
mov
jb
xor
dec
stos
out
mov
or
jb
cmpsb
movsb
sub
xlat
pop
addr16
js
push
and
cld
into
xchg
pop
repnz
adc
in
or
sbb
lds
lret
iret
scas
add
rol
loope
sbb
xor
in
inc
int
add
cmpsb
leave
jns
lret
add
fld
in
gs
add
jle
adc
ss
cmp
xchg
cltd
mov
mov
dec
pop
lret
add
xlat
lret
les
repnz
add
add
jp
cmp
push
xchg
add
shlb
dec
stos
and
nop
out
cmpsb
add
subb
js
xchg
movsb
out
out
outsl
ficomps
stc
xor
out
jp
ficoml
pop
movsb
arpl
adc
mov
cmp
icebp
adc
or
mov
insl
inc
add
mov
mov
jecxz
pop
add
inc
sub
outsl
fisubrs
lods
lds
test
iret
lret
scas
mov
mov
std
out
in
inc
cmp
fsts
xor
xor
add
and
jge
in
fmuls
test
loopne
rolb
aam
popa
adc
in
inc
dec
inc
lock
dec
add
pop
test
cld
mov
iret
enter
jg
add
ss
dec
ret
xlat
cld
int
add
add
xchg
mov
rcl
stos
aaa
int3
add
addr16
add
xchg
add
and
cwtl
push
sub
fcomps
call
and
arpl
xchg
cmp
loop
sahf
test
mov
jg
mov
lcall
roll
int
clc
mov
sarb
xlat
stos
icebp
out
sbb
mov
mov
das
xor
dec
add
mov
add
and
movsb
cmp
outsb
clc
sub
fidivl
fistpll
out
sti
jecxz
push
and
or
add
xchg
popf
test
sbb
cmp
dec
add
push
add
xor
out
sbb
stc
add
jne
xchg
and
out
inc
jnp
pop
xchg
add
lds
add
gs
inc
scas
push
faddl
adc
or
jge
popa
aas
add
add
xor
ss
call
scas
movsl
test
stc
mov
lcall
mov
enter
imull
mov
sbb
mov
popf
xlat
and
ja
add
shll
inc
add
daa
repz
iret
sub
fnstcw
inc
popa
mov
jle
int
imul
lret
jo
inc
and
test
int
jl
mov
pop
lcall
subl
ss
clc
int
xor
push
xchg
adc
xchg
into
call
xlat
ja
fsubr
movsb
daa
fs
mov
orl
cmp
add
ret
mov
incl
mov
xchg
add
mov
addr16
sti
ret
sub
fs
or
push
jecxz
add
cmpsl
aaa
xor
in
addb
das
clc
xchg
cmp
xor
or
fcoms
and
lret
push
ja
jo
xor
xlat
std
fstps
inc
dec
push
mov
fdivs
pop
mov
fists
dec
nop
mov
int
negl
or
mov
cltd
mov
cmp
loopne
scas
dec
icebp
ret
mov
in
pop
push
mov
loope
fidivrl
mov
mov
xor
cltd
sbb
js
in
or
hlt
jl
xchg
push
adc
ret
orb
add
xor
jo
int
sub
scas
test
xchg
fwait
insl
add
xchg
and
and
sub
sub
push
mov
pop
fists
dec
fdivr
mov
sar
xchg
test
add
lock
jns
xor
mov
jl
imul
adc
outsl
out
gs
push
enter
fsubrs
int
add
xchg
jbe
cli
sub
jb
jp
mov
jne
stos
xchg
icebp
push
int3
das
cmp
cmp
mul
out
fisubrs
pop
sub
push
add
sub
jns
mov
jae
push
lea
add
xor
mov
ret
fldt
cwtl
hlt
ret
adc
or
mov
loope
add
sbb
mov
xchg
ror
out
cmpsb
pop
inc
push
adc
cmp
es
out
lods
or
push
rorb
inc
je
add
rcrl
pop
jb
loop
mov
mov
or
lcall
inc
or
mov
rcll
or
fisubs
fisubs
imul
adc
sbbl
cld
ljmp
hlt
scas
mov
xor
and
rcr
pop
mov
sbb
xor
rol
int
inc
scas
add
repz
insb
jmp
xor
test
aam
cmpsb
and
cmp
cs
out
add
dec
xchg
jl
call
cmp
into
cwtl
cs
push
add
pop
outsb
sub
jge
sub
fcompl
or
movb
pop
scas
jno
or
scas
in
sbb
push
jbe
gs
mov
sbb
sarl
xor
mov
push
adc
repnz
sub
iret
sub
cmpsb
and
enter
xchg
mov
icebp
push
dec
std
in
lcall
xor
iret
mov
mov
or
mov
iret
adc
push
and
scas
mov
add
add
mov
jo
shl
testl
aas
stc
adc
sub
js
sbb
add
subl
inc
mov
xor
jns
and
sub
xorb
mov
ret
mov
mov
push
js
dec
popf
roll
and
fstl
rcr
ss
xor
or
pop
js
test
xlat
add
stos
xor
cmp
inc
inc
dec
test
jae
sub
add
adc
mov
mov
add
adc
push
xor
icebp
add
cmpsl
xchg
add
nop
add
rolb
add
pop
xchg
push
push
cld
inc
cmp
inc
test
jge
jae
and
and
xor
add
addr16
call
adc
pop
shll
add
ret
jo
mov
out
movsl
fs
add
addr16
or
cmc
aam
push
add
cmpsl
and
out
xor
and
inc
jl
or
js
fiadds
test
fdivs
inc
fidivrs
test
adc
inc
dec
xor
and
add
lahf
mov
jp
inc
ret
jle
lds
xor
xor
add
or
push
movsb
stos
add
aad
data16
or
pop
stc
cmp
pop
rolb
push
sbb
cld
ret
jle
mov
pusha
and
rorl
das
add
out
dec
rcr
scas
inc
add
adc
popf
arpl
fmuls
mov
cmpl
ljmp
iret
adc
pop
mov
cmc
test
movsl
add
push
push
js
add
xor
add
mov
and
mov
fdivs
sub
mov
push
jo
xlat
xor
stos
mov
inc
daa
inc
out
daa
pop
ret
and
mov
test
fidivl
scas
mov
or
jge
xchg
lods
sbb
adc
pop
aad
cld
jp
add
push
jl
shll
sub
iret
push
xchg
in
fiadds
push
fcompl
xor
cmpsl
add
lods
inc
call
test
add
jae
add
sbb
and
repz
add
arpl
pop
mov
cmpsl
add
dec
sbb
ds
add
and
and
add
xor
add
sbb
in
inc
cmc
inc
rcrb
aas
or
cmpsb
inc
add
mov
lretw
mov
xchg
jl
aaa
cmp
and
repz
mov
cmpsb
add
inc
clc
jae
and
cmpsl
or
xchg
daa
cmp
sbb
mov
and
movsb
jns
ja
sbb
nop
or
add
sbb
test
cmp
aaa
fsubs
jmp
loope
xor
sti
jo
in
jl
add
lea
ret
cmc
rorb
xchg
in
add
adcl
add
adc
add
int3
pop
xor
outsl
add
inc
sti
add
xor
push
scas
jle
in
rcll
xchg
ret
adc
fdivl
mov
movsb
push
addl
stos
sbbl
mov
and
add
mov
dec
jnp
sbb
pop
jo
sub
test
xlat
cld
repz
jno
and
mov
dec
in
pusha
mov
pop
fs
and
lods
add
fildl
out
push
cmpsb
subw
add
or
mov
dec
adc
dec
sub
in
cltd
movsb
aas
js
cmp
mov
dec
jbe
stc
rclb
jae
xor
enter
call
loopne
outsl
daa
sub
mov
cmpsb
cltd
sbb
cmpsl
sbb
add
jge
jae
aaa
das
jno
aam
adc
nop
jo
cmp
outsl
stc
movsl
add
fidivl
push
pop
jge
add
cltd
fisubl
ret
adc
dec
outsl
mov
nop
call
fisubrl
dec
icebp
inc
xchg
sub
dec
adc
mov
push
stc
mov
aad
stos
mov
jns
push
mov
pushl
mov
add
leave
mov
or
jmp
jno
cmp
cmp
out
xor
xchg
and
scas
ss
data16
sbb
int
sub
aas
xor
bound
enter
mov
rcrb
fimull
jb
lock
lds
mov
cmp
jle
add
push
xor
mov
hlt
add
mov
and
fcompl
aas
sbb
lcall
out
xor
in
jae
jb
rcl
aad
cmp
out
push
add
aaa
sbb
aad
adc
mov
bound
pop
adc
mov
push
cmpsb
jne
cltd
add
test
mov
pop
push
les
add
xchg
adc
pop
or
jecxz
hlt
add
outsl
and
jns
in
adc
outsb
nop
aaa
cltd
loope
mov
stos
or
inc
mov
sub
int3
test
push
add
ds
sub
nop
in
add
jl
out
fmul
ds
and
push
xlat
loop
out
sbb
rorb
add
jo
mov
iret
mov
scas
call
add
jbe
cs
lock
push
iret
scas
push
pop
orb
imul
aaa
and
nop
cltd
imul
pop
leave
push
xlat
je
mov
dec
test
lret
inc
mov
out
loopne
or
add
add
aas
push
cmpsl
add
and
adc
ljmp
cmp
or
lds
jae
sahf
sub
pop
or
inc
fdivrs
add
ror
mov
js
es
adc
popa
inc
cltd
insb
fbld
jl
aas
jae
push
sldt
into
stc
mov
out
or
outsl
mul
mov
sbb
das
ret
out
vpunpckhdq
push
mov
ffree
lret
aad
sbb
aam
xor
add
add
loope
fstps
daa
adc
add
les
mov
xchg
data16
cmp
lea
inc
mov
xor
scas
ret
mov
and
addb
cmp
int
mov
fcoms
jl
adc
inc
ret
and
dec
cmp
test
add
or
fcmovnb
inc
mov
jo
sbb
imul
in
cltd
inc
add
lret
add
mov
cmp
push
lods
ret
cmp
xor
lahf
jp
cmp
cmp
data16
int3
sbb
int
sub
notl
cmpsb
push
add
sub
cmp
int
fstpt
cli
inc
xor
pop
xchg
outsb
les
cltd
cwtl
adcl
cld
aaa
mov
inc
jae
and
dec
les
cli
std
add
outsb
add
in
cmp
add
fdivs
lahf
lods
iret
lret
pop
out
pusha
add
and
mov
mov
sbb
shlb
add
sbb
pop
inc
into
ror
sbb
inc
jecxz
enter
pusha
jl
mov
test
mov
pop
imul
add
jp
add
push
jbe
out
cmpsl
cld
add
jmp
loop
je
adc
adc
jb
int
and
mov
mov
add
xor
and
loop
lock
xchg
test
fsubrs
aam
mov
xor
inc
mov
push
mov
cmp
and
in
lods
ds
mov
xor
data16
xor
loopne
push
pop
xor
cmp
jmp
cmpsl
cmp
cmpsb
ss
out
mov
aam
sbb
add
in
das
jns
jmp
popl
divb
into
pop
mov
jbe
add
push
jle
sub
mov
mov
arpl
aam
aas
pop
movsl
ds
test
add
les
xchg
xchg
mov
fisubrs
in
sbb
cmp
or
lods
negl
loopne
and
push
sbb
test
fnsave
sub
sbb
jb
push
jne
into
cmc
roll
or
mov
pop
gs
ret
xor
fsubr
jo
sbb
jecxz
es
ffreep
fldcw
jno
fsubp
xchg
add
leave
xor
stos
adc
xchg
hlt
xor
enter
mov
pop
push
inc
cld
add
fidivrl
rclb
mov
pop
mov
xchg
stc
add
or
test
mov
adc
push
ss
out
push
cwtl
pop
xor
jae
cmp
clc
ret
jb
popa
aaa
fdivr
adc
cmp
inc
pusha
out
sti
jl
adcl
faddp
out
lods
xchg
stc
or
leave
add
cmpsl
cmc
in
mov
shll
add
and
dec
adc
lcall
cmp
nop
fcoms
mov
jnp
mov
or
filds
xor
add
arpl
dec
loope
ss
cwtl
and
pushf
or
into
xchg
push
add
aaa
lock
adc
jbe
data16
and
xchg
mov
cmp
lds
sti
clc
enter
inc
jb
add
adc
sub
ss
js
dec
fsubs
xor
cmpsl
test
add
push
or
jle
dec
fcomps
mov
xor
adc
mov
imul
add
push
rolb
sbb
add
add
ja
fists
push
mov
fs
ljmp
imul
shlb
stc
xorb
sub
mov
rol
mov
cmp
ret
pop
xor
sbb
insb
fidivrl
mov
push
cmp
divl
daa
inc
mov
cmc
mov
mov
add
inc
push
push
mov
mov
pop
xor
jg
xchg
add
xchg
pop
jbe
fdivrl
aaa
adc
push
sar
pop
cmpsb
gs
adc
test
mov
add
adc
ja
mov
pop
push
imulb
add
xor
cmp
out
movsl
outsb
pop
adc
and
push
add
pusha
add
aas
sti
faddl
ret
ja
pop
lods
out
pop
mov
pop
jl
xor
add
lret
mov
mov
mov
cmp
mov
loop
stos
sub
jae
or
inc
js
packssdw
mov
scas
arpl
sub
orl
nop
and
mov
xlat
out
ret
sarl
add
cmp
xor
call
rcrb
add
add
pop
inc
or
sbbb
push
aaa
jmp
mov
xchg
fdiv
cld
fisubrs
sub
jbe
das
inc
add
mov
icebp
adc
and
nop
movsb
xchg
add
mov
test
mov
dec
cld
push
out
xchg
cmp
test
add
mov
mov
adc
outsl
mov
inc
lret
add
es
add
imul
aam
xchg
std
arpl
jae
add
xchg
push
fidivrl
movsl
into
push
xchg
out
xor
scas
jbe
xchg
sbb
shll
add
notl
cmp
xor
xor
adc
test
cmp
loop
add
stos
dec
add
xchg
adc
push
clc
push
jae
or
fimull
add
call
adc
idivl
inc
daa
in
and
aad
andb
xchg
cmpsb
inc
imul
dec
xchg
sbb
mov
add
mov
and
mov
sbb
add
es
das
aaa
xor
bswap
sub
dec
or
add
add
enter
insl
add
jge
popf
scas
loope
sbb
sbb
mov
jle
nop
sub
add
xchg
add
shl
cli
aam
pop
iret
incb
imul
mov
out
pop
xchg
imulb
fdivs
nop
xor
out
cmpsb
add
outsb
addl
and
fadd
xor
xchg
pop
movsb
icebp
daa
add
jle
add
mov
stc
mov
lods
add
mov
out
enter
aas
out
in
adcb
and
add
or
sub
sub
movsb
fimuls
test
add
mov
std
add
and
ret
adc
add
aad
test
sub
add
dec
jl
and
fdivrp
outsb
ret
outsl
dec
pop
pop
cwtl
inc
repnz
sbb
rcl
lock
add
fsubl
flds
and
jecxz
inc
xchg
mov
cmpsl
js
fdivl
sbb
aad
mov
push
add
or
mov
or
out
adc
mov
fadds
add
mov
leave
ljmp
pop
add
jo
jl
imul
cld
add
sahf
mov
movb
aas
or
sbb
stos
in
add
cmp
xchg
data16
add
das
mov
aaa
sbb
add
xor
cmp
add
movsb
push
sbb
pop
adc
jb
mov
xchg
add
out
inc
and
fiadds
pop
leave
loopne
lcall
xchg
aad
out
ret
cmp
repnz
add
data16
sbb
xchg
push
add
repnz
stos
stc
clc
add
xor
fdivs
push
loopne
enter
int
jl
ss
lret
jp
xchg
clc
rorl
dec
lods
inc
aaa
ret
push
add
mov
cmp
cmp
xchg
ret
roll
fs
lahf
mov
mov
movsb
push
add
stos
repz
std
test
add
dec
rcrl
sub
call
outsb
xchg
mov
adc
inc
mov
frstor
pop
fs
push
mov
je
sarb
adc
scas
cmp
clc
cmp
cmp
mov
jge
aaa
mov
pop
add
xor
sub
jp
das
fadd
loop
cli
or
add
popa
push
mov
cmpsb
aas
pushf
jo,pt
cmp
sub
and
or
and
scas
add
add
add
outsb
cmp
es
leave
lret
adc
add
sbb
mov
jl
xor
fimuls
inc
fnstenv
jns
xor
or
push
scas
mov
iret
jbe
ja
jb
dec
lahf
in
add
movsl
mov
sbb
loopne
mov
cwtl
fsubl
je
xchg
sbb
scas
xchg
add
mov
ds
outsb
ror
aad
cmp
test
das
cmp
sbb
addr16
adc
jae
inc
add
xchg
mov
sub
call
das
add
dec
movsl
sub
mov
push
mov
and
pop
ret
cmp
andl
aas
add
and
outsl
push
into
cmp
repnz
in
xchg
push
movsl
fcoms
cmc
mov
xor
xlat
clc
lea
pop
pop
test
bound
mov
mov
aad
fstpt
pop
leave
push
add
add
psrld
insb
mov
pop
inc
cmpsl
add
mov
or
add
clc
ror
data16
jo
add
mov
ret
sub
jb
xchg
and
xor
outsl
mov
pop
pop
sahf
dec
mov
jle
subl
inc
push
mov
dec
test
aad
mov
xor
pop
and
je
mov
adc
add
aam
in
rolb
xchg
in
pusha
dec
add
aaa
dec
int
addl
lods
mov
mov
scas
push
aaa
mov
mov
popa
xchg
dec
ret
movsl
in
cltd
adc
stos
add
pop
lcall
xchg
cld
cmpsl
inc
cmp
insb
mov
push
fsubp
aaa
jo
xor
les
aas
arpl
test
hlt
push
cltd
jo
pop
add
aaa
cmp
pop
jb
idivl
mov
and
vmulss
sbb
xor
outsl
popa
mov
ret
jae
aad
in
push
je
lcallw
or
xchg
cmp
fidivrs
add
and
xor
xor
mov
push
fdivs
push
cmp
aad
sbb
cld
xchg
push
push
fsubrp
add
and
shl
scas
mov
and
xorb
stos
mov
fisttpl
fnsave
jge
adc
pop
fsubp
push
sbb
pop
ljmp
imul
add
jl
inc
add
xor
aad
push
int3
insb
jecxz
inc
mov
and
cld
xchg
fnstenv
repz
mov
pop
andl
mov
xor
in
cmp
mov
out
push
lods
xor
or
add
ret
aaa
scas
add
jo
pop
mov
sbb
cmp
add
dec
sub
mov
xor
adcb
enter
fcoms
dec
add
sbb
jno
mov
lea
decb
cmpsl
add
jle
dec
into
mov
sbb
imul
inc
xlat
jb
jno
sbb
popf
dec
pop
jle
add
inc
scas
mov
and
dec
loop
ljmp
in
outsl
daa
jecxz
mov
insl
jnp
jno
dec
add
mov
into
cmc
les
or
add
fdivl
push
cmp
addr16
xlat
out
adc
push
stc
dec
jge
xchg
fxch
loopne
and
jmp
dec
fnstsw
push
add
mov
popf
out
xor
push
sub
adc
and
xchg
and
push
sbb
or
dec
lret
mov
sbbl
add
fidivl
ret
inc
sbb
pop
loope
inc
sub
dec
push
fmul
int
shrb
cltd
in
lds
cmpsb
hlt
mov
mov
jno
inc
imul
xor
addr16
fdivrp
inc
iret
ret
outsl
mov
sbb
mov
mov
add
jp
addb
sbb
add
jbe
out
fiadds
add
sbb
lods
push
add
cmpsl
add
aas
sbb
arpl
and
test
rolb
jmp
ljmp
xchg
sub
stos
fiaddl
cmpl
mov
xchg
xchg
or
mov
dec
movsb
into
aad
sbb
and
xchg
lea
stc
pop
xor
cmpsl
addb
lret
lds
push
daa
or
ret
nop
scas
cmp
insl
mov
sub
or
push
aad
addr16
add
arpl
repnz
and
out
fwait
sbb
addb
add
ret
and
jbe
repz
std
sub
mov
inc
data16
fcmove
fldenv
jae
into
aaa
add
fsub
sbb
fidivl
or
push
jecxz
cmp
push
push
mov
in
cmp
bound
xor
mov
sbb
add
aad
mov
pop
fisttps
push
pushf
lds
push
in
stc
mov
mov
stc
mov
and
sbb
sub
mov
dec
add
jbe
das
add
imul
js
cwtl
cmp
or
ljmp
clc
adc
les
pop
lods
out
jo
xlat
inc
gs
outsl
mov
icebp
popf
cmc
inc
nop
mov
adc
pop
cltd
xorl
push
outsl
pop
stos
add
fsubs
imul
sub
xchg
imul
loopne
xor
add
into
sub
add
xor
sbb
xor
xor
mov
cmp
jle
out
repz
ds
rol
sbb
call
incb
xchg
cmp
jb
add
dec
mov
jge
insb
arpl
call
iret
or
jl
add
or
lods
dec
mov
cmpsl
mov
mov
and
add
pop
hlt
mov
mov
jae
or
in
es
add
sub
cmp
fistl
sbb
mov
aaa
lret
cmp
xchg
jp
mov
push
aad
and
or
cmp
mov
pop
dec
mov
sbb
in
sbb
adc
mov
add
cmp
add
adc
mov
fsts
les
loope
pop
push
mov
ljmp
add
not
ds
jbe
add
repz
je
mov
adc
jo
mov
sbb
cmp
lods
cmp
xchg
leave
xor
scas
mov
aam
jp
inc
daa
data16
adc
inc
add
cmp
inc
xlat
orb
sbb
stc
test
rol
loop
fs
mov
push
xor
add
mov
jns,pt
add
std
pop
cmp
fiadds
add
adc
insl
and
ds
out
xchg
cmc
jns
pop
jecxz
nop
out
mov
add
sbb
dec
mov
push
add
pop
fldl
lret
out
jmp
movsl
mov
xchg
orb
mov
add
mov
fisubrs
pop
inc
popa
dec
jp
rcrl
mov
jns
mov
add
rorb
testl
sti
push
outsl
dec
bound
out
dec
mov
in
add
mov
mov
push
push
aam
inc
xchg
int3
std
je
ficomps
cmp
adc
test
mov
rolb
insb
outsb
or
decb
add
sbb
cmp
scas
jg
jl
cmp
adc
xor
std
adc
pop
inc
mov
add
test
arpl
dec
decl
fcom
xor
push
test
adc
flds
xchg
cmp
jp
pop
and
sbb
outsl
out
mov
shl
cli
pop
add
sahf
xchg
xchg
adc
lds
ret
fcmove
add
mov
fcmovb
adc
jo
push
cmp
sbb
mul
fcmovu
fmuls
add
mov
fisubs
pop
fsubrp
jae
or
mov
fisubrl
nop
ret
inc
adc
addr16
sub
add
pop
jle
sub
iret
sbb
out
cmp
xor
lahf
add
jg
mov
push
popf
clc
jle
leave
xchg
mov
insl
xorb
movsb
test
add
and
push
fnsave
add
cmc
test
add
nop
dec
add
mov
add
subb
gs
cmpsl
cmp
sbb
insb
inc
pop
xor
js
leave
es
sub
mov
rorl
divb
xor
jns
pop
mov
dec
loop
add
hlt
add
add
jg
rorb
aas
test
jb
pop
add
iret
xor
out
jo
xor
sbb
pop
popa
add
fsubrs
mov
add
push
jle
ficomps
test
xor
mov
les
movsb
scas
test
xchg
xorl
sub
xchg
sbbb
sbb
ret
pop
adc
and
add
cli
fbld
or
aam
jo
pop
adc
repnz
add
dec
push
mov
call
mov
sbb
or
add
repnz
push
push
stos
and
out
xchg
nop
iret
imul
push
pop
cmp
and
ficompl
push
or
mov
push
icebp
pop
arpl
jl
xor
data16
in
dec
push
mov
fs
add
push
mov
psraw
jae
into
add
and
hlt
mov
cmp
inc
loop
and
idivb
push
pop
sub
fwait
lds
xchg
sbb
xlat
sbb
jge
add
fistpll
mov
pop
pop
or
push
lret
mov
or
iret
xchg
xlat
mov
loopne
and
cmpsl
aaa
popa
pop
les
push
add
or
xchg
xchg
xchg
add
in
and
push
cld
inc
push
lea
ret
push
push
cmp
inc
add
xor
inc
adc
scas
movsl
fadd
cmp
add
imul
mov
mov
xorb
lock
mov
mov
push
ficoms
dec
cltd
call
pop
dec
inc
movsl
xor
add
push
or
lods
movsb
fmul
cld
repnz
outsl
mov
inc
rolb
scas
sbb
xlat
jge
scas
inc
fimuls
sub
jbe
xor
mov
enter
mov
mov
test
xor
sub
cli
daa
pop
movsb
push
mov
leave
xor
popa
mov
ret
pusha
mov
xchg
out
call
add
in
xorb
fidivl
mov
add
std
nop
inc
adc
add
cmp
fdivrl
dec
cld
nop
pop
mov
add
mov
adc
scas
push
icebp
iret
push
pop
add
inc
push
data16
adc
xchg
add
bound
jecxz
adc
push
cltd
jae
jl
imull
in
cmp
xor
jecxz
mov
cmp
aad
xor
inc
add
and
add
jae
bound
push
rorl
fdivp
xor
ss
sub
ds
ficoms
mov
adc
pop
xchg
insb
daa
jo
add
jno
lret
add
out
movsb
push
je
xor
add
add
cmp
movsl
mov
mov
jno
stos
enter
in
cmc
push
sub
fiaddl
jae
repnz
mov
add
shlb
sub
and
adc
in
pop
push
pop
mov
addb
push
sbb
scas
mov
imul
call
mov
push
xlat
cmp
test
lds
sbb
aam
mov
adc
sbb
push
cmp
scas
adc
mov
out
loop
fisubl
pop
cmp
pop
sarb
dec
inc
js
adc
test
push
shrl
fimull
loope
repnz
fsubs
imul
mov
pop
xchg
loope
push
adc
andl
test
jecxz
push
push
cltd
ret
push
dec
jp
lahf
push
mov
cwtl
add
pop
inc
bound
lret
or
loope
aas
jae
pusha
xlat
daa
repnz
push
ljmp
inc
stc
jle
push
decl
js
dec
lret
rcrb
sbb
pop
ljmp
dec
aaa
jnp
jnp
lahf
xchg
and
push
out
or
pop
shrl
sbb
icebp
inc
sbb
pusha
or
stos
ret
dec
sbb
mov
cmp
daa
outsb
movsl
add
jnp
or
ljmp
pop
cmp
rcrb
jnp
jg
in
xor
sti
mov
jns
sbb
jns
inc
repnz
ret
decl
test
jmp
cmc
mov
not
dec
sti
das
push
rol
sbb
gs
imul
pop
fwait
dec
scas
dec
mov
push
rcrl
mov
adc
inc
sbb
pop
cli
and
mov
mov
test
sub
cltd
scas
adc
push
repz
shr
imul
pusha
adcl
inc
jo
fwait
adc
push
and
push
repz
pop
mov
loopne
dec
xchg
lds
enter
mov
fcoms
mov
xor
pop
fadds
loope
jb
lret
bound
js
push
push
sti
push
std
fstps
leave
cmp
popf
shlb
adc
shl
push
scas
pop
push
xorl
fwait
push
addr16
push
insb
std
sti
fdivrl
fiadds
xchg
dec
sbb
iret
pop
jg
scas
mov
mov
jnp
sahf
adc
loop
push
mov
lret
dec
lret
cli
xor
repz
rorl
push
dec
loop
test
lret
dec
lcall
mov
repz
arpl
mov
push
xchg
mov
sbb
mov
add
aad
out
jo
add
xor
add
and
push
call
pop
push
adc
mov
dec
inc
jo
mov
hlt
fidivrs
cmp
and
mov
sbb
push
mov
adc
inc
lods
push
decb
lret
lea
add
jnp
clc
or
add
adc
stos
in
lods
push
add
fidivrl
pop
cmp
inc
inc
mov
or
mov
mov
cmpl
inc
out
fisubrs
cwtl
lods
pop
pop
cltd
jp
xor
mov
cmp
inc
loopne
cmpsb
or
sbb
xchg
push
add
jl,pn
mov
jecxz
jmp
out
dec
add
sub
fwait
sbb
add
cmp
fdivs
inc
add
mov
mov
outsl
rcll
lret
cmp
jne
add
andb
add
jl
fidivl
stc
cld
aas
cmp
loope
cmpsl
lock
call
fidivrs
test
jae
mov
dec
and
ja
push
cmpsl
ret
mov
pop
xchg
dec
xlat
mov
dec
fcoml
in
lds
pop
lock
mov
ficoml
imul
adc
aam
pop
or
ret
loopne
inc
jecxz
loop
scas
int
jne
adc
mov
in
fsubrp
cmpsb
adc
stc
sahf
push
jne
loopne
pop
xlat
dec
cmp
mov
daa
xchg
out
add
push
mov
lods
xchg
sahf
fiadds
movsl
mov
add
cmpsb
add
mov
loope
add
jmp
sub
push
adc
fsubrs
fs
sbb
cmp
cmp
inc
add
aad
xchg
xor
xor
jne
jg
jmp
imul
mov
pop
jl
lock
mov
dec
jo
sbb
jb
add
icebp
cmp
xchg
jp
push
std
fcomps
mov
xchg
das
pusha
fmuls
aaa
jo
ror
cmp
sar
pop
and
add
push
and
fcmovbe
or
sub
add
jp
es
xchg
ficoml
or
push
dec
mov
xlat
lea
xchg
jle
jl
stos
cmp
jle
add
cmc
mov
pusha
xor
out
cmp
loopne
das
aad
shrl
inc
add
adc
cmc
jmp
sarl
arpl
es
xor
sub
mov
push
xor
sti
dec
mov
out
mov
jmp
push
add
cmc
or
adc
jne
pop
pop
cmpsl
jbe
leave
loopne
lods
inc
arpl
cli
cltd
imul
iret
jge
add
sub
mov
movsb
fwait
js
inc
repz
popa
cld
mov
mov
and
je
add
dec
push
out
push
std
push
adc
dec
add
rcl
jp
jge
add
mov
pop
sahf
add
push
sbb
xchg
and
sub
stos
cmpsl
add
cwtl
call
ret
xchg
add
or
mov
adc
add
cmpb
movsb
addr16
mov
les
jge
adc
inc
pop
pop
add
sub
int
lea
push
jb
scas
jp
ficoml
mov
icebp
roll
sbb
fimuls
stos
and
sub
sbb
add
aam
inc
fs
stc
jbe
mov
push
and
lret
in
scas
shrl
adc
adc
iret
pop
ffreep
movsl
test
pop
xor
inc
icebp
dec
lock
jmp
xlat
in
std
adc
pop
dec
aam
push
xlat
add
ret
inc
jno
mov
jle
or
lods
and
cmp
std
sarl
mul
lret
lret
jp
jg
cmp
add
jmp
adc
fidivs
jmp
add
ret
popa
add
xlat
lret
push
xchg
iret
push
lea
mov
aaa
test
mov
xchg
popa
cmc
add
push
add
push
push
xchg
sarl
stos
lods
pop
scas
push
mov
pop
inc
leave
sbb
push
mov
push
jbe
es
cmp
xchg
insb
adc
loopne
xchg
fcmovu
sahf
push
xchg
cmpsl
movsl
rcr
shl
cmp
sub
xchg
cmp
push
insb
mov
pop
ficoml
sbb
pop
xchg
push
push
mov
ss
jne
testl
scas
outsl
dec
jbe
push
dec
fwait
jns
jl
add
data16
adc
mov
dec
jae
stos
inc
out
pop
push
into
push
scas
aad
jecxz
addl
cmpsl
in
test
add
dec
icebp
out
mov
add
stos
xor
push
js
jge
xchg
aaa
lret
movsl
jno
push
adc
push
inc
pop
scas
pop
in
cmpsb
inc
cmpsb
xlat
cmpsb
xchg
dec
add
jne
push
mov
lret
mov
aad
cmp
adc
mov
add
adc
cmp
pop
xor
mov
pop
add
sub
lret
aad
xor
push
popf
std
xchg
jne
out
iretw
pop
dec
sbb
mov
scas
and
jbe
adcl
aad
xchg
push
mov
or
mov
shrb
mov
push
loop
cmc
daa
aad
jns
jne
ja
iret
lock
ficompl
pop
cmc
mov
jecxz
stc
push
and
mov
lock
xchg
js
add
icebp
jge
loop
mov
hlt
xlat
mov
sbb
sbb
pop
inc
pop
dec
movsl
dec
out
shlb
jb
mov
cmp
add
into
insl
mov
sub
jno
fucomip
add
dec
add
push
pavgb
clc
lods
sarb
loop
pusha
adc
stos
push
inc
add
aaa
cmpsb
xchg
aas
push
imul
lahf
sbb
lds
jecxz
sbb
cmp
mov
cmpsl
dec
sub
add
pop
lods
jg
cltd
jne
jb
out
lock
data16
cmp
sub
lods
sub
mov
stos
into
jmp
nop
xchg
add
fwait
cmc
rolw
jg
cmpsb
xchg
mov
push
add
jno
ret
addb
lds
mov
jb
cmp
mov
mov
inc
xchg
les
xchg
shl
dec
pop
insb
fcmovu
cmp
loope
roll
and
and
in
cmp
inc
mov
inc
daa
and
loope
loopne
and
fisubrs
cltd
and
sub
pop
fiaddl
pop
rcrl
xor
jns
std
xchg
jbe
push
and
aas
js
enter
jle
inc
pop
mov
adc
add
into
cmp
add
aad
xlat
or
mov
pop
daa
dec
mov
fcoms
add
xchg
jne
add
fiaddl
push
es
cmp
add
mov
xor
mov
js
mov
stos
jmp
mov
mov
cmp
pusha
add
sbb
das
push
add
std
sbb
add
popa
sbb
repz
mov
shl
dec
xchg
dec
push
cmp
rolb
cmp
leave
roll
and
es
nop
sbb
xor
xchg
jns
fcmovbe
pop
and
add
lret
add
js
mov
and
push
fnstsw
es
or
add
sbb
aad
cmp
movsb
aaa
mov
mov
cmpsb
les
inc
sbb
stc
add
and
mov
xor
push
test
outsl
dec
adc
xchg
pop
test
pop
mov
fidivl
scas
xor
icebp
add
inc
lret
daa
fimuls
imul
sub
jp
adc
cmp
add
inc
bnd
lcall
popa
test
nop
ficoms
sbb
or
movsb
add
and
mov
roll
jne
mov
jae
sbbl
push
gs
push
xchg
into
sbb
xchg
add
add
cmp
dec
sub
call
and
adc
or
ret
push
fidivs
jmp
outsl
or
pop
push
sbb
inc
cmp
adc
mov
jecxz
add
repz
mov
jle
mov
loopne
push
jns
in
lock
add
or
mov
mov
mov
stos
les
lods
cwtl
in
hlt
xchg
roll
add
inc
repz
icebp
fisubs
mov
les
adc
sbb
idiv
popf
mov
fadds
mov
mov
cmp
test
mov
scas
adc
andb
add
add
push
cmp
mov
movsb
inc
inc
sub
xor
addr16
add
cltd
jmp
add
sub
lds
adc
push
bound
in
into
sub
enter
jg
rcl
and
cmp
push
push
loopne
pusha
in
pop
rorl
mov
jge
or
or
fidivs
adc
add
jle
push
in
mov
cmp
xchg
stos
es
in
add
scas
mov
sbb
pop
or
mov
rorl
aaa
jne
xor
cmp
std
mov
xchg
pop
adc
sar
xchg
add
push
into
xchg
inc
imul
add
add
inc
pop
lods
sbbb
leave
mov
rorl
cld
daa
mov
jp
pop
fisttpl
mov
or
inc
cmp
mov
adc
xchg
int
inc
sbb
xlat
stos
pop
push
dec
jne
jp
mov
push
pop
and
pop
scas
addr16
lds
cmp
fdivrs
popa
scas
jmp
aad
pop
sbb
fcomps
dec
mov
mov
push
call
fwait
roll
rorl
mov
les
idivl
add
mov
scas
sub
sub
rcll
push
or
jl
lock
cwtl
inc
fbld
xchg
mov
push
movsl
add
adc
push
cmp
rclb
and
push
movsb
jb
stc
jnp
fimull
daa
xor
sub
push
loop
in
in
xlat
xchg
dec
cwtl
cs
push
call
out
xlat
movsl
and
outsb
pushf
xchg
dec
pop
in
lds
xor
dec
sbb
dec
test
cmp
leave
xchg
loop
sti
mov
loopne
cld
push
bound
data16
imul
or
adc
jno
test
pop
mov
das
or
xor
mov
inc
xor
icebp
out
enter
aaa
das
or
xchg
adcb
inc
xorb
fsubl
sub
sub
dec
pop
jb
fmuls
pop
adc
or
iret
add
add
pushf
or
jp
adc
adc
sub
icebp
inc
pusha
pop
mov
data16
lods
xchg
fcmovne
outsb
into
out
cmpsb
adc
add
xor
xor
lret
xchg
push
or
push
and
test
das
aad
or
in
int
mov
jp
sbb
pushl
ret
loopnew
movsb
jecxz
loop
in
xchg
push
sarl
inc
add
inc
stos
dec
xor
bnd
mov
ja
push
je
or
push
xchg
add
inc
cmpsb
subb
add
jae
fs
hlt
adc
cmc
push
push
clc
test
out
movsb
cltd
push
add
or
push
push
add
push
lock
add
imul
jp
pop
mov
and
pop
adcb
lret
inc
adc
or
add
adc
out
stos
cmp
loopne
aad
mov
outsl
add
lret
xchg
or
cmp
fisubrs
or
push
xchg
fidivl
dec
sbb
inc
imul
dec
outsl
jl
hlt
jno
xchg
and
add
or
xor
mov
int
mov
cmp
je
arpl
popa
sbb
cmc
lds
sbb
nop
sbb
adc
sbb
add
inc
lret
into
dec
xchg
js
jo
cmp
rol
ret
call
cwtl
xchg
pop
push
pop
pop
or
mov
push
cmc
repnz
shll
aam
fcoms
sarl
les
add
add
cmp
mov
xlat
imul
and
cld
stc
push
dec
test
sbb
sbb
insl
inc
pop
sbb
adc
notb
iret
sbb
xor
push
aas
xchg
mov
adc
or
out
ror
add
add
hlt
jl
dec
push
mov
pop
dec
movsl
jp
cs
inc
push
dec
pop
popa
adc
mov
fbld
dec
mov
movsb
push
cvtdq2ps
add
xlat
incb
sub
push
cmpsl
xchg
cwtl
mov
push
jae
lret
cmpb
inc
in
or
dec
aad
xchg
push
cli
push
dec
scas
and
movsl
xchg
icebp
mov
fsub
leave
pop
add
enter
dec
jns
inc
mov
xor
add
fbstp
sub
gs
jge
sbb
xchg
mov
mov
cmp
push
lret
push
xchg
xchg
addr16
je
adc
ds
jecxz
mov
adc
rol
xor
adc
cmp
cmpsl
bound
pop
adc
or
sahf
or
add
pop
mov
fadds
xchg
icebp
arpl
push
lods
insl
movsl
out
jns
inc
mov
in
add
jne
push
push
mov
mov
or
aad
repz
hlt
mov
add
or
gs
or
xchg
test
nop
pop
add
jbe
imul
addr16
jne
sbb
xor
fs
scas
in
cs
and
sub
aad
sbbb
ret
xor
xchg
std
fisttpl
add
cmp
das
pop
insb
cmp
push
mov
call
lods
movsl
add
cmp
jge
mov
lret
aaa
fcmovu
cmp
aas
add
cmpsb
fists
push
ljmp
faddl
fldt
xor
xorl
pop
xchg
adc
xor
pop
cs
hlt
xor
and
pop
add
lods
mov
aad
xchg
xor
sbb
loopne
xchg
repnz
adc
inc
shll
add
pop
adc
lods
or
xchg
lret
xchg
mov
fnstcw
mov
jbe
cmp
or
cmp
adc
jg
sbb
push
mov
inc
ds
mov
scas
testl
and
vmovhpd
aaa
xchg
jns
movsb
ret
sbb
es
jmp
stos
sub
xor
and
daa
dec
add
je
sti
add
ja
cmp
add
shrl
lds
lods
mov
movsl
mov
push
push
cwtl
inc
mov
inc
lds
rcl
jo
xchg
xor
pop
and
lret
sbb
adc
xchg
aad
add
inc
mov
testb
jns
and
into
data16
les
imul
cmc
push
ret
decl
les
jmp
out
mov
xor
pop
add
cmpsb
fnstenv
rolb
adc
aas
push
mov
stc
jp
jecxz
or
push
fcmovb
lss
cltd
mov
and
jge
mov
jbe
adc
cmc
xchg
aad
xchg
ficomps
in
icebp
fidivrl
cmpsl
push
sbb
adc
xlat
sbb
es
shlb
mov
sub
add
xchg
ficoms
add
sbb
sub
out
icebp
pusha
je
xchg
lods
and
mov
loopne
inc
add
cmp
lods
jl
jecxz
adc
xlat
xor
fsub
sbbl
jecxz
add
inc
roll
fcomps
cmp
test
xor
sbb
aas
mov
vmovhlps
daa
test
jns
or
cmpsb
add
lahf
push
xchg
ret
push
dec
xchg
push
rcrb
sbb
inc
stc
enter
data16
push
add
sub
insb
push
add
push
notrack
ja
mov
push
sahf
cmp
adc
add
xor
sbb
jne
push
fldt
ret
jmp
xlat
sbb
aad
jns
mov
sti
add
inc
inc
daa
dec
movsb
jp
cmp
shll
or
std
insb
repz
add
add
dec
enter
fiaddl
jmp
mov
inc
xchg
js
xlat
lock
ficomps
movl
push
pop
mov
outsb
xchg
sub
lods
cmpsb
jns
xchg
enter
fldt
or
add
and
imul
push
in
xchg
aaa
sbb
dec
or
add
je
xchg
std
int3
iret
data16
cmc
cmp
cmpsl
nop
loopne
ja
int
pop
call
cmpsb
sbb
jae
aad
sarb
sbb
nop
scas
lret
ficoml
xor
cmp
jb
std
lret
inc
and
xlat
out
cwtd
out
movsl
stos
sub
cs
scas
pop
lods
enter
adc
push
xor
clc
movsl
jo
pop
cli
sbb
push
cmpsb
xchg
je
xor
jecxz
xchg
jns
cs
mov
stc
sbb
jp
add
andl
add
push
imul
inc
cmp
imul
mov
loope
dec
add
repnz
cmp
xchg
fcomps
mov
adc
or
mov
movsb
xlat
fcomp
and
add
into
add
jae
mov
add
adc
clc
fisubl
xchg
ss
xlat
dec
xchg
scas
scas
mov
inc
adc
xor
cmp
idivl
push
cmpsl
lahf
sbb
xor
pop
and
ret
adc
sahf
cmp
xchg
repz
arpl
push
mov
mov
loope
push
add
mov
pusha
add
jae
lret
cmp
std
ja
je
xchg
fadd
ret
fisubl
add
mov
dec
aaa
xor
scas
sub
cmpsb
imul
xlat
mov
sbb
ds
jno
idivb
jecxz
adc
cmpsb
add
lock
fcoms
or
sbb
mov
insb
fstp
cmp
mov
or
mov
and
repnz
jno
enter
push
loop
pop
test
imulb
pop
dec
in
jl
divl
je
mov
mov
fmuls
cmp
and
stos
add
in
push
adc
and
sbb
fxch
dec
scas
sub
test
dec
dec
je
jne
cmp
or
insb
dec
xchg
fisubl
or
xor
and
outsl
mov
xchg
adc
testb
in
mov
pop
sub
and
push
add
or
mov
lock
xchg
shlb
dec
outsb
add
mov
mov
jo
or
jl
or
add
js
mov
dec
lods
and
push
jge
add
in
fcmovb
inc
mov
cmp
popf
cmp
push
jns
push
cmp
lret
ss
cmc
push
hlt
mov
adc
mov
pop
outsl
lds
test
push
add
stc
adc
cs
xor
sub
jne
cli
cmpsl
mov
and
scas
cltd
sub
out
test
pushf
aaa
add
pop
jle
push
loope
fimull
jnp
lods
pop
and
inc
jl
or
adc
daa
xchg
add
enter
add
or
lock
pop
cwtl
xchg
sbb
add
ss
movsb
jg
adc
jle
or
or
add
jmp
dec
clc
push
or
cmpsl
jae
lret
cmp
pop
icebp
sbbl
inc
dec
add
or
orl
mov
shlb
xchg
out
add
andl
popa
fisubs
leave
int
movsb
mov
cmc
lds
inc
push
addr16
mov
adc
cmp
inc
bound
and
outsb
add
jmp
add
cmpb
adc
xchg
xor
and
es
sub
or
push
jo
jp
jne
add
icebp
pushf
pusha
add
dec
add
mov
mov
inc
aas
add
dec
fdivrs
mov
adc
scas
mov
add
pop
mov
sub
mov
mov
inc
pop
aam
sbb
and
sbb
aas
pop
push
test
shl
dec
js
cmpsb
jp
xlat
mov
mov
cltd
ja
popa
push
mov
xchg
sahf
loopne
es
pop
cs
cli
jge
stc
mov
push
mov
xlat
jo
sbb
cmc
adc
push
fisubrl
jl
sti
cmp
and
pushf
add
mov
inc
iret
xchg
xlat
sbb
fsubl
out
mov
sbb
xor
cmc
xlat
jecxz
push
pop
in
fwait
adc
shll
pop
dec
xchg
add
addr16
jl
and
ficoml
xor
mov
ja
ds
and
pop
imul
add
lea
jno
out
pop
add
scas
test
mov
daa
repnz
lock
cs
lret
cmp
add
nop
inc
fiadds
sbb
mov
xor
ljmp
mov
mov
cmp
pop
arpl
outsb
or
sub
jg
cmp
and
mov
js
jbe
cmp
je
lret
mov
and
inc
jb
and
divl
ja
add
jp
fidivrl
inc
cmp
dec
aad
sti
stc
mov
icebp
xchg
fisubrl
lret
add
out
enter
mov
mov
loopne
es
ret
cmc
test
push
push
mov
and
rorl
cmp
js
add
test
rolb
jl
aaa
jo
jne
fimull
sub
cmp
test
rclb
dec
jle
pop
ficompl
and
adc
bound
sahf
push
adc
or
push
or
nop
or
es
not
adc
ret
jp
jnp
clc
mov
jl
insb
adc
push
and
mov
jmp
jae
sbb
adc
mov
add
add
jb
xor
scas
adc
add
cmpsl
add
xor
repnz
dec
es
stc
push
mov
js
mov
dec
add
mov
mov
sahf
cmp
push
and
or
ds
aas
lods
ret
cmc
push
hlt
add
mov
lret
fisttpl
pop
cmp
fbld
dec
inc
inc
insb
inc
adc
roll
adc
mov
sahf
xor
mov
jecxz
inc
pop
pop
lret
dec
push
ret
loop
and
mov
cmp
inc
loopne
scas
cmp
aad
imul
daa
jmp
push
adc
pop
mov
add
pushf
sahf
or
add
jb
push
rorl
mov
aam
add
bound
aad
jecxz
jmp
pop
add
mov
adc
add
roll
jp
cmc
scas
xchg
add
hlt
ss
cmp
out
lahf
inc
jae
add
adc
test
cmpsb
cmp
rcll
cmpl
or
cmp
testl
and
repz
test
mov
xchg
jp
inc
add
clc
or
add
into
adc
enter
xor
push
movsl
lods
lods
cli
fidivrl
jo
std
add
sbbb
inc
inc
aaa
fidivl
test
lret
or
push
mov
scas
sysexit
jne
add
dec
repnz
adc
add
xchg
fcmove
adc
in
mov
jo
add
loopne
lret
fidivrs
cmp
mov
pop
out
je
push
into
loopne
call
cmp
in
lcall
mov
pop
jmp
or
movsb
inc
mov
mov
inc
adc
lret
rolb
push
push
into
sbb
notl
jle
mov
pop
sbb
icebp
mov
mov
add
and
mov
and
add
dec
mov
xor
std
and
adc
cmp
sbb
nop
roll
and
add
out
cmp
shrl
rcrb
push
std
push
stc
aad
jp
fstpl
jo
or
sbb
xchg
dec
sbb
xchg
pusha
sbb
cwtl
loopne
cltd
jecxz
add
add
cmp
add
rorl
repz
inc
fwait
jne,pn
or
fnsave
mov
add
mov
aad
adcb
cmpsb
push
add
cmp
sub
xchg
add
dec
loope
test
sbb
xor
nop
rcll
xchg
lret
adc
adc
inc
jp
push
cli
mov
add
adc
pop
cmp
xchg
add
xchg
fabs
add
dec
sbb
movsl
mov
stos
or
pushf
push
and
jo
mov
roll
push
or
imul
mov
or
fadds
mov
stc
xor
cmp
pop
mov
xchg
xchg
and
add
lret
sub
push
in
sub
sub
cmp
arpl
movsl
adc
add
sbb
sub
pop
fwait
sbb
test
sbb
fsts
hlt
add
in
or
lock
movhps
or
sahf
cmp
xor
add
cmp
cmp
sub
aas
movsl
push
and
and
fstl
aaa
and
xor
ja
dec
push
scas
sub
sbb
adc
and
xchg
addr16
sub
divb
adc
pop
jb
testl
subb
loopne
sub
xchg
jbe
rcr
xor
sahf
push
push
add
fsubs
or
test
add
push
test
push
push
pop
xor
mov
loope
inc
mov
test
sbb
pop
mov
and
push
mov
xlat
aam
stos
pop
jns
adc
neg
mov
xchg
fiaddl
jns
jb
add
mov
nop
arpl
movsb
add
loope
or
lods
cmpb
arpl
adc
pop
dec
movsl
lds
fdivs
cmp
jne
popa
pop
ret
dec
scas
jle
cmp
mov
add
inc
lret
les
adc
pop
lea
sar
push
and
push
fisubl
scas
ja
ficompl
cmp
inc
fldenv
ss
adc
add
nop
ljmp
push
cmp
jmp
aad
jge
int
xchg
addb
mov
lods
movl
and
mov
jne
or
cmp
adc
sbb
ret
and
adc
xlat
dec
lahf
adc
aaa
xor
xchg
add
or
mov
dec
movsb
push
aam
pusha
roll
loopne
xor
mov
cmp
into
adc
shlb
aaa
addb
pop
mov
testl
movsl
mov
adc
fidivrl
js
cs
mov
or
xchg
lds
xchg
test
push
les
xor
arpl
add
xchg
mov
inc
fcoms
sbb
nop
mov
adc
cmp
fcomp
dec
jp
dec
and
sub
and
and
cmp
pop
std
sbb
inc
cwtl
out
mov
je
in
inc
add
test
sbb
fsubs
lret
lret
int3
mov
fiadds
dec
sbb
xchg
std
push
push
jo
add
andb
out
add
adc
push
fwait
dec
add
add
test
js
xchg
add
loop
roll
mov
cwtl
mov
push
push
push
cmp
xor
fcoms
dec
mov
inc
adc
insb
adc
sub
sbb
std
dec
add
repz
jl
jecxz
sub
cmp
mov
adc
add
scas
jae
mov
in
jl
xchg
add
cmpsb
sbb
rorl
cmp
cmc
xor
test
insb
sub
inc
add
jo
aaa
mov
jno
das
add
sbb
std
dec
leave
xor
ret
imulb
cmc
icebp
and
sbb
jne
icebp
push
dec
movsl
add
and
lock
mov
je
xchg
movsb
cmp
xchg
adc
jae
jecxz
push
mov
add
rolb
pop
fidivrl
movsl
or
mov
xchg
fdivrs
cld
sti
inc
push
cmp
roll
call
lock
add
cmc
cmpsb
ror
sbb
sub
cmp
jo
movsb
fstl
sbb
rol
mov
pop
fimull
and
mov
and
js
push
std
lcall
lret
daa
fildl
and
jns
xor
lret
or
cmp
rol
xchg
clc
inc
jne
add
mov
rcll
sbb
or
pusha
mull
ret
mov
push
test
dec
sarb
pop
inc
es
sbb
inc
scas
mov
lea
sti
imull
outsb
add
xchg
inc
mov
sub
adc
push
jae
rcr
xchg
repz
rorb
mov
movsl
orl
cmp
pop
cs
pop
sbb
lds
mov
or
stc
xor
jmp
push
cmp
cltd
jno
push
shrl
int3
ss
mov
orl
inc
pop
xchg
out
sbb
sbb
adc
fcoms
dec
pop
jp
cmpl
inc
jae
xchg
pop
dec
cmp
mov
sbb
adc
out
cli
sbb
cmp
cmpsb
add
xchg
insl
and
rcrl
mov
jmp
cmp
popa
stc
add
lock
in
inc
add
repnz
inc
cs
fsubs
dec
mov
and
stc
jns
pusha
jge
add
push
cmp
iret
cwtl
std
add
mov
add
lea
cmpsb
cmp
pop
inc
pusha
std
jp
fisubs
mov
shl
stos
dec
loope
les
cwtl
aad
adc
sahf
xlat
cmp
jno
inc
lret
mov
xor
xlat
loope
int
cmp
and
mov
scas
dec
insb
js
cmpsb
test
movsl
leave
rolb
pop
add
xchg
cmpsl
cmpsl
daa
push
add
dec
out
adc
iret
add
jo
dec
and
test
ror
scas
pop
push
add
mov
dec
ds
sti
push
pop
mov
add
lds
push
mov
and
cmp
adcb
ret
sub
dec
fidivrl
pop
sub
mov
mov
lret
iret
mov
add
hlt
push
inc
add
adc
call
fdivr
sbb
xchg
pop
mov
jbe
lret
xchg
cmp
xor
aas
cmp
mov
sub
ja
xchg
adc
out
int
and
or
movsb
sbb
sbb
rolb
push
js
sbb
push
arpl
xchg
aaa
cmp
dec
or
nop
push
sbb
mov
inc
das
lods
faddp
rcl
add
jge
inc
std
or
add
add
adc
es
cmpsl
shll
cmp
xchg
hlt
jl
cmc
mov
fsubr
shr
push
sub
cmp
and
lods
sbbl
add
mov
mov
push
mov
add
in
push
pop
in
outsb
aaa
jo
stc
icebp
rcr
call
fdivp
into
push
pusha
cmp
fmull
insb
jl
sbb
mov
sbb
fwait
movsl
mov
leave
jp
fistpl
pop
mov
test
add
xor
dec
fdivrs
push
cmp
push
fiadds
test
or
repnz
xor
add
sbb
mov
movl
adc
roll
jb
or
add
or
jnp
movsb
add
mov
shll
out
aaa
call
ficoms
scas
xchg
sub
pop
fists
testl
dec
cmp
add
jge
mov
pusha
sbb
lret
dec
inc
lret
sub
subb
sti
icebp
adc
mov
mov
pop
jae
repz
punpcklbw
jne
fsubrl
pushl
lds
adc
or
cmp
sti
in
mov
mov
and
test
aam
cltd
sub
or
add
cmc
mov
push
stos
ret
and
cmpsb
dec
add
addl
shll
mov
cmpsl
mov
scas
cmp
jp
mov
cmp
fmuls
push
sub
fsubrl
mov
clc
test
adc
fisubs
pusha
jp
fisubs
mov
add
mov
fdivs
in
jge
mov
and
mov
fisubl
mov
or
push
lds
aaa
push
notl
xor
test
jg
sbb
outsl
hlt
pop
inc
mov
repnz
xchg
jo
xor
fidivrs
add
xbegin
test
adc
pop
arpl
xor
and
adc
std
mov
xchg
sbb
movsl
daa
cmpsl
lret
sub
fisubs
xchg
sbb
cmp
xchg
lret
mov
pop
dec
push
xchg
iret
cmpsb
xchg
mov
js
mov
test
mov
jp
xchg
adc
or
xlat
xor
inc
sbb
push
icebp
and
sti
lds
add
subb
sbb
xlat
into
cltd
mov
notb
adc
dec
mov
cmpsb
stos
inc
les
dec
cmp
int
jp
cli
cmp
gs
sbbb
inc
adc
call
movsl
test
push
pop
dec
jno
aad
add
xchg
dec
push
pushf
mov
stos
into
fidivrl
aad
dec
inc
fisubrl
jae
mov
aam
or
push
daa
mov
movsl
scas
sbb
cmp
and
lret
or
ja
xor
inc
rcll
rcll
inc
popf
les
inc
and
lock
jp
xchg
test
add
push
adcb
loope
add
sbb
fdiv
cmpsb
xchg
and
adc
clc
arpl
iret
add
add
cmp
xor
scas
aaa
sbb
aad
xchg
push
add
pop
mov
push
fadds
xor
ffree
je
in
sbb
std
xlat
and
out
add
jecxz
fs
insb
mov
enter
dec
fldl
jg
sbb
imull
and
mov
jecxz
mov
xchg
mov
cmp
mov
or
adc
pop
movsl
roll
mov
data16
and
inc
stos
cltd
enter
jo
addr16
loopne
adcb
addl
dec
sbb
fdiv
and
and
add
push
pop
and
dec
push
xchg
or
fwait
repz
push
adc
dec
lds
lahf
add
push
jecxz
add
push
fs
xlat
shlb
fisttps
jp
dec
les
jbe
neg
sarl
sbb
mov
sub
and
lcall
dec
jmp
aaa
and
inc
mov
sbb
add
pop
scas
addb
es
add
add
xchg
stos
cmp
cltd
inc
movsb
cmpsb
out
xchg
push
loop
pop
add
xor
cmc
jne
mov
push
add
repnz
in
add
xchg
cmp
pop
imul
adcl
out
mov
addl
jne
vrcpss
xchg
add
xchg
notb
add
push
xchg
push
inc
outsb
inc
icebp
mov
jl
clc
add
and
sub
dec
jno
and
add
mov
pop
lret
hlt
push
neg
pop
cmpsb
pop
loope,pn
cmpsb
xor
add
jle
andb
xor
pop
rolb
insb
add
mov
pusha
into
aaa
fs
push
sbb
scas
mov
aad
out
stc
jecxz
fcmovbe
es
aam
mov
add
dec
lret
dec
in
mull
add
int
ds
pusha
sub
and
lock
std
xchg
loope
xor
pop
fcoml
cmpsb
test
adc
mov
ja
pop
vcvttsd2si
fsub
push
pop
into
adc
mov
mov
lcall
pop
cmp
daa
stc
aad
pop
xor
add
push
jp
rcr
loop
adc
add
pusha
int3
mov
data16
and
and
mov
jmp
iret
adc
sarb
xlat
mov
repz
mov
nop
add
inc
mov
push
sar
jno
mov
mov
aaa
sbb
mov
xchg
loop
nop
rorb
or
and
mov
imul
arpl
add
push
and
mov
ss
jb
rcr
adc
pop
mov
mov
addl
insb
inc
add
mov
xchg
push
xchg
pop
add
push
aam
xor
or
ret
jb
mov
and
cmpsl
add
xchg
add
add
mov
or
std
push
or
add
mov
fisubl
in
push
scas
test
loopne
push
add
dec
xchg
or
add
in
push
shrb
xchg
ret
sbb
inc
add
aad
mov
push
mov
adc
cli
ds
rcr
lock
add
aas
into
xlat
adc
push
movsl
pop
jns
dec
fdivr
cmp
jecxz
ret
push
cmc
mov
loope
inc
clc
ret
pusha
push
movsl
cmpsb
dec
cmp
push
sbb
inc
add
mov
jge
ror
add
cs
movsl
push
pop
jle
add
cmp
xor
sbb
and
push
or
or
add
jbe
sub
add
or
fmull
xchg
cs
push
xlat
xchg
and
rclb
push
adc
adc
adc
pop
mov
test
sbb
add
xor
xchg
xchg
mov
push
mov
xchg
mov
push
jle
mov
and
mov
call
ljmp
pop
stos
push
jne
adc
pop
loopne
clc
rol
add
jl
and
pop
adc
jb
mov
cmc
stos
mov
repnz
and
mov
cmc
fsubrs
push
lret
xchg
sub
call
pop
jl
test
inc
aam
add
dec
xor
cmpsb
pop
inc
sbb
jb
sbb
add
repnz
xor
mov
mov
rcll
push
or
roll
mov
jo
les
loopne
cmp
daa
jmp
jb
ss
ret
jp
movsl
addr16
rcll
pop
adc
sbb
fidivs
cmp
inc
sbbb
shll
and
test
outsl
mov
into
pop
aad
fisubrs
stc
dec
jb
jne
into
adc
push
rcr
emms
cmp
add
and
ret
xchg
fldt
push
lahf
push
and
sbb
mov
dec
xchg
mov
jecxz
faddl
icebp
cmc
lock
pop
sbb
cmp
jne
je
add
push
xchg
lret
in
testb
pop
cmpsl
mov
adc
cmp
jbe
jle
call
test
lods
inc
xorl
popa
xor
fstl
mov
jle
cmp
sbb
and
xchg
jae
xchg
cmp
nop
add
push
sbb
push
loopne
inc
rclb
jnp
fsubrs
repnz
sub
jecxz
and
jle
add
jo
lret
aaa
fildl
mov
jbe
xor
mov
inc
add
push
fisubs
neg
add
sbb
push
push
unpckhps
shl
xor
pop
enter
cmp
rclb
in
jns
ret
sub
rcr
xor
sbb
jnp
rcrl
push
and
adc
arpl
inc
push
mov
cmp
cli
mov
loopne
mov
out
scas
in
sub
pusha
pop
call
ret
jbe
pop
cmc
push
aad
out
loopne
fidivrs
stos
hlt
jbe
dec
pop
lea
xchg
cmpsb
xlat
sub
shlb
lods
and
pop
into
dec
cmp
push
int3
icebp
leave
mov
and
and
shl
stos
mov
in
xchg
jae
andl
add
add
mov
icebp
and
adc
mov
xchg
pushf
nop
ds
mov
mov
push
xchg
dec
xchg
js
rorb
sbb
pop
lret
and
ds
stos
sbb
adc
lods
dec
push
dec
aaa
inc
pop
mov
or
arpl
mov
jb
add
arpl
jno
add
add
push
add
add
add
push
insl
add
add
add
add
add
add
insb
add
push
jne
inc
add
dec
add
dec
add
jns
popa
add
add
add
add
add
add
add
add
push
add
imul
add
outsl
xor
inc
dec
data16
add
add
add
fs
outsl
xor
add
dec
add
add
jbe
xor
arpl
jns
add
jp
add
pop
add
js
add
add
dec
add
pop
add
add
add
push
add
add
push
inc
dec
add
add
inc
add
inc
jno
insl
add
push
insl
ja
dec
bound
dec
pop
add
add
inc
push
add
add
pop
add
add
bound
inc
add
bound
add
add
bound
push
add
jns
dec
dec
add
popa
add
xor
dec
add
pop
add
jno
add
inc
add
push
insb
add
push
add
cmp
add
add
add
add
dec
add
add
add
aaa
outsl
add
add
push
add
add
add
add
add
je
add
add
add
pop
add
jbe
add
add
add
inc
inc
js
add
add
je
pop
jo
jbe
inc
add
jp
xor
add
add
add
add
push
add
cmp
dec
pop
bound
add
add
xor
insw
dec
add
add
cmp
push
bound
add
pop
inc
ja
inc
add
add
add
pop
add
dec
outsb
jp
add
add
add
add
add
imul
add
add
add
dec
push
push
add
add
add
add
dec
add
add
bound
dec
bound
add
push
xor
pop
add
add
add
add
add
add
jbe
add
jno
push
push
xor
add
add
add
add
add
dec
imul
add
add
jb
add
push
add
add
dec
add
inc
push
add
push
xor
ss
add
add
popa
dec
add
add
add
add
outsl
xor
add
add
xor
add
dec
add
aaa
pop
inc
add
add
insb
push
add
add
xor
add
add
add
jp
add
push
add
outsb
inc
dec
add
push
xor
je
jne
add
xor
add
add
add
add
add
add
add
push
ja
jb
add
inc
add
add
inc
inc
inc
xor
add
add
add
add
add
cmp
add
add
inc
add
add
add
add
jo
add
jbe
add
jbe
inc
dec
add
add
insb
add
push
xor
jne
cmp
data16
push
inc
imul
push
add
jp
add
inc
push
xor
outsl
add
dec
add
add
add
jno
dec
add
cmp
dec
push
add
push
push
xor
add
pop
add
add
add
add
add
add
add
push
add
xor
push
add
add
add
dec
xor
xor
imul
dec
add
push
jo
imul
dec
xor
push
add
add
add
pop
dec
add
add
jno
xor
imul
xor
push
outsl
cmp
push
pop
add
add
inc
add
bound
add
add
xor
inc
add
add
add
dec
add
add
push
add
cmp
dec
add
push
add
jb
push
add
push
push
add
add
add
dec
ja
dec
add
add
inc
add
arpl
inc
push
add
push
xor
outsl
add
add
jne
add
xor
add
add
inc
add
imul
add
add
dec
add
push
add
dec
arpl
insl
outsb
gs
xor
xor
add
add
add
push
pop
add
add
push
cmp
add
inc
outsl
add
add
add
push
dec
outsb
inc
jne
add
add
pop
add
jb
add
add
cmp
add
insl
ss
add
imul
add
jae
jne
add
add
js
dec
add
add
jb
push
add
jno
add
inc
add
add
popa
xor
add
add
add
dec
push
add
add
xor
dec
add
add
add
jbe
add
pop
add
inc
dec
add
dec
xor
add
imul
dec
xor
add
add
add
add
add
cmp
add
add
add
insl
add
add
jbe
push
dec
jae
xor
cmp
insb
add
add
inc
ss
add
dec
inc
inc
add
add
jns
push
bound
arpl
add
xor
pop
add
push
add
add
pop
add
add
add
jb
add
jns
add
add
add
add
jne
add
add
insl
inc
dec
add
fs
dec
add
add
add
xor
xor
add
add
add
add
push
add
add
inc
inc
dec
insl
add
inc
add
add
ja
push
add
add
add
add
xor
add
jb
outsl
add
push
bound
push
add
push
add
pop
ja
add
add
add
add
add
add
inc
add
ja
ja
cmp
add
add
add
add
inc
jb
add
add
add
add
add
add
push
inc
add
add
add
dec
push
push
add
add
add
add
jb
add
add
push
add
add
dec
add
dec
jbe
aaa
aaa
add
jno
add
push
add
insb
add
add
pop
push
data16
add
add
add
add
outsb
add
jo
push
cmp
ja
add
add
jo
xor
arpl
insb
push
add
dec
add
add
pop
add
insl
add
add
add
pop
data16
add
add
dec
add
add
dec
add
jbe
add
add
dec
add
add
aaa
pop
inc
push
dec
add
add
xor
add
add
add
jns
add
pop
add
add
add
add
cmp
add
popa
add
add
push
bound
add
add
add
add
xor
add
push
add
inc
add
add
imul
add
arpl
add
add
cmp
imul
add
xor
inc
add
pop
push
add
add
add
add
push
add
ja
dec
push
add
imul
push
js
inc
add
add
add
cmp
inc
outsl
add
add
bound
push
dec
add
add
add
add
push
outsb
push
pop
add
add
pop
push
data16
add
dec
add
dec
add
jbe
add
add
jno
cmp
add
insl
jb
add
add
add
add
add
add
add
add
pop
add
jns
add
jo
push
xor
add
add
add
pop
add
add
add
add
add
add
add
push
add
insb
add
add
add
add
add
add
pop
jo
add
dec
push
add
add
xor
dec
insl
add
push
add
ss
insb
xor
inc
dec
push
add
pop
inc
inc
outsb
dec
je
add
push
dec
dec
add
add
add
add
add
jb
add
dec
add
add
insb
add
add
add
xor
add
add
add
pop
xor
add
inc
dec
add
xor
add
add
inc
push
add
add
add
add
add
add
add
aaa
pop
add
add
dec
jbe
imul
dec
add
inc
add
add
add
inc
add
dec
gs
push
outsl
inc
imul
dec
add
add
add
add
fs
dec
add
add
add
js
add
push
add
add
add
dec
add
add
xor
add
inc
add
add
add
add
js
xor
cmp
add
add
add
add
outsl
add
add
add
add
xor
inc
inc
js
cmp
je
ss
add
je
jo
jae
dec
push
push
add
push
addr16
cmp
add
jae
add
inc
add
add
inc
dec
add
push
add
dec
push
dec
add
pop
jns
add
add
add
data16
push
push
add
add
imul
add
add
outsb
inc
add
cmp
xor
pop
arpl
cmp
add
add
insl
push
push
add
push
ja
js
add
add
dec
add
dec
outsl
popa
push
jae
push
add
pop
cmp
add
add
xor
add
add
outsb
add
add
arpl
xor
xor
add
add
add
add
inc
push
add
push
xor
xor
add
add
add
add
add
inc
dec
push
imul
add
push
add
jno
add
add
add
gs
jb
jb
add
add
jne
add
add
add
dec
jo
add
add
add
add
inc
add
add
push
push
jbe
dec
add
add
add
jno
add
popa
jo
ja
xor
add
xor
outsl
data16
add
add
imul
xor
push
add
push
add
xor
add
add
add
add
add
add
add
je
push
dec
push
add
jae
push
jo
jns
jp
push
cmp
inc
inc
add
push
aaa
push
add
xor
ss
inc
add
add
add
add
push
push
pop
add
inc
dec
xor
add
add
popa
add
add
add
inc
inc
add
add
push
dec
pop
add
outsb
je
jns
dec
gs
jne
add
dec
jne
add
pop
add
push
add
add
add
add
add
add
add
add
add
insb
add
add
pop
jb
pop
dec
add
add
aaa
add
add
imul
addr16
jp
add
add
jns
add
jo
bound
inc
xor
add
push
add
add
imul
jb
dec
add
dec
add
add
add
add
add
add
add
inc
add
add
xor
add
inc
dec
add
dec
aaa
add
dec
dec
xor
add
add
add
add
push
dec
add
push
add
add
dec
add
dec
add
aaa
bound
add
cmp
add
cmp
add
xor
dec
add
cmp
add
add
ja
cmp
add
add
add
add
add
add
xor
add
add
xor
add
cmp
add
add
add
jp
dec
arpl
add
dec
add
push
add
imul
push
add
jne
jo
add
add
add
add
inc
pop
push
jp
arpl
jns
add
add
outsl
xor
add
inc
add
add
add
add
pop
add
push
add
inc
dec
add
xor
add
jno
add
add
add
push
add
pop
jb
add
add
add
jno
add
add
add
add
push
arpl
insl
pop
add
add
push
push
push
add
add
add
jbe
add
jne
jbe
outsb
push
ja
add
dec
jbe
add
add
imul
inc
add
add
dec
add
add
jp
pop
dec
add
push
push
add
xor
add
ja
add
xor
add
xor
add
add
add
add
inc
inc
add
push
add
cmp
gs
add
add
push
add
push
add
dec
add
add
add
add
jp
add
add
add
inc
add
add
add
ja
add
add
add
pop
ja
ja
add
push
add
inc
add
arpl
add
add
xor
cmp
add
add
add
push
push
push
add
add
popa
ja
outsb
add
js
add
add
ja
dec
add
add
add
add
add
aaa
popa
inc
add
add
add
dec
dec
fs
add
add
add
jp
add
imul
insb
fs
add
gs
add
add
jne
add
arpl
add
add
push
add
add
inc
inc
add
dec
xor
add
add
add
jb
add
add
push
push
add
add
add
cmp
add
add
add
add
add
xor
dec
add
add
xor
jbe
add
jno
cmp
add
arpl
gs
add
aaa
add
jne
add
add
add
xor
push
jae
add
xor
js
add
add
inc
add
add
pop
dec
pop
dec
dec
add
push
jp
data16
imul
add
je
add
add
add
add
add
push
popa
add
push
insb
add
push
add
pop
add
imul
push
add
add
cmp
push
outsl
inc
xor
add
add
add
add
add
add
je
add
xor
add
add
add
add
xor
add
add
ja
add
dec
jo
inc
add
xor
add
push
add
add
add
dec
add
outsl
xor
add
add
add
add
add
add
add
inc
jbe
add
add
inc
inc
add
push
xor
push
popa
insl
push
add
add
add
add
add
jne
add
add
push
add
add
add
bound
add
outsl
add
add
add
inc
add
bound
arpl
xor
inc
insb
add
push
add
jp
add
dec
add
cmp
push
add
xor
jns
je
add
add
jne
add
dec
add
add
add
add
add
add
add
add
push
xor
outsb
inc
jo
add
add
jne
push
add
dec
add
pop
jne
xor
add
inc
add
push
add
inc
inc
jae
xor
imul
inc
add
dec
add
xor
ss
insb
add
xor
add
add
xor
add
jp
add
push
add
xor
ja
add
je
add
add
add
dec
add
xor
jp
add
fs
add
add
outsl
add
add
add
jp
data16
add
arpl
add
add
dec
add
dec
add
jno
inc
add
fs
add
inc
add
add
xor
add
pop
add
jno
xor
popa
add
add
aaa
imul
add
add
push
inc
add
outsb
jp
imul
add
add
add
add
jno
add
bound
add
add
dec
push
jne
add
add
xor
dec
add
inc
xor
xor
fs
add
push
data16
add
push
cmp
push
add
add
add
add
add
je
ja
add
outsl
add
inc
add
add
inc
add
dec
xor
inc
pop
cmp
add
push
add
data16
inc
aaa
add
inc
push
add
dec
add
push
add
xor
add
inc
outsl
add
push
fs
outsb
dec
xor
push
add
data16
pop
dec
add
cmp
dec
add
push
bound
xor
add
add
inc
jno
add
add
cmp
add
add
add
jae
xor
dec
xor
add
add
add
jp
add
add
jns
inc
add
inc
add
add
push
aaa
fs
dec
add
add
add
jno
add
add
cmp
add
add
dec
add
add
inc
add
add
dec
bound
insl
push
add
add
dec
add
add
push
add
add
pop
inc
data16
add
inc
add
add
je
imul
data16
add
xor
add
push
jp
imul
add
add
dec
add
add
insl
push
add
dec
dec
pop
outsl
add
add
add
inc
insb
add
cmp
add
add
jno
jb
imul
add
add
push
add
popa
add
add
add
xor
inc
pop
add
outsl
insb
inc
add
add
imul
dec
xor
add
add
xor
add
add
xor
dec
add
add
add
inc
add
add
add
dec
add
inc
add
dec
add
xor
push
add
dec
ja
add
push
add
imul
dec
add
add
xor
push
add
je
push
add
outsb
add
add
add
dec
xor
add
add
add
add
add
add
add
add
add
je
add
add
add
jo
bound
jne
dec
xor
dec
add
xor
add
add
inc
add
add
je
add
imul
fs
push
dec
inc
add
dec
add
popa
add
add
push
add
add
xor
push
add
xor
push
add
inc
imul
push
dec
add
dec
add
dec
pop
add
popa
add
inc
add
dec
add
add
add
insl
push
add
outsb
add
add
push
add
add
xor
add
add
push
add
jns
add
dec
add
add
xor
add
add
dec
add
add
add
add
add
xor
add
add
fs
add
add
add
dec
jb
add
add
outsb
add
add
js
push
add
add
add
fs
push
add
add
jbe
add
add
dec
add
inc
add
add
jo
push
inc
add
add
jae
xor
bound
push
inc
add
add
dec
add
push
inc
push
push
inc
add
js
dec
add
add
add
add
arpl
dec
add
push
add
arpl
add
add
push
jp
dec
add
add
add
push
pop
add
dec
add
add
add
inc
add
add
add
add
add
add
gs
imul
dec
add
inc
add
add
add
jno
add
add
add
dec
dec
inc
outsb
add
push
inc
jns
dec
add
dec
add
add
jae
add
bound
dec
push
add
add
cmp
inc
add
push
xor
push
add
add
inc
add
add
xor
add
add
add
gs
add
push
add
xor
add
add
xor
add
add
add
cmp
dec
add
dec
xor
push
inc
add
inc
js
jp
jp
push
pop
insl
add
add
add
je
add
push
dec
dec
xor
add
arpl
add
add
inc
add
add
inc
push
add
pop
insb
aaa
inc
add
add
jno
add
jae
inc
add
add
add
add
dec
data16
add
add
insl
push
bound
add
add
add
xor
push
add
inc
pop
js
add
add
insl
add
add
outsl
add
add
inc
add
fs
cmp
add
add
add
add
add
add
add
add
add
add
aaa
add
dec
push
insl
pop
aaa
add
jae
addr16
add
dec
add
add
add
add
add
dec
add
data16
inc
add
push
add
inc
jne
aaa
add
add
add
add
data16
add
inc
inc
jae
add
add
xor
push
add
add
add
add
xor
xor
push
add
add
inc
add
jp
add
add
inc
add
push
add
push
jo
bound
cmp
push
add
pop
add
push
imul
imul
add
add
imul
jo
add
add
add
add
add
add
add
add
add
push
add
bound
add
push
cmp
add
add
add
pop
add
je
add
add
add
push
insl
add
jb
add
add
insb
add
imul
add
add
ja
push
dec
dec
xor
push
add
add
inc
add
add
pop
add
dec
pop
data16
push
add
add
add
jns
inc
jp
push
add
add
add
inc
dec
add
add
add
jno
add
outsl
imul
je
add
jno
aaa
add
add
aaa
add
add
add
js
add
add
push
cmp
inc
add
add
cmp
add
add
add
add
add
add
jne
add
add
ja
add
add
jns
push
push
dec
inc
add
add
add
add
add
add
add
inc
add
jo
push
dec
add
push
add
xor
add
add
pop
add
imul
add
outsl
inc
pop
add
add
add
dec
add
add
xor
jae
add
add
add
add
arpl
push
push
jp
add
add
add
xor
add
jo
jns
xor
dec
add
add
outsb
add
dec
jb
add
dec
dec
add
jno
imul
jno
dec
add
add
jae
add
add
add
add
add
push
dec
cmp
add
jns
add
jno
inc
add
push
add
pop
add
outsb
xor
add
inc
xor
add
outsl
dec
bound
add
jbe
add
add
inc
add
add
arpl
xor
dec
imul
add
add
add
add
xor
add
add
jno
add
add
add
xor
jb
dec
add
add
dec
add
add
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
add
je
add
add
add
push
add
push
add
dec
pop
add
add
cmp
add
dec
add
xor
add
add
add
dec
add
add
jne
dec
inc
add
add
add
ss
add
add
add
add
add
add
add
add
pop
add
push
add
xor
add
xor
add
add
add
xor
add
add
pop
inc
inc
add
inc
js
inc
add
add
push
push
inc
inc
add
xor
add
add
add
add
add
add
add
push
jbe
add
add
add
pop
add
push
aaa
add
add
arpl
add
push
add
push
add
insl
add
jns
pop
add
arpl
add
push
outsl
pop
add
add
add
add
pop
add
add
add
xor
add
dec
add
fs
push
pop
add
add
inc
add
inc
add
jp
dec
push
cmp
add
push
add
add
dec
ja
push
cmp
add
add
add
add
cmp
add
push
add
aaa
add
add
add
add
dec
imul
jo
add
add
add
jo
add
dec
push
add
dec
add
add
add
outsl
add
add
push
je
add
add
add
add
add
add
dec
arpl
push
inc
add
arpl
ja
ja
dec
add
add
dec
outsb
push
ja
data16
add
push
add
je
add
aaa
xor
push
add
add
add
push
push
pop
inc
aaa
add
add
cmp
add
xor
add
add
xor
data16
add
inc
add
jno
jbe
pop
ja
ja
push
insl
add
inc
push
xor
outsb
add
dec
cmp
add
jo
add
inc
je
xor
inc
add
inc
insb
add
add
jbe
dec
add
add
jp
add
add
inc
arpl
dec
add
js
add
aaa
add
imul
xor
add
js
add
add
add
add
inc
xor
add
push
add
add
add
add
pop
pop
jae
push
popa
add
add
add
add
push
add
push
xor
pop
push
xor
dec
dec
add
js
add
jno
add
add
add
add
add
push
dec
imul
data16
dec
add
imul
jno
popa
add
push
add
add
xor
add
add
inc
add
add
add
add
push
add
add
add
add
imul
add
add
add
add
add
add
add
jbe
add
data16
add
add
add
popa
add
add
inc
aaa
jno
jbe
add
bound
add
add
arpl
inc
add
push
push
pop
add
push
pop
fs
add
cmp
add
jp
jbe
imul
xor
add
jb
push
add
add
xor
cmp
add
add
xor
push
arpl
add
add
xor
jp
xor
add
jns
add
add
add
dec
pop
add
imul
add
push
inc
add
je
add
push
add
inc
add
add
add
jbe
inc
add
add
ss
inc
add
add
inc
add
add
xor
add
inc
arpl
xor
add
arpl
push
imul
arpl
insl
push
arpl
push
inc
push
dec
dec
dec
push
inc
add
add
add
ja
jne
add
inc
add
add
add
push
jne
aaa
push
add
add
add
dec
add
add
pop
insl
add
dec
outsl
jp
dec
add
push
jp
add
add
add
add
inc
dec
add
add
add
inc
aaa
add
add
outsb
inc
insl
add
pop
add
inc
add
add
add
add
add
add
imul
dec
add
add
add
add
gs
add
add
add
add
dec
xor
outsb
add
cmp
xor
add
push
add
add
add
add
add
addr16
add
add
aaa
inc
dec
add
add
add
xor
jne
xor
dec
add
xor
add
add
add
dec
add
push
add
add
push
push
add
add
gs
jo
add
xor
inc
inc
je
add
add
add
gs
add
add
inc
add
js
add
add
add
jne
add
pop
jne
add
add
add
xor
inc
add
add
cmp
bound
add
add
dec
jns
add
inc
add
jo
xor
add
add
add
add
push
inc
add
dec
add
add
add
outsl
add
add
je
add
xor
cmp
xor
jns
add
add
add
add
jne
add
xor
add
xor
add
add
add
add
pop
add
inc
add
add
add
dec
add
add
push
add
add
xor
xor
dec
add
inc
add
add
push
jbe
add
add
add
bound
add
push
popa
push
bound
push
add
aaa
inc
add
inc
add
xor
add
imul
add
add
add
inc
add
pop
add
push
add
add
add
add
add
add
xor
add
inc
add
add
add
add
push
arpl
add
dec
inc
ja
add
xor
dec
outsb
dec
outsb
add
dec
add
inc
jns
jae
inc
add
add
add
push
jbe
add
xor
cmp
add
dec
add
push
je
je
add
add
dec
add
bound
add
ja
add
jne
add
push
pop
add
add
push
xor
add
add
add
jae
inc
ja
add
jne
add
inc
add
insb
arpl
add
push
je
add
push
add
add
inc
insb
add
add
outsb
jo
push
add
add
add
add
fs
add
add
add
add
arpl
add
add
add
dec
pop
jae
add
add
push
add
push
add
add
xor
add
jbe
add
add
push
push
push
push
xor
cmp
xor
insb
add
add
dec
add
add
inc
ja
add
inc
push
pop
dec
jns
add
add
add
add
push
push
push
add
push
add
inc
add
push
add
add
inc
inc
imul
popa
jae
xor
add
push
add
add
add
outsl
add
push
add
jns
add
xor
add
insl
jae
dec
pop
add
add
inc
add
arpl
pop
push
inc
data16
add
xor
add
add
outsb
add
inc
jne
popa
dec
push
xor
add
add
jbe
js
add
add
add
push
add
outsl
add
add
add
add
add
push
inc
add
add
jo
add
xor
add
add
add
inc
insl
push
add
dec
add
push
add
add
dec
jp
xor
aaa
add
insb
dec
jae
add
push
dec
add
dec
xor
add
popa
arpl
xor
add
add
add
add
add
add
jno
add
jp
dec
xor
add
outsl
xor
add
add
add
add
pop
dec
push
add
push
xor
add
bound
dec
je
add
add
add
insl
imul
add
add
add
add
add
add
add
outsl
add
add
add
add
insb
jno
add
add
imul
add
add
add
add
add
add
add
add
outsb
jns
xor
inc
xor
imul
imul
push
add
ss
xor
add
jno
cmp
add
add
inc
add
add
add
dec
add
popa
add
add
inc
push
outsl
add
inc
dec
add
imul
add
add
add
outsb
inc
pop
add
inc
add
add
outsl
inc
cmp
add
bound
push
add
dec
add
xor
inc
push
add
dec
xor
add
add
add
imul
dec
add
push
add
add
dec
pop
outsb
outsl
add
xor
inc
bound
add
push
xor
add
je
add
add
add
add
xor
add
jp
add
add
push
add
dec
xor
add
js
add
xor
add
inc
xor
imul
push
jne
aaa
dec
add
jns
push
cmp
push
add
jne
add
push
jns
add
pop
inc
inc
add
add
add
add
jns
add
add
add
dec
add
add
insb
inc
ja
push
dec
add
dec
add
dec
inc
add
dec
arpl
add
xor
add
imul
add
add
add
push
add
js
add
add
xor
add
pop
xor
add
add
imul
jne
add
add
xor
insl
dec
add
jae
inc
popa
add
add
add
jne
add
add
add
dec
add
inc
add
add
add
add
push
add
dec
add
add
push
add
add
outsl
add
add
popa
dec
add
add
push
data16
jns
dec
add
inc
add
add
ja
inc
imul
aaa
bound
add
add
dec
add
jo
add
add
add
ja
data16
dec
add
add
add
add
popa
pop
inc
bound
add
add
push
add
add
add
add
add
add
add
push
add
add
add
jbe
add
add
add
cmp
push
add
imul
add
jb
dec
add
inc
push
push
xor
add
add
push
pop
dec
add
add
jo
add
add
dec
jno
add
jns
add
add
add
add
add
add
push
add
push
add
jb
add
add
xor
push
popa
add
add
push
add
push
add
push
xor
dec
add
js
ss
inc
add
add
inc
add
jne
inc
push
add
dec
ss
jp
jo
push
inc
insl
add
inc
add
add
add
add
ja
cmp
add
jne
push
xor
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
xor
push
add
add
inc
push
push
xor
add
add
add
xor
add
dec
add
arpl
add
add
jae
add
add
add
cmp
add
push
add
add
push
add
add
add
add
add
cmp
add
add
add
add
push
add
add
add
add
inc
inc
add
add
add
add
jbe
imul
inc
inc
add
inc
add
add
add
add
add
add
add
push
add
push
add
add
dec
add
pop
add
pop
add
add
add
add
add
add
add
add
add
jp
jb
push
add
add
add
jae
inc
add
dec
add
add
dec
bound
data16
push
add
add
push
add
add
pop
add
insb
add
add
dec
push
add
add
add
add
imul
inc
push
add
add
add
add
add
jne
push
dec
add
add
push
add
push
dec
add
je
jb
add
push
xor
jns
add
xor
dec
push
add
addr16
push
add
inc
fs
add
add
add
add
insl
add
arpl
add
dec
add
dec
xor
add
add
xor
add
add
add
add
add
bound
popa
add
add
xor
add
add
add
dec
add
add
pop
addr16
add
add
inc
add
cmp
inc
push
add
data16
add
jne
add
jb
inc
add
jae
add
add
jp
add
add
push
jno
add
add
add
dec
add
xor
bound
add
add
add
inc
add
dec
push
insb
add
push
xor
add
add
dec
push
xor
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
dec
add
add
js
add
add
inc
add
push
jo
inc
add
pop
inc
add
xor
push
js
add
inc
push
dec
xor
add
add
js
add
add
cmp
xor
push
xor
push
outsl
add
xor
gs
add
dec
js
ja
add
add
dec
xor
add
cmp
add
add
push
push
add
imul
add
add
dec
outsl
jae
add
add
dec
dec
add
add
add
insb
add
add
add
push
push
add
add
add
pop
add
add
add
add
add
push
add
ja
inc
add
add
add
dec
add
add
add
add
add
popa
add
dec
jbe
add
add
add
add
add
add
push
add
ja
jne
add
popa
inc
dec
xor
push
dec
push
add
add
add
add
xor
add
add
js
jae
push
add
add
push
dec
add
jno
add
cmp
xor
xor
jbe
add
add
add
jae
dec
dec
inc
inc
jbe
ja
imul
add
add
data16
add
push
jo
add
add
add
add
dec
jbe
add
add
dec
add
add
add
addr16
push
add
add
add
jae
dec
aaa
outsl
add
add
add
add
dec
insb
add
add
add
add
add
xor
add
inc
add
add
cmp
add
add
push
jo
push
add
cmp
outsb
add
je
outsb
add
xor
imul
add
add
jp
xor
dec
add
js
pop
jbe
add
push
add
add
jno
dec
add
xor
add
push
add
add
pop
add
push
push
xor
add
add
add
add
je
add
jo
add
add
add
add
push
add
push
add
add
dec
bound
push
xor
arpl
bound
add
add
jns
jns
push
insb
add
je
xor
gs
data16
push
add
dec
add
add
add
js
add
inc
outsl
add
add
add
add
add
add
xor
add
add
add
add
add
inc
push
add
add
push
dec
add
add
push
add
add
je
add
add
add
add
add
add
push
xor
xor
dec
inc
bound
add
dec
inc
pop
jp
add
add
add
inc
push
data16
push
jp
jns
add
add
outsl
cmp
push
add
add
dec
add
add
outsl
add
outsl
add
add
add
xor
add
add
add
js
add
add
inc
push
inc
add
add
insl
add
push
add
pop
xor
add
add
inc
add
jb
push
add
add
add
js
je
fs
dec
insl
add
dec
jp
add
cmp
push
add
add
cmp
aaa
jae
push
add
add
add
pop
jp
jo
add
dec
add
add
outsb
add
add
imul
xor
push
add
add
add
add
imul
push
dec
ja
xor
add
add
inc
pop
add
add
add
add
add
add
add
add
add
add
js
dec
add
add
xor
xor
add
add
pop
push
add
add
add
cmp
xor
add
add
add
add
imul
dec
jns
xor
jp
add
jne
add
arpl
dec
aaa
dec
add
jb
add
inc
add
push
add
add
insl
push
js
add
add
xor
add
xor
add
xor
je
popa
add
add
add
add
insb
add
outsb
add
add
add
insb
jo
imul
cmp
add
dec
xor
inc
add
add
add
outsl
inc
add
xor
add
add
xor
add
add
add
add
inc
jo
add
insb
je
dec
add
imul
add
add
jno
inc
add
add
dec
xor
xor
add
add
push
add
js
add
inc
inc
add
push
dec
push
dec
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
aaa
add
add
outsb
push
add
inc
outsb
pop
add
add
add
push
inc
xor
push
add
arpl
jbe
add
jb
je
add
add
add
add
add
add
add
dec
add
add
add
add
jno
add
jae
arpl
add
outsl
add
push
inc
add
outsl
dec
push
add
bound
dec
xor
add
xor
add
add
add
add
dec
add
add
add
jns
add
add
pop
add
add
push
jne
add
add
fs
add
pop
dec
add
inc
add
add
push
add
add
jp
add
add
dec
inc
xor
add
add
add
dec
inc
add
ss
add
add
add
pop
outsb
dec
add
add
add
imul
jae
add
add
add
jns
add
push
add
add
add
add
push
add
add
imul
jne
js
xor
jbe
add
bound
dec
dec
inc
add
je
add
dec
xor
add
outsb
inc
add
dec
add
add
add
dec
inc
add
add
add
dec
inc
inc
add
add
dec
push
ss
xor
cmp
add
add
pop
dec
jb
xor
add
xor
arpl
cmp
add
pop
add
add
add
jo
ja
inc
add
pop
push
add
push
add
add
insl
add
xor
add
imul
ja
add
xor
add
add
add
insb
add
js
add
add
insl
aaa
add
add
add
add
add
jp
popa
add
inc
add
data16
add
inc
add
dec
arpl
push
add
add
add
push
imul
add
add
add
push
add
inc
inc
add
xor
add
dec
add
add
add
add
add
add
add
add
add
add
jp
push
push
add
inc
dec
jns
jno
popa
add
inc
add
je
add
jae
add
outsl
add
add
xor
popa
dec
add
dec
inc
xor
jbe
add
add
jae
add
ja
dec
inc
add
add
add
add
add
add
add
cmp
add
jno
add
outsb
xor
je
xor
bound
push
xor
add
jb
add
add
jp
jae
add
add
add
add
xor
push
push
add
pop
add
add
inc
push
push
add
add
pop
add
add
jae
jno
cmp
jne
inc
je
push
dec
xor
add
dec
add
add
dec
add
outsb
dec
jbe
add
imul
add
add
add
push
ja
add
push
add
outsb
imul
add
add
xor
jbe
pop
add
add
jbe
add
jp
add
add
ja
imul
push
xor
inc
xor
dec
gs
add
add
push
add
add
ja
push
add
push
add
add
add
outsl
xor
add
push
add
add
jp
outsl
outsl
add
add
add
add
add
add
add
add
add
add
imul
add
add
jne
push
add
pop
push
add
inc
xor
cmp
add
add
xor
pop
add
inc
add
push
add
add
add
ja
add
push
pop
add
add
add
add
add
ja
insb
add
outsb
ss
dec
jne
add
jbe
push
add
add
add
push
addr16
outsb
add
push
push
add
inc
je
push
add
add
jbe
push
add
add
push
add
xor
add
add
add
xor
fs
add
add
add
add
add
add
add
add
add
add
aaa
insl
add
push
jno
inc
add
inc
add
add
jns
imul
xor
ja
jno
add
push
add
add
ja
add
add
add
dec
add
outsb
add
dec
xor
fs
jbe
add
add
arpl
add
add
add
add
dec
dec
add
push
push
add
add
dec
add
add
add
add
add
gs
add
add
add
add
add
add
add
add
outsl
aaa
add
dec
add
xor
addr16
add
xor
add
add
push
dec
pop
ja
add
xor
insb
add
dec
arpl
jo
add
xor
add
jp
dec
add
jbe
add
add
add
add
insb
add
add
jbe
jne
push
xor
add
xor
add
add
add
add
add
imul
jp
ja
add
inc
add
add
inc
xor
add
add
xor
inc
add
bound
jae
jp
add
outsb
add
jne
outsb
bound
push
xor
push
outsb
add
add
insl
inc
bound
add
add
aaa
outsb
add
je
add
push
push
inc
add
inc
xor
add
aaa
add
add
add
pop
xor
push
add
inc
add
add
cmp
add
add
add
pop
add
cmp
add
inc
add
add
jo
pop
add
add
add
xor
jb
add
add
add
add
bound
imul
add
add
jb
add
arpl
cmp
pop
add
add
add
dec
imul
add
inc
add
add
dec
xor
pop
push
dec
add
add
xor
cmp
add
xor
add
insb
add
add
jp
jb
arpl
add
bound
add
add
xor
add
add
outsl
add
add
add
add
add
push
add
add
xor
imul
push
outsl
add
xor
add
add
add
jb
add
add
insb
dec
jae
inc
jp
add
add
insl
inc
xor
add
dec
insb
add
jae
xor
add
add
add
add
dec
add
inc
add
add
add
add
ss
inc
add
dec
pop
inc
add
push
ja
add
add
add
inc
add
fs
add
imul
add
inc
cmp
add
push
add
pop
add
add
add
add
add
add
add
dec
arpl
add
jp
dec
add
add
add
add
add
add
push
outsl
popa
inc
add
add
add
add
push
jbe
jns
ss
add
xor
add
dec
inc
add
add
add
add
inc
dec
add
jae
aaa
jb
add
add
add
xor
dec
inc
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
js
add
jne
add
add
cmp
xor
add
outsl
xor
add
jae
add
add
inc
aaa
xor
add
add
dec
push
add
add
add
add
add
add
inc
add
add
imul
push
jbe
dec
add
push
add
jno
add
add
add
add
dec
add
pop
add
ja
add
add
pop
js
outsl
push
pop
pop
add
add
add
add
xor
dec
add
dec
add
push
gs
add
dec
add
dec
add
xor
add
inc
dec
dec
add
add
add
jno
jne
add
add
inc
ss
add
add
cmp
add
add
js
dec
add
add
add
inc
add
xor
dec
xor
inc
add
inc
dec
add
add
inc
cmp
inc
add
add
add
add
add
dec
add
dec
pop
add
add
add
add
add
jno
add
jo
add
add
dec
push
add
xor
add
dec
add
add
add
add
add
ja
add
xor
add
add
add
jae
add
imul
imul
add
pop
push
add
js
addr16
inc
add
jno
pop
add
pop
add
add
add
xor
push
add
dec
outsb
push
dec
inc
add
add
xor
add
add
add
add
jno
inc
add
jne
add
jns
add
add
add
push
inc
add
ja
add
add
jns
add
inc
add
add
inc
bound
inc
xor
add
add
add
add
dec
add
add
dec
push
add
add
je
add
xor
outsb
add
add
xor
inc
add
add
dec
outsb
add
inc
add
inc
insl
add
push
add
data16
jns
js
add
add
add
add
add
push
add
push
ss
dec
add
insb
add
add
add
add
push
push
add
push
add
add
inc
add
inc
add
push
js
add
add
add
inc
add
add
cmp
add
push
inc
add
add
add
add
imul
inc
add
add
pop
popa
cmp
xor
add
pop
add
add
add
outsb
push
ja
add
add
push
dec
add
add
add
jp
add
pop
aaa
add
dec
xor
jne
push
aaa
js
add
add
add
cmp
add
add
pop
add
xor
insb
add
add
jae
js
jo
push
js
inc
add
push
add
add
add
add
inc
add
push
add
add
add
add
jbe
ja
add
add
add
add
xor
xor
outsl
add
jno
add
add
add
add
add
add
inc
add
add
dec
add
add
dec
dec
add
inc
dec
add
dec
add
jne
add
push
jp
add
cmp
add
add
add
add
dec
add
add
add
jno
xor
je
add
add
add
add
xor
inc
inc
push
push
dec
push
add
add
add
push
add
add
add
add
add
inc
add
add
add
add
push
add
add
imul
inc
add
jno
push
add
dec
add
arpl
inc
add
add
add
data16
imul
add
imul
inc
add
jae
pop
jb
add
add
add
add
add
dec
add
add
insb
ja
add
add
add
insl
add
add
add
add
inc
pop
add
add
insl
add
xor
add
add
add
push
add
add
dec
add
add
push
add
add
add
add
push
gs
add
xor
add
add
add
push
dec
insl
add
inc
cmp
add
cmp
add
add
addr16
push
push
add
push
add
inc
push
push
cmp
jne
inc
imul
add
dec
push
add
dec
add
add
add
cmp
add
dec
xor
add
add
add
add
add
inc
add
add
insb
dec
push
add
add
add
add
add
add
jae
add
add
push
add
add
push
bound
add
dec
cmp
push
add
data16
jae
dec
add
add
push
add
add
dec
jo
push
add
xor
cmp
add
add
add
add
push
add
inc
push
add
dec
add
jbe
add
push
gs
bound
add
add
add
imul
add
dec
inc
add
push
add
add
push
add
inc
je
add
add
add
inc
xor
jne
push
add
add
add
jns
xlat
lret
jne
rol
stc
inc
shlb
mov
test
pop
shrb
jl
mov
sbb
sarl
fiaddl
pop
dec
mov
cmp
or
lret
sub
aas
xchg
ffreep
sti
mov
cli
repnz
cmp
pop
ret
loope
and
fnstsw
out
js
xor
add
mov
pop
xor
and
shll
dec
leave
cmp
mov
sbb
clc
mov
icebp
ret
push
gs
pop
repz
mov
test
addl
fdivr
int
pop
sbb
pop
dec
enter
push
leave
icebp
jmp
fisttpll
inc
loopne
js
pop
cmp
xchg
fdivrl
pop
mov
push
fmuls
rol
or
sbb
or
add
test
cli
loopne
jp
js
push
and
addr16
test
cmp
inc
pushf
int3
fisubl
lret
icebp
and
inc
jns
inc
ret
dec
pop
jmp
enter
loope
fdivs
addr16
xchg
adc
test
add
push
aam
pop
cwtl
rol
xor
mov
lcall
inc
stc
rcl
jb
and
aad
push
clc
jmp
pop
mov
clc
aad
pop
popf
cwtl
les
jge
cli
jmp
rcrb
js
ds
pop
lcall
cmp
cltd
mov
adc
mov
jns
sti
popf
rcrb
pop
fwait
jnp
pop
lcall
sbb
enter
pop
lcall
mov
rcrb
clc
sbb
sti
adc
jp
std
push
clc
jecxz
dec
sbb
sbb
cmp
cmp
mov
das
cmc
in
push
add
mov
aam
jecxz
mov
orb
les
popf
jg
out
sahf
cwtl
cltd
xchg
call
sti
clc
ror
cltd
mov
mov
stos
ficoms
icebp
rclb
jecxz
lcall
lock
dec
mov
fdivrs
shll
std
filds
loope
jmp
mov
imul
out
stc
fcoms
int
cmp
jl
sbbb
clc
jle
roll
aas
clc
test
pop
xor
fwait
pop
adc
dec
push
push
ds
ror
inc
stc
mov
mov
mov
shrb
mov
leave
cltd
lret
sub
pop
leave
jns
fadds
mov
enter
pop
dec
pop
rcll
jns
lods
dec
sbb
xchg
mov
sbbb
dec
cmp
mov
sar
cmp
mov
pop
sarl
addr16
clc
cmp
clc
xor
dec
jnp
cli
sbb
cmp
popf
cli
cmc
pop
pop
lcall
fmuls
imul
lcall
clc
pop
leave
jp
fisubrl
cmp
xlat
cli
mov
mov
pop
sbbb
cmp
fdivr
clc
mov
xlat
cli
cmp
mov
push
fwait
cmp
fadds
call
fwait
js
frstor
cmp
mov
js
rcl
repnz
xlat
inc
xchg
ljmp
rorb
es
pop
dec
sarl
aad
popf
jno
shlb
mov
jp
fsts
fidivl
ljmp
sbb
shll
adc
or
xlat
xorl
lods
icebp
test
int
enter
jmp
cmp
jl
aam
rolb
int
mov
cltd
sbb
xchg
aam
sbb
test
push
aam
xorb
aaa
xchg
xor
cmp
lock
fdiv
leave
xlat
jns
repnz
fstpl
orl
push
movsl
mov
xchg
cltd
and
dec
pusha
int3
aad
rcr
mov
outsb
xchg
mov
int3
cmp
lahf
and
mov
in
sub
or
popf
sbb
pop
cmp
xchg
jl
push
aam
out
fstpl
mov
xchg
lea
aam
lahf
orb
sbb
pop
and
and
fmulp
xchg
jge
aam
leave
push
push
filds
ficomps
jns
sti
or
mov
test
mov
push
shll
adc
and
aad
cmpsb
jno
mov
std
sbbl
cltd
lods
leave
mov
or
test
sahf
push
sbb
test
mov
sbb
enter
cmp
fildll
setg
enter
pop
sub
popf
jns
adc
fcmovbe
mov
std
cmp
sbb
pushf
int3
fmulp
sti
fwait
jnp
jno
adc
js
and
dec
ss
xchg
and
ja
jo
jae
fildl
jg
pop
xor
dec
pop
sahf
xchg
ss
lea
cli
lahf
shll
fstpl
fcmovbe
es
pop
xor
xlat
pop
inc
lcall
dec
les
dec
pop
repnz
mov
xlat
dec
sbb
lret
rcrl
jmp
adc
leave
adc
sti
jl
mov
test
pop
hlt
jno
cld
pop
iret
rcrl
mov
jne
xchg
inc
fdivl
jo
lds
add
out
rcrl
roll
mov
cmp
paddusb
sub
mov
push
dec
sahf
mov
cmp
arpl
and
jb
testb
fdivl
shl
lea
lahf
imul
mov
int3
cltd
clc
lds
popf
incl
dec
lods
push
adcb
inc
lea
call
push
out
sti
popa
int
rclb
lods
add
call
push
ss
stos
sahf
mov
mov
xor
std
aas
inc
sbb
addl
std
lcall
decl
test
add
mov
shll
xchg
sbb
popf
jge
mov
jle
dec
push
sbb
fnstcw
dec
pop
jg
repz
push
sahf
popf
fnsetpm(287
aas
sahf
ss
lock
push
push
sub
lods
dec
mov
packssdw
jmp
dec
filds
aad
push
push
mov
icebp
popf
shl
pop
mov
and
xor
mov
push
out
push
repz
push
nop
or
ret
inc
sahf
inc
adc
adc
jb
bound
fnsave
sub
loopne
fldcw
mov
xor
addr16
adc
push
test
fdivp
sub
js
xchg
mov
out
cs
popf
imul
enter
sbb
jae
dec
cltd
jge
jecxz
outsb
xchg
jo
shrb
xchg
mov
inc
mov
into
add
xor
pop
pop
push
es
mov
jb
andl
xchg
outsl
iret
and
inc
xor
or
lea
push
jno
cmp
add
pop
pop
sarl
jae
mov
or
xor
dec
xor
mov
xchg
call
stos
pop
shl
pop
sahf
push
mov
mov
mov
sub
pop
bound
les
pusha
cmc
push
out
ds
clc
shl
lods
mov
not
clc
stc
mov
outsb
mov
lahf
jno
aaa
not
pushf
ficompl
sti
xchg
sbb
xchg
xchg
mov
jno
sahf
sub
and
je
push
aad
jmp
cmpsl
xor
adc
testl
js
cli
fldl
rol
cs
int3
adc
xchg
lret
inc
mov
cmp
stc
and
icebp
jo
adc
lret
push
pop
push
adc
fistl
jno
jp
sbb
xchg
fsubrs
adc
fldl
xchg
mov
and
out
lock
rcrl
enter
xor
ds
inc
inc
xor
push
pushf
std
inc
push
ret
adc
sbb
mov
dec
lahf
mov
sahf
pop
push
adc
mov
cmp
dec
pop
std
fwait
jp
dec
jns
inc
lret
test
cmp
or
sarl
xchg
jnp
sahf
add
pop
mov
cmpb
mov
lock
mov
arpl
jl
cmc
fnstsw
mov
mov
int3
cld
fidivrs
pop
in
add
fistpll
adc
lock
sbb
xor
fucom
lea
cli
mov
jge
stos
inc
out
popf
inc
ss
arpl
cltd
std
dec
leave
leave
cltd
addr16
jo
jmp
les
mov
sub
shl
sbb
test
mov
dec
dec
cs
lcall
pop
leave
xor
sbb
sarl
popa
inc
out
mov
outsb
popf
jl
repz
scas
inc
roll
xchg
push
fs
insl
dec
push
int3
dec
sub
mov
rclb
sbb
std
mov
lea
xchg
pop
xchg
popf
iret
cltd
push
mov
jge
mov
pop
sahf
lcall
mov
cmp
jl
adc
aam
pop
xchg
aad
pop
dec
sbb
rcrl
in
imul
adc
sahf
pop
mov
ret
stc
xchg
fisttpll
cwtl
xchg
add
mov
out
icebp
jnp
sbb
xchg
add
fcmovbe
xor
inc
scas
push
fwait
xchg
lea
incl
ljmp
int3
pushf
pop
pop
xchg
xchg
dec
repz
aas
pop
insl
mov
push
mov
sbb
and
popf
jle
sahf
das
jle
pop
fwait
adc
cmp
add
cmc
pop
xchg
jne
adcb
pop
cmp
lea
enter
movsb
pop
jmp
mov
dec
sahf
or
mov
pop
xor
jmp
sub
push
inc
mov
mov
mov
movsb
int
sbb
lods
jge
xchg
dec
dec
sbb
xor
lret
xchg
jg
ret
mov
mov
int3
hlt
insl
icebp
cmc
jo
std
cld
add
or
jge
jnp
andb
dec
pop
ds
jle
loop
clc
ljmp
push
out
ljmp
cmc
add
cld
out
lret
add
cwtl
push
test
jo
enter
inc
lret
jmp
int
xor
cmp
mov
add
mov
movsl
or
sbb
lret
cmp
ds
xchg
dec
and
cmp
lea
jg
lret
jno
jnp
lret
std
xchg
les
pop
test
sbb
in
popf
jno
jb
call
clc
add
inc
sahf
adc
outsb
xor
popf
lahf
fucom
lds
jge
iret
mov
stos
loopne
push
jns
popf
mov
aas
pop
push
push
sahf
js
outsl
pop
lock
fstl
sahf
xchg
xor
cld
sahf
mov
loop
pop
int3
cmp
rol
cli
sahf
rcll
jne
pop
dec
jb
icebp
jge
mov
inc
xlat
pop
cmpsb
add
out
xor
cmp
jae
js
jp
mov
add
js
pop
fldenv
jb
in
jp
stos
imul
adc
pop
rcll
je
jl
pop
repz
lcall
lock
into
mov
inc
dec
shr
movl
xchg
push
icebp
std
sbb
repnz
call
loop
adc
mov
mov
add
cmp
dec
outsl
out
jle
loopne
push
xchg
mov
jae
in
add
jp
jnp
iret
xor
std
or
xor
adc
xor
xor
rclb
or
xchg
sbb
loopne
movl
outsb
cmpsl
pop
enter
add
dec
je
cmp
push
aad
dec
cmc
mov
inc
cmp
adc
adc
clc
out
enter
rcl
dec
icebp
loopne
dec
push
test
cltd
into
xchg
imul
add
pushf
aas
mov
aaa
shl
jb
aas
lahf
dec
into
inc
fdivr
fisubs
test
fistpll
push
dec
pushf
lret
push
cli
mov
fcoms
mov
iret
outsb
mov
jmp
adc
insb
sar
jmp
leave
adc
jns
fldt
nop
lahf
mov
loope
out
hlt
into
cmp
mov
pop
jb
jge
mov
xor
gs
jg
movsl
adcl
and
cmc
outsb
jp
outsl
mov
fsubs
push
mov
pop
adc
aas
int
dec
sti
lahf
push
pop
orb
test
sbb
sbb
xchg
xorb
arpl
mov
sbb
mov
call
sbbb
dec
inc
cmp
xor
inc
addl
mov
jmp
stc
jne
xchg
bound
mov
push
pop
mov
sahf
push
adc
mov
lret
add
pop
iret
push
push
fadd
dec
fldl
orl
cmp
fnstcw
js
dec
out
push
and
ja
pop
jb
fwait
push
pop
add
sbb
mov
loop
rcll
outsb
sub
jae
dec
in
dec
pop
pop
sub
iret
popf
lret
dec
roll
cmp
add
scas
out
jmp
das
xchg
inc
mov
mov
mov
nop
push
adc
iret
adc
es
xor
xor
xchg
arpl
mov
js
std
rcrl
test
mov
push
dec
push
lret
fnstsw
xor
std
dec
aad
sahf
mov
xorl
mov
icebp
push
sbb
std
jns
xor
push
dec
imul
ljmp
lea
movsl
and
sti
jmp
mov
jae
sbb
fisttps
sub
jle
inc
xchg
push
push
nop
jp
adc
shlb
cmp
dec
aam
cmp
and
jo
sbb
notl
repz
sub
pop
xchg
jno
mov
or
fwait
add
clc
mov
scas
mov
dec
pop
sbb
jb
push
sarl
fldcw
fdivrl
hlt
pop
cmp
popa
insb
arpl
sub
test
xor
jmp
dec
sub
ljmp
jl
lea
fwait
leave
xchg
lahf
push
push
andb
iret
jae
sub
ret
sahf
stos
mov
cmp
adc
inc
xor
xchg
in
inc
add
into
mov
fwait
sahf
xor
cmp
cs
or
negl
pop
fwait
mov
subb
jmp
leave
int3
add
mov
fistpl
xor
pop
pusha
rcrb
stc
shrb
jns
and
out
int
adc
call
repz
inc
repz
xchg
ljmp
inc
hlt
add
mov
mov
push
dec
dec
xchg
in
xchg
loope
fstpl
insb
fwait
rcrb
lods
xchg
mov
iret
xor
dec
fsubs
fstps
or
mov
decl
fadds
popa
dec
sahf
xchg
enter
lea
jb
mov
enter
insl
mov
push
fimull
or
add
ss
clc
cmp
xchg
mov
ds
sahf
cltd
or
mov
ja
jae
fisubrs
mov
sarb
pop
dec
jne
inc
test
mov
mov
adc
out
mov
testl
pop
sbb
mov
dec
cmc
adc
xchg
shl
loop
stc
mov
std
cmp
dec
les
xor
cmc
lds
rcrb
xchg
test
insb
push
jle
ret
xor
inc
push
insl
add
xor
cs
sbb
add
add
xor
jns
iret
cmp
ror
sti
sahf
test
xor
mov
imul
daa
mov
es
movsl
xchg
mov
pop
dec
and
and
ss
xchg
fcomps
pop
cltd
mov
pop
pop
pop
mov
ficomps
cmp
lods
dec
in
dec
dec
push
out
sub
call
enter
dec
pop
int3
or
imul
sti
clc
jns
mov
inc
xor
jnp
sarb
clc
cmp
mov
sahf
std
aad
test
pop
arpl
jmp
scas
out
sahf
pop
mov
adc
shlb
push
adc
dec
leave
or
out
sti
mov
pop
sti
xor
clc
loop
xchg
and
xchg
xor
ret
add
mov
lret
xchg
add
enter
pop
mov
imul
xchg
nop
imul
nop
jo
lret
arpl
sbbl
sbb
mov
test
dec
popf
std
sahf
aaa
out
leave
jne
jnp
dec
adc
adc
cld
jno
mov
pusha
dec
call
rcr
outsl
xor
jae
jb
sub
cmpsb
jl
fidivrs
cmp
mov
sbb
dec
jle
push
push
ds
pop
dec
pop
xchg
mov
enter
shll
mov
inc
out
cmp
inc
sub
cmp
dec
push
push
call
push
dec
pop
cwtl
cltd
out
jmp
dec
call
adc
fcoml
andb
dec
mov
lret
xchg
or
xchg
sbb
cltd
std
xchg
pushf
stc
fldt
icebp
sbb
lea
faddl
out
jbe
cld
test
inc
inc
inc
dec
test
xlat
sti
js
pop
jns
repz
aaa
push
pop
test
lcall
adc
push
xchg
ds
nop
outsl
pop
std
xchg
sbb
lea
mov
cmp
leave
cltd
sahf
fs
notb
jmp
aad
out
nop
inc
mov
int
or
arpl
dec
popf
icebp
mov
jno
jnp
loope
sub
sahf
out
jmp
mov
fwait
adc
std
clc
mov
in
fmul
and
outsb
rcl
xorb
cmp
adc
jno
std
push
scas
cs
cld
outsb
fists
test
shr
inc
int
shll
mov
sbb
hlt
sbb
movsl
loope
fists
jno
clc
mov
cmp
popf
imul
cmpsb
and
lahf
aad
inc
imul
sbbb
xchg
sbb
jne
sub
loope
imul
mov
xchg
arpl
lret
stc
lds
mov
in
leave
xchg
sahf
xor
popf
aam
mov
sbb
fldl
fistl
cwtl
adc
fwait
dec
mov
test
mov
push
xchg
dec
mov
xchg
or
sahf
scas
into
xor
xor
iret
mov
int
pop
jecxz
sub
dec
dec
jp
jmp
jnp
xchg
imul
and
cmpsl
js
xlat
adc
stc
test
sahf
lea
cmp
pop
std
sarl
xor
insl
sub
mov
mov
dec
jae
cltd
clc
imul
leave
pop
lcall
repz
sar
insb
pop
pop
sahf
xchg
repz
pop
inc
inc
mov
cmp
shlb
xor
mov
fs
out
mov
mov
push
jbe
mov
jo
add
popf
mov
mov
inc
xchg
push
inc
ljmp
iret
das
stc
sarb
jno
mov
or
call
fsub
lock
stc
out
enter
cld
cs
testb
repz
outsb
in
add
leave
adc
cltd
adc
aad
in
sbb
jle
pop
adc
rcr
aas
pop
lcall
lahf
mov
cmp
sbb
lcall
pushf
mov
cmp
jge
pop
dec
mov
jmp
rcrb
clc
jp
stc
or
cmp
pop
ret
mov
stc
pop
mov
lcall
mov
gs
cli
and
pop
add
adc
int
mov
xor
rorl
aad
aad
mov
int3
cmc
rol
lret
fisttps
xor
stc
pop
mov
jne
lods
fsubs
pop
sbb
xchg
pop
pop
lds
repnz
jecxz
pop
pop
xor
mov
sarl
fwait
lds
jno
repz
ret
lds
aam
aam
call
imul
lcall
adc
add
cmp
and
aam
cltd
iret
repz
inc
pop
ret
cmp
in
cmp
fdivr
jno
sbb
rcr
push
pop
icebp
clc
aam
cltd
mov
xchg
jb
mov
or
lret
jmp
cmp
mov
aas
int
push
or
pop
inc
cld
enter
push
add
cmp
fs
and
jbe
mov
sbb
inc
out
adc
mov
inc
jmp
mov
push
mov
mov
xchg
aad
jno
adc
es
negb
cmp
mov
mov
sarl
aad
mov
jmp
std
inc
shll
ret
push
mov
and
jbe
add
xchg
popf
fwait
jns
push
repz
ss
lods
adc
ror
sbb
cltd
ret
hlt
push
jmp
inc
in
std
int3
mov
insl
cli
pop
cmp
pushf
lock
int3
popa
add
cld
icebp
jg
mov
xor
je
pop
sbb
test
cmp
rcrl
popf
lods
cmp
decl
mov
or
lret
cmp
dec
xchg
into
dec
outsb
leave
cltd
stos
out
mov
fucom
mov
das
dec
pop
fwait
push
pop
push
lock
leave
shll
shrl
sbbl
sub
fucomi
rclb
add
enter
shr
imul
jo
mov
insb
call
stc
fmuls
fdivrs
xchg
fisubl
dec
nop
ret
pop
lock
sarb
fisttpl
pusha
xchg
pop
or
jne
mov
rcr
dec
lret
out
sti
jns
fstpl
mov
xor
ror
std
mov
sti
int
or
enter
cltd
mov
or
fwait
xchg
or
loopne
int
fdivrs
mov
sbb
sti
cwtl
movsl
fwait
dec
imul
jnp
jns
xor
and
and
pop
mov
call
jmp
ror
call
hlt
fwait
add
cld
mov
add
mov
fistps
pop
xor
imul
push
fcoms
xchg
mov
shl
bound
fldenv
clc
push
fdivrp
fcoms
dec
push
add
jae
repz
fsubrp
mov
cmc
dec
sub
lock
dec
push
inc
nop
xor
cmp
sahf
pop
cmpsl
faddl
xchg
sbb
in
push
sbb
xorl
lret
insl
mov
stc
xchg
jnp
cmp
pop
pop
adc
loopne
inc
add
mov
pusha
imul
dec
aaa
mov
push
es
adc
dec
xchg
rcrl
mov
aad
cwtl
shll
fdiv
sbb
cltd
in
rolb
jecxz
cmp
leave
sbb
cmp
jne
jmp
and
das
pop
cltd
shr
adc
mov
pop
xor
pop
xor
in
add
mov
adc
adc
ret
pop
add
pop
mov
cltd
shl
xor
out
rclb
flds
xchg
inc
jmp
xchg
sub
movsl
movsb
leave
cltd
jnp
mov
test
cltd
clc
xchg
push
jecxz
jmp
jne
fdivrs
xor
add
fistl
push
push
das
pop
jmp
pop
pop
shlb
add
dec
shl
push
mov
add
and
and
inc
mov
mov
cltd
into
std
add
lcall
and
mov
imul
lods
stos
push
aaa
push
and
fisttpl
sbb
push
fidivs
aaa
jo
add
xchg
cmp
das
stos
rolb
mov
mov
jno
lret
mov
sbb
or
aaa
sbb
sub
sub
bound
add
or
in
inc
sbb
mov
daa
lods
sbb
stos
cld
and
mov
mov
or
mov
in
cmc
iret
fidivrl
add
shr
mov
fmuls
sub
fimull
add
scas
cmp
mov
rclb
std
lahf
cltd
lock
mov
jne
mov
rcll
aam
int
mov
inc
adc
fldt
push
pop
inc
daa
dec
leave
add
pop
pop
sub
and
push
aaa
imul
sar
or
cmp
inc
sub
dec
jle
cltd
sub
add
xor
jno
pushf
add
add
add
imul
decl
mov
or
and
and
xchg
sahf
fdivr
xlat
fildll
test
xchg
push
sub
and
inc
rolb
jae
addr16
sub
xor
in
dec
imul
add
das
sar
rol
add
mov
jns
ret
sbb
out
xor
lret
in
into
roll
iret
mov
jno
add
ljmp
lock
leave
cwtl
pop
sahf
jp
and
aad
jo
add
sbb
xchg
sbbl
call
xchg
push
push
ljmp
push
pop
loope
mov
lea
mov
or
sti
sbb
mov
dec
add
xchg
rol
add
xlat
dec
adc
sbb
add
scas
insl
fidivs
xor
lds
neg
xor
stos
icebp
nop
xchg
add
test
gs
add
out
std
fildll
push
lock
leave
pop
inc
adc
mov
lahf
jmp
add
or
jmp
leave
or
mov
int
sub
test
icebp
push
mov
mov
dec
pop
sti
pop
popf
fdivrp
push
push
enter
sbb
clc
xchg
js
sti
sti
jnp
cli
mov
std
jge
cmp
popf
lcall
fmulp
sti
fadd
fnstsw
xchg
mov
popf
cmp
std
call
ds
pop
sti
test
popf
pop
fwait
push
cmp
sbb
std
xchg
jge
pushf
sti
sbb
lahf
jg
dec
jle
stc
repz
pop
dec
sti
sti
pop
popf
lcall
pop
xchg
sbb
sti
pop
popf
sahf
jle
stc
jmp
sbb
sti
std
mov
sti
lcall
mov
out
sbb
fsubrl
xchg
rcrl
shr
xchg
fisttpll
sti
jp
stos
pop
adc
adc
cmp
sti
pop
popf
mov
push
sub
sbb
fisttps
call
xchg
jns
test
ds
push
mov
std
das
xchg
pop
dec
dec
sti
mov
stos
test
fcomp
icebp
inc
adc
dec
dec
enter
dec
jmp
push
adc
push
jmp
enter
out
rol
orl
xchg
idivl
sub
icebp
push
jmp
fsubrs
roll
test
loope
jmp
sahf
push
dec
int
insb
js
sar
lcall
mov
cmp
jmp
mov
popf
push
jg
mov
cmp
pop
roll
jae
mov
ret
js
shrl
aad
shrb
inc
jae
cwtl
lock
sbb
mov
fwait
loop
mov
lock
or
jp
sbb
and
shll
dec
jnp
mov
push
int
pop
leave
sbb
pop
pop
jmp
mov
leave
int3
sbb
mov
mov
bnd
ss
inc
pop
dec
test
mov
xorb
les
ret
lcall
cli
mov
jmp
ljmp
xchg
pop
ffreep
cld
mov
stc
push
sbb
sti
xlat
aad
fwait
out
mov
test
jge
mov
lcall
mov
jbe
movsb
out
ljmp
inc
lret
adc
push
pop
pop
jp
push
call
rorb
repz
ljmp
dec
mov
fs
js
jae
jg
cmp
shlb
xor
xchg
movl
dec
lock
inc
loop
inc
cmpsl
movsl
dec
jp
and
jae
mov
mov
es
dec
loope
lahf
out
rol
imul
xchg
mov
lret
mov
xchg
inc
and
lds
jae
cmp
push
cmp
pop
std
sbb
sbb
add
test
xor
leave
mov
inc
mov
dec
loope
pop
dec
cmp
jae
inc
xchg
cmpsl
or
ljmp
leave
push
sbb
pop
and
mov
pop
cli
xor
xchg
xor
ja
addr16
aaa
repz
or
leave
lret
mov
mov
adc
xlat
lret
inc
lea
pop
xchg
stos
ljmp
stos
call
mov
push
ret
lcall
dec
pop
cmp
sub
in
out
lock
stc
xchg
into
pop
ret
jecxz
arpl
fsubl
sti
sarl
jb
mov
sbb
test
lods
andb
jg
js
inc
popf
pop
icebp
pop
movsb
cmp
dec
pushf
jmp
out
mov
jge
jl
xchg
jmp
stos
push
clc
lret
insl
pop
push
jp
sbb
fucomi
sti
jae
add
les
ret
dec
jmp
pop
mov
add
lock
mov
push
shl
pop
sbb
jne
shr
and
in
mov
aad
lret
dec
dec
rol
and
jecxz
fisubs
xchg
push
roll
and
inc
icebp
stc
dec
jge
rcrl
stos
ret
lcall
adc
jnp
out
cmp
xchg
pop
mov
inc
xchg
in
xlat
ret
sahf
inc
xorb
rcrl
jno
and
mov
addr16
cli
addr16
div
jo
fbstp
push
sub
js
xchg
xchg
popa
push
push
mov
fimuls
pop
pop
push
test
push
pop
mov
ret
fsubrs
add
sbbl
pop
dec
sti
pop
inc
popf
ficomps
jns
jno
pop
rcr
cltd
imul
out
jo
xchg
adc
sub
cmp
enter
jae
xchg
push
inc
jnp
dec
aaa
jecxz
adc
pusha
push
rcrl
data16
pop
pop
rcr
sbb
xor
adc
push
sbb
test
dec
pushf
sahf
jecxz
int
fbstp
dec
sarl
jmp
call
sbbl
je
enter
pusha
popf
pop
pop
xor
les
nop
scas
sbb
lcall
and
push
pop
shll
jmp
leave
xchg
repz
rcrl
rcrl
lea
loope
lcall
mov
mov
sbb
xchg
cmp
sahf
sbb
imul
adc
punpckhbw
push
jo
push
dec
mov
enter
jle
fistpl
lahf
enter
mov
mov
sub
jbe
or
cltd
push
jne
push
dec
or
sbb
jg
inc
sbb
stc
adc
pop
gs
add
sti
sbb
pop
hlt
mov
sub
sub
or
icebp
icebp
xchg
inc
xchg
std
mov
jg
mov
out
clc
lods
pop
rcrl
jno
js
pop
jns
sub
mov
lret
mov
aas
cmp
pushf
shll
sub
or
js
rcrb
stc
icebp
clc
faddl
jno
mov
icebp
mov
and
push
fistpll
repnz
std
sbb
jbe
inc
pop
repnz
cmp
imul
xchg
sahf
jle
jb
mov
aad
ljmp
xor
hlt
scas
mov
sbb
mov
stos
push
lock
push
mov
pop
fwait
jae
and
push
sti
outsb
mov
out
ds
add
loop
aad
mov
sti
mov
sbb
mov
clc
adc
pop
lds
jle
jns
mov
out
es
test
nop
adc
pushf
loopne
data16
pop
test
pop
pop
sti
cmp
ret
push
jbe
out
sbb
jmp
cmpsb
mov
push
inc
ret
ret
aad
xchg
imul
sti
push
and
push
lds
pop
aad
xor
jle
sub
nop
mov
push
mov
stc
lods
cmp
lahf
push
fnsave
popf
aaa
rcr
adc
fisubl
push
fbstp
arpl
loope
ret
push
pop
inc
jp
into
sub
xchg
loopne
ds
xchg
mov
and
fisttpl
fsubl
xor
xchg
mov
cli
xchg
scas
or
mov
pop
inc
pop
sbb
lea
fstpl
jae
dec
xchg
in
xlat
adc
js
add
lds
rclb
sbb
jno
sbb
int3
leave
dec
dec
push
dec
push
lahf
dec
aad
stc
or
jno
xchg
push
dec
sbb
pop
push
leave
dec
stc
outsl
fists
pop
inc
or
push
mov
push
rorl
or
jecxz
jb
cld
or
mov
out
jge
push
add
jg
jne
pop
test
mov
xchg
data16
mov
in
push
mov
inc
ljmp
ret
sbb
or
push
insl
outsb
fbld
in
xchg
adc
pop
je
jo
mov
jmp
popf
incl
xchg
lcall
xchg
call
push
lods
jnp
fcoml
js
xchg
dec
fdivrs
je
mov
call
lcall
sub
xchg
xlat
xchg
stc
fildl
xchg
hlt
and
jb
sahf
jno
adc
and
ljmp
inc
sub
inc
out
ret
inc
fimull
fistpl
push
xchg
cltd
fdivl
adc
popf
aam
test
inc
push
fwait
loop
in
sahf
inc
pop
xchg
xor
pop
adc
out
cs
or
inc
pushf
inc
in
out
lahf
fmull
mov
push
std
js
rorl
in
icebp
repz
jns
repz
ds
test
pop
fsubrs
adc
xchg
inc
subb
leave
sahf
inc
xlat
push
cmpsb
lret
and
in
cmp
movsb
lea
pop
and
mov
add
js
sahf
std
dec
dec
out
rorb
aaa
inc
mov
or
ret
mov
outsl
sarb
push
notb
fidivrl
sbb
dec
and
call
fiaddl
sub
jge
pushf
fisttpl
loopne
xor
movsl
xchg
sbb
sub
cwtl
adcl
jae
mov
out
lea
fsts
ss
jle
or
int3
frstor
or
clc
enter
dec
pop
fsubrs
gs
lret
push
jle
mov
mov
sbb
out
dec
scas
mov
add
cmp
adc
xchg
addr16
cmp
jge
pop
sub
lret
nop
leave
fsubr
adc
fstpl
jns
pop
pop
imul
push
xchg
fsts
xchg
or
inc
jae
sarb
dec
lret
out
mov
lret
mov
xor
aam
repz
sar
inc
pushf
out
stos
inc
adc
repnz
jae
push
or
xchg
fs
out
push
dec
cwtl
je
arpl
lock
lods
leave
dec
jecxz
lock
pop
jp
mov
mov
pop
into
or
jmp
jle
test
jp
addl
sahf
jns
mov
int
cld
test
std
clc
pop
clc
push
aad
movsl
inc
ds
out
lret
ljmp
mov
push
and
sarl
jge
jge
mov
fcomp
insb
dec
or
mov
test
movsl
or
sti
aam
aaa
sbb
lea
stc
out
inc
mov
jo
stos
std
repz
or
repz
cmp
pop
xchg
nop
loop
ja
lods
lock
nop
mov
mov
jb
addl
xchg
std
dec
mov
jle
cmp
xchg
pop
push
out
ljmp
aaa
push
shlb
rol
fistl
aad
lock
lret
cli
xor
xor
pop
cld
mov
inc
add
aam
adc
cli
and
int
leave
cmp
push
sub
fwait
and
push
jge
lahf
icebp
cmp
mov
addr16
push
aad
inc
xchg
leave
mov
ret
fnstsw
xchg
addr16
adc
inc
jle
xchg
sbb
dec
cli
call
jmp
or
add
jg
pop
das
jbe
dec
dec
mov
cld
jmp
fldt
sarl
shlb
iret
repz
jo
jecxz
xchg
jbe
adc
dec
aaa
pushl
ret
out
cmp
mov
scas
jg
popf
and
mov
push
or
push
insb
mov
fidivs
into
outsl
leave
push
movsl
jle
iret
les
cli
mov
jns
add
xchg
xchg
mov
lock
adc
bound
repnz
mov
dec
popf
adc
jecxz
inc
nopl
into
imul
lds
sti
pop
sbb
cmp
cmp
jp
imul
add
xchg
mov
bound
jb
test
test
jne
nop
mov
cmpsb
jge
push
sbb
loope
dec
imul
fwait
js
xlat
xchg
mov
push
mov
sar
pop
iret
pop
call
ss
inc
xchg
mov
mov
nop
xchg
iret
inc
loope
inc
cmc
dec
bound
leave
jl
bound
lcall
int
push
or
dec
inc
dec
cmp
pop
push
in
jp
mov
subps
jl
lea
cmc
sub
pop
xchg
pop
push
arpl
inc
mul
jle
fiadds
subl
mov
mov
mov
popf
jae
or
jbe
mov
inc
std
iret
sub
cmpsb
push
std
mov
lret
rol
mov
popa
mov
mov
push
pop
je
sbb
int3
inc
push
push
cltd
fnstcw
dec
mov
push
sbb
cli
adc
leave
add
jnp
loop
jle
xchg
mov
lret
jnp
stc
stos
dec
cwtl
lods
std
cld
xchg
std
cmpsl
test
popf
lea
pop
popf
sti
jle
sbbl
icebp
sub
inc
add
inc
sti
mov
in
fnstsw
lret
leave
dec
int
mov
filds
mov
sbb
sbb
mov
test
pop
pop
fwait
nop
mov
jmp
add
mov
and
pop
dec
lret
enter
adc
lea
add
orb
rcl
pop
fnstsw
mov
add
push
sub
add
push
push
adc
in
mov
repz
cmp
push
inc
lea
adcb
outsl
adc
jb
out
cmpsl
sub
outsb
test
jecxz
fsubp
push
mov
add
pop
adc
add
xor
adc
xlat
mov
mov
shrl
not
mov
cltd
out
adc
add
std
loope
inc
clc
dec
fmuls
pop
inc
rcrl
add
out
call
test
stc
cmp
inc
mov
das
rclb
rcr
jl
inc
movsb
fistps
fcmovnb
pop
shlb
aad
jp
shrb
rcll
sahf
xor
push
fcmovnu
sbb
dec
leave
nop
sbb
pop
mov
sarb
lods
mov
jecxz
sti
add
sar
mov
ret
repnz
ror
loopne
mov
rcr
pop
inc
lret
popa
test
pop
rorl
mov
dec
push
mov
out
jns
iret
mov
sar
push
int
loopne
call
lea
xchg
push
mov
inc
aad
clc
into
cld
jecxz
imul
inc
jb
push
inc
jmp
and
dec
sahf
mov
mov
dec
loop
mov
aad
cmp
push
test
push
push
fldt
push
adc
jp
push
mov
aaa
in
js
push
mov
stos
push
cltd
add
cli
add
dec
in
jae
cmp
and
pushf
cwtl
addl
sub
push
scas
sub
stc
mov
xchg
and
or
jnp
movsl
aaa
xchg
imul
fstl
adc
shrb
stc
mov
inc
fcmovb
test
push
push
cld
xor
scas
push
jle
popa
pop
jnp
add
data16
sub
pop
jecxz
add
xor
jg
or
and
push
data16
sbb
lds
mov
inc
inc
daa
add
push
push
repnz
sub
repz
inc
mov
movsb
bound
inc
es
dec
push
and
fists
mov
cltd
es
cmp
aaa
sbb
repnz
shr
mov
loope
add
xchg
pop
mov
add
xchg
xchg
xchg
cmp
adc
push
lret
fildll
int3
inc
adcl
lcall
fidivrs
clc
pop
icebp
jecxz
or
jae
inc
add
add
insb
pop
test
dec
mov
hlt
or
sbb
fnstsw
push
ret
icebp
popf
fcompl
cmp
orl
lock
mov
cmpsl
lea
cmp
inc
aad
loope
in
mov
sbb
jns
andl
lods
sahf
cmc
enter
js
loopne
test
addl
rcr
sbb
and
pop
fistpll
add
push
xchg
jno
enter
fs
cmpsb
mov
xor
jmp
mov
sbb
rcll
pop
leave
dec
divl
mov
sahf
xchg
mov
iret
fwait
and
xor
test
xchg
jns
sub
sub
ja
mov
ret
sbb
int3
adc
imul
loope
jns
arpl
pop
mov
mov
sbb
int3
sbb
xchg
mov
mov
popf
fprem1
pop
fbstp
inc
pop
adcb
aad
dec
push
mov
push
lret
mov
lcall
rcr
push
rorb
dec
jle
sub
xchg
aad
iret
cmp
call
aas
fdivrs
cwtl
dec
dec
test
xchg
sbb
lods
pop
dec
push
sbb
xchg
inc
sbb
pop
inc
fdivp
orb
dec
jbe
pop
or
scas
xchg
ficoms
push
fists
or
adc
popf
fninit
fistps
ljmp
mov
fsubrl
pop
jno
bound
ret
popa
leave
fadds
push
in
es
fildll
sub
lds
sub
add
popa
xchg
push
lods
xchg
pop
mov
mov
fimuls
mov
cmc
int
mov
iret
movsl
sbb
dec
fisubrs
adc
lods
imul
mov
decb
inc
jle
movsl
adc
lea
or
adc
mov
cmp
cmp
add
jo
lret
push
jnp
cltd
inc
fimuls
pop
mov
adc
jns
in
in
cmp
jne
or
push
icebp
push
push
cmp
xchg
jbe
cmp
jns
cmp
jb
jae
scas
mov
pop
mov
sub
jo
fstl
cmc
fidivs
leave
cmp
inc
mov
nop
jno
inc
mov
daa
cwtl
sub
repz
fsubp
sub
fwait
jns
pop
mov
mov
add
adc
daa
jmp
sbb
dec
sbb
adc
xchg
cli
in
inc
scas
inc
iret
push
std
sbb
cmpsl
xor
fiadds
mov
ljmp
jmp
ffree
jae
pop
lahf
pushf
push
setns
cmp
sahf
mov
lahf
mov
inc
mov
sub
mov
xor
addr16
push
sti
jb
jae
out
inc
and
ljmp
jb
aam
mov
adc
addr16
jp
xchg
inc
bound
clc
lret
insl
cmpsb
push
ret
movsl
mov
mov
mov
jbe
push
ret
xchg
pushf
adc
xchg
popa
jl
mov
sbb
popf
or
test
mov
imul
mov
fnstcw
repnz
xor
mov
cwtl
add
sub
mov
pop
test
sub
xrelease
inc
imull
and
popf
push
aaa
mov
cmpb
sbb
pop
cmpsl
or
insb
fisubl
jae
mov
and
add
xlat
sbb
js
fcmovne
dec
sub
jle
fisttpl
mov
mov
sbb
out
mov
jb
lret
sub
push
adcb
data16
adc
jb
inc
jmp
mov
adc
cmp
add
cltd
pushl
dec
nop
mov
push
xorb
out
and
pop
pop
jle
dec
rcl
pop
hlt
jo
dec
out
xchg
imul
add
outsb
xor
or
push
mov
lods
sti
xor
mov
repnz
cmp
jb
rclb
jmp
ss
pop
outsb
cmp
dec
dec
adc
mov
cmpl
int3
jbe
inc
adc
fs
dec
loopne
pop
imull
dec
lcall
shl
mov
pop
enter
lcall
mov
and
call
sbb
test
js
xlat
sbb
flds
bound
jno
scas
jne
in
jb
mov
or
fistps
and
int
cmp
mov
mov
int
xchg
stc
out
xchg
and
cld
mov
sub
mov
out
jmp
xorb
xchg
cmp
sbb
rcrb
out
hlt
mov
jb
js
xchg
jne
mov
test
paddd
scas
and
add
dec
mov
xchg
dec
testl
scas
mov
add
lret
dec
dec
aas
pop
add
xor
push
xchg
stc
lahf
fstl
mov
sub
mov
lcall
fistpll
or
leave
adc
jae
pop
xchg
add
sbb
pop
mov
jmp
push
addr16
insl
insb
gs
and
mov
shll
mov
cmpsb
decb
or
pop
dec
dec
mov
mov
and
push
push
dec
std
push
sub
dec
jno
inc
adc
addb
sbb
xchg
push
clc
dec
ljmp
iret
or
jnp
loope
xchg
out
push
mov
and
enter
lods
int
loope
sub
push
lret
pop
sub
bound
pushf
pop
push
jge
imul
mov
sub
jb
fcoms
shr
loop
stc
mov
inc
mov
fstps
jne
mov
xchg
push
jge
lds
aaa
inc
out
lcall
mov
loop
std
mov
scas
jle
lret
insl
sbb
xchg
adc
cmpsb
adcb
cmp
xchg
adc
jl
jp
adc
pop
and
inc
orb
scas
mov
vmwrite
lods
push
aad
stos
or
or
arpl
xchg
lret
leave
push
fmull
shl
pop
dec
aam
test
test
ja
mov
inc
xor
xor
inc
pop
leave
mov
inc
popf
fimull
mov
xchg
push
and
dec
inc
mov
les
cmpb
sti
jnp
test
stc
subl
insb
push
mov
inc
push
nop
es
lret
add
cs
gs
or
in
push
mov
in
lds
sti
dec
dec
pusha
inc
std
int
push
adc
cmpsl
inc
popa
adc
lret
ffree
xchg
lahf
addr16
loope
jmp
xchg
pop
mov
in
loopne
sbb
xor
xchg
iret
adc
pop
insb
ret
testb
or
dec
sbb
jle
cltd
rclb
dec
xchg
nop
add
in
push
fistl
mov
cmp
xchg
cmc
leave
inc
test
dec
mov
sbb
and
insb
inc
or
pop
jg
lds
jl
hlt
push
scas
jae
dec
mov
cmpsb
outsb
dec
sub
push
or
int
pop
loope
dec
mov
jnp
cmp
mov
sarb
push
dec
cmpsl
xor
mov
mov
out
popf
mov
pop
sub
in
daa
or
addb
sbbl
inc
sbb
fistps
inc
stos
pop
test
rorl
in
faddl
xchg
push
loopne
dec
inc
xchg
cwtl
sub
xor
std
xchg
add
mov
jbe
xchg
dec
inc
xchg
xor
xchg
dec
out
lret
sub
inc
and
inc
aad
insl
xchg
scas
std
jg
iret
push
push
stos
stos
or
push
mov
xlat
ret
outsb
ret
jle
test
adc
cmp
cmp
es
lret
sub
mov
loop
fcmovnu
popf
jnp
xchg
fsubrp
or
pusha
push
cmc
inc
dec
jae
movsb
aad
mov
xchg
popf
pop
mov
hlt
fidivs
insb
mov
sbbl
call
and
nop
adc
cmp
sub
xor
add
ret
sbb
dec
fwait
xor
pop
lock
sub
xchg
adc
lds
inc
in
lock
xor
xchg
mov
add
mov
xchg
mov
ret
jo
jne
push
adc
push
push
and
ret
aas
add
dec
jge
in
loopne
aas
push
sti
sub
aaa
pushw
ds
lock
mov
das
and
jno
jge
or
cmp
stos
mov
cld
lret
fistps
sbb
jmp
inc
mov
lds
dec
and
in
push
test
and
pop
stos
xchg
neg
neg
enter
ljmp
in
daa
pop
lahf
fisttpl
xchg
mov
frstor
outsl
jns
push
pop
fistpl
sub
test
cmp
mov
fidivs
test
fldcw
leave
xchg
test
xor
sub
push
sbb
dec
in
fisttpll
ljmp
subb
das
push
orb
movsl
sbb
out
sub
mov
dec
push
cld
dec
ret
lahf
pop
jb
mov
jb
cmpl
mov
repnz
xor
lods
add
fiaddl
mov
test
sahf
shrb
add
inc
lahf
stos
xchg
std
jg
jg
mov
iret
cmp
dec
inc
aam
data16
jae
pop
xchg
jo
adc
add
aas
or
dec
xchg
adc
notl
mov
and
mov
push
jns
sbb
icebp
stos
sbb
xlat
sti
scas
addr16
mov
cmpb
dec
decl
inc
insl
aam
inc
xor
rcll
pmulhuw
es
xor
adc
roll
test
xor
xchg
orl
push
das
and
jno
jnp
pop
push
adc
popf
dec
dec
lret
in
popa
mov
mov
mov
dec
dec
stc
jg
cltd
pop
jne
inc
popf
mov
mov
sub
ljmp
pop
sbb
das
dec
repnz
outsb
idivb
stos
hlt
mov
adc
jns
cmc
sbb
pop
push
outsl
out
add
rclb
inc
mov
adc
mov
stos
imul
outsl
out
xchg
ds
xchg
popf
dec
and
inc
jmp
push
add
vprotq
mov
xor
mov
jge
cld
outsb
adc
repz
test
outsl
pop
fcomi
sub
jnp
fmulp
mov
mov
xchg
xor
je
gs
mov
xor
push
fs
fstpt
lahf
and
mov
sti
mov
ja
out
hlt
out
js
xor
pop
out
mov
mov
test
dec
and
mov
sahf
dec
push
jb
push
pop
sub
rolb
ds
push
pop
xor
loopne
in
subl
gs
adc
test
sbb
movsb
jae
call
movsb
shl
sahf
scas
out
adc
sub
and
jb
data16
inc
orl
jne
pop
adc
push
sub
loop
add
addb
or
outsl
into
add
aas
ljmp
cwtl
dec
incb
or
dec
add
sbb
outsl
mov
lea
fsts
loop
sub
xchg
stos
xchg
push
cli
testb
mov
enter
es
fnsave
dec
push
xor
inc
repnz
xor
addr16
notl
icebp
nop
or
add
imul
rcrb
xchg
mov
mov
or
lret
push
fcmovnu
mov
nop
int
dec
dec
or
mov
xchg
mov
xor
sti
in
mov
cmp
imul
lds
or
and
inc
insb
dec
xor
inc
mov
lea
stc
in
jl
call
aas
cld
pop
loop
jae
cwtl
pop
repnz
push
test
es
sbb
push
and
or
in
and
dec
sti
xchg
data16
sti
cmp
ret
data16
or
add
sub
dec
inc
adc
ret
push
fldt
add
sbb
int
lea
cltd
push
int3
pusha
xchg
outsl
pop
push
jmp
adc
test
pop
outsl
sahf
jae
insl
inc
mov
cwtl
fisubrs
or
seto
adc
leave
mov
inc
push
ds
arpl
mov
popf
xor
sub
sahf
and
dec
add
dec
cwtl
xchg
pop
nop
ficompl
je
aas
adc
mov
adc
loopne
lahf
stos
cld
adc
and
jl
pop
mov
sbb
jge
das
cld
mov
jae
ss
and
adc
pushf
fs
nop
add
adc
stos
or
lods
stos
std
outsb
popf
xchg
enter
jl
and
outsl
and
dec
leave
gs
nop
push
lahf
mov
push
pop
inc
fisubrs
cs
inc
jmp
jmp
repz
xchg
std
jne
push
jno
xor
xor
mov
pop
jle
mov
insl
pop
aas
js
loopne
mov
out
pop
xchg
aam
cmpsl
movsb
icebp
subl
mov
inc
sti
pop
rcrb
lahf
mov
cld
dec
into
mov
push
or
adc
sub
fnsave
mov
nop
outsb
mov
dec
sti
ljmp
mov
adc
and
shlb
or
or
in
fwait
push
add
dec
and
pushf
repnz
jmp
mov
inc
xchg
cmp
dec
mov
push
lods
xor
inc
xor
bound
and
dec
xchg
or
or
fwait
mov
push
sub
mov
dec
push
or
xchg
std
xor
rorb
out
jnp
insl
jmp
adc
movsl
inc
dec
aad
mov
push
jge
pop
sub
mov
jmp
movsl
cs
fisubrs
xchg
popf
and
cmp
xchg
out
xor
pop
dec
lds
mov
push
imul
or
xchg
or
or
shll
jl
fdivrl
nop
dec
aaa
add
pop
ljmp
jmp
data16
pop
cmp
mov
jb
adc
icebp
cwtl
xchg
std
test
outsb
adc
out
imul
push
adc
aam
mov
ljmp
int
aaa
mov
sub
inc
inc
lock
mov
mov
sbb
sbb
cmpsb
jmp
in
sbb
sarb
cmpl
mov
loope
sti
xor
ja
das
into
adcb
rcrb
sbb
cmpsl
mov
xchg
clc
stos
and
mov
push
sub
jg
pop
xor
ljmp
rclb
lahf
mov
bound
outsb
inc
mov
cld
mov
jbe
or
sub
inc
test
je
sarb
cmp
mov
mov
add
dec
jle
sbb
mov
adc
loop
cmp
ja
imul
ljmp
sub
std
push
dec
add
jb
stos
ljmp
fistl
in
xchg
mov
cltd
inc
and
xor
push
jns
dec
mov
jae
in
dec
cmp
adc
lock
outsb
push
stos
inc
jbe
push
push
xchg
nop
jb
cmpl
mov
xchg
add
sub
cmp
je
xchg
pop
pop
or
imul
cmc
sbb
dec
je
int
sub
mov
mov
xor
faddp
fisttpll
pop
lahf
adc
out
or
lock
add
jb
add
addr16
decb
mov
mov
push
scas
loope
dec
repnz
inc
mov
cmp
repnz
sbb
mov
bound
stc
sbb
mov
jle
push
jne
dec
or
inc
xorl
aam
push
jg
cs
push
loopne
xchg
dec
inc
inc
sbb
rolb
adc
xchg
enter
push
cmc
sbb
std
call
adcl
rorl
imulb
adc
xchg
push
xchg
sbb
mov
xchg
dec
push
stos
movsb
dec
mov
push
popf
icebp
cmpsb
fwait
xchg
push
dec
pop
nop
sub
xchg
jb
daa
into
adc
xchg
cmp
ja
idivb
ljmp
inc
xlat
sub
pop
mov
push
jb
mov
xchg
das
push
int
lahf
cli
or
mov
push
sti
and
adc
iret
dec
fsubrp
in
stos
jnp
mov
adc
push
mov
and
in
cmp
scas
fcoms
testb
int
inc
sbb
inc
cwtl
xchg
adc
into
mov
pop
mov
aas
cltd
inc
testl
jne
divb
xor
push
adc
nop
sbb
iret
adc
mov
stos
gs
mov
sub
imul
inc
fiadds
fnsave
roll
fldenv
movsb
lret
push
outsb
mov
dec
xchg
xchg
je
in
hlt
sbb
add
xor
mov
negb
pop
xchg
sbb
or
test
dec
inc
lods
lret
sub
int
into
sub
mov
stos
mov
std
pop
out
sbb
mov
jp
cld
jns
add
cmc
dec
loop
push
stos
mov
addb
ds
insl
mov
dec
adc
sub
mov
iret
fstl
mov
adc
xchg
out
sub
or
xor
rorl
imulb
mov
adc
or
xchg
adc
jg
stos
imul
repz
xchg
insl
aaa
call
jb
and
movsb
test
pop
push
dec
dec
movsb
sbb
and
dec
add
push
hlt
not
pop
pop
lea
adc
sub
dec
cmpsb
xchg
out
xor
cmp
pop
lods
xor
lock
lock
dec
or
sbb
or
out
pop
jge
jbe
leave
dec
mov
sub
sahf
imul
lret
xchg
fildll
dec
jp
or
movsl
xchg
cmp
add
pushf
fdivs
mov
call
xchg
aaa
hlt
cmp
adc
fists
jle
mov
fldcw
mov
jne
inc
movsb
daa
inc
scas
inc
push
sti
scas
cmp
aas
sti
call
xchg
cmp
fcmovu
pop
mov
inc
xchg
ds
repnz
bts
cmc
filds
stc
outsl
idivb
mov
popa
imul
adc
xor
sub
jle
add
or
cmc
das
push
bound
bound
and
repnz
shll
lret
jno
rclb
cmp
stos
sbbl
add
popf
aad
xchg
or
adc
inc
out
mov
jmp
add
push
sar
push
and
loopne
dec
dec
adc
push
notb
mov
outsb
mov
and
out
adc
icebp
push
push
es
fs
sbb
mov
xor
divb
inc
mov
outsb
nop
inc
pop
lock
adc
mov
inc
cmp
and
jo
inc
in
cmp
cmp
adc
pop
mov
fldt
adc
imul
repnz
adc
je
mov
enter
push
xchg
mov
icebp
fnstcw
cld
mov
ds
jnp
dec
dec
std
xchg
jmp
das
xchg
jge
mov
dec
lret
cmpsl
pop
xchg
sbb
dec
jae
dec
inc
loope
xchg
out
test
icebp
jo
in
or
jb
or
or
mov
xor
add
lds
bound
pop
arpl
xchg
iret
jns
adc
lods
mov
inc
aas
outsl
and
rcrl
dec
adc
enter
in
inc
jno
negb
das
xchg
cmp
adc
ds
xor
or
lea
sbb
push
imul
jbe
mov
fdivl
mov
aas
sbb
or
stos
xor
jg
mov
fsts
jnp
pop
mov
and
push
leave
or
jmp
sahf
mov
and
dec
jmp
add
lods
sbb
cmp
lods
jb
pop
ljmp
mov
imul
cmp
mov
fwait
jg
idiv
sub
add
nop
inc
jo
ret
scas
inc
cmpsl
cld
mov
shll
shl
pop
shll
inc
stc
inc
ret
push
ja
xchg
sbbb
xchg
dec
push
ljmp
loop
insb
inc
repz
mov
fwait
jnp
xchg
in
push
mov
cltd
pop
sub
mov
ljmp
ss
lahf
repnz
sub
addl
or
add
lret
loopne
cmc
lret
jp
jo
mov
icebp
jb
and
dec
outsb
jns
mov
and
aas
sbb
inc
aas
fstsw
loop
stos
in
push
dec
hlt
mov
sub
icebp
inc
fildll
adc
pop
test
enter
lahf
mov
dec
push
cltd
mov
and
sahf
adc
test
mov
test
jae
sahf
repz
adc
mov
pop
push
mov
out
imul
xlat
jg
fs
mov
and
pop
inc
inc
insb
jmp
push
cmpsl
aas
or
out
and
push
push
adc
arpl
call
xchg
mov
rcr
loope
push
xchg
push
pushf
ljmp
jl
and
subb
sahf
sbb
jmp
jb
jne
xchg
lret
inc
xor
dec
movsb
std
icebp
inc
ret
jg
or
adc
xorl
test
add
push
push
into
sbb
loope
sbb
pop
aas
xchg
sub
shrl
and
mov
push
inc
inc
lods
push
leave
into
jne
push
jb
mov
or
adc
dec
inc
adc
jmp
popf
inc
xor
cli
xchg
fcmovne
dec
or
sbb
sbb
dec
dec
dec
cltd
lods
adc
mov
daa
jmp
push
test
push
hlt
jnp
dec
inc
jle
sbb
bound
sub
lods
jns
sahf
mov
push
jg
cmovb
repz
loopne
push
fs
dec
test
dec
aas
xor
jo
icebp
or
lret
mov
push
dec
lods
fstps
decb
push
jno
mov
or
adc
cmp
mov
mov
pop
dec
imul
inc
cltd
insb
imul
mov
mov
sbbb
out
add
inc
sub
sub
jmp
addr16
fists
nop
call
setg
cmp
xor
je
jae
fwait
inc
push
fidivrl
pushf
shlb
in
je
jne
ds
and
add
jmp
inc
jns
hlt
jne
dec
stc
lret
dec
sub
daa
test
cld
adc
movsl
mov
rolb
outsb
divl
incl
sbb
adc
ret
pop
in
ds
sbbl
dec
cltd
enter
cmp
jns
xchg
aas
cmp
daa
cmp
mov
in
testb
test
ds
xor
repnz
les
dec
mov
adc
lret
inc
sahf
lahf
ss
sbb
pop
pop
je
dec
lock
pop
pop
mov
mov
jmp
push
or
xchg
push
cmpsb
dec
into
nop
rclb
add
pop
fldt
dec
sahf
out
jmp
mov
jle
xchg
leave
sub
mov
cmp
cli
dec
roll
sub
out
scas
dec
outsl
and
pop
dec
pop
je
cmp
inc
adc
xchg
push
or
cld
lret
sar
aas
arpl
mov
mov
push
sbb
or
scas
xor
push
and
cmpsl
cld
stc
sbb
jne
or
xchg
ljmp
push
cld
pop
rep
aam
mov
rdtsc
popa
xchg
jmp
jns
lret
dec
jp
push
js
cwtl
cmp
sbb
je
push
xorb
mov
fsts
movsb
sbbb
mov
mov
jmp
movsb
dec
pop
pop
cmp
mov
dec
xor
lea
pop
mov
paddsb
xchg
or
pop
test
xchg
lods
push
jp
or
xchg
pop
sub
jb
xchg
push
iret
add
mov
std
jo
nop
mov
sbb
jp
mov
ljmp
mov
popa
lea
push
in
xchg
out
dec
mov
lock
cld
fincstp
out
mov
adc
mov
lock
ljmp
jl
repz
sub
pop
and
jg
leave
adc
xchg
fldenv
mov
aas
mov
std
lcall
jmp
rcrl
pop
dec
lcall
jns
out
repnz
repz
jno
shlb
clc
addr16
push
fs
jge
mov
repnz
sub
dec
push
repz
dec
xchg
outsb
neg
iret
adc
lret
xchg
inc
lock
stos
dec
xchg
std
out
xor
popa
cwtl
mov
xchg
add
inc
int
cmp
jecxz
das
shlb
in
in
push
gs
ret
inc
popf
ss
jne
xor
pop
push
pop
movsl
arpl
mov
lret
bound
pop
stc
fstps
int
push
insl
aas
cld
ret
in
lods
jle
push
fnstsw
push
xchg
lock
pop
jae
jg
mov
jno
inc
jge
jo
push
fldl
and
fsts
push
cmp
xchg
xor
pop
and
mov
mov
adcb
dec
out
cmp
dec
enter
mov
popf
mov
dec
fs
shr
sbb
mov
push
outsl
mov
xlat
popa
ret
pop
in
stos
pusha
aas
jb
clc
jae
lock
loop
xchg
pop
sbb
jmp
mov
iret
jbe
adcb
fldl
imul
popf
add
pop
or
pop
dec
popf
pop
test
jg
pop
add
out
cltd
dec
and
dec
arpl
ret
dec
test
or
xor
adc
fprem1
fwait
shl
add
ret
cld
sub
popl
xor
stc
mov
aaa
or
insl
xchg
sub
xor
jmp
sbb
test
orl
mov
stc
and
cmpsb
test
pop
and
test
idivb
add
xchg
cmpsb
ret
mov
or
data16
in
test
aaa
lods
inc
xchg
and
shll
jno
lret
jg
mov
mov
popf
fistpll
jle
mov
sub
leave
jl
pop
dec
outsl
fadds
in
popf
adc
insl
insb
sub
cld
hlt
push
sbb
sub
mov
xchg
jge
stos
xchg
mov
loope
pop
dec
or
xchg
lret
sub
or
mov
dec
mov
ss
arpl
xor
xor
sub
lods
std
fwait
adc
mov
and
adc
xchg
nop
cmpsl
jbe
xchg
xchg
jae
test
imul
iret
inc
adc
sub
push
lods
rcrb
mov
add
lea
mov
or
jp
mov
push
push
leave
sti
and
inc
lahf
sbb
out
mov
cwtl
dec
out
pop
inc
xlat
inc
and
icebp
ficoms
mov
pop
push
test
jg
xchg
pop
mov
cmp
outsl
popf
mov
sbb
stos
sti
xchg
pop
xchg
sub
and
inc
nop
cld
jne
cmp
test
lret
mov
push
dec
sub
ds
mov
add
fstpl
outsl
mov
push
dec
sbb
insl
jg
mov
push
movsl
mov
mov
popf
testb
leave
jg
leave
fisubs
adc
sub
imul
jb
movb
pop
xchg
jg
hlt
insl
sti
fwait
pop
or
inc
repnz
jge
std
cmp
or
mov
sub
out
xchg
lock
loop
pop
outsl
aas
mov
fsts
adcl
out
push
pop
push
jno
add
or
inc
pop
pop
std
scas
jae
push
testl
pop
push
std
jg
pop
je
xchg
xchg
imul
mov
and
or
push
mov
add
jp
mov
dec
pop
jbe
cltd
dec
cld
nop
shlb
push
cmc
stos
mov
je
ficoml
dec
mov
es
xchg
outsb
adc
nop
icebp
lret
cmp
push
not
jo
adc
enter
or
push
dec
sbb
repz
ret
mov
imul
popf
jecxz
stos
xchg
stos
inc
in
add
and
xchg
jnp
sbb
inc
loopne
ja
pop
pusha
xchg
subl
mov
aam
loopne
push
inc
push
dec
and
or
mov
sbb
das
pop
ret
or
push
test
std
jmp
push
add
ret
inc
mov
push
or
fnstcw
nop
or
addr16
mov
jae
or
xchg
lea
jp
push
cmp
xchg
push
sub
mov
jge
test
and
out
leave
xchg
push
test
lret
and
jno
cwtl
mov
int
or
xchg
jg
jmp
jbe
xchg
jo
pop
loope
dec
mov
into
jmp
orl
dec
mov
pop
jb
sbb
mov
mov
ucomiss
shrb
shrb
jns
dec
lret
or
or
inc
repz
aas
cmpsb
outsb
jmp
popf
adc
addr16
sub
mov
pop
leave
test
sub
nop
push
and
shlb
loopne
mov
cld
push
data16
mov
in
test
insb
push
push
xchg
shlb
push
xchg
int3
mov
adc
imul
mov
ljmp
inc
popa
scas
dec
pop
push
sub
push
jg
jno
dec
notl
clc
jg
popa
fbstp
in
xchg
in
andb
stc
ficomps
xchg
dec
mov
mov
sbb
or
inc
hlt
aaa
pop
pop
jno
push
mov
jo
into
pop
or
insb
aad
dec
pop
nop
jb
xor
mov
inc
outsb
sbb
jl
pop
jne
pusha
pop
adc
stos
cmp
inc
jg
fs
adc
xchg
push
sub
rcr
lea
sbb
cmpsb
xchg
sti
enter
lea
popf
enter
or
sbbl
inc
jmp
pop
and
rcrb
sahf
push
aas
sub
inc
xor
push
pop
lahf
sti
inc
stos
add
push
sub
dec
mov
xchg
mov
popa
mov
lret
data16
addr16
in
aaa
es
push
xchg
or
xchg
popf
addr16
pop
mov
cmc
out
fs
pusha
sti
sbbl
js
scas
imul
fwait
sbb
insb
jbe
lods
dec
lret
std
sbb
cli
cmc
ljmp
hlt
and
notl
or
add
movsl
add
fldcw
inc
dec
cs
inc
out
aad
subb
pop
sbb
inc
jmp
or
jae
push
fwait
enter
rol
sbb
dec
mov
push
int
outsb
lds
adc
mov
jg
test
cld
movsl
mov
sti
aaa
std
cltd
jge
pop
sub
fistpl
enter
std
inc
or
or
lds
fildl
inc
xor
or
cmc
mov
insb
mov
lds
dec
gs
push
sub
lods
mov
pop
or
adc
enter
xor
or
std
inc
imul
pop
lret
icebp
adc
sub
jmp
cmp
enter
and
in
fists
xor
shrb
push
rcll
pop
imul
pop
pop
test
fimuls
adc
std
movsb
call
jmp
test
insb
mov
insb
xchg
outsl
fisubrs
shlb
or
xor
and
repnz
je
popf
xchg
nop
outsb
jo
xchg
adc
loopne
aaa
nop
repz
cltd
dec
dec
outsb
push
sti
and
mov
or
sbb
mov
or
push
inc
test
jmp
xchg
jne
std
mov
mov
lahf
dec
cld
lahf
add
and
sbb
insl
sahf
ja
hlt
mov
stos
dec
xchg
lea
repnz
adc
xor
aam
inc
pop
push
sbb
or
jle
div
pop
xor
fisubs
pushf
inc
rolb
push
mov
mov
js
dec
mov
jmp
cmp
pop
jg
cmc
dec
push
mov
test
lret
dec
pop
nop
mov
adc
jp
or
inc
jecxz
sub
insl
lock
add
std
lock
cmp
inc
sahf
andl
push
movsb
orl
nop
aaa
cld
rcll
pop
xchg
js
stos
nop
pop
sbb
adc
jge
push
in
jp
leave
mov
mov
aam
aas
xchg
mov
mov
pop
mov
xchg
inc
or
data16
ret
fisttpll
lret
faddp
sahf
mov
lock
cwtl
leave
xchg
mov
push
fstp
jp
push
aam
test
inc
jnp
adc
fs
dec
sahf
mov
xchg
push
js
mov
mov
imul
inc
dec
dec
xchg
mov
js
repz
pop
push
insb
xchg
ljmp
dec
out
aas
cli
int3
fcompl
pop
jp
add
adcl
dec
pop
or
test
mov
jo
pushf
inc
je
xor
cmpsl
sti
and
xchg
test
out
jno
leave
nop
lods
int
arpl
lret
sahf
inc
lock
adc
lret
filds
out
insl
sarl
adc
push
sbbl
dec
xorl
inc
inc
and
jae
int
jo
repnz
xchg
data16
out
bound
push
and
dec
adc
cmp
add
ja
xchg
adc
cmpl
pop
fwait
sahf
rcrb
int
stc
push
sahf
mov
jns
jmp
cmp
rep
lds
repz
xchg
push
adc
decl
gs
andl
jmp
jae
add
adc
js
adc
cld
inc
fisttpl
pop
or
in
test
cmc
shll
incb
call
sahf
add
cmp
stos
add
jl
daa
sbb
inc
ret
sti
mov
jb
jns
mov
dec
mov
mov
xchg
mov
cmp
inc
inc
or
sbb
js
aaa
jl
push
mov
jp
jno
inc
mov
test
sahf
inc
int
adc
cld
dec
xor
shl
pop
andl
inc
mov
cwtl
popf
adc
jge
adc
xchg
mov
sti
imul
mov
jge
int3
jno
xchg
and
or
push
cld
lahf
push
inc
repnz
insb
xor
call
jg
test
push
jnp
orb
mov
add
add
imul
adc
dec
pushf
jg
mov
and
dec
dec
cmp
pop
lahf
adc
mov
fucomp
xchg
xchg
repz
icebp
pop
fdivrl
jbe
pushw
sub
mov
dec
dec
add
cmc
mov
xor
push
push
iret
mov
jp
fwait
xor
xchg
out
dec
idivb
cld
jb
mov
or
insb
repnz
pop
push
sbb
cmpsl
lock
cwtl
test
cmpsl
hlt
int3
testl
dec
adc
pop
add
nop
aas
jg
outsl
aad
adcl
sub
xor
mov
pop
lret
jg
pop
stos
dec
sub
and
inc
cmp
lock
imulb
jp
mov
or
shl
mov
push
push
fstpt
jg
or
and
fmul
jg
xlat
out
adc
hlt
pop
hlt
push
push
movsl
xchg
mov
out
inc
and
or
cli
xchg
popf
add
add
dec
mov
dec
imul
jnp
or
dec
pop
pop
stos
dec
mov
fs
fucomi
rorb
test
imul
cmp
scas
jnp
xchg
pop
inc
dec
lret
rorb
insb
enter
xor
jb
cmp
pusha
xorb
test
cld
fldcw
pop
mov
mov
cmp
push
ret
popf
pop
adc
xchg
inc
inc
jle
sbb
nop
outsb
or
popf
ret
dec
mov
pushf
and
cli
pop
push
dec
insl
inc
pop
cmp
jg
lods
dec
mov
pop
inc
jbe
push
aaa
mov
sub
mov
hlt
xor
adc
dec
aaa
aas
fs
outsl
or
aad
mov
leave
jecxz
cmp
dec
pop
jbe
xchg
adcb
cld
mov
arpl
mov
addr16
jne
push
and
cli
xor
aas
sub
add
inc
dec
mov
enter
and
sub
sub
inc
ljmp
xor
push
dec
insl
std
cwtl
push
mov
push
pop
add
std
popa
int
push
hlt
xor
outsb
push
icebp
mov
repnz
test
dec
fcoml
cmpsb
sahf
inc
jecxz
nop
push
rcr
psllq
scas
scas
into
push
arpl
mov
mov
mov
cli
xor
sub
ret
xchg
and
adc
stos
stc
pop
fs
and
xchg
push
out
add
pop
pop
add
fimuls
adc
and
fimuls
xlat
pop
dec
iret
add
notb
inc
jae
mov
jge
dec
inc
lahf
lret
jmp
shr
mov
jecxz
dec
sub
rcrb
lret
cmp
inc
inc
pop
stc
bound
idivl
iret
nop
sbb
xor
fidivrs
sbb
jae
enter
es
pop
movsb
mov
insb
aaa
cmp
insl
inc
and
inc
stos
movsb
out
dec
jmp
sbb
sub
inc
pop
out
imul
xor
lods
xor
sub
add
mov
inc
pop
jle
and
jbe
out
push
dec
dec
lea
popa
lcall
sti
fisubrl
xor
lret
dec
mov
xchg
pslld
xchg
cmp
rorl
jae
aad
movl
xor
out
cltd
and
jmp
adc
test
in
xchg
aaa
in
jmp
push
subb
repnz
scas
dec
mov
cld
stos
cmp
hlt
cmp
incb
adc
cmp
jbe
daa
mov
cld
sub
mov
insl
sbb
xchg
gs
dec
sahf
and
inc
movsl
mov
cwtl
jp
shlb
pop
in
aad
fldenv
shl
xchg
imul
ja
xchg
sub
scas
cmp
mov
stos
pop
jge
adc
cld
test
xor
pop
leave
test
mov
in
divl
ljmp
out
outsb
sbb
and
pop
shlb
stos
out
jae,pt
fildl
insl
adc
lret
pop
pop
pop
xchg
or
jno
lods
sbb
pop
cltd
jl
subl
cld
sbb
je
int3
xchg
cmp
pop
jl
or
mov
daa
xchg
jmp
test
fisubs
shlb
adc
mov
mov
or
dec
pop
movsb
jae
pop
sub
lcall
cld
lahf
popa
fldcw
push
je
inc
xchg
call
add
into
inc
mov
xor
rcr
mov
sub
mov
or
out
cwtl
movsb
cmp
sub
js
xchg
lret
cmp
mov
xchg
sti
shll
in
cwtl
cmc
pop
inc
dec
ljmp
andl
jl
mov
inc
jl
mov
repz
xchg
ljmp
es
mov
fstpl
jae
popa
xchg
jne
jg
insb
lret
adc
lret
jl
es
xchg
xor
mov
xchg
mov
inc
and
or
aaa
add
shll
ja
xchg
push
cmc
insl
lea
es
pop
cmpsl
xchg
hlt
xor
arpl
push
push
dec
mov
fs
push
adc
adc
dec
adc
cmp
scas
leave
popf
popf
jg
add
xor
adc
arpl
mov
add
xchg
repz
ja
add
jo
sbb
mov
xor
incb
jno
push
push
adc
jmp
out
inc
andl
subb
push
mov
adc
xor
jg
pop
inc
mov
aas
mov
pushw
sub
mov
jg
dec
out
mov
pop
and
jle
jne
ficoms
std
pop
mov
loope
test
icebp
jb
jl
imul
mov
dec
pop
insb
popf
pop
jg
xor
dec
movl
or
pop
mov
push
mov
jo
push
popa
pop
fcoms
andl
adc
movsl
xlat
nop
xor
dec
mov
aaa
lods
ljmp
inc
mov
popa
or
mov
cld
call
jl
aas
mov
imul
unpckhps
movsl
lret
loope
popa
mov
and
insl
ds
shlb
cmpsb
scas
inc
adc
dec
int
ds
add
lock
in
adc
adc
and
in
pop
jbe
pop
data16
jmp
dec
xor
sar
or
add
pop
lea
push
xchg
aad
xchg
mov
push
xchg
and
bound
loope
add
movsb
mov
sub
imul
ja
or
test
je
dec
jge
je
jp
pop
arpl
pop
shld
mov
cwtl
add
xor
sarb
dec
mov
mov
bound
xchg
and
sbb
in
mov
lahf
inc
pop
je
jecxz
mov
inc
enter
inc
sahf
jb
xchg
xor
mov
dec
daa
iret
jb
jno
or
mov
insb
fbstp
xchg
sbb
adc
dec
rcrb
sub
sub
mov
mov
ljmp
fwait
in
pop
mov
add
out
into
leave
scas
xor
pop
xchg
cmp
test
mov
data16
inc
inc
jae
xor
fldcw
shll
mov
xchg
pop
aas
mov
iret
push
push
push
push
cmp
fldt
add
out
lret
cmp
in
lret
xor
and
loope
xchg
sub
andb
push
mov
icebp
ljmp
push
cmp
mov
cld
or
stos
jecxz
popf
sub
mov
fcmovne
pop
cld
aaa
lods
jo
hlt
or
in
fmull
adc
rorb
jo
shrl
or
mov
or
addr16
pop
push
fisttpl
cmpsb
call
mov
dec
fsubl
push
or
les
dec
nop
add
sbb
leave
das
dec
cwtl
gs
inc
pop
mov
pusha
popa
or
lahf
pop
insb
lret
in
inc
mov
icebp
cmp
ljmp
dec
pushf
mov
dec
fs
icebp
daa
jb
outsb
xlat
jg
fisttpl
and
fnstsw
jge
pop
clc
sub
adcb
mov
sahf
dec
scas
pop
adc
vpmacssdd
sbb
jg
and
ret
mov
scas
hlt
lret
fdivl
and
movups
ja
fucomip
cld
popf
fisubrl
cli
test
and
loope
adc
cmp
push
fstpl
movl
xchg
push
xchg
sahf
cmp
shlb
inc
xchg
sbb
dec
ret
add
ss
lds
idivb
xchg
jns
leave
mov
popa
push
dec
iret
sti
jb
push
cmp
bound
mov
and
fwait
cmpsb
imul
lahf
sbb
paddb
jmp
hlt
mov
push
cli
jo
lahf
xchg
pop
mov
icebp
jb
imul
shl
xor
adc
je
push
dec
ja
fcmovu
mov
das
jns
push
xchg
mov
sbbb
iret
in
xor
push
clc
mov
testb
je
lods
test
dec
cld
daa
mov
stos
insl
lods
test
imul
jge
je
mov
mov
jg
xchg
outsl
sarb
push
cmpsb
call
mov
xchg
pop
xor
stos
xor
vcvtdq2ps
push
push
xor
fnstenv
repz
lret
insb
xchg
shlb
sub
lock
lds
fistpll
outsl
xchg
pop
xchg
xor
popa
cmp
pop
adc
adc
loop,pt
call
loopne
xchg
stos
repz
jo
push
cmpsb
in
sahf
jns
sbb
jle
cmp
mov
sbb
lahf
xor
outsb
jmp
and
xchg
into
int
push
lret
jmp
pop
sub
fbld
cmp
ret
add
adc
sbb
jbe
imul
jne
sub
out
test
inc
int
inc
mov
mov
pop
repz
push
mov
pop
mov
adc
arpl
xchg
incb
adc
lods
pusha
popf
orl
dec
shlb
pushf
mov
cmp
xorl
mov
ljmp
popf
cltd
sahf
mov
fsts
bound
xchg
test
popf
out
sarl
xchg
pop
mov
out
cmp
add
push
jle
scas
xchg
mov
mov
insb
cmp
dec
jb
xchg
pop
jg
subl
jb
push
cmc
mov
jle
adc
adcb
jae
xchg
xchg
push
pop
hlt
jp
mov
or
leave
cltd
sbb
fstl
les
jle
fstpl
test
clc
mov
movsl
out
lods
scas
add
leave
lods
xchg
cwtl
dec
cmp
add
std
insl
cmp
insb
jbe
sub
xchg
pop
and
or
or
scas
sbb
push
es
inc
daa
pop
sbb
push
out
in
adc
insl
sbb
sbb
je
aas
and
xchg
xchg
adc
test
jmp
popf
pushf
sbb
imul
and
push
lods
adc
jne
mov
test
push
and
iret
in
adc
cmp
repz
mov
fs
jb
mov
mov
inc
ljmp
push
dec
or
mov
dec
mov
add
mov
xchg
cmp
mov
movsb
jle
lds
push
inc
notb
shll
mov
pop
and
jno
sbb
sub
sti
fstl
aaa
nop
xor
jle
jae
cmpsb
add
loop
shlb
shrb
repz
sbb
mov
into
jno
xor
cmpsl
in
add
in
insl
addr16
test
inc
push
fdiv
dec
dec
xor
fisttpl
bound
dec
mov
pop
shrb
jmp
insb
insb
dec
outsb
ds
repnz
mov
cmp
cld
jnp
sub
adc
insb
adc
or
dec
stos
push
insb
scas
iret
popa
in
shll
test
cwtl
sarb
hlt
inc
mov
mov
hlt
or
cmp
ja
xor
inc
adc
push
std
cmp
adc
iret
lahf
insl
mov
sub
mov
cmp
fsubs
pushf
leave
mov
jns
mov
mov
xor
in
mov
repz
inc
mov
aaa
rorb
cmp
idivb
or
lahf
inc
sub
sarl
pop
jae
jae
loop
popa
sbb
sub
hlt
jae
xor
mov
cmc
mov
idiv
sub
xchg
popa
out
cltd
dec
xchg
data16
sub
pop
aad
outsl
iret
nop
movsl
push
decb
jl
ljmp
mov
cld
push
jmp
adc
sti
inc
xchg
outsl
adc
cmp
adc
scas
jg
cld
mov
dec
sti
xchg
pop
mov
dec
mov
fwait
add
in
push
jg
subl
cwtl
int
je
cmp
push
outsb
sbb
or
adc
in
hlt
pop
lods
fidivl
mov
fwait
jl
xchg
xchg
pop
repz
std
and
sbb
xor
dec
dec
pusha
pop
outsl
jg
jae
and
mov
icebp
sub
popf
or
int3
jmp
cld
jg
cmc
inc
pop
adc
jle
jb
xor
cmp
pop
pushf
adc
jo
dec
pop
mov
bound
pushf
rcll
sbb
mov
xchg
lea
xchg
adc
mov
lock
or
daa
jno
scas
imul
push
leave
test
les
jl
cld
stos
movl
inc
stos
lea
insb
jae
int
in
sbb
sbb
insb
mov
adc
pop
ja
sub
jmp
test
inc
mov
inc
sub
mov
fcoml
fsubr
jl
mov
cld
mov
pop
adc
std
sar
jle
mov
jl
stos
flds
jg
fwait
mov
into
fildll
dec
or
ljmp
push
xor
lcall
in
out
lahf
xchg
mov
shrb
stc
mov
rcr
sbb
popf
adc
jl
scas
mov
and
shrl
in
dec
paddusw
fldl
push
jb
xor
in
cmp
sbb
jle
or
sub
fs
and
jno
pop
dec
add
and
dec
mov
sbbl
lahf
cs
scas
repz
adc
push
jl
aad
hlt
cmpsb
mov
and
loopne
or
inc
xchg
dec
in
pushf
cmp
push
xchg
imul
xor
imul
je
imul
mov
xchg
pushaw
cld
dec
inc
out
jle
pop
fwait
dec
testb
cmp
cmp
xor
enter
and
lods
xchg
sbb
pushf
popf
push
outsb
or
inc
mov
insb
dec
pop
daa
inc
jae
iret
sahf
sub
push
rcrb
mov
out
pop
popa
ss
adc
js
addr16
out
out
xchg
inc
mov
std
call
jp
nop
fbstp
aaa
aad
gs
add
dec
mov
dec
iret
adc
stos
repnz
xor
aam
jg
lock
es
nop
pushl
push
jnp
pop
dec
push
mov
cs
adc
inc
inc
gs
jns
jmp
test
xor
lahf
imul
push
scas
test
ja
adc
cltd
push
out
xchg
dec
aaa
test
push
mov
xchg
push
jg
xchg
xor
inc
jg
test
fsts
cmpsb
repnz
nop
dec
fdivrs
cli
mov
arpl
fwait
inc
add
push
push
jns
aaa
lret
mov
cld
imul
inc
shlb
adc
mov
or
repnz
push
push
hlt
fisttps
or
es
shll
je
mov
lret
push
sbbl
adc
mov
cs
add
jge
jg
adc
shll
fcmovnbe
popf
jecxz
xor
pushf
or
or
cld
sbb
sar
scas
jl
mov
pop
xchg
mov
add
jp
cmpsl
cli
cmp
mov
std
or
ja
or
jl
or
fwait
stos
sbb
add
push
push
js
rorl
insl
or
sub
add
adc
xor
push
jne
or
shrl
or
leave
int3
xchg
jae
into
push
mov
cmp
xchg
jp
add
iret
cmp
jle
xchg
inc
xchg
clc
mov
mov
push
or
insl
add
pop
jae
cmc
xor
dec
adc
jp
push
pop
jl
pop
dec
push
pop
xchg
lahf
mov
pop
ss
fcomi
sarb
ljmp
and
mov
in
data16
nop
in
or
int
rclb
mov
mov
out
mov
es
outsb
pop
out
xor
jle,pn
enter
mov
addl
pop
jae
pop
pop
xchg
xlat
jp,pn
lret
ja
xor
int3
leave
xor
stc
in
int
sub
cmc
xlat
or
dec
mov
fiadds
ret
dec
push
std
and
mov
mov
xchg
jbe
push
cmp
jmp
pop
jecxz
test
call
jp
xchg
mov
sarb
dec
jne
push
stc
lds
test
negb
adc
mov
lahf
lret
mov
sub
dec
jp
loop,pt
clc
xchg
testl
or
imulb
mov
mov
dec
pop
dec
imul
sub
mov
hlt
or
mov
aad
sbb
cmpsb
xchg
and
xchg
cltd
and
adc
dec
iret
mov
cltd
and
das
fistl
mov
pushf
cmpsl
or
data16
test
fbstp
es
fistpl
sub
das
stc
mov
push
idivb
nop
outsb
fsts
sbb
sub
aad
xorl
das
test
xor
mov
cwtl
inc
jae
jmp
xor
mov
icebp
mov
pop
push
mov
sbb
and
in
cmp
fidivrl
lcall
mov
dec
or
stc
add
std
or
adc
adc
lahf
jb
mov
fisttpl
add
fldcw
jmp
push
data16
cmc
add
pop
addr16
jae
pop
jl
xchg
out
adc
cmp
push
fwait
imul
pushf
jns
sti
push
lahf
repnz
pushf
pushf
cltd
mov
or
jmp
jl
jecxz
sub
inc
bound
inc
fists
or
mov
xor
push
cmpb
std
jl
data16
dec
leave
testl
mov
out
call
fs
std
fbld
sub
out
dec
nop
adc
mov
clc
sub
mov
jp,pn
mov
decb
xchg
and
cmp
dec
mov
lret
jg
cld
popl
faddl
cmpsl
cmpsl
dec
and
or
jo
mov
and
repz
decl
adc
mov
mov
mov
mov
clc
sarb
push
ljmp
bound
int
jecxz
inc
notl
test
xor
or
jb
dec
aaa
sbb
pop
pop
pop
jg
stos
cld
xchg
jmp
sub
clc
fcom
es
aam
mov
sub
incb
push
dec
mov
lods
push
cmpl
or
inc
dec
sub
imulb
mov
and
jno
cltd
and
jle
jno
and
adc
ret
ds
inc
jnp
xchg
jb
out
xor
inc
mov
pop
pop
mov
insl
adc
jle
fildll
mov
testb
cld
sbb
cmpsb
jmp
and
divb
loop
adc
scas
rorb
adc
repz
inc
mov
dec
aas
jp
ret
mov
dec
sub
pusha
lock
inc
int3
test
fldenv
ret
hlt
lock
and
mov
lds
cmpsb
inc
push
andl
jb
sub
or
lahf
xchg
movsl
adc
cmp
outsb
addr16
add
mov
push
rcl
addl
mov
addr16
pop
xchg
mov
inc
mov
or
cmpsl
cmc
dec
cld
or
iret
sub
jne
push
movsl
je
enter
mov
xchg
and
or
jg
inc
es
insb
jnp
addr16
mov
push
adc
dec
xchg
nop
test
adc
and
fdivp
jbe
repnz
lcall
dec
ss
jecxz
sub
xchg
ret
aad
jmp
inc
sbb
mov
js
jmp
cmp
into
sbb
mov
stos
mov
sahf
imul
lock
cmovae
adc
pop
mov
cmpsb
stos
nop
pushf
or
pop
adcl
in
dec
int
and
dec
rorb
aad
mov
sub
imul
daa
cmpsb
dec
jo
jecxz
test
lea
xchg
out
cmp
cmp
pop
call
adcb
in
jb
test
dec
jl
idivl
adc
xchg
and
cltd
add
repz
fisttps
imul
xor
xor
repnz
add
fisubrl
lret
cmp
xchg
cmp
push
push
test
jg
lahf
mov
push
jl
mov
stc
jg
stc
xchg
iret
jp
sbb
add
inc
and
mov
inc
rcrl
push
test
adc
push
mov
or
gs
sbb
jecxz
xchg
xchg
or
inc
sub
lret
and
daa
lock
dec
or
scas
loopne
dec
lock
sub
rcrb
adc
pop
je
inc
fstpl
mov
repz
cmp
insl
jno
outsl
sti
xchg
adc
jns
xor
dec
lds
int
jns
add
outsl
mov
movsl
jmp
dec
cld
pop
lret
clc
mov
out
jno
cmp
sub
mov
xor
fimull
cmpsl
mov
add
das
aad
jns
insb
in
fistl
push
aad
and
adc
bound
push
jnp
jnp
xchg
mov
cmpsb
jecxz
shlb
adc
pop
iretw
xor
leave
jg
dec
cwtl
repz
mov
cld
cltd
daa
xorb
lcall
fmull
arpl
xchg
fcmovb
xchg
in
dec
pushf
arpl
add
cmpsb
push
mov
jmp
adc
leave
and
pop
xchg
push
push
insl
push
hlt
movsl
mov
iret
or
mov
jg
out
mov
xchg
gs
repz
insl
in
xchg
jl
repnz
dec
xor
roll
arpl
pop
sub
adc
mov
ret
cmpsl
std
sub
dec
bound
cmp
xor
dec
je
aas
mov
call
mov
cld
mov
or
aaa
fidivl
sti
jle
dec
fdiv
pop
pusha
sbb
lahf
mov
pop
or
add
dec
cld
lret
stc
subl
mov
or
inc
push
sti
dec
ljmp
dec
scas
testl
bound
data16
mov
inc
xchg
sbb
popa
mov
fidivs
push
shlb
and
in
mov
lock
xchg
jp
adc
xor
inc
jbe
ret
xor
dec
cmp
jo
test
cmc
inc
insb
shr
jae
lret
in
lahf
lahf
nop
adc
xchg
and
mov
lods
adc
popf
mov
mov
inc
dec
sbb
pushf
lcall
pop
jg
adc
cmp
negb
dec
iret
rcrl
cld
enter
aad
mov
fistpl
into
aaa
arpl
mov
or
aas
adc
mov
xor
dec
or
sbb
mov
add
mov
fst
rcrb
jo
push
cmpsl
mov
and
sti
pushf
inc
sub
pop
jp
sub
fwait
push
push
push
ret
arpl
adc
sbb
pop
xchg
push
testb
push
sub
lret
out
jl
sbb
sub
imul
aas
add
dec
xor
in
xor
out
icebp
out
gs
or
mov
dec
mov
pop
jae
and
insl
and
and
inc
add
cmpsb
inc
cltd
jl
dec
outsb
ret
nop
jbe,pn
outsl
jmp
roll
stos
repz
out
xchg
call
lods
ret
jl
repz
idivl
nop
es
sub
test
inc
ror
scas
jb
imul
fisttpll
adcl
stos
and
fcoml
jb
dec
cli
inc
sbb
cld
xchg
dec
mov
shl
mov
adc
outsb
int
jae
or
test
push
jl
xchg
aad
cmp
pop
push
mov
loop
std
xchg
je
xchg
movsl
sbb
push
dec
sbb
test
lods
xor
mov
fucomip
pusha
mov
jno
out
pop
cs
mov
xchg
out
or
adcl
imul
push
lret
push
jne
dec
ret
xlat
dec
or
mov
dec
pushf
sub
std
pop
out
mov
sbb
mov
dec
cli
bound
rcrb
and
and
push
iret
or
or
cmc
fists
pop
pop
dec
adc
iret
pop
push
xchg
push
dec
adc
dec
jb
pop
je
add
sub
mov
test
and
dec
xchg
mov
cld
sub
jl
cmpsl
fnsave
or
adc
or
fisubs
lahf
repz
divb
inc
pop
imul
seto
mov
xor
push
adc
movsl
jecxz
and
and
sbb
sahf
mov
add
cli
adc
insb
test
loopne
gs
jl
loopne
outsl
aaa
je
je
stc
jo
stos
sbb
jge
push
lret
test
data16
roll
rcll
dec
push
test
fldenv
pop
aaa
sub
mov
jnp
dec
jae
lods
cmp
or
or
shlb
mov
xor
cltd
xchg
pop
mov
jecxz
pop
testb
mov
idivl
push
pop
or
jecxz
pop
loop
adc
test
test
mulb
jecxz
push
nop
push
lret
cwtl
or
add
mov
mov
mov
push
aad
inc
xchg
sub
pop
add
xchg
adc
lret
and
pop
and
xchg
repz
pusha
hlt
stos
mov
and
bound
dec
adc
aaa
in
or
repz
sub
cmpb
adc
inc
xchg
push
cmpsb
mov
and
mov
ljmp
sub
adc
lret
mov
fsts
inc
aam
pop
mov
in
xchg
jge
cmpl
sub
inc
jnp
out
mov
xchg
add
fsubs
std
lret
dec
cmp
add
repz
inc
xor
xchg
cmpsl
in
push
lret
ljmp
sub
cmpsb
push
mov
dec
push
jl
mov
in
mov
mov
jl
or
xchg
cmp
in
or
lods
into
sub
xchg
lret
dec
pop
sbb
jo
cs
outsb
shlb
insb
push
out
rcrl
scas
daa
int
xchg
jge
mov
lahf
cmp
jg
in
add
iret
dec
sbb
fisubs
fld
movsl
subps
cmp
xchg
repz
mov
xchg
pop
ret
ficoms
jl
ret
decb
pop
xchg
jmp
fists
test
mov
mov
cld
pop
arpl
mov
insl
jl
dec
mov
int
mov
addr16
jo
xchg
int
pop
dec
stos
add
jnp
pop
sarb
sub
aam
mov
push
jg
mov
addr16
mov
js
cmp
subl
stc
arpl
sbb
jp
lret
mov
cld
daa
int
test
sub
pushl
lret
xchg
cltd
cmp
mov
nop
sub
adc
jnp
sbb
mov
dec
or
pusha
pop
cld
mov
in
cltd
arpl
jg
icebp
clc
sub
cmp
adc
mov
pushf
cmp
xchg
shll
jo
jp
xchg
sub
sub
imulb
hlt
mov
xchg
pop
jae
lcall
lods
push
sub
push
nop
mov
cmpb
stos
cmpsl
jg
scas
dec
mov
inc
test
addr16
outsb
jae
sbb
mov
jmp
pop
insl
notl
fwait
push
rcrl
push
sbb
das
sahf
xchg
cmp
leave
mov
xchg
jb
loop
outsb
xor
add
xchg
movsb
pop
push
stc
mov
jmp
xor
or
jg
dec
adc
cmp
sub
add
je
xor
jae
inc
and
mov
mov
mov
jae
push
inc
insl
inc
pushf
dec
lret
dec
mov
js
iret
mov
test
jl
scas
mov
lahf
sti
mov
or
sbb
xor
push
push
cmp
pop
shrl
icebp
lcall
sti
inc
cs
xchg
mov
enter
cli
lret
mov
xchg
xchg
mov
jmp
scas
push
jb
movsl
xchg
jl
imull
mov
dec
sbb
mov
adc
add
out
shrb
cmp
jl
jno
shll
test
mov
ss
lea
sub
push
sti
lods
mov
repz
xchg
jl
das
iret
bswap
adcl
mov
jne
push
fsubrs
sbb
add
stos
rorb
std
cmp
jle
or
aad
mov
sti
insl
pop
insb
adc
lods
jl
mov
cmc
daa
fistps
test
lret
or
call
dec
add
hlt
or
stos
mov
pop
jp
mov
or
mov
mov
push
insb
fstps
fidivs
aas
insl
movsl
inc
sahf
jmp
nop
lock
dec
rorb
mov
push
xchg
cli
inc
repz
pop
or
icebp
shl
sub
add
insl
mov
or
dec
jne
inc
mov
sbb
jb
repnz
fisubl
std
push
lret
cs
push
fwait
bound
add
pop
iret
lods
test
stc
xchg
lret
nop
jbe
mov
xchg
rcrb
sbb
insl
incl
jl
mov
or
pop
pusha
adc
mov
mov
js
mov
adcl
ret
adc
imull
and
repz
ds
lahf
fs
and
xlat
sbb
jae
push
jecxz
mov
js
int3
xchg
pop
adc
and
sbb
sbb
cwtl
push
adc
dec
jl
rorl
sti
inc
sarb
sbb
add
mov
sub
xor
push
mov
jmp
pushf
xchg
out
adc
jg
add
sub
pop
mov
movswl
push
jnp
push
mov
divl
jle
push
sti
sub
cs
adcl
sub
jle
rorb
lret
sub
test
mov
repz
fs
fcoml
repz
dec
rorb
sub
cmpsl
sbb
cmp
xorl
or
popf
dec
or
push
lock
adc
inc
call
sets
loope
lods
inc
pushf
adc
repnz
push
decb
sbb
mov
fidivs
pushf
mov
shll
out
jecxz
dec
stos
mov
xor
jg
test
cmp
insb
pop
push
mov
mov
xchg
xor
dec
push
mov
dec
pop
aas
stos
cltd
push
adc
cmp
ret
nop
stos
sbb
notb
lock
pop
aad
lds
push
jae
std
inc
leave
in
mov
out
xchg
dec
dec
lcall
or
enter
push
repz
jns
loop
icebp
lock
and
pop
addr16
push
cld
addr16
inc
movsb
nop
mov
mov
and
jp
or
or
rcll
jno
test
add
jge
jnp
add
xchg
shll
insl
rolb
xchg
mov
push
xchg
and
and
mov
nop
dec
jb
aaa
into
pop
push
dec
add
icebp
outsl
movsb
imul
xchg
cmp
add
and
and
jg
jg
shlb
and
jl
out
dec
jg
popf
insl
cltd
std
sbb
loope
test
rolb
jbe
arpl
call
push
mov
jmp
push
push
xor
lret
sbb
cwtl
call
jnp
call
inc
inc
hlt
and
pop
aaa
shlb
loopne
jl
cmp
cmp
mov
es
out
insl
out
mov
and
psubw
dec
call
aam
push
cs
cli
pop
sub
cmp
xchg
pop
enter
aad
ret
cmp
adc
les
xchg
and
xchg
cmp
out
pushf
lret
dec
pop
pop
mov
mov
repz
and
insl
and
inc
pop
test
cmp
xchg
nop
cmp
lcall
insl
mov
scas
and
test
cld
adc
orb
faddl
test
cmpsb
dec
je
adc
jp
dec
sbb
imul
pop
sub
fbstp
add
iret
adc
jge
into
decb
cmp
mov
and
xchg
inc
inc
fimull
cmpsl
mov
test
jl
nop
cmpsb
sbb
push
lock
cmp
mov
sbb
xor
push
mov
mov
jg
xchg
push
testl
ret
js
mov
stos
pop
rclb
repz
std
jns
repz
mov
dec
sbb
shl
mov
xchg
hlt
mov
lret
bound
insl
and
mov
add
aaa
push
xchg
jge
addr16
fnstenv
gs
ficomps
dec
daa
sbb
cld
lods
push
jmp
lahf
add
popf
in
sub
mov
sub
mov
adc
jp
mov
and
dec
sbb
cwtl
lods
mov
mov
sub
push
fmuls
pop
ret
jl
inc
mov
aas
adc
mov
stc
add
add
jbe
inc
jmp
loope
repz
testb
sbb
dec
adc
ljmp
mov
xchg
das
adc
aaa
dec
push
sub
lahf
jo
std
insl
xor
mov
mov
call
bound
in
xlat
outsl
push
adcb
xor
cli
cmp
jl
jne
sarl
inc
push
sub
out
stos
cmp
jnp
or
dec
test
sub
dec
cltd
xor
and
dec
inc
jbe
push
xor
mov
adc
xor
xchg
pushf
negb
inc
ret
dec
dec
hlt
add
frstor
sbb
xchg
psrlw
jg
xchg
cmp
cmp
fcomip
or
push
push
rcll
xchg
lahf
xchg
dec
test
addps
movsl
and
pop
jnp
cmpsb
jecxz
sub
cld
sbb
inc
sahf
adc
je
and
pop
aaa
mov
nop
mov
ficoms
hlt
shr
shr
cld
mov
and
cmpb
cmp
jge
mov
and
mov
imul
rcll
pop
xchg
or
fwait
mov
lods
frstor
or
popa
das
in
pop
sti
sub
push
xlat
cmpsl
jnp
test
jbe
push
xchg
xor
adc
dec
ret
hlt
mov
cmp
dec
data16
push
outsl
mov
aad
ret
xchg
pusha
rcl
rolb
push
mov
pop
and
in
in
push
cmpsb
insb
jmp
mov
pop
push
and
mov
and
loop
sub
lahf
jg
dec
out
jo
ret
inc
sub
jl
scas
nop
fwait
pop
add
pop
push
fiadds
cld
mov
xchg
jne
sbb
out
jae
xorb
xchg
mov
push
sub
jg
xchg
jo
mov
es
or
stc
sbb
adc
pushf
cli
fistl
xchg
jae
imul
ror
dec
cmp
mov
mov
fiaddl
sub
fisttps
into
pop
popa
sub
add
test
mov
dec
jp
dec
es
cwtl
mov
inc
lret
in
sub
lock
aas
inc
and
inc
jmp
sbb
xchg
dec
out
pop
popf
lret
mov
cli
pop
mov
repnz
icebp
inc
mov
scas
test
ja
sarb
testb
iret
shll
fimuls
loop
mov
fwait
movsl
add
or
test
nop
inc
add
xchg
push
mov
mov
cmp
enter
movsl
fcoml
iret
push
xchg
xchg
mov
fisttps
out
gs
cmpsb
inc
xchg
sbb
sub
jb
scas
xchg
pushf
push
xor
xchg
insb
jecxz
scas
adc
cmpl
insb
movsl
call
rolb
stos
dec
xchg
test
cmp
jae
orb
outsb
mov
inc
aaa
subl
nop
sub
out
cmp
sbb
lahf
movsl
test
mov
adcl
jg
xchg
cmp
lods
ja
cmpsb
add
cmpsb
ret
mov
hlt
sbb
dec
mov
lret
fwait
int3
enter
cltd
pusha
decb
dec
jbe
xlat
mov
aas
push
lret
jg
adc
scas
dec
jnp
cltd
cmp
bound
shl
cld
and
mov
dec
sub
repnz
pop
push
nop
lock
insl
aas
adc
mov
fiaddl
movsb
pop
jno
cmp
pusha
jg
lret
and
dec
aas
adc
test
cld
sub
lret
clc
xor
in
dec
and
adcl
adc
push
mov
jmp
xchg
jmp
xlat
mov
xor
pushf
and
nop
movsb
loop
les
and
scas
xorb
mov
int
je
or
mov
ret
or
push
adc
mov
call
cwtl
jne
xor
mov
dec
adc
dec
sti
or
ds
daa
push
inc
into
xchg
notb
sbb
fwait
loope
jecxz
mov
xchg
test
mov
adc
lret
dec
js
sub
ds
xor
push
jmp
pop
test
lret
cltd
pusha
gs
xor
sub
loop
jno
xchg
cs
adc
and
push
pop
push
dec
movsb
dec
mov
push
and
pop
xor
xorb
mov
dec
hlt
or
inc
aad
and
or
shlb
xchg
sbb
mov
sbb
pop
dec
mov
mov
out
lock
xchg
mov
mov
aaa
push
mov
xor
pop
mov
push
mov
iret
jae
push
clc
test
jo
adc
xchg
sbb
clc
or
and
pusha
fdivrl
sahf
std
test
push
mov
fisubl
inc
out
inc
sbb
cmpsl
mov
rol
adc
hlt
or
xor
pop
inc
loop
fcoml
outsl
movsb
cmp
aaa
lock
push
add
add
push
xchg
jno
dec
xlat
pop
cmpsb
jb
add
mov
xchg
and
bound
imul
sti
leave
dec
icebp
and
pop
sahf
outsl
ljmp
aas
cltd
subb
int3
xchg
or
push
xchg
or
jns
stos
movsb
mov
test
push
insb
lds
push
jns
or
or
insl
fwait
jle
sbb
int3
imul
push
adc
je
push
insb
mov
adc
enter
push
jecxz
sbb
jle
loopne
lods
xchg
cmp
daa
call
scas
and
jb
lahf
dec
imul
mov
outsl
sbb
lock
ret
or
icebp
lret
add
dec
xchg
pop
sbb
in
lahf
pop
and
lret
std
mov
mov
lret
shlb
icebp
stos
stc
outsb
mov
adc
cmpsl
mov
or
aam
cmp
xor
ror
pop
push
mov
lock
cmpsl
ret
dec
ljmp
cmpsl
mov
es
jne
lds
xor
sub
repz
in
xchg
push
dec
andl
sahf
rep
pushf
decl
icebp
les
xchg
mov
mov
iret
dec
hlt
add
or
fnsave
dec
sbb
xchg
xchg
cmpsl
and
sbb
bound
js
lea
test
mov
loop
xchg
jne
sub
sub
es
aas
pop
dec
xor
adc
push
andl
imul
mov
mov
add
sbbl
pop
mov
pusha
lds
sub
mov
idivb
push
mov
repnz
dec
jns
aad
push
fsubl
pop
jo
in
mov
adc
imul
pop
mov
mov
inc
xchg
cs
mov
gs
fwait
jp
imul
aam
xchg
stos
dec
sub
enter
sub
jae
cmp
in
push
paddsb
jns
outsb
dec
loope
stos
jns
imul
repz
cmp
in
int
data16
repnz
mov
out
rcrl
jns
inc
mov
test
mov
sti
aad
aad
adc
dec
enter
fnstcw
sti
fs
mov
and
in
sub
nop
pop
lcall
xchg
cltd
or
mov
fisubl
sbb
data16
dec
dec
icebp
out
and
cmpsb
dec
loopne
xchg
iret
popa
stc
jl
mov
xchg
js
lds
xor
push
inc
jbe
std
jno
icebp
iret
sti
push
pop
jae
fbld
push
je
sbbl
scas
test
adc
jl
cld
sub
inc
loop
or
decb
push
jmp
and
fildll
negb
lods
xor
xchg
adc
or
mov
xlat
sub
std
dec
adc
sbb
add
jae
imull
jg
jae
dec
sub
jb
arpl
xchg
xchg
hlt
push
cltd
sub
mov
xchg
imul
xchg
ljmp
das
mov
mov
inc
stos
push
scas
jo
lock
dec
adc
lods
int
test
std
jae
mov
xor
xor
dec
push
xor
mov
cmp
lods
scas
xchg
pop
push
mov
mov
stc
mov
lods
push
sahf
inc
ret
mov
adcb
and
pushw
mov
stos
or
popf
push
ja
dec
je
cmp
xchg
pop
dec
stos
mov
mov
andl
adc
sub
xor
pop
shlb
repz
mov
hlt
das
mov
fsub
dec
fmul
das
and
dec
mov
jmp
test
jl
xchg
lock
xchg
insb
dec
xor
cmc
xor
mov
mov
cmc
and
pop
jbe
scas
jg
xchg
mov
imul
add
mov
testb
dec
jle
and
xchg
pushf
push
filds
dec
inc
add
das
lea
xchg
loope
xchg
daa
popa
dec
mov
dec
mov
loop
loopne
xor
push
push
add
jl
adc
imul
popa
pop
lock
dec
jae
into
out
jns
ds
fistps
iret
pop
sub
sbb
sbb
out
call
outsb
testb
mov
jle
xchg
and
dec
int
jb
loope
ret
or
testb
mulb
pop
mov
inc
inc
jae
dec
pop
or
mov
inc
lcall
jp
xchg
std
or
adc
imul
mov
dec
and
inc
or
movsb
adc
sti
xlat
push
mov
pop
sub
jge
pop
jb
jno
cmp
xchg
sub
hlt
das
pusha
push
lods
pop
mov
testb
in
out
insl
pop
dec
xchg
cmp
cmp
pop
dec
mov
mov
cmpsl
cltd
cmpsl
adc
add
stc
inc
xor
push
cmp
icebp
ljmp
jp
lret
ja
jle
test
mov
inc
or
dec
xchg
mov
and
dec
xchg
jg
nop
lahf
test
dec
cmpsl
fwait
xor
ss
insb
call
orl
lods
stos
lcall
into
push
icebp
push
mov
jb
icebp
iret
dec
popf
sbb
push
repnz
sbb
mov
adc
pop
xchg
out
pop
jle
fimuls
add
jo
cmpsb
shl
push
out
pop
xchg
and
aad
test
mov
push
cmpsl
gs
dec
arpl
adc
push
pop
or
cmp
xchg
or
and
xchg
mov
jb
mov
stos
xor
scas
and
mov
lret
out
jno
xchg
sbb
sbb
fs
adc
outsb
jge
mov
sbb
in
sarb
int
out
call
test
flds
inc
push
or
out
repz
fnstenv
push
xorl
jbe
stos
pcmpgtw
mov
in
dec
in
jp
rcrb
xchg
nop
lods
dec
cmp
mull
mov
insb
dec
rcll
das
fldcw
loop
jmp
aas
loope
mov
lds
xor
mov
xlat
lret
and
dec
xchg
mov
out
iret
lret
enter
mov
mov
pop
dec
mov
dec
xchg
jp
lret
xchg
je
inc
lret
lahf
sub
xchg
test
mov
loope
inc
mov
jl
xchg
cmpsb
adc
inc
dec
insl
dec
outsl
jne
pop
in
or
outsl
sub
hlt
ret
push
jo
pop
jmp
ja
xor
enter
lods
or
call
pop
and
daa
lock
xor
sub
jns
push
sti
aas
aaa
dec
inc
cs
dec
ss
jns
cmp
jns
dec
inc
mov
dec
aam
mov
notl
mov
repz
push
test
pop
mov
adc
outsl
jbe
ret
cmp
out
inc
cmp
mov
add
dec
jmp
push
lea
cmpsb
xchg
jmp
rclb
xchg
dec
cwtl
cmpsb
dec
push
mov
loop
lret
inc
sbb
inc
jb
sub
dec
bound
lcall
aad
shll
in
scas
or
mov
xlat
stos
sbb
sbb
cli
sbb
icebp
sub
popa
ds
stos
cmp
add
ret
je
pop
les
mov
es
outsb
fdivs
and
mov
mov
ret
or
dec
mov
inc
daa
xchg
adc
cmp
mov
js
inc
idivl
mov
push
jmp
pop
cmpsb
andb
add
xchg
repz
add
nop
adc
scas
fidivrl
add
inc
cmp
add
lods
popl
add
push
jne
into
mov
mov
rcr
push
cli
negb
push
mull
adc
inc
cmp
subb
and
outsb
mov
lea
jl
xchg
adc
add
sub
mov
xlat
stos
sub
sbb
add
cmp
scas
add
ret
and
inc
jp
or
adc
enter
add
dec
mov
jg
arpl
ljmp
pop
push
add
stos
jnp
int
pop
fstpl
pop
add
das
add
sub
jp
mov
add
jns
sub
lods
fidivl
ds
out
and
dec
scas
sti
test
push
sub
add
lods
incb
notl
add
lock
insl
sub
movsl
or
repz
dec
sbb
add
int
push
idivb
fdivs
inc
push
sub
pop
xchg
push
push
jo
inc
jl
int
pushl
inc
stos
dec
adc
add
insl
repz
jg
xor
pop
mov
add
mov
add
std
pusha
or
cmpsb
icebp
and
aaa
adc
add
cmp
movl
arpl
lcall
jno
ror
add
call
roll
jl
clc
push
data16
in
xor
add
xchg
inc
and
stos
jae
adc
mov
stos
mov
xlat
or
sti
adc
decl
test
lods
cli
xchg
add
xchg
push
stos
add
insl
cmp
xor
cli
add
es
pop
add
cld
push
xor
mov
lcall
sbb
fimull
sti
notb
pop
jbe
sub
jle
xchg
add
mov
sbb
add
xchg
add
enter
add
add
je
or
pop
adc
sub
add
in
enter
add
pop
movzwl
outsl
add
lods
movsb
into
xlat
repz
sbb
out
jecxz
popa
loopne
gs
xchg
pop
add
push
pop
mov
ficoms
xchg
jp
push
js
inc
cmp
aam
clc
sbb
les
add
pop
adc
popf
jb
pop
pop
push
dec
or
cwtl
int3
lret
add
push
jb
jbe
push
mov
std
jg
add
enter
or
mov
push
adc
add
and
jb
lds
add
adc
rol
push
xor
pop
push
lret
je
jb
or
pop
sbb
pop
and
mov
movsb
pop
mov
adc
add
inc
rcrb
pop
mov
adc
dec
aam
add
dec
imul
pop
call
jg
push
add
movsl
sbb
mov
rorb
movl
xchg
mov
mov
adc
and
or
shlb
dec
add
and
add
lret
push
mov
mov
es
insb
leave
push
add
sbb
addr16
cmp
loopne
outsl
scas
in
adc
pop
mov
fimull
cld
xor
movsb
fidivrs
test
jmp
fldl
cmp
sbb
pop
adc
mov
adc
sub
shl
fs
dec
add
inc
nop
jp
or
xor
add
ljmp
add
xor
clc
daa
outsb
push
stc
out
sbb
out
adc
insl
pop
add
nop
out
jl
and
lret
lcall
sbb
iret
add
xor
inc
xchg
dec
shlb
adc
cltd
or
xlat
mov
mov
imul
dec
adc
sub
cld
int
add
scas
das
insb
jl
mov
mulb
add
dec
sub
mov
mov
xchg
pushf
call
xchg
add
push
or
dec
rolb
xor
push
fcomps
fbld
nop
jge
stos
cli
fisubl
and
adc
and
add
dec
sbb
xorb
push
inc
jmp
add
dec
loop
mov
fidivrl
adc
dec
push
inc
xlat
inc
jnp
in
cmp
lds
push
cmp
into
jns
xchg
pop
mov
add
arpl
or
test
fsub
ror
mov
fsubp
nop
jmp
add
cmp
xor
mov
sar
cld
dec
icebp
adc
add
cmp
jae
mov
pop
lret
out
in
mov
add
nop
data16
mov
mov
aad
pushf
pop
outsl
andb
sub
enter
stc
mov
add
and
clc
xchg
inc
addl
dec
scas
jl
mov
hlt
rcr
xchg
jle
cmpsb
cmp
repnz
jno
adc
or
rolb
cld
negb
add
jle
movsl
fiadds
cltd
lea
or
mov
sbb
and
add
push
sbb
mov
rorb
fisubs
clc
inc
cld
xchg
loop
loopne
pop
lods
cmp
out
cmp
add
popf
stc
jns
rorb
jg
mov
pop
xchg
add
mov
stos
sbb
xchg
add
adc
loop
mov
and
xchg
add
push
stos
sahf
mov
push
std
add
jae
mov
aad
outsl
xor
inc
xchg
push
lcall
xor
dec
add
rcl
pop
cmp
loopne
pop
daa
mov
add
nop
int3
fnstenv
add
add
or
xchg
inc
vcvtdq2pd
mov
inc
frstor
repnz
inc
cmp
cmpsb
ret
pop
and
lds
xor
mov
arpl
fildll
and
add
mov
add
inc
sbbb
shl
push
xchg
pop
adc
jbe
out
dec
add
push
push
insl
or
or
call
jmp
xor
pop
push
lods
mov
bound
cld
ret
nop
push
icebp
xchg
clc
cli
fmuls
loope
arpl
shrb
xor
pop
jbe
mov
arpl
adc
in
lret
and
ffree
add
fiaddl
jp
mov
ss
add
add
repz
add
rcr
inc
call
mov
mov
push
add
in
mov
idivb
and
shlb
or
dec
adc
push
int3
and
ja
add
add
testb
or
fcoms
jmp
mov
push
cmp
mov
mov
xchg
sahf
movl
mov
xor
or
popa
or
push
jns
or
scas
inc
add
adc
imul
dec
mov
daa
or
and
fs
addb
aam
mov
add
dec
addl
mov
add
cmp
popf
add
sub
push
shll
add
mov
pushl
lods
lret
push
add
fidivl
fwait
in
mov
lock
popa
jae
imul
stc
pop
iret
or
ficomps
js
les
mov
xchg
imul
lahf
sarl
inc
pop
xchg
add
icebp
jbe
xor
int
mov
mov
arpl
push
das
jmp
mov
xor
adc
iret
mov
xchg
out
cmp
cmp
push
or
add
push
insl
push
shrl
sbb
cmp
repnz
add
mov
in
cltd
adc
sub
push
sub
jb
sahf
jns
jne
data16
xor
fcmovnbe
pop
xor
dec
lods
mov
lods
mov
repz
sub
lret
fldcw
cs
pop
or
jns
add
int3
das
mov
adc
ds
frstor
loopne
dec
pop
outsb
sub
xchg
push
cmp
and
or
xchg
or
rcr
lds
xchg
push
add
jmp
xor
mov
jae
add
xor
decl
cmc
fcmove
cmp
iret
sub
stos
icebp
mov
xor
es
xchg
movb
pusha
sbbl
jns
cmp
jbe
mov
adc
lods
shll
test
movsl
add
outsl
jnp
fidivrs
bound
dec
xor
mov
or
pop
and
and
xchg
bound
lds
data16
ret
jl
sarl
int3
dec
cltd
jo
push
mov
cmp
push
outsb
dec
pop
rolb
loopne
lea
popa
outsb
fcomp
repz
dec
add
sbb
stos
sahf
inc
push
or
iret
add
lahf
jb
add
sbb
popl
xlat
call
jle
add
mov
push
xlat
xchg
sub
jb
add
loop
cmpsb
sbb
and
dec
arpl
add
cmpsb
mov
cmpsl
ret
push
sahf
sub
out
push
dec
nop
popf
sbb
add
orl
mov
mov
js
xor
int3
fsubrs
lahf
jmp
movsl
and
and
mov
loope
push
pop
inc
adc
mov
outsb
push
mov
lret
adc
add
jne
xchg
outsl
mov
add
fstps
ljmp
pop
jne
inc
icebp
iret
sbb
es
xchg
fwait
adc
test
out
inc
add
stos
xchg
addb
mov
jmp
addl
sbb
aas
repz
sub
sbb
pop
outsb
mulb
lds
push
insb
and
jbe
jo
movl
add
jno
rcl
pop
cmp
repnz
pop
sbb
sub
dec
cmpsl
dec
into
inc
xor
adc
mov
and
rcl
rcrb
or
mov
cmpsb
push
mov
add
int3
movsl
ret
xchg
push
add
sbb
inc
lods
mov
xor
nop
cltd
adc
jns
fdivs
cltd
incl
and
xor
add
adc
test
out
add
addr16
cmc
add
or
inc
jge
lcall
in
or
out
cmc
add
mov
lods
loope
cld
sub
bound
mov
and
push
pop
rolb
jne
ds
or
in
inc
rep
push
call
and
stc
dec
popf
mov
add
jae
repnz
or
pop
push
sbbl
or
mov
fisubl
push
mov
jbe
add
enter
lea
mov
pop
jnp
jp
lea
pushf
sbb
data16
out
sub
xchg
das
insl
add
rorb
dec
add
adc
lret
xorl
sbb
adc
add
bound
inc
fmuls
testb
sub
fidivs
sti
outsl
mov
pop
sbb
sarl
pushf
cwtl
cmp
cmp
push
ja
pushaw
add
mov
fsubp
js
and
mov
pop
dec
ret
sub
jmp
xor
xchg
stos
aas
sub
ja
sbb
inc
sti
lcall
or
xchg
mov
add
or
pop
fidivrl
in
outsl
xor
enter
and
repnz
inc
add
adc
xchg
clc
lahf
jns
dec
aam
sbb
pop
adc
add
arpl
faddl
jge
pop
adc
inc
sub
and
xor
in
cmp
pop
jl
pop
mov
mov
out
add
sbb
push
clc
inc
xchg
or
fsubrs
xor
mov
fidivl
add
test
and
outsb
pop
push
leave
push
sbb
pop
iret
mov
or
mov
fadds
inc
psrld
cmp
nop
add
jnp
popa
movsb
pop
cmp
cmpsb
fisttpll
mov
test
sub
mov
sub
rol
js
or
add
aad
adc
shr
fdivrs
cmpsb
repnz
in
jecxz
sub
add
jne
inc
mov
xchg
add
cmp
sub
fwait
add
loopne
scas
add
xchg
pop
mov
inc
ja
flds
jle
les
add
sbb
negb
adc
add
xor
jmp
push
xchg
leave
dec
add
std
ficompl
in
or
dec
mov
jecxz
add
mov
add
cld
loope
add
inc
push
orl
cmp
bnd
add
jmp
push
push
rcrb
and
test
pop
rolb
pop
xchg
sbbl
add
mov
add
scas
sbb
andb
pop
lcall
push
mov
repz
in
mov
xor
jb
ljmp
push
pop
xor
jge
sbb
or
call
sbb
cltd
jnp
ficompl
mov
push
add
add
sbb
int
jo
pop
jle
pop
cmp
pop
jb
xchg
push
mov
pop
fsubs
jo
xor
mov
mov
aaa
and
xor
add
nop
fimuls
je
xchg
or
pushf
mov
jmp
or
jge
movsb
sbb
dec
mov
leave
rcll
mov
inc
aaa
js
add
xor
add
push
jge
rcrl
cmc
mov
xchg
decb
fs
pop
mov
nop
or
cmpsl
int3
daa
add
enter
or
stos
mov
dec
add
in
xchg
fistl
lods
pop
push
call
xor
pop
movl
addb
aas
lds
jmp
cmp
xor
cmp
test
leave
jp
scas
inc
push
xor
cmp
aaa
loopne
inc
and
xor
xor
and
ja
jbe
data16
fadds
adc
shrb
mov
jmp
or
dec
js
ljmp
xor
out
in
cld
mov
push
xchg
leave
aaa
lret
enter
cltd
icebp
mov
repnz
addb
push
jmp
and
outsl
or
jno
push
sub
maskmovq
mull
xor
cli
adc
in
out
xlat
imul
mov
pop
or
mov
sub
outsl
jae
cmpsl
jge
enter
test
scas
add
pop
arpl
mov
fists
cld
mov
jo
or
pop
add
dec
mov
jecxz
cmp
fisubs
lods
jo
lret
hlt
loope
rorb
sar
pop
sar
sbb
add
lods
or
dec
std
loopne
lods
daa
and
bound
and
je,pn
lods
mov
xor
out
dec
sbb
jle
add
cmp
add
jb
hlt
mov
adc
psubusw
xchg
mov
das
subb
mov
cmp
and
pusha
add
jns
stc
dec
iret
dec
xchg
out
in
popa
mov
int
icebp
add
ficomps
scas
out
jl
add
and
or
push
outsl
test
push
popa
add
sbb
jbe
fisubs
das
out
add
adc
out
movsl
add
add
aaa
adc
inc
xlat
and
ja
fcmovbe
lods
shll
int3
inc
adc
test
imul
push
xlat
icebp
push
cltd
mov
test
adc
and
jo
pop
push
nop
ss
add
adc
arpl
inc
fstp
inc
adc
popa
xchg
inc
add
loopne
cmp
in
pop
leave
scas
pop
or
mulb
mov
xchg
dec
fnstenv
ja
arpl
fmull
push
fsubs
out
mov
pop
jbe
mov
mov
out
add
dec
jg
jp
jle
xchg
and
and
fidivl
sub
mov
pop
insl
and
outsl
xor
ss
or
cld
xor
outsl
push
cltd
divb
or
add
lods
add
push
mov
cmp
mov
inc
daa
arpl
adc
rclb
lock
add
add
je
xor
jae
leave
xor
cltd
pusha
movsl
ficomps
cmp
sbb
gs
scas
insb
test
mull
cld
xchg
das
add
clc
xchg
push
xlat
jb
push
sbb
xchg
lret
ror
push
add
adc
inc
jl
mov
dec
jb
add
movsl
sbbb
pop
inc
mov
in
iret
das
js
and
rolb
xchg
add
xor
mov
adc
movl
and
or
popl
out
cld
sub
rclb
sbb
push
or
mov
stos
add
sbb
call
lahf
add
and
movl
add
add
loopne
aas
les
cmp
sbb
xor
and
push
out
adc
fimull
sub
into
stos
add
push
cmpsb
out
push
xor
test
and
outsb
adc
stc
ljmp
loop
xchg
outsb
add
mov
xchg
sbb
enter
lock
mov
sub
add
popf
mov
pusha
cmp
add
imul
xchg
add
or
inc
add
dec
sbb
fidivs
cmp
dec
andl
fiadds
sbb
repnz
push
aas
lcall
add
cld
cmp
es
fisubrs
sbb
mov
add
mov
jno
sbb
jge
and
lock
nop
imul
fs
ret
add
rcl
or
inc
add
add
mov
sbb
fucomip
add
add
or
jo
aad
pop
fisubrs
test
jno
sub
aas
pop
mov
jbe
cwtl
addl
loop
arpl
stos
fdivrp
xchg
add
xor
and
pop
add
jo
cld
xchg
outsl
test
add
into
push
movb
scas
lahf
jnp
xchg
sub
push
jb
inc
xchg
add
pop
lret
add
xor
call
nop
rclb
sbb
outsl
cmp
mov
cmp
push
cmc
jb
repz
fcmove
xor
pop
jnp
nop
daa
outsb
mov
call
jmp
js
or
or
sbb
or
push
and
cmpsb
add
shlb
rcll
pop
add
dec
das
inc
aam
cmc
in
add
mov
dec
adc
les
and
dec
inc
pop
loop
mov
iret
dec
or
jae
je
push
cmp
jl
push
mov
or
add
ds
inc
add
push
or
xchg
test
filds
cmp
out
shll
call
push
add
or
aad
mov
pop
out
subl
xor
data16
push
or
cmpsb
mov
enter
mov
insl
add
adc
add
push
sbb
fdivr
dec
scas
fildll
jne
and
ss
imul
leave
xchg
inc
push
fadd
fadds
ss
sbb
add
shlb
xchg
in
jnp
add
mov
sbb
push
adc
pop
je
ficompl
mov
pop
and
add
fiadds
pop
sbb
les
stos
mov
dec
jo
add
int3
cmc
lahf
sub
or
rolb
dec
daa
bound
frstor
out
mov
pop
add
or
sbb
mov
or
iret
pop
out
pop
test
es
cmpsb
pop
or
dec
lods
fstpl
hlt
int
mov
jecxz
arpl
add
lcall
pop
add
orb
or
jbe
xor
add
dec
frstor
xor
push
sbb
push
jg
sahf
arpl
insb
jns
mov
popa
mov
daa
or
dec
ror
mov
iret
mov
push
arpl
add
aas
add
mov
pop
inc
mov
lahf
add
aaa
int3
pop
arpl
roll
inc
clc
xchg
mov
add
call
or
mov
imul
inc
rol
add
daa
xor
cs
popa
out
test
faddl
dec
sbb
add
xor
sbb
fwait
xchg
add
out
mov
dec
test
cmp
cltd
mov
add
mov
ret
stos
jge
outsb
xor
xor
in
and
push
movaps
add
fldenv
scas
jb
or
lahf
xor
loopne
fmuls
mov
mov
test
fldl
add
dec
mov
and
cld
ret
xchg
into
mov
cltd
lea
and
jl
sub
sub
mov
or
out
mov
mov
jb
mov
cltd
mov
inc
cmc
movsb
addb
adc
int
out
add
xchg
cmp
add
scas
jl
pop
test
push
ds
es
sbb
and
pushf
ret
cmp
push
pop
sti
rorb
aas
and
xchg
sbb
ficoml
loop
adc
jmp
test
push
rcr
jae
sub
dec
adc
jbe
inc
adc
dec
bound
cltd
add
shl
adc
add
sbb
add
jo
and
adc
leave
pop
addr16
jne
adc
adc
movsl
roll
std
and
pop
call
fdivs
cmp
movsb
push
and
jge
test
sub
push
xor
xor
ret
sub
add
jae
insb
test
inc
mov
int
fmuls
fsubs
fnstenv
lea
dec
addb
mov
push
into
adc
je
pop
negb
pushf
pop
flds
mov
mov
xchg
pop
lcall
aad
lods
jae
sbb
in
daa
add
and
loopne
cmpsb
sub
mov
fdivrs
push
push
xor
icebp
mov
sub
lods
sbb
sahf
mov
dec
shlb
mov
adc
mov
popf
jb
movb
sti
addr16
mov
sbb
cmpsl
sahf
out
inc
out
mul
popf
gs
ret
movsb
mov
sub
and
fstpl
cmp
pop
adc
test
adc
push
test
cmpsl
xchg
and
lret
push
xorl
dec
lea
mov
mov
push
jmp
add
push
movsl
mov
and
sbb
cmp
enter
and
xchg
mov
mov
cmp
cmpsb
lret
stos
bound
mov
mov
sarb
add
das
test
pop
rorl
and
pop
push
outsl
in
or
scas
and
mov
sbb
jge
sbb
push
fstpl
and
add
ss
xlat
insb
push
push
add
pusha
lds
pop
lcall
mov
les
mov
int
pop
jg
std
jo
cli
addl
repnz
mov
aas
mov
add
and
xor
dec
adc
pop
pop
add
push
dec
cmpl
jb
ficoml
add
cli
shrl
add
cmpsb
or
insb
mov
call
xor
jecxz
add
mov
jecxz
xor
aaa
add
adc
movsl
dec
add
dec
pushf
push
cmp
xor
push
int
push
xchg
push
sahf
jb
sub
ds
ljmp
movsl
add
mov
or
pusha
inc
popl
es
xchg
movb
xor
jmp
jno
or
jns
pop
xchg
add
es
jge
xor
subl
lcall
cli
ret
es
inc
jl
pop
jns
inc
mov
dec
data16
mov
add
sbb
mov
jl
scas
mov
or
xorb
fdivs
in
push
nop
and
push
leave
test
xor
or
add
shrb
sbb
pop
push
mov
icebp
call
cld
movsl
push
mov
sbb
lds
lock
add
pusha
nop
int
cmpsl
sti
adc
mov
loope
repz
fnsave
pop
pop
push
gs
mov
mov
mov
push
add
test
out
add
js
stos
jl
popf
test
add
jp
mov
rol
fldt
cmp
add
icebp
lock
inc
xor
add
pop
and
and
jo
jns
xlat
iret
sbb
mov
mov
mov
jae
jge
leave
inc
lods
mov
lods
scas
fldt
mov
aaa
xor
daa
lods
xor
arpl
movsb
adc
ret
pop
push
push
nop
push
add
mov
and
test
cmp
add
mov
mov
push
dec
add
push
jg
pop
or
daa
fmul
aas
es
push
mov
push
dec
pop
mov
push
jbe
pop
fcoml
sti
push
add
fidivs
fcomps
cmp
jns
es
mov
xchg
cmpsb
dec
xchg
addl
or
sbb
sub
or
mov
enter
add
adc
pop
scas
ljmp
mov
sub
add
push
in
jg
mov
data16
xor
fidivrl
movsl
jge
mov
and
aad
mov
jns
loopne
gs
mov
fcomi
test
das
in
mov
rorl
sahf
andl
xchg
cmpl
add
push
mov
add
add
sbb
fisubrl
adc
aaa
jp
and
cmc
out
les
xor
jmp
lea
add
jg
test
or
push
test
pop
add
call
xor
xor
pop
movsb
out
shll
xlat
push
push
sub
hlt
jecxz
fisubl
mov
ja
push
and
or
sub
xchg
repz
mov
rorl
xchg
loope
ficompl
ret
js
pusha
mov
pop
mov
loop
mov
mov
sub
fucomp
mov
adc
pop
mov
and
arpl
pop
aam
jns
xchg
adc
shlb
mov
dec
sysexit
add
sti
mov
or
cmp
jns
out
mov
into
data16
fiadds
outsl
aaa
mov
pop
xor
mov
shrl
xchg
and
cmp
inc
sub
sub
add
mov
imul
cmp
sti
add
test
lcall
scas
pop
aaa
aas
push
in
cmpsl
ret
pusha
cmp
inc
fwait
xor
pusha
cmpsb
add
add
inc
fistpl
sar
add
or
cmpsl
push
xchg
jno
fadds
test
sbb
adc
push
sub
enter
dec
sti
cmp
rorb
adc
and
add
int3
cmp
mov
add
inc
cltd
adc
cmp
mov
jb
cmc
adc
popa
push
sub
xor
pop
push
aam
mov
dec
xor
cmp
xor
jnp
loopne
add
xor
scas
ficoml
out
inc
loop
adc
fwait
push
addr16
cmp
cmpsl
repnz
add
mov
out
cs
and
leave
add
lret
mov
lahf
push
cmpsb
loopne
out
incb
add
cwtl
inc
and
call
jb
or
jmp
xchg
dec
add
sbbb
insb
pop
sub
fadds
pop
lock
leave
adc
repnz
jae
dec
adc
jns
and
inc
roll
mov
add
orb
adc
inc
shlb
push
add
dec
or
cmp
push
pop
mov
cmpsl
pop
xlat
fdivrs
addl
and
mov
das
lds
add
jo
loop
sbb
filds
setp
mov
int
xor
sbb
jne
or
nop
lea
sub
jbe
and
fisubs
or
mov
les
mov
add
jge
or
cmovle
mov
daa
xor
adc
mov
ret
and
jbe
adc
incb
add
inc
lea
in
cwtl
add
test
cmp
ja
pop
inc
jp
xchg
scas
mov
dec
in
arpl
ficomps
sbb
mov
in
jae
enter
and
add
adc
aas
pop
cli
adc
test
loop
sbb
andl
std
fsubrp
xchg
rcl
sub
mov
sarb
push
sbb
lahf
add
add
dec
rolb
jge
out
cltd
push
sti
gs
adc
xor
jae
movsl
inc
idivb
push
jle
push
lcall
pop
lahf
inc
add
lea
inc
aaa
mov
repnz
test
cld
xorb
adc
dec
add
es
push
dec
iret
add
xchg
pop
cmp
inc
out
cmp
pop
jecxz
imul
int3
mov
jnp
cmp
testb
or
fcoml
repnz
pop
lahf
cmp
cmp
inc
fcoml
dec
pop
xor
add
into
xchg
repz
popf
adc
add
add
ret
loop
mov
pop
mov
mov
ficompl
or
js
cmp
add
xorb
push
jae
arpl
xchg
pop
stc
lret
cmpsb
add
inc
dec
xor
or
add
das
add
stc
popa
leave
add
push
pop
jle
cltd
cli
and
in
inc
cs
and
push
lods
imul
mov
andb
add
enter
repnz
push
push
and
xor
push
aaa
hlt
test
outsl
fstp
push
mov
sbb
adc
enter
or
aas
and
cwtl
push
popa
or
sbb
pop
inc
xchg
mov
xchg
adc
add
jo
adcb
ljmp
xchg
add
xchg
negl
stos
pop
mov
leave
sub
adc
cmpsb
add
fstpl
push
add
fistps
repz
outsb
add
js
xchg
and
fiaddl
jo
jbe
and
andl
lods
lds
popa
mov
dec
push
imul
push
pop
addr16
or
pop
push
cwtl
mov
add
daa
stos
test
aaa
or
add
orb
jae
lcall
pop
jecxz
repnz
stos
add
cs
loopne
cmp
enter
push
movsb
add
sahf
xor
and
add
push
adcl
scas
add
stos
fnstenv
mov
fidivl
adc
incb
pusha
or
punpckldq
loop
ljmp
push
add
scas
and
lcall
pushf
not
add
sbb
dec
arpl
add
ret
xor
popa
adc
inc
sub
adc
lods
mov
fwait
add
lea
push
les
mov
pop
cwtl
sbb
mulb
sbb
lds
ljmp
pop
outsl
nop
mov
addb
inc
shll
sbb
data16
push
movsl
sbbb
daa
and
fadds
jl
popf
jno
sbb
mov
jmp
add
cwtl
cmpb
loop
flds
jae
inc
inc
xor
les
fidivrs
cltd
jbe
or
jae
pusha
xchg
inc
push
aaa
popl
in
pushf
insb
shll
mov
iret
and
andl
scas
mov
stos
sbb
adc
je
cmp
add
adc
pop
push
push
roll
mov
jl
cmp
mov
mov
jnp
add
mov
lods
xchg
lock
add
adc
sbb
sub
xchg
push
mov
mov
dec
sbb
fisubs
add
jle
xchg
mov
or
inc
xor
xor
das
xchg
idiv
fsubrs
mov
mov
out
faddl
fildll
pop
add
leave
jge
imul
pop
std
sarl
call
sub
popa
sub
in
iret
or
outsl
lods
icebp
push
out
dec
pop
je
xchg
lahf
push
lcall
aaa
bound
cmpsb
loop
hlt
imul
add
sbb
loope
mov
sub
test
bnd
aas
cmc
inc
mov
adc
inc
add
lret
push
repz
lds
gs
sbb
not
ds
add
ja
or
inc
cmp
or
adc
and
imul
rolb
pop
stos
and
dec
mov
jne
call
ficompl
adcl
inc
cmp
imul
mov
popa
incb
sub
and
adc
push
insb
pop
sbb
push
push
sarb
std
clc
cwtl
add
dec
add
fimull
pop
jns
lods
sbb
add
mov
jnp
pop
ss
add
insl
and
xchg
mov
jnp
cmp
jae
cltd
into
test
stos
or
repz
or
xor
add
xor
xorl
imul
std
pusha
jb
add
stos
lret
cli
fadd
out
sbb
fdivrs
dec
pusha
clc
negl
ret
add
push
pop
outsl
bound
movsb
sbb
sbb
movsl
fimuls
pop
clc
cmpsb
es
sub
cli
or
add
add
mov
leave
push
and
pop
cmp
adc
jne
stos
out
inc
mov
les
jmp
sbb
stc
sbb
pop
loopne
or
cmp
push
test
test
mov
addr16
imul
sub
xchg
mov
ja
cmpsl
xor
jp
inc
sub
scas
pop
sub
pop
mov
sbb
arpl
sbb
loop
pop
cs
int3
daa
or
adc
data16
cmp
mov
xchg
loopne
lcall
cmp
jnp
push
add
pop
pop
mov
leave
add
push
shrb
cmp
adcb
xchg
mov
in
aaa
mov
enter
adc
add
push
pop
inc
dec
cmp
xor
add
xchg
mov
xchg
insb
or
mov
xchg
out
fucomip
lds
cltd
pop
xor
inc
add
jnp
gs
jmp
jmp
add
push
shll
faddl
add
add
mov
ficompl
mov
subl
jb
and
add
add
or
sbb
mov
jns
pusha
sub
add
arpl
iret
adc
popf
xchg
inc
stc
repnz
pushf
add
js
fdivr
dec
frstor
push
cmpsb
testb
fcomps
cmpsl
aas
sahf
dec
adc
dec
sbb
mov
pop
add
and
pop
inc
fwait
movsl
add
lea
out
cwtl
pop
sbb
cmpsl
or
sub
fisubrs
shlb
xlat
out
add
or
mov
negb
cmp
mov
add
mov
pop
xor
mov
outsl
fistpl
sbb
and
cmc
xor
add
xchg
dec
pop
in
xchg
fildl
inc
aam
das
xor
ficoms
add
add
stc
pop
leave
add
mov
rcrb
outsb
sub
jecxz
add
push
adc
lods
stos
add
mov
arpl
add
jo
stos
xchg
add
dec
es
add
mov
and
or
mov
ror
push
xchg
cmp
daa
add
std
push
fwait
bswap
std
inc
adc
add
mov
dec
inc
jle
cmp
add
push
mov
push
xor
and
mov
insl
stos
add
jo
sbb
fldcw
in
add
stos
xchg
xor
into
fmuls
pop
sbb
ror
jge
mov
xchg
lods
mov
push
dec
fcmovbe
dec
es
push
bnd
mov
add
inc
mov
mov
mov
mov
fsts
adc
call
jb
nop
cli
or
int
or
mov
xlat
insl
add
mov
cmpsl
orl
fisubrs
jb
cmp
popf
or
les
xor
add
call
movsl
xchg
outsl
mov
ficoml
jle
mov
in
fdivrs
xor
mov
xchg
mov
xor
shl
mov
add
enter
inc
xor
add
lret
add
shll
xor
mov
inc
mov
add
out
jns
inc
insb
xor
in
jge
add
arpl
scas
or
popl
adc
lret
push
mov
jno
add
pop
mov
out
adc
pop
xchg
test
call
lret
jns
es
sub
or
cmpsb
pop
add
sub
lods
lds
xchg
aas
shll
lahf
mov
mov
jbe
push
pop
scas
jmp
jmp
or
cld
ds
outsb
das
mov
mov
add
fisubs
xchg
sbb
dec
mov
scas
ljmp
jo
jmp
xchg
add
mov
jae
jp
or
mov
add
xchg
cmp
stos
out
fildll
repz
lahf
lcall
cltd
mov
fists
push
dec
sbb
lahf
imul
xchg
test
lds
mov
fbld
fs
lods
add
or
das
in
xchg
ficoms
imul
notb
shlb
adc
sbb
xchg
fimull
iret
add
nop
pop
movsb
push
xor
imul
repz
mov
cmpb
addr16
sbb
das
daa
lea
cmp
and
mov
jl
push
xchg
adc
ror
movsl
push
add
jnp
xor
cmp
sbb
or
and
idivl
sbb
ret
xor
icebp
lock
data16
push
add
rorl
icebp
and
jne
jge
push
fisubrl
out
add
xlat
daa
sbb
adc
js
push
adc
inc
xor
outsl
add
leave
pop
jo
loop
lahf
stos
or
jbe
mov
sti
add
fildll
mov
add
inc
mov
shrl
and
sbb
fcom
add
xchg
leave
jp
fldl
dec
mov
inc
jne
add
jecxz
jnp
lret
popa
cmp
add
pop
imul
mov
and
push
or
jp
cltd
popa
add
adc
lods
test
out
mov
add
fcoms
cmp
jg
outsl
xor
jbe
loope
inc
je
test
mov
lea
cld
iret
outsb
add
inc
adc
push
mov
stos
cmp
push
stos
xchg
sarb
adc
mov
sbb
std
jnp
add
sub
mov
sub
pop
dec
pop
xor
cmc
dec
adc
adc
lret
js
sbb
mov
add
shl
push
adc
movsb
testl
addr16
fists
sbb
add
pop
jae
sbb
lahf
add
je
xor
adc
push
xor
add
mov
add
and
mov
pop
leave
add
rorb
test
cmc
adc
add
add
loopne
aaa
mov
sahf
add
es
add
mov
add
pop
add
dec
sbb
stos
add
in
addl
fdivr
add
lock
add
icebp
mov
sbb
mov
cmpsl
mov
adc
xchg
sbb
nop
push
adc
das
adc
xor
lock
mov
pop
fildl
xor
adc
aad
push
cmpsb
js
bound
flds
mov
cld
loopne
jl
pop
or
pop
xor
es
mov
cmp
mov
hlt
adc
aad
add
sbb
add
push
aaa
or
add
mov
add
cmp
add
sbb
jbe
insb
addb
fiaddl
data16
lret
xlat
xchg
aad
loopne
push
sbb
mov
pop
loope
mov
aaa
sub
imul
and
cs
or
dec
les
imul
fdivrs
cmp
or
subl
pop
ret
and
shl
or
iret
into
mov
loopne
arpl
adc
enter
fidivrs
pop
push
in
sbb
loope
out
int
js
dec
jae
sub
push
daa
lods
aam
sbbl
xor
js
imul
mov
into
out
cli
mov
fsub
jnp
gs
and
jmp
cmp
and
orb
leave
loope
mov
stc
or
mov
mov
or
xor
fstps
test
jle
sarb
loope
mov
mov
sbb
mov
lods
pushf
loop
push
jecxz
ret
or
jno
add
das
fidivs
enter
push
data16
fisttpll
sbb
xor
stos
bsf
pop
sbb
repnz
sbb
pop
mov
faddp
jmp
push
inc
pop
cmp
xchg
cmp
outsl
aam
adc
loop
lea
out
and
pusha
imul
cltd
push
jb
pushf
xchg
in
sub
mov
mov
add
lods
dec
and
xor
xchg
stos
add
mov
enter
xlat
mov
mov
add
mov
and
xlat
mov
dec
and
test
shll
xor
xor
pop
insl
lret
loope
mov
add
push
sub
das
jnp
add
jns
dec
cmp
scas
aaa
sbb
add
pop
std
cs
outsl
clc
test
sub
jbe
mov
push
cmp
xchg
and
mov
fcompp
iret
ds
add
test
scas
add
sbb
add
add
cmc
jecxz
out
repz
stos
rcrl
mov
shlb
loope
out
movb
loopne
lret
push
add
push
ret
shll
dec
into
or
ret
pop
fwait
test
lock
test
sub
cld
mov
xorb
fidivs
stc
jbe
mov
out
xor
push
push
add
loop
jns
arpl
add
xchg
inc
jp
aas
xchg
xchg
loopne
imul
orl
in
sbb
fsub
inc
and
cld
inc
cli
add
mov
cmp
call
dec
fcoms
mov
or
lock
mov
sti
mov
add
mov
pop
inc
aaa
cmp
xchg
sub
and
mov
and
pop
mov
into
xor
mov
cmp
mov
ja
fcmovb
pop
cmp
mov
test
mov
scas
in
or
add
jns
mov
loope
lock
xchg
xor
bound
jp
mull
sbb
and
xor
icebp
jl
xor
mov
jno
xor
repnz
jbe
nop
test
add
xor
pop
dec
xor
push
lcall
dec
lock
insb
scas
popf
out
cld
das
fidivrl
mov
jns
add
aaa
pop
inc
mov
fcoms
mov
cmp
adc
test
jb
out
test
fnstenv
out
fisubrs
jno
mov
add
popa
es
xor
popf
push
test
subl
jl
xor
imul
andb
or
test
cltd
in
mov
xchg
sub
repz
enter
and
xor
fcom
out
jmp
adc
or
int
xchg
mov
aaa
jbe
das
mov
jl
ss
or
insl
fcomps
ret
in
pop
std
and
add
imul
ss
xchg
jmp
sbb
int
lods
in
mov
test
fstps
and
int3
add
repz
jp
test
lds
aaa
mov
leave
or
xor
lock
ljmp
negl
iret
or
sub
addb
clc
cmp
repz
aaa
shlb
cld
dec
pop
fcmovbe
adc
push
jns
jmp
jnp
jmp
lcall
sti
add
stos
add
cmpsl
adc
push
cmp
xchg
sbb
or
add
add
cmpsb
out
es
mov
xchg
mov
sub
je
cld
jecxz
xor
mov
sti
lock
pop
insb
arpl
and
or
inc
fsubs
push
pop
ret
enter
mov
jmp
or
fdivrp
push
dec
clc
cmpsb
xchg
add
jmp
roll
ds
rcrl
outsl
je
sbb
jle
lret
scas
or
aas
test
add
xchg
jb
out
test
mov
imul
add
push
cmc
roll
lds
insb
pop
aas
inc
outsb
add
repz
and
inc
inc
cwtl
popf
cltd
mov
imul
addr16
add
dec
push
mov
bound
jge
inc
or
add
cmpsb
dec
add
jo
xor
scas
fldenv
jle
cld
jg
add
pop
push
out
add
repnz
loopne
or
add
fistps
inc
stos
ficoml
orb
cmp
xchg
xorl
add
fwait
cmp
jb
add
jl
mov
sub
mov
xchg
sbb
jae
lret
clc
adc
add
out
xchg
lds
icebp
mov
sarl
and
xchg
es
xor
imul
add
jl
stos
sbb
cmpsb
jecxz
and
pusha
and
movb
pop
insb
push
cli
add
xor
lcall
adc
mov
shlb
sbb
stos
mov
movsl
xlat
add
out
mov
fdivs
shlb
adc
xchg
imul
add
push
mov
mov
ljmp
nop
fistps
jbe
lret
mov
sahf
push
mov
adc
sbb
pop
xor
and
cmp
adc
add
mov
xor
inc
push
xchg
adc
mov
inc
movsl
lock
ret
or
aaa
xor
sbb
mov
mov
xchg
lahf
add
xor
cmp
add
cmc
mov
mov
xchg
add
std
add
push
dec
faddl
xchg
push
ja
stos
add
push
ror
add
jg
mov
mov
push
jnp
add
cmp
xlat
add
and
xchg
test
out
cmp
rcr
cmp
mov
jb
nop
lret
stc
mov
add
into
out
popa
ljmp
inc
pop
ficomps
mov
rol
pop
mov
push
jne
pop
lahf
xchg
js
vcomisd
cmp
les
cs
and
push
ja
shll
ret
arpl
dec
pusha
sbb
sbb
fcomp
and
add
fs
or
stc
enter
and
les
int
xor
push
pop
jmp
adc
repz
shrb
out
test
add
adc
adc
push
and
rcl
aad
push
add
enter
mov
sahf
sbb
dec
adc
push
fcmove
mov
ja
lahf
inc
pop
je
add
and
inc
pop
push
mov
jge
outsl
cltd
pusha
testl
mov
out
popa
add
add
mov
jno
fdivs
mov
cmp
stos
fisubrl
cmp
lcall
push
leave
add
popa
repz
out
push
and
or
pushl
scas
loopne
clc
int
imul
pop
dec
mov
call
mov
fsubs
int3
adc
daa
inc
adc
sbb
lds
imul
outsl
stc
jp
or
shll
iret
fidivl
loopne
push
dec
aaa
adc
test
cmp
aad
dec
repnz
std
add
push
daa
jb
stos
ss
and
clc
ret
adcb
sub
dec
xchg
movsb
es
cmpsl
push
ds
ss
popa
inc
in
xor
scas
xchg
add
icebp
adc
les
pop
lret
add
jmp
or
jno
data16
clc
stos
xor
add
test
add
dec
cmp
xchg
fidivrs
cltd
cmp
adc
or
xor
mov
xor
push
arpl
pop
flds
cld
inc
scas
mov
inc
xchg
cmpsb
add
mov
leave
xor
int
cld
lea
stos
repz
pop
ja
ljmp
push
xorl
fcomps
pop
ret
in
inc
sbb
rclb
push
or
cmp
add
jb
int
sub
out
data16
lret
push
jmp
jbe
shlb
cmp
mov
jns
mov
rcr
inc
mov
sbb
aam
adc
sub
lods
mov
xor
loop
add
fs
add
sbb
aaa
mov
cmp
cmp
jno
outsl
dec
xor
enter
popa
lahf
fwait
mov
xorb
add
dec
out
inc
jbe
lret
push
sbb
fsts
and
adc
scas
xlat
jo
xchg
sbb
add
pop
outsl
test
mov
fcomps
clc
or
loope
adc
jbe
push
mov
ret
loop
mov
push
add
enter
lret
popa
movsl
add
adc
jmp
data16
jp
and
mov
jmp
sti
int3
popa
xlat
fstpt
fistpll
into
fsub
jmp
mov
inc
fisubrs
addr16
mov
jp
lcall
mov
aam
loopne
cld
add
adc
sub
mov
lahf
cmpsb
dec
xchg
mov
test
mov
mov
jle
iret
movsb
or
std
sbb
pop
and
loope
and
add
mov
out
push
pop
lods
call
ja
push
or
stc
lods
roll
call
sub
mov
push
jo
ja
pop
into
nop
lods
fisubrl
sbb
and
add
mov
mov
xchg
push
iret
add
ja
push
repnz
jl
ret
int
or
lock
int3
daa
jae
mov
sbb
test
lds
push
insl
cld
lcall
xchg
sbb
fistl
rorb
jb
cmp
xor
stc
mov
and
stos
movsb
sti
fsubrl
mov
cmp
int
sbb
push
or
fcmovbe
cld
xor
adc
fidivs
sbb
out
jbe
or
filds
add
sbb
inc
sbb
rorb
into
cmpl
add
and
push
add
iret
jnp
clc
inc
loope
xchg
into
mov
mov
cld
and
and
jl
mov
push
fcoml
lret
or
scas
pop
xchg
punpcklwd
or
mov
inc
jne
sub
jb
xor
pop
add
leave
mov
add
mov
or
fs
xchg
cmc
ficoml
clc
fldenv
in
xchg
lahf
mov
xor
mov
int3
push
jecxz
mov
jg
cmp
xchg
xor
and
inc
jb
jge
arpl
jp
cld
int3
mov
add
test
or
xor
xchg
out
icebp
idivl
add
jle,pt
sbb
add
xor
xchg
adc
lock
lods
arpl
iret
push
inc
add
sbb
aas
and
shrb
cmpsl
out
mov
into
mov
adc
mov
es
cmp
mov
shll
int
faddl
sbb
inc
stos
add
mov
lock
ja
add
xchg
movsb
jns
ficoms
xchg
push
test
add
repz
mull
outsb
push
add
cwtl
push
lcall
xchg
xorl
adc
push
loope
adc
mov
mov
add
xor
rcr
lock
popa
lahf
shlb
push
pop
cmp
lods
mov
mov
popa
into
cmp
jno
daa
add
push
jb
stc
sahf
ljmp
scas
mov
nop
dec
filds
adc
sub
fstpl
jle
push
cltd
mov
js
pop
xor
dec
add
jbe
subl
cld
pop
and
stos
rcrb
sbb
jmp
jmp
insl
pop
addr16
adc
cld
andb
push
pop
sbb
in
inc
dec
pop
inc
adc
mov
int
mov
sbb
faddl
test
adc
out
add
add
mov
jb
addl
jne
cmpsb
ficompl
popa
mov
or
pcmpeqd
xchg
test
jo
movsl
pop
mov
sbb
lea
mov
xchg
or
es
loopne
jp
inc
pop
push
xchg
rcl
rcrb
jns
adc
lea
or
pop
in
movsl
mov
scas
adc
fisubl
inc
andb
or
fstpl
jmp
sub
bound
out
pushw
adc
addl
or
cmc
ficoml
pushf
xlat
cwtl
into
lods
or
sbbb
test
adc
mov
bound
mov
aam
fistpl
inc
sbb
lret
mov
pop
sbb
xor
add
mov
bound
rcrb
cmc
lret
aad
xchg
leave
pop
int
push
mov
faddl
inc
cwtl
jmp
push
orl
xchg
pop
sbb
es
inc
pop
push
push
aam
loop
popa
sub
rol
mov
mov
mov
stc
imul
js
jb
xchg
jmp
out
rcr
rcr
ds
fbstp
pop
out
mov
ror
mov
mov
mov
rcrb
fcmovnbe
push
pop
ret
repnz
inc
sbb
mov
mov
shrl
jae
inc
shl
cmp
repz
pop
push
fisttps
sbb
jp
sti
mov
pop
mov
mov
lds
mov
out
addr16
push
add
jae
xchg
pop
push
push
adc
movsb
cwtl
ss
cmpsb
and
or
adc
orb
sub
add
lods
shrb
repz
xchg
das
jg
pop
mov
and
mov
push
xlat
add
fninit
iret
ss
and
add
jp
cmpsl
push
push
add
add
add
lahf
sarb
push
and
lods
nop
jnp
scas
jg
lods
outsl
mov
mov
pusha
pushf
mov
test
roll
mov
fcoms
lods
es
cld
or
sub
rclb
orb
out
cld
fisubrl
mov
xchg
loope
enter
sbb
add
xor
sub
in
xchg
das
hlt
jae
es
push
aas
movsl
cs
pop
cmp
sahf
das
jmp
shlb
cmp
jns
add
and
cmp
inc
mov
adc
icebp
sbb
nop
and
testl
add
repnz
lea
push
xlat
xchg
pop
setp
push
std
aas
clc
dec
add
fimull
in
mov
mov
push
out
lahf
add
iret
mov
sub
negb
sbb
mov
add
xor
push
add
sbbb
mov
lods
sbb
out
test
loopne
and
sbb
daa
push
push
rolb
in
add
cmpsb
aad
cmp
pop
sub
pusha
sbb
cmc
repz
out
in
xor
adc
xor
push
lcall
or
cmpb
add
jnp
adc
lods
jle
aad
adc
addr16
add
enter
in
add
cmp
arpl
gs
lods
cmpsl
add
inc
mov
subb
add
sbb
out
xchg
test
mov
mov
std
movsl
cli
add
mov
inc
jo
xor
mov
dec
adc
add
xchg
ljmp
xchg
cli
les
inc
mov
push
lock
int
fidivrs
sbb
lds
orb
add
push
jp
stos
or
sub
jecxz
mov
idivb
cmc
repnz
sub
int
dec
add
test
or
icebp
xchg
repnz
mov
add
add
mov
mov
or
mov
xchg
add
mov
push
pop
or
xchg
aas
sbb
sbb
sbb
cmovae
cmp
in
and
adc
push
fcoms
push
mov
pop
cmpsb
in
popa
daa
cmp
mov
lahf
cmp
sbb
mov
inc
and
or
add
push
and
mov
xchg
dec
jbe
mov
mov
push
stc
or
mov
push
jle
bound
and
pop
adc
adc
ljmp
outsb
stc
push
out
andb
push
adc
lret
xchg
cmpsl
cmpl
mov
stos
je
stc
icebp
inc
int
pop
mov
addr16
out
mov
out
dec
lea
cli
pushf
cmp
loopne
push
pushl
cmp
stos
negl
jne
mov
ja
jl
jnp
push
push
shll
adc
loope
lock
add
sbb
les
loop
push
push
jmp
add
pop
bnd
mov
jbe
add
push
in
frstor
cmpsb
push
cs
add
jne
mov
shrl
ret
insb
mov
and
cltd
clc
cmpsb
imull
sub
jnp
or
add
enter
xchg
and
push
popf
mov
cli
add
cld
pushl
daa
cmp
scas
nop
add
lock
add
subl
mov
mov
add
imul
jbe
rclb
add
pusha
les
add
cmp
adc
cld
into
jecxz
pop
shl
adc
and
adc
adc
fiaddl
int
ds
aas
lcall
xor
mov
icebp
mov
mov
enter
sahf
dec
rol
sub
jo
xcrypt-cbc
cmpsl
roll
into
sbb
or
push
or
cmpsb
add
mov
push
mov
xchg
scas
insl
mov
int3
ja
sbb
jnp
add
scas
mov
clc
add
or
fcomps
fsts
lds
loope
sub
call
arpl
adc
inc
sbb
pusha
outsl
dec
xor
adc
fcoms
loopne
push
sbb
cmc
add
push
clc
ret
or
cmpsb
imul
mov
jbe
push
sbbb
sar
jle
outsl
int
or
push
mov
xlat
and
and
fcomip
cmp
scas
in
sti
jge
pusha
add
ret
stos
sub
xor
add
mov
push
out
mov
subb
xor
scas
mov
cltd
cmp
arpl
popa
mov
xchg
lahf
xor
or
pop
lds
mov
vrsqrtps
jae
rol
clc
test
add
push
fcomps
adcb
or
movsb
sbb
lret
jae
fstl
pop
xor
lods
sbb
xchg
cmp
jbe
leave
jo
addr16
mov
hlt
dec
aaa
and
push
or
pusha
cld
shl
mov
movb
popa
and
arpl
sbb
das
loopne
outsl
xchg
xor
inc
or
xor
inc
sub
push
xchg
xchg
rcr
das
dec
sbb
pop
mov
or
pushl
insb
rcr
shl
add
sub
test
sub
rcr
add
nop
imul
repnz
push
xchg
out
push
ds
cld
mov
ja
cmp
and
add
xor
sbb
ret
mov
and
pop
mov
faddp
data16
test
xlat
sbb
add
imul
or
fst
mov
lds
stc
xor
mov
test
fdiv
jl
cmc
add
scas
into
out
mov
add
and
loopne
jecxz
loop
lea
or
xor
popw
mov
dec
or
xchg
fnsave
add
or
mov
iret
mov
cmovg
cmp
cmpsb
cltd
sbb
add
mov
xor
nop
sti
movl
fdivrp
movsb
xchg
orb
jg
popa
inc
dec
sbb
fnstenv
add
xor
sub
add
inc
pop
clc
lahf
sbb
cmp
cmpsb
push
cmc
test
pop
out
and
and
push
add
adc
or
aad
popa
insb
add
xor
add
mov
add
movsl
std
cltd
inc
cmp
jp
outsb
lods
add
cmpsb
dec
out
inc
mov
inc
cmp
push
and
ret
loop
mov
pop
fdivrl
cmp
sub
or
push
std
int
adc
xor
cmp
ja
loope
fwait
add
test
cmp
add
sbb
popl
test
inc
pop
xlat
aas
sub
cmp
push
inc
fdivrl
iret
dec
xor
std
mov
adc
mov
cmp
pop
stos
add
fst
movsb
insl
push
xor
pop
mov
sti
cmp
and
mov
add
js
mov
jg
fldcw
repz
xorb
sbb
cmpsb
or
xchg
add
sbb
out
dec
cmp
nop
add
arpl
cmp
movsb
push
mov
and
xor
sbb
imul
mov
xor
dec
sahf
mov
arpl
xor
pop
andb
and
sbb
mov
stos
cmp
adc
push
sbb
ret
rcr
scas
sahf
inc
add
out
lcall
mov
mov
mov
pop
popf
mov
fidivl
push
mov
imul
cmp
cmp
jnp
aaa
jle
sahf
lods
add
into
push
cmp
dec
xor
add
xor
je
and
sti
inc
and
int
inc
adc
adc
ja
not
xchg
lods
lods
sbb
data16
outsb
adc
lret
pcmpeqb
and
or
leave
add
xor
out
push
popa
pop
mov
or
cmc
fcomps
add
arpl
jbe
repnz
es
add
jne
xchg
add
popf
fistl
cmpsb
js
jno
jnp
int
and
sbb
sbb
ret
arpl
mov
jg
outsl
add
xor
add
adc
sbb
pop
mov
loopne
add
mov
or
dec
mov
mov
cwtl
xor
imulb
or
jecxz
sahf
add
or
cmp
lock
test
out
loopne
and
pop
stos
mov
movsb
inc
in
adc
jo
testl
mov
dec
stos
adc
jb
pop
mov
mov
loop
sbb
sbb
je
test
add
int3
f2xm1
jnp
adc
scas
adc
sub
jns
xchg
sbb
pop
clc
jle
mov
ja
pop
push
dec
adc
sarb
lock
xchg
add
loopne
inc
push
cs
pusha
or
mov
sahf
iret
push
inc
enter
add
aad
popa
sbb
add
pop
fs
adc
add
shrb
xchg
movsl
out
jns
xchg
enter
inc
cmpsb
add
test
in
jno
fisubrl
imul
faddl
and
jnp
ficoml
jg
fdivs
data16
jecxz
test
xor
pop
mov
inc
add
cmp
jl
add
psubd
adcb
mov
jno
nop
xchg
sarl
xor
stos
push
outsl
movsl
add
push
adc
add
lahf
sarl
pop
fbld
jne
sbb
mov
inc
push
jns
repnz
inc
int
outsl
pop
pop
adc
add
xchg
xor
mov
add
popa
in
mov
test
hlt
add
sbb
movsl
jmp
add
xchg
shlb
sti
addl
push
mov
add
jne
fildll
imul
xchg
cmp
push
cmpsl
xchg
jmp
lahf
add
popa
inc
divl
fucomi
imul
jb
fwait
pusha
fsub
out
aas
or
lret
nop
add
outsl
cmp
add
xor
mov
mov
mov
pop
jb
and
jno
or
inc
int3
aas
mov
pop
sub
popf
loope
cmp
mov
fimull
mov
sbb
xlat
or
cmpsl
and
mov
xchg
sub
fsubrs
scas
jno
or
xor
cmp
out
scas
icebp
cwtl
and
add
mov
imul
out
sahf
addr16
fsubp
movsl
setp
adc
out
inc
mov
fidivrs
sbb
ljmp
bound
pop
icebp
jo
dec
mov
les
addl
sahf
cltd
xchg
ds
cmp
shlb
aas
mov
out
push
arpl
sahf
jo
cltd
lret
and
sub
jae
dec
test
fwait
add
mov
xchg
add
leave
adc
add
jno
in
jo
xor
mov
pop
loope
add
and
add
mov
pop
bound
pusha
out
lcall
and
popf
ret
pop
nop
xor
sub
aad
and
scas
out
xchg
and
xlat
repz
adcl
jne
sub
mov
push
adcl
loopne
xor
mov
shl
xor
add
stos
les
stos
pop
jg
xchg
jne
das
sbb
pop
jecxz
xchg
xor
add
js
loopne
mov
mov
imul
loop
mov
push
push
lret
and
sahf
outsl
dec
mov
xor
add
add
icebp
lret
test
mov
rclb
fidivs
jp
cmp
xchg
push
roll
popa
xor
adc
aas
mov
sahf
outsb
dec
add
leave
cmpl
loope
pop
cmp
dec
and
imul
cmpsb
jg
loope
je
or
out
jns
sbb
add
lahf
test
stos
ljmp
inc
test
add
shll
cli
push
xchg
add
or
fs
pop
push
push
das
dec
add
aad
jb
add
jmp
sbb
fdivrs
inc
add
cltd
pop
loopne
in
xchg
mov
pop
popa
sbb
cmpsl
xor
adc
or
mov
and
sub
and
testb
dec
fidivs
loop
add
xor
insl
pop
popl
insb
in
int3
lods
or
scas
jns
fldl
icebp
adc
and
js
adc
sub
xchg
xor
adc
push
pop
enter
mov
repz
mov
add
adc
negl
xchg
sbb
jae
sub
lock
daa
adc
repz
cmp
scas
xchg
sbb
mov
xor
add
icebp
inc
xor
cmp
add
push
bound
in
push
add
xor
xor
jbe
mov
mov
iret
cmp
mov
sbb
sbb
xchg
lret
add
hlt
enter
inc
lret
jp
daa
and
fadds
cli
push
movsl
xor
and
sub
sbb
or
stc
dec
add
ljmp
fdivs
cmp
add
ss
add
mov
lds
movsl
pop
int
out
fwait
pop
add
sbb
add
loope
scas
pop
cmc
adc
je
add
aaa
or
jns
add
test
mov
add
sbb
out
cmp
jecxz
and
ds
std
cwtl
mov
insb
hlt
dec
inc
jp
std
push
xchg
push
fcoms
or
xor
adc
xor
leave
jne
aaa
add
xchg
insl
popa
add
jbe
xor
xlat
addr16
test
clc
sub
daa
inc
lret
and
sbb
pusha
fidivl
jecxz
repnz
jb
mov
les
xor
inc
add
xchg
popa
xlat
nop
int3
pusha
stos
out
cmp
enter
xchg
movsl
imul
push
je
enter
fs
sti
cmpsb
scas
loop
sbb
je
sbb
jmp
or
cmp
push
cld
inc
das
jo
loopne
pop
add
add
testl
pop
icebp
xlat
repz
or
enter
and
mov
push
pop
and
add
fsubr
push
out
aad
jae
arpl
ficomps
loope
ljmp
pop
popa
addl
mov
push
lock
add
jle
jns
add
aam
sbb
mov
or
insl
add
xor
fiadds
rsm
dec
pop
jmp
ss
scas
aas
cmp
insl
sbb
decl
add
fldcw
lret
add
push
mov
idivb
rcr
jge
mov
imul
mov
fcoms
iret
inc
add
add
adc
add
sbb
mov
outsl
out
sbbl
lcall
cmp
push
sbb
pusha
in
outsl
repz
adc
xor
sahf
add
stc
shll
mov
mov
sbb
mull
push
add
mov
inc
mov
xor
inc
out
lock
stos
lea
mov
pop
or
test
push
iret
add
dec
push
scas
sbb
test
fildl
mov
inc
jp
cmp
pushf
add
dec
xchg
add
out
cwtl
add
push
hlt
lea
test
adc
lds
sbb
es
mov
out
add
sbb
mov
mov
iret
out
pusha
add
loop
sarb
mov
mov
mov
cltd
scas
pusha
push
fwait
adc
mov
fsub
pop
cmpsb
stos
or
fs
out
pop
dec
adc
fisubl
lea
rolb
ret
adc
shll
xor
pushf
aaa
cmp
add
enter
cmpsb
into
add
lcall
add
aaa
sub
push
icebp
adc
jge
scas
and
in
sti
add
inc
or
push
stc
xchg
fimuls
inc
popf
mov
repnz
jmp
outsb
clc
dec
xor
fs
outsl
aaa
repnz
adc
push
in
repz
cmp
mov
and
dec
jmp
int
cmp
push
mov
add
in
jb
js
add
add
ds
jmp
jno
push
lcall
and
out
out
jle
ret
push
cmp
cs
adc
ficoml
cmpsl
inc
jo
jecxz
pminub
or
lret
mov
cmp
push
add
pushw
add
mov
fmull
aas
add
in
std
fs
xor
stos
dec
add
into
rolb
cli
cmpsb
popl
mov
sbb
or
ficomps
ds
mov
sbb
or
aad
cmp
dec
dec
fisubs
jns
cli
inc
push
add
outsl
xorl
and
push
mov
push
and
insb
pop
jns
enter
and
lcall
test
cld
sbb
icebp
add
int3
or
sub
mov
adc
and
clc
inc
out
pop
arpl
ljmp
scas
je
mov
mov
jle
outsl
xadd
fildll
mov
or
add
inc
inc
dec
dec
xor
and
shll
repnz
push
xchg
add
sbb
xchg
fdivr
popa
adc
xchg
cmp
dec
add
ljmp
mov
add
dec
xchg
cmp
jo
jbe
inc
mov
loopw
sbb
out
push
jmp
sub
add
xor
out
mov
mov
negb
xchg
mov
ficompl
lock
test
ja
xchg
add
push
roll
loopne
addr16
out
cmp
add
add
es
cmp
rcrb
adc
adc
stos
addr16
pushl
pushf
add
fdivr
pop
inc
push
cmpsl
add
inc
sbb
add
or
roll
push
loop
int
jg
in
test
adc
push
loope
xor
cmp
stc
das
jmp
ss
dec
sbb
inc
cmpsl
divl
push
sbb
or
ret
lea
add
mov
stos
push
add
in
xor
fimuls
adc
jmp
add
fsubs
jnp
daa
add
xchg
popf
sbb
cltd
fcomip
loop
pop
add
xor
cmpsl
popl
jl
rcrb
inc
mov
out
pop
inc
xor
daa
mov
push
xor
inc
sbb
insb
jecxz
jae
push
jmp
sbb
mov
test
leave
ficoms
cmp
ds
cli
outsl
add
push
loope
je
imul
aaa
and
lock
fxch
add
dec
aas
adc
stos
inc
add
add
arpl
sbb
sbb
cmpsb
adc
sbb
sub
push
mov
and
stc
cmp
xchg
jge
imul
lods
les
mov
cli
call
push
outsl
or
add
or
push
cmpsb
and
dec
sub
mov
daa
cmp
sbb
xor
nop
fcmovnb
cld
dec
das
pop
jnp
mov
js
aad
stc
jecxz
aam
pop
popf
adc
xor
mov
add
les
mov
push
mull
xchg
mov
inc
jbe
adc
gs
mov
nop
and
lock
rcll
cmc
negb
xchg
add
scas
add
std
into
sti
or
sahf
add
mov
sbb
push
je
popa
mov
repz
enter
pop
or
vmwrite
sub
mov
xor
rcr
out
insl
mov
add
add
addr16
popf
inc
arpl
pusha
cmp
mov
add
jmp
int3
push
or
cmp
jp
leave
mov
push
rorb
sub
out
jmp
cmc
rcll
sbb
int
fsubs
int3
js
adc
jnp
sub
jb
rcrb
mov
inc
adc
or
out
fs
or
add
and
imul
jbe
js
lret
cwtl
in
add
and
fcoms
arpl
sbb
push
sbb
mov
ret
and
push
jno
fdivrl
push
mov
mov
add
inc
cmp
data16
add
jle
sub
pop
das
fcmovbe
int
mov
pop
mov
roll
push
rorb
adc
mov
sub
popl
push
repz
sbb
cmp
pop
lcall
roll
add
arpl
add
sarb
icebp
xchg
int3
mov
mov
je
aas
sub
imul
push
jg
add
xchg
fcomp
fiaddl
add
jne
dec
aas
stc
xor
jae
in
in
int
cmp
icebp
lock
repz
mov
inc
into
add
inc
mov
add
push
inc
fsubp
popa
add
je
inc
adc
lret
cwtl
fdivrs
xchg
sub
fidivrs
mov
push
push
and
clc
add
repz
aaa
ljmp
mov
sub
out
mov
aaa
and
inc
adc
enter
xchg
adc
push
push
xor
fstps
dec
mov
shlb
pusha
cmpsb
sub
cmp
pop
mov
imul
cltd
cld
add
push
aad
adc
adc
out
lock
xchg
and
stos
jecxz
ficoms
pop
jbe
adc
pop
add
adc
mov
or
xor
add
or
mov
addr16
mov
sbb
dec
xor
scas
outsl
pop
mov
add
sahf
out
mov
xor
mov
sbb
and
je
sub
sbb
cmp
push
cmp
jae
or
popa
movsb
add
inc
aam
pop
pop
imul
fsubrp
jno
push
adc
push
pusha
ljmp
out
cltd
add
insl
mov
iret
das
outsl
jl
sub
out
int
fstps
push
add
push
or
mov
cld
call
push
int3
add
scas
jecxz
mov
adcl
ja
sbb
daa
mov
jo
xor
divb
add
mov
sub
pop
aaa
pop
std
pop
popf
add
jmp
inc
mov
aad
cmp
movsb
mov
or
or
sub
pop
xchg
mov
mov
fisubrl
jge
add
sub
rolb
or
cmpsb
push
je
es
aas
add
jp
mov
repz
jo
stc
jbe
mov
es
arpl
pusha
popa
adc
fcompl
add
xor
pop
pcmpgtw
pop
or
xchg
mov
psrlw
in
add
pop
add
rorb
push
imul
movl
mov
out
push
xor
lret
cmp
mov
and
aaa
xor
pop
adc
add
and
movsl
insb
cmc
mov
cmp
loop
es
add
xchg
enter
add
pop
push
sbb
or
mov
xor
out
xchg
ret
push
push
pop
adc
popa
sbb
push
lret
pop
mov
cld
or
lea
push
stos
sub
shlb
out
mov
ret
add
lds
ret
lcall
add
jb
repz
lret
xor
dec
fists
sub
lea
lcall
adc
adc
pop
out
jecxz
scas
xchg
cmpsl
fildl
iret
aad
and
mov
push
add
movsl
jp
arpl
test
or
pusha
xor
test
mov
inc
fcmovne
mov
and
lahf
in
pop
dec
in
jg
sub
add
repz
sahf
subl
lds
clc
stos
inc
adc
xor
push
mov
add
or
or
add
sbb
pop
inc
std
mov
add
ficomps
or
popf
xchg
pop
cmpsb
outsb
pop
ds
nop
add
push
inc
lahf
ja
mov
jl
cbtw
cld
add
ret
jae
leave
hlt
flds
cmp
and
add
mov
cwtl
push
icebp
push
rolb
sub
jle
ficompl
aad
jg
jae
ror
faddl
jns
mov
cmpsl
pop
xor
dec
and
int
xchg
sub
pop
add
adc
cmp
or
mov
mov
pop
mov
popa
fisubl
cmp
das
outsb
sbb
dec
mov
push
ficomps
dec
push
call
roll
sti
popl
cmp
lock
and
mov
xor
push
andb
rcl
sub
call
mov
fldenv
rcll
jl
std
iret
push
js
pop
test
add
cmpsb
cmp
inc
bnd
mov
push
dec
loope
stos
jno
sbb
push
mov
sbb
sbb
movsl
push
setg
daa
jb
popf
jno
and
mov
pop
in
lret
push
jecxz
add
inc
adc
jae
pop
cmp
rolb
orb
das
jnp
ja
push
mov
inc
sub
loope
test
loopne
xchg
sbb
int
mov
adc
rorb
jecxz
add
xor
jle
add
jae
mov
rolb
loope
nop
cmc
dec
mull
or
imul
movsb
mov
das
pop
cld
loopne
cmpsl
fiadds
pop
test
add
test
mov
cmp
fidivl
fcmovbe
andl
dec
add
addr16
mov
outsb
mov
call
mov
and
push
inc
or
es
add
xor
daa
loope
mov
sbb
loop
or
jmp
mov
jg
ret
xorb
dec
add
inc
adc
push
cli
iretw
std
sbb
add
popf
and
sti
ficompl
in
cmp
jg
add
sbb
es
push
shlb
ftst
movsl
and
and
inc
ficompl
fcmovnbe
cmp
popa
into
insl
pop
add
push
and
dec
cwtl
lods
xor
cmp
outsb
jg
aam
test
sahf
mov
mov
add
jp
mov
inc
jb
push
and
test
fcmovnb
aaa
enter
aad
sarl
repz
in
or
mov
jnp
sub
dec
pop
jecxz
jno
mov
data16
bound
sub
loope
pop
pop
int3
add
mov
jge
push
mov
mov
add
jnp
ljmp
test
adc
jmp
add
dec
mov
bound
add
inc
add
sbb
sarl
or
into
cmp
cmp
jmp
xor
sti
test
sbb
bound
push
adc
add
sub
cmc
mov
mov
sub
inc
outsb
sbb
pop
adc
xlat
das
xchg
xor
push
daa
ficoms
pop
sub
jmp
cmp
outsb
cmp
fcoms
enter
fcomp
xchg
cwtl
push
mov
cs
mov
icebp
pop
sbb
pop
inc
cmpsl
sbb
popa
fdivs
pop
mov
add
inc
jecxz
mov
sbb
test
in
aad
mov
lds
push
mov
push
jg
lret
jae
cltd
fcmovb
cld
add
sub
jecxz
xchg
rolb
mov
test
add
add
push
imul
fstp
scas
lret
or
stc
dec
enter
inc
ret
dec
jae
addb
lock
shll
and
lret
in
mov
mov
sub
xchg
mov
fldenv
ret
fstpl
mov
fxch
and
out
and
std
cwtl
in
xchg
mov
fiaddl
addr16
cmp
xor
clc
xchg
mov
aaa
pop
and
and
in
cltd
cltd
mov
and
adc
inc
sbb
xor
cs
stc
hlt
lret
sbb
jp
mov
add
sahf
rolb
pop
loope
fiaddl
mov
inc
mov
stc
pushf
mov
pop
aaa
cmc
add
push
mov
add
arpl
or
sbb
lea
fs
mov
data16
cmp
sub
incb
nop
add
sbb
add
push
add
mov
lcall
pop
pop
rcll
enter
lds
jb
inc
testl
ljmp
pop
pop
lret
add
outsb
xor
push
insl
call
je
cmc
inc
ret
mov
mov
xor
mov
add
lods
mov
mov
sbb
inc
negl
push
adc
pusha
fbstp
cmp
jns
cmp
arpl
and
adc
inc
rorb
mov
cmpsl
hlt
testl
dec
or
mov
push
jno
ja
imul
stos
jl
icebp
lods
gs
add
mov
loop
add
mov
orb
repnz
mov
je
push
pop
sub
aaa
add
push
push
fpatan
xchg
cmc
add
and
add
cli
bound
add
in
sub
and
in
ds
fstps
jbe
ja
orl
icebp
and
movsl
lods
adc
cltd
adcl
shll
sbb
mov
adc
lds
in
sahf
add
frstor
mov
xor
sbb
mov
mov
daa
mov
push
test
hlt
add
loop
sbb
negl
xorl
test
sbb
and
lret
stos
bnd
shrl
mov
insl
pop
xchg
arpl
add
mov
out
icebp
xchg
xor
pop
ds
push
add
lods
testb
adc
fdivrp
mov
hlt
ffreep
call
setno
movsl
fsubrl
sbb
xor
out
cwtl
mov
jp
jp
dec
cmp
add
mov
leave
add
insb
bound
jbe
mov
push
and
jno
icebp
add
cmpsl
and
push
clc
mov
ss
js
add
or
jge
sti
shl
xchg
jp
test
enter
xlat
xchg
add
loopne
aad
add
arpl
push
adc
mov
cmp
imul
pop
gs
push
idivb
pop
cmp
std
xchg
stc
mov
jle
sub
jbe
cmp
loope
jl,pn
sbb
loop
leave
icebp
add
clc
xorl
into
cmp
sub
ss
push
or
fadds
mov
push
sti
rcrb
push
mov
sarb
nop
ja
add
mov
clc
imul
lods
jmp
or
insb
shlb
mov
lret
xlat
nop
cmp
std
cltd
jb
mov
addr16
sbb
jo
xor
ljmp
and
mov
into
out
das
xor
add
shlb
pop
mov
les
jb
stos
testl
gs
add
mov
or
jg
mov
add
fildl
sarb
int3
out
mov
in
adc
add
mov
dec
lods
leave
xchg
fimull
add
sub
or
and
in
cmp
push
imul
insl
popf
mov
in
cmpsb
pop
sbb
shll
dec
rolb
mov
mov
adc
add
roll
xchg
outsb
sbb
mov
shrb
sbb
stc
push
push
add
sbb
add
jge
test
in
mov
fstpt
xor
ret
pop
xlat
add
add
fstpt
imul
daa
cwtl
or
call
xlat
iret
inc
cmp
mov
pop
loopne
cs
and
or
xchg
and
cmp
xor
push
cmc
adc
decb
sub
add
add
out
data16
add
xchg
dec
and
cmp
add
adc
insb
cli
and
fisubs
stc
dec
clc
jg
add
sub
mov
arpl
adc
add
xchg
jg
fsubrl
adc
jb
adc
pop
mov
gs
dec
rclb
add
cmp
movsb
push
add
mov
adc
mov
sbb
lds
lods
pushf
dec
addr16
icebp
and
mov
xor
mov
add
xchg
rclb
inc
in
push
and
outsb
int3
mov
pusha
dec
pop
call
add
cmc
iret
fisttpll
sub
sbb
arpl
sbb
fwait
mov
ffree
mov
ret
add
xchg
dec
mov
push
mov
in
push
pop
xor
decb
test
stc
add
aam
repnz
add
sbb
imul
adc
int3
add
cmp
sub
xchg
out
popf
aas
jo
mov
inc
imul
lods
cmp
push
xchg
fadds
lahf
roll
ds
lods
rcl
in
and
cmp
das
mov
dec
inc
add
lods
mov
cmp
add
stos
movsl
adc
cmp
mov
enter
lret
dec
repnz
push
adc
pop
jo
and
xchg
imul
imul
test
stc
adc
ret
mov
negb
fisttpll
rcr
ljmp
xorb
lods
aas
push
dec
fsubs
pop
or
jno
and
mov
fstps
xor
adc
aas
lock
pop
bound
cmp
cmpsl
sub
loope
dec
iret
stc
ret
ret
xchg
add
add
loopne
cli
push
mov
daa
ficomps
sbb
je
jns
jo
movsl
jae
out
add
in
xchg
negb
mov
sub
push
sub
mov
adc
ja
fmuls
ret
dec
fucomp
sub
or
fmuls
or
jecxz
lds
loope
popl
dec
sub
fdivs
nop
push
mov
mov
mov
add
repnz
add
push
push
sub
or
xor
inc
push
add
push
sbb
mov
add
stos
add
jno
out
pop
inc
fsubrl
jns
mov
sbb
jp
sub
fidivrs
mov
add
add
push
add
out
inc
add
sbb
iret
push
cwtl
fsubrs
sub
and
push
cmp
pop
imul
mov
add
cwtl
add
inc
push
mov
xorb
daa
cmp
ficoml
jae
mov
arpl
addb
push
addr16
out
in
movsl
js
add
pop
mov
lea
fiaddl
add
out
push
jns
push
fimuls
or
add
mov
lds
push
sbb
sbb
addr16
fisttpl
add
nop
icebp
adc
ja
add
fdivrs
push
test
xor
mov
ret
imul
adc
sarb
add
and
cltd
jle
ret
add
insb
cwtl
add
test
enter
jge
add
fisubl
push
adc
and
dec
mov
mov
cmp
repz
add
lods
fisubl
add
dec
cltd
dec
sub
fmul
push
dec
jle
add
cltd
xor
sub
mov
inc
jno
add
sub
adc
repnz
xor
out
xor
loopne
fsubs
loope
sub
stos
add
add
cmp
and
push
sub
ss
leave
shrb
stc
loope
xor
incb
mov
add
jb
push
or
js
movsl
hlt
inc
movsl
add
xchg
cmp
xor
fimull
inc
mov
ficomps
xor
inc
mov
or
push
popa
fadd
ljmp
dec
arpl
mull
jbe
ficomps
add
sbb
loope
fiaddl
or
pop
add
adc
add
aaa
xor
and
xchg
hlt
in
daa
add
mov
and
add
outsl
cli
xor
lock
mov
jno
stc
incb
or
inc
and
in
out
pusha
adc
sbb
fcoml
sbb
xchg
mov
xor
push
outsl
call
adc
add
mov
cmp
jle
add
bound
pop
pop
cld
add
lds
cmp
sbb
pop
ret
loope
mov
and
cmc
pop
xchg
pop
xlat
ficoms
stos
addr16
or
fs
add
jge
andl
repz
arpl
push
add
pop
or
mov
add
sbb
add
aas
mov
pushf
and
jge
adc
cltd
adc
loopne
xor
inc
mov
cld
loop
jnp
cltd
xchg
roll
nop
cmpsb
lds
pop
pusha
mov
add
mov
pop
fnstsw
xchg
jo
jnp
add
cmp
movsb
cmp
adc
xchg
popa
out
cmp
inc
loop
loop
pop
das
inc
aad
test
add
push
xchg
orl
mov
push
fildl
xor
dec
fs
sbb
in
and
jp
cmpsl
or
sbb
push
jb
xchg
sbb
fsubrp
inc
repnz
mov
xchg
inc
cmp
push
fisttpll
jg
jbe
adc
outsl
sub
push
insl
add
bound
and
push
adc
push
or
pop
sub
cmpsl
add
scas
xchg
or
loopne
add
ljmp
daa
lock
and
xor
enter
imul
cmp
push
jns
pop
and
inc
fisubs
iret
jmp
sti
cmpsb
mov
xor
push
mov
cmpsl
je
adc
jbe
out
add
jecxz
jne
push
cs
inc
out
xor
and
sbb
pop
cmp
push
push
cmp
xchg
jmp
add
adc
rolb
cli
push
inc
mov
pusha
jbe
jmp
push
mov
loop
roll
inc
mov
rcl
sbbb
push
and
repnz
sbb
cmpsl
cmp
roll
cmp
aas
inc
imul
xor
push
in
pop
xchg
mov
dec
add
inc
fwait
or
sti
push
and
lret
je
push
aaa
lcall
inc
scas
in
loop
xlat
pop
mov
xchg
jle
mov
push
mov
in
imul
xchg
scas
fisttps
mov
jae
lret
xor
jg
cmpsl
popfw
adc
fistpll
add
shll
pop
out
xor
repnz
xlat
add
sbb
sbb
shlb
jecxz
jmp
popf
add
cmpsl
xor
jecxz
mov
addr16
and
lahf
and
test
loopne
imul
cmp
inc
push
xor
out
add
inc
xor
fisubrl
data16
cltd
dec
push
or
addb
mov
cltd
push
out
dec
add
jae
mov
lods
les
je
mov
movsl
stc
and
fimull
ja
sbb
sahf
mov
push
out
sbb
std
pop
cmc
scas
add
in
fisttpl
push
xor
ss
jb
cmpsl
add
adc
xchg
push
inc
push
and
adc
hlt
xchg
adc
inc
mov
add
inc
mov
fs
mov
pop
shl
outsb
fsub
mov
mov
adcb
pop
mov
cmp
cltd
sbb
es
mov
or
lcall
outsb
push
cmpsl
sub
inc
inc
cmp
nop
mov
push
orl
add
xchg
aam
cmp
push
test
shrl
jae
int3
or
sub
pop
loopne
inc
fwait
movsl
fimull
jp
adc
fcoml
jae
ds
nop
ja
add
jg
pop
add
lock
addr16
sahf
jae
pusha
add
mov
or
jp
addb
and
bound
jae
pop
sub
sub
xchg
cmp
push
shrb
pop
scas
mov
add
mov
enter
inc
mov
popf
adc
iret
shlb
adc
in
mov
test
in
push
push
fsub
ljmp
xor
sbb
add
je
xchg
test
jecxz
and
mov
or
call
jl
repnz
cltd
mov
dec
nop
cmp
rcrb
push
add
xchg
stc
mov
fdivp
aaa
add
or
imul
pop
sarl
scas
cmp
add
cmp
out
lret
fisubl
icebp
adc
in
sub
ljmp
xchg
inc
mov
into
outsb
xchg
dec
enter
sbb
mov
clc
xchg
mov
mov
jge
subb
inc
push
sub
add
xchg
jae
bnd
sbb
add
aas
int
nop
xor
push
out
xor
xchg
xchg
add
lds
daa
push
movsb
fildl
inc
scas
pop
cmpsb
addr16
xchg
mov
insl
or
jbe
imul
adc
repz
adcl
sbb
and
jnp
adc
or
in
sbbb
or
sbb
add
sbb
xchg
jae
dec
lock
shlb
repnz
mov
das
popa
add
fidivs
outsb
mov
push
js
jbe
sbb
or
adc
out
jnp
dec
xlat
pop
fildl
dec
fcmovu
jge
dec
or
js
fldt
dec
mov
pop
fimuls
test
fidivl
into
or
adc
add
or
jp
test
fs
jl
icebp
xchg
jbe
xchg
call
pop
pushf
xchg
arpl
add
push
dec
ret
jg
xchg
sub
fsubp
jno
xor
test
fidivs
arpl
dec
jns
mov
call
int3
mov
jecxz
mov
push
jp
sbb
es
call
mov
mov
shll
adc
leave
pop
dec
insb
xchg
xor
subb
xlat
sbb
incl
push
and
ror
repz
fidivl
jne
xchg
lcall
roll
pop
clc
jecxz
jae
adc
ror
or
add
imul
insl
int
out
sbb
pop
inc
mov
hlt
pushf
loopne
xor
mov
inc
rcl
xchg
jno
pop
mov
dec
loope
stc
add
add
dec
cvttps2pi
adc
adc
lcall
pop
into
pop
xor
push
adc
add
and
cmp
pop
cs
insb
add
mov
adc
pop
xchg
and
fsubrs
dec
inc
pop
ja
test
decb
add
adc
mov
rcr
mov
sbb
jbe
fcmovnbe
and
decl
push
imul
sub
je
and
cmp
xor
mov
adc
add
push
stos
add
xlat
arpl
out
or
popf
movsb
divl
pop
mov
cmc
shlb
inc
loope
pop
lock
sbb
jg
lods
pop
bound
push
jbe
fadds
mov
andb
hlt
fiadds
push
outsl
jge
jo
add
add
xor
push
or
loop
hlt
ret
push
sub
mov
inc
jp
jmp
int
add
idiv
fidivrs
xchg
sbb
push
pop
fs
xor
jmp
testl
add
fidivrl
outsl
sbb
jmp
mov
add
outsb
xor
sub
mov
push
push
add
aam
and
sbb
adc
scas
sbbb
and
cmpb
push
jns
cmpsb
mov
add
mov
sub
dec
outsb
push
cmp
xor
arpl
mov
icebp
add
in
mov
pop
aam
add
nop
mov
fiadds
arpl
or
jbe
es
mov
add
jns
rolb
repz
xchg
mov
add
and
xchg
stos
mov
faddp
pop
sub
mov
pop
add
int
add
fdivr
push
fsubs
iret
add
std
fnstsw
sub
mov
sahf
in
int3
rcll
inc
xlat
xor
cmpsl
fdivrs
lds
int
add
dec
push
pop
dec
daa
add
rcr
add
adc
jmp
mov
mov
xor
push
fdivrs
cmp
xchg
push
cmc
add
pusha
idivb
add
filds
sub
push
xor
add
fsub
xchg
dec
mov
aam
loop
jnp
pusha
pop
pop
xchg
add
leave
call
pop
fsubr
cmp
inc
xchg
push
sub
fimull
add
hlt
into
inc
mov
mov
scas
stos
aad
imul
bound
fisubrl
pushf
pop
leave
pop
dec
sahf
notb
nop
scas
jecxz
push
iret
pop
inc
in
add
outsb
repnz
push
mov
and
ljmp
mov
fisubs
bound
gs
add
je
inc
loopne
xlat
xlat
negb
cmpsl
scas
movb
pop
filds
add
sbb
add
xor
push
lret
push
mov
cs
sahf
adc
cmp
mov
inc
add
mov
popa
inc
shll
cld
andb
add
mov
iret
aaa
push
mov
arpl
in
push
addl
mov
repnz
jns
dec
hlt
pop
das
cmp
jecxz
out
jle
fadds
mov
sbb
mov
add
repnz
lock
cmpsl
add
or
cmp
mov
cmp
das
sub
pop
add
mov
outsb
push
in
dec
in
add
test
sbb
sahf
aas
add
pusha
incl
xchg
ds
xchg
roll
xor
fwait
add
pop
daa
xor
pop
or
sub
lods
adc
scas
xchg
sbbw
outsl
int
xchg
add
movsb
push
pop
adc
xchg
add
cwtl
push
inc
xchg
aas
mov
jb
lahf
push
pop
stos
push
xchg
xchg
fisttpll
or
dec
idivl
add
push
mov
mov
std
lahf
adc
cli
sbb
cld
shrl
and
push
inc
in
xchg
gs
cltd
arpl
ficoml
push
or
xor
adc
in
push
lods
gs
jmp
sbb
add
mov
adc
mov
pop
repnz
add
xor
pop
andl
and
rolb
mov
push
fidivs
jl
push
enter
daa
adc
add
iret
test
jns
adc
add
fwait
sti
ds
pop
ret
in
pop
mov
fstps
cltd
bound
cli
rcr
dec
jns
repz
test
int
jb
loope
xlat
insl
pop
adc
out
inc
int3
and
fdivp
std
inc
scas
jmp
and
mov
xchg
popa
add
sbb
add
pop
dec
leave
ficomps
mov
test
imul
sub
push
push
and
add
cmpsb
jns
add
push
sbb
dec
add
add
sbbb
adc
add
mov
add
push
jp
stos
cmpsl
mov
add
std
es
add
adc
jo
rorb
and
mov
cmp
test
add
stc
add
sbb
and
stos
and
add
pop
enter
data16
push
test
xor
pop
xor
out
outsb
cmp
or
mov
cli
jae
ret
add
pop
sbb
inc
cmp
xor
outsb
roll
stos
push
in
cmp
xor
adcb
subb
add
leave
or
add
call
mov
lea
aaa
in
lret
repnz
int
ret
scas
mov
sub
mov
lahf
cld
repz
arpl
xchg
add
xchg
jbe
jae
inc
repnz
inc
or
adc
add
xor
add
inc
adc
xor
mov
in
xlat
les
cld
sbb
sub
jmp
mov
daa
lcall
loop
xchg
mov
add
mov
mov
pop
and
ret
fcoml
add
mov
sbb
xchg
mov
fstps
xor
jne
aad
arpl
add
adc
push
add
jp
cmp
es
xor
mov
xor
mov
sbb
jmp
add
int
cmp
pushf
adc
movl
add
fmull
inc
addb
or
fdivrs
mov
scas
js
cli
daa
push
mov
sbb
mov
inc
adc
adc
jo
out
es
fwait
lea
lods
and
mov
fidivl
cmpsl
cli
into
xor
add
push
inc
ret
add
ljmp
lods
lret
dec
cs
sbb
leave
xor
call
pop
dec
pop
int
push
bnd
add
cmp
sbb
add
cmp
push
jne
fildl
pushf
repnz
outsl
add
add
push
mov
cltd
jno
fiaddl
cmp
push
jmp
popa
mov
or
cmp
stos
push
xchg
add
lods
add
lea
test
out
loop
pop
cmp
cmc
add
rcl
mov
add
aaa
lret
jecxz
adc
add
jge
lcall
add
cltd
dec
lods
icebp
adc
jge
xchg
dec
enter
cmc
pop
fbld
scas
sub
ffreep
mov
pop
fstpt
inc
sbb
test
push
jb
add
push
sbb
jbe
inc
and
out
stos
sahf
mov
xchg
jno
mov
inc
mov
ret
mov
xor
jbe
rol
add
xor
repz
lea
jmp
fstp
cld
mov
push
fisubrs
xchg
cmp
pop
repnz
call
loope
and
fcompl
scas
jbe
stc
cs
mov
sub
fidivrs
adc
test
outsb
stos
cmp
ficompl
loope
pushf
lods
xor
add
xchg
rcrb
fwait
not
or
in
xlat
jnp
fistps
add
je
and
push
jae
add
add
js
add
or
repz
icebp
pushf
aad
sbb
sbb
and
cmp
imul
add
pop
and
mov
and
adc
push
outsl
pop
push
jne
pop
xchg
xlat
and
add
xor
outsb
jbe
add
lods
xor
leave
jecxz
sbb
dec
ds
xor
xchg
lret
dec
pop
jnp
cmp
push
xchg
fcmovbe
sub
adc
adc
push
rolb
lods
xchg
pop
mov
fiadds
sbb
out
cmp
pop
hlt
into
push
cmp
idivb
loop
ficomps
sub
or
fcomps
jge
and
out
mov
mov
xlat
or
adcb
clc
xor
ret
adc
push
loop
cmp
fisubrl
mov
jbe
pop
and
jb
add
subl
cmpsl
add
mov
dec
push
sub
dec
cmp
lcall
xlat
add
sbb
hlt
add
insl
shlb
rolb
or
dec
insb
jmp
les
mov
mov
sbb
das
lods
add
mov
cmc
or
into
les
shlb
das
pop
xor
insl
in
aam
mov
out
lcall
dec
inc
imul
sub
jmp
lods
insb
add
mov
push
add
adc
adc
push
ficoml
xchg
xchg
add
and
and
xchg
in
insl
fcompl
xor
push
shl
orb
sbb
adcl
jge
or
dec
jb
inc
jae
mov
cmc
enter
into
jge
fmuls
pop
mov
xor
xor
mov
xor
sbb
add
push
adc
push
stos
ds
push
arpl
push
mov
jno
cmpsb
fists
sbb
fldt
js
out
pop
dec
jns
ret
loop
mov
shlb
call
sbb
std
dec
jae
push
adc
stc
mov
addr16
mov
mov
dec
fistpl
test
int3
add
imul
sbb
cld
or
dec
outsb
adc
negl
fidivrs
cmpsb
inc
jle
fsubl
leave
call
mov
xor
xchg
jb
xchg
sar
dec
mov
jno
xor
pushf
loop
repnz
movsl
leave
jo
mov
mov
rcrb
mov
shlb
or
rcr
xchg
add
add
inc
or
and
iret
sub
fdiv
out
cmp
cld
test
sub
sub
loopne
cmp
cmpsb
pop
mov
cmc
test
movsb
leave
lahf
imul
add
pusha
das
cmp
or
sbb
inc
sbb
pop
cmpsb
add
vpaddb
repnz
inc
ja
call
dec
or
shrb
cwtl
cmp
mov
xlat
sbb
push
fnsave
lock
and
data16
dec
out
mov
push
loopne
cmc
cltd
xlat
mov
sbb
outsb
cwtl
test
rcrl
lret
pop
add
mov
cmpsl
test
or
pushf
rcrl
fdivl
pop
popf
inc
ret
inc
sbb
push
in
jecxz
add
jnp
dec
das
dec
add
dec
lds
daa
pop
leave
shrb
shll
push
add
ja
lahf
in
add
fisubs
sbb
inc
add
cmpsl
pop
hlt
icebp
repnz
nop
sahf
push
subb
sub
push
or
sbb
jae
jmp
mov
gs
xor
adc
popl
push
repz
daa
and
and
push
mov
les
xor
fadds
jge
mov
xlat
sub
in
add
cmpsl
adc
jl
jbe
inc
push
mov
push
stos
mov
push
stos
inc
or
fcoms
pop
pop
xchg
aad
rcr
fwait
xlat
jb
jmp
ficompl
aad
mov
stc
inc
adc
sbb
mov
mov
or
lcall
shlb
cld
mov
jmp
mov
xchg
in
jo
popa
inc
loope
frstor
jmp
aam
pop
inc
inc
lret
in
arpl
jmp
jecxz
mov
cmp
pop
push
mov
loopne
mov
pop
cmc
das
repz
mov
js
push
jge
fsubs
fidivs
test
addr16
jecxz
cld
dec
pop
mov
sbb
jmp
cmpsb
cmpb
dec
in
and
in
fnstsw
add
xchg
lcall
xor
bound
xor
mov
mov
add
lock
das
cmp
fimull
add
mov
xor
out
pop
mov
add
data16
add
pop
lahf
xlat
mov
fsubrl
pop
xor
mov
sahf
sbb
mov
test
nop
cmp
adc
mov
mov
mov
sub
and
mov
cmp
add
push
and
call
push
clc
mov
cmpsb
fcomps
sub
add
and
inc
jbe
xchg
fiadds
xorb
xor
xlat
or
std
pushf
insb
push
add
adc
gs
sub
inc
out
xor
add
jns
push
int
cmp
mov
and
sti
and
mov
cmp
jbe
mov
add
adc
mov
mov
pop
je
and
push
stos
and
stos
cmp
testl
daa
cmp
popf
cmpsl
popa
jne
pop
cmpsb
incb
push
and
xor
add
mov
add
push
push
push
out
and
in
add
pop
das
loope
mov
jnp
xor
ss
sub
cmp
cmpsb
cmp
xchg
jns
clc
pop
add
out
data16
movsl
sub
nop
mov
mov
bound
loop
xor
or
jb
test
out
cmp
mov
or
sub
cmp
loope
cltd
dec
cmp
out
sbb
insb
and
jge
add
outsb
jb
lds
outsl
ficompl
pop
or
push
nop
add
fildll
jp
aas
or
mov
xchg
sbb
mov
mov
mov
push
xchg
adc
addr16
daa
push
ja
sbb
dec
sub
cltd
out
call
sub
lea
mov
mov
ds
cmp
addr16
xlat
or
push
xlat
mov
andl
data16
and
lcall
add
xor
ficomps
mov
add
jg
push
pushf
lcall
or
dec
aaa
fisubl
or
jle
jle
jmp
sarb
adc
xchg
xor
add
lret
jp
add
adc
add
mov
jns
int
mov
xchg
sbb
xlat
stc
or
out
add
push
adc
mov
ss
shlb
xor
or
mov
sbb
ficoms
adc
xchg
push
enter
cmpsb
mov
xlat
sbb
mov
inc
ss
mov
and
ret
or
cmpxchg
add
pushf
adc
mov
into
enter
add
lea
cmp
inc
pop
ljmp
add
jno
jle
mov
into
xchg
repnz
fistps
pop
test
loope
enter
aaa
das
mov
inc
or
jbe
negl
in
test
mov
xchg
les
hlt
rep
call
sbb
xchg
cli
mov
sub
lret
iret
addl
ljmp
and
pop
mov
inc
cmp
rol
adc
pop
cmc
add
enter
push
or
pop
ret
insb
mov
sti
pop
jle
or
shll
mov
add
adc
cmc
stos
fcomps
lods
add
dec
xchg
loopne
and
fcoms
call
mov
int
movsl
int
insl
add
fldln2
mov
cmpsl
stos
pushf
jb
xor
cmp
loop
push
sub
test
clc
loope
daa
push
add
jp
enter
add
cmc
cld
and
xchg
mov
jecxz
adc
pop
into
fsubs
fidivs
cmp
push
lods
ds
inc
mov
flds
sbb
scas
lods
dec
jnp
movsb
mov
lock
mov
push
mov
sub
xorl
add
in
mov
loope
imulb
jl
xchg
ss
adc
incb
ds
loop
stos
jb
add
adc
std
and
pop
jne
sub
adc
add
loopne
scas
xor
cmp
sub
xor
jecxz
mov
icebp
add
and
sarl
rorb
jno
cld
cmp
fidivs
out
inc
pop
in
jbe
or
dec
rorl
or
mov
jne
lret
je
add
and
popa
add
inc
mov
cmp
je
xlat
aam
lods
out
stos
cltd
in
cwtl
mov
jmp
pop
mov
in
ror
and
fcomps
and
mov
push
mov
loop
jle
hlt
int3
mov
inc
in
pop
add
and
in
sub
imul
mov
push
aam
sub
mov
inc
add
ss
mov
es
in
cwtl
adc
shlb
xchg
sbb
fisubrs
add
adc
test
cmc
repnz
test
icebp
adc
shrb
ljmp
or
adc
add
rorl
mov
xchg
mov
addr16
jns
pop
add
push
and
xor
es
loope
add
cmp
movsl
or
clc
inc
pop
outsl
add
shl
stos
inc
sub
loop
add
jb
mov
mov
mov
movsb
sub
and
mov
mov
add
mov
out
out
xchg
xor
les
cmp
push
push
add
push
mov
add
mov
mov
add
test
in
iret
add
loope
or
shll
pushf
cmpsl
or
ret
and
cmp
sbb
popa
movsb
pop
addl
les
sub
es
incb
out
mov
cmp
pop
and
add
ja
arpl
cmp
xor
inc
insl
lods
mov
jae
cmp
cmp
cmpsl
cmpsl
mov
adcl
xchg
xor
pop
loop
ss
xor
sub
pop
addl
pop
daa
je
movsl
clc
add
mov
ljmp
xchg
xchg
jnp
loop
cmp
adc
add
xor
inc
add
into
cmp
fstl
sub
int
adc
mov
inc
add
xlat
mov
cmp
xor
jp
aam
mov
shrl
orl
shl
push
call
add
out
cltd
cmpsb
adc
in
nop
aaa
pop
ss
add
or
xchg
xchg
fld
inc
es
mov
add
jge
sahf
orl
in
mov
add
mov
sti
jmp
add
mov
push
movsl
test
xor
stc
xor
nop
dec
sub
popl
sub
push
loope
jne
jmp
inc
xchg
out
pop
mov
insl
cmpsb
jbe
ret
xor
mov
xor
push
test
sub
push
add
out
in
scas
les
adc
mov
outsl
add
inc
iret
es
sar
je
inc
add
adc
fsub
mov
mov
dec
cmpsb
outsl
insb
add
fnstsw
add
jbe
movsb
es
das
sbb
mov
stos
jle
jae
and
daa
mov
jmp
fcompp
test
adc
push
imul
cmp
xorl
and
xor
ficoml
pop
sbb
cmp
xchg
sbb
jb
pusha
dec
rcll
sub
int
adc
mov
jmp
and
mov
and
ret
push
or
xchg
push
icebp
sti
rolb
or
adc
mov
jge
icebp
cli
movsl
nop
dec
cmp
clc
fisubl
ljmp
and
cmp
ret
movsl
and
lret
add
rorb
jo
lds
mov
add
cmpsl
ss
jae
push
fs
sub
fscale
sub
imul
fidivs
arpl
jp
jle
pop
xor
cmp
cld
lods
in
dec
out
add
jmp
ja
and
outsb
stc
mov
add
push
jb
cmp
pop
stos
add
psubusb
xchg
scas
mov
jae
stc
subl
imul
mov
add
out
pop
sub
jle
push
mov
mov
fidivrs
cs
dec
jns
jge
jbe
jmp
stc
roll
xchg
arpl
fidivrl
cmp
jnp
and
insb
add
xchg
xchg
ss
cs
and
mov
xor
cmp
pop
sbb
xor
pop
mov
dec
inc
ficomps
inc
add
popa
outsl
push
les
loopne
jp
mov
nop
jns
ficoms
mov
jo
lods
add
pop
pop
or
pop
mov
daa
adcb
xchg
and
enter
sarl
push
xor
lds
cmp
pop
ljmp
ret
mov
dec
mov
sub
and
aaa
in
out
rcr
dec
mov
mov
and
fs
test
or
fdivrl
insb
in
sbb
out
add
pop
ds
das
push
mov
xor
add
xchg
mov
jne
sbb
rcrl
jbe
shll
mov
push
or
insb
mov
fisubl
ret
or
jno
lods
mov
xor
repnz
adc
mov
mov
mov
jae
pop
mov
idivb
jmp
mov
imul
dec
out
lods
pop
imul
cmp
rorb
push
cmp
scas
imul
mov
xor
lds
aaa
std
jne
push
shlb
popa
scas
daa
add
roll
into
jae
pusha
add
shlb
movsb
pushf
xchg
adc
lea
negb
xorb
and
push
leave
bound
pop
lds
xor
lods
add
mov
push
je
add
push
out
into
aam
lret
add
inc
scas
dec
je
lods
aaa
fmulp
xchg
push
sbb
mov
icebp
adc
lcall
pop
pushf
in
cmpb
stos
mov
insl
or
cmpsb
sub
jbe
cmpsb
mov
fs
jmp
xor
movsb
inc
fidivrs
cmc
pop
mov
inc
flds
cmp
mov
rcl
sbb
add
orb
clc
jecxz
add
mov
jne
cmpsl
lock
jnp
fbstp
jo
movsl
test
cmpsb
or
lea
sub
aas
les
out
add
or
sbb
daa
sbb
jge
add
jb
xchg
clc
inc
rcl
add
xchg
mov
mov
shl
fcmovne
pop
mov
cmp
pop
push
and
imul
push
insb
jnp
sbb
data16
xor
pop
mov
adcb
pop
mov
sub
rolb
mov
mov
cmp
adc
icebp
and
cli
loopne
les
scas
in
and
leave
jecxz
and
adc
add
jne
adc
testb
xor
outsl
data16
adc
enter
xor
add
ret
adc
arpl
loop
add
or
sbb
pop
lret
and
add
sub
test
out
sub
pop
mov
mov
and
sahf
or
mov
dec
add
mov
mov
push
or
and
test
cmp
fmul
faddp
xchg
scas
out
cmp
push
stos
xor
jle
clc
mov
jecxz
sbb
sbb
insl
add
mov
mov
mov
mov
or
iret
cmp
mov
movsl
cmpsl
icebp
add
add
cld
push
add
jnp
mov
push
sbb
imul
push
fdivl
sub
cwtl
stos
xor
and
cmpsb
inc
and
movsb
push
fimull
lahf
inc
mov
jbe
fimull
fcomps
pusha
mov
sub
add
jg
push
lods
mov
enter
pop
dec
mov
out
repnz
nop
ret
mov
xor
aas
aad
add
lahf
inc
and
pop
or
sbb
push
add
mov
cmc
lret
push
xchg
push
sbb
repz
aaa
pop
xor
jecxz
pop
outsb
cs
and
orb
jp
pop
adc
arpl
and
in
adc
add
pop
jne
jmp
adc
movsb
pusha
xchg
inc
loop
pop
aas
push
cltd
addr16
sahf
mov
add
lret
leave
mov
mov
mov
insb
adc
xchg
fildl
repnz
cld
adc
sub
pop
dec
and
add
cmpsb
lods
loopne
fidivrl
movsl
inc
adc
dec
fwait
xchg
arpl
popa
jo
push
jbe
repnz
jmp
fdiv
popf
inc
sbb
inc
sbb
fcomps
sbb
add
adc
ja
dec
psrad
lock
mov
mov
mov
dec
pop
xor
add
jb
jl
add
in
stos
push
jnp
mov
add
cmpsb
into
hlt
shrl
pop
jl
daa
jno
sbb
add
inc
sub
fcoms
add
stos
adc
jb
jo
std
mov
mov
push
jne
rcll
mov
adc
push
dec
pop
xor
dec
jp
es
fidivrl
cmp
sbb
sbb
daa
sbb
sbb
inc
add
nop
push
enter
addb
sbb
xor
push
lcall
add
sub
sub
mov
xor
mov
add
xchg
mov
mov
xchg
add
out
sub
outsl
stos
sub
das
pop
xor
fnsave
adc
andb
fidivs
xchg
push
or
sub
sbb
xor
leave
jae
imul
or
jle
movsl
cwtl
lods
cmc
mov
sub
cltd
inc
scas
jns
push
repz
add
sub
jb
jae
fiadds
jg
xor
mov
mov
dec
test
add
add
insl
xlat
bound
stc
icebp
sbb
into
fadd
shrb
mov
mov
jp
das
movsl
and
jle
xlat
cltd
js
mov
push
iret
xlat
inc
lock
mov
jmp
add
je
mov
loopne
cmp
lock
push
fiaddl
rclb
push
mov
repnz
pop
mov
out
pop
add
or
fdivrl
sbb
sbb
mov
mov
add
adc
add
sub
mov
cmp
cmpsb
cmp
or
pop
adc
dec
cltd
cmp
inc
add
cwtl
adc
std
add
add
rclb
add
cmpsb
pop
jo
cmp
test
fisttps
adc
movb
inc
cmp
add
add
pushaw
cmpsb
sbb
inc
fdivs
sub
adc
mov
inc
imul
std
leave
push
ja
in
cwtl
add
bound
fadds
popw
xor
pop
sbb
cli
popa
movsb
call
pop
mov
fildl
push
fiadds
jecxz
and
sub
mov
loop
stos
push
outsl
mov
sub
add
xchg
and
sti
mov
nop
subb
jb
pop
dec
sbb
mov
daa
mov
sub
cld
push
mov
push
jns
imul
xchg
mov
add
add
push
add
add
inc
add
inc
add
add
add
dec
add
push
jno
jne
add
add
pop
add
push
add
imul
ja
popa
dec
insb
add
dec
add
xor
jo
add
bound
dec
fs
imul
jne
add
dec
pop
add
add
inc
inc
add
dec
add
add
inc
add
dec
add
inc
add
add
add
add
outsl
add
add
add
add
dec
jo
jno
add
inc
add
jns
add
inc
add
add
add
dec
add
dec
add
add
add
add
outsb
ja
popa
xor
inc
inc
ja
jb
add
dec
add
add
data16
pop
add
push
push
add
add
dec
push
dec
add
add
add
ss
add
add
dec
add
add
add
inc
add
add
aaa
xor
add
add
add
add
push
add
add
add
inc
add
add
ja
add
arpl
push
add
add
add
popa
dec
push
outsl
add
pop
jne
add
pop
add
add
add
add
add
dec
add
add
jp
add
add
jb
xor
add
js
add
add
add
xor
add
jne
add
add
ja
add
add
add
add
add
inc
add
add
xor
jno
add
inc
add
xor
add
add
ja
xor
add
push
add
pop
inc
push
add
addr16
add
insb
inc
add
jo
add
add
add
add
add
add
jp
jb
xor
add
add
insb
dec
push
add
add
jbe
jp
push
add
jns
dec
cmp
add
add
add
add
pop
add
add
add
add
jne
add
add
add
arpl
add
inc
add
push
cmp
arpl
pop
add
fs
insb
dec
dec
add
add
xchg
jl
cmpsb
inc
mov
push
adc
sahf
push
jge
or
push
add
dec
fldt
push
sbb
repnz
sbb
incb
jmp
dec
jnp
testb
add
mov
out
ret
shlb
inc
mov
inc
cmpsb
pop
pop
xchg
xchg
fiadds
inc
sbb
sbb
out
lret
add
popa
xchg
cmp
movsl
sub
jmp
cltd
mov
adc
add
test
sarb
cld
loopne
xchg
shlb
jns
rcl
jp
add
xlat
addb
sbb
shlb
cmp
mov
daa
nop
push
or
mov
inc
sub
lock
pop
aam
dec
aaa
mov
aas
test
in
repz
push
xchg
pop
movsb
push
dec
mov
lret
mov
out
adc
xor
aaa
es
mov
or
pop
shll
sbb
out
jle
mov
loope
loopne
das
xchg
stos
insw
xlat
aaa
cmpsl
clc
rol
jae
pop
mov
vmovupd
dec
mov
popa
inc
imul
push
sub
add
jp
loopne
cmp
shlb
add
push
push
loopne
push
add
sub
aad
dec
cmpl
repnz
fsubs
addr16
sbb
sbb
xchg
inc
sahf
scas
jno
sbb
loopne
adc
dec
pop
sbb
cltd
out
andb
mov
xor
sahf
dec
add
add
notl
movsb
add
push
imul
xlat
xchg
inc
stos
sbb
cmc
fstps
test
jmp
rcr
push
pop
xchg
push
dec
jno
sarb
call
fdivs
fcmovbe
adc
mov
sbb
lret
pusha
loopne
pop
push
movl
repz
jmp
add
out
and
xlat
push
js
mov
pop
mov
push
loop
jge
cmp
rcrl
dec
and
insb
xor
repnz
xor
ficoms
xlat
dec
fdiv
loope
jns
cmpsb
shrl
fsubl
ljmp
adc
lea
mov
divl
cmp
add
jge
popa
je
pushf
xchg
mov
jle
daa
add
inc
add
mov
jno
mov
das
jp
loope
xor
clc
jnp
or
cmp
ss
add
xlat
jl
pop
std
fiadds
cli
jno
adc
push
add
lock
rcrb
adc
add
out
negl
and
mov
mov
mov
cs
lret
xchg
sbb
add
lahf
dec
popf
jl
mov
xor
mov
xor
mov
jnp
cld
aam
mov
jno
ret
in
andb
jb
out
cmp
jge
push
imul
inc
pusha
in
cmp
ror
jae
in
jb
repz
cmp
test
add
xor
aas
out
loopne
aaa
flds
pop
cmpsb
popa
push
aad
out
outsl
mov
fmuls
test
pusha
scas
iret
xchg
mov
push
imul
sub
push
jl
adc
sbb
push
mov
cltd
dec
es
popf
or
adc
movsl
sbb
mov
mov
xor
aas
shlb
mov
frstor
adc
dec
inc
roll
sub
stos
mov
adc
add
inc
dec
mov
outsl
into
lods
scas
dec
add
pop
aad
fists
fs
dec
jp
mov
fidivrs
test
outsb
cmp
into
push
add
dec
push
iret
xor
fidivl
mov
shlb
movl
cmpsl
add
jno
cmp
sbb
sub
shrl
inc
add
inc
xorl
lock
nop
fimull
mov
jmp
pop
bound
jg
jmp
pop
push
fcmovbe
dec
test
lds
xor
loopne
or
push
nop
jae
sub
and
movsl
mov
shrl
jae
mov
mov
das
mov
push
ficomps
fimull
lret
inc
cmpsb
test
add
adc
repz
dec
mov
loopne
mov
rorb
test
add
dec
mov
xor
aas
lock
pusha
and
push
add
iret
cmp
add
dec
cs
movsl
adc
repnz
ficompl
or
sbb
sbb
jmp
out
add
cmpsl
lcall
movsl
dec
addl
lock
inc
add
dec
jle
push
adc
push
xchg
or
adcl
fildl
repnz
xlat
test
mov
add
ja
inc
daa
and
and
imul
pop
cltd
fimuls
aad
sbb
jg
mov
jp
add
and
loope
inc
pop
test
test
sbb
add
mov
movl
dec
push
mov
andb
xchg
popa
dec
rcl
jne
sbb
add
jg
test
add
das
or
ret
inc
leave
xchg
daa
xor
subl
shlb
out
sub
push
movsl
xchg
jge
rcrl
push
add
push
add
dec
xlat
pop
sti
mov
idivl
xor
arpl
mov
push
mov
insl
mov
loope
adc
out
roll
dec
jbe
jnp
repz
std
popa
jl
mov
and
cmpsb
ss
pop
shlb
mov
push
mov
jnp
jle
cmp
bound
pop
lret
add
pop
rolb
js
mov
adc
and
arpl
std
pop
repz
xor
xchg
xor
jl
test
aaa
lret
add
cmp
js
mov
sahf
cld
xor
fcmovbe
xchg
mov
pop
cmp
or
or
and
mov
hlt
lret
dec
pop
lea
adc
dec
add
cmp
xor
mov
lds
jp
sbb
cmc
shr
inc
je
or
repnz
adc
pop
jae
mov
js
dec
loope
jp
xor
xchg
insl
push
mov
pop
les
rol
sbb
dec
inc
mov
adc
lret
jb
jle
cmp
mov
and
ficompl
bound
fidivl
mov
push
cmpsb
les
cld
stos
xlat
sub
popa
jne
push
test
and
xlat
and
pop
fnstenv
rclb
mov
divb
mov
mov
arpl
and
sbb
mov
lods
inc
xchg
pcmpgtw
and
mov
xor
jne
sahf
push
and
push
xorb
adc
scas
jecxz
sub
roll
adc
inc
call
test
add
std
loope
sbb
add
ja
push
jp
add
xor
shrl
imul
or
aas
test
xor
aaa
cmp
push
xor
cmc
cmp
cmpsl
jns
adc
adc
and
rcl
outsl
sbb
push
cmp
cmp
add
or
xor
add
add
cmp
dec
lcall
xor
rclb
fs
sarb
and
add
push
xor
vunpcklps
into
sbb
pop
mov
add
add
fidivl
xor
xor
push
ss
sbb
sub
push
arpl
adc
lahf
cmp
pop
cmp
cmp
lret
cmpsb
or
add
pushl
scas
xor
lret
xor
xchg
jns
jb
xor
cmpsl
add
xchg
push
mov
mull
adc
in
out
es
mov
mov
mov
sub
movsl
pop
mov
notl
or
adc
ret
push
pusha
faddp
dec
data16
icebp
and
cmp
sarb
je
addl
bound
and
imull
dec
push
fisubrs
mov
ds
jl
add
ret
dec
in
insb
adc
push
adc
fcomps
dec
repz
lods
aaa
sbb
cmp
mov
pop
xchg
rcrl
sbb
add
add
xchg
sub
add
das
adc
mov
cmp
fistpll
or
lea
sub
mov
shll
add
arpl
jp
cmp
adc
and
add
enter
adc
movsb
jne
xor
rorl
xor
pop
aas
movl
daa
js
sub
pop
push
add
xchg
add
aad
out
jl
cmp
movsb
loopne
jns
cs
fnstenv
pusha
lds
ret
pop
pop
nop
test
or
lock
and
cmp
dec
in
jb
lock
adc
inc
mov
xor
adc
cmp
ja
leave
sbb
shrl
cmc
push
lods
add
sbb
in
pop
xlat
aaa
cmpsb
inc
cmp
pusha
mov
and
jle
adc
adc
in
std
push
sbb
arpl
aaa
mov
js
and
add
push
inc
pop
adc
in
push
outsl
jp
pop
addb
or
pop
cmpsb
aas
js
and
iret
pusha
rol
push
loope
inc
sbb
jp
sysexit
loop
xor
icebp
add
dec
cmp
cmp
and
loope
sbb
sbb
add
sbb
movups
xor
test
js
cmp
cs
daa
movsl
and
jne
dec
adc
jl
lock
adc
lods
icebp
sub
and
pop
pop
arpl
test
repnz
cs
pop
imul
cmc
inc
xor
mov
sub
cmp
jo
jmp
adc
and
add
es
pop
xchg
jbe
or
aas
lret
popa
icebp
add
cmp
and
das
cs
mov
add
mov
pusha
or
push
or
xor
pop
xor
adc
rcrl
mov
adc
pop
xchg
rolb
hlt
jns
es
add
notl
imul
sub
js
cmp
lret
pop
inc
sbb
or
or
dec
sub
cmp
jb
mov
call
hlt
gs
enter
or
mov
fdivs
outsl
je
cmp
push
and
fisubrl
xchg
cmpsb
adc
std
sbb
pop
jae
dec
or
inc
cmc
cmp
xchg
sub
ficoms
dec
adc
jmp
flds
loopne
or
str
and
loop
jns
and
sbb
adc
adc
xor
into
add
xchg
je
or
add
pop
jne
add
xchg
xor
xchg
inc
ds
and
xchg
cmpsb
cs
fcoms
inc
sbb
scas
or
mov
aaa
push
sub
inc
sti
add
mov
push
xor
jle
addb
sub
lret
adc
ficomps
cmp
pop
xchg
sbb
aad
jle
push
test
cmc
pop
cmp
add
mov
cmp
dec
sbb
mov
adc
add
stos
bts
xor
fdivrs
mov
loope
adc
xchg
cmp
jb
cmpsl
push
cmp
add
sub
pop
sub
clc
sbb
scas
add
add
adc
out
jbe
rclb
sub
or
mov
ret
out
pop
push
xchg
jl
shll
add
dec
inc
daa
jp
icebp
push
lret
pop
sub
add
aam
inc
cmp
jno
popf
imul
aas
out
fs
inc
and
data16
fsts
aaa
movsl
adc
xor
xlat
sbb
dec
or
add
mov
mov
xor
add
lock
sub
push
cmp
pop
push
jns
mov
fisubrs
add
adc
mov
adc
mov
sbb
add
mov
and
cmp
push
add
adcl
lret
xchg
fsubrp
add
or
push
mov
mov
adc
lds
cltd
aaa
sbb
addl
push
xor
cmp
adc
or
mov
pop
push
mov
pop
addr16
push
stos
cmp
sbb
mov
dec
xchg
insb
add
cmp
jo
cmp
pop
mov
pop
push
sbb
ja
scas
add
add
jp
jb
and
dec
test
pop
cwtd
xchg
sarb
adc
sbb
sub
test
ja
xor
cmpsb
and
mov
mov
stc
cmpl
rcr
inc
push
out
sbb
sbb
push
mov
sbb
pusha
add
mov
arpl
fdivp
or
sub
add
aaa
ss
ds
jne
sub
cmp
cmp
fmuls
cs
sbb
ja,pt
add
push
mov
mov
push
xchg
dec
push
xrelease
jecxz
xchg
sbb
and
add
jae
xchg
movsl
sbb
pop
sub
nop
inc
sti
loope
mov
std
iret
sub
aam
jns
jle
icebp
pop
test
add
int3
loope
push
add
les
add
xor
mov
cmp
addr16
sbb
add
lock
rolb
sbb
cmp
pusha
imul
xlat
mov
mov
add
or
sbb
add
jg
jo
push
mov
stos
int3
jbe
sbb
xlat
pop
mov
or
mov
lds
hlt
add
fsubl
int3
cli
shrl
out
sti
roll
inc
jp
fiaddl
test
push
int
loope
xchg
in
push
ret
or
out
mov
pop
loope
xchg
add
xor
pop
imul
es
mov
push
cmp
hlt
and
sbb
add
mov
push
add
enter
jns
loope
pop
add
imul
pusha
cmp
mov
mov
je
push
xor
push
in
mov
mov
lds
fisubl
inc
dec
add
fdiv
sub
cmp
cld
test
xchg
sbb
cmp
inc
lret
jb
jo
mov
andl
mov
inc
xchg
mulb
add
jns
out
xchg
aaa
fiadds
repz
data16
idivl
aad
into
aad
fwait
xor
xor
mov
cld
jno
dec
pop
hlt
pop
xor
insl
add
or
les
jnp
xchg
xor
ficomps
cmp
std
jne
scas
pop
and
add
test
aaa
mov
fdiv
push
stc
lcall
add
xor
add
ja
or
ds
insl
mov
push
xor
adc
jb
pop
sti
xchg
aad
jae
popf
inc
jbe
add
loope
add
push
add
jno
mov
notb
mov
mov
mov
sbb
add
push
adc
dec
mov
jne
ss
add
inc
pop
inc
aas
frstor
add
mov
mov
das
rorl
sti
xchg
testl
lock
pop
cmpsl
pop
jo
adc
add
jns
pop
imul
cltd
fcomp
movsl
sbb
pop
rcll
sbb
add
dec
xor
xchg
add
push
scas
xor
xor
adc
push
mov
pop
jmp
pop
or
fsubrp
insb
aaa
int3
xchg
add
loopne
sub
add
cmp
shlb
lds
decb
nop
repnz
jbe
mov
testb
ret
ja
les
fcompl
clc
add
push
scas
push
xlat
not
movsl
dec
fsubp
xchg
test
add
ss
inc
add
mov
les
mov
mov
inc
add
cmp
adc
adcb
add
popa
xor
add
sbb
add
mov
nop
jbe
insb
mov
add
sti
dec
push
pop
jl
sub
shl
fadds
dec
sub
fsubrs
outsl
adc
movsl
mov
and
pop
std
cmp
outsb
dec
xchg
mov
fmuls
fucomp
cmpsl
rcl
dec
push
xor
sub
frstpm(287
jg
mov
sub
jb
fildl
cmp
mov
popa
aam
insb
add
shl
xor
sub
fcmovnu
movsl
sbb
adc
add
ret
xor
push
nop
jmp
mov
add
mov
and
ss
mov
push
mov
xchg
adc
add
fnstsw
fsubrs
ja
and
lret
pop
out
gs
sbb
add
inc
aam
xor
and
cli
js
cld
mov
sbb
cwtl
add
pop
xchg
cmp
pop
bound
call
stos
dec
push
dec
orb
push
jnp
sub
imul
mov
pop
stos
lret
shrl
mov
sub
sbb
xchg
sbb
cmp
dec
inc
sti
cltd
adc
in
add
repz
stos
fistps
add
bound
test
xor
push
xchg
add
add
les
pop
add
jnp
ja
xor
fistl
outsl
cmp
sbb
ficomps
add
xchg
repnz
shl
push
mov
stos
cmp
add
add
std
aam
mov
mov
mov
add
inc
pop
fwait
inc
or
add
mov
leave
add
jb
int
addl
test
xchg
aam
mov
mov
pminub
negb
cltd
jno
jae
xor
push
inc
inc
jle
add
xchg
add
aad
sbb
imul
aaa
popl
inc
test
lds
int
fsubrs
mov
fsubl
pop
pusha
adc
enter
and
mov
sub
cmp
mov
add
add
inc
ss
cmp
add
adc
push
clc
xchg
cmp
fidivl
pop
rorl
pop
rorl
mov
sub
vmwrite
hlt
aad
and
jnp
xlat
sub
js
adc
fnsave
cmp
out
add
push
inc
sarb
sub
xor
add
mov
popa
fsubs
adc
add
cmp
pop
cmp
mov
cmpsb
and
cmp
sarb
add
or
mov
mov
stos
and
push
lcall
push
mov
shrl
cmp
cmp
xchg
push
cmp
pop
add
outsl
pop
das
mov
mov
mov
jne
dec
leave
lds
or
enter
inc
adc
xchg
mov
sbb
fidivl
dec
jbe
mov
xchg
inc
add
out
insb
dec
sub
push
xor
fisubl
adcb
add
add
shlb
gs
insl
fwait
cs
mov
mov
push
orl
push
adc
adc
pop
xor
bound
pop
outsb
mov
mov
add
cli
repz
outsb
sbb
adc
into
ret
and
add
ja
mov
mov
push
cwtl
mov
add
lret
push
mov
jecxz
push
add
sbb
push
cmpb
outsl
adc
loopne
push
inc
mov
sbb
add
fs
insb
add
ja
cmpsb
sbb
mov
jge
cmp
bound
inc
add
mov
xchg
cmp
xor
pop
xlat
adc
inc
xor
or
push
mov
add
inc
xor
sub
push
jnp
add
adc
rcrb
adc
add
sbb
add
sahf
lret
movsb
iret
ss
pop
fsubl
pop
jge
adc
adc
or
and
imul
adc
jle
inc
cs
ljmp
insb
hlt
loope
add
jle
mov
imulb
lock
mov
cmp
mov
sbb
xor
lea
iret
mov
dec
xor
out
add
stos
mov
sbb
nop
push
and
fidivrs
aaa
imul
repz
lret
lock
sub
ficomps
shlb
adc
data16
push
cmp
hlt
popa
jae
cmp
dec
inc
repz
stos
add
and
add
rcr
add
jbe
mov
sub
mov
push
or
out
inc
mov
pop
icebp
ss
jnp
or
addr16
push
dec
add
xchg
sbb
fdivs
xor
inc
xlat
pop
adc
xchg
fstpt
fisubrl
sbb
jnp
ds
cmpsb
fcompl
push
mov
dec
nop
pop
xchg
scas
xchg
add
movsl
xor
push
mov
add
data16
dec
sbb
leave
mov
xor
das
add
and
pop
stos
cmp
add
mov
mov
test
repz
fcmovnu
and
enter
scas
fstpl
sbb
pop
out
jo
lds
add
mov
insl
xlat
xor
movsb
fcomps
pop
add
fildll
add
mov
sbb
lcall
ds
pop
ficomps
cs
sub
xor
icebp
addr16
and
mov
cwtl
les
lods
js
sub
outsl
cli
push
and
out
sub
test
mov
hlt
adc
lds
aad
or
mov
mov
sahf
ficoml
xor
in
jae
add
scas
sbb
sub
adc
jmp
shl
fisttpll
push
mov
das
add
sub
xor
lret
xor
mov
xor
stc
inc
and
jb
rorl
push
mov
dec
mov
lret
mov
leave
lret
int3
bound
jno
mov
fcom
iret
mov
jbe
pop
in
fsubl
pop
add
sarb
sbb
test
add
lea
cmpsb
cmc
inc
dec
aad
push
push
fisubs
fnsetpm(287
xchg
imul
pop
pushf
mov
insl
cmp
sbb
fsubrl
and
xchg
adc
rorb
or
add
sub
aaa
fsubr
imul
xor
jge
jne
sbb
ljmp
rorb
xchg
hlt
sbb
mov
pop
movsl
sub
pop
leave
cwtl
aaa
lds
cs
add
adc
dec
cmp
cmovo
test
cltd
fwait
and
fcoms
aas
sbb
outsb
add
test
out
add
popf
xor
cs
aad
add
hlt
add
inc
out
outsb
inc
add
sub
mov
test
shl
cmp
enter
xchg
add
push
inc
in
aad
sub
fadds
ret
bound
push
xchg
fcomip
rcll
xor
rcr
ret
jl
jb
mov
into
xchg
adc
cmp
fidivl
mov
dec
add
pop
shrb
vshufps
push
jg
nop
jb
cmp
add
mov
or
stos
dec
inc
int3
outsb
cltd
jbe
dec
jl
fcmove
mov
push
movsl
and
mov
push
pop
ss
jo
inc
stos
fidivl
lods
ficomps
add
mov
or
inc
test
adc
and
movsb
pop
mov
orb
out
mov
jp
pop
mov
add
jne
ficoml
fnstcw
cmp
or
add
cwtl
mov
add
inc
lcall
sbb
bound
add
cmp
stc
xlat
mov
mov
call
jecxz
roll
lods
add
outsl
test
add
or
push
icebp
mov
add
repz
insb
add
adc
add
stc
call
add
js
jecxz
je
xlat
mov
pop
mov
jp
iret
mov
imul
inc
add
into
sti
aaa
rcrb
test
mov
add
mov
mov
mov
stos
add
pop
cmp
sti
add
ret
mov
xor
xor
inc
xor
lock
add
es
cmc
jmp
out
and
ret
xor
jb
sub
lea
xor
lret
movb
mov
adc
icebp
cmp
mov
jg
out
mov
cmp
xor
or
add
xor
bound
add
dec
popf
cmp
add
pop
loope
sub
mov
jmp
xchg
xor
sub
or
clc
add
mov
mov
ficoms
sub
push
and
lods
mov
test
add
loopne
mov
mov
add
mov
push
jno
push
dec
add
int
stos
inc
or
fidivrl
std
add
jge
int3
fisttps
inc
jns
ss
bound
sbb
add
jb
jle
shlb
push
jo
mov
adc
sbb
mov
or
or
push
xor
xor
cmp
jle
mov
and
popw
inc
sbb
flds
or
jp
mov
sbb
mov
cmpsb
or
add
iret
jns
adc
and
and
adc
pop
mov
out
push
data16
pop
or
bound
stc
jp
repz
loope
adc
in
jmp
cmp
and
dec
sub
pop
jle
daa
or
mov
jp
cmp
jo
jne
ficomps
jle
mov
or
or
xor
add
xor
and
cs
sub
sbb
data16
add
sbb
or
aaa
scas
jo
cmpsb
pop
add
pop
add
mov
js
xor
and
mov
add
adc
sbb
and
and
and
cmp
cmpsl
jle
cmp
aas
jo
and
sub
and
out
pop
xor
int
mov
pop
pop
add
mov
mov
xor
cmp
cltd
bound
daa
sub
add
or
push
mov
pop
xor
cmp
mov
fstl
jle
xchg
sbb
or
add
inc
fsubs
fxam
ds
movsl
addr16
add
cmpsl
fs
loop
add
sub
stos
imul
jmp
push
sub
jmp
out
scas
outsl
das
bound
out
scas
insb
sub
xor
lods
fisubrl
push
in
lods
mulps
mov
test
mov
cmc
bound
add
sbb
jb
int
cmp
sub
mov
arpl
movsl
mov
add
xor
ds
and
dec
inc
cmp
add
lret
dec
sti
fcompl
mov
ja
jb
push
mov
or
and
xor
add
jno
jg
cmp
and
or
mov
sbb
in
sbb
adc
pop
cmp
xlat
and
mov
fiaddl
mov
pop
xor
pop
jb
mov
jae
or
jne
push
adc
sub
or
xchg
imul
and
xorb
pop
pop
jp
adc
jns
add
push
loope
ret
sub
fisubrl
ljmp
outsl
sub
add
push
outsb
in
push
fisubs
xchg
call
adc
xlat
xchg
jae
cli
jb
adc
mov
sbb
hlt
imul
push
sub
mov
jmp
push
add
imul
push
fs
test
bound
pop
subb
scas
aaa
add
into
dec
in
arpl
and
aad
outsl
mov
push
imul
sbb
xor
dec
test
add
xchg
mov
jb
dec
mov
push
cmp
pop
repnz
sub
xor
jbe
jo
mov
push
mov
mov
lahf
mov
adc
aas
testl
jecxz
sbb
xlat
cltd
movsb
repnz
outsb
fisttpll
addr16
inc
dec
lcall
sub
es
jmp
sub
lea
fstpl
push
push
out
das
outsl
ljmp
xor
pusha
popa
and
dec
lret
sbb
jmp
xor
xchg
xchg
jae
testb
mov
jp
add
adc
stos
int
mov
das
int3
push
push
add
add
orl
pusha
aas
jae
clc
add
xchg
xchg
call
mov
sub
and
mov
mov
faddl
cmpsb
decl
sub
cmp
pop
jle
bound
imul
pushf
add
add
inc
mov
mov
and
ljmp
stos
lahf
pushl
mov
add
sti
sub
mov
cmp
sub
lods
push
shrb
lret
sbb
xchg
scas
adc
add
mov
cmp
jmp
adc
jo
call
pop
xchg
jmp
stos
add
ljmp
pop
shlb
mov
call
scas
out
fimuls
inc
xor
into
sub
je
add
jb
push
pop
pop
mov
rcrb
xchg
sub
add
movsb
push
mov
fsub
mov
add
and
cmpsb
loope
mov
cmpsb
loopne
mov
daa
mov
and
and
pop
bound
cmpsl
add
notb
dec
push
jo
jae
mov
pop
scas
call
mov
and
inc
dec
in
sub
aad
dec
lds
add
test
jge
mov
into
pop
aad
cli
add
push
dec
pushf
mov
test
jbe
mov
cs
fstpt
stos
jge
dec
rcrb
lock
mov
insb
add
bnd
fidivrl
popf
arpl
insb
imul
jae
repnz
sub
add
pop
nop
outsb
cmpsl
int3
in
xlat
adc
cs
call
add
mov
xchg
stos
add
daa
jmp
outsl
mov
imul
xchg
sub
jb
xchg
pop
ljmp
add
jmp
pop
popa
mov
mov
mov
inc
mov
add
idivb
jne
roll
js
loope
bound
repnz
sbb
aas
popa
push
mov
and
add
popa
arpl
cld
out
add
jno
mov
push
jmp
add
clc
adcb
adc
add
imul
sbb
add
push
out
ljmp
push
in
adc
pop
push
hlt
add
data16
cmp
pop
fsubs
xor
std
mov
and
hlt
mov
xchg
jp
adc
mov
aaa
idivl
or
icebp
cmpsl
add
push
shrb
cmp
add
mov
jle
mov
imul
and
imul
mov
bnd
jne
sbb
out
xchg
fcoms
imul
lods
push
sbb
xchg
in
push
pop
test
cmp
fwait
or
xchg
clc
xorb
add
scas
push
lds
shll
pop
fs
out
pop
mov
push
sub
in
add
sbb
out
sub
xchg
add
fiadds
imul
sub
add
xchg
pop
ljmp
cmpsl
add
push
add
adc
in
faddl
outsl
hlt
adc
mov
stc
add
jp
movsl
push
jns
add
dec
test
jge
push
add
shlb
add
scas
xchg
jo
loopne
xlat
and
pop
mov
negl
pushf
jno
xchg
in
stc
out
add
movl
outsl
fcom
inc
mov
jmp
lods
sti
jb
sub
xor
mov
stos
mov
insl
mov
cmp
mov
and
in
add
mov
cmp
js
or
mov
es
add
mov
scas
push
fidivrl
imul
shrl
pop
xor
adc
dec
sub
jne
cmp
sub
jae
je
fimull
adc
imul
shlb
push
sub
xor
aam
add
push
aaa
push
add
mov
cmpsl
lret
xchg
les
sbb
jnp
jbe
fld
dec
mov
sbb
inc
idivl
loope
repz
stc
cs
test
xchg
sub
add
adc
popa
cmp
ss
les
add
mov
jb
mov
mov
ss
jae
xor
pop
add
mov
add
push
fs
jno
das
mov
fisubrs
je
dec
jae
xchg
lock
adc
cmpsl
sbb
cltd
fsubl
rolb
or
adc
int3
iret
imul
ljmp
xor
mov
or
adc
std
nop
jo
es
shrw
jae
sub
push
stc
sbb
push
fucomip
aam
cmp
stos
add
mov
jb
repz
mov
xor
les
fisubrl
repz
scas
jbe
jnp
mov
fmuls
adc
push
push
xchg
test
mov
emms
mov
sbb
sbb
jne
and
incb
jno
shlb
pop
mov
add
xor
mov
stos
jb
and
xlat
jg
jo
mov
and
je
sbb
sbb
fstl
mov
or
loopne
jecxz
fnsave
sub
pop
fwait
mov
and
rcl
or
mov
add
inc
ja
subb
and
clc
fldl2e
dec
loop
aad
std
cmpl
pop
add
and
push
inc
repnz
inc
and
adc
pop
push
xor
and
inc
add
stc
mov
mov
mov
jbe
jno
icebp
push
pop
and
xor
ja
jl
jnp
dec
stos
les
mov
jge
and
lods
repnz
push
mov
hlt
lock
jo
xor
add
add
or
sbb
xor
xor
notl
add
mov
cmp
mov
repz
inc
mov
sub
test
adc
jno
iret
inc
push
mov
jbe
jb
jno
sbb
mov
pusha
rcrl
jo
xchg
lret
je
mov
mov
repz
repnz
mov
mov
jno
adc
jecxz
loop
lods
pusha
dec
aaa
xchg
out
fldt
cmp
jno
push
mov
push
pop
xchg
adc
inc
xor
mov
rcr
sub
dec
cltd
aas
lds
xor
out
repnz
test
and
mov
cmp
das
xor
imul
jns
mov
mov
mov
pop
mov
inc
outsb
scas
sbb
jbe
jne
push
jo
sbb
jne
xor
sub
icebp
ss
cmpsl
and
mov
add
sti
daa
shl
inc
adc
jo
jmp
xor
nop
mov
mov
push
and
sbb
jbe
fbstp
andb
dec
lahf
fimull
jle
push
mov
xor
mov
jno
inc
rclb
test
ds
cld
adc
movsl
jo
psllq
mov
and
fiaddl
sub
outsb
imul
call
and
je
push
add
test
movl
nop
jnp
mov
mov
push
into
lock
pop
jae
push
xlat
mov
call
push
lock
add
xchg
movsl
push
subb
push
pushl
pop
jmp
push
rcr
or
mov
shll
repz
ds
inc
cmp
mov
icebp
and
cmc
ret
add
cmpsl
sub
scas
movsl
adc
xchg
add
les
add
nop
pushf
and
loopne
cmpsl
pop
sti
dec
push
imul
loopne
mov
repz
mov
add
divb
add
xor
push
lock
fcoms
cmp
mov
sahf
adc
dec
jb
add
add
pusha
adc
sub
aaa
xchg
xor
add
mov
or
add
sahf
call
adc
mov
cmp
cli
stc
fistpl
add
mov
fs
icebp
adc
mov
jb
xor
inc
in
add
push
imul
insb
inc
push
repnz
mov
test
mov
dec
cld
xchg
sbbb
nop
mov
pop
sub
or
xlat
fnstcw
movsl
inc
pop
cmp
mov
ret
pop
test
jb
adc
cmp
subb
jno
mov
je
or
jecxz
add
repnz
mov
xchg
sub
jmp
imul
repz
pop
sub
sub
mov
scas
and
adc
movsb
push
std
jle
jb
and
mov
cmp
mov
sahf
sub
xor
icebp
pop
xor
hlt
add
ja
cmp
jne
aad
mov
mov
repz
xor
pop
sbb
mov
jb
fs
jno
jbe
fistpl
sub
xchg
sub
sahf
push
adc
adc
mov
cmp
sti
testl
sub
or
pop
xor
es
jno
les
mov
sbb
jb
mov
orb
ja
jae
xchg
cltd
pop
je
into
jg
ret
cs
cmp
repz
in
fidivrl
mov
xlat
adc
sbb
cmp
push
inc
xor
mov
sub
jg
xor
xlat
mov
cli
jne
imul
les
sub
mov
and
push
stos
clc
xor
mov
push
add
mov
js
shrl
shl
cmp
fsubrs
mov
inc
test
rcr
pop
repz
inc
aam
mov
push
test
mov
xor
idivb
push
test
add
stc
sub
jbe
inc
cmc
test
mov
in
psrld
push
mov
les
aaa
jmp
adc
pop
mov
adc
test
xchg
stos
mov
clc
and
js
xchg
dec
sub
add
lahf
mov
lds
les
mov
mov
add
push
push
xor
mov
mov
ss
and
push
pusha
mov
imul
add
hlt
add
clc
cmpsb
dec
add
shlb
rcr
and
sub
jo
icebp
scas
aaa
xchg
adc
push
stos
stc
mov
fs
mov
mov
sbb
jbe
cmp
xor
ja
sbb
shll
mov
stos
inc
push
fdivrs
push
les
dec
lret
add
mov
cmp
mov
repnz
add
addr16
jo
lcall
imul
sahf
sbb
push
push
cltd
popa
push
sub
xchg
sbb
inc
mov
xor
jmp
sbb
inc
adc
rep
aaa
jmp
dec
pop
fldl
jns
cli
mov
std
into
fists
popa
nop
into
movsl
cwtl
mov
lret
adc
shrb
xor
xlat
sti
lcall
lock
pop
mov
jnp
xor
addl
push
repnz
mov
leave
loope
test
test
xchg
adc
jl
push
mov
xchg
outsl
mov
mov
sub
mov
xlat
fistpl
adc
pop
mov
jle
shlb
xor
mov
adc
test
imul
arpl
xchg
inc
jns
dec
repz
sub
sbb
jbe
mov
lea
incb
xor
xlat
jo
adc
movsl
je
inc
test
dec
and
push
sti
push
and
clc
lcall
fimuls
jge
sbb
jb
fnsave
lds
pop
in
mov
std
xchg
jle
mov
stos
fdiv
and
insl
and
or
mov
add
lock
inc
push
fisubs
or
xor
rcll
ja
or
cmpsb
push
sti
in
rorb
and
and
xchg
mov
mov
pop
and
pop
jb
or
je
aaa
and
add
cld
mov
and
and
clc
jae
add
sbb
xor
sub
aaa
add
test
mov
not
xchg
jns
dec
add
pop
xor
push
cmpsb
mov
xlat
jno
xor
inc
mov
inc
repz
adc
dec
enter
mov
fiaddl
sbb
lock
aas
and
and
add
stos
call
add
and
push
xor
aad
fcmovnbe
pop
inc
lret
stos
jae
sbb
pop
lret
push
add
and
pop
or
push
rorb
aaa
sbb
pop
mov
sub
sahf
sbb
xor
jae
repz
adc
mov
lcall
push
jae
add
cmp
repz
jb
mov
jo
add
loop
cmpsb
pushl
or
cltd
jecxz
daa
add
aam
adc
shll
jecxz
push
push
pop
fisttpll
sub
hlt
add
xchg
push
xor
cmp
add
mov
and
mov
and
and
adc
and
mov
sub
lock
loopne
cmp
sbb
movsb
adc
lahf
fdivrl
mov
pushf
and
push
dec
repnz
mov
xor
popf
nop
hlt
out
cmp
in
jl
std
ret
add
mov
inc
mov
mov
add
or
or
std
mov
cmp
push
jne
fiadds
jmp
and
fidivrs
and
mov
fld
out
xor
cmpsl
push
aad
jmp
scas
jecxz
add
bound
fsubs
xchg
loop
xor
xor
pushf
dec
lds
jle
bound
mov
in
jecxz
jmp
sub
mov
mov
sub
add
jb
shll
sub
push
pop
std
test
sbb
jns
mov
loop
repnz
inc
mov
scas
lret
cwtl
adc
cmpsl
mov
fidivrs
test
incl
push
push
and
add
mov
dec
loopne
xchg
sbb
add
mov
mov
int
and
mull
cmp
sbb
dec
test
je
add
jae
or
add
pusha
cmp
out
jp
add
sahf
or
data16
cwtl
inc
bound
addr16
ficoms
das
shr
rol
lds
sbb
loopne
mov
pop
push
mov
xchg
out
sbb
pushl
addr16
clc
jp
jno
movsl
inc
inc
adc
inc
mov
push
loopne
cmp
inc
addr16
add
pop
and
mov
fsubr
cs
decl
or
add
and
call
mov
insb
pusha
and
in
or
sub
mov
xor
aaa
scas
popa
push
stc
roll
std
enter
add
mov
or
fstpl
das
mov
sahf
ja
or
dec
pop
loope
jle
push
add
daa
mov
bound
add
sbb
adc
das
inc
pop
dec
aam
pop
add
cmp
pop
inc
mov
dec
repz
std
pop
out
cltd
daa
out
jmp
int3
popa
icebp
mov
data16
lret
shl
addb
loope
push
mov
jecxz
scas
roll
mov
mov
inc
xlat
std
pusha
and
push
scas
outsl
xlat
sbb
imul
jns
xor
bound
mov
or
mov
sub
jle
lods
mov
pusha
int3
jne
mov
sub
test
sbb
lock
scas
pop
arpl
sbb
sahf
das
lods
add
xchg
mov
pop
inc
mov
and
inc
in
fs
js
and
mov
adc
fistpll
cmp
fsubr
loope
cmc
inc
mov
pushf
adc
xlat
arpl
mov
inc
sti
cwtl
cmpsb
add
insb
mov
popa
and
jg
mov
rolb
dec
cwtl
jne
sahf
dec
lret
hlt
mov
sbb
sub
cbtw
add
add
adc
ret
xlat
ss
js
sbb
sahf
pop
jl
fxtract
push
jmp
mov
inc
cmpsb
jo
mov
and
cmp
in
cmpsb
cmp
xchg
enter
jb
cmpsl
pop
repnz
fisttpl
mov
cmp
aad
jb
mov
add
bound
outsl
into
pop
inc
dec
jecxz
lock
popa
out
jp
es
mov
das
mov
outsl
sub
lcall
add
in
rolb
add
or
adc
daa
les
lock
add
ss
lds
aad
mov
and
lea
push
add
int
test
mov
pop
mov
jno
jle
push
fs
je
outsb
pop
add
arpl
pushf
outsl
js
xchg
push
pop
imul
out
cmpsb
cld
loop
or
jg
xorl
pop
fcomps
daa
xchg
mov
cmp
int
dec
lods
stos
insb
fsubrs
bound
dec
xlat
in
mov
or
add
sti
push
or
test
dec
adc
push
into
stos
lods
add
or
cmpsl
loope
into
xchg
lret
daa
pop
movsb
add
cmp
cmpsb
icebp
mov
jae
mov
jmp
daa
dec
imull
out
add
xor
dec
push
add
outsl
and
and
negl
rclb
fsub
clc
or
es
out
add
xor
cmpsb
scas
mov
push
jae
shrl
gs
cmp
xchg
xchg
inc
jnp
xor
cmp
cmp
es
in
xchg
adc
loop
sub
fdivp
call
stos
sub
add
in
inc
ss
push
or
add
jnp
jmp
add
fnstsw
jae
fidivrl
imul
arpl
xor
push
fiadds
ss
pop
loope
and
add
cmp
and
push
cld
imul
mov
idivb
dec
or
stos
loop
sub
xchg
iret
cmp
fistps
dec
adc
into
xor
jmp
pop
in
lods
fcmovnbe
cltd
loop
mov
mov
add
icebp
push
jb
imul
jno
dec
movb
push
pop
sarb
add
jo
xor
roll
sbb
jno
add
push
popa
daa
repz
out
shrb
mov
add
mov
scas
pop
xor
mov
daa
pop
pop
add
sbb
call
shll
rclb
mov
imul
sti
cltd
mov
jbe
lods
mov
jmp
jb
idivl
jno
add
aaa
or
add
stos
and
mov
out
add
out
or
mov
ret
mov
call
fldenv
add
and
ffreep
pop
lret
add
and
jecxz
out
into
or
mov
inc
mov
cmpsl
mov
mov
adc
jbe
mov
cmpsb
fdivrs
dec
cld
pop
sub
jecxz
iret
dec
or
popa
add
mov
loope
push
scas
inc
fildl
mov
out
fiadds
stc
stc
jbe
xchg
fstps
das
sbb
fstpt
test
xchg
or
xchg
repz
inc
jnp
imull
int3
mov
add
cmp
cmpsl
push
mov
loop
sbb
jns
dec
clc
mov
xchg
data16
repz
mov
inc
dec
icebp
jmp
imul
mov
daa
gs
mov
xor
loop
push
add
repnz
sub
stc
adc
and
adc
inc
js
ret
add
jb
movsl
mov
adc
outsl
cmp
ljmp
push
test
add
bound
cmp
inc
test
mov
xor
adc
push
cmp
and
fidivl
sub
adc
pop
xchg
add
inc
sbb
leave
push
insb
test
loop
pop
lret
sub
mov
rcl
cmpsb
or
add
add
cmpsb
negb
je
add
test
or
add
fdiv
add
sub
je
push
divl
fdivrs
adc
or
in
add
cmp
push
mov
push
add
push
adc
sub
push
clc
add
fdivrs
cmp
cmp
xor
lea
or
mov
dec
xchg
stos
inc
mov
or
push
and
imul
in
xchg
mov
ja
bound
adc
sub
mov
push
lret
xor
pop
or
mov
jp
mov
jg
aaa
lcall
pop
stc
int
ds
cmp
jecxz
add
sahf
sbb
add
int
cs
jmp
lods
jl
sbb
jle
test
sbb
pop
sub
movsb
add
push
add
mov
loopne
adcl
xor
test
movsl
pop
mov
and
roll
push
dec
mov
mov
and
int3
jns
nop
jno
dec
xlat
iret
adc
cltd
xor
icebp
adc
je
cs
and
ds
cmp
xor
repz
xor
jno
movsb
add
dec
add
dec
int
fdivrs
mov
pop
out
jo
mov
std
cli
stc
cltd
insb
xchg
sub
jno
or
mov
push
ljmp
mov
in
add
addb
lods
adc
fbld
jae
rcl
xor
movsl
mov
sub
sub
cmp
add
daa
hlt
ss
imul
add
and
out
frstor
or
mov
add
outsb
movsb
stos
sbb
mov
jae
xor
inc
imul
add
mov
add
and
sbb
and
idivb
aaa
outsb
xchg
rcr
xor
jle
or
add
add
xchg
sbb
sbb
push
es
xor
es
cmp
pop
sahf
xor
cld
jge
or
xlat
testb
fiaddl
and
fsts
add
and
and
adc
clc
mov
or
and
cmp
cmp
shl
xor
in
mov
push
add
outsb
push
adc
pmulhw
push
pop
or
jle
mov
add
sbb
adc
sub
xor
in
sub
daa
and
fs
imul
and
cmp
jns
xchg
mov
dec
mov
or
pop
outsb
and
add
mov
sbb
sbb
jle
push
inc
sbb
sbb
sbb
adc
xchg
or
add
or
je
inc
enter
lcall
add
xor
inc
mulb
inc
aas
sahf
cmp
and
sub
jle
loope
sti
add
jne
or
mov
adc
je
icebp
lock
cld
jg
es
dec
mull
aaa
repz
mov
ret
jnp
xchg
fwait
pop
add
jb
mov
cmp
cltd
es
lar
fcomps
xchg
loope
xor
div
scas
shlb
mov
lods
sub
inc
and
pusha
inc
loope
addr16
in
push
stos
inc
call
leave
out
shl
adc
push
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
add
mov
jle
adc
push
hlt
cltd
jp
sti
cmc
jns
aad
jecxz
loop
in
in
out
out
out
xchg
and
cmpsl
outsb
cmpsl
scas
cmpsl
in
insb
or
cmpsl
adc
push
cmpsl
fisubl
pop
sbbb
push
xchg
add
adc
fnsave
mov
xor
push
xlat
mov
xchg
cmp
mov
mov
xor
mov
ds
sub
scas
cmp
jl
adc
inc
push
inc
xchg
inc
adc
inc
cltd
inc
pop
je
and
aad
xchg
add
test
or
mov
push
sub
sti
incb
xor
mov
aaa
shll
lret
cmp
mov
inc
mov
inc
cmpsl
inc
outsb
inc
out
inc
insl
inc
xchg
inc
roll
inc
inc
push
inc
aad
sbb
xchg
inc
pop
inc
faddl
inc
addl
mov
inc
mov
enter
mov
dec
std
dec
jecxz
daa
xor
sub
and
cmp
sub
sub
subb
sub
sub
sub
sub
int
mov
jg
scas
jp
sti
scas
jns
fisubrl
dec
cmpsl
jp
imul
mov
push
pop
cmpsl
cmpsl
lahf
nop
sbb
test
or
dec
addb
jno
aaa
adc
push
mov
lret
daa
aaa
in
sub
out
and
push
out
out
out
out
out
out
out
out
hlt
enter
pop
lock
out
pop
bound
sub
or
shll
sbb
sahf
and
andl
int3
sarb
push
mov
out
jge
mov
jne
scas
mov
pop
cmpsl
fsubrl
cmc
mov
mov
cli
icebp
fdivrl
loope
shll
sbb
out
jp
push
sbb
fistpll
popf
das
fildl
add
shlb
mov
add
mov
lret
scas
scas
mov
shll
pop
and
mov
cld
mov
cli
or
rorl
dec
stc
and
lods
jecxz
movsb
mov
push
cmc
aad
mov
adc
adc
mov
rorb
fcomps
cmp
fisubs
outsl
sahf
xchg
mov
fwait
xchg
adc
adc
inc
or
inc
iret
pop
int
xor
jl
cli
mov
data16
mov
js
outsb
fldcw
sub
sub
sub
sub
sub
pop
push
mov
jbe
hlt
icebp
jnp
decl
out
jmp
test
addr16
push
push
dec
sbb
pop
push
pop
push
popf
push
inc
push
les
jbe
idiv
jnp
fisttpll
adc
out
and
xchg
push
cmp
mov
adc
sub
jo,pt
scas
mov
hlt
jl
cmp
mov
pop
outsl
adc
push
mov
pop
in
or
push
xchg
cmpsl
jae
movups
add
repnz
cmp
into
out
xchg
js
cltd
jg
or
adc
das
scas
and
stc
sub
in
sub
mov
add
pop
mov
add
inc
hlt
rcrl
or
cmp
or
and
gs
or
pop
inc
fsubp
das
add
jb
mov
xor
add
and
stos
mov
mov
in
iret
rcll
sbb
xchg
pop
out
mov
je
fcomp
fisubrl
outsl
ret
push
stos
add
js
std
add
loopne
in
jmp
imul
xlat
lret
push
addb
movsl
dec
jno
fidivs
mov
aaa
icebp
cmp
loope
shl
cmpsb
pop
xor
pop
adc
add
lret
ret
cmp
add
inc
sti
dec
jle
loop
dec
mov
xchg
scas
ficompl
fisttpl
sahf
sub
adc
ret
and
sub
jb
jbe
mov
shrb
mov
loopne
pushf
xchg
in
in
add
mov
mov
jne
push
aas
push
mov
adc
lods
add
cmpsl
int3
add
push
cld
je
jecxz
jl
shr
fistpl
ret
sbb
fidivrs
push
sub
sub
sti
xor
aaa
loope
in
imul
inc
push
popf
push
xchg
lea
jge
inc
das
inc
lods
add
dec
push
dec
pop
sub
rdpmc
mov
daa
lea
xchg
ret
mov
and
pushf
inc
inc
flds
movl
mov
fcomi
fidivrl
cmp
mov
shrb
and
loop
psrld
or
xchg
jb
sbb
fisttpll
jp
mov
mov
stos
cmpsb
add
adc
nop
jne
jle
mov
paddw
out
add
dec
push
fmull
lods
inc
scas
lds
lea
mov
lds
out
shll
notl
mov
mov
scas
fiadds
add
jg
sbb
jns
xor
sub
add
pushf
sahf
xchg
jne
cltd
or
fstp
jmp
adc
sbb
jbe
xor
or
pop
push
sets
or
clc
ret
cmp
test
outsl
pop
xchg
xchg
xorb
stos
sbb
xchg
lea
clc
andl
rol
push
rcll
movl
mov
pop
shlb
cmp
fiadds
loopne
daa
test
jecxz
rolb
push
jl
pmaddwd
js
xlat
push
test
sub
push
scas
xchg
popa
jns
jb
mov
and
push
mov
test
sub
inc
adc
mov
loop
popa
jne
push
fsubrs
cmc
push
pop
cmp
loope
adc
add
mov
xchg
xchg
or
stos
mov
jge
jecxz
jmp
add
mov
push
stos
in
into
fadds
adc
aam
mov
mov
cmpsb
xlat
icebp
mov
loopne
out
jecxz
loop
add
xorl
mov
sbb
push
fsubrs
mov
cmpsb
xchg
roll
sbb
fistpl
inc
gs
movsl
ds
les
add
or
sub
insb
xor
sbb
inc
les
movsl
or
push
test
push
nop
fiaddl
jl
and
subl
lods
and
xchg
lock
fsubrp
adc
sub
and
add
addr16
and
test
lods
dec
daa
aam
xor
jl
cmp
mov
ficoml
rorb
adc
inc
cmp
icebp
sti
aas
ja
jecxz
sbb
jle
push
cmpsl
data16
stos
jae
ss
pop
cmp
push
dec
or
sub
jg
jne
ds
std
cmpsl
mov
gs
mov
jl
add
cs
nop
mov
mov
cmpl
shll
shrl
aaa
jl
or
xchg
or
pop
add
inc
mov
in
stc
add
and
in
ret
into
ror
xlat
push
jns
sbb
fmul
inc
mov
sbb
icebp
mov
push
je
mov
sub
test
cmpsb
push
inc
movl
rcr
shll
pop
mov
or
mov
rcr
xchg
aaa
or
lret
or
or
or
fs
rcll
fisubrl
fdivs
mov
and
sub
dec
imulb
cli
xchg
imul
inc
inc
or
std
and
cli
mov
outsb
jge
sarb
lock
sbb
cmp
xchg
add
mov
mov
jb
loopne
push
ficoms
adc
sbb
or
mov
out
jl
fadd
pusha
adc
push
cmc
aam
in
add
stos
pushf
and
push
jmp
xchg
add
jno
imull
daa
mov
js
testb
pop
push
mov
mov
dec
into
xchg
ja
adc
jo
push
aas
rcr
out
sbbb
cltd
cmp
mov
xchg
adc
in
dec
ss
fsubl
adc
push
scas
fcmovu
inc
push
loop
adc
fdivs
add
mov
sub
jne
cmpsl
add
aas
cmp
fisubs
add
bound
mov
jmp
sub
cmp
pop
sbb
xchg
xchg
jae
mov
xor
hlt
pop
pop
and
or
andl
shrl
nop
mov
loop
push
stos
std
mov
out
add
scas
outsb
adc
mov
inc
lock
add
sbb
xor
jne
out
pop
imul
orb
sbb
cmp
add
xorl
loop
xchg
std
push
clc
std
cmp
dec
ret
add
adcb
mov
mov
cmpsl
sti
popl
in
cmp
sub
lret
sub
sbbl
xchg
addl
scas
mov
in
push
adc
out
adc
xchg
xchg
mov
cltd
mov
jp
popa
stos
inc
add
xchg
jno
lret
stos
sahf
lods
sbb
sbb
cltd
stos
repnz
add
cs
scas
jmp
add
mov
outsl
outsb
and
pop
fcompl
out
rcrl
fadd
add
pop
lret
jp
or
xor
loopne
icebp
xor
and
sbb
and
push
lods
dec
push
insb
xlat
adc
loopne
xchg
push
cmp
out
std
mov
mov
jbe
xchg
xor
and
adc
aad
cmp
scas
in
in
hlt
xchg
fidivrs
ds
cmp
or
cmpsl
lret
cmpsl
dec
outsb
mov
jno
xor
cmp
pusha
ret
fs
in
loopne
adc
adc
movsl
daa
lock
cmp
test
xchg
sbb
push
adc
cmp
mov
xchg
fmul
fstpt
cltd
jo
mov
sub
stc
cmp
and
ljmp
sub
fbld
inc
xor
sbb
cmp
mov
lods
jno
pop
adc
or
popf
or
adc
cmc
aad
fildl
jp
es
or
test
add
or
adc
push
inc
push
ficomps
stc
pop
pusha
fldcw
and
xor
jb
mov
ret
test
sub
push
mov
sbb
push
add
pop
adc
or
aaa
adc
xchg
add
cs
movsl
movsb
jl
outsl
jo
adc
cmp
jae
mov
es
push
sub
ficoms
push
lret
push
cwtl
push
xchg
subb
icebp
mov
add
ja,pt
cmc
adc
aaa
add
out
sub
je
out
aad
aas
es
pop
push
add
mov
or
mov
call
loopne
xchg
fistpl
mov
and
or
mov
ficoms
xchg
push
push
add
xor
aam
inc
mov
push
or
jl
psraw
pop
fisubrl
imull
in
add
xchg
push
push
cmp
pop
loopne
or
iret
cmc
jo
mov
dec
sub
push
movsl
sbb
mov
cmp
popa
loopne
and
xchg
imul
mov
aam
adc
add
movsl
cmpl
std
leave
cmc
out
mov
cmp
jecxz
add
jns
std
xchg
icebp
cld
add
aad
pushf
es
lea
add
or
add
clc
data16
dec
out
or
sbb
iret
xlat
loopne
add
idivl
and
imul
dec
add
sar
cmp
mov
xor
mov
jge
scas
stos
and
popa
and
xchg
and
fxch
mov
mov
push
movsb
or
jns
es
lret
gs
xlat
fldcw
and
fdivl
lret
rolb
cmp
insb
pop
ret
movsb
loop
xor
out
subl
add
xlat
dec
pop
jl
cmp
icebp
pushf
std
fstpl
movb
stos
mov
mov
mov
mov
push
and
adc
fcmovbe
lret
inc
dec
or
push
jbe
std
cmp
mov
fisubl
push
and
jb
mov
test
dec
pop
jne
cmp
mov
rep
mov
jmp
in
lret
lds
scas
andl
add
sbb
movsb
icebp
jno
push
xchg
xor
fisubs
ljmp
out
imulb
loope
fmul
sahf
adc
jge
shll
dec
push
inc
or
aaa
push
cmp
mov
mov
fisubs
out
fs
imul
psrlw
pop
or
add
aas
or
or
or
in
out
ja
jns
fwait
inc
jns
inc
lahf
rcrl
or
je
mov
mov
jno
xchg
inc
add
jecxz
sbb
movsl
ja
rcrb
cmp
push
cmpsb
add
pop
sti
je
cmp
add
leave
mov
xchg
ljmp
pusha
cltd
aad
out
sbb
mov
lock
add
inc
cli
dec
mov
lds
mov
adc
dec
inc
xchg
cltd
mov
in
push
scas
les
mov
je
ret
ret
shlb
push
fsubr
bt
sbb
push
fiaddl
pop
lods
jns
xchg
loopne
add
nop
fld
mov
mov
cmpsl
xchg
rclb
sub
and
mov
xor
into
jg
cmp
out
xchg
fcmove
test
pop
pop
jle
fsubs
sbb
mov
pop
dec
pop
repz
fiadds
arpl
ret
mov
sarb
imul
js
clc
xlat
arpl
shlb
inc
fwait
adc
ljmp
lret
push
sbb
js
xlat
lcall
sbb
adc
stc
fwait
icebp
sbb
loopne
mov
stos
cs
loope
sarb
mov
fistps
pop
aad
jb
dec
mov
movsl
mov
cmc
lcall
cli
mov
mov
dec
test
imul
ds
mov
int3
test
push
in
mov
cmp
in
adc
call
adc
inc
mov
sarb
cli
int
add
stc
jo
pop
jle
inc
sbb
adc
jge
cmp
pop
ret
push
aam
jp
mov
out
pop
repz
js
cli
mov
roll
mov
jp
cli
ret
mov
pop
lret
test
nop
int
lds
jecxz
fmuls
add
sub
mov
and
add
sahf
insl
ret
pusha
dec
cmc
fisubrl
jb
mov
lods
jno
jge
das
and
loop
cmp
jae
push
jb
subl
aaa
movntpd
shrb
add
or
jbe
scas
add
loop
add
lret
sbb
sub
scas
fisubrl
push
sub
addl
outsb
or
int
cmpsl
cmp
outsl
jbe
and
rorb
add
leave
in
mov
cmp
imul
and
fidivrs
faddp
mov
sbb
cmp
xchg
stc
fmuls
adc
and
cmp
push
adc
stc
inc
fnsetpm(287
stos
mov
scas
cmpsl
add
bnd
jmp
add
sbb
insb
adc
cwtl
sub
add
mov
data16
xor
enter
shlb
repnz
addb
add
add
loope
repnz
add
lahf
sti
sub
fisubrl
ljmp
mov
jo
jge
fsts
loopne
add
add
cmp
stos
and
mov
das
mov
out
ss
xchg
hlt
mov
mov
sbb
add
dec
xor
mov
data16
das
fdivrs
pop
hlt
and
shrb
jns
mov
jo
aaa
push
push
mov
add
pop
into
jl
sti
mov
popf
mov
xor
add
push
mov
xor
repz
ret
mov
push
dec
add
imul
lods
add
pop
jle
add
push
sbb
pushf
jns
sahf
andl
out
divb
test
sbb
in
pop
pop
lock
mov
std
add
dec
jno
cld
dec
pop
fisubs
mov
add
fstps
sbb
insl
jecxz
push
pop
jnp
sahf
push
test
fidivl
jecxz
loopne
shlb
or
adc
iret
incb
xor
xor
decl
mov
fnstenv
push
xor
outsb
sub
nop
push
and
xchg
testl
shlb
fimuls
push
push
stos
xchg
sbb
cmp
iret
and
cmp
add
and
push
add
jo
jae
mov
mov
xor
and
pusha
in
xor
push
insb
rclb
js
and
and
sub
mov
daa
push
and
add
mov
lcall
and
or
sbb
loope
shll
gs
or
rcrl
and
ss
push
and
inc
sbb
mov
xor
in
push
loope
pushf
jb
add
lock
add
shlb
sahf
lods
je
adc
xchg
les
cld
cltd
aas
sbb
add
mov
sub
aad
push
push
mov
scas
ss
in
insb
lds
or
shll
inc
mov
cli
sbb
cmp
outsl
jae
pop
xchg
sub
imulb
andb
repnz
jnp
fcmove
clc
xor
insb
sub
and
push
mov
lock
adc
out
fidivrs
cli
push
andl
ja
mov
data16
or
xor
cmp
xor
jno
jl
adc
test
lcall
mov
enter
lret
xor
cmp
add
pop
loop
dec
jns
adc
cmp
enter
and
addr16
outsb
out
ret
jbe
popf
icebp
pop
cmpsl
jge
xor
push
les
xor
bound
shrl
add
mov
shrl
cld
leave
fsubrs
in
movsb
or
add
and
lret
xchg
add
sub
add
adc
insb
mov
cmp
fcmovnu
xchg
adc
ss
mov
mov
xlat
pop
lods
js
fadds
mov
mov
mov
dec
fistl
shlb
pop
cltd
lret
cmc
cmp
nop
push
and
xchg
pop
pop
pop
or
mov
lahf
cmpsb
shl
xlat
push
shlb
cwtl
or
fs
xor
and
mov
std
std
out
test
jo
rol
xchg
push
mov
daa
mov
mov
pop
xor
les
icebp
ror
cmpsb
xor
add
sub
push
ret
in
mov
add
insb
cmp
nop
push
xor
xchg
push
lds
clc
inc
fadds
enter
nop
mov
xor
out
push
sub
aas
or
movsb
int
jl
add
scas
xor
push
jno
les
notl
xchg
mov
and
or
mov
lds
aam
mov
push
or
add
loopne
jg
push
lock
dec
sbb
jge
xchg
push
das
bound
loopne
sbb
xchg
lods
cmp
shrl
ret
fbstp
push
mov
pop
mov
in
jb
mov
enter
sbb
jl
xlat
cs
or
clc
xor
push
adc
pop
add
cmp
mov
mov
shlb
and
sbb
pop
inc
adc
inc
adc
movsb
mov
mov
cltd
xor
add
outsl
je
rcll
aad
push
push
inc
enter
notb
aas
rcr
adc
mov
sbb
repz
sub
cli
add
add
mov
mov
ss
add
or
movl
cmpb
add
or
rcl
mov
add
jnp
jle
jbe
out
cmp
inc
movsb
bnd
jp
add
push
adc
mov
jbe
data16
bound
sbb
xlat
adc
jne
push
add
movsl
dec
orb
sub
loopne
cmp
xchg
jp
mov
daa
jle
add
pop
sub
xchg
insb
inc
push
add
inc
out
or
cmpb
std
stos
mov
dec
xchg
ret
pop
cmp
cmp
repz
fmulp
pop
aam
pop
cmp
movsb
gs
imul
fidivl
sbb
pop
lret
inc
add
mov
sti
pusha
and
add
pop
in
jl
lret
push
cmp
jmp
enter
lea
mov
mov
xchg
iret
jae
scas
add
sbb
sbb
fildl
jne
jo
cmp
dec
sbb
mov
cmpsl
test
repnz
std
add
mov
fildl
adc
fiaddl
push
sbb
fildll
add
mov
loope
shll
mov
rorb
inc
jns
mov
sub
mov
push
mov
add
das
mov
pop
mov
push
test
cmp
lods
lret
inc
xor
les
jb
in
mov
cmpsb
jmp
shlb
in
sub
or
xlat
mov
pop
push
cld
bswap
daa
pop
inc
popa
add
fbstp
test
add
orl
je
add
adc
loop
mov
fidivl
clc
cld
inc
int
mov
sub
xor
rcrl
pop
xor
add
cmp
repz
cmpsb
ret
jb
sbb
ss
push
or
or
jb
jecxz
mov
push
xchg
lock
aad
out
jo
fisubl
inc
aaa
and
xor
pop
ds
das
repnz
ss
dec
icebp
xchg
add
test
clc
movsl
inc
add
js
in
mov
outsl
mov
cmp
adc
icebp
push
int3
js
in
loopne
add
add
sub
icebp
fisubl
push
dec
cs
push
jns
ret
pop
add
lea
xlat
mov
push
enter
int3
sub
adc
and
xchg
push
fdivrl
lcall
pop
xor
mov
mov
mov
xorb
daa
cmp
mov
inc
dec
mov
sbb
push
mov
aaa
fcomps
shlb
pushf
cmp
fcomp
sarl
add
cmpsl
sub
scas
das
js
popa
sub
arpl
shl
cmp
jmp
movl
pusha
frstor
das
lcall
arpl
sub
notl
outsl
add
push
xor
xor
push
pop
xchg
out
sub
mov
ret
test
into
repnz
mov
decb
test
jae
jno
cld
ret
lea
mov
xor
call
push
mov
enter
daa
or
sarl
stc
xor
push
cmp
into
fstpt
cmp
rolb
dec
rorb
mov
add
sub
push
sub
stc
out
sub
lods
sub
jbe
push
call
or
xor
rcrb
add
jle,pn
pop
add
inc
mov
loop
mov
mov
mov
jae
add
lods
mov
nop
adc
call
dec
jnp
add
mov
or
sub
add
jae
ret
and
popa
add
sbb
dec
nop
push
cmp
arpl
and
pusha
pop
rolb
and
mov
or
xor
add
xorl
jp
aaa
xchg
aas
shlb
mov
loopne
push
sbb
repnz
cmp
ret
jg
dec
popa
js
add
enter
addb
mov
nop
jne
and
adc
jno
loop
add
pop
and
sbb
repz
inc
cmp
push
or
rcrl
add
ljmp
push
andb
add
jbe
nop
adc
idiv
jle
add
lret
sbb
cmp
sub
jnp
stos
mov
stos
fcomi
push
pusha
push
imul
pop
loop
add
xchg
xchg
xchg
mov
mov
pop
testb
jo
jno
push
stc
aaa
bound
pop
xchg
xor
pop
adc
add
jns
mov
add
nop
mov
and
mov
push
les
dec
jae
jns
push
or
sub
xor
pushw
add
adc
mov
add
xor
fdivrl
jmp
cmp
xor
cmc
push
clc
movsl
fisubrs
mov
cmp
xchg
push
add
notl
xor
sarb
add
inc
add
inc
and
pop
jle
xor
std
test
insl
std
mov
jbe
cmp
mov
bound
enter
mov
sbb
lods
nop
lods
add
sbb
or
and
xor
mov
mov
jb
shl
adc
pop
sub
mov
push
imul
xlat
xchg
movsl
mov
jns
enter
repz
cmp
dec
xchg
gs
sbb
mov
mov
ss
aas
sub
data16
aaa
jae
loop
xlat
popa
popf
mov
pop
dec
add
fstl
sarl
aaa
and
xor
imul
sbb
int3
push
mov
dec
test
jo
fisubrl
xor
das
jb
push
loope
out
test
test
pop
cmp
mov
cmpsb
daa
sub
xchg
mov
and
xor
xor
xchg
fcmovnu
push
add
movsb
filds
jle
jmp
xor
sbb
fldt
pop
or
cwtl
add
xchg
jae
inc
fisubs
hlt
pusha
dec
std
jns
sahf
dec
jb
mov
inc
jne
or
mov
pop
testb
add
cmp
ja
sarb
fsubr
int3
mov
lods
fldt
sbb
aaa
arpl
dec
inc
jge
add
sbb
mov
sahf
jno
jmp
dec
int
outsl
cmpsb
bound
jne
dec
movsl
cmp
mov
ret
cmp
cmp
popa
insb
fisubs
push
fsubs
adc
xchg
add
cmp
or
fidivs
add
xchg
and
fs
fsub
test
repnz
mov
add
jbe
pop
cmp
inc
add
add
jae
mov
aas
pusha
cmpsb
and
outsl
push
icebp
lcall
fwait
cmp
data16
loope
sbb
subl
pop
lea
dec
jp
and
push
loop
sub
sbb
sub
leave
ficomps
xchg
add
mov
xor
das
enter
nop
roll
jb
test
xchg
fidivs
sbb
and
fisubl
stos
or
popa
add
push
ficoms
out
push
cmpsl
add
sysret
sbb
pop
loop
cltd
pop
and
jle
repz
lock
sub
or
je
clc
rcrb
fisubl
adc
jo
add
cli
jno
sub
add
push
jns
movsb
mov
repz
add
sub
jb
and
arpl
repz
int
call
adc
and
add
fistpl
in
jns
cmp
cmp
adc
insl
jge
dec
jnp
faddl
push
or
lahf
and
test
add
inc
mov
add
fnsave
dec
fdivs
mov
insl
adc
sub
sbb
shlb
cmpsl
add
nop
movsb
gs
xchg
in
add
dec
mov
mov
in
enter
jno
not
push
das
mov
and
jl
and
inc
fildll
push
fimull
or
push
negb
mov
xor
sub
outsb
add
cwtl
xor
xchg
mov
push
std
adc
fistpll
cld
push
add
movsl
leave
imul
mov
sbb
push
push
fistl
mov
test
aas
adc
and
add
aad
dec
out
aam
or
stos
mov
pop
add
addb
sub
test
push
jbe
in
das
into
cld
add
jge
aas
movsl
shll
data16
mov
add
and
jno
shl
or
outsl
mov
sbb
jns
lds
in
das
add
and
imul
push
out
movsl
lahf
fldenv
into
or
popa
sub
cmp
add
mov
and
xor
das
sarl
into
xor
adc
fstps
addr16
and
and
xchg
or
out
in
pop
mov
loop
daa
push
rcr
sbb
mov
rol
ss
scas
jno
loopne
test
imul
adcl
and
incb
pop
jmp
int3
sub
les
mov
adc
add
xchg
cmp
cmp
mov
out
add
or
in
sbb
push
adc
mov
lahf
aas
out
enter
push
int
pop
cld
jae
pop
int
mov
add
mov
fnstenv
jns
gs
add
scas
popf
pusha
sbb
xor
inc
in
popa
cli
add
ficoms
add
dec
sarb
add
fsubr
rolb
xor
popa
sbb
push
es
pop
fisubs
jmp
sub
push
dec
jle
sbb
outsl
adc
in
into
push
popf
repz
icebp
int
or
jbe
and
ror
dec
mov
pop
push
outsl
popa
mov
cltd
inc
cmpsb
sub
push
testl
test
pop
adc
lods
leave
xchg
xor
mov
or
sub
aad
sbbb
add
je
imul
sti
xchg
or
pushf
add
stos
cmc
cmp
dec
lods
add
and
cld
inc
sbb
xor
mov
scas
popa
inc
add
inc
sbb
add
aas
int3
cmp
inc
stos
fdivrs
and
fcmovb
lret
mov
insl
add
push
into
push
icebp
rclb
sbbl
sub
das
aaa
mov
sbb
nop
adc
jmp
mov
or
add
rorl
add
shlb
pop
adc
mov
fiadds
repnz
nop
pop
inc
div
test
in
sub
cltd
imul
sbb
mov
dec
outsl
xchg
add
les
add
xorb
mov
and
je
adc
aas
jb
mov
xor
mov
lock
push
or
lret
pusha
or
add
cmp
lret
and
js
es
jp
mov
imul
idivb
lods
mov
adc
jl
stc
outsl
test
call
into
mov
pop
mov
cld
mov
insl
add
dec
jl
lahf
jb,pt
addl
push
or
stc
push
aaa
add
in
xchg
sarb
jne
push
cmp
dec
push
icebp
ds
mov
dec
testb
add
fiaddl
inc
dec
inc
push
push
jecxz
adc
or
adc
mov
imul
jnp
out
cmp
pop
test
dec
movsl
add
sarb
cli
jp
int
test
insl
xchg
imul
push
addr16
daa
cmp
inc
dec
push
xchg
push
add
mov
lods
mov
sbb
cmp
pop
mov
sub
dec
stos
add
push
jns
add
test
jle,pt
add
enter
inc
xor
lock
xor
jb
clc
inc
je
inc
scas
add
fidivrs
pushf
and
out
sbb
psubusw
add
adc
adc
jle
mov
outsb
ficomps
xor
cmp
pop
cmp
and
int3
add
les
add
xchg
add
clc
or
mov
cli
xchg
push
scas
cwtl
mov
mov
ficoms
add
hlt
jno
push
mov
cmpsl
xchg
imul
scas
add
fisubrs
jns
xor
pop
pop
fsts
xor
cmc
sbb
sti
adc
loopne
test
or
arpl
xchg
add
nop
loop
popf
loope
push
sbb
jle
enter
fiadds
faddl
test
out
push
push
mov
jp
xchg
jo
jno
push
push
fidivs
or
out
or
rclb
xchg
mov
fldt
xor
mov
add
push
das
jne
movsb
pop
add
loop
enter
add
push
pop
addl
and
cwtl
add
cmp
xor
cld
loop
mov
mov
and
xchg
adc
inc
fdivrs
jp
jae
push
mov
jbe
and
mov
dec
pop
mov
std
fwait
add
mov
dec
lcall
and
or
out
jmp
aad
push
xchg
clc
xchg
xchg
aad
es
aas
sub
mov
mov
aas
mov
fnsave
sbbl
pop
cmpsl
xchg
add
and
fiadds
inc
cmp
inc
outsb
dec
ljmp
loopne
jae
sub
imul
std
add
cmc
pop
es
inc
mov
imulb
sub
jbe
dec
mov
pop
add
test
loopne
jo
ds
out
adc
add
cld
jae
add
mov
xor
lods
add
out
jo
xchg
aaa
cmpb
es
js
ret
fwait
push
or
incb
les
mov
jp
jo
jbe
clc
fimull
mov
ss
in
xor
mov
loop
ret
enter
fwait
mov
div
mov
xor
mov
fsubrs
mov
push
mov
xchg
sbb
idiv
inc
bound
mov
lcall
mov
xor
icebp
pop
cmp
fdivp
push
mov
loope
adc
mov
sbb
les
mov
pop
test
add
movsl
shll
ljmp
cwtl
sbb
or
xchg
add
loopne
cltd
jle
fdivr
shlb
lret
pop
scas
jae
test
in
cld
pop
pop
dec
je
cmp
mov
nop
xor
or
add
dec
inc
cmpsl
cmpsl
add
adc
test
push
xchg
add
cmpl
xchg
pop
insl
ja
jbe
pop
mov
add
hlt
inc
and
cmp
nop
add
fcmovb
jbe
sub
or
adc
mov
scas
adc
pushf
outsb
repz
fsts
jecxz
sub
sahf
icebp
loopne
test
clc
rcr
fnstsw
roll
movsb
jno
ret
pop
xchg
add
jo
repnz
inc
and
test
fdivp
adc
add
mov
jbe
pop
and
shl
loopne
mov
ret
scas
push
add
fwait
mov
pshufw
in
mov
xor
adc
and
dec
movups
lock
mov
lret
push
cmp
mov
add
and
repnz
push
push
sbb
rcr
jns
loope
test
add
cmp
in
cmp
mov
add
cmp
pop
loope
xchg
xchg
dec
jo
popf
dec
mov
push
ficoms
sub
mov
adc
jb
mov
xor
jns
or
out
jo
repz
add
je
aas
fidivrl
mov
add
cmp
ror
test
dec
gs
addb
xchg
add
cmc
mov
nop
je
fmulp
pusha
mov
and
push
clc
ds
jl
or
jge
faddp
jo
xchg
loopne
xchg
fadds
je
cmpsb
shrb
andb
sahf
popa
fsubs
jmp
add
or
loope
out
add
jecxz
jmp
add
mov
xchg
add
mov
dec
mov
lret
imull
and
mov
fcmovbe
jo
push
mov
popa
outsl
insl
pop
add
lods
ss
out
or
jl
jno
push
sub
scas
cmp
add
and
pop
and
push
jo
jmp
enter
mov
inc
fiadds
push
xchg
imul
xor
inc
test
dec
mov
sbb
push
add
push
mov
bound
sub
push
mov
add
lock
dec
and
fisubl
push
push
cmp
mov
movsl
push
add
test
mov
imul
and
fnstenv
fmul
cmp
xor
push
stos
mov
cwtl
add
jle
lock
pushf
mov
repz
out
add
add
mov
add
push
in
jb
insl
loop
das
and
add
ret
sub
fdivrs
ret
sub
sbb
inc
mov
out
pop
rcr
add
imul
jno
dec
xchg
add
daa
cmp
xchg
and
stc
fimull
stos
jb
lock
clc
fbld
ret
fidivrl
xchg
sub
hlt
adc
push
lret
lock
xchg
scas
lods
imul
adc
ljmp
cmp
cld
ja
add
in
xor
cmp
in
fiaddl
pusha
cmp
or
notb
daa
cmpsl
lret
ficompl
addr16
xchg
push
outsl
aaa
in
xor
les
cmp
out
pop
pop
adc
in
sarl
push
stc
loopne
dec
sub
sbb
sub
mov
daa
mov
add
shl
nop
jbe
adc
adc
add
fmuls
jno
clc
dec
sub
push
outsl
lods
popf
jecxz
test
jno
jmp
adc
and
cltd
adc
mov
jns
repz
cmc
bound
push
icebp
popf
ficomps
orl
sbb
stos
gs
mov
jmp
fistps
xor
shll
add
cmp
fiaddl
jbe
cli
add
int
pause
add
push
xchg
pop
outsl
jg
call
jne
dec
push
jge
cs
fistl
insb
jae
adc
lods
or
sub
cmpsb
shrl
data16
dec
cmp
jb
inc
decl
rorb
stc
out
into
cmp
pop
cli
push
or
fbld
stos
mov
or
mov
sarl
pop
sub
pop
and
fnstenv
insb
and
loop
adc
pop
mov
repnz
ss
push
in
fnsetpm(287
ret
aas
mov
fdivl
jo
outsl
adc
push
cmpsl
cmp
and
pop
xchg
fdivrs
or
lock
mov
aas
adc
mov
dec
add
pop
and
push
jecxz
scas
mov
and
iret
rolb
xchg
jb
ds
stos
jp
in
mov
add
mov
jle
lods
cmp
pop
mov
cltd
rorb
jb
or
daa
jp
jae
mov
repz
fmull
ds
jns
pop
imul
xchg
sbb
stos
aad
mov
cmp
cmc
sbb
mov
mov
ds
inc
inc
inc
sub
cmpsb
fmuls
adc
jge
loopne
push
mov
pushf
mov
adc
jg
jne
js
xor
repz
cmpb
xchg
loop
sbb
mov
add
mov
jg
add
sti
mov
fcmove
repnz
mov
stc
mov
mov
push
xchg
std
pop
outsb
aas
popa
xchg
add
loop
in
lret
sub
add
ds
inc
jno
mov
fdivr
and
das
test
add
or
adc
adc
iret
sub
hlt
enter
rcrb
cwtl
fnstsw
out
mov
xor
or
mov
andl
push
cltd
rclb
inc
and
cmp
scas
mov
inc
push
sub
dec
cmpsb
iret
das
xor
jb
sahf
scas
test
push
neg
dec
xor
fmulp
fsubs
loope
leave
mov
and
add
bndstx
das
cmp
movsl
cmp
or
jae
xor
cmp
das
jnp
notb
outsl
cmp
pop
pop
sub
lock
dec
ljmp
xchg
push
mov
movsl
mov
clc
mov
xor
out
mov
int
pop
push
ret
stos
cmp
sub
nop
xor
sub
arpl
movsl
repz
scas
loopne
mov
rolb
adc
push
and
sbb
dec
sub
ret
loopne
std
jb
lahf
push
out
jecxz
movsb
xor
nop
icebp
outsb
fsubrl
mov
pusha
fisubs
xor
jl
add
adc
ficoms
cmp
dec
and
dec
push
adc
in
stos
fistpll
sbb
dec
or
lcall
or
adc
add
jb
push
add
adc
pushl
mov
sub
and
mov
into
loopne
cltd
cmc
aad
jge
loopne
in
mov
rclb
mov
adc
dec
push
sbb
jo
add
out
cmp
or
mov
inc
mov
aam
and
fmull
pop
mov
push
jmp
pop
aas
mov
cli
and
sub
sbb
jo
iret
jl
and
push
scas
sahf
add
adc
dec
lds
sti
add
or
cli
sbb
jbe
xchg
push
xchg
mov
fwait
in
mov
int
jnp
mov
daa
ret
sub
popa
xchg
cmp
sarb
and
fs
mov
cmp
jmp
popf
lods
test
jecxz
pop
xlat
jae
push
inc
mov
and
outsl
adc
mov
cmp
lock
pop
inc
les
js
mov
fwait
aaa
incb
mov
pop
pop
insl
loope
push
add
inc
sbb
add
push
aaa
rol
stc
xor
bound
mov
jo
jge
mov
lret
mov
call
mov
loop
mov
stos
fwait
jp
jecxz
add
cmpsl
jnp
add
xchg
mov
add
jo
pop
dec
pop
sbb
push
fimuls
scas
stos
add
outsl
or
ret
and
stc
clc
repnz
jge
mov
stos
jne
dec
sarl
arpl
and
iret
jmp
fwait
adc
fstl
jl
pop
imul
or
popa
jnp
mov
shl
mov
mov
add
fbstp
daa
dec
add
sub
xchg
lods
mov
xor
loop
push
cmp
adc
mov
stos
sub
rorl
jmp
imul
repz
lock
movsb
add
pop
js
and
outsb
pop
xlat
push
mov
scas
sub
divb
add
int
mov
cmp
aaa
ficompl
mov
into
pushl
adc
mov
mov
xor
int3
js
aam
mov
and
ss
das
fisttpll
adc
fstps
jl
scas
mov
jl
rclb
xchg
dec
mov
push
and
cmp
mov
das
ljmp
movsb
sahf
imul
fldenv
xchg
sbb
push
lods
mov
nop
rcrb
mov
mov
adc
mov
cltd
inc
ja
cmpl
mov
cmp
lds
mov
add
xor
adc
arpl
std
cmp
iret
add
inc
add
xchg
add
pop
jp
cmc
stos
cmpsl
loopne
push
or
lds
out
lahf
adc
outsl
loop
movsl
rolb
sub
fsubl
jb
adc
mov
inc
mov
ficompl
cmpsb
dec
fidivs
pop
pop
sahf
add
and
lret
adc
out
test
leave
scas
call
adc
pop
pusha
xor
jno
mov
repnz
mov
add
xor
and
sbb
dec
xor
xor
bswap
add
mov
sub
pop
outsb
mov
mov
pusha
adcl
add
negl
adc
cmp
add
enter
push
add
adcb
les
fisttpl
enter
lcall
out
sbb
sbb
sahf
pop
xor
out
test
lds
stos
fs
and
jbe
adc
sti
sbb
sbb
test
or
addb
xor
scas
sub
es
fdivrs
hlt
sub
je
stc
pop
ficoms
imul
pop
sub
fdivrl
decl
sub
gs
mov
lahf
in
mov
inc
xor
ret
js
andl
and
jp
cwtl
add
or
rorb
add
rcrb
dec
fisubl
pop
push
sahf
js
loopne
jp
fidivs
dec
ret
adc
and
scas
jl
push
cld
andl
push
xor
mov
adc
mov
and
out
sar
xlat
xchg
jnp
dec
mov
inc
nop
add
lock
mov
xor
cmpsb
jne
sub
add
cmp
sbb
popf
inc
cmp
rcr
adc
jae
cltd
xchg
arpl
nop
loope
sbb
out
sbb
fcomps
jecxz
adc
cmp
add
daa
lea
sbb
add
jb
mov
shr
icebp
fdivs
in
cmp
or
add
add
or
enter
mov
bound
testb
xor
imul
fxch
add
nop
sub
fdivp
rolb
imul
aam
cmp
nop
mov
adc
jle
cmp
sub
add
inc
movsl
cmc
push
pop
mov
push
cmpsl
jno
ds
das
cs
out
xor
or
mov
inc
push
mov
sbb
outsl
pop
add
or
dec
lret
jbe
lcall
pop
icebp
push
xor
fsubrl
pushf
or
jae
xlat
lea
jg
push
sbb
mov
out
stos
enter
cmp
mov
inc
cmp
ficompl
jecxz
mov
rorb
sub
fdivs
inc
ficoml
outsl
jno
fnstenv
inc
sbb
scas
imul
aaa
repnz
imulb
dec
add
sbb
push
xchg
add
inc
cwtl
mov
dec
and
pop
add
addr16
mov
sub
mov
stos
jo
mov
add
sbb
in
push
add
sbb
out
jae
sbb
adc
sbb
sbb
js
pop
hlt
jo
in
push
stc
add
repnz
push
aas
stos
adc
jno
sbbb
mov
inc
jb
clc
sahf
jge
adc
loopne
jbe
add
or
jg
dec
add
inc
fdivs
cmc
fdivs
loopne
adc
mov
push
xchg
mov
add
xor
shrl
adc
negb
mov
pop
addr16
cmpsb
dec
add
jo
out
dec
outsl
or
fs
and
movsl
repnz
pop
xchg
fists
push
sub
adc
cli
add
mov
sub
add
sbb
fs
cmpsl
shlb
pop
dec
mov
mov
fstpt
mov
ficomps
test
add
les
sarl
out
jnp
jae
ficompl
jecxz
pop
add
dec
ret
mov
cli
arpl
jmp
pushf
clc
add
popf
adc
data16
hlt
lea
testl
xlat
flds
jp
inc
leave
cwtl
stc
mov
fdivs
inc
int
xchg
jae
add
in
cmp
out
add
mov
add
or
lret
repnz
stos
add
mov
gs
lea
sbb
push
mov
jl
add
nop
pop
add
idiv
lret
adc
jo
mov
cmp
add
inc
leave
sub
repnz
icebp
insl
lret
mov
lret
std
or
sbb
rcl
lahf
out
jp
xor
repnz
or
rcrb
aaa
dec
inc
cld
cmp
pop
int
movsl
cwtl
xorl
cmp
sbb
xchg
xchg
sbb
add
out
push
fs
push
popl
add
clc
inc
iret
add
stos
aad
sbb
adc
or
sbb
inc
outsl
add
jp
inc
das
add
repnz
fnop
xchg
push
jns
sbb
mov
loopne
inc
add
jne
and
and
int3
call
adc
scas
mov
adc
push
jge
add
cmc
cmp
mov
insl
xor
mov
mov
add
hlt
ja
cld
add
icebp
xchg
sbb
roll
sub
iret
cmp
faddl
push
xor
add
sub
in
loop
inc
add
lock
inc
test
push
out
push
pop
pop
jbe
outsl
cwtl
fdivr
mov
mov
cld
iret
and
popf
add
jae
into
jb
rolb
movsl
pop
inc
dec
lcall
pushl
insb
rorb
or
add
fs
adc
cmp
lret
mov
jmp
les
and
sub
aas
add
data16
xchg
xchg
rol
lea
shrb
gs
mov
addl
xor
stos
adc
test
add
lcall
fmull
lea
into
mov
stos
hlt
sbb
cmp
jle
cwtl
fidivrs
pop
repz
or
rorb
std
add
jae
sub
cmp
pusha
xchg
repnz
clc
push
or
sbb
add
dec
jmp
push
sub
cmp
push
mov
lods
pop
xorb
div
dec
xor
ds
cltd
stos
iret
test
and
or
sbb
xlat
mov
xorb
cmp
xchg
mov
mov
jle
ror
into
mov
add
adcl
sahf
jne
imul
xchg
adc
cwtl
sub
or
adc
add
ror
in
test
stos
and
adc
movsl
jo
push
add
cld
addr16
xor
into
pop
fmuls
lods
pop
shl
sbb
mov
out
or
leave
inc
dec
ficoms
xor
inc
ficoms
movsb
das
jns
dec
loope
xor
mov
sbb
pop
xchg
add
push
jnp
arpl
xlat
movsl
aad
test
aam
pop
mov
jno
lea
int
cmp
imul
xchg
and
add
lcall
and
xor
fucomi
pusha
xor
dec
scas
cmp
pushf
add
or
xchg
push
add
sahf
adc
xchg
cli
cmp
lock
mov
add
repnz
push
adc
jbe
sbb
inc
xchg
add
repz
or
push
add
adc
fiaddl
jg
mov
mov
iret
inc
cli
inc
stc
xchg
roll
cwtl
shlb
daa
icebp
cmpsl
ffreep
loope
rcrb
dec
mov
and
mov
dec
int
jge
shll
scas
or
jno
daa
fcoms
and
push
dec
bound
ror
push
inc
adc
or
mov
repnz
pop
sahf
xchg
sarb
cmp
les
cmp
cmpsb
pop
mov
mov
jbe
int
add
push
es
xchg
movsl
push
add
jno
xchg
push
int3
fidivl
cli
add
int3
jl
xchg
stos
push
aas
int
dec
jne
mov
adc
pop
xlat
cmp
cmpsb
jns
push
mov
mov
ret
fmul
pop
inc
push
xchg
mov
add
incb
fcoml
jno
xor
mov
add
sti
or
xor
xchg
xor
inc
dec
cli
inc
les
mov
sub
push
imull
sbb
jecxz
pop
push
xchg
loop
adc
mov
and
jge
cli
mov
in
or
and
sbb
testb
add
jmp
out
inc
nop
imul
cmpsb
jp
data16
bound
sub
test
push
push
jb
imul
daa
push
and
add
enter
sub
rcll
add
ja
ds
shlb
ficomps
arpl
adc
add
adc
mov
add
adc
sub
rcrb
push
das
add
xor
add
push
popf
xchg
push
mov
push
ficoml
add
jo
add
dec
jno
add
jp
inc
and
xor
iret
data16
cmpsb
testb
cld
mov
cmpsb
push
adc
or
js
rol
stos
mov
pop
sbb
out
nop
ja
shll
int
inc
or
mov
cmp
add
push
inc
mov
aaa
mov
sub
jo
pop
xchg
lock
pop
loope
popf
pop
and
sub
fiaddl
call
jge
movb
xchg
cs
mov
mov
xchg
jmp
icebp
xor
cmp
cmpsl
out
shlb
fcomps
add
mov
in
imul
cli
push
andl
add
adc
add
outsb
adc
out
inc
in
add
fldl
mov
xchg
ret
xorb
leave
adc
ss
fldenv
push
js
iret
roll
adc
loop
add
dec
adc
into
xchg
sbb
fwait
xchg
xor
dec
data16
mov
les
or
add
or
jb
pusha
xchg
inc
out
push
mov
cmp
cmp
xchg
sub
pop
pusha
pop
dec
add
rclb
aas
sarl
outsb
test
fimull
or
adc
jnp
fidivs
jae,pt
cmpsb
push
pop
add
pop
or
add
clc
in
jp
jbe
stos
les
jmp
add
push
sbb
sbb
and
frstor
adc
lds
cltd
inc
js
gs
out
hlt
mov
shlb
fidivs
mov
push
pop
or
jb
sbb
outsl
and
lea
sub
outsb
and
sbb
jge
adc
out
in
pop
sbb
add
mov
jns
fcoms
clc
push
push
cwtl
das
inc
call
popa
stos
inc
call
sbb
ret
lahf
xlat
dec
andb
jb
aaa
mov
imul
mov
addr16
and
mov
sahf
or
ret
mov
loope
adc
ret
std
stos
out
cmpsl
and
and
mov
ss
js
add
pop
es
jns
leave
add
mov
mov
bound
pusha
jge
mov
xor
jo
push
mov
imull
lea
jo
dec
adc
mov
repnz
pop
adc
pushf
stos
jge
rolb
fcoms
sub
gs
fnstenv
fdivrs
mov
add
add
cmp
repnz
cmp
ljmp
enter
repnz
insb
pusha
and
lcall
flds
int3
lret
add
rcl
and
add
les
in
int3
push
sbb
adc
repnz
mov
js
push
testl
mov
dec
and
xlat
add
jp
xchg
add
sbb
push
fldt
mov
mov
push
sbb
lods
xchg
xlat
xor
je
pop
testl
and
lds
fnstenv
test
call
xchg
inc
lds
scas
jnp
push
push
inc
add
cmp
mov
in
out
scas
rcrl
cmp
fs
sbb
mov
js
add
ret
mov
in
loope
call
aam
adc
in
movsl
cwtl
adc
mov
mov
push
jle
sbb
adc
jmp
loope
sub
jns
jns
pop
popf
add
ja
fisubrs
je
dec
and
dec
insl
and
pop
push
jae
pushf
jmp
leave
cmpsb
fidivl
jp
ficompl
or
push
xor
rcrb
pop
addr16
loop
stos
pop
test
push
dec
cmp
clc
add
cltd
sbb
mov
js
inc
mov
jmp
bound
lods
addb
pop
aad
stos
cmpsb
scas
repnz
in
xchg
pop
das
mov
add
stos
icebp
mov
jnp
add
nop
and
lods
pop
mov
in
add
push
shll
data16
push
xchg
push
cmp
add
fldcw
stos
divb
cmpsb
iret
add
aaa
clc
xchg
imul
mov
push
dec
push
mov
data16
jp
test
add
sbb
lock
pop
rcl
adc
stc
jl
int
nop
xlat
xor
or
or
sub
lret
adc
sbb
outsl
ja
adc
pop
pop
lret
and
icebp
out
and
push
xchg
dec
and
std
jno
sbb
mov
outsb
test
ja
lock
repz
imul
arpl
jne
into
mov
mov
or
mov
fadd
test
lock
mov
cltd
lods
jmp
and
inc
subl
pop
gs
sbb
and
sbb
add
jns
inc
xor
loope
add
imul
add
dec
enter
mov
ficoms
lret
fistpll
mov
sub
xor
dec
dec
std
ror
adc
xor
call
in
fdivrl
fdiv
arpl
add
mov
mov
jo
out
repz
mov
movsl
pop
add
sbb
add
xchg
jno
xlat
or
ja,pt
sbb
add
and
icebp
stos
mov
add
js
nop
fisubl
addl
cmpsl
push
inc
sub
add
inc
jae
add
pop
roll
sub
int3
cltd
movsb
pusha
testl
pop
sbb
xchg
ret
imul
and
add
ss
lods
daa
push
add
mov
sub
jbe
sti
xor
add
iret
push
xor
jns
movb
inc
xchg
inc
outsb
incb
fdivrs
push
dec
adc
div
dec
and
add
popf
jle
xor
dec
cmpsb
cmp
and
movsb
sub
jno
cmp
adc
jmp
mov
sbb
scas
pop
outsl
pop
repz
sbb
dec
mov
mov
and
sbb
lods
pop
arpl
cmp
enter
lret
or
fnsave
mov
fadd
xor
repnz
lcall
sti
bound
jae
cmp
xor
int
roll
popf
cmpsl
sbb
add
jp
or
adc
mov
and
mov
or
push
test
add
nopl
fadds
mov
jb
ds
add
test
add
dec
arpl
lds
out
popf
imul
sti
dec
icebp
add
test
jns
add
gs
adc
and
pop
popw
inc
or
lcall
imul
cmp
imulb
scas
cmpsb
pop
dec
push
jno
popa
das
movsl
sub
outsl
pop
pop
xchg
mov
cld
fimull
mov
pop
dec
mov
jl
push
pop
inc
cmpsb
xor
mov
addb
jns
js
test
cmp
jo
loope
jae
pop
xchg
add
dec
push
les
rorb
jecxz
or
add
inc
jae
clc
mov
roll
adc
iret
inc
dec
jg
add
mov
add
popf
xchg
add
in
xor
or
lcall
icebp
sarb
scas
cmp
mov
inc
and
mov
aaa
mov
scas
sbb
mov
imul
inc
inc
out
xchg
imul
scas
xor
popl
ja
repnz
xchg
data16
sub
mov
xchg
xor
push
aam
jo
cmc
mov
add
mov
xor
inc
mov
inc
imul
aas
and
xor
inc
movsl
cmp
inc
xor
adc
stos
fsubp
push
xchg
inc
daa
jns
ret
lds
add
ret
sbb
mov
sti
lahf
mov
push
mov
mov
jle
pop
bound
adc
fsubs
scas
jb
xchg
cmp
xchg
cmc
adc
dec
xlat
cmpsl
in
pop
fdivrs
idivl
mov
jp
mov
mov
xor
out
mov
push
mov
jl
cmc
and
pusha
out
xchg
into
ljmp
aad
sbb
in
xchg
les
fisubl
jb
or
add
mov
or
add
xchg
adc
xchg
mov
cltd
rcrl
xor
sub
xchg
cmp
enter
jbe
ficoml
sbb
or
out
jp
or
dec
lea
jns
push
std
lcall
add
jae
xchg
stos
fldenv
or
or
jnp
data16
int
add
push
sbb
les
dec
and
das
or
pop
and
add
incb
loop
jle
inc
push
mov
add
adc
sti
mov
dec
icebp
add
inc
jmp
jp
movsb
add
lock
adc
add
push
adc
lods
sbb
loopne
test
push
mov
push
aam
adc
mov
add
rcrb
mov
pop
mov
lret
inc
add
add
ljmp
adc
or
add
in
rol
sub
push
roll
add
mov
movl
cmp
inc
mov
dec
inc
outsb
inc
pop
add
nop
cld
rcl
jbe
and
xor
loop
fiaddl
cmpsb
mov
inc
data16
pop
inc
mov
adc
aaa
cmp
jp
inc
dec
cmp
and
push
jle
pop
sub
jg
inc
and
mov
cmpsl
sub
add
es
jbe
mov
add
and
les
lcall
mov
and
lds
xchg
jae
adcl
add
je
aam
xchg
sahf
adc
push
inc
mov
stc
pop
xchg
fisubrs
sbb
add
xor
fimull
xchg
pop
adc
sbb
adc
mov
loop
out
movsb
leave
or
inc
push
add
mov
faddl
xchg
mov
add
movsb
addr16
adc
add
xor
int
mov
rcrl
sbb
aaa
and
jae
jp
ficoml
inc
jg
orl
adc
xchg
enter
andb
rcll
dec
add
xchg
sub
testl
lret
jmp
xor
ret
rcr
repnz
mov
cmp
sbb
mov
jmp
test
add
fmulp
push
cmp
leave
sbb
das
pop
add
loopne
pop
mov
sub
mov
adc
or
add
sbb
add
int3
mov
js
fxch
scas
mov
fsubl
xchg
sbb
je
notl
in
bound
jae
jg
adc
out
jmp
and
addr16
mov
push
dec
add
xor
bound
sub
add
je
adc
imul
call
pop
in
push
add
pop
jb
adc
sahf
loope
movsb
pop
lcall
add
out
add
ret
add
inc
xor
es
fisubs
mov
stc
test
addl
jne
imul
add
daa
sbb
xlat
mov
jae
add
add
sub
xor
push
fnsave
xor
dec
dec
xor
mov
fdivrp
lret
fiaddl
out
push
icebp
cmp
es
fstps
jne
inc
lahf
test
cmpb
jge
dec
movsb
js
cmp
and
clc
xor
icebp
xchg
xchg
lret
jne
popa
out
faddl
rorb
pop
repz
add
xlat
add
sbb
adc
call
mov
dec
iret
sbb
push
sub
nop
inc
and
mov
mov
mov
mov
andl
adcb
mov
inc
rolb
test
push
lds
ret
std
cld
inc
add
add
cmpsb
or
mov
sbb
add
add
scas
lds
mov
pop
ds
or
or
dec
add
nop
xchg
add
das
lcall
pop
pop
pop
cld
in
or
sub
dec
jno
adc
cmpsl
add
xchg
pop
cmp
mov
arpl
adc
sub
jns
add
leave
jae
cmpsb
aad
add
mov
cmp
daa
int3
jae
movsb
add
mov
inc
sub
add
aaa
outsl
clc
lea
add
icebp
add
jns
lret
pop
add
mov
repnz
mov
cli
or
add
das
mov
rclb
cmp
add
inc
mov
pop
fistpl
lds
jb
sbb
add
cwtl
or
jne
into
mov
cltd
dec
mov
fs
lret
cmp
adc
or
lea
ds
mov
mov
jnp
lret
lods
inc
xchg
fidivs
cmc
add
adc
sbb
cmp
out
std
fdivrs
fnstenv
jne
aaa
test
mov
jb
fisttpll
jnp
mov
roll
aaa
lret
adc
xlat
sbb
stos
inc
enter
inc
fadds
add
cmp
std
dec
jg
jns
lods
mov
pop
je
xchg
addr16
xorl
lret
inc
lods
sbb
inc
jp
mov
jecxz
add
je
ficompl
jne
rolb
jp
sbb
hlt
jmp
mov
fmuls
aad
push
out
push
cs
in
roll
mov
pop
dec
dec
outsl
adc
aas
aad
mov
int3
dec
stos
xor
ret
fildl
sbb
mov
stc
sbb
in
call
xor
add
or
cmp
push
enter
jecxz
out
rolb
cmp
add
scas
les
add
lcall
lods
adc
add
or
jp
cmp
enter
out
and
fildll
add
icebp
sarb
pusha
or
push
mov
sbb
add
cmc
cld
jl
leave
test
shlb
fbstp
jle
test
adc
std
pop
and
mov
cltd
pop
jns
or
fsubp
clc
mov
fmull
mov
insl
fdivrs
fisubs
pop
imul
mov
leave
sbb
leave
aas
loope
add
xor
adc
cmp
and
decb
inc
add
adc
add
aad
push
xchg
and
lock
inc
aad
insl
bound
lcall
clc
pop
cld
or
aad
push
movl
popf
call
dec
dec
test
add
pushf
shl
aad
pop
iret
add
out
mov
rorb
das
and
loop
orl
imull
mov
ficomps
and
fwait
cmp
jle
lods
add
mov
scas
push
cld
mov
movsb
push
jns
push
mov
mov
dec
int
push
pop
test
enter
sbb
lods
sbb
push
jno
adc
cmp
outsb
fcmovnbe
add
ficomps
sub
fmuls
push
push
xchg
pop
push
xor
cmpsl
add
stos
mov
fisubs
mov
push
popa
in
cmp
add
mov
out
push
add
push
out
insb
adc
sbb
mov
add
lcall
lds
repnz
jmp
add
xchg
jl
mov
and
jb
imul
mov
mov
mov
outsl
movsb
stos
int
aad
jne
cmp
and
mov
add
mov
sti
dec
add
jl
out
scas
adcl
add
lock
fidivrs
inc
push
push
lods
sbb
bound
add
xchg
or
jp
push
icebp
xchg
gs
adc
mov
out
sti
add
out
push
fidivs
add
jle
rcrb
jnp
loop
cmpsl
cwtl
xor
add
jp
mov
mov
pop
leave
mov
dec
outsl
and
test
adc
iret
in
pop
shl
addr16
jl
incl
jnp
icebp
stos
xchg
aaa
dec
lods
add
adcl
cmp
lock
daa
fdivs
or
pop
adc
ficomps
adc
icebp
mov
push
mov
repnz
jb
fcoms
inc
popf
inc
ss
roll
add
arpl
cmp
sub
pop
mov
fisubs
popf
rclb
push
inc
rcr
sbb
push
popa
pop
mov
leave
sbb
sbb
mov
cli
xchg
lcall
test
mov
jo
adc
clc
cs
adc
mov
stos
shl
ret
popa
adc
cmpsb
pop
gs
pop
or
fists
lret
stos
xlat
sub
js
fwait
lcall
adc
lea
jle
pop
inc
lods
jae
pop
xchg
stos
jno
sub
jp
or
sbbb
fcmovnbe
repnz
sbb
pusha
push
addr16
mov
shr
mov
loop
cmp
mov
jns
cmp
fists
cmp
adc
jae
mov
popf
adc
bound
xchg
push
rclb
mov
lret
cmp
xchg
xor
pop
divb
xchg
ret
or
mov
clc
stos
jns
mov
cmpsb
orl
mov
cmp
popa
lret
xchg
cltd
jmp
rcll
pop
jg
or
pop
ret
mov
push
inc
orl
pop
adc
jmp
fwait
mov
push
fbstp
out
jg
loope
inc
xchg
jmp
mov
sahf
sti
fldl
orb
xchg
dec
shll
faddp
push
std
push
lahf
mov
cli
push
fld
mov
adc
repnz
pop
ret
clc
bound
rcll
nop
xor
pop
cli
loop
mov
xchg
adc
sbb
pushl
cmpsl
nop
arpl
imul
push
loop
jnp
pop
jae
sbb
mov
faddl
mov
cld
fcoml
mov
gs
out
mov
loop
ljmp
adc
out
lret
cltd
stos
inc
xchg
dec
cmpl
ret
push
pop
fadds
mov
cld
and
in
ficomps
bound
dec
aad
dec
jnp
cmp
pusha
rcl
sarb
pop
or
xlat
insb
or
dec
xor
ror
lret
bound
loopne
or
mov
icebp
stos
std
inc
sbb
xchg
ret
inc
jnp
pop
push
inc
iret
ja
scas
pop
jg
mov
pop
int
cmp
jle
inc
cmpsb
and
sbbb
js
sbb
push
adc
pop
ljmp
lret
fisttps
nop
ljmp
int
stos
bound
pushf
dec
cld
rcr
push
rorl
rcl
pop
jmp
popf
fwait
pop
mov
jo
rcr
cmc
pop
xchg
dec
or
sahf
ret
jb
dec
subb
and
repnz
pop
push
xchg
stc
shrb
mov
jae
incl
mov
mov
xchg
fs
sub
ja
dec
nop
or
xor
mov
sar
lods
jnp
out
sbb
inc
mov
xchg
popa
lret
stc
cwtl
pop
jp
mov
dec
popf
lds
in
pop
push
fstl
push
mov
add
ret
pushf
shlb
jae
and
xchg
cmp
call
ljmp
nop
sbb
push
aam
or
mov
mov
mov
xlat
xchg
mov
jl
out
jmp
cltd
icebp
mov
stos
int
jae
js
push
push
stos
inc
in
repnz
stos
addr16
lcall
push
inc
sub
shlb
dec
push
inc
js
inc
mov
lret
cmp
mov
mov
lcall
push
mov
ljmp
test
mov
push
sbb
bound
xchg
push
mov
stos
pop
mov
mov
repnz
mov
pop
lcall
pop
faddl
aad
pop
lret
mov
xlat
imul
rolb
push
pop
mov
lcall
pop
ror
adc
ret
jp
inc
jno
sub
mov
mov
push
jg
clc
sub
inc
adc
xchg
ror
enter
push
jnp
adc
mov
add
mov
rcll
sbb
ds
mov
aas
mov
inc
cmp
ret
push
repz
mov
fwait
dec
sbb
adc
rclb
ret
or
ret
fbld
ret
popa
xchg
cli
ret
ret
repz
lret
jecxz
fdivp
jp
shlb
jmp
lcall
lret
insl
mov
sbb
push
dec
js
leave
loop
mov
pop
ljmp
pop
sub
add
xlat
jbe
jmp
lods
mov
mov
sbb
andl
arpl
mov
push
inc
pusha
int
push
out
adc
fmuls
ret
push
loope
btc
mov
ss
test
pop
js
mov
mov
sub
pushl
push
bound
cld
jge
aaa
lret
xor
pop
mov
test
call
xchg
xchg
es
mov
adc
fucomip
adc
jmp
push
push
mov
pop
dec
fstpt
adc
jg
testl
adc
js
dec
sti
xlat
and
cmpl
adc
movsl
dec
or
push
nop
pop
jg
cmc
mov
rcrb
mov
sub
and
sbb
shl
call
push
sbb
cli
inc
aad
mov
pop
dec
insb
fists
dec
mov
push
adc
scas
jb
ljmp
pusha
or
adcb
mov
jmp
sti
sbb
repnz
stos
aad
sbb
imul
jp
fsub
rcrl
mov
cs
jb
inc
sbb
mov
xor
sbb
sar
jmp
sub
pusha
pop
std
mov
push
jp
dec
insl
mov
dec
mov
cld
adc
aad
push
fst
shr
mov
inc
lcall
inc
sbb
mov
sbb
xor
ds
movl
dec
adcb
outsb
sti
dec
imul
sbb
mov
dec
fneni(8087
lcall
cmc
push
ljmp
mov
lret
jp
adc
fsts
loope
out
mov
mov
es
gs
lcall
push
cmp
adc
inc
inc
sti
ret
xchg
dec
pop
arpl
push
shlb
loop
push
adc
orb
mov
lret
push
sti
mov
insl
cltd
xchg
jmp
imul
flds
pop
mov
xchg
mov
xchg
adc
push
sbb
inc
mov
pop
adc
mov
jl
and
mov
jns
lods
repz
add
mov
aad
jo
ret
ljmp
mov
fstpl
ret
inc
inc
decl
push
jmp
rcll
dec
imul
or
pop
in
cltd
addr16
push
inc
js
dec
and
xchg
dec
jo
pause
jo
icebp
lret
fxch
add
xor
fcomps
dec
sbb
sub
orb
cmp
mov
cli
ret
repz
insl
dec
or
mov
dec
roll
jecxz
mov
shll
inc
xchg
jae
lcall
iret
pop
jnp
push
in
pop
dec
fwait
rcll
xorb
loope
add
xlat
jb
out
inc
dec
push
sahf
adc
sbb
fistpl
cmp
int3
jnp
pop
sbb
push
adc
dec
fwait
stos
sti
cmp
jnp
mov
jge
ret
adc
dec
sbb
sbb
int3
testl
push
stos
lcall
xchg
mov
mov
mov
xchg
cmp
xchg
sbb
cmp
xchg
ret
fldl
loop
test
jg
loop
sar
sbb
cli
xorl
dec
or
pop
repnz
stos
push
call
test
mov
jbe
enter
sahf
stos
icebp
adc
mov
adc
jns
and
jnp
int
adc
cli
outsb
jno
stos
ret
mov
jg
repz
cmp
or
mov
pop
jge
xchg
arpl
jp
adc
push
xchg
int3
subl
inc
sub
decl
lds
enter
push
push
lret
mov
sti
lock
pop
ret
add
movsb
jmp
psllw
ror
mov
push
cmp
push
rcrb
sub
pop
cli
loop
jb
popf
rcrl
mov
fistps
fwait
mov
adc
cltd
or
mov
dec
in
xchg
jnp
out
sbb
subb
lret
stc
add
push
cltd
fbstp
pop
iret
jae
jnp
cmp
dec
adc
xor
xchg
rcll
mov
pop
ljmp
jno
ret
daa
loop
push
add
fwait
add
lods
sbb
pop
rcrl
cmc
push
ret
mov
test
arpl
in
jmp
repnz
lock
dec
sbb
stc
frstor
fmuls
sbb
js
sbb
dec
adc
mov
movsb
mov
stos
inc
mov
icebp
fs
jg
lret
sbb
clc
stos
sbb
aam
and
dec
pop
dec
push
rolb
mov
mov
in
push
mov
in
sbb
mov
pushf
mov
adc
cmovo
fildl
lcall
mov
jae
das
pop
dec
test
inc
push
frstor
adc
sbb
dec
cmp
adc
jb
pop
fwait
push
pop
dec
stos
sub
cld
lahf
negb
xorl
or
mov
ud0
mov
or
dec
daa
pop
sti
lret
push
aas
outsb
jns
lret
mov
shl
sarb
jp
push
pop
jnp
mov
jbe
adc
ret
or
push
jmp
rcrb
cli
sub
pop
or
lds
pop
jmp
pop
pop
jno
sbb
movsb
mov
cltd
mov
js
inc
mov
iret
or
adc
aas
xchg
std
lret
dec
fisttpll
out
xchg
sbb
jmp
fistpl
cltd
call
stos
js
stc
push
adc
jns
xchg
popf
out
out
test
imul
jmp
jo
icebp
sbb
inc
inc
mov
rolb
mov
sar
jnp
frstor
jnp
pop
ret
cmp
cli
pop
push
or
inc
jmp
cwtl
mov
mov
jae
pusha
test
mov
outsl
ret
mov
mov
in
xchg
ret
mov
cmpsb
int
pop
loope
xchg
inc
cwtl
repnz
jns
sbb
lret
mov
loop
pusha
cltd
or
add
adc
jecxz
clc
bound
repz
mov
repnz
add
mov
push
xchg
jp
xchg
adc
push
xor
pop
lret
dec
ja
xchg
pop
mov
jo
lds
mov
dec
push
mov
mov
push
pop
xchg
push
in
orl
cmc
xor
fwait
pop
pop
mov
jae
sub
aas
stos
jmp
pusha
out
mov
mov
sbb
mov
insl
adc
inc
cli
xor
sti
xchg
mov
mov
push
xorb
sbb
cli
xor
push
lret
ret
or
nop
sbb
push
notl
jae
jne
cmc
leave
sbb
mov
lcall
mov
cld
jo
push
or
ret
push
xchg
sarb
mov
popa
mov
outsl
arpl
ljmp
cld
dec
xor
mov
iret
adc
mov
xchg
mov
test
pop
negb
push
mov
xlat
test
adc
dec
jae
ret
lret
sbb
jno
xor
ret
das
add
xchg
sub
loop
and
out
add
pop
pusha
ljmp
stos
fwait
sbb
xchg
jnp
inc
xchg
push
pop
loope
rolb
gs
fnstsw
jno
dec
mov
cmp
ljmp
rep
lds
orb
int3
push
inc
mov
out
inc
pop
xchg
lret
pop
xchg
adc
xor
out
xchg
js
leave
adc
aam
dec
or
int
mov
or
inc
mov
decl
inc
dec
dec
stos
mov
fcmovnb
ret
mov
fildl
jo
xchg
adc
out
jp
fwait
sbb
dec
and
fldt
dec
filds
mov
fcmovb
push
jmp
pop
mov
loopne
pop
es
stos
push
jp
jo
fcoms
jb
jns
jnp
push
push
adc
jo
mov
mov
out
in
out
dec
test
dec
cli
stos
jae
stos
push
push
sbbl
mov
or
inc
sub
sub
xchg
mov
and
adc
insl
or
pop
xchg
inc
sbb
dec
jae
icebp
ss
xchg
cwtl
xchg
xchg
sbb
into
sub
xchg
rcrb
pusha
arpl
jo
incl
pop
popa
repnz
aaa
cli
arpl
dec
jne
or
hlt
popf
shl
hlt
mov
scas
loope
sahf
pop
mov
lret
jmp
or
adc
sbb
repz
cli
jno
adc
jb
cli
mov
xlat
ljmp
push
lret
adc
cmp
pop
insl
xorl
mov
xchg
and
cmc
sbb
xchg
jnp
imull
js
adc
mov
adc
ljmp
std
mov
lret
out
or
push
jb
mov
push
dec
xchg
sbb
loop
adc
adc
insb
or
pop
sbb
mov
test
ret
sub
jmp
inc
pop
push
adc
andb
lcall
test
ret
cmp
shr
mov
iret
rclb
aas
into
mov
sub
cmp
mov
lret
sbb
push
ret
shl
dec
mov
bound
adcl
addr16
pop
ret
jecxz
mov
shrl
or
push
push
push
arpl
loop
push
push
repz
pop
inc
rclb
or
ljmp
imul
cli
cmp
nop
or
add
ljmp
popf
mov
arpl
cli
push
jg
jmp
rcr
mov
push
push
int
lock
inc
pop
push
std
adc
loopne
btr
mov
push
inc
inc
sub
arpl
aam
inc
xor
sbb
movsb
int3
xchg
popf
mov
or
dec
adc
pop
adc
mov
stc
add
jb
repz
mov
dec
movsl
je
jnp
jae
mov
fs
push
adc
repnz
jne
int
mov
add
dec
cs
dec
push
dec
imul
imul
insb
adc
and
jmp
aad
test
xchg
or
hlt
dec
lret
pusha
mov
in
adc
aas
stos
lret
es
xchg
inc
inc
mov
or
data16
mov
mov
xrelease
popa
xchg
loopne
pusha
cmc
ljmp
push
stos
push
dec
pop
and
dec
ja
pop
push
lods
andl
mov
xchg
ret
in
fdivrp
adc
adc
frstor
mov
jle
adc
ret
fst
aam
mov
adc
loope
sbbl
stos
xchg
push
pop
mov
pop
mov
push
subl
push
jno
sar
xchg
pop
push
std
loope
fisttpll
push
out
addr16
cwtl
sbb
arpl
lea
add
or
pop
mov
jmp
stos
leave
dec
mov
jb
dec
mov
jl
add
adc
lea
jb
push
cmpsl
push
shr
and
outsb
ret
mov
subb
aad
pop
lret
call
xchg
push
mov
test
xchg
jge
adc
lods
lret
mov
stc
inc
sbbb
jmp
inc
bswap
pop
inc
imul
sbb
adc
pop
push
inc
jmp
mov
cltd
mov
ret
dec
stc
mov
pop
je
push
sbb
push
and
dec
and
jge
fidivrl
adc
bound
jnp
cmpsb
mov
xor
test
or
cmp
jg
loope
adc
push
hlt
sti
cltd
pop
ljmp
shll
add
adcl
jae
xchg
dec
add
fnstsw
ja
mov
sub
mov
std
cli
dec
sbb
adc
push
jmp
mov
add
sti
mov
jnp
mov
js
mov
jle
stos
sub
stc
inc
stos
ret
sbb
mov
lcall
call
int
dec
pop
arpl
pop
dec
jb
push
fstpl
lcall
lock
cmp
adc
ret
xchg
mov
inc
dec
push
lret
sarl
rclb
and
pop
jecxz
jo
stc
push
pop
adc
xor
int
rorb
xchg
lret
enter
push
and
dec
mov
jnp
push
aaa
sub
lret
xchg
mov
cli
xchg
jecxz
push
adc
push
loopne
ret
xchg
test
jns
popa
or
pop
jge
inc
mov
dec
push
sbb
push
mov
mov
cmp
aad
mov
dec
ret
cli
xchg
out
push
jmp
jbe
pop
mov
sbbl
inc
dec
xor
aad
jp
sbb
jnp
adc
es
imul
fwait
or
push
pusha
inc
cmc
repz
add
or
push
rclb
jb
js
inc
out
mov
mov
push
cwtl
mov
negl
push
incb
adc
add
loop
mov
sub
push
dec
dec
insl
imul
inc
dec
imul
cltd
push
cmp
icebp
ljmp
xchg
xchg
test
fistps
cli
repnz
scas
mov
loopne
and
cli
inc
mov
scas
sub
push
inc
loop
js
pop
inc
adc
pop
push
dec
roll
sbb
aaa
cs
js
push
call
inc
adc
cmpl
fcompl
dec
cli
cmp
add
movb
adc
cmpb
faddl
mov
add
pop
imul
xchg
xchg
pusha
dec
lahf
lret
cmpsl
dec
inc
inc
rorb
lret
add
mov
inc
cmp
shr
js
lret
mov
mov
add
mov
adc
jo
std
jae
lods
js
lret
mov
pusha
stos
mov
std
dec
and
pop
lret
dec
stos
or
test
dec
mov
jp
pusha
das
dec
ljmp
jecxz
jecxz
lret
or
stc
cli
adc
dec
loop
clc
pop
jb
mov
dec
pop
pop
mov
mov
pop
cwtl
stos
mov
std
sub
js
rorb
adc
jnp
mov
pop
pop
or
cli
test
imul
adc
pusha
mov
push
cmpsb
cmc
gs
lret
push
push
push
cmpsl
lods
sbbl
dec
mov
fwait
pop
ret
insb
aad
jb
mov
shrl
fdivs
xchg
lret
inc
mov
imull
pop
nop
jo
stos
mov
xor
add
jl
icebp
add
mov
push
jb
cmp
repnz
pop
mov
push
mov
adc
jae
int
ljmp
lods
cwtl
test
ret
mov
mov
pop
rcll
jae
stos
or
jecxz
gs
adc
pop
sbbb
xor
andb
xchg
arpl
lret
dec
inc
dec
jae
sbb
jecxz
mov
rol
lahf
ret
lret
lret
mov
outsl
int
mov
pop
inc
loope
cli
dec
sub
in
out
js
ret
popf
pop
pop
stos
je
cmc
inc
psubd
inc
stc
pushf
jo
cmp
pop
test
mov
xchg
ror
push
jecxz
shll
pop
cli
adc
adc
ret
rol
fstpt
into
xchg
push
mov
lret
xchg
jecxz
scas
pop
jo
xchg
mov
pop
mov
fstpt
inc
cli
lea
arpl
cmp
xchg
pusha
insb
push
push
loope
jnp
xchg
push
ret
or
jge
repnz
jae
dec
jo
pop
xorl
sbb
lret
cli
adc
mov
sbb
cli
shrd
mov
idiv
call
jmp
cld
bound
dec
cli
push
cwtl
push
dec
shl
sbb
cmpsl
sti
rcll
std
dec
mov
jmp
stos
jecxz
dec
mov
jb
adc
aaa
push
imul
mov
repz
jmp
xchg
mov
mov
ljmp
iret
ret
inc
inc
pop
mov
ret
jae
in
gs
jns
mov
int3
sti
jns
rolb
loop
ljmp
jae
jne
xchg
dec
loop
push
dec
xorl
insb
stos
jecxz
fwait
inc
imul
push
mov
dec
push
mov
jecxz
dec
movsl
repz
shlb
orb
ret
bound
arpl
inc
and
call
and
mov
test
pop
jp
iret
adc
xacquire
imul
mov
into
cmc
jle
adc
mov
dec
test
mov
sbb
push
std
lea
int3
ret
sub
jae
xchg
hlt
inc
js
cmc
mov
jo
arpl
lods
sti
cwtl
cli
adc
cmp
pop
outsb
mov
fisttpll
shlb
or
icebp
sti
sbb
stos
sti
fs
lods
int
dec
mov
jo
ret
push
mov
cli
pop
or
ljmp
dec
jecxz
loop
sar
xor
out
or
cli
inc
sarl
test
dec
mov
pop
dec
js
ret
jp
mov
ljmp
repnz
hlt
adc
mov
fs
pop
pop
stos
arpl
jecxz
repz
inc
iret
scas
mov
xor
ja
lds
subl
cltd
ss
lret
jecxz
arpl
cld
fdivl
push
cltd
sub
lret
jo
ljmp
stos
shr
mov
sbb
pop
mov
cltd
dec
cli
cmc
ret
pop
enter
dec
sahf
xchg
adc
pushf
cmp
cmp
or
or
dec
adc
push
inc
shlb
das
mov
sahf
dec
dec
repz
push
imul
mov
pop
aam
adc
mov
sbb
sbbb
arpl
jnp
test
fcmovnb
ret
popf
mov
pop
and
aas
dec
dec
xlat
jecxz
mov
fmulp
fwait
js
or
lret
jne
sbb
shlb
jp
sti
bound
cmp
lahf
inc
mov
inc
pop
or
pop
lret
or
push
dec
mov
jge
xchg
mov
sti
adc
xchg
out
popf
loop
sbb
loopne
ret
mov
fstpl
jo
or
mov
mov
mov
fstpt
adc
pop
lcall
inc
jge
mov
aas
push
jb
mov
sbb
mov
lahf
sbb
sub
lea
mov
fs
dec
add
rcrb
pop
hlt
xchg
jnp
ret
lock
stc
pushf
jnp
rcr
mov
lret
jno
or
jno
mov
out
inc
inc
pop
imul
or
or
push
xchg
pop
mov
mov
mov
jp
xchg
scas
dec
mov
mov
hlt
jb
push
pop
mov
lret
jecxz
into
add
cmpsl
jp
adc
mov
cli
mov
inc
jno
xor
loopne
push
push
mov
stos
or
mov
push
xchg
lods
js
jp
jne
ret
jae
lret
cwtl
inc
adc
lods
xchg
adcl
loope
jns
std
pop
sbb
hlt
bound
mov
dec
cmp
jo
hlt
fistl
adcl
fld
lock
add
pop
stos
lret
inc
xor
jle
inc
xchg
inc
lret
xchg
push
fdivr
adc
sti
nop
xchg
mov
and
adc
test
lcall
inc
bound
jo
subb
cmpsl
mov
inc
arpl
add
test
jmp
ljmp
dec
test
mov
imulb
je
push
lret
stos
push
jae
push
orb
inc
in
inc
ficomps
cwtl
mov
mov
rclb
jg
sbbl
es
sbb
adc
mov
jmp
les
imul
pop
lret
or
ja
std
icebp
mov
adc
pusha
lcall
inc
push
push
shr
xchg
in
inc
ret
dec
jp
rcrl
js
cmp
sbb
sbb
mov
scas
jecxz
fwait
mov
inc
mov
pop
jo
data16
sub
dec
push
ja
cmpsb
cli
mov
lock
push
mov
outsl
push
mov
mov
lcall
mov
dec
dec
lret
lret
add
cld
stos
ljmp
dec
push
lods
jo
scas
shl
and
arpl
filds
hlt
cwtl
lret
cmp
pop
lahf
ror
rcll
fdivrs
repz
test
inc
xchg
rol
ficoms
mov
dec
nop
stc
pop
mov
stos
and
nop
iret
sbb
dec
xchg
outsb
shlb
jecxz
outsb
rcl
jo
mov
call
dec
xchg
clc
xchg
push
xchg
adcb
mov
mov
dec
jb
jmp
mov
inc
mov
repnz
stos
stos
push
mov
inc
or
jb
rolb
fstps
cld
mov
inc
sbb
outsl
mov
aaa
cmp
jmp
push
xor
sbb
mov
pop
sbb
mov
insb
dec
push
jle
mov
fwait
mov
jecxz
lret
push
repnz
out
push
jb
jae
iret
xchg
sbb
stos
stos
push
sub
cmc
mov
cltd
pop
sbb
jmp
inc
or
lods
ljmp
dec
repz
loop
out
rorl
fwait
adc
ret
ret
test
bound
pop
add
mov
sbb
xor
out
jle
or
pop
add
jge
sbb
push
lret
xchg
pop
outsb
inc
imul
ret
rclb
mov
bound
cmp
mov
popa
sti
mov
js
adcl
xchg
adc
or
mov
xorb
pop
js
xchg
imul
lret
arpl
inc
dec
xchg
outsl
cli
xchg
xchg
cltd
lahf
stos
pop
mov
sti
lea
inc
bound
adcl
mov
cld
lds
fs
scas
lds
sbb
and
push
pushf
dec
xchg
xchg
mov
dec
sbbl
mov
imul
sar
sbb
mov
test
test
pop
pop
mov
outsl
fdivrl
or
fisttpll
ret
jecxz
int3
mov
push
xchg
cmp
rcrb
mov
mov
jmp
push
mov
addr16
push
bound
jp
mov
sbb
push
jecxz
loopne
ljmp
ljmp
add
jge
ret
sti
sbb
fildl
or
sub
push
mov
fwait
jns
mov
dec
mov
ret
jno
mov
sub
or
rclb
ret
inc
ljmp
out
inc
xchg
dec
fsubl
cltd
mov
lcall
outsl
push
mov
inc
sbb
std
dec
bound
lret
inc
and
mov
inc
mov
in
imul
sar
mov
jecxz
jae
push
jae
and
cld
and
jns
xorl
mov
sbb
cmpsl
fwait
sub
std
aaa
xchg
inc
mov
mov
xchg
jae
arpl
test
jl
aam
ds
fwait
cmc
inc
lcall
mov
and
mov
stos
loope
js
into
call
jp
stos
jnp
adc
or
repz
lcall
jae
loop
xor
inc
lret
pop
aas
mov
pusha
lock
or
repnz
mov
add
sbb
push
dec
add
lret
repz
jne
pusha
dec
imul
dec
pop
out
lret
cltd
xor
dec
rcrb
rorb
adc
rcrl
mov
in
loope
icebp
sarl
jmp
pop
subb
and
clc
fstps
mov
ljmp
mov
adc
xlat
xorb
jbe
jno
scas
jge
push
sub
jecxz
loopne
cmp
leave
arpl
mov
xor
mov
cs
push
mov
mov
hlt
jae
pop
mov
xchg
gs
push
dec
ret
dec
fsubrs
bound
push
mov
push
dec
lret
or
pop
inc
jmp
cmpsl
mov
push
loop
inc
rcll
out
fiaddl
dec
out
mov
cmpsl
imul
xor
outsl
mov
jmp
fwait
ljmp
pop
negb
mov
push
or
popa
push
fstpt
mov
lret
mov
icebp
sbb
ss
lcall
sahf
mov
push
repz
dec
jecxz
inc
repz
xchg
jp
xorl
aam
pop
dec
hlt
out
lret
dec
sarb
inc
lahf
mov
popf
cmpl
lret
or
dec
pop
or
movsl
adc
stos
repz
inc
stc
mov
inc
pop
sbb
aam
fmul
pop
mov
xchg
jp
mov
enter
dec
ja
jb
jp
repz
dec
pop
repnz
xchg
jb
pop
out
pusha
mov
mov
mov
mov
jecxz
pop
fists
jmp
cs
lds
stos
lods
jle
xchg
adc
ljmp
inc
repz
ljmp
sub
sub
rep
lea
inc
xor
fdivl
out
sti
je
jo
pop
movsb
pop
push
stos
stos
lret
xchg
push
push
hlt
dec
addr16
fdivr
adc
ror
ret
lret
stc
and
pusha
sbb
stos
cmp
arpl
jmp
mov
hlt
mov
mov
stos
inc
mov
mov
inc
repz
push
imul
push
repnz
pop
push
fisubrl
push
inc
nop
or
test
sbb
push
adc
sbb
ret
push
jae
jb
lret
imul
push
adc
sub
jp
adc
loop
jmp
adc
xchg
or
outsl
sbb
mov
sbb
out
xchg
push
jecxz
arpl
ret
inc
sbb
ficomps
inc
das
xchg
nop
jecxz
and
add
xchg
push
fwait
inc
dec
repz
leave
mov
cld
pop
adc
jge
sbb
mov
popf
negl
adc
adc
pop
xchg
mov
fstps
cmpb
in
fnstcw
inc
enter
sub
or
cwtl
push
sti
dec
std
push
stos
cmpsb
mov
iret
inc
inc
pusha
stos
or
sbb
repz
lea
subl
or
lret
push
push
mov
mov
jae
adc
mov
ret
ljmp
add
lret
je
dec
jo
sub
sti
mov
sbb
outsb
jae
pop
out
adc
popa
fwait
cld
inc
mov
pushf
ret
aas
sbb
jne
out
push
lea
mov
xlat
inc
mov
mov
pop
pop
mov
pushf
mov
shrl
push
or
decl
jmp
xchg
mov
cmp
inc
dec
or
dec
fwait
das
xor
xchg
push
push
std
int
inc
jb
dec
ret
xchg
roll
lret
jnp
mov
jp
sti
mov
bound
pop
adc
mov
dec
mov
das
cmpsb
rclb
push
dec
mov
addl
sub
push
mov
ljmp
cmp
aaa
dec
int3
stos
adc
imul
xchg
jo
push
or
repz
xchg
sub
fwait
or
or
fisttps
xchg
sbb
int
andb
push
jmp
push
jecxz
mov
dec
rcrb
test
sbb
fwait
int3
ret
pusha
sbb
jecxz
lods
ficomps
outsl
sbb
clc
dec
jnp
bound
rolb
mov
mov
jp
mov
jae
lahf
in
std
bound
notb
lods
jo
movsb
sti
in
imul
ret
and
xchg
mov
arpl
mov
shrb
roll
fs
sbb
pop
dec
xchg
dec
pop
push
sbb
push
adc
rolb
fistps
jp
stos
adc
pop
iret
mov
cltd
test
lret
cmp
fwait
mov
orl
xor
ljmp
imul
adc
int3
sbb
sbb
mov
pop
js
push
or
inc
repz
sahf
mov
scas
jge
sbb
fwait
jp
cmpl
stc
adc
xchg
or
mov
cmp
jns
sbb
jne
ret
bound
call
pop
test
int3
sar
cmp
mov
push
hlt
jb
loopne
stos
push
mov
test
fwait
jmp
pop
aad
rclb
jo
mov
xchg
js
mov
stos
rcll
orb
lret
pop
or
mov
mov
lret
cltd
jae
idivl
push
adc
push
push
ljmp
loop
lret
inc
aas
fistl
bound
push
idivb
divb
sbb
adc
sbb
stos
or
in
outsb
sti
mov
sub
pop
adc
stos
jle
sub
inc
lret
jge
pop
xchg
dec
stos
divb
mov
jp
insb
inc
push
mov
jnp
mov
mov
push
cmpl
cli
and
jp
fidivs
mov
pop
cmp
push
cs
pushf
cltd
jp
jo
sub
mov
and
sub
add
cmp
scas
jmp
imul
stos
imul
mov
and
out
imul
jno
mov
fidivrs
adc
nop
cmp
int3
enter
lock
inc
xor
iret
icebp
cmc
mov
pminub
jo
int
ret
xor
xlat
mov
xor
pop
repz
cmp
mov
mov
xor
adc
cmp
xlat
cmp
add
xlat
push
arpl
and
jb
test
stos
fistpll
xchg
or
ss
jp
sbb
aas
xchg
and
mov
bound
stos
push
add
or
push
cmpsl
or
shl
xchg
stos
jb
add
mov
imul
mov
mov
sub
sbb
mov
daa
imul
jbe
cmpsl
add
pop
lret
das
sbb
add
push
push
xorb
data16
mov
add
icebp
ljmp
sbb
jae
or
push
jbe
fsubrl
mov
aaa
add
jmp
mov
and
jae
cmp
in
cli
dec
lock
push
pusha
adc
shlb
add
add
stos
fisubrl
and
lcall
rclb
push
push
sbb
test
and
sbb
fistps
or
adc
enter
sbb
popf
sbb
fscale
add
add
add
or
sti
push
popf
push
or
add
and
aam
sub
push
or
jbe
add
into
cmp
sub
aaa
jecxz
sub
xor
and
xor
stos
sarb
cmp
adc
cwtl
les
in
inc
aas
cmpsl
sbb
fdiv
pop
mov
je
adc
mov
push
fiadds
sub
cmp
adc
scas
mov
push
mov
scas
je
adc
mov
push
mov
scas
je
adc
pop
cli
sub
cmp
mov
je
jmp
adcl
je
adc
fists
cli
sbb
sti
add
cmp
pop
je
cs
add
cmp
ficompl
adc
and
cmp
adc
inc
pop
fadd
xchg
sbb
or
jle
ret
push
xor
and
xor
sbb
ret
sbb
lret
sbb
add
push
push
pop
outsb
sub
and
in
fisubrl
mov
je
sub
cltd
add
incb
imul
push
inc
xor
inc
add
icebp
push
mov
imul
add
nop
sub
cs
out
int
jl
es
lret
shlb
cmp
into
test
lcallw
mov
sbb
xor
fnsave
jp
mov
xor
das
andb
adc
pop
mov
bound
xchg
jb
and
sub
les
shlb
cmp
adc
push
cs
fsubr
icebp
popf
ja
mov
jno
fdiv
cmpsb
lea
pop
xor
stos
xchg
add
jae
push
pop
or
jno
jne
add
lcall
add
lret
inc
add
or
pop
xor
imul
pop
push
hlt
dec
repnz
push
add
cmpsb
jae
flds
pop
lret
xor
cwtl
add
and
jbe
and
add
imul
add
lea
push
pop
das
adc
fwait
cmp
xor
arpl
pusha
mov
test
sub
add
adc
repnz
add
xchg
mov
xor
fidivrl
popa
jae
out
cwtl
dec
jp
cmp
or
jnp
sbb
pop
sbb
jae
add
push
rorb
xor
sbb
pop
fisubl
mov
pop
xchg
push
loop
js
xchg
adc
mov
das
xorl
stos
rolb
int
hlt
cmpsb
mov
add
rolb
bound
add
out
jno
jmp
jp
fnstenv
mov
and
add
adc
cli
xor
push
sbb
mov
daa
cmp
ds
or
pop
stos
cmpsb
add
cwtl
xchg
xchg
pop
mov
add
and
push
add
xor
nop
mov
xchg
jge
jns
jo
pop
dec
mov
push
add
mov
jb
adc
ja
jo
mov
xor
pop
push
or
mov
mov
in
outsl
lea
cmp
adc
inc
enter
fsubrs
cmp
lock
push
push
or
xchg
clc
jae
cwtl
jo
adc
lods
inc
das
fiadds
adc
clc
mov
sub
jnp
jge
mov
int
push
cmp
rolb
or
sub
out
jns
add
mov
mov
cs
adc
adc
mov
sub
ljmp
push
cmp
in
icebp
pop
popf
jns
pop
sub
cmp
or
jnp
repnz
es
scas
cltd
dec
pusha
lret
andb
fcom
and
push
jg
jecxz
dec
or
clc
inc
push
nop
mov
pushf
mov
adc
int
dec
mov
repnz
or
mov
dec
add
add
lock
movsb
add
lret
fisttpll
cs
push
or
inc
mov
mov
add
lock
lods
mov
cmpsb
pop
add
or
shll
lock
and
and
add
arpl
adc
test
sub
push
jp
movsb
test
add
xor
add
call
nop
push
pop
jle
or
adcl
pop
repnz
hlt
inc
sub
fnstsw
lret
mov
pop
push
push
popa
add
push
imul
ret
pop
in
gs
aaa
cmp
sbb
fnstenv
push
faddp
and
mov
mov
adc
and
test
lcall
fisttpll
or
pop
add
push
push
shrb
add
lcall
sub
ret
mov
lret
fs
mov
and
add
loopne
cmp
ds
mov
dec
jb
sbb
pause
add
mov
jae
sbb
xchg
mov
sti
into
mov
jno
movsb
jg
fcoms
or
and
cmp
es
in
sub
or
dec
pop
ret
mov
cmp
xor
mov
sbb
imul
fwait
and
xchg
push
xlat
jl
add
inc
stos
mov
xchg
or
add
xchg
push
aad
mov
jmp
stc
mov
mov
lcall
sbb
jg
xor
add
enter
inc
fimuls
jl
push
xchg
sub
or
test
mov
mov
sub
mov
fsts
test
xlat
outsl
mov
or
sbb
jg
pop
das
mov
fsubrs
outsl
push
and
ret
fstpt
test
loope
xchg
xchg
adc
loopne
fcoml
fs
mov
sbb
add
js
xor
sti
add
lcall
pop
push
add
mov
adc
jb
xchg
and
fidivrs
mov
loope
ficoms
cmp
insl
push
xor
fildll
cmpsl
lods
add
add
mov
inc
add
sbb
clc
js
jl
push
lret
pop
xchg
pop
mov
mov
push
xchg
inc
add
jae
inc
and
bound
push
mov
je
and
cmpsl
jb
sub
push
add
icebp
repnz
push
rolb
shl
iret
push
fiaddl
call
jecxz
mov
shlb
jo
sbb
inc
popa
mov
pop
add
cmp
push
out
inc
mov
rclb
aaa
jmp
sbb
leave
imul
mov
in
ds
loopne
add
and
xchg
mov
pop
scas
add
fisubl
add
push
mov
jo
cltd
nop
pop
and
je
fadds
jo
cmp
and
jl
test
add
cli
or
pusha
std
ja
add
and
mov
es
jo
out
test
push
fs
lahf
xchg
mov
popa
xchg
mov
iret
dec
push
mov
dec
xlat
mov
ds
into
loop
cs
pop
nop
jg
bound
jo
inc
sbb
xchg
cmp
fidivl
lahf
and
adc
outsb
add
out
add
pop
in
sub
mov
and
cmc
fcoms
sbb
test
add
inc
jne
mov
add
ror
sub
pop
pop
mov
push
bound
incb
or
stc
adc
ficomps
mov
mov
add
mov
inc
sbb
adc
adc
inc
insb
and
or
add
les
cmp
leave
es
or
add
popa
test
das
add
lds
pop
xor
cmp
jp
or
jecxz
inc
pop
incl
cmpsb
js
sti
cli
ja
mov
sbb
int3
fwait
add
jae
inc
push
bound
stos
add
push
imul
adc
in
ficoms
mov
jge
dec
adc
xchg
clc
mov
xor
sbb
repz
mov
fnstsw
inc
push
xchg
adc
loope
and
jg
cmpsl
jnp
sbb
das
push
ds
sbb
jae
movsb
or
push
and
add
sub
fimuls
sub
fsubl
pop
scas
xchg
adc
push
lret
fstps
cmovns
lret
iret
flds
cld
mov
fadds
fs
rorb
sbb
fwait
shlb
pop
sbb
data16
addb
scas
neg
jb
arpl
mov
scas
cwtl
add
ret
cli
shlb
and
mov
js
adc
xor
pop
cmp
mov
dec
scas
push
fidivs
jle
jns
scas
fcoms
push
ljmp
add
inc
jmp
push
call
mov
cli
sbb
pop
add
fbld
out
les
add
mov
add
fidivs
xor
les
add
xor
shl
jecxz
pop
nop
lahf
pusha
push
into
push
and
add
loop
mov
push
adcl
repnz
aam
or
dec
test
mov
js
fstpt
adc
mov
add
test
xchg
mov
rol
lret
push
or
mov
xchg
cmp
add
lcall
pop
arpl
aas
clc
xor
cmpsl
add
xor
shl
mov
jne
pop
or
inc
mov
cmp
loopne
dec
faddp
mov
scas
cmp
in
mul
push
push
out
push
add
je
add
dec
sbb
add
mov
xor
xlat
dec
int3
stos
dec
add
test
sbb
push
gs
add
aas
and
sbb
sbb
or
and
hlt
adc
xor
push
out
imul
adcb
push
push
popl
stos
add
adc
jge
fs
xor
add
adc
nop
js
add
jnp
sahf
lods
cmp
pop
cmp
cmp
aas
xor
xor
jl
xchg
push
fwait
nop
cmp
xor
insb
or
lods
push
outsb
cmp
clc
das
imul
dec
or
jno
call
xor
xchg
mov
mov
jg
inc
addb
pop
inc
pop
push
xor
inc
mov
xchg
sahf
sub
cmpsl
sub
adc
insl
and
fdivrs
jo
adc
or
inc
add
ret
subb
jle
and
pusha
xor
xchg
clc
mov
arpl
xchg
fscale
mov
rolb
lea
jl
popf
call
lret
out
test
push
idivb
shlb
aas
xor
fcmovb
mov
push
dec
add
aaa
cld
xchg
int
add
sbb
adc
mov
jae
mov
lds
notb
adc
xor
in
das
fdivs
cmp
loope
push
sbb
adc
jo
rcr
lods
lret
fcom
inc
xlat
mov
test
sub
aaa
iret
sub
jns
mov
jb
pushf
cli
and
mov
xchg
incb
les
add
mov
adc
jecxz
cmp
out
xlat
stos
adc
stc
nop
push
cmp
mov
leave
push
rol
mov
add
xchg
mov
xchg
lods
mov
fldt
ficompl
negl
adc
xor
enter
dec
es
pop
ss
jns
cmpsl
rcrb
add
mov
add
enter
jle
pop
jns
into
push
or
xorl
enter
push
push
fisubl
mov
ret
outsl
jae
and
adc
add
xor
sysexit
or
fcoms
xchg
lcall
mov
xor
in
add
nop
outsl
sarb
sbb
ds
incb
jns
xor
push
rcrl
shlb
push
out
or
clc
add
call
push
scas
jecxz
sub
jle
jge
es
frstor
pop
xor
sbb
imul
dec
push
cmp
push
std
pop
sbb
or
cmpsl
xor
or
imul
outsl
insl
ficomps
cmpsl
mov
je
push
movsl
sbb
testb
pop
mov
xor
push
push
fwait
rcl
sbb
cmpsb
push
xchg
sbb
add
mov
hlt
int
mov
cmp
adc
or
pusha
adc
adc
fs
pop
js
sbb
movsb
push
mov
shl
add
insb
aam
ret
sti
in
int
gs
jp
aaa
dec
sbb
cli
add
sub
push
push
pop
adc
aas
jmp
xchg
cltd
or
ficoms
xor
add
dec
pusha
pop
ja
add
jle
push
stc
adc
push
fbld
je
and
bound
xchg
or
xor
dec
adc
popf
add
jecxz
lods
aaa
or
int
mov
rorb
cmpsl
lcall
jbe
push
and
add
push
pushf
add
in
inc
inc
or
add
pusha
sbb
rcrb
aaa
inc
xor
xchg
add
pop
je
sbb
add
mov
mov
add
imul
cld
xchg
add
scas
mov
inc
add
cmp
sbb
add
mov
aaa
adc
out
mov
cltd
hlt
scas
sbb
mov
jl
arpl
xchg
adc
push
scas
lods
dec
in
fdivrl
scas
adc
add
daa
out
pop
lcall
sub
into
daa
mov
mov
and
jp
stos
lcall
sbb
aas
sbb
pop
mov
sub
mov
nop
cltd
rorb
cmpsl
mov
fadds
pusha
adc
xchg
jae
adc
push
or
imul
xor
lret
add
ret
adc
add
nop
in
cwtl
movsl
inc
pop
add
imul
aas
out
cmp
scas
ljmp
cmp
cmp
lock
push
mov
jbe
adcl
lods
sub
insb
cmp
xor
stos
jae
icebp
xor
imul
pop
sub
stos
cmpsl
pop
aaa
and
lret
jae
out
add
dec
mov
jg
cmp
ret
arpl
jecxz
shl
dec
and
insb
add
adc
xchg
notb
lds
jp
roll
mov
cmpsb
leave
push
jnp
xchg
test
sbb
push
jmp
push
and
inc
fwait
loop
add
mov
jg
mov
gs
push
dec
nop
jnp
adc
subb
in
add
dec
in
icebp
pop
mov
lcall
pop
cmp
lret
pop
or
les
sbb
out
outsb
repz
pop
stos
dec
data16
pop
or
lret
mov
mov
add
jecxz
in
or
ret
lcall
mov
add
adcl
adc
adc
cltd
dec
insl
pop
test
mov
push
and
out
mov
sti
sar
jecxz
inc
cltd
sbb
es
push
add
mov
and
ret
addl
inc
incl
push
xorb
pop
ljmp
adc
xchg
inc
cmp
jl
add
cmpsb
or
sbb
add
mov
es
ja
stos
or
inc
lcall
sub
add
hlt
push
adc
add
or
cmp
cmpsb
es
popa
sbb
mov
jg
js
addl
add
rorb
pop
ret
ret
xor
push
insl
or
mov
push
fcmovb
nop
or
cmpsl
xchg
and
dec
xor
add
out
add
call
sub
stos
fidivrl
add
adc
push
and
mov
xchg
cld
sub
clc
loop
jae
push
repnz
scas
pop
inc
xor
xlat
sahf
bound
pop
mov
lds
data16
aas
fnstenv
add
push
pop
sub
or
adc
test
lds
push
inc
sbb
xor
pop
jae
sbb
sbb
sbb
xor
add
adcb
cmpsl
aam
xchg
std
arpl
ret
pop
cmp
pop
cwtl
popa
dec
adc
sub
fwait
xor
mov
je
add
stos
add
js
xor
add
push
arpl
shlb
adc
or
push
add
rcl
and
in
insl
add
sub
add
cmc
add
ret
and
xlat
and
fisubrl
adc
dec
push
jb
mov
ret
jne
jp
int
and
js
mov
cmp
jb
jo
add
cmc
adc
fsubrs
ret
repz
push
clc
mov
scas
add
daa
nop
mov
repnz
inc
fiadds
dec
sbbb
cmpsl
sbb
xor
rorl
or
lea
js
test
ds
xor
outsb
rolb
gs
mov
add
and
sbb
add
hlt
shll
inc
les
mov
pop
sub
lret
mov
shrb
add
xor
enter
add
loopne
xor
or
sbb
mov
outsb
fsts
sub
sqrtps
imul
jb
and
loopne
fmul
bound
and
sbb
xchg
out
xor
or
nop
push
sbb
adc
loopne
cmpsb
cmc
xchg
int3
add
mov
loop
pop
fcomi
push
mov
lds
or
cmp
test
sarb
mov
sub
pop
jle
add
cmc
aaa
adc
ja
add
sbb
mov
es
add
sbbl
cmpsl
adc
cmp
sub
cmp
lock
movsl
xchg
clc
xchg
add
mov
jo
daa
ds
adc
out
les
cld
test
xchg
add
imulb
add
fdivl
outsl
mov
sub
add
sti
negl
cmp
add
mulb
int
mov
loop
inc
fdivs
test
aaa
jae
lahf
mov
fsubl
sub
stos
add
push
je
es
add
mov
cmpsl
fnstenv
fistps
adc
xlat
or
jo
cwtl
outsb
sbb
inc
pop
mov
fldenv
push
add
cmpsb
sbb
lds
imul
mov
pushf
push
xlat
mov
pop
fcoms
std
and
in
int3
and
out
clc
mov
mov
sahf
add
mov
add
data16
cmpsb
repz
jmp
out
jge
mulb
cmc
add
adc
cs
pop
pushf
out
movsl
add
and
rolb
mov
iret
xchg
in
mov
faddl
mov
add
daa
test
fcmovb
lret
das
stos
add
mov
mov
loope
push
add
pop
jns
dec
scas
add
jg
mov
fisubrs
mov
push
dec
outsb
adc
add
pop
push
daa
mov
jp
jb
jg
or
cmp
icebp
pop
push
jle
jmp
stc
clc
adc
add
add
push
xor
add
andl
les
cltd
dec
push
add
mov
xchg
orb
aas
jnp
inc
mov
xchg
mov
scas
dec
pop
dec
jae
stos
sbb
daa
ds
push
movsb
add
xchg
add
mov
cmpsb
ficoms
ja
je
sbbb
repz
lret
xchg
jne
rolb
mov
sbb
imul
lret
cmpsb
add
das
pop
mov
stc
xor
adc
addb
outsl
mov
mov
inc
cmc
es
in
add
fsts
sbb
fbld
clc
or
mov
or
popl
push
add
mov
dec
add
test
loop
add
call
jp
test
add
cmpb
jno
jns
std
and
xor
add
aas
push
mov
xchg
adc
adc
inc
mov
push
data16
mov
dec
movsb
repnz
cmpsb
or
fcmovnbe
repz
mov
jns
xor
aad
or
jge
sub
or
lcall
push
and
insl
sbb
sub
mov
sbbb
imul
popa
rcll
hlt
xor
or
test
add
mov
out
and
jp
mov
jns
in
cmp
ds
js
lds
clc
sbb
and
add
sub
daa
add
mov
hlt
add
mov
cmp
scas
test
inc
add
rolb
and
jp
stc
fsubs
faddp
fwait
sub
add
roll
or
stc
ds
mov
push
idiv
in
push
jle
mov
inc
pop
jecxz
cmp
xor
das
jp
cli
lcall
es
out
xchg
inc
fdivl
insl
push
sub
insl
test
sbb
icebp
push
js
fsts
inc
lds
nop
xor
stc
xchg
xor
mov
fisubl
jp
or
dec
imul
repz
movsb
xlat
cli
xchg
or
mov
mov
sbb
sahf
lahf
loop
and
cmp
xchg
jg
add
adc
adc
insb
mov
movups
xchg
cmpsl
aam
scas
out
pop
add
push
movsl
add
inc
sub
xor
pop
xor
jecxz
push
pop
loope
adc
xchg
call
or
mov
stc
add
add
jp
cmc
scas
inc
fcoms
inc
mov
xor
xlat
add
mov
daa
cwtl
xor
aad
outsb
sub
adc
add
in
mov
push
addr16
xchg
js
movsl
out
lods
mov
push
pop
orl
mov
mov
insb
hlt
iret
mov
out
cmp
cmp
pop
add
add
loope
mov
mov
push
addr16
add
pop
cmpsb
fidivl
mov
push
loope
add
mov
loopne
push
call
sub
sub
arpl
add
jne
lods
pop
cmp
aaa
xor
or
inc
imul
xor
or
jge
les
mov
dec
ja
loope
pop
mov
add
add
outsb
fadds
sti
jge
add
mov
fimuls
jecxz
lds
idivb
jge
xchg
and
push
push
push
sbb
stc
hlt
jae
or
sarb
int3
imul
jp
arpl
lods
ljmp
adc
pop
int
dec
bnd
push
pop
or
mov
add
xor
add
insb
jns
js
add
enter
cmp
out
fistpl
adc
jge
cmp
pop
and
push
test
cmc
xchg
cltd
ja
cmp
push
lods
jb
pop
into
aas
xchg
add
fisttps
hlt
xor
mul
push
jle
jae
or
fidivl
cmc
imul
sub
dec
sbb
cmpsb
add
inc
pop
adc
or
scas
mov
adc
fidivs
xchg
cmpsb
mov
add
es
mov
scas
sub
jg
lods
loopne
jl
add
jmp
mov
scas
adc
add
inc
or
and
add
fwait
popa
shrd
jle
cmp
add
andl
and
cmp
decb
inc
xor
xor
pop
cld
add
shll
out
xchg
sahf
pop
add
dec
add
es
inc
cli
aas
cmp
insl
inc
cld
test
scas
and
lds
mov
dec
push
lock
adcl
sub
fimuls
cmp
jne
add
pop
mov
fisubrl
popa
xor
roll
les
mov
cld
nop
out
adc
jne
stos
inc
popa
test
jle
inc
mov
xchg
mov
mov
scas
fnsave
nop
inc
lcall
xorb
xlat
xor
cmp
mov
clc
adc
ret
lods
mov
sub
inc
xor
xor
mov
idivl
xchg
and
test
lret
dec
add
fsts
push
adc
and
xchg
sahf
jl
fsubr
sbb
imul
add
mov
fcomps
fstl
sub
mov
loopne
icebp
pop
mov
pop
and
push
andl
fcoms
or
push
lcall
rolb
sbb
jae
ret
adc
push
push
push
add
sbb
jg
pop
xor
jbe
cmpsb
jno
mov
pusha
jae,pt
mov
adc
in
jecxz
fdivrl
fxch
lret
fidivrs
call
mov
add
push
sahf
cmp
fnsave
jns
scas
das
cmp
push
add
mov
mov
pop
and
add
add
jns
sbb
xchg
repnz
mov
fcoms
js
lods
jmp
mov
add
inc
push
jge
js
or
les
lcall
and
jp
fdivl
int
add
jge
xor
cld
fidivs
mov
add
fwait
das
jae
xor
add
int
fptan
jno
scas
jo
pop
mov
xor
stc
xor
and
sbb
ret
sbb
mov
je
sbb
repnz
test
xchg
pusha
add
cmpsl
adc
test
mov
jne
pop
pop
in
icebp
rol
sub
jmp
pop
movl
pop
out
xchg
sbb
movb
push
lds
add
add
push
stc
mov
out
fsubl
pop
push
pop
mov
inc
sbb
pushf
jb
out
add
mov
push
mov
test
add
mov
test
testl
cmp
movsl
scas
add
ficompl
add
cmpb
jo
imul
aaa
iret
xor
mov
xlat
and
stos
pusha
adc
mov
ljmp
mov
xorl
sub
cmpsb
add
into
mov
inc
add
push
dec
scas
mov
lea
cmp
repz
popa
mov
fiadds
inc
aam
testb
inc
stos
add
push
pop
mov
add
lret
sbb
daa
into
mov
and
or
rorl
add
sub
push
aas
push
nop
rolb
add
movsl
dec
pop
mov
mov
adc
inc
adc
aam
inc
sbb
mov
scas
adc
mov
cld
or
cmpb
xchg
jp
sarl
call
xor
jbe
and
pop
scas
inc
cmc
sub
add
jno
sbb
loope
dec
fiadds
cmpsb
or
xchg
xor
subb
xchg
and
in
lock
repz
test
inc
and
add
pop
and
xor
fisttps
pop
add
cli
test
jge
dec
xchg
cmc
xor
dec
jl
or
xor
cmc
int
mov
mov
std
pop
cmpsb
lods
add
push
add
and
stos
fisubl
insl
push
jne
xchg
lret
shll
xor
stos
clc
dec
mov
je
lret
jg
rolb
push
scas
dec
add
fwait
lea
movb
cltd
and
sbb
sbb
add
daa
adc
sbb
pop
std
scas
lods
loop
sbb
pusha
jns
xor
shl
xorl
add
cmp
and
inc
xor
mov
sarl
mov
sub
sar
and
add
enter
sti
mov
int
add
sbb
adc
lcall
sarb
push
outsl
or
ja
or
aaa
test
repz
ret
jae
jne
clc
sbb
push
push
or
scas
mov
xchg
fdivs
test
jge
ss
scas
jae
sub
fidivs
mov
jp
cmp
push
mov
nop
add
cmpsl
and
or
jae
inc
into
add
jns
xor
jbe
test
add
and
push
jecxz
aam
and
mov
dec
pop
stc
mov
adcb
cmp
adc
mov
imul
xchg
xor
adc
fcoms
inc
mov
ja
pop
pop
jnp
xchg
neg
xor
aas
inc
stos
les
add
stos
or
mov
mov
nop
arpl
push
popa
adc
mov
rcrb
mov
das
in
dec
xchg
add
insb
xor
test
push
stos
into
add
cmp
xor
add
add
loop
fisubs
test
pop
pop
mov
sti
adc
mov
xchg
cmp
in
xchg
loop
inc
mov
pop
repz
cmp
rcr
jmp
jl
or
jo
ds
lock
sbb
cmpsb
add
sbb
loopne
rcrb
imul
dec
inc
movsb
fisubs
mov
ljmp
aaa
pop
pushf
mov
shl
lea
add
dec
mov
repz
add
add
pop
pop
and
inc
xchg
xorl
dec
adc
xchg
xchg
xor
pop
mov
mov
int3
loop
loope
push
mov
sub
shll
nop
test
cmpsb
sbb
push
adc
add
loopne
in
pop
insl
and
gs
push
xchg
add
jae
jbe
add
es
sbb
and
sbb
adc
push
imul
cmpsl
add
add
add
and
out
cmp
scas
xor
out
daa
lret
add
sbb
dec
outsb
stc
mov
fmuls
lds
std
add
shl
add
xchg
inc
cmpsb
adc
es
loop
or
sahf
into
lock
push
fmul
mov
sahf
sbb
jecxz
je
les
xchg
and
push
add
repnz
fidivs
arpl
fnstsw
push
inc
stos
mov
popa
push
mov
fisubs
inc
or
jb
jnp
or
jb
cmpl
or
and
jb
push
mov
or
rcrl
jb
das
jp
in
add
sub
lcall
aad
jg
mov
add
pop
rorl
jne
test
jecxz
xchg
into
bound
add
repnz
jae
mov
out
lea
mov
push
in
adc
inc
xchg
mov
mov
mov
pop
jg
movsb
push
add
repz
cmp
int3
jbe
mov
jo
push
adc
add
out
in
add
out
add
in
stos
ret
push
scas
push
and
cmp
mulb
add
xchg
in
xor
add
hlt
jb
sbb
lock
adc
mov
mov
fdivrs
or
cmp
daa
inc
pop
sub
jo
jle
and
or
add
push
dec
mov
add
or
push
pushf
js
jae
add
scas
cmp
data16
jp
push
imul
or
add
cmp
jo
aam
sbb
cmpsl
push
inc
test
add
xchg
mov
sbb
outsl
mov
sub
lcall
orb
jno
stc
lods
jns
cltd
addl
dec
stos
pop
loope
sub
xor
cmp
popa
add
jno
jnp
push
adc
loop
pop
mov
inc
outsl
ds
mov
out
push
stos
xor
jp
jg
and
mov
mov
insb
addb
xchg
cmpsb
jbe
push
fcomps
mov
fiadds
cmp
xor
add
mov
xchg
das
outsb
aad
and
mov
jle
mov
imul
cwtl
and
pusha
push
xor
mov
xchg
es
xchg
xchg
jae
arpl
or
es
jns
jge
jb
adc
add
add
nop
ret
add
out
arpl
push
popa
cld
sub
push
aaa
pop
aaa
pop
or
cmpsb
and
pop
jnp
adcb
push
mov
daa
mov
addr16
inc
insl
add
out
aas
push
sti
testb
shlb
sbb
mov
mov
out
mov
cs
outsl
inc
xor
fnstsw
scas
mov
and
mov
or
jle
test
gs
fmuls
cmp
cmp
sub
add
cmpsl
add
add
scas
mov
cmp
add
add
inc
popa
in
sbb
mov
mov
xor
add
xor
jae
mov
add
vhsubpd
xchg
inc
mov
cmc
add
pop
adc
add
mov
inc
mov
mov
out
int3
add
lahf
mov
aaa
sub
repnz
dec
pop
xor
add
and
cmp
add
mov
adc
mov
pop
lret
xchg
sti
add
add
repz
lea
hlt
fstpt
scas
cmp
xchg
test
pop
add
leave
xor
inc
add
jnp
ja
or
push
out
mov
and
stos
aaa
mov
std
out
mov
subl
add
adc
lods
fmulp
fisubl
popf
sbb
xchg
xor
mov
add
push
lea
daa
das
fdivr
stc
out
add
imul
pop
jo
cmpsl
cmp
inc
or
ret
pop
mov
js
push
sub
mov
loopne
mov
out
je
sub
lcall
sub
dec
mov
cmpsb
inc
mov
jne
es
jno
mov
xor
sbb
sbb
sbb
mov
or
and
nop
popa
adc
adc
dec
add
xor
add
add
mov
sbb
cmc
mov
dec
xor
xor
and
sbb
test
pop
mov
mov
jo
sub
ja
push
mov
jle
push
mov
cltd
inc
fisubl
mov
dec
jns
mov
pop
mov
aam
cltd
cmpsb
cwtl
es
add
into
jb
cmp
push
leave
xorb
add
pop
popf
repnz
or
loopne
mov
dec
jo
and
and
jle
icebp
mov
ret
test
jae
fimuls
jnp
fisubrs
or
int
test
jge
adc
fcmovb
pop
lock
mov
add
or
xor
add
jle
scas
test
into
mov
mov
lcall
sub
fisubrl
sti
dec
pop
cmp
scas
xor
mov
imul
adc
add
into
jg
sbb
testl
rorb
and
mov
jnp
xor
movsl
xchg
xlat
sbb
sbb
sbb
in
mov
outsb
jmp
out
mov
adc
pop
jp
jae
inc
dec
jo
xchg
div
mov
and
cmp
xchg
push
repz
or
or
dec
jp
adc
mov
or
mov
mov
cmp
addb
or
jne
mov
fcomps
xchg
jle
leave
fiadds
add
into
sub
sbb
adc
je
jp,pt
jmp
movsb
jl
out
push
add
inc
mov
inc
sahf
add
leave
and
test
jg
fcoms
pop
xchg
push
ds
or
out
mov
cld
xchg
sub
xor
aaa
ss
mov
xor
adc
add
xor
sbb
add
mov
mov
nop
fildl
cmp
ja
add
arpl
add
cmpsb
insl
add
mov
jae
in
dec
dec
mov
add
push
pop
push
test
fistpll
hlt
notb
scas
ja
in
dec
stc
jbe
cmp
mov
xchg
push
jl
icebp
repz
dec
add
aam
xor
or
inc
call
aas
icebp
cmpsl
lret
clc
jns
xor
sbb
dec
jbe
aaa
aaa
je
jmp
ja
jl
imul
out
sbb
push
mov
mov
ds
cli
lds
repnz
sbb
test
sti
add
mov
fs
push
cmpsl
repnz
add
pusha
mov
rorl
into
xor
sbb
mov
add
mov
adcb
sub
in
popf
lds
cld
cltd
into
das
mov
jmp
inc
arpl
data16
shrl
cld
add
sbb
fadds
xor
add
xchg
int
pop
mov
mov
add
cmp
outsl
add
adc
add
nop
orb
mov
stc
sbb
xchg
or
sbb
sbb
ja
add
arpl
jecxz
enter
popa
add
or
icebp
fimull
cmpsb
pop
xchg
or
jae
pop
sub
add
xchg
ret
movsb
xchg
movb
sbb
shrb
ds
sti
add
aaa
cltd
lods
add
or
insb
stos
pop
mov
cli
push
test
xchg
in
pop
cmpsl
addr16
sahf
imul
sbb
cld
xor
ljmp
and
movsl
cmp
pop
xor
sub
cltd
and
push
inc
dec
mov
push
clc
fxch
inc
pop
je
pop
pop
mov
dec
les
in
sbb
xor
add
mov
in
int
sub
jae
daa
add
ret
out
jb
gs
dec
push
mov
and
mov
dec
lods
stos
mov
rcll
aas
out
mov
pop
stos
test
mov
aaa
mov
adc
dec
push
sahf
jg
xor
ficoms
xor
pusha
sub
jp
icebp
sbb
jno
xor
and
gs
and
je
xchg
mov
add
and
das
aas
add
push
mov
add
clc
cmp
in
push
jo
pop
xchg
and
add
push
ret
add
jns
inc
hlt
xor
cmpsb
mov
pop
lret
push
jns
in
add
inc
cwtl
dec
les
loope
sub
cmpsb
mov
xor
scas
ja
push
and
push
xchg
xor
dec
daa
stos
add
sbb
add
je
sbb
push
xor
cmp
fiaddl
lcall
faddl
bound
push
shlb
add
sbb
aad
push
sbb
shr
mov
xchg
sub
pop
or
int3
add
jbe
movsl
add
add
rorb
mov
fdivl
sbb
pusha
in
dec
fcomi
cmpsb
mov
cmp
pop
mov
or
addr16
adc
dec
pop
es
cmpsb
ficompl
xchg
add
add
mov
repz
fidivrs
cmp
les
test
mov
add
mov
push
ds
pusha
sub
pop
mov
loopne
fstps
shlb
int
test
fstpl
and
or
xlat
fbstp
pop
test
sub
in
fcomi
inc
shlb
out
sub
dec
filds
mov
stos
and
xchg
adc
iret
mov
push
add
repnz
xor
sbb
jno
fs
inc
fcmovb
das
hlt
xchg
sbbl
push
adc
inc
cld
dec
add
shll
and
xchg
lcall
mov
or
push
xor
pop
add
lock
adc
addr16
std
fisttpll
xor
mov
cld
push
das
sub
mov
add
dec
arpl
out
cli
imul
test
icebp
or
xlat
int
dec
scas
jns
sub
xorl
add
mov
mov
or
push
or
add
repz
ret
cmp
mov
jb
mov
inc
arpl
loop
outsl
add
mov
fadds
push
movsb
stc
sbbl
lret
outsl
or
sbb
sbb
add
out
jnp
fs
xor
adc
or
inc
xor
pusha
outsl
mov
jmp
addl
fucom
push
out
cmp
flds
imul
loopne
mov
fsts
sub
in
jne
ja
xchg
cltd
adc
add
ds
inc
or
sbb
pop
push
jae
in
cmp
mov
inc
sbb
testl
gs
std
add
sbb
mov
add
aam
fildl
pop
es
loope
adc
inc
jno
jl
cmp
lds
das
jnp
hlt
dec
jbe
loope
aaa
jno
push
aad
add
popl
cwtl
lds
mov
ds
mov
add
cltd
lods
and
scas
icebp
pop
sbb
out
mov
mov
lods
jo
das
adc
scas
xchg
cmp
sub
test
push
dec
fstpt
cmp
dec
iret
clc
push
mov
pushf
add
push
test
popa
arpl
cmpsl
push
sbb
inc
push
loope
cmp
mov
adc
cld
inc
add
jns
adcb
mov
or
push
aam
xlat
lds
mov
sbb
sub
inc
ljmp
mov
lock
aad
add
addr16
jp
clc
neg
mov
sbbl
int3
and
or
es
fcomps
imul
lods
xor
sbb
pop
add
jae
push
lock
add
push
cmp
outsb
xchg
add
jb
imul
loop
fisubs
imul
icebp
adc
xlat
cmp
nop
repz
out
fcoms
xor
call
jmp
push
push
leave
fldt
stos
add
push
cmp
ljmp
pop
clc
clc
cmp
add
mov
jbe
int
incl
std
add
popf
and
or
shlb
test
fisubrl
jo
cmpsl
fidivs
push
ficompl
outsl
bound
push
add
mov
adc
stc
idiv
dec
and
jbe
mov
out
pop
notb
inc
adc
adc
enter
jae
add
in
push
jle
and
enter
dec
cmpsl
clc
add
or
inc
xlat
push
lahf
add
in
ljmp
iret
add
and
push
jl
mov
jae
inc
mov
cmpsl
or
or
or
in
stos
daa
pop
sub
sbb
es
jge
out
add
ficompl
insl
jno
aas
mov
mov
and
testl
cmp
cmp
pop
pushl
idivl
call
xor
sbb
jae
inc
dec
jbe
icebp
fdivs
call
pop
add
stos
xor
mov
sub
mov
aaa
jbe
adc
scas
in
cmpsb
and
xchg
test
je
clc
xor
stos
aam
cmp
push
jb
mov
les
mov
and
adc
and
divl
imul
and
aad
mov
out
xlat
push
jb
and
loope
xor
sub
push
and
add
sub
sub
mov
popa
xchg
sti
aad
sub
sub
xchg
and
mov
lcall
cmp
fdivrs
je
add
jbe
rcll
cmp
cmp
mov
sub
jns
jmp
loope
add
pusha
inc
jne
add
adc
loopne
outsl
add
mov
stos
jb
fwait
outsb
ret
mov
adc
cld
jno
lock
cwtl
sub
sbb
movsl
fcoms
push
xlat
cmpsb
out
lods
mov
daa
cli
add
das
mov
sbb
add
incb
testb
das
jno
pushf
xchg
leave
dec
add
test
mov
subl
add
outsl
mov
push
ss
push
jl
xchg
pop
nop
or
add
cmc
out
adc
mov
repnz
push
leave
fisubrs
mov
dec
inc
cmp
xchg
pop
xchg
add
fadds
test
and
sbb
xlat
inc
mov
in
movsl
pop
stos
aad
sbbb
das
push
jo
jmp
mov
adc
pop
sbb
ret
pop
call
subb
std
mov
jmp
iret
xchg
iret
sub
dec
add
cli
xlat
test
add
rorb
mov
sbb
xchg
add
sbb
pop
xchg
lahf
jne
sbb
cld
sbb
outsl
mov
out
xchg
or
in
add
adc
mov
add
fdiv
mov
ds
cli
jecxz
sbbl
stos
adc
aaa
mov
out
shl
pop
pusha
popf
pop
fmuls
sbb
shrb
ret
adc
jnp
mulps
mov
mov
add
mov
jno
stos
jb
inc
cli
push
add
cltd
xchg
pop
mov
cmpsl
xlat
aad
inc
repnz
mov
pop
mov
popa
stos
test
add
sbb
jg
pop
inc
shr
andb
iret
cmpsl
xchg
mov
add
fistpl
roll
adc
std
repz
lea
or
addr16
add
cmp
int3
cld
hlt
sub
stos
adc
rorb
dec
adc
sbb
mov
movsl
adc
dec
shlb
daa
in
pop
outsl
add
repnz
shlb
push
cmp
xchg
imul
or
gs
sub
test
add
mov
adc
pop
lret
jge
mov
push
aas
jae
std
fisubl
inc
enter
insb
dec
fadds
stos
lea
add
mov
shrl
pushl
mov
sbbb
pop
leave
add
fwait
cmp
into
inc
int
add
cmp
incl
and
or
sub
fadds
call
sbb
mov
in
mov
add
push
push
and
in
jecxz
scas
sbb
add
pusha
pop
xchg
add
loop
push
pop
dec
mov
test
push
les
es
dec
sub
sub
pop
or
aaa
pop
sbb
lcall
js
je
add
or
lret
and
add
rcr
add
ja
ror
push
ds
push
enter
xor
jle
xor
sbb
sahf
dec
add
aaa
leave
iret
add
cmpsb
adcl
lcall
std
xchg
rolb
jge
sbb
add
mov
pop
jmp
cmp
push
stos
test
int3
in
and
cwtl
sbb
push
jecxz
inc
ficomps
stos
add
push
addr16
dec
and
rorb
je
add
add
xor
add
test
xchg
cmpsb
xor
incl
jle
pop
lea
addr16
aas
pop
leave
xchg
movsl
and
cld
add
loop
ljmp
pop
and
mov
loop
xor
bnd
dec
pusha
stos
push
add
pop
and
out
mov
add
lds
js
mov
xchg
pushf
dec
addl
mov
add
adc
loopne
sub
int3
lods
add
aas
outsl
into
mov
arpl
or
rclb
adc
clc
stos
dec
mov
ljmp
inc
pop
push
add
rolb
and
xchg
loop
add
iret
arpl
lret
jecxz
sub
xchg
out
sahf
pop
adc
cltd
ficoml
std
and
add
stos
xchg
mov
jle
dec
fisttpll
js
std
pusha
pop
push
loopne
ficoml
xor
jnp
in
outsl
dec
push
xchg
ss
xchg
mov
add
dec
push
fidivs
sbb
es
rorb
lods
push
fdivs
inc
mov
mov
mov
dec
ficoml
loop
movsb
jae
inc
jbe
mov
mov
pop
or
add
addr16
adc
jmp
pop
xor
pop
add
adc
cmp
jg
mov
sub
outsl
dec
dec
je
aas
dec
push
out
mov
jge
xor
dec
jnp
and
mov
addr16
add
and
inc
xor
out
arpl
gs
dec
mov
sub
in
xor
cwtl
xor
push
push
jbe
push
or
adc
stos
jge
dec
cmp
fadds
and
pop
push
mov
jmp
jne
dec
add
dec
stc
bound
pop
pop
pop
data16
add
ret
in
push
xchg
sbb
xchg
push
pop
fnstcw
dec
add
mov
addr16
sbb
fisubs
cwtl
jae
shll
test
adc
lea
out
pop
cmp
xor
or
jp
add
and
add
setno
or
cmpsb
xchg
sbb
sbb
rorb
add
pop
clc
and
adc
inc
add
cmp
adc
aaa
hlt
push
pop
outsl
mov
xor
pop
xor
inc
add
test
mov
loopne
sahf
add
jo
popa
sbb
add
push
in
add
jge
inc
adc
ja
sbb
xor
dec
or
scas
iret
add
stos
int
xlat
mov
out
enter
ret
lods
pop
add
fdiv
and
call
fbstp
mov
xor
add
push
outsl
pop
cmp
xor
or
push
add
xchg
clc
mov
loop
xchg
testl
test
add
xor
push
jle
jb
mov
mov
flds
movsb
mov
pop
and
subl
adc
addl
dec
mov
push
jl
fwait
bound
in
adc
cmpsb
lret
push
add
add
adc
mov
lret
les
and
fadds
cmp
xchg
xor
jae
lds
adc
push
mov
je
xor
sub
loopne
sub
arpl
cld
mov
xor
dec
cmc
jle
pushf
add
cmp
and
outsl
add
inc
adc
call
jbe
popa
add
or
inc
cltd
push
lods
add
enter
add
pop
add
mov
scas
pop
mov
subl
sub
in
push
bound
orb
dec
aad
and
repnz
mov
iret
add
jmp
cltd
sbb
adc
push
lret
imul
sub
test
adc
out
mov
sbb
adc
or
fldl
idivl
mov
fisttpl
sub
xchg
sbb
mov
cmp
pop
and
jecxz
clc
jp
dec
loopne
in
mov
inc
push
cwtl
pop
or
add
or
lret
imul
or
pop
pop
cmp
shrb
fcmovbe
fadds
add
in
push
stc
aas
ja
xlat
int
popf
nop
sbb
xor
and
cmp
inc
filds
pop
cmpsl
mov
xor
lock
or
mov
mov
mov
out
xchg
push
add
and
push
cmp
loopne
jns
int3
sbb
jo
push
cwtl
adc
mov
lcall
ja
mov
push
fistl
loopne
jo
jb
insb
jne
test
lods
add
xor
iret
jl
stos
in
dec
and
leave
sbb
add
jbe
mov
pusha
and
jl
push
data16
add
stos
xor
add
push
push
clc
sbb
sbb
and
frstor
mov
pop
fs
movsl
enter
inc
add
fdivrl
sbb
rorb
pop
xchg
jnp
push
mov
xchg
outsb
xchg
lock
cmp
ljmp
cltd
lcall
fisubs
pop
sub
cmp
xor
scas
fsubl
xlat
cmp
std
jecxz
shr
les
insl
mov
popf
out
jge
push
mov
and
cmpsl
or
jb
fsubp
push
sub
dec
enter
movsl
rclb
in
xchg
add
jle
cltd
xchg
leave
xchg
int3
add
out
lods
add
push
and
add
ljmp
add
mov
adc
cmpsb
js
sub
push
pop
dec
fsubs
test
jbe
push
lods
mov
stc
adc
and
cmp
movsl
gs
outsb
cmc
int
cwtl
add
mov
mov
xchg
dec
cmp
loope
iret
push
aaa
pop
add
aad
lcall
or
fildl
stos
lret
pop
ja
lds
rcrb
push
pop
dec
fsubs
sub
fsubrl
cwtl
push
movsl
imul
inc
ds
mov
stos
pop
push
fwait
lea
cmpsb
pop
stos
fcmovbe
iret
popw
sbb
xor
add
pusha
add
dec
ds
xchg
cmpsb
std
add
mov
aaa
pop
push
loopne
or
scas
ret
xor
dec
stc
mov
mov
lds
les
clc
mov
leave
inc
adc
and
add
pop
repnz
rcrl
rcll
mov
repz
sub
push
cmpsb
test
mov
and
dec
ja
adc
xor
xchg
stos
insl
lret
mov
xchg
adc
repnz
sbb
dec
icebp
shlb
jle
and
imul
cmp
xchg
sbb
cltd
mov
aam
lret
test
js
rcrb
xchg
icebp
adc
dec
push
push
and
pop
loop
pop
das
adc
test
push
jb
push
stos
test
mov
mov
dec
test
and
js
movsl
xor
pop
loope
cmp
ja
adc
lret
cmpsb
xor
xchg
jae
gs
lret
jnp
shl
push
rcrl
out
repz
test
stc
out
xchg
mov
pop
inc
mov
cwtl
jnp
sbb
adc
ljmp
mov
gs
int
or
dec
dec
mov
and
pop
and
xchg
jo
inc
add
push
bound
push
shll
adc
ret
mov
xlat
inc
fwait
repnz
sti
rclb
mov
push
std
arpl
fimull
ss
dec
and
push
subb
dec
or
inc
addr16
sbb
dec
inc
mov
jae
icebp
xchg
or
std
lret
mov
jb
bound
jo
mov
iret
sti
xchg
daa
std
mov
adc
mov
cmpsw
ljmp
shrb
rorb
repz
js
std
imul
sbb
test
xchg
repnz
arpl
call
into
xor
mov
loope
rcll
bound
inc
fwait
sti
stos
jg
push
add
fs
int
fwait
mov
ljmp
fldenv
clc
adc
cli
aam
jne
rorb
xchg
mov
xchg
mov
push
fwait
arpl
xorb
mov
cli
in
pusha
xor
cli
insl
test
dec
jae
or
into
sarl
mov
shll
adc
mov
test
pusha
lcall
pop
ret
ljmp
jmp
fistpll
push
adc
or
jb
test
rclb
addr16
adc
dec
in
sbb
loope
sub
out
lret
dec
loop
mov
out
mov
pop
inc
mov
popf
and
inc
ret
jb
loop
mov
xchg
mov
push
xor
cmpsb
adc
arpl
test
and
outsl
int3
cwtl
jns
mov
mov
bnd
push
dec
cmpl
lret
loop
jp
mov
call
repz
pop
fdiv
imul
loopne
cltd
lcall
mov
repnz
lcall
icebp
add
scas
lret
lret
push
mov
arpl
mov
adc
rol
mov
repz
push
gs
stc
sbb
dec
jbe
imul
loop
jmp
mov
push
ss
xor
stc
cld
stos
ss
pop
jp
rorb
ret
sar
repz
jg
mov
lret
pop
pusha
dec
dec
add
ret
xor
repnz
mov
stc
jge
inc
rcrb
or
mov
int3
stc
ljmp
js
rcrb
outsl
jmp
xchg
cmpsl
and
xchg
mov
push
cmp
out
jns
loope
jecxz
pop
nop
or
push
mov
xchg
rorb
lret
xchg
push
scas
fsts
mov
mov
rcrb
test
fsubrl
ret
loop
push
sub
adc
mov
mov
pop
sbb
imul
lcall
std
add
ret
mov
ret
fcoml
or
inc
push
sbb
push
and
repz
sbb
fsubs
mov
sbb
or
mov
scas
lahf
ror
inc
bound
jae
push
jae
lret
repnz
pop
add
loope
lcall
inc
loop
dec
lock
lret
cmp
testl
shr
xchg
and
xchg
mov
mov
std
sub
jo
adc
jnp
mov
pop
lods
push
ljmp
dec
xor
push
mov
cltd
inc
jo
mov
pop
dec
es
push
sti
push
mov
mov
fildl
push
dec
pop
adc
inc
and
mov
dec
adc
jle
insb
out
mov
push
cli
sti
dec
ret
jp
sbb
das
mov
mov
inc
rcrb
push
repnz
pusha
adc
mov
adc
inc
fxch
push
mov
adc
repnz
dec
call
stos
add
sti
push
loop
cmpsl
jecxz
lahf
ljmp
sbb
jp
cmp
jmp
mov
pop
cs
or
and
jmp
inc
dec
arpl
sbb
pop
push
inc
sbb
mov
mov
adc
mov
or
add
dec
inc
mov
dec
adc
pusha
push
cltd
mov
add
int3
out
xchg
jo
mov
dec
cmp
mov
nop
dec
sar
je
sub
pop
scas
adc
or
inc
int
sbb
test
mov
lret
repz
inc
incl
negl
sahf
push
lret
lcall
hlt
js
lock
or
ret
rolb
dec
jge
mov
fwait
sbb
push
lcall
aas
pop
xor
add
push
iret
mov
or
xchg
mov
push
cmp
testl
dec
lret
cli
mov
fwait
sbb
adc
cld
mov
adc
notb
adc
xchg
shr
out
adcb
pusha
push
sahf
loopne
fwait
cmp
fdiv
adc
cmp
lahf
inc
into
dec
sub
xor
push
push
ficomps
mov
ljmp
xchg
test
imul
pop
faddl
ja
push
aas
sbb
push
imul
arpl
or
fucomip
inc
lcall
shrl
leave
or
lret
push
rcr
pop
pop
stos
shlb
or
repnz
xchg
xchg
imul
cli
repnz
ljmp
rcll
push
cmc
sub
pushf
ret
mov
sub
push
adc
jo
inc
lret
mov
stos
jae
cmp
scas
push
add
faddp
adc
js
stos
push
xor
stos
lret
lods
cmp
jb
cli
sti
cmp
jo
xor
sub
xchg
sbb
std
cltd
jne
jg
lea
push
ret
push
js
jg
pusha
inc
das
adc
stos
jmp
sbb
je
es
stos
lods
mov
mov
movsl
nop
stc
mov
repnz
mov
adc
sbb
fiadds
add
int
add
mov
shll
sbbl
push
fucom
lock
mov
arpl
cwtl
movsb
jb
xchg
mov
mov
jb
cld
jecxz
in
ret
ja
pop
cmpl
lods
out
inc
dec
mov
enter
mov
stc
cmc
mov
mov
xchg
clc
insb
mov
test
mov
mov
and
aad
add
and
int
hlt
inc
push
sbb
movsb
sub
jmp
fs
mov
loop
lods
dec
add
iret
inc
mov
leave
popf
sbb
dec
int
adc
sbb
andb
cltd
inc
lret
and
mov
cmp
nop
mov
mov
jmp
les
add
je
push
fs
dec
std
out
pop
adc
xor
dec
in
and
sbb
push
sbb
cltd
in
mov
and
xchg
and
and
addr16
idivb
jns
xor
mov
fildl
xchg
mov
cwtl
or
lods
cmc
jl
roll
push
lock
jne
sbb
enter
sbb
xor
insb
cmpsl
pop
test
movsl
les
lea
or
jns
movsb
jne
mov
mov
sbb
test
cmp
cmc
out
cmp
inc
pop
and
shll
push
inc
jae
mov
test
gs
inc
push
fbstp
sarl
roll
leave
xchg
aas
sbb
inc
cmpb
std
fs
add
add
mov
add
mov
scas
ja
cmp
fcoms
movhps
pop
fimull
cmp
push
sub
mov
and
les
imul
inc
cmp
fs
rcrl
scas
cltd
clc
dec
xor
sub
out
jp
vunpckhps
jl
repz
jns
jo
jnp
icebp
pop
test
jecxz
mov
nop
hlt
cmp
jp
insl
sub
rorb
outsb
push
jg
sub
pop
call
dec
enter
and
inc
sub
cmp
enter
push
jmp
adc
dec
shlb
data16
sbb
sbb
sbb
xchg
std
dec
arpl
xlat
stos
shlb
push
idiv
jb
aad
jbe
xlat
mov
xchg
lret
and
inc
xor
mov
add
jp
sar
cltd
call
mov
ficompl
push
fcoms
pusha
pop
fscale
movsl
adc
test
std
cmp
jns
cmpl
clc
and
cmp
test
cmp
outsb
fwait
inc
sti
lret
leave
cmpsb
jle
scas
push
outsl
shrb
add
sahf
insb
out
jbe
sarl
movsl
mov
mov
gs
jg
fstpt
push
popf
lods
fimuls
push
jno
or
orb
std
inc
jge
cmc
and
cmp
out
leave
fcmovnu
xchg
addb
pop
jle
xlat
xor
arpl
std
sbb
mov
add
int
adc
data16
fstl
sbb
push
mov
push
clc
rorl
add
ss
lea
push
and
xlat
mov
cmpsb
jae
int3
jno
jecxz
in
icebp
lahf
imul
in
xlat
std
jmp
xchg
sbb
daa
das
or
and
std
data16
pop
jge
dec
add
jl
lea
aad
mov
int
pop
sti
add
sbb
or
xlat
in
fdivs
lds
lods
les
mov
add
jno
cmp
clc
jmp
dec
mov
sbb
cmp
cltd
sbb
fldz
iret
shll
data16
mov
add
cld
sbb
push
jp
mov
mov
imul
and
js
jbe
rcrl
xchg
sbb
enter
and
lret
sbb
call
fsubs
cmp
lods
out
out
push
or
sub
insb
inc
and
adcl
inc
cmp
loopne
cmc
mov
sbb
cmpl
bound
jle
fistpl
test
mov
add
imul
cmp
data16
push
das
cmp
xor
test
loope
shrl
pop
out
mov
insl
ret
mov
dec
xor
sarl
xlat
ficoms
push
test
shl
mov
aaa
pop
mov
ljmp
dec
out
cwtl
xchg
fs
gs
mov
and
shll
jge
fdivs
push
stc
cmc
not
dec
popf
push
out
ficompl
clc
ficomps
insb
mov
push
shrl
in
add
push
xor
out
lods
cld
imul
push
pop
cmp
sbb
push
out
fsubr
outsb
sarb
loope
test
lods
sbb
or
insb
or
and
xchg
adc
pop
and
shl
dec
xor
loopne
push
call
idivl
and
ficoml
loopne
clc
sub
pushf
inc
negb
lock
jbe
inc
and
cmpsl
xchg
pop
scas
pop
lock
mov
cltd
or
mov
or
adc
mov
int
enter
sbb
fstpt
add
shrb
xor
pop
add
lods
aam
mov
and
aad
xor
push
lods
idivl
call
andb
dec
inc
gs
mov
inc
sbb
and
mov
pop
cmp
popf
xchg
pop
int
fnstsw
pop
adc
cmp
add
leave
cmp
shll
dec
sub
subb
andl
push
pop
sbb
paddw
mov
jg
out
in
sti
mov
and
mov
or
sarl
mov
pop
movsb
cs
push
out
pusha
xchg
jecxz
ds
leave
lret
bound
pop
dec
movsb
push
sarl
stc
lock
jo
shll
rcrl
or
stc
cli
sbbl
test
cmpb
rclb
and
int
popa
call
shrl
mov
ficoms
shll
dec
fcmovb
popf
fbstp
xchg
or
in
push
inc
or
cmp
mov
mov
cwtl
mov
sarb
and
test
mov
sub
test
mov
adc
test
movsb
mov
mov
mov
add
loop
pop
jmp
daa
lea
push
test
out
adc
dec
adc
call
inc
lock
cwtl
dec
fidivl
repnz
adc
pushf
into
pop
sub
sub
out
sbb
fwait
pop
enter
jmp
movsl
mov
popf
sub
roll
fst
out
pop
inc
loope
xor
aad
lock
adc
pusha
leave
rclb
int
enter
movsl
or
adc
inc
sbb
aas
push
loope
cmc
inc
filds
jnp
pusha
enter
inc
xlat
aad
pop
cmpsl
mov
xor
lcall
fildll
or
xchg
icebp
std
sahf
mov
pop
out
xchg
and
stc
in
fidivrl
adc
sbb
std
leave
test
push
aad
sbb
mov
mov
dec
sbb
insb
push
xchg
jecxz
out
int
fidivl
leave
mov
lods
loope
jecxz
sbb
push
jmp
cltd
jecxz
das
filds
add
loop
stos
mov
icebp
lds
push
fs
add
mov
imul
adc
adc
leave
mov
lods
xor
shlb
fidivrs
int
pop
jne
sub
int
push
jl
dec
fbstp
in
sub
popf
adc
pop
fstl
xchg
mov
insb
xchg
enter
xor
lret
lds
out
add
gs
and
popa
or
test
rclb
stc
ja
frstor
xor
js
dec
sub
test
add
sti
inc
or
dec
inc
test
leave
loope
pop
cmpsb
sub
and
std
test
add
ret
ficomps
mov
pop
sbb
shll
and
fnstenv
pop
xlat
pusha
sub
xchg
nop
cltd
xchg
sbb
mov
gs
or
sub
std
jl
cwtl
mov
fsub
dec
jne
adc
fisubrl
test
call
xlat
das
and
std
leave
lods
cmpsb
bound
mov
cltd
test
rclb
scas
call
cmc
pop
xor
popa
dec
jnp
mov
into
mov
push
add
rcr
adc
add
fs
jecxz
add
xchg
mov
repz
fimull
fsubl
cmc
leave
int
mov
sbb
push
xorb
nop
xchg
xor
bound
pop
lods
enter
adc
cli
addb
mov
stos
mov
or
cmpsl
subl
push
shl
shll
fiaddl
scas
cmp
jle
sbb
xor
mov
sbb
mov
xor
pop
subb
loope
mov
pop
fs
sbb
ret
shlb
ss
mov
add
push
inc
sbb
adc
pop
clc
mov
sahf
jg
sub
loope
pop
out
sti
ficompl
mov
loopne
mov
les
push
fidivrs
repz
fists
flds
fisubl
fnsave
or
sbbb
mov
mov
cltd
lcall
or
lret
jp
mov
xor
xchg
sbb
dec
lock
shl
scas
or
dec
ficompl
push
dec
xor
cwtl
sub
and
inc
filds
dec
add
or
rcrl
ror
shrl
mov
rclb
xor
rcrb
mov
lret
cmp
mov
mov
jns
loop
mov
and
dec
ds
push
adc
je
sub
mov
mov
gs
mov
bound
ret
inc
lock
notb
sbb
inc
dec
mov
mov
ret
andb
lods
or
rclb
roll
sbbl
xor
pop
imul
gs
lock
jo
addr16
or
pusha
jmp
out
push
xchg
int
or
push
inc
push
mov
lret
rorb
sahf
push
sbb
dec
and
loope
dec
dec
cli
int
popf
enter
gs
repnz
cmp
lcall
adc
push
imul
sub
loop
insb
mov
mov
add
inc
jne
mov
int3
andl
push
mov
xor
test
movsl
mov
shl
cltd
xchg
and
ror
or
test
inc
loopne
out
xchg
shll
mov
in
xor
dec
mov
popf
sub
outsl
xchg
sbb
add
xchg
movsl
and
int
sahf
das
shrl
sar
fcmove
in
loopne
xlat
fdivrs
pop
pop
loop
xchg
lahf
jp
pop
cmpsb
pop
lahf
leave
mov
pop
or
shll
pusha
rcrl
je
jle
and
popf
pop
dec
jne
shl
mov
sbb
sub
fwait
subl
lds
mov
shlb
fists
xchg
sub
neg
push
push
mov
clc
fmuls
shrl
pop
sbb
inc
sti
lds
aas
lcall
jle
or
ljmp
jp
js
mov
out
mov
fdivl
inc
jno
cmp
mov
mov
pop
outsb
sti
daa
repz
jge
push
stos
addl
sbb
push
add
dec
jns
ljmp
arpl
sub
ljmp
lahf
adc
cmp
xor
insl
dec
and
pop
inc
jnp
lcall
pop
arpl
je
mov
cmp
lods
clc
jo
je
je
xorb
jnp
ljmp
stos
dec
push
dec
pop
sbb
andl
test
fucom
loopne
push
lcall
inc
mov
imul
mov
inc
nop
adc
stos
mov
dec
cmp
lret
adc
xlat
adc
sub
pop
mov
cltd
pop
push
dec
daa
cltd
dec
shlb
out
mov
xchg
jp
inc
dec
inc
es
jmp
aaa
mov
dec
out
sub
pop
or
cli
push
pop
xchg
inc
in
test
mov
insb
je
repz
add
lcall
lods
sahf
nop
fwait
imul
icebp
in
mov
mov
xor
or
mov
pop
aas
out
lcall
jl
and
sub
xor
es
push
add
out
nop
jmp
je
pop
add
inc
cmp
jbe
stos
add
into
inc
movsb
rcr
jae
mov
sbb
push
lods
add
int
inc
outsb
push
mov
jmp
imul
clc
add
aad
xchg
fadds
roll
cmp
std
add
jo
repnz
popf
aad
sbb
add
mov
add
push
xchg
adc
pop
ljmp
and
inc
sbb
add
jns
push
inc
rorb
insb
and
push
and
gs
mov
mov
ficoml
pop
or
jb
dec
add
push
add
in
cmp
jp
mov
mov
inc
imul
add
es
add
jne
loop
or
add
sub
cmp
stos
or
pusha
add
inc
add
mov
xchg
cmp
jno
popa
inc
and
add
xchg
sub
shlb
ja
add
stc
dec
pop
add
pop
jae
scas
add
mov
loop
sbb
inc
out
pop
add
xchg
hlt
shll
rcr
lcall
repnz
jmp
dec
add
inc
jp
or
mov
out
rol
adc
fldt
and
and
pop
sub
bound
mov
add
mov
jns
push
ret
push
fcmovne
insb
testl
nop
mov
cltd
add
push
or
pop
lds
in
fidivrl
loopne
test
adc
call
ret
add
add
clc
das
xor
jae
pop
es
adc
loopne
hlt
or
pop
mov
jne
testl
fcomps
jbe
mov
jns
repz
shlb
pop
into
dec
rolb
mov
mov
aas
adc
repnz
pop
inc
xor
pushf
inc
cli
fcomps
mov
sbb
jnp
rclb
call
movb
divl
mov
das
fnstsw
daa
orl
rep
or
push
idivb
iret
pop
pusha
xchg
inc
xlat
mov
dec
repnz
xor
dec
out
push
fmuls
fcomi
xchg
fstpl
icebp
out
push
jmp
stos
cli
roll
mov
lret
call
push
sarb
mov
inc
das
sti
jge
leave
ja
push
push
jg
imul
leave
xchg
push
repz
sahf
jo
xor
stos
jp
mov
mov
push
lock
aam
xchg
pop
inc
pop
rclb
pop
xchg
xor
ljmp
push
adc
popf
popa
sti
test
leave
sbb
dec
out
dec
and
or
pop
shl
pop
stc
mov
ret
dec
dec
lock
adc
stos
push
push
cld
dec
push
sbb
lahf
push
dec
out
adc
inc
rorb
inc
std
cmpl
jmp
mov
xchg
jnp
pop
sti
lcall
popl
lea
fistpl
jmp
sbb
outsl
nop
mov
cltd
sbb
jmp
push
lds
xchg
push
ret
dec
lret
push
stos
sti
mov
mov
loop
push
sbb
xchg
pop
sti
pop
xorb
jb
rcr
pop
push
lret
xlat
sti
or
bound
pusha
stc
imul
hlt
mov
pop
clc
sub
add
add
jmp
mov
pop
mov
daa
imul
sbb
or
cld
mov
and
in
rol
jbe
fldpi
jo
mov
xchg
dec
lahf
inc
test
xchg
out
push
jae
lds
fsincos
sti
ljmp
ljmp
xlat
mov
push
popf
lret
push
mov
cwtl
outsb
mov
sti
dec
call
sti
mov
lret
mov
rclb
repnz
add
inc
leave
bound
dec
dec
test
mov
dec
pop
test
xchg
inc
xor
sbb
pop
mov
dec
into
push
imul
aam
loop
add
sti
mov
rorb
jle
xchg
in
outsb
sub
mov
push
sub
rcrb
pop
fdivl
cli
cwtl
jne
ljmp
pop
into
andl
imul
mov
lret
fwait
lret
dec
cli
mov
fnstcw
pusha
jo
jne
inc
xor
subl
stos
sub
mov
dec
push
loop
xor
vmovupd
dec
fstpt
or
adc
dec
pop
ljmp
sbb
cli
pusha
mov
dec
mov
cwtl
sbb
or
bound
fwait
inc
cmp
rorl
icebp
lods
test
cltd
pop
shl
pop
jp
mov
ret
test
jae
shr
pushf
sbb
lcall
arpl
inc
jnp
loop
lret
xchg
mov
adc
sbbb
pop
aad
xchg
ljmp
xchg
sbb
mov
lds
clc
add
andl
int3
iret
je
or
sub
dec
call
fs
int3
enter
fsubr
repnz
adc
pushf
push
stc
mov
testb
jle
mov
inc
scas
pop
dec
jl
sub
fadds
movsb
pop
test
stc
fbld
out
push
xchg
int
fmuls
rolb
xchg
rorb
sti
push
or
mov
movsl
dec
cmp
out
ja
out
std
jbe
cltd
shll
fsubs
add
fwait
int
divb
ljmp
dec
scas
sbb
mov
repnz
sub
pop
jbe
shl
rorb
ds
mov
sti
sbb
sarl
jge
mov
repnz
mov
jo
inc
je
ja
ret
lcall
scas
mov
mov
stos
shlb
mov
sub
ret
mov
jecxz
dec
ja
clc
icebp
cmp
lret
dec
addb
inc
jp
mov
aam
fstpl
int3
int
ror
enter
js
jp
bound
and
ret
dec
jnp
mov
xchg
dec
jp
rol
shrl
repz
push
rcrb
adc
arpl
sub
hlt
mov
or
dec
and
mov
lret
inc
leave
dec
rcrb
dec
mov
mov
sarb
adc
push
or
inc
in
orl
dec
sti
push
jmp
mov
fwait
cs
movsb
mov
test
int3
jb
repnz
pop
xor
stos
in
mov
daa
xor
lret
jge
cwtl
pop
icebp
enter
push
sbb
mov
inc
xchg
mov
pop
dec
call
mov
dec
pop
jmp
std
pop
xchg
mov
cltd
sar
sub
rcll
dec
inc
sbb
into
ror
and
idiv
xchg
lcall
rcrb
sahf
dec
stc
fcmove
pop
rcrl
lahf
data16
loope
push
aas
loope
sarl
int
jmp
pop
fdivrl
pop
dec
pop
fisubs
stc
fistl
pop
or
or
int
mov
sub
enter
ds
xchg
jp
dec
daa
push
ret
or
dec
mov
ret
shl
cltd
mov
dec
imul
test
sub
mov
adcl
adc
iret
pop
lret
clc
push
mov
lds
dec
sti
fsts
lods
jo
inc
dec
clc
fcomps
jmp
cld
sti
mov
inc
repz
ret
arpl
rorb
sarl
xor
dec
sbb
shl
sti
insl
inc
stc
icebp
scas
test
ja
std
and
roll
cmp
sub
fisttpl
cwtl
xchg
loope
loope
inc
jmp
dec
pop
cmc
sbb
xchg
fwait
and
push
nop
push
dec
shr
lods
push
jns
mov
sti
sahf
ret
dec
js
xchg
cltd
test
mov
clc
pusha
pop
jo
jns
adc
repz
int
stos
repz
sbb
insl
or
sbb
ret
lods
fistps
ret
or
mov
fcoms
xor
adc
cmp
push
out
mov
js
rcll
mov
jnp
hlt
stc
jno
fistpll
repz
js
rol
sbb
movsl
inc
pop
and
push
out
mov
pop
xchg
cmc
cltd
fchs
jnp
rorb
shll
mov
jno
mov
es
inc
or
or
lock
andb
leave
rcrb
cli
loop
rolb
inc
cmp
adc
lcall
adc
jns
pop
xor
icebp
shrl
jb
ljmp
mov
add
roll
fmul
pop
test
lea
ljmp
inc
xor
ret
adc
jo
shl
add
aad
or
mov
test
dec
mov
adc
fstpt
test
aad
push
test
jge
roll
cli
jl
cmp
loop
xchg
cmp
mov
pop
sbb
xlat
xor
mov
call
xchg
or
cmc
push
and
mov
and
push
dec
inc
or
add
mov
decb
sbb
fdivr
pop
in
mov
sbb
inc
lock
iret
lea
and
pop
pushf
fisttps
ljmp
xchg
push
loope
push
adc
mov
iret
sbb
fcom
inc
aad
mov
repnz
cmpsl
test
adc
mov
mov
cli
enter
rcrb
loop
cmp
sahf
xor
stos
add
adc
xchg
repnz
push
xchg
or
xlat
mov
sbb
loope
mov
cli
out
pop
push
mov
inc
sub
xor
dec
stc
lret
rcrb
mov
lcall
ffreep
cmp
adc
dec
mov
adc
xor
push
pop
pop
ljmp
or
sbb
jp
insl
xor
xor
inc
loopne
push
cmp
or
jns
pop
fwait
mov
arpl
xchg
aaa
push
rep
sbb
ret
sbb
xchg
dec
lret
dec
inc
aad
adcl
sbb
jb
imul
rep
fwait
xlat
jae
hlt
lret
and
sbb
lods
cmpsl
cltd
mov
es
sbb
mov
mov
adc
dec
daa
outsb
mov
jecxz
jno
xchg
sbbb
inc
mov
pop
push
jnp
fcompl
out
xchg
sbb
adc
lcall
fwait
call
popa
pusha
leave
inc
enter
mov
loope
lahf
jnp
shr
pop
stos
pushf
lds
jge
jo
inc
push
sbb
sub
fstpt
lret
rcll
inc
mov
adc
addb
dec
add
test
mov
push
mov
fwait
stc
lea
cmp
dec
dec
mov
mov
dec
shll
jmp
icebp
pop
lret
xchg
adc
sti
xchg
repnz
mov
push
dec
adc
sbb
add
dec
cwtl
fstpt
in
jge
inc
pop
outsb
movsb
xor
mov
jne
ja
pop
fmul
incl
xlat
or
mov
pop
mov
sbb
enter
mov
cmp
and
adc
or
and
sub
out
rep
pop
mov
dec
test
cli
mov
xor
test
pop
std
xor
xchg
icebp
xor
mov
mov
leave
js
imul
lahf
int3
xchg
in
xchg
stos
pop
clc
ljmp
xor
stc
cmpsb
cs
cld
jmp
js
xchg
mov
sarl
inc
popf
jmp
icebp
xchg
pop
jmp
mov
pop
sbb
rcll
sar
lret
popf
jns
imul
mov
stos
cli
mov
adc
lret
lods
mov
pushf
mov
movsl
jmp
enter
insl
int
leave
cld
sbb
sti
dec
arpl
dec
or
sar
push
dec
inc
das
adc
subb
shr
ljmp
inc
push
rcrb
dec
sbbb
mov
push
lock
pop
jmp
repz
ret
add
add
jl
mov
mov
or
xor
lods
adc
aas
sbb
cld
in
test
test
jmp
aad
sti
xchg
fildll
cmp
jmp
clc
mov
add
pop
outsl
dec
ret
xchg
stc
pop
fwait
fsubs
cmp
push
dec
pop
clc
addb
sarb
adc
jo
test
fmuls
adc
adc
mov
fsubr
fucomip
add
not
inc
js
lcall
mov
loopne
inc
xlat
inc
sbb
adc
dec
sbb
dec
lret
fldcw
shl
cmp
xlat
leave
xor
sub
and
jbe
inc
cmpsb
pop
fistpll
imul
inc
push
test
cltd
inc
add
sti
js
clc
xorl
loopne
mov
notl
mov
stos
or
adc
pop
orb
clc
rcr
jb
testb
cmp
cld
pop
push
sub
jbe
cmp
and
fcmovnu
lret
lcall
pop
out
adc
inc
cmp
js
lcall
ret
cmpsb
ficompl
dec
rcr
cmp
mov
cmp
sub
lea
mov
stos
xor
pop
adc
clc
cmp
adc
clc
cld
and
adc
or
pop
stos
sbb
xchg
push
jg
stos
or
fsts
xor
sub
int3
ficompl
adc
cmp
jecxz
xlat
loopne
pop
xchg
outsb
pop
aad
dec
cmp
cmp
sbb
fisubs
or
xor
adc
pop
lock
pop
leave
pop
sti
sti
vaddpd
mov
sub
dec
add
mov
adc
pop
pop
jo
stc
sbb
pusha
stos
push
lds
sbb
and
ds
nop
fsts
outsb
or
inc
dec
jns
test
and
popf
lret
fucomp
rcr
mov
push
stos
pop
lds
out
pop
cli
inc
aas
stc
outsl
js
push
pusha
movsl
sbb
adc
or
ss
mov
xor
stos
sub
adc
fwait
cltd
pop
lahf
fimuls
loopne
scas
fistpl
push
rorl
mov
stos
inc
stos
jle
fidivrl
pop
xorb
push
cwtl
cmp
adc
stos
or
rcrb
inc
mov
enter
add
inc
or
fnstenv
shll
vmovaps
pop
sbb
xchg
rorl
sbbb
cmp
negl
ret
dec
inc
cmp
xlat
imul
sbb
mov
push
pusha
and
pop
xlat
push
adc
test
or
lcall
add
xor
popa
sub
sbb
pop
pop
xchg
pop
shrl
mov
psubb
scas
adc
dec
jecxz
inc
stos
sbb
clc
ret
push
lds
jne
fcoms
sti
or
adc
fldcw
jb
jmp
rcr
std
fistl
push
mull
rorl
lret
cwtl
leave
rcrb
es
xlat
daa
lock
fistpl
lcall
xor
mov
loope
shlb
mov
sub
pusha
jp
leave
xchg
lcall
mov
sub
insl
lret
das
inc
jo
imul
mov
daa
pop
fsubrs
push
mov
dec
movb
arpl
cli
scas
int3
mov
aad
daa
testl
shlb
stc
or
icebp
mov
dec
loope
enter
and
shll
cwtl
dec
pop
std
mov
ret
ds
aas
ror
pop
in
ret
mov
fcmovnbe
mov
imul
loope
nop
cmp
pop
mov
ror
loope
adc
pop
cmp
stos
roll
outsl
pop
dec
mov
cmpsb
loope
out
rcrb
sbb
dec
shr
sti
adc
pop
shr
lock
lock
jecxz
call
xchg
cs
and
sub
dec
movsl
push
xchg
es
adc
sub
mov
push
mov
fucomi
rcrb
cmpsb
mov
fucomip
das
imulb
push
and
adc
sub
test
push
sbb
adc
aaa
imulb
movsl
push
cmp
lock
imulb
movsl
pop
ret
push
ret
push
adc
jne
push
push
cmp
adc
sub
dec
movsl
push
and
cmpsb
push
and
xor
rcrl
das
std
es
loop
roll
adc
mov
mov
nop
mov
insl
leave
ror
es
xor
xor
sub
sub
and
adc
pop
icebp
pop
addr16
daa
testb
cli
outsb
push
repz
xchg
cmp
and
xor
mov
call
fptan
ss
mov
and
add
es
push
and
adc
daa
imulb
cmpsb
pop
cs
testb
or
xchg
mov
clc
enter
sarl
pop
and
or
and
jno
pushf
sub
dec
movsl
push
cmp
adc
outsb
pop
push
add
fs
mov
add
mov
adc
rcl
hlt
aam
fistpl
in
vpunpckhqdq
addr16
test
push
xchg
insl
call
pop
stos
or
fadds
jmp
sti
xor
jmp
add
jmp
jmp
jmp
xchg
jmp
or
es
aad
jb
mov
cmpsl
push
aam
cmp
movsl
pop
pop
jmp
or
fbld
pop
es
mov
or
rorl
popf
lods
mov
shll
mov
push
roll
pop
jmp
pusha
shll
ljmp
push
adc
clc
rcll
ret
repnz
in
xor
rcrl
mov
dec
cmp
dec
fldl
stos
add
shl
push
jge
int
insb
ss
imul
pop
test
push
test
jns
mov
xchg
pop
xchg
push
jp
ljmp
adc
ds
push
pop
test
xchg
inc
insb
aas
push
pop
iret
push
xorl
shl
or
fcomps
jecxz
sbbl
xlat
push
cwtl
test
mov
ljmp
add
aam
shll
and
ss
gs
sbb
adc
repnz
mov
in
outsb
xchg
int
jnp
imul
xor
or
dec
mov
mov
push
xchg
cmpl
pop
push
sub
fisttps
adc
or
pop
lock
iret
adc
jnp
inc
xchg
mov
xchg
inc
lock
fwait
xchg
movl
dec
subb
test
xorl
push
dec
aam
leave
lods
dec
jns
pop
xchg
cltd
push
rcrl
lret
fdivl
cltd
cli
loopne
pop
imul
lcall
inc
lahf
jno
inc
push
aas
jp
pushf
sti
stc
xor
add
add
inc
add
add
inc
add
add
add
add
bound
outsb
add
add
insl
pop
dec
pop
add
add
jbe
add
add
add
xor
add
push
add
cmp
add
add
imul
imul
outsb
dec
xor
add
dec
add
add
pop
add
add
push
jne
add
add
add
xor
add
add
insl
ja
add
inc
add
jae
outsb
jo
add
xor
add
insb
add
jno
dec
add
add
dec
add
add
add
add
add
add
add
jae
jo
inc
outsl
add
xor
add
add
add
xor
push
ss
jno
push
jae
imul
add
add
xor
arpl
push
xor
add
add
add
xor
add
xor
add
xor
add
add
add
jae
pop
inc
add
add
add
xor
xor
inc
add
add
add
add
push
jbe
add
dec
inc
dec
dec
inc
add
ja
add
add
add
jo
add
dec
add
inc
inc
pop
add
jne
push
xor
add
dec
dec
dec
add
add
add
add
push
dec
add
add
add
arpl
dec
add
add
add
add
insb
inc
add
add
cmp
add
add
inc
add
add
inc
inc
add
xor
outsl
pop
pop
add
jo
inc
add
js
jns
add
imul
add
xor
add
xor
ss
jae
add
outsb
push
push
jno
pop
add
push
jns
add
add
add
add
add
xor
add
add
jne
add
add
add
push
add
xor
push
add
xor
add
add
jns
add
jne
add
ss
add
add
insb
add
dec
add
xor
insl
insb
add
add
xor
add
add
add
inc
jne
insb
push
jp
push
add
add
add
dec
add
push
insl
add
add
add
add
jno
push
jns
add
add
cmp
push
arpl
push
add
add
add
dec
arpl
add
add
add
jae
inc
add
add
add
add
add
jb
add
pop
fs
add
jb
add
jae
push
add
insb
pop
add
inc
add
add
add
add
add
add
push
data16
dec
xor
je
arpl
add
add
jne
add
add
add
add
aaa
add
cmp
add
add
add
add
jae
add
push
outsl
add
inc
add
aaa
addr16
bound
xor
add
imul
add
add
dec
add
bound
add
insl
pop
dec
add
add
popa
add
inc
add
add
dec
jne
add
jae
inc
add
push
dec
add
pop
push
insb
jae
add
add
add
dec
add
add
aaa
dec
jo
add
push
jne
add
jns
dec
dec
add
add
insb
add
jae
data16
inc
xor
cmp
imul
imul
push
push
inc
add
add
add
fs
add
inc
add
add
push
add
add
add
push
add
add
dec
inc
add
push
add
add
add
add
add
dec
add
pop
jo
add
add
cmp
arpl
add
dec
add
cmp
add
add
jp
jne
jae
jae
push
dec
pop
add
inc
add
add
add
add
je
add
jno
add
cmp
push
add
ja
add
add
push
inc
pop
add
ss
xor
imul
add
add
pop
cmp
add
bound
dec
add
xor
add
cmp
dec
add
add
inc
add
add
xor
xor
je
push
je
add
push
js
dec
je
add
add
dec
add
add
inc
push
add
add
dec
je
add
add
add
aaa
add
add
inc
add
inc
jns
add
cmp
add
add
cmp
pop
ss
add
outsb
pop
cmp
loopne
iret
xor
sbb
and
ds
xor
xchg
dec
loopne
xchg
int3
xor
pop
fwait
es
int3
test
ret
mov
xchg
int
daa
pop
pop
jmp
xchg
int3
mov
or
xor
xchg
int3
xor
ret
xchg
shlb
test
jl
push
add
out
push
sti
and
adc
xor
push
jp
es
int3
mov
pop
sub
repz
test
cmp
sti
daa
xchg
int3
mov
or
xor
xchg
int3
xor
adc
es
int3
xor
xchg
int3
arpl
adc
iret
es
int3
xor
xchg
fucomp
daa
xchg
int3
xor
outsb
lret
xor
xchg
int
daa
pop
pop
sarb
xor
xchg
int3
xor
xchg
dec
fsubrs
int3
xor
xchg
lret
xor
dec
int
daa
xchg
dec
mov
outsl
mov
lret
xor
mov
test
es
int3
mov
es
xchg
int3
mov
xor
xchg
int
daa
sbb
es
int3
pop
out
xor
dec
divl
out
pop
or
xor
xchg
xor
aaa
xchg
xchg
mov
cmp
pop
lea
es
div
test
cmp
xchg
inc
inc
loope
into
xor
ret
sahf
mov
loop
xor
ljmp
es
cmp
dec
clc
test
daa
ret
sahf
mov
add
xor
xchg
int
daa
dec
in
xor
xchg
dec
fadds
int3
xor
xchg
int
pop
fs
mov
cmpsb
adc
int3
cmp
pop
insl
xor
xchg
dec
xor
xchg
dec
sub
fwait
lcall
es
push
mov
sub
sti
daa
xchg
int3
mov
dec
lret
xor
mov
xchg
adc
xor
xchg
int3
xor
int
out
and
dec
xchg
xor
xchg
dec
fdivrs
xchg
int3
xor
xchg
int3
xor
pop
mov
xor
xchg
std
add
dec
int
daa
xchg
dec
shlb
xor
xchg
int3
xor
xchg
int
pop
xchg
inc
dec
pop
fs
cwtl
jmp
int
daa
adc
and
xchg
int3
insl
insb
push
inc
xor
mov
cmp
xor
dec
xchg
xor
xchg
dec
call
es
lret
xor
xchg
iret
arpl
adc
adc
int3
pop
lock
xchg
test
adc
mov
xor
dec
int
daa
xchg
dec
mov
imul
mov
test
xchg
push
es
int3
xor
xchg
push
repz
xor
xchg
int3
xor
test
xchg
int3
mov
add
xor
dec
or
mov
aaa
xchg
int3
xor
idiv
test
popa
sbb
xchg
int3
xor
xchg
push
cld
fwait
mov
cmp
mov
xchg
inc
xor
test
lcall
adc
jne
push
arpl
or
push
mov
iret
nop
int3
xor
pop
mov
mov
divb
stos
mov
xor
xchg
les
es
int3
sub
xchg
xchg
xor
sbb
lds
mov
sbb
fdivl
sbb
push
cli
sub
mov
cmp
add
and
push
sub
inc
std
xor
xchg
push
add
ret
sahf
test
sbb
int3
sub
pop
shlb
loope
int3
xor
jnp
xor
xchg
int3
jle
push
int
daa
cltd
jo
jo
int
adc
loope
daa
mov
and
xchg
int3
idiv
sub
xor
daa
push
int
daa
in
int3
pop
sub
or
test
mov
orl
pop
xor
xor
jno
cmp
xchg
fnsave
daa
aaa
repnz
daa
mov
es
xchg
int3
scas
aam
int
push
gs
xor
xchg
stos
loop
xchg
fsubr
rclb
int3
xor
push
shlb
cld
test
xor
mov
xor
int
and
int3
cmpsb
mov
lret
xchg
ret
add
stc
push
loop
call
xchg
les
daa
xchg
int3
sbb
int3
xor
pop
xchg
lea
sub
xor
addl
and
sub
pop
andl
les
addr16
mov
sub
pop
sbb
pop
arpl
les
mov
mov
adc
repz
push
mov
and
nop
ret
xchg
int3
xor
les
sub
mov
stos
orl
notb
mov
sub
xlat
sub
adcl
mov
sub
push
insl
sub
xchg
mov
les
es
and
mov
add
xor
xchg
shl
out
mov
pop
daa
xchg
int3
xor
xchg
int3
xor
xchg
cmp
daa
xchg
jno
daa
test
xor
sahf
and
or
mov
and
daa
and
xor
in
daa
scas
cmpsl
ror
cmpsl
jmp
les
and
xor
sub
inc
daa
xchg
int3
xor
xchg
int3
xor
xchg
int3
pop
push
pop
int
daa
xchg
int3
test
rdpmc
push
xchg
or
dec
cs
xor
das
into
push
arpl
and
lds
fwait
cmpsl
dec
hlt
sub
and
fs
mov
es
int3
sub
mov
dec
xchg
xchg
int
pop
xchg
cltd
mov
shl
xchg
sarl
mov
sub
ret
mov
je
push
cli
lods
loop
xor
mov
movsb
jp
xor
xchg
imulb
dec
mov
xor
push
int3
xor
mov
dec
pop
sbb
pop
lock
into
add
push
fnsave
sbb
pop
xor
pop
push
lea
and
sub
arpl
jecxz
add
push
addb
fs
dec
mov
mov
add
xor
jl
xor
xchg
xorb
push
int
daa
xchg
int3
sbb
xchg
dec
xchg
daa
cs
mov
xchg
int3
xor
lds
jle
int3
xor
xchg
jecxz
outsb
mov
lock
sub
ror
cmpsl
jmp
repnz
xchg
push
clc
daa
fmul
adc
loop
daa
xchg
int3
xor
cltd
hlt
sbb
xchg
aam
daa
xchg
int3
loopne
lods
pop
xor
xchg
pop
sub
and
and
mov
int3
xor
xchg
int3
xor
xchg
das
xor
lcall
daa
inc
int
daa
dec
sub
add
sahf
sub
adc
int
ds
addr16
in
hlt
sub
xchg
daa
xchg
int3
sbb
int3
xor
icebp
push
xchg
enter
int
in
int3
xor
and
mov
sub
sub
mov
sub
ret
mov
push
int3
sub
ficoml
xor
mov
xor
xchg
ret
arpl
int3
xor
and
pop
outsl
sbb
push
enter
xor
sbbl
nop
int3
xor
sbb
pop
es
mov
xor
fs
and
in
xchg
stos
jp
ret
sub
imul
es
mov
and
xchg
mov
xchg
lret
push
icebp
int
and
pop
test
sbb
mov
les
and
mov
fs
push
mov
xor
xchg
int3
bound
xchg
jp
daa
sbb
xchg
in
daa
xchg
int3
xor
xchg
xlat
pop
dec
stos
int3
in
lret
je
xor
xor
xchg
sarb
jle
xchg
cmp
xchg
js
int3
xor
int3
xor
xchg
int3
xor
xchg
int3
sahf
adc
int
daa
jb
xor
xor
sti
inc
adc
ret
cmpsl
ror
cmpsl
mov
mov
shll
repnz
daa
xchg
fistps
and
daa
xchg
int3
xor
xchg
inc
out
daa
cmp
loop
push
int
daa
outsl
int
daa
mov
cli
btr
xor
xchg
fidivs
enter
adcb
movsl
daa
xchg
outsb
push
daa
xchg
xchg
mov
xchg
int3
sub
out
mov
add
xchg
inc
dec
jg
or
aaa
mov
pop
xor
mov
repnz
push
ja
xchg
lea
mov
cli
mov
int
daa
xchg
xor
and
sbb
sub
and
shrb
jae
dec
loope
es
push
sub
xchg
lea
adc
ret
or
gs
lock
int3
xor
xchg
dec
stc
cmp
shlb
loopne
int3
xor
test
add
xor
xchg
sub
sub
lcall
xchg
lcall
xchg
int3
xor
xchg
ret
or
pop
int
es
int
daa
xchg
push
aaa
dec
sbb
lret
xor
xchg
mov
xor
mov
int3
mov
and
xchg
lret
xchg
les
sbb
fs
ret
lret
mov
stos
mov
cmpsb
xor
adc
ret
or
sbb
js
mov
mov
pop
mov
mov
es
int3
lea
xchg
int3
xor
int3
xor
inc
dec
add
jno
sub
xor
xchg
pop
pop
mov
daa
xchg
int3
inc
stos
mov
mov
loopne
int3
xor
adc
jg
push
xchg
int3
xor
push
fdivl
ss
push
xor
xchg
jbe
in
int3
xor
cmp
xor
and
or
pop
ljmp
xchg
int3
ret
int3
xor
mov
sub
int3
ret
mov
daa
xchg
int3
ret
lea
das
and
xchg
xchg
int3
xor
xchg
mov
int3
ret
repz
xchg
pop
mov
cwtl
mov
cmc
sti
stos
orl
fdivrl
push
insb
es
xchg
int3
xor
and
ret
ret
sbb
arpl
into
push
pop
rcl
arpl
ret
adc
popf
xor
daa
xchg
int3
mov
stc
push
pop
or
ret
xchg
into
mov
popf
je
jae
xor
movsb
xchg
sbb
xchg
int3
xor
adc
xor
xchg
pop
test
cmpsb
add
xchg
int3
in
es
xor
incb
push
dec
sub
sub
icebp
xchg
cmc
adc
ret
lret
repz
xchg
iret
outsb
dec
sbb
js
je
cmp
int3
xor
xchg
dec
cli
repnz
xor
mov
jno
in
lret
xor
dec
int
daa
xchg
dec
sbb
aaa
cmp
mov
sub
out
pop
xchg
ja
adc
mov
es
xchg
mov
and
xchg
int3
xor
enter
mov
lock
xchg
push
js
mov
pushf
cltd
push
or
sbb
int3
xor
mov
xchg
sub
mov
ja
aaa
xor
shrd
es
mov
es
push
es
int3
sub
mov
int3
sub
pop
int
daa
adc
sbb
mov
sbb
xchg
int3
mov
pushf
push
sarb
int3
xor
xchg
fwait
mov
xchg
pop
sub
xlat
mov
arpl
xor
xchg
pop
enter
xor
push
subb
or
fmull
int3
xor
push
orb
or
fsubr
lret
xor
jl
xor
xchg
daa
sub
mov
cmp
int3
sub
xchg
int3
pop
lock
out
cld
stos
jle
repnz
xor
push
xor
fcompl
dec
adc
xor
std
int3
imul
mov
adc
xor
les
daa
xchg
cmp
xchg
adc
daa
xchg
add
jne
int3
mov
ja
cmp
pusha
lret
daa
loopne
arpl
xchg
int3
xor
xchg
int3
lahf
daa
cld
int3
xor
repz
leave
add
xchg
int3
xor
and
daa
stc
and
jns
daa
xchg
int3
xor
add
xor
addr16
int3
xor
xchg
int3
lods
daa
repz
xchg
cwtl
std
aas
xor
lds
cltd
pop
daa
xchg
int3
xor
int3
addr16
jmp
int3
mov
jle
xor
xchg
push
xor
xchg
int3
fs
xchg
int3
jbe
in
xor
inc
fwait
mov
or
xor
cmp
daa
std
int3
xor
cmc
int3
xor
add
xor
xor
daa
cli
int3
xor
int3
mov
lcall
fwait
je
int
je
int3
xor
xchg
int3
xor
add
xor
xchg
adc
jo
push
xor
int3
fs
xchg
int3
xchg
daa
in
aas
movsl
daa
int3
xor
xchg
sbb
xor
int3
xor
int3
jbe
pop
push
xor
add
lods
pop
xchg
int3
xor
xchg
es
mov
int3
xor
xchg
xor
daa
xlat
xor
daa
xchg
int3
popf
cltd
hlt
int3
sahf
mov
xor
daa
in
xor
int3
xor
xor
daa
xchg
push
cmpsl
jg
int3
mov
int3
push
xchg
int3
fwait
xchg
xchg
inc
xor
xchg
aaa
xchg
xchg
xor
push
xchg
int3
movsb
pop
or
xchg
sbb
mov
daa
xchg
or
popf
jle
int3
sbb
xchg
int3
xor
xchg
jmp
fwait
mov
inc
movsl
jo
dec
popf
daa
jnp
add
cmp
push
xor
cmp
adc
cmp
pop
rclb
int3
xor
dec
push
fsts
xor
arpl
int3
xor
pusha
int
daa
xchg
int3
xor
xchg
int3
adc
xchg
int3
sbb
xchg
insb
xor
xchg
xor
cmp
dec
ret
ret
xor
jns
mov
int
imul
sub
xchg
inc
xor
xchg
int3
xor
in
push
and
int
add
add
add
stc
add
add
add
add
add
add
add
int3
add
faddl
insl
add
mov
add
add
add
add
add
cmp
add
add
add
add
add
addl
add
add
add
add
add
imul
add
jae
add
and
add
add
add
pop
add
push
add
add
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xor
push
add
outsb
add
add
add
popa
add
popa
add
add
add
add
stos
add
add
add
pop
add
add
add
mov
add
add
mov
add
or
add
add
add
add
add
add
mov
add
mov
xor
add
add
add
add
add
roll
push
rolb
adc
add
loopne
add
add
add
add
add
mov
add
add
xor
add
add
add
jb
add
xor
jo
inc
push
imul
add
imul
add
add
add
dec
dec
add
cmp
push
inc
inc
insb
jbe
add
xor
jne
add
xor
add
insl
js
add
jp
popa
push
inc
je
jbe
jno
add
add
add
add
add
jno
jb
jns
add
cmp
inc
add
add
add
add
inc
xor
push
add
ss
add
add
add
data16
dec
add
add
add
add
jbe
add
aaa
imul
add
push
push
add
imul
add
inc
inc
jae
insb
add
add
add
add
add
add
add
je
push
add
xor
add
xor
add
add
add
add
arpl
bound
add
push
add
outsl
push
push
add
insl
add
add
je
push
jp
arpl
add
xor
add
add
add
add
add
inc
add
fs
xor
add
xor
outsb
js
add
push
jns
dec
add
dec
add
add
ja
add
add
add
add
outsl
add
dec
imul
add
add
push
add
add
add
ja
jo
inc
push
add
add
add
add
outsb
add
popa
bound
add
pop
arpl
add
push
add
pop
add
add
add
add
jb
add
push
add
dec
add
add
add
add
add
add
insb
insl
popa
push
add
inc
add
popa
fs
jo
xor
cs
insb
add
pop
leave
imul
add
add
add
out
add
fiadds
pop
add
stos
mov
adc
add
add
add
add
fcomps
add
add
add
add
bts
add
js
add
add
add
add
add
mov
mov
add
add
add
add
add
test
lret
add
add
add
cwtl
add
mov
add
push
add
add
add
add
add
add
add
add
add
add
loop
add
add
add
add
add
add
add
xor
add
add
add
add
jb
gs
xor
cs
insb
add
add
cmp
xor
faddl
add
mov
pop
add
sbb
xor
mov
adcb
add
add
xchg
add
test
cmp
jmp
add
dec
jb
add
add
inc
add
mov
mov
mov
mov
add
in
add
add
add
add
aaa
add
cli
add
rcrl
mov
add
push
add
rolb
out
jno
add
cwtl
add
in
add
sbb
add
cmp
mov
adc
push
mov
add
clc
addl
add
and
or
add
add
add
ret
add
add
xor
rcll
add
add
leave
add
add
add
add
cmp
mov
add
mov
aad
add
push
filds
add
out
lods
mov
add
scas
insb
jno
inc
add
add
mov
pop
dec
jbe
jb
imul
add
add
aas
add
add
add
xor
add
add
jmp
add
add
add
add
add
adc
add
and
add
add
add
add
add
add
add
pop
mov
add
add
add
add
lret
add
add
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
addl
add
add
or
jo
add
pop
add
add
cmp
add
add
add
hlt
add
add
sldt
add
add
add
sub
xor
sbb
imul
inc
add
add
add
add
add
popa
jbe
add
jb
imul
inc
add
add
ss
jbe
add
add
gs
add
add
dec
test
sub
jae
jnp
add
push
popf
dec
add
add
add
add
outsl
xor
add
add
xor
ss
xor
add
ja
add
popa
add
je
add
aaa
add
add
dec
add
push
insl
add
xor
add
pop
js
add
add
add
add
dec
jbe
add
add
add
add
add
dec
add
insb
add
dec
add
push
push
add
data16
add
inc
pop
add
add
imul
add
add
add
add
add
add
dec
add
add
jno
add
add
add
add
data16
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
inc
add
add
add
pop
add
add
jp
add
jno
js
add
pop
add
dec
add
add
jp
add
add
add
inc
inc
add
jne
add
xor
imul
add
add
outsl
dec
outsl
add
cmp
dec
add
add
insl
add
add
pop
add
add
add
add
js
add
add
dec
push
add
popa
xor
inc
add
outsb
add
add
add
popa
add
outsl
add
dec
add
popa
dec
add
add
bound
add
add
add
cmp
dec
dec
xor
add
aaa
add
ss
popa
add
add
add
inc
add
dec
inc
add
jo
add
add
cmp
add
js
jo
inc
add
add
pop
add
imul
add
inc
add
jae
add
dec
insb
add
jae
dec
add
add
add
add
push
add
inc
add
add
add
add
add
add
push
add
add
add
push
jns
pop
add
jne
data16
cmp
add
add
inc
jo
add
add
add
outsl
xor
add
cmp
jo
outsw
je
addr16
gs
add
add
add
add
dec
add
add
push
dec
add
xor
jns
insl
add
add
xor
add
add
inc
xor
add
push
insb
add
add
inc
je
push
inc
add
add
dec
add
dec
add
cmp
push
dec
dec
add
add
add
imul
add
jno
push
cmp
add
dec
push
jno
add
inc
add
push
add
add
outsb
add
cmp
dec
aaa
dec
push
jae
add
add
add
push
jns
dec
dec
insb
add
push
dec
data16
add
pop
xor
add
dec
pop
add
add
outsb
add
inc
add
js
add
dec
jae
jbe
jno
add
add
add
add
add
add
imul
add
push
add
inc
add
add
add
popa
add
add
add
inc
add
push
add
add
pop
add
add
add
add
ja
push
add
imul
add
pop
pop
add
dec
cmp
add
jno
add
add
add
add
push
insl
add
pop
fs
add
outsl
xor
data16
add
add
aaa
add
imul
pop
add
add
xor
data16
add
add
add
add
inc
add
push
jno
add
xor
pop
add
inc
jb
jo
imul
add
add
xor
add
add
add
inc
add
jae
add
popa
add
jp
jb
inc
push
add
add
add
add
add
dec
add
push
inc
inc
add
dec
add
jo
add
dec
arpl
add
inc
jp
dec
add
insl
add
push
jo
add
dec
add
add
je
add
cmp
add
add
add
