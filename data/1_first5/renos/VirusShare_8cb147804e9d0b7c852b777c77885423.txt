jmp
mov
jmp
mov
jmp
mov
xor
aaa
xor
xor
cmp
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
je
xchg
xchg
mov
mov
mov
xchg
inc
mov
lea
inc
mov
xchg
lea
xchg
lea
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
cmp
je
xchg
xchg
mov
mov
mov
xchg
inc
mov
lea
inc
mov
xchg
lea
xchg
lea
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
cmp
jo
xchg
jmp
lea
inc
dec
inc
dec
inc
mov
xchg
xchg
dec
lea
lea
mov
lea
mov
mov
lea
dec
je
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
pop
ret
nop
push
mov
add
jmp
lea
mov
mov
cmp
jno
mov
lea
mov
mov
lea
mov
dec
lea
lea
lea
xchg
inc
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
xchg
cmp
jp
mov
lea
mov
inc
dec
inc
xchg
mov
lea
mov
dec
lea
mov
jmp
lea
mov
dec
inc
inc
dec
dec
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
je
xchg
xchg
mov
mov
mov
xchg
inc
mov
lea
inc
mov
xchg
lea
xchg
lea
mov
cmp
je
call
cmp
js
mov
mov
inc
dec
cmp
jbe
mov
mov
inc
mov
xchg
inc
mov
mov
xchg
mov
lea
mov
inc
dec
mov
xor
divl
test
jne
mov
cmp
jbe
mov
lea
jmp
mov
mov
xchg
xchg
mov
mov
dec
inc
inc
dec
dec
xchg
mov
mov
dec
dec
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jo
mov
lea
xchg
lea
dec
lea
lea
lea
xchg
dec
mov
xchg
lea
xchg
mov
dec
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
xchg
cmp
jp
mov
lea
mov
inc
dec
inc
xchg
mov
lea
mov
dec
lea
mov
jmp
lea
mov
dec
inc
inc
dec
dec
inc
mov
cmp
je
jmp
cmp
jo
xchg
jmp
lea
inc
dec
inc
dec
inc
mov
xchg
xchg
dec
lea
lea
mov
lea
mov
mov
lea
dec
je
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
cmp
jo
lea
lea
xchg
xchg
lea
xchg
dec
lea
mov
mov
xchg
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
ja
xchg
jmp
lea
dec
mov
lea
mov
inc
mov
mov
dec
inc
dec
mov
mov
lea
lea
xchg
mov
cmp
je
jmp
cmp
jo
xchg
jmp
lea
inc
dec
inc
dec
inc
mov
xchg
xchg
dec
lea
lea
mov
lea
mov
mov
lea
dec
je
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
inc
gs
jb
arpl
fs
jae
add
push
mov
add
mov
cmp
je
call
cmp
jo
mov
lea
xchg
lea
dec
lea
lea
lea
xchg
dec
mov
xchg
lea
xchg
mov
dec
mov
sub
mov
jmp
lea
mov
mov
cmp
jno
mov
lea
mov
mov
lea
mov
dec
lea
lea
lea
xchg
inc
dec
push
mov
mov
xor
call
mov
mov
cmp
jbe
mov
lea
jmp
mov
mov
xchg
xchg
mov
mov
dec
inc
inc
dec
dec
xchg
mov
mov
dec
dec
dec
mov
mov
mov
call
xchg
cmp
jp
mov
lea
mov
inc
dec
inc
xchg
mov
lea
mov
dec
lea
mov
jmp
lea
mov
dec
inc
inc
dec
dec
inc
push
mov
mov
xor
call
mov
cmp
js
mov
mov
inc
dec
cmp
jbe
mov
mov
inc
mov
xchg
inc
mov
mov
xchg
mov
lea
mov
inc
dec
mov
mov
cmp
je
xchg
xchg
mov
mov
mov
xchg
inc
mov
lea
inc
mov
xchg
lea
xchg
lea
mov
mov
push
add
jmp
mov
mov
cmp
jo
mov
lea
xchg
lea
dec
lea
lea
lea
xchg
dec
mov
xchg
lea
xchg
mov
dec
lea
mov
push
mov
jmp
jmp
lea
mov
mov
cmp
jno
mov
lea
mov
mov
lea
mov
dec
lea
lea
lea
xchg
inc
dec
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jo
xchg
jmp
lea
inc
dec
inc
dec
inc
mov
xchg
xchg
dec
lea
lea
mov
lea
mov
mov
lea
dec
je
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
ja
xchg
jmp
lea
dec
mov
lea
mov
inc
mov
mov
dec
inc
dec
mov
mov
lea
lea
xchg
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jo
lea
lea
xchg
xchg
lea
xchg
dec
lea
mov
mov
xchg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
js
mov
mov
inc
dec
cmp
jbe
mov
mov
inc
mov
xchg
inc
mov
mov
xchg
mov
lea
mov
inc
dec
mov
sub
add
add
mov
cmp
je
xchg
xchg
mov
mov
mov
xchg
inc
mov
lea
inc
mov
xchg
lea
xchg
lea
lea
pushl
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
xchg
cmp
jp
mov
lea
mov
inc
dec
inc
xchg
mov
lea
mov
dec
lea
mov
jmp
lea
mov
dec
inc
inc
dec
dec
inc
mov
cmp
jbe
mov
lea
jmp
mov
mov
xchg
xchg
mov
mov
dec
inc
inc
dec
dec
xchg
mov
mov
dec
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
jmp
lea
mov
mov
cmp
jno
mov
lea
mov
mov
lea
mov
dec
lea
lea
lea
xchg
inc
dec
mov
mov
movl
cmp
jo
lea
lea
xchg
xchg
lea
xchg
dec
lea
mov
mov
xchg
mov
mov
mov
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
js
mov
mov
inc
dec
cmp
jbe
mov
mov
inc
mov
xchg
inc
mov
mov
xchg
mov
lea
mov
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jo
lea
lea
xchg
xchg
lea
xchg
dec
lea
mov
mov
xchg
mov
mov
mov
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jo
mov
lea
xchg
lea
dec
lea
lea
lea
xchg
dec
mov
xchg
lea
xchg
mov
dec
mov
pop
ret
lea
push
cmp
testb
push
pop
insb
jle
jle
jp
inc
jnp
adcl
test
arpl
imul
pop
pop
dec
jle
imul
inc
imul
imul
pop
imul
bound
test
pop
pop
pop
pop
jp
inc
imul
pop
cmpb
jp
sub
inc
jnp
adcl
pop
pop
adcb
pop
imul
adcl
pop
sub
inc
pop
jnp
adcl
pop
pop
pop
pop
pop
dec
mov
lahf
pop
hlt
sub
mov
pop
insb
jo
cmp
cmp
cmc
cmp
pop
cmp
or
push
pop
adc
push
pop
cmp
cmp
xor
push
pop
pop
cmp
mov
mov
pop
sahf
pop
out
add
mov
pop
out
add
ret
mov
pop
sahf
pop
out
add
cmpsl
mov
pop
sahf
pop
out
add
stos
mov
pop
sahf
pop
out
add
mov
mov
pop
sahf
pop
out
add
mov
mov
pop
sahf
pop
out
add
xlat
mov
pop
sahf
pop
out
add
sub
sahf
pop
out
mov
push
fsubs
ficomps
mov
mov
pop
fsubs
add
pop
sahf
pop
fbld
push
mov
aas
inc
mov
pop
inc
mov
arpl
pop
sahf
pop
add
cmp
pop
fbld
pop
add
pop
fcomip
inc
dec
mov
repz
sbb
pop
pop
pop
mov
pop
mov
xor
pop
add
out
xchg
pop
pop
pop
sahf
pop
iret
mov
sbb
and
enter
mov
sbb
sahf
pop
lret
lods
pop
pop
pop
adcl
lret
mov
add
pop
fcomip
inc
sub
push
and
mov
pop
pop
mov
pop
imul
pop
lret
mov
sahf
pop
sti
mov
pop
sbb
sahf
pop
testl
mov
add
lret
mov
add
mov
sbb
sti
mov
pop
pop
inc
mov
pop
fcomip
inc
das
mov
add
mov
sti
sbb
sahf
pop
mov
sbb
pop
incl
pop
fcomip
inc
das
mov
cwtl
pop
negl
cwtl
pop
sti
sbb
pop
push
cwtl
pop
lret
or
and
and
xor
hlt
hlt
mov
aas
sbb
sahf
pop
out
mov
inc
sahf
pop
jmp
pop
jecxz
inc
push
pop
addl
xlat
and
pop
jecxz
mov
dec
jg
xchg
pop
pop
adcl
push
aaa
inc
mov
dec
jg
xchg
pop
pop
adcl
mov
dec
mov
jmp
fwait
cmp
repz
hlt
adcl
xchg
add
repz
hlt
xlat
hlt
stc
mov
pop
fsubs
add
push
mov
xchg
sarb
pop
pop
pop
push
jnp
pop
pop
push
push
pop
pop
pop
push
cmpsl
pop
jmp
pop
pop
xlat
push
add
jmp
pop
pop
ds
push
lcall
pop
pop
add
ret
ljmp
push
fiadds
adc
ret
incl
pop
pop
xor
jb
pop
push
push
insb
sbb
mov
sahf
cmc
ds
mov
leave
push
mov
fsubs
ficoms
add
fdivrp
cld
hlt
hlt
hlt
imul
pop
pop
mov
sahf
fsubrl
sub
jmp
hlt
hlt
fistps
mov
cmc
hlt
hlt
sahf
pop
repz
pop
cmpsl
push
pop
pop
fstpl
push
cmpsl
push
pop
pop
fstpl
pop
sub
mov
lock
xchg
cmpsl
push
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
mov
hlt
hlt
hlt
pop
lahf
pop
out
xchg
jb
pop
and
mov
pop
lock
sub
mov
repz
mov
or
cmc
hlt
hlt
cmc
pop
icebp
mov
out
push
fstpl
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
fstpl
pop
sub
mov
mov
mov
out
cmc
hlt
hlt
sbb
sub
mov
mov
cmpsl
push
pop
sbb
cmp
pop
pop
pop
lahf
pop
icebp
sub
mov
and
out
sub
mov
out
lahf
xchg
cmpsl
push
pop
cmc
pop
lock
jb
pop
push
mov
push
pop
dec
mov
hlt
sub
mov
cmpsl
push
pop
push
cmp
pop
pop
pop
mov
sub
mov
cmpsl
push
pop
sub
mov
pop
and
mov
cmpsl
push
pop
sbb
cmp
pop
pop
pop
mov
sub
mov
cmpsl
push
pop
mov
pop
lahf
pop
repnz
mov
cmpsl
push
pop
mov
pop
sub
mov
pop
lahf
cltd
and
mov
cmpsl
push
pop
mov
and
mov
cmpsl
push
pop
and
xchg
and
mov
pop
and
mov
cmpsl
push
pop
sbb
cmp
pop
pop
pop
lahf
pop
repnz
mov
and
hlt
lahf
pop
cmc
mov
fdivr
and
inc
push
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
ja
xchg
jmp
lea
dec
mov
lea
mov
inc
mov
mov
dec
inc
dec
mov
mov
lea
lea
xchg
push
call
mov
movl
mov
cmp
jbe
mov
lea
jmp
mov
mov
xchg
xchg
mov
mov
dec
inc
inc
dec
dec
xchg
mov
mov
dec
dec
dec
mov
mov
call
mov
jmp
lea
mov
mov
cmp
jno
mov
lea
mov
mov
lea
mov
dec
lea
lea
lea
xchg
inc
dec
movl
mov
mov
call
mov
cmpl
je
cmp
jo
mov
lea
xchg
lea
dec
lea
lea
lea
xchg
dec
mov
xchg
lea
xchg
mov
dec
mov
mov
call
mov
cmpl
je
cmp
js
mov
mov
inc
dec
cmp
jbe
mov
mov
inc
mov
xchg
inc
mov
mov
xchg
mov
lea
mov
inc
dec
lea
push
push
mov
sub
push
mov
push
call
cmp
jo
lea
lea
xchg
xchg
lea
xchg
dec
lea
mov
mov
xchg
mov
mov
mov
mov
mov
mov
cmp
je
mov
subb
cmp
js
mov
mov
inc
dec
cmp
jbe
mov
mov
inc
mov
xchg
inc
mov
mov
xchg
mov
lea
mov
inc
dec
xor
add
mov
xor
cmp
jo
mov
lea
xchg
lea
dec
lea
lea
lea
xchg
dec
mov
xchg
lea
xchg
mov
dec
incl
mov
cmp
jne
cmp
jo
xchg
jmp
lea
inc
dec
inc
dec
inc
mov
xchg
xchg
dec
lea
lea
mov
lea
mov
mov
lea
dec
je
mov
call
cmp
jo
lea
lea
xchg
xchg
lea
xchg
dec
lea
mov
mov
xchg
mov
mov
mov
mov
mov
mov
push
mov
push
call
cmpl
je
cmp
jo
lea
lea
xchg
xchg
lea
xchg
dec
lea
mov
mov
xchg
mov
mov
mov
mov
mov
cmp
js
mov
mov
inc
dec
cmp
jbe
mov
mov
inc
mov
xchg
inc
mov
mov
xchg
mov
lea
mov
inc
dec
cmp
je
xchg
xchg
mov
mov
mov
xchg
inc
mov
lea
inc
mov
xchg
lea
xchg
lea
push
mov
pushl
xchg
push
jmp
cmp
ja
xchg
jmp
lea
dec
mov
lea
mov
inc
mov
mov
dec
inc
dec
mov
mov
lea
lea
xchg
mov
pop
ret
add
add
outsb
add
insb
add
add
add
add
add
add
add
jb
jne
insb
push
jb
je
arpl
push
mov
add
cmp
je
xchg
xchg
mov
mov
mov
xchg
inc
mov
lea
inc
mov
xchg
lea
xchg
lea
mov
mov
mov
xor
add
mov
cmp
jne
pushl
call
add
cmp
jne
mov
cmp
jbe
mov
lea
jmp
mov
mov
xchg
xchg
mov
mov
dec
inc
inc
dec
dec
xchg
mov
mov
dec
dec
dec
movb
cmp
js
mov
mov
inc
dec
cmp
jbe
mov
mov
inc
mov
xchg
inc
mov
mov
xchg
mov
lea
mov
inc
dec
mov
mov
pop
ret
lea
push
mov
add
cmp
jo
lea
lea
xchg
xchg
lea
xchg
dec
lea
mov
mov
xchg
mov
mov
mov
mov
mov
jmp
lea
mov
mov
cmp
jno
mov
lea
mov
mov
lea
mov
dec
lea
lea
lea
xchg
inc
dec
call
test
jne
mov
jmp
movw
xchg
cmp
jp
mov
lea
mov
inc
dec
inc
xchg
mov
lea
mov
dec
lea
mov
jmp
lea
mov
dec
inc
inc
dec
dec
inc
call
lea
mov
pop
ret
push
mov
add
cmp
jo
lea
lea
xchg
xchg
lea
xchg
dec
lea
mov
mov
xchg
mov
mov
mov
mov
mov
cmp
jo
mov
lea
xchg
lea
dec
lea
lea
lea
xchg
dec
mov
xchg
lea
xchg
mov
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jo
mov
lea
xchg
lea
dec
lea
lea
lea
xchg
dec
mov
xchg
lea
xchg
mov
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
call
mov
cmp
jbe
mov
lea
jmp
mov
mov
xchg
xchg
mov
mov
dec
inc
inc
dec
dec
xchg
mov
mov
dec
dec
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
mov
cmp
jbe
mov
lea
jmp
mov
mov
xchg
xchg
mov
mov
dec
inc
inc
dec
dec
xchg
mov
mov
dec
dec
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
call
call
movl
lea
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
jo
lea
lea
xchg
xchg
lea
xchg
dec
lea
mov
mov
xchg
mov
mov
mov
mov
mov
movl
lea
push
mov
push
call
call
call
movl
lea
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
cmp
jbe
mov
lea
jmp
mov
mov
xchg
xchg
mov
mov
dec
inc
inc
dec
dec
xchg
mov
mov
dec
dec
dec
push
call
mov
cmp
jo
mov
lea
xchg
lea
dec
lea
lea
lea
xchg
dec
mov
xchg
lea
xchg
mov
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jo
mov
lea
xchg
lea
dec
lea
lea
lea
xchg
dec
mov
xchg
lea
xchg
mov
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
call
mov
cmp
jbe
mov
lea
jmp
mov
mov
xchg
xchg
mov
mov
dec
inc
inc
dec
dec
xchg
mov
mov
dec
dec
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
mov
cmp
jbe
mov
lea
jmp
mov
mov
xchg
xchg
mov
mov
dec
inc
inc
dec
dec
xchg
mov
mov
dec
dec
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
call
call
movl
lea
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
jo
lea
lea
xchg
xchg
lea
xchg
dec
lea
mov
mov
xchg
mov
mov
mov
mov
mov
movl
lea
push
mov
push
call
call
call
movl
lea
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
jmp
lea
mov
mov
cmp
jno
mov
lea
mov
mov
lea
mov
dec
lea
lea
lea
xchg
inc
dec
mov
pop
ret
popa
add
jo
ja
imul
arpl
jo
insb
add
add
add
in
add
movl
movl
mov
push
mov
push
call
cmp
ja
xchg
jmp
lea
dec
mov
lea
mov
inc
mov
mov
dec
inc
dec
mov
mov
lea
lea
xchg
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
cmp
jo
lea
lea
xchg
xchg
lea
xchg
dec
lea
mov
mov
xchg
mov
mov
mov
mov
mov
movl
movl
mov
push
mov
push
call
call
call
call
cmp
jo
xchg
jmp
lea
inc
dec
inc
dec
inc
mov
xchg
xchg
dec
lea
lea
mov
lea
mov
mov
lea
dec
je
movl
lea
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
cmp
jo
xchg
jmp
lea
inc
dec
inc
dec
inc
mov
xchg
xchg
dec
lea
lea
mov
lea
mov
mov
lea
dec
je
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
mov
pop
ret
nop
subl
jae
mov
cmp
jo
xchg
jmp
lea
inc
dec
inc
dec
inc
mov
xchg
xchg
dec
lea
lea
mov
lea
mov
mov
lea
dec
je
mov
mov
lea
call
cmp
jo
mov
lea
xchg
lea
dec
lea
lea
lea
xchg
dec
mov
xchg
lea
xchg
mov
dec
ret
ret
lea
add
jmp
add
add
or
inc
add
or
add
mov
sbb
add
mov
adc
dec
adc
pop
add
add
scas
ds
mov
add
roll
cmp
add
call
add
cmp
inc
inc
stc
in
add
sub
ss
add
aam
in
cmpsb
add
add
out
daa
in
das
add
and
cltd
pop
dec
cmp
xchg
dec
cli
pusha
pusha
loope
gs
mov
mov
sbb
add
jnp
pop
sub
cmp
push
sahf
adcl
add
aas
add
clc
test
je
sbbb
aam
add
add
push
insb
fildl
add
push
sahf
adc
iret
scas
xchg
add
outsb
or
out
xor
aaa
add
xor
jl
imul
data16
add
repz
popa
mov
mov
add
add
data16
inc
cmc
cwtl
add
xchg
xor
mov
repz
mov
add
inc
pop
dec
add
add
loopne
mov
pop
pop
fadds
lods
das
add
out
shll
pop
sub
loopne
mov
xchg
lods
stos
sub
xor
and
in
jmp
cltd
add
mov
add
sub
add
push
add
add
inc
stos
sbb
xrelease
add
or
add
push
pop
add
add
jne
add
ret
in
pop
mov
test
add
add
add
insb
push
push
fdivrp
add
xchg
adc
add
add
add
dec
add
insl
add
rclb
in
add
popa
in
xchg
jo
push
cli
dec
sti
les
add
aam
fcmovb
cmc
xchg
jmp
sgdtl
int3
mov
popl
add
mov
loopne
add
roll
sbb
dec
add
stc
add
add
loope
mov
bound
mov
xor
loopne
ret
pop
pop
sub
add
add
push
add
add
arpl
push
shl
add
sbb
insl
fwait
push
lea
sbb
dec
push
pushf
sub
pushf
push
mov
cmpb
add
fisttps
negb
sbb
inc
or
add
add
ret
add
stc
out
add
adc
enter
add
ret
jmp
cmp
loope
cmp
hlt
mov
adc
add
pop
xor
xchg
pop
adc
cmp
xor
loope
hlt
out
ljmp
inc
and
fiaddl
inc
pop
or
out
xchg
cmp
lock
jnp
add
add
add
add
xchg
push
and
add
mov
imul
adc
out
add
ljmp
mov
or
add
xchg
int
adc
lret
test
mov
add
push
xchg
add
add
add
add
popl
clc
movsl
sbb
stc
aaa
add
add
lahf
push
pushf
add
sub
add
mov
add
loopne
xlat
jg
push
cmp
das
cmp
sahf
pop
push
add
lea
mov
add
loope
cmp
jae
add
pop
in
lock
xchg
push
add
imul
aad
add
add
add
cmp
add
cmc
add
stc
push
or
mov
add
add
lds
lret
xor
jne
add
add
xchg
in
cmovp
int3
xchg
pushf
dec
gs
pushf
xlat
sti
mov
cs
push
dec
aad
and
repz
pop
dec
mov
ljmp
mov
enter
loop
pushf
push
int3
call
jecxz
pop
and
pushf
int
sub
lea
jne
loopne
lods
adc
cmp
jb
pop
jb
int
dec
out
imul
std
dec
jecxz
arpl
mul
push
leave
std
xchg
mov
cwtl
push
push
inc
mov
aaa
jns
adc
add
dec
rcl
jg
inc
scas
add
fiadds
lock
mov
das
pop
in
test
js
and
rcrl
rol
pop
out
es
jne
insl
jno
pop
dec
pop
or
cmpsl
and
in
icebp
lret
cld
stos
in
lret
dec
push
push
mov
and
xchg
mov
shl
aas
lods
sub
dec
call
push
jno
mov
xor
pop
xchg
mov
xor
sbb
or
push
sbb
lods
xor
xchg
ja
dec
push
mov
mov
mov
fmulp
test
test
dec
cmp
call
sbb
mov
pop
fsubs
loope
and
pop
add
sub
pop
xor
rcrb
or
inc
inc
xor
pop
sbb
sarl
adc
in
cmp
addr16
repnz
repnz
mov
sub
mov
shll
push
xorb
pop
aas
bound
xor
jns
xor
xchg
xchg
je
aas
out
loop
sub
cmp
fbld
or
mov
adc
mov
pop
dec
adc
inc
mov
pusha
lea
fbstp
push
push
jmp
leave
lret
mov
push
add
mov
and
push
push
daa
je
cwtl
das
pop
and
ret
push
lds
jnp
insl
mov
cmpsb
mov
push
test
adc
iret
cmp
ret
inc
pop
and
out
stos
inc
enter
push
imul
inc
dec
mov
fidivrl
aas
xchg
mov
stos
stos
imul
faddp
stos
lcall
fdivrs
repnz
mov
js
sub
or
test
jge
mov
aaa
negl
or
inc
add
int3
mov
inc
push
fldt
xor
inc
pop
xchg
scas
dec
sub
or
sub
pop
pop
fcoms
xchg
loope
mov
mov
enter
daa
and
enter
cmp
dec
add
jmp
and
lahf
pop
inc
mov
inc
inc
test
fmull
inc
iret
pusha
rorb
scas
js
xchg
push
lcall
loope
cmp
sub
add
in
jbe
outsb
fists
inc
shlb
sbb
mov
xor
sbb
cli
mov
push
imul
sub
roll
or
clc
xor
js
fsubrl
xchg
sahf
iret
mov
push
subb
mov
jb
or
fstl
and
js
cmp
ret
test
add
jg
mov
shlb
sub
xor
inc
fildll
pop
lcall
dec
mov
adc
dec
lods
ds
mov
push
test
test
daa
cmp
sbb
and
mov
dec
loopne
cmp
pop
lds
inc
imul
cli
ss
jecxz
mov
inc
mov
dec
sub
andb
fwait
sti
aaa
sub
cs
or
int3
flds
dec
jmp
movsl
adc
les
and
dec
bound
dec
lods
dec
lea
jnp
call
or
mov
shll
lods
pushf
js
inc
jmp
mov
dec
inc
xor
inc
push
ret
adc
test
xor
bound
push
jecxz
mov
lock
cmp
mov
mov
sbb
sbb
inc
ss
mov
xor
mov
xchg
cmp
lock
mov
mov
das
push
jbe
lahf
cmp
rorl
jecxz
es
inc
insl
pop
and
and
pop
mov
mov
or
je
mulb
mov
in
popa
sarb
std
outsl
aam
loopne
ret
push
lcall
pop
mov
in
idivb
ljmp
int
ret
mov
adc
mov
adc
pop
dec
fldl
sarl
scas
mov
sbb
push
popa
dec
cmp
pop
imul
bound
roll
xchg
mov
add
add
test
sbb
sti
or
xor
sbb
jb
adc
ja
add
divb
pop
sbb
roll
sbb
sub
and
dec
dec
mov
cmc
aaa
out
adc
jo
fwait
lahf
jns
add
mov
out
aas
sub
ss
test
jp
pusha
mov
andb
jle
scas
test
int
mov
sub
fists
xchg
dec
mov
inc
xchg
xchg
repnz
sbbl
and
lds
pop
popf
inc
mov
mov
data16
stos
or
shll
out
imulb
aad
fwait
or
push
lock
adc
ja
cwtl
hlt
imul
pop
jmp
inc
pop
mov
mov
push
inc
lret
outsl
cmc
or
sbb
xchg
fisubrl
adc
into
aas
imul
imul
jno
mov
push
cmp
leave
mov
mov
add
mov
out
outsl
inc
adc
mov
jb
add
push
add
adc
int3
mov
in
pop
or
mov
inc
jo
aas
xchg
scas
sub
xor
cmp
push
push
mov
lahf
cmpsb
xor
or
dec
fildl
enter
daa
and
dec
cmp
aaa
sbb
dec
dec
jb
loop
push
and
scas
lods
push
and
ja
lahf
jl
arpl
push
xchg
push
cmpsl
leave
mov
ss
pop
insb
pop
add
shl
push
mov
mov
or
shrl
sarb
aad
outsb
inc
ret
lds
push
push
mov
sbb
les
dec
movw
xor
jecxz
insb
fs
jo
mov
fsubrl
cwtl
lcall
loop
pop
inc
cld
sub
cmpsl
fiaddl
lret
jg
mov
mov
aam
mov
or
and
into
cmp
jge
out
testl
test
lea
jno
cmp
into
xchg
adc
cmc
repnz
xor
mov
test
add
in
sar
cwtl
imul
out
iret
adc
mov
data16
mov
and
pop
mul
add
and
mov
xor
mov
or
adc
loopne
fnop
pop
in
or
cmp
mov
adc
and
ja
cmpsb
popa
add
jge
pop
xlat
add
cmpsb
lods
mov
jb
idiv
out
gs
mull
nop
test
ret
jmp
fnstenv
xchg
pusha
sub
repz
push
dec
adc
call
mov
aam
xchg
adc
pop
and
jecxz
jl
mov
call
or
mov
sbb
shlb
je
and
jecxz
and
data16
loope
loop
dec
cwtl
int3
popf
es
mov
sti
sbb
cmp
dec
pop
out
les
fsubrs
sbb
js
imul
xchg
and
repnz
rcrl
movsl
es
data16
insl
aas
or
pop
cmpsl
and
push
mov
js
out
cld
add
pop
mov
xor
aam
cmp
aaa
pop
mov
dec
rorb
cmpsb
aam
and
in
les
adc
fnstsw
or
imul
xchg
xor
pop
aaa
popa
sbb
xchg
jae
out
add
lahf
mov
add
add
pop
test
inc
or
inc
xchg
push
dec
movsb
push
jnp
lret
outsl
fcomps
xchg
mov
mov
stos
jg
mov
inc
divl
mull
pop
jmp
call
or
and
dec
outsb
dec
mov
push
mov
pop
pop
cltd
cwtl
ja
out
dec
fadds
sbb
or
push
mov
dec
or
or
out
xor
repz
xchg
inc
stos
jns
jp
in
aad
xchg
adc
out
mov
sub
cltd
rol
or
sbbl
shll
nop
mov
in
iret
jle
adc
ret
xchg
fbstp
sub
jmp
pop
outsb
xchg
subl
test
lcall
stos
jle
jnp
incb
mov
scas
insb
adc
push
aaa
sub
iret
notl
test
xchg
adc
inc
mov
xchg
inc
into
int3
or
cwtl
and
add
fcmovu
repnz
xchg
push
stos
jg
jns
adc
fimuls
ffree
std
sti
pop
sarb
mov
mov
rcrb
arpl
imul
mov
fwait
sbb
push
fs
jne
dec
or
in
add
or
int3
popf
or
xchg
push
mov
mov
scas
or
push
and
mov
movsb
outsl
into
rcpps
das
cltd
cmpsb
mov
pop
in
xor
add
and
cmp
pop
jl
xchg
sahf
dec
loope
adc
sub
out
and
outsb
ficoms
ret
subl
lods
loopne
pop
push
xor
xchg
jp
js
nop
mov
push
xchg
mov
loope
lea
sub
add
cmp
stc
outsb
movsl
call
clc
shrb
sti
fldl
cmpl
repnz
fbstp
xlat
mov
filds
or
lcall
ret
gs
sub
mov
pushl
enter
call
mov
idivb
and
aam
ss
cwtl
mov
fdivrs
in
out
inc
pop
pusha
lret
and
mov
push
sbb
fs
jns
ljmp
es
outsl
arpl
inc
loop
or
stc
dec
xor
adc
xor
das
lods
or
popa
mov
out
cli
ljmp
cmp
jnp
or
pop
adc
test
pop
add
adc
add
imul
lods
fists
std
cli
push
cmp
ret
cmp
movsb
mov
fldl
lds
push
loopne
aad
js
nop
test
sbb
sar
mov
les
icebp
repz
inc
dec
call
jo
push
cs
or
insb
pop
cmp
or
into
sub
ret
popa
and
call
popa
aas
dec
cmpsb
pop
jb
lahf
pop
dec
push
clc
cmp
inc
jecxz
in
imulb
test
push
ja
mov
lahf
mov
dec
xchg
les
mov
jnp
lock
js
das
sti
jecxz
mov
popf
icebp
and
fcmovbe
lods
mov
imulb
fmull
cmpsl
and
inc
mov
dec
mov
cld
sub
in
lret
cwtl
mov
out
and
xlat
mov
rcrb
dec
sub
add
ret
je
mov
frstor
out
stc
xchg
je
sub
mov
popa
das
fcoms
lods
cwtl
and
mov
mov
xchg
dec
call
mov
add
push
cltd
sbb
sbb
mov
and
or
push
test
cli
enter
stos
sbb
movsl
shll
iret
and
jecxz
outsb
push
out
jno
ret
dec
fwait
add
and
push
mov
xor
lret
or
cmp
adc
mov
lcall
pop
push
shll
divl
lret
cmc
xor
adc
out
sti
pop
fwait
jg
xchg
dec
jmp
fidivl
negb
out
rclb
rcrl
jns
xchg
mov
aaa
mov
sub
cmp
and
sub
into
xor
mov
pop
and
push
jb
push
inc
aad
jecxz
xchg
in
ret
andl
push
xchg
hlt
mov
xchg
sub
clc
cmpl
sub
popf
nop
out
mov
in
in
icebp
repnz
adc
mov
mov
jle
xor
iret
push
xor
jnp
lret
inc
jno
in
jae
jnp
inc
rcrl
rorl
adc
ficoml
or
sbb
out
imul
fisubrs
lods
scas
rcrb
mov
leave
adc
hlt
or
sti
arpl
mov
jge
scas
xor
aaa
xor
jb
call
and
int3
mov
pop
imul
push
test
inc
xor
push
inc
xor
pusha
ljmp
test
push
push
popa
mov
in
sbb
enter
daa
and
push
jno
popf
sub
outsl
dec
push
int
ds
push
cmp
and
or
push
leave
push
sub
cmp
iret
inc
sbb
aad
mov
repnz
xchg
divl
push
mov
sub
mov
ja
or
test
or
mov
mov
jo
xor
rolb
jb
mov
notrack
sub
fisubrs
lcall
pop
fsubrl
fistpl
mov
rcl
add
jg
jecxz
mov
stc
mov
lds
or
cmpsl
mov
repz
add
lret
scas
shll
push
sbb
mov
cmc
sbb
xor
inc
outsl
inc
pop
push
loop
jp
stc
push
popf
cmc
fs
sub
adc
push
in
lods
repz
mov
sbb
sbb
inc
inc
cmp
call
imul
sub
fistps
loopne
push
adc
adc
pop
imul
pop
xchg
sub
jp
and
out
cmp
xchg
jne
add
sub
adc
dec
ss
sti
inc
daa
sub
xor
push
pop
jmp
fildl
icebp
xchg
fxam
test
les
enter
xor
lea
push
insb
call
mov
pop
in
shrb
pushf
jns
clc
jmp
in
pop
add
lock
enter
cmpsl
addr16
out
addb
mov
stos
je
xchg
jecxz
in
pop
imul
or
std
xor
mov
mov
fimull
sub
cmc
dec
jle
push
fildl
pop
hlt
mov
push
mov
int
lock
aam
es
push
and
and
popa
mov
es
daa
stos
insl
or
add
and
sarb
es
std
lret
pop
shrb
fnsave
and
jb
lcall
lret
shlb
scas
inc
sub
xchg
pusha
ret
add
dec
push
aas
clc
loope
call
ljmp
jne
add
repnz
cmp
mov
xchg
dec
push
idiv
and
mov
mov
cltd
push
daa
jle
pop
xchg
push
mov
fbstp
xchg
aam
jb
subb
xor
sbb
xchg
jnp
mov
mov
stos
pop
dec
adc
mov
in
mov
ret
rclb
or
xchg
cmpsl
xor
or
mov
fucom
cmp
pop
rol
push
ja
mov
inc
icebp
pop
test
fnstcw
gs
into
arpl
jne
popa
pushl
mov
daa
bound
jns
dec
dec
in
out
bound
mov
inc
or
mov
add
and
add
inc
mov
lret
mov
scas
cmp
loop
fsubl
and
fbstp
shr
lahf
xor
xchg
cmc
popa
ss
adc
push
test
int
adc
repz
and
out
stos
fs
xor
sub
xchg
insb
ds
scas
xor
dec
adc
mov
ret
cmpsb
pop
add
inc
jl
sbb
dec
mov
or
mov
and
inc
and
decl
adc
int3
push
ficoms
add
shlb
repnz
clc
inc
leave
push
or
arpl
imul
add
daa
sbb
adc
or
pop
cmpsl
add
bound
jae
cltd
pop
lcall
xor
mov
das
scas
leave
sub
and
int
mov
dec
movsb
test
add
add
sub
daa
and
and
into
jno
push
mov
in
aad
dec
mov
xlat
and
rolb
push
pushf
pop
ret
test
or
push
inc
lret
add
pop
loope
push
js
call
insb
push
jne
loope
outsl
push
sub
dec
test
xor
orps
jecxz
adc
in
inc
cmp
out
enter
xchg
xor
xchg
jmp
int
inc
jp
dec
inc
pop
or
adc
aad
fcompl
daa
sub
jne
pop
sbb
test
gs
add
mov
mov
cmp
ss
xchg
cmp
scas
test
or
cmp
out
mov
and
mov
into
aas
cmp
cmc
inc
jl
xor
push
outsl
and
es
pop
pop
stc
mov
or
adc
incl
lods
fcmovbe
cmp
add
sbb
push
xlat
lock
mov
cmp
sub
or
ja
pop
out
out
out
push
loopne
xor
pop
inc
sbb
imul
jno
xchg
out
cmpsl
fstpl
lods
or
sub
adc
mov
mov
lods
sti
repz
aad
cmpsb
out
nop
cmp
or
mov
inc
clc
sbb
xor
xorl
push
hlt
fimuls
dec
push
test
or
adc
push
dec
jmp
and
pop
movsb
jo
inc
dec
adc
inc
ret
aas
lea
jb
ficompl
inc
fistps
cld
into
sahf
jecxz
cmp
std
xlat
andl
mov
loopne
mov
leave
in
add
xor
xor
insb
mov
jp
sbb
push
das
mov
cltd
mov
lret
push
xchg
rorl
pop
es
and
test
and
mov
std
xchg
cld
sub
push
mov
dec
fnstsw
pop
jmp
enter
repnz
jae
ret
xchg
push
xchg
push
inc
xor
clc
sbb
pop
xchg
repnz
ljmp
in
lods
outsb
inc
movsl
mov
pushf
shll
push
rol
je
sbb
sub
cltd
mov
cmp
jbe
rorl
pop
test
jmp
pop
sbb
scas
pop
das
push
jecxz
dec
jnp
push
sub
sub
add
hlt
inc
xor
mov
inc
ret
das
pop
mov
in
cmp
or
mov
mov
ja
mov
mov
or
push
in
dec
mov
jne
xor
mov
xor
out
lock
mov
in
jns
xchg
lcall
sub
and
mov
in
mov
cmp
mov
xor
xor
jmp
mov
shrb
notl
xchg
xor
add
rol
or
mov
bound
popf
and
imul
std
scas
xchg
inc
and
jno
adc
xchg
and
into
inc
xchg
xorb
jge
xlat
lahf
cs
or
inc
enter
clc
inc
xchg
xchg
push
aaa
hlt
sbb
fiadds
fdivp
or
lds
popf
adc
pushf
dec
mov
hlt
mov
push
inc
jbe
sub
sbb
das
aaa
mov
pop
or
and
add
mov
pop
leave
call
dec
xchg
sbb
jo
xchg
ss
test
pop
and
inc
pop
cmp
inc
movsb
adc
push
push
repz
push
cmpsb
aas
dec
push
in
out
ljmp
aad
cmp
jno
xchg
aad
pop
mov
dec
jle,pn
ds
push
in
lret
insb
fldenv
pop
scas
ss
clc
dec
je
outsl
test
roll
inc
pop
js
mov
sub
js
jb
pop
adc
push
adc
loope
xchg
jecxz
movsb
mov
cmp
adc
adc
adc
mov
jno
andb
sbb
add
lock
add
or
sub
popa
dec
pop
mov
xor
test
jle
add
add
inc
cmp
mov
xchg
add
jg
es
mov
push
cmp
push
pusha
pop
and
inc
dec
ss
cmp
imul
push
lret
mov
cmp
in
sbb
pop
lret
into
and
sub
push
jge
xor
nop
in
add
movsb
loop
stc
out
je
repnz
cmp
daa
dec
mov
lods
rcll
pop
fwait
out
pop
or
andl
cmp
aas
or
push
sar
cmp
mov
popa
and
pop
pusha
jge
adc
cmp
mov
add
cld
inc
sbb
imul
xchg
mov
push
in
push
pop
into
sti
mov
pushl
nop
adc
pop
mov
fsts
popa
les
icebp
pop
sub
call
xchg
inc
pop
push
push
movsl
adc
sbb
pushf
iret
mov
pop
inc
out
inc
xor
cmp
sub
push
jb
inc
orl
enter
sub
push
enter
sbb
jle
sub
xchg
pop
int3
mov
insb
roll
push
daa
cld
sub
loopne
or
mov
sbb
ret
and
and
lcall
insl
xor
lock
mov
aam
mov
lods
xor
or
and
test
jnp
or
rcr
sahf
add
jo
paddq
insl
push
push
add
clc
push
scas
std
xchg
xor
popa
je
jmp
mov
dec
cmpsl
xchg
and
pop
or
cltd
shll
mov
and
xchg
popa
dec
inc
outsb
add
add
add
cmp
pop
ficoml
stos
cmp
push
rorb
push
add
les
push
sbb
xor
xchg
push
xor
sti
cmp
sti
sahf
cmpsl
mov
jb,pn
dec
mov
divl
ds
movsb
or
pop
pop
jae
scas
mov
sub
xchg
mov
gs
jae
out
outsl
jb
bound
jmp
in
push
push
xchg
dec
or
out
push
pop
sub
sbb
sbb
or
sub
pop
mov
mov
sbb
test
fucomip
adc
insl
lret
sbb
faddl
and
dec
push
xchg
push
mov
xchg
popf
push
mov
or
and
and
stos
jnp
sti
into
scas
clc
cmp
adc
xor
ret
rcrb
fadds
shll
mov
inc
fimull
add
xchg
out
inc
sbb
lock
lods
add
sbb
cwtl
and
aam
ficomps
sbb
lcall
out
into
fcmove
hlt
fidivl
hlt
in
add
fisttps
adc
into
sbb
push
mov
jno
add
shll
int3
dec
xchg
mov
mov
loop
inc
mov
scas
xchg
and
lret
mov
push
push
inc
nop
fwait
cmpsb
ret
in
into
adc
enter
daa
pop
mov
cmp
inc
cld
jl
push
dec
popf
cld
add
mov
mov
rclb
xor
inc
cmp
push
sahf
gs
inc
jmp
dec
sub
das
loop
cmc
nop
mov
push
xor
push
push
lods
sub
out
fwait
cmp
sub
outsb
xor
rclb
cltd
sbb
stos
mov
ret
sbb
mov
and
push
jnp
movsb
int
outsl
insb
sub
jp
pop
in
mov
arpl
scas
daa
mov
sahf
mov
cmp
adcb
jg
into
test
jb
insl
mov
sub
add
ss
pop
lods
fsubs
maskmovq
testl
mov
push
leave
mov
and
and
dec
into
add
loope
xor
cmp
loop
push
pushf
stc
sub
adc
sub
jnp
mov
lds
cli
mov
fnsave
xchg
add
pop
or
xchg
sbb
pop
push
push
loopne
sub
jg
sti
adc
daa
imul
inc
enter
loopne
cltd
xchg
add
movsb
lahf
rcl
jecxz
sub
dec
mov
mov
sti
push
push
out
stos
icebp
push
aad
gs
nop
lock
dec
and
jns
mov
inc
repz
xor
push
lea
iret
call
push
xor
pop
adc
dec
pushf
jp
aas
jmp
lock
dec
pop
inc
pop
into
test
rcr
lret
xor
jb
in
dec
xor
je
cmp
jecxz
pushf
sub
std
and
and
mov
mov
mov
pusha
sbb
push
scas
nop
mov
sbb
ja
push
dec
sbb
and
jge
shr
test
test
popf
dec
cmp
ret
xor
and
in
stos
jmp
add
push
movsl
mov
push
xor
mov
daa
test
shrb
lods
cmp
ret
mov
cmp
mov
fldl
sbb
xchg
pop
test
inc
xor
fldt
dec
out
bound
push
xchg
loopne
inc
mov
cltd
clc
push
xchg
test
in
mov
lods
clc
xchg
dec
cmpsl
imul
xchg
or
adc
mov
mov
stos
sub
sahf
push
jae
in
fistps
aaa
call
inc
enter
je
mov
cmpsb
add
pop
add
ja
pop
xchg
dec
xchg
int
inc
mov
aad
lcall
dec
ja
mov
mov
leave
xchg
dec
test
andl
popf
mov
stc
sub
sbb
jge
jle
jp
filds
mov
mov
mov
adc
sub
inc
fsub
idivl
cld
pusha
lret
fisttps
sti
mov
jmp
push
je
jl
push
push
push
popf
sub
test
sarl
stos
mov
pop
sub
mov
test
es
push
lcall
iret
shl
mov
pop
cmpsb
jle
inc
popf
or
jae
dec
or
out
xchg
jmp
inc
sub
xchg
add
aas
sbb
and
rcr
cmp
mov
mov
lods
mov
repnz
mov
leave
imul
arpl
pushl
xlat
cltd
xor
sbb
adc
aaa
xor
or
pop
int3
xor
aam
daa
cmp
push
adc
jmp
shll
scas
pop
ja
adc
inc
cmp
jno
movsb
lods
fistl
rcl
cmpsb
inc
ss
mov
hlt
daa
push
adc
cmp
sbb
dec
or
fsubs
leave
movsl
fldenv
and
sahf
adcb
push
test
imul
movsb
daa
call
popa
js
inc
jecxz
nop
movsb
shrl
add
sub
sti
jb
mov
sbb
out
xlat
adc
je
dec
orb
xchg
out
push
add
rcll
jmp
jle
lods
int
pop
out
mov
pop
adc
mov
push
sub
scas
fistpl
mov
sub
jg
jns
mov
outsb
dec
mov
and
mov
dec
and
nop
or
cmp
fistps
sbb
fildll
lret
jle
add
inc
mov
mov
push
divb
into
call
stos
cltd
xor
and
dec
push
push
dec
test
sub
shll
sub
mov
pop
cmp
insl
jecxz
cmp
in
or
push
incb
lahf
jno
xchg
inc
sub
push
insl
adc
fwait
subb
or
add
loope
shlb
cmp
jbe
xlat
jg
xchg
sub
push
mov
hlt
inc
test
add
cs
fiaddl
lret
js
dec
add
inc
xor
cs
push
les
lock
pop
in
add
mov
pop
cmc
pop
mov
stc
inc
pushf
and
jl
pop
lea
lea
pop
mov
push
xlat
jb
mov
je
jecxz
mov
idiv
std
movsl
std
int3
stos
icebp
cwtl
cs
mov
frstor
mov
stc
mov
fstpt
mov
mov
cld
mov
outsb
cmpsb
das
push
and
mov
xor
ja
insb
das
mov
cmp
inc
insl
test
xor
cmpsl
sbb
daa
icebp
adc
cld
add
lret
ret
leave
mov
and
ficoms
pop
inc
aad
sarb
bound
pop
mov
aam
adc
ret
aas
push
push
mov
jg
int
popf
xchg
scas
mov
popa
mov
mov
mov
lds
rcll
pushf
mov
cmp
add
mov
test
jp
xchg
jge
push
dec
xchg
test
movsl
clc
xchg
call
mov
in
sbbb
stos
sbb
adc
cli
std
cmp
jno
xor
in
or
cmp
mov
jmp
xchg
ja
add
dec
mov
inc
dec
inc
lret
or
or
mov
pop
mov
jne
hlt
in
movsl
xor
bound
stos
mov
out
adc
in
mov
out
outsb
scas
sub
adc
mov
add
mov
lahf
mov
mov
jle
pop
call
pusha
gs
int
adc
fstl
jne
push
sbb
xchg
popf
push
pop
cwtl
mov
pop
xor
stos
xor
bound
mov
rep
stos
clc
jnp
dec
dec
scas
mov
cmp
iret
xor
js
fnstsw
inc
test
in
pop
sub
or
jp
out
inc
inc
ret
adc
inc
xchg
pop
or
imul
imul
daa
add
mov
xchg
jne
leave
loop
dec
hlt
subb
std
mov
pop
jge
movlps
mov
aaa
out
cvtps2pd
cmpsl
mov
add
push
int3
pop
lret
cmp
push
jp
push
repz
xor
sbb
push
and
out
movsb
mov
notb
pop
out
enter
pushf
cltd
push
enter
daa
sbb
cwtl
dec
enter
and
movsl
loopne
test
sub
int
push
dec
jae
call
push
leave
push
xor
stos
inc
pop
je
ljmp
js
mov
push
sub
lods
jecxz
sub
fdivrl
cmp
outsb
test
pushf
rorb
adc
pop
mov
sbb
cltd
lods
add
daa
iret
xor
dec
push
addl
sub
jl
pop
add
mov
mov
add
push
jl
out
mov
sub
les
subl
les
xor
sbb
mov
mov
fcomps
lds
lret
dec
rcrl
mov
sub
into
lret
outsl
add
arpl
cmp
shrl
xchg
loop
mov
imul
adc
add
nop
lods
shl
cld
int
cli
sbb
je
inc
in
cmp
jbe
or
adcl
outsb
fistpl
rcrl
ja
loopne
xchg
or
out
jle
sbb
mov
jge
mov
pop
push
jp
scas
sbb
jo
xor
add
sbb
loope
cwtl
inc
inc
xchg
fprem
mov
int3
repz
popa
jl
lea
fmulp
call
add
icebp
pop
imul
adc
and
pushf
rolb
std
pop
xor
inc
inc
imul
inc
or
or
cwtl
jb
mov
xchg
je
clc
mov
test
repz
popf
pusha
std
jae
xchg
cwtl
jmp
jecxz
mov
pop
sbb
xor
in
in
mov
lods
divb
leave
push
cmp
xor
imul
lahf
bound
xor
roll
clc
dec
insl
nop
imul
cmpsl
sbb
sbb
icebp
pop
fildl
sub
mov
mov
fs
jo
gs
call
push
or
sub
aam
inc
push
ret
into
dec
sub
dec
mov
fstl
movsb
clc
xchg
out
lds
popa
mov
jge
mov
sub
xchg
idivb
mov
cltd
test
add
pushf
cltd
data16
and
mov
xchg
or
test
mov
xchg
sbb
out
cmp
sbb
stos
or
lcall
xchg
xchg
adc
mov
decb
sbb
outsl
xor
xlat
xchg
mov
sub
or
js
cmp
sub
jno
inc
in
ret
or
repz
cmp
push
cmpsb
mov
mov
out
or
adc
insb
sbb
in
jmp
xchg
cmp
std
out
sub
or
mov
addr16
cwtl
jp
stos
inc
mov
mov
mov
out
loop
jle
push
test
fisttps
xchg
out
fucomp
jb
test
stos
mov
popf
jp
sarl
or
stos
mov
adc
insb
adc
cltd
fisubrl
sub
adc
mov
ret
daa
pop
adc
push
inc
mov
or
dec
mov
maxps
cmc
mov
adc
out
xchg
mov
insb
sbb
mov
aas
fiadds
or
cmp
stos
mov
call
gs
arpl
pop
jbe
fdivs
sbb
xchg
aaa
scas
pop
out
or
mov
int3
or
jne
test
fnstenv
ja
js
and
popf
and
andb
inc
add
push
das
and
cmpsb
dec
repz
in
xorl
daa
sbb
add
and
jno
cs
jl
jle
dec
ljmp
movsl
out
sub
and
lahf
je
xchg
push
mov
iret
lods
push
jg
inc
xchg
cli
aad
lods
sbbl
cmpsb
arpl
push
lcall
push
xchg
mov
adc
outsb
pop
sahf
insl
adc
sub
enter
jb
test
add
loope
xor
adc
int
jecxz
sub
dec
lcall
pop
fdivl
xor
sahf
mov
test
adc
mov
xchg
mov
mov
test
ss
shrb
fcoms
xor
das
fmulp
imul
push
shrl
xchg
mov
push
and
mov
stc
into
scas
cmc
sub
xor
ss
jl
sub
jl
stc
push
xchg
adc
sub
adc
lods
pop
inc
mov
out
pop
dec
cli
dec
int
xor
or
out
es
jnp
or
loopne
scas
cld
pop
fdivl
push
imul
daa
add
inc
xchg
mov
and
cmp
call
sub
cmpsl
mov
lret
sti
pop
leave
popf
roll
fstl
inc
ss
inc
push
push
fcomp
das
mov
les
xor
xorb
mov
cmp
cmpl
pop
push
and
jae
jnp
stos
jmp
loopne
pop
roll
repnz
inc
dec
into
hlt
aas
test
inc
jb
sti
xchg
push
je,pn
aam
jecxz
mov
idivb
gs
sbb
cmpsl
mov
outsb
dec
mov
fisubs
fistpl
pushl
and
push
das
adc
pop
mov
sahf
or
rcl
mov
shrl
dec
dec
sub
cmpsl
sbb
movsl
mov
xor
push
cld
pop
cmpsb
sub
mov
add
imul
pop
test
repz
loope
dec
stos
xchg
aam
int
ret
pop
ja
push
inc
fnsave
enter
orl
jecxz
lods
test
mov
mov
xchg
cmp
out
psubb
lds
jl
cmpsl
cltd
popf
dec
dec
test
loopne
xchg
mov
test
pop
fs
fistl
sub
pop
rcll
mov
stos
imul
dec
push
pop
pop
add
xor
idiv
outsl
fadd
xor
subb
xchg
inc
sub
mov
outsl
aaa
test
in
aam
xor
fbstp
aad
dec
jo
mov
mov
mov
enter
and
mov
inc
xchg
out
jmp
pop
scas
cmp
xor
add
mov
out
pop
and
or
push
addr16
jge
imul
jnp
fsubrs
in
mov
pusha
fwait
mov
fildll
add
imul
andl
mov
mov
sub
push
popf
fs
and
dec
cmp
stos
xchg
outsl
mov
adc
xchg
jl
out
adc
dec
pop
dec
outsb
or
jae
scas
addl
icebp
or
jo
sbb
inc
ja
fidivl
xchg
or
jle
rcll
inc
fisubs
rol
xor
push
adc
repnz
mov
hlt
sbb
ja
sbb
dec
jbe
and
jo
add
inc
aaa
insl
and
jns
or
sub
push
mov
cmpsb
jo
sarb
mov
lret
nop
jecxz
cli
mov
add
xor
into
pushl
in
push
dec
daa
hlt
daa
sbb
cmp
movsb
jno
outsl
xchg
jl
adcb
sahf
mov
inc
add
out
xchg
bound
push
mov
mov
lret
inc
and
jg
pop
lret
and
js
shrl
pop
dec
adc
sarl
cmc
sub
sbb
ret
outsb
mov
and
add
xchg
addb
rolb
out
fnsave
adc
xchg
mov
lahf
sub
outsb
pop
add
loope
add
out
mov
sub
sub
pop
lcall
sti
mov
mov
stc
jo
dec
aad
mov
mov
stc
adc
pop
cmp
adc
inc
idivl
ret
rol
inc
mov
stc
out
loopne
mov
cmc
icebp
pop
add
outsl
pop
mov
enter
sub
dec
adc
std
std
lods
inc
cmp
cli
in
cli
sbbb
xor
push
push
cmp
adc
inc
jmp
sub
aas
pop
sti
lods
out
adc
cltd
xchg
sbb
sbb
nop
je
xlat
cmp
in
sub
ljmp
xor
cmp
leave
aad
xchg
cld
nop
pop
jbe
dec
lahf
mulb
inc
push
sub
push
push
repz
lea
pop
lods
call
add
mov
mov
mov
mov
sub
hlt
cmp
movsl
sarl
sti
lret
push
dec
or
test
mov
xchg
or
std
rcr
cwtl
pop
shrl
jge
mov
xchg
fisttpl
mov
stos
jp
mov
stc
sbb
das
repz
mov
push
sbb
shll
adc
insl
pop
arpl
dec
and
sbb
icebp
pop
pop
loope
adcl
adc
ljmp
mov
mov
mov
add
aam
test
ret
in
jecxz
push
shrb
push
clc
jle
aaa
xchg
insb
shrb
or
shll
push
imulb
dec
clc
out
out
add
push
repz
xorps
lods
add
nop
xchg
test
js
xchg
aas
push
test
xchg
pop
xchg
gs
movsl
aaa
shr
cltd
std
pop
xor
mov
out
pop
push
call
add
dec
push
jge
push
adc
xor
lods
or
dec
stos
xor
or
cmp
mov
int
mov
pop
out
mov
dec
arpl
pusha
inc
adc
adc
add
xchg
cmp
mov
out
out
lret
bound
fstpt
push
test
push
std
inc
sub
add
pop
addr16
dec
jp
inc
or
cs
cwtl
mov
loope
jle
pop
dec
in
cld
dec
pusha
ss
push
fisttps
icebp
in
pusha
mov
ret
loope
push
arpl
sub
mov
faddl
mov
aaa
insb
jmp
xchg
addb
pop
fcoms
mov
adc
pop
mov
dec
fdivs
repz
sbb
pop
into
inc
leave
dec
divl
pop
mov
pushl
or
jmp
pop
inc
ret
fisubrl
out
xchg
xchg
pusha
sbb
jns
ret
faddp
divb
shlb
mov
mov
leave
inc
mov
in
arpl
cmpb
out
jge
xchg
add
mov
jbe
or
or
int3
loopne
adc
push
pushf
mov
out
jo
arpl
and
jb
mov
fldenv
subl
push
nop
mov
daa
sbb
xchg
shrl
sbb
dec
enter
xor
inc
sub
std
push
xchg
lahf
mov
sub
and
test
xchg
xor
mov
xor
lret
pop
repnz
mov
jbe
bnd
sub
jns
cmp
push
and
adc
shll
sbbb
jle
sub
shlb
fistps
test
int
cli
imul
orb
shrl
push
and
faddl
mov
negl
mov
dec
adc
push
and
lds
repnz
sti
ss
sbb
cmp
lret
jbe
idiv
mov
lret
lret
push
mov
pop
movsl
into
je
jle
mov
andb
pop
loop
push
sbb
mov
pop
notl
add
xchg
xorl
in
cli
mov
lahf
xor
ret
inc
and
or
mov
gs
and
loopne
insb
push
pop
sbb
cmc
adc
sahf
imul
add
jns
xchg
inc
jge
sbb
lret
fwait
outsb
xlat
jnp
sub
outsl
mov
mov
je
cs
stc
push
aad
xchg
out
aaa
dec
loope
mov
mov
into
mov
push
lds
test
sahf
movl
imul
shl
dec
jmp
push
mov
lods
aas
inc
add
inc
jg
xchg
aas
out
sbb
mov
xor
clc
jecxz
mov
paddw
mov
sbb
push
mov
adc
and
dec
rcr
jp
mov
mov
imul
and
mov
or
mov
shll
adc
inc
ss
dec
and
js
and
pop
cld
scas
push
test
jg
dec
mov
jns
sbb
dec
xchg
sub
ret
ror
dec
add
cmp
jle
jp
pusha
ret
jnp
nop
push
xchg
push
xchg
fldl
int3
jp
stos
orl
movsb
shll
loope
lods
pop
xlat
leave
mov
push
mov
xchg
lret
push
int3
movzbl
mov
jns
test
push
out
mov
call
xchg
ficoms
xchg
or
pop
iret
stos
aad
ret
push
mov
add
add
jbe
lods
dec
arpl
lods
scas
test
xor
cmpsl
andl
repz
pop
test
mov
gs
test
popf
mov
dec
out
je
pushf
xor
test
shrb
jns
inc
xchg
sbb
xchg
sub
and
adc
sub
call
jp
lahf
fidivl
pop
mov
outsb
jle
dec
in
movsl
push
pusha
roll
xchg
push
cmp
cmpl
ficoms
es
inc
popf
out
mov
mov
sbb
out
and
mov
insb
push
repnz
sbb
scas
dec
adc
std
mov
push
iret
lods
sahf
cmpleps
mov
inc
aam
and
inc
lea
movsl
push
or
pushw
lock
inc
cmp
fcmovu
lcall
sbb
push
leave
imul
xchg
inc
jg
rorb
repnz
or
mov
sub
cmp
jbe
sbb
jge
xor
js
outsb
aaa
jmp
mov
jae
sbb
int3
lret
fstpl
sub
out
mov
mov
inc
scas
shl
and
dec
cmp
shll
sbb
in
cmp
enter
daa
sbb
jno
pop
in
inc
pop
rorb
pop
xor
xchg
movsl
cld
mov
cwtl
movsbl
xor
shrb
pusha
mov
not
cmp
testb
xchg
mov
and
or
int
and
outsb
or
adc
mov
adc
subb
jp
aaa
pop
cli
xor
cltd
push
int
pop
loopne
and
push
mov
push
insl
push
fdivl
xor
sahf
jae
mov
xor
gs
mov
pop
mov
cmp
repnz
shll
pop
out
gs
imul
xchg
cmp
mov
xor
shl
jecxz
cmpsb
mov
test
push
out
cmc
jg
lret
inc
imul
fsubp
xor
xor
loopne
jmp
adc
lods
adc
and
clc
or
mov
cmp
add
or
in
das
pop
lock
jg
loopne
call
ja
dec
inc
les
xchg
ret
adc
push
lods
add
push
sbb
push
push
jnp
mov
daa
shlb
shlb
jo
cs
mov
seto
jo,pn
pop
sbb
nop
into
mov
fstps
cltd
insl
inc
imul
add
gs
aaa
dec
adcl
jl
jmp
mov
pop
mov
pop
mov
and
test
sub
in
dec
cli
sbb
je
popa
sbb
shrb
testb
std
repz
aad
xor
insb
xchg
inc
cmpl
mov
test
sbb
lock
enter
jge
mov
and
push
es
cli
xchg
insl
sub
jecxz
sbb
mov
icebp
mov
xor
fldcw
out
sti
adc
orb
pop
loope
and
sub
insl
inc
aam
pop
cli
ret
or
mov
clc
hlt
lods
rclb
or
adc
repnz
mov
mov
jg
adc
push
test
mov
add
add
cwtl
mov
jbe
xchg
add
xchg
bndldx
rcrl
cmpsb
inc
stos
les
mov
or
add
xchg
or
add
mov
mov
cmp
into
pop
sbb
ja
icebp
sub
inc
inc
incb
fwait
push
sub
dec
leave
mov
arpl
push
out
mov
bound
pop
jns
mov
movsl
popf
xchg
xchg
ja
mov
sub
cli
or
addr16
jge
add
mov
lock
mov
pusha
insb
mov
lret
adcb
pop
jmp
sbb
or
std
push
jmp
adc
and
push
pop
xchg
adc
and
xor
jnp
ja
scas
lods
mov
push
inc
pop
pushf
adc
imul
inc
fistps
jae
jns
inc
out
mov
or
pop
nop
inc
shlb
lds
push
mov
rcr
sbb
fimuls
sbb
cmpsl
mov
mov
xor
push
leave
xor
sub
arpl
dec
jbe
jecxz
sbb
xor
sub
mov
inc
ljmp
inc
inc
xchg
clc
push
xor
jecxz
pop
scas
mov
cli
mov
movsb
push
hlt
jmp
pop
decb
sbb
inc
cmp
in
mov
xchg
dec
cmpsb
loope
ds
jb
movsl
add
scas
lahf
lock
lds
push
dec
test
sub
rolb
mov
push
pop
inc
xor
lret
pop
or
jno
sub
cmp
and
popf
sub
scas
mov
iret
std
mov
out
lock
xchg
cmpsl
xor
inc
pop
incl
fimuls
add
push
nop
adc
int
mov
mov
lcall
jl
pop
pop
xor
mov
out
test
cmpsb
pop
orb
mov
pushf
shl
mov
pop
stos
mov
ljmp
fidivl
xchg
cmp
inc
pushf
fcomi
jns
ror
ret
rorl
sbb
insl
and
add
xor
sbb
stc
sub
scas
imul
cbtw
jno
lods
stc
jae
mov
adc
mull
cli
sbb
jno
ja
pop
cmp
mov
mov
gs
jns
pop
pop
adc
insb
imul
bound
push
add
lahf
sbb
inc
cmpsb
dec
xlat
stc
ss
sub
push
out
mov
jbe
sar
sbb
fsubrl
pop
inc
lret
into
loop
in
daa
stos
dec
mov
into
pusha
cli
jae
in
repz
pop
jo
xor
ds
fs
jg
rcrl
imul
daa
out
mov
pop
pop
jecxz
inc
push
stos
hlt
inc
mov
adc
and
loope
pop
lock
dec
jno
into
je
lea
jecxz
fcomps
test
std
mov
mov
nop
mov
mov
add
dec
lods
sahf
sub
mov
push
sbb
lock
movsb
shrl
cmc
cmp
jp
sbb
cmp
rcll
sti
xchg
sbb
loope
push
pop
dec
cmpsl
pop
sti
nop
mov
mov
das
lret
pop
mov
sub
subb
pop
add
push
shlb
inc
sub
dec
xor
adc
and
cltd
rcll
sbb
insl
fstl
add
das
and
ljmp
or
into
mov
xchg
pop
shll
pcmpeqb
push
add
mov
jns
roll
fcmovne
xchg
cmp
xchg
out
aas
shr
push
clc
pop
xor
stos
mov
inc
push
call
in
add
fdivl
push
stos
fisttpll
outsl
cmp
xor
aad
mov
jnp
inc
mov
pop
inc
push
ja
lods
in
dec
cmp
mov
or
fstpl
fwait
test
dec
lods
ret
sub
std
mov
dec
jmp
addr16
bound
mov
in
sbb
xchg
movb
fstps
dec
or
adc
cmpsb
mov
mov
xor
mov
sbb
movsl
jle
mulb
sub
mulb
test
loop
add
and
xchg
jecxz
cmp
lods
sbb
popf
cmp
lds
stos
loop
pop
and
aam
insb
sub
addr16
cltd
sub
mov
adc
lock
imul
ret
dec
pop
daa
sti
mov
dec
jae
out
dec
inc
repnz
testl
aas
adc
xchg
gs
sbb
xor
xlat
fidivs
push
lods
rol
jns
repz
xacquire
leave
lods
aaa
hlt
inc
cmpl
lods
loop
jge
sbb
aaa
imul
daa
int3
mov
sbb
xor
fisubrl
pop
fcmovne
cmp
sbb
mov
cmpsb
fidivrl
cmc
enter
daa
pop
sub
cmp
out
ret
jno
fimull
dec
adc
and
or
xor
into
mov
in
push
fucompp
xchg
test
idivb
push
inc
popa
xchg
jl
stos
pop
addr16
bound
push
jg
dec
sub
gs
dec
adc
mov
outsb
dec
add
adc
jno
dec
mov
call
and
xor
push
xchg
sti
and
stos
lret
sbb
pop
call
add
pop
out
faddl
insl
mov
stos
pop
mov
push
std
scas
subb
scas
jg
fwait
mov
sub
xchg
icebp
ss
push
jnp
cmp
sub
shll
jo
jl
insb
sbb
mov
or
push
or
loop
ret
xchg
jecxz
fsubs
push
out
in
sbb
mov
jb
arpl
testb
dec
push
cmp
dec
in
cmp
inc
adc
push
sahf
out
jne
pop
gs
mov
aam
push
pop
ja
mov
out
les
inc
and
sub
movsl
xor
xchg
lea
sbb
jl
cwtl
xlat
cmp
sub
pushf
xor
mov
loope
add
leave
mov
cs
aad
call
nop
enter
sbb
inc
inc
mov
rcr
inc
and
into
repz
xorl
pusha
push
lea
mov
cmc
pop
popf
aas
adc
adc
into
pushf
shlb
enter
inc
inc
xchg
pop
and
ror
sbb
ret
add
in
call
or
inc
test
imul
in
cwtl
dec
mov
jb
push
lret
mov
dec
xchg
pop
fildl
rcrb
mov
sbb
jmp
push
das
outsl
sbb
xor
push
and
cmp
shll
sbb
insl
cli
push
aad
adc
das
mov
arpl
sar
adc
xchg
mov
pusha
mov
pop
sub
sub
int
aam
pop
mov
sub
rclb
pop
loope
jp
push
adc
push
lock
inc
insl
arpl
xorl
jp
ss
mov
cld
mov
add
psubw
rcr
add
xchg
cmp
dec
fists
pop
inc
outsl
xchg
shll
inc
fisttps
stos
mov
mov
add
mov
hlt
decl
divl
into
fidivl
cld
mov
mov
push
ja
in
jo
outsb
fstpl
repnz
add
lock
jne
mov
add
inc
mov
and
in
out
jmp
adc
adc
lock
outsb
addr16
mov
mov
push
into
mov
mov
enter
jmp
das
clc
jae
mov
fcoml
jmp
scas
xchg
dec
sub
notl
outsl
mov
loope
cltd
bnd
fsubr
push
stos
push
dec
mov
sub
sti
jnp
jg
scas
jae
push
push
sarb
xlat
iret
lret
ret
xchg
pop
pop
js
inc
cmc
les
cmc
dec
xlat
or
xlat
movsl
lods
inc
mov
insb
hlt
xchg
mov
arpl
ficoms
dec
vzeroupper
call
mov
fisubl
cmp
sub
push
jbe
jae
jge
pushw
sbb
loope
or
add
int3
mov
repz
sub
xor
cltd
aam
scas
pop
addb
out
jae
lea
jno
jle
mov
cmpsb
pop
or
in
in
sti
int
push
add
daa
push
stos
jl
push
xchg
add
iret
pushf
jl
add
dec
test
mov
movsl
adc
lahf
lahf
cs
push
lods
jmp
jae
rcll
aas
adc
pop
dec
js
movsl
insl
pop
mov
add
dec
fldcw
cmp
mov
adc
dec
int
popl
dec
and
sbb
dec
xor
xor
mov
push
xchg
pop
int
fsubrs
pop
jle
sub
jb
add
sub
je
test
mov
addb
fisubl
mov
icebp
and
mov
adc
jge
pusha
sbb
cmp
mov
lret
div
jge
lret
nop
sarl
pop
sbb
jmp
cmc
aam
outsb
xor
pop
outsl
mov
xor
out
movsb
push
stc
lcall
adc
pop
imulb
insl
push
add
cmc
cmpsl
mov
subl
xchg
cmp
sahf
cmp
cwtl
cmp
loopne
mov
inc
dec
adc
push
jg
cmp
adc
adc
xchg
push
cmp
cmp
pop
mov
bswap
mov
in
dec
sub
cs
xchg
dec
nop
mov
hlt
mov
leave
push
fnstcw
mov
cli
mov
rep
pop
jbe
add
xchg
hlt
cmp
pop
push
push
adc
mov
imul
ljmp
jmp
in
aas
bound
adc
mov
mov
xor
add
notb
test
std
add
cbtw
push
dec
fnstenv
inc
jbe
cmpl
inc
call
mov
sub
lock
cltd
movsl
das
dec
pop
xchg
call
mov
es
mov
cs
or
pushf
cmpsl
adc
push
push
cld
pop
cmpsl
inc
lret
cmp
mov
xchg
cmpl
rclb
jge
sub
repz
cmpsb
ret
mov
and
addl
movsl
lds
ljmp
mov
mov
fisttpll
inc
xchg
out
jno
cmp
jmp
cltd
out
leave
test
cmp
mov
jno
xchg
push
jns
shll
xchg
movsl
jg
popf
mov
stos
xchg
sbb
or
sahf
pop
cmp
ljmp
outsb
mov
stc
ja
or
cmpsb
xor
push
jno
xchg
add
cli
mov
xchg
dec
fdivl
mov
dec
and
inc
add
insb
movsb
fwait
loop
jle
jb
test
mov
dec
dec
out
and
mov
jns
and
in
adc
mov
sub
jmp
xchg
addr16
daa
jp
adc
mov
cs
mov
test
shl
xor
cmp
ljmp
xor
addl
mov
fdivrs
pop
bound
stos
enter
inc
test
insb
add
jnp
sub
push
sbb
mov
ret
jbe
xchg
cltd
sub
aam
cmpsb
dec
inc
clc
lds
rorb
push
cmp
dec
jns
adc
sbb
jmp
fdivp
les
sar
test
sub
imul
jbe
jns
jge
xchg
xor
fs
repnz
out
bound
aas
das
icebp
add
dec
adc
ja
jp
into
sbb
or
es
hlt
loop
scas
cmp
cmp
cmp
movsb
or
cmpsb
loopne
sbb
aam
inc
enter
daa
adc
jmp
jno
call
mov
or
adc
movsl
sbb
lcall
sbbb
push
mov
out
jg
outsl
add
sbbb
adc
mov
shrl
test
loope
mov
sub
mov
add
or
shlb
jle
popa
push
xchg
xor
xor
cmp
add
daa
pop
xor
sar
cltd
sub
xor
adc
aas
lcall
xor
pop
push
popf
sub
test
test
push
sbbb
jg
ss
mov
test
mov
sub
cltd
add
mov
push
lods
fdivs
jnp
mov
imul
les
push
add
push
xor
insb
into
jecxz
fwait
dec
inc
xor
mov
loop
mov
fs
push
adc
adc
mov
pushf
out
lea
xor
add
or
or
mov
roll
pop
mov
and
xchg
adc
das
inc
add
push
mov
xchg
adc
adc
repnz
mov
daa
sub
data16
in
mov
push
daa
pop
push
cs
fcom
cmp
enter
inc
dec
fxch
fiadds
push
mov
add
add
jg
jns
popa
lea
test
xadd
cld
mov
ljmp
mov
jmp
fisttpl
pop
dec
fdivl
mov
push
xor
add
insb
jb
dec
pop
dec
sbb
jecxz
sbbb
out
std
stos
inc
inc
cwtl
roll
mov
aad
adc
push
popa
daa
mov
ret
lods
mov
addb
push
sub
shrb
mov
dec
xor
mov
mov
dec
pop
mov
inc
mov
adc
cld
test
lret
bswap
and
push
mov
fst
jmp
mov
jecxz
inc
add
push
outsl
lret
xchg
adc
loopne
mov
out
sub
cmpsl
mov
lods
jb
jns
mov
es
inc
adcb
pop
mov
setno
adc
add
cmp
mov
sub
aaa
pop
test
adc
cmp
fstpl
adc
inc
pop
xor
inc
stos
cmpb
rcrl
cs
in
bound
dec
mov
mov
aam
shlb
xchg
jl
mov
cmp
mov
push
cs
ja
clc
aas
dec
adc
dec
jp
enter
adc
dec
push
sub
jne
pop
xchg
mov
push
out
add
xor
cmp
in
popl
xchg
mov
jns
bound
sub
out
mov
adc
jp
rep
mov
bound
mov
data16
int
dec
in
into
mull
jo
filds
xchg
jle
pop
jmp
inc
jo
push
cmc
pop
into
popf
mov
mov
push
pop
cli
stos
cmp
and
cs
insl
mov
jnp
xchg
pop
scas
cmp
in
pusha
mov
adc
scas
add
mov
pop
pop
int3
pop
xor
jae
call
movsl
or
int
xor
cs
pop
in
xchg
push
jecxz
jle
pusha
imul
cltd
xor
adc
adc
xor
adc
movsb
arpl
sbb
sbb
pop
aaa
aaa
cmpsb
or
xor
add
int
pop
std
inc
rorl
out
mov
jo
add
xchg
shlb
movsb
xchg
add
cmpsb
arpl
aas
in
mov
ret
adc
sbb
mov
and
jl
rolb
arpl
and
sub
push
push
test
test
push
ss
inc
push
mov
sub
sbb
js
add
push
push
gs
loope
arpl
sub
or
add
jb
xchg
adc
add
pop
mov
orb
pop
sbb
adc
push
pushf
je
int
sahf
xchg
sub
fcompl
and
fmull
xchg
popa
sub
xchg
call
aam
jg
or
mov
int
test
jne
out
bound
sub
or
loop
out
xchg
ljmp
repnz
inc
mov
loop
add
stc
or
add
fisttpl
pop
lods
xchg
jecxz
mov
loope
repz
cli
out
push
xor
dec
sarb
aad
or
xchg
adc
and
movsl
subl
data16
adc
sbb
enter
loop
add
fists
inc
jno
cmp
pop
test
cmc
or
inc
in
and
add
xchg
jmp
movsb
aad
jmp
nop
pop
xlat
cmovg
test
out
lods
les
mov
sub
jl
test
call
jnp
out
pop
mov
movsl
adc
int
pushf
shl
fs
pop
jmp
bound
shll
mov
and
test
jecxz
inc
jo
xchg
lcall
jl
dec
mov
push
ret
call
lret
dec
pop
cmp
mov
push
adc
lock
fstl
or
mov
mov
fisubrl
jo
dec
xchg
es
fcmovnbe
dec
add
xchg
mov
call
inc
pop
lret
sbb
mov
mov
inc
xor
jl
mov
sub
aam
aam
ret
aad
inc
push
daa
rcrl
clc
sbb
aam
xor
xchg
lods
fucom
out
mov
mov
push
lea
sub
pusha
pusha
add
xchg
cltd
push
pop
in
repz
loop
mov
jecxz
dec
adc
fsubrs
mov
sub
rorl
cmp
lds
je
int3
add
or
notrack
xor
push
xor
and
scas
jecxz
mov
or
sbb
mov
or
sub
inc
xor
aas
or
dec
mov
dec
cmp
jecxz
inc
cmp
mov
pushf
and
jecxz
sub
sbb
jns
in
in
pop
xlat
xchg
add
push
out
and
fs
stc
or
ds
jp
xchg
ds
mov
aad
jle
ret
inc
iret
frstor
fildl
fbld
adc
jmp
bswap
cli
sbbl
aas
popf
bound
xchg
ret
scas
lods
and
xchg
insb
fadd
xor
enter
ss
push
cmpsl
aas
in
adc
add
ret
mov
inc
push
aam
jae
outsb
add
or
imul
push
inc
cmp
enter
mov
sbb
in
imul
fidivrs
add
insl
hlt
faddp
cs
into
mov
shl
fs
mov
arpl
fildll
sbb
jns
aaa
sbb
or
xchg
jns
dec
pushf
push
push
rcll
test
stos
cmp
scas
sti
xor
arpl
cmp
cmpsl
dec
push
divb
cmp
out
push
enter
daa
adc
cmp
mov
jno
test
jl
je
dec
shll
arpl
cmp
lcall
and
push
and
cmp
mov
pop
js
adc
inc
mov
loope
pop
std
sub
aaa
push
cmp
inc
outsb
aad
iret
adc
fstpl
lret
pop
adc
sbb
jnp
add
das
sahf
xor
das
jne
inc
pop
inc
sub
adc
sti
inc
lock
sbb
out
inc
sub
sbb
outsl
aas
dec
adcb
sti
mov
pop
sbb
and
and
cmp
call
sbb
add
dec
mov
jmp
inc
into
test
adc
xor
fldcw
xor
cmpsl
sbb
fs
sbb
sub
data16
cltd
sub
pop
std
and
in
cli
sbb
jmp
cmp
scas
push
or
scas
andb
push
inc
js
pop
repz
cmp
cwtl
imul
xchg
xchg
cltd
xchg
insl
frstor
push
mov
push
lret
lea
sbb
test
cs
cmpsb
dec
aad
lods
outsl
nop
xor
testl
fldt
push
cmp
les
rolb
fisttpl
or
add
sbb
pop
imul
pop
jmp
pop
cs
mov
inc
inc
cmp
out
aas
push
dec
jb
xor
dec
out
add
mov
sbb
neg
rcrl
aaa
mov
in
mov
scas
fldl
inc
repz
fcmovnb
push
mov
shll
mov
ja
lock
push
or
jmp
mov
or
js
rcrl
xchg
push
insl
xchg
ljmp
adc
pop
mov
mov
push
dec
lret
mov
pop
mov
stos
stc
lods
mov
fwait
int
rorb
cmp
aam
dec
jp
fs
push
ljmp
clc
push
adc
xchg
fs
clc
ljmp
and
mov
xchg
mov
movups
dec
ret
daa
sbb
cltd
mov
ss
inc
lcall
pop
mov
test
xor
cmp
add
jbe
not
mov
out
mov
push
pop
pop
sbb
and
pushf
incl
outsl
pop
xor
xor
or
nop
add
mov
lret
mov
scas
mov
adc
sti
aam
inc
lret
or
jp
fwait
outsl
pushf
xchg
dec
sbb
xor
xorl
ret
xor
in
subb
ret
sbb
push
cmp
fsub
mov
jp
into
cwtl
mov
ss
mov
inc
jge
jle
pop
mov
pusha
push
pop
sbb
and
test
xchg
fcmovu
mov
push
jnp
cmp
add
sarl
aam
push
stos
and
cwtl
and
leave
or
fnstsw
les
xor
mov
jnp
ret
test
aad
inc
and
cmp
loopne
or
ret
daa
fwait
inc
mov
sub
xchg
sbb
repnz
popa
imul
sbb
outsl
rorb
mov
adc
leave
ljmp
movsl
hlt
mov
inc
cld
jbe
inc
push
jge
js
sbb
mov
sbb
adc
shr
xchg
int3
cmp
pop
pop
fisubl
xor
add
jae
and
dec
dec
cmp
xor
cmpsb
cmpsb
cmpsb
imul
mov
daa
adc
mov
jno
or
jl
in
ret
dec
inc
adc
jl,pt
or
aad
lahf
stos
fldt
test
in
sub
dec
mov
xor
mov
pop
test
xchg
push
mov
mov
jle
push
cmp
imul
adc
mov
je
xorb
test
sub
repnz
xor
push
test
push
mov
cmc
test
pop
jp
imul
jge
fcompl
std
sub
add
call
mov
dec
lods
jg
mov
movsb
mov
in
mov
pop
or
pushf
xchg
ss
pop
mov
fsubs
lods
mov
rcll
in
sbb
stos
xlat
cmc
lock
outsl
xor
loop
xor
lods
xchg
push
adc
fs
xchg
jge
arpl
jl
pop
mov
out
push
into
cli
dec
jne
xor
pop
mov
jl
add
gs
in
jle
fildl
jne
push
lea
imul
pop
add
scas
xchg
pop
xor
cmp
or
mov
clc
cld
sti
xor
and
mov
add
adc
jge
xcrypt-ofb
cmpsl
stos
dec
imulb
inc
adc
cltd
aam
es
dec
rep
jbe
movb
sbbb
pop
sbb
scas
adc
or
shr
mov
gs
xor
inc
cmp
aas
fisubrs
push
js
dec
cmp
je
jnp
jecxz
lea
sbb
xlat
std
mov
mov
pop
mov
sub
sbbl
jp
mov
or
lret
mov
les
lock
sub
insl
jge
dec
dec
clc
dec
fwait
cmpsl
adc
cmpb
lcall
divl
sbb
and
and
lcall
in
lret
sub
repnz
aam
sbb
jmp
lods
lock
fnstsw
mov
mov
cmpb
mov
adc
out
imul
jp
scas
daa
aaa
add
mov
mov
mov
int3
daa
xchg
cmp
mov
mov
sar
lahf
movsl
pop
xor
mov
hlt
pushf
add
xchg
out
jmp
or
xor
inc
les
or
add
pop
orl
dec
out
mov
bound
jl
fwait
sahf
pop
cmc
dec
and
jne
sub
hlt
out
mov
jg
jns
cmp
jb
push
mov
and
sub
xlat
gs
addr16
daa
jp
leave
ds
aad
mov
mov
inc
jle
loope
in
std
and
in
daa
fbld
into
sub
cmovb
xchg
movsl
ds
push
ds
popf
daa
stos
dec
mov
adc
stos
xchg
js
and
jno
mov
scas
mov
jge
ja
movsl
popa
push
ret
mov
inc
sub
cld
jae
inc
out
inc
add
dec
or
jp,pt
inc
cmp
sub
jne
jecxz
outsl
hlt
cmc
sbb
mov
imul
je
subb
lds
sbb
cmpsb
sarl
jns
push
leave
jbe
add
push
insl
das
arpl
push
xor
sbb
shlb
and
or
add
and
loop
xchg
cld
shlb
pusha
in
scas
mov
bound
and
xor
pop
sub
in
jo
or
cmc
mov
daa
adc
jb
push
push
dec
jno
mov
jl
cmp
dec
scas
dec
cmpl
fstps
xor
mov
pushf
xchg
lahf
leave
mov
ljmp
and
inc
mov
inc
push
pop
push
fucomip
js
in
xchg
pop
ret
push
shrl
int3
push
loope
rol
jmp
push
rep
fwait
test
adc
xchg
or
fstp
or
inc
xchg
sub
pop
mov
add
xchg
xor
movsb
dec
push
movsl
add
int
ja
sub
in
ja
stc
or
jno
and
sub
inc
cmp
sahf
mov
mov
jge
in
lret
cmpsb
sbb
pushf
dec
mov
cld
ret
mov
sbb
cmp
aad
or
scas
dec
sahf
cmp
pop
aad
divl
xchg
sahf
shrl
sbb
xchg
xchg
mov
sahf
xor
das
add
adc
pop
stc
sub
mov
adc
xchg
push
sub
lods
dec
roll
out
dec
push
cli
or
xor
or
fdivl
or
push
sub
inc
shll
jbe
xor
cmp
imul
nop
adc
dec
sub
mov
add
sub
xor
arpl
mov
jecxz
insl
cs
cli
aad
pop
dec
nop
ljmp
inc
sub
js
jns
mov
lea
rcrl
clc
mov
pop
adc
in
pushf
aam
jbe
mov
sub
inc
jb
mov
jge
pop
jb
out
sahf
dec
mov
fwait
je
repz
sbb
negb
outsl
std
inc
lods
jnp
lods
inc
les
add
test
sbb
mov
and
mov
ljmp
or
lahf
test
jnp
inc
and
cmovno
cmp
es
mov
xor
cmpsl
adc
clc
mov
insl
push
mov
xor
dec
lret
dec
sarb
cmp
fwait
pop
push
sub
dec
add
popf
inc
rol
cmpb
frstor
clc
int3
jle
xchg
loop
jo
mov
mov
mov
int3
out
xchg
dec
lea
prefetchwt1
jmp
test
lret
or
push
test
mov
movsb
sbb
cmp
pop
stos
cmp
pop
push
pop
popa
jbe
inc
push
fildl
pop
jnp
incl
xor
leave
clc
xor
into
mov
push
xor
adc
cmp
mov
dec
loope
fiadds
fisubl
fwait
int
fs
loope
sbb
cmp
mov
test
out
andb
bound
call
jns
fsub
in
rorl
outsb
dec
aas
sub
sarb
addr16
sarb
js
mov
cltd
xchg
int3
adc
pop
pop
mov
pop
sub
inc
xchg
cmpsl
ffreep
insb
dec
xchg
lret
jmp
jo
xor
inc
in
push
add
popf
popf
dec
push
inc
mov
push
arpl
and
push
adc
cmc
stc
scas
lds
cmp
inc
notl
pop
ja
iret
add
or
mov
inc
pop
test
xchg
inc
aaa
xlat
pop
jae
xchg
adc
loopne
or
mov
cmp
fisubrl
inc
add
fsub
sbb
imul
dec
fisubs
cmc
imul
iret
adc
dec
aas
add
int3
in
leave
in
ss
hlt
push
prefetch
pop
mov
jge
fimull
sbb
inc
ja
mov
push
cltd
add
push
int3
push
add
jp
mov
mov
add
popa
cmp
sub
dec
push
jecxz
shlb
push
and
lock
lea
xchg
mov
pop
andb
push
inc
xor
ret
movsl
cmp
mov
lahf
call
sub
test
xorl
dec
add
pop
js
ret
js
mov
pop
add
mov
les
mov
cmp
add
push
adc
outsb
push
repz
cmp
sub
xchg
mov
xor
push
xor
test
cmp
jl
jo
js
pop
pop
js
pop
lcall
test
mov
pushf
sub
test
test
or
jg
addb
inc
fwait
test
mov
jne
and
push
push
ss
cmp
sbb
divl
out
lret
loop
inc
xor
cmp
in
int
push
jbe
cmc
jle
sub
jb
jb
lock
loop
xor
stc
in
adc
ret
les
pop
and
lods
xor
imul
sbb
xor
leave
insb
cmp
xor
push
xlat
gs
inc
pop
loopne
into
aas
pop
push
fbstp
imul
jno
add
call
or
sbb
push
xlat
icebp
sbb
mov
into
pop
dec
sti
xchg
mov
pop
aad
dec
aas
nop
dec
mov
mov
pop
dec
fld
inc
scas
les
xor
dec
sbb
mov
xchg
lea
xchg
call
ja
inc
pop
cmpb
pushf
jg
imul
popl
aaa
inc
inc
pop
xchg
inc
lea
mov
jb
lcall
idivl
xlat
mulb
shr
push
daa
mov
or
push
push
fistl
xchg
push
pop
repnz
in
xor
pop
and
pop
xchg
rorl
sbb
dec
out
inc
dec
cmpsl
packsswb
icebp
inc
xor
cld
pop
js
lret
aad
aaa
mov
mov
movsl
mov
rorb
pop
nop
sub
dec
mov
ret
adc
mov
fisttpll
xchg
sbb
std
ds
popa
in
jo
mov
gs
das
and
xchg
xchg
adc
push
pop
xor
add
fwait
cltd
xor
addl
outsl
rorb
inc
test
ss
xchg
movsl
outsl
shll
inc
pop
stos
sub
sbbl
enter
je
sub
jecxz
pop
xor
mov
xchg
xor
mov
mov
xchg
shlb
pop
testl
dec
aam
cmovno
cld
pushf
fwait
cld
sub
dec
bound
cmp
bound
and
in
loopne
xchg
pushl
icebp
jmp
sub
int
in
outsl
push
mov
mov
sub
mov
iret
pusha
mov
mov
fists
loopne
std
imul
cmp
addl
jne
push
mov
xchg
out
inc
stos
jp
popf
and
hlt
xor
cwtl
jnp
ss
scas
sub
push
ret
fs
sbb
ret
movsb
pop
push
inc
sbbb
push
call
push
aaa
add
insl
xchg
sbb
rcrb
pop
push
xchg
fmulp
xchg
lock
or
mov
pop
les
leave
fs
hlt
pushf
add
dec
jbe
sbb
jge
pusha
in
sbb
mov
aaa
popa
mulb
icebp
adc
int3
stc
pop
add
jl
push
pop
mov
xor
push
fucom
scas
ja
shlb
scas
das
and
mov
scas
push
xor
add
enter
daa
cpuid
loope
mov
jno
jl
dec
orb
sub
movsl
inc
push
dec
and
test
jb
mov
pop
movsl
push
dec
adc
inc
fsincos
fwait
xchg
movsb
dec
pop
lahf
sbbl
pop
inc
daa
aaa
push
aas
and
mov
sub
and
cmp
jne
outsb
popa
cld
mov
rorb
dec
fwait
mov
subb
sbb
sub
add
das
into
xor
lods
mov
stos
mov
scas
sub
sbb
mul
stos
lcall
push
fcompl
in
and
daa
test
xchg
adc
mov
insl
test
dec
cmpb
repz
insl
ss
jbe
fcom
bound
divl
jp
lret
int
fiaddl
aam
scas
sbb
pop
into
xor
dec
ret
xor
xor
outsl
iret
pop
jae
repz
stc
fwait
inc
repz
out
arpl
out
push
xor
lods
sbb
aas
mov
pop
out
lds
xor
ret
xor
test
xchg
gs
lods
adc
adc
cld
inc
adc
cmpsl
aam
sbb
icebp
jp
or
cmp
xlat
xor
test
xor
jbe
push
inc
add
cmp
dec
sti
inc
popa
movsb
fidivl
rclb
adc
int3
inc
dec
repz
fsqrt
mov
repz
shl
mov
xor
fnsave
call
idivb
pop
xor
cld
pop
pushf
sub
out
pop
sbb
fwait
inc
test
and
mov
jp
dec
mov
loopne
jecxz
std
cmpsb
mul
out
std
xchg
mov
inc
mov
data16
pusha
data16
or
jg
inc
mov
jnp
pop
pop
mov
das
addr16
aam
jmp
divb
rcr
int
es
out
insl
xor
test
sbb
cmpsl
push
inc
pushf
mov
sbb
and
xchg
adc
inc
int3
jno
jbe
in
adc
mov
pop
pop
jle
fndisi(8087
mov
xlat
in
adc
subb
mov
push
testb
clc
inc
cmp
pusha
out
push
jo
xchg
gs
hlt
nop
scas
mov
xchg
push
and
aaa
arpl
bswap
outsl
adc
cltd
push
out
call
xchg
hlt
test
pusha
sbb
ss
sbb
push
sar
sub
pop
xor
fmuls
mov
inc
xchg
add
std
mov
or
in
mov
out
mov
mov
push
ja
jp
dec
lods
addb
cmpsb
or
jp
fwait
sub
ss
cmpsl
scas
add
xchg
mov
mov
inc
bound
or
xchg
lock
out
mov
or
pop
inc
outsb
int3
jp
repz
xor
mov
sub
lahf
xor
in
mov
pusha
jp
repnz
mov
jo
hlt
testb
push
bound
push
xchg
outsl
popf
pushf
dec
push
mov
sar
push
and
fcmove
insb
out
xor
scas
mov
adc
shl
iret
ret
ret
out
push
jb
inc
dec
jge
jae
pop
inc
or
dec
jmp
scas
jmp
int3
fimull
sbb
sbb
mov
cmp
lds
xchg
popf
shlb
push
bnd
dec
leave
fcmovnbe
hlt
out
out
arpl
cmpb
dec
push
jge
lret
jo
xorl
mov
sub
xor
in
enter
and
inc
add
xor
jno
xor
inc
in
cmp
pop
movsb
rclb
lret
cmpsb
jne
sbb
and
daa
push
inc
pop
cmp
add
jno
xchg
jl
adc
arpl
or
push
movsl
dec
and
scas
lahf
es
push
inc
cmp
test
sbb
and
cmp
push
test
loopne
popf
pop
sbb
push
xchg
push
bound
cmp
and
mov
cli
sub
cmpb
add
cmp
orl
int
push
sub
inc
pop
jbe
and
push
sub
mov
sahf
je
popl
sbb
add
rclb
mov
jae
mov
jmp
and
and
ss
dec
cmp
popl
mov
lret
nop
shll
mov
or
adc
or
sub
jno
scas
lods
jge
xchg
loope
push
jnp
fstl
mov
mov
lods
inc
rorl
in
inc
inc
cli
sbb
dec
xor
loopne
cmp
pop
sahf
or
popf
loop
mov
sbb
imul
loopne
imul
mov
outsb
adc
mov
pop
ficoms
xor
lods
lods
and
sbb
outsl
cmp
sub
mov
cmp
cs
dec
jb
jnp
xor
daa
pop
inc
popa
sti
push
fnstenv
jle
les
adc
out
ss
mov
inc
sbb
call
jne
pusha
pop
call
aas
pushf
aad
dec
jmp
pop
ficomps
daa
sub
sbb
ret
lods
in
aas
pop
pop
adc
jmp
je
push
jo
gs
imul
push
ss
cmp
xchg
cwtl
fisubs
mov
sub
fstpl
rorb
mov
scas
arpl
mov
mov
ljmp
xchg
enter
sbb
sbb
loope
sub
es
bound
insl
sbb
adc
xchg
call
lret
mov
pusha
mov
int
mov
ss
and
scas
fwait
cmc
sub
xor
aam
mov
out
mov
adc
xchg
lahf
loop
ljmp
pop
lods
pop
enter
push
mov
cmc
jne
xchg
pop
dec
sub
stos
adc
sub
add
xchg
add
xor
addr16
scas
insl
dec
dec
jle
push
test
sbb
int3
sbb
lcall
loopne
mov
push
inc
xchg
inc
add
stos
lahf
je
and
xor
in
xor
outsb
jl
or
mov
sbb
mov
insl
xchg
jecxz
dec
pop
add
fs
inc
mov
int3
arpl
mov
jne
sarb
push
push
shlb
jg
sahf
sbb
out
xchg
or
sub
jp
mov
jae
pop
out
mov
test
ret
in
or
pusha
adc
jmp
xchg
inc
mov
jmp
rcll
cmp
dec
fdivr
popf
ret
fwait
push
mov
sete
pusha
jp
and
in
insb
pop
pop
daa
jnp
push
mov
push
iret
mov
jmp
and
ret
inc
pop
dec
mov
inc
pop
into
cltd
jae
and
ds
sub
fiaddl
fsts
sub
imul
xor
push
sarb
xchg
jns
rcl
adc
vpshufhw
xchg
mov
xor
push
arpl
jp
jbe
repz
sbb
cmp
xlat
aaa
fistpll
or
cmpsb
lret
into
lcall
mov
cmp
int3
and
inc
and
int3
cli
cmp
fldenv
frstor
cmpsb
clc
inc
push
in
or
stos
enter
daa
or
std
mov
fidivrs
decb
int3
lds
sub
movsl
push
push
mov
fadd
jbe
inc
pop
or
or
test
in
cmp
mov
cmpsb
pop
in
mov
js
lea
push
cmpb
xor
cmpsb
cmp
outsb
daa
inc
jns
ret
cwtl
xchg
sar
aam
pop
mov
pop
sbb
pop
pop
add
daa
mov
push
mov
sub
mov
or
jmp
lret
mov
into
dec
push
subl
sub
sbb
lods
test
xlat
jge
jno
mov
mov
divl
in
stc
and
in
mov
mov
mov
adc
lret
pop
rorl
mov
cmp
into
sti
int
cmc
rol
loope
addl
sbb
int3
fs
adc
push
cmp
lods
out
and
in
dec
jle
dec
daa
xor
mov
lahf
cmp
sub
cmpsl
push
add
gs
movsb
loopne
xlat
jo
lods
jecxz
adc
pop
mov
rsm
add
sbbb
push
sbb
cmp
xor
enter
mov
adcl
sar
lahf
hlt
cmc
mov
push
xor
pop
es
je
neg
push
mov
repz
aas
xchg
sbb
lea
hlt
loopne
hlt
in
pop
fwait
xor
adc
inc
pushf
and
jmp
jmp
pop
pusha
mov
cmp
pushf
lods
aas
stc
aaa
add
aam
dec
mov
mov
jecxz
icebp
adc
imul
std
jecxz
movsl
cwtl
cltd
inc
cmp
mov
sbb
orl
inc
and
movsl
mov
push
das
and
xor
mov
cmpsl
sub
or
mov
clc
imul
mov
mov
leave
test
cld
fisttpll
sub
and
mov
aam
mov
push
cmp
rolb
sbb
aam
adc
ret
mov
sub
fdivr
mov
pop
addr16
pop
lods
lret
mov
pop
fists
in
add
jns
inc
adc
jp
inc
cmp
mov
fmull
fisubrl
xor
arpl
test
sti
shrl
cmc
stos
clc
adc
lea
inc
fdivr
xor
push
stos
or
cli
mov
pop
imul
lods
cli
inc
pop
sub
ja
mov
lods
shl
inc
push
test
and
mov
insl
jne
pop
and
cld
jno
bound
xchg
jns
xor
sub
xchg
sub
sahf
sub
mov
loop
jp
cmp
ja
mov
mov
cltd
pop
jle
fimull
jne
sahf
pusha
mov
loopne
cmp
cs
push
sub
cmp
pushf
sbb
outsl
push
or
rorl
push
dec
lods
sbb
sarl
insb
lds
jnp
xchg
xchg
cwtl
sbb
iret
sbbb
pop
test
mov
sbb
push
leave
or
movsl
ret
mov
xor
hlt
loope
xchg
and
bound
mov
imul
fidivs
ret
jl
jmp
jo
enter
sbb
leave
cld
pop
hlt
jge
lcall
or
jge
dec
cs
imul
sahf
add
or
jg
add
pusha
int3
mov
add
push
push
jae
xor
daa
call
icebp
and
jb
mov
and
push
pop
call
in
repz
pop
enter
daa
or
xchg
cmp
divl
sbb
jae
dec
dec
fcmovbe
inc
ds
add
movsl
push
in
dec
and
inc
lahf
fs
mov
test
scas
in
movl
lahf
rcrl
mov
xchg
pop
inc
cmpsl
push
xor
loope
sub
sub
mov
cmp
lods
outsb
mov
or
rcr
cmp
mov
fistpl
jb
add
and
push
mov
in
int
pop
or
pop
je
dec
lcall
imul
mov
sub
jg
sahf
mov
jge
adcb
jg
aaa
jne
lea
mov
xchg
mov
lcall
aam
cmp
add
jmp
lret
pop
rcrl
imul
fidivrs
cmc
lcall
outsl
insb
pusha
cld
loop
mov
cmpsb
fs
inc
sbb
push
cmc
adc
or
sbbb
jmp
mov
xor
into
pop
or
sar
negb
loopne
pop
and
xchg
sbb
add
out
fdivrp
mov
add
xchg
int3
xchg
out
ret
mov
cmp
imul
mov
jp
mov
dec
in
add
not
mov
negb
xor
fstps
add
in
xchg
pusha
sti
lea
adc
cmc
sbb
jae
int
dec
rcr
into
das
or
aas
std
pop
add
sbb
bound
adc
cwtl
insb
fnsave
push
testb
or
jecxz
rcll
std
mov
je
push
mov
mov
cmp
mov
iret
or
dec
mov
mov
mov
pop
sub
aam
das
add
popf
mov
push
out
and
movl
es
inc
rorb
adc
in
in
add
mov
jmp
sbb
fstpt
adc
je
add
push
stos
jnp
mov
ficoml
dec
and
push
aas
das
sbb
daa
lock
clc
rep
pop
xchg
sbb
sub
popa
inc
xchg
lahf
lods
xor
into
jge
mov
adc
push
enter
call
add
or
ficomps
mov
dec
xchg
xchg
dec
repz
push
xchg
pusha
mov
pop
ss
jp
out
int3
push
mov
aam
in
fiaddl
loopne
dec
lcall
ret
xor
cmpsl
or
mov
push
jge
mov
lahf
fisttpl
pop
jecxz
mov
dec
mov
mov
or
in
mov
dec
push
rorl
jle
pop
mov
divl
out
fcmovne
mov
jns
fwait
adc
mov
inc
xchg
jp
mov
sub
mov
jl,pn
cltd
jo
mov
mov
mov
dec
negl
or
in
out
pusha
dec
add
fistps
push
jmp
outsl
jl
addr16
adcl
rcll
shlb
imul
inc
mov
and
gs
xor
scas
mov
push
push
mov
lahf
jb
iret
fistps
fs
std
pop
mov
insb
je
in
sub
inc
push
dec
rorl
and
fisubl
andb
add
imul
rcr
movsl
jo
rolb
dec
mov
imul
leave
inc
or
enter
or
dec
jbe
cltd
test
arpl
mov
jle
pop
adc
mov
push
hlt
int3
movsl
jecxz
pop
movsb
or
push
xor
cmpb
and
cmp
movsb
ja
out
outsb
ss
cmpsb
addr16
in
ficompl
lea
or
xor
xchg
cmpsb
jno
pushf
lret
jl
gs
jno,pt
sub
pop
out
and
dec
lahf
orl
mov
cvtps2pi
jg
adc
fnsetpm(287
pop
cmp
js
push
gs
cmp
xchg
mov
sub
push
pushf
cmp
pop
rcll
mov
pop
pushf
popf
xorb
pop
add
outsl
xor
add
jne
mov
aas
int
xor
sub
pop
mov
lcall
outsl
fmull
mov
sub
cmpsb
or
cmpsl
and
insl
sarb
cmpsl
mov
mov
mov
and
dec
addr16
jg
cmp
shrb
sub
cmpsb
lret
mov
jmp
mov
out
cli
into
shll
cmc
popa
leave
jns
cmp
xchg
outsl
dec
rclb
mov
pusha
fs
inc
adc
xor
lods
mov
fucomp
out
in
cli
mov
dec
xor
cmp
inc
push
or
fcoms
cmpb
sbb
negb
dec
loope
rol
or
dec
out
int
adc
pop
repz
movsl
dec
cmp
inc
dec
jo
sub
popf
sub
xchg
mov
in
fwait
sti
std
xchg
loop
or
add
sti
nop
or
movsb
dec
sbb
inc
lcall
les
dec
repz
pop
xor
xchg
sbb
lea
push
call
repnz
js
add
adc
jne
jmp
push
or
inc
jmp
mov
aas
aaa
movsl
xchg
jb
jmp
dec
jl
inc
je
test
xlat
div
dec
jmp
xor
mov
mov
mov
roll
fwait
mov
mov
sub
das
icebp
fildll
jecxz
mov
lds
mov
mov
testl
insl
into
jno
dec
aad
add
mov
ja
test
lret
add
sarl
imul
daa
add
sub
cmc
popa
ret
fmul
mov
fisttpll
adc
movsb
mov
ljmp
cwtl
lods
mov
mov
out
push
cwtl
test
mov
pop
jecxz
mov
hlt
add
and
mov
adc
mov
sbb
push
loop
pop
das
rcrb
stc
stos
arpl
das
pop
inc
add
sti
ja
dec
fidivs
mov
or
dec
xor
add
mov
loop
xchg
mov
sahf
aad
ja
and
dec
xchg
les
or
mov
loop
xor
jne
leave
mov
out
mov
inc
jbe
push
adc
in
mov
out
aad
sub
mov
add
jp
push
aam
int
sub
ficoms
add
sub
in
insb
out
pusha
out
hlt
fistpll
cmp
rorb
xchg
andl
push
mov
int3
push
shll
jnp
sti
scas
pop
sub
adc
lret
push
mov
pop
repnz
push
inc
jns
mov
push
js
sbb
mov
fwait
jmp
inc
mov
test
pop
imul
sub
mov
fdivp
shlb
orb
push
arpl
leave
mov
movsb
hlt
adc
arpl
add
jbe
fwait
jnp
add
ja
aaa
sbb
rorl
dec
lds
mov
int3
nop
es
pop
rcr
outsb
push
int3
mov
xor
loopne
mov
movsb
add
push
mov
sub
in
sarl
daa
or
mov
mov
inc
cmpl
dec
mov
hlt
mov
lods
xor
push
xchg
mov
iret
push
inc
and
inc
movsb
faddl
arpl
out
js
xchg
mov
jl
jb
jbe
dec
loope
xchg
sub
out
inc
cmp
arpl
push
push
adc
nop
aas
movsl
jbe
or
loopne
mov
adc
xor
jmp
push
mov
lock
pop
mov
push
lcall
push
fdivl
xchg
sbbb
out
mov
dec
sub
mov
xchg
int
xor
movsb
mov
ds
test
push
imul
lret
or
enter
mov
sbb
insl
icebp
into
movsb
mov
jmp
xchg
push
cmp
and
loop
setg
cs
addr16
mull
ret
lods
fwait
ror
mov
xor
cli
in
fidivs
cmp
adc
hlt
xchg
repnz
adc
cmp
jmp
loopne
xchg
fwait
pop
or
adc
xor
jb
call
jmp
stos
cmp
dec
xlat
imul
mov
push
pusha
xor
lods
movntps
leave
pushl
nop
out
jns
out
and
lods
and
or
lahf
shl
and
lcall
call
jno
pop
pop
mov
repz
pushf
cmp
mov
dec
es
inc
jo
adc
das
loop
aas
loope
jb
loop
dec
rep
lret
insl
jecxz
pop
shl
xor
cmp
fdiv
adc
sti
pop
cltd
mov
cmp
sbb
push
in
mov
cmpsl
lock
jmp
ret
mov
jl
cmc
and
testb
inc
xchg
test
cmpsl
or
mov
dec
popa
xchg
pop
sbb
mov
jmp
or
mov
inc
sar
mov
aam
mov
push
lds
aad
imul
ljmp
mov
or
mov
orl
sub
cmpsb
loop
add
sbb
cltd
jnp
icebp
test
lcall
flds
dec
sbb
mov
xchg
cmc
test
mov
xor
mov
stos
lds
jl
rolb
add
call
inc
xor
push
orb
mov
cltd
mov
and
aas
sbb
adc
ja
adc
add
ds
or
pop
pop
fwait
push
testl
jne
xchg
pop
mov
aad
out
cltd
xchg
jl
sbb
pop
jns
xor
in
jnp
xchg
sbb
jns
setne
imul
mov
in
mov
sub
or
jp
in
push
dec
pusha
adcl
xchg
aad
jmp
std
sub
subl
jmp
push
cmp
popf
pop
int3
in
cwtl
push
or
mov
push
jne
insb
push
pop
jp
add
in
scas
jp
lods
push
insl
push
xor
iret
popf
and
ret
push
pop
sub
push
inc
test
jae
inc
loopne
sbb
and
push
xor
xchg
daa
daa
jns
xlat
adc
imul
inc
lds
pop
inc
mov
adc
and
pop
scas
popf
arpl
or
push
adc
sub
aaa
rolb
pop
jno
int3
jnp
inc
pop
add
push
scas
ret
bound
cmp
add
and
cmp
mov
push
push
or
fsubl
test
sub
int
js
or
cmp
in
jno
or
jl
imul
movsl
insb
pop
out
and
lods
lahf
roll
arpl
test
adc
sahf
es
test
enter
outsb
sub
mov
ja
loope
jmp
test
outsb
mov
adc
imul
aad
clc
sbb
mov
pop
outsb
adc
xor
imul
jns
pop
icebp
leave
cmpsb
lcall
xchg
fsubl
mov
mov
js
test
inc
xchg
jg
sub
mov
lahf
pop
mov
fwait
and
sti
ss
das
push
cmp
ss
imull
repz
shll
push
sbb
sbb
mov
into
xchg
cmc
out
pop
or
out
sbb
outsl
or
stc
in
cs
xchg
adc
in
lods
adc
mov
add
sbb
or
cmp
mov
or
pop
pop
sub
mov
loopne
push
rcrl
or
jns
push
imul
into
mov
ja
test
repz
cmp
nop
test
out
pop
fildll
stos
in
mov
dec
ljmp
mov
nop
ret
dec
dec
sub
shrb
flds
les
mov
popf
in
lea
dec
call
lock
cmpsl
addr16
cmpsb
or
rcr
pop
in
xchg
inc
div
jecxz
dec
and
aas
jne
push
jb
cli
xchg
dec
push
push
je
xchg
jecxz
or
ja
push
cwtl
test
mov
and
rcr
cltd
adcb
sarl
das
mov
inc
mov
and
mov
movb
dec
lret
inc
sub
or
mov
and
outsl
xor
fisubs
cmp
xchg
mov
shll
ror
dec
sub
mov
es
push
mov
sub
pushf
imul
movsb
push
jge
ficompl
ljmp
imul
jb
xchg
subb
syscall
insb
cmp
in
repnz
mov
jmp
mov
mov
xchg
pop
adc
xchg
sbb
je
cmp
or
movsl
pop
aaa
push
mov
push
jne
je
jns
cmp
xor
cmp
fidivl
xor
or
aaa
xor
or
mov
push
leave
lret
pop
adc
ja,pt
jecxz
jns
loopne
mov
test
rorl
inc
pushf
mov
jne
ret
sbb
pop
out
js
bound
icebp
jmp
push
out
xchg
addr16
out
clc
xchg
sub
stos
jmp
test
inc
mov
enter
push
fwait
mov
xchg
adc
xchg
mov
stos
fistpll
and
xchg
enter
mov
ss
popf
xchg
push
push
dec
xor
in
imul
insb
jno
cmpsl
jnp
jb
scas
fstpl
imul
iret
cld
jno,pn
dec
imul
inc
dec
xorl
ss
pop
add
or
xchg
fs
inc
mov
inc
fcmovb
rolb
jle
data16
imulb
int3
push
fidivrs
roll
push
call
xchg
repnz
movsl
add
hlt
test
pop
dec
jbe
stc
fidivrs
mov
aaa
lcall
add
sub
pop
xor
orb
mov
jo
mov
and
shll
mov
cmp
lods
jbe
enter
or
cmp
pop
bound
jno
notl
sub
xchg
test
fidivl
and
xor
lahf
loopne
sub
aaa
cmp
test
jbe
jmp
inc
into
js
fdivrs
rcrl
push
testl
cmpsb
jo
mov
and
inc
xchg
mov
xor
push
sub
sbb
pop
add
push
jp
insl
lods
int
shlb
int
pop
push
pop
jo
mov
push
xor
xchg
fmull
cmp
lods
mov
sahf
inc
adc
cmp
xchg
cmpb
xlat
mov
fnsave
mov
decl
pop
or
cmp
fdiv
pop
cwtl
imull
scas
lret
push
sar
sub
inc
jl
sbb
sbb
push
mov
mov
dec
xor
add
mul
loop
dec
jne
pushf
dec
and
pop
adc
imul
out
daa
mov
xor
xchg
cmp
stos
in
shlb
incb
dec
shl
jmp
nop
dec
adc
imul
sahf
jno
cli
fisubrs
icebp
cmp
xlat
jmp
mov
pop
in
add
sti
or
cs
xlat
ret
popf
lds
xor
add
jnp
adc
xchg
mov
mov
mov
call
outsl
xchg
nop
pop
sbb
or
sub
mov
xlat
mov
pop
fisttpll
inc
jle
push
inc
gs
aas
adc
cmp
mov
dec
loope
xchg
je
repnz
mov
pop
sahf
std
es
cwtl
inc
inc
sub
mov
ret
pop
lea
enter
addl
mov
lret
lock
or
das
and
mov
ljmp
roll
loopne
es
in
insl
adcl
sub
cmpsl
pop
lret
xor
cld
cmp
cld
mov
dec
dec
lahf
xor
and
xor
inc
pop
lock
ljmp
cmp
add
mov
out
filds
xchg
sbb
ljmp
and
stc
shr
dec
cmp
xor
jmp
add
mov
test
inc
mov
dec
and
roll
call
mov
xchg
pop
int3
rcrl
xchg
pop
loop
sub
sbb
mov
fistl
xor
jg
xor
mov
mov
stos
and
mov
iret
dec
jno
leave
mov
insb
js
inc
inc
push
iret
or
sbb
je
repz
faddl
jl
lcall
out
push
outsl
adc
jns
push
ret
movsb
sbb
mov
int
or
ljmp
xor
xchg
jp
inc
cmpxchg
jg
pop
mov
mov
adc
adc
pusha
mov
mov
xchg
xor
mov
xchg
xchg
xor
orl
push
fsubl
mov
mov
cwtl
stos
adc
stos
insb
fmul
jnp,pt
aam
scas
inc
jae
push
sti
outsb
test
or
dec
iret
pop
cmp
leave
pop
xchg
scas
jno
lcall
inc
and
mov
bound
push
das
stc
fidivl
outsl
xchg
aad
sub
adc
fsubp
arpl
push
mov
mov
mov
lods
leave
sbb
cld
hlt
hlt
xchg
inc
jmp
jbe
push
lods
jge
movsl
adc
sahf
fiadds
or
sbb
pop
pusha
fsubrp
push
jne
fidivs
out
fbld
and
sarl
sbb
push
stos
pop
ret
cmpsb
or
inc
in
jbe
jg
ret
jb
daa
pop
sbb
cmp
jb
call
mov
sub
std
add
jp
les
jle
movsl
lahf
decl
push
or
test
cmpsb
call
jns
lods
push
push
pop
xlat
stos
or
pop
cmp
and
sub
cmpsl
sbb
cmp
les
imul
adc
and
xchg
rcll
add
lcall
out
int
cmp
filds
ret
dec
mov
sbb
outsb
pop
out
loopne
lcall
leave
fdivl
ljmp
ret
test
sbb
inc
jg
xor
orl
stos
andb
inc
cmc
ss
mov
cmp
lods
mov
repz
cmp
xchg
rcrl
mov
in
mov
popa
cmc
jge
push
xor
addr16
loop
cmp
stc
push
push
mov
cmpsb
add
dec
arpl
mov
lods
aaa
out
inc
and
jle
sti
xor
je
or
pop
movsl
dec
gs
mov
loopne
pop
push
pop
addr16
out
pop
repnz
mov
fists
and
lds
inc
addr16
cmp
std
sub
fldt
mov
xchg
wbinvd
sti
mov
lcall
js
popf
dec
or
inc
out
out
mov
inc
les
and
mov
xchg
call
out
inc
push
int
adc
cmp
mov
negb
pop
xor
inc
inc
add
fcomi
aas
mov
mov
dec
pop
leave
mov
jecxz
sub
push
std
int
add
cmp
dec
mov
cmp
dec
inc
cmpsb
fcomi
mov
mov
in
mov
adc
cld
das
pop
push
add
mov
mov
rcll
xor
insl
push
scas
dec
shll
mov
rcrl
cld
fists
dec
mov
incb
sbb
pop
rdpmc
dec
shlb
adc
or
aam
test
ret
sbb
jbe
push
add
fucomp
xor
clc
sbb
xchg
pop
stc
push
popa
mov
dec
lods
dec
jl
mov
stos
sbb
ret
lret
ret
mov
add
shll
movsl
mov
xor
dec
dec
sub
or
fnstenv
shll
out
push
xchg
das
leave
push
mov
xchg
jmp
jp
jb
pop
jne
push
push
arpl
insl
or
out
fmul
mov
mov
ja
or
pop
sbb
inc
ficoms
mov
fwait
mov
outsb
test
popa
dec
mov
sarb
mov
ss
aad
or
in
mov
xchg
add
jmp
sub
mov
pop
jp
cld
mov
sub
mov
js
xlat
jle
lods
dec
in
push
xchg
negb
enter
cmpsb
xchg
pop
xor
sbb
pusha
push
lahf
xchg
popf
aam
mov
enter
test
insb
inc
out
jnp
cli
mov
mov
adc
adc
popa
repz
mov
push
push
pop
into
imul
xor
outsb
inc
and
std
in
xchg
cmc
fisubl
call
cmp
fisttpll
imul
fiadds
mov
rorb
push
repnz
pop
leave
xchg
fnstsw
hlt
aas
jb
arpl
divb
sub
jge
xor
sbb
mov
in
dec
int3
cmp
xor
mov
xor
dec
sbb
scas
dec
into
push
and
fdivrs
movsb
shll
push
stc
mov
in
pop
sub
daa
push
jno
cmp
jl
es
dec
je
and
movsl
andl
imul
lods
test
jno
test
mov
jae
icebp
sarl
jno
js
cs
adc
mov
lods
lock
rcrb
or
repnz
and
mov
loop
xor
jg
push
ljmp
inc
js
pop
outsb
mov
lcall
mov
sub
push
add
hlt
lods
jg
inc
add
adc
push
mov
test
dec
ss
sahf
push
cmp
addr16
cltd
mul
mov
jl
sub
adc
mov
mov
loope
add
loop
pop
lock
or
fs
mov
sub
rcrb
mov
out
cli
mov
sbb
xchg
filds
mov
adc
enter
mov
add
pop
xchg
adc
mov
fs
dec
in
and
outsl
xchg
andb
addr16
xlat
addr16
dec
sub
mov
mov
cld
icebp
dec
sti
push
popa
sbb
nop
push
adc
add
mov
fldl2t
pop
jmp
stos
ret
xor
cmpsb
jl
lea
call
insl
jae
pop
and
adc
popa
sub
jmp
dec
in
aad
cmovne
mov
push
cld
int
xor
push
dec
iret
je
dec
jecxz
movsl
mov
inc
cld
jmp
cwtl
mov
add
jne
cmp
xor
in
mov
pop
mov
push
imul
ds
mov
pop
popa
jae
je
jns
mov
push
subb
in
mov
dec
inc
mov
stos
movsb
push
cld
or
lret
sub
lcall
mov
fs
cs
inc
mov
fcmovbe
push
addr16
push
sarl
ljmp
or
ljmp
pusha
lods
mov
add
or
into
stc
push
ljmp
add
mov
cltd
push
and
mov
xchg
test
dec
mov
sub
lods
insb
negb
lea
lahf
pop
cmp
stos
orl
add
xorb
sbb
xor
sbb
test
sbb
pop
mov
add
ds
emms
inc
or
dec
push
je
inc
jne
mov
fwait
shlb
mov
jne
cmpsl
test
out
adc
loop
jns
or
in
sbb
inc
out
adc
sub
fwait
jge
addr16
lret
sbb
stos
mov
out
data16
cmpsb
loopne
cmpsb
loope
pusha
in
jecxz
fists
cmp
xchg
sub
push
ficomps
sti
cmp
mov
pop
sub
mov
mov
mov
push
shl
scas
push
add
push
mov
daa
adc
int
iret
sbb
ret
ficompl
int
inc
mov
xor
mov
add
add
inc
sub
or
andl
sbb
pop
pop
imul
fisubs
fistps
shrb
movsb
repnz
movsl
xchg
leave
or
inc
hlt
mov
mov
jge
lahf
sahf
sbb
loopne
xlat
xor
outsl
push
xchg
add
in
int3
daa
loope
pop
mov
xchg
jp
test
push
loopne
insl
popa
insl
cmp
dec
push
dec
mov
in
in
inc
mov
lret
and
cmp
xchg
xchg
jl
bound
dec
jecxz
jg
inc
jnp
movsl
mov
mov
lahf
cmp
cli
stos
test
cmp
sahf
inc
outsl
popa
rcl
jmp
js
mov
mov
xor
lods
pop
loope
fnsave
sub
outsb
or
int3
or
outsb
aas
jle
adc
xlat
sub
push
in
outsb
andb
dec
sbb
mov
out
xor
int
push
leave
std
pop
int
jmp
sub
lahf
or
in
pop
setp
push
push
cmp
fmull
movsb
jbe
das
xchg
test
psubb
imul
mov
std
and
mov
shll
roll
mov
fsubs
shl
cmpsb
incl
lret
inc
rol
js
add
into
adc
test
or
sbb
pop
out
inc
outsl
test
loop
mov
stc
rcrl
mov
movsb
jecxz
push
mov
lods
push
mov
mov
loop
in
in
xchg
xor
cmp
and
pop
mov
andb
push
loopne
or
pop
movsl
hlt
notb
lds
jle
int
add
xor
out
mov
push
mov
mov
inc
mov
addr16
sti
pop
loop
cs
inc
insl
nop
mov
dec
leave
jb
inc
or
and
repz
in
jmp
call
in
sub
pop
xor
adc
call
add
aam
xchg
xchg
cwtl
inc
adc
inc
mov
ljmp
pop
inc
dec
inc
nop
stos
je
das
mov
testb
ret
cwtl
jno
mov
push
cwtl
js
sbb
stc
dec
mov
iret
lock
xlat
push
das
sbb
cltd
lea
ljmp
inc
shr
sub
es
mov
aas
repz
mov
adc
mov
orl
outsb
lret
lcall
and
add
pop
dec
push
pop
rcrb
dec
pop
sub
arpl
and
ret
ss
add
fnstsw
mov
clc
nop
cltd
adc
out
sahf
mov
inc
enter
pop
mov
jo
out
sahf
mov
lcall
filds
test
into
test
sbb
lret
sub
leave
sbb
dec
shll
pop
jecxz
fsubrs
add
fadds
popf
inc
dec
mov
adc
inc
out
dec
xor
push
or
mov
popf
push
in
pop
add
xchg
ljmp
push
inc
or
icebp
mov
add
cli
dec
test
adc
gs
mov
loopne
out
hlt
shl
sti
sarl
in
fsubs
out
scas
and
xchg
adcl
mov
mov
mov
jle
xchg
or
lods
mov
pop
fbstp
fcoml
lcall
cmp
adcb
test
ret
mov
inc
pop
stos
imul
insb
sbb
xchg
scas
imul
iret
js
add
pop
cmp
js
mov
and
leave
or
jge
mov
lods
adc
mov
dec
xchg
fidivrl
outsb
imul
leave
mov
lds
rol
aam
mov
mov
or
dec
hlt
aad
arpl
jbe
es
jge
icebp
mov
iret
jns
aaa
xchg
fisubl
or
push
add
cmpsb
push
adc
pop
in
std
push
push
pop
repnz
dec
cmp
add
imul
push
xchg
lret
xchg
das
call
enter
daa
add
jb
jmp
inc
jno
adc
jl
jb
dec
push
mov
sbb
and
jmp
push
andl
push
pop
mov
out
cmc
sub
dec
js
dec
adc
mulb
and
std
lret
loope
hlt
into
sub
add
cmp
push
outsb
mov
scas
cmp
mov
in
cmpb
daa
sbb
insl
mov
xor
test
push
adc
sysret
insb
loope
lcall
add
mov
daa
mov
test
push
subb
cmpsl
jg
sub
lcall
mov
movsb
lock
xlat
test
fcomp
inc
push
mull
stos
lret
enter
cld
sbb
jge
into
testb
sub
xor
iret
cmpsl
loop
cmp
mov
mov
lret
pop
mov
lods
add
pop
popa
out
mov
cli
pop
sbb
cmp
fisttpll
mov
stos
decb
cmpsb
inc
gs
scas
loopne
sub
dec
adc
aaa
sahf
adc
lahf
cwtl
add
mov
mov
imul
jbe,pt
in
lods
sub
sub
sti
icebp
imul
lret
repz
dec
sub
dec
fsts
jne
rorb
cld
aas
inc
lods
shrb
lea
xchg
call
imul
lea
xchg
fs
orl
pop
sbb
inc
rorl
dec
jb
jp
dec
mov
jmp
jecxz
popa
or
outsb
lahf
std
ret
cwtl
sub
or
pop
mov
sbb
sub
mov
mov
xor
lods
inc
fildll
cld
mov
xchg
mov
mov
sarl
jns
es
testl
add
xchg
mov
pop
sahf
mov
lret
or
mov
adc
jo
pushf
inc
cmp
shr
or
sub
aam
loopne
ret
push
push
lea
clc
lret
popf
pop
xchg
adc
enter
in
hlt
lods
lea
mov
roll
xchg
in
and
mov
cwtl
add
cltd
lds
daa
mov
adc
int
lret
dec
test
jge
stos
pop
sbb
repz
stos
sarl
adc
pop
adc
add
mov
jecxz
iret
cmp
xor
xlat
jecxz
lahf
adc
mov
lods
fs
mov
lahf
inc
dec
cmp
inc
mov
mov
dec
push
mov
mov
push
shr
rorl
bound
push
fsubp
or
or
adc
nop
out
xchg
sbb
arpl
xor
mov
push
mov
mov
jb
jle
jne
in
fisubl
and
add
xchg
aaa
mov
orl
insb
popf
dec
int
mov
test
xchg
and
add
jge
push
add
scas
int3
pop
lret
push
lcall
sahf
sub
test
or
jnp
inc
movb
fs
inc
mov
push
sub
loop
aas
imul
sbb
push
clc
imul
stos
fisubrs
vpaddsb
rcr
nop
mov
add
pop
leave
clc
jae
hlt
and
push
arpl
push
cli
jge
sub
mov
shlb
push
pop
push
or
aaa
add
sub
push
add
es
pop
inc
ja
jmp
cmp
xchg
push
into
cmp
mov
fsts
cmp
cmpsb
push
sbb
in
adc
xor
add
cltd
cmp
pop
sub
mov
jl
push
rorb
inc
ds
mov
xchg
pusha
and
lcall
push
jle
test
shlb
imul
not
mov
pop
cld
js
xchg
notl
xor
add
add
call
cmp
mov
adc
lea
mov
popa
mov
popf
xor
in
push
iret
jg
int
push
insl
sub
ds
int3
loop
out
fsubl
or
sahf
jne
in
test
push
addb
jg
jnp
mov
and
mov
popf
mov
lahf
cld
and
and
fcomps
pop
stos
lret
sub
out
test
sbb
in
fsts
cltd
xor
rcl
outsl
inc
dec
lods
loop
cli
in
das
dec
clc
fs
mov
push
rcll
mov
mov
stos
cli
dec
inc
pop
xor
jno
cmp
loope
or
lcall
mov
popa
mov
adc
xchg
mov
pop
add
pop
fistl
fnstsw
arpl
and
cmpsb
sub
sub
in
cmp
lds
aad
loope
nop
in
push
dec
xchg
dec
nop
addr16
daa
cli
scas
sub
call
ljmp
adc
pusha
inc
pushf
jecxz,pn
jmp
cmpsb
pop
pop
mov
sbb
inc
in
aas
cmpl
sub
out
je
sti
and
testb
fscale
imul
cmp
dec
mov
outsl
dec
repz
jg
mov
je
lock
les
das
fstpt
lret
jp
mov
adc
or
insl
push
stc
dec
dec
lods
inc
xlat
cmpsl
add
hlt
mov
das
push
pop
cld
mov
jnp
js
pop
mov
sbb
ret
mov
mov
sarb
jl
aam
fwait
pop
ret
push
shll
mov
loop
push
ss
xchg
push
pop
hlt
ljmp
push
lods
clc
shrl
out
ss
xchg
sub
repnz
jnp
js
aas
clc
incl
push
int
cltd
cld
and
adc
pop
jl
xchg
dec
push
dec
jmp
add
sub
ficomps
cmpsb
es
rcll
cli
pop
cmp
push
dec
cmp
push
inc
bound
add
sub
push
sub
and
ja
stc
cld
push
mov
cli
xor
xor
fnsave
das
in
sub
or
stc
mov
dec
dec
scas
jns
jge
sub
out
mov
jl
and
jns
ljmp
inc
clc
dec
out
inc
subb
inc
xor
push
in
fs
mov
adc
mov
adc
dec
xlat
in
movsb
les
jecxz
fbstp
cmp
mov
xchg
mov
sbbl
pop
push
stos
lcall
xor
cli
dec
stos
push
sbbl
repz
jne
int
xchg
scas
das
stc
adc
xchg
iret
ss
mov
enter
icebp
push
jae
cmc
dec
inc
xor
fildll
scas
dec
inc
stos
push
push
cmpsb
jmp
mov
sbb
fsubl
fimuls
mov
test
stc
inc
aam
inc
mov
leave
outsl
inc
hlt
imul
xchg
shl
sub
inc
jge
inc
mov
aaa
adc
enter
add
int3
call
in
adc
jo
lret
pop
scas
lret
and
xor
cmp
jns
movsb
pop
mov
push
xor
jl
in
stc
aad
enter
daa
add
sub
push
cvtps2pi
js
jl
paddsb
pop
lods
aad
movsl
popf
inc
daa
and
lods
jne
sub
mov
inc
sbb
loope
jnp
pop
pop
lcall
pop
je
jae
push
mov
out
sub
stos
idivb
fxtract
push
adc
push
lret
pusha
leave
ficompl
cwtl
mov
add
repnz
inc
push
xchg
push
shr
mov
push
in
adc
xor
and
jg
ficoml
xor
fmull
in
push
sub
jno
sbb
jbe
pusha
dec
xor
xchg
int3
mov
xchg
orl
out
mulb
mov
mov
pushf
fbstp
fcoms
movsb
mul
call
stos
roll
xchg
sbb
loopne
mov
cmp
outsl
and
jle
push
aam
out
xor
adc
js
fimull
subl
mov
out
xchg
mov
jge
add
icebp
ds
cmp
into
loop
insb
mov
xchg
gs
stos
cmpsl
pop
add
adc
cli
push
imul
inc
xchg
mov
pop
cmp
aaa
xlat
arpl
or
andl
and
loop
loope
in
addl
dec
out
ja
inc
xor
fld
lods
xor
daa
sub
lcall
lea
pop
sub
imul
adc
fcompl
mov
cltd
inc
test
sub
pop
or
aas
into
push
xor
dec
stos
mov
adc
jecxz
cs
data16
mov
cmpl
or
lods
fnclex
popf
inc
mov
xor
mov
inc
mov
das
mov
cmp
mov
mov
ffree
es
mov
jg
test
push
cmpsl
add
js
push
sub
mov
out
out
xchg
mov
and
sbb
stos
sbb
rclb
jb
aam
stos
ffreep
jecxz
adc
bound
xchg
xchg
andl
lods
pop
lods
arpl
or
mov
fwait
out
cltd
jbe
xchg
jae
sub
adc
setle
dec
cltd
xor
test
mov
sub
push
repnz
pop
imul
imul
jne
pop
in
xchg
stos
cmp
sub
add
out
cmp
call
es
xor
jbe
mov
cmp
jl
pop
xor
jae
inc
inc
enter
xor
cli
inc
or
cmp
mov
movsl
jne
cli
pop
mov
jo
out
xchg
push
lock
xor
and
xchg
nop
pop
jp
sbb
and
xchg
cwtl
jp
sbb
mov
repz
mov
ret
pusha
pop
mov
fists
fcompl
xchg
push
sbb
cmpsl
mov
mov
xchg
in
mov
jo
fists
mov
mov
or
xchg
insb
pop
or
jnp
xor
xchg
mov
adc
out
ret
rcrl
mov
xor
inc
arpl
out
inc
mov
pop
mov
movsl
cwtl
xchg
fistps
sbb
outsb
sub
lret
mov
jge
jmp
outsb
rclb
mov
test
mov
hlt
mov
mov
jbe
or
jge
inc
lea
add
aaa
shr
js
cmp
or
int3
rol
gs
jp
icebp
push
mov
xor
adc
scas
test
mov
nop
fistps
in
sbb
loope
cmpsb
sbb
mov
enter
daa
add
test
jno
pusha
lods
jl
fwait
inc
dec
lahf
shl
ds
fisttpl
and
mov
lahf
mov
roll
fisttpll
jecxz
push
xchg
cwtl
ds
jo
fucomip
gs
mov
mov
loope
adc
cltd
mov
jp
lret
sti
sahf
adc
inc
mov
int
in
jae
adc
iret
dec
and
mov
push
mov
push
aad
mov
sub
test
lcall
int3
fdivrl
dec
ret
sahf
mov
inc
fldl
in
inc
mov
inc
xchg
imul
sbb
push
add
mov
push
jb
sbb
jns
scas
dec
push
sbb
hlt
cs
daa
push
adc
movl
stc
popf
ret
call
sub
pop
rcr
mov
cmp
adc
mov
xor
xor
cmp
dec
or
movsl
cmp
xchg
ja
aaa
fucom
es
xchg
pop
and
adc
lret
pop
imul
push
add
and
sbb
mov
mov
bound
xchg
mov
inc
sti
sarl
cmp
enter
lcall
inc
pop
loopne
frndint
out
fcmovb
loope
enter
push
mov
lea
in
call
call
push
sahf
adc
push
jae
nop
bound
inc
das
inc
xlat
inc
and
xor
insl
mov
jb
add
dec
and
jp
pop
sbb
jecxz
cli
and
popl
std
mov
mov
pop
ret
mov
rorl
add
leave
loop
adc
inc
mov
jnp
lock
dec
sub
jmp
adc
or
sub
ja
fiadds
insl
aam
inc
dec
mov
cwtl
ret
mov
frstor
push
cld
loope
aam
push
div
mov
sub
pushf
pop
leave
mov
movaps
mov
ret
jb
or
sub
jl
rcll
mov
sarl
hlt
jns
pop
mov
fcoms
xor
paddw
add
enter
addr16
xchg
scas
mov
cmp
push
test
add
ljmp
sbb
and
rclb
cmpsb
sahf
stos
sub
xchg
push
jmp
add
or
pushl
jecxz
enter
and
pop
xor
inc
scas
mov
adcb
pop
in
dec
add
fcmovnu
dec
adc
xor
push
pop
fwait
mov
push
bound
dec
out
mov
sbb
sbb
cwtl
jae
jns
cltd
in
or
out
movsb
inc
sub
sbbb
pusha
jp
jp
or
mov
notl
mov
orl
leave
sbb
hlt
pushf
hlt
fbstp
mov
xchg
and
mov
push
xor
mov
sbb
inc
pop
cs
aaa
xor
and
xor
insb
leave
cld
mov
sub
mov
push
in
sbb
adc
adc
fcmovb
loope
imul
add
xorb
jmp
aaa
and
push
test
xchg
ficompl
sub
fcmovbe
xor
insb
vandnps
cld
lds
hlt
shrb
sub
cld
mov
leave
pop
into
mov
arpl
xchg
into
jge
and
sbb
movsl
push
or
andl
pop
fcmovne
mov
add
jmp
jo
sbb
scas
mov
add
dec
sbb
movsb
jo
fcoms
sbb
cltd
in
in
movl
out
daa
add
dec
jno
insl
xchg
jl
sti
jae
push
or
ds
movsl
stos
insl
shlb
mov
out
inc
push
iret
dec
push
test
xor
insb
inc
cmp
inc
pop
call
cli
dec
pop
repnz
test
hlt
inc
outsb
loope
mov
jl
aaa
push
mov
jge,pn
adc
push
or
sub
addl
mov
dec
jb
xor
push
sti
push
fsubrs
push
int
push
pop
sub
adc
pop
push
mov
scas
fsubl
sub
dec
sahf
pop
movb
xchg
jmp
test
imul
test
and
addr16
mov
push
fmul
mov
bswap
mov
mov
mov
push
mov
adcl
and
loop
imul
push
cmc
fisubl
mov
data16
lcall
out
xchg
xor
and
or
mov
gs
loop
shll
inc
inc
sbb
in
imul
jae
jle
sbb
push
sbb
cmp
adcl
fsubr
sub
outsb
xchg
mov
jle
sahf
sti
sbb
cmpsl
or
aad
cmp
pop
dec
movsb
sub
imul
fnstenv
xlat
mov
repz
mov
mov
call
addr16
pop
mov
mov
loop
adc
das
aas
jmp
out
pop
cmpsl
fisubl
cmp
sbb
jb
lock
cltd
mov
je
and
jecxz
or
not
ret
inc
std
pop
sub
mov
repz
cmp
dec
mov
sbb
mov
mov
adc
adc
mov
mov
xchg
push
jp
scas
es
dec
insb
insl
mov
adc
cmpsl
pushl
adc
icebp
mov
cld
or
cmc
lret
lds
and
and
or
cmc
sarb
sbb
push
dec
or
sbb
mov
add
or
sti
cmc
lods
clc
mov
leave
xchg
adc
sub
cli
sbb
bswap
out
pop
jns
xchg
add
and
pop
hlt
add
ljmp
int3
stos
xchg
pop
xchg
dec
and
iret
xchg
adc
pop
fsubr
pop
cmp
cs
sbb
push
xor
adc
and
int
rorl
pushf
or
fs
mov
ret
jbe
mov
cmpsl
push
cmp
testb
add
jl
call
or
cmp
dec
hlt
pop
fidivs
sti
pop
mov
fildll
dec
outsb
jmp
jns
mov
imul
out
test
sub
jge
xchg
neg
jp
scas
clc
mov
pop
popf
mov
adcl
or
shr
icebp
pusha
xchg
push
adc
xchg
int
fldl2t
insl
sti
jge
jmp
dec
add
xor
hlt
push
popf
in
mov
push
adc
out
and
imul
jnp
jno
scas
pop
xchg
jecxz
dec
push
inc
icebp
ret
mov
inc
repnz
jae
stos
rolb
mov
lcall
inc
daa
in
mov
or
cmp
shrl
clc
xor
stc
or
mov
dec
mov
mov
arpl
nop
outsl
jge
jmp
sbb
push
or
adcb
test
aas
pop
push
les
loop
scas
bound
lods
cmp
xchg
movsb
sti
push
xchg
push
and
jecxz
scas
lock
enter
daa
call
int
mov
das
xor
or
ds
pop
xchg
and
push
lahf
notl
rclb
adc
push
mov
daa
les
fistps
aam
js
cwtl
ds
xor
xor
push
add
pop
test
sub
pop
enter
or
xchg
repnz
adc
stc
je
mov
add
cmp
mov
xor
int3
int
sub
fmull
stos
mov
fmull
cmp
add
add
test
dec
inc
xorb
xor
push
stos
inc
mov
aam
and
ljmp
jl
jb
test
fwait
mull
jbe
lret
xchg
rorl
mov
sub
sub
xor
mov
jbe
loop
stc
sbb
or
and
push
adc
sub
jg
lods
mov
stc
out
lds
xor
xchg
cmp
lea
mov
cmc
mov
aam
sbb
pop
cld
xor
adc
lods
loope
push
movsb
add
sbb
jo
add
sti
xlat
and
xchg
sub
mov
jmp
mov
pop
aad
into
sbb
push
repnz
pop
fldl
aam
fldcw
repz
mul
gs
outsl
je
mov
mov
int3
out
negb
or
cmp
xchg
pushf
fidivrl
jmp
cs
pop
dec
les
inc
cmp
in
aas
stos
test
jb
movaps
inc
pop
je
test
jecxz
pop
notb
fs
rcrl
jno
xor
mov
loop
adc
dec
xor
mov
pop
mov
adc
lock
cwtl
das
push
imul
lods
sub
inc
outsl
in
leave
repnz
es
xlat
insl
mov
sub
push
cwtl
mov
mov
lret
xor
sbb
repnz
or
rorb
fistpll
inc
sub
aam
into
fs
nop
fwait
adcl
jmp
clc
repnz
mov
ljmp
mov
movsb
addr16
out
ret
xchg
dec
ret
out
push
btc
cs
fcomps
mov
mov
pop
testb
push
fldcw
es
sbb
cmp
outsb
mov
imulb
roll
mov
loope
pushl
jmp
outsb
bswap
or
sbb
mov
push
lret
addr16
out
enter
dec
dec
testl
data16
sbb
dec
xlat
sub
or
add
insl
mov
jns
mov
in
sbb
xchg
jge
movsb
out
xlat
repnz
js
sahf
addr16
testb
push
repnz
push
mov
lock
dec
jle
es
in
and
pusha
sub
mov
mov
scas
xchg
mov
lret
adcl
mov
add
and
subb
pop
cwtl
insb
lahf
pop
cltd
jnp
mov
scas
mov
cmp
adc
jb
ret
repnz
xchg
inc
std
in
mov
les
inc
cmp
mov
push
cmpsb
jge
fidivrl
ds
sbb
sbb
ficomps
int3
xchg
shlb
mov
mov
jmp
push
arpl
add
jbe
add
jge
xchg
pusha
sbb
dec
shll
mov
int
pushf
mov
int3
xchg
loope
pop
pop
sbb
jo
in
xor
and
mov
cmp
push
jno
pop
cmpsb
movsl
xchg
in
xchg
rcrl
mov
daa
jb
cmp
repz
daa
dec
in
int3
mov
cmp
fbld
icebp
hlt
cltd
lahf
push
inc
nop
push
jne
movsl
test
leave
repz
inc
pop
inc
loopne
xchg
rcrb
cmp
lret
jo
inc
push
popf
mov
jbe
or
call
outsb
outsb
hlt
pop
fcoml
aam
push
subb
add
inc
adc
andl
fidivs
inc
int
dec
lret
sub
in
pop
data16
mov
push
lcall
sub
dec
rcrl
andb
cs
jg
sub
repz
jb
mov
je
and
mov
ss
cmp
aas
repz
lret
push
shl
decl
sbb
into
dec
xor
cmc
jl
xorl
sahf
or
stc
ret
mov
movsl
push
enter
jle
outsl
sbbl
fldl
xchg
xor
lret
cmp
lret
sub
xor
loopne
insb
gs
cld
loopne
xchg
inc
pop
jle
jae
mov
imul
lcall
ficoml
sbb
aas
sahf
dec
xlat
pop
jge
sub
mov
add
push
aad
sti
loopne
loopne
insl
in
aad
ret
add
bound
inc
fldenv
int3
ret
repz
stos
stos
mov
mov
or
gs
dec
pop
sbb
adc
icebp
das
jmp
cmp
in
mov
mov
cmp
dec
icebp
dec
jb
bound
xchg
je
cmp
jecxz
idiv
negb
cmp
lods
sbbb
mov
daa
mov
int3
and
fistpl
nop
sub
into
jno
das
ss
mov
adc
rcrl
xlat
push
stos
push
insl
mov
jbe
xchg
shll
mov
jmp
cld
lret
lret
mov
xor
and
ds
add
es
mov
aam
sub
loope
jmp
les
xchg
ss
ljmp
lods
lods
pandn
mov
and
push
jecxz
ret
bndldx
add
div
test
dec
int
push
inc
xchg
popf
mov
jne
test
xchg
sub
and
lret
nop
mov
stos
stc
subl
inc
mov
add
jns
adc
xor
outsl
mov
test
mov
dec
xchg
pop
mov
sbb
mov
les
cmp
or
mov
fwait
dec
cmp
jne
lea
add
xchg
cmp
cmova
sub
xchg
int3
lcall
jecxz
xchg
or
pop
addr16
jp
jp
adc
mov
fisubrl
or
ja
jle
mov
int
fisttps
mov
cmp
and
mov
popf
xor
lock
push
imul
cmpsb
xchg
and
rcll
shll
cltd
cld
jne
adc
aas
pop
mov
jg
jae
and
inc
movsl
or
ficoml
inc
and
and
mov
cld
dec
imul
mov
lds
repnz
xorb
cmc
pop
aas
leave
ret
hlt
loop
pop
arpl
cmp
jge
and
sbb
pop
getsec
iret
out
or
xchg
inc
add
fadds
int3
jg
repnz
add
into
push
xor
jl
fildll
add
movsb
adc
mov
in
jl
jecxz
xchg
add
std
xlat
idivb
push
and
jl
adc
dec
pop
push
sub
pop
jl
movsl
rclb
lahf
xor
jmp
push
push
xchg
jl
inc
out
and
dec
mov
pop
pop
xchg
js
nop
add
scas
or
loope
xchg
inc
dec
loope
inc
jb
outsb
push
mov
repnz
aaa
pop
cmpb
xor
xor
jne
loope
in
and
roll
in
dec
lcall
dec
fsubl
out
sub
sub
or
add
popa
pop
pop
mov
xrelease
and
and
mov
jl
lret
fdivr
imul
arpl
sarl
mov
jno
bound
push
cmc
inc
mov
xor
pop
test
jge
jge
dec
mov
stc
jns
shll
sti
adc
out
andb
subl
fmul
pushf
cli
jl
movsb
xor
inc
cmp
fsubl
or
sub
gs
repnz
inc
sbb
add
movsl
imul
les
sub
jbe
pop
or
sbb
jp
out
xlat
sahf
xchg
imul
int3
dec
mov
mov
iret
push
sarb
mov
in
gs
push
or
dec
rol
inc
movsb
cwtl
mov
fsubs
or
sub
lea
imul
pop
mov
pop
lret
mov
out
jp
xor
in
pop
nop
jae
inc
dec
dec
and
cs
aas
jmp
ljmp
mov
jecxz
sarb
fwait
lds
push
sbbl
mov
lods
mov
lods
jg
jne
cmpsl
fcmovne
stos
cmpsl
mov
mov
cmp
lock
das
adc
std
xor
push
es
shll
into
es
dec
adc
cld
sbb
mov
cmp
cld
lea
imul
in
adcb
fnstenv
std
shlb
fsubl
aam
loopne
ret
scas
and
lods
test
sbb
xchg
into
in
xchg
ljmp
jge
jp
js
sbb
push
inc
mov
popf
push
push
vmwrite
add
ja
cltd
inc
jae
test
fisubrl
xchg
or
dec
push
mov
or
fmuls
rcrl
fstpl
icebp
stos
call
outsb
add
int
cli
add
mov
mov
adc
adc
mov
cld
repnz
cmp
mov
iret
outsl
mov
fcomp
mov
popa
mov
rolb
push
or
lock
fwait
jns
pushf
dec
popf
and
add
in
das
pushf
bound
repnz
fnstcw
sbb
stos
fiaddl
sub
outsb
jno
addr16
subb
rcr
mov
outsb
mov
into
push
inc
jle
dec
test
in
mull
pushl
sub
lret
xchg
inc
jp
jmp
dec
cmp
pushf
bound
cmp
push
ss
ds
les
jg
cmpsb
insb
jne
cmpsb
jnp
mov
scas
andl
test
sub
or
inc
adc
or
nop
cmpsl
or
push
lret
movsb
sub
fisubl
jge
xchg
dec
fsubp
aaa
mov
mov
rcrb
pop
repnz
add
leave
cmp
arpl
mov
add
xchg
cli
sbb
mov
or
scas
daa
add
dec
ds
push
and
push
ss
lahf
xor
xlat
lods
xor
cwtl
push
clc
cmp
js
movsb
pushf
call
or
arpl
cmc
enter
daa
cld
shrb
and
les
jle,pt
sub
daa
fcom
lahf
push
movsb
jecxz
sbb
push
test
pop
pop
scas
inc
jbe
jecxz
or
mov
js
jmp
pop
out
jp
push
enter
mov
push
cmp
jo
outsb
mov
loope
rorb
repnz
loop
mov
xor
xchg
int
shr
sub
inc
pop
fs
or
dec
lahf
sahf
fcoml
add
sahf
ljmp
addb
loope
add
lock
scas
loope
adc
ss
cmp
mov
inc
negl
fcmovne
push
jmp
push
mov
sbbl
and
push
sbb
cmc
or
mov
outsl
pop
ds
jg
xor
push
fs
sub
lret
in
add
lods
cmp
lcall
scas
xor
cmp
rcll
es
sti
gs
add
mov
jmp
imul
xchg
add
mov
sbb
mov
lcall
test
mov
sub
sti
notrack
xor
mov
loope
inc
dec
and
out
inc
mov
mov
les
xchg
or
mov
xor
call
arpl
sub
jle
xlat
adc
cmc
pushf
fistpl
cmp
inc
inc
rolb
inc
aas
mov
jp
jb
cltd
dec
jne
je
popf
enter
int
ficomps
std
cli
fcomps
insl
push
in
mov
sahf
add
pusha
and
xchg
jo
daa
jbe
mov
fs
lock
das
hlt
xor
and
and
pushl
es
fldt
insl
push
adc
dec
mov
or
sti
stos
mov
adc
xor
mov
dec
pop
mov
je
stos
pop
fs
adc
test
sub
pop
aam
out
ret
cmp
jmp
fstl
pop
xchg
or
arpl
popa
mov
xchg
lods
in
cli
mov
jmp
addr16
sbb
add
add
je
cltd
jge
scas
test
mov
movsb
xchg
jmp
dec
mov
dec
cli
xchg
lret
lret
shll
mov
stos
xlat
leave
adc
mov
jl
add
int3
les
addr16
orb
aad
xor
xor
pop
sub
fnstsw
xchg
imul
mov
inc
pop
mov
or
sub
dec
orb
jne
scas
and
mov
int
bound
bound
or
push
in
sub
xchg
push
jo
sub
mov
jge
pop
push
jp
inc
cs
es
mov
cmp
into
dec
in
pop
fbld
dec
xchg
fisttps
xlat
xchg
sbb
jmp
pop
scas
addl
cmp
add
scas
popf
subl
jns
jbe
cmpsl
and
sbb
jnp
and
in
mov
adc
cmp
iret
and
ret
loope
sub
sub
push
inc
inc
into
sub
rcl
dec
inc
and
fcmovbe
push
pop
xchg
jmp
cmp
imul
add
adc
cmp
repnz
mov
mov
mov
js
lds
jnp
jbe
push
or
into
in
add
bound
out
in
jnp
add
inc
int3
push
jb
pop
xchg
rol
push
sbb
cmp
std
scas
jecxz
ja
sub
pusha
cmp
mov
movsb
daa
insb
and
cmp
cmpsb
shlb
xchg
bound
mov
pop
jno
leave
es
dec
dec
dec
cmp
movsl
into
cmpsl
pop
and
out
lahf
jae
inc
push
out
lods
ss
sub
or
pop
stos
enter
fldcw
pop
sub
insb
cmpsl
loope
sbb
sub
mov
outsb
sbb
imul
popl
mov
and
cmp
sbb
add
lock
lock
push
out
push
out
jmp
popf
pop
jecxz
popa
lcall
fdivrl
xor
push
test
or
sbbb
inc
mov
test
movsb
gs
dec
mov
ss
arpl
jo
push
negl
jle
cmpsb
add
mov
mov
sbb
sar
icebp
lcall
xor
jl
outsl
cmp
mov
outsl
aaa
out
cmp
xchg
xchg
jmp
fisubrl
out
outsl
out
in
cli
loop
adc
ror
sarl
sti
or
push
decb
xor
int
loopne
ret
icebp
adc
hlt
adc
clc
jmp
add
fs
loope
sbb
lock
xlat
sbb
shrl
xor
mov
and
in
xchg
push
add
in
repnz
aad
sti
pop
nop
mov
inc
inc
inc
lret
flds
jnp
and
repz
notb
cmp
jmp
jno
loop
nop
pop
xor
add
xchg
jecxz
pushf
xchg
jmp
negb
pop
repnz
pop
and
cmc
aas
daa
dec
bound
xchg
cs
in
loop
je
dec
push
jecxz
push
out
and
std
mov
mov
adc
sub
call
fldt
aas
mov
xlat
out
mov
repnz
fists
mov
xor
sub
push
es
insl
subb
cli
cmc
push
mov
out
xchg
cld
jecxz
movsb
lret
lock
mov
push
dec
push
mov
sbb
rclb
repz
sbb
aam
inc
jo
int3
mov
push
xor
in
clc
faddp
lahf
xchg
dec
call
aam
xor
push
cmp
shr
cs
xchg
fs
in
push
les
out
movsl
lcall
push
notl
mov
rcrb
dec
and
in
test
add
sbb
ror
pop
xchg
adc
pop
addr16
add
stos
fstps
xor
pop
lea
negl
bound
mov
dec
and
dec
ret
mov
xlat
or
cmp
xlat
or
arpl
sbb
push
dec
mov
shl
out
stos
outsl
andl
mov
adc
mov
cli
sub
fs
addr16
push
cmpb
push
mov
add
mov
and
fdiv
pusha
xchg
test
fildll
jns
in
mov
pop
jp
loop
mov
push
ret
adcb
test
sub
mov
and
and
add
inc
jbe
scas
inc
sub
push
xchg
xor
adc
cwtl
cmc
iret
cs
push
rclb
sub
jbe
stos
shrl
or
dec
jae
inc
mov
in
xchg
inc
push
lret
dec
daa
stos
add
rcl
adc
repnz
fistpll
leave
daa
iret
pop
hlt
ret
add
addr16
dec
test
sbb
into
jo
loopne
lock
fwait
mov
inc
cmc
mov
push
cld
add
jo
out
repz
ret
and
xchg
aaa
movsb
mov
sbb
cmpsb
mov
in
xor
or
cli
push
cmp
add
shrl
cmovnp
mov
movsl
aad
sub
lahf
xchg
push
mov
test
cmc
push
add
in
xchg
daa
leave
pop
sarb
movsl
pop
insb
stc
xchg
push
ret
aam
rclb
sbb
push
mov
dec
adc
inc
lods
cmp
clc
jno
sbb
inc
add
sarb
xor
mov
int
out
sub
jp
pop
bound
push
testb
sub
jle
test
dec
push
jg
add
mov
lcall
jbe
int
jbe,pn
ss
sub
fsubrs
dec
neg
push
mov
cmp
jnp
cmp
scas
fistpl
out
addb
aam
shl
cwtl
push
sub
inc
lods
and
orb
sahf
cltd
stos
fs
pop
adc
dec
pushf
repnz
xchg
lods
or
jb
fnstenv
shlb
test
pop
mov
in
jl
insb
sbb
testl
cli
in
jl
xor
imul
inc
xchg
movsb
push
lcall
sub
xlat
pop
out
jb
mov
movsl
lcall
stos
dec
cs
add
nop
xchg
ret
and
fiadds
insb
fnstcw
sbb
repz
lret
lea
int3
call
popa
or
pop
in
add
in
cmc
inc
pushf
xor
stos
jmp
adc
inc
loopne
push
inc
fbstp
lods
aas
lret
adc
sbb
shll
jecxz
mov
fs
std
dec
fistl
jp
mov
mov
mov
fmuls
xor
mov
sub
mov
in
lock
lds
mov
bound
in
test
and
scas
pop
rcll
es
jp
and
inc
xchg
subb
cld
push
fsubl
pop
shll
mov
pop
lcall
mov
enter
xor
ret
pop
out
push
cmc
lret
in
add
sbb
ljmp
dec
lods
mov
pop
sub
xchg
stos
jno
push
cs
mov
add
or
jmp
or
das
dec
xchg
or
dec
mov
cmp
inc
push
roll
loopne
shll
pusha
insl
pop
cmp
inc
stos
mov
stc
push
add
jnp
mov
decl
stc
mov
popa
xchg
xor
adc
xor
cmp
mov
or
sub
imul
mov
or
sbb
push
sub
jne
pusha
lock
or
adc
mov
in
test
xchg
or
out
out
inc
and
jg
outsl
or
outsb
addr16
mov
jp
inc
jns
adc
cmp
mov
jne
jle
lods
pop
in
add
imul
mov
pop
fists
push
cmp
xchg
popf
iret
push
mov
push
sti
jo
stos
pop
inc
es
mov
ljmp
pop
push
fucomp
mov
iret
lea
pop
pop
cltd
push
dec
inc
xor
mov
inc
ja
dec
cmpsb
imul
and
fidivrl
mov
imul
repz
jo
shr
jno
xchg
sub
inc
sbb
adc
arpl
int3
imul
inc
mov
fdivs
xchg
aaa
lret
and
add
dec
jge
repnz
push
fists
xor
call
and
leave
cmp
xchg
and
xor
pop
in
sbb
jge
xchg
daa
stc
xchg
jae
sbb
fwait
jno
mov
jl
int3
jl
pop
adc
mov
and
inc
scas
lahf
mov
xor
inc
mov
shl
inc
and
inc
pop
stc
lcall
stos
jle
push
iret
jecxz
jmp
pop
pop
cmp
add
test
rcrb
mov
pop
cmp
orb
aaa
sbb
or
xor
cmp
int
enter
xchg
mov
lcall
push
fcoml
cmp
sub
bound
adcb
jg
inc
bound
sbb
xorl
aad
div
les
out
aaa
negl
mov
rcl
xchg
mov
jnp
sbb
add
into
mov
cmc
pop
dec
mov
lahf
out
in
outsl
stc
sub
loop
mov
stc
push
dec
fsubl
ja
xor
adc
lods
repnz
jg
fcompl
fmuls
sub
or
cmp
push
lcall
pop
pop
loopne
mov
lahf
adc
testb
addr16
scas
xchg
addr16
push
sbb
data16
mov
sub
jbe
mov
imul
sti
dec
imulb
pop
xor
aad
push
nop
jb
ss
cmp
nop
push
fnstenv
scas
repz
daa
int
xor
mov
mov
adc
loopne
repnz
xchg
add
adc
dec
pushf
fdivl
test
sbb
adc
nop
mov
aas
gs
xorb
pop
dec
fimull
enter
in
mov
lret
out
imul
add
stos
ds
mov
scas
xlat
sbbl
jmp
mov
je
mov
cmp
lock
adc
mov
mov
test
mov
or
insl
or
add
cmpsl
cmpsl
clc
fistpll
mov
xchg
or
cmp
lret
into
dec
je
js
cmp
inc
inc
add
rcll
std
lds
sub
in
scas
aam
repz
ret
ljmp
fisttpll
jno
push
hlt
int
lret
ljmp
shrl
mov
out
adc
fwait
xchg
repnz
or
jne
adc
int3
or
mov
shlb
dec
icebp
scas
outsl
test
xor
xchg
test
movsb
jns
sarl
and
shrl
movsl
xor
add
loope
je
sub
lods
xor
cld
or
push
outsl
xor
jge
mov
cwtl
dec
or
pop
les
jno
test
jno
or
rcrb
xor
test
jne
iret
ja
int3
pop
repz
push
in
jns
sbb
js
push
loope
out
push
push
sub
pop
leave
lods
addr16
lret
aad
mov
and
mov
mov
jle
or
in
xchg
gs
int3
mov
cmp
cs
rcll
sbb
dec
or
notb
push
cmp
and
insb
and
jnp
insl
and
and
sahf
adc
arpl
jns
mov
rorb
testl
xor
inc
mov
inc
insb
pop
inc
mov
mov
mov
shll
fisubrs
cli
lds
sbb
cs
repnz
mov
leave
adc
mov
arpl
pop
mov
sub
inc
sbb
sti
mov
add
jge
int3
push
ja
pop
and
push
ret
xor
inc
jg
scas
cmpb
cmp
inc
daa
movsb
enter
dec
jle
cmpsb
mov
sti
in
lcall
enter
daa
clc
mov
jno
in
jl
int3
inc
dec
xchg
ds
adc
and
cwtl
xchg
push
addr16
or
mov
sbb
pop
and
js
sbb
pop
ljmp
loope
add
pop
popf
std
cmp
fsubrs
xchg
pop
inc
shl
orb
mov
push
movsb
lcall
xchg
inc
xor
mov
int
mov
add
sub
movsb
or
fdivrl
dec
sahf
jbe
bound
outsb
xlat
xchg
xchg
mov
arpl
mov
adc
and
cmp
pop
cmp
mov
jbe
lret
cld
shrl
mov
sbb
dec
dec
inc
into
lcall
xor
inc
lods
outsl
fcom
cmp
sub
cmp
lea
jg
push
data16
popa
add
xlat
sbb
out
out
cli
jnp
push
xor
fstpt
popf
push
or
cmp
mov
fsubl
pop
dec
loopne
int3
xchg
pop
cmp
das
adc
imul
or
add
ss
xchg
sub
sub
cmp
mov
mull
inc
ja
cli
gs
nop
