jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
aaa
cmp
cmp
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
lea
mov
lea
lea
lea
mov
xchg
mov
lea
movl
mov
push
call
cmp
jnp
jmp
xchg
xchg
mov
mov
xchg
mov
lea
mov
lea
mov
dec
xchg
mov
mov
lea
mov
mov
mov
mov
inc
dec
mov
push
call
lea
cmp
jno
xchg
lea
mov
lea
inc
inc
mov
xchg
xchg
lea
xchg
mov
mov
lea
mov
xchg
lea
lea
mov
mov
dec
dec
movl
mov
push
call
cmp
jg
mov
lea
mov
mov
lea
cmp
ja
xchg
inc
dec
dec
lea
lea
dec
mov
mov
mov
jmp
lea
dec
inc
dec
lea
xchg
xchg
mov
mov
mov
lea
lea
inc
dec
movl
mov
push
call
cmp
jg
xchg
inc
dec
xchg
mov
lea
mov
mov
mov
xchg
mov
cmp
jne
lea
inc
mov
dec
dec
mov
xchg
lea
lea
lea
lea
lea
xchg
mov
xchg
movl
mov
push
push
call
lea
mov
lea
lea
lea
mov
xchg
mov
lea
movl
mov
push
call
cmp
jg
mov
lea
mov
mov
lea
cmp
ja
xchg
inc
dec
dec
lea
lea
dec
mov
mov
mov
jmp
lea
dec
inc
dec
lea
xchg
xchg
mov
mov
mov
lea
lea
inc
dec
movl
mov
push
call
cmp
jg
xchg
inc
dec
xchg
mov
lea
mov
mov
mov
xchg
mov
cmp
jne
lea
inc
mov
dec
dec
mov
xchg
lea
lea
lea
lea
lea
xchg
mov
xchg
movl
mov
push
push
call
cmp
jg
xchg
inc
dec
xchg
mov
lea
mov
mov
mov
xchg
mov
cmp
jne
lea
inc
mov
dec
dec
mov
xchg
lea
lea
lea
lea
lea
xchg
mov
xchg
movl
mov
push
push
call
lea
mov
lea
lea
lea
mov
xchg
mov
lea
movl
mov
push
call
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
jg
mov
lea
mov
mov
lea
cmp
ja
xchg
inc
dec
dec
lea
lea
dec
mov
mov
mov
jmp
lea
dec
inc
dec
lea
xchg
xchg
mov
mov
mov
lea
lea
inc
dec
mov
cmp
je
call
ret
cmp
jnp
jmp
xchg
xchg
mov
mov
xchg
mov
lea
mov
lea
mov
dec
xchg
mov
mov
lea
mov
mov
mov
mov
inc
dec
mov
xor
divl
test
jne
lea
cmp
jno
xchg
lea
mov
lea
inc
inc
mov
xchg
xchg
lea
xchg
mov
mov
lea
mov
xchg
lea
lea
mov
mov
dec
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jg
xchg
inc
dec
xchg
mov
lea
mov
mov
mov
xchg
mov
cmp
jne
lea
inc
mov
dec
dec
mov
xchg
lea
lea
lea
lea
lea
xchg
mov
xchg
mov
mov
pop
ret
push
mov
add
mov
mov
mov
cmp
jl
lea
xchg
mov
lea
xchg
lea
xchg
mov
xchg
xchg
mov
xchg
mov
lea
xchg
lea
xchg
mov
lea
lea
mov
lea
lea
xchg
inc
inc
inc
mov
cmp
je
ret
mov
cmp
ja
lea
lea
lea
lea
mov
xchg
lea
mov
dec
inc
dec
mov
xchg
lea
mov
lea
lea
lea
lea
xchg
lea
mov
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
push
mov
add
mov
mov
push
mov
push
call
mov
mov
pop
pop
pop
ret
add
je
jb
arpl
fs
jae
add
push
mov
add
mov
lea
mov
call
mov
mov
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jge
lea
lea
lea
dec
inc
dec
mov
xchg
mov
inc
dec
inc
lea
lea
mov
mov
cmp
jne
xchg
lea
lea
mov
mov
xchg
inc
dec
dec
lea
mov
inc
inc
inc
xchg
mov
mov
mov
cmp
je
call
mov
cmp
ja
lea
lea
lea
lea
mov
xchg
lea
mov
dec
inc
dec
mov
xchg
lea
mov
lea
lea
lea
lea
xchg
lea
mov
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
mov
movl
cmp
jg
xchg
inc
dec
xchg
mov
lea
mov
mov
mov
xchg
mov
cmp
jne
lea
inc
mov
dec
dec
mov
xchg
lea
lea
lea
lea
lea
xchg
mov
xchg
mov
sub
mov
cmp
jbe
lea
xchg
xchg
mov
lea
mov
mov
lea
xchg
mov
mov
mov
mov
lea
mov
mov
mov
mov
inc
mov
lea
lea
lea
dec
inc
push
mov
mov
xor
call
mov
lea
cmp
jno
xchg
lea
mov
lea
inc
inc
mov
xchg
xchg
lea
xchg
mov
mov
lea
mov
xchg
lea
lea
mov
mov
dec
dec
mov
mov
mov
call
cmp
jl
lea
xchg
mov
lea
xchg
lea
xchg
mov
xchg
xchg
mov
xchg
mov
lea
xchg
lea
xchg
mov
lea
lea
mov
lea
lea
xchg
inc
inc
inc
push
mov
mov
xor
call
mov
cmp
jnp
jmp
xchg
xchg
mov
mov
xchg
mov
lea
mov
lea
mov
dec
xchg
mov
mov
lea
mov
mov
mov
mov
inc
dec
cmp
jg
mov
lea
mov
mov
lea
cmp
ja
xchg
inc
dec
dec
lea
lea
dec
mov
mov
mov
jmp
lea
dec
inc
dec
lea
xchg
xchg
mov
mov
mov
lea
lea
inc
dec
lea
mov
call
cmp
jbe
lea
xchg
xchg
mov
lea
mov
mov
lea
xchg
mov
mov
mov
mov
lea
mov
mov
mov
mov
inc
mov
lea
lea
lea
dec
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
mov
cmp
ja
lea
lea
lea
lea
mov
xchg
lea
mov
dec
inc
dec
mov
xchg
lea
mov
lea
lea
lea
lea
xchg
lea
mov
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jge
lea
lea
lea
dec
inc
dec
mov
xchg
mov
inc
dec
inc
lea
lea
mov
mov
cmp
jne
xchg
lea
lea
mov
mov
xchg
inc
dec
dec
lea
mov
inc
inc
inc
xchg
mov
mov
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
lea
mov
lea
lea
lea
mov
xchg
mov
lea
mov
mov
mov
mov
xor
push
push
mov
mov
cltd
add
adc
add
mov
mov
mov
cmp
jnp
jmp
xchg
xchg
mov
mov
xchg
mov
lea
mov
lea
mov
dec
xchg
mov
mov
lea
mov
mov
mov
mov
inc
dec
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
nop
push
mov
add
mov
mov
cmp
jl
lea
xchg
mov
lea
xchg
lea
xchg
mov
xchg
xchg
mov
xchg
mov
lea
xchg
lea
xchg
mov
lea
lea
mov
lea
lea
xchg
inc
inc
inc
push
call
mov
mov
call
mov
mov
mov
lea
cmp
jno
xchg
lea
mov
lea
inc
inc
mov
xchg
xchg
lea
xchg
mov
mov
lea
mov
xchg
lea
lea
mov
mov
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jbe
lea
xchg
xchg
mov
lea
mov
mov
lea
xchg
mov
mov
mov
mov
lea
mov
mov
mov
mov
inc
mov
lea
lea
lea
dec
inc
mov
mov
movl
lea
mov
lea
lea
lea
mov
xchg
mov
lea
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jnp
jmp
xchg
xchg
mov
mov
xchg
mov
lea
mov
lea
mov
dec
xchg
mov
mov
lea
mov
mov
mov
mov
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
mov
lea
lea
lea
mov
xchg
mov
lea
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jg
xchg
inc
dec
xchg
mov
lea
mov
mov
mov
xchg
mov
cmp
jne
lea
inc
mov
dec
dec
mov
xchg
lea
lea
lea
lea
lea
xchg
mov
xchg
mov
pop
ret
add
imul
add
outsb
add
insb
add
add
add
add
add
add
add
gs
in
testb
mov
xchg
mov
cwtl
mov
xchg
cwtl
rcrb
mov
cmpsb
popf
orb
lahf
mov
cmpsb
popf
orb
cltd
cltd
hlt
mov
xchg
orb
mov
cwtl
sbbb
cltd
sbbb
cwtl
mov
hlt
fwait
hlt
cltd
hlt
xor
hlt
cltd
hlt
mov
hlt
fdivp
cwtl
hlt
mov
hlt
hlt
hlt
test
or
mov
mov
xchg
mov
and
mov
jb
mov
adc
hlt
data16
mov
push
mov
pop
mov
dec
mov
dec
mov
cmp
mov
push
dec
lods
mov
jge
or
mov
hlt
jge
or
mov
push
lods
mov
jge
or
push
xor
mov
jge
or
loope
cmp
sbb
push
cmp
mov
jge
or
in
push
inc
lods
mov
jge
or
call
lods
mov
jge
or
stc
ret
xor
mov
lods
lods
mov
jnp
cmpsb
cmpsl
jge
jge
jge
add
scas
xor
jnp
xor
mov
test
cmp
mov
cmpl
mov
movsb
jnp
cmp
mov
movsb
jnp
cmp
movsb
sarb
jnp
cld
jge
and
cmp
mov
movsb
jnp
cmp
mov
movsb
jnp
and
lods
jnp
and
adc
hlt
hlt
jnp
adc
cld
jnp
and
shl
mov
jnp
add
je
hlt
hlt
jge
sub
mov
hlt
js
hlt
hlt
hlt
jnp
sub
hlt
repz
sbb
lcall
jnp
add
mov
cmp
movsb
enter
jae
sbb
js
hlt
hlt
hlt
jnp
sub
hlt
mov
jnp
sub
repz
jnp
sub
in
mov
sbb
in
mov
jnp
sub
in
mov
sbb
mov
je
lock
sbb
pmuludq
movsb
jnp
sbb
jnp
cmp
movsb
int3
jnp
adc
repnz
jnp
and
sbb
bnd
and
mov
movsb
jnp
sbb
jnp
cmp
movsb
int3
jnp
adc
bnd
adc
jae
sbb
jnp
sbb
hlt
mov
mov
sub
add
jns
mov
repz
jnp
cmp
mov
jge
or
mov
hlt
lcall
add
mov
pushf
hlt
je
hlt
lcall
aam
jnp
cmp
movsb
test
hlt
je
hlt
lcall
mov
jnp
or
cltd
or
setp
int
mov
jne
hlt
adc
pextrw
xor
adc
mov
clc
hlt
xor
and
add
inc
je
sub
repnz
hlt
hlt
hlt
addl
cmp
hlt
xor
xor
stos
hlt
hlt
hlt
adc
repnz
in
mov
xor
pop
mov
pop
sbb
sbb
hlt
hlt
hlt
hlt
hlt
hlt
sbb
pusha
and
cmp
xor
loopne
hlt
hlt
shl
xchg
hlt
hlt
cmp
adc
xor
or
xchg
mov
imul
push
fnsave
add
sbb
and
in
xor
cmp
pmulhw
jb
xor
hlt
xorl
cmpps
dec
push
paddusw
jnp
jne
or
mov
xchg
mov
hlt
ss
std
xchg
mov
hlt
ss
jp
or
or
xchg
mov
push
mov
hlt
mov
jnp
adc
pi2fd
hlt
js
hlt
hlt
hlt
ss
jp
or
adc
bnd
and
or
or
mov
lret
mov
ss
or
hlt
mov
ss
jp
or
and
or
inc
push
psllq
ret
and
or
inc
bound
xchg
mov
repz
pmuludq
hlt
jl
or
xor
mov
xchg
mov
jl
or
or
or
mov
push
mov
hlt
mov
sbb
test
mov
cld
xchg
mov
mov
pmuludq
hlt
push
cld
xchg
mov
ret
xor
std
xchg
mov
ret
and
cld
xchg
mov
incl
add
pmuludq
hlt
push
std
xchg
mov
ret
xor
cld
xchg
mov
jp
add
ret
xor
std
xchg
mov
jp
add
jmp
jl
add
std
xchg
mov
jp
adc
xchg
mov
ret
xor
cld
xchg
mov
incl
add
jmp
incl
add
pmuludq
hlt
jl
adc
xor
mov
xchg
mov
ret
jl
push
jp
push
lods
mov
sbb
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
jne
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
lea
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
call
ret
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
lea
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jge
lea
lea
lea
dec
inc
dec
mov
xchg
mov
inc
dec
inc
lea
lea
mov
mov
cmp
jne
xchg
lea
lea
mov
mov
xchg
inc
dec
dec
lea
mov
inc
inc
inc
xchg
mov
mov
movl
cmp
jbe
lea
xchg
xchg
mov
lea
mov
mov
lea
xchg
mov
mov
mov
mov
lea
mov
mov
mov
mov
inc
mov
lea
lea
lea
dec
inc
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jg
xchg
inc
dec
xchg
mov
lea
mov
mov
mov
xchg
mov
cmp
jne
lea
inc
mov
dec
dec
mov
xchg
lea
lea
lea
lea
lea
xchg
mov
xchg
mov
mov
call
mov
cmpl
je
lea
mov
lea
lea
lea
mov
xchg
mov
lea
mov
cmp
je
mov
subb
mov
mov
cmp
jnp
jmp
xchg
xchg
mov
mov
xchg
mov
lea
mov
lea
mov
dec
xchg
mov
mov
lea
mov
mov
mov
mov
inc
dec
mov
xorb
cmp
jg
xchg
inc
dec
xchg
mov
lea
mov
mov
mov
xchg
mov
cmp
jne
lea
inc
mov
dec
dec
mov
xchg
lea
lea
lea
lea
lea
xchg
mov
xchg
incl
mov
cmp
jne
mov
cmp
ja
lea
lea
lea
lea
mov
xchg
lea
mov
dec
inc
dec
mov
xchg
lea
mov
lea
lea
lea
lea
xchg
lea
mov
dec
mov
call
lea
mov
lea
lea
lea
mov
xchg
mov
lea
mov
push
mov
push
call
cmpl
je
mov
push
call
lea
mov
lea
lea
lea
mov
xchg
mov
lea
cmp
jnp
jmp
xchg
xchg
mov
mov
xchg
mov
lea
mov
lea
mov
dec
xchg
mov
mov
lea
mov
mov
mov
mov
inc
dec
cmp
jg
mov
lea
mov
mov
lea
cmp
ja
xchg
inc
dec
dec
lea
lea
dec
mov
mov
mov
jmp
lea
dec
inc
dec
lea
xchg
xchg
mov
mov
mov
lea
lea
inc
dec
push
mov
push
call
mov
pop
ret
lea
push
mov
add
cmpb
jne
call
cmp
jg
mov
lea
mov
mov
lea
cmp
ja
xchg
inc
dec
dec
lea
lea
dec
mov
mov
mov
jmp
lea
dec
inc
dec
lea
xchg
xchg
mov
mov
mov
lea
lea
inc
dec
mov
mov
mov
mov
mov
and
jmp
and
add
inc
xor
cmp
jmp
call
ret
jne
lea
cmp
jno
xchg
lea
mov
lea
inc
inc
mov
xchg
xchg
lea
xchg
mov
mov
lea
mov
xchg
lea
lea
mov
mov
dec
dec
movb
cmp
jnp
jmp
xchg
xchg
mov
mov
xchg
mov
lea
mov
lea
mov
dec
xchg
mov
mov
lea
mov
mov
mov
mov
inc
dec
mov
mov
pop
ret
mov
push
mov
add
call
lea
mov
lea
lea
lea
mov
xchg
mov
lea
call
call
call
test
jne
call
jmp
movw
cmp
jl
lea
xchg
mov
lea
xchg
lea
xchg
mov
xchg
xchg
mov
xchg
mov
lea
xchg
lea
xchg
mov
lea
lea
mov
lea
lea
xchg
inc
inc
inc
call
lea
mov
pop
ret
nop
push
mov
add
lea
mov
lea
lea
lea
mov
xchg
mov
lea
push
call
test
jne
lea
cmp
jno
xchg
lea
mov
lea
inc
inc
mov
xchg
xchg
lea
xchg
mov
mov
lea
mov
xchg
lea
lea
mov
mov
dec
dec
push
call
cmp
je
push
call
mov
mov
jmp
cmp
jbe
lea
xchg
xchg
mov
lea
mov
mov
lea
xchg
mov
mov
mov
mov
lea
mov
mov
mov
mov
inc
mov
lea
lea
lea
dec
inc
mov
pop
ret
add
jae
add
jb
pop
add
add
jns
pop
add
add
jae
jae
popa
add
add
add
add
popa
add
imul
sub
jne
mov
mov
cmp
ja
lea
lea
lea
lea
mov
xchg
lea
mov
dec
inc
dec
mov
xchg
lea
mov
lea
lea
lea
lea
xchg
lea
mov
dec
mov
mov
mov
lea
call
cmp
jg
xchg
inc
dec
xchg
mov
lea
mov
mov
mov
xchg
mov
cmp
jne
lea
inc
mov
dec
dec
mov
xchg
lea
lea
lea
lea
lea
xchg
mov
xchg
ret
lea
ret
lea
add
push
add
mov
jge
mov
add
pop
mov
adc
incb
xor
sbb
test
ss
sarb
mov
add
xchg
add
mov
or
jl
sub
add
in
pop
lret
lods
pop
pop
or
add
jmp
fdivrl
test
add
movsl
stos
xchg
add
push
out
cmp
add
jnp
xchg
add
add
pop
mov
sarb
je
add
pop
add
jge
adcb
mov
push
cmp
and
stos
add
outsl
cwtl
add
or
cli
mov
mov
enter
xor
out
leave
clc
movsl
add
aaa
add
mov
fsub
std
add
add
lods
pop
xor
add
fldl
cmp
cmp
jae
add
insb
add
sbb
fs
add
add
aas
push
mov
inc
add
add
orb
adc
sbb
add
scas
add
mov
mov
cmp
pop
iret
and
and
mov
pusha
xor
mov
push
dec
inc
add
sbb
iret
push
lods
dec
mov
lret
xor
xchg
out
add
add
adc
sbb
add
iret
rol
sbb
rorb
add
jae
mov
adc
add
add
dec
jp
add
sub
xor
sbb
aaa
add
push
dec
pop
rclb
and
add
icebp
add
call
testl
test
adc
call
mov
mov
add
adc
insl
push
add
add
fs
add
mov
add
fidivl
xchg
push
sbb
stos
add
xchg
imul
push
xor
mov
add
aam
sahf
outsl
test
push
lea
lea
xchg
jle
lcall
add
push
mov
add
push
push
inc
cmp
add
add
push
mov
pop
cmp
add
pop
loop
inc
sbbl
add
jecxz
ficoms
fimuls
stos
xchg
add
cwtl
add
add
add
out
add
add
call
xor
cmp
mov
dec
mov
push
data16
add
add
jl
cmc
add
sbb
add
sti
std
sbb
notb
test
lret
jb
add
mov
mov
stos
je
push
xor
add
repnz
add
jne
jmp
jbe
aaa
jae
lods
add
add
jno
xor
aas
lahf
sahf
add
scas
flds
add
rol
test
sbb
out
or
std
int3
sub
aas
call
or
add
push
or
dec
mov
add
add
and
and
das
add
add
or
mov
add
adc
push
or
out
add
cli
xor
movd
into
outsb
stos
add
xchg
add
pop
sbb
fiadds
sbb
dec
mov
lea
ret
mov
add
mov
mov
add
jo
imul
cwtl
add
add
test
add
jno
stc
mov
subl
add
add
lea
add
enter
sub
out
cwtl
test
cmpsl
xchg
push
push
add
movsb
dec
lahf
add
cwtl
fiadds
jg
add
add
shlb
sub
and
push
mov
pop
ljmp
jmp
add
es
inc
add
cld
jl
mov
jne
mov
mov
sti
out
mov
out
shrb
arpl
aam
pop
cwtl
ret
mov
add
push
dec
cld
insl
jmp
or
xchg
shrl
sbb
sub
lods
test
pop
mov
jae
jmp
pop
lock
or
lods
add
push
add
xchg
scas
push
push
popa
outsl
sub
xchg
hlt
sbb
cmp
stos
sbb
lret
lock
out
dec
inc
dec
xchg
xor
push
jl
xor
andl
or
jle
dec
inc
test
xchg
test
dec
push
ret
lock
faddl
dec
hlt
sti
sub
or
int3
dec
fwait
pushf
aad
push
and
mov
xchg
adc
lcall
pop
ljmp
xor
mov
ret
push
pop
pop
popaw
cmovle
jp
data16
daa
mov
mov
pop
scas
dec
in
xchg
jne
mov
mov
inc
repz
xchg
xchg
mov
adc
pop
xchg
out
xchg
gs
in
mov
push
xor
pop
stos
lcall
insb
movsb
lcall
pushf
adc
in
push
shlb
fbstp
add
ret
xor
rcll
cld
lret
xchg
and
in
js
adc
insl
lods
inc
xlat
insb
pop
push
xor
sbb
mov
cmpsl
les
pop
jl
arpl
mov
mov
aas
sbb
leave
add
mov
arpl
inc
inc
sub
dec
or
push
popa
mov
add
or
inc
popf
add
rol
pop
mov
sub
sub
pop
scas
pop
mov
pop
cmp
cmp
imul
push
shrb
add
in
dec
jge
xlat
jno
out
scas
cmp
fisubrl
int
sarb
xchg
jl
cmc
mov
movsl
mov
jge
add
xlat
cmpsb
lahf
cmpsl
call
push
test
outsb
jbe
inc
jns
out
adc
in
push
enter
pop
loope
push
push
loop
loope
push
add
les
ds
adc
and
stc
xchg
cmp
mov
sbb
fadds
jae
mov
add
js
add
xchg
lods
cld
lcall
test
jg
or
ret
je
outsb
sbb
sahf
shrb
fdivrl
sti
call
mov
aam
and
pushf
iret
int
movsb
loop
adc
not
pop
cmp
sarl
mov
shlb
sahf
icebp
jge
test
sub
andb
add
add
loop
out
repnz
cmp
cli
adc
in
ss
aas
cmp
lods
dec
loopne
hlt
inc
lret
mov
and
cmp
jecxz
or
and
push
xchg
xchg
cmc
in
int
in
or
pop
cmovnp
adc
roll
shr
add
mov
lods
mov
mov
inc
sub
mov
pop
dec
out
loope
push
lods
test
gs
add
int3
fs
inc
outsb
shr
fstps
push
dec
repz
outsl
xchg
lds
stc
sbb
je
repnz
xchg
fs
pop
push
call
sbbl
subl
xchg
nop
sarb
aas
pop
into
jmp
dec
inc
sarb
bound
jecxz
mov
nop
lea
and
adc
loope
loopne
jg
or
mov
jg
mov
jmp
inc
enter
pop
dec
mov
mov
mov
in
jns
outsl
testb
jb
inc
fmul
cmpsl
scas
cltd
sbb
mov
ds
in
orl
jecxz
sbb
mov
lret
push
mov
ret
inc
mov
mov
dec
or
xchg
add
ljmp
shrl
lods
mov
data16
mov
imul
cltd
or
mov
dec
or
mov
loopne
push
push
xchg
push
pop
daa
clc
jmp
dec
sbb
or
sahf
bound
stos
mov
out
ljmp
or
imul
mov
adc
xchg
stc
imul
mov
xor
xor
xor
jg
inc
or
fwait
lret
bound
rolb
scas
mov
andl
aas
in
pop
loopne
sub
push
xchg
rolb
addr16
mov
and
adc
push
arpl
mov
test
sahf
inc
mov
nop
shlb
xchg
mov
xchg
data16
xchg
sub
xor
or
jae
push
jo
push
stos
or
fwait
outsl
insb
jnp,pt
xchg
sarb
stc
aaa
in
mov
iret
enter
das
lret
fimuls
insl
jns
jae
in
insl
push
cmpsl
add
popf
cmp
in
mov
push
cmp
cli
xchg
adc
xor
fcomps
scas
stos
or
stos
sbb
mov
xchg
xchg
mov
jnp
shl
inc
hlt
arpl
xchg
dec
aad
xor
pop
push
shlb
add
mov
int3
add
sbb
les
mov
nop
rcl
push
scas
divb
and
cmpb
leave
adc
push
and
mov
sbb
pop
ja
or
into
cmpl
ja
pusha
out
popf
xor
xchg
icebp
pop
lahf
push
aam
gs
test
cmp
flds
call
jge
enter
pop
and
scas
push
test
fldcw
xchg
and
inc
data16
sub
mov
lcall
sbb
xorb
fdivp
ja
mov
js
jne
pop
push
fisubs
cmp
push
lret
fsubrl
dec
shrl
mov
mov
adcb
sbb
jne
inc
out
sti
jg
addr16
mov
sub
mov
mov
and
sbb
int
push
xor
mov
jp
jnp
lret
xor
adc
mov
mov
into
sahf
xchg
ficoms
cmpb
outsl
dec
fsubs
loop
lock
repnz
adc
or
cwtl
or
gs
mov
shlb
jge
dec
cmp
pusha
adc
into
cmp
imul
dec
sub
ja,pn
adc
pop
imul
mov
jns
lahf
jno
mov
imul
leave
subb
mov
cmc
in
les
sub
nop
loop
rolb
ss
xor
addr16
in
sbbl
les
xchg
xrelease
xchg
mov
or
rcrb
scas
fsubrs
adc
nop
test
pushf
cmc
into
sub
or
sbb
fwait
andb
cli
jp
jb
and
dec
mov
je
or
add
movsl
mov
call
lahf
call
inc
adcl
lods
push
pop
fstpl
inc
jecxz
loop
out
sbb
inc
adc
cmp
das
ror
inc
je
dec
arpl
cwtl
movsl
mov
lods
jl
mov
xchg
data16
cld
shl
dec
lret
push
adc
mov
imul
push
ror
mov
test
push
inc
loope
iret
add
es
sub
dec
add
ss
aas
rorb
ljmp
clc
lods
jg
push
mov
mov
mov
mov
lret
add
loopne
test
outsb
mov
insl
icebp
push
fldenv
out
jns
into
clc
popf
movsl
push
xchg
sbb
lods
cld
pop
add
test
adc
sahf
ficoms
aam
inc
adc
mov
popf
or
add
mov
iret
cmpsb
mov
test
ret
sbb
out
jge
dec
fidivl
lahf
or
pushf
xor
pushw
add
lret
out
mov
fs
jns
rcr
in
movsl
cmpsl
xchg
jl
xor
cmpsb
pop
je
lea
lods
jp
dec
dec
mov
and
lods
mov
inc
repz
stos
inc
jne
ret
mov
mov
cltd
mov
mov
push
xchg
icebp
cltd
adcl
cmp
adc
or
ret
push
push
scas
jecxz
stos
cmpb
insb
jp
cli
jnp
filds
loop
mov
push
fs
pusha
xor
ds
pop
in
lahf
hlt
inc
js
xchg
mov
push
push
stos
popf
arpl
mov
aad
inc
fisubl
push
sbb
cli
jbe
test
push
stos
pop
push
icebp
andl
repnz
and
hlt
push
fsubs
js
inc
xor
jnp
cwtl
add
push
jg
xlat
or
fchs
add
into
int3
out
mov
fisubrs
xchg
shl
in
scas
aad
enter
pop
cmp
or
jbe
std
jge
nop
cld
sbb
daa
lods
mov
jno
xchg
pop
imul
lods
in
loop
das
jo
pop
sub
cmp
subl
mov
inc
xchg
ljmp
lods
sub
add
subb
xor
sub
xor
ds
lahf
mov
lock
stc
sbb
subb
lret
orl
cmp
stc
pop
ficoml
pop
xchg
xchg
ljmp
loope
and
sub
and
pop
mov
mov
pop
in
mov
sbb
dec
hlt
push
rorl
push
int
jecxz
sub
cli
xchg
testl
add
lret
sbb
cmpsb
test
cmp
adcb
outsl
sub
es
test
enter
dec
cli
fisttpl
cmp
push
and
inc
add
insb
jb
xor
cmp
mov
or
xchg
into
sbb
je
jae
divb
mov
cmpsl
sub
dec
adc
imul
or
adc
pusha
inc
cltd
xlat
dec
pop
sub
sub
mov
das
movsl
or
aas
mov
repz
je
adc
loopne
sub
inc
xchg
push
xchg
mov
jns
push
xor
sbb
ljmp
pop
mov
jle
pushf
mov
sbb
shlb
nop
jbe
dec
aas
cltd
sub
in
mov
cs
xor
xor
adc
pop
mov
jmp
call
pop
scas
inc
mov
subl
sbb
fstpt
cmp
fiaddl
jl
inc
fsubrp
das
mov
notl
das
rcll
mov
testb
mov
mov
jecxz
mov
imul
sub
ret
mov
pop
mov
loope
lock
and
cmc
pop
dec
shlb
push
mov
ret
pop
movsl
add
fcmove
xchg
insl
mov
mov
adc
jbe
mov
insb
add
ljmp
mov
je
mull
sub
cltd
cltd
jbe
adc
pusha
push
jns
jmp
cs
frstor
cmc
repnz
mov
rorl
pop
stos
pop
mov
cwtl
cmpsl
push
out
js
pusha
xchg
push
shl
push
or
xor
xor
push
or
pushl
pusha
scas
mov
rclb
dec
test
pop
ja
gs
dec
int
mov
mov
add
or
lea
in
hlt
out
pushf
fst
bound
subl
dec
inc
push
xchg
lret
push
test
dec
xchg
dec
pop
dec
mov
addr16
sbb
mov
stc
push
mov
jle
lods
dec
lea
mov
mov
sub
jmp
mov
jno
out
stos
jge
cli
or
or
cmpsl
movsl
push
out
jnp
stos
repz
and
lahf
scas
jnp
in
jmp
in
mov
mov
ret
insl
pop
and
les
add
insb
lods
push
sub
sbb
inc
push
push
ficoml
mov
imul
jno
push
push
cmp
adc
or
push
and
leave
imul
arpl
jno
std
imul
add
or
xor
fisubl
adc
mov
ds
scas
mov
push
and
fsts
or
sub
std
and
lods
pop
mov
inc
aam
pop
ljmp
jae
push
push
fs
xchg
dec
push
push
es
or
inc
or
pop
aam
loopne
int3
push
iret
sar
inc
xor
cmpsb
fwait
and
in
xchg
scas
xor
cld
iret
hlt
pop
sahf
idivb
loope
dec
dec
sub
test
dec
outsb
test
lret
and
sbb
sbb
mov
shll
jg
std
pusha
out
pop
mov
adc
adc
je
mov
bound
sub
mov
adc
cli
mov
dec
mov
rcl
mov
insb
cmp
fsubs
int
pop
add
test
dec
lret
pop
sarl
dec
mov
sbb
sub
jb
jne
or
imul
pusha
pop
scas
prefetchwt1
adc
push
ss
push
sarl
and
dec
jbe
lahf
lret
in
xor
xor
or
dec
out
cmp
loopne
movsl
sub
fistpl
and
jne
and
mov
hlt
or
pop
icebp
repnz
stc
aas
sub
cwtl
xchg
lcall
push
mov
inc
loopne
sub
shlb
inc
cmpsl
push
mov
les
aaa
in
push
gs
sbb
and
test
pop
outsb
sti
add
outsb
mov
jmp
lock
inc
mov
pop
fcoms
aas
cmp
jno
out
dec
movsl
adc
je
in
sub
mov
cltd
lea
mov
decl
lds
dec
shlb
fldt
or
clc
pusha
inc
sbb
das
movsb
shll
mov
push
jae
shll
imul
xchg
xor
sub
movsb
cmpsl
stos
into
jns
or
mov
inc
and
cld
sub
clc
lret
xor
les
or
pop
lock
dec
inc
pop
adc
rcl
je
dec
sub
aam
jle
ret
in
cld
es
fmull
insl
xchg
dec
cli
lret
mov
jmp
jne
lods
push
xchg
inc
mov
decl
and
in
test
mov
stos
cltd
lods
cld
mov
mov
push
std
push
pop
mov
ffree
push
arpl
adc
addl
mov
jae
stos
xchg
or
popf
sub
jmp
lea
mov
adc
xchg
je
dec
in
or
test
cli
test
dec
rolb
mov
or
mov
test
lods
sti
dec
add
add
sbb
cmp
cmp
cmpsl
in
mov
mov
out
test
dec
int3
or
jp
sti
cmp
sar
mov
dec
jo
xor
mov
adc
or
lret
test
xchg
xchg
jecxz
mov
cmp
sub
fstps
notl
cwtl
jmp
and
movsl
das
insb
push
hlt
push
jnp
mov
adc
sbb
cli
pusha
imul
ret
ficompl
push
sub
and
xchg
adcb
add
mov
rol
fcmovb
xchg
sbb
cmpsl
imul
scas
aam
xchg
push
jg
pop
adc
fdivl
repnz
aaa
leave
loopne
movsl
hlt
call
cmp
or
inc
adc
aaa
std
nop
dec
or
aas
roll
xchg
dec
ret
int3
lds
push
fidivs
lds
mov
es
mov
xchg
add
and
leave
sarl
or
movsb
xchg
incl
push
push
int3
mov
jge
fldenv
daa
stos
aad
cmp
gs
jl
or
jle
or
cmp
mov
lods
pop
push
ficoms
xor
push
lcall
cmpsb
push
icebp
pop
in
jp
cmp
imull
push
cmp
loope
out
sub
repnz
push
and
xchg
cmpsl
sbb
xor
cmp
mov
mov
aad
mov
add
lret
xor
sbb
pop
fistpl
pop
xchg
mov
lcall
push
fsubrl
dec
jae
jg
outsb
or
xlat
rcl
pushf
sti
jg
ret
add
pop
mov
pusha
mov
dec
popa
and
stos
push
xlat
push
ds
mov
sub
les
int3
clc
push
rcl
ja
mov
pop
mov
test
mov
leave
fsubrl
imul
pop
sub
push
fs
ss
xor
fsub
dec
jle
mov
rcr
mov
cmp
iret
pop
or
outsb
lock
add
pop
mov
and
rep
jae
jne
fistl
cmpb
push
out
mov
sub
int3
push
cmpsb
sub
adc
sbb
add
xor
cmp
mov
loopne
aas
push
dec
das
clc
sahf
inc
mov
shlb
xchg
in
repz
xchg
sarl
scas
cmp
lods
xchg
sbb
mov
sbbl
lds
xchg
mov
nop
sub
or
jb
push
jge
sbb
mov
mov
adc
xor
loopne
sbb
std
iret
les
sub
sbbl
fcmovnu
and
xlat
inc
mov
ds
xor
popf
das
xorl
gs
dec
and
loopne
shll
frstor
mov
push
cmpsl
stos
cmp
in
icebp
pop
xor
push
ljmp
mov
push
inc
mov
sbb
lock
stos
mov
xor
rolb
stos
sub
sub
jg
jns
jl
loopne
and
add
dec
cmc
jb
xchg
cld
inc
xor
pop
int
popa
mull
jecxz
sub
bound
jg
or
out
dec
add
mov
cltd
in
push
test
mov
xchg
ret
fucomp
sbb
clc
dec
push
mov
sarb
dec
sbb
in
jb
cli
addr16
pop
add
jbe
xchg
out
ds
sahf
push
ret
mov
xchg
xor
mov
mov
fmuls
rorb
movsl
test
hlt
mov
sub
and
xchg
xor
stc
push
or
or
fwait
xchg
xchg
push
dec
mov
add
sbb
mov
jns
shlb
xchg
imul
cmpb
jae
or
in
bound
insl
or
loopne
pop
fiaddl
dec
push
jl
jne
dec
inc
mov
jbe
fistps
adc
xchg
fsubl
cmp
addl
out
pushf
sub
aam
cld
push
insb
cmp
and
fstpl
enter
jl
dec
push
push
in
inc
fisubs
xor
iret
fidivrs
in
pop
xchg
mov
cwtl
jae
cld
gs
mov
cli
popf
fdivs
sarl
push
cmpsl
and
jp
xchg
dec
push
fildll
jle
scas
aaa
inc
dec
push
pand
lcall
repnz
xchg
hlt
xor
inc
inc
cmp
or
mov
mov
out
sub
int3
mov
lea
gs
ficoms
push
mov
int3
or
rolb
scas
jb
pop
and
js
movsb
and
dec
push
pop
fiadds
xor
cli
jge
push
fcomps
cmc
into
daa
stos
push
xchg
cmp
or
jl
movsl
testb
lea
in
mov
into
jo
and
lahf
inc
sub
push
mov
test
gs
movl
xor
in
popa
or
loopne
sbb
sub
iret
shl
add
lods
cmp
jmp
mov
add
and
call
rclb
in
push
xor
and
pop
add
dec
js
add
pop
lcall
out
lahf
pop
sub
inc
outsb
jo
jne
cmp
shlb
cmp
leave
mov
stc
mov
js
and
ret
ficompl
add
jp
call
lret
jp
insl
jg
mov
push
sbb
into
fdivrs
subb
and
repnz
xor
into
dec
stos
fs
insl
mov
movsb
into
out
out
fcomps
out
sub
add
push
daa
or
ret
movsb
nop
xor
jp
ljmp
mov
mov
push
or
xlat
or
push
sub
test
pusha
pop
sti
dec
sub
pop
or
gs
dec
and
shll
dec
mov
int
adc
les
or
xchg
xchg
mov
fwait
std
mov
pop
aam
fists
sbb
mov
in
cs
ss
pop
push
or
jbe
jb,pn
jp
dec
xchg
jno
je
and
mov
cli
fsubr
js
mov
leave
les
rep
decl
xor
or
mov
inc
adc
nop
inc
dec
movsb
stos
das
bound
sarb
push
xorl
std
js
cmp
ljmp
mov
out
imul
mov
ljmp
stos
pop
and
rcrb
xchg
dec
addr16
aam
or
or
mov
arpl
insl
push
xchg
xchg
dec
lock
add
ljmp
xchg
aad
mov
mov
sbb
fildl
repnz
adc
cmpl
adc
pop
aaa
xchg
cmpsb
sbb
adc
pop
lods
sbb
out
mov
mov
xchg
cmp
lret
xchg
and
or
dec
mov
fistl
sub
or
mov
sub
dec
cmpsb
lahf
xor
mov
sub
fwait
mov
and
repnz
mov
mov
bound
mov
stos
insl
into
in
pop
jb
mov
or
inc
push
ret
pop
jns
aad
or
je
inc
dec
cs
lret
aas
jp
mov
lods
xchg
xchg
cmp
xchg
xchg
scas
mov
test
jmp
fisubrl
iret
lret
fs
stos
pop
cmp
hlt
mov
insb
sbb
jle
mov
pop
pusha
mov
inc
mov
pop
leave
or
inc
movsb
pop
jae
stos
inc
push
jbe
mov
mov
rorl
fisubrl
aas
pop
sbb
enter
mov
cmpsl
push
or
mov
aaa
repnz
mov
into
iret
hlt
jle
and
or
inc
cmp
adc
ss
or
jne
add
in
popa
pop
mov
insl
lds
inc
rcrb
push
int
and
mov
movsb
lods
subb
jbe
jge,pt
mov
sbb
pop
daa
test
push
in
jno
rcrb
adc
dec
das
mov
iret
xor
dec
jo,pt
mov
sub
sub
test
xor
lahf
inc
rcrl
in
dec
xchg
add
in
and
pop
mov
mov
sbb
fidivrs
mov
idivl
xlat
jg
movsl
or
pop
and
xor
sti
fsubp
sbb
fs
inc
lock
sub
in
daa
pop
filds
xchg
xchg
mov
push
jge
rcr
add
dec
outsb
rcrl
adc
mov
mov
mov
dec
mov
mov
cld
or
push
frstor
int
adc
cmc
testl
mov
jbe
add
into
sbb
test
mov
test
add
stc
test
pcmpgtb
push
fs
dec
cmp
push
leave
cmp
mov
les
mov
jl
aas
ds
or
fcoml
into
cmpsl
xchg
mov
and
xor
hlt
js
leave
dec
adc
fwait
inc
adc
adc
add
add
gs
sbb
dec
jae
xlat
dec
mov
js
jg
adc
sti
sti
in
jg
sti
gs
loopne
movsb
testl
push
fcompp
in
mov
repz
fisubl
sbb
js
nop
lock
xchg
adc
inc
pushf
dec
shrl
mov
cmpsl
add
xor
push
loop
add
adc
adc
dec
or
xorb
jecxz
enter
cmc
out
mov
repz
mov
repnz
mov
push
xor
ja
cmp
pop
or
pop
inc
xchg
ret
push
outsb
das
inc
adcb
xchg
mov
rcrl
lods
and
mov
rcll
cmp
std
pop
js
cwtl
movsl
inc
xcrypt-ofb
cmpsl
test
push
mov
cld
test
add
mov
jae
mov
loopne
lock
dec
mov
sub
mov
ret
lcall
insl
cmp
inc
dec
jmp
movsb
xchg
jp
push
ljmp
inc
lods
xchg
test
sbb
nop
push
orl
add
cmc
stc
test
adc
in
dec
fnstsw
add
mov
sbb
jns
push
test
insb
out
add
adcb
loop
fcompl
adc
push
outsl
mov
or
adc
sbb
cmp
fimuls
aad
xor
push
dec
cltd
pop
xchg
inc
push
enter
and
in
inc
push
xchg
sti
popa
add
push
mov
out
sbb
iret
jp
jns
scas
pop
in
bnd
pop
loop
mov
push
push
mov
xor
mov
or
sub
dec
mov
mov
mov
cmp
dec
sbb
mov
jge
fistps
bound
pop
inc
pop
xchg
call
out
jae
cmpsb
and
sub
lret
push
ljmp
and
hlt
mov
pop
jnp
int3
or
pop
cmc
in
jge
pusha
cmp
movsl
iret
pushf
lret
imul
xor
dec
jae
fwait
pop
push
cmp
mov
mov
push
hlt
cmp
xchg
push
enter
push
std
imul
add
push
bound
push
push
bound
test
add
leave
in
arpl
in
inc
aas
cltd
and
fwait
xlat
mov
aaa
cmp
or
movsb
and
xchg
pop
rorl
ficomps
push
vcvttps2dq
scas
xor
pop
cmp
test
movsb
cmp
push
sti
into
push
jbe
dec
jne
repz
aaa
sbb
push
push
daa
test
jns
aas
dec
sub
aas
jl,pt
push
xor
lret
mov
out
xor
mov
lahf
subb
push
push
sbbb
sti
mov
cmpsb
cmpsl
push
mov
enter
pop
lcall
loope
xchg
xchg
sub
je
pop
ret
cli
pop
sahf
movsl
adc
and
daa
jp
aam
roll
out
pop
fildl
lods
xor
or
js
inc
leave
pop
adc
test
insl
sbb
push
aam
jg
sub
ljmp
jg
adc
data16
fstpt
inc
mov
stc
xchg
sbb
jl
shll
mov
sbb
push
push
mov
jo
add
or
es
or
fwait
jb
mov
mov
std
mov
rolb
fidivs
jne
mov
aad
sbb
xor
cmp
mov
adc
sbb
sub
cmp
adc
out
lahf
xor
xor
mov
or
into
mov
cli
xor
aas
pop
call
cmpb
push
cs
adc
add
push
js
or
mov
int
mov
lds
inc
add
sti
stos
fs
gs
cmc
push
dec
dec
xchg
les
into
inc
fstps
mov
gs
out
ret
xchg
sbb
adc
adc
mov
inc
mov
pushf
testl
jno
ja
dec
nop
mov
fcmovbe
jb
fcompl
je
cmpsb
sbb
pop
aaa
push
mov
and
outsb
test
sbb
mov
repz
movsl
fldt
cmpsb
pop
scas
shr
inc
push
into
dec
inc
test
cltd
das
and
mov
mov
mov
jle
mov
push
std
sub
cwtl
pusha
test
cmpsl
cmpsl
mov
cmpsl
icebp
pushf
inc
stos
cld
aam
outsb
lret
in
addb
mov
lock
inc
rcrb
nop
dec
inc
rol
inc
mov
cmp
stc
aam
loope
ret
sub
sub
imul
sbb
mov
pop
popa
cmp
or
mov
mov
mov
mov
add
push
add
aas
fs
mov
enter
test
push
imul
frstor
out
pushl
testl
jmp
pop
add
xchg
stos
inc
sub
xchg
imul
xchg
xor
in
xor
push
loopne
add
mov
loope
xor
mov
test
pop
daa
ja
test
dec
mov
mov
in
or
jmp
fwait
adc
jecxz
cmp
push
add
out
negl
bound
jp
sbb
fists
lret
adc
lods
pop
out
imul
pop
mov
jp
repnz
mov
test
aad
cmp
mov
push
push
fbstp
xchg
xchg
push
xchg
xchg
mov
repnz
iret
out
loope
sub
push
sub
aas
stos
xor
and
push
sub
out
jnp
scas
cmpsb
jle
in
mov
cmp
mov
ret
hlt
pop
aaa
fwait
inc
inc
mov
rol
push
cld
add
adc
iret
pusha
mov
xchg
jne
push
imul
shrl
and
mov
xlat
xchg
adc
hlt
adc
shll
call
ja
add
push
stc
jmp
or
or
int3
jno
push
add
fiadds
sbb
xchg
inc
cld
scas
xcrypt-ctr
cmpsl
sbb
adc
out
dec
movsb
ret
push
nop
push
dec
lods
inc
jbe
daa
into
jge
sbb
sbb
mov
cmp
xchg
jno
shlb
dec
movsl
sub
push
xchg
sub
xor
push
fisubl
push
sub
sbb
dec
test
icebp
lea
in
push
dec
add
jecxz
dec
pop
fnop
int
out
int
loope
mov
and
push
aad
ds
jb
and
cmp
push
and
dec
loopne
fdivrl
call
pop
ja
dec
js
les
lcall
mov
and
inc
dec
sbb
lret
enter
xchg
cmp
repz
mov
fs
jmp
enter
add
and
sbb
cwtl
test
inc
cmp
push
loop
stos
adc
repz
fs
dec
inc
adc
or
insl
popa
out
cmp
int3
xchg
cmp
xchg
stc
xor
lahf
cmp
cld
pop
or
mov
into
insl
xchg
cmc
sbb
lods
pop
pop
sbb
adc
cltd
push
imul
xchg
xor
int3
daa
lods
lock
lahf
mov
push
xlat
enter
in
pop
and
mov
and
pop
test
inc
push
add
int3
push
loopne
pop
xchg
dec
stos
and
push
ret
jl
push
movsl
les
inc
cmp
loope
mov
dec
sub
mov
pop
in
aad
adc
fadds
jmp
nop
gs
aad
cmpsb
inc
nop
cwtl
jge
aas
push
mov
out
clc
dec
and
mov
outsb
jmp
mov
test
mov
clc
call
fsubrs
enter
adc
cmpsb
imul
jle
pop
push
pushf
sbb
movsl
cmp
fldt
lcall
mov
inc
cmp
and
fisttps
negb
lds
sbb
cmpsl
cmpsb
and
or
jae
pop
cld
decl
pop
shrl
out
aaa
mov
mov
push
cmpsb
rclb
inc
int
stos
int3
jb
mov
add
insl
or
xchg
clc
push
mov
lods
insb
fdiv
mov
scas
sub
sahf
jl
mov
arpl
push
add
sbbb
sarb
mov
mov
push
cs
or
cmp
xchg
xchg
pusha
dec
sbb
mov
rcll
cltd
pop
lods
inc
les
lret
xchg
mov
pop
push
das
je
lcall
cs
xor
push
test
idivb
cmp
mov
xchg
in
dec
out
imul
sub
cmp
daa
sub
ret
fwait
inc
pop
hlt
push
fistl
add
xchg
mov
dec
push
cmc
push
movsl
jns
sbb
xchg
movsl
rcl
push
dec
in
aaa
pop
cmp
out
addr16
push
popa
jp
pop
ret
in
mov
sbb
gs
fistpll
jne
iret
insl
mov
shll
xchg
and
xchg
sub
outsl
xchg
jle
lea
lods
adc
sub
shlb
push
push
shlb
cmp
fwait
insb
addr16
out
jnp
push
adc
jb
in
inc
hlt
pusha
jb
nop
iret
pop
jmp
ret
test
fsubs
inc
lds
mov
push
mov
adc
hlt
pop
inc
dec
push
push
fiaddl
sahf
xchg
int3
inc
mov
imul
pop
scas
ret
mov
jno
push
in
int
and
push
repnz
and
pop
push
arpl
ds
inc
inc
test
lds
xor
mov
or
add
pop
das
inc
dec
fisubs
cmp
lods
mov
add
cli
out
cmp
mov
xchg
jbe
jns
jge
daa
jae
jns
and
cmpsb
repnz
cmp
test
jl
dec
xchg
dec
adc
pop
push
js
push
push
int3
pop
jo
xchg
data16
mov
int
test
xchg
popa
cmp
insb
pop
cmpsb
lods
mov
enter
pop
sbb
sub
xor
fs
int
cmp
ljmp
cmp
xchg
push
filds
pop
andl
xor
xchg
push
pop
sahf
cwtl
repz
in
pop
push
cli
iret
lcall
call
sub
aaa
xchg
outsb
cld
sbb
adc
movsl
cld
jg
push
pop
mov
lods
inc
mov
jle
and
mov
int
int
sub
scas
testl
cmc
cmp
cld
icebp
sahf
lods
xor
ljmp
outsl
inc
pop
jmp
ds
sar
stos
fstl
fs
mov
int
loop
mov
mov
mov
in
out
pop
push
cli
shll
je
rcrb
or
in
push
outsb
lcall
imulb
es
punpckhwd
mov
adc
add
movb
mov
sbb
pop
jmp
sub
mov
in
sbb
scas
sti
or
pop
gs
adc
aas
shlb
or
mov
mov
lret
repz
loope
xchg
mov
outsb
adc
xchg
or
sbb
out
pushf
dec
pop
add
test
or
jne
xlat
aad
cld
int
jae
mov
repnz
jmp
push
movaps
je
jnp
jecxz
jecxz
mov
mov
sbb
inc
call
xchg
mov
dec
or
fcmovnb
ds
cmc
pop
loopne
sub
pop
inc
mov
push
ljmp
cmp
ret
cli
mulb
sbb
cwtl
ret
lcall
xchg
or
dec
lods
sar
push
cmp
lret
lds
imul
xchg
lock
mov
rcl
rcr
es
mov
ret
inc
xchg
pop
outsl
iret
push
insl
icebp
daa
dec
fsubl
xchg
aaa
cld
push
ljmp
lods
xlat
xor
xchg
and
mov
movsl
pushf
mov
ret
add
cmc
and
lods
ss
arpl
push
icebp
ds
mov
xlat
clc
jne
inc
xchg
jge
lods
stos
and
lods
sbb
push
pop
stos
and
jnp
sub
and
push
or
iret
mov
xchg
mov
insl
xor
int
and
out
lret
sub
ja
sub
dec
jb
fldl
lea
lods
sti
pusha
fwait
jb
gs
jle
sbb
mov
inc
lods
bound
dec
sub
push
stos
push
xchg
hlt
xchg
pop
mov
repnz
mov
gs
or
jp
repnz
mov
mov
mov
xchg
dec
ret
jne
test
neg
mov
out
sti
pop
fs
dec
or
cwtl
adc
das
mov
movsb
or
adc
pop
and
dec
insb
rclb
jnp
mov
repz
cmp
pusha
or
subl
inc
shlb
jge
cmpb
popf
fwait
add
inc
int
xchg
add
xchg
and
xchg
sbb
xlat
lods
imul
lret
std
push
push
sub
imul
shll
jge
loope
stos
test
arpl
fistps
and
xorb
mov
or
inc
mov
inc
xchg
xor
push
cmpsl
lds
mov
enter
int
outsl
and
mov
es
call
cmpsl
jge
adc
fs
movsl
mov
cmp
jns
jno
pop
jl
or
dec
xorl
push
pop
hlt
shll
les
lahf
mov
rorl
aaa
inc
push
pop
lret
jg
push
in
in
mov
fsin
movsb
pop
push
testl
sub
cmp
arpl
les
aam
aad
icebp
addr16
addb
sbb
test
xor
or
pop
lds
js
jge
pop
iret
into
lcall
sbb
test
and
adc
notl
cmp
repnz
decb
pop
push
xchg
and
xor
push
jmp
jle
sub
add
sub
shll
mov
and
sbb
sub
jno
pop
subb
adc
lcall
stc
popa
pop
shll
xchg
adc
push
ss
cmp
inc
mov
out
add
fdivs
or
or
or
or
dec
and
stos
cld
pop
xor
aaa
pop
inc
mov
jge
aas
inc
in
scas
adc
add
adc
sbb
lods
mov
jecxz
xlat
inc
popa
jnp
sarb
jae
xchg
popa
sti
mov
decb
inc
xor
mov
ja
imul
fld
addr16
lcall
arpl
sbb
ret
mov
pop
push
sbb
iret
rol
clc
xchg
jmp
sub
cs
das
aad
mov
nop
dec
push
js
xchg
inc
mov
cmpsl
jbe
dec
out
or
jecxz
pop
faddp
leave
lds
and
call
push
jne
mov
dec
mov
fcomi
ret
cwtl
or
mov
cmp
daa
fs
mov
call
imul
sub
mulb
mov
ja
movsb
stos
sbb
and
in
lret
cmp
in
jge
add
jno
xchg
pop
in
je
sarb
iret
pop
sub
sahf
push
ret
pop
cmp
repnz
mov
subb
adc
andl
inc
mov
lods
and
and
js
push
sahf
movsb
cltd
mov
mov
push
mov
fstp
outsb
ret
inc
mov
int3
or
pusha
push
roll
sub
adc
nop
xor
jo
in
dec
lcall
data16
push
xor
sbb
xchg
or
push
icebp
add
xor
inc
lods
push
dec
or
inc
adc
and
add
add
cmp
bound
add
cmp
in
xchg
inc
scas
out
mov
push
pushf
mov
and
push
jp
xchg
enter
push
mov
divb
cmp
mov
jp
shl
into
mov
sti
xchg
adc
movl
xor
fimuls
mov
push
push
out
jp
mov
dec
and
mov
cmp
jmp
jle
pop
fxam
dec
cltd
outsl
pusha
test
pop
iret
sbb
ret
fwait
pop
fdivrl
out
jae
or
inc
mov
popf
ret
mov
dec
mov
ficoms
dec
insl
xor
insl
repz
mov
mov
adc
repnz
leave
and
arpl
gs
dec
mov
or
popf
dec
js
ficoml
add
dec
mov
lea
fsubrp
mov
stos
shl
push
scas
lods
mov
and
les
loopne
jbe
ja
jge
call
leave
daa
movsb
add
or
jno
pop
popa
jl
lcall
ds
xchg
xor
pop
inc
outsb
lahf
cld
pop
or
jmp
or
in
sahf
cmc
or
lret
xchg
enter
pop
xchg
push
mov
loope
adc
mov
sbb
stos
movsl
das
call
adc
pop
es
lret
add
sahf
int
dec
cmpsb
pop
adc
shlb
dec
mov
pop
or
push
lcall
mov
sub
jns
outsb
ret
adc
rcrb
or
lahf
add
mov
js
and
loope
push
in
std
call
sub
testl
or
mov
data16
clc
mov
orb
outsl
add
and
fs
stc
sbb
add
imul
ss
cmp
std
mov
dec
cli
aaa
in
xor
outsl
aam
push
shrb
or
mov
xchg
cmc
jb
stc
xor
mov
pop
fs
adc
mov
jp
dec
add
icebp
adc
lock
lods
movsl
shrb
mov
xor
test
sub
bound
repnz
sti
or
sub
loopne
jns
enter
aas
xlat
idivl
xchg
loopne
psllq
sahf
sbb
std
mov
or
pop
push
leave
test
es
pushf
mov
and
cmp
ss
rolb
sub
aas
xor
aas
dec
pop
out
cmp
scas
jecxz
lahf
loopne
int3
sub
pop
popl
adc
sub
cmpl
sub
pop
cmp
outsb
inc
icebp
dec
or
pushf
dec
and
xor
and
rcr
dec
jb
out
jmp
cwtl
dec
push
push
cmpsl
mov
das
or
clc
cmpsb
push
cld
xorb
test
insb
sub
int3
jge
pop
or
inc
rorb
dec
sub
adc
or
loope
bound
insl
mov
xor
xchg
mov
shr
subl
push
mov
pop
mov
lods
mov
adcb
add
cltd
gs
jnp
ret
push
mov
mov
push
ja
rcr
ljmp
clc
jmp
xchg
xchg
xchg
adc
adc
stos
jmp
push
out
repz
or
test
mov
in
push
in
out
mov
or
xchg
xor
imul
in
int3
jo
and
mov
cltd
idivb
gs
mov
inc
les
or
pop
adc
les
add
fmul
cmp
bound
lea
sub
dec
xchg
xchg
or
mov
sahf
mov
pop
fcmovne
cmp
jp
in
mov
sarb
gs
dec
mov
je
push
mov
mov
insb
popa
fcomip
xchg
or
jmp
fildll
push
out
movsb
sub
mov
adcl
pop
stos
jns
and
aaa
insb
test
imul
lea
mov
shll
mov
iret
ja
xchg
ret
sbbl
subb
push
in
push
or
popf
jmp
xor
inc
lret
cmp
xchg
rorl
sub
inc
lret
pop
jmp
adc
and
repnz
xchg
leave
cwtl
cmp
hlt
inc
popf
shll
fldlg2
inc
dec
cmpsl
decl
sbb
jmp
or
jo
dec
or
cmp
clc
cmp
lds
adc
incb
lea
mov
mov
ret
movsb
out
jmp
push
xchg
xchg
and
dec
sbb
int
cmp
fdivl
jnp
jl
incl
push
and
pop
jo
cmp
lahf
sbb
es
jbe
add
repnz
pop
inc
sub
movsl
stos
in
mov
movsl
enter
pop
aad
push
mov
shrb
or
movsb
ds
xorb
scas
mov
sbb
or
add
or
xor
std
fcmovnbe
fmuls
pop
adc
js
test
pop
mov
push
lcall
mov
adcl
sub
aas
stos
outsb
and
sub
shrb
lgs
push
adc
imul
aam
push
out
js
int
lea
test
push
jbe
mov
mov
push
lret
sbb
shr
xchg
in
roll
sub
loop
imul
fs
adc
shlb
cmp
mov
frstor
cli
push
jecxz
mov
imul
into
stc
fstpl
cmc
cmp
xor
lods
fwait
pop
andl
add
imul
in
cmp
lods
mov
xor
fnstcw
sub
sub
jmp
push
push
push
gs
inc
cld
loopne
mov
dec
daa
mov
fldcw
mov
push
imul
jmp
inc
jo
cmp
ret
pop
mov
cmp
jmp
fsubs
sahf
sub
aad
push
adc
iret
in
jl
dec
loope
dec
aam
enter
movsl
jecxz
arpl
iret
add
lea
and
aad
mov
into
sub
adc
push
dec
adc
mov
inc
shl
inc
or
mov
jnp
int
jl
enter
lret
and
sbb
cmpsb
imulb
scas
std
or
mov
cmpsl
mov
or
icebp
iret
fstps
stos
inc
pop
lret
sbb
mov
lods
lgs
xchg
cmp
daa
jle
pop
sub
test
or
jno
hlt
scas
dec
es
out
insl
cmpsb
xchg
xchg
hlt
int
ljmp
xchg
bound
shl
and
push
insb
lcall
mov
cltd
pushf
xor
mov
add
frstor
push
scas
clc
es
xchg
cmp
mov
shll
jno
stos
out
int3
cltd
out
push
cmpb
int3
inc
movsb
push
fwait
xchg
xchg
jl
xor
mov
sar
inc
xor
adc
mov
lock
dec
mov
xor
dec
dec
xchg
ficoml
sbb
addr16
add
repz
adc
bound
popf
jns
cmpsb
out
mov
xchg
loope
or
rorl
pop
xchg
cltd
bound
mov
test
pop
mov
cld
test
jne
dec
imul
mov
jno
fists
jb
xchg
je
mov
xchg
stos
jnp
cmpl
adc
add
or
push
fs
jno
clc
and
xor
jle
nop
pop
jg
pusha
fdivp
ror
pop
repz
pop
dec
xor
push
jae
fiaddl
push
lret
jnp
popf
adc
inc
mov
dec
cmp
adc
inc
xchg
sub
pop
sbb
adc
imul
ds
dec
jbe
push
mov
mov
jbe
add
js
aas
arpl
aas
xor
cmp
add
mov
aaa
mov
push
or
mov
int3
or
insl
pop
jmp
rcr
das
repz
lds
cmp
sbb
scas
push
pop
and
push
cmp
cmp
add
jbe
inc
pop
jge
cmp
inc
ret
push
xchg
cmp
add
rcl
inc
aaa
loope
sarb
add
out
xor
aad
pop
lahf
cmp
fs
mov
mov
in
cltd
and
enter
pop
adc
mov
cs
loope
scas
in
dec
lret
xlat
cmp
movsb
ds
jp
movsl
cmp
adc
push
jnp
orb
cmp
xchg
xor
xchg
jp
fwait
sbb
cmp
mov
or
lcall
sub
cs
jl
mov
adc
mov
jle
out
das
mov
dec
sbb
ds
and
mov
repnz
mov
je
testl
lods
in
jecxz
push
sbb
loope
sahf
cmp
push
addb
mov
stc
xchg
xor
or
xchg
ss
xchg
and
jae
push
out
cvtps2pd
popf
repz
xchg
out
cmp
xchg
or
pop
into
fcoml
xor
mov
pop
and
adc
add
add
sub
ljmp
mov
xlat
add
lret
or
inc
in
enter
les
je
je
pop
pop
or
stos
jl
dec
xchg
xchg
inc
gs
inc
fldenv
or
mul
pop
repz
insl
xchg
lods
inc
lret
sbb
jae
inc
or
insb
adc
stos
push
pushf
stc
add
add
aad
cmp
nop
fildll
pop
jb
in
dec
dec
lea
je
adc
jecxz
imul
mov
mov
xchg
inc
dec
mov
xor
stos
loop
dec
fidivrs
fildl
fcomps
dec
inc
aam
daa
int
das
pop
push
ret
or
mov
sarb
jl
jle
insb
ret
mov
lods
cwtl
ret
cmpsl
mov
cwtl
and
cmpsb
xor
cld
loop
lret
xchg
mov
loope
mov
call
mov
dec
rcrb
xor
add
aam
dec
mov
cmpl
es
subb
pop
dec
enter
xor
ljmp
lcall
stos
sub
roll
repnz
push
pop
add
mov
jmp
test
out
sti
mov
mov
aam
dec
push
xchg
clc
popa
nop
je
dec
ljmp
or
pop
pop
add
sahf
stos
fnstsw
mov
mov
ret
jbe
mov
xor
popf
nop
or
movsb
xor
or
xchg
stos
movsb
dec
repnz
leave
test
mov
xor
das
addb
xor
or
fwait
cmp
add
push
fcmovnu
out
xor
aam
fidivrs
arpl
in
mov
xor
lock
push
clc
iret
add
mov
dec
mov
pop
adc
mov
jl
dec
insl
movsb
jne
cld
scas
mov
mov
fbstp
push
mov
pop
data16
jne
cli
addl
out
loop
sub
cmpsl
fwait
sub
push
ja
in
sbb
lods
xchg
fs
jle
test
or
jle
pop
frstpm(287
bound
or
iret
xor
ret
andl
xchg
push
mov
in
popf
aaa
mov
mov
leave
mov
aaa
xchg
jg
push
sbb
es
scas
mov
pop
push
inc
shll
mov
leave
cmp
hlt
gs
arpl
and
aas
and
push
enter
insb
push
or
dec
add
push
int3
repz
pop
sbb
jns
mov
stos
scas
dec
xchg
repz
sbb
xor
add
ja
jbe
jge
mov
mov
mov
loop
jno
sub
aas
jae
push
out
out
ss
jo
fs
push
sbb
mov
jge
mov
inc
dec
rol
cmp
shr
or
enter
pop
push
je
push
jg
shll
ja
sub
ds
add
movsl
inc
loop
and
lret
insl
in
dec
adcb
sub
xor
pop
mov
popa
fsubrs
fst
pop
mov
lcall
jbe
fxch
push
sub
sbb
adc
arpl
imul
mov
std
and
scas
push
cmc
lret
and
imul
inc
push
fmulp
mov
ret
sarl
sbb
push
sahf
fildl
mov
outsl
mov
adc
or
lds
inc
mov
into
dec
aas
fsubrs
out
rorb
cltd
xor
mov
or
test
mov
pop
push
pop
shll
adc
jb
imul
push
mov
mov
data16
jae
pop
lcall
bound
sub
mov
cmp
jae
xlat
xchg
cwtl
push
gs
jno
inc
pop
or
xlat
lock
js
inc
fstps
pop
repz
lcall
dec
or
scas
and
mov
pop
pop
adc
pushf
movsb
jle
jmp
xchg
and
fs
cmp
push
hlt
mov
or
sbb
dec
ret
je
dec
xchg
jecxz
mov
aad
jae
pop
js
call
push
cmp
addl
add
mov
pop
pop
and
roll
in
inc
sub
das
cmp
mov
mov
aam
dec
xor
ror
dec
jmp
scas
xchg
ljmp
subb
cmp
stos
xor
add
lret
notb
mov
or
lock
inc
rolb
inc
xor
insl
xor
adc
decb
xor
les
ljmp
les
mov
mov
enter
lea
lea
popf
dec
aaa
cltd
or
test
scas
cs
mov
push
fnsave
clc
pushf
ror
xchg
xchg
scas
sbb
xchg
shll
sahf
pop
scas
xchg
stos
int3
push
out
sbb
mov
push
push
or
xor
loope
or
mov
xor
push
pop
mov
test
dec
pop
inc
mov
or
ja
jp
dec
xor
jno
inc
mov
sbb
lods
inc
jns
push
test
add
jg
out
adc
movl
push
pop
xchg
jg
test
mov
or
xor
jp
push
divb
lods
movl
jne
lret
enter
mov
push
xor
jmp
inc
pop
popl
mov
add
or
mov
ret
hlt
in
insb
jmp
dec
push
jle
xchg
in
in
cmc
pusha
adc
sub
xchg
lods
sub
add
out
pop
les
jno
cwtl
push
push
cmp
mov
inc
dec
enter
mov
outsl
sbb
or
scas
adc
dec
push
adc
lahf
jb
fdivrl
repnz
jecxz
std
adc
arpl
mov
push
mov
pop
push
xor
movsl
add
leave
jle
fidivrs
pop
dec
popl
adc
je
dec
add
and
cmp
add
iret
push
jae
add
shl
sarb
dec
sbb
fimuls
xlat
jle
jno
mov
jl
and
dec
scas
sub
cli
xor
mov
mov
test
push
ret
fidivl
xchg
cmpsb
mov
push
sbb
rclb
xchg
fisttpll
loope
fsts
cmp
movl
test
and
push
std
int3
sbb
andb
xchg
add
dec
and
test
out
pop
mov
add
cmp
pop
or
std
push
mov
faddl
in
outsb
dec
fimull
cmp
sarb
jbe
jg
out
push
mov
xlat
int
jnp
and
and
push
clc
mov
dec
sub
inc
testl
pushf
test
push
fistpll
jne
fcompl
adc
movsb
xorb
dec
loop
pop
xchg
stc
hlt
jno
fs
fisttpl
adc
jmp
mov
out
mov
xor
out
lods
cmp
sub
or
rol
into
mov
sbb
xor
pop
loopne
outsb
adc
ja
adc
scas
adc
repnz
push
js
data16
pushf
lods
inc
cmp
pop
xor
sub
jb
mov
sahf
movsb
loop
and
pushf
mov
icebp
fwait
loopne
dec
scas
dec
inc
test
add
les
scas
repz
xchg
xor
sbb
jmp
push
inc
pop
rorb
out
dec
into
cmp
pop
cwtl
jnp
dec
fcmovbe
scas
das
add
xchg
dec
jne
lods
mov
inc
xchg
dec
cmp
jecxz
inc
inc
fadds
lea
adc
mov
fldenv
xor
loopne
fwait
pop
iret
fiaddl
cmp
inc
pop
lahf
out
das
sbb
mov
inc
enter
cmp
fdiv
repnz
std
loope
cwtl
cmp
cmpsl
lahf
or
mov
push
dec
sub
loope
gs
inc
mov
mov
pop
pop
mov
fcom
pop
and
aam
push
sub
adcl
push
dec
mov
inc
or
dec
pop
xlat
popa
hlt
fidivl
pop
movsb
dec
mov
mov
nop
pop
mov
cld
scas
incb
mov
out
cltd
inc
ja
test
ret
insb
add
push
sbbl
clc
xlat
movsb
pop
xchg
push
sbb
sub
pop
pop
add
mov
xchg
xor
mov
call
mov
or
mov
xor
clc
stos
mov
stc
pop
out
rcrb
test
lods
ja
push
xchg
dec
and
rolb
loop
or
or
fwait
mov
mov
fsubrs
add
out
out
pop
fldenv
cmp
pop
cmc
enter
mov
mov
jno
ljmp
cmp
sbb
xchg
inc
outsb
mov
push
mov
jne
mov
fildll
xlat
xchg
in
int3
aam
or
jecxz
andl
out
sub
cld
or
and
lret
and
jbe
insb
push
addl
in
inc
jle
scas
sub
pop
loope
adc
sbbb
bound
loop
inc
adc
push
adc
jp
test
push
mov
xor
sub
loop
movsl
lds
xchg
inc
scas
scas
js
and
sub
adc
add
mov
outsl
adc
insb
jle
arpl
into
inc
pop
cmpsl
jle
cmp
jo
add
sub
icebp
popa
or
inc
mov
add
pop
push
pop
js
sbb
out
lds
add
pop
scas
and
jmp
cmp
ret
ret
jbe
in
jge
popa
lret
sbb
sub
cmp
iret
or
jl
xlat
xor
lods
cmp
lods
xor
les
and
ret
test
push
and
cmpsb
inc
fists
dec
mov
mov
push
mov
cvttps2pi
cli
les
xor
sarb
jbe
and
sub
cmpb
mov
jne
mov
push
add
inc
push
pop
scas
cli
and
xchg
pop
xchg
push
jecxz
dec
fsubrl
aad
sub
iret
test
rcrb
pop
popa
jg
xchg
fnstenv
repnz
mov
sub
and
in
aad
repz
pusha
sub
push
rclb
popf
xchg
shr
adc
fcompl
fwait
mov
adc
xchg
outsl
pop
and
stc
stos
enter
fs
idiv
out
test
or
out
mov
jns
push
test
lods
or
bswap
test
cmc
push
jge
xor
in
mov
xlat
scas
mov
adc
call
cs
lods
sub
cmp
xlat
sar
sub
xchg
in
or
into
sti
rcll
lret
hlt
sti
loopne
dec
mov
mov
mov
packsswb
pop
and
xchg
xchg
xchg
cmc
ds
cmp
jmp
test
add
nop
pushf
cli
icebp
add
push
pusha
mov
aad
inc
mov
aas
dec
js
jb
es
dec
mov
stos
je
mov
mov
in
cwtl
call
shlb
addl
mov
divps
aad
in
inc
js
test
mov
stc
inc
or
fwait
mov
imul
std
movsl
lcall
sahf
test
push
sub
xchg
lret
aam
ret
mov
ss
inc
inc
pop
cmpsl
das
ret
shrb
data16
sub
pusha
aam
repz
xor
pop
insl
inc
stos
call
xchg
lock
ljmp
push
lods
mov
pop
sbb
fisubs
ret
sbb
add
fadds
js
je
cli
sub
cmp
loop
ret
clc
adc
and
xchg
or
rorl
clc
sbbb
stos
stos
sbb
loop
out
xchg
call
fcomi
call
or
scas
incb
inc
out
push
mov
cld
pop
les
push
jo
add
dec
pop
pop
inc
inc
ss
ja
sbb
fwait
mov
cltd
pusha
add
pop
add
out
into
imul
xchg
in
daa
hlt
xchg
sbb
cmp
mov
orb
push
adc
mov
nop
and
dec
idivl
sbb
xchg
out
mov
dec
mov
mov
xchg
rcrb
xchg
add
out
add
sub
cwtl
shrl
push
pusha
repz
sbb
insb
mov
adc
jle
jmp
in
sti
mov
iret
push
push
out
ret
or
shlb
inc
sbb
stos
cmpsl
push
xlat
into
sbb
lods
xchg
aam
inc
cs
inc
gs
fcmovu
and
test
push
sbb
push
repz
push
sbb
adc
jp
mov
ret
leave
jmp
push
mov
dec
arpl
addr16
pop
or
mov
ja
aaa
mov
sbb
xor
pop
add
insb
int3
mov
fstps
sub
mov
push
ffree
test
xchg
xchg
fcoml
movsb
cmpsb
leave
das
push
adc
jbe
push
in
jge
mov
sbb
test
cmp
cmp
jl
pop
fimull
out
aaa
push
nop
cmp
xor
inc
aaa
negl
xchg
sbb
test
jmp
lock
xor
addl
push
sarb
push
xchg
aaa
sub
or
xor
dec
mov
and
out
or
cmpsb
sbb
in
add
push
add
and
push
pop
loope
js
cmp
pop
push
push
sbb
cmp
mov
ficoml
push
sub
mov
movsb
shl
pop
add
inc
lock
xor
imul
pop
and
stos
aaa
int
dec
in
sub
lret
jg
scas
lret
xor
andl
inc
sahf
les
xchg
sub
jl
ds
loop
test
mov
adc
leave
ss
ret
lret
pop
push
out
push
cli
imul
in
or
jne
into
push
inc
push
pop
push
pop
enter
shrl
sahf
addr16
xor
add
sub
push
jbe
lods
wrmsr
mov
or
sub
cmpsb
test
jl
jg
je
lods
sti
cmpb
add
add
pop
rorb
jmp
flds
pop
and
inc
xchg
mov
jg
cmp
mov
add
stos
ret
adc
fnstsw
jmp
jmp
lea
and
cmp
ds
aas
ljmp
dec
daa
jnp
je
in
shl
xor
fiadds
xchg
call
xor
mov
std
or
sbb
shrb
inc
fs
stos
das
mov
mov
mov
mov
dec
stos
sarl
mov
std
dec
aaa
leave
cwtl
scas
loope
cmpsl
popf
int3
test
add
aam
xorb
mov
pop
out
stos
jo
pop
not
fbld
fisubs
aam
rcll
mov
jae
insl
sub
fs
mov
dec
xchg
das
es
ljmp
pop
lods
das
mov
test
push
pop
add
in
bound
add
pop
dec
push
or
fucomp
sub
clc
dec
or
xchg
adc
inc
mov
add
mov
insb
stos
cltd
xchg
add
xchg
das
mov
cmp
out
or
aaa
mov
call
mov
mov
ja
fnstenv
or
and
leave
push
or
pop
xchg
xchg
mov
add
jp
dec
out
lods
sub
jns
mov
push
xchg
insb
rclb
mov
cmp
mov
jp
pushf
cld
mov
inc
cld
mov
mov
inc
jne
nop
fdivl
lods
lock
xchg
cmpsb
inc
jmp
mov
mov
out
dec
inc
sub
xchg
arpl
push
lahf
inc
inc
stos
mov
xor
or
mov
in
jnp
lcall
jle
movsl
pusha
in
ljmp
adc
inc
sub
mov
xchg
shll
inc
ficoml
jmp
sbb
mov
imul
scas
ds
rcll
dec
adc
jl
repnz
mov
hlt
add
arpl
outsb
inc
pusha
fistps
push
outsl
or
leave
xchg
add
enter
cwtl
lret
pop
or
pop
mov
cmp
mov
xlat
xchg
and
jnp
movsb
xor
pop
jbe
mov
xor
or
dec
daa
popf
outsl
fdivrs
jo
push
jno
xor
jl
mov
pop
push
jae
mov
jo
movsl
out
aad
xchg
mov
test
mov
mov
xor
in
sbb
mov
pop
dec
xor
loope
daa
jge
gs
jnp
pop
movsl
pusha
push
push
and
inc
sbb
sbb
add
test
xor
cltd
cmp
pop
std
lods
cmpsl
js
jle
pop
test
xchg
lcall
stos
faddl
std
cmpsb
outsb
ja
pop
adc
iret
insb
jae
add
test
loopne
movsb
mov
mov
adc
int
sbb
mov
popf
test
jbe
rcrl
mov
sbb
stc
pop
sahf
addr16
pop
addb
out
outsl
sbb
pop
fwait
stc
sbb
fs
enter
mov
cmp
sbb
out
lds
cli
pushf
gs
les
lds
aaa
in
js
dec
jns
cmc
jecxz
pop
xor
fstps
leave
cwtl
adc
loopne
negl
adc
shlb
lret
data16
lods
negb
mov
andl
mov
fsubl
fildll
mov
and
sbb
mov
stos
dec
popa
mov
data16
sub
sub
push
lods
xchg
jnp
or
lcall
pop
jmp
ret
adc
mov
jmp
cmp
aad
jbe
es
aas
mov
jb
add
dec
sahf
rcl
je
jne
jecxz
nop
add
lea
mov
lds
sahf
pop
xor
pop
fldt
push
pop
mov
sub
jmp
lds
jo
das
mov
mov
out
dec
sbb
ja
adc
push
sub
mov
mov
cwtl
imul
mov
fsin
push
cld
lods
jns
lret
mov
iret
mov
mov
pop
pop
lock
and
pop
in
fs
lea
aam
add
ret
dec
push
inc
or
insl
adc
gs
outsb
pop
push
ljmp
std
lods
lcall
mov
in
jmp
stc
jmp
and
jmp
jg
test
imull
mov
push
push
int3
stos
js
adc
clc
mov
adc
sarl
cmpsb
stos
mov
inc
out
test
mov
push
mov
push
xor
push
or
pusha
mov
add
ljmp
dec
adc
add
dec
std
add
or
inc
adc
sbb
add
xchg
xlat
and
mov
xchg
jns
scas
pusha
in
mov
mov
inc
std
mov
clc
jge
addr16
cmp
mov
dec
mov
push
bsf
inc
mov
das
dec
mov
out
out
mov
xor
loop
data16
jmp
insb
ds
adc
mov
lret
sub
mov
imul
aad
insb
xchg
inc
sarb
bnd
adc
in
xchg
hlt
pusha
adcb
iret
adc
ret
xchg
pop
xchg
js
inc
xor
jae
test
push
popf
cli
lcall
inc
adc
xchg
xor
sbb
ljmp
mov
and
adc
and
push
fdivs
dec
cltd
inc
arpl
or
jne
or
cs
or
bound
push
pop
int3
mov
lea
adc
add
lds
push
hlt
sarb
lds
mov
xchg
ret
fstl
clc
sbb
add
inc
cmp
push
into
jl
in
xchg
dec
push
mov
xor
mull
mov
push
cmp
test
jg
fiadds
mov
mov
enter
pop
mov
popa
loope
fimuls
rcrb
inc
ds
jmp
movsl
addr16
and
cmp
repnz
sbb
ds
xor
int3
dec
sub
pop
bnd
pop
cltd
pop
add
push
lcall
stos
fdivl
sbb
andb
outsb
fisubl
adc
stos
xchg
fs
movsb
mov
push
xchg
mov
and
xchg
sub
and
shrl
lahf
sbb
mov
sahf
or
popf
andb
fwait
outsl
cld
imul
shlb
adc
aas
mov
dec
or
aad
add
jnp
test
iret
inc
xor
leave
jecxz
cmpsb
sub
cs
stos
xor
cmp
sbb
out
ret
jbe
rol
inc
add
outsl
data16
push
lods
mov
jno
xlat
jge
ret
sub
stos
sub
in
dec
push
sti
ficomps
ja
inc
mov
mov
loopne
aam
dec
rcrb
xlat
cmpsl
in
scas
or
repz
mov
sbb
aad
movl
xchg
xor
fimuls
pushf
sti
push
mov
fisttpl
cs
lret
lret
int3
mov
sub
jb
cmp
dec
adc
push
jb
in
mov
xor
mov
sub
xor
adc
push
cs
xor
xchg
rcll
add
and
lods
mov
idiv
imul
cmpsl
fwait
sahf
push
mov
mov
inc
cld
fcoms
and
cmp
jl
push
lock
mov
pop
add
cli
shlb
aam
mov
fnsave
mull
lea
dec
stos
fwait
xchg
xchg
lods
sbb
sbb
popa
push
daa
and
jae
mov
jmp
push
mov
js
xchg
add
mov
cltd
sbb
pop
out
test
mov
fnsave
mov
ret
mov
adc
rcll
push
pusha
pop
push
pop
sub
or
xchg
mov
sub
out
lahf
shll
xchg
or
cmp
xor
sub
add
lahf
push
jno
mov
pop
lods
lea
loop
inc
sti
inc
out
jne
dec
push
ficomps
fadd
int3
add
mov
pxor
fldenv
adc
jns
inc
in
mov
xchg
or
jbe
fs
aam
sti
inc
daa
jp
into
inc
mov
mov
das
mov
mov
mov
mov
mov
xchg
cmp
jmp
aaa
pop
mov
out
xor
push
cs
push
sbb
jge
and
out
insb
add
cmp
ss
and
adc
pusha
sbb
in
iret
outsl
cmp
negb
rcrl
sbb
push
and
jne
repnz
popa
inc
ret
scas
sbb
add
sbb
hlt
in
push
xorl
in
mov
adc
leave
mov
mov
movsb
std
hlt
cwtl
lahf
inc
arpl
out
or
lock
or
in
jl
or
shr
int3
jne
rcrb
fimull
lds
mov
and
in
jp
repnz
inc
fdivs
rcrb
and
mov
outsb
fs
addb
cmp
pop
sub
xchg
lahf
jl
lock
dec
push
cmp
pusha
jo
mov
xor
je
test
dec
out
pop
inc
movsl
test
dec
pop
push
in
ljmp
pop
int
jg
push
mov
pop
mov
pop
cmp
xchg
shrl
movsl
outsb
xlat
and
pop
adc
cmpsl
sub
hlt
sbb
dec
imul
lock
pop
dec
out
cmpl
adcb
aas
jge
xlat
fwait
sub
leave
outsb
cmp
jl
rolb
pop
out
mov
mov
fidivs
cld
pop
push
pop
mov
fldt
scas
pop
jbe
mov
ss
inc
push
push
mov
in
sbb
push
sahf
lods
and
test
mov
fisttpl
xchg
stc
xchg
xchg
adc
fildll
cmp
nop
imull
cli
add
jb
in
cltd
add
or
dec
dec
cmc
jno
leave
xor
push
sahf
pop
jnp
xor
and
mov
popf
pop
movsl
add
pop
xchg
data16
jb
les
mov
repz
mov
mov
fsubrp
mov
sar
lea
gs
call
bound
push
leave
inc
ljmp
les
in
repz
pop
xchg
add
bound
adc
scas
movl
mov
addr16
daa
outsl
cs
icebp
aad
outsb
sti
nop
fdivrl
lock
movl
dec
mov
je
or
and
out
lret
mov
call
int3
aam
mov
cmp
or
sub
fcmovne
or
inc
stc
out
jmp
das
jae
dec
mov
aad
icebp
and
pop
or
movsl
jno
testb
std
inc
adc
lcall
icebp
xchg
std
lret
nop
jle
mov
add
mov
adc
bound
and
test
sub
push
push
aam
data16
insb
mov
pop
insl
fimuls
popf
dec
movsl
orb
mov
addr16
stc
lods
jo
pop
mov
push
in
and
das
or
xlat
into
pushf
add
arpl
es
mov
pop
nop
push
push
mov
data16
jne
xchg
push
add
shrl
pop
pop
mov
mov
out
outsb
lret
ds
add
ret
push
jae
out
decl
mov
inc
xor
or
mov
or
fimuls
sub
test
sub
ja
dec
jecxz
ds
xchg
xor
or
mov
ja
pop
push
jg
or
lret
sti
mov
mov
xchg
pop
dec
mov
or
pop
outsb
mov
fstpt
jbe
mov
ljmp
dec
adc
cmp
jne
fmuls
ss
cmpsb
fisttps
rcll
jmp
add
or
xor
rcl
call
or
les
dec
sbb
adc
iret
pop
jle
or
pusha
mov
or
into
ljmp
ret
std
pop
add
jp
dec
mov
popa
popf
dec
xor
mov
inc
iret
dec
fisubrl
add
imul
scas
addr16
fsts
dec
and
repnz
mov
leave
adc
hlt
jecxz
andb
jno
imul
mov
imul
lods
int
or
mov
add
and
dec
fiadds
loop
cmp
cmp
icebp
sbb
mov
cmp
mov
movsb
shrb
rcll
and
jbe
mov
fstps
cmp
ss
cmp
in
add
jl
enter
mov
aaa
xor
lods
push
and
test
adc
xchg
xor
rcr
lahf
in
sarl
pop
enter
pop
or
arpl
out
loope
mov
ja
icebp
jae
ds
mov
and
push
popl
jno
sbbb
mov
lock
filds
scas
cmpsl
xor
pusha
mov
xor
js
leave
cmp
add
lcall
ja
xchg
sub
sub
out
adc
pusha
pop
xchg
pop
mov
mov
ja
xchg
or
jecxz
or
push
int
in
sub
pusha
sbb
jnp
cmc
lret
fs
push
mov
mov
ret
xchg
test
sbbb
outsl
mov
mov
fs
test
add
pop
cmp
dec
lods
inc
out
das
ljmp
data16
les
mov
test
ror
movsb
sbb
xor
pop
lcall
imul
mov
dec
data16
mov
or
sub
sub
fsubs
push
sti
cmp
lods
decb
dec
loopne
xchg
lahf
dec
jle
leave
inc
std
mov
loopne
dec
insb
dec
repz
test
fsub
fdivrl
dec
adc
pop
add
adc
inc
jmp
ret
cmp
sbb
aad
jae
nop
mov
sub
jb
dec
ss
add
jno
xor
ljmp
call
mov
mov
adc
andl
inc
clc
cmp
xchg
ja
xorb
push
aaa
das
push
pop
push
mov
mov
and
pop
pop
shl
in
testb
cwtl
lcall
mov
pop
divl
lret
pushl
repnz
xchg
pop
add
dec
iret
jmp
aam
xchg
add
sti
push
icebp
es
movsl
pop
insl
vmovupd
std
call
push
sub
and
mov
mov
stc
xchg
sub
ss
add
dec
cltd
mov
xor
mov
xor
in
fldl
ret
inc
xchg
aam
adc
jle
rcrl
pop
pop
add
push
xor
sarl
xchg
dec
les
lds
xor
jmp
xor
movsb
scas
mov
or
dec
sub
in
ja
nop
and
mov
cmp
mov
je
cmpsb
shll
and
dec
add
sub
out
sub
push
bound
jns
pop
mov
xchg
test
mov
jne
sub
mov
into
pop
sub
insl
jp
rcl
mov
push
mov
mov
dec
loopne
sbb
jo
xchg
and
mov
jmp
int
mov
mov
out
cmp
or
aad
fwait
rcl
jl
cmpsb
and
insb
jg
jnp
imul
pusha
push
lods
ror
sub
mov
cmp
out
jae
cmpsl
jbe
cmpsb
test
popf
outsl
aad
mov
shll
pop
jno
xchg
aaa
movsl
push
sbb
addl
mov
mov
fwait
adc
pop
add
leave
ds
pop
hlt
cs
arpl
mov
xchg
push
imul
add
imul
dec
cld
xchg
pop
xchg
mov
int3
mov
scas
inc
pop
pop
and
je
call
fisttpl
jbe
aad
jge
mov
xor
cltd
sub
cmp
mov
dec
adcb
popf
dec
mov
jne
mov
stc
jo
daa
imul
xor
dec
lea
in
cmpsb
push
into
shr
mov
adc
dec
jg,pn
cmp
loope
adc
js
pop
sbb
jl
jg
sbb
inc
subb
cwtl
sbb
jle
add
sbb
cs
dec
jbe
jl
cltd
shrl
xlat
pop
jae
orl
jae
in
mov
fdivl
rorl
outsb
add
sarb
js
jg
xlat
xchg
mov
sbb
mov
rolb
push
or
inc
inc
sub
pop
ja
dec
lods
shll
es
sbb
test
xorb
outsl
cltd
aad
loop
std
clc
stc
cmc
inc
xchg
fs
jnp
adc
jmp
mov
fadds
cmc
jp
js
in
push
clc
test
lock
or
jb
into
xlat
lock
decl
mov
adc
dec
mov
ror
xlat
adc
add
pop
xchg
xchg
add
adc
cmp
mov
mov
sti
jmp
add
scas
add
gs
cmp
dec
jp
push
mov
pop
ja
repz
dec
sbb
xchg
xchg
adcb
pop
mov
or
jecxz
pop
pushf
cld
sub
jmp
and
mov
repz
add
rorl
mov
je
ficomps
inc
test
in
pop
int
push
pop
dec
call
dec
jle
mov
mov
pop
dec
inc
xlat
xchg
sub
cmpsl
inc
pop
pop
faddl
cmc
in
das
xor
adc
inc
mov
test
test
jns
mov
push
mov
xor
lret
outsb
stos
push
mov
mov
jle
mov
cmp
rcrb
and
aam
pop
retw
mov
es
push
xchg
insl
lods
cwtl
lcall
bound
popa
xchg
fimull
mov
cwtl
xor
gs
setne
add
fdiv
test
fdivl
fsubrs
xchg
les
rcrl
pop
int3
pop
pop
push
inc
stos
inc
sbbb
xchg
push
push
sub
jle
int3
pop
xor
cmp
xor
xchg
lret
mov
xchg
add
dec
xchg
in
xchg
lcall
inc
rolb
fwait
aad
push
push
lds
lahf
add
jo
out
or
sbb
adc
in
cmp
xchg
notl
enter
in
in
fisubl
or
mov
push
loope
add
call
dec
dec
xchg
ja
jecxz
jge
in
bnd
dec
rcrl
mov
dec
jmp
cwtl
movsl
outsb
orl
out
jns
sub
jp
or
test
stos
out
pop
jns
jnp
cwtl
insb
inc
nop
lea
mov
in
insl
clc
pusha
in
mov
iret
mov
rcrl
movb
jae
fsubrs
popf
xchg
pop
idivb
inc
pushf
popa
ficoml
aaa
mov
sbb
or
scas
sub
ss
mov
mov
add
hlt
jns
mov
xlat
movb
xchg
or
popa
jb
aaa
sub
fimuls
out
or
in
mov
pop
rcl
fimuls
adc
shlb
adc
add
cmp
movsb
call
xchg
ret
jbe
jle
jge
inc
adc
daa
cwtl
movsb
or
outsl
mov
jno
sub
adc
es
mov
loop
add
arpl
sub
xchg
imul
les
lahf
test
sbb
mov
dec
loope
and
sub
mov
repz
and
add
and
sbb
jl
ret
xor
aas
popa
cmp
pop
rolb
js
mov
lcall
xchg
or
outsb
xor
ss
push
in
jmp
mov
sbb
mov
shlb
int
push
adc
in
and
out
stc
aad
lret
in
rorl
fisttpl
xor
sahf
xchg
push
test
mov
inc
loop
ja
stc
lods
pop
xchg
fs
clc
adc
push
mov
pop
imul
adc
rcl
out
pop
movsl
cli
fwait
imul
imull
loope
bound
fdiv
cs
xor
mov
mov
pushf
insl
subl
cwtl
adc
shlb
data16
lods
jns
xchg
jns
fldcw
test
and
testb
lcall
movsl
stc
xor
mov
ja
inc
and
lret
repz
dec
sub
sub
jne
rcrl
incl
loope
push
sbb
cmp
mov
jmp
inc
push
fisttps
xlat
nop
insl
in
dec
aas
movsb
inc
dec
jb
xor
dec
icebp
pop
ret
je
or
dec
pop
cmp
lock
lea
sub
pop
mov
in
adcl
and
or
cmpsb
sbb
or
das
adc
mov
cli
mov
and
pop
pop
rcll
aas
std
ss
repz
adc
cmpsl
xchg
jb
mov
or
xchg
cld
test
or
frstor
mov
pop
in
cwtl
xchg
shl
stos
popw
cmpb
sub
out
pop
ret
sbb
imulb
xor
xchg
test
je
popa
lods
mov
lods
mov
push
mov
mov
popa
clc
mov
hlt
stos
test
dec
mov
cltd
stc
or
test
gs
mov
ja
shl
pop
clc
scas
push
imul
outsl
mov
leave
stos
xor
bound
add
xchg
ljmp
jo
shrl
out
sub
push
rorl
xrelease
xor
clc
and
test
push
cltd
ja
test
mov
fistps
fwait
add
dec
push
push
popa
add
inc
out
out
cmp
daa
cmp
xchg
in
mov
out
sti
mov
adc
lahf
ja
negl
mov
xor
das
adc
dec
sub
dec
jne
movsb
loopne
inc
aam
fbld
pop
xchg
test
sub
arpl
loop
lahf
out
jns
sub
jne
add
adc
ret
xchg
lret
insb
lods
je
jnp
call
or
test
pop
pusha
xchg
push
iret
jmp
aaa
ret
fstpl
dec
cmpsl
inc
push
lods
jae
dec
mov
popf
mov
cmp
dec
fcmovb
mov
xchg
in
data16
bound
scas
nop
xchg
scas
push
or
mov
fcomi
in
jae
xor
leave
sub
movsl
hlt
les
mov
xlat
sub
or
fmull
jmp
ljmp
and
xchg
pop
lock
imul
rcll
cmp
inc
mov
stos
and
mov
movsb
jae
push
push
cmp
test
sbb
mov
cmp
std
popa
jl
dec
xchg
dec
xchg
das
addr16
lds
xorb
fbld
lahf
popl
push
pop
imul
and
mov
cmpsb
pop
adc
enter
pop
leave
les
push
movsl
out
loope
lea
sub
xchg
cmpl
pop
or
dec
stos
xchg
movsl
mov
int3
and
push
and
adcb
sbb
int3
push
xor
nop
cld
out
mov
js
dec
and
jg
jecxz
push
or
faddl
dec
ret
lret
jge
inc
shl
jne
jg
mov
dec
xor
stos
add
ja
xor
sti
lock
adc
adc
fwait
loop
idivl
es
shll
lcall
popf
sbb
test
xor
stc
arpl
xlat
adc
out
popf
movsl
sub
push
je
fdivrs
out
cmp
cmpsb
xor
xchg
cmp
das
mov
ror
out
into
popf
fs
lea
mov
idivl
imul
unpcklps
cmp
and
add
lods
pusha
and
xor
mov
push
adc
popa
push
repnz
dec
add
cmc
mov
loopne
inc
push
dec
fwait
inc
je
movsb
fld
js
les
push
repz
jecxz
xchg
or
sarb
cld
ja
jle
in
sbb
frstor
xchg
subb
push
lods
aad
fistpl
nop
dec
sti
mov
inc
dec
inc
jb
jno
dec
push
mov
jecxz
dec
loopne
repz
lea
shrl
mov
fsub
subl
aad
fildl
lret
push
sbb
push
das
cmp
out
lea
pusha
and
mov
mov
fiaddl
dec
xchg
test
cwtl
lret
push
mulb
cmp
icebp
jecxz
lods
cld
scas
adcb
mov
sbb
imul
rol
in
sub
sbb
es
mov
dec
xchg
out
xchg
call
inc
cmp
mov
lods
sbb
out
aad
mov
and
fwait
aaa
adc
push
cld
jno
pop
xor
cltd
xor
nop
test
fnstenv
pop
add
mov
ljmp
sbb
bound
movb
pop
jno
stos
and
out
cli
push
sub
push
filds
decl
call
icebp
or
cmp
mov
adc
xor
inc
test
sbb
jno
scas
into
xor
or
or
fwait
xor
push
or
test
aaa
xor
out
mov
and
dec
in
mov
xchg
xchg
cmc
iret
mov
jne,pn
cmpsl
pop
iret
pop
pop
xor
idivb
mov
call
ret
pop
add
mov
aas
rorb
cli
xchg
jne
pop
or
xchg
mov
pop
xchg
mov
rol
subl
fsubr
xor
or
jo
pop
add
mov
test
sub
movsb
jle
gs
in
mov
pusha
and
add
dec
xor
fmulp
dec
inc
jne
push
jae
or
popf
in
sahf
mov
jns,pt
fidivl
insb
xchg
cmp
mov
imul
pop
scas
repz
push
push
cltd
mov
mov
jbe
adc
xor
pop
in
leave
mov
stos
fldenv
mov
pushf
or
push
mov
lahf
or
mov
or
jns
pop
pop
dec
cmp
shll
ffreep
pop
jae
rcrb
scas
fsubp
xor
sub
xchg
cmp
aad
push
mov
jbe
sub
sub
sub
or
aad
push
jl
jno
dec
add
add
test
cli
xor
sbb
or
scas
push
addr16
sub
fbld
push
inc
dec
aaa
inc
jo
add
insl
cmpsl
mov
mov
pop
or
push
dec
push
loope
sbb
sub
inc
sarl
lods
ss
jo,pt
je
xchg
loopne
and
push
or
fs
faddl
jle
xor
das
in
push
sub
pop
xor
add
lock
repnz
sub
push
jmp
adc
int3
adc
mov
mov
mov
imul
adc
and
pop
insl
push
push
hlt
and
xchg
ret
inc
sub
ss
divl
movsb
lret
adc
cmp
mov
out
sbb
lret
sahf
mov
pop
xor
les
xor
outsb
push
adc
sbb
movlps
push
pop
cmp
aaa
inc
out
lahf
ss
add
xor
mov
or
lods
into
orb
rorb
mov
imul
pushw
xor
mov
sub
xlat
imull
lahf
sub
scas
mov
int3
mov
sub
sbb
fsubl
mov
jg
cli
sbb
fyl2xp1
inc
cld
les
dec
repz
mov
or
aaa
jbe
std
bound
adc
decl
jmp
fildl
movsl
movsb
in
jne
call
aas
loop
ret
in
dec
fists
lea
jecxz
test
divb
fsubr
adc
repnz
fisubl
cmpl
popa
sbb
aam
inc
pushf
imul
into
ret
repz
mov
and
test
out
notb
sub
cwtl
xchg
iret
cmpsl
xchg
je
mov
mov
adc
lret
mov
mov
mov
ss
sahf
sahf
pop
mov
hlt
sub
cwtl
mov
aaa
mov
or
adc
sub
ljmp
and
lret
mov
and
ss
lss
add
outsb
cltd
addr16
stos
test
call
push
and
frstor
add
clc
and
int3
mov
fstl
xchg
pop
or
add
pop
aam
xchg
addr16
sar
xor
orl
call
add
jge
aas
cwtl
test
idivl
ja
xchg
dec
mov
push
mov
add
push
scas
fnstenv
push
sti
add
scas
out
movsl
shrb
divb
vshufps
mov
push
in
dec
dec
test
orl
sbb
mov
shlb
mov
in
repnz
cmp
mov
shrb
movsl
icebp
dec
xchg
sub
cmp
ror
out
aam
sub
imul
stos
dec
mov
rolb
cmpb
jle
push
lods
in
in
push
pusha
mov
pop
aad
shlb
pop
adc
push
leave
jae
push
cmp
popf
or
mov
mov
shr
xchg
sahf
cwtl
sbb
xchg
mov
scas
push
mov
inc
adc
xorl
hlt
pop
test
addl
jnp
push
addr16
dec
add
lahf
pop
pop
dec
stos
and
jbe
dec
ret
das
in
mov
sbb
cmp
cmp
movsb
mov
push
push
fdivrs
sarl
and
sbb
mov
xchg
daa
idivb
or
dec
jl
insl
jl
jae
inc
push
mov
enter
mov
add
ficoml
adc
cmpsb
pusha
sub
push
cld
cmp
mov
and
inc
imul
add
iret
inc
sub
lds
ds
mov
and
inc
xorb
sbb
iret
in
add
test
and
pop
xor
cmpb
mov
sbb
rcr
mov
sub
test
adc
cmpsl
ret
mov
mov
dec
lahf
mov
es
and
add
int
mov
sub
pop
pusha
lret
pop
rcl
cmpsb
mov
adc
jp
adc
loope
ss
nop
outsl
adc
sbb
stc
shll
fs
push
adc
ss
cmp
repnz
je
out
xor
fdivl
jl
pushf
cmp
mov
aam
arpl
icebp
xor
lahf
lcall
fidivl
adc
jbe
adc
mov
inc
xchg
movsb
mov
fnstsw
xlat
ss
sub
jecxz
mov
aaa
das
insl
sti
cmpsl
push
mov
gs
enter
hlt
push
inc
pop
test
fnstenv
mov
arpl
mov
add
sbb
jb
add
jl
lds
je
adc
inc
jmp
test
pop
jmp
dec
lret
or
popf
aad
imul
jb
mov
dec
push
mov
add
jle
stc
gs
call
inc
add
mov
jb
dec
in
and
pop
enter
and
sub
mov
adc
pop
orl
not
mov
cmp
xchg
cmp
mov
xchg
gs
cld
add
xor
hlt
mov
fwait
dec
lock
push
shrb
xor
lea
aam
push
ret
mov
and
pop
dec
xchg
inc
xchg
cmpsw
sub
ds
ja
icebp
push
push
mov
and
cmp
roll
movups
and
push
and
fisttpll
int
pusha
jmp
xchg
mov
je
xchg
outsl
stos
add
out
rorb
scas
mov
push
xchg
mov
adc
int3
in
jle
push
fistl
xor
cltd
mov
sbb
sub
test
ja
iret
in
xchg
mov
inc
sbb
dec
inc
or
push
push
mov
add
popa
out
test
loope
dec
lcall
push
sub
hlt
mov
jb
mov
shlb
addr16
or
jp
and
push
mov
out
xor
pop
lock
xchg
incb
pop
jmp
les
mov
or
loop
xor
or
fs
jno
stos
mov
push
or
clc
jnp
in
jle
lret
inc
in
mov
pusha
pop
xchg
mov
or
mov
pop
dec
mov
inc
mov
jae
dec
mov
jne
sbb
mov
cmp
aad
fcoml
xchg
ljmp
imul
push
scas
mov
mov
adc
mov
add
mov
xchg
and
hlt
movsl
sti
repz
popl
leave
push
or
dec
push
add
xchg
mov
push
add
pusha
and
loop
pop
pop
jge
sbb
sbb
xchg
lds
push
rclb
mov
cmp
fwait
movsb
adc
repz
daa
movsl
leave
jbe
stos
pop
jge
xor
daa
xchg
mov
cmp
test
les
aas
dec
loop
sub
outsb
adc
dec
jo
or
in
mov
push
roll
sahf
test
xlat
repz
inc
mov
cmpsb
jecxz
shr
cmp
or
push
mov
loope
cmpsb
ds
sbb
mov
aaa
movsl
lahf
push
mov
orb
jle
out
fisubs
cmp
sbb
inc
or
js
cli
sbb
cld
loopne
lcall
mov
sub
mov
adc
orb
mov
sbb
movaps
pop
iret
and
bnd
int
mov
cltd
mov
lret
pop
shll
mov
stc
and
push
mov
adc
xchg
gs
stc
mov
pop
fs
ljmp
data16
cmp
lods
or
out
out
sbb
xor
pop
cmp
ret
push
xchg
push
into
inc
mov
cmc
xor
outsb
adc
or
adc
and
rorb
add
jecxz
in
xlat
jne
aaa
sub
mov
mov
es
pop
cmp
jmp
and
rorb
outsl
js
fldenv
aad
nop
lcall
push
hlt
sbb
lods
and
pop
ss
and
imul
nop
fstps
jb
addr16
int
gs
add
jecxz
rclb
rorb
or
pushl
stos
stc
or
in
push
es
fadds
xor
adc
pop
imul
inc
mov
cmp
or
and
dec
dec
ror
xor
std
rclb
cwtl
cld
push
sbb
aam
mov
cld
xor
loopne
pop
mov
gs
lock
sahf
pop
cld
sti
lock
imul
fidivs
mov
or
movsl
mov
insl
das
xchg
dec
addb
xchg
movsl
and
mov
popf
popa
or
push
mov
inc
popf
or
insb
in
orl
or
add
stos
test
cltd
mov
test
cmpsl
lret
outsl
mov
lods
xchg
incl
ror
mov
pop
pop
sar
stos
out
xchg
adc
and
ficoms
jb
jmp
fdivrl
pop
sbb
lret
pop
add
jle
push
mov
sbb
ljmp
push
fwait
xor
inc
mov
xchg
lcall
hlt
sub
sub
nop
add
cmp
fidivrs
jns
stc
iret
in
sti
xchg
addb
mov
inc
call
pop
mov
addr16
dec
mov
pop
jecxz
fcmovnbe
js
push
stos
popf
dec
mov
xlat
lea
jecxz
adc
jmp
sbb
mul
call
or
dec
push
adc
cmpl
insb
pop
dec
cmpl
gs
insb
cltd
in
mov
iret
rolb
adc
pop
sbbl
inc
xchg
mov
jae
int
push
cmp
push
mov
mov
lahf
and
test
ret
sbb
add
adc
inc
mov
push
sub
leave
or
pop
hlt
lock
imul
or
enter
in
scas
or
xchg
sub
pop
lods
mov
loop
in
out
mov
scas
cmc
subl
xor
movsb
lahf
int3
push
jbe
dec
jbe
cltd
ret
sub
sbb
nop
daa
xchg
mov
and
push
test
int3
dec
push
push
xchg
push
push
pushf
xor
sub
lahf
or
ret
test
mov
imul
in
and
enter
pop
lds
dec
push
jp
loope
mov
inc
cmp
push
movsl
cmpsb
inc
push
and
mov
push
sbb
add
mov
or
xchg
pop
sbbl
pop
jnp
scas
lcall
xchg
fdivl
popf
ljmp
out
push
outsb
push
test
adc
pop
popa
sarb
test
and
mov
and
fmulp
movl
divl
aas
sar
lock
xchg
in
sahf
lds
test
mov
xchg
sbb
loop
jecxz
stc
aas
rorl
adc
push
cmp
push
cli
lcall
cmp
fmuls
lea
jne
test
add
pop
jae
cltd
adc
and
adc
add
mov
lods
cld
and
mov
shl
xlat
mov
leave
sub
xor
or
mov
sbb
loopne
popf
jmp
pop
mov
inc
cmpb
lea
repz
ljmp
in
sub
jp
mov
jmp
ds
xor
in
cs
out
inc
aad
mov
nop
mov
call
jb
jbe
dec
inc
arpl
jecxz
les
jmp
mov
test
sub
sahf
shr
test
in
ret
shlb
inc
cli
aam
push
test
cld
test
xchg
scas
das
imul
lods
adc
and
xchg
pop
rcrl
jnp
std
jns
cmp
cmpsl
xchg
push
std
mov
aas
daa
xor
lret
or
popf
mov
xchg
int
xlat
and
pop
sbb
rorb
test
sub
xchg
xchg
ret
in
fwait
es
sub
xchg
and
mov
xchg
in
gs
mov
enter
xchg
int
mov
sub
test
iret
imul
cltd
or
outsb
test
lcall
mov
push
clc
pop
pop
xchg
insb
cwtl
shll
enter
pushf
cli
stos
fidivrs
out
xchg
mov
push
dec
push
insb
incl
repnz
inc
test
xor
add
mov
and
mov
test
gs
jmp
dec
jnp
sub
iret
pusha
or
enter
stos
sbbb
ror
mov
adc
mov
jp
bound
jns,pt
push
aas
in
push
mov
mov
xchg
mov
inc
in
addr16
jp
ljmp
xchg
fxch
mov
les
jne
push
xor
add
xchg
movsb
pop
aad
cwtl
aaa
xchg
pop
sbb
test
and
inc
sbb
pop
mov
popf
stos
mov
fmulp
insb
ret
push
call
jle
add
in
out
out
pusha
mov
iret
mov
cmp
sub
mov
xchg
out
push
sti
inc
inc
popf
xorb
add
arpl
inc
popf
cmp
cwtl
adc
sbb
mov
scas
jg
or
push
jle
and
cmpl
push
mov
jg
int3
hlt
cmp
inc
cmp
inc
push
movsb
jecxz
or
icebp
stc
int3
mov
imul
lds
ror
jle
pop
fcmovnbe
and
push
cmp
shll
sub
jbe
cli
jge,pt
add
sbb
dec
mov
mov
cs
jl
pop
aad
rol
push
xor
jge
fisttps
push
jo
mov
push
jns
test
push
insl
jmp
andb
push
out
jp
in
add
xor
repnz
loope
rcrl
imul
movsl
lods
sbb
push
ljmp
mov
push
test
jecxz
add
xchg
xor
fs
lret
mov
pop
stos
das
fidivrl
stos
addr16
cli
lahf
or
iret
pop
das
push
dec
loope
iret
mov
outsb
mov
pop
mov
cmp
jg
test
mov
push
mov
je
mov
push
lahf
and
mov
and
test
sub
dec
int3
divl
mov
rcll
int3
sbb
hlt
pop
sahf
push
add
push
outsl
mov
insl
loop
xchg
stc
idivb
fs
insb
test
in
xchg
xchg
and
push
out
dec
int
mov
add
xor
sbb
mov
cld
xchg
push
into
or
inc
cmc
jo
pop
xor
add
mov
sub
xchg
icebp
push
adc
aas
pop
add
inc
out
data16
lods
jecxz
in
mov
mov
xlat
repz
and
pop
hlt
cld
mov
js
add
mov
adc
movsb
addr16
iret
cmpsl
out
pop
cmpsb
jno
jbe
add
mov
in
loope
cmpsb
hlt
inc
repz
sub
fsubrl
cmp
sbb
stc
push
dec
pop
pushf
pop
or
pushf
test
xor
xor
aad
lods
pop
nop
insb
inc
aas
pop
mov
jb
mov
int3
je
clc
shl
or
movb
mov
add
mov
int3
sbb
cmp
pop
mov
roll
lahf
out
xlat
push
cmpsb
das
dec
mov
dec
mov
jo
pop
shrl
negb
mov
jb
adc
xchg
test
mov
push
mov
push
lret
ja
outsb
mov
and
out
cmp
subl
cmpsb
pop
aam
jae
pop
es
leave
insl
std
mov
xchg
and
stos
ljmp
pushf
lods
xor
pop
mov
lea
and
mov
iret
pop
add
sahf
dec
test
stos
nop
push
sub
rolb
xchg
inc
cmp
sarl
sbbb
stos
int
test
xchg
add
push
es
cmp
xchg
shll
lds
or
aas
aas
mov
and
xor
bound
fs
mov
in
loope
push
or
lret
push
insl
arpl
cmp
cmp
add
rcrb
rorb
in
xchg
out
xchg
and
add
mov
add
jp
cli
or
xor
mov
jle
sbb
leave
lret
sarb
ja
adc
jne
xchg
and
mov
cli
sub
push
cmp
xchg
jb
stos
adc
mov
insb
cs
jnp
leave
jle
mov
sarb
pop
iret
and
test
inc
lods
pop
sbb
movsl
out
mov
mul
mov
mov
dec
ds
out
xlat
pop
sbb
loopne
imul
xor
mov
scas
adc
lods
push
repnz
scas
leave
not
sbb
arpl
stos
dec
inc
test
or
mov
fadds
mov
out
cmc
int3
mov
fdivl
xchg
shl
fldt
or
mov
pop
clc
push
adc
mov
jge
ret
shlb
aam
xchg
arpl
aam
xchg
jno
xlat
popf
jl
cmpsb
or
cli
aad
pop
xchg
jo
jmp
ja
dec
jbe
test
cmp
and
or
cmpsb
insb
ret
lock
inc
enter
pop
inc
call
mov
inc
add
sub
adc
cmp
and
ds
add
lock
iret
pop
cmpl
ret
mov
xchg
add
in
xor
cmp
stos
sub
loope
pop
jns
rcrl
cs
mov
add
lds
jge
sbb
adc
adc
jg
fs
outsb
mov
lfs
mov
ret
fwait
loopne
xchg
bound
sub
mov
lret
add
int
mov
mov
sahf
or
test
mov
orb
outsl
xchg
movsb
mov
stc
lods
lret
mov
mov
ss
xchg
ds
fcomp
or
jo
inc
cli
add
dec
xor
xchg
cmp
lret
imul
into
out
lahf
cmc
aaa
add
xor
inc
xor
imul
or
lods
loope
lods
lret
mov
shl
xlat
xor
sub
into
or
mov
jecxz
mov
inc
push
gs
and
loopne
ret
aad
popf
inc
test
jl
or
mov
mov
mov
xchg
lahf
int
sbb
pop
jbe
js
xor
imul
push
fld
jmp
mov
cs
nop
es
ss
push
pop
aas
std
aam
jb
xor
dec
xor
sub
jecxz
cwtl
cmp
add
ds
call
inc
les
xorl
fimuls
inc
aas
cmpsl
lods
inc
repnz
mov
rolb
mov
sti
sub
sarl
and
mov
cmpsl
nop
jg
mov
in
js
cld
mov
imul
or
xchg
mov
sbb
pop
pop
adc
shlb
add
decb
es
in
jl
jae
imul
dec
xchg
cwtl
lods
sahf
stos
repnz
mov
stos
and
cmp
cmp
add
jnp
cltd
jp
mov
xchg
dec
pop
mov
in
inc
push
lock
jecxz
in
xchg
clc
dec
je
xchg
sub
rcl
bound
pop
pop
test
pop
out
dec
mov
xchg
lret
push
add
inc
cmc
xchg
xor
movl
mov
cmp
dec
leave
cwtl
push
test
add
push
mov
inc
js
decb
lahf
in
dec
repnz
push
pop
add
fldenv
out
add
or
pusha
dec
jns
out
and
jge
pop
xchg
outsl
jno
mov
imul
mov
shll
jp
stos
pop
mov
cmp
add
popa
adc
jne
fmul
mov
sub
xor
jmp
lock
and
out
and
xchg
or
notl
jp
stos
xchg
and
testb
mov
pop
adc
fxam
andb
add
test
ret
outsl
pop
sub
iret
inc
mov
mov
push
orl
push
inc
cmp
fisubrl
sarb
les
pushf
xchg
scas
inc
jno
push
cld
and
adc
cmp
mov
dec
inc
mov
insl
stos
push
rorl
inc
xchg
pushf
or
cmp
aaa
and
or
pop
add
nop
int3
mov
cmp
cmp
cmp
movsl
push
out
xor
sar
inc
scas
sbb
and
mov
push
arpl
xchg
jbe
sbb
jge
gs
sbb
cld
cmp
loop
jno
mov
push
dec
sahf
hlt
xchg
cli
call
cmpsl
jo
pop
and
push
scas
jne
in
lods
push
add
mov
cmpsb
out
lret
xlat
add
cmp
adcb
loope
imul
mov
push
ds
mov
cli
and
out
jle
or
add
mov
jne
jl
push
xor
js
stos
pop
pop
clc
outsb
mov
push
cld
lahf
sub
xor
jb
mov
out
outsb
jle
xor
out
arpl
jg
dec
mov
pop
fisttps
test
and
push
sub
jb
clc
dec
lock
xor
lret
inc
rol
ret
cli
das
sbb
sahf
scas
cmp
data16
std
outsl
jo
mov
stc
fs
adc
in
mov
in
pop
fcomps
mov
sub
scas
insb
push
jb
and
into
sarb
cmc
incb
repnz
adc
fwait
imul
adc
xor
cld
lods
mov
mov
jno
inc
mov
jmp
sti
adc
shlb
and
xchg
repz
push
inc
mov
xchg
mov
repz
bound
sbb
cltd
gs
mul
pop
pop
add
push
adc
rcll
maskmovq
negl
aad
and
nop
inc
mov
jb
fmull
je
cmp
or
and
call
add
mov
mov
dec
test
sub
shlb
pop
test
inc
inc
or
push
sub
mov
xchg
rorl
or
mov
cwtl
call
mov
les
cld
fsub
out
push
fisttpl
shlb
call
js
rorb
decb
call
aad
es
add
sbb
outsb
xchg
push
xchg
mov
nop
push
popa
mov
lods
or
lret
mov
mov
aas
xor
mov
in
movsl
push
add
push
je
pop
jno
push
mov
mov
or
sbb
seta
shll
out
pop
or
mov
stos
into
inc
out
scas
in
or
push
fdivl
jmp
pushl
imul
cmpsl
iret
xchg
xor
lods
add
sub
in
xor
shrl
push
repnz
push
cmp
inc
paddusb
fwait
jl
inc
push
cmpb
add
pop
cmp
fists
bound
adc
jns
xor
in
jle
xchg
mov
or
mov
ja
mov
jp
or
add
dec
mov
jmp
jne
dec
mov
fistps
pop
xchg
sbb
lahf
mov
adcl
out
lds
or
int3
push
adc
scas
stos
cli
loop
and
mov
adc
xchg
jle
js
in
jbe
pusha
pop
jae
iret
jecxz
mov
inc
les
inc
ret
jae
lea
push
inc
pop
icebp
popf
cmc
fnstcw
mov
leave
ficompl
mov
sbb
add
imul
mov
adc
sub
mov
in
and
sbb
arpl
popf
inc
mov
and
mov
ss
loope
mov
jno
enter
cmp
jns
sbb
push
cmpb
or
out
sbb
scas
idivl
fstpt
push
das
adc
xor
jbe
add
in
or
inc
data16
daa
sbb
mov
or
dec
or
aas
movsb
xor
xchg
loop
lahf
xchg
push
repnz
into
iret
mov
cmpsb
jb
pop
in
mov
nop
repz
sarl
loope
idivb
sub
xor
inc
add
imul
js
es
sahf
sub
dec
sbb
das
add
shll
inc
lea
adc
adc
dec
jp
and
pushf
repnz
xor
fistps
sub
lds
adc
leave
mov
jg
das
into
mov
das
jne
bound
add
cltd
stos
push
sub
ret
scas
divl
lds
mov
sbb
aaa
test
cmp
cmp
inc
pop
loop
loope
stc
sbb
into
mov
adc
push
in
ss
mov
mov
insl
out
mov
xorb
pushaw
cmp
dec
insb
or
mov
cmc
vmaxpd
dec
mov
pop
out
mov
imul
xor
popf
pop
jnp
mov
lods
cwtl
fs
lret
xlat
mov
and
mov
mov
mov
mov
decb
inc
pop
loopne
cmp
dec
xchg
pop
or
xchg
hlt
fnstcw
sbb
icebp
add
xchg
xor
xchg
and
ror
aam
inc
jbe
mov
adc
rcrl
mov
pop
add
nop
and
pop
aas
cmp
aaa
jb
mov
jp
ret
jecxz
jl
or
sbb
call
sarb
and
in
imul
rcrb
lcall
inc
sub
xchg
das
out
shlb
arpl
rcrl
push
mulb
pop
std
adc
shll
mov
fwait
pop
mov
lret
les
mov
out
mov
xor
pop
xchg
loope
rcrb
pushf
sub
aam
aas
mov
es
jb
mov
out
dec
imul
ljmp
lods
je
mov
neg
out
and
jae
lret
pop
popf
add
mov
cltd
call
dec
adc
jbe
fnsave
inc
add
ret
xchg
mov
sarl
push
mov
jp
lcall
xchg
pop
pop
loopne
mov
in
incl
lds
xor
xchg
mov
sub
jp
xchg
sub
ja
push
push
dec
inc
ds
inc
cmpsb
jge
or
mov
and
add
gs
mov
sti
xchg
jns
sbb
in
lock
xchg
or
and
pop
xor
sub
int
jp
and
mov
xor
mov
mov
mov
fistpll
ficoms
je
mov
mov
xchg
sub
dec
xor
stos
insl
cmp
insb
outsl
sarb
pop
fimuls
out
or
inc
mov
ret
sbbl
lahf
inc
int
jb
jmp
push
pop
ficompl
icebp
mov
mov
xchg
hlt
cld
xor
into
pushf
imul
scas
or
jbe
mov
mov
mov
repnz
hlt
addr16
arpl
mov
leave
cwtl
or
das
pushl
mov
xchg
inc
add
insb
pop
xchg
lret
jmp
test
nop
mov
xor
push
and
lds
movsb
push
loop
push
add
test
sbb
data16
mov
out
jno
test
orl
mov
xor
icebp
jl
lahf
cmpsb
negl
push
lds
push
cltd
aad
call
aaa
lret
in
movsl
ds
enter
pop
add
push
fadds
xchg
mov
mov
andb
shrb
rorl
sbb
xlat
xor
js
xlat
jge
pop
inc
je
js
cld
jnp
testb
fwait
or
fmull
insl
outsb
inc
out
jae
cld
jae
shlb
push
mov
xor
push
mov
and
cmp
int
lea
out
mov
cmp
shlb
mov
testb
sbb
test
adc
xchg
mov
push
arpl
fs
test
lret
ss
adc
pusha
fmuls
cmp
fdivr
cltd
xor
enter
mov
sbb
cmc
mov
leave
xor
cmp
adc
or
lea
in
outsb
insb
add
insl
data16
and
lds
popf
xlat
out
push
jmp
daa
mov
mov
and
add
xor
gs
xor
nop
je
repnz
mov
fnstenv
cwtl
xor
sub
call
mov
xchg
cmc
xchg
push
and
push
add
jmp
lret
mov
sub
aas
fimull
jb
iret
orl
shlb
in
fcmovnb
push
data16
les
int3
mov
andb
ja
pop
dec
pop
leave
jne
cs
inc
aam
mov
inc
adc
mov
and
push
and
add
in
test
cli
std
mov
sbb
mov
push
pop
xlat
icebp
jb
xchg
cld
xor
lret
xor
mov
mov
push
sub
pop
mov
add
cs
add
jle
and
scas
push
pusha
es
in
insl
cltd
cmp
dec
fs
xchg
pop
jp
ljmp
push
repnz
sbb
cli
and
push
jb
rsm
mov
cltd
pop
daa
jbe
mov
mov
push
cmp
inc
clc
std
insb
filds
jne
rcl
pop
xor
daa
stos
mov
xchg
lahf
cmpsl
push
xchg
out
sar
xor
or
insb
pop
mov
das
pop
and
dec
add
sub
push
dec
cmp
jo
cmp
sbb
push
jp
push
dec
inc
add
test
out
popf
push
bound
adc
test
dec
xchg
pop
inc
xor
cltd
test
mov
in
movsb
addr16
adc
mov
pusha
out
mov
out
das
ret
jnp
jne
pop
xchg
mov
in
icebp
fistps
mov
jmp
push
push
sbb
ja
mov
or
add
stos
cmp
loopne
and
in
mov
enter
inc
aaa
and
pusha
xchg
and
iret
mov
aam
pop
int
filds
fidivs
test
lret
popf
inc
out
mov
mov
lret
fcmovb
sbb
cmpsl
sbb
outsl
nop
imul
scas
outsb
negb
push
shrl
daa
mov
inc
sub
leave
rorb
xchg
hlt
mov
sub
cli
in
nop
fildll
push
pop
sar
or
clc
add
jp
dec
cmpsl
fcompl
dec
or
mov
and
push
sub
scas
mov
imul
scas
daa
cmp
movsb
loope
outsb
push
push
jge
jbe
lods
push
jge
movsl
dec
sbb
je
mov
loop
jl
push
inc
dec
jmp
and
mov
lret
dec
sub
push
cwtl
stc
test
fs
mov
mov
ss
aas
movsl
inc
push
rol
loope
js
sub
mov
imul
rclb
pop
orb
cmp
mov
test
loop
push
lcall
js
adcb
add
dec
cmp
add
sbb
xor
or
outsb
cmpsl
or
adc
jg
movq
or
mov
jmp
mov
nop
andl
xor
inc
sub
js
sbb
mov
daa
rorl
es
dec
dec
sahf
xchg
pop
lock
push
jmp
outsl
or
sbb
fs
xor
test
ss
mov
lret
out
inc
cmc
cli
int3
pop
bound
xor
xor
push
pop
or
test
into
jnp
and
push
pop
and
add
stos
pop
sub
push
imul
fwait
add
das
call
mov
ret
cs
sub
lcall
in
mov
sti
pop
inc
insl
push
call
repnz
dec
push
inc
test
fld1
fs
fstl
loope
stos
fcom
sbb
dec
stos
cmp
je
fcomps
mov
or
pop
pop
and
aad
inc
or
jns
bound
push
pop
dec
push
dec
push
je
lcall
adc
push
lea
adc
or
ds
lret
mov
imul
pop
xlat
cmp
mov
addr16
pop
add
movsl
push
cmc
mov
xlat
into
dec
and
imul
ljmp
sbb
insb
cmpsl
mov
mov
cmp
sub
pop
jl
lret
mov
fs
and
dec
adc
aad
adc
inc
shlb
aam
shrl
es
cmpsb
insl
andb
xchg
pop
icebp
and
hlt
mulb
dec
sbb
jge
mov
push
mov
mov
or
js
sbb
cltd
push
arpl
rclb
push
cld
es
pop
sub
cmp
pop
sbb
adc
inc
pop
or
out
fcoms
xchg
out
test
dec
cmp
xor
or
icebp
xor
dec
addr16
add
gs
fwait
test
add
ja
popf
jp
sub
sub
or
aas
sti
fwait
or
fiadds
inc
mov
xchg
fidivl
in
shll
xchg
stos
mov
xchg
mov
test
addr16
fldenv
jp
outsb
bound
or
jno
pop
leave
je
in
xor
mov
stos
jno
mov
jne,pn
bound
xchg
sbb
add
out
pop
sub
fimull
or
addr16
push
into
ret
scas
stos
push
push
fisubs
and
movsb
jnp
jecxz
jle
test
in
orl
iret
add
ret
repz
add
inc
inc
jecxz
inc
jae
out
push
lea
push
cli
mov
xor
in
je
jns
mov
in
imul
rorl
rcll
divb
mov
cwtl
lea
hlt
std
pop
cmp
cmp
or
and
pop
pop
or
sbb
fiaddl
int3
cmp
pop
cmc
xchg
sub
xor
enter
adc
imul
and
lret
xor
movsb
insb
insl
xor
jbe
sub
aaa
fadds
sbb
cmpsb
daa
mov
and
aas
inc
jl
mov
push
xchg
es
cmpsl
in
xchg
lahf
in
nop
push
imul
push
das
stos
adc
inc
cmpsb
sti
je
in
jae
test
das
fists
jle
xchg
push
andl
adcb
ds
sub
in
and
and
cmp
pushf
andb
stc
sbb
mov
out
xor
cltd
daa
pop
xchg
outsb
mov
pushf
inc
pop
hlt
cmp
lcall
fcmovu
loopne
loop
jo
mov
or
jl
mov
nop
rcrb
cmpl
mov
mov
out
mov
xchg
int
cwtl
inc
push
sub
inc
jnp
in
ret
cmpsb
jnp
rcrl
rorl
data16
cmp
or
sarb
outsl
in
inc
dec
loop
add
stc
inc
lock
outsl
fidivs
ss
mov
fadds
iret
pop
cli
pushl
dec
xor
sub
cmp
mov
sbb
pop
xchg
xor
jnp
dec
lahf
xlat
adc
xor
cmpb
dec
xlat
cwtl
data16
push
lods
dec
scas
jbe
mov
or
mov
cli
pushf
xchg
sti
into
xor
jbe
popf
gs
gs
loopne
jge
dec
mov
ret
dec
pop
fstps
pushf
xor
repz
rcll
decb
in
repz
jb
into
xor
adc
pop
pushf
stos
out
aad
lret
scas
lret
push
and
cmp
arpl
sbb
dec
test
scas
jecxz
push
mov
adc
icebp
lea
or
mov
xchg
movsl
dec
movsb
dec
xor
mov
pop
subl
inc
loop
scas
inc
jns
add
test
fidivrl
mov
xor
inc
es
imulb
ds
cwtl
aam
xor
mov
mov
and
int
mov
lret
adc
jne
ja
fnstenv
push
push
jae
hlt
xor
rcl
sub
sub
rcl
cwtl
add
int
xor
insl
addr16
jo
pop
imul
popf
in
cltd
ljmp
adc
sahf
xchg
mov
pop
stc
or
push
and
incl
sub
push
mov
mov
scas
xchg
imul
fistl
roll
dec
stos
addr16
lcall
jo
push
dec
mov
out
xor
sbbl
mov
xor
xor
push
ja
mov
and
out
or
cmp
fwait
cmp
fcomps
or
ds
pusha
add
out
pop
mov
bound
xchg
jns
scas
test
xor
test
pop
adc
pop
arpl
addr16
inc
jp
mov
ret
mov
int
ja
rcr
and
std
sbb
fistpl
xchg
imul
rcll
sbb
out
lret
adc
or
pop
xchg
pusha
jge
movb
mov
jnp,pt
xor
inc
in
mov
sbb
pop
inc
sbb
nop
mov
pop
cmp
inc
out
dec
dec
jae
mov
popf
xchg
aaa
insb
mov
mov
sti
fisubl
cmp
cld
sbb
das
imulb
add
scas
xor
iret
push
pop
movsl
sub
pop
cmp
bnd
add
hlt
dec
movsb
frstor
mov
jbe
inc
sub
aaa
or
pop
cmp
and
popf
ret
pop
lds
cs
scas
jae
ljmp
dec
lds
aad
jbe
push
push
fsubrp
stos
sbb
fisttpll
cmp
mov
idivb
aas
dec
leave
push
sub
imul
xor
out
add
add
test
cli
lcall
jle
mov
enter
pop
mov
out
loope
mov
cmp
mov
adc
xchg
repz
xor
icebp
addr16
int
xor
aad
pop
mov
dec
add
jae
scas
lcall
adc
mov
sub
push
outsb
insl
and
shlb
mulb
mov
xor
mov
repnz
scas
dec
lods
push
aaa
icebp
js
lcall
sub
arpl
lods
lock
lret
xchg
mov
push
mov
adc
push
mov
fisttpll
sub
mov
loop
pop
test
fs
mulb
and
mov
sarl
fadds
imul
cli
xor
int
dec
xor
loope
inc
sub
mov
push
inc
adc
daa
imul
xchg
add
xor
lods
xor
lcall
pop
ret
arpl
in
gs
add
jge
pop
cltd
add
loopne
adc
inc
sbb
pop
fsts
inc
repz
sarl
mov
cmp
mov
lcall
jne
adc
mov
fsubrl
out
pop
aad
mov
out
mov
cmp
inc
scas
dec
cld
pop
xorb
jecxz
jne
pop
xor
stc
shrb
pop
lahf
push
mov
dec
mov
cmp
pop
dec
sbb
fstpt
mov
stc
inc
xchg
sbb
das
arpl
shlb
inc
lret
cmp
xchg
inc
divb
cmp
cwtl
jb
cmpsl
mov
mov
test
gs
andb
mov
adc
lock
mulb
pop
adc
lock
nop
and
fbstp
jge
inc
jae
insl
dec
sbb
and
fsubrl
ljmp
mov
mov
addb
and
filds
add
add
push
loop
enter
cmp
push
sbbb
clc
scas
cltd
xor
mov
rcr
xchg
or
xchg
sahf
popa
mov
je
dec
push
and
jle
lods
xor
and
add
and
fisubl
cmp
jno
xor
cmc
test
arpl
dec
adc
inc
add
jbe
mov
push
scas
lret
add
jnp
fs
cmp
std
bound
mov
imul
dec
jge
mov
stc
fnstsw
push
or
addr16
mov
enter
add
mov
mov
jne
fs
out
dec
xchg
in
xchg
cmp
jbe
push
mov
addb
scas
test
test
sub
xor
push
dec
sbbb
mov
push
jnp
dec
add
cli
loop
add
std
pusha
inc
dec
iret
mov
repnz
pop
jb
cmp
scas
jae
jbe
push
adc
cmp
mov
sahf
inc
inc
xor
cld
fcmovu
fidivrl
push
es
imul
mov
cmpsb
mov
popa
mov
ds
and
aaa
sub
ds
arpl
push
pushf
stc
rorl
xor
add
mov
pop
push
imul
ja
das
lds
test
push
mov
clc
movsb
orb
cmp
push
cmp
jmp
jp
mov
cmp
iret
adc
fs
dec
jmp
dec
cmp
mov
dec
ds
jo
scas
data16
and
mov
inc
pop
test
inc
and
mov
in
inc
push
enter
pop
cld
pop
and
std
push
loope
leave
daa
sub
std
adc
ds
xchg
sub
sub
pusha
pop
outsl
push
xor
loopne
jecxz
sbb
clc
es
lea
pop
repnz
lcall
sub
ss
shrl
sbb
adc
adc
mov
push
pop
mov
mov
test
cmp
data16
fidivl
loop
imul
rorl
mov
fnsave
jg
cs
cmpb
orb
add
loop
jno
stc
scas
loope
test
adc
xchg
ss
xchg
cmp
sti
xchg
mov
imul
xor
adcb
je
pop
into
and
insb
cmc
test
and
adc
jg
mov
cmp
lds
adc
faddp
add
pusha
inc
lods
inc
lods
sbb
enter
in
jmp
std
sub
addr16
dec
movl
sub
sub
mov
jo
loopne
mov
cmp
lds
jl
repz
int
dec
or
cmp
and
icebp
clc
jo
xor
and
cld
xchg
loopne
add
es
mov
cwtl
aad
out
nop
addr16
fs
push
sub
push
loopne
je
jmp
jecxz
fisttpll
sbb
lea
cli
call
jnp
pop
mov
arpl
roll
dec
push
test
fucomi
sbb
inc
lock
mov
scas
inc
fldcw
inc
jne
mov
cld
mov
inc
shl
dec
divb
push
cwtl
dec
or
cmpsl
mov
jle
rcr
jo
into
test
cld
fiadds
inc
mov
ret
popa
lock
fcompl
xor
mov
jp
sub
sub
aam
and
ret
jmp
cwtl
es
in
and
xor
push
dec
mov
das
lods
push
popa
out
push
mov
sub
mov
imul
test
push
cmp
sti
out
sub
and
inc
mov
cmc
sub
clc
jmp
out
xchg
inc
out
shll
out
mov
stos
inc
and
add
xchg
mov
rolb
xor
outsl
or
sbb
mov
cmp
dec
lcall
ja
in
loope
push
fdivrp
inc
cltd
shrl
xchg
push
test
push
icebp
mov
jb
aad
xchg
int
out
sbb
bound
push
in
sbb
xchg
cwtl
ret
movsl
push
jnp
and
pop
addr16
and
mov
mov
mov
stos
sub
dec
jne
das
mov
fistps
shl
xchg
xchg
jmp
jge
jo
scas
pop
sbb
addl
sub
das
or
push
mov
stos
lods
lea
and
cmp
xchg
das
jnp
and
jle
and
in
adc
pusha
add
iret
sbb
adc
jae
inc
add
sbb
movsb
jmp
popf
fists
or
mov
lea
sbb
ds
imul
sbb
in
das
dec
adc
pop
daa
mov
xchg
jmp
lret
sub
arpl
mov
xor
repz
aaa
pop
push
push
or
push
out
lahf
je
int3
sti
or
ficomps
mov
arpl
mov
jmp
pop
cmp
shld
jle
leave
int3
jge
enter
adc
cmp
jno
sub
sub
cmp
adc
jo
lods
mov
push
in
jbe
movsl
outsb
bound
iret
inc
mov
add
sub
enter
pop
cmp
hlt
loope
sub
sub
outsb
add
nop
or
movsl
in
inc
add
enter
push
dec
cmp
xchg
inc
or
gs
push
or
cmpsb
test
pop
or
pop
jno
cmp
pop
test
cmpsb
sub
or
adc
jmp
mov
mov
popa
stos
mov
dec
and
mov
xor
int
pop
sub
cmpsb
imull
fmuls
in
mov
sbb
loop
test
sub
mov
in
xor
gs
mov
adc
jle
ss
imul
out
test
cli
cwtl
cmc
and
cmp
mov
or
outsl
cli
xchg
xor
adc
shrl
imul
mov
lds
jo
lods
repnz
xlat
sub
mov
in
cmp
fistpl
gs
or
dec
int
jne
inc
rorl
les
add
or
inc
repz
jmp
sbb
ss
jo
mov
out
adc
popf
pushf
lods
xchg
jmp
inc
mov
lods
xor
aad
xchg
pop
nop
inc
icebp
fidivrs
cmc
imul
je
add
sbb
and
call
cmp
mov
sbb
xchg
icebp
test
adc
inc
ja
push
inc
lret
das
and
mov
mov
inc
and
test
pop
div
out
insl
std
dec
mov
mov
and
add
pop
imul
pop
push
les
inc
fsts
pop
push
lods
jno
dec
lret
and
sbb
jne
lret
mov
es
fdivl
dec
dec
pushf
pop
xchg
pop
mulb
popa
add
push
xor
enter
jo
nop
mov
test
mov
gs
pop
cltd
xor
mov
cmpl
out
fstpl
mov
and
jecxz
mov
popf
sbb
aas
mov
pop
mov
inc
stos
xor
xchg
out
fs
xchg
add
mov
fnstcw
mov
cmp
or
inc
xor
push
mov
jo,pt
dec
add
xchg
adc
dec
stc
sbb
xor
jb
dec
pop
dec
fwait
lds
sub
add
call
pop
jns
add
cli
xchg
out
gs
sbb
add
sbb
addr16
jae
mov
imul
inc
into
mov
xlat
mov
jne
pop
mov
pushf
push
push
xchg
loop
or
loopne,pt
xchg
dec
ret
loope,pt
out
rorb
or
mov
je
pop
and
insb
icebp
ss
xor
inc
jle
inc
inc
in
pop
pushaw
pushf
mov
ret
jmp
loopne
add
cmp
adc
pop
popf
push
ficoms
mov
xor
inc
xor
sbb
add
imul
cmpsb
scas
pop
in
push
xor
xlat
adc
sub
in
lock
and
outsl
adc
inc
lahf
sbb
jnp
adc
adc
aaa
sbb
xchg
add
aaa
inc
int3
out
clc
pop
mov
loope
mov
int3
and
xlat
dec
ds
adc
xor
cmpsb
cmp
pop
js
cwtl
jae
push
fistpl
jbe
mov
jge
mov
sbb
and
mov
lahf
adc
jl
xchg
int
push
pop
jbe
adc
xor
adc
mov
mov
pop
push
pop
gs
pop
pop
in
addps
dec
sbb
push
dec
hlt
loope
mov
sub
mov
cmp
fsubs
fidivs
movsl
repz
and
mov
mov
sbb
pop
roll
xorl
mov
imul
js
int
pop
lock
xor
mov
int3
fmull
sbb
jmp
adc
fimull
jg
cmc
mov
mov
cld
leave
and
ficomps
inc
mov
cli
sub
jp
imul
xchg
popf
lret
add
ror
sbb
pop
sahf
jp
test
pusha
outsl
push
mov
stc
sbb
es
cmp
adc
sub
mov
cmp
jno
pusha
out
pop
cltd
cli
lret
sahf
sbb
sub
cwtl
sbb
into
ljmp
xor
mov
pop
enter
int3
pop
shrl
cmpsl
adc
out
xchg
inc
dec
inc
cmp
cmpsl
jo
xlat
imul
cmpsb
mov
cmpsb
mov
sti
mov
sub
or
dec
pop
dec
sub
sahf
inc
push
adc
les
xchg
inc
test
xchg
jp
and
jno
xchg
out
leave
mov
adc
mov
jmp
cmpsb
push
movlps
sbb
scas
jb
xchg
je
outsl
jecxz
jns
and
xor
call
stc
in
mov
mov
addl
pop
xchg
fisttpl
mov
inc
jle
inc
in
mov
add
mov
push
sahf
and
xchg
sub
cmpb
cmp
jle
cmpsb
add
sti
out
cmpsl
xchg
mov
jl
movsb
cld
xor
jns
int
fwait
mov
int
mov
push
cli
lock
pop
jo
sbb
and
aam
sti
inc
ret
or
or
leave
outsb
insl
add
lds
jg
xchg
cltd
add
ljmp
pop
lods
popa
xchg
mov
ja
aas
mov
in
incl
js
popa
cltd
imul
mov
daa
and
mov
fldl
or
pop
cli
outsb
xchg
xorl
adc
push
or
pop
ss
dec
mov
push
mov
xchg
lcall
dec
xor
xchg
fisttpll
pop
jae
xor
mov
xchg
das
dec
push
dec
lahf
ja
pusha
decl
or
inc
fsubrs
aaa
imul
or
add
jmp
jg
ret
jns
imul
xchg
sbb
mov
dec
subl
in
sahf
mov
jae
mov
mov
pop
or
testl
add
xor
outsb
and
out
adc
sub
and
stc
adc
xchg
data16
add
nop
insb
pop
pop
or
and
in
nopl
sbb
ret
cli
pop
pop
add
test
clc
push
pop
push
pop
popf
sub
outsb
faddl
xor
jmp
xchg
push
aas
mov
sbbl
push
jnp
inc
adc
repnz
cmp
pushf
adc
arpl
push
inc
mov
xchg
in
mov
or
pop
mov
int3
shll
fisubs
xchg
lds
imul
out
ret
gs
cmp
lods
mov
push
sub
stc
jge
xor
daa
xchg
xorb
inc
jl
sub
test
xchg
push
cmc
inc
lds
outsb
in
lahf
jg
jecxz
mov
mov
xchg
stos
sub
in
inc
rcrl
pop
cmpsb
mov
in
mulb
enter
pop
mov
jl
loope
pop
les
int
cmp
push
jge,pt
les
stc
test
sbbl
stos
add
dec
and
mov
dec
sahf
pop
push
jbe
js
lret
sahf
pop
outsl
cwtl
loop
adcb
push
or
xor
aaa
movsl
js
sbb
shrl
xor
mov
cld
imul
daa
test
and
inc
inc
push
inc
in
int
insb
push
imull
gs
adc
mov
in
sahf
imul
xchg
inc
dec
or
or
sub
mov
add
cmp
sub
jb
cmp
sti
pop
xor
inc
pop
cmp
popa
fisttpl
shl
into
int
outsb
cmc
std
pop
inc
xor
pop
iret
adc
or
adc
arpl
add
cmp
lods
shlb
movsb
xlat
test
stos
sub
mov
adc
adc
and
insl
or
dec
mov
inc
test
les
pop
test
jo
ret
mov
cmp
jns
dec
mov
add
out
add
pop
jb,pn
dec
aad
rsqrtps
xor
in
jb
push
xor
cmp
je
xor
dec
lods
sbb
and
or
dec
mov
xor
add
push
cwtl
ds
dec
movl
dec
pop
mov
insl
inc
test
inc
add
das
fistpll
jle
and
and
rolb
idivb
enter
clc
cwtl
jnp
jbe
xchg
mov
push
sbbl
mov
mov
push
lock
pop
mov
sub
rclb
cwtl
out
es
adc
test
inc
idivb
fcoms
insl
popa
xor
lods
mov
push
outsl
xchg
and
dec
jno
cmovae
leave
add
inc
inc
test
pop
push
mov
adc
std
jecxz
push
leave
clc
lcall
sbb
jecxz
fsubrs
pushf
and
sub
pop
xchg
nop
mov
jno
cli
mov
xchg
or
dec
out
dec
pop
mov
inc
mov
test
adc
ja
loopne
dec
fildll
push
or
xchg
fwait
and
push
cmp
addb
xchg
dec
out
mov
xchg
bound
cmpl
push
setae
adc
pop
xchg
dec
pop
or
addr16
lea
cs
test
cmc
mov
jne
dec
aas
js
jne
out
mov
mov
dec
xchg
mov
jmp
fisubrs
sbbl
or
push
sub
and
mov
stos
add
fbld
insb
push
inc
jnp
dec
sti
jle
push
test
pusha
rolb
adc
out
bnd
dec
mov
bound
lds
popf
push
push
fdivrl
mov
out
xchg
lods
pop
sbb
or
out
mov
mov
ret
adc
xor
mov
gs
adc
hlt
mov
inc
push
inc
movsl
sub
dec
imul
aaa
cwtl
mov
cld
push
add
int3
mov
dec
ljmp
stos
lods
rorb
push
pop
mov
add
pop
enter
bnd
mov
sbb
xchg
cmp
pusha
fs
xchg
out
hlt
fsubs
fdivs
jg
xor
lahf
sahf
loopne
push
pop
or
test
icebp
cmp
cmpsb
or
aad
enter
pop
clc
mov
ret
loope
cs
cmp
outsb
push
movsl
add
nop
and
cld
leave
adcb
add
aas
add
mov
out
lret
in
jle
inc
js
pop
mov
lcall
cmp
sub
aad
outsb
pop
mov
xor
cmpsb
sarb
jg
or
mov
mov
mov
cmpsl
icebp
and
call
int
mov
jae
addr16
jb
pop
jecxz
shrl
push
sahf
or
cli
test
sti
mov
outsl
es
gs
mov
inc
fs
or
lods
dec
in
adc
jae
imul
out
ss
cli
xor
jbe
and
decl
xor
cmp
mov
ds
les
xor
sub
adc
imul
lea
clc
dec
stos
jne
mov
movsb
mov
jb
sub
dec
repz
jl
popa
sti
call
jne
and
loopne
and
je
jns
rcr
imul
repz
inc
sbb
out
clc
in
stos
fcomps
push
mov
pushf
lods
xchg
pusha
jmp
mov
out
in
xchg
rcr
adc
jb
mov
jmp
jecxz
and
mov
call
ja
inc
mov
jp
das
fldt
dec
mov
pop
dec
dec
inc
or
out
inc
sbb
mov
fdiv
ss
popa
and
jmp
shlb
cwtl
cmp
mov
sub
inc
cld
mov
stc
lret
stos
xchg
add
leave
mov
cmp
jbe
mov
scas
inc
in
rol
cmp
push
mov
ret
daa
out
es
pop
das
insl
shll
dec
cmp
mov
ljmp
lods
aaa
popa
mov
mov
test
andb
fiaddl
sahf
xlat
in
cltd
xlat
clc
imul
mov
fstl
push
pop
xchg
xor
ret
rcrl
aad
add
dec
out
lea
push
push
das
dec
xor
les
mov
inc
pop
movsl
dec
ss
imul
rolb
rorl
sub
fisubs
rolb
push
leave
out
xchg
ds
call
pop
add
jbe
dec
xchg
aam
lahf
mov
cmp
mov
lds
addr16
dec
jp
cltd
pushf
mov
out
mov
xor
imul
test
push
mov
or
fists
cmp
and
mov
or
out
in
add
sub
lea
sbb
push
xchg
imul
or
insb
xor
dec
jnp
xor
jle
push
pop
in
popf
enter
in
cltd
lea
add
rolb
jae
add
loop
outsb
popf
jnp
jae
add
dec
inc
lods
xchg
mov
xchg
add
sbb
dec
fwait
imul
cwtl
scas
xchg
push
or
mov
inc
xchg
push
repnz
push
leave
mov
hlt
or
xor
pop
fwait
inc
test
ret
and
push
push
mov
out
das
popl
sti
push
pop
int3
cmpsl
scas
push
pop
ds
and
cmpsb
enter
mov
shrb
fs
lods
lods
push
and
inc
push
xor
add
aas
add
loop
outsl
jge
sub
xchg
addr16
daa
test
push
jno
mov
mov
push
mov
js
jo
outsb
push
push
xor
xorl
inc
out
and
cmpsb
nop
adc
in
les
enter
pop
aaa
push
cmp
push
and
cmp
ds
movsb
push
movsl
or
sbb
rcll
lcall
jae
rolb
test
xor
xor
mov
xor
js
test
out
mov
fmull
xchg
shrl
inc
inc
adc
push
jno
jg
pop
out
push
xchg
je
or
mov
cli
cli
and
aam
push
dec
xchg
insl
int
jmp
sub
sub
lret
loope
inc
and
mov
jne
sahf
scas
cld
cwtl
test
jne
frstor
outsl
add
adc
shll
arpl
cld
ret
pop
ss
cmp
fsubs
add
xchg
xor
in
cmp
jo
or
push
cmc
mov
jmp
and
rcrl
cmpsb
jp
ud2
out
add
in
jnp
rorl
xchg
mov
imul
mov
out
dec
sti
xchg
xor
imul
sub
loopne
xor
dec
dec
lcall
mov
cmp
rep
sti
push
xchg
ret
scas
loopne
seta
insb
popa
lret
pop
mov
or
scas
lret
xor
push
cmp
aad
push
js
scas
push
pusha
aas
jno
enter
bound
add
jecxz
loope
sub
push
lea
test
aas
call
fwait
inc
dec
popf
rcrl
aad
jae
clc
jg
inc
xchg
jns
inc
ss
ljmp
popf
test
cmpsl
mov
jg
ja
outsl
int3
das
testb
int
fwait
neg
cwtl
icebp
mov
stos
mov
add
mov
mov
push
lret
sbb
jbe
lods
jnp
mov
sbb
lock
cltd
pop
int
icebp
rcrb
das
sbb
mov
sub
push
push
xchg
insl
mov
mov
aaa
ljmp
pop
lods
mov
repz
mov
repz
add
add
push
push
test
call
dec
push
adc
fnstsw
and
shrb
pop
arpl
imul
lock
mov
push
cld
push
cmp
shlb
shl
or
loop
xor
add
mov
dec
in
insb
dec
popf
jns
test
pusha
xchg
ja
imul
mov
ficomps
adcl
mov
sbb
mov
test
sbb
jbe
xchg
and
ds
into
mov
subb
addr16
fwait
jp
mov
jnp
pusha
mov
add
xor
jne
add
mov
data16
mov
pop
xchg
cs
loopne
sbb
stos
xchg
je
cltd
cmpl
out
mov
or
push
pop
push
adc
jmp
insb
popf
rol
out
loopne
jle
cmp
cltd
pusha
or
test
pop
mov
dec
cmpsl
jae
test
push
movsl
and
aas
jb
inc
sub
xlat
fimull
pop
xchg
pop
pushf
ficomps
bound
scas
jmp
pusha
inc
adc
xor
xor
add
add
arpl
mov
jecxz
pop
mov
and
push
xor
add
jmp
data16
cmp
sbb
rolb
scas
mov
xor
cmp
sub
int3
push
pop
push
jbe
loopne
jge
jge
sbb
in
test
cmp
inc
jno
xor
lods
dec
shrb
push
sahf
jecxz
xor
jg
push
lahf
faddl
xchg
push
add
test
xchg
inc
jle
adc
stos
jecxz
enter
pop
jbe
sbb
dec
arpl
insb
cmp
sub
adc
sti
mov
mov
psubsw
xor
flds
stos
inc
in
add
pop
dec
xor
inc
jbe
jne
mov
js
adc
in
cwtl
mov
push
adc
fdivrl
mov
sub
push
sbb
stc
push
ret
shlb
jbe
jg
sub
jg
push
mov
mov
add
int
add
mov
mov
fcmovb
xlat
mov
sbb
sahf
push
gs
test
sbb
subb
or
les
push
fs
shlb
dec
jg
ss
adc
mov
js
out
scas
jb
xchg
dec
xchg
xor
push
cmp
mov
or
imul
jbe
aaa
cmc
push
push
xor
fcompl
inc
rcrb
adc
idiv
imul
fsubl
push
loope
lods
test
mov
jecxz
sub
jmp
in
push
rorb
inc
inc
jne
mov
gs
xchg
loopne
push
pop
dec
test
cmp
sbb
gs
repz
aaa
xchg
xchg
xor
pop
mov
jmp
inc
pop
decw
push
jbe
pushf
add
cmp
fwait
adc
aad
mov
push
aas
adc
pop
jb
mov
ss
push
or
sub
out
lret
call
cmc
ja
mov
enter
sub
mov
push
fildl
fcomps
movsl
xchg
xchg
and
out
mov
jl
ljmp
call
jno
mov
sub
std
inc
mov
je
adcl
add
and
fadd
pop
cld
loopne
test
mov
cld
mov
and
pop
in
insl
mov
sub
fnstsw
insb
sahf
mov
inc
mov
es
out
lahf
push
ja
xor
push
xchg
xchg
push
je
loope
and
js
imulb
xor
jg
and
sbb
xor
pusha
xchg
add
pop
addr16
inc
push
jge
and
mov
arpl
push
xlat
xchg
fstp
aam
clc
dec
xchg
push
xchg
xlat
or
jae
repz
push
jbe
push
mov
xchg
out
push
or
xchg
push
and
cwtl
call
push
pop
xor
in
cmp
push
pop
adc
xchg
sub
subl
inc
ja
dec
mov
mov
or
fcomps
mov
push
push
and
push
add
cmp
and
push
shll
fnstsw
fs
mov
mov
out
mov
cmp
jne
jecxz
addr16
mov
cs
sub
mov
push
jne
and
mov
xlat
call
xchg
add
xchg
aas
and
xchg
xchg
cmc
sub
adc
cmpsl
push
add
mov
and
das
insb
or
add
push
movsl
in
mov
fwait
iret
push
bnd
and
into
inc
inc
loop
jae
dec
inc
push
push
sbb
inc
stos
or
xchg
mov
xchg
sbb
dec
dec
imul
adc
adc
cmpsb
inc
mov
sbbl
hlt
mov
pop
sub
or
js
aaa
aad
adc
aad
sub
sub
or
jge
push
pop
pushf
jle
fsubrp
adc
rcrb
scas
imul
cmp
popf
sti
push
data16
push
mov
sbb
mov
cmp
out
jl
les
inc
pop
mov
subl
cmp
mov
push
push
icebp
int
or
jne
in
xchg
inc
pop
enter
pop
mov
inc
push
push
mov
xorl
inc
jnp
cmp
in
movsw
push
add
push
pop
into
cwtl
or
outsl
sbb
xchg
clc
add
or
xchg
cmp
scas
pop
repz
imul
lcall
xchg
fsub
daa
sub
pop
enter
loope
or
rorb
inc
and
mul
outsl
mov
popf
push
push
dec
sbb
int
cli
pop
sub
inc
jb
movsb
out
or
xchg
mov
mov
adc
enter
cmc
shll
lods
jge
ret
ss
loop
pop
and
fs
mov
adc
pop
dec
cmp
sbb
out
cli
lret
xor
into
mov
jge
lcall
sbb
xor
test
adc
pop
jne
or
add
add
jns
xlat
stos
jl
insb
mov
push
xlat
movsb
loope
sub
aaa
inc
mov
mov
adc
mov
and
loope
loopne
xchg
dec
pop
xlat
cmovb
popa
lock
mov
dec
xchg
xchg
dec
sub
sbb
cwtl
daa
mov
push
sub
jecxz
adc
pushf
scas
adc
cs
mov
aad
mov
jmp
jb
or
dec
mov
cmp
std
das
inc
mov
call
mov
mov
iret
pusha
xor
out
push
fnsave
inc
mov
movsl
jmp
mov
std
push
pop
and
push
add
or
sti
std
jmp
jo
cmpsl
andb
aaa
nop
daa
icebp
scas
je
cld
or
lret
clc
mov
pop
mov
pop
lock
rcrb
or
call
sub
das
daa
aam
pop
es
aam
xor
pop
notl
xchg
xchg
aam
sub
decb
lods
js
xchg
lcall
mov
mov
out
aam
jl
dec
test
les
lcall
clc
xchg
mov
stos
imulb
rcll
movb
sub
out
mov
sub
sti
and
jbe
push
xor
or
xor
cli
mov
xchg
push
dec
imul
ljmp
ja
pop
outsl
dec
stos
inc
ret
inc
mov
inc
fstpl
lret
pop
add
push
push
pop
out
xor
adc
std
cmp
pop
out
xchg
rcll
mov
imul
ret
divb
lods
loopw
mov
mov
mov
mov
mov
inc
dec
lret
mov
jne
stos
lret
pop
in
repnz
sti
xchg
aam
and
xchg
or
fsub
sbb
xchg
sub
or
jl
inc
adc
jne
push
jae
icebp
jnp
mov
jle
repz
in
pusha
arpl
or
call
push
pop
sub
inc
push
iret
mov
push
and
sub
mov
sub
in
xchg
or
push
sbb
or
imul
stc
push
fisubs
adc
dec
inc
mov
xchg
out
mov
hlt
jmp
ret
arpl
inc
sbb
mov
pop
push
xchg
por
enter
sarb
pop
lret
insb
aad
cmpsl
xor
in
dec
sarb
scas
dec
sub
cmp
xor
push
mov
inc
jbe
scas
sarb
into
inc
sbb
jp
daa
cmpb
rol
sbb
fwait
fwait
dec
jl
jl
dec
mov
fmuls
fs
xor
xor
xor
and
sbb
mov
pop
in
jns
addr16
pop
hlt
divb
push
or
loope
sarb
scas
mov
aad
sub
xchg
movsl
sbb
les
out
jno
and
cmp
sbb
out
xor
sti
push
cmp
ret
and
mov
ljmp
push
mov
lcall
call
aas
addr16
mov
jnp
dec
pop
in
insl
sbb
mov
in
sub
ss
repnz
xlat
adc
mov
pop
mull
sub
and
mov
add
insl
push
sbb
push
cs
cwtl
adc
and
jnp
mov
dec
dec
stc
inc
in
fstl
mov
cmp
rorl
loopne
std
pop
lock
sarb
mov
xchg
into
cmp
cmc
loopne
test
in
out
pop
addb
add
adcb
cmp
loopne
mov
lods
push
fstpl
xlat
jecxz
sti
sub
sbb
in
sub
sti
movsb
lods
out
aam
in
aas
cmp
dec
data16
jo
vpaddw
inc
add
push
add
das
xchg
or
or
shrl
dec
jmp
jp
adc
push
cs
dec
push
aad
and
nop
aas
sub
jb
cld
adc
pop
jecxz
lods
and
xor
lcall
fcmovnbe
mov
rorl
dec
pop
mov
lock
loope
inc
inc
sub
pop
inc
xchg
das
cmp
mov
mov
daa
and
lock
pop
jge
test
cmp
nop
icebp
mov
cmpsl
cmp
in
xchg
cld
ss
add
push
mov
mov
pop
sub
sub
and
jno
arpl
adc
xlat
rorl
cmc
sub
adc
push
ljmp
ret
push
lock
mov
inc
aad
push
in
xchg
nopl
add
mov
cltd
mov
xor
cwtl
in
pop
es
sub
push
fildl
fstps
jmp
mov
fs
sbb
xchg
repz
pop
mov
adc
out
or
push
sbb
jae
mov
push
or
dec
sarb
jns
out
lods
xorl
insl
cli
inc
push
jle
or
mov
fwait
push
mov
cltd
add
outsb
push
mov
adc
bound
jnp
inc
cmp
mov
jge
mov
arpl
pop
mov
sub
jp
dec
jns
fcoml
insb
mov
jmp
xorl
test
adc
cmpsl
frstor
xchg
aad
insb
andl
imul
adc
pop
push
adc
stos
inc
rcr
and
std
jnp
cmpl
pusha
xor
ret
popa
pop
popa
or
out
jae
mov
xor
lock
pop
fisubl
cmp
xchg
imul
add
cli
or
lods
or
mov
sub
leave
data16
outsl
out
arpl
imul
jmp
push
push
inc
std
or
jns
int3
push
xchg
or
cli
push
loopne
xor
xor
imul
scas
sub
dec
cmp
jae
movsb
gs
rcll
orl
fs
sbb
shrl
cmp
push
jl
or
dec
pop
subl
push
xor
jo
outsl
mov
cmp
jl
jnp
pop
mov
nop
inc
sub
cmpsb
pushf
stos
std
in
pusha
cmpsb
and
pop
xor
add
loope
push
nop
sub
lret
or
push
movsl
and
int3
and
sbb
xor
lods
sbb
mov
xor
push
mov
jge
js
in
pop
imul
fdivrl
loope
sub
lds
ret
cld
adc
jle
mov
add
mov
and
sbb
push
imul
cltd
clc
sub
push
or
pop
in
rcrl
sbb
push
sahf
cmp
test
insb
cmp
inc
outsl
addl
stc
sbb
clc
fcoml
cmp
ss
dec
jp
scas
orb
lds
cli
xor
scas
xor
adc
idivl
pop
aad
into
pop
xlat
cmc
cmpsl
lock
inc
mov
adc
xchg
inc
adc
dec
jg
outsl
aam
fstpl
push
mov
iret
sub
xor
in
xchg
push
push
sti
push
or
gs
repz
sub
dec
lds
dec
inc
fadds
jp
popa
lock
xchg
iret
jns
sbb
push
lret
push
xchg
adc
dec
lret
xor
jmp
shrb
add
dec
jmp
nop
sbb
mov
jb
inc
sbb
mov
xchg
inc
jecxz
jns
xor
add
call
xor
mov
aam
dec
pop
into
fistl
into
enter
fildl
dec
lock
sbb
mov
and
and
dec
testb
sar
aaa
bound
cwtl
fnsave
cmpsl
orb
mov
pop
inc
cld
popa
pop
xchg
lret
movsl
mov
addr16
mov
xchg
push
cmp
inc
add
in
and
fnstcw
sbb
repnz
es
mov
stos
dec
and
mov
ljmp
xchg
lods
dec
add
mov
loopne
shll
in
push
push
out
cmp
std
lods
add
inc
lock
jge
cmp
fstl
clc
cld
pop
mov
mov
roll
mov
nop
stos
lods
enter
or
mov
xchg
mov
add
or
inc
xchg
mov
push
test
dec
cmp
fisubrs
xorb
inc
call
sahf
stos
fwait
cmp
push
cmp
mov
out
lock
jno
stc
inc
jns
sbb
in
test
xchg
pop
sbb
add
cmpsb
pop
insb
andb
dec
cmp
sbb
mov
dec
xchg
psubusb
in
mov
mov
mov
jp
cli
jmp
mov
popf
jp
push
jle
sub
add
jg
ret
stos
mov
js
mov
mov
stos
aas
or
jp
in
mov
iret
je
push
ret
xor
mov
mov
xor
push
mov
negl
sub
in
fsubrs
scas
sbb
add
scas
jne
bound
cmc
repz
shlb
leave
fldl
hlt
adcl
inc
mov
ds
jmp
std
cmp
scas
xchg
roll
pop
sbb
mov
aad
lret
popa
shrb
jecxz
int3
stc
mov
movsb
lock
fcoms
mov
adc
mov
sbb
push
icebp
daa
subb
dec
xchg
loop
imull
dec
mov
add
jo
and
push
dec
lret
hlt
test
mov
sub
cmpsb
pop
repz
inc
scas
mov
and
sub
xchg
in
loope
cld
jb
test
es
sub
and
pop
mov
addb
lock
iret
dec
xor
addr16
orl
js
out
testl
gs
dec
push
insb
aad
fsub
sti
subb
lret
scas
inc
adc
sahf
push
and
add
pop
mov
loope
mov
inc
mov
xchg
push
addr16
pop
ret
insb
jp,pt
test
xor
loope
or
shll
in
mov
cltd
hlt
sbb
in
fimuls
pop
adcb
xchg
into
ss
int
stc
aam
outsb
rep
mov
xchg
mov
pushf
data16
vmaxsd
cli
arpl
mov
cmp
adc
or
xor
add
enter
insl
xor
dec
jae
fs
imul
insb
cmpsb
add
test
shrb
jg
and
popa
hlt
inc
sub
outsl
mov
xor
sti
add
inc
sbb
dec
adc
loopne
popf
dec
and
xchg
inc
jmp
out
fnstenv
das
and
mov
dec
mov
cmp
cmp
out
std
pop
xor
jns
bound
cmp
call
cs
push
popa
aad
sbb
nop
cmc
leave
jmp
jb
xor
sbb
cld
je
mov
int
cmp
and
cmpsb
sub
mov
dec
ret
mov
jp
dec
xor
cmc
fcmovnb
sbb
daa
les
inc
ss
inc
mov
inc
adc
xchg
xor
mov
ss
psrlq
icebp
ret
notb
idiv
fidivs
ret
stos
jle
rcl
inc
icebp
xor
stc
cld
mov
ror
ret
sbb
mov
xor
lock
ret
push
lcall
cwtl
sbb
es
xor
dec
push
addr16
jmp
ljmp
in
mov
fiadds
mov
scas
shl
mov
fcompl
and
dec
test
dec
fidivs
fnstsw
arpl
aaa
insb
imul
xchg
cmp
fsubrs
stos
fwait
cmp
fistl
mov
sbb
xor
pop
xchg
xor
bound
xchg
push
dec
mov
ret
mov
dec
test
aaa
inc
jg
add
insb
out
rcrl
mov
adc
mov
jp
out
iret
push
arpl
in
popf
jns
lahf
xor
mov
adc
mov
mov
mov
daa
mov
addr16
cmp
loopne
mov
ret
aaa
insb
adc
je
out
jne
xchg
in
mov
fs
fisttps
insb
xchg
dec
out
jmp
imul
mov
xor
std
push
push
push
add
pushf
stos
sub
or
mov
dec
jae
pop
shll
push
cmpsl
push
pusha
bsr
shll
ret
mov
inc
jb
or
and
jo
je
fistpl
data16
inc
cmpsl
and
fimull
mov
sbb
cmp
imul
scas
fmul
inc
push
mov
inc
adc
in
pop
mov
repnz
cli
xlat
leave
push
std
fxtract
int3
xchg
aas
mov
or
fs
aaa
sarl
xchg
or
pop
pop
pop
iret
dec
fidivrs
lds
jecxz
scas
out
dec
and
push
cmp
fbld
cmp
je
mov
jbe
sbb
shr
jg
mov
push
stos
jno
ret
and
push
or
arpl
jo
call
rclb
ja
test
jle
xor
test
in
cs
jnp
sbb
fistl
mov
adc
out
cld
loope
xchg
sub
push
ds
in
clc
movsl
xor
and
movb
sbb
add
or
dec
inc
cli
inc
pop
lahf
mov
aad
roll
addr16
mov
sbb
fmull
and
adc
sarb
cmpsl
jg
leave
mov
hlt
popf
mov
popf
fidivs
ljmp
rol
pop
sub
inc
jg
mov
add
ror
movsl
mov
sahf
cmpl
outsl
aas
pop
xor
stc
mov
sub
mov
and
ss
mov
fadds
popf
out
mov
cmp
mulb
jecxz
dec
jnp
or
lock
in
nop
cmc
xor
or
pop
fbstp
pop
adc
or
imul
loope
add
pop
cli
lods
or
jo
jp
mov
mov
add
in
imul
mov
gs
xchg
sbb
fsubl
icebp
dec
addl
fldl2e
mov
les
fcomi
xchg
mov
push
xchg
cmpsl
sbb
test
pop
in
adc
cmpsl
pushf
jmp
popf
ja
mov
pop
aad
test
or
sub
arpl
push
cmpsb
dec
nop
mov
mov
fnsave
cmp
adc
and
mov
adcl
xor
pop
lret
inc
mov
dec
xchg
das
xlat
rol
mov
fnstcw
and
mov
rorl
mov
xchg
mov
std
test
jo
push
iret
insl
cmpsl
jle
jecxz
add
dec
icebp
or
int
mov
xchg
mov
xchg
fnsave
repz
xlat
pop
xchg
add
aam
mov
pop
pop
es
insl
and
fimull
jle
xchg
rcrb
sub
lcall
cmp
add
and
and
testb
cmp
cltd
pop
repnz
out
push
cmpsb
jnp
frstor
push
sub
cmpsb
pushf
pop
sbb
bound
out
and
gs
stos
mov
out
inc
mov
xchg
enter
addr16
push
jle
xor
shlb
xor
xlat
sbb
xchg
dec
pop
add
ja
outsb
pop
dec
ja
sahf
inc
push
mov
or
inc
leave
fwait
fwait
cmp
push
scas
pop
add
mov
out
in
adc
jns
enter
mov
lret
mov
add
mov
loop
inc
addr16
mov
aaa
dec
mov
push
cmpsl
mov
jo
orb
hlt
jne
scas
lock
cmp
outsb
xchg
xchg
and
loope
in
dec
xchg
ss
adc
aad
and
insb
sub
clc
xchg
nop
push
inc
cmp
popf
test
and
pop
shrb
jnp
pop
mov
dec
rol
in
pusha
stos
lret
mov
xor
sub
inc
jge
es
and
push
aaa
addr16
mov
ja
es
fidivrl
pop
je
and
mov
sbb
imul
cmp
push
cli
pop
adc
mov
and
leave
lret
pop
test
pop
adc
arpl
repnz
mov
sbb
push
nop
cli
repnz
jl
adc
aam
xchg
mov
sbb
lds
enter
je
scas
pop
and
scas
popa
cmp
sti
lea
sti
jle
mov
fnstcw
and
sbb
ljmp
notl
xchg
jl
movsl
add
jl
push
lock
mov
leave
inc
push
cmc
push
or
dec
mov
inc
fadds
cwtl
cmpsb
and
insl
repz
pop
lock
cld
loope
mov
sub
negb
ds
popa
cli
and
hlt
subb
sbb
leave
lahf
add
lahf
add
add
pop
sbb
pop
mov
gs
shrb
test
lcall
sub
cmp
cmp
je
nop
adc
push
aaa
dec
jg
cmc
mov
mov
sub
and
rolb
pop
int3
push
int
xor
mov
lret
dec
shll
mov
adc
sbb
fnstsw
add
and
push
repnz
sbb
stc
inc
pop
jb
or
mov
and
lcall
mov
jg
cli
leave
out
xor
orl
test
imul
cmp
cld
sahf
xor
adc
sbb
adc
ja
imul
stos
popa
add
and
mov
adc
fists
mov
aam
xor
pusha
mov
pusha
mov
int3
loopne
mov
sub
fldenv
in
les
or
xchg
sbb
and
cmp
into
push
pop
cwtl
loope
adc
push
cmp
cs
sub
dec
nop
stos
mov
sub
dec
movsb
jle
pop
ljmp
aad
movb
xor
mov
pushf
lds
mov
iret
int3
dec
or
cmp
push
push
cltd
pop
insl
mov
inc
outsb
add
repz
mov
test
nop
and
and
mov
add
fcomps
std
sub
xor
jge
push
ss
icebp
loop
jl
loop
outsb
lret
and
mov
sbb
into
nop
in
dec
ja
pop
cmpsb
inc
adc
sub
jmp
ret
lahf
jnp
es
into
insl
or
xor
xchg
popa
add
lods
in
mov
dec
pop
out
and
mov
add
add
shlb
gs
mov
xor
push
imul
pop
clc
lods
rolb
sbb
sbbb
stos
jns
cltd
out
movsl
adc
inc
push
inc
std
iret
call
xor
add
mov
xchg
add
outsb
popa
test
sub
ja
xchg
stc
dec
push
je
lods
mov
lods
fwait
lret
push
testb
xor
fisubl
jle
lea
bound
xchg
lahf
in
mov
sbb
testb
fnsave
jp
inc
xorl
fbld
sbb
sub
fisttps
rclb
push
adc
cmpsl
js
sub
repz
mov
and
imul
mov
imul
out
pop
iret
xchg
rcrb
pop
cmp
pop
mov
sbbl
fdivl
push
fadds
xchg
mov
sub
imul
scas
sahf
pushf
fs
inc
aas
iret
adc
ret
cltd
nop
scas
bnd
aam
inc
pusha
ret
lock
arpl
mov
or
pop
imul
add
mov
pop
mov
push
mov
in
insl
rolb
lret
scas
movsl
repz
and
jno
movsb
xchg
pushf
push
inc
add
cli
mov
dec
sbb
daa
jge
xchg
cmp
shrl
into
or
js
in
dec
fildl
movsl
push
rcll
xor
cld
mov
lahf
mov
cmc
push
enter
cmp
push
adc
cmp
lds
in
cld
and
pop
das
sbb
int
pop
loope
lret
lds
cmp
inc
sarl
movsl
jnp
inc
rcll
and
mov
cmpb
mov
sub
jg
jmp
xor
shlb
gs
fstl
js
xchg
gs
jb
jle
sub
shrl
jno
pop
outsb
xlat
and
mov
stc
shrb
enter
and
mov
mov
mov
shlb
and
jg
int
xchg
sub
inc
inc
negl
xchg
arpl
jecxz
xchg
clc
in
sbb
sahf
pop
sahf
icebp
jle
mov
andb
outsl
std
mov
loop
adc
fs
ret
je
or
imul
jp
out
lds
cli
cld
dec
je
movsb
add
cmp
leave
int3
or
sbb
ret
dec
dec
xor
or
lock
leave
push
add
out
lods
pop
mov
jo
out
xlat
push
stos
in
sub
popf
xchg
mov
aas
mov
call
gs
xchg
loopne
sub
in
pop
inc
and
mov
les
mov
fildl
cmp
xchg
movsl
lahf
pop
dec
std
sub
addr16
fs
mov
lret
jns
cs
mov
aad
clc
call
imul
je
mov
int
inc
xor
call
cs
push
mov
mov
dec
cmc
sub
pop
adc
inc
lret
inc
outsb
inc
push
xchg
push
das
xchg
add
mov
xlat
inc
push
shl
sahf
test
std
rorl
cwtl
leave
jbe
cmpsl
jl
add
mov
jg
lret
xchg
scas
nop
mov
xchg
je
xchg
push
mov
test
icebp
mov
sub
popf
dec
ret
loopne,pn
es
fisubrs
xor
xchg
dec
test
push
in
cmp
rcrl
or
mov
les
mov
stc
mov
loope
movb
jo
mov
sub
rcr
lock
mov
call
xchg
pop
inc
loope
pushf
pop
aam
mov
xor
out
or
xchg
push
sahf
gs
sbb
fidivrs
or
xor
mov
push
xchg
cmpsl
dec
aad
sbb
push
mov
xchg
shr
inc
out
or
ds
stc
and
dec
arpl
add
lcall
adc
repz
add
pop
xchg
fwait
jae
mov
or
pop
adc
jno
push
add
mov
adc
popa
jne
dec
cmpb
das
nop
jne
pop
mov
lods
pop
xchg
jnp
jmp
int3
ja
xor
insl
out
mov
sub
out
inc
xor
addr16
adc
and
xlat
xor
pop
jnp
ficoms
xchg
mul
in
jb
pusha
loopne
pop
iret
lock
pop
je
clc
inc
xchg
inc
loope
lea
adcb
enter
lahf
mov
and
test
xchg
adc
sbb
loopne
imul
add
sti
push
mov
jmp
hlt
loope
mov
enter
mov
and
inc
ret
test
fsubrs
fisttps
push
or
add
lock
ljmp
fisubs
jmp
push
ja
rcrb
ret
scas
test
cmp
push
mov
jbe
cli
stos
jge
and
sbb
cmp
xor
add
fdivrl
jae
dec
dec
popa
push
mov
and
push
mov
lahf
aam
ficoml
mov
test
fists
xchg
inc
test
cmpsb
sub
lods
enter
pop
outsb
adc
push
sbb
sub
lea
jae
mov
outsl
xchg
movsl
inc
test
orl
pusha
add
mov
cld
lea
pop
js
loopne
pop
in
in
xor
daa
push
enter
nop
scas
and
outsb
cmp
adc
or
jg
pop
sbb
aaa
jecxz
mov
lods
shll
nop
or
cmpsb
popa
int
mov
and
fnstsw
lret
inc
sbb
jge
push
imul
fsubl
push
stc
mov
jno
pop
movl
cmp
xor
cs
das
mov
jnp
pop
cmp
scas
lds
xchg
test
mov
imul
out
pop
cmp
popf
adc
mov
out
add
jo
data16
fnstsw
lods
mov
jo
xlat
pop
inc
push
sub
cld
in
stos
jecxz
sti
mov
fsubr
imul
dec
mov
ljmp
cwtl
jae
repz
dec
cs
sahf
sub
sbb
xor
push
pop
dec
mov
mov
mov
jmp
or
stos
mov
nop
popa
stc
jge
or
sahf
jb
out
dec
cmc
cmp
je
sbb
jecxz
jno
movb
add
or
jae
add
dec
loopne
popa
fstpt
pop
mov
mov
subl
je
fisubs
push
outsl
and
sbb
xchg
negb
scas
std
jp
adc
jnp
pushf
mov
nop
dec
ja
cmp
je
cmpsl
call
lock
stos
pop
in
pop
rolb
cld
sub
sub
mov
xor
insl
xlat
mov
bound
jns
mov
mov
gs
sbb
lock
mov
pop
jns
add
cltd
std
data16
jnp
mov
mov
dec
fstl
out
clc
and
sbb
shl
mov
pop
xor
out
imul
push
clc
inc
and
iret
xchg
adc
out
popf
or
enter
das
push
mov
test
test
loope
ja
gs
push
and
inc
sbb
js
fwait
sub
movsb
add
adc
or
dec
mov
bound
sbb
in
enter
jo
mov
mov
ds
adc
fildl
jne
out
sbb
mov
sbb
mov
xor
lret
faddl
xchg
cltd
push
jmp
xchg
adc
adc
xor
jmp
inc
lea
push
push
insb
pusha
test
jnp
jo
jle
ja
in
sarl
pusha
jnp
pop
iret
dec
dec
int3
ret
lret
sub
jae
or
popf
add
inc
mov
mov
js
xchg
imul
imul
jae
fs
push
iret
mov
leave
mov
sbb
mov
hlt
clc
test
arpl
pop
inc
out
or
push
ljmp
insl
lea
loope
test
aad
mov
fiadds
push
lds
mov
add
stos
les
movsb
cmpsl
mov
jbe
nop
jge
jns
sbb
cmp
jnp
les
ss
and
in
jno
into
mov
dec
mov
xor
xor
mov
setg
fists
cs
test
stos
inc
push
inc
test
or
lret
enter
pop
lods
outsl
push
mov
xor
cmp
add
and
jp
dec
jecxz
and
decl
gs
xor
add
dec
test
jo
stos
push
xor
sub
pop
arpl
lcall
fdivrl
in
push
outsb
popf
sbb
shl
and
pop
mov
inc
loopne
scas
xchg
mov
inc
pop
and
inc
inc
int
aad
sub
mov
negl
faddp
mov
mov
pop
sbb
fstps
xchg
xchg
outsl
mov
cwtl
out
stc
addr16
stos
pop
or
adc
or
icebp
cld
fidivrs
lock
shl
fstpl
cli
bound
xlat
xor
fnstcw
addr16
cmc
push
inc
into
jno
loopne
push
rcll
imul
push
adc
sub
std
add
add
or
out
inc
lods
movsb
bound
xlat
pushf
arpl
sub
and
in
adc
inc
mov
leave
sarl
loopne
cld
and
inc
dec
into
jns
dec
mov
ret
push
cltd
xchg
popa
inc
test
jo
jae
fidivs
pop
mov
fcoms
adc
jle
jmp
gs
cs
sbb
aad
popf
nop
cmp
icebp
aas
cmpsl
xchg
daa
jb
xchg
dec
insb
push
fnsave
inc
jecxz
mov
lea
aad
or
in
xchg
mov
incb
lret
xchg
fldt
faddl
inc
fldenv
insb
inc
inc
cs
das
push
ds
mov
mov
and
roll
sbb
and
pop
cmpsl
jp
daa
mov
addr16
cld
arpl
fmull
and
daa
lock
pushf
lcall
add
rcl
jg
sub
incl
es
ja
mov
mov
shr
xor
popa
inc
ja
lods
rorb
mov
mov
lret
test
mov
mov
dec
add
xchg
cltd
xor
clc
test
mov
push
mov
fnstsw
jae
clc
pop
mov
std
sbb
sub
pop
adc
cmp
out
into
negl
push
rorl
add
outsb
dec
mov
or
push
mov
push
xlat
repnz
fwait
mov
dec
inc
xor
orb
repnz
push
sbb
push
addb
mov
movsl
bound
mov
mov
outsl
lret
cmp
xchg
fnstsw
pop
into
push
pop
ficoml
dec
jp
pushf
xchg
mov
movsl
mov
mov
mov
jne
icebp
jl
xchg
push
add
ljmp
jmp
bound
dec
adcl
ret
out
xchg
sub
in
ficoms
movsb
lock
imul
sub
and
jle
in
pop
in
cwtl
and
into
mov
ret
mov
inc
test
xor
popf
sub
loopne
lea
add
fimull
push
xchg
pop
jp
and
sub
push
or
sub
jbe
cmp
outsb
and
leave
cmpsl
inc
ss
inc
sbbl
add
or
lret
mov
mov
sub
int3
rol
pop
inc
outsb
adc
cmpsl
xchg
jo
sbb
mov
push
and
and
mov
cmp
sub
movsb
xor
push
sub
or
jge
mov
sbb
xchg
inc
cmp
shll
sarb
dec
sub
in
push
jl
cmp
or
sahf
cmc
push
inc
fdivp
test
jne
jge
adc
push
cmpsb
xor
in
mov
pop
enter
pop
in
nop
arpl
adc
push
sub
je
cmp
mov
push
adcl
cmpb
sbb
dec
in
or
push
xor
cwtl
movsb
adc
jae
push
mov
cld
push
int3
pop
loop
mov
push
jbe
add
out
cld
sub
push
inc
outsb
add
adc
shl
jg
lret
lock
pop
clc
mov
ss
and
push
loop
ror
sub
lret
push
sarl
stos
sbb
pop
sahf
mov
scas
test
xor
outsl
lcall
stc
push
lods
ljmp
insb
in
ss
cmpb
subl
scas
hlt
cli
xchg
mov
xor
popa
in
cmp
cmc
dec
or
into
push
loope
cmc
sbb
or
cmc
lahf
adc
jp
mov
sbb
add
mov
jb
mov
mov
inc
xlat
fildl
lds
xorb
in
ret
ja
lret
in
dec
pop
scas
stos
inc
pop
out
fscale
or
les
mov
pop
sbb
stos
cmp
loope
popa
pop
fs
adc
pushf
mov
fucomip
cltd
adcl
nop
pop
mov
jb
stc
adc
je
iret
jecxz,pn
jle
dec
mov
pop
call
imul
mov
pop
addl
out
fidivrl
mov
mov
and
inc
pop
cltd
mov
xor
lahf
mov
insb
sbb
and
int3
mov
mul
xchg
test
cwtl
cli
inc
xor
add
icebp
adc
mov
lret
filds
je
ljmp
pop
and
sahf
sub
scas
adc
es
mov
add
push
ljmp
inc
lods
cmp
jmp
test
push
aad
add
sub
and
push
add
add
xchg
test
psubsb
les
fsubl
clc
cltd
mov
and
sbb
pop
shll
pop
jl
xor
sub
push
scas
loopne
decl
mov
sti
xor
push
outsl
mov
imul
test
call
daa
dec
ss
call
or
push
pop
push
cmpb
add
inc
outsl
mov
int3
out
jns
das
in
and
mov
pusha
mov
jne
mov
mov
loopne
fldcw
mov
xchg
movsl
lahf
mov
fwait
movsb
test
jne
sti
outsl
mov
nop
pop
fisttps
aad
xchg
aas
in
jmp
sub
xchg
mov
mov
pusha
sub
fildll
nop
stos
fcoml
insb
ss
inc
jnp
filds
in
shll
or
and
mov
jae
mov
or
enter
mov
out
xchg
pop
jo
sbb
stc
outsb
imul
aaa
scas
sub
fistl
test
lods
repnz
push
fdivp
mov
arpl
mov
mov
inc
mov
dec
or
in
add
jle
int3
stos
sbb
inc
rcr
mov
mov
insb
jbe
scas
and
and
cmpl
mov
ret
das
jbe
mov
pop
sbb
xchg
daa
jns
lcall
fldt
dec
xchg
les
dec
pop
pushf
jo
xor
lahf
xor
or
adc
mov
inc
movsl
gs
mov
sahf
jo
cwtl
enter
pop
sub
nop
push
and
sub
and
lds
xchg
pop
sub
js
fimull
mov
addr16
sub
pop
fcom
test
pop
jns
jno
aaa
addr16
pop
popa
stc
lret
lcall
xor
xchg
out
sub
sbbb
add
jg
or
mov
cmpsb
mov
push
push
insl
shrl
cmp
daa
sbb
scas
inc
xchg
rcll
xchg
ficompl
sahf
adc
sahf
push
int3
push
adc
xchg
outsl
jns
mov
stc
aad
lea
adc
sub
out
fsubs
mov
pop
add
in
add
cmp
push
cmp
shll
ja
pop
xor
jne
pop
cltd
cmc
adc
mov
in
xchg
mov
out
loop
cmc
jne
lods
jb
mov
pop
xor
xlat
sbb
sub
aam
in
jmp
call
decb
cmpsb
mov
jle
inc
loopne
loope
dec
mov
xor
xor
sbb
mov
xor
xchg
out
mov
out
out
pusha
daa
pop
pop
pop
je
adc
ltr
popa
pushf
fdivrl
aad
inc
insl
nop
repnz
imul
xchg
mov
push
stc
dec
pop
jge
je
sub
and
dec
sahf
fmuls
add
push
sub
dec
sbb
xor
fisttpl
jae
pop
pushf
sub
inc
jp
es
adc
mov
add
dec
mulb
test
std
outsl
negl
mov
cmpsl
js
sarb
adc
fistpll
lret
dec
stc
testl
adc
sarb
jecxz
xchg
lahf
rcl
mov
ret
push
push
es
inc
insl
mov
cmp
rorb
popa
jne
jp
cmpsb
lods
adc
clc
je
and
pcmpeqw
call
cltd
mov
shl
cmc
scas
xchg
push
cmp
fisttpll
roll
and
aaa
sar
sbb
addr16
lret
out
xchg
push
sahf
xchg
jb
lods
push
mov
xchg
ljmp
inc
or
cs
jnp
mov
outsb
loopne
dec
jno
cwtl
test
lret
jp
iret
dec
sub
inc
mov
sbb
pop
push
and
or
dec
out
call
inc
mov
mov
ftst
test
xor
mov
subb
inc
call
mov
mov
leave
aas
mov
or
inc
jne
push
mov
ficomps
sub
xchg
adc
jmp
clc
fidivrs
out
sub
sub
ficompl
pop
stos
dec
out
and
and
adc
and
shl
orl
iret
insb
sbb
ret
dec
pop
push
pop
filds
scas
jae
push
popf
push
leave
sti
hlt
popf
jbe
sbb
inc
and
fidivl
inc
xchg
outsb
mov
imul
push
scas
lret
movsb
fildll
adc
movswl
push
leave
xchg
or
mulb
flds
pop
fimull
roll
or
flds
cmpsb
orb
mov
xlat
cltd
lds
test
xchg
scas
add
mov
cmp
in
movsb
dec
or
push
lret
sbb
insl
jge
aad
sbb
movsb
out
js
mov
jno
or
jl
cmp
push
pop
sub
inc
push
add
ret
test
lahf
push
and
test
or
test
mov
in
jg
xchg
clc
dec
notb
push
in
or
push
loope
inc
loope
fsubrl
cltd
mov
call
and
xor
movsb
scas
xor
sbb
arpl
xor
fnstenv
pop
mov
adc
lcall
sub
cmp
xlat
sub
mov
adc
jbe
inc
jg
dec
les
adc
dec
and
out
insl
push
jo
adc
movsb
jns
sub
dec
pop
lret
lret
mov
inc
sbb
pop
mov
test
sub
pop
mov
adc
mov
lock
sub
mov
mov
out
fists
cli
sti
roll
xor
test
cmp
mov
into
sbb
cmc
cmpsb
xchg
jp
out
mov
inc
xor
sahf
pop
adc
dec
jnp
jbe
test
cmp
lods
pop
sbb
mov
jl
pop
scas
sub
hlt
movsb
mov
push
aad
sti
jp
sub
xor
test
or
sbb
js
sbb
xchg
inc
xorl
notl
stos
inc
inc
sbb
and
fists
repz
push
pushf
pop
push
jge
ja
sbb
aas
cwtl
cmp
xchg
pop
nop
int
sarl
test
inc
jb
fsubrl
roll
cltd
jecxz
lcall
sahf
es
mov
mov
mov
test
xorl
dec
fstpt
imul
shll
outsb
push
loop
xchg
stos
and
lock
sub
insb
or
lret
dec
shll
test
push
or
cwtl
jo
mov
mov
in
imul
in
mov
mov
cmp
js
xchg
lock
lret
pop
pusha
mov
pusha
sub
pop
add
rcrb
stc
push
pop
insl
jae
ret
dec
testb
mov
stc
ljmp
mov
adc
into
mov
out
jmp
paddq
lods
cltd
test
xchg
fists
jae
fnsave
fimuls
xchg
pop
fwait
sbb
mov
rorl
aas
pop
adc
mov
adc
out
imull
xchg
mov
lret
dec
xchg
xor
xor
jo
mov
bound
jno
pop
dec
fcoms
test
aas
cmp
cmp
dec
sbb
and
shlb
out
or
enter
lock
out
push
enter
pop
jns
aad
in
lret
push
xchg
es
movsb
mov
add
mov
decl
outsb
jp
dec
mov
mov
jns
aad
mov
jne
cmp
pusha
filds
repz
in
mov
movsl
jbe
xchg
ret
lret
mov
test
xchg
or
xchg
faddl
ret
and
jp
or
push
jnp
pop
gs
add
in
aas
inc
pusha
out
sbb
lret
push
ret
dec
pop
xchg
sub
dec
js
mov
mov
inc
lahf
sbb
fisubl
daa
mov
sbb
fcoms
scas
lock
push
jmp
pop
adc
lods
out
mov
addr16
leave
or
adc
and
push
inc
shlb
or
cmp
mov
or
leave
and
cmp
inc
insb
pop
shlb
stc
ficoms
add
shlb
fsubs
testl
ret
movsb
rcr
sbb
jbe
test
into
out
dec
daa
ja
xchg
cmp
out
jno
pop
inc
jl
push
aaa
dec
jne
jg
and
rcl
jo
jmp
lahf
outsl
addr16
push
mov
lret
push
mov
call
mov
enter
pop
test
push
xor
xchg
xor
cmp
mov
lods
scas
ljmp
xchg
lret
jg
xorb
push
add
into
aas
xor
or
enter
dec
lods
pop
pop
nop
gs
push
fsub
das
jle
or
outsb
sub
and
push
roll
mov
test
xlat
cld
lods
and
xchg
gs
jae
add
or
mov
negl
movsb
sub
subb
pop
fcompl
sahf
cltd
jno
test
pop
sti
outsl
aaa
insl
loop
cmp
xor
inc
movsl
into
fs
leave
stc
adc
push
cmp
fcompl
aaa
cli
outsl
sbb
cmp
xchg
fmuls
mov
aam
std
and
xor
aaa
clc
pop
xlat
add
adc
and
adc
pusha
cltd
add
je
lods
inc
and
inc
lods
xlat
cwtl
add
sub
mov
shll
sti
sub
shll
mov
insb
dec
jnp
inc
xchg
mov
iret
sub
repz
xchg
insl
sub
or
pop
adcb
jno
dec
pushf
mov
pop
jmp
insl
add
mov
inc
out
nop
test
xchg
aas
and
cmpsb
dec
dec
xor
je
aam
jecxz
push
fwait
push
mov
push
stc
mov
mov
xor
movsl
orl
xor
mov
inc
cmc
xchg
mov
cmp
iret
jmp
or
and
dec
jnp
shll
lods
mov
mov
cmpsl
jbe
cmpl
into
mov
js
bound
aas
sub
dec
pop
jg
and
and
inc
sub
jb
mov
iret
inc
es
lret
insl
pop
iret
test
add
in
ljmp
push
mov
ds
adc
sti
stos
xchg
rdpmc
push
add
mov
mov
xchg
mov
jne
fisubrl
clc
dec
data16
sbb
insl
mov
or
add
adc
pop
jge
xchg
add
mov
ljmp
or
xor
fldl
dec
aas
in
lea
clc
sti
jmp
inc
into
shll
fwait
adc
je
ja
inc
add
push
shlb
cmp
in
sbb
xchg
mov
div
mov
mov
jge
jp
inc
pop
mov
jge
mov
call
mulb
push
je
mov
mov
fbld
jmp
mov
popa
push
xchg
mov
daa
orl
cmp
jecxz
mov
xor
push
cmp
stos
xor
pusha
mov
jnp
les
in
xchg
inc
pusha
adcb
iret
sub
mov
mov
add
andb
dec
int
popf
les
mov
push
leave
or
aam
xchg
sbb
nopl
xchg
imul
movsl
scas
push
out
aam
xor
adc
inc
add
mov
push
fsubl
rcrl
aad
mov
push
mov
hlt
add
icebp
mov
insb
push
js
decl
fidivs
jmp
lds
in
sarb
mov
cmp
sbb
movsb
pop
pop
cli
push
imul
dec
sbb
sbbb
xor
int
jl
mov
dec
in
xchg
push
or
xchg
jo
gs
lahf
mov
fisubrs
mov
xchg
cmpsb
cmp
add
enter
pop
call
jp
loope
aas
mov
cmp
xor
dec
pop
and
xor
lods
or
add
add
xor
xor
pop
push
sarb
fadds
fisubs
pop
push
sarb
fcoml
mov
pop
adc
sub
imul
mov
divb
jns
push
jbe
insl
int
mov
sub
xor
push
int
lret
faddp
sbb
das
mov
xchg
sbb
xor
xor
cmp
data16
loop
js
stc
cli
aas
dec
fs
pop
adc
pop
add
xchg
push
cmp
push
pop
add
popa
shlb
subb
and
into
loopne
jle
xor
push
xor
mov
pop
testb
imul
adc
data16
xor
dec
sub
xlat
xlat
mov
sub
push
push
in
sub
js
fadds
mov
loopne
dec
lock
out
test
outsb
dec
fidivl
dec
xchg
xor
inc
cmp
repnz
adc
mov
pushf
pop
lods
dec
jmp
cltd
cmp
add
pop
dec
nop
sbbl
jb
mov
dec
mov
sub
push
testb
dec
mov
je
mov
mov
les
dec
out
push
fistl
enter
sbb
inc
lret
or
pop
mov
dec
push
mulb
sbb
rcll
sub
lock
add
out
mulb
into
and
cld
cmp
insb
mov
nop
loope
push
scas
and
pop
sahf
cmp
idivb
sub
push
aam
mov
ret
pop
adc
jmp
lods
dec
in
push
test
pop
clc
loope
sub
punpcklwd
ja
mov
popa
lea
mov
xchg
cmp
mov
test
sub
push
xor
mov
xchg
insl
insl
sar
cwtl
xor
stos
icebp
ljmp
inc
rcll
add
decl
cmpl
mov
das
xchg
inc
dec
cmpsb
insb
push
test
out
ja
aas
cmp
inc
gs
sbb
data16
push
push
outsb
add
mov
imul
test
jns
or
in
les
hlt
test
loope
xor
jne
mov
and
jp
in
adc
in
rorb
push
cwtl
dec
jne
setl
test
daa
xchg
mov
jmp
pop
sahf
lods
sbb
or
mov
mov
or
repnz
ja
sub
and
xchg
jnp
out
test
cmp
xchg
dec
popf
pusha
sbb
adc
ret
mov
cmc
push
std
inc
loopne
sbb
add
popf
jmp
mov
inc
popf
std
in
fimull
imul
imul
and
push
jns
cs
lock
mov
or
mov
arpl
sbb
inc
fcomp
orl
dec
xchg
aaa
inc
cmc
jmp
pop
pop
addl
pusha
jp
push
mov
in
loop
lds
adc
scas
popf
cmp
and
das
ja
jmp
jbe
sbb
sbb
daa
jne
aaa
cmp
sub
data16
shlb
rorl
push
push
jmp
sbb
push
pushf
jo
repz
lahf
lods
add
pusha
pop
sbb
insb
push
sbb
imul
in
xor
ljmp
push
aaa
push
push
outsb
loope
jb
sub
xor
cmp
jbe
repz
pop
movsl
js
pop
and
mov
shrl
adc
jmp
jecxz
pop
add
xchg
dec
mov
mov
adc
mov
pop
pop
aaa
popf
lcall
fdivrl
mov
sti
adc
pop
pop
push
jg
xor
adc
mov
push
insl
iret
lods
and
movsb
lock
jns
test
fldenv
pop
sub
dec
notl
push
push
lret
sbb
mov
daa
mov
inc
rcrb
pop
enter
out
test
bound
cmpb
lret
outsl
cmc
fcomps
popa
push
sub
mov
dec
fs
push
leave
adc
pop
leave
ss
cmp
push
aaa
out
push
test
lds
xor
cmp
and
or
fs
cmc
sti
rorl
dec
lret
pop
adc
outsb
xchg
imul
inc
xchg
add
push
fimull
dec
mov
ljmp
bound
shll
xchg
cmp
sti
xchg
fwait
mov
push
loopne
fwait
mov
cmp
inc
mov
bound
repz
sbb
xchg
repz
push
sbb
shrb
mov
pop
jmp
je
pop
push
sahf
pushf
or
mov
aad
shlb
aas
popa
mov
sbb
ss
je
shr
jecxz
ret
pop
cmpsb
repnz
sarl
add
out
movsl
and
sbb
cmp
or
pop
sub
cmpsl
inc
add
aaa
inc
out
push
lea
mov
pushl
sbb
pop
jno
divb
leave
sar
or
fs
mov
pop
mov
icebp
jno
in
adcb
sbbl
int
add
addl
xchg
ror
inc
or
insl
out
sub
push
add
ret
cmpsb
xchg
shlb
cmpsb
test
jns
dec
out
mov
inc
iret
ljmp
ljmp
fmulp
mov
cld
inc
popa
mov
icebp
push
addb
xor
test
mov
mov
fcomi
push
inc
popa
xor
sub
clc
shlb
xchg
pop
rcll
pop
adc
stos
loopne
mov
xchg
mov
push
cmc
ds
ljmp
sti
jae
sub
orb
ljmp
add
xchg
mov
test
sbb
ja
pop
decl
jo
inc
cld
inc
add
cmp
xchg
push
mov
fildl
int
or
bound
fwait
imul
mov
lret
mov
cmp
mov
xor
inc
addr16
test
scas
dec
adc
adc
xchg
xor
or
sub
movsb
xchg
jmp
and
add
inc
loopne
sub
ss
mov
or
mov
es
dec
imul
scas
out
in
push
pusha
mov
insl
popf
ret
sbbb
adc
lock
ret
aad
sahf
popf
adc
mov
sbb
pop
fidivrl
test
sbb
pop
cmp
mov
in
push
shlb
int3
mov
mov
pusha
popf
scas
leave
jno
sub
add
mov
sbb
lods
arpl
aaa
push
fiadds
adc
std
add
repz
inc
cmp
pop
pop
xlat
je
jns
xlat
lds
sbb
repz
jl
scas
and
jmp
cli
push
pop
das
xchg
jbe
adc
jge
js
decl
daa
je
fidivrs
fwait
outsl
xchg
and
jl
sub
ret
push
into
mov
xor
das
xchg
fs
int3
push
pusha
push
xor
test
aaa
int
inc
outsb
nop
cld
cmpsb
inc
mov
in
sbb
mov
data16
mov
in
loope
leave
shrl
or
cmp
lds
push
adc
jg
add
ljmp
add
pusha
mov
sbb
inc
pop
cmp
or
sbbb
leave
dec
ret
sbb
xchg
sub
xor
scas
mov
shl
arpl
jg
test
aad
jmp
out
jbe
mov
mov
and
adc
push
jl
ja
inc
ja
sub
not
pop
inc
lret
adc
inc
xchg
pop
mov
pop
push
sahf
orb
sbbb
outsl
aam
add
hlt
xlat
popa
stc
push
mov
into
ss
adc
cmp
or
outsl
dec
cli
jle
xor
call
add
incb
into
cmpsb
hlt
jne
ret
xor
icebp
in
pop
xor
popa
adc
ja
xchg
cmpsl
adc
cltd
dec
add
fldenv
cmc
mov
xlat
push
cmpsl
dec
sub
lods
mov
add
pop
sti
ss
ds
mov
incb
dec
cwtl
pushf
cs
iret
mov
dec
lock
mov
mov
cld
sbb
or
arpl
adc
ficomps
cmp
ja
jecxz
fs
cmp
ljmp
adc
je
int
jecxz
add
pop
lret
cmp
int
push
sub
in
pop
mov
cwtl
xor
cmp
mov
hlt
rep
pop
lret
lahf
lret
insl
popl
shl
insb
adc
mov
mov
dec
and
mov
add
jbe
adc
mov
jmp
pop
xchg
and
dec
iret
sbb
nop
cmp
jns
fisttpll
xchg
lock
push
rcrb
and
sbb
faddp
xor
sbb
insl
mov
dec
loop
push
xchg
test
mov
adc
popa
call
and
cmpsl
popa
scas
and
int3
fcomip
movmskps
icebp
add
into
sbbb
or
mov
shrb
push
pop
inc
out
fisttpll
repnz
sti
jbe
xchg
scas
adc
mov
pop
pop
pop
mov
jo
out
andl
aad
stos
push
rorb
ret
and
or
mov
mov
jge
xor
pop
fwait
test
fnstsw
dec
call
mov
or
pop
mov
push
push
mov
xchg
add
xor
bound
xor
inc
rcrb
xchg
jmp
mov
mov
mov
jmp
out
addr16
lret
jp
pop
xor
cmp
pop
mov
mov
pop
mov
lea
ret
sbb
mov
cmp
iret
cmp
push
out
das
int3
sub
rorl
push
cmc
mov
stos
mov
bound
das
jnp
lea
rcl
movsb
in
jmp
pusha
push
xchg
push
ret
inc
pop
arpl
jmp
aam
push
push
cwtl
in
ja
cmp
mov
fwait
repnz
adc
in
or
dec
scas
jl
sbb
inc
rclb
cmpsl
test
iret
mov
push
hlt
push
stos
es
fwait
xor
daa
mov
out
shrl
xchg
aaa
lds
or
test
sbb
inc
add
sbb
inc
vpavgb
scas
pop
mov
and
push
cmp
inc
jne
pushl
push
push
fstpl
jge
mov
mov
popf
cmp
scas
iret
jno
add
jl
cmpsl
dec
xor
push
mov
stos
xor
mov
jmp
sub
test
add
add
add
push
enter
pop
movsl
or
loope
inc
icebp
sub
mov
cmp
outsl
dec
movsl
xchg
shlb
sbb
out
jg
xchg
cmp
ret
xchg
add
mov
call
pop
cmp
cmp
cwtl
pop
pop
out
repnz
mov
sub
in
cld
outsb
mov
aad
jns
fcmovbe
mov
fstpl
sub
or
loopne
jg
jne
cmpsl
mov
sub
xlat
mov
lret
in
rcr
cmp
cmp
test
lret
roll
mov
mov
xchg
add
pop
call
jge
mov
push
cmp
enter
push
frstor
xor
shrb
push
add
insl
loope
into
mov
cmc
mov
jbe
push
dec
les
sbb
adc
lcall
pop
jecxz
lods
fsubl
xlat
mov
push
cmp
sub
or
insl
movsl
cmp
in
in
loope
pop
gs
xor
dec
idiv
inc
inc
loop
mov
sti
ds
repz
xchg
jns
push
sbb
dec
sti
add
pop
bound
adc
dec
outsb
pushf
pop
jmp
jmp
mov
cs
aad
icebp
add
adc
std
aas
lahf
jmp
jb
mov
imul
int
pop
bound
in
xchg
fimuls
dec
and
scas
rclb
stc
push
inc
adc
aaa
das
dec
aad
mov
insl
jae
and
xchg
std
int
idivb
mov
pop
insb
cmpsl
jb
idivl
pop
ret
mov
fbld
mov
mov
lock
outsl
mov
sti
mov
lods
sub
imul
movsl
inc
les
es
cmc
insl
divb
cmp
test
popa
out
subl
cmp
and
sbb
aad
add
mov
int
fsubp
and
lret
fnsave
push
clc
ss
cwtl
xchg
ret
xchg
roll
repz
stos
mov
inc
mov
stos
lock
jmp
call
or
xchg
divl
out
lock
adc
dec
fildl
test
aaa
xorb
mov
and
inc
sub
or
iret
xchg
push
push
not
ss
add
out
and
cmp
sbb
sti
test
in
scas
ret
xchg
mov
add
and
xor
jl
shlb
pop
jp
cmpsb
mov
xchg
lds
sbb
dec
sti
xor
enter
test
loop
fistl
js
cltd
xchg
mov
jp
dec
repz
xor
dec
stos
add
cs
and
jle
in
in
sarb
pusha
out
xchg
xor
cmpsb
cs
ret
daa
pop
lcall
jae
adc
popf
pusha
cmp
inc
sbb
dec
xchg
js
cmpsl
sbb
test
imul
fcoml
mov
adc
fldln2
repnz
mov
xor
and
je
loope
js
push
or
mov
cmp
or
gs
xor
pop
mov
sub
shrb
cmp
std
ljmp
in
out
push
movsl
iret
shlb
fidivrl
cltd
sbbb
push
jg
jb
mov
add
jl
lahf
cmp
push
repz
xchg
mov
xor
in
sbb
or
mov
lods
into
test
int
gs
mov
jae
jmp
test
in
mov
mov
in
sub
das
jno
dec
dec
adc
pop
shl
lea
mov
faddp
in
adc
sbb
adc
sub
lret
push
arpl
xor
lcall
jl
ds
mov
and
outsb
insl
adc
cwtl
sub
jg
cmp
mov
pop
cwtl
mov
ret
adc
mov
scas
int
into
subl
push
cld
sbb
shll
mov
mov
out
rcrb
xchg
mov
outsl
xchg
sbb
loop
pop
inc
stc
adc
adc
push
xor
dec
popf
gs
cmp
out
iret
imul
loope
nop
cmp
testb
inc
xlat
into
insb
lock
cmc
push
adcb
jb
xor
out
push
push
adc
mov
fwait
data16
lods
ret
fwait
xor
shll
mov
fcoms
inc
sti
xchg
inc
xchg
incb
or
scas
enter
stc
imul
in
cmc
imulb
fnstenv
push
mov
or
aam
hlt
mov
test
ftst
sub
xchg
imul
jl
pushf
or
jmp
icebp
inc
cs
push
mov
jno
icebp
nop
out
out
aas
mov
xor
fwait
xor
je
ret
mov
bound
lea
push
xchg
pusha
add
mov
and
ret
sahf
xchg
dec
push
sub
adc
inc
cwtl
push
cmp
ret
sub
jae
and
and
test
rorl
idiv
mov
jne
shl
test
lcall
cld
out
lock
push
mov
mov
sahf
aas
lock
inc
fistpl
sbb
imul
movsl
jne
mov
into
ret
push
mov
or
and
sbb
idivl
adc
push
and
mov
in
add
add
femms
mov
int
and
mov
mov
test
bound
fstpl
mov
test
rcrl
xor
scas
stos
lods
push
jecxz
dec
push
mov
push
xchg
incl
lea
cltd
ffree
xor
test
mov
cmpl
dec
inc
push
daa
test
and
ja
jbe
dec
into
mov
inc
shl
or
inc
out
fwait
rorb
push
lcall
add
sarb
mov
pop
jns
and
cmp
in
xchg
pop
popa
fwait
mov
jp
mov
mov
mov
pusha
push
dec
fisubs
cs
sub
filds
push
mov
outsl
xchg
popf
xchg
test
jle
lret
sub
or
cmp
and
insb
mov
clc
jnp
cmp
jle
out
sbb
mov
push
mov
gs
pop
roll
inc
or
push
jae
lahf
push
push
push
inc
add
mov
testl
iret
mov
jle
mov
out
scas
inc
jns
push
xchg
mov
adc
cmpl
addl
adc
inc
in
sahf
or
push
pop
cmp
inc
mov
or
cmp
add
sbbb
ljmp
loopne
inc
out
jbe
sbb
mull
imul
push
hlt
add
out
aam
into
sbb
fcmove
daa
jno
insb
cmp
out
jno
xor
dec
invd
rorl
mov
ret
jo
cmc
es
sub
push
lods
xor
push
cwtl
cmp
sbb
in
rclb
enter
pop
and
pushw
int3
loope,pt
cmpsl
arpl
subb
jg
xor
xchg
mov
adc
and
sbb
out
xor
repnz
dec
push
js
jmp
out
loop
sub
sbb
fsubr
jmp
sub
cmp
shlb
iret
jg
cwtl
mov
into
dec
cmp
cltd
fs
and
cmp
iret
movsl
sub
mov
notl
xchg
in
inc
movsb
push
rorl
mov
testl
test
call
outsl
jno
lock
insb
inc
stc
loope
sbb
outsb
ss
ud2
cmp
bound
out
inc
cmp
mov
das
pop
or
cmc
into
dec
pop
adc
pop
frstor
xor
pop
jp
xchg
xchg
imul
js
pop
mov
sub
xor
or
adc
cmc
sub
pop
cmp
inc
pop
aaa
sti
inc
jecxz
daa
gs
scas
loopne
xchg
adc
inc
or
test
in
xchg
in
adc
repz
push
xchg
jmp
mov
mov
jmp
pop
scas
and
adc
ds
mov
shr
add
cmp
hlt
sbb
aad
lahf
lcall
sub
jb
pop
arpl
mov
sbb
gs
orl
lahf
repz
fsubl
mov
adcl
movsb
mov
inc
pop
fsubrs
loope
das
or
mov
fstpt
cwtl
rcrl
dec
jbe
cmpsl
mov
repz
cmpsl
jo
mov
icebp
int
jo
adc
lret
dec
jnp
push
adc
pop
cmp
rclb
jg
aam
xchg
inc
loop
lahf
mov
pushf
insl
les
shll
xchg
inc
push
jg
push
int
sub
pop
scas
mov
adc
ljmp
enter
movsb
xchg
add
adc
test
nop
mov
push
push
mov
xbegin
cwtl
pop
jne
mov
lea
pop
mov
notl
xchg
stos
jno
push
popa
repnz
jmp
lahf
or
int3
mov
mov
adc
dec
test
cmpsb
xorl
test
inc
pop
roll
fwait
sub
filds
add
and
out
loopne
fsubl
xchg
jae
imul
xchg
dec
fstpt
mov
sbb
cmp
adc
mov
clc
in
mov
subb
rorl
mov
sbb
fbld
clc
xor
push
scas
xchg
push
insl
pop
andl
sub
mov
fwait
push
mov
subb
stc
cmp
pop
jnp
cmp
in
es
and
icebp
iret
fs
cli
ret
sub
push
mov
cmpsl
jae
jno
push
loope
setge
addb
dec
fimull
stos
cwtl
xchg
or
or
pop
imul
scas
movsl
cmp
js
cmp
mov
lods
stos
icebp
leave
dec
flds
hlt
xor
inc
arpl
inc
out
push
or
cltd
test
faddp
fldl
pop
movsl
push
int3
out
imul
sbb
neg
add
popa
outsb
rcrb
scas
clc
or
and
lds
aaa
cmp
push
inc
cmpb
andl
jmp
add
jo
cltd
cmp
and
jle
jl
or
dec
jle
ljmp
xor
jo
out
lahf
dec
leave
mov
test
arpl
repz
stos
sar
cmpsb
dec
sbb
enter
pop
stc
mov
loope
mov
cmp
inc
pop
movsl
fwait
sub
and
pusha
mov
xorb
pop
sbb
fs
add
adc
push
adcb
fsubrs
push
js
xor
pop
fcomp
rcrl
fmull
in
xchg
inc
arpl
xchg
sbb
adc
dec
aas
fs
sti
ljmp
mov
in
and
push
mov
xchg
int
mov
sub
or
shrl
rol
mov
aaa
lea
inc
and
sahf
push
mov
iret
add
and
push
lods
mov
inc
push
inc
stc
inc
push
clc
mov
jmp
cs
stc
pop
add
dec
aas
fdivrp
xchg
imul
addr16
cmp
add
or
mov
lret
push
push
pop
mov
sti
adc
push
adc
sub
out
inc
frstor
mov
lods
xchg
cmp
das
mov
xlat
push
mov
inc
mov
scas
js
sti
repnz
mov
gs
inc
jo
adc
mov
add
fldenv
mov
fcomi
test
adc
inc
or
stc
mov
xlat
jne
pop
bound
adc
dec
pop
pushf
pop
sahf
imul
out
mov
cs
fistl
nop
movsl
pop
ret
int
jb
xchg
dec
mov
pop
je
push
jecxz
cmpsl
stos
sbb
push
sub
push
shlb
loope
sub
in
dec
in
xchg
mov
jb
insl
adc
das
call
cmp
mov
out
ljmp
std
dec
and
dec
xchg
xlat
cmpsl
outsl
jp
mov
movsb
jb
cld
cmp
insl
lret
xor
jb
mov
in
lret
sub
pop
pop
test
sub
mov
dec
mov
jno
aas
adc
insl
stos
mov
dec
into
ss
cmpl
shrb
or
xor
and
cmp
lods
bswap
xchg
or
inc
dec
pop
cltd
xchg
loope
test
fs
mov
dec
cwtl
push
adc
fucomp
repz
xchg
inc
sbbb
insl
rcl
xchg
cmp
jb
mov
xchg
icebp
ja
push
cmp
cmp
xor
leave
pop
or
pop
lods
mov
mov
dec
adc
sbb
dec
mov
clc
inc
out
into
mov
scas
fwait
pop
mov
xor
push
pushf
aam
mov
pusha
jns
or
xchg
sahf
or
mov
push
fistpll
xlat
xchg
gs
int
jp
mov
mov
pop
leave
mov
icebp
ss
movsb
addr16
jne
jecxz
mov
sbb
fistpll
sahf
mov
jmp
sbb
cmpsl
xorl
jnp
add
ss
icebp
into
rsm
pop
icebp
scas
and
cmp
xor
inc
jle
fstp
in
xlat
loopne
mov
insl
hlt
ret
test
aas
inc
and
adc
movsb
jo
popf
aad
add
xchg
or
fidivrl
xchg
jle
mov
jb
rolb
enter
mov
adc
repnz
out
xor
aam
hlt
jl
or
int3
pop
inc
ljmp
push
shll
add
jmp
int3
pop
dec
xchg
xlat
fisubrs
incb
sarb
scas
xlat
xlat
out
arpl
out
and
mov
xchg
fnstenv
mov
xor
cmpsb
sbb
cmp
out
adc
dec
in
rcrb
pop
push
xor
imul
or
push
aam
test
cs
inc
cmp
cmpsb
rclb
lret
in
sahf
mov
enter
pop
mov
aas
shl
dec
cltd
or
lahf
js
push
fcmovnb
lds
movsl
mov
pusha
push
sti
mov
sub
mov
xor
lahf
je
out
pop
push
fdivrs
adc
push
mov
lcall
outsb
fdivrl
jne
sub
mov
adc
sub
push
mov
mov
pusha
mov
daa
add
push
cmp
push
mov
mov
sub
notl
inc
sarl
and
sbb
sahf
mov
or
jmp
fldl
das
jl
loop
shrl
push
fs
ss
mov
fdivs
jo
test
xor
mov
pop
imul
movsl
ret
lods
bound
iret
shlb
adc
nop
imul
in
jge
loope
adc
loopne
sub
or
adc
loope
mov
shr
sbb
sti
mov
icebp
or
in
loopne
or
jae
jno
cs
lret
mov
daa
xchg
or
ja
cmpsb
xchg
test
leave
sbb
xor
in
push
test
pop
adc
jmp
pushf
or
cld
cs
fsubp
nop
xorb
jb
out
dec
add
shl
mov
push
imul
cmp
xchg
in
mov
add
dec
iret
dec
rcr
fistps
sub
adc
movl
enter
shlb
add
dec
test
std
cmc
cltd
lea
outsb
flds
icebp
jnp
lret
dec
sub
movsb
leave
and
ja
sbb
mov
inc
pop
cwtl
sub
pop
jle
adc
inc
ret
add
xchg
and
insl
xchg
test
xchg
shrb
popa
pop
mov
lods
aam
sarl
and
and
rol
movntps
hlt
cltd
enter
or
leave
push
ja
fstl
sub
and
xchg
push
call
pop
adc
and
mov
cmp
jmp
pop
inc
sbb
loop
cmpsb
xor
movsb
or
xchg
mov
push
int3
add
mov
inc
dec
ja
jle
adc
ja
mov
dec
cmpsl
cld
flds
lock
sub
fstpl
cmpl
add
lods
out
sahf
and
vmwrite
jae
in
andl
mov
call
insb
pop
xchg
outsl
call
jp
dec
jo
shr
mov
mov
push
dec
xchg
xchg
pop
dec
sbb
push
pop
jb
push
leave
mov
add
inc
out
mov
or
pop
sub
inc
mov
jnp
subl
dec
or
push
aad
and
inc
ret
or
jbe
test
das
jae
loopne
push
xor
cltd
in
push
mov
inc
push
fucom
fisubrl
add
aam
rcrl
imul
out
imul
adc
shll
ljmp
leave
cmp
push
push
arpl
add
or
push
je
andb
or
icebp
mov
mov
int3
les
pop
ja
fimuls
add
xchg
es
scas
mov
add
and
scas
movsb
mov
mov
jbe
outsl
jle
leave
jmp
sbb
aad
outsb
sbb
jno
test
dec
pop
ret
adc
and
scas
xor
push
or
fwait
outsl
push
and
dec
push
stc
popf
and
or
test
and
loopne
sub
push
insl
loope
enter
insl
jno
add
xchg
adc
and
pop
jge
sbbb
fs
out
add
pusha
jg
repz
aaa
mov
pop
es
push
js
sub
mov
fwait
push
mov
fsubr
ja
sub
outsb
movsb
pop
mov
rolb
sub
mov
push
les
bound
push
mov
stos
sub
dec
push
sub
dec
imul
and
in
mov
ds
sahf
push
xchg
cld
adc
std
loop
aad
stc
mov
shll
test
adc
push
mov
adc
mov
outsl
adc
out
mov
add
cmp
sub
cwtl
jp
into
clc
push
lcall
subb
cmp
insb
imul
stos
add
mov
lods
pop
imul
and
fsubs
xchg
int3
shl
test
xor
push
dec
dec
nop
push
or
lret
or
loopne
in
dec
rcrb
mov
fsts
mov
add
nop
out
cmp
pop
aad
in
enter
subb
jmp
mov
aad
adc
pop
ja
aas
mov
jns
dec
ja
inc
je
fwait
pushf
jecxz
push
add
lea
call
pop
sbb
mov
mov
fisttpl
cmp
pop
popf
add
mov
das
cmpsb
aad
mov
add
and
jbe
rorl
mov
std
pushf
idivb
cmpsl
insl
mov
pop
icebp
push
pushf
test
xchg
sti
jne
adc
jns
ds
lock
pop
dec
pop
xchg
xor
rorb
in
aam
ja
ret
movsb
fsubs
pop
dec
and
fld
dec
les
xchg
jmp
pop
ljmp
insl
lods
aas
add
mov
jns
aad
sub
gs
jp
shrl
adc
and
push
cltd
adc
cmp
clc
pop
xor
xchg
in
shll
enter
bound
xchg
jg
jle
repnz
incl
stos
or
movsl
xor
aad
mov
addr16
dec
fidivs
test
mov
and
xor
inc
sbb
xchg
jg
mov
xchg
std
add
mov
ss
jge
add
leave
scas
jns
adc
jle
inc
xchg
cmp
inc
mov
lock
mov
dec
fidivs
int
insl
jp
xchg
push
mov
fwait
ds
iret
sbb
jae
push
cmc
es
pop
xor
jge
inc
xchg
and
cmpsb
jmp
mov
pop
adcl
out
nop
or
shll
push
outsl
jae
stos
inc
pop
sub
pop
sub
insb
cmp
push
jle
fwait
addr16
and
dec
iret
adcl
pop
lods
insl
pop
inc
cmp
push
push
sub
popf
and
mov
inc
xchg
xor
and
sbb
in
imul
scas
into
inc
movsb
push
mov
cmpsb
adc
pop
dec
mov
movsl
push
ja
mov
xchg
hlt
adc
arpl
mov
or
or
jp
aas
stos
sub
mov
loopne
and
mov
scas
les
cmpsb
rorb
sbb
scas
xchg
sbbl
cmp
movsb
inc
das
pop
push
xor
jne
jo
sub
sbb
daa
insl
mov
fwait
jno
cmp
push
lret
mov
push
add
repz
lods
ss
lahf
movsl
or
test
les
inc
push
push
mulb
insb
nop
inc
jle
pop
lea
push
subl
sub
push
pusha
cmp
cli
movsl
mov
push
and
xor
outsl
pop
adc
add
xchg
ret
cli
mov
sti
mov
lcall
pop
fcoml
sub
outsb
pop
stc
xchg
adc
fbstp
jg
adc
xor
in
jno
clts
xchg
dec
fcmovne
adc
stos
testl
mov
shrl
mov
icebp
sub
stc
data16
adcb
inc
outsl
in
daa
push
stc
imul
ss
pusha
jno
mov
int
out
inc
idiv
sub
cmp
adc
in
push
jl
or
mov
into
fistl
fidivs
arpl
clc
adc
in
jns
pop
inc
add
mov
pusha
mov
inc
xor
push
das
xor
cli
les
jecxz
xchg
in
out
mov
es
mov
pop
rclb
xchg
xchg
adc
fwait
or
enter
cmp
cmpsl
adc
sbb
stos
push
jg
push
sub
jmp
xlat
xchg
loope
pusha
lds
mov
into
cmp
aam
pop
nop
ss
aas
pop
roll
dec
out
mov
lock
xor
lea
popf
daa
call
push
fbld
dec
int3
sub
xlat
push
fstpt
pop
fldl
inc
mov
scas
mov
mov
scas
and
cmp
rcl
inc
shl
dec
adc
std
inc
aaa
cmp
cmpsl
insb
and
mov
sub
cld
mov
push
xchg
mov
shlb
shl
lock
xchg
push
pop
mov
enter
fildll
and
push
ret
push
dec
mov
lcall
dec
mov
sbb
ss
popa
mov
ret
mov
mov
mov
xor
sbb
psubsw
add
popa
cltd
sub
test
fnstenv
mov
icebp
and
pop
lods
frstor
into
clc
cwtl
test
xchg
std
rorl
mov
jl
pop
arpl
xchg
loop
push
int
jno
and
out
xor
stos
mov
xor
xor
js
in
xchg
sti
subl
lea
sbb
mov
ss
cmp
test
add
movsl
jl
out
pop
aad
bound
outsl
jns
xor
in
arpl
mov
lods
mov
insl
and
pop
or
mov
int3
sbb
inc
xchg
movsl
mov
outsl
mov
mov
aaa
dec
dec
dec
sub
in
mov
xchg
jb
pushf
test
xchg
test
jmp
jl
roll
pop
or
sub
sahf
xor
or
stos
mov
cltd
and
arpl
ljmp
push
pop
pusha
nop
cs
iret
loopne
cwtl
ret
dec
pop
in
push
inc
inc
xor
jae
pusha
dec
push
in
adc
popf
dec
and
filds
inc
adc
icebp
fcmovbe
dec
adc
mov
int3
imul
scas
xor
sbb
sahf
mov
movsb
jg
mov
clc
not
leave
sub
and
inc
repz
lds
out
aaa
mov
or
xchg
adc
lcall
ficoms
das
jns
lret
add
scas
je
sub
cmp
movl
jg
xor
cs
jge
insl
mov
daa
insb
call
lods
jno
sbb
dec
cmp
push
out
adc
imul
daa
push
lret
iret
pushf
test
popl
stos
cmpsb
pop
push
imul
pop
jns
jo
cmp
xchg
xchg
das
sub
xor
arpl
ds
movsl
mov
popf
and
ret
sbb
addb
les
add
xchg
mov
mov
xchg
ljmp
lods
adc
cmp
movsl
faddl
cmp
push
or
and
sarb
mov
mov
call
and
sbb
push
xchg
mov
int
xor
inc
hlt
pop
test
jp
sar
lret
mov
int3
sbb
imul
orb
outsl
int3
add
mov
and
stos
adc
push
outsl
cmp
in
out
dec
leave
cli
pop
cwtl
jns
jmp
out
jle
hlt
or
mov
mov
mov
mov
arpl
loopne
dec
imul
test
pushfw
aad
lods
sub
lock
dec
or
insl
loope
mov
pop
sub
scas
imul
pop
roll
inc
addr16
fcos
ret
dec
add
repz
into
xchg
into
adc
and
in
inc
rol
cmc
pop
cs
loop
or
cmp
jecxz
aad
stos
inc
nop
adc
pop
aas
clc
xchg
and
je
cmpb
xchg
add
cmp
lea
outsl
call
ret
mov
push
ja
nop
fdiv
fldt
pop
jecxz
dec
inc
ret
inc
fldcw
dec
mov
outsb
xor
and
push
and
testb
jnp
xor
adc
int3
mov
inc
cld
call
ret
xlat
insl
inc
mov
cmp
lock
cmc
pop
aam
shlb
sahf
sub
cmpsl
ret
lods
xor
sbb
mov
mov
xchg
leave
ljmp
pop
lods
adc
hlt
iret
mov
cmp
adc
dec
outsl
mov
cltd
insl
mov
test
std
xchg
mov
push
sub
mov
pop
clc
shrl
xchg
sbb
sbb
sub
arpl
fstpl
es
inc
sub
out
fwait
push
fistl
test
dec
mov
mov
or
xchg
xor
in
mov
xchg
xor
sub
sub
rcr
dec
sub
ficomps
insb
and
add
rolb
mov
pushf
cmpl
push
rclb
jg
push
mov
ret
ja
addr16
in
jp
dec
pushf
mov
addr16
mov
lods
adc
dec
xor
jne
xchg
dec
mov
out
fistpll
idiv
jmp
inc
jo
xorl
out
sti
ret
dec
fisttpll
cltd
sahf
addr16
in
daa
and
xchg
mov
jle
sub
faddl
outsl
pusha
sub
add
sbbl
fiadds
leave
jae
xchg
jno
add
inc
xchg
data16
xchg
lcall
add
push
aas
into
nop
adc
out
movl
mov
hlt
test
adc
cmp
inc
mulb
or
add
adc
mov
cld
lods
add
cmp
pop
add
jns
xor
jbe
add
adc
scas
push
cmp
and
insl
dec
cmp
inc
push
movsb
push
bound
jbe
cmp
jge
add
xchg
xchg
jbe
imul
jno
sbb
jl
cwtl
sbb
push
leave
aas
inc
xor
iret
dec
lahf
jecxz
mov
test
pop
hlt
std
inc
jne
lret
cmpsb
ficoms
enter
pop
popf
subl
stos
sub
fidivrs
adc
ds
mov
movsl
mov
adc
xchg
fstps
sbb
js
add
into
inc
xor
mov
orb
js
push
imul
adc
daa
push
fstpl
jmp
or
outsb
int
mov
xchg
push
pushf
jg
sub
mov
or
mov
pushl
mov
pushf
add
out
xchg
push
xchg
xchg
or
mov
testl
ret
mov
rcrl
xor
test
adc
dec
shlb
loop
adc
xlat
sub
inc
adc
push
lahf
and
cmp
mov
fstl
xor
xor
cmp
lcall
mov
cmp
xchg
pop
dec
fwait
jno
mov
lods
imul
in
popw
jg
lods
adc
xchg
mov
sub
mov
mov
lds
sti
pop
popf
enter
scas
gs
mov
dec
out
pop
inc
jp
lret
fnstenv
push
lock
cli
repz
sbb
sbb
and
push
out
pop
loope
mov
test
mov
mov
stos
jmp
add
cs
fistpll
aad
or
aas
xchg
inc
sbb
imul
dec
jo
jecxz
ss
ja
cmp
call
pushf
clc
repz
xchg
dec
jnp
jb
fwait
mov
pop
xchg
push
inc
dec
cmp
hlt
aas
xchg
inc
insb
out
movsb
dec
and
popf
ret
hlt
shll
popa
not
sub
call
cmpsl
push
sub
xlat
push
mov
pusha
repz
mov
or
pop
repz
pop
jge
sub
bts
aas
dec
mov
cmp
das
mov
cmp
dec
mov
or
sbb
and
push
lret
mov
loop
jg
inc
data16
cmpsl
jo
add
mov
test
jne
mov
pop
add
loope
xchg
cwtl
add
pop
roll
stos
ss
out
decb
mov
xlat
daa
lcall
aam
push
pop
or
outsl
xor
jmp
xor
dec
adc
lds
xor
inc
loop
orb
cld
fwait
inc
or
push
pand
add
jmp
bound
adc
mov
stos
in
xchg
mov
mov
rorl
pop
sbb
mov
int
lods
scas
gs
sbbl
cmpsb
mov
sbb
orl
jge
mov
dec
rcr
ficompl
lods
xchg
pushf
pop
jle
xor
xchg
adc
add
pusha
pop
test
xchg
stos
push
push
sub
int3
stos
cltd
cmp
jle
jnp
in
jnp
inc
lcall
or
sahf
sarl
add
arpl
mov
pop
js
jae
lock
jae
dec
popf
cwtl
cmp
inc
adc
fidivrl
roll
jno
sbb
inc
add
jp
scas
neg
or
popa
sub
pop
jnp
mov
sahf
push
or
pop
pop
mov
xrelease
stc
pop
xlat
or
jnp
push
aaa
jl
testb
mov
cmpsl
int3
jo
pop
pop
xor
outsb
movsl
lds
push
scas
xor
loope
outsb
jb
cmp
jns
push
sbb
mov
xor
dec
fs
push
das
cmp
aas
mov
dec
sbb
push
lods
fisubrl
jo
cmp
push
jno
mov
push
and
scas
inc
cmpsb
popa
shlb
mov
into
pop
fadd
sub
sub
loope
in
sub
ljmp
je
sub
lds
jb
subb
pop
add
lock
inc
mov
xchg
js
adc
pop
shrb
lret
cmpsb
fcoml
pop
jne
xor
outsl
shlb
and
movsl
push
mov
popa
lds
cmpsb
lret
pop
and
loopne
int
leave
sub
out
testl
pop
shrl
mov
pop
mov
lahf
test
ss
mov
cld
loop
jecxz
stc
mov
fs
js
push
roll
scas
push
pusha
fcomps
fsub
dec
out
aas
cli
lds
xor
addr16
or
into
test
out
mov
xor
pop
push
or
xchg
push
adc
push
sub
dec
add
data16
jp
mov
or
xlat
lret
dec
mov
mov
xor
sti
or
imul
push
mov
loopne
push
xchg
dec
dec
adc
inc
lea
repnz
dec
les
mov
cmpb
push
cmp
sub
or
rorl
xor
fcompl
lds
pusha
fs
rclb
ss
popf
jb
into
rorl
dec
int
cltd
mov
jecxz
pop
xchg
jp
sub
cmp
xchg
mov
sbb
bound
lret
pop
sub
inc
sarb
por
and
mov
fdivl
sub
imul
cmp
cwtl
stos
cmp
imul
icebp
scas
lahf
std
cld
ds
lret
iret
out
mov
cmp
lock
in
adc
pop
rcr
xchg
or
aam
cmp
and
insl
adc
in
xchg
sti
push
mov
popa
into
mov
inc
mov
add
mulb
clts
jbe
add
ss
test
jnp
push
cld
mov
fst
mov
dec
in
sub
adc
pop
rcll
cltd
jbe
insb
ret
adc
and
add
xchg
fwait
rcrl
std
add
xor
inc
jge
int3
inc
int
movsl
mov
sarl
dec
jp
repz
pusha
mov
dec
data16
inc
jns
in
or
es
fwait
jbe
cmc
push
mov
mov
push
xor
and
stc
jp
cld
aas
pop
jns
sbb
stos
sub
js
pushf
mov
lcall
cmp
addr16
or
xor
jmp
sbb
dec
testb
mov
dec
inc
xchg
outsl
icebp
and
daa
pushf
imul
ss
sub
imul
stos
or
out
mov
adc
jnp
lcall
ljmp
iret
std
push
add
mov
jbe
fs
push
ljmp
popf
mov
mov
inc
xchg
stos
ss
mov
sbb
mov
imul
pop
scas
pop
dec
loop
int
int3
adc
jge
repnz
shll
leave
mov
data16
mov
push
push
cmp
les
xorl
add
ror
sub
pop
bound
mov
rcrb
scas
adc
sarl
cmp
movsb
insl
in
push
insb
dec
and
jge
sbb
enter
jnp
cmp
fnsave
lcall
dec
xchg
push
mov
mov
or
lahf
test
lock
xchg
rorb
in
insl
in
or
lods
loope
pop
sbb
xor
fxch
cmp
fdivl
lahf
xchg
ds
mov
and
add
cmpb
imul
and
push
popa
pushf
pop
jmp
push
pop
push
jno
lcall
icebp
faddl
push
sub
testb
dec
xorl
mov
jmp
mov
sub
popa
std
push
popf
mov
jno
mov
mov
lret
xchg
rol
cmc
mov
daa
and
mov
sahf
xorl
addb
mov
stc
inc
jmp
jne
adc
icebp
mov
fcoms
js
out
test
cli
clc
fistl
jo
jne
decl
xor
ret
aaa
dec
or
roll
pop
mov
pop
adc
inc
imul
add
jo
and
clc
mov
adc
or
popf
mov
fwait
popa
sti
sti
mov
js
gs
stos
jno
cs
or
pushf
fiadds
xchg
xchg
movsb
rcr
imul
xchg
pop
jl
sbb
xchg
movl
adc
xchg
xchg
orb
sarb
stc
loopne
mov
mov
pop
dec
lret
je
dec
imul
jge
or
cmpsl
scas
jbe
mov
loope
sbb
lea
dec
les
aad
pop
int3
in
inc
push
and
inc
sub
insb
mov
xchg
mov
mov
xchg
rcll
lea
fbld
sets
in
cmpsl
push
test
icebp
test
cs
imul
out
mov
shl
lock
pop
xor
cmp
lods
les
aam
jge
ret
pop
cmp
cmpsb
in
dec
insl
cld
inc
cld
dec
stos
mov
or
add
popa
in
sub
outsb
mov
push
ljmp
gs
add
test
adc
push
push
push
sbb
xchg
xchg
adc
cwtl
popf
pop
pop
push
mov
out
les
xchg
loop
or
sbb
xor
add
or
dec
sub
lock
mov
sahf
push
orl
sbbl
inc
adc
sbbb
and
add
adc
push
bound
pop
mov
xchg
mov
mov
out
mov
hlt
mov
addr16
adc
and
mov
inc
jbe
mov
push
call
xchg
inc
mov
test
test
sbbl
jge
data16
push
in
mov
push
stos
xchg
leave
stos
jg
dec
and
stc
popf
insb
push
test
jnp
mov
pop
in
outsb
pusha
cld
rcrb
pop
loop
ret
fistpl
iret
popa
inc
outsl
push
jbe
mov
inc
inc
popf
out
push
mov
adc
xchg
ficomps
sbb
stc
mov
mov
nop
push
adc
loopne
adc
jo
movsb
mov
popa
leave
add
clc
sub
fucompp
inc
lcall
cld
push
cli
cmp
add
lret
inc
xchg
jnp
xchg
pop
pusha
ficomps
cmp
shrb
xchg
pop
mov
movsb
clc
movsb
fwait
push
mov
sbb
jge
pop
add
daa
push
fstps
jno
cmc
jge
fdivrl
push
jb
out
xor
jae
into
lahf
inc
jb
push
pop
notl
mov
pop
adc
out
mov
enter
pop
pop
sarl
loope
cwtl
sub
mov
xchg
ds
imul
xchg
test
scas
data16
add
xor
leave
js
pop
adc
sarl
push
ss
sarb
ficoms
movsl
test
in
jmp
sub
sub
push
xchg
es
jg
test
mov
test
out
mov
and
mov
int
lock
xor
push
test
cltd
mov
and
leave
sbb
iret
push
test
fwait
outsl
dec
fwait
mov
fsubs
vpaddb
cmp
push
out
ror
ss
fcom
adc
out
lahf
or
sub
lahf
cmp
jle
or
inc
mov
dec
or
xor
loop
pop
test
mov
imul
pop
add
pop
data16
enter
movsl
mov
jo
xlat
dec
lcall
push
xchg
in
push
sbb
sti
push
add
gs
sub
loopne
fwait
lods
dec
or
mov
push
mov
les
repz
xchg
fidivl
xlat
sbb
rcl
cli
iret
pop
add
scas
insb
adc
jmp
jmp
cmpsb
outsl
push
addr16
xchg
nop
jge
mov
je
enter
jae
inc
data16
cmp
jecxz
mov
push
lea
sub
push
mov
jl
mov
xor
cmp
aad
sub
lods
pop
outsl
mov
faddl
jge
das
loopne
mov
dec
dec
sbb
add
shll
movsb
negb
test
and
cmpsl
loopw
mov
pop
jns
cld
xchg
mov
lret
lods
sbb
mov
adc
and
fwait
pop
push
adc
movaps
cld
mov
mov
jnp
es
mov
dec
cmpsb
push
inc
xchg
jns
je
jne
sub
aaa
lods
shll
mov
push
inc
clc
mov
les
cltd
dec
jae
test
nop
mov
add
push
sub
cwtl
frstor
sar
shll
rdtsc
inc
sbb
and
pop
ret
stos
add
ja
daa
les
push
adc
aad
cmp
xor
repz
add
xor
icebp
mov
mov
call
addr16
sbb
inc
cmpsl
lret
jl
xchg
out
fwait
aam
push
push
clc
mov
add
sub
cmpsl
out
mov
adc
jns
inc
mov
xchg
push
add
mov
cmpsb
xor
scas
lcall
inc
sbb
adc
xor
dec
mov
mov
push
cmc
push
fbstp
pop
xchg
adc
push
in
jae
test
lods
sbb
out
inc
mov
or
sar
bnd
and
pop
xchg
jb
ret
jle
mov
in
outsl
shll
stos
mov
mov
rcrl
push
call
push
mov
or
push
ficoml
cwtl
xchg
xor
adc
fistpll
scas
and
inc
push
pop
jae
adc
mov
mov
xchg
push
leave
jl
aas
hlt
aam
inc
arpl
call
leave
push
mov
cmp
lods
xor
int3
xor
adc
shl
faddp
andl
push
push
xchg
scas
iret
fidivs
daa
mov
xchg
shll
pop
inc
enter
insl
daa
addr16
cmp
mov
jno
xchg
sub
les
inc
xor
push
arpl
xor
into
lock
push
ljmp
push
xchg
addb
cmpsb
ljmp
enter
pop
cltd
mov
pop
add
into
add
fnsave
add
and
and
loope
sbb
in
xor
xor
out
pop
aaa
sbb
js
rorl
dec
mov
sub
push
jmp
xchg
fcoml
testl
int
sub
add
sarb
xor
or
cld
mov
cmp
xchg
and
jecxz
push
mov
fnstcw
testl
xchg
mov
pop
sbb
cmp
leave
fistpl
and
push
cmpb
mov
stc
mov
adc
adc
inc
sub
ret
out
fmuls
or
pop
loop
xor
shrb
mov
jmp
cmc
leave
xor
mov
mov
addr16
fstps
cmc
cli
add
sub
int
add
dec
xlat
mov
sbb
lods
sti
push
mov
jno
pop
sti
sbb
gs
or
xor
mov
rcr
repz
jg
fcomip
out
mov
push
sbb
or
ljmp
inc
adcb
in
fstps
or
shlb
aad
js
nop
pop
je
aas
adc
jb
xor
mov
jns
jecxz
outsl
pop
movb
lods
call
cwtl
pop
mov
bound
xchg
cmpl
nop
fistl
in
pop
adc
add
xlat
das
mov
sti
sarb
leave
rol
mov
mov
std
sub
dec
xor
lret
in
icebp
xor
cld
mov
pop
rorb
scas
sub
lock
mov
rclb
imull
out
ds
call
ret
js
nop
lods
and
inc
dec
mov
mov
repnz
adc
mov
movsl
xchg
cmpb
movsb
mov
and
mov
addb
test
movsb
mov
push
push
out
cmc
jnp
dec
loop
clc
cli
mov
mov
mov
rcll
add
pop
insl
icebp
int3
stos
bnd
out
mov
loope
jo
lods
push
out
stos
mov
ficoml
outsb
or
inc
push
mov
movsb
cmpsb
fmull
ret
push
ja
pop
in
dec
aas
insb
pop
inc
ds
push
fwait
add
pop
push
fwait
cmp
std
add
push
out
xchg
inc
in
bound
leave
xor
dec
out
xchg
gs
pop
mov
fcmovu
mov
push
hlt
addr16
popf
leave
jp
push
xchg
push
icebp
mov
jecxz
dec
lahf
je
jne
add
mov
stos
aaa
fists
mov
or
xchg
cmpsl
push
cmpl
out
jne
sub
andb
stos
gs
cmpsb
and
loope
insb
daa
mov
hlt
jle
cmp
pusha
xor
inc
dec
cmc
cs
cmpsb
movsl
inc
test
jb
push
aas
dec
push
jg
mov
xor
add
sub
jne
push
icebp
mov
xchg
mov
jnp
mov
or
push
mov
out
loop
out
ljmp
hlt
pop
jns
arpl
stos
jns
sub
imull
push
xor
js
out
or
add
int3
sbb
popf
pop
out
push
lcall
sbb
shrb
scas
scas
shl
and
push
cmp
jecxz
jbe
dec
cmp
add
sbb
imul
mov
cmp
mov
pop
cmp
push
push
cmp
arpl
sub
addr16
mov
std
jns
push
adc
inc
inc
nop
xchg
mov
push
scas
push
xchg
enter
cld
sub
test
cmp
push
ds
xor
and
loopne
push
test
xor
mov
add
sar
imul
dec
add
pop
pop
loop
js
in
pop
into
fnstenv
inc
xor
faddl
pushf
sub
jb
outsb
mov
das
pop
rcr
pop
mov
sub
mov
inc
mov
rcr
and
or
push
cmpsb
movsb
ror
cmpsb
mov
testl
rol
mov
mov
inc
mov
sbb
sahf
insb
fsubl
stos
mov
aam
outsl
push
jg
loop
xor
stc
push
adc
add
div
ss
add
inc
or
out
pop
scas
cli
xchg
jae
xor
jge
cmp
in
or
cmpsb
mov
cmc
movsb
mov
sbbl
lcall
movsb
push
out
add
bound
std
daa
cld
xlat
cli
push
sub
push
and
test
arpl
enter
test
sbb
push
lret
loopne
js
dec
lret
inc
fldcw
in
mov
aaa
repz
negb
sbb
inc
mov
int
lcall
mov
adc
rorb
or
js
cs
int
nop
xor
aas
mov
pop
jb
sbb
mov
and
cmp
push
bound
and
cld
mov
mov
sbb
adc
fildl
inc
mov
jb
inc
jnp
movsl
das
sahf
or
mov
mov
rcll
add
scas
std
aam
sbb
gs
or
push
cld
ljmp
mov
jg
mov
jmp
lock
dec
fwait
pop
mov
push
shlb
mov
sub
and
aam
ds
pop
cmp
es
lock
insl
mov
dec
dec
pushf
mov
insl
ljmp
and
xchg
mov
push
int3
test
gs
xchg
mov
xorb
cltd
mov
roll
pop
imul
push
fnsave
and
xor
aam
sbb
cwtl
shrl
mov
stos
loope
sub
in
push
jecxz
mov
inc
push
lret
jns
shll
or
sub
sub
out
mov
xchg
xorl
cmpsl
fwait
cmpsl
dec
xor
aad
cwtl
or
notb
xor
ss
bound
lret
bound
push
jns
imulb
int3
xchg
xchg
mov
divb
sahf
mov
test
cmpl
mov
sub
mov
inc
pop
xor
push
pushf
jne
fisttpl
or
negl
jmp
or
or
nop
out
sbb
sub
jnp
jns
movsl
jb
fcomps
cmp
jnp
test
nop
in
aad
int
dec
iret
jns
outsl
ret
and
xchg
inc
nop
les
std
adc
inc
jo
popf
pop
or
addl
icebp
mov
jecxz
ja
arpl
fsubrs
push
jbe
out
jg
jmp
dec
lahf
mov
cmp
jecxz
hlt
push
daa
arpl
fcompl
or
loop
les
aaa
popa
or
dec
push
sub
fldt
int3
pop
int3
pop
push
je
fiadds
std
repz
mov
sahf
scas
enter
xchg
jbe
adc
movsb
cltd
fcmovnu
push
test
int
inc
sysret
jge
aas
xor
hlt
push
les
gs
cmp
adc
dec
inc
dec
jnp
sbb
sbb
lahf
popf
adc
nop
ss
popa
mov
push
sbb
pop
inc
iret
mov
cmpsb
lock
in
movsb
inc
sbb
cltd
mov
es
lods
push
loope
jmp
hlt
and
add
mov
xor
pop
sub
push
sbb
cmp
imul
test
loop
dec
scas
xchg
lcall
fsubr
shll
outsb
pop
xor
adc
mov
jmp
leave
dec
mov
mov
sub
mov
jmp
aaa
bswap
dec
pop
cmc
sub
iret
bswap
stos
xchg
or
and
mov
sahf
or
dec
sbb
psrlw
sub
xchg
jbe
loop
pop
adc
fs
mov
js
mov
repz
add
out
add
and
int3
pop
sub
aad
or
mov
cmc
imul
pop
add
sbb
incl
adc
add
add
sahf
mulb
cld
mov
mov
loope
xlat
push
jno
sub
into
push
in
inc
inc
mov
ja
dec
dec
mov
lcall
inc
in
lret
cmc
flds
xchg
and
inc
sbb
cmpb
jno
pop
adc
sub
jmp
test
cs
icebp
pushf
aad
xchg
aas
push
call
or
repnz
je
testb
mov
lea
inc
call
push
movsl
fisttpll
cmpsb
out
push
dec
std
cs
mov
dec
pop
pop
hlt
dec
inc
jae
push
inc
xchg
outsb
ljmp
or
lret
cmp
rorl
jge
arpl
std
jnp
iret
cwtl
push
mov
cmpsl
fs
mov
loope
popa
cld
adc
sub
cmp
sub
pop
lods
cmp
sar
ret
shrl
scas
add
loopne
xchg
std
je
mov
jmp
cwtl
pop
sub
mov
into
popa
inc
imul
add
jge
mov
dec
and
loope
fisttps
loope
filds
adc
cltd
out
sbb
test
dec
mov
or
push
je
inc
fstpl
loopne
mov
sbb
add
rol
std
jb
ret
fiadds
out
push
mov
xchg
incb
lcall
xor
dec
or
mov
stos
int3
test
es
test
iret
jb
mov
cwtl
inc
insb
cld
xor
cmp
fwait
popa
into
in
push
loope
pusha
add
jge
add
push
xor
jns
fnsetpm(287
popa
pop
pop
xchg
add
sarl
loopne
dec
addr16
jmp
out
aaa
push
xor
rcrb
mov
pushf
dec
gs
jne
sbb
push
leave
fcoml
cli
jb
xchg
aam
mov
out
cmp
repnz
mov
push
cmpsb
pop
cltd
stos
dec
add
daa
pop
ljmp
pop
jle
and
in
pop
push
pusha
push
xor
pop
pushf
or
inc
fwait
sub
push
add
jecxz
mov
or
data16
xchg
cmp
fwait
sbb
pop
xchg
imul
push
xor
jle
jl
in
mov
nop
push
mov
loope
add
mov
push
arpl
mov
or
pop
imul
testb
add
ror
xacquire
pop
dec
pop
inc
fisubrs
mov
scas
insb
ret
sub
loopne
clc
cmp
movsb
mull
repz
dec
test
adc
daa
rcrb
jle
int
lds
add
mov
adc
jg
xor
fistps
lahf
mov
pop
nop
test
out
incb
sbb
cmpsb
jae
or
mov
enter
pop
push
and
loope
pop
aam
cmp
imul
inc
push
xchg
movsl
out
jmp
int3
adc
aam
sbb
sbb
mov
hlt
aad
cmp
sbb
js
mov
lcall
out
fcompl
mov
outsb
andb
mov
push
and
fildll
mov
stos
or
push
and
push
lods
ds
mov
and
sbb
adc
lret
cli
shll
sbbb
mov
sahf
mov
inc
test
aas
pusha
outsl
les
loop
adc
fsubrs
adc
sub
cmp
mov
das
test
divl
jp
lcall
xchg
test
xor
inc
xor
xchg
lods
adc
sub
dec
addr16
push
dec
add
rol
lods
gs
repz
pop
xlat
inc
imul
mov
xchg
in
mov
cmp
out
jae
adc
loop
xor
andb
lcall
fnstenv
dec
cmc
repz
pop
js
out
scas
sbb
mov
sub
xor
lock
arpl
das
jmp
pushf
outsl
cs
pop
and
push
movsb
aaa
nop
jmp
mov
dec
dec
sbb
xor
mov
or
sbb
mov
mov
addr16
cmpl
xchg
inc
pop
sti
cltd
add
inc
bound
xchg
push
das
pop
add
mov
es
add
rcrl
shlb
or
call
mov
mov
jge
lret
imul
ja
mov
pop
int3
push
or
int3
add
jo
int3
mov
ret
and
loope
insl
jg
dec
dec
xchg
jb
xchg
jne
daa
ljmp
lods
insl
mov
pop
mov
jae
repz
inc
ljmp
and
in
inc
mov
cmp
push
aaa
decl
clc
stos
pop
imul
sbb
xor
mov
mov
sub
sbb
pushl
inc
adc
xor
ds
mov
lods
lea
test
aad
ja
das
pop
dec
sbb
xchg
inc
add
hlt
fwait
nop
and
test
scas
add
xor
outsb
or
jns
cmp
in
xchg
aaa
xchg
push
loopne
mov
das
je
in
aad
pop
fwait
std
std
addr16
aad
jp
xor
mov
and
testb
ret
inc
rcr
lahf
inc
xchg
popa
mov
jg
lahf
push
rolb
cmc
push
sub
jno
sbb
in
pushf
stos
mov
dec
mov
jnp
enter
sbbl
add
dec
iret
aaa
rcrb
mov
xchg
pop
shll
jge
les
enter
test
add
fimull
xchg
xchg
and
mov
aas
pop
scas
lods
repnz
pop
push
mov
jecxz
imul
xchg
pop
hlt
add
jge
push
test
or
fcoms
aaa
mov
imul
or
xor
pop
jl
and
dec
dec
in
cmp
dec
loop
dec
ret
jae
cwtl
cmp
dec
push
push
inc
loop
jbe
cmc
jecxz
test
sbb
lods
daa
arpl
xor
xor
jl
mov
dec
and
push
loope
aam
push
push
mov
fstpt
aas
test
mov
lea
ret
cmpsb
testb
jb
stc
enter
pop
xchg
std
mov
loope
push
inc
sub
call
gs
mov
outsl
cli
xchg
subb
aad
or
push
xor
xor
cwtl
mov
out
dec
xchg
filds
dec
out
lcall
or
inc
cmp
cmc
outsb
in
mov
shrb
push
jg
ja
mov
insl
xchg
mov
mov
mov
inc
mov
pop
sbb
int
addr16
sub
out
lret
rol
dec
scas
adc
sbb
xchg
ja
aas
push
lds
mov
dec
sbb
jae
fs
popa
adc
add
cmp
inc
cmp
js
push
out
fstp
cli
sub
xor
outsb
cmp
xor
or
ljmp
repz
xor
add
adc
sub
adc
cld
pop
add
push
lds
sbb
lods
dec
mov
mov
sub
xchg
sbb
lret
adc
sbb
int
out
jl
adc
test
out
pop
inc
les
sarl
test
shlb
clc
into
or
dec
push
pop
jns
pop
adc
sbb
adc
pop
inc
adc
les
aas
xchg
xor
adc
dec
cmp
cmpsb
ret
push
loope
popl
mov
mov
xchg
mov
out
fs
dec
sub
adc
inc
addl
das
cmp
out
mov
fisttpll
out
shr
repnz
imul
mov
std
leave
mov
xchg
cmpsl
bound
out
seto
imul
fadds
test
lret
mov
lock
stos
pop
jmp
jae
lahf
jnp
sub
scas
push
aam
repnz
mov
es
shll
lea
inc
ljmp
sbb
mov
cli
pop
cmc
and
pop
push
mov
add
push
mov
test
mov
push
cli
xchg
dec
fucom
push
movsl
clc
out
adc
mov
xor
xchg
shll
push
pop
sbb
stos
scas
mov
mov
push
pop
mov
xorb
and
xor
jecxz
mov
mov
cld
dec
dec
sbb
test
outsb
outsb
ja
xor
add
inc
lcall
fwait
mov
loopne
add
mov
imul
adc
bound
loope
jns
push
and
ja
rclb
fidivl
sbb
pop
push
enter
inc
sahf
jp
cmp
mov
jno
mov
xchg
push
into
dec
sub
mov
dec
jg
sarb
xchg
xor
pusha
jmp
push
adc
js
jecxz
rolb
insb
fisubl
and
insb
stos
xor
loope
push
bound
insb
ror
jg
sub
fdiv
in
inc
jbe
sahf
sbb
iret
xchg
je
ret
insl
pop
or
and
jae
into
dec
push
mov
mov
or
push
fcmovbe
push
addr16
call
call
imul
mov
mov
mov
mov
ss
popa
leave
iret
in
hlt
dec
push
arpl
inc
adc
cmp
or
push
aam
aaa
je
xchg
or
adc
pop
int3
enter
stos
jb
fsubrp
pop
fwait
icebp
rcr
xor
push
out
cmp
test
push
xchg
adc
jbe
pop
push
jge
arpl
daa
fidivs
cmp
xchg
jno
jbe
jl
ret
nop
cwtl
rorb
les
fnsave
xchg
pop
sbbl
dec
scas
test
jge
je
jl
jnp
jns
push
in
pop
ficoms
pop
aam
mov
loope
cmc
mov
cmp
ficoml
mov
push
into
sbb
jge
clc
push
add
rorl
pop
mov
pop
cli
out
js
idiv
pop
lret
lcall
mov
out
das
pop
sub
movsb
hlt
adc
dec
xchg
dec
jg
adc
mov
arpl
dec
imul
adc
and
mov
jle
aam
adc
cmp
inc
cmp
shl
inc
mov
sub
sahf
clc
data16
pop
mov
outsl
xorb
dec
shlb
fdivp
fs
imul
jl
add
xor
int3
out
emms
cli
pop
sarb
fnsave
mov
pushf
push
cmc
shrb
dec
adc
adc
cmp
in
les
cmc
clc
add
nop
xlat
mov
lods
xor
mov
xchg
sub
test
mov
mov
cmpsb
sti
test
idiv
xor
daa
gs
pop
into
loopne
and
dec
inc
pop
inc
and
daa
inc
les
insb
add
fs
cmp
push
fwait
leave
sub
pop
sub
sub
xchg
rcl
mov
shl
rcrl
loope
push
nop
lahf
movsl
inc
aas
jb,pn
jb
cmp
je
cmpsb
jns
scas
xchg
into
adc
adc
mov
and
pop
subl
sub
pop
inc
sar
or
fs
sbb
mov
xchg
and
cmp
cmp
sub
movsl
std
jo
sub
popa
cwtl
mov
data16
cld
xchg
in
push
lret
inc
sbb
mov
mov
xchg
fisubl
pop
or
cs
and
aam
addl
insl
dec
je
dec
mov
ljmp
jnp
inc
xor
mov
sbb
xchg
paddd
outsb
add
sbbl
mov
push
mov
call
xchg
xchg
dec
sbb
xor
pop
les
stos
popf
cmc
and
xchg
rcl
out
push
ss
push
sbbl
or
mov
popf
dec
mov
mov
ja
rolb
stos
inc
inc
xor
or
push
mov
push
lret
add
into
popa
xchg
icebp
cmp
bound
in
scas
ficoms
sbb
jge
pop
adc
fisubl
cmp
jp
hlt
jae
mov
lods
mov
xlat
jbe
push
data16
jne
jbe,pn
jns
sub
icebp
push
inc
xchg
pop
clc
out
fbld
addl
aam
sti
inc
or
sbb
sahf
clc
stos
movsb
fildll
insb
pushf
ja
ds
jnp
divl
inc
and
lret
cmp
iret
cmc
sbb
pop
inc
je
inc
mov
pushf
jb
dec
push
inc
popf
idivl
popa
inc
mov
fiaddl
or
movups
jns
mov
jb
jl
add
sub
mov
mov
hlt
xchg
js
arpl
in
push
inc
adc
mov
sub
enter
into
aaa
xor
or
sub
aaa
mov
pop
fisubl
lds
sbb
hlt
loopne
scas
or
push
and
imul
push
in
cmp
lods
or
loop
sbb
mov
daa
popa
mov
cmp
jno
fists
dec
decl
shll
lock
lahf
sbb
push
fmull
movsl
push
dec
push
pop
cmpsb
cld
jp
in
inc
adcl
adc
popa
and
sub
aaa
mov
call
or
movsl
add
data16
push
sub
insb
push
sbb
stos
test
pop
out
xor
jae
push
iret
xor
and
pop
dec
sub
inc
push
cmc
push
cltd
idiv
sub
mov
adc
and
jg
mov
mov
lea
mov
mov
dec
cmp
and
or
lret
add
inc
lret
cli
sarl
mov
sbb
adc
fwait
sub
int
sbbb
outsl
popa
jle
loop
gs
in
mov
enter
sbb
ss
mov
fsubr
lea
inc
lds
nop
aad
xor
dec
std
cmp
loop
or
add
into
jg
inc
cmc
xchg
jnp
cmpsl
xor
fstl
icebp
mov
lock
inc
movb
adc
cmp
lods
sbb
sahf
mov
xchg
xlat
add
sub
insb
mov
repz
xor
test
xchg
mov
push
add
movsl
outsl
mov
fstps
repz
pop
mov
sbb
outsb
jno
dec
jae
pop
fistpll
jmp
xlat
pushf
fs
lret
cs
popf
aad
push
inc
nop
jp
in
int
test
mov
fimuls
xor
je
fisttps
mov
mov
fists
xor
adc
mov
arpl
test
pop
mov
inc
jo
inc
add
das
stc
adc
bound
xlat
and
pop
in
mov
mov
std
pop
mov
cwtl
cmp
das
scas
mov
cmp
arpl
mov
push
mov
nop
mov
popf
push
outsb
pop
sub
js
mov
fs
shlb
pop
insl
xor
mov
addl
xchg
xor
mov
lcall
lods
scas
scas
dec
mov
inc
push
pop
mov
pop
pop
clc
add
pushf
cltd
lret
test
stc
push
sbbb
xor
mov
pop
pop
xchg
xchg
stos
call
pop
outsl
test
jno
fdiv
inc
xchg
sbb
xchg
mov
sti
or
sub
mov
mov
rorl
fwait
test
pop
and
ljmp
enter
add
mov
sbb
imul
add
add
dec
bound
sub
jns
jno
in
cmp
aas
nop
pushf
mov
cwtl
inc
mov
int3
sbb
shlb
mov
push
in
insb
adc
jb
mov
jne
std
sub
adc
mov
fisubl
jmp
add
lret
out
cs
or
dec
push
mov
xchg
shll
cli
dec
insb
test
xor
cmp
sub
push
iret
push
vcmpsd
push
pop
js
pusha
inc
movl
lcall
jbe
inc
or
fidivrl
cmpsb
xchg
xchg
mov
sbb
imul
imul
scas
aad
lcall
adc
pop
pop
leave
mov
fisubl
pop
mov
fs
repnz
orl
into
out
fwait
int3
sahf
mov
cli
fidivs
sbb
rorb
mov
and
add
movsb
push
jno
push
xor
jbe
mov
jge
inc
fistps
fwait
dec
movsl
daa
pusha
or
cmp
insb
outsb
jl
scas
cli
dec
outsb
dec
inc
push
mov
xor
dec
lods
in
cmp
int3
push
scas
add
ficoms
or
lcall
in
daa
or
enter
pop
push
lods
fsubrs
ret
test
loop
in
mov
xchg
repz
rolb
push
and
jo
andb
sbb
cmp
push
enter
pop
loope
mov
inc
mov
jbe
pop
enter
lds
imul
xchg
sbb
test
outsb
push
mov
adc
sub
jg
push
jnp
push
in
dec
mov
enter
mov
and
loop
mov
sub
test
cltd
test
mov
stc
sbb
in
test
lahf
movsl
xorb
outsl
inc
mov
loop
aas
xchg
stc
mov
es
jle
adc
mov
cmp
test
lcall
xor
in
cmp
notl
into
bound
cmc
dec
lret
add
pop
mov
stos
aas
imul
in
add
fildl
data16
mov
das
call
sub
push
aam
push
pop
scas
in
pop
mov
std
jp
dec
gs
lock
inc
dec
movsb
inc
fsts
push
call
xchg
repnz
mov
fnstcw
test
cmp
insb
adc
jp
mov
fists
xchg
xchg
aad
add
inc
scas
aas
insb
aaa
stos
jb
fmull
stc
cltd
pop
je
imul
lret
stos
cwtl
ret
inc
xor
mov
loop
mov
mov
ret
dec
xchg
scas
or
mov
mov
push
inc
sbb
sbb
sarl
xchg
and
rcr
mov
std
mov
push
andb
fldl
cld
in
lods
out
lret
and
loopne
mov
stos
std
lock
lea
dec
into
mov
sub
lcall
inc
xor
insl
sbb
repnz
jno
jecxz
or
mov
cmp
arpl
adc
bsf
and
scas
inc
lods
mov
mov
sbb
es
clc
xchg
xor
xchg
sbb
scas
shll
dec
pop
sbb
outsb
out
aas
out
push
xchg
popa
cld
push
push
in
push
jb
xor
sub
sti
out
sbb
mull
mov
mov
mov
test
mov
ja
xchg
dec
in
insl
inc
pop
enter
add
cmp
adc
add
ds
scas
push
std
bound
jbe
in
sbb
xchg
mov
movsb
mov
clc
push
mov
xchg
dec
jp
xchg
mov
std
loop
xchg
xchg
or
aam
cwtl
jne
xor
fildll
and
xchg
lods
add
xchg
lret
push
mov
out
mov
sub
pop
push
dec
push
loope
push
stos
mov
or
lcall
jnp
aaa
sbb
mov
xor
pop
pusha
outsl
push
insl
iret
mov
lods
ret
pop
scas
inc
add
jae
add
push
aam
or
inc
outsb
push
outsl
sub
hlt
movsl
jg
xchg
in
jl
sbb
mov
imul
scas
cmp
push
xchg
jge
adc
jns
mov
das
in
leave
xor
xor
sub
push
arpl
or
enter
jno
int
mov
sub
add
add
pushf
int3
mov
daa
dec
repz
scas
shrb
pop
scas
in
and
and
push
addb
aam
sti
jge
mov
sbb
ss
pop
jmp
sbb
sbb
sbb
repz
insl
push
xor
cmpsb
repz
push
ret
xorb
test
sbb
sub
inc
cmpsb
add
pop
enter
pop
xchg
lcall
mov
inc
cmp
dec
ds
icebp
sub
and
cli
ss
jmp
xchg
cmpb
sbb
movntps
adc
ss
movsb
mov
pop
outsl
inc
fidivrs
xchg
sbb
inc
test
lcall
ret
call
sub
jp
jno
test
fsts
ret
mov
jle
mov
jnp
and
clc
push
mov
xor
sub
inc
add
shrl
lods
sbb
sahf
loope
in
pop
test
outsl
pop
lcall
imul
fiadds
rclb
mov
jl
inc
xchg
aam
test
out
mov
iret
xor
sahf
push
cmp
loopne
or
push
fs
inc
out
stc
cmc
adc
mov
movlps
ds
xor
mov
inc
leave
sub
call
popa
in
xlat
orb
sub
mov
leave
in
mov
xchg
rorl
inc
mov
xor
leave
loopne
cmc
jp
arpl
stos
inc
pop
cmp
xlat
arpl
xchg
mov
pop
sbb
in
xchg
movl
dec
adc
pop
xchg
into
fildl
push
jno
mov
adc
xor
leave
jb
jnp
dec
jo
ret
dec
dec
jecxz
lahf
mov
lea
jl
mov
loope
mov
adc
xor
dec
jg
inc
fcmovne
jnp
pop
sub
cs
popf
sub
inc
cmp
das
mov
loop
mov
es
and
shrl
fdivl
div
fsubrl
std
gs
mov
pop
jmp
pusha
icebp
jmp
xchg
cld
pop
int3
push
lret
xchg
lock
pop
icebp
mov
out
jno
push
fidivrs
shr
pop
sub
and
lock
imul
popf
rcll
andb
lret
jge
lods
test
sbb
xchg
xchg
out
cld
mov
sbb
inc
cltd
cmp
fidivl
push
je
fldl
fiaddl
push
mov
lcall
jl
push
or
mov
cmpsb
xchg
adc
shl
xor
or
jns
add
pop
lcall
scas
dec
test
pushf
or
movsl
pop
dec
xlat
fcmovne
inc
imulb
adc
fiaddl
fwait
jnp
rcrl
ret
pop
mov
add
mov
out
mov
bound
cltd
jns
pop
jl
mov
scas
pop
mov
int3
sarl
mov
dec
jp
pop
dec
mov
leave
cli
mov
push
out
dec
mov
popf
jne
movb
dec
or
adc
jmp
xchg
jne
xorl
sub
pop
push
inc
push
and
js
mov
ljmp
mov
jmp
mov
in
mov
or
adc
mov
pop
out
out
inc
push
xchg
dec
popf
insb
pushf
pop
mov
push
add
dec
xchg
inc
insl
aas
sbb
ds
imul
scas
fwait
or
adc
xor
add
stos
mov
ja
cli
arpl
orl
popa
jmp
push
aaa
jo
fisttpl
hlt
mov
sbb
je
and
roll
fidivrs
insl
cli
rolb
scas
cmpsb
clc
inc
and
sti
cmp
sub
push
roll
xchg
jge
mov
sbb
cmp
pop
dec
mov
jno
icebp
cmpsl
jl
ljmp
push
jne
xor
add
lahf
jbe
mov
test
test
adc
cmpsb
test
and
enter
pop
rorb
push
push
sbb
pop
sub
jecxz
cmp
sbb
sbb
sbb
and
dec
dec
orb
add
and
jecxz
out
addr16
in
xchg
sub
js
inc
add
cmc
add
push
cli
push
xor
lcall
outsb
aam
movsb
adc
mov
in
and
icebp
mov
mov
mov
fwait
mov
push
rol
push
mov
and
sub
sub
aas
cmpsl
test
inc
or
mov
jl
xchg
push
lret
xor
test
jo
subb
loop
mov
and
shll
rclb
add
mov
neg
pop
add
out
call
xor
popf
xchg
or
jbe
cmc
fdiv
inc
xor
loopne
adc
mov
rcrb
cld
and
add
ss
data16
push
xchg
aad
mov
sub
arpl
in
xor
pop
sti
inc
jmp
jecxz
cmp
sbbb
add
add
repz
xchg
js
push
sbb
pop
cmp
pop
clc
pop
xor
lock
pushf
gs
shr
addr16
cmp
aad
xchg
nop
or
bnd
dec
adc
out
mov
jecxz
mov
sahf
xchg
lea
or
cld
adc
mov
rorl
mov
inc
pop
cltd
pop
int
jbe
and
roll
or
sbb
and
lods
das
loop
js
or
cmp
inc
std
or
sub
outsb
rclb
cmpsl
pop
or
mov
ret
cld
inc
mov
cltd
mov
sahf
mov
or
scas
inc
insb
pop
xchg
sarb
fs
mov
ret
jg
jp
inc
xchg
ljmp
enter
jne
ljmp
and
out
sbb
mov
popf
cs
push
fists
jp
movb
mov
cltd
outsl
adc
lret
push
leave
dec
inc
cwtl
addb
dec
jno
and
xor
pop
push
cmp
xchg
out
mov
push
mov
and
mov
ss
push
or
pop
lock
xchg
mov
test
sbb
dec
lret
inc
lea
and
push
push
cmp
out
insl
jns
loopne
int3
jns
imul
sub
mov
sub
clc
pop
std
imul
mov
mov
mov
dec
lcall
mov
mov
fildll
xor
jmp
popa
jmp
or
pop
test
aam
push
loop
push
pop
xlat
inc
stos
jo
cmp
enter
ljmp
jle
int
in
mull
adcl
pop
sbb
mov
mov
pop
jbe
popf
xchg
scas
pop
mov
test
out
xchg
fwait
cmpl
call
loop
jns
stc
mov
aad
dec
leave
and
add
arpl
loopne
or
mov
pop
mov
out
bound
xchg
out
mov
pop
roll
pop
xchg
adc
adc
fidivs
shlb
scas
test
and
sub
cmp
push
cmc
push
and
jbe
mov
sbb
mov
daa
pop
das
bound
xor
xorl
in
fadds
dec
mov
je
xor
pop
mov
je
sub
arpl
ss
inc
push
xchg
cmpsb
or
in
fdivr
in
jno
adcb
add
sub
insb
cmpsb
sub
movsb
xlat
mov
movsl
and
insb
mov
sbbb
xlat
add
xchg
xor
inc
pop
mov
lea
jmp
lcall
aaa
faddl
imul
cmp
adc
and
rcrl
dec
aas
lods
mov
push
adc
push
rcrl
int
repz
mov
lret
gs
pop
mov
dec
pop
sbb
inc
mov
test
call
outsl
ffree
pop
loop
add
stc
pop
adc
ss
and
cmp
int
cmp
cmp
pop
xor
add
and
testl
cmc
mov
mov
adc
sbb
adc
ret
mov
pop
dec
pop
adc
rolb
ljmp
sub
sbb
push
mov
cld
sti
out
aam
jecxz
push
gs
push
clc
dec
and
lret
cld
stos
fnstcw
pop
xor
in
test
add
fucom
sbb
pop
cmpsb
add
inc
mov
pop
stos
mov
adc
sbbl
adc
aad
popa
sbb
dec
std
adc
dec
pop
scas
mov
jecxz
adc
lea
pop
call
push
imul
loopne
or
push
xchg
pop
jo
incl
jbe
inc
outsb
mov
das
jne
fsubs
daa
mov
or
call
je
mov
sbb
pop
mov
mov
cltd
xor
cld
insl
test
mov
dec
mov
dec
xchg
lock
icebp
rclb
push
xlat
aam
aaa
xchg
ret
push
mov
es
insl
rorb
dec
outsl
xchg
lods
xchg
ljmp
dec
lods
pop
in
mov
int3
lock
mov
daa
xchg
add
or
cmp
mov
idiv
dec
sub
test
int
jl
fs
sbb
out
push
daa
push
push
jge
stos
call
push
sub
hlt
cmc
sub
cmpsl
jb
push
test
mov
cmpsl
ja
jno
dec
mov
pop
clc
or
cmp
push
stc
jmp
add
push
pop
mov
bound
and
pop
xchg
in
stos
iret
xchg
jnp
lahf
mov
rcrl
mov
mov
mov
aad
out
int3
cmp
out
fisttpll
sub
jne
and
mov
fists
mov
add
int
out
fs
sub
dec
push
push
sahf
scas
xchg
stos
jecxz
test
mov
jnp
aam
jle
fidivl
inc
push
mov
iret
rclb
inc
pop
push
inc
dec
inc
repz
jae
popf
pusha
push
sbb
movsb
or
add
mov
xchg
repnz
mov
mov
scas
popa
mov
mov
push
sbb
inc
repnz
dec
hlt
or
cmp
or
xor
pop
pop
or
push
add
loope
int3
dec
cs
faddp
aad
ret
ss
scas
sub
cmp
aaa
mov
jbe
bound
jge
mov
sbb
cwtl
sub
jno
pop
jp
add
dec
sub
cs
push
addr16
xor
mov
jecxz
mov
js
sti
in
nop
test
aas
lock
inc
fnstsw
mov
scas
in
ret
pop
enter
pop
dec
jp
push
dec
xchg
loope
and
sub
jp
cmp
fidivrs
pop
hlt
arpl
pop
xor
xorb
int3
add
inc
cmpsl
xor
in
popa
pop
in
pop
js
addr16
lds
test
inc
fdiv
inc
sub
inc
pop
movsb
outsb
lcall
shrb
push
jg
or
mov
insl
out
mov
xor
mov
aad
and
push
push
in
call
dec
xor
mov
jns
shrl
mov
sti
clc
sahf
lret
test
roll
and
std
outsl
mov
lods
push
stc
nop
sarb
jg
and
mov
sbb
shll
pop
out
psubsb
lret
push
xor
xchg
cmp
xchg
testl
out
popa
cmp
xor
or
adc
pop
imul
mov
std
lods
popf
imul
xlat
cmp
dec
or
sti
sahf
test
gs
xchg
xchg
loopne
jnp
dec
xor
inc
xchg
sub
fldcw
rol
clc
xchg
shl
aam
mov
incb
xor
xchg
movsl
push
pop
pop
add
adc
mov
push
cs
das
aad
sahf
inc
nop
shll
icebp
and
push
xchg
push
je
in
jecxz
mov
movsb
sbb
loop
lahf
call
int
std
mov
dec
inc
xor
lret
pop
fistpl
pop
adc
cli
inc
xor
adc
jp
das
push
jns
mov
fimuls
and
mov
idivb
mov
in
loope
pop
fdivp
mov
jo
aaa
cld
cwtl
push
ror
test
ljmp
inc
push
pop
les
je
mov
and
js
popf
fimull
insl
mov
scas
dec
push
jge
insl
push
addr16
adc
mov
lds
mov
stos
fisubrl
push
cwtl
add
mov
lods
pop
test
mov
jae
push
dec
pop
sbb
push
iret
clc
orl
repz
imul
pop
or
aaa
xchg
adc
lret
fs
push
pop
bound
xor
add
rcll
xor
cwtl
shlb
dec
sbb
xor
sbb
pop
ds
mov
cmc
fwait
or
pop
push
pushf
out
dec
add
jo
push
out
sub
lds
icebp
popf
in
xchg
lret
mov
add
mov
jae
mov
jp
sbb
movb
inc
repnz
xchg
sub
jecxz
mov
popf
inc
fildll
test
jmp
test
in
or
test
or
mov
fisttpll
cmp
imul
push
insb
shlb
mul
popf
jle
fsubrl
pusha
fildl
and
das
push
cmp
and
pop
mov
add
push
loopne
mov
loope
test
mov
out
orl
mov
cmc
xchg
dec
push
pop
sbb
fbld
imul
xchg
scas
loop
adc
rcrl
mov
jnp
ror
add
hlt
pop
mov
arpl
pushf
inc
es
ret
jns
aaa
lods
sub
or
imul
xor
in
fisubs
lds
and
xchg
orl
dec
and
pop
das
cmp
inc
push
movsb
pop
cmp
mov
scas
cmp
mov
sbb
or
pop
test
cmp
dec
aam
jnp,pn
dec
cltd
imul
mov
aad
lahf
roll
subl
gs
cmpsb
push
cli
mov
enter
pop
lea
push
insb
shl
fisubrl
add
add
sub
mov
test
sbb
xor
dec
aaa
xor
mov
mov
fs
or
and
cli
pop
inc
bound
lcall
mov
sub
inc
fwait
outsb
std
add
scas
rolb
jbe
inc
fdivl
mov
mov
icebp
cld
and
in
push
loope
int
inc
sahf
sub
movsb
idivl
lret
test
mov
ret
and
sahf
insl
lret
mov
cmp
pop
outsl
fwait
add
loop
mov
or
adc
xor
push
test
js
int3
fcoms
and
cli
ret
xor
out
pop
cmp
int
or
sbbl
lds
xor
addr16
cmp
mov
adc
cli
pusha
add
mov
lods
test
mov
icebp
aad
jl
dec
sub
pop
out
and
mov
dec
clc
mov
gs
sub
dec
fbstp
push
fldenv
clc
push
repz
lcall
sarb
xchg
inc
out
xor
pop
cmp
cmc
rcrl
xor
jbe,pn
inc
aad
aas
rclb
xchg
push
jb
add
dec
dec
inc
xorl
jecxz
xchg
in
cmpsl
xchg
testb
push
xor
mov
mov
jne
orl
xor
push
xchg
inc
mov
push
jb
xor
int
xchg
sbb
and
cmp
shll
push
testb
out
add
mov
cmpsl
pop
lea
icebp
inc
mov
cld
ret
mov
mov
mov
cmpsl
lock
ret
mov
sub
cwtl
loopne
sub
out
rorb
cmc
dec
rcrl
cmpsl
or
dec
and
popa
daa
pop
fldcw
ret
xchg
mov
mov
lret
out
mov
xchg
cmpsb
or
cltd
adc
inc
test
xchg
test
adc
and
mov
mov
sbb
inc
insb
shrl
push
mov
stos
es
cltd
out
cs
xchg
les
ds
xor
in
xor
pop
sbb
fiadds
inc
cmp
addl
fmull
mov
sbb
fwait
aaa
incb
push
aas
in
add
mov
add
in
jmp
and
inc
in
pop
pop
xchg
sbb
mov
movsl
int
lret
push
rcrl
mov
push
sarb
ret
popf
pusha
pop
mov
or
or
repz
jne
or
testb
lret
xchg
int3
daa
push
jmp
ret
xor
xchg
nop
aaa
mov
or
push
sbb
sub
leave
test
or
fiadds
jle
rcrl
push
jns
pusha
jbe
test
mov
cli
ret
inc
pop
ret
inc
or
inc
jae
lods
add
mov
cmp
inc
inc
add
fisubrl
mov
mov
mov
sbb
divb
mov
into
mov
xchg
hlt
mov
add
inc
sub
sub
std
mov
dec
aaa
insb
jge
or
insb
loopne
pop
xor
int3
and
pop
and
pop
dec
into
mov
scas
and
sahf
pop
inc
cmp
mov
xor
aaa
daa
jbe
jno
jge
dec
les
std
call
daa
pop
mulb
jno
lods
fs
push
icebp
dec
or
xor
insl
jg
lahf
repnz
aad
mov
in
push
aad
fwait
inc
hlt
mov
cmpsb
xchg
jp
in
xchg
cmc
out
enter
pop
int3
clc
jae
xchg
loope
pusha
sub
popa
jmp
movsb
fs
movsl
xor
rorb
xor
jns
insb
mov
xor
xor
jae
sbbb
mov
pop
ret
lcall
push
faddl
xor
push
out
imul
jae
push
into
jl
sahf
jg
mov
data16
mov
pusha
mov
push
lret
int
mov
scas
idivl
push
ret
mov
testb
or
inc
pop
sbbb
push
outsl
jp
mov
stc
incb
fs
popf
sbb
inc
push
gs
arpl
fmuls
pop
loop
cmp
psubd
sbb
xor
pop
mov
test
xor
inc
inc
lret
sbb
push
and
pop
pop
pop
mov
in
imul
das
data16
lods
imul
mov
pop
mov
mov
sbb
push
in
loopne
xchg
cld
das
xor
dec
out
gs
and
loopne
cmp
mov
xor
push
scas
xor
pop
mov
sbb
or
mov
mov
in
pushf
adc
jmp
aas
cli
fstps
aad
inc
es
ja
test
es
jb
mov
sub
dec
cltd
cmp
icebp
mov
call
xchg
jb
mov
std
sub
mov
jle
inc
inc
aad
inc
mov
mov
cmp
dec
rcrb
and
cmp
and
inc
cmp
sbb
pop
mov
dec
mov
push
sub
mov
mov
xchg
mov
js
lock
rorb
les
sub
aam
js
mov
ss
test
loop
pusha
cmp
xchg
jmp
lods
ljmp
pop
lods
fwait
aas
imul
mov
sbb
lahf
add
push
cltd
dec
fcmovb
test
mov
lahf
push
aad
fldl
data16
stc
push
pushf
xchg
divb
roll
subl
or
fcoms
cld
cli
in
inc
xor
add
or
or
mov
lret
add
dec
ljmp
ja
add
dec
xchg
cmp
inc
jmp
in
fwait
data16
push
push
loop
sahf
add
cmpsb
mov
out
jmp
cltd
ret
jns
push
jmp
pop
xor
mov
mov
in
jmp
imul
mov
loopne
mov
jnp
repnz
es
push
jne
xchg
pushl
jmp
mov
xchg
lea
xchg
cmpl
out
dec
push
sub
aas
ljmp
cmp
and
fnstsw
push
js
pop
mov
lret
aam
iret
in
fnstsw
pop
stc
or
xchg
jae
lcall
das
fistps
adcl
fists
outsb
ljmp
repnz
push
cmp
je
mov
and
leave
incb
arpl
dec
inc
sub
test
cmpsb
dec
mov
sub
or
nop
pop
int3
or
movsb
pop
push
das
fisubrs
pop
std
ror
inc
scas
add
pop
cmp
ds
push
pop
int
jbe
cmpsb
xchg
out
sbb
jmp
cmp
add
jno
ss
jl
inc
dec
ja
rorl
mov
pop
iret
jo
cmp
or
test
mov
or
outsl
fsubrp
js
sbb
pop
shrl
pop
or
mov
stc
into
pop
loope
and
sub
xchg
insb
cmp
and
mov
movsl
cmp
in
and
sbb
and
mov
sbb
mov
add
addr16
xor
xor
cmp
inc
js
outsb
mov
inc
jmp
sbb
mov
fdiv
sti
jecxz
or
insb
lods
adc
sti
adc
aas
add
jl
sub
xor
int
cmp
sbb
push
idiv
dec
in
movnti
xor
mov
test
sbb
rcrb
push
jle
xor
xchg
outsl
pop
dec
loopne
jne
adc
mov
adc
adc
mov
cmp
mov
imul
iret
jle
loopne
or
or
imul
xor
pop
jns
fstl
mov
fldcw
mov
add
rolb
out
lods
push
neg
mov
cmpsl
sub
xchg
test
scas
xchg
cli
in
dec
push
cmp
outsl
dec
inc
gs
jl
loopne
mov
dec
popf
inc
cltd
inc
shl
repz
cmp
sbb
rclb
ret
test
inc
sbb
pop
ja
pop
adc
xchg
mov
push
push
cmp
pusha
scas
mov
aas
jb
jnp
dec
cmp
xchg
jno
jecxz
sub
lods
fidivs
call
or
out
cmpl
cmp
inc
mov
scas
das
icebp
out
mov
add
lock
xchg
mov
add
add
xchg
cwtl
adc
ja
mov
cmc
movl
cs
stos
mov
dec
and
jne
rcrb
and
rcr
inc
outsb
sub
cli
aam
dec
icebp
ret
dec
in
and
je
insl
insb
shl
dec
pop
dec
cs
sub
push
popa
push
mov
dec
mov
pop
mov
stc
mov
push
xor
inc
cltd
andb
cld
add
mov
or
clc
xor
jno
cmpb
rcr
lods
sbbb
stos
add
mov
hlt
jle
xchg
push
fmul
push
jmp
inc
iret
xor
cld
or
push
lret
xor
into
rcr
push
inc
cmp
pop
cmp
inc
andb
pop
sbb
fwait
xchg
add
push
test
cld
add
idivb
mov
xchg
in
pop
test
mov
cmpsl
mov
dec
pop
mov
movsb
jg
addr16
sub
cs
ljmp
jne
andl
or
pop
xchg
jb
jbe
mov
aad
pop
sbb
push
dec
ljmp
or
or
pop
jp
lcall
and
sti
cmp
add
in
jnp
mov
jle
xchg
in
das
or
iret
dec
test
ret
mov
inc
pop
call
push
sub
mov
add
fcmovbe
and
sbb
hlt
jge
loopne
pop
scas
in
xchg
and
mov
adc
fs
xchg
or
bnd
call
hlt
cmp
rolb
or
and
or
adc
int3
mul
jp
sbb
xor
or
pop
shl
aaa
scas
loopne
popf
and
sbbb
test
sbb
stos
cmpsl
and
dec
add
push
sbb
cs
pop
fs
das
cmp
out
scas
jg
dec
out
xlat
push
mov
push
xorb
sbbb
adc
test
imul
cmpsb
xchg
xlat
sub
arpl
pop
dec
xchg
push
push
das
loope
push
push
cmp
stc
dec
ds
and
mov
cmp
sbbb
push
add
jno
xor
xchg
rcrb
jp
rcrb
pop
lcall
dec
fcompl
pop
outsb
es
inc
adc
mov
in
jmp
fucomi
mov
cmp
adc
shr
dec
int
xchg
sub
addl
add
adc
cmpb
stc
flds
dec
rcl
cmp
loop
pop
lods
stc
insb
inc
mov
adc
test
sbb
insl
ds
out
pop
mov
pop
cmp
xor
jo
or
sbb
cmc
xchg
shll
mov
adc
imul
test
data16
lods
cmp
aad
cmp
sub
mov
in
mov
push
sti
pop
jmp
xchg
mov
outsl
loopne
inc
hlt
dec
cld
push
addl
stos
les
scas
repz
loopne
ljmp
mov
dec
lcall
xchg
cs
movsb
xchg
cmpsl
jnp
nop
sub
in
dec
jb
xchg
je
popf
cmp
paddusb
mov
mov
jle
daa
call
leave
dec
mov
lahf
and
adcl
xor
sbb
or
dec
or
inc
cmc
dec
nop
das
rclb
mov
mov
cmp
rcll
in
lret
std
testb
shrb
or
push
mov
mov
int3
xchg
lret
popf
add
mov
mov
lock
pop
inc
xchg
mov
icebp
sub
ds
and
ret
fldenv
es
xchg
lea
insl
insl
dec
push
out
adcb
push
pop
popa
insb
jns
lods
jno
out
out
icebp
mov
loop
mov
mov
sbb
or
cltd
mov
mov
mov
outsb
sub
in
mov
xchg
mov
clc
xchg
or
aaa
mov
shrl
adc
jb
in
stos
repz
aad
push
sbb
cltd
xchg
in
ljmp
xchg
xor
dec
add
cmpsb
pop
mov
shl
adc
jle
test
das
sub
hlt
int3
dec
jl
or
lds
fwait
les
and
add
dec
fwait
out
cmpsl
push
bound
inc
jns
lods
adc
jo
icebp
xchg
push
clc
jno
mov
xor
mov
add
lock
out
pop
lret
sub
dec
in
les
mov
stos
push
fbld
loope
xchg
inc
dec
mov
test
out
popf
aad
out
fiaddl
sub
xor
movsb
xor
push
popf
mov
jnp
aam
jle
push
ret
pusha
inc
cmc
addr16
stos
jbe
ret
mov
sbb
inc
sub
cli
jae
inc
inc
push
in
ret
jge
je
sahf
or
fiaddl
out
lds
out
push
das
mov
lret
xchg
mov
pop
pop
leave
in
xchg
adc
test
jo
xchg
sub
xchg
or
pushf
imul
xchg
add
pusha
xchg
pop
mov
cwtl
fdivp
sbb
rolb
outsb
scas
mov
popa
aaa
cmp
lahf
out
movsb
xor
bound
insb
lahf
jge
shlb
sbb
cmpsl
and
push
popa
test
bound
mov
dec
push
dec
cmpsl
push
test
xor
jle
add
sbb
cmpsl
test
lods
lret
inc
mov
mov
in
inc
lock
enter
pop
mov
loope
shl
sub
jno
cmp
mov
movsl
dec
xor
and
jecxz
xchg
adcb
or
push
in
lock
iret
js
mov
fcmovbe
mov
insl
mov
or
xor
adc
mov
faddl
add
outsb
mov
xchg
shlb
lret
cmp
cmpsl
mov
jne
aaa
cmpsb
js
mov
aad
int
mov
idivl
push
lret
int
bound
icebp
sbb
or
sahf
stc
inc
lods
test
mov
mov
stc
and
adc
pop
cli
ss
mov
cmp
cmp
fwait
out
cmp
xor
cli
dec
or
fisttpll
xor
inc
fists
das
jnp
imul
sarl
lods
and
adc
js
xchg
sub
mov
dec
in
and
cmp
outsl
imul
insb
pop
xchg
loopne
ljmp
imulb
adc
add
les
int3
or
fists
xchg
int
sbb
mov
nop
push
pop
fstpl
mov
stos
xchg
add
out
aad
lods
push
nop
or
icebp
aas
add
add
icebp
lds
dec
sub
jle
sub
fs
shlb
mov
push
in
aam
pop
jo
mov
addr16
xchg
sbb
sub
jmp
inc
in
jecxz
inc
mov
adc
adc
das
scas
inc
stos
mov
jno
and
cmp
mov
out
std
popf
sbb
push
jno
mov
mov
std
lret
or
push
mov
in
pop
es
xor
pop
shlb
rolb
jle
aam
dec
inc
ret
push
sub
jmp
push
and
ja
sbb
inc
popa
xorl
fmull
lahf
mov
into
fisubrs
aam
add
negb
adc
push
push
push
repnz
fnstsw
lods
loop
jle
arpl
ljmp
pop
sbb
sub
mov
or
lahf
js
dec
iret
dec
xor
dec
stos
or
loopne
xor
cmp
xchg
xchg
test
pop
lcall
fdivs
jb
outsl
dec
and
or
add
fwait
repz
lret
inc
xor
push
or
add
mov
push
in
push
jns
je
in
scas
cmp
push
leave
insb
mov
mov
adc
popa
jp
mov
sub
mov
aaa
out
sbb
mov
sbb
jne
lea
mov
xor
sbb
jno
out
inc
faddl
pushf
dec
popa
sub
xor
stos
push
sbb
mov
imul
jnp
mov
pop
in
jne
pusha
loop
nop
iret
or
ret
fistpl
cltd
pusha
inc
xor
cld
mov
scas
gs
movsb
sbb
add
sbb
fidivl
lret
scas
xchg
cld
decl
sbb
jnp
imul
jge
adc
int
jbe
fidivrs
sbb
lock
iret
mov
incb
push
or
pop
fcmovu
aaa
push
js
add
xchg
pop
fists
xchg
lahf
mov
rcrb
and
ljmp
movsb
mov
sub
jbe
decb
sbb
push
fbld
push
loop
cmp
test
jl
cld
sbb
lods
xor
push
pop
test
lahf
outsb
push
sbb
fistpll
push
add
ja
xor
iret
in
sub
sbb
pop
enter
push
test
jl
adc
sbb
insl
bound
xor
inc
and
incb
and
inc
sbb
jns
pop
lds
pop
into
je
js
test
cmp
mov
dec
fdiv
daa
xlat
sub
inc
lock
in
sub
adc
mov
push
jg
xchg
cmc
mov
decb
andb
lret
push
xor
int
popf
loopne
xchg
outsb
divl
inc
cmc
lret
jns
stc
mov
mov
pop
xlat
sahf
pushf
xchg
addb
loop
jmp
stc
fcmovbe
push
rcll
mov
popa
inc
fdiv
cmc
cli
out
lahf
shll
xor
xchg
push
cmp
add
jp
inc
add
jae
nop
loop
pop
rcrl
add
ljmp
inc
mov
je
or
adc
lods
pop
mov
mov
ds
sub
inc
mov
mov
and
mov
sub
jae
fsub
scas
mov
fiaddl
xchg
mov
mov
rcr
repz
xor
sbb
test
fcomps
movsl
insb
adc
loope
jmp
push
xchg
gs
cmp
mov
cmp
je
repnz
sub
mov
lea
call
inc
or
mov
xchg
test
xchg
pop
in
fwait
inc
pop
lret
and
mov
das
mov
mov
sub
popa
and
mov
shl
bnd
push
mov
std
inc
stc
cwtl
inc
out
insb
cmpsl
push
mov
mov
jp
xchg
cld
lcall
mov
sub
lock
mov
push
repz
sub
in
aam
lret
mull
es
cmp
and
dec
dec
lock
out
jl
mov
insl
lods
inc
movsl
sbb
inc
ja
mov
aad
xor
jb
stc
add
stos
mov
test
add
push
loope
push
fucom
int
clc
in
filds
popf
inc
ja
fldl
pop
enter
ror
shr
sub
pop
push
jp
dec
ljmp
sahf
xor
into
or
and
mov
xlat
scas
rorb
cltd
xor
adc
xchg
ja
notl
inc
inc
in
cmp
int3
mov
outsb
add
fidivs
add
cmp
bound
into
jns
loope
in
aad
xchg
movsb
fiadds
mov
aad
adc
loope
jp
xchg
sbb
inc
adc
sub
adc
jne
cmpsl
pop
mov
test
adc
jae
push
xchg
mov
mov
out
xor
sbb
sub
pop
push
push
or
or
xchg
insb
inc
push
push
jnp
fidivrs
out
in
scas
jb
jge
and
imul
ret
pop
aad
arpl
shlb
in
jb
jecxz
lret
dec
mov
adc
ja
jge
adc
jmp
xor
sbb
jge
imul
lods
push
pop
mov
adc
pop
mov
insl
inc
mov
fidivrl
pushf
hlt
sbb
inc
cmp
popa
or
xchg
faddl
or
xchg
dec
jae
int3
mov
cmp
fidivs
pop
imul
cmp
pop
scas
jge
scas
and
dec
cmp
pusha
push
cwtl
into
pop
jbe
add
jge
dec
imul
cli
or
cmp
sub
jno
shll
xor
imul
dec
mov
jo
pushl
lea
cld
test
int3
test
sbb
adc
sub
dec
lods
fcoms
pop
cmp
loope
adc
push
cmp
inc
movsl
pop
hlt
mov
ret
mov
mov
push
add
xchg
sub
push
inc
push
or
pop
std
js
imul
daa
adc
or
imul
dec
stos
inc
adc
addr16
jg
gs
loop
sub
pop
adc
or
flds
push
flds
push
int
mov
push
jl
div
dec
push
lret
lods
rcll
sbb
cmp
sahf
aas
mov
mov
aad
cltd
loop
add
stc
xchg
xchg
and
dec
push
insb
ss
iret
cmp
mov
mov
cli
hlt
stos
hlt
xor
or
xchg
into
and
popa
cmc
fistpl
out
cmc
popa
adc
imul
xchg
add
negl
lods
out
insl
mov
hlt
xchg
sub
jg
mov
testl
sti
pop
sub
loopne
outsl
cwtl
dec
sbb
f2xm1
or
inc
vhsubps
xchg
push
mov
sbb
xor
mov
pop
inc
loope
adc
pop
loope
push
mov
aad
cmp
nop
mov
adc
jb
loopne
dec
push
push
je
sbb
cmp
movsl
mov
addr16
push
xor
adcl
fucom
scas
in
inc
jecxz
aam
inc
add
insl
mov
mov
fucomip
sti
and
xor
mov
cmp
jmp
push
cwtl
add
cmpsl
push
jnp
mov
push
fwait
add
lds
xor
lods
lea
loope
mov
popf
outsb
out
sub
sub
aaa
aam
popf
push
ret
xchg
es
les
xchg
mov
dec
outsb
xchg
divl
aad
popa
mov
std
lods
mov
adc
repz
mov
faddl
push
psrlw
and
sub
stc
mov
xor
int
or
loope
and
xchg
sbb
stc
shll
pop
pop
jae
xor
andb
push
fcmove
decl
outsl
out
mov
arpl
popa
push
mov
fidivrl
dec
in
jl
test
xchg
push
aas
sub
das
pop
inc
fdivl
dec
fwait
push
inc
or
adc
outsl
add
repnz
bound
jmp
insl
repnz
in
push
xchg
xchg
repz
mov
test
add
nop
xchg
in
mov
dec
jp
jb
mov
jnp
mov
cmpsb
dec
adc
sub
mov
filds
xchg
mov
ret
test
push
sub
mulb
xchg
add
and
mov
jnp
rcl
jle
xchg
imul
dec
inc
pusha
sbb
nop
ret
jb
or
or
jle
in
ret
push
xor
sub
cld
add
pop
xchg
stos
mov
sbb
push
mov
scas
jns
jb
mov
in
mov
leave
repnz
leave
push
addb
les
out
addr16
push
out
push
or
js
loop
test
pop
cmp
sub
es
lods
rclb
scas
pop
xchg
scas
and
cmp
cmp
pusha
pop
movsb
aam
push
push
out
insb
jbe
jl
jge
pop
loope
pop
andb
jo
cmp
xor
mov
pop
enter
mov
addr16
and
lahf
lods
clc
add
jnp
test
xchg
cmpsb
push
inc
dec
mov
mov
sti
out
cmp
inc
test
push
adc
loope
in
clc
sub
cmc
mov
lret
fldt
jbe
lock
pop
push
and
dec
cmp
sbb
dec
push
add
loope
xor
es
add
das
call
pop
mov
in
push
pusha
mov
sub
sbb
adc
rcl
inc
aas
test
cmp
mov
xor
iret
lds
and
xor
outsl
int
fisubrs
int3
imull
lret
cwtl
shll
rorl
inc
xchg
sahf
loop
add
mov
push
add
push
dec
xchg
stc
dec
clc
in
xlat
mov
adc
jns
es
xchg
fsubrs
mov
xor
mov
daa
in
xor
jecxz
cmp
lea
or
out
add
push
xor
cmc
mov
sbb
sti
adc
mov
popf
add
leave
xchg
lods
aad
bound
xor
jl
mov
bound
push
xchg
loopne
dec
jno
js
and
std
xor
daa
and
push
fldl
xchg
push
js
sbb
insl
outsl
adc
pop
not
inc
adc
and
jmp
sti
cs
outsb
nop
cltd
xchg
int3
aas
loopne
sub
mov
xorb
jecxz
inc
int
mov
adc
test
mov
sub
cwtl
ret
aam
mov
inc
push
cltd
inc
popa
arpl
das
dec
lock
xchg
jp
and
sub
rorl
movsb
leave
std
xchg
sti
sbbl
xchg
aas
mov
sub
std
cld
lock
jmp
pop
xchg
mov
lock
int3
pop
mov
ret
inc
fsubl
jl
add
scas
dec
es
mov
inc
add
jno
out
popa
enter
sbb
mov
mov
jecxz
mov
wrmsr
loopne
add
cltd
xchg
mov
and
loopne
xchg
push
addr16
loopne
pop
rolb
add
aaa
rorl
jle
stos
scas
dec
mov
jecxz
bound
xor
adc
or
repz
xchg
cmp
stos
test
int
ja
or
dec
dec
scas
rolb
mov
fwait
cmpb
mov
into
add
dec
ja
out
and
sub
loop
jns
cmpsl
icebp
in
push
add
mov
rorl
pop
dec
or
jp
add
fnstsw
xchg
dec
js
dec
jne
or
fbld
dec
cmpsb
jmp
dec
jnp
sbb
and
sub
and
push
aad
imulb
scas
lea
insb
sbb
sub
add
xor
push
pusha
mov
aas
iret
daa
fcomps
ret
sbb
jmp
arpl
sarl
clc
add
iret
mov
jnp
dec
fimull
in
xchg
add
out
sbb
cld
mov
mov
push
out
bound
pop
inc
mov
repnz
mov
hlt
mov
pop
arpl
sbb
insl
or
mov
pop
or
test
jns
jg
lea
fidivrs
lds
mov
mov
jmp
cmp
cmp
adcb
std
jbe
imul
push
jge
cmp
testb
pop
add
xor
insl
fwait
push
adc
repnz
ljmp
push
popw
shrl
imul
inc
fisttpll
in
loop
enter
ljmp
xlat
fsubp
shl
mov
cmp
add
cltd
jae
movsl
inc
fisubl
jp
ss
pop
adc
sbb
pop
mov
xor
mov
lods
pop
inc
loop
js
pop
mov
lcall
jns
repz
xchg
sub
sbbl
jg
adc
mov
xor
mov
and
and
push
fmul
xchg
adc
je
das
lret
insb
sarl
das
sbb
add
test
repnz
outsl
xchg
nop
dec
loop
pop
stc
incb
bound
pushl
imul
popf
fsubrs
jl
out
fstl
xor
dec
aam
mov
dec
or
mov
cmc
imul
pop
xor
push
imul
jbe
and
push
addr16
pop
lods
mov
rcl
xlat
je
sub
test
mov
cmp
in
int
xchg
sti
lds
loop
mov
stc
loopne
inc
jmp
xlat
dec
mov
fstps
pusha
les
mov
xchg
fnstenv
xor
test
test
cmp
pop
test
push
mov
jmp
repz
mov
jge
or
nop
je
bound
jg
stos
jb
lret
js
add
mov
push
addr16
mov
inc
inc
lret
test
mov
addl
fildl
xchg
pop
into
insl
xchg
inc
icebp
pop
loope
jl
comiss
xor
mov
movsl
js
rcr
pop
push
std
cmp
ja
hlt
cmpsl
push
xchg
add
lcall
sbb
xchg
lret
enter
add
mov
test
pop
fistpl
ror
js
sub
out
inc
aas
stos
ret
movsb
cmp
insl
iret
inc
dec
cmp
xor
ljmp
jns
mov
ljmp
jg
add
int3
and
scas
bound
sub
fdivr
xchg
xchg
and
jp
mov
shl
sbb
daa
stos
sahf
aaa
pop
out
inc
outsl
xor
or
xor
xchg
add
mov
loopne
movsl
dec
mov
cmpsb
out
ja
pop
pop
dec
cmp
lret
inc
or
mov
scas
ja
push
push
ljmp
arpl
popa
out
add
bound
cli
lret
decl
in
inc
xor
mov
sbb
mov
push
adc
addr16
arpl
dec
mov
push
dec
dec
mov
test
xor
push
out
mov
cmp
cmpsl
xchg
mov
adc
xchg
sbb
and
mov
and
sbb
xor
adc
push
stos
popa
sub
insb
xor
jnp
stc
lea
lret
mov
sub
xchg
out
jp
or
and
mov
mov
ds
lds
adc
xchg
pop
test
fsubrs
cwtl
scas
aas
jne
push
cs
daa
adc
cmpsl
mov
es
std
hlt
sti
scas
add
ret
cmc
inc
inc
cli
and
add
fs
stos
or
fldl
adc
adc
pop
fwait
jne
ficomps
ss
pop
rorb
ret
and
rclb
test
push
pushf
push
test
jbe
lret
inc
jge
mov
daa
push
push
imul
push
jno
jecxz
jl
in
dec
sbb
push
hlt
dec
cmp
inc
mov
outsl
push
cmp
ret
test
sub
mov
cmpsb
in
leave
or
enter
pop
les
or
ljmp
cmp
fnstsw
mov
xorb
mov
fsubrp
sbb
lds
xchg
fnsave
xchg
cwtl
not
mov
dec
pop
push
jl
xor
add
mov
test
push
push
mov
fcompl
aad
outsb
js
outsl
adc
clc
add
jg
in
mov
mov
stos
int
push
loopne
push
loop
test
out
mov
xchg
xor
mov
push
rcll
mov
in
sbb
aas
xor
ss
icebp
xor
push
loop
jns
stc
mov
icebp
fs
shrl
shr
lods
movsl
adc
push
pop
sub
jecxz
sbb
xor
cli
lea
xor
fidivrl
adc
into
int3
sub
cmc
xor
bound
cld
cmpsl
js
push
sub
adc
stos
imul
add
push
push
mov
xchg
xlat
mov
mov
mov
cmp
and
fs
gs
sbb
dec
ss
sbb
xchg
cmp
repz
sbb
jecxz
and
mov
int3
cltd
adc
setl
dec
jmp
scas
outsb
cs
pop
dec
aad
jg
nop
dec
arpl
aas
push
pop
js
nop
push
xchg
dec
jnp
mov
jecxz
nop
fadd
ret
call
push
mov
mov
movsl
sbb
or
xor
inc
inc
js
sbb
das
or
mov
add
dec
and
sbb
shrl
adc
std
loopne
lds
push
call
shl
repz
cld
inc
mov
lret
aaa
sbbb
shll
repnz
pop
pop
cli
jns
shlb
movsb
push
aam
push
xchg
xor
es
insl
mov
in
xchg
jecxz
push
ljmp
or
mov
dec
lret
icebp
cmpsb
xchg
mov
out
cmpsb
rolb
jp
imul
jle
js
in
fnstsw
inc
clc
roll
sbb
stos
sarl
pop
jne
je
xchg
test
fcomp
push
out
and
in
jmp
or
adc
adc
xchg
fwait
std
dec
and
test
adc
xchg
cs
dec
cs
je
mov
les
fidivrs
int3
push
cli
je
add
jle
mov
les
jns
cld
test
mov
xchg
loopne
divb
stos
test
addr16
add
inc
pushl
icebp
jns
mov
dec
pop
dec
ds
jne
sti
and
loope
clc
xchg
aaa
add
inc
xchg
in
or
mull
imull
pop
mov
jecxz
aam
and
pop
push
insb
out
int
jnp
mov
jle
push
mov
xchg
jp
pusha
jmp
mov
or
cmpsl
ds
insb
and
cltd
rcll
jle
cld
popf
add
add
cld
inc
jns
fidivl
insl
hlt
sbb
lret
int
imul
es
jne
jo
mov
or
repnz
xor
hlt
inc
std
sbb
lods
mov
inc
ss
jle
divb
and
mov
cmpsl
xchg
fxch
arpl
add
lds
shlb
stc
pop
mov
cmp
movsb
jne
push
push
aam
xchg
jbe
mov
int3
sbb
and
xchg
xchg
push
jno
mov
fdivl
dec
out
adc
insl
xor
mov
mov
or
cmpsb
test
clc
xchg
int3
inc
sti
sub
and
mov
sbb
xor
mov
xchg
loope
dec
jbe
sub
xchg
cmp
dec
cmc
fisttps
xchg
movsl
je
lret
test
sbb
std
jne
lahf
insl
mov
xor
add
pop
xchg
hlt
add
pop
cmp
sbb
add
fmull
std
sub
daa
clc
adc
roll
cmc
mov
roll
mov
mov
fwait
mov
int
cmp
sub
mov
lret
mov
in
xor
ds
sbb
bound
adc
or
or
xor
or
clc
sbb
adc
or
out
xchg
mov
sahf
mov
sar
ror
xor
xchg
out
or
lcall
divl
mov
adc
aam
imul
add
insl
gs
ret
mov
cltd
mov
into
sub
or
in
mov
cltd
pushf
incb
fs
mov
orb
js
push
cmp
outsl
repz
jle
sbb
push
lds
cmp
in
psubusb
pop
fstl
jmp
cs
cs
test
dec
nop
sub
mov
jb
test
je
add
jecxz
sbb
mov
rorl
cmp
mov
hlt
lret
mov
xorl
xor
popa
push
pop
adc
jns
decl
mov
das
jmp
push
mov
mov
test
lahf
jbe
std
xchg
test
push
mov
cmp
lods
scas
mov
lret
cmpsb
lcall
leave
or
lock
ja
pop
sbb
mov
sub
decb
ret
ret
es
cmp
dec
xor
insb
ljmp
push
lods
pop
push
mov
mov
clc
cli
in
mov
dec
adc
lea
cltd
cmp
push
test
mov
mov
rcr
xchg
xchg
loop
sbb
aas
rcll
push
mov
out
or
into
xchg
mov
push
push
rorl
xor
pop
mov
lock
xor
lahf
out
fmuls
repnz
test
adc
orb
std
inc
cmp
mov
cmc
fwait
or
repz
xorl
out
rolb
bound
outsb
jns
popf
ds
sbbb
nop
cld
push
mov
jl
and
push
out
jp
idiv
mov
mov
mov
xlat
and
or
fisttpl
mov
filds
jl
xchg
or
or
or
out
xchg
or
into
mov
or
pop
hlt
and
sti
jns
pop
jle
jnp
xor
cltd
shrb
in
cmpsl
pop
pusha
test
das
iret
inc
mov
ret
mov
call
ja
jae
jmp
push
inc
mov
adc
clc
shld
mov
sbb
icebp
inc
imul
scas
add
jb
adc
scas
aad
or
dec
sub
lahf
push
arpl
fadd
inc
inc
cli
stc
xchg
jb
loop
jmp
and
add
cmp
pop
stc
sbb
xor
inc
shlb
scas
fsubs
cmp
scas
and
or
shr
jge
mov
daa
push
mov
and
pop
ljmp
adc
mov
insl
fidivs
jb
lahf
sub
push
fbld
stos
test
ret
loope
inc
mov
cmp
scas
imul
xchg
mov
sub
inc
popa
jne
add
mov
sbb
outsl
cmp
popf
movsl
jnp
mov
dec
adc
jl
jp
xchg
push
rcrl
imul
xor
mov
movsb
js
mov
stc
lcall
sub
hlt
outsb
imul
scas
sbb
jg
scas
lss
out
enter
inc
and
sbb
call
mov
jne
mov
in
lcall
mov
jne
sbb
push
ja
inc
call
pushf
outsl
xor
loop
js
stc
and
clc
add
adc
ret
jp
movsl
sub
out
mov
mov
cmp
ljmp
xchg
clc
push
cmc
mov
cmpb
hlt
cwtl
xor
xor
fiadds
into
je
lock
add
jno
xchg
mov
inc
mov
mov
push
push
ret
js
stos
stos
mov
loopne
lcall
jnp
mov
les
repz
cli
xchg
and
adc
pop
mov
mov
repnz
ret
adc
shr
jmp
jb
cs
rcl
fcomip
stos
nop
add
mov
fwait
dec
imul
jecxz
in
add
mov
mov
mov
stos
mov
scas
nop
mov
mov
or
push
fistl
mov
inc
xchg
int
xchg
das
enter
and
adc
ror
mov
mov
testb
mov
mov
test
inc
lret
adc
dec
mov
xchg
lock
cmp
cmp
rorb
jbe
and
mov
ret
push
jns
es
subb
push
dec
cs
clc
xchg
popa
addr16
cmp
push
sbb
leave
xchg
or
xchg
ds
and
cwtl
xor
shrd
mov
sub
test
bound
jae
scas
pop
push
clc
inc
pop
roll
iret
inc
push
shl
cmp
stos
imul
xchg
roll
mov
xor
adc
or
imul
movsl
mov
jmp
dec
inc
test
stos
mov
dec
adc
xchg
inc
iret
roll
cmp
adc
inc
inc
add
mov
mov
ljmp
in
mov
dec
mov
pushf
sarb
aaa
lods
pop
scas
lea
jp
pop
loope
ficompl
inc
mov
and
dec
add
jl
mov
test
fistps
mov
fsubr
cmp
mov
adcl
aas
sub
or
xchg
subl
les
mov
jb
jle
inc
xor
mov
lcall
add
sbb
testb
and
lock
add
push
popf
mov
mov
inc
ja
dec
ficompl
mov
lcall
mov
cmpsl
push
add
imul
fiaddl
hlt
fcoml
addb
cmp
push
mov
fisttps
int3
cmp
mov
fimuls
jmp
mov
scas
mov
sub
out
mov
cmp
sbb
movsb
mov
pop
push
jb
pop
jbe
cmpsl
loopne
add
out
push
aad
daa
dec
fnstenv
cli
fdivl
dec
scas
jl
inc
out
int
dec
push
popf
js
xor
push
stc
mov
inc
push
mov
mov
std
test
mov
mov
in
jle
cmpsl
enter
pop
orl
data16
or
cmp
jno
ds
xchg
pop
and
xchg
sub
subb
mov
rcll
aam
pushf
pop
fists
cltd
pop
aaa
jl
lcall
cmp
lahf
mov
sub
cmpsl
outsb
mov
jmp
daa
jg
xchg
enter
push
mov
aam
mov
rcrb
and
fldl
jge
int
jmp
sub
or
mov
rcrl
xchg
mov
sub
push
cmc
outsb
sahf
adc
mov
lret
pop
fiaddl
shl
xor
popa
stc
fildl
pop
adc
fcomps
cmp
adc
movsb
out
mov
cmpsb
xor
inc
cmp
adc
into
jne
sbb
test
add
push
lock
xchg
lret
out
xchg
adc
xlat
jmp
data16
hlt
lods
pop
pop
imul
push
push
sub
mov
jns
sar
sbb
dec
xchg
push
movsb
xchg
dec
push
repnz
mov
jo
cmp
les
movsl
pop
xchg
in
push
dec
dec
inc
cmp
xor
or
or
in
pushf
push
cmp
mov
sbb
aad
inc
stos
nop
loopne
xchg
aas
sti
leave
add
adc
dec
loopne
and
adc
xchg
add
lret
mov
call
sub
mov
and
andl
pop
sub
pop
es
or
jle
das
cmpsl
pop
cmc
mov
sub
mov
divb
mulb
out
jb
arpl
inc
cmpsl
dec
stc
dec
mov
pop
nop
test
dec
pop
lret
test
mov
push
and
lock
rcrb
pop
sub
sahf
aam
jb
ret
loopne
and
hlt
xor
jb
repz
sub
insb
ljmp
fldt
xor
mov
push
iret
mov
xor
dec
ud2
out
sbb
mov
les
push
lds
ss
or
popl
andb
jecxz
pop
jne
jp
pop
sub
shlb
sbb
push
ja
fwait
inc
lods
pop
xor
sbb
xor
mov
mov
in
push
fimull
test
test
aam
ja
shll
pop
mov
xchg
or
ret
imul
jecxz
jl
pop
jmp
out
jle
js
jge
push
jns
lret
push
adc
int
mov
lahf
loopne
pop
repnz
cmc
scas
dec
jno
inc
jno
mov
cmpsb
pop
mov
inc
ss
dec
out
pop
jne
push
loopne
cmp
sbb
ds
imul
inc
adc
andl
sub
or
sub
and
jnp
ja
jle
cmpsb
jecxz
cmpsl
sub
pop
iret
add
pop
aaa
gs
push
xchg
sti
inc
lea
les
lret
pop
popf
fcompl
inc
inc
imulb
fcmove
mov
mov
loope
sarb
scas
lret
outsb
loopne
dec
adc
bound
mov
ljmp
loopne
arpl
add
inc
dec
lret
rorl
push
pusha
jle
or
cmc
add
int3
and
add
push
pusha
fisubrs
jno
shl
loopne
xchg
inc
test
subb
test
shll
lret
inc
fsubs
jge
xorb
dec
jp
cmp
pop
call
dec
cmp
jne
add
xor
mov
xor
test
shrl
pop
ja
inc
test
shlb
gs
cmp
es
pop
sarb
push
xor
loope
jmp
sub
pop
nop
cmp
cmpsl
std
ds
push
push
movsl
mov
and
sub
sbb
add
loope
xor
stos
in
xchg
out
jl
push
mov
stos
pop
mov
dec
lcall
insl
fmull
inc
sub
int
add
pushf
adc
orb
adcl
daa
dec
cltd
mov
das
lods
and
sub
out
jl
int
sbb
sub
jecxz
lret
mov
mov
mov
sbb
fldt
push
cmp
sbb
or
stc
xchg
mov
jne
cmc
jne
ss
mov
iret
jmp
out
aas
mov
pop
add
sbb
adc
pop
xchg
ljmp
lods
lcall
mov
test
popa
cmp
in
dec
sbb
into
in
aas
call
icebp
xlat
scas
pusha
lock
sub
lods
add
in
in
mov
xor
gs
sub
int
mov
cltd
inc
mov
pop
add
xchg
fldt
mov
sub
iret
dec
lret
mov
xchg
pop
sub
rclb
pusha
cmp
jmp
inc
mov
jge
rcl
insl
cld
mov
mov
negb
fsubl
lods
dec
push
nop
xlat
je
fs
movsl
pop
cmp
into
out
lea
aad
aas
mov
mov
mov
dec
sbb
pop
std
stc
std
inc
xchg
ja
inc
add
das
xchg
test
pop
call
div
push
lret
jg
push
or
cmpsl
dec
pop
lahf
mov
xor
add
repz
mov
mov
lock
sub
shr
adc
push
in
aam
xchg
xchg
ret
outsl
mulb
ja
es
pop
jbe
dec
and
bound
and
mov
mov
lods
lahf
xor
mov
flds
pop
mov
push
sub
mov
nop
test
inc
mov
cli
sbb
mov
sbb
loopne
cmc
push
push
sbb
scas
inc
pop
and
mov
xor
mov
jne
popa
sbb
or
ret
aas
in
mov
out
pop
dec
mov
xchg
out
movsl
decb
jb
inc
std
sub
fwait
lcall
add
ljmp
bound
jl
jns
push
daa
in
mov
cmp
mov
lods
cmc
xchg
lods
xchg
out
jae
push
mov
push
mov
scas
or
jne
mov
les
xchg
sub
jmp
adc
icebp
xorl
ja
aaa
shrl
orb
cmp
mov
scas
stos
insb
lcall
jle
add
scas
xchg
push
dec
repnz
popa
bound
sub
pop
aam
inc
cwtl
outsb
jge
mov
push
mov
cmpl
orl
pusha
sbb
pop
mov
and
call
cld
adcl
imul
sbb
jb
mov
inc
push
loopne
or
push
pushl
pop
subl
jne
add
clc
or
loop
pop
xchg
fimuls
inc
xlat
push
test
adc
pop
scas
jne
loope
adc
in
movsb
mov
xchg
jbe
jge
jge
iret
pushf
sbb
daa
dec
lahf
push
cmp
push
jno
cwtl
or
jecxz
stos
xchg
lret
add
xor
or
lahf
test
cmp
add
mov
push
and
mov
aaa
mov
in
dec
insl
ljmp
je
push
xor
pop
mov
cmp
xchg
mov
aam
nop
xchg
sbb
sbb
inc
cltd
mov
mov
add
xchg
xor
inc
out
sub
xchg
daa
pop
xor
or
mov
popf
sub
std
outsb
addr16
adc
aas
roll
mov
xlat
mov
test
mov
mov
mov
jecxz
and
mov
icebp
out
fmul
icebp
sub
imul
or
jae
loop
dec
mov
bndstx
mov
test
ja
xorb
outsl
int
stos
loop
std
cmp
dec
fwait
add
push
adc
ss
call
repz
inc
pop
cli
mov
daa
cmp
loope
or
fbld
cmp
cmc
adc
sub
ret
pusha
mov
adc
lea
dec
mov
aas
jge
jnp
movsl
data16
pop
lods
es
mov
ss
sub
outsl
mov
dec
int
sti
fildll
or
cmp
dec
adc
xchg
pop
jg
test
push
les
loopne
xchg
imul
cmp
cli
adc
pop
fisttpl
mov
mov
dec
pushf
sarb
pushf
fisubrl
loopne
mov
mov
cmp
xchg
enter
daa
scas
jb
imul
into
and
jecxz
hlt
test
mov
jmp
outsl
call
testb
into
sub
dec
add
arpl
mov
pminub
dec
outsl
das
or
fidivrs
daa
mov
out
add
mov
jmp
std
and
cmpsl
dec
inc
add
or
and
sbb
movsb
lock
mov
lret
mov
pop
xchg
xchg
rol
pushl
aam
add
ret
sbb
insl
inc
dec
pop
pop
pop
xchg
push
inc
outsl
ljmp
stc
lods
or
mov
cld
xchg
shlb
imul
cltd
push
icebp
mov
mov
dec
mov
pop
mov
clc
clc
lret
je
je
lods
sbb
rcll
popf
bound
fldcw
cwtl
scas
ds
cmpsb
imul
xor
xor
test
sbb
mov
repnz
sub
test
test
jecxz
ja
or
pushf
inc
xchg
adc
or
cmp
fwait
leave
jp
push
sub
add
add
push
dec
bound
mov
in
hlt
mov
imul
mov
push
pop
imul
sub
mov
push
movsl
xor
sub
jne
sub
mov
add
xchg
push
arpl
jmp
fmul
icebp
add
inc
out
mov
jns
in
push
mov
stos
adc
and
insb
add
iret
fwait
jle
dec
and
mov
inc
pusha
lock
and
ret
outsl
pop
les
mov
pop
fidivl
popf
sub
test
hlt
pop
or
xor
jge
bound
sbb
shlb
imul
scas
xchg
mov
icebp
adc
sub
pop
dec
or
mov
arpl
jbe
push
push
or
in
xorl
or
add
jl
pop
mov
jb
icebp
das
or
pop
mov
stos
scas
push
clc
xor
test
cmpsl
cmp
cmp
cmp
fwait
dec
jbe
xchg
loope
testl
mov
cmp
hlt
jle
mov
repnz
sbb
shlb
addr16
lahf
movsb
and
push
sub
mov
push
out
pop
and
xchg
cmpsb
mov
sub
sbb
mov
push
fbld
sub
jno
cmp
scas
mov
cmp
mov
test
loop
dec
sbb
xorb
jno
push
sbb
mov
mov
lcall
fsubl
stos
outsb
lret
adc
sbb
mov
mov
repnz
mov
ljmp
hlt
aad
pop
pop
mov
movsb
mov
sbb
data16
rcr
gs
mov
pop
sahf
cli
js
test
push
adcb
inc
loop
out
stc
add
mull
icebp
adc
pop
cmc
cmp
inc
icebp
loopne
sub
mov
mov
and
fiadds
push
into
push
add
jns
push
sub
pop
or
add
imul
jno
add
cmp
data16
lds
mov
daa
xlat
sub
scas
mov
mov
lahf
dec
ss
loopne
and
dec
jo
mov
jmp
push
repz
cs
xchg
sbb
inc
cmp
mov
mov
sahf
mov
push
sub
imul
mov
mov
aad
xchg
scas
nop
jno
push
aas
fcomps
jb
out
dec
inc
pop
mov
jecxz
aam
aam
adc
mov
sarl
icebp
pushf
fisttpl
pop
inc
adc
inc
cmp
inc
addr16
into
mov
jb
roll
mov
aas
std
lret
cwtl
xchg
pop
inc
cmpsl
dec
scas
bound
loopne
dec
cld
dec
popa
lret
nop
or
lods
mov
lock
enter
add
sub
pop
stc
aam
lret
lea
shrb
loopne
sbb
or
or
popa
sbbb
mov
pop
xchg
xlat
and
add
or
sub
add
jmp
imul
fsts
sbb
frstor
sub
xor
sti
xchg
lret
fwait
xor
pop
jbe
popf
stos
daa
push
out
sti
mov
sahf
push
or
iret
lcall
std
orl
xchg
dec
or
addr16
gs
mov
mov
dec
loopne
push
inc
sub
ja
dec
xor
fwait
clc
shll
int3
mov
add
mov
bound
dec
cmp
in
bound
mov
movsl
cmpl
stos
movsl
jmp
mov
mov
loopne
lea
daa
dec
nop
shrl
mov
push
fistps
adc
sbb
add
adcl
out
sub
sub
stc
fstl
stos
xchg
pop
insb
jo
mov
and
jle
mov
in
add
dec
mov
ret
pop
sti
inc
adc
xchg
jae
and
adc
push
inc
das
mov
jae
add
out
adc
rcrl
imul
xor
push
pop
testl
stos
notl
leave
sbb
hlt
or
int3
inc
push
push
cmc
push
popf
sbb
or
ficoml
xor
push
pop
in
ficoms
add
inc
cmc
jne
xor
and
rolb
cmp
mov
adc
jbe
and
jge
sbb
repnz
das
daa
dec
jne
cmp
inc
pop
jno
jne
jl
pop
dec
dec
mov
push
sub
adc
addr16
lahf
ret
sbb
ja
sub
inc
push
jno
cmpsb
ds
sbb
gs
pop
jge
xor
loope
shl
sub
cmp
ds
outsb
movsl
sahf
and
and
jbe
push
fwait
pushf
xor
xchg
sbb
push
xor
and
loopne
adc
mov
rcrl
pop
xor
lcall
fmull
shrb
pop
sarb
outsb
sub
mov
shl
scas
fs
pop
mov
mov
int
mov
inc
dec
and
mov
divl
pop
int
clc
mov
pop
push
loop
insb
loopne
lret
sbb
jbe
rorl
fstpl
out
push
subb
cmp
jg
idiv
mov
lret
fs
inc
xchg
ss
fadds
push
ss
fldl
cli
repnz
mov
add
into
add
xor
dec
pop
sub
mov
adc
imul
xchg
shlb
out
lahf
lods
hlt
fldl
jbe
mov
insb
outsl
sub
inc
add
mov
and
push
inc
pop
lret
sarb
pop
mov
xlat
inc
fidivl
fsts
lds
repz
sub
xchg
icebp
sahf
sbb
orb
xor
negl
loop
adc
and
inc
cmp
cmpsb
imul
inc
je
nop
dec
mov
aas
ja
or
xchg
orb
int3
je
mov
ffreep
xlat
mov
lea
mov
mov
test
cmp
adc
fstpt
mov
inc
sub
inc
push
arpl
and
or
add
mov
rcll
mov
xor
std
jno
aas
cwtl
dec
popa
pop
cmpsl
dec
popf
mov
pop
jnp
icebp
mov
idiv
jae
dec
lret
inc
inc
cmpsb
mov
imul
jae
std
lock
lea
pop
shll
shlb
in
sub
ret
aam
in
ret
sbb
icebp
add
dec
adc
mov
popf
popa
xchg
dec
sub
cs
lds
lahf
sub
xchg
jae
cltd
test
test
mov
fstp
mov
int
outsb
sub
jb
dec
sbb
xchg
lcall
stos
push
out
pop
mov
push
push
jecxz
mov
jnp,pt
xor
mov
push
loope
mov
clc
stos
inc
dec
repz
inc
test
inc
ja
push
or
push
repz
add
push
outsl
out
push
add
cmp
mov
leave
push
idivl
aad
in
and
and
cmp
andb
push
jp
and
mov
cld
and
jae
mov
xchg
aaa
mov
cmp
xchg
cld
hlt
push
jmp
jb
xchg
and
dec
out
wrmsr
sub
hlt
imul
stos
stc
lret
mov
insb
fildl
jnp
ss
jle
ret
outsb
in
jmp
push
iret
jle
js
arpl
push
pop
xor
inc
mov
imul
popf
js
repz
repnz
in
lcall
sbb
aaa
mov
mull
push
data16
mov
inc
mov
hlt
push
push
adc
pop
test
pop
or
fistpl
and
pop
test
enter
and
shrb
ss
adc
fidivs
and
lds
shlb
scas
adc
lods
cmp
push
movsb
inc
stos
pop
push
std
jnp
jbe
and
cmp
lods
fwait
shlb
es
cmp
pop
dec
jno
sbb
jl
jbe
dec
clc
add
push
or
fs
sbb
adc
shll
sub
sub
mov
pop
in
add
enter
pop
mov
pop
jecxz
mov
fcom
cmp
mov
and
cmp
sub
sbb
aad
add
jb
xor
incl
pop
mov
pushf
cld
pop
mov
mov
adc
negb
sub
mov
call
rcl
cmp
jg
pop
xchg
jne
outsb
mov
cmc
jno
jle
mov
cli
add
sub
xchg
dec
dec
and
mov
leave
xchg
outsb
mov
enter
push
and
outsb
pmaxsw
adc
xor
ss
out
cmp
mov
outsl
cli
and
pop
into
cmp
dec
in
xor
jbe
in
xor
push
repnz
adc
jns
imul
loop
sub
push
data16
stos
mov
int
stos
roll
mov
nop
or
jl
fsubs
mov
loopne
popa
cmc
dec
loopne,pn
inc
in
dec
sbb
dec
inc
and
mov
cmp
sbb
mov
sbb
hlt
fsts
pushf
rcll
or
aad
mov
or
push
shr
jb
jns
dec
xor
shl
pusha
in
fcmovu
std
lea
and
call
cmp
orl
aas
adc
stos
cmpsl
inc
pop
mov
lds
sub
es
add
in
mov
mov
push
shll
and
cwtl
or
push
cmpsl
dec
adc
mov
mov
push
lret
scas
mov
mov
jg
mov
mov
lock
pop
repnz
cmp
xor
ljmp
ret
stos
and
orl
insl
cmc
imul
xchg
fstpt
mov
lods
dec
push
mov
mov
and
cmp
push
add
add
cltd
mov
add
mov
aad
push
add
repz
clc
test
dec
js
add
pop
int3
cwtl
shrl
lods
or
mov
clc
shlb
sbb
shrb
lods
test
sti
xor
dec
pop
or
test
dec
push
ja
pop
cmovp
pop
icebp
inc
pop
cmpsl
ret
movsb
push
fwait
push
shlb
adc
jg
xor
jmp
out
fnstenv
bound
jns
repnz
or
xchg
pop
xchg
loope
gs
mov
cltd
js
addr16
jno
mov
std
push
mov
imul
dec
push
add
mov
xor
fidivl
jmp
cmp
aas
jne
inc
addr16
sub
out
mov
insb
stos
xchg
and
imul
in
jo
lret
pusha
rcrl
ret
cmc
pop
imul
jae
xchg
pop
push
xchg
in
popf
lahf
and
fcomps
ret
jnp
fimull
adc
pop
sub
imul
and
lods
sbb
mov
push
mov
repz
sahf
aas
andl
rol
aam
lcall
mov
cmp
pop
lcall
inc
or
dec
sarb
icebp
and
and
adc
sbb
adc
push
dec
push
fdivl
lcall
push
pop
cmp
adc
jecxz
jl
bound
push
out
test
jo
ret
loope
add
adc
pop
push
test
push
sub
inc
jae
sub
in
call
shrl
sub
loope,pt
jb
sub
dec
cmp
push
xor
add
lods
inc
add
mov
cmp
sbb
pop
add
push
sub
sbb
js
jb
pop
xor
lcall
mov
imul
repz
adc
stos
faddl
jg
pop
test
mov
mov
mov
lea
inc
push
std
inc
ror
lea
sub
or
aas
xorb
xchg
in
sbb
dec
sahf
jecxz
test
jecxz
mov
dec
jmp
loop
fistpl
stc
and
mov
ss
jp
cmp
jbe
out
test
xor
lret
outsb
cltd
or
div
das
lods
pushl
das
divb
adc
mov
xlat
add
sahf
lods
ret
mov
xlat
ljmp
mov
sti
outsb
popf
sti
fwait
push
mov
lahf
sbb
gs
dec
repz
push
mov
call
xchg
flds
movsl
repz
push
sbb
imulb
xor
mov
adc
or
pop
mov
lock
hlt
nop
add
mov
mov
mov
nop
mov
je
xchg
imul
fnstsw
lea
and
mov
outsb
rolb
mov
inc
fcmovnu
fwait
movsl
pop
sub
ret
push
cs
mov
xchg
das
loope
adc
jae
sbb
adc
divb
jbe
cwtl
lds
aam
dec
pop
repz
gs
test
leave
out
lret
push
out
sub
add
ret
mov
pop
adc
or
fisttpll
cmp
es
std
mov
dec
or
add
ljmp
repnz
mov
mov
mov
xor
mov
add
dec
jge
lods
mov
jns
enter
faddl
dec
clc
in
sbb
sbb
xchg
subb
xchg
dec
xchg
ret
push
cltd
mov
jl
int
jo
cmpsb
or
fstps
mov
xor
test
icebp
add
aam
dec
mov
and
or
push
fwait
test
push
mov
xor
jno
adc
mov
adc
in
cmpsb
fists
test
pusha
mov
push
dec
cmp
mov
popf
mov
loope
mov
fidivl
movsl
jne
nop
imul
mov
sbb
lods
cmp
lcall
sub
or
cmp
cs
fistpll
and
rcll
jle
or
rcrl
push
pusha
pop
in
iret
cmp
jo
mov
fwait
pop
mov
out
add
or
popf
out
mov
lock
fiaddl
pop
fstl
ret
imul
pop
scas
sbb
pop
jp
jo
jo
test
repnz
out
mov
hlt
jmp
fdivr
inc
pop
sbb
rcrl
adc
mov
cmp
cmpsb
xor
jno
out
fidivrs
outsl
lds
jecxz
xchg
adc
scas
rorb
cmpsl
cmp
or
movsb
pop
lock
fwait
insb
in
flds
ret
sbb
divl
cmp
shlb
shlb
pop
and
dec
jae
push
rorb
aad
rcl
dec
lahf
and
int3
push
ja
lret
test
sbb
push
inc
add
cwtl
cmpsb
aas
in
iret
adc
or
push
pop
cmp
cmc
push
movsl
stos
loope
stc
jae
in
mov
cmp
add
ds
lds
and
je
mov
sbb
mov
xor
mov
pop
lock
pop
js
fsub
pop
mov
jne
fcoml
push
je
adc
sub
fimuls
push
cli
adc
xchg
sti
mov
mov
mov
mov
and
push
add
sbb
hlt
fdivl
sub
cmpl
addl
xchg
push
test
cmp
outsl
sub
loop
xchg
stc
fcoml
pop
adc
jge
ss
adcb
sbb
fdivs
in
cltd
out
pop
nop
cli
mov
xor
and
cmp
arpl
adc
aaa
into
stos
inc
in
testb
mov
ret
xadd
in
dec
adc
xorb
inc
inc
fsubs
and
lods
test
outsl
pusha
xlat
sub
int
cltd
sub
mov
test
dec
push
or
ret
gs
cmp
sub
dec
dec
in
hlt
addl
cs
aam
mov
xchg
cmp
pop
sbb
xor
lods
scas
jmp
jnp
push
in
pop
and
inc
and
cs
sub
nop
frstor
mov
push
push
fnstenv
fistl
dec
and
or
cld
in
loopne
enter
xor
mov
mov
adc
mov
icebp
mov
shrl
pushf
adc
enter
out
inc
mov
and
add
mov
jmp
and
jne
roll
push
std
stos
xchg
cwtl
sub
cmpsl
inc
cmpb
cmp
dec
cld
hlt
adc
ljmp
enter
andb
shl
mov
sub
sti
imul
cs
leave
int
mov
insl
ret
cmp
dec
push
mov
imul
aad
inc
popa
fsubrl
movsl
lods
and
sahf
mov
stos
das
fldenv
jo
repz
cmp
lret
mov
cld
mov
fldl
repnz
pop
mov
out
loopne
sbb
in
lahf
scas
pop
and
imul
xchg
xchg
or
mov
je
lcallw
add
xor
fimull
pop
xchg
mov
mov
add
xor
or
outsb
dec
lods
xchg
or
arpl
mov
push
pop
dec
movsb
add
mov
out
xchg
dec
mov
jns
pop
or
and
xchg
imul
ds
out
xchg
mov
lss
cmpsl
std
xchg
jp
ret
push
mov
jmp
insb
mov
rorb
add
jne
and
pusha
outsb
fists
arpl
jne
push
jmp
shl
jp
lea
fsubrs
in
pop
push
leave
mov
stos
push
addl
fimuls
jnp
invd
jle
sbb
in
rclb
pusha
idivl
sub
fwait
jl
ret
ja
xlat
iret
es
fidivrl
pop
jae
mov
mov
mov
outsl
shlb
mov
jb
adc
mov
jge
scas
adcb
cmp
mov
notl
pop
outsl
test
xor
repnz
call
ds
cltd
jae
or
push
roll
lea
int3
xchg
out
loope
mov
mov
lds
in
add
mov
pop
scas
scas
cli
mov
cmp
imul
jge
pop
arpl
fiadds
jo
inc
push
ret
cmp
loope
jl
mov
dec
inc
push
loope
mov
popa
xor
cs
jmp
aas
sbb
pusha
test
out
push
cmpsb
dec
sbb
in
mov
add
add
jnp
psubusw
out
xor
test
cmp
xor
sub
mov
rcrb
lds
push
add
push
xchg
xor
in
mov
adc
ficoml
das
js
lcall
test
test
push
adc
popa
pop
mov
mov
xchg
out
pop
and
es
pop
inc
lahf
sub
fnop
imull
add
and
mov
pop
sbb
sahf
sub
mov
outsl
pop
movl
fs
mov
ss
cli
sub
in
pushf
shl
es
xchg
xor
cmp
or
mov
loopne
in
clc
pop
cmpsl
out
adc
stc
imul
push
lahf
add
lods
mov
lods
nop
popf
cmp
bound
xchg
sub
push
mov
shll
mov
fsubrl
testb
mov
or
fistps
xchg
std
mov
sbb
insb
and
cs
cmc
pop
or
clc
pop
pushf
ret
jmp
dec
subl
pop
loope
nop
mov
sahf
mov
dec
cwtl
sbb
jecxz
xor
lea
loopne
or
mov
jae
mov
sub
dec
xchg
lahf
pop
jb
jge
inc
rorb
lahf
jae
mov
loope
mov
rcll
sti
pop
std
or
inc
cmpsl
inc
xorl
cld
pop
adc
cld
stos
decb
and
fcmovnbe
fstps
dec
add
mov
imull
iret
mov
add
pop
mov
es
dec
insl
stos
cli
je
add
sub
xchg
inc
popa
repz
mov
pop
mov
into
testl
or
lsl
dec
add
mov
test
fidivrs
arpl
jle
dec
out
jecxz
sub
sti
clc
pop
shl
xchg
mov
sbb
ret
pop
int
leave
stos
rcr
out
ljmp
push
dec
inc
dec
mov
mov
or
xor
mov
test
jo
test
lock
enter
lahf
sub
or
adc
push
sti
push
add
cmpsl
sbb
out
jbe
push
bound
and
ja
xchg
inc
mov
mov
lret
cmpsb
fstl
mov
adc
cmp
dec
pushl
jne
sbb
mov
xchg
pop
fbstp
lods
fists
in
iret
notb
pushf
mov
sub
loopne
sub
mov
jns
ftst
in
insb
xchg
fstpt
xor
sub
push
pusha
xchg
lods
gs
cli
mov
ret
mov
inc
in
shll
mov
int3
popf
adc
mov
inc
out
inc
fisubl
add
sbb
imul
rclb
fsts
es
ljmp
out
xor
shrl
push
arpl
sub
or
push
aaa
pop
adc
or
xchg
int3
jl
gs
iret
push
pop
faddp
jns
lds
loop
scas
mov
and
pop
pop
cmp
push
jnp
cmp
jbe
mov
jge
in
sbb
adc
jno
adc
jl
mov
test
cwtl
push
xor
mov
js
pop
sub
push
sbb
mov
sbb
mov
cmp
popf
pop
enter
pop
mov
sarb
jae
sub
xchg
jl
pop
in
inc
ds
ja
movsl
shl
and
fisttpl
push
mov
add
inc
dec
xor
scas
cmp
pop
ds
xchg
js
insb
testl
repz
stos
push
and
in
lret
outsb
sbb
push
adc
cmp
mov
jo
mov
int3
rorb
cli
sbb
mov
ret
sub
adc
shrl
mov
add
sti
insl
test
mov
mov
nop
