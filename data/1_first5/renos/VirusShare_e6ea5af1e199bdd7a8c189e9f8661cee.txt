jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
popa
xor
xor
xor
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
cmp
jge
lea
mov
mov
mov
lea
mov
xchg
lea
mov
lea
lea
xchg
mov
mov
mov
inc
inc
mov
cmp
je
jmp
cmp
jg
inc
dec
inc
inc
cmp
jno
mov
xchg
mov
dec
xchg
mov
inc
inc
inc
mov
mov
mov
xchg
xchg
dec
dec
jne
mov
xor
divl
test
jne
cmp
jg
lea
inc
inc
inc
xchg
xchg
dec
lea
mov
lea
lea
mov
mov
mov
mov
xchg
mov
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
mov
xchg
lea
lea
lea
mov
lea
mov
inc
dec
dec
dec
jne
mov
mov
xchg
mov
mov
dec
je
inc
dec
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jl
lea
mov
mov
mov
mov
inc
dec
dec
xchg
lea
mov
xchg
mov
dec
dec
mov
mov
lea
dec
mov
cmp
je
jmp
jmp
mov
lea
xchg
lea
mov
xchg
lea
mov
mov
lea
dec
dec
jne
lea
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jp
lea
lea
mov
mov
mov
inc
dec
dec
mov
mov
xchg
xchg
xchg
mov
dec
mov
mov
mov
mov
mov
cmp
je
jmp
jmp
mov
lea
xchg
lea
mov
xchg
lea
mov
mov
lea
dec
dec
jne
lea
lea
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
jmp
mov
mov
xchg
lea
lea
lea
mov
lea
mov
inc
dec
dec
dec
jne
mov
mov
xchg
mov
mov
dec
je
inc
dec
mov
sub
mov
cmp
jle
lea
inc
lea
inc
lea
mov
mov
xchg
mov
inc
dec
jne
lea
lea
lea
lea
dec
dec
dec
push
mov
mov
xor
call
mov
cmp
jg
lea
inc
inc
inc
xchg
xchg
dec
lea
mov
lea
lea
mov
mov
mov
mov
xchg
mov
mov
mov
mov
call
cmp
jl
lea
mov
mov
mov
mov
inc
dec
dec
xchg
lea
mov
xchg
mov
dec
dec
mov
mov
lea
dec
push
mov
mov
xor
call
mov
cmp
jg
inc
dec
inc
inc
cmp
jno
mov
xchg
mov
dec
xchg
mov
inc
inc
inc
mov
mov
mov
xchg
xchg
dec
dec
jne
cmp
jge
lea
mov
mov
mov
lea
mov
xchg
lea
mov
lea
lea
xchg
mov
mov
mov
inc
inc
lea
mov
push
jmp
cmp
jle
lea
inc
lea
inc
lea
mov
mov
xchg
mov
inc
dec
jne
lea
lea
lea
lea
dec
dec
dec
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
jmp
mov
lea
xchg
lea
mov
xchg
lea
mov
mov
lea
dec
dec
jne
lea
lea
mov
mov
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jp
lea
lea
mov
mov
mov
inc
dec
dec
mov
mov
xchg
xchg
xchg
mov
dec
mov
mov
mov
mov
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
ja
dec
dec
lea
mov
xchg
xchg
mov
xchg
lea
lea
xchg
dec
inc
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jg
inc
dec
inc
inc
cmp
jno
mov
xchg
mov
dec
xchg
mov
inc
inc
inc
mov
mov
mov
xchg
xchg
dec
dec
jne
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
lea
push
mov
add
movl
mov
mov
mov
push
mov
push
call
test
je
push
lea
push
call
jmp
push
lea
push
call
movl
mov
mov
mov
push
mov
push
call
test
je
push
lea
push
call
jmp
push
lea
push
call
cmp
jg
inc
dec
inc
inc
cmp
jno
mov
xchg
mov
dec
xchg
mov
inc
inc
inc
mov
mov
mov
xchg
xchg
dec
dec
jne
movl
movl
mov
push
mov
push
call
mov
pop
ret
add
xor
xor
xor
add
jae
popa
addr16
add
ja
and
add
add
in
add
mov
mov
cmp
jl
lea
mov
mov
mov
mov
inc
dec
dec
xchg
lea
mov
xchg
mov
dec
dec
mov
mov
lea
dec
push
push
push
call
mov
push
mov
push
call
mov
mov
mov
cmp
jg
lea
inc
inc
inc
xchg
xchg
dec
lea
mov
lea
lea
mov
mov
mov
mov
xchg
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jle
lea
inc
lea
inc
lea
mov
mov
xchg
mov
inc
dec
jne
lea
lea
lea
lea
dec
dec
dec
mov
mov
movl
cmp
ja
dec
dec
lea
mov
xchg
xchg
mov
xchg
lea
lea
xchg
dec
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jg
inc
dec
inc
inc
cmp
jno
mov
xchg
mov
dec
xchg
mov
inc
inc
inc
mov
mov
mov
xchg
xchg
dec
dec
jne
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
ja
dec
dec
lea
mov
xchg
xchg
mov
xchg
lea
lea
xchg
dec
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
xchg
lea
lea
lea
mov
lea
mov
inc
dec
dec
dec
jne
mov
mov
xchg
mov
mov
dec
je
inc
dec
mov
pop
ret
imul
add
outsb
add
insb
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
mov
xchg
xchg
sahf
sahf
repnz
fwait
xchg
test
mov
repnz
test
test
repnz
test
test
sahf
mov
xchg
lahf
mov
repnz
mov
test
popf
xchg
test
loopne
sahf
sahf
repnz
repnz
repnz
mov
repnz
repnz
xchg
repnz
repnz
repnz
jge
jne
or
adc
xor
jne
cli
mov
icebp
mov
cld
shlb
repnz
mov
inc
icebp
mov
sub
mov
adc
mov
push
icebp
mov
or
mov
repnz
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jge
or
xor
sub
add
xor
mov
xor
jge
jne
cmp
cli
jnp
cmp
mov
cmp
fisubl
mov
mov
mov
jge
cli
jnp
push
jge
cmp
mov
mov
mov
jge
cmp
mov
jnp
push
xchg
jge
ret
bnd
push
jnp
cli
jge
push
jge
into
cmc
mov
jnp
add
add
jb
repnz
sub
sub
div
add
repnz
sub
cmc
mov
jnp
sbb
repnz
repnz
bnd
es
cmc
mov
mov
mov
jne
sbb
add
repnz
es
repnz
jge
es
cmc
mov
jnp
push
jge
es
loop
mov
jnp
adc
jge
loop
mov
jnp
push
jge
es
loop
mov
jnp
adc
or
jge
push
jge
xlat
adc
repnz
jge
cmp
mov
jnp
sbb
jge
push
cmc
hlt
jnp
and
and
hlt
mov
jge
cmp
mov
jnp
jne
adc
jne
push
idivb
push
jne
xacquire
es
mov
jne
repnz
adc
adc
add
mov
jnp
or
cmp
fidivrs
push
cmp
repnz
loop
mov
jne
mov
jge
cmp
mov
repnz
bnd
cmp
shlb
mov
repnz
bnd
cli
mov
mov
jge
push
jg
repnz
adc
pushf
repnz
xchg
push
repnz
adc
ret
xor
adc
pop
scas
xor
repnz
jge
xchg
jge
cli
jge
decb
inc
jb
sub
lahf
repnz
ret
cmp
xchg
repnz
ret
xor
lods
repnz
inc
hlt
mov
loop
shl
repnz
test
xchg
pop
sbb
repnz
xchg
sbb
pop
and
xchg
arpl
sbb
repnz
repnz
repnz
jb
testl
addr16
inc
repz
adc
cmp
repnz
idivl
loop
xor
and
adc
jecxz
sbb
adc
adc
cli
bnd
bnd
jnp
dec
adc
adc
les
add
dec
adc
adc
fstpt
jnp
xor
jae
or
adc
jnp
push
cmp
cli
jb
repnz
sti
jb
repnz
jl
or
jb
repnz
xacquire
cmp
push
sbb
adc
mov
or
add
repnz
jl
or
cmpsl
push
jl
hlt
lds
cmpsl
or
adc
adc
mov
jl
or
mov
xchg
cmp
or
xchg
cmp
or
mov
lds
cmpsl
or
or
adc
cmc
xor
and
cmpsl
or
jb
repnz
xor
adc
repnz
or
xor
jl
jb
bnd
or
xor
jl
or
jb
repnz
xacquire
pop
scas
xor
jge
mov
xor
jb
repnz
adc
repnz
cli
jb
repnz
push
sti
jb
repnz
out
jb
repnz
jb
repnz
xor
adc
repnz
sti
jb
repnz
push
cli
jb
bnd
jb
bnd
pextrw
xor
jb
bnd
jb
repnz
out
jb
bnd
jb
repnz
push
sti
jb
bnd
jb
repnz
push
cli
jb
repnz
jb
repnz
out
jb
repnz
jb
repnz
xor
adc
repnz
pextrw
xor
jl
jb
repnz
jl
adc
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jp
lea
lea
mov
mov
mov
inc
dec
dec
mov
mov
xchg
xchg
xchg
mov
dec
mov
mov
mov
mov
movl
cmp
jle
lea
inc
lea
inc
lea
mov
mov
xchg
mov
inc
dec
jne
lea
lea
lea
lea
dec
dec
dec
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
mov
mov
xchg
lea
lea
lea
mov
lea
mov
inc
dec
dec
dec
jne
mov
mov
xchg
mov
mov
dec
je
inc
dec
mov
mov
call
mov
cmpl
je
cmp
ja
dec
dec
lea
mov
xchg
xchg
mov
xchg
lea
lea
xchg
dec
inc
dec
mov
cmp
je
mov
subb
mov
mov
cmp
jg
inc
dec
inc
inc
cmp
jno
mov
xchg
mov
dec
xchg
mov
inc
inc
inc
mov
mov
mov
xchg
xchg
dec
dec
jne
mov
nop
xorb
nop
mov
mov
xchg
lea
lea
lea
mov
lea
mov
inc
dec
dec
dec
jne
mov
mov
xchg
mov
mov
dec
je
inc
dec
incl
mov
cmp
jne
jmp
mov
lea
xchg
lea
mov
xchg
lea
mov
mov
lea
dec
dec
jne
lea
lea
mov
mov
mov
call
cmp
ja
dec
dec
lea
mov
xchg
xchg
mov
xchg
lea
lea
xchg
dec
inc
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
ja
dec
dec
lea
mov
xchg
xchg
mov
xchg
lea
lea
xchg
dec
inc
dec
cmp
jg
inc
dec
inc
inc
cmp
jno
mov
xchg
mov
dec
xchg
mov
inc
inc
inc
mov
mov
mov
xchg
xchg
dec
dec
jne
cmp
jge
lea
mov
mov
mov
lea
mov
xchg
lea
mov
lea
lea
xchg
mov
mov
mov
inc
inc
push
mov
push
call
mov
pop
ret
nop
push
mov
add
cmp
jge
lea
mov
mov
mov
lea
mov
xchg
lea
mov
lea
lea
xchg
mov
mov
mov
inc
inc
mov
mov
mov
add
xor
add
mov
dec
cmp
je
xor
add
inc
and
cmp
jmp
jmp
ret
jne
cmp
jg
lea
inc
inc
inc
xchg
xchg
dec
lea
mov
lea
lea
mov
mov
mov
mov
xchg
mov
movb
cmp
jg
inc
dec
inc
inc
cmp
jno
mov
xchg
mov
dec
xchg
mov
inc
inc
inc
mov
mov
mov
xchg
xchg
dec
dec
jne
mov
mov
pop
ret
mov
push
mov
add
call
cmp
ja
dec
dec
lea
mov
xchg
xchg
mov
xchg
lea
lea
xchg
dec
inc
dec
call
call
call
test
jne
mov
jmp
movw
cmp
jl
lea
mov
mov
mov
mov
inc
dec
dec
xchg
lea
mov
xchg
mov
dec
dec
mov
mov
lea
dec
call
lea
mov
pop
ret
nop
push
mov
add
cmp
ja
dec
dec
lea
mov
xchg
xchg
mov
xchg
lea
lea
xchg
dec
inc
dec
cmp
jg
lea
inc
inc
inc
xchg
xchg
dec
lea
mov
lea
lea
mov
mov
mov
mov
xchg
mov
push
lea
push
call
push
lea
push
call
push
push
lea
push
call
mov
pushl
call
cmp
jle
lea
inc
lea
inc
lea
mov
mov
xchg
mov
inc
dec
jne
lea
lea
lea
lea
dec
dec
dec
mov
pop
ret
add
je
data16
add
add
jne
movl
jmp
mov
lea
xchg
lea
mov
xchg
lea
mov
mov
lea
dec
dec
jne
lea
lea
mov
mov
mov
mov
mov
lea
call
mov
mov
xchg
lea
lea
lea
mov
lea
mov
inc
dec
dec
dec
jne
mov
mov
xchg
mov
mov
dec
je
inc
dec
ret
mov
ret
lea
add
aaa
adc
jae
pop
outsb
adc
push
ljmp
imul
push
out
add
push
mov
in
xchg
add
cmp
ss
xor
push
out
mov
xchg
rcrl
adc
popa
out
add
push
enter
scas
imul
add
dec
push
aaa
xor
pop
pop
mov
lds
add
cmc
fdivs
mov
cli
mov
add
sub
add
and
mov
or
xchg
add
fsubrl
adcb
add
sbb
std
loope
imul
test
add
pop
mov
add
and
cltd
dec
adc
data16
adc
gs
add
cld
add
add
add
xlat
add
xor
ret
adc
add
add
out
pop
fistps
lods
cltd
sbb
lret
add
lahf
mov
cmp
add
in
imul
push
jnp
leave
dec
data16
popa
pop
add
ds
insb
leave
add
mov
xchg
pushf
add
jge
add
add
add
shll
add
std
jns
xor
or
cmp
add
mov
test
add
test
add
add
call
add
sti
add
frstor
mov
xor
xor
cmp
lret
mov
xor
ljmp
adc
add
add
aad
add
ja
xchg
adc
or
xchg
cmpsb
mov
sbb
pop
aam
push
bound
pop
add
ja
add
sbb
pop
sti
push
add
add
mov
mov
push
int
add
ljmp
add
and
add
leave
push
jecxz
jle
aad
in
mov
lret
add
add
stc
stc
in
mov
jae
add
jecxz
loope
fwait
test
lcall
dec
add
int
pop
add
add
aas
adc
cmp
pop
jle,pn
add
add
add
sti
add
and
add
daa
mov
add
jmp
push
repnz
popa
sbb
cmp
add
shl
or
add
movsl
mov
and
enter
outsl
outsb
sbb
int
test
cmp
lea
jo
mov
push
dec
mov
adc
and
add
pop
enter
out
stos
pop
inc
fcmovne
add
mov
mov
push
add
adc
shrl
adc
add
mov
mov
add
pop
add
xor
push
push
fidivs
arpl
xor
roll
or
cmc
cli
push
add
rorl
cmp
and
add
mov
andl
sbb
mov
jo
daa
lods
adc
push
add
add
lret
mov
cmp
mov
cmp
add
repnz
not
and
add
add
jae
nopl
xchg
stc
pop
add
add
in
add
add
add
mov
scas
mov
data16
or
rorb
out
add
pop
ret
pop
dec
sub
push
dec
fistpl
add
lahf
in
popa
cmp
push
and
pushf
fistpll
add
add
divl
mov
push
add
add
add
test
pushf
add
add
and
push
inc
leave
inc
pop
lret
pop
shll
sbb
repz
out
fs
mov
xor
loop
loop
jg
stc
adc
fs
test
ss
cmp
movsl
out
out
cli
or
xor
jne
or
scas
xchg
into
or
pavgb
std
or
dec
or
and
adc
inc
cmp
data16
dec
add
dec
in
xlat
pop
in
sub
inc
fs
adc
into
sti
mov
cmp
cli
nop
jmp
lcall
xorl
repz
jle
xchg
pop
imul
pusha
bound
call
and
mov
stos
pushf
inc
cmp
jmp
push
inc
cs
cmc
mov
es
aas
or
xchg
jb
xchg
in
inc
mov
je
stos
jno
adc
or
pop
cwtl
dec
jb
mov
add
mov
mov
daa
rcrb
dec
add
lods
pop
lods
push
inc
test
lock
call
mov
rcrb
mov
rcr
lret
sbb
pushf
std
insb
mov
dec
push
repnz
mov
and
dec
lret
arpl
push
mov
jne
decb
pop
out
sti
rcrb
aam
inc
out
ret
fistpll
push
dec
jns
clc
in
dec
fwait
xchg
dec
out
ljmp
and
or
and
or
pminub
pusha
cltd
iret
in
test
push
fisttpll
out
pop
test
push
aas
xchg
fstps
in
rcl
test
fildll
in
fistl
sbb
cmp
and
push
xor
push
and
mov
cmp
das
rcrb
jmp
decl
jg
in
jle
or
cmp
ss
iret
mov
push
mov
rclb
pop
dec
in
and
test
ss
xor
jp
ds
mov
mov
mov
pop
mov
dec
jp
xorb
lea
iret
add
int
pop
xchg
xor
mov
xchg
inc
inc
roll
out
inc
sub
sbb
in
push
mov
mov
insb
lret
jnp
or
jle
push
aaa
adc
jnp
shll
add
fcomps
jge
ss
enter
jne
push
cmp
cmp
lcall
fidivl
xor
xchg
sti
enter
lea
inc
and
adcl
imul
subb
arpl
cmpsl
or
lods
outsb
mov
or
xor
repz
loopne
aas
add
pop
imulb
fdivrp
xor
call
scas
in
fldenv
lds
cmp
and
stc
jbe
cwtl
leave
jge
scas
gs
daa
mov
lea
jl
jle
dec
sbb
les
adc
xorb
and
push
or
test
push
cmovl
mov
cmpsb
call
nop
lock
jg
pop
outsl
mov
push
push
out
loope
sub
sub
add
cltd
sbb
movsl
cmp
shrb
loop
or
nop
cmpb
sbb
sbb
or
xor
push
negb
xor
sub
pop
pop
movsl
adc
mov
xchg
xor
and
insb
outsb
pop
jb
adc
cmpsl
jg
and
testb
lcall
mov
aam
fdivrs
or
sarl
jns
sbb
icebp
sahf
pop
adc
fs
xor
nop
push
outsl
cmp
jne
stc
cmp
ret
cmpsl
scas
adc
xchg
cmp
mov
jp
pushf
sub
and
in
push
cmp
xchg
or
daa
into
jmp
shl
ret
push
enter
in
pushf
adc
test
adc
pop
cld
add
pushf
mov
lods
push
mov
xlat
pop
add
dec
mov
in
jg
hlt
sti
dec
fwait
dec
inc
push
mov
mov
loopne
dec
cmpl
insl
int
test
gs
mov
sbb
push
fistpl
movsb
in
cmp
mov
inc
adc
xchg
or
enter
or
movsb
dec
xchg
push
movsb
aas
test
push
mov
mov
mov
jecxz
mov
movb
mov
mov
mov
cmpl
xchg
and
cmp
inc
or
lock
mov
mov
xchg
shll
rep
negb
ret
mov
cmpsl
mov
lods
cmp
stc
or
cld
dec
cld
push
lret
sar
out
add
es
mov
mov
add
fldt
aam
repz
and
es
or
insl
xor
jge
sub
xchg
mov
les
mov
btc
movsb
test
and
pop
imul
add
popa
test
clc
mov
jp
fnsave
stos
mov
xchg
in
xchg
vpshab
dec
rcr
scas
pop
pop
sti
cmp
stos
test
loopne
dec
fcompl
xchg
xchg
mov
add
pop
lret
xor
js
or
pushf
mov
mov
jae
pop
cwtl
out
loopne
mov
mov
inc
test
sub
push
fnstenv
add
and
out
lods
xchg
jns
add
xchg
fildl
push
mov
sarb
jp
std
jno
dec
inc
mov
mov
fidivl
std
xor
push
fucomip
movb
adc
iret
xchg
or
into
xorl
dec
out
sbb
mov
inc
push
aas
sbb
and
jp
insb
xor
fimull
movsl
fdivrs
adc
or
in
out
cmp
cmp
jae
pop
lret
pop
push
popf
sbb
faddl
sub
xchg
push
sub
imul
push
enter
pop
adc
mov
or
shl
in
xchg
adc
sbb
imul
dec
shrb
dec
lret
add
pop
and
subb
dec
mov
les
pop
xlat
inc
cmp
lds
pop
sub
push
iret
and
jbe
icebp
mov
and
daa
mov
jns
jno
push
clc
jl
mov
sbb
push
negb
xor
out
or
adc
outsl
push
fildl
mov
pop
in
jne
ss
inc
cmpsb
imul
in
and
sti
js
fincstp
pop
scas
stos
pop
push
add
lods
sub
cmp
cmp
das
movsl
xchg
insb
rorb
mov
push
xor
sbb
inc
mov
loope
lcall
pop
sbb
pop
and
ret
add
push
or
or
rorb
dec
sub
ret
sahf
adc
ret
jg
pop
cli
mov
xchg
lds
mov
scas
push
int
or
jne
dec
negl
test
add
jb
sahf
stos
sbb
test
dec
xor
outsl
sbb
push
loop
sahf
sbb
lock
fs
lods
aad
add
ss
leave
insl
cmp
stos
jns
out
mull
cli
outsl
loopne
xor
insb
dec
or
bound
cmc
lret
loopne
mov
jl
fsts
lock
imul
rcrb
jp
lods
data16
les
lods
std
sbb
cmp
mov
popf
popf
sbb
mov
ljmp
out
shlb
pop
sbb
mov
stc
and
ja
fxch
mov
repz
pop
xchg
fiadds
sbb
rcrb
fadd
and
pop
ds
adc
push
pushf
fwait
cmpsl
daa
jmp
jns
repz
jmp
outsl
inc
imul
push
dec
xor
adc
movb
cwtl
les
mov
xchg
add
push
mov
dec
and
fwait
pop
repz
lock
in
add
mov
ret
mov
ds
mov
shll
cmpsl
negb
outsl
sub
add
cmpsl
mov
repnz
sarb
pop
lret
inc
sub
mov
push
sub
xor
inc
pop
and
jle
inc
cmp
in
add
outsb
ret
std
int3
and
sub
stos
mov
xchg
int
movsl
ljmp
fwait
lods
movsl
test
mov
or
push
cmp
sets
lods
add
adc
int
push
das
mov
pop
test
or
xchg
mov
shll
add
cmpsb
adc
stos
xchg
in
out
stos
daa
push
xchg
fisttpll
xchg
add
popf
decl
adc
xor
inc
fimuls
xor
xor
in
mov
movsl
mov
dec
jl
int3
pop
push
inc
aas
ja
pop
jns
nop
in
and
neg
or
add
repnz
jl
jge
adc
push
mov
arpl
out
mov
add
adc
in
cs
xchg
sub
mov
or
or
addr16
fdivrl
jo
mov
cld
cmp
sub
jne
inc
jno
mov
cmp
xor
xchg
xlat
sub
add
jbe
in
lret
jno
mov
push
cmp
mov
and
inc
insb
mov
insb
inc
jle
jbe
in
cmp
adc
cmpsl
dec
iret
cltd
insb
ret
xchg
pop
jmp
xchg
inc
fidivrs
dec
jae
std
lcall
sbb
push
jecxz
push
ficoml
pop
jns
icebp
push
in
jae
dec
scas
movsb
push
sahf
shlb
mov
pop
mov
jo
dec
hlt
cmp
cmpsl
arpl
scas
inc
or
and
and
or
addr16
adc
cmp
fiadds
or
repnz
push
and
addr16
lcall
push
push
scas
test
sarb
enter
daa
mov
sbb
jno
fbld
mov
dec
stc
daa
daa
push
fld
pop
xor
subb
lahf
xor
out
test
ljmp
cmpsb
out
push
ja
or
sbb
in
daa
inc
push
test
loope
mov
cwtl
cmp
fs
in
cwtl
movsl
mov
into
shlb
imul
add
sarl
nop
mov
jb
sub
lock
mov
fidivl
pop
cmp
dec
cmp
rcr
outsb
fisttpll
enter
xchg
sbb
sarl
fnsave
out
mov
daa
and
inc
ljmp
and
fdivs
test
neg
fs
lret
lret
lret
lock
subb
dec
push
xchg
test
out
test
mov
loop
cld
inc
stc
cmpsl
sbb
fs
xor
mov
inc
adc
mov
and
or
pop
push
xchg
inc
sub
mov
pop
fstenv
imul
nop
dec
data16
cs
lods
in
out
cmp
mov
jecxz
loope
jne
push
dec
in
lods
mov
inc
gs
gs
jl
popa
dec
aas
cmp
inc
mov
cmp
jecxz
ljmp
pop
in
sbb
dec
lock
mov
sub
push
pop
popf
pushf
inc
fwait
dec
jmp
rcr
cs
enter
sub
xor
jb
leave
repz
lods
and
faddp
jecxz,pt
cmp
movb
mov
in
and
mov
dec
or
jmp
or
mov
mov
lahf
or
sbb
mov
sub
unpckhps
loope
push
std
popa
cmp
dec
inc
imul
paddsw
mov
sbb
mov
outsl
push
mov
inc
or
pop
inc
add
pop
shll
jecxz
aam
push
xchg
ret
mov
popf
insl
sbb
clc
sahf
ss
xchg
or
ss
das
lods
adc
mov
repnz
and
adc
inc
maskmovq
adc
scas
dec
int
je
sbb
out
push
bnd
fnstsw
imulb
loop
sbb
decb
add
stos
xchg
imul
push
addr16
xchg
and
jg
imul
scas
int
xor
xor
stos
fsts
xor
stos
outsl
mov
test
mov
jecxz
and
xor
dec
addl
inc
mov
adc
xchg
xor
push
pop
jo
add
mov
out
push
andb
xchg
jns
int
in
xor
jns
test
sub
xchg
or
pop
addr16
inc
jp
xchg
inc
mov
xlat
lods
mov
insb
mov
dec
and
cmp
jne
mov
push
scas
pop
fildll
mov
xchg
lods
mov
adcb
shl
out
add
int
ds
jl
adc
and
fldt
cmp
ret
sbb
mov
mov
call
iret
out
fisttpl
ret
xchg
pop
and
inc
jmp
daa
jp
adcl
push
out
fimull
jecxz
add
sbb
fs
scas
pop
movsl
inc
push
push
jecxz
rclb
shl
scas
xchg
add
out
pop
hlt
cmp
arpl
in
inc
or
or
frstor
aaa
int3
fnsave
add
adc
orl
out
cmc
lds
jo
in
scas
addb
and
jns
push
in
movsb
jb
sti
push
insl
orl
jge
mov
enter
daa
mov
insl
scas
jno
les
jl
or
push
mov
lock
sbb
mov
in
test
mov
repnz
push
imul
js
dec
mov
sub
js
data16
xchg
cmp
push
cmp
inc
cmpb
lahf
mov
rolb
inc
mov
mov
in
add
mov
xor
loopne
push
js
pop
xchg
imul
and
jl
xlat
fs
push
mov
fsubl
pop
jnp
jle
outsb
inc
inc
repz
clc
xor
lss
mov
gs
cmp
sbb
push
stos
xlat
mov
fsubr
fsubl
negl
in
xor
std
int
mov
or
sbb
push
jge
pop
cmp
xor
loopne
ficompl
loop
lea
fs
lea
mov
adc
mov
pop
out
aad
fdivs
imul
daa
or
mov
pop
and
and
pop
mov
vpunpckhwd
inc
iret
adc
mov
add
or
cmp
icebp
cld
xlat
sbb
sub
sub
shlb
sti
pop
jbe
sub
inc
gs
adc
sahf
jle
inc
popf
test
xchg
out
sarb
repz
mov
enter
and
push
adc
push
cs
mov
inc
lahf
pop
xor
xchg
bound
in
dec
and
repz
lds
push
loop
mov
jns
cmp
mov
aaa
push
mov
sub
dec
test
fistpl
fwait
pop
pop
cmp
inc
mov
inc
gs
jb
inc
mov
lods
push
ret
jno
rcll
cmpsl
mulb
mov
or
adc
data16
mov
fwait
sti
icebp
jle
mov
lret
pop
int
mov
ss
mov
bound
subb
add
ret
sbb
or
xor
or
insb
inc
clc
flds
push
xchg
dec
fildl
ljmp
call
mov
adc
jl
push
out
mov
orps
jb
stos
lods
mov
mov
inc
mov
fwait
sub
movsl
cmp
test
adc
popa
dec
push
sbb
adc
push
stos
jne
test
jno
clc
xchg
imul
add
mov
or
add
xor
ret
sub
stos
stos
inc
dec
dec
xchg
call
ja
inc
sub
enter
std
sub
cmc
mov
push
ret
add
xor
movsb
out
dec
insl
in
or
fdivrs
sub
in
xchg
xchg
enter
adc
add
or
xor
sbb
out
jb
mov
xlat
push
jns
fimuls
push
cwtl
movsl
jne
repnz
pusha
icebp
and
fisttps
sahf
xchg
jg
jnp
div
rclb
cwtl
sbb
repz
sub
or
hlt
stos
sbb
mov
insb
jbe
mov
jle
push
enter
je
lds
iret
dec
and
pop
pop
addl
jae
xchg
push
push
inc
pop
xchg
popf
js
push
loope
mov
xchg
push
andb
push
movsl
in
scas
push
popf
push
popf
lcall
push
mov
repnz
arpl
pop
and
es
arpl
das
mov
xchg
int3
add
aaa
mov
sbb
add
jge
jmp
xchg
sbb
fimuls
mov
jo
and
popa
cmpsl
sbb
adc
jno
std
mov
push
mov
mov
jge
rclb
cmp
mov
cmp
jne
jno
int
jl
aaa
and
xlat
nop
js
lahf
push
xor
mov
std
push
push
xchg
pop
test
cmpb
jecxz
mov
hlt
lds
fmuls
js
pusha
jp
imul
loope
loopne
sub
rorb
rclb
movsl
pushf
test
std
popl
xchg
js
inc
lahf
faddl
jmp
xor
loop
push
fsubl
inc
movsl
sub
fiaddl
mov
mov
pop
inc
mov
outsb
mov
cwtl
pop
adcb
outsb
jg
or
mov
mulb
subl
cs
add
fsubs
int3
or
out
rcll
sbb
scas
dec
sahf
xchg
jmp
test
inc
xchg
xor
mov
mov
push
sbb
adc
mov
adc
cmpsl
hlt
ss
push
cmp
pushf
cmp
cwtl
insl
xchg
cli
or
inc
and
inc
or
sub
pop
cmc
pop
pop
mov
pop
adc
add
adc
adc
sbb
xor
lods
mov
iret
cmp
sub
aad
repnz
in
sub
fwait
sti
or
mov
dec
and
xchg
nop
xor
xchg
dec
std
mov
mov
dec
fnstenv
stc
pop
ljmp
out
sbb
inc
push
stos
mov
dec
mov
add
xor
enter
sbb
pop
aad
fwait
adc
aas
and
inc
decb
inc
arpl
sti
jecxz
into
scas
in
lea
mov
cmc
into
fdivs
mov
clc
sbbl
add
pop
fmull
popf
inc
daa
push
xchg
lock
mov
das
push
cmp
mov
arpl
cmc
and
inc
shll
dec
mulb
and
scas
jne
dec
cmp
xchg
cmpsl
mov
std
enter
inc
cld
stc
pop
in
lret
mov
mov
mov
add
jle
sarb
dec
lock
push
sub
stos
pop
sub
insl
int3
mov
adc
mov
and
lods
out
mov
mov
and
xchg
push
leave
pushf
xchg
lgs
add
dec
rcrl
fadd
adc
js
sti
xchg
test
xrelease
fs
insl
sarl
aad
pop
cmpsl
xchg
out
aam
inc
xchg
mov
addb
mov
in
dec
insb
xor
sarb
cwtl
rol
xor
xor
mov
fisttpl
push
lods
ja
clc
xchg
dec
imul
cmp
and
cmp
test
out
sub
andb
jns
sub
in
xor
pop
adc
daa
mov
sbb
nop
sbb
and
sbb
stos
sti
loope
movsb
shll
mov
dec
jmp
popa
punpcklbw
cli
xchg
push
addb
cmp
jbe
outsb
pop
jo
jbe
sbb
inc
ret
cli
enter
adc
insb
loope
std
jnp
mov
mov
shll
lods
insb
cmp
pop
nop
ss
inc
jmp
cmp
or
push
or
push
push
pusha
mov
fidivl
lret
repnz
jno
inc
addr16
scas
int
iret
push
in
jo
mov
test
leave
aad
pop
hlt
sbb
jns
mov
or
push
cmp
sub
add
add
int3
xchg
dec
pop
loope
aam
sub
lret
cwtl
jo
jbe
scas
inc
push
xchg
and
cmp
repnz
jbe
ficomps
rcr
enter
daa
mov
xor
jl
aaa
and
jmp
push
subb
and
mov
daa
lods
push
push
dec
cmpsl
nop
inc
jb
adc
mov
or
pop
stos
mov
push
lret
popa
loope
cmpsl
sub
pop
jecxz
outsl
lahf
fnstsw
lret
movsl
mov
sbb
fmulp
sub
jle
push
add
jne
xor
mov
pop
loopne
addr16
jnp
pop
and
ficoms
inc
arpl
jl
stos
sub
outsb
push
xchg
unpckhps
fldl
cmp
and
push
xchg
push
and
push
push
mov
int
mov
negl
mov
loop
mov
sub
mov
mull
sahf
ss
fildl
mov
lods
mov
stc
int3
sub
mov
imul
xchg
ss
sub
xchg
stc
out
out
inc
add
cmp
xor
pop
push
cmp
dec
pop
or
mov
js
pop
push
mov
clc
cmp
sub
mov
sahf
fistps
add
and
popa
cld
lret
xlat
cltd
jno,pn
dec
lahf
out
mov
xchg
inc
cmp
mov
cld
movsl
lds
popa
nop
or
adc
ret
jne
fldcw
cmp
sub
sbb
mov
fidivl
pop
or
mov
pop
cld
iret
pushf
inc
outsb
pop
jmp
jno
jg,pn
dec
aad
jmp
std
aas
fsubrs
jle
dec
adc
je
leave
js
outsl
incb
fidivs
cwtl
mov
jbe
sub
outsl
mov
lahf
xorl
jb
jg
mov
lock
das
xor
test
mov
into
jo
shll
pop
sahf
std
push
ljmp
mov
and
sub
mov
lret
std
orl
mov
mov
int3
ljmp
pop
bnd
cmp
add
cmp
and
dec
push
test
test
popa
int3
clc
mov
xor
pop
enter
dec
jecxz
movsb
fwait
orb
daa
aas
add
adc
popl
leave
and
dec
pop
mov
jb
pop
popa
xor
pop
push
cmc
rorl
stos
aaa
fldl
xchg
stc
dec
js
mov
adc
jae
fisttpl
cmovne
repnz
mov
adc
mov
pop
aas
push
xchg
dec
pop
je
inc
ja
orl
in
push
or
mov
jo
out
pop
lds
xor
add
push
xor
mov
cmp
mov
adc
inc
pop
jp
inc
add
mov
mov
pop
xlat
jne
xor
pusha
daa
inc
cmpsb
filds
inc
adc
in
test
addr16
stc
adc
or
fcmovnb
push
cmp
sub
mov
jb
dec
das
cmpsl
jnp
pop
or
test
mov
adc
or
bound
insb
lds
cmp
push
int3
inc
mov
jl
mov
fnstsw
sbb
arpl
push
popf
jne
imul
xchg
sub
aaa
mov
cmpsl
call
sahf
hlt
fs
arpl
ja
adc
jnp
xchg
dec
sbbb
mov
aaa
or
or
cmp
jge
int3
rcll
inc
jb
icebp
dec
sahf
jo
fcompl
pop
add
cmp
enter
loope
pop
nop
cltd
jbe
jnp
jge
mov
jne
mov
cmp
divb
dec
xchg
jl
or
dec
mov
cmp
gs
xor
out
xor
lahf
scas
xchg
push
cli
clc
inc
test
push
sub
lods
lcall
adc
pop
jmp
ds
xlat
xchg
or
mov
cmp
jb
ds
insl
xchg
movsl
stos
fsts
popl
sub
mov
add
xchg
push
pushf
ljmp
pop
pop
cmpsl
sub
pop
lahf
sbb
push
mov
std
sub
jne
imul
or
xchg
loopne
sbb
cmp
lret
mov
xor
push
mov
leave
int
jno
fcomps
aam
fadds
lret
ffreep
ret
mov
repnz
fsts
and
adc
pop
dec
loop
jp
stc
sbbl
fs
scas
call
mov
push
ss
xor
sbb
xchg
movsl
es
outsb
ljmp
in
xor
into
cmp
add
loopne
ja
pop
pop
loop
adc
mov
imul
cmc
add
inc
cmpsb
jmp
pop
lods
lods
adcb
pushf
pop
or
sub
inc
in
add
xchg
xchg
data16
mov
jae
mov
sub
jns
les
jo
repz
xchg
and
jno
cmp
cmp
jns
sahf
enter
inc
int3
adc
mov
jmp
dec
lcall
arpl
jb
mov
mov
dec
je
lret
jle
out
xchg
add
inc
push
mov
mov
xchg
jb
cmp
mov
pop
and
inc
inc
xor
push
push
mov
rol
ljmp
jns
imul
xor
sti
dec
xor
shll
fcmovnu
push
icebp
add
cld
dec
add
push
mov
sbb
jg
shll
mov
xor
aam
pop
cld
ret
enter
mov
mov
push
xchg
or
nop
popa
jecxz
push
lods
mov
outsl
mov
les
push
jg
cmp
jae
addr16
push
xchg
repnz
push
sarb
sbb
adc
xchg
mov
sbb
push
stos
shl
mov
loope
inc
cli
jns
lcall
add
js
ljmp
fsubl
ss
or
pop
loop
and
mov
mov
into
dec
jg
push
pop
cli
mov
sub
pop
testb
push
adc
popa
push
stos
sarb
inc
jno
inc
out
out
out
pop
lds
in
add
mov
sub
or
or
int3
shlb
data16
cmp
mov
scas
mov
mov
mov
pushl
push
pusha
ret
fbld
xor
fmul
int3
xchg
into
pop
jne
mov
push
sub
mov
and
inc
and
add
jnp
shrb
dec
shl
cli
and
iret
push
add
pop
mov
pop
decb
jae
jbe
push
movsl
popf
add
cmp
inc
pop
xchg
loope
push
xor
pop
movl
imul
sub
jb
mov
mov
cli
rcrl
ret
mov
hlt
scas
test
jb
adc
pop
cwtl
sbb
push
or
insb
movsl
add
adc
mov
lods
arpl
sub
fidivs
clc
lds
lahf
jo
push
loop
mov
and
inc
dec
cmp
sub
push
test
sarb
test
enter
daa
mov
call
jno
mov
jmp
and
mov
xor
mov
pop
push
int
and
push
loope
iret
inc
nop
dec
cmpsb
jge
enter
pop
js
sbb
xor
loope
mov
pop
cmp
or
mov
rcl
aas
mov
add
inc
sbb
movsl
dec
add
test
pop
mov
imul
push
sub
adc
out
pop
sub
push
ret
outsb
int3
scas
jae
in
push
andb
jp
scas
mov
lock
mov
mov
bound
and
push
dec
push
mov
cmp
mov
ja
notl
lods
mov
pop
inc
scas
mov
shrl
test
shll
jo
mov
loop
fcompl
cmp
in
adc
xor
es
lea
nop
out
xchg
cli
mov
xor
cmp
das
jb
pusha
into
and
or
loopne
mov
pop
ss
clc
adc
sar
fcomps
adc
pop
scas
add
xchg
out
mov
lods
cmp
cmp
push
jne
pop
sub
adc
mov
insb
mov
sti
sbb
jae
mov
stos
adcl
mov
fstps
leave
rol
sbb
adc
push
in
pop
xchg
jo
sub
cwtl
jae
call
sbb
dec
lcall
leave
sub
add
mov
xchg
scas
roll
and
jb
or
decl
je
push
and
lea
mov
lea
sub
gs
sbb
mov
pop
pop
lds
loopne
data16
das
out
dec
jns
xchg
add
mov
in
inc
rcll
sbb
xor
sbb
sbb
cmpsl
mov
and
push
pop
jns
fcmovb
int
jp
lret
inc
int
cmp
out
mov
fcompp
pop
shlb
int3
repz
push
test
push
test
aas
dec
jle
andl
xchg
ljmp
add
pop
ja
mov
movsb
pop
push
pop
aad
psrld
fadds
push
dec
cmp
std
pop
jle
mov
lret
inc
cmc
test
pshufw
or
test
dec
stos
xor
scas
out
std
out
mov
xchg
bnd
dec
test
out
or
adc
xchg
mov
mov
lea
cmp
mov
mov
aaa
cmp
inc
movsl
mov
sbbb
or
fdivs
lds
bound
xchg
jns
add
sbb
mov
xchg
js
outsb
add
or
adc
out
mov
aas
add
and
out
pop
dec
xchg
addr16
mov
pop
mov
ffreep
push
cs
lret
pop
jnp
rcrl
xchg
cltd
mov
sbbl
shl
ljmp
sub
hlt
leave
jle
mov
lea
loopne
xor
idivl
ljmp
mov
adc
sbbb
jb
hlt
pop
xor
jp
jae
hlt
jnp
push
sti
mov
push
ffree
inc
fcmove
xchg
xchg
xchg
mov
push
sbb
movsb
pop
imul
dec
push
mov
push
xchg
mov
dec
iret
xchg
cmp
cs
cli
daa
popf
arpl
cmpsl
jno
pusha
push
jle
test
sbb
or
addl
loop
int3
xchg
or
pop
outsb
or
daa
or
in
scas
and
sbb
movsb
sub
adc
jge
xor
enter
daa
mov
add
test
add
jl
xor
dec
xchg
xchg
call
xor
and
push
lahf
in
and
test
lods
and
in
cmpsb
add
mov
js
cmp
push
inc
aad
add
loopne
cmp
xor
movsl
mov
jo
popl
cmp
sbb
lock
xor
repz
pop
push
cltd
mov
xor
mov
popf
mov
xchg
mov
fdivrl
subl
dec
fwait
outsb
das
lods
js
sub
sub
sbb
jl
ret
mov
add
and
dec
mov
mov
jo
fcoms
lret
xor
mov
sti
mov
stos
sbb
push
lahf
test
imul
xor
jno
stc
icebp
clc
or
in
sub
push
ss
mov
cmp
mov
push
cli
aam
inc
xor
lds
iret
repnz
cmc
cmp
enter
ret
pop
push
xor
mov
add
mov
roll
arpl
es
sub
dec
or
cmp
loop
xlat
push
inc
jg
mov
setle
xlat
test
mov
fstpt
stc
ficoml
test
adc
fsts
pop
les
mov
xchg
xor
sbb
das
cmovle
pushf
xor
pop
and
sub
pop
jecxz
pushf
dec
mov
jmp
cmc
es
mov
fsubrl
pusha
inc
es
xchg
aas
mov
test
test
scas
jecxz
es
cltd
in
loope
adc
cwtl
loope
pushf
mov
push
mov
xorl
inc
fildl
sbb
lock
int
mov
mov
outsl
in
rcrl
inc
sub
dec
mov
repz
mov
pop
mov
mov
dec
cld
movsl
std
scas
lret
dec
iret
push
sbb
mov
mov
std
stos
xchg
rorb
lcall
xchg
pop
nop
ret
out
adc
ret
insl
push
lods
jecxz
xchg
mov
ficoms
popa
adc
add
sbb
les
push
xor
cmpsl
addl
mov
mov
jno
mov
repnz
inc
jecxz
jns
xor
rcll
aam
and
in
pusha
out
xchg
into
push
insb
add
jnp
xor
or
xor
sub
lds
dec
sahf
ljmp
mov
inc
cmp
out
call
ja
push
icebp
cmp
add
clc
or
out
movsb
out
jmp
pop
jns
xchg
xchg
icebp
and
xchg
push
loop
mov
jb
mov
push
rcrb
out
inc
icebp
mov
repz
mov
push
call
pusha
jne
add
pusha
clc
mov
in
mov
jmp
fs
in
stos
sbb
out
inc
js
ret
mov
notb
and
idiv
arpl
jnp
fcoms
in
scas
pop
in
shlb
sub
iret
pop
insb
jae
inc
sub
stos
jae
mov
push
adc
jg
push
pop
jle
fidivrl
xchg
or
sahf
cli
icebp
imul
les
add
adc
xor
jg
mov
popf
sbb
inc
cli
jo
and
and
adc
aas
in
aaa
inc
xchg
aad
push
arpl
add
inc
int3
addb
fidivrs
sbb
outsl
xchg
mov
or
cmp
ja
push
inc
add
jbe
or
pop
jb
and
jae
mov
stos
cmp
sub
jl
andb
std
mov
push
inc
fnstenv
mov
jne
push
jae
mov
push
ja
xor
push
xchg
cmpsb
sbb
in
pop
add
js
jnp
pop
cmpsb
add
push
rorl
loope
sub
sub
mov
cmp
adcb
sarb
movsl
mov
mov
pusha
adc
jmp
add
in
xor
sub
in
lods
pop
jl
sub
loopne
or
push
shr
fsubrl
xor
sub
adc
outsb
xchg
sahf
lahf
adc
lcall
mov
pop
lcall
jmp
and
cmp
mov
lds
notl
inc
mov
mov
rcrb
leave
mov
adc
mov
xor
mov
pop
loop
cmp
stc
test
lods
fs
xchg
adc
movsl
ss
int3
cmpl
xchg
xlat
aaa
cli
pop
cli
mov
cmp
gs
ds
movsb
into
out
lret
imul
je
xchg
adc
les
repnz
xchg
data16
rcrb
mov
jns
xchg
decl
adc
das
xor
inc
je
sti
jbe
leave
loopne
gs
sti
nop
jns
push
dec
fsubrs
movd
xchg
les
add
rep
jo
xchg
divb
cmp
stos
out
rol
sbb
adc
je
jmp
test
adc
and
imul
sub
inc
adc
jb
add
dec
in
ficoms
jmp
mul
stos
add
jbe
jp
push
cwtl
pushf
lahf
or
and
mov
dec
dec
js
rcr
xor
xchg
pop
or
inc
lret
lock
ds
lods
les
mov
idiv
push
and
pop
adc
out
push
mov
mov
mov
repnz
cmp
insb
cmpsl
mov
insb
mov
mov
cld
shlb
sbb
inc
sbb
aam
xor
pop
sbb
jo
fcompl
and
ret
jne
adc
insl
dec
adc
clc
cmp
std
xchg
lds
ljmp
lret
dec
jno
add
shll
adc
seto
cltd
cmc
xchg
cwtl
test
adc
mov
add
push
inc
sbb
fisttpll
push
in
pop
mov
sbb
lea
pop
incb
push
out
ret
rorb
add
mov
incl
push
imul
sarl
xor
aas
push
mov
mov
in
pop
sub
data16
dec
popf
dec
sub
inc
shll
or
movsb
js
loopne
adc
xchg
pop
and
dec
xor
mov
jg
jle
jnp
test
imul
jb
xchg
mov
ret
mov
cwtl
hlt
addr16
mov
and
mov
lret
jnp
iret
mov
jecxz
pop
xchg
jne
add
jne
filds
jle
xchg
jno
xor
shll
xlat
jle
cmp
in
out
xchg
xchg
push
cmc
push
xor
mov
mov
clc
or
jnp
mov
jle
shlb
in
push
and
out
mov
xchg
ret
mov
inc
fdivs
push
fadds
push
fstpt
popa
xchg
popa
push
fstpl
and
imul
sahf
scas
mov
sbb
sbb
mov
repz
hlt
nop
and
xor
movsl
or
cli
jg
aaa
add
sarb
fldcw
into
int3
insl
aam
pop
int3
sbb
inc
lds
cmp
sbb
cmpl
push
add
aas
fwait
insl
push
xchg
mov
jbe
js
jge
cmp
enter
daa
mov
lret
imul
je
daa
jl
movsb
je
jno
pop
push
icebp
inc
leave
xor
pop
jnp
lahf
sub
fsts
xor
push
inc
jae
inc
cmp
add
jnp
sbb
push
adc
loope
cmpsl
stos
sub
pop
ljmp
andl
mov
aam
sbb
adc
sub
test
push
sub
andl
push
pop
jne
bswap
sub
cltd
test
cmc
sbbl
mov
jo
jg
fst
mov
fistl
mov
daa
or
push
imul
mov
cmp
or
not
jmp
mov
xlat
jg
dec
add
sahf
gs
pop
test
rcl
xor
inc
insl
loop
cmp
stc
pop
bound
adc
daa
jb
dec
push
std
cmp
jle
xchg
out
inc
xchg
cli
cmp
xor
in
cmp
mov
ror
leave
xor
leave
std
inc
loopne
rolb
pop
xchg
sub
adc
dec
imul
cld
sub
lret
sbb
pop
cmp
cmp
xchg
mov
lods
adc
and
jl
gs
pop
inc
dec
aaa
int
inc
and
sub
mov
test
jnp
or
or
fs
pop
mov
xchg
pushf
sahf
or
outsb
sub
push
push
inc
pop
js
aas
fildll
rorb
sbb
je
adc
lahf
test
imul
ds
arpl
mov
pop
scas
fcomp
inc
push
repz
lock
ds
mov
ja
lods
lods
push
and
sub
sarl
sbb
std
cltd
lea
cmpsl
mov
inc
mov
pop
xor
cld
sti
inc
or
loop
and
fwait
ret
cmpsl
cmp
cmp
shrb
sbb
daa
sti
gs
add
jp
enter
mov
cmp
fstps
aas
rol
lods
push
mov
dec
pushf
fs
jmp
mov
out
cmp
inc
and
cltd
sub
test
push
ljmp
or
fnsave
pusha
and
xchg
pop
std
roll
push
pop
test
add
adcb
icebp
jmp
jo
or
pop
xor
movsb
mov
xchg
fstps
pop
out
bound
sbb
dec
sbb
mov
add
or
push
mov
push
aaa
jne
add
scas
subl
adc
data16
adc
shlb
arpl
xor
cld
add
adc
dec
jp
and
mov
jno
cmpsb
cli
popf
mov
es
dec
cmp
cmp
je
fbld
sbb
xchg
inc
pop
daa
jmp
cli
inc
or
out
out
pop
shrb
add
imul
sbbl
jge
mov
in
cmp
ret
iret
out
cmp
stos
negl
inc
add
cmc
push
fwait
ja
popf
mov
xor
outsl
out
inc
xchg
mov
and
imul
pop
scas
pop
fmuls
push
mov
and
repnz
das
fmul
lahf
sbb
fistpl
add
inc
outsl
or
mov
mov
or
icebp
dec
add
push
int3
pop
testl
jmp
mov
xchg
cwtl
xor
and
cmpsl
insl
and
mov
inc
movsb
lret
push
in
shlb
pop
pop
jge
xchg
enter
and
cmp
stos
jno
sti
cmp
add
sbb
jne
decb
and
ds
lahf
dec
daa
push
push
sbb
jbe
or
insl
popf
cmpsb
mov
and
sub
pop
and
ret
or
sub
fcoml
mov
jb
pushf
addb
cmpsl
lahf
rcr
jp
push
fcoms
push
aas
popf
sbb
cmpsb
addb
add
divl
mov
sub
cwtl
adc
outsb
push
rcr
ret
mul
mov
adc
shlb
dec
jg
cmp
mov
xchg
in
mov
mov
and
dec
push
ret
int
sbb
fadd
push
mov
lret
pop
shll
iret
sbb
mov
sahf
or
out
test
sub
mov
stc
push
lea
int
loop
sbb
xchg
cmp
jns
sbb
xchg
aaa
push
cli
insl
mov
cmp
jmp
or
aaa
into
lods
aas
out
nop
imul
loopne
pop
dec
pop
mov
cmpsl
adc
cld
ljmp
dec
rolb
adc
xlat
lretw
lods
add
mov
xlat
adc
xchg
sub
insl
mov
sbb
jp
inc
or
out
scas
dec
nop
das
stc
add
xor
xor
insl
in
inc
pop
in
dec
add
xchg
jl
push
sbb
mov
sub
cmp
fs
cmp
pop
jns
roll
call
inc
ja
mov
jle
or
push
clc
dec
xchg
je
mov
jecxz
mov
mov
pop
fstps
mov
in
cmpl
clc
test
pop
push
adc
push
inc
lock
mov
add
and
dec
cmp
mov
shl
cmp
fdivr
inc
pop
adc
push
dec
cmpsl
mov
jp
ficompl
ss
es
lret
xchg
add
lds
and
inc
mov
pop
ss
cmpb
sub
dec
add
xchg
xor
dec
add
insl
sbb
xor
xchg
inc
test
aaa
stos
lea
add
rorl
mov
sub
or
push
cmp
add
mov
arpl
rolb
mov
out
fstp
xchg
imulb
pop
cli
cmp
dec
jecxz
rcrl
jmp
stos
in
xor
out
mov
sub
pop
inc
and
inc
or
fldenv
xor
pop
addr16
hlt
xchg
inc
or
and
pop
mov
outsb
aaa
dec
push
pop
xor
add
jg
ds
inc
push
fidivrl
add
or
out
inc
sub
bound
call
xchg
inc
push
adc
or
or
add
addr16
xor
mov
out
mov
push
insb
push
push
ja
jne
pop
gs
leave
xchg
inc
mov
xchg
pop
mov
xchg
lds
adcl
out
xchg
push
sub
loopne
movsl
push
mov
out
stos
mov
add
cmp
jg
into
in
int
sub
ss
out
in
in
jg
adc
in
ret
out
pop
adc
xchg
bnd
xchg
test
pop
fisubs
push
fnstcw
setno
mov
sbb
repz
leave
and
scas
subb
rolb
repnz
or
leave
push
int3
fwait
hlt
imul
inc
and
cwtl
or
jo
leave
aaa
subl
sub
mov
int3
inc
out
cmp
ds
mov
outsb
scas
jo
out
scas
pop
outsb
add
test
test
movsb
push
fiadds
push
xor
jb
pop
scas
stos
jge
mov
daa
mov
xor
jno
and
jl
push
adc
mov
or
and
xchg
in
add
test
fcoms
call
cmpsb
or
inc
in
adc
daa
pop
arpl
push
mov
loope
or
cs
cmp
jbe
ds
leave
mov
mov
ss
jge
add
incl
inc
xor
push
test
cs
fcomps
sub
in
cltd
cmp
popf
push
fsubrl
dec
pop
sub
repnz
mov
sub
sub
pop
jg
cwtl
addr16
jl
mov
and
mov
int
sbb
push
push
or
lret
xchg
dec
inc
sub
sbb
scas
sahf
stos
pusha
mov
sbb
adc
loop
iret
pop
stc
int
mov
fists
push
jg
pop
flds
out
lods
push
mov
ret
in
out
mov
into
stos
adc
push
push
mov
pop
shll
adc
or
mov
sub
lahf
aas
mov
cmp
iret
xlat
push
inc
jno
outsb
push
stos
mov
or
sti
sbbl
mov
test
aaa
dec
cmc
cltd
mov
cmpsb
push
fldcw
add
xchg
sbb
sbb
sbb
or
cwtl
xor
adc
stos
pop
jmp
pop
pusha
cs
cwtl
aad
cmc
jne
xchg
mov
push
jb
dec
add
and
int3
scas
or
fdivrs
jg
scas
fsts
cwtl
int
sub
and
push
adc
fsts
roll
pop
hlt
addr16
inc
pop
sahf
lock
adc
mov
fwait
ret
fisttpl
out
pushf
dec
adc
add
or
ficomps
mov
dec
push
mov
jns
pusha
rclb
add
mov
cltd
aam
in
cld
ret
and
fildll
imul
fcoml
stos
xor
lods
xchg
mov
pop
loopne
push
mov
xor
add
stos
cltd
lcall
mov
jp
push
nop
ja
fldl
test
iret
pop
xchg
popa
xchg
cld
sbb
shl
filds
stos
fsubl
xchg
out
in
dec
push
add
mov
xor
push
push
xor
push
mov
pop
jp
jmp
daa
jecxz
mov
rorb
je
inc
cwtl
xchg
ret
sub
fwait
insl
hlt
jnp
jge
loopne
loope
shll
and
insl
bound
jbe
jns
inc
pusha
in
push
pusha
xchg
out
and
mov
repnz
call
jp
lret
icebp
mov
sub
cld
cld
addr16
jne
dec
add
mov
pusha
lods
mov
xchg
ljmp
xchg
nop
adcb
out
xchg
out
cmp
mov
push
repnz
push
fwait
aad
cmp
pushf
jnp
ss
jle
jmp
in
sub
adc
sub
movsb
dec
mov
ror
pop
dec
lock
pop
mov
adcb
mov
sahf
push
pop
mov
fimull
repz
sbb
dec
cltd
mov
scas
in
notl
mov
out
in
pop
xchg
in
sbb
aam
jno
push
arpl
fwait
inc
daa
inc
push
or
sub
mov
inc
popa
or
dec
popf
add
mov
test
inc
fs
mov
fsubrs
and
jmp
ja
stos
movsb
loopne
ljmp
js
jge
clc
jns
adc
daa
mov
bound
cmpsl
arpl
jno
jo
jl
or
mov
adc
xor
sub
mov
mov
xor
push
mov
xchg
shlb
test
pop
pop
mov
push
int
js
xchg
sub
push
cmpl
loop
jmp
mov
mov
sbb
inc
add
xchg
ljmp
shr
sbb
pop
pop
sbb
lcall
mov
mov
push
in
dec
adc
push
out
jg
cld
aas
mov
lcall
and
lock
jb
sbb
dec
fdivrs
mov
insb
lret
cs
inc
mov
inc
sbb
fstps
xchg
or
loop
imul
fs
push
adc
lods
out
add
mov
cli
shl
inc
xor
sbb
or
jecxz
into
jb
in
push
adc
loopne
test
pop
lock
mov
mov
aaa
data16
cmpl
inc
xlat
xchg
adc
sub
push
sub
out
in
sti
xor
pop
gs
or
nop
in
fwait
dec
push
push
jno
pop
movsb
fldenv
cmp
pop
add
cmc
xchg
add
sbb
xchg
cmp
pop
mov
int
adc
xchg
and
aad
arpl
aas
mov
jp
dec
leave
lods
loope
pop
cld
sbb
out
iret
test
xchg
lea
cmp
mov
dec
ret
mov
neg
subl
popa
fcomi
sbb
pop
xchg
popf
ss
out
mov
mov
push
mov
rclb
shrl
sub
ret
std
mov
test
mov
in
frndint
jl
mov
mov
and
mov
cwtl
cld
inc
shrb
stos
shrl
andb
ret
mov
pop
es
adc
clc
daa
leave
mov
ljmp
pop
lods
test
inc
popa
mov
pop
sbb
jl
in
and
add
sti
sub
jg
push
push
sub
push
in
aad
xchg
adc
scas
or
inc
jecxz
pop
stos
mov
loop
dec
or
add
call
or
call
push
mov
leave
jo
dec
push
jmp
pop
pop
outsb
enter
mov
inc
dec
inc
das
xchg
popa
or
push
push
fwait
pushf
mov
scas
add
mov
ret
push
lret
jns
add
push
xchg
ficomps
mov
mov
or
mov
jmp
mov
xchg
cli
mov
xor
dec
in
sbb
fisubl
jmp
test
xchg
mov
sub
pop
push
addl
pop
inc
sub
push
jne
push
xor
int3
and
or
movsb
and
clc
fs
fdiv
in
ds
adc
iret
add
push
pop
jg
aam
bound
push
in
fs
adc
imul
lahf
pop
xchg
mov
adc
cmpsl
lods
xchg
scas
dec
and
push
sarb
repnz
arpl
leave
add
js
mov
mov
inc
sub
or
out
cmp
add
or
mov
xor
pop
pop
pop
mov
fsubrp
adc
jo
scas
pop
or
cmp
loopne
movsb
imul
rclb
enter
sarl
ljmp
mov
cmp
jae
jno
loope
jl
jge
dec
sub
jmp
xor
movb
lahf
cmpsl
push
xchg
push
xchg
cmpsl
add
outsb
sub
adc
adc
shr
fdivrp
add
lds
popf
pop
loope
jnp
push
sub
loope
sti
and
dec
lahf
cmp
das
pop
movsl
loop
fnop
imul
and
insl
and
xor
mov
sub
rclb
pop
xchg
adc
lcall
mov
jg
cmpsl
sub
pop
js
andl
stos
jg
arpl
mov
pop
push
and
fs
hlt
dec
and
rol
cs
jge
jp
mov
pop
pop
sbb
fildl
in
adc
outsl
outsl
insb
jo
adc
stos
stc
cmp
daa
outsb
ret
hlt
adc
int
ss
pop
cld
cmp
push
int
mov
and
cmpsb
xchg
cmpsb
cmp
imul
imul
stos
loopne
insb
fcompl
mov
adc
jns
adc
jae
add
js
lods
mov
dec
inc
xlat
rcrb
sub
mov
pop
aam
sti
loope
push
lods
jo
gs
nop
rolb
mov
mov
outsb
sbb
les
xor
fistps
vandps
adc
repnz
xchg
int3
jg
push
xor
adc
setl
mov
push
test
je
xchg
inc
enter
pop
ss
jb
fnstenv
inc
jp
je
pushf
push
jecxz
mov
jp
jge
xchg
cwtl
inc
in
mov
or
roll
movhps
pop
cmp
addl
test
or
mov
push
mov
push
sarl
data16
push
dec
or
cmpsl
scas
add
mov
mov
movb
outsb
push
insb
mov
popa
push
mov
mov
jl
sti
mov
sub
push
aam
cs
inc
mov
insl
rol
es
mov
popa
fwait
outsb
lods
adc
popf
mov
xchg
popa
mov
push
push
adc
popl
xchg
outsl
adc
dec
xchg
fnsave
push
dec
push
fstl
mov
xchg
mov
sbb
sahf
or
stos
mov
mov
xchg
js
xchg
scas
test
imul
ds
repz
xor
xchg
xor
sbbb
push
ja
adcb
and
mov
or
push
das
fwait
lret
dec
loopne
ret
push
jmp
mov
popa
mov
bound
push
jns
outsb
hlt
in
out
xchg
sub
pop
mov
ljmp
bound
testb
adc
mov
mov
test
pusha
lcall
xchg
nop
sbb
xchg
xor
xchg
es
fiaddl
xchg
lock
xchg
ret
jo
inc
stos
or
inc
xchg
insb
psubq
jle
shrl
and
cs
bound
mov
divl
pop
mov
sub
sub
pop
aad
push
cmpsl
lret
cmp
pop
push
push
movsl
mov
scas
in
les
mov
push
loop
stos
sar
push
stos
inc
test
aad
cmpsb
mov
xchg
fdivrl
jnp
div
pop
int3
clc
arpl
push
or
mov
fisubrs
add
fsubrs
lret
cmp
mov
push
fimuls
inc
xorb
push
and
pusha
cmp
jno
movsb
idivb
popa
push
and
or
ljmp
scas
ret
or
jbe
jl
pushf
mov
pusha
mov
xor
popa
adc
mov
gs
mov
push
cmp
inc
or
mov
xchg
scas
jae
lds
ret
jge
pop
and
push
icebp
clc
loope
sub
dec
sbb
cmp
in
sub
movsl
jmp
testb
pushf
repz
movsb
out
add
in
xor
and
ja
mov
sub
inc
adc
lret
fsubrl
aad
sub
dec
rclb
cmp
inc
jg
iret
mov
mov
pop
and
out
push
into
jecxz
int
jns
fsubrs
jecxz
lret
mov
mov
inc
fcompl
jecxz
lcall
scas
daa
xor
dec
outsl
dec
inc
cmp
cmpsb
cmp
fs
pop
insl
adc
dec
ss
aad
cmp
xor
lea
psubd
adc
mov
call
mov
cmc
lods
shrl
fbld
imul
mov
cmpsl
lods
lahf
cltd
int
scas
loopne
xlat
rdtsc
sahf
sub
pop
add
les
in
ror
fisubl
gs
fwait
mov
inc
andl
test
xchg
xchg
mov
inc
sbb
mov
adc
fsub
adc
aas
pop
pushf
cmc
push
and
or
jecxz
aad
imul
aas
cli
loop
jb
insb
inc
dec
mov
mov
jecxz
jnp
scas
insl
imul
lods
out
lahf
push
push
mov
fsubrs
xchg
mov
js
dec
xchg
cmp
in
inc
hlt
mov
lock
mov
mov
inc
mov
adc
das
lret
testb
std
fdivl
add
and
cmpsb
popf
mov
xchg
push
iret
cld
sarb
lret
push
cli
bound
jle
add
rolb
ror
ljmp
push
int
ret
iret
call
out
insl
mov
lods
adcl
mov
lods
jg
es
mov
mov
push
xor
pop
bswap
or
add
mov
test
std
mov
push
push
push
fld1
pop
fnstsw
lds
push
mov
sbb
push
inc
pop
add
push
out
adc
pusha
add
dec
inc
inc
cmpsb
jno
mov
jbe
mov
pop
xor
mov
xchg
outsb
mov
pop
lea
sbb
jmp
pop
clc
js
push
and
fwait
cli
fwait
jmp
data16
add
jne
stc
out
mov
lods
dec
jns
jp
in
sub
mov
mov
jecxz
cmp
or
xchg
xchg
mov
int
mov
cvtpi2ps
stos
or
jmp
pusha
xor
push
aas
xchg
arpl
inc
jmp
icebp
and
adcl
fldcw
int3
mov
pop
stos
addb
insb
jp
inc
jnp
into
jle
lcall
or
movsl
ret
pop
pop
in
inc
xor
jae
jb
push
push
push
popf
arpl
inc
inc
aad
mov
popa
out
adc
dec
sbbb
jg
push
jb
push
icebp
test
pop
mov
in
mov
repnz
hlt
push
ljmp
xor
push
pop
dec
mov
or
and
arpl
int3
out
adc
fisubrs
dec
loope
aaa
lods
pop
jo
daa
pop
scas
aad
movsb
and
mov
pop
movsb
adcl
push
inc
jge
mov
sbb
lods
addr16
cmp
or
jl
loope
dec
or
push
inc
jne
xor
cld
cmp
lahf
in
sbb
sbb
test
add
roll
sarb
sbb
js
cmp
pop
and
sub
mov
mov
movsl
ds
add
dec
rcrb
push
stc
test
scas
into
sbb
push
arpl
or
xor
jne
cmp
fcompl
add
pop
xchg
sti
cmc
lcall
push
stos
cmp
mov
call
filds
adc
inc
mov
sub
or
xor
rcl
ror
or
fsubrs
lcall
call
shrl
and
adc
push
test
insl
pop
xor
sbb
stc
test
push
outsl
adc
repnz
pusha
dec
outsb
out
lods
insb
mov
scas
cmp
cmp
or
inc
into
sbb
sub
jae
xchg
loopne
xor
dec
clts
adc
dec
imul
cmc
gs
xchg
lods
xchg
push
xlat
dec
xchg
mov
das
sub
jnp
repz
adc
nop
jbe
lods
dec
jno
adc
pop
ljmp
jp
repz
sbb
dec
dec
iret
sbb
pop
inc
loope
xchg
jne
pop
mov
setl
add
sarb
adc
push
inc
out
aas
cltd
xchg
jp
sysenter
mov
add
clc
fmuls
jecxz
xchg
js
mov
xchg
lea
jge
mov
pop
mov
cs
dec
in
jge
jnp
xor
inc
jnp
xchg
cltd
push
ljmp
lds
mov
idivl
mov
loope
rcll
cwtl
test
mov
sbb
shlb
lods
dec
sbb
imul
mov
mov
inc
mov
or
pop
cmc
ret
mov
sub
adc
jmp
lea
ficoml
js
fdivr
std
xchg
jle
daa
ljmp
xchg
lods
ljmp
mov
je
fs
or
add
add
inc
pop
test
out
jmp
testb
popf
imul
enter
dec
lds
stos
cwtl
pop
out
js
push
push
stc
rolb
in
dec
jmp
lock
mov
xor
call
mov
rcrb
sbb
test
push
pop
dec
mov
into
dec
int
dec
inc
hlt
popa
rorl
lret
sub
add
fwait
mov
xchg
out
pushf
inc
jne
cmpl
sub
xchg
lret
cmp
mov
movsb
mov
fisubrs
and
mov
mov
in
mov
dec
cld
jecxz
push
or
pusha
rorb
xchg
or
xchg
ss
jmp
mov
pop
xchg
out
jae
sub
pop
sbb
out
jecxz
stos
repz
push
and
daa
xlat
jnp
aad
jle
push
xchg
in
mov
and
lret
lock
lods
fs
xor
jae
push
mov
sub
inc
cmp
inc
push
sarb
xchg
ret
sbb
ja
imul
jno
lcall
inc
loope
push
imul
jmp
arpl
push
jmp
xor
dec
sbb
repnz
aaa
ds
pop
or
jp
add
sbb
int3
fisubrl
pop
adc
fidivl
mov
push
scas
mov
xchg
and
andl
push
mov
and
out
enter
daa
lods
nop
mov
jae
push
jno
or
jl
shr
dec
jp
fs
sub
test
js
lahf
add
lods
push
or
out
push
iret
pop
add
sbb
in
xchg
xlat
add
pop
sahf
pop
add
pushf
stos
loope
hlt
mov
xor
pop
dec
outsb
jno
movsl
testl
pop
cmpb
adc
add
test
xor
addr16
std
sub
sub
loopne
mov
or
faddl
mov
sbb
xorb
jg
mov
mov
sbb
mov
adc
mov
testb
pop
push
aam
push
int
cmpb
or
lds
sarl
xor
add
je
rorb
outsl
or
cmp
stc
pusha
add
setne
ss
into
xor
pop
stc
cmpsl
out
mov
cli
lahf
adc
cmp
pop
sub
mov
stos
into
adc
cmp
fsubp
popf
xor
pop
insb
inc
xchg
adc
insl
and
jle
out
adc
jecxz
push
dec
data16
cmp
popa
sbb
mov
lcall
push
push
sbb
nop
push
dec
mov
inc
cmpsl
dec
aad
aas
sbb
xchg
and
lock
push
sub
cli
call
adc
add
inc
std
adc
addr16
dec
inc
lret
fmuls
and
aad
add
aas
cmp
jb
das
stc
dec
movsl
mov
loop
and
jo
mov
and
je
xchg
mov
bound
add
test
ret
cld
mov
and
lock
push
das
movsb
cmp
mov
scas
imul
inc
xor
pop
lret
fiaddl
dec
cli
sarl
cmpsl
stos
ss
mov
inc
enter
pop
push
xor
out
mov
jge
mov
jae
mov
adc
mov
sub
aam
push
pushf
ret
in
jne
es
movsb
xor
jns
clc
adc
insb
xchg
mov
push
lret
sbb
sarl
call
lods
and
call
stc
add
mov
test
dec
mov
cmp
push
pop
js
ffree
jle
test
add
push
and
jnp
xchg
shll
sti
push
stos
xchg
fstpt
xchg
dec
dec
add
push
xor
or
cltd
mov
xchg
cmp
dec
in
xor
add
ja
cmp
rorb
or
inc
icebp
fwait
pop
mov
ret
pop
add
sub
inc
out
jnp
push
bound
addb
cmpb
adc
sbb
mov
xchg
cmp
fldenv
pushf
addr16
repz
inc
inc
mov
cltd
sub
and
dec
jo
cmp
push
lea
pusha
imul
xchg
or
inc
jmp
xchg
xor
sbb
imull
push
sub
mov
jne
push
jl
jnp
cmpsl
repz
sub
in
push
adc
lahf
adc
xor
pop
pop
mov
inc
mov
jae
jp
push
lock
mov
icebp
push
shrl
ret
fcmovb
push
imul
arpl
bound
jg
jb
es
in
pop
inc
ljmp
je
hlt
call
and
or
shrb
daa
or
xchg
add
sbb
push
fidivs
lds
cwtl
jo
rolb
sbb
push
cmp
out
movsb
xchg
xchg
push
push
mov
jbe
xor
enter
daa
stos
cmp
add
or
adc
fmuls
or
ja
jo
js
xor
call
push
ficomps
test
lcall
cmpsb
push
mov
insb
js
dec
pop
fstpl
repz
subb
mov
cmp
leave
ds
outsl
movsl
dec
pop
rcl
movsb
and
adc
sbb
sbb
push
push
xor
in
pop
fcmovnb
cmp
dec
mov
xchg
repnz
scas
add
sub
in
or
push
orb
mov
pop
or
mov
sarl
iret
xchg
out
push
xlat
sbb
pop
fiaddl
test
aas
add
mov
inc
cmpsb
sahf
jge
out
inc
push
cltd
xor
les
rcll
pop
jne
stc
pop
test
fs
ss
clc
loope
dec
pop
mov
out
inc
jne
shlb
cmp
add
cmpl
stc
into
loope
addr16
add
pop
mov
adc
mov
imul
pusha
add
push
pusha
lods
push
cmova
pusha
push
jg
int3
mov
mov
push
movsb
adc
add
sbb
cmp
push
nop
sub
das
dec
das
pusha
pop
inc
mov
js
les
pushw
xchg
roll
out
call
xchg
jg,pn
and
arpl
lds
pushf
divb
jmp
jo
xchg
or
add
jb
pop
ds
sbb
mov
jecxz
fwait
cs
mov
dec
lea
insb
inc
cwtl
das
adc
fdivl
cltd
mov
jno
sbbl
fcmovnu
or
aaa
inc
mov
lock
mov
das
sbbl
in
jno
cmp
and
push
mov
adc
adc
cmc
jp
cmpsl
stos
movsl
imul
cld
push
xchg
mov
sbb
or
xor
inc
sub
pop
aam
mov
sbb
loopne
daa
insl
outsb
sub
clc
dec
pop
jle
cld
stos
or
pop
adc
test
mov
and
outsl
push
ret
test
movntq
arpl
jecxz
in
pop
test
fbstp
and
fucomp
inc
dec
test
cld
cmp
sbb
xor
sar
shrd
mov
out
ds
xchg
sbb
adc
stos
mov
mov
sahf
cwtl
mov
fcom
popa
dec
push
jl
pop
mov
sub
dec
mov
mov
and
stc
fwait
xchg
mov
dec
jp
add
xchg
out
pop
add
addr16
js
in
stc
outsl
xchg
imul
xor
aam
andl
stos
inc
mov
mov
mov
pop
ret
push
inc
inc
jne
jae
pusha
push
cmp
sbb
xchg
fsubrl
jmp
push
mov
addl
out
fisubrl
jge
inc
push
insb
mov
and
fldl
insb
mov
cmp
jle
fimuls
in
outsl
loop
lcall
ret
jno
xchg
arpl
inc
cltd
cmp
add
mov
inc
popf
fcomps
push
push
fidivrl
rcll
dec
fbld
mov
aaa
push
rolb
mov
fmulp
inc
leave
push
movsb
dec
hlt
xor
mov
or
std
lea
mov
dec
push
add
jmp
int3
mov
xor
dec
rcr
into
pop
xorb
sahf
scas
jb
add
scas
adc
das
movsb
and
stos
jbe
mov
jge
jl
enter
daa
stos
outsb
repnz
push
push
jno
xor
jl
sub
inc
push
in
imul
and
sub
lahf
inc
nop
es
mov
jecxz
into
scas
in
mov
cmpsb
mov
xor
mov
sbb
cs
pop
gs
dec
mov
notb
adc
mov
sahf
movsl
add
mov
push
orl
subb
cld
jne
xor
fcom
adcl
add
adc
jp
popa
pop
adc
lcall
sti
daa
pop
sub
xchg
js
adc
test
out
out
movsl
sub
mov
mov
and
push
fisubl
int
pop
sbb
enter
xchg
sbb
shrl
mov
aas
data16
and
xorl
js
outsl
lret
loop
inc
dec
stc
into
repnz
fs
push
je
movsb
xchg
das
cmp
push
adc
mov
cli
add
adc
cmp
and
mov
cmc
enter
shrl
pop
stos
mov
adc
xor
imul
add
orl
fwait
add
out
sub
sub
in
jo
xor
dec
adc
pop
aam
gs
ja
nop
pop
pop
or
in
inc
int
or
lods
ja
les
repnz
xchg
push
rcrb
cmp
adc
fistps
jle
adc
negl
int3
adc
jmp
es
inc
dec
lods
stos
aas
jbe
je
or
mov
xchg
sbb
je
test
mov
lea
pushf
repz
orl
or
xor
das
fisttpl
mov
mov
adc
lock
daa
mov
mov
sbb
in
and
sub
roll
or
push
pusha
cltd
std
js
dec
lock
cmpsl
test
push
jbe
out
adc
lret
sysenter
mov
lcall
pop
push
scas
stos
rcrb
ficompl
dec
aam
nop
daa
ret
or
sub
arpl
xlat
clc
mov
xchg
cmp
ljmp
xor
sub
mov
inc
imulb
and
sahf
mov
push
add
mov
or
addl
push
in
int3
fstl
mov
sbb
pop
psrlw
push
pop
lods
mov
out
mov
out
add
xchg
cltd
cmp
adc
or
clc
cmp
fcmovnu
test
pop
jns
jl
jmp
in
cmpsb
out
inc
mov
mov
fwait
mov
mov
add
loope
sub
jmp
bound
aas
jns
adc
mov
mov
shl
mov
iret
ror
addr16
dec
jp
movb
cmc
popf
mov
lret
daa
jl
ss
sub
lods
mov
or
cmp
rclb
push
jo
sbb
sarl
scas
sub
mov
stos
les
stos
dec
mov
hlt
pop
push
insb
mov
push
jle
xchg
in
fadd
adc
cmp
cmp
sub
leave
mov
inc
movsb
pop
sahf
jae
xchg
inc
push
jbe
iret
popf
mov
add
shll
fisubrl
out
sbb
push
shrl
movsb
mov
push
or
test
lods
repnz
leave
into
ja
hlt
jle
test
lock
inc
cmp
lret
jae
sbb
cld
aaa
jnp
mov
ret
mov
data16
fwait
jne
pop
mov
xor
pop
jo
test
push
cmp
push
movsb
lods
or
lods
sbb
jbe
test
pop
enter
daa
test
cltd
jb
fidivrl
jl
lcall
iret
clc
jp
jo
and
pushf
lahf
popa
paddsw
jb
test
xor
into
cmpsb
and
xchg
dec
mov
jp
pop
and
loope
xor
sub
mov
xlat
inc
inc
movsl
or
cltd
rorb
mov
cmp
cld
sbb
in
or
ds
inc
mov
or
cmc
out
pop
xchg
stc
sub
jge
inc
faddl
cli
hlt
outsb
shl
lods
adc
ret
mov
jg
and
pop
mov
mov
test
and
add
or
in
cmp
fcoms
shl
dec
dec
pop
lret
xchg
roll
mov
sbb
add
sahf
ret
aad
test
xor
paddb
outsl
test
dec
in
stc
test
push
fs
xchg
adc
cmp
ss
dec
cmp
dec
jnp
out
in
movsb
cli
cmp
xor
out
add
inc
into
cmpsl
pop
ret
cmc
outsb
lods
pop
pop
leave
imull
imul
pop
add
in
mov
gs
fs
addb
or
sub
sbb
in
fcmovne
pop
sti
sti
int3
xchg
jg
jmp
xchg
xor
in
insb
pop
inc
loopne
mov
in
sub
test
ret
push
xchg
jns
xchg
sarl
repz
adc
stos
rclb
jae
adc
in
out
dec
outsl
push
aad
push
hlt
inc
push
dec
aas
adc
pop
dec
je
inc
lods
jecxz
scas
mov
out
push
mov
pop
mov
mov
xchg
dec
xchg
mov
fstpt
xor
pop
or
cmp
ljmp
inc
ljmp
rol
dec
and
aas
mov
push
loope
notb
mov
icebp
cmpsl
test
inc
mov
lds
test
in
repnz
cmp
mov
or
mov
jno
stos
shr
pop
jbe
inc
or
ret
lcall
insl
cmp
jecxz
les
dec
xchg
jp
in
ljmp
push
lods
xchg
xor
mov
push
nop
jg
jns
push
movsl
bsr
add
popf
ret
inc
mov
adc
test
and
cmp
fisubrl
shrb
out
test
pushf
pop
push
xor
stos
push
cmp
add
or
and
push
faddl
lock
fidivl
xor
movsl
dec
mov
ficoms
dec
and
cmp
dec
cltd
mov
adc
test
pop
push
xchg
ret
mov
mov
test
sbb
fsubl
ret
popa
push
push
in
jp
xchg
pop
lret
mov
insl
or
pop
or
jp
xchg
je
sbb
mov
cmp
dec
sbb
jae
jnp
cmp
stc
fistps
in
xchg
or
jmp
call
xlat
mov
cmpsb
jmp
pop
mov
ljmp
and
pushf
out
insb
xchg
jno
jnp
mov
jle
and
in
movsl
mov
push
pop
xor
pushf
xor
imul
inc
scas
shll
cmp
les
mov
aad
push
pop
sbb
loopne
or
mov
cmpsb
out
scas
std
fistps
shlb
mov
test
aas
leave
inc
out
jns
leave
insl
xchg
arpl
mov
mov
sbb
pop
iret
aaa
cmp
add
xor
pop
shll
call
jo
cmp
and
mov
lds
mov
jbe
adc
enter
daa
test
cltd
cmp
xchg
nop
jno
out
jl
fidivl
dec
ss
push
mov
into
xor
add
lahf
adcb
test
sti
adc
inc
fistpl
cmpsl
fsubr
das
and
js
dec
inc
pop
lcall
loope
cmp
int3
dec
xchg
cmp
ds
and
adc
cmpsb
aam
flds
out
add
mov
xor
rolb
pop
push
push
pushf
sub
cmp
adc
lcall
push
fsubrl
test
dec
in
sbb
inc
or
fidivrs
cmp
mov
fadd
mov
mov
jle
cld
movsb
dec
push
loopne
jmp
push
lock
outsb
mov
or
mov
mov
xchg
sbb
mov
sahf
data16
lcall
xchg
test
mov
loop
xchg
stc
cmp
inc
fs
xchg
adc
push
cmp
xchg
mov
add
xchg
in
cli
imul
cmp
cmp
or
push
cmc
push
sub
or
cltd
pop
call
enter
clc
sub
pushf
mov
cmpsb
xchg
fldenv
sbb
lods
or
not
mov
xchg
sub
shlb
inc
mov
mov
adc
nop
mov
stc
fs
repz
stc
fstps
bound
repz
dec
xchg
sbb
sbb
outsb
lea
pop
cmp
dec
pushf
testl
xor
scas
int
aad
fnsave
inc
test
pop
aas
mov
fnsave
and
dec
orl
push
jecxz
pop
addr16
sub
cwtl
pusha
mov
mov
fwait
sti
dec
jl
stc
fldt
lret
lcall
pusha
dec
adc
and
xchg
mov
jo
mov
xor
std
push
lret
out
cmpsl
cmpsl
or
mov
pushf
jmp
cld
aam
pusha
lret
in
push
popa
mov
add
push
fmull
pop
nop
mov
rol
mov
sub
cmpsl
dec
aam
imul
imul
clc
cmp
mov
test
popa
cmp
jp
add
int3
mov
mov
popa
push
push
sub
add
mov
sbb
icebp
test
xor
or
arpl
push
test
pusha
push
xchg
into
sbb
mov
pop
add
loopne
addr16
xchg
imul
push
jnp
xor
mov
mov
cmpsb
mov
loope
je
mov
daa
ja
adc
dec
mov
stos
inc
out
or
jae
fwait
adc
pop
push
cmp
add
xchg
es
test
sarl
and
add
sbb
lret
frstor
mov
addr16
es
jp
sbb
mov
loopne
mov
test
push
pop
jne
sbbb
mov
fbstp
jle
push
into
sub
push
jo
xchg
mov
fildl
sub
out
mov
sub
fisubl
and
out
insb
cld
adc
outsb
jle
mov
in
push
adc
sbb
iret
sti
rcrb
pop
pop
aaa
inc
movl
adcb
int
popf
dec
sub
push
iret
enter
mov
inc
sbb
mov
imul
xsave
mov
fwait
dec
xlat
rclb
cmp
leave
mov
test
arpl
shlb
inc
scas
icebp
or
mov
push
xchg
or
mov
int3
jno
scas
pop
add
sbb
add
add
popa
inc
add
loop
scas
and
pop
cmp
pop
cld
movsb
ret
fstl
push
dec
xchg
pop
jbe
out
push
jge
inc
cmp
daa
cmpsl
sbb
jno
js
jl
out
dec
movsl
adc
push
xchg
repnz
xor
sahf
into
fs
lahf
sbb
test
aam
inc
icebp
jne
cmpsb
sub
in
push
jo
js
int3
cwtl
pop
fnstcw
repz
adc
subb
and
push
mov
fbld
inc
push
xor
inc
sbb
aam
xor
and
pop
ja
xor
jmp
movb
adc
sub
xchg
cmp
adc
stc
loope
jg
xor
dec
iret
loop
cmp
mov
xchg
push
jecxz
push
int
daa
inc
fmul
sahf
xchg
test
das
or
xor
insb
mov
sbb
inc
test
lods
xor
shrb
jnp
loop
repz
stc
rep
xlat
fs
xlat
adc
jmp
cmp
inc
or
xchg
divl
pop
jb
cmp
test
into
insl
dec
mov
loopne
popa
mov
adc
loope
imul
pop
add
xchg
jne
lock
sub
dec
xor
xlat
enter
in
cmpsb
or
lods
pushf
daa
in
mov
cwtl
sti
pop
nop
dec
inc
sbb
gs
es
cwtl
test
stos
mov
push
or
fsts
cmc
les
cs
fnsave
sbb
jmp
shlb
adc
adcb
mov
js
adc
adc
mov
and
add
and
dec
clc
cmc
cmpsb
je
outsb
popf
jecxz
rcrl
lea
bound
fcoms
pop
cmpl
data16
fs
inc
movsl
gs
mov
leave
mov
inc
loop
and
addr16
icebp
popf
inc
negb
in
stc
dec
loope
and
mov
jae
xchg
cld
incl
mov
xchg
mov
mov
scas
mov
test
das
jmp
ret
ret
mov
int3
jecxz
or
sti
clc
cmp
ficoms
sub
pop
popa
push
addr16
mov
scas
repnz
and
das
jl
packsswb
mov
sub
imul
ret
sahf
gs
cs
fisttpll
stos
adc
cli
mov
pop
lods
into
push
stos
xor
jns
mov
addb
fisubl
lcall
xchg
sub
or
loop
xor
sti
lahf
mov
in
push
dec
out
xchg
mov
ja
adc
inc
jle
movsl
or
adc
fwait
inc
inc
nop
push
fcmovnu
xchg
add
repnz
mov
cmc
popf
int3
jns
ret
dec
in
dec
sub
push
adc
shrb
addr16
xchg
mov
mov
stos
mov
xchg
inc
add
add
sti
pusha
jb
movsb
fists
add
jmp
jle
push
cmpl
lods
fmull
fs
adc
push
push
sbb
and
test
insb
mov
mov
cmp
cmp
in
imul
hlt
pop
iret
pop
push
imul
outsb
addb
lds
pop
push
mov
cmp
inc
dec
mov
push
sbb
popf
repz
or
ret
test
push
loop
imul
sarb
xchg
jmp
leave
xor
push
hlt
pop
out
pop
arpl
es
inc
jno
or
jns
arpl
mov
push
sahf
add
and
cs
fisubs
bound
jo
pushf
je
out
add
cmp
inc
iret
push
cltd
mov
jbe
inc
loope
inc
dec
into
enter
daa
cmpsb
pop
cmp
sub
push
dec
adc
cltd
push
js
or
cmp
cmpsb
push
std
adc
add
jns
adcb
cmpl
mov
daa
pop
sbb
in
loope
mov
sub
push
jae
mov
mov
movsl
and
rcl
lods
xchg
xor
loopne
pop
sub
sub
xor
pop
pop
pop
sahf
sarb
data16
push
bound
shl
imul
mov
push
outsb
cld
in
adc
adc
aas
jg
mov
test
mov
push
shll
sbb
mov
fadds
subl
mov
push
sub
sahf
lods
sti
jmp
ljmp
outsl
inc
outsl
adc
ds
imul
push
adc
adc
mov
ss
push
cmp
cmp
cli
shr
cltd
xor
mov
ss
push
ss
in
fneni(8087
aas
fisubrl
rclb
imul
rolb
les
xchg
xchg
xlat
pop
push
xchg
pop
sti
test
sbb
pop
sti
or
add
cmp
dec
or
cli
inc
sbb
pop
adc
dec
inc
xchg
mov
xchg
xor
fs
mov
ficompl
in
jne,pn
lret
and
inc
mov
xlat
mov
push
push
dec
dec
outsl
xchg
jecxz
lret
inc
mov
jle
sbb
sbb
xchg
imulb
xchg
adc
dec
mov
dec
push
sub
pop
cmc
and
lock
rol
fidivrs
mov
xchg
js
roll
mulb
hlt
std
adc
mov
imul
mov
dec
push
pop
cld
sub
jmp
lret
lods
jmp
mov
and
into
lret
in
or
sub
iret
mov
jbe
inc
ret
inc
jge
outsl
xchg
mov
clc
jne
insb
xchg
aaa
fs
popa
push
xchg
lods
xlat
mov
outsl
mov
movsl
les
push
or
dec
cmpleps
ds
jns
lods
mov
cmp
push
inc
fnsave
xchg
xchg
pop
sbb
sarb
and
jno
sub
dec
pop
add
mov
mov
insl
fnstsw
mov
out
int3
dec
push
push
pop
pop
gs
xor
out
xchg
dec
jb
mov
or
sub
jb
popa
push
jle
adc
dec
movsl
in
out
mov
icebp
bound
lock
in
xor
hlt
jge
mov
mov
mov
addr16
cmp
mov
pop
sarb
jg
ret
jne
rcl
pusha
or
push
xchg
xchg
sti
addr16
inc
push
xchg
dec
nop
in
orl
dec
out
test
mov
cmpsl
jge
stos
sbb
and
aam
rcr
add
movsl
les
mov
in
fs
adc
fcomip
iret
mov
cli
pop
movsl
popa
jb
shrb
and
data16
notl
addb
popf
fwait
sub
inc
int
add
xchg
and
xor
pop
xchg
imul
fsubrs
sub
ret
ror
ljmp
inc
jae
stos
sub
jno
add
cmpsl
or
xor
xorl
sbb
or
in
mov
pop
pop
push
std
fiadds
fadd
outsl
call
mov
int
dec
and
gs
flds
imul
push
out
jge
cmp
andb
pop
pop
cmp
rol
ss
rclb
push
pop
mov
cmp
aam
rcrl
or
push
pop
push
xor
ja
cmpsb
xor
sub
js
test
push
cwtl
ljmp
xchg
cmp
insb
cs
movsl
sub
adc
sbb
jbe
inc
sub
xchg
mov
add
or
xor
mov
pop
lds
sub
or
ficompl
flds
daa
sub
pop
dec
outsb
pop
and
fwait
in
subb
jns
or
repnz
inc
mov
cmp
pop
and
sbb
int
cmpsb
dec
fadds
adc
inc
inc
jmp
xlat
shll
mov
lods
xchg
sbb
lock
test
xorl
rcrl
loop
push
stc
popa
add
fsubl
ss
cmp
cmp
mov
cli
add
xchg
xor
stos
cmp
xchg
and
mov
adc
cmc
stos
and
loopne
pop
pop
inc
and
in
mov
adc
cltd
mov
data16
dec
lods
mov
xor
clc
sub
add
fcomi
test
xchg
sbb
or
gs
out
nop
dec
pop
fimull
mov
inc
sub
imul
cmpxchg
aad
xchg
repz
xchg
xchg
arpl
imul
jbe
mov
je
iret
push
mov
fsubs
pop
inc
das
les
xchg
test
jb
mov
push
je
jmp
jecxz
pop
dec
leave
lea
lea
leave
xchg
mov
mov
fcomi
stos
repnz
cwtl
roll
lock
jae
mov
xor
mov
pop
ficomps
mov
lret
xlat
mov
cmpsl
movsb
adc
icebp
and
cld
push
add
cmp
mov
mov
inc
js
and
sub
cmp
cmc
sub
es
es
insl
fdiv
stos
clc
mov
mov
ljmp
push
inc
out
mov
hlt
pop
andb
pop
movsb
mov
roll
push
out
cltd
cs
mov
cmp
push
mov
fstp
xchg
sbb
int3
jae
sbb
add
add
into
pop
add
out
nop
std
dec
xchg
ds
push
add
mov
xor
mov
mov
ljmp
pop
and
orb
pop
inc
lods
mov
jnp
mov
fiadds
test
cmp
xchg
movsb
movsb
bound
dec
data16
shll
insb
outsl
xchg
inc
xchg
mov
mov
mov
sbb
rclb
mov
push
mov
mov
sahf
push
dec
movsl
sti
arpl
adc
test
repz
sub
xchg
into
add
jmp
adc
dec
sbbl
fldt
fists
sub
addr16
xchg
insb
cmp
sar
jle
and
in
shll
sbb
pop
fsub
xchg
divl
repz
push
inc
push
xchg
popf
ret
push
dec
es
lods
mov
lods
sbb
cmc
imull
push
popa
scas
mov
cld
push
jo
push
shl
cmpsl
mov
rol
mov
hlt
cmc
mov
push
inc
dec
push
call
sbb
dec
aaa
ss
or
adcb
int3
xor
cltd
pop
lea
or
jmp
rcrl
pop
dec
cmp
lods
xrelease
and
cmp
pop
xchg
movsb
adc
jbe
aas
scas
jge
adc
daa
movsb
push
mov
jl
and
dec
bnd
or
pmuludq
outsl
and
lods
push
mov
cmp
daa
pmulhw
fnsave
in
lret
scas
sarb
mov
xchg
mov
mov
sub
lods
sub
sbb
fsubs
shlb
jne
pop
outsb
in
sbb
loope
add
es
dec
mov
adc
cli
insb
sub
pop
or
rcrb
and
dec
sub
popa
mov
adc
dec
inc
outsb
jg
fcomip
mov
fsubrp
mov
add
push
in
lds
int
cmp
fdivr
test
testl
mov
mov
dec
mov
test
mov
xor
mov
cmc
loop
je
stc
sbb
mov
adc
dec
ss
mov
cmp
out
xchg
test
aaa
sub
aam
push
pop
sub
movsl
mov
cmc
jb
mul
jne
ds
fs
adc
xor
adc
jmp
add
data16
mov
sarl
std
xchg
dec
xlat
test
dec
sub
out
mov
repnz
inc
cs
gs
cmc
lds
enter
aas
pop
adc
mul
loope
loopne
in
pushf
int
xchg
mov
hlt
call
or
push
adc
es
sub
mov
or
aad
cli
lods
inc
icebp
push
dec
aas
xor
jb
pop
and
xchg
fbstp
arpl
fwait
xchg
ljmp
mov
dec
out
mov
lock
add
and
push
pop
cmp
inc
cmp
lock
test
pushf
mov
mov
data16
stos
xchg
rcr
ss
out
cmp
sarb
int
mov
ja
icebp
clc
dec
test
lret
test
xor
mov
sarl
mov
or
pop
rorb
or
adc
jecxz
or
rol
gs
outsb
es
insl
mov
roll
ljmp
add
lods
out
mov
pop
addl
xor
shr
jo
ret
mov
test
repnz
mov
jno
push
ja
push
xchg
icebp
test
xchg
and
adc
cmpsb
rcrl
sbb
mov
out
repz
xchg
test
add
jne
test
sbb
xor
repz
xchg
xchg
xor
jl
pop
fcmovnbe
and
gs
enter
push
inc
inc
insb
stos
or
jecxz
fwait
shl
out
les
sub
add
jae
cmp
jns
xor
rcll
xlat
data16
sub
and
mov
sub
mov
divb
sub
mov
decl
lds
push
mov
pusha
inc
mov
ja
mov
hlt
dec
xchg
fbstp
das
subl
dec
out
das
add
sbb
push
and
shrl
out
jl
test
jb
mov
adcb
xorb
repz
ja
out
enter
adc
mov
out
repz
cmp
push
or
jnp
jmp
aas
mov
mov
popf
xchg
shll
shrl
sub
push
mov
add
mov
mov
repnz
leave
cwtl
loopne
hlt
inc
and
in
inc
dec
outsl
stc
or
stos
fnclex
aaa
cmc
out
cmpsb
or
leave
add
fs
sbb
loopne
fimuls
and
jp
mov
and
cld
xor
mov
jbe
in
push
jge
lret
insb
xchg
daa
mov
push
mov
jl
xchg
popa
xor
xor
or
sub
lea
test
repnz
aas
inc
sub
insl
inc
in
mov
js
lea
aad
jnp
mov
js
sub
xchg
in
cmp
scas
add
test
stos
sub
lods
cmp
scas
or
sbb
mov
add
xchg
insb
xor
in
fcoms
cwtl
pop
adc
sub
sbb
pop
mov
lcall
faddl
sub
daa
xchg
outsb
and
push
lds
inc
ja
mov
mov
fnstenv
mov
jae
push
mov
fdivrs
pop
push
rcrl
rorl
push
sbb
test
ljmp
mov
outsl
jecxz
mov
stc
iret
in
push
repnz
cmp
ss
arpl
cs
out
inc
mov
xor
icebp
cmpsl
or
movsl
xchg
cmc
cmp
loopne
mov
mov
imul
aad
data16
mov
cmp
mov
xlat
les
sub
aad
in
pop
cltd
loopne
adc
into
push
gs
push
push
dec
daa
repz
jecxz
fldcw
ffreep
jmp
mov
imul
sbb
aad
addr16
mov
stos
adc
xchg
pushf
dec
jecxz
jmp
rcrb
icebp
lods
aad
jnp
inc
or
test
jb
sub
dec
aam
iret
je
mov
jecxz
dec
pop
iret
leave
push
lea
push
cwtl
pop
andl
adcl
out
push
mov
inc
rorl
lock
xchg
das
jnp
cltd
mov
sbb
movsl
push
shrl
das
daa
std
or
int
int
test
mov
iret
adcl
lret
sbb
mov
jne
mov
mov
ss
sub
lahf
rcr
into
inc
sub
pop
mov
ret
hlt
xchg
xchg
clc
scas
ja
cmpsb
scas
jae
es
xchg
hlt
xor
xchg
popa
scas
ret
shrl
dec
cld
mov
mov
xchg
pandn
mov
test
or
mov
jmp
frstor
jge
test
cwtl
mov
sbb
or
shll
stc
mov
push
dec
or
repz
sub
xor
add
shlb
mov
lock
orb
adc
mov
pop
dec
dec
iret
roll
xor
roll
jmp
push
add
pop
jns
out
push
movsb
lods
bound
inc
jns
dec
sbb
mov
stc
xchg
loope
lcall
jne
or
jns
test
mov
movsb
xchg
mov
aam
addr16
imul
pusha
fdivrp
data16
ficoml
xchg
je
push
jmp
stos
add
cmpl
push
sub
push
jns
push
xor
jno
aad
xchg
add
insb
adc
cmp
arpl
shl
pop
cmpsl
in
jb
call
ret
adc
fstpl
icebp
jne
jae
ret
lret
inc
jmp
adc
push
dec
mov
mov
movsb
pushf
iret
imul
insb
scas
dec
adc
loope
rcrb
sarb
jbe
xor
wrmsr
pop
hlt
mov
ret
arpl
daa
xchg
inc
push
add
or
gs
xorl
push
iret
push
int3
or
adc
dec
pop
fisubrs
mov
test
aad
in
scas
push
sbb
inc
mov
jp
inc
push
aad
xchg
jbe
push
pop
jge
popa
push
enter
daa
mov
inc
test
jl
mov
cmpsl
push
add
push
xor
movsl
sbb
cmp
ss
dec
sbb
mov
inc
mov
dec
add
cltd
dec
fidivrl
out
insl
pop
adc
mov
loope
push
loop
dec
push
aaa
cmp
fs
inc
mov
rorb
les
cmp
mov
xor
jg
fwait
loop
pop
cmp
mov
push
jl
pop
or
jecxz
lahf
push
sti
push
fsubrl
lea
outsb
mov
popa
addb
fidivs
lea
mov
dec
bound
push
repz
repnz
out
mov
ds
xorl
shll
jno
pop
leave
mov
test
gs
xor
dec
loop
and
xchg
fs
mov
or
push
ss
mov
test
xorl
xor
pop
dec
or
cs
fcompl
cmc
add
xchg
pop
mov
imul
mov
add
adc
cwtl
lods
jae
or
jae
cli
xlat
add
sub
mov
enter
les
je
cltd
gs
aas
rclb
xchg
je
fldenv
sbb
imulb
repz
cmp
movsb
jle
call
or
pop
insb
mov
adc
push
mov
jmp
cmp
add
jg
and
inc
daa
aad
aas
outsb
xor
dec
dec
xor
sub
mov
adc
sbbl
test
fldl
rcr
or
pop
andl
or
pop
mov
sarb
rolb
sarl
imulb
std
mov
aaa
dec
enter
mov
loopne
icebp
cmpsb
fdiv
cld
push
lret
xchg
mov
test
jnp
repnz
shlb
iret
pop
aam
andl
es
insw
lea
clc
popa
cwtl
pop
xchg
xor
shr
popa
xor
lods
andl
push
xchg
sbb
shrl
sarl
xchg
cltd
shll
or
std
jne
fisttpll
or
dec
push
test
jns
jmp
pop
add
mov
mov
ljmp
xor
in
or
arpl
xchg
lahf
mov
repz
dec
repnz
add
jecxz
xor
ja
inc
jno
lea
xchg
loopne
and
push
or
icebp
add
mov
stos
loope
aam
gs
or
xchg
xor
mov
jecxz
mov
cmpsl
mov
mov
mov
add
mov
jle
dec
xor
sbb
fbstp
mov
imul
jne
and
cmp
mov
nop
dec
pop
push
mov
or
and
dec
jnp
hlt
and
and
bound
jno
dec
push
in
iret
xor
or
orl
jae
nop
xchg
push
mov
pop
popf
aaa
fcoml
inc
leave
daa
inc
fcmovb
jg
outsl
sbb
scas
mov
scas
mov
cmp
inc
stc
xchg
shlb
mov
leave
add
hlt
in
andl
jecxz
push
pop
fimull
and
aaa
jae
scas
or
add
or
repz
sbbl
rol
sub
mov
pop
jo
insb
jae
dec
cld
dec
and
bound
movsb
add
pop
jp
mov
cmp
lds
sub
mov
sub
jno
rcrl
insb
lret
or
pop
and
out
in
ss
adc
lahf
pop
cwtl
lds
loope
test
mov
xchg
cmpsb
cmp
sub
xor
js
in
pop
push
fdivl
loope
pop
mov
mov
inc
ds
enter
or
shlb
mov
adcb
inc
add
insb
cmpsl
xor
es
pop
popa
add
pop
mov
jmp
xor
push
xor
aad
outsb
jmp
push
adc
fwait
push
jg
mov
mov
rcr
add
cmp
outsb
xchg
cmc
xchg
int
push
daa
fsubrs
out
testl
xchg
sarl
sbb
add
rorl
out
mov
loop
leave
stc
cmp
das
sahf
adc
in
decl
push
mov
out
sub
xlat
xor
fdivrl
lahf
leave
or
mov
mov
aas
xchg
inc
popa
insb
pop
rorl
imul
fsubs
data16
add
scas
sub
lret
sahf
sub
sbb
xor
out
sti
jae
paddd
jp
nop
mov
aas
xor
pop
sbb
pushf
inc
add
add
xchg
repz
lds
lret
jb
call
mov
and
sub
sbb
jl
cs
inc
inc
xor
aas
or
arpl
je
aam
jecxz
lahf
cmp
aad
pushf
lea
mov
cmp
push
and
addl
js
mov
and
and
inc
iret
ss
pop
das
cmp
jge
mov
xchg
jno
dec
mov
and
scas
pop
and
push
xor
clc
cmpsl
mov
and
icebp
jge
stos
cld
add
and
idivb
rorb
cltd
shlb
imul
sub
call
jecxz
adc
mov
insl
je
sar
pushf
fcomps
jb
sub
leave
shrl
lahf
in
mov
enter
push
adc
popf
ljmp
or
sub
in
sbb
push
shl
fnsave
test
xchg
enter
sub
out
pusha
cmc
rcrl
stos
int3
push
out
sbb
cs
pop
int3
fildl
sub
addr16
sub
or
pop
inc
xor
fildll
mov
testb
pop
or
mov
dec
xor
loop
or
or
sub
fwait
pop
addr16
push
lods
or
add
adc
fucomip
adc
jns
insb
jmp
xchg
jg
clc
mov
iret
or
mov
lcall
roll
jnp
xor
mov
pusha
adc
jle
push
lcall
push
adc
xchg
inc
lahf
xchg
adc
dec
out
xchg
cs
lret
scas
in
push
loop
mov
and
pushf
push
insb
jmp
xor
test
sbb
inc
iret
xchg
adc
and
arpl
inc
pop
dec
mov
jno
repz
push
add
push
mov
inc
dec
xor
fidivrl
push
xchg
ret
cli
xchg
cli
imul
mov
rorb
mov
sbb
aam
std
mov
data16
rolb
orl
sbb
out
aaa
xor
popf
add
jno
int3
fiadds
pop
pop
dec
ja
fidivs
test
adc
jo
sahf
add
sub
mov
insb
outsl
pop
cmp
lods
xchg
sbb
shrl
enter
daa
mov
shll
pop
push
jl
stos
leave
dec
scas
adc
fdivs
fistpl
lahf
js
lds
fdiv
test
push
dec
pop
inc
ficompl
shlb
jp
js
jo
pop
xchg
inc
push
push
scas
ljmp
dec
sbb
xlat
scas
les
adc
movsl
dec
shrb
int3
adcb
cmpsb
subb
push
add
test
xor
pop
mov
dec
jns
or
gs
test
cmc
sub
adc
outsb
dec
mov
jmp
mov
push
jg
push
shlb
shl
mov
in
and
push
clc
imul
jmp
loopne
lret
xor
mov
push
call
test
lods
xor
aad
cmpb
mov
insb
stc
hlt
sbb
fs
arpl
adc
mov
cmp
pop
cmp
out
addr16
add
push
aas
xchg
sub
or
mov
inc
cmc
mov
loopne
push
repz
loopne
sub
add
std
imul
jp
add
pusha
dec
data16
sub
jmp
aam
sub
mov
in
sahf
sub
sti
and
xor
mov
sbb
nop
xchg
push
aaa
dec
inc
in
pop
inc
mov
stos
add
or
add
fadds
xchg
xor
lds
inc
loope
movl
xlat
rclb
andb
pop
sbbb
scas
push
out
inc
pop
cmpsl
scas
aas
lods
divl
dec
cmp
pusha
sbb
xlat
das
push
fmuls
cmpsb
lea
push
mov
sbb
inc
sbb
aam
test
loopne
mov
inc
push
bound
das
sbb
mov
inc
jo
and
lds
rcrl
adc
repnz
xlat
std
decb
sub
iret
lret
cmpsl
lahf
jb
mov
push
repnz
sub
ror
gs
mov
loopne
mov
mov
rcrb
int3
sub
cmpsb
xchg
aam
lock
mov
insl
pop
je
clc
xlat
lods
enter
std
ljmp
loopne
pop
sub
mov
mov
mov
rorl
cld
pop
aaa
add
pop
loopne
out
dec
jmp
insb
in
gs
and
fstpl
xchg
insl
sbb
jae
shll
mov
stos
mov
pop
lahf
xchg
mov
aas
pushl
inc
xor
mov
mov
cli
sbbb
xchg
xchg
and
dec
rolb
ja
jle
dec
and
repnz
lahf
mov
xchg
icebp
fwait
mov
push
push
cmp
add
outsl
add
out
out
rcrl
cmp
shlb
in
jge
xchg
into
adc
jecxz
sub
popf
filds
xchg
and
orb
stos
das
test
cmp
adc
lcall
xor
xchg
in
adc
jmp
or
andl
out
cmc
sbb
push
test
shrb
ficompl
sbb
push
or
jle
mov
in
outsb
mov
iret
repz
mov
adc
movsl
pop
out
sbb
inc
adc
mov
adc
popfw
test
inc
mov
mov
movsl
dec
xchg
sub
scas
js
les
push
jae
push
push
mov
outsl
pop
leave
je
out
insb
push
sbb
icebp
dec
inc
pop
outsl
clc
or
xchg
adc
icebp
leave
bound
inc
sti
mov
movsl
mull
int3
leave
out
pop
js
aam
sbb
sti
jo
in
scas
pop
push
ds
scas
loop
sahf
fistl
push
ret
jbe
sub
rorb
mov
cmp
pop
push
jno
vmptrst
adc
push
lods
stc
pop
xor
jbe
push
lahf
xchg
loop
push
ret
test
push
stos
cli
inc
imul
push
js
mov
pop
shll
mov
add
sub
adcl
xchg
movsb
ds
cli
je
sbb
sub
outsb
sbb
mov
call
jbe
scas
and
sub
push
repz
xchg
lcall
jl
das
pop
fwait
sub
xchg
test
rol
cmp
ret
std
cmpsl
mov
mov
mov
jbe
mov
mov
and
mov
int
cmp
movsb
hlt
sub
sarb
shr
fisttpl
mov
jecxz
fdivl
xor
mov
loop
mov
stc
stos
jo
fs
in
fstl
mul
into
test
cmp
sbb
out
and
ja
push
push
loope
in
popf
push
or
add
test
inc
loopne
push
fistpl
push
iret
adc
mull
imul
jo
add
mov
lods
sub
cmp
xor
test
dec
mov
or
sti
sarl
gs
rclb
mov
sti
push
or
mov
cmpsl
jl
xchg
cmc
push
sbb
shl
movl
sbbb
jns
jmp
dec
cmp
sub
sub
imulb
inc
js
dec
aas
dec
loopne
jb
outsb
push
je
inc
jnp
out
insl
cmp
repz
cmp
lods
dec
mov
fcoms
inc
sub
das
neg
or
stc
out
gs
and
shrl
cmp
xor
ret
mov
adc
mov
sub
lretw
aam
int
sahf
add
mov
pop
sbb
cmpsl
xchg
jne
sub
adc
ret
xor
es
loop
inc
rorl
adc
cld
ljmp
in
les
mov
movb
push
pop
jecxz
cvtdq2ps
add
and
test
mov
mov
jne
push
inc
dec
jbe
ret
test
movb
sahf
sbb
mov
pop
stos
stos
add
out
loop
cmp
pop
or
adc
xor
cmpsb
and
mov
cld
and
mov
ja
sahf
xchg
cmpsl
inc
inc
ss
lock
rol
fwait
mov
popa
jns
pop
cmp
out
into
roll
xchg
push
in
scas
ficoms
es
mov
cwtl
adc
mov
add
das
mov
add
pusha
dec
sarb
shl
jmp
mov
xor
cwtl
out
enter
testb
ss
push
pusha
pop
jno
cmp
les
insb
mov
stc
sub
mov
in
and
adc
xorb
daa
stc
mulps
jp
inc
sbb
xchg
ret
xchg
call
push
inc
int
fcmovu
push
pop
sbb
imul
adcl
sbb
mov
ret
leave
jmp
mov
arpl
dec
inc
pop
rcl
or
push
shr
aaa
mov
aam
xor
rolb
cmp
ds
mov
cld
pop
cmpsl
scas
mov
jg
jo
aas
add
and
lods
push
movsb
cmpsb
push
xchg
push
adc
jbe
sbb
mov
enter
daa
sahf
repnz
cmp
in
jl
out
dec
mov
jno
nop
add
xor
adc
cld
lahf
mov
xlat
push
xchg
fs
push
jmp
fmuls
cmpsb
lds
in
xor
inc
pop
pop
adc
loope
cmp
sub
nop
pop
cmp
adc
hlt
arpl
int3
inc
bound
adc
and
xor
xchg
into
cmpsl
test
jns
rolb
push
jle
lcall
inc
lahf
shrl
mov
addl
sub
add
bound
ret
mov
fsubs
xchg
ja
push
jae
int
jo
fcomps
idivl
add
nop
insb
mov
mov
in
adc
and
xor
enter
sahf
imul
icebp
popa
stc
bound
fs
mov
ss
ret
repnz
jge
insl
cli
imul
addr16
pop
daa
or
pop
mov
cmc
sbb
cmpsb
loopne
outsl
aam
push
roll
in
imul
mov
xor
ds
pop
scas
cmp
jmp
sub
out
je
jl
push
in
je
add
andb
add
gs
xor
dec
add
inc
mov
cmp
inc
data16
and
push
repz
xchg
xchg
mov
cmpsl
push
call
add
repz
adc
test
jmp
shrl
cmp
leave
sub
ljmp
dec
daa
and
jecxz
sbb
fmulp
outsb
lea
cwtl
scas
jmp
sub
pop
movsl
mov
xchg
fstpt
mov
mov
lock
mov
das
repz
pop
push
in
mov
dec
and
aam
sarl
jg
std
dec
pop
aam
mov
cmp
and
icebp
add
lret
inc
popa
popa
mov
aas
lock
mov
sar
daa
pop
sub
push
pop
aam
pop
mov
mov
cmp
insl
sub
es
dec
adc
xchg
das
mov
mov
popa
and
lods
das
inc
mov
jmp
aam
push
loop
aas
btcl
xor
repnz
inc
mov
or
adc
inc
or
sbb
xchg
sub
mov
fisubrl
inc
xor
xchg
das
lret
jb
jp
sar
mov
sub
and
mov
movb
pop
rcrb
inc
inc
ja
inc
mov
or
add
jno
or
jecxz
fwait
ljmp
add
and
jmp
xchg
jns
data16
outsb
sbb
imul
xchg
imul
std
sbb
jp
in
mov
jmp
mov
jmp
mov
mov
lods
pop
and
xchg
out
sti
jmp
mov
pushf
cmp
inc
adc
sub
jl
adc
scas
mov
or
xor
jle
int
in
cmp
adc
sub
ret
xchg
pop
pop
jnp
inc
sub
movhps
int3
and
inc
lds
ficoml
xchg
cs
cmp
imul
scas
sbb
mov
in
repnz
pop
cmpsb
hlt
add
arpl
scas
inc
pusha
cmpsl
aam
or
sub
or
outsb
aaa
outsl
iret
aas
or
adc
add
jo
int3
lahf
and
pop
icebp
sbb
cmpsl
and
jo
lods
aam
lds
je
and
and
xor
out
lcall
enter
daa
popf
xlat
pop
cmp
and
out
fmull
jl
inc
or
push
jae
cmp
lods
push
lahf
aad
lret
clc
xchg
test
mov
stos
inc
xchg
push
cmpsb
dec
jl
in
sbb
sub
pop
dec
cltd
xchg
les
loope
iret
pop
sub
jb
cmp
xchg
jne
jnp
cmpsb
movsl
pusha
jp
ror
je
sbb
mov
add
or
xor
adc
pop
std
aam
sub
jae
lcall
lahf
faddl
in
outsb
ja
cli
adc
pop
adcl
pop
adc
mov
mov
stos
xchg
mov
inc
stos
and
cmpsl
ss
inc
ret
fcomps
push
mov
ds
lret
bound
jp
stc
sbb
loope
sahf
addr16
test
cmp
outsl
sbb
addr16
sbb
fldenv
adcb
int3
pop
ss
ret
cmp
adc
adc
pushf
lods
ret
xor
cmp
in
fimuls
aaa
aad
into
dec
inc
mov
jecxz
clc
loopne
fwait
mov
xor
jge
push
imul
pop
int
lret
dec
push
mov
shrb
lcall
sub
mov
fbstp
fs
das
push
outsb
and
das
orb
fmull
popa
or
js
sbb
sub
cmp
jnp
and
mov
movl
and
and
cs
cli
aad
mov
inc
scas
js
aas
mov
out
dec
sahf
js
je
std
jns
add
jbe
loope
mov
imul
dec
sbbl
pop
lcall
cmp
lock
sub
das
mov
mov
mov
ja
mov
pop
cmp
push
std
repz
scas
push
xor
or
popa
icebp
fldenv
cmc
lret
mov
cltd
mov
mov
test
mov
in
rcl
aad
sub
mov
push
dec
test
or
sub
cmp
and
cmpsb
inc
lret
xchg
mov
or
pop
and
mov
mov
mov
adc
mov
push
dec
push
int3
jb
fstl
nop
add
les
xchg
sarl
rep
mov
scas
xchg
jbe
jmp
xchg
fistpll
push
rcrb
xor
fmuls
pushf
jg
xor
pop
lods
mov
add
pop
clc
test
sahf
imul
inc
sbb
or
enter
and
push
cmp
pop
mov
cmp
push
bound
push
aad
stc
adc
xchg
mov
or
mov
mov
addr16
and
das
lcall
pop
inc
dec
mov
adc
cli
loopne
push
ds
sbbb
dec
in
xchg
sub
repnz
adc
pop
out
lret
sbb
mov
cmp
fiadds
sub
pop
jge
insb
xchg
into
out
xchg
fidivrl
fisubl
in
mov
scas
iret
adc
mov
dec
icebp
pop
pop
xchg
and
inc
xor
fnsave
xchg
mov
pop
clc
xchg
popf
cli
ret
jne
int3
inc
inc
jp
fiaddl
xchg
xor
stos
sbb
jb
imul
mov
dec
xchg
sarb
jp
push
andb
and
arpl
and
or
xchg
or
stos
icebp
add
test
pop
add
xor
movsb
jo
das
outsb
scas
movsb
pop
add
mov
cmp
movsb
mov
stos
push
jge
mov
enter
daa
pushf
inc
loop
mov
stc
jne
inc
je
dec
push
popf
push
push
idivb
push
and
add
hlt
out
in
push
cmp
inc
test
jg
fiadds
mov
jo
add
xchg
pop
mov
sub
xor
loope
xchg
cmp
mov
movsl
addr16
shrb
push
scas
xor
mov
add
or
shll
and
stc
sub
sbbl
xor
leave
outsb
fisubrl
nop
adc
and
in
mov
mov
or
add
mov
mov
mov
add
dec
sub
neg
aad
cli
idiv
outsb
ss
sub
scas
popf
fmull
cwtl
sahf
sahf
or
test
fsubs
outsl
cld
shrl
stc
rorb
mov
daa
mov
dec
shrb
adc
mov
jns
out
ja
cli
iret
inc
pusha
xor
push
fisttpll
cmpsb
adc
cmc
stos
sub
pop
pop
movsl
push
adc
and
imul
rorb
add
xor
or
aas
lods
fstl
sub
jge
mov
mov
dec
ficoms
incb
test
mov
nop
add
hlt
inc
xlat
out
pop
fldcw
ficompl
repz
les
mov
and
add
jns
sahf
fisubrs
pushf
sti
faddl
xlat
cs
xchg
adc
lret
hlt
hlt
inc
leave
cmp
jb
test
dec
adc
fnstcw
adc
inc
in
adc
cwtl
and
adc
adc
xorl
les
jb
mov
movsb
mov
jg
orl
or
add
idiv
xor
std
lcall
cmpsl
fwait
push
es
mov
sahf
cld
fcomps
mov
fbstp
xchg
notl
add
int
movsb
mov
sub
push
pusha
aam
adc
lea
testl
xchg
lods
cmpb
push
iret
push
lods
add
pop
push
mov
jmp
ljmp
cmc
dec
add
sti
lods
cltd
sbb
jecxz
mov
cmpsl
lds
xor
fnsave
mov
test
cli
pop
xchg
mov
stos
jecxz,pn
adc
push
stos
ja
scas
out
or
out
mov
out
out
pop
lock
loop
xor
dec
push
mov
add
xlat
pop
mov
mov
dec
lock
or
add
dec
cmp
test
fcmovne
jno
imul
bound
mov
lods
jmp
in
aas
call
mov
cmp
fs
or
lods
mov
push
push
mov
aaa
cmp
adcl
mov
pop
testl
flds
sbb
mov
xchg
cmp
lret
xchg
aaa
loop
andl
lret
push
jbe
repnz
inc
push
sbb
lds
add
jnp
loop
jle
fildl
adc
sti
iret
outsl
movsl
mov
pop
lret
imul
jl
and
and
popf
and
stos
inc
ret
push
mov
testl
sbb
jl
imul
scas
add
fistl
mov
test
test
aad
push
dec
push
hlt
cwtl
daa
in
fwait
popa
test
scas
out
or
orb
or
jp
int3
jne
xchg
pop
xor
fisubs
mov
movb
dec
mov
push
movsb
inc
pusha
aaa
push
mov
mov
enter
daa
fwait
sub
lock
cmp
dec
fnstenv
lret
xor
loop
rcrb
mov
and
cmp
insb
bound
ljmp
pop
int
and
loope
popa
mov
cmp
icebp
ds
movsl
outsb
mov
test
scas
cmpsl
xchg
mov
mov
aam
xor
inc
fistpl
pop
jmp
pop
sub
lcall
rcr
fistpl
sub
scas
outsb
cmp
movsb
mov
cmp
les
xor
mov
into
jo
mov
sub
mov
imul
nop
incl
lret
hlt
roll
mov
sub
pusha
adc
lods
ljmp
or
outsl
fcomi
mov
stc
xchg
cmp
dec
push
or
ss
cmp
cmp
push
sti
mov
jp
pop
cli
add
cmp
mov
or
adc
sub
call
sbb
cwtl
imul
std
add
inc
mov
lods
les
adc
ret
das
sub
cmp
mov
leave
sti
lea
imul
cmpsb
nop
faddl
dec
pop
xchg
ljmp
les
movsb
repz
xchg
add
test
lods
mov
scas
pop
push
loop
adc
push
std
jmp
cs
test
adc
pop
aas
stos
ss
repz
je
or
and
aam
out
xor
fistpll
mov
cmp
mov
sbb
dec
imul
pop
imulb
test
lock
das
jae
sbb
aad
into
and
loope
shll
mov
ds
movsl
mov
lcall
icebp
xchg
mov
lret
nop
data16
sub
xchg
das
adc
pop
and
ja
push
sub
clc
xchg
das
out
dec
ret
insb
mov
adc
and
clc
jge
xchg
in
mov
aam
addr16
lods
jo
iret
mov
push
lods
mov
push
jae
or
xlat
ss
shrd
cltd
push
or
test
fwait
sti
mov
inc
adc
push
fstpl
jge
in
xor
pop
fistps
pop
mov
mov
data16
outsb
xchg
or
lret
add
decl
pop
mov
xor
xchg
adc
xchg
ret
ret
push
test
outsb
movl
mov
loope
adc
push
jg
mov
mov
je
out
dec
inc
mov
jns
and
in
ret
pop
xor
mov
frstor
or
mov
mov
xchg
repz
dec
stc
sbb
add
jne
add
mov
lahf
fisttps
cmp
or
xchg
jmp
add
xorl
fs
sahf
es
sub
les
stos
or
mov
cli
jnp
mov
jle
rclb
xchg
fistpll
adc
mov
ret
sbbb
repz
dec
scas
and
mov
lods
popf
dec
pop
loope
imul
fisubrl
test
sbb
pop
outsl
imul
scas
addr16
push
mov
icebp
and
or
push
pushl
hlt
jecxz
add
inc
imul
push
sbb
xor
addl
pusha
lods
in
arpl
fiadds
mov
cmp
test
lods
jo
scas
bound
cmp
pop
or
or
jge
inc
mov
mov
sahf
push
cmp
xor
jno
lahf
push
jl
push
ret
mov
push
sbb
push
xor
jge
loope
xor
push
loope
or
push
adc
jnp
cmpsb
shll
in
js
shl
pop
or
push
loope
pusha
pop
sub
push
xlat
cmp
pop
addr16
movsl
jne
sub
pusha
pop
xchg
popl
fscale
sbbb
lock
jmp
add
ss
xor
adc
mov
mov
sub
push
sbb
push
xchg
cs
xchg
adc
pop
lcall
test
xchg
sbbb
jg
jg
mov
cltd
jecxz
inc
dec
xchg
cmp
clc
int
or
stc
idivl
lret
push
rcr
cli
mov
inc
xor
push
push
sahf
push
pop
mov
ds
mov
fs
nop
outsl
mov
add
stc
ds
loopne
subl
decb
jns
loope
xor
push
je
les
xchg
into
hlt
insb
je
cmp
loopne
cltd
and
cltd
rclb
negb
xchg
adc
sub
mov
add
dec
sbb
sti
in
sub
enter
int
in
and
test
mov
gs
pop
add
jle
stos
inc
std
jmp
fstps
hlt
fdivp
mov
dec
xchg
les
jl
sub
enter
loopne
mov
pushf
push
cwtl
mov
mov
or
inc
std
aaa
aas
cmpsw
mov
xchg
xlat
dec
add
je
mov
jecxz
and
ljmp
cwtl
lcall
mov
pop
movsb
andl
xlat
loopne
pop
cltd
pop
mov
lock
or
jg
cmpsl
xchg
dec
mov
sbb
icebp
shl
int
testb
dec
mov
call
movsb
icebp
pop
lahf
leave
cld
cs
mov
mov
scas
or
inc
mov
sub
aam
sbb
ret
sti
cmp
insl
lds
push
clc
cmp
add
cmp
movsb
lods
fldt
enter
jne
icebp
and
dec
int
jl
add
xchg
cmp
xor
and
adc
fldl
add
inc
das
sbb
inc
icebp
rol
shrb
pop
or
out
roll
xchg
dec
in
inc
add
xor
ljmp
mov
mov
mov
or
orb
in
pop
sub
xchg
ja
clc
and
push
sbb
or
jb
fwait
cmpsb
mov
push
add
xchg
sub
loop
insb
jl
jns
add
cwtl
mov
mov
cmc
mov
or
cmp
push
xchg
jp
sbb
fldcw
jb
data16
jne
mov
pusha
push
mov
fildll
cmp
xchg
fists
shr
xlat
adc
loopne
mov
mov
sub
push
sub
and
insb
pop
mov
jle
mov
ja
and
cs
ret
ds
cmp
cli
inc
push
pcmpeqw
jno
cmpsb
jo
popf
outsl
std
inc
push
rcr
ficompl
dec
xchg
aaa
dec
jo
cmpsl
or
scas
lret
push
jge
add
or
sarb
popa
mov
jo
xor
arpl
xchg
or
clc
cmp
aaa
imul
or
lods
stos
add
adc
dec
test
pop
xchg
mov
jge
ret
mov
xlat
scas
inc
ret
mov
cmp
popa
aam
pop
arpl
pushf
mov
xchg
jge
in
enter
daa
cltd
xchg
fidivrl
cmp
ss
sub
cld
mov
push
incl
aas
and
mov
fists
dec
subb
shrl
cmpsb
push
xchg
sub
mov
addr16
pop
dec
xchg
in
cmp
aam
adc
cmp
dec
movsl
movsl
jl
mov
gs
subb
mov
daa
es
in
pop
xor
in
jbe
loopne
cltd
jmp
pop
pop
xorl
push
in
pop
xchg
fdivl
pop
insl
sub
clc
outsb
add
out
loopne
xorb
jg
aas
mov
mov
pop
and
call
int
outsl
sbb
idivl
les
shll
es
sbb
mov
xor
cmp
lock
cmc
in
fldenv
std
adc
rcll
pop
insl
mov
mov
mov
cmp
push
mov
popa
or
pop
sbb
xlat
mov
push
loopne
push
ret
sbb
leave
nop
pop
imul
pop
aas
add
inc
jbe
xchg
int
lods
xchg
and
sbb
cmp
mov
mov
cmc
sti
jmp
cmp
scas
leave
repz
bound
nop
xchg
sti
inc
dec
fstl
pop
inc
adc
std
les
js
sbb
jmp
add
call
cmpb
mov
mov
pushf
cld
mov
jmp
or
jl
inc
aad
add
inc
sbb
int3
aas
add
outsb
push
dec
jp
shlb
mov
inc
nop
or
in
and
add
dec
out
mov
ljmp
inc
pop
sti
fldt
xchg
pusha
pop
cmp
enter
pop
lock
fwait
das
xor
in
inc
bound
mov
xchg
test
mov
fwait
adc
cmpsl
cwtl
lahf
ljmp
cmp
pop
hlt
lret
outsb
xchg
sahf
mov
imul
mov
popa
loop
rcrb
enter
lahf
test
xor
es
sbb
insl
lods
sarb
je
adc
jb
add
lods
inc
mov
ja
and
add
lret
push
sub
pop
setne
lar
cmpb
adc
xor
test
bound
sbb
pop
adc
sbb
lock
pop
fcoml
stos
inc
push
out
xor
int3
xchg
xchg
out
addb
js
dec
sarb
pushf
xchg
or
inc
xor
sbb
xchg
enter
adc
popa
ja
xor
leave
add
inc
shrb
or
test
fwait
aad
cli
push
lds
add
in
cli
lret
out
or
and
in
ret
cmp
mov
cmpl
or
dec
addr16
jmp
xorl
sub
call
jne
jns
pusha
in
mov
jecxz
mov
jmp
cwtl
sub
in
inc
lcall
test
cmp
and
insb
inc
sbb
jle
xchg
adc
adc
negb
mov
push
ret
add
jo
out
pop
les
push
imul
movsl
push
inc
add
ficoml
jg
xchg
mov
out
and
fildll
les
shlb
jecxz
aam
mov
leave
mov
xor
xor
arpl
mov
xor
mov
insl
aaa
sub
or
adc
mov
ss
fstps
mov
pop
lds
pop
jo
add
and
outsb
and
xchg
lahf
or
movsb
call
jnp
jbe
inc
push
jge
push
push
daa
cwtl
or
cmp
mov
jl
jl
dec
es
push
loop
loopne
xor
mov
lahf
jo
es
xchg
xchg
test
stos
andb
push
fs
cmpsb
xlat
push
in
lahf
rcrl
adc
mov
stc
pushf
loope
lret
jl
sbb
dec
mov
sub
adcl
rclb
cmc
mov
les
cmpb
lret
add
add
testb
aam
cmp
jg
shrb
sub
sub
pop
add
push
lcall
addr16
xchg
js
cmp
cmp
std
cli
adc
mov
sub
add
mov
bound
mov
jo
and
mov
push
adc
int
mov
fadd
fnstcw
stc
cmp
pushf
rorl
inc
mov
mov
sbb
sbb
sahf
xchg
sbb
dec
dec
adc
outsl
js
lcall
mov
adc
pop
cmp
cmp
lods
cld
test
ja
pop
cli
fwait
mov
xor
push
inc
cmp
cs
or
cmp
mov
push
fneni(8087
mov
popf
dec
adc
xchg
adc
pop
sahf
add
adc
shll
xlat
jns
sub
lret
test
sti
lcall
movsl
and
dec
cmp
dec
inc
and
movsl
les
repz
xor
sub
ljmp
pop
push
xchg
adc
xchg
pushf
cmpsl
mov
jno
fists
aad
rol
inc
xor
lods
push
jb
jns
dec
icebp
mov
jnp
dec
inc
mov
lock
sti
lea
dec
sub
fildll
aam
sub
push
fistpl
out
fists
lock
addr16
inc
mov
loop,pn
rcll
pop
jp
ss
xor
xchg
ficompl
mov
or
insb
cld
test
fisttpll
mov
xor
add
pop
pop
andb
shl
inc
fsubrl
test
inc
aam
jbe
ret
sbb
es
ds
insl
xchg
pop
stos
clc
scas
push
aam
test
mov
lods
mov
pusha
mov
mov
mov
mov
pmuludq
loope
dec
clc
mov
stc
mov
test
xor
fwait
ret
sub
rcrl
ret
adc
sbb
xor
outsl
arpl
mov
ja
xor
out
xchg
mov
xchg
fsts
sbb
cli
ljmp
rdmsr
shll
xor
pop
mov
xchg
stc
mov
pop
lahf
jg
ja
in
cs
mov
xchg
fwait
add
xchg
push
mov
inc
fdiv
out
out
mov
jns
cmpsb
jmp
xchg
inc
or
mov
or
or
sub
add
shlb
cwtl
icebp
mov
xchg
aad
stos
int3
push
pusha
xchg
push
fbld
inc
xchg
test
jmp
arpl
adc
pop
inc
adc
fiadds
push
sbb
stos
bound
xchg
insb
lods
cld
sbb
rclb
test
jg
xchg
iret
jmp
pop
ret
add
mulb
inc
push
repz
ss
sub
xchg
popf
mov
push
mov
fcmovb
clc
add
std
ljmp
nop
pop
push
push
or
rolb
mov
pop
rol
leave
sub
jnp
les
mov
das
fmull
outsb
inc
push
aaa
jmp
xor
int3
and
mov
int3
jo
out
scas
lcall
and
pop
aam
jae
cwtl
push
cmp
xor
iret
or
xchg
pusha
hlt
daa
xchg
or
jno
movsl
jmp
dec
xchg
pop
inc
push
lds
aas
xor
dec
push
dec
push
pop
mov
test
jbe
add
loop,pt
pop
fstpt
js
push
jg
leave
sub
push
in
and
mov
and
push
cmpl
pop
ljmp
pop
enter
push
and
sbb
push
adc
cld
mov
pop
out
sbb
fwait
ljmp
push
push
pop
push
fwait
and
mov
sub
xchg
mov
test
lret
jl
mov
mov
fcmovne
and
fdivr
push
adc
int
fidivs
idivl
outsb
in
mov
cmpsb
push
sbb
sahf
cmp
test
mov
xlat
outsl
push
cltd
call
stc
arpl
xor
rclb
outsb
in
les
popf
insl
in
cmp
repnz
jbe
xor
into
shlb
inc
mov
or
mov
into
popf
sub
cmc
fcomi
loopne
dec
inc
pop
mull
shrl
add
leave
out
adc
and
int3
mov
pusha
dec
fidivrs
cld
push
lret
xlat
mov
dec
mov
popa
sahf
imul
cmc
imul
lods
inc
rclb
fwait
scas
je
ss
xchg
fld
and
outsl
adc
xchg
or
clc
cmp
cltd
fnstcw
pop
sbb
test
pushf
push
scas
jmp
pop
cs
out
aad
add
aaa
fdivrl
inc
mov
jb
mov
movsb
je
adc
jecxz
xor
repz
pop
lea
pop
inc
mov
lahf
lds
sub
stos
fildl
sahf
stos
inc
adc
mov
lret
push
loopne
mov
ret
dec
pop
jge
fstl
or
cmp
jecxz
jecxz
scas
or
dec
rcl
mov
pop
mov
lahf
jo
rol
sub
sub
mov
xor
insl
jp
adc
ljmp
ljmp
cld
lods
sbb
xlat
mov
ficoms
push
fisttps
rcpps
pop
jns
cltd
xor
xchg
pop
leave
pop
mov
test
loope
xchg
stos
jge
ljmp
and
out
cli
sbb
and
mov
decl
push
clc
xor
add
or
sbb
popf
lock
add
sti
xchg
push
dec
pop
push
and
sub
dec
scas
push
ss
out
or
fwait
xor
sbbl
out
add
mov
repnz
bound
outsl
in
adc
xchg
xchg
fstp
mov
mulb
jo
jne
mulb
xchg
mov
push
mov
or
repnz
cmpps
jno
cwtl
pusha
and
cld
xchg
pop
into
ds
cs
mov
fdivl
mov
pop
insl
mov
and
mov
jnp
mov
jle
sub
adc
cltd
aam
mov
jae
inc
jne
jle
xchg
mov
popf
in
or
inc
loope,pt
fidivl
aaa
xchg
cmp
fistps
sbb
imul
mov
repz
pop
jb
mov
pop
sub
leave
mov
xor
arpl
cmpsl
xor
xor
or
sub
pop
or
add
add
push
push
int3
or
int3
pop
pop
xor
das
lds
cmp
loop
scas
fimuls
and
sbb
or
pop
stos
push
mov
mov
outsl
cmc
arpl
sbb
daa
xchg
mov
cmp
mov
jl
stc
xchg
dec
add
cmp
test
cltd
xor
jmp
jbe
push
sub
xchg
inc
jo
out
cmpsb
mov
js
mov
or
xchg
sbb
into
shrl
int3
mov
lods
push
jmp
jo
loope
xchg
or
popl
insl
mov
int3
lods
adc
fadds
and
fwait
jns
mov
push
lock
ds
pop
cltd
out
lcall
adc
xor
scas
outsb
sub
fcoml
les
jo
iret
cli
mov
adc
mov
lcall
push
mov
cmp
divl
cmc
lret
add
idivl
mov
outsb
scas
sbb
xchg
sahf
fsubl
cmp
rclb
inc
loop
dec
cmpsl
stc
sbb
add
adc
sbb
cmp
in
xor
out
pop
scas
cli
add
mov
or
dec
adcb
les
loopne
add
inc
fwait
in
mov
fmuls
mov
jmp
lods
inc
mov
cmp
jle
xlat
notl
shll
int3
inc
jbe
clc
xor
gs
and
cli
andl
push
sbb
stc
out
mov
jp
arpl
out
cmpsb
jno
sarb
sbb
adc
jecxz
std
lret
rolb
jnp
std
cmp
jne
loopne
movsl
insb
fcom
jne
xchg
inc
imul
loop
mov
sub
dec
fistpll
mov
idiv
cmp
xchg
pushl
cmpl
dec
lcall
pushf
fiadds
xchg
icebp
lock
cmpsb
pushf
das
into
sub
mov
inc
xor
shll
inc
inc
notb
push
mov
jl
outsb
bound
loop
cld
ficompl
mov
pop
int
ss
outsl
rclb
dec
loop
es
ret
aaa
cmpsb
test
insl
popa
cmp
xor
lret
or
fidivrl
lods
xchg
imul
xchg
jns
adc
lock
mov
jnp
outsb
cs
pop
ja
cmpb
push
and
frstor
sub
test
jmp
cmp
fisubs
pop
or
stos
adc
imul
pop
pushf
cld
xchg
addr16
mov
ljmp
sbbl
call
in
fiaddl
addr16
pop
adc
out
jne
mov
scas
gs
inc
sub
call
imul
fisubl
sub
bound
fcmovnu
in
cmp
in
dec
mov
fdivp
mov
imul
jp
mov
mov
jp
mov
ja
dec
repnz
jne
sahf
pop
pusha
mov
pop
clc
xchg
sub
jmp
stc
insb
cmp
add
pop
pushf
outsb
sub
push
xor
push
xchg
loope
stos
dec
shlb
insb
addb
push
pusha
ret
jle
out
in
adc
adc
outsl
gs
pop
pop
adc
fcmovne
jae
out
mov
mov
fistpl
rol
aam
mov
or
sbb
sbb
scas
push
imul
cltd
mov
mov
lods
mov
cmc
hlt
pop
xor
inc
js
scas
or
in
jge
test
mov
cmc
xchg
int3
mull
pop
pop
dec
xchg
aaa
fidivs
jge
fbld
jo
lock
mov
popa
icebp
cmp
loopne
movsb
mov
push
fsubs
sbb
dec
sahf
enter
daa
xchg
xor
jno
mov
jl
cmc
sbb
push
mov
xor
test
lahf
int
add
add
jne
adc
push
or
ss
mov
sub
push
and
js
mov
pop
inc
ror
push
lock
in
and
stc
ds
push
movsl
cwtl
sbb
shlb
gs
ja
loope
add
add
or
xor
xchg
subb
sub
scas
inc
lcall
rcr
fnstsw
lahf
sub
insl
mov
adc
fbld
push
mov
xchg
call
mov
scas
stc
and
jmp
push
sbb
xor
divl
ret
adc
sbb
xor
or
sahf
jg
in
test
jns
xor
cmpsl
in
adc
fs
stc
rorl
lds
or
or
aad
and
cwtl
cmp
call
in
mov
xor
cmp
inc
push
or
jo
cmc
sbb
nop
loopne
rolb
pop
xor
pop
jbe
scas
push
clc
adc
push
testb
jnp
mov
add
push
xlat
ss
imulb
add
adc
aaa
mov
sti
cmpsl
jno,pt
cmp
gs
nop
pop
inc
dec
pop
pop
adc
lock
xor
les
test
sbb
fdivrp
jl
imul
out
ss
test
xor
cs
outsl
aad
xchg
mov
aas
adc
fisttpll
xor
je
adc
stc
sub
gs
inc
inc
add
mov
sbb
in
stos
js
in
jae
enter
and
sub
and
pop
mov
pop
sub
and
pop
sarl
es
push
movsb
dec
xchg
adc
mov
or
and
sub
jecxz
in
ret
mov
pop
fisttpll
xchg
adc
lea
and
icebp
repnz
stos
mov
insl
dec
test
pusha
repz
ds
fsubl
mov
into
mov
and
cmc
and
xchg
stos
xchg
movups
and
cltd
sahf
sbb
test
mov
push
imul
into
mov
xchg
pop
shll
pop
mov
mov
out
rclb
xchg
scas
fistps
dec
out
iret
xor
xor
mov
xor
out
and
pop
xchg
inc
jo
sub
imul
xchg
aaa
dec
xchg
cli
dec
inc
sbb
dec
or
enter
pop
push
push
push
xchg
pop
clc
adc
test
bound
loopne
lods
in
jmp
push
mov
xchg
xor
les
jmp
cmc
push
jmp
addr16
jno
jp
insl
mov
out
movsb
mov
out
mov
jne
sbb
pusha
pop
sahf
xchg
les
xchg
decb
jmp
aam
orl
mov
mov
xchg
stos
mov
std
out
insb
in
mov
push
in
mov
adc
iret
or
ret
and
pop
inc
inc
mov
cwtl
jae
xor
jne
test
push
cmp
test
fcompl
mov
out
shrl
xchg
ret
fistpll
push
loopne
hlt
rclb
cli
repnz
leave
xchg
int3
push
hlt
movsl
cmpl
jnp
cmp
lahf
sbb
mov
lret
add
or
pop
jge
ficomps
loop
lds
jo
adc
and
pop
cmp
push
push
daa
lea
jge
pop
mov
daa
xchg
sbb
cmp
xchg
jno
lock
dec
loop
and
outsb
fldl
xor
pop
jg
lahf
in
sbb
rorl
test
xlat
jnp
inc
mov
cmpsb
jecxz
mov
cmp
js
add
pop
xchg
js
push
loope
dec
jl
sub
dec
ds
movsl
lahf
nop
mov
popl
jmp
sbb
in
add
retw
fisttpl
inc
shll
pop
or
ja
cld
dec
and
imul
adc
mov
dec
sub
scas
dec
outsb
repnz
cmp
push
jg
cmp
mov
shrb
and
fisubl
int
mov
fsubrs
dec
xchg
lret
mov
mov
mov
loope
sahf
and
add
xchg
and
loop
lods
push
stc
mov
fs
jb
adc
xor
data16
cmp
jecxz
mov
cli
addr16
dec
xor
pop
cmp
dec
inc
or
jl
into
inc
addb
and
adc
call
mov
movb
jb
data16
out
lods
adc
sub
sub
repnz
mov
push
mov
pop
add
hlt
nop
fldenv
inc
outsl
shr
addr16
les
sub
xchg
push
lock
or
mov
sti
cmp
adc
stos
dec
jmp
addr16
add
push
inc
mov
out
jb
scas
adc
je
mov
jecxz
test
cld
rcrl
pop
and
mov
adc
mov
mov
add
adc
imul
mov
stos
in
lock
pop
das
mov
es
pop
rcrb
into
sbb
notb
sbb
std
sarb
dec
orb
cmpsl
xchg
out
and
icebp
push
cmp
or
mov
lods
mov
cld
arpl
sarb
sub
test
jge
push
repz
movsl
push
aaa
insl
das
scas
fs
fwait
mov
xchg
movsl
ljmp
or
bound
lock
inc
cmpsl
and
jo
lret
jo
add
push
test
out
and
icebp
push
cmpsl
xchg
inc
dec
test
idiv
xchg
and
inc
fs
ror
pop
mov
pop
pop
es
out
jp
out
and
xchg
cmc
aad
add
inc
sahf
xor
push
mov
lret
add
andl
xchg
adc
ja
add
mov
inc
mov
and
and
fwait
rclb
add
mov
push
out
arpl
bound
mov
push
xchg
sub
mov
or
or
lock
in
jp
add
mov
pop
bound
mov
cmp
or
xchg
rcrl
jmp
nop
xor
gs
lock
lret
push
adc
leave
cmp
out
das
insb
pop
mov
ljmp
les
jae
sub
pop
fistpl
ret
cmp
mov
mov
push
cmp
arpl
xchg
inc
mov
out
xchg
inc
sbb
sbb
cltd
js
lret
stos
push
scas
sbb
sub
inc
in
shrb
mov
push
jo
leave
or
jmp
inc
jle
rorb
aaa
outsl
aaa
in
xchg
movsl
scas
lret
add
icebp
push
pop
lods
mov
rol
in
pop
jo
dec
leave
scas
jnp
cmp
jecxz
fistpll
xor
mov
lahf
dec
iret
push
jbe
nop
jbe
popa
lret
push
dec
enter
daa
xchg
and
ljmp
imul
push
push
fs
sbb
andl
scas
xchg
lahf
or
jl
cmpsb
ljmp
mov
push
push
cmpsb
data16
in
and
js
adc
push
ret
adc
sub
int3
les
mov
xor
pop
imul
sbbb
pop
add
adc
xor
jb
or
pop
add
sub
data16
sbb
sub
pop
inc
fdivl
and
cmp
adc
adc
adc
mov
gs
xchg
mov
rcrb
or
adc
imul
push
pop
insl
lret
dec
sar
cmp
jl
sahf
lds
stos
test
loop
xor
or
outsl
roll
mov
aas
jns
mov
push
push
ss
add
out
inc
popa
cli
lcall
cmp
and
into
sub
loopne
movsl
pop
jae
xor
mov
int3
pushf
adc
lea
popa
scas
fisubs
cmp
call
inc
pop
sub
xlat
sahf
mov
or
mov
bound
mov
or
sbb
add
fstps
and
jl
sbb
pop
sbb
test
mov
pop
jmp
out
pushf
mov
jmp
into
mov
aad
mov
inc
mov
dec
jb
mov
mov
xchg
pop
pop
jecxz
lods
mov
rcll
mov
mov
les
mov
xchg
fildl
fcomps
dec
mov
lock
sub
mov
in
and
sbb
and
pop
inc
xchg
std
jns
push
cmpsl
xchg
mov
or
aas
iret
in
cld
pop
dec
test
or
mov
dec
mov
mov
and
sbb
push
aam
xchg
jb
in
fsubs
sub
add
xchg
in
cmp
and
andl
nop
mov
mov
sub
push
dec
pop
xchg
iret
rcr
add
ja,pt
jle
leave
mov
xchg
xchg
push
push
push
fstl
iret
out
xchg
mov
shll
jo
pop
or
stos
fisubs
out
xchg
test
mov
sahf
inc
xor
decb
inc
sub
xor
lea
xchg
mov
cmp
in
test
push
jne
jnp
test
dec
ja
or
push
mov
push
xchg
mov
mov
stos
mov
outsl
int3
out
inc
loop
bound
in
sbb
jae
cmpsb
or
ror
test
dec
dec
mov
pop
ret
jmp
repnz
jp,pn
inc
pop
mov
sbb
mov
xchg
ret
dec
fwait
add
pusha
mov
ljmp
jle
xchg
pop
mov
xlat
out
or
jo
jle
add
push
or
add
fmulp
jnp
cmc
jg
xchg
leave
cwtl
in
pop
hlt
adc
cmp
ret
mov
inc
mov
jg
push
sti
jl
push
cmp
fiaddl
xchg
push
pop
inc
imul
or
outsb
ss
ror
mov
cmpsb
cltd
mov
hlt
cmp
arpl
test
inc
add
ljmp
dec
xchg
or
cltd
dec
int3
mov
push
ficomps
cmp
je
xorl
inc
into
and
mov
jmp
inc
jbe
lds
es
sub
enter
daa
xchg
mov
cmp
data16
loope
dec
shrb
xor
push
repnz
lahf
sub
sbb
mov
movsl
push
insl
jno
inc
lods
jg
cmpsb
jmp
jnp
js
mov
pop
add
aaa
push
cmp
loope
imul
cmp
sbb
cld
add
movsl
lods
test
sarb
push
sahf
incb
movsl
sbb
pop
mov
xlat
dec
mov
lret
jle
pop
stos
push
mov
pop
cli
pop
cmp
dec
mov
push
mov
outsb
mov
sbb
xor
pop
jg
in
xorl
out
fistps
push
and
mov
fsubs
sub
jae
mov
hlt
stos
sub
mov
fsubrl
test
pop
xor
mov
les
loop
fsubl
fs
push
inc
ss
pop
cmpsb
cmp
fsts
sar
int
adc
add
inc
or
jle
into
or
popf
cmc
jo
push
loopne
scas
cmc
pop
xchg
or
mov
icebp
imul
je
sub
lret
inc
push
cmp
and
xlat
xrelease
mov
js
mov
jmp
gs
iret
lcall
std
loopne
xchg
cld
stc
xchg
repnz
mov
imul
mov
or
adc
pushf
test
sbb
aad
aad
inc
xlat
cmpsb
aas
pop
sbb
jb
add
mov
xorb
add
lea
insb
adc
xor
mov
je
dec
scas
aad
stos
pop
mov
adc
mov
andb
es
mov
inc
mov
insb
add
negb
inc
dec
js
inc
cmpsl
xchg
adc
icebp
push
data16
xchg
pop
mov
dec
xor
pop
cmp
jnp
loop
add
jb
out
aam
arpl
ret
jae
stc
es
xchg
jne
std
mov
clc
adc
mov
xchg
sbb
popa
ss
lods
xor
mov
lea
jno
xor
push
es
jp
cs
roll
mov
inc
mov
mov
add
push
sub
clc
std
test
cmp
cwtl
sbb
stos
inc
pop
mov
adc
jmp
out
addl
and
mov
mov
sub
and
fcompl
mov
ja
es
outsb
xchg
inc
inc
loope
addr16
push
adc
push
cmp
add
imul
bound
lcall
sbb
xchg
and
repz
pop
xchg
mov
push
inc
lret
or
mov
and
mov
xor
dec
jle
fbstp
icebp
cmp
sbb
fbld
mov
dec
jmp
and
cmpsl
push
out
ret
push
jns
mov
xchg
ficompl
stos
adc
pop
and
jns
cs
sarl
push
out
shl
adc
mov
iret
and
int3
repz
icebp
sbbl
jae
loop
mov
push
xor
mov
xchg
push
sbb
push
inc
scas
loop
push
push
mov
mov
in
lret
mov
stc
divb
idivb
hlt
xchg
arpl
xchg
or
pop
nop
or
shrb
jae
arpl
or
pop
cmpsl
int3
mov
les
fisttpll
loopne
mov
and
mov
cmp
mov
jbe
xchg
lds
ljmp
xchg
lret
sub
aam
sbb
add
jl
sub
loop
push
pop
dec
mov
cmpsb
sti
add
lock
cmp
dec
mov
add
inc
cmp
xchg
cmpsb
insb
mov
scas
jmp
aaa
push
gs
inc
lods
ds
fwait
dec
cmp
or
ds
lret
jo
mov
rcl
adc
pop
jmp
add
inc
sbb
pop
scas
add
insl
pop
xor
add
pop
rcl
push
sub
cld
pop
jns
dec
lcall
dec
fmull
adc
outsb
sbb
popa
adc
dec
xchg
sarl
int3
mov
je
jge
cmp
and
fwait
push
and
mov
ficoms
jmp
lret
push
shrl
sbb
call
sahf
or
cld
xor
or
loop
ret
lods
jb
fs
pushf
fdivs
das
dec
pop
cmp
aam
xor
cli
add
fdivrs
idivb
push
scas
or
outsb
into
out
addr16
cmc
aaa
sub
loopne
lret
mov
adc
push
imul
icebp
adc
test
iret
cmp
jl
xor
sub
push
and
jecxz
jo
arpl
mov
dec
ss
push
add
in
inc
test
dec
and
mov
xor
stc
in
push
sbb
jnp
jg
js
push
pop
dec
mov
adc
popa
sbb
and
jns
fcomps
inc
repnz
jb
jns
dec
xor
je
stc
adc
movb
inc
cwtl
sub
sub
mov
cltd
dec
cltd
ss
mov
fsubr
inc
aas
iret
sub
das
sub
mov
sti
das
mov
sarl
in
fdivr
pop
test
jae
mov
nop
out
mov
in
and
mov
jp
out
pop
mov
add
mov
pop
jnp
shlb
test
aam
xchg
ret
add
es
insl
in
sbb
xchg
bound
popa
dec
cmp
mov
mov
call
push
add
jge
ret
or
test
xchg
outsl
mov
in
push
mov
xchg
rcrl
pop
jb
rcl
or
pop
pop
xor
stos
mov
jns
xchg
lret
add
push
shll
sbb
mov
xor
push
lcall
add
pop
mov
jle
dec
popa
xor
inc
js
mov
fwait
dec
fidivl
push
fstl
or
add
bound
xchg
push
in
out
xchg
outsl
pop
movzbl
xor
or
cmp
lock
mov
in
mov
mov
fsts
pusha
rclb
fdivrl
jmp
lock
dec
out
in
bound
jnp
mov
stos
xchg
insb
cltd
imul
fxch
xchg
je
test
test
xor
mov
sub
out
inc
mov
es
fildll
popf
into
les
push
cmp
push
fisubrl
push
or
test
push
cld
dec
or
mov
dec
mov
hlt
rcll
arpl
dec
inc
xchg
ss
mov
hlt
aaa
and
push
add
mov
pop
cmp
das
fisubs
sbb
jo
fs
sbb
test
pushf
fdivr
cmp
pop
movsb
inc
das
dec
push
arpl
cli
jbe
loope
jge
lea
jo
ss
nop
test
pop
sub
jl
dec
sbb
faddl
push
cli
mov
xor
mov
leave
push
pop
testb
repnz
push
add
repz
out
xchg
sbb
xlat
sub
js
mov
pop
cmp
push
inc
mov
sub
inc
mov
mov
popf
movsl
mov
imul
mov
push
mov
push
push
add
pop
insl
xor
out
push
cli
ljmp
push
sub
clc
test
push
cld
inc
fdivl
xor
mov
hlt
outsb
jle
cs
data16
jg
mov
mov
movsb
mov
test
movsb
and
push
sub
int
out
scas
fcomps
fwait
pop
lret
lock
sub
imul
add
repnz
outsl
jo
adc
loopne
sbb
fs
dec
push
adc
mov
cmp
iret
mov
cmpsb
cli
xor
xor
cmpsl
sahf
or
xchg
or
rolb
cmc
insb
repnz
sti
je
rorb
adc
and
pop
out
push
aaa
xor
push
stc
movsb
data16
mov
cltd
insl
push
xlat
jno
cmp
inc
and
mov
jae
sti
adc
es
ljmp
nop
inc
xchg
out
xor
inc
inc
mov
aas
jno
mov
popa
rclb
in
pop
call
testl
adc
imul
jmp
fistpll
aad
dec
scas
inc
or
popa
mov
jbe
jmp
test
lds
push
adc
testb
and
pop
mov
or
test
fcmovnbe
pop
cmp
inc
cmp
lock
mov
pop
mov
xchg
sub
or
mulb
jno
std
outsb
je
dec
outsb
lahf
andb
sbb
icebp
ljmp
lret
push
ret
ss
pop
xchg
mov
pushf
out
fcoms
pop
js
push
rorb
cmpsb
pop
aam
cld
xor
xchg
mov
test
clc
xchg
cs
xchg
fwait
daa
mov
aas
pop
cmp
jge
paddsb
fstps
lahf
sub
pop
pop
mov
fisttpll
mov
test
aam
xchg
std
dec
sbb
fbstp
shll
mov
or
stos
stos
mov
out
scas
mov
xchg
adc
hlt
jmp
popf
xor
xchg
or
xor
pop
xchg
shll
dec
xor
mov
ja
pop
cmpsl
dec
push
orb
test
fwait
jl
sbbl
add
imul
mov
push
jns
fmul
in
push
cmpsb
xchg
mov
aam
mov
dec
push
addr16
jne
jp
push
and
xchg
mov
xor
inc
mov
jne
jb
pusha
pop
jnp
fistps
or
jge
push
mov
mov
out
lea
and
fdivrl
stos
cli
sub
add
cltd
jnp
outsb
mov
cld
inc
stos
in
sahf
mov
mov
xchg
iret
jecxz
pop
ret
sub
rclb
jae
jne
push
inc
and
popf
cmc
dec
call
inc
mov
jl
pop
push
cmpsb
xchg
popf
je
sbb
mov
xchg
pop
push
inc
push
and
lahf
dec
or
sbb
and
xor
inc
mov
pushf
or
inc
outsb
or
loope
in
jno
mov
int3
jns
pusha
pop
push
dec
stos
lds
ss
xchg
ljmp
das
pop
fidivrl
push
xlat
mov
push
mov
sub
inc
sahf
mov
adc
enter
daa
popl
dec
jno
cmp
jl
inc
xchg
dec
or
pop
arpl
es
mov
test
into
push
sbb
cmpsb
jb
jb
mov
adc
shll
push
fmuls
loope
sahf
pop
sub
mov
loopne
gs
movsl
ret
ror
xchg
movsb
sbb
push
sub
sbb
pop
add
adc
adc
adc
ss
pop
jne
sub
jnp
ja
ds
fs
out
sub
lea
addb
pushf
mov
ja
mov
das
mov
add
inc
push
sub
pop
fcoms
divl
or
adc
xchg
ja
push
sbb
test
fdivs
dec
mov
adc
jae
stc
sbb
fsubl
sbb
out
lret
ss
jbe
mov
out
and
jg
xchg
inc
cmp
rol
or
mov
mov
inc
cmc
lds
loopne,pt
inc
out
pop
out
negb
imul
or
popf
inc
and
call
outsb
cmp
lock
xlat
mov
fildll
mov
sbb
mov
cwtl
paddd
insb
sub
dec
xchg
ret
into
faddl
jns
repz
sbb
xchg
and
jmp
int3
jbe
mov
adc
dec
pushf
stos
push
jnp
out
cs
leave
rcl
popfw
repz
sub
aas
cmp
mov
imul
jecxz
fs
or
push
lea
cwtl
mov
and
jns
loopne
or
lahf
mov
fiadds
or
cmc
mov
mov
imul
clc
rcrl
dec
mulb
push
std
adc
jbe
cmpsl
mov
ja
roll
fdivr
pop
int3
sbb
les
mov
scas
lea
jae
out
xchg
dec
jb
pop
stos
mov
aam
or
and
es
imull
loope
clc
ret
xchg
loopne
mov
lock
shll
pop
lods
je
jg
dec
jo
mov
inc
jne
push
mov
xchg
dec
jg
add
roll
call
sarl
push
jbe
pop
fnsave
insb
fwait
test
std
flds
ret
sarl
dec
pop
mov
pop
stos
lcall
xchg
pop
addl
incl
sub
hlt
or
cs
xor
push
mov
sub
pushf
dec
xchg
push
ficomps
loopne
ja
mov
push
inc
cmpsb
and
xor
stos
xor
push
and
iret
in
mov
dec
out
mov
inc
mov
in
js
xchg
or
call
xor
dec
cmp
jp
insb
dec
mov
fadds
mov
test
daa
xorl
dec
mov
jle
sub
je
xchg
xchg
xchg
inc
and
jg
hlt
mov
and
push
jg
stos
insl
test
popa
inc
cld
insb
outsl
dec
es
je
jle
cmpsb
and
xchg
adc
mov
xchg
insl
addb
jae
dec
inc
push
pop
arpl
push
ss
iret
fimull
in
xchg
hlt
movsb
insb
sbb
push
mov
scas
or
mov
xor
inc
fptan
repnz
aaa
leave
pop
in
in
hlt
addr16
jmp
call
repnz
add
aaa
mov
add
nop
pop
xchg
mov
fsubrp
imul
nop
mov
jo
test
and
or
movsb
push
push
push
add
adc
jle
enter
daa
mov
fstpt
insl
adc
xchg
jl
or
jl
testb
push
pop
xor
ror
lahf
cmpsb
pop
cld
push
lds
adc
cltd
dec
push
inc
call
inc
in
movsl
data16
add
pop
add
ljmp
dec
aaa
sub
pop
cmpb
idivl
mov
push
movsl
leave
mov
shlb
push
cmp
int
test
sub
xor
xor
pusha
mov
pop
inc
pushf
mov
pop
divb
cmp
xchg
out
fmull
push
add
inc
mov
adc
pushf
sbb
jg
addl
fldenv
mov
cmpsl
and
add
int
data16
cmovne
imull
mov
shr
shl
aad
aas
jle
sbb
add
hlt
cli
inc
test
pop
push
outsl
cs
sahf
loop
stos
cmp
shlb
sbb
pop
xor
ss
fnstsw
cmp
lds
xchg
out
cmpsl
dec
cli
cltd
jnp
xor
push
or
jecxz
cmc
mov
or
cwtl
js
push
mov
shrl
adc
mulb
sub
jb
ss
lods
jg
jne
invd
xlat
out
mov
fwait
mov
and
pop
sti
jo
mov
gs
imul
loope
lret
jns
shlb
dec
repz
call
leave
inc
call
cmc
out
test
push
int3
adc
mov
cs
push
inc
inc
inc
sbb
aas
fidivl
mov
je
pop
push
jecxz
mov
out
les
push
mov
call
mov
pop
push
mov
inc
aam
push
lock
cltd
dec
das
popa
or
and
and
int
test
cmp
test
sar
mov
loope
cmpsl
lea
icebp
jb
cs
xor
jmp
xor
and
pop
jl
mov
mov
push
shrb
gs
sub
push
aam
out
ret
scas
cmp
mov
push
insl
cltd
fs
std
je
xchg
pop
loop
ljmp
cwtl
lods
fistps
mov
sbb
xlat
and
xchg
idivl
rsm
hlt
cmpsb
add
daa
jae
pop
iret
pop
test
cs
push
cmp
fstpl
aas
test
mov
rcrl
aam
rcl
add
jnp
stos
mov
jne
inc
xchg
lahf
iret
call
jmp
aam
or
hlt
mov
das
iret
and
jb
pop
in
into
lret
ja
popf
dec
cmp
push
inc
cmp
mov
ljmp
jb
mov
cmc
out
popf
addr16
jns
push
and
push
aas
sbb
cltd
jo
mov
inc
or
addr16
jns
jp
aaa
mov
enter
fstpl
mov
pop
inc
dec
or
jne
test
xchg
sub
fistps
sti
out
imul
xchg
push
fcmovnb
xorl
out
sub
repz
push
adc
and
push
fidivl
enter
inc
cmp
out
in
inc
adc
cltd
iret
mov
sbb
pop
int
pop
inc
fdivs
in
into
insb
icebp
push
lret
popf
inc
verw
test
ds
gs
xchg
dec
stc
inc
sbb
divl
gs
mov
rcl
mov
push
xor
mov
inc
je
leave
shlb
or
inc
nop
cmpsl
addr16
mov
cmp
or
xchg
add
lods
int3
dec
das
loopne
xor
fimuls
popf
jb
dec
xor
and
out
jl
mov
loope
mov
push
gs
jbe
je
jge
int
enter
daa
lea
cmp
mov
dec
jmp
mov
xor
pop
jo
lahf
lds
push
cwtl
aad
test
fs
xlat
inc
ja
cmpsb
js
xor
js
mov
aas
or
mov
sub
sub
ds
imul
jg
jns
fnstenv
xlat
sbb
or
jecxz
lcall
sub
push
pop
jne
int3
lcall
or
xor
hlt
and
aam
adc
mov
pop
jg
jb
mov
mov
mov
shlb
rolb
xor
int
js
fmul
jge
imull
sbbl
mov
loop
sub
jnp
xchg
iret
pop
test
jle
xor
adc
loop
pusha
std
stc
mov
ljmp
mov
out
ror
out
lods
int3
cli
int3
mov
sarb
sahf
js
daa
insb
ror
jnp
fprem1
push
xchg
loopne
add
in
lods
mov
imul
xor
mov
div
lods
data16
xlat
cs
cmpsb
sub
ret
fsubr
cmp
pop
sub
push
pop
gs
mov
dec
push
scas
imul
or
fstpl
std
repz
mov
push
call
je
jnp
sbb
ss
xor
add
pushf
and
aad
imul
pop
or
aas
jns
mov
pop
pop
dec
push
lock
je
and
jecxz
pop
mov
lea
cmp
mov
das
adc
orl
add
fistpl
jl
loopne
adc
pop
aad
lock
push
out
das
movsl
mov
scas
mov
daa
rcll
mul
jge
jmp
insl
std
arpl
lcall
imul
dec
je
cld
pop
add
lret
mov
sub
mov
add
test
daa
hlt
rolb
push
mov
inc
js
aam
pop
mov
cmp
sbb
cmp
xchg
pop
pop
ss
test
dec
imul
cmp
dec
and
insl
push
xchg
wbinvd
outsb
rolb
sbb
cmpsl
test
pop
lahf
mov
jg
push
cld
out
mov
test
or
xchg
dec
shrl
in
or
stos
js
mov
xchg
out
add
mov
xor
or
nop
xor
shll
xchg
cld
lock
gs
pop
test
fnsave
add
sub
aam
or
data16
or
mov
frstor
mov
mov
out
jl
cmp
scas
xchg
jns
subb
stos
cmpsb
pop
mov
insb
xchg
outsl
mov
inc
jp,pn
mov
mov
pop
jae
or
push
dec
in
clc
shll
and
pusha
xor
mov
xchg
xchg
jbe
jmp
sbb
lea
cli
and
mov
into
sub
push
cli
and
jne
jnp
lret
cmpsl
jle
dec
push
in
test
jecxz
add
mov
add
jecxz
jecxz
sub
into
rclb
lea
push
sub
loopne
inc
xor
mov
xchg
mov
insl
mov
mov
scas
rcl
adc
push
insb
shrb
mov
cwtl
aad
leave
dec
sbb
hlt
std
in
arpl
inc
xchg
xor
ja
movsl
aaa
push
les
add
lods
or
lret
cmc
jp
fidivs
fld
sahf
out
jo
cmc
pusha
scas
xchg
sub
call
clc
shlb
outsl
or
mov
add
pop
aaa
pushf
daa
mov
xchg
cmp
mov
ljmp
outsb
lcall
stos
push
and
sub
lahf
in
xor
fstpl
push
das
xor
inc
push
sub
in
jae
js
movsb
inc
pop
jle
xlat
push
lret
je
mov
mov
sbbb
cmp
cmc
lds
pop
xchg
cmp
sbb
cwtd
add
pop
dec
xor
popa
jmp
xchg
xchg
mov
pop
hlt
movsb
cmpsl
lcall
cs
jmp
sub
cmp
out
adc
rolb
mov
mov
arpl
mov
and
mov
pop
pop
int
insl
adc
test
imul
sub
rcrl
stos
mov
sub
sahf
cmp
test
outsl
in
scas
and
sub
jp
inc
cwtl
push
outsl
push
adc
cld
mov
cmp
mov
aaa
dec
cli
jns
xor
aam
cmp
inc
or
dec
sub
sbb
loopne
test
adc
fistl
add
pop
data16
cld
lods
dec
pop
cmp
jmp
xchg
mov
cli
and
sti
into
sbb
jbe
add
lea
dec
mov
loop
pop
xchg
mov
pop
inc
xchg
call
xchg
outsb
add
ss
repz
jne
into
jns
adc
mov
stos
ja
jmp
xchg
push
aad
jmp
inc
aas
sbb
jb
dec
test
add
arpl
add
pop
adc
jnp
xchg
cmpsb
push
cwtl
aam
and
inc
sub
movsl
repz
xor
pop
pop
xor
inc
loop
push
lock
push
xor
test
jecxz
mov
ljmp
insb
inc
roll
add
cs
push
std
or
fbld
insb
cld
insb
icebp
and
and
mov
or
adc
lahf
mov
test
in
jmp
mov
hlt
pushf
cli
rcl
je
sub
xchg
aam
and
ret
int
adc
mov
push
repnz
jae
lcall
outsb
popa
rolb
mov
pop
je
pop
and
push
dec
rorl
jmp
add
cmpsl
test
ret
outsl
mov
adc
push
mov
jecxz
test
repnz
fistpl
adc
mov
sub
cmp
cmp
add
cmp
filds
push
or
add
cmpsl
jecxz
xchg
pop
xor
push
mov
inc
imul
or
shll
lock
push
or
testl
pop
pop
mov
jns
push
pop
in
enter
arpl
aam
imul
addr16
jmp
lods
jp
ljmp
xor
mov
jne
and
rcr
fcmovnb
in
imul
push
adcl
jae
shll
or
int3
inc
and
dec
inc
jnp
sbb
adc
adc
inc
icebp
iret
pop
stos
push
nop
cld
jmp
inc
out
rcll
jae
je
push
push
jecxz
popf
xchg
pop
sti
push
mov
fisubl
test
stc
or
fwait
imul
scas
xor
icebp
push
pop
int
rolb
leave
bnd
push
leave
shlb
hlt
dec
sub
arpl
das
jo
inc
push
sbb
in
aaa
fst
jmp
add
sub
and
test
lds
int3
xchg
scas
jae
xchg
jnp
test
ljmp
push
out
mov
jb
ficoms
daa
enter
daa
mov
xchg
jno
push
mov
push
imul
mov
lahf
add
or
sbb
test
cli
and
xchg
xor
dec
in
pop
jno
js
push
fstl
mov
cs
loope
xor
sub
out
cmp
mov
sbb
shlb
stos
test
sub
popf
xor
popf
mov
sub
cld
pop
jae
jns
mov
mov
fmull
jle
outsb
insl
jmp
adc
in
push
enter
repnz
enter
fsubrs
and
mov
push
fadds
inc
imull
xchg
shll
dec
sbb
mov
test
daa
sub
mov
psubb
mov
mov
lahf
adc
fcoml
cmp
mov
inc
out
inc
cli
xor
in
xor
pop
sub
or
repz
loope
mov
pop
imul
imul
out
add
sbb
mov
lods
xor
movsb
cmp
lds
xlat
lods
ljmp
subb
in
gs
sti
jge
aad
cltd
dec
add
nop
mov
or
lods
ja
sbb
repz
repz
ret
xchg
xor
xchg
sbb
pop
cmpsl
stc
jb
arpl
mov
fistps
scas
fisubrl
out
stos
aad
lret
xchg
and
aas
mov
and
mov
cld
push
xchg
jno
adc
pop
cli
nop
stc
clc
arpl
mov
nop
js
cmp
std
dec
sbb
aad
mov
push
inc
imul
les
arpl
mov
inc
jb
and
pop
dec
rcll
int
std
mov
dec
dec
push
lcall
lahf
mov
icebp
divl
cld
mov
mov
orb
mov
cmp
mov
adc
sbb
cmpsl
lret
xor
push
aam
cmp
es
cmp
clc
scas
mov
cmp
mov
sub
push
mov
or
and
and
insb
or
aas
pop
lods
cltd
les
test
mov
mov
sub
xchg
mov
rcr
cmp
popa
cmp
sahf
sub
je
out
add
jl
jle
sub
or
or
outsl
arpl
mov
mov
cmp
ret
adc
ja
popa
repnz
adc
pushf
or
or
fs
out
loope
cmp
test
in
mov
mov
rorl
xor
andl
sbb
shll
dec
jo
mov
cmp
pop
dec
mov
das
jne
mov
cld
mov
cmp
int3
jmp
mov
enter
sbb
add
sub
frstor
add
and
repnz
xor
in
push
add
cli
inc
jae
mov
cmp
pop
jb
cltd
inc
stc
push
push
jae
pop
ficoml
adc
xchg
sbb
mov
fcmovu
and
xchg
push
into
jbe
lods
aam
imul
mov
push
cmpsb
loopne
shlb
sub
ds
leave
aaa
rcll
hlt
xchg
movb
push
arpl
in
xor
aaa
pushf
popa
or
add
jle
int3
adc
push
push
fidivs
add
lods
movsl
xor
mov
scas
push
ljmp
mov
rorb
jbe
sbb
jge
adc
daa
mov
cmp
cmp
mov
jl
jae
dec
cmp
insl
push
dec
push
fidivs
sub
xor
push
adc
mov
lds
inc
and
push
cmpsb
add
in
inc
xchg
jnp
dec
xchg
hlt
pop
cld
les
push
inc
fwait
loope
jno
sub
test
loope
jg
adc
jae
in
cltd
rclb
lea
orb
sbb
enter
jo
dec
mov
jecxz
sahf
pop
loop
out
sub
aas
pop
pop
repnz
nop
push
push
in
fdivl
mov
sbb
in
adc
or
or
mov
sahf
dec
mov
sub
push
cmp
into
fdivr
lahf
inc
imull
hlt
lret
repz
mov
gs
sbb
jp
addb
xor
add
loop
mov
imul
adc
push
ss
mov
iret
ret
jbe
mov
pop
out
xlat
and
gs
pop
xor
or
or
into
and
ret
cmc
test
loopne
xor
or
mov
adc
or
icebp
adc
data16
add
in
inc
je
lods
sbb
xor
sti
sub
xlat
jmp
fwait
sub
scas
leave
mov
shlb
sti
sub
add
mov
cwtl
lea
outsb
mov
inc
sub
sahf
sbb
incb
repz
sub
call
icebp
pusha
xor
xor
fistl
cld
cmp
mov
jmp
mov
cs
adc
aad
bswap
inc
scas
dec
fnstcw
push
xchg
movsb
jb
insb
sub
je
jae
jecxz
vshufps
outsb
lea
dec
cwtl
dec
adc
mov
sbb
mov
stos
stc
adc
or
out
leave
xlat
lods
inc
lock
lock
pop
das
inc
frstor
mov
cld
gs
shl
xor
std
pop
movsb
fisttpl
push
sti
cmpsl
mov
push
mov
into
sub
cld
fimuls
mov
out
add
mov
jmp
mov
xor
cmpsl
sub
push
pop
aam
test
xor
insl
xor
sub
mov
popa
out
cmp
adc
mov
imul
jl
es
add
in
cltd
sti
xchg
xchg
test
pop
inc
mov
or
inc
push
imul
pop
jns
xchg
push
loop
inc
das
xchg
xor
movsl
stos
inc
or
out
add
aad
xchg
aad
lcall
pop
enter
fdivl
popa
push
mov
cmp
lret
fadd
pop
fsts
ja
push
jecxz
push
es
inc
cltd
imul
fwait
xchg
out
add
push
mov
int
inc
arpl
sbb
bound
call
xchg
cwtl
stos
push
mov
sbb
mov
das
adc
addr16
insb
mov
mov
stos
adc
adc
pusha
add
fistps
cmp
xchg
nop
jmp
jge
cwtl
subl
xor
sbb
push
mov
and
loopne
insb
xchg
jnp
or
jle
jmp
in
cmp
iret
sbb
lods
jne
test
rcrb
jl
popf
fistpll
pop
push
mov
int
lea
cmpsl
mov
sbb
push
imul
test
push
in
push
sub
mov
rorl
xchg
xor
leave
scas
es
fidivs
inc
pushf
xchg
or
test
cmp
pop
jbe
or
pushf
incb
lahf
sbb
int3
sti
xchg
sbb
ficomps
push
lds
sbb
mov
push
or
cmp
sti
movsb
or
test
xchg
xchg
jge
lock
dec
or
insb
fildll
jl
pop
dec
dec
cmpsl
and
adc
fisubrs
pop
and
movsb
lahf
inc
xor
push
in
fs
nop
add
mov
int
test
in
sub
ss
cmp
stos
push
adc
stc
aam
sub
testb
icebp
fdivrl
aaa
dec
stc
movsl
in
push
shr
sub
jecxz
pop
dec
lahf
sbb
in
ja
push
repnz
cmpsb
jo
pop
or
pop
jno
les
pop
push
or
sub
rolb
pop
add
popf
jg
pop
aaa
mov
test
jge
xchg
sub
sahf
push
cmp
movsl
hlt
fdivs
inc
mov
shl
mov
icebp
sbb
stos
test
outsl
cmpsl
js
mov
jle
in
sub
gs
add
mov
ss
xor
mov
push
cli
cwtl
cmp
sarb
sub
into
pop
pop
insb
cmc
outsl
and
pop
test
cmp
cmpsb
adc
xchg
mov
lds
cmp
sub
pushw
pop
fwait
mov
sti
fildl
xor
int
mov
inc
sbb
fld
shll
push
mov
xchg
mov
rcrb
push
mov
jo
fstps
pusha
sub
push
xor
lods
push
dec
jmp
sub
lods
sti
sub
adc
pop
aas
cmc
shl
jb
orl
lods
pushl
or
sbb
dec
sbbb
jb
mov
push
subl
loopne
sbb
jae
insb
cmp
sbb
lock
mov
mov
mov
fisubs
xor
xor
nop
div
mov
std
push
jns
dec
movsb
insb
cmpsl
mov
adc
add
pop
loope
or
lret
pop
cmp
mov
cwtl
push
mov
add
pop
push
adc
rorb
leave
sub
mov
jne
pop
ret
jp
jae
inc
movsb
ja
sbb
js
and
outsb
xchg
pop
pop
cmp
popa
add
fisubs
sbbb
sbb
jo
jl
flds
data16
out
xor
in
cmpsl
movsl
mov
imul
sbb
bound
mov
pop
sbb
xchg
rorl
xchg
stos
xor
push
xchg
add
push
add
cli
sub
mov
jo
call
mov
mov
cmp
xchg
and
ja
int3
orb
xchg
inc
xor
sub
cmpsl
cmp
cmc
xlat
test
pushf
jo
out
clc
push
mov
jns
lods
stos
in
or
mov
in
mov
sub
or
jp
mov
dec
mov
sbb
or
push
xchg
pushf
lds
xchg
loop
push
jmp
dec
dec
jne
ds
test
push
lcall
push
popf
jae
lret
stos
pop
push
xor
mov
stos
test
in
xchg
adc
mov
cs
loopne
and
mov
push
cltd
ja
popf
push
push
push
xor
xchg
mov
pusha
imul
xchg
scas
pop
lods
andnps
adc
xlat
push
push
mov
in
loope
and
negl
mov
loope
or
arpl
je
push
inc
popl
fists
out
pop
pop
mov
aad
mov
hlt
push
jo
lock
adc
cmp
mov
push
fildl
jbe
jnp
jge
mov
enter
daa
mov
jno
ret
lahf
pop
iret
dec
push
inc
lock
adc
out
movsl
jno
and
jo
pusha
lods
push
mov
cld
test
pop
in
push
inc
in
cmpsb
pop
daa
cmp
js
aad
pop
jp
push
push
nop
dec
loope
pop
or
cmp
cmp
shl
pop
cmpsb
frstor
loop
mov
ret
subb
sbb
pop
cmp
aaa
bound
in
je
imul
mov
rolb
sbb
push
mov
lahf
fmull
push
outsb
xchg
mov
adc
ds
sub
pop
sub
mov
test
push
inc
xorb
sub
fdivs
xlat
imul
stc
cs
xor
jnp
fmull
scas
gs
movb
mov
mov
psrad
imul
fwait
shl
movlps
aaa
xchg
cmpsl
js
out
xchg
lret
out
xor
adc
or
into
into
ljmp
loopne
push
popf
pop
enter
int3
mov
mov
add
or
cmp
or
imul
mov
cmpsb
push
xlat
sti
mov
pcmpgtw
xor
dec
sub
ds
push
pop
dec
fsincos
mov
adc
fdiv
inc
nop
pop
xchg
jp
popf
sbb
into
fadd
out
xor
lcall
pushf
push
ds
jmp
mov
pminub
aad
mov
in
dec
aas
xchg
push
into
jb
iret
decl
ja
je
idiv
jecxz
popa
icebp
and
lea
dec
insl
cwtl
rolb
mov
dec
rorl
add
dec
fsub
call
pop
jg
sub
rclb
das
add
enter
fwait
and
sbb
idivb
fistl
dec
inc
xchg
mov
jl
jl
xor
push
int
inc
mov
xchg
clc
mov
jnp
mov
jo
outsb
shlb
add
sub
cmpsb
loop
inc
xorl
push
adc
add
xabort
add
xchg
cltd
imul
popa
sbb
enter
enter
xchg
mov
ja
mov
inc
dec
pmulhuw
cmp
js
int3
cltd
imul
inc
mov
pinsrw
ret
push
inc
test
push
enter
sbb
mov
subb
fbld
add
icebp
mov
pop
sub
add
testb
sbb
mov
inc
test
in
dec
mov
dec
in
push
pop
inc
movl
mov
cwtl
ljmp
notl
add
dec
ja
clc
adc
pusha
lret
add
sub
jmp
or
in
jp
mov
push
mov
mov
dec
pop
rolb
sbb
sub
and
fists
setb
insb
xchg
adc
or
out
fsts
sub
mov
push
or
stos
xchg
scas
push
and
adcl
loop
jg
adc
mov
sbb
inc
adc
int3
mov
fsubrl
pop
pop
stos
sub
sbb
or
mov
push
pop
out
popf
sub
pushf
je
scas
cwtl
cltd
xor
push
out
sbb
and
insb
scas
rolb
repnz
mov
aaa
enter
mov
push
arpl
push
incl
scas
cmp
push
pushf
sbb
fldcw
xchg
or
mov
lcall
push
and
pusha
adc
stc
jo
in
in
scas
out
sub
lods
dec
cmp
push
push
movsb
and
scas
jbe
fadds
enter
daa
xchg
bound
rorb
leave
jl
mov
dec
test
imul
push
test
incb
mov
jg
push
mov
fs
es
inc
roll
in
cmpsb
mov
in
testb
sar
pop
mov
les
daa
pop
loop
xchg
push
mov
jge,pt
push
movsl
cli
sbb
mov
roll
addb
addl
push
sub
ret
sahf
jecxz
dec
adc
outsl
add
lcall
data16
sub
daa
outsb
stc
mov
sbbb
jg
cmp
sbb
stos
mov
xor
jmp
faddl
inc
lods
or
fwait
xchg
add
imull
lods
je
adc
fmull
jnp
sahf
imul
out
xor
mov
loop
out
stc
rol
xor
mov
ss
popf
cmp
mov
movsl
cli
incb
xor
in
cmp
cmc
jmp
jno
int
gs
std
inc
and
add
fistps
jmp
imul
jmp
add
add
lods
ror
ja
lods
fiaddl
xlat
test
push
mov
adc
or
and
xchg
loope
clc
subb
mov
mov
fnstenv
hlt
les
loop
repz
std
xchg
cmp
ficoml
call
outsb
loopne
pop
dec
aam
adc
mov
add
jmp
mov
jb,pn
popa
aad
aaa
pushf
inc
add
aas
xor
jb
dec
je
fsub
inc
je
mov
int3
and
lea
pop
lds
add
sbbl
sub
pop
mov
dec
inc
test
or
fbld
shlb
and
shlb
pop
cmc
rcl
out
idivb
sar
inc
mov
cmpsl
xchg
sub
push
sub
pop
lea
mov
test
mov
pop
les
and
repz
sub
push
dec
ret
cwtl
into
stc
es
fisttpll
clc
lcall
ljmp
pop
lods
int3
adc
push
aaa
and
pop
or
inc
lcall
mov
in
mov
clc
pop
push
mov
ja
push
popa
test
sbb
scas
clc
jne
pop
push
cmc
shll
adcb
and
stos
adc
aaa
out
sub
pop
add
popf
loopne
cli
or
xor
mov
icebp
les
push
test
iret
ds
or
lea
cmc
jecxz
pop
inc
mov
pminub
cmp
lcall
mov
bound
test
scas
sbb
jmp
stc
xchg
test
and
pop
mov
movsl
addr16
aam
sbb
mov
inc
clc
mov
clc
pop
and
inc
jmp
pusha
rorb
xchg
xchg
mov
ret
cmc
adc
or
adc
leave
jecxz
push
dec
xchg
scas
stos
add
xchg
fldt
jle
pop
fsubp
pop
dec
dec
adc
iret
cmp
inc
ret
jne
dec
addr16
inc
and
lods
pop
push
pop
leave
xor
pop
dec
fwait
inc
or
fisubl
aaa
add
xchg
inc
imul
and
ret
rorb
stos
repnz
leave
adc
icebp
hlt
mov
sub
inc
movsl
icebp
lret
or
fnstcw
pop
aaa
cwtl
int3
inc
or
mov
add
int3
mov
xor
fiadds
fnstcw
jo
daa
aad
into
popf
out
pop
add
jge
push
movsb
scas
jbe
push
jns
out
jbe
test
and
daa
xchg
dec
jno
or
sbb
push
fdivr
sbb
and
dec
lock
pop
push
int3
test
icebp
ret
pusha
data16
or
std
lret
data16
clc
icebp
ljmp
in
add
cmp
andl
mov
adcb
add
mov
out
xchg
jmp
sub
adc
in
xor
push
bound
fsub
dec
and
or
adc
je
out
jg
jo
mov
lcall
xchg
mov
outsb
and
rcrb
inc
dec
pop
int
loop
fsub
cmp
addr16
ret
lret
xadd
lea
sbb
or
or
addl
sub
sub
sahf
pop
sbb
mov
adc
mov
mov
gs
push
cli
xor
xor
xchg
or
loopne
into
mov
adc
loopne
sub
aad
jb
stos
imul
adc
int3
dec
jb
lods
mov
lea
out
sub
out
jne
mov
test
sti
call
cmp
or
ljmp
fldcw
loope
sub
or
fiadds
sbbb
cmp
in
adc
add
pushf
lods
sbb
mov
fcmovbe
in
adc
les
shrb
fisttpl
test
gs
test
pop
or
insl
cld
lock
ja
sub
das
xorl
cmpsb
insb
ja
push
push
adc
ljmp
mov
mov
repz
jmp
inc
test
push
std
hlt
ds
dec
cmp
mov
sahf
in
icebp
sub
cld
mov
lret
stos
jnp
mov
push
mov
lcall
scas
scas
rol
cmpl
push
into
mov
lods
xlat
ret
daa
iret
and
iret
daa
xchg
insl
rorl
mov
sti
ret
dec
stos
sub
pop
stos
mov
test
aas
cpuid
das
roll
sahf
pop
sbb
or
and
sbb
test
ja
xchg
lret
lea
pop
mov
in
out
lea
xchg
xlat
push
dec
add
pop
inc
lcall
es
or
pop
xor
push
jl
add
cmpsb
dec
ss
pop
lds
ja
dec
fmuls
dec
pop
inc
cmc
daa
fwait
or
add
push
sbb
fsubrp
mov
mov
adc
out
xchg
cmpsb
clc
call
pop
in
inc
push
xchg
aam
push
mov
add
mov
sbb
addr16
cmc
jp
loope
mov
xchg
movsb
mov
addr16
adc
mov
aas
pusha
insl
adc
fists
xor
and
xor
jmp
out
mov
sub
add
jb
xchg
stos
js
andb
mov
insb
xor
xchg
sbb
lds
cltd
cmc
xchg
ret
arpl
enter
mov
jae
jmp
push
loop
sbb
orb
ficompl
and
add
subb
cmpsb
scas
xchg
arpl
sbb
aam
mov
cs
hlt
or
faddl
cmpsl
cld
or
xchg
outsl
or
push
icebp
insb
or
ja
add
decb
pop
ds
xor
lds
stos
jo
jbe
scas
lods
adc
and
mov
cmp
outsl
movsb
cmp
mov
out
mov
enter
cmp
or
cmp
or
push
popa
xor
and
dec
arpl
test
mov
mov
push
lahf
mov
les
push
fcoml
lea
or
nop
fcomps
jae
cmpsl
pop
aaa
inc
mov
xor
leave
xchg
les
insb
movsb
movsl
or
rclb
into
sar
popa
andb
imul
xchg
mov
sbb
adc
pop
insl
daa
xor
push
mov
inc
jmp
stc
jnp
outsb
mov
loopne,pn
in
jg
jg
mov
fidivrl
mov
adcb
mov
imul
jno
es
enter
xor
inc
enter
imul
sahf
scas
les
test
popf
xor
jl
outsl
add
pop
out
inc
sbb
adc
stos
cld
ss
add
cmp
cwtl
push
out
insl
cmp
sbb
in
mov
cmp
clc
push
or
into
jge
mov
mov
cmp
pop
and
or
pop
dec
xchg
adc
xchg
xchg
xor
loopne
rcll
lods
sahf
add
cmp
frstor
sub
push
outsl
mov
out
test
xchg
sbb
sub
ret
add
inc
mov
fldenv
les
jecxz
xchg
ret
jbe
sbb
aas
inc
lods
insb
leave
outsb
pop
mov
daa
adc
lds
cmp
addb
pop
aas
jno
out
jb
jmp
fdivl
and
sub
decl
icebp
rclb
ss
or
movb
popf
pop
push
fcmovnbe
jo
pop
clc
inc
xchg
inc
xchg
mov
ja
popf
adc
mov
mov
jg
test
testb
test
fwait
pop
dec
dec
aaa
test
cmpsl
test
sbb
add
cmp
sbb
inc
mov
imul
inc
rcrb
xlat
mov
mov
adc
es
out
insl
mov
xchg
sub
push
mov
inc
popa
popa
xor
mov
push
mov
pusha
push
inc
stc
pushf
mwait
jl
mov
loopne
push
std
lahf
test
jo
mov
xchg
or
lods
jecxz
mov
push
adc
shl
shl
jp
pop
arpl
lock
lock
sub
sbb
sub
cld
sbb
xor
mov
mov
dec
mov
dec
popf
mov
fidivs
rcll
inc
mov
xor
dec
fwait
adc
and
or
out
je
insb
bound
jns
sbb
add
xchg
xchg
and
or
mov
push
pop
int3
addr16
mov
mov
or
mov
or
dec
add
sub
mov
fs
cs
jne
sbb
je
and
adc
sub
aas
jp
push
jge
stos
jmp
add
insb
popf
dec
out
jnp
enter
add
fstl
sbb
test
clc
setp
adc
int
inc
cmp
lea
insl
int
movsl
ljmp
std
arpl
inc
sub
stos
fimull
out
pop
inc
ficompl
ljmp
jmp
mov
rolb
mov
xor
je
add
push
dec
fisubl
mov
cld
or
dec
aaa
jecxz
push
lcall
xchg
push
push
int3
xchg
jno
pop
insl
cmp
fimuls
dec
xchg
jo
fsubs
scas
mov
in
jmp
loop
les
push
pop
push
jae
and
movsl
xor
daa
test
cmpb
push
sub
jl
push
add
sahf
stos
add
and
fcoms
lahf
fsubrl
push
add
js
cmp
dec
inc
jle
mov
in
stos
or
scas
inc
push
pop
jbe
pusha
push
xchg
aaa
loope
loopne
sub
cltd
icebp
cmp
mov
in
movups
xor
xchg
sbb
cmpsl
lods
xor
sub
jne
sbbl
clc
push
pop
in
add
cltd
lret
adc
daa
sub
popf
outsb
and
in
ret
subb
xorb
mull
and
jmp
push
dec
out
int
sub
fcomps
test
in
xor
ds
or
xlat
arpl
mov
ret
sbb
sub
mov
ss
outsl
in
fucom
out
stc
clc
mov
push
adc
pop
ss
fcomp
cmp
xchg
cmp
out
pop
stos
cli
xchg
xchg
xor
ret
adc
jbe
aaa
or
push
ljmp
out
push
loopne
pop
lret
pop
inc
cmp
ds
imul
fs
ret
push
test
cmp
cmpsb
xlat
gs
pop
sub
xchg
cmc
in
push
dec
and
inc
sub
xor
xchg
test
pop
inc
lahf
popa
std
or
mov
jl
inc
xchg
xchg
sbb
mov
add
inc
dec
adc
push
pushf
pushf
add
jmp
fisubrl
jae
pop
inc
push
test
adc
jb
add
dec
cmp
lock
jecxz
leave
ffree
sub
jns
lret
cwtl
lods
shlb
cmc
fisttps
fistl
scas
sbbl
fcmovu
add
jl
fwait
insl
pop
inc
sbb
mov
jl
push
mov
inc
nop
mov
or
test
mov
lock
inc
in
dec
xor
add
cmpl
icebp
fsubrs
cld
loopne
test
adc
mov
in
aad
shrb
sub
test
insb
es
inc
pushf
jmp
aad
or
lahf
jge
clc
dec
fwait
inc
xchg
xchg
mov
push
lods
or
sbb
xchg
jno
push
and
rorb
pusha
dec
add
movsl
push
cltd
inc
std
and
mov
dec
std
push
xlat
dec
cli
fstp
cld
xchg
sub
movsl
sbb
movsl
sarl
scas
jns
push
inc
stos
fucomip
dec
out
push
aad
xchg
gs
aad
cmp
pop
call
mov
jle
cmp
xor
pop
xchg
mov
dec
cmc
jmp
pop
cmp
pop
ja
fildll
inc
and
or
pusha
cmpsl
fwait
mov
ficompl
and
or
arpl
sahf
out
push
sahf
lds
lahf
movsb
jns
or
in
or
xchg
jb
or
or
dec
or
testl
shll
mov
imul
ss
out
pusha
mov
add
jmp
aas
in
mov
xchg
pop
push
sub
jp
pusha
push
add
rol
and
jne
or
dec
jle
out
in
jecxz
adc
scas
jae
push
cs
ret
lds
jbe
inc
inc
push
jae
xor
push
inc
int3
push
stos
jb
fidivrl
add
sbb
aam
imul
cmp
push
mov
mov
andl
js
sub
mov
inc
cs
scas
outsl
cld
or
or
in
or
sbb
std
int3
jge
adc
pushf
data16
in
fisttpl
jo
dec
out
imul
and
cmp
movsb
dec
and
xchg
jbe
aad
jge
fdivl
daa
adcl
jno
jle
jl
dec
leave
dec
inc
inc
or
xorl
and
or
inc
out
outsl
jp
push
push
jns
inc
or
cmp
cmp
xchg
mov
push
lcall
inc
add
stos
inc
fnstsw
or
or
addl
test
in
cmp
push
pop
repz
pop
imul
dec
add
addr16
fsub
scas
subl
inc
scas
outsb
test
adc
lds
outsb
mov
sub
mov
mov
mov
and
xchg
dec
loope
int
and
sbb
hlt
lret
int3
shrl
mov
dec
sbb
dec
fwait
sahf
cmc
mov
pop
imul
xchg
pop
push
ret
sahf
arpl
push
movsb
pop
stc
scas
add
fs
adc
lcall
cmp
mov
mov
lret
xor
push
nop
or
or
pop
bound
cmc
sbb
loopne
jno
arpl
adc
cmpsb
pop
imul
xchg
lods
insb
lret
jmp
xlat
movsb
dec
sbb
sbb
mov
mov
cld
cmpsb
mov
gs
mov
dec
pop
aas
nop
inc
mov
pop
or
repz
outsl
fwait
xchg
dec
hlt
in
sbb
xor
ret
sbb
mov
pop
in
or
cmp
jge
aad
in
inc
insb
lods
or
scas
test
pushf
dec
mov
inc
je
add
mov
or
addr16
mov
dec
loopne
into
pop
sub
jae
mov
pop
xchg
xchg
outsb
das
pop
cpuid
mov
std
pushl
and
xchg
repz
push
jae
jmp
mov
out
aaa
fcomps
scas
sbb
cld
or
jns
clc
mov
int
jmp
sti
mov
or
sarb
leave
mov
aam
loope
ret
aam
insl
es
mov
jae
xchg
jnp
aam
push
ljmp
push
lods
js
idivb
lcall
push
sti
sub
add
mov
test
dec
jecxz
filds
push
lcall
test
pop
mov
stos
pop
test
rcll
dec
push
stos
into
adc
out
mov
cmc
xchg
lods
hlt
push
add
jbe
jbe
shll
mov
mov
xor
subb
push
stos
test
imul
add
adc
lea
mov
into
or
xchg
mov
mov
fs
xor
cmc
bound
movsl
jo
pop
outsl
jae
sar
mov
xor
or
add
insl
addr16
pop
sbb
add
jb
mov
mov
pusha
ds
fcomip
pop
xchg
aam
jp
or
xchg
or
xor
sbb
shrl
mov
xchg
push
inc
jp
stos
rcrl
adc
fnstcw
jo
jle
mov
addr16
push
push
iret
mov
add
jnp
pop
sub
test
jae
cmp
push
sub
mov
push
sub
cmp
jb
ss
or
adc
xchg
mov
inc
fs
scas
or
push
fimuls
popa
mov
into
jp
out
pop
mov
jmp
dec
arpl
sub
mov
sub
lds
and
enter
shlb
push
push
or
outsl
add
in
mov
scas
dec
xchg
test
cmpsb
pop
in
pop
mov
movsb
ficompl
mov
call
jge
mulb
enter
daa
and
cmp
or
jno
inc
mov
mov
repnz
push
fs
in
add
popf
add
push
das
test
sbb
mov
cmpsb
sbb
clc
js
ja
pop
hlt
pop
aaa
push
push
jns
lcall
cmp
xchg
ds
andl
out
fnstenv
sbb
xor
add
xlat
add
sti
sbb
mov
pop
ljmp
push
mov
and
outsb
call
addr16
jg
sub
insl
les
and
adc
add
sahf
decl
mull
cld
lret
cmpsb
roll
xor
imul
jns
cwtl
ficompl
xor
out
pop
outsl
mov
xchg
gs
out
enter
fistl
jmp
loope
cmp
mov
xlat
cli
std
mov
nop
cmp
inc
adc
in
aad
into
cmp
out
loopne
inc
loopne
fsubrs
sub
adc
mov
add
inc
sub
mov
lods
push
add
cld
xlat
jecxz
cwtl
sub
rolb
movsb
xchg
aam
or
pusha
fsts
data16
lds
outsl
les
push
repz
ret
sbb
mov
inc
jmp
ret
mov
aaa
pushf
pop
rcr
and
mov
popa
adc
aad
dec
and
js
aas
dec
push
shll
xlat
stos
dec
sub
jecxz
xchg
mov
xor
jecxz
cwtl
repnz
jae
mov
rcl
orl
adc
addb
jg
loop
aad
cmp
mov
and
rcrl
test
xchg
std
nop
sbb
dec
sub
cltd
cmpsl
andl
icebp
xchg
xchg
ss
lret
addr16
out
mov
push
mov
sub
rclb
repz
sub
int
aam
lock
arpl
es
clc
insl
insl
call
rcrl
adc
cmpsl
popa
cmpsb
xchg
jo
jecxz
aas
mov
mov
insl
popa
push
popa
test
push
lods
sub
ljmp
test
cmp
scas
add
pop
out
fcomp
sub
mov
xchg
add
shr
orb
fldz
sbb
loope
repz
add
cmp
imulb
xor
das
xlat
or
mov
or
push
sarl
pop
mov
aam
ret
xorb
push
es
adc
fwait
push
mov
push
adc
sbb
inc
out
adc
add
loop
in
and
lret
sub
mov
pop
jecxz
loopew
pop
jp
xchg
inc
mov
jnp,pt
loope
adc
dec
scas
mov
jne
mov
test
xchg
cmpsl
and
sub
loopne
out
fisubrl
mov
cmpl
stos
inc
sbb
insb
fisubs
lds
imul
inc
xchg
mov
iret
adc
les
mov
inc
pop
cwtl
je
orb
popf
pop
popa
mov
inc
test
push
and
scas
and
imul
in
and
add
pop
repnz
data16
notl
and
inc
mov
mov
sbb
lods
xchg
or
and
push
sbb
fidivs
mul
lds
fnstenv
ja
scas
sub
stc
and
mov
cmp
sbb
push
add
push
jbe
mov
jge
cmc
loopne
and
cmp
cmp
out
jno
sub
jl
nop
pop
dec
pop
imul
and
mov
push
push
call
cmp
cmpsb
pushf
jb
in
pusha
into
push
js
in
rcll
les
push
mov
in
sub
push
scas
cmp
xlat
mov
dec
int
movsl
and
or
ret
add
dec
and
sbb
mov
xor
fsubrp
pop
inc
movsl
repnz
movsl
sbb
push
adc
imul
dec
lea
cmp
sub
out
mov
dec
imul
pop
insb
and
repz
push
xor
add
ds
mull
jle
lret
mov
and
sbb
push
icebp
sahf
cmp
int
insl
in
xor
imul
lret
mov
push
fs
xor
ss
adc
scas
test
mov
ja
xor
in
xor
xor
testl
into
pop
push
cmc
cmpsl
sbb
cmpsb
xor
pop
mov
adc
imul
rclb
frstors
lods
cmp
push
cmp
shlb
xlat
and
int3
sub
jnp
mov
xchg
ffreep
sti
push
lock
testl
nop
sbb
test
mov
fnstcw
les
and
jmp
inc
outsl
sbb
sub
push
push
xor
or
xchg
pushf
add
mov
adc
push
aad
adc
inc
mov
data16
jb
mov
je
sbb
pop
xor
sub
cwtl
fnstsw
mov
mov
cli
andl
in
fistl
xchg
jmp
lock
sbb
addr16
stos
lods
push
shrl
orb
aaa
mov
and
pop
cmpsl
xorb
popf
test
icebp
pop
out
add
popa
out
lret
lea
mov
mov
push
dec
lods
hlt
shl
push
jle
fldenv
aam
push
lods
ret
repnz
es
push
dec
clc
cld
pop
adc
push
sub
push
es
mov
mov
mov
loopne
or
push
mov
popa
push
adc
std
hlt
mov
inc
js
mov
add
fstl
test
idivb
sbb
mov
paddusb
lods
mov
out
jl
xchg
xchg
cmp
add
xchg
inc
xor
mov
mov
leave
pop
mov
push
jo
dec
cmp
insb
pop
insb
mov
sbbb
dec
xchg
xchg
push
inc
call
es
fwait
cmp
sbb
mov
out
lock
xchg
movl
in
xor
xchg
pop
push
push
add
imul
loopne
mov
mov
inc
ljmp
lcall
mov
pusha
je
inc
fbstp
push
cmp
jp
adc
imulb
xchg
xorl
or
sub
test
mov
adc
jnp
daa
jb
or
in
data16
mov
jbe
cwtl
dec
jl
addr16
mov
popf
ds
lods
push
sub
sub
pop
mov
imul
and
shrb
xchg
jl
stos
leave
fucomp
pop
hlt
sbb
or
mov
fmuls
cmp
jo
adc
or
add
int3
movsl
or
jb
xchg
jo
sub
scas
or
fdivrs
and
movsb
lock
jp
push
mov
mov
enter
daa
adcb
dec
cmp
jl
lock
mov
in
fnstsw
or
dec
adc
test
mov
scas
inc
mov
mov
add
divl
jb
lock
faddl
enter
test
into
cmp
fisubl
sahf
pop
out
lods
sub
addb
in
sbb
push
sub
gs
adcl
xchg
test
insb
pop
call
fisttpll
fsub
cmpl
movsb
mov
outsb
scas
push
or
fisubrs
pop
adcb
dec
jg
or
mov
sub
mov
push
mov
paddw
push
dec
ja
pop
mov
int
data16
dec
sti
cmp
loope
lahf
lret
pop
shll
push
mov
and
sbb
icebp
sahf
ficoms
test
ss
ss
adc
adc
int
xchg
repnz
pop
out
cli
arpl
lret
lcall
add
fdivp
outsb
cltd
jmp
inc
movsl
or
mov
adc
imul
hlt
sahf
add
xchg
inc
pushaw
xchg
lods
and
lods
xlat
popa
pop
movsl
sub
jnp
jl,pn
in
mov
sbb
gs
cmp
dec
and
aaa
inc
jmp
mov
les
repz
push
pop
sbb
cmpsb
xor
out
sbbl
das
xchg
pushf
scas
mov
cmp
xchg
aad
inc
rolb
dec
mov
mov
lods
jb
jns
dec
sbb
and
sbb
mov
push
cmp
sub
cwtl
loope
mov
mov
mov
and
dec
xor
dec
fcmovnb
add
daa
mov
inc
adc
lock
lret
clc
test
cmpb
aaa
mov
notb
paddw
dec
push
outsl
int
jg
into
mov
xor
sar
mov
inc
mov
int3
push
mov
pop
push
mov
push
loop
sub
movsl
into
aam
or
andl
insl
cmp
mov
aaa
je
xchg
xchg
push
jecxz
lods
bswap
popa
aam
push
lods
mov
mov
add
and
mov
xlat
paddusb
in
adc
mov
dec
or
mov
pop
push
jecxz
cmp
jnp
lcall
aad
sbb
dec
mov
pop
mov
and
inc
xchg
sbbl
call
xor
mov
pop
mov
pop
sbbl
ja
ss
test
pop
inc
jg
push
or
adc
insb
nopl
and
gs
iret
mov
in
mov
test
mov
sti
leave
mov
js
mov
std
push
xor
push
and
sub
mov
push
mov
add
jecxz
je
je
push
mov
push
xchg
dec
das
leave
jmp
imul
inc
outsl
insl
out
and
sub
add
stos
sub
xchg
mov
cli
jnp
test
jb
push
iret
sub
arpl
xchg
iret
ror
cmpps
iret
sub
jb
push
jae
repnz
je
popf
adc
inc
cmpsl
mov
xchg
or
ret
adc
sub
scas
fcoms
ffree
lret
mov
iret
inc
test
hlt
int3
movq
jae
inc
mov
push
outsb
sbb
leave
dec
aaa
shll
inc
add
add
pop
pop
mov
fidivrs
sahf
lds
push
jo
lock
jle
mov
and
adc
sbb
clc
daa
jg
or
push
icebp
jno
push
jl
and
imul
movsb
mov
and
into
mov
ja
push
push
and
iret
push
jle
xchg
inc
dec
insb
stos
cmpsb
mov
les
aad
cs
mov
cmp
scas
xor
fildll
sub
lock
js
ds
mov
movsl
xor
sarb
push
or
incl
mov
xchg
add
xor
and
inc
ret
pop
sahf
sub
dec
cwtl
pop
addr16
lcall
jno
jb
sub
test
xorb
sahf
jg
xor
mov
inc
or
and
les
pop
push
lock
out
movsb
fadds
hlt
mull
dec
mov
mov
push
addl
outsl
aas
jmp
stc
mov
lods
adc
or
cmp
jp
lret
and
cmp
test
cmp
add
cmp
and
in
xchg
xor
sub
adc
push
es
imul
data16
dec
lods
or
cli
cmp
adc
in
lcall
push
mov
cmp
mov
scas
dec
sub
inc
mov
cmpsl
les
adc
xchg
add
and
clc
pop
in
cwtl
adc
das
mov
out
test
mov
pop
inc
fcoms
aas
sub
jb
cwtl
out
nop
pusha
jne
jb
jecxz
cmp
cli
int
xor
mov
sub
push
mov
push
pop
lret
inc
mov
lcall
sub
push
mov
rcll
dec
jp
notb
pop
sbb
sbb
xchg
mov
or
cld
mov
lahf
lret
mov
popf
mov
pop
or
pop
push
fldenv
xchg
jb
mov
adc
adc
ret
adc
es
insl
and
cmp
jb
ja
rolb
repz
cli
lods
and
sub
mov
mov
pop
push
addr16
mov
add
andl
pop
lcall
sbb
inc
push
cmpsb
inc
mov
mov
xor
aad
repnz
je
out
lret
gs
aaa
out
inc
jp
xchg
enter
mov
out
xor
sbb
xor
pop
stos
mov
pop
push
dec
pop
sub
pop
loop
xchg
jnp
ja
sahf
inc
push
pop
testl
and
push
push
jbe
add
sub
out
scas
dec
iret
in
pop
loopne
addr16
in
inc
add
xchg
pop
mov
clc
lcall
mov
mov
mov
jo
mov
jne
jle
stos
rol
fildll
inc
xchg
and
pop
xchg
ss
testb
jns
sub
mov
mov
sbb
insb
pop
outsl
movsb
jnp
out
xlat
jle
cwtl
clc
in
add
adc
mov
std
ret
xor
popa
mov
jae
or
push
aaa
das
fcomps
fisttps
and
ds
ds
fs
mov
pop
imul
scas
cmp
push
cli
aas
popa
shl
xor
and
lret
add
hlt
pop
lcall
mov
inc
mov
aaa
nop
bound
sbb
dec
int3
adc
clc
pop
xchg
fcmovb
add
xchg
jo
lret
mov
and
testb
and
movsb
push
xor
icebp
jecxz
jbe
addl
dec
mov
push
jmp
jecxz
popf
loope
jno
mov
ret
fs
lock
outsl
and
add
cmc
sahf
xchg
test
dec
cmp
cmpsb
and
xchg
add
adc
movsb
pop
lock
pop
aaa
adc
negb
sub
jle
cmp
xchg
outsl
movsl
cmp
aad
push
iret
subb
sbb
jno
add
daa
mov
pop
loop
pop
mov
lods
sub
in
mov
lret
sahf
push
push
sbb
cmp
add
in
dec
adc
dec
sbb
jg
pop
in
mov
andb
lret
and
lret
push
pop
xchg
mov
fdivrs
xchg
pushf
lret
mov
mov
pushf
sbb
sahf
and
add
pop
hlt
sbb
pop
loop
fs
stc
inc
add
or
dec
sub
cmp
jne
or
pop
out
cli
leave
cs
xor
sub
or
add
cmc
cld
int
ja
xor
test
imul
xor
add
push
lods
out
aam
cmp
cld
add
push
mov
in
aam
mov
pusha
fwait
dec
pusha
xchg
gs
movsb
add
loop
mov
push
fldenv
enter
lcall
sbb
sbb
pushf
int
in
xchg
pop
cwtl
sub
adc
xor
xchg
and
in
cmc
push
aad
cmc
inc
rep
idivl
lret
jb
in
lahf
dec
pop
xchg
pop
je
ds
jecxz
pop
sahf
ds
lea
pop
cwtl
push
popa
fs
xor
mov
ja
dec
or
dec
fistpl
jl
insl
push
add
inc
xchg
movsb
lock
jg
das
mov
xor
nop
lret
dec
inc
icebp
rcrl
daa
jbe
sub
ds
adc
pop
cmpsl
jge
jns
ss
push
icebp
loop
adc
loop
pop
lret
and
stos
mov
loope
mov
mov
in
pop
cmpsb
test
rcrb
stc
sub
jae
ret
lahf
arpl
insl
or
lods
xchg
sub
push
pop
popa
add
pop
lods
je
mov
dec
and
and
inc
add
add
sbb
xor
ljmp
mov
test
xor
xchg
mov
ret
pop
adc
and
jns
out
movsl
fstl
paddq
add
cs
xchg
xchg
sub
inc
jns
or
sub
mov
pop
incl
pop
popf
pop
jmp
dec
push
push
inc
lods
arpl
xor
push
notb
cmp
test
jge
in
bound
cmp
imul
imulb
addr16
sahf
jp
mov
mov
es
mov
fisttps
popa
jne
push
cwtl
pusha
inc
testb
lea
repz
jmp
add
aaa
out
inc
dec
sub
fdivrl
or
call
fistl
jle
xor
pop
popf
push
sbb
and
xchg
cmp
ret
cwtl
pop
cmp
in
jae
imul
popf
mov
mov
inc
movsl
xor
and
sbb
mov
imul
scas
sahf
fs
push
inc
addr16
add
cmp
jne
gs
inc
or
bound
arpl
loop
shlb
sbb
aaa
dec
cmpsl
push
add
cmp
jle
mov
adc
mov
test
mov
movsb
xchg
pop
fists
ljmp
add
add
daa
jge
aam
rcrb
outsl
jno
aaa
push
jl
or
push
rcrl
shll
mov
enter
cmp
sbb
pop
inc
lods
ljmp
dec
cli
js
mov
push
jb
loope
jb
sub
fbstp
les
popa
fldt
movsl
inc
sti
int
das
shrb
cmpb
sub
sub
xor
fwait
cmp
lret
pop
fnstsw
sub
dec
and
arpl
jle
mov
imul
outsb
xlat
dec
jge
mov
sub
loope
ret
cld
jnp
sarb
adc
movsb
jnp
popa
inc
jl
mov
test
adc
jecxz
fadd
clc
xchg
mov
sbb
xchg
test
out
outsl
std
icebp
inc
loop
pop
sbb
stc
and
xchg
dec
cmpsb
adc
imul
outsl
cmp
pop
sub
xor
movsb
stos
cltd
cmp
push
out
pop
add
into
stos
std
push
cmc
ret
jae
loopne
outsl
or
adc
pop
adc
adc
push
out
add
scas
lods
cmp
cli
push
movsl
xlat
push
adc
lret
mov
aas
inc
and
sysret
mov
gs
out
daa
nop
xchg
or
push
sbb
xor
pop
pusha
push
les
jb
xchg
fisttpl
inc
lock
jp
fs
inc
adc
scas
pushf
mov
lahf
jmp
popa
adc
aad
and
inc
push
pushf
mov
imul
cli
dec
jle
inc
je
inc
pop
jecxz
cmp
movb
lea
jle
mov
mov
dec
cmpl
scas
fisttpl
and
and
outsb
lock
push
dec
mov
xlat
lret
push
shl
xchg
sbb
std
shll
dec
pshufw
jl
jno
imul
jecxz
xchg
xchg
pop
mov
pop
arpl
pop
fstpl
lds
shlb
rcrb
aam
and
sbb
push
and
lock
ret
clc
call
in
sub
xor
popa
sbb
lods
cli
mov
dec
mov
les
push
sbb
and
add
in
cltd
out
roll
sbb
imul
push
cld
xchg
mov
pushf
add
pop
stos
push
xor
inc
add
mov
js
xchg
or
pushl
inc
push
mov
bound
aad
sub
sbb
push
inc
inc
mov
or
and
cltd
lahf
int
dec
mov
mov
sub
out
insb
jg
bound
dec
fidivrl
lods
and
xchg
fwait
pop
lret
mov
rcll
or
dec
cmc
addr16
js
push
dec
pop
mov
mov
jle
dec
push
mov
cmpsl
das
fsubs
sub
fildll
in
jmp
int3
dec
xor
add
sub
dec
xor
push
mov
sbb
pop
insb
cmc
sbb
jle
mov
adc
jmp
xchg
ret
inc
pop
je
cltd
inc
xchg
leave
jae
or
mov
cmc
push
and
jl
movsb
xchg
notb
push
push
and
mov
movsl
rcrb
adc
enter
mov
stos
dec
arpl
inc
ret
jno
or
daa
inc
inc
aaa
push
jo
or
call
int3
ljmp
fisubs
sti
lds
lahf
inc
jo
mov
in
and
jl
cmp
mov
push
xor
jbe
ret
cmpsl
dec
or
or
out
daa
jl
iret
cmp
push
hlt
jno
aam
jl
mov
pop
push
mov
xorb
test
aam
jl
fwait
cli
sub
fistps
lret
cmpsb
sub
in
jecxz
jge
xchg
adcb
jp
push
bound
and
sub
adc
mov
aaa
shlb
jne
vpmacsdqh
push
add
inc
loope
mov
jge
pop
add
sub
push
lcall
sbb
pusha
cmpsb
jno
cmp
addb
pop
mov
stos
xlat
mov
mov
mov
xor
and
outsb
mov
or
adc
xor
out
lret
das
rorl
lcall
ret
adc
xor
out
or
lea
loop
subl
dec
and
ret
rorl
scas
fidivrl
cmp
imul
pop
mull
das
lods
xor
pop
cmp
ss
into
mov
outsb
cmc
mov
pop
cmp
xlat
adc
dec
loopne
xor
add
pop
lret
data16
movsl
sub
cmp
lods
xor
cmp
movsb
xchg
in
stos
imul
mov
mov
aam
popa
add
dec
mov
xor
sti
aaa
repz
xor
lret
fsubrs
call
jecxz
cmc
pop
adc
adc
adc
cs
xchg
aad
fisttpll
inc
sub
adc
or
daa
dec
cmc
loopne
je
mov
mov
inc
and
add
leave
mov
lds
adcl
or
pop
mov
or
test
push
mov
std
jmp
bound
stos
negb
inc
std
jp
fisttps
inc
jnp
imul
lock
cld
cmp
cltd
lret
add
sahf
mov
test
mov
in
sub
add
mov
aam
sub
ret
mov
cld
subl
lea
ljmp
adc
mov
mov
lret
shrl
clc
dec
pop
addps
sti
add
cltd
std
push
int
jnp
mov
sbb
fstl
push
jl
shr
xor
sbb
add
call
stos
push
mov
xchg
adc
inc
dec
sti
cs
aad
or
jo
xor
mov
mov
gs
orb
jb
adc
cmp
imul
or
add
fwait
sub
pop
add
cmp
or
bound
ret
in
mov
dec
cmpl
fldt
jp
mov
int
jecxz
jge
mov
loope
jne
jb
pusha
jnp
adc
lret
inc
jb
cltd
mov
jmp
xchg
fwait
xlat
addl
nop
sub
push
mov
lcall
adc
insb
pusha
xor
push
pop
lahf
jle
aas
fwait
in
sti
fists
iret
sbb
sbb
sarb
inc
sahf
add
push
subb
add
push
mov
rolb
repz
sbb
icebp
subb
inc
scas
fs
push
iret
loope
shlb
imul
pusha
or
xor
out
hlt
clc
xor
jnp
or
scas
gs
loop
push
aaa
int
nop
or
rolb
mov
pop
adc
nop
fiadds
inc
lds
sarl
and
icebp
push
push
faddp
mov
orb
enter
daa
jnp
les
cmpsb
out
jl
jns
into
cmp
orl
stc
dec
xor
inc
xchg
stos
lahf
repz
outsb
jbe
test
stos
iret
incb
pop
cmpsb
scas
icebp
sub
lret
js
inc
pop
lods
notl
mov
cmp
sub
push
cmc
cmp
jmp
ds
xchg
in
add
adc
add
out
jo
push
stc
or
mov
jle
arpl
sbb
pop
adc
fdivrl
jne
sub
nop
outsb
popf
loope
adc
popf
push
dec
jg
clc
stos
mov
jmp
mov
iret
js
lahf
xchg
int
std
xchg
fdiv
push
xchg
negl
out
shll
les
mov
xchg
test
or
loop
loopne
stc
addr16
mov
test
adc
addr16
les
cmp
data16
out
inc
mov
bound
xor
cmp
out
mov
cmc
cmp
push
cmc
push
stc
mov
dec
add
pop
pop
popa
repnz
shll
std
mov
add
repz
out
push
pop
lods
movsb
mov
xlat
pushf
lret
push
sub
enter
push
sti
insl
sub
dec
fwait
andb
jbe
cmp
adc
shrl
fld
bnd
mov
cmp
popa
sbb
or
inc
fwait
pop
mov
mov
adc
push
add
stos
dec
or
push
loope
aad
addr16
inc
ss
aas
cmpsl
decb
dec
insb
jecxz
sahf
push
aad
add
bound
aas
jbe
mov
push
sahf
mov
movb
push
xchg
fldt
movsb
addr16
lock
movsb
popf
das
push
cmpsb
mov
mov
add
mov
into
std
and
cmp
cmpsl
jp
push
mov
addr16
mov
arpl
repnz
jo
data16
ss
mov
add
pop
rcl
sub
xchg
dec
pop
icebp
es
jge
mov
lds
in
jp
popa
inc
pop
out
lods
rcl
inc
mov
mov
inc
and
rcll
sbb
mov
add
pusha
cltd
xor
add
lcall
ds
xchg
test
mov
clc
sbb
rolb
inc
ljmp
in
fiaddl
sub
xor
outsb
mov
xor
rclb
xor
jl
mov
push
mov
ja
jl
dec
inc
jge
inc
jb
jp
es
push
fwait
push
add
cwtl
sbb
xchg
pop
lcall
add
jns
jnp
in
push
cmpsb
xchg
cmp
imul
fidivrl
jp
in
mov
dec
leave
mov
sub
pop
dec
jecxz
adc
sbb
fucomip
mov
xor
xchg
bound
pop
out
dec
sbb
lea
enter
pop
stos
imul
int
lret
sbb
jle
mov
in
shlb
stos
gs
scas
repz
pop
loop
jecxz
test
sbb
popf
sub
push
and
rcll
pop
dec
add
mov
das
push
push
xor
repnz
outsb
imul
arpl
popa
rorb
popf
shrb
fmull
pusha
push
add
repnz
rorb
inc
push
inc
fisubs
fisubs
jo
cld
cmp
and
shll
adc
cmpsb
movsb
xor
mov
jbe
shr
jge
add
mov
jno
jp
jl
xchg
push
dec
sub
cmpsl
push
jl
pop
xor
fnstsw
pop
push
inc
ljmp
jne
ds
adc
mov
in
mov
out
js
pop
xchg
in
clc
push
loope
adcl
cld
out
shll
ds
test
movsl
push
test
jecxz
out
out
cmpb
sbb
repnz
add
mov
push
adc
negb
mov
sub
fcmovne
lcall
push
fsub
xchg
sub
cmp
adc
mov
xor
mov
mov
jecxz
push
hlt
int
cli
dec
fsubrs
inc
movsl
lret
inc
sarl
sbb
stos
sahf
mov
mov
push
pop
shlb
les
outsl
lcall
stc
push
push
iret
fs
push
stos
ss
mov
mov
mov
pop
pop
in
cli
xchg
sti
out
xor
or
orl
loopne
in
or
pop
lcall
add
adc
mov
cmp
in
dec
lods
mov
push
cmp
insl
mov
and
mov
sti
sbb
aas
in
mov
gs
jle
pop
xchg
mov
pop
push
mov
cs
std
mov
les
mov
and
sbb
mov
sbb
loope
and
rorb
pushf
mov
push
jmp
imul
aad
test
aas
inc
jnp
jb
inc
mov
jecxz
js
jmp
data16
dec
xchg
shlb
loopne
imul
pop
cli
add
mov
jp
fisubl
repnz
stc
push
xchg
inc
pusha
dec
add
mov
dec
int3
mov
insb
roll
push
rcl
xchg
int3
mul
pop
add
enter
add
and
ds
popf
lret
fildll
mov
add
sub
popf
pop
and
sbb
lcall
ret
fisttpl
inc
insl
movsl
cmpsb
repnz
cltd
xchg
cld
xchg
or
mov
pop
lods
test
lods
cmp
pop
mov
fscale
dec
push
scas
call
push
add
cmp
test
test
frstor
lcall
scas
sbb
jno
rcl
mov
loopne
stos
xor
repz
inc
ja
decl
add
loope
mov
mov
imul
or
sbbb
xchg
mov
dec
ss
dec
inc
or
xchg
or
lock
fwait
xchg
xlat
push
addb
add
icebp
cwtl
xchg
out
or
int3
cs
jns
xlat
and
cli
test
dec
mov
cmp
hlt
or
mov
fsts
mov
mov
dec
bsf
push
push
mov
nop
js
cld
and
pusha
mov
fisttps
cmp
clc
jmp
sub
jl
out
out
sub
enter
jnp
pop
stos
fcompl
inc
mov
pop
jnp
mov
sbb
or
test
movsl
iret
or
insl
loopne
sbb
inc
mov
push
jae
mov
popf
dec
adcb
ret
jmp
fidivrl
sbb
sbb
adc
scas
sub
push
pop
in
mov
insb
jle
mov
shll
hlt
mov
cmp
xor
int3
xchg
or
pop
hlt
ss
dec
loop
or
add
int3
stos
mov
push
fimuls
sub
mov
cmp
and
leave
mov
movsb
mov
stos
ss
xchg
jge
cli
cwtl
enter
daa
jns
pop
cmp
ja
and
test
push
pop
mov
loop
js
inc
lahf
xor
push
adc
jp
adc
sub
mov
mov
in
cwtl
add
repnz
sub
push
push
xor
lods
nop
cmp
dec
inc
movsl
pop
stos
sub
fistl
inc
dec
fiadds
pop
lods
jg
pop
out
sub
push
ljmp
mov
pop
popa
popa
push
lcall
cmpsl
fcoml
daa
dec
outsb
arpl
adc
shll
jg
jae
mov
out
out
mov
inc
and
fwait
pop
int
fsubrl
negl
mov
rcll
xchg
sbb
xchg
push
test
jge
outsl
jns
xchg
loop
cmp
rclb
sti
ss
repz
pop
cmp
out
insl
idiv
enter
add
and
or
mov
into
aaa
jne
cmc
fisttps
ja
jle
lret
pop
mov
imul
test
cmc
cmp
jnp
out
adc
xchg
dec
sub
jl
in
jmp
lahf
sti
lret
pop
int
movd
nop
repnz
pop
push
fnstenv
push
repz
sbb
sbb
add
mov
pop
pop
mov
lret
pushf
pop
imul
faddl
aad
insl
testl
sti
xor
cwtl
jp
pop
and
mov
dec
data16
mov
data16
cmpsb
mov
sbb
mov
dec
pop
pushf
repz
inc
out
mov
adc
hlt
sub
and
movsb
shll
rolb
std
outsl
pop
dec
dec
sti
xor
mov
adc
addr16
lret
dec
loope
mov
add
pop
inc
inc
sarb
inc
sub
cmp
push
adc
jbe
or
mov
cwtl
clc
aam
pop
xchg
dec
repnz
ljmp
mov
imul
clc
cmp
and
mov
outsb
pcmpeqw
roll
or
mov
mov
xchg
aad
cmp
push
fisttpll
adc
and
mov
clc
sub
pop
addr16
stos
and
mov
xchg
jb
verr
and
lods
xor
xor
data16
pop
lock
xor
add
mov
outsb
test
dec
jno
and
ja
push
std
inc
mov
movsl
jmp
push
and
xor
scas
out
call
mov
mov
int
test
xlat
call
sbb
fisubl
sub
dec
mov
imul
fs
adc
test
xchg
pop
pusha
dec
iret
and
sub
push
jmp
clc
movw
ljmp
xchg
push
push
mov
das
inc
and
mov
mov
jle
jnp
in
jbe
adc
loope
insb
test
ret
mov
add
inc
mov
cmp
push
leave
ret
add
rorl
fidivl
dec
xchg
outsb
pusha
push
sbb
xchg
scas
lea
rolb
stos
repnz
add
xchg
mov
hlt
fnstcw
gs
iret
and
mov
sbb
lods
gs
or
roll
cmpsb
sub
int3
xchg
int3
mov
mov
lahf
sub
sub
jl
add
aaa
cmp
cmp
add
adc
enter
daa
js
fidivrl
iret
mov
pop
jl
ret
push
pop
mov
xor
adc
lahf
push
mov
push
out
xchg
test
or
inc
xor
cmpsb
aaa
dec
popf
in
jg
xlat
js
sbb
pop
push
stos
push
sub
sub
xor
ds
xchg
movsl
arpl
adc
jbe
or
sahf
or
and
js
xor
shrl
mov
fisubl
lcall
cld
fdivrl
xchg
sub
lds
imul
jg
mov
mov
insb
inc
mov
xor
or
int3
xlat
cmpsb
push
jo
loop
movsb
mov
neg
mov
lret
jp
jmp
cwtl
mov
and
int
scas
sahf
imulb
sub
xor
jp
sub
loop
xor
stc
mov
fs
test
stos
ss
mov
mov
mov
push
inc
enter
and
xlat
push
or
adc
into
sbb
int
sbb
mov
adc
mov
adc
shlb
jbe
leave
data16
xor
pop
inc
mov
and
xlat
pop
ds
or
mov
push
pop
mov
jp
sar
inc
sbb
inc
jge
int
xchg
dec
sbb
xor
cli
ret
fldcw
leave
les
repz
dec
xchg
stos
or
sbb
jle
aas
mov
adc
adc
jmp
in
cmp
aas
pusha
outsb
aad
mov
in
test
rorb
cs
je
pop
into
jecxz
sbbb
dec
into
cwtl
jo
sub
aas
int3
xorw
mov
sahf
fstpt
push
imul
jg
lock
or
lock
test
mov
shll
aas
imulb
and
dec
notb
cmpsl
ja
and
in
adc
lret
mov
add
mov
pusha
or
rclb
popf
sub
bnd
stc
mov
ljmp
clc
clc
jae
mov
imul
and
adc
jle
sbb
and
shlb
xchg
add
imul
test
jl
push
sti
cmp
fnsave
inc
bound
xlat
rorl
ret
pop
adc
stos
adc
out
divl
push
add
decl
iret
xor
jmp
iret
out
xor
les
mov
jno
sahf
dec
fdivrs
pop
call
dec
sbb
inc
inc
aaa
jp
or
das
aad
in
lahf
push
enter
lock
outsl
mov
inc
xchg
out
mov
mov
in
push
pop
xchg
notb
pop
lret
loopne
mov
aad
stos
xlat
lds
adc
mov
push
jns
xchg
dec
mov
movsb
jne
cmpsl
pusha
out
dec
filds
ficoms
movsl
push
lods
xchg
ret
push
movsl
cmpl
xchg
sub
ds
cmp
inc
shrl
jb
aas
insb
or
fidivrl
inc
sub
in
imul
mov
iret
lret
shrb
or
outsl
pop
xchg
inc
lret
jae
xor
push
mov
popf
popf
jb
push
lahf
xorb
outsl
mov
sbb
pusha
cmp
call
insb
push
jmp
test
movsb
cmpl
or
jmp
arpl
das
or
sbb
imull
or
adc
add
lret
scas
pop
rcrb
dec
ficoms
sub
scas
fistpll
cmc
and
push
ss
jo
shll
push
sbb
jge
jecxz
enter
daa
ja
adc
add
leave
jno
add
jl
xchg
sbb
and
mov
and
iret
adcb
subb
inc
rcl
cmpsb
mov
cmp
pop
test
fwait
fs
fadd
sub
mov
cmp
popf
call
movsl
push
rclb
scas
popl
out
xorb
testl
jo
pop
lock
sub
sbb
lcall
test
out
sbb
or
outsb
sub
adc
or
mov
mov
push
jns
xlat
test
fstpt
push
jae
mov
or
fcomp
mov
mov
roll
pop
sbb
dec
lods
sahf
cltd
cmp
aad
push
outsl
aaa
aad
loop
pop
out
inc
dec
shll
hlt
adc
inc
ss
cmc
ret
shll
push
dec
shl
movsl
dec
cli
cs
xor
sbb
or
call
mov
mov
nop
pop
xlat
imul
mov
call
xor
cmp
lods
inc
dec
cmc
cmp
xlat
cwtl
insb
jl
std
mov
shrl
push
adc
nop
test
cmp
sti
inc
xchg
scas
xor
mov
mov
repz
xchg
insl
cmc
add
call
pop
call
xlat
adc
ficompl
push
jg
mov
insb
cmp
pop
fidivrl
and
add
jecxz
dec
dec
fmull
testb
addb
jno
cwtl
sub
mov
mov
mov
inc
out
orl
mov
cmp
loop
in
cmc
scas
nop
lock
in
data16
iret
push
fldenv
xchg
xor
and
shr
rol
or
imulb
in
dec
dec
icebp
or
xor
ret
jbe
cld
movups
sub
insb
mov
xor
mov
push
xchg
jg
aam
and
arpl
jg
and
ret
mov
push
insl
pop
mul
clc
dec
outsb
jmp
enter
mov
cmp
lods
jl
xor
mov
xor
and
aas
in
rdpmc
sarb
adc
mov
data16
movsl
rcll
or
ficoml
das
xchg
add
shll
dec
lcall
inc
push
xchg
add
pop
ljmp
or
adc
lds
je
cmpsb
dec
aas
adc
dec
ja
arpl
dec
pmullw
into
jnp
or
lea
adc
mov
add
movsb
bound
dec
in
movsl
pop
xchg
jne
movsl
mov
mov
sub
rorb
addr16
in
jp
mov
sbb
rorl
outsl
mov
std
pusha
sbbb
fbld
xor
jmp
mov
jns
cmp
mov
mov
cmp
cmpsl
and
add
jnp
lods
cmp
in
mov
xchg
iret
sub
mov
inc
aad
out
addr16
push
dec
xchg
pushf
popf
les
push
push
xor
fcmovbe
sbb
xchg
sbb
dec
sbb
push
cs
push
scas
push
mov
push
xor
sarb
xchg
repnz
adc
arpl
test
adc
sbb
clc
mov
sub
lods
add
cltd
mov
insb
sahf
fwait
pop
pushl
adc
xor
fs
insl
mov
and
rcr
pop
pop
push
imul
cmpsl
enter
daa
jbe
clc
cmp
jne
jl
ds
dec
in
int3
push
or
xor
dec
ucomiss
in
imul
scas
outsl
inc
push
outsl
scas
cmpsb
cmp
sub
js
sub
pop
call
ret
scas
out
sub
mov
inc
ds
sbb
sub
repz
bound
lock
je
jnp
arpl
pop
xor
out
ja
sub
sub
fimuls
popa
lcall
mov
xchg
sbb
outsb
mov
mov
jg
dec
inc
mov
add
test
popa
popl
jbe
dec
jb
inc
fcoms
xor
dec
rcrl
pop
mov
sub
sub
mov
xor
mov
mov
into
sarb
popa
dec
aaa
adc
and
cmp
dec
xor
push
xchg
popa
or
test
in
cmp
stc
and
and
fmulp
loopne
push
cmc
xor
xchg
loopne
push
hlt
pop
divb
adc
sbb
adc
push
xor
xchg
stc
repz
pop
lods
daa
xor
cmp
push
mov
out
mov
mov
sub
iret
sti
fsubrs
js
pusha
gs
in
push
nop
andl
inc
test
push
fld
fidivrl
add
into
pusha
cltd
xchg
xor
sbb
je
stos
fstpl
pop
xor
sub
sbbl
aad
xor
aas
ret
jb
icebp
dec
mov
mov
jecxz
scas
jo
push
mov
mov
fimull
and
insb
mov
bound
fistl
nop
xor
lock
das
scas
push
pop
mov
dec
clc
mov
movsb
mov
xor
shll
std
sub
dec
in
pop
xchg
cmpsl
jne
in
into
push
sar
cmp
dec
lret
fwait
loop
mov
pop
lock
xlat
cmp
sahf
mov
shrb
dec
sub
xchg
and
pop
clc
frstor
ljmp
insl
inc
fisubrl
test
xchg
ljmp
sub
out
cmpl
push
pusha
and
sbb
setb
int3
cltd
inc
inc
mov
mov
adc
fldl
xchg
mov
mov
sub
cmp
inc
jns
push
rorb
mov
push
push
add
xchg
push
fxch
xchg
or
inc
sbb
ja
inc
dec
cmpsb
xchg
lret
pop
jne
scas
ja
cmpsl
mov
inc
mov
daa
fwait
inc
dec
sub
push
ss
add
pop
inc
out
test
bound
in
jns
mov
in
dec
adc
loope
inc
mov
lret
cli
dec
addr16
test
mov
mov
mov
push
lret
push
pusha
jne
aaa
mov
fildl
xchg
mov
jmp
sbb
inc
out
int3
dec
sub
mov
inc
push
ja
jp
test
add
mov
push
adc
jle
dec
adc
xchg
jne
adc
clc
imul
jnp
ret
fwait
pop
cmc
sti
cmp
jae
call
int
jmp
jb
xor
inc
popf
gs
fimull
adc
imul
xor
jns
mov
fcomps
addr16
or
xor
cmp
arpl
add
inc
fsubs
sbb
inc
dec
sub
or
sbb
imul
int3
push
inc
daa
pop
cs
stos
mov
jo
sti
inc
scas
popf
mov
xchg
cmp
notb
lods
dec
jbe
jecxz
jge
pop
lcall
outsl
jbe
push
push
std
jl
mov
ljmp
std
bound
in
cmp
pusha
mov
mov
inc
fists
cmpsb
rol
in
xor
pop
js
nop
or
daa
mov
vmovupd
loope
sbb
sub
mov
push
rep
test
rolb
daa
mov
xlat
fiadds
add
push
fidivs
dec
mov
xchg
pop
adc
push
lahf
pop
pop
lahf
test
push
roll
sub
cmp
mov
outsb
out
test
cmpb
xor
cltd
shlb
js
pop
mov
push
or
stc
mov
jns
test
dec
mov
notl
mov
insb
shll
dec
sbb
push
sahf
fildll
inc
xor
inc
into
loop
push
lahf
stc
mov
pcmpgtb
sahf
adcl
inc
push
cmp
dec
stos
jb
push
in
cmp
xchg
or
lret
stos
sub
dec
pop
into
ret
sub
cmc
sti
jmp
cltd
pop
adc
mov
imul
sub
call
cmp
xor
xlat
push
push
jge
bound
mov
xchg
les
sti
xchg
data16
fwait
andb
push
push
dec
cmp
inc
fsts
or
popf
add
sbb
out
lods
repz
pop
push
clc
pop
jecxz
mov
pop
stc
jmp
jmp
jno
cs
cli
stos
inc
out
lret
es
jb
sbb
je
pop
cli
pop
outsb
pushf
shll
cwtl
mov
adc
xorl
or
fcmovnb
sarl
inc
add
aaa
lock
scas
mov
lcall
and
enter
pop
jmp
xor
iret
dec
out
jle
je
sub
jno
gs
lret
or
mov
jno
mov
mov
aaa
pop
mov
mov
sub
sahf
aam
mov
ret
cmpsb
jl
subb
sub
ret
aaa
fsubr
sahf
das
popaw
shll
mov
mov
cld
imul
psllw
add
jns
cltd
jle
or
enter
xor
mov
inc
sub
and
xchg
sub
push
nop
dec
pop
adc
out
and
xchg
mov
add
adc
sub
xor
cmp
xor
xchg
xor
add
xchg
mov
pop
xor
dec
ja
outsl
loopne
cmc
mov
cmp
test
out
fwait
jno
repnz
mov
mov
test
lahf
mov
jecxz
out
ficoms
stos
adc
jns
inc
loopne
mov
and
adc
push
mov
add
mov
jp
xchg
aas
mov
push
nop
mov
ret
into
dec
xor
xor
jmp
movsb
out
mov
jmp
and
mov
inc
test
sub
out
insl
jb
mov
mov
and
out
nop
jnp
ret
mov
ja
in
xchg
or
int3
mov
ret
inc
pop
sub
mov
jmp
jae
stos
jns
aad
sub
lods
imul
cmp
xor
pop
in
imul
push
rcrb
jae
mov
pusha
in
leave
jno
push
hlt
add
mov
xor
sbb
push
into
aaa
push
inc
rorb
and
add
add
mov
call
jo
sahf
xor
mov
movsb
cmp
add
pop
jp
push
fdivrl
fucomip
xchg
enter
daa
je
jge
fwait
mov
jno
lret
popf
jl
or
ret
push
into
jns
xor
jg
int3
lahf
int3
mov
add
aaa
push
cli
inc
outsb
js
cmpsb
inc
jns
in
sbb
cwtl
pop
data16
push
sub
adc
nop
xchg
cmp
lods
push
ds
fstps
jg
pop
shl
imul
insl
fldl
sbb
testb
ljmp
or
pop
cmp
movaps
pop
fdivrl
add
add
fsubr
pop
aam
fmuls
outsb
push
ja
adc
pop
lds
mov
insl
adc
out
push
inc
mov
ds
or
sbb
jl
enter
or
or
les
outsb
inc
inc
roll
mov
pop
fistps
dec
lea
out
mov
aam
loop
pop
mov
fs
mov
cmp
cmp
inc
mov
cmp
enter
fidivrl
xor
or
sub
cmpsb
mov
sbb
test
pop
xor
fwait
adc
jge
xchg
movb
movsb
cmp
mov
scas
cmp
cvttps2pi
aad
adc
inc
mov
in
add
push
mov
es
cmp
sub
cwtl
add
inc
iret
add
inc
mov
xchg
rep
in
xchg
mov
clc
sbb
push
ffree
fcmovne
xchg
loop
adc
mov
and
sub
jecxz
into
inc
add
and
jb
pop
pushf
dec
lods
mov
mov
pop
xchg
or
cwtl
pop
mov
in
rorb
xchg
push
dec
cmp
fcomi
fistl
lret
addr16
inc
mov
lret
das
insb
jl
mov
mov
lret
inc
cld
shrl
les
dec
loop
cmpsl
jae
out
mov
dec
ja
cld
nop
ret
jns
pop
mov
push
mov
int3
out
pop
faddl
rcrb
cmc
aam
xor
ret
xor
loope
insl
cmovl
sti
jle
xchg
test
mov
lods
mov
inc
sub
add
pop
push
rclb
stos
add
push
insb
cltd
mov
popf
test
xchg
add
push
pop
or
fisttpll
test
xchg
pop
lods
sbb
add
mov
pop
nop
out
subl
xchg
aad
in
add
cmp
inc
cmp
xor
jl
stos
xchg
aad
ficoms
add
jge
repz
je
or
stc
ja
mov
scas
inc
xchg
pop
js
xchg
lahf
or
push
xchg
add
adc
bound
js
jns
js
in
xchg
dec
xchg
vfpclassss
sbb
mov
rcll
rcrl
jp
cmpsb
inc
mov
inc
dec
mov
xor
cmpb
push
pushf
sbb
ret
test
jmp
out
dec
cmp
vmovaps
sub
add
sbb
stc
and
mov
insb
mov
jne
jle
cwtl
jns
movsb
adc
adc
xor
ret
jecxz
arpl
cmp
mov
aam
lea
cwtl
mov
popf
cmp
sbb
push
ss
fwait
pop
jp
out
pop
mov
or
inc
imul
cmp
pop
insb
in
rorb
mov
mov
mov
hlt
push
xor
arpl
xorl
out
stos
or
mov
mov
or
push
add
sub
sub
ficomps
ss
ss
push
sbb
inc
loope
cmp
out
mov
push
push
cwtl
dec
pop
jge
data16
fistpll
cmp
notl
jl
das
cmp
inc
jmp
mov
jmp
and
loop
lahf
jmp
xor
movsl
pop
fistps
fs
std
loop
cmpsb
movsl
mov
js
sbb
movsl
jno
push
jno
loope
in
mov
cmp
cmp
aaa
push
movsl
xchg
dec
sarb
dec
jge
std
sbb
sbb
in
add
push
dec
xor
mov
pop
arpl
sub
fists
pop
push
mov
push
xlat
dec
jb
xchg
cmp
outsb
mov
xor
jne
scas
jg
inc
stos
mov
lock
mov
mov
add
and
scas
stc
push
jg
cmpsl
int
fsubs
notl
inc
fidivrs
mov
jl
sbb
hlt
add
iret
repz
outsl
mov
mov
stc
pop
nop
add
adc
addr16
cmp
ds
shl
push
inc
aas
cli
cli
xor
cmp
mov
insl
leave
push
into
mov
cmc
mov
addr16
push
mov
adc
aam
imul
cmc
add
mov
lods
fmull
cmp
aam
xchg
dec
scas
sub
js
pop
stc
xor
insl
sub
pop
loope
pop
gs
mov
mull
loop
iret
fnstcw
ja
sti
mov
cmp
xchg
jns
repnz
in
sbb
pop
lret
dec
push
or
int
jns
pop
jae
jmp
popf
dec
cs
or
sub
iret
inc
sbb
push
aas
lahf
push
cmpsb
jb
call
outsl
je
movsl
out
jp
inc
pop
sub
cwtl
pop
je
mov
pop
std
mov
es
andl
test
pop
outsb
shrl
push
sub
aaa
ja
das
dec
cmp
mov
insl
sbb
inc
cmovno
std
mov
idivb
aaa
dec
dec
fnsave
es
pop
push
cld
mov
lods
mov
mov
mov
sti
and
shrb
dec
sub
sahf
aam
sub
inc
es
sti
insl
neg
leave
clc
ss
arpl
test
iret
lods
sub
add
jno
mov
or
je
stos
clc
stos
imul
in
cltd
in
add
test
insb
push
mov
lock
lret
fnsave
push
xchg
or
roll
fwait
sbb
stos
mov
or
sbb
jbe
add
jmp
addr16
add
or
cmp
sub
mov
sbbb
pop
cmpsb
test
ja
mov
dec
fldt
sub
push
or
dec
sub
negl
fwait
mov
pop
ds
and
vcvtsd2usi
push
adc
aaa
cs
mov
xchg
mov
pop
inc
mov
mov
lea
adc
xchg
mov
cmp
mov
movsb
add
dec
sti
std
jg
insl
pop
pusha
out
lcall
add
jmp
mov
ja
out
mov
in
gs
push
xor
mov
and
mov
insb
and
jnp
jmp
jle
lods
add
stos
clc
adc
xchg
hlt
ret
stos
pop
lcall
jae
stc
das
push
pop
test
popf
pusha
popa
cltd
push
sbb
xor
mov
push
arpl
or
imul
fists
filds
outsb
inc
add
push
add
leave
pop
jbe
hlt
fwait
lods
or
stos
aad
loope
push
or
jne
ds
test
scas
add
sub
int3
sbb
imul
dec
mov
jo
push
stos
scas
cmp
ds
inc
dec
cmp
lock
mov
push
movsl
mov
jbe
sub
jge
rcrl
mov
daa
jb
call
jno
mov
jl
daa
jnp
mov
jnp
xor
mov
ds
or
push
fxtract
fldt
int
es
mov
jmp
js
cmp
in
mov
loope
mov
sub
mov
cmp
aam
pop
mov
movsl
lea
add
adcb
jle
mov
xor
mov
pop
mov
bound
sti
pop
fidivl
lcall
fdivrl
in
js
mov
imul
dec
sti
adcb
aad
jnp
orl
cmpsb
iret
push
and
int
idiv
fadds
fs
lret
rol
jne
fimuls
add
enter
push
mov
fwait
outsl
xchg
xorb
dec
pop
stc
mov
adcb
out
ss
test
cmp
popa
cli
sub
xchg
jl
scas
or
sub
into
insb
mov
shl
mov
into
cs
mov
imul
add
pop
and
sub
cmp
maskmovq
imull
mov
popa
xor
fcomps
imul
scas
lock
out
out
fisttps
leave
lds
ds
mov
nop
les
sahf
and
or
xchg
cmp
nop
sbb
pusha
or
cld
frstor
pushf
or
add
adc
mov
aad
mov
adc
lock
xor
je
dec
inc
jecxz
ss
bound
lea
jns
cwtl
shr
xor
icebp
and
sti
inc
xchg
dec
push
mov
fistl
rcrl
in
cwtl
js
lock
dec
pop
das
sub
loop
lahf
jmp
mov
shlb
lret
rorl
idiv
xchg
dec
fmuls
jno
mov
icebp
testb
lret
push
pushf
inc
mov
aad
add
pop
sbb
push
rolb
jmp
aam
jl
ret
push
mov
lock
fisttpll
clc
jno
pop
xchg
add
lods
ljmp
mov
mov
in
int
and
xchg
femms
and
cltd
and
clc
mov
insl
pop
push
lea
paddusw
sub
xchg
pop
add
rcrl
negl
fwait
stos
lods
out
pop
out
dec
fisubs
arpl
add
incl
aad
or
xor
sub
add
dec
inc
jp
pop
popa
mov
cmp
into
aam
inc
rcrl
fwait
mov
nop
add
leave
xor
add
jns
int
in
test
in
dec
sbb
mov
sti
roll
jp
jmp
sub
xchg
fmul
mov
dec
push
dec
fisubrs
jne
mov
add
mov
xchg
test
xor
lret
repnz
sub
mov
mov
xchg
cld
addb
mov
jge
push
mov
in
inc
into
adc
jae
add
dec
leave
pop
shr
inc
inc
or
popf
jae
xchg
push
cvttps2pi
push
daa
pushf
inc
cltd
pop
inc
ficoml
xchg
xchg
iret
dec
std
sbb
fsubp
imul
test
xchg
mov
rolb
or
loope
leave
sub
out
mov
inc
in
pop
or
xor
insb
aaa
inc
sbb
or
sub
sub
add
push
pop
ljmp
mov
inc
std
xchg
scas
sbb
inc
cmp
inc
rcll
sub
subb
aad
or
jno
sub
xor
je
loop
in
jl
call
push
ja
daa
xor
push
jge
lahf
sub
sub
test
cwtl
ret
lock
sbb
in
sarb
js
icebp
pop
and
int3
push
adc
loope
dec
shrl
call
jg,pt
add
jae
mov
andb
sbbb
mov
outsb
lds
xchg
xchg
ja
sub
mov
jb
loop
or
test
sbb
movsl
cmp
add
adc
stos
pop
cwtl
jg
add
mov
nop
add
cltd
in
mov
xor
add
jne
sbb
push
notl
cli
adc
rorl
mov
jg
sbb
movsl
sahf
imul
test
in
nop
xor
loopnew
jno
in
lods
mov
stc
lea
rclb
sub
lea
xlat
or
xor
pusha
out
lods
fdivr
pusha
sub
xor
mov
or
daa
into
dec
and
cmc
pop
add
jns
xchg
out
sti
adc
shll
jmp
xchg
add
movsl
or
lods
stos
and
mov
push
repz
mov
in
in
inc
out
sti
inc
lret
insb
daa
xlat
inc
gs
ret
nop
lret
dec
mov
inc
inc
or
pop
fldlg2
ds
les
leave
arpl
fldenv
jnp
in
add
cmpsl
pop
scas
imul
pushf
mov
sub
add
clc
cs
in
aad
and
push
jmp
jp
andl
je
inc
jb
cwtl
inc
xlat
gs
lea
or
and
in
cwtl
adcl
mov
inc
pop
add
lock
xor
mov
and
cmpsb
dec
rcrl
push
scas
std
cmpsl
mov
dec
sarl
cmpsl
jo
stos
mov
int
out
adc
cmpsb
lret
xor
mov
stc
mov
cmp
pop
cmp
fcom
adc
daa
movsb
aam
pop
nop
ret
loop
pushf
es
popa
insl
les
xchg
inc
mov
mov
sub
loopne
mov
adc
and
cli
orb
or
add
mov
stos
mov
cs
ffree
lret
sbb
xor
mov
xor
cltd
stos
pushf
fbld
lods
movsl
cmp
cmp
jmp
fmuls
adc
mov
clc
mov
xchg
jg
test
push
ret
mov
dec
shl
inc
pop
jns
or
and
cmc
push
cmp
dec
mov
and
loopne
add
fcmovu
jns
out
pop
in
js
xchg
dec
ret
or
jno
fisttpll
mov
loopne
sarb
jp
sbb
mov
mov
std
mov
aad
jne
sbb
pusha
and
inc
fbld
pusha
mov
jmp
push
cmc
jae
dec
sahf
daa
sub
fisttpl
mov
out
fbld
adc
add
and
jle
mov
in
out
ljmp
addr16
aam
pop
or
push
jae
pop
fists
loope
sbb
cltd
lds
sub
xchg
es
sbb
test
scas
movsl
add
mov
pop
mov
repnz
repnz
dec
cmpl
and
cmovbe
inc
in
or
jmp
xorb
adc
add
xor
out
repz
pop
sbb
jmp
add
mov
scas
clc
jo
and
stos
in
aaa
loopne
movsb
mov
push
jnp
jg
shr
cmpsb
daa
jo
mov
jno
es
xchg
xor
push
push
pop
dec
fdivs
jmp
add
push
jg
jne
les
jae
stos
mov
fsubr
mov
and
dec
cmp
push
jae
loope
ss
sub
cs
cmpsl
sarb
movsl
fwait
push
xchg
rorb
cs
pushf
add
negb
testb
push
push
mov
sub
inc
pop
fadds
lcall
mov
xchg
into
and
xchg
add
faddp
fstl
movb
mov
scas
inc
mov
dec
popf
mov
and
push
mov
mov
not
adc
cmp
add
adc
inc
or
sahf
push
cmpb
fs
xor
fwait
outsl
push
adc
loop
dec
sbb
inc
cld
pushf
mov
shll
sarb
add
das
mov
xchg
cli
xchg
mov
xor
mov
into
xor
loopne
dec
mov
mov
mov
xchg
push
add
adc
mov
add
sub
xchg
jg
lods
xchg
arpl
stc
xchg
fst
push
and
sahf
popf
into
in
scas
add
repnz
dec
dec
mov
nop
movsl
je
inc
sbb
fldenv
data16
sbb
xor
test
fwait
xchg
ret
sbb
push
fcoms
bound
mov
pushf
inc
cs
mov
pop
inc
insl
sbb
aas
jl
lods
jb
into
mov
mov
jecxz
xchg
imul
stos
pushf
push
je
dec
popf
inc
mov
jle
mov
xor
subl
dec
jmp
pop
push
xchg
lock
xor
mov
xchg
add
and
outsl
outsl
shr
mov
fscale
dec
dec
xchg
lods
cmpsl
outsl
loop
mov
movsb
sbb
cld
cmp
pop
lret
xor
cmp
mov
adc
jmp
shr
lahf
out
sub
loope
dec
push
mov
jno
pushf
adc
subl
push
mov
ljmp
inc
lods
imul
std
mov
pop
lcall
int3
stc
inc
add
jb
xchg
mov
test
in
sbb
adc
jle
jmp
cmc
test
ret
inc
xchg
lods
fwait
sbb
repnz
cmp
stos
mov
xchg
icebp
lahf
inc
add
incl
bound
lret
adc
push
mov
or
nop
xchg
inc
xor
pushf
int3
ja
adc
dec
mov
sbb
jbe
or
dec
jnp
pop
mov
loopne
imul
mov
push
test
and
inc
xchg
sahf
lock
mov
sbb
mov
lods
or
xor
pop
mov
pop
stc
mov
icebp
push
cmp
movsb
das
shlb
or
pusha
mov
push
cmpsl
xchg
jge
xchg
jmp
sbb
push
sub
push
inc
mov
icebp
ss
stos
pop
cmp
sub
and
das
jnp
in
jle
movsl
das
in
incl
adc
ret
lret
pop
aas
aaa
out
and
jae
outsl
int3
push
movsb
cmp
popf
aad
punpckhbw
sub
je
fidivrl
aas
pop
sbb
std
xchg
imul
scas
or
sub
jp
cmpl
les
jl
das
arpl
mov
inc
ljmp
sbb
lea
dec
fwait
add
xchg
push
int3
fsts
sub
test
xchg
jmp
cmc
cmp
stos
gs
int
movsb
sub
ss
xchg
mov
jge
sub
enter
daa
outsl
popa
jg
lcall
jl
pop
add
push
cmp
push
sbbb
sbb
test
cs
inc
cmp
loopne
sahf
mov
js
sbb
push
xchg
sub
daa
js
push
ret
mov
movsl
mov
lock
dec
std
xor
sub
push
int
and
jb
je
adc
sbb
sub
in
pop
push
hlt
inc
lcall
mov
sub
jp
adc
loope
insl
jg
lret
xchg
mov
add
das
scas
popf
and
mov
mov
into
fdivs
lret
mov
mov
and
jmp
inc
xor
in
loop
sbb
sti
adc
fs
adc
and
cmp
sub
mov
lock
cmp
xor
pop
into
adc
ljmp
iret
cmp
addr16
imul
mov
adc
lods
js
imul
nop
outsb
leave
sub
int
mov
dec
in
sbb
hlt
sti
mov
mov
adc
cmpb
inc
cs
pop
fstps
cmpsl
les
sbb
ja
xchg
xchg
test
call
push
in
rcrl
popf
inc
adc
xchg
sbb
and
cs
push
sub
mov
aas
sbb
cli
jb
jne,pn
add
je
das
out
mov
add
lea
rcrl
mov
cmp
out
add
roll
pop
cli
scas
or
cmp
lock
push
cmp
jno
jmp
test
mov
dec
leave
xchg
jb
outsb
inc
xor
jnp
add
addr16
lret
movsb
mov
mov
or
ja
into
mov
ja
ja
mov
xor
adc
ret
add
es
jmp
or
and
mov
push
xor
popa
pop
xor
lods
aam
mov
sub
ljmp
pop
dec
mov
sub
jmp
push
xor
cltd
enter
or
int3
push
aas
jle
adc
test
insl
rolb
push
cli
rcrl
lea
fildll
jb
add
outsl
xor
mov
popf
or
cmp
xor
push
mov
mov
arpl
add
pop
xchg
ja
ja
icebp
cmp
inc
fiaddl
cwtl
xor
dec
mov
addl
mov
aaa
out
sahf
cli
bound
sbb
repz
xchg
in
popa
xorl
test
and
jne
jp
xchg
fidivs
adc
ja
xchg
jne
bound
fistps
xchg
push
dec
inc
jmp
out
std
add
sbb
push
push
jne
in
sarl
push
xchg
imul
adc
insb
iret
xchg
idivb
imul
je
adc
fildl
iret
and
ret
mulps
inc
sub
enter
sti
jge
cld
rcll
push
jne
push
inc
cli
fisubrl
into
xchg
aam
cld
sbb
dec
jno
push
adc
push
push
jb
xchg
fnstsw
push
mov
leave
cmp
hlt
ficoms
ds
icebp
stos
scas
sbb
adc
orb
add
xor
ja
sbb
dec
and
lds
or
scas
mov
jle
and
repz
fwait
sbb
jbe
aaa
out
leave
adc
cwtl
pop
daa
outsb
subb
lock
sub
jl
dec
adc
stos
dec
push
and
dec
xor
and
xchg
push
push
and
cmc
icebp
push
stc
and
test
push
push
fsubrp
test
loop
rorb
push
dec
and
or
push
cmp
pop
jg
test
lods
pop
pop
in
sbbb
fs
daa
add
call
data16
aaa
jle
pop
rcrl
and
sbb
fsubr
decl
jb
ret
outsb
movsb
and
fsubl
cld
sbb
pop
mov
xchg
mov
mov
bound
movsb
push
mov
int
push
jbe
outsl
sbb
testl
rol
rcll
mov
setle
test
dec
xor
mov
outsl
push
mov
test
mov
xor
adc
out
cmp
and
daa
mov
xor
mov
or
pop
jno
insb
jae
loopne
in
cld
pop
out
data16
cmp
imul
arpl
or
shll
leave
lods
pop
xchg
lods
cmp
cmp
iret
inc
subl
movsb
add
in
test
mov
gs
xor
nop
pop
jg
dec
rolb
xchg
xchg
mov
cmp
xchg
dec
mov
call
aad
daa
pop
enter
adcb
mov
mov
int
subl
cld
push
aad
cmp
inc
mov
mov
jl
rorb
leave
sub
jecxz
xchg
outsb
out
xor
mov
adc
mov
popa
in
mov
and
pop
popf
int
inc
mov
pop
lock
fs
das
cmpsb
cmp
ds
cld
push
testb
mov
pushf
push
leave
dec
les
mov
data16
hlt
icebp
push
inc
sbb
lret
adc
xchg
outsb
insl
xchg
pop
xchg
lcall
lea
aam
jmp
ret
mov
es
adc
insl
jns
cmp
cmp
xchg
decl
cmp
cmc
lcall
pop
cltd
mov
sub
adc
mov
pop
add
fstps
adc
or
cltd
fldz
fnstsw
push
test
stos
out
adc
stos
mov
aaa
pop
rclb
imul
xchg
jg
add
mov
scas
incl
push
test
jne
in
mov
daa
add
ficomps
lcall
jl
inc
sbb
pop
or
es
testb
popa
es
jge
dec
bound
sub
in
push
push
xchg
cmp
mov
stc
mov
stc
or
cmp
mov
inc
cs
iret
add
mov
pusha
cmc
mov
jmp
and
pop
jmp
mov
push
adcl
out
pop
stos
sub
mov
push
outsl
fisttpl
inc
mov
test
pop
jnp
mov
jle
arpl
dec
icebp
adc
daa
mov
ret
push
lods
adc
mov
adcw
push
popf
and
inc
xchg
cltd
and
dec
xchg
sub
xlat
sbb
insl
fildll
inc
mov
push
mov
add
mov
pop
mov
movsl
pop
or
mov
sub
adc
scas
arpl
loop
lock
jmp
sbb
cmc
aaa
aas
adc
mov
js
and
jle
cmpsb
mov
inc
insl
jo
test
mov
mov
movsb
inc
mov
push
xor
jbe
pop
mov
enter
daa
insl
daa
jns
add
jl,pn
insb
or
lret
jno
push
add
and
cmc
push
clc
lods
test
out
sub
cmpsb
fdivs
in
insb
mov
xor
pop
cmc
add
leave
push
loope
ret
inc
sub
xchg
pop
cmp
inc
movsl
mov
ret
jge
mov
cmpsl
mov
fwait
pop
repnz
push
loop
ret
cli
push
add
dec
fsubrl
leave
pusha
addl
push
loope
push
fcoml
adc
outsb
pop
shrl
dec
scas
jg
cmpsb
lahf
mov
inc
lahf
mov
bound
mov
roll
jne
push
xchg
pop
dec
int
in
fsubrs
aad
testl
cld
in
shrl
mov
fsts
mull
push
xor
jo
in
fsub
stc
push
outsl
stc
imul
adc
ss
sub
cmp
and
out
lods
int
sub
clc
xor
test
add
or
lcall
xor
loopne
fsubrs
or
or
xchg
adc
into
cld
add
push
test
xlat
push
xchg
mov
cli
or
mov
out
inc
ret
loope
mov
mov
mov
movsb
dec
xor
rolb
jecxz
fxch
mov
les
pop
xchg
or
fstps
loope
push
xchg
mov
mov
sub
jmp
adcb
xchg
or
aam
fs
mov
cmp
dec
out
je
imul
aam
or
jno
lea
lds
cli
enter
scas
mov
addl
cmp
fistpll
cmp
f2xm1
pop
popf
das
das
test
xchg
mov
mov
lret
and
les
testb
std
inc
pop
test
mov
mov
cltd
jl
icebp
sub
cld
mov
ds
mov
mov
sti
addr16
xlat
pop
mov
cmp
popa
dec
mov
aam
repnz
ret
push
xor
es
clc
cwtl
mov
adcl
mov
dec
lods
stos
push
cli
mov
pushf
push
add
xor
mov
in
lret
psubsw
xchg
jns
insl
cltd
rolb
mov
fxam
push
pop
out
frstor
and
xchg
iret
rorl
cs
imul
out
cmp
xchg
or
and
pop
or
xchg
adc
mov
jne
xchg
fcoml
pop
or
mov
dec
lea
inc
mov
jo
add
mov
jmp
sub
add
nop
sahf
dec
out
pop
cmp
push
jns
flds
or
jmp
mov
jnp
cmp
adc
or
addl
jg
or
pop
cs
dec
cmc
jne
cmp
pusha
nop
ss
pushf
adc
jmp
jl
pop
and
pop
out
aam
sub
out
push
scas
jae
stos
mov
mov
outsl
orl
push
rorl
aad
mov
iret
loopne
mov
or
in
repnz
inc
mov
sub
in
popf
dec
dec
cmpsb
push
adc
fcmovbe
xchg
popf
xchg
cmpb
xor
out
scas
xor
inc
ror
mov
repnz
aas
dec
leave
sub
hlt
pop
outsl
ljmp
mov
or
xlat
pusha
jnp
sbb
or
aas
movsb
int3
lcall
ficoms
push
sub
addl
cmp
outsl
push
movsb
int3
es
jg
push
jbe
test
pop
xchg
fmul
mov
push
mov
xor
jno
ret
push
pop
mov
push
out
jae
imul
lahf
in
push
lret
pop
ljmp
or
out
pop
cmpsb
pop
lea
push
xchg
sbb
sub
pop
pop
cs
loope
cmp
loopne
xchg
cmp
sarb
jp,pn
movsl
mov
mov
sbb
sbb
orb
shrb
add
mov
xor
cltd
repz
je
icebp
sub
pop
aam
jg
popa
sti
lret
push
cmp
clc
faddl
jp
push
cmc
imul
mov
xorb
iret
jg
sbb
insl
xor
mov
dec
push
and
jle
int
pop
stc
fsub
and
int
fmul
push
ret
ljmp
mov
jne
sub
add
sahf
lcall
xor
imul
and
leave
fs
aaa
inc
adc
fmulp
cmp
sbb
and
cli
pop
loopne
xor
into
in
jle
out
or
ret
mov
loopne
sub
mov
imul
jg
add
icebp
jl
pushf
popf
shrb
in
icebp
xlat
dec
jno
sub
outsb
mov
pop
mov
sti
scas
push
mov
fldcw
popf
dec
nop
ja
inc
rcll
fcos
push
les
xchg
fsts
fidivrs
call
shrl
stc
pop
cs
adc
inc
mov
push
xlat
jecxz,pn
inc
aad
shrb
aas
clc
out
in
and
je
or
jecxz
push
je
mov
cwtl
xor
add
mov
mov
fldt
pop
jecxz
enter
in
lock
mov
fs
adc
cld
mov
adc
aaa
shll
fcoms
std
ljmp
cmpsl
imul
int3
add
cld
call
stos
popa
mov
xor
xor
movsb
in
pop
aam
popa
shlb
pop
sub
cwtl
ret
lods
sbb
lds
shll
xchg
jge
ds
dec
lods
adc
fdivr
mov
cmp
push
test
orb
xlat
pop
add
xchg
test
test
mov
out
dec
push
pop
imul
test
loope
xchg
addl
arpl
push
stos
inc
adc
out
fwait
lds
rorb
jne
xor
sti
dec
or
nop
xor
insb
adc
xchg
mov
ja
test
jge
dec
aad
or
sub
insb
in
mov
inc
mov
jmp
js
cmp
ss
in
jns
sub
pop
xchg
fimull
mov
and
cmp
addr16
dec
ja
jns
stos
mov
cmovl
cld
mov
pop
in
fidivrs
push
mov
aas
jb
cmp
xchg
inc
clc
lods
xorl
out
ret
and
add
dec
push
in
cs
fstpt
insb
adc
jnp
xchg
pusha
jle
icebp
adc
fsubrl
adc
jg
sbb
aas
mov
ret
es
sbb
jae
outsb
out
push
mov
das
popf
jno
xchg
push
xchg
into
stos
fiaddl
fdiv
sbb
sub
imul
push
push
aas
imulb
mov
dec
push
hlt
leave
mov
xor
mov
imulb
iret
or
xchg
pushf
push
aaa
mov
inc
add
int3
test
pop
add
dec
fidivs
lds
test
scas
push
mov
int
lret
movsb
push
ljmp
mov
xor
sub
enter
daa
imul
cmp
icebp
jno
ret
jle
jg
test
pop
xorb
cs
push
sahf
shll
test
pop
jl
inc
jne
fsubs
cmp
js
pop
inc
pop
popf
jmp
push
fdivrl
stos
aad
sub
push
pop
cmp
add
push
js
movsl
mov
pop
ja
jl
xchg
and
or
stc
add
push
test
pusha
shl
adcb
fwait
push
dec
sub
rolb
adc
dec
push
popl
sub
aas
pushf
cmpsb
outsb
int
in
mov
dec
orb
jg
xchg
imul
pop
and
and
pop
mov
fbstp
xor
push
test
cmp
rcll
or
sahf
cmp
cmp
sbb
outsl
stos
dec
lods
loop
pop
lahf
stc
xlat
aad
fs
sarb
and
sbb
push
cmp
out
inc
sub
xchg
in
jno
ret
cmp
and
into
mov
gs
clc
in
dec
pop
dec
add
mov
xchg
imul
int3
frstor
inc
cltd
lods
adc
xchg
cmp
insl
push
xlat
mov
sub
loopne
mov
sti
pop
test
stc
in
repz
cmc
nop
in
mov
filds
neg
fnstenv
mov
repz
mov
add
jbe
push
dec
push
pop
loope
mov
test
mov
inc
jmp
in
add
inc
cmpsl
rcl
bound
dec
inc
hlt
inc
cmpsb
aas
xchg
test
jb
mov
dec
fdiv
in
dec
clc
mov
repnz
pusha
ja
cmpsl
flds
imul
sbb
mov
jnp
fistpl
fidivs
cmovp
mov
and
dec
out
jne
fdiv
shl
pop
std
xchg
mov
dec
mov
xchg
cmpsl
push
push
mov
xlat
adc
cld
adc
in
mov
xor
mov
repz
rolb
lds
aam
aam
ret
cmp
insb
mov
bound
xchg
mov
repnz
popa
mov
stc
lods
subb
mov
inc
mov
sbb
xcrypt-ctr
ret
add
ss
ss
inc
mov
inc
mov
pop
ret
fimull
xchg
add
sbb
loopne
sarl
mov
stos
ss
es
push
inc
xchg
push
fwait
sub
fldt
add
pop
outsl
push
xor
xchg
or
jle
xor
jno
mov
cwtl
xchg
xchg
dec
adc
mov
ja
cwtl
xor
pop
sbb
or
mov
fwait
inc
repz
push
bt
add
inc
push
addr16
sbb
mov
imul
in
sbb
xchg
sub
jne
ret
mov
xchg
mov
addr16
jp
notl
sub
jge,pn
sbb
and
cmp
mov
xorb
mov
inc
xchg
adc
lods
addl
push
out
daa
ret
sbb
mov
sub
cmp
popf
dec
and
jnp
aam
mov
inc
jle
cmpsl
cmc
in
xor
iret
sahf
cmp
ret
out
push
xor
inc
pop
add
push
jae
cltd
popf
cwtl
bound
adc
xchg
xor
sbb
lret
adc
scas
mull
cmpsb
rolb
arpl
sahf
sahf
cmp
pop
add
repz
enter
cld
inc
stc
and
sbb
xor
jl
das
or
adc
int3
jo
cld
pop
xor
ss
mov
jae
mov
xchg
and
jo
orl
ds
sbb
test
jge
cmpsb
push
enter
daa
push
cmp
out
jl
mov
movsb
push
lods
mov
popa
and
fadd
push
jno
lds
and
xchg
mov
popa
lcall
lods
sbb
pop
fsubrl
push
je
loope
xchg
daa
sub
jb
cmp
cld
cld
je,pt
sbb
jo
sub
test
xor
add
js
xor
dec
pop
inc
test
pop
ret
sub
out
movsb
pop
rclb
in
lcall
adc
xchg
push
sub
cs
mov
adc
push
or
scas
mov
push
pop
and
test
int
icebp
stos
fcomps
xchg
testl
dec
shrl
into
sbb
sahf
sahf
loopne
test
mov
or
je
sub
mov
xchg
loop
sub
mov
xlat
fs
rclb
push
test
add
mov
adc
cli
lds
jle
aam
push
or
into
test
cmp
loopne
push
sbb
aas
add
xchg
pop
imul
bound
dec
in
aad
mov
mov
adc
mov
sub
or
in
xor
adc
or
inc
sbb
loopne
out
rclb
dec
jl
inc
lea
fldcw
pop
les
dec
repz
push
add
sbb
cmp
test
xchg
jmp
adc
xor
dec
ret
sbb
mov
aas
ss
enter
push
divl
je
cmp
jecxz
pop
and
jp
jb
inc
cmp
cwtl
stos
mov
mov
xorl
dec
rcrl
jno
shlb
das
and
mov
sub
aas
notb
mov
cmp
dec
mov
shll
xor
push
cld
ds
pop
lret
iret
iret
fisttpll
pop
fs
mov
adc
rcr
into
ret
sub
or
dec
ret
lret
mov
and
insl
adc
cmc
xlat
xchg
sti
jle
ljmp
int
jmp
mov
add
push
das
push
pop
idivb
add
fisubrs
mov
in
push
movsl
enter
mov
test
push
rcrl
mov
inc
cmp
add
popa
leave
loopne
fwait
stc
pop
add
sbb
std
insb
xchg
xor
jmp
mov
xchg
add
pop
ja
or
dec
fs
inc
jns
inc
or
scas
pop
fwait
jbe
jno
mov
sub
mov
loop
cld
xchg
jns
ret
in
mov
xchg
js
mov
add
or
jno
jp
adc
mov
imul
jmp
add
dec
testb
insb
lock
popa
adc
stc
jo,pt
outsl
cmp
daa
inc
push
xchg
cmc
out
cmp
outsl
movsl
addr16
imul
in
and
in
jnp
andb
cs
jns
ljmp
iret
std
mov
jg
mov
icebp
jae
test
popf
mov
mov
ljmp
mov
sub
mov
lds
andb
add
sbb
mov
lods
hlt
ds
je
cld
xchg
hlt
or
sbb
rol
aaa
cmp
or
das
jb
pop
mov
pop
bound
fidivrs
insl
lds
or
jo
rclb
adc
and
repz
cmp
movsb
insl
insl
xlat
push
insb
xor
ss
jge
add
movsl
daa
imul
mov
jl
and
dec
xchg
lock
xor
mov
or
lahf
and
push
inc
out
test
lock
lock
xchg
test
cmpsb
in
ret
in
or
out
inc
pop
sbb
ret
push
mov
cwtl
sub
fs
jo
mov
xchg
push
jge
int3
jmp
rorb
and
mov
jo
add
out
xor
decb
pop
push
sub
pop
jmp
inc
sti
pop
push
fldcw
jp
test
cmp
faddl
sub
mov
push
addb
outsl
mov
xor
mov
mov
lods
dec
push
popf
imul
lods
adc
push
addb
cmp
fisttps
rol
decb
dec
test
cmpl
adc
push
bound
pop
mov
inc
xor
inc
cmove
adc
mov
lock
addr16
in
sbb
clc
and
cmp
nop
leave
or
pop
xor
addr16
cmc
dec
sti
lahf
loopne
push
insl
pop
mov
adc
call
adc
lea
and
lods
loop
mov
xlat
or
mov
mov
fwait
jmp
mov
gs
roll
dec
lods
add
inc
mov
push
inc
repz
ss
pop
inc
clc
sbb
mov
xor
push
pop
scas
pop
inc
pop
push
adc
cmp
das
jmp
push
into
aad
and
sub
test
scas
fisttpl
pushf
inc
je
aam
jecxz
xor
lea
cmp
mov
jl
dec
orl
and
pop
int3
lods
das
inc
push
dec
sti
lock
das
add
lahf
mov
mov
inc
rcll
jne
notb
ljmp
ret
aaa
cmpsl
push
int
icebp
test
mov
mov
mov
cli
xlat
mov
xor
shrb
pop
aam
add
mulb
cmpsb
mov
insl
cld
imul
cmp
sbb
lods
push
mov
mov
sub
dec
and
cmp
cwtl
pcmpgtw
pop
add
ds
cltd
adc
mov
les
push
push
inc
jp
repnz
xchg
shrl
rcrl
stos
adc
sahf
out
les
lds
adc
adc
adc
enter
pop
js
mov
sahf
sbb
dec
loope
test
mov
bound
and
or
movsb
insl
fwait
movsl
jns
push
push
in
and
cld
pop
ds
fmul
ja
daa
out
and
xchg
popf
icebp
mov
scas
aaa
mov
mov
push
jp
loop
mov
into
hlt
mov
cli
sub
dec
fsts
xor
lods
fistps
add
xchg
inc
add
jmp
test
insl
sbbl
xchg
out
dec
shrl
test
stos
jg
out
lret
mov
mov
jle
in
iret
in
data16
adc
inc
iret
pop
dec
out
sub
pop
shlb
outsl
xchg
fdivl
ja
push
stc
rsqrtps
jno
jmp
fisubl
add
into
imul
dec
scas
mov
fcompl
shlb
mov
repnz
int
leave
add
subb
ret
jmp
or
ret
mov
or
movl
inc
sbb
pop
xchg
inc
push
ficomps
gs
jae
sbb
lock
pop
and
push
movsb
clc
sub
push
mov
jecxz
jge
inc
mov
daa
push
and
jl
fs
push
jb
int
test
imul
aas
bound
mov
cmp
in
out
fsubr
js
pop
mov
pop
cmp
loope
jle
sub
sub
ds
xchg
jae
es
mov
sbb
mov
stc
leave
inc
mov
adc
sub
xor
shlb
mov
sub
dec
jl
in
jae
sub
xor
pop
adcb
inc
arpl
adc
mov
pop
mov
and
int
sbb
fcom
sbb
test
loope
rcrl
mov
movsb
sbb
xchg
pop
test
lea
add
stc
cld
mov
test
out
mov
jbe
std
mov
out
pop
cli
sub
xor
push
cmp
push
mov
xor
inc
into
dec
shll
loopne
mov
pop
adc
stos
adc
pop
add
dec
data16
xor
cmp
fisubrs
dec
add
mov
push
movsb
arpl
push
popf
bound
gs
push
jle
jge
ja
or
sub
fwait
outsl
scas
rol
je
dec
repz
xchg
push
sbb
cs
iret
roll
mov
xchg
pushf
mov
addr16
les
outsl
out
aad
scas
ret
inc
inc
test
jb
jns
dec
inc
out
je
shl
pop
mov
and
and
mov
in
mov
lcall
shrb
sub
rcrb
sbbl
ficoms
lock
fldcw
loopne
and
dec
lock
mov
bound
cmp
lcall
dec
cmpsb
es
addr16
jmp
cwtl
and
icebp
pop
and
cld
xchg
adc
lret
lods
add
mov
pop
mov
repz
mov
push
jge
rolb
movsb
or
mov
arpl
sub
cmpsl
clc
mov
adc
jne
in
popa
cld
outsl
movsl
lods
sarl
mov
dec
xor
adc
pinsrw
add
dec
cltd
cltd
dec
sbb
test
pop
mov
jmp
dec
frstor
mov
test
aas
nop
xchg
cltd
popa
sbb
imul
mov
inc
adc
add
lods
out
daa
mov
xchg
sub
addl
cmp
arpl
xor
jns
mov
mov
adc
pop
scas
mov
jo
dec
nop
faddl
jae
or
outsb
push
fwait
aam
push
push
clc
jle
add
push
std
xchg
mov
cltd
bound
sti
cld
jns
call
adcl
outsb
cmpb
dec
dec
addr16
movsl
fnstsw
and
aas
push
mov
rorb
dec
stc
jne
mov
pusha
xchg
mov
fbstp
mov
adc
scas
xchg
jae
nop
subl
jg
cmp
push
jmp
mov
dec
insb
mov
sbbl
adc
xchg
ret
iret
mov
scas
hlt
pop
notl
and
das
jae
lods
notb
mov
xor
flds
push
adcb
fwait
sub
fldcw
out
pop
fwait
jae
push
push
inc
mov
xchg
mov
leave
jl
push
hlt
aam
data16
mov
or
jle
int3
aaa
mov
subb
lods
fdivs
int3
xor
pop
rcr
faddp
dec
xlat
lds
and
into
clc
pop
scas
iret
inc
xchg
and
add
cmp
inc
and
test
jnp
pop
outsb
ret
enter
daa
xor
jg
dec
idivb
cmpsb
dec
gs
push
push
sub
xor
pop
xor
lahf
push
ljmp
push
xchg
lret
cmpsb
ljmp
js
fldt
push
jb
loope
stos
shrl
ret
into
call
xchg
movsl
ficompl
jnp
repz
cld
and
negb
in
push
add
jo
pushf
push
cmc
mov
adc
inc
sub
lock
loopne
push
push
jmp
fcoml
fbstp
pop
jne
adc
mov
cwtl
xor
cli
loopne
mov
flds
push
mov
add
mov
testl
das
fisttpll
and
sahf
leave
mov
mov
outsl
daa
repz
imul
stc
mov
sbb
adcl
sub
ss
jmp
mov
or
inc
movsl
and
pop
sub
xor
push
add
mov
frstor
test
or
or
imul
in
add
loop
sub
lods
mov
push
cmp
cmp
sub
sub
jno
sti
sbb
aam
test
gs
xor
pop
dec
imul
inc
push
fsts
fwait
les
push
repz
mov
bound
test
lock
mov
adc
xchg
gs
notl
sarb
adc
mov
ja
adc
vphaddubq
jp
fsub
cs
shufps
and
cwtl
ret
cmp
js
scas
dec
daa
jmp
outsl
pop
adc
inc
movl
mov
inc
inc
mov
leave
dec
cmp
mov
scas
neg
lcall
mov
leave
xchg
mov
xor
mov
lret
sbb
fmull
scas
push
scas
mov
outsl
xchg
push
and
sub
out
aam
xchg
ret
js
dec
lods
in
pop
insl
lret
clc
cli
xchg
ret
and
call
sub
mov
mov
pop
es
push
out
mov
mov
sbb
jmp
add
bound
push
fisttpll
mov
call
sub
sbb
stos
mov
insl
jns
stos
repnz
mov
sub
inc
popa
out
fidivrl
xor
add
xor
into
fbld
movsb
outsb
decb
jmp
pop
push
cmp
jg
dec
aas
mov
inc
ds
or
or
fwait
add
hlt
push
fwait
add
adc
out
xchg
lods
shll
add
jno
in
outsb
sbb
into
mov
insl
or
add
hlt
mov
add
mov
fmul
lret
dec
lahf
cmp
jne
sub
pusha
xor
fcoms
or
cltd
xchg
ds
and
insb
cmp
mov
sub
and
and
mov
daa
sub
jno
sbb
xchg
add
adc
push
iret
sbb
ret
xor
dec
xchg
cltd
jae
daa
fs
jg
jl
xor
jae
addr16
xor
pop
mov
push
cwtl
ficoml
mov
icebp
inc
scas
sbbl
shrb
mov
ljmp
hlt
pop
add
mov
dec
inc
add
pop
sbb
cmp
aaa
js
test
add
int3
sbb
rcrl
dec
fisubs
test
jo
mov
scas
scas
cmp
mov
std
inc
movsb
push
test
push
pop
lret
das
jbe
adc
sahf
jo
daa
data16
gs
jecxz
jl
popa
dec
dec
aam
mov
xor
stc
call
dec
push
mov
movsl
fcoml
imul
and
in
mov
in
ficoms
fcomps
push
fcmovu
loope
stc
jns
bound
imul
add
test
push
adc
sbb
or
xor
sti
dec
int3
dec
pop
pop
or
lds
into
inc
pusha
lcall
mov
inc
in
sub
pop
dec
outsb
mov
push
cs
out
jg
and
mov
or
mov
shll
repnz
cmpsb
insb
push
int
into
lahf
fadds
pop
testl
inc
rorl
sub
sbb
mov
test
push
xchg
out
loop
jns
stc
push
bound
fistl
fidivs
ss
mov
mov
das
icebp
out
es
xchg
mov
dec
cmp
insb
loop
adc
mov
movsb
leave
icebp
loopne
orb
push
daa
adc
loop
imul
mov
data16
bound
cmp
xor
bound
cwtl
lock
fcoml
test
mov
nop
xor
dec
lret
inc
fnstenv
jne
mov
repz
mov
call
int
inc
pop
pusha
shlb
cmp
pushf
or
pusha
pop
cs
cmc
cmp
addr16
jb
lods
cmp
das
gs
lds
or
xchg
sub
fdivr
leave
cwtl
xchg
mov
testl
adc
cmpsb
fildl
or
in
lcall
sahf
je
mov
mov
pop
movsb
roll
jbe
mulb
es
aam
and
pushf
test
cmpsl
gs
fistpll
or
mov
mov
inc
sbb
jbe
mov
mov
jne
out
inc
aam
mov
es
mov
push
clc
xor
mov
ljmp
push
lods
xchg
push
dec
mov
xchg
mov
and
lret
jb
add
test
loop
push
dec
push
mov
ret
fnsave
sbb
or
mov
lcall
or
in
push
push
xchg
mov
lds
bound
xor
or
or
ja
mov
cmpsl
inc
push
dec
push
stos
fs
and
add
dec
xor
or
jle
fwait
xor
das
add
or
mov
push
jns
sahf
jg
push
pusha
xchg
mov
gs
dec
adc
or
pop
vpsraw
xchg
mov
inc
inc
mov
sbbb
jne
add
pusha
int
inc
fbstp
inc
xchg
mov
test
xchg
or
int3
or
in
sub
fs
movsb
push
addr16
cmp
adc
insb
xchg
jne
jnp
xchg
push
jle
jl
in
es
iret
jns
add
incl
pop
gs
pop
inc
nop
in
lret
in
push
inc
cmp
popf
pop
xor
movsl
inc
int
fidivrl
jbe
sbb
dec
mov
scas
out
loop
jmp
or
mov
cmp
mov
hlt
push
or
fildl
test
or
hlt
es
aaa
leave
and
dec
push
ret
add
adc
int3
pop
push
lret
pop
jle
push
lds
test
stos
and
xor
movsb
cltd
arpl
push
test
push
jbe
xlat
dec
jge
addr16
enter
daa
gs
cmp
mov
pop
dec
inc
xor
inc
xor
xchg
mov
lahf
popf
jnp
push
nop
jle
test
sbb
cmp
lcall
movsb
outsl
mov
xchg
std
pop
pop
das
or
xchg
cmc
inc
loope
insb
mov
cmp
xchg
and
movsl
call
aam
mov
pop
addb
cmpsl
sbb
sbb
repz
mov
adc
pop
test
int3
pop
dec
pop
mov
push
cltd
pop
mov
sub
cltd
mov
pop
cld
aas
adc
out
push
das
mov
fs
call
sub
and
pop
fadds
test
adcb
imul
stos
fistpl
and
daa
mov
xchg
dec
add
test
xchg
inc
xor
sub
loop
dec
mov
and
sub
cmp
ss
jae
repnz
lahf
mov
jmp
sar
add
xor
pop
enter
fmuls
jg
outsb
into
repz
cmc
imul
loopne
or
lock
lods
mov
add
xchg
xor
scas
lods
jle
xor
xlat
push
flds
sub
jbe
in
inc
lret
sar
iret
pop
dec
push
xor
sub
push
push
cli
dec
sub
inc
in
adc
sbbb
xchg
movsl
repz
pop
sbb
lahf
adc
add
adc
jp
jmp
nop
sbb
cwtl
mov
aaa
inc
xchg
jbe
aas
push
push
adc
adc
cmpsb
lcall
dec
mov
mov
lods
lea
jns
push
mov
daa
mov
std
andl
mov
mov
push
lock
int3
das
jge
cld
mov
outsl
sti
out
ffreep
inc
rorl
xor
arpl
cmp
adc
xor
icebp
loope
pop
cld
adc
adc
or
enter
out
mov
lods
movsb
scas
sar
or
aam
pop
icebp
ret
xchg
in
es
xor
das
dec
clc
jo
jmp
ss
out
ljmp
jo
add
mov
mov
or
movsl
xchg
in
loope
cmp
adc
sbb
mov
lock
push
je
cwtl
fstpl
xlat
cmp
and
rol
movsl
push
pop
ret
shrw
push
push
cli
xchg
lods
roll
jge
pop
lcall
popf
jmp
or
jae
lock
xchg
dec
mov
loopne
push
ja
or
inc
insb
movsb
insb
or
les
popa
mov
push
loope
cmp
push
pushf
inc
fldt
push
in
imul
sarl
push
into
les
jp
es
mov
mov
jle
gs
divl
inc
push
pusha
push
xor
xchg
mov
movsb
jmp
aam
inc
sbbl
out
add
sub
lahf
popa
ds
cmpsb
lds
dec
dec
jne
daa
add
insb
std
xchg
pop
jnp
mov
daa
in
adcl
fcomps
mov
inc
fwait
mov
jae
out
push
add
or
jae
inc
or
cmp
insb
xor
cmp
push
imul
push
xor
cmp
mov
pop
shl
nop
lcall
mov
sbb
mov
loope
divl
dec
aaa
div
add
inc
dec
pop
add
int3
repnz
and
inc
mov
lds
arpl
insb
sub
loopne
cwtl
cmp
dec
les
fcmovnb
jbe
adc
xchg
scas
and
fs
cmp
sbb
int
insb
jl
lods
test
fisttps
push
incb
xor
das
mov
push
arpl
xlat
push
out
incb
add
cmpsb
jae
shr
push
mov
push
mov
push
lds
cmp
ds
sbb
movsl
out
adc
rclb
inc
pop
sbbb
add
mov
lods
add
sub
or
out
aad
pop
lods
inc
or
pop
int3
jo
lcall
inc
fcompl
pushf
xchg
outsb
subb
orb
test
push
repz
pop
inc
xchg
or
push
lods
push
mov
mov
loope
mov
cmp
sahf
inc
sub
mov
out
mov
push
ficomps
jns
sbb
mov
mov
xchg
setns
fcmovbe
loop
pop
mov
fs
sub
adc
adc
cmp
repz
mov
cli
idiv
adc
mov
and
into
pop
aas
cmc
xor
loopne
scas
test
and
out
js
xor
icebp
loope
cmp
ret
add
cltd
mov
gs
mov
sarl
add
sub
mov
cwtl
sti
es
jecxz
out
cmp
adc
nop
jmp
ljmp
mov
int3
les
inc
adcl
int3
ret
ss
lret
xchg
dec
pop
jge
adc
test
pushf
arpl
jmp
test
aad
int3
mov
aas
lock
jb
scas
sub
je
mov
sbb
mov
lea
dec
xlat
mov
ja
mov
scas
cmp
call
jle
pop
sti
popa
addl
ret
sbb
das
pop
push
mov
es
andb
enter
and
cmpsb
cwtl
dec
std
and
mov
test
mov
add
lods
mov
in
call
mov
int3
mov
shrb
test
int3
aas
jbe
and
test
int3
clc
stos
bound
popfw
ljmp
push
lods
insl
inc
sarb
or
push
andb
cmovo
add
mov
test
and
push
aaa
mov
test
xchg
out
cmp
shll
push
outsb
sbb
mov
andl
add
mov
xor
fdivl
mov
mov
xchg
aad
pop
fwait
add
fwait
dec
sbb
inc
add
or
fidivrs
fwait
nop
scas
fstpl
test
add
ret
dec
jbe
xor
les
jecxz
in
sbb
jae
xchg
testl
jno
shll
sbb
adc
mov
mov
and
mov
andl
pop
scas
xchg
popa
push
repz
lahf
cmpsb
cmp
cmc
je
fldenv
aaa
push
in
stos
stos
mov
hlt
std
insb
push
mov
jle
dec
insl
in
inc
mov
push
push
iret
aaa
cmp
pop
rcr
scas
inc
cmpsb
lret
inc
jae
sub
push
enter
test
pop
xchg
inc
mov
ficompl
cltd
xchg
xchg
xchg
lret
mov
mov
daa
es
lods
mov
add
push
adc
jecxz
mov
hlt
add
cmp
les
push
jo
or
push
mov
mov
inc
or
int3
fstpl
hlt
fimuls
lds
pop
pop
scas
dec
sub
cmp
push
push
inc
lret
enter
div
xor
sub
daa
arpl
xchg
cmp
lcall
adc
and
push
loope
adc
lret
lahf
insl
test
mov
insl
inc
in
stos
jb
testb
js
pushf
mov
push
dec
ret
loope
mov
inc
cmp
mov
pop
shrb
xor
sub
shrl
fcomps
lods
cwtl
sbb
shll
ss
dec
dec
cmpsb
lcall
mov
sub
push
sbb
and
fucomip
mov
mov
mov
pop
repz
into
shll
pop
add
int
mov
testl
pop
mov
cmc
push
push
pop
mov
xor
or
outsl
mov
xchg
dec
stc
sbb
fs
fcoml
jp
bound
cmp
or
inc
inc
je
sub
into
cmp
mov
pop
into
mov
sbb
pop
inc
push
cli
adc
adc
fidivrl
add
cmp
data16
jecxz
lods
dec
enter
fst
test
sub
repnz
sbb
mov
adc
dec
sbb
dec
dec
out
cld
inc
adc
fldz
scas
repnz
test
imul
ljmp
jns
cmp
cmp
dec
mov
adc
cs
or
int3
sarb
jb
jle
dec
xchg
icebp
inc
je
dec
enter
adc
adc
scas
cwtl
outsl
bound
cs
dec
rcl
adc
ss
subl
das
cmp
mov
fnsave
pop
and
xchg
shr
fcmove
imul
jg
std
leave
loope
dec
rorl
in
jmp
icebp
mov
cld
imul
lret
fsubr
push
mov
sub
pop
mov
jmp
movsl
rcrb
push
xchg
xchg
jp
ret
mov
arpl
mov
jmp
fists
mov
andb
imul
xchg
mov
jp
jno
pop
fmull
lahf
jae
add
cltd
insl
cltd
pop
push
adc
cli
pop
arpl
out
mov
xchg
mov
shll
push
sbb
out
push
mov
stc
add
int3
xor
push
or
imul
mov
sahf
dec
dec
inc
or
rorb
ja
cmpsb
rorb
dec
xchg
inc
lcall
fwait
mov
test
add
push
push
adc
bound
sub
jns
cld
push
in
add
mov
sti
int3
mov
insb
loop
addr16
jp
add
mov
xchg
cmp
sub
fucomp
aaa
pusha
sahf
and
loope
xchg
xor
mov
call
jbe
cmpl
out
xchg
and
adc
ret
xor
mov
insb
rcll
jnp
data16
and
jp
xor
insb
ret
lock
or
jmp
xchg
mov
push
mov
shlb
push
or
fcmovbe
push
mov
call
xchg
scas
mov
mov
adc
pop
or
leave
iret
lea
arpl
sub
add
or
and
iret
lret
pop
or
mov
add
out
and
mov
jo
adc
push
das
in
cmp
movsb
cmp
dec
jbe
fistpll
enter
daa
bound
cmp
iret
lods
jno
push
mov
add
dec
nop
orb
lea
gs
lahf
cli
inc
ficoms
xchg
mov
push
jge
xor
cmpsb
jns
enter
cmpsl
js
mov
push
jg
loope
popf
sahf
sub
add
cmp
mov
movsl
std
test
push
into
test
sbb
aaa
adc
stos
xor
push
push
pop
cli
push
lds
adc
mov
lret
lcall
popf
fsubr
mov
sub
insb
das
adc
inc
aas
or
mov
stos
push
mov
popf
inc
and
aaa
fwait
push
mov
icebp
int
in
push
fdivs
in
xor
mov
mov
in
jmp
mov
adc
sahf
clc
jl,pn
movb
outsl
sbb
loop
or
inc
xchg
fs
push
lods
ss
and
jmp
ja
cli
pop
or
xor
xor
sub
and
int3
subl
rclb
sub
adc
push
add
call
sarb
add
js
mov
lods
xor
dec
xlat
ret
push
fldcw
jmp
scas
mov
mov
sti
test
into
xor
dec
gs
addl
inc
and
iret
push
les
push
int3
xchg
insb
mov
jl
adc
std
leave
xchg
and
sub
loop
xchg
imul
add
arpl
loope
jnp
out
fs
ficoml
jb
andl
je
cs
jecxz
xlat
inc
xchg
xchg
pop
lea
adc
mov
fld
mov
jno
subl
rcr
pop
repnz
inc
mov
inc
or
cltd
lock
xor
das
sbb
mov
xchg
lret
sub
sarl
adc
sub
cld
std
jo
mov
mov
mov
pushw
lods
cld
xchg
jne
lret
inc
add
mov
inc
mov
add
or
not
jb
stos
sub
int3
mov
bound
xor
inc
lret
mov
insl
dec
pushf
popa
clc
and
cmp
ljmp
sub
aas
mov
lock
ss
paddd
sub
xchg
xor
cltd
stc
out
mov
pop
cmp
mov
adc
test
movsb
loope
or
adc
leave
sub
stos
popf
fstpl
xchg
sar
lock
imul
push
jp
or
dec
fidivl
gs
sbb
mov
out
adc
xorl
repz
or
mov
push
lret
add
jns
mov
bound
push
add
sub
sbb
movsl
sbb
shll
cmp
mov
jns
mov
add
divb
push
in
cmp
fcomip
mov
sbb
xchg
xor
push
mov
sti
or
sub
push
sbb
arpl
stos
movsb
daa
sub
insb
inc
jge
ds
lea
fistpll
inc
jmp
pop
adc
subb
inc
sbb
inc
mov
test
dec
sbb
mul
outsl
push
mov
repz
mov
sbb
cltd
mov
scas
jb
pop
push
add
call
or
mov
leave
inc
and
arpl
aad
inc
adc
push
sub
int
loopne
inc
aaa
xor
add
xor
int3
mov
in
pop
fimull
lds
ljmp
xor
and
adc
movsb
lds
inc
jbe
je
jge
or
enter
daa
popa
sbb
cmp
jno
xchg
sub
xchg
jbe
push
cmpsl
clc
iret
xor
add
lods
push
fcoml
test
dec
lock
or
sub
inc
stos
cmpl
lods
fsubrl
imul
jns
cmc
cmp
insb
and
scas
shll
shlb
pusha
mov
push
mov
sbb
push
roll
ja
jbe
xchg
push
xchg
xchg
pop
and
sub
xchg
dec
lcall
push
fcompl
cmp
clc
adc
pop
pop
sbb
sbb
mov
aad
mov
outsl
and
dec
rorl
mov
push
mov
lods
int
sub
cld
testl
stos
lret
inc
add
clc
icebp
sahf
fwait
repz
test
jo
cmpsl
cmp
add
cli
fs
sbb
ss
fnstsw
cltd
push
out
sub
shll
sub
sbb
push
push
or
jmp
into
jg
jnp
xchg
cltd
loopne
or
adc
outsb
sub
adc
lret
fiadds
dec
cld
aad
cmp
and
outsb
jns
xlat
add
popf
sub
cwtl
mov
repz
jmp
xor
mov
mov
dec
movsl
xlat
sti
inc
cmp
vpsubq
leave
inc
ljmp
cld
sub
dec
fistl
adc
jmp
jmp
testl
inc
add
aas
int
dec
jb
mov
fidivs
sahf
jecxz
and
fistpll
ds
rcrb
mov
jmp
add
fimull
pop
jge
in
roll
loop
popf
pop
int3
das
stc
js
mov
dec
add
lahf
xchg
rorl
stos
std
pop
fildll
orl
cmpsl
pusha
xchg
popf
mov
cmp
jmp
lret
mov
sahf
mov
mov
out
sub
rcl
dec
aad
mov
in
mov
lahf
and
mov
xor
pop
addr16
ljmp
sti
lods
scas
aaa
jnp
mov
xor
push
adc
minps
rolb
pop
push
daa
cltd
lret
test
cmp
and
fnsave
imul
and
pop
outsl
xor
out
fdivrl
rolb
or
xor
test
xor
cmpb
outsl
mov
mov
mov
and
les
pop
int3
and
ja
push
in
dec
icebp
dec
nop
inc
enter
add
lahf
fwait
sbb
xor
add
aam
int
shrb
jns,pt
sbb
shll
aas
js
mov
pusha
mov
loope
xor
testb
stos
stos
jbe
xchg
std
mov
insb
lcall
icebp
shrl
jne
and
pop
fists
mov
pop
jmp
add
loopne
xchg
ja
out
divb
mov
mov
ficompl
andl
jnp
sbb
scas
in
adc
sbb
fs
lcall
push
xorb
pusha
push
adc
cmpsb
popf
push
dec
subb
jb
or
mov
cmp
rclb
mov
inc
nop
scas
aad
pop
push
dec
fwait
rorb
jno
pushf
int3
repnz
inc
hlt
loope
jmp
inc
pop
xorb
or
sbb
mov
cmpsb
add
xchg
lods
int3
sahf
inc
fs
or
add
rolb
jo
mov
scas
call
adc
cmp
stc
rcll
sub
fnstcw
insb
jp
sbbb
daa
pusha
je
cmp
adc
jl
ss
dec
outsb
xor
mov
ret
cmp
pop
test
adc
mov
inc
cmpsb
jg
addr16
daa
xor
js
jle
pop
push
adc
imul
in
sarb
xchg
fistpl
movsl
or
stos
sar
xor
mov
std
andb
sbb
mov
sub
cmpsb
xor
jp
loope
into
pop
dec
imul
pop
enter
lds
push
dec
call
xlat
sub
mov
xorb
jg
mov
cmc
mov
jo
mov
cmp
push
mov
push
jb
test
iret
stos
lret
pop
rcll
adc
sbb
lods
inc
test
lods
xor
jne
outsl
inc
repnz
jo
imul
push
push
rcll
cmpsb
cmp
add
jp
xor
aaa
sbb
cli
ret
out
xor
mov
cmp
jg
or
and
dec
repnz
mov
je
adc
repz
insl
jae
insw
jo
faddp
inc
data16
add
mov
sub
push
loopne
push
mov
jmp
loop
xchg
jp
xor
sub
dec
jo
add
and
fsts
fdivrs
repz
js
xchg
repnz
dec
sbb
push
subb
movsl
dec
pop
xchg
inc
out
inc
mov
mov
xchg
jmp
outsl
sub
sbb
lahf
mov
push
and
dec
stc
inc
xorb
jecxz
mov
cwtl
mov
cwtl
clc
pop
out
mov
dec
pushf
mov
add
sbbl
inc
dec
pop
xchg
lock
xchg
mov
fadds
pusha
mov
xchg
test
rcr
mov
push
std
mov
push
pop
cmpsl
pop
mov
mov
adc
jg
in
xor
lods
mov
mov
and
push
mov
dec
ss
rcrb
pop
mov
mov
cwtl
aam
and
popa
mov
lcall
cmp
xchg
jno
fsubr
or
dec
push
lods
sbb
movsbl
jno
cmp
in
es
mov
add
cltd
add
jp
sub
pop
push
inc
fstpl
xor
pop
test
sbb
mov
pop
sbb
cmp
out
aas
mov
xchg
popa
and
add
idiv
xor
lret
xor
xor
testl
mov
mov
fstpt
pop
xchg
scas
dec
in
lea
jo
or
lea
push
adc
cwtl
notb
mov
fadds
scas
mov
sahf
jns
push
call
xchg
mov
push
mov
shrb
fsub
or
jno
mov
into
lea
xchg
sbb
loope
pop
dec
aam
pop
jne
pop
loopne
outsl
pop
mov
xchg
lods
dec
cwtl
jmp
lret
frstor
out
push
add
ja
push
loope
xchg
stos
mov
and
movsb
cmp
pop
loop
mov
in
xor
ret
sbb
ret
ljmp
ja
jae
in
mov
aam
clc
popf
inc
xchg
jns
iret
out
inc
xchg
jmp
xor
sbb
cmp
imul
scas
cmp
loopne
xchg
movsl
xlat
shrb
iret
mov
das
sub
or
sub
xor
cmc
and
jo
or
push
adcl
add
push
int3
mov
pushf
pop
cmp
lds
aas
jo
sti
add
mov
leave
adc
sub
aam
cmpb
adc
jnp
andb
push
ja
lret
jno
vhaddps
scas
int
insl
xor
xor
add
push
sub
test
ficomps
inc
sub
int
add
in
push
mov
jae
xchg
add
push
pop
mov
mov
pop
inc
cmp
sub
cmc
mov
lret
rcr
sbb
incb
popf
jb
add
xchg
jmp
movsb
jp
pop
outsl
insb
lds
cmpl
inc
in
or
js
inc
push
mov
xchg
outsb
jno
pusha
adc
xchg
leave
dec
jg
gs
mov
adc
mov
mov
filds
add
inc
je
push
mov
pop
mov
test
lret
nop
shrl
push
sahf
loope
lea
pop
rol
pop
add
imul
adc
pop
xchg
cmp
fisubrl
out
and
int
inc
xor
lods
push
push
into
inc
mov
cmc
adc
std
sahf
pop
mov
lods
clc
imul
arpl
inc
xchg
jp
call
imul
xorb
inc
xchg
mov
and
jne
sti
xchg
test
jns
xor
popf
nop
xor
stos
inc
pop
adcb
lret
xlat
jmp
repz
mov
call
inc
hlt
xor
js
adc
in
jmp
ret
ret
sbb
cmp
aas
or
ss
jo
dec
je
rcrl
cmpsb
xchg
fwait
xor
lea
into
or
nop
dec
sub
xor
testl
push
pop
sub
push
inc
popf
push
pop
lock
out
das
mov
mov
mov
push
loopne
sub
sub
cmc
movsb
and
gs
cmp
movsl
fisubs
arpl
push
icebp
jmp
int
pop
push
sub
xchg
fdivrs
pop
mov
daa
mov
addr16
adc
mov
adc
lods
rol
lock
es
icebp
out
insl
add
and
ljmp
mov
mov
xchg
and
sbb
bndstx
dec
add
popa
pop
test
sub
fldl
movsb
adc
push
add
into
cmc
loop
lds
or
mov
into
test
call
pop
std
xor
mov
xor
dec
mov
mov
cwtl
pop
inc
ret
imul
orb
lret
rorl
fwait
jnp
pop
push
mov
inc
add
mov
sub
pop
jns
xor
mov
xchg
insb
mov
xchg
icebp
mov
pop
pop
inc
addr16
cmpsb
mov
inc
jno
mov
push
out
dec
mov
add
out
punpcklbw
out
fisttps
mov
les
xchg
xchg
std
push
xorl
sub
add
push
stos
std
pop
aam
mov
and
jg
sbb
jmp
jl
in
in
adc
mov
ret
and
inc
iret
inc
fnsave
jae
test
xchg
xchg
popf
insb
lret
push
push
insl
push
ficompl
adc
xchg
imul
scas
fwait
rcrb
push
out
inc
loopne
mov
and
leave
stos
xor
arpl
imul
sar
or
adc
aaa
jo
xchg
or
call
in
int3
je
inc
pop
addr16
mov
jo
push
ds
cmpsb
pusha
mov
cmp
mov
push
shrl
jbe
in
jge
ficoms
jbe
test
pop
mov
cmp
cmpsl
insb
jno
cltd
jl
jb
dec
dec
repnz
push
cmp
and
rcll
lahf
jbe
adcb
cmp
and
push
test
cld
adc
cmc
icebp
movsb
js
dec
cmp
shlb
push
movsl
loope
adcl
sbb
movsl
sbb
outsb
orb
add
test
and
addr16
pop
xchg
push
outsl
sub
xor
pop
mov
sub
fcompl
ret
aam
pop
adc
lods
pop
fdivrl
adc
mov
mov
sub
mov
and
and
rolb
mov
int
dec
ret
or
idivl
cmovns
push
imul
sbb
stc
pop
test
cwtl
or
outsl
adc
clc
stc
and
lods
adc
push
cmp
aad
mov
cmp
xchg
xor
lods
and
cmp
and
out
sub
lahf
cmc
fcompl
test
xlat
adc
ficoms
push
clc
imul
lods
add
cld
push
into
data16
push
mov
iret
push
push
cmp
inc
rcl
mov
mov
cmp
call
sti
inc
shll
gs
pop
nop
or
jl
jno
mov
add
rep
imul
cld
sbb
mov
pop
outsb
adc
lcall
mov
add
aad
scas
addb
adc
stos
je
jb
xchg
xor
je
or
sahf
dec
add
adc
loopne
outsb
fadds
dec
int3
mov
add
popf
pop
inc
jge
int
aaa
inc
and
jno
scas
dec
push
xchg
stos
mov
jo
inc
and
mov
sarl
arpl
cmp
sbb
or
cmp
rclb
pop
je
mov
ret
cld
inc
inc
add
add
add
scas
xor
pop
xchg
sub
mov
es
pop
push
insl
jmp
mov
cltd
ljmp
push
lods
out
mov
add
popf
push
ret
and
xchg
cli
pop
cltd
outsl
mov
mov
lret
push
leave
adc
and
add
xchg
arpl
and
mov
xor
add
fsubl
pushl
mov
mov
fisubs
xor
xchg
out
pop
fmuls
mov
mov
pop
std
jno
ja
mov
dec
lret
inc
lea
or
fnsave
push
push
movsl
movsl
add
in
jecxz
insl
loope
loopne
sarl
adc
in
pop
pop
xchg
sub
and
mov
push
ljmp
inc
xor
sbb
mov
mov
jge
jne
jmp
mov
insl
pusha
loopne
push
and
jmp
popa
jno
addl
out
jno
sub
cmp
dec
push
pop
aas
xchg
stos
jo
js
enter
ljmp
jle
xchg
mov
ds
fistl
jns
imul
inc
popf
ret
jo
sbb
inc
fidivs
arpl
push
pop
ds
xchg
out
mov
add
push
xchg
cltd
xchg
fwait
sub
mov
aas
scas
mov
push
and
mov
aad
fmulp
and
std
arpl
test
or
int3
xchg
cmc
aaa
das
jg
or
int
add
pop
or
std
mov
push
rolb
addr16
xorl
ja
and
jno
cmp
adc
movsb
icebp
and
lock
push
jge
loopne
lods
enter
daa
pop
xchg
mov
jno
xchg
sub
dec
mov
cmp
xor
insb
mov
mov
sub
test
je
push
inc
inc
aas
fbld
fsubl
push
js
xchg
outsl
pop
punpckhwd
loope
adc
sub
dec
mov
cmp
movsl
and
sub
sbbb
jo
dec
punpckhwd
mov
mov
sub
sub
push
jle
jns
jp
inc
push
insl
lcall
sub
inc
loope
sub
mov
adc
mov
jg
rolb
mov
xchg
jno
popa
inc
cltd
push
shl
int
sbb
hlt
xchg
lret
mov
fadd
nop
mov
xchg
sbb
sub
sahf
daa
mov
test
adc
adc
jl
sub
fnstenv
mov
hlt
fwait
sbb
push
and
ss
in
xchg
cmp
rorb
adc
pop
jp
xor
cmp
into
or
jo
jb
fcompl
mov
hlt
imul
mov
dec
and
lods
mov
cmp
pop
scas
adc
sbb
sub
mov
lahf
dec
xor
out
mov
xchg
gs
nop
das
nop
out
push
dec
and
fnstcw
pop
and
in
or
rclb
mov
call
inc
sbb
jp
inc
ror
adc
push
cs
dec
aad
mov
inc
outsb
mov
cmp
lcall
add
xchg
sti
adc
lea
mov
push
roll
loopne
adc
pop
stos
lock
push
push
mov
sub
cltd
mov
lock
in
das
jne
in
scas
mov
stos
and
mov
icebp
idivb
sub
mov
test
xor
pop
sbb
icebp
cltd
fsubl
insl
or
lret
jb
sub
jne
or
pop
movsl
mov
mov
xchg
mov
aam
mov
test
lret
insl
shlb
clc
dec
xor
cs
inc
popa
stc
dec
fldcw
es
int3
mov
or
jge
add
and
rolb
test
cltd
push
notl
arpl
rcrb
test
xor
test
sbb
xor
pop
sbb
stos
dec
jp
out
push
dec
xor
push
data16
call
mov
inc
or
xor
das
mov
xchg
dec
push
dec
mov
fcomps
mov
ja
inc
and
xor
ret
adc
stc
mov
add
inc
adc
out
dec
sti
sti
bound
pop
jns
add
in
xor
jnp
outsb
mov
cltd
or
dec
push
mov
and
mov
je
mov
cs
mov
jne
dec
add
inc
mov
mov
xchg
es
push
jmp
sub
inc
adc
cmc
out
sub
sub
ja
sbb
pop
aas
stos
jecxz
mov
insb
push
imul
cmc
mov
in
push
and
add
testb
rep
add
test
push
sbb
int3
cmp
negl
add
clc
xchg
repnz
fstpl
pop
push
imul
scas
popa
test
push
ds
mov
sub
inc
leave
cltd
fiadds
or
and
inc
and
add
xchg
out
cwtl
or
data16
add
mov
int3
dec
mov
pop
lds
out
faddp
popf
sbb
out
jo
inc
mov
fs
jmp
cmp
mov
xorl
jge,pn
fisttps
pop
add
cmp
in
test
pop
dec
sub
sub
push
das
pop
xor
pop
cmp
lahf
mov
sbb
xor
test
aas
js
inc
lds
cmpsb
mov
xchg
js
outsl
mov
push
nop
push
sub
add
cmp
fidivrs
pop
mov
daa
shrb
lcall
sbb
sbb
lds
leave
add
in
mov
pop
in
popa
sub
push
jmp
lcall
xchg
fdiv
lret
sub
sub
or
adc
loop
inc
jg
je
mov
mov
mov
fiaddl
jo
or
les
rcr
lea
mov
roll
outsl
add
mov
jecxz
sahf
lret
test
stc
mov
outsb
sbb
outsl
mov
cmc
lods
stc
nop
jp
fs
mov
ss
jecxz
cmp
lret
ja
out
ja
cli
adc
cmp
sbb
or
mov
out
sub
cmc
push
mov
pop
sbb
outsb
adc
nopl
sub
xchg
cmp
add
mov
int3
xchg
jmp
popf
xchg
jle
xchg
lods
pop
xlat
cmp
nop
addr16
out
in
or
pop
sti
sahf
insb
mov
push
dec
mov
mov
pop
les
je
fldcw
and
clc
sbb
repz
mov
sbb
repnz
pop
dec
clc
adc
inc
arpl
fwait
mov
adc
mov
mov
stos
jb
aad
aam
mov
sbb
rcrl
fs
loop
xor
in
shlb
rcll
pop
dec
inc
push
xor
pop
push
lcall
fistpll
xor
lock
adc
push
loope
mov
fidivs
rcll
mov
mov
pop
out
xchg
dec
push
sub
cld
add
cld
cwtl
cmpsb
xor
loope
call
mov
and
mov
repnz
add
aam
inc
imul
dec
sti
insl
mov
das
clc
adcl
rcrb
fldcw
popa
adc
mov
sub
ret
jl
and
pop
push
sha256msg2
cltd
fstl
test
sbb
dec
and
xchg
add
sbb
sbb
roll
std
pop
nop
movsl
stos
aaa
jg
out
lret
sub
xchg
jge
into
add
mov
scas
out
jge
inc
and
xor
and
mov
lds
sahf
pop
jae
mov
dec
mov
fiadds
into
js
fwait
jge
fwait
or
sbb
pushf
mov
add
fwait
movsl
clc
out
sub
push
bound
mov
jb
inc
bound
lret
mov
leave
add
dec
pop
addr16
arpl
mov
popf
repz
dec
pusha
pop
xor
or
fildll
int3
sub
stc
insl
xchg
notl
popa
das
or
rclb
push
fnsave
stos
push
loop
and
xchg
xchg
insb
sar
jnp
int
jle
movsb
and
pop
stos
adc
das
mov
adc
aaa
cmpsl
inc
arpl
jae
jmp
push
loopne
pop
popf
loope
aaa
push
xorl
xchg
dec
mov
imul
push
scas
les
push
scas
or
xchg
mov
mov
xor
leave
adc
push
arpl
popf
inc
es
or
inc
clc
out
lods
xchg
push
int
std
add
lahf
out
xor
int
fisubs
lds
xor
fisttpll
inc
mov
and
pop
scas
cmp
call
inc
push
mov
ja
jge
mov
enter
daa
pop
in
icebp
cmp
lock
sub
cltd
push
leave
push
stc
adc
mov
mov
out
mov
test
or
adc
nop
frstor
stos
cmp
js
pop
fists
adc
sub
mov
ds
push
rolb
mov
add
pushf
sbb
mov
xlat
jne
push
pop
or
mov
or
popa
mov
outsl
ret
cmp
lcall
jo
fwait
mov
outsb
std
int
adc
std
cltd
cmpl
sub
mov
out
mov
jns
and
push
push
test
mov
idivl
lret
mov
mov
dec
lods
sbb
pop
pop
sahf
insl
xchg
leave
test
in
xor
mov
outsl
fwait
imul
inc
popa
push
or
dec
adc
sbb
ss
dec
mov
stc
push
cmp
cli
ret
xor
xchg
mov
or
imul
rorl
shl
test
fstpl
movsl
sub
jecxz
mov
adc
cmpb
dec
jg
lods
test
pop
xlat
jl
xchg
adc
inc
in
jne
cmp
loopne
sub
gs
push
xlat
nop
pushf
cmp
sbb
fldenv
addb
mov
bound
jne
js
insl
pop
push
xchg
pop
adc
adc
jns
pushf
mov
mov
rcl
shlb
inc
movsb
pop
xchg
aas
xchg
jb
dec
mov
je
pushf
cwtl
jecxz
jg
cmpsl
pop
pusha
lea
inc
cwtl
lahf
insl
xorb
mov
inc
dec
sub
mov
mov
testb
ds
add
aam
mov
and
les
shll
lret
testb
pop
std
add
int
gs
call
mov
inc
pop
ss
ret
adc
lret
push
add
mov
test
add
frstor
jecxz
jmp
aaa
ret
xor
aam
and
rclb
insl
sahf
jo
clc
mov
pandn
dec
imul
lods
xor
and
and
xor
es
jno
cltd
adc
dec
test
sbb
loope
adc
fstpl
cmpb
lods
adc
sbb
mov
shrl
sti
sbb
stos
es
scas
out
cs
xchg
xchg
les
add
sub
pushf
inc
or
jp
xor
mov
enter
subl
fdivl
inc
push
shlb
aaa
out
push
aas
lods
pop
add
testb
or
bound
shlb
iret
in
xchg
sbb
mov
insl
jge
lret
jl
or
addr16
or
mov
or
mov
or
lods
dec
inc
mov
dec
pusha
jbe
sbb
lret
xchg
int3
outsl
movsl
jmp
ret
xor
nop
in
add
stos
leave
int3
inc
and
outsw
jnp
mov
adc
push
mov
adc
mov
ret
pop
ret
inc
or
jae
xchg
sahf
push
mov
gs
push
add
mov
xchg
mov
inc
loope
add
dec
scas
daa
or
push
neg
xor
mov
out
push
jo
repnz
sarl
xchg
hlt
mov
jmp
inc
sub
add
sbb
pop
nop
aaa
insb
in
or
mov
add
and
and
add
pop
sbb
pop
adc
jo
xchg
and
popf
and
dec
aad
xchg
sbb
or
cmp
jge
jo
enter
daa
pop
pop
add
leave
rclb
xor
jl
dec
or
xor
cmp
test
shrb
sub
in
cmpsb
xchg
inc
in
xchg
sbb
push
push
mov
loope
cmpsb
pop
sub
jmp
popa
movsb
sub
movsl
xor
xchg
fdivrs
sbb
cmp
pop
sbb
pop
xor
addr16
daa
pop
ret
lcall
xor
inc
sbb
mov
pusha
xchg
sbbb
pop
jg
out
mov
scas
scas
mov
call
jp
lret
int
out
fmuls
arpl
lret
push
rcrl
stos
sbb
push
sahf
adc
xor
push
loop
in
stc
jmp
fs
and
and
xchg
sub
cmp
rorl
out
xchg
push
cli
cmc
popa
xor
or
cmp
in
or
into
mov
push
loopne
inc
inc
pop
pop
and
mov
mov
pushf
adc
sbb
add
add
push
cmp
push
jnp
andl
cwtl
push
pop
in
loopne
pop
sti
cld
pop
or
dec
scas
je
push
dec
mov
loop,pt
inc
mov
fdivs
push
aaa
pop
repz
imul
cltd
test
call
cmp
adc
pushf
adc
inc
jmp
daa
pop
fldenv
push
aad
insl
push
inc
mov
dec
or
jmp
dec
ret
cs
je
and
stos
inc
and
pop
or
dec
fisttpl
and
insl
fstpt
inc
inc
inc
inc
std
jle
sbb
mov
dec
js
and
lds
popa
div
inc
add
cmpsl
dec
pusha
inc
push
cmpsl
pop
sub
mov
push
aad
cld
out
push
jmp
mov
pop
push
mov
mov
mov
add
rorb
or
sub
imul
mov
mov
stc
pop
inc
xchg
jmp
loope
mov
xchg
int
fwait
mov
mov
mov
add
psadbw
add
push
cmp
icebp
sub
mov
roll
fldl
add
sbb
lock
push
fistpl
outsb
stos
adc
lahf
push
xchg
or
fiaddl
cmpsb
mov
mov
or
mov
xor
ljmp
xchg
and
xchg
lret
pusha
dec
ljmp
ja
push
inc
inc
jmp
insl
repz
xchg
push
loop
pop
add
push
add
out
jmp
loope
jns
scas
jg
pop
mov
or
xor
loop
or
repnz
shr
jp
xor
cltd
js
mov
hlt
dec
es
insl
pusha
adc
push
fucomip
inc
cmpsb
xchg
lahf
inc
out
jmp
lea
in
out
pop
jo
filds
jg
pop
mov
and
and
sub
movsb
jnp
cmp
inc
in
dec
cs
jl
iret
in
inc
int3
ret
push
pop
stc
mov
inc
adc
pop
jae
adc
mov
in
push
cmpl
xchg
mul
mov
imul
dec
scas
mov
sti
ror
xor
and
or
out
inc
scas
arpl
or
mov
or
mov
mov
das
add
cmp
int3
or
ret
fisubrs
test
jo
inc
test
and
sbb
cmp
movb
pop
mov
jbe
outsb
dec
jge
btr
pop
cld
dec
dec
jno
fisubs
test
in
push
mov
aas
adc
lahf
adc
push
je
inc
test
mov
icebp
dec
cmpsb
adc
xor
js
or
jbe
pop
or
push
push
shl
dec
leave
and
sbb
push
lods
movsl
cmp
sub
sti
ss
and
cld
cltd
sbb
xor
add
out
xor
sbb
pop
pop
xor
gs
push
pop
inc
push
or
lods
xor
icebp
add
or
xor
adc
xor
jg
cmp
js
mov
mov
stos
jp
popf
sbb
int
sub
fadd
stos
idiv
mov
lret
sbb
xor
rorb
mov
lds
jg
cmc
outsl
pop
mov
loop
sub
stc
mov
pop
and
dec
xlat
jge
cmp
mov
insl
ret
pop
mov
cmp
inc
xchg
or
xor
cmc
mov
mov
aaa
adc
xor
adc
or
push
scas
jns
push
pop
test
xlat
cli
fwait
movsb
sub
fst
mov
dec
lock
sti
stos
adc
outsl
adc
pop
movsb
adc
push
repnz
inc
sarb
fsts
stos
les
inc
xchg
inc
push
sti
xchg
inc
lock
arpl
cmp
inc
lahf
pop
pop
ja
hlt
adc
push
fsubrp
push
into
mov
pusha
inc
inc
fiaddl
aas
lds
jb
ret
jo
cmp
je
stc
adc
add
lods
cmpsb
fisttpll
adc
push
mov
mov
sbb
pop
cld
popl
in
lock
xor
icebp
dec
leave
mov
add
mov
sbb
add
aaa
testb
nop
dec
pop
push
jnp
pop
fildll
icebp
cmc
outsl
mov
lret
cs
cmc
mov
jbe
mov
and
lret
sub
in
aam
rolb
es
cmp
insl
insb
cli
test
xor
cld
xchg
sub
adc
popa
push
dec
or
inc
movsl
mov
shlb
jmp
popf
addb
outsl
into
cltd
orb
test
mov
push
cwtl
and
mov
and
rcl
fcoms
pop
movl
push
xchg
push
add
add
xchg
decl
or
call
mov
into
mov
push
outsl
pop
movsb
xchg
dec
mov
inc
orb
or
mov
or
test
add
lods
shl
out
enter
mov
das
add
in
rclb
js
lret
sub
or
mov
imul
mov
sub
mov
ljmp
jne
stos
jae
lods
loop
fisttps
inc
in
jb
mov
mov
xchg
pop
mov
jmp
xchg
mov
mov
lcall
and
mov
xchg
jnp
fwait
mov
in
push
int3
adc
insb
mov
ret
in
xor
test
pop
xchg
jae
mov
push
sub
push
lea
inc
add
xchg
dec
stos
inc
sbb
jl
imul
dec
scas
in
pop
jecxz
test
pop
mov
je
fxch
jne
add
cmp
arpl
mov
sub
jae
lods
aaa
ljmp
add
imul
fimuls
push
lea
sbb
scas
loopne
pop
and
enter
stc
adc
pop
stos
jge
xchg
or
daa
pop
int3
cltd
cmp
test
jl
pop
icebp
dec
out
push
push
mov
inc
and
push
lahf
xor
push
inc
pop
arpl
imul
inc
adc
mov
js
mov
fldt
push
and
adc
sub
and
psraw
ds
rcl
stos
mov
test
aas
cmp
jge
push
adc
add
stc
cltd
xor
pop
add
xorb
loopne
jl
rcr
lcall
and
pushf
mov
pusha
outsb
es
inc
adc
dec
enter
push
mov
jbe
mov
cmpl
lods
stc
mov
shlb
iret
fadds
sub
sub
lret
pop
jl
shrl
mov
or
fidivs
add
loope
loop
movsb
cmp
in
pop
fs
jp
adc
nop
xor
sbb
insl
data16
aaa
movl
mov
pop
cmp
clc
inc
or
add
cmc
xchg
push
loopne
dec
cmp
and
cmp
and
cltd
add
adc
rep
lods
cmp
cmc
cmp
icebp
sub
lret
dec
lods
in
mov
out
pop
sarl
gs
nop
sub
jbe
inc
jecxz
dec
jl
and
add
adc
pop
sbb
repnz
mov
xchg
adc
cli
pushf
rcrb
adc
lahf
insb
mov
inc
cmc
push
push
aas
fs
push
jb
into
or
mov
pusha
je
and
mov
lea
cmp
shlb
jnp
leave
mov
mov
stos
popf
dec
in
scas
xchg
sbb
or
lock
das
sarb
lea
cltd
mov
out
les
rcll
jnp
lret
std
imulb
dec
push
imulb
mov
int3
cs
popf
jmp
mov
mov
mov
inc
out
rcl
mov
das
sub
xchg
aam
test
sub
pop
pop
xor
xchg
outsb
clc
outsl
lods
arpl
movsl
cltd
and
and
jno
idivb
jnp
mov
in
int
mov
push
add
mov
js
pop
imul
mov
fstl
aaa
push
xchg
jo
sbb
sbb
das
mov
fwait
stos
repz
out
push
loop
xchg
cltd
dec
add
push
push
ljmp
out
mov
or
cs
mov
ss
mov
cmp
scas
shlb
pop
mov
das
sub
insl
rorl
lods
sub
sub
add
pop
mov
out
cmpsl
mov
lea
push
addr16
fs
xchg
push
loopne
mov
adc
mov
xor
test
jp
cmp
mov
pop
adc
dec
in
mov
push
iret
pusha
inc
std
fbld
dec
xchg
test
rolb
sbb
ss
stos
and
and
jle
insb
xchg
in
jnp
mov
push
in
enter
jo
iret
stos
ret
lods
pop
les
inc
sub
push
in
mov
push
jg
mov
xchg
movsl
xchg
mov
imul
xor
push
lret
scas
push
rolb
push
mov
cmpsl
xor
in
aas
out
test
jmp
xor
push
or
cs
xorl
out
cli
or
bound
pop
mov
in
fdivp
jecxz
lds
xor
push
test
pushf
movsb
xor
clc
push
cli
lods
sub
xor
jge
clc
push
enter
daa
push
leave
add
bound
jno
pop
inc
jl
pop
or
xor
xor
push
iret
mov
push
sbb
push
test
ss
inc
mov
jl
in
inc
sbb
or
cld
mov
loope
jnp
sub
stc
push
cmp
jnp
movsl
dec
pop
out
mov
pop
jecxz
add
push
xchg
leave
add
push
aaa
xor
imul
dec
inc
pop
aas
call
pop
push
pop
clc
sub
sub
outsb
mov
adc
imul
xor
aaa
cs
push
rcrl
pop
fdivrs
repnz
add
cmc
push
shll
mov
mov
test
jmp
outsl
pop
adc
fwait
push
test
and
mov
fnstenv
pop
jle
cmp
mov
mov
movsl
jp
mov
addr16
subb
pop
movsl
add
dec
lea
loopne
repnz
adc
ret
or
adc
loope
add
mov
das
lods
and
cmp
push
sub
ljmp
and
popa
mov
call
nop
or
xchg
dec
pop
inc
dec
inc
divb
flds
push
inc
repz
ds
int
xor
pop
js
ds
xor
gs
adc
adc
adc
inc
xchg
adc
add
add
out
aam
inc
adc
aas
add
jb
or
add
sub
push
mov
clc
in
dec
cwtl
mov
mov
mov
sub
pop
pop
fildl
addr16
inc
xchg
inc
aad
push
lock
pop
das
scas
lods
mull
jno
jge
jns
fcmovbe
mov
scas
inc
std
popf
inc
dec
dec
push
sub
jp
sti
jo
icebp
mov
adc
adc
pop
dec
cmp
pop
cmp
rolb
es
xchg
ret
push
cmc
xor
adc
clc
stos
mov
xchg
test
int
sbb
popa
sbbl
lods
fcoml
scas
mov
into
push
pop
push
lahf
orb
sbb
call
test
inc
xchg
mov
call
push
mov
mov
cwtl
rcl
jle
fistps
ljmp
pop
sbb
adc
out
mov
xor
dec
aaa
dec
xor
xchg
movsb
or
mov
mov
aam
lret
ret
sbb
ja
fwait
xchg
dec
outsl
xchg
and
or
mov
fwait
repz
push
lret
cmovge
bound
add
sbb
lcall
xchg
push
mov
mov
xchg
imul
scas
addr16
jne
test
daa
mov
fbstp
sbb
jbe
enter
iret
mov
repnz
loop
movsb
filds
jg
sbb
sub
test
xchg
out
lret
movsb
subl
out
adc
je
fnstcw
inc
push
sbb
cmpsb
stos
xchg
jle
and
sub
pop
jnp
mov
in
popf
lock
jo
or
ficomps
inc
inc
inc
xor
in
push
scas
sub
pop
push
incb
jns
cld
cmpsl
inc
sbb
add
mov
addl
adc
enter
and
rolb
loop
arpl
daa
hlt
iret
inc
xor
stos
filds
xor
sbb
push
push
aaa
push
sarb
mov
dec
int3
int3
cmp
ficoms
jge
jo
clc
jnp
sahf
xchg
cmp
cmp
mov
adc
jbe
idivb
inc
push
enter
daa
push
dec
sbb
xchg
sbb
jl
test
dec
les
bound
test
mov
inc
test
add
jle
popf
int3
in
sub
mov
pop
enter
push
icebp
mov
cli
sub
cmpsl
clc
cmp
test
movsl
push
or
popl
adc
mov
sbb
pop
lods
fcom
jg
cmpsb
pop
into
pushf
scas
sub
pushf
addr16
mov
pop
mov
fdiv
scas
push
sub
sub
adc
test
and
loope
les
or
cld
sbb
push
vpsubusb
std
xor
aaa
lods
inc
lret
jmp
mov
inc
mov
test
jge
xor
inc
xor
xor
rcrl
adc
es
mov
das
pop
out
pop
push
cli
shrl
gs
cmp
fbstp
in
into
inc
int
cmc
adc
mov
scas
stos
mov
cmp
adc
push
das
imul
outsb
add
data16
xor
pop
mov
cmp
int3
adc
sub
or
in
mov
sti
mov
repz
jae
adc
mov
frndint
fnstcw
pop
out
repz
sbb
xchg
nop
sub
sbb
aam
ret
mov
in
cmpsb
adc
imul
xor
mov
or
inc
cmpl
jecxz
lock
mov
mov
cwtl
inc
negb
mov
aas
sub
ja
in
pop
inc
pop
repz
cmp
mov
sub
sbb
lock
notb
dec
std
inc
incb
dec
clc
pop
cmpsl
push
sbb
mov
jp
das
cld
lcall
mov
cmp
out
cmp
jle
ret
rclb
pop
sub
add
out
lods
ret
testl
insl
and
clc
in
or
mov
mov
lcall
mov
rcrl
and
jp
xchg
icebp
add
repz
daa
mov
sbb
in
pop
push
loope
vpsraw
gs
fidivrs
std
xchg
int
popf
mov
fucomp
test
enter
shll
sti
xchg
daa
pop
cltd
add
inc
or
imul
pushf
xor
lods
push
mov
xlat
ja
dec
xchg
loope
aad
cmp
pop
pop
dec
bound
adc
mov
push
outsb
lret
ficomps
or
and
bound
aad
mov
test
xchg
movsb
divb
push
popa
bound
sub
add
mov
sahf
jp
fisubrl
shr
mov
mov
sub
iret
dec
pusha
jge
adc
xchg
jmp
cmp
jae
mov
cmpl
imulb
adc
fwait
push
push
jno
stos
or
and
xor
insb
inc
fcompl
jle
scas
cs
push
adc
lret
xchg
ret
cmpsb
pop
aad
movsb
inc
inc
sahf
jae
loop
push
jb
popf
lret
ja
push
jge
mov
jmp
fsubl
imul
adc
sarb
enter
or
insl
mov
hlt
sbb
mov
roll
fwait
or
movsb
add
or
pop
add
push
int3
mov
inc
pop
push
lahf
enter
cltd
lds
pop
popa
scas
jge
mov
jge
or
test
mov
push
cwtl
mov
jbe
lret
dec
jge
jb
enter
daa
push
dec
cmp
jno
jno
imul
dec
xor
xor
inc
lret
lea
imul
mov
xchg
stos
in
adc
pushf
js
xchg
xchg
pop
mov
loope
movsl
mov
adc
sbb
ds
jae
movsl
pop
sbb
shlb
aaa
mov
add
sbb
test
add
paddsb
sub
pop
cmc
xchg
cmp
jmp
movsl
fcompl
test
outsb
dec
jb
adc
lahf
stos
mov
mov
test
mov
cs
push
fxch
jg
mov
xchg
shl
divb
std
rcll
xchg
sbb
push
jl
aas
cmp
mov
std
int3
outsl
aad
or
stc
xchg
cmp
dec
adc
push
ss
dec
cmp
test
and
xor
enter
mov
cmp
jmp
or
inc
into
and
pop
cmc
fcmovnb
iret
loopne
ja
pop
cmc
leave
out
adc
adc
imul
xor
add
popaw
jl
lods
out
mov
xor
lret
xlat
negb
ret
mov
not
sbb
stos
insb
sti
es
jp
dec
nop
mov
hlt
call
f2xm1
mov
les
mov
xchg
push
jnp
sbb
dec
jge
cmp
xchg
pop
inc
sub
incl
sub
jmp
scas
std
cs
jl
sub
or
aas
inc
jp
jb
sub
dec
push
adc
je
mov
push
mov
out
pushf
cwtl
add
mov
cltd
sti
mov
pop
adcl
xlat
jbe
inc
jecxz
aam
loope
xchg
das
insl
sbb
inc
push
adc
fists
mov
aas
mov
icebp
std
jmp
mov
push
cmp
popa
and
cld
lds
cli
mov
cmpsl
mov
mov
mov
popf
pop
shrb
mov
aam
and
ljmp
mov
test
ljmp
mov
fwait
lds
fsubrl
aam
push
loop
psrlw
fwait
add
cs
pop
cmpsl
rolb
sbb
and
or
test
imul
je
shll
add
subb
insb
pop
xchg
outsb
icebp
lods
add
xlat
movsb
xor
add
jmp
mov
fiaddl
dec
in
movsb
repnz
nop
lcall
push
ja
inc
fcompl
or
ret
mov
push
sub
adc
add
sbb
cmp
bound
inc
sarl
lcall
repz
xorb
cmp
mov
push
jp
mov
push
mov
cmpsb
xor
dec
xchg
repnz
pusha
sbb
lahf
filds
or
push
dec
xchg
test
orl
out
pop
cwtl
sub
dec
push
sahf
push
xchg
imul
xchg
add
jnp
mov
pusha
in
jae
adc
mov
ret
xor
inc
dec
mov
sahf
push
xor
lea
lea
